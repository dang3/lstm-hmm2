in
mov
in
sub
push
push
pushl
add
stos
std
jg
push
push
hlt
lea
push
call
leave
ret
outsb
aas
ljmp
cmpsb
mov
add
les
lock
add
in
outsl
pop
push
or
sub
add
mov
fwait
idiv
movsb
add
inc
and
movsb
inc
lcall
pop
add
jg
fists
push
into
xchg
loop
in
add
adc
js
out
fbstp
lods
xchg
add
dec
dec
ficomps
scas
stc
decl
call
pop
jle
add
lea
decb
fs
mov
incb
push
or
iret
pushf
shll
incl
lods
add
and
pop
cmp
inc
loopne
sarb
xor
mov
ficoms
cmp
xchg
sub
push
mov
push
mov
int3
cmp
cmp
es
push
xor
adcb
sbb
sbb
inc
aaa
add
mov
fidivrs
mov
icebp
cmp
outsb
add
sti
push
es
enter
add
jne
adc
xchg
pop
in
push
add
cli
fwait
jns
cld
mov
xchg
and
cmpsl
enter
int
sar
push
outsb
loope
add
lret
outsl
clc
incl
xor
add
add
inc
xor
add
add
add
cld
xchg
sub
adcb
push
add
insl
ret
outsl
mov
inc
ret
sub
sahf
mov
add
jmp
loopne
jo
mov
daa
pop
add
movsb
cmp
fistpll
sbb
sub
or
bound
lret
pusha
out
dec
fildll
out
and
dec
mov
push
nop
insl
ss
add
outsl
push
shll
jnp
loopne
out
loop
jbe
sarl
pushf
add
sbb
in
ja
mov
xchg
cmp
ja
in
jmp
cs
push
add
stos
add
add
shrb
add
dec
inc
xor
or
in
xlat
push
pop
mov
push
and
dec
add
add
cs
or
aam
hlt
mov
lcall
push
or
mov
push
into
outsb
sbb
adc
ljmp
repz
inc
fistl
mov
dec
scas
ds
daa
std
xchg
fistpll
or
mov
sub
add
ja
jnp
xor
adc
cmp
push
pop
sbb
mov
out
sub
dec
std
pop
add
adc
pop
push
xor
outsl
or
fidivl
out
aad
push
imul
fsubs
mov
hlt
inc
mov
and
add
sub
lods
test
je
mov
test
ds
ljmp
inc
daa
mov
sbb
aas
shll
movsb
sbb
push
and
inc
cmp
adc
and
popl
test
hlt
push
mov
shll
dec
insb
sbb
inc
movb
push
xor
cs
cmp
repz
imul
push
shll
pop
xchg
repz
pop
test
repnz
cmpl
movsl
or
push
pop
aaa
insl
cmpsl
fldenv
and
mov
and
outsb
pop
out
adc
sbb
bound
int3
sbb
sub
or
fdivl
adc
xor
jle
xchg
fisttpl
pop
inc
aad
out
cli
repnz
dec
xor
add
shll
and
push
sub
cwtl
push
mov
push
sahf
sub
xor
stc
and
push
xchg
push
push
mov
aaa
xchg
mov
pop
cmpsb
mov
pop
adc
cmp
push
mov
jg
jne
mov
sub
pop
leave
shlb
jb
xor
and
stos
add
sbb
in
sahf
and
in
sub
pop
mov
pop
or
lock
mov
push
mov
pop
stc
mov
push
dec
mov
push
push
push
pushl
add
lea
hlt
fistpll
push
add
and
ret
repz
ds
or
xor
jns
xchg
mov
insb
xor
sub
and
fsubs
repnz
jno
fs
inc
inc
inc
push
scas
dec
push
pop
stos
push
cs
cltd
adc
jae
jl
into
sbb
std
push
push
pop
pop
repnz
push
insl
frstor
and
xchg
mov
jne
in
sub
jb
and
repnz
add
push
in
push
mov
sub
xchg
insb
fdiv
repnz
shrl
push
popa
imul
lret
or
mov
mov
cmp
mov
or
mov
mov
repnz
add
idivl
push
arpl
add
mov
push
sub
gs
shlb
jbe
in
inc
inc
nop
xchg
xor
insb
roll
pusha
mov
push
aaa
lock
iret
push
in
sub
dec
xor
femms
sbb
xor
jnp
mov
sub
rorb
ljmp
fcompl
mov
dec
cs
push
cmpsl
push
enter
scas
repnz
xor
cmp
cmpsb
stos
popf
pop
add
aam
inc
sub
aaa
cmp
cld
and
in
ficompl
inc
pop
je
cmc
pusha
movsl
orl
daa
and
mov
or
jnp
in
and
dec
popf
mov
inc
mull
mull
js
je
int3
push
pop
fnsave
je
jge
sti
or
cmpsb
nop
xchg
mov
test
push
lock
inc
jecxz
add
jge
adc
mov
jle
sub
or
pop
mov
mov
jmp
mov
push
rorl
xlat
pop
ja
push
rclb
jmp
insb
fidivl
fucomip
pop
mov
push
cmp
jp
pop
jmp
inc
adcb
push
add
inc
xchg
jb
clc
gs
push
test
mov
dec
loop
pop
mov
out
shl
push
xchg
xchg
sub
lds
cmp
pop
std
mov
pop
mov
lock
push
lods
push
fs
shll
dec
in
mov
xor
xchg
mov
movsb
inc
out
pop
and
or
add
or
mov
jbe
das
repnz
test
push
loope
jp
leave
inc
ror
fdivrl
inc
lock
lcall
pop
push
sbb
bound
iret
dec
ds
pusha
cmpb
aad
pushf
add
in
jg
jnp
jbe
orl
mov
icebp
mov
mov
sub
sub
pop
pop
int
ljmp
jle
ret
imul
dec
int
jge
outsb
pushf
dec
add
xchg
mov
cltd
push
pop
add
mov
shrb
xor
sbb
mov
mov
add
sub
push
insl
xor
xchg
imul
jbe
add
mov
test
das
rorl
push
cmp
xorb
out
das
mov
mov
mov
mov
add
dec
add
lcall
or
or
pushf
xchg
lods
sub
mov
inc
mov
push
mov
bound
pop
shr
jge
add
icebp
stos
pop
jae
test
fwait
inc
js
fdivp
pop
cmc
cld
pop
mov
mov
inc
icebp
mov
testb
dec
lcall
or
notb
mov
faddl
icebp
fisubs
test
jge
xor
jmp
inc
sub
icebp
push
sub
inc
repz
mov
nop
repz
add
enter
xor
inc
aas
fwait
int
loopne
add
push
cwtl
scas
mov
lock
xchg
xchg
jmp
stos
dec
loop
mov
dec
add
xor
xchg
pop
jecxz
ds
jbe,pt
out
adc
loopne
or
aam
andl
cwtl
add
cmpsl
sub
lret
sub
jne
stos
jbe
cmpsl
test
test
clc
or
push
inc
dec
das
insb
adc
cmpsb
jecxz
sub
fldenv
aaa
or
xchg
xor
clc
dec
out
inc
xchg
mov
cmp
mov
hlt
add
and
movsl
inc
in
clc
sbb
jbe
pop
push
jo
adc
and
push
cli
add
pop
mov
push
idivb
fwait
mov
sar
push
dec
out
push
jbe
push
dec
adc
add
test
inc
je
dec
movsb
or
ss
mov
rcl
test
cmpsl
xchg
pop
sub
inc
roll
icebp
movsl
dec
loopne
inc
repz
jnp
jl
insb
xor
sbb
jmp
add
nop
fcomp
lods
and
pop
pop
dec
pop
and
push
cmc
test
rcrb
or
mov
fs
push
es
mov
xor
fdivrl
mov
sub
dec
inc
aaa
leave
xchg
imulb
sbb
mov
popl
cmp
add
adc
popa
sti
ja
xor
jecxz
push
sub
mov
add
insb
call
cmp
mov
or
mov
out
push
push
fnstenv
cmpl
lock
fisttpl
and
sar
dec
adc
mov
pusha
bound
les
ret
gs
cmpb
test
sub
add
pop
push
pop
adc
nop
pusha
mov
subb
fdivr
in
cs
xchg
mov
jae
mov
add
jne
xchg
cmp
push
iret
xor
lds
fistps
or
popa
mov
movsb
mov
add
daa
pop
aam
cmp
out
mov
dec
adc
cmp
jbe
incl
aam
cmp
inc
bound
pop
nop
xchg
leave
dec
push
jbe
lret
lock
dec
mov
hlt
jo
xlat
dec
adc
test
xor
cmp
pusha
jb
testb
mov
pop
repz
xlat
xchg
jo
adc
sub
je
xchg
sbb
lret
call
cmp
mov
into
mov
cwtl
push
xor
ja
sbb
push
mov
iret
imul
jne
pop
test
js
xor
js
shll
mov
stc
push
roll
gs
add
sbb
pop
dec
sti
xorl
pop
roll
adc
and
jle
or
movsb
jp
outsb
jno
icebp
sbb
cld
ss
popa
scas
adc
shrb
les
fisubs
daa
mov
add
sbb
adc
adc
call
dec
fldl
cmp
jmp
jns
ljmp
mov
dec
arpl
in
jle
fwait
int
dec
enter
or
test
clc
mov
or
sti
pop
ss
inc
mov
sbb
push
adc
and
in
or
xor
xchg
test
mov
push
xorl
dec
in
inc
dec
and
or
inc
or
and
or
ret
ficoml
add
popa
sub
cmpsb
jge
and
and
lea
notb
push
test
addl
test
mov
out
rorb
rorl
stos
dec
cmpsb
mov
out
imul
jns
inc
sbb
or
sub
xlat
dec
fisubl
push
je
ret
stos
ljmp
push
mov
shlb
jecxz
sbb
sar
dec
test
dec
pop
repz
mov
ss
imul
and
adc
leave
andl
dec
stos
mov
pop
sahf
adc
lock
jo
js
adc
dec
mov
or
repz
xchg
sub
and
or
xor
call
cmpsl
rcrb
shl
push
cli
in
add
mov
in
xor
and
outsl
cmp
pop
lock
xchg
sub
mov
data16
dec
mov
add
and
add
scas
and
adc
dec
icebp
test
cli
or
adcl
lret
repz
push
add
iret
lcall
or
imul
fs
icebp
mov
cs
mov
loopne
push
lcall
fcompl
dec
mov
push
sar
adc
jnp
jmp
mov
or
and
test
cmp
daa
and
enter
jecxz
cltd
loopne
in
dec
repnz
pop
inc
dec
movsl
in
add
inc
rcll
jmp
popa
lret
mov
sbbl
sub
imul
stos
xor
push
jge
jnp
xchg
call
pop
lcall
subl
pop
inc
in
xchg
cmp
cmpsl
pop
inc
pushf
dec
or
daa
loopne
gs
jge
inc
popl
pop
add
iret
and
cmp
test
js
mov
pusha
pop
mov
add
cwtl
sub
push
jne
outsb
xor
cmp
push
adc
dec
imul
mov
in
jns
test
xchg
fldl
sub
xchg
mov
jp
outsb
or
cld
outsl
cli
ret
dec
adc
out
mov
insb
rclb
push
in
push
sarb
clc
lea
push
push
mov
inc
add
pop
call
test
dec
pop
pushf
cmp
dec
cmp
pop
lcall
leave
testl
dec
dec
xchg
movsl
addr16
inc
mov
xor
hlt
dec
mov
sbb
mov
xorb
adc
pop
dec
lcall
xchg
sti
aaa
mov
adc
imul
insb
mov
imul
fiadds
xor
out
add
js
out
test
sub
movb
push
cli
inc
push
cmc
or
or
sbbl
ret
int
add
jmp
loope
pop
jbe
clc
dec
add
out
push
xchg
ret
repnz
test
movsb
lods
ficomps
cs
pusha
fsubr
mov
mov
icebp
dec
add
push
and
fwait
jg
inc
leave
bound
lahf
lock
xchg
jg
loop
sub
je
mov
pop
add
or
jle
dec
sbb
enter
mov
sub
loopne
mov
and
outsl
lcall
add
test
scas
mov
mov
sub
dec
shl
int
adc
imul
lret
das
out
pop
sbb
fidivrs
xor
int
dec
mov
lock
cld
daa
dec
jno
and
sbb
xlat
int
es
inc
les
lret
std
pop
xchg
jbe
or
sahf
clc
shll
sbb
cli
and
stos
push
das
jno
imul
pmaddwd
pop
add
push
sbb
mov
aaa
sarb
sahf
pop
mov
loope
imul
jne
jge
and
jmp
lods
pop
data16
sub
push
pop
mov
jl
cmpb
push
add
mov
stos
enter
mov
inc
lods
add
cmp
inc
in
addr16
cmp
mov
mov
and
je
jb
hlt
int
xchg
jg
pushf
adc
mov
pushf
aaa
adc
aam
jns
ds
add
hlt
mov
mov
mov
xchg
out
sbb
shll
inc
ljmp
clc
and
jp
or
mov
pop
xchg
sub
rcrl
push
mov
pop
mov
and
int
jge
inc
orb
sahf
add
or
sbb
sarb
push
jl
int
gs
add
inc
jg
push
xchg
xor
xchg
mov
xchg
pop
inc
movsl
movsb
addr16
sub
imul
movsb
jle
neg
int
adc
std
or
pusha
xor
mov
mov
pop
fwait
rcrb
aad
test
add
ja
add
mov
mov
dec
or
sub
ljmp
dec
sbb
dec
xor
stos
inc
mov
lcall
ret
or
adc
dec
and
pop
lock
movsb
cmp
adc
mov
push
negb
mov
cmpb
xor
add
cmpsb
and
sbb
dec
test
test
gs
jb
jo
and
pop
jecxz
and
add
adc
adc
push
rcll
cld
lret
mov
sbbl
inc
mov
lods
in
pusha
ret
ret
decb
mov
jb
adc
enter
and
pop
push
pop
ret
in
test
fisttpll
ficomps
sbb
cltd
push
hlt
add
or
ficoms
outsb
add
lret
xor
mov
lock
jg
sub
repnz
add
sub
jmp
lret
push
clc
push
lea
hlt
push
ret
in
push
adc
push
pushf
ljmp
mov
lcall
loop
sub
shr
iret
inc
pushf
pop
xchg
mov
pop
dec
adcb
imul
insb
test
pop
or
sbb
movsb
insl
out
ss
js
xor
mov
pop
or
adc
lods
roll
xchg
and
adc
call
jnp
and
cmp
neg
test
gs
lcall
add
xor
stc
jbe
xlat
fisubl
movsb
xchg
lea
unpcklps
jecxz
sub
jns
jno
sbb
or
and
jne
repz
enter
icebp
push
pop
ds
add
xor
fwait
rolb
stc
xor
pop
mov
leave
ret
js
fidivl
sbb
or
inc
cmpsl
mov
xlat
xor
jle
add
add
mov
or
rorl
push
outsb
outsb
lcall
clc
fildl
movsl
push
mov
add
or
pop
lock
sbbl
pop
mov
sbb
enter
lock
xchg
push
push
mov
cmpsb
loop
add
in
adcl
movsl
inc
int
jb
adc
jp
imul
mov
loopne
or
sub
cmp
call
scas
dec
add
fimull
pop
fwait
lock
pushf
insb
arpl
mov
cld
pop
or
mov
add
sub
push
add
enter
inc
push
imul
jae
out
in
dec
loopne
ljmp
push
sub
dec
shrb
lea
fimuls
fidivrs
pop
sub
dec
ret
in
loopne
pop
mov
adc
cmp
incl
sbb
cmp
scas
inc
lcall
mov
cli
mov
mov
sbb
add
push
ja
mov
aaa
lock
scas
sarb
aad
lea
in
lods
push
add
in
push
lock
setae
into
loop
cli
shll
ljmp
scas
outsb
jo
call
mov
call
test
mov
ret
ret
add
lds
and
cld
cmp
les
xchg
pop
and
test
sub
lahf
sub
jbe
or
jmp
add
in
or
adc
xchg
rclb
dec
mov
xor
add
into
xor
cld
add
iret
icebp
cmp
cmpsl
mov
adc
pop
jmp
popf
je
arpl
imul
add
sbb
sti
push
scas
push
add
sbb
imul
in
bound
inc
das
mov
dec
pop
dec
pop
out
jecxz
lret
ja
cwtl
pop
in
sub
call
aas
dec
orb
add
pop
roll
jae
jb
push
outsb
or
dec
xor
push
icebp
and
push
call
mov
in
push
movhps
xchg
std
outsb
mov
rorb
add
push
pop
adc
scas
in
mov
jl
jl
and
sub
mov
jmp
jne
and
xor
xor
cmc
xor
insb
xor
fistps
pop
imul
push
test
pop
push
loop
test
in
lods
sbb
push
dec
stos
push
xchg
call
inc
mov
fsubrs
mov
xchg
aad
lret
aam
xchg
pop
imul
add
inc
pop
sbb
loop
jo
xchg
sbb
vmovapd
pop
cmp
imul
mov
jnp
lock
or
or
mov
test
dec
daa
xor
jns
mov
xchg
bound
sub
ja
xchg
nop
inc
jne
and
push
mov
outsb
popf
scas
add
cmp
jg
xor
xchg
insl
nop
loopne
pop
lods
hlt
into
das
scas
cmpsl
xchg
jl
mov
movsl
add
mov
cs
and
sbb
jle
cmc
mov
scas
gs
push
call
mov
cmp
sbb
pop
mov
and
mov
xchg
adc
and
lea
and
xchg
inc
mov
cmp
ret
push
pop
dec
dec
xchg
sbb
fcoml
jns
pusha
sbb
aas
inc
call
push
push
or
mov
push
push
xchg
clc
mov
pop
push
xor
push
xor
ljmp
fdivrs
out
rcrl
and
or
cmp
aaa
cmpsb
sbb
rolb
inc
out
xlat
sbb
xor
imul
add
add
test
and
aad
xchg
add
inc
popf
jno
xchg
or
push
mov
inc
in
inc
js
push
loopne
jp
xchg
dec
movsb
or
js
clc
js
sbb
pushf
fwait
addl
push
xor
jg
mov
push
ret
lods
and
inc
push
cld
ficompl
mov
aad
popa
test
adc
loop
icebp
adc
imul
mov
sub
roll
iret
mov
and
sbb
pop
scas
stos
and
rcrl
pop
pop
loop
loop
out
mov
mov
neg
or
in
lods
sub
inc
pop
dec
pusha
xchg
pusha
sub
or
push
addl
stos
sub
cwtl
shl
mov
mov
mov
sub
inc
data16
xor
mov
mov
cmp
inc
neg
cmp
sbb
push
testl
jge
ret
xor
fldl2t
ficoml
xchg
and
shlb
and
scas
xchg
mov
xor
cld
mov
sbbb
stos
xchg
push
lahf
aas
jp
jp
push
loopne
mov
jne
lds
pop
cmp
mov
test
imul
scas
cwtl
decb
inc
je
pop
nop
xchg
repnz
add
sub
dec
xor
scas
adc
mov
sub
adc
popf
push
dec
lds
jp
xor
cmp
shll
or
dec
or
inc
out
mov
out
pop
sub
outsb
and
xchg
xchg
bound
shrb
test
sbb
inc
inc
xchg
cltd
popf
popl
lods
jbe
sbb
bound
aaa
ds
jl
ret
stc
xorb
xchg
out
inc
dec
inc
or
push
lret
mov
dec
sub
and
mov
sbb
roll
popa
sbb
cmp
dec
xor
push
subl
fildll
es
adc
cltd
jno
lods
aaa
xchg
inc
push
stc
adc
lds
lock
inc
in
inc
pop
xchg
xchg
in
inc
inc
in
mov
cmp
cmp
popa
fs
mov
outsb
and
arpl
sbb
sbb
stos
xor
inc
lock
sbb
mov
filds
ficoml
test
jecxz
sub
pop
cmp
ljmp
sub
stos
lods
xchg
mov
loopne
pop
jl
mov
stos
movsb
data16
nop
sbb
mov
pop
out
std
loopne
mov
push
ret
sbb
subl
outsb
add
mov
imul
pop
push
jle
scas
je
sbb
mov
fmull
xchg
dec
xchg
aad
insb
outsb
or
lret
lret
nop
das
pop
jge
push
adc
lock
xchg
out
jp
pop
call
cs
jb
sbb
add
add
dec
out
or
adc
add
mov
andl
je
stos
mov
or
stos
sti
jg
add
and
xor
sub
cmc
xor
inc
addr16
rorb
jno
or
mov
push
dec
cmp
in
sub
jo
sbb
xchg
push
xchg
pop
shll
xchg
add
cmp
enter
ss
mov
lds
es
popa
mov
sub
adc
cmp
xchg
in
pop
pop
outsb
xor
test
sub
cmpsl
es
add
rcrb
xor
enter
adcb
lock
push
sbb
sahf
mov
sub
popf
lea
dec
je
lea
inc
inc
xchg
sahf
inc
insb
push
dec
or
inc
aas
daa
dec
fdivs
mov
mov
test
inc
mov
cwtl
pop
mov
add
in
and
or
in
xor
stc
stos
push
outsb
inc
mov
fiaddl
es
pop
add
or
or
test
and
push
pop
pushf
inc
lods
into
jno
adc
dec
fwait
cmp
mov
outsl
pop
int3
sti
adc
or
mov
scas
pop
add
rolb
inc
inc
mov
xor
adc
lods
hlt
push
inc
push
adcl
mov
mov
dec
nop
sahf
out
fildl
je
push
mov
add
movb
fdivs
fstpt
jle
jmp
xchg
int
loopne
int3
or
mov
in
ss
ss
mov
or
pushf
clc
shll
mov
and
iret
xor
neg
xor
decb
mov
inc
cs
dec
imul
xchg
mov
mov
std
and
sbb
mov
pop
popa
mov
lahf
push
pop
jp
fdivs
jbe
push
mov
and
add
orb
nop
iret
inc
dec
sbb
push
push
mov
xchg
pop
aam
pop
xchg
xchg
xlat
mov
lock
test
inc
push
dec
out
out
jne
icebp
call
jle
test
and
adc
fs
cld
fwait
clc
out
ret
mov
inc
xchg
pop
cs
les
aaa
loopne
xor
dec
ret
imul
pop
cs
stos
stos
inc
sahf
rolb
dec
pushf
pop
shrl
popa
scas
outsl
push
push
xor
outsl
add
xorl
push
sub
ss
push
push
mov
mov
xlat
lods
xchg
bound
xchg
or
int3
xchg
add
xchg
ret
fisubrs
mov
test
ret
xchg
or
outsl
push
jo
inc
fimuls
jle
cli
mov
sbb
pop
jbe
dec
pushf
sbb
jno
ret
mov
neg
mov
je
or
pop
push
aam
pop
mov
jb
shll
jle
jmp
pop
into
or
jnp
and
sbb
cmp
out
ja
lods
das
pop
and
mov
adc
push
lret
jmp
mov
pop
aas
loop
mov
and
incl
mov
sbb
add
push
ret
push
push
nop
jne
jl
mov
aas
or
inc
xor
pop
jecxz
std
jecxz
fdivrs
jbe
jle
mov
cmpsb
push
pop
push
mov
mov
inc
shlb
loop
les
push
push
mov
push
or
rcrb
mov
mov
xchg
js
test
shll
fstpt
and
into
je
xchg
lock
jae
sbb
or
xchg
scas
pop
push
push
aas
dec
jecxz
push
dec
lcall
cltd
xor
or
mov
inc
lcall
cli
shlb
inc
cmpb
add
jg
lods
imul
xorb
add
add
dec
fwait
push
lret
gs
orb
ja
ret
jle
shl
cmp
vpaddusw
bound
pop
push
lods
cli
dec
xor
push
mov
cmp
jp
xchg
out
mov
andl
ja
push
lea
mov
push
push
add
dec
inc
xchg
pop
cli
cwtl
sub
loopne
pop
lret
mov
mov
xor
jl
xchg
dec
mov
orb
ret
jno
xor
adc
jecxz
frstor
pop
or
jecxz
mov
in
mov
test
faddl
mov
outsl
mov
mov
arpl
add
mov
mov
in
pushf
sub
lds
pop
pop
int
cmp
push
sbb
or
xchg
and
outsb
add
ss
dec
adc
loop
push
jo
pop
mov
pop
adc
adc
aas
addr16
jno
stos
xor
dec
mov
cmp
mov
enter
aad
aaa
iret
movsb
inc
jnp
cvtpi2ps
sbb
add
pop
test
xor
outsb
push
jno
and
testl
int
sub
push
cltd
and
jge
jg
stos
mov
push
jmp
rol
lcall
ss
movsl
inc
pop
pop
mov
push
inc
mov
daa
lods
rorl
and
decl
dec
mov
inc
mov
adc
and
sub
filds
ret
inc
lret
xor
jp
pop
out
repz
mov
jae
das
sbb
mov
cmp
xor
repz
pushf
and
cs
nop
lock
sub
gs
inc
lret
add
push
inc
cltd
sub
cli
add
and
fwait
inc
fistpl
sub
sbb
lock
inc
dec
bound
and
sti
shll
push
jl
icebp
or
scas
cld
out
or
clc
test
or
sbb
sub
mov
pop
mov
pop
jns
faddl
sbb
stos
dec
pop
popa
dec
push
or
lods
scas
pop
nop
push
das
ds
adc
dec
imul
mov
lods
jmp
pushl
ss
or
adc
cmp
aas
fsubrp
repz
shll
and
add
xchg
insl
pop
dec
mov
or
mov
in
cmp
sub
mov
pop
and
int3
mov
ror
mov
pusha
clc
scas
imul
mov
addl
sbb
xchg
js
jbe
xchg
loope
adc
ficompl
sahf
mov
repnz
xchg
add
lret
stos
fdivl
dec
xchg
add
fidivl
jb
hlt
sbb
orb
fsubl
bound
test
fwait
sbb
adc
insb
dec
inc
adc
push
leave
adc
push
inc
lahf
adc
cmp
jl
mov
lock
mov
ss
pop
or
mov
mov
fcomps
movl
cmc
mov
add
movsb
and
fsubs
ljmp
and
adc
mov
push
fcmovb
xor
repnz
or
scas
xchg
cmp
stos
lods
fcmovnb
pop
pop
cmp
imul
push
push
adc
lret
sbb
push
ficomps
not
jo
cmpsl
and
inc
rcrl
int
psrad
popa
iret
mov
aad
push
out
dec
stos
jns
shr
xchg
add
push
dec
and
push
add
movsb
xor
adc
lds
or
outsl
cld
lds
inc
ljmp
adcb
clc
punpckldq
notb
jae
push
pop
rclb
jge
push
fists
call
mov
shl
sub
loop
sub
cltd
dec
cmp
int
ds
cmp
jo
mov
or
fistpll
xor
in
fcomps
outsb
call
mov
xor
cs
popa
lods
xor
cmp
pop
mov
andl
test
jmp
ss
andl
push
push
pushf
cmp
test
mov
jb
lods
fadds
or
jl
jl
inc
inc
sbb
lds
out
adc
pop
sbb
js
out
dec
add
clc
icebp
repz
or
pusha
push
xchg
mulb
sbbb
sbb
jbe
test
inc
pop
push
inc
jne
xchg
lahf
fcomps
pop
cmc
test
pop
int
aam
lea
int
ret
dec
outsb
or
mov
push
sbb
sahf
pop
adc
arpl
das
cmp
lcall
test
aas
mov
jno
pushf
and
cli
push
sub
fidivs
sbb
ds
add
sarb
add
les
push
cwtl
push
cld
mov
mov
fisttpll
sub
sbb
test
lods
push
add
xchg
aam
push
push
roll
jnp
aas
cmc
jns
mov
lock
lods
push
add
insb
mov
cwtl
inc
cmp
into
push
dec
sub
shl
adc
fiaddl
xchg
orl
cld
sbb
dec
sub
xchg
pusha
add
xchg
arpl
das
adc
sbb
and
addr16
fdivrp
daa
shlb
xchg
xchg
paddb
adc
pop
xchg
cmp
lea
int
movsb
mov
ja
push
sub
rorb
cmp
mov
xor
mov
int3
xor
xor
add
push
push
out
fnstsw
jecxz
xchg
loopne
jecxz
ds
sub
shrb
mov
mov
mov
cli
jnp
je
jl
pushf
cli
shll
mov
repz
xor
xchg
fists
dec
je
movsb
or
xor
divl
fs
push
push
inc
cld
stos
or
jmp
gs
xor
dec
xchg
push
sub
in
mov
hlt
fimull
sbb
stc
add
out
jmp
cwtl
mov
adc
or
jg
mov
das
ret
add
dec
sub
dec
xchg
icebp
lods
ljmp
push
std
hlt
jb
adc
fs
clc
push
inc
push
fwait
jle
pop
push
ret
out
xchg
add
add
cmp
aad
int3
adc
or
hlt
mov
mov
movb
jg
dec
push
add
rorb
add
test
fstps
add
hlt
sahf
mov
mov
stc
push
outsl
popf
lds
jge
loope
add
adc
inc
aaa
lret
mov
dec
or
lahf
fdivl
add
ficoms
lcall
sbb
cwtl
cs
fiaddl
jl
xchg
or
arpl
testb
push
sub
xor
or
rorl
and
and
shll
mov
or
mov
notl
xor
fwait
mov
push
stos
sbb
stos
scas
and
inc
mov
add
inc
push
mov
jp
rcr
adc
push
xor
xchg
stos
jbe
leave
jecxz
jg
or
push
sub
xchg
mov
add
jne
adc
cmpsb
in
mov
lahf
fmul
mov
repz
sbb
call
loope
add
aad
xor
mov
sub
incb
mov
cmpsl
cli
fsubr
loope
adc
mov
addl
push
js
movsb
mov
push
out
add
scas
jo
movsb
leave
daa
add
sarb
cs
inc
iret
or
dec
clc
cld
rcl
inc
inc
xlat
outsl
jne
scas
mov
loop
xor
dec
sub
js
add
hlt
dec
cmp
fldenv
sbb
sub
mov
lcall
add
bound
pop
dec
and
sbb
or
xlat
dec
repz
sbb
mov
fstp
or
cmpsb
inc
cwtl
sbb
push
mov
rolb
cmc
enter
sub
in
jmp
lods
into
shlb
pushf
fidivl
lcall
pushf
sub
sti
ja
mov
mov
fmuls
pop
add
pop
lds
pop
mov
cmp
fldl
lea
lock
pop
sub
ficoml
or
or
shll
jnp
out
add
or
pop
je
jo
cmp
add
sbb
dec
subb
ja
sbb
dec
jb
add
push
push
into
daa
adc
jnp
add
jno
in
cli
pop
mov
jle
adc
push
push
mov
pop
pop
scas
mov
add
inc
scas
stos
mov
lret
fsubs
sbb
sbb
loopne
mov
lahf
decl
mov
jl
jnp
out
ds
sbbb
mov
cmp
popf
es
test
mov
xor
rcrl
add
test
jno
sbbl
and
add
or
icebp
pop
call
stos
add
ret
fcmovb
mov
lret
push
or
data16
cltd
mov
push
mov
xchg
jge
pop
and
subl
ret
cmp
fwait
sub
cli
lock
and
test
clc
loope
aam
jmp
xor
or
add
out
jmp
pop
gs
mov
out
int3
or
add
inc
addb
jbe
or
dec
dec
adc
clc
xlat
notl
push
andb
sarl
movsl
inc
cmp
lock
pop
shr
dec
or
sub
adc
mov
xchg
rcrb
stos
cs
scas
int
repz
out
and
sbb
sub
add
and
fwait
adcb
pop
or
xchg
push
dec
push
push
aaa
adc
loopne
pcmpeqb
fildll
xor
repnz
arpl
xor
mov
sbb
cmp
mov
sbb
push
or
ret
inc
xor
sbb
sti
jg
lret
shlb
fcoms
sbb
mulb
repnz
add
xlat
subb
sub
cltd
lea
push
cs
mov
sbb
hlt
sbb
jp
call
testb
cmp
cmpsl
in
jne
outsl
lock
out
loop
pop
sbb
xor
flds
clc
cmc
loop
xlat
sbb
nop
push
jbe
jg
mov
loopne
adc
push
lahf
lret
rorl
xchg
and
inc
in
inc
insb
jl
add
mov
dec
pushf
hlt
push
push
incl
dec
addr16
adc
fcomi
movsl
push
into
inc
jo
xchg
sarb
jno
loopne
mov
add
mov
test
push
js
push
cmp
jle
mov
inc
or
or
sub
or
pop
lods
inc
push
sbb
or
sahf
data16
jne
mov
ljmp
ror
subl
and
jbe
or
icebp
outsl
dec
bound
sar
jne
jl
adc
ljmp
adc
dec
jo
mov
jge
push
sub
addr16
inc
es
in
dec
cmpsb
and
in
cli
ret
push
fmul
out
jnp,pt
icebp
bound
mov
fisttpll
mov
das
repnz
movsl
jp
mov
sub
add
sar
xor
hlt
dec
popa
mov
dec
cs
fimuls
sub
js
stc
psubsb
ficoms
pop
out
cli
or
or
xor
sub
cs
loop
cmc
lea
xchg
lcall
adc
je
test
jb
hlt
sbb
pop
and
jno
cmp
popa
popl
cmc
inc
movb
fnsave
and
pop
sub
inc
add
sub
jns
popa
mov
add
nop
popa
cmp
sbb
shrl
or
push
push
repz
and
lock
xchg
movb
and
inc
gs
sbb
or
dec
mov
lods
sbb
outsl
mov
jnp
push
or
bound
sarb
in
and
mov
mov
ljmp
es
imul
lcall
fimull
push
push
sahf
xchg
dec
fsubl
cld
sbb
scas
sbb
test
or
mov
cli
pop
test
fdivl
cli
adc
iret
mov
xor
adc
push
sub
cld
setge
add
hlt
adc
adc
ljmp
popf
or
mov
sub
inc
sahf
inc
pushf
xor
pop
cmpsb
aas
ret
mov
mov
add
ret
add
shll
adc
and
lcall
loope
xlat
jns
dec
push
adc
fstpt
popa
inc
push
mov
inc
and
or
and
test
sbb
imul
mov
fs
lock
dec
inc
ret
mov
xor
mov
and
cmp
fsub
repnz
xchg
pusha
mov
cli
clc
jp
sarl
rorl
rcr
mov
outsb
scas
sbb
push
add
jecxz
stc
dec
add
add
jp
mov
icebp
test
or
mov
jae
movsl
fcom
loopne
push
pop
lahf
adc
mov
push
rclb
mov
mov
loopne
into
sbb
and
cmp
or
mov
sarb
mov
mov
push
adc
hlt
mov
outsl
push
scas
jbe
push
dec
int3
xor
dec
stos
cltd
stos
fisttpl
ret
mov
pusha
push
push
mov
shl
mov
out
and
loope
cmp
dec
bound
pop
sarb
inc
ret
stos
fsubrl
lock
roll
pop
outsl
sahf
pop
pop
mov
mov
sub
push
iret
mov
jmp
test
mov
mov
stos
adc
call
ljmp
into
pop
add
daa
mov
adc
push
inc
inc
mov
aas
push
xchg
fcomi
push
jne
fdivl
shr
fiaddl
test
push
lahf
rcrl
sub
xor
fcomi
cmp
cmp
add
inc
sub
dec
or
push
cld
cmp
dec
scas
popl
xchg
xor
fsubrs
shr
jne
jns
mov
ret
jl
xchg
out
add
push
les
scas
mov
adcb
xchg
nop
jge
nop
addr16
sub
lds
cmp
jne
das
mov
rclb
ja
sbb
lods
cmp
sub
test
cli
pop
pop
leave
ret
inc
js
std
inc
out
dec
lock
push
js
pop
push
shlb
cs
push
add
add
jge
cld
dec
mov
lods
mov
jp
mov
sub
cmp
imul
mov
jle
adc
shr
psrlq
add
ljmp
mov
jg
dec
test
add
dec
popa
cmp
lahf
bound
push
mov
mov
fbld
xchg
insl
fldcw
jg
xor
inc
loop
mov
lcall
xchg
mov
pop
or
nop
inc
mov
push
pop
push
mov
addb
sub
mov
daa
fwait
or
cmpl
cmp
or
jns
out
or
movsl
loop
xor
pop
addr16
mov
leave
xchg
ds
js
les
cli
movsb
mov
or
rclb
rcrb
stc
cmp
pop
stos
int
js
inc
mov
add
in
clc
sub
push
mov
mov
mull
sub
mov
loop
push
fistps
push
bound
loopne
js
xchg
sbbb
adc
loope
mov
jno
push
push
mov
outsb
mov
xor
push
ja
sbb
add
adc
imul
mov
push
inc
mov
mov
in
xor
insl
mov
lock
addr16
iret
add
mov
add
aaa
gs
cli
dec
xor
push
cmpb
cmp
dec
xlat
push
cmp
je
nop
stos
push
xchg
sbb
ret
lods
mov
sub
sti
xorb
add
shr
push
jnp
and
popf
pop
les
and
cmpsl
jle
xor
hlt
and
lcall
jl
ljmp
fdivl
add
lods
push
cli
jo
mov
ljmp
inc
nop
mov
lea
int3
decb
stos
decb
pop
enter
xor
insb
cmpsb
call
xor
je,pn
clc
add
fcompl
stos
out
xlat
adcl
jecxz
mov
fidivl
lods
fwait
insl
mov
mov
xor
loop
jmp
push
cli
es
addr16
in
iret
ud0
in
cmp
cmpsb
addb
xor
nop
adc
push
icebp
mov
clc
mov
push
mov
insb
cmpb
inc
fbstp
test
jge
les
pushf
or
cli
aas
outsl
fs
loopne
cli
fmull
cmc
or
jne
jecxz
mov
push
push
push
and
xchg
pop
sbb
fs
popf
xchg
dec
dec
jbe
jo
pop
in
add
pusha
cld
inc
call
shufps
cld
rorl
fnstsw
inc
outsl
inc
das
cli
sarb
call
push
mov
outsb
or
insb
je
call
add
dec
addr16
lods
mov
xlat
fsts
in
sbb
inc
xchg
sbb
push
mov
loopne
mov
dec
push
data16
push
pop
movsb
sbbb
jge
or
cmp
adc
hlt
pop
add
in
dec
cmpsb
mov
out
pop
mov
cmpsl
shl
loop
mov
imul
push
fwait
push
adcl
push
pop
fldt
xchg
clc
push
inc
push
aam
and
jp
daa
imul
sub
cmp
lahf
inc
mov
inc
daa
fdivl
cmp
jle
cwtl
dec
mov
add
sbb
scas
sbb
fidivrs
pop
or
lret
add
mov
push
mov
and
out
ret
dec
das
loope
xor
mov
test
mov
dec
cltd
lcall
push
les
push
jns
cs
push
fcom
pop
jg
add
mov
daa
sbb
and
shlb
cwtl
add
pop
jnp
repnz
lock
test
xorps
pop
lock
in
dec
icebp
mov
lret
data16
lahf
xor
xlat
loopne
mov
aaa
sbb
push
and
push
ficoml
inc
shl
movsb
inc
leave
mov
subl
outsb
xorb
xor
inc
dec
adc
subl
insl
jmp
xchg
jmp
ret
push
andb
xchg
push
sbb
adc
in
cmp
out
push
adc
ficoms
call
sar
sub
stos
imul
dec
stos
push
adc
loope
jle
pushf
cmpsl
inc
and
mov
or
aam
iret
rcl
sub
push
test
lock
jmp
std
fisttps
ds
push
data16
notl
sbb
xlat
xchg
cmpsb
sub
stos
and
ret
mov
aad
add
mov
push
stc
jg
xor
roll
adc
add
scas
sbb
test
dec
and
popf
ret
cmpsl
aaa
jp
cmp
jp
dec
test
sbb
les
inc
ds
dec
xchg
lret
mov
push
movsb
adc
out
xor
and
cmpsb
js
sub
cmp
mov
dec
push
or
les
sbb
jb
push
xchg
pop
sbb
jecxz
test
lcall
fadd
push
pop
ret
nop
mov
jp
in
popa
sti
into
out
cmc
xchg
jnp
sub
xchg
or
pop
fnstcw
out
inc
jns
sub
cld
test
lock
stc
mov
ret
dec
mov
mov
pop
sbb
push
inc
mulb
sahf
test
inc
ficomps
cli
dec
adc
inc
xchg
dec
aam
push
inc
cmc
fincstp
pop
mov
jno
push
icebp
out
cli
int
loope
add
andb
ficomps
sbb
or
sub
xchg
cmpsb
mov
mov
cmpsb
mov
mov
andl
push
jne
rorb
addr16
adc
xor
sub
sahf
and
sbb
es
ljmp
jb
sub
and
sbb
sub
lods
clc
xor
shlb
mov
push
data16
adc
sbb
xchg
ret
int3
out
scas
mov
push
mov
inc
inc
in
and
loopne
mov
dec
loop
mov
adc
mov
xor
flds
hlt
fdivs
jbe
sbb
scas
pop
jmp
lods
and
jmp
lods
sbb
xor
aam
add
aad
add
cmp
xchg
mov
movsb
sub
inc
int3
hlt
or
subl
into
xchg
jecxz
loop
inc
jb
sbb
push
and
adc
adc
mov
or
movd
hlt
lret
xor
jg
and
or
mov
dec
pop
lods
clc
into
daa
push
push
movsb
imul
inc
pop
mov
ret
jl
and
jg
or
lcall
fsubrl
or
sub
cld
ret
arpl
rcrl
loope
faddp
sbb
cmpsb
sbb
hlt
sbb
fnstsw
adc
jmp
push
mov
insb
test
in
or
jbe
ficomps
and
ds
leave
aaa
leave
inc
xchg
out
imul
mov
xchg
xchg
push
mov
xchg
xorb
pop
insb
adc
aas
push
cmc
xor
and
pop
insl
cmp
or
cmp
or
mov
pop
cmp
and
fistpl
mov
jne
inc
aas
dec
push
mov
ret
cmp
xchg
xchg
loopne
mov
mov
ret
das
mov
inc
cmp
cmpsb
jmp
test
andb
imull
mov
xchg
insb
call
push
cld
or
std
clc
hlt
fistpl
push
repnz
add
stos
jp
pushf
pop
jg
rorl
push
inc
dec
mov
iret
daa
add
and
loopne
xchg
sbb
jno
mov
sahf
clc
repnz
int
mov
jbe
lock
imul
or
or
cmp
lods
or
fs
adc
std
add
sbb
sub
movsb
gs
or
or
aas
test
dec
int
in
outsb
iret
adc
outsb
pop
add
adc
pusha
enter
shlb
andb
push
stos
aad
aas
push
or
mov
dec
xchg
adc
jns
lds
data16
inc
mov
cmpl
lret
push
add
sbb
sbb
pop
or
inc
cmp
or
outsb
rcl
cmp
push
xchg
and
ret
test
insl
add
leave
jecxz
push
rol
mov
std
xchg
lret
je
push
mov
sbbb
std
lahf
mov
sti
stos
push
ret
clc
mov
les
push
xor
add
jg
sahf
lea
push
push
les
mov
mov
ja
push
add
arpl
dec
cld
push
ss
sahf
clc
push
outsb
jl,pt
sub
xor
pop
add
clc
mov
shll
les
push
mov
aad
xchg
les
mov
out
push
or
xor
adc
xchg
push
mov
aas
daa
imul
test
ljmp
loop
mov
aaa
mov
arpl
or
mov
sbb
mov
push
add
push
dec
aaa
inc
mov
inc
adc
or
jo
add
imul
out
add
mov
inc
pop
lods
mov
inc
dec
xchg
shrb
mov
fcomp
testb
pushf
out
or
push
and
adc
in
addl
jnp
aam
mov
lods
call
mov
mov
loopne
xor
call
out
push
imul
mov
fwait
add
sbb
cld
cmp
into
scas
mov
pop
sbb
and
or
jp
push
stos
pop
aam
pop
call
push
ds
mov
push
jmp
add
push
mov
cmc
cmp
jecxz
js
adcb
dec
lods
add
fwait
into
test
sub
test
xor
mov
nop
inc
push
js
arpl
dec
jnp
sti
lcall
mov
adc
test
insl
pop
push
roll
mov
mov
adc
pushf
sub
lods
inc
jecxz
into
dec
sbb
clc
mov
xor
xchg
js
push
and
frstor
xchg
sbb
xchg
adc
leave
scas
mov
jle
pusha
js
cmp
lds
inc
mul
mov
and
adc
shlb
jle
gs
sub
mov
xlat
pop
mov
xor
sub
cmp
add
add
in
dec
aad
dec
xor
push
enter
or
fmul
mov
jmp
aam
mov
decl
loop
mov
cmpsl
inc
push
pop
popa
sbb
adc
push
mov
lods
mov
xor
es
call
das
inc
cmp
adc
and
sbbb
push
cli
push
int3
aam
inc
jns
adc
mov
inc
outsl
dec
push
in
cmp
incl
adc
fdivrl
dec
insl
mov
sbb
xchg
push
cmp
mov
call
mov
daa
cltd
pop
xor
dec
insl
xor
and
stc
insb
adc
shlb
aad
rorl
in
pop
fimull
pop
or
mov
mov
xchg
push
insb
scas
pop
aas
pop
movsl
je
jmp
mov
aam
sub
gs
insl
orb
movsl
ja
dec
lds
adc
insl
or
mov
dec
mov
jge
adc
jb
mov
cli
shlb
je
push
jnp
leave
dec
add
or
loopne
ja
adc
aam
and
push
and
call
and
inc
or
push
cmc
mov
inc
pop
inc
rol
mov
enter
push
test
loop
mov
xor
fdivr
jb
xor
movsb
push
sbb
fsubrs
cmp
lret
inc
pushf
lcall
rorb
or
cld
ret
and
jle
pop
ds
add
mov
mov
jp
iret
test
push
mov
ja
enter
add
inc
in
fcoml
loopne
lret
add
push
jb
test
hlt
mov
or
mov
test
lahf
jb
add
inc
lahf
fistpl
lods
shl
les
dec
jno
lock
pop
icebp
testl
inc
ret
pop
push
fsubl
shll
popa
sub
movsl
xchg
div
icebp
cmp
mov
add
mov
xlat
out
jae
out
sub
std
scas
add
inc
pop
dec
lret
mov
pop
fisttpll
mov
pop
xchg
fadds
jmp
stos
dec
jb
xlat
add
clc
ret
add
jae
sar
xlat
and
adc
stos
lock
or
pusha
in
fiadds
ljmp
je
sub
addb
test
push
sub
pop
loope
repz
pusha
xchg
inc
ss
mov
adc
jae
in
scas
pop
sub
sub
aam
add
jmp
add
push
push
scas
xor
popf
loop
jecxz
imull
and
cmpsb
shlb
push
or
xchg
scas
jl
jo
fs
inc
add
repnz
pop
push
icebp
push
mov
and
xor
jge
mov
pop
mov
cli
xchg
xchg
insl
hlt
lcall
push
int3
dec
push
add
cmc
adc
dec
in
push
inc
add
rolb
sbb
sub
lret
xlat
pop
and
pusha
ret
into
clts
cld
add
push
dec
mov
loopne
dec
adc
fs
pop
mov
pop
arpl
nop
pushl
mov
out
mov
pushf
mov
xchg
mov
xor
subl
sub
pop
insl
and
mov
lds
nop
lcall
and
lods
clc
pop
testb
pop
or
xor
and
push
push
and
aad
xor
inc
mov
mov
pop
add
fsubr
inc
and
aas
mov
or
aam
jbe
rcrl
test
add
psubb
stos
lcall
xchg
xor
popa
jbe
push
push
ja
and
ljmp
or
loope
mov
push
decb
lock
lret
dec
aad
jmp
clc
pop
imul
and
xchg
sub
pop
mov
aam
int
or
stos
inc
jb
mov
jl
pop
mov
push
mov
mov
cmpsb
test
xor
push
cli
xor
lret
or
in
sub
rolb
mov
loope
adc
sbbb
inc
push
xor
jle
insl
xor
push
shl
mov
xor
in
loop
mov
lds
sub
das
mov
fcompl
inc
int
fisttpl
incl
imul
inc
inc
cs
rcr
sarl
mov
lods
into
fcompl
jns
fdivrs
xor
adc
scas
mov
sub
inc
pop
mov
mov
movsb
mov
je
sbb
rcll
sbb
aas
sbb
xchg
jecxz
xchg
das
lret
enter
sarb
out
inc
or
mov
fistl
lahf
sar
add
jp
push
lret
rcrb
fwait
stos
sbb
fsubl
pop
mov
pop
in
or
dec
cmp
lea
outsb
fidivl
mov
imul
sbb
mov
aad
xor
mov
sub
push
adc
cmp
dec
ret
ljmp
sub
cmp
cld
pop
rolb
sbb
xchg
jge
cltd
fwait
jmp
pop
loopne
push
cmc
mov
movl
sahf
mov
add
inc
insl
rolb
call
test
imul
jge
rcr
jge
scas
add
sub
movsl
or
dec
hlt
pop
addr16
pop
xchg
sbb
fisubrl
adc
jp
push
xchg
inc
clc
out
lods
inc
xchg
jg
inc
fidivl
loop
pop
loope
out
daa
xchg
in
add
test
sbb
shl
nop
imul
jo
stos
xchg
pop
mov
int3
mov
push
adcl
mov
shrl
lds
shl
ds
popa
push
sub
xchg
cwtl
fprem
push
nop
sbb
and
data16
outsb
sbb
out
jno
int3
shll
add
xchg
mov
sbb
pop
frstor
pop
add
aaa
dec
cmpsl
add
xchg
dec
sub
xchg
mov
add
pushf
mov
aaa
jl
pop
sbb
push
mov
mov
adcb
out
scas
iret
mov
lcall
int
add
jge
stos
scas
jp
mov
xchg
add
clc
aas
jp
inc
mov
sar
add
cli
and
test
scas
pushf
std
mov
push
or
bound
adcb
cmp
aaa
pop
mov
mov
hlt
add
adc
lahf
test
adc
adc
cltd
push
cld
scas
xchg
inc
cli
fbstp
jo
stos
fs
cmp
repz
insl
add
ret
ja
add
mov
xor
adc
adc
std
mov
mov
call
mov
vorps
inc
cmpsl
dec
loope
add
jecxz
mov
or
push
mov
cmpsb
insl
clc
dec
lock
push
jb
scas
incb
push
cwtl
add
sub
mov
pop
mov
push
push
sub
std
inc
mov
inc
dec
or
arpl
int
xchg
ficoml
sahf
mov
jno
lock
mov
out
icebp
fldenv
jle
pop
andb
pop
jecxz
pop
cmp
mov
push
sub
pop
icebp
mov
mov
lret
cmp
jle
add
xchg
mul
push
sbb
pop
mov
cmpsb
out
xchg
in
push
repnz
pop
jp
pushf
mov
mov
cmp
call
ds
cli
mov
pop
icebp
inc
stos
popf
cmp
xor
shrb
jo
add
push
or
notl
ljmp
out
mov
and
mov
or
jge
sbb
nop
fs
xorl
loope
fdivrs
fidivs
lahf
scas
cmp
js
push
rcrl
dec
loop
jb
inc
cmp
ss
lahf
shrb
xor
rorb
mov
and
adc
ret
or
sub
repnz
inc
repnz
xchg
nop
mov
inc
imul
lock
adc
mov
xchg
add
jo
jp
dec
jmp
cmpsl
icebp
push
test
mov
or
sbb
sub
lods
mov
push
leave
subl
xchg
movsl
shlb
pop
cmp
xchg
add
sbb
cwtl
and
icebp
add
fstpl
loope
out
into
cli
sbb
or
sahf
lods
xchg
rol
lret
ljmp
adc
adc
push
enter
dec
mov
add
add
in
sbb
movsl
xchg
push
dec
cmp
and
les
pop
add
or
push
cmp
cmp
clc
mov
add
adcl
push
call
pop
inc
dec
mov
inc
sub
clc
mov
lock
inc
mov
or
sar
sub
lcall
add
outsb
and
add
sub
sbb
ds
xchg
push
loope
jmp
cmpsl
imul
rolb
stc
outsl
sub
or
pop
or
mov
xchg
jnp
and
nop
movsl
xchg
mov
stos
sbb
dec
xlat
or
cmp
test
icebp
and
adc
push
popl
arpl
lea
mov
jl
rorl
lcall
adc
jno
jle
push
jge
aaa
add
jns
fwait
test
push
ret
ret
cmc
jmp
push
xchg
xor
jo
add
cli
stc
adc
lret
imul
mov
arpl
pop
pop
out
fldl
jge
mov
adc
pop
clc
adc
lret
push
jecxz
jno
jno
bnd
cmc
fisttps
scas
sti
jno
aas
icebp
outsb
sbb
or
mov
push
adc
sub
jg
test
mov
popa
decb
les
mov
adc
add
pop
ss
lock
cmpsl
xor
adc
lcall
sbbl
mov
call
pop
mov
mov
xor
push
xchg
pop
jg
sub
test
cs
jae
faddp
outsl
repz
stc
mov
shll
ficompl
pushf
pop
filds
adc
push
sahf
retw
lds
dec
mov
outsl
shr
cmc
cli
data16
dec
and
outsl
xchg
mov
cmpsb
mov
aaa
xor
add
or
lcall
dec
dec
in
decl
sbbb
mov
fsubl
mov
movsb
popf
ret
push
and
jecxz
stc
cld
dec
fcmove
aam
test
mov
adc
inc
cmp
sub
pop
or
xlat
cmc
xchg
or
pop
sub
pushf
push
rorl
out
cmp
addb
add
std
fcoml
xor
inc
pop
insl
jnp
pop
mov
popf
and
outsl
test
js
dec
hlt
xorl
jle
sbb
das
jbe
mov
test
dec
jne
push
add
mov
mov
mov
fdiv
cmc
fsts
ja
add
in
out
jl
repnz
dec
clc
pop
push
mov
popf
mov
jb
jnp
inc
pop
hlt
iret
bound
jl
or
mov
aas
lods
and
rolb
mov
and
jl
xorb
push
pusha
pop
push
cs
and
push
sbb
outsb
and
adc
aad
mov
xchg
shrb
test
inc
mov
jmp
push
nop
mov
xor
ljmp
imul
and
push
sub
push
test
shl
inc
mov
out
push
cmp
imul
cmpsb
pushf
push
out
sti
mov
xchg
pushf
jp
mov
movsl
mov
add
xchg
push
lock
shll
mov
cli
xchg
aad
xchg
pop
cmp
dec
cmp
enter
loopne
cmp
adc
out
jb
xorl
or
out
hlt
ljmp
jae
xchg
cmp
push
xor
inc
dec
std
pop
mov
aam
int
scas
nop
xor
inc
shll
negl
inc
gs
or
add
insl
mov
nop
mov
xchg
or
leave
sub
arpl
lret
sbb
ret
xchg
mov
daa
pop
lods
or
test
xchg
mov
xchg
or
test
test
jmp
call
xchg
ja
scas
pop
sbb
xor
dec
rolb
xchg
cmp
mov
sub
mov
xchg
mov
adc
pop
sbb
inc
mov
cwtl
gs
daa
and
pop
popf
icebp
loope
mov
or
and
or
pop
loope
fbld
das
or
popa
aaa
fwait
dec
add
sub
movl
inc
push
push
jbe
push
mov
movsb
push
clc
pusha
xor
adc
cmp
out
scas
xchg
in
sbbb
or
lods
pop
mov
push
enter
or
js
loope
loopne
jne
adc
sub
cmc
adc
xchg
stos
test
sub
cmc
stos
repnz
fldt
jecxz
push
xchg
push
adc
cs
mov
inc
in
stos
ja
stos
push
popa
mov
push
adc
lret
incl
call
insl
sbb
dec
test
scas
rclb
cmc
insl
popf
movsb
pop
mov
cmp
push
out
adc
xor
mov
add
xchg
cmp
pop
sub
or
rcl
push
pushf
jns
push
lahf
push
popf
cmc
movsl
cmp
icebp
lret
or
popf
scas
sbb
add
adc
dec
out
or
test
lcall
scas
cltd
dec
pop
sub
jnp
les
or
mov
pop
xchg
mov
cmp
adcl
mov
pop
add
xchg
push
lcall
clc
shl
bound
stos
mov
jbe
addl
lret
add
cmp
cmp
loop
cld
pop
mov
sub
je
movsb
fcomi
jbe
xor
inc
jmp
or
xchg
push
jo
xchg
frstor
dec
sub
jg
addl
filds
lds
ret
push
add
or
out
call
push
adc
mov
jmp
cmp
test
xor
lahf
add
dec
pop
push
pop
jge
mov
rcll
sbb
pop
stos
inc
cmp
add
lcall
xchg
cmp
xchg
mov
xlat
xlat
add
mov
call
stc
push
in
push
test
inc
out
add
mov
xchg
or
or
xchg
xor
dec
sub
adc
pushf
lock
jmp
popa
gs
inc
bsf
and
lock
dec
inc
fwait
lock
pushl
pusha
sub
jmp
ret
lock
mov
shlb
cmp
in
mov
xor
jp
xor
xor
and
pop
mov
gs
scas
ljmp
xchg
push
inc
movsb
push
xchg
mov
test
mov
pop
push
jno
add
pusha
fs
mov
push
xor
pop
xlat
pop
lock
or
fildll
cmp
sbb
jnp
addb
ss
push
inc
pusha
cmpsl
stos
rcrb
dec
ja
ret
addr16
xor
or
or
dec
lea
cmp
fsubl
xor
nop
add
or
movl
push
test
push
dec
adc
push
ja
push
lea
pushf
push
test
jae
mov
pusha
in
loope
mov
loopne
popf
xor
cmpsb
add
push
mov
arpl
lret
adc
mov
jecxz
or
jae
clc
aad
push
das
pop
test
inc
stc
repnz
or
jmp
adc
inc
pop
mov
mov
fnstcw
or
adc
out
movsl
lret
and
sub
or
sub
mov
loop
add
insl
lret
es
and
push
sub
push
and
mov
cld
in
ja
call
dec
leave
mov
inc
dec
adcl
aad
stc
loope
mov
dec
mov
loop
add
xor
daa
mov
jmp
xor
test
push
dec
in
iret
push
bound
dec
inc
out
xchg
stos
jo
pop
loopne
sub
out
imulb
lret
mov
dec
mov
shlb
pop
or
mov
push
les
stos
and
cli
repz
sub
js
sbb
add
pop
test
sbb
outsl
xchg
push
push
loopne
mov
cmp
aaa
ds
sbb
lods
ret
mov
popf
testl
mov
xchg
inc
push
fmull
lds
movhps
das
incb
pop
fiadds
mov
cmp
mov
data16
jmp
inc
fnstenv
xlat
push
push
fs
fldl2e
add
mov
aam
popa
inc
gs
lahf
push
mov
lahf
jbe
adc
test
outsl
xchg
rcrl
pop
lods
mov
js
test
push
cmpsb
repz
fistl
inc
mov
adc
sti
test
jne
fimull
sbb
mov
lret
push
shrb
fistl
xchg
das
rorl
imul
scas
sub
or
adc
jle
xor
jns
mov
ret
sbbl
ficomps
addl
xchg
inc
popa
mov
fnstcw
pop
outsl
lock
adc
add
ret
outsb
ret
or
jae
add
icebp
std
mov
jecxz
push
jle
dec
cmpxchg
fistpl
daa
mov
mov
xchg
mov
jo
out
shrb
popf
jne
inc
inc
decl
sbb
into
xor
enter
ss
fwait
mov
mov
pushf
mul
xor
adc
icebp
shrl
pop
out
outsb
dec
cs
dec
addl
sub
es
test
sbb
adc
mov
jle
xlat
pop
popf
in
inc
sub
mov
and
rcrl
push
jbe
mov
xchg
sbb
lahf
jnp
sbb
mov
je
push
cmp
lea
add
fs
aaa
push
add
dec
push
mov
adc
jo
out
cwtl
adc
xchg
fucomp
cmp
or
subb
xor
clc
inc
mov
push
mov
test
ds
adcl
sbb
jp
int3
add
add
sbb
cltd
jg
cwtl
sbb
mov
mov
nop
cmp
clc
sbb
cs
insb
lea
les
or
pop
rcll
movsl
shl
push
out
lahf
sbb
pop
mov
popw
shl
push
fidivs
shl
test
sbb
adc
loope
adc
filds
xchg
jbe
fdivr
push
mul
movsl
mov
fwait
pusha
add
loopne,pn
repz
or
rorl
jg
shlb
out
dec
and
cld
push
dec
pop
adc
fsubr
or
jno
dec
bnd
cs
lcall
xorb
call
dec
movzbl
movsb
xor
inc
inc
jge
shlb
addr16
js
es
rcrb
or
push
adc
or
push
push
and
cmp
sbb
jl
ljmp
xchg
mov
je
scas
rol
movsb
sub
nop
fiadds
setno
jne
cmpsl
pop
push
or
ret
cmp
mov
or
sub
and
or
insb
orb
and
int3
dec
xor
pop
mov
test
cltd
imul
dec
pop
stos
lcall
mov
test
sbb
ljmp
push
lock
arpl
rorb
and
adc
pushf
xchg
push
push
xor
in
xchg
push
add
cltd
loop
pop
sub
mov
lahf
js
je
pop
cmp
cld
shufps
adc
sbb
hlt
sbb
and
sub
jb
imul
shll
pop
leave
in
stos
lods
pop
or
test
sbb
jge
addr16
pop
adc
xor
mov
xor
pop
dec
mov
xchg
push
mov
adc
enter
xor
cli
inc
and
cmpsl
stos
push
das
push
inc
andl
mov
fidivrl
push
sahf
std
mov
add
popa
loop
xchg
mov
jns
sbb
aas
pop
ret
jo
mov
std
test
sbb
jge
pop
aas
lret
xchg
repz
movsl
orb
subl
inc
sti
add
stos
mov
xchg
in
add
jbe
xchg
scas
lea
adc
imul
xchg
mov
test
stos
cmp
dec
pusha
sub
test
push
inc
mov
xor
pop
in
roll
loop
jmp
jg
adc
and
shll
push
bound
ret
push
dec
adc
scas
stos
jge
dec
shrl
mov
aaa
xor
inc
mov
mov
popa
mov
inc
iret
fucomp
adc
or
cmp
push
jp
sbb
add
push
ljmp
notb
or
shlb
fs
movsb
pxor
pop
xchg
mov
add
sbb
jg
mov
sub
adcl
fucomip
lret
dec
inc
mov
adc
mov
mov
jecxz
and
xor
fidivl
shlb
in
jmp
mov
cmpsb
gs
inc
mov
push
movsl
aad
mov
dec
lcall
lret
mov
or
rolb
int
xchg
mov
push
insb
int3
shld
jne
iret
xor
rclb
rcll
adc
rcr
adc
jmp
in
test
loopne
cmp
mov
or
or
mov
adc
cmc
loope
int
aad
cwtl
xor
rcrl
repz
or
sbb
scas
scas
std
stos
push
fnstsw
test
pop
inc
pop
clc
lcall
mov
push
mov
dec
sbb
dec
ljmp
loop
int
pop
mov
lds
mov
pop
xchg
push
mov
hlt
loop
aaa
sub
cmc
adc
lods
mov
mov
cmp
ja
std
xor
xchg
push
nop
incl
xchg
add
loop
mov
sti
mov
push
dec
jb
into
push
add
sub
dec
mov
ss
push
out
mov
adc
jne
sub
inc
lods
xor
imul
inc
andl
xor
push
popa
jae
dec
fldenv
stc
shlb
lret
out
push
and
insb
aam
addb
jle
ret
pop
aas
lret
jbe
push
sbb
shlb
sbbb
jnp
xor
push
addl
rcrb
push
inc
jle
bound
inc
push
lds
adc
jge
xor
add
or
or
lahf
pop
xchg
shlb
inc
sbb
and
jo
jmp
lock
push
adc
dec
mov
pop
mov
addl
dec
movsl
dec
pop
stos
lret
mov
mov
sbb
clc
mov
je
jge
dec
xchg
scas
cmp
dec
jo
cmc
cmpsl
push
dec
push
sbb
cmp
imul
fnsave
clc
test
shrd
pop
imul
or
adc
cmp
dec
mov
inc
jg
lock
sahf
sbb
mov
cli
das
rorb
sub
xchg
das
mov
mov
lea
sbb
sub
dec
inc
lahf
adc
std
sbb
push
or
fsubs
insl
mov
mov
mov
sbb
inc
jnp
pop
lret
pop
inc
push
xor
lods
loop
into
xchg
mov
pop
movsb
js
xchg
mov
insl
or
push
test
shrb
out
stc
inc
arpl
lea
pop
adc
loopne
ss
into
loope
jo
or
cmp
repz
testb
xor
or
mov
shrb
fimull
pop
icebp
mov
add
or
bound
call
pop
add
into
mov
int3
js
dec
or
outsl
fimull
das
xor
push
push
cmp
loopne
push
lds
mov
addb
pusha
push
inc
push
xchg
sbb
jne
mov
adc
in
cmp
push
ds
orl
mov
popf
jg
adc
jnp
dec
inc
push
cmpb
aam
adc
xor
mov
enter
incb
outsl
cmp
cmp
rclb
cmp
and
enter
push
jbe
mov
mov
or
add
xchg
mov
push
cmpsb
push
cld
outsl
js
inc
xor
add
jno
adc
push
cmc
in
adc
push
icebp
sbb
outsl
add
in
icebp
sbb
push
jecxz
mov
pop
or
in
mov
imul
inc
subps
xor
pop
in
scas
pop
rclb
jae
xchg
mov
xchg
sub
lock
jbe
adc
movsb
or
cmp
add
mov
xlat
mov
xchg
subb
inc
call
outsb
or
pop
mov
xchg
inc
pop
orb
or
popa
or
mov
in
xchg
jne
shll
stos
and
je
sbb
and
xor
pop
mov
sahf
or
push
jmp
rorb
cmp
and
inc
popf
int
test
add
mov
push
jl
mov
xor
pop
in
jno
lahf
test
cli
fwait
xchg
fidivrl
xchg
int
sub
idivb
rorl
mov
nop
xchg
addl
or
xor
inc
push
mov
push
mov
and
insb
xchg
pop
ds
jg
jg
test
adc
mov
ss
push
dec
fists
out
ja
pavgb
push
or
cwtl
mov
push
jnp
jle
shlb
cli
out
fsubs
sbb
fldl
loop
cmc
xchg
adc
aam
cmpsb
jp
daa
rcrb
frndint
outsl
lahf
or
and
pusha
mov
mov
lcall
mov
jge
dec
xchg
xor
loop
scas
rolb
in
repz
cmpsb
push
xor
fisubl
push
fldl
sbb
shrb
std
cmpsb
pop
aas
call
mov
push
mov
pop
add
adc
add
test
mov
nop
dec
adc
sub
mov
cmpsb
mov
pop
add
or
mov
or
mov
lahf
mov
inc
movsb
xor
outsl
sub
push
adcl
imul
mov
rclb
mov
call
inc
sbb
test
pusha
sti
xor
cmp
mov
out
sub
pusha
aad
inc
and
ret
fiaddl
sub
mov
ss
loope
adc
xchg
rclb
movsb
stc
fcoms
push
sub
inc
ficomps
ret
fadd
sbb
out
fstpl
push
imul
adcb
jmp
ja
mov
addr16
fwait
andb
and
mov
pop
test
adc
sub
mov
push
je
dec
push
or
inc
jno
pusha
jmp
add
pop
jmp
jl
mov
pusha
leave
add
xor
cmp
fwait
mov
pusha
pop
dec
sub
and
pop
hlt
add
inc
test
rcrb
mov
dec
sti
scas
and
pop
and
movsb
push
sub
out
repnz
stos
push
adc
mov
jb
lea
sub
fsubrs
jno
loopne
pop
sbb
mov
add
sub
dec
cmpsl
lock
inc
pop
std
pop
jecxz
mov
in
jno
cmpsl
xchg
ficoms
inc
imul
jno
jo
ror
xchg
dec
andb
pop
repz
sub
cli
jmp
mov
shll
cmp
jp
mov
addr16
pop
pop
movsl
scas
push
lea
and
cmp
mov
cmp
into
xchg
popf
je
pop
lea
lea
pushf
pop
addl
sbb
outsb
les
sub
mov
inc
dec
pop
pop
sub
inc
inc
movsl
dec
test
pusha
xchg
jb
pop
mov
add
xchg
out
rep
or
insl
push
dec
mov
mov
test
cmpl
xchg
add
es
inc
fsubs
xchg
or
inc
test
arpl
xor
add
adc
jecxz
lret
fiaddl
insl
jmp
shl
push
xchg
add
sahf
aam
test
pop
aam
cmp
jne
hlt
dec
ds
add
add
inc
dec
out
ss
xchg
lock
pop
ficompl
xchg
bound
sbb
push
inc
cmpsl
stc
and
pop
aaa
je
fs
loopne
daa
addr16
and
testb
xchg
bound
idiv
fs
dec
mov
jno
aam
sbb
insb
pop
rcrb
orb
add
mov
rorb
nop
out
sbb
sarb
aaa
hlt
imul
js
push
pop
pop
add
int3
pop
mov
rcr
cmp
movsb
outsb
push
push
push
out
and
dec
pop
shrb
ret
xchg
testl
movd
cmpsb
leave
mov
jl
sbb
adcl
scas
fstpl
push
jle
xchg
dec
add
inc
mov
lahf
mov
psrld
out
dec
adc
add
pop
pop
insl
inc
mov
sub
cmp
mov
daa
pop
sbb
or
mov
mov
cld
mov
inc
mov
mov
mov
pop
mov
xchg
pop
jmp
out
pop
and
std
les
add
pop
std
leave
dec
ret
pop
sahf
xchg
and
or
mov
mov
pop
scas
mov
loopne
mov
pop
push
iret
xchg
push
lock
add
mov
jge
fwait
adc
xlat
push
lcall
shlb
je
jecxz
cwtl
jmp
mov
icebp
clc
std
pushf
enter
adc
inc
pop
out
push
ljmp
mov
outsl
ds
imul
cmp
scas
mov
out
cmp
icebp
add
or
adc
lea
mov
ljmp
fsubrl
xor
cmp
repz
push
cmp
hlt
shlb
loopne
add
inc
xchg
test
sub
out
sahf
adc
std
and
sbb
jmp
cmpb
imul
pop
hlt
hlt
sub
outsb
add
mov
pop
ljmp
push
inc
in
pop
push
mov
xor
push
jle
mov
lods
les
int3
loopne
int
pusha
data16
sub
jns
stos
divb
mov
pop
aaa
ret
jne
shrb
cmp
push
dec
outsb
decb
mov
push
dec
mov
mov
push
xor
out
call
mov
std
lcall
jbe
incl
movsl
stc
pusha
negl
push
push
mov
movsb
int
push
adc
push
mov
clc
aas
xchg
repz
add
into
scas
jns
mov
cli
and
insl
cli
lods
cmp
mov
addb
or
sbb
lcall
mov
in
xchg
pop
lock
push
add
addl
popf
dec
xor
xchg
or
mov
mov
mov
or
and
out
outsl
fadds
shl
insl
imul
lods
cltd
jne
add
test
shl
mov
mov
les
jnp
lret
push
je
cmpl
mov
sub
push
cs
push
or
mov
xorl
and
lock
les
lods
movsl
mov
push
subw
aas
mov
je
lcall
mov
mov
push
cmp
out
das
adc
in
xchg
icebp
nop
and
and
test
pop
inc
or
popa
mov
in
and
in
adc
jnp
push
mov
dec
push
fwait
cmp
in
fbld
in
test
or
loopne
or
add
cmpsl
dec
clc
decl
out
iret
outsb
sbb
jbe
push
sub
ficoms
or
aaa
and
inc
xor
jg
pop
or
shrl
shll
or
bnd
push
lea
es
fdiv
std
in
pop
aas
jle
scas
mov
mov
inc
loopne
sar
ret
dec
stos
sbbl
sbb
shrl
or
xchg
sub
push
das
adc
mov
inc
xor
pop
mov
iret
pop
cs
sbb
enter
inc
xchg
add
mov
push
cmp
mov
xchg
adc
jp
stc
ret
scas
mov
mul
add
add
sub
addr16
aas
xchg
add
lret
sbb
test
or
add
movsl
bound
xor
xchg
ret
sub
pusha
jno
push
lods
jmp
xor
jbe
mov
xor
shl
cld
movsb
add
adc
pop
cltd
or
adc
and
mov
dec
cmp
scas
inc
sbb
rol
xchg
xor
inc
stos
imul
jp
mov
jbe
notb
jge
incb
mov
outsb
add
cmp
ficomps
add
push
or
loope
and
inc
push
popa
inc
mov
insb
and
loopne
jmp
je
push
or
jp
push
mov
repz
scas
push
sub
inc
mov
add
test
pushf
xchg
mov
sub
cmpb
dec
cli
cmpsb
and
xchg
out
scas
jae
jbe
mov
ficoms
les
xor
enter
sbb
scas
sub
int3
test
aas
cmp
aas
clc
rcrl
fs
adc
sbb
xchg
iret
ja
insb
xchg
into
xchg
in
inc
xchg
pop
cmpsb
cmp
popf
iret
incb
and
hlt
sub
ljmp
dec
int3
inc
andb
test
xchg
pop
jle
addr16
cli
push
pop
mov
stc
mov
jns
mov
mov
mov
pop
rclb
adc
test
cld
mov
mov
mov
das
pop
jo
inc
lea
stos
sbb
cli
movsb
lahf
icebp
hlt
std
mov
roll
js
sub
inc
add
ss
mov
aas
add
ja
xor
add
lret
sub
adc
mov
push
int3
test
push
sbb
or
pop
sti
pop
addr16
enter
push
mov
and
nop
mov
or
dec
dec
shll
inc
sbb
sbb
loopne
jmp
int
rcll
dec
cmc
ret
dec
cwtl
ja
out
loopne
mov
jle
adc
xchg
lret
and
andb
add
pop
lea
mov
stc
add
lahf
sti
push
ds
data16
fcmovb
sub
nop
daa
push
daa
dec
in
sub
xchg
fwait
scas
push
lods
cmpsl
das
pop
mov
aaa
dec
notb
inc
das
call
xchg
and
mov
mov
xchg
push
sub
jg
incb
push
in
push
jg
mov
sbbb
add
mov
mov
pop
loop
cmp
push
inc
rorl
lds
xor
fsubp
fbld
inc
and
add
scas
das
mov
mov
and
jnp
or
inc
add
xor
ja
stos
insl
inc
daa
adc
pop
movsl
and
jmp
les
push
movb
bound
push
fsubp
aas
out
mov
stos
add
cmp
std
testl
lcall
mov
cmc
cmp
cs
jecxz
pop
pushf
mov
rol
jnp
inc
cmp
dec
ja
jnp
xor
fcomp
pop
inc
sbb
rorb
cmp
shrb
ret
les
out
adc
and
add
loop
ffreep
mov
xor
push
rcrl
call
loope
cmp
lods
pop
jb
fs
mov
pop
mov
cmp
cmpsl
mov
lock
xchg
cmp
sub
mov
les
adc
mov
cmp
jl
mov
and
mov
andb
fnstenv
mov
cmovs
cmp
push
push
or
mov
push
cmpsb
aad
aas
ret
add
das
rorb
pop
sbb
arpl
and
and
pop
cld
inc
repnz
repz
sub
pop
test
xor
dec
xchg
jns
popa
mov
aas
jb
ret
pushf
push
cmp
add
out
mov
out
sbb
arpl
pop
pusha
sti
adc
xchg
sbb
loop
daa
shlb
jnp
adc
adc
incl
adc
adc
mov
sbb
cltd
idivb
rol
fcmove
or
inc
inc
inc
mov
mov
adc
pop
and
data16
cmp
fcoms
push
sbb
fdivr
out
mov
adc
call
clc
mov
cmp
push
pop
pop
fs
cmp
inc
std
hlt
fdivl
rcr
push
or
inc
adc
dec
xor
or
les
aad
sub
mov
mov
mov
sbb
sub
repz
cmc
rcll
popa
mov
xor
pop
pop
push
sbb
inc
inc
cli
iret
fdivr
in
insb
ror
leave
push
adc
outsb
cltd
icebp
lret
fists
roll
imul
mov
sbb
dec
jno
mov
or
xor
cmp
pop
add
adc
bound
incl
out
mov
push
cmp
cs
sti
cmp
xchg
pop
adc
hlt
and
push
jg
or
mov
add
mov
outsb
clc
imull
push
fcmovbe
rorl
sahf
mov
aaa
in
decb
out
adc
lcall
faddl
mov
int3
push
das
test
or
pop
or
inc
fisttpll
push
cmp
add
push
cmc
int
jg
adc
and
packuswb
lret
mov
push
mov
xchg
fsub
jne
outsb
sbb
jg
shlb
mov
fstl
aas
mov
dec
lods
inc
mov
sar
incl
iret
jae
jnp
inc
out
push
dec
cli
adc
push
or
sbb
cmp
mov
jns
mov
dec
xchg
sub
push
shll
sbb
fstpl
sub
ja
mov
push
and
sbb
nop
push
pushf
rcrl
lods
adc
inc
movsl
loope
xor
add
mov
mov
call
out
bswap
mov
push
mov
and
je
mov
std
add
pushf
sbb
lret
sub
into
sub
shrb
cs
ljmp
pushl
aas
movsb
cmp
jge
or
jecxz
xor
mov
rcll
jb
xchg
lret
inc
imul
call
add
push
outsl
out
fprem1
fld
or
jg
adc
mov
xor
sub
jns
add
jo
call
adc
and
lds
ljmp
aam
cmc
push
lcall
std
incl
push
dec
jge
sbb
jnp
sbb
inc
pop
pop
stos
and
mov
inc
scas
sbb
and
adc
not
sbb
aas
out
mov
mov
insl
xchg
iret
pop
out
jmp
loopne
cmpsl
mov
xchg
lret
fwait
stc
ror
mov
or
out
jnp
mov
or
into
icebp
imul
push
popl
jno
fcomps
clc
call
stos
imul
insl
lcall
sub
pop
lods
call
rcl
rorb
mov
push
cmpl
in
fistpll
inc
jnp
lcall
lret
in
addr16
mov
adc
cs
inc
test
adc
push
cmp
jmp
ss
ja
ljmp
mov
adc
negl
lea
inc
imul
out
dec
sti
fnstsw
out
xor
or
imul
sbb
dec
ret
insb
sub
in
pop
jge
jmp
xchg
jne
outsl
pop
mov
xchg
shll
lahf
inc
out
mov
or
xchg
xor
pop
pop
dec
xor
popf
push
lock
in
inc
sahf
xchg
jge
popa
arpl
xor
fprem
jne
shl
mov
push
add
pop
lcall
lret
ffreep
imul
push
aas
pop
rcll
mov
mov
cld
mov
cmp
mov
dec
test
aaa
or
and
test
ret
jl
xchg
adcb
loop
push
repnz
jmp
mov
push
inc
enter
pop
add
sbb
add
xor
push
push
ficoml
inc
pusha
or
ja
bound
sti
pop
mov
stos
xacquire
adc
negl
std
ljmp
jns
insl
mov
fmull
stos
mov
dec
sbb
inc
xchg
sbb
subl
std
fnstcw
ret
loop
jecxz
sub
mov
push
mov
cli
mov
cmc
rorb
clc
test
rol
mov
mov
xor
jnp
xchg
ficoml
adc
es
ja
xchg
pop
xchg
mov
inc
add
shll
ljmp
cltd
xchg
out
sbb
inc
adc
aas
shll
cmp
jp
jge
push
push
ljmp
xchg
pop
adc
or
iret
cmpsb
dec
mov
mov
movsb
sbb
pmaxsw
or
ds
mov
int3
pop
pop
mov
mov
sarb
mov
aad
sbb
xchg
jg
mov
xchg
pushf
lcall
jbe
or
aaa
xor
cmp
out
and
fistpl
gs
movsl
leave
cli
push
and
sub
cmp
or
jmp
lea
outsl
pop
cmc
pop
out
mov
ljmp
adc
or
jo
add
xchg
lcall
add
sbb
call
divb
repnz
dec
pcmpgtw
pop
adc
push
mov
and
cmp
enter
test
daa
mov
fdivr
xchg
dec
out
inc
inc
loope
jmp
fists
inc
mov
fiadds
nop
inc
add
fs
push
sarb
pushf
lcall
jo
std
mov
mov
pop
pop
inc
mov
mov
inc
mov
add
out
inc
lods
mov
push
xor
lock
mov
sbb
das
call
xor
jl
addr16
mov
out
jg
xchg
cs
rcrl
ret
ficompl
ds
mov
test
in
inc
jnp
mov
add
push
lock
mov
xor
shl
jno
lret
lock
push
dec
xchg
sbb
idiv
inc
inc
mov
adc
sti
mov
mov
or
inc
addr16
arpl
jmp
invd
out
sbb
sar
xchg
test
adc
outsl
fists
xor
popf
pop
mov
cmc
insb
fs
cld
add
adc
cmp
cli
push
test
xor
jl
mov
or
jp
insb
addr16
iret
mov
aas
mov
clc
push
jb
ds
stc
sub
sti
sbbb
push
jbe
sub
das
mov
fbstp
cmp
test
pop
loope
fnsave
out
jns
je
jp
into
sub
mov
pop
lea
ret
jmp
xchg
add
out
ret
mov
jo
pushf
cmp
inc
add
in
pop
movsb
clc
idiv
addr16
mov
outsl
sub
call
dec
jecxz
addr16
pusha
call
int
filds
arpl
or
cmp
inc
icebp
cmpsl
push
jg
outsl
test
iret
pop
subl
sbb
jns
cld
sar
xor
fldl
std
sti
jp
pop
ss
mov
sbb
sub
and
out
das
add
sbb
aas
je
popf
pop
lahf
fcomps
out
out
outsl
push
add
push
pop
in
lret
in
pop
push
mov
lds
cld
mov
lret
fwait
pop
ljmp
sbb
cmc
and
or
ret
fimull
inc
lahf
ret
fwait
jbe
mov
cs
add
addb
pop
sub
jecxz
and
sbb
es
lahf
aad
mov
test
divl
mov
mov
adcb
add
add
stos
jle
incl
jp
push
push
aas
xchg
std
or
je
pushf
mov
jno
outsb
push
out
sbb
test
or
lods
xor
mov
inc
mov
gs
mov
sbb
cli
jb
fucomip
pop
jno
xor
jns
lock
sti
test
sbb
jg
mov
ret
rcll
xor
sbb
jg
scas
dec
jg
pop
and
sbb
fdivr
jb
mov
xor
xchg
out
xor
cld
jmp
loop
xchg
rclb
jg
out
pushf
aad
lahf
test
sbb
pop
cld
mov
pushf
cmpsb
pop
pop
scas
in
clc
sbb
iret
pushf
and
test
out
push
pop
push
fisubl
jno
sub
pop
fnstsw
int3
and
xlat
pop
aam
push
shlb
call
std
cmp
fwait
or
pop
mov
xor
bound
sarl
sbb
sbb
rcrl
mov
lahf
sti
cld
push
cmc
adc
dec
jbe
bound
ds
and
pop
or
lahf
push
cld
jo
iret
or
add
pop
in
jg
out
orl
inc
out
add
incl
adc
push
push
bound
out
lahf
jo
cmp
andl
aas
loopne
jo
icebp
inc
xor
adc
lds
and
inc
loope
mov
das
dec
arpl
mov
lcall
in
imul
dec
rorl
or
add
adc
lahf
fldcw
fildll
lods
lahf
out
mov
or
sbb
clc
or
xor
inc
sub
out
cltd
loope
sbbl
push
jg
cmc
pop
leave
cmp
jecxz
adc
or
scas
jnp
or
ss
and
sar
aas
cmp
jle
fists
sarb
mov
daa
pop
xchg
into
and
cmp
cmc
icebp
lock
sti
jns
xchg
mov
insb
cs
mov
cmp
sbb
nop
nop
inc
loope
cmc
pop
mov
je
sbb
jae
cmpsb
mov
hlt
jb
mov
in
loope
notl
adc
test
mov
out
call
push
inc
jnp
or
addr16
inc
mov
clc
lahf
aas
adc
xorl
and
daa
es
scas
sarb
push
cmp
arpl
pop
mov
iret
jge
addr16
xchg
sub
cmp
dec
or
adc
sub
jg
int
jg
in
adc
arpl
xchg
inc
popa
icebp
aaa
out
pushl
inc
jns
jae
dec
mov
mov
notb
mov
decb
xchg
jns
cmp
or
sbb
sbb
xchg
cld
sbb
imul
jmp
push
pop
pop
xlat
xchg
mov
mov
xlat
je
inc
idiv
cmp
mov
mov
or
jmp
insb
mov
sub
int
clc
cld
scas
cmp
add
ficompl
pop
mov
sarb
jge
addr16
mov
pusha
aam
mov
jmp
sbb
fsts
mov
xchg
into
xchg
aad
push
cwtl
sbb
push
imul
push
decl
xchg
sarb
cmpsl
pushl
mov
lahf
ljmp
jns
mov
and
or
sbb
shl
cmp
jg
int3
or
jnp
push
mov
push
mov
ret
std
sbb
inc
pop
dec
cmc
jle
mov
mov
lds
mov
pop
js
cmp
mov
dec
pop
sub
stc
fstpl
mov
ljmp
mov
or
sub
jg
decl
or
sbb
icebp
add
lock
mov
adc
or
ljmp
jae
adc
les
jge
lcall
loope
jg
dec
dec
in
sub
xchg
stc
setne
mov
push
mov
leave
mov
mov
sub
lahf
cltd
jg
pop
sbb
call
mov
icebp
push
dec
dec
int
inc
inc
mov
data16
jg
mov
shrb
mov
dec
mov
ds
jnp
sub
andl
jbe
cmp
jne
jns
mov
add
ja
in
sub
cld
test
mov
jno
lock
xor
inc
mov
sbb
xor
aam
pop
pop
lods
xchg
enter
bound
loopne
ficomps
mov
pop
sahf
dec
pusha
cltd
xchg
stos
jno
enter
into
loope
add
jge
outsb
xlat
std
xor
push
pop
sub
xchg
into
pop
add
push
add
test
adc
jg
jbe
pop
cld
or
add
mov
mov
out
cmp
sbb
dec
lea
pop
sub
pushl
sbb
pop
imul
outsb
mov
or
idiv
pop
bound
mov
stos
sahf
mov
aas
push
add
cld
mov
fs
jns
push
notl
push
dec
pop
dec
orb
call
push
loop
jbe
lcall
push
jg
add
adc
lods
or
sub
gs
out
push
ret
push
aam
push
test
out
jg
nop
ss
test
inc
sub
pop
shll
mov
xchg
popf
push
push
loop
add
xor
push
inc
aaa
and
ljmp
call
idiv
jmp
frstor
xchg
cmp
test
lahf
clc
out
adc
ds
dec
inc
xor
sbb
xchg
jo
xchg
mov
fnstcw
out
mov
cs
js
add
es
aas
or
ret
loopne
inc
fucomp
notl
mov
std
adc
adc
cmp
add
add
xlat
lcall
ljmp
fmulp
mov
int
lods
push
call
pop
dec
loopne
jecxz
or
cmp
scas
shll
loope
sub
cmp
ret
loopne
xorl
add
rorb
dec
cld
imull
sti
sbb
jbe
lods
inc
out
pop
incl
inc
or
cmpsl
cmp
int3
ljmp
iret
fwait
dec
cld
je
ret
dec
mov
adc
or
fdivrp
loope
fists
data16
mov
and
frstor
insl
lock
out
jbe
xchg
mov
xorl
jnp
loop
call
xor
out
in
lahf
sti
lahf
push
push
aas
aaa
pop
ret
pop
cmp
sbb
mov
idiv
mov
dec
ret
pop
pop
or
jl
js
xor
leave
out
mov
shll
pop
dec
sub
push
bswap
popf
pop
std
mov
xor
in
adc
mov
push
shrb
and
cmp
adc
adc
sti
jbe
adc
xor
push
jo
shrl
out
jno
roll
push
outsl
test
into
iret
imul
repz
and
in
aas
inc
paddd
and
add
aam
or
fistps
out
addl
test
add
xchg
pop
cmp
jmp
sbb
mov
mov
nop
push
idivl
mov
lret
inc
outsb
xchg
inc
bound
loop
and
jns
cmp
pop
sbb
dec
icebp
out
test
cmpsb
mov
loope
adc
xchg
push
mov
adc
movsb
mov
decl
sarb
in
mov
dec
mov
negl
mov
xchg
sahf
fs
cmpsb
cmp
inc
mov
lcall
cmp
gs
sub
pusha
xor
dec
pop
sti
movsb
mov
fwait
add
icebp
call
and
scas
add
jae
loope
push
sbb
popf
push
mov
shlb
xorb
pop
pop
ret
jg
pop
sbb
repz
or
ds
fnstsw
jb
subl
sahf
mov
movsb
gs
ret
sti
mov
fcomp
and
mov
sbb
cmp
daa
jmp
cld
movsl
rcrb
scas
mov
add
ds
mov
sti
jmp
ret
lods
js
cld
pop
fchs
and
push
testl
arpl
jae
movsb
out
or
out
frstor
mov
push
mov
ds
xchg
jge
imul
ljmp
mov
lock
loope
push
jbe
imul
int3
aas
inc
pushl
xor
test
inc
insl
mov
jp
movsb
cs
ds
pop
loope
xchg
mov
or
sbb
out
jle
fcomps
rolb
and
sbb
mov
loopne
fdivrl
adc
mov
lock
xor
arpl
test
sub
mulb
pop
xor
shll
in
pusha
shrl
xlat
cli
push
cltd
cli
cmp
aam
adc
jns,pt
clc
pop
inc
cld
sub
lcall
mov
icebp
pop
test
mov
scas
jg
mov
test
jno
negb
adc
mov
push
rcrl
es
inc
adc
push
ffreep
daa
and
lret
bound
clc
loopne
decb
jecxz
or
bound
pop
imull
nop
jne
xchg
fs
sarb
lock
xchg
push
in
loope
push
fwait
jbe
mov
pop
out
nop
ss
pop
lcall
imul
clc
bound
test
enter
cmp
ds
femms
ja
ret
outsl
repz
stc
mov
fmull
ljmp
daa
push
stos
add
mov
push
repz
ljmp
mov
sbb
mov
std
sar
pusha
test
nop
adc
in
cmp
mov
out
mov
jnp
xchg
jmp
hlt
jg
dec
mov
dec
dec
test
sub
loop
das
clc
sbb
sbb
and
popa
data16
push
mov
leave
pop
inc
cmp
test
xor
fs
adc
pop
adc
adc
cmpl
xchg
mov
pushf
hlt
es
loopne
scas
mov
movsl
mov
hlt
iret
loopne
jge
xchg
into
add
jo
imul
cmp
popa
out
push
rcr
jmp
cmp
orb
inc
aas
sar
aas
mov
in
jp
ljmp
jnp
jp
lahf
loopne
daa
inc
jne
pop
jns
mov
call
ja
ret
test
push
ss
pop
mov
push
clc
into
dec
test
aaa
push
dec
add
or
mov
xchg
gs
ja
add
popf
aad
rolb
neg
xor
push
js
push
add
or
out
or
sbb
or
aam
int3
xchg
out
or
mov
sbb
mov
lea
decb
jno
jbe
xchg
xor
push
daa
or
inc
push
jg
jns
or
sub
jmp
clc
decl
pop
mov
and
sbbb
dec
mov
addl
sahf
lods
cli
arpl
jp
or
loop
xchg
imull
ja
or
xor
mov
push
movsb
adc
add
xorb
mov
cld
test
nop
cwtl
pop
add
or
jg
scas
inc
test
fldenv
sbb
inc
sarb
faddl
iret
lods
fdivrl
mov
or
sti
xchg
shrb
push
out
push
fadds
dec
mov
mov
shlb
incb
mov
sub
jb
lock
rorb
sbb
mov
sbb
fistps
xor
push
dec
imul
xchg
mov
sbb
jo
xchg
in
test
or
dec
imul
or
xchg
mov
clc
jg
inc
xchg
pop
jcxz
loop
xchg
adc
inc
cli
es
and
inc
mov
cwtl
incl
sub
in
xor
hlt
orb
loope
fldt
ret
imul
rorl
inc
or
sti
and
lcall
insb
add
add
push
mov
sarb
xchg
inc
cmp
repz
push
cli
pop
out
test
int3
xor
fs
or
pop
push
xchg
outsb
jb
sti
jecxz
add
jnp
jecxz
mov
in
dec
imul
movsb
and
movsl
xor
mov
push
addr16
mov
or
mov
sub
dec
lds
sarl
cld
aad
sti
incb
out
inc
fstpl
int3
and
mov
stos
sub
int3
jecxz
add
sti
ret
cmp
mov
sti
cmp
stos
adc
jecxz
in
outsb
jecxz
push
ja
dec
cmp
out
xchg
clc
sub
sub
cmp
fwait
pop
cld
jae
fmull
sbb
xchg
pop
or
mov
push
push
mov
push
loop
das
push
lods
cltd
call
xor
rorl
repz
ret
cld
das
mov
push
mov
int3
mov
pop
mov
repz
mov
scas
lret
movsl
push
std
sar
sbb
and
cmpl
idivl
xchg
push
cs
mov
sub
sbb
iret
test
mov
mov
xchg
and
sub
add
std
add
std
pop
inc
into
jg
fisttpll
mov
fldenv
sbb
lret
mov
arpl
mov
daa
adcl
arpl
cmp
test
jp
repz
pop
and
lahf
das
popa
js
sub
js
lret
cmp
outsl
sbb
mov
ss
shlb
iret
movsl
mov
inc
xor
mov
inc
jne
in
loop
std
dec
shl
add
sub
clc
push
inc
insl
cmp
negl
xchg
add
or
mov
std
loopne
int
adc
and
or
hlt
fcoms
pop
sbb
inc
and
daa
xchg
lock
inc
lock
pusha
or
inc
fdivs
cmc
add
int3
call
push
loopne
out
jl
mov
divl
push
sub
cmp
sbb
xchg
xchg
gs
pop
jo
mov
movl
addl
or
scas
mov
xchg
jae
mov
incl
loop
dec
sti
insb
mov
mov
aas
call
fsts
dec
cmp
mov
jmp
fmul
jbe
lret
lahf
pop
sbb
sub
sbb
inc
aas
icebp
and
mov
les
cmc
mov
mov
sbb
dec
aaa
mov
jg
std
popf
je
les
ja
mov
pop
cmp
inc
leave
or
mov
jge
fistpll
or
in
cwtl
mov
je
xchg
icebp
ja
call
outsl
das
aaa
repnz
mov
out
fmull
arpl
dec
adc
lcall
int
pusha
stc
fsubs
inc
dec
rcl
pop
jl
sti
push
jge
das
sarb
movsl
ret
sbb
pop
add
xchg
mov
popa
lock
call
xor
pop
pop
movsl
lcall
fwait
push
or
or
push
dec
pop
loope
jae
jge
arpl
dec
jge
or
cwtl
inc
das
mov
shrl
and
inc
inc
push
popf
popa
xorb
incl
addl
lret
sub
push
jbe
add
data16
stos
rcrb
loop
loopne
lods
inc
jmp
lock
mov
inc
incl
ficompl
lea
push
sub
jecxz
xor
fistps
adc
inc
inc
cmp
out
jmp
inc
mov
ss
and
jl
clc
sbb
cmp
push
out
xlat
add
js
xchg
fsubrs
dec
call
mov
cli
sub
in
adc
popf
add
inc
cmc
out
pop
fs
cmpsb
jecxz
push
cld
cmp
sub
jbe
adc
imul
push
aas
cmp
mov
out
jp
mov
cmp
subb
dec
in
add
add
repnz
popl
lods
or
pop
testl
outsl
mov
icebp
enter
arpl
das
sub
mov
add
dec
inc
outsb
inc
push
pop
jg
ret
lcall
pop
jbe
loopne
lock
test
dec
inc
inc
pop
loopne
fstl
fidivl
cmp
add
pop
sub
out
jmp
iret
jo
xor
dec
mov
cli
out
inc
inc
mov
inc
dec
cmpsb
xlat
inc
add
or
cmp
outsb
orb
out
cmp
jb
mov
cmp
das
xorl
jl
push
mov
sbb
push
repnz
les
xor
cmp
clc
out
push
call
adc
fmull
add
push
jns
in
loopne
dec
jbe
xchg
xchg
incl
pop
leave
or
mov
leave
dec
fcmovbe
pushf
pop
jecxz
mov
inc
lret
jnp
adc
cmp
dec
adc
cmp
pop
inc
pop
hlt
dec
cld
push
imul
out
incb
add
imul
sahf
xorb
lds
mov
cmp
push
test
sti
lcall
ljmp
push
test
inc
pop
and
fwait
dec
and
test
sahf
pop
iret
cmc
pop
lahf
movsl
pusha
pop
adc
setnp
enter
mov
push
add
andl
or
and
push
lret
scas
jmp
ja
inc
mov
adc
fsts
movsl
roll
daa
and
mov
aad
jecxz
ja
decl
subl
add
dec
incl
cld
inc
sbb
in
push
cli
add
mov
xor
pop
mov
iret
pop
std
das
cwtl
pop
add
std
add
and
lret
fdivr
popf
std
or
adc
shrb
scas
das
pop
pop
sarb
jle
ja
add
push
jle
xlat
fnsave
aad
adc
ja
sarb
inc
ret
in
xchg
dec
daa
dec
jecxz
out
jecxz
fimuls
xchg
shlb
fcompl
jecxz
mov
outsl
fstpl
scas
mov
jg
lods
mov
fdivs
xchg
jbe
incl
lods
inc
bound
and
repnz
clc
push
je
mov
daa
lock
adcb
pop
mov
hlt
decl
gs
jae
mov
cmp
lock
loop
jp
push
push
fnstsw
mov
add
pop
or
push
cmp
adc
fwait
push
ljmp
dec
mov
mov
sub
cmp
ljmp
loope
xchg
pop
mov
push
enter
pop
xor
xchg
push
lock
inc
dec
and
xchg
sbb
pop
push
call
adc
loope
dec
shr
ja
out
dec
clc
sbbb
adc
repz
data16
sbb
aas
mov
out
ror
mov
lods
mov
insb
add
cltd
shl
sti
push
mov
lods
xor
xor
or
mov
out
inc
sub
mov
push
maskmovq
sbb
adc
xchg
jae
adc
jl
and
sysexit
call
dec
lahf
mov
lods
pop
lods
xchg
out
shl
or
mov
and
xor
dec
jmp
sbb
fdivr
and
cs
aam
cmpsb
cmpsb
lret
cmp
lds
cmp
pop
orl
repz
js
mov
jmp
mov
and
jl
inc
inc
cld
or
xchg
jo
mov
jl
icebp
outsl
xor
fwait
mov
ljmp
cli
iret
mov
imul
gs
sbb
xchg
pushl
add
mov
jno
out
cltd
fimuls
cltd
jg
xor
mov
inc
fistpll
subl
inc
xchg
call
loopne
pop
pop
adcl
hlt
pop
mov
fcoml
arpl
enter
hlt
cs
jbe
and
pop
imul
cmp
fsts
adc
jns
pop
out
aas
imul
dec
loope
cmp
subl
mov
aas
inc
test
cmpb
cmp
pop
push
jnp
add
push
xchg
gs
jg
sbb
cld
scas
jp
pop
mov
lahf
ret
lahf
inc
cmp
loope
xchg
pop
hlt
cmp
jmp
inc
mov
xlat
je
push
sahf
jns
jg
cld
sbb
dec
xchg
add
sub
ret
sub
xchg
cmpsl
ret
leave
imul
jbe
aad
or
xor
xchg
cmpsl
into
out
pop
cld
cmp
call
dec
or
popa
enter
mov
lahf
jl,pt
cmp
cmp
repz
out
leave
pop
cmp
jmp
xchg
adcb
mov
xchg
leave
push
fistl
inc
call
mov
or
repz
decl
int3
push
push
nop
shr
jge
cmp
rcrb
inc
sbb
inc
mov
cmp
and
mov
leave
lret
mov
shlb
mov
psrad
jmp
inc
fldl
out
ret
incl
xchg
jle
cltd
and
push
outsb
scas
into
scas
arpl
mov
sub
addr16
pop
movsb
test
incb
mov
les
ret
xor
dec
dec
loopne
or
shlb
sub
loopne
addr16
add
hlt
mov
inc
jg
in
aaa
sub
test
xor
jg
out
movsl
imulb
inc
mov
cmc
inc
stos
xor
inc
rcr
incb
dec
mov
inc
cmp
nop
xchg
ja
and
ds
out
imul
fistpll
das
movsb
pop
pop
mov
xchg
mov
jg
or
ret
in
adc
sbbb
dec
aaa
mov
sbb
push
xor
subl
scas
int3
scas
rsm
sub
xbegin
lret
adcl
imul
and
xorl
pop
mov
mov
xchg
psrlq
shlb
mov
fdivrl
iret
inc
add
fnstenv
sbb
jge
addr16
scas
jmp
or
js
insl
mov
dec
xor
inc
mov
js
jge
adc
xor
cmp
and
mov
outsb
mov
dec
pop
fists
nop
sub
leave
lods
add
jb
sbb
stc
pop
xchg
mov
jne
xor
into
dec
out
pop
mov
add
sti
decl
pop
and
xchg
jne
into
push
add
inc
mov
lret
cmp
icebp
mov
cltd
cs
adc
mov
lock
sub
lock
mov
pop
ljmp
pop
mov
xchg
out
jae
fidivs
push
addr16
loopne
jg
ja
sahf
add
add
in
mov
std
push
jl
pop
cmp
cmp
mov
cmp
sbb
mov
mov
adc
aaa
jmp
jl
xor
pop
pop
and
jle
jecxz
pop
pop
sbb
mov
ret
cmp
imul
push
lahf
mov
inc
andb
inc
cltd
pop
test
cwtl
stos
sbb
pop
js
popa
hlt
fildl
inc
lock
aad
std
lds
push
cmp
cmp
stos
mov
mov
pop
mov
or
int
pop
mov
decb
je
mov
popa
mov
add
rorl
mov
mov
shlb
out
inc
xor
mov
aam
mov
pop
inc
add
push
test
fiaddl
mov
aaa
sub
adc
push
in
std
sbb
push
mov
pmaxsw
inc
repz
xor
cli
in
mov
cmp
cmp
cmp
jae
mov
aas
out
mov
sub
imul
addb
cmp
pop
les
sarb
xor
cld
ljmp
jg
sub
dec
test
shlb
cld
psubusw
add
mov
lret
jg
cmp
loop
out
dec
fimull
cmp
dec
arpl
arpl
inc
or
out
jg
xor
jnp
ss
scas
outsb
cmp
xchg
xchg
imul
popa
cli
add
cmp
cltd
test
mov
or
aaa
clc
cli
aaa
and
sub
dec
jo
mov
xor
xchg
loopne
jecxz
push
inc
jmp
fdiv
cwtl
mov
ss
cmc
xchg
dec
dec
xchg
push
outsb
push
inc
gs
pop
testl
sbb
in
pop
lds
sahf
test
leave
fcmovnbe
pop
stos
adc
cmp
push
push
outsl
fidivrs
pop
mov
mov
and
inc
sahf
ret
adc
mov
rcl
test
and
lock
sbb
sti
popa
roll
faddp
ljmp
mov
adc
xorl
pop
push
out
pop
dec
mov
dec
push
pop
add
pop
fdivl
je
ja
jmp
lcall
scas
outsl
inc
stos
mov
and
xor
fs
jg
jmp
or
insb
or
sbbb
adc
dec
cld
add
sti
adc
lock
mov
sbb
cmp
in
jle
jle
xchg
test
mov
sub
add
iret
pop
mov
or
jl
pop
and
scas
aad
push
and
fdivp
add
mov
daa
fildll
je
iret
jb
pushf
int
adc
icebp
aad
cmp
lea
lcall
cmp
sub
es
in
lret
xchg
fists
loopne
mov
jo
push
push
or
jbe
das
and
popf
std
aad
dec
andb
jecxz
push
jbe
cmp
mov
mov
outsl
dec
mov
pushl
cmp
jecxz
xchg
xchg
push
shl
inc
ljmp
mov
outsb
pop
add
pop
cltd
scas
testb
clc
inc
imul
test
inc
jmp
fwait
testb
icebp
iret
or
or
aaa
testb
cwtl
daa
out
mov
pop
dec
sbb
or
in
shll
inc
push
push
add
cmp
div
out
subb
and
mov
popf
in
call
xlat
iret
test
popa
aad
clc
div
test
xor
sub
sbbl
inc
lods
aam
jno
les
incb
push
nop
or
jae
shl
out
mov
nop
scas
fldl
lret
push
negl
or
aas
leave
mov
ljmp
out
into
mov
sbb
hlt
aad
xchg
push
andl
inc
call
pop
jg
and
push
xor
subl
ja
pop
push
and
or
pop
scas
lods
mov
shrl
dec
mov
inc
mov
pop
push
clc
xchg
leave
jg
sti
dec
xor
inc
enter
xchg
add
push
push
pop
jno
push
loop
or
adc
andl
outsl
adc
mov
daa
add
nop
outsl
push
mov
out
mov
fs
rcr
xlat
in
aaa
add
lret
clc
out
insl
sarl
out
mov
nop
mov
jg
stos
imul
aam
mov
scas
push
xchg
jbe
xchg
fbld
jae
out
adc
scas
hlt
das
dec
test
rolb
jmp
inc
cld
cmp
add
pop
iret
test
in
mov
shlb
push
ja
in
frndint
sbb
js
jne
clc
push
pop
cmp
aam
stc
scas
dec
out
loop
out
pusha
int3
repnz
mov
fstpt
lea
or
cli
lds
or
lods
adc
jge
push
mov
fistpll
imul
out
inc
clc
das
cli
push
in
or
mov
loop
pushl
lock
ss
ja
sbb
scas
sti
je
loopne
xor
std
mov
in
and
xor
pop
in
add
jg
scas
cmp
sarl
xor
lock
not
jae
sub
scas
pop
jo
imul
mov
cmp
pop
xor
push
scas
sub
stos
test
fsts
xlat
jmp
scas
pop
mov
sub
fstp
add
sub
rolb
inc
popa
fisubrs
cmp
xor
xchg
int3
shr
or
pshufw
dec
mov
pop
sbb
xchg
icebp
and
or
aad
mov
shll
push
add
sti
out
test
lea
loopne
pop
mov
xor
fcomip
ret
and
mov
xchg
mov
sahf
aas
add
push
cmpsl
sbb
pop
cmp
cmc
push
mov
pop
or
and
xor
xchg
ja
adc
mov
cmp
xchg
notb
ja
hlt
or
cmpsb
or
cmp
aam
add
xor
lahf
shl
jb
push
fcomp
mov
or
dec
xchg
adc
ljmp
pop
inc
cmp
inc
pop
lret
enter
ja
jecxz
pop
sarb
adc
and
sahf
jne
pop
pop
aas
xlat
in
sub
sub
nop
sbb
out
in
stos
pop
push
xchg
inc
cld
push
lret
pop
xchg
sbbb
mov
jno
out
stos
and
sbb
ret
clc
sub
fisttps
mov
mov
cli
mov
inc
push
daa
cmp
dec
xchg
std
cwtl
fucomi
sbb
das
std
test
notl
cmpsb
add
jno
idiv
loopne
pop
gs
stos
sub
mov
dec
roll
sar
out
int
fld
sub
out
pop
jge
mov
jg
test
mov
movsb
leave
adc
add
sbbb
out
lahf
movsl
cmc
ss
fisubl
pop
push
mov
out
test
int
ja
push
xor
in
and
jg
aam
jle
jecxz
jg
add
ja
cld
inc
std
popf
ret
adc
cwtl
and
cli
add
nop
es
jns
into
clc
xchg
dec
dec
test
or
repz
pushl
js
add
mov
sbb
inc
scas
adc
ljmp
sub
call
inc
pusha
lcall
dec
lret
pop
sbb
fidivrs
push
mov
or
clc
std
jnp
lcall
clc
test
jg
sbb
scas
lods
rclb
adc
xor
fwait
sti
sbb
icebp
rolb
das
cmp
sti
sbb
insb
sahf
loop
mov
dec
sbb
jae
fnstcw
out
xor
mov
js
adc
jg
je
or
dec
mov
das
test
test
sub
sbb
lahf
jo
cmpsl
ss
lea
mov
sub
lret
std
pop
in
hlt
push
mov
sub
lock
xchg
jg
adc
ss
or
stc
out
frndint
fistpll
gs
push
mov
and
mov
mov
inc
push
jg
xchg
adc
mov
loop
sti
push
mov
mov
aaa
jmp
in
jle
test
stc
and
dec
jmp
shll
mov
je
jge
ret
out
mov
adc
outsl
push
inc
call
jecxz
lods
repnz
xchg
sbb
lcall
add
cld
and
into
roll
pop
movsb
cmp
out
fists
mov
jp
jl
shr
fwait
and
mfence
sbb
loope
ret
pop
bound
pushl
dec
call
pop
loope
sbb
data16
ja
aas
les
cld
testl
mov
inc
xor
adc
push
sbb
add
daa
hlt
cmpsb
into
notl
pop
int
arpl
fisttpl
sub
lahf
add
imul
mov
sub
fs
jmp
add
test
sub
push
insb
sub
loope
es
push
jmp
xchg
daa
loope
jno
inc
pop
mov
ljmp
pavgb
outsl
or
ret
or
adc
or
mov
sub
inc
xor
cwtl
gs
push
ds
aas
jnp
ljmp
push
cli
and
pop
xchg
sbb
pop
sub
jg
jmp
pop
mov
jecxz
add
mov
mov
cmp
xor
jb
ds
or
push
inc
aaa
cmpsb
dec
test
inc
popf
pop
out
dec
dec
cld
ds
and
scas
xchg
clc
push
inc
out
push
int3
xchg
cmpl
test
push
lcall
or
adc
pop
aaa
pop
adc
push
or
sbb
dec
xor
cmpsb
mov
mov
leave
push
int3
mov
and
jno
and
lds
fiadds
ret
adc
and
cmp
inc
repz
fs
mov
mov
inc
cld
das
xchg
in
add
insl
cltd
dec
mov
imull
je
in
notb
dec
lcall
xor
mov
cs
and
dec
lock
mov
sbb
xchg
jns
inc
inc
cmc
es
mov
sbb
insl
mov
loopne
aad
mov
cmp
sbb
gs
loope
and
mov
cmp
hlt
jbe
push
imul
rcrb
lcall
call
inc
pop
jp
adc
sar
xor
das
mov
pusha
inc
sub
stos
ds
popf
inc
adc
scas
xor
dec
aad
dec
xor
sbb
outsl
mov
rcrl
rcll
hlt
jnp
test
adc
in
cli
ljmp
daa
inc
ror
iret
add
fldl
xsaves
imul
rorl
mov
leave
mov
sbb
jb
insl
lds
fdivrl
pop
and
jmp
addr16
ret
js,pn
popa
sbb
sbb
lahf
repnz
or
int3
popf
jl
pop
jnp
incl
shl
aas
test
xchg
sub
cmpl
je
mov
das
inc
adc
jg
fistpll
mov
inc
xchg
call
std
mov
jge
inc
jge
scas
push
mov
enter
pop
call
stc
dec
popa
dec
jns
mov
ss
aam
daa
cld
cmp
xchg
xor
push
xchg
inc
adc
mov
dec
lods
mov
cli
sbb
and
inc
dec
push
es
data16
xchg
ds
aas
ret
and
lds
ds
add
adc
notl
dec
ljmp
popa
cmp
shl
and
and
ret
mov
fildll
cs
dec
imul
out
aas
das
jmp
xor
mov
sar
mov
fstps
ret
aas
sar
fidivrs
jae
xchg
mov
inc
das
test
pop
nop
dec
dec
rcrb
clc
push
cmp
xchg
mov
sbb
clc
nop
push
pop
int3
hlt
stc
pop
ret
mov
idivl
jns
inc
dec
pushl
sbbl
incl
lea
inc
mov
cmp
mov
or
or
pop
adcl
pop
ret
filds
clc
icebp
out
cmc
js
cmp
adc
gs
mov
jo
adc
dec
leave
stc
popf
sbb
aas
push
out
insb
inc
popa
push
pop
dec
addr16
inc
jmp
and
into
inc
aaa
push
xchg
std
jbe
cwtl
movsbl
push
mov
pop
popf
lcall
adc
sbb
add
mov
aas
push
ret
push
pop
mov
jle
xchg
fimuls
je
std
jb
xchg
fnstsw
mov
add
ret
loope
cli
xchg
add
jns
cltd
xchg
ret
repnz
clc
dec
pop
rcll
and
cld
xchg
mov
mov
jbe
imul
xor
popf
insl
scas
pop
stos
adc
cli
gs
test
jge
mov
fadds
sub
add
movsl
cmp
daa
leave
push
lea
jl
das
ljmp
adc
add
cmp
mov
pushf
cmpsb
into
fistl
mov
out
out
xchg
jecxz
sbb
mov
fsubs
cmpsb
cmpsl
jg
cld
or
or
js
or
mov
imul
arpl
roll
jecxz
rorl
jae
and
imul
out
fcmovnb
or
push
lds
loop
nop
cmpsl
xchg
push
push
stos
aaa
aas
lahf
mov
add
loop
mov
xorb
scas
test
push
jp
mov
add
incl
ja
push
xor
mov
sub
lahf
sub
jno
pop
pop
mov
push
push
sub
inc
and
xchg
loope
insl
out
and
fcomps
in
cld
inc
incl
push
mov
jecxz
push
insb
or
mov
pop
inc
inc
adc
sub
popa
mov
mov
mov
decl
jmp
cmp
mov
mov
mov
ret
lret
ljmp
sub
sti
js
sbb
xor
call
push
sbb
mov
add
xchg
push
clc
out
jecxz
test
imul
sub
jno
jmp
mov
and
int
jmp
mov
push
mov
push
shl
ljmp
inc
pushl
pop
jns
push
or
dec
daa
push
mov
into
adc
ja
test
aas
pop
loop
lods
pop
pusha
pop
add
jnp
mov
out
loope
rol
fimuls
cmp
leave
sahf
cmpsb
mov
inc
adc
adc
fstps
subb
clc
xchg
leave
jp
flds
cmpb
mov
fdivrp
ja
xor
jbe
or
sub
ljmp
das
out
fistpll
add
in
in
cmp
jns
cli
cmc
icebp
sar
pop
push
cmp
jmp
or
cld
div
aas
sarl
stc
ficomps
inc
mov
fildll
ljmp
adc
sub
mov
mov
jae
fidivl
mov
adc
popa
mov
cltd
idivb
jg
movsb
mov
dec
inc
inc
int3
dec
inc
clc
arpl
into
mov
mov
lahf
clc
fisttps
std
mov
pop
mov
pusha
push
mov
jmp
or
mov
adc
jl
shrl
pop
and
and
sarl
mov
cmp
inc
or
sub
push
xor
sbb
inc
insl
pop
sub
mov
subb
sub
mov
lds
sbb
cld
stc
ror
ret
sub
sahf
cmp
pop
icebp
jno
mov
cmc
popf
xor
pop
movsb
in
or
xlat
test
inc
in
ds
je
xchg
lea
stc
imul
stc
and
add
xchg
fdivr
xchg
jle
inc
pop
mov
and
xchg
sbb
cli
lcall
inc
sbb
push
mov
add
or
sub
dec
stc
sub
mov
jns
push
inc
incl
test
lret
xor
fldl
jmp
sbbl
pop
xchg
sbb
sbb
and
jmp
test
jp
test
out
jl
inc
cld
jno
in
pop
or
pop
sbb
jge
xchg
repz
inc
out
lods
dec
movb
lods
xchg
pop
cmp
inc
xchg
mov
mov
fisubrs
sbb
jae
lods
xorl
inc
mov
ljmp
mov
add
push
fldt
sub
and
add
lret
fisttpll
xchg
push
aad
negl
in
mov
push
adc
jg
fucomip
add
ret
stc
test
out
popl
jnp
pop
cmpb
in
daa
mov
lahf
fwait
hlt
push
out
inc
adc
incl
ret
pushf
xchg
gs
adc
je
mov
adc
cli
and
cmp
and
mov
in
mov
cmp
push
push
mov
xchg
pushf
icebp
jg
aad
pop
pop
push
popa
cmpl
stos
sti
pop
out
decl
cld
call
scas
pop
out
inc
inc
inc
jns
seta
das
pop
call
stos
add
mov
decl
push
jne
out
cmp
push
jle
in
pop
imul
xor
xor
out
push
enter
jle
out
pop
fisttpll
adc
jmp
mov
inc
cmp
test
dec
addl
enter
adc
std
add
stos
das
mov
and
orb
mov
inc
inc
dec
adc
mov
sarb
mov
lock
or
pusha
push
out
pop
jle
push
aas
cmpsl
decl
adcl
or
xchg
lods
push
add
push
icebp
in
scas
sbb
cmp
push
stos
xchg
push
xchg
decl
jecxz
loop
or
jmp
xor
cmp
adc
inc
ljmp
xchg
mov
xchg
add
leave
mov
sub
mov
adc
pop
jle
into
adc
sbb
enter
add
bound
mov
lds
push
popf
loop
subl
in
outsb
jne
mov
lret
adc
sub
in
ja
scas
hlt
dec
out
adc
and
psrad
xchg
iret
pop
xlat
jns
mov
xchg
push
or
dec
daa
dec
cltd
call
enter
xchg
sub
sti
stos
loope
rcl
insl
mov
push
sti
aaa
loope
lcall
mov
adcb
cmpb
mov
ret
pop
and
dec
mov
mov
popf
aad
dec
ret
in
adcb
out
scas
sub
je
cld
lcall
cld
cmp
fsubrp
adc
mov
sub
mov
push
xchg
mov
mov
add
std
or
xchg
nopl
arpl
xor
psubb
dec
and
pop
movsl
sub
mov
sbb
adc
lret
jno
das
lock
sbb
cmp
jb
xchg
pop
lods
or
lds
adcb
inc
mov
orl
lret
std
sbb
jg
insb
jg
ljmp
fwait
in
or
ja
js
ss
movsb
rcrl
rorb
jo
jne
fstl
das
sub
mov
push
cli
fmuls
push
dec
daa
pushf
sbb
test
fstpl
jbe
mov
sub
adc
sti
stos
loope
cltd
xor
and
aad
jmp
icebp
hlt
test
or
jmp
incl
sbb
xor
cmp
pop
sbb
jmp
pushf
out
pop
idivb
out
scas
pop
push
insb
cli
cmp
sti
pop
cli
leave
into
cmp
xchg
dec
dec
lcall
cld
loope
rorb
and
lcall
int3
push
cmp
orl
test
sub
hlt
addr16
incl
cmp
xor
and
ret
repnz
mov
mov
lret
mov
or
popa
hlt
pop
aas
dec
xchg
xor
sub
in
ljmp
xchg
mov
adc
mov
icebp
xor
ret
out
xor
imul
or
addr16
cld
xlat
xchg
jne
test
aas
push
inc
sarb
jno
pop
pop
popa
aas
pusha
push
inc
and
pusha
xlat
mov
lcall
jb
gs
addr16
andl
aaa
in
mov
push
arpl
xor
push
aas
outsl
loop
push
inc
sahf
jl
mov
jecxz
shlb
push
push
xor
outsl
push
imul
sub
clc
sbb
jge
jae
je
popa
fisubs
inc
dec
repz
fs
push
mov
fistps
decl
int
or
mov
push
incl
lea
mov
adc
or
popf
and
in
ja
lods
jg
sbb
sbb
imul
xor
dec
arpl
xchg
add
and
lds
mov
pop
out
pop
adc
mov
sub
fimull
insl
mov
sbb
lahf
xchg
jge
mov
dec
sbb
out
push
inc
adcb
xchg
add
pop
lcall
cltd
jnp
jae
sub
push
dec
mov
ljmp
enter
outsl
or
cld
or
je
lods
push
xlat
jo
cmpsl
push
cmp
jl
pop
mov
xor
test
jl
mov
adc
out
enter
add
dec
mov
cmp
mov
mov
mov
iret
fs
stc
mov
xchg
mov
add
push
and
in
adc
adc
lds
sbb
push
xchg
mov
adc
push
adc
aad
hlt
pop
mov
loope
xor
iret
imul
sarb
in
xor
sub
jg
cld
in
sbb
cmpsl
xchg
ret
inc
leave
push
pop
jl
sbb
scas
sub
inc
cld
fcompl
scas
aam
mov
repz
into
jecxz
popa
push
imul
lods
push
sbb
std
mov
inc
test
push
inc
mov
pop
clc
out
mov
cmp
adc
sbb
inc
push
push
incl
jo
call
hlt
push
enter
testb
pop
mov
in
icebp
insb
or
lcall
arpl
or
incl
fistpll
dec
mov
add
inc
jmp
and
mov
inc
faddl
sarl
mov
mov
mov
out
data16
xor
loope
sbb
popa
cmp
sti
out
xor
enter
movsl
enter
outsl
arpl
shlb
int3
clc
pop
jno
in
mov
fidivrl
cmp
out
shr
pushf
fisttpll
jmp
ja
jns
rcrl
out
in
ror
repnz
movsl
mov
cmp
mov
mov
add
inc
popa
hlt
adc
stos
lahf
inc
xchg
sbb
sbb
inc
jmp
fwait
test
das
sub
adc
jl
push
call
pushf
inc
mov
hlt
jecxz
movsl
out
add
jno
pop
fistpll
icebp
push
sbb
testl
cld
ja
dec
pop
negl
or
pusha
cli
daa
aaa
sbb
lahf
sbb
inc
and
cmpsl
icebp
dec
lcall
jge
loopne
pop
nop
dec
and
mov
sub
je
scas
and
jmp
cld
daa
push
stos
xchg
cmp
jae
push
push
stos
jae
fldl
pop
ja
cli
rorb
lock
add
and
movd
fidivs
jg
jnp
adcl
mov
cmp
inc
in
inc
mov
rclb
sbb
jne
incl
mov
mov
cld
mulb
icebp
out
hlt
jg
mov
cmp
call
xorb
jbe
loop
loopne
push
or
dec
fwait
imul
sbb
aam
pop
mov
mov
int3
in
or
das
xor
adc
das
cld
repz
out
jno
mov
inc
test
and
cli
aas
xchg
ja
dec
loope
push
ss
jl
flds
jo
jmp
mov
jle
aas
daa
jl
lds
bswap
inc
loope
sbb
subl
fchs
push
xor
sub
popf
mov
test
cmp
decb
lcall
sub
inc
mov
rcll
xlat
lret
pop
ljmp
shl
xchg
xor
push
test
mov
aad
push
and
jl
xchg
mov
sub
lds
mov
clc
rcrl
pushf
and
rolb
cmp
das
addb
adc
ljmp
rolb
stos
aam
and
jge
sub
ret
fisubl
jb
push
jmp
hlt
out
ljmp
sbb
jle
mov
addl
in
btr
xor
mov
cld
aas
mov
iret
nop
cmp
mov
sti
call
mov
adc
ficoml
jo
adc
scas
sub
xchg
dec
sbb
mov
ret
aas
mov
imul
insl
aaa
leave
adc
jno
mov
loope
pusha
cs
jecxz
lret
lahf
or
hlt
mov
hlt
popw
test
ljmp
loopne
add
dec
push
sarb
in
lods
movsb
or
jae
test
out
lods
cmpsb
das
mov
out
out
jle
xchg
fdivl
pop
pusha
push
mov
xchg
jo
aas
rcl
lds
cmpsb
icebp
test
and
loopne
xor
aas
and
aas
inc
pop
pop
inc
mov
xlat
gs
xor
mov
add
xor
popa
pop
xor
cld
pop
pop
out
mov
mov
cmc
fmull
cmp
cmp
cld
das
test
mov
dec
ljmp
push
lahf
rolb
push
jnp
inc
push
std
mov
stos
bound
cmp
and
aam
loope
pop
sarl
inc
cmp
call
popa
pusha
mov
mov
or
jnp
fstps
pop
cmc
push
in
dec
dec
adc
addr16
and
add
push
mov
sbb
insb
cli
pop
enter
jmp
cmp
fstpl
adc
iret
xchg
push
das
or
jp
scas
and
xchg
fs
scas
and
sub
sbb
out
outsl
or
dec
xor
addb
outsb
pusha
jne
das
ficoml
and
inc
out
shll
into
mov
mov
rcrb
or
cli
xor
repz
inc
lret
dec
xchg
ret
sub
decl
sub
mov
icebp
jge
push
push
xor
mov
push
gs
stos
add
jecxz
out
hlt
ret
add
xor
sub
scas
out
pop
out
adc
imul
shll
ficompl
fmul
xabort
cli
cs
pop
pop
xlat
xor
jb
lea
pop
sahf
xchg
clc
dec
loope
cmpsb
sahf
fbld
and
dec
lcall
dec
arpl
adc
fwait
mov
es
push
sbb
hlt
push
inc
loop
mov
es
loopne
lahf
and
mov
xlat
jg
mov
jge
lock
jmp
fistps
dec
decl
cmpsb
xorb
push
cwtl
push
lahf
popa
ds
fnstsw
or
outsl
stos
inc
xorl
xchg
lds
and
jo
outsb
xchg
in
outsl
arpl
sub
lds
popf
lds
repnz
ss
mov
cmpsl
sti
and
mov
stc
mov
jge
mov
cmp
test
int
popf
pop
jne
lahf
ret
jle
inc
xor
mov
pop
xor
test
fdiv
jl
xchg
jg
mov
cli
xor
stos
add
mov
jnp
add
fmul
pop
mov
mov
ja
addl
mov
ret
insl
out
cmp
pop
or
mov
or
mov
and
mov
sarb
iret
inc
loop
mov
jmp
xor
mov
cmpsl
divl
ljmp
mov
pop
loopne
mov
aas
push
xchg
movsb
jmp
push
cs
inc
lock
adc
push
jns
push
bound
mov
arpl
pop
xchg
inc
cmpsl
pusha
icebp
mov
daa
gs
pushl
mov
fdivrs
mov
and
cmp
push
std
das
push
mov
mov
lcall
mov
js
mov
fists
dec
aaa
mov
pop
scas
shll
or
outsl
pop
mov
or
and
mov
sbb
push
cmp
push
enter
inc
fwait
and
inc
jg
add
adc
and
into
hlt
lcall
and
mov
mov
cli
call
movsl
dec
pop
cmc
mov
lcall
into
mov
int
repz
jg
or
call
cmp
xchg
inc
and
mov
jnp
mov
leave
pop
xchg
xor
and
add
cli
das
mov
xchg
mov
push
sub
aas
xchg
pop
sbb
inc
mov
mov
mov
jae
push
aam
jle,pt
cs
or
call
out
int
ljmp
lcall
sbb
popa
outsl
loope
call
lock
mov
and
xor
mov
mov
in
mov
iret
mov
pop
mov
sbb
xor
leave
loop
js
int3
sbb
cmp
pushl
pop
je
add
mov
xlat
fs
mov
cmp
js
nop
mov
aad
inc
out
in
adc
mov
lret
outsb
aad
mov
stc
incb
fcoms
xor
cmp
repz
jg
pop
sbb
sarb
test
add
fmulp
dec
inc
lcall
lea
xor
cmp
iret
frstor
sbb
xorl
test
adc
pop
push
fists
outsl
outsb
imul
jmp
ds
adc
sarl
push
shrl
push
jne
rclb
adc
mov
pop
sbb
xchg
test
fadds
xchg
scas
les
cmp
jo
inc
notl
mov
sbb
lock
lock
jmp
pop
ds
jge
inc
adc
jg
por
mov
xor
iret
loope
xchg
push
mov
into
insb
inc
add
jg
cld
scas
mov
ucomiss
paddb
mov
aaa
dec
mov
fcompl
mov
jmp
rcll
stc
inc
and
enter
iret
int
sarl
outsl
sub
popf
xor
out
inc
lcall
xchg
testb
je
dec
in
out
sbb
push
imul
mov
pop
fistpll
inc
adc
xor
addb
out
call
call
and
or
iret
xchg
ds
mov
andb
adc
scas
hlt
mov
and
mov
cmc
cmp
out
add
add
mov
call
inc
repz
bound
jg
dec
jl
test
cmpb
add
call
sahf
inc
lds
cmp
dec
orb
sub
in
sub
sbb
testb
ljmp
call
and
dec
shll
mov
outsl
pop
xchg
pop
xor
gs
push
cwtl
popa
push
loope
lahf
clc
dec
adc
jb
ja
out
stos
iret
cmp
mov
lret
aas
int
es
stos
data16
push
dec
jmp
cld
dec
cmc
pusha
cmp
in
mov
inc
inc
push
xchg
pop
lret
cmp
pushf
data16
or
decb
adc
insl
sbb
inc
jg
decl
sub
sub
stos
mov
adc
ffree
pop
inc
adc
xor
mov
pushl
push
jae
leave
fwait
and
sub
xchg
repnz
sub
jno
insl
jg
dec
cs
loop
pop
arpl
clc
cmpsl
cmpsl
lret
xor
jg
imul
xchg
pop
loope
insb
jnp
loope
shrl
pop
jg
pusha
adc
adc
xchg
sbb
clc
jno
xchg
xor
aad
lock
push
adc
outsl
mov
shll
movsb
int3
mov
pop
lahf
pop
dec
cld
call
stos
in
inc
aam
mov
negl
lahf
call
mov
daa
mov
sub
mov
cld
jns
ljmp
jecxz
mov
ficomps
adc
xor
and
clc
daa
jmp
lds
sbb
jg
mov
shl
adc
bound
add
adc
xchg
inc
inc
cmp
addl
addl
cld
inc
mov
ja
dec
imul
dec
sub
loopne
jge
sbb
mov
in
mov
inc
daa
cmpsl
cmp
push
pop
and
scas
adc
mov
mov
jge
lret
xor
cld
fwait
and
or
sarb
inc
inc
adc
lods
jg
sbb
add
cmp
popa
icebp
jecxz
mov
jg
rclb
mov
je
repz
orl
xchg
out
jle
fs
jne
jae
js
sbb
nop
mov
nop
loopne
addl
adc
clc
lea
fists
decl
inc
sub
pop
xor
cmpsl
popa
mov
adc
sahf
add
pop
xchg
daa
and
lcall
filds
xchg
inc
and
inc
inc
call
sub
ljmp
lock
mov
pop
test
je
pop
call
out
hlt
std
aas
and
jb
and
arpl
scas
stos
adc
clc
mov
fadds
mov
cli
ds
mov
mov
pop
mov
incb
jne
xchg
js
aam
push
jge
mov
dec
push
sbbl
mov
sub
cmp
cli
out
stos
sub
push
negb
jno
or
mov
jae
or
jne
cmc
icebp
adc
xor
jg
mov
or
xor
dec
inc
xchg
sbb
inc
lcall
xor
inc
repnz
dec
mov
je
aam
sti
dec
imulb
cmp
pop
dec
pop
pop
mov
ss
jle
mov
inc
cmp
shrb
ljmp
add
add
lret
and
addb
rep
aaa
mov
les
sub
jmp
lock
ljmp
sbb
insl
insb
mov
fdivrl
add
rorl
lcall
shl
movsl
nop
mov
mov
cli
mov
mov
out
cmc
outsl
sar
int3
into
arpl
or
xchg
call
mov
push
int3
das
xor
roll
push
xbegin
mov
gs
fwait
ret
sub
cmp
push
lahf
shlb
js
pop
aaa
ss
cmp
cld
rcll
test
jl
dec
scas
icebp
lock
cmp
cs
jne
rorl
pop
rolb
add
cmp
or
dec
adc
push
jecxz
repnz
jnp
push
jae
imull
xchg
inc
xchg
jmp
pop
sub
insb
sub
fwait
dec
sub
incl
call
mov
fistps
pop
cmp
fbstp
outsb
jbe
and
inc
and
cmp
mov
xchg
mov
frstor
cli
cli
out
jecxz
adc
mov
lock
filds
or
data16
test
negl
dec
add
in
push
pop
cli
sahf
cli
pop
sbb
cmp
repz
leave
clc
and
fldl
xlat
stc
mov
inc
cld
mov
imul
push
loope
repz
cltd
dec
jns
arpl
sbb
bound
hlt
sar
cmpsl
fistps
movsb
sbb
fldcw
mov
cmp
cmp
je
xchg
out
movsl
sub
dec
testl
pop
adc
popaw
out
mov
das
pop
mov
sbb
inc
lcall
dec
out
cmc
xor
pop
sbb
inc
loope
push
push
or
outsb
cmp
out
push
inc
insb
cs
mov
incb
fs
pop
sahf
dec
sub
sarb
add
test
int
cmpsb
cli
ja
std
es
dec
jbe
aam
hlt
iret
pop
jg
mov
mov
or
mov
mov
inc
cli
out
out
testb
or
outsl
xorl
dec
pop
and
cwtl
leave
push
inc
add
sub
pushf
inc
adc
leave
shll
mov
xor
mov
sbb
xchg
pop
in
hlt
in
mov
cmc
adc
push
push
test
cmpsb
fnstsw
ret
loope
jo
pop
fisubs
iret
sub
std
mov
cmp
data16
test
testl
mov
inc
fwait
das
sub
fdivrl
dec
xchg
dec
pusha
sahf
in
mov
add
cmpsl
dec
das
lcall
mov
inc
idivl
das
sbb
pushf
sub
cvttps2pi
das
fnstcw
mov
out
ja
pusha
popa
es
imul
inc
cld
and
mov
decl
int
lock
repnz
std
push
mov
push
ds
sbb
repnz
sbb
mov
int3
inc
leave
and
shrb
xchg
jmp
fbstp
ljmp
fcompl
cmp
add
stc
mov
mov
xor
out
scas
lcall
mov
push
pop
push
mov
decl
imul
aad
in
lods
mov
lock
std
inc
add
ret
jmp
lods
std
data16
test
call
mov
dec
addl
xchg
mov
mov
iret
cmp
leave
mov
add
inc
mov
lds
or
fdivr
les
daa
mov
sub
mov
xchg
fists
dec
mov
aaa
cld
xchg
cli
mov
shrl
push
dec
jns
imull
out
sub
sti
leave
gs
insl
push
jns
lahf
adc
fbld
js
push
cmp
fs
push
dec
pushl
aad
jne
xor
dec
add
mov
mov
and
mov
lds
mov
xlat
dec
jmp
out
cmp
das
xchg
mov
mov
daa
call
pop
fsts
ja
mov
lahf
fnsave
dec
sbb
push
mov
jge
filds
xor
inc
or
mov
push
fcompl
pop
std
je
out
lret
cwtl
jg
decb
or
call
stos
cmp
or
addr16
dec
cld
mov
outsl
inc
clc
repz
inc
into
xchg
sub
sub
and
cltd
gs
sbb
arpl
xchg
jge
push
lods
cli
inc
icebp
mov
loopne
faddp
aam
dec
mov
mov
cmpsl
stos
cmpsb
xchg
push
cld
pop
jmp
js
mov
xor
add
jp
mov
push
out
sbb
mov
cmp
rcl
js
xor
rorl
out
scas
popf
push
fldl
outsb
xchg
jp
icebp
into
loopne
mov
xchg
sbb
movsl
pop
int
jmp
push
jo
adc
ds
push
nop
outsl
and
pop
push
test
or
adc
sahf
movsb
aaa
mov
inc
dec
pop
mov
out
dec
cmp
rcrl
push
mov
jge
pop
ret
pop
rcll
add
call
loop
bound
nop
in
and
scas
cwtl
jecxz
sbb
ret
loope
add
adc
or
cmpb
mov
clc
jg
ljmp
inc
xor
sti
or
sti
call
out
inc
loopne
lret
adc
sbb
mov
push
scas
and
aam
push
mov
outsl
jno
push
neg
stos
inc
or
fldenv
sub
pop
icebp
cmp
mov
lods
push
pop
daa
dec
add
push
mov
jg
xor
dec
out
adc
sbb
ret
sub
xor
mov
sar
mov
push
xchg
jne
inc
mov
clc
call
mov
mov
lcall
aas
jle
add
adc
sarb
sub
aad
sbb
xchg
inc
lea
lock
je
and
or
xor
cli
pop
cwtl
sub
dec
outsl
outsb
out
cmpsb
push
les
pop
aaa
pushf
jmp
int3
outsl
inc
adc
cmp
push
into
push
lret
jg
jge
or
inc
loopne
fdivs
inc
mov
push
mul
mov
fstl
jl
or
in
call
andb
iret
push
popa
movsb
mov
out
outsl
test
loope
aam
inc
adc
mov
mov
push
out
loop
adc
xchg
out
out
das
imul
adc
out
inc
jmp
mov
stos
xor
xchg
int3
mov
loopne
push
popf
js
cltd
sub
push
lea
inc
clc
test
cvttps2pi
imul
jns
inc
arpl
add
and
add
fcomp
sar
lea
sbb
in
ja
sbb
in
jns
leave
push
lods
lods
cs
xor
fs
inc
cmp
mov
xor
cli
notl
out
jg
std
movsl
and
pop
lcall
push
pop
jle
sarl
cmp
inc
adcb
mov
cmp
ja
das
cmp
adc
adc
inc
push
and
addr16
xlat
push
imull
loope
shll
pop
and
leave
inc
mov
pop
loopne
adc
cmpsl
pop
cmp
mov
sti
xchg
ljmp
xchg
ds
xchg
std
fadd
add
push
xchg
push
mov
add
jmp
repnz
add
or
das
xchg
cwtl
imul
xchg
call
pop
sbb
xlat
jmp
lret
add
scas
fwait
lret
and
leave
jne
std
call
mov
pop
push
push
ljmp
daa
cmp
fidivrs
ljmp
imul
inc
rcr
pop
pop
xchg
nop
or
enter
add
inc
jnp
and
test
jp
xorl
incl
in
pushl
push
sub
std
out
add
cmc
or
sar
xchg
push
shll
cld
pop
adc
dec
jl
lcall
pop
pop
cvtps2pi
and
addr16
sahf
shrl
sbb
aaa
aas
or
xor
mov
das
add
fidivrs
xchg
and
push
xor
loopne
in
mov
pop
rclb
inc
fcomip
sbb
xchg
fisubl
cli
frstor
pop
gs
or
adc
in
int3
xchg
call
pusha
scas
pop
jl
mov
scas
cs
je
pop
mov
out
cmp
mov
ljmp
mov
or
add
add
cwtl
jecxz
in
fcmovnb
stos
jecxz
icebp
aad
cs
adc
adc
pushf
adcb
xchg
inc
es
xchg
fsub
data16
es
scas
cmpsl
pop
aas
movsl
shl
dec
push
ret
fisttpl
aam
cmp
pop
aaa
inc
sbb
fnstcw
push
pop
aas
xor
jg
jno
jl
adc
dec
sbb
pop
popa
ret
mov
push
push
fsubl
pushl
out
call
ss
pop
or
pop
inc
loopne
add
add
icebp
out
dec
push
adc
dec
in
xor
mov
aad
mov
jne
inc
mov
aad
nop
xchg
cmpsb
loopne
jl
dec
dec
cmp
xchg
jle
add
std
test
data16
lret
inc
adc
and
notb
jg
fdivs
sbb
shl
clc
int3
dec
out
outsl
sbb
push
mov
mov
xor
in
mov
add
loop
ljmp
hlt
shll
clc
dec
nop
cmp
or
mov
clc
xor
mov
andb
addl
js
daa
hlt
movd
imul
dec
call
jmp
push
add
jb
xchg
add
addr16
decb
pop
cmpsl
xchg
xor
dec
aas
pop
int3
lahf
cltd
mov
in
and
into
loope
mov
cmc
or
jne
add
xlat
xchg
xchg
mov
enter
outsl
cmp
push
dec
cmp
sbb
cltd
dec
outsb
cmp
push
aad
inc
repz
lahf
sub
ja
pop
dec
dec
popa
pusha
orb
or
pop
mov
aas
les
pop
sub
mov
sub
pushl
pop
cmp
in
enter
ljmp
mov
and
aam
ljmp
add
xlat
fsubp
fcomip
or
pop
cld
or
call
cs
pop
loop
movsl
inc
out
mov
ret
call
add
add
pop
in
jecxz
cmp
cld
pop
dec
into
or
mov
das
pop
mov
add
test
aaa
icebp
sti
int3
sbbl
scas
pcmpgtw
mov
push
jle
aaa
mov
pusha
test
mov
mov
mov
les
mov
sbb
or
jns
jmp
adc
mov
push
mov
pop
int3
or
or
pushl
jge
mov
imul
or
and
inc
sbb
inc
inc
xchg
and
std
sub
sub
push
mov
xor
mov
sub
rol
incb
jbe
and
sub
les
enter
and
inc
rol
stos
cwtl
cmp
sbb
outsl
stos
sub
ljmp
into
cli
sub
in
testb
inc
nop
sbb
xor
movsl
popf
mov
xor
mov
dec
sbb
lods
lahf
jmp
pusha
push
xor
xchg
mov
pop
adc
or
push
ja
pop
ret
add
cmpl
pop
imul
loope
mov
push
sti
test
sub
inc
inc
xchg
inc
pop
or
test
daa
daa
fcomip
or
add
fnstenv
sbb
movsb
sbb
jnp
arpl
jmp
and
jp
aaa
movsb
int
in
fiadds
nop
cli
mov
ljmp
sti
xchg
aaa
dec
movsl
in
icebp
cld
adc
mov
lds
bts
pop
jne
into
cmp
jecxz
add
enter
push
add
dec
push
dec
jno
add
inc
xor
xchg
push
pop
push
push
nop
call
lods
shrb
repz
movsb
and
je
loope
pop
les
in
push
movsl
sub
test
sti
stos
mov
mov
sub
inc
popa
sbb
jns
ret
mov
pop
and
mov
daa
test
clc
jnp
add
shlb
cltd
jmp
sbb
scas
push
fidivs
pop
push
add
lcall
inc
inc
add
dec
jmp
imul
sbbl
imul
add
pusha
rcll
pop
hlt
add
repz
pop
push
push
jmp
xor
push
repnz
imul
jmp
repz
pop
xor
push
sbb
scas
subb
xchg
push
fcmove
loop
mov
or
pop
push
mov
and
add
in
and
mov
lea
cmc
int
add
xchg
sbbb
into
adc
int
rorl
jns
jns
xchg
cld
push
add
xor
insl
cmp
rolb
mov
mov
mov
stc
inc
push
mov
lods
dec
clc
cmp
adc
hlt
push
push
imul
mov
rclb
jl
js
pushl
cmc
mov
mov
push
pop
lock
sbb
lock
jbe
pop
inc
xchg
mov
mov
lcall
sbb
pop
repnz
push
arpl
shl
ror
mov
nop
cli
mov
and
cmp
out
xchg
xlat
sbb
js
adc
xor
sbbl
sub
out
or
or
pop
test
add
pop
push
push
fadds
push
and
popf
add
jae
or
cmp
xchg
push
sarl
cmp
inc
mov
inc
int3
and
xor
and
mov
aaa
xor
mov
jne
xchg
cmpsb
ja
iret
add
roll
fwait
mov
push
ret
ret
ror
cmpsb
lret
dec
sub
adc
scas
andb
cld
shll
stos
dec
sbb
xor
sub
mov
or
or
dec
adc
add
cli
adc
icebp
outsl
inc
lds
jbe
push
pop
push
add
xor
fs
call
daa
pop
sahf
mov
scas
jbe
call
sub
lods
es
cmpsl
movsb
negb
outsb
call
push
repnz
andb
or
jae
lcall
in
push
faddl
inc
std
cmp
push
andb
pop
jbe
jecxz
xchg
add
mov
cli
aaa
or
mov
lea
fcom
rclb
and
push
xor
jle
cmp
add
shrl
jbe
movsb
inc
sbb
and
push
out
push
xchg
mov
mov
icebp
push
stc
add
lret
jb
andb
xchg
pop
aas
sbb
jg
mov
scas
ficoms
shll
pop
mov
dec
jmp
adc
ret
xchg
xchg
sbb
push
aad
cmpsl
imul
adc
or
or
in
pop
sub
add
mov
stc
sub
add
aas
sub
fisttps
cmp
cs
pop
lods
jl
pop
ret
xor
dec
popf
lea
pushf
dec
loop
bound
xchg
das
jmp
push
push
pop
lret
sbb
popa
inc
or
iret
movsb
push
jmp
sbb
pusha
add
and
mov
mov
fcom
xor
xchg
fcompl
xchg
lea
andl
das
gs
or
aaa
ret
aad
add
stos
jo
xchg
rorl
or
sbb
test
dec
xchg
xor
push
int
xor
cmp
scas
lret
mov
mov
mov
jl
rcrl
in
pop
and
shlb
cmp
and
sub
shrl
mov
dec
sbb
in
popa
xor
std
push
add
fiaddl
les
jo
push
nop
aas
in
push
pop
arpl
inc
adc
cmp
push
xchg
repz
cwtl
out
cmp
xor
xchg
jnp
pushf
sub
add
inc
imul
pop
jecxz
repnz
rolb
inc
sub
decl
inc
shlb
inc
fisubrs
sbb
enter
mov
out
dec
dec
aaa
pop
aad
mov
leave
cwtl
cmp
mov
cli
or
cmp
push
pop
or
gs
loopne
xor
icebp
jmp
jns
jb
mov
rcrb
in
add
lea
adc
push
pushf
xchg
dec
pop
ss
mov
add
bound
mov
bound
or
imul
jae
cmp
mov
push
dec
sub
jmp
fs
xor
jg
jle
xor
call
adc
push
and
jg
push
clc
dec
xchg
xchg
stos
in
sbb
mov
dec
dec
roll
jbe
testb
shrb
inc
and
lods
jmp
sbb
mov
fdiv
jns
aaa
push
ds
sub
mov
sub
aas
insl
lret
les
in
dec
pop
mov
fbstp
pusha
or
clc
lock
mov
push
lcall
inc
dec
xor
mov
or
aam
push
divb
inc
scas
sub
sub
xor
dec
sub
popa
imul
adcb
loope
cs
jmp
and
or
das
divb
shlb
adc
mov
clc
ds
xchg
cmp
push
imul
mov
or
push
cmp
test
mov
push
jne
cli
mov
inc
xchg
pop
mov
cmp
aam
push
push
mov
out
cmpsb
jge
imul
adc
into
inc
mov
pop
fldl
decl
mov
pop
xchg
sti
mov
pusha
push
jl
inc
dec
clc
fs
inc
dec
jg
in
in
mov
clc
pop
add
adc
sub
xchg
adc
dec
jmp
pop
or
insb
add
xlat
addl
mov
add
xlat
rorb
inc
nop
and
mov
hlt
dec
test
stos
icebp
in
ret
push
rcrl
inc
xchg
pop
movsb
test
xor
test
xchg
inc
outsb
sahf
push
mov
dec
divl
dec
push
mov
push
mov
add
addr16
mov
xor
jp
fwait
pop
inc
arpl
cwtl
pop
jo
xchg
jp
mov
stc
inc
scas
inc
clc
dec
daa
outsl
mov
or
subl
movsl
mov
cmp
scas
mov
cwtl
add
shrb
sti
add
pop
push
mov
insb
je
dec
mov
pop
mov
mov
sub
mov
xchg
or
in
xor
mov
jg
fldln2
daa
sub
rcrb
sbb
outsb
test
sbb
push
adc
and
jae
adc
mov
jge
rol
sub
pop
sti
fldt
add
xor
sbbb
lods
into
mov
push
or
xor
sbb
pop
add
out
mov
lret
mov
inc
sub
mov
push
loopne
test
mov
adc
lret
mov
mov
or
xor
or
loope
fiaddl
hlt
jle
xor
das
aam
or
int3
add
stos
js
push
test
push
pop
decb
jg
xchg
sbb
movsl
pushf
xchg
pop
inc
and
jle
mov
mov
lods
add
mov
mov
movsl
add
cmp
sbb
xchg
and
das
mov
fmull
insb
out
test
std
andb
mov
cwtl
jge
xchg
add
mov
jecxz
or
les
ret
jp
fyl2x
fmuls
roll
or
shl
imul
dec
movsb
xchg
mov
sub
in
mov
vmread
outsb
push
std
test
bound
inc
es
test
add
pop
js
mov
outsb
ljmp
ret
outsb
daa
jmp
jae
jno
mov
jnp
xchg
in
add
cmp
outsl
mov
out
lds
sahf
incl
add
pushl
adc
shlb
cmc
mov
sti
clc
push
mov
mov
pop
loopne
cli
addr16
mov
inc
xor
xchg
test
push
push
push
xchg
jnp
xchg
fcomps
xor
push
sub
out
jnp
push
call
push
in
sbb
xchg
mov
js
inc
push
inc
add
mov
aam
fbstp
je
into
test
gs
add
pop
popf
lahf
es
cmp
dec
adc
fstpl
icebp
fstl
adc
pusha
or
mov
add
add
icebp
mov
loope
jae
jnp
scas
adc
cmpsb
sbb
jae
popa
inc
xchg
push
push
add
cmp
jne
test
ljmp
xchg
mov
xor
add
pop
fidivl
dec
mov
lock
xor
or
dec
sbb
cmp
jge
orb
jbe
lds
jp
movsl
sbb
pop
roll
out
test
mov
sbb
mov
imul
orb
pop
ds
daa
push
push
decl
or
jo
xor
fwait
sbb
push
scas
push
out
cs
mov
mov
sbbb
test
mov
cmp
repnz
push
mov
mov
int3
sub
das
jge
mov
xor
add
lret
mov
jle
mov
aas
hlt
cmp
test
cmpsl
add
es
shrb
and
jmp
xor
mov
or
mov
xchg
mov
jp
out
test
enter
xchg
sbb
mull
mov
bound
dec
pusha
dec
pop
add
test
inc
pusha
mov
xor
in
push
mov
inc
xor
xchg
stos
xchg
adc
xchg
mov
nop
je
add
jmp
push
bound
aas
cmc
add
inc
vpextrw
jge
daa
subl
rclb
stos
outsl
sar
ljmp
ljmp
inc
mov
add
adc
ljmp
mov
lahf
loope
shlb
or
mov
sbb
aad
roll
push
jo
xchg
mov
mov
xchg
mov
fnstcw
jnp
aaa
test
mov
je
imul
ljmp
mov
inc
sub
popa
test
lods
mov
ljmp
xchg
or
pushf
inc
jo
aad
cli
dec
test
mov
jo
cmpsb
stc
stos
aas
repz
mov
fistps
sub
nop
mov
test
mov
pop
push
iret
icebp
stos
push
gs
hlt
nop
add
xor
push
cltd
stos
imul
fidivs
jno
mov
push
xorb
mov
cmp
dec
jbe
xchg
add
xchg
mov
add
sub
testl
jecxz
call
loopne
stc
and
pop
aaa
or
dec
outsl
loopne
lock
ds
clc
and
mov
sub
or
hlt
stos
xor
and
pop
or
sbbb
fildll
mov
sbbb
mov
arpl
sub
cmpsb
pushf
jno
int3
push
mov
pop
mov
insl
adc
and
mov
prefetcht2
and
cmp
repnz
mov
call
loopne
pop
inc
cmp
mov
popf
jle
dec
std
jo
iret
sbb
add
push
add
insb
in
mov
je
in
into
dec
lock
sub
pop
cli
dec
cmp
sahf
adc
add
rcrl
push
add
xchg
xor
cmpsb
incb
and
jo
repnz
repz
je
cmpsl
daa
lcall
adc
dec
es
adc
pop
test
xor
mov
jae
cmpsl
fmulp
mov
push
sub
mov
push
jp
or
cmp
aaa
xor
add
fs
into
cld
cmp
jae
push
les
push
lock
jg
mov
repnz
lock
sub
pop
sub
inc
std
out
and
in
in
push
add
out
testb
xchg
scas
in
xor
sub
inc
arpl
pusha
adc
lcall
das
fs
inc
or
cmpsl
jp
adc
shrl
xor
daa
leave
xorb
sbb
das
cmc
adc
in
cmp
push
mov
mov
xchg
mov
or
jmp
in
loopne
call
fstps
add
push
hlt
pusha
add
inc
push
dec
add
mov
nop
outsb
ret
sub
inc
pop
push
loopne
adc
or
mov
xchg
or
scas
inc
mov
loope
test
mov
jge
rcl
jmp
mov
out
inc
adc
test
inc
xchg
mov
fwait
mov
lds
addr16
dec
test
js
fisubs
dec
popa
popa
or
movsl
ljmp
xchg
push
inc
sub
add
cltd
xchg
outsb
xchg
adc
rclb
cltd
test
lock
sbb
fisubs
mov
and
out
or
clc
sahf
inc
add
adc
gs
shll
pop
dec
lcall
dec
roll
shlb
pop
test
mov
das
dec
and
mov
xor
int
out
aam
inc
roll
push
imul
sbb
lret
ss
popa
push
push
lock
inc
out
xor
pop
daa
loopne
pusha
sbb
xchg
xor
cs
pusha
negl
xor
mov
and
out
js
pop
fstps
add
pop
pop
sbb
pop
cmp
inc
int
inc
xor
sti
repz
inc
gs
inc
pop
cmp
imull
and
repz
test
cmp
and
or
mov
into
jmp
or
lret
sbb
lret
dec
mov
fsubrs
js
sbb
xor
jmp
shl
ds
lcall
add
pop
mov
movb
out
mov
xor
fbld
mov
cs
sbb
jmp
pop
jo
sbb
push
aad
adc
xor
add
out
les
test
repnz
into
mov
test
cmc
push
cmp
mov
std
jb,pn
mov
repz
jle
enter
out
popf
push
jecxz
lock
negl
adc
add
adc
jle
cmpsl
adc
inc
push
mov
pop
insb
icebp
popf
pop
push
push
or
imul
or
sbb
shll
mov
add
subb
sbbb
cwtl
dec
aam
shl
cmc
push
jae
jbe
faddl
dec
fidivl
sbb
hlt
or
js
cmp
loop
rcll
cwtl
mov
mov
pop
jmp
dec
or
xchg
and
push
clc
add
jle
loop
pop
and
lods
fcmove
xchg
adc
lods
xor
push
mov
cld
repnz
cld
imul
jp
stc
imulb
and
enter
push
out
es
pop
xor
sti
hlt
sbb
xchg
or
int
push
add
adc
jae
xor
jle
jp
cmp
bound
add
es
test
fwait
dec
pop
mov
popa
dec
popa
enter
loopne
outsb
movsl
loopne,pt
shr
lahf
bound
fildll
pop
lea
insl
imulb
jnp
lret
pop
test
sub
xchg
sub
mov
loopne
pop
add
mov
jmp
push
ss
inc
jmp
int
mov
xchg
mov
sbb
or
sqrtps
rol
mov
out
icebp
pop
roll
int3
lock
insb
pop
push
js
or
or
add
scas
or
xor
inc
ret
inc
push
push
or
jl
adc
fiaddl
pop
movsl
mov
pop
sbb
mov
and
sbb
fcmovb
mov
shrl
dec
mov
adc
xchg
mov
arpl
mov
or
add
jg
ret
push
mov
mov
pop
mov
and
mov
scas
ss
js
inc
cmp
mov
out
pop
loope
push
and
jne
cli
sbb
pushf
add
insl
jnp
dec
imulb
ds
cmpb
mov
rol
pop
call
dec
mov
cmp
mov
or
pop
cwtl
push
mov
inc
ret
rorl
cld
cmpsb
sbb
in
fstp
cld
add
movsl
cwtl
push
pop
enter
xor
loop
lcall
fldt
pusha
sub
add
mov
dec
shrb
and
mov
mov
data16
lds
leave
or
jl
or
and
in
fwait
stos
pop
dec
push
pop
hlt
lods
fadds
mov
icebp
dec
in
fcmove
and
subb
insl
int
dec
std
js
scas
insb
shrb
and
jne
daa
push
mov
and
mov
rorb
popa
lahf
pushf
xchg
add
push
out
enter
xlat
mov
adc
lock
xor
mov
adc
cmovp
mov
cmp
aas
repnz
inc
sub
cmc
sub
dec
leave
or
stos
xor
cmpsb
fstpl
insb
sub
je
pop
mov
push
pop
call
or
push
add
sub
push
mov
fcomp
push
jno
push
cmp
add
leave
mov
mov
mov
mov
lcall
xchg
or
adc
loop
adc
or
adc
cmp
and
or
int3
subb
hlt
add
int
adc
xlat
sbb
out
aas
pop
cwtl
scas
aad
pop
rolb
xor
pop
pop
cmp
push
pop
or
inc
inc
push
ds
adc
jns
jg
mov
cwtl
jno
pop
sub
sub
sti
pushl
add
js
es
lahf
sbb
lds
pushl
iret
jo
xor
je
cwtl
addl
xchg
add
push
or
movsl
jecxz
mov
jo
pop
inc
fnstenv
ss
mov
fcmovu
ljmp
push
xchg
pushf
test
rcll
ret
cli
ljmp
and
out
cmp
xchg
loope
das
std
lds
addr16
xchg
call
jle
inc
sub
sbb
xor
and
xor
icebp
das
icebp
loop
sarb
orl
add
sarb
sub
sbb
outsb
sbb
stos
push
inc
mov
shr
dec
fisttpl
lock
jae
cld
stos
sub
rcll
sub
test
fsubrp
popa
mov
jns
adc
jnp
mov
in
adc
pushf
sub
inc
dec
daa
data16
or
es
push
pop
xchg
int3
mov
cli
or
stos
std
daa
ret
and
mov
fimull
in
cmp
mov
add
or
xchg
mov
xchg
js
out
mov
icebp
stos
subl
jg
jmp
or
add
mov
fwait
or
btr
dec
sub
jle
aam
sub
clc
xchg
dec
adc
adc
fisubs
sbb
out
add
lods
out
les
pop
loope
cltd
dec
lods
pop
inc
movsb
push
lahf
pop
jmp
inc
mov
push
inc
scas
adcl
jle
cli
insl
xlat
mov
push
stos
outsb
xor
lods
test
fisttpll
test
daa
mov
dec
and
into
popa
movntps
inc
out
xor
imul
sub
mull
pushf
ret
cli
add
test
jg
stc
jns
mov
int3
inc
inc
aaa
pop
adc
sub
or
insb
and
sub
shlb
js
inc
loopne
movsb
call
mov
xchg
out
gs
outsl
inc
inc
inc
mov
in
push
xor
sbb
je
sub
js
mov
outsb
inc
push
cli
push
mov
and
in
inc
rclb
cmp
lcall
jbe
es
fisubl
dec
inc
inc
loope
fwait
mov
jbe
ja
push
rol
and
dec
inc
dec
xor
fistps
inc
pop
inc
xor
sbbl
pop
mov
inc
jl
jge
and
dec
adc
movsl
sub
out
shrl
sub
push
xchg
sbb
sub
jmp
stos
push
xor
aad
push
call
mov
jae
push
push
std
mov
push
push
shll
mov
mov
or
scas
orps
cmp
lods
cmp
xchg
popf
xorl
ret
cmp
or
sub
movsb
pop
pop
mov
loope
xor
add
jo
lcall
jl
sub
pop
adcl
dec
push
insl
cmpsl
cmpl
mov
xchg
push
aas
push
cmpsl
mov
pop
mov
jle
cmp
xchg
aaa
pop
ja
push
mov
in
lods
mov
std
mov
dec
lret
mov
or
lods
adc
outsb
mov
mov
pusha
fnstcw
outsb
sub
pop
mov
add
mov
adc
pop
mov
inc
int3
dec
cli
test
or
jmp
jg
dec
add
mov
xchg
jp
push
pop
push
outsl
mov
sub
hlt
and
sub
xlat
icebp
mov
jbe
repz
rcr
jl
xchg
pop
add
add
arpl
cli
xchg
or
cmpsl
or
aaa
xchg
push
push
rolb
lcall
test
push
jg
jno
pusha
loope
and
in
sub
push
cmc
repnz
add
imull
push
push
push
cmp
sbb
sbb
scas
adc
jno
pop
add
jp
cld
inc
fistl
sub
stos
push
loop
mov
cmpsb
repnz
inc
mov
push
jne
sbbb
add
fwait
inc
inc
add
pop
cld
jns
cwtl
push
push
dec
cmp
add
inc
loop
jg
aas
adc
and
hlt
xchg
loopne
add
adc
inc
push
mov
popf
add
mov
loopne
mov
sbbb
inc
incb
cmp
cmp
mov
insl
add
xchg
sub
popf
push
into
mov
call
xchg
aas
and
xchg
xlat
inc
cmp
push
cs
hlt
sub
nop
fisubrl
lds
movsb
daa
xchg
sbb
dec
rorb
cli
decl
push
lock
sub
and
add
add
outsl
dec
subl
and
or
cltd
xor
mov
dec
push
fcomp
xor
jge
inc
mov
les
pop
into
xchg
xchg
cmp
subb
cmp
xor
sbb
stos
std
out
push
mov
and
loope
cmp
push
in
sub
popf
fstpl
movsl
imul
inc
jg
dec
pop
add
push
mov
inc
dec
mov
push
add
jp
adcb
dec
cmc
add
pusha
sub
dec
out
cmc
or
jge
insl
call
cmp
add
mov
or
loopne
inc
push
mov
dec
test
ret
lret
cs
or
and
lea
sub
mov
mov
push
or
xchg
js
imul
cmp
push
decl
xchg
cld
cmpb
out
stos
mov
add
das
sub
pushf
mov
mov
pop
iret
jnp
cwtl
xchg
mov
inc
test
hlt
imul
jecxz
cmp
mov
push
lret
cmp
mov
pushf
adc
daa
mov
faddl
call
push
cmpb
add
xchg
push
pop
cmpsb
jecxz
add
shlb
jecxz
aaa
sbb
sti
pop
fistpl
test
cmp
pop
jb
stos
mov
add
add
pop
out
sahf
sbb
jo
loope
xor
insb
mov
sub
jg
fmuls
sub
adc
xor
stos
push
jmp
test
add
stos
cmc
std
push
sub
inc
mov
mov
mov
and
sti
outsl
pop
sbb
xchg
imul
pop
adc
jmp
push
or
add
aad
inc
sbb
imul
pop
push
inc
cmc
loope
or
mov
jl
fildl
stos
dec
add
lret
andl
mov
int3
push
enter
jge
xor
mov
xchg
pop
jne
push
dec
pushf
inc
inc
adcl
mov
jg
inc
iret
idivl
add
dec
hlt
icebp
xchg
arpl
mov
mov
orb
push
mov
mov
inc
mov
dec
dec
std
push
cli
jecxz
cmpsl
add
pop
int3
xchg
inc
push
sar
mov
stos
sbb
mov
dec
push
mov
sarl
sarb
bound
add
adc
ret
inc
inc
push
rolb
push
les
call
jns
xor
jbe
push
outsb
sbb
add
sub
dec
add
cld
ja
mov
mov
inc
inc
cmp
ret
jg
cs
add
dec
rol
daa
cmp
sar
add
cmp
rcrb
mov
mov
aam
xor
ja
jecxz
clc
aaa
int3
test
xchg
aaa
push
add
add
cmpsb
loop
xor
jmp
pop
mov
sub
push
cmp
stos
and
inc
popl
rorb
xchg
jo
xchg
stos
cmp
lahf
les
add
mov
xchg
pusha
ja
xchg
int
sbb
nop
popf
outsb
or
add
and
outsb
ja
push
inc
aaa
insl
mulb
stc
jl
clts
cs
inc
or
sub
add
push
in
add
mov
in
inc
xchg
mov
or
sbb
push
sub
addw
test
and
push
fidivrs
mov
add
mov
je
mov
push
ret
mov
hlt
je
or
xchg
shll
mov
popa
cmp
frstor
fwait
std
mov
pop
jno
add
insb
cmc
or
and
in
xor
jno
mov
insb
and
popf
mov
push
lods
movsl
sbb
rdpmc
or
xor
push
mov
xor
mov
xchg
sbb
outsl
xor
fldl
adc
pop
jl
add
orb
jbe
inc
mov
enter
scas
and
pop
push
lods
int
out
fwait
push
fistps
dec
dec
test
push
xor
out
pop
loope
popf
adc
mov
sbb
xor
cltd
push
lods
mov
and
enter
negb
push
adc
push
lods
push
jo
lock
pop
dec
addl
lods
and
pop
xor
call
dec
dec
cmpsl
stos
mov
ja
in
or
mov
incb
add
cld
dec
cwtl
xor
adc
aad
cmp
add
bound
sbb
addr16
dec
cld
sub
cld
pop
roll
ds
pop
push
or
daa
push
xor
cmp
push
mov
hlt
lret
js
inc
jne
iret
ret
loop
jb
sub
dec
fcom
adc
sarl
rorl
mov
iret
out
and
lea
cmp
fidivrs
add
in
dec
dec
mov
bound
or
fisubrs
inc
and
mov
cli
or
pushf
adc
add
int
xchg
adc
and
mov
xorb
inc
mov
js
mov
lds
pop
inc
cli
mov
dec
mov
cld
lds
inc
fs
sbb
in
dec
insb
add
fwait
mov
push
cmpsb
adc
ljmp
xchg
dec
dec
cmpl
dec
dec
pusha
sub
jb
test
cmp
sti
and
jnp
or
mov
xchg
ret
rclb
jnp
stc
cmp
cmp
filds
mov
xor
mov
lahf
add
fdivrs
cmpl
xor
insl
stos
add
loop
scas
mov
popf
shlb
inc
sbb
into
shl
fcom
sbb
add
cmp
cmp
mov
adc
jmp
ret
sbb
xchg
jne
out
hlt
cmp
inc
loope
cmp
jge
and
daa
mov
add
push
and
test
mov
sbb
sarl
dec
or
fldcw
push
sbb
movsl
sarl
std
addr16
dec
out
clc
mov
inc
pop
pushf
jecxz
pop
cld
add
scas
std
push
mov
inc
add
mov
mov
cli
xor
das
jno
scas
movsl
mov
dec
jg
test
or
pop
inc
insl
xchg
jp
adc
cmp
cwtl
jo
sbb
xor
nop
mov
aam
aaa
hlt
scas
repnz
les
data16
mov
leave
les
push
inc
mov
push
js
nop
mov
das
xchg
sbb
and
mov
cld
movl
lock
and
xor
mul
fnstsw
shll
lods
jbe
xchg
outsl
lods
jp
leave
jmp
or
mov
pop
sub
stos
inc
lock
inc
mov
sbb
in
fdivrl
addr16
push
mov
xchg
movsl
add
adc
push
pushf
aam
scas
rclb
jno
xchg
int3
addb
aam
iret
dec
cmp
or
add
add
pop
stos
leave
or
ja
mov
sbb
xor
clc
les
adcb
loope
and
jne
push
mov
jnp
add
cmpsl
pusha
inc
xchg
xchg
loop
sub
pop
into
mov
imul
mov
jbe
xlat
sub
pushf
orl
dec
xchg
test
xchg
cmp
xchg
jno
xchg
inc
dec
insl
or
inc
xchg
push
ret
out
cmpl
scas
add
add
add
or
inc
and
or
int3
mov
mov
inc
cmp
pop
mov
je
cltd
jg
xor
cli
sub
cs
bound
push
jge
inc
sub
xchg
xchg
or
rorb
std
iret
ja
fucomi
sbb
test
xor
rcr
scas
push
inc
cmp
cwtl
jno
aad
xor
mov
outsb
inc
pop
or
mov
test
xchg
xlat
shll
pop
adc
add
jno
mov
add
mov
das
pusha
xchg
mov
pop
les
add
shrl
aad
dec
jecxz
jbe
icebp
sub
xchg
mov
in
xchg
dec
and
subl
add
pop
dec
xor
mov
scas
cmp
mov
xlat
add
mov
lahf
xchg
jno
inc
aad
xlat
scas
and
add
fstpt
lea
arpl
leave
adc
sub
stos
je
je
mov
push
push
les
addl
sub
add
insl
pop
mov
out
cltd
aam
jno
add
add
imul
imul
addr16
xor
imul
inc
test
lahf
mov
pop
inc
pop
add
xor
inc
inc
mov
inc
sbbl
dec
pop
push
mov
or
aas
inc
xor
leave
mov
cmp
std
rclb
or
mov
push
insl
jno
insb
lcall
rorl
inc
mov
imul
andb
dec
xchg
cs
xor
cs
call
shlb
stc
pop
hlt
shrl
push
pop
xor
rol
int
sbb
xor
push
lods
mov
les
dec
daa
push
mov
jp
subb
mov
lcall
out
push
icebp
sti
call
aam
pop
sbb
mov
repz
dec
push
in
and
js
rclb
dec
lsl
lock
test
cmpb
pop
add
and
jb
mov
adc
fstp
mov
lea
ljmp
mov
pop
mov
pop
pop
mov
inc
push
jl
mov
mov
rcr
fldenv
imul
or
jb
inc
and
popa
ret
les
aas
xchg
jbe
jne
cmp
inc
cmp
cmpsb
sbb
incl
andb
pushf
mov
inc
aaa
loop
cmp
aas
xor
jl
aad
mov
dec
cmp
sub
jns
or
push
sar
es
lock
and
lret
ficompl
xor
lods
inc
jo
ljmp
cmpsb
outsl
or
push
mov
xor
push
and
sbb
aad
adc
pusha
int
cmp
add
xchg
outsb
cmpb
or
xchg
mov
cltd
dec
std
xchg
push
and
fs
and
dec
out
std
mov
dec
outsb
iret
arpl
aas
jae
mov
rcr
scas
or
mov
or
dec
sub
cmpsb
cmp
mov
mov
scas
bound
xor
pop
xchg
adc
je
lahf
cs
pop
lock
aad
pop
movsl
mov
or
inc
pop
lea
push
cld
out
loope
ret
clc
mov
loopne
xchg
jne
sti
xor
test
mov
addl
mov
lods
sub
mov
pop
cmp
or
fs
push
loopne
jle
push
xchg
ret
mov
and
add
mov
mov
push
dec
les
test
scas
bound
mov
adc
outsb
jo
out
gs
jbe
out
leave
ret
movsb
mov
stc
add
push
adc
mov
subb
add
jne
hlt
inc
mov
movsl
mov
js
fidivrl
mov
aas
es
xor
and
add
loopne
rolb
test
add
sbbl
dec
adcb
sahf
dec
sub
jne
mov
gs
fsts
mov
mov
out
pop
into
mov
fistpll
xchg
iret
mov
mov
imul
sub
aad
dec
xchg
jl
pushf
cmp
cmp
xchg
int
or
inc
out
adc
rclb
pop
adc
pop
xchg
mov
ljmp
pop
rcl
mov
adc
xchg
inc
in
adc
jnp
insl
and
xor
call
rcll
stc
pop
pop
lds
xchg
mov
aad
xor
pop
icebp
push
adc
roll
or
ljmp
jbe
inc
push
push
call
and
in
dec
mov
push
xor
test
jmp
push
inc
test
rcll
movl
sti
adc
cmp
xchg
cli
lahf
ret
and
push
pop
mov
popa
stc
jmp
mov
sub
cli
mov
adc
sbb
pop
scas
cmc
ljmp
mov
add
movsl
xchg
cltd
mov
xchg
jno
or
adc
jp
ja
adc
add
aam
and
mov
jge
jae
cmp
in
inc
sbb
sbb
inc
pop
mov
pop
push
ret
insl
lods
add
xorl
std
lea
push
and
mov
dec
out
or
test
sub
inc
es
aaa
push
nop
pop
and
ror
scas
adc
enter
leave
es
js
stos
test
jg
add
shll
push
mov
jns
rcrb
scas
popa
lret
aas
jecxz
test
lahf
adc
inc
jbe
push
mov
push
test
pop
mov
aaa
movsb
cmp
push
push
mov
inc
out
mov
mov
adc
scas
es
inc
dec
xchg
dec
cmp
ja
and
add
inc
clc
sbb
push
rorb
jbe
popf
push
cmp
clc
xchg
or
adc
fcmovb
mov
ret
mov
or
std
insl
mov
inc
add
dec
andl
cmp
dec
adc
out
inc
ret
filds
stc
dec
imul
mov
cld
das
xchg
aas
cmp
or
jl
push
jmp
out
incl
push
out
add
popa
lret
rcl
pop
mov
or
insb
push
jo
jae
push
cli
outsb
in
mov
imul
pop
ja
xchg
ja
hlt
jo
xor
out
inc
pop
jns
mov
jno
and
jns
lret
mov
mov
dec
lock
ja
mov
inc
mov
mov
mov
in
pop
dec
clc
jge
mov
int
movsb
bound
mov
cwtl
sbb
dec
sbb
cs
inc
leave
add
stos
out
outsl
cltd
sub
xor
jae
cmpsb
mov
jg
inc
mov
ja
mov
loope
add
shll
jns
or
push
or
lahf
dec
add
mov
pop
sub
sti
ja
pop
scas
subb
adc
lods
addr16
mov
jmp
sub
jg
jge
rcrb
push
cmp
cmc
das
fmuls
in
ljmp
repz
cmp
loop
test
dec
pop
cli
dec
xor
mov
add
push
pop
aaa
mov
adc
rol
sbb
jo
sbbb
mov
dec
xor
jecxz
jmp
fimull
sbb
adc
inc
xor
outsl
inc
lods
ret
mov
sub
mov
test
jecxz
loop
jmp
xlat
test
or
cs
jae
jb
cld
xor
lcall
adc
ds
sub
test
xorb
dec
sub
push
and
mov
push
out
xchg
cwtl
sub
pop
sub
gs
mov
adc
cmc
pop
add
push
jl
mov
ret
out
stos
or
andnps
lods
xchg
inc
scas
push
clc
loopne
pop
inc
jp
sbb
test
mov
test
jl
dec
stos
sub
mov
aaa
push
call
dec
nop
cmp
pop
fcmovnu
call
add
xor
repz
sub
fstl
sbb
inc
clc
cmpsl
aas
mov
mov
sbb
mov
mov
ja
push
stos
xor
sbb
call
adc
mov
mov
mov
push
scas
lods
push
sub
lret
xchg
push
or
lock
mov
lahf
shrb
mov
aad
stos
sti
dec
clc
mov
mov
adcb
or
adc
in
loope
sbb
xchg
test
xor
rolb
rol
mov
push
inc
cli
in
mov
in
ss
subb
mov
xchg
push
not
jecxz
add
sarb
pushf
out
fdivrl
cmpsb
dec
sbb
mov
adc
pop
stc
mov
gs
mov
sbbl
lret
test
inc
inc
push
sarb
out
add
je
int
movsb
jns
mov
fsubrl
adc
xchg
push
jge
inc
js
fcoms
push
push
add
mov
pop
pop
cmpl
testb
les
sarb
pushl
xlat
enter
cwtl
hlt
sti
sub
out
ds
rcll
jo
and
mov
push
out
nop
add
or
in
push
shrl
ficoms
jb
call
push
xchg
outsb
inc
dec
push
jmp
inc
push
jnp
mov
inc
push
dec
pop
push
inc
push
jg
lods
cli
mov
and
mov
or
inc
ljmp
loop
test
inc
add
fildl
ret
adc
imulb
pop
loope
and
ret
cmp
mov
call
outsb
inc
jecxz
add
roll
fstl
pop
rorl
cwtl
sbb
int3
xor
jbe
mov
push
jle
sbb
fstp
mov
mov
dec
aaa
mov
cmp
or
stos
test
add
push
pop
or
and
or
loop
dec
sbb
pop
rcll
movsl
xchg
stos
inc
jb
sti
xlat
and
loop
add
pop
adc
mov
aad
push
xor
fbstp
or
icebp
loope
inc
dec
in
or
inc
adc
cld
data16
test
sbb
adc
addr16
cmp
jl
imul
ljmp
xor
lods
mov
es
js
jo
dec
loop
jns
adc
adc
mov
add
adc
push
gs
decl
jo
adc
sbb
add
ss
jg
cmp
fisubs
xchg
lahf
inc
pop
cs
test
ret
xor
fisttpl
lods
add
jmp
sarl
test
mov
adc
adc
adc
lret
outsl
clc
push
xor
mulb
pop
je
dec
add
scas
lock
xchg
rcr
je
cli
aad
jbe
mov
int
loope
mov
sarb
inc
push
in
je
scas
ficomps
insl
jp
mov
cli
fldenv
les
rorl
jne
xorb
cmp
into
sti
dec
mov
mov
add
sahf
movsb
mov
add
outsl
decl
sub
cmp
repz
pop
lock
inc
das
mov
idivl
and
mov
mov
push
or
mov
lret
mov
scas
push
enter
push
hlt
outsb
call
mov
out
test
sbb
je
xor
dec
or
incl
test
xor
imul
dec
add
loopne
rcrb
add
shlb
fdivs
or
cmc
add
cwtl
orb
cmp
mov
mov
shll
mov
test
outsl
jo
nop
sbb
mov
out
cli
and
xchg
int3
push
mov
add
jle
or
mov
add
shrb
push
clc
test
ja
insb
and
imull
enter
mov
add
xchg
mov
xor
cmp
or
cmp
clc
lock
mov
sbb
cli
xlat
out
js
mov
inc
xchg
mov
add
inc
sbb
mov
je
in
sti
pushl
rorl
fiaddl
pop
div
pop
xchg
into
sbb
jl
rorb
dec
adc
popa
ret
popf
add
push
mov
or
or
out
outsb
push
and
cmpsb
icebp
push
pop
pop
jo
test
lock
fdivl
pop
insl
ljmp
pushf
lcall
adc
sbb
int3
sahf
add
or
xchg
decb
je
mov
je
loop
mov
dec
cmp
mov
cmp
mov
cld
push
es
in
adc
add
push
sbb
mov
xchg
imul
pop
or
out
cmpb
sti
xor
inc
add
dec
sti
lds
mov
and
jns
jg
ljmp
or
ror
pop
sbb
push
or
inc
jne
xlat
ret
leave
ret
scas
sub
fcoml
or
mov
pop
gs
or
movsl
into
rorb
stos
loop
inc
cs
pop
insl
jne
ja
outsl
je
orb
lea
mov
jmp
lds
and
jl
out
mov
cmp
lcall
mov
jl
pop
mov
dec
xchg
jle
flds
adcb
push
mov
out
ja
xor
lret
mov
icebp
sbb
fbstp
jae
adcl
das
les
stos
sbb
and
add
jae
or
lahf
mov
mov
push
xor
inc
pop
cld
mov
lods
sbb
push
lahf
cmp
scas
je
std
mov
push
mov
in
mov
adc
xchg
and
adc
cmp
sub
mov
sub
push
addb
hlt
pop
sbbb
xor
pop
aad
sbb
loope
lret
movsl
xchg
xor
hlt
push
mov
adc
stos
setg
pop
dec
les
and
das
pop
jnp
push
pop
stc
mov
push
mov
and
lcall
and
mov
aad
jp
sub
ret
in
mov
imul
cmp
movsb
nop
mov
in
andl
les
lock
pop
inc
mov
iret
or
sbb
sarl
iret
push
fldt
scas
fstl
fsubrs
into
push
fimull
sub
aam
jmp
add
out
incl
lret
jge
int
pop
rolb
add
xchg
or
dec
cmp
bound
mov
pop
shl
out
sub
stos
out
mov
push
fimull
jne
imul
cmp
jb
add
cs
cmp
jl
imul
mov
add
aad
jge
addr16
mov
pop
sub
negb
test
push
jb
mov
ljmp
jle
mov
adc
arpl
xchg
xor
les
fstpt
push
push
lahf
add
sub
incb
xor
addr16
int3
mov
jl
fisubrl
add
imul
stos
sbbb
ret
add
pop
icebp
std
testl
sub
call
sbb
ret
xchg
push
sahf
clc
aad
out
mov
cmp
popa
or
stos
mov
or
lret
adc
shrb
add
lea
insl
or
adcb
jmp
or
fs
lcall
mov
xlat
out
fcmovbe
xchg
aas
popa
xor
push
scas
les
imul
mov
xor
test
or
sahf
inc
inc
mov
cld
jge
adcb
mov
imul
pop
idivb
pop
fxtract
mov
push
sbb
fst
mov
dec
push
sbb
xchg
dec
sub
mov
adc
imul
je
or
loopne
push
lcall
or
or
pop
stos
sub
push
cwtl
jecxz
sub
dec
pop
mov
or
fwait
inc
clc
pop
mov
pushf
in
mov
lahf
add
xor
call
sarb
mov
jmp
rclb
pop
inc
mov
cmc
mov
ret
aam
dec
test
and
orl
mov
imulb
mov
mov
test
stc
jge
fisttpl
mov
cltd
jge
inc
incb
xor
ret
pop
sub
sub
jmp
and
push
lods
xchg
mov
lods
sub
addr16
mov
xor
rol
jne
xchg
mov
push
outsl
dec
fbld
xchg
and
and
arpl
inc
lcall
xor
mov
cmpsl
aam
insl
stc
fs
and
stos
jge
dec
lods
pop
inc
movl
pop
lahf
popa
sbb
dec
lods
xor
cmp
cmp
cmp
add
je
cld
stos
rcl
mov
add
fsub
out
push
dec
xchg
push
das
popa
scas
sub
sahf
subb
mov
xlat
inc
jl
in
mov
cltd
and
jl
xchg
push
pop
loop
lret
sub
in
xchg
jno
daa
xor
or
pop
lods
sti
xchg
shlb
pop
sarb
fildl
movsb
test
push
mov
inc
xchg
or
cmpb
shlb
incl
pop
sbb
mov
test
int3
inc
mov
jbe
nop
fs
adc
cmp
je
dec
bound
jle
jo
mov
sub
leave
push
enter
mov
xchg
in
ljmp
aaa
push
push
push
push
sbb
push
sbb
add
push
push
in
push
es
dec
sub
dec
sub
mov
rolb
or
add
ret
sub
xor
mov
adc
rorl
jb
cltd
mov
mov
push
into
movsl
jns
add
xchg
arpl
lahf
add
outsb
dec
push
aaa
scas
loope
aaa
mov
cmp
cmp
test
and
lds
sub
test
pop
sub
xchg
or
sbb
jo
or
add
popf
dec
adc
ss
test
cld
dec
popa
cltd
and
add
movsl
das
pop
lret
dec
test
out
dec
dec
add
and
sbb
outsl
daa
jo
pop
and
jp
dec
ret
popl
xor
daa
and
stos
xchg
loopne
out
pop
pop
imul
fidivrs
jb
xchg
xor
movb
and
inc
ja
or
shrl
inc
jno
aam
pop
pop
push
lea
repz
pop
aam
aad
orl
dec
dec
fs
xor
test
mov
jo
mov
add
inc
test
sbb
call
push
clc
jbe
insb
add
call
xor
push
sbb
push
int3
push
add
xor
inc
js
pop
leave
xor
push
xor
jp
jmp
dec
call
arpl
es
mov
cmpsb
pop
add
lods
and
mov
icebp
inc
push
dec
mov
push
pop
pop
push
cwtl
outsl
pop
adc
xor
clc
in
sbb
jecxz
add
inc
gs
jle
repnz
lock
add
fists
xchg
sbb
cmc
cld
leave
push
sub
and
add
jns
sbb
insb
or
out
mov
mov
or
int
out
cmp
push
imul
push
xchg
icebp
xchg
push
sub
loopne
loop
and
clc
add
dec
jnp
push
aam
and
and
sub
inc
dec
int
adc
adc
adc
imul
mov
sbb
ret
adc
add
or
mov
fs
pop
inc
add
lods
push
arpl
in
pop
jge
cmp
cmpsl
xchg
call
sbb
mov
inc
clc
loopne
cmpsl
and
adc
loope
test
popa
cmp
loope
mov
psubb
push
lea
outsb
or
adc
pusha
scas
mov
xchg
pop
pop
and
push
enter
js
jnp
idivl
pop
and
inc
and
cmpsl
mov
pop
pop
mov
xchg
shll
ret
pop
rcrl
sub
jg
add
and
xchg
loopne
push
jno
jb
popl
fwait
lahf
stos
sub
sbb
ljmp
outsb
mov
ss
cmp
jae
push
push
inc
iret
movsb
push
mov
jge
fbstp
push
cltd
shl
inc
push
add
arpl
mov
jle
sub
mov
or
push
push
mov
int
inc
js
jl
pop
fiaddl
out
adc
pop
pop
lret
push
jb
xchg
push
mov
pop
push
lods
dec
orl
shlb
lods
data16
fldl
xorb
test
cwtl
ds
loope
cs
sub
xchg
or
ljmp
add
pushf
xchg
out
loopne
jmp
imul
add
and
js
adc
clc
add
dec
add
xchg
dec
jne
jg
xor
or
xor
inc
cmpsb
mov
or
les
push
js
and
shl
test
imul
aaa
mov
loope
pop
mov
je
mov
jb
stos
rorl
sbb
and
mov
add
js
lods
mov
xchg
imul
or
xchg
sbb
ret
stos
ret
push
xlat
cmp
bnd
xlat
add
pop
insl
adc
das
pop
es
test
dec
ja
ljmp
dec
dec
xchg
add
inc
dec
pushf
into
sub
ret
xchg
ja
or
dec
nop
scas
out
adc
and
rclb
sbb
pop
mov
jns
ret
cmp
cwtl
dec
test
lds
or
push
or
sbb
cmp
int
push
ljmp
mov
pushf
flds
xchg
add
xchg
or
pop
sbb
adc
push
and
fstp
and
xor
hlt
mov
inc
sbb
shl
ja
mov
or
daa
test
jmp
and
bnd
pop
in
push
push
mov
stc
bound
dec
add
repnz
je
aam
push
movsl
jl
sbb
sti
test
popa
inc
outsb
loope
orl
sbb
add
test
mov
arpl
ds
mov
jp
rorb
sahf
mov
mov
lods
sub
rcr
pop
push
dec
inc
or
out
xor
mov
push
and
mov
mov
jmp
push
aad
jg
cmp
push
push
or
fwait
mov
aas
and
andl
jle
cli
add
jbe
out
jo
push
mov
imul
sbb
add
sbb
rcll
fisttps
aas
negl
mov
fiaddl
add
ljmp
inc
nop
pop
sub
cmpl
or
jb
int3
jmp
stc
int
ficompl
xor
insl
imull
inc
in
jne
scas
mov
lock
pusha
fcmovbe
fistl
xlat
test
hlt
push
mov
or
jle
sbb
iret
sbb
je
out
je
sub
shrb
jbe
clc
jbe
xchg
test
mov
rolb
and
test
xor
lods
lds
mov
aas
xchg
std
aas
adc
mov
dec
or
and
les
push
xchg
stos
addr16
pop
and
sbb
aaa
sbb
lds
aam
pop
lret
arpl
test
push
sub
in
mov
xor
daa
xchg
in
xor
mov
pusha
jle
repz
dec
adc
or
insl
jae
cmp
fwait
or
sub
hlt
scas
or
shlb
ret
xor
cmc
dec
pop
pushf
scas
inc
inc
or
lret
adc
out
jae
sub
ror
insl
inc
or
cli
cmpb
mov
sbb
imul
pop
xor
lcall
sbb
xchg
inc
mov
test
mov
fwait
push
aam
loope
cwtl
movsl
xorb
sub
xorb
jb
call
cmpsb
jg
xchg
inc
or
mov
inc
push
pop
jo
add
push
cli
mov
sub
ss
sbb
mov
jb
enter
adc
jle
shrl
call
stos
aad
scas
pop
hlt
loop
loop
and
repnz
call
loopne
outsb
aad
leave
push
and
jb
dec
xorl
inc
mulb
iret
xor
mov
int3
push
es
push
push
dec
pop
fsubr
jae
fadds
lods
mov
sbb
jg
jle
ja
int3
adc
pusha
jb
sbb
jns
cmp
or
sub
lock
add
out
or
andb
push
xlat
popf
cs
call
sbb
sbb
pop
cmc
stos
adc
sbb
mov
inc
sub
xor
add
fimull
idivl
push
jmp
xor
je
into
mov
inc
sub
mov
adc
in
lock
jle
dec
mov
mov
dec
inc
jb
xchg
and
test
push
outsl
jmp
push
dec
dec
push
cmc
mov
dec
and
out
imul
dec
and
adc
xchg
jnp
lcall
inc
test
test
dec
movsl
jne
fildll
in
inc
pop
and
aam
imul
sub
call
jo
sbb
fldl
in
adc
int3
mov
test
mov
or
or
imul
je
in
fxch
dec
add
popa
lock
sbb
imul
push
xchg
jmp
jnp
mov
jo
fiadds
or
mov
pop
lcall
dec
push
jmp
add
adc
and
insl
and
xor
mov
jns
xchg
mov
sbb
cmpsb
ja
add
dec
xor
and
je
jl
sub
xor
icebp
pop
icebp
gs
jle
jmp
leave
xchg
mov
mov
dec
mov
ret
sbb
outsb
lret
xchg
mov
popf
mov
out
dec
mov
loopne
or
scas
cmp
jle
mov
popa
dec
inc
lret
popa
popf
pop
das
outsl
ja
out
push
lock
ds
out
sti
push
jnp
int
xor
rclb
insl
sub
cli
sarb
cmp
scas
dec
cmp
mov
add
dec
or
xchg
pop
xchg
loop
jne
addb
stos
mov
xchg
ljmp
adc
and
in
cld
lock
pop
xchg
and
enter
xor
pop
out
sub
push
lahf
pushf
dec
mov
push
sarb
sbb
ss
sbb
sbb
jo
cli
test
adc
adc
int3
jne
mov
cmpsb
push
outsl
or
lcall
rolb
outsb
add
add
lock
shrl
loope
stos
sbb
inc
hlt
pushf
cli
fnstenv
fs
cmp
ljmp
stos
dec
push
icebp
fistpll
ljmp
dec
push
loope
pop
insl
ja
mov
adc
push
push
std
and
push
xchg
pop
adc
call
pop
mov
outsb
mov
push
iret
pop
xor
sub
adc
cld
pop
add
roll
jns
hlt
hlt
loopne
in
sbb
jo
jg
add
negb
cmp
push
gs
hlt
rol
mov
push
xor
jb
add
loop
inc
or
add
push
mov
shll
jns
fbld
stos
shlb
xor
pop
lret
adc
dec
les
lods
jbe
inc
mov
inc
shrl
dec
loop
scas
push
sbb
fldcw
or
jmp
shl
mov
mov
xor
in
sbb
andl
repz
mov
and
aam
mov
in
movsb
pushf
std
cli
filds
pop
inc
mov
fiaddl
bnd
pop
rcrl
pusha
test
add
inc
add
cmp
in
jle
push
ffreep
push
adc
jo
cmpsb
aad
pop
inc
xchg
in
sub
lcall
shlb
jle
cmp
sbb
js
lods
pop
add
lds
or
push
dec
mov
mov
pushf
push
inc
mov
push
stc
push
adc
roll
adc
dec
mov
dec
lods
mov
aas
leave
inc
dec
scas
sub
in
add
sbb
cmpsb
mov
test
loope
add
or
xor
jmp
xor
jae
negl
hlt
push
or
push
sbb
out
push
pop
jnp
lahf
mov
push
hlt
subb
fldl
pushf
xlat
nop
ret
jo
aam
ljmp
or
pop
in
xor
mov
rolb
iret
dec
cli
jl
jge
mov
sbb
rorl
push
cmpxchg
ss
push
and
dec
shr
jmp
xorl
ret
pusha
jb
inc
cmc
lret
inc
jge
xor
cmc
or
loopne
xchg
in
fsts
jmp
jb
mov
hlt
cmc
mov
imul
jl
add
dec
mov
mov
ljmp
jno,pn
xor
adc
div
js
xor
out
fwait
das
cmp
cs
xor
in
xor
jb
jge
mov
dec
iret
scas
sub
sub
adc
sub
gs
pop
sub
pushf
pop
push
ret
jecxz
lock
shll
and
xor
adc
js
in
sti
leave
cld
push
add
pop
push
sub
stos
imul
cli
pop
add
out
scas
adc
jno
leave
es
adcb
adc
or
and
rcrb
das
inc
add
push
adc
and
inc
jb
icebp
icebp
cmpsl
cli
xchg
inc
mov
loope
mov
ljmp
dec
shr
dec
scas
rolb
mov
mov
jl
add
enter
pop
pushf
xchg
mov
and
dec
jb
outsl
push
push
mov
bound
sub
xchg
push
jo
sub
lds
pop
fdivrs
adc
push
jge
add
pop
push
jmp
or
mov
shll
imul
push
popa
das
loopne
xchg
mov
mov
push
rcrb
mov
xor
cmpsb
cmp
jo
iret
push
cmpsb
push
or
sbb
call
mov
xchg
imul
mov
cmc
mov
mov
mov
xlat
faddl
outsl
push
aam
or
and
sub
adc
jp
jmp
lcall
aam
arpl
jge
lret
push
cs
cli
lods
movsb
sbbb
idivl
in
ficomps
loop
cmp
subb
jb
add
lret
add
mov
pusha
in
sbb
scas
sub
push
data16
notl
movsb
dec
lea
sub
sahf
popa
inc
add
sub
popa
loop
jne
mov
nop
jno
mov
sbb
call
and
mov
and
or
test
xorl
subb
xchg
mov
in
fldenv
aas
out
mov
insb
sub
pusha
push
pop
push
push
outsb
add
adc
mov
faddl
sub
sub
jb
or
push
add
lods
lret
inc
xchg
adc
xor
in
xchg
bound
mov
sbbl
jno
mov
dec
mov
inc
mov
xchg
xchg
test
je
sbb
fmulp
fisubrs
or
xchg
pop
icebp
add
sbb
sub
xchg
and
ja
out
jg
mov
mov
fcoms
xchg
jae
sub
dec
pop
stos
iret
inc
pusha
and
jae
jmp
inc
mov
lahf
popf
sub
out
mov
out
inc
fmull
shr
aaa
scas
mov
push
xor
xchg
hlt
xchg
dec
je
dec
daa
rorl
sahf
popf
test
push
jecxz
les
test
pop
mov
jle
imul
insl
jns
out
les
loope
add
jno
rcrb
das
xor
loope
rcll
popa
ja
test
jnp
nop
lods
push
push
mov
dec
ret
lcall
fildl
jne
add
xor
push
dec
and
inc
and
popf
jecxz
push
push
and
inc
sbb
cwtl
data16
out
aam
jmp
jmp
mov
adc
fwait
lahf
in
jl
add
mov
pop
adc
adc
sbb
testl
pop
and
imul
ss
push
add
or
mov
inc
sub
popl
inc
pop
adc
adc
pop
out
jmp
fistpl
jmp
cli
filds
out
xchg
fdivp
pushf
mov
mov
sub
imul
sbb
std
cmp
cmpsb
mov
mov
clc
test
inc
xor
push
jnp
out
inc
or
jne
push
inc
cmpsb
push
and
inc
clc
push
xchg
insb
decl
jnp
out
cld
pusha
push
sbb
push
dec
jb
outsb
add
fisttps
clc
xlat
jle
jge
mov
in
jmp
or
bound
adc
int
jb
push
test
loope
repz
jnp
push
mov
call
lock
addl
dec
pop
mov
mov
addr16
fcoms
sub
or
xchg
cmpsb
cmc
xchg
ja
cmp
mov
jg
adc
sub
scas
rorb
jl
dec
popa
lds
insb
fisubl
pusha
sbb
cwtl
and
gs
or
aas
jmp
pusha
repz
pop
xlat
or
cmp
cmp
and
insb
mov
adc
leave
xor
lret
xlat
imul
add
ret
and
sahf
pop
ret
adc
dec
cmpsl
push
xlat
xchg
jae
pop
popa
loopne
push
add
jbe
pop
jmp
daa
inc
mov
pop
psrlq
xor
pop
bsr
jge
fimull
subb
fadds
mov
dec
and
or
cmp
jmp
inc
sysenter
mov
fsubr
lret
adcl
repnz
icebp
cmpsl
mov
fstl
or
sbb
popa
fcmovbe
cltd
pop
adc
mov
and
cmp
pop
xadd
add
pop
inc
pop
and
cmp
aam
test
fildl
pop
pop
outsl
movsl
adc
test
mov
mov
dec
mov
lds
jge
gs
xchg
fst
dec
fwait
shlb
call
cmc
fs
sub
test
pop
jbe
and
rclb
hlt
pop
imul
scas
pop
sub
ret
sub
jnp
and
insl
stc
test
sahf
push
mov
nop
out
repz
xchg
negb
lock
pminub
push
cs
jg
enter
sar
sub
push
in
in
adc
or
out
es
pusha
ret
cmpsl
add
test
js
sub
adc
push
mov
xor
fwait
push
sbb
push
and
in
jp
mov
mov
or
and
in
js
cmp
int
negl
aas
jmp
mov
mov
cmp
outsl
inc
xchg
mov
cmp
aam
call
mov
pop
icebp
mov
push
push
dec
punpckhbw
fdivrs
mov
mov
pusha
jnp
xor
pop
pop
stos
dec
cld
push
push
inc
or
and
jns
inc
mov
and
sti
or
orb
jg
push
inc
mov
mov
add
mov
xor
scas
fs
pop
scas
les
mov
sbb
pop
pusha
fcomps
xor
jne
dec
dec
sarl
and
pop
mov
adc
stos
and
lea
cmp
mov
sahf
add
shlb
mov
mov
out
cmp
es
jb
mulb
and
outsw
bound
push
sbb
or
jl
pop
add
inc
jge
sub
cmp
popa
push
lret
add
icebp
filds
xor
push
cmp
in
les
jns
mov
mov
xorb
mov
and
push
sbb
enter
out
or
adc
js
jp
mov
push
fldenv
jmp
test
push
scas
test
loope
push
push
insl
cmp
es
js
add
pop
or
sub
test
push
dec
out
out
pusha
xchg
xchg
add
popa
jmp
pop
cwtl
test
push
insl
xchg
ret
div
sub
jb
add
mov
ret
xchg
cld
fcoms
xchg
lahf
sbb
test
and
cmp
out
adc
inc
aam
xchg
mov
shrl
scas
imul
jp
push
jmp
add
loopne
rolb
mov
cmp
or
mulb
push
inc
loope
sahf
ja
add
jnp
dec
jns
cmp
aaa
inc
roll
imul
push
loopne
push
push
gs
pop
les
push
dec
inc
push
push
add
fwait
pop
add
test
and
in
sbb
add
dec
and
adc
mov
lods
mov
icebp
lods
pushl
sahf
lods
add
mov
dec
push
xor
data16
mov
js
jmp
mov
stc
jg
add
xchg
push
jne
andb
push
jmp
scas
jbe
aad
es
sub
push
dec
cmpsl
rcll
add
add
unpcklps
dec
adc
push
call
lahf
sbb
adc
sbbb
scas
int
mov
push
xor
push
lods
sub
inc
pusha
sbb
mov
sbb
add
add
dec
xor
test
xchg
sbb
or
inc
inc
dec
lea
xor
fwait
or
inc
sahf
repz
xor
inc
std
les
sbb
and
push
jnp
cmp
clc
xor
sbb
repnz
jmp
add
cltd
push
push
mov
add
pushaw
mov
fistpll
fs
add
dec
in
mov
and
dec
xchg
jo
mov
pop
pop
notl
shll
or
test
mov
xor
ficoms
mov
mov
sub
push
sarl
loop
ds
mov
dec
or
insb
in
dec
add
cmp
dec
cmp
inc
and
in
repnz
jp
and
test
ret
sub
fwait
ljmp
std
add
jb
or
ret
call
jbe
cwtl
jns
or
inc
andb
mov
dec
loopne
and
mov
in
inc
pop
add
sbb
mov
cmc
and
xchg
mov
fidivs
mov
cmpsl
idivb
lods
clc
das
ljmp
cmp
xor
adc
dec
and
orl
mov
xor
pop
lods
pop
sbb
or
add
hlt
arpl
xchg
sbb
mov
xor
pusha
mov
mov
lock
ss
mov
cli
mulb
or
sbb
xchg
push
cmp
aaa
fisubs
push
push
fistpll
push
or
lahf
xor
pop
ljmp
cli
push
arpl
rolb
cwtl
mov
fsubl
insb
std
pop
push
mov
push
clc
or
pop
das
push
enter
add
and
mov
in
sbb
lcall
sahf
icebp
pop
xor
mov
das
scas
or
cli
xchg
test
push
add
jbe
cmp
add
lcall
cmp
and
or
jp
jne
push
or
mov
mov
add
inc
adc
sbb
xor
movsb
mov
mov
in
icebp
icebp
cs
sub
inc
out
adc
xor
lcall
cli
les
rcr
cld
jo
xchg
jle
sti
jmp
push
js
pop
in
movsb
cmp
add
jmp
add
sub
lea
leave
cmpsb
or
sbb
push
cmp
push
xchg
pop
repz
or
xchg
mov
add
js
xchg
ljmp
xchg
popa
mov
mov
mov
fisubl
movsl
ret
das
jbe
add
and
dec
ljmp
jbe
incl
mov
outsl
xor
lahf
and
cmp
jbe
inc
loopne
lcall
add
andl
push
scas
in
xchg
andb
push
add
cmc
mov
aas
mov
pushl
xchg
mov
add
fnstenv
mov
dec
out
and
fnstenv
sub
lcall
loop
iret
loop
lock
divb
in
push
or
scas
sub
xor
sub
iret
and
cmp
dec
fistpl
push
loopne
ret
xor
and
inc
xor
ret
loope
push
shll
out
pop
pop
push
cli
shll
rcr
mov
sub
or
arpl
push
loopne
sub
stos
and
rclb
stos
ret
pop
das
cmp
call
push
mov
test
int
adc
sub
add
adc
call
add
mov
shl
rorl
fnstcw
sahf
xchg
dec
clc
add
loop
inc
cmp
stos
xchg
les
xchg
and
sub
sti
and
bnd
add
jmp
out
sbb
popf
aam
jbe
sbb
pop
ja
xchg
leave
adc
movsl
shrb
js
xor
mov
frstor
int3
inc
push
shrl
sub
insl
nop
or
hlt
mov
add
fadds
xchg
jecxz
dec
js
aam
adc
xchg
subl
jp
cmpsb
stos
mov
mov
lret
add
mov
dec
xchg
js
pop
inc
xor
mov
sbb
stos
mov
xchg
add
les
push
mov
test
mov
bound
xor
mov
or
call
mov
arpl
cmpsl
mov
lods
icebp
xchg
ljmp
push
fidivs
leave
cs
movsl
daa
inc
mov
jbe
inc
clc
lret
stc
aas
dec
push
ljmp
xchg
xchg
cld
leave
push
loopne
or
adc
and
bound
push
inc
clc
jle
xor
sbb
in
xor
enter
jle
and
dec
outsb
in
push
cmp
les
call
xchg
fdivs
fisubl
pop
and
push
and
test
inc
xor
aad
push
lock
or
push
popf
or
lock
cmp
sbb
xor
dec
sbb
fwait
sarb
lret
es
lods
xorl
in
xor
hlt
mov
iret
stc
sahf
pop
adc
and
pop
enter
pop
hlt
test
loop
mov
jecxz
rol
cmpsl
jne
add
jg
push
xchg
jg
or
int3
lock
pop
sbb
lcall
scas
sub
mov
pop
jb
xor
xchg
out
ret
push
mov
cmp
stos
pushf
in
xchg
adc
xchg
dec
jbe
movsb
cltd
mov
dec
and
adc
adc
jbe
or
xchg
stc
mov
ds
sbb
push
in
outsl
cmc
adc
bound
lock
sub
cmpb
adc
pop
scas
test
xor
shll
rcr
out
in
repz
and
fcoms
popf
or
jmp
je
jge
xchg
bound
push
add
inc
adc
push
add
lds
movsb
xchg
push
lock
push
jl
popf
nop
lret
imul
xchg
lods
add
cld
add
pop
es
push
jg
xor
lock
int3
jl
xchg
push
add
sbb
les
jl
js
mov
inc
out
inc
add
lock
int3
inc
pop
iret
mov
jecxz
mov
pop
mov
std
repz
ffree
dec
mov
cmp
lcall
cs
mov
lods
xlat
jne
rolb
pusha
xchg
mov
aam
lret
push
test
ret
jp
pop
cmp
cmp
movsl
adc
js
xor
lock
xor
push
push
dec
adc
les
rcr
dec
xor
push
xor
xorl
movsl
xor
jp
cli
mov
pusha
test
cmpsl
imul
add
and
pop
inc
mov
jbe
inc
aas
daa
cwtl
push
mov
cmp
pavgb
cmp
xchg
les
xor
lock
loope
mov
mov
jg
xchg
and
ljmp
adc
mov
push
mov
movl
jno
sbb
movsl
mov
xor
push
pminub
push
pop
test
push
incl
cmpsl
xor
testb
cmp
cmpsl
cmp
stc
aaa
call
jecxz
les
mov
scas
mov
xchg
adc
sbbb
fstps
xor
adc
sahf
addr16
clc
lock
sbbl
and
addr16
fisubs
add
xchg
mov
add
decb
mov
mov
bound
add
xchg
ret
mov
add
sbb
jge
enter
mov
sbbb
push
or
cs
aas
add
scas
loopne
push
pushf
cli
add
ret
ds
rcr
xchg
inc
loopne
jbe
push
rolb
push
inc
pop
cwtl
cmc
pop
aaa
je
dec
sub
popf
pop
cmp
sub
mov
mov
jnp
into
cmp
mov
mov
pop
mov
insl
cli
in
or
insb
xor
subps
scas
xor
bound
int3
mov
ljmp
div
aas
sbbb
test
push
adc
ja
push
adc
in
test
mov
mov
inc
jno
add
leave
jle
mov
fstpl
mov
add
mov
loop
leave
cltd
inc
ss
dec
add
sub
aad
push
add
out
and
adcb
dec
pop
loopne
dec
sbb
cwtl
fs
cmp
mov
andb
xor
setne
bound
jo
fidivs
xchg
pop
outsl
into
decb
inc
adc
xchg
stos
mov
push
and
cmp
and
adcl
sbb
push
loop
and
mov
push
shlb
ffree
lcall
aam
cs
in
outsl
movl
jecxz
hlt
add
inc
pop
stos
ljmp
cwtl
adc
andb
xchg
cmpsb
ret
out
lods
scas
add
adc
jle
out
lock
fsubrs
add
dec
add
mov
cmpsb
pop
mov
lods
adc
pop
push
xchg
pop
or
lock
push
xor
mov
push
and
cmc
pop
push
mov
addl
mov
test
shl
incl
xchg
sbb
cmp
push
daa
dec
pop
push
adc
mov
push
inc
push
sbb
mov
push
push
mov
adcl
sarb
xchg
add
jns
rcll
scas
call
shlb
add
xchg
cmpsl
cmpsl
mov
jg
sti
and
mov
cmp
dec
push
push
fimull
cld
jnp
out
sub
pop
and
jne
inc
sub
inc
lods
dec
fisttps
mov
cs
xchg
adc
cmpsl
push
xchg
adc
jo
push
cmp
jmp
pop
cmpsb
jp
jmp
lcall
daa
mov
inc
xlat
xchg
inc
fdivrs
lds
lret
iret
sbb
pushf
push
je
push
ja
cmp
enter
addr16
mov
imul
add
inc
cmp
bound
out
and
cmpsb
mov
not
push
push
mov
stos
in
ljmp
or
and
fdivs
data16
push
dec
js
mov
fistpll
cli
sub
dec
sti
call
inc
push
lret
and
or
jmp
jae
cmp
jbe
pop
call
out
cld
jae
push
aas
mov
movsb
stos
jne
sub
shlb
sub
cmp
adc
fxch
les
popl
loop
adc
cmpsl
inc
jecxz
jne
sbb
xchg
xor
aas
lods
out
in
push
xchg
sar
aas
push
lret
je
or
fldl
mov
dec
sahf
aas
jl
sub
inc
enter
imul
push
fsub
je
xchg
mov
jge
mov
or
lea
or
scas
dec
mov
or
jnp
cld
shll
loopne
mov
push
arpl
nop
adc
add
jp
mov
divps
jns
repz
lahf
iret
shlb
add
das
mov
push
push
xor
dec
ret
jmp
mov
hlt
jns
cltd
repnz
push
and
push
aad
mov
push
scas
or
in
loopne
mov
inc
mov
cmpb
movsb
enter
ljmp
cltd
mov
sar
jmp
jl
add
mov
lds
jle
stc
adc
icebp
icebp
or
xlat
xor
push
cli
ljmp
or
popf
mov
or
rcrb
imul
cmp
push
flds
or
dec
rorl
push
adc
xor
inc
inc
js
dec
and
xor
sub
dec
dec
loopne
sbb
push
inc
hlt
and
mov
mov
inc
rolb
sti
pop
add
cmp
inc
mov
xchg
push
push
push
loopne
dec
popa
push
insl
add
addr16
adc
push
icebp
pop
xchg
pop
ret
cld
movsb
mov
ja
cmp
inc
add
ret
imul
daa
cmp
mov
inc
pusha
cmpsb
jl
sbb
and
in
test
scas
mov
mov
sbb
add
xor
jno
cmp
xor
or
jecxz
movsb
jnp
jg
inc
outsl
xchg
pop
inc
push
movsb
add
mov
mov
out
and
movsl
jmp
fidivrl
jbe
ja
sub
push
out
ret
insl
test
dec
mov
push
test
mov
jo
pop
adcb
shrb
cwtl
test
push
loop
sub
or
mov
and
sbb
adc
icebp
sbb
test
shlb
stos
fsts
jl
mov
sub
jl
cs
cwtl
mov
jo
push
sub
repz
pop
insl
fisubrs
fwait
into
ficomps
push
adc
mov
es
xchg
arpl
or
add
dec
testb
shrl
and
jae
test
xor
lock
xchg
dec
jnp
negb
inc
lods
inc
lcall
iret
adc
ret
inc
leave
ss
ljmp
aas
inc
std
xor
jmp
es
adc
outsb
iret
push
sbb
and
jl
sub
call
cli
subb
sbb
cmp
and
lock
cmpb
aaa
aam
push
cmp
pop
inc
and
xchg
jmp
xor
add
and
mov
add
mov
enter
sub
xchg
icebp
aam
into
paddusb
or
jg
add
mov
add
xchg
cmp
dec
jecxz
mov
repnz
or
loopne
lea
iret
mov
cs
jecxz
lcall
sub
insl
jle
dec
clc
mov
cmp
inc
call
xor
pop
push
lock
mov
repnz
adc
jge
jo
lret
add
adc
jp
and
and
stos
mov
call
in
jg
inc
mov
add
faddl
add
add
mov
mov
cmp
not
jne
push
adc
cld
mov
out
mov
mov
sbb
mov
inc
dec
clc
sbb
sub
pop
out
movsl
aad
and
loopne
loopne
and
add
xlat
jmp
lock
lock
mov
push
cmp
rorb
inc
xor
sub
pop
inc
push
fnstsw
adc
push
jle
xor
jg
mov
push
lahf
sub
out
enter
mov
xorl
push
outsl
loope
pop
gs
mov
add
and
loop
inc
xchg
add
jbe
fstpt
fs
add
jne
std
pop
add
shrb
cmc
int3
inc
push
aaa
es
sbb
jne
popa
and
dec
stos
xchg
push
mov
shlb
fimull
adc
scas
lds
mov
mov
andl
fistpll
push
ljmp
push
add
lds
lds
inc
mov
mov
pop
in
arpl
jbe
stos
int
idiv
dec
xchg
add
fs
cmpsb
aas
jne
mov
hlt
mov
mov
sbb
aad
data16
sbb
jg
out
lahf
mov
jle
push
lcall
sti
or
orb
cmp
inc
jo
insl
scas
sbb
shr
fdivrp
jns
aam
mov
sbb
or
mov
rorb
pop
push
jne
subb
insb
sbb
cmc
cld
outsl
icebp
push
add
mov
push
or
inc
add
push
jns
xchg
icebp
ds
mov
je
push
cltd
clc
add
test
xchg
cmp
outsl
push
pop
ja
cwtl
test
xchg
stos
mov
in
cmpl
lcall
sub
orw
or
in
xchg
or
add
inc
ja
sar
fildll
rolb
adcb
pusha
dec
aad
dec
das
icebp
ret
xor
decb
stos
in
fmuls
push
in
rolb
adc
cli
nop
mov
push
xor
mov
loopne
es
pop
movsb
dec
xor
mov
test
cmp
or
jbe
cwtl
arpl
clc
xchg
xlat
mov
test
sbb
rolb
adc
movsl
scas
xor
bound
mov
or
sub
jbe
push
shlb
repz
decl
add
xchg
clc
and
jl
xorb
add
int3
cmp
mov
adc
pusha
cltd
ficoml
sbb
ret
pop
or
add
icebp
mov
cmp
js
push
push
push
add
pop
pop
sub
test
push
mov
testl
xchg
add
movl
xchg
dec
pop
bound
test
adc
ds
sub
xor
outsl
push
outsl
insl
das
sbb
rcrb
inc
or
pop
adc
fs
sarb
or
push
loop
decl
fimuls
jns
insb
mov
sbb
lds
sbb
dec
mov
call
xchg
aas
mov
and
ja
into
ss
testl
pop
pop
ret
cmp
adc
pop
test
xchg
mov
jnp
xchg
sub
inc
dec
cmp
and
adc
cmpsb
negb
daa
inc
xor
mov
pop
sub
pop
pop
push
icebp
popa
les
dec
out
popa
or
cmpsl
test
das
jp
add
enter
mov
es
mov
iret
xor
mov
cltd
cmp
negb
add
xchg
cmp
xchg
sbb
pushf
jecxz
adc
sti
ljmp
xchg
adc
ljmp
sub
rcll
cli
xor
cmp
and
and
xor
dec
push
out
add
add
mov
adc
push
test
std
js
in
cwtl
lret
adc
add
push
jbe
loop
fmuls
loopne
push
xorb
mov
mov
out
std
aaa
push
push
add
jmp
add
out
inc
mov
inc
mov
sub
nop
pop
fimull
jle
in
shrb
add
cli
inc
mov
dec
cmpsl
les
add
mov
lea
testl
xchg
movsb
lret
aas
out
push
pop
cld
cmp
xor
sub
xchg
pop
std
ds
adc
mov
pop
cmp
push
lods
sub
fstp
mov
loope
dec
in
jo
cmp
iret
inc
mov
test
call
push
cmp
mov
mov
sbb
fs
cmp
adc
and
js
cld
fisubrs
fisttps
lea
mov
aas
jecxz
movsl
pop
je
mov
cmpsl
push
int
xchg
popf
inc
or
pop
mov
pop
loopne
xlat
cmovb
cmc
loopnew
pop
add
pop
push
mov
mov
xlat
fwait
add
andl
push
push
cmp
fistpll
mov
push
sub
lret
gs
test
addr16
iret
add
xorb
sbb
aas
test
add
sbb
sub
mov
add
stos
outsb
repnz
sub
sub
mov
dec
inc
jns
push
add
ret
add
inc
mov
mov
push
mov
data16
dec
repz
push
adc
push
je
and
add
cmp
clc
dec
sbb
xor
xor
sub
ret
mov
mov
cld
aad
ret
mov
mov
push
mov
sub
loop
inc
insl
dec
aas
scas
test
pop
pop
aaa
aaa
sub
ret
and
sahf
jge
popf
cmp
aaa
cs
nop
fldt
test
jmp
cmp
or
sub
and
or
loope
jecxz
shll
ficompl
jp
or
in
dec
adc
sub
test
icebp
sub
ss
in
xor
sbb
fsubl
pop
cmpsl
sbb
push
cmp
inc
sbb
dec
lret
daa
push
cmp
iret
dec
sahf
or
push
xchg
xor
push
cld
pop
andps
push
pop
js
fldcw
out
addr16
ja
mov
das
xchg
cwtl
jp
ret
add
add
mov
les
cmpsl
or
or
or
adc
jmp
add
mov
cmpsl
lret
jns
add
and
outsb
int
xchg
aaa
jge
and
mov
inc
rol
push
inc
jne
pop
add
fmul
sbb
inc
cltd
in
add
xchg
jbe
cmp
test
mov
je
pop
fisubs
jl
movsb
and
xor
dec
or
and
jno
add
lcall
push
aas
xor
or
adc
or
mov
sbb
out
jo
dec
andb
jo
or
mov
add
xchg
and
adc
mov
movsb
cmp
cmp
loopne
push
push
jne
xchg
lret
xor
push
add
add
subl
shrl
and
mov
addr16
insb
rol
mov
and
movsl
jge
pop
adc
mov
mov
stos
ficomps
vmaxsd
out
mov
push
xor
cmc
in
jmp
pop
push
xor
mov
imulb
rcrl
imul
and
mov
push
lock
xor
sbb
aam
mov
jl
add
out
movups
aas
rol
adc
aas
push
inc
shll
and
push
lret
cli
xor
lcall
outsb
mov
insl
lds
adc
aas
out
clc
mov
adc
adc
pushf
cmpsl
call
xor
xchg
sbb
mov
mov
jnp
push
push
sbb
mov
add
push
lods
pop
pop
xor
mov
jl
ret
pop
mov
test
xor
or
inc
push
and
std
xchg
pushf
add
dec
lea
loope
mov
mov
dec
mov
shlb
arpl
out
dec
fwait
inc
xchg
mov
in
cmpb
jmp
xchg
xor
mov
fcmovbe
notl
mov
movsl
in
filds
cmpb
inc
scas
data16
lret
movsb
sbb
aam
pop
sbb
das
dec
xchg
xor
movsl
xor
push
sarl
mov
mov
cmc
and
dec
push
push
popa
bound
movsl
pushf
push
mov
jle
sbb
arpl
jecxz
cli
rcr
call
ret
and
inc
pop
mov
adc
daa
imul
add
dec
popf
lea
inc
lahf
inc
or
sbb
aad
ret
mov
mov
fstl
in
and
xor
dec
loop
icebp
js
cmpsb
lret
adc
push
xchg
jmp
push
cli
pop
dec
iret
ljmp
add
call
xchg
mov
call
stos
dec
pusha
lods
movsl
sub
jbe
ja
sub
pushf
mov
in
jmp
lock
ror
dec
fwait
inc
imul
cli
ja
jne
lret
jp
lods
repnz
or
cmp
adc
cmp
and
jmp
cmpsb
jb
jl
add
leave
cmpsb
and
add
lds
sbb
inc
or
mov
sbb
push
repnz
adc
jb
sbb
jo
and
jge
fstpt
xor
mov
inc
and
adc
inc
cmp
xor
add
add
out
stos
adcb
pushf
shlb
loop
es
fldcw
push
cmp
jg
je
mov
test
add
add
call
pop
data16
jmp
ret
xchg
xlat
xchg
lock
addl
pop
mov
adcl
movsl
mov
dec
sub
sub
jns
adc
add
mov
in
rclb
movsl
addr16
call
dec
jb
dec
ljmp
inc
jae
inc
ds
mov
shl
mov
sbb
mov
imul
cld
inc
mov
es
int
es
add
pop
jb
adc
test
movsl
push
rcr
xchg
pop
notl
push
ss
cwtl
adc
xchg
es
add
mov
shlb
loop
jecxz
sarb
outsb
push
mov
cltd
and
in
xor
inc
xor
push
or
push
sahf
addb
sbbb
ret
imul
in
dec
rorl
ljmp
cmpl
xlat
push
movsl
jmp
jp
xchg
popa
inc
jl
imul
mov
xchg
or
push
jg
pusha
add
in
xchg
arpl
popa
push
pop
and
xor
push
pop
stos
inc
adc
fcoms
addb
xor
pop
push
cltd
call
mov
mov
cld
mov
rorl
divl
comiss
push
sbb
push
push
cmpsl
ret
repnz
scas
xor
jo
or
xchg
fsubrl
fwait
mov
stos
push
std
mov
pop
std
push
xor
xchg
and
ret
ficoml
xchg
jmp
cmp
xor
jg
xchg
inc
cmp
lahf
push
xchg
push
orb
cmp
xor
or
mov
and
loopne
jp
scas
adc
je
enter
mov
lea
jecxz
mov
fs
jne
lahf
std
add
pop
in
jno
and
rcl
push
iret
jns
mov
add
dec
sbb
cmp
ja
clc
cwtl
int3
add
xor
push
lods
xor
loop
sbb
inc
add
and
cmp
arpl
enter
icebp
dec
jmp
pop
cs
stc
mov
in
imul
cmp
out
mov
xchg
pop
dec
xchg
or
xchg
jbe
insb
sbb
push
mov
dec
push
fucomp
daa
rcll
or
mov
dec
rclb
sbb
xorb
and
sub
xlat
in
shlb
mov
cmc
jb
or
es
add
pop
cmp
dec
enter
jg
lret
xchg
out
repnz
sbb
out
mov
mov
xor
or
movsb
cmpsl
out
ljmp
jmp
outsb
sbb
or
or
add
xor
scas
xor
or
orl
inc
aad
inc
mov
inc
cmp
adc
test
pushf
or
aad
mov
jo
adc
out
loopne
mov
xchg
and
aad
scas
sarl
pop
adc
mov
rolb
sub
adc
jo
or
fldl
test
sbb
into
rorl
xchg
mov
add
or
mov
test
jmp
mov
shll
push
leave
xchg
iret
xchg
adc
and
and
jge
loop
nop
sbb
insb
push
dec
sahf
loop
cmp
or
in
scas
addr16
into
adc
jne
xlat
adc
jmp
in
add
mov
in
inc
ljmp
jp
daa
call
outsb
mov
int3
cmc
rol
adc
mov
jle
sti
or
sub
pop
or
push
sbbl
stos
stc
mov
jl
mov
jmp
cmpsl
add
or
mov
mov
adc
pop
ljmp
push
and
cli
in
xchg
rclb
and
cli
pop
lods
pop
cmp
mov
cld
push
pop
insb
inc
ds
cmp
mov
fwait
and
out
cmp
jb
add
push
out
mov
push
movsl
inc
data16
incl
mov
xchg
sub
out
add
lret
test
xor
mov
out
add
iret
dec
cmp
fcom
roll
xchg
aam
add
adc
stos
xor
scas
aas
sub
sub
xchg
push
sbb
inc
add
loop
adc
out
add
inc
jp
rcl
pop
push
in
pop
mov
stos
add
adc
inc
cmp
stc
cmp
and
cmp
jo
sti
pushf
dec
push
or
rol
jge
xchg
dec
in
push
cld
cmp
out
xchg
inc
hlt
lods
add
pop
push
dec
pop
inc
mov
cmp
insl
dec
mov
test
fwait
cmp
nop
roll
int
je
push
ja
bound
xchg
cmpsb
jno
add
push
inc
gs
out
and
test
push
mov
cld
in
sub
cwtl
test
add
cmp
lret
incl
cltd
mov
sub
and
test
icebp
dec
jo
add
or
adc
pop
rclb
inc
jbe
or
sub
int3
and
rol
in
ljmp
mov
out
sub
cmp
lods
mov
jg
mov
add
dec
add
push
adc
fildll
aam
test
jb
cmpsl
clc
mov
cld
shll
dec
dec
sbb
xchg
bound
shl
mov
and
fidivl
pop
cld
mov
adc
xchg
jmp
inc
or
mov
cmp
inc
call
stos
mov
js
xchg
sahf
loopne
std
dec
pop
sbb
mov
fcmovnu
nopl
pop
sub
leave
xchg
fiadds
pop
cmp
xlat
adc
jns
in
pop
incl
lods
inc
push
mov
loop
dec
xchg
out
push
call
mov
add
xchg
pushf
sbb
int3
adc
ds
sbb
jl
sbb
add
sub
pop
std
je
pop
inc
mov
push
stos
push
pop
test
cmp
mov
dec
loopne
aad
fwait
js
pop
mov
add
sbb
and
or
inc
fiaddl
push
add
mov
sub
cmp
sti
dec
push
enter
dec
or
pushf
or
push
mov
outsb
adc
fdivrl
sbb
push
fimull
adc
inc
add
iret
pop
push
fiadds
scas
xor
lods
xor
and
sub
outsb
add
scas
movsb
push
lds
sbb
sub
add
push
movsb
pop
cmpsl
xlat
loope
inc
clc
cmpb
mov
rorb
dec
cs
pop
mov
mov
ret
frstor
push
pop
sbb
inc
cmp
jecxz
add
pop
icebp
cmpsl
dec
mov
lock
in
addl
cmp
push
adc
dec
sub
push
and
push
into
or
and
pop
ret
push
sahf
add
add
pusha
sub
rorb
dec
push
lahf
pop
add
fdiv
and
and
cmc
popf
ffree
loop
or
adc
cld
hlt
ljmp
push
cmp
loope
mov
and
call
pop
sub
fidivl
pop
and
lahf
mov
jge
js
or
clc
or
popa
dec
ljmp
decl
popf
mov
lret
shll
sub
jl
cmp
or
mov
dec
push
incl
imul
das
lcall
xchg
cmp
jb
stos
mov
add
mov
enter
sub
cmc
or
mov
jecxz
jmp
cmp
fsubl
or
dec
pop
jbe
mov
cmpsl
addl
xor
adc
sub
pushf
cltd
cli
ret
lcall
ret
addr16
push
sub
pop
lods
clc
push
adc
push
cmp
inc
iret
lock
test
fnstsw
pop
adc
xor
nop
xor
test
insb
scas
cwtl
rorb
test
ror
push
mov
loope
inc
or
or
push
lahf
mov
xchg
gs
rol
test
dec
xor
xor
and
aaa
sti
iret
dec
mov
xchg
rolb
insb
push
popa
dec
ret
test
cmp
inc
mov
jo
pop
jmp
loop
mov
popa
mov
test
lret
mov
lods
push
mov
jge
push
add
es
and
mov
pop
imul
jno
dec
arpl
shrl
mov
ret
push
pop
loop
mov
jl
adc
enter
movsl
xchg
mov
cmp
xorl
inc
dec
adc
out
adc
cmp
sbb
jns
out
cmpsb
repnz
push
mov
test
adc
rcll
out
sbb
or
sbb
sbb
movsb
lock
and
or
add
dec
jno
out
xor
jp
or
jg
cmp
iret
into
add
adc
dec
shll
test
outsl
xchg
pop
insl
mov
loope
jns
jecxz
scas
aaa
cmpsb
xchg
dec
fwait
xorl
mov
mov
jo
sub
scas
lds
pop
pop
loopne
scas
cltd
pop
fwait
dec
scas
inc
fnstenv
cmp
inc
sub
aaa
and
testb
sbb
lret
push
and
loope
adc
subl
gs
sbbl
stc
push
xchg
stos
inc
mov
mov
pop
mov
mov
int
cmp
pop
xor
inc
adc
cmp
xchg
je
addb
xor
js
pop
int
and
adc
cmc
pop
mov
icebp
pop
stos
jp
loopne
mov
and
mov
pop
dec
push
add
push
xor
and
inc
dec
test
jnp
pop
pop
in
mov
mov
aaa
jb
sti
aas
mov
jbe
or
test
sub
sbb
adc
mov
push
pop
xor
rorb
leave
sbb
inc
add
sbb
addb
cmp
pop
lcall
nop
add
xchg
ficoml
rol
adc
cmp
mov
adc
push
scas
push
mov
mov
sub
test
sbb
nop
popa
xchg
data16
xchg
sub
ret
adc
xchg
loop
push
popw
xor
js
das
push
add
mov
mov
sbb
push
inc
gs
mov
and
mov
or
add
scas
pop
clc
fnstcw
out
scas
push
outsb
cli
dec
adc
jecxz
adc
jb
movsl
mov
rol
addb
incl
decb
rorl
xor
add
sub
sbb
or
imul
or
int3
push
nop
clc
add
adc
rsqrtps
test
cs
xchg
jl
mov
mov
and
loop
mov
dec
push
adcl
test
sub
pop
push
jae
cld
add
pop
iret
ret
dec
mov
pop
in
push
lcall
xor
cmpsl
sub
lods
imul
in
xchg
sub
sub
sbb
xor
cmp
inc
or
nop
adcl
shlb
insl
das
mov
dec
xor
aad
sbb
inc
pop
jl
push
sti
cld
mov
outsb
cmp
add
imul
or
mov
andb
jno
cmpsb
or
lea
xor
inc
push
push
imul
ss
mov
pop
bound
neg
push
mov
nop
fcomps
mov
lea
or
push
push
incb
gs
test
jle
and
into
mov
inc
cmp
in
ret
dec
add
dec
dec
xchg
jge
add
pusha
bnd
cmp
cmp
push
xor
neg
fsub
add
mov
mov
fcmovnu
push
scas
inc
gs
pop
sbb
shl
dec
and
mov
dec
cs
aam
out
mov
mov
adc
testb
mov
sub
roll
bound
push
mov
inc
clc
jbe
lcall
or
scas
fnstsw
ret
sarl
in
shlb
andl
rorl
fdivr
jmp
jb
sub
add
ret
jecxz
call
push
sub
xchg
cli
addl
dec
out
mov
and
mov
ret
xchg
sub
scas
xor
ja
test
ret
push
out
xor
call
pushf
dec
pop
stos
cmpsb
adc
lahf
sbb
push
loop
sbb
call
cmpb
push
das
xchg
xchg
cmp
dec
or
mov
std
and
push
or
test
mov
add
xor
orl
xor
test
add
fmuls
pop
idiv
jge
and
cmp
jl
mov
gs
xor
or
pop
adc
sub
pop
pop
push
sti
dec
pop
jp
jle
incl
fwait
sub
pop
adcb
int3
add
mov
or
fcomip
clc
add
cmp
dec
lods
push
cmp
sub
mov
or
int
mov
addl
jne
push
jge
sbbb
push
ds
mov
roll
cwtl
sbb
in
cmc
sbb
add
mov
or
lods
popf
xchg
js,pn
repnz
aam
aas
jno
add
push
sbb
mov
mov
dec
jl
call
xchg
test
lock
xlat
xchg
inc
mov
push
orl
out
xchg
xchg
loop
push
addr16
lods
iret
xor
pop
mov
cmp
jno
lcall
es
jnp
lods
call
add
pop
adc
lret
mov
popa
sub
add
sbb
movsl
clc
push
xor
aad
int3
add
insl
or
ss
pop
xchg
ja
inc
or
loopne
mov
sbb
jge
enter
or
xchg
pop
inc
cmp
push
bound
aad
fcmovb
shrb
testl
push
nop
pop
dec
mov
scas
mov
in
dec
ljmp
ljmp
mov
and
adc
scas
push
mov
jns
bound
hlt
leave
scas
aas
cli
and
fnstcw
cmp
lahf
xchg
sub
adc
in
mov
xchg
imul
scas
inc
pushf
lock
mov
dec
fmul
dec
stc
add
lahf
sub
incl
fimull
jmp
js
inc
outsl
insb
or
push
subl
xlat
xchg
xchg
aam
imul
in
shrb
stos
pop
xchg
fsubrs
mov
sarb
aam
sub
jmp
dec
aad
fistpll
pop
xor
xor
inc
dec
test
mov
adc
or
cmc
bound
push
inc
sahf
cld
pop
pop
lock
dec
test
popf
out
mov
adc
fsubs
push
xchg
lahf
sbb
sub
aaa
cmp
hlt
cli
and
push
cmp
adc
mov
cmp
les
xor
mov
push
xor
push
lock
imul
pushl
orl
push
and
sbb
cmpsb
push
cmp
in
js
movsb
mov
pop
jns
push
push
jecxz
or
push
xchg
dec
js
or
aas
jl
ds
inc
adc
xor
jmp
push
out
xor
pop
add
and
mov
and
addl
mov
jae
mov
lea
fiadds
stos
jne
add
std
add
jns
push
jmp
lock
push
sbb
add
lret
xchg
lret
xchg
inc
sub
es
dec
dec
fmull
sub
dec
push
xchg
add
push
adc
pusha
xchg
iret
jmp
sbbl
inc
push
out
mov
add
inc
addb
dec
fbstp
sarl
stc
adc
sti
push
xchg
cwtl
hlt
inc
jno
add
push
and
mov
daa
mov
call
shll
and
cli
sub
jge
xor
push
sub
mov
adc
jo
test
adc
push
and
pop
xor
lahf
mov
je
pop
repz
mov
inc
push
sub
test
xor
dec
int3
mov
xor
adc
mov
ficomps
mov
lea
movsb
rorl
mov
xor
pop
dec
inc
ret
stc
and
inc
fnstenv
adc
mov
bound
ficompl
cmp
ret
xor
xor
js
sahf
push
call
inc
loope
inc
lock
xchg
push
dec
shll
inc
cmp
js
xchg
mov
lret
or
xchg
dec
fisttpl
clc
imul
add
xor
xchg
dec
daa
push
inc
adc
push
orl
add
ficoms
cmp
ljmp
dec
out
fisttpll
inc
sub
adc
adc
iret
in
and
and
or
cmp
sub
lcall
and
jecxz
es
adc
cld
ret
mov
push
add
cmpsb
sub
or
xor
push
mov
inc
dec
insb
nop
and
sbb
inc
sbb
adc
sbb
jb
mov
movb
mov
pop
add
fiaddl
sti
inc
jmp
sub
mov
cli
insl
sub
push
cwtl
clc
shl
lods
push
dec
hlt
ret
popa
xor
sub
xchg
pop
addr16
pop
int3
ret
jae
xor
xchg
loope
push
mov
jle
sub
jmp
jg
cli
sub
mov
mov
add
inc
add
adc
xor
jecxz
enter
ljmp
cld
les
stc
or
add
and
mov
adc
mov
and
mov
xchg
sbb
inc
in
hlt
data16
inc
daa
push
push
or
repz
lahf
in
leave
test
fnsave
mov
xchg
fdivs
adc
movsb
inc
shr
pop
pop
xor
stc
icebp
and
cmp
mov
xchg
and
popf
or
dec
adc
sbb
loopne
add
mov
js
and
dec
out
mov
mov
add
cmp
adc
push
adc
mov
adc
dec
lods
sbb
lea
mov
int3
push
in
add
in
fnstsw
xchg
cmpsb
jo
out
mov
aas
or
and
ficoml
adc
fdivrl
inc
inc
ret
arpl
add
cmp
cld
lods
pop
pop
pusha
push
pop
adc
mov
ds
subb
pop
pop
inc
mov
insl
pop
and
pop
aas
dec
test
push
lcall
jo
in
hlt
dec
adc
jle
rcrb
bound
orb
outsb
push
xor
and
mov
jae
loopne
cli
push
mov
outsb
jb
movb
imul
push
mov
jl
fs
insl
add
xor
inc
sar
push
or
pop
pop
mov
imul
inc
lret
mov
push
pop
cmp
cltd
test
into
fmull
xchg
loopne
clc
add
or
sbb
ret
scas
mov
out
add
jmp
pop
push
stos
xchg
imul
jge
inc
push
orl
int3
adc
mov
push
pop
xchg
dec
fbld
mov
fcompl
fidivs
mov
and
roll
loop
push
fdivl
notl
sub
mov
mov
fcompl
ja
ljmp
mov
scas
adc
dec
add
nop
and
mov
jg
add
mov
jo
or
into
mov
dec
sub
nop
pop
sub
mov
cmc
mov
sub
andb
negb
mov
jb
cwtl
and
xchg
popa
push
mov
mov
inc
push
push
jb
cmp
add
pop
pusha
les
dec
sbb
adc
xchg
jl
pop
adc
mov
int
outsl
jl
icebp
gs
es
out
xor
push
push
pop
popa
xchg
int3
stc
fiadds
mov
pop
dec
mov
xor
arpl
inc
add
lea
fwait
enter
ficompl
clc
aad
arpl
inc
jbe
insb
repz
mov
in
bnd
push
add
loop
stos
sahf
jno
test
pop
sti
ss
lock
mov
cltd
ss
push
or
icebp
lahf
add
mov
mov
das
rolb
daa
les
in
pop
std
or
inc
cmp
mov
mov
mov
xor
pop
push
ret
adc
jle
fdivrl
mov
js
add
add
icebp
arpl
inc
mov
push
fs
aad
push
mov
jb
xor
jmp
shlb
lods
sbb
repz
pop
fnstsw
fdivr
dec
repz
sub
pop
cltd
dec
pop
arpl
and
and
push
test
hlt
pcmpgtb
cltd
fwait
and
cli
pop
mov
push
mov
mov
and
xor
xchg
pop
cmc
inc
mov
jne
out
vunpcklps
push
fwait
mov
inc
rclb
push
push
shrl
shrb
movsb
movsl
jg
add
jl
jg
jmp
sub
cmp
test
ljmp
inc
pushf
popf
mov
sbbl
xchg
in
pop
pop
add
cmpb
test
adc
inc
sbb
push
loope
xchg
je
rorb
popf
mov
clc
test
push
add
add
jmp
inc
leave
lods
xchg
and
mov
sbb
call
fwait
and
xchg
into
movsb
lea
cli
push
cmp
cltd
cmp
loopne
lock
sti
and
sub
mov
adc
push
jnp
inc
aad
push
int
xchg
mov
les
mov
push
shlb
cmp
or
mov
rorb
xlat
icebp
cmp
cmpsl
xchg
add
dec
pusha
cmp
stos
out
loop
add
insl
push
mov
pop
push
pop
ret
mov
nop
int
mov
fwait
mov
jne
and
jb
or
popa
ret
xor
out
rcl
lods
and
xor
adc
loop
sbb
sbb
out
push
cwtl
or
insl
cmp
and
jo
mov
add
or
and
es
jg
les
movsl
pop
pop
lods
js
ficoms
scas
adc
inc
cmp
shll
dec
mov
mov
ljmp
cmp
dec
push
pop
add
push
xor
adc
fidivl
pop
orb
cli
rol
mov
pop
data16
sbb
sbb
push
and
mov
fcmovnb
loopne
aas
inc
add
mov
mov
or
and
or
sbb
cmp
xor
jmp
jmp
aad
std
mov
xchg
or
movsl
lret
test
add
and
jmp
clc
pop
aas
add
jl
cmp
jge
pop
add
add
pusha
ss
stos
adc
pop
ret
leave
inc
fwait
out
stos
sub
aam
inc
mov
scas
clc
flds
nop
or
lds
xchg
int3
lods
lcall
mov
mov
insl
testb
lcall
fsub
shrl
mov
add
xor
je
lret
or
out
cmp
jne
xchg
rcll
repnz
cmp
sti
loop
ss
inc
add
lcall
pop
xchg
lock
sbb
roll
lds
mov
addr16
stos
cltd
pop
mov
stos
or
jmp
mov
mov
dec
call
pop
mov
hlt
mov
inc
cmc
fdiv
xor
sub
push
mov
xor
cmpsl
lret
iret
mov
rcl
sbb
mov
ret
mov
mov
sahf
fdivp
leave
lea
mov
aam
mov
in
jae
rorb
clc
in
pop
inc
lahf
pop
push
add
daa
sub
inc
mov
arpl
fldl
add
mov
xor
push
mov
lcall
mov
sbb
xor
hlt
ljmp
shll
stc
sarl
jb
jmp
inc
fdivrs
mov
sub
lods
test
sub
mov
insl
psubb
and
jne
arpl
xchg
jno
sbb
adc
sbb
jl
inc
mov
sbb
lods
push
cmpsb
and
lds
rorb
out
cli
sbb
outsl
clc
xchg
cmp
fsubs
ja
lock
cmp
dec
xor
inc
adc
mov
rcr
or
sub
jp
jo
add
subb
lahf
pop
xor
in
mov
push
xchg
cmpsl
dec
or
cmpsb
loop
and
jge
pop
sub
pushf
mov
dec
push
jns
push
dec
out
mov
ljmp
cmp
out
xor
mov
and
push
dec
dec
jb
cmc
add
sbb
cmpsb
mov
cmp
movsl
adcb
pop
or
mov
jbe
or
or
sbbb
sbbb
xchg
mov
pop
pop
clc
cmp
or
cmc
pop
push
push
or
jne
negb
push
fcomi
push
dec
imul
movsb
or
mov
cmp
push
rcr
adc
fnstsw
rcrl
sbb
aad
je
icebp
pusha
test
cmp
pop
push
mov
fcoms
movl
or
dec
mov
push
das
or
adc
adc
jmp
lahf
inc
mov
xchg
in
or
rorl
push
push
push
xchg
les
enter
mov
xor
mov
jp
mov
cwtl
clc
andl
test
data16
lock
or
push
add
mov
ret
clc
mov
test
push
and
fnstcw
rol
and
xor
mov
and
push
jae
push
je
mov
xor
xchg
jnp
mov
inc
push
xor
test
shr
add
dec
sub
or
mov
stc
lahf
adc
push
gs
in
xchg
sbb
mov
js
add
adc
cmpb
xchg
and
and
adc
xor
adc
pushf
sbb
jg
sub
xor
cmp
xor
insb
je
jne
mov
in
popf
inc
call
add
imul
out
loop
push
ror
idivl
popf
shr
push
adc
cmp
dec
repz
ja
add
in
dec
xor
push
out
cmp
push
iret
cwtl
adc
popa
shl
lea
cmp
and
incb
xchg
aas
lods
xchg
addl
aas
adc
outsb
cli
mov
mov
sbb
sub
adc
mov
hlt
fucom
push
insl
inc
subl
in
cwtl
loopne
and
cmpsb
add
adc
daa
or
aas
sub
adc
dec
sbb
adc
mov
inc
push
add
outsb
or
sbb
loope
xlat
loopne
dec
push
sbb
sub
ljmp
xchg
test
jg
jge
jnp
inc
pusha
stos
or
mov
adc
pop
cld
inc
jecxz
and
push
popf
inc
jmp
lret
adc
js
scas
mov
cmp
add
xlat
and
call
dec
and
xor
push
and
cmp
test
outsb
cs
les
sbb
dec
bound
pusha
notb
push
or
jno
shll
mov
rolb
xor
fwait
cmpsl
aam
jmp
scas
ja
sarl
enter
push
cmp
push
mov
subl
inc
dec
pop
cmpsb
lcall
insb
js
inc
push
je
outsl
test
je
fwait
mov
bsf
and
pop
movsb
cmpl
jge
inc
mov
ret
adc
in
leave
dec
xor
cld
call
gs
rolb
int
push
adc
pop
jbe
add
adc
cmp
or
movsl
ret
mov
inc
loope
shlb
mov
add
inc
movsb
xchg
nop
mov
adc
loop
std
mov
cmp
xor
pop
add
fistl
sub
sbb
and
add
fwait
testl
lcall
pop
sub
mov
into
jp
test
dec
mov
loopne
das
mov
out
movsb
loope
aad
mov
movsb
lds
mov
jp
jg
jge
rorb
cmpsb
mov
aad
pop
and
adc
add
mov
andb
dec
or
int
mov
jb
sbb
pop
mov
xchg
jno
pusha
les
jge
xlat
add
cli
jbe
lret
dec
arpl
mov
xlat
jno
push
push
xor
mov
or
aad
movb
and
in
xchg
jno
lock
arpl
ja
pop
leave
leave
sbb
int
xor
and
sbb
or
dec
mov
or
inc
xchg
cmpsl
stc
mov
into
dec
lea
jns
jo
aam
xor
jns
adc
add
subb
test
push
adc
cmp
out
call
and
scas
clc
outsb
pop
cs
movups
add
mov
or
call
sub
add
add
mov
push
push
mov
imulb
and
stc
inc
push
pop
mov
les
xor
pushl
adc
xor
cmp
fs
sub
leave
ret
xchg
lahf
aam
sbbl
enter
icebp
adc
inc
stos
loope
lds
or
xor
sbb
bound
mov
sub
daa
call
xor
les
adc
adc
int3
mov
insb
push
je
xor
insl
test
out
jno
loop
mov
cld
sti
rcl
or
and
push
jno
pop
lret
inc
xchg
mov
filds
pusha
pusha
call
mov
mov
mov
repnz
ffree
test
or
nop
adc
pop
lcall
cs
jb
push
cs
xor
stc
popa
mov
sbb
fimull
fbstp
repz
stos
imul
mov
stos
mov
shll
sbb
sbb
popf
mov
push
mov
int
pushf
mov
sbb
sub
cs
les
jecxz
shrb
dec
arpl
lock
inc
adc
mov
add
xchg
inc
add
cltd
jbe
push
fiadds
mov
jo
dec
roll
cmp
xor
sub
mov
in
jbe
sub
data16
add
jp
fldt
and
out
int
pop
shrl
mov
stc
dec
test
loopne
andb
push
movsb
and
inc
jg
mov
push
mov
push
in
mov
arpl
inc
daa
or
fidivrl
mov
sbb
push
scas
cld
pop
clc
lahf
into
pop
dec
pop
dec
fadds
add
shrl
cmp
ja
jbe
aad
and
xchg
fmull
outsb
pop
inc
push
dec
dec
dec
add
sbb
jo
mov
pop
mov
sbb
jl
sbb
fdivr
mov
and
and
loop
xchg
add
insl
pop
pop
shrb
mov
sbb
in
sub
rol
mov
sub
daa
or
mov
iret
arpl
push
pop
add
cs
cmp
inc
loope
jge
rcll
and
pop
cmp
jns
inc
cs
bound
cmpb
adc
movsb
aaa
xlat
add
jecxz
call
push
jle
jae
and
fmull
in
add
push
shr
or
xchg
push
pop
aam
sub
outsl
addr16
cmc
push
cmp
aaa
push
pushf
inc
xlat
inc
mov
lret
and
add
rclb
ret
dec
adc
sub
mov
sti
adc
xorb
test
stos
mov
xor
lods
loop
sar
xchg
scas
or
ljmp
scas
mov
mov
jecxz
jbe
jp
popa
jecxz
movups
int
adc
inc
or
shll
dec
push
adc
nop
loopne
push
mov
push
adc
cmpsl
inc
repnz
push
loope
arpl
add
ja
fbstp
movsb
popa
mov
mov
cmp
movsb
xor
jp
jg
and
jbe
outsb
neg
js
faddl
sub
or
inc
sbb
test
rorb
shlb
sub
sub
cmp
imul
cmp
pop
pop
cltd
ret
andb
cmp
and
aaa
xchg
lcall
jmp
cli
popl
mov
cld
adc
xchg
add
fdivl
push
jmp
mov
and
mov
in
sub
sahf
pop
aam
shrl
and
enter
lahf
push
loopne
lea
out
mov
stos
mov
or
cli
ds
mov
clc
jno
mov
fsubl
enter
les
push
mov
adc
xchg
pop
jo
lret
loope
mov
lahf
cmp
shufps
dec
shr
inc
push
and
test
or
push
dec
mov
pusha
in
scas
add
mov
rorb
in
ret
enter
jno
inc
xor
test
fldl
or
lods
cmc
shrb
add
mov
push
jmp
mov
mov
hlt
mov
addb
sbb
scas
xor
aaa
push
insb
dec
sbb
test
data16
or
inc
xor
fwait
adc
stc
xor
mov
int3
fmull
out
pop
cmpsb
adc
data16
ret
incl
es
pop
jo
shlb
dec
dec
xorb
mov
repnz
jmp
jnp
dec
add
imul
sub
mov
dec
sbb
dec
js
or
adc
add
pop
jne
inc
int
ds
sub
xchg
pop
cmp
and
xor
sub
mov
lock
aad
inc
imul
sub
cmp
jbe
bound
inc
cld
je
ret
imul
push
roll
fsubs
loop
test
jbe
xchg
dec
in
daa
ret
cmp
mov
leave
fildl
push
scas
lcall
pop
jp
aam
mov
xor
mov
sbb
mov
test
clc
jmp
xor
xor
and
push
aas
outsb
pop
xchg
cmp
int3
push
push
in
mov
push
test
mov
mov
sub
shlb
mov
mov
pop
fs
mov
sbbb
lock
mov
jp
add
mov
shll
inc
imul
sub
sti
fisttps
sub
ret
sbb
adc
add
or
jl
add
stos
decl
negb
iret
mov
push
add
pop
ljmp
xor
cmp
clc
push
in
push
dec
add
lods
or
push
xor
rcrb
mov
test
cmpsb
addb
pop
xchg
adc
dec
push
mov
pop
popa
sbbb
inc
adc
call
das
inc
xor
inc
aam
dec
adc
aaa
push
jo
jno
arpl
lret
out
dec
adc
sub
inc
jl
push
push
pop
mov
adc
sbb
or
xchg
pusha
mov
inc
outsl
and
cli
cmpsl
mov
ljmp
jno
or
adc
lds
or
clc
xchg
pusha
subb
xor
mov
and
dec
jns
fistl
outsl
inc
and
push
popa
mov
lock
dec
insb
mov
dec
sub
pop
subb
dec
add
cmp
dec
mov
mov
rcll
dec
ljmp
je
out
fldl
cmp
mov
pop
incl
movsl
add
mov
push
pusha
mov
sbb
push
test
inc
call
or
fiadds
xchg
or
xor
dec
fcompl
mov
dec
push
sub
in
cmpl
pop
das
leave
movsl
int
xorb
push
inc
mov
or
jecxz
xchg
mov
pop
movsl
aad
sbb
ljmp
jle
lret
ret
dec
mov
enter
aaa
test
mov
push
add
out
loopne
lcall
add
inc
cmovno
xlat
scas
push
sub
xor
inc
cs
xor
mov
lds
xor
sbb
das
push
decl
pop
fisubl
inc
je
rcrb
inc
ss
ja
fistpll
aaa
rclb
outsl
mov
mov
outsb
xchg
pop
pop
cmp
push
cld
lods
imul
mov
sub
mov
fsubp
mov
loopne
lock
and
xchg
nop
push
out
insb
repz
adc
cmpl
jp
inc
filds
push
imul
pop
push
push
mov
mov
and
pop
cmp
fsubs
pop
out
in
dec
dec
adc
mov
shrb
cmpsl
dec
cmp
mov
push
subl
mov
add
xlat
adcb
cmp
xchg
sub
cwtl
adc
call
out
es
xchg
cmp
loopne
fs
or
movl
flds
cmp
mov
test
mov
jle
mov
roll
ja
xorb
pop
pop
xchg
adc
lret
cli
daa
nop
mov
mov
sbb
adc
inc
jl
les
mov
or
enter
lret
adc
test
xchg
adc
xor
in
mov
roll
push
dec
add
sbb
sub
and
jno
pusha
cmpsb
cli
stos
incl
sti
sub
and
and
outsb
hlt
jg
mov
mov
les
aad
add
add
jae
cmpsl
mov
xchg
sub
xchg
pop
jne
jecxz
leave
mov
mov
das
mov
movsb
popf
push
mov
je
jb
cld
in
js
hlt
dec
jl
add
aad
pop
imul
jmp
mov
jbe
mov
mov
inc
jno
push
lods
push
jmp
mov
xchg
loope
fimuls
mov
or
cli
js
xchg
je
aas
ljmp
xchg
test
add
lret
and
dec
push
je
jge
or
push
jl
lcall
cmc
jae
cmc
cmp
subl
pushl
mov
sbb
and
out
jp
clc
faddl
mov
add
rcrb
cmpl
aad
mov
add
add
mov
cli
add
add
push
inc
push
sub
popf
cli
mov
js
xchg
mov
fidivrs
iret
cmp
outsl
mov
call
add
dec
js
or
inc
fnsave
inc
add
fwait
lret
pop
pusha
fdivp
xchg
lock
in
sbb
rol
decb
mov
shrb
and
notb
xor
nop
add
mov
pop
add
xchg
xchg
mov
imul
push
sub
xchg
aad
clc
mov
adc
loopne
cmp
push
jb
and
or
call
and
sarb
nop
loopne
add
sub
push
aad
fisubrs
ja
test
cmp
xchg
hlt
lret
mov
aam
pop
pop
push
inc
xor
mov
jmp
inc
sbbb
sti
mov
pop
outsb
push
inc
testl
fisttpl
mov
or
pop
call
mov
in
mov
mov
lods
cld
ficompl
inc
repnz
das
movsb
clc
cmp
stos
add
jbe
add
in
inc
jmp
and
mov
add
xor
out
pop
push
mov
pop
push
sbb
inc
or
scas
mov
leave
insb
add
inc
inc
xor
push
filds
fcompp
mov
mov
push
push
jecxz
mov
and
icebp
cwtl
sbb
popl
lock
pop
fwait
cltd
or
fistps
fbstp
pop
loopne
subl
and
rcrb
jae
sub
ficompl
fcomps
decl
sahf
cli
daa
xor
push
sahf
lock
add
push
add
xchg
cmpsl
cmc
into
in
adc
or
pop
xor
pop
lcall
test
mov
sbb
aas
mov
dec
lds
push
jp
sub
jns
inc
or
mov
cmp
mov
popf
ljmp
xchg
add
push
mov
lcall
cmp
push
add
fwait
mov
dec
dec
shl
sbbb
sub
insb
cmpsb
aas
and
test
and
add
xor
push
nop
insl
fstpl
ret
sub
mov
mov
mov
negb
adc
dec
mov
pushf
and
xchg
xor
stos
cmp
dec
sub
pop
mov
sub
and
orl
mov
add
cmpb
pop
clc
mov
sbb
lds
adc
xor
mov
fadd
fsubl
orl
cli
iret
cmp
lds
sbb
sbb
insb
adc
mov
jb
cld
in
sbb
jmp
adcl
sbb
xchg
les
inc
popf
cmp
jne
xor
pop
hlt
inc
pop
add
rorl
or
jl
ficoms
stos
fldcw
or
cli
push
mov
push
aad
cmp
ret
dec
dec
stos
add
push
cmp
gs
or
push
cmp
in
fcomip
das
nop
dec
leave
xor
dec
pop
mov
mov
je
adcl
ds
loope
push
iret
das
sti
cmpsb
imul
es
pop
or
stos
mov
cld
das
mov
jno
mov
js
and
adc
or
incl
shrl
cmp
jb
adc
add
mov
dec
dec
gs
dec
dec
pusha
mov
add
push
dec
fwait
aaa
aas
roll
ljmp
add
and
shl
inc
test
push
icebp
mov
bound
inc
leave
daa
lds
and
mov
mov
push
fisubrl
dec
sbb
jbe
sbb
mov
mov
adc
enter
pop
mov
sub
gs
add
sti
imul
sub
sbb
ficoms
jae
mov
shlb
lods
xchg
cmp
push
inc
popf
lock
loopne
jmp
sub
sub
cmc
outsb
cwtl
mov
xor
inc
pop
faddl
mov
idivl
jns,pt
push
lcall
cld
jmp
je
or
and
lods
movsb
fadds
in
xor
dec
adc
xor
xchg
sub
fisttpl
add
leave
cmp
cltd
dec
push
fidivs
add
hlt
or
xchg
jl
repnz
loop
xchg
pop
jo
push
dec
adc
jl
add
in
shr
loopne
add
je
fwait
push
dec
mov
pop
mov
fld
mov
inc
inc
jmp
mov
mov
enter
movsb
aas
std
fimull
and
or
incb
jmp
pop
dec
ret
sbb
decl
fistps
fadds
dec
cmp
or
pop
push
icebp
inc
sbb
enter
orl
push
push
enter
mov
mov
int
aas
in
sbb
and
ret
xor
xchg
xlat
push
jmp
out
hlt
hlt
das
pusha
and
into
cwtl
mov
mov
mov
rcl
mov
push
std
enter
jae
xor
cld
mov
pop
dec
dec
nop
std
scas
add
xor
in
push
std
mov
lahf
mov
mov
inc
inc
out
shrb
sahf
lea
movsl
cmpsl
xlat
jnp
mov
cmp
mov
sub
je
rcl
jl
inc
cmpsb
or
push
fs
cmp
arpl
pop
cli
sub
dec
subl
cld
rolb
in
les
jge
popf
xchg
arpl
pop
sub
lds
inc
mov
out
sbb
xor
push
cmp
mov
jp
jp
insb
lcall
leave
aas
mov
repz
lret
into
sbb
movsl
dec
mov
push
pop
and
push
popf
lock
sub
dec
icebp
mov
xor
and
inc
hlt
ljmp
mov
hlt
or
push
movsl
psubb
mov
popa
push
or
push
and
push
push
add
pushf
sub
inc
push
xor
insl
pop
xor
push
add
shrb
dec
pusha
movsb
mov
sbb
aas
iret
xor
loop
adc
sub
mov
dec
sbb
or
sbb
jae
pop
xchg
inc
xor
push
ds
dec
or
mov
dec
daa
xor
test
add
sub
arpl
imul
mov
add
mov
mov
dec
xchg
push
lods
std
daa
mov
jne
nop
inc
pop
les
xor
xchg
adcb
stos
insb
or
adc
sbb
pop
mov
mov
test
xchg
pop
push
adc
adc
pushf
lods
and
xchg
movsl
cld
in
jb
shl
aad
xchg
jno
aaa
pop
dec
pop
add
aaa
leave
loop
aam
test
mov
rcll
in
sub
push
mov
xchg
sub
loope
xchg
or
add
inc
jno
inc
in
sarl
bnd
lds
push
lds
add
jmp
dec
and
mov
cmp
ja
fbld
sbb
mov
sahf
and
jg
xchg
arpl
out
xchg
add
pop
imul
add
jbe
adc
or
sub
jl
inc
cmp
mov
test
iret
mul
cmp
mov
adc
or
adc
sbb
xor
int
dec
push
pusha
dec
adcl
or
and
ljmp
sti
repz
push
shll
int
les
aas
test
sbb
bound
cmp
daa
cmp
shll
aas
push
adc
repz
dec
and
and
add
mov
cmp
jmp
outsl
pushf
pop
jns
jp
and
in
iret
xor
and
aam
imul
cmp
pop
dec
xchg
pushf
test
movsl
call
inc
mov
sahf
lods
push
jmp
mov
pop
adc
adc
add
push
jecxz
movsb
fsubrs
out
sub
push
inc
gs
xor
je
jno
mov
mov
fisttps
cld
test
daa
add
scas
cmp
int
hlt
xor
and
fistl
rolb
sub
sub
fdivrs
das
xchg
mov
je
xchg
mov
std
xchg
or
lret
push
scas
add
jb
pop
jl
and
cwtl
mov
rclb
push
or
stos
xor
and
ss
aad
ljmp
adc
fadds
dec
and
fwait
jcxz
mov
rcrb
jbe
or
pop
mov
mov
aam
adc
leave
test
leave
nop
lock
stos
leave
mov
add
pop
sahf
inc
or
mov
mov
outsl
or
sar
subb
mov
push
notb
cli
sbb
sub
sti
enter
aas
push
lds
mov
mov
mov
aas
mov
dec
add
inc
mov
add
loopne
rolb
mov
test
insl
stos
sub
ljmp
pop
cmpsl
loope
das
sbb
jle
jne
es
test
out
cmpsb
adc
daa
pop
lods
enterw
mov
ss
mov
fldl
push
jge
inc
gs
cmp
push
xor
mov
pop
hlt
push
pushf
mov
mov
or
inc
sbb
mov
test
or
aaa
mov
pop
xchg
outsb
repz
cmp
xchg
jnp
mov
addl
cmc
aam
dec
rcrb
sahf
int
orl
lcall
clc
outsl
aam
cmp
popf
test
adc
lcall
adc
nop
cwtl
sbb
mov
jnp
push
and
inc
sbb
and
jge
sbb
bound
push
mov
mov
mov
push
js
cmp
pop
mov
imul
mov
mov
or
notb
adc
cmp
mov
push
stos
add
movsb
push
mov
ds
dec
inc
cmp
je
pusha
jo
inc
arpl
fiaddl
icebp
scas
lock
jp
sti
add
or
lock
je
push
cmp
test
cmpl
fists
in
rcr
movsb
lahf
leave
int3
and
lods
push
inc
fnstsw
int3
jge
cli
scas
pop
rol
cltd
mov
jno
cmp
int3
insl
mov
out
and
jmp
dec
pop
mov
adc
cmpsb
mov
out
fldenv
aas
scas
mov
xor
sbb
mov
test
in
pop
add
push
lcall
mov
mov
xor
ret
rcrl
nop
and
mov
mov
ss
filds
cmp
add
push
clc
test
cwtl
nop
inc
les
add
push
pop
pop
cli
jmp
mov
std
and
push
jge
add
scas
jo
mov
pop
add
dec
mov
aaa
loope
lcall
or
shrb
mov
mov
outsl
ret
xchg
sub
pushf
cmp
inc
idivl
cmp
pusha
cmp
js
xor
and
dec
test
jp
dec
jae
add
mov
aas
in
fimuls
test
xor
and
xor
mov
and
mov
lcall
mov
mov
rol
js
out
ss
xor
shrb
js
ficoms
rolb
lret
cmp
dec
outsb
frstor
dec
gs
fists
sbb
fs
mov
cmpl
inc
das
clc
and
cli
imul
push
mov
push
out
pop
mov
hlt
lahf
dec
add
shrl
out
and
jg
aas
stos
push
ret
xlat
cs
add
negl
inc
std
hlt
push
sti
ret
lret
ljmp
int
xchg
or
mov
adc
lea
lock
xor
test
in
dec
cmpl
adc
pop
or
push
mov
inc
ds
pop
stc
xchg
into
xlat
pop
or
add
je
pop
jno
in
adc
and
test
dec
cmp
pop
push
sub
rorl
lock
aad
loope
lods
sbb
xchg
add
pop
push
and
fnstenv
push
lea
shrl
sarb
pop
test
xchg
lcall
dec
mov
cwtl
xor
xchg
cmp
jno
jecxz
inc
xchg
pop
sbb
pop
sub
cmp
int3
jmp
or
inc
mov
pop
insl
jbe
add
sbb
fisubs
cmp
hlt
mov
out
or
inc
lahf
data16
xchg
lods
in
ret
jae
subl
fneni(8087
or
ljmp
notl
inc
inc
pop
dec
andl
cmc
test
data16
cmp
lock
or
or
mov
hlt
and
stc
loop
mov
push
adc
fiadds
dec
jns
mov
jg
mov
xor
xchg
jb
stos
incb
lock
shlb
or
sub
int3
mov
and
xchg
pushf
out
xchg
xor
adc
push
jbe
in
nop
mov
call
xchg
cmp
mov
xor
add
sbb
cmp
jg
hlt
inc
enter
out
in
test
jno
inc
lods
and
lods
imul
sahf
or
je
ret
push
add
icebp
pop
adc
cmp
aam
mov
cltd
mov
inc
xlat
pop
push
roll
lahf
test
in
xchg
push
xchg
repnz
lock
inc
cmpb
cmpsb
xor
push
or
adc
jno
mov
or
shl
imul
lahf
add
sub
pop
dec
dec
jle
call
scas
push
adc
dec
pusha
addr16
adc
or
mov
lret
pusha
cwtl
data16
mov
pop
je
cmp
cld
in
mov
push
and
pushf
mov
jo
test
inc
xor
insb
add
loop
pop
dec
push
pop
pop
das
mov
sub
pop
sub
rcl
xor
daa
add
dec
enter
cmp
xor
cwtl
stos
outsb
in
fsubrl
notb
or
jp
mov
aas
push
inc
pop
imul
shl
lcall
sarb
jbe
push
lock
jmp
outsl
enter
loop
inc
outsl
bound
movsb
mulb
or
or
fcmovnu
dec
mov
cmp
bound
out
jo
push
lea
lahf
inc
xor
mov
mov
sub
mov
jge
aad
sbb
sahf
inc
aad
pop
mov
pusha
pop
into
dec
add
jo
or
in
shrd
cmp
lock
addb
sub
pop
jg
test
and
clc
and
or
mov
pusha
ljmp
das
out
mov
cmp
hlt
push
lret
into
andb
pop
out
lds
out
addl
cmp
aam
movsl
cld
dec
and
fstl
pop
je
add
je
aam
push
cltd
sub
push
add
stos
mov
jbe
adc
mov
jp
outsl
push
sbb
xor
pushf
mov
add
mov
sahf
stos
dec
push
ret
cmc
adc
sbb
outsl
jp
pop
lock
sbb
xchg
inc
or
xlat
sub
fisttps
lcall
test
rol
mov
lock
mov
shll
inc
and
jo
jb
and
testb
sbb
or
sub
lcall
sub
in
or
and
pop
cmpsb
jmp
push
in
pop
fsubl
int
jmp
loopne
jp
sbb
mov
movsl
repnz
int
sub
add
inc
sbb
mov
xchg
cli
outsb
pop
hlt
fsubrs
lock
cs
imul
mov
xchg
jno
jbe
or
mov
pop
mov
loope
rcrb
scas
ss
je
test
data16
jp
cmp
lcall
out
cwtl
pop
jo
or
mov
insl
movsb
cmp
cmp
jle
ljmp
xchg
mov
xchg
xchg
lcall
xchg
cmp
mov
filds
jae
mov
clc
in
fs
shr
pop
push
sbbb
sub
mov
mov
sub
mov
sbb
xchg
push
les
mov
mov
cmp
mov
xlat
push
and
jnp
ss
push
test
push
push
popa
sahf
outsb
subl
pushf
lret
shll
xlat
xchg
xchg
mov
mov
rorb
adcl
test
mov
xor
roll
ds
xchg
test
xchg
xchg
clc
jbe
adc
add
aam
jg
jp
jl
push
mov
or
jge
or
lahf
jns
jp
mov
out
loop
sarb
sbb
sbb
int
repnz
iret
inc
sbb
mov
addr16
xlat
daa
mov
cli
jb
pop
call
fmuls
pushf
scas
sbb
or
jne
pop
stos
flds
aas
call
add
adc
jl
add
cmpb
mov
dec
jb
out
cwtl
pop
dec
es
sbb
add
mov
jo
das
cmp
pop
insb
lds
arpl
clc
mov
add
pop
or
xchg
xchg
jne
test
mov
aas
sub
add
cld
aam
ljmp
pusha
shrl
test
adc
hlt
adc
and
or
and
and
shrb
aaa
sub
lahf
je
and
insl
movsb
xor
sti
dec
mov
rclb
std
dec
jg
lods
xor
cmp
push
shl
orl
movsb
cmpsb
lret
data16
add
push
xchg
mov
mov
mov
jecxz
mov
testb
sbb
shrl
iret
call
iret
inc
inc
xor
adc
sub
pop
add
xchg
add
pusha
enter
aaa
cmp
jo
mov
inc
cltd
out
pop
sub
mov
in
movsl
lahf
mov
push
test
icebp
shlb
mov
ficompl
cmp
out
add
jle
add
or
push
scas
lock
adc
out
sbb
je
jnp
xor
enter
push
xchg
movntps
mov
xor
popl
sarb
adc
aam
lret
mov
mov
jne
scas
cmp
mov
dec
int
dec
push
mov
xchg
fnstsw
ljmp
lock
mov
sbb
imul
or
push
in
cmpsl
neg
adc
pop
mov
adc
fcoml
and
mov
sbb
int3
or
push
add
sbb
fcomp
adcb
mov
xor
sbb
stc
push
jbe
imul
cmp
push
and
jbe
sub
xor
lahf
sbb
sub
test
lea
mov
call
idivb
outsb
add
adc
mov
lcall
mov
sbb
sub
push
int
mov
ljmp
add
aad
ret
mov
inc
lret
addr16
clc
dec
clc
cwtl
outsl
push
xor
sbb
mov
adc
scas
lcall
xchg
vmovntpd
sub
arpl
push
clc
mov
scas
or
mov
jl
or
dec
cmp
filds
mov
jno
xor
push
dec
mov
push
and
inc
sbb
push
inc
cmp
ss
dec
and
fsubr
orb
add
dec
jmp
xchg
js
lock
cmp
addb
fstps
ljmpw
push
add
inc
gs
cld
outsl
pushf
fbstp
call
add
loope
mov
inc
dec
imul
mov
imul
jb
rolb
inc
push
inc
or
dec
fcoml
xchg
cmpb
mov
enter
adc
scas
push
add
add
jne
add
dec
lds
out
inc
jle
mov
pop
inc
xchg
inc
mov
loop
mov
loopne
dec
sub
dec
xchg
adc
icebp
cmpsl
jbe
mov
in
adc
sbb
push
inc
inc
fmuls
pop
cmc
jo
pop
hlt
or
push
pop
xchg
mov
call
fs
mov
cmp
or
cmp
cmp
gs
inc
psubusb
daa
mulb
lahf
ficomps
inc
pusha
sub
call
clc
or
sarl
rclb
lods
mov
pop
les
subb
call
mov
incl
xor
sbb
into
push
icebp
push
aam
sbb
pop
fmul
les
fildl
loopne
adc
mov
notl
imul
push
out
fcompl
add
push
cltd
xchg
add
cmpsb
lods
push
push
pop
sbbb
lahf
pop
cmp
push
movsb
mov
shlb
add
nop
mov
movsb
cli
sub
ret
and
ds
jnp
pop
fmuls
sahf
fstp
shrl
jle
and
sbb
nop
in
cmc
ss
jo
test
xchg
les
dec
in
scas
xchg
mov
in
test
inc
ja
mov
sbb
cli
mov
push
roll
cmp
ret
les
push
adc
cmpsb
xchg
std
adc
sub
test
push
rolb
add
xchg
push
js
mov
imul
sbb
mov
aad
and
jge
xchg
pop
sti
mov
sbb
outsl
inc
das
and
loope
aad
add
add
das
adc
cmpsl
pop
mov
ljmp
ja
mov
add
sahf
data16
jo
mov
je
xor
pop
and
mov
cmp
add
push
nop
inc
jae
sbb
dec
add
jae
push
jno
scas
xchg
subb
push
out
cs
rcrl
cmp
cs
call
shl
or
add
hlt
push
ret
cmpsb
adc
inc
sarb
adc
roll
ljmp
movsb
inc
sbb
adc
aad
pushf
pop
in
or
and
push
movl
fdivrs
mov
mov
ljmp
xchg
nop
andb
mov
adc
rorl
imul
fistl
push
xchg
add
jle
sar
sub
sbb
sub
fstp
jno
sub
jb
mov
repz
add
sbb
add
add
mull
and
jbe
dec
inc
sub
fimuls
lock
xor
mov
aaa
mov
lahf
mov
xor
cmpsb
pop
clc
ret
fs
test
dec
leave
inc
es
sub
add
xchg
dec
mov
xor
or
add
xchg
lea
cld
add
clc
mov
pop
int3
sbb
mov
and
add
inc
sahf
xchg
loope
sbb
movl
lods
andb
test
push
push
lea
cmpsl
xchg
shlb
xchg
jne
cltd
and
loop
pop
ret
and
popf
fadd
adc
push
adcb
mov
or
rorb
lods
mov
imull
add
subl
cwtl
bound
jmp
dec
push
push
jmp
shrl
lcall
loopne
or
fcmovne
mov
fwait
sbb
mov
cmp
jnp
arpl
addr16
ret
stos
push
sub
pop
stos
xor
mov
out
ja
xor
aad
mov
imul
xor
dec
push
decl
lods
push
fldenv
aaa
inc
inc
imul
das
cli
cmp
std
incl
pop
and
dec
mov
dec
add
dec
add
pushl
test
sbb
add
scas
ljmp
inc
sbb
inc
xor
inc
imul
cli
sbb
mov
bound
push
inc
dec
sub
addr16
dec
dec
adc
mov
imul
dec
inc
dec
add
and
xchg
sub
xor
repz
add
xlat
fstp
inc
call
push
dec
mov
mov
mov
inc
je
mov
repnz
add
fsubrs
pop
dec
pop
jg
sub
mov
sbb
sub
pushl
xchg
xor
dec
inc
mov
rcr
inc
jo
outsl
outsl
and
pop
dec
imul
jbe
pop
mov
stc
ljmp
enter
jmp
dec
inc
popa
sbb
dec
sub
orl
bound
push
mov
inc
add
idivb
mov
int
pop
ja
fs
inc
dec
jbe
jns
mov
push
ja
add
push
inc
xor
pusha
sbb
mov
fmuls
inc
push
add
adc
xchg
fiadds
fidivl
out
je
dec
jno
adc
sub
mov
inc
pop
inc
pop
or
fiaddl
outsl
add
push
dec
push
inc
bound
int3
sub
mov
pop
add
dec
sbb
adc
push
xor
je
jl
jl
jne
inc
adc
mov
sarb
xor
imull
adc
arpl
adc
jle
js
clc
sbb
inc
xor
mov
clc
lret
or
pmulhuw
dec
inc
inc
jo
inc
xchg
or
push
lret
dec
fs
pop
outsl
ds
movsb
sarb
mov
rcrl
loop
add
bound
push
rorl
inc
push
sbb
inc
cmp
mov
popa
jne
lret
push
insb
addr16
test
test
dec
adc
data16
dec
int3
cld
outsl
xorb
push
lock
popa
insb
pushw
popa
popa
or
sti
popf
mov
sub
les
loopne
adc
scas
xor
sbb
mov
adc
repnz
call
xor
mov
add
loope
mov
addr16
mov
insl
and
xor
add
mov
jp
mov
aas
cmc
hlt
cmp
add
rcrb
sti
shlb
repz
loope
loop
mov
bound
push
rol
jl
dec
lods
call
sub
dec
fwait
movups
mov
add
cmp
add
add
sbb
clc
ljmp
add
push
jae
stos
insb
fwait
mov
adc
ja
add
iret
xchg
pop
pop
or
mov
shlb
add
ja
mov
adc
rorl
mov
andb
mov
scas
ss
or
inc
sbb
jl
lds
add
les
movsb
test
pop
push
mov
jno
jg
int
ss
or
mov
bound
adc
ds
mov
ret
and
push
pushf
je
xchg
iret
es
cmp
repnz
test
je
fs
ds
pusha
or
cmp
or
aam
in
dec
push
test
loope
cmp
sbb
pop
movsl
xchg
repnz
add
adc
and
lret
into
ret
xor
popf
pop
adc
add
rol
and
mov
mov
cwtl
add
sti
dec
mov
mov
and
inc
ret
cmp
xchg
insb
test
popa
add
or
push
pop
cld
push
outsb
mov
stos
jp
adc
call
pop
mov
inc
xlat
xor
mov
adc
daa
hlt
xchg
push
shl
xor
pop
sbb
int3
loop
push
into
mov
test
ret
dec
inc
rorb
lock
sbb
pop
je
inc
arpl
pop
rolb
jmp
mov
cmc
mov
add
and
mov
out
cld
mov
addr16
fmul
cmpsb
mov
shrb
loop
cmpb
mov
dec
addr16
rdpmc
in
inc
repz
fcoms
pop
adc
jne
jp
call
pop
decl
inc
adc
dec
xchg
or
aas
mov
mov
out
and
add
les
adc
cmpsb
fsubl
push
adc
sub
addb
out
divb
shlb
xor
lret
sbb
imul
or
inc
cs
test
add
jne
test
or
mov
hlt
hlt
nop
or
or
into
adc
sub
inc
cmp
jo
repz
iret
dec
orl
adc
sbb
in
cltd
inc
lcall
jne
mov
cmp
outsl
shrb
mov
push
dec
dec
lock
or
cmpsb
aad
push
cmp
jle
sbb
imul
daa
stos
test
mov
jg
pop
cmpsb
mov
fisubrs
cld
cmpsb
inc
repz
addr16
and
je
jo
push
xor
lods
rclb
and
daa
inc
mov
test
dec
out
push
sbb
cmp
pop
add
fistpll
inc
in
ljmp
dec
cmpsb
mov
add
cmp
aam
dec
cli
outsb
and
daa
and
xchg
xchg
fldt
data16
cwtl
ljmp
or
ss
ja
inc
cmpsl
mov
push
xchg
aam
ljmp
nop
clc
sub
aaa
sahf
outsl
mov
and
pop
push
push
pop
mov
nop
pop
dec
adc
ljmp
cmp
adc
jns
jecxz
int3
hlt
mov
xchg
xor
push
clc
push
loop
mov
test
push
or
adcb
jns
dec
jno
negb
inc
shlb
cld
movsl
sbb
aaa
aaa
mov
mov
movsb
inc
outsl
xlat
add
insl
xchg
mov
mov
add
adc
mov
add
push
movsl
sti
add
test
dec
jg
cmpsb
add
insb
xchg
inc
jmp
add
sbb
mov
sub
aam
pop
pop
mov
inc
js
inc
outsb
mov
cmp
aam
sub
or
ficoml
pop
pushf
popf
jno
pop
push
lock
adcb
out
pop
hlt
jmp
mov
sbb
sub
add
inc
aas
add
js
outsl
push
ret
call
por
test
mov
mov
and
jno
imul
cmp
hlt
daa
in
dec
enter
push
and
pushf
adc
mov
xorb
ja
inc
les
lahf
xor
das
test
imul
fisubrs
sbb
push
mov
cmp
and
mov
jg
test
fstpl
scas
mov
out
loopne
dec
jp
inc
sahf
adc
inc
push
cmp
test
pop
ret
dec
xchg
push
cmpsb
fstps
add
lock
and
or
or
bound
add
lcall
xor
cmp
jg
jno
xor
shrb
scas
hlt
mov
inc
mov
packsswb
xor
adc
mov
les
cmp
adc
push
adc
add
mov
mov
clc
in
bound
aam
mov
sbb
fcomps
outsb
push
fisttps
inc
jmp
out
and
push
sub
lret
aad
cs
push
cmp
call
sti
cmp
idivl
mov
out
call
loop
fsubp
and
and
stos
mov
mov
addr16
leave
add
loopne
cs
mov
test
or
lahf
rol
xor
pusha
push
inc
out
cmpsl
shl
mov
lods
jno
popa
out
cmc
outsl
mov
xor
cwtl
loope
out
mov
inc
sub
sbb
sub
inc
clc
pop
dec
addr16
add
cmp
rorl
out
or
int
jl
repz
out
add
mov
lock
lds
jns
stos
lods
shlb
gs
xchg
and
or
mov
mov
sarb
rorb
jmp
cmovae
mov
cs
cmp
aam
decb
jne
clc
inc
push
jb
lret
inc
faddp
ds
adcl
popa
inc
imul
outsb
movsb
lcall
ja
gs
cmp
push
lds
rolb
fwait
or
arpl
lcall
pop
xchg
mov
xchg
movsl
aaa
lods
jle
sbbb
cmp
mov
jecxz
mov
orl
decl
xchg
fisubrl
pop
cmpsl
call
sbb
pop
lret
addb
mov
ret
adc
adc
cltd
in
jbe
push
ret
xchg
and
jg
inc
inc
pop
pop
pop
mov
xchg
repnz
test
xor
or
scas
stc
int
clc
inc
repz
inc
adc
and
mov
movsl
mov
int
jge
or
inc
mov
int3
and
inc
test
imul
jbe
jne
lea
pop
pop
xor
and
sub
std
ret
adc
fsubrs
in
cmp
mov
mov
and
insb
adc
push
push
clc
lret
pop
shlb
jg
rcl
loopne
or
mov
popa
add
mov
inc
fdivrl
sti
inc
std
jl
mov
xor
out
push
add
xchg
mov
movsb
nop
push
lock
mov
and
and
or
shlb
dec
jecxz
pop
sbb
pop
sbb
mov
cli
sbbl
xor
push
ds
sbb
jo
out
or
xchg
mov
cmp
inc
push
xlat
mov
cmpl
clc
sarb
shrb
add
pop
push
int
pusha
fdivr
shrb
cmovno
into
xor
cltd
mov
call
fwait
jo
inc
je
inc
test
and
add
mov
insb
outsl
push
jg
ds
add
xor
dec
leave
ficoml
mov
clc
or
add
sub
push
test
data16
ret
sahf
fs
scas
jl
lret
cmp
mov
mov
mov
data16
mov
dec
cmp
lcall
cmp
shl
out
sarb
mov
lahf
mov
andb
ljmp
push
jne
and
int3
push
and
pop
dec
add
ret
loope
fucomi
shlb
and
gs
inc
adc
mov
dec
bound
jnp
repnz
lahf
jmp
inc
adc
push
repz
mov
adc
rol
push
enter
pusha
lahf
mov
push
icebp
orb
ret
loope
adc
stos
adc
fwait
push
or
sbb
loop
xor
jg
sbbl
mov
fmull
orb
fs
or
push
mov
inc
push
sbb
dec
push
push
rcll
mov
push
sbbl
rcrb
mov
add
jmp
or
repnz
hlt
loopne
push
stc
subb
shll
pop
js
mov
sarb
das
jmp
divb
mov
test
nop
pop
dec
nop
lea
mov
push
pop
nop
dec
fdiv
cltd
mov
shlb
test
push
and
add
xchg
cmp
and
pop
jmp
test
xchg
jne
sub
scas
stos
ljmpw
add
or
je
push
push
mov
out
sub
xor
pop
sub
add
std
xor
mov
test
add
call
pusha
mov
jns
roll
mov
mov
fisubs
mov
rol
mov
testl
ds
pop
cmp
mov
fimuls
scas
inc
dec
pop
sub
jo
xchg
mov
ret
out
mov
push
xchg
adc
sub
aam
outsl
popf
dec
test
inc
iret
sub
dec
xor
loop
mov
cmp
xor
ss
xchg
mov
decl
cli
push
pop
add
cmpsl
push
push
mov
pop
inc
cld
xor
lcall
pusha
icebp
mov
mov
jmp
inc
add
jbe
outsb
push
clc
push
xor
cmp
loope
add
addl
sbb
movsb
cmp
sbb
mov
dec
fiadds
lret
inc
push
testb
push
and
sbb
jno
and
xor
test
add
jnp
mov
mov
inc
sti
mov
mov
lock
jne
inc
push
pop
je
jle
dec
add
push
dec
add
cmc
sub
pop
mov
cmp
add
lea
shl
ret
add
pushf
daa
inc
jl
loope
dec
stos
call
sub
subl
add
xchg
add
adc
mov
fs
je
sub
and
mov
call
pop
fidivrl
icebp
add
jo
pop
lahf
inc
shll
dec
jle
movsb
addl
mov
fadds
pusha
pop
inc
pop
shll
dec
adc
or
dec
hlt
lock
pushf
insl
addb
inc
dec
enter
sbb
jp
ss
push
jecxz
adcb
inc
push
mov
stos
mov
xchg
lock
hlt
push
xor
add
or
cmpb
cwtl
inc
jmp
mov
jp
mov
sbb
sbb
loop,pn
or
add
push
pop
inc
sbb
mov
fidivs
into
int
lret
cmpsl
in
push
roll
cld
loope
icebp
mov
mov
in
or
orl
out
push
jl
in
jge
movsb
mov
or
xor
pusha
popf
or
divb
fstpt
sub
das
sbbb
dec
push
sub
mov
sbb
mov
or
or
mov
insb
cmc
pusha
push
push
inc
sub
jns
mov
xor
and
mov
pop
xchg
push
and
add
shll
loope
add
or
xchg
cld
outsl
inc
mov
pop
xchg
insb
lcall
rclb
test
movsl
lahf
lods
inc
or
mov
or
outsl
xor
or
aaa
push
sbb
xor
pop
push
add
add
jmp
fmull
sbb
enter
es
das
outsb
fwait
movsb
sbb
das
gs
std
mov
mov
add
out
sbb
sub
int
xchg
es
out
pusha
mov
xchg
std
es
xor
imul
filds
jmp
dec
or
and
or
push
dec
sbb
enter
std
sub
or
movsl
sbb
popa
sub
push
lods
pop
push
rorb
xor
push
fcmove
push
mov
pop
inc
jge
popa
sbb
movl
adc
repz
adc
popf
sbb
test
add
fwait
push
outsb
jae
or
lock
cmpsl
cmpb
nop
clc
lods
inc
movsl
mov
or
into
and
popf
inc
std
push
loope
xor
arpl
push
stc
inc
sbb
mov
jp
cmp
push
shll
add
xchg
hlt
imul
mov
dec
addl
mov
sbb
xchg
sub
shlb
sti
fsubrs
xor
scas
lds
jge
xchg
ljmp
std
push
adc
mov
dec
loop
pop
adc
repz
ret
ja
pop
mov
ss
push
adc
xchg
inc
add
xchg
jmp
xor
or
mov
jb
cmp
cmp
jno
adc
jmp
adc
insb
cmp
push
enter
or
xchg
dec
jne
loope
and
mov
and
mov
sub
cltd
fcmovbe
sbb
xlat
movsl
push
popa
dec
fisubs
jbe
xchg
mov
jg
dec
push
imul
lcall
fwait
jne
push
in
push
aam
push
hlt
push
push
inc
add
inc
mov
jl
pop
mov
push
mov
add
sub
lods
mov
sub
lods
ja
adc
cwtl
push
addr16
out
lods
or
mov
add
test
cmpsb
sahf
and
dec
stos
pusha
inc
xchg
jg
push
daa
push
inc
mov
mov
lea
loope
jbe
loope
xchg
sub
sub
inc
cmp
cmp
push
dec
and
push
push
jns
xlat
xor
xchg
dec
ret
out
push
pusha
popf
xor
adc
or
adc
daa
popf
or
or
aam
adc
push
mov
and
sbbl
inc
test
and
inc
lahf
mov
jmp
movsb
sub
test
imul
and
jmp
mov
rolb
orb
ljmp
cs
cmpsl
xor
dec
subl
add
dec
dec
and
xor
mov
adc
fbstp
js
shrb
mov
xchg
fs
sbb
jle
pop
movsb
or
lret
pop
pushf
popa
inc
outsl
dec
xchg
pop
notb
cmc
out
jle
and
jne
test
bound
add
fisubrl
xchg
cmp
push
iret
push
daa
pop
cmc
mov
int
imul
xor
hlt
lahf
push
pop
or
out
lock
das
or
fwait
cwtl
add
bound
jl
pop
ss
sbb
push
imul
mov
or
or
xchg
rolb
loopne
add
int
pop
mov
inc
dec
shrb
adc
xor
push
bound
repnz
ja
or
and
mov
mov
push
inc
repnz
imul
stos
fimull
xor
in
div
cltd
int3
and
and
pop
jns
sbb
mov
add
sahf
enter
cmp
decl
xor
mov
shll
inc
call
jl
ret
mov
fldenv
sub
mov
cmpsb
dec
pop
test
push
add
enter
call
sahf
sbb
popf
fwait
shrl
cmp
push
dec
push
and
scas
mov
adc
into
or
add
pop
jp
lcall
std
add
je
push
int3
testl
int
xchg
aaa
std
inc
inc
xchg
sub
push
out
stos
lahf
fdivr
adc
loope
cmpb
lds
inc
and
adc
scas
lcall
xor
pushf
insb
push
add
inc
popl
aad
mov
adc
and
fs
mov
push
adc
popl
aas
push
fmulp
add
cwtl
fwait
test
mov
fsubs
inc
movsb
cmp
or
call
aad
mov
jne
ja
mov
insl
movsb
mov
cld
pushf
jne
pop
inc
jl
jmp
hlt
fstps
and
push
sub
movsb
push
addl
loop
dec
ds
sbb
pop
push
mov
jno
add
ds
cwtl
int3
mov
aam
and
and
shrb
inc
roll
ljmp
incl
mov
andl
shlb
pop
je
cmp
sbb
jo
dec
xor
dec
mov
lds
daa
inc
push
xchg
sub
shrl
in
lods
addr16
fadds
out
mov
mov
jmp
loopne
xchg
cmc
cmpsb
insl
sub
aad
jno
pushf
stos
sbb
mov
push
mov
cli
in
outsb
test
sbbl
test
xchg
push
inc
add
hlt
pop
aad
mov
jb
mov
fdivs
add
push
pop
push
iret
cli
ret
negl
test
push
inc
cld
adc
aad
pop
test
pop
mov
loopne
pop
push
jno
lahf
mov
repnz
dec
leave
addr16
mov
rcll
insb
or
les
std
into
call
aam
xor
push
sbb
out
outsb
test
dec
popf
in
dec
jne
sbb
push
add
jne
fs
sbb
xchg
push
div
call
pop
data16
scas
mov
and
push
jl
adc
sbbl
xchg
fcomp
mov
add
jp
lods
sbb
mov
sub
mov
pusha
dec
in
pop
adc
xor
mov
icebp
xchg
mov
mov
int3
push
push
inc
mov
aad
xor
movsb
rorb
pop
push
cmp
xor
inc
fisubl
ret
cs
lds
loopne
or
or
fidivrl
lcall
dec
sub
cli
cmpxchg
sub
adc
xor
pop
fwait
test
lods
js
sbb
sub
xchg
push
xchg
int
icebp
xchg
test
add
push
inc
sub
lods
fadds
scas
dec
cmp
or
pop
dec
or
loop
or
fisttps
push
adc
or
inc
pusha
das
sti
dec
and
push
lods
xchg
call
cwtl
or
int3
mov
dec
pop
mov
xchg
adcl
sbb
roll
ficompl
cmp
jg
ficompl
push
int3
call
iret
sub
pop
ficomps
jne
insb
stos
dec
ds
lds
mov
lea
jo
and
xchg
stc
sbb
stos
xor
cmp
cmp
add
in
push
jbe
mov
xor
loop
xor
es
mov
es
dec
test
add
dec
loop
icebp
pop
mov
pop
push
fnstsw
in
addl
sbb
shlb
movsl
and
or
pop
push
lahf
sbb
ss
dec
mov
shrb
cmp
cmp
xor
test
sub
lods
dec
aaa
lods
fpatan
inc
jmp
sahf
icebp
or
push
mov
jno
jl
outsl
jg
or
pop
mov
repnz
and
sub
dec
leave
add
pop
mov
cli
or
cmp
adc
int
jne
xchg
je
cmp
out
js
xchg
fwait
lahf
xor
lret
xor
popa
xor
es
jmp
shlb
or
push
movsb
xor
pop
mov
test
andl
les
movsb
mov
sbb
jl
mov
sti
mov
adc
cmpsb
or
lahf
pop
test
lea
push
cmpsb
into
cld
dec
notl
add
xchg
inc
or
push
inc
addb
aam
and
cmp
pop
cmc
push
xor
push
cmp
pop
int3
pop
add
sbb
cmpsl
mov
add
mov
pop
jl
adc
das
enter
loop
ljmp
xchg
sbb
shll
sbb
inc
mov
test
jmp
sbb
dec
cmpsb
xchg
vphaddbq
mov
cltd
adc
ljmp
and
sbb
pop
fistpll
inc
inc
add
push
lds
xor
xor
das
jo
and
xchg
aad
and
jbe
stc
pop
and
jecxz
test
rorb
adc
sub
cwtl
push
dec
adc
xchg
inc
xchg
cmc
mov
add
icebp
ficomps
jns
pushf
stos
pop
popl
push
mov
movsb
ret
or
mov
test
aaa
cmovns
add
push
xor
cs
stos
jae
push
cmpl
call
test
fwait
ljmp
pop
add
test
adc
test
jne
push
arpl
arpl
and
test
ljmp
or
decb
ret
rorl
add
std
add
testb
ret
cmp
ds
adc
and
inc
rclb
hlt
add
cmc
xor
and
je
ret
shll
ds
popa
pop
cmp
mov
hlt
ret
push
mov
stos
aaa
push
stos
jno
into
scas
loope
jmp
mov
jne
popf
xor
add
inc
test
js,pn
fisubl
lcall
mov
adc
out
xchg
jae
stos
pop
push
pop
inc
inc
sub
out
mov
lret
dec
in
mov
jg
inc
mov
in
fimuls
js
cwtl
xchg
jg
cmp
jecxz
mov
xchg
hlt
push
mov
frstor
sbb
cmp
mov
scas
movsb
sbb
cmp
scas
jecxz
sbb
or
pop
xchg
out
rcl
test
in
dec
jns
xchg
xchg
inc
imul
test
jo
jns
cmp
push
xchg
mov
push
jl
jg
sbb
mov
mov
repnz
jo
add
into
cmp
sbb
jbe
cli
test
test
icebp
ds
fldt
mov
xchg
fidivl
xchg
cs
loopne
cs
shlb
mov
jno
inc
rcl
adc
repnz
cmp
stos
xchg
je
and
pop
lea
mov
fdivrl
xchg
loop
xor
inc
sbb
dec
fdivl
add
into
aam
cli
lock
pop
movsl
cmp
mov
cli
movsl
ss
xlat
inc
inc
pop
pushl
js
dec
sbb
xor
shl
inc
in
sbb
add
dec
mov
mov
pop
and
mov
mov
lea
lods
inc
ret
dec
pushf
clc
lcall
or
jle
mov
mov
cmc
test
orb
in
jg
sbb
sub
fwait
jecxz
inc
mov
sub
cli
xchg
fnstsw
inc
repz
ret
add
cli
jl
cmp
outsb
ss
push
cld
mov
xchg
cld
xor
out
or
hlt
or
adc
stos
lock
xchg
cmpl
rolb
adc
cld
lods
int
mov
cmpsl
fiaddl
cmp
cmp
cmp
mov
mov
xchg
lret
cs
mov
push
mov
and
cld
mov
loopne
sub
pop
ja
sbb
xchg
sub
push
push
cmp
das
add
outsb
icebp
add
test
fs
dec
stos
lds
push
roll
inc
sub
jp
mov
and
inc
mov
push
add
dec
or
and
int
sub
in
add
add
dec
bound
xchg
adc
js
push
pop
addb
mov
push
mov
and
cmp
or
pop
dec
cld
push
jne
sub
xor
scas
orl
mov
rclb
imul
icebp
test
pop
lds
sub
pushf
clc
das
stos
ds
out
sti
and
sbb
or
rolb
les
pushf
movsl
pop
pop
loop
nop
xlat
loopne
lods
incl
adc
xorb
test
mov
jo
mov
add
divl
aam
sbb
scas
push
movsl
mov
jle
cmp
fwait
add
xor
adc
jno
or
cmp
jp
inc
aaa
pop
shlb
lcall
in
iret
xchg
lcall
add
imulb
outsb
in
xchg
push
lea
xchg
sbb
push
outsb
gs
dec
test
ret
push
into
fdiv
aam
add
xor
mov
bnd
xchg
cltd
xchg
cmc
insb
cmc
mov
xchg
jb
jo
mov
clc
inc
popa
cltd
pop
push
stos
clc
push
loop
or
jp
and
cli
outsb
cmp
inc
xchg
shll
out
dec
cmp
dec
pop
cmp
mov
jne
cmp
shl
lret
leave
jo
xchg
pop
dec
sbb
dec
push
mov
xor
jne
adc
adc
repnz
out
adc
or
insb
dec
sbb
sub
loope
fistpll
jecxz
inc
dec
or
mov
or
mov
dec
jp
cltd
loope
and
push
and
inc
insl
les
pop
mov
cld
adc
fisubs
jmp
add
mov
cld
and
inc
add
ss
inc
outsl
out
mov
rcrl
push
push
push
std
add
jne
push
int
shll
enter
mov
into
jo
lret
and
inc
add
notb
mov
js
js
jp
fnsave
sub
nop
cli
mov
push
dec
test
pop
or
popa
and
insl
cmc
mov
fucom
fisttpll
repz
mov
mov
add
pusha
add
jo
cmp
ret
mulb
push
sub
jnp
mov
or
hlt
adc
test
or
in
jg
sbb
adc
inc
cmpsb
inc
xor
push
lock
jns
add
lock
fsubr
mov
imul
cmp
sub
scas
addr16
rcll
das
dec
test
cmp
jb
movsb
mov
or
add
mov
int
out
pop
or
in
pushf
jmp
clc
or
mov
testl
push
dec
loopne
mov
ja
cs
mov
jbe
cmpb
js
adc
in
fsubrs
imul
jl
inc
mov
or
jae
rolb
gs
jnp
xchg
dec
aaa
sub
sar
xchg
inc
insb
jp
jno
xchg
cmpsb
cmpl
push
mov
stos
push
mov
je
out
add
xchg
imul
adc
push
es
and
int3
pop
out
push
ret
mov
adc
add
xor
mov
sti
or
rcl
lcall
out
addl
sahf
ret
pop
mov
daa
scas
dec
je
hlt
sbbb
or
mov
pop
or
push
jae
fcomps
mov
inc
test
imul
scas
mov
inc
mov
jmp
and
ret
flds
faddl
popf
stos
mov
ret
negl
mov
shrb
nop
fs
inc
popa
and
adc
in
sub
lods
mov
es
pop
add
push
jne
cli
outsl
jl
inc
mov
cmp
test
xchg
lcall
pop
rorl
sbb
cmp
fisubs
pop
sub
mov
dec
jl
xchg
stc
and
lock
fdivrs
and
push
repnz
lock
push
outsb
xchg
push
lock
out
pop
push
add
mulb
repz
test
cmpsb
stc
mov
add
xor
imul
dec
xor
add
lret
dec
leave
loope
ja
cwtl
test
addb
dec
pop
dec
cld
inc
in
and
cmpsb
mov
clc
fdiv
inc
outsb
jne
pop
inc
xchg
and
jno
jge
mov
jbe
pop
inc
dec
scas
in
or
nop
fidivrl
gs
orb
jo
mov
add
pop
std
pushf
xchg
enter
mov
mov
inc
movsl
lret
inc
and
pop
jg
in
dec
mov
enter
lock
fisttps
cmp
movsb
test
xchg
or
pop
lock
rorl
gs
cli
sbb
filds
mov
mov
jp
loopne
notb
aas
or
jnp
sbb
adc
scas
rorl
adc
jbe
dec
fdivrs
daa
leave
mov
dec
xchg
movsb
pop
les
in
stc
decl
or
jo
mov
lods
sub
add
jmp
lock
xor
mov
add
fcmovbe
jg
ret
sub
or
push
or
test
lds
and
jne
inc
jmp
inc
sbb
push
cmp
es
and
xchg
test
mov
mov
cmpsl
stos
dec
xchg
outsl
pop
ds
out
adc
jmp
aad
xor
mov
mov
icebp
cmp
cmp
dec
cmpsl
in
cwtl
sbb
mov
mov
inc
mov
and
fmuls
lods
mov
int
sti
shrl
mov
or
jo
jmp
pop
imul
dec
stos
and
fs
dec
jle
into
shrl
dec
push
ja
inc
fistpll
push
mov
ror
xchg
sbb
sub
call
xor
or
mov
out
arpl
dec
mov
push
cmp
stos
or
jmp
jle
leave
pop
pop
cli
and
or
insb
or
add
mov
sbb
add
inc
in
dec
or
or
push
push
cmp
mov
hlt
popf
into
js
cs
dec
pop
shl
lock
lock
outsl
jl
adc
les
and
fiadds
movsb
pmuludq
aaa
lds
jnp
push
punpckhbw
mov
dec
insl
ljmp
push
jb
dec
mov
fstpt
mov
mov
push
ret
xchg
mov
popa
push
dec
sub
shll
into
nop
shrb
dec
lods
test
lock
insl
mov
pop
in
pop
ret
pop
push
jno
imul
dec
pop
push
push
imul
incl
mov
fldcw
sbb
mov
test
mov
cmpb
lret
add
inc
sahf
add
les
ss
push
push
cs
js
out
in
and
mov
push
out
mov
mov
imul
ja
pop
rorl
adc
enter
jmp
mov
idivb
mov
pop
pop
ja
nop
pop
push
stos
out
in
enter
scas
add
popf
adc
jl
xor
pop
lcall
rol
lods
inc
sbb
rolb
aad
int3
jg
xchg
ss
mov
fs
outsb
jg
and
sub
xchg
in
ljmp
das
push
mov
mov
dec
inc
sarb
mov
std
push
sahf
popa
movsb
rolb
gs
and
cmp
xchg
xchg
fxch
repnz
pop
xchg
mov
inc
cmp
outsb
cmp
ret
or
test
in
inc
ljmp
and
adc
push
mov
sbb
pop
push
cmp
mov
stos
adc
aas
mov
xorl
cltd
lock
add
clc
push
mov
fwait
cmp
cltd
push
loopne
call
rclb
cli
pop
and
jg
mov
lret
inc
xchg
sbb
jns
in
outsl
outsb
xor
insb
outsb
push
data16
sahf
pop
decl
test
sub
inc
ret
inc
dec
lods
inc
insb
insb
orb
shrb
xor
pushf
mov
or
mov
ljmp
out
shr
incl
sbbl
push
faddl
mov
or
lret
xchg
and
in
ljmp
pop
dec
int
inc
or
fdivr
scas
ljmp
mov
add
xchg
add
mov
es
sub
repnz
and
aas
fsubr
fisubrs
sti
aad
icebp
mov
and
sbb
cmp
and
dec
xchg
or
sbb
xchg
xorb
adc
jecxz
or
add
mov
fsubl
xlat
imull
test
lret
add
stos
push
or
icebp
std
push
adc
xor
sti
mov
lock
mov
pop
push
enter
cld
mov
stos
mov
cmp
mov
add
xchg
in
fidivrl
lret
frstor
adc
mov
repz
into
inc
push
adc
mov
pushf
sarl
pusha
insl
cmp
cmp
cmp
inc
xor
cld
insb
roll
jo
popa
paddsb
push
repz
jnp
test
in
cld
inc
ljmp
fisttps
js
push
sub
into
xor
rcl
jnp
ds
fcoms
test
mov
sbb
aaa
ret
add
jg
push
or
stc
adcb
cs
ds
xchg
sbb
mov
or
add
push
xor
jnp
rol
mov
add
xor
xlat
arpl
xchg
and
les
shr
lcall
jle
rcrl
or
mov
loopne
test
lcall
cmp
mov
sahf
push
inc
pop
mov
inc
jnp
adc
mov
lock
cmp
jecxz
cs
add
decb
in
lcall
cmp
movsl
mov
rolb
dec
pusha
mov
sbb
mov
xchg
movsl
pop
loopne
gs
jae
dec
cwtl
repz
pop
mov
clc
test
inc
test
cmp
das
pop
mov
call
pop
dec
data16
xchg
icebp
adc
je
mov
mov
dec
mov
or
mov
je
xlat
xor
fdivrl
pop
xchg
adc
lock
xor
pop
or
addb
daa
add
cmpsb
sub
adc
lock
push
mov
pop
cmpsl
out
shrb
or
test
xchg
mov
stos
sbbb
inc
dec
aam
mov
push
std
push
jg,pt
push
push
in
add
dec
adc
int
cmpsl
push
test
pop
or
push
or
pop
or
add
or
clc
push
lea
xor
addb
dec
cld
push
cli
mov
std
adc
dec
test
or
lock
cli
es
jo
mov
rcl
sbb
pop
push
push
ja
outsl
push
pop
aas
dec
push
add
outsb
stos
adc
and
fnstenv
ljmp
and
xor
cli
inc
mov
ss
mov
xor
inc
inc
jb
add
add
mov
or
popa
cld
cmp
stos
inc
sti
lahf
adc
add
add
mov
mov
push
push
stos
inc
xor
int
lods
inc
add
mov
sub
adc
or
xchg
scas
push
push
push
add
loop
mov
decl
iret
sub
in
pop
fsubr
pushf
xchg
mov
xchg
lods
adc
mov
insb
cmp
inc
push
push
fsubs
insl
push
cwtl
add
jp
loopne
push
mov
int
adc
dec
ds
inc
adc
jecxz
popl
and
xor
mov
pop
cmc
sub
lds
rep
inc
push
or
sub
sbb
iret
pop
add
call
loope
sbb
pop
cmp
pop
enter
loop
push
outsb
repz
in
xchg
lds
push
or
inc
mov
adc
push
addr16
inc
sbb
pop
cmpsb
inc
push
mov
sub
popl
pop
and
mov
push
cmc
xlat
jno
xor
and
sub
pop
jmp
add
shrb
in
jns
dec
sbb
xor
pop
adc
jg
mov
jnp
xchg
int3
sbb
test
loop
sub
inc
test
add
mov
xor
push
pop
add
push
mov
ret
push
jle
pop
sti
out
scas
inc
lds
lahf
mov
dec
mov
call
jp
test
pop
lahf
cli
add
mulb
xchg
cmc
mov
push
xor
test
or
dec
pop
repz
dec
cs
aaa
sub
pop
mov
jne
iret
pushf
mov
popa
xlat
pop
push
adc
push
cld
mov
pop
leave
cmp
mov
jns
add
sbb
ljmp
popl
es
mov
repnz
adc
fidivl
mov
dec
sbb
lock
add
cmpl
jnp
les
pop
sub
sub
lret
mov
out
mov
push
ljmp
jnp
in
scas
mov
les
imul
mov
jo
add
rcrl
in
cwtl
inc
push
push
jecxz
mov
mov
test
cmp
jmp
jle
cmp
sbb
out
lods
sub
inc
aas
cmp
rcrb
ret
jno
mov
adc
or
pop
or
sbb
faddl
xorl
inc
das
sbb
mov
in
lar
jmp
jecxz
mov
and
pusha
or
and
cmp
js
sbb
cmc
in
cwtl
push
xlat
or
leave
mov
test
bound
cmpsb
dec
cmp
cltd
mov
xorl
int3
add
aaa
stos
mov
movsb
xchg
jno
mov
pop
int
imul
or
sub
push
shll
rol
inc
lock
minps
lret
mov
mov
cli
je
sbb
adc
push
bound
ret
pop
ljmp
mov
aam
push
mov
xor
push
lahf
lret
cmp
cmp
in
and
xchg
dec
cmc
jne
iret
push
loope
push
push
cmp
mov
sub
ret
xchg
movsl
or
cs
mov
xlat
fs
jl
pop
jbe
xor
ja
xchg
rcll
mov
push
push
call
loope
stos
clc
rclb
rorl
ficompl
icebp
test
das
pop
cli
push
or
lds
test
jp
mov
std
and
outsl
ret
pushf
dec
arpl
decl
push
sbb
mov
jmp
ret
rcr
cld
ret
dec
cmpsb
ljmp
pusha
popa
or
push
cmp
jecxz
fimuls
sub
push
or
dec
into
push
pusha
add
inc
aaa
pusha
pop
fdivs
adc
jmp
mov
sbb
mov
aam
test
int3
cmp
mov
sahf
ret
and
xor
cmp
clc
adc
in
xchg
repz
push
xor
ds
push
add
adc
popa
roll
aam
adc
pop
dec
jle
xchg
mov
loope
lods
test
mov
adc
xor
sbb
sub
and
cmpsb
adcl
sbb
and
lea
sahf
sbb
data16
dec
dec
int3
mov
add
add
inc
loope
jnp
mov
inc
inc
mov
jno
icebp
in
mov
add
int3
dec
xor
push
testb
cld
push
stos
mov
mov
cwtl
and
popa
mov
or
outsl
jecxz
loopne
andb
pop
test
xor
sub
push
dec
lock
or
sti
jecxz
in
xor
fisubrs
inc
mov
das
xchg
aas
push
hlt
iret
ret
adc
shlb
jmpw
mov
jmp
ljmp
es
repnz
xchg
fnstenv
cmp
lods
sahf
dec
movl
xchg
ljmp
push
add
rcrl
out
fcomp
clc
push
mov
in
push
inc
adc
loopne
sbbb
test
sub
icebp
dec
push
sti
jo
jg
lock
pop
in
xchg
pop
scas
xlat
mov
nop
dec
push
push
cli
xorl
pusha
xchg
stos
mov
add
inc
mov
call
aam
mov
hlt
out
lods
ss
outsl
insb
sub
adc
fisubs
fisubl
mov
in
in
nop
loopne
mov
cmpsl
lahf
mov
push
into
mov
outsb
lds
add
push
cmpb
mov
das
sub
stos
push
cmpsb
fbstp
cld
mov
imul
push
aaa
dec
es
pushf
ss
add
mov
xchg
loope
mov
imul
and
pop
sbbb
inc
mov
lahf
pop
enter
scas
leave
ds
sbb
xor
sbbl
std
xchg
jo
push
mov
sub
clc
sub
in
ss
jae
ret
pop
in
xor
sarb
cmpb
push
fdivs
dec
shll
push
push
push
and
dec
mov
pop
decl
adc
adc
stos
icebp
pop
incb
fadds
cmp
and
je
jl
daa
xor
insl
push
xor
cmc
jg
xor
push
loope
mov
xchg
adc
dec
test
push
pop
orl
andb
insb
mov
lahf
push
adc
inc
lock
push
setge
dec
dec
and
nop
and
add
mov
subl
scas
aaa
pop
aam
inc
ret
movsb
push
addr16
mov
inc
pop
hlt
fistl
mov
xchg
les
ljmp
and
mov
movsb
les
xor
inc
mov
pop
out
ret
xor
and
xor
ja
and
add
and
and
pop
fs
jge
jmp
cmp
sbb
aad
mov
rorl
outsb
or
fmuls
test
adc
sub
lret
icebp
xchg
lock
push
xor
adc
dec
and
adc
mov
scas
out
std
test
mov
lods
mov
mov
cs
mov
sbb
push
ss
adc
aaa
push
sub
add
sub
jecxz
sbb
fxch
sub
aad
ds
or
dec
ret
cmp
std
and
sbb
push
rcll
popf
inc
movsb
scas
add
cmp
js
sti
or
mov
xor
outsb
je
cmovle
inc
and
lds
ret
mov
or
xor
inc
inc
mov
lock
jl
mov
aaa
mov
inc
out
repz
loopne
cli
or
push
push
mov
inc
punpckldq
pop
call
sbbb
lods
sub
sbb
adcb
push
xor
adc
jbe
push
test
leave
pusha
sub
out
push
jne
addl
xchg
mov
pop
cmp
mov
and
cld
jg
daa
sub
js
test
sub
inc
sub
pop
xchg
sub
dec
ret
xor
or
std
or
push
add
es
dec
add
mov
icebp
sub
fdivs
test
cmp
int3
or
or
adc
dec
xor
cmpsl
ret
add
cmp
mov
inc
call
xor
xchg
test
popa
pushf
fldenv
add
ret
popf
add
ja
xlat
dec
jmp
jbe
mov
and
xchg
mov
sbb
cmp
mov
rcrl
mov
xchg
mov
aam
inc
outsb
mov
inc
and
push
shll
adc
add
pushf
add
push
popf
add
fwait
in
sbb
sub
leave
cld
and
repz
ljmp
aad
imul
dec
scas
dec
fistpl
clc
mov
lret
loopne
fcmovb
and
sbb
imul
ret
fldt
sbb
or
test
inc
pop
test
in
xor
inc
arpl
sbb
fsts
rorb
test
xchg
jmp
mov
std
ffree
mov
push
cmp
mov
push
push
cmpsl
clc
xor
clc
lcall
sbbl
sub
addr16
xchg
xchg
fimull
add
dec
cwtl
test
dec
ficoms
ss
ds
adc
xor
pop
pop
subl
and
or
fnstsw
pop
cmp
or
pop
xor
pop
je
sbb
clc
iret
mov
in
sbb
push
idivl
mov
lods
testl
and
clc
jmp
pop
pop
lock
dec
inc
addr16
roll
jge
add
and
jmp
sti
jp
shll
out
and
shrb
jge
xchg
jbe
loope
push
loopne
push
xor
inc
sub
aam
movsl
and
xchg
clc
lea
mov
or
inc
repnz
mov
scas
loopne
mov
movsl
pop
hlt
pop
mov
lcall
ret
cwtl
adc
orl
push
ret
addr16
das
mov
ja
jne
inc
xchg
aas
roll
stc
cmp
xor
dec
adc
mov
pop
inc
dec
xor
or
or
je
push
pop
push
dec
imul
mov
sbb
or
cltd
adc
push
decl
sarb
fsub
test
subb
xor
aaa
sbb
mov
nop
sbb
pushf
dec
sbb
fwait
jp
jb
fwait
test
das
jbe
add
pushf
cmpl
adc
xor
pop
jg
push
popa
cwtl
xchg
addb
or
lods
inc
fwait
or
ret
xchg
sub
cmpsb
mov
adc
cmovg
adcb
fs
icebp
push
lahf
or
or
popf
cli
add
xlat
aaa
aam
xchg
in
addr16
test
daa
or
cmp
or
add
lahf
ret
loope
lahf
dec
movsl
xchg
mov
outsl
xor
push
in
xchg
test
into
jne
jl
or
xchg
xchg
inc
aaa
popa
sbb
mov
imul
push
sbb
xlat
out
adc
clc
aam
dec
xor
lahf
ds
in
mov
inc
sbbb
dec
cmp
data16
jnp
test
mov
andl
pop
adc
stos
inc
xor
jbe
pop
fwait
test
sbb
cmp
or
pop
aaa
jns
adc
add
adc
xor
pop
jb
mov
fsts
adc
push
movsb
aad
xor
loop
les
mov
xchg
leave
clc
mov
mov
repnz
cld
lock
or
inc
les
rcll
lock
loope
sbb
mov
out
pushf
pop
das
push
sub
or
adc
rolb
or
cltd
imul
xor
insl
imul
xor
lcall
std
push
pusha
cmp
xchg
mov
jb
bound
nop
adc
and
and
gs
fcoml
or
push
ja
das
repnz
mov
lcall
dec
push
dec
dec
adc
aad
cwtl
lods
outsb
add
dec
push
repz
mov
pop
mov
lret
adc
pop
mov
sbb
or
xchg
leave
jne
add
pop
or
aas
xor
jnp
je
scas
cmpsb
push
loopne
sbb
stos
mov
fildll
insl
test
lock
loopne
nop
sbb
je
jmp
mov
pop
and
inc
pop
and
sbb
pushf
decl
xchg
shl
js
mov
mov
xchg
push
mov
jne
dec
push
inc
cs
popf
mov
fadds
clc
imul
fstpl
hlt
pop
data16
fcmove
out
rcrb
dec
adc
cmp
fdivp
movsl
inc
mov
cmc
pushf
icebp
loope
pop
cmp
lods
xor
call
pop
add
or
dec
and
es
or
sbb
add
lcall
add
outsl
mov
push
add
xchg
fnstcw
daa
push
fiaddl
orl
push
xchg
pop
mov
mov
xchg
xlat
mov
ret
lret
lahf
js
jl
cmp
mov
jo
fmuls
lods
in
mov
push
les
xchg
add
sbb
sub
push
cmpl
push
popa
add
outsl
je
mov
rcl
sub
sahf
cmp
push
push
les
lret
pop
pusha
inc
mov
or
mov
cmpsl
shrb
ja
adc
xchg
mov
cltd
add
or
int3
push
xchg
mov
loopne
push
sub
rclb
aad
dec
sub
mov
icebp
or
incl
cltd
push
dec
or
mov
inc
mov
or
add
loope
pop
icebp
call
in
ss
cmp
loope,pt
mov
push
or
cmc
test
adc
rcrb
inc
out
imul
or
movsb
std
inc
mov
or
in
ficomps
cmpsb
incb
pop
iret
mov
aaa
fcos
je
cmp
add
lods
inc
outsb
stos
mov
add
icebp
je
fistpll
or
xchg
mov
jl
dec
sbb
mov
outsb
dec
in
adc
ret
sub
sbb
mov
pop
xchg
bound
out
xor
adc
das
mov
movsl
and
mov
sbb
push
add
pop
ds
add
dec
sahf
push
shll
insb
lds
cli
mov
sub
loopne
adc
mov
repnz
aad
stos
or
inc
sub
xchg
mov
sub
add
push
lock
test
sarb
jmp
in
mov
adc
mov
add
xchg
shlb
pushl
lock
add
sbb
mov
cs
cmpsb
add
fwait
dec
dec
add
fstpt
cld
ror
add
add
dec
xor
xor
clc
adc
sbb
and
jne
jne
sti
inc
insb
dec
push
int
xchg
jmp
cmp
push
jle
pop
lods
nop
dec
lahf
mov
push
xchg
or
mov
or
not
adc
and
cmc
loop
add
les
pushf
dec
subl
ret
sub
or
jp
rcl
test
sub
push
fwait
sbb
outsb
loop
movsl
cmpsb
movsb
cltd
mov
adc
mov
loop
jle
ss
ret
testl
cmp
pop
xchg
decb
and
or
fcoms
je
fwait
mov
sbb
andb
mov
cmp
lret
and
sub
mov
xchg
xor
jno
int
iret
loopne
jmp
xor
and
lret
inc
jno
out
aaa
call
jle
inc
popa
mov
or
std
push
rclb
test
arpl
adc
flds
imul
outsl
clc
enter
repz
movb
imul
ror
outsl
xor
loope
fstps
sbbb
out
inc
add
sbb
jo
cld
push
mov
std
cs
clc
xchg
dec
jmp
cli
sub
inc
mov
pop
and
in
iret
mov
or
sub
cmpl
push
cmp
push
lahf
cli
mov
xlat
add
mov
ja
inc
inc
add
mov
ja
mov
cmp
jb
xor
dec
cmp
xchg
mov
or
jecxz
fs
cmp
out
sahf
add
lcall
insb
sub
sbb
or
pop
sahf
cmc
pop
aas
cmpsb
and
or
or
insb
ss
push
je
fildl
lods
mov
push
sbb
push
jns
and
mov
xchg
sub
sbb
mov
jbe
adc
cmpb
je
cld
cmp
out
push
mov
icebp
cmp
push
jae
jecxz
ds
cmpxchg
mov
or
adc
movb
mov
in
lahf
cwtl
inc
outsl
cltd
mov
or
in
ljmp
inc
roll
cmp
xor
hlt
mov
sbbb
les
stos
sbb
sbb
rolb
std
pop
loopne
sbb
sbb
imul
clc
push
pop
mov
xchg
shr
sbb
roll
xor
cs
xchg
jbe
int
lahf
test
or
cmp
sahf
cwtl
xchg
aam
mov
mov
jnp
xor
sbb
push
push
or
push
adc
sbbl
cs
lock
adc
add
adc
orb
pop
rorl
movsb
pop
orl
das
cmp
xchg
jmp
xchg
cmp
insb
repz
daa
sub
insb
movl
mov
sub
adc
shl
and
dec
or
dec
mulb
adc
dec
pop
sarb
push
sti
mov
mov
es
in
js
or
aad
repnz
mov
out
aad
lock
dec
sbb
js
fsubrl
loop
bound
mov
pop
xchg
xchg
adc
mov
fdiv
pop
lock
test
imul
mov
stos
imul
push
xchg
pop
cld
sub
cmp
pop
add
jmp
mov
iret
sub
pop
or
jnp
das
hlt
or
push
sti
and
cld
dec
push
inc
into
push
nop
adc
sarb
dec
sbb
lret
mov
out
ss
sbbl
popa
mov
and
dec
sub
lods
xor
push
shll
push
mov
outsl
dec
and
lock
xor
ljmp
fidivs
aad
push
subl
movsl
popa
cmp
mov
add
add
mov
test
and
aas
loopne
in
xor
lods
push
sub
lcall
pop
or
or
add
xchg
inc
push
mov
dec
pop
popa
adc
cmp
lret
repnz
or
mov
cwtl
xchg
sbb
in
cmpsl
adc
std
push
sbbb
adc
sbb
adc
repz
cmp
js
dec
arpl
notb
and
test
stos
mov
sbb
or
inc
add
xor
in
push
into
ret
loopne
cltd
mov
inc
xor
cmp
mov
shlb
inc
repz
lea
adc
int
inc
dec
decb
movsb
mov
inc
and
mov
adc
inc
popl
xor
mov
imul
mov
dec
int3
mov
jbe
lds
pop
push
lret
cli
mov
sub
and
movsl
mov
and
dec
cs
sub
pop
clc
mov
pusha
shlb
or
hlt
ljmp
or
push
imul
jnp
add
dec
test
js
cmp
and
outsl
add
lea
idivb
xor
sub
jl
dec
nop
dec
popf
sub
dec
push
xor
mov
jle
add
pop
mov
cmp
xchg
rolb
pushf
ds
lea
insw
inc
aas
mov
push
push
add
xchg
cmp
xor
cmc
loop
xor
cld
sbb
and
leave
adc
test
es
stc
cmp
call
xor
jbe
xchg
mov
mov
add
lods
adc
dec
movaps
outsb
sub
inc
negb
push
add
dec
cmpxchg
pop
sub
js
inc
inc
inc
or
lock
adc
movsl
sub
mov
add
fucomi
jl
add
sahf
inc
inc
inc
jle
or
sub
mov
jae
test
mov
cmp
inc
jmp
aam
test
decl
mov
push
add
fwait
push
jp
mov
add
loope
call
fst
fidivl
push
jnp
aaa
push
and
jecxz
lret
sbb
icebp
das
fdivl
mov
xchg
jle
flds
jg
or
mov
jno
or
sbb
std
sahf
and
fiadds
movsb
ret
pop
test
cwtl
or
and
shlb
sbb
push
jp
subl
jb
pushf
push
sub
cmpsb
pop
fsts
xchg
hlt
push
cmp
ficompl
push
scas
sub
adc
pop
xchg
jae
inc
mov
jle
sbb
xor
cld
test
icebp
divb
mov
mov
or
rcpps
add
push
jae
scas
push
xchg
bound
push
jg
or
jo
je
cmp
inc
add
inc
push
add
fiadds
mov
test
add
dec
pop
inc
jmp
test
mov
adc
and
xchg
and
lock
nop
jle
push
mov
enter
cmp
and
rcll
stos
in
and
mov
or
int3
push
loope
sbb
push
clc
lods
adc
adc
push
scas
rolb
inc
sub
lea
push
sbb
and
mov
fistpl
mov
roll
lds
fbld
xor
clc
fdivr
mov
cld
cmp
mov
pop
test
ret
sbb
mov
mov
push
mov
mov
es
jmp
sbb
mov
sbb
mov
dec
sti
rorb
mov
fisubs
jno
or
iret
jae
jmp
rol
jp
cmpl
push
ja
lock
or
and
mov
dec
sbb
int
fcompl
xchg
mov
mov
ret
inc
aad
add
fildll
mov
lret
add
pop
out
inc
push
icebp
xor
sub
out
push
xlat
ss
adc
sub
getsec
rcrb
xor
adc
adc
or
mov
push
loope
mov
dec
sub
cmp
xor
push
sbb
sbb
lock
dec
pcmpeqb
jl
and
xchg
pop
push
sar
fistps
out
insb
andl
aaa
std
lret
xchg
mov
jo
nop
iret
aaa
or
pop
push
fcomps
aaa
std
test
insb
sbb
fisubl
out
cmp
bound
mov
insl
stos
clc
dec
fisubs
inc
ror
xor
sub
mov
add
loope
pop
and
not
push
rorb
xchg
cmp
sub
jo
xchg
mov
sbb
aas
xchg
dec
das
or
xchg
dec
inc
ret
jmp
fisubs
or
lcall
or
mov
call
sbb
add
inc
mov
add
xor
xchg
pusha
addr16
add
dec
lock
or
imul
inc
adcb
add
in
sub
sti
sbb
cmp
jne
inc
mulb
jb
ret
rorb
rcr
dec
imul
xchg
xchg
cmp
xchg
jne
mov
cmc
push
in
fiadds
imulb
lret
mov
sbb
aam
mov
mov
dec
sti
mov
sub
jp
jmp
lret
js
mov
movsb
cs
cmp
mov
stos
popa
inc
adc
shrd
and
mov
jmp
mov
xchg
lock
nop
mov
mov
aas
sbb
dec
adc
gs
mov
cmpsb
ret
ljmp
lret
ljmp
out
xchg
dec
lods
mov
mov
add
pop
xor
mov
push
sarl
or
adc
sarb
or
sub
popf
adc
mov
ret
jg
push
popf
fwait
and
push
test
test
or
add
xor
sbb
cld
pop
mov
pop
scas
mov
rcrb
das
mov
dec
mov
clc
les
pop
dec
rorb
xor
adc
ret
in
jge
fisttps
icebp
jmp
adc
push
or
push
rcl
ss
jb
popf
lret
or
in
scas
add
or
outsl
sbb
outsb
imul
cltd
movsl
dec
les
sbb
fistl
and
testb
mov
push
ficoms
cs
add
test
cltd
push
jbe
push
mull
mov
jb
enter
inc
adc
and
add
mov
cli
loop
jecxz
test
sbb
pop
cmp
add
push
inc
scas
add
and
sbb
dec
jne
sbb
push
int
ss
dec
pop
jmp
mov
cld
and
fistl
pop
sub
sbb
mov
pop
mov
cwtl
lea
mov
push
ret
pop
xchg
shll
std
and
leave
cld
leave
dec
mov
js
xchg
adc
loopne
pop
sbb
push
in
add
pandn
lods
cmp
xlat
pop
add
sbb
cld
test
out
push
in
adc
test
xchg
pop
dec
pop
aas
xchg
jne
sbb
mov
jge
jecxz
adcl
ljmp
pop
push
jno
rolb
push
std
shrb
xor
push
scas
fcoms
or
fiadds
mov
mov
jp
rcl
pop
push
xor
sub
mov
sti
cmpb
jg
xor
mov
mov
out
push
repnz
mov
clc
dec
inc
std
ds
sbb
aas
out
sti
movsb
sbbl
pop
mov
inc
cmpsb
mov
sbb
push
movsb
adc
mov
out
vunpcklps
and
inc
cmpsb
xor
pusha
adc
inc
push
mov
sahf
mov
push
dec
add
or
push
in
orb
mov
pop
mov
pop
mov
bound
rcr
sarb
mov
xchg
lea
jmp
aad
xchg
sub
or
inc
shrl
jp
hlt
int
or
pusha
cmp
jns
push
das
les
jo
mov
jnp
and
mov
ss
add
add
je
xchg
stos
add
cmpl
or
jns
leave
test
and
fnstsw
jp
or
call
xchg
sahf
lock
xor
repnz
and
add
ret
stos
clc
cmc
das
lods
mov
pop
adc
cmpsb
sarb
mov
clc
clc
sbb
add
lea
ss
or
js
inc
sub
push
aaa
fs
mov
cmp
leave
jnp
lods
inc
add
pop
jge
mov
and
in
push
les
cmp
push
in
inc
imul
jle
js
add
xchg
inc
aad
inc
incb
test
sti
sahf
sbb
in
and
jg
or
and
lock
cmpsl
mov
push
pop
sbb
xchg
add
jp
dec
push
cmp
cld
cmpsb
push
push
adc
push
add
loope
je
test
sub
xor
sbb
ja
xchg
push
xchg
push
adc
leave
xchg
xor
dec
popf
sahf
dec
ss
sti
inc
inc
add
rorb
push
inc
cmp
nop
and
dec
pop
inc
call
pop
push
lea
lahf
push
rcpps
xchg
mov
test
cld
inc
aas
sub
jecxz
jae
inc
dec
and
or
jecxz
mov
mov
pop
ja
cwtl
repnz
mov
leave
and
push
sub
push
pop
push
jge,pn
cmpsb
dec
jmp
cwtl
pop
cmp
mov
push
loop
outsb
mov
inc
aas
sub
cmp
hlt
mov
loope
ret
cmp
lret
or
pusha
imul
xor
test
mov
sbb
test
je
add
push
scas
push
shlb
movsl
jo
test
push
xor
mov
adc
ret
cmp
adc
xchg
test
pop
in
loop
xor
cmp
test
daa
movb
or
in
arpl
jnp
arpl
mov
clc
jo
dec
int3
aad
and
mov
subb
cltd
dec
shlb
int3
mov
orl
add
fwait
mov
dec
fcomps
mov
jg
daa
bound
xchg
pop
mov
jmp
repnz
mov
sbbb
popa
cld
lahf
add
mov
inc
add
mov
in
dec
dec
add
sti
xor
add
add
mov
push
dec
incl
and
mov
sbb
sti
in
ljmp
adc
add
mov
pop
adc
sub
sbb
inc
dec
cmp
adc
jle
mov
js
addl
lahf
adc
pop
stc
sbb
inc
pop
sub
sbb
bound
lods
jmp
sub
mov
lea
pop
shlb
or
fistps
cltd
rcll
mov
push
push
mov
mov
shrb
inc
cmc
jecxz
adc
xchg
pop
xor
sbb
sub
sbb
lret
xor
sbbl
dec
pop
test
aam
sbb
fs
mov
rolb
fwait
ljmp
add
xchg
add
mov
dec
or
dec
dec
mov
xchg
call
xor
cmp
inc
xor
and
and
sub
adcb
mov
decb
cmp
push
and
jge
testb
pop
sti
inc
jmp
stos
dec
mov
fsubr
into
mov
pop
pop
xchg
xor
adc
aam
out
jb
mov
mov
std
mov
stos
push
movsb
loopne
and
aaa
insl
inc
pop
xor
js
or
or
stos
int3
lea
andb
add
scas
adc
sub
jle
pop
jmp
inc
mov
inc
xchg
lahf
mov
fcompl
mov
or
ret
adc
mov
cmpb
mov
arpl
jecxz
lds
push
es
mov
cmp
fs
or
cmp
pop
mov
jecxz
loope
mov
js
cmp
std
mov
add
jo
jo
popf
scas
push
bound
sbb
pop
sbb
cmpsl
sbb
shlb
out
nop
mov
sub
pop
enter
lret
movsl
pop
xchg
daa
nop
hlt
inc
add
mov
aam
xchg
adc
lds
mov
pop
add
xchg
jno
inc
mov
inc
xchg
in
shlb
or
push
cmp
dec
pop
or
sbb
xchg
xor
mov
jno
xchg
push
out
rcll
pop
out
jmp
call
xchg
into
inc
pop
cmpsl
lds
sub
push
ficompl
and
lods
je
fsub
sbb
lods
add
loop
mov
pusha
outsl
mov
dec
adcl
test
or
jmp
dec
je
mov
ds
sti
pop
icebp
inc
cli
inc
add
cmp
adc
fsts
sub
in
xor
xchg
int
pop
push
dec
insb
jno
ret
lods
ljmp
inc
fdivl
push
popa
xchg
loopne
test
pop
push
mov
jmp
loope
rcrl
shrl
or
adc
lea
pushf
pop
adc
mov
lock
pusha
lfs
mov
outsb
insl
push
xchg
mov
or
mov
inc
mov
mov
pop
addr16
sub
jle
mov
imul
lahf
ret
outsb
adc
mov
sub
push
outsl
adc
out
xchg
and
or
jns
pushl
jo
shll
sbb
inc
xor
ficoml
lahf
lahf
out
outsl
add
add
das
sbb
pushf
mov
adc
pop
addr16
inc
xor
cmc
daa
lock
mov
push
mov
sbb
add
inc
cmp
push
cmpsb
sbb
mov
fs
pop
adc
push
fmull
dec
scas
sbb
pop
dec
jge
xorl
es
jno
call
or
adc
or
aam
sti
fmul
mov
mov
fists
add
xor
add
test
inc
push
xchg
dec
inc
push
mov
mov
pop
mov
dec
outsb
xor
outsl
sar
imul
sub
in
aam
loope
rcr
and
pop
ret
aad
or
or
pop
mov
je
test
mov
sarl
sub
add
jg
jno
test
add
adc
jg
mov
std
push
sbb
aad
or
mov
or
sbb
fmuls
cmp
test
pusha
ja
jmp
xor
arpl
aaa
repz
fs
stos
mov
add
mov
add
sahf
popf
fimuls
sbb
inc
dec
int3
adc
std
adc
pop
push
xchg
jg
loopne
ficoml
lods
mov
push
pop
loopne
add
pop
lds
testb
sub
dec
push
adc
in
fcoms
cwtl
insl
pop
les
cld
push
outsl
xchg
inc
push
add
pop
test
add
push
mov
cmp
xchg
test
mov
popf
popl
inc
sub
scas
pop
add
scas
call
xor
int3
push
jl
fdivrl
cmp
pusha
xor
int3
in
adc
dec
xor
mov
sbb
lret
xor
push
js
dec
pop
ret
les
pop
cmp
xchg
cmp
fmull
mov
xchg
push
pop
addl
ljmp
stc
daa
test
pop
inc
into
push
cmp
xchg
jbe
enter
cmp
aam
sbb
fldl
mov
inc
jne
xchg
dec
arpl
mov
mov
test
dec
add
pop
imul
repnz
and
cmp
jnp
adc
pop
andb
mov
inc
aas
inc
mov
push
xor
lahf
xor
add
inc
mov
xor
in
in
nop
inc
dec
clc
pushf
sbb
dec
mov
loop
or
fistps
bound
rorb
shl
push
push
or
dec
adc
loopne
fnstsw
push
bound
pop
lods
mov
pop
orl
call
lcall
mov
ss
mov
mov
sub
cmp
jbe
dec
or
movsl
fcom
or
aam
jge
jl
fadds
xchg
lcall
scas
add
mov
subb
push
rolb
rorb
xchg
xchg
cmp
jecxz
shll
movsl
test
sti
cmp
mov
xchg
data16
push
inc
aam
fnsave
mov
and
jbe
xor
repnz
clc
jg
shll
test
fdivl
jle
push
dec
pop
les
sbb
ja
jl
int3
stos
fcmove
loop
mov
roll
stc
xor
je
fldt
mov
and
inc
into
pushf
sbb
dec
add
xchg
fdivrl
out
and
xchg
mov
nop
out
ret
push
mov
sub
xor
cmp
fwait
pop
jecxz
sub
jno
in
decl
or
scas
fwait
lods
add
test
pop
int
fldcw
test
sahf
jno
int3
jne
dec
adc
sub
push
push
inc
out
push
mov
or
mov
jl
mov
jae
sub
lds
pop
mov
stos
je
rolb
ljmp
cmp
loope
jle
jle
outsb
xor
mov
jecxz
mov
in
test
push
or
dec
push
dec
roll
pop
xor
push
lock
hlt
je
enter
inc
sbb
imul
fadds
pop
add
or
push
sbb
dec
popf
lea
andb
add
gs
rolb
mov
lcall
mov
movsb
xorb
push
mov
sub
scas
mov
mov
xor
or
int3
mov
dec
js
xchg
push
nop
or
jmp
out
movsl
lea
push
aaa
and
add
dec
jg
daa
mov
add
push
loopne
cwtl
rcrl
push
cmp
push
pushf
fbstp
fidivrl
lcall
pop
lods
dec
outsl
stc
mov
jp
sub
test
ret
dec
mov
bound
clc
cmpsb
je
dec
cli
and
cmp
lock
mov
push
dec
les
inc
enter
inc
insb
cld
push
sahf
js
mov
daa
shlb
inc
test
or
cmp
or
ret
inc
inc
adc
push
push
test
xchg
dec
mov
and
inc
nop
jno
lods
fdivrs
test
mov
cmp
adc
mov
fcmovbe
int3
imul
xlat
scas
pop
imul
xchg
mov
dec
xor
ffree
push
aaa
lea
clc
push
sub
jmp
jecxz
cmpsb
lods
adc
adc
add
inc
out
inc
call
ljmp
test
xchg
sub
fmuls
je
mov
sbb
sub
mov
sbb
scas
push
lret
imul
lret
pushf
mov
sahf
mov
nop
mov
mov
in
mov
in
ficoms
mov
dec
cld
cltd
pop
jns
lahf
mov
add
dec
cmp
mov
filds
add
pusha
inc
out
cmpsb
or
mov
add
iret
hlt
pop
cmp
cmp
mov
sbb
mov
xor
push
or
push
or
dec
int
mov
xor
loopne
mov
and
lock
push
adc
pop
and
or
inc
xchg
dec
and
cmpsb
xlat
inc
lods
loop
loopne
je
cmp
jns
rorb
and
xchg
test
jp
roll
jp
adc
loop
mov
pop
repz
jo
adc
stos
mov
inc
sbb
pop
lret
fcoms
adcl
insl
mov
bound
fadds
push
jnp
push
xor
lods
push
insb
out
call
inc
lret
sbb
js
push
cmp
imul
xchg
mul
inc
cmp
xor
pop
push
fmull
mov
scas
push
fdivr
push
stc
dec
push
shl
push
cmp
push
or
cli
sub
mov
cltd
mov
repz
cld
sub
xchg
mov
cwtl
pop
loope
ss
and
jno
mov
ss
into
adc
insl
jg
mov
xor
push
mov
sarb
popl
aad
cs
leave
pop
fstl
mov
xchg
pop
sahf
mov
or
jmp
jns
dec
jge
push
jne
sbb
add
sub
pop
jmp
pop
rclb
ret
mov
mov
subb
sbb
jo
inc
adc
jmp
push
dec
and
sub
or
cmpsl
stos
adc
jb
xchg
movsl
adc
dec
adc
inc
ret
cmp
test
aad
or
push
aad
or
mov
cmc
xchg
movsb
and
je
inc
mov
sbb
jmp
pop
pushf
push
insl
stos
cmp
sub
lret
mov
stos
jmp
ret
mov
out
rcll
push
pop
dec
aad
std
stc
or
jno
inc
and
testl
add
sub
xor
sub
test
ljmp
aad
mov
out
mov
mov
bound
int3
xor
stos
cli
clc
hlt
push
je
mov
add
lahf
fs
mov
lods
int
jg
loop
insb
push
push
aas
dec
stos
je
insb
inc
xchg
xor
in
test
hlt
or
or
and
inc
or
es
dec
sub
xchg
pop
in
add
das
sbb
add
inc
shlb
aas
dec
mov
aad
cmp
jge
dec
jbe
xor
call
test
push
es
adc
inc
mov
lret
movl
inc
add
add
cmp
add
clc
mov
mov
add
femms
lods
in
ret
or
shl
mov
cmp
das
cmpsl
and
jo
testb
push
xchg
or
dec
test
rorl
dec
imul
mov
leave
popf
add
in
arpl
les
push
mov
or
lcall
test
orps
or
repnz
cli
mov
sub
cmp
dec
mov
sbb
jno
lea
push
jne
sbb
sub
cmp
adc
out
jp
add
test
sti
lahf
sub
int3
jne
sahf
sahf
add
mov
push
lock
clc
mov
xorl
cmp
lcall
arpl
pop
or
pop
cld
adc
aaa
sbb
mov
add
pop
movsl
pop
out
rolb
shlb
inc
fwait
es
add
cs
or
loope
in
dec
cmpsl
pop
not
cmp
cs
adc
lock
cmpsb
hlt
mov
mov
nop
mov
adc
pop
and
mov
iret
fcmovb
push
xchg
movsb
scas
add
mov
pop
std
xchg
or
roll
add
push
ret
mov
xchg
cmp
inc
xor
in
pop
test
add
mov
pop
pusha
test
and
loopne
lock
mov
orb
mov
jo
mov
daa
mov
or
push
or
or
hlt
lock
lahf
mov
in
sub
cmp
xor
or
clc
push
in
xchg
popa
add
bound
arpl
jne
imul
ljmp
pop
push
adc
dec
mov
movsl
clc
xchg
adc
mov
jl
mov
iret
xchg
push
jne
or
nop
dec
mov
mov
xor
inc
fdivrs
mov
inc
out
int3
mov
sahf
xor
add
jno
dec
in
lret
add
aam
inc
testw
or
add
loopne
mov
jno
cld
mov
mov
inc
repnz
push
cmp
or
mov
pop
push
stos
lds
xchg
outsl
xchg
cmpsb
mov
pop
popa
sti
mov
pop
test
ffreep
and
stc
push
pop
cmovne
xor
lea
stos
test
mov
cmp
cmp
das
add
sub
mov
or
jmp
mov
jbe
imul
scas
fdivs
in
lods
loopne
inc
lcall
aad
push
or
push
pop
loop
mov
ret
inc
in
cmpsb
sbb
testb
push
jge
push
xorb
adc
xor
out
or
inc
mov
mov
mov
inc
sahf
mov
sbb
cmp
addr16
test
jnp
mov
idivl
popa
mov
push
dec
mov
push
ljmp
and
pop
insb
add
adc
fimuls
roll
mov
aad
mov
fmull
loop
nop
mov
inc
dec
pusha
icebp
shrl
out
into
pop
rorl
mov
jge
cli
sub
int3
lret
mov
test
lret
call
sbb
cmp
or
jl
xchg
push
test
stc
pop
or
push
sbb
xchg
std
inc
loopne
mov
in
sub
inc
adc
pop
ret
fprem
push
or
cld
xchg
xor
aam
mov
jg
addr16
add
adc
adc
adc
xchg
shlb
rcr
or
ret
xchg
outsb
jbe
push
scas
lahf
fldenv
fimull
mov
inc
ja
fdivrs
call
in
out
mov
cld
scas
lcall
in
and
cmp
pop
sbb
lods
push
adc
inc
pusha
fs
or
js
pop
fimull
pop
shlb
mov
mov
insl
sub
mov
or
repnz
jecxz
inc
push
arpl
lock
cs
hlt
or
push
mov
adc
jg
adc
cmp
xchg
pop
sbb
icebp
test
loop
test
fstps
xchg
cmp
sahf
rcrl
dec
lods
or
cmp
sub
xor
cmpsl
scas
test
xchg
cs
sbb
xorb
jnp
les
ds
dec
cmp
jge
and
dec
jae
ja
div
pop
dec
cmpsl
mov
mov
sub
mov
mov
nop
ja
cmp
push
pop
cwtl
add
lahf
aas
push
loop
mov
testl
push
enter
or
sbbb
lea
pushf
xchg
fimuls
or
addr16
jne
adc
cld
loopne
xor
xor
sub
pop
jae
dec
bound
mov
pop
xor
outsb
jp
les
add
mov
mov
push
mov
xchg
data16
adc
mov
inc
shll
push
enter
push
and
add
jmp
dec
ret
lahf
cmp
jo
sub
xorl
es
inc
dec
adc
xchg
lret
insb
push
mov
fcmovb
rolb
or
sub
in
pop
hlt
movb
jne
popa
mov
cmp
adc
pop
add
inc
or
movsl
repnz
dec
xchg
push
cmp
dec
jne
ret
push
imul
or
sub
dec
pop
jb
fisubrl
outsb
es
test
les
sbb
push
xor
jge
inc
or
ljmp
fbld
add
jno
inc
xchg
jmp
aad
aas
leave
inc
insb
mov
mov
inc
push
cmovne
inc
mov
jl
xchg
fimuls
push
inc
push
inc
push
bound
rclb
xchg
rorb
ficompl
or
inc
dec
xor
xor
adc
lds
push
test
push
outsb
fs
dec
nop
jbe
jmp
dec
jae
or
push
out
les
xchg
mov
popf
adc
mov
lahf
mov
mov
sbb
xor
and
xchg
sahf
es
out
popa
lcall
sbb
push
xor
rcrb
xlat
xor
adc
cmp
xchg
pop
jmp
adc
mov
lea
sub
xor
sbbl
jne
jns,pn
rol
sub
and
xor
adc
cs
ret
push
and
cmpsb
andl
mov
imul
push
dec
or
mov
sub
leave
aam
lods
mov
rcrl
pop
cmp
fcoml
xor
lods
pop
mov
push
or
lahf
test
stos
inc
mov
xor
inc
mov
mov
sbb
add
jns
fcoml
jg
and
xchg
adcb
ror
pop
and
mov
cmpsb
inc
add
test
movl
xchg
xchg
ja
aam
adc
pop
dec
aaa
pop
sbbb
mov
out
mov
mov
stos
loopne
and
jl
xchg
xchg
mov
test
shrb
xor
push
push
push
cwtl
mov
nop
add
dec
in
jne
rorb
lock
decl
mov
jne
pop
cmpsl
lahf
call
lret
cld
mov
adc
or
lret
imul
popf
lock
add
test
push
dec
loop
dec
dec
fnstcw
inc
pop
cmp
jg
stos
or
dec
pop
dec
mov
xchg
in
mov
push
movsl
cli
gs
call
movsl
imul
loopne
andb
mov
stc
mov
xlat
push
jmp
es
ror
test
jecxz
mov
les
mov
ret
xor
mov
test
test
pushf
inc
push
sub
pop
xor
cwtl
add
sub
int3
add
rolb
repnz
int
dec
pop
push
fstpt
inc
lock
xor
ret
xor
push
rorb
and
or
call
pop
or
call
shlb
and
inc
xor
das
hlt
loope
cmp
mov
or
and
fcompl
shll
call
lods
dec
nop
dec
mulb
sub
push
xor
pop
push
sahf
test
sahf
add
mov
pop
or
xor
cmpsb
dec
les
dec
push
mov
and
in
pop
mov
jmp
xlat
inc
repz
mov
out
test
mov
pop
sbb
pop
jecxz
cmp
mov
insb
movsl
jo
aam
push
aas
sbb
jle
arpl
arpl
icebp
inc
clc
xorl
aas
jne
pop
sbb
pop
push
jo
jle
in
cli
push
pop
sarl
add
rcl
push
fstpl
or
loopne
rcrb
mov
sti
add
ret
stos
lods
sbb
sub
push
scas
add
cld
int
sub
pop
call
es
shl
cmpsb
push
or
sbb
mov
push
ss
fidivrl
or
pop
insb
mov
jge
dec
jno
ret
les
aad
inc
jle
xchg
clc
mov
aaa
pop
cmp
fisubrl
stos
cmp
mov
popf
jns
addl
cmc
popa
sub
dec
push
pushf
sbb
jne
cmc
out
lock
xor
jecxz
aaa
mov
sbb
ds
push
jle
mov
or
cltd
add
rorb
lahf
or
les
cmp
adc
outsl
jno
jl
test
fmull
iret
xlat
xor
cld
cltd
cli
inc
xchg
aam
or
sub
cltd
aam
subl
add
cmpsb
mov
push
int
xchg
jle
rclb
sub
cltd
repz
nop
lods
aam
repz
xchg
jg
cs
loopne
in
icebp
xor
sbb
push
jmp
xor
mov
mov
lds
rcr
push
iret
push
cmpl
jae
dec
xchg
sbb
sarb
cmc
cs
aad
call
test
adc
nop
sahf
int
adc
mov
int3
xor
mov
dec
or
jne
dec
xlat
test
mov
scas
and
pop
dec
loope
sbb
enter
inc
cmpsl
icebp
cmp
sbb
sbb
movsb
mov
movsb
inc
mov
add
or
mov
mov
dec
insb
shrb
clc
dec
cmc
enter
fisttpl
aad
pop
clc
inc
sbb
push
lods
test
adcl
cli
cli
iret
das
outsb
jb
ds
fildll
adc
ret
lcall
jle
shlb
xchg
jmp
or
shl
adc
ljmp
aas
fucom
repz
adc
sub
out
xchg
adc
sub
cmpsl
sbb
test
xchg
vmread
test
ss
and
cli
lcall
lock
lcall
xor
mov
mov
adc
mov
jl
adc
xchg
out
fwait
insl
cld
and
lds
loopne
fwait
les
xchg
jge
pop
dec
adc
int
add
fistpll
in
jo
dec
es
cmp
inc
xor
cmp
stos
inc
xchg
and
rolb
popf
test
fisubl
push
xchg
data16
inc
shrl
jae
or
pop
cmp
std
pushl
jo
fimull
fildll
outsb
pop
es
cmp
mov
push
fs
adcb
add
negb
mov
push
stos
push
inc
jecxz
std
xchg
enter
outsl
test
push
lds
les
and
xchg
push
and
mov
xchg
xchg
push
mov
sub
iret
cmpsb
adc
hlt
and
movsl
adc
or
jl
inc
push
repnz
nop
jmp
sub
popa
addr16
adc
popf
mov
fmull
fs
test
movsb
fidivs
pop
cmp
push
pop
pop
jno
pop
sbb
ja
dec
test
push
dec
jae
mov
imul
mov
mov
sti
xchg
dec
and
cs
jecxz
mov
xchg
cmpsl
call
mov
js
mov
mov
xchg
scas
cli
cmpsb
dec
jecxz
out
dec
jmp
ret
adc
jp
mov
sub
faddl
sbb
repnz
icebp
out
push
outsb
sbb
inc
and
inc
ret
fcmovnu
cli
pop
mov
les
pop
adc
lock
rorl
loop
pop
push
imul
insl
ret
addl
gs
pop
cmp
aam
popa
sbb
jge
lock
xchg
popf
out
fwait
mov
pop
jmp
mov
fldenv
ds
adc
sbb
in
sbb
inc
call
jnp
test
aas
or
fisubrl
fistpll
xchg
mov
call
mov
cld
pop
leave
add
mov
xchg
adc
sub
test
ret
mov
sbb
stos
cmp
inc
mov
mov
add
pop
int3
jno
adc
sub
das
adc
pop
pop
fildl
lods
inc
jle
fwait
and
adc
dec
push
movsb
add
jmp
bound
sub
ds
enter
mov
test
xor
jl
add
ss
xchg
push
push
mov
inc
aad
push
or
push
sahf
and
aas
push
hlt
js
and
xor
and
add
xchg
mov
shrb
dec
fs
inc
push
push
or
or
add
test
dec
nop
stos
push
sbb
cmp
clc
push
jne
jne
jmp
jns
fisubrs
hlt
pushw
inc
push
fs
fistl
or
inc
outsb
pushf
out
ficoml
clc
movsb
push
nop
dec
imul
rcrb
loopne
mov
cltd
dec
inc
sub
aam
je
lcall
cli
dec
fisubl
push
outsl
xor
jne
xor
cmpl
pop
mov
push
push
ds
push
cmp
push
call
lea
ret
push
adcb
shrb
jnp
clc
sbb
and
fdivrs
add
inc
adc
aas
pop
dec
aaa
out
mov
ljmp
push
fwait
stos
dec
test
rcl
and
mov
fsubs
push
sub
pop
or
inc
adc
mov
out
sub
xor
add
cli
cmpsl
aam
movsl
ja
ds
arpl
xchg
push
xchg
fidivl
push
sbb
pop
fsubrs
lahf
fdivs
push
sub
ret
scas
leave
add
xchg
aad
aaa
jne
call
test
rclb
iret
arpl
or
push
js
loop
aad
pmuludq
xor
or
arpl
aam
xor
flds
pop
sbb
and
test
addl
nop
mov
dec
lods
sti
sti
mov
pop
sbb
cmp
gs
jno
dec
iret
es
ja
xor
jl
test
and
test
fiaddl
sub
mov
movsl
out
sbb
cmpsb
push
or
gs
inc
jecxz
pop
inc
jnp
movsl
test
testl
push
cmp
xor
pushf
dec
arpl
out
inc
and
call
inc
push
shlb
fwait
adc
sub
idivl
into
cmpsl
pop
jo
in
fadds
mov
jge
xchg
aaa
imul
sbb
loopne
lcall
xor
push
cmpsl
xchg
or
pop
in
popf
cs
xchg
inc
test
rcl
iret
scas
push
out
les
sysret
add
xchg
push
stos
mov
lahf
sbb
jne
sbb
adc
add
cmp
mov
xor
jmp
dec
dec
jecxz
jno
test
jle
lcall
bound
push
andb
adc
unpcklps
mov
lods
sbb
sbb
and
add
xchg
mov
mov
mov
mov
lock
inc
and
dec
push
dec
das
xor
add
sbb
add
inc
add
ds
pushf
xor
test
aam
es
mov
nop
int3
mov
test
adc
adcl
nop
orl
dec
je
sbb
push
fiadds
cwtl
jmp
inc
lock
repnz
cmp
mov
cwtl
xor
cli
sbbb
dec
jbe
repnz
sbb
dec
lcall
cltd
in
dec
repz
insb
cmp
lahf
aaa
out
mov
xchg
lock
sub
rcrb
insb
and
imul
jecxz
cmp
test
xor
pop
cmc
xchg
lods
inc
sti
mov
adc
mov
enter
pop
fstl
lock
cmpsb
loope
sahf
xchg
jno
dec
or
xor
mov
aas
cmp
xchg
jle
je
lods
jo
in
jecxz
push
int3
les
or
sar
add
mov
push
push
mov
imul
sbb
sub
pop
call
dec
insl
jae
pushf
mov
out
push
aam
jb
mov
movq
add
ret
xor
lret
lcall
and
push
lock
fs
xchg
sbb
sbb
leave
es
lcall
dec
mov
scas
push
insl
ss
push
jne
xor
loop
dec
push
insl
cmp
in
pop
and
aaa
mov
lock
xor
jp
dec
push
jg
scas
xchg
push
frndint
push
aam
fildll
pop
hlt
daa
jl
shll
xor
push
lock
aas
inc
pusha
mov
mov
sahf
xor
mov
add
mov
cmp
sub
and
adc
aas
inc
imul
mov
mov
clc
sub
inc
into
insb
cltd
xor
mov
imul
mov
divb
or
mov
decb
cmp
mov
lret
lcall
and
mov
aam
sbb
push
subb
hlt
xlat
and
in
or
or
xor
add
mov
mov
lock
mov
js
push
cwtl
mov
repz
lock
lock
pop
fs
das
push
cltd
stos
push
jecxz
jecxz
mov
adc
or
push
push
xor
adc
add
sbb
xchg
cltd
add
ret
es
inc
push
cmp
jmp
mov
mull
adc
pusha
sub
jno
add
pop
vmwrite
cwtl
outsb
icebp
stos
fwait
mov
dec
stc
push
push
mov
loop
testb
mov
xchg
faddl
and
dec
jo
ret
xchg
movsb
fimull
testb
data16
imul
adc
add
popa
loope
aas
leave
xchg
jbe
loop
mov
cmpps
xchg
and
fstpl
insl
add
dec
xchg
popf
lods
es
push
fwait
dec
adc
add
loope
mov
std
orl
clc
int3
shll
sub
lods
mov
add
or
lods
add
cmp
das
mov
dec
or
lret
lcall
mov
ficomps
dec
push
ficoms
adc
movsl
aaa
xchg
or
jge
sbb
lea
les
lahf
addr16
add
dec
xor
jbe
xor
cwtl
enter
and
pop
push
pushf
xchg
mov
push
jno
in
fsubs
roll
xlat
pop
pop
sarl
pusha
test
push
jge
andl
cs
or
xchg
xor
inc
loop
nop
mov
xor
inc
add
adc
and
xchg
or
xchg
fildl
enter
add
inc
fcomip
loopne
rcrb
stos
adcb
mov
xor
lods
ds
cmc
ja
pushf
mov
jbe,pt
div
ret
ss
and
pop
jnp
and
mov
push
fadds
lret
cmp
pop
stos
clc
dec
mov
sbb
jno
push
xchg
push
adc
xchg
add
or
popf
mov
inc
push
ffree
xchg
in
pop
andnps
cld
sbb
dec
rcrb
jne
sbb
add
push
jmp
adcb
shrb
fisubl
fs
dec
cltd
shl
sahf
pop
pushf
and
outsl
lock
fiaddl
cltd
loop
adc
cmp
ja
adc
rorl
lret
or
sbbb
call
add
sarb
scas
lods
into
adc
aad
xor
cmc
sbb
jmp
jb
mov
movsb
add
stos
aas
movsb
mov
dec
and
aaa
lods
cmp
sub
mov
xlat
popf
arpl
mov
daa
mov
jge
enter
sbb
and
fsubr
dec
je
jae
xchg
pop
mov
or
rorl
mov
cmp
mov
insb
pop
sti
xor
cwtl
das
jl
or
mov
addr16
pop
cmp
daa
jne
jae
mov
dec
xor
push
hlt
mov
adc
lahf
bound
jae
sbb
inc
add
mov
or
push
mov
fstl
bound
and
incb
int
pop
das
dec
inc
add
cmpsb
filds
mov
fisubl
cmc
pushf
rolb
sbb
cmp
xor
sbb
mov
pop
xchg
push
sub
xor
jg
jae
nop
or
and
repnz
lea
insb
and
sbb
mov
pop
std
test
adc
ret
daa
dec
psllw
cli
sbb
lods
mov
loopne
adc
insl
stos
push
das
test
call
mov
xor
stos
mov
inc
lcall
sbb
cld
pusha
in
xchg
int
test
sbb
sti
xchg
add
mov
ljmp
int3
sub
cmp
mov
dec
rolb
sbb
js
sbb
mov
sub
rcrl
mov
sub
push
adc
aas
pop
adc
outsl
test
inc
adcl
xchg
leave
aas
loop
add
cmc
fdivrp
pop
sbb
imul
xchg
dec
and
sbb
int
sarb
fs
jecxz
loopne
xorl
aad
add
cmp
sbb
mov
mov
fldl2e
mov
mov
xor
test
mov
rcl
pop
mov
out
push
insl
cmp
inc
pushf
cmp
and
cmp
in
cmpsl
mov
sbb
xor
push
cmp
inc
in
jp
sub
or
bound
outsb
sbb
mov
scas
insb
not
sbb
pusha
sub
jl
nopl
fidivs
shrl
or
stos
mov
xor
adc
mov
sarb
aam
xor
repnz
clc
mov
or
pop
add
std
imul
dec
and
dec
out
xor
sub
out
out
mov
jmp
sub
or
adc
cmpsl
mov
mov
pop
in
mov
dec
out
mov
out
mov
inc
lcall
ljmp
sbb
mov
pop
xchg
sbb
stos
mov
dec
push
sub
mov
stc
mov
es
cmp
outsl
int3
inc
mov
pop
push
cmp
cmpsb
daa
xchg
cmp
dec
jg
jmp
rcr
rol
je
decl
adc
mov
mov
cmp
mov
cmp
inc
sbbl
popa
push
add
xchg
addr16
and
mov
xor
inc
sbb
xor
enter
clc
movsb
cwtl
and
jne
and
imul
mov
dec
push
and
test
push
lahf
jno
inc
lock
shlb
cmp
aad
insl
pusha
cmovge
inc
insl
xlat
push
dec
stos
push
pop
pusha
xchg
mov
dec
sub
pop
jmp
movsl
sbb
xchg
or
insl
mov
push
inc
jmp
fmuls
pop
xchg
and
sub
bound
cltd
lods
push
add
adc
jle
movsb
mov
dec
or
mov
cmpsl
hlt
popf
push
icebp
sbb
mov
add
ret
ss
and
adc
jmp
mov
adc
fisubs
mov
xchg
imul
ja
dec
add
inc
in
sti
jmp
addb
lahf
imul
lcall
cwtl
or
mov
inc
mov
lods
adc
push
xor
jge
lds
jg
or
fsubp
loop
pop
mov
push
lods
mov
dec
sahf
inc
rclb
xchg
add
cmpsb
inc
mov
inc
xchg
out
jg
cmp
pop
jecxz
or
push
dec
cli
pop
shrb
sub
mov
jno
dec
adc
in
cmp
mov
fidivl
xor
jns
dec
iret
enter
clc
gs
xchg
inc
movsb
fs
movl
cmp
loope
add
stos
pop
lds
es
push
pop
jne
insb
bound
dec
pusha
mov
xor
xor
std
xchg
rclb
push
add
shll
out
aad
push
adc
cmp
in
push
lcall
mov
ret
and
xor
dec
ficoml
subl
or
cmp
add
mov
xchg
push
pop
lods
push
mov
inc
pop
gs
es
jp
pop
xchg
mov
sbb
in
inc
push
push
jg
jae
ret
mov
outsb
stc
jl
lret
aad
cld
xor
inc
mov
fistpl
sar
loop
cmp
push
mov
mov
enter
cmp
pop
std
adc
test
pop
repnz
hlt
inc
add
les
arpl
push
jo
inc
or
mov
sar
pop
in
out
outsb
add
scas
sbb
adc
test
std
movsb
and
nop
repnz
xor
sub
movsl
scas
add
mov
push
inc
or
int3
stos
xlat
cmp
movsl
repz
pop
mov
mov
dec
orb
mov
add
add
or
jecxz
shlb
addl
or
icebp
xor
sub
push
and
xchg
into
movsb
fdivrs
mov
mov
pop
adc
mov
ret
xchg
inc
adcl
imul
je
mov
je
dec
es
lahf
adc
lods
inc
add
enter
aad
jp
rclb
push
sbb
push
jmp
mov
pop
cli
adc
lret
fistps
cmc
sbb
inc
adc
movsb
into
mov
lock
ret
imul
flds
fsubrp
repnz
in
fs
loope
cli
add
loope
test
adc
loop
sbb
js
mov
test
dec
adc
inc
in
jle
mov
xchg
fs
xchg
sahf
push
xor
ss
es
jne
ds
cmpsb
inc
out
in
sbb
jp
mov
xor
jnp
fisubl
inc
aam
int
fcompl
jp
jp
fwait
add
pop
cwtl
mov
push
cmp
ljmp
pusha
mov
arpl
sbb
cmpsl
or
lock
sti
loopne
jl
cmp
adc
in
adc
addr16
mov
cmp
popf
push
cmc
mov
xchg
ja
add
cmp
mov
xor
and
lret
mov
dec
xchg
in
sub
add
lcall
xchg
imul
jne
pop
xchg
fmul
push
add
mov
rclb
xor
jle
push
sahf
mov
cli
jnp
mov
add
inc
roll
cmp
fs
mov
cmpsl
test
xchg
ficoml
dec
test
xchg
in
mov
cmp
pushf
out
push
or
dec
dec
adc
xchg
js
cmp
out
out
mov
ss
push
cld
aaa
shll
fwait
mov
pusha
add
addl
dec
jl
roll
orb
jo
jne
push
imul
jno
xchg
xchg
mov
test
sahf
inc
cmpsl
or
and
pop
add
cmp
jp
fbstp
dec
xor
out
rcll
mov
ret
mov
xorl
inc
xlat
shll
or
shll
pop
mov
inc
jmp
test
popf
sarl
adc
enter
inc
fwait
notb
ficoms
lds
mov
lea
test
adc
scas
add
adc
xchg
xlat
dec
mov
pop
pop
sbbb
mov
adc
and
fidivl
cmpsb
mov
xchg
insb
loop
add
shl
dec
popf
push
xor
out
xor
mov
scas
sbb
xor
mov
sbb
jno
and
push
dec
or
sti
and
shl
xchg
mov
sahf
insl
ljmp
xor
sbb
and
jo
jno
imul
fs
xchg
adc
xchg
pop
jmp
fildl
mov
adc
cmpsl
lds
xlat
fsubrl
xor
inc
daa
jmp
aam
jmp
lds
adc
xlat
cbtw
stos
sub
popf
mov
nop
cli
push
push
push
push
inc
adc
xor
jo
dec
xor
mov
inc
mov
xchg
pop
stc
les
add
inc
ja
test
pop
sub
incb
mov
stos
shlb
ret
cmp
in
roll
xchg
and
lock
test
ret
cltd
out
test
movsl
push
cmp
push
rol
scas
jp
adc
inc
sbb
adc
xchg
les
stos
inc
sub
push
sub
cwtl
mov
xor
les
xchg
mov
jno
out
cmp
pop
sbb
leave
popa
xchg
cld
test
fwait
mov
adc
sbbb
sub
xor
loope
xor
rorb
test
cld
mov
cwtl
sbbl
and
pop
sbb
cmp
adc
jg
or
out
mov
and
jmp
push
push
sub
xchg
lds
push
sub
out
push
aad
int
pop
push
pop
test
enter
push
js
push
mov
or
lret
mov
xchg
mov
lahf
lea
push
push
push
and
ljmp
adc
mov
pop
clc
clc
mov
and
lea
lea
push
ds
inc
and
cmc
movsb
lcall
imul
xor
adc
loope
fsubrs
or
subb
enter
sub
dec
mov
orb
pop
jg
test
adcl
data16
jb
stos
jg
xchg
jbe
sbb
cmpsl
std
push
add
rorl
cs
js
sar
pop
int
nop
outsb
ret
jl
lcall
lods
push
dec
push
leave
mov
mov
mov
mov
das
jle
aam
or
pop
sti
push
push
lock
ljmp
mov
xchg
push
dec
xor
xorb
or
shll
in
mov
mov
shrl
mov
inc
jmp
jecxz
cltd
sbb
mov
data16
or
push
inc
out
mov
in
pop
pop
les
xchg
sar
lds
dec
stos
lods
ss
or
jo
mov
mov
iret
mov
in
inc
pop
inc
or
ljmp
jne
add
pushf
cmp
iret
outsb
clc
sub
mul
cmp
inc
cmp
sub
lahf
imul
scas
aas
insb
inc
shlb
incl
cmp
lcall
sar
mov
fiaddl
mov
push
jle
sbb
push
or
pop
ds
xor
xor
mov
push
xor
out
test
cmpl
sub
adc
subb
es
popa
sub
push
sti
xchg
rcrl
andl
xchg
pop
push
mov
inc
clc
xchg
and
in
inc
jmp
loopne
cli
xchg
test
push
out
mov
lods
hlt
inc
push
and
inc
iret
or
sub
mov
add
sub
lret
addb
mov
mov
outsb
lret
js
and
repz
shrb
stos
dec
xor
add
cmp
enter
pusha
ljmp
rorl
inc
or
int
cmp
lret
ja
in
and
jmp
sbb
cmp
sbb
mov
jecxz
sbbl
jbe
xor
adc
push
js
dec
lcall
fsubr
jns
cmpsb
adc
not
xchg
sub
inc
jns
pop
call
dec
rcr
fwait
jb
cltd
dec
insl
sahf
sbb
pushf
adc
fimuls
cli
pop
dec
add
jle
push
xchg
jnp
jb
fimull
pusha
stc
imul
test
lods
adc
orb
mov
cmp
inc
cmp
adc
push
xor
mull
and
hlt
cmpsl
les
stos
cli
mov
mov
jl
out
in
in
xchg
adc
push
jecxz
jo
xorl
jp
jno
bsf
jp
or
orb
orb
cld
lret
cmp
dec
loope
test
lret
shrb
movsb
pop
loop
or
add
hlt
mov
jmp
sub
adc
cmpl
scas
out
les
loopne
div
xchg
js
addr16
orb
ss
ljmp
popf
jge
cmpsl
mov
and
pop
std
test
rclb
inc
outsb
mov
fcomps
add
cmpsb
push
dec
jne
test
and
push
pop
cmp
mov
data16
jecxz
xchg
xchg
push
xchg
add
fdivrl
add
loopne
subb
xlat
mov
shufps
sub
sbb
push
lods
jp
test
psrad
fbld
call
cmc
pop
xor
insb
mov
adc
ljmp
xchg
outsb
push
push
or
movsb
out
jb
jbe
aad
idivb
fdivr
es
call
push
sti
aaa
jmp
xchg
movsb
dec
mov
inc
add
mov
inc
dec
pop
add
ret
inc
push
and
push
pushf
and
ljmp
fnsave
mov
filds
lods
jb
shlb
test
xor
mov
into
jno
int
in
mov
fnstsw
sti
xchg
add
jl
mov
int3
or
dec
test
sbb
jbe
jl
jo
les
xor
or
mov
inc
or
add
xor
dec
cld
xchg
je
sbb
ja
jo
imul
imull
mov
sbb
pushf
subb
jge
or
and
test
xchg
fdivrs
mov
or
push
and
cmp
jle
mov
leave
jg
iret
fs
popa
scas
adc
scas
icebp
in
push
fstp
sbb
ja
hlt
idivb
lds
sarl
jg
adc
push
jl
mov
mov
aam
push
mov
test
sbb
lcall
loop
ss
in
fs
or
test
xchg
cltd
jbe
mov
xor
xchg
stos
arpl
mov
xchg
mov
pop
popa
and
mov
stc
mov
push
and
mov
fs
out
inc
inc
xchg
push
cli
insb
les
inc
xor
aas
cmp
lahf
es
adc
sub
and
pusha
mov
adc
and
and
loop
cld
popf
adc
test
lods
cmp
in
loopne
std
adc
push
leave
mov
dec
lock
add
xchg
imul
punpckhdq
jp
or
cltd
xchg
loop
das
pushf
push
or
jp
mov
xor
dec
and
shlb
fiadds
decb
hlt
shll
iret
inc
xor
lcall
and
sbb
sub
jecxz
push
mov
sti
inc
xchg
pop
sub
mov
les
scas
subl
dec
call
or
and
or
or
xchg
xchg
xor
adc
aaa
sub
add
jg
mov
adc
hlt
inc
push
xor
in
sarb
mov
jmp
rorl
pop
jo
incb
addr16
stos
fcmovnbe
pop
inc
jo
test
arpl
push
int3
scas
outsl
mov
inc
aam
adc
add
sbb
and
sarl
or
mov
adc
mov
pop
cmp
loopne
pop
sbb
cmove
lret
insb
iret
test
loopne
inc
xor
sub
or
sub
addl
or
or
push
and
mov
adc
dec
in
aam
mov
cmc
xchg
cmp
test
xchg
sahf
icebp
mov
and
aaa
lods
mov
jne
aas
push
pop
ror
movb
dec
xor
arpl
mov
add
xchg
out
jmp
aaa
lea
add
testb
adc
pop
push
cwtl
sbb
add
mov
dec
mov
add
cmp
xor
add
scas
push
ja
sub
xor
push
push
xchg
decb
or
push
inc
pushf
push
je
add
push
inc
adc
inc
jne
dec
cmp
movsl
or
icebp
sbb
outsb
test
aad
xor
insb
ret
and
push
xchg
out
rolb
std
ljmp
in
mov
adc
add
decl
jne
scas
mov
leave
ret
sbb
loopne
xor
push
aaa
mov
hlt
mov
dec
xorl
jne
jae
push
cmc
xchg
mov
xchg
or
cs
popa
jo
rorl
and
pushf
or
inc
ja
leave
inc
dec
xchg
jno
sub
jb
rorl
jecxz
jmp
sub
push
mov
sub
sub
pop
or
adc
addl
mov
pop
pop
pushf
and
and
es
subl
pop
stc
scas
into
pop
mov
ret
push
add
in
call
pop
bound
sbb
add
xor
test
arpl
dec
cld
int
sbb
push
js
add
scas
dec
movsl
push
lea
shlb
cs
inc
pop
push
outsb
xchg
pop
ret
stos
das
dec
push
movsb
jmp
ret
dec
add
mov
inc
inc
lea
xchg
rorl
testl
lret
mov
xchg
inc
fs
dec
xor
pop
sbb
popa
shr
stos
sub
aas
daa
rcrb
mov
mov
add
pushf
jp
adc
dec
js
aaa
mov
sub
inc
jno
shll
mov
outsb
mov
cmpsl
fistps
iret
adc
je
push
push
mov
leave
xchg
pop
lods
ret
mov
popf
test
mov
in
out
fists
inc
sub
pop
add
cmpsb
mov
in
lret
fsubrl
ja
aas
add
sbb
loope
stc
rep
cwtl
es
pushf
push
push
push
cmp
dec
addl
das
jo
pop
fwait
mov
dec
test
or
and
pusha
mov
cmp
adc
cld
cld
filds
sbb
sbb
movsb
dec
push
ds
or
int
push
loop
and
cld
loope
orb
mov
bound
xchg
pop
int3
mov
inc
jecxz
add
fiadds
add
mov
sub
fiaddl
mov
mov
nop
js
add
sub
sti
jno
cmp
push
pop
inc
mov
cmpsb
push
ret
xor
sub
frndint
addr16
out
and
mov
cmc
frstor
pusha
jae
loope
imulb
xor
pop
scas
xchg
adc
cmp
loope
jge
jae
stc
es
or
jmp
pusha
sub
push
bound
xchg
jmp
push
cmpsl
inc
lods
adc
cmp
dec
jecxz
int
andl
repz
inc
adc
xchg
mov
inc
addr16
dec
lods
pop
jo
mov
mov
and
cmp
mov
jmp
mov
faddl
jne
inc
ret
cs
fcmovb
mov
imul
sbb
inc
psubusb
cltd
add
insl
mov
mov
cli
mov
xorl
cli
jmp
mov
adcl
xor
es
xorb
cwtl
aam
cmpsb
in
add
mull
add
ret
adc
sbb
data16
mov
into
iret
sbb
sub
das
xchg
adcl
pusha
aaa
mov
mov
mov
leave
xorl
dec
xor
pop
test
sarb
jns
add
inc
mov
mov
mov
ret
xor
idivb
cmp
pusha
and
cmp
and
stc
cmpsb
mov
sub
ds
and
dec
add
mov
push
into
xor
das
xchg
push
icebp
push
jne
shll
xor
push
andb
lods
xchg
test
test
jecxz
jno
rclb
jmp
dec
cmp
lds
push
or
jl
mov
dec
stc
jge
sub
mov
xor
mov
imul
adc
and
push
xor
or
or
stos
addb
dec
mov
neg
inc
shrl
jns
pop
push
divb
popa
jg
jnp
xor
sahf
inc
rorl
ficoml
add
inc
shl
and
mov
jp
mov
ret
cmp
jno
ljmp
sbb
mov
cmp
mov
sbb
xor
pushf
loop
xchg
jg
jb
cltd
decb
ds
int
mov
or
scas
dec
insb
lcall
add
sub
ja
lret
xor
xchg
push
inc
push
ja
inc
in
mov
push
adc
loop
and
inc
pop
cmp
push
daa
call
and
xchg
ret
imul
icebp
push
fstl
pop
test
or
inc
push
mov
pushf
inc
decl
insl
dec
add
nop
or
sub
add
movsl
inc
aaa
clc
inc
fistps
or
aas
cmp
sahf
shlb
mov
mov
in
hlt
push
xchg
aad
cmc
jnp
xor
and
cmp
xchg
gs
lret
jbe
xor
xor
inc
test
clc
cs
add
pop
adc
sbb
lea
repz
cltd
mov
jns
in
aam
add
movsb
inc
pop
lcall
stos
imul
fstps
scas
sahf
addr16
mov
cmp
mov
inc
sbb
sub
icebp
pusha
mov
ret
aam
and
negb
and
out
shll
sub
leave
in
out
jnp
mov
add
enter
faddp
mov
and
mov
shll
rolb
xchg
test
out
dec
add
ficomps
nop
outsl
pop
pop
mov
call
xchg
push
mov
imul
pop
stos
mov
rolb
sahf
xor
push
pushf
mov
pop
push
test
loopne
loop
xchg
sbb
inc
add
enter
cwtl
push
inc
popa
adc
xor
stos
iret
xchg
mov
pusha
imul
add
jecxz
lahf
dec
fisubl
xor
sub
mov
xlat
inc
jge
lds
loop
outsb
mov
xor
inc
pop
insb
or
aas
add
push
push
movsl
mov
sub
arpl
xor
jb
xor
es
fsubs
stos
shlb
lods
shrl
push
xchg
out
dec
cmp
and
and
mov
and
push
loopne
push
js
add
xor
dec
push
inc
sbb
ret
inc
push
inc
jge
lods
jb
add
add
adc
mov
inc
mov
ret
jne
cmp
sub
adc
adc
adc
pop
daa
push
lret
lods
mov
mov
xor
inc
test
cmpb
push
adcb
dec
push
push
imul
inc
adc
or
cs
or
jl
dec
pusha
mov
mov
cmpb
pop
sub
ret
fsubrl
das
cs
mov
in
cmp
pop
enter
pop
sahf
and
add
adc
mov
or
rorb
aaa
sbb
cmp
sti
inc
xchg
add
xor
adc
fsts
jo
out
push
pop
cli
cld
and
push
xchg
outsb
pop
in
fiadds
pop
nop
cld
aas
ljmp
jae
adc
movsl
dec
mov
add
push
pop
pop
sub
shrb
movsl
mov
pop
lock
pop
sub
cmp
mov
mov
icebp
pop
mov
mov
inc
mov
inc
jge
and
daa
mov
mov
add
cwtl
sbb
xor
cmp
push
xor
dec
xor
add
ljmp
nop
cmpb
pop
imul
fld
dec
dec
in
gs
adc
jle
test
lock
test
pop
aaa
lods
das
lock
push
and
fdivs
fs
andl
xchg
or
loopne
xor
rcll
mov
js
cs
pushf
and
add
lcall
mov
xor
ljmp
std
int3
cmp
sahf
cmp
cld
das
pushf
pop
andl
adc
pusha
push
addr16
push
sbb
sarl
push
shrl
dec
fcompl
in
pop
test
adc
jp
jb
cld
xchg
cmp
jl
ds
popl
sbb
in
stos
hlt
fwait
pop
add
adc
in
xor
mov
inc
test
and
jp
je
jo
adc
sbb
sahf
test
xchg
aas
and
adc
push
stos
jbe
pop
lcall
add
dec
sbb
cmp
jb
roll
or
xchg
or
adc
xchg
mov
mov
mov
scas
jle
in
js
sub
and
cmp
cmp
push
les
mov
xlat
hlt
push
inc
out
lret
test
mov
je
jo
inc
cltd
repz
xor
xchg
xor
xchg
jbe
dec
fstps
mov
les
mov
rclb
andb
call
and
sar
pop
addr16
test
pop
inc
push
pop
inc
adc
push
orl
popa
or
call
js
and
fldl
add
les
add
mov
jge
sub
stos
repnz
add
sub
jmp
inc
jg
mov
movsb
fcoml
adc
cmc
or
sbb
push
aas
cwtl
xchg
shl
mov
mov
push
sbb
push
pop
fdivl
into
sub
stc
inc
mov
sub
test
or
cmpsb
repnz
bound
add
add
or
push
imul
dec
inc
cmp
shlb
or
dec
add
hlt
lods
adc
lcall
int
hlt
cltd
cmp
add
jle
jb
dec
call
or
xor
mov
mov
or
adc
jae
lcall
outsb
sbb
enter
stos
aaa
dec
jmp
fisubrs
aam
jo
jge
or
into
sbb
es
xor
or
lahf
add
xchg
cs
ficomps
cs
dec
cwtl
stos
lea
loope
cmp
mov
push
andl
xor
enter
imul
xor
jecxz
jnp
and
test
outsb
ja
repz
out
pop
push
arpl
das
cmp
mov
pusha
pop
fisubs
sbb
mov
cmp
lret
sbb
fnsave
and
fs
mov
push
nop
sub
cld
inc
loop
fsubrs
push
cmp
inc
and
adc
es
mov
test
pop
mov
mov
jp
mov
inc
mov
loopne
xchg
jne
and
lods
lret
in
call
mov
out
fwait
ss
jnp
mov
xchg
lods
adc
int
lods
xlat
push
xlat
jmp
add
roll
aad
and
mov
sub
sbbl
mov
fadd
pop
mov
je
xor
into
xchg
in
push
add
adc
gs
lret
push
sbb
add
pop
push
inc
and
and
addr16
and
je
scas
sub
neg
push
push
lock
adc
inc
ror
fcmovnb
mov
insb
push
stos
push
fisubl
insb
movsb
mov
sub
inc
sahf
mov
les
push
je
push
test
cmp
xchg
mov
inc
imul
lret
xchg
je
xchg
and
sbbb
push
rcll
testl
aam
push
push
icebp
dec
push
sub
add
pop
lcall
jmp
in
dec
and
xchg
in
adc
shrl
inc
inc
sbb
mov
xlat
mov
pop
fmull
xlat
cmp
stos
jnp
notb
dec
data16
pusha
in
movsb
sbb
movsl
pop
jle
clc
pinsrw
pop
cli
jecxz
adc
fadds
pushf
xor
adc
lret
adc
pop
pop
mov
enter
mov
rclb
das
lock
js
xor
add
mov
push
push
ficoml
faddp
scas
cmpb
add
lods
in
or
adc
sahf
shll
and
dec
inc
xchg
scas
in
popa
rorl
add
scas
stos
sbb
or
mov
xchg
cltd
lcall
hlt
mov
push
add
push
mov
aam
popa
jae
mov
xchg
xchg
mov
cmp
jecxz
lcall
pop
sub
jnp
inc
test
xor
mov
inc
adc
adc
popf
lock
std
shlb
mov
mov
adc
ss
xor
mov
xchg
stos
mov
in
repz
cmp
xor
add
cmp
fwait
stc
rdmsr
ds
das
insl
mov
sbb
jo
pop
pminsw
sbb
cmpsl
mov
push
popa
mov
movups
dec
fnsave
insl
pushf
sbb
lock
mov
adc
pop
cmp
xor
into
idiv
into
cmp
cmpsb
test
push
hlt
stc
lahf
aam
ss
aas
jge
and
pusha
fiaddl
out
addr16
mov
out
add
adc
pop
xchg
or
push
mov
ja
in
sub
cmp
loop
push
dec
sbb
inc
pop
movsl
xor
pop
push
pop
or
imul
mov
pop
adc
mov
sbb
js
call
mov
fs
xchg
mov
mov
push
pushf
ss
pop
mov
sbb
xlat
mov
inc
orl
jg
mov
mov
mov
sub
inc
scas
shl
rcrb
and
xchg
or
mov
cwtl
and
sbb
inc
out
jne
pop
test
add
mov
push
push
push
push
aas
cmc
loop
pop
in
jecxz
je
push
clc
std
sti
scas
dec
xor
jne
loopne
out
pusha
sub
into
call
ja
jno
outsb
dec
pop
lcall
fcomps
call
ss
add
sbb
shlb
les
ds
decb
imul
test
outsl
roll
inc
or
mov
das
xor
push
aas
cmp
jmp
cmp
xor
xor
inc
rcl
lods
sub
adc
ret
pop
xor
loope
repz
or
out
xor
decl
ficompl
or
push
push
pop
push
xchg
out
mov
dec
jge
mov
jp
push
rcrl
jl
push
jns
sahf
mov
lods
mov
incb
clc
inc
dec
add
rclb
fisubrl
sub
mov
aam
inc
xchg
sti
cmp
call
rclb
jno
jge
imul
ja
xor
jg
cmp
xor
repnz
xchg
push
fidivrl
adc
add
cmpsl
push
dec
das
lds
loopne
and
inc
xor
in
fdivs
clc
add
add
ret
and
push
out
scas
adc
xchg
pop
xchg
xorb
fwait
push
dec
scas
clc
mov
add
popf
adc
and
pop
ja
sub
add
add
filds
sub
mov
lahf
xor
cmp
xor
cmpsb
in
or
cltd
cmp
test
mov
scas
lahf
xchg
push
xchg
std
dec
cmpsb
lahf
enter
lea
clc
out
in
or
scas
sub
imul
and
mov
dec
mov
loope
movsl
call
pop
xor
xor
fimuls
mov
dec
andb
inc
aad
add
scas
mov
negb
ljmp
xchg
test
jge
in
and
push
push
lds
aad
mov
sbb
push
mov
or
mov
push
das
jbe
pop
adc
das
rcrb
mov
mov
add
cld
inc
mov
jge
sbb
loope
jno
mov
inc
or
mov
add
push
test
popa
jmp
push
push
pop
lods
test
pop
shl
xchg
nop
aam
xor
jnp
cmp
mov
enter
clc
popa
fwait
cmpsl
es
cmp
sub
or
loop
jecxz
mov
loopne
outsb
cmp
lret
cmp
mov
cmp
addr16
pop
daa
call
sbb
dec
add
pop
cltd
and
stc
add
lods
add
pop
stc
mov
sub
pop
xor
mov
loopne
sub
jno
mov
inc
aas
out
pop
sub
cli
mov
dec
add
fsubl
xor
lret
cmp
hlt
mov
xchg
add
mov
fsubr
inc
push
sbb
add
or
mov
leave
bound
mov
inc
push
inc
sub
jb
or
sbb
xchg
in
push
fstpt
je
int3
movb
cmpsb
sub
cwtl
clc
pusha
jnp
fisubl
xor
push
lret
sbbb
push
add
push
jl
adc
imul
lds
roll
fldcw
mull
adc
mov
cltd
pop
mov
out
test
mov
sbb
dec
subb
jle
shll
fldcw
int
cs
arpl
daa
lea
cmp
lcall
xor
gs
xor
lods
inc
jge
mov
dec
test
jle
dec
sbb
jne
pop
add
adc
lcall
les
movsb
push
ret
mov
mov
push
in
pop
inc
sbb
test
mov
out
es
lcall
sbb
lea
lcall
cmpsl
adc
hlt
lds
lock
xlat
or
jmp
and
push
nop
leave
adc
popa
xlat
and
scas
fbld
dec
pop
hlt
push
inc
mov
adc
adc
inc
decb
adcl
sub
sbb
faddl
ljmp
lods
sbb
inc
adc
sub
add
sti
jle
pop
insl
sbb
sub
push
inc
incl
adc
xchg
test
mov
sbb
add
cld
mov
insb
clc
xor
mov
rolb
lods
adc
jl
loop
add
mov
clc
loop
bound
dec
in
and
dec
sbbb
jle
bound
xor
outsb
xor
add
in
sub
adc
xchg
lock
pop
adc
xor
mov
adcb
mov
add
sub
jle
cmp
sar
ds
dec
sbbb
sarl
cltd
loope
mov
shlb
add
cmp
jl
int
adc
out
lds
dec
iret
js
fwait
outsl
scas
stos
std
stos
mov
or
pusha
push
cwtl
cmp
clc
sbb
mov
stc
hlt
mov
jb
add
shlb
push
cli
and
lock
xor
nop
cli
mov
xchg
fwait
test
jnp
in
popa
test
icebp
cmp
pop
jns,pn
and
dec
into
cmp
movsb
ljmp
scas
aaa
add
leave
ret
inc
test
jg
inc
cmp
push
test
mov
lods
je
in
sub
ljmp
lcall
mov
jge
dec
or
pop
call
or
mov
xor
pusha
cld
or
and
mov
enter
fadds
or
sub
push
sbb
cmpsb
push
add
pop
ja
rcrb
sbb
push
jmp
bound
mov
fistps
mov
insb
sbb
insl
popa
mov
icebp
ljmp
sub
cmp
psubusb
inc
dec
das
mov
lea
or
shrb
push
mov
xchg
repz
pop
adc
ss
fbstp
incl
in
popw
sub
sahf
cli
xchg
ljmp
add
xor
pop
icebp
sub
fbstp
leave
add
testl
sar
xor
ds
out
or
stos
in
movsb
daa
popw
ds
add
test
mov
push
pusha
add
jp
pusha
cmc
testb
repz
cwtl
rcr
inc
ficompl
lcall
call
sub
jmp
mov
xchg
das
lahf
rclb
dec
add
je
or
jge
cli
jg
pop
cmp
and
add
sarl
scas
jno
roll
xchg
lods
push
mov
aas
jge
ret
xor
push
push
pusha
xor
add
mov
ljmp
pop
or
movb
push
jmp
pop
insl
mov
add
xchg
add
mov
aam
sbb
pop
inc
imul
push
ret
in
lcall
cmpsb
push
hlt
cwtl
hlt
cmpsl
enter
mov
dec
adc
rolb
xor
lods
dec
lds
es
xchg
movsl
loope
or
shll
cmpb
mov
xchg
jl
je
or
add
rclb
popf
lret
popl
add
pop
sbb
cmp
pop
inc
imul
or
xchg
lods
cmp
rolb
or
sbb
nop
cmpsb
xor
aad
cmp
adc
xor
movsl
out
fs
pushf
repnz
jbe
bound
fdivrl
lcall
ss
or
dec
ret
pop
js
xchg
cld
xor
scas
shl
rcrb
and
mov
cmp
jbe
and
loopne
jnp
jo
fistl
xchg
mov
lcall
bound
insl
sahf
or
jo
daa
inc
decl
inc
or
add
or
push
or
dec
ljmp
in
push
lds
mov
or
push
dec
sub
xchg
cs
inc
imul
clc
imul
add
imul
fisubl
add
bound
push
or
jl
int3
ljmp
inc
dec
leave
gs
repnz
fistpl
ret
or
xchg
or
dec
mov
cmpsl
popa
or
frstor
push
mov
je
cli
scas
test
xor
add
ss
jg
das
pusha
xor
add
les
js
mov
jmp
cmpl
jecxz
adc
adc
btr
jne
test
jno
loope
cmpsb
xchg
inc
enter
adc
or
mov
mov
push
jns
cmovnp
inc
or
push
jge
dec
push
aam
pop
push
sub
add
pop
adc
and
addl
mov
out
and
jno
inc
jno
mov
mov
outsl
dec
adc
subl
call
fwait
pop
sub
shlb
lea
inc
inc
mov
cmpsb
push
outsb
stc
shll
xchg
mov
stos
sahf
add
inc
push
js
push
inc
pop
lahf
add
sub
or
faddp
xor
cmp
cmpsb
mov
jo
cli
add
mov
push
dec
mov
pop
js
xor
pop
roll
dec
pop
or
loope
stos
ljmp
xchg
in
mov
stos
shlb
cmp
xchg
loope
add
xor
mov
imul
imul
sbb
dec
xlat
add
inc
ljmp
mov
adc
in
push
ret
cmpsb
xchg
jl
cmc
inc
cmp
push
pop
or
clc
sub
lea
mov
pop
push
nop
jp
es
int
mov
inc
mov
loop
xor
or
cmp
aas
cmpsl
sub
adc
lcall
and
pop
dec
push
hlt
add
cwtl
mov
mov
les
push
xchg
or
in
pop
mov
popf
inc
sub
fnstenv
adc
mov
inc
xor
xchg
pop
push
stos
xlat
cmp
pop
xchg
pop
rorb
sbb
out
lcall
cmp
xlat
loopne
mov
idiv
and
pop
mov
jle
and
inc
dec
add
and
sub
dec
xchg
fstl
xchg
pop
cmpb
mov
cld
jbe
call
sbb
add
mov
xor
adcl
inc
bound
xchg
loop
or
cmp
shrb
sbb
loopne
push
cmp
sub
loope
sbb
dec
push
je
rorb
push
mov
shrl
add
mov
mov
fwait
add
pop
test
pop
jbe
das
jb
fsubl
imul
sub
in
fistps
stos
pop
hlt
add
inc
push
pop
in
dec
fstps
int
xor
pop
jne
fistps
popf
test
and
and
ret
mov
or
sub
imul
pushl
mov
or
pop
cmpsl
js
mov
decb
inc
ds
dec
imul
lcall
test
sub
in
movsb
cmp
shrl
outsl
push
mov
fildll
call
jge
aas
pop
insb
mov
and
popa
xchg
mov
out
rcrl
jg
add
push
push
jo
in
sbb
inc
subl
movsl
dec
je
iret
and
xor
and
xor
inc
es
call
or
or
int
int
jl
xchg
ljmp
lods
imull
mov
mov
dec
inc
out
aad
std
mov
adcb
add
ljmp
or
cmp
xchg
das
cmc
dec
cmpsl
je
mov
cmpsl
repnz
outsb
and
push
jo
sub
jb
lods
in
xor
mov
mov
pushfw
or
test
and
daa
push
xor
lds
pop
xchg
clc
out
inc
subb
xor
cmp
sbb
mov
into
mov
and
daa
out
in
ja
repz
lock
pop
clc
jg
pop
dec
push
cmp
cmp
mov
in
dec
jmp
adc
idiv
movsbl
xor
cmpsb
mov
jle
sbb
jg
xchg
mov
jnp
gs
test
and
dec
or
add
jmp
in
or
xchg
sub
jl
aad
mov
pop
cmp
jmp
dec
lock
test
sbb
mov
or
or
test
jle
sub
fldl
fildll
inc
arpl
int3
jp
adc
and
or
cmpsb
jns
jl
jbe
decb
out
push
idiv
repnz
aas
aam
lahf
js
out
bound
cmp
push
xchg
pop
mov
mov
and
ljmp
push
shrb
mov
pop
mov
orb
shr
cmp
lock
jmp
sbb
xor
mov
lret
cwtl
mov
cmpsl
js
es
loop
out
popa
jae
add
sub
dec
add
cld
adc
jmp
adc
jae
mull
lret
or
rcr
jge
push
out
jne
lock
sbb
xlat
rol
arpl
jns
sub
fcmovbe
push
mov
push
or
mov
bound
cld
ficoms
movsl
fsubrs
mov
fs
aas
inc
lods
push
mov
rcrb
sbb
les
push
mov
lods
adc
popa
sti
inc
dec
cmp
popa
out
outsl
mov
icebp
fiaddl
test
push
sub
dec
or
xor
xchg
lods
mov
cli
inc
adc
int
je
icebp
sbb
in
ds
iret
imulb
jl
push
xor
and
or
cs
sbb
sbb
aaa
test
cld
rorb
and
pushf
inc
xor
or
hlt
cmp
pushf
cmp
out
add
dec
inc
fadds
aad
es
jae
out
push
test
fisttpll
dec
mov
int
jge
mov
add
jp
and
pushf
shlb
mov
mov
mov
mov
push
xchg
test
rorb
mov
stc
jge
jo
xchg
clc
jo
sub
nop
add
jl
in
pusha
adcb
sahf
sbb
xchg
jp
cmc
add
and
ret
inc
repz
jmp
imul
add
dec
cli
pop
roll
imul
clc
pushf
sbb
dec
imul
jne
mov
shll
pop
jbe
inc
mov
jns
imul
lods
fmul
and
xchg
or
nop
push
jecxz
sbb
dec
cwtl
mov
add
xor
mov
addr16
inc
jmp
sbb
xor
bound
sbb
fidivrl
xor
in
clc
enter
pop
dec
stos
push
pop
push
xchg
cmc
pop
aam
outsb
jecxz
mov
les
pop
mov
movl
pusha
and
inc
aaa
inc
or
cld
sarl
subb
test
and
inc
sub
sub
leave
xchg
push
mov
ljmp
dec
cld
aas
movsl
cmp
rorl
inc
gs
lock
lcall
stos
xchg
jbe
inc
adc
mov
xor
mov
ret
shll
aam
jne
mov
loop
push
inc
pop
insb
mov
mov
adc
aam
jo
add
mov
or
jo
fistl
sti
lods
gs
xlat
aad
dec
mov
outsb
subl
or
leave
xor
imul
imul
jl
test
adc
pop
lret
xchg
xchg
xchg
das
pusha
cmpsl
or
loop
hlt
inc
xor
lds
mov
or
xorb
in
movsl
cs
imul
sbb
and
scas
shll
push
add
pop
shrl
cwtl
out
stc
push
mov
cs
jns,pn
sbb
inc
out
sbb
pop
xchg
jb
sub
add
call
shl
mov
xchg
mov
push
and
lret
orl
or
in
pop
aam
and
add
pop
scas
cmovne
lahf
inc
es
ja
lret
push
out
jle
mov
or
lods
xchg
subl
or
aaa
and
fadds
mov
lcall
lcall
daa
mov
jg
test
inc
les
jne
mov
fmull
push
jb
pop
mov
fistps
push
mov
imul
sub
jbe
xorl
mov
adc
out
je
add
int3
mov
push
adc
hlt
cmp
inc
stos
adc
mov
dec
cli
cmpsb
loopne
fistpll
iret
add
pop
pop
mov
pop
inc
add
adc
loopne
iret
cmpsb
icebp
out
push
and
fs
mov
xchg
or
orb
push
jnp
push
add
jle
cmpsb
outsl
dec
pop
mov
in
jle
fcomip
hlt
inc
push
in
dec
add
mov
fldl
das
nop
pop
cmp
stos
pusha
jae
test
mov
jp
mov
pop
cmp
aad
movsb
xor
fwait
pushf
int3
xchg
out
lock
ficoml
mov
adcb
inc
cvtps2pi
sar
fwait
jns
inc
add
mov
mov
sbb
jmp
out
inc
jo
or
sub
mov
or
inc
sub
xor
xor
clc
test
fnsave
mov
mov
daa
lcall
mov
mov
imulb
movsb
les
pop
arpl
notb
jmp
adc
imul
rcll
addr16
mov
sub
pusha
inc
push
dec
sbb
mov
and
call
or
and
std
xlat
mov
pop
cmpb
or
lea
mov
push
push
or
fstpl
adc
cwtl
push
loopne
xor
out
xchg
pop
mov
mov
aaa
arpl
xlat
jl
mov
pop
mov
mov
cs
push
dec
mov
push
or
jbe
outsb
scas
push
in
add
sahf
mov
sub
jo
out
popa
addr16
pop
mov
push
xchg
loopne
dec
jo
arpl
push
cwtl
adc
inc
fbstp
fs
popl
lret
dec
or
pop
sbb
in
lods
mov
mov
int3
jp
xchg
test
sub
sbb
cwtl
jge
cmc
scas
or
ja
out
mov
adc
pop
adc
stos
add
mov
jl
ret
mov
in
mov
mov
add
arpl
movsl
mov
xchg
dec
or
jnp
int
jmp
xor
mov
aad
and
mov
add
add
dec
imul
dec
sti
mov
push
in
cltd
jnp
push
pop
jmp
xor
sub
clc
add
movsb
or
adc
movsb
inc
roll
jns
xor
xor
pop
enter
movsb
lea
inc
das
xchg
push
pop
xor
jmp
jmp
dec
cmpsb
xchg
cmc
push
xor
or
cmp
ret
incb
testb
adc
test
mov
mov
enter
out
jmp
cli
push
mov
add
mov
cmpsb
add
mov
data16
rcll
insb
test
adc
add
aas
repnz
insl
inc
xchg
xchg
ret
lea
rolb
add
das
stos
mov
and
outsb
hlt
adc
dec
mov
cmp
fwait
je
gs
pop
inc
fs
addr16
lcall
cmp
cwtl
sub
mov
and
jmp
sub
call
call
push
sbb
adc
inc
or
cmpsb
mov
xchg
out
adc
imul
cmpsb
adc
pusha
mov
xor
pop
outsb
lahf
addr16
sbb
test
insb
mov
mov
dec
ret
int
sub
lcall
mov
mov
mov
imul
pop
push
jae
daa
imul
stos
cld
push
out
lret
add
or
fs
incl
addb
insb
mov
or
lds
adc
adc
ja
cmc
fwait
decl
jecxz
pop
jge
or
sub
mov
clc
jg
les
xor
lods
mov
imul
mov
sub
add
out
pop
rcr
data16
daa
mov
jbe
pop
push
ja
aas
jns
lret
dec
pop
xor
push
lret
shll
mov
jno
jbe
rcl
mov
sub
aad
inc
mov
push
xchg
out
xchg
inc
dec
push
sbb
cmpsl
push
mov
rcll
sbb
mov
test
les
xor
sub
mov
loopne
and
inc
xor
lods
stos
pop
aas
daa
cmp
popf
xor
in
clc
pop
cli
jns
out
std
mov
pop
out
mov
xor
add
out
orl
mov
mov
cmp
push
sahf
fisttpl
loopne
sub
push
push
pop
sub
es
addr16
pop
stc
das
lret
lods
add
test
sbb
add
subl
call
sbb
iret
out
mov
orb
add
sub
ret
lcall
cld
cld
test
stc
jl
repz
out
test
push
andb
sub
adc
clc
clc
jnp
ror
aas
popf
adc
stos
test
mov
pop
clc
std
pop
mov
repz
stos
out
loope
test
xor
cmpb
testl
insb
xchg
adc
inc
sub
adc
fs
mov
push
decb
sub
adc
or
inc
dec
shrl
mov
je
insb
sub
cmp
outsl
out
mov
cmp
mov
add
clc
adc
shl
shrl
mov
jge
push
lahf
stos
pushl
rcrb
shlb
gs
ret
subl
lcall
fidivl
adc
and
sbbl
inc
rorb
rolb
leave
in
xchg
pusha
mov
call
dec
xchg
fsubl
mov
and
lret
xor
mov
das
sbb
push
aaa
lahf
jbe
inc
icebp
ljmp
bound
into
ret
stos
fidivl
stc
loop
sbb
mov
leave
outsl
aam
outsl
cmp
mov
mov
fdivrl
or
mov
cmc
setbe
dec
mov
adc
mov
adc
push
lock
push
xchg
cmp
cmp
roll
sbb
roll
xor
cmp
dec
jg
mov
jne
add
cltd
lcall
and
sub
imull
clc
pop
sbb
and
lret
nop
rcr
mov
jnp
and
faddp
in
dec
push
mov
dec
iret
fmuls
test
sbb
int
hlt
cmpsb
int
jbe
sub
das
mov
adc
pop
dec
and
adc
loop
add
pop
xor
push
clc
cmc
fists
pop
pop
jbe
stc
jecxz
stos
ror
loop
fmull
push
pop
ret
std
mov
pop
inc
aad
push
mov
add
push
cmp
int3
lods
add
leave
iret
enter
sbbb
push
mov
dec
mov
rolb
lods
mov
and
clc
sub
enter
mov
dec
xchg
icebp
push
aam
shlb
sbb
inc
repz
fwait
push
adc
adc
adc
jg
aam
and
push
lock
add
ffreep
mov
sqrtps
scas
fs
xor
add
fs
cmp
mov
sarl
shl
into
daa
add
pop
enter
dec
clc
xor
dec
movsl
add
cwtl
cwtl
sbb
test
push
and
inc
rcr
pop
push
jmp
push
or
inc
mov
cmpsb
mov
cli
jg
clc
add
popa
push
addr16
or
dec
repz
mov
adc
movsb
lods
outsb
testl
mov
cmp
test
cs
ja
frstor
jge
jecxz
sbb
sbb
dec
clc
dec
hlt
inc
cmp
lds
test
adc
ret
inc
inc
lock
add
inc
inc
test
mov
subb
test
add
lock
mov
push
icebp
or
sti
andb
and
lea
xlat
mov
sbb
daa
test
sahf
cmp
pop
xor
and
out
xchg
cmp
fnsave
mov
bound
mov
inc
mov
mov
jg
aas
hlt
push
pop
dec
loop
test
fwait
test
flds
jg
aam
adc
dec
loope
push
jmp
out
orl
mov
cmpsb
faddl
xchg
sbb
hlt
in
or
ss
mov
lock
clc
pop
data16
lcall
pusha
xchg
cmp
inc
pop
call
inc
dec
loopne
out
sti
fiadds
aad
test
inc
fbld
sub
movsl
dec
mov
inc
jo
sbb
shrb
add
es
decb
loope
lods
psllq
popf
loop
push
inc
les
loope
sbb
ljmp
out
cld
inc
add
pushf
enter
mov
mov
repz
notl
push
mov
xor
pop
mov
mov
cmpb
mov
ret
add
sub
stos
fisubs
mov
ret
sbb
cmpb
and
pop
clc
inc
mov
aas
adc
push
in
loope
incl
or
icebp
pusha
pop
cmp
lods
ja
ficoml
out
sub
mov
cmp
xor
insb
jmp
xchg
repnz
subl
push
mov
sbb
in
mov
in
sub
push
push
pushl
add
stos
std
jg
push
push
hlt
lea
push
call
leave
ret
outsb
aas
ljmp
cmpsb
mov
add
les
lock
add
in
outsl
pop
push
or
sub
add
mov
fwait
idiv
movsb
add
inc
and
movsb
inc
lcall
pop
add
jg
fists
push
into
xchg
loop
in
add
adc
js
out
fbstp
lods
xchg
add
dec
dec
ficomps
scas
stc
decl
call
pop
jle
add
lea
decb
fs
mov
incb
push
or
iret
pushf
shll
incl
lods
add
and
pop
cmp
inc
loopne
sarb
xor
mov
ficoms
cmp
xchg
sub
push
mov
push
mov
int3
cmp
cmp
es
push
xor
adcb
sbb
sbb
inc
aaa
add
mov
fidivrs
mov
icebp
cmp
outsb
add
sti
push
es
enter
add
jne
adc
xchg
pop
in
push
add
cli
fwait
jns
cld
mov
xchg
and
cmpsl
enter
int
sar
push
outsb
loope
add
lret
outsl
clc
incl
xor
add
add
inc
xor
add
add
add
cld
xchg
sub
adcb
push
add
insl
ret
outsl
mov
inc
ret
sub
sahf
mov
add
jmp
loopne
jo
mov
daa
pop
add
movsb
cmp
fistpll
sbb
sub
or
bound
lret
pusha
out
dec
fildll
out
and
dec
mov
push
nop
insl
ss
add
outsl
push
shll
jnp
loopne
out
loop
jbe
sarl
pushf
add
sbb
in
ja
mov
xchg
cmp
ja
in
jmp
cs
push
add
stos
add
add
shrb
add
dec
inc
xor
or
in
xlat
push
pop
mov
push
and
dec
add
add
cs
or
aam
hlt
mov
lcall
push
or
mov
push
into
outsb
sbb
adc
ljmp
repz
inc
fistl
mov
dec
scas
ds
daa
std
xchg
fistpll
or
mov
sub
add
ja
jnp
xor
adc
cmp
push
pop
sbb
mov
out
sub
dec
std
pop
add
adc
pop
push
xor
outsl
or
fidivl
out
aad
push
imul
fsubs
mov
hlt
inc
mov
and
add
sub
lods
test
je
mov
test
ds
ljmp
inc
daa
mov
sbb
aas
shll
movsb
sbb
push
and
inc
cmp
adc
and
popl
test
hlt
push
mov
shll
dec
insb
sbb
inc
movb
push
xor
cs
cmp
repz
imul
push
shll
pop
xchg
repz
pop
test
repnz
cmpl
movsl
or
push
pop
aaa
insl
cmpsl
fldenv
and
mov
and
outsb
pop
out
adc
sbb
bound
int3
sbb
sub
or
fdivl
adc
xor
jle
xchg
fisttpl
pop
inc
aad
out
cli
repnz
dec
xor
add
shll
and
push
sub
cwtl
push
mov
push
sahf
sub
xor
stc
and
push
xchg
push
push
mov
aaa
xchg
mov
pop
cmpsb
mov
pop
adc
cmp
push
mov
jg
jne
mov
sub
pop
leave
shlb
jb
xor
and
stos
add
sbb
in
sahf
and
in
sub
pop
mov
pop
or
lock
mov
push
mov
pop
stc
mov
push
dec
mov
push
push
push
pushl
add
lea
hlt
fistpll
push
add
and
ret
repz
ds
or
xor
jns
xchg
mov
insb
xor
sub
and
fsubs
repnz
jno
fs
inc
inc
inc
push
scas
dec
push
pop
stos
push
cs
cltd
adc
jae
jl
into
sbb
std
push
push
pop
pop
repnz
push
insl
frstor
and
xchg
mov
jne
in
sub
jb
and
repnz
add
push
in
push
mov
sub
xchg
insb
fdiv
repnz
shrl
push
popa
imul
lret
or
mov
mov
cmp
mov
or
mov
mov
repnz
add
idivl
push
arpl
add
mov
push
sub
gs
shlb
jbe
in
inc
inc
nop
xchg
xor
insb
roll
pusha
mov
push
aaa
lock
iret
push
in
sub
dec
xor
femms
sbb
xor
jnp
mov
sub
rorb
ljmp
fcompl
mov
dec
cs
push
cmpsl
push
enter
scas
repnz
xor
cmp
cmpsb
stos
popf
pop
add
aam
inc
sub
aaa
cmp
cld
and
in
ficompl
inc
pop
je
cmc
pusha
movsl
orl
daa
and
mov
or
jnp
in
and
dec
popf
mov
inc
mull
mull
js
je
int3
push
pop
fnsave
je
jge
sti
or
cmpsb
nop
xchg
mov
test
push
lock
inc
jecxz
add
jge
adc
mov
jle
sub
or
pop
mov
mov
jmp
mov
push
rorl
xlat
pop
ja
push
rclb
jmp
insb
fidivl
fucomip
pop
mov
push
cmp
jp
pop
jmp
inc
adcb
push
add
inc
xchg
jb
clc
gs
push
test
mov
dec
loop
pop
mov
out
shl
push
xchg
xchg
sub
lds
cmp
pop
std
mov
pop
mov
lock
push
lods
push
fs
shll
dec
in
mov
xor
xchg
mov
movsb
inc
out
pop
and
or
add
or
mov
jbe
das
repnz
test
push
loope
jp
leave
inc
ror
fdivrl
inc
lock
lcall
pop
push
sbb
bound
iret
dec
ds
pusha
cmpb
aad
pushf
add
in
jg
jnp
jbe
orl
mov
icebp
mov
mov
sub
sub
pop
pop
int
ljmp
jle
ret
imul
dec
int
jge
outsb
pushf
dec
add
xchg
mov
cltd
push
pop
add
mov
shrb
xor
sbb
mov
mov
add
sub
push
insl
xor
xchg
imul
jbe
add
mov
test
das
rorl
push
cmp
xorb
out
das
mov
mov
mov
mov
add
dec
add
lcall
or
or
pushf
xchg
lods
sub
mov
inc
mov
push
mov
bound
pop
shr
jge
add
icebp
stos
pop
jae
test
fwait
inc
js
fdivp
pop
cmc
cld
pop
mov
mov
inc
icebp
mov
testb
dec
lcall
or
notb
mov
faddl
icebp
fisubs
test
jge
xor
jmp
inc
sub
icebp
push
sub
inc
repz
mov
nop
repz
add
enter
xor
inc
aas
fwait
int
loopne
add
push
cwtl
scas
mov
lock
xchg
xchg
jmp
stos
dec
loop
mov
dec
add
xor
xchg
pop
jecxz
ds
jbe,pt
out
adc
loopne
or
aam
andl
cwtl
add
cmpsl
sub
lret
sub
jne
stos
jbe
cmpsl
test
test
clc
or
push
inc
dec
das
insb
adc
cmpsb
jecxz
sub
fldenv
aaa
or
xchg
xor
clc
dec
out
inc
xchg
mov
cmp
mov
hlt
add
and
movsl
inc
in
clc
sbb
jbe
pop
push
jo
adc
and
push
cli
add
pop
mov
push
idivb
fwait
mov
sar
push
dec
out
push
jbe
push
dec
adc
add
test
inc
je
dec
movsb
or
ss
mov
rcl
test
cmpsl
xchg
pop
sub
inc
roll
icebp
movsl
dec
loopne
inc
repz
jnp
jl
insb
xor
sbb
jmp
add
nop
fcomp
lods
and
pop
pop
dec
pop
and
push
cmc
test
rcrb
or
mov
fs
push
es
mov
xor
fdivrl
mov
sub
dec
inc
aaa
leave
xchg
imulb
sbb
mov
popl
cmp
add
adc
popa
sti
ja
xor
jecxz
push
sub
mov
add
insb
call
cmp
mov
or
mov
out
push
push
fnstenv
cmpl
lock
fisttpl
and
sar
dec
adc
mov
pusha
bound
les
ret
gs
cmpb
test
sub
add
pop
push
pop
adc
nop
pusha
mov
subb
fdivr
in
cs
xchg
mov
jae
mov
add
jne
xchg
cmp
push
iret
xor
lds
fistps
or
popa
mov
movsb
mov
add
daa
pop
aam
cmp
out
mov
dec
adc
cmp
jbe
incl
aam
cmp
inc
bound
pop
nop
xchg
leave
dec
push
jbe
lret
lock
dec
mov
hlt
jo
xlat
dec
adc
test
xor
cmp
pusha
jb
testb
mov
pop
repz
xlat
xchg
jo
adc
sub
je
xchg
sbb
lret
call
cmp
mov
into
mov
cwtl
push
xor
ja
sbb
push
mov
iret
imul
jne
pop
test
js
xor
js
shll
mov
stc
push
roll
gs
add
sbb
pop
dec
sti
xorl
pop
roll
adc
and
jle
or
movsb
jp
outsb
jno
icebp
sbb
cld
ss
popa
scas
adc
shrb
les
fisubs
daa
mov
add
sbb
adc
adc
call
dec
fldl
cmp
jmp
jns
ljmp
mov
dec
arpl
in
jle
fwait
int
dec
enter
or
test
clc
mov
or
sti
pop
ss
inc
mov
sbb
push
adc
and
in
or
xor
xchg
test
mov
push
xorl
dec
in
inc
dec
and
or
inc
or
and
or
ret
ficoml
add
popa
sub
cmpsb
jge
and
and
lea
notb
push
test
addl
test
mov
out
rorb
rorl
stos
dec
cmpsb
mov
out
imul
jns
inc
sbb
or
sub
xlat
dec
fisubl
push
je
ret
stos
ljmp
push
mov
shlb
jecxz
sbb
sar
dec
test
dec
pop
repz
mov
ss
imul
and
adc
leave
andl
dec
stos
mov
pop
sahf
adc
lock
jo
js
adc
dec
mov
or
repz
xchg
sub
and
or
xor
call
cmpsl
rcrb
shl
push
cli
in
add
mov
in
xor
and
outsl
cmp
pop
lock
xchg
sub
mov
data16
dec
mov
add
and
add
scas
and
adc
dec
icebp
test
cli
or
adcl
lret
repz
push
add
iret
lcall
or
imul
fs
icebp
mov
cs
mov
loopne
push
lcall
fcompl
dec
mov
push
sar
adc
jnp
jmp
mov
or
and
test
cmp
daa
and
enter
jecxz
cltd
loopne
in
dec
repnz
pop
inc
dec
movsl
in
add
inc
rcll
jmp
popa
lret
mov
sbbl
sub
imul
stos
xor
push
jge
jnp
xchg
call
pop
lcall
subl
pop
inc
in
xchg
cmp
cmpsl
pop
inc
pushf
dec
or
daa
loopne
gs
jge
inc
popl
pop
add
iret
and
cmp
test
js
mov
pusha
pop
mov
add
cwtl
sub
push
jne
outsb
xor
cmp
push
adc
dec
imul
mov
in
jns
test
xchg
fldl
sub
xchg
mov
jp
outsb
or
cld
outsl
cli
ret
dec
adc
out
mov
insb
rclb
push
in
push
sarb
clc
lea
push
push
mov
inc
add
pop
call
test
dec
pop
pushf
cmp
dec
cmp
pop
lcall
leave
testl
dec
dec
xchg
movsl
addr16
inc
mov
xor
hlt
dec
mov
sbb
mov
xorb
adc
pop
dec
lcall
xchg
sti
aaa
mov
adc
imul
insb
mov
imul
fiadds
xor
out
add
js
out
test
sub
movb
push
cli
inc
push
cmc
or
or
sbbl
ret
int
add
jmp
loope
pop
jbe
clc
dec
add
out
push
xchg
ret
repnz
test
movsb
lods
ficomps
cs
pusha
fsubr
mov
mov
icebp
dec
add
push
and
fwait
jg
inc
leave
bound
lahf
lock
xchg
jg
loop
sub
je
mov
pop
add
or
jle
dec
sbb
enter
mov
sub
loopne
mov
and
outsl
lcall
add
test
scas
mov
mov
sub
dec
shl
int
adc
imul
lret
das
out
pop
sbb
fidivrs
xor
int
dec
mov
lock
cld
daa
dec
jno
and
sbb
xlat
int
es
inc
les
lret
std
pop
xchg
jbe
or
sahf
clc
shll
sbb
cli
and
stos
push
das
jno
imul
pmaddwd
pop
add
push
sbb
mov
aaa
sarb
sahf
pop
mov
loope
imul
jne
jge
and
jmp
lods
pop
data16
sub
push
pop
mov
jl
cmpb
push
add
mov
stos
enter
mov
inc
lods
add
cmp
inc
in
addr16
cmp
mov
mov
and
je
jb
hlt
int
xchg
jg
pushf
adc
mov
pushf
aaa
adc
aam
jns
ds
add
hlt
mov
mov
mov
xchg
out
sbb
shll
inc
ljmp
clc
and
jp
or
mov
pop
xchg
sub
rcrl
push
mov
pop
mov
and
int
jge
inc
orb
sahf
add
or
sbb
sarb
push
jl
int
gs
add
inc
jg
push
xchg
xor
xchg
mov
xchg
pop
inc
movsl
movsb
addr16
sub
imul
movsb
jle
neg
int
adc
std
or
pusha
xor
mov
mov
pop
fwait
rcrb
aad
test
add
ja
add
mov
mov
dec
or
sub
ljmp
dec
sbb
dec
xor
stos
inc
mov
lcall
ret
or
adc
dec
and
pop
lock
movsb
cmp
adc
mov
push
negb
mov
cmpb
xor
add
cmpsb
and
sbb
dec
test
test
gs
jb
jo
and
pop
jecxz
and
add
adc
adc
push
rcll
cld
lret
mov
sbbl
inc
mov
lods
in
pusha
ret
ret
decb
mov
jb
adc
enter
and
pop
push
pop
ret
in
test
fisttpll
ficomps
sbb
cltd
push
hlt
add
or
ficoms
outsb
add
lret
xor
mov
lock
jg
sub
repnz
add
sub
jmp
lret
push
clc
push
lea
hlt
push
ret
in
push
adc
push
pushf
ljmp
mov
lcall
loop
sub
shr
iret
inc
pushf
pop
xchg
mov
pop
dec
adcb
imul
insb
test
pop
or
sbb
movsb
insl
out
ss
js
xor
mov
pop
or
adc
lods
roll
xchg
and
adc
call
jnp
and
cmp
neg
test
gs
lcall
add
xor
stc
jbe
xlat
fisubl
movsb
xchg
lea
unpcklps
jecxz
sub
jns
jno
sbb
or
and
jne
repz
enter
icebp
push
pop
ds
add
xor
fwait
rolb
stc
xor
pop
mov
leave
ret
js
fidivl
sbb
or
inc
cmpsl
mov
xlat
xor
jle
add
add
mov
or
rorl
push
outsb
outsb
lcall
clc
fildl
movsl
push
mov
add
or
pop
lock
sbbl
pop
mov
sbb
enter
lock
xchg
push
push
mov
cmpsb
loop
add
in
adcl
movsl
inc
int
jb
adc
jp
imul
mov
loopne
or
sub
cmp
call
scas
dec
add
fimull
pop
fwait
lock
pushf
insb
arpl
mov
cld
pop
or
mov
add
sub
push
add
enter
inc
push
imul
jae
out
in
dec
loopne
ljmp
push
sub
dec
shrb
lea
fimuls
fidivrs
pop
sub
dec
ret
in
loopne
pop
mov
adc
cmp
incl
sbb
cmp
scas
inc
lcall
mov
cli
mov
mov
sbb
add
push
ja
mov
aaa
lock
scas
sarb
aad
lea
in
lods
push
add
in
push
lock
setae
into
loop
cli
shll
ljmp
scas
outsb
jo
call
mov
call
test
mov
ret
ret
add
lds
and
cld
cmp
les
xchg
pop
and
test
sub
lahf
sub
jbe
or
jmp
add
in
or
adc
xchg
rclb
dec
mov
xor
add
into
xor
cld
add
iret
icebp
cmp
cmpsl
mov
adc
pop
jmp
popf
je
arpl
imul
add
sbb
sti
push
scas
push
add
sbb
imul
in
bound
inc
das
mov
dec
pop
dec
pop
out
jecxz
lret
ja
cwtl
pop
in
sub
call
aas
dec
orb
add
pop
roll
jae
jb
push
outsb
or
dec
xor
push
icebp
and
push
call
mov
in
push
movhps
xchg
std
outsb
mov
rorb
add
push
pop
adc
scas
in
mov
jl
jl
and
sub
mov
jmp
jne
and
xor
xor
cmc
xor
insb
xor
fistps
pop
imul
push
test
pop
push
loop
test
in
lods
sbb
push
dec
stos
push
xchg
call
inc
mov
fsubrs
mov
xchg
aad
lret
aam
xchg
pop
imul
add
inc
pop
sbb
loop
jo
xchg
sbb
vmovapd
pop
cmp
imul
mov
jnp
lock
or
or
mov
test
dec
daa
xor
jns
mov
xchg
bound
sub
ja
xchg
nop
inc
jne
and
push
mov
outsb
popf
scas
add
cmp
jg
xor
xchg
insl
nop
loopne
pop
lods
hlt
into
das
scas
cmpsl
xchg
jl
mov
movsl
add
mov
cs
and
sbb
jle
cmc
mov
scas
gs
push
call
mov
cmp
sbb
pop
mov
and
mov
xchg
adc
and
lea
and
xchg
inc
mov
cmp
ret
push
pop
dec
dec
xchg
sbb
fcoml
jns
pusha
sbb
aas
inc
call
push
push
or
mov
push
push
xchg
clc
mov
pop
push
xor
push
xor
ljmp
fdivrs
out
rcrl
and
or
cmp
aaa
cmpsb
sbb
rolb
inc
out
xlat
sbb
xor
imul
add
add
test
and
aad
xchg
add
inc
popf
jno
xchg
or
push
mov
inc
in
inc
js
push
loopne
jp
xchg
dec
movsb
or
js
clc
js
sbb
pushf
fwait
addl
push
xor
jg
mov
push
ret
lods
and
inc
push
cld
ficompl
mov
aad
popa
test
adc
loop
icebp
adc
imul
mov
sub
roll
iret
mov
and
sbb
pop
scas
stos
and
rcrl
pop
pop
loop
loop
out
mov
mov
neg
or
in
lods
sub
inc
pop
dec
pusha
xchg
pusha
sub
or
push
addl
stos
sub
cwtl
shl
mov
mov
mov
sub
inc
data16
xor
mov
mov
cmp
inc
neg
cmp
sbb
push
testl
jge
ret
xor
fldl2t
ficoml
xchg
and
shlb
and
scas
xchg
mov
xor
cld
mov
sbbb
stos
xchg
push
lahf
aas
jp
jp
push
loopne
mov
jne
lds
pop
cmp
mov
test
imul
scas
cwtl
decb
inc
je
pop
nop
xchg
repnz
add
sub
dec
xor
scas
adc
mov
sub
adc
popf
push
dec
lds
jp
xor
cmp
shll
or
dec
or
inc
out
mov
out
pop
sub
outsb
and
xchg
xchg
bound
shrb
test
sbb
inc
inc
xchg
cltd
popf
popl
lods
jbe
sbb
bound
aaa
ds
jl
ret
stc
xorb
xchg
out
inc
dec
inc
or
push
lret
mov
dec
sub
and
mov
sbb
roll
popa
sbb
cmp
dec
xor
push
subl
fildll
es
adc
cltd
jno
lods
aaa
xchg
inc
push
stc
adc
lds
lock
inc
in
inc
pop
xchg
xchg
in
inc
inc
in
mov
cmp
cmp
popa
fs
mov
outsb
and
arpl
sbb
sbb
stos
xor
inc
lock
sbb
mov
filds
ficoml
test
jecxz
sub
pop
cmp
ljmp
sub
stos
lods
xchg
mov
loopne
pop
jl
mov
stos
movsb
data16
nop
sbb
mov
pop
out
std
loopne
mov
push
ret
sbb
subl
outsb
add
mov
imul
pop
push
jle
scas
je
sbb
mov
fmull
xchg
dec
xchg
aad
insb
outsb
or
lret
lret
nop
das
pop
jge
push
adc
lock
xchg
out
jp
pop
call
cs
jb
sbb
add
add
dec
out
or
adc
add
mov
andl
je
stos
mov
or
stos
sti
jg
add
and
xor
sub
cmc
xor
inc
addr16
rorb
jno
or
mov
push
dec
cmp
in
sub
jo
sbb
xchg
push
xchg
pop
shll
xchg
add
cmp
enter
ss
mov
lds
es
popa
mov
sub
adc
cmp
xchg
in
pop
pop
outsb
xor
test
sub
cmpsl
es
add
rcrb
xor
enter
adcb
lock
push
sbb
sahf
mov
sub
popf
lea
dec
je
lea
inc
inc
xchg
sahf
inc
insb
push
dec
or
inc
aas
daa
dec
fdivs
mov
mov
test
inc
mov
cwtl
pop
mov
add
in
and
or
in
xor
stc
stos
push
outsb
inc
mov
fiaddl
es
pop
add
or
or
test
and
push
pop
pushf
inc
lods
into
jno
adc
dec
fwait
cmp
mov
outsl
pop
int3
sti
adc
or
mov
scas
pop
add
rolb
inc
inc
mov
xor
adc
lods
hlt
push
inc
push
adcl
mov
mov
dec
nop
sahf
out
fildl
je
push
mov
add
movb
fdivs
fstpt
jle
jmp
xchg
int
loopne
int3
or
mov
in
ss
ss
mov
or
pushf
clc
shll
mov
and
iret
xor
neg
xor
decb
mov
inc
cs
dec
imul
xchg
mov
mov
std
and
sbb
mov
pop
popa
mov
lahf
push
pop
jp
fdivs
jbe
push
mov
and
add
orb
nop
iret
inc
dec
sbb
push
push
mov
xchg
pop
aam
pop
xchg
xchg
xlat
mov
lock
test
inc
push
dec
out
out
jne
icebp
call
jle
test
and
adc
fs
cld
fwait
clc
out
ret
mov
inc
xchg
pop
cs
les
aaa
loopne
xor
dec
ret
imul
pop
cs
stos
stos
inc
sahf
rolb
dec
pushf
pop
shrl
popa
scas
outsl
push
push
xor
outsl
add
xorl
push
sub
ss
push
push
mov
mov
xlat
lods
xchg
bound
xchg
or
int3
xchg
add
xchg
ret
fisubrs
mov
test
ret
xchg
or
outsl
push
jo
inc
fimuls
jle
cli
mov
sbb
pop
jbe
dec
pushf
sbb
jno
ret
mov
neg
mov
je
or
pop
push
aam
pop
mov
jb
shll
jle
jmp
pop
into
or
jnp
and
sbb
cmp
out
ja
lods
das
pop
and
mov
adc
push
lret
jmp
mov
pop
aas
loop
mov
and
incl
mov
sbb
add
push
ret
push
push
nop
jne
jl
mov
aas
or
inc
xor
pop
jecxz
std
jecxz
fdivrs
jbe
jle
mov
cmpsb
push
pop
push
mov
mov
inc
shlb
loop
les
push
push
mov
push
or
rcrb
mov
mov
xchg
js
test
shll
fstpt
and
into
je
xchg
lock
jae
sbb
or
xchg
scas
pop
push
push
aas
dec
jecxz
push
dec
lcall
cltd
xor
or
mov
inc
lcall
cli
shlb
inc
cmpb
add
jg
lods
imul
xorb
add
add
dec
fwait
push
lret
gs
orb
ja
ret
jle
shl
cmp
vpaddusw
bound
pop
push
lods
cli
dec
xor
push
mov
cmp
jp
xchg
out
mov
andl
ja
push
lea
mov
push
push
add
dec
inc
xchg
pop
cli
cwtl
sub
loopne
pop
lret
mov
mov
xor
jl
xchg
dec
mov
orb
ret
jno
xor
adc
jecxz
frstor
pop
or
jecxz
mov
in
mov
test
faddl
mov
outsl
mov
mov
arpl
add
mov
mov
in
pushf
sub
lds
pop
pop
int
cmp
push
sbb
or
xchg
and
outsb
add
ss
dec
adc
loop
push
jo
pop
mov
pop
adc
adc
aas
addr16
jno
stos
xor
dec
mov
cmp
mov
enter
aad
aaa
iret
movsb
inc
jnp
cvtpi2ps
sbb
add
pop
test
xor
outsb
push
jno
and
testl
int
sub
push
cltd
and
jge
jg
stos
mov
push
jmp
rol
lcall
ss
movsl
inc
pop
pop
mov
push
inc
mov
daa
lods
rorl
and
decl
dec
mov
inc
mov
adc
and
sub
filds
ret
inc
lret
xor
jp
pop
out
repz
mov
jae
das
sbb
mov
cmp
xor
repz
pushf
and
cs
nop
lock
sub
gs
inc
lret
add
push
inc
cltd
sub
cli
add
and
fwait
inc
fistpl
sub
sbb
lock
inc
dec
bound
and
sti
shll
push
jl
icebp
or
scas
cld
out
or
clc
test
or
sbb
sub
mov
pop
mov
pop
jns
faddl
sbb
stos
dec
pop
popa
dec
push
or
lods
scas
pop
nop
push
das
ds
adc
dec
imul
mov
lods
jmp
pushl
ss
or
adc
cmp
aas
fsubrp
repz
shll
and
add
xchg
insl
pop
dec
mov
or
mov
in
cmp
sub
mov
pop
and
int3
mov
ror
mov
pusha
clc
scas
imul
mov
addl
sbb
xchg
js
jbe
xchg
loope
adc
ficompl
sahf
mov
repnz
xchg
add
lret
stos
fdivl
dec
xchg
add
fidivl
jb
hlt
sbb
orb
fsubl
bound
test
fwait
sbb
adc
insb
dec
inc
adc
push
leave
adc
push
inc
lahf
adc
cmp
jl
mov
lock
mov
ss
pop
or
mov
mov
fcomps
movl
cmc
mov
add
movsb
and
fsubs
ljmp
and
adc
mov
push
fcmovb
xor
repnz
or
scas
xchg
cmp
stos
lods
fcmovnb
pop
pop
cmp
imul
push
push
adc
lret
sbb
push
ficomps
not
jo
cmpsl
and
inc
rcrl
int
psrad
popa
iret
mov
aad
push
out
dec
stos
jns
shr
xchg
add
push
dec
and
push
add
movsb
xor
adc
lds
or
outsl
cld
lds
inc
ljmp
adcb
clc
punpckldq
notb
jae
push
pop
rclb
jge
push
fists
call
mov
shl
sub
loop
sub
cltd
dec
cmp
int
ds
cmp
jo
mov
or
fistpll
xor
in
fcomps
outsb
call
mov
xor
cs
popa
lods
xor
cmp
pop
mov
andl
test
jmp
ss
andl
push
push
pushf
cmp
test
mov
jb
lods
fadds
or
jl
jl
inc
inc
sbb
lds
out
adc
pop
sbb
js
out
dec
add
clc
icebp
repz
or
pusha
push
xchg
mulb
sbbb
sbb
jbe
test
inc
pop
push
inc
jne
xchg
lahf
fcomps
pop
cmc
test
pop
int
aam
lea
int
ret
dec
outsb
or
mov
push
sbb
sahf
pop
adc
arpl
das
cmp
lcall
test
aas
mov
jno
pushf
and
cli
push
sub
fidivs
sbb
ds
add
sarb
add
les
push
cwtl
push
cld
mov
mov
fisttpll
sub
sbb
test
lods
push
add
xchg
aam
push
push
roll
jnp
aas
cmc
jns
mov
lock
lods
push
add
insb
mov
cwtl
inc
cmp
into
push
dec
sub
shl
adc
fiaddl
xchg
orl
cld
sbb
dec
sub
xchg
pusha
add
xchg
arpl
das
adc
sbb
and
addr16
fdivrp
daa
shlb
xchg
xchg
paddb
adc
pop
xchg
cmp
lea
int
movsb
mov
ja
push
sub
rorb
cmp
mov
xor
mov
int3
xor
xor
add
push
push
out
fnstsw
jecxz
xchg
loopne
jecxz
ds
sub
shrb
mov
mov
mov
cli
jnp
je
jl
pushf
cli
shll
mov
repz
xor
xchg
fists
dec
je
movsb
or
xor
divl
fs
push
push
inc
cld
stos
or
jmp
gs
xor
dec
xchg
push
sub
in
mov
hlt
fimull
sbb
stc
add
out
jmp
cwtl
mov
adc
or
jg
mov
das
ret
add
dec
sub
dec
xchg
icebp
lods
ljmp
push
std
hlt
jb
adc
fs
clc
push
inc
push
fwait
jle
pop
push
ret
out
xchg
add
add
cmp
aad
int3
adc
or
hlt
mov
mov
movb
jg
dec
push
add
rorb
add
test
fstps
add
hlt
sahf
mov
mov
stc
push
outsl
popf
lds
jge
loope
add
adc
inc
aaa
lret
mov
dec
or
lahf
fdivl
add
ficoms
lcall
sbb
cwtl
cs
fiaddl
jl
xchg
or
arpl
testb
push
sub
xor
or
rorl
and
and
shll
mov
or
mov
notl
xor
fwait
mov
push
stos
sbb
stos
scas
and
inc
mov
add
inc
push
mov
jp
rcr
adc
push
xor
xchg
stos
jbe
leave
jecxz
jg
or
push
sub
xchg
mov
add
jne
adc
cmpsb
in
mov
lahf
fmul
mov
repz
sbb
call
loope
add
aad
xor
mov
sub
incb
mov
cmpsl
cli
fsubr
loope
adc
mov
addl
push
js
movsb
mov
push
out
add
scas
jo
movsb
leave
daa
add
sarb
cs
inc
iret
or
dec
clc
cld
rcl
inc
inc
xlat
outsl
jne
scas
mov
loop
xor
dec
sub
js
add
hlt
dec
cmp
fldenv
sbb
sub
mov
lcall
add
bound
pop
dec
and
sbb
or
xlat
dec
repz
sbb
mov
fstp
or
cmpsb
inc
cwtl
sbb
push
mov
rolb
cmc
enter
sub
in
jmp
lods
into
shlb
pushf
fidivl
lcall
pushf
sub
sti
ja
mov
mov
fmuls
pop
add
pop
lds
pop
mov
cmp
fldl
lea
lock
pop
sub
ficoml
or
or
shll
jnp
out
add
or
pop
je
jo
cmp
add
sbb
dec
subb
ja
sbb
dec
jb
add
push
push
into
daa
adc
jnp
add
jno
in
cli
pop
mov
jle
adc
push
push
mov
pop
pop
scas
mov
add
inc
scas
stos
mov
lret
fsubs
sbb
sbb
loopne
mov
lahf
decl
mov
jl
jnp
out
ds
sbbb
mov
cmp
popf
es
test
mov
xor
rcrl
add
test
jno
sbbl
and
add
or
icebp
pop
call
stos
add
ret
fcmovb
mov
lret
push
or
data16
cltd
mov
push
mov
xchg
jge
pop
and
subl
ret
cmp
fwait
sub
cli
lock
and
test
clc
loope
aam
jmp
xor
or
add
out
jmp
pop
gs
mov
out
int3
or
add
inc
addb
jbe
or
dec
dec
adc
clc
xlat
notl
push
andb
sarl
movsl
inc
cmp
lock
pop
shr
dec
or
sub
adc
mov
xchg
rcrb
stos
cs
scas
int
repz
out
and
sbb
sub
add
and
fwait
adcb
pop
or
xchg
push
dec
push
push
aaa
adc
loopne
pcmpeqb
fildll
xor
repnz
arpl
xor
mov
sbb
cmp
mov
sbb
push
or
ret
inc
xor
sbb
sti
jg
lret
shlb
fcoms
sbb
mulb
repnz
add
xlat
subb
sub
cltd
lea
push
cs
mov
sbb
hlt
sbb
jp
call
testb
cmp
cmpsl
in
jne
outsl
lock
out
loop
pop
sbb
xor
flds
clc
cmc
loop
xlat
sbb
nop
push
jbe
jg
mov
loopne
adc
push
lahf
lret
rorl
xchg
and
inc
in
inc
insb
jl
add
mov
dec
pushf
hlt
push
push
incl
dec
addr16
adc
fcomi
movsl
push
into
inc
jo
xchg
sarb
jno
loopne
mov
add
mov
test
push
js
push
cmp
jle
mov
inc
or
or
sub
or
pop
lods
inc
push
sbb
or
sahf
data16
jne
mov
ljmp
ror
subl
and
jbe
or
icebp
outsl
dec
bound
sar
jne
jl
adc
ljmp
adc
dec
jo
mov
jge
push
sub
addr16
inc
es
in
dec
cmpsb
and
in
cli
ret
push
fmul
out
jnp,pt
icebp
bound
mov
fisttpll
mov
das
repnz
movsl
jp
mov
sub
add
sar
xor
hlt
dec
popa
mov
dec
cs
fimuls
sub
js
stc
psubsb
ficoms
pop
out
cli
or
or
xor
sub
cs
loop
cmc
lea
xchg
lcall
adc
je
test
jb
hlt
sbb
pop
and
jno
cmp
popa
popl
cmc
inc
movb
fnsave
and
pop
sub
inc
add
sub
jns
popa
mov
add
nop
popa
cmp
sbb
shrl
or
push
push
repz
and
lock
xchg
movb
and
inc
gs
sbb
or
dec
mov
lods
sbb
outsl
mov
jnp
push
or
bound
sarb
in
and
mov
mov
ljmp
es
imul
lcall
fimull
push
push
sahf
xchg
dec
fsubl
cld
sbb
scas
sbb
test
or
mov
cli
pop
test
fdivl
cli
adc
iret
mov
xor
adc
push
sub
cld
setge
add
hlt
adc
adc
ljmp
popf
or
mov
sub
inc
sahf
inc
pushf
xor
pop
cmpsb
aas
ret
mov
mov
add
ret
add
shll
adc
and
lcall
loope
xlat
jns
dec
push
adc
fstpt
popa
inc
push
mov
inc
and
or
and
test
sbb
imul
mov
fs
lock
dec
inc
ret
mov
xor
mov
and
cmp
fsub
repnz
xchg
pusha
mov
cli
clc
jp
sarl
rorl
rcr
mov
outsb
scas
sbb
push
add
jecxz
stc
dec
add
add
jp
mov
icebp
test
or
mov
jae
movsl
fcom
loopne
push
pop
lahf
adc
mov
push
rclb
mov
mov
loopne
into
sbb
and
cmp
or
mov
sarb
mov
mov
push
adc
hlt
mov
outsl
push
scas
jbe
push
dec
int3
xor
dec
stos
cltd
stos
fisttpl
ret
mov
pusha
push
push
mov
shl
mov
out
and
loope
cmp
dec
bound
pop
sarb
inc
ret
stos
fsubrl
lock
roll
pop
outsl
sahf
pop
pop
mov
mov
sub
push
iret
mov
jmp
test
mov
mov
stos
adc
call
ljmp
into
pop
add
daa
mov
adc
push
inc
inc
mov
aas
push
xchg
fcomi
push
jne
fdivl
shr
fiaddl
test
push
lahf
rcrl
sub
xor
fcomi
cmp
cmp
add
inc
sub
dec
or
push
cld
cmp
dec
scas
popl
xchg
xor
fsubrs
shr
jne
jns
mov
ret
jl
xchg
out
add
push
les
scas
mov
adcb
xchg
nop
jge
nop
addr16
sub
lds
cmp
jne
das
mov
rclb
ja
sbb
lods
cmp
sub
test
cli
pop
pop
leave
ret
inc
js
std
inc
out
dec
lock
push
js
pop
push
shlb
cs
push
add
add
jge
cld
dec
mov
lods
mov
jp
mov
sub
cmp
imul
mov
jle
adc
shr
psrlq
add
ljmp
mov
jg
dec
test
add
dec
popa
cmp
lahf
bound
push
mov
mov
fbld
xchg
insl
fldcw
jg
xor
inc
loop
mov
lcall
xchg
mov
pop
or
nop
inc
mov
push
pop
push
mov
addb
sub
mov
daa
fwait
or
cmpl
cmp
or
jns
out
or
movsl
loop
xor
pop
addr16
mov
leave
xchg
ds
js
les
cli
movsb
mov
or
rclb
rcrb
stc
cmp
pop
stos
int
js
inc
mov
add
in
clc
sub
push
mov
mov
mull
sub
mov
loop
push
fistps
push
bound
loopne
js
xchg
sbbb
adc
loope
mov
jno
push
push
mov
outsb
mov
xor
push
ja
sbb
add
adc
imul
mov
push
inc
mov
mov
in
xor
insl
mov
lock
addr16
iret
add
mov
add
aaa
gs
cli
dec
xor
push
cmpb
cmp
dec
xlat
push
cmp
je
nop
stos
push
xchg
sbb
ret
lods
mov
sub
sti
xorb
add
shr
push
jnp
and
popf
pop
les
and
cmpsl
jle
xor
hlt
and
lcall
jl
ljmp
fdivl
add
lods
push
cli
jo
mov
ljmp
inc
nop
mov
lea
int3
decb
stos
decb
pop
enter
xor
insb
cmpsb
call
xor
je,pn
clc
add
fcompl
stos
out
xlat
adcl
jecxz
mov
fidivl
lods
fwait
insl
mov
mov
xor
loop
jmp
push
cli
es
addr16
in
iret
ud0
in
cmp
cmpsb
addb
xor
nop
adc
push
icebp
mov
clc
mov
push
mov
insb
cmpb
inc
fbstp
test
jge
les
pushf
or
cli
aas
outsl
fs
loopne
cli
fmull
cmc
or
jne
jecxz
mov
push
push
push
and
xchg
pop
sbb
fs
popf
xchg
dec
dec
jbe
jo
pop
in
add
pusha
cld
inc
call
shufps
cld
rorl
fnstsw
inc
outsl
inc
das
cli
sarb
call
push
mov
outsb
or
insb
je
call
add
dec
addr16
lods
mov
xlat
fsts
in
sbb
inc
xchg
sbb
push
mov
loopne
mov
dec
push
data16
push
pop
movsb
sbbb
jge
or
cmp
adc
hlt
pop
add
in
dec
cmpsb
mov
out
pop
mov
cmpsl
shl
loop
mov
imul
push
fwait
push
adcl
push
pop
fldt
xchg
clc
push
inc
push
aam
and
jp
daa
imul
sub
cmp
lahf
inc
mov
inc
daa
fdivl
cmp
jle
cwtl
dec
mov
add
sbb
scas
sbb
fidivrs
pop
or
lret
add
mov
push
mov
and
out
ret
dec
das
loope
xor
mov
test
mov
dec
cltd
lcall
push
les
push
jns
cs
push
fcom
pop
jg
add
mov
daa
sbb
and
shlb
cwtl
add
pop
jnp
repnz
lock
test
xorps
pop
lock
in
dec
icebp
mov
lret
data16
lahf
xor
xlat
loopne
mov
aaa
sbb
push
and
push
ficoml
inc
shl
movsb
inc
leave
mov
subl
outsb
xorb
xor
inc
dec
adc
subl
insl
jmp
xchg
jmp
ret
push
andb
xchg
push
sbb
adc
in
cmp
out
push
adc
ficoms
call
sar
sub
stos
imul
dec
stos
push
adc
loope
jle
pushf
cmpsl
inc
and
mov
or
aam
iret
rcl
sub
push
test
lock
jmp
std
fisttps
ds
push
data16
notl
sbb
xlat
xchg
cmpsb
sub
stos
and
ret
mov
aad
add
mov
push
stc
jg
xor
roll
adc
add
scas
sbb
test
dec
and
popf
ret
cmpsl
aaa
jp
cmp
jp
dec
test
sbb
les
inc
ds
dec
xchg
lret
mov
push
movsb
adc
out
xor
and
cmpsb
js
sub
cmp
mov
dec
push
or
les
sbb
jb
push
xchg
pop
sbb
jecxz
test
lcall
fadd
push
pop
ret
nop
mov
jp
in
popa
sti
into
out
cmc
xchg
jnp
sub
xchg
or
pop
fnstcw
out
inc
jns
sub
cld
test
lock
stc
mov
ret
dec
mov
mov
pop
sbb
push
inc
mulb
sahf
test
inc
ficomps
cli
dec
adc
inc
xchg
dec
aam
push
inc
cmc
fincstp
pop
mov
jno
push
icebp
out
cli
int
loope
add
andb
ficomps
sbb
or
sub
xchg
cmpsb
mov
mov
cmpsb
mov
mov
andl
push
jne
rorb
addr16
adc
xor
sub
sahf
and
sbb
es
ljmp
jb
sub
and
sbb
sub
lods
clc
xor
shlb
mov
push
data16
adc
sbb
xchg
ret
int3
out
scas
mov
push
mov
inc
inc
in
and
loopne
mov
dec
loop
mov
adc
mov
xor
flds
hlt
fdivs
jbe
sbb
scas
pop
jmp
lods
and
jmp
lods
sbb
xor
aam
add
aad
add
cmp
xchg
mov
movsb
sub
inc
int3
hlt
or
subl
into
xchg
jecxz
loop
inc
jb
sbb
push
and
adc
adc
mov
or
movd
hlt
lret
xor
jg
and
or
mov
dec
pop
lods
clc
into
daa
push
push
movsb
imul
inc
pop
mov
ret
jl
and
jg
or
lcall
fsubrl
or
sub
cld
ret
arpl
rcrl
loope
faddp
sbb
cmpsb
sbb
hlt
sbb
fnstsw
adc
jmp
push
mov
insb
test
in
or
jbe
ficomps
and
ds
leave
aaa
leave
inc
xchg
out
imul
mov
xchg
xchg
push
mov
xchg
xorb
pop
insb
adc
aas
push
cmc
xor
and
pop
insl
cmp
or
cmp
or
mov
pop
cmp
and
fistpl
mov
jne
inc
aas
dec
push
mov
ret
cmp
xchg
xchg
loopne
mov
mov
ret
das
mov
inc
cmp
cmpsb
jmp
test
andb
imull
mov
xchg
insb
call
push
cld
or
std
clc
hlt
fistpl
push
repnz
add
stos
jp
pushf
pop
jg
rorl
push
inc
dec
mov
iret
daa
add
and
loopne
xchg
sbb
jno
mov
sahf
clc
repnz
int
mov
jbe
lock
imul
or
or
cmp
lods
or
fs
adc
std
add
sbb
sub
movsb
gs
or
or
aas
test
dec
int
in
outsb
iret
adc
outsb
pop
add
adc
pusha
enter
shlb
andb
push
stos
aad
aas
push
or
mov
dec
xchg
adc
jns
lds
data16
inc
mov
cmpl
lret
push
add
sbb
sbb
pop
or
inc
cmp
or
outsb
rcl
cmp
push
xchg
and
ret
test
insl
add
leave
jecxz
push
rol
mov
std
xchg
lret
je
push
mov
sbbb
std
lahf
mov
sti
stos
push
ret
clc
mov
les
push
xor
add
jg
sahf
lea
push
push
les
mov
mov
ja
push
add
arpl
dec
cld
push
ss
sahf
clc
push
outsb
jl,pt
sub
xor
pop
add
clc
mov
shll
les
push
mov
aad
xchg
les
mov
out
push
or
xor
adc
xchg
push
mov
aas
daa
imul
test
ljmp
loop
mov
aaa
mov
arpl
or
mov
sbb
mov
push
add
push
dec
aaa
inc
mov
inc
adc
or
jo
add
imul
out
add
mov
inc
pop
lods
mov
inc
dec
xchg
shrb
mov
fcomp
testb
pushf
out
or
push
and
adc
in
addl
jnp
aam
mov
lods
call
mov
mov
loopne
xor
call
out
push
imul
mov
fwait
add
sbb
cld
cmp
into
scas
mov
pop
sbb
and
or
jp
push
stos
pop
aam
pop
call
push
ds
mov
push
jmp
add
push
mov
cmc
cmp
jecxz
js
adcb
dec
lods
add
fwait
into
test
sub
test
xor
mov
nop
inc
push
js
arpl
dec
jnp
sti
lcall
mov
adc
test
insl
pop
push
roll
mov
mov
adc
pushf
sub
lods
inc
jecxz
into
dec
sbb
clc
mov
xor
xchg
js
push
and
frstor
xchg
sbb
xchg
adc
leave
scas
mov
jle
pusha
js
cmp
lds
inc
mul
mov
and
adc
shlb
jle
gs
sub
mov
xlat
pop
mov
xor
sub
cmp
add
add
in
dec
aad
dec
xor
push
enter
or
fmul
mov
jmp
aam
mov
decl
loop
mov
cmpsl
inc
push
pop
popa
sbb
adc
push
mov
lods
mov
xor
es
call
das
inc
cmp
adc
and
sbbb
push
cli
push
int3
aam
inc
jns
adc
mov
inc
outsl
dec
push
in
cmp
incl
adc
fdivrl
dec
insl
mov
sbb
xchg
push
cmp
mov
call
mov
daa
cltd
pop
xor
dec
insl
xor
and
stc
insb
adc
shlb
aad
rorl
in
pop
fimull
pop
or
mov
mov
xchg
push
insb
scas
pop
aas
pop
movsl
je
jmp
mov
aam
sub
gs
insl
orb
movsl
ja
dec
lds
adc
insl
or
mov
dec
mov
jge
adc
jb
mov
cli
shlb
je
push
jnp
leave
dec
add
or
loopne
ja
adc
aam
and
push
and
call
and
inc
or
push
cmc
mov
inc
pop
inc
rol
mov
enter
push
test
loop
mov
xor
fdivr
jb
xor
movsb
push
sbb
fsubrs
cmp
lret
inc
pushf
lcall
rorb
or
cld
ret
and
jle
pop
ds
add
mov
mov
jp
iret
test
push
mov
ja
enter
add
inc
in
fcoml
loopne
lret
add
push
jb
test
hlt
mov
or
mov
test
lahf
jb
add
inc
lahf
fistpl
lods
shl
les
dec
jno
lock
pop
icebp
testl
inc
ret
pop
push
fsubl
shll
popa
sub
movsl
xchg
div
icebp
cmp
mov
add
mov
xlat
out
jae
out
sub
std
scas
add
inc
pop
dec
lret
mov
pop
fisttpll
mov
pop
xchg
fadds
jmp
stos
dec
jb
xlat
add
clc
ret
add
jae
sar
xlat
and
adc
stos
lock
or
pusha
in
fiadds
ljmp
je
sub
addb
test
push
sub
pop
loope
repz
pusha
xchg
inc
ss
mov
adc
jae
in
scas
pop
sub
sub
aam
add
jmp
add
push
push
scas
xor
popf
loop
jecxz
imull
and
cmpsb
shlb
push
or
xchg
scas
jl
jo
fs
inc
add
repnz
pop
push
icebp
push
mov
and
xor
jge
mov
pop
mov
cli
xchg
xchg
insl
hlt
lcall
push
int3
dec
push
add
cmc
adc
dec
in
push
inc
add
rolb
sbb
sub
lret
xlat
pop
and
pusha
ret
into
clts
cld
add
push
dec
mov
loopne
dec
adc
fs
pop
mov
pop
arpl
nop
pushl
mov
out
mov
pushf
mov
xchg
mov
xor
subl
sub
pop
insl
and
mov
lds
nop
lcall
and
lods
clc
pop
testb
pop
or
xor
and
push
push
and
aad
xor
inc
mov
mov
pop
add
fsubr
inc
and
aas
mov
or
aam
jbe
rcrl
test
add
psubb
stos
lcall
xchg
xor
popa
jbe
push
push
ja
and
ljmp
or
loope
mov
push
decb
lock
lret
dec
aad
jmp
clc
pop
imul
and
xchg
sub
pop
mov
aam
int
or
stos
inc
jb
mov
jl
pop
mov
push
mov
mov
cmpsb
test
xor
push
cli
xor
lret
or
in
sub
rolb
mov
loope
adc
sbbb
inc
push
xor
jle
insl
xor
push
shl
mov
xor
in
loop
mov
lds
sub
das
mov
fcompl
inc
int
fisttpl
incl
imul
inc
inc
cs
rcr
sarl
mov
lods
into
fcompl
jns
fdivrs
xor
adc
scas
mov
sub
inc
pop
mov
mov
movsb
mov
je
sbb
rcll
sbb
aas
sbb
xchg
jecxz
xchg
das
lret
enter
sarb
out
inc
or
mov
fistl
lahf
sar
add
jp
push
lret
rcrb
fwait
stos
sbb
fsubl
pop
mov
pop
in
or
dec
cmp
lea
outsb
fidivl
mov
imul
sbb
mov
aad
xor
mov
sub
push
adc
cmp
dec
ret
ljmp
sub
cmp
cld
pop
rolb
sbb
xchg
jge
cltd
fwait
jmp
pop
loopne
push
cmc
mov
movl
sahf
mov
add
inc
insl
rolb
call
test
imul
jge
rcr
jge
scas
add
sub
movsl
or
dec
hlt
pop
addr16
pop
xchg
sbb
fisubrl
adc
jp
push
xchg
inc
clc
out
lods
inc
xchg
jg
inc
fidivl
loop
pop
loope
out
daa
xchg
in
add
test
sbb
shl
nop
imul
jo
stos
xchg
pop
mov
int3
mov
push
adcl
mov
shrl
lds
shl
ds
popa
push
sub
xchg
cwtl
fprem
push
nop
sbb
and
data16
outsb
sbb
out
jno
int3
shll
add
xchg
mov
sbb
pop
frstor
pop
add
aaa
dec
cmpsl
add
xchg
dec
sub
xchg
mov
add
pushf
mov
aaa
jl
pop
sbb
push
mov
mov
adcb
out
scas
iret
mov
lcall
int
add
jge
stos
scas
jp
mov
xchg
add
clc
aas
jp
inc
mov
sar
add
cli
and
test
scas
pushf
std
mov
push
or
bound
adcb
cmp
aaa
pop
mov
mov
hlt
add
adc
lahf
test
adc
adc
cltd
push
cld
scas
xchg
inc
cli
fbstp
jo
stos
fs
cmp
repz
insl
add
ret
ja
add
mov
xor
adc
adc
std
mov
mov
call
mov
vorps
inc
cmpsl
dec
loope
add
jecxz
mov
or
push
mov
cmpsb
insl
clc
dec
lock
push
jb
scas
incb
push
cwtl
add
sub
mov
pop
mov
push
push
sub
std
inc
mov
inc
dec
or
arpl
int
xchg
ficoml
sahf
mov
jno
lock
mov
out
icebp
fldenv
jle
pop
andb
pop
jecxz
pop
cmp
mov
push
sub
pop
icebp
mov
mov
lret
cmp
jle
add
xchg
mul
push
sbb
pop
mov
cmpsb
out
xchg
in
push
repnz
pop
jp
pushf
mov
mov
cmp
call
ds
cli
mov
pop
icebp
inc
stos
popf
cmp
xor
shrb
jo
add
push
or
notl
ljmp
out
mov
and
mov
or
jge
sbb
nop
fs
xorl
loope
fdivrs
fidivs
lahf
scas
cmp
js
push
rcrl
dec
loop
jb
inc
cmp
ss
lahf
shrb
xor
rorb
mov
and
adc
ret
or
sub
repnz
inc
repnz
xchg
nop
mov
inc
imul
lock
adc
mov
xchg
add
jo
jp
dec
jmp
cmpsl
icebp
push
test
mov
or
sbb
sub
lods
mov
push
leave
subl
xchg
movsl
shlb
pop
cmp
xchg
add
sbb
cwtl
and
icebp
add
fstpl
loope
out
into
cli
sbb
or
sahf
lods
xchg
rol
lret
ljmp
adc
adc
push
enter
dec
mov
add
add
in
sbb
movsl
xchg
push
dec
cmp
and
les
pop
add
or
push
cmp
cmp
clc
mov
add
adcl
push
call
pop
inc
dec
mov
inc
sub
clc
mov
lock
inc
mov
or
sar
sub
lcall
add
outsb
and
add
sub
sbb
ds
xchg
push
loope
jmp
cmpsl
imul
rolb
stc
outsl
sub
or
pop
or
mov
xchg
jnp
and
nop
movsl
xchg
mov
stos
sbb
dec
xlat
or
cmp
test
icebp
and
adc
push
popl
arpl
lea
mov
jl
rorl
lcall
adc
jno
jle
push
jge
aaa
add
jns
fwait
test
push
ret
ret
cmc
jmp
push
xchg
xor
jo
add
cli
stc
adc
lret
imul
mov
arpl
pop
pop
out
fldl
jge
mov
adc
pop
clc
adc
lret
push
jecxz
jno
jno
bnd
cmc
fisttps
scas
sti
jno
aas
icebp
outsb
sbb
or
mov
push
adc
sub
jg
test
mov
popa
decb
les
mov
adc
add
pop
ss
lock
cmpsl
xor
adc
lcall
sbbl
mov
call
pop
mov
mov
xor
push
xchg
pop
jg
sub
test
cs
jae
faddp
outsl
repz
stc
mov
shll
ficompl
pushf
pop
filds
adc
push
sahf
retw
lds
dec
mov
outsl
shr
cmc
cli
data16
dec
and
outsl
xchg
mov
cmpsb
mov
aaa
xor
add
or
lcall
dec
dec
in
decl
sbbb
mov
fsubl
mov
movsb
popf
ret
push
and
jecxz
stc
cld
dec
fcmove
aam
test
mov
adc
inc
cmp
sub
pop
or
xlat
cmc
xchg
or
pop
sub
pushf
push
rorl
out
cmp
addb
add
std
fcoml
xor
inc
pop
insl
jnp
pop
mov
popf
and
outsl
test
js
dec
hlt
xorl
jle
sbb
das
jbe
mov
test
dec
jne
push
add
mov
mov
mov
fdiv
cmc
fsts
ja
add
in
out
jl
repnz
dec
clc
pop
push
mov
popf
mov
jb
jnp
inc
pop
hlt
iret
bound
jl
or
mov
aas
lods
and
rolb
mov
and
jl
xorb
push
pusha
pop
push
cs
and
push
sbb
outsb
and
adc
aad
mov
xchg
shrb
test
inc
mov
jmp
push
nop
mov
xor
ljmp
imul
and
push
sub
push
test
shl
inc
mov
out
push
cmp
imul
cmpsb
pushf
push
out
sti
mov
xchg
pushf
jp
mov
movsl
mov
add
xchg
push
lock
shll
mov
cli
xchg
aad
xchg
pop
cmp
dec
cmp
enter
loopne
cmp
adc
out
jb
xorl
or
out
hlt
ljmp
jae
xchg
cmp
push
xor
inc
dec
std
pop
mov
aam
int
scas
nop
xor
inc
shll
negl
inc
gs
or
add
insl
mov
nop
mov
xchg
or
leave
sub
arpl
lret
sbb
ret
xchg
mov
daa
pop
lods
or
test
xchg
mov
xchg
or
test
test
jmp
call
xchg
ja
scas
pop
sbb
xor
dec
rolb
xchg
cmp
mov
sub
mov
xchg
mov
adc
pop
sbb
inc
mov
cwtl
gs
daa
and
pop
popf
icebp
loope
mov
or
and
or
pop
loope
fbld
das
or
popa
aaa
fwait
dec
add
sub
movl
inc
push
push
jbe
push
mov
movsb
push
clc
pusha
xor
adc
cmp
out
scas
xchg
in
sbbb
or
lods
pop
mov
push
enter
or
js
loope
loopne
jne
adc
sub
cmc
adc
xchg
stos
test
sub
cmc
stos
repnz
fldt
jecxz
push
xchg
push
adc
cs
mov
inc
in
stos
ja
stos
push
popa
mov
push
adc
lret
incl
call
insl
sbb
dec
test
scas
rclb
cmc
insl
popf
movsb
pop
mov
cmp
push
out
adc
xor
mov
add
xchg
cmp
pop
sub
or
rcl
push
pushf
jns
push
lahf
push
popf
cmc
movsl
cmp
icebp
lret
or
popf
scas
sbb
add
adc
dec
out
or
test
lcall
scas
cltd
dec
pop
sub
jnp
les
or
mov
pop
xchg
mov
cmp
adcl
mov
pop
add
xchg
push
lcall
clc
shl
bound
stos
mov
jbe
addl
lret
add
cmp
cmp
loop
cld
pop
mov
sub
je
movsb
fcomi
jbe
xor
inc
jmp
or
xchg
push
jo
xchg
frstor
dec
sub
jg
addl
filds
lds
ret
push
add
or
out
call
push
adc
mov
jmp
cmp
test
xor
lahf
add
dec
pop
push
pop
jge
mov
rcll
sbb
pop
stos
inc
cmp
add
lcall
xchg
cmp
xchg
mov
xlat
xlat
add
mov
call
stc
push
in
push
test
inc
out
add
mov
xchg
or
or
xchg
xor
dec
sub
adc
pushf
lock
jmp
popa
gs
inc
bsf
and
lock
dec
inc
fwait
lock
pushl
pusha
sub
jmp
ret
lock
mov
shlb
cmp
in
mov
xor
jp
xor
xor
and
pop
mov
gs
scas
ljmp
xchg
push
inc
movsb
push
xchg
mov
test
mov
pop
push
jno
add
pusha
fs
mov
push
xor
pop
xlat
pop
lock
or
fildll
cmp
sbb
jnp
addb
ss
push
inc
pusha
cmpsl
stos
rcrb
dec
ja
ret
addr16
xor
or
or
dec
lea
cmp
fsubl
xor
nop
add
or
movl
push
test
push
dec
adc
push
ja
push
lea
pushf
push
test
jae
mov
pusha
in
loope
mov
loopne
popf
xor
cmpsb
add
push
mov
arpl
lret
adc
mov
jecxz
or
jae
clc
aad
push
das
pop
test
inc
stc
repnz
or
jmp
adc
inc
pop
mov
mov
fnstcw
or
adc
out
movsl
lret
and
sub
or
sub
mov
loop
add
insl
lret
es
and
push
sub
push
and
mov
cld
in
ja
call
dec
leave
mov
inc
dec
adcl
aad
stc
loope
mov
dec
mov
loop
add
xor
daa
mov
jmp
xor
test
push
dec
in
iret
push
bound
dec
inc
out
xchg
stos
jo
pop
loopne
sub
out
imulb
lret
mov
dec
mov
shlb
pop
or
mov
push
les
stos
and
cli
repz
sub
js
sbb
add
pop
test
sbb
outsl
xchg
push
push
loopne
mov
cmp
aaa
ds
sbb
lods
ret
mov
popf
testl
mov
xchg
inc
push
fmull
lds
movhps
das
incb
pop
fiadds
mov
cmp
mov
data16
jmp
inc
fnstenv
xlat
push
push
fs
fldl2e
add
mov
aam
popa
inc
gs
lahf
push
mov
lahf
jbe
adc
test
outsl
xchg
rcrl
pop
lods
mov
js
test
push
cmpsb
repz
fistl
inc
mov
adc
sti
test
jne
fimull
sbb
mov
lret
push
shrb
fistl
xchg
das
rorl
imul
scas
sub
or
adc
jle
xor
jns
mov
ret
sbbl
ficomps
addl
xchg
inc
popa
mov
fnstcw
pop
outsl
lock
adc
add
ret
outsb
ret
or
jae
add
icebp
std
mov
jecxz
push
jle
dec
cmpxchg
fistpl
daa
mov
mov
xchg
mov
jo
out
shrb
popf
jne
inc
inc
decl
sbb
into
xor
enter
ss
fwait
mov
mov
pushf
mul
xor
adc
icebp
shrl
pop
out
outsb
dec
cs
dec
addl
sub
es
test
sbb
adc
mov
jle
xlat
pop
popf
in
inc
sub
mov
and
rcrl
push
jbe
mov
xchg
sbb
lahf
jnp
sbb
mov
je
push
cmp
lea
add
fs
aaa
push
add
dec
push
mov
adc
jo
out
cwtl
adc
xchg
fucomp
cmp
or
subb
xor
clc
inc
mov
push
mov
test
ds
adcl
sbb
jp
int3
add
add
sbb
cltd
jg
cwtl
sbb
mov
mov
nop
cmp
clc
sbb
cs
insb
lea
les
or
pop
rcll
movsl
shl
push
out
lahf
sbb
pop
mov
popw
shl
push
fidivs
shl
test
sbb
adc
loope
adc
filds
xchg
jbe
fdivr
push
mul
movsl
mov
fwait
pusha
add
loopne,pn
repz
or
rorl
jg
shlb
out
dec
and
cld
push
dec
pop
adc
fsubr
or
jno
dec
bnd
cs
lcall
xorb
call
dec
movzbl
movsb
xor
inc
inc
jge
shlb
addr16
js
es
rcrb
or
push
adc
or
push
push
and
cmp
sbb
jl
ljmp
xchg
mov
je
scas
rol
movsb
sub
nop
fiadds
setno
jne
cmpsl
pop
push
or
ret
cmp
mov
or
sub
and
or
insb
orb
and
int3
dec
xor
pop
mov
test
cltd
imul
dec
pop
stos
lcall
mov
test
sbb
ljmp
push
lock
arpl
rorb
and
adc
pushf
xchg
push
push
xor
in
xchg
push
add
cltd
loop
pop
sub
mov
lahf
js
je
pop
cmp
cld
shufps
adc
sbb
hlt
sbb
and
sub
jb
imul
shll
pop
leave
in
stos
lods
pop
or
test
sbb
jge
addr16
pop
adc
xor
mov
xor
pop
dec
mov
xchg
push
mov
adc
enter
xor
cli
inc
and
cmpsl
stos
push
das
push
inc
andl
mov
fidivrl
push
sahf
std
mov
add
popa
loop
xchg
mov
jns
sbb
aas
pop
ret
jo
mov
std
test
sbb
jge
pop
aas
lret
xchg
repz
movsl
orb
subl
inc
sti
add
stos
mov
xchg
in
add
jbe
xchg
scas
lea
adc
imul
xchg
mov
test
stos
cmp
dec
pusha
sub
test
push
inc
mov
xor
pop
in
roll
loop
jmp
jg
adc
and
shll
push
bound
ret
push
dec
adc
scas
stos
jge
dec
shrl
mov
aaa
xor
inc
mov
mov
popa
mov
inc
iret
fucomp
adc
or
cmp
push
jp
sbb
add
push
ljmp
notb
or
shlb
fs
movsb
pxor
pop
xchg
mov
add
sbb
jg
mov
sub
adcl
fucomip
lret
dec
inc
mov
adc
mov
mov
jecxz
and
xor
fidivl
shlb
in
jmp
mov
cmpsb
gs
inc
mov
push
movsl
aad
mov
dec
lcall
lret
mov
or
rolb
int
xchg
mov
push
insb
int3
shld
jne
iret
xor
rclb
rcll
adc
rcr
adc
jmp
in
test
loopne
cmp
mov
or
or
mov
adc
cmc
loope
int
aad
cwtl
xor
rcrl
repz
or
sbb
scas
scas
std
stos
push
fnstsw
test
pop
inc
pop
clc
lcall
mov
push
mov
dec
sbb
dec
ljmp
loop
int
pop
mov
lds
mov
pop
xchg
push
mov
hlt
loop
aaa
sub
cmc
adc
lods
mov
mov
cmp
ja
std
xor
xchg
push
nop
incl
xchg
add
loop
mov
sti
mov
push
dec
jb
into
push
add
sub
dec
mov
ss
push
out
mov
adc
jne
sub
inc
lods
xor
imul
inc
andl
xor
push
popa
jae
dec
fldenv
stc
shlb
lret
out
push
and
insb
aam
addb
jle
ret
pop
aas
lret
jbe
push
sbb
shlb
sbbb
jnp
xor
push
addl
rcrb
push
inc
jle
bound
inc
push
lds
adc
jge
xor
add
or
or
lahf
pop
xchg
shlb
inc
sbb
and
jo
jmp
lock
push
adc
dec
mov
pop
mov
addl
dec
movsl
dec
pop
stos
lret
mov
mov
sbb
clc
mov
je
jge
dec
xchg
scas
cmp
dec
jo
cmc
cmpsl
push
dec
push
sbb
cmp
imul
fnsave
clc
test
shrd
pop
imul
or
adc
cmp
dec
mov
inc
jg
lock
sahf
sbb
mov
cli
das
rorb
sub
xchg
das
mov
mov
lea
sbb
sub
dec
inc
lahf
adc
std
sbb
push
or
fsubs
insl
mov
mov
mov
sbb
inc
jnp
pop
lret
pop
inc
push
xor
lods
loop
into
xchg
mov
pop
movsb
js
xchg
mov
insl
or
push
test
shrb
out
stc
inc
arpl
lea
pop
adc
loopne
ss
into
loope
jo
or
cmp
repz
testb
xor
or
mov
shrb
fimull
pop
icebp
mov
add
or
bound
call
pop
add
into
mov
int3
js
dec
or
outsl
fimull
das
xor
push
push
cmp
loopne
push
lds
mov
addb
pusha
push
inc
push
xchg
sbb
jne
mov
adc
in
cmp
push
ds
orl
mov
popf
jg
adc
jnp
dec
inc
push
cmpb
aam
adc
xor
mov
enter
incb
outsl
cmp
cmp
rclb
cmp
and
enter
push
jbe
mov
mov
or
add
xchg
mov
push
cmpsb
push
cld
outsl
js
inc
xor
add
jno
adc
push
cmc
in
adc
push
icebp
sbb
outsl
add
in
icebp
sbb
push
jecxz
mov
pop
or
in
mov
imul
inc
subps
xor
pop
in
scas
pop
rclb
jae
xchg
mov
xchg
sub
lock
jbe
adc
movsb
or
cmp
add
mov
xlat
mov
xchg
subb
inc
call
outsb
or
pop
mov
xchg
inc
pop
orb
or
popa
or
mov
in
xchg
jne
shll
stos
and
je
sbb
and
xor
pop
mov
sahf
or
push
jmp
rorb
cmp
and
inc
popf
int
test
add
mov
push
jl
mov
xor
pop
in
jno
lahf
test
cli
fwait
xchg
fidivrl
xchg
int
sub
idivb
rorl
mov
nop
xchg
addl
or
xor
inc
push
mov
push
mov
and
insb
xchg
pop
ds
jg
jg
test
adc
mov
ss
push
dec
fists
out
ja
pavgb
push
or
cwtl
mov
push
jnp
jle
shlb
cli
out
fsubs
sbb
fldl
loop
cmc
xchg
adc
aam
cmpsb
jp
daa
rcrb
frndint
outsl
lahf
or
and
pusha
mov
mov
lcall
mov
jge
dec
xchg
xor
loop
scas
rolb
in
repz
cmpsb
push
xor
fisubl
push
fldl
sbb
shrb
std
cmpsb
pop
aas
call
mov
push
mov
pop
add
adc
add
test
mov
nop
dec
adc
sub
mov
cmpsb
mov
pop
add
or
mov
or
mov
lahf
mov
inc
movsb
xor
outsl
sub
push
adcl
imul
mov
rclb
mov
call
inc
sbb
test
pusha
sti
xor
cmp
mov
out
sub
pusha
aad
inc
and
ret
fiaddl
sub
mov
ss
loope
adc
xchg
rclb
movsb
stc
fcoms
push
sub
inc
ficomps
ret
fadd
sbb
out
fstpl
push
imul
adcb
jmp
ja
mov
addr16
fwait
andb
and
mov
pop
test
adc
sub
mov
push
je
dec
push
or
inc
jno
pusha
jmp
add
pop
jmp
jl
mov
pusha
leave
add
xor
cmp
fwait
mov
pusha
pop
dec
sub
and
pop
hlt
add
inc
test
rcrb
mov
dec
sti
scas
and
pop
and
movsb
push
sub
out
repnz
stos
push
adc
mov
jb
lea
sub
fsubrs
jno
loopne
pop
sbb
mov
add
sub
dec
cmpsl
lock
inc
pop
std
pop
jecxz
mov
in
jno
cmpsl
xchg
ficoms
inc
imul
jno
jo
ror
xchg
dec
andb
pop
repz
sub
cli
jmp
mov
shll
cmp
jp
mov
addr16
pop
pop
movsl
scas
push
lea
and
cmp
mov
cmp
into
xchg
popf
je
pop
lea
lea
pushf
pop
addl
sbb
outsb
les
sub
mov
inc
dec
pop
pop
sub
inc
inc
movsl
dec
test
pusha
xchg
jb
pop
mov
add
xchg
out
rep
or
insl
push
dec
mov
mov
test
cmpl
xchg
add
es
inc
fsubs
xchg
or
inc
test
arpl
xor
add
adc
jecxz
lret
fiaddl
insl
jmp
shl
push
xchg
add
sahf
aam
test
pop
aam
cmp
jne
hlt
dec
ds
add
add
inc
dec
out
ss
xchg
lock
pop
ficompl
xchg
bound
sbb
push
inc
cmpsl
stc
and
pop
aaa
je
fs
loopne
daa
addr16
and
testb
xchg
bound
idiv
fs
dec
mov
jno
aam
sbb
insb
pop
rcrb
orb
add
mov
rorb
nop
out
sbb
sarb
aaa
hlt
imul
js
push
pop
pop
add
int3
pop
mov
rcr
cmp
movsb
outsb
push
push
push
out
and
dec
pop
shrb
ret
xchg
testl
movd
cmpsb
leave
mov
jl
sbb
adcl
scas
fstpl
push
jle
xchg
dec
add
inc
mov
lahf
mov
psrld
out
dec
adc
add
pop
pop
insl
inc
mov
sub
cmp
mov
daa
pop
sbb
or
mov
mov
cld
mov
inc
mov
mov
mov
pop
mov
xchg
pop
jmp
out
pop
and
std
les
add
pop
std
leave
dec
ret
pop
sahf
xchg
and
or
mov
mov
pop
scas
mov
loopne
mov
pop
push
iret
xchg
push
lock
add
mov
jge
fwait
adc
xlat
push
lcall
shlb
je
jecxz
cwtl
jmp
mov
icebp
clc
std
pushf
enter
adc
inc
pop
out
push
ljmp
mov
outsl
ds
imul
cmp
scas
mov
out
cmp
icebp
add
or
adc
lea
mov
ljmp
fsubrl
xor
cmp
repz
push
cmp
hlt
shlb
loopne
add
inc
xchg
test
sub
out
sahf
adc
std
and
sbb
jmp
cmpb
imul
pop
hlt
hlt
sub
outsb
add
mov
pop
ljmp
push
inc
in
pop
push
mov
xor
push
jle
mov
lods
les
int3
loopne
int
pusha
data16
sub
jns
stos
divb
mov
pop
aaa
ret
jne
shrb
cmp
push
dec
outsb
decb
mov
push
dec
mov
mov
push
xor
out
call
mov
std
lcall
jbe
incl
movsl
stc
pusha
negl
push
push
mov
movsb
int
push
adc
push
mov
clc
aas
xchg
repz
add
into
scas
jns
mov
cli
and
insl
cli
lods
cmp
mov
addb
or
sbb
lcall
mov
in
xchg
pop
lock
push
add
addl
popf
dec
xor
xchg
or
mov
mov
mov
or
and
out
outsl
fadds
shl
insl
imul
lods
cltd
jne
add
test
shl
mov
mov
les
jnp
lret
push
je
cmpl
mov
sub
push
cs
push
or
mov
xorl
and
lock
les
lods
movsl
mov
push
subw
aas
mov
je
lcall
mov
mov
push
cmp
out
das
adc
in
xchg
icebp
nop
and
and
test
pop
inc
or
popa
mov
in
and
in
adc
jnp
push
mov
dec
push
fwait
cmp
in
fbld
in
test
or
loopne
or
add
cmpsl
dec
clc
decl
out
iret
outsb
sbb
jbe
push
sub
ficoms
or
aaa
and
inc
xor
jg
pop
or
shrl
shll
or
bnd
push
lea
es
fdiv
std
in
pop
aas
jle
scas
mov
mov
inc
loopne
sar
ret
dec
stos
sbbl
sbb
shrl
or
xchg
sub
push
das
adc
mov
inc
xor
pop
mov
iret
pop
cs
sbb
enter
inc
xchg
add
mov
push
cmp
mov
xchg
adc
jp
stc
ret
scas
mov
mul
add
add
sub
addr16
aas
xchg
add
lret
sbb
test
or
add
movsl
bound
xor
xchg
ret
sub
pusha
jno
push
lods
jmp
xor
jbe
mov
xor
shl
cld
movsb
add
adc
pop
cltd
or
adc
and
mov
dec
cmp
scas
inc
sbb
rol
xchg
xor
inc
stos
imul
jp
mov
jbe
notb
jge
incb
mov
outsb
add
cmp
ficomps
add
push
or
loope
and
inc
push
popa
inc
mov
insb
and
loopne
jmp
je
push
or
jp
push
mov
repz
scas
push
sub
inc
mov
add
test
pushf
xchg
mov
sub
cmpb
dec
cli
cmpsb
and
xchg
out
scas
jae
jbe
mov
ficoms
les
xor
enter
sbb
scas
sub
int3
test
aas
cmp
aas
clc
rcrl
fs
adc
sbb
xchg
iret
ja
insb
xchg
into
xchg
in
inc
xchg
pop
cmpsb
cmp
popf
iret
incb
and
hlt
sub
ljmp
dec
int3
inc
andb
test
xchg
pop
jle
addr16
cli
push
pop
mov
stc
mov
jns
mov
mov
mov
pop
rclb
adc
test
cld
mov
mov
mov
das
pop
jo
inc
lea
stos
sbb
cli
movsb
lahf
icebp
hlt
std
mov
roll
js
sub
inc
add
ss
mov
aas
add
ja
xor
add
lret
sub
adc
mov
push
int3
test
push
sbb
or
pop
sti
pop
addr16
enter
push
mov
and
nop
mov
or
dec
dec
shll
inc
sbb
sbb
loopne
jmp
int
rcll
dec
cmc
ret
dec
cwtl
ja
out
loopne
mov
jle
adc
xchg
lret
and
andb
add
pop
lea
mov
stc
add
lahf
sti
push
ds
data16
fcmovb
sub
nop
daa
push
daa
dec
in
sub
xchg
fwait
scas
push
lods
cmpsl
das
pop
mov
aaa
dec
notb
inc
das
call
xchg
and
mov
mov
xchg
push
sub
jg
incb
push
in
push
jg
mov
sbbb
add
mov
mov
pop
loop
cmp
push
inc
rorl
lds
xor
fsubp
fbld
inc
and
add
scas
das
mov
mov
and
jnp
or
inc
add
xor
ja
stos
insl
inc
daa
adc
pop
movsl
and
jmp
les
push
movb
bound
push
fsubp
aas
out
mov
stos
add
cmp
std
testl
lcall
mov
cmc
cmp
cs
jecxz
pop
pushf
mov
rol
jnp
inc
cmp
dec
ja
jnp
xor
fcomp
pop
inc
sbb
rorb
cmp
shrb
ret
les
out
adc
and
add
loop
ffreep
mov
xor
push
rcrl
call
loope
cmp
lods
pop
jb
fs
mov
pop
mov
cmp
cmpsl
mov
lock
xchg
cmp
sub
mov
les
adc
mov
cmp
jl
mov
and
mov
andb
fnstenv
mov
cmovs
cmp
push
push
or
mov
push
cmpsb
aad
aas
ret
add
das
rorb
pop
sbb
arpl
and
and
pop
cld
inc
repnz
repz
sub
pop
test
xor
dec
xchg
jns
popa
mov
aas
jb
ret
pushf
push
cmp
add
out
mov
out
sbb
arpl
pop
pusha
sti
adc
xchg
sbb
loop
daa
shlb
jnp
adc
adc
incl
adc
adc
mov
sbb
cltd
idivb
rol
fcmove
or
inc
inc
inc
mov
mov
adc
pop
and
data16
cmp
fcoms
push
sbb
fdivr
out
mov
adc
call
clc
mov
cmp
push
pop
pop
fs
cmp
inc
std
hlt
fdivl
rcr
push
or
inc
adc
dec
xor
or
les
aad
sub
mov
mov
mov
sbb
sub
repz
cmc
rcll
popa
mov
xor
pop
pop
push
sbb
inc
inc
cli
iret
fdivr
in
insb
ror
leave
push
adc
outsb
cltd
icebp
lret
fists
roll
imul
mov
sbb
dec
jno
mov
or
xor
cmp
pop
add
adc
bound
incl
out
mov
push
cmp
cs
sti
cmp
xchg
pop
adc
hlt
and
push
jg
or
mov
add
mov
outsb
clc
imull
push
fcmovbe
rorl
sahf
mov
aaa
in
decb
out
adc
lcall
faddl
mov
int3
push
das
test
or
pop
or
inc
fisttpll
push
cmp
add
push
cmc
int
jg
adc
and
packuswb
lret
mov
push
mov
xchg
fsub
jne
outsb
sbb
jg
shlb
mov
fstl
aas
mov
dec
lods
inc
mov
sar
incl
iret
jae
jnp
inc
out
push
dec
cli
adc
push
or
sbb
cmp
mov
jns
mov
dec
xchg
sub
push
shll
sbb
fstpl
sub
ja
mov
push
and
sbb
nop
push
pushf
rcrl
lods
adc
inc
movsl
loope
xor
add
mov
mov
call
out
bswap
mov
push
mov
and
je
mov
std
add
pushf
sbb
lret
sub
into
sub
shrb
cs
ljmp
pushl
aas
movsb
cmp
jge
or
jecxz
xor
mov
rcll
jb
xchg
lret
inc
imul
call
add
push
outsl
out
fprem1
fld
or
jg
adc
mov
xor
sub
jns
add
jo
call
adc
and
lds
ljmp
aam
cmc
push
lcall
std
incl
push
dec
jge
sbb
jnp
sbb
inc
pop
pop
stos
and
mov
inc
scas
sbb
and
adc
not
sbb
aas
out
mov
mov
insl
xchg
iret
pop
out
jmp
loopne
cmpsl
mov
xchg
lret
fwait
stc
ror
mov
or
out
jnp
mov
or
into
icebp
imul
push
popl
jno
fcomps
clc
call
stos
imul
insl
lcall
sub
pop
lods
call
rcl
rorb
mov
push
cmpl
in
fistpll
inc
jnp
lcall
lret
in
addr16
mov
adc
cs
inc
test
adc
push
cmp
jmp
ss
ja
ljmp
mov
adc
negl
lea
inc
imul
out
dec
sti
fnstsw
out
xor
or
imul
sbb
dec
ret
insb
sub
in
pop
jge
jmp
xchg
jne
outsl
pop
mov
xchg
shll
lahf
inc
out
mov
or
xchg
xor
pop
pop
dec
xor
popf
push
lock
in
inc
sahf
xchg
jge
popa
arpl
xor
fprem
jne
shl
mov
push
add
pop
lcall
lret
ffreep
imul
push
aas
pop
rcll
mov
mov
cld
mov
cmp
mov
dec
test
aaa
or
and
test
ret
jl
xchg
adcb
loop
push
repnz
jmp
mov
push
inc
enter
pop
add
sbb
add
xor
push
push
ficoml
inc
pusha
or
ja
bound
sti
pop
mov
stos
xacquire
adc
negl
std
ljmp
jns
insl
mov
fmull
stos
mov
dec
sbb
inc
xchg
sbb
subl
std
fnstcw
ret
loop
jecxz
sub
mov
push
mov
cli
mov
cmc
rorb
clc
test
rol
mov
mov
xor
jnp
xchg
ficoml
adc
es
ja
xchg
pop
xchg
mov
inc
add
shll
ljmp
cltd
xchg
out
sbb
inc
adc
aas
shll
cmp
jp
jge
push
push
ljmp
xchg
pop
adc
or
iret
cmpsb
dec
mov
mov
movsb
sbb
pmaxsw
or
ds
mov
int3
pop
pop
mov
mov
sarb
mov
aad
sbb
xchg
jg
mov
xchg
pushf
lcall
jbe
or
aaa
xor
cmp
out
and
fistpl
gs
movsl
leave
cli
push
and
sub
cmp
or
jmp
lea
outsl
pop
cmc
pop
out
mov
ljmp
adc
or
jo
add
xchg
lcall
add
sbb
call
divb
repnz
dec
pcmpgtw
pop
adc
push
mov
and
cmp
enter
test
daa
mov
fdivr
xchg
dec
out
inc
inc
loope
jmp
fists
inc
mov
fiadds
nop
inc
add
fs
push
sarb
pushf
lcall
jo
std
mov
mov
pop
pop
inc
mov
mov
inc
mov
add
out
inc
lods
mov
push
xor
lock
mov
sbb
das
call
xor
jl
addr16
mov
out
jg
xchg
cs
rcrl
ret
ficompl
ds
mov
test
in
inc
jnp
mov
add
push
lock
mov
xor
shl
jno
lret
lock
push
dec
xchg
sbb
idiv
inc
inc
mov
adc
sti
mov
mov
or
inc
addr16
arpl
jmp
invd
out
sbb
sar
xchg
test
adc
outsl
fists
xor
popf
pop
mov
cmc
insb
fs
cld
add
adc
cmp
cli
push
test
xor
jl
mov
or
jp
insb
addr16
iret
mov
aas
mov
clc
push
jb
ds
stc
sub
sti
sbbb
push
jbe
sub
das
mov
fbstp
cmp
test
pop
loope
fnsave
out
jns
je
jp
into
sub
mov
pop
lea
ret
jmp
xchg
add
out
ret
mov
jo
pushf
cmp
inc
add
in
pop
movsb
clc
idiv
addr16
mov
outsl
sub
call
dec
jecxz
addr16
pusha
call
int
filds
arpl
or
cmp
inc
icebp
cmpsl
push
jg
outsl
test
iret
pop
subl
sbb
jns
cld
sar
xor
fldl
std
sti
jp
pop
ss
mov
sbb
sub
and
out
das
add
sbb
aas
je
popf
pop
lahf
fcomps
out
out
outsl
push
add
push
pop
in
lret
in
pop
push
mov
lds
cld
mov
lret
fwait
pop
ljmp
sbb
cmc
and
or
ret
fimull
inc
lahf
ret
fwait
jbe
mov
cs
add
addb
pop
sub
jecxz
and
sbb
es
lahf
aad
mov
test
divl
mov
mov
adcb
add
add
stos
jle
incl
jp
push
push
aas
xchg
std
or
je
pushf
mov
jno
outsb
push
out
sbb
test
or
lods
xor
mov
inc
mov
gs
mov
sbb
cli
jb
fucomip
pop
jno
xor
jns
lock
sti
test
sbb
jg
mov
ret
rcll
xor
sbb
jg
scas
dec
jg
pop
and
sbb
fdivr
jb
mov
xor
xchg
out
xor
cld
jmp
loop
xchg
rclb
jg
out
pushf
aad
lahf
test
sbb
pop
cld
mov
pushf
cmpsb
pop
pop
scas
in
clc
sbb
iret
pushf
and
test
out
push
pop
push
fisubl
jno
sub
pop
fnstsw
int3
and
xlat
pop
aam
push
shlb
call
std
cmp
fwait
or
pop
mov
xor
bound
sarl
sbb
sbb
rcrl
mov
lahf
sti
cld
push
cmc
adc
dec
jbe
bound
ds
and
pop
or
lahf
push
cld
jo
iret
or
add
pop
in
jg
out
orl
inc
out
add
incl
adc
push
push
bound
out
lahf
jo
cmp
andl
aas
loopne
jo
icebp
inc
xor
adc
lds
and
inc
loope
mov
das
dec
arpl
mov
lcall
in
imul
dec
rorl
or
add
adc
lahf
fldcw
fildll
lods
lahf
out
mov
or
sbb
clc
or
xor
inc
sub
out
cltd
loope
sbbl
push
jg
cmc
pop
leave
cmp
jecxz
adc
or
scas
jnp
or
ss
and
sar
aas
cmp
jle
fists
sarb
mov
daa
pop
xchg
into
and
cmp
cmc
icebp
lock
sti
jns
xchg
mov
insb
cs
mov
cmp
sbb
nop
nop
inc
loope
cmc
pop
mov
je
sbb
jae
cmpsb
mov
hlt
jb
mov
in
loope
notl
adc
test
mov
out
call
push
inc
jnp
or
addr16
inc
mov
clc
lahf
aas
adc
xorl
and
daa
es
scas
sarb
push
cmp
arpl
pop
mov
iret
jge
addr16
xchg
sub
cmp
dec
or
adc
sub
jg
int
jg
in
adc
arpl
xchg
inc
popa
icebp
aaa
out
pushl
inc
jns
jae
dec
mov
mov
notb
mov
decb
xchg
jns
cmp
or
sbb
sbb
xchg
cld
sbb
imul
jmp
push
pop
pop
xlat
xchg
mov
mov
xlat
je
inc
idiv
cmp
mov
mov
or
jmp
insb
mov
sub
int
clc
cld
scas
cmp
add
ficompl
pop
mov
sarb
jge
addr16
mov
pusha
aam
mov
jmp
sbb
fsts
mov
xchg
into
xchg
aad
push
cwtl
sbb
push
imul
push
decl
xchg
sarb
cmpsl
pushl
mov
lahf
ljmp
jns
mov
and
or
sbb
shl
cmp
jg
int3
or
jnp
push
mov
push
mov
ret
std
sbb
inc
pop
dec
cmc
jle
mov
mov
lds
mov
pop
js
cmp
mov
dec
pop
sub
stc
fstpl
mov
ljmp
mov
or
sub
jg
decl
or
sbb
icebp
add
lock
mov
adc
or
ljmp
jae
adc
les
jge
lcall
loope
jg
dec
dec
in
sub
xchg
stc
setne
mov
push
mov
leave
mov
mov
sub
lahf
cltd
jg
pop
sbb
call
mov
icebp
push
dec
dec
int
inc
inc
mov
data16
jg
mov
shrb
mov
dec
mov
ds
jnp
sub
andl
jbe
cmp
jne
jns
mov
add
ja
in
sub
cld
test
mov
jno
lock
xor
inc
mov
sbb
xor
aam
pop
pop
lods
xchg
enter
bound
loopne
ficomps
mov
pop
sahf
dec
pusha
cltd
xchg
stos
jno
enter
into
loope
add
jge
outsb
xlat
std
xor
push
pop
sub
xchg
into
pop
add
push
add
test
adc
jg
jbe
pop
cld
or
add
mov
mov
out
cmp
sbb
dec
lea
pop
sub
pushl
sbb
pop
imul
outsb
mov
or
idiv
pop
bound
mov
stos
sahf
mov
aas
push
add
cld
mov
fs
jns
push
notl
push
dec
pop
dec
orb
call
push
loop
jbe
lcall
push
jg
add
adc
lods
or
sub
gs
out
push
ret
push
aam
push
test
out
jg
nop
ss
test
inc
sub
pop
shll
mov
xchg
popf
push
push
loop
add
xor
push
inc
aaa
and
ljmp
call
idiv
jmp
frstor
xchg
cmp
test
lahf
clc
out
adc
ds
dec
inc
xor
sbb
xchg
jo
xchg
mov
fnstcw
out
mov
cs
js
add
es
aas
or
ret
loopne
inc
fucomp
notl
mov
std
adc
adc
cmp
add
add
xlat
lcall
ljmp
fmulp
mov
int
lods
push
call
pop
dec
loopne
jecxz
or
cmp
scas
shll
loope
sub
cmp
ret
loopne
xorl
add
rorb
dec
cld
imull
sti
sbb
jbe
lods
inc
out
pop
incl
inc
or
cmpsl
cmp
int3
ljmp
iret
fwait
dec
cld
je
ret
dec
mov
adc
or
fdivrp
loope
fists
data16
mov
and
frstor
insl
lock
out
jbe
xchg
mov
xorl
jnp
loop
call
xor
out
in
lahf
sti
lahf
push
push
aas
aaa
pop
ret
pop
cmp
sbb
mov
idiv
mov
dec
ret
pop
pop
or
jl
js
xor
leave
out
mov
shll
pop
dec
sub
push
bswap
popf
pop
std
mov
xor
in
adc
mov
push
shrb
and
cmp
adc
adc
sti
jbe
adc
xor
push
jo
shrl
out
jno
roll
push
outsl
test
into
iret
imul
repz
and
in
aas
inc
paddd
and
add
aam
or
fistps
out
addl
test
add
xchg
pop
cmp
jmp
sbb
mov
mov
nop
push
idivl
mov
lret
inc
outsb
xchg
inc
bound
loop
and
jns
cmp
pop
sbb
dec
icebp
out
test
cmpsb
mov
loope
adc
xchg
push
mov
adc
movsb
mov
decl
sarb
in
mov
dec
mov
negl
mov
xchg
sahf
fs
cmpsb
cmp
inc
mov
lcall
cmp
gs
sub
pusha
xor
dec
pop
sti
movsb
mov
fwait
add
icebp
call
and
scas
add
jae
loope
push
sbb
popf
push
mov
shlb
xorb
pop
pop
ret
jg
pop
sbb
repz
or
ds
fnstsw
jb
subl
sahf
mov
movsb
gs
ret
sti
mov
fcomp
and
mov
sbb
cmp
daa
jmp
cld
movsl
rcrb
scas
mov
add
ds
mov
sti
jmp
ret
lods
js
cld
pop
fchs
and
push
testl
arpl
jae
movsb
out
or
out
frstor
mov
push
mov
ds
xchg
jge
imul
ljmp
mov
lock
loope
push
jbe
imul
int3
aas
inc
pushl
xor
test
inc
insl
mov
jp
movsb
cs
ds
pop
loope
xchg
mov
or
sbb
out
jle
fcomps
rolb
and
sbb
mov
loopne
fdivrl
adc
mov
lock
xor
arpl
test
sub
mulb
pop
xor
shll
in
pusha
shrl
xlat
cli
push
cltd
cli
cmp
aam
adc
jns,pt
clc
pop
inc
cld
sub
lcall
mov
icebp
pop
test
mov
scas
jg
mov
test
jno
negb
adc
mov
push
rcrl
es
inc
adc
push
ffreep
daa
and
lret
bound
clc
loopne
decb
jecxz
or
bound
pop
imull
nop
jne
xchg
fs
sarb
lock
xchg
push
in
loope
push
fwait
jbe
mov
pop
out
nop
ss
pop
lcall
imul
clc
bound
test
enter
cmp
ds
femms
ja
ret
outsl
repz
stc
mov
fmull
ljmp
daa
push
stos
add
mov
push
repz
ljmp
mov
sbb
mov
std
sar
pusha
test
nop
adc
in
cmp
mov
out
mov
jnp
xchg
jmp
hlt
jg
dec
mov
dec
dec
test
sub
loop
das
clc
sbb
sbb
and
popa
data16
push
mov
leave
pop
inc
cmp
test
xor
fs
adc
pop
adc
adc
cmpl
xchg
mov
pushf
hlt
es
loopne
scas
mov
movsl
mov
hlt
iret
loopne
jge
xchg
into
add
jo
imul
cmp
popa
out
push
rcr
jmp
cmp
orb
inc
aas
sar
aas
mov
in
jp
ljmp
jnp
jp
lahf
loopne
daa
inc
jne
pop
jns
mov
call
ja
ret
test
push
ss
pop
mov
push
clc
into
dec
test
aaa
push
dec
add
or
mov
xchg
gs
ja
add
popf
aad
rolb
neg
xor
push
js
push
add
or
out
or
sbb
or
aam
int3
xchg
out
or
mov
sbb
mov
lea
decb
jno
jbe
xchg
xor
push
daa
or
inc
push
jg
jns
or
sub
jmp
clc
decl
pop
mov
and
sbbb
dec
mov
addl
sahf
lods
cli
arpl
jp
or
loop
xchg
imull
ja
or
xor
mov
push
movsb
adc
add
xorb
mov
cld
test
nop
cwtl
pop
add
or
jg
scas
inc
test
fldenv
sbb
inc
sarb
faddl
iret
lods
fdivrl
mov
or
sti
xchg
shrb
push
out
push
fadds
dec
mov
mov
shlb
incb
mov
sub
jb
lock
rorb
sbb
mov
sbb
fistps
xor
push
dec
imul
xchg
mov
sbb
jo
xchg
in
test
or
dec
imul
or
xchg
mov
clc
jg
inc
xchg
pop
jcxz
loop
xchg
adc
inc
cli
es
and
inc
mov
cwtl
incl
sub
in
xor
hlt
orb
loope
fldt
ret
imul
rorl
inc
or
sti
and
lcall
insb
add
add
push
mov
sarb
xchg
inc
cmp
repz
push
cli
pop
out
test
int3
xor
fs
or
pop
push
xchg
outsb
jb
sti
jecxz
add
jnp
jecxz
mov
in
dec
imul
movsb
and
movsl
xor
mov
push
addr16
mov
or
mov
sub
dec
lds
sarl
cld
aad
sti
incb
out
inc
fstpl
int3
and
mov
stos
sub
int3
jecxz
add
sti
ret
cmp
mov
sti
cmp
stos
adc
jecxz
in
outsb
jecxz
push
ja
dec
cmp
out
xchg
clc
sub
sub
cmp
fwait
pop
cld
jae
fmull
sbb
xchg
pop
or
mov
push
push
mov
push
loop
das
push
lods
cltd
call
xor
rorl
repz
ret
cld
das
mov
push
mov
int3
mov
pop
mov
repz
mov
scas
lret
movsl
push
std
sar
sbb
and
cmpl
idivl
xchg
push
cs
mov
sub
sbb
iret
test
mov
mov
xchg
and
sub
add
std
add
std
pop
inc
into
jg
fisttpll
mov
fldenv
sbb
lret
mov
arpl
mov
daa
adcl
arpl
cmp
test
jp
repz
pop
and
lahf
das
popa
js
sub
js
lret
cmp
outsl
sbb
mov
ss
shlb
iret
movsl
mov
inc
xor
mov
inc
jne
in
loop
std
dec
shl
add
sub
clc
push
inc
insl
cmp
negl
xchg
add
or
mov
std
loopne
int
adc
and
or
hlt
fcoms
pop
sbb
inc
and
daa
xchg
lock
inc
lock
pusha
or
inc
fdivs
cmc
add
int3
call
push
loopne
out
jl
mov
divl
push
sub
cmp
sbb
xchg
xchg
gs
pop
jo
mov
movl
addl
or
scas
mov
xchg
jae
mov
incl
loop
dec
sti
insb
mov
mov
aas
call
fsts
dec
cmp
mov
jmp
fmul
jbe
lret
lahf
pop
sbb
sub
sbb
inc
aas
icebp
and
mov
les
cmc
mov
mov
sbb
dec
aaa
mov
jg
std
popf
je
les
ja
mov
pop
cmp
inc
leave
or
mov
jge
fistpll
or
in
cwtl
mov
je
xchg
icebp
ja
call
outsl
das
aaa
repnz
mov
out
fmull
arpl
dec
adc
lcall
int
pusha
stc
fsubs
inc
dec
rcl
pop
jl
sti
push
jge
das
sarb
movsl
ret
sbb
pop
add
xchg
mov
popa
lock
call
xor
pop
pop
movsl
lcall
fwait
push
or
or
push
dec
pop
loope
jae
jge
arpl
dec
jge
or
cwtl
inc
das
mov
shrl
and
inc
inc
push
popf
popa
xorb
incl
addl
lret
sub
push
jbe
add
data16
stos
rcrb
loop
loopne
lods
inc
jmp
lock
mov
inc
incl
ficompl
lea
push
sub
jecxz
xor
fistps
adc
inc
inc
cmp
out
jmp
inc
mov
ss
and
jl
clc
sbb
cmp
push
out
xlat
add
js
xchg
fsubrs
dec
call
mov
cli
sub
in
adc
popf
add
inc
cmc
out
pop
fs
cmpsb
jecxz
push
cld
cmp
sub
jbe
adc
imul
push
aas
cmp
mov
out
jp
mov
cmp
subb
dec
in
add
add
repnz
popl
lods
or
pop
testl
outsl
mov
icebp
enter
arpl
das
sub
mov
add
dec
inc
outsb
inc
push
pop
jg
ret
lcall
pop
jbe
loopne
lock
test
dec
inc
inc
pop
loopne
fstl
fidivl
cmp
add
pop
sub
out
jmp
iret
jo
xor
dec
mov
cli
out
inc
inc
mov
inc
dec
cmpsb
xlat
inc
add
or
cmp
outsb
orb
out
cmp
jb
mov
cmp
das
xorl
jl
push
mov
sbb
push
repnz
les
xor
cmp
clc
out
push
call
adc
fmull
add
push
jns
in
loopne
dec
jbe
xchg
xchg
incl
pop
leave
or
mov
leave
dec
fcmovbe
pushf
pop
jecxz
mov
inc
lret
jnp
adc
cmp
dec
adc
cmp
pop
inc
pop
hlt
dec
cld
push
imul
out
incb
add
imul
sahf
xorb
lds
mov
cmp
push
test
sti
lcall
ljmp
push
test
inc
pop
and
fwait
dec
and
test
sahf
pop
iret
cmc
pop
lahf
movsl
pusha
pop
adc
setnp
enter
mov
push
add
andl
or
and
push
lret
scas
jmp
ja
inc
mov
adc
fsts
movsl
roll
daa
and
mov
aad
jecxz
ja
decl
subl
add
dec
incl
cld
inc
sbb
in
push
cli
add
mov
xor
pop
mov
iret
pop
std
das
cwtl
pop
add
std
add
and
lret
fdivr
popf
std
or
adc
shrb
scas
das
pop
pop
sarb
jle
ja
add
push
jle
xlat
fnsave
aad
adc
ja
sarb
inc
ret
in
xchg
dec
daa
dec
jecxz
out
jecxz
fimuls
xchg
shlb
fcompl
jecxz
mov
outsl
fstpl
scas
mov
jg
lods
mov
fdivs
xchg
jbe
incl
lods
inc
bound
and
repnz
clc
push
je
mov
daa
lock
adcb
pop
mov
hlt
decl
gs
jae
mov
cmp
lock
loop
jp
push
push
fnstsw
mov
add
pop
or
push
cmp
adc
fwait
push
ljmp
dec
mov
mov
sub
cmp
ljmp
loope
xchg
pop
mov
push
enter
pop
xor
xchg
push
lock
inc
dec
and
xchg
sbb
pop
push
call
adc
loope
dec
shr
ja
out
dec
clc
sbbb
adc
repz
data16
sbb
aas
mov
out
ror
mov
lods
mov
insb
add
cltd
shl
sti
push
mov
lods
xor
xor
or
mov
out
inc
sub
mov
push
maskmovq
sbb
adc
xchg
jae
adc
jl
and
sysexit
call
dec
lahf
mov
lods
pop
lods
xchg
out
shl
or
mov
and
xor
dec
jmp
sbb
fdivr
and
cs
aam
cmpsb
cmpsb
lret
cmp
lds
cmp
pop
orl
repz
js
mov
jmp
mov
and
jl
inc
inc
cld
or
xchg
jo
mov
jl
icebp
outsl
xor
fwait
mov
ljmp
cli
iret
mov
imul
gs
sbb
xchg
pushl
add
mov
jno
out
cltd
fimuls
cltd
jg
xor
mov
inc
fistpll
subl
inc
xchg
call
loopne
pop
pop
adcl
hlt
pop
mov
fcoml
arpl
enter
hlt
cs
jbe
and
pop
imul
cmp
fsts
adc
jns
pop
out
aas
imul
dec
loope
cmp
subl
mov
aas
inc
test
cmpb
cmp
pop
push
jnp
add
push
xchg
gs
jg
sbb
cld
scas
jp
pop
mov
lahf
ret
lahf
inc
cmp
loope
xchg
pop
hlt
cmp
jmp
inc
mov
xlat
je
push
sahf
jns
jg
cld
sbb
dec
xchg
add
sub
ret
sub
xchg
cmpsl
ret
leave
imul
jbe
aad
or
xor
xchg
cmpsl
into
out
pop
cld
cmp
call
dec
or
popa
enter
mov
lahf
jl,pt
cmp
cmp
repz
out
leave
pop
cmp
jmp
xchg
adcb
mov
xchg
leave
push
fistl
inc
call
mov
or
repz
decl
int3
push
push
nop
shr
jge
cmp
rcrb
inc
sbb
inc
mov
cmp
and
mov
leave
lret
mov
shlb
mov
psrad
jmp
inc
fldl
out
ret
incl
xchg
jle
cltd
and
push
outsb
scas
into
scas
arpl
mov
sub
addr16
pop
movsb
test
incb
mov
les
ret
xor
dec
dec
loopne
or
shlb
sub
loopne
addr16
add
hlt
mov
inc
jg
in
aaa
sub
test
xor
jg
out
movsl
imulb
inc
mov
cmc
inc
stos
xor
inc
rcr
incb
dec
mov
inc
cmp
nop
xchg
ja
and
ds
out
imul
fistpll
das
movsb
pop
pop
mov
xchg
mov
jg
or
ret
in
adc
sbbb
dec
aaa
mov
sbb
push
xor
subl
scas
int3
scas
rsm
sub
xbegin
lret
adcl
imul
and
xorl
pop
mov
mov
xchg
psrlq
shlb
mov
fdivrl
iret
inc
add
fnstenv
sbb
jge
addr16
scas
jmp
or
js
insl
mov
dec
xor
inc
mov
js
jge
adc
xor
cmp
and
mov
outsb
mov
dec
pop
fists
nop
sub
leave
lods
add
jb
sbb
stc
pop
xchg
mov
jne
xor
into
dec
out
pop
mov
add
sti
decl
pop
and
xchg
jne
into
push
add
inc
mov
lret
cmp
icebp
mov
cltd
cs
adc
mov
lock
sub
lock
mov
pop
ljmp
pop
mov
xchg
out
jae
fidivs
push
addr16
loopne
jg
ja
sahf
add
add
in
mov
std
push
jl
pop
cmp
cmp
mov
cmp
sbb
mov
mov
adc
aaa
jmp
jl
xor
pop
pop
and
jle
jecxz
pop
pop
sbb
mov
ret
cmp
imul
push
lahf
mov
inc
andb
inc
cltd
pop
test
cwtl
stos
sbb
pop
js
popa
hlt
fildl
inc
lock
aad
std
lds
push
cmp
cmp
stos
mov
mov
pop
mov
or
int
pop
mov
decb
je
mov
popa
mov
add
rorl
mov
mov
shlb
out
inc
xor
mov
aam
mov
pop
inc
add
push
test
fiaddl
mov
aaa
sub
adc
push
in
std
sbb
push
mov
pmaxsw
inc
repz
xor
cli
in
mov
cmp
cmp
cmp
jae
mov
aas
out
mov
sub
imul
addb
cmp
pop
les
sarb
xor
cld
ljmp
jg
sub
dec
test
shlb
cld
psubusw
add
mov
lret
jg
cmp
loop
out
dec
fimull
cmp
dec
arpl
arpl
inc
or
out
jg
xor
jnp
ss
scas
outsb
cmp
xchg
xchg
imul
popa
cli
add
cmp
cltd
test
mov
or
aaa
clc
cli
aaa
and
sub
dec
jo
mov
xor
xchg
loopne
jecxz
push
inc
jmp
fdiv
cwtl
mov
ss
cmc
xchg
dec
dec
xchg
push
outsb
push
inc
gs
pop
testl
sbb
in
pop
lds
sahf
test
leave
fcmovnbe
pop
stos
adc
cmp
push
push
outsl
fidivrs
pop
mov
mov
and
inc
sahf
ret
adc
mov
rcl
test
and
lock
sbb
sti
popa
roll
faddp
ljmp
mov
adc
xorl
pop
push
out
pop
dec
mov
dec
push
pop
add
pop
fdivl
je
ja
jmp
lcall
scas
outsl
inc
stos
mov
and
xor
fs
jg
jmp
or
insb
or
sbbb
adc
dec
cld
add
sti
adc
lock
mov
sbb
cmp
in
jle
jle
xchg
test
mov
sub
add
iret
pop
mov
or
jl
pop
and
scas
aad
push
and
fdivp
add
mov
daa
fildll
je
iret
jb
pushf
int
adc
icebp
aad
cmp
lea
lcall
cmp
sub
es
in
lret
xchg
fists
loopne
mov
jo
push
push
or
jbe
das
and
popf
std
aad
dec
andb
jecxz
push
jbe
cmp
mov
mov
outsl
dec
mov
pushl
cmp
jecxz
xchg
xchg
push
shl
inc
ljmp
mov
outsb
pop
add
pop
cltd
scas
testb
clc
inc
imul
test
inc
jmp
fwait
testb
icebp
iret
or
or
aaa
testb
cwtl
daa
out
mov
pop
dec
sbb
or
in
shll
inc
push
push
add
cmp
div
out
subb
and
mov
popf
in
call
xlat
iret
test
popa
aad
clc
div
test
xor
sub
sbbl
inc
lods
aam
jno
les
incb
push
nop
or
jae
shl
out
mov
nop
scas
fldl
lret
push
negl
or
aas
leave
mov
ljmp
out
into
mov
sbb
hlt
aad
xchg
push
andl
inc
call
pop
jg
and
push
xor
subl
ja
pop
push
and
or
pop
scas
lods
mov
shrl
dec
mov
inc
mov
pop
push
clc
xchg
leave
jg
sti
dec
xor
inc
enter
xchg
add
push
push
pop
jno
push
loop
or
adc
andl
outsl
adc
mov
daa
add
nop
outsl
push
mov
out
mov
fs
rcr
xlat
in
aaa
add
lret
clc
out
insl
sarl
out
mov
nop
mov
jg
stos
imul
aam
mov
scas
push
xchg
jbe
xchg
fbld
jae
out
adc
scas
hlt
das
dec
test
rolb
jmp
inc
cld
cmp
add
pop
iret
test
in
mov
shlb
push
ja
in
frndint
sbb
js
jne
clc
push
pop
cmp
aam
stc
scas
dec
out
loop
out
pusha
int3
repnz
mov
fstpt
lea
or
cli
lds
or
lods
adc
jge
push
mov
fistpll
imul
out
inc
clc
das
cli
push
in
or
mov
loop
pushl
lock
ss
ja
sbb
scas
sti
je
loopne
xor
std
mov
in
and
xor
pop
in
add
jg
scas
cmp
sarl
xor
lock
not
jae
sub
scas
pop
jo
imul
mov
cmp
pop
xor
push
scas
sub
stos
test
fsts
xlat
jmp
scas
pop
mov
sub
fstp
add
sub
rolb
inc
popa
fisubrs
cmp
xor
xchg
int3
shr
or
pshufw
dec
mov
pop
sbb
xchg
icebp
and
or
aad
mov
shll
push
add
sti
out
test
lea
loopne
pop
mov
xor
fcomip
ret
and
mov
xchg
mov
sahf
aas
add
push
cmpsl
sbb
pop
cmp
cmc
push
mov
pop
or
and
xor
xchg
ja
adc
mov
cmp
xchg
notb
ja
hlt
or
cmpsb
or
cmp
aam
add
xor
lahf
shl
jb
push
fcomp
mov
or
dec
xchg
adc
ljmp
pop
inc
cmp
inc
pop
lret
enter
ja
jecxz
pop
sarb
adc
and
sahf
jne
pop
pop
aas
xlat
in
sub
sub
nop
sbb
out
in
stos
pop
push
xchg
inc
cld
push
lret
pop
xchg
sbbb
mov
jno
out
stos
and
sbb
ret
clc
sub
fisttps
mov
mov
cli
mov
inc
push
daa
cmp
dec
xchg
std
cwtl
fucomi
sbb
das
std
test
notl
cmpsb
add
jno
idiv
loopne
pop
gs
stos
sub
mov
dec
roll
sar
out
int
fld
sub
out
pop
jge
mov
jg
test
mov
movsb
leave
adc
add
sbbb
out
lahf
movsl
cmc
ss
fisubl
pop
push
mov
out
test
int
ja
push
xor
in
and
jg
aam
jle
jecxz
jg
add
ja
cld
inc
std
popf
ret
adc
cwtl
and
cli
add
nop
es
jns
into
clc
xchg
dec
dec
test
or
repz
pushl
js
add
mov
sbb
inc
scas
adc
ljmp
sub
call
inc
pusha
lcall
dec
lret
pop
sbb
fidivrs
push
mov
or
clc
std
jnp
lcall
clc
test
jg
sbb
scas
lods
rclb
adc
xor
fwait
sti
sbb
icebp
rolb
das
cmp
sti
sbb
insb
sahf
loop
mov
dec
sbb
jae
fnstcw
out
xor
mov
js
adc
jg
je
or
dec
mov
das
test
test
sub
sbb
lahf
jo
cmpsl
ss
lea
mov
sub
lret
std
pop
in
hlt
push
mov
sub
lock
xchg
jg
adc
ss
or
stc
out
frndint
fistpll
gs
push
mov
and
mov
mov
inc
push
jg
xchg
adc
mov
loop
sti
push
mov
mov
aaa
jmp
in
jle
test
stc
and
dec
jmp
shll
mov
je
jge
ret
out
mov
adc
outsl
push
inc
call
jecxz
lods
repnz
xchg
sbb
lcall
add
cld
and
into
roll
pop
movsb
cmp
out
fists
mov
jp
jl
shr
fwait
and
mfence
sbb
loope
ret
pop
bound
pushl
dec
call
pop
loope
sbb
data16
ja
aas
les
cld
testl
mov
inc
xor
adc
push
sbb
add
daa
hlt
cmpsb
into
notl
pop
int
arpl
fisttpl
sub
lahf
add
imul
mov
sub
fs
jmp
add
test
sub
push
insb
sub
loope
es
push
jmp
xchg
daa
loope
jno
inc
pop
mov
ljmp
pavgb
outsl
or
ret
or
adc
or
mov
sub
inc
xor
cwtl
gs
push
ds
aas
jnp
ljmp
push
cli
and
pop
xchg
sbb
pop
sub
jg
jmp
pop
mov
jecxz
add
mov
mov
cmp
xor
jb
ds
or
push
inc
aaa
cmpsb
dec
test
inc
popf
pop
out
dec
dec
cld
ds
and
scas
xchg
clc
push
inc
out
push
int3
xchg
cmpl
test
push
lcall
or
adc
pop
aaa
pop
adc
push
or
sbb
dec
xor
cmpsb
mov
mov
leave
push
int3
mov
and
jno
and
lds
fiadds
ret
adc
and
cmp
inc
repz
fs
mov
mov
inc
cld
das
xchg
in
add
insl
cltd
dec
mov
imull
je
in
notb
dec
lcall
xor
mov
cs
and
dec
lock
mov
sbb
xchg
jns
inc
inc
cmc
es
mov
sbb
insl
mov
loopne
aad
mov
cmp
sbb
gs
loope
and
mov
cmp
hlt
jbe
push
imul
rcrb
lcall
call
inc
pop
jp
adc
sar
xor
das
mov
pusha
inc
sub
stos
ds
popf
inc
adc
scas
xor
dec
aad
dec
xor
sbb
outsl
mov
rcrl
rcll
hlt
jnp
test
adc
in
cli
ljmp
daa
inc
ror
iret
add
fldl
xsaves
imul
rorl
mov
leave
mov
sbb
jb
insl
lds
fdivrl
pop
and
jmp
addr16
ret
js,pn
popa
sbb
sbb
lahf
repnz
or
int3
popf
jl
pop
jnp
incl
shl
aas
test
xchg
sub
cmpl
je
mov
das
inc
adc
jg
fistpll
mov
inc
xchg
call
std
mov
jge
inc
jge
scas
push
mov
enter
pop
call
stc
dec
popa
dec
jns
mov
ss
aam
daa
cld
cmp
xchg
xor
push
xchg
inc
adc
mov
dec
lods
mov
cli
sbb
and
inc
dec
push
es
data16
xchg
ds
aas
ret
and
lds
ds
add
adc
notl
dec
ljmp
popa
cmp
shl
and
and
ret
mov
fildll
cs
dec
imul
out
aas
das
jmp
xor
mov
sar
mov
fstps
ret
aas
sar
fidivrs
jae
xchg
mov
inc
das
test
pop
nop
dec
dec
rcrb
clc
push
cmp
xchg
mov
sbb
clc
nop
push
pop
int3
hlt
stc
pop
ret
mov
idivl
jns
inc
dec
pushl
sbbl
incl
lea
inc
mov
cmp
mov
or
or
pop
adcl
pop
ret
filds
clc
icebp
out
cmc
js
cmp
adc
gs
mov
jo
adc
dec
leave
stc
popf
sbb
aas
push
out
insb
inc
popa
push
pop
dec
addr16
inc
jmp
and
into
inc
aaa
push
xchg
std
jbe
cwtl
movsbl
push
mov
pop
popf
lcall
adc
sbb
add
mov
aas
push
ret
push
pop
mov
jle
xchg
fimuls
je
std
jb
xchg
fnstsw
mov
add
ret
loope
cli
xchg
add
jns
cltd
xchg
ret
repnz
clc
dec
pop
rcll
and
cld
xchg
mov
mov
jbe
imul
xor
popf
insl
scas
pop
stos
adc
cli
gs
test
jge
mov
fadds
sub
add
movsl
cmp
daa
leave
push
lea
jl
das
ljmp
adc
add
cmp
mov
pushf
cmpsb
into
fistl
mov
out
out
xchg
jecxz
sbb
mov
fsubs
cmpsb
cmpsl
jg
cld
or
or
js
or
mov
imul
arpl
roll
jecxz
rorl
jae
and
imul
out
fcmovnb
or
push
lds
loop
nop
cmpsl
xchg
push
push
stos
aaa
aas
lahf
mov
add
loop
mov
xorb
scas
test
push
jp
mov
add
incl
ja
push
xor
mov
sub
lahf
sub
jno
pop
pop
mov
push
push
sub
inc
and
xchg
loope
insl
out
and
fcomps
in
cld
inc
incl
push
mov
jecxz
push
insb
or
mov
pop
inc
inc
adc
sub
popa
mov
mov
mov
decl
jmp
cmp
mov
mov
mov
ret
lret
ljmp
sub
sti
js
sbb
xor
call
push
sbb
mov
add
xchg
push
clc
out
jecxz
test
imul
sub
jno
jmp
mov
and
int
jmp
mov
push
mov
push
shl
ljmp
inc
pushl
pop
jns
push
or
dec
daa
push
mov
into
adc
ja
test
aas
pop
loop
lods
pop
pusha
pop
add
jnp
mov
out
loope
rol
fimuls
cmp
leave
sahf
cmpsb
mov
inc
adc
adc
fstps
subb
clc
xchg
leave
jp
flds
cmpb
mov
fdivrp
ja
xor
jbe
or
sub
ljmp
das
out
fistpll
add
in
in
cmp
jns
cli
cmc
icebp
sar
pop
push
cmp
jmp
or
cld
div
aas
sarl
stc
ficomps
inc
mov
fildll
ljmp
adc
sub
mov
mov
jae
fidivl
mov
adc
popa
mov
cltd
idivb
jg
movsb
mov
dec
inc
inc
int3
dec
inc
clc
arpl
into
mov
mov
lahf
clc
fisttps
std
mov
pop
mov
pusha
push
mov
jmp
or
mov
adc
jl
shrl
pop
and
and
sarl
mov
cmp
inc
or
sub
push
xor
sbb
inc
insl
pop
sub
mov
subb
sub
mov
lds
sbb
cld
stc
ror
ret
sub
sahf
cmp
pop
icebp
jno
mov
cmc
popf
xor
pop
movsb
in
or
xlat
test
inc
in
ds
je
xchg
lea
stc
imul
stc
and
add
xchg
fdivr
xchg
jle
inc
pop
mov
and
xchg
sbb
cli
lcall
inc
sbb
push
mov
add
or
sub
dec
stc
sub
mov
jns
push
inc
incl
test
lret
xor
fldl
jmp
sbbl
pop
xchg
sbb
sbb
and
jmp
test
jp
test
out
jl
inc
cld
jno
in
pop
or
pop
sbb
jge
xchg
repz
inc
out
lods
dec
movb
lods
xchg
pop
cmp
inc
xchg
mov
mov
fisubrs
sbb
jae
lods
xorl
inc
mov
ljmp
mov
add
push
fldt
sub
and
add
lret
fisttpll
xchg
push
aad
negl
in
mov
push
adc
jg
fucomip
add
ret
stc
test
out
popl
jnp
pop
cmpb
in
daa
mov
lahf
fwait
hlt
push
out
inc
adc
incl
ret
pushf
xchg
gs
adc
je
mov
adc
cli
and
cmp
and
mov
in
mov
cmp
push
push
mov
xchg
pushf
icebp
jg
aad
pop
pop
push
popa
cmpl
stos
sti
pop
out
decl
cld
call
scas
pop
out
inc
inc
inc
jns
seta
das
pop
call
stos
add
mov
decl
push
jne
out
cmp
push
jle
in
pop
imul
xor
xor
out
push
enter
jle
out
pop
fisttpll
adc
jmp
mov
inc
cmp
test
dec
addl
enter
adc
std
add
stos
das
mov
and
orb
mov
inc
inc
dec
adc
mov
sarb
mov
lock
or
pusha
push
out
pop
jle
push
aas
cmpsl
decl
adcl
or
xchg
lods
push
add
push
icebp
in
scas
sbb
cmp
push
stos
xchg
push
xchg
decl
jecxz
loop
or
jmp
xor
cmp
adc
inc
ljmp
xchg
mov
xchg
add
leave
mov
sub
mov
adc
pop
jle
into
adc
sbb
enter
add
bound
mov
lds
push
popf
loop
subl
in
outsb
jne
mov
lret
adc
sub
in
ja
scas
hlt
dec
out
adc
and
psrad
xchg
iret
pop
xlat
jns
mov
xchg
push
or
dec
daa
dec
cltd
call
enter
xchg
sub
sti
stos
loope
rcl
insl
mov
push
sti
aaa
loope
lcall
mov
adcb
cmpb
mov
ret
pop
and
dec
mov
mov
popf
aad
dec
ret
in
adcb
out
scas
sub
je
cld
lcall
cld
cmp
fsubrp
adc
mov
sub
mov
push
xchg
mov
mov
add
std
or
xchg
nopl
arpl
xor
psubb
dec
and
pop
movsl
sub
mov
sbb
adc
lret
jno
das
lock
sbb
cmp
jb
xchg
pop
lods
or
lds
adcb
inc
mov
orl
lret
std
sbb
jg
insb
jg
ljmp
fwait
in
or
ja
js
ss
movsb
rcrl
rorb
jo
jne
fstl
das
sub
mov
push
cli
fmuls
push
dec
daa
pushf
sbb
test
fstpl
jbe
mov
sub
adc
sti
stos
loope
cltd
xor
and
aad
jmp
icebp
hlt
test
or
jmp
incl
sbb
xor
cmp
pop
sbb
jmp
pushf
out
pop
idivb
out
scas
pop
push
insb
cli
cmp
sti
pop
cli
leave
into
cmp
xchg
dec
dec
lcall
cld
loope
rorb
and
lcall
int3
push
cmp
orl
test
sub
hlt
addr16
incl
cmp
xor
and
ret
repnz
mov
mov
lret
mov
or
popa
hlt
pop
aas
dec
xchg
xor
sub
in
ljmp
xchg
mov
adc
mov
icebp
xor
ret
out
xor
imul
or
addr16
cld
xlat
xchg
jne
test
aas
push
inc
sarb
jno
pop
pop
popa
aas
pusha
push
inc
and
pusha
xlat
mov
lcall
jb
gs
addr16
andl
aaa
in
mov
push
arpl
xor
push
aas
outsl
loop
push
inc
sahf
jl
mov
jecxz
shlb
push
push
xor
outsl
push
imul
sub
clc
sbb
jge
jae
je
popa
fisubs
inc
dec
repz
fs
push
mov
fistps
decl
int
or
mov
push
incl
lea
mov
adc
or
popf
and
in
ja
lods
jg
sbb
sbb
imul
xor
dec
arpl
xchg
add
and
lds
mov
pop
out
pop
adc
mov
sub
fimull
insl
mov
sbb
lahf
xchg
jge
mov
dec
sbb
out
push
inc
adcb
xchg
add
pop
lcall
cltd
jnp
jae
sub
push
dec
mov
ljmp
enter
outsl
or
cld
or
je
lods
push
xlat
jo
cmpsl
push
cmp
jl
pop
mov
xor
test
jl
mov
adc
out
enter
add
dec
mov
cmp
mov
mov
mov
iret
fs
stc
mov
xchg
mov
add
push
and
in
adc
adc
lds
sbb
push
xchg
mov
adc
push
adc
aad
hlt
pop
mov
loope
xor
iret
imul
sarb
in
xor
sub
jg
cld
in
sbb
cmpsl
xchg
ret
inc
leave
push
pop
jl
sbb
scas
sub
inc
cld
fcompl
scas
aam
mov
repz
into
jecxz
popa
push
imul
lods
push
sbb
std
mov
inc
test
push
inc
mov
pop
clc
out
mov
cmp
adc
sbb
inc
push
push
incl
jo
call
hlt
push
enter
testb
pop
mov
in
icebp
insb
or
lcall
arpl
or
incl
fistpll
dec
mov
add
inc
jmp
and
mov
inc
faddl
sarl
mov
mov
mov
out
data16
xor
loope
sbb
popa
cmp
sti
out
xor
enter
movsl
enter
outsl
arpl
shlb
int3
clc
pop
jno
in
mov
fidivrl
cmp
out
shr
pushf
fisttpll
jmp
ja
jns
rcrl
out
in
ror
repnz
movsl
mov
cmp
mov
mov
add
inc
popa
hlt
adc
stos
lahf
inc
xchg
sbb
sbb
inc
jmp
fwait
test
das
sub
adc
jl
push
call
pushf
inc
mov
hlt
jecxz
movsl
out
add
jno
pop
fistpll
icebp
push
sbb
testl
cld
ja
dec
pop
negl
or
pusha
cli
daa
aaa
sbb
lahf
sbb
inc
and
cmpsl
icebp
dec
lcall
jge
loopne
pop
nop
dec
and
mov
sub
je
scas
and
jmp
cld
daa
push
stos
xchg
cmp
jae
push
push
stos
jae
fldl
pop
ja
cli
rorb
lock
add
and
movd
fidivs
jg
jnp
adcl
mov
cmp
inc
in
inc
mov
rclb
sbb
jne
incl
mov
mov
cld
mulb
icebp
out
hlt
jg
mov
cmp
call
xorb
jbe
loop
loopne
push
or
dec
fwait
imul
sbb
aam
pop
mov
mov
int3
in
or
das
xor
adc
das
cld
repz
out
jno
mov
inc
test
and
cli
aas
xchg
ja
dec
loope
push
ss
jl
flds
jo
jmp
mov
jle
aas
daa
jl
lds
bswap
inc
loope
sbb
subl
fchs
push
xor
sub
popf
mov
test
cmp
decb
lcall
sub
inc
mov
rcll
xlat
lret
pop
ljmp
shl
xchg
xor
push
test
mov
aad
push
and
jl
xchg
mov
sub
lds
mov
clc
rcrl
pushf
and
rolb
cmp
das
addb
adc
ljmp
rolb
stos
aam
and
jge
sub
ret
fisubl
jb
push
jmp
hlt
out
ljmp
sbb
jle
mov
addl
in
btr
xor
mov
cld
aas
mov
iret
nop
cmp
mov
sti
call
mov
adc
ficoml
jo
adc
scas
sub
xchg
dec
sbb
mov
ret
aas
mov
imul
insl
aaa
leave
adc
jno
mov
loope
pusha
cs
jecxz
lret
lahf
or
hlt
mov
hlt
popw
test
ljmp
loopne
add
dec
push
sarb
in
lods
movsb
or
jae
test
out
lods
cmpsb
das
mov
out
out
jle
xchg
fdivl
pop
pusha
push
mov
xchg
jo
aas
rcl
lds
cmpsb
icebp
test
and
loopne
xor
aas
and
aas
inc
pop
pop
inc
mov
xlat
gs
xor
mov
add
xor
popa
pop
xor
cld
pop
pop
out
mov
mov
cmc
fmull
cmp
cmp
cld
das
test
mov
dec
ljmp
push
lahf
rolb
push
jnp
inc
push
std
mov
stos
bound
cmp
and
aam
loope
pop
sarl
inc
cmp
call
popa
pusha
mov
mov
or
jnp
fstps
pop
cmc
push
in
dec
dec
adc
addr16
and
add
push
mov
sbb
insb
cli
pop
enter
jmp
cmp
fstpl
adc
iret
xchg
push
das
or
jp
scas
and
xchg
fs
scas
and
sub
sbb
out
outsl
or
dec
xor
addb
outsb
pusha
jne
das
ficoml
and
inc
out
shll
into
mov
mov
rcrb
or
cli
xor
repz
inc
lret
dec
xchg
ret
sub
decl
sub
mov
icebp
jge
push
push
xor
mov
push
gs
stos
add
jecxz
out
hlt
ret
add
xor
sub
scas
out
pop
out
adc
imul
shll
ficompl
fmul
xabort
cli
cs
pop
pop
xlat
xor
jb
lea
pop
sahf
xchg
clc
dec
loope
cmpsb
sahf
fbld
and
dec
lcall
dec
arpl
adc
fwait
mov
es
push
sbb
hlt
push
inc
loop
mov
es
loopne
lahf
and
mov
xlat
jg
mov
jge
lock
jmp
fistps
dec
decl
cmpsb
xorb
push
cwtl
push
lahf
popa
ds
fnstsw
or
outsl
stos
inc
xorl
xchg
lds
and
jo
outsb
xchg
in
outsl
arpl
sub
lds
popf
lds
repnz
ss
mov
cmpsl
sti
and
mov
stc
mov
jge
mov
cmp
test
int
popf
pop
jne
lahf
ret
jle
inc
xor
mov
pop
xor
test
fdiv
jl
xchg
jg
mov
cli
xor
stos
add
mov
jnp
add
fmul
pop
mov
mov
ja
addl
mov
ret
insl
out
cmp
pop
or
mov
or
mov
and
mov
sarb
iret
inc
loop
mov
jmp
xor
mov
cmpsl
divl
ljmp
mov
pop
loopne
mov
aas
push
xchg
movsb
jmp
push
cs
inc
lock
adc
push
jns
push
bound
mov
arpl
pop
xchg
inc
cmpsl
pusha
icebp
mov
daa
gs
pushl
mov
fdivrs
mov
and
cmp
push
std
das
push
mov
mov
lcall
mov
js
mov
fists
dec
aaa
mov
pop
scas
shll
or
outsl
pop
mov
or
and
mov
sbb
push
cmp
push
enter
inc
fwait
and
inc
jg
add
adc
and
into
hlt
lcall
and
mov
mov
cli
call
movsl
dec
pop
cmc
mov
lcall
into
mov
int
repz
jg
or
call
cmp
xchg
inc
and
mov
jnp
mov
leave
pop
xchg
xor
and
add
cli
das
mov
xchg
mov
push
sub
aas
xchg
pop
sbb
inc
mov
mov
mov
jae
push
aam
jle,pt
cs
or
call
out
int
ljmp
lcall
sbb
popa
outsl
loope
call
lock
mov
and
xor
mov
mov
in
mov
iret
mov
pop
mov
sbb
xor
leave
loop
js
int3
sbb
cmp
pushl
pop
je
add
mov
xlat
fs
mov
cmp
js
nop
mov
aad
inc
out
in
adc
mov
lret
outsb
aad
mov
stc
incb
fcoms
xor
cmp
repz
jg
pop
sbb
sarb
test
add
fmulp
dec
inc
lcall
lea
xor
cmp
iret
frstor
sbb
xorl
test
adc
pop
push
fists
outsl
outsb
imul
jmp
ds
adc
sarl
push
shrl
push
jne
rclb
adc
mov
pop
sbb
xchg
test
fadds
xchg
scas
les
cmp
jo
inc
notl
mov
sbb
lock
lock
jmp
pop
ds
jge
inc
adc
jg
por
mov
xor
iret
loope
xchg
push
mov
into
insb
inc
add
jg
cld
scas
mov
ucomiss
paddb
mov
aaa
dec
mov
fcompl
mov
jmp
rcll
stc
inc
and
enter
iret
int
sarl
outsl
sub
popf
xor
out
inc
lcall
xchg
testb
je
dec
in
out
sbb
push
imul
mov
pop
fistpll
inc
adc
xor
addb
out
call
call
and
or
iret
xchg
ds
mov
andb
adc
scas
hlt
mov
and
mov
cmc
cmp
out
add
add
mov
call
inc
repz
bound
jg
dec
jl
test
cmpb
add
call
sahf
inc
lds
cmp
dec
orb
sub
in
sub
sbb
testb
ljmp
call
and
dec
shll
mov
outsl
pop
xchg
pop
xor
gs
push
cwtl
popa
push
loope
lahf
clc
dec
adc
jb
ja
out
stos
iret
cmp
mov
lret
aas
int
es
stos
data16
push
dec
jmp
cld
dec
cmc
pusha
cmp
in
mov
inc
inc
push
xchg
pop
lret
cmp
pushf
data16
or
decb
adc
insl
sbb
inc
jg
decl
sub
sub
stos
mov
adc
ffree
pop
inc
adc
xor
mov
pushl
push
jae
leave
fwait
and
sub
xchg
repnz
sub
jno
insl
jg
dec
cs
loop
pop
arpl
clc
cmpsl
cmpsl
lret
xor
jg
imul
xchg
pop
loope
insb
jnp
loope
shrl
pop
jg
pusha
adc
adc
xchg
sbb
clc
jno
xchg
xor
aad
lock
push
adc
outsl
mov
shll
movsb
int3
mov
pop
lahf
pop
dec
cld
call
stos
in
inc
aam
mov
negl
lahf
call
mov
daa
mov
sub
mov
cld
jns
ljmp
jecxz
mov
ficomps
adc
xor
and
clc
daa
jmp
lds
sbb
jg
mov
shl
adc
bound
add
adc
xchg
inc
inc
cmp
addl
addl
cld
inc
mov
ja
dec
imul
dec
sub
loopne
jge
sbb
mov
in
mov
inc
daa
cmpsl
cmp
push
pop
and
scas
adc
mov
mov
jge
lret
xor
cld
fwait
and
or
sarb
inc
inc
adc
lods
jg
sbb
add
cmp
popa
icebp
jecxz
mov
jg
rclb
mov
je
repz
orl
xchg
out
jle
fs
jne
jae
js
sbb
nop
mov
nop
loopne
addl
adc
clc
lea
fists
decl
inc
sub
pop
xor
cmpsl
popa
mov
adc
sahf
add
pop
xchg
daa
and
lcall
filds
xchg
inc
and
inc
inc
call
sub
ljmp
lock
mov
pop
test
je
pop
call
out
hlt
std
aas
and
jb
and
arpl
scas
stos
adc
clc
mov
fadds
mov
cli
ds
mov
mov
pop
mov
incb
jne
xchg
js
aam
push
jge
mov
dec
push
sbbl
mov
sub
cmp
cli
out
stos
sub
push
negb
jno
or
mov
jae
or
jne
cmc
icebp
adc
xor
jg
mov
or
xor
dec
inc
xchg
sbb
inc
lcall
xor
inc
repnz
dec
mov
je
aam
sti
dec
imulb
cmp
pop
dec
pop
pop
mov
ss
jle
mov
inc
cmp
shrb
ljmp
add
add
lret
and
addb
rep
aaa
mov
les
sub
jmp
lock
ljmp
sbb
insl
insb
mov
fdivrl
add
rorl
lcall
shl
movsl
nop
mov
mov
cli
mov
mov
out
cmc
outsl
sar
int3
into
arpl
or
xchg
call
mov
push
int3
das
xor
roll
push
xbegin
mov
gs
fwait
ret
sub
cmp
push
lahf
shlb
js
pop
aaa
ss
cmp
cld
rcll
test
jl
dec
scas
icebp
lock
cmp
cs
jne
rorl
pop
rolb
add
cmp
or
dec
adc
push
jecxz
repnz
jnp
push
jae
imull
xchg
inc
xchg
jmp
pop
sub
insb
sub
fwait
dec
sub
incl
call
mov
fistps
pop
cmp
fbstp
outsb
jbe
and
inc
and
cmp
mov
xchg
mov
frstor
cli
cli
out
jecxz
adc
mov
lock
filds
or
data16
test
negl
dec
add
in
push
pop
cli
sahf
cli
pop
sbb
cmp
repz
leave
clc
and
fldl
xlat
stc
mov
inc
cld
mov
imul
push
loope
repz
cltd
dec
jns
arpl
sbb
bound
hlt
sar
cmpsl
fistps
movsb
sbb
fldcw
mov
cmp
cmp
je
xchg
out
movsl
sub
dec
testl
pop
adc
popaw
out
mov
das
pop
mov
sbb
inc
lcall
dec
out
cmc
xor
pop
sbb
inc
loope
push
push
or
outsb
cmp
out
push
inc
insb
cs
mov
incb
fs
pop
sahf
dec
sub
sarb
add
test
int
cmpsb
cli
ja
std
es
dec
jbe
aam
hlt
iret
pop
jg
mov
mov
or
mov
mov
inc
cli
out
out
testb
or
outsl
xorl
dec
pop
and
cwtl
leave
push
inc
add
sub
pushf
inc
adc
leave
shll
mov
xor
mov
sbb
xchg
pop
in
hlt
in
mov
cmc
adc
push
push
test
cmpsb
fnstsw
ret
loope
jo
pop
fisubs
iret
sub
std
mov
cmp
data16
test
testl
mov
inc
fwait
das
sub
fdivrl
dec
xchg
dec
pusha
sahf
in
mov
add
cmpsl
dec
das
lcall
mov
inc
idivl
das
sbb
pushf
sub
cvttps2pi
das
fnstcw
mov
out
ja
pusha
popa
es
imul
inc
cld
and
mov
decl
int
lock
repnz
std
push
mov
push
ds
sbb
repnz
sbb
mov
int3
inc
leave
and
shrb
xchg
jmp
fbstp
ljmp
fcompl
cmp
add
stc
mov
mov
xor
out
scas
lcall
mov
push
pop
push
mov
decl
imul
aad
in
lods
mov
lock
std
inc
add
ret
jmp
lods
std
data16
test
call
mov
dec
addl
xchg
mov
mov
iret
cmp
leave
mov
add
inc
mov
lds
or
fdivr
les
daa
mov
sub
mov
xchg
fists
dec
mov
aaa
cld
xchg
cli
mov
shrl
push
dec
jns
imull
out
sub
sti
leave
gs
insl
push
jns
lahf
adc
fbld
js
push
cmp
fs
push
dec
pushl
aad
jne
xor
dec
add
mov
mov
and
mov
lds
mov
xlat
dec
jmp
out
cmp
das
xchg
mov
mov
daa
call
pop
fsts
ja
mov
lahf
fnsave
dec
sbb
push
mov
jge
filds
xor
inc
or
mov
push
fcompl
pop
std
je
out
lret
cwtl
jg
decb
or
call
stos
cmp
or
addr16
dec
cld
mov
outsl
inc
clc
repz
inc
into
xchg
sub
sub
and
cltd
gs
sbb
arpl
xchg
jge
push
lods
cli
inc
icebp
mov
loopne
faddp
aam
dec
mov
mov
cmpsl
stos
cmpsb
xchg
push
cld
pop
jmp
js
mov
xor
add
jp
mov
push
out
sbb
mov
cmp
rcl
js
xor
rorl
out
scas
popf
push
fldl
outsb
xchg
jp
icebp
into
loopne
mov
xchg
sbb
movsl
pop
int
jmp
push
jo
adc
ds
push
nop
outsl
and
pop
push
test
or
adc
sahf
movsb
aaa
mov
inc
dec
pop
mov
out
dec
cmp
rcrl
push
mov
jge
pop
ret
pop
rcll
add
call
loop
bound
nop
in
and
scas
cwtl
jecxz
sbb
ret
loope
add
adc
or
cmpb
mov
clc
jg
ljmp
inc
xor
sti
or
sti
call
out
inc
loopne
lret
adc
sbb
mov
push
scas
and
aam
push
mov
outsl
jno
push
neg
stos
inc
or
fldenv
sub
pop
icebp
cmp
mov
lods
push
pop
daa
dec
add
push
mov
jg
xor
dec
out
adc
sbb
ret
sub
xor
mov
sar
mov
push
xchg
jne
inc
mov
clc
call
mov
mov
lcall
aas
jle
add
adc
sarb
sub
aad
sbb
xchg
inc
lea
lock
je
and
or
xor
cli
pop
cwtl
sub
dec
outsl
outsb
out
cmpsb
push
les
pop
aaa
pushf
jmp
int3
outsl
inc
adc
cmp
push
into
push
lret
jg
jge
or
inc
loopne
fdivs
inc
mov
push
mul
mov
fstl
jl
or
in
call
andb
iret
push
popa
movsb
mov
out
outsl
test
loope
aam
inc
adc
mov
mov
push
out
loop
adc
xchg
out
out
das
imul
adc
out
inc
jmp
mov
stos
xor
xchg
int3
mov
loopne
push
popf
js
cltd
sub
push
lea
inc
clc
test
cvttps2pi
imul
jns
inc
arpl
add
and
add
fcomp
sar
lea
sbb
in
ja
sbb
in
jns
leave
push
lods
lods
cs
xor
fs
inc
cmp
mov
xor
cli
notl
out
jg
std
movsl
and
pop
lcall
push
pop
jle
sarl
cmp
inc
adcb
mov
cmp
ja
das
cmp
adc
adc
inc
push
and
addr16
xlat
push
imull
loope
shll
pop
and
leave
inc
mov
pop
loopne
adc
cmpsl
pop
cmp
mov
sti
xchg
ljmp
xchg
ds
xchg
std
fadd
add
push
xchg
push
mov
add
jmp
repnz
add
or
das
xchg
cwtl
imul
xchg
call
pop
sbb
xlat
jmp
lret
add
scas
fwait
lret
and
leave
jne
std
call
mov
pop
push
push
ljmp
daa
cmp
fidivrs
ljmp
imul
inc
rcr
pop
pop
xchg
nop
or
enter
add
inc
jnp
and
test
jp
xorl
incl
in
pushl
push
sub
std
out
add
cmc
or
sar
xchg
push
shll
cld
pop
adc
dec
jl
lcall
pop
pop
cvtps2pi
and
addr16
sahf
shrl
sbb
aaa
aas
or
xor
mov
das
add
fidivrs
xchg
and
push
xor
loopne
in
mov
pop
rclb
inc
fcomip
sbb
xchg
fisubl
cli
frstor
pop
gs
or
adc
in
int3
xchg
call
pusha
scas
pop
jl
mov
scas
cs
je
pop
mov
out
cmp
mov
ljmp
mov
or
add
add
cwtl
jecxz
in
fcmovnb
stos
jecxz
icebp
aad
cs
adc
adc
pushf
adcb
xchg
inc
es
xchg
fsub
data16
es
scas
cmpsl
pop
aas
movsl
shl
dec
push
ret
fisttpl
aam
cmp
pop
aaa
inc
sbb
fnstcw
push
pop
aas
xor
jg
jno
jl
adc
dec
sbb
pop
popa
ret
mov
push
push
fsubl
pushl
out
call
ss
pop
or
pop
inc
loopne
add
add
icebp
out
dec
push
adc
dec
in
xor
mov
aad
mov
jne
inc
mov
aad
nop
xchg
cmpsb
loopne
jl
dec
dec
cmp
xchg
jle
add
std
test
data16
lret
inc
adc
and
notb
jg
fdivs
sbb
shl
clc
int3
dec
out
outsl
sbb
push
mov
mov
xor
in
mov
add
loop
ljmp
hlt
shll
clc
dec
nop
cmp
or
mov
clc
xor
mov
andb
addl
js
daa
hlt
movd
imul
dec
call
jmp
push
add
jb
xchg
add
addr16
decb
pop
cmpsl
xchg
xor
dec
aas
pop
int3
lahf
cltd
mov
in
and
into
loope
mov
cmc
or
jne
add
xlat
xchg
xchg
mov
enter
outsl
cmp
push
dec
cmp
sbb
cltd
dec
outsb
cmp
push
aad
inc
repz
lahf
sub
ja
pop
dec
dec
popa
pusha
orb
or
pop
mov
aas
les
pop
sub
mov
sub
pushl
pop
cmp
in
enter
ljmp
mov
and
aam
ljmp
add
xlat
fsubp
fcomip
or
pop
cld
or
call
cs
pop
loop
movsl
inc
out
mov
ret
call
add
add
pop
in
jecxz
cmp
cld
pop
dec
into
or
mov
das
pop
mov
add
test
aaa
icebp
sti
int3
sbbl
scas
pcmpgtw
mov
push
jle
aaa
mov
pusha
test
mov
mov
mov
les
mov
sbb
or
jns
jmp
adc
mov
push
mov
pop
int3
or
or
pushl
jge
mov
imul
or
and
inc
sbb
inc
inc
xchg
and
std
sub
sub
push
mov
xor
mov
sub
rol
incb
jbe
and
sub
les
enter
and
inc
rol
stos
cwtl
cmp
sbb
outsl
stos
sub
ljmp
into
cli
sub
in
testb
inc
nop
sbb
xor
movsl
popf
mov
xor
mov
dec
sbb
lods
lahf
jmp
pusha
push
xor
xchg
mov
pop
adc
or
push
ja
pop
ret
add
cmpl
pop
imul
loope
mov
push
sti
test
sub
inc
inc
xchg
inc
pop
or
test
daa
daa
fcomip
or
add
fnstenv
sbb
movsb
sbb
jnp
arpl
jmp
and
jp
aaa
movsb
int
in
fiadds
nop
cli
mov
ljmp
sti
xchg
aaa
dec
movsl
in
icebp
cld
adc
mov
lds
bts
pop
jne
into
cmp
jecxz
add
enter
push
add
dec
push
dec
jno
add
inc
xor
xchg
push
pop
push
push
nop
call
lods
shrb
repz
movsb
and
je
loope
pop
les
in
push
movsl
sub
test
sti
stos
mov
mov
sub
inc
popa
sbb
jns
ret
mov
pop
and
mov
daa
test
clc
jnp
add
shlb
cltd
jmp
sbb
scas
push
fidivs
pop
push
add
lcall
inc
inc
add
dec
jmp
imul
sbbl
imul
add
pusha
rcll
pop
hlt
add
repz
pop
push
push
jmp
xor
push
repnz
imul
jmp
repz
pop
xor
push
sbb
scas
subb
xchg
push
fcmove
loop
mov
or
pop
push
mov
and
add
in
and
mov
lea
cmc
int
add
xchg
sbbb
into
adc
int
rorl
jns
jns
xchg
cld
push
add
xor
insl
cmp
rolb
mov
mov
mov
stc
inc
push
mov
lods
dec
clc
cmp
adc
hlt
push
push
imul
mov
rclb
jl
js
pushl
cmc
mov
mov
push
pop
lock
sbb
lock
jbe
pop
inc
xchg
mov
mov
lcall
sbb
pop
repnz
push
arpl
shl
ror
mov
nop
cli
mov
and
cmp
out
xchg
xlat
sbb
js
adc
xor
sbbl
sub
out
or
or
pop
test
add
pop
push
push
fadds
push
and
popf
add
jae
or
cmp
xchg
push
sarl
cmp
inc
mov
inc
int3
and
xor
and
mov
aaa
xor
mov
jne
xchg
cmpsb
ja
iret
add
roll
fwait
mov
push
ret
ret
ror
cmpsb
lret
dec
sub
adc
scas
andb
cld
shll
stos
dec
sbb
xor
sub
mov
or
or
dec
adc
add
cli
adc
icebp
outsl
inc
lds
jbe
push
pop
push
add
xor
fs
call
daa
pop
sahf
mov
scas
jbe
call
sub
lods
es
cmpsl
movsb
negb
outsb
call
push
repnz
andb
or
jae
lcall
in
push
faddl
inc
std
cmp
push
andb
pop
jbe
jecxz
xchg
add
mov
cli
aaa
or
mov
lea
fcom
rclb
and
push
xor
jle
cmp
add
shrl
jbe
movsb
inc
sbb
and
push
out
push
xchg
mov
mov
icebp
push
stc
add
lret
jb
andb
xchg
pop
aas
sbb
jg
mov
scas
ficoms
shll
pop
mov
dec
jmp
adc
ret
xchg
xchg
sbb
push
aad
cmpsl
imul
adc
or
or
in
pop
sub
add
mov
stc
sub
add
aas
sub
fisttps
cmp
cs
pop
lods
jl
pop
ret
xor
dec
popf
lea
pushf
dec
loop
bound
xchg
das
jmp
push
push
pop
lret
sbb
popa
inc
or
iret
movsb
push
jmp
sbb
pusha
add
and
mov
mov
fcom
xor
xchg
fcompl
xchg
lea
andl
das
gs
or
aaa
ret
aad
add
stos
jo
xchg
rorl
or
sbb
test
dec
xchg
xor
push
int
xor
cmp
scas
lret
mov
mov
mov
jl
rcrl
in
pop
and
shlb
cmp
and
sub
shrl
mov
dec
sbb
in
popa
xor
std
push
add
fiaddl
les
jo
push
nop
aas
in
push
pop
arpl
inc
adc
cmp
push
xchg
repz
cwtl
out
cmp
xor
xchg
jnp
pushf
sub
add
inc
imul
pop
jecxz
repnz
rolb
inc
sub
decl
inc
shlb
inc
fisubrs
sbb
enter
mov
out
dec
dec
aaa
pop
aad
mov
leave
cwtl
cmp
mov
cli
or
cmp
push
pop
or
gs
loopne
xor
icebp
jmp
jns
jb
mov
rcrb
in
add
lea
adc
push
pushf
xchg
dec
pop
ss
mov
add
bound
mov
bound
or
imul
jae
cmp
mov
push
dec
sub
jmp
fs
xor
jg
jle
xor
call
adc
push
and
jg
push
clc
dec
xchg
xchg
stos
in
sbb
mov
dec
dec
roll
jbe
testb
shrb
inc
and
lods
jmp
sbb
mov
fdiv
jns
aaa
push
ds
sub
mov
sub
aas
insl
lret
les
in
dec
pop
mov
fbstp
pusha
or
clc
lock
mov
push
lcall
inc
dec
xor
mov
or
aam
push
divb
inc
scas
sub
sub
xor
dec
sub
popa
imul
adcb
loope
cs
jmp
and
or
das
divb
shlb
adc
mov
clc
ds
xchg
cmp
push
imul
mov
or
push
cmp
test
mov
push
jne
cli
mov
inc
xchg
pop
mov
cmp
aam
push
push
mov
out
cmpsb
jge
imul
adc
into
inc
mov
pop
fldl
decl
mov
pop
xchg
sti
mov
pusha
push
jl
inc
dec
clc
fs
inc
dec
jg
in
in
mov
clc
pop
add
adc
sub
xchg
adc
dec
jmp
pop
or
insb
add
xlat
addl
mov
add
xlat
rorb
inc
nop
and
mov
hlt
dec
test
stos
icebp
in
ret
push
rcrl
inc
xchg
pop
movsb
test
xor
test
xchg
inc
outsb
sahf
push
mov
dec
divl
dec
push
mov
push
mov
add
addr16
mov
xor
jp
fwait
pop
inc
arpl
cwtl
pop
jo
xchg
jp
mov
stc
inc
scas
inc
clc
dec
daa
outsl
mov
or
subl
movsl
mov
cmp
scas
mov
cwtl
add
shrb
sti
add
pop
push
mov
insb
je
dec
mov
pop
mov
mov
sub
mov
xchg
or
in
xor
mov
jg
fldln2
daa
sub
rcrb
sbb
outsb
test
sbb
push
adc
and
jae
adc
mov
jge
rol
sub
pop
sti
fldt
add
xor
sbbb
lods
into
mov
push
or
xor
sbb
pop
add
out
mov
lret
mov
inc
sub
mov
push
loopne
test
mov
adc
lret
mov
mov
or
xor
or
loope
fiaddl
hlt
jle
xor
das
aam
or
int3
add
stos
js
push
test
push
pop
decb
jg
xchg
sbb
movsl
pushf
xchg
pop
inc
and
jle
mov
mov
lods
add
mov
mov
movsl
add
cmp
sbb
xchg
and
das
mov
fmull
insb
out
test
std
andb
mov
cwtl
jge
xchg
add
mov
jecxz
or
les
ret
jp
fyl2x
fmuls
roll
or
shl
imul
dec
movsb
xchg
mov
sub
in
mov
vmread
outsb
push
std
test
bound
inc
es
test
add
pop
js
mov
outsb
ljmp
ret
outsb
daa
jmp
jae
jno
mov
jnp
xchg
in
add
cmp
outsl
mov
out
lds
sahf
incl
add
pushl
adc
shlb
cmc
mov
sti
clc
push
mov
mov
pop
loopne
cli
addr16
mov
inc
xor
xchg
test
push
push
push
xchg
jnp
xchg
fcomps
xor
push
sub
out
jnp
push
call
push
in
sbb
xchg
mov
js
inc
push
inc
add
mov
aam
fbstp
je
into
test
gs
add
pop
popf
lahf
es
cmp
dec
adc
fstpl
icebp
fstl
adc
pusha
or
mov
add
add
icebp
mov
loope
jae
jnp
scas
adc
cmpsb
sbb
jae
popa
inc
xchg
push
push
add
cmp
jne
test
ljmp
xchg
mov
xor
add
pop
fidivl
dec
mov
lock
xor
or
dec
sbb
cmp
jge
orb
jbe
lds
jp
movsl
sbb
pop
roll
out
test
mov
sbb
mov
imul
orb
pop
ds
daa
push
push
decl
or
jo
xor
fwait
sbb
push
scas
push
out
cs
mov
mov
sbbb
test
mov
cmp
repnz
push
mov
mov
int3
sub
das
jge
mov
xor
add
lret
mov
jle
mov
aas
hlt
cmp
test
cmpsl
add
es
shrb
and
jmp
xor
mov
or
mov
xchg
mov
jp
out
test
enter
xchg
sbb
mull
mov
bound
dec
pusha
dec
pop
add
test
inc
pusha
mov
xor
in
push
mov
inc
xor
xchg
stos
xchg
adc
xchg
mov
nop
je
add
jmp
push
bound
aas
cmc
add
inc
vpextrw
jge
daa
subl
rclb
stos
outsl
sar
ljmp
ljmp
inc
mov
add
adc
ljmp
mov
lahf
loope
shlb
or
mov
sbb
aad
roll
push
jo
xchg
mov
mov
xchg
mov
fnstcw
jnp
aaa
test
mov
je
imul
ljmp
mov
inc
sub
popa
test
lods
mov
ljmp
xchg
or
pushf
inc
jo
aad
cli
dec
test
mov
jo
cmpsb
stc
stos
aas
repz
mov
fistps
sub
nop
mov
test
mov
pop
push
iret
icebp
stos
push
gs
hlt
nop
add
xor
push
cltd
stos
imul
fidivs
jno
mov
push
xorb
mov
cmp
dec
jbe
xchg
add
xchg
mov
add
sub
testl
jecxz
call
loopne
stc
and
pop
aaa
or
dec
outsl
loopne
lock
ds
clc
and
mov
sub
or
hlt
stos
xor
and
pop
or
sbbb
fildll
mov
sbbb
mov
arpl
sub
cmpsb
pushf
jno
int3
push
mov
pop
mov
insl
adc
and
mov
prefetcht2
and
cmp
repnz
mov
call
loopne
pop
inc
cmp
mov
popf
jle
dec
std
jo
iret
sbb
add
push
add
insb
in
mov
je
in
into
dec
lock
sub
pop
cli
dec
cmp
sahf
adc
add
rcrl
push
add
xchg
xor
cmpsb
incb
and
jo
repnz
repz
je
cmpsl
daa
lcall
adc
dec
es
adc
pop
test
xor
mov
jae
cmpsl
fmulp
mov
push
sub
mov
push
jp
or
cmp
aaa
xor
add
fs
into
cld
cmp
jae
push
les
push
lock
jg
mov
repnz
lock
sub
pop
sub
inc
std
out
and
in
in
push
add
out
testb
xchg
scas
in
xor
sub
inc
arpl
pusha
adc
lcall
das
fs
inc
or
cmpsl
jp
adc
shrl
xor
daa
leave
xorb
sbb
das
cmc
adc
in
cmp
push
mov
mov
xchg
mov
or
jmp
in
loopne
call
fstps
add
push
hlt
pusha
add
inc
push
dec
add
mov
nop
outsb
ret
sub
inc
pop
push
loopne
adc
or
mov
xchg
or
scas
inc
mov
loope
test
mov
jge
rcl
jmp
mov
out
inc
adc
test
inc
xchg
mov
fwait
mov
lds
addr16
dec
test
js
fisubs
dec
popa
popa
or
movsl
ljmp
xchg
push
inc
sub
add
cltd
xchg
outsb
xchg
adc
rclb
cltd
test
lock
sbb
fisubs
mov
and
out
or
clc
sahf
inc
add
adc
gs
shll
pop
dec
lcall
dec
roll
shlb
pop
test
mov
das
dec
and
mov
xor
int
out
aam
inc
roll
push
imul
sbb
lret
ss
popa
push
push
lock
inc
out
xor
pop
daa
loopne
pusha
sbb
xchg
xor
cs
pusha
negl
xor
mov
and
out
js
pop
fstps
add
pop
pop
sbb
pop
cmp
inc
int
inc
xor
sti
repz
inc
gs
inc
pop
cmp
imull
and
repz
test
cmp
and
or
mov
into
jmp
or
lret
sbb
lret
dec
mov
fsubrs
js
sbb
xor
jmp
shl
ds
lcall
add
pop
mov
movb
out
mov
xor
fbld
mov
cs
sbb
jmp
pop
jo
sbb
push
aad
adc
xor
add
out
les
test
repnz
into
mov
test
cmc
push
cmp
mov
std
jb,pn
mov
repz
jle
enter
out
popf
push
jecxz
lock
negl
adc
add
adc
jle
cmpsl
adc
inc
push
mov
pop
insb
icebp
popf
pop
push
push
or
imul
or
sbb
shll
mov
add
subb
sbbb
cwtl
dec
aam
shl
cmc
push
jae
jbe
faddl
dec
fidivl
sbb
hlt
or
js
cmp
loop
rcll
cwtl
mov
mov
pop
jmp
dec
or
xchg
and
push
clc
add
jle
loop
pop
and
lods
fcmove
xchg
adc
lods
xor
push
mov
cld
repnz
cld
imul
jp
stc
imulb
and
enter
push
out
es
pop
xor
sti
hlt
sbb
xchg
or
int
push
add
adc
jae
xor
jle
jp
cmp
bound
add
es
test
fwait
dec
pop
mov
popa
dec
popa
enter
loopne
outsb
movsl
loopne,pt
shr
lahf
bound
fildll
pop
lea
insl
imulb
jnp
lret
pop
test
sub
xchg
sub
mov
loopne
pop
add
mov
jmp
push
ss
inc
jmp
int
mov
xchg
mov
sbb
or
sqrtps
rol
mov
out
icebp
pop
roll
int3
lock
insb
pop
push
js
or
or
add
scas
or
xor
inc
ret
inc
push
push
or
jl
adc
fiaddl
pop
movsl
mov
pop
sbb
mov
and
sbb
fcmovb
mov
shrl
dec
mov
adc
xchg
mov
arpl
mov
or
add
jg
ret
push
mov
mov
pop
mov
and
mov
scas
ss
js
inc
cmp
mov
out
pop
loope
push
and
jne
cli
sbb
pushf
add
insl
jnp
dec
imulb
ds
cmpb
mov
rol
pop
call
dec
mov
cmp
mov
or
pop
cwtl
push
mov
inc
ret
rorl
cld
cmpsb
sbb
in
fstp
cld
add
movsl
cwtl
push
pop
enter
xor
loop
lcall
fldt
pusha
sub
add
mov
dec
shrb
and
mov
mov
data16
lds
leave
or
jl
or
and
in
fwait
stos
pop
dec
push
pop
hlt
lods
fadds
mov
icebp
dec
in
fcmove
and
subb
insl
int
dec
std
js
scas
insb
shrb
and
jne
daa
push
mov
and
mov
rorb
popa
lahf
pushf
xchg
add
push
out
enter
xlat
mov
adc
lock
xor
mov
adc
cmovp
mov
cmp
aas
repnz
inc
sub
cmc
sub
dec
leave
or
stos
xor
cmpsb
fstpl
insb
sub
je
pop
mov
push
pop
call
or
push
add
sub
push
mov
fcomp
push
jno
push
cmp
add
leave
mov
mov
mov
mov
lcall
xchg
or
adc
loop
adc
or
adc
cmp
and
or
int3
subb
hlt
add
int
adc
xlat
sbb
out
aas
pop
cwtl
scas
aad
pop
rolb
xor
pop
pop
cmp
push
pop
or
inc
inc
push
ds
adc
jns
jg
mov
cwtl
jno
pop
sub
sub
sti
pushl
add
js
es
lahf
sbb
lds
pushl
iret
jo
xor
je
cwtl
addl
xchg
add
push
or
movsl
jecxz
mov
jo
pop
inc
fnstenv
ss
mov
fcmovu
ljmp
push
xchg
pushf
test
rcll
ret
cli
ljmp
and
out
cmp
xchg
loope
das
std
lds
addr16
xchg
call
jle
inc
sub
sbb
xor
and
xor
icebp
das
icebp
loop
sarb
orl
add
sarb
sub
sbb
outsb
sbb
stos
push
inc
mov
shr
dec
fisttpl
lock
jae
cld
stos
sub
rcll
sub
test
fsubrp
popa
mov
jns
adc
jnp
mov
in
adc
pushf
sub
inc
dec
daa
data16
or
es
push
pop
xchg
int3
mov
cli
or
stos
std
daa
ret
and
mov
fimull
in
cmp
mov
add
or
xchg
mov
xchg
js
out
mov
icebp
stos
subl
jg
jmp
or
add
mov
fwait
or
btr
dec
sub
jle
aam
sub
clc
xchg
dec
adc
adc
fisubs
sbb
out
add
lods
out
les
pop
loope
cltd
dec
lods
pop
inc
movsb
push
lahf
pop
jmp
inc
mov
push
inc
scas
adcl
jle
cli
insl
xlat
mov
push
stos
outsb
xor
lods
test
fisttpll
test
daa
mov
dec
and
into
popa
movntps
inc
out
xor
imul
sub
mull
pushf
ret
cli
add
test
jg
stc
jns
mov
int3
inc
inc
aaa
pop
adc
sub
or
insb
and
sub
shlb
js
inc
loopne
movsb
call
mov
xchg
out
gs
outsl
inc
inc
inc
mov
in
push
xor
sbb
je
sub
js
mov
outsb
inc
push
cli
push
mov
and
in
inc
rclb
cmp
lcall
jbe
es
fisubl
dec
inc
inc
loope
fwait
mov
jbe
ja
push
rol
and
dec
inc
dec
xor
fistps
inc
pop
inc
xor
sbbl
pop
mov
inc
jl
jge
and
dec
adc
movsl
sub
out
shrl
sub
push
xchg
sbb
sub
jmp
stos
push
xor
aad
push
call
mov
jae
push
push
std
mov
push
push
shll
mov
mov
or
scas
orps
cmp
lods
cmp
xchg
popf
xorl
ret
cmp
or
sub
movsb
pop
pop
mov
loope
xor
add
jo
lcall
jl
sub
pop
adcl
dec
push
insl
cmpsl
cmpl
mov
xchg
push
aas
push
cmpsl
mov
pop
mov
jle
cmp
xchg
aaa
pop
ja
push
mov
in
lods
mov
std
mov
dec
lret
mov
or
lods
adc
outsb
mov
mov
pusha
fnstcw
outsb
sub
pop
mov
add
mov
adc
pop
mov
inc
int3
dec
cli
test
or
jmp
jg
dec
add
mov
xchg
jp
push
pop
push
outsl
mov
sub
hlt
and
sub
xlat
icebp
mov
jbe
repz
rcr
jl
xchg
pop
add
add
arpl
cli
xchg
or
cmpsl
or
aaa
xchg
push
push
rolb
lcall
test
push
jg
jno
pusha
loope
and
in
sub
push
cmc
repnz
add
imull
push
push
push
cmp
sbb
sbb
scas
adc
jno
pop
add
jp
cld
inc
fistl
sub
stos
push
loop
mov
cmpsb
repnz
inc
mov
push
jne
sbbb
add
fwait
inc
inc
add
pop
cld
jns
cwtl
push
push
dec
cmp
add
inc
loop
jg
aas
adc
and
hlt
xchg
loopne
add
adc
inc
push
mov
popf
add
mov
loopne
mov
sbbb
inc
incb
cmp
cmp
mov
insl
add
xchg
sub
popf
push
into
mov
call
xchg
aas
and
xchg
xlat
inc
cmp
push
cs
hlt
sub
nop
fisubrl
lds
movsb
daa
xchg
sbb
dec
rorb
cli
decl
push
lock
sub
and
add
add
outsl
dec
subl
and
or
cltd
xor
mov
dec
push
fcomp
xor
jge
inc
mov
les
pop
into
xchg
xchg
cmp
subb
cmp
xor
sbb
stos
std
out
push
mov
and
loope
cmp
push
in
sub
popf
fstpl
movsl
imul
inc
jg
dec
pop
add
push
mov
inc
dec
mov
push
add
jp
adcb
dec
cmc
add
pusha
sub
dec
out
cmc
or
jge
insl
call
cmp
add
mov
or
loopne
inc
push
mov
dec
test
ret
lret
cs
or
and
lea
sub
mov
mov
push
or
xchg
js
imul
cmp
push
decl
xchg
cld
cmpb
out
stos
mov
add
das
sub
pushf
mov
mov
pop
iret
jnp
cwtl
xchg
mov
inc
test
hlt
imul
jecxz
cmp
mov
push
lret
cmp
mov
pushf
adc
daa
mov
faddl
call
push
cmpb
add
xchg
push
pop
cmpsb
jecxz
add
shlb
jecxz
aaa
sbb
sti
pop
fistpl
test
cmp
pop
jb
stos
mov
add
add
pop
out
sahf
sbb
jo
loope
xor
insb
mov
sub
jg
fmuls
sub
adc
xor
stos
push
jmp
test
add
stos
cmc
std
push
sub
inc
mov
mov
mov
and
sti
outsl
pop
sbb
xchg
imul
pop
adc
jmp
push
or
add
aad
inc
sbb
imul
pop
push
inc
cmc
loope
or
mov
jl
fildl
stos
dec
add
lret
andl
mov
int3
push
enter
jge
xor
mov
xchg
pop
jne
push
dec
pushf
inc
inc
adcl
mov
jg
inc
iret
idivl
add
dec
hlt
icebp
xchg
arpl
mov
mov
orb
push
mov
mov
inc
mov
dec
dec
std
push
cli
jecxz
cmpsl
add
pop
int3
xchg
inc
push
sar
mov
stos
sbb
mov
dec
push
mov
sarl
sarb
bound
add
adc
ret
inc
inc
push
rolb
push
les
call
jns
xor
jbe
push
outsb
sbb
add
sub
dec
add
cld
ja
mov
mov
inc
inc
cmp
ret
jg
cs
add
dec
rol
daa
cmp
sar
add
cmp
rcrb
mov
mov
aam
xor
ja
jecxz
clc
aaa
int3
test
xchg
aaa
push
add
add
cmpsb
loop
xor
jmp
pop
mov
sub
push
cmp
stos
and
inc
popl
rorb
xchg
jo
xchg
stos
cmp
lahf
les
add
mov
xchg
pusha
ja
xchg
int
sbb
nop
popf
outsb
or
add
and
outsb
ja
push
inc
aaa
insl
mulb
stc
jl
clts
cs
inc
or
sub
add
push
in
add
mov
in
inc
xchg
mov
or
sbb
push
sub
addw
test
and
push
fidivrs
mov
add
mov
je
mov
push
ret
mov
hlt
je
or
xchg
shll
mov
popa
cmp
frstor
fwait
std
mov
pop
jno
add
insb
cmc
or
and
in
xor
jno
mov
insb
and
popf
mov
push
lods
movsl
sbb
rdpmc
or
xor
push
mov
xor
mov
xchg
sbb
outsl
xor
fldl
adc
pop
jl
add
orb
jbe
inc
mov
enter
scas
and
pop
push
lods
int
out
fwait
push
fistps
dec
dec
test
push
xor
out
pop
loope
popf
adc
mov
sbb
xor
cltd
push
lods
mov
and
enter
negb
push
adc
push
lods
push
jo
lock
pop
dec
addl
lods
and
pop
xor
call
dec
dec
cmpsl
stos
mov
ja
in
or
mov
incb
add
cld
dec
cwtl
xor
adc
aad
cmp
add
bound
sbb
addr16
dec
cld
sub
cld
pop
roll
ds
pop
push
or
daa
push
xor
cmp
push
mov
hlt
lret
js
inc
jne
iret
ret
loop
jb
sub
dec
fcom
adc
sarl
rorl
mov
iret
out
and
lea
cmp
fidivrs
add
in
dec
dec
mov
bound
or
fisubrs
inc
and
mov
cli
or
pushf
adc
add
int
xchg
adc
and
mov
xorb
inc
mov
js
mov
lds
pop
inc
cli
mov
dec
mov
cld
lds
inc
fs
sbb
in
dec
insb
add
fwait
mov
push
cmpsb
adc
ljmp
xchg
dec
dec
cmpl
dec
dec
pusha
sub
jb
test
cmp
sti
and
jnp
or
mov
xchg
ret
rclb
jnp
stc
cmp
cmp
filds
mov
xor
mov
lahf
add
fdivrs
cmpl
xor
insl
stos
add
loop
scas
mov
popf
shlb
inc
sbb
into
shl
fcom
sbb
add
cmp
cmp
mov
adc
jmp
ret
sbb
xchg
jne
out
hlt
cmp
inc
loope
cmp
jge
and
daa
mov
add
push
and
test
mov
sbb
sarl
dec
or
fldcw
push
sbb
movsl
sarl
std
addr16
dec
out
clc
mov
inc
pop
pushf
jecxz
pop
cld
add
scas
std
push
mov
inc
add
mov
mov
cli
xor
das
jno
scas
movsl
mov
dec
jg
test
or
pop
inc
insl
xchg
jp
adc
cmp
cwtl
jo
sbb
xor
nop
mov
aam
aaa
hlt
scas
repnz
les
data16
mov
leave
les
push
inc
mov
push
js
nop
mov
das
xchg
sbb
and
mov
cld
movl
lock
and
xor
mul
fnstsw
shll
lods
jbe
xchg
outsl
lods
jp
leave
jmp
or
mov
pop
sub
stos
inc
lock
inc
mov
sbb
in
fdivrl
addr16
push
mov
xchg
movsl
add
adc
push
pushf
aam
scas
rclb
jno
xchg
int3
addb
aam
iret
dec
cmp
or
add
add
pop
stos
leave
or
ja
mov
sbb
xor
clc
les
adcb
loope
and
jne
push
mov
jnp
add
cmpsl
pusha
inc
xchg
xchg
loop
sub
pop
into
mov
imul
mov
jbe
xlat
sub
pushf
orl
dec
xchg
test
xchg
cmp
xchg
jno
xchg
inc
dec
insl
or
inc
xchg
push
ret
out
cmpl
scas
add
add
add
or
inc
and
or
int3
mov
mov
inc
cmp
pop
mov
je
cltd
jg
xor
cli
sub
cs
bound
push
jge
inc
sub
xchg
xchg
or
rorb
std
iret
ja
fucomi
sbb
test
xor
rcr
scas
push
inc
cmp
cwtl
jno
aad
xor
mov
outsb
inc
pop
or
mov
test
xchg
xlat
shll
pop
adc
add
jno
mov
add
mov
das
pusha
xchg
mov
pop
les
add
shrl
aad
dec
jecxz
jbe
icebp
sub
xchg
mov
in
xchg
dec
and
subl
add
pop
dec
xor
mov
scas
cmp
mov
xlat
add
mov
lahf
xchg
jno
inc
aad
xlat
scas
and
add
fstpt
lea
arpl
leave
adc
sub
stos
je
je
mov
push
push
les
addl
sub
add
insl
pop
mov
out
cltd
aam
jno
add
add
imul
imul
addr16
xor
imul
inc
test
lahf
mov
pop
inc
pop
add
xor
inc
inc
mov
inc
sbbl
dec
pop
push
mov
or
aas
inc
xor
leave
mov
cmp
std
rclb
or
mov
push
insl
jno
insb
lcall
rorl
inc
mov
imul
andb
dec
xchg
cs
xor
cs
call
shlb
stc
pop
hlt
shrl
push
pop
xor
rol
int
sbb
xor
push
lods
mov
les
dec
daa
push
mov
jp
subb
mov
lcall
out
push
icebp
sti
call
aam
pop
sbb
mov
repz
dec
push
in
and
js
rclb
dec
lsl
lock
test
cmpb
pop
add
and
jb
mov
adc
fstp
mov
lea
ljmp
mov
pop
mov
pop
pop
mov
inc
push
jl
mov
mov
rcr
fldenv
imul
or
jb
inc
and
popa
ret
les
aas
xchg
jbe
jne
cmp
inc
cmp
cmpsb
sbb
incl
andb
pushf
mov
inc
aaa
loop
cmp
aas
xor
jl
aad
mov
dec
cmp
sub
jns
or
push
sar
es
lock
and
lret
ficompl
xor
lods
inc
jo
ljmp
cmpsb
outsl
or
push
mov
xor
push
and
sbb
aad
adc
pusha
int
cmp
add
xchg
outsb
cmpb
or
xchg
mov
cltd
dec
std
xchg
push
and
fs
and
dec
out
std
mov
dec
outsb
iret
arpl
aas
jae
mov
rcr
scas
or
mov
or
dec
sub
cmpsb
cmp
mov
mov
scas
bound
xor
pop
xchg
adc
je
lahf
cs
pop
lock
aad
pop
movsl
mov
or
inc
pop
lea
push
cld
out
loope
ret
clc
mov
loopne
xchg
jne
sti
xor
test
mov
addl
mov
lods
sub
mov
pop
cmp
or
fs
push
loopne
jle
push
xchg
ret
mov
and
add
mov
mov
push
dec
les
test
scas
bound
mov
adc
outsb
jo
out
gs
jbe
out
leave
ret
movsb
mov
stc
add
push
adc
mov
subb
add
jne
hlt
inc
mov
movsl
mov
js
fidivrl
mov
aas
es
xor
and
add
loopne
rolb
test
add
sbbl
dec
adcb
sahf
dec
sub
jne
mov
gs
fsts
mov
mov
out
pop
into
mov
fistpll
xchg
iret
mov
mov
imul
sub
aad
dec
xchg
jl
pushf
cmp
cmp
xchg
int
or
inc
out
adc
rclb
pop
adc
pop
xchg
mov
ljmp
pop
rcl
mov
adc
xchg
inc
in
adc
jnp
insl
and
xor
call
rcll
stc
pop
pop
lds
xchg
mov
aad
xor
pop
icebp
push
adc
roll
or
ljmp
jbe
inc
push
push
call
and
in
dec
mov
push
xor
test
jmp
push
inc
test
rcll
movl
sti
adc
cmp
xchg
cli
lahf
ret
and
push
pop
mov
popa
stc
jmp
mov
sub
cli
mov
adc
sbb
pop
scas
cmc
ljmp
mov
add
movsl
xchg
cltd
mov
xchg
jno
or
adc
jp
ja
adc
add
aam
and
mov
jge
jae
cmp
in
inc
sbb
sbb
inc
pop
mov
pop
push
ret
insl
lods
add
xorl
std
lea
push
and
mov
dec
out
or
test
sub
inc
es
aaa
push
nop
pop
and
ror
scas
adc
enter
leave
es
js
stos
test
jg
add
shll
push
mov
jns
rcrb
scas
popa
lret
aas
jecxz
test
lahf
adc
inc
jbe
push
mov
push
test
pop
mov
aaa
movsb
cmp
push
push
mov
inc
out
mov
mov
adc
scas
es
inc
dec
xchg
dec
cmp
ja
and
add
inc
clc
sbb
push
rorb
jbe
popf
push
cmp
clc
xchg
or
adc
fcmovb
mov
ret
mov
or
std
insl
mov
inc
add
dec
andl
cmp
dec
adc
out
inc
ret
filds
stc
dec
imul
mov
cld
das
xchg
aas
cmp
or
jl
push
jmp
out
incl
push
out
add
popa
lret
rcl
pop
mov
or
insb
push
jo
jae
push
cli
outsb
in
mov
imul
pop
ja
xchg
ja
hlt
jo
xor
out
inc
pop
jns
mov
jno
and
jns
lret
mov
mov
dec
lock
ja
mov
inc
mov
mov
mov
in
pop
dec
clc
jge
mov
int
movsb
bound
mov
cwtl
sbb
dec
sbb
cs
inc
leave
add
stos
out
outsl
cltd
sub
xor
jae
cmpsb
mov
jg
inc
mov
ja
mov
loope
add
shll
jns
or
push
or
lahf
dec
add
mov
pop
sub
sti
ja
pop
scas
subb
adc
lods
addr16
mov
jmp
sub
jg
jge
rcrb
push
cmp
cmc
das
fmuls
in
ljmp
repz
cmp
loop
test
dec
pop
cli
dec
xor
mov
add
push
pop
aaa
mov
adc
rol
sbb
jo
sbbb
mov
dec
xor
jecxz
jmp
fimull
sbb
adc
inc
xor
outsl
inc
lods
ret
mov
sub
mov
test
jecxz
loop
jmp
xlat
test
or
cs
jae
jb
cld
xor
lcall
adc
ds
sub
test
xorb
dec
sub
push
and
mov
push
out
xchg
cwtl
sub
pop
sub
gs
mov
adc
cmc
pop
add
push
jl
mov
ret
out
stos
or
andnps
lods
xchg
inc
scas
push
clc
loopne
pop
inc
jp
sbb
test
mov
test
jl
dec
stos
sub
mov
aaa
push
call
dec
nop
cmp
pop
fcmovnu
call
add
xor
repz
sub
fstl
sbb
inc
clc
cmpsl
aas
mov
mov
sbb
mov
mov
ja
push
stos
xor
sbb
call
adc
mov
mov
mov
push
scas
lods
push
sub
lret
xchg
push
or
lock
mov
lahf
shrb
mov
aad
stos
sti
dec
clc
mov
mov
adcb
or
adc
in
loope
sbb
xchg
test
xor
rolb
rol
mov
push
inc
cli
in
mov
in
ss
subb
mov
xchg
push
not
jecxz
add
sarb
pushf
out
fdivrl
cmpsb
dec
sbb
mov
adc
pop
stc
mov
gs
mov
sbbl
lret
test
inc
inc
push
sarb
out
add
je
int
movsb
jns
mov
fsubrl
adc
xchg
push
jge
inc
js
fcoms
push
push
add
mov
pop
pop
cmpl
testb
les
sarb
pushl
xlat
enter
cwtl
hlt
sti
sub
out
ds
rcll
jo
and
mov
push
out
nop
add
or
in
push
shrl
ficoms
jb
call
push
xchg
outsb
inc
dec
push
jmp
inc
push
jnp
mov
inc
push
dec
pop
push
inc
push
jg
lods
cli
mov
and
mov
or
inc
ljmp
loop
test
inc
add
fildl
ret
adc
imulb
pop
loope
and
ret
cmp
mov
call
outsb
inc
jecxz
add
roll
fstl
pop
rorl
cwtl
sbb
int3
xor
jbe
mov
push
jle
sbb
fstp
mov
mov
dec
aaa
mov
cmp
or
stos
test
add
push
pop
or
and
or
loop
dec
sbb
pop
rcll
movsl
xchg
stos
inc
jb
sti
xlat
and
loop
add
pop
adc
mov
aad
push
xor
fbstp
or
icebp
loope
inc
dec
in
or
inc
adc
cld
data16
test
sbb
adc
addr16
cmp
jl
imul
ljmp
xor
lods
mov
es
js
jo
dec
loop
jns
adc
adc
mov
add
adc
push
gs
decl
jo
adc
sbb
add
ss
jg
cmp
fisubs
xchg
lahf
inc
pop
cs
test
ret
xor
fisttpl
lods
add
jmp
sarl
test
mov
adc
adc
adc
lret
outsl
clc
push
xor
mulb
pop
je
dec
add
scas
lock
xchg
rcr
je
cli
aad
jbe
mov
int
loope
mov
sarb
inc
push
in
je
scas
ficomps
insl
jp
mov
cli
fldenv
les
rorl
jne
xorb
cmp
into
sti
dec
mov
mov
add
sahf
movsb
mov
add
outsl
decl
sub
cmp
repz
pop
lock
inc
das
mov
idivl
and
mov
mov
push
or
mov
lret
mov
scas
push
enter
push
hlt
outsb
call
mov
out
test
sbb
je
xor
dec
or
incl
test
xor
imul
dec
add
loopne
rcrb
add
shlb
fdivs
or
cmc
add
cwtl
orb
cmp
mov
mov
shll
mov
test
outsl
jo
nop
sbb
mov
out
cli
and
xchg
int3
push
mov
add
jle
or
mov
add
shrb
push
clc
test
ja
insb
and
imull
enter
mov
add
xchg
mov
xor
cmp
or
cmp
clc
lock
mov
sbb
cli
xlat
out
js
mov
inc
xchg
mov
add
inc
sbb
mov
je
in
sti
pushl
rorl
fiaddl
pop
div
pop
xchg
into
sbb
jl
rorb
dec
adc
popa
ret
popf
add
push
mov
or
or
out
outsb
push
and
cmpsb
icebp
push
pop
pop
jo
test
lock
fdivl
pop
insl
ljmp
pushf
lcall
adc
sbb
int3
sahf
add
or
xchg
decb
je
mov
je
loop
mov
dec
cmp
mov
cmp
mov
cld
push
es
in
adc
add
push
sbb
mov
xchg
imul
pop
or
out
cmpb
sti
xor
inc
add
dec
sti
lds
mov
and
jns
jg
ljmp
or
ror
pop
sbb
push
or
inc
jne
xlat
ret
leave
ret
scas
sub
fcoml
or
mov
pop
gs
or
movsl
into
rorb
stos
loop
inc
cs
pop
insl
jne
ja
outsl
je
orb
lea
mov
jmp
lds
and
jl
out
mov
cmp
lcall
mov
jl
pop
mov
dec
xchg
jle
flds
adcb
push
mov
out
ja
xor
lret
mov
icebp
sbb
fbstp
jae
adcl
das
les
stos
sbb
and
add
jae
or
lahf
mov
mov
push
xor
inc
pop
cld
mov
lods
sbb
push
lahf
cmp
scas
je
std
mov
push
mov
in
mov
adc
xchg
and
adc
cmp
sub
mov
sub
push
addb
hlt
pop
sbbb
xor
pop
aad
sbb
loope
lret
movsl
xchg
xor
hlt
push
mov
adc
stos
setg
pop
dec
les
and
das
pop
jnp
push
pop
stc
mov
push
mov
and
lcall
and
mov
aad
jp
sub
ret
in
mov
imul
cmp
movsb
nop
mov
in
andl
les
lock
pop
inc
mov
iret
or
sbb
sarl
iret
push
fldt
scas
fstl
fsubrs
into
push
fimull
sub
aam
jmp
add
out
incl
lret
jge
int
pop
rolb
add
xchg
or
dec
cmp
bound
mov
pop
shl
out
sub
stos
out
mov
push
fimull
jne
imul
cmp
jb
add
cs
cmp
jl
imul
mov
add
aad
jge
addr16
mov
pop
sub
negb
test
push
jb
mov
ljmp
jle
mov
adc
arpl
xchg
xor
les
fstpt
push
push
lahf
add
sub
incb
xor
addr16
int3
mov
jl
fisubrl
add
imul
stos
sbbb
ret
add
pop
icebp
std
testl
sub
call
sbb
ret
xchg
push
sahf
clc
aad
out
mov
cmp
popa
or
stos
mov
or
lret
adc
shrb
add
lea
insl
or
adcb
jmp
or
fs
lcall
mov
xlat
out
fcmovbe
xchg
aas
popa
xor
push
scas
les
imul
mov
xor
test
or
sahf
inc
inc
mov
cld
jge
adcb
mov
imul
pop
idivb
pop
fxtract
mov
push
sbb
fst
mov
dec
push
sbb
xchg
dec
sub
mov
adc
imul
je
or
loopne
push
lcall
or
or
pop
stos
sub
push
cwtl
jecxz
sub
dec
pop
mov
or
fwait
inc
clc
pop
mov
pushf
in
mov
lahf
add
xor
call
sarb
mov
jmp
rclb
pop
inc
mov
cmc
mov
ret
aam
dec
test
and
orl
mov
imulb
mov
mov
test
stc
jge
fisttpl
mov
cltd
jge
inc
incb
xor
ret
pop
sub
sub
jmp
and
push
lods
xchg
mov
lods
sub
addr16
mov
xor
rol
jne
xchg
mov
push
outsl
dec
fbld
xchg
and
and
arpl
inc
lcall
xor
mov
cmpsl
aam
insl
stc
fs
and
stos
jge
dec
lods
pop
inc
movl
pop
lahf
popa
sbb
dec
lods
xor
cmp
cmp
cmp
add
je
cld
stos
rcl
mov
add
fsub
out
push
dec
xchg
push
das
popa
scas
sub
sahf
subb
mov
xlat
inc
jl
in
mov
cltd
and
jl
xchg
push
pop
loop
lret
sub
in
xchg
jno
daa
xor
or
pop
lods
sti
xchg
shlb
pop
sarb
fildl
movsb
test
push
mov
inc
xchg
or
cmpb
shlb
incl
pop
sbb
mov
test
int3
inc
mov
jbe
nop
fs
adc
cmp
je
dec
bound
jle
jo
mov
sub
leave
push
enter
mov
xchg
in
ljmp
aaa
push
push
push
push
sbb
push
sbb
add
push
push
in
push
es
dec
sub
dec
sub
mov
rolb
or
add
ret
sub
xor
mov
adc
rorl
jb
cltd
mov
mov
push
into
movsl
jns
add
xchg
arpl
lahf
add
outsb
dec
push
aaa
scas
loope
aaa
mov
cmp
cmp
test
and
lds
sub
test
pop
sub
xchg
or
sbb
jo
or
add
popf
dec
adc
ss
test
cld
dec
popa
cltd
and
add
movsl
das
pop
lret
dec
test
out
dec
dec
add
and
sbb
outsl
daa
jo
pop
and
jp
dec
ret
popl
xor
daa
and
stos
xchg
loopne
out
pop
pop
imul
fidivrs
jb
xchg
xor
movb
and
inc
ja
or
shrl
inc
jno
aam
pop
pop
push
lea
repz
pop
aam
aad
orl
dec
dec
fs
xor
test
mov
jo
mov
add
inc
test
sbb
call
push
clc
jbe
insb
add
call
xor
push
sbb
push
int3
push
add
xor
inc
js
pop
leave
xor
push
xor
jp
jmp
dec
call
arpl
es
mov
cmpsb
pop
add
lods
and
mov
icebp
inc
push
dec
mov
push
pop
pop
push
cwtl
outsl
pop
adc
xor
clc
in
sbb
jecxz
add
inc
gs
jle
repnz
lock
add
fists
xchg
sbb
cmc
cld
leave
push
sub
and
add
jns
sbb
insb
or
out
mov
mov
or
int
out
cmp
push
imul
push
xchg
icebp
xchg
push
sub
loopne
loop
and
clc
add
dec
jnp
push
aam
and
and
sub
inc
dec
int
adc
adc
adc
imul
mov
sbb
ret
adc
add
or
mov
fs
pop
inc
add
lods
push
arpl
in
pop
jge
cmp
cmpsl
xchg
call
sbb
mov
inc
clc
loopne
cmpsl
and
adc
loope
test
popa
cmp
loope
mov
psubb
push
lea
outsb
or
adc
pusha
scas
mov
xchg
pop
pop
and
push
enter
js
jnp
idivl
pop
and
inc
and
cmpsl
mov
pop
pop
mov
xchg
shll
ret
pop
rcrl
sub
jg
add
and
xchg
loopne
push
jno
jb
popl
fwait
lahf
stos
sub
sbb
ljmp
outsb
mov
ss
cmp
jae
push
push
inc
iret
movsb
push
mov
jge
fbstp
push
cltd
shl
inc
push
add
arpl
mov
jle
sub
mov
or
push
push
mov
int
inc
js
jl
pop
fiaddl
out
adc
pop
pop
lret
push
jb
xchg
push
mov
pop
push
lods
dec
orl
shlb
lods
data16
fldl
xorb
test
cwtl
ds
loope
cs
sub
xchg
or
ljmp
add
pushf
xchg
out
loopne
jmp
imul
add
and
js
adc
clc
add
dec
add
xchg
dec
jne
jg
xor
or
xor
inc
cmpsb
mov
or
les
push
js
and
shl
test
imul
aaa
mov
loope
pop
mov
je
mov
jb
stos
rorl
sbb
and
mov
add
js
lods
mov
xchg
imul
or
xchg
sbb
ret
stos
ret
push
xlat
cmp
bnd
xlat
add
pop
insl
adc
das
pop
es
test
dec
ja
ljmp
dec
dec
xchg
add
inc
dec
pushf
into
sub
ret
xchg
ja
or
dec
nop
scas
out
adc
and
rclb
sbb
pop
mov
jns
ret
cmp
cwtl
dec
test
lds
or
push
or
sbb
cmp
int
push
ljmp
mov
pushf
flds
xchg
add
xchg
or
pop
sbb
adc
push
and
fstp
and
xor
hlt
mov
inc
sbb
shl
ja
mov
or
daa
test
jmp
and
bnd
pop
in
push
push
mov
stc
bound
dec
add
repnz
je
aam
push
movsl
jl
sbb
sti
test
popa
inc
outsb
loope
orl
sbb
add
test
mov
arpl
ds
mov
jp
rorb
sahf
mov
mov
lods
sub
rcr
pop
push
dec
inc
or
out
xor
mov
push
and
mov
mov
jmp
push
aad
jg
cmp
push
push
or
fwait
mov
aas
and
andl
jle
cli
add
jbe
out
jo
push
mov
imul
sbb
add
sbb
rcll
fisttps
aas
negl
mov
fiaddl
add
ljmp
inc
nop
pop
sub
cmpl
or
jb
int3
jmp
stc
int
ficompl
xor
insl
imull
inc
in
jne
scas
mov
lock
pusha
fcmovbe
fistl
xlat
test
hlt
push
mov
or
jle
sbb
iret
sbb
je
out
je
sub
shrb
jbe
clc
jbe
xchg
test
mov
rolb
and
test
xor
lods
lds
mov
aas
xchg
std
aas
adc
mov
dec
or
and
les
push
xchg
stos
addr16
pop
and
sbb
aaa
sbb
lds
aam
pop
lret
arpl
test
push
sub
in
mov
xor
daa
xchg
in
xor
mov
pusha
jle
repz
dec
adc
or
insl
jae
cmp
fwait
or
sub
hlt
scas
or
shlb
ret
xor
cmc
dec
pop
pushf
scas
inc
inc
or
lret
adc
out
jae
sub
ror
insl
inc
or
cli
cmpb
mov
sbb
imul
pop
xor
lcall
sbb
xchg
inc
mov
test
mov
fwait
push
aam
loope
cwtl
movsl
xorb
sub
xorb
jb
call
cmpsb
jg
xchg
inc
or
mov
inc
push
pop
jo
add
push
cli
mov
sub
ss
sbb
mov
jb
enter
adc
jle
shrl
call
stos
aad
scas
pop
hlt
loop
loop
and
repnz
call
loopne
outsb
aad
leave
push
and
jb
dec
xorl
inc
mulb
iret
xor
mov
int3
push
es
push
push
dec
pop
fsubr
jae
fadds
lods
mov
sbb
jg
jle
ja
int3
adc
pusha
jb
sbb
jns
cmp
or
sub
lock
add
out
or
andb
push
xlat
popf
cs
call
sbb
sbb
pop
cmc
stos
adc
sbb
mov
inc
sub
xor
add
fimull
idivl
push
jmp
xor
je
into
mov
inc
sub
mov
adc
in
lock
jle
dec
mov
mov
dec
inc
jb
xchg
and
test
push
outsl
jmp
push
dec
dec
push
cmc
mov
dec
and
out
imul
dec
and
adc
xchg
jnp
lcall
inc
test
test
dec
movsl
jne
fildll
in
inc
pop
and
aam
imul
sub
call
jo
sbb
fldl
in
adc
int3
mov
test
mov
or
or
imul
je
in
fxch
dec
add
popa
lock
sbb
imul
push
xchg
jmp
jnp
mov
jo
fiadds
or
mov
pop
lcall
dec
push
jmp
add
adc
and
insl
and
xor
mov
jns
xchg
mov
sbb
cmpsb
ja
add
dec
xor
and
je
jl
sub
xor
icebp
pop
icebp
gs
jle
jmp
leave
xchg
mov
mov
dec
mov
ret
sbb
outsb
lret
xchg
mov
popf
mov
out
dec
mov
loopne
or
scas
cmp
jle
mov
popa
dec
inc
lret
popa
popf
pop
das
outsl
ja
out
push
lock
ds
out
sti
push
jnp
int
xor
rclb
insl
sub
cli
sarb
cmp
scas
dec
cmp
mov
add
dec
or
xchg
pop
xchg
loop
jne
addb
stos
mov
xchg
ljmp
adc
and
in
cld
lock
pop
xchg
and
enter
xor
pop
out
sub
push
lahf
pushf
dec
mov
push
sarb
sbb
ss
sbb
sbb
jo
cli
test
adc
adc
int3
jne
mov
cmpsb
push
outsl
or
lcall
rolb
outsb
add
add
lock
shrl
loope
stos
sbb
inc
hlt
pushf
cli
fnstenv
fs
cmp
ljmp
stos
dec
push
icebp
fistpll
ljmp
dec
push
loope
pop
insl
ja
mov
adc
push
push
std
and
push
xchg
pop
adc
call
pop
mov
outsb
mov
push
iret
pop
xor
sub
adc
cld
pop
add
roll
jns
hlt
hlt
loopne
in
sbb
jo
jg
add
negb
cmp
push
gs
hlt
rol
mov
push
xor
jb
add
loop
inc
or
add
push
mov
shll
jns
fbld
stos
shlb
xor
pop
lret
adc
dec
les
lods
jbe
inc
mov
inc
shrl
dec
loop
scas
push
sbb
fldcw
or
jmp
shl
mov
mov
xor
in
sbb
andl
repz
mov
and
aam
mov
in
movsb
pushf
std
cli
filds
pop
inc
mov
fiaddl
bnd
pop
rcrl
pusha
test
add
inc
add
cmp
in
jle
push
ffreep
push
adc
jo
cmpsb
aad
pop
inc
xchg
in
sub
lcall
shlb
jle
cmp
sbb
js
lods
pop
add
lds
or
push
dec
mov
mov
pushf
push
inc
mov
push
stc
push
adc
roll
adc
dec
mov
dec
lods
mov
aas
leave
inc
dec
scas
sub
in
add
sbb
cmpsb
mov
test
loope
add
or
xor
jmp
xor
jae
negl
hlt
push
or
push
sbb
out
push
pop
jnp
lahf
mov
push
hlt
subb
fldl
pushf
xlat
nop
ret
jo
aam
ljmp
or
pop
in
xor
mov
rolb
iret
dec
cli
jl
jge
mov
sbb
rorl
push
cmpxchg
ss
push
and
dec
shr
jmp
xorl
ret
pusha
jb
inc
cmc
lret
inc
jge
xor
cmc
or
loopne
xchg
in
fsts
jmp
jb
mov
hlt
cmc
mov
imul
jl
add
dec
mov
mov
ljmp
jno,pn
xor
adc
div
js
xor
out
fwait
das
cmp
cs
xor
in
xor
jb
jge
mov
dec
iret
scas
sub
sub
adc
sub
gs
pop
sub
pushf
pop
push
ret
jecxz
lock
shll
and
xor
adc
js
in
sti
leave
cld
push
add
pop
push
sub
stos
imul
cli
pop
add
out
scas
adc
jno
leave
es
adcb
adc
or
and
rcrb
das
inc
add
push
adc
and
inc
jb
icebp
icebp
cmpsl
cli
xchg
inc
mov
loope
mov
ljmp
dec
shr
dec
scas
rolb
mov
mov
jl
add
enter
pop
pushf
xchg
mov
and
dec
jb
outsl
push
push
mov
bound
sub
xchg
push
jo
sub
lds
pop
fdivrs
adc
push
jge
add
pop
push
jmp
or
mov
shll
imul
push
popa
das
loopne
xchg
mov
mov
push
rcrb
mov
xor
cmpsb
cmp
jo
iret
push
cmpsb
push
or
sbb
call
mov
xchg
imul
mov
cmc
mov
mov
mov
xlat
faddl
outsl
push
aam
or
and
sub
adc
jp
jmp
lcall
aam
arpl
jge
lret
push
cs
cli
lods
movsb
sbbb
idivl
in
ficomps
loop
cmp
subb
jb
add
lret
add
mov
pusha
in
sbb
scas
sub
push
data16
notl
movsb
dec
lea
sub
sahf
popa
inc
add
sub
popa
loop
jne
mov
nop
jno
mov
sbb
call
and
mov
and
or
test
xorl
subb
xchg
mov
in
fldenv
aas
out
mov
insb
sub
pusha
push
pop
push
push
outsb
add
adc
mov
faddl
sub
sub
jb
or
push
add
lods
lret
inc
xchg
adc
xor
in
xchg
bound
mov
sbbl
jno
mov
dec
mov
inc
mov
xchg
xchg
test
je
sbb
fmulp
fisubrs
or
xchg
pop
icebp
add
sbb
sub
xchg
and
ja
out
jg
mov
mov
fcoms
xchg
jae
sub
dec
pop
stos
iret
inc
pusha
and
jae
jmp
inc
mov
lahf
popf
sub
out
mov
out
inc
fmull
shr
aaa
scas
mov
push
xor
xchg
hlt
xchg
dec
je
dec
daa
rorl
sahf
popf
test
push
jecxz
les
test
pop
mov
jle
imul
insl
jns
out
les
loope
add
jno
rcrb
das
xor
loope
rcll
popa
ja
test
jnp
nop
lods
push
push
mov
dec
ret
lcall
fildl
jne
add
xor
push
dec
and
inc
and
popf
jecxz
push
push
and
inc
sbb
cwtl
data16
out
aam
jmp
jmp
mov
adc
fwait
lahf
in
jl
add
mov
pop
adc
adc
sbb
testl
pop
and
imul
ss
push
add
or
mov
inc
sub
popl
inc
pop
adc
adc
pop
out
jmp
fistpl
jmp
cli
filds
out
xchg
fdivp
pushf
mov
mov
sub
imul
sbb
std
cmp
cmpsb
mov
mov
clc
test
inc
xor
push
jnp
out
inc
or
jne
push
inc
cmpsb
push
and
inc
clc
push
xchg
insb
decl
jnp
out
cld
pusha
push
sbb
push
dec
jb
outsb
add
fisttps
clc
xlat
jle
jge
mov
in
jmp
or
bound
adc
int
jb
push
test
loope
repz
jnp
push
mov
call
lock
addl
dec
pop
mov
mov
addr16
fcoms
sub
or
xchg
cmpsb
cmc
xchg
ja
cmp
mov
jg
adc
sub
scas
rorb
jl
dec
popa
lds
insb
fisubl
pusha
sbb
cwtl
and
gs
or
aas
jmp
pusha
repz
pop
xlat
or
cmp
cmp
and
insb
mov
adc
leave
xor
lret
xlat
imul
add
ret
and
sahf
pop
ret
adc
dec
cmpsl
push
xlat
xchg
jae
pop
popa
loopne
push
add
jbe
pop
jmp
daa
inc
mov
pop
psrlq
xor
pop
bsr
jge
fimull
subb
fadds
mov
dec
and
or
cmp
jmp
inc
sysenter
mov
fsubr
lret
adcl
repnz
icebp
cmpsl
mov
fstl
or
sbb
popa
fcmovbe
cltd
pop
adc
mov
and
cmp
pop
xadd
add
pop
inc
pop
and
cmp
aam
test
fildl
pop
pop
outsl
movsl
adc
test
mov
mov
dec
mov
lds
jge
gs
xchg
fst
dec
fwait
shlb
call
cmc
fs
sub
test
pop
jbe
and
rclb
hlt
pop
imul
scas
pop
sub
ret
sub
jnp
and
insl
stc
test
sahf
push
mov
nop
out
repz
xchg
negb
lock
pminub
push
cs
jg
enter
sar
sub
push
in
in
adc
or
out
es
pusha
ret
cmpsl
add
test
js
sub
adc
push
mov
xor
fwait
push
sbb
push
and
in
jp
mov
mov
or
and
in
js
cmp
int
negl
aas
jmp
mov
mov
cmp
outsl
inc
xchg
mov
cmp
aam
call
mov
pop
icebp
mov
push
push
dec
punpckhbw
fdivrs
mov
mov
pusha
jnp
xor
pop
pop
stos
dec
cld
push
push
inc
or
and
jns
inc
mov
and
sti
or
orb
jg
push
inc
mov
mov
add
mov
xor
scas
fs
pop
scas
les
mov
sbb
pop
pusha
fcomps
xor
jne
dec
dec
sarl
and
pop
mov
adc
stos
and
lea
cmp
mov
sahf
add
shlb
mov
mov
out
cmp
es
jb
mulb
and
outsw
bound
push
sbb
or
jl
pop
add
inc
jge
sub
cmp
popa
push
lret
add
icebp
filds
xor
push
cmp
in
les
jns
mov
mov
xorb
mov
and
push
sbb
enter
out
or
adc
js
jp
mov
push
fldenv
jmp
test
push
scas
test
loope
push
push
insl
cmp
es
js
add
pop
or
sub
test
push
dec
out
out
pusha
xchg
xchg
add
popa
jmp
pop
cwtl
test
push
insl
xchg
ret
div
sub
jb
add
mov
ret
xchg
cld
fcoms
xchg
lahf
sbb
test
and
cmp
out
adc
inc
aam
xchg
mov
shrl
scas
imul
jp
push
jmp
add
loopne
rolb
mov
cmp
or
mulb
push
inc
loope
sahf
ja
add
jnp
dec
jns
cmp
aaa
inc
roll
imul
push
loopne
push
push
gs
pop
les
push
dec
inc
push
push
add
fwait
pop
add
test
and
in
sbb
add
dec
and
adc
mov
lods
mov
icebp
lods
pushl
sahf
lods
add
mov
dec
push
xor
data16
mov
js
jmp
mov
stc
jg
add
xchg
push
jne
andb
push
jmp
scas
jbe
aad
es
sub
push
dec
cmpsl
rcll
add
add
unpcklps
dec
adc
push
call
lahf
sbb
adc
sbbb
scas
int
mov
push
xor
push
lods
sub
inc
pusha
sbb
mov
sbb
add
add
dec
xor
test
xchg
sbb
or
inc
inc
dec
lea
xor
fwait
or
inc
sahf
repz
xor
inc
std
les
sbb
and
push
jnp
cmp
clc
xor
sbb
repnz
jmp
add
cltd
push
push
mov
add
pushaw
mov
fistpll
fs
add
dec
in
mov
and
dec
xchg
jo
mov
pop
pop
notl
shll
or
test
mov
xor
ficoms
mov
mov
sub
push
sarl
loop
ds
mov
dec
or
insb
in
dec
add
cmp
dec
cmp
inc
and
in
repnz
jp
and
test
ret
sub
fwait
ljmp
std
add
jb
or
ret
call
jbe
cwtl
jns
or
inc
andb
mov
dec
loopne
and
mov
in
inc
pop
add
sbb
mov
cmc
and
xchg
mov
fidivs
mov
cmpsl
idivb
lods
clc
das
ljmp
cmp
xor
adc
dec
and
orl
mov
xor
pop
lods
pop
sbb
or
add
hlt
arpl
xchg
sbb
mov
xor
pusha
mov
mov
lock
ss
mov
cli
mulb
or
sbb
xchg
push
cmp
aaa
fisubs
push
push
fistpll
push
or
lahf
xor
pop
ljmp
cli
push
arpl
rolb
cwtl
mov
fsubl
insb
std
pop
push
mov
push
clc
or
pop
das
push
enter
add
and
mov
in
sbb
lcall
sahf
icebp
pop
xor
mov
das
scas
or
cli
xchg
test
push
add
jbe
cmp
add
lcall
cmp
and
or
jp
jne
push
or
mov
mov
add
inc
adc
sbb
xor
movsb
mov
mov
in
icebp
icebp
cs
sub
inc
out
adc
xor
lcall
cli
les
rcr
cld
jo
xchg
jle
sti
jmp
push
js
pop
in
movsb
cmp
add
jmp
add
sub
lea
leave
cmpsb
or
sbb
push
cmp
push
xchg
pop
repz
or
xchg
mov
add
js
xchg
ljmp
xchg
popa
mov
mov
mov
fisubl
movsl
ret
das
jbe
add
and
dec
ljmp
jbe
incl
mov
outsl
xor
lahf
and
cmp
jbe
inc
loopne
lcall
add
andl
push
scas
in
xchg
andb
push
add
cmc
mov
aas
mov
pushl
xchg
mov
add
fnstenv
mov
dec
out
and
fnstenv
sub
lcall
loop
iret
loop
lock
divb
in
push
or
scas
sub
xor
sub
iret
and
cmp
dec
fistpl
push
loopne
ret
xor
and
inc
xor
ret
loope
push
shll
out
pop
pop
push
cli
shll
rcr
mov
sub
or
arpl
push
loopne
sub
stos
and
rclb
stos
ret
pop
das
cmp
call
push
mov
test
int
adc
sub
add
adc
call
add
mov
shl
rorl
fnstcw
sahf
xchg
dec
clc
add
loop
inc
cmp
stos
xchg
les
xchg
and
sub
sti
and
bnd
add
jmp
out
sbb
popf
aam
jbe
sbb
pop
ja
xchg
leave
adc
movsl
shrb
js
xor
mov
frstor
int3
inc
push
shrl
sub
insl
nop
or
hlt
mov
add
fadds
xchg
jecxz
dec
js
aam
adc
xchg
subl
jp
cmpsb
stos
mov
mov
lret
add
mov
dec
xchg
js
pop
inc
xor
mov
sbb
stos
mov
xchg
add
les
push
mov
test
mov
bound
xor
mov
or
call
mov
arpl
cmpsl
mov
lods
icebp
xchg
ljmp
push
fidivs
leave
cs
movsl
daa
inc
mov
jbe
inc
clc
lret
stc
aas
dec
push
ljmp
xchg
xchg
cld
leave
push
loopne
or
adc
and
bound
push
inc
clc
jle
xor
sbb
in
xor
enter
jle
and
dec
outsb
in
push
cmp
les
call
xchg
fdivs
fisubl
pop
and
push
and
test
inc
xor
aad
push
lock
or
push
popf
or
lock
cmp
sbb
xor
dec
sbb
fwait
sarb
lret
es
lods
xorl
in
xor
hlt
mov
iret
stc
sahf
pop
adc
and
pop
enter
pop
hlt
test
loop
mov
jecxz
rol
cmpsl
jne
add
jg
push
xchg
jg
or
int3
lock
pop
sbb
lcall
scas
sub
mov
pop
jb
xor
xchg
out
ret
push
mov
cmp
stos
pushf
in
xchg
adc
xchg
dec
jbe
movsb
cltd
mov
dec
and
adc
adc
jbe
or
xchg
stc
mov
ds
sbb
push
in
outsl
cmc
adc
bound
lock
sub
cmpb
adc
pop
scas
test
xor
shll
rcr
out
in
repz
and
fcoms
popf
or
jmp
je
jge
xchg
bound
push
add
inc
adc
push
add
lds
movsb
xchg
push
lock
push
jl
popf
nop
lret
imul
xchg
lods
add
cld
add
pop
es
push
jg
xor
lock
int3
jl
xchg
push
add
sbb
les
jl
js
mov
inc
out
inc
add
lock
int3
inc
pop
iret
mov
jecxz
mov
pop
mov
std
repz
ffree
dec
mov
cmp
lcall
cs
mov
lods
xlat
jne
rolb
pusha
xchg
mov
aam
lret
push
test
ret
jp
pop
cmp
cmp
movsl
adc
js
xor
lock
xor
push
push
dec
adc
les
rcr
dec
xor
push
xor
xorl
movsl
xor
jp
cli
mov
pusha
test
cmpsl
imul
add
and
pop
inc
mov
jbe
inc
aas
daa
cwtl
push
mov
cmp
pavgb
cmp
xchg
les
xor
lock
loope
mov
mov
jg
xchg
and
ljmp
adc
mov
push
mov
movl
jno
sbb
movsl
mov
xor
push
pminub
push
pop
test
push
incl
cmpsl
xor
testb
cmp
cmpsl
cmp
stc
aaa
call
jecxz
les
mov
scas
mov
xchg
adc
sbbb
fstps
xor
adc
sahf
addr16
clc
lock
sbbl
and
addr16
fisubs
add
xchg
mov
add
decb
mov
mov
bound
add
xchg
ret
mov
add
sbb
jge
enter
mov
sbbb
push
or
cs
aas
add
scas
loopne
push
pushf
cli
add
ret
ds
rcr
xchg
inc
loopne
jbe
push
rolb
push
inc
pop
cwtl
cmc
pop
aaa
je
dec
sub
popf
pop
cmp
sub
mov
mov
jnp
into
cmp
mov
mov
pop
mov
insl
cli
in
or
insb
xor
subps
scas
xor
bound
int3
mov
ljmp
div
aas
sbbb
test
push
adc
ja
push
adc
in
test
mov
mov
inc
jno
add
leave
jle
mov
fstpl
mov
add
mov
loop
leave
cltd
inc
ss
dec
add
sub
aad
push
add
out
and
adcb
dec
pop
loopne
dec
sbb
cwtl
fs
cmp
mov
andb
xor
setne
bound
jo
fidivs
xchg
pop
outsl
into
decb
inc
adc
xchg
stos
mov
push
and
cmp
and
adcl
sbb
push
loop
and
mov
push
shlb
ffree
lcall
aam
cs
in
outsl
movl
jecxz
hlt
add
inc
pop
stos
ljmp
cwtl
adc
andb
xchg
cmpsb
ret
out
lods
scas
add
adc
jle
out
lock
fsubrs
add
dec
add
mov
cmpsb
pop
mov
lods
adc
pop
push
xchg
pop
or
lock
push
xor
mov
push
and
cmc
pop
push
mov
addl
mov
test
shl
incl
xchg
sbb
cmp
push
daa
dec
pop
push
adc
mov
push
inc
push
sbb
mov
push
push
mov
adcl
sarb
xchg
add
jns
rcll
scas
call
shlb
add
xchg
cmpsl
cmpsl
mov
jg
sti
and
mov
cmp
dec
push
push
fimull
cld
jnp
out
sub
pop
and
jne
inc
sub
inc
lods
dec
fisttps
mov
cs
xchg
adc
cmpsl
push
xchg
adc
jo
push
cmp
jmp
pop
cmpsb
jp
jmp
lcall
daa
mov
inc
xlat
xchg
inc
fdivrs
lds
lret
iret
sbb
pushf
push
je
push
ja
cmp
enter
addr16
mov
imul
add
inc
cmp
bound
out
and
cmpsb
mov
not
push
push
mov
stos
in
ljmp
or
and
fdivs
data16
push
dec
js
mov
fistpll
cli
sub
dec
sti
call
inc
push
lret
and
or
jmp
jae
cmp
jbe
pop
call
out
cld
jae
push
aas
mov
movsb
stos
jne
sub
shlb
sub
cmp
adc
fxch
les
popl
loop
adc
cmpsl
inc
jecxz
jne
sbb
xchg
xor
aas
lods
out
in
push
xchg
sar
aas
push
lret
je
or
fldl
mov
dec
sahf
aas
jl
sub
inc
enter
imul
push
fsub
je
xchg
mov
jge
mov
or
lea
or
scas
dec
mov
or
jnp
cld
shll
loopne
mov
push
arpl
nop
adc
add
jp
mov
divps
jns
repz
lahf
iret
shlb
add
das
mov
push
push
xor
dec
ret
jmp
mov
hlt
jns
cltd
repnz
push
and
push
aad
mov
push
scas
or
in
loopne
mov
inc
mov
cmpb
movsb
enter
ljmp
cltd
mov
sar
jmp
jl
add
mov
lds
jle
stc
adc
icebp
icebp
or
xlat
xor
push
cli
ljmp
or
popf
mov
or
rcrb
imul
cmp
push
flds
or
dec
rorl
push
adc
xor
inc
inc
js
dec
and
xor
sub
dec
dec
loopne
sbb
push
inc
hlt
and
mov
mov
inc
rolb
sti
pop
add
cmp
inc
mov
xchg
push
push
push
loopne
dec
popa
push
insl
add
addr16
adc
push
icebp
pop
xchg
pop
ret
cld
movsb
mov
ja
cmp
inc
add
ret
imul
daa
cmp
mov
inc
pusha
cmpsb
jl
sbb
and
in
test
scas
mov
mov
sbb
add
xor
jno
cmp
xor
or
jecxz
movsb
jnp
jg
inc
outsl
xchg
pop
inc
push
movsb
add
mov
mov
out
and
movsl
jmp
fidivrl
jbe
ja
sub
push
out
ret
insl
test
dec
mov
push
test
mov
jo
pop
adcb
shrb
cwtl
test
push
loop
sub
or
mov
and
sbb
adc
icebp
sbb
test
shlb
stos
fsts
jl
mov
sub
jl
cs
cwtl
mov
jo
push
sub
repz
pop
insl
fisubrs
fwait
into
ficomps
push
adc
mov
es
xchg
arpl
or
add
dec
testb
shrl
and
jae
test
xor
lock
xchg
dec
jnp
negb
inc
lods
inc
lcall
iret
adc
ret
inc
leave
ss
ljmp
aas
inc
std
xor
jmp
es
adc
outsb
iret
push
sbb
and
jl
sub
call
cli
subb
sbb
cmp
and
lock
cmpb
aaa
aam
push
cmp
pop
inc
and
xchg
jmp
xor
add
and
mov
add
mov
enter
sub
xchg
icebp
aam
into
paddusb
or
jg
add
mov
add
xchg
cmp
dec
jecxz
mov
repnz
or
loopne
lea
iret
mov
cs
jecxz
lcall
sub
insl
jle
dec
clc
mov
cmp
inc
call
xor
pop
push
lock
mov
repnz
adc
jge
jo
lret
add
adc
jp
and
and
stos
mov
call
in
jg
inc
mov
add
faddl
add
add
mov
mov
cmp
not
jne
push
adc
cld
mov
out
mov
mov
sbb
mov
inc
dec
clc
sbb
sub
pop
out
movsl
aad
and
loopne
loopne
and
add
xlat
jmp
lock
lock
mov
push
cmp
rorb
inc
xor
sub
pop
inc
push
fnstsw
adc
push
jle
xor
jg
mov
push
lahf
sub
out
enter
mov
xorl
push
outsl
loope
pop
gs
mov
add
and
loop
inc
xchg
add
jbe
fstpt
fs
add
jne
std
pop
add
shrb
cmc
int3
inc
push
aaa
es
sbb
jne
popa
and
dec
stos
xchg
push
mov
shlb
fimull
adc
scas
lds
mov
mov
andl
fistpll
push
ljmp
push
add
lds
lds
inc
mov
mov
pop
in
arpl
jbe
stos
int
idiv
dec
xchg
add
fs
cmpsb
aas
jne
mov
hlt
mov
mov
sbb
aad
data16
sbb
jg
out
lahf
mov
jle
push
lcall
sti
or
orb
cmp
inc
jo
insl
scas
sbb
shr
fdivrp
jns
aam
mov
sbb
or
mov
rorb
pop
push
jne
subb
insb
sbb
cmc
cld
outsl
icebp
push
add
mov
push
or
inc
add
push
jns
xchg
icebp
ds
mov
je
push
cltd
clc
add
test
xchg
cmp
outsl
push
pop
ja
cwtl
test
xchg
stos
mov
in
cmpl
lcall
sub
orw
or
in
xchg
or
add
inc
ja
sar
fildll
rolb
adcb
pusha
dec
aad
dec
das
icebp
ret
xor
decb
stos
in
fmuls
push
in
rolb
adc
cli
nop
mov
push
xor
mov
loopne
es
pop
movsb
dec
xor
mov
test
cmp
or
jbe
cwtl
arpl
clc
xchg
xlat
mov
test
sbb
rolb
adc
movsl
scas
xor
bound
mov
or
sub
jbe
push
shlb
repz
decl
add
xchg
clc
and
jl
xorb
add
int3
cmp
mov
adc
pusha
cltd
ficoml
sbb
ret
pop
or
add
icebp
mov
cmp
js
push
push
push
add
pop
pop
sub
test
push
mov
testl
xchg
add
movl
xchg
dec
pop
bound
test
adc
ds
sub
xor
outsl
push
outsl
insl
das
sbb
rcrb
inc
or
pop
adc
fs
sarb
or
push
loop
decl
fimuls
jns
insb
mov
sbb
lds
sbb
dec
mov
call
xchg
aas
mov
and
ja
into
ss
testl
pop
pop
ret
cmp
adc
pop
test
xchg
mov
jnp
xchg
sub
inc
dec
cmp
and
adc
cmpsb
negb
daa
inc
xor
mov
pop
sub
pop
pop
push
icebp
popa
les
dec
out
popa
or
cmpsl
test
das
jp
add
enter
mov
es
mov
iret
xor
mov
cltd
cmp
negb
add
xchg
cmp
xchg
sbb
pushf
jecxz
adc
sti
ljmp
xchg
adc
ljmp
sub
rcll
cli
xor
cmp
and
and
xor
dec
push
out
add
add
mov
adc
push
test
std
js
in
cwtl
lret
adc
add
push
jbe
loop
fmuls
loopne
push
xorb
mov
mov
out
std
aaa
push
push
add
jmp
add
out
inc
mov
inc
mov
sub
nop
pop
fimull
jle
in
shrb
add
cli
inc
mov
dec
cmpsl
les
add
mov
lea
testl
xchg
movsb
lret
aas
out
push
pop
cld
cmp
xor
sub
xchg
pop
std
ds
adc
mov
pop
cmp
push
lods
sub
fstp
mov
loope
dec
in
jo
cmp
iret
inc
mov
test
call
push
cmp
mov
mov
sbb
fs
cmp
adc
and
js
cld
fisubrs
fisttps
lea
mov
aas
jecxz
movsl
pop
je
mov
cmpsl
push
int
xchg
popf
inc
or
pop
mov
pop
loopne
xlat
cmovb
cmc
loopnew
pop
add
pop
push
mov
mov
xlat
fwait
add
andl
push
push
cmp
fistpll
mov
push
sub
lret
gs
test
addr16
iret
add
xorb
sbb
aas
test
add
sbb
sub
mov
add
stos
outsb
repnz
sub
sub
mov
dec
inc
jns
push
add
ret
add
inc
mov
mov
push
mov
data16
dec
repz
push
adc
push
je
and
add
cmp
clc
dec
sbb
xor
xor
sub
ret
mov
mov
cld
aad
ret
mov
mov
push
mov
sub
loop
inc
insl
dec
aas
scas
test
pop
pop
aaa
aaa
sub
ret
and
sahf
jge
popf
cmp
aaa
cs
nop
fldt
test
jmp
cmp
or
sub
and
or
loope
jecxz
shll
ficompl
jp
or
in
dec
adc
sub
test
icebp
sub
ss
in
xor
sbb
fsubl
pop
cmpsl
sbb
push
cmp
inc
sbb
dec
lret
daa
push
cmp
iret
dec
sahf
or
push
xchg
xor
push
cld
pop
andps
push
pop
js
fldcw
out
addr16
ja
mov
das
xchg
cwtl
jp
ret
add
add
mov
les
cmpsl
or
or
or
adc
jmp
add
mov
cmpsl
lret
jns
add
and
outsb
int
xchg
aaa
jge
and
mov
inc
rol
push
inc
jne
pop
add
fmul
sbb
inc
cltd
in
add
xchg
jbe
cmp
test
mov
je
pop
fisubs
jl
movsb
and
xor
dec
or
and
jno
add
lcall
push
aas
xor
or
adc
or
mov
sbb
out
jo
dec
andb
jo
or
mov
add
xchg
and
adc
mov
movsb
cmp
cmp
loopne
push
push
jne
xchg
lret
xor
push
add
add
subl
shrl
and
mov
addr16
insb
rol
mov
and
movsl
jge
pop
adc
mov
mov
stos
ficomps
vmaxsd
out
mov
push
xor
cmc
in
jmp
pop
push
xor
mov
imulb
rcrl
imul
and
mov
push
lock
xor
sbb
aam
mov
jl
add
out
movups
aas
rol
adc
aas
push
inc
shll
and
push
lret
cli
xor
lcall
outsb
mov
insl
lds
adc
aas
out
clc
mov
adc
adc
pushf
cmpsl
call
xor
xchg
sbb
mov
mov
jnp
push
push
sbb
mov
add
push
lods
pop
pop
xor
mov
jl
ret
pop
mov
test
xor
or
inc
push
and
std
xchg
pushf
add
dec
lea
loope
mov
mov
dec
mov
shlb
arpl
out
dec
fwait
inc
xchg
mov
in
cmpb
jmp
xchg
xor
mov
fcmovbe
notl
mov
movsl
in
filds
cmpb
inc
scas
data16
lret
movsb
sbb
aam
pop
sbb
das
dec
xchg
xor
movsl
xor
push
sarl
mov
mov
cmc
and
dec
push
push
popa
bound
movsl
pushf
push
mov
jle
sbb
arpl
jecxz
cli
rcr
call
ret
and
inc
pop
mov
adc
daa
imul
add
dec
popf
lea
inc
lahf
inc
or
sbb
aad
ret
mov
mov
fstl
in
and
xor
dec
loop
icebp
js
cmpsb
lret
adc
push
xchg
jmp
push
cli
pop
dec
iret
ljmp
add
call
xchg
mov
call
stos
dec
pusha
lods
movsl
sub
jbe
ja
sub
pushf
mov
in
jmp
lock
ror
dec
fwait
inc
imul
cli
ja
jne
lret
jp
lods
repnz
or
cmp
adc
cmp
and
jmp
cmpsb
jb
jl
add
leave
cmpsb
and
add
lds
sbb
inc
or
mov
sbb
push
repnz
adc
jb
sbb
jo
and
jge
fstpt
xor
mov
inc
and
adc
inc
cmp
xor
add
add
out
stos
adcb
pushf
shlb
loop
es
fldcw
push
cmp
jg
je
mov
test
add
add
call
pop
data16
jmp
ret
xchg
xlat
xchg
lock
addl
pop
mov
adcl
movsl
mov
dec
sub
sub
jns
adc
add
mov
in
rclb
movsl
addr16
call
dec
jb
dec
ljmp
inc
jae
inc
ds
mov
shl
mov
sbb
mov
imul
cld
inc
mov
es
int
es
add
pop
jb
adc
test
movsl
push
rcr
xchg
pop
notl
push
ss
cwtl
adc
xchg
es
add
mov
shlb
loop
jecxz
sarb
outsb
push
mov
cltd
and
in
xor
inc
xor
push
or
push
sahf
addb
sbbb
ret
imul
in
dec
rorl
ljmp
cmpl
xlat
push
movsl
jmp
jp
xchg
popa
inc
jl
imul
mov
xchg
or
push
jg
pusha
add
in
xchg
arpl
popa
push
pop
and
xor
push
pop
stos
inc
adc
fcoms
addb
xor
pop
push
cltd
call
mov
mov
cld
mov
rorl
divl
comiss
push
sbb
push
push
cmpsl
ret
repnz
scas
xor
jo
or
xchg
fsubrl
fwait
mov
stos
push
std
mov
pop
std
push
xor
xchg
and
ret
ficoml
xchg
jmp
cmp
xor
jg
xchg
inc
cmp
lahf
push
xchg
push
orb
cmp
xor
or
mov
and
loopne
jp
scas
adc
je
enter
mov
lea
jecxz
mov
fs
jne
lahf
std
add
pop
in
jno
and
rcl
push
iret
jns
mov
add
dec
sbb
cmp
ja
clc
cwtl
int3
add
xor
push
lods
xor
loop
sbb
inc
add
and
cmp
arpl
enter
icebp
dec
jmp
pop
cs
stc
mov
in
imul
cmp
out
mov
xchg
pop
dec
xchg
or
xchg
jbe
insb
sbb
push
mov
dec
push
fucomp
daa
rcll
or
mov
dec
rclb
sbb
xorb
and
sub
xlat
in
shlb
mov
cmc
jb
or
es
add
pop
cmp
dec
enter
jg
lret
xchg
out
repnz
sbb
out
mov
mov
xor
or
movsb
cmpsl
out
ljmp
jmp
outsb
sbb
or
or
add
xor
scas
xor
or
orl
inc
aad
inc
mov
inc
cmp
adc
test
pushf
or
aad
mov
jo
adc
out
loopne
mov
xchg
and
aad
scas
sarl
pop
adc
mov
rolb
sub
adc
jo
or
fldl
test
sbb
into
rorl
xchg
mov
add
or
mov
test
jmp
mov
shll
push
leave
xchg
iret
xchg
adc
and
and
jge
loop
nop
sbb
insb
push
dec
sahf
loop
cmp
or
in
scas
addr16
into
adc
jne
xlat
adc
jmp
in
add
mov
in
inc
ljmp
jp
daa
call
outsb
mov
int3
cmc
rol
adc
mov
jle
sti
or
sub
pop
or
push
sbbl
stos
stc
mov
jl
mov
jmp
cmpsl
add
or
mov
mov
adc
pop
ljmp
push
and
cli
in
xchg
rclb
and
cli
pop
lods
pop
cmp
mov
cld
push
pop
insb
inc
ds
cmp
mov
fwait
and
out
cmp
jb
add
push
out
mov
push
movsl
inc
data16
incl
mov
xchg
sub
out
add
lret
test
xor
mov
out
add
iret
dec
cmp
fcom
roll
xchg
aam
add
adc
stos
xor
scas
aas
sub
sub
xchg
push
sbb
inc
add
loop
adc
out
add
inc
jp
rcl
pop
push
in
pop
mov
stos
add
adc
inc
cmp
stc
cmp
and
cmp
jo
sti
pushf
dec
push
or
rol
jge
xchg
dec
in
push
cld
cmp
out
xchg
inc
hlt
lods
add
pop
push
dec
pop
inc
mov
cmp
insl
dec
mov
test
fwait
cmp
nop
roll
int
je
push
ja
bound
xchg
cmpsb
jno
add
push
inc
gs
out
and
test
push
mov
cld
in
sub
cwtl
test
add
cmp
lret
incl
cltd
mov
sub
and
test
icebp
dec
jo
add
or
adc
pop
rclb
inc
jbe
or
sub
int3
and
rol
in
ljmp
mov
out
sub
cmp
lods
mov
jg
mov
add
dec
add
push
adc
fildll
aam
test
jb
cmpsl
clc
mov
cld
shll
dec
dec
sbb
xchg
bound
shl
mov
and
fidivl
pop
cld
mov
adc
xchg
jmp
inc
or
mov
cmp
inc
call
stos
mov
js
xchg
sahf
loopne
std
dec
pop
sbb
mov
fcmovnu
nopl
pop
sub
leave
xchg
fiadds
pop
cmp
xlat
adc
jns
in
pop
incl
lods
inc
push
mov
loop
dec
xchg
out
push
call
mov
add
xchg
pushf
sbb
int3
adc
ds
sbb
jl
sbb
add
sub
pop
std
je
pop
inc
mov
push
stos
push
pop
test
cmp
mov
dec
loopne
aad
fwait
js
pop
mov
add
sbb
and
or
inc
fiaddl
push
add
mov
sub
cmp
sti
dec
push
enter
dec
or
pushf
or
push
mov
outsb
adc
fdivrl
sbb
push
fimull
adc
inc
add
iret
pop
push
fiadds
scas
xor
lods
xor
and
sub
outsb
add
scas
movsb
push
lds
sbb
sub
add
push
movsb
pop
cmpsl
xlat
loope
inc
clc
cmpb
mov
rorb
dec
cs
pop
mov
mov
ret
frstor
push
pop
sbb
inc
cmp
jecxz
add
pop
icebp
cmpsl
dec
mov
lock
in
addl
cmp
push
adc
dec
sub
push
and
push
into
or
and
pop
ret
push
sahf
add
add
pusha
sub
rorb
dec
push
lahf
pop
add
fdiv
and
and
cmc
popf
ffree
loop
or
adc
cld
hlt
ljmp
push
cmp
loope
mov
and
call
pop
sub
fidivl
pop
and
lahf
mov
jge
js
or
clc
or
popa
dec
ljmp
decl
popf
mov
lret
shll
sub
jl
cmp
or
mov
dec
push
incl
imul
das
lcall
xchg
cmp
jb
stos
mov
add
mov
enter
sub
cmc
or
mov
jecxz
jmp
cmp
fsubl
or
dec
pop
jbe
mov
cmpsl
addl
xor
adc
sub
pushf
cltd
cli
ret
lcall
ret
addr16
push
sub
pop
lods
clc
push
adc
push
cmp
inc
iret
lock
test
fnstsw
pop
adc
xor
nop
xor
test
insb
scas
cwtl
rorb
test
ror
push
mov
loope
inc
or
or
push
lahf
mov
xchg
gs
rol
test
dec
xor
xor
and
aaa
sti
iret
dec
mov
xchg
rolb
insb
push
popa
dec
ret
test
cmp
inc
mov
jo
pop
jmp
loop
mov
popa
mov
test
lret
mov
lods
push
mov
jge
push
add
es
and
mov
pop
imul
jno
dec
arpl
shrl
mov
ret
push
pop
loop
mov
jl
adc
enter
movsl
xchg
mov
cmp
xorl
inc
dec
adc
out
adc
cmp
sbb
jns
out
cmpsb
repnz
push
mov
test
adc
rcll
out
sbb
or
sbb
sbb
movsb
lock
and
or
add
dec
jno
out
xor
jp
or
jg
cmp
iret
into
add
adc
dec
shll
test
outsl
xchg
pop
insl
mov
loope
jns
jecxz
scas
aaa
cmpsb
xchg
dec
fwait
xorl
mov
mov
jo
sub
scas
lds
pop
pop
loopne
scas
cltd
pop
fwait
dec
scas
inc
fnstenv
cmp
inc
sub
aaa
and
testb
sbb
lret
push
and
loope
adc
subl
gs
sbbl
stc
push
xchg
stos
inc
mov
mov
pop
mov
mov
int
cmp
pop
xor
inc
adc
cmp
xchg
je
addb
xor
js
pop
int
and
adc
cmc
pop
mov
icebp
pop
stos
jp
loopne
mov
and
mov
pop
dec
push
add
push
xor
and
inc
dec
test
jnp
pop
pop
in
mov
mov
aaa
jb
sti
aas
mov
jbe
or
test
sub
sbb
adc
mov
push
pop
xor
rorb
leave
sbb
inc
add
sbb
addb
cmp
pop
lcall
nop
add
xchg
ficoml
rol
adc
cmp
mov
adc
push
scas
push
mov
mov
sub
test
sbb
nop
popa
xchg
data16
xchg
sub
ret
adc
xchg
loop
push
popw
xor
js
das
push
add
mov
mov
sbb
push
inc
gs
mov
and
mov
or
add
scas
pop
clc
fnstcw
out
scas
push
outsb
cli
dec
adc
jecxz
adc
jb
movsl
mov
rol
addb
incl
decb
rorl
xor
add
sub
sbb
or
imul
or
int3
push
nop
clc
add
adc
rsqrtps
test
cs
xchg
jl
mov
mov
and
loop
mov
dec
push
adcl
test
sub
pop
push
jae
cld
add
pop
iret
ret
dec
mov
pop
in
push
lcall
xor
cmpsl
sub
lods
imul
in
xchg
sub
sub
sbb
xor
cmp
inc
or
nop
adcl
shlb
insl
das
mov
dec
xor
aad
sbb
inc
pop
jl
push
sti
cld
mov
outsb
cmp
add
imul
or
mov
andb
jno
cmpsb
or
lea
xor
inc
push
push
imul
ss
mov
pop
bound
neg
push
mov
nop
fcomps
mov
lea
or
push
push
incb
gs
test
jle
and
into
mov
inc
cmp
in
ret
dec
add
dec
dec
xchg
jge
add
pusha
bnd
cmp
cmp
push
xor
neg
fsub
add
mov
mov
fcmovnu
push
scas
inc
gs
pop
sbb
shl
dec
and
mov
dec
cs
aam
out
mov
mov
adc
testb
mov
sub
roll
bound
push
mov
inc
clc
jbe
lcall
or
scas
fnstsw
ret
sarl
in
shlb
andl
rorl
fdivr
jmp
jb
sub
add
ret
jecxz
call
push
sub
xchg
cli
addl
dec
out
mov
and
mov
ret
xchg
sub
scas
xor
ja
test
ret
push
out
xor
call
pushf
dec
pop
stos
cmpsb
adc
lahf
sbb
push
loop
sbb
call
cmpb
push
das
xchg
xchg
cmp
dec
or
mov
std
and
push
or
test
mov
add
xor
orl
xor
test
add
fmuls
pop
idiv
jge
and
cmp
jl
mov
gs
xor
or
pop
adc
sub
pop
pop
push
sti
dec
pop
jp
jle
incl
fwait
sub
pop
adcb
int3
add
mov
or
fcomip
clc
add
cmp
dec
lods
push
cmp
sub
mov
or
int
mov
addl
jne
push
jge
sbbb
push
ds
mov
roll
cwtl
sbb
in
cmc
sbb
add
mov
or
lods
popf
xchg
js,pn
repnz
aam
aas
jno
add
push
sbb
mov
mov
dec
jl
call
xchg
test
lock
xlat
xchg
inc
mov
push
orl
out
xchg
xchg
loop
push
addr16
lods
iret
xor
pop
mov
cmp
jno
lcall
es
jnp
lods
call
add
pop
adc
lret
mov
popa
sub
add
sbb
movsl
clc
push
xor
aad
int3
add
insl
or
ss
pop
xchg
ja
inc
or
loopne
mov
sbb
jge
enter
or
xchg
pop
inc
cmp
push
bound
aad
fcmovb
shrb
testl
push
nop
pop
dec
mov
scas
mov
in
dec
ljmp
ljmp
mov
and
adc
scas
push
mov
jns
bound
hlt
leave
scas
aas
cli
and
fnstcw
cmp
lahf
xchg
sub
adc
in
mov
xchg
imul
scas
inc
pushf
lock
mov
dec
fmul
dec
stc
add
lahf
sub
incl
fimull
jmp
js
inc
outsl
insb
or
push
subl
xlat
xchg
xchg
aam
imul
in
shrb
stos
pop
xchg
fsubrs
mov
sarb
aam
sub
jmp
dec
aad
fistpll
pop
xor
xor
inc
dec
test
mov
adc
or
cmc
bound
push
inc
sahf
cld
pop
pop
lock
dec
test
popf
out
mov
adc
fsubs
push
xchg
lahf
sbb
sub
aaa
cmp
hlt
cli
and
push
cmp
adc
mov
cmp
les
xor
mov
push
xor
push
lock
imul
pushl
orl
push
and
sbb
cmpsb
push
cmp
in
js
movsb
mov
pop
jns
push
push
jecxz
or
push
xchg
dec
js
or
aas
jl
ds
inc
adc
xor
jmp
push
out
xor
pop
add
and
mov
and
addl
mov
jae
mov
lea
fiadds
stos
jne
add
std
add
jns
push
jmp
lock
push
sbb
add
lret
xchg
lret
xchg
inc
sub
es
dec
dec
fmull
sub
dec
push
xchg
add
push
adc
pusha
xchg
iret
jmp
sbbl
inc
push
out
mov
add
inc
addb
dec
fbstp
sarl
stc
adc
sti
push
xchg
cwtl
hlt
inc
jno
add
push
and
mov
daa
mov
call
shll
and
cli
sub
jge
xor
push
sub
mov
adc
jo
test
adc
push
and
pop
xor
lahf
mov
je
pop
repz
mov
inc
push
sub
test
xor
dec
int3
mov
xor
adc
mov
ficomps
mov
lea
movsb
rorl
mov
xor
pop
dec
inc
ret
stc
and
inc
fnstenv
adc
mov
bound
ficompl
cmp
ret
xor
xor
js
sahf
push
call
inc
loope
inc
lock
xchg
push
dec
shll
inc
cmp
js
xchg
mov
lret
or
xchg
dec
fisttpl
clc
imul
add
xor
xchg
dec
daa
push
inc
adc
push
orl
add
ficoms
cmp
ljmp
dec
out
fisttpll
inc
sub
adc
adc
iret
in
and
and
or
cmp
sub
lcall
and
jecxz
es
adc
cld
ret
mov
push
add
cmpsb
sub
or
xor
push
mov
inc
dec
insb
nop
and
sbb
inc
sbb
adc
sbb
jb
mov
movb
mov
pop
add
fiaddl
sti
inc
jmp
sub
mov
cli
insl
sub
push
cwtl
clc
shl
lods
push
dec
hlt
ret
popa
xor
sub
xchg
pop
addr16
pop
int3
ret
jae
xor
xchg
loope
push
mov
jle
sub
jmp
jg
cli
sub
mov
mov
add
inc
add
adc
xor
jecxz
enter
ljmp
cld
les
stc
or
add
and
mov
adc
mov
and
mov
xchg
sbb
inc
in
hlt
data16
inc
daa
push
push
or
repz
lahf
in
leave
test
fnsave
mov
xchg
fdivs
adc
movsb
inc
shr
pop
pop
xor
stc
icebp
and
cmp
mov
xchg
and
popf
or
dec
adc
sbb
loopne
add
mov
js
and
dec
out
mov
mov
add
cmp
adc
push
adc
mov
adc
dec
lods
sbb
lea
mov
int3
push
in
add
in
fnstsw
xchg
cmpsb
jo
out
mov
aas
or
and
ficoml
adc
fdivrl
inc
inc
ret
arpl
add
cmp
cld
lods
pop
pop
pusha
push
pop
adc
mov
ds
subb
pop
pop
inc
mov
insl
pop
and
pop
aas
dec
test
push
lcall
jo
in
hlt
dec
adc
jle
rcrb
bound
orb
outsb
push
xor
and
mov
jae
loopne
cli
push
mov
outsb
jb
movb
imul
push
mov
jl
fs
insl
add
xor
inc
sar
push
or
pop
pop
mov
imul
inc
lret
mov
push
pop
cmp
cltd
test
into
fmull
xchg
loopne
clc
add
or
sbb
ret
scas
mov
out
add
jmp
pop
push
stos
xchg
imul
jge
inc
push
orl
int3
adc
mov
push
pop
xchg
dec
fbld
mov
fcompl
fidivs
mov
and
roll
loop
push
fdivl
notl
sub
mov
mov
fcompl
ja
ljmp
mov
scas
adc
dec
add
nop
and
mov
jg
add
mov
jo
or
into
mov
dec
sub
nop
pop
sub
mov
cmc
mov
sub
andb
negb
mov
jb
cwtl
and
xchg
popa
push
mov
mov
inc
push
push
jb
cmp
add
pop
pusha
les
dec
sbb
adc
xchg
jl
pop
adc
mov
int
outsl
jl
icebp
gs
es
out
xor
push
push
pop
popa
xchg
int3
stc
fiadds
mov
pop
dec
mov
xor
arpl
inc
add
lea
fwait
enter
ficompl
clc
aad
arpl
inc
jbe
insb
repz
mov
in
bnd
push
add
loop
stos
sahf
jno
test
pop
sti
ss
lock
mov
cltd
ss
push
or
icebp
lahf
add
mov
mov
das
rolb
daa
les
in
pop
std
or
inc
cmp
mov
mov
mov
xor
pop
push
ret
adc
jle
fdivrl
mov
js
add
add
icebp
arpl
inc
mov
push
fs
aad
push
mov
jb
xor
jmp
shlb
lods
sbb
repz
pop
fnstsw
fdivr
dec
repz
sub
pop
cltd
dec
pop
arpl
and
and
push
test
hlt
pcmpgtb
cltd
fwait
and
cli
pop
mov
push
mov
mov
and
xor
xchg
pop
cmc
inc
mov
jne
out
vunpcklps
push
fwait
mov
inc
rclb
push
push
shrl
shrb
movsb
movsl
jg
add
jl
jg
jmp
sub
cmp
test
ljmp
inc
pushf
popf
mov
sbbl
xchg
in
pop
pop
add
cmpb
test
adc
inc
sbb
push
loope
xchg
je
rorb
popf
mov
clc
test
push
add
add
jmp
inc
leave
lods
xchg
and
mov
sbb
call
fwait
and
xchg
into
movsb
lea
cli
push
cmp
cltd
cmp
loopne
lock
sti
and
sub
mov
adc
push
jnp
inc
aad
push
int
xchg
mov
les
mov
push
shlb
cmp
or
mov
rorb
xlat
icebp
cmp
cmpsl
xchg
add
dec
pusha
cmp
stos
out
loop
add
insl
push
mov
pop
push
pop
ret
mov
nop
int
mov
fwait
mov
jne
and
jb
or
popa
ret
xor
out
rcl
lods
and
xor
adc
loop
sbb
sbb
out
push
cwtl
or
insl
cmp
and
jo
mov
add
or
and
es
jg
les
movsl
pop
pop
lods
js
ficoms
scas
adc
inc
cmp
shll
dec
mov
mov
ljmp
cmp
dec
push
pop
add
push
xor
adc
fidivl
pop
orb
cli
rol
mov
pop
data16
sbb
sbb
push
and
mov
fcmovnb
loopne
aas
inc
add
mov
mov
or
and
or
sbb
cmp
xor
jmp
jmp
aad
std
mov
xchg
or
movsl
lret
test
add
and
jmp
clc
pop
aas
add
jl
cmp
jge
pop
add
add
pusha
ss
stos
adc
pop
ret
leave
inc
fwait
out
stos
sub
aam
inc
mov
scas
clc
flds
nop
or
lds
xchg
int3
lods
lcall
mov
mov
insl
testb
lcall
fsub
shrl
mov
add
xor
je
lret
or
out
cmp
jne
xchg
rcll
repnz
cmp
sti
loop
ss
inc
add
lcall
pop
xchg
lock
sbb
roll
lds
mov
addr16
stos
cltd
pop
mov
stos
or
jmp
mov
mov
dec
call
pop
mov
hlt
mov
inc
cmc
fdiv
xor
sub
push
mov
xor
cmpsl
lret
iret
mov
rcl
sbb
mov
ret
mov
mov
sahf
fdivp
leave
lea
mov
aam
mov
in
jae
rorb
clc
in
pop
inc
lahf
pop
push
add
daa
sub
inc
mov
arpl
fldl
add
mov
xor
push
mov
lcall
mov
sbb
xor
hlt
ljmp
shll
stc
sarl
jb
jmp
inc
fdivrs
mov
sub
lods
test
sub
mov
insl
psubb
and
jne
arpl
xchg
jno
sbb
adc
sbb
jl
inc
mov
sbb
lods
push
cmpsb
and
lds
rorb
out
cli
sbb
outsl
clc
xchg
cmp
fsubs
ja
lock
cmp
dec
xor
inc
adc
mov
rcr
or
sub
jp
jo
add
subb
lahf
pop
xor
in
mov
push
xchg
cmpsl
dec
or
cmpsb
loop
and
jge
pop
sub
pushf
mov
dec
push
jns
push
dec
out
mov
ljmp
cmp
out
xor
mov
and
push
dec
dec
jb
cmc
add
sbb
cmpsb
mov
cmp
movsl
adcb
pop
or
mov
jbe
or
or
sbbb
sbbb
xchg
mov
pop
pop
clc
cmp
or
cmc
pop
push
push
or
jne
negb
push
fcomi
push
dec
imul
movsb
or
mov
cmp
push
rcr
adc
fnstsw
rcrl
sbb
aad
je
icebp
pusha
test
cmp
pop
push
mov
fcoms
movl
or
dec
mov
push
das
or
adc
adc
jmp
lahf
inc
mov
xchg
in
or
rorl
push
push
push
xchg
les
enter
mov
xor
mov
jp
mov
cwtl
clc
andl
test
data16
lock
or
push
add
mov
ret
clc
mov
test
push
and
fnstcw
rol
and
xor
mov
and
push
jae
push
je
mov
xor
xchg
jnp
mov
inc
push
xor
test
shr
add
dec
sub
or
mov
stc
lahf
adc
push
gs
in
xchg
sbb
mov
js
add
adc
cmpb
xchg
and
and
adc
xor
adc
pushf
sbb
jg
sub
xor
cmp
xor
insb
je
jne
mov
in
popf
inc
call
add
imul
out
loop
push
ror
idivl
popf
shr
push
adc
cmp
dec
repz
ja
add
in
dec
xor
push
out
cmp
push
iret
cwtl
adc
popa
shl
lea
cmp
and
incb
xchg
aas
lods
xchg
addl
aas
adc
outsb
cli
mov
mov
sbb
sub
adc
mov
hlt
fucom
push
insl
inc
subl
in
cwtl
loopne
and
cmpsb
add
adc
daa
or
aas
sub
adc
dec
sbb
adc
mov
inc
push
add
outsb
or
sbb
loope
xlat
loopne
dec
push
sbb
sub
ljmp
xchg
test
jg
jge
jnp
inc
pusha
stos
or
mov
adc
pop
cld
inc
jecxz
and
push
popf
inc
jmp
lret
adc
js
scas
mov
cmp
add
xlat
and
call
dec
and
xor
push
and
cmp
test
outsb
cs
les
sbb
dec
bound
pusha
notb
push
or
jno
shll
mov
rolb
xor
fwait
cmpsl
aam
jmp
scas
ja
sarl
enter
push
cmp
push
mov
subl
inc
dec
pop
cmpsb
lcall
insb
js
inc
push
je
outsl
test
je
fwait
mov
bsf
and
pop
movsb
cmpl
jge
inc
mov
ret
adc
in
leave
dec
xor
cld
call
gs
rolb
int
push
adc
pop
jbe
add
adc
cmp
or
movsl
ret
mov
inc
loope
shlb
mov
add
inc
movsb
xchg
nop
mov
adc
loop
std
mov
cmp
xor
pop
add
fistl
sub
sbb
and
add
fwait
testl
lcall
pop
sub
mov
into
jp
test
dec
mov
loopne
das
mov
out
movsb
loope
aad
mov
movsb
lds
mov
jp
jg
jge
rorb
cmpsb
mov
aad
pop
and
adc
add
mov
andb
dec
or
int
mov
jb
sbb
pop
mov
xchg
jno
pusha
les
jge
xlat
add
cli
jbe
lret
dec
arpl
mov
xlat
jno
push
push
xor
mov
or
aad
movb
and
in
xchg
jno
lock
arpl
ja
pop
leave
leave
sbb
int
xor
and
sbb
or
dec
mov
or
inc
xchg
cmpsl
stc
mov
into
dec
lea
jns
jo
aam
xor
jns
adc
add
subb
test
push
adc
cmp
out
call
and
scas
clc
outsb
pop
cs
movups
add
mov
or
call
sub
add
add
mov
push
push
mov
imulb
and
stc
inc
push
pop
mov
les
xor
pushl
adc
xor
cmp
fs
sub
leave
ret
xchg
lahf
aam
sbbl
enter
icebp
adc
inc
stos
loope
lds
or
xor
sbb
bound
mov
sub
daa
call
xor
les
adc
adc
int3
mov
insb
push
je
xor
insl
test
out
jno
loop
mov
cld
sti
rcl
or
and
push
jno
pop
lret
inc
xchg
mov
filds
pusha
pusha
call
mov
mov
mov
repnz
ffree
test
or
nop
adc
pop
lcall
cs
jb
push
cs
xor
stc
popa
mov
sbb
fimull
fbstp
repz
stos
imul
mov
stos
mov
shll
sbb
sbb
popf
mov
push
mov
int
pushf
mov
sbb
sub
cs
les
jecxz
shrb
dec
arpl
lock
inc
adc
mov
add
xchg
inc
add
cltd
jbe
push
fiadds
mov
jo
dec
roll
cmp
xor
sub
mov
in
jbe
sub
data16
add
jp
fldt
and
out
int
pop
shrl
mov
stc
dec
test
loopne
andb
push
movsb
and
inc
jg
mov
push
mov
push
in
mov
arpl
inc
daa
or
fidivrl
mov
sbb
push
scas
cld
pop
clc
lahf
into
pop
dec
pop
dec
fadds
add
shrl
cmp
ja
jbe
aad
and
xchg
fmull
outsb
pop
inc
push
dec
dec
dec
add
sbb
jo
mov
pop
mov
sbb
jl
sbb
fdivr
mov
and
and
loop
xchg
add
insl
pop
pop
shrb
mov
sbb
in
sub
rol
mov
sub
daa
or
mov
iret
arpl
push
pop
add
cs
cmp
inc
loope
jge
rcll
and
pop
cmp
jns
inc
cs
bound
cmpb
adc
movsb
aaa
xlat
add
jecxz
call
push
jle
jae
and
fmull
in
add
push
shr
or
xchg
push
pop
aam
sub
outsl
addr16
cmc
push
cmp
aaa
push
pushf
inc
xlat
inc
mov
lret
and
add
rclb
ret
dec
adc
sub
mov
sti
adc
xorb
test
stos
mov
xor
lods
loop
sar
xchg
scas
or
ljmp
scas
mov
mov
jecxz
jbe
jp
popa
jecxz
movups
int
adc
inc
or
shll
dec
push
adc
nop
loopne
push
mov
push
adc
cmpsl
inc
repnz
push
loope
arpl
add
ja
fbstp
movsb
popa
mov
mov
cmp
movsb
xor
jp
jg
and
jbe
outsb
neg
js
faddl
sub
or
inc
sbb
test
rorb
shlb
sub
sub
cmp
imul
cmp
pop
pop
cltd
ret
andb
cmp
and
aaa
xchg
lcall
jmp
cli
popl
mov
cld
adc
xchg
add
fdivl
push
jmp
mov
and
mov
in
sub
sahf
pop
aam
shrl
and
enter
lahf
push
loopne
lea
out
mov
stos
mov
or
cli
ds
mov
clc
jno
mov
fsubl
enter
les
push
mov
adc
xchg
pop
jo
lret
loope
mov
lahf
cmp
shufps
dec
shr
inc
push
and
test
or
push
dec
mov
pusha
in
scas
add
mov
rorb
in
ret
enter
jno
inc
xor
test
fldl
or
lods
cmc
shrb
add
mov
push
jmp
mov
mov
hlt
mov
addb
sbb
scas
xor
aaa
push
insb
dec
sbb
test
data16
or
inc
xor
fwait
adc
stc
xor
mov
int3
fmull
out
pop
cmpsb
adc
data16
ret
incl
es
pop
jo
shlb
dec
dec
xorb
mov
repnz
jmp
jnp
dec
add
imul
sub
mov
dec
sbb
dec
js
or
adc
add
pop
jne
inc
int
ds
sub
xchg
pop
cmp
and
xor
sub
mov
lock
aad
inc
imul
sub
cmp
jbe
bound
inc
cld
je
ret
imul
push
roll
fsubs
loop
test
jbe
xchg
dec
in
daa
ret
cmp
mov
leave
fildl
push
scas
lcall
pop
jp
aam
mov
xor
mov
sbb
mov
test
clc
jmp
xor
xor
and
push
aas
outsb
pop
xchg
cmp
int3
push
push
in
mov
push
test
mov
mov
sub
shlb
mov
mov
pop
fs
mov
sbbb
lock
mov
jp
add
mov
shll
inc
imul
sub
sti
fisttps
sub
ret
sbb
adc
add
or
jl
add
stos
decl
negb
iret
mov
push
add
pop
ljmp
xor
cmp
clc
push
in
push
dec
add
lods
or
push
xor
rcrb
mov
test
cmpsb
addb
pop
xchg
adc
dec
push
mov
pop
popa
sbbb
inc
adc
call
das
inc
xor
inc
aam
dec
adc
aaa
push
jo
jno
arpl
lret
out
dec
adc
sub
inc
jl
push
push
pop
mov
adc
sbb
or
xchg
pusha
mov
inc
outsl
and
cli
cmpsl
mov
ljmp
jno
or
adc
lds
or
clc
xchg
pusha
subb
xor
mov
and
dec
jns
fistl
outsl
inc
and
push
popa
mov
lock
dec
insb
mov
dec
sub
pop
subb
dec
add
cmp
dec
mov
mov
rcll
dec
ljmp
je
out
fldl
cmp
mov
pop
incl
movsl
add
mov
push
pusha
mov
sbb
push
test
inc
call
or
fiadds
xchg
or
xor
dec
fcompl
mov
dec
push
sub
in
cmpl
pop
das
leave
movsl
int
xorb
push
inc
mov
or
jecxz
xchg
mov
pop
movsl
aad
sbb
ljmp
jle
lret
ret
dec
mov
enter
aaa
test
mov
push
add
out
loopne
lcall
add
inc
cmovno
xlat
scas
push
sub
xor
inc
cs
xor
mov
lds
xor
sbb
das
push
decl
pop
fisubl
inc
je
rcrb
inc
ss
ja
fistpll
aaa
rclb
outsl
mov
mov
outsb
xchg
pop
pop
cmp
push
cld
lods
imul
mov
sub
mov
fsubp
mov
loopne
lock
and
xchg
nop
push
out
insb
repz
adc
cmpl
jp
inc
filds
push
imul
pop
push
push
mov
mov
and
pop
cmp
fsubs
pop
out
in
dec
dec
adc
mov
shrb
cmpsl
dec
cmp
mov
push
subl
mov
add
xlat
adcb
cmp
xchg
sub
cwtl
adc
call
out
es
xchg
cmp
loopne
fs
or
movl
flds
cmp
mov
test
mov
jle
mov
roll
ja
xorb
pop
pop
xchg
adc
lret
cli
daa
nop
mov
mov
sbb
adc
inc
jl
les
mov
or
enter
lret
adc
test
xchg
adc
xor
in
mov
roll
push
dec
add
sbb
sub
and
jno
pusha
cmpsb
cli
stos
incl
sti
sub
and
and
outsb
hlt
jg
mov
mov
les
aad
add
add
jae
cmpsl
mov
xchg
sub
xchg
pop
jne
jecxz
leave
mov
mov
das
mov
movsb
popf
push
mov
je
jb
cld
in
js
hlt
dec
jl
add
aad
pop
imul
jmp
mov
jbe
mov
mov
inc
jno
push
lods
push
jmp
mov
xchg
loope
fimuls
mov
or
cli
js
xchg
je
aas
ljmp
xchg
test
add
lret
and
dec
push
je
jge
or
push
jl
lcall
cmc
jae
cmc
cmp
subl
pushl
mov
sbb
and
out
jp
clc
faddl
mov
add
rcrb
cmpl
aad
mov
add
add
mov
cli
add
add
push
inc
push
sub
popf
cli
mov
js
xchg
mov
fidivrs
iret
cmp
outsl
mov
call
add
dec
js
or
inc
fnsave
inc
add
fwait
lret
pop
pusha
fdivp
xchg
lock
in
sbb
rol
decb
mov
shrb
and
notb
xor
nop
add
mov
pop
add
xchg
xchg
mov
imul
push
sub
xchg
aad
clc
mov
adc
loopne
cmp
push
jb
and
or
call
and
sarb
nop
loopne
add
sub
push
aad
fisubrs
ja
test
cmp
xchg
hlt
lret
mov
aam
pop
pop
push
inc
xor
mov
jmp
inc
sbbb
sti
mov
pop
outsb
push
inc
testl
fisttpl
mov
or
pop
call
mov
in
mov
mov
lods
cld
ficompl
inc
repnz
das
movsb
clc
cmp
stos
add
jbe
add
in
inc
jmp
and
mov
add
xor
out
pop
push
mov
pop
push
sbb
inc
or
scas
mov
leave
insb
add
inc
inc
xor
push
filds
fcompp
mov
mov
push
push
jecxz
mov
and
icebp
cwtl
sbb
popl
lock
pop
fwait
cltd
or
fistps
fbstp
pop
loopne
subl
and
rcrb
jae
sub
ficompl
fcomps
decl
sahf
cli
daa
xor
push
sahf
lock
add
push
add
xchg
cmpsl
cmc
into
in
adc
or
pop
xor
pop
lcall
test
mov
sbb
aas
mov
dec
lds
push
jp
sub
jns
inc
or
mov
cmp
mov
popf
ljmp
xchg
add
push
mov
lcall
cmp
push
add
fwait
mov
dec
dec
shl
sbbb
sub
insb
cmpsb
aas
and
test
and
add
xor
push
nop
insl
fstpl
ret
sub
mov
mov
mov
negb
adc
dec
mov
pushf
and
xchg
xor
stos
cmp
dec
sub
pop
mov
sub
and
orl
mov
add
cmpb
pop
clc
mov
sbb
lds
adc
xor
mov
fadd
fsubl
orl
cli
iret
cmp
lds
sbb
sbb
insb
adc
mov
jb
cld
in
sbb
jmp
adcl
sbb
xchg
les
inc
popf
cmp
jne
xor
pop
hlt
inc
pop
add
rorl
or
jl
ficoms
stos
fldcw
or
cli
push
mov
push
aad
cmp
ret
dec
dec
stos
add
push
cmp
gs
or
push
cmp
in
fcomip
das
nop
dec
leave
xor
dec
pop
mov
mov
je
adcl
ds
loope
push
iret
das
sti
cmpsb
imul
es
pop
or
stos
mov
cld
das
mov
jno
mov
js
and
adc
or
incl
shrl
cmp
jb
adc
add
mov
dec
dec
gs
dec
dec
pusha
mov
add
push
dec
fwait
aaa
aas
roll
ljmp
add
and
shl
inc
test
push
icebp
mov
bound
inc
leave
daa
lds
and
mov
mov
push
fisubrl
dec
sbb
jbe
sbb
mov
mov
adc
enter
pop
mov
sub
gs
add
sti
imul
sub
sbb
ficoms
jae
mov
shlb
lods
xchg
cmp
push
inc
popf
lock
loopne
jmp
sub
sub
cmc
outsb
cwtl
mov
xor
inc
pop
faddl
mov
idivl
jns,pt
push
lcall
cld
jmp
je
or
and
lods
movsb
fadds
in
xor
dec
adc
xor
xchg
sub
fisttpl
add
leave
cmp
cltd
dec
push
fidivs
add
hlt
or
xchg
jl
repnz
loop
xchg
pop
jo
push
dec
adc
jl
add
in
shr
loopne
add
je
fwait
push
dec
mov
pop
mov
fld
mov
inc
inc
jmp
mov
mov
enter
movsb
aas
std
fimull
and
or
incb
jmp
pop
dec
ret
sbb
decl
fistps
fadds
dec
cmp
or
pop
push
icebp
inc
sbb
enter
orl
push
push
enter
mov
mov
int
aas
in
sbb
and
ret
xor
xchg
xlat
push
jmp
out
hlt
hlt
das
pusha
and
into
cwtl
mov
mov
mov
rcl
mov
push
std
enter
jae
xor
cld
mov
pop
dec
dec
nop
std
scas
add
xor
in
push
std
mov
lahf
mov
mov
inc
inc
out
shrb
sahf
lea
movsl
cmpsl
xlat
jnp
mov
cmp
mov
sub
je
rcl
jl
inc
cmpsb
or
push
fs
cmp
arpl
pop
cli
sub
dec
subl
cld
rolb
in
les
jge
popf
xchg
arpl
pop
sub
lds
inc
mov
out
sbb
xor
push
cmp
mov
jp
jp
insb
lcall
leave
aas
mov
repz
lret
into
sbb
movsl
dec
mov
push
pop
and
push
popf
lock
sub
dec
icebp
mov
xor
and
inc
hlt
ljmp
mov
hlt
or
push
movsl
psubb
mov
popa
push
or
push
and
push
push
add
pushf
sub
inc
push
xor
insl
pop
xor
push
add
shrb
dec
pusha
movsb
mov
sbb
aas
iret
xor
loop
adc
sub
mov
dec
sbb
or
sbb
jae
pop
xchg
inc
xor
push
ds
dec
or
mov
dec
daa
xor
test
add
sub
arpl
imul
mov
add
mov
mov
dec
xchg
push
lods
std
daa
mov
jne
nop
inc
pop
les
xor
xchg
adcb
stos
insb
or
adc
sbb
pop
mov
mov
test
xchg
pop
push
adc
adc
pushf
lods
and
xchg
movsl
cld
in
jb
shl
aad
xchg
jno
aaa
pop
dec
pop
add
aaa
leave
loop
aam
test
mov
rcll
in
sub
push
mov
xchg
sub
loope
xchg
or
add
inc
jno
inc
in
sarl
bnd
lds
push
lds
add
jmp
dec
and
mov
cmp
ja
fbld
sbb
mov
sahf
and
jg
xchg
arpl
out
xchg
add
pop
imul
add
jbe
adc
or
sub
jl
inc
cmp
mov
test
iret
mul
cmp
mov
adc
or
adc
sbb
xor
int
dec
push
pusha
dec
adcl
or
and
ljmp
sti
repz
push
shll
int
les
aas
test
sbb
bound
cmp
daa
cmp
shll
aas
push
adc
repz
dec
and
and
add
mov
cmp
jmp
outsl
pushf
pop
jns
jp
and
in
iret
xor
and
aam
imul
cmp
pop
dec
xchg
pushf
test
movsl
call
inc
mov
sahf
lods
push
jmp
mov
pop
adc
adc
add
push
jecxz
movsb
fsubrs
out
sub
push
inc
gs
xor
je
jno
mov
mov
fisttps
cld
test
daa
add
scas
cmp
int
hlt
xor
and
fistl
rolb
sub
sub
fdivrs
das
xchg
mov
je
xchg
mov
std
xchg
or
lret
push
scas
add
jb
pop
jl
and
cwtl
mov
rclb
push
or
stos
xor
and
ss
aad
ljmp
adc
fadds
dec
and
fwait
jcxz
mov
rcrb
jbe
or
pop
mov
mov
aam
adc
leave
test
leave
nop
lock
stos
leave
mov
add
pop
sahf
inc
or
mov
mov
outsl
or
sar
subb
mov
push
notb
cli
sbb
sub
sti
enter
aas
push
lds
mov
mov
mov
aas
mov
dec
add
inc
mov
add
loopne
rolb
mov
test
insl
stos
sub
ljmp
pop
cmpsl
loope
das
sbb
jle
jne
es
test
out
cmpsb
adc
daa
pop
lods
enterw
mov
ss
mov
fldl
push
jge
inc
gs
cmp
push
xor
mov
pop
hlt
push
pushf
mov
mov
or
inc
sbb
mov
test
or
aaa
mov
pop
xchg
outsb
repz
cmp
xchg
jnp
mov
addl
cmc
aam
dec
rcrb
sahf
int
orl
lcall
clc
outsl
aam
cmp
popf
test
adc
lcall
adc
nop
cwtl
sbb
mov
jnp
push
and
inc
sbb
and
jge
sbb
bound
push
mov
mov
mov
push
js
cmp
pop
mov
imul
mov
mov
or
notb
adc
cmp
mov
push
stos
add
movsb
push
mov
ds
dec
inc
cmp
je
pusha
jo
inc
arpl
fiaddl
icebp
scas
lock
jp
sti
add
or
lock
je
push
cmp
test
cmpl
fists
in
rcr
movsb
lahf
leave
int3
and
lods
push
inc
fnstsw
int3
jge
cli
scas
pop
rol
cltd
mov
jno
cmp
int3
insl
mov
out
and
jmp
dec
pop
mov
adc
cmpsb
mov
out
fldenv
aas
scas
mov
xor
sbb
mov
test
in
pop
add
push
lcall
mov
mov
xor
ret
rcrl
nop
and
mov
mov
ss
filds
cmp
add
push
clc
test
cwtl
nop
inc
les
add
push
pop
pop
cli
jmp
mov
std
and
push
jge
add
scas
jo
mov
pop
add
dec
mov
aaa
loope
lcall
or
shrb
mov
mov
outsl
ret
xchg
sub
pushf
cmp
inc
idivl
cmp
pusha
cmp
js
xor
and
dec
test
jp
dec
jae
add
mov
aas
in
fimuls
test
xor
and
xor
mov
and
mov
lcall
mov
mov
rol
js
out
ss
xor
shrb
js
ficoms
rolb
lret
cmp
dec
outsb
frstor
dec
gs
fists
sbb
fs
mov
cmpl
inc
das
clc
and
cli
imul
push
mov
push
out
pop
mov
hlt
lahf
dec
add
shrl
out
and
jg
aas
stos
push
ret
xlat
cs
add
negl
inc
std
hlt
push
sti
ret
lret
ljmp
int
xchg
or
mov
adc
lea
lock
xor
test
in
dec
cmpl
adc
pop
or
push
mov
inc
ds
pop
stc
xchg
into
xlat
pop
or
add
je
pop
jno
in
adc
and
test
dec
cmp
pop
push
sub
rorl
lock
aad
loope
lods
sbb
xchg
add
pop
push
and
fnstenv
push
lea
shrl
sarb
pop
test
xchg
lcall
dec
mov
cwtl
xor
xchg
cmp
jno
jecxz
inc
xchg
pop
sbb
pop
sub
cmp
int3
jmp
or
inc
mov
pop
insl
jbe
add
sbb
fisubs
cmp
hlt
mov
out
or
inc
lahf
data16
xchg
lods
in
ret
jae
subl
fneni(8087
or
ljmp
notl
inc
inc
pop
dec
andl
cmc
test
data16
cmp
lock
or
or
mov
hlt
and
stc
loop
mov
push
adc
fiadds
dec
jns
mov
jg
mov
xor
xchg
jb
stos
incb
lock
shlb
or
sub
int3
mov
and
xchg
pushf
out
xchg
xor
adc
push
jbe
in
nop
mov
call
xchg
cmp
mov
xor
add
sbb
cmp
jg
hlt
inc
enter
out
in
test
jno
inc
lods
and
lods
imul
sahf
or
je
ret
push
add
icebp
pop
adc
cmp
aam
mov
cltd
mov
inc
xlat
pop
push
roll
lahf
test
in
xchg
push
xchg
repnz
lock
inc
cmpb
cmpsb
xor
push
or
adc
jno
mov
or
shl
imul
lahf
add
sub
pop
dec
dec
jle
call
scas
push
adc
dec
pusha
addr16
adc
or
mov
lret
pusha
cwtl
data16
mov
pop
je
cmp
cld
in
mov
push
and
pushf
mov
jo
test
inc
xor
insb
add
loop
pop
dec
push
pop
pop
das
mov
sub
pop
sub
rcl
xor
daa
add
dec
enter
cmp
xor
cwtl
stos
outsb
in
fsubrl
notb
or
jp
mov
aas
push
inc
pop
imul
shl
lcall
sarb
jbe
push
lock
jmp
outsl
enter
loop
inc
outsl
bound
movsb
mulb
or
or
fcmovnu
dec
mov
cmp
bound
out
jo
push
lea
lahf
inc
xor
mov
mov
sub
mov
jge
aad
sbb
sahf
inc
aad
pop
mov
pusha
pop
into
dec
add
jo
or
in
shrd
cmp
lock
addb
sub
pop
jg
test
and
clc
and
or
mov
pusha
ljmp
das
out
mov
cmp
hlt
push
lret
into
andb
pop
out
lds
out
addl
cmp
aam
movsl
cld
dec
and
fstl
pop
je
add
je
aam
push
cltd
sub
push
add
stos
mov
jbe
adc
mov
jp
outsl
push
sbb
xor
pushf
mov
add
mov
sahf
stos
dec
push
ret
cmc
adc
sbb
outsl
jp
pop
lock
sbb
xchg
inc
or
xlat
sub
fisttps
lcall
test
rol
mov
lock
mov
shll
inc
and
jo
jb
and
testb
sbb
or
sub
lcall
sub
in
or
and
pop
cmpsb
jmp
push
in
pop
fsubl
int
jmp
loopne
jp
sbb
mov
movsl
repnz
int
sub
add
inc
sbb
mov
xchg
cli
outsb
pop
hlt
fsubrs
lock
cs
imul
mov
xchg
jno
jbe
or
mov
pop
mov
loope
rcrb
scas
ss
je
test
data16
jp
cmp
lcall
out
cwtl
pop
jo
or
mov
insl
movsb
cmp
cmp
jle
ljmp
xchg
mov
xchg
xchg
lcall
xchg
cmp
mov
filds
jae
mov
clc
in
fs
shr
pop
push
sbbb
sub
mov
mov
sub
mov
sbb
xchg
push
les
mov
mov
cmp
mov
xlat
push
and
jnp
ss
push
test
push
push
popa
sahf
outsb
subl
pushf
lret
shll
xlat
xchg
xchg
mov
mov
rorb
adcl
test
mov
xor
roll
ds
xchg
test
xchg
xchg
clc
jbe
adc
add
aam
jg
jp
jl
push
mov
or
jge
or
lahf
jns
jp
mov
out
loop
sarb
sbb
sbb
int
repnz
iret
inc
sbb
mov
addr16
xlat
daa
mov
cli
jb
pop
call
fmuls
pushf
scas
sbb
or
jne
pop
stos
flds
aas
call
add
adc
jl
add
cmpb
mov
dec
jb
out
cwtl
pop
dec
es
sbb
add
mov
jo
das
cmp
pop
insb
lds
arpl
clc
mov
add
pop
or
xchg
xchg
jne
test
mov
aas
sub
add
cld
aam
ljmp
pusha
shrl
test
adc
hlt
adc
and
or
and
and
shrb
aaa
sub
lahf
je
and
insl
movsb
xor
sti
dec
mov
rclb
std
dec
jg
lods
xor
cmp
push
shl
orl
movsb
cmpsb
lret
data16
add
push
xchg
mov
mov
mov
jecxz
mov
testb
sbb
shrl
iret
call
iret
inc
inc
xor
adc
sub
pop
add
xchg
add
pusha
enter
aaa
cmp
jo
mov
inc
cltd
out
pop
sub
mov
in
movsl
lahf
mov
push
test
icebp
shlb
mov
ficompl
cmp
out
add
jle
add
or
push
scas
lock
adc
out
sbb
je
jnp
xor
enter
push
xchg
movntps
mov
xor
popl
sarb
adc
aam
lret
mov
mov
jne
scas
cmp
mov
dec
int
dec
push
mov
xchg
fnstsw
ljmp
lock
mov
sbb
imul
or
push
in
cmpsl
neg
adc
pop
mov
adc
fcoml
and
mov
sbb
int3
or
push
add
sbb
fcomp
adcb
mov
xor
sbb
stc
push
jbe
imul
cmp
push
and
jbe
sub
xor
lahf
sbb
sub
test
lea
mov
call
idivb
outsb
add
adc
mov
lcall
mov
sbb
sub
push
int
mov
ljmp
add
aad
ret
mov
inc
lret
addr16
clc
dec
clc
cwtl
outsl
push
xor
sbb
mov
adc
scas
lcall
xchg
vmovntpd
sub
arpl
push
clc
mov
scas
or
mov
jl
or
dec
cmp
filds
mov
jno
xor
push
dec
mov
push
and
inc
sbb
push
inc
cmp
ss
dec
and
fsubr
orb
add
dec
jmp
xchg
js
lock
cmp
addb
fstps
ljmpw
push
add
inc
gs
cld
outsl
pushf
fbstp
call
add
loope
mov
inc
dec
imul
mov
imul
jb
rolb
inc
push
inc
or
dec
fcoml
xchg
cmpb
mov
enter
adc
scas
push
add
add
jne
add
dec
lds
out
inc
jle
mov
pop
inc
xchg
inc
mov
loop
mov
loopne
dec
sub
dec
xchg
adc
icebp
cmpsl
jbe
mov
in
adc
sbb
push
inc
inc
fmuls
pop
cmc
jo
pop
hlt
or
push
pop
xchg
mov
call
fs
mov
cmp
or
cmp
cmp
gs
inc
psubusb
daa
mulb
lahf
ficomps
inc
pusha
sub
call
clc
or
sarl
rclb
lods
mov
pop
les
subb
call
mov
incl
xor
sbb
into
push
icebp
push
aam
sbb
pop
fmul
les
fildl
loopne
adc
mov
notl
imul
push
out
fcompl
add
push
cltd
xchg
add
cmpsb
lods
push
push
pop
sbbb
lahf
pop
cmp
push
movsb
mov
shlb
add
nop
mov
movsb
cli
sub
ret
and
ds
jnp
pop
fmuls
sahf
fstp
shrl
jle
and
sbb
nop
in
cmc
ss
jo
test
xchg
les
dec
in
scas
xchg
mov
in
test
inc
ja
mov
sbb
cli
mov
push
roll
cmp
ret
les
push
adc
cmpsb
xchg
std
adc
sub
test
push
rolb
add
xchg
push
js
mov
imul
sbb
mov
aad
and
jge
xchg
pop
sti
mov
sbb
outsl
inc
das
and
loope
aad
add
add
das
adc
cmpsl
pop
mov
ljmp
ja
mov
add
sahf
data16
jo
mov
je
xor
pop
and
mov
cmp
add
push
nop
inc
jae
sbb
dec
add
jae
push
jno
scas
xchg
subb
push
out
cs
rcrl
cmp
cs
call
shl
or
add
hlt
push
ret
cmpsb
adc
inc
sarb
adc
roll
ljmp
movsb
inc
sbb
adc
aad
pushf
pop
in
or
and
push
movl
fdivrs
mov
mov
ljmp
xchg
nop
andb
mov
adc
rorl
imul
fistl
push
xchg
add
jle
sar
sub
sbb
sub
fstp
jno
sub
jb
mov
repz
add
sbb
add
add
mull
and
jbe
dec
inc
sub
fimuls
lock
xor
mov
aaa
mov
lahf
mov
xor
cmpsb
pop
clc
ret
fs
test
dec
leave
inc
es
sub
add
xchg
dec
mov
xor
or
add
xchg
lea
cld
add
clc
mov
pop
int3
sbb
mov
and
add
inc
sahf
xchg
loope
sbb
movl
lods
andb
test
push
push
lea
cmpsl
xchg
shlb
xchg
jne
cltd
and
loop
pop
ret
and
popf
fadd
adc
push
adcb
mov
or
rorb
lods
mov
imull
add
subl
cwtl
bound
jmp
dec
push
push
jmp
shrl
lcall
loopne
or
fcmovne
mov
fwait
sbb
mov
cmp
jnp
arpl
addr16
ret
stos
push
sub
pop
stos
xor
mov
out
ja
xor
aad
mov
imul
xor
dec
push
decl
lods
push
fldenv
aaa
inc
inc
imul
das
cli
cmp
std
incl
pop
and
dec
mov
dec
add
dec
add
pushl
test
sbb
add
scas
ljmp
inc
sbb
inc
xor
inc
imul
cli
sbb
mov
bound
push
inc
dec
sub
addr16
dec
dec
adc
mov
imul
dec
inc
dec
add
and
xchg
sub
xor
repz
add
xlat
fstp
inc
call
push
dec
mov
mov
mov
inc
je
mov
repnz
add
fsubrs
pop
dec
pop
jg
sub
mov
sbb
sub
pushl
xchg
xor
dec
inc
mov
rcr
inc
jo
outsl
outsl
and
pop
dec
imul
jbe
pop
mov
stc
ljmp
enter
jmp
dec
inc
popa
sbb
dec
sub
orl
bound
push
mov
inc
add
idivb
mov
int
pop
ja
fs
inc
dec
jbe
jns
mov
push
ja
add
push
inc
xor
pusha
sbb
mov
fmuls
inc
push
add
adc
xchg
fiadds
fidivl
out
je
dec
jno
adc
sub
mov
inc
pop
inc
pop
or
fiaddl
outsl
add
push
dec
push
inc
bound
int3
sub
mov
pop
add
dec
sbb
adc
push
xor
je
jl
jl
jne
inc
adc
mov
sarb
xor
imull
adc
arpl
adc
jle
js
clc
sbb
inc
xor
mov
clc
lret
or
pmulhuw
dec
inc
inc
jo
inc
xchg
or
push
lret
dec
fs
pop
outsl
ds
movsb
sarb
mov
rcrl
loop
add
bound
push
rorl
inc
push
sbb
inc
cmp
mov
popa
jne
lret
push
insb
addr16
test
test
dec
adc
data16
dec
int3
cld
outsl
xorb
push
lock
popa
insb
pushw
popa
popa
or
sti
popf
mov
sub
les
loopne
adc
scas
xor
sbb
mov
adc
repnz
call
xor
mov
add
loope
mov
addr16
mov
insl
and
xor
add
mov
jp
mov
aas
cmc
hlt
cmp
add
rcrb
sti
shlb
repz
loope
loop
mov
bound
push
rol
jl
dec
lods
call
sub
dec
fwait
movups
mov
add
cmp
add
add
sbb
clc
ljmp
add
push
jae
stos
insb
fwait
mov
adc
ja
add
iret
xchg
pop
pop
or
mov
shlb
add
ja
mov
adc
rorl
mov
andb
mov
scas
ss
or
inc
sbb
jl
lds
add
les
movsb
test
pop
push
mov
jno
jg
int
ss
or
mov
bound
adc
ds
mov
ret
and
push
pushf
je
xchg
iret
es
cmp
repnz
test
je
fs
ds
pusha
or
cmp
or
aam
in
dec
push
test
loope
cmp
sbb
pop
movsl
xchg
repnz
add
adc
and
lret
into
ret
xor
popf
pop
adc
add
rol
and
mov
mov
cwtl
add
sti
dec
mov
mov
and
inc
ret
cmp
xchg
insb
test
popa
add
or
push
pop
cld
push
outsb
mov
stos
jp
adc
call
pop
mov
inc
xlat
xor
mov
adc
daa
hlt
xchg
push
shl
xor
pop
sbb
int3
loop
push
into
mov
test
ret
dec
inc
rorb
lock
sbb
pop
je
inc
arpl
pop
rolb
jmp
mov
cmc
mov
add
and
mov
out
cld
mov
addr16
fmul
cmpsb
mov
shrb
loop
cmpb
mov
dec
addr16
rdpmc
in
inc
repz
fcoms
pop
adc
jne
jp
call
pop
decl
inc
adc
dec
xchg
or
aas
mov
mov
out
and
add
les
adc
cmpsb
fsubl
push
adc
sub
addb
out
divb
shlb
xor
lret
sbb
imul
or
inc
cs
test
add
jne
test
or
mov
hlt
hlt
nop
or
or
into
adc
sub
inc
cmp
jo
repz
iret
dec
orl
adc
sbb
in
cltd
inc
lcall
jne
mov
cmp
outsl
shrb
mov
push
dec
dec
lock
or
cmpsb
aad
push
cmp
jle
sbb
imul
daa
stos
test
mov
jg
pop
cmpsb
mov
fisubrs
cld
cmpsb
inc
repz
addr16
and
je
jo
push
xor
lods
rclb
and
daa
inc
mov
test
dec
out
push
sbb
cmp
pop
add
fistpll
inc
in
ljmp
dec
cmpsb
mov
add
cmp
aam
dec
cli
outsb
and
daa
and
xchg
xchg
fldt
data16
cwtl
ljmp
or
ss
ja
inc
cmpsl
mov
push
xchg
aam
ljmp
nop
clc
sub
aaa
sahf
outsl
mov
and
pop
push
push
pop
mov
nop
pop
dec
adc
ljmp
cmp
adc
jns
jecxz
int3
hlt
mov
xchg
xor
push
clc
push
loop
mov
test
push
or
adcb
jns
dec
jno
negb
inc
shlb
cld
movsl
sbb
aaa
aaa
mov
mov
movsb
inc
outsl
xlat
add
insl
xchg
mov
mov
add
adc
mov
add
push
movsl
sti
add
test
dec
jg
cmpsb
add
insb
xchg
inc
jmp
add
sbb
mov
sub
aam
pop
pop
mov
inc
js
inc
outsb
mov
cmp
aam
sub
or
ficoml
pop
pushf
popf
jno
pop
push
lock
adcb
out
pop
hlt
jmp
mov
sbb
sub
add
inc
aas
add
js
outsl
push
ret
call
por
test
mov
mov
and
jno
imul
cmp
hlt
daa
in
dec
enter
push
and
pushf
adc
mov
xorb
ja
inc
les
lahf
xor
das
test
imul
fisubrs
sbb
push
mov
cmp
and
mov
jg
test
fstpl
scas
mov
out
loopne
dec
jp
inc
sahf
adc
inc
push
cmp
test
pop
ret
dec
xchg
push
cmpsb
fstps
add
lock
and
or
or
bound
add
lcall
xor
cmp
jg
jno
xor
shrb
scas
hlt
mov
inc
mov
packsswb
xor
adc
mov
les
cmp
adc
push
adc
add
mov
mov
clc
in
bound
aam
mov
sbb
fcomps
outsb
push
fisttps
inc
jmp
out
and
push
sub
lret
aad
cs
push
cmp
call
sti
cmp
idivl
mov
out
call
loop
fsubp
and
and
stos
mov
mov
addr16
leave
add
loopne
cs
mov
test
or
lahf
rol
xor
pusha
push
inc
out
cmpsl
shl
mov
lods
jno
popa
out
cmc
outsl
mov
xor
cwtl
loope
out
mov
inc
sub
sbb
sub
inc
clc
pop
dec
addr16
add
cmp
rorl
out
or
int
jl
repz
out
add
mov
lock
lds
jns
stos
lods
shlb
gs
xchg
and
or
mov
mov
sarb
rorb
jmp
cmovae
mov
cs
cmp
aam
decb
jne
clc
inc
push
jb
lret
inc
faddp
ds
adcl
popa
inc
imul
outsb
movsb
lcall
ja
gs
cmp
push
lds
rolb
fwait
or
arpl
lcall
pop
xchg
mov
xchg
movsl
aaa
lods
jle
sbbb
cmp
mov
jecxz
mov
orl
decl
xchg
fisubrl
pop
cmpsl
call
sbb
pop
lret
addb
mov
ret
adc
adc
cltd
in
jbe
push
ret
xchg
and
jg
inc
inc
pop
pop
pop
mov
xchg
repnz
test
xor
or
scas
stc
int
clc
inc
repz
inc
adc
and
mov
movsl
mov
int
jge
or
inc
mov
int3
and
inc
test
imul
jbe
jne
lea
pop
pop
xor
and
sub
std
ret
adc
fsubrs
in
cmp
mov
mov
and
insb
adc
push
push
clc
lret
pop
shlb
jg
rcl
loopne
or
mov
popa
add
mov
inc
fdivrl
sti
inc
std
jl
mov
xor
out
push
add
xchg
mov
movsb
nop
push
lock
mov
and
and
or
shlb
dec
jecxz
pop
sbb
pop
sbb
mov
cli
sbbl
xor
push
ds
sbb
jo
out
or
xchg
mov
cmp
inc
push
xlat
mov
cmpl
clc
sarb
shrb
add
pop
push
int
pusha
fdivr
shrb
cmovno
into
xor
cltd
mov
call
fwait
jo
inc
je
inc
test
and
add
mov
insb
outsl
push
jg
ds
add
xor
dec
leave
ficoml
mov
clc
or
add
sub
push
test
data16
ret
sahf
fs
scas
jl
lret
cmp
mov
mov
mov
data16
mov
dec
cmp
lcall
cmp
shl
out
sarb
mov
lahf
mov
andb
ljmp
push
jne
and
int3
push
and
pop
dec
add
ret
loope
fucomi
shlb
and
gs
inc
adc
mov
dec
bound
jnp
repnz
lahf
jmp
inc
adc
push
repz
mov
adc
rol
push
enter
pusha
lahf
mov
push
icebp
orb
ret
loope
adc
stos
adc
fwait
push
or
sbb
loop
xor
jg
sbbl
mov
fmull
orb
fs
or
push
mov
inc
push
sbb
dec
push
push
rcll
mov
push
sbbl
rcrb
mov
add
jmp
or
repnz
hlt
loopne
push
stc
subb
shll
pop
js
mov
sarb
das
jmp
divb
mov
test
nop
pop
dec
nop
lea
mov
push
pop
nop
dec
fdiv
cltd
mov
shlb
test
push
and
add
xchg
cmp
and
pop
jmp
test
xchg
jne
sub
scas
stos
ljmpw
add
or
je
push
push
mov
out
sub
xor
pop
sub
add
std
xor
mov
test
add
call
pusha
mov
jns
roll
mov
mov
fisubs
mov
rol
mov
testl
ds
pop
cmp
mov
fimuls
scas
inc
dec
pop
sub
jo
xchg
mov
ret
out
mov
push
xchg
adc
sub
aam
outsl
popf
dec
test
inc
iret
sub
dec
xor
loop
mov
cmp
xor
ss
xchg
mov
decl
cli
push
pop
add
cmpsl
push
push
mov
pop
inc
cld
xor
lcall
pusha
icebp
mov
mov
jmp
inc
add
jbe
outsb
push
clc
push
xor
cmp
loope
add
addl
sbb
movsb
cmp
sbb
mov
dec
fiadds
lret
inc
push
testb
push
and
sbb
jno
and
xor
test
add
jnp
mov
mov
inc
sti
mov
mov
lock
jne
inc
push
pop
je
jle
dec
add
push
dec
add
cmc
sub
pop
mov
cmp
add
lea
shl
ret
add
pushf
daa
inc
jl
loope
dec
stos
call
sub
subl
add
xchg
add
adc
mov
fs
je
sub
and
mov
call
pop
fidivrl
icebp
add
jo
pop
lahf
inc
shll
dec
jle
movsb
addl
mov
fadds
pusha
pop
inc
pop
shll
dec
adc
or
dec
hlt
lock
pushf
insl
addb
inc
dec
enter
sbb
jp
ss
push
jecxz
adcb
inc
push
mov
stos
mov
xchg
lock
hlt
push
xor
add
or
cmpb
cwtl
inc
jmp
mov
jp
mov
sbb
sbb
loop,pn
or
add
push
pop
inc
sbb
mov
fidivs
into
int
lret
cmpsl
in
push
roll
cld
loope
icebp
mov
mov
in
or
orl
out
push
jl
in
jge
movsb
mov
or
xor
pusha
popf
or
divb
fstpt
sub
das
sbbb
dec
push
sub
mov
sbb
mov
or
or
mov
insb
cmc
pusha
push
push
inc
sub
jns
mov
xor
and
mov
pop
xchg
push
and
add
shll
loope
add
or
xchg
cld
outsl
inc
mov
pop
xchg
insb
lcall
rclb
test
movsl
lahf
lods
inc
or
mov
or
outsl
xor
or
aaa
push
sbb
xor
pop
push
add
add
jmp
fmull
sbb
enter
es
das
outsb
fwait
movsb
sbb
das
gs
std
mov
mov
add
out
sbb
sub
int
xchg
es
out
pusha
mov
xchg
std
es
xor
imul
filds
jmp
dec
or
and
or
push
dec
sbb
enter
std
sub
or
movsl
sbb
popa
sub
push
lods
pop
push
rorb
xor
push
fcmove
push
mov
pop
inc
jge
popa
sbb
movl
adc
repz
adc
popf
sbb
test
add
fwait
push
outsb
jae
or
lock
cmpsl
cmpb
nop
clc
lods
inc
movsl
mov
or
into
and
popf
inc
std
push
loope
xor
arpl
push
stc
inc
sbb
mov
jp
cmp
push
shll
add
xchg
hlt
imul
mov
dec
addl
mov
sbb
xchg
sub
shlb
sti
fsubrs
xor
scas
lds
jge
xchg
ljmp
std
push
adc
mov
dec
loop
pop
adc
repz
ret
ja
pop
mov
ss
push
adc
xchg
inc
add
xchg
jmp
xor
or
mov
jb
cmp
cmp
jno
adc
jmp
adc
insb
cmp
push
enter
or
xchg
dec
jne
loope
and
mov
and
mov
sub
cltd
fcmovbe
sbb
xlat
movsl
push
popa
dec
fisubs
jbe
xchg
mov
jg
dec
push
imul
lcall
fwait
jne
push
in
push
aam
push
hlt
push
push
inc
add
inc
mov
jl
pop
mov
push
mov
add
sub
lods
mov
sub
lods
ja
adc
cwtl
push
addr16
out
lods
or
mov
add
test
cmpsb
sahf
and
dec
stos
pusha
inc
xchg
jg
push
daa
push
inc
mov
mov
lea
loope
jbe
loope
xchg
sub
sub
inc
cmp
cmp
push
dec
and
push
push
jns
xlat
xor
xchg
dec
ret
out
push
pusha
popf
xor
adc
or
adc
daa
popf
or
or
aam
adc
push
mov
and
sbbl
inc
test
and
inc
lahf
mov
jmp
movsb
sub
test
imul
and
jmp
mov
rolb
orb
ljmp
cs
cmpsl
xor
dec
subl
add
dec
dec
and
xor
mov
adc
fbstp
js
shrb
mov
xchg
fs
sbb
jle
pop
movsb
or
lret
pop
pushf
popa
inc
outsl
dec
xchg
pop
notb
cmc
out
jle
and
jne
test
bound
add
fisubrl
xchg
cmp
push
iret
push
daa
pop
cmc
mov
int
imul
xor
hlt
lahf
push
pop
or
out
lock
das
or
fwait
cwtl
add
bound
jl
pop
ss
sbb
push
imul
mov
or
or
xchg
rolb
loopne
add
int
pop
mov
inc
dec
shrb
adc
xor
push
bound
repnz
ja
or
and
mov
mov
push
inc
repnz
imul
stos
fimull
xor
in
div
cltd
int3
and
and
pop
jns
sbb
mov
add
sahf
enter
cmp
decl
xor
mov
shll
inc
call
jl
ret
mov
fldenv
sub
mov
cmpsb
dec
pop
test
push
add
enter
call
sahf
sbb
popf
fwait
shrl
cmp
push
dec
push
and
scas
mov
adc
into
or
add
pop
jp
lcall
std
add
je
push
int3
testl
int
xchg
aaa
std
inc
inc
xchg
sub
push
out
stos
lahf
fdivr
adc
loope
cmpb
lds
inc
and
adc
scas
lcall
xor
pushf
insb
push
add
inc
popl
aad
mov
adc
and
fs
mov
push
adc
popl
aas
push
fmulp
add
cwtl
fwait
test
mov
fsubs
inc
movsb
cmp
or
call
aad
mov
jne
ja
mov
insl
movsb
mov
cld
pushf
jne
pop
inc
jl
jmp
hlt
fstps
and
push
sub
movsb
push
addl
loop
dec
ds
sbb
pop
push
mov
jno
add
ds
cwtl
int3
mov
aam
and
and
shrb
inc
roll
ljmp
incl
mov
andl
shlb
pop
je
cmp
sbb
jo
dec
xor
dec
mov
lds
daa
inc
push
xchg
sub
shrl
in
lods
addr16
fadds
out
mov
mov
jmp
loopne
xchg
cmc
cmpsb
insl
sub
aad
jno
pushf
stos
sbb
mov
push
mov
cli
in
outsb
test
sbbl
test
xchg
push
inc
add
hlt
pop
aad
mov
jb
mov
fdivs
add
push
pop
push
iret
cli
ret
negl
test
push
inc
cld
adc
aad
pop
test
pop
mov
loopne
pop
push
jno
lahf
mov
repnz
dec
leave
addr16
mov
rcll
insb
or
les
std
into
call
aam
xor
push
sbb
out
outsb
test
dec
popf
in
dec
jne
sbb
push
add
jne
fs
sbb
xchg
push
div
call
pop
data16
scas
mov
and
push
jl
adc
sbbl
xchg
fcomp
mov
add
jp
lods
sbb
mov
sub
mov
pusha
dec
in
pop
adc
xor
mov
icebp
xchg
mov
mov
int3
push
push
inc
mov
aad
xor
movsb
rorb
pop
push
cmp
xor
inc
fisubl
ret
cs
lds
loopne
or
or
fidivrl
lcall
dec
sub
cli
cmpxchg
sub
adc
xor
pop
fwait
test
lods
js
sbb
sub
xchg
push
xchg
int
icebp
xchg
test
add
push
inc
sub
lods
fadds
scas
dec
cmp
or
pop
dec
or
loop
or
fisttps
push
adc
or
inc
pusha
das
sti
dec
and
push
lods
xchg
call
cwtl
or
int3
mov
dec
pop
mov
xchg
adcl
sbb
roll
ficompl
cmp
jg
ficompl
push
int3
call
iret
sub
pop
ficomps
jne
insb
stos
dec
ds
lds
mov
lea
jo
and
xchg
stc
sbb
stos
xor
cmp
cmp
add
in
push
jbe
mov
xor
loop
xor
es
mov
es
dec
test
add
dec
loop
icebp
pop
mov
pop
push
fnstsw
in
addl
sbb
shlb
movsl
and
or
pop
push
lahf
sbb
ss
dec
mov
shrb
cmp
cmp
xor
test
sub
lods
dec
aaa
lods
fpatan
inc
jmp
sahf
icebp
or
push
mov
jno
jl
outsl
jg
or
pop
mov
repnz
and
sub
dec
leave
add
pop
mov
cli
or
cmp
adc
int
jne
xchg
je
cmp
out
js
xchg
fwait
lahf
xor
lret
xor
popa
xor
es
jmp
shlb
or
push
movsb
xor
pop
mov
test
andl
les
movsb
mov
sbb
jl
mov
sti
mov
adc
cmpsb
or
lahf
pop
test
lea
push
cmpsb
into
cld
dec
notl
add
xchg
inc
or
push
inc
addb
aam
and
cmp
pop
cmc
push
xor
push
cmp
pop
int3
pop
add
sbb
cmpsl
mov
add
mov
pop
jl
adc
das
enter
loop
ljmp
xchg
sbb
shll
sbb
inc
mov
test
jmp
sbb
dec
cmpsb
xchg
vphaddbq
mov
cltd
adc
ljmp
and
sbb
pop
fistpll
inc
inc
add
push
lds
xor
xor
das
jo
and
xchg
aad
and
jbe
stc
pop
and
jecxz
test
rorb
adc
sub
cwtl
push
dec
adc
xchg
inc
xchg
cmc
mov
add
icebp
ficomps
jns
pushf
stos
pop
popl
push
mov
movsb
ret
or
mov
test
aaa
cmovns
add
push
xor
cs
stos
jae
push
cmpl
call
test
fwait
ljmp
pop
add
test
adc
test
jne
push
arpl
arpl
and
test
ljmp
or
decb
ret
rorl
add
std
add
testb
ret
cmp
ds
adc
and
inc
rclb
hlt
add
cmc
xor
and
je
ret
shll
ds
popa
pop
cmp
mov
hlt
ret
push
mov
stos
aaa
push
stos
jno
into
scas
loope
jmp
mov
jne
popf
xor
add
inc
test
js,pn
fisubl
lcall
mov
adc
out
xchg
jae
stos
pop
push
pop
inc
inc
sub
out
mov
lret
dec
in
mov
jg
inc
mov
in
fimuls
js
cwtl
xchg
jg
cmp
jecxz
mov
xchg
hlt
push
mov
frstor
sbb
cmp
mov
scas
movsb
sbb
cmp
scas
jecxz
sbb
or
pop
xchg
out
rcl
test
in
dec
jns
xchg
xchg
inc
imul
test
jo
jns
cmp
push
xchg
mov
push
jl
jg
sbb
mov
mov
repnz
jo
add
into
cmp
sbb
jbe
cli
test
test
icebp
ds
fldt
mov
xchg
fidivl
xchg
cs
loopne
cs
shlb
mov
jno
inc
rcl
adc
repnz
cmp
stos
xchg
je
and
pop
lea
mov
fdivrl
xchg
loop
xor
inc
sbb
dec
fdivl
add
into
aam
cli
lock
pop
movsl
cmp
mov
cli
movsl
ss
xlat
inc
inc
pop
pushl
js
dec
sbb
xor
shl
inc
in
sbb
add
dec
mov
mov
pop
and
mov
mov
lea
lods
inc
ret
dec
pushf
clc
lcall
or
jle
mov
mov
cmc
test
orb
in
jg
sbb
sub
fwait
jecxz
inc
mov
sub
cli
xchg
fnstsw
inc
repz
ret
add
cli
jl
cmp
outsb
ss
push
cld
mov
xchg
cld
xor
out
or
hlt
or
adc
stos
lock
xchg
cmpl
rolb
adc
cld
lods
int
mov
cmpsl
fiaddl
cmp
cmp
cmp
mov
mov
xchg
lret
cs
mov
push
mov
and
cld
mov
loopne
sub
pop
ja
sbb
xchg
sub
push
push
cmp
das
add
outsb
icebp
add
test
fs
dec
stos
lds
push
roll
inc
sub
jp
mov
and
inc
mov
push
add
dec
or
and
int
sub
in
add
add
dec
bound
xchg
adc
js
push
pop
addb
mov
push
mov
and
cmp
or
pop
dec
cld
push
jne
sub
xor
scas
orl
mov
rclb
imul
icebp
test
pop
lds
sub
pushf
clc
das
stos
ds
out
sti
and
sbb
or
rolb
les
pushf
movsl
pop
pop
loop
nop
xlat
loopne
lods
incl
adc
xorb
test
mov
jo
mov
add
divl
aam
sbb
scas
push
movsl
mov
jle
cmp
fwait
add
xor
adc
jno
or
cmp
jp
inc
aaa
pop
shlb
lcall
in
iret
xchg
lcall
add
imulb
outsb
in
xchg
push
lea
xchg
sbb
push
outsb
gs
dec
test
ret
push
into
fdiv
aam
add
xor
mov
bnd
xchg
cltd
xchg
cmc
insb
cmc
mov
xchg
jb
jo
mov
clc
inc
popa
cltd
pop
push
stos
clc
push
loop
or
jp
and
cli
outsb
cmp
inc
xchg
shll
out
dec
cmp
dec
pop
cmp
mov
jne
cmp
shl
lret
leave
jo
xchg
pop
dec
sbb
dec
push
mov
xor
jne
adc
adc
repnz
out
adc
or
insb
dec
sbb
sub
loope
fistpll
jecxz
inc
dec
or
mov
or
mov
dec
jp
cltd
loope
and
push
and
inc
insl
les
pop
mov
cld
adc
fisubs
jmp
add
mov
cld
and
inc
add
ss
inc
outsl
out
mov
rcrl
push
push
push
std
add
jne
push
int
shll
enter
mov
into
jo
lret
and
inc
add
notb
mov
js
js
jp
fnsave
sub
nop
cli
mov
push
dec
test
pop
or
popa
and
insl
cmc
mov
fucom
fisttpll
repz
mov
mov
add
pusha
add
jo
cmp
ret
mulb
push
sub
jnp
mov
or
hlt
adc
test
or
in
jg
sbb
adc
inc
cmpsb
inc
xor
push
lock
jns
add
lock
fsubr
mov
imul
cmp
sub
scas
addr16
rcll
das
dec
test
cmp
jb
movsb
mov
or
add
mov
int
out
pop
or
in
pushf
jmp
clc
or
mov
testl
push
dec
loopne
mov
ja
cs
mov
jbe
cmpb
js
adc
in
fsubrs
imul
jl
inc
mov
or
jae
rolb
gs
jnp
xchg
dec
aaa
sub
sar
xchg
inc
insb
jp
jno
xchg
cmpsb
cmpl
push
mov
stos
push
mov
je
out
add
xchg
imul
adc
push
es
and
int3
pop
out
push
ret
mov
adc
add
xor
mov
sti
or
rcl
lcall
out
addl
sahf
ret
pop
mov
daa
scas
dec
je
hlt
sbbb
or
mov
pop
or
push
jae
fcomps
mov
inc
test
imul
scas
mov
inc
mov
jmp
and
ret
flds
faddl
popf
stos
mov
ret
negl
mov
shrb
nop
fs
inc
popa
and
adc
in
sub
lods
mov
es
pop
add
push
jne
cli
outsl
jl
inc
mov
cmp
test
xchg
lcall
pop
rorl
sbb
cmp
fisubs
pop
sub
mov
dec
jl
xchg
stc
and
lock
fdivrs
and
push
repnz
lock
push
outsb
xchg
push
lock
out
pop
push
add
mulb
repz
test
cmpsb
stc
mov
add
xor
imul
dec
xor
add
lret
dec
leave
loope
ja
cwtl
test
addb
dec
pop
dec
cld
inc
in
and
cmpsb
mov
clc
fdiv
inc
outsb
jne
pop
inc
xchg
and
jno
jge
mov
jbe
pop
inc
dec
scas
in
or
nop
fidivrl
gs
orb
jo
mov
add
pop
std
pushf
xchg
enter
mov
mov
inc
movsl
lret
inc
and
pop
jg
in
dec
mov
enter
lock
fisttps
cmp
movsb
test
xchg
or
pop
lock
rorl
gs
cli
sbb
filds
mov
mov
jp
loopne
notb
aas
or
jnp
sbb
adc
scas
rorl
adc
jbe
dec
fdivrs
daa
leave
mov
dec
xchg
movsb
pop
les
in
stc
decl
or
jo
mov
lods
sub
add
jmp
lock
xor
mov
add
fcmovbe
jg
ret
sub
or
push
or
test
lds
and
jne
inc
jmp
inc
sbb
push
cmp
es
and
xchg
test
mov
mov
cmpsl
stos
dec
xchg
outsl
pop
ds
out
adc
jmp
aad
xor
mov
mov
icebp
cmp
cmp
dec
cmpsl
in
cwtl
sbb
mov
mov
inc
mov
and
fmuls
lods
mov
int
sti
shrl
mov
or
jo
jmp
pop
imul
dec
stos
and
fs
dec
jle
into
shrl
dec
push
ja
inc
fistpll
push
mov
ror
xchg
sbb
sub
call
xor
or
mov
out
arpl
dec
mov
push
cmp
stos
or
jmp
jle
leave
pop
pop
cli
and
or
insb
or
add
mov
sbb
add
inc
in
dec
or
or
push
push
cmp
mov
hlt
popf
into
js
cs
dec
pop
shl
lock
lock
outsl
jl
adc
les
and
fiadds
movsb
pmuludq
aaa
lds
jnp
push
punpckhbw
mov
dec
insl
ljmp
push
jb
dec
mov
fstpt
mov
mov
push
ret
xchg
mov
popa
push
dec
sub
shll
into
nop
shrb
dec
lods
test
lock
insl
mov
pop
in
pop
ret
pop
push
jno
imul
dec
pop
push
push
imul
incl
mov
fldcw
sbb
mov
test
mov
cmpb
lret
add
inc
sahf
add
les
ss
push
push
cs
js
out
in
and
mov
push
out
mov
mov
imul
ja
pop
rorl
adc
enter
jmp
mov
idivb
mov
pop
pop
ja
nop
pop
push
stos
out
in
enter
scas
add
popf
adc
jl
xor
pop
lcall
rol
lods
inc
sbb
rolb
aad
int3
jg
xchg
ss
mov
fs
outsb
jg
and
sub
xchg
in
ljmp
das
push
mov
mov
dec
inc
sarb
mov
std
push
sahf
popa
movsb
rolb
gs
and
cmp
xchg
xchg
fxch
repnz
pop
xchg
mov
inc
cmp
outsb
cmp
ret
or
test
in
inc
ljmp
and
adc
push
mov
sbb
pop
push
cmp
mov
stos
adc
aas
mov
xorl
cltd
lock
add
clc
push
mov
fwait
cmp
cltd
push
loopne
call
rclb
cli
pop
and
jg
mov
lret
inc
xchg
sbb
jns
in
outsl
outsb
xor
insb
outsb
push
data16
sahf
pop
decl
test
sub
inc
ret
inc
dec
lods
inc
insb
insb
orb
shrb
xor
pushf
mov
or
mov
ljmp
out
shr
incl
sbbl
push
faddl
mov
or
lret
xchg
and
in
ljmp
pop
dec
int
inc
or
fdivr
scas
ljmp
mov
add
xchg
add
mov
es
sub
repnz
and
aas
fsubr
fisubrs
sti
aad
icebp
mov
and
sbb
cmp
and
dec
xchg
or
sbb
xchg
xorb
adc
jecxz
or
add
mov
fsubl
xlat
imull
test
lret
add
stos
push
or
icebp
std
push
adc
xor
sti
mov
lock
mov
pop
push
enter
cld
mov
stos
mov
cmp
mov
add
xchg
in
fidivrl
lret
frstor
adc
mov
repz
into
inc
push
adc
mov
pushf
sarl
pusha
insl
cmp
cmp
cmp
inc
xor
cld
insb
roll
jo
popa
paddsb
push
repz
jnp
test
in
cld
inc
ljmp
fisttps
js
push
sub
into
xor
rcl
jnp
ds
fcoms
test
mov
sbb
aaa
ret
add
jg
push
or
stc
adcb
cs
ds
xchg
sbb
mov
or
add
push
xor
jnp
rol
mov
add
xor
xlat
arpl
xchg
and
les
shr
lcall
jle
rcrl
or
mov
loopne
test
lcall
cmp
mov
sahf
push
inc
pop
mov
inc
jnp
adc
mov
lock
cmp
jecxz
cs
add
decb
in
lcall
cmp
movsl
mov
rolb
dec
pusha
mov
sbb
mov
xchg
movsl
pop
loopne
gs
jae
dec
cwtl
repz
pop
mov
clc
test
inc
test
cmp
das
pop
mov
call
pop
dec
data16
xchg
icebp
adc
je
mov
mov
dec
mov
or
mov
je
xlat
xor
fdivrl
pop
xchg
adc
lock
xor
pop
or
addb
daa
add
cmpsb
sub
adc
lock
push
mov
pop
cmpsl
out
shrb
or
test
xchg
mov
stos
sbbb
inc
dec
aam
mov
push
std
push
jg,pt
push
push
in
add
dec
adc
int
cmpsl
push
test
pop
or
push
or
pop
or
add
or
clc
push
lea
xor
addb
dec
cld
push
cli
mov
std
adc
dec
test
or
lock
cli
es
jo
mov
rcl
sbb
pop
push
push
ja
outsl
push
pop
aas
dec
push
add
outsb
stos
adc
and
fnstenv
ljmp
and
xor
cli
inc
mov
ss
mov
xor
inc
inc
jb
add
add
mov
or
popa
cld
cmp
stos
inc
sti
lahf
adc
add
add
mov
mov
push
push
stos
inc
xor
int
lods
inc
add
mov
sub
adc
or
xchg
scas
push
push
push
add
loop
mov
decl
iret
sub
in
pop
fsubr
pushf
xchg
mov
xchg
lods
adc
mov
insb
cmp
inc
push
push
fsubs
insl
push
cwtl
add
jp
loopne
push
mov
int
adc
dec
ds
inc
adc
jecxz
popl
and
xor
mov
pop
cmc
sub
lds
rep
inc
push
or
sub
sbb
iret
pop
add
call
loope
sbb
pop
cmp
pop
enter
loop
push
outsb
repz
in
xchg
lds
push
or
inc
mov
adc
push
addr16
inc
sbb
pop
cmpsb
inc
push
mov
sub
popl
pop
and
mov
push
cmc
xlat
jno
xor
and
sub
pop
jmp
add
shrb
in
jns
dec
sbb
xor
pop
adc
jg
mov
jnp
xchg
int3
sbb
test
loop
sub
inc
test
add
mov
xor
push
pop
add
push
mov
ret
push
jle
pop
sti
out
scas
inc
lds
lahf
mov
dec
mov
call
jp
test
pop
lahf
cli
add
mulb
xchg
cmc
mov
push
xor
test
or
dec
pop
repz
dec
cs
aaa
sub
pop
mov
jne
iret
pushf
mov
popa
xlat
pop
push
adc
push
cld
mov
pop
leave
cmp
mov
jns
add
sbb
ljmp
popl
es
mov
repnz
adc
fidivl
mov
dec
sbb
lock
add
cmpl
jnp
les
pop
sub
sub
lret
mov
out
mov
push
ljmp
jnp
in
scas
mov
les
imul
mov
jo
add
rcrl
in
cwtl
inc
push
push
jecxz
mov
mov
test
cmp
jmp
jle
cmp
sbb
out
lods
sub
inc
aas
cmp
rcrb
ret
jno
mov
adc
or
pop
or
sbb
faddl
xorl
inc
das
sbb
mov
in
lar
jmp
jecxz
mov
and
pusha
or
and
cmp
js
sbb
cmc
in
cwtl
push
xlat
or
leave
mov
test
bound
cmpsb
dec
cmp
cltd
mov
xorl
int3
add
aaa
stos
mov
movsb
xchg
jno
mov
pop
int
imul
or
sub
push
shll
rol
inc
lock
minps
lret
mov
mov
cli
je
sbb
adc
push
bound
ret
pop
ljmp
mov
aam
push
mov
xor
push
lahf
lret
cmp
cmp
in
and
xchg
dec
cmc
jne
iret
push
loope
push
push
cmp
mov
sub
ret
xchg
movsl
or
cs
mov
xlat
fs
jl
pop
jbe
xor
ja
xchg
rcll
mov
push
push
call
loope
stos
clc
rclb
rorl
ficompl
icebp
test
das
pop
cli
push
or
lds
test
jp
mov
std
and
outsl
ret
pushf
dec
arpl
decl
push
sbb
mov
jmp
ret
rcr
cld
ret
dec
cmpsb
ljmp
pusha
popa
or
push
cmp
jecxz
fimuls
sub
push
or
dec
into
push
pusha
add
inc
aaa
pusha
pop
fdivs
adc
jmp
mov
sbb
mov
aam
test
int3
cmp
mov
sahf
ret
and
xor
cmp
clc
adc
in
xchg
repz
push
xor
ds
push
add
adc
popa
roll
aam
adc
pop
dec
jle
xchg
mov
loope
lods
test
mov
adc
xor
sbb
sub
and
cmpsb
adcl
sbb
and
lea
sahf
sbb
data16
dec
dec
int3
mov
add
add
inc
loope
jnp
mov
inc
inc
mov
jno
icebp
in
mov
add
int3
dec
xor
push
testb
cld
push
stos
mov
mov
cwtl
and
popa
mov
or
outsl
jecxz
loopne
andb
pop
test
xor
sub
push
dec
lock
or
sti
jecxz
in
xor
fisubrs
inc
mov
das
xchg
aas
push
hlt
iret
ret
adc
shlb
jmpw
mov
jmp
ljmp
es
repnz
xchg
fnstenv
cmp
lods
sahf
dec
movl
xchg
ljmp
push
add
rcrl
out
fcomp
clc
push
mov
in
push
inc
adc
loopne
sbbb
test
sub
icebp
dec
push
sti
jo
jg
lock
pop
in
xchg
pop
scas
xlat
mov
nop
dec
push
push
cli
xorl
pusha
xchg
stos
mov
add
inc
mov
call
aam
mov
hlt
out
lods
ss
outsl
insb
sub
adc
fisubs
fisubl
mov
in
in
nop
loopne
mov
cmpsl
lahf
mov
push
into
mov
outsb
lds
add
push
cmpb
mov
das
sub
stos
push
cmpsb
fbstp
cld
mov
imul
push
aaa
dec
es
pushf
ss
add
mov
xchg
loope
mov
imul
and
pop
sbbb
inc
mov
lahf
pop
enter
scas
leave
ds
sbb
xor
sbbl
std
xchg
jo
push
mov
sub
clc
sub
in
ss
jae
ret
pop
in
xor
sarb
cmpb
push
fdivs
dec
shll
push
push
push
and
dec
mov
pop
decl
adc
adc
stos
icebp
pop
incb
fadds
cmp
and
je
jl
daa
xor
insl
push
xor
cmc
jg
xor
push
loope
mov
xchg
adc
dec
test
push
pop
orl
andb
insb
mov
lahf
push
adc
inc
lock
push
setge
dec
dec
and
nop
and
add
mov
subl
scas
aaa
pop
aam
inc
ret
movsb
push
addr16
mov
inc
pop
hlt
fistl
mov
xchg
les
ljmp
and
mov
movsb
les
xor
inc
mov
pop
out
ret
xor
and
xor
ja
and
add
and
and
pop
fs
jge
jmp
cmp
sbb
aad
mov
rorl
outsb
or
fmuls
test
adc
sub
lret
icebp
xchg
lock
push
xor
adc
dec
and
adc
mov
scas
out
std
test
mov
lods
mov
mov
cs
mov
sbb
push
ss
adc
aaa
push
sub
add
sub
jecxz
sbb
fxch
sub
aad
ds
or
dec
ret
cmp
std
and
sbb
push
rcll
popf
inc
movsb
scas
add
cmp
js
sti
or
mov
xor
outsb
je
cmovle
inc
and
lds
ret
mov
or
xor
inc
inc
mov
lock
jl
mov
aaa
mov
inc
out
repz
loopne
cli
or
push
push
mov
inc
punpckldq
pop
call
sbbb
lods
sub
sbb
adcb
push
xor
adc
jbe
push
test
leave
pusha
sub
out
push
jne
addl
xchg
mov
pop
cmp
mov
and
cld
jg
daa
sub
js
test
sub
inc
sub
pop
xchg
sub
dec
ret
xor
or
std
or
push
add
es
dec
add
mov
icebp
sub
fdivs
test
cmp
int3
or
or
adc
dec
xor
cmpsl
ret
add
cmp
mov
inc
call
xor
xchg
test
popa
pushf
fldenv
add
ret
popf
add
ja
xlat
dec
jmp
jbe
mov
and
xchg
mov
sbb
cmp
mov
rcrl
mov
xchg
mov
aam
inc
outsb
mov
inc
and
push
shll
adc
add
pushf
add
push
popf
add
fwait
in
sbb
sub
leave
cld
and
repz
ljmp
aad
imul
dec
scas
dec
fistpl
clc
mov
lret
loopne
fcmovb
and
sbb
imul
ret
fldt
sbb
or
test
inc
pop
test
in
xor
inc
arpl
sbb
fsts
rorb
test
xchg
jmp
mov
std
ffree
mov
push
cmp
mov
push
push
cmpsl
clc
xor
clc
lcall
sbbl
sub
addr16
xchg
xchg
fimull
add
dec
cwtl
test
dec
ficoms
ss
ds
adc
xor
pop
pop
subl
and
or
fnstsw
pop
cmp
or
pop
xor
pop
je
sbb
clc
iret
mov
in
sbb
push
idivl
mov
lods
testl
and
clc
jmp
pop
pop
lock
dec
inc
addr16
roll
jge
add
and
jmp
sti
jp
shll
out
and
shrb
jge
xchg
jbe
loope
push
loopne
push
xor
inc
sub
aam
movsl
and
xchg
clc
lea
mov
or
inc
repnz
mov
scas
loopne
mov
movsl
pop
hlt
pop
mov
lcall
ret
cwtl
adc
orl
push
ret
addr16
das
mov
ja
jne
inc
xchg
aas
roll
stc
cmp
xor
dec
adc
mov
pop
inc
dec
xor
or
or
je
push
pop
push
dec
imul
mov
sbb
or
cltd
adc
push
decl
sarb
fsub
test
subb
xor
aaa
sbb
mov
nop
sbb
pushf
dec
sbb
fwait
jp
jb
fwait
test
das
jbe
add
pushf
cmpl
adc
xor
pop
jg
push
popa
cwtl
xchg
addb
or
lods
inc
fwait
or
ret
xchg
sub
cmpsb
mov
adc
cmovg
adcb
fs
icebp
push
lahf
or
or
popf
cli
add
xlat
aaa
aam
xchg
in
addr16
test
daa
or
cmp
or
add
lahf
ret
loope
lahf
dec
movsl
xchg
mov
outsl
xor
push
in
xchg
test
into
jne
jl
or
xchg
xchg
inc
aaa
popa
sbb
mov
imul
push
sbb
xlat
out
adc
clc
aam
dec
xor
lahf
ds
in
mov
inc
sbbb
dec
cmp
data16
jnp
test
mov
andl
pop
adc
stos
inc
xor
jbe
pop
fwait
test
sbb
cmp
or
pop
aaa
jns
adc
add
adc
xor
pop
jb
mov
fsts
adc
push
movsb
aad
xor
loop
les
mov
xchg
leave
clc
mov
mov
repnz
cld
lock
or
inc
les
rcll
lock
loope
sbb
mov
out
pushf
pop
das
push
sub
or
adc
rolb
or
cltd
imul
xor
insl
imul
xor
lcall
std
push
pusha
cmp
xchg
mov
jb
bound
nop
adc
and
and
gs
fcoml
or
push
ja
das
repnz
mov
lcall
dec
push
dec
dec
adc
aad
cwtl
lods
outsb
add
dec
push
repz
mov
pop
mov
lret
adc
pop
mov
sbb
or
xchg
leave
jne
add
pop
or
aas
xor
jnp
je
scas
cmpsb
push
loopne
sbb
stos
mov
fildll
insl
test
lock
loopne
nop
sbb
je
jmp
mov
pop
and
inc
pop
and
sbb
pushf
decl
xchg
shl
js
mov
mov
xchg
push
mov
jne
dec
push
inc
cs
popf
mov
fadds
clc
imul
fstpl
hlt
pop
data16
fcmove
out
rcrb
dec
adc
cmp
fdivp
movsl
inc
mov
cmc
pushf
icebp
loope
pop
cmp
lods
xor
call
pop
add
or
dec
and
es
or
sbb
add
lcall
add
outsl
mov
push
add
xchg
fnstcw
daa
push
fiaddl
orl
push
xchg
pop
mov
mov
xchg
xlat
mov
ret
lret
lahf
js
jl
cmp
mov
jo
fmuls
lods
in
mov
push
les
xchg
add
sbb
sub
push
cmpl
push
popa
add
outsl
je
mov
rcl
sub
sahf
cmp
push
push
les
lret
pop
pusha
inc
mov
or
mov
cmpsl
shrb
ja
adc
xchg
mov
cltd
add
or
int3
push
xchg
mov
loopne
push
sub
rclb
aad
dec
sub
mov
icebp
or
incl
cltd
push
dec
or
mov
inc
mov
or
add
loope
pop
icebp
call
in
ss
cmp
loope,pt
mov
push
or
cmc
test
adc
rcrb
inc
out
imul
or
movsb
std
inc
mov
or
in
ficomps
cmpsb
incb
pop
iret
mov
aaa
fcos
je
cmp
add
lods
inc
outsb
stos
mov
add
icebp
je
fistpll
or
xchg
mov
jl
dec
sbb
mov
outsb
dec
in
adc
ret
sub
sbb
mov
pop
xchg
bound
out
xor
adc
das
mov
movsl
and
mov
sbb
push
add
pop
ds
add
dec
sahf
push
shll
insb
lds
cli
mov
sub
loopne
adc
mov
repnz
aad
stos
or
inc
sub
xchg
mov
sub
add
push
lock
test
sarb
jmp
in
mov
adc
mov
add
xchg
shlb
pushl
lock
add
sbb
mov
cs
cmpsb
add
fwait
dec
dec
add
fstpt
cld
ror
add
add
dec
xor
xor
clc
adc
sbb
and
jne
jne
sti
inc
insb
dec
push
int
xchg
jmp
cmp
push
jle
pop
lods
nop
dec
lahf
mov
push
xchg
or
mov
or
not
adc
and
cmc
loop
add
les
pushf
dec
subl
ret
sub
or
jp
rcl
test
sub
push
fwait
sbb
outsb
loop
movsl
cmpsb
movsb
cltd
mov
adc
mov
loop
jle
ss
ret
testl
cmp
pop
xchg
decb
and
or
fcoms
je
fwait
mov
sbb
andb
mov
cmp
lret
and
sub
mov
xchg
xor
jno
int
iret
loopne
jmp
xor
and
lret
inc
jno
out
aaa
call
jle
inc
popa
mov
or
std
push
rclb
test
arpl
adc
flds
imul
outsl
clc
enter
repz
movb
imul
ror
outsl
xor
loope
fstps
sbbb
out
inc
add
sbb
jo
cld
push
mov
std
cs
clc
xchg
dec
jmp
cli
sub
inc
mov
pop
and
in
iret
mov
or
sub
cmpl
push
cmp
push
lahf
cli
mov
xlat
add
mov
ja
inc
inc
add
mov
ja
mov
cmp
jb
xor
dec
cmp
xchg
mov
or
jecxz
fs
cmp
out
sahf
add
lcall
insb
sub
sbb
or
pop
sahf
cmc
pop
aas
cmpsb
and
or
or
insb
ss
push
je
fildl
lods
mov
push
sbb
push
jns
and
mov
xchg
sub
sbb
mov
jbe
adc
cmpb
je
cld
cmp
out
push
mov
icebp
cmp
push
jae
jecxz
ds
cmpxchg
mov
or
adc
movb
mov
in
lahf
cwtl
inc
outsl
cltd
mov
or
in
ljmp
inc
roll
cmp
xor
hlt
mov
sbbb
les
stos
sbb
sbb
rolb
std
pop
loopne
sbb
sbb
imul
clc
push
pop
mov
xchg
shr
sbb
roll
xor
cs
xchg
jbe
int
lahf
test
or
cmp
sahf
cwtl
xchg
aam
mov
mov
jnp
xor
sbb
push
push
or
push
adc
sbbl
cs
lock
adc
add
adc
orb
pop
rorl
movsb
pop
orl
das
cmp
xchg
jmp
xchg
cmp
insb
repz
daa
sub
insb
movl
mov
sub
adc
shl
and
dec
or
dec
mulb
adc
dec
pop
sarb
push
sti
mov
mov
es
in
js
or
aad
repnz
mov
out
aad
lock
dec
sbb
js
fsubrl
loop
bound
mov
pop
xchg
xchg
adc
mov
fdiv
pop
lock
test
imul
mov
stos
imul
push
xchg
pop
cld
sub
cmp
pop
add
jmp
mov
iret
sub
pop
or
jnp
das
hlt
or
push
sti
and
cld
dec
push
inc
into
push
nop
adc
sarb
dec
sbb
lret
mov
out
ss
sbbl
popa
mov
and
dec
sub
lods
xor
push
shll
push
mov
outsl
dec
and
lock
xor
ljmp
fidivs
aad
push
subl
movsl
popa
cmp
mov
add
add
mov
test
and
aas
loopne
in
xor
lods
push
sub
lcall
pop
or
or
add
xchg
inc
push
mov
dec
pop
popa
adc
cmp
lret
repnz
or
mov
cwtl
xchg
sbb
in
cmpsl
adc
std
push
sbbb
adc
sbb
adc
repz
cmp
js
dec
arpl
notb
and
test
stos
mov
sbb
or
inc
add
xor
in
push
into
ret
loopne
cltd
mov
inc
xor
cmp
mov
shlb
inc
repz
lea
adc
int
inc
dec
decb
movsb
mov
inc
and
mov
adc
inc
popl
xor
mov
imul
mov
dec
int3
mov
jbe
lds
pop
push
lret
cli
mov
sub
and
movsl
mov
and
dec
cs
sub
pop
clc
mov
pusha
shlb
or
hlt
ljmp
or
push
imul
jnp
add
dec
test
js
cmp
and
outsl
add
lea
idivb
xor
sub
jl
dec
nop
dec
popf
sub
dec
push
xor
mov
jle
add
pop
mov
cmp
xchg
rolb
pushf
ds
lea
insw
inc
aas
mov
push
push
add
xchg
cmp
xor
cmc
loop
xor
cld
sbb
and
leave
adc
test
es
stc
cmp
call
xor
jbe
xchg
mov
mov
add
lods
adc
dec
movaps
outsb
sub
inc
negb
push
add
dec
cmpxchg
pop
sub
js
inc
inc
inc
or
lock
adc
movsl
sub
mov
add
fucomi
jl
add
sahf
inc
inc
inc
jle
or
sub
mov
jae
test
mov
cmp
inc
jmp
aam
test
decl
mov
push
add
fwait
push
jp
mov
add
loope
call
fst
fidivl
push
jnp
aaa
push
and
jecxz
lret
sbb
icebp
das
fdivl
mov
xchg
jle
flds
jg
or
mov
jno
or
sbb
std
sahf
and
fiadds
movsb
ret
pop
test
cwtl
or
and
shlb
sbb
push
jp
subl
jb
pushf
push
sub
cmpsb
pop
fsts
xchg
hlt
push
cmp
ficompl
push
scas
sub
adc
pop
xchg
jae
inc
mov
jle
sbb
xor
cld
test
icebp
divb
mov
mov
or
rcpps
add
push
jae
scas
push
xchg
bound
push
jg
or
jo
je
cmp
inc
add
inc
push
add
fiadds
mov
test
add
dec
pop
inc
jmp
test
mov
adc
and
xchg
and
lock
nop
jle
push
mov
enter
cmp
and
rcll
stos
in
and
mov
or
int3
push
loope
sbb
push
clc
lods
adc
adc
push
scas
rolb
inc
sub
lea
push
sbb
and
mov
fistpl
mov
roll
lds
fbld
xor
clc
fdivr
mov
cld
cmp
mov
pop
test
ret
sbb
mov
mov
push
mov
mov
es
jmp
sbb
mov
sbb
mov
dec
sti
rorb
mov
fisubs
jno
or
iret
jae
jmp
rol
jp
cmpl
push
ja
lock
or
and
mov
dec
sbb
int
fcompl
xchg
mov
mov
ret
inc
aad
add
fildll
mov
lret
add
pop
out
inc
push
icebp
xor
sub
out
push
xlat
ss
adc
sub
getsec
rcrb
xor
adc
adc
or
mov
push
loope
mov
dec
sub
cmp
xor
push
sbb
sbb
lock
dec
pcmpeqb
jl
and
xchg
pop
push
sar
fistps
out
insb
andl
aaa
std
lret
xchg
mov
jo
nop
iret
aaa
or
pop
push
fcomps
aaa
std
test
insb
sbb
fisubl
out
cmp
bound
mov
insl
stos
clc
dec
fisubs
inc
ror
xor
sub
mov
add
loope
pop
and
not
push
rorb
xchg
cmp
sub
jo
xchg
mov
sbb
aas
xchg
dec
das
or
xchg
dec
inc
ret
jmp
fisubs
or
lcall
or
mov
call
sbb
add
inc
mov
add
xor
xchg
pusha
addr16
add
dec
lock
or
imul
inc
adcb
add
in
sub
sti
sbb
cmp
jne
inc
mulb
jb
ret
rorb
rcr
dec
imul
xchg
xchg
cmp
xchg
jne
mov
cmc
push
in
fiadds
imulb
lret
mov
sbb
aam
mov
mov
dec
sti
mov
sub
jp
jmp
lret
js
mov
movsb
cs
cmp
mov
stos
popa
inc
adc
shrd
and
mov
jmp
mov
xchg
lock
nop
mov
mov
aas
sbb
dec
adc
gs
mov
cmpsb
ret
ljmp
lret
ljmp
out
xchg
dec
lods
mov
mov
add
pop
xor
mov
push
sarl
or
adc
sarb
or
sub
popf
adc
mov
ret
jg
push
popf
fwait
and
push
test
test
or
add
xor
sbb
cld
pop
mov
pop
scas
mov
rcrb
das
mov
dec
mov
clc
les
pop
dec
rorb
xor
adc
ret
in
jge
fisttps
icebp
jmp
adc
push
or
push
rcl
ss
jb
popf
lret
or
in
scas
add
or
outsl
sbb
outsb
imul
cltd
movsl
dec
les
sbb
fistl
and
testb
mov
push
ficoms
cs
add
test
cltd
push
jbe
push
mull
mov
jb
enter
inc
adc
and
add
mov
cli
loop
jecxz
test
sbb
pop
cmp
add
push
inc
scas
add
and
sbb
dec
jne
sbb
push
int
ss
dec
pop
jmp
mov
cld
and
fistl
pop
sub
sbb
mov
pop
mov
cwtl
lea
mov
push
ret
pop
xchg
shll
std
and
leave
cld
leave
dec
mov
js
xchg
adc
loopne
pop
sbb
push
in
add
pandn
lods
cmp
xlat
pop
add
sbb
cld
test
out
push
in
adc
test
xchg
pop
dec
pop
aas
xchg
jne
sbb
mov
jge
jecxz
adcl
ljmp
pop
push
jno
rolb
push
std
shrb
xor
push
scas
fcoms
or
fiadds
mov
mov
jp
rcl
pop
push
xor
sub
mov
sti
cmpb
jg
xor
mov
mov
out
push
repnz
mov
clc
dec
inc
std
ds
sbb
aas
out
sti
movsb
sbbl
pop
mov
inc
cmpsb
mov
sbb
push
movsb
adc
mov
out
vunpcklps
and
inc
cmpsb
xor
pusha
adc
inc
push
mov
sahf
mov
push
dec
add
or
push
in
orb
mov
pop
mov
pop
mov
bound
rcr
sarb
mov
xchg
lea
jmp
aad
xchg
sub
or
inc
shrl
jp
hlt
int
or
pusha
cmp
jns
push
das
les
jo
mov
jnp
and
mov
ss
add
add
je
xchg
stos
add
cmpl
or
jns
leave
test
and
fnstsw
jp
or
call
xchg
sahf
lock
xor
repnz
and
add
ret
stos
clc
cmc
das
lods
mov
pop
adc
cmpsb
sarb
mov
clc
clc
sbb
add
lea
ss
or
js
inc
sub
push
aaa
fs
mov
cmp
leave
jnp
lods
inc
add
pop
jge
mov
and
in
push
les
cmp
push
in
inc
imul
jle
js
add
xchg
inc
aad
inc
incb
test
sti
sahf
sbb
in
and
jg
or
and
lock
cmpsl
mov
push
pop
sbb
xchg
add
jp
dec
push
cmp
cld
cmpsb
push
push
adc
push
add
loope
je
test
sub
xor
sbb
ja
xchg
push
xchg
push
adc
leave
xchg
xor
dec
popf
sahf
dec
ss
sti
inc
inc
add
rorb
push
inc
cmp
nop
and
dec
pop
inc
call
pop
push
lea
lahf
push
rcpps
xchg
mov
test
cld
inc
aas
sub
jecxz
jae
inc
dec
and
or
jecxz
mov
mov
pop
ja
cwtl
repnz
mov
leave
and
push
sub
push
pop
push
jge,pn
cmpsb
dec
jmp
cwtl
pop
cmp
mov
push
loop
outsb
mov
inc
aas
sub
cmp
hlt
mov
loope
ret
cmp
lret
or
pusha
imul
xor
test
mov
sbb
test
je
add
push
scas
push
shlb
movsl
jo
test
push
xor
mov
adc
ret
cmp
adc
xchg
test
pop
in
loop
xor
cmp
test
daa
movb
or
in
arpl
jnp
arpl
mov
clc
jo
dec
int3
aad
and
mov
subb
cltd
dec
shlb
int3
mov
orl
add
fwait
mov
dec
fcomps
mov
jg
daa
bound
xchg
pop
mov
jmp
repnz
mov
sbbb
popa
cld
lahf
add
mov
inc
add
mov
in
dec
dec
add
sti
xor
add
add
mov
push
dec
incl
and
mov
sbb
sti
in
ljmp
adc
add
mov
pop
adc
sub
sbb
inc
dec
cmp
adc
jle
mov
js
addl
lahf
adc
pop
stc
sbb
inc
pop
sub
sbb
bound
lods
jmp
sub
mov
lea
pop
shlb
or
fistps
cltd
rcll
mov
push
push
mov
mov
shrb
inc
cmc
jecxz
adc
xchg
pop
xor
sbb
sub
sbb
lret
xor
sbbl
dec
pop
test
aam
sbb
fs
mov
rolb
fwait
ljmp
add
xchg
add
mov
dec
or
dec
dec
mov
xchg
call
xor
cmp
inc
xor
and
and
sub
adcb
mov
decb
cmp
push
and
jge
testb
pop
sti
inc
jmp
stos
dec
mov
fsubr
into
mov
pop
pop
xchg
xor
adc
aam
out
jb
mov
mov
std
mov
stos
push
movsb
loopne
and
aaa
insl
inc
pop
xor
js
or
or
stos
int3
lea
andb
add
scas
adc
sub
jle
pop
jmp
inc
mov
inc
xchg
lahf
mov
fcompl
mov
or
ret
adc
mov
cmpb
mov
arpl
jecxz
lds
push
es
mov
cmp
fs
or
cmp
pop
mov
jecxz
loope
mov
js
cmp
std
mov
add
jo
jo
popf
scas
push
bound
sbb
pop
sbb
cmpsl
sbb
shlb
out
nop
mov
sub
pop
enter
lret
movsl
pop
xchg
daa
nop
hlt
inc
add
mov
aam
xchg
adc
lds
mov
pop
add
xchg
jno
inc
mov
inc
xchg
in
shlb
or
push
cmp
dec
pop
or
sbb
xchg
xor
mov
jno
xchg
push
out
rcll
pop
out
jmp
call
xchg
into
inc
pop
cmpsl
lds
sub
push
ficompl
and
lods
je
fsub
sbb
lods
add
loop
mov
pusha
outsl
mov
dec
adcl
test
or
jmp
dec
je
mov
ds
sti
pop
icebp
inc
cli
inc
add
cmp
adc
fsts
sub
in
xor
xchg
int
pop
push
dec
insb
jno
ret
lods
ljmp
inc
fdivl
push
popa
xchg
loopne
test
pop
push
mov
jmp
loope
rcrl
shrl
or
adc
lea
pushf
pop
adc
mov
lock
pusha
lfs
mov
outsb
insl
push
xchg
mov
or
mov
inc
mov
mov
pop
addr16
sub
jle
mov
imul
lahf
ret
outsb
adc
mov
sub
push
outsl
adc
out
xchg
and
or
jns
pushl
jo
shll
sbb
inc
xor
ficoml
lahf
lahf
out
outsl
add
add
das
sbb
pushf
mov
adc
pop
addr16
inc
xor
cmc
daa
lock
mov
push
mov
sbb
add
inc
cmp
push
cmpsb
sbb
mov
fs
pop
adc
push
fmull
dec
scas
sbb
pop
dec
jge
xorl
es
jno
call
or
adc
or
aam
sti
fmul
mov
mov
fists
add
xor
add
test
inc
push
xchg
dec
inc
push
mov
mov
pop
mov
dec
outsb
xor
outsl
sar
imul
sub
in
aam
loope
rcr
and
pop
ret
aad
or
or
pop
mov
je
test
mov
sarl
sub
add
jg
jno
test
add
adc
jg
mov
std
push
sbb
aad
or
mov
or
sbb
fmuls
cmp
test
pusha
ja
jmp
xor
arpl
aaa
repz
fs
stos
mov
add
mov
add
sahf
popf
fimuls
sbb
inc
dec
int3
adc
std
adc
pop
push
xchg
jg
loopne
ficoml
lods
mov
push
pop
loopne
add
pop
lds
testb
sub
dec
push
adc
in
fcoms
cwtl
insl
pop
les
cld
push
outsl
xchg
inc
push
add
pop
test
add
push
mov
cmp
xchg
test
mov
popf
popl
inc
sub
scas
pop
add
scas
call
xor
int3
push
jl
fdivrl
cmp
pusha
xor
int3
in
adc
dec
xor
mov
sbb
lret
xor
push
js
dec
pop
ret
les
pop
cmp
xchg
cmp
fmull
mov
xchg
push
pop
addl
ljmp
stc
daa
test
pop
inc
into
push
cmp
xchg
jbe
enter
cmp
aam
sbb
fldl
mov
inc
jne
xchg
dec
arpl
mov
mov
test
dec
add
pop
imul
repnz
and
cmp
jnp
adc
pop
andb
mov
inc
aas
inc
mov
push
xor
lahf
xor
add
inc
mov
xor
in
in
nop
inc
dec
clc
pushf
sbb
dec
mov
loop
or
fistps
bound
rorb
shl
push
push
or
dec
adc
loopne
fnstsw
push
bound
pop
lods
mov
pop
orl
call
lcall
mov
ss
mov
mov
sub
cmp
jbe
dec
or
movsl
fcom
or
aam
jge
jl
fadds
xchg
lcall
scas
add
mov
subb
push
rolb
rorb
xchg
xchg
cmp
jecxz
shll
movsl
test
sti
cmp
mov
xchg
data16
push
inc
aam
fnsave
mov
and
jbe
xor
repnz
clc
jg
shll
test
fdivl
jle
push
dec
pop
les
sbb
ja
jl
int3
stos
fcmove
loop
mov
roll
stc
xor
je
fldt
mov
and
inc
into
pushf
sbb
dec
add
xchg
fdivrl
out
and
xchg
mov
nop
out
ret
push
mov
sub
xor
cmp
fwait
pop
jecxz
sub
jno
in
decl
or
scas
fwait
lods
add
test
pop
int
fldcw
test
sahf
jno
int3
jne
dec
adc
sub
push
push
inc
out
push
mov
or
mov
jl
mov
jae
sub
lds
pop
mov
stos
je
rolb
ljmp
cmp
loope
jle
jle
outsb
xor
mov
jecxz
mov
in
test
push
or
dec
push
dec
roll
pop
xor
push
lock
hlt
je
enter
inc
sbb
imul
fadds
pop
add
or
push
sbb
dec
popf
lea
andb
add
gs
rolb
mov
lcall
mov
movsb
xorb
push
mov
sub
scas
mov
mov
xor
or
int3
mov
dec
js
xchg
push
nop
or
jmp
out
movsl
lea
push
aaa
and
add
dec
jg
daa
mov
add
push
loopne
cwtl
rcrl
push
cmp
push
pushf
fbstp
fidivrl
lcall
pop
lods
dec
outsl
stc
mov
jp
sub
test
ret
dec
mov
bound
clc
cmpsb
je
dec
cli
and
cmp
lock
mov
push
dec
les
inc
enter
inc
insb
cld
push
sahf
js
mov
daa
shlb
inc
test
or
cmp
or
ret
inc
inc
adc
push
push
test
xchg
dec
mov
and
inc
nop
jno
lods
fdivrs
test
mov
cmp
adc
mov
fcmovbe
int3
imul
xlat
scas
pop
imul
xchg
mov
dec
xor
ffree
push
aaa
lea
clc
push
sub
jmp
jecxz
cmpsb
lods
adc
adc
add
inc
out
inc
call
ljmp
test
xchg
sub
fmuls
je
mov
sbb
sub
mov
sbb
scas
push
lret
imul
lret
pushf
mov
sahf
mov
nop
mov
mov
in
mov
in
ficoms
mov
dec
cld
cltd
pop
jns
lahf
mov
add
dec
cmp
mov
filds
add
pusha
inc
out
cmpsb
or
mov
add
iret
hlt
pop
cmp
cmp
mov
sbb
mov
xor
push
or
push
or
dec
int
mov
xor
loopne
mov
and
lock
push
adc
pop
and
or
inc
xchg
dec
and
cmpsb
xlat
inc
lods
loop
loopne
je
cmp
jns
rorb
and
xchg
test
jp
roll
jp
adc
loop
mov
pop
repz
jo
adc
stos
mov
inc
sbb
pop
lret
fcoms
adcl
insl
mov
bound
fadds
push
jnp
push
xor
lods
push
insb
out
call
inc
lret
sbb
js
push
cmp
imul
xchg
mul
inc
cmp
xor
pop
push
fmull
mov
scas
push
fdivr
push
stc
dec
push
shl
push
cmp
push
or
cli
sub
mov
cltd
mov
repz
cld
sub
xchg
mov
cwtl
pop
loope
ss
and
jno
mov
ss
into
adc
insl
jg
mov
xor
push
mov
sarb
popl
aad
cs
leave
pop
fstl
mov
xchg
pop
sahf
mov
or
jmp
jns
dec
jge
push
jne
sbb
add
sub
pop
jmp
pop
rclb
ret
mov
mov
subb
sbb
jo
inc
adc
jmp
push
dec
and
sub
or
cmpsl
stos
adc
jb
xchg
movsl
adc
dec
adc
inc
ret
cmp
test
aad
or
push
aad
or
mov
cmc
xchg
movsb
and
je
inc
mov
sbb
jmp
pop
pushf
push
insl
stos
cmp
sub
lret
mov
stos
jmp
ret
mov
out
rcll
push
pop
dec
aad
std
stc
or
jno
inc
and
testl
add
sub
xor
sub
test
ljmp
aad
mov
out
mov
mov
bound
int3
xor
stos
cli
clc
hlt
push
je
mov
add
lahf
fs
mov
lods
int
jg
loop
insb
push
push
aas
dec
stos
je
insb
inc
xchg
xor
in
test
hlt
or
or
and
inc
or
es
dec
sub
xchg
pop
in
add
das
sbb
add
inc
shlb
aas
dec
mov
aad
cmp
jge
dec
jbe
xor
call
test
push
es
adc
inc
mov
lret
movl
inc
add
add
cmp
add
clc
mov
mov
add
femms
lods
in
ret
or
shl
mov
cmp
das
cmpsl
and
jo
testb
push
xchg
or
dec
test
rorl
dec
imul
mov
leave
popf
add
in
arpl
les
push
mov
or
lcall
test
orps
or
repnz
cli
mov
sub
cmp
dec
mov
sbb
jno
lea
push
jne
sbb
sub
cmp
adc
out
jp
add
test
sti
lahf
sub
int3
jne
sahf
sahf
add
mov
push
lock
clc
mov
xorl
cmp
lcall
arpl
pop
or
pop
cld
adc
aaa
sbb
mov
add
pop
movsl
pop
out
rolb
shlb
inc
fwait
es
add
cs
or
loope
in
dec
cmpsl
pop
not
cmp
cs
adc
lock
cmpsb
hlt
mov
mov
nop
mov
adc
pop
and
mov
iret
fcmovb
push
xchg
movsb
scas
add
mov
pop
std
xchg
or
roll
add
push
ret
mov
xchg
cmp
inc
xor
in
pop
test
add
mov
pop
pusha
test
and
loopne
lock
mov
orb
mov
jo
mov
daa
mov
or
push
or
or
hlt
lock
lahf
mov
in
sub
cmp
xor
or
clc
push
in
xchg
popa
add
bound
arpl
jne
imul
ljmp
pop
push
adc
dec
mov
movsl
clc
xchg
adc
mov
jl
mov
iret
xchg
push
jne
or
nop
dec
mov
mov
xor
inc
fdivrs
mov
inc
out
int3
mov
sahf
xor
add
jno
dec
in
lret
add
aam
inc
testw
or
add
loopne
mov
jno
cld
mov
mov
inc
repnz
push
cmp
or
mov
pop
push
stos
lds
xchg
outsl
xchg
cmpsb
mov
pop
popa
sti
mov
pop
test
ffreep
and
stc
push
pop
cmovne
xor
lea
stos
test
mov
cmp
cmp
das
add
sub
mov
or
jmp
mov
jbe
imul
scas
fdivs
in
lods
loopne
inc
lcall
aad
push
or
push
pop
loop
mov
ret
inc
in
cmpsb
sbb
testb
push
jge
push
xorb
adc
xor
out
or
inc
mov
mov
mov
inc
sahf
mov
sbb
cmp
addr16
test
jnp
mov
idivl
popa
mov
push
dec
mov
push
ljmp
and
pop
insb
add
adc
fimuls
roll
mov
aad
mov
fmull
loop
nop
mov
inc
dec
pusha
icebp
shrl
out
into
pop
rorl
mov
jge
cli
sub
int3
lret
mov
test
lret
call
sbb
cmp
or
jl
xchg
push
test
stc
pop
or
push
sbb
xchg
std
inc
loopne
mov
in
sub
inc
adc
pop
ret
fprem
push
or
cld
xchg
xor
aam
mov
jg
addr16
add
adc
adc
adc
xchg
shlb
rcr
or
ret
xchg
outsb
jbe
push
scas
lahf
fldenv
fimull
mov
inc
ja
fdivrs
call
in
out
mov
cld
scas
lcall
in
and
cmp
pop
sbb
lods
push
adc
inc
pusha
fs
or
js
pop
fimull
pop
shlb
mov
mov
insl
sub
mov
or
repnz
jecxz
inc
push
arpl
lock
cs
hlt
or
push
mov
adc
jg
adc
cmp
xchg
pop
sbb
icebp
test
loop
test
fstps
xchg
cmp
sahf
rcrl
dec
lods
or
cmp
sub
xor
cmpsl
scas
test
xchg
cs
sbb
xorb
jnp
les
ds
dec
cmp
jge
and
dec
jae
ja
div
pop
dec
cmpsl
mov
mov
sub
mov
mov
nop
ja
cmp
push
pop
cwtl
add
lahf
aas
push
loop
mov
testl
push
enter
or
sbbb
lea
pushf
xchg
fimuls
or
addr16
jne
adc
cld
loopne
xor
xor
sub
pop
jae
dec
bound
mov
pop
xor
outsb
jp
les
add
mov
mov
push
mov
xchg
data16
adc
mov
inc
shll
push
enter
push
and
add
jmp
dec
ret
lahf
cmp
jo
sub
xorl
es
inc
dec
adc
xchg
lret
insb
push
mov
fcmovb
rolb
or
sub
in
pop
hlt
movb
jne
popa
mov
cmp
adc
pop
add
inc
or
movsl
repnz
dec
xchg
push
cmp
dec
jne
ret
push
imul
or
sub
dec
pop
jb
fisubrl
outsb
es
test
les
sbb
push
xor
jge
inc
or
ljmp
fbld
add
jno
inc
xchg
jmp
aad
aas
leave
inc
insb
mov
mov
inc
push
cmovne
inc
mov
jl
xchg
fimuls
push
inc
push
inc
push
bound
rclb
xchg
rorb
ficompl
or
inc
dec
xor
xor
adc
lds
push
test
push
outsb
fs
dec
nop
jbe
jmp
dec
jae
or
push
out
les
xchg
mov
popf
adc
mov
lahf
mov
mov
sbb
xor
and
xchg
sahf
es
out
popa
lcall
sbb
push
xor
rcrb
xlat
xor
adc
cmp
xchg
pop
jmp
adc
mov
lea
sub
xor
sbbl
jne
jns,pn
rol
sub
and
xor
adc
cs
ret
push
and
cmpsb
andl
mov
imul
push
dec
or
mov
sub
leave
aam
lods
mov
rcrl
pop
cmp
fcoml
xor
lods
pop
mov
push
or
lahf
test
stos
inc
mov
xor
inc
mov
mov
sbb
add
jns
fcoml
jg
and
xchg
adcb
ror
pop
and
mov
cmpsb
inc
add
test
movl
xchg
xchg
ja
aam
adc
pop
dec
aaa
pop
sbbb
mov
out
mov
mov
stos
loopne
and
jl
xchg
xchg
mov
test
shrb
xor
push
push
push
cwtl
mov
nop
add
dec
in
jne
rorb
lock
decl
mov
jne
pop
cmpsl
lahf
call
lret
cld
mov
adc
or
lret
imul
popf
lock
add
test
push
dec
loop
dec
dec
fnstcw
inc
pop
cmp
jg
stos
or
dec
pop
dec
mov
xchg
in
mov
push
movsl
cli
gs
call
movsl
imul
loopne
andb
mov
stc
mov
xlat
push
jmp
es
ror
test
jecxz
mov
les
mov
ret
xor
mov
test
test
pushf
inc
push
sub
pop
xor
cwtl
add
sub
int3
add
rolb
repnz
int
dec
pop
push
fstpt
inc
lock
xor
ret
xor
push
rorb
and
or
call
pop
or
call
shlb
and
inc
xor
das
hlt
loope
cmp
mov
or
and
fcompl
shll
call
lods
dec
nop
dec
mulb
sub
push
xor
pop
push
sahf
test
sahf
add
mov
pop
or
xor
cmpsb
dec
les
dec
push
mov
and
in
pop
mov
jmp
xlat
inc
repz
mov
out
test
mov
pop
sbb
pop
jecxz
cmp
mov
insb
movsl
jo
aam
push
aas
sbb
jle
arpl
arpl
icebp
inc
clc
xorl
aas
jne
pop
sbb
pop
push
jo
jle
in
cli
push
pop
sarl
add
rcl
push
fstpl
or
loopne
rcrb
mov
sti
add
ret
stos
lods
sbb
sub
push
scas
add
cld
int
sub
pop
call
es
shl
cmpsb
push
or
sbb
mov
push
ss
fidivrl
or
pop
insb
mov
jge
dec
jno
ret
les
aad
inc
jle
xchg
clc
mov
aaa
pop
cmp
fisubrl
stos
cmp
mov
popf
jns
addl
cmc
popa
sub
dec
push
pushf
sbb
jne
cmc
out
lock
xor
jecxz
aaa
mov
sbb
ds
push
jle
mov
or
cltd
add
rorb
lahf
or
les
cmp
adc
outsl
jno
jl
test
fmull
iret
xlat
xor
cld
cltd
cli
inc
xchg
aam
or
sub
cltd
aam
subl
add
cmpsb
mov
push
int
xchg
jle
rclb
sub
cltd
repz
nop
lods
aam
repz
xchg
jg
cs
loopne
in
icebp
xor
sbb
push
jmp
xor
mov
mov
lds
rcr
push
iret
push
cmpl
jae
dec
xchg
sbb
sarb
cmc
cs
aad
call
test
adc
nop
sahf
int
adc
mov
int3
xor
mov
dec
or
jne
dec
xlat
test
mov
scas
and
pop
dec
loope
sbb
enter
inc
cmpsl
icebp
cmp
sbb
sbb
movsb
mov
movsb
inc
mov
add
or
mov
mov
dec
insb
shrb
clc
dec
cmc
enter
fisttpl
aad
pop
clc
inc
sbb
push
lods
test
adcl
cli
cli
iret
das
outsb
jb
ds
fildll
adc
ret
lcall
jle
shlb
xchg
jmp
or
shl
adc
ljmp
aas
fucom
repz
adc
sub
out
xchg
adc
sub
cmpsl
sbb
test
xchg
vmread
test
ss
and
cli
lcall
lock
lcall
xor
mov
mov
adc
mov
jl
adc
xchg
out
fwait
insl
cld
and
lds
loopne
fwait
les
xchg
jge
pop
dec
adc
int
add
fistpll
in
jo
dec
es
cmp
inc
xor
cmp
stos
inc
xchg
and
rolb
popf
test
fisubl
push
xchg
data16
inc
shrl
jae
or
pop
cmp
std
pushl
jo
fimull
fildll
outsb
pop
es
cmp
mov
push
fs
adcb
add
negb
mov
push
stos
push
inc
jecxz
std
xchg
enter
outsl
test
push
lds
les
and
xchg
push
and
mov
xchg
xchg
push
mov
sub
iret
cmpsb
adc
hlt
and
movsl
adc
or
jl
inc
push
repnz
nop
jmp
sub
popa
addr16
adc
popf
mov
fmull
fs
test
movsb
fidivs
pop
cmp
push
pop
pop
jno
pop
sbb
ja
dec
test
push
dec
jae
mov
imul
mov
mov
sti
xchg
dec
and
cs
jecxz
mov
xchg
cmpsl
call
mov
js
mov
mov
xchg
scas
cli
cmpsb
dec
jecxz
out
dec
jmp
ret
adc
jp
mov
sub
faddl
sbb
repnz
icebp
out
push
outsb
sbb
inc
and
inc
ret
fcmovnu
cli
pop
mov
les
pop
adc
lock
rorl
loop
pop
push
imul
insl
ret
addl
gs
pop
cmp
aam
popa
sbb
jge
lock
xchg
popf
out
fwait
mov
pop
jmp
mov
fldenv
ds
adc
sbb
in
sbb
inc
call
jnp
test
aas
or
fisubrl
fistpll
xchg
mov
call
mov
cld
pop
leave
add
mov
xchg
adc
sub
test
ret
mov
sbb
stos
cmp
inc
mov
mov
add
pop
int3
jno
adc
sub
das
adc
pop
pop
fildl
lods
inc
jle
fwait
and
adc
dec
push
movsb
add
jmp
bound
sub
ds
enter
mov
test
xor
jl
add
ss
xchg
push
push
mov
inc
aad
push
or
push
sahf
and
aas
push
hlt
js
and
xor
and
add
xchg
mov
shrb
dec
fs
inc
push
push
or
or
add
test
dec
nop
stos
push
sbb
cmp
clc
push
jne
jne
jmp
jns
fisubrs
hlt
pushw
inc
push
fs
fistl
or
inc
outsb
pushf
out
ficoml
clc
movsb
push
nop
dec
imul
rcrb
loopne
mov
cltd
dec
inc
sub
aam
je
lcall
cli
dec
fisubl
push
outsl
xor
jne
xor
cmpl
pop
mov
push
push
ds
push
cmp
push
call
lea
ret
push
adcb
shrb
jnp
clc
sbb
and
fdivrs
add
inc
adc
aas
pop
dec
aaa
out
mov
ljmp
push
fwait
stos
dec
test
rcl
and
mov
fsubs
push
sub
pop
or
inc
adc
mov
out
sub
xor
add
cli
cmpsl
aam
movsl
ja
ds
arpl
xchg
push
xchg
fidivl
push
sbb
pop
fsubrs
lahf
fdivs
push
sub
ret
scas
leave
add
xchg
aad
aaa
jne
call
test
rclb
iret
arpl
or
push
js
loop
aad
pmuludq
xor
or
arpl
aam
xor
flds
pop
sbb
and
test
addl
nop
mov
dec
lods
sti
sti
mov
pop
sbb
cmp
gs
jno
dec
iret
es
ja
xor
jl
test
and
test
fiaddl
sub
mov
movsl
out
sbb
cmpsb
push
or
gs
inc
jecxz
pop
inc
jnp
movsl
test
testl
push
cmp
xor
pushf
dec
arpl
out
inc
and
call
inc
push
shlb
fwait
adc
sub
idivl
into
cmpsl
pop
jo
in
fadds
mov
jge
xchg
aaa
imul
sbb
loopne
lcall
xor
push
cmpsl
xchg
or
pop
in
popf
cs
xchg
inc
test
rcl
iret
scas
push
out
les
sysret
add
xchg
push
stos
mov
lahf
sbb
jne
sbb
adc
add
cmp
mov
xor
jmp
dec
dec
jecxz
jno
test
jle
lcall
bound
push
andb
adc
unpcklps
mov
lods
sbb
sbb
and
add
xchg
mov
mov
mov
mov
lock
inc
and
dec
push
dec
das
xor
add
sbb
add
inc
add
ds
pushf
xor
test
aam
es
mov
nop
int3
mov
test
adc
adcl
nop
orl
dec
je
sbb
push
fiadds
cwtl
jmp
inc
lock
repnz
cmp
mov
cwtl
xor
cli
sbbb
dec
jbe
repnz
sbb
dec
lcall
cltd
in
dec
repz
insb
cmp
lahf
aaa
out
mov
xchg
lock
sub
rcrb
insb
and
imul
jecxz
cmp
test
xor
pop
cmc
xchg
lods
inc
sti
mov
adc
mov
enter
pop
fstl
lock
cmpsb
loope
sahf
xchg
jno
dec
or
xor
mov
aas
cmp
xchg
jle
je
lods
jo
in
jecxz
push
int3
les
or
sar
add
mov
push
push
mov
imul
sbb
sub
pop
call
dec
insl
jae
pushf
mov
out
push
aam
jb
mov
movq
add
ret
xor
lret
lcall
and
push
lock
fs
xchg
sbb
sbb
leave
es
lcall
dec
mov
scas
push
insl
ss
push
jne
xor
loop
dec
push
insl
cmp
in
pop
and
aaa
mov
lock
xor
jp
dec
push
jg
scas
xchg
push
frndint
push
aam
fildll
pop
hlt
daa
jl
shll
xor
push
lock
aas
inc
pusha
mov
mov
sahf
xor
mov
add
mov
cmp
sub
and
adc
aas
inc
imul
mov
mov
clc
sub
inc
into
insb
cltd
xor
mov
imul
mov
divb
or
mov
decb
cmp
mov
lret
lcall
and
mov
aam
sbb
push
subb
hlt
xlat
and
in
or
or
xor
add
mov
mov
lock
mov
js
push
cwtl
mov
repz
lock
lock
pop
fs
das
push
cltd
stos
push
jecxz
jecxz
mov
adc
or
push
push
xor
adc
add
sbb
xchg
cltd
add
ret
es
inc
push
cmp
jmp
mov
mull
adc
pusha
sub
jno
add
pop
vmwrite
cwtl
outsb
icebp
stos
fwait
mov
dec
stc
push
push
mov
loop
testb
mov
xchg
faddl
and
dec
jo
ret
xchg
movsb
fimull
testb
data16
imul
adc
add
popa
loope
aas
leave
xchg
jbe
loop
mov
cmpps
xchg
and
fstpl
insl
add
dec
xchg
popf
lods
es
push
fwait
dec
adc
add
loope
mov
std
orl
clc
int3
shll
sub
lods
mov
add
or
lods
add
cmp
das
mov
dec
or
lret
lcall
mov
ficomps
dec
push
ficoms
adc
movsl
aaa
xchg
or
jge
sbb
lea
les
lahf
addr16
add
dec
xor
jbe
xor
cwtl
enter
and
pop
push
pushf
xchg
mov
push
jno
in
fsubs
roll
xlat
pop
pop
sarl
pusha
test
push
jge
andl
cs
or
xchg
xor
inc
loop
nop
mov
xor
inc
add
adc
and
xchg
or
xchg
fildl
enter
add
inc
fcomip
loopne
rcrb
stos
adcb
mov
xor
lods
ds
cmc
ja
pushf
mov
jbe,pt
div
ret
ss
and
pop
jnp
and
mov
push
fadds
lret
cmp
pop
stos
clc
dec
mov
sbb
jno
push
xchg
push
adc
xchg
add
or
popf
mov
inc
push
ffree
xchg
in
pop
andnps
cld
sbb
dec
rcrb
jne
sbb
add
push
jmp
adcb
shrb
fisubl
fs
dec
cltd
shl
sahf
pop
pushf
and
outsl
lock
fiaddl
cltd
loop
adc
cmp
ja
adc
rorl
lret
or
sbbb
call
add
sarb
scas
lods
into
adc
aad
xor
cmc
sbb
jmp
jb
mov
movsb
add
stos
aas
movsb
mov
dec
and
aaa
lods
cmp
sub
mov
xlat
popf
arpl
mov
daa
mov
jge
enter
sbb
and
fsubr
dec
je
jae
xchg
pop
mov
or
rorl
mov
cmp
mov
insb
pop
sti
xor
cwtl
das
jl
or
mov
addr16
pop
cmp
daa
jne
jae
mov
dec
xor
push
hlt
mov
adc
lahf
bound
jae
sbb
inc
add
mov
or
push
mov
fstl
bound
and
incb
int
pop
das
dec
inc
add
cmpsb
filds
mov
fisubl
cmc
pushf
rolb
sbb
cmp
xor
sbb
mov
pop
xchg
push
sub
xor
jg
jae
nop
or
and
repnz
lea
insb
and
sbb
mov
pop
std
test
adc
ret
daa
dec
psllw
cli
sbb
lods
mov
loopne
adc
insl
stos
push
das
test
call
mov
xor
stos
mov
inc
lcall
sbb
cld
pusha
in
xchg
int
test
sbb
sti
xchg
add
mov
ljmp
int3
sub
cmp
mov
dec
rolb
sbb
js
sbb
mov
sub
rcrl
mov
sub
push
adc
aas
pop
adc
outsl
test
inc
adcl
xchg
leave
aas
loop
add
cmc
fdivrp
pop
sbb
imul
xchg
dec
and
sbb
int
sarb
fs
jecxz
loopne
xorl
aad
add
cmp
sbb
mov
mov
fldl2e
mov
mov
xor
test
mov
rcl
pop
mov
out
push
insl
cmp
inc
pushf
cmp
and
cmp
in
cmpsl
mov
sbb
xor
push
cmp
inc
in
jp
sub
or
bound
outsb
sbb
mov
scas
insb
not
sbb
pusha
sub
jl
nopl
fidivs
shrl
or
stos
mov
xor
adc
mov
sarb
aam
xor
repnz
clc
mov
or
pop
add
std
imul
dec
and
dec
out
xor
sub
out
out
mov
jmp
sub
or
adc
cmpsl
mov
mov
pop
in
mov
dec
out
mov
out
mov
inc
lcall
ljmp
sbb
mov
pop
xchg
sbb
stos
mov
dec
push
sub
mov
stc
mov
es
cmp
outsl
int3
inc
mov
pop
push
cmp
cmpsb
daa
xchg
cmp
dec
jg
jmp
rcr
rol
je
decl
adc
mov
mov
cmp
mov
cmp
inc
sbbl
popa
push
add
xchg
addr16
and
mov
xor
inc
sbb
xor
enter
clc
movsb
cwtl
and
jne
and
imul
mov
dec
push
and
test
push
lahf
jno
inc
lock
shlb
cmp
aad
insl
pusha
cmovge
inc
insl
xlat
push
dec
stos
push
pop
pusha
xchg
mov
dec
sub
pop
jmp
movsl
sbb
xchg
or
insl
mov
push
inc
jmp
fmuls
pop
xchg
and
sub
bound
cltd
lods
push
add
adc
jle
movsb
mov
dec
or
mov
cmpsl
hlt
popf
push
icebp
sbb
mov
add
ret
ss
and
adc
jmp
mov
adc
fisubs
mov
xchg
imul
ja
dec
add
inc
in
sti
jmp
addb
lahf
imul
lcall
cwtl
or
mov
inc
mov
lods
adc
push
xor
jge
lds
jg
or
fsubp
loop
pop
mov
push
lods
mov
dec
sahf
inc
rclb
xchg
add
cmpsb
inc
mov
inc
xchg
out
jg
cmp
pop
jecxz
or
push
dec
cli
pop
shrb
sub
mov
jno
dec
adc
in
cmp
mov
fidivl
xor
jns
dec
iret
enter
clc
gs
xchg
inc
movsb
fs
movl
cmp
loope
add
stos
pop
lds
es
push
pop
jne
insb
bound
dec
pusha
mov
xor
xor
std
xchg
rclb
push
add
shll
out
aad
push
adc
cmp
in
push
lcall
mov
ret
and
xor
dec
ficoml
subl
or
cmp
add
mov
xchg
push
pop
lods
push
mov
inc
pop
gs
es
jp
pop
xchg
mov
sbb
in
inc
push
push
jg
jae
ret
mov
outsb
stc
jl
lret
aad
cld
xor
inc
mov
fistpl
sar
loop
cmp
push
mov
mov
enter
cmp
pop
std
adc
test
pop
repnz
hlt
inc
add
les
arpl
push
jo
inc
or
mov
sar
pop
in
out
outsb
add
scas
sbb
adc
test
std
movsb
and
nop
repnz
xor
sub
movsl
scas
add
mov
push
inc
or
int3
stos
xlat
cmp
movsl
repz
pop
mov
mov
dec
orb
mov
add
add
or
jecxz
shlb
addl
or
icebp
xor
sub
push
and
xchg
into
movsb
fdivrs
mov
mov
pop
adc
mov
ret
xchg
inc
adcl
imul
je
mov
je
dec
es
lahf
adc
lods
inc
add
enter
aad
jp
rclb
push
sbb
push
jmp
mov
pop
cli
adc
lret
fistps
cmc
sbb
inc
adc
movsb
into
mov
lock
ret
imul
flds
fsubrp
repnz
in
fs
loope
cli
add
loope
test
adc
loop
sbb
js
mov
test
dec
adc
inc
in
jle
mov
xchg
fs
xchg
sahf
push
xor
ss
es
jne
ds
cmpsb
inc
out
in
sbb
jp
mov
xor
jnp
fisubl
inc
aam
int
fcompl
jp
jp
fwait
add
pop
cwtl
mov
push
cmp
ljmp
pusha
mov
arpl
sbb
cmpsl
or
lock
sti
loopne
jl
cmp
adc
in
adc
addr16
mov
cmp
popf
push
cmc
mov
xchg
ja
add
cmp
mov
xor
and
lret
mov
dec
xchg
in
sub
add
lcall
xchg
imul
jne
pop
xchg
fmul
push
add
mov
rclb
xor
jle
push
sahf
mov
cli
jnp
mov
add
inc
roll
cmp
fs
mov
cmpsl
test
xchg
ficoml
dec
test
xchg
in
mov
cmp
pushf
out
push
or
dec
dec
adc
xchg
js
cmp
out
out
mov
ss
push
cld
aaa
shll
fwait
mov
pusha
add
addl
dec
jl
roll
orb
jo
jne
push
imul
jno
xchg
xchg
mov
test
sahf
inc
cmpsl
or
and
pop
add
cmp
jp
fbstp
dec
xor
out
rcll
mov
ret
mov
xorl
inc
xlat
shll
or
shll
pop
mov
inc
jmp
test
popf
sarl
adc
enter
inc
fwait
notb
ficoms
lds
mov
lea
test
adc
scas
add
adc
xchg
xlat
dec
mov
pop
pop
sbbb
mov
adc
and
fidivl
cmpsb
mov
xchg
insb
loop
add
shl
dec
popf
push
xor
out
xor
mov
scas
sbb
xor
mov
sbb
jno
and
push
dec
or
sti
and
shl
xchg
mov
sahf
insl
ljmp
xor
sbb
and
jo
jno
imul
fs
xchg
adc
xchg
pop
jmp
fildl
mov
adc
cmpsl
lds
xlat
fsubrl
xor
inc
daa
jmp
aam
jmp
lds
adc
xlat
cbtw
stos
sub
popf
mov
nop
cli
push
push
push
push
inc
adc
xor
jo
dec
xor
mov
inc
mov
xchg
pop
stc
les
add
inc
ja
test
pop
sub
incb
mov
stos
shlb
ret
cmp
in
roll
xchg
and
lock
test
ret
cltd
out
test
movsl
push
cmp
push
rol
scas
jp
adc
inc
sbb
adc
xchg
les
stos
inc
sub
push
sub
cwtl
mov
xor
les
xchg
mov
jno
out
cmp
pop
sbb
leave
popa
xchg
cld
test
fwait
mov
adc
sbbb
sub
xor
loope
xor
rorb
test
cld
mov
cwtl
sbbl
and
pop
sbb
cmp
adc
jg
or
out
mov
and
jmp
push
push
sub
xchg
lds
push
sub
out
push
aad
int
pop
push
pop
test
enter
push
js
push
mov
or
lret
mov
xchg
mov
lahf
lea
push
push
push
and
ljmp
adc
mov
pop
clc
clc
mov
and
lea
lea
push
ds
inc
and
cmc
movsb
lcall
imul
xor
adc
loope
fsubrs
or
subb
enter
sub
dec
mov
orb
pop
jg
test
adcl
data16
jb
stos
jg
xchg
jbe
sbb
cmpsl
std
push
add
rorl
cs
js
sar
pop
int
nop
outsb
ret
jl
lcall
lods
push
dec
push
leave
mov
mov
mov
mov
das
jle
aam
or
pop
sti
push
push
lock
ljmp
mov
xchg
push
dec
xor
xorb
or
shll
in
mov
mov
shrl
mov
inc
jmp
jecxz
cltd
sbb
mov
data16
or
push
inc
out
mov
in
pop
pop
les
xchg
sar
lds
dec
stos
lods
ss
or
jo
mov
mov
iret
mov
in
inc
pop
inc
or
ljmp
jne
add
pushf
cmp
iret
outsb
clc
sub
mul
cmp
inc
cmp
sub
lahf
imul
scas
aas
insb
inc
shlb
incl
cmp
lcall
sar
mov
fiaddl
mov
push
jle
sbb
push
or
pop
ds
xor
xor
mov
push
xor
out
test
cmpl
sub
adc
subb
es
popa
sub
push
sti
xchg
rcrl
andl
xchg
pop
push
mov
inc
clc
xchg
and
in
inc
jmp
loopne
cli
xchg
test
push
out
mov
lods
hlt
inc
push
and
inc
iret
or
sub
mov
add
sub
lret
addb
mov
mov
outsb
lret
js
and
repz
shrb
stos
dec
xor
add
cmp
enter
pusha
ljmp
rorl
inc
or
int
cmp
lret
ja
in
and
jmp
sbb
cmp
sbb
mov
jecxz
sbbl
jbe
xor
adc
push
js
dec
lcall
fsubr
jns
cmpsb
adc
not
xchg
sub
inc
jns
pop
call
dec
rcr
fwait
jb
cltd
dec
insl
sahf
sbb
pushf
adc
fimuls
cli
pop
dec
add
jle
push
xchg
jnp
jb
fimull
pusha
stc
imul
test
lods
adc
orb
mov
cmp
inc
cmp
adc
push
xor
mull
and
hlt
cmpsl
les
stos
cli
mov
mov
jl
out
in
in
xchg
adc
push
jecxz
jo
xorl
jp
jno
bsf
jp
or
orb
orb
cld
lret
cmp
dec
loope
test
lret
shrb
movsb
pop
loop
or
add
hlt
mov
jmp
sub
adc
cmpl
scas
out
les
loopne
div
xchg
js
addr16
orb
ss
ljmp
popf
jge
cmpsl
mov
and
pop
std
test
rclb
inc
outsb
mov
fcomps
add
cmpsb
push
dec
jne
test
and
push
pop
cmp
mov
data16
jecxz
xchg
xchg
push
xchg
add
fdivrl
add
loopne
subb
xlat
mov
shufps
sub
sbb
push
lods
jp
test
psrad
fbld
call
cmc
pop
xor
insb
mov
adc
ljmp
xchg
outsb
push
push
or
movsb
out
jb
jbe
aad
idivb
fdivr
es
call
push
sti
aaa
jmp
xchg
movsb
dec
mov
inc
add
mov
inc
dec
pop
add
ret
inc
push
and
push
pushf
and
ljmp
fnsave
mov
filds
lods
jb
shlb
test
xor
mov
into
jno
int
in
mov
fnstsw
sti
xchg
add
jl
mov
int3
or
dec
test
sbb
jbe
jl
jo
les
xor
or
mov
inc
or
add
xor
dec
cld
xchg
je
sbb
ja
jo
imul
imull
mov
sbb
pushf
subb
jge
or
and
test
xchg
fdivrs
mov
or
push
and
cmp
jle
mov
leave
jg
iret
fs
popa
scas
adc
scas
icebp
in
push
fstp
sbb
ja
hlt
idivb
lds
sarl
jg
adc
push
jl
mov
mov
aam
push
mov
test
sbb
lcall
loop
ss
in
fs
or
test
xchg
cltd
jbe
mov
xor
xchg
stos
arpl
mov
xchg
mov
pop
popa
and
mov
stc
mov
push
and
mov
fs
out
inc
inc
xchg
push
cli
insb
les
inc
xor
aas
cmp
lahf
es
adc
sub
and
pusha
mov
adc
and
and
loop
cld
popf
adc
test
lods
cmp
in
loopne
std
adc
push
leave
mov
dec
lock
add
xchg
imul
punpckhdq
jp
or
cltd
xchg
loop
das
pushf
push
or
jp
mov
xor
dec
and
shlb
fiadds
decb
hlt
shll
iret
inc
xor
lcall
and
sbb
sub
jecxz
push
mov
sti
inc
xchg
pop
sub
mov
les
scas
subl
dec
call
or
and
or
or
xchg
xchg
xor
adc
aaa
sub
add
jg
mov
adc
hlt
inc
push
xor
in
sarb
mov
jmp
rorl
pop
jo
incb
addr16
stos
fcmovnbe
pop
inc
jo
test
arpl
push
int3
scas
outsl
mov
inc
aam
adc
add
sbb
and
sarl
or
mov
adc
mov
pop
cmp
loopne
pop
sbb
cmove
lret
insb
iret
test
loopne
inc
xor
sub
or
sub
addl
or
or
push
and
mov
adc
dec
in
aam
mov
cmc
xchg
cmp
test
xchg
sahf
icebp
mov
and
aaa
lods
mov
jne
aas
push
pop
ror
movb
dec
xor
arpl
mov
add
xchg
out
jmp
aaa
lea
add
testb
adc
pop
push
cwtl
sbb
add
mov
dec
mov
add
cmp
xor
add
scas
push
ja
sub
xor
push
push
xchg
decb
or
push
inc
pushf
push
je
add
push
inc
adc
inc
jne
dec
cmp
movsl
or
icebp
sbb
outsb
test
aad
xor
insb
ret
and
push
xchg
out
rolb
std
ljmp
in
mov
adc
add
decl
jne
scas
mov
leave
ret
sbb
loopne
xor
push
aaa
mov
hlt
mov
dec
xorl
jne
jae
push
cmc
xchg
mov
xchg
or
cs
popa
jo
rorl
and
pushf
or
inc
ja
leave
inc
dec
xchg
jno
sub
jb
rorl
jecxz
jmp
sub
push
mov
sub
sub
pop
or
adc
addl
mov
pop
pop
pushf
and
and
es
subl
pop
stc
scas
into
pop
mov
ret
push
add
in
call
pop
bound
sbb
add
xor
test
arpl
dec
cld
int
sbb
push
js
add
scas
dec
movsl
push
lea
shlb
cs
inc
pop
push
outsb
xchg
pop
ret
stos
das
dec
push
movsb
jmp
ret
dec
add
mov
inc
inc
lea
xchg
rorl
testl
lret
mov
xchg
inc
fs
dec
xor
pop
sbb
popa
shr
stos
sub
aas
daa
rcrb
mov
mov
add
pushf
jp
adc
dec
js
aaa
mov
sub
inc
jno
shll
mov
outsb
mov
cmpsl
fistps
iret
adc
je
push
push
mov
leave
xchg
pop
lods
ret
mov
popf
test
mov
in
out
fists
inc
sub
pop
add
cmpsb
mov
in
lret
fsubrl
ja
aas
add
sbb
loope
stc
rep
cwtl
es
pushf
push
push
push
cmp
dec
addl
das
jo
pop
fwait
mov
dec
test
or
and
pusha
mov
cmp
adc
cld
cld
filds
sbb
sbb
movsb
dec
push
ds
or
int
push
loop
and
cld
loope
orb
mov
bound
xchg
pop
int3
mov
inc
jecxz
add
fiadds
add
mov
sub
fiaddl
mov
mov
nop
js
add
sub
sti
jno
cmp
push
pop
inc
mov
cmpsb
push
ret
xor
sub
frndint
addr16
out
and
mov
cmc
frstor
pusha
jae
loope
imulb
xor
pop
scas
xchg
adc
cmp
loope
jge
jae
stc
es
or
jmp
pusha
sub
push
bound
xchg
jmp
push
cmpsl
inc
lods
adc
cmp
dec
jecxz
int
andl
repz
inc
adc
xchg
mov
inc
addr16
dec
lods
pop
jo
mov
mov
and
cmp
mov
jmp
mov
faddl
jne
inc
ret
cs
fcmovb
mov
imul
sbb
inc
psubusb
cltd
add
insl
mov
mov
cli
mov
xorl
cli
jmp
mov
adcl
xor
es
xorb
cwtl
aam
cmpsb
in
add
mull
add
ret
adc
sbb
data16
mov
into
iret
sbb
sub
das
xchg
adcl
pusha
aaa
mov
mov
mov
leave
xorl
dec
xor
pop
test
sarb
jns
add
inc
mov
mov
mov
ret
xor
idivb
cmp
pusha
and
cmp
and
stc
cmpsb
mov
sub
ds
and
dec
add
mov
push
into
xor
das
xchg
push
icebp
push
jne
shll
xor
push
andb
lods
xchg
test
test
jecxz
jno
rclb
jmp
dec
cmp
lds
push
or
jl
mov
dec
stc
jge
sub
mov
xor
mov
imul
adc
and
push
xor
or
or
stos
addb
dec
mov
neg
inc
shrl
jns
pop
push
divb
popa
jg
jnp
xor
sahf
inc
rorl
ficoml
add
inc
shl
and
mov
jp
mov
ret
cmp
jno
ljmp
sbb
mov
cmp
mov
sbb
xor
pushf
loop
xchg
jg
jb
cltd
decb
ds
int
mov
or
scas
dec
insb
lcall
add
sub
ja
lret
xor
xchg
push
inc
push
ja
inc
in
mov
push
adc
loop
and
inc
pop
cmp
push
daa
call
and
xchg
ret
imul
icebp
push
fstl
pop
test
or
inc
push
mov
pushf
inc
decl
insl
dec
add
nop
or
sub
add
movsl
inc
aaa
clc
inc
fistps
or
aas
cmp
sahf
shlb
mov
mov
in
hlt
push
xchg
aad
cmc
jnp
xor
and
cmp
xchg
gs
lret
jbe
xor
xor
inc
test
clc
cs
add
pop
adc
sbb
lea
repz
cltd
mov
jns
in
aam
add
movsb
inc
pop
lcall
stos
imul
fstps
scas
sahf
addr16
mov
cmp
mov
inc
sbb
sub
icebp
pusha
mov
ret
aam
and
negb
and
out
shll
sub
leave
in
out
jnp
mov
add
enter
faddp
mov
and
mov
shll
rolb
xchg
test
out
dec
add
ficomps
nop
outsl
pop
pop
mov
call
xchg
push
mov
imul
pop
stos
mov
rolb
sahf
xor
push
pushf
mov
pop
push
test
loopne
loop
xchg
sbb
inc
add
enter
cwtl
push
inc
popa
adc
xor
stos
iret
xchg
mov
pusha
imul
add
jecxz
lahf
dec
fisubl
xor
sub
mov
xlat
inc
jge
lds
loop
outsb
mov
xor
inc
pop
insb
or
aas
add
push
push
movsl
mov
sub
arpl
xor
jb
xor
es
fsubs
stos
shlb
lods
shrl
push
xchg
out
dec
cmp
and
and
mov
and
push
loopne
push
js
add
xor
dec
push
inc
sbb
ret
inc
push
inc
jge
lods
jb
add
add
adc
mov
inc
mov
ret
jne
cmp
sub
adc
adc
adc
pop
daa
push
lret
lods
mov
mov
xor
inc
test
cmpb
push
adcb
dec
push
push
imul
inc
adc
or
cs
or
jl
dec
pusha
mov
mov
cmpb
pop
sub
ret
fsubrl
das
cs
mov
in
cmp
pop
enter
pop
sahf
and
add
adc
mov
or
rorb
aaa
sbb
cmp
sti
inc
xchg
add
xor
adc
fsts
jo
out
push
pop
cli
cld
and
push
xchg
outsb
pop
in
fiadds
pop
nop
cld
aas
ljmp
jae
adc
movsl
dec
mov
add
push
pop
pop
sub
shrb
movsl
mov
pop
lock
pop
sub
cmp
mov
mov
icebp
pop
mov
mov
inc
mov
inc
jge
and
daa
mov
mov
add
cwtl
sbb
xor
cmp
push
xor
dec
xor
add
ljmp
nop
cmpb
pop
imul
fld
dec
dec
in
gs
adc
jle
test
lock
test
pop
aaa
lods
das
lock
push
and
fdivs
fs
andl
xchg
or
loopne
xor
rcll
mov
js
cs
pushf
and
add
lcall
mov
xor
ljmp
std
int3
cmp
sahf
cmp
cld
das
pushf
pop
andl
adc
pusha
push
addr16
push
sbb
sarl
push
shrl
dec
fcompl
in
pop
test
adc
jp
jb
cld
xchg
cmp
jl
ds
popl
sbb
in
stos
hlt
fwait
pop
add
adc
in
xor
mov
inc
test
and
jp
je
jo
adc
sbb
sahf
test
xchg
aas
and
adc
push
stos
jbe
pop
lcall
add
dec
sbb
cmp
jb
roll
or
xchg
or
adc
xchg
mov
mov
mov
scas
jle
in
js
sub
and
cmp
cmp
push
les
mov
xlat
hlt
push
inc
out
lret
test
mov
je
jo
inc
cltd
repz
xor
xchg
xor
xchg
jbe
dec
fstps
mov
les
mov
rclb
andb
call
and
sar
pop
addr16
test
pop
inc
push
pop
inc
adc
push
orl
popa
or
call
js
and
fldl
add
les
add
mov
jge
sub
stos
repnz
add
sub
jmp
inc
jg
mov
movsb
fcoml
adc
cmc
or
sbb
push
aas
cwtl
xchg
shl
mov
mov
push
sbb
push
pop
fdivl
into
sub
stc
inc
mov
sub
test
or
cmpsb
repnz
bound
add
add
or
push
imul
dec
inc
cmp
shlb
or
dec
add
hlt
lods
adc
lcall
int
hlt
cltd
cmp
add
jle
jb
dec
call
or
xor
mov
mov
or
adc
jae
lcall
outsb
sbb
enter
stos
aaa
dec
jmp
fisubrs
aam
jo
jge
or
into
sbb
es
xor
or
lahf
add
xchg
cs
ficomps
cs
dec
cwtl
stos
lea
loope
cmp
mov
push
andl
xor
enter
imul
xor
jecxz
jnp
and
test
outsb
ja
repz
out
pop
push
arpl
das
cmp
mov
pusha
pop
fisubs
sbb
mov
cmp
lret
sbb
fnsave
and
fs
mov
push
nop
sub
cld
inc
loop
fsubrs
push
cmp
inc
and
adc
es
mov
test
pop
mov
mov
jp
mov
inc
mov
loopne
xchg
jne
and
lods
lret
in
call
mov
out
fwait
ss
jnp
mov
xchg
lods
adc
int
lods
xlat
push
xlat
jmp
add
roll
aad
and
mov
sub
sbbl
mov
fadd
pop
mov
je
xor
into
xchg
in
push
add
adc
gs
lret
push
sbb
add
pop
push
inc
and
and
addr16
and
je
scas
sub
neg
push
push
lock
adc
inc
ror
fcmovnb
mov
insb
push
stos
push
fisubl
insb
movsb
mov
sub
inc
sahf
mov
les
push
je
push
test
cmp
xchg
mov
inc
imul
lret
xchg
je
xchg
and
sbbb
push
rcll
testl
aam
push
push
icebp
dec
push
sub
add
pop
lcall
jmp
in
dec
and
xchg
in
adc
shrl
inc
inc
sbb
mov
xlat
mov
pop
fmull
xlat
cmp
stos
jnp
notb
dec
data16
pusha
in
movsb
sbb
movsl
pop
jle
clc
pinsrw
pop
cli
jecxz
adc
fadds
pushf
xor
adc
lret
adc
pop
pop
mov
enter
mov
rclb
das
lock
js
xor
add
mov
push
push
ficoml
faddp
scas
cmpb
add
lods
in
or
adc
sahf
shll
and
dec
inc
xchg
scas
in
popa
rorl
add
scas
stos
sbb
or
mov
xchg
cltd
lcall
hlt
mov
push
add
push
mov
aam
popa
jae
mov
xchg
xchg
mov
cmp
jecxz
lcall
pop
sub
jnp
inc
test
xor
mov
inc
adc
adc
popf
lock
std
shlb
mov
mov
adc
ss
xor
mov
xchg
stos
mov
in
repz
cmp
xor
add
cmp
fwait
stc
rdmsr
ds
das
insl
mov
sbb
jo
pop
pminsw
sbb
cmpsl
mov
push
popa
mov
movups
dec
fnsave
insl
pushf
sbb
lock
mov
adc
pop
cmp
xor
into
idiv
into
cmp
cmpsb
test
push
hlt
stc
lahf
aam
ss
aas
jge
and
pusha
fiaddl
out
addr16
mov
out
add
adc
pop
xchg
or
push
mov
ja
in
sub
cmp
loop
push
dec
sbb
inc
pop
movsl
xor
pop
push
pop
or
imul
mov
pop
adc
mov
sbb
js
call
mov
fs
xchg
mov
mov
push
pushf
ss
pop
mov
sbb
xlat
mov
inc
orl
jg
mov
mov
mov
sub
inc
scas
shl
rcrb
and
xchg
or
mov
cwtl
and
sbb
inc
out
jne
pop
test
add
mov
push
push
push
push
aas
cmc
loop
pop
in
jecxz
je
push
clc
std
sti
scas
dec
xor
jne
loopne
out
pusha
sub
into
call
ja
jno
outsb
dec
pop
lcall
fcomps
call
ss
add
sbb
shlb
les
ds
decb
imul
test
outsl
roll
inc
or
mov
das
xor
push
aas
cmp
jmp
cmp
xor
xor
inc
rcl
lods
sub
adc
ret
pop
xor
loope
repz
or
out
xor
decl
ficompl
or
push
push
pop
push
xchg
out
mov
dec
jge
mov
jp
push
rcrl
jl
push
jns
sahf
mov
lods
mov
incb
clc
inc
dec
add
rclb
fisubrl
sub
mov
aam
inc
xchg
sti
cmp
call
rclb
jno
jge
imul
ja
xor
jg
cmp
xor
repnz
xchg
push
fidivrl
adc
add
cmpsl
push
dec
das
lds
loopne
and
inc
xor
in
fdivs
clc
add
add
ret
and
push
out
scas
adc
xchg
pop
xchg
xorb
fwait
push
dec
scas
clc
mov
add
popf
adc
and
pop
ja
sub
add
add
filds
sub
mov
lahf
xor
cmp
xor
cmpsb
in
or
cltd
cmp
test
mov
scas
lahf
xchg
push
xchg
std
dec
cmpsb
lahf
enter
lea
clc
out
in
or
scas
sub
imul
and
mov
dec
mov
loope
movsl
call
pop
xor
xor
fimuls
mov
dec
andb
inc
aad
add
scas
mov
negb
ljmp
xchg
test
jge
in
and
push
push
lds
aad
mov
sbb
push
mov
or
mov
push
das
jbe
pop
adc
das
rcrb
mov
mov
add
cld
inc
mov
jge
sbb
loope
jno
mov
inc
or
mov
add
push
test
popa
jmp
push
push
pop
lods
test
pop
shl
xchg
nop
aam
xor
jnp
cmp
mov
enter
clc
popa
fwait
cmpsl
es
cmp
sub
or
loop
jecxz
mov
loopne
outsb
cmp
lret
cmp
mov
cmp
addr16
pop
daa
call
sbb
dec
add
pop
cltd
and
stc
add
lods
add
pop
stc
mov
sub
pop
xor
mov
loopne
sub
jno
mov
inc
aas
out
pop
sub
cli
mov
dec
add
fsubl
xor
lret
cmp
hlt
mov
xchg
add
mov
fsubr
inc
push
sbb
add
or
mov
leave
bound
mov
inc
push
inc
sub
jb
or
sbb
xchg
in
push
fstpt
je
int3
movb
cmpsb
sub
cwtl
clc
pusha
jnp
fisubl
xor
push
lret
sbbb
push
add
push
jl
adc
imul
lds
roll
fldcw
mull
adc
mov
cltd
pop
mov
out
test
mov
sbb
dec
subb
jle
shll
fldcw
int
cs
arpl
daa
lea
cmp
lcall
xor
gs
xor
lods
inc
jge
mov
dec
test
jle
dec
sbb
jne
pop
add
adc
lcall
les
movsb
push
ret
mov
mov
push
in
pop
inc
sbb
test
mov
out
es
lcall
sbb
lea
lcall
cmpsl
adc
hlt
lds
lock
xlat
or
jmp
and
push
nop
leave
adc
popa
xlat
and
scas
fbld
dec
pop
hlt
push
inc
mov
adc
adc
inc
decb
adcl
sub
sbb
faddl
ljmp
lods
sbb
inc
adc
sub
add
sti
jle
pop
insl
sbb
sub
push
inc
incl
adc
xchg
test
mov
sbb
add
cld
mov
insb
clc
xor
mov
rolb
lods
adc
jl
loop
add
mov
clc
loop
bound
dec
in
and
dec
sbbb
jle
bound
xor
outsb
xor
add
in
sub
adc
xchg
lock
pop
adc
xor
mov
adcb
mov
add
sub
jle
cmp
sar
ds
dec
sbbb
sarl
cltd
loope
mov
shlb
add
cmp
jl
int
adc
out
lds
dec
iret
js
fwait
outsl
scas
stos
std
stos
mov
or
pusha
push
cwtl
cmp
clc
sbb
mov
stc
hlt
mov
jb
add
shlb
push
cli
and
lock
xor
nop
cli
mov
xchg
fwait
test
jnp
in
popa
test
icebp
cmp
pop
jns,pn
and
dec
into
cmp
movsb
ljmp
scas
aaa
add
leave
ret
inc
test
jg
inc
cmp
push
test
mov
lods
je
in
sub
ljmp
lcall
mov
jge
dec
or
pop
call
or
mov
xor
pusha
cld
or
and
mov
enter
fadds
or
sub
push
sbb
cmpsb
push
add
pop
ja
rcrb
sbb
push
jmp
bound
mov
fistps
mov
insb
sbb
insl
popa
mov
icebp
ljmp
sub
cmp
psubusb
inc
dec
das
mov
lea
or
shrb
push
mov
xchg
repz
pop
adc
ss
fbstp
incl
in
popw
sub
sahf
cli
xchg
ljmp
add
xor
pop
icebp
sub
fbstp
leave
add
testl
sar
xor
ds
out
or
stos
in
movsb
daa
popw
ds
add
test
mov
push
pusha
add
jp
pusha
cmc
testb
repz
cwtl
rcr
inc
ficompl
lcall
call
sub
jmp
mov
xchg
das
lahf
rclb
dec
add
je
or
jge
cli
jg
pop
cmp
and
add
sarl
scas
jno
roll
xchg
lods
push
mov
aas
jge
ret
xor
push
push
pusha
xor
add
mov
ljmp
pop
or
movb
push
jmp
pop
insl
mov
add
xchg
add
mov
aam
sbb
pop
inc
imul
push
ret
in
lcall
cmpsb
push
hlt
cwtl
hlt
cmpsl
enter
mov
dec
adc
rolb
xor
lods
dec
lds
es
xchg
movsl
loope
or
shll
cmpb
mov
xchg
jl
je
or
add
rclb
popf
lret
popl
add
pop
sbb
cmp
pop
inc
imul
or
xchg
lods
cmp
rolb
or
sbb
nop
cmpsb
xor
aad
cmp
adc
xor
movsl
out
fs
pushf
repnz
jbe
bound
fdivrl
lcall
ss
or
dec
ret
pop
js
xchg
cld
xor
scas
shl
rcrb
and
mov
cmp
jbe
and
loopne
jnp
jo
fistl
xchg
mov
lcall
bound
insl
sahf
or
jo
daa
inc
decl
inc
or
add
or
push
or
dec
ljmp
in
push
lds
mov
or
push
dec
sub
xchg
cs
inc
imul
clc
imul
add
imul
fisubl
add
bound
push
or
jl
int3
ljmp
inc
dec
leave
gs
repnz
fistpl
ret
or
xchg
or
dec
mov
cmpsl
popa
or
frstor
push
mov
je
cli
scas
test
xor
add
ss
jg
das
pusha
xor
add
les
js
mov
jmp
cmpl
jecxz
adc
adc
btr
jne
test
jno
loope
cmpsb
xchg
inc
enter
adc
or
mov
mov
push
jns
cmovnp
inc
or
push
jge
dec
push
aam
pop
push
sub
add
pop
adc
and
addl
mov
out
and
jno
inc
jno
mov
mov
outsl
dec
adc
subl
call
fwait
pop
sub
shlb
lea
inc
inc
mov
cmpsb
push
outsb
stc
shll
xchg
mov
stos
sahf
add
inc
push
js
push
inc
pop
lahf
add
sub
or
faddp
xor
cmp
cmpsb
mov
jo
cli
add
mov
push
dec
mov
pop
js
xor
pop
roll
dec
pop
or
loope
stos
ljmp
xchg
in
mov
stos
shlb
cmp
xchg
loope
add
xor
mov
imul
imul
sbb
dec
xlat
add
inc
ljmp
mov
adc
in
push
ret
cmpsb
xchg
jl
cmc
inc
cmp
push
pop
or
clc
sub
lea
mov
pop
push
nop
jp
es
int
mov
inc
mov
loop
xor
or
cmp
aas
cmpsl
sub
adc
lcall
and
pop
dec
push
hlt
add
cwtl
mov
mov
les
push
xchg
or
in
pop
mov
popf
inc
sub
fnstenv
adc
mov
inc
xor
xchg
pop
push
stos
xlat
cmp
pop
xchg
pop
rorb
sbb
out
lcall
cmp
xlat
loopne
mov
idiv
and
pop
mov
jle
and
inc
dec
add
and
sub
dec
xchg
fstl
xchg
pop
cmpb
mov
cld
jbe
call
sbb
add
mov
xor
adcl
inc
bound
xchg
loop
or
cmp
shrb
sbb
loopne
push
cmp
sub
loope
sbb
dec
push
je
rorb
push
mov
shrl
add
mov
mov
fwait
add
pop
test
pop
jbe
das
jb
fsubl
imul
sub
in
fistps
stos
pop
hlt
add
inc
push
pop
in
dec
fstps
int
xor
pop
jne
fistps
popf
test
and
and
ret
mov
or
sub
imul
pushl
mov
or
pop
cmpsl
js
mov
decb
inc
ds
dec
imul
lcall
test
sub
in
movsb
cmp
shrl
outsl
push
mov
fildll
call
jge
aas
pop
insb
mov
and
popa
xchg
mov
out
rcrl
jg
add
push
push
jo
in
sbb
inc
subl
movsl
dec
je
iret
and
xor
and
xor
inc
es
call
or
or
int
int
jl
xchg
ljmp
lods
imull
mov
mov
dec
inc
out
aad
std
mov
adcb
add
ljmp
or
cmp
xchg
das
cmc
dec
cmpsl
je
mov
cmpsl
repnz
outsb
and
push
jo
sub
jb
lods
in
xor
mov
mov
pushfw
or
test
and
daa
push
xor
lds
pop
xchg
clc
out
inc
subb
xor
cmp
sbb
mov
into
mov
and
daa
out
in
ja
repz
lock
pop
clc
jg
pop
dec
push
cmp
cmp
mov
in
dec
jmp
adc
idiv
movsbl
xor
cmpsb
mov
jle
sbb
jg
xchg
mov
jnp
gs
test
and
dec
or
add
jmp
in
or
xchg
sub
jl
aad
mov
pop
cmp
jmp
dec
lock
test
sbb
mov
or
or
test
jle
sub
fldl
fildll
inc
arpl
int3
jp
adc
and
or
cmpsb
jns
jl
jbe
decb
out
push
idiv
repnz
aas
aam
lahf
js
out
bound
cmp
push
xchg
pop
mov
mov
and
ljmp
push
shrb
mov
pop
mov
orb
shr
cmp
lock
jmp
sbb
xor
mov
lret
cwtl
mov
cmpsl
js
es
loop
out
popa
jae
add
sub
dec
add
cld
adc
jmp
adc
jae
mull
lret
or
rcr
jge
push
out
jne
lock
sbb
xlat
rol
arpl
jns
sub
fcmovbe
push
mov
push
or
mov
bound
cld
ficoms
movsl
fsubrs
mov
fs
aas
inc
lods
push
mov
rcrb
sbb
les
push
mov
lods
adc
popa
sti
inc
dec
cmp
popa
out
outsl
mov
icebp
fiaddl
test
push
sub
dec
or
xor
xchg
lods
mov
cli
inc
adc
int
je
icebp
sbb
in
ds
iret
imulb
jl
push
xor
and
or
cs
sbb
sbb
aaa
test
cld
rorb
and
pushf
inc
xor
or
hlt
cmp
pushf
cmp
out
add
dec
inc
fadds
aad
es
jae
out
push
test
fisttpll
dec
mov
int
jge
mov
add
jp
and
pushf
shlb
mov
mov
mov
mov
push
xchg
test
rorb
mov
stc
jge
jo
xchg
clc
jo
sub
nop
add
jl
in
pusha
adcb
sahf
sbb
xchg
jp
cmc
add
and
ret
inc
repz
jmp
imul
add
dec
cli
pop
roll
imul
clc
pushf
sbb
dec
imul
jne
mov
shll
pop
jbe
inc
mov
jns
imul
lods
fmul
and
xchg
or
nop
push
jecxz
sbb
dec
cwtl
mov
add
xor
mov
addr16
inc
jmp
sbb
xor
bound
sbb
fidivrl
xor
in
clc
enter
pop
dec
stos
push
pop
push
xchg
cmc
pop
aam
outsb
jecxz
mov
les
pop
mov
movl
pusha
and
inc
aaa
inc
or
cld
sarl
subb
test
and
inc
sub
sub
leave
xchg
push
mov
ljmp
dec
cld
aas
movsl
cmp
rorl
inc
gs
lock
lcall
stos
xchg
jbe
inc
adc
mov
xor
mov
ret
shll
aam
jne
mov
loop
push
inc
pop
insb
mov
mov
adc
aam
jo
add
mov
or
jo
fistl
sti
lods
gs
xlat
aad
dec
mov
outsb
subl
or
leave
xor
imul
imul
jl
test
adc
pop
lret
xchg
xchg
xchg
das
pusha
cmpsl
or
loop
hlt
inc
xor
lds
mov
or
xorb
in
movsl
cs
imul
sbb
and
scas
shll
push
add
pop
shrl
cwtl
out
stc
push
mov
cs
jns,pn
sbb
inc
out
sbb
pop
xchg
jb
sub
add
call
shl
mov
xchg
mov
push
and
lret
orl
or
in
pop
aam
and
add
pop
scas
cmovne
lahf
inc
es
ja
lret
push
out
jle
mov
or
lods
xchg
subl
or
aaa
and
fadds
mov
lcall
lcall
daa
mov
jg
test
inc
les
jne
mov
fmull
push
jb
pop
mov
fistps
push
mov
imul
sub
jbe
xorl
mov
adc
out
je
add
int3
mov
push
adc
hlt
cmp
inc
stos
adc
mov
dec
cli
cmpsb
loopne
fistpll
iret
add
pop
pop
mov
pop
inc
add
adc
loopne
iret
cmpsb
icebp
out
push
and
fs
mov
xchg
or
orb
push
jnp
push
add
jle
cmpsb
outsl
dec
pop
mov
in
jle
fcomip
hlt
inc
push
in
dec
add
mov
fldl
das
nop
pop
cmp
stos
pusha
jae
test
mov
jp
mov
pop
cmp
aad
movsb
xor
fwait
pushf
int3
xchg
out
lock
ficoml
mov
adcb
inc
cvtps2pi
sar
fwait
jns
inc
add
mov
mov
sbb
jmp
out
inc
jo
or
sub
mov
or
inc
sub
xor
xor
clc
test
fnsave
mov
mov
daa
lcall
mov
mov
imulb
movsb
les
pop
arpl
notb
jmp
adc
imul
rcll
addr16
mov
sub
pusha
inc
push
dec
sbb
mov
and
call
or
and
std
xlat
mov
pop
cmpb
or
lea
mov
push
push
or
fstpl
adc
cwtl
push
loopne
xor
out
xchg
pop
mov
mov
aaa
arpl
xlat
jl
mov
pop
mov
mov
cs
push
dec
mov
push
or
jbe
outsb
scas
push
in
add
sahf
mov
sub
jo
out
popa
addr16
pop
mov
push
xchg
loopne
dec
jo
arpl
push
cwtl
adc
inc
fbstp
fs
popl
lret
dec
or
pop
sbb
in
lods
mov
mov
int3
jp
xchg
test
sub
sbb
cwtl
jge
cmc
scas
or
ja
out
mov
adc
pop
adc
stos
add
mov
jl
ret
mov
in
mov
mov
add
arpl
movsl
mov
xchg
dec
or
jnp
int
jmp
xor
mov
aad
and
mov
add
add
dec
imul
dec
sti
mov
push
in
cltd
jnp
push
pop
jmp
xor
sub
clc
add
movsb
or
adc
movsb
inc
roll
jns
xor
xor
pop
enter
movsb
lea
inc
das
xchg
push
pop
xor
jmp
jmp
dec
cmpsb
xchg
cmc
push
xor
or
cmp
ret
incb
testb
adc
test
mov
mov
enter
out
jmp
cli
push
mov
add
mov
cmpsb
add
mov
data16
rcll
insb
test
adc
add
aas
repnz
insl
inc
xchg
xchg
ret
lea
rolb
add
das
stos
mov
and
outsb
hlt
adc
dec
mov
cmp
fwait
je
gs
pop
inc
fs
addr16
lcall
cmp
cwtl
sub
mov
and
jmp
sub
call
call
push
sbb
adc
inc
or
cmpsb
mov
xchg
out
adc
imul
cmpsb
adc
pusha
mov
xor
pop
outsb
lahf
addr16
sbb
test
insb
mov
mov
dec
ret
int
sub
lcall
mov
mov
mov
imul
pop
push
jae
daa
imul
stos
cld
push
out
lret
add
or
fs
incl
addb
insb
mov
or
lds
adc
adc
ja
cmc
fwait
decl
jecxz
pop
jge
or
sub
mov
clc
jg
les
xor
lods
mov
imul
mov
sub
add
out
pop
rcr
data16
daa
mov
jbe
pop
push
ja
aas
jns
lret
dec
pop
xor
push
lret
shll
mov
jno
jbe
rcl
mov
sub
aad
inc
mov
push
xchg
out
xchg
inc
dec
push
sbb
cmpsl
push
mov
rcll
sbb
mov
test
les
xor
sub
mov
loopne
and
inc
xor
lods
stos
pop
aas
daa
cmp
popf
xor
in
clc
pop
cli
jns
out
std
mov
pop
out
mov
xor
add
out
orl
mov
mov
cmp
push
sahf
fisttpl
loopne
sub
push
push
pop
sub
es
addr16
pop
stc
das
lret
lods
add
test
sbb
add
subl
call
sbb
iret
out
mov
orb
add
sub
ret
lcall
cld
cld
test
stc
jl
repz
out
test
push
andb
sub
adc
clc
clc
jnp
ror
aas
popf
adc
stos
test
mov
pop
clc
std
pop
mov
repz
stos
out
loope
test
xor
cmpb
testl
insb
xchg
adc
inc
sub
adc
fs
mov
push
decb
sub
adc
or
inc
dec
shrl
mov
je
insb
sub
cmp
outsl
out
mov
cmp
mov
add
clc
adc
shl
shrl
mov
jge
push
lahf
stos
pushl
rcrb
shlb
gs
ret
subl
lcall
fidivl
adc
and
sbbl
inc
rorb
rolb
leave
in
xchg
pusha
mov
call
dec
xchg
fsubl
mov
and
lret
xor
mov
das
sbb
push
aaa
lahf
jbe
inc
icebp
ljmp
bound
into
ret
stos
fidivl
stc
loop
sbb
mov
leave
outsl
aam
outsl
cmp
mov
mov
fdivrl
or
mov
cmc
setbe
dec
mov
adc
mov
adc
push
lock
push
xchg
cmp
cmp
roll
sbb
roll
xor
cmp
dec
jg
mov
jne
add
cltd
lcall
and
sub
imull
clc
pop
sbb
and
lret
nop
rcr
mov
jnp
and
faddp
in
dec
push
mov
dec
iret
fmuls
test
sbb
int
hlt
cmpsb
int
jbe
sub
das
mov
adc
pop
dec
and
adc
loop
add
pop
xor
push
clc
cmc
fists
pop
pop
jbe
stc
jecxz
stos
ror
loop
fmull
push
pop
ret
std
mov
pop
inc
aad
push
mov
add
push
cmp
int3
lods
add
leave
iret
enter
sbbb
push
mov
dec
mov
rolb
lods
mov
and
clc
sub
enter
mov
dec
xchg
icebp
push
aam
shlb
sbb
inc
repz
fwait
push
adc
adc
adc
jg
aam
and
push
lock
add
ffreep
mov
sqrtps
scas
fs
xor
add
fs
cmp
mov
sarl
shl
into
daa
add
pop
enter
dec
clc
xor
dec
movsl
add
cwtl
cwtl
sbb
test
push
and
inc
rcr
pop
push
jmp
push
or
inc
mov
cmpsb
mov
cli
jg
clc
add
popa
push
addr16
or
dec
repz
mov
adc
movsb
lods
outsb
testl
mov
cmp
test
cs
ja
frstor
jge
jecxz
sbb
sbb
dec
clc
dec
hlt
inc
cmp
lds
test
adc
ret
inc
inc
lock
add
inc
inc
test
mov
subb
test
add
lock
mov
push
icebp
or
sti
andb
and
lea
xlat
mov
sbb
daa
test
sahf
cmp
pop
xor
and
out
xchg
cmp
fnsave
mov
bound
mov
inc
mov
mov
jg
aas
hlt
push
pop
dec
loop
test
fwait
test
flds
jg
aam
adc
dec
loope
push
jmp
out
orl
mov
cmpsb
faddl
xchg
sbb
hlt
in
or
ss
mov
lock
clc
pop
data16
lcall
pusha
xchg
cmp
inc
pop
call
inc
dec
loopne
out
sti
fiadds
aad
test
inc
fbld
sub
movsl
dec
mov
inc
jo
sbb
shrb
add
es
decb
loope
lods
psllq
popf
loop
push
inc
les
loope
sbb
ljmp
out
cld
inc
add
pushf
enter
mov
mov
repz
notl
push
mov
xor
pop
mov
mov
cmpb
mov
ret
add
sub
stos
fisubs
mov
ret
sbb
cmpb
and
pop
clc
inc
mov
aas
adc
push
in
loope
incl
or
icebp
pusha
pop
cmp
lods
ja
ficoml
out
sub
mov
cmp
xor
insb
jmp
xchg
repnz
subl
push
mov
sbb
push
xor
and
lret
adc
testb
bound
cmc
push
lock
inc
clc
push
inc
xchg
cmpl
fsubrl
jne
cmp
hlt
leave
sbb
mov
test
dec
adc
js
and
and
ret
xchg
fsubs
push
xor
imul
sbb
xchg
adc
or
aas
jmp
or
mov
daa
sbb
adc
xor
dec
inc
lcall
push
jb
out
in
push
or
mov
and
inc
sub
hlt
push
add
lods
pop
mov
das
inc
adc
divl
jb
jnp
and
out
dec
mov
aas
movb
mov
lcall
push
xor
jne
fisttpll
ljmp
aad
push
pop
push
sbb
lcall
pop
jecxz
es
dec
loopne
xor
daa
out
enter
add
pop
mov
push
nop
push
lock
pusha
lds
nop
addr16
lcall
sbb
test
repz
mov
addl
xchg
push
jle
add
mov
sbb
sub
push
dec
cmp
push
idivb
pushf
dec
lods
mov
add
mov
jae
test
js
test
xchg
cltd
outsl
sarb
jmp
dec
mov
lea
test
pop
and
jmp
ja
shl
inc
mov
pop
fucomp
xchg
sub
and
insb
pop
jns
negl
popa
stos
lahf
into
pushf
outsl
test
jo
les
push
cwtl
mov
sbb
cwtl
push
dec
or
cmp
stos
aas
inc
scas
jne
inc
cmp
test
jp
sbb
daa
or
mov
lock
adc
bnd
inc
mov
add
test
arpl
mov
xchg
test
jg
aad
xchg
mov
fidivl
push
ljmp
pop
nop
pop
xchg
std
js
xchg
add
jns
add
push
mov
repnz
flds
aam
dec
dec
loopne
into
mov
inc
mov
adc
xchg
xchg
shll
fucomp
sub
and
sub
add
push
jbe
xchg
mov
push
mov
mov
pop
out
call
ljmp
mov
adc
jle
lock
jmp
lods
xor
jg
lock
sub
sub
dec
clc
cmp
xor
fwait
xor
lret
add
and
movsl
jae
and
cld
inc
adc
mov
fs
cld
scas
test
or
and
push
pop
inc
pop
add
shll
push
sub
xorb
ffreep
js
mov
hlt
adc
push
dec
test
push
add
cmp
cmpsb
pop
shrb
aaa
mov
or
jge
loope
dec
or
out
nop
leave
inc
movsl
xchg
cwtl
inc
dec
leave
sbb
out
or
repnz
pop
mov
add
pushf
pop
mov
stc
inc
stc
jne
test
add
jo
frstor
stos
cwtd
jmp
adc
rorl
outsb
dec
enter
xchg
js
rcrb
adc
stos
add
aad
into
es
call
pop
lret
imul
push
aaa
test
movsb
roll
subb
ja
jb
out
jne
sbb
dec
das
rcrl
or
mov
mov
or
xor
mov
mov
js
sbb
enter
jg
add
adc
scas
lds
lds
daa
loop
jo
push
dec
outsb
add
dec
sbb
imul
ljmp
sbb
cld
out
lea
lcall
jg
inc
loop
sub
push
outsw
add
and
dec
add
inc
cmp
sub
dec
repz
add
cwtl
jo
inc
aas
jns
lret
rcll
add
or
or
push
inc
cs
adc
lds
stos
xchg
jmp
sbb
mov
jp
jo
mov
mov
out
xor
lret
addr16
xor
cmpsb
mov
ret
jae
and
pop
test
lock
test
jl
mov
mov
arpl
gs
addb
lcall
nop
add
test
andb
pop
push
dec
push
dec
mov
or
movsb
test
adc
xchg
mov
and
xor
pop
loopne
push
pop
bt
rorb
insb
mov
out
cmpsb
adc
jl
shr
test
stos
shlb
je,pn
sub
sti
xorl
mov
push
mov
mov
mov
cld
or
xor
dec
je
inc
cwtl
jno
aas
cmp
pop
lods
mov
rclb
test
xor
rcrb
push
pop
les
push
sbb
pop
mov
sbb
sbb
aam
sub
xor
sbb
data16
and
add
and
dec
adc
and
or
adc
fisubs
in
mov
notl
mov
sub
mov
rclb
push
fsts
test
fidivl
pushf
inc
cmp
jo
and
in
mov
and
adcb
aaa
in
imul
cltd
and
lds
das
or
push
add
mov
add
push
cmp
mov
and
or
fwait
mov
aam
mov
stos
sbb
add
adc
les
sahf
icebp
test
push
idivb
xor
pop
add
xlat
ss
mov
in
lods
loope
jle
push
lock
pcmpeqd
lods
xchg
lock
xor
adc
sub
les
mov
pop
pusha
sub
push
mov
adc
adc
les
gs
in
imul
pushl
sub
cmpsl
mov
push
ret
mov
inc
jl
lret
adc
dec
pop
in
inc
add
lret
out
aaa
test
xlat
adc
fcoms
bound
sbb
push
inc
pop
test
sar
inc
cld
mov
js
int
in
fs
lcall
mov
dec
insl
sub
stos
push
jae
mov
sbb
les
btl
cli
pop
add
inc
mov
js
xchg
aad
ret
mov
push
loop
cmp
cli
sbb
xchg
cmp
adc
insl
fdivrl
aad
notl
and
orb
pop
out
popa
add
xchg
popf
stc
lds
fnstenv
fmulp
push
push
mov
inc
jno
sbb
mov
scas
add
add
inc
pop
adc
jb
dec
add
imul
scas
xor
mov
loop
ljmp
or
call
xchg
hlt
fcoml
repz
cmp
inc
jp
clc
in
hlt
pop
or
push
jb
xchg
and
xchg
clc
push
fimuls
push
mov
dec
ret
loope
inc
dec
aam
pop
lods
jg
jecxz
sbb
nop
fwait
mov
fadd
xchg
shll
adc
test
dec
sarb
mov
scas
add
inc
add
pop
jge
push
push
aad
sahf
and
push
ds
inc
dec
xchg
in
sbb
xor
arpl
in
mov
cltd
pop
stc
je
punpckhwd
loope
and
out
fistpll
stos
test
fidivl
push
xorb
scas
popa
mov
fsubrs
or
ljmp
add
dec
sahf
das
mov
hlt
push
adc
fists
fldcw
rclb
outsb
fdivrp
cmc
jg
mov
push
mov
push
xchg
mov
icebp
jg
std
sbb
pop
mov
mov
pop
dec
adc
sbb
dec
push
adc
add
loope
shl
jmp
push
pop
dec
fldt
push
xchg
mov
lock
dec
inc
inc
loope
rcr
pop
add
sbb
leave
pop
mov
mov
pushf
loop
rcrb
nop
pop
lret
ljmp
imul
push
sbb
sub
mov
pop
sbb
inc
in
outsb
je
dec
sub
sbb
shrl
sbb
ror
dec
aad
mov
in
xchg
in
mov
cmp
jge
fadd
sahf
or
or
lds
xor
jl
leave
sub
push
rcrl
xor
xchg
incb
mov
ja
push
hlt
pusha
rcll
push
jne
ds
clc
push
pop
ret
mov
daa
cmpsl
sbb
and
pusha
rcll
es
jecxz
mov
decb
adc
int
ljmp
scas
cmp
mov
sub
push
push
test
cmp
iret
mov
int3
inc
stc
in
loope
xorb
clc
lea
jle
cmpsl
mov
push
adc
icebp
pop
stc
scas
add
adc
scas
push
adc
dec
jo
mov
sub
adc
scas
icebp
jmp
pop
fimull
add
adc
cmp
mov
rcrl
lcall
jmp
jmp
mov
arpl
stc
jg
lret
xor
leave
add
das
xchg
adc
inc
or
ret
lret
enter
out
scas
add
test
fwait
cs
xchg
add
jle
clc
fisttpll
outsl
mov
dec
sti
dec
sahf
xchg
push
sbb
mov
inc
sbb
mov
adc
fildl
push
adc
dec
sbb
aas
inc
frstor
loope
lcall
int3
or
dec
jnp
test
jg
xchg
push
lret
popa
jne
stos
jle
dec
and
xchg
pop
or
sbb
stc
mov
iret
pop
cmp
mov
or
mov
testb
pop
imul
mov
sub
cmp
sarb
cltd
xor
sahf
push
icebp
cltd
stos
inc
scas
inc
mov
rcll
aad
test
mov
xor
call
loop
push
mov
orb
loopne
imul
fidivrl
add
mov
add
out
mov
jecxz
xchg
aam
lcall
mov
js
adc
mov
outsb
adc
inc
insl
cld
adc
into
push
push
test
ljmp
push
imul
jmp
adc
ret
mov
ljmp
or
jne
adcb
add
jb
ret
cmp
outsb
aam
adc
lds
xor
inc
inc
pop
dec
cwtl
movsl
imul
in
jo
and
xlat
rcl
dec
xchg
mov
adc
mov
cs
mov
popl
add
push
push
mov
cmp
cmpsb
nop
add
pop
lea
lods
dec
push
jle
and
pop
jp
pop
pop
sbb
adc
xlat
xlat
push
ljmp
add
cltd
aaa
imul
insl
push
inc
push
push
je
inc
pop
pop
popa
leave
imul
add
and
ja
repz
mov
arpl
or
iret
imul
adc
and
ds
setp
or
cmpsl
jne
jo
and
fcoms
mov
mov
in
and
mov
bound
xchg
and
sbb
jo
int
pushf
mov
cmp
add
add
lds
dec
inc
clc
rcll
data16
mov
xchg
loopne
ljmp
xchg
adc
dec
cmp
mov
sti
ret
pop
push
cmp
lock
mov
xchg
dec
cli
mov
adc
lcall
iret
xor
push
push
adc
xchg
xchg
daa
adc
decl
call
pop
add
dec
mov
dec
sbb
std
jmp
xor
sbb
fnstcw
xor
test
xor
pop
and
popa
push
loope
mov
mov
test
adc
add
mov
bound
push
daa
xorl
adc
mov
pop
jmp
insl
mov
sbb
push
imul
cmp
por
or
fmull
pop
lea
cmpsl
inc
mov
cld
and
mov
popa
adc
or
xor
cli
cli
in
fisubrl
fsubrs
decl
es
in
adc
and
dec
pcmpeqw
shrb
ret
fwait
insb
test
leave
int
sbb
stc
out
inc
mov
ds
scas
std
pop
and
leave
jecxz
shll
cli
aad
ss
daa
pop
jmp
and
aaa
jno
mov
mov
test
mov
xchg
pop
iret
fwait
daa
sbb
and
push
dec
fbstp
outsl
int3
in
movsb
addr16
inc
xor
mov
cmpsb
inc
sbb
test
in
dec
mov
adc
and
test
insl
sbb
sub
dec
ficoms
faddl
ret
inc
mov
mov
push
sbb
or
sbb
push
int
xchg
ss
mov
dec
loopne
dec
in
shlb
mov
mov
lcall
pop
cli
cmpsl
loop
inc
pop
sbb
out
cmp
cs
and
stos
or
ss
pop
mov
inc
jecxz
pop
add
aam
pop
test
pusha
and
fcmove
js
call
aas
loope
jb
jne
shr
mov
inc
xchg
cmp
faddp
pop
inc
pop
xor
mov
and
out
out
lods
xchg
pop
addr16
bound
pop
divb
sub
jnp
cmp
rol
jecxz
xor
enter
icebp
fsubp
fstpl
or
push
dec
jge
lcall
loopne
jmp
pop
cmp
and
stos
mov
push
insl
aam
mov
aam
je
loopne
jp
add
lret
adc
into
sub
jle
xlat
dec
shlb
xor
pop
cwtl
cmp
push
rcrb
in
stos
and
std
adc
xchg
xchg
xor
std
jne
cwtl
loope
decl
dec
pop
push
lock
movsb
add
sti
int3
adcb
and
or
push
aad
or
dec
push
cmp
dec
xor
and
mov
sbb
jl
sbb
and
bound
inc
cmp
add
icebp
xor
pop
or
int
imull
idivl
lods
add
inc
loopne
sub
and
inc
orb
inc
fisubl
mov
fwait
xor
pop
pusha
pusha
sti
adc
jbe
adc
shlb
repz
or
push
out
xchg
and
dec
loop
dec
stc
xchg
sbb
add
jns
rolb
enter
xchg
cmpsl
ret
push
dec
stc
or
sbb
and
dec
aam
xchg
mov
mov
pusha
xor
sbb
adc
mov
out
push
dec
insb
jl
sbb
inc
fsts
or
pop
fsubrs
loop
das
mov
jecxz
sub
push
cmp
mov
push
lcall
jbe
mov
mov
xor
and
pop
fwait
or
lods
int
rcl
add
into
lret
sub
jno
insb
pop
ja
fisubrs
jmp
pop
mov
adc
adc
arpl
aad
insl
pop
in
cmpsl
sbb
sbb
lahf
add
mov
push
jae
lea
add
ljmp
call
xchg
xchg
ret
mov
xchg
leave
incl
cmp
jae
inc
xorl
lods
fsts
cmc
fisubl
shrb
inc
sbb
nop
xor
push
pop
pop
sbb
movsl
ja
shlb
scas
adc
push
sub
orl
data16
clc
or
push
pop
add
movsb
lock
aas
xchg
cmpb
add
mov
es
adc
loope
mov
xor
dec
sbb
int
and
pusha
xor
or
andb
mov
or
js
sub
cmpsl
dec
cmp
fildl
pop
jmp
dec
xor
mov
or
cmp
test
addb
xchg
xor
jg
xchg
jecxz
xor
rcrl
sbb
pop
mov
cld
push
and
loope
in
ret
popa
mov
or
les
stc
movsl
cld
fistpll
inc
jmp
imul
mov
aam
movb
xor
mov
sarl
popa
mov
sbb
push
pop
and
inc
pop
test
jle
jns
cwtl
xor
dec
fucomip
add
sbb
mov
mov
outsb
sub
or
adc
das
cld
arpl
and
adc
add
lret
inc
scas
mov
outsl
lods
pop
rcl
add
push
mov
xor
push
cmpsl
cmpsl
and
or
add
sar
push
jle
push
scas
mov
mov
sahf
out
add
jge
mov
es
mov
push
dec
rclb
loopne
add
add
sub
neg
push
xlat
or
push
adc
cmp
cld
ficoml
pop
adc
and
lahf
dec
lcall
cmpl
sub
loopne
cs
je
xchg
jle
mov
sbb
inc
test
orb
xor
clc
mov
rcl
sti
jbe
and
mulb
sub
pop
inc
lea
test
sub
push
cmpsb
fnsave
out
or
adcb
sbb
pop
push
out
mov
xor
jp
test
mov
les
subb
and
test
add
fnstcw
sub
orl
arpl
hlt
pop
hlt
into
push
scas
jecxz
loope
mov
push
jbe
inc
gs
adc
jbe
test
outsl
or
jg
mov
mov
cmp
xchg
test
leave
inc
push
mov
push
stos
xchg
or
mov
mov
cwtl
jg
push
inc
and
pushl
inc
es
jns
inc
scas
mov
lret
ljmp
sahf
mov
popa
sub
test
ss
dec
loopne
cs
xchg
fcomip
hlt
dec
f2xm1
jmp
and
fwait
cmp
jno
cmc
cmp
mov
nop
push
sbb
mov
je
xchg
pop
push
mov
mov
jmp
setle
idivb
lods
ret
or
adc
cld
scas
dec
and
cmc
imul
sub
cwtl
idivl
add
push
ja
sar
dec
pop
mov
es
mov
clc
rcl
insb
add
test
in
aaa
push
or
mov
jecxz
gs
adc
push
pop
dec
sbb
icebp
xlat
in
and
fadd
repz
lea
cld
sbb
and
mov
or
stc
mov
rorb
loope
lods
aas
fwait
dec
dec
xor
repz
mov
ret
and
fs
dec
repnz
test
push
xchg
mov
cmp
in
and
inc
ds
shlb
xor
aaa
sarb
inc
jo
rolb
stos
cmpsb
dec
xchg
push
mov
stos
push
xor
fdivr
out
sub
orb
push
inc
xchg
xor
andb
idiv
xor
leave
jl
inc
jmp
insb
mov
jae
out
and
test
xor
test
pop
sbb
lods
movsb
mov
pop
sub
sub
cmp
push
sbb
mov
jae
dec
mov
push
push
popa
ret
lea
mov
or
and
pop
or
cmp
inc
je
xchg
mov
scas
mov
test
mov
pop
das
xchg
add
sub
xorl
nop
js
sub
add
sbb
add
repz
in
orb
add
jmp
mov
outsl
scas
push
jmp
shl
push
adc
movsb
shl
lods
adc
mov
ret
or
jmp
pop
mov
xchg
xchg
mov
insl
lock
fists
test
std
inc
ret
xor
adc
cmp
or
loope
mov
inc
jno
pop
jg
sbb
adc
imul
js
test
sahf
xchg
cs
add
adc
or
fadd
call
jne
dec
pusha
mov
popf
movsb
aaa
or
push
test
lods
pusha
xor
cmp
sarl
inc
les
cli
insl
loop
or
ja
mov
xchg
push
sahf
clc
mov
sbb
jbe
push
test
add
out
cmp
dec
xor
push
mov
add
hlt
aam
jnp
scas
dec
dec
inc
sub
mov
sbb
adc
xor
sbb
icebp
inc
icebp
movsb
and
outsl
dec
add
cli
lahf
adc
pop
iret
mov
sti
dec
push
mov
hlt
xorl
lods
dec
mov
daa
movsl
lret
push
xlat
and
cs
push
hlt
and
mov
icebp
jo
clc
lods
into
rcl
inc
insl
das
xor
scas
lds
lods
je
jp
sub
icebp
adc
inc
out
mov
xchg
add
mov
adc
xorl
incl
sub
xchg
pop
mov
outsl
mov
adc
iret
lcall
mov
pop
dec
add
negb
aaa
les
dec
sub
sbb
jl
pop
fwait
ja
inc
mov
mov
dec
test
lock
inc
fisubl
aad
stos
sbb
add
nop
ret
sub
jo
fldl
mov
xchg
xchg
pop
stos
jmp
enter
add
pop
ss
or
and
das
leave
or
adcb
inc
mov
hlt
mov
pop
mov
fcmovbe
add
aad
les
or
pop
fidivl
bound
mov
cmp
jp
add
test
push
cmp
cld
rcrb
add
iret
stc
push
jbe
push
movsl
sub
pop
lret
sbb
add
mov
rorl
dec
sbb
shrb
out
or
sub
popa
stc
sbbb
int
or
xchg
push
jne
mov
fwait
and
add
bound
lret
cs
sub
xor
lea
fwait
addb
sarl
or
and
or
push
fcoml
xor
cld
xchg
cmpsb
mull
loopne
cmp
cwtl
or
hlt
ss
mov
fisubs
incb
mov
add
push
jbe
out
sub
and
and
fists
push
ret
push
add
mov
jl
fildl
orl
and
in
sbb
decl
mov
xor
jnp
mov
sbb
pop
test
cltd
mov
shlb
dec
mov
je
loope,pn
add
sbb
jns
pusha
inc
call
pop
pop
je
ret
push
lods
xchg
pop
pusha
push
push
adc
lods
lahf
insl
dec
xchg
daa
dec
dec
push
jecxz
pop
fsubs
mov
push
cmp
movsl
mov
pop
cmp
pop
shll
xchg
mov
or
mov
jl
push
in
lea
or
test
lods
lds
lods
clc
pop
fistpll
sbb
sbbb
clc
sbb
daa
cli
or
and
movsb
push
lahf
mov
add
imul
adc
in
loopne
pop
mov
enter
push
inc
fisttpl
sahf
ss
mov
mov
adc
mov
pop
dec
jbe
loope
pop
mov
cmc
repnz
sub
mov
xchg
pop
jmp
add
sbb
jno
inc
add
frstor
jg
pop
ds
dec
outsl
push
sub
das
scas
fisubs
mov
jb
in
lods
stos
ja
xchg
push
iret
cld
cmp
lret
push
mov
int
push
fs
xor
xor
mov
or
cmp
ret
mov
clc
and
rcrb
pop
das
push
cltd
or
xchg
jnp
arpl
xchg
stc
pop
mov
ja
scas
mov
pop
mov
sub
cmp
or
inc
insl
push
outsb
sbb
mov
inc
fsts
adc
rorb
push
pop
pusha
adc
lea
mov
push
jb
mov
int
in
dec
scas
mov
lods
and
mov
lret
xor
lods
mov
mov
xor
mov
lods
add
xor
int3
mov
in
mov
mov
mov
adc
in
jo
sbb
mov
leave
test
mov
and
push
push
in
push
sub
pop
shll
pop
shrb
cli
cmpb
lds
xchg
mov
out
or
lods
mov
imul
inc
shlb
pushf
arpl
jecxz
add
jnp
mov
push
xlat
xor
stos
ds
adc
aad
in
jnp
jecxz
daa
addr16
into
mov
hlt
xchg
xor
xor
add
sub
pop
jo
popf
subl
add
xchg
wrmsr
test
leave
push
add
in
or
test
mov
in
mov
mov
lock
jb
mov
cli
jg
xchg
mov
fadds
xchg
push
add
inc
pop
cli
push
loop
or
arpl
fdivs
xchg
push
dec
push
adc
adc
add
add
pop
hlt
shlb
pop
inc
inc
mov
repnz
push
xchg
outsl
les
add
testb
rorb
cld
add
dec
mov
inc
loope
add
out
ret
jp
pop
dec
push
pushf
out
cmpsl
fimull
dec
lds
adcl
loopne
and
cld
push
sbb
cli
inc
sub
arpl
cmc
aaa
or
jnp
dec
cwtl
sub
adc
iret
mov
aam
mov
dec
push
leave
aad
xchg
lock
inc
ror
popf
dec
mov
jle
rolb
dec
dec
repz
jo
sub
aad
or
test
aas
inc
xchg
sub
add
in
enter
iret
adc
xlat
dec
pop
inc
lcall
aad
out
push
fisttpll
cli
adc
shlb
subl
inc
cmp
rcl
sarl
testb
fcompl
stc
stc
icebp
inc
aad
dec
xchg
or
xor
xchg
jp
jns
sub
cld
or
add
cmp
sahf
je
nop
jl
sti
mov
mov
mov
mov
or
jle
mov
push
pop
cli
imul
sahf
inc
rcrb
mov
inc
jg
aas
cmp
push
es
mov
fsubl
insb
ret
mov
aam
test
add
pop
clc
and
push
cld
fimuls
loop
mov
into
inc
pcmpeqd
jge
rcrb
mov
pop
out
sub
in
aas
loop
cmp
cmpsl
adc
push
testb
dec
inc
adc
cmpsl
xor
fldl
cmp
sbb
add
and
outsb
jb
inc
xor
out
sti
movsb
xor
inc
hlt
xchg
ss
mov
and
gs
dec
js
test
and
ret
pop
mov
push
sysret
xlat
test
out
negl
dec
in
sahf
mov
loopne
pop
cs
mov
js
sahf
psubb
jne
es
fadd
sub
aas
call
mov
or
sbb
pushf
shll
cmp
shlb
push
adc
cmp
pushf
and
pop
in
inc
dec
or
jecxz
out
int3
add
push
call
pop
xor
pop
ja
jecxz
sahf
xor
dec
and
jp
scas
inc
xchg
and
cmpsl
stos
fldenv
loopne
imul
dec
pusha
xchg
sahf
lock
fildl
push
fwait
icebp
je
cmpl
pcmpeqb
xchg
push
dec
inc
and
or
imul
test
movl
push
dec
jge
jbe
push
enter
add
incl
xchg
inc
or
pop
ds
add
add
mov
jp
lea
je
negl
bnd
out
jns
push
js
rol
xor
shlb
das
mov
fbld
in
and
jo
jmp
mov
lods
repnz
pop
movsb
xchg
push
adc
out
xchg
ret
inc
ja
mov
xchg
mov
jp
jp
add
xchg
rorl
xor
fwait
mov
subb
rclb
data16
mov
xchg
jnp
sub
add
lds
mov
arpl
js
jl
fmull
sti
fs
jno
cli
sbb
les
dec
orl
icebp
push
pop
loop
inc
sub
arpl
and
imul
int3
fdivrs
mov
cmpb
mov
mov
dec
insl
fidivl
add
mov
aad
dec
pop
cmp
sub
pop
adc
add
cmp
push
inc
xor
std
jl
loope
std
xchg
and
mov
scas
or
jnp
out
dec
ljmp
adc
xchg
addr16
jb
xchg
pop
push
stos
rorb
mov
xchg
push
je
sbb
das
test
adc
adc
cmc
rolb
ficomps
adc
adc
in
ljmp
mov
push
mov
rorb
jle
dec
notb
test
out
addr16
pop
adc
nop
adc
cmp
xchg
idiv
rcl
or
mov
insb
mov
fiadds
dec
push
std
fdiv
adc
lea
call
jno
iret
popa
mov
and
dec
mov
lea
and
ds
mov
cmp
mov
sbb
or
mov
add
jne
cmp
xchg
mov
xchg
mov
loope
in
inc
jo
inc
fcmovbe
sbb
nop
roll
mov
mov
jno
aam
pop
dec
enter
cmp
shrl
das
dec
push
pop
adc
push
push
sbb
mov
cld
push
inc
mov
push
rolb
stos
movlps
ss
test
in
out
stos
inc
popa
add
cs
pop
cld
add
cmc
popf
push
subl
popf
fldenv
and
cs
and
je
adc
mov
cmp
push
rcr
push
push
aad
test
mov
or
dec
push
es
nop
mov
arpl
lods
push
cmp
ret
xchg
xor
inc
ss
das
loope
popa
int
jl
icebp
cmp
sub
inc
ret
aas
js
loop
mov
in
std
push
loopne
pop
or
push
add
dec
or
jge
or
add
mov
iret
adc
test
jo
xchg
mov
cli
shrb
cli
mov
and
call
test
xchg
cli
dec
xchg
outsl
ficompl
packsswb
les
inc
dec
xor
mov
pushf
jl
lods
pop
clc
add
int
movsl
mov
pop
insl
mov
into
xor
or
scas
out
mov
mov
xor
push
ja
push
push
cmpsl
mov
ret
fimull
jecxz
aaa
cmp
or
idivl
les
adc
adc
and
or
sub
pxor
loop
lods
shlb
and
xchg
xchg
sub
adc
scas
test
sbb
cltd
loopne
daa
mov
xchg
sub
xchg
jne
fcmovnbe
in
loop
sub
pop
mov
rorb
fidivs
cmp
movsl
jle
xor
sub
mov
push
push
add
aad
ljmp
push
jl
int3
and
mov
adc
lock
push
cmp
repnz
cmp
add
push
sbb
add
loop
test
pop
and
cwtl
adc
cmp
sub
push
sbb
or
xor
sbb
mov
orb
test
xor
outsb
cwtl
pop
xchg
xor
fwait
xor
cmpsl
andl
js
sub
adc
mov
add
cs
inc
mov
or
push
xchg
jae
xchg
ljmp
sbb
push
mov
adc
maxps
dec
xchg
jb
sbb
out
lcall
and
mov
mov
push
push
lods
sbb
cli
call
dec
mov
mov
shlb
mov
push
aaa
mov
and
xor
inc
cmc
or
xchg
fisubrs
mov
lods
subl
sbb
jo
push
pop
cmc
imul
inc
adc
sub
and
xchg
adc
mov
adc
or
mov
inc
and
dec
add
push
pop
adc
cmpl
xchg
add
rorl
ret
out
pushf
cwtl
insb
xchg
bnd
out
fwait
inc
mov
mov
test
insb
mov
inc
cmp
lock
cmpsl
xor
push
ss
lahf
jg
pushf
xchg
and
into
mov
iret
bound
sti
call
xchg
xor
add
adc
pusha
cli
enter
xchg
inc
inc
adc
fmuls
mov
push
and
ja
test
add
gs
out
add
inc
cli
js
xchg
shl
clc
push
fistl
mov
push
push
gs
mov
enter
xchg
insl
cld
and
jmp
push
fst
pop
inc
iret
lock
clc
je
jmp
mov
push
out
push
test
orl
pop
ret
dec
repnz
enter
rolb
int3
xchg
push
or
subb
cli
cmp
add
pushf
arpl
insb
sbb
pop
add
es
cld
cmp
rorb
sbb
cmpsb
std
inc
ficoml
pop
mov
sbb
cltd
ds
das
lock
insl
xor
incb
outsb
dec
in
cli
mov
or
fsubs
and
fsub
sub
aam
outsl
iret
movb
adc
fnstenv
mov
cmp
loopne
shll
lods
dec
add
xor
lock
pop
das
sbb
das
insb
xchg
lock
and
adc
std
xorl
xchg
mov
cmc
or
and
pusha
inc
mov
cld
aaa
mov
jge
lea
cmp
push
imul
push
pop
outsb
pop
pop
je
mov
test
mov
stos
adc
insb
pusha
test
pop
std
sub
pop
int3
imul
push
dec
push
popf
subb
ret
adc
push
mov
mov
popa
out
xchg
pop
push
stos
mov
cltd
rorb
call
int3
push
and
cmp
clc
sub
lods
or
mov
push
jb
dec
and
lea
mov
aam
sub
xchg
sub
or
pop
outsl
mov
sub
inc
out
push
in
sbb
dec
mov
mov
xchg
xchg
inc
movsb
push
pop
xchg
stc
in
add
inc
push
sbb
push
xchg
xchg
dec
sarb
shll
rorb
sbb
das
xor
adc
cmp
cmp
mov
in
js
pop
insb
into
and
sbb
mov
sbb
leave
outsb
imul
add
xchg
push
inc
dec
add
pop
adcb
mov
pop
ja
dec
out
addr16
mov
nop
ret
insl
loop
fists
test
jmp
pop
jns
aam
sbb
test
xchg
pushf
flds
xchg
and
subb
sub
xlat
es
rorl
scas
sbb
lock
mov
arpl
scas
ficoml
pusha
jecxz
andw
mov
ret
mov
inc
mov
push
movsb
ret
adc
pop
cld
xorl
scas
or
inc
jb
pop
cmpsb
mov
inc
push
jmp
cld
add
imul
adc
jmp
ret
mov
mov
lods
aaa
je
xchg
jge
and
add
push
rcl
lods
adc
cmpsb
addb
mov
dec
jle
mov
cmp
addr16
cmp
rclb
stos
xor
add
cwtl
dec
int
jnp
add
push
xchg
repz
push
jmp
xor
sub
sub
cs
out
shll
fwait
push
push
add
mov
xchg
dec
clc
xlat
aaa
enter
test
decl
xor
adc
dec
sbb
cmp
or
push
xlat
mov
and
insb
xchg
in
sbb
andb
in
lods
push
xchg
lods
cmovne
cmp
mov
jne
mov
or
stc
sbb
stos
mov
mov
js
in
jecxz
pop
inc
xchg
fistpll
mov
mov
mov
mov
rcll
sbb
xor
sbbl
es
fs
add
xchg
inc
sbb
ds
add
jecxz
push
inc
add
xor
mov
cli
je
xor
jno
add
dec
and
xor
jecxz
std
adc
addb
jmp
aad
adc
mov
addl
and
sub
mov
xchg
or
pop
add
lods
jbe
ret
fidivs
sbb
sbb
fistpll
mov
jmp
xchg
ds
and
jl
sahf
fsubl
pop
sub
mov
jae
mov
jo
sbb
or
sbb
or
je
xchg
jo
jne
or
cmp
and
dec
inc
inc
cmp
adc
stos
add
lock
add
decl
mov
add
decl
adc
jmp
dec
inc
inc
addb
js
aad
or
xchg
pushl
and
mov
orb
jge
loopne
test
lods
sub
fucomip
ds
inc
and
mov
out
mov
inc
xor
insl
inc
or
stos
add
loopne
and
ljmp
mov
ja
pusha
divb
in
lock
lcall
jb
jo
xor
push
test
mov
pop
insb
test
lods
xor
and
ljmp
fildl
xchg
pop
mov
or
mov
add
jmp
aaa
repz
cmp
cmp
sbb
loop
dec
aas
js
aaa
add
cmpsb
pop
out
sub
movsb
xor
fisubs
or
adc
push
js
aam
pop
add
adc
jle
enter
shl
xchg
pop
lock
stc
or
xor
inc
or
jo
pop
xlat
popa
mov
xchg
mov
inc
lods
mov
lock
xorb
and
popf
pop
mov
loop
lea
rcrl
movsb
sbbb
jo
xor
mov
adc
cs
push
insb
lcall
out
mov
sti
and
movl
jp
ficompl
fmull
dec
xor
das
and
mov
insl
and
xchg
insb
fisubrl
add
std
sbb
cli
fwait
xor
stc
fwait
add
dec
push
xchg
cmp
pop
popa
out
inc
xchg
lock
fwait
or
add
orl
push
iret
pop
or
jno
xlat
movsl
sub
jae
adc
add
outsb
pop
dec
clc
orl
pop
push
sbb
out
imul
push
es
sbb
cmpsb
stc
mov
scas
dec
or
jmp
lret
or
scas
jecxz
fisttps
test
jle
es
pop
push
mov
jle
and
push
or
addr16
inc
and
mov
jbe
js
add
push
pop
test
inc
push
fdivrp
adc
push
jno
pusha
xchg
cmp
add
push
push
sub
call
ljmp
mov
add
xchg
ret
ja
and
jne
fisubs
addb
sti
cmp
nop
dec
leave
test
lcall
cli
addr16
div
loopne
jbe
or
cmpsb
pop
push
inc
inc
std
xchg
mov
outsb
inc
fdivrs
fadd
inc
xor
mov
mov
loope
insl
sub
sbb
clc
mov
lcall
lods
mov
jp
aam
nop
icebp
jle
adc
cmp
sub
subb
out
inc
or
movsl
mov
mov
add
out
sbb
mov
outsb
shll
push
nop
inc
xor
mov
fistpl
push
mov
xor
mov
or
in
mov
clc
icebp
cli
xchg
popf
xchg
mov
je
daa
and
lret
jo
mov
je
add
xchg
xor
ret
mov
sbbl
lret
mov
push
xchg
add
add
mov
rcrb
xchg
add
hlt
cmp
jns
in
add
pushf
idiv
jecxz
jecxz
mov
inc
nop
jbe
aad
adc
inc
dec
mov
mov
adc
push
fildl
adc
pop
cli
cmp
sbb
scas
mov
mov
insl
das
data16
pop
cmp
jo
pop
push
ja
rolb
bound
cmc
push
xor
mov
shrb
sbb
idivb
push
push
jb
cmpsl
xorb
mov
push
nop
adc
or
pop
enter
cld
and
aam
push
cmc
mov
shlb
lcall
add
outsb
mov
pusha
inc
pusha
jp
mov
pop
push
push
sbb
pop
adc
stos
and
sarl
mov
lds
jo
xchg
inc
jge
sahf
pop
mov
xchg
inc
enter
sti
xor
daa
shr
inc
fbld
mov
jo
adc
or
pop
xchg
add
push
sarb
imul
push
jl
dec
ljmp
mov
imul
les
xor
das
scas
fisubrs
xlat
push
les
dec
in
cli
mov
lods
aaa
cmp
pop
icebp
adc
test
enter
mov
mov
pop
push
inc
inc
div
ljmp
inc
or
pop
sub
xor
ds
rcrb
shrb
cld
jbe
mov
pop
fwait
and
and
xor
les
push
and
icebp
dec
push
inc
shll
mull
add
mov
pop
sbb
adc
lret
xchg
mov
mov
insb
or
es
sbbl
inc
cld
and
cltd
lods
data16
popf
movsb
ficompl
je
pop
adc
aam
sbb
bound
mov
js
adc
out
movsl
or
rclb
mov
sbb
nop
int
repnz
fldcw
sbb
cwtl
xor
fsub
or
fsubrs
xor
add
mov
add
pusha
adc
pop
movsb
sbb
cmc
ret
sub
inc
cmc
mov
jmp
jnp
add
add
movsl
dec
clc
adc
int3
imul
imul
mov
mov
lock
xchg
add
inc
rclb
dec
outsl
mov
mov
xchg
pushf
loop
xor
loopne
dec
xor
or
scas
adc
adc
popa
dec
stos
shlb
mov
lret
mov
xor
loopne
js
dec
or
jnp
imul
mov
std
inc
mov
pop
dec
ss
aas
mov
addb
aaa
add
test
adc
cmc
add
and
daa
fcoml
es
outsl
mov
outsl
scas
xchg
dec
add
or
jl
jne
cmp
adc
jge
mov
add
push
cmp
mov
cltd
mov
and
lock
dec
stc
inc
mov
push
je
rcl
pop
push
cmp
cld
xchg
mov
dec
lock
jmp
sub
cs
mov
aas
hlt
pop
dec
adc
es
xchg
cmc
add
pop
loopne
xor
in
repnz
lcall
push
mov
scas
pcmpgtb
mov
pop
cmp
test
cli
mov
pop
fsubs
fstps
xor
lock
push
mov
idivb
insb
jg
cld
fbstp
add
push
in
incl
jmp
or
js
test
js
aad
out
sub
insb
cwtl
loopne
mov
scas
add
call
lea
fsubl
sub
rolb
jle
adc
xor
cmpl
pop
ja
sub
arpl
scas
icebp
dec
imul
iret
and
mov
gs
in
clc
adc
cmp
adc
mov
jbe
or
fldcw
popf
add
and
les
pop
popf
push
add
add
mov
pop
jle
inc
xchg
lock
call
sbb
ja
pop
mov
test
mov
scas
cmp
cs
inc
jbe
mov
add
jg
add
clc
in
aad
lods
inc
cmp
out
and
or
adc
jb
cs
leave
andl
cs
or
mov
pusha
jbe
test
add
rol
mov
mov
sbb
in
cmp
xchg
push
pop
mov
rorl
mov
in
add
push
test
or
and
xchg
jne
pop
lea
loopne
aad
cmp
push
sub
push
jne
xor
adc
mov
dec
and
bound
sbbb
inc
xchg
pop
call
sub
icebp
cmp
pop
jecxz
andb
lcall
test
pop
inc
sbb
subb
mov
sbb
int
iret
scas
sub
mov
mov
pop
pop
mov
push
das
sbb
pop
mov
or
cmpsl
and
andb
test
sub
pop
cli
xor
and
scas
testl
xchg
push
pop
enter
jo
arpl
push
or
cmc
dec
ja
pop
pushf
mov
mov
mov
adc
xchg
and
inc
lahf
add
ljmp
popa
adc
fiaddl
aad
mov
ret
adc
repnz
mov
cmp
clc
sbb
cmc
mov
xchg
dec
jns
ret
and
xor
arpl
lds
daa
scas
jmp
and
dec
lret
sarl
sub
push
push
mov
test
dec
add
gs
cmp
push
inc
stos
push
outsb
jge
jae
mov
push
mov
into
lret
data16
add
push
adc
add
or
mov
mov
ljmp
xor
dec
dec
mov
cmp
cmp
aam
lea
fnstcw
sub
outsb
cmc
push
cs
dec
pop
jbe
mov
or
cmp
jmp
andl
xchg
pop
push
in
hlt
std
xchg
cmpl
cmp
sub
mov
xchg
ret
pop
and
mov
mov
adc
ja
nop
movsb
add
add
jo
hlt
dec
jne
adc
test
ja
and
sub
insb
xchg
pop
ljmp
sbb
ds
mov
ja
dec
inc
add
or
mov
mov
xchg
imul
or
shrl
pop
jmp
fs
orb
inc
cwtl
in
xor
push
inc
sbb
xor
inc
mov
push
jmp
or
jl
jo
xor
mov
sbb
jg
cmp
add
fisttpll
sub
fcmovnb
cwtl
xchg
in
mov
clc
xchg
subb
aam
cmp
inc
mov
sarb
pushf
rcl
xlat
rep
popf
in
out
mov
insl
scas
jle
pop
adc
and
cli
mov
int
adc
pop
xchg
out
inc
or
add
enter
or
cld
mov
enter
inc
xor
jg
rcrl
push
sbb
pop
loop
hlt
loope
dec
xchg
mov
repz
sub
mov
jecxz
adc
pop
insl
test
fs
out
das
add
lds
sub
pop
adc
out
es
js
insl
and
cmp
cmpsl
xchg
inc
fstpl
icebp
ljmp
mov
mov
sbb
outsl
insl
inc
sti
sub
mov
cmp
jne
loope
test
in
inc
dec
cwtl
inc
jg
ficomps
in
test
fsubrl
push
adcl
fnclex
outsb
test
fsubrs
pop
fs
inc
push
fcom
test
sub
ljmp
pop
sub
shrl
pusha
mov
inc
push
cmp
adc
sbb
test
push
sub
jg
push
xchg
ds
jmp
mov
fcoms
sahf
sub
push
add
test
push
xor
mov
fwait
icebp
inc
cmc
xorb
cs
nop
filds
push
js
mov
dec
loopne
lds
cmpsb
push
add
iret
and
or
dec
insl
outsl
data16
hlt
xor
xor
dec
cmp
push
outsl
bnd
mov
test
out
stc
dec
outsl
pop
mov
adc
repnz
cmp
or
jge
jns
scas
inc
les
sub
jno
pop
lods
stc
pop
stc
loope
rorl
pop
sahf
pop
cmpb
mov
imul
push
xchg
jb
cs
fsubrs
fs
mov
fistpll
movsb
jle
jne
je
jle
xor
test
mov
rclb
ljmp
in
dec
cltd
fnstenv
rcll
push
xchg
push
in
inc
rclb
enter
es
lds
loope
popa
dec
or
or
dec
push
inc
lea
xor
mov
mov
adc
mov
xchg
das
cmpsl
leave
pop
mov
into
mov
jae
pusha
sub
and
cld
arpl
mov
push
and
sbb
in
dec
pop
pop
pusha
xor
stos
jle
xor
push
sbb
cld
sbb
dec
jnp
les
inc
xchg
es
push
nop
cmp
inc
sbb
cmp
xlat
fnstenv
lock
inc
or
dec
les
stos
lea
xchg
fmull
repz
decb
add
mov
jns
xchg
pop
mov
mov
dec
xchg
jno
testl
jo
ficompl
loopne
sbb
call
scas
dec
fldt
scas
adc
imul
mov
push
bound
add
or
xor
xlat
and
popf
add
dec
mov
mov
jne
and
test
mov
imul
insb
cmpsl
add
inc
pop
or
lret
ffree
xor
push
adcl
aas
push
xor
ljmp
mov
das
scas
dec
ret
sahf
push
fisubrs
xor
aas
outsb
adc
mov
loop
mov
inc
comiss
inc
sbb
ljmp
fsubrs
jno
sub
xchg
pop
and
cmp
cmp
das
popa
andl
inc
dec
in
mov
push
rclb
jmp
scas
jbe
mov
mov
inc
ret
cmp
adc
dec
push
dec
dec
into
pushl
fildl
mov
rorl
or
pop
or
jns
pushf
sub
cmp
or
pop
flds
movsb
lock
mov
mov
fcmovnb
mov
mov
in
add
aam
pop
les
push
adc
or
repz
sub
sbb
inc
aaa
xlat
jo
shll
bound
or
sub
sbb
dec
mov
push
sub
mov
pusha
mov
arpl
popa
daa
adc
lock
jp
and
mov
mov
pop
adc
or
into
out
scas
and
aas
lds
aas
cmp
scas
push
or
fisttpl
jnp
mov
hlt
push
pop
push
dec
insb
shlb
sub
xchg
repz
or
cmp
or
les
push
inc
call
scas
jo
imul
in
clc
int3
sahf
jecxz
daa
incl
dec
jp
pop
inc
es
aas
mov
das
pop
pop
pop
inc
popf
fistps
movsb
lea
rolb
jb
mov
dec
mov
push
xor
aad
mov
and
inc
push
frstor
rol
shlb
mov
nop
sub
or
inc
xor
sub
mov
movsl
dec
or
or
mov
into
aam
pusha
mov
mov
inc
push
jecxz
push
cmp
cmp
rol
clc
out
and
xchg
pop
dec
xor
dec
in
lret
out
or
lret
add
or
sbb
and
push
xorl
repnz
icebp
cltd
mov
add
adc
xchg
test
pop
cli
push
and
iret
jno
sbbb
fxch
mov
pushf
cmp
adc
inc
xchg
sbb
jnp
xor
lods
fistpll
hlt
pushl
lret
jle
testl
stos
dec
loopne
jne
push
add
sbb
lahf
test
mov
mov
dec
aaa
mov
or
in
and
inc
jp
mov
aas
lods
mov
leave
shll
outsl
shlb
adc
jmp
or
lea
or
mov
lea
add
xor
push
push
frstor
insl
dec
adc
test
cmp
pop
adc
push
pop
insl
popf
ret
inc
pop
dec
push
dec
out
xchg
add
pushw
jo
sbb
fstl
loop
inc
and
and
mov
mov
adc
sub
cwtl
vfrczpd
outsb
test
cmpsb
inc
cmpb
imul
scas
xchg
jmp
inc
push
adc
sub
dec
inc
push
rolb
inc
inc
data16
xorl
mov
aam
stos
sahf
push
pusha
and
pop
test
push
push
clc
add
jnp
or
subb
cmc
and
js
lods
adc
les
push
xchg
mov
mov
outsl
pop
in
rorb
or
push
dec
cmp
add
fs
negb
out
cld
mov
imulb
insw
fsubl
movsb
dec
pop
frstor
pop
pop
and
xchg
cld
std
imul
mov
cld
lret
adc
sub
popa
imul
or
enter
out
sbb
pusha
xor
sbb
xchg
sub
mov
in
jp
cld
jne
and
sbb
je
cwtl
sbb
fcompl
in
out
jno
jb
xorb
loopne
and
cmp
xchg
mov
call
ds
in
adc
lret
sbb
arpl
xor
addr16
mov
mov
push
sub
inc
mov
sahf
leave
inc
mov
or
inc
cmp
sub
cmp
out
jnp
int3
cli
xchg
es
fldl
rorb
lods
pusha
ja
stos
loope
push
add
adc
adc
stos
pop
insl
cmp
ds
fdivl
popl
pop
pop
icebp
jne
add
jg
icebp
push
sub
nop
adc
pop
rcrl
push
push
mov
jmp
jg
dec
add
inc
jo
testl
cwtl
mov
add
cmp
push
leave
mov
cmc
jg
mov
ljmp
mov
dec
clc
adc
jle
addr16
arpl
mov
sbb
lds
test
xchg
sub
int
movsb
pop
or
cmpsb
inc
scas
mov
pop
sahf
sbb
lcall
inc
xchg
xor
mov
xor
xor
sbb
in
pop
mov
lret
das
or
rcrb
cs
shrb
lea
sbb
mov
pop
int3
cmovo
pop
adc
sbb
mov
add
mov
pop
repnz
mov
lock
inc
adc
outsb
inc
sbb
cmpsl
or
divps
mov
dec
cmp
cli
inc
xchg
cmpsb
fsubrs
dec
add
hlt
movsb
divb
dec
add
adc
in
mov
xchg
clc
pushf
movsb
jo
cmp
xor
pop
adc
test
movsb
adcb
inc
inc
dec
int3
inc
insl
fmull
arpl
jl
leave
or
mov
push
sbb
inc
mov
push
mov
jbe
mov
js
mov
push
add
clc
add
and
push
inc
jno
cmpsb
cmp
clc
push
dec
insl
ja
shl
inc
outsb
out
inc
pushw
mov
test
cwtl
stos
outsl
daa
or
lock
lcall
lods
add
in
sahf
lahf
xor
add
xchg
push
xlat
mov
ja
or
pop
push
jg
push
or
and
fiaddl
imul
mov
out
hlt
dec
lcall
mov
aad
and
mov
imul
lret
arpl
dec
pop
test
cli
push
jbe
add
xchg
add
mov
aaa
and
loopne
xchg
scas
xchg
inc
ljmp
bound
ljmp
fisubrs
sbb
or
sub
mov
mov
movsl
push
orb
je
dec
dec
adc
mov
pop
test
repz
inc
jmp
xor
shrb
jo
jp
mov
dec
lods
push
pop
mov
sub
cmc
adc
stc
rorl
inc
xor
out
mov
cmpsb
push
jmp
mov
jp
mov
inc
xchg
xorl
jo
cli
movsb
outsb
mov
lock
inc
lock
and
xchg
pop
test
xchg
mov
js
dec
adc
adc
jae
inc
lcall
popf
mov
jecxz
cli
adc
gs
idivl
mov
jns
adc
xlat
xchg
or
push
cmp
faddl
mov
frstpm(287
push
pop
xchg
push
int3
xchg
clc
in
push
das
push
or
and
bound
adc
imul
push
sub
mov
mov
mov
les
aaa
or
inc
mov
movl
sub
out
pop
lret
inc
sbb
mov
hlt
adc
fstpl
xchg
fbstp
sub
push
fucomi
sub
mov
lret
adc
or
push
icebp
mov
lahf
ret
fnstsw
pop
xor
xor
mov
xor
push
mov
cwtl
loopne
cwtl
mov
loope
add
pusha
out
jo
mov
shrb
xor
int
or
hlt
push
pushf
rorb
xchg
mov
jmp
sti
xlat
gs
loope
sbb
adc
in
jmp
push
xchg
frstor
or
jnp
jnp
mov
dec
sub
mov
incb
or
mov
pop
pop
rol
mov
imulb
mov
jno
adc
rorb
add
cs
scas
in
and
out
pushf
xlat
ljmp
pop
inc
and
jg
mov
ret
dec
push
push
je
add
pop
pop
dec
inc
es
je
and
dec
jo
rcll
pop
mov
add
inc
mov
jne
mov
inc
out
ret
xchg
xor
mov
mov
mov
inc
ja
dec
mov
xor
scas
sbb
sub
xor
and
mov
adc
or
pusha
dec
xchg
sub
adc
call
mov
mov
or
cwtl
xor
movsl
lcall
cmp
jp
cld
movsl
cmp
and
pop
dec
mov
jno
cmpsl
inc
cmp
jns
mov
or
mov
aaa
pop
pop
dec
jbe
mov
ret
or
cltd
or
lock
stos
jg
nop
cmp
ret
stos
jnp
or
stc
andb
shl
mov
test
sbbl
mov
pop
jne
lcall
push
sub
nop
sbb
adc
mov
cwtl
cwtl
bound
inc
shll
inc
decl
xchg
adc
inc
cmp
pusha
test
call
jl
mov
lods
inc
mov
mov
popa
fwait
outsb
jmp
js
or
ret
adc
rcll
cld
pusha
imul
xchg
mov
adc
mov
or
adc
dec
bound
mov
cmp
jp
sbb
inc
cmc
pushf
push
mov
add
xor
bound
leave
pusha
cmp
sub
test
incl
sbb
loopne
or
inc
jg
jge
push
push
iret
cmp
aas
fs
and
sub
jnp
xorb
add
in
das
sti
out
add
sbb
sahf
in
lcall
clc
loope
add
mov
push
and
jg
or
add
cmp
out
adcl
fsubl
stc
adc
aam
cltd
sbb
cmp
sbb
outsl
sbb
jbe
mov
cmp
je
or
stos
jge
fldt
and
outsb
aas
push
ss
push
xchg
adc
adc
loop
loop
pop
loopne
push
xchg
jge,pn
addl
into
jnp
jo
sbbb
loope
mov
inc
and
sub
aam
and
sahf
add
push
push
sub
cwtl
outsb
dec
lock
lahf
scas
mov
cmp
mov
sub
mov
xlat
or
or
pop
movsb
movsl
push
fcomi
jecxz
push
shll
loope
mov
dec
jno
dec
popa
inc
add
out
lret
pop
clc
scas
push
loope
negb
shlb
nop
cltd
stos
lret
sbb
ret
push
dec
jmp
std
cs
insb
or
sahf
push
fidivl
rorb
ja
or
fwait
sub
js
repnz
js
or
addr16
mov
push
scas
or
int3
data16
out
shlb
jnp
sbb
mov
xor
or
testl
adc
adc
xor
je
jno
sub
rorb
jo
push
js
lret
cltd
pop
or
pusha
sbb
push
inc
test
sahf
jecxz
sbb
push
int
xchg
xchg
adc
enter
pushl
lock
outsl
sub
dec
mov
sbb
push
nop
in
and
popf
xor
test
decl
pop
mov
das
pushl
and
loope
lods
testl
out
add
pop
and
pop
or
stos
jmp
cmp
in
test
pop
pop
inc
jo
pop
cmp
idiv
mov
cmp
lcall
xchg
bound
fimull
test
popa
mov
stos
pop
dec
ljmp
add
adc
inc
sahf
data16
mov
pop
sbb
dec
or
xchg
stc
mov
xchg
xor
or
xchg
mov
xchg
push
pusha
loop
lds
and
jmp
add
xchg
aam
fwait
add
inc
sbb
push
push
pusha
mov
xchg
inc
xor
popf
out
aad
jno
sub
xor
add
push
mov
sub
mov
scas
cmp
std
xchg
mov
aad
xor
push
popa
mov
sbb
cmpsb
push
test
mov
and
test
add
sbb
xor
icebp
repnz
push
repnz
bound
ja
mov
dec
inc
dec
push
sub
adc
dec
outsb
or
scas
outsb
or
or
add
cmp
mov
inc
mov
sbb
adc
xor
and
std
and
cmp
adc
sub
pop
add
sub
test
sarb
inc
imul
in
jo
fwait
call
sbb
std
enter
pop
out
mov
insb
xchg
xor
push
xchg
mov
and
push
pushl
fstpt
outsl
mov
shrb
sub
stos
nop
test
jmp
xor
adc
jl
ljmp
xor
out
jo
dec
cmp
add
and
push
add
std
xor
int3
push
loopne
push
push
cmp
addb
adc
adc
mov
add
outsl
imul
movsl
imul
sar
jbe
mov
aas
add
lea
pop
lock
ret
sbb
movsb
push
xchg
cmp
ret
sub
add
mov
rorb
ret
mov
loopne
data16
mov
jmp
jmp
scas
xor
pop
add
sub
mov
inc
sbb
and
test
add
dec
xchg
jo
call
jae
sbb
aas
loopne
lods
mov
sbb
or
fldt
jg
mov
dec
xchg
sub
mov
sbb
mov
dec
adc
mov
cli
xchg
sub
push
popa
popa
jge
and
enter
leave
sbb
addl
repnz
cmp
or
insb
inc
cmp
nop
jo
mov
outsl
scas
fs
sub
test
xchg
mov
adc
rcll
adc
rorb
mov
add
xchg
lret
daa
and
js
rorl
fistpl
pop
adc
push
inc
sbb
sub
pop
add
inc
push
jb
xchg
push
mov
push
sub
mov
sub
mov
repz
or
dec
mov
and
mov
lock
xchg
mov
sahf
dec
inc
pop
mov
jle,pn
int
inc
mov
sbb
fcmovu
or
sbb
pushl
cld
repz
test
jo
fldcw
xor
dec
dec
bound
pop
pop
add
adc
inc
lock
arpl
pop
adc
loope
push
outsb
and
cltd
xor
push
pop
add
sub
incl
leave
dec
lods
cs
pop
jl
xchg
inc
and
test
andl
or
bound
push
ds
adc
adc
xchg
test
loopne
xorps
adc
inc
jb
xor
cmp
inc
aas
xor
sarl
loopne
call
push
scas
pop
test
push
xchg
sub
push
inc
inc
inc
cmp
push
pop
and
mov
lret
inc
adc
mov
mov
jl
jo
sahf
inc
jp
sbb
sub
jmp
and
in
mov
mov
rcl
sbb
xor
jb
flds
mov
add
xorb
test
mov
cmp
pop
mov
inc
jp
pop
push
jecxz
push
mov
push
clc
dec
test
xor
cs
push
test
cmp
xchg
adc
lock
xor
sub
sbb
fidivs
adc
cli
add
xor
mov
test
sub
pop
arpl
push
adc
leave
ficoml
rorb
jge
hlt
lcall
fisttpll
stc
cmp
dec
jecxz
adc
mov
adc
add
pop
mov
and
lcall
push
jp
gs
aad
add
iret
sbb
add
out
imul
sbb
and
pusha
bsr
jp
cwtl
add
xor
inc
pusha
pop
dec
adc
inc
enter
cli
mov
or
jecxz
lret
aas
decl
pop
xchg
or
inc
add
mov
out
or
popa
repz
stos
inc
shrb
leave
cli
aaa
stos
add
mov
adcb
push
lock
rcll
stos
adc
jle
push
stc
in
int
pop
cmp
hlt
jle
cltd
cmp
popf
mov
xchg
mov
out
jnp
popf
cltd
xchg
jnp
adc
sub
jle
push
test
or
push
movsl
xlat
adc
hlt
pop
nop
push
mov
xor
pop
dec
push
xor
jecxz
xchg
cmp
and
jno
pop
jmp
xor
mov
adc
inc
add
pop
hlt
les
fimull
daa
push
arpl
ficompl
jg
jnp
pop
jg
fcoms
xchg
push
sub
ljmp
movsb
imul
test
loopne
ljmp
adc
or
xor
insl
lret
lods
xchg
adc
push
dec
fs
addb
sub
add
paddsw
pop
mov
or
ret
outsb
push
push
or
fwait
push
lahf
cwtl
movsl
jbe
movsl
add
push
adc
rcll
add
sub
or
sub
xchg
mov
push
push
add
or
jecxz
cmp
iret
mov
add
or
xchg
scas
xor
dec
pop
add
adc
ret
ror
jnp
mov
sbb
cmc
xor
cld
mov
aad
mov
adc
popa
adc
mov
cld
add
inc
daa
loope
sub
adc
lahf
fcmovnu
push
pop
xor
push
pop
dec
mov
or
aad
push
jge
fcoms
or
lock
shrl
icebp
cwtl
sbb
pop
push
dec
jmp
mov
jae
and
xlat
add
sbb
and
push
aam
add
aam
jne
mov
lret
add
and
fsts
stc
test
test
orb
popa
xor
pop
sub
ljmp
dec
mov
add
aad
or
pop
adc
jp
push
mov
pop
add
outsl
push
fcos
inc
xchg
shll
imul
sbb
sbb
aas
jns
popf
mov
mov
int
pop
cli
mov
push
enter
or
fidivl
mov
cmpsb
fidivrl
push
or
test
outsl
stos
sbb
or
ret
inc
call
mov
and
mov
test
rcl
movsl
lret
inc
js
out
test
jmp
cltd
clc
push
fs
and
sub
in
adc
fadd
scas
dec
sbb
popa
rcrl
cmp
incb
loope
push
stc
push
push
sbbl
jle
ret
icebp
nop
jns
pop
xchg
and
jecxz
sbb
pop
std
xor
lret
movsb
pop
mov
pop
jl
cmp
in
out
jge
mov
insl
adc
hlt
pushf
mov
call
hlt
jmp
pop
popa
lret
and
stos
mov
xor
ljmp
imul
frstor
inc
ds
or
dec
lret
xchg
adc
and
jp
jecxz
add
ja
out
add
mov
xor
mov
xlat
mov
push
dec
lds
daa
sub
flds
and
jbe
roll
cmp
leave
std
inc
lahf
call
and
popf
mov
push
das
aam
inc
pop
popf
mov
lea
dec
das
jo
not
add
or
jmp
dec
jne
sbb
imulb
or
inc
loope
jg
pop
ljmp
rcrb
jg
and
hlt
jecxz
push
jno
shlb
int3
add
mov
jge
cld
cmp
cmp
movsb
add
add
fdivs
sub
lahf
rol
jae
leave
loopne
inc
add
arpl
loopne
adc
and
pop
mov
pusha
call
jne
dec
insl
pop
scas
dec
pop
fstpt
ljmp
mov
jmp
das
sub
insb
call
xchg
pushf
mov
cmp
ljmp
dec
sbb
cltd
jp
or
pop
inc
pusha
inc
or
hlt
popf
xlat
nop
in
cmc
mov
mov
sub
dec
jno
fimuls
and
push
inc
scas
push
sbb
inc
mov
mov
lcall
repz
pop
xchg
repnz
es
push
in
and
pushf
push
mov
enter
xor
xor
dec
ljmp
aam
stos
cwtl
stos
je
fsubrl
fmuls
dec
pusha
and
xor
nop
and
rcrb
icebp
pop
test
mov
int
dec
xchg
repnz
adc
lahf
aam
cwtl
imul
push
mov
movsl
into
lea
dec
loopne
or
jns
cmc
xor
dec
jle
and
pop
pop
call
mov
cmpsl
rcll
les
out
or
andb
dec
sbb
movsl
mov
lods
xchg
or
dec
clc
sub
adc
mov
and
mov
jns
loopne
repz
rorb
cmp
push
push
mov
sub
cmp
ret
test
hlt
fchs
pusha
lcall
xchg
out
or
incl
jp
outsb
inc
clc
adc
xor
cmp
add
rclb
negl
adc
mov
dec
ret
orb
sub
iret
sbb
adc
or
cmpsl
ja
repnz
mov
insb
lock
push
cld
fldt
inc
push
inc
pop
inc
dec
add
add
jl
sub
pop
dec
imul
insl
imul
ret
sub
pop
adc
push
out
sbb
cmp
adc
cmp
push
hlt
sbb
gs
into
scas
enter
das
shrb
add
dec
push
mov
insl
xor
mov
insl
outsl
add
add
cmp
jnp
ret
gs
inc
ja
fimull
es
loope
lock
js
mov
jg
scas
dec
scas
outsb
or
fcoms
movsb
pusha
sub
mov
xor
xor
inc
sub
popa
or
shrl
div
ret
add
scas
inc
ss
cld
xchg
or
cld
add
sbb
adc
outsl
mov
pop
insl
cmpsl
js
push
cli
pop
dec
push
loope
inc
jmp
lret
push
adc
js
and
loop
mov
or
xchg
fcomps
mov
mov
jne
jmp
mov
mov
mov
in
xor
imul
xor
inc
aas
test
lea
xor
inc
dec
mov
hlt
add
das
cld
push
xchg
push
data16
add
lock
sub
stos
pop
push
adc
nop
int3
lock
xorb
mov
cld
out
ss
adc
or
test
into
jle
lock
popf
test
push
sub
push
ret
xchg
shlb
inc
inc
mov
add
add
or
rcrb
or
sub
loop
xor
test
nop
and
fcmovbe
push
js
sub
test
xlat
aam
jo
and
push
ljmp
cmp
and
inc
sarl
repz
lds
mov
cmp
ret
fs
popf
popa
ret
push
xchg
jne
mov
popa
add
lahf
icebp
cs
xor
outsb
clc
adc
les
push
mov
daa
lock
jns
adc
in
andl
loope
jmp
mov
cmc
jge
test
and
jno
mov
sub
test
push
add
andb
push
fnsave
adc
lea
jno
clc
js
ret
int
sbb
mov
aad
sahf
sub
rcrl
pop
mov
add
mov
sarl
pop
lahf
adc
sarb
mov
adc
test
cltd
repz
sbb
fcmovbe
rcr
push
movsb
cmp
sub
rorb
sub
aad
xor
inc
jl
nop
adc
bound
loop
push
into
out
jo
cmpsb
add
sbb
int3
xchg
and
mov
mov
popa
pop
jecxz
jp
popa
clc
aam
iret
popa
dec
pop
pop
cli
pop
out
or
enter
cli
jecxz
shlb
andl
into
jnp
loope
xorl
cmc
aaa
je
fbstp
push
inc
ret
mov
stos
sub
and
adcl
inc
subl
push
cmc
lahf
xor
in
push
lret
test
ja
mov
jecxz
jg
out
inc
nop
mov
orl
std
xchg
and
lret
das
push
sbb
mov
jns
dec
mov
loopne
push
enter
xchg
sub
cmc
aas
sbb
push
fldcw
adc
aad
lret
rcr
jo
sbb
int
into
mov
bound
or
xor
mov
inc
fcmovnb
and
stos
mov
sub
fimuls
les
or
ficoml
xchg
mov
jo
cwtl
dec
mov
sub
jecxz
xor
arpl
jp
push
repz
sarl
sbb
out
nop
sbb
fwait
adc
stc
and
mov
push
mov
sbb
hlt
push
inc
and
mov
arpl
movsb
lcall
push
ret
ror
addr16
adcb
cld
test
loope
sbb
push
imul
cmp
lret
inc
pop
mov
dec
gs
adc
pop
stc
jl
js
cmp
or
int3
ret
js
pop
rclb
inc
push
movsb
or
push
pop
aad
sbb
dec
enterw
xor
sbb
mov
fisubl
sub
jbe
aam
xchg
cmp
cltd
jo
cld
pop
faddl
dec
mov
aaa
sbb
mov
bound
adc
ret
and
sbb
test
xchg
jae
jno
or
sarl
pop
sub
pop
jecxz
shlb
dec
test
mov
ret
sub
adc
pop
sbb
inc
outsb
idivl
fistpll
xchg
pop
add
ss
pop
les
and
addr16
cmp
push
push
call
movsb
jo
sbb
pop
mov
test
test
lahf
pop
sbb
mov
cmp
fcomp
sub
inc
mov
in
pop
jae
and
pop
push
sub
fs
stc
push
jno
movsb
rcll
in
jecxz
sub
inc
sub
movsb
and
pop
inc
adc
pusha
imul
cld
or
push
mov
jmp
inc
xorl
mov
std
xchg
xchg
push
pop
into
les
mov
mov
and
adc
js
push
dec
push
sbb
lahf
or
fiadds
sub
xchg
pop
dec
fwait
cmpl
and
out
jl
add
ljmp
out
fsub
and
adc
sub
or
fs
imul
cmpsb
jp
jne
push
cmp
jp
movsl
cmp
rclb
daa
pop
xchg
xchg
or
ljmp
mov
ficoms
test
stc
inc
add
mov
divl
or
sbb
cs
mov
push
pop
mov
lret
lods
aaa
popf
sbb
lea
or
jne
push
outsb
jnp
or
ret
es
sbb
sub
mov
lahf
ret
or
and
add
jecxz
adc
cmpsl
pop
je
adc
adc
mov
cld
imul
incl
push
call
loop
gs
stc
imul
or
sbb
push
cmp
push
imul
push
xchg
in
mov
shrb
rolb
and
bound
movsb
or
fdivs
int3
lea
lods
mov
repz
xor
in
inc
cmpsl
inc
dec
adc
dec
mov
insl
adc
or
aas
js
sub
rolb
sbb
pop
jae
adc
ret
stos
ret
mov
int
sub
dec
mov
test
icebp
lds
dec
loope
mov
icebp
jno
push
sub
ss
movsb
push
fcomp
add
pop
arpl
fs
mov
and
add
ljmp
js
ss
sahf
mov
xchg
mov
or
sbb
das
jge
cmpsb
cmpsl
jge
add
cmpl
xor
inc
loopne
test
pop
add
and
xor
xchg
pop
and
lret
ja
insb
les
pop
lock
lods
adc
test
sub
cld
rcrl
inc
adc
pop
mov
or
insl
andb
push
pop
lret
mov
movsb
cmpsl
inc
or
inc
push
sub
or
inc
xchg
cmp
ss
test
leave
xchg
adc
and
testb
aam
add
lcall
jnp
sahf
xor
flds
and
cmpb
std
mov
es
xchg
xchg
mov
inc
pop
fldl
and
sub
aas
stos
loop
fcomip
enter
and
inc
arpl
notb
fisubl
dec
in
lods
jmp
pop
shll
bound
leave
and
and
pop
xor
data16
mov
pop
nop
pop
xchg
test
lea
lcall
jmp
jl
enter
dec
sub
cmc
add
mov
sub
adc
add
ja
mov
popf
inc
sar
dec
mull
and
inc
sub
je
adc
xor
pusha
sbb
mov
and
in
adc
jne
add
adc
add
jne
out
stos
jge
cld
ret
jno
inc
push
sbb
or
stos
loopne
or
adc
jne
lret
sbb
dec
pop
dec
xor
pop
pop
jbe
jecxz
enter
test
or
push
inc
jb
daa
inc
inc
rcl
add
xchg
faddl
mov
push
jle
or
mul
dec
and
pushf
jo
mov
inc
xchg
xor
mov
test
mull
jbe
adc
shlb
loop
popa
sub
mov
and
mov
pop
or
repz
xor
movsb
inc
stos
or
enter
cli
dec
and
cwtl
aas
je
add
mov
popa
cmp
outsl
jns
fmuls
add
sub
push
test
out
mov
daa
dec
sub
ljmp
std
popa
mov
cwtl
xor
pop
add
clc
rcl
pop
mov
ja
in
mov
fldcw
inc
pop
dec
mov
inc
pop
mov
sbb
clc
ljmp
and
sahf
fld
mov
pop
rorl
out
mov
mov
adc
cltd
xchg
call
outsl
das
mov
subb
lret
add
jae
lcall
pop
cld
add
out
add
stos
stos
mov
mov
xchg
xchg
pop
lret
insl
pusha
arpl
mov
mov
jbe
add
mov
sahf
add
add
mov
or
fdivrs
ss
sahf
dec
xchg
add
loope
loopne
movsb
xchg
push
lods
cmp
or
aaa
sub
nop
test
sub
fwait
inc
loopne
cmpsb
pop
mov
mov
pusha
dec
push
add
dec
or
push
jne
icebp
add
mov
xchg
stos
and
mov
and
dec
jnp
lea
or
stc
repz
pusha
pop
test
cmpsb
add
jne
mov
inc
rcr
aas
sub
scas
fnstenv
call
push
adc
jo
dec
icebp
or
push
aam
sub
push
clc
loope
jo
push
push
popa
in
and
dec
add
pop
sbb
fimuls
inc
inc
and
fcomps
imul
add
push
adc
add
sbb
ja
jae
sarb
mov
mov
and
xchg
xchg
scas
adc
mov
mov
xor
jo
sub
mov
dec
cld
jne
stos
insb
sahf
xchg
jb
movsl
cld
xchg
das
inc
pushf
adc
lret
mov
test
lods
loopne
popf
push
sub
in
hlt
test
adc
hlt
imul
cmovbe
dec
insb
push
scas
pop
fwait
dec
xchg
mov
cmp
ret
shl
mov
adc
xorb
mov
std
cld
loopne
adc
ret
mov
shl
dec
decl
movsb
add
ds
dec
subb
loope
dec
orb
sbb
and
xor
out
scas
mov
mov
lret
or
out
imul
fdivl
cltd
std
ja
jnp
ss
cs
dec
sbb
sbb
mov
jne
sub
repnz
jne
jns
sbb
mov
sub
ss
out
mov
sbb
mov
pop
or
or
and
mov
outsb
sbb
enter
cmovl
jo
inc
lock
or
ror
insb
mov
or
push
xlat
mov
mov
lock
movsl
adc
lds
mov
push
mov
movsl
push
sbb
mov
mov
pop
ja
in
and
insb
sub
jl
mov
bound
lret
bound
enter
add
add
jecxz
test
pop
push
add
pop
add
std
sub
push
fwait
mov
jmp
sbb
jge
loope
add
push
jnp,pn
mov
mov
loop
ret
ja
rcr
popa
cmp
out
inc
shrd
push
push
nop
xchg
push
int3
jle
popa
call
arpl
jp
out
lret
jle
jl
dec
inc
loopne
clc
cld
int
scas
mov
mov
aad
xchg
lret
or
mov
fildl
dec
push
jle
insb
js
add
sbb
push
rol
aas
gs
imul
sbb
dec
xorb
loope
xchg
dec
out
adc
out
ficoml
incl
mov
pop
push
imul
arpl
add
xor
push
insl
inc
cmc
stos
push
dec
mov
push
cmp
mov
cmp
dec
jl
and
dec
shll
bound
mov
or
sub
adc
mov
sbb
in
pusha
jecxz
popf
and
cmp
rolb
pop
push
pop
sbb
sti
out
gs
les
lock
js
mov
mov
les
outsl
cmpsb
imul
pop
popf
jo
inc
test
std
mov
std
loope
adc
jmp
ja
ficomps
mov
sbbb
scas
nop
and
pop
sbb
cld
mov
pop
in
xor
pop
stos
push
aas
mov
dec
popa
or
cltd
andb
dec
jge
mov
lods
sub
ja
insb
sbb
sub
cmpsl
or
add
or
loop
jo
add
pop
pop
movb
add
jae
dec
xor
mov
jge
mov
adc
ja
arpl
cmovl
jno
fbld
test
sbb
sub
pop
dec
imul
je
cmp
inc
popa
dec
sbb
adc
sti
cmc
adc
cltd
dec
sub
add
xchg
testl
and
xchg
dec
xor
mov
dec
ljmp
les
jecxz
inc
adc
mov
ret
mov
mov
fsubrs
jns
in
sete
stos
mov
fs
pushf
push
cmp
imul
cmp
rcrl
dec
into
in
loopne
add
pusha
fcmovnu
stos
cs
leave
das
in
fimuls
lcall
cli
call
in
pop
bound
fwait
push
jne
lock
mov
adc
push
dec
xchg
mov
dec
ret
lds
scas
push
fmull
push
xor
leave
add
push
xor
ss
mov
inc
and
pop
push
pop
add
inc
mov
es
xchg
inc
cmpsb
lds
stc
les
cmpl
xorl
test
cmp
test
mov
sbb
jg
cmp
out
ret
xor
push
test
dec
lret
lods
lret
jbe
fmuls
fs
mov
inc
out
xlat
movsb
sub
xor
icebp
pop
out
in
push
pop
rolb
into
imulb
xchg
cmpsl
xchg
dec
sub
mov
adcl
push
adc
loop
test
dec
out
ror
aam
imul
cmpsb
loopne
sub
and
adc
cmp
mov
sbb
popa
and
cld
mov
sbb
cltd
movsb
push
adc
popa
adc
push
stos
orl
scas
xchg
jmp
add
mov
cmpsl
les
aad
in
cmc
sarl
rolb
xchg
mov
das
pushf
daa
mov
repz
orb
popa
test
sub
jno
mov
jl
xchg
imul
ljmp
outsb
cltd
push
pop
mov
lahf
and
pop
jbe
mov
nop
cld
mov
fnstcw
cmp
mov
stos
mov
push
pop
jg
push
adcl
inc
out
or
cwtl
and
ds
mov
popa
adc
rorb
sbb
dec
push
clc
mov
stc
shr
dec
adc
sub
xchg
mov
inc
mov
fnsave
mov
push
cmc
mov
out
mov
aas
cmp
sbb
xchg
fnstcw
and
fmul
in
xchg
adc
adc
push
add
add
push
inc
imul
mov
add
mov
mov
mov
cmp
jb
lock
outsb
ret
flds
mov
xor
pop
test
push
push
les
adcl
loop
sbb
pusha
in
ds
loopne
cld
inc
sub
cwtl
pushl
adc
rolb
scas
cmp
std
cmpsl
lcall
and
clc
dec
loop
bound
xchg
cmpsb
mov
sbb
sbb
inc
cmp
mov
push
pop
add
xlat
fcmovb
je
loop
enter
jbe
leave
shrb
daa
es
sarb
adc
loop
cmp
loop
add
rcrb
clc
mov
divb
adc
jo
cmc
fsubs
jg
mov
fisubs
sub
lds
push
daa
call
daa
les
jbe
dec
or
idiv
cwtl
sub
cmp
pop
aaa
add
setne
movsb
mov
mov
pop
repnz
jmp
pop
xor
js
scas
popa
sub
dec
js
xorb
outsb
sub
es
mov
and
jnp
cwtl
hlt
pop
mov
arpl
lods
adc
or
fs
movsl
dec
push
aam
popf
sub
mov
mov
iret
fs
mov
stos
scas
pop
pusha
xchg
in
les
jle
lds
sbb
mov
movsb
push
das
lret
sbb
dec
clc
mov
adc
iret
sbb
loope
pop
bound
xor
aaa
adc
and
xor
loope
and
push
mov
mov
testl
and
add
loopne
lret
popf
loope
mov
int
je
lods
push
test
in
cmp
sbb
imul
stos
hlt
pop
xchg
sbb
push
js
cmpsl
dec
sbb
ret
sub
push
inc
xor
xchg
sbb
mov
sub
fidivrl
ja
aad
lahf
pusha
lret
sarb
rcr
aas
adc
lahf
mov
push
pusha
sub
mov
push
or
jmp
shll
pusha
lcall
ret
jns
sbb
imul
aas
cwtl
cmpsb
xchg
mov
gs
push
push
test
daa
inc
outsl
jae
sbb
sub
push
data16
jecxz
cmp
inc
xor
add
int3
xor
mov
xchg
xchg
and
adc
in
lock
inc
sub
clc
mov
subps
loop
ss
aaa
aam
fsubr
repz
cli
jo
jnp
sub
jnp
mov
out
jb
mov
mov
cmp
mov
xor
push
fwait
jl
outsl
loop
scas
cmpsb
not
adc
inc
jbe
ficomps
adc
add
add
jne
or
sub
adc
or
aaa
xor
js
dec
push
rorl
notb
or
pop
lods
pop
sar
push
adc
and
jns
and
mov
outsl
inc
roll
fisubrl
pop
pushf
sub
mov
push
add
insl
xor
xor
mov
aaa
lea
cmp
int
lds
add
mov
lods
adc
adc
cmpsl
iret
cmp
ss
aad
mov
jle
cmp
xor
gs
xchg
push
test
mov
in
pop
repz
jg
sub
and
inc
gs
mov
mov
orb
xchg
cs
pop
imull
mov
mov
push
lock
shlb
movsb
add
mov
xchg
sub
add
dec
xor
inc
insl
inc
cwtl
callw
pop
je
mov
mov
sbb
jle
push
sbb
dec
sbb
orb
das
cwtl
pop
and
jno
inc
jbe
sub
fwait
push
pop
sub
mov
in
test
adc
mov
xchg
xlat
test
jmp
add
ret
sbb
dec
mov
mov
mov
int3
push
mov
dec
clc
lods
fnstenv
pop
push
mov
mov
ds
and
push
dec
lret
test
fbstp
push
xlat
sahf
cmp
sbbb
fstpt
mov
add
add
push
pop
add
cli
fidivs
cmp
sti
movsb
or
jecxz
cmp
pusha
push
sub
filds
adc
icebp
add
add
mov
push
pusha
xchg
fs
push
xchg
mov
jbe
in
push
js
flds
lock
cmp
add
hlt
cmp
iret
mov
sbb
dec
int3
jo
clc
nop
test
std
pop
dec
sbb
push
push
fwait
jo
adc
dec
push
es
push
push
add
in
scas
xor
and
addr16
inc
mov
and
je
outsl
and
push
adc
call
test
enter
roll
dec
lret
mov
cld
pop
mov
push
cwtl
adcb
sub
mov
xorl
jb
or
adc
inc
add
loopne
sub
adc
or
jg
rcrl
rorb
cli
pop
in
insb
dec
mov
push
pop
xor
sbb
mov
les
sbb
loopne
sbb
pop
test
mov
add
call
pop
xchg
mov
fdivrs
repnz
mov
icebp
mov
jecxz
testl
xchg
into
js
rcll
push
enter
pushf
repz
add
sub
sarb
pop
jae
and
popl
cld
and
add
psubusb
daa
and
xchg
sbb
cwtl
lock
add
je
xor
aas
sub
jl
outsb
xchg
sbb
and
scas
xor
xchg
loop
sbb
ret
in
push
inc
rolb
hlt
push
xor
data16
dec
pop
cld
mov
add
in
xor
pusha
add
dec
pop
mov
adc
out
cmp
and
xor
shrl
lds
push
inc
roll
mov
rcr
or
sub
add
ja
mov
sub
xchg
add
push
push
movsb
test
dec
lcall
cmp
xchg
cs
sub
scas
add
stos
mov
mov
dec
mov
fsubrl
daa
push
out
inc
mov
sbb
sahf
lods
push
test
popa
cmpb
xchg
mov
xchg
sub
insl
das
mov
lea
sti
fimuls
int3
in
inc
lds
mov
dec
dec
pop
jne
mov
imull
mov
lret
mov
mov
sbb
addr16
fcompl
pop
popf
or
lahf
sbb
jge
ret
in
imul
arpl
or
dec
mov
hlt
mov
ficomps
cmpsl
sahf
cmp
push
or
outsl
or
or
call
pop
and
push
sahf
sub
sub
mov
xchg
push
bound
outsl
push
loopne
pop
and
repnz
add
jge
cs
add
lds
jb
pop
lahf
jmp
mov
lods
cmp
and
xchg
mov
jecxz
aas
les
push
nop
pop
or
sbb
ficomps
les
loop
sub
sbb
push
pop
subl
push
push
inc
mov
add
das
fistl
cmpsl
rcr
movsb
in
enter
jle
cs
int
sbb
adc
jl
aas
and
sbb
cmp
add
mov
fimull
xor
sti
dec
aad
push
inc
jl
popl
push
popf
ret
clc
jno
ficomps
mov
shrb
icebp
sub
or
xchg
and
or
test
sbb
out
test
sub
ret
andb
xor
xor
rorl
jg
pop
ljmp
mov
stos
addl
addl
mov
loopne
jb
cmp
jbe
cli
push
xchg
sub
adc
push
inc
adc
out
push
inc
mov
shl
push
pop
call
stos
popa
int3
lds
mov
pop
in
mov
cli
fldl
sub
mov
test
fistps
lret
cs
and
sub
or
fsubrl
cltd
iret
adc
pop
fisttpll
nop
mov
nop
iret
cli
rorl
test
and
mov
pusha
mov
xor
mov
rcll
add
fisubl
test
xlat
and
loop
scas
pop
adc
in
into
movsl
push
fwait
lock
adc
inc
push
xor
jae
cwtl
add
jp
push
jg
pop
push
sub
dec
or
jbe
or
adc
decl
adc
and
inc
shlb
mov
push
push
adc
xchg
push
adc
cli
data16
inc
jp
std
or
divb
fsubrp
movsl
das
push
roll
lods
sbb
lods
mov
jno
pop
test
sub
loop
xor
xor
arpl
int
imul
push
pop
icebp
in
pop
movsb
sti
xor
mov
cmp
push
js
pop
adc
xchg
data16
sub
add
clc
xchg
pop
xchg
push
cmp
pop
mov
add
xor
pusha
mov
stos
push
icebp
mov
lock
cmovle
xor
pop
and
jns
mov
add
inc
movsl
or
jecxz
clc
adc
pop
stos
aaa
pop
loope
fldl
xchg
insl
inc
jo
adc
pop
mov
add
fmull
data16
and
test
push
popf
shr
dec
or
jbe
lret
fisttpll
cld
orb
mov
cmc
sub
push
fsubl
sub
test
adc
es
movsl
jno
les
dec
das
mov
or
add
add
dec
popf
out
xchg
movb
add
mov
test
mov
push
cmp
xchg
enter
lods
mov
pop
lcall
outsl
add
and
jne
cmc
adc
aas
lea
jle
mov
mov
scas
jno
add
sub
cmpsb
jmp
push
loopne
sub
leave
cmp
dec
cmp
sub
mov
inc
jle,pt
cmc
mov
xor
lahf
cmp
or
jp
hlt
jns
sbb
xchg
push
add
sbb
pop
and
adc
push
in
push
movsl
in
ds
mov
inc
stos
mov
popf
xchg
cmp
jge
aam
insl
jnp
mov
xor
push
aaa
jo
subl
push
jg
add
add
push
mov
iret
test
pop
bound
mov
lahf
cltd
dec
mov
cmp
sar
insl
ficoms
dec
sti
and
adc
push
mov
add
cwtl
jne
test
es
xor
ss
xchg
mov
nop
stos
or
cmovb
mov
xchg
fsubs
push
jae
adc
sub
std
xor
pop
pop
jno
add
mov
adc
arpl
scas
add
in
dec
cmp
push
mov
xor
push
cwtl
rorb
xchg
sbb
aas
adc
icebp
push
cmp
stos
xchg
and
jg
addl
sbb
dec
inc
fists
fnsave
les
mov
inc
call
in
out
jmp
xor
add
inc
shll
push
ss
dec
xor
add
push
dec
popa
lock
jg
andl
lods
aad
pop
xlat
mov
cmp
insb
mov
mov
mov
push
mov
popf
sbb
les
mov
arpl
xchg
popa
test
dec
adc
out
cmp
lahf
pop
xor
arpl
out
aad
inc
popf
inc
ljmp
jno
mov
jb
jge
mov
mov
push
or
mov
daa
and
cmp
adc
rol
mov
adc
xor
add
je
pop
fiaddl
data16
mov
push
dec
mov
scas
dec
push
pop
test
lahf
mov
xchg
ljmp
jae
sbb
shr
fistps
iret
roll
mov
sub
lds
jecxz
js
je
int
ret
dec
mov
push
jne
push
mov
dec
pop
adc
lock
pop
add
pop
sbb
add
icebp
pop
mov
in
into
lock
test
pop
in
cmpsl
xchg
int3
mov
sub
mov
ret
or
push
mov
dec
adc
adc
aam
push
lds
lock
stc
inc
bound
inc
sub
test
dec
jne
pop
into
fisttps
add
gs
ja
dec
loope
call
lret
add
inc
ret
hlt
subl
sti
inc
out
scas
rcrl
aad
or
inc
push
cmp
ret
cld
ja
inc
mov
add
ljmp
fsub
xchg
xchg
cld
cmp
mov
enter
mov
xor
pop
add
and
adc
add
pop
jg
jecxz
shll
popa
aaa
subb
jno
xchg
pop
mul
ds
dec
and
or
popa
sub
out
add
and
or
addr16
xchg
stos
mov
push
cmc
pop
clc
popa
and
adc
push
cmc
stos
out
push
inc
adc
mov
fcomps
xor
cmp
loop
xor
jp
in
dec
into
mov
cmp
and
push
insl
pusha
push
aaa
sbb
adc
fcompl
mov
jecxz
test
add
xor
inc
iret
scas
notb
repz
shl
push
mov
mov
and
xor
dec
push
ret
xor
cmp
mov
sbb
push
dec
pop
mov
adc
dec
add
stos
add
sahf
sbb
lahf
push
or
pop
dec
cmp
dec
cmp
sub
or
cmp
popa
out
xor
jl
nop
and
push
fistl
cltd
ljmp
sub
add
icebp
test
std
xchg
je
sub
loop
and
sub
pop
out
fsubrs
lods
inc
cmp
mov
std
shll
jo
movb
mov
and
test
cmp
fdiv
ljmp
jo
dec
int
or
stc
dec
in
sbb
js
or
ja
sbb
pop
inc
xchg
aam
push
jmp
or
xor
mov
sub
or
mov
sub
in
bound
or
scas
push
or
popa
and
and
jg
xchg
fdivrl
xchg
cmpsl
jne
dec
or
sub
xchg
std
jp
arpl
test
mov
add
push
daa
add
les
js
xor
sbb
rcr
jo
rorl
int
mov
mov
adc
sub
dec
in
rorb
pushf
xchg
fdivs
addr16
je
les
mov
push
sbb
insb
push
fisubrs
pusha
sbb
adc
adc
dec
jmp
ljmp
push
jp
lods
inc
sub
pop
mov
nop
push
push
dec
enter
sbb
mov
and
daa
cmp
push
rcl
icebp
leave
sbb
test
imul
aad
mov
loope
cmpl
sahf
stos
dec
lret
cmp
lcall
jns
cmpsb
jo
push
xor
sbbl
or
inc
movhps
jnp
insl
hlt
stos
adc
xchg
es
inc
adc
scas
push
jp
adc
xor
jmp
fnstcw
pushf
push
mov
leave
mov
pop
je
in
mov
mov
mov
mov
cwtl
or
fists
cmp
popa
sbb
imul
jp
xor
pop
fisttps
xor
jo
adc
xlat
fs
mov
xchg
cmp
popa
sub
xchg
pop
scas
add
orb
aas
inc
fnstcw
sbb
and
enter
popf
ret
enter
retw
or
fnsave
popf
mov
cmc
not
add
ljmp
mov
outsb
ljmp
push
and
mov
push
popf
lcall
fwait
adc
cmpsl
push
popa
adc
xchg
mov
addr16
aaa
lret
orb
movsl
or
mov
out
sbb
dec
rcrl
fisttpl
mov
and
dec
dec
je
mov
xchg
sub
sbb
xor
test
cwtl
inc
or
mov
hlt
stos
cmp
bound
shrl
iret
xor
es
jbe
test
and
add
xchg
add
pop
jnp
notb
add
push
adc
pop
ss
sbb
loopne
fiadds
mov
ret
and
inc
sub
mov
xchg
push
cmp
inc
pop
xchg
rorb
je
adc
adc
je
mov
lahf
inc
mov
add
xchg
ljmp
bnd
loopne
inc
adc
outsb
cmp
xchg
aad
dec
insl
sbb
sbb
sub
dec
inc
in
xor
and
mov
nop
inc
fisttpl
add
shl
movsl
pop
cmovs
jl
pop
cmp
mov
mov
rcrb
lea
mov
cmpsl
xchg
add
mov
lock
ds
xchg
mov
pop
pushf
das
loopne
add
mov
cmp
int3
mov
sbb
jnp
mov
sub
into
clc
pop
stos
in
mov
inc
inc
mov
shlb
inc
stos
add
pop
ja
clc
xchg
add
rorb
fstps
pop
mov
lea
xor
jl
mov
push
fcoml
aad
shrb
mov
xlat
pop
in
adc
inc
xor
sbb
xor
cmpsl
or
adc
jp
mov
lods
in
cmpsl
push
cmc
xchg
aad
push
or
mov
lahf
jmp
aaa
sbb
add
iret
jle
jns
or
inc
jne
rcl
in
fsubs
outsl
out
push
dec
adc
inc
ficomps
inc
dec
sbb
mov
adc
ljmp
mov
inc
shll
adc
incl
adc
dec
mov
mov
pop
pop
js
repnz
push
push
or
pushf
subl
les
xor
popa
imul
sbb
mov
cmp
or
fsubrs
clc
mov
jle
or
mov
orb
ljmp
insl
repz
aaa
mov
fs
leave
shlb
nop
mov
mov
scas
mov
xchg
inc
cvtpi2ps
pop
sbb
movsl
fs
roll
xchg
adc
inc
adc
popa
adc
int3
mov
fwait
xor
xor
sbb
fdivrl
mov
lea
insb
loop
test
pop
sub
push
orl
data16
sub
cvttps2pi
xchg
xor
fcomp
add
xor
popa
cmp
push
mov
mov
push
push
mov
dec
pop
daa
sub
aas
push
cmpsb
xor
lock
dec
add
shrb
addr16
xchg
dec
rolb
orb
fistpl
jmp
push
call
adc
aad
cltd
mov
cs
adc
stos
xchg
insb
aaa
loop
push
mov
xor
insl
sub
pusha
and
xor
dec
jns
lock
fs
in
ret
xchg
adc
lret
dec
cmp
jae
in
sbb
jmp
xchg
push
pop
jmp
jo
sub
call
dec
sub
add
call
mov
add
dec
and
je
and
pop
pop
mov
cmp
or
adc
iret
push
aaa
and
mov
push
dec
mov
and
cmc
data16
push
lcall
ja
cwtl
adc
outsl
mov
fistpl
loop
lea
xchg
mov
adcl
xchg
mov
or
hlt
xchg
add
out
pop
add
pop
popf
imul
add
pop
push
loopne
call
sbb
add
push
test
xor
or
pop
stos
cmpsl
and
in
rorl
mov
push
cmc
test
loop
daa
jae
and
daa
repz
push
aam
sub
cli
or
inc
dec
mov
mov
in
dec
and
xbegin
es
or
push
cmp
xchg
andl
push
add
inc
rolb
mov
adc
or
fidivrs
or
push
bound
mov
repnz
xor
fsts
pop
lods
cmp
icebp
aam
aaa
sbb
es
outsl
sbbl
mov
cmp
insl
mov
dec
outsb
pop
leave
es
test
adc
pop
xchg
cmp
ja
jle
in
js
je
cli
mov
jae
mov
out
mov
mov
mov
sti
in
int3
cmp
adc
push
pop
addb
mov
bound
frstor
push
ss
and
adc
cmpsb
mov
push
or
cmp
cmp
push
pop
je
dec
loop
je
mov
ss
mov
mov
clc
jge
lahf
in
popa
popf
push
insb
fldl
imul
rorb
sbb
sub
aaa
cmp
adc
inc
add
pop
dec
je
dec
or
out
jle
mov
fs
push
pop
js
ss
add
fstl
shlb
jge
daa
xchg
andb
repz
int
mov
sub
lret
insb
jmp
incb
out
addr16
call
add
ret
ljmp
pop
push
pop
mov
xchg
iret
add
pop
push
inc
lds
pop
pop
jo
mov
stos
sub
imul
jge
inc
cltd
jo
out
inc
mov
xor
xchg
rclb
dec
pop
daa
sar
adc
mov
bound
andb
je
out
mov
andps
push
mov
add
xor
lds
inc
ss
scas
mov
mov
insb
jg
sub
out
outsb
jb
xor
ja
inc
sbb
mov
fwait
cmp
dec
nop
mov
push
add
adcl
jno
inc
data16
sbb
add
movsb
sbb
test
das
lret
adc
rcl
xor
mov
or
into
add
ds
mov
push
loopne
dec
lods
jl
dec
cmp
aas
lock
out
jge
xchg
dec
dec
loopne
test
add
xchg
loope
daa
jge
mov
xlat
mov
ds
add
or
loope
and
dec
add
xor
jge
push
push
push
jmp
adc
imul
je
sbb
cmp
and
jns
fwait
pushf
lcall
popf
rorl
daa
xor
jle
add
push
cmc
mov
out
sub
pop
loopne
xchg
jmp
inc
addr16
dec
mov
cmp
les
xlat
xlat
shlb
xchg
sub
dec
or
cld
mov
cmpsb
adc
or
jg
cld
add
mov
xchg
xchg
mov
add
fisttps
jmp
imul
jmp
ds
daa
dec
and
sbb
into
mov
push
and
je
mov
mov
sub
orl
cmp
jbe
and
in
xchg
mov
insl
fcomip
jnp
mov
cmpsl
mov
dec
inc
push
in
pop
ret
or
pop
mov
sbb
and
mov
mov
pop
scas
in
jbe
sarb
gs
jb
mov
int3
xchg
shrl
cmp
lock
movsb
outsl
adcb
sbb
xor
xchg
pop
mov
movsb
leave
mov
pop
icebp
faddl
push
insl
jg
pop
lods
aam
stos
das
pop
repz
fistpl
sub
mov
push
cmp
add
xor
inc
inc
into
sbb
mov
scas
xor
jb
clc
xor
add
popl
sbb
and
mov
pusha
cli
add
dec
dec
or
enter
ljmp
movsl
outsl
push
ljmp
adc
sbb
xor
test
sbb
inc
imul
mov
lret
pop
dec
mov
and
inc
xchg
push
or
jl
or
sub
jne
add
push
or
jnp
call
loop
pop
mov
and
inc
add
rclb
or
jg
jg
push
pushf
popa
xchg
mov
or
push
jbe
and
mov
das
add
call
mov
or
pop
cli
clc
scas
xchg
jmp
les
call
sub
add
pop
out
inc
inc
add
mov
cs
test
push
loop
popl
gs
xor
cld
mov
inc
dec
mov
es
je
inc
mov
push
and
lds
push
inc
cs
mov
sub
push
orl
es
scas
pop
xor
xchg
push
in
add
bound
lods
cmp
rolb
dec
mov
mov
je
inc
adc
inc
xchg
sbb
ret
and
popa
jbe
xchg
aam
insl
std
xor
lds
jno
cmovge
daa
jno
push
xchg
ss
cmp
xchg
sahf
ljmp
int
pop
jle
jmp
dec
mov
and
int3
lret
inc
ja
repnz
lock
loopne
mov
mov
sbb
and
test
clc
in
test
je
pop
jbe
xchg
dec
ds
leave
pop
mov
jl
loopne
jp
jge
and
mov
out
lret
lods
pop
xor
mov
ds
mov
cmpl
lahf
mov
test
insl
aaa
das
dec
loop
aas
adc
mov
cmp
lahf
jae
push
scas
mov
or
mov
jecxz
outsb
jecxz
mov
dec
add
add
popf
imul
mov
push
pop
xor
lahf
insb
add
pop
mov
arpl
ljmp
adc
sub
test
rolb
insl
xorl
aad
outsb
xor
and
popf
push
push
dec
mov
push
lcall
xor
inc
cmp
imul
cmpsb
loope
mov
cs
stc
dec
sub
add
mov
lock
xor
lods
xor
adc
lock
enter
push
pop
pop
addl
xor
lret
fchs
pop
stc
icebp
mov
and
and
rolb
jp
add
lock
fcomip
inc
inc
clc
sahf
xor
mov
xor
mov
mov
mov
and
out
shrb
jle
add
adc
mov
and
jae
jne
rep
popa
adc
mov
ret
inc
push
ds
jb
rclb
aad
je
sub
pop
inc
jl
rcrb
jge
pusha
sub
je
and
icebp
mov
jno
fdivrl
push
fdivs
int
xchg
mov
pop
push
add
clc
clc
hlt
movsl
mov
inc
or
cmc
rcrl
ds
jl
jle
adc
mov
jp
loope
xor
shr
loop
mov
pop
cli
lcall
mov
sbb
sbb
cmpsl
xchg
cli
pop
lods
call
pop
leave
dec
stc
push
inc
xchg
pop
mov
mov
mov
ja
fwait
cmp
xchg
and
jle
sbb
and
inc
sbb
cmp
mov
mov
mov
push
and
push
testl
std
cs
jg
or
adc
push
push
add
jno
lahf
mov
or
or
cs
xchg
scas
cmp
fwait
jg
test
mov
les
cmovl
neg
xchg
adc
xchg
push
jo
loopne
mov
dec
inc
fstps
xchg
hlt
adc
and
loopne
mov
inc
idivb
jne
sbb
rcrl
rcl
pusha
sahf
mov
cli
pop
stos
hlt
add
sub
fcoms
xchg
and
inc
mov
sahf
inc
call
push
outsl
jp,pn
add
inc
clc
iret
test
or
imull
lock
or
out
inc
jg
insb
sub
daa
and
into
mov
gs
xchg
clc
call
mov
call
in
loopne
out
mov
cmp
aam
or
jle
fmuls
test
cmc
insb
sbb
or
fcomp
mov
sahf
mov
sbb
call
mov
imul
mov
adc
mov
cmc
mov
sub
add
xchg
fwait
int3
mov
push
fstl
cmpsl
dec
pop
mov
push
pop
jl
stos
add
loopne
push
cmp
xchg
mov
shll
sub
add
sub
inc
outsl
mov
dec
int
cmc
scas
cmpsb
cmp
popa
int3
push
mov
adc
jg
and
sbbb
shr
mov
mov
inc
inc
cld
sahf
xor
loope
jo
nop
pushl
xchg
sarl
adc
inc
lods
xchg
mov
lods
push
cmp
adc
xor
dec
aad
fldenv
or
sub
cmp
mov
lods
pop
or
mov
je
fstpl
leave
ds
stos
sti
sub
ret
pop
add
dec
fsubrl
xor
or
and
push
ja
subl
or
adc
xchg
addr16
or
ret
adc
dec
mov
inc
push
in
and
sbb
in
add
jmp
imul
cmpsb
or
pushf
imul
in
mov
test
pushf
bound
into
bound
push
add
push
mov
ss
dec
mov
nop
inc
ds
mov
jae
mov
and
xchg
je
arpl
mov
cmp
push
loope
popa
sub
or
cltd
mov
xor
leave
jno
push
cmp
add
imul
mov
pop
and
dec
icebp
dec
adc
xchg
daa
test
cmp
xor
jecxz
cli
sbb
out
ja
cmpsb
cmc
nop
jmp
dec
mov
hlt
dec
fwait
mov
jge
mov
andb
push
cmp
out
push
xor
lret
and
or
pop
sbb
js
sbb
jle
es
or
adcl
fs
xor
xchg
nop
je
insl
pop
add
cmp
mul
shrl
or
inc
icebp
dec
adc
aas
jecxz
fdivs
ret
fstpl
adc
cld
cmp
jle
mov
pop
or
pop
movsb
and
pop
cmp
mov
ss
repz
push
iret
popa
pop
sbb
insb
std
lods
pop
je
call
lret
js
and
sub
jae,pn
inc
jae
mov
shrl
imul
out
adc
cmp
fldenv
cld
lods
add
inc
fcoms
or
jle
inc
sbbl
outsb
shr
jo
mov
mov
and
fisubrs
cmp
aaa
minps
adc
popf
push
dec
mov
jmp
inc
lds
add
test
sub
add
ret
das
std
insw
lea
push
stos
outsl
fdivp
add
mov
xorl
hlt
aaa
outsl
jp
fs
lock
or
jb
stc
jl
adc
jge
repnz
clc
cmp
in
std
add
fwait
mov
cmp
fucom
fwait
jecxz
xor
inc
or
xchg
loopne
shlb
jmp
jno
aas
test
out
lods
repnz
dec
mov
cmp
testb
push
jmp
sub
adc
pushf
inc
inc
fimuls
dec
or
cwtl
mov
imul
push
fiaddl
xor
scas
mov
rcrb
add
xor
clc
fistl
rolb
mov
adc
outsl
ss
cmp
mov
fcmove
pop
sub
ror
in
fsub
pop
negl
leave
push
xor
hlt
lcall
jecxz
loop
or
cmp
ret
adc
pop
inc
jbe
aam
mov
imul
mov
mov
push
fiadds
sbb
mov
inc
repz
stos
movsb
push
scas
mulb
xchg
cli
mov
das
jmp
fidivs
xchg
sbb
mov
ds
add
sbb
sbb
or
inc
inc
inc
das
inc
jecxz
fldl
mov
dec
dec
pop
loop
mov
and
adc
stc
xchg
mov
rol
nop
pop
ret
mov
popa
dec
inc
aaa
adc
je
xor
in
xor
popa
pop
in
xlat
xchg
or
cwtl
push
fwait
push
outsl
sbb
cmp
cmp
and
mov
stc
inc
popa
push
scas
push
inc
xor
inc
cvtpi2ps
sbb
stos
mov
pop
fsubrs
cmp
xchg
sbb
push
mov
push
in
mov
rcll
mov
dec
mov
divl
adc
sbb
xor
pop
shlb
nop
cld
push
add
lcall
mov
stos
scas
mov
sub
sub
sub
xor
jle
pop
stos
mov
push
add
mov
pop
lcall
add
lea
push
mov
popf
enter
nop
popf
adc
push
data16
mov
into
clc
aam
pop
es
push
dec
fs
loopne
daa
sub
mov
push
pop
into
dec
testb
int3
push
cmpsl
bound
mov
outsb
xor
dec
mov
fisttpl
shlb
push
mov
push
orl
imul
lahf
adc
push
sbb
pop
dec
and
test
pop
inc
cmp
and
xchg
orl
xor
popa
mov
xor
js
push
or
mov
inc
xchg
lea
sbb
push
pop
je
popa
ret
repz
add
clc
hlt
lods
mov
in
add
push
stos
fdivrs
sbb
into
cmp
movsl
stos
int
push
xchg
test
fcoml
mov
or
loope
nop
lock
stos
push
test
push
cmp
sbbb
add
mov
and
adc
pop
jno
jg
push
jnp
and
pop
jle
add
push
cmp
sbb
ret
hlt
add
push
bndldx
mov
add
adc
test
inc
sarb
fldenv
es
insb
dec
andl
jecxz
or
sbb
sti
mov
push
and
dec
inc
clc
jae
cld
das
cmc
jae
stos
lcall
ret
outsl
or
jecxz
outsb
bound
jae
mov
das
add
xor
cwtl
or
mov
mov
push
jmp
sub
mov
ss
js
or
dec
fadd
sahf
aad
js
lods
shrl
cmpb
shlb
imul
int
pop
ret
cmp
xchg
out
sub
cmpsb
xchg
pop
inc
das
aad
lods
adc
int
shrb
rcrl
fistpl
pop
fldcw
mov
xchg
pop
xchg
pop
pop
imul
push
shr
mov
aas
mov
scas
loope
test
mov
sub
adc
stos
jg
enter
shll
inc
repnz
mov
push
ret
mov
add
mov
jns
mov
inc
pop
sarb
and
sub
jo
mov
aam
dec
jb
scas
mov
and
pop
pop
icebp
push
cld
enter
sbb
cmpsl
icebp
in
mulb
push
ret
jo
sub
into
ja
or
into
scas
sarb
jno
jb
scas
and
inc
fldcw
fiadds
or
mov
add
fisubrs
call
or
das
xor
dec
and
mov
vxorps
push
pop
xlat
push
sti
and
imul
adc
mov
cs
and
inc
mov
test
inc
add
xor
pop
fstl
jb
in
adc
lret
mov
cwtl
adc
mov
loopne
lods
xchg
xchg
xor
push
dec
cwtl
pusha
jae
sub
pusha
add
or
sbb
lret
inc
mov
sub
mov
pop
jae
outsb
inc
mov
mov
or
adc
push
mov
and
jp
repz
insb
push
mov
rolb
inc
adc
and
aas
lcall
lea
cwtl
in
mov
repnz
mov
push
inc
ss
ret
mov
dec
setno
sbb
out
and
je
ljmp
xchg
cmp
adc
and
cs
dec
pushf
push
adc
xor
add
xchg
push
inc
ljmp
inc
sti
inc
sbb
add
add
add
or
decb
add
mov
insl
pop
fmuls
or
and
insl
mov
adc
adc
pop
or
adc
cmp
adc
bound
loope
cltd
xorl
gs
jb
gs
xor
cs
xor
ds
add
pop
ja
jbe
les
and
mov
addb
out
mov
fstps
and
or
or
or
and
shlb
shrb
ss
sbb
rolb
add
jb
insl
int3
lods
cltd
fstl
jle
sbb
inc
or
je
inc
data16
into
or
pop
pusha
xchg
imulb
xchg
cs
inc
jbe
addw
xor
pusha
adc
mov
push
orb
les
sbb
mov
int3
add
mov
jo
fdivrs
jle
jbe
dec
and
clc
add
jbe
shr
or
repnz
mov
push
test
inc
mov
ret
mov
aaa
mov
ret
mov
sbb
xor
test
pusha
add
and
cs
sbbl
mov
sbbb
pusha
xchg
cwtl
sbb
inc
bound
ret
pop
pop
insb
insb
add
ja
in
mov
xchg
sbb
mov
xchg
insb
sbb
js
add
pop
cwtl
fld
cltd
mov
inc
mov
insb
aam
jp
cmp
or
adc
pusha
add
divb
mov
and
les
rolb
xchg
lods
pusha
orb
inc
inc
inc
shlb
push
sbbb
addb
mov
clc
push
and
push
add
mov
fsub
rorb
mov
dec
jo
fdivp
cmp
or
ret
ficoml
mov
cmp
ret
lods
pop
test
inc
add
fcomps
loop
and
sbb
add
mov
adc
mov
sub
into
adc
dec
sub
dec
mov
jl
imul
ret
aam
test
inc
repnz
ja
roll
add
pop
mov
test
int3
cmp
mov
dec
inc
mov
sub
sbb
popf
out
inc
jo
and
test
inc
or
int
insl
cli
enter
inc
lock
out
cmp
inc
cmpsl
xchg
dec
xor
push
divb
addb
cmp
push
cmpsl
xlat
lock
and
cmp
js
cmp
adc
and
clc
or
mov
mov
and
hlt
push
clc
mov
jle
inc
add
roll
pushl
stos
sbbl
mov
into
add
jp
fldenv
int3
jl
movsb
or
or
stos
fdivp
xor
shlb
jo
add
pop
insl
push
sbbl
jb
imul
mov
arpl
imul
jne
jb
inc
js
push
outsb
insb
outsl
ljmp
imul
jae
push
inc
mov
outsl
outsl
insb
push
xor
popa
fs
insb
adc
gs
gs
stos
sti
incb
lock
push
cmp
xor
push
cld
imul
out
and
jp
xor
jb
outsb
je
cld
ficomps
or
push
mov
in
jne
pop
mov
pop
es
popa
insl
gs
fidivs
inc
jbe
pusha
jo
push
push
movb
jnp
insl
jo
push
ss
push
inc
sbb
movb
fisubrs
bound
popa
jo
mov
mov
addr16
mulb
dec
sbb
je
push
outsb
inc
adc
add
adc
push
addr16
pop
lock
dec
jae
imul
push
jnp
imul
add
and
pushf
sub
jae
sbb
and
jo
adc
dec
jne
bound
pop
je
adc
xchg
ja
mov
fs
outsl
mov
push
je
stos
dec
outsl
fs
sub
gs
ja
xorl
sub
dec
xchg
outsl
outsb
imul
mov
sbb
dec
dec
ret
insb
movswl
fs
insb
jne
push
roll
adc
popa
arpl
inc
outsb
jne
daa
enter
mov
pop
inc
shrl
xchg
inc
mov
test
xor
outsb
lods
push
shlw
jae
cwtl
outsb
mov
sub
dec
mov
push
pushf
ret
outsb
adc
push
pop
pop
add
imul
pop
xorl
sbb
xchg
mov
cmp
cmp
push
arpl
and
jnp
jne
data16
sub
lock
mov
jb
inc
mov
addl
movsb
push
loopne
sbb
jo
mov
mov
out
cmpsl
jmp
addb
jo
insl
out
mov
push
cs
dec
pusha
out
sbb
mov
daa
insb
out
mov
pushf
jo
push
dec
inc
push
cmp
pop
rcl
adc
push
imul
xchg
stos
cli
lock
pusha
out
push
or
or
aad
ds
fimuls
ds
push
dec
mov
in
push
icebp
fidivrl
fs
sbb
push
mov
pop
lds
xchg
push
mov
mov
ss
fs
cmp
iret
xchg
insb
outsl
push
jne
and
xchg
lods
push
dec
cmpsb
push
adc
mov
push
sbb
pusha
fistpll
push
inc
cmpsb
mov
mov
fs
pop
das
sub
arpl
inc
push
test
outsb
fld
xor
movsl
inc
pusha
mov
xor
pusha
mov
inc
add
orb
mov
test
rclb
out
rcll
subb
mul
cmp
daa
xchg
popa
je
inc
mov
mov
inc
adc
inc
mov
mov
imul
ret
cmpsl
xor
mov
shlb
dec
gs
inc
outsl
mov
add
aaa
dec
xor
push
push
push
pop
pusha
iret
sub
ret
and
orb
xor
dec
mov
dec
xchg
dec
adc
jbe
ret
jp
pushf
and
jb
sti
sahf
lds
sub
movups
dec
inc
adc
movsb
lea
dec
shlb
lods
sub
jne
sbb
inc
or
dec
mov
sub
adc
add
sbb
outsl
les
arpl
dec
inc
fisubrs
cltd
rcll
adc
adc
pop
insb
daa
inc
pop
movsb
aad
jg
das
push
jb
dec
imul
in
pusha
xchg
pop
sub
movsl
mov
out
adc
into
mov
outsl
data16
sbb
enter
cli
adc
xor
or
xor
fs
push
and
pop
push
mov
and
add
addr16
jo
cmp
dec
insb
sbb
imul
and
jle
ds
cmp
dec
inc
mov
inc
dec
push
push
push
inc
mov
inc
xchg
mov
fiaddl
jnp
je
adc
xorb
sbb
xchg
ds
je
in
pop
sub
arpl
pop
fisubl
mov
lahf
pop
sub
call
or
xor
pop
iret
inc
outsb
adc
loopne
push
push
pop
adc
loope
ja
xchg
add
mov
pop
xchg
data16
xor
es
es
popa
imul
pop
fsubrl
sbb
push
outsl
imul
mov
push
mov
mov
add
pop
inc
insb
push
outsb
int
add
and
push
jo
mov
or
or
inc
xor
and
outsl
jo
or
and
xchg
movsb
clc
lods
jo
inc
mov
rcll
sarb
cmpsb
mov
cs
jo
dec
cmc
arpl
mov
dec
loopne
mov
push
loop
adc
sub
into
cld
push
lea
push
sub
sbb
lock
push
mov
adc
add
pop
loopne
or
insl
loopne
add
mov
sbb
out
nop
add
pop
and
scas
sti
jnp
pop
add
add
dec
lret
add
cmpsl
mov
add
xchg
dec
lock
pop
cmpsb
rolb
add
inc
mov
sahf
sub
cs
setbe
xlat
add
adc
inc
mov
enter
cmpsb
fistl
add
jp
out
mov
inc
add
dec
push
dec
mov
in
dec
sahf
push
mov
sahf
jae
jnp
imul
movsl
aaa
inc
xchg
das
mov
dec
xchg
and
add
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
