add
dec
outsl
popa
fs
imul
add
ret
mov
add
outsl
push
and
rcrb
xor
xchg
aad
es
fsubs
cld
mov
jle
inc
lock
shlb
insb
push
in
rolb
and
testb
mov
rolb
jb
inc
scas
sub
xor
sbb
mov
mov
mov
pop
jns
xchg
lods
cmpb
inc
pusha
add
jg
decb
pusha
jp
inc
inc
pop
dec
pop
pop
jl
sub
cld
movl
add
pusha
call
bt
sub
push
push
push
lea
jmp
jp
mov
cmp
mov
test
and
xchg
jno
int3
andl
gs
sub
xchg
pop
sbb
mov
hlt
fdivrl
or
push
shlb
les
movsb
loop
sbb
add
pop
inc
add
push
hlt
cli
mov
or
add
push
addb
pop
lret
call
lea
andl
ss
add
addr16
insb
outsl
jae
dec
gs
call
pushf
inc
stc
ror
movb
stc
test
clc
neg
sub
jne
cmc
stc
cmp
cmp
movsbw
lahf
call
sub
inc
lea
gs
sbb
push
mov
mov
test
test
fsubs
adc
pop
iret
jge
sbb
pop
xor
stc
out
fucomp
sub
and
add
sbb
inc
sbb
xor
imul
mov
sbb
mov
cmpb
rcrl
push
mov
aam
push
xor
std
neg
jle
idivl
pop
sbb
dec
xor
mov
jo
push
dec
out
loope
stc
repz
sub
addb
cs
cmp
inc
or
and
call
and
fcoms
push
in
xorb
mov
mov
pop
bswap
fld
dec
lea
lods
xor
sub
cmpsb
les
pop
and
lret
popl
cli
cmpsb
les
das
adc
add
popf
data16
mov
mov
mov
cmpsl
lods
fwait
popf
lahf
stos
aas
sub
das
dec
cmp
sbb
rclb
pusha
ficoms
jl
js
fs
or
je
cmp
push
push
sbb
push
jmp
jmp
rcrl
inc
mov
fmull
mov
out
fwait
jbe
sub
sbb
dec
cmp
jg
cmc
cli
cmpsb
sahf
shlb
inc
fbstp
jbe
fadds
popa
cli
cmpsb
lahf
insl
xchg
das
adc
movsl
fs
mov
in
rolb
loope
aad
stc
jecxz
fstpt
sub
pop
pusha
and
mov
icebp
into
test
test
insb
loop
ljmp
inc
jbe
fcomp
lahf
cmp
stos
ret
jae
in
pop
sbb
mov
adc
scas
scas
mov
addr16
cmp
mov
xorl
xlat
ja
cwtl
lods
mov
addb
push
sti
mov
sub
movsb
test
xor
pop
test
cmp
jl
inc
jle
jb
jp
pusha
daa
sub
lret
pop
mov
repnz
lahf
rcl
xorb
mov
sub
cmp
bnd
imul
jp
sub
push
mov
in
push
hlt
or
cmpsl
mov
dec
out
inc
fisubs
repnz
out
aas
sub
divl
push
jge
inc
jae
imul
scas
aas
sub
xchg
add
push
aas
pop
or
add
xor
cmp
aas
sub
push
fsts
dec
dec
inc
inc
push
push
xor
cs
insb
add
pushf
push
add
ljmp
fcompl
dec
lock
in
jbe
dec
enter
inc
pop
movsb
insl
inc
sbb
mov
push
test
fistl
mov
mov
dec
movsb
outsb
inc
inc
test
mov
mov
iret
sub
icebp
pop
hlt
scas
ljmp
cmp
cmpb
inc
rcl
ror
not
icebp
test
pop
pop
pop
jb
inc
push
int3
cli
lds
movzbl
mov
movsbw
lea
lea
mov
movzbw
pop
pusha
pusha
mov
push
lea
jmp
push
movl
pushf
pushf
pushf
lea
jmp
sub
ds
mov
dec
cld
inc
in
shrb
faddl
out
test
push
data16
dec
jg
xor
fadds
clc
loop
in
loope
or
and
and
dec
mov
push
xor
pusha
int3
sarb
mov
xchg
outsb
jo
outsl
cmp
adc
inc
adc
cltd
mov
out
sarb
cli
insb
adc
push
fisubs
or
push
cmc
sarl
das
adc
fwait
outsl
ss
and
enter
mov
sub
and
adc
or
or
add
or
pop
icebp
aas
sub
shrb
loop
test
lds
ret
out
adc
in
je
pusha
push
aas
sub
aam
fistl
ror
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lea
jbe
clc
sub
rcr
shl
pushf
mov
pusha
shrd
call
call
ljmp
mov
out
jns
dec
xlat
insl
lret
push
sti
inc
mov
sti
fcoms
push
fstpl
jae
shr
lods
lods
jmp
pop
js
mov
and
inc
push
xor
call
js
sub
lds
xchg
push
push
and
imul
fistl
push
sub
mov
jns
in
cwtl
ljmp
inc
dec
push
mov
jp
jbe
je
sub
hlt
mov
xchg
sub
cmp
jns
inc
jecxz
xlat
dec
jge
jns
rcll
fstps
xor
out
xor
test
jg
dec
dec
aas
or
into
xorl
dec
add
jnp
aaa
or
mov
or
push
pusha
adc
mov
hlt
jno
icebp
iret
aad
cmc
xlat
idivl
sub
jae
cmp
mov
pushf
clc
bt
and
cmc
bt
pushf
stc
add
lea
clc
clc
bt
add
pushf
dec
pusha
lea
jne
cmc
movzbl
and
pop
call
lcall
inc
cltd
mov
js
je
pop
push
pop
ljmp
imul
xchg
outsl
push
pop
pop
and
in
imul
popf
cwtl
adc
scas
xchg
rol
mov
mov
and
fisttpl
dec
mov
aas
sarb
mov
cmc
sti
shr
inc
loopne
ljmp
imul
cmp
scas
jno
mov
xchg
call
into
in
cli
lock
cli
idivb
sub
jb
ret
dec
push
push
dec
dec
dec
cs
push
push
add
incl
push
add
jecxz
jmp
test
or
sbb
xor
xor
jge
ficompl
mov
mov
mov
jle
js
decl
pop
cmc
call
and
data16
movsl
mov
das
das
adc
fiadds
mov
add
sub
sub
mov
stos
aas
sub
xor
mov
cmp
stos
pop
mov
add
lds
cmp
scas
stos
loopne
enter
mov
adc
testb
das
adc
cmp
stos
xor
lret
mov
xchg
pop
out
stos
sahf
and
movsb
pop
pop
loop
lds
push
mov
xor
cmp
jp
xor
sub
fs
push
mov
jb
movb
pop
sub
jge
out
fimuls
jge
push
and
sub
cmp
add
sub
mov
je
btr
not
add
cmc
dec
rcr
neg
mov
js
add
push
jmp
movw
mov
push
pushl
pushl
ret
rol
mov
pushf
or
clc
add
pushf
inc
add
jmp
mov
inc
fsub
jns
or
rcll
or
adc
add
mov
cli
sub
cmpsb
dec
mov
jg
cmp
sub
call
mov
jmp
rcr
fs
int3
jl
inc
add
add
cmc
shrl
sbb
xlat
shr
stos
xor
cmp
mov
stos
test
scas
mov
pop
jne
scas
and
mov
cmp
call
in
repnz
sub
jbe
sub
xchg
add
out
hlt
or
sahf
rorl
inc
lds
dec
jmp
in
inc
imul
bound
sub
mov
movb
sub
cld
add
bound
sbb
inc
add
rclb
insb
stc
mov
inc
stc
cli
mov
push
insl
adc
or
adc
push
xor
iret
inc
mov
dec
je
push
pop
jl
pusha
pop
aas
sub
loopne
pop
mov
rol
fnop
rorl
orb
cmp
push
sti
cwtl
outsb
out
repnz
fucom
mov
and
mov
push
cwtl
outsb
lock
cmpsl
movsb
cltd
outsb
pop
fildl
mov
addl
ds
mov
cli
sub
pop
outsb
ficoml
inc
push
jp
out
xchg
mov
cmp
nop
enter
xchg
mov
fld
xchg
jl
je
mov
rcr
std
ret
rol
out
fld
in
out
sub
insb
ja
inc
out
fldcw
fwait
add
mov
push
pop
test
call
pop
push
sbb
inc
les
xchg
in
jmp
repz
stc
mov
or
cli
mov
cmp
pop
sbb
xlat
sub
adc
push
nop
cli
mov
or
sub
test
mov
mov
jecxz
test
cmp
sbb
or
cmp
aas
sub
inc
test
sbb
push
lea
jne
push
mov
not
movb
pushf
lahf
cwtl
mov
bswap
lea
pusha
call
pop
add
mov
jp
inc
call
push
lock
call
add
cmpsb
jmp
or
sbb
fldl
rol
fcmovnbe
aam
mov
movsl
mov
sbb
clc
insl
jns
adcl
add
lods
jne
or
int
pop
outsb
outsb
arpl
lock
mov
scas
jo
pop
xor
xchg
push
adc
add
and
xor
or
dec
or
or
aas
icebp
flds
mov
incb
test
sub
xor
ja
out
imull
mov
xchg
mov
aad
cs
lock
icebp
fistl
xchg
pop
jecxz
lret
push
jmp
sarl
sub
cli
ja
mov
shr
std
lret
in
repz
shl
sti
pop
jnp
aas
sub
inc
adc
gs
icebp
fisubrl
call
jo
pop
inc
aas
sub
les
cmp
ror
mov
cmp
xor
add
mov
xchg
cmp
out
stos
dec
add
push
mov
jne
fdivrl
or
mov
cs
xor
cli
mov
or
sbb
loopne
cmc
icebp
mov
xor
cli
mov
or
mov
daa
mov
lods
subl
or
xor
cmp
xor
push
aas
sub
and
imul
les
inc
fdivs
push
call
mov
mov
div
cmp
push
lret
enter
sbb
testb
negl
cmc
addr16
movsb
jnp
pop
mov
in
rol
jecxz
or
dec
aas
call
jb
shl
sbb
push
sahf
sub
test
inc
sbb
mov
mov
lcall
dec
insb
pop
pop
dec
insb
inc
push
dec
aas
sub
int3
xchg
fimull
test
add
bt
test
jmp
adc
push
pop
jge
lods
adc
test
mov
nop
sub
add
jl
sub
mov
ret
and
push
jl
sub
push
mov
hlt
jne
in
cmpsb
scas
lea
shlb
rcrl
jmp
call
mov
rcll
mov
jl
cmp
dec
ja
sbb
lods
xchg
xchg
mov
sub
cmp
dec
xor
xchg
lahf
cmpl
xchg
cmpsl
sbb
shrb
cwtl
xor
popf
pop
adc
cmp
out
sahf
xchg
xchg
push
push
scas
xor
or
jp
cmp
dec
add
and
add
adc
sub
cli
xchg
add
add
adc
enter
sbb
add
les
mov
dec
dec
ja
inc
pop
dec
jno
push
push
aas
sub
aad
sarl
loopne
push
iret
out
mov
ror
add
test
mov
mov
xchg
lock
lock
fdivl
jb
jle
jbe
pop
sbb
pop
lock
lock
add
lcall
icebp
shll
lock
icebp
or
xchg
test
test
jge
iret
mov
leave
cwtl
pop
adc
jmp
sub
mov
sbb
cmp
aas
ljmp
cmpsb
test
mov
add
inc
lcall
out
inc
je
push
fisubl
push
mov
add
out
jecxz
in
push
push
ficoml
enter
jp
dec
pusha
daa
mov
mov
jo
mov
insl
addr16
insb
dec
pop
movsl
jne
mov
xchg
push
in
sub
dec
jl
sbb
les
mov
lret
jb
push
jl
jo
push
push
jb
dec
loop
aas
sub
and
sub
cli
pop
lods
in
bound
outsb
fsubr
lock
sub
outsl
sub
call
cmp
sub
sub
out
jl
sti
lahf
test
cld
call
adc
mov
jg
jae
outsl
int
stc
pop
icebp
jmp
push
popa
mov
popa
test
scas
mov
std
or
adc
mov
bound
in
sub
add
add
cmpb
mov
adc
add
cmp
jnp
push
sbbl
dec
jl
add
jae
inc
dec
ja
dec
push
jae
pop
jno
arpl
sub
out
movsl
call
movb
cmc
cmp
movb
lea
jae
call
pushf
lea
jae
bt
sbb
stc
mov
sbb
neg
mov
shl
mov
test
jmp
dec
pushf
pusha
mov
clc
ror
pushf
mov
clc
stc
bt
push
add
bt
cmc
test
mov
pushf
lea
jne
pushf
jmp
call
stc
add
cmp
pusha
mov
stc
pushf
bt
test
mov
lea
je
bt
cmc
stc
add
pushf
cmp
pushf
lea
jb
cmp
bt
bt
call
jmp
push
call
lea
je
rcl
bsr
add
bswap
pusha
rcr
mov
clc
clc
test
bt
add
jmp
lods
cld
inc
hlt
out
in
pop
into
mov
push
enter
les
ret
xchg
imul
dec
xchg
pop
je
inc
cmovs
aad
mov
push
push
push
iret
xlat
call
push
lret
enter
xor
and
fimuls
jbe
rep
dec
xor
notl
aam
stc
mov
insb
push
mov
or
cmp
add
jp
push
push
jbe
dec
aas
sub
jle
or
iret
dec
clc
cmp
add
pop
xor
int
mov
scas
ss
faddl
leave
mov
iret
dec
jmp
nop
cmp
and
dec
aas
rorb
push
sbb
xchg
pop
pop
or
popa
out
aas
rorb
test
cmp
in
ret
inc
divl
sti
int
dec
xor
adc
cmp
xchg
fs
sbb
xchg
push
mov
fwait
mov
mov
mov
mov
sub
or
xchg
mov
pop
loopne
popa
and
mov
xchg
lahf
add
inc
bound
test
jno
push
sti
stc
mov
mov
mov
bound
xlat
xchg
mov
mov
mov
mov
pop
mov
divb
adc
dec
lods
stos
gs
mov
scas
das
and
xchg
push
enter
cs
test
inc
call
js
mov
mov
movsb
xchg
lods
lcall
inc
inc
not
add
sar
push
xchg
bts
cmc
neg
aad
mov
clc
cmc
not
mov
jmp
mov
clc
call
cwtl
enter
into
sar
sub
enter
mov
ret
cmpsb
scas
mov
fimull
int
cmpsl
imul
xorb
pusha
bnd
clc
push
je
xlat
jg
cmp
sti
cli
adc
add
sub
or
cli
mov
fsts
sbb
jp
pop
dec
jae
jne
or
call
and
push
dec
jae
adc
jp
out
call
repnz
int3
enter
push
adc
add
lahf
or
push
push
or
jns
xchg
test
pop
pop
pop
and
insl
fistl
jbe
mov
mov
pop
xchg
push
fisubrl
inc
cli
insb
ficoml
clc
hlt
mov
cltd
mov
jecxz
arpl
rol
add
dec
repz
andl
xor
add
inc
mov
popf
scas
lahf
mov
xchg
jecxz
int3
mov
mov
jno
jne
or
in
mov
push
cmp
mov
cmp
out
in
out
in
loop
sub
loopne
scas
stc
in
jp
fmulp
and
push
pushf
add
or
std
mov
pushf
xor
movsb
nop
xor
decb
sti
cltd
pop
stc
mov
cmp
into
pop
sbb
vmovups
in
cli
mov
or
test
jle
loop
testb
xor
or
add
dec
add
push
int3
dec
push
jno
and
stos
push
inc
push
rcrb
pmullw
cmp
in
sub
mov
jge
xor
push
and
xor
das
test
mov
sub
cli
mov
pop
pop
pop
sbb
call
push
dec
or
pushf
das
or
cmc
aad
mov
pop
push
inc
out
loopne
in
call
into
sarb
sub
push
sbb
call
pop
sub
mov
test
bt
jmp
add
xor
adc
push
adc
xor
adc
add
add
add
mov
add
add
add
lea
mov
test
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
scas
push
enter
lock
cld
jbe
jle
dec
dec
pop
pop
sbb
fs
mov
bnd
jns
pop
xor
call
bound
mov
sbb
lods
push
and
cmpsl
ret
dec
int3
mov
loopne
xchg
mov
repz
pop
mov
dec
push
jb
loope
scas
or
or
mov
mov
xchg
inc
xchg
iret
leave
repnz
lret
inc
jne
dec
negl
pop
outsl
dec
push
jns
pop
inc
jno
dec
popa
aas
sub
push
sbb
pushf
add
jmp
add
xor
add
jo
dec
rcrb
fs
cmp
in
cmp
jbe
add
stos
in
insb
mov
pop
decb
cmc
jae
imul
cmc
sti
loope
inc
sbb
lea
fucomp
cmp
sub
sbb
fildl
dec
push
call
cmpsl
add
push
pop
sbbl
xchg
mov
les
cmp
add
ds
daa
loopne
fadd
shl
int3
repnz
into
enter
aas
sub
jge
or
pop
add
js
pop
sbb
daa
xchg
xor
in
fsubs
cmp
sahf
or
cld
loop
cmp
jnp
ss
popw
push
into
mov
les
cmpb
jne
sub
or
mov
aas
sub
pop
cltd
fldl
cmp
aas
or
mov
cltd
sbb
push
jae
pop
jge
pop
pop
imul
sub
in
hlt
mov
add
add
test
test
stc
cmp
stc
sub
jmp
mov
bswap
mov
push
pushf
mov
call
adc
ret
sti
jg
hlt
inc
fdivrs
dec
clc
mov
inc
inc
rdpmc
into
repnz
jno
ret
bound
cmc
ljmp
incl
in
mov
xchg
pop
test
rclb
cmp
popf
add
push
fdivs
dec
pusha
js
aaa
pop
pop
out
xlat
mov
fstps
cmp
cltd
lds
or
outsl
nop
imul
imul
lock
rorl
aad
sub
xchg
or
or
adc
sbb
cmp
or
and
aas
sub
add
clc
cmp
rcr
sub
cmp
sub
add
sub
jmp
pop
or
lock
jmp
push
lcall
dec
xlat
lds
pop
aaa
adc
xor
or
mov
sbb
rcll
mov
jg
and
je
movsb
loopne
dec
pop
sbb
inc
pop
push
add
jne
jno
or
jmp
jle
jmp
lcall
inc
daa
icebp
inc
popa
imul
push
inc
ja
insl
aas
sub
pop
push
les
call
mov
negb
fidivl
imul
ljmp
ss
mulb
push
std
adc
popf
test
enter
sub
jnp
mov
loope
je
hlt
cmpb
test
and
mov
int3
xchg
fistps
mov
loope
mov
mov
jl
or
rclb
sbb
aad
dec
or
dec
push
out
mov
jb
je
jge
rcl
clc
shr
loop
cli
hlt
cld
aas
sub
jl
lods
cld
jle
lock
or
jg
imul
stc
imul
loope
pop
pop
push
sbb
jnp
pop
std
mov
push
in
aas
or
jecxz
ds
loop
mov
jnp
mov
push
cmp
cmpsl
cmpsb
repnz
sub
fdivs
incb
sahf
inc
loope
in
std
repz
stc
sti
in
jmp
pusha
popa
cs
fmul
ja
in
aad
in
push
loope
stc
jg
jae
out
pop
outsl
cmp
mov
xor
gs
in
insb
lods
insb
insl
sbb
or
clc
jmp
add
sbb
cmp
or
rol
cmp
push
cmp
cltd
outsl
mov
adc
mov
loop
inc
ret
sbb
sub
adc
add
adc
mov
stos
xchg
sub
add
and
stos
icebp
push
mov
stc
inc
fldcw
outsl
dec
inc
push
push
add
sbb
in
jl
es
mov
jl
scas
rcll
outsl
dec
decb
pop
push
movsl
stos
je
das
adc
int
das
adc
mov
mov
popf
addr16
inc
sub
sub
and
sbb
aas
adc
aas
sub
mov
test
sarb
cld
add
loop
adc
xchg
dec
inc
mov
shrl
inc
divb
mov
int3
push
jle
dec
push
pop
sbb
imul
push
pop
push
dec
imul
sub
jo
test
adcl
add
mov
push
xor
aad
adc
insb
dec
adc
hlt
aam
pop
push
stos
in
cmc
iret
jmp
es
jnp
sbb
jl
jbe
inc
inc
jnp
mov
mov
loop
out
rol
loopne
in
int3
ret
jecxz
pop
fwait
pushf
rol
jmp
sar
movl
pushf
mov
push
pushf
cmp
jmp
jmp
rclb
jns
pop
and
sbb
or
adc
sub
jns
sbb
repz
cli
or
pop
ret
aas
dec
adc
fildll
cmp
imul
mov
das
aas
sub
and
add
mov
push
repnz
aaa
js
sub
add
adc
pop
xor
cwtl
pop
pop
push
bsr
mov
push
pusha
pushf
cmpb
pushf
lea
jne
clc
bsr
xor
shl
lea
cmc
mov
shr
sbb
rol
and
add
cmp
not
mov
cmc
test
push
mov
call
cmp
pushf
jmp
push
push
in
data16
rorl
adc
pop
and
add
cmp
out
stc
mov
lds
jg
pop
std
push
fnstenv
dec
jne
adc
cli
mov
jbe
pop
sbb
rcr
mov
mov
lahf
ret
das
or
inc
jnp
mov
push
and
movl
jbe
bound
aas
sub
fcomps
pop
xor
and
arpl
inc
lds
inc
jmp
arpl
popa
add
inc
adc
subl
or
jae
std
in
mov
movsb
out
addr16
imul
pop
sarb
aas
mov
cld
mov
sbb
add
or
repnz
cmp
inc
fcmovu
movsb
bound
movsl
mov
mov
and
xchg
mov
cmp
je
sub
aad
dec
iret
add
lea
jne
call
pushf
pusha
lea
jae
cmp
jmp
pop
or
push
sti
xor
out
out
fidivrs
mov
cmpb
xor
cs
sar
mov
icebp
outsb
mov
pop
cli
xchg
sti
mov
mov
add
or
inc
xorb
sbb
lret
fldcw
ds
jle
std
jmp
lret
fldcw
inc
stos
or
aaa
jns
inc
inc
jne
adc
shrd
sub
test
pop
aam
adcb
test
stos
push
rorl
mov
lcall
mov
sub
push
adc
mov
cmp
xchg
or
fs
jl
pushw
xor
ds
jo
outsl
and
dec
and
jns
outsb
daa
xor
add
mov
jecxz
sti
jns
rcrb
ljmp
inc
adc
cli
mov
aas
pop
pop
sbb
call
push
push
cld
in
mov
or
popa
dec
lcall
aam
ret
adc
cs
add
or
and
sub
stos
mov
repnz
push
pushf
lea
jne
jne
lahf
movb
cwtl
setg
mov
pushf
mov
mov
lahf
lahf
push
lea
pushf
movl
jmp
cmp
call
push
inc
enter
out
rolb
inc
mov
andl
cmp
cmpl
cmp
xor
ds
xor
xchg
sahf
xor
rorl
pop
cmpl
mov
sbb
into
pop
std
sbb
jae
adc
pop
or
inc
mov
mov
fwait
mov
movb
sub
shl
filds
movb
mov
mov
cli
push
outsb
dec
dec
push
push
aas
sub
inc
test
xor
push
add
cmp
push
add
into
pop
outsb
icebp
push
in
lcall
sub
sti
filds
cli
std
lods
pop
addr16
mov
sub
rorb
and
and
lods
ljmp
pop
pop
pop
testb
stos
movb
cmp
mov
inc
add
cmovno
adc
jl
aaa
jmp
fistpl
xchg
dec
insl
jae
sub
mov
mov
mov
test
sub
add
jo
lea
jne
movzbw
call
jmp
arpl
fs
xor
cs
insb
add
shr
sbb
and
lea
jb
jmp
movb
lea
call
push
call
sti
out
jl
lret
mov
inc
mov
xchg
or
aaa
mov
lods
mov
sbb
int3
mov
mov
jecxz
jp
fsubl
imul
cmp
fnsave
mov
dec
pop
lret
test
cmp
sarb
loope
add
sti
data16
lret
ret
push
icebp
mov
lods
mov
in
cli
mov
or
stos
mov
cltd
sbb
movsb
iret
shl
cmc
mov
test
insl
jbe
lea
jae
stc
add
pusha
pushf
mov
pusha
mov
movb
lea
jmp
mov
in
push
mov
in
push
leave
addr16
inc
cmc
inc
std
repz
ds
insb
fs
push
mov
mov
or
mov
or
jns
test
js
pushf
jne
add
fdivp
mov
repz
scas
shrb
sbb
mov
mov
sub
xor
cmpsb
or
inc
pop
dec
inc
in
insl
sub
cld
xchg
push
push
pop
mov
adc
cmp
aaa
adc
or
rolb
add
cmp
add
aad
sbb
jge
popa
out
inc
shll
pusha
sbb
mov
stc
jecxz
or
pop
or
cltd
mov
fdivl
mov
jge
pop
cmp
js
rcl
xorl
or
sub
sbb
xchg
fcmovnb
repz
xchg
ret
js
fwait
push
add
lock
mov
mov
cwtl
out
pop
and
sarb
scas
mov
add
cltd
xchg
lahf
test
sub
aaa
cmp
movsb
mov
and
push
std
pop
jmp
addr16
jae
iret
fnstenv
push
fdivrs
mov
mov
or
dec
fdivrs
stos
adc
imul
test
ds
lods
daa
repz
lret
ficompl
xchg
aam
es
aam
mov
cmp
xchg
ljmp
and
movsl
idivb
mov
inc
cld
rclb
push
gs
dec
ja
push
pop
pop
jno
inc
aas
sub
ret
repnz
jo
lods
lea
jne
rol
mov
clc
sub
cwtl
mov
sbb
and
sbb
add
add
mov
clc
test
pushf
pushl
pusha
jmp
mov
mov
call
ror
xadd
dec
rol
mov
btr
shrd
mov
rcr
rcl
call
xchg
movb
cmpsl
mov
fistpl
xor
or
cmp
cli
mov
mov
or
jge
test
pop
mov
jl
gs
movsb
adc
fstpl
out
mov
inc
iret
mov
sbb
ds
les
divb
xlat
xlat
push
push
or
fiadds
das
imul
dec
and
pop
aam
mov
xchg
mov
xchg
stos
movsl
mov
aas
sub
addb
pop
lods
pop
or
les
push
clc
push
inc
loopne
in
sar
insb
bound
xor
ljmp
cmp
push
fcoms
mov
decl
insl
lock
pop
jo
mov
or
and
adc
xchg
in
pop
addr16
dec
pop
push
outsl
xchg
jp
jecxz
sti
shl
aas
sub
push
and
inc
loop
cwtl
or
stos
cmp
sbb
cmp
mov
sbb
mov
jnp
mov
repz
addr16
gs
dec
dec
sbb
jb
scas
xor
mov
in
fstpt
sub
stc
cmp
lcall
pusha
dec
or
arpl
loope
aad
push
xchg
rcl
xchg
fucomp
subl
insb
lret
or
out
jmp
iret
out
nop
fdivr
fcoml
jo
jae
lahf
popa
adc
popa
and
cld
fsubrp
out
lret
in
shr
aas
sub
pop
gs
jb
push
add
int
fucom
and
sbb
and
sbb
loopne
ret
xor
gs
popf
hlt
in
repnz
push
dec
xlat
incb
cwtl
pushf
outsl
xor
cmp
sub
add
sub
or
mov
popf
neg
lcall
sbb
in
hlt
popf
neg
or
cmp
fs
mov
ds
xor
sbb
xchg
popf
sbbl
fcomps
lea
inc
pop
pop
int3
lods
xchg
mov
int
xchg
clc
mov
push
ja
xchg
divb
inc
jle
push
outsb
push
jbe
aas
sub
lods
mov
cmp
cmp
jmp
pusha
lea
jae
test
xor
pusha
pushl
call
pushf
mov
not
pop
push
pushf
pushf
pushf
pushl
ret
aad
aas
mov
mov
fldl
arpl
outsl
in
inc
jge
push
sbb
notb
dec
bsr
jno
or
dec
jl
shl
sbb
cmp
mov
pushf
xor
mov
adc
call
mov
push
scas
adc
sub
lods
addr16
negb
lret
aam
fcmovbe
addb
mov
subl
sub
add
aas
sub
sarb
shl
adc
aad
sub
mov
inc
xchg
in
addr16
jae
fldt
loop
out
ljmp
push
dec
ds
testb
jns
xor
add
sub
xchg
cwtl
adc
mov
pop
pop
sub
dec
jbe
fs
push
mov
push
lahf
inc
das
xchg
pop
imul
dec
pop
jns
push
aas
sub
out
adc
inc
jno
adc
and
icebp
out
repz
sub
ja
cmp
mov
imul
inc
popa
aas
sub
cwtl
xchg
add
sub
adc
push
inc
iret
jno
pop
testl
js
push
lods
leave
xchg
adc
or
insl
clc
ror
fsubp
mov
std
or
jo
dec
loop
jge
jge
test
repz
dec
aas
cwtl
fsubr
out
nop
repz
into
mov
jae
insl
add
iret
dec
out
stos
cmp
inc
lea
out
fcmovne
stc
out
adc
and
fists
lock
adcb
adc
adc
mov
inc
mov
inc
push
sbb
and
xchg
cmp
cmp
push
insl
bound
arpl
inc
mov
insl
ljmp
vmovq
fdivl
sti
pop
mov
and
xor
sbb
and
xchg
mov
lods
push
dec
bound
mov
push
aad
je
push
bound
jbe
mov
aad
xlat
xchg
ret
xlat
in
or
fcmovbe
out
inc
pop
jmp
sub
mov
adc
and
add
mov
dec
jp
hlt
sub
pop
addb
sub
jecxz
js
lock
add
sub
insl
sub
ficoms
cmp
push
jmp
and
repnz
mov
ret
lcall
dec
mov
pusha
xor
lcall
mov
adc
inc
leave
inc
jne
inc
roll
push
sti
push
inc
dec
sbb
outsb
out
push
in
shlb
and
sbb
and
scas
mov
mov
rol
sub
int3
dec
or
inc
xchg
cmp
insl
aas
sub
mov
call
cmp
adc
std
mov
mov
or
sub
xor
and
xchg
pop
xchg
loop
mov
jbe
xadd
mov
xchg
cltd
shr
test
push
pushl
addb
fistpl
ss
mov
addr16
adc
mov
lea
movsl
vfrczsd
sub
pop
mov
lea
jae
push
lea
jne
pushf
pushf
stos
pushf
pushl
lea
jmp
rol
push
shl
loop
insl
movsb
jmp
fldt
insl
jecxz
repz
ret
popa
iret
fyl2xp1
mov
adc
stc
mov
movsb
stc
mov
adc
mov
inc
popa
push
adc
jmp
jp
ds
add
jb
jo
xor
sub
pop
mov
xchg
pop
and
add
mov
sub
rcll
filds
mov
mov
in
shr
repz
std
test
cli
xor
lds
jecxz
cmc
dec
cmp
dec
pusha
stc
js
arpl
push
push
cwtl
es
cmp
cwtl
push
adc
pop
jnp
outsb
imul
mov
fucomip
outsb
push
jl
lahf
and
cmp
or
mov
enter
std
fistpll
faddl
movsb
insb
push
mov
mov
mov
pushf
aas
sub
sbb
arpl
test
push
add
add
test
call
cmp
push
push
lea
jbe
jae
lea
shrd
mov
sbb
call
xor
movsl
scas
mov
mov
imul
jb
jecxz
mov
jnp
aam
loopne
rolb
mov
mov
mov
scas
frstor
push
aad
icebp
outsl
rcrl
insl
sub
cli
mov
inc
dec
pop
sbb
stos
getsec
jo
repnz
cli
mov
or
test
imul
mov
mov
sahf
test
sub
or
add
insb
jns
popa
push
movsl
rcl
aad
mov
mov
push
repz
ss
jnp
ljmp
test
outsl
and
jno
jno
mov
mov
sub
jb
jns
push
shl
adc
lret
push
dec
pinsrw
test
and
ljmp
cmc
outsl
jg
and
jo
pop
jle
inc
add
into
cmp
jg
mov
push
loopne
out
cmp
mov
adc
sub
and
add
and
adc
aas
sub
movsb
scas
jmp
pusha
je
mov
inc
xchg
mov
fnstcw
arpl
jae
ja
jg
iret
stc
stos
fmull
leave
std
scas
out
pop
and
je
je
or
fstpl
loopne
rorl
jb
jl
jnp
xchg
push
lods
mov
mov
cli
mov
push
scas
rolb
inc
sbb
lea
cmpsl
ja
dec
loopne
call
cli
cld
out
loop
idivb
sub
das
xor
in
add
push
movb
jmp
pushf
lea
jb
pusha
test
cmc
call
out
test
mov
mov
imulb
sbb
inc
call
dec
clc
in
push
jp
es
js
cmp
mov
or
lock
xor
call
sbb
jo
add
pop
sbb
dec
movsl
loope
jge
out
dec
cli
mov
or
cmp
push
cmp
filds
or
adc
add
adc
and
cmp
aas
sub
rcrl
mov
lea
testl
jne
pop
pop
mov
dec
push
enter
sti
mov
xor
test
jecxz
add
adc
bound
data16
xor
adc
xchg
xor
lods
jmp
xchg
or
dec
cmp
mov
and
adc
bound
jmp
xor
xlat
jmp
cmp
aaa
imulb
popf
xchg
lahf
mov
mov
andl
iret
mov
lret
xchg
xor
out
dec
repnz
movb
sar
rclb
stos
dec
add
inc
dec
movsl
loope
xchg
sub
and
lret
xchg
addr16
dec
mov
mov
lods
int
cmp
adc
mov
push
xchg
sarb
inc
add
add
mov
push
and
mov
sbb
sbb
sub
cmp
testb
inc
push
dec
xor
cs
insb
add
seta
mov
cmc
test
cmp
movb
lea
jbe
sub
dec
mov
mov
shrd
mov
test
add
sar
btr
je
mov
stc
add
rcl
call
lea
jb
pusha
cmp
pushf
pushf
lea
jae
movzbw
movsbl
mov
push
call
lea
je
cmp
cmc
pusha
add
jmp
add
dec
outsl
arpl
inc
jb
gs
loope
in
mov
mov
mov
push
nop
and
add
adc
scas
cmpsb
js
sub
sub
jmp
sahf
add
mov
shlb
cmp
cwtl
jl
popa
push
cwtl
sub
ret
mov
das
cmp
hlt
cli
push
inc
mov
lret
repz
sarl
or
sub
in
pop
sbb
jecxz
and
push
test
inc
xor
movsl
scas
test
xchg
aas
sub
dec
pop
push
jmp
add
inc
gs
outsl
jb
addr16
jne
fs
imul
cld
pop
int3
cld
fisttps
push
repnz
push
jmp
fistpl
dec
shl
ret
imul
jb
and
lds
cwtl
xor
mov
jne
test
dec
push
es
ret
sub
jle
lods
jmp
iret
inc
arpl
xor
mov
xor
int
mov
jbe
dec
or
mov
adc
add
sbb
mov
xchg
sub
pop
fldl2t
cmp
imul
xchg
jle
je
ffreep
nop
sbb
mov
call
rcr
icebp
aas
sub
jns
ds
xchg
test
pushf
mov
fucomp
sbb
aad
lret
pop
ds
adc
es
imul
jge
dec
or
sbb
loopne
dec
enter
shll
jge
sub
sbb
negb
fs
repnz
dec
je
mov
mov
cli
mov
jmp
lret
add
jo
mov
sti
scas
sub
jae
out
int3
mov
shll
arpl
dec
outsl
jne
gs
jge
sub
repnz
mov
add
jecxz
fbld
pop
pop
repz
jno
mov
and
inc
insb
je
push
xchg
adc
adc
sub
aas
sub
test
mov
mov
outsb
and
into
xchg
mov
ret
loope
int
aas
sub
imul
jecxz
jb
xchg
add
push
push
pop
push
aas
sub
daa
or
repnz
outsb
std
ljmp
xchg
sub
mov
roll
push
imul
jnp
jmp
insb
jl
add
aaa
add
aad
add
inc
jo
loope
stc
xlat
rol
aas
sub
push
sbb
and
mov
jmp
pop
dec
iret
push
sbb
and
xchg
pop
cwtl
pusha
popa
iret
mov
loopne
sbb
sbb
adcl
mov
aam
sbb
jne
inc
addr16
cmpsl
xchg
rcrb
xchg
ret
xchg
ret
nop
inc
xor
ja
cwtl
sub
ficoms
jmp
lds
adc
fidivrl
test
push
stc
mov
loop
rorl
shr
leave
repz
ret
loope
stc
repz
shl
aas
sub
insb
jne
lea
ja
push
movb
call
mov
aam
push
std
icebp
push
mov
push
fdiv
push
cli
cmp
sub
mov
fcomps
sub
push
mov
jp
ret
fadd
push
ljmp
mov
dec
or
push
and
out
outsb
arpl
jmp
stc
ja
add
mov
std
sbb
shll
scas
add
jnp
ja
gs
fisttpl
and
dec
inc
jg
dec
push
outsl
jno
jge
jno
sub
inc
mov
lcall
ds
cmc
cmp
lahf
mov
lea
pushf
lahf
pushl
pop
mov
call
cmp
movb
lea
ja
not
call
jmp
add
jo
outsb
cwtl
fldenv
sbb
adc
inc
push
lock
lret
adc
jg
push
loope
fldcw
jae
jg
out
mov
pop
jp,pt
into
orb
cwtl
ss
sub
outsl
nop
jnp
nop
jmp
andb
in
iret
mov
xor
mov
and
pop
jp
pop
and
cld
pop
pop
inc
imul
mov
mov
cld
adc
cwtl
and
sbb
pop
fildll
popa
lret
test
decl
data16
mov
outsb
pop
and
mov
adc
ljmp
andb
outsb
pop
cmpsl
leave
out
fldt
and
push
icebp
iret
inc
cmp
fnstcw
sub
loop
popf
flds
add
pop
or
adc
mov
mov
or
sbb
add
xchg
jmp
mov
or
inc
mov
or
cmp
xchg
cmpb
jo
mov
adc
ret
cli
fnstenv
das
adc
pop
in
jg
sbb
mov
or
xlat
jne
jge
leave
iret
popf
lret
pop
jecxz
cmp
scas
enter
or
push
pop
add
pusha
mov
adc
aad
addb
pop
jle
add
dec
fistps
in
fwait
mov
inc
stc
ret
cltd
mov
frstor
push
sub
pop
lcall
xor
adc
adc
or
aas
sub
mov
sbb
xchg
pop
jle
jbe
jb
outsb
fsubl
xchg
nop
mov
mov
pop
bound
sub
cli
lahf
into
dec
call
mov
int3
stos
out
call
add
movl
das
or
out
std
ja
dec
hlt
dec
insb
outsb
pusha
inc
jo
push
test
nop
xchg
std
fsub
and
addl
sbb
fistpl
jge
jg
cwtl
call
mov
jl
icebp
mov
mov
jg
loopne
test
sub
addr16
fstps
sbb
cmp
enter
push
adc
or
or
les
scas
add
xor
cmp
dec
push
repz
fdiv
call
sub
adc
cwtl
int3
fldcw
lret
jecxz
sbbb
test
xchg
push
nop
or
fstpt
mov
idivl
cmp
std
rolb
nop
dec
std
iret
ret
into
sub
loope
in
mov
sbb
xor
fistpll
mov
jno
cli
cmpsb
rdpmc
rcrl
sub
and
add
add
cmpsb
push
test
enter
adc
and
adc
or
add
sub
test
pushf
pop
mov
psubq
mov
aad
jmp
dec
jns
outsl
rcr
bound
jb
pop
xor
dec
mov
fstpt
shl
mov
ja
cmp
repz
mov
xchg
test
sahf
rcrb
dec
sub
and
sti
outsb
or
sub
sbb
sbb
mov
cmp
sub
or
cmp
xor
sub
adc
xchg
jmp
or
inc
dec
push
fcmovnb
push
dec
addb
ds
sbbb
or
mov
iret
orl
mov
mov
push
in
mov
insl
sub
dec
dec
loop
out
loope
xor
cmovo
push
jae
add
cmp
popa
ss
test
mov
xchg
inc
push
test
sti
mov
add
sahf
push
add
lods
subb
mov
aas
sub
pop
sbb
data16
dec
jp
mov
jae
mov
pop
dec
pop
adc
pop
out
pop
adc
mov
push
subb
icebp
pop
lds
shrl
dec
jae
jmp
jo
test
jns
sub
xchg
push
mov
out
dec
mov
or
out
and
push
pop
push
mov
mov
cmp
ficompl
pusha
inc
pop
jbe
inc
jo
push
pop
push
aas
sub
fwait
aam
repnz
into
pop
xchg
sahf
movsb
pop
push
adc
stos
adc
test
or
mov
mov
lds
mov
out
stc
xchg
mov
mov
and
and
repz
and
into
sub
sub
xchg
add
loopne
ljmp
pop
inc
mov
loopne
addb
addb
les
cwtl
mov
loopne
sub
arpl
or
add
xor
add
xor
sbb
sub
sub
scas
mov
push
mov
mov
dec
loopne
call
push
loopne
je
aaa
sub
nop
loopne
lret
jge
mov
lahf
ror
xor
adc
cmpsl
cmpsb
mov
adc
int
outsb
mov
fcmovnb
loopne
popa
cmpsb
push
mov
int3
jg
mov
push
push
push
ja
int
sarl
jne
fnsave
push
stc
imul
pushf
insl
ss
out
repnz
imul
jae
inc
push
pop
aas
sub
fcomps
repz
bswap
mov
xchg
bswap
mov
movzbw
movsbw
movzbw
jmp
ror
call
stc
pushw
popfw
call
shll
cmpsb
mov
pop
lock
cwtl
lods
pop
fstpl
cmp
aaa
xor
and
pop
fldcw
dec
std
dec
popa
dec
push
and
push
arpl
aad
cmp
test
push
jbe
push
arpl
fwait
add
scas
mov
jp
imull
movb
sbb
lods
push
inc
in
nop
sbb
fucomip
cs
test
xor
dec
aam
xchg
daa
sbb
mov
and
push
sub
add
cmp
add
sub
mov
andb
nop
mov
sbb
cmpsl
or
scas
and
cld
fiadds
cmc
cmp
mov
outsl
dec
pop
adc
add
push
or
pop
sbb
jmp
repnz
cmc
sbb
aas
mov
xchg
dec
cli
mov
or
shl
pop
repnz
fcoms
inc
pop
jp
inc
inc
int
std
xlat
std
out
shl
aas
sub
add
add
pushl
movb
jmp
setbe
mov
not
pushl
inc
inc
lea
jb
pushf
pushf
push
mov
lea
pushf
pusha
pushf
lea
call
jmp
push
pushf
lea
jb
bt
pusha
cmp
pushf
cmpb
movb
jmp
pushl
pushl
pushl
lea
ja
jmp
jmp
mov
flds
lds
call
sub
sub
pop
cmc
ja
pop
in
int
lds
pop
idiv
stos
mov
jmp
loope
push
into
and
in
inc
jecxz
mov
icebp
jne
pop
sbb
out
adc
add
mov
fistl
push
roll
adc
frstor
icebp
mov
pop
push
leave
lods
jmp
popa
jle
jmp
pushf
jno
or
sub
inc
imul
and
xor
and
mov
xchg
cmpsl
mov
aas
sub
aas
add
cmp
bt
cmp
pushf
pusha
mov
push
lea
ja
jmp
or
xor
adc
cmp
xchg
scas
mov
add
out
cltd
loop
lret
mov
sub
sub
add
xor
add
cmp
enter
das
adc
or
jg
dec
push
lret
aam
aam
cld
ret
nop
ret
add
int
mov
outsl
mov
inc
add
sbb
lcall
add
imul
or
sub
and
aas
sub
xchg
cmpsl
xchg
stc
outsl
mov
pop
adc
cmc
lret
gs
aas
sub
loope
pop
or
mov
pop
adc
xchg
adc
jecxz
xchg
cwtl
xchg
sub
lcall
pop
out
jmp
cvttps2pi
xchg
push
pop
bsr
cmp
add
cmp
jecxz
and
adc
push
xchg
add
idiv
or
movb
mov
jmp
shrb
add
dec
add
jb
out
cmpsl
or
add
pop
mov
push
add
mov
push
pop
lea
aad
pop
stos
aam
stos
es
icebp
mov
in
fwait
aam
movsb
test
dec
sub
cmp
lds
cltd
fnsave
repz
fistl
cmovo
rcrb
rcrl
sub
iret
test
mov
mov
movsl
aas
sub
xor
add
jmp
stc
rorl
das
add
fsubs
and
inc
sub
cmp
mov
lahf
or
dec
inc
iret
mov
and
fldt
gs
ret
dec
repz
lret
gs
in
xorb
dec
jne
mov
pop
adc
bound
mov
xor
dec
inc
lods
lea
dec
mov
mov
orl
add
rcl
je
mov
and
jae
mov
inc
je
sub
fimuls
sub
in
arpl
popa
inc
jge
dec
ja
jae
dec
gs
sub
and
js
adc
jno
inc
out
xlat
inc
neg
or
out
sub
hlt
rolb
dec
adc
and
out
in
aam
sbb
mov
jge
cltd
dec
jge
out
push
push
push
push
xchg
adc
popl
popf
fisubl
clc
sti
mov
or
and
jno
and
mov
popl
mov
pop
sbb
lock
rcr
hlt
repnz
idivb
sub
jb
xor
add
cmp
cmpl
lcall
not
neg
rol
mov
bt
pusha
cmc
pushf
cmpb
lea
pushf
lea
jne
jmp
lea
je
bt
pushf
mov
add
pushf
cmp
cmp
movw
jmp
fxch
data16
out
icebp
mov
push
ljmp
aad
or
mov
cmpsl
data16
mov
xchg
inc
cltd
dec
xchg
nop
mov
xor
jl
fiadds
xor
lea
test
mov
inc
push
push
iret
andl
add
push
jle
and
fsubl
arpl
movsl
xchg
mov
xchg
push
aaa
fistl
arpl
shlb
push
sub
xchg
xor
and
xor
or
sbb
or
aas
sub
nop
push
pop
sub
sub
xor
sub
cmpsb
jne
and
sbb
and
and
and
mov
sub
inc
xlat
xchg
add
in
pop
jg
and
cltd
adc
sub
adc
sub
rcll
add
test
push
add
into
pop
push
pop
setle
xchg
pop
mov
pop
movsbw
pop
je
mov
pusha
lea
movzbl
mov
pushf
push
push
pushl
ret
mov
cmpb
jmp
push
call
push
pushf
ror
bt
clc
clc
cmp
neg
mov
call
cmp
xchg
cmp
lret
test
mov
xchg
ds
sub
add
xchg
sub
sbb
mov
scas
lea
fs
movsl
shll
lret
xor
sub
add
sub
jnp
push
lock
sbb
pop
push
adc
jae
cli
mov
or
xchg
stos
dec
cltd
sbb
inc
dec
jne
daa
into
leave
imul
imul
jg
push
push
jge
sub
dec
adc
inc
gs
outsl
fs
gs
imul
add
scas
call
jb
pusha
pushl
pushl
ret
jmp
jo
in
mov
clc
push
xchg
push
mov
mov
pushf
cs
dec
xor
adc
adc
add
cmp
sbb
paddb
mov
xor
mov
divl
in
paddb
pop
xchg
imul
add
in
jmp
mov
cltd
adc
pusha
and
ds
mov
mov
or
adc
lret
bound
sub
lock
pop
push
mov
or
adc
hlt
loop
ljmp
repnz
aas
sub
push
xor
xor
mov
lea
jb
pusha
pushf
push
cmp
push
push
lea
jae
btr
mov
stc
shl
shl
mov
bsf
movzbw
lea
mov
cmp
sub
pusha
pushf
lea
jmp
cmp
sub
pushf
pusha
call
outsb
in
pop
into
outsl
sbb
rcrl
xchg
cmp
lret
and
mov
xchg
add
sbb
cmp
rol
fimuls
adc
lcall
out
mov
fcmovbe
inc
add
cs
ljmp
mull
push
jno
loope
rol
fstp
cmc
shr
int
std
repz
repz
sub
addb
cmp
mov
xor
pop
mov
repnz
dec
div
rcrb
dec
pushf
cmp
nop
xor
ret
add
pushf
xor
or
lock
fisttpl
lcall
xor
xor
or
mov
stos
jne
push
jns
inc
jp
outsl
pop
mov
idivl
ljmp
push
sub
pop
imul
add
adc
js
push
inc
inc
data16
pusha
pusha
aas
sub
push
arpl
lret
inc
inc
jmp
bt
jmp
imul
hlt
clc
fildl
mov
add
mov
mov
imul
pop
or
sub
pop
fstps
mov
dec
hlt
sub
cs
and
and
cmp
cmp
or
sbb
sub
sahf
mov
cltd
btr
btr
mov
pushf
pusha
cmp
pushf
xor
test
bt
clc
stc
repnz
push
jmp
or
push
outsl
imul
and
cmp
fmul
aas
sub
xor
mov
push
jg
stc
out
insl
sub
jl
sub
inc
jl
je
push
jp
inc
je
aas
sub
xor
ja
stos
sbb
jo,pt
jg
and
inc
mov
outsb
sbb
push
test
xor
popf
je
xchg
sub
mov
or
add
rolb
and
sbb
mov
jnp
xor
fwait
jnp
xchg
popf
les
fstps
xor
out
adc
sahf
mov
sub
xor
ss
or
and
or
xor
push
push
pop
lahf
mov
or
xchg
xchg
mov
subl
sub
imul
pop
pusha
sete
call
add
pushf
cmp
pushf
lea
jb
test
cmp
stc
call
cmp
jmp
sahf
mov
mov
push
fisubrl
dec
decb
movsl
stos
xor
fdivl
cs
je
ss
fcoms
les
in
cmpsb
loope
les
sbb
mov
sahf
sbb
stos
in
push
in
les
jne
clc
mov
jp
sub
or
ljmp
call
sbb
push
dec
add
inc
lcall
fcomp
shll
mov
or
and
sbb
add
sub
add
cmp
sub
add
sbb
outsb
pop
push
push
push
push
movl
movw
pushf
lea
jmp
arpl
pop
jl
xchg
nop
pop
cmp
cmp
sbb
loopne
scas
data16
jb
inc
or
shrl
push
int
insb
popa
cmp
jae
sarl
push
dec
add
pop
sbb
data16
jae
cli
xchg
and
mov
xchg
cld
lods
mov
por
fs
rcrb
dec
pop
add
icebp
mov
fisttps
cmc
into
jo
outsb
insb
inc
jb
gs
testb
int
insl
outsl
jns
push
outsl
dec
dec
insl
arpl
jg
sub
movb
pusha
lea
ja
rol
sub
shl
sbb
sar
xor
add
shr
and
pushf
inc
mov
test
inc
mov
call
dec
sbb
pop
jnp
xor
push
lock
dec
or
icebp
sbb
movb
out
and
pop
fdivl
pop
enter
hlt
dec
in
je
aaa
xor
or
push
dec
pop
sbb
cmp
cli
mov
push
shl
leave
xlat
ret
loopne
ljmp
iret
in
push
repz
dec
js
push
jbe
push
pop
jbe
jl
sub
cld
mov
push
add
sahf
clc
rorl
orb
add
cmpb
push
lea
jne
sub
mov
push
test
add
pushf
cmp
mov
movb
movzwl
bsf
shld
mov
pusha
add
pushl
cmp
pushf
clc
mov
cmc
cmc
test
bt
test
pushf
pushl
jmp
fistpll
leave
test
scas
inc
pop
pop
adc
out
out
call
inc
pop
cltd
and
adc
loopne
jle
les
jecxz
or
std
adc
jmp
sbb
ret
cltd
lds
cld
mov
out
pop
cmp
in
push
loopne
xor
jne
dec
jnp
jns
shr
jmp
jmp
sti
icebp
aas
sub
jle
add
add
add
push
pushf
push
lea
jmp
rolb
stos
pop
xor
sub
aaa
test
xchg
aaa
movsl
sbb
sbb
and
lcall
cmp
xor
and
shrl
push
es
in
xchg
scas
imul
sub
scas
ljmp
sbb
jg
arpl
test
or
ret
xchg
mov
cmc
lret
lahf
cmp
and
pop
push
std
mov
or
sbb
aaa
insl
imul
xchg
stc
in
mov
pusha
jb
pop
push
outsb
insb
bound
aas
sub
rclb
mov
je
sbb
mov
mov
enter
dec
rorb
pop
hlt
rcrb
inc
in
jb
outsb
cld
ja
jmp
popf
shrb
mov
pop
mov
fstpl
ss
sub
mov
sbb
sbb
int
mov
scas
mov
loop
hlt
push
and
andnps
insl
or
jmp
sbbl
lock
aam
fsub
ror
aam
aas
sub
dec
pop
push
stc
test
add
test
bt
cmp
cmp
mov
movb
test
call
cmc
jmp
pushf
add
clc
pusha
clc
mov
test
test
test
push
call
cmp
pop
adc
and
stos
in
stc
outsl
icebp
push
leave
pop
loope
rcll
or
lret
in
cmp
mov
outsb
arpl
popa
ret
dec
xchg
mov
lods
lods
cli
lahf
sahf
adc
lahf
cltd
lahf
int
mov
mov
lret
inc
mov
cli
mov
or
not
lock
je
mov
loopne
loopne
int3
ror
cli
call
lret
adc
dec
movzwl
clc
dec
movzbw
mov
jmp
aad
dec
in
call
add
es
sbb
push
je
mov
cwtl
cmp
dec
dec
push
add
mov
dec
outsb
shl
adc
movsb
mov
mov
cwtl
xchg
ja
push
add
test
ss
data16
pop
lret
into
pop
addb
dec
inc
sbb
xor
xchg
inc
inc
fs
dec
jle
jo
mov
jns
pop
add
cmc
shl
cmc
pop
push
or
outsb
dec
pop
or
jb
insb
cwtl
dec
dec
jmp
jge
inc
test
scas
push
iret
shlb
ljmp
pushf
cmpsb
in
xor
into
rcrb
push
jae
jnp
icebp
jecxz
sub
push
mov
jns
repz
push
add
cmp
outsb
jo
dec
jb
inc
dec
dec
push
inc
aas
sub
enter
mov
cmpsb
fwait
aam
cld
dec
clc
jb
dec
enter
fistpll
sub
fiaddl
adc
jns
sbb
or
push
notl
ds
enter
hlt
lods
xor
loope
sahf
adc
fwait
or
iret
cmpb
or
pop
cs
sbb
pop
cmp
inc
stos
jb
xor
dec
ja
sti
lds
insl
push
imul
shr
fisttpll
sub
fmulp
in
dec
lock
xor
out
add
push
xchg
adc
adc
pop
push
or
adc
sti
outsb
imull
sub
mov
das
pop
jl
movsb
fists
pop
fcomps
xor
lahf
push
lret
popa
jge
jns
insb
fnstenv
scas
int3
xchg
jb
push
shlb
dec
jecxz
fmull
cltd
clc
push
stc
inc
pop
xchg
and
xor
lahf
inc
ficomps
adc
jno
jne
in
hlt
test
xchg
mov
cmp
cs
loope
scas
add
mov
addr16
dec
pop
push
in
dec
repnz
xchg
mov
test
and
push
mov
pop
leave
loope
push
shl
loop
adc
aam
mov
push
sbb
in
xor
push
jae
out
mov
clc
loop
lret
imul
popf
test
jnp
mov
call
add
mov
jb
insl
jge
int
and
fmul
out
fcoml
test
stos
mov
popf
stc
mov
mov
pop
push
and
inc
or
mov
in
ret
cs
or
adc
insl
lret
pop
mov
and
in
mov
loope
adc
adc
pop
incb
inc
jle
or
xchg
or
out
in
shrl
xlat
inc
fistl
mov
ror
rorb
cmp
ss
add
mov
mov
jbe
hlt
imul
rcrl
lret
jl
mov
insl
sti
popa
jnp
fisttpl
push
cmp
iret
in
pop
sub
xchg
shl
mov
mov
stos
lcall
and
cmp
lods
loop
popf
jb
jae
stos
cmp
mov
xchg
mov
or
jle
mov
imul
add
rcrb
pop
in
outsb
push
pop
sub
jp
add
mov
add
sub
loop
sub
adc
int3
push
sub
mov
decl
outsl
dec
mov
sbbb
xchg
xchg
test
movsb
popa
mov
xchg
adc
ret
or
sar
mov
das
cltd
xlat
sar
cltd
cmpsb
push
mov
popa
lahf
clc
mov
or
push
xor
inc
jg
and
push
inc
jns
dec
clc
ret
xchg
sbb
fwait
add
dec
pop
mov
adc
mov
ljmp
pop
inc
inc
pop
jg
aas
std
movsb
xchg
mov
fisttpl
insl
or
push
dec
dec
pop
jl
std
xchg
movhps
pushf
xchg
lock
cmpl
je
xor
mov
pop
int3
pop
and
xchg
dec
inc
add
loope
cmpsb
cmpsb
fwait
popf
mov
jp
pusha
lds
add
jo,pn
inc
movsl
addl
ret
icebp
sbbl
push
or
dec
data16
or
cmp
test
stos
and
sub
dec
push
adc
or
fmuls
xchg
mov
ret
xchg
cld
out
test
dec
or
xchg
add
jl
jbe
sub
inc
fs
lods
scas
stos
mov
xor
sbb
jb
rcrl
or
ss
fimuls
mov
dec
jg
and
push
fidivrl
adc
call
adc
sub
adc
push
lock
ds
in
gs
fdivs
jl
jnp
pop
orb
in
pop
es
dec
pop
iret
nop
cwtl
xchg
push
dec
push
push
sbb
fwait
in
cmp
test
icebp
leave
mov
push
cmp
aaa
sub
arpl
icebp
jbe
scas
aas
arpl
cwtl
ljmp
fs
mov
bswap
clc
push
test
clc
jo
lret
and
fcomps
test
subl
icebp
repnz
ret
dec
mov
mov
scas
out
test
pop
fucomp
into
rorl
dec
mov
mov
mov
mov
jle
rol
mov
mov
movsb
mov
add
xchg
push
jge
je
push
jne
cmp
and
sbb
mov
das
sbb
and
push
sub
movsb
insb
insb
push
imul
push
cmp
outsb
adc
mov
ficoml
test
jo
pushf
shll
out
pop
loop
cmp
lods
shrl
leave
jnp
dec
push
sub
fildll
sub
popa
ret
dec
ds
mul
jg
outsb
sub
and
imul
test
hlt
mov
jb
jns
inc
iret
mov
dec
xor
pop
and
lods
mov
or
and
add
push
push
pop
mov
pop
jmp
cmp
xchg
cs
ljmp
in
iret
sub
xchg
loope
es
inc
lods
pop
push
mov
or
fstpl
lret
mov
xchg
pushf
fmuls
push
in
mov
insl
imul
in
fisubs
add
clc
jne
mov
repnz
mov
dec
dec
push
jae
xor
std
imul
and
pop
or
push
mov
out
mov
adc
xchg
adc
js
mov
cmp
push
dec
dec
push
and
sbb
jae
movsl
jbe
ret
sbb
loopne
cmpsl
adc
lods
jbe
mov
xchg
je
mov
pop
fstpl
push
repz
das
jo,pt
jae
clc
cmp
mov
xchg
aas
dec
add
popl
cmp
fdivr
dec
push
js
inc
add
lret
and
pop
gs
sub
adc
mov
ror
mov
fidivrl
out
aam
ss
loope
push
push
push
popa
movsd
push
cwtl
or
pop
loopne
addb
rcr
fcomip
inc
xor
loopne
imull
mov
jns
dec
lock
lret
inc
xchg
add
mov
out
int3
lods
ret
pushf
fcomps
inc
addr16
mov
imul
adc
xchg
fmuls
into
cmc
out
lcall
fs
pop
mov
and
scas
insb
aaa
inc
repz
icebp
push
jnp
daa
and
inc
pop
mov
xlat
fsubrp
movsb
xor
repz
int
ret
and
shll
pop
mov
cmc
sub
iret
in
or
add
out
jl
mov
xchg
mov
push
enter
xchg
push
pushf
imul
pop
aas
cmp
cltd
sub
call
inc
adc
push
shll
cmp
repz
sahf
cmpb
imul
push
xchg
cmpsl
fwait
push
jnp
xor
pop
inc
inc
pop
cmp
mov
sub
fcmovnb
or
stos
and
xor
xor
icebp
imul
dec
cmp
adc
sub
cmp
push
cmpsl
outsl
stc
ds
addr16
mov
ret
cli
fbld
ds
enter
sub
arpl
fsubs
push
sub
into
aam
mov
adc
mov
cltd
or
push
dec
push
in
pushf
jg
mov
leave
lret
fsubp
int3
cld
xchg
pusha
add
shl
imul
cltd
int3
data16
in
pop
or
sbb
rorb
push
adc
in
xchg
pop
fmull
sbb
xchg
xchg
mov
pop
or
sub
in
out
call
data16
mov
imul
and
sbb
inc
push
pop
fisubs
push
sti
sti
out
and
jb
daa
or
mov
or
xor
fstps
rcl
cmp
push
je
cmpsb
xor
ss
push
sub
sbb
pop
insb
jnp
inc
push
sahf
push
rclb
or
out
mov
mov
ljmp
ss
fsubl
in
sahf
mov
sub
shr
enter
and
xor
or
stos
lods
mov
das
shl
jecxz
cmpl
push
les
divl
mov
xchg
mov
push
xchg
jecxz
mov
out
push
push
inc
jle
pop
push
outsl
fs
movsb
mov
loopne
sbb
pushf
addr16
cmp
mov
test
xchg
mov
lret
pop
iret
icebp
mov
ror
ret
fcoml
push
push
push
dec
insb
out
adc
and
cmp
xor
inc
jl
inc
outsl
jmp
mov
arpl
lret
fxch
jae
sbb
test
pop
add
cmp
xor
icebp
fstps
cltd
pop
dec
je
pop
hlt
sbb
fcomps
pop
arpl
stos
dec
add
adc
xchg
adc
ror
jecxz
jb
rorb
in
stc
sbb
loope
loope
push
xchg
dec
cmp
cmp
sub
push
xchg
adc
addr16
push
pushf
cmpsl
insl
ljmp
stos
add
xor
xlat
pop
or
push
bound
mov
add
imul
pop
iret
cmpb
add
cmp
or
push
out
stos
sub
stos
mov
je
xor
lods
ss
std
push
aaa
mov
push
js
leave
lea
push
lret
stc
ror
xor
cs
inc
push
loope
jae
pop
pop
pusha
out
mov
or
dec
js
insb
cmp
push
sbb
and
cs
adc
inc
cmp
xor
sub
dec
decb
push
dec
aad
xchg
test
or
shll
adc
sub
cld
mov
call
inc
cmp
sbb
test
clc
mov
cmp
insl
push
jg
stos
sub
adc
pusha
arpl
sub
cmpsl
loop
add
jl
jne
fucom
pop
mov
insb
sub
in
out
cmc
add
push
mov
xlat
hlt
xorb
dec
aaa
nop
ret
and
push
inc
or
aas
pop
pusha
mov
dec
or
outsl
pop
pop
imul
xchg
xchg
lea
rcll
mov
add
jbe
fstpl
xchg
fsubrl
pop
inc
bound
mov
fstpl
leave
arpl
pop
inc
mov
jmp
mov
or
hlt
xchg
jbe
movsb
xor
std
out
hlt
test
pop
pop
inc
popa
pushf
movsb
xchg
sahf
aas
mov
js
push
xor
mov
hlt
xchg
movsb
mov
insb
pushf
inc
out
in
bound
xor
jge
lods
push
pop
inc
pushf
shl
loopne
fists
ficoms
sub
cmp
sbb
pusha
decb
xchg
mov
dec
cmp
int3
jnp
xor
lcall
ret
sbbl
jbe
movsb
sub
fsubr
clc
rorb
ja
hlt
push
jne
cmp
inc
cmp
fidivrs
mov
rorl
cmpsb
mov
push
fsubr
lret
jnp
mov
mov
jnp
xchg
jnp
outsl
adc
dec
cld
adc
push
imul
enter
lods
call
inc
pop
inc
arpl
dec
jns
ljmp
leave
iret
out
and
adc
inc
pop
movsb
mov
es
sub
jl
gs
les
hlt
lock
arpl
inc
push
adc
lahf
xchg
xchg
push
les
mov
ja
push
jp
mov
mov
push
dec
dec
dec
cmp
sbb
into
cmp
xchg
scas
jg
mov
add
cld
dec
nop
adc
cltd
movsl
xor
aam
outsb
sub
xchg
and
aas
cmp
push
stos
fwait
jb
mov
or
xor
fdivr
andb
fwait
mov
imul
jo
imul
fdivr
jns
std
and
stc
cli
sbb
and
xor
add
jecxz
rcrb
mov
iret
xorb
mov
cld
jmp
pop
and
out
shlb
jne
jb
add
xchg
int
shll
pushf
ret
xor
adc
xor
inc
fs
cmp
mov
push
xor
dec
xlat
iret
int3
cld
filds
ret
popa
jno
cs
jnp
mov
dec
jo
xchg
mov
dec
jge
ds
out
outsl
mov
cltd
lahf
subl
xchg
fadd
ljmp
pop
lods
lds
mov
sbb
loop
cmp
gs
pop
inc
pop
xchg
clc
stc
pushl
sbbl
enter
inc
xor
mov
inc
jnp
scas
mov
jns
addl
mov
movsl
or
mov
dec
pop
int3
xchg
inc
mov
jp,pt
shll
mov
push
jle
dec
and
push
in
lds
jno
mov
lret
dec
dec
dec
pop
sub
adc
das
mov
or
and
sahf
pop
inc
sub
mov
jmp
xor
jecxz
int3
mov
push
xor
pop
roll
jle
xor
ret
sub
xchg
lods
push
add
daa
aas
stos
sbb
pusha
mov
add
jl
scas
xor
wbinvd
or
ss
cmp
cmpsl
popf
addr16
es
cwtl
inc
unpckhps
xchg
add
cmp
add
stc
or
dec
orl
push
and
sub
sbb
mov
cs
js
mov
out
pop
pop
inc
fidivrl
mov
mov
aad
adc
mov
sbb
mov
xor
in
push
push
sub
es
or
push
ret
or
insb
jmp
mov
sahf
pop
rcr
in
xchg
and
jb
out
testb
ficoms
sbb
pop
bnd
xchg
jmp
int3
jl
xchg
inc
push
in
imul
test
inc
inc
inc
jp
in
lcall
lock
jmp
jnp
aad
outsb
je
mov
test
push
adc
gs
test
pop
inc
inc
jg
ljmp
jecxz
cmp
and
rol
loopne
xchg
adc
cltd
mov
mov
jmp
insl
adc
sbb
cs
mov
sar
pop
xchg
fxch
mov
sbbb
leave
pop
imul
and
mov
orl
add
outsl
ret
adc
and
aad
sbbl
test
sbb
sbb
lock
xorb
add
push
shll
sub
lret
les
jle
clc
cmp
jg
and
and
mov
out
jne
adc
add
mov
test
dec
insb
sbb
inc
aaa
and
mov
popa
movd
inc
repnz
pop
push
out
jb
das
aad
shlb
sub
add
pop
sbb
pushf
mov
test
hlt
test
lret
jmp
xchg
push
and
and
xchg
add
dec
dec
imul
enter
lock
push
jecxz
xor
and
data16
mov
test
dec
insb
sbb
xor
cltd
xor
ja
push
stc
div
mov
xor
xor
cmc
or
jl
mov
data16
push
sbb
inc
add
ds
sub
inc
out
movsb
out
aam
addb
push
cld
or
push
cwtl
mov
push
in
cli
mov
iret
fucom
dec
and
gs
cmpb
loop
ss
sbb
adc
cli
in
repnz
mov
clc
data16
cld
push
les
cli
mov
mov
cmc
in
jae
dec
cmp
mov
into
fadd
out
in
repnz
rol
pop
jge
jne
push
jne
mov
cmp
push
adc
xchg
xchg
xchg
dec
aas
sub
scas
jmp
daa
jmp
xor
adc
mov
icebp
pop
xor
mov
and
mov
xchg
shrl
push
dec
insl
in
push
xchg
imul
dec
sbbb
sbb
xchg
mov
xor
cltd
movsl
cwtl
stos
aam
mov
push
lahf
sbb
rorl
push
adc
jp
clc
sti
out
add
mov
loopne
push
dec
fsubl
mov
ss
pop
ret
xchg
stos
in
dec
cs
sbb
pusha
push
cmc
sbb
fsubrs
push
in
rcl
sub
pop
jbe
dec
cs
inc
icebp
mov
repnz
jecxz
cmp
shl
insb
and
lret
sub
sahf
rcrb
ljmp
out
cmp
and
cli
fldenv
cmpsb
in
push
push
push
inc
shlb
aaa
xchg
incb
gs
add
dec
lahf
sbb
push
push
jb
cmp
cmpsb
shrb
loop
and
rcr
sbbb
xor
repnz
lea
hlt
cmp
sti
fcomps
sub
aaa
add
lahf
fcmovu
aaa
js
xor
je
inc
icebp
mov
add
mov
mov
cmp
mov
mov
pop
popf
mov
xchg
push
jb
xor
inc
repz
push
dec
subl
sbb
pop
mov
leave
hlt
mov
movsb
loopne
call
fadd
fdiv
insb
fimuls
add
jle
or
es
lea
xor
pusha
addl
mov
rol
mov
ud2
sub
jl
arpl
push
pop
push
xor
insb
mov
mov
cli
lret
xchg
movsl
inc
testb
dec
jnp
popf
daa
sbb
lock
xchg
pop
dec
dec
push
jno
imul
pop
mov
sbb
je
push
icebp
mov
rorb
std
mov
mov
jno
cltd
xor
iret
stos
mov
pop
xchg
dec
adc
adc
or
in
shr
adc
sub
stos
js
or
jmp
out
fcmovnb
sar
jne
dec
std
add
insb
cmpxchg
popa
pushf
fsubrs
push
jb
leave
aad
in
mov
insb
lcall
es
sub
add
fadds
pop
popa
inc
xor
fistpll
jno
push
shll
or
pusha
and
cmpsb
movsl
mov
and
shl
push
dec
insb
sub
mov
mov
sbb
push
data16
adc
pop
inc
inc
pop
jnp
cmpl
lret
aam
push
nop
xchg
scas
in
enter
lods
mov
inc
inc
push
into
mov
fstl
push
test
push
dec
mov
cwtl
or
mov
sbbl
inc
push
push
adc
xor
test
movsb
adc
sub
xchg
loopne
ret
xor
outsb
push
push
jge
pop
mov
ss
mov
mov
movups
jmp
xchg
idivl
mov
nop
sbb
scas
fstl
sub
repnz
sub
outsl
in
cmp
and
fisubs
push
out
test
ret
or
mov
xchg
lret
mov
adc
pushf
and
jp
mov
shl
lods
fsubp
fsubrl
sbb
lret
repz
mov
and
mov
xor
mov
int3
lock
testb
test
push
cld
add
fwait
mov
inc
inc
push
pop
add
daa
xchg
xchg
add
xor
cli
scas
sub
jno
in
nop
mov
ret
xlat
pop
pushf
lcall
sahf
and
pop
pop
and
fsub
add
cmpl
inc
adc
mov
aam
jbe
sti
mov
test
jae
mov
out
shr
lock
jle
icebp
mov
jns
adc
pop
aas
pop
mov
mov
pusha
cs
loop
push
or
scas
test
sbb
bound
cltd
addb
push
jge
adc
xchg
xchg
mov
jnp
push
lods
mov
xchg
push
fldcw
pop
adc
mov
pop
jnp
scas
orl
test
mov
jl
inc
fadd
xlat
repnz
adc
jne
sub
stos
sub
pop
sub
sub
pop
insl
jl,pn
loop
aaa
mov
ud1
xor
addl
mov
push
mov
aam
mov
ja
or
test
daa
js
sub
dec
inc
in
js
jo
pushl
or
pop
inc
inc
je
in
push
mov
xlat
cmp
push
jne
and
jge
iret
pop
xchg
xchg
push
dec
imul
sbb
fdivrs
add
xchg
ljmp
in
in
dec
or
sub
cmp
push
pop
sahf
lock
jmp
pop
inc
cmc
mov
inc
ret
jecxz
clc
sub
pushf
push
sbb
mov
push
sbb
and
addr16
adc
dec
rolb
shl
adc
inc
mov
sub
scas
rcrl
cmp
mov
xlat
pop
lea
push
inc
arpl
aas
cli
push
jecxz
lret
pop
loope
mov
subb
movsl
xor
xchg
shlb
sbbb
cmp
mov
lock
dec
jl
inc
fs
adc
push
jb
jp
inc
insb
xor
pop
inc
xlat
gs
cld
mov
insl
push
jbe
mov
imul
jg
stos
mov
lahf
scas
pushf
lods
push
xchg
mov
xchg
jnp
pop
cmpsl
js
std
test
mov
jb
out
stos
sub
movsb
mov
loope
dec
xor
xorl
enter
fsubr
rcl
idiv
cmp
add
push
adc
xlat
out
int3
mov
xor
arpl
aam
test
push
repz
enter
xor
dec
int3
enter
stos
xor
or
inc
xlat
push
jb
push
ljmp
sub
je
insl
sbb
test
inc
aam
jb
testb
sub
fsubs
xor
push
cwtl
add
sub
gs
ret
pusha
jo
dec
push
jmp
sub
inc
ret
loop
popf
out
jmp
andl
jno
adc
xor
outsb
dec
xlat
and
pop
add
jo
popa
dec
cmc
xchg
pop
insl
and
mov
and
insl
imul
and
or
std
aad
std
test
dec
xor
or
pop
inc
mov
stos
out
rcll
es
pop
cwtl
cs
pop
lret
stos
cmpsl
cli
or
idivb
xchg
adc
adc
mov
ret
or
hlt
dec
je
sbb
mov
sbb
test
xchg
fisttpll
xchg
adc
int3
test
imul
imul
sub
je
sbb
outsl
jmp
xchg
xchg
mov
adcb
cmc
jae
stos
imul
imul
leave
lahf
movsl
mov
jmp
shr
int
sub
adc
test
push
or
pop
xchg
imull
xor
adc
jno
adc
cmc
mov
jle
stc
mov
or
push
cmp
aaa
test
jb
test
mov
adc
repz
mov
ljmp
gs
cli
mov
mov
mov
add
js
lcall
xor
shl
fmul
jmp
mov
mov
adc
mov
cmpsb
testl
xor
mov
ret
dec
lret
mov
test
xor
into
je
dec
pop
jl
jb
inc
xor
mov
scas
cmp
cmc
call
inc
pop
rorl
insb
jb
in
add
push
hlt
jb
and
shr
sub
adc
sti
xchg
push
cmp
xchg
fadds
pusha
inc
and
xor
stc
std
cli
fldcw
sub
bound
inc
test
in
jns
mov
jo
imul
jnp
pop
pop
push
aam
push
mov
dec
jb
cmpsb
outsb
testl
out
mov
jae
mov
ljmp
jmp
insl
jae
test
push
addb
add
xor
jnp
jns
xchg
ret
mov
mov
cs
data16
lcall
sahf
inc
jne
inc
or
test
mov
xchg
mov
call
cmp
jae
fcoms
cmp
cmp
and
lods
mov
into
mov
push
sbb
lcall
jbe
xchg
or
adc
sub
pop
in
jecxz
dec
or
dec
push
cmc
loopne
fmull
dec
enter
cmc
loope
shll
aam
out
pushf
fs
mov
stos
cwtl
mov
andb
xor
jnp
js
lock
or
jg
hlt
push
data16
les
sbb
test
sub
andl
mov
out
mov
push
fldcw
sub
cmovs
mov
fwait
pop
sbb
xchg
jmp
sub
mov
or
adc
sbb
mov
sahf
mov
mov
aas
sub
adc
xchg
cmp
xchg
sbb
xor
enter
shlb
les
inc
jl
sub
pushf
push
clc
loopne
xchg
test
sti
mov
addr16
push
pop
test
popl
and
shll
call
ljmp
dec
xor
mov
push
or
add
lret
jne
ret
lcall
nop
mov
aas
sub
and
xchg
sbb
jmp
mov
stc
rol
btc
mov
call
jae
les
stos
cwtl
mov
add
lods
test
push
aad
and
je
sub
mov
xchg
sbb
xchg
stos
xor
icebp
into
mov
or
and
incb
push
mov
push
jg
cmpsl
out
mov
dec
add
sub
sub
movsl
xlat
popa
fstp
fyl2xp1
sub
sub
sbb
sub
movsl
scas
ljmp
clc
or
decl
inc
jmp
fistpll
adc
aaa
popf
rcl
add
test
int
lret
rorb
stc
mov
sahf
mov
loopne
cli
mov
cmp
pop
sbb
lret
bound
dec
into
cli
mov
or
pop
jp
pop
jle
jae
xlat
std
xlat
incl
popf
mov
adcl
mov
adc
mov
dec
mov
cmp
bt
sub
pushf
pushf
pusha
push
lea
jmp
pushl
test
pushf
call
bsr
shld
mov
lea
setnp
shl
jmp
movw
push
pushf
lea
jbe
btc
rol
ror
sub
neg
push
sbb
mov
pushf
bt
mov
btr
sar
shr
test
add
push
adc
pushf
shr
xchg
shld
sub
mov
pushf
rcl
add
mov
movzbw
lea
mov
call
movb
lea
ja
pushf
call
pusha
push
call
pushf
neg
bt
cmp
mov
pusha
movzbw
not
lea
lahf
jmp
cli
stos
sub
xchg
mov
mov
dec
ljmp
jo
aam
mov
mov
add
push
push
scas
in
adc
xchg
dec
and
push
int3
mov
sahf
data16
imul
add
cli
mov
or
mov
dec
or
jge
adc
aam
sub
jne
push
dec
jne
dec
inc
jge
aas
sub
rclb
add
dec
xchg
and
fsubs
jb
jle
push
stos
mov
sahf
lods
or
bound
aaa
out
mov
push
pop
xor
sbb
jbe
mov
pop
mov
mov
les
inc
fdiv
les
cli
cmpsl
and
pop
fwait
mov
and
push
rclb
cmp
cmpsl
and
or
adc
out
stc
mov
xchg
jp
jl
xchg
xchg
movsb
mov
cmpb
mov
sub
push
sbb
mov
pop
and
push
mov
cmp
pop
std
stos
jecxz
fs
int
mov
jg
dec
lds
inc
shll
rcl
test
push
adc
pop
iret
push
push
inc
dec
pop
mov
in
xchg
pop
icebp
popa
cs
push
jne
cld
mov
cltd
cmpsl
jecxz
mov
sub
or
cltd
mov
sti
push
inc
imul
imul
dec
insl
push
aas
sub
aad
fidivl
pop
ret
jns
clc
jb
mov
cli
mov
sbb
and
sub
scas
add
mov
insb
mov
xchg
sar
push
fcmovnbe
push
cli
mov
stc
jmp
or
sub
inc
pop
sub
lcall
mov
setg
je
mov
ficoml
cltd
push
or
jl
mov
insl
dec
or
icebp
jecxz
repz
cmc
ret
aad
stc
fcmovnb
aas
sub
push
and
xchg
sub
add
fbld
imul
popa
pop
das
adc
mov
test
aad
adc
jbe
xor
sahf
jne
inc
shlb
mov
mov
push
xor
test
and
cmp
push
sbbl
push
enter
sti
mov
mov
das
adc
dec
jb
inc
inc
repnz
cmp
daa
add
cmp
sub
dec
push
bswap
lea
push
movl
movl
jmp
lea
jae
test
stc
pusha
push
cmp
jmp
mov
mov
cmpsb
or
sbb
and
sbb
and
js
lret
sti
imul
mov
clc
cmc
lods
ds
push
js
lret
mov
je
and
jns
aam
mov
lahf
mov
out
je
jle
cltd
push
pop
pop
inc
inc
push
jb
lcall
adc
scas
nop
push
inc
dec
push
insl
inc
inc
pop
popa
imul
gs
sub
mov
call
jne
lea
sbb
sub
mov
pushf
pushf
stc
add
test
test
movzwl
lea
movsbw
mov
push
add
clc
push
mov
pusha
cmc
test
jmp
sbb
mov
and
mov
cmpsb
cltd
ja
outsl
stc
push
jmp
mov
push
cmp
data16
push
ds
lea
insb
xchg
push
pop
pop
pop
dec
jg
popa
and
push
cltd
inc
cmc
mov
xor
popa
cs
mov
aam
dec
push
cli
out
mov
and
pop
sbb
fimuls
mov
inc
dec
inc
cli
mov
or
mov
mov
or
ss
push
inc
insb
push
push
dec
js
push
sub
jg
add
cmp
stc
test
jmp
lea
jne
xor
cmp
rcl
shrd
mov
cmp
test
sar
sub
shl
bswap
rcl
inc
mov
cmp
push
sub
bt
pushl
popl
cmp
push
stc
clc
cmp
jmp
inc
pusha
mov
sbb
sub
bswap
rcr
mov
dec
bsf
neg
mov
pushl
call
dec
pop
iret
inc
popa
hlt
xchg
mov
jmp
sbb
cmpsl
sub
ja
insb
and
inc
sub
ljmp
enter
scas
insb
and
or
dec
sbb
xor
ss
sbb
lods
mov
test
push
or
push
push
fldcw
xchg
loopne
xor
pop
adc
xchg
push
push
pop
inc
arpl
jmp
fdivs
test
lods
sbb
repnz
xchg
xlat
cmp
cmpsl
mov
xor
jge
cmp
in
jbe
cld
bound
jo
push
push
push
outsb
inc
aas
sub
ret
lea
jne
shld
sar
jmp
jmp
mov
bswap
movzbw
mov
call
rol
cmp
ror
ror
add
sub
shr
shl
push
clc
shl
mov
rcl
test
add
jmp
push
pusha
movl
call
enter
pushf
mov
jg
fstl
xchg
jle
sub
fcmovnbe
cltd
sub
setne
lods
das
mov
dec
push
outsb
push
lea
mov
mov
push
popf
pop
popa
inc
fstps
push
jl
inc
xlat
cmpsb
push
push
lods
jne
popf
flds
xlat
hlt
mov
xchg
xchg
in
ljmp
or
add
sub
cmp
xor
adc
aas
sub
test
out
shr
btr
xchg
mov
sar
not
mov
and
add
lea
movl
btc
cmc
rcl
shrd
mov
cmp
test
stc
cmp
pushf
movw
mov
pusha
lea
jbe
lea
movsbl
shr
shld
sub
not
movsbl
stc
mov
btr
adc
shld
mov
or
shr
add
sar
add
movzbl
xchg
shr
neg
jmp
pushf
movb
jmp
movsbw
mov
movb
lahf
mov
setno
mov
lea
pushf
pushf
movl
pushf
movl
push
jmp
add
inc
outsl
insl
bound
gs
outsb
add
fdiv
scas
pusha
pushf
jmp
js
scas
and
int3
notb
pop
rolb
inc
loop
into
orb
xchg
dec
mov
xlat
xchg
shll
sub
aam
dec
or
jbe
cmp
pushf
stos
div
sub
jmp
mov
adcb
cmp
jg
push
mov
sbb
addl
mov
ret
dec
jbe
sbb
test
test
xor
jo
sar
cmp
call
add
inc
js
je
jb
arpl
jae
dec
push
sbb
addl
rcrb
sbb
sbb
sbb
fcomps
sbb
adc
pop
add
popf
sbb
popa
push
sbb
xor
sbb
imul
add
add
in
push
add
popf
sbb
jno
sbb
add
add
popf
sbb
jns
sbb
sbb
sbb
adcl
add
add
ds
add
sahf
sbb
mov
xor
adc
sbb
xchg
sub
add
sahf
sbb
cltd
push
sbb
movb
and
sbb
pop
pusha
push
add
sahf
sbb
test
add
add
add
add
sahf
sbb
add
add
push
test
sub
mov
jmp
lcall
sbbl
push
xlat
jge
jno
dec
rcrl
gs
mull
pop
cmp
jb
pop
insl
sbb
inc
dec
or
cld
pop
cs
mov
cld
mov
xor
jae
push
push
cs
bound
into
js
push
outsb
bound
insb
and
mov
mov
jle
scas
jge
fistpl
ficoml
into
jb
lahf
mov
out
loope
in
in
in
pusha
int3
or
das
cmp
sbbb
pop
in
shr
iret
cmc
jmp
outsb
inc
jb
inc
fs
push
inc
outsb
aas
sub
ljmp
xor
fs
insb
add
jecxz
out
mov
int
mov
xchg
sub
mov
pop
jp
mov
push
xor
std
push
icebp
or
fs
int3
mov
pop
jp
mov
test
add
out
mov
sbb
xor
call
pop
adc
mov
xchg
test
rcll
lods
cmpb
mov
xchg
xchg
lea
cltd
mov
sub
push
push
call
lock
in
repz
testl
insl
out
jns
inc
jmp
sarl
lea
xchg
mov
or
inc
jne
xchg
lods
fsub
lea
and
fstps
fcomps
cltd
mov
outsl
dec
inc
and
push
imul
and
mov
int3
out
enter
shl
aas
sub
add
incb
fdiv
pop
lahf
xchg
leave
cli
mov
or
or
inc
cmp
add
das
or
xchg
stos
mov
nop
lcall
loopne
and
mov
lcall
jge
sub
pushl
adc
xchg
fadds
dec
enter
lock
in
mov
leave
cmc
xor
sbb
les
repnz
stos
mov
inc
mov
push
or
stos
mov
mov
and
iret
mov
test
push
inc
lock
lock
pop
jecxz
pop
aas
cs
mov
xchg
xchg
mov
es
cld
lock
cli
enter
fidivrs
sub
lea
jmp
mov
call
inc
jmp
push
stos
movb
pushf
lea
jmp
add
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
mov
cmp
mov
jp
sub
xchg
cmp
lahf
movsl
xchg
cmp
hlt
and
lahf
hlt
mov
xchg
fcoml
movsl
loope
push
arpl
stc
mov
int3
stc
cmpsl
cs
popf
dec
cli
cmpsb
cmp
pop
push
pop
and
pop
mov
les
cmpsb
cmp
add
adc
loop
out
mov
and
cmp
daa
sbb
std
ffree
ror
dec
aas
sub
add
dec
lea
jb
stc
clc
cmpb
push
call
and
pop
inc
lds
movsl
cli
mov
xchg
pop
xchg
pop
mov
mov
lods
sbb
xchg
and
mov
jg
sub
setno
lcall
jae
fwait
jecxz
sti
cltd
cmc
mov
xor
inc
loopne
cli
mov
or
stos
mov
in
pop
inc
pop
dec
push
gs
sub
sar
dec
out
idiv
idivb
sub
das
xor
imul
bound
loop
push
testb
ficomps
lods
nop
rcr
or
push
outsl
incb
xor
mov
cmp
ret
lods
nop
dec
push
popa
in
push
movsl
jnp
cmp
pop
jae
ret
add
inc
push
ss
pop
addr16
js
pop
push
cmpsl
imul
push
and
sub
add
cmp
sub
mov
fidivs
imul
sbb
imul
dec
ret
jne
dec
repz
rcll
pop
jbe
scas
test
mov
xor
pop
int
popa
inc
push
imul
fimuls
popa
clc
jmp
push
sar
inc
bound
mov
jp
sub
js
int3
int3
mov
test
mov
sbb
cs
notl
bound
xor
add
out
aas
sub
mov
aas
repnz
xchg
mov
fcomip
rcrb
inc
add
dec
sti
mov
test
int
push
sbb
jnp
dec
outsl
outsb
add
xchg
push
jge
std
inc
lods
jmp
int
mov
adc
pop
dec
ret
js
jo
js
push
in
sbb
icebp
inc
dec
inc
xchg
shrl
out
lcall
push
xchg
jae
imul
mov
cmp
mov
add
aaa
jno
aas
push
pop
sbb
rol
sub
xchg
cmpsl
stos
rorb
sahf
inc
stc
out
fcomi
sti
icebp
in
aas
sub
jbe
out
pop
loop
xchg
in
insl
lahf
nop
aam
loopne
fcomps
dec
fsubrs
jbe
jbe
or
popa
dec
add
sub
and
hlt
push
insb
fcoms
movsl
mov
scas
fbstp
jg
add
push
jge
das
adc
or
push
mov
lea
adc
adc
pop
push
test
xchg
lret
dec
decl
mulb
movsbl
stc
shr
jmp
mov
movsbl
movsbw
sub
add
jmp
faddp
jle
out
push
fcompl
aad
ljmp
dec
jge
scas
cmp
sub
pushl
fdivr
lods
mov
ffree
mov
aam
mov
les
out
sahf
rcl
insl
rclb
jb
mov
pop
pop
xchg
fst
nop
lds
cmp
fdivrl
push
dec
lods
ljmp
test
mov
jp
cs
mov
sub
mov
pop
mov
or
add
sbb
cmp
cmp
cmpsb
std
cmpsb
push
cmpsb
jle
pushf
cmpsb
pop
cmpsb
sbb
mov
push
lcall
imul
fildl
sub
fldl
pop
jmp
test
cmpsb
bound
pop
gs
add
push
loop
dec
pop
fistl
jg
arpl
mov
jl
push
rcr
jbe
mov
jmp
add
push
or
pop
leave
push
pop
mov
pop
add
sub
ret
shrl
daa
repnz
jmp
mov
inc
xchg
faddl
add
popaw
dec
fcoml
push
ret
lods
pop
into
sbb
mov
jbe
fmulp
jb
rclb
lock
into
adc
mov
inc
nop
add
adc
pop
fld
push
mov
adc
fcmovb
les
in
push
xchg
dec
dec
cli
jo
movsl
leave
cmpsl
popa
enter
nop
adc
dec
andb
faddp
add
fcmovnu
cltd
sbb
enter
adc
sti
nop
push
out
inc
cmp
or
jecxz
les
add
pop
lods
mov
inc
mov
push
pushf
aam
pop
push
inc
jne
enter
int
orb
mov
fnstsw
mov
repnz
pusha
aam
into
cs
add
add
dec
lahf
pop
dec
and
lret
popa
pop
mov
push
cs
nop
fstpl
fdivrl
xchg
lret
dec
dec
mov
inc
popf
dec
fstpl
xchg
flds
pop
test
push
popa
loop
jecxz
negl
push
movsb
fstpl
dec
mov
mov
dec
stos
ficompl
xchg
testb
pop
xchg
xor
cmp
aad
sbb
ja
jns
dec
mov
push
mov
das
push
xchg
aam
test
xor
jg
lahf
iret
jecxz
notl
aas
adc
fsub
dec
leave
das
stc
cli
fadds
nop
push
aas
and
add
mov
fdivp
pop
stc
sub
popa
push
loop
push
inc
call
sub
cmpb
jns
out
aad
sti
mov
push
fsubrp
pop
lret
das
je
mov
push
mov
fldcw
push
and
push
jae
dec
mov
mov
and
test
dec
test
push
adc
fldenv
int
jl
sbbb
int
inc
cmp
pushf
fisttpll
pop
daa
push
rcrb
xchg
mov
int
and
repnz
xor
hlt
aad
jmp
mov
pop
xchg
insl
shll
dec
daa
sub
pop
movsl
scas
inc
add
and
add
fsubp
aam
sahf
sub
aad
out
stc
int
push
loop
inc
xor
sahf
mov
shll
add
fildl
cltd
add
jl
aam
and
jg
ja
jecxz
inc
loopne
lret
leave
call
or
imul
loope
sti
les
sub
add
aam
mov
pop
adc
push
jmp
inc
add
out
inc
sub
push
mov
inc
and
ljmp
push
inc
test
test
pop
ret
jmp
pop
lods
add
lock
and
xor
xor
mov
sbb
push
mov
pop
test
dec
mov
sahf
mov
pushf
into
mov
adc
shrl
lea
cmpsb
js
adc
dec
insl
inc
pop
dec
ret
mov
ret
cli
ret
cmp
cmp
pop
adc
sahf
inc
cwtl
dec
xchg
fisttpll
pop
subb
fstpl
xor
inc
pop
rorb
xor
mov
xchg
xchg
sbb
mov
pop
mul
int3
std
nop
std
adc
std
inc
push
outsl
cmp
inc
adc
out
daa
mov
aaa
out
loop
xchg
sahf
cwtl
sahf
dec
sahf
push
mov
repz
das
mov
pop
mov
push
dec
aam
pop
mov
out
adc
and
dec
adc
scas
inc
pop
pop
pop
xor
xor
sbb
ds
fsubl
sbb
and
out
sahf
mov
js
ds
iret
and
xchg
sbb
xchg
popa
mov
idivl
mov
clc
ljmp
ljmp
aad
out
andb
xchg
sti
mov
and
shr
push
sub
push
and
push
and
or
int
outsl
pop
dec
int3
popa
mov
push
xor
nop
ret
lds
adc
out
xchg
mov
je
or
xchg
add
int
aas
push
incb
pop
pmuludq
or
clc
popa
jmp
lds
lahf
add
sti
push
lods
jmp
dec
sahf
loope
scas
fstl
shrb
mov
mov
sarb
into
fstpt
int
mov
pop
sbb
fdivrl
sbb
pop
ds
mov
adc
jle
xor
xor
mov
adc
fstps
cmpsl
test
inc
pop
jns
add
pop
xchg
test
stos
enter
or
fsubl
cli
jecxz
mov
add
flds
sbb
ret
les
pusha
fs
bound
dec
sub
mov
sbb
fistl
or
cmp
add
filds
stos
xlat
sbb
popf
gs
out
out
iret
in
stos
lds
in
mov
inc
iret
inc
pop
cmpsl
fs
rorb
fisttpll
jecxz
mov
xchg
inc
dec
out
sub
cwtl
xchg
push
and
sub
in
and
test
ret
jl
mov
pop
sub
dec
push
push
sub
out
in
add
movsb
and
dec
and
aad
fcomps
inc
xchg
pop
push
lds
in
xchg
fwait
mov
in
dec
pop
pop
adc
cmpsb
mov
leave
cmp
fxam
enter
loop
fnstsw
mov
pop
roll
xchg
into
mov
push
push
dec
pop
dec
push
dec
cltd
cmpsb
sahf
ss
mov
xchg
push
sbb
fdivrs
pop
xchg
xor
aad
adc
sub
inc
mov
fldenv
fimull
popf
loope
fcoml
cwtl
xor
ja
shlb
adc
xlat
xor
mov
add
pop
cmp
frstor
mov
push
popa
xchg
outsb
shrl
dec
int
out
sbb
mov
mov
lds
xchg
inc
aam
hlt
data16
mov
insb
xchg
dec
inc
stos
jle
jbe
lock
pushf
mov
jbe
adc
adc
je
nop
mov
icebp
popf
pop
push
push
andnps
jo
test
addl
js
add
lds
jg
stos
or
leave
scas
push
daa
and
jecxz
or
xchg
sbb
aas
sqrtps
movsl
mov
int3
push
sbb
into
push
push
inc
call
leave
inc
ror
push
and
int3
adc
xchg
add
sub
push
jo
pop
add
call
mov
cmp
lods
out
dec
pop
sub
addl
sarb
push
in
popf
sbb
pop
xchg
jg
popa
mov
les
xchg
pop
mov
push
lods
xor
pushf
nop
xor
xor
adc
pop
cmp
pushf
sub
dec
ss
mov
push
mov
cltd
add
pop
inc
sahf
popf
scas
fs
out
mov
xchg
sbb
int3
faddl
push
mov
push
fcomps
repnz
ror
jg
sbb
pop
mov
jecxz
adc
jo
in
ret
fsubs
ds
mov
cmp
pop
test
xlat
lret
outsl
push
gs
inc
push
les
pop
mov
pandn
out
mov
push
xchg
popa
add
andb
out
sbb
idivb
dec
insl
and
sbb
and
sbb
xlat
xor
ficoml
xchg
popf
xor
sbb
push
cli
test
xchg
lock
sbb
dec
in
xchg
stos
xchg
not
lea
pushf
cmp
push
sub
jae
hlt
stos
mov
xor
fcompl
mov
ficompl
fdivrs
dec
cltd
pop
cwtl
js
fcmovnbe
pop
inc
push
push
rcrl
fcomps
pop
pop
test
cmp
mov
or
ss
pop
test
pop
jle
push
lock
sarl
outsb
push
in
sahf
push
cld
pop
inc
inc
pop
adc
fstpt
fdivrl
fidivs
sub
pop
sbb
xchg
out
out
dec
dec
aas
scas
xor
xlat
movsl
out
lret
outsb
rcr
pop
inc
rcl
aaa
lock
push
fcomp
dec
jns
jno
fwait
arpl
ret
mov
dec
dec
mov
sbb
es
pop
testl
sbb
daa
sbb
push
pop
sbb
ss
dec
movb
or
push
xor
test
pop
faddl
dec
jo
xchg
scas
sahf
sub
into
fsubl
aad
adc
mov
mov
lret
cmpsb
xor
lock
mov
push
cmpsb
dec
cmp
mov
arpl
enter
aas
in
aad
xchg
mov
pop
mov
fsubl
sbb
imul
cmp
mov
test
fists
cmp
jae
cmp
imul
sbbb
lahf
pop
inc
rcrl
sbb
cwtl
test
xchg
hlt
dec
nop
mov
mov
mov
sbb
dec
pop
sbb
pop
mov
cmp
dec
cwtl
mov
and
adc
sbb
les
xchg
push
xor
pop
mov
sbb
fisttpll
mov
pop
push
rcrl
xor
dec
mov
pop
pop
sbb
arpl
xlat
xchg
fst
add
pop
inc
rol
xchg
fstl
xchg
sub
sub
xchg
repz
push
lock
xor
mov
push
jp
push
lock
cwtl
inc
push
rorb
std
pop
enter
fnstsw
jp
pop
iret
mov
xchg
pop
inc
xor
push
cwtl
jle
mov
lods
lea
lods
cs
mov
aad
lods
lods
fdivr
out
cmp
sbb
icebp
leave
fnstsw
mov
pop
fucom
add
fldl
mov
mov
mov
jle
push
aad
lods
aam
ds
push
push
lods
aad
std
pop
push
aad
lods
lods
push
pushf
popf
pop
xlat
aad
lods
pop
lcall
pushf
sbb
lods
pop
scas
lods
ficompl
lods
fistpl
clc
test
cmp
pop
sbb
fstpl
push
mov
fwait
pushf
mov
lods
pop
lcall
pushf
rcrl
inc
lods
ficompl
lods
lcall
lods
pop
lcall
pushf
inc
pop
stc
aad
lods
fstps
lods
cltd
pushf
dec
pop
jns
leave
lods
pop
lcall
pushf
dec
pop
clc
aad
lods
fcomps
lods
cwtl
pushf
dec
pop
js
int
pop
lcall
pushf
dec
pop
not
iret
inc
push
xchg
jb
adc
mov
jno
xor
rcr
mov
jo
xor
out
iret
pop
scas
pop
ficomps
pop
sbb
jge
popf
ds
adc
mov
xor
lock
push
jnp
rclb
jo
ja
fidivrs
jp
mov
pop
jnp
mov
sbb
mov
cmp
js
clc
mov
shl
xchg
ficoms
xchg
nop
adc
fstpt
sbb
cli
fidivrl
and
sahf
mov
jle
pop
rcrl
adc
and
sahf
sbb
jnp
and
mov
jp
dec
into
push
ja
push
push
je
mov
into
fstpl
pushf
cmp
popf
ficompl
mov
jge
lahf
pop
test
pop
pop
jp
cmp
sub
inc
mov
lcall
idivl
pop
mov
fwait
pushf
into
fisttpll
jl
pop
addr16
jnp
jp
mov
sahf
mov
inc
sti
push
fcmovnu
jnp
ds
push
xor
jg
dec
jnp
mov
sahf
or
cmp
aad
sbb
cli
clc
idivb
ficompl
ds
lcall
sahf
push
cmp
pop
into
lcall
idivb
into
inc
pop
pop
stc
and
mov
ret
cmp
int3
push
je
sahf
mov
sbb
cmp
idivl
cwtl
fstpt
mov
xchg
sahf
fstp
mov
pop
aas
jnp
push
fwait
jp
iret
push
rcrl
mov
cmpsl
sahf
pop
cld
lds
fcoms
sahf
jp
xchg
icebp
js
fldt
pop
into
faddl
cmp
xlat
sahf
sbb
sbb
into
xlat
xor
mov
fsts
fstps
cltd
sahf
dec
push
pop
cmp
bound
pusha
imulb
dec
pop
test
mov
push
ja
xlat
jp
sahf
lea
mov
cmpsb
sbb
mov
jle
into
push
ss
sahf
int3
fildl
in
inc
cli
outsl
mov
or
div
mov
mov
xor
mov
into
mov
fistpl
into
test
push
aam
push
xor
sahf
js
jp
mov
cmp
into
pop
sbb
mov
pop
mov
hlt
test
sahf
push
xchg
pop
lahf
sbb
aad
cmp
sbb
int3
fwait
xchg
push
into
lods
fstpt
fdivrs
js
mov
ss
sahf
js
fcmovu
cmp
sahf
mov
jae
je
sahf
jns
into
pop
int
xor
popf
cmp
cwtl
pop
rcrb
push
sahf
mov
cs
push
pop
lock
les
jb
cwtl
sahf
mov
sahf
fdivr
sbb
sbb
cmp
inc
adc
rcl
inc
mov
push
popf
pop
je
fnsave
pop
jno
popf
pop
ljmp
xor
cli
sahf
fidivrl
adc
xlat
and
ret
fmull
jns
xchg
ror
lods
fnsave
jo
push
jl
and
clc
call
sbb
inc
scas
jmp
sahf
push
xor
push
lds
sbb
jg
sahf
cmp
fwait
lea
pop
das
into
cwtl
sahf
sub
fdivrl
pop
mov
push
test
pop
dec
into
fucomp
dec
pop
sahf
lds
cs
nop
push
jmp
push
mov
sahf
jp
lods
testl
lds
int
stos
push
lods
sahf
cwtl
lods
sahf
lea
sahf
fdivrl
in
insl
add
jnp
xor
jp
push
pop
mov
pop
ficompl
insb
pop
push
mov
js
pop
test
std
dec
into
sub
sbb
mov
sbb
push
or
repz
jge
jmp
lret
sub
fsubrl
cltd
in
lods
fdivrs
jns
cmp
push
dec
xchg
push
mov
dec
sub
dec
sahf
repz
pop
lret
sub
sahf
stos
stos
into
aad
mov
push
dec
sahf
cli
push
xchg
mov
sahf
push
sbb
iret
ficoml
stos
popf
jmp
ds
xchg
push
sahf
clc
lods
mov
sbb
mov
imul
sub
xor
sahf
mov
call
lcall
mov
pand
ds
in
lds
push
xor
pop
push
sahf
cmp
sub
or
mov
or
shl
push
fcomps
inc
cmp
ret
ds
cmpsl
into
lahf
fwait
cli
jp
mov
pop
mov
pop
sahf
fidivrl
cli
push
mov
daa
into
pop
and
sahf
jns
clc
pushf
mov
and
imul
cmpsb
stos
sbb
sahf
sbb
pop
in
inc
in
es
data16
in
mov
movsl
or
aaa
sahf
shlb
inc
sbb
js
int3
pop
sub
sahf
add
in
sbb
sahf
aam
into
test
into
sub
inc
fisubl
ds
sahf
mov
cmp
add
dec
sub
jecxz
cmp
jb
mov
pushf
fwait
pop
fldt
int3
pop
lds
cli
inc
mov
jge
cmp
clc
lcall
or
cmp
push
jnp
arpl
fisttpl
cmc
pop
jnp
inc
xlat
jmp
and
add
fwait
push
loop
and
sahf
ret
mov
xor
sahf
mov
cs
into
push
fdivrl
into
and
sahf
add
into
push
loope
shrl
push
repz
cmp
inc
into
xchg
fcompl
mov
push
ds
ds
mov
cwtl
push
mov
cmp
sbb
or
sbb
fsts
cmp
into
xchg
fstpl
mov
add
int3
sahf
mov
into
popf
idivb
sahf
inc
fwait
jns
mov
pop
lahf
fmull
jg
fisttpll
jp
mov
pop
fsubs
sahf
jp
inc
jns
clc
push
xchg
stc
sbb
lods
cmp
notl
push
cltd
cmp
aas
into
cmp
test
sahf
in
sbb
mov
fwait
sbb
scas
cmp
fsubrl
push
sahf
aam
scas
call
cli
sahf
adc
mov
ds
mov
push
loop
test
sbb
scas
mov
mov
fwait
sahf
js
cmp
fwait
sbb
cmp
test
cmp
mov
fdivr
sub
pop
jbe
sahf
mov
cmp
scas
sbb
sbb
mov
pop
sahf
je
pushf
lea
dec
mov
rcrl
mov
scas
lods
fstpl
sahf
aas
fldt
mov
sbb
jp
pop
cmp
sbb
test
mov
xor
mov
sub
lcall
pop
xchg
cmp
jp
pop
xchg
sahf
sbbb
repz
lea
scas
sbb
fdivr
outsb
or
fnstcw
fdivrl
jnp
mov
fwait
lods
fistpl
scas
jns
ficoml
pop
icebp
ds
cli
inc
mov
sbb
sahf
mov
mov
jne
mov
negb
popf
dec
js
jp
pop
mov
lds
cmp
sahf
push
push
sahf
mov
fstps
xchg
mov
pop
cmp
lock
fisubrl
mov
aaa
popf
ja
fistl
aad
pop
ficoml
cltd
pop
aaa
cmp
jmp
cmp
cwtl
lods
cmp
xchg
scas
fnstsw
inc
sbb
mov
scas
fisttpll
ss
sub
nop
cwtl
pop
cmp
iret
push
dec
sahf
mov
idiv
sbb
into
pop
jnp
pop
cmp
mov
inc
cmc
scas
mov
push
fidivrs
ds
pop
sbb
daa
ds
mov
insb
pop
pop
push
lret
shlb
push
jnp
or
jne
outsb
sbb
mov
adc
pop
push
fwait
cld
fcomps
mov
push
pop
pop
pop
cs
push
leave
fisubl
stc
cmp
jge
iret
adc
mov
fcoml
sbb
sti
fcmovnu
fcoms
aam
or
negl
push
lahf
psubd
jnp
dec
and
dec
stc
in
mov
loopne
adc
inc
inc
lret
sbb
jns
jnp
mov
fstps
paddusb
fnstcw
xor
hlt
scas
std
mov
and
pop
xchg
ret
lcall
cld
sar
inc
fwait
mov
jl
lret
sahf
fistpl
popf
cmp
pop
pop
dec
inc
sbb
pop
mov
and
push
fcomps
mov
cwtl
sbb
lds
test
test
insl
inc
pop
lret
push
cwtl
push
pop
dec
cld
jge
ds
jae
inc
fidivrl
mov
pop
push
mov
stc
pop
paddb
jle
cmp
dec
mov
fadd
fwait
cmp
mov
sbb
inc
push
fcoml
mov
popf
cltd
into
sbb
mov
inc
dec
fcmovb
ret
xlat
mov
or
or
fldcw
int
rcr
push
push
lcall
push
or
cmp
aad
push
push
and
inc
pop
stc
pop
fwait
xchg
test
je
int3
push
lret
clc
inc
dec
sahf
cmp
push
jnp
pop
push
fxam
mov
fcompl
dec
ret
sar
int3
pop
adc
fmuls
mov
fiaddl
fcompl
clc
xor
pushf
cwtl
xchg
xchg
dec
sbb
or
cltd
fstpl
fiaddl
dec
iret
into
rcrl
ret
jle
pop
sbbb
mov
cmp
sub
mov
in
add
fldl
mov
lret
mov
add
fcompl
dec
mov
nop
es
repz
sbb
pop
movsl
outsb
pushf
jp
inc
movsl
sahf
mov
pop
clc
mov
cmp
fiaddl
fwait
mov
aad
xor
dec
sahf
pop
ds
fstl
push
push
rcl
jge
push
push
cmp
push
mov
dec
add
mov
mov
mov
lods
sbb
dec
fdivrs
stos
xorl
push
xchg
push
fisttpll
cli
xor
adc
pushf
cmp
mov
mov
mov
sub
fmull
or
mov
mov
stc
sub
dec
push
fstpl
mov
sbb
mov
pushf
fs
dec
xchg
dec
test
push
aam
js
fcompl
fidivl
xlat
pushf
les
push
sub
mov
jnp
adc
cmp
inc
lret
jg
int3
push
rcr
pop
lret
fiaddl
dec
cmp
fstpl
adc
cld
sub
repnz
pop
push
pop
inc
pop
pop
mov
aas
push
int3
shrl
add
push
push
or
push
fistpl
mov
dec
dec
mov
xchg
test
push
aam
xorl
ds
pop
ds
pushf
pushf
push
push
fdivrp
aas
pushf
mov
and
mov
add
push
jle
adc
xlat
mov
pop
aam
jg
int3
jg
cmp
cmp
rorb
xchg
fnstcw
inc
mov
dec
int3
adc
cmp
xchg
mov
lret
push
add
pop
fnstsw
scas
ds
push
xor
jns
insl
push
push
cli
mov
les
scas
nop
lock
pushf
jns
fwait
pop
sbb
inc
cwtl
sbb
sti
popf
xchg
adc
pop
pop
aaa
or
mov
aad
inc
adc
mov
leave
rorl
andl
inc
sahf
xchg
mov
jbe
sahf
rclb
aad
sbb
cwtl
jnp
inc
fists
ds
jl
popf
push
mov
xchg
fstpl
push
add
scas
adcb
stos
leave
pop
push
lea
sbb
push
dec
jnp
aas
nop
mov
mov
stc
fstp
popf
dec
fldl
pop
popf
cmp
sub
pop
enter
cmp
inc
jns
pop
adc
sbb
push
push
xchg
aam
mov
add
pushf
add
sahf
mov
jge
jl
mov
int
iret
xor
jp
or
jns
push
mov
lret
rcl
test
pop
mov
sar
pop
pop
lds
iret
scas
scas
or
sti
push
fcompl
js
ret
fstps
sbb
pop
lea
outsl
dec
cmp
pop
leave
es
sub
lret
inc
scas
out
sahf
lret
fnstsw
xchg
punpcklwd
or
ds
lret
pushf
pop
jns
aas
mov
xchg
call
xlat
lcall
jl
test
ret
sarb
adc
xchg
test
inc
adc
scas
outsb
fdivrs
or
sti
pop
xchg
ret
push
orb
dec
sub
int3
sbb
cli
jge
xor
or
cs
pop
cltd
push
sbb
cmp
sbb
xchg
scas
in
rolb
mov
fnstcw
xchg
lret
movl
leave
jl
jnp
xlat
pop
in
or
mov
adc
leave
cmp
dec
rcrl
jno
sbb
pop
iret
dec
aas
sahf
inc
fcompl
lods
mov
sbb
cwtl
pop
or
popf
or
jl
push
dec
std
fcmove
stos
dec
jle
lds
movl
or
inc
pop
xor
pop
sbb
popf
aad
aam
mov
push
inc
inc
lret
dec
dec
flds
sbb
fmulp
or
movsb
cmp
push
pushf
push
pop
xchg
mov
int3
sahf
mov
mov
pop
leave
cwtl
inc
push
adc
inc
cld
inc
dec
sbb
sbb
push
mov
dec
inc
sbb
scas
sahf
adc
pop
loop
or
xchg
push
rcl
sti
pop
insl
scas
xchg
mov
dec
or
sbb
ss
fstpt
std
pop
pop
inc
inc
mov
aam
dec
jmp
lret
scas
lahf
pop
nop
cmp
ffree
dec
pop
stc
adcl
cmp
cmpl
mov
fdivr
sub
cmp
pop
mov
inc
iret
stos
fstps
xchg
mov
cmp
jl
jge
sbb
pop
into
mov
push
ljmp
inc
pop
or
fidivrl
xchg
rorb
push
mov
jle
pop
in
scas
out
fldl
pop
inc
adc
cmpsb
or
scas
mov
sbb
fadds
cs
mov
cltd
push
mov
fst
mov
gs
xchg
mov
adc
mov
cmp
insb
pop
fwait
pushf
xchg
push
es
pushf
enter
or
roll
fxch
jg
fcoms
std
rcrb
cltd
lret
stos
shrl
lea
mov
stc
dec
ds
rolb
rolb
jmp
stc
cld
jg
xor
ret
sbb
insl
push
aam
sbb
stc
pop
xchg
aad
push
pop
aad
fwait
lret
scas
les
leave
into
mov
adc
or
into
stos
scas
sbb
dec
lret
xchg
nop
into
fdivr
cli
pop
xchg
shr
inc
cmp
cmp
pop
mov
out
adc
je
in
sub
push
push
rcrb
sarb
lret
sbb
inc
mov
or
lds
mov
dec
mov
mov
pop
pop
pop
or
mov
push
movsb
stos
push
mov
jg,pt
test
push
mov
popf
test
sub
lods
pop
jle
xorl
jl
fcoml
test
xchg
mov
cwtl
mov
shll
xchg
or
cmpl
jns
pop
frstor
pop
xor
sarb
lods
xchg
push
pop
lcall
pop
lcall
xchg
mov
push
setge
pop
pop
jmp
add
dec
cmpsb
xchg
pop
pop
xorb
fimull
cwtl
fldcw
or
leave
inc
jl
jge
pop
mov
push
inc
into
rorl
xor
cmp
pop
mov
sub
inc
scas
leave
pop
pop
xchg
std
fs
fidivrl
adc
or
dec
std
cmpl
rcrl
sbb
test
cmp
cmp
and
lea
inc
rol
inc
lret
dec
push
pop
fwait
jl
dec
dec
dec
stos
jecxz
imul
sbb
stc
pop
lret
scas
and
xorl
lcall
sub
add
mov
mov
adc
mov
xchg
sti
pop
inc
lret
push
pop
xchg
sub
sbb
pop
xchg
xlat
aad
mov
lcall
xchg
orb
pop
mov
xor
jg
cwtl
pop
push
scas
int
mov
pushf
dec
pop
xchg
aam
or
roll
adc
pop
adc
or
dec
js
int3
push
fs
fwait
adc
mov
or
mov
add
leave
lret
scas
test
mov
mov
mov
and
mov
test
jbe
filds
dec
mov
cmp
pushf
lock
pop
inc
dec
mov
or
push
mov
dec
andb
int3
enter
aam
adc
aad
dec
sahf
sub
xchg
or
mov
xchg
add
insl
enter
int
jl
xchg
aad
fwait
pop
lcall
push
pop
mov
iret
pop
xchg
cwtl
inc
dec
frstor
fmull
pop
jg
orl
inc
jecxz
fcmovnu
mov
popf
push
cmp
pop
mov
inc
je
int3
sahf
fstsw
mov
cmp
adc
call
or
or
xchg
jmp
inc
ret
or
push
mov
fiaddl
popf
mov
jp
int
cmp
push
notl
add
mov
add
dec
mov
call
mov
mov
pop
cwtl
lcall
inc
xor
mov
push
dec
or
in
popa
sub
enter
lods
or
dec
test
mov
nop
xlat
dec
push
mov
fcompl
jge
out
jbe
fst
inc
fnsave
stc
fnstenv
xchg
push
fcmove
mov
sbbl
enter
push
roll
adc
cmpsb
or
or
dec
xor
cmp
jle
mov
pop
push
or
mov
stc
sbb
sub
nop
fwait
mov
pop
popf
test
push
push
add
xor
or
push
pop
int3
aam
push
push
pop
mov
push
lea
aaa
mov
or
adc
dec
sbb
xchg
sbb
sub
push
dec
mov
xlat
mov
bound
dec
fwait
out
sbbb
dec
xor
or
mov
jle
pop
dec
fcoms
xchg
mov
scas
xchg
lds
ss
adc
mov
push
hlt
cmpsl
dec
fisttpl
cld
in
inc
sbb
mov
sar
sbb
mov
pop
mov
mov
fwait
sbb
mov
rcrl
pushf
fildl
pop
pop
fnop
aad
ret
push
cli
pop
sarb
pop
cmpsb
add
xor
push
fisttpl
push
fmul
mov
mov
push
jp
mov
popa
sbb
sbb
cmp
xchg
inc
pop
mov
sarb
inc
mov
dec
int3
cmpb
jnp
aam
movb
adc
adc
mov
dec
inc
int3
mov
xchg
cmp
cmpsb
mull
pop
jg
push
sahf
xchg
xchg
sbb
insb
mov
pop
test
xchg
je
dec
faddl
aam
push
or
sbb
mov
shll
cmp
cs
data16
mov
dec
xchg
rolb
mov
std
dec
lret
jp
add
mov
sbb
inc
ds
fmull
add
lods
inc
fdivrl
pop
dec
pop
jle
addr16
jnp
pop
inc
divb
ret
pop
mov
insb
dec
fcmovnb
pop
cmp
dec
mov
push
push
inc
inc
pop
sbb
aad
cmp
mov
jg
mov
decl
jecxz
mov
jns
inc
movb
push
or
mov
in
cwtl
lret
cmp
flds
testl
cmp
jmp
inc
mov
fcomp
add
sbb
dec
xchg
popf
xchg
push
xchg
xor
cwtl
inc
xchg
dec
or
sti
cmpb
push
cmp
fdiv
push
mov
push
std
sub
xchg
mov
jp
push
pop
pop
rcl
int
mov
fnstcw
xchg
fnstenv
lds
push
adc
fmull
push
cmp
sbb
jnp
push
lock
sarl
cli
dec
pop
xchg
cmp
dec
inc
mov
sub
sbb
aas
hlt
pushf
push
fcomp
xor
mov
jge
mov
and
jl
pushf
int3
repz
dec
sbb
dec
push
pop
mov
xor
fmul
pop
cmp
mov
mov
lcall
mov
pop
jg
fistpl
popl
pop
mov
push
movsl
sarl
andb
daa
mov
jne
adc
jl
test
pop
inc
sbb
nop
mov
jge
push
mov
jle
pop
mov
jge
jno
sbb
push
aaa
sti
sbb
inc
roll
push
mov
mov
push
push
jnp
adc
and
xchg
test
flds
mov
mov
sbb
cmp
not
and
into
sbb
add
ds
jmp
jne
cmp
mov
jns
scas
les
xor
cwtl
xchg
aad
xchg
pop
test
aam
rolb
push
push
mov
aad
stc
cld
mov
fimull
xchg
aam
inc
mov
push
inc
mov
stc
or
ljmp
rorb
lret
fs
inc
jmp
pop
negl
sti
mov
xchg
add
test
xor
aad
push
inc
jne
test
jne
lods
popf
leave
push
sbb
pop
mov
sbb
ss
outsb
sbb
jno
xabort
or
dec
mov
mov
iret
pop
popf
sbb
sbb
jp
iret
roll
dec
mov
or
jmp
push
jge
mov
addl
incl
ret
cmp
and
mov
sub
into
jle
clc
sub
inc
fwait
pop
mov
cmp
sbb
test
inc
lret
bound
push
fnstsw
jl
add
push
mov
jge
pop
dec
sub
rcrb
pop
push
add
stc
sbb
xchg
mov
push
pop
mov
pop
xchg
stc
jl
push
clc
xchg
int3
adc
fwait
dec
aad
adc
roll
dec
jmp
iret
push
ret
pop
xchg
leave
ret
mov
jl
jl
push
dec
inc
xchg
lods
sahf
test
pop
lock
xchg
sbb
cmp
inc
pop
push
cmp
push
fcoml
rcrb
mull
inc
dec
mov
iret
dec
add
mov
inc
cmp
cmp
ret
sbb
insl
cmp
xchg
inc
push
mov
inc
fiaddl
aad
test
add
sbb
push
dec
jmp
clc
int
mov
adc
xchg
pop
mov
pop
subb
or
cmp
mov
int3
adc
enter
fsubs
cwtl
pop
dec
jns
lea
dec
sub
imul
fcomp
push
pop
clc
cmpl
mov
mov
dec
xchg
lcall
outsl
xor
or
dec
dec
cmp
arpl
mov
fsts
fcmovb
mov
xchg
adc
inc
push
pop
cmp
shll
fnstsw
adc
ss
ret
cmp
movsl
adcl
cli
mov
dec
mov
sti
ret
jae
push
pop
xor
mov
cltd
or
xor
mov
inc
dec
mov
dec
cld
int
dec
push
inc
or
add
sbb
jb
mov
inc
push
iret
mov
xchg
sbb
pop
ja
mov
and
iret
test
dec
xchg
or
push
sahf
push
dec
popf
sbb
scas
xchg
dec
lret
jne
push
int
enter
shll
pop
rclb
pop
dec
fdivs
pop
mov
flds
dec
jl
xchg
ret
stos
shr
fmull
lea
cmp
iret
pop
dec
dec
sbb
add
fisubs
dec
push
mov
cltd
mov
xchg
dec
cmp
pop
dec
sbb
dec
add
fistl
mov
dec
int
xchg
pop
pushf
pop
test
sahf
dec
mov
repnz
cmp
mov
int3
jle
lret
fdivrs
dec
mov
cltd
dec
jge
int3
iret
bound
in
dec
imul
popf
adc
or
jnp
inc
xor
ljmp
mov
fnsave
add
cmp
push
cmp
cmp
sti
aad
sub
fincstp
push
outsb
into
mov
rcll
addr16
push
sbb
pop
iret
aam
leave
mov
in
mov
jno
mov
mov
sti
sub
rclb
sub
xchg
mov
xor
inc
push
fstpl
mov
test
cmp
pop
inc
jl
mov
adc
xchg
mov
pop
mov
fstpt
pop
mov
dec
push
push
frstor
jno
adc
pop
sub
xchg
mull
push
pop
adc
pop
cmp
mov
mov
enter
adc
pop
xchg
mov
aad
lcall
lcall
add
adc
lea
popa
cmpb
mov
dec
push
pop
mov
pop
imul
fadds
sbb
mov
xchg
cmp
pop
add
cmp
es
cwtl
jnp
jno
push
cmp
dec
fdivrs
lret
jmp
cmp
or
aam
cltd
cmp
iret
cwtl
push
cmp
sub
popf
push
mov
dec
cmp
inc
sahf
aad
divl
fnstcw
push
int3
or
pop
pop
push
inc
push
mov
xchg
cmp
sarl
pushf
inc
int3
jno
ds
cmp
iret
cmp
aas
fnsave
fisttpll
cmp
jno
es
test
clc
fistpl
ficompl
outsb
ret
mov
cld
push
lods
addps
mov
sub
jno
xchg
push
lret
ljmp
fdivs
pop
dec
xchg
je
inc
into
cltd
pop
pushf
mov
sbb
xor
or
mov
leave
push
sahf
fcomps
jne
pop
cmp
int
push
negb
push
dec
pop
mov
lahf
stc
pop
mov
pop
xchg
test
dec
lcall
pop
pop
loopne
inc
jp
ficompl
lcall
faddl
jp
sbb
adc
test
jge
pop
enter
mov
jnp,pt
aam
fildl
jmp
nop
cmc
push
adc
push
cmp
push
pop
xor
mov
pop
jno
mov
add
lcall
mov
adc
push
push
dec
mov
dec
aaa
xor
push
jp
cmp
fimull
test
fstp
imull
jmp
mov
pushf
int3
mov
mov
int
push
aaa
push
jle
test
ficompl
iret
sahf
lods
fwait
jg
inc
xchg
pop
cmp
mov
xchg
mov
mov
inc
enter
cmp
mov
pop
negl
popf
push
bswap
sbb
fbstp
dec
dec
pop
pop
mov
or
sbb
daa
data16
adc
cmp
or
sbb
inc
mov
cmp
fadd
push
je
sbb
push
mov
cmp
push
popf
push
adc
rcl
or
fisttpl
dec
sbb
pop
nop
lcall
push
pop
mov
aas
sbb
push
sbb
jp
inc
aad
cmpsb
dec
fdiv
aad
test
fcompl
clc
sbb
dec
mov
outsl
popf
test
pop
ss
pop
push
mov
or
negb
mov
cmp
adc
mov
pop
pop
fcomps
xchg
ret
lret
cltd
lods
pop
lahf
cmp
push
dec
mov
sahf
test
pop
mov
mov
pop
movsl
push
lahf
jp
adc
dec
lods
inc
lock
cmc
push
mov
aas
cmp
dec
pop
mov
lcall
dec
dec
orl
or
push
jnp
or
ficompl
push
sbb
push
xchg
push
xlat
pop
out
aas
fimull
or
and
xor
push
fcompl
out
push
lods
sarb
fistpl
notl
pop
rorb
xor
aam
inc
fs
mov
or
movsl
mov
cld
jp
xchg
cmp
jb
ficompl
sbb
pop
popf
pop
jl
xchg
insl
adcl
mov
cmp
xchg
pop
fwait
stc
pushf
insl
sbb
pop
aaa
sbb
fwait
dec
cmp
pop
popf
sbb
rcll
adc
adc
dec
jmp
or
iret
cltd
xchg
adc
pop
mov
xchg
cld
mov
jl
jae
pop
push
sbb
sbb
xchg
pop
jp
cmp
shlb
mov
cmp
into
cmp
mov
mov
mov
pop
cmp
pop
adc
sub
orb
xchg
lret
push
dec
add
test
sbbb
pop
lods
add
fcompl
inc
lret
mov
mov
xor
pop
stos
push
jge
pop
jns
mov
or
fisubrs
xchg
mov
std
cli
pop
sub
test
mov
or
fsubrs
inc
cmp
mov
dec
adc
mov
inc
fnstenv
mov
sti
cmp
pop
jg
test
inc
rcr
sub
or
sti
pushf
cltd
sahf
push
inc
cwtl
mov
or
push
sbb
push
leave
pop
test
xchg
fstl
add
cmp
sbb
dec
and
dec
dec
stc
mov
sbb
push
shrb
stos
cwtl
dec
cs
pop
adc
lds
sbb
ss
pop
dec
leave
test
sbb
pushf
xchg
jl
sub
mov
cltd
mov
mov
pop
mov
stc
jo
jne
dec
roll
test
sub
adc
daa
lods
lea
lods
mov
lock
mov
mov
lcall
sbb
adc
mov
mov
cmp
pop
outsb
mov
jp
out
cmp
xchg
mov
in
fstpl
pop
repnz
js
stos
mov
mov
aad
lods
iret
lcall
pop
pop
mov
mov
push
pop
adc
xor
jae
mov
sub
xchg
std
mov
sti
pop
fisttpll
jns
inc
mov
test
std
dec
add
add
mov
repnz
fidivrl
shlb
mov
aas
les
cltd
test
cld
movsl
pop
push
jae
sahf
test
inc
sub
mov
pushf
jecxz
addr16
rcr
pop
fsubl
cmpl
jmp
ds
pop
mov
les
dec
inc
dec
pop
into
stos
les
inc
inc
lods
fsubr
push
rcrl
pushf
addr16
stc
pop
repz
adc
pop
xor
cmp
lcall
sti
mov
rcrl
test
dec
jnp
push
iret
xchg
adc
inc
in
and
and
mov
jle
stos
mov
xlat
push
fcomp
lods
ficompl
mov
rcrb
ret
lcall
pushf
enter
adcb
lods
int
into
pop
iret
aad
lods
rcrb
lods
rcrb
lods
aam
push
push
aad
lods
xlat
pushf
fcomps
aad
lods
fldt
lods
inc
ljmp
inc
lods
pushf
dec
pop
lret
lods
int
dec
push
rclb
rcrl
lods
pop
lcall
inc
lods
inc
pushf
inc
pop
dec
aad
lods
dec
lcall
fstpl
mov
push
pop
ss
lods
cmc
lcall
pushf
push
pop
xor
lcall
pushf
push
pop
xor
adc
repz
or
nop
mov
or
out
mov
scas
icebp
add
lcall
push
pushf
xor
aad
lods
iret
lcall
push
insl
inc
repnz
clc
lods
dec
insl
inc
repnz
insl
inc
repnz
clc
lods
dec
insl
cwtl
sahf
cmp
push
xor
push
push
nop
outsb
jns
shll
mov
cli
jp
in
frstor
inc
sbb
in
lods
pop
cmpb
cwtl
lds
out
popf
push
xchg
imul
inc
mov
fistps
in
mov
pop
add
jbe
lea
divl
cmc
pop
jp
lods
cwtl
orl
icebp
repnz
dec
add
dec
add
dec
or
dec
or
fstl
nop
shll
cmc
xor
push
lods
je
xchg
inc
mov
aam
hlt
pop
adc
push
lods
jne
xchg
inc
mov
aad
cmc
pop
push
or
pop
in
xchg
int3
mov
push
add
mov
pop
or
fxam
cmp
mov
mov
inc
xor
jns
dec
cli
scas
dec
lret
push
push
push
sbb
push
sbb
sti
pop
insl
std
or
pop
sbb
ret
sbb
sbb
std
push
test
cmp
sbb
mov
cmc
pop
mov
jo
add
lock
xor
pusha
enter
and
dec
out
jmp
call
fcoml
fcomps
lret
adcb
sarb
mov
rcrb
clc
xor
inc
mov
shll
mov
out
sub
push
jle
push
dec
fdivr
aad
lods
pop
lcall
pushf
inc
pop
jg
leave
lods
lahf
lcall
pushf
rcrb
aad
lods
and
lods
pusha
pushf
pop
pop
adc
lods
mov
rclb
lods
ret
pushf
add
aad
lods
aam
inc
push
push
popa
lods
fstps
fiaddl
push
ror
loope
rcrl
aad
lods
and
lods
bound
lods
mov
ret
loop
dec
pushf
add
aad
lods
push
lcall
pushf
sbbl
mov
ret
lcall
pushf
lret
aad
lods
inc
lcall
pushf
aam
movsb
aad
lods
les
lods
add
and
lods
inc
lcall
pushf
movsl
pop
rcl
lds
push
lods
fcomps
lods
pop
lcall
mov
inc
pushf
pop
inc
aad
lods
lds
lods
lret
pop
dec
aad
lods
dec
lcall
pushf
pop
pop
aad
int
sub
lods
dec
pushf
enter
dec
lods
mov
lods
enter
loop
mov
inc
inc
cmp
inc
add
pop
pop
sub
std
pushf
repz
aas
les
dec
sbb
mov
push
aaa
rolb
decl
pop
cmpsb
gs
sub
aam
aam
in
in
test
add
scas
test
shlb
push
dec
cmpsl
inc
dec
ret
out
mov
mov
and
into
test
dec
outsl
loopne
daa
test
fs
jg
inc
fimull
adc
aad
daa
pop
or
in
stos
enter
add
or
cmpsb
les
test
pop
pop
mov
mov
out
push
pop
test
enter
decl
jecxz
add
cmpsb
into
in
sub
mov
sbb
fisubrl
and
aas
jmp
or
lds
sbb
roll
nop
fimull
popf
pushf
addps
mov
fstp
pop
aam
stos
dec
pop
inc
xchg
xor
or
xchg
mov
pop
jne
jmp
rolb
leave
clc
add
sbb
dec
jns
fcmovbe
mul
add
adc
les
test
cwtl
les
add
gs
pop
dec
jecxz
xlat
xchg
fidivl
sbb
aam
jnp
shr
dec
xchg
xchg
fcoml
dec
push
test
movl
and
add
pop
cmp
mov
fldt
test
das
add
iret
inc
dec
iret
sub
mov
das
test
pop
inc
mov
pop
into
push
lds
sub
pop
or
inc
xchg
jl
test
adc
sbb
lret
xchg
pushf
or
addr16
adc
mov
fcomp
dec
ret
push
aam
ror
mov
pop
pop
fs
sbb
pop
cwtl
dec
or
and
xchg
lea
mov
and
mov
popf
push
aad
mov
xchg
pop
mov
fwait
or
pop
push
adc
push
sbb
insb
mov
sahf
daa
rclb
aad
mov
dec
insb
mov
fisttpll
mov
mov
pop
sbbl
shlb
mov
push
leave
fmuls
lret
imul
fiaddl
sbb
push
popf
push
inc
gs
ficoml
stos
mov
inc
pop
dec
pop
call
fcmovu
sbbl
pop
out
dec
push
pop
in
movsl
aaa
pop
inc
subl
setno
push
pop
dec
outsb
sbb
push
sahf
int
add
ret
and
push
fcompl
mov
pop
fcmovu
inc
push
xchg
inc
adcl
sub
sbb
push
jbe
insb
xor
and
out
pop
fcmovu
dec
dec
mov
fildl
mov
dec
es
pop
leave
sbb
inc
sbb
or
shll
movsl
test
and
mov
in
mov
test
int3
push
mov
lcall
xor
cmpsl
dec
jecxz
fwait
pop
pop
pop
into
xchg
xchg
insb
lret
and
nop
push
dec
sbb
pop
cld
xchg
pop
inc
fmuls
aas
adc
fstps
mov
jbe
lock
lds
nop
jge
mov
jno
pushf
aaa
lret
movsb
and
adc
and
repz
adc
inc
inc
pop
mov
out
ss
mov
push
dec
sub
inc
push
and
mov
test
cmp
push
out
jge
cltd
jl
sub
fs
nop
jge
ror
lret
pop
xchg
push
sbb
ret
int3
pop
rcll
cs
pop
fisubs
pusha
mov
int
std
or
xchg
loopne
pop
inc
pop
and
jge
out
mov
add
cmp
xlat
cmp
jle
mov
dec
xchg
xor
pop
push
rol
test
lods
fisttpl
pop
xchg
pop
fnsave
push
pushf
xor
aad
lods
rcrb
es
call
fldl
inc
lcall
pushf
pop
push
and
dec
dec
fnstsw
and
mov
mov
cmp
fwait
jge
pop
inc
dec
adc
stc
in
lcall
pop
mov
xor
clc
ss
xor
sbb
jo
rcr
pop
int3
xchg
lock
mov
pop
sbb
fisubrl
fcoms
adc
xlat
and
pop
lret
push
lret
mov
mov
int3
push
fisttpll
loopne
mov
mov
dec
fnstsw
and
shll
decb
aad
lahf
pushf
out
cli
xlat
mov
pop
fcoms
fnstsw
sub
fcmovbe
push
ss
in
lock
adc
out
les
rcrb
leave
js
mov
roll
push
js
int3
test
mov
sub
rol
xchg
or
in
cmp
dec
leave
lods
ror
sahf
dec
faddl
test
xchg
fldl
shrb
addr16
push
pop
in
or
push
cltd
xchg
xchg
inc
fcompl
in
lds
fstpl
out
xor
mov
popf
mov
xor
dec
aad
sar
fnsave
out
pop
dec
fcompl
add
fmull
fdivl
fdivrs
popf
in
aad
inc
mov
push
into
fadd
cs
imul
xchg
lock
xor
imul
rcl
fstpl
pop
inc
mov
mov
cwtl
fdivrs
push
mov
jecxz
nop
std
xchg
aam
cmc
xor
out
push
fcompl
jmp
pop
inc
add
cli
mov
pop
int
lods
sub
mov
adc
and
fdivrl
fmul
adc
hlt
cmp
jno
je
xor
sub
xchg
sbbl
xchg
xor
scas
fcmovb
imul
rcll
sbb
iret
int3
imul
adc
mulb
clc
jge
movsb
xlat
cmpsl
pop
into
push
ja
fistl
stos
sbb
fs
mov
cltd
adc
in
fucomi
ljmp
fistl
mov
clc
movsb
fldt
addr16
je
shrl
fcmovnbe
xchg
nop
lret
dec
xchg
rol
adcb
icebp
movsl
xchg
lods
loop
int
xorl
lret
subl
xor
push
mov
cmp
fcmovne
repz
icebp
jmp
mov
enter
aam
xor
mov
inc
jo
push
pop
inc
aam
dec
mov
nop
mov
jno
aam
mov
inc
push
shll
push
jmp
ss
rcl
nop
and
dec
scas
fsts
push
mov
pushf
jb
push
das
xchg
mov
int3
mov
xor
adc
pop
ss
mov
aad
add
push
mov
in
dec
pop
rclb
rdtsc
mov
sub
mov
lcall
fs
into
jbe
lret
inc
push
sbb
xchg
ss
mov
cli
xor
push
ss
aam
fcmovbe
push
cmpl
xchg
popf
je
adc
sub
pop
dec
in
hlt
std
push
xlat
push
shrb
jecxz
addr16
pusha
sarl
xor
cli
dec
mov
mov
iret
gs
mov
and
mov
clc
lret
pushf
aam
mov
inc
cmp
into
test
cld
fistpl
dec
dec
arpl
movsb
pop
sub
aam
jb
shll
cmc
fisubl
xor
sub
ret
std
xor
cld
int3
pop
in
cwtl
xlat
ret
cmp
push
repz
nop
push
loop
mov
or
push
mov
div
lret
xor
jge
arpl
mov
out
xor
hlt
push
mov
nop
icebp
mov
fiaddl
int
push
push
nop
push
arpl
push
inc
fdivl
mov
pop
pop
add
jecxz
insl
dec
shlb
push
sti
sbb
dec
roll
es
movsl
lcall
pop
popf
pop
jecxz
xor
fidivrl
aas
insb
mov
push
scas
shlb
aam
pop
adc
dec
aaa
lea
popf
in
fwait
mov
and
mov
xor
ret
push
lret
inc
jnp
xchg
daa
inc
les
enter
lds
aad
lods
inc
lcall
pushf
dec
pop
int
into
lods
push
lcall
pushf
rcrb
aad
lods
push
lcall
pushf
push
pop
fcom
es
aas
xor
inc
mov
ret
pushf
inc
pop
inc
aad
or
push
rol
fcompl
aas
and
fstpl
fcmovnbe
lods
cmp
std
lods
pop
pushf
fnsave
pop
jbe
test
rcr
pop
cld
roll
xchg
pushf
pop
rcr
mov
push
mov
jbe
aam
pop
xchg
or
je
fnstsw
dec
test
push
xor
pop
nop
mov
lret
pop
popf
lods
scas
push
fisttpll
mov
lcall
int3
dec
dec
rol
jmp
add
sahf
pop
fldl
rorb
pop
or
fisttpll
sub
scas
ljmp
into
adc
mov
cmpsb
push
insb
into
pushf
scas
ljmp
sub
mov
in
nop
inc
rcrb
push
jae
popf
int3
stos
popf
dec
mov
mov
repnz
fstpl
add
lahf
ds
frstor
mov
push
inc
enter
push
push
dec
mov
cmp
clc
movsb
lcall
dec
lods
jl
int
fcmovnbe
aam
mov
rcl
jnp
pushf
pop
pop
int3
aad
lods
into
lcall
pushf
aas
lcall
mov
pop
daa
cli
addr16
into
out
popf
loopne
inc
jmp
adc
ret
pop
pop
fistps
fidivs
lret
mov
dec
xchg
ret
iret
rorb
xlat
mov
fsubrl
rcrb
mov
push
int
cmp
cld
movsl
and
rol
lret
je
cmc
pop
cld
fstpl
jle
inc
cli
push
outsl
and
int3
cmc
shrb
mov
lcall
pushf
push
pop
sbb
lcall
aad
lods
ds
pushf
pop
clc
lods
lcall
repnz
cmp
pop
pop
push
mov
mov
mov
dec
ret
lods
ret
pushf
sti
pop
aad
lods
inc
lcall
pop
xor
adc
out
in
mov
push
es
cwtl
cmc
xchg
jmp
pop
inc
test
or
int
int3
movsb
cs
aad
pushf
add
shlb
ja
test
out
pop
aad
cwtl
popf
mov
fwait
lods
ficompl
lods
adc
aad
lods
lea
lods
add
arpl
lcall
mov
or
push
lods
sbbl
mov
xchg
pushf
xchg
pop
pmullw
mov
lods
add
xchg
pop
adc
lcall
pushf
add
hlt
pushf
fcomps
lods
adc
xchg
pop
mov
and
rorl
fcompl
rcr
inc
pusha
lret
es
pop
cmp
sahf
mov
xlat
aad
fsubl
mov
pop
sbb
push
sahf
clc
movsb
push
insl
fidivl
shlb
mov
sahf
pop
mov
shlb
xor
repz
dec
dec
fisttpll
dec
mov
lret
mov
scas
fidivrl
mov
rcrb
mov
aam
push
call
call
int3
inc
push
dec
ljmp
faddl
ds
mov
cmp
int3
or
sub
sbb
lods
cld
mov
jle
mov
popf
lret
lods
sbb
xchg
lods
mov
out
push
fs
cmpb
xor
pop
cli
mov
jge
repnz
stos
push
fcmovnu
lods
ficompl
enter
popa
rcrl
pushl
jl
popa
out
inc
popf
lret
pop
add
pop
mov
dec
pop
pop
aam
data16
mov
inc
pushf
popf
pop
into
or
sbb
fidivrl
out
jnp
xchg
pop
std
stos
and
test
fs
or
sarb
sub
sub
faddp
xor
cmp
fwait
or
outsb
fidivs
sbb
call
lret
and
cmpsl
in
push
and
in
jnp
cli
iret
pop
lock
ret
mov
insb
leave
fidivs
stc
mov
std
ret
and
pop
popa
jns
add
bound
mov
sbb
fdivr
mov
es
jg
popa
jmp
mov
in
xor
fisubrs
bound
push
cmp
scas
push
lret
adc
xchg
inc
jmp
cmp
mov
je
mov
xor
es
insl
or
shrb
dec
divl
fidivs
lods
lahf
arpl
mov
std
pusha
stc
out
into
adc
movsl
imul
lea
cmp
pop
push
and
ficomps
mov
popf
jecxz
shrb
push
fidivs
hlt
sub
dec
and
fs
xor
out
mov
dec
cmc
jnp
dec
cli
es
or
daa
testl
inc
xchg
mov
out
loope
xchg
addb
inc
imul
mov
sub
dec
movsl
iret
mov
ja
push
and
rolb
fiadds
sbb
jp
push
addb
mov
lret
cmpsb
mov
pushf
addr16
fdivrp
sub
cmp
lock
aad
sub
out
pop
leave
cltd
fisubrs
dec
stos
inc
inc
push
dec
ficoms
les
xor
jb
push
fiadds
push
out
outsb
lods
scas
jo
fidivrs
mov
mov
mov
pop
cmc
jmp
ficomps
jecxz
inc
int
jnp
shll
jle
push
fimuls
xchg
std
or
sbb
jp
cwtl
fiadds
mov
xchg
mov
in
pop
std
repz
into
mov
cwtl
sbb
mov
fsubp
fcompl
mov
cmp
jle
hlt
je
add
pop
fimuls
add
ficomps
or
int
rep
push
fsubp
aam
lcall
pop
mov
das
mov
add
and
ret
aas
decl
or
or
pop
sub
dec
cmc
sbb
out
jmp
inc
pop
and
scas
mov
loope
push
jle
jne
pop
add
xor
push
cmp
aam
mov
adc
pop
ds
jns
mov
pop
cmpb
mov
xchg
cmpsl
pop
popa
jle,pt
mov
add
sbb
test
or
mov
iret
cwtl
pop
xchg
jp
fmull
or
std
fisttpll
std
adc
std
das
idivl
cmpsb
pmovmskb
cltd
dec
xlat
out
mov
icebp
fdivrs
mov
ds
cmc
ret
jns,pt
fsubrl
sbb
mov
pop
fnsave
fcmovu
in
and
ds
outsb
xor
pushf
nop
cmp
push
ljmp
mov
sbb
xlat
mov
lods
sti
lock
hlt
shrb
sar
aam
add
mov
fstps
adc
pop
shl
pop
mov
aad
int3
notl
xchg
cli
rclb
push
push
push
call
pop
cmc
dec
xlat
lcall
xlat
xchg
fsts
sbb
jbe
push
mov
lcall
xlat
stc
shlb
sahf
and
xchg
jle
fnstsw
jp
xor
sbb
xchg
xlat
cmp
jbe
dec
sbb
in
xchg
adc
aam
rclb
fcom
adc
adc
xor
xor
pop
fstl
js
mov
dec
fstpl
pop
dec
sahf
cmp
adc
fdivs
cmc
mov
push
shr
xor
outsb
cmp
sub
mov
pop
lods
jg
mov
mov
mov
in
jbe
cs
popf
data16
rclb
xlat
icebp
stc
mov
ds
cmp
xlat
mov
push
cmp
bound
pop
jo
mov
pop
cmp
mov
cwtl
mov
pop
std
mov
mov
mov
aam
xchg
insb
adc
mov
xchg
in
ja
pop
insl
popf
aaa
pop
int
lea
dec
sub
negl
mov
fsubrp
mov
xlat
fldt
icebp
cmp
add
cmc
repnz
dec
xor
std
imul
int
divl
out
scas
loope
rol
cwtl
int3
pop
sahf
sahf
fists
push
loop
mov
dec
jp
push
bound
sub
sti
jne
icebp
xor
int3
out
in
pslld
insl
mov
inc
inc
dec
pop
push
inc
pop
push
dec
aas
sub
xchg
pop
cltd
xchg
mov
mov
arpl
pop
std
inc
lds
imul
test
mov
into
ret
adc
add
pop
add
cmc
mov
es
es
lock
pop
push
fldt
xchg
ret
and
inc
shlb
in
cmp
adc
jmp
aaa
pop
push
pop
or
into
hlt
faddl
into
inc
sub
adcb
xor
out
push
push
sub
or
ds
cmp
cmp
or
aas
sub
inc
and
movb
pushf
pushl
pushl
ret
sub
cmp
repnz
pushf
jmp
call
lods
mov
pushf
call
movzwl
ror
inc
mov
mov
call
jge
fidivl
dec
fsubl
pop
push
adc
fwait
sub
mov
into
cmp
rcl
fistl
dec
loope
push
adc
loop
lcall
cmp
sbb
xorb
roll
xchg
das
sub
add
cli
or
lds
jmp
jne
fldenv
xor
or
adc
sub
mov
mov
mov
cmpsl
sbb
mov
mov
cmovs
daa
sbb
inc
pop
dec
imul
xlat
xchg
xchg
int
lds
int3
rcl
mov
daa
jp
adc
cmp
xor
cmpsl
adc
sti
mov
gs
addr16
out
dec
mov
nop
mov
aas
pop
inc
cs
inc
ret
mov
sbb
aas
and
xor
aas
sub
divb
inc
push
in
imul
aam
fmuls
pop
mov
pop
jle
scas
xchg
add
mov
out
std
lock
popf
xor
ljmp
addb
int
mov
sbb
sub
int3
mov
mov
cmp
enter
ja
imul
add
mov
lahf
inc
test
sub
jbe
icebp
mov
pop
jno
pop
dec
pop
imul
ja
inc
outsl
aas
sub
ror
bt
movl
call
pushf
pushf
pusha
lea
ja
push
lea
jb
clc
call
pushf
movl
inc
pushf
mov
jmp
adc
pop
test
sbb
or
adc
jg
out
cld
mov
dec
dec
xor
fstl
jecxz
inc
add
and
sub
add
mov
adc
mov
imull
cmp
les
test
adc
and
aaa
cs
xchg
pop
pop
repnz
jg
out
xchg
pop
cmp
xchg
push
or
cmpsl
pop
ss
dec
pop
jb
dec
insb
jbe
add
sub
fsubrs
mov
add
jmp
out
push
push
arpl
inc
inc
jne
sub
cmp
jne
sbb
gs
jecxz
dec
push
sub
sub
xchg
mov
notl
aad
leave
arpl
sub
mov
arpl
inc
sti
repnz
pop
jne
jb
jle
outsb
adc
fsubs
push
hlt
out
loop
call
mov
pusha
fcmove
inc
into
pushf
or
es
fs
cli
in
test
enter
sub
outsl
mov
push
xbegin
mov
push
mov
lods
mov
loopne
ret
scas
or
xchg
jmp
ljmp
dec
cmp
mov
std
out
cwtl
fsubrl
aas
xchg
cmp
cmpl
data16
jb
in
rcrb
and
xchg
bound
mov
addb
xchg
aas
sub
fs
jbe
xadd
and
add
bsf
mov
pusha
xadd
xor
rol
add
or
mov
clc
cmp
add
pusha
movl
setns
lea
setg
pop
mov
clc
cmp
pushf
call
mov
push
cwtl
nop
pop
int
mov
dec
lock
aam
in
data16
clc
fisubrl
subb
cmp
mull
xchg
xchg
or
outsl
jo
loopne
fstps
pop
andb
stc
mov
xchg
mov
stos
imul
pop
cli
mov
or
mov
pop
sbb
psubusw
out
int
std
out
in
ffreep
jmp
repz
aas
sub
jecxz
sldt
test
add
pusha
lea
jmp
rol
jle
pop
or
sub
sbb
mov
repz
loopne
sub
jnp
or
test
jae
push
sub
xchg
xlat
sahf
pop
dec
push
aad
mov
mov
adc
jno
add
ljmp
repnz
ds
and
cmp
mov
or
inc
div
leave
ljmp
lcall
sub
or
add
sbb
sub
mov
xchg
mov
inc
sti
jge
inc
call
jns
test
pop
push
cmp
ss
in
jle
push
in
mov
xor
jno
dec
pop
push
std
fstpl
jae
cmp
sbb
jae
pavgw
into
cli
mov
push
add
int3
add
rclb
adc
daa
adc
mov
mov
xor
sar
and
repnz
pushl
pusha
lea
jne
rcr
rcr
push
mov
rcr
bswap
sub
neg
lea
pushf
sub
pusha
clc
pushl
popl
pushl
cmp
push
push
lea
ja
sete
rcl
sub
pushf
add
add
dec
bswap
jmp
pushf
mov
mov
into
mov
and
xor
sub
or
cwtl
mov
in
std
mov
sbb
xor
mov
xchg
ffreep
jmp
mov
jne
xchg
nop
in
jb,pn
shlb
mov
add
in
and
das
sub
outsb
aaa
pop
cmpsl
insl
sub
outsb
mov
ds
add
mov
jns
popf
jle
movsb
scas
xchg
mov
into
sub
ss
cmp
insb
scas
mov
mov
mov
lods
mov
cmp
lea
ja
pushf
pushf
jmp
push
add
jae
sahf
aas
jo
scas
or
xor
adc
dec
mov
insl
pop
pop
mov
stos
mov
add
mov
out
aam
sub
cmc
xchg
mov
jl
jle
dec
test
out
ja
ret
lea
xor
pop
adc
mov
jle
int3
test
and
xchg
push
push
adc
fnsave
push
pop
je
inc
pop
clc
into
call
aam
clc
loop
fdivrs
sub
pop
sarl
and
int
push
nop
sbb
mov
cwtl
cmp
shl
ret
jecxz
cmc
mov
jno
gs
sarl
sarl
xor
jp
and
arpl
in
pop
sarl
in
pop
out
mov
dec
or
adc
inc
cwtl
adc
cld
mov
mov
cmpb
xchg
push
leave
lea
add
aam
mov
sbb
cmpsl
sbb
in
adc
lret
ja
or
inc
push
rcll
lds
in
fdivs
popa
imul
ret
fwait
out
xchg
rcr
cld
aas
inc
cmp
sbb
jg
jg
ret
fwait
cmp
rorb
test
jbe
inc
nop
push
add
inc
push
sub
lret
fsubs
nop
or
and
jp
xor
cli
enter
loopne
hlt
ljmp
xor
movsbl
pushf
call
ja
inc
cld
out
nop
adc
pusha
mov
scas
sub
xchg
sub
pop
sbb
jbe
mov
inc
push
adc
or
pop
sbb
jns
outsl
jmp
adc
imul
adc
xor
inc
adc
inc
mov
imulb
lods
sbb
das
mov
lret
pop
sbbl
mov
fwait
cmpl
xchg
pop
enter
and
inc
jmp
cmp
movb
movb
lea
je
pushf
pushf
push
lea
jmp
cmp
call
imul
popa
and
rorb
inc
sahf
int
inc
add
cmc
addr16
dec
in
cmc
ja
pop
std
sti
movl
stc
ret
sbb
bound
sbb
inc
ror
in
xchg
xlat
cltd
cmpsl
mov
jns
inc
push
scas
mov
mov
popf
mov
lret
je
js
sbb
lcall
scas
aas
sub
xchg
xchg
adc
inc
push
cmp
jno
dec
sti
popa
call
insl
out
mov
push
sbb
test
pop
repnz
scas
mov
jnp
ds
pop
adc
and
ss
mov
lcall
mov
popa
mov
hlt
decb
xor
imul
adc
lea
std
mov
mov
clc
cmpsl
push
xchg
pushf
inc
dec
insl
inc
sbb
jnp
and
sub
sbb
sub
add
and
cmp
xor
aas
sub
cwtl
xor
js
mov
mov
and
and
jg
mov
popf
lahf
mov
in
dec
lsl
push
fst
repnz
mov
push
ljmp
adc
mov
ret
mov
mov
in
test
mov
cld
push
aas
sub
and
fcompl
and
lcall
sub
rol
imul
lock
int3
fidivs
aas
sub
and
mov
or
aas
sub
push
dec
mov
lods
mov
mov
loopne
aas
sub
fsubs
xor
xor
jb
adc
adcl
sbb
and
sub
out
pop
rcl
fisttps
push
dec
add
add
pop
sbb
shrl
push
and
addr16
jbe
popa
jmp
mull
jne
jne
fstp
jge
inc
pop
sahf
sub
stc
push
cld
adc
and
outsb
push
rorl
aaa
cmpsl
je
sti
and
xchg
xchg
push
push
xor
push
aam
push
xchg
add
adc
or
push
or
add
adc
sub
sub
mov
adc
pop
clc
push
in
push
int3
pop
sarb
dec
lock
push
dec
or
ljmp
leave
inc
fcmovb
sti
std
aad
fdivl
test
mov
mov
xlat
into
xchg
nop
sub
pop
cmovle
add
outsb
dec
pusha
inc
push
add
pop
inc
testb
ljmp
enter
cmc
in
into
xchg
push
sbb
push
xor
jge
adc
xchg
mov
aaa
mov
ds
adc
aas
cmp
sbb
mov
and
movl
push
push
push
pushf
movl
pushf
pushf
movb
lea
jmp
cmp
push
jae
lods
leave
and
push
mov
mov
movsb
and
xchg
loopne
imul
jmp
sbb
or
test
in
dec
std
xorl
jo
mov
mov
cmpsb
mov
sub
push
aas
into
xchg
sar
mov
push
push
jle
je
sub
mov
mov
jae
xor
cmp
cwtl
mov
sti
mov
ja
xchg
mov
enter
sti
aad
cmpsb
cmc
call
mov
mov
daa
mov
xchg
test
pop
movl
cmpsb
scas
dec
das
mov
push
ljmp
cld
mov
imul
jno
dec
ds
xor
pop
insb
out
mov
insb
pop
jo
insb
pop
js
fs
push
jp
pop
aas
sub
jmp
out
leave
mov
jle
sahf
jg
lahf
jg
lds
out
testl
dec
jns
inc
fistl
jns
test
test
push
inc
mov
push
dec
push
je
sbb
int
pusha
xor
lock
push
jae
push
lahf
inc
jno
pop
jecxz
fimuls
inc
je
sub
mov
scas
mov
mov
lret
add
and
sub
push
loop
lret
shl
shrl
jle
pop
aas
lea
mov
pusha
and
xchg
cmp
add
sbbl
xchg
cmpsl
orb
sub
fadds
or
cli
cmpsl
jg
aaa
das
adc
fisttps
lock
lods
scas
xorb
add
and
or
add
and
aas
sub
add
cwtl
pop
shr
aam
incl
dec
xor
cs
insb
add
mov
aad
leave
jg
dec
in
pop
in
lds
xor
jns
push
fsubrl
stos
clc
dec
mov
mov
shlb
popf
fimull
dec
mov
ret
mov
xchg
test
aad
mov
sbb
call
and
and
pop
push
and
cmpsb
add
repz
xchg
and
mov
mov
sub
rol
add
and
aaa
popl
pushl
cmp
pusha
pushf
lea
ja
call
mov
adc
pushf
lea
jmp
mov
pusha
push
lea
jmp
in
addr16
das
dec
push
gs
adc
daa
cltd
pop
mov
test
mov
imul
mov
pop
aas
xor
loope
loope
mov
mov
mov
xchg
jmp
mov
and
cmp
push
jnp
rcl
ret
out
xlat
int
sub
repnz
call
aam
cmc
dec
popa
test
gs
push
out
repz
jno
push
pop
sbb
fs
push
scas
push
pusha
andb
fsts
dec
insl
jno
and
xor
pusha
jl
and
pop
imul
push
stos
out
in
mov
pop
fisubrs
push
daa
mov
popa
dec
pop
imul
jnp
dec
pop
aas
sub
int3
pop
ljmp
out
fidivrs
xor
and
das
add
sahf
hlt
cmpsb
test
and
dec
jp
pop
and
neg
out
jecxz
ret
jno
xor
loop
xchg
push
sti
outsb
arpl
sahf
hlt
lods
icebp
mov
cmove
cmpsb
mov
lahf
sbb
sbb
sbbl
xchg
orps
adc
fisubs
bound
xchg
xchg
mov
stos
test
sub
cltd
inc
jae
jge
sub
mov
mov
lods
fwait
cltd
mov
sub
inc
and
pop
jmp
inc
pop
cltd
sbb
add
adc
les
daa
xor
addl
in
sbb
mov
aas
jnp
pop
inc
mov
ret
add
sbb
xor
or
sub
jns,pt
or
cli
mov
push
scas
jmp
cmpsb
insl
in
in
cli
mov
push
ds
ja
jle
xchg
js
int3
in
cli
in
call
shl
aas
sub
mov
or
outsb
mov
dec
add
add
mov
inc
test
into
dec
lods
jmp
adc
enter
mov
add
or
sub
cmpsb
mov
fs
push
in
fincstp
mov
clc
cmp
sbb
or
hlt
loopne
insl
addr16
mov
jns
cmp
test
jo
arpl
dec
adc
and
das
adc
inc
or
xchg
lret
lock
cli
call
lcall
mov
hlt
dec
add
inc
mov
aas
jno
outsb
aam
mov
mov
sbb
out
out
mov
icebp
and
cmp
rclb
cmp
mov
hlt
stos
xor
jp
insl
mov
notb
pop
daa
sbb
gs
insl
iret
jne
jns
imul
adc
jg
call
out
sti
sbb
outsb
push
adc
outsl
mov
in
cmp
add
inc
out
clc
mov
lods
lcall
cmp
das
add
sub
out
fsubrp
int
lret
pushl
cltd
pop
lea
mov
pop
inc
popa
das
xor
dec
lds
lds
call
xor
push
xchg
mov
mov
sbb
jge
aam
movsb
add
sub
and
out
scas
ljmp
aaa
hlt
xchg
cmovo
sub
or
in
sbb
push
adc
mov
das
and
je
mov
aaa
in
icebp
rorb
or
xor
imul
dec
push
inc
inc
jb
push
dec
bound
sub
je
add
test
jmp
sub
movsb
xor
es
cmc
mov
xor
lods
cmovno
fwait
push
pop
or
imulb
cmovo
hlt
and
and
enter
in
push
lock
push
shlb
into
ficomps
imul
cmp
arpl
cli
cmpsl
nop
jg
das
adc
sti
xor
sub
sbb
shll
mov
cmpsb
movsb
mov
mov
xor
pop
ljmp
jo
pop
clc
call
cmp
push
inc
dec
insl
dec
pop
outsl
jno
jne
popa
xor
aas
sub
loope
cmp
fists
aad
leave
aad
sub
and
jne
shr
adc
movsbw
mov
bt
call
stc
rol
pushf
pushf
inc
push
call
lea
jne
add
mov
clc
push
cmp
stc
add
bt
movzwl
sar
sar
mov
bt
add
clc
cmp
mov
clc
stc
test
call
neg
call
call
mov
push
lea
jmp
insl
cmp
mov
repz
ret
jne
jns
dec
jmp
lret
in
cltd
xchg
lds
fcmovnbe
lock
imul
push
mov
mov
aaa
ficomps
fwait
push
jge
and
mov
lods
subb
stc
loope
cli
cmpsl
js
push
das
adc
aas
pop
lcall
icebp
push
jns
jge
insl
gs
negl
int
in
int
aas
sub
inc
ret
push
lods
mov
push
and
pusha
adc
push
add
or
xlat
sub
aam
adc
or
inc
jb
test
test
test
mov
push
sbb
pop
jnp
xor
jns
movsb
cmpsb
into
lods
mov
xor
xor
xor
test
ficomps
xor
adc
mov
xchg
fldl
dec
inc
mov
ss
push
stos
sbb
cmp
repnz
aad
aad
jmp
jecxz
fucomip
jmp
jb
movb
lods
clc
rol
call
pushf
movzwl
bsr
bswap
mov
cmc
stc
add
jmp
dec
cmc
pushl
shr
pushl
jmp
mov
das
xchg
mov
mov
adc
insb
adc
testl
inc
mov
mov
add
stos
cmpsl
loopne
cs
sbb
push
push
mov
mov
jo
cmp
push
sbb
arpl
out
addl
ss
cmp
xchg
xchg
jmp
andb
sub
loopne
mov
mov
rolb
aas
sub
adc
aas
cmp
sahf
scas
mov
lea
jb
jmp
call
movb
lea
je
pushf
pushf
cmp
cmp
pushl
pushf
lea
je
pushf
push
pushf
lea
jmp
pop
dec
pusha
jo
mov
and
jge
shrb
or
sti
and
sub
sti
jne
push
jge
jge
stc
ret
xchg
mov
pop
ds
jmp
inc
pop
jle
push
mov
out
inc
ret
pop
ds
data16
loope
xchg
mov
jo
and
fstpl
mov
lret
aas
incb
cmp
sbb
movsl
adc
pop
and
mov
loop
addr16
outsl
insl
outsl
pop
jg
dec
inc
imul
dec
dec
aas
sub
inc
dec
add
add
jmp
pushf
dec
stc
push
ror
jmp
push
jmp
call
mov
sub
std
stc
sbb
mov
xor
push
and
test
mov
sub
mov
and
and
xchg
cli
mov
or
jb
mov
cmp
cmp
loop
push
push
add
inc
call
and
mov
ljmp
fdiv
enter
mov
xor
fadd
repnz
xchg
xor
clc
sub
xor
mov
sub
adc
jo
jle
in
xchg
and
dec
inc
test
jp
pop
push
cmpsl
xor
roll
xor
lock
mov
cmpsl
xor
sbb
adc
cld
xor
mov
add
or
and
adc
xor
sbb
add
sbb
adc
sub
mov
fcomi
xorl
jno
insb
das
push
or
cld
fnstcw
insb
test
out
les
inc
add
dec
xor
xor
sbb
and
or
mov
cmpsb
mov
pop
and
jbe
add
stos
or
cmpsb
mov
test
lock
push
xor
mov
hlt
ret
hlt
out
dec
lret
rcl
sub
fs
call
push
jmp
loope
push
lret
mov
aaa
mov
and
or
and
xchg
dec
mov
mov
outsl
dec
insb
and
out
out
dec
and
ror
fildll
mov
cmpb
jne
inc
or
leave
repz
xor
pop
cmp
sbb
stc
inc
jmp
fcomi
sti
out
mov
push
popa
addr16
push
inc
aas
sub
fs
jb
jmp
pushl
dec
pushf
setne
pushf
pushl
stos
jmp
mov
pushf
push
push
movb
pushl
ret
lea
jae
seta
call
test
bt
cmp
movsbw
cwtl
movsbw
setp
lea
lahf
pop
mov
call
mov
and
jno
out
dec
ljmp
fs
repnz
push
xor
out
lea
add
in
xchg
icebp
fldenv
sbbl
xchg
fwait
sar
int3
or
fcompl
nop
aad
std
daa
sub
cltd
movsl
xchg
mov
cwtl
cmpb
aas
sub
mov
mov
sub
mov
mov
test
and
jo
and
fwait
ss
push
adc
fisubrs
outsb
pop
aam
push
out
int3
out
aam
sub
pop
inc
jge
dec
and
out
mov
out
push
sbb
addb
mov
mov
daa
push
shll
ljmp
imul
movsl
imul
sar
fildll
popa
fcomi
fcmovne
repz
shl
icebp
pop
dec
aas
sub
std
xchg
xor
out
push
pusha
cmp
orl
imul
and
mov
sub
xchg
xor
aam
scas
add
add
adc
adc
mov
xchg
mov
aas
sub
adcb
stos
push
mov
aas
sub
bswap
mov
pushf
pusha
jmp
aad
add
sbb
dec
cld
in
dec
int3
pop
in
jle
pop
clc
jp
je
or
stos
or
ret
mov
addb
loop
stos
pop
adcb
fmulp
dec
lahf
sub
sub
out
loop
imul
test
into
push
fcmovu
std
ficompl
push
iret
jmp
cmp
mov
test
mov
sub
mov
xor
cwtl
bsr
adc
or
mov
stc
mov
add
add
dec
or
sar
mov
test
stc
jmp
mov
seto
stc
ror
mov
pushf
movw
movb
push
cmp
pushf
jmp
outsb
ds
inc
sti
or
inc
cmc
push
int
test
pop
jns
adc
mov
adc
lahf
xor
adc
jge
sbb
add
xchg
div
arpl
push
cmc
ja
dec
dec
inc
adc
add
mov
or
jmp
fcmovbe
pop
in
jp
jge
sbb
xor
scas
in
adc
add
orl
or
xor
mov
add
jo
xlat
inc
into
or
gs
jbe
push
je
insb
pop
dec
push
inc
dec
jp
aas
sub
bt
mov
clc
clc
clc
test
jmp
pop
or
out
movsb
lahf
fistl
inc
stc
add
ret
inc
mov
je
inc
divb
inc
mul
rolb
xor
fsubl
inc
pop
sbb
imul
sub
jno
xchg
notl
je
lret
repz
roll
vmovupd
dec
cmp
rclb
adc
shl
dec
xchg
sbb
jae
jg
inc
insl
pop
push
push
andl
cmp
and
sub
sub
mov
add
push
cmp
add
icebp
add
bswap
jmp
jmp
sti
in
gs
call
push
pop
cld
dec
lock
cld
cli
rolb
cmp
mov
out
inc
or
dec
inc
sbb
xchg
mov
push
test
mov
dec
xchg
arpl
xchg
inc
xchg
mov
push
mov
cmpsb
mov
imul
mov
pop
daa
loopne
pop
dec
dec
or
sbb
and
and
sub
and
ds
sub
je
add
fs
call
cmc
bt
push
stc
cmp
call
jmp
in
loope
int3
xchg
pop
out
inc
out
fistl
xlat
dec
pop
adc
xor
stc
sti
mov
hlt
scas
mov
insb
popl
enter
adc
pop
mov
out
xor
sahf
inc
add
pop
leave
or
fs
fs
or
jp
repz
icebp
ret
fld
cmc
xchg
adc
mov
push
scas
cmpsl
xchg
insl
sub
int3
data16
outsb
insl
jno
mov
or
or
cmp
pop
and
aas
sub
fisttps
pushf
pushl
cmpb
pusha
jmp
pusha
mov
bsr
mov
mov
test
cmp
pushf
jmp
pop
cmp
decb
addr16
ja
pop
stc
dec
int
jmp
jb
sbb
hlt
push
adc
loop
add
push
cli
stos
sbb
mov
hlt
push
adc
loop
push
inc
or
or
or
add
cmp
add
xor
sbb
sub
add
movzbw
mov
adc
shl
mov
clc
pusha
stc
pusha
mov
movsbw
shl
mov
mov
mov
jmp
xchg
push
push
or
nop
aam
in
in
push
aam
in
push
push
js
cmp
push
mov
mov
add
fstpl
enter
sbb
dec
jnp
dec
pop
lret
int3
mov
push
mov
shl
ret
jmp
iret
mov
jns
and
sub
fucomip
mov
push
outsb
jne
dec
fwait
dec
lret
xchg
int3
add
or
sbb
ret
jle
stos
shr
mov
push
sti
leave
cltd
dec
xchg
pop
imul
std
outsl
fs
aas
ds
insl
arpl
popf
test
xor
sub
and
adc
push
aam
jle
and
insb
xor
cmp
aas
mov
xor
mov
adc
mov
jmp
outsb
insl
stos
arpl
adc
outsb
jmp
jl
push
je
cmp
pop
sbb
popa
ret
rclb
rcl
ljmp
test
mov
str
dec
fcoms
push
in
inc
push
cld
fidivrs
sub
fbld
stos
fcom
xchg
mov
aas
sub
inc
jmp
dec
insl
inc
jne
inc
in
std
mov
fwait
aam
xchg
or
stc
lcall
fst
leave
lret
stc
inc
aas
sub
lret
sar
shld
mov
bt
stc
cmpb
push
pushl
pushf
lea
jmp
ror
jmp
mov
jle
ljmp
rolb
rcrb
sbb
sbb
push
push
sub
aaa
sbb
mov
jae
sub
inc
jl
cli
mov
sbbb
sbb
push
or
jo
push
das
push
cmp
push
dec
adc
cli
lock
je
enter
sbb
out
jb
inc
pusha
jbe
inc
push
bound
aas
sub
shr
stos
add
js
pop
jle
lds
or
or
xor
cwtl
push
dec
push
js
inc
enter
pop
inc
into
inc
fisubrl
sbb
mov
cmp
jnp
jb
sub
mov
pop
add
pop
pop
sub
and
or
rorb
and
cmpsb
mov
mov
negb
stc
out
mov
add
jns
inc
sub
or
cmp
cltd
jmp
ret
int
aad
cmc
jecxz
xlat
lret
aas
sub
shlb
and
add
ror
jmp
push
inc
clc
jb
push
and
inc
sti
dec
jmp
xlat
pop
mull
pop
addr16
cmp
mov
cmp
xlat
notl
rcrb
hlt
mov
and
scas
mov
mov
mov
xchg
ficoms
aas
call
push
push
and
mov
xchg
pusha
sub
popa
gs
adc
shl
out
repz
inc
stc
cli
sub
xor
xor
pop
pop
movsl
xchg
dec
dec
push
imul
addr16
push
imul
aas
sub
or
xor
jl
lcall
popf
aaa
test
jb
mov
jb
xchg
loope
testb
lret
imul
cltd
adc
dec
sti
mov
xor
mov
int
or
jecxz
pop
addr16
xchg
adc
ja
gs
pop
stc
test
adc
ljmp
ja
and
and
dec
mov
daa
es
cmpsl
js
push
das
adc
mov
fildl
sbb
les
sub
or
sub
and
pop
xor
push
sub
cs
sub
fs
ja
call
push
inc
repnz
jl
jne
cld
aaa
jae
addr16
inc
stc
push
cmc
jnp
pop
fldenv
inc
jmp
jns
jecxz
cmpb
aad
pop
pop
adc
pop
pop
icebp
push
jno
in
icebp
or
sbb
sub
inc
icebp
add
mov
int3
xchg
xabort
movsl
sub
mov
cs
and
mov
and
or
aaa
sub
jecxz
js
in
adc
mov
loopne
enter
in
aam
mov
cmp
mov
sbbb
enter
inc
jbe
cwtl
bswap
jmp
movsbl
mov
not
jmp
pushf
pushf
push
xchg
jmp
popf
mov
mov
addb
adc
inc
lock
les
outsb
sarb
aam
push
push
cli
mov
sbb
fistl
out
jno
jnp
shl
cmp
cld
mov
push
outsb
sub
mov
repnz
dec
add
leave
mov
fists
dec
movsb
insb
test
adc
fwait
jmp
jecxz
mov
xor
jno
adc
adc
pop
fidivrl
ror
lock
fdiv
ror
sub
push
mov
mov
jb
push
call
pusha
mov
lea
jb
pushf
cmp
mov
mov
lea
jae
jmp
mov
mov
push
pushl
ret
lea
jae
clc
clc
pusha
jmp
lea
je
test
stc
sub
push
cmp
pushl
lea
jmp
lea
ja
call
pushf
lea
ja
jmp
movl
pusha
movl
pushf
pushf
pusha
pushl
lea
jmp
test
add
into
mov
and
stos
sbb
mov
push
in
mov
js
cli
rorl
rol
movsb
mov
push
in
outsb
out
or
pop
cli
mov
pop
rcrb
mov
or
ret
ret
loopne
pop
fwait
and
or
add
mov
movsl
xchg
mov
mov
sub
add
add
add
xchg
mov
add
es
add
add
add
add
add
add
add
pop
add
jge
add
add
jne
inc
insb
insb
dec
outsl
jae
inc
popa
insb
insb
inc
popa
arpl
cmpsl
mov
mov
shrl
insb
add
jmp
out
push
push
cmp
or
and
cmpsl
adc
sub
add
lds
jmp
clc
adc
sub
mov
jae
adc
clc
rcrb
pop
adc
addb
and
mov
add
xor
or
nop
push
neg
sbb
cmpsl
sub
cltd
xlat
out
hlt
loop
lods
dec
enter
add
and
cmpsl
mov
xor
rcll
mov
lock
xor
lods
sti
int
cmc
neg
lret
cmc
out
fst
sarl
scas
dec
adc
fs
jae
adc
mov
and
adc
mov
bt
mov
jmp
jp
cmc
inc
arpl
out
popa
push
push
lods
push
test
xchg
sub
and
adc
rclb
inc
sub
div
hlt
rorl
add
jle
decb
jp
add
push
gs
cmp
das
fucomi
scas
push
js
out
sahf
adc
jle
xor
mov
ret
push
es
inc
insl
dec
push
lahf
pusha
adc
orb
mov
sub
dec
int
arpl
cli
fwait
out
addr16
cmc
push
rorl
adc
loope
mov
mov
mov
jecxz,pt
mov
out
pop
sahf
sub
sbb
dec
stc
out
into
mov
add
jne
call
jbe
movsl
leave
andl
jmp
out
movl
lods
call
mov
sub
lret
repz
out
fidivl
dec
in
jbe
xchg
stos
nop
mov
sub
cmpb
fnsave
mov
sahf
sbb
cmp
int3
rclb
in
lods
jecxz
call
sarl
push
fisttpl
iret
mov
jne
cs
out
orb
cltd
xor
cmpsl
addr16
sbb
adc
sbb
popa
jmp
cmpsl
faddl
sub
lock
xchg
xchg
cmpsl
inc
das
sub
sub
insl
insl
dec
dec
aas
in
pop
mov
stc
mov
imul
je
fisubs
fdivr
lock
fcmovbe
cli
enter
sub
leave
inc
in
mov
mov
mov
xchg
push
or
xor
and
dec
aam
les
mov
mov
ficomps
je
jl
push
ret
dec
pusha
int3
cli
mov
and
sbb
and
xchg
xchg
cld
das
push
popa
sbb
adc
in
repz
shll
aaa
add
sub
cmp
xchg
jb
in
jnp
popa
or
jno
cmpsl
jecxz
iret
push
repz
filds
jge
pop
push
push
adc
fists
and
add
xor
outsb
cmpsb
nop
cmp
mov
adc
mov
cltd
xor
jno
and
test
mov
xchg
fildll
xchg
mov
cmp
stc
insl
dec
mov
shrb
inc
imul
fs
mov
or
mov
sbb
icebp
andl
mov
adc
mov
test
mov
sub
loopne
add
pushf
testb
push
adc
adc
pop
fdivs
outsb
sarb
jb
push
into
sub
xchg
rcll
pop
insb
inc
cmc
call
adc
ret
aaa
sub
in
iret
fildl
add
jle
es
add
add
or
mov
into
call
jb
out
outsb
pop
dec
add
test
xor
dec
jo
mov
addr16
out
pop
xor
lea
test
xchg
scas
mov
xor
pop
popl
in
lock
clc
dec
in
fadd
rclb
xchg
fwait
jo
sub
outsb
add
adcb
fcomps
fwait
jno
xor
fidivs
mov
pushf
popa
jge
repnz
jns
mov
lds
pop
or
js
dec
ret
jle
jo
fwait
test
icebp
mov
imul
call
mov
popf
adc
cmc
mov
inc
push
push
dec
inc
jp
inc
push
pop
jl
aas
sub
dec
dec
inc
push
dec
xor
cs
insb
add
shl
jecxz
aam
mov
mov
cmp
adc
push
push
and
dec
adc
and
push
push
std
mov
adc
mov
out
mov
push
pop
jns
aad
pushf
aam
lea
add
test
cmp
mov
mov
lahf
movsl
mov
xor
sbb
or
adc
sub
cmp
add
pop
mov
and
repnz
icebp
cwtl
sbb
out
subl
mov
mov
xor
bound
push
push
pop
sbb
testb
pop
sbb
sbb
mov
push
sbb
mov
mov
jmp
xchg
cmp
pop
cltd
jmp
outsl
jne
insl
jg
push
gs
jge
push
popa
aas
sub
leave
in
insb
mov
pushl
mov
pushf
push
pushl
ret
lea
jne
cwtl
xor
aas
bsr
shl
movzbw
mov
cmp
cmc
pushf
adc
add
pusha
bt
rcr
pushf
mov
pushf
test
call
mov
pushf
pushl
ret
or
pop
sbb
shlb
mov
pop
pusha
inc
push
iret
movsb
aam
cmpsb
xor
or
mov
or
jecxz
outsb
outsl
sub
jle
ret
xchg
fcomps
jle
jb
jp
inc
add
or
fstpt
sti
pop
lahf
mov
xor
sahf
mov
jae
ds
inc
addb
jbe
sbb
out
add
scas
mov
adc
lods
loop
bound
push
or
add
inc
data16
inc
pop
push
inc
push
sub
shlb
out
pushf
stc
cmc
ror
jmp
jmp
call
jbe
mov
jmp
adc
xchg
test
movsl
mov
repz
mov
dec
jecxz
add
call
push
fbstp
cmp
dec
pusha
fdivr
and
sbb
push
jns
jbe
jbe
ljmp
and
out
push
sahf
arpl
lods
dec
dec
int
and
out
std
out
xor
jbe
mov
inc
aad
lret
pop
pushf
ds
sbb
xor
and
sbb
add
adc
sub
rorb
jp
add
test
movzbw
bswap
sub
mov
rcl
lea
push
shr
add
lea
mov
bt
cmp
stc
test
movw
lea
jle
jmp
lea
jbe
shl
shld
not
ror
mov
test
btc
test
pusha
add
rcl
mov
bsr
test
rcl
pusha
add
dec
call
pushf
jmp
lea
call
push
lea
jae
pushf
test
mov
test
sub
pushf
pusha
call
call
mov
lea
mov
lea
mov
jmp
adc
lea
pusha
pushl
ret
call
nop
hlt
outsb
fdiv
roll
mov
mov
adc
sub
xor
iret
cmp
xor
cmp
dec
and
imull
lret
in
sub
dec
pop
psubusw
test
push
in
rorb
repz
xchg
lods
mov
ds
mov
div
loope
pop
sub
cwtl
xchg
sbb
cwtl
sti
out
loop
mov
mov
arpl
bound
dec
cmp
mov
mov
mov
mov
cld
in
lods
cmc
inc
pop
icebp
inc
icebp
dec
or
loopne
daa
and
and
aas
sub
lods
xchg
adc
inc
sbb
add
mov
sub
xlat
jno
add
mov
jmp
ret
jecxz
test
aas
sub
lods
xchg
adc
inc
add
pop
dec
hlt
push
jp
fs
sub
xchg
mov
mov
sub
jnp
add
push
pop
push
mov
in
enter
loopne
aas
sub
loopne
jmp
mov
es
cmp
mov
xchg
jnp
leave
or
push
sti
imulb
sbb
testb
stos
lea
mov
mov
sub
mov
lds
xchg
shr
scas
fs
icebp
cld
movsl
xchg
mov
add
outsb
push
jb
outsb
je
jb
add
test
addl
mov
ljmp
mov
add
or
add
and
stos
sahf
mov
sub
mov
mov
jo
sub
aam
loopne
insb
rorl
adc
mov
stos
lea
cmpsb
in
dec
or
or
cmp
mov
pushf
das
adc
sub
out
inc
inc
dec
jp
sbb
sbbb
xchg
mov
mov
push
and
inc
lock
lea
jae
not
mov
rcr
mov
bswap
mov
sub
jmp
iret
fidivl
in
subl
lcall
fwait
aad
out
pop
pop
sbb
adc
aam
jle
int
add
in
in
xor
mov
mov
scas
cwtl
pop
popf
inc
add
cmp
push
scas
cwtl
and
in
ljmp
lcall
in
mov
push
fmulp
mul
lds
or
and
or
xor
cmp
aas
sub
leave
imul
cli
lret
iret
rolb
push
addr16
mov
lahf
scas
lea
test
repz
ret
dec
repnz
bound
and
sub
int
cmp
scas
out
fldl
mov
cmpsb
xlat
les
dec
stos
push
pop
aas
xor
pop
push
and
cmpsl
popf
scas
and
fcoml
insl
pop
xor
ret
sbb
mov
sbb
mov
out
jbe
cmp
jo
mov
inc
pop
jo
inc
pop
pop
jbe
jb
aas
sub
fs
jne
add
mov
mov
shld
movsbw
bsf
sub
rol
mov
pushf
cmc
sub
cmc
pushl
popl
bt
cmp
call
pushf
lea
ja
push
movw
call
movb
pusha
jmp
shrd
push
mov
movsbl
stc
lea
mov
xadd
sete
shl
shrd
mov
rcl
rol
rcl
mov
mov
shr
xor
lea
xchg
pushf
lods
push
push
dec
inc
rol
clc
adc
shl
neg
inc
pushf
dec
cmc
ror
pushf
movb
jmp
sub
cmpsl
sbb
sbb
stc
mov
stos
in
lea
icebp
int3
adc
scas
outsb
out
loop
aad
pop
rcrb
xor
addb
dec
ljmp
mov
mov
jle
data16
outsb
in
les
jb
fcmovb
xchg
mov
push
mov
rclb
aaa
jbe
pop
ret
das
outsb
pop
add
push
mov
dec
xchg
mov
cmp
gs
andb
xchg
mov
jecxz
nop
mov
push
into
sbbl
in
jnp
jno
je
add
stos
insb
pop
inc
push
pop
push
dec
pop
jbe
inc
inc
push
aas
sub
cmp
daa
sbb
repnz
xor
adc
and
cwtl
xor
inc
push
adc
sbb
add
rclb
aam
mov
int3
push
test
daa
cmp
xor
push
insb
iret
dec
hlt
mov
test
aam
xchg
sbb
sbb
enter
jns
loope
mull
negb
fwait
mov
xchg
mov
push
xchg
mov
cmp
cmp
movzbw
call
cmc
movsl
pop
mov
cmpb
push
int3
jbe
push
jp
push
in
push
dec
sidtl
movsl
and
mov
push
rcll
mov
in
mov
enter
pop
icebp
mov
cmpsl
aam
sub
mov
pop
fwait
sub
insl
sub
cmc
xchg
mov
push
sbb
cld
xor
jle
jecxz
fistps
rol
cmc
nop
adc
cmp
or
sbb
sub
xor
or
lea
out
sbb
xchg
ja
and
adc
cli
mov
cmpsb
pop
push
dec
xchg
push
insb
out
push
push
cli
js
insb
fisubrl
repnz
aaa
ljmp
xor
xor
sarl
pop
pop
mov
xchg
sbb
into
or
ljmp
into
imul
in
lds
mov
dec
or
lock
pop
jle
or
mov
push
mov
gs
pop
dec
inc
jns
dec
push
push
jnp
aas
sub
lods
add
mov
std
ficomps
sub
pushf
adc
sti
stc
inc
aas
pop
sbb
sub
pop
and
cmp
jnp
lods
aaa
mov
aas
xchg
add
jl
cmpsl
xchg
ja
pop
loope
pop
and
or
fucomi
lods
push
cs
mov
adc
imul
repz
arpl
sti
popa
div
imul
ret
leave
jecxz
add
and
cmp
or
xor
adc
sub
pushf
rep
mov
pop
pusha
movsbw
mov
pushf
lea
jmp
mov
call
pushf
pushl
mov
pusha
lods
jmp
pushf
mov
mov
fld
lahf
pop
xor
or
inc
imul
or
jmp
xor
loop
adc
les
sub
sub
add
xchg
mov
sahf
es
inc
add
sbb
add
push
fidivs
in
or
orb
and
scas
dec
lret
xchg
mov
lcall
sbb
xor
pop
xor
movsb
jmp
add
add
xor
cmp
sub
and
cmp
rclb
fistps
out
in
push
dec
aas
sub
sahf
jae
aad
mov
rcrl
add
cmp
or
aas
sub
mov
imul
mov
xchg
xchg
sar
sub
push
je
mov
pushf
or
into
clc
bound
inc
aas
sub
dec
fcoms
cltd
xchg
mov
cmp
aaa
sub
sbb
jge
sub
push
cmpsl
mov
mov
loopne
fiadds
ret
insb
lretw
cmp
sub
lahf
push
outsb
dec
imul
imul
out
xor
sbb
sub
mov
and
dec
inc
in
jg
jmp
push
lret
mov
mov
mov
in
out
inc
imul
mov
imul
add
and
dec
cli
or
add
mov
and
dec
sub
icebp
std
mov
push
and
push
fisttps
dec
sbb
jne
sub
insb
adc
cld
mulb
sbb
shr
repz
lcall
pop
pop
jbe
lock
mov
cmpsb
mov
subb
jnp
sub
push
data16
scas
adc
rcrl
stos
repz
cmc
aas
sub
mov
scas
jmp
jmp
jns
push
idiv
out
into
jle
cmc
loopew
stc
push
leave
pop
aad
jmp
xchg
cmc
jge
or
and
mov
add
cmp
pop
scas
test
add
dec
js
jbe
pusha
push
pop
push
xchg
mov
xor
orb
repz
leave
xlat
aad
xlat
nop
stos
clc
aas
sub
aad
data16
clc
xchg
mov
je
into
ret
inc
pop
pop
dec
jo
push
jle
sub
cmpsl
test
mov
bt
jmp
in
mov
lea
push
push
fdivs
jbe
pop
clc
dec
hlt
dec
call
pop
sbb
shll
mov
xchg
inc
sbb
pop
mov
push
enter
insb
xor
aas
out
sti
insl
mov
sbb
lods
push
ja
jge
xor
imul
lret
loop
xor
xor
aaa
fbstp
pop
js
dec
mov
adc
out
insb
mov
sbb
loop
cmp
imul
sar
repz
leave
aas
sub
push
insb
lods
inc
inc
call
lea
call
pusha
mov
pusha
lea
jmp
jmp
call
clc
rol
jmp
push
pushf
repnz
mov
pushl
lea
jne
jne
movb
pushf
pusha
mov
pushf
lea
mov
movl
pusha
call
xlat
push
out
inc
pop
sarb
scas
or
or
add
lahf
xchg
stos
repnz
ljmp
push
in
stos
repz
push
sar
fcomi
mov
jne
jne
inc
imul
dec
jno
aas
sub
cmc
addb
aad
jmp
adc
mov
jmp
pop
dec
xlat
jns
pop
jp
fldcw
in
loopne
enter
faddl
data16
mov
sti
push
cmp
dec
push
loope
xchg
outsb
push
adc
jg
psraw
xchg
loop
and
inc
mov
sub
cli
mov
imul
pop
pop
jp,pt
pop
sbb
mov
mov
push
and
out
mov
mov
in
out
cli
iret
stos
lods
or
xor
add
aas
sub
sahf
mov
pop
push
insb
stos
inc
fst
xchg
sbb
and
add
repz
inc
sbb
sti
mov
push
jnp
sub
xchg
push
push
and
jg
mov
aad
adc
les
push
inc
in
xor
bound
cs
push
nop
fildll
add
mov
mov
test
adc
xor
sbbl
lock
out
loop
repnz
aas
sub
and
push
out
clc
xchg
les
in
lock
les
pop
pop
dec
sysexit
push
or
les
inc
push
shlb
jnp
cmpsl
mov
je
fsubrp
mov
mov
adc
fisttps
xor
clc
mov
pushf
xchg
mov
out
jg
cmp
mov
les
mov
jne
pop
or
add
sbb
movsb
jmp
shr
lcall
and
inc
lret
fcmovb
in
mov
das
imul
or
push
movsb
ss
push
add
stos
push
les
mov
mov
test
jb
and
lods
aas
mov
xor
mov
jge
dec
sarl
fcmovu
in
lret
pop
push
sbb
fnsave
imull
xchg
outsb
push
jno
cmp
mov
lea
mov
sub
and
push
jo
dec
pop
lds
lock
in
fwait
xor
mov
push
je
or
mov
mov
pop
fimull
lock
imul
fwait
dec
mov
xor
lcall
popa
inc
sub
pusha
movsl
xchg
sbb
mov
jns
decl
mov
xchg
shlb
pushf
fists
mov
cltd
mov
setge
test
pop
add
js
es
cli
pop
arpl
jae
mov
rcr
lret
in
fcmovbe
into
enter
aas
sub
outsl
sub
mov
mov
lret
sldt
cli
push
bnd
dec
ljmp
rcrb
shrb
popa
pushf
mov
ret
xchg
dec
push
rclb
dec
inc
repz
test
mov
add
xchg
and
pop
or
loopne
lods
pop
out
nop
dec
subb
rcrb
mov
pop
xchg
sbb
rolb
mov
pop
dec
ret
repz
out
test
scas
lea
xor
push
call
lods
mov
sub
dec
test
cmpsb
adc
pop
mov
add
jl
jl
lock
sbb
xor
ror
popf
mov
pop
pop
jp
lock
mov
pop
mov
mov
andb
mov
mov
cmc
aas
sub
sbb
scas
lahf
fnstsw
pop
jg
into
ret
xchg
sub
mov
sub
aaa
aas
sub
mov
add
lods
xor
imull
mov
sub
ds
jge
or
mov
pop
int3
xchg
sbb
in
mov
jge
nopl
push
fnstenv
mov
into
xor
and
iret
sub
jle
dec
xchg
xchg
fyl2xp1
mov
fisubs
jo
pop
cli
jecxz
push
data16
dec
dec
jle
insb
aas
sub
pop
popa
test
stc
fiaddl
test
mov
lods
and
push
xlat
push
fldt
adc
das
jge
push
popa
rcrl
lret
cld
icebp
js
inc
push
popa
sarb
fstps
mov
cmp
or
hlt
add
repnz
push
xchg
pop
adc
sub
outsl
push
or
push
adc
inc
test
stos
and
jo
shll
test
mov
test
lods
mov
sub
push
xor
cmp
lea
push
movsbw
setnp
mov
mov
mov
movb
call
mov
pushf
inc
stc
cmc
stc
neg
lea
jne
dec
pushf
pusha
push
mov
ror
jmp
pushf
sub
jne
cmp
pushf
lea
js
push
pushf
lea
jae
call
mov
movb
pushl
popl
call
iret
dec
out
push
ja
and
dec
inc
or
and
sub
inc
jmp
scas
movsb
cld
cmc
stc
cmpsl
loop
rcll
pop
pop
data16
cmpsb
out
jae
test
mov
jmp
cmpsb
out
cmpsl
das
adc
jb
dec
outsl
sub
je
mov
jbe
pop
inc
inc
js
dec
inc
insb
bound
aas
sub
fsubp
sub
xor
lea
ja
neg
shl
test
sub
bsr
rol
push
lea
add
bt
neg
mov
clc
mov
cmc
pusha
cmp
cmp
repnz
call
mov
jmp
mov
mov
shld
sub
bt
mov
push
bsf
xor
sbb
bt
push
btc
aas
shld
not
push
neg
adc
dec
sbb
push
lea
pushf
pusha
mov
push
bt
jmp
aam
push
mov
mov
sahf
xchg
aad
fsts
pop
shll
pop
rorl
push
adc
pop
into
lock
mov
popa
xor
sub
push
outsl
dec
cmp
insb
mov
mov
mov
cmpsb
push
dec
div
cs
sti
dec
les
push
add
push
pop
cmpl
xbegin
lock
sar
cli
cld
into
sar
hlt
ret
sub
imul
in
pop
hlt
lret
outsl
adc
push
jle
push
push
nop
xchg
fcompl
test
repz
pop
pop
test
xor
xor
cwtl
fildll
pop
sbb
imul
out
test
movsb
sub
popa
insl
mov
daa
pop
aas
sub
mov
pop
faddp
cmp
xchg
and
jbe
cs
or
pusha
cmpsl
sub
roll
loop
out
lock
into
cli
hlt
cld
aas
sub
ret
push
push
xor
xor
fs
insb
add
jl
push
cmp
mov
or
and
cmp
ret
jcxz
fs
jns
xchg
fstpl
mov
stc
lds
dec
sbb
imul
outsl
divb
sub
pop
in
pop
mov
xlat
out
fadds
inc
pushw
xor
out
imul
cmpsb
in
add
pop
daa
pop
inc
aaa
jno
pop
pop
dec
xor
jle
mov
std
lret
mov
jne
xor
add
flds
jno
dec
add
lds
sbb
mov
jmp
dec
jle
bound
push
pop
jnp
jg
imul
aas
sub
out
lock
inc
push
dec
inc
dec
xor
cs
insb
add
inc
and
inc
lea
je
clc
add
stc
cmp
pushf
push
pushf
jmp
mov
sub
sbb
loopne
int3
adc
inc
push
jb
dec
or
aas
sub
clc
sbb
lret
in
sahf
jle
les
inc
pop
or
adc
sub
aas
sub
mov
test
lods
mov
jmp
pusha
lea
mov
movzbl
mov
setb
call
lea
jne
setl
not
pushfw
not
mov
push
mov
call
mov
addr16
pop
insb
jmp
pusha
ficoms
jo
dec
shlb
lock
or
nop
mov
stos
dec
fsts
in
loope
sub
mov
sub
adc
test
fbstp
jbe
or
nop
repnz
cltd
lods
adc
push
inc
jb
sbb
add
jne
ret
es
fiadds
add
sahf
inc
test
in
push
push
inc
arpl
imul
aas
sub
mov
testl
shlb
dec
call
pushf
mov
cmc
sub
lea
pushf
inc
lea
call
jmp
lods
cld
dec
int3
lock
jl
fists
adc
rcrb
lods
jecxz
fcoms
adcb
cltd
mov
adcl
ret
jl
jl
ljmp
fcomps
push
hlt
jb
jle
in
jl
ljmp
jo
testl
mov
jl
jmp
mov
pop
adc
push
mov
addb
into
insb
dec
inc
push
add
mov
jle
jge
je
call
ret
fsubr
lock
clc
lret
int3
dec
je
fnstcw
sbb
mov
lods
cmpb
cs
xchg
xchg
cwtl
and
mov
ss
add
sub
xor
xor
xchg
xor
and
pop
fdiv
popa
out
and
add
imul
mov
xorb
dec
or
push
pop
enter
pop
movsl
xchg
mov
inc
and
stc
test
push
rcl
vsqrtss
outsl
xor
push
mov
cmp
bswap
pop
cltd
jmp
fcmovnbe
sti
loope
stc
rcl
loope
idivl
sub
jae
xor
xchg
and
loope
popf
xchg
rorb
fimuls
bnd
js
out
out
dec
cmovnp
lret
out
mov
and
adc
outsb
push
out
dec
sbb
jp
ret
add
subb
and
xchg
test
dec
mov
jno
sbb
mov
aam
movsl
imulb
cmp
mov
lds
sub
enter
xchg
movsb
rorb
jbe
xor
sbb
inc
jl
pop
pushw
dec
pop
jb
inc
inc
aas
sub
popf
cmpsb
loop
mov
add
jmp
or
dec
iret
popa
fstpt
movsl
cmpsl
xor
cli
popa
mov
sbb
rorl
mov
adc
icebp
cli
cmpsl
fwait
adc
pop
and
jp
sbb
dec
fsqrt
cmpsl
fwait
insb
xchg
das
adc
sbb
into
add
push
je
scas
scas
jno
mov
mov
test
mov
sub
cmp
jle
movl
pusha
jmp
dec
jmp
lea
je
jmp
inc
adc
js
ja
stos
out
mov
mov
fists
dec
lea
cmp
dec
mov
sti
in
lock
rorl
pop
jmp
push
std
out
mov
pop
cmp
subl
or
push
aam
enter
paddb
mov
call
hlt
stos
lret
fcompl
aas
gs
pop
sub
dec
hlt
ror
dec
cli
popf
dec
aad
stc
out
ror
loope
shr
loope
aas
sub
popa
bound
fwait
lret
jne
out
int3
mov
lret
add
mov
lret
add
aad
icebp
dec
jmp
push
jmp
jmp
addl
out
hlt
out
add
push
aad
mov
mov
loopne
pop
dec
movq
cli
in
jns
in
xor
adc
mov
xor
add
nop
xchg
add
icebp
test
mov
mov
aas
sub
or
mov
shr
mov
stos
or
sub
lahf
popa
jecxz
repz
or
adc
mov
cmp
sub
xchg
mov
and
fdivp
dec
adc
push
imul
lret
xchg
dec
cmp
mov
out
mov
pop
mov
xorl
mov
push
push
inc
push
jle
jl
lock
dec
sub
inc
enter
add
aad
fxch
xchg
lahf
adc
fwait
push
or
push
adc
cmp
or
adc
sbb
sub
xchg
pop
sbb
popf
cltd
or
idivl
lods
pop
xchg
aaa
mov
lods
add
adc
sbb
mov
ja
push
in
dec
push
dec
dec
pop
jle
push
xorl
lods
movsb
jp
mov
mov
or
rcrl
mov
push
mov
les
mov
xchg
scas
mov
mov
jmp
sub
or
fs
mov
jmp
pusha
push
or
or
sub
nop
push
fwait
lea
ja
push
push
pushf
lea
jb
stc
cmpb
jmp
dec
cs
push
xor
ss
xchg
in
daa
arpl
inc
fstpl
jnp
ja
inc
shl
movl
in
fdivr
push
and
std
lea
lods
mov
dec
adc
fbld
cmp
in
mov
jbe
push
clc
mov
lea
cs
mov
add
pop
sbb
ret
ficomps
dec
cli
mov
push
pop
inc
add
and
lret
ss
cmp
mov
push
push
hlt
out
cld
inc
loop
lret
call
dec
adc
lcall
cmc
jnp
inc
je
cmp
imul
in
mov
jp
push
pop
jl
pop
adc
ror
xchg
pop
ja
loop
fsts
xor
mov
lds
mov
cmp
mov
loop
testb
push
ficoms
jle
sbb
sub
fsubp
test
das
outsb
stos
jae
mov
lock
or
sbb
pop
add
pushf
mov
fsubs
jp
divl
pop
sub
dec
aas
mov
lods
stos
lea
aas
sub
add
jo
dec
loopne
cld
aaa
jae
imul
lds
dec
frstor
addr16
inc
jmp
nop
and
popa
movsl
dec
test
mov
jbe
dec
fmulp
mov
bound
xlat
mov
jl
in
mov
push
or
add
in
nop
lea
jmp
test
gs
dec
inc
lcall
jl
push
je
into
push
and
add
adc
sbb
sub
adc
or
aas
sub
jmp
mov
dec
and
lea
jne
movsbl
sub
sbb
mov
or
sbb
sub
adc
adc
ror
mov
jmp
or
imul
idiv
aaa
js
push
incb
push
sbb
and
and
mov
arpl
sub
data16
in
mov
adc
dec
test
adc
and
fmul
data16
mov
jge
sbb
mov
movsl
mov
test
xchg
das
push
adc
cmovnp
pop
imul
das
imul
test
mov
mov
sub
out
ret
mov
pop
mov
sub
outsl
cmpsb
pop
pop
insb
and
xor
cmpsl
pop
xchg
jge
xchg
test
and
cmpsl
pop
add
adc
adc
cmp
andl
jmp
insl
out
orl
fadds
add
int
lock
and
pop
xlat
nop
push
adc
pop
and
sbb
mov
idivb
fistpll
mov
cmc
mov
test
xor
pop
mov
xchg
jecxz
xchg
cmpsl
iret
mov
sub
mov
sbb
roll
or
call
xor
mov
pop
cmc
fst
cli
cmpsb
clc
cs
das
adc
mov
rcrb
add
xlat
pop
insb
xor
fmul
clc
aam
shl
enter
lock
aas
sub
aaa
cmp
pop
lret
stos
push
fdivs
dec
ficompl
out
jl
xor
jl
clc
sbb
pop
push
adc
mov
push
sbb
rcll
jne
inc
jne
aaa
idivb
push
sahf
rorb
cmpsl
sbb
pop
das
lret
loope
jecxz
xchg
sar
mov
cltd
fstp
pop
and
pop
add
push
cli
cmpsb
mov
shrl
adc
call
shl
into
hlt
fadd
cld
aas
sub
jae
cmp
imul
jmp
cmc
inc
aad
inc
adc
les
push
xchg
ds
andb
mov
sarb
push
adc
dec
jp
aam
mov
stos
mov
pushf
mov
int3
pop
insl
or
shr
loope
pop
xchg
cmpsb
mov
mov
lahf
adc
sbb
push
jo
cld
mov
iret
mov
mov
add
loope
leave
out
in
loope
sub
outsb
jno
movl
pusha
jmp
mov
mov
mov
push
fs
ret
jbe
and
je
ret
push
and
add
jmp
test
jp
jnp
lahf
pop
pop
pop
daa
add
test
movsb
jb
mov
sti
cltd
pop
leave
pop
cli
mov
sbb
mov
stc
mov
subb
mov
call
ret
shr
sti
loope
aad
icebp
std
aas
sub
jge
or
mov
mov
inc
out
jns
imul
scas
xchg
mov
aas
dec
dec
fcomps
jp
and
pop
repz
and
and
mov
jno
adcb
pop
adc
insb
mov
pop
leave
cwtl
dec
sub
mov
mov
xchg
mov
mov
clc
out
lock
aas
sub
repnz
mov
test
loope
pop
addl
lods
sub
fnstenv
and
test
lret
movsb
and
dec
xor
inc
enter
into
mov
movsb
and
cltd
call
xchg
mov
call
stos
arpl
pop
shll
loop
ret
dec
mov
add
push
adc
xor
sub
cmp
add
sbb
push
aas
sub
mov
imul
lea
lds
jae
jg
dec
in
dec
int
aad
xchg
xor
rclb
push
inc
or
stc
adc
icebp
repz
repnz
icebp
arpl
inc
jae
nop
dec
pop
and
or
pop
xchg
pop
insl
outsl
insl
icebp
xlat
jge
push
jle
sbb
int
pop
mov
fs
inc
fldcw
dec
mov
ret
nop
xchg
sub
not
js
pop
add
add
sbb
sub
sub
mov
outsl
rcr
pop
scas
cs
mov
mov
sub
movsl
scas
ljmp
sarl
lea
xchg
fisubl
pop
lods
mov
sbb
idivb
jl
shlb
js
das
xchg
popf
dec
cmp
nop
push
mov
sub
mov
push
je
dec
movsb
pop
sub
or
cmp
fst
not
jns
loopne
lcall
dec
mov
ret
sub
aas
test
es
jnp
sub
mov
test
sbb
aam
pop
push
or
pop
daa
pop
pop
push
push
push
pop
fsubrl
stos
in
sahf
mov
mov
scas
aaa
ss
pop
adc
jp
aad
ds
sbb
cmpb
jno
push
addl
mov
xor
pop
std
inc
ret
ja
mov
andl
xchg
in
loopne
test
jbe
or
add
sarb
xor
xchg
push
int
std
or
mov
and
mov
push
xor
add
sub
sub
or
push
aas
sub
lcall
out
or
pop
or
jo
incb
xor
cmp
add
mov
push
cwtl
push
test
pushf
addb
mov
out
js
xchg
push
push
add
sub
loopne
shld
xchg
int
xchg
faddp
call
repz
add
or
mov
and
fstl
in
mov
jnp
push
jno
jb
imul
leave
ret
std
iret
fld
std
out
leave
aas
sub
push
adc
es
cmp
pushf
lea
jae
cmp
add
pusha
call
add
insl
imul
insl
push
gs
popa
jb
add
fs
call
jmp
pop
jae
imul
dec
xchg
and
add
out
mov
test
push
shlb
rcrl
daa
es
ljmp
lock
mov
popf
adc
dec
and
push
lock
mov
insb
negl
mov
add
xor
aas
and
cmpsl
imul
scas
cmc
in
jb
shlb
cwtl
sbb
repnz
out
in
rol
repnz
rcl
aas
sub
popa
bound
pushf
pop
cltd
pop
daa
add
fists
and
push
aam
shlb
jb
push
in
rcl
sarb
dec
dec
negl
shrb
add
dec
jns
andl
aaa
jns
dec
bswap
dec
push
cmp
ja
sahf
mov
jge
or
mov
jbe
mov
and
stc
std
mov
lods
xor
sar
cmpsb
lds
das
adc
xor
add
adc
add
or
xor
aas
sub
mov
js
movw
test
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
decl
clc
add
xor
into
mov
cmp
xor
mov
jmp
mov
sti
mov
lret
push
and
aaa
test
cli
mov
in
sbb
aas
xchg
cmpsb
das
movsl
cli
mov
push
dec
mov
popa
adc
jge
imul
loopne
xchg
mov
sub
jno
mov
adc
fneni(8087
cwtl
mov
inc
cli
pusha
fidivrl
into
jl
pop
fmulp
cld
mov
not
dec
add
push
out
pop
jecxz
cmpsb
nop
ret
icebp
or
push
inc
fs
std
or
or
das
adc
lods
stos
scas
mov
outsb
ss
je
pop
bound
insb
inc
jb
jp
and
aas
sub
icebp
mov
repz
jae
repz
cmc
aas
sub
jne
xor
test
xchg
jle
mov
push
add
bt
test
movzwl
bts
shld
cmc
mov
test
clc
cmp
cmp
add
jmp
movb
lea
jb
pusha
clc
cmpb
movl
lea
jne
pusha
neg
pusha
sub
mov
stc
add
jmp
neg
jmp
jge
idivb
cmp
sbb
sub
cwtl
xchg
cld
xchg
lods
or
arpl
add
jb
push
dec
iret
dec
xchg
lods
or
mov
inc
inc
outsb
dec
pusha
lret
and
call
call
shl
sub
aas
add
xchg
test
mov
sbb
xchg
jle
dec
ds
pop
ficoml
push
shlb
repnz
sub
repnz
fnsave
mov
out
stos
movb
sub
dec
mov
cltd
punpcklwd
lock
cmp
dec
aad
jl
pop
push
jnp
mov
ss
sub
rorb
jb
xchg
push
dec
push
pop
jge
cltd
jl
rcl
shr
out
jecxz
aad
sub
push
sbb
adc
dec
gs
pop
push
adc
and
das
aas
sbb
mov
xor
rcrl
push
ja
dec
rcrb
xchg
stc
cmpsl
lods
popa
and
push
rcrl
iret
in
mov
ret
mov
mov
add
pop
push
cli
cmpsb
shrb
sub
xor
push
fsubp
into
aam
iret
jb
or
and
cmp
adc
xor
sub
mov
push
push
lea
jmp
jmp
push
inc
jmp
push
jbe
cli
jle
dec
orb
push
test
cwtl
es
lods
and
addr16
mov
dec
add
mov
sbb
xchg
stos
pop
ficompl
xchg
sbb
jae
daa
stc
test
xchg
int
cmpsl
outsb
shlb
cmp
sbb
sahf
cmp
cli
cmpsl
outsl
fs
adc
xchg
inc
sbbl
jnp
je
xchg
xchg
outsb
lcall
sub
or
and
adc
sbb
aas
sub
out
lods
lea
je
stc
pushf
cmp
pusha
push
lea
je
pusha
pushf
stc
call
lahf
mov
cmpsb
add
loop
arpl
or
jge
xlat
sahf
stc
sub
mov
test
xchg
sbb
jmp
cmpsb
adc
inc
ljmp
idiv
cmpsl
adc
in
xor
pop
and
jbe
jbe
cmpsl
adc
das
das
adc
shlb
sti
cmp
dec
pop
xchg
fs
repz
stc
sti
in
jecxz
sub
jo
aaa
and
lret
orb
mov
imul
push
rol
xchg
xor
lret
fbstp
jbe
adc
push
push
xchg
aas
movsl
out
and
call
scas
iret
add
mov
outsl
inc
push
sub
sbb
or
xlat
cmpsl
adc
lret
xchg
mov
jae
mov
add
cmp
adc
andl
mov
mov
inc
or
jle
mov
iret
jmp
push
inc
dec
dec
push
bound
pop
data16
push
sub
pop
sbb
push
cmp
adc
jno,pt
mov
fwait
xor
sub
cmpsl
ds
and
imul
rclb
lahf
sub
mov
lahf
subb
jns
scas
mov
fwait
notl
mov
add
or
pop
push
fcompl
sbb
mov
les
popa
cmp
out
cli
cmpsl
sbb
cs
adc
rcll
dec
inc
xchg
xchg
or
xchg
mov
mov
sub
push
sbb
mov
pushf
pushf
push
pushl
ret
pop
lods
push
push
mov
mov
rorl
shll
dec
add
popa
lock
xor
inc
lds
pop
imul
mov
fistpll
push
iret
add
jbe
repnz
mov
add
mov
pop
mov
out
hlt
dec
cli
cmpsb
in
sarl
jbe
out
push
inc
subb
mov
xorb
dec
push
jae
pop
push
jg
jnp
sub
mov
cmp
pop
or
inc
cld
pop
les
pop
in
jp
jbe
int3
sahf
mov
into
inc
push
enter
or
adc
inc
dec
adc
sub
adc
push
xor
out
fs
roll
fdivr
sahf
adc
in
test
clc
stos
add
pushf
push
shl
test
push
cmp
js
mov
cld
cld
insb
test
int3
fcmove
lds
mov
aas
sub
cmpsl
fistps
cmp
fildll
into
push
adc
add
cmpsl
xchg
mov
aas
sub
add
mov
test
test
push
out
ficompl
jl
fs
push
pusha
enter
jne
scas
push
adc
dec
jo
sub
pushf
push
adc
shl
test
and
sub
push
mov
xor
movsl
fs
adc
pop
sbb
in
sub
mov
enter
sub
leave
xlat
cmc
in
stc
ror
int
aas
sub
addl
inc
mov
pop
lret
jge
pop
ret
lea
pop
aas
jnp
pop
pop
sti
jnp
jae
pop
xchg
pop
test
scas
movsl
or
cli
cmpsb
loope
lods
jmp
mov
flds
cmpsl
lret
das
adc
jge
clc
sbb
sub
push
push
sbb
cltd
mov
mov
sub
push
rcr
sub
ds
xor
mov
mov
out
mov
adcb
xchg
fcmovne
jecxz
sbb
push
out
sti
incb
orb
jmp
push
cmp
into
jg
push
rcrb
sahf
outsl
cmp
out
lea
jns
xchg
stos
stos
scas
pusha
pop
rclb
out
mov
mov
in
iret
add
pop
dec
fs
nop
adc
out
xchg
cmp
cs
jnp
ret
mov
sbb
clc
out
enter
repnz
int3
loop
aas
sub
jb
xor
adc
xchg
cmpsb
imul
in
clc
dec
shlb
out
mov
negb
mov
sbb
add
incl
ds
popf
xchg
push
adc
lret
bound
mov
adc
pop
cmpb
dec
pop
jg
js
sub
fwait
push
in
dec
adc
mov
jl
mov
push
and
jb
outsl
push
and
jns
popa
jae
arpl
add
movsb
xchg
mov
cwtl
test
sub
xchg
pop
xchg
lea
jne
movsbl
bswap
movb
movzbl
lahf
call
bt
clc
bt
stc
add
test
mov
stc
cmp
pusha
pushf
test
push
call
sub
jne
dec
mov
sbb
sub
imul
mov
cmp
cmp
dec
out
pusha
out
pop
inc
push
cld
call
xchg
push
fcomip
outsl
arpl
adc
int
mov
inc
mov
mov
test
dec
sti
imul
adc
jge
pop
and
hlt
mov
rolb
icebp
pop
jb
fucomp
xchg
dec
inc
dec
popa
pop
push
js
jno
cltd
xchg
add
flds
inc
dec
dec
insl
ja
jnp
push
imul
stc
cli
mov
adc
mov
cmp
mov
jp
hlt
and
int3
push
out
inc
jbe
dec
inc
pusha
inc
gs
push
into
leave
dec
pop
das
push
xchg
popl
dec
ret
aad
dec
sbb
sub
sbb
ret
icebp
mov
pop
push
adc
aas
and
and
aas
sub
les
mov
mov
mov
pusha
pushf
xchg
mov
not
mov
push
mov
lea
jmp
mov
dec
jmp
cmp
movzbw
lea
mov
mov
mov
jmp
push
lea
jb
cmc
test
jmp
pusha
mov
bt
pushf
stc
cmpb
pushf
mov
lea
jne
btr
sar
lea
clc
xor
xor
cmp
jmp
push
mov
call
pushf
jmp
push
sbb
xor
sti
jp
jp
mov
stos
scas
scas
push
dec
popa
add
push
adc
xlat
aas
pop
push
aas
in
frstor
shrl
arpl
imul
int
icebp
pop
ja
mov
sbb
iret
lea
and
push
adc
fs
pushf
clc
inc
sub
push
cmpl
lods
adc
inc
add
sbb
ret
lods
je
mov
sbb
xor
and
pusha
cmp
mov
cwtl
scas
mov
sbb
jmp
or
mov
pop
mov
cmpsb
or
add
sbb
add
movsb
xchg
ds
add
test
lret
xchg
lods
adc
dec
push
push
dec
add
je
cmpsl
cmp
arpl
sub
xor
and
and
add
sub
aas
sub
mov
inc
icebp
sti
mov
cmp
dec
or
xchg
movsb
mov
push
xchg
nop
test
xchg
mov
cmpsl
cwtl
fsubrl
outsb
clc
pop
aam
call
inc
or
or
stos
in
cli
xor
add
mov
nop
stos
pop
pop
sub
out
push
fdivrl
jb
push
push
sbb
cmp
pop
mov
xchg
cmp
dec
insl
add
or
arpl
jno
push
imul
addr16
pop
push
aas
sub
xlat
lcall
mov
bnd
loopne
cltd
fs
incl
or
xchg
gs
xchg
daa
xor
fildll
pop
ret
jns
imul
mov
loop
pop
sbb
push
sbb
inc
cli
mov
push
xchg
insl
jo
out
cld
fisttpll
jg
xlat
insl
outsl
jno
popa
addr16
jg
inc
push
imul
sub
mov
jne
xchg
or
adc
fnstenv
dec
in
std
outsl
cmc
inc
stc
push
sbb
daa
sub
aaa
jo
sub
jns
push
push
mov
aad
ret
inc
aam
cmp
xchg
cmc
popf
shlb
xlat
mov
rorb
adc
loopne
aam
pop
aad
lahf
fildl
cmp
mov
cmp
push
imul
pop
insl
pop
dec
dec
jno
pop
inc
aas
sub
lds
add
and
cmpsl
in
pushw
adc
insl
repz
lret
inc
fisttpl
gs
loope
xchg
add
jp
xchg
in
mov
and
and
push
push
and
aam
xor
adc
pop
jl
ficompl
fcomip
mov
push
rclb
sti
cmp
aas
add
cmp
push
bound
jl
dec
jle
xor
std
out
or
arpl
jg
cmp
inc
popa
imul
dec
jns
aas
sub
hlt
mov
int3
xor
inc
rcrl
shlb
xor
mov
pop
into
xchg
cmp
fwait
loopne
sahf
out
fstl
push
cld
popf
xchg
jle
cmp
test
fadd
add
fxtract
jne
xchg
sub
ficompl
sbb
cltd
shll
mov
cld
cs
cmc
in
aas
xchg
dec
sub
int3
sub
cli
neg
testb
cmp
fildl
xor
mov
stos
pop
fidivrl
sbb
jle
xor
cmp
mov
leave
out
dec
sub
mov
inc
outsb
ljmp
daa
sbb
rclb
mov
push
ss
inc
pop
pusha
lret
xor
insl
cmpsl
xor
or
stos
pop
rclb
xchg
sarb
dec
aam
aas
pop
xchg
jnp
inc
bnd
cld
stc
lods
jle
pushf
sbb
cs
xor
sbb
xor
and
sub
sbb
loope
ret
cmpsl
lret
xchg
fidivs
cld
in
loopne
cli
adc
push
pusha
fistps
popf
and
repz
mov
je
in
aam
pop
xchg
inc
mov
push
cmp
rcl
je
jl
mov
int
rolb
lds
inc
arpl
and
cmp
add
mov
inc
loopne
les
jl
mov
js
push
push
into
inc
inc
les
jge
push
add
and
int
test
fcmovnb
pop
pop
movl
insl
xor
inc
loop
ror
loope
pop
adc
sbb
in
push
sarb
mov
pop
mov
fcoml
xor
dec
push
roll
out
lods
push
xor
inc
cmp
mov
mov
ja
in
adc
addr16
insb
xlat
sarb
xlat
lock
dec
cli
stos
outsl
inc
faddl
and
cli
lret
pop
sarl
cmpsb
pop
push
cmp
sbb
xchg
or
repnz
pop
dec
or
sbb
or
sbb
ret
mov
int
mov
xchg
popf
push
popf
xchg
dec
in
xchg
pop
mov
push
jbe
lretw
dec
sarl
xchg
mov
out
xchg
xchg
dec
jmp
rorl
pop
cli
mov
cmpsl
jne
xchg
jmp
aam
cmpsl
cs
cld
mov
pop
lods
cmc
pop
xor
test
pop
sbb
int3
dec
mov
dec
mov
cli
mov
fcmovnu
insb
scas
xchg
xlat
pop
xor
scas
xchg
leave
es
int
jg
cli
repnz
jp
imul
cs
fdivrl
sub
jbe
int
mov
insb
out
arpl
mov
cwtl
lea
in
stos
mov
pushf
push
mov
mov
add
add
or
or
aad
mov
mov
cmc
xchg
pop
loop
mov
sbb
mov
leave
jecxz
sub
lods
mov
mov
aad
sbb
ds
dec
pushf
jecxz
cltd
ds
dec
mov
xor
mov
cmpsb
fwait
mov
push
fnstenv
xchg
jl
adc
mov
aas
int3
int
into
dec
addr16
stos
pop
int3
inc
jo
push
pop
shrb
and
pop
movsb
inc
mov
rcll
jnp
mov
fmuls
or
mov
ret
scas
lds
inc
sahf
rol
push
push
jno
pop
adc
jae
scas
mov
pop
movb
cld
mov
or
jp
loopne
scas
pop
xlat
mov
push
imul
cmpsb
xchg
add
xchg
sti
dec
mov
std
pop
fcompl
inc
or
push
xchg
pop
mov
rcr
mov
jp
and
push
adcb
decl
add
xor
ds
mov
std
dec
xor
movsl
out
icebp
jge
out
in
push
cld
ljmp
call
lds
sbb
xlat
jp
mov
push
mov
xor
insl
ret
sbb
mov
pop
je
lods
pop
push
push
lcall
pop
add
jnp
imul
cmc
lods
xor
aam
mov
lods
mov
sbb
aas
int3
inc
loope
dec
enter
dec
lods
inc
sub
mov
aam
pop
mov
and
aam
and
in
std
repz
popf
repnz
push
jmp
and
dec
jae
mul
mov
xchg
repnz
movsl
adc
stos
xchg
pop
stc
inc
nop
das
hlt
jmp
repz
enter
jae
sbb
sbb
xlat
dec
ret
ret
popf
scas
lahf
pop
cmc
movq
jae
adc
enter
inc
sbb
sahf
xor
xor
pop
scas
inc
fcmovnu
popf
js
adc
cli
xchg
inc
cmpsl
inc
lea
mov
fadds
rclb
xchg
xchg
cmp
xchg
cmp
cmp
dec
es
enter
add
add
sbb
mov
movsl
xchg
call
jne
sbb
sbb
adc
test
xor
xor
shll
lret
or
cmp
pop
xchg
stc
pop
cmpsl
pop
pop
sbb
jae
jp
mov
sub
into
jne
mov
mov
repnz
jl
sub
cltd
pop
faddl
pop
sbb
sub
mov
sub
dec
mov
jb
xchg
loop
dec
cmp
out
push
fwait
push
jns,pn
movsl
pop
pop
mov
cmc
jns,pn
sbb
xor
jle
movsl
arpl
lods
fadd
cmp
sub
mull
adc
fmull
int
rcrl
cs
cld
mov
dec
sbb
xchg
dec
mov
dec
sbb
dec
ljmp
sbb
inc
sbb
add
cltd
pop
fsincos
xchg
dec
leave
std
jbe
lea
mov
sub
mov
ljmp
imul
aad
ror
and
mov
xorb
jno
mov
loope
scas
stc
repnz
mov
mov
sub
mov
cltd
dec
sti
or
add
sbb
dec
push
pop
xor
push
inc
inc
add
cmp
push
cmp
fmull
lcall
imul
sub
test
dec
jp
popa
inc
clc
dec
cli
or
out
sbb
test
fstps
mov
lods
or
leave
dec
or
shrb
sbb
dec
leave
ds
dec
xchg
lds
mov
push
sahf
fbld
cld
lea
ja
cld
xor
mov
clc
cvtpi2ps
outsb
scas
cmpsb
js
inc
cmpsb
pop
int3
cmp
shrl
xchg
hlt
sbb
inc
imul
xor
fdivrl
sub
mov
lcall
push
ss
jno
mov
loope
sub
jecxz
sti
enter
sbb
shll
pop
mov
rclb
adc
jmp
pop
xchg
pop
repz
xor
lods
repz
cwtl
and
inc
pusha
dec
aam
ljmp
mov
add
lcall
sbb
adc
or
inc
jp
pop
xchg
dec
out
mov
mov
jns
int
sub
repz
push
shlb
loopne
int
inc
out
or
enter
cltd
dec
cmpsl
dec
jns
out
jo
fstpl
xchg
push
fsts
mov
inc
mov
fnsave
push
pop
rcl
mov
dec
inc
pop
push
pusha
jb
and
fwait
iret
loope
push
insb
adc
jns
fisttpll
mov
xchg
repnz
dec
stos
stos
das
push
fstl
fildll
rcl
inc
cmp
gs
loope
push
lahf
push
sbb
sbb
loopne
pop
dec
leave
push
movsl
nop
xor
push
iret
aas
dec
insb
and
inc
imul
ror
dec
test
dec
jge
cmpl
mov
cmc
dec
dec
pop
dec
sbb
jge
push
add
mov
push
inc
lods
and
lock
lods
repnz
popf
cmp
xchg
mov
mov
and
push
pop
pop
aam
xchg
mov
pop
pop
loope
pop
andl
out
je
cmc
stos
rcll
out
aam
mov
int3
fs
add
dec
xchg
lds
pop
sbb
cs
mov
aam
aas
push
xchg
mov
dec
cltd
pop
iret
pop
dec
jmp
lods
jmp
dec
xchg
and
fcmovnb
pop
pusha
sahf
inc
pop
pusha
xchg
aaa
out
int3
fildl
inc
xor
inc
pop
pusha
sahf
les
inc
pop
pusha
xchg
push
enter
lods
push
sbb
pop
pop
sbb
push
std
pop
adc
loope
in
dec
into
fdivrl
outsb
pop
cmpb
test
lea
xchg
push
cmc
aad
cmp
sbb
sti
das
test
ss
adc
cmp
outsb
in
add
add
adc
jle
mov
jmp
aas
add
loope
xor
pop
sbb
testl
repnz
ret
inc
xchg
pop
inc
insl
nop
sbb
cld
xchg
movsb
xor
mov
and
mov
mov
fwait
pop
and
pop
jl
inc
lods
sarb
into
xor
aad
mov
rcr
aam
mov
arpl
pop
pushf
ja
mov
popf
aad
jnp
sar
incb
in
cld
popa
popf
mov
jnp
push
push
jb
out
push
jo
pop
fistl
rcrl
jge
ss
mov
mov
mov
cmpsb
dec
push
cmp
pop
clc
enter
ret
lods
mov
getsec
movl
inc
jbe
dec
sbb
into
sub
and
inc
mov
fwait
imul
pushf
inc
inc
and
add
xchg
fcompl
mov
std
or
xchg
lds
rclb
or
xchg
inc
or
xchg
or
stc
jb
xchg
daa
pop
rcll
dec
adc
or
push
sti
xchg
in
mov
pop
rcll
mov
jecxz
popa
xor
es
mov
popf
faddl
out
inc
out
in
xchg
clc
arpl
mov
out
test
push
ficoml
pop
pop
scas
pop
sahf
pop
pop
pop
sbb
loopne
push
scas
movsl
shr
pop
insb
aad
iret
mov
js
sub
dec
roll
aam
clc
mov
sbb
outsb
xchg
dec
fnstsw
in
cmc
out
daa
pop
fstl
add
adc
pusha
dec
xchg
xchg
es
int3
pop
ret
mov
add
mov
sub
pop
dec
mov
aaa
or
xchg
cmp
or
jo
jo
lods
ljmp
sbb
andl
loope
or
dec
cmp
shl
fs
cwtl
pop
adc
xchg
jge
sbb
insb
mov
inc
mov
mov
push
or
inc
adc
adc
rorl
imul
push
dec
les
mov
sbb
js
popa
fiaddl
add
mov
pop
aas
loop
or
pop
mov
popa
inc
fs
jmp
sti
jle
push
into
mov
mov
aad
sub
and
filds
insl
sahf
xchg
and
pop
push
mov
scas
lcall
pop
cli
mov
mov
jle
dec
sti
stos
push
jnp
inc
test
pcmpgtd
movsb
ret
fcoml
lea
mov
mov
flds
sub
dec
leave
adc
repz
int3
and
dec
sahf
popa
shrl
push
js
imul
mov
fld
aas
pop
out
loopne
push
mov
cld
jge
mov
push
sub
xchg
addb
inc
jp
stos
icebp
mov
and
int3
lret
sub
push
inc
sbb
pop
lret
dec
scas
adc
push
push
jne
add
test
jne
in
jmp
pop
lea
adc
xchg
dec
pop
add
int
jmp
push
or
lahf
aam
jmp
xor
xchg
jmp
aaa
pushl
jae
or
aam
or
xchg
in
xchg
js
mov
add
fsubl
pop
sbb
ffree
pop
mov
sti
popa
sub
stos
xor
cltd
and
push
mov
pop
iret
cmc
sub
aam
fld
aam
cmpsl
cmp
nop
inc
and
jl
sbb
idivb
bound
leave
ficoml
movsb
jbe
aad
lahf
sbb
cmp
ljmp
out
in
jg
jne
push
mov
jbe
dec
pop
ficoml
mov
aas
mov
push
stos
inc
mov
jecxz
adc
push
fcmovnb
push
cmp
ret
shll
mov
js
adc
fisttpl
fiaddl
mov
adc
je
adc
mov
decl
mov
push
inc
dec
pop
mov
pop
dec
fdivrl
xchg
fwait
sarl
call
inc
sub
les
add
fldt
scas
mov
jae
add
insl
scas
mov
mov
test
xchg
test
pop
xchg
lods
cltd
int
iret
xchg
fs
frstor
shlb
jmp
int
and
pop
dec
cmp
dec
rolb
test
mov
push
lock
std
push
and
push
jl
int3
mov
dec
add
in
cs
inc
xchg
push
inc
scas
sub
inc
in
ss
pop
dec
jp
movsb
inc
nop
dec
xchg
or
sahf
lcall
push
in
cs
hlt
or
or
fstl
les
imul
dec
aam
or
dec
fucom
les
daa
push
xchg
mov
pop
and
mov
gs
lods
mov
in
ja
mov
test
cmpsl
mov
clc
lcall
sbb
and
jae
mov
lods
push
int
push
jle
enter
mov
push
push
mov
pop
mov
jp
lea
lds
push
xchg
adc
fsts
fsts
sbb
cmp
repz
mov
sbb
xchg
int3
jmp
mov
sbbb
xor
xlat
ljmp
jp
inc
sbb
cmp
mov
lds
repnz
jge
shlb
mov
jge
scas
mov
jge
insb
mov
jge
lret
jge
or
sbb
xchg
mov
jae
int3
test
cmp
lds
sub
rclb
xchg
lds
jge
sbb
mov
jge
aas
lods
sub
insl
in
loop
mov
jge
xchg
mov
jge
int
jge,pn
jno
mov
dec
jge
xor
jecxz
pop
lods
add
lods
iret
add
sub
int
int
jp
int
nop
int
xorb
jp
int
in
sub
int
in
add
in
iret
in
sub
int
in
add
in
outsl
xchg
test
inc
push
iret
out
sub
int
push
add
push
sub
int
push
add
push
iret
inc
cs
int
add
cs
into
cs
int
add
cs
fisttpll
sbb
cmc
loop
test
outsl
dec
and
mov
fsubrl
lods
fdivrl
add
icebp
cmp
mov
pop
inc
xchg
mov
dec
imul
rcrl
push
inc
or
mov
sub
rcr
dec
pop
mov
lret
outsb
mov
outsb
int
roll
push
mov
int
inc
adc
sahf
jnp
push
push
push
sbb
cmpsl
mov
or
int
xor
rorl
push
lods
pop
dec
xchg
orl
lock
dec
cmc
stos
mov
gs
add
int
inc
shrb
in
mov
iret
cmp
sub
mov
lret
sbb
dec
push
mov
test
sub
cltd
ds
leave
push
cld
call
ror
sub
push
int
test
cvttps2pi
sub
sbbb
pop
mov
inc
sbb
dec
mov
mov
inc
insb
out
scas
mov
lods
mov
dec
xchg
dec
int
xchg
sub
stos
dec
xchg
ret
pop
jmp
jnp
rorb
sub
ds
lods
or
push
mov
mov
push
xchg
push
adc
push
jp
es
push
dec
sahf
or
xchg
xchg
pop
addr16
aad
ds
xchg
popf
lods
pop
subb
sbb
mov
dec
push
lock
mov
cmp
jmp
lods
sub
popf
mov
push
xchg
out
mov
or
out
dec
push
push
lock
cmp
shl
lcall
push
mov
out
pop
cmc
fldl
outsl
or
dec
jp
or
rol
outsl
sub
xchg
iret
and
in
fstl
outsl
rclb
cwtl
adc
out
dec
mov
popf
xchg
mov
int
pop
orl
out
int3
jle
data16
popf
jmp
cmc
inc
lea
neg
sub
mov
xor
dec
and
scas
cs
or
jno
mov
icebp
popf
les
cmp
lods
adcb
notl
dec
fcoml
repz
ret
iret
icebp
popf
xchg
shlb
cmp
or
cmp
jp
xchg
repz
lods
cmc
or
inc
pop
cs
fdivl
sub
sbb
xchg
dec
arpl
out
lahf
jb
jno
sub
cmp
sub
andb
lds
cmpb
dec
dec
gs
mov
adc
xchg
adc
test
fwait
xor
push
test
sti
cmpsl
sub
jb
adc
jle
cli
jbe
std
fnsave
sbb
push
jl
xor
movsl
add
add
movsl
add
fld
in
sub
sbb
aam
cmp
xor
sarl
mov
cli
aas
cmpsl
push
mov
mov
push
cld
mov
and
sbb
xor
xchg
mov
mov
lret
dec
inc
cmp
pop
dec
push
mov
mov
push
js
push
aam
shrb
and
ja
fdivr
in
out
dec
xor
pop
neg
push
inc
sbb
sub
pop
mov
jno
fcoml
loopne
jbe
fstpl
inc
sahf
mov
ret
mov
les
jp
xor
jg
imulb
jle
or
mov
sub
inc
out
inc
out
cmp
orl
dec
int
push
js
inc
ja
inc
lods
xchg
repz
les
repnz
mov
mov
mov
cmp
push
pop
in
rcll
jmp
sbb
mov
inc
push
inc
popf
repz
ret
jp
int3
sahf
lds
ret
mov
movsl
in
ret
push
sahf
mov
push
ret
mov
push
mov
xor
push
jp
jo
ret
or
or
adc
xchg
shll
arpl
sbb
and
mov
call
jo
jecxz
repz
mov
dec
or
xchg
and
mov
xor
and
push
mov
movsl
sub
nop
jge
or
add
mov
outsl
pop
jmp
hlt
nop
add
loop
inc
imul
faddl
scas
lock
ret
dec
push
cmp
ret
jp
leave
cltd
ljmp
sarb
shll
bound
and
and
sbb
push
sub
push
mov
push
vmaxpd
push
mov
jno
rorb
mulb
ljmp
aam
test
inc
cmp
mov
lods
or
test
in
jmp
mov
shlb
inc
xchg
fisubrs
fnstsw
add
mov
shr
mov
or
leave
xor
xor
int3
adc
sub
pop
xor
ljmp
dec
jl
push
sbb
inc
pop
lock
jbe
sbb
lock
sub
and
push
sbb
inc
mov
insl
in
jmp
push
es
out
fcompl
mov
push
icebp
jns
xchg
insl
cmp
jg
pop
int
lock
rolb
int
inc
rcll
inc
dec
adc
cmp
inc
sbb
jp
in
enter
aas
and
dec
adc
movl
adc
mov
jns
xlat
fadd
std
cmc
push
jp
sbb
nop
lods
xchg
pushf
pushf
jne
mov
inc
mov
xor
fsubrs
ljmp
cli
lcall
cmp
mov
pop
ret
sub
lcall
ret
aad
cmp
xor
mov
jae
xlat
fidivs
sub
cmp
cs
mov
mov
push
mov
push
ret
xchg
xor
pop
gs
mov
mov
aam
mov
mov
xlat
stos
fwait
cmc
add
adc
push
xlat
mov
add
mov
push
mov
mov
sub
fwait
mov
jbe
dec
cmp
loop
cmpsl
leave
pop
xchg
push
test
push
cli
or
mov
aas
ja
out
subb
push
dec
push
xchg
jbe
int
ret
aad
in
addb
sbb
adc
stos
sub
dec
popf
sub
dec
pop
popf
fistps
cltd
fsubrl
into
cmc
xchg
mov
mov
stos
mov
jnp
pop
data16
addb
frstor
sub
mov
mov
int
mov
jno
pop
sarb
mov
pop
mov
repz
shlb
lret
ljmp
cmc
movsl
dec
push
shrl
dec
fcom
mov
jecxz
mov
jbe
loop
icebp
dec
loope
icebp
in
mov
dec
ret
test
inc
pop
xchg
dec
stos
mov
popf
inc
adc
icebp
push
std
ret
adc
stos
xchg
mov
in
ljmp
shl
push
mov
jge
ficompl
jb
mov
or
jne
enter
out
pop
int3
mov
sarl
xor
ret
cmpsl
adc
stos
cmp
clc
push
mov
bound
nop
aas
dec
stc
pop
fldenv
mov
loopne
adc
adcb
fsubl
lds
ret
iret
mov
pushf
mul
out
fdivs
jmp
mov
bound
push
iret
int3
ret
outsl
jmp
data16
add
pop
xchg
mov
je
pushf
ret
add
adc
inc
inc
inc
push
push
and
shlb
cmp
mov
pop
inc
add
test
pop
shlb
popf
test
mov
dec
jae
adc
ret
xchg
rol
int3
movsb
out
push
insb
xchg
icebp
xchg
mov
dec
mov
sub
cmp
popl
and
cmpsb
or
adc
notl
mov
fchs
cmp
imul
inc
xchg
inc
popf
or
xor
cld
gs
fsubl
int
mov
lcall
jb
xchg
dec
mov
xchg
jb
jbe
fcoml
mov
cs
subl
mov
mov
xor
push
push
mov
out
rolb
xchg
xor
sub
pop
push
mov
or
sub
leave
int3
xchg
lret
ficoms
popf
dec
data16
test
or
jp
xchg
mov
mov
xchg
xchg
dec
iret
pushl
and
inc
mov
int
cmpsl
xchg
or
fcoms
fwait
or
xor
test
stos
sub
jmp
pop
movsl
inc
ds
mov
inc
pop
jae
pop
jbe
mov
shl
lods
rcrb
test
xor
pusha
sar
xchg
lahf
pushf
pop
rolb
xchg
sub
popf
sub
inc
ljmp
rorb
mov
sbb
shll
call
pop
push
jmp
frstor
cmp
jecxz
adc
adc
xor
in
cs
popa
cltd
jle
int3
mov
jae
adc
int3
stos
and
sbb
inc
data16
fldl
int
jno
lds
or
mov
inc
aam
dec
or
xchg
adc
roll
or
fdiv
push
add
lods
mov
mov
push
pusha
imul
sar
aam
lret
outsl
dec
jge
mov
movsb
ret
push
mov
and
mov
icebp
xchg
sahf
mov
adc
sar
int
les
xor
pop
pop
mov
inc
xor
jle
xorb
pop
shll
mov
push
jo
push
jo
mov
adc
out
mov
flds
lea
xchg
rcll
pop
ret
jmp
sti
fnsave
mov
jl
mov
std
fnstcw
mov
fwait
lods
jnp
je
inc
jo
xchg
aam
fisttpl
jne
fld
pop
mov
inc
or
mov
pop
cmp
inc
sub
sbb
lcall
inc
lock
out
add
dec
or
fnstsw
dec
xlat
ljmp
popf
dec
sbb
jae
add
jns
dec
xchg
lods
jae
cmc
scas
jae
add
lret
scas
lods
lock
or
ds
lret
mov
add
sub
es
dec
dec
cmc
xchg
int
sbbb
out
or
pop
xor
inc
jecxz
xlat
cmc
dec
lea
mov
push
aam
repnz
inc
outsb
mov
dec
dec
shlb
mov
pop
test
pop
mov
cmc
mov
inc
fcmovnb
ljmp
mov
xchg
push
xorb
mov
je
push
aaa
xor
mov
sbb
lods
cmpsl
shrl
in
imul
mov
mov
aas
out
add
pop
mov
ds
shll
dec
xorb
or
aad
repnz
loopne
mov
or
xchg
dec
int
gs
or
pop
subb
shll
xchg
cmc
sub
repz
cmp
sub
fcmovnb
ljmp
iret
adc
repz
aas
jns
test
enter
sbb
repz
jle
ljmp
insb
insl
je
pop
insb
test
ret
jge
sub
dec
ljmp
mov
xchg
hlt
adc
and
inc
pop
add
add
cs
or
xor
sbb
push
mov
dec
dec
in
jge
sub
dec
cmc
adc
push
sbbb
cmp
stos
fs
gs
idivl
lea
xor
xor
repz
or
push
iret
lret
mov
mov
or
bound
inc
imul
mov
test
lret
fwait
cmp
scas
lcall
imul
lret
int3
dec
stos
lods
je
add
sbb
dec
push
cli
push
jg
out
jmp
xchg
fstl
jns
lods
orb
push
cmp
lahf
dec
iret
sbb
ljmp
mov
cmp
subb
lds
xchg
mov
into
jb
push
pop
fdivr
outsb
inc
pop
dec
aas
xchg
cmpsl
movsb
jmp
sub
and
jb
pop
mov
xor
adc
inc
ds
jle
xchg
les
jmp
cli
push
lea
inc
movsb
imul
call
lock
push
jmp
mov
cltd
fsubl
int3
stos
lds
jp
mov
pop
imul
mov
loop
stc
xor
aam
mov
mov
push
dec
mov
fwait
inc
or
dec
cltd
movsl
push
jle
jp
inc
xchg
mov
aaa
dec
push
and
movsl
fnsave
sub
pop
stos
aaa
int3
cmc
sub
cmp
sbb
mov
fstps
mov
or
int3
inc
pop
mov
push
loop
cmc
aam
adc
adc
shll
pop
pushf
adc
sub
mov
xchg
or
outsl
jno
sarb
dec
pop
lea
fadd
int
mov
dec
sub
jo
icebp
hlt
sarl
sti
xor
fcompl
jp
rcll
push
sub
jnp
add
jbe
hlt
addb
lods
fldt
cmp
mov
mov
add
inc
and
lret
add
fldt
jp
mov
in
jge
std
adc
iret
mov
push
idivb
adc
call
adc
cwtl
in
jge
or
push
inc
adc
pop
pop
int
cmp
scas
dec
cltd
sbb
mov
andl
jns
pop
inc
movsl
adc
inc
mov
sbb
adc
test
inc
std
test
sbb
jno
loop
inc
inc
jge
push
sbb
mov
jge
xor
mov
pop
or
sahf
push
jmp
cmpb
pushf
mov
cltd
mov
sub
cmp
pop
jbe
insb
test
sbb
pop
xor
pushf
adc
ror
pop
aam
hlt
mov
pop
aas
mov
arpl
mov
les
mov
fcmovb
std
fld
lcall
mov
sub
mov
and
stos
mov
lcall
int
sar
push
and
or
pop
dec
ret
je
adc
jne
and
push
push
je,pt
mov
sbb
scas
fnstsw
pop
xchg
insb
dec
hlt
cmc
jne
sbb
aam
push
cmp
xchg
push
add
out
xor
cmp
pop
lahf
iret
mov
jg
xchg
xor
pop
push
and
shr
pop
es
xchg
inc
lds
sub
sub
nop
or
int3
sbb
lret
pop
iret
inc
mov
dec
pop
lcall
push
nop
push
xchg
jns
clc
push
jbe
jb
or
mov
cmc
out
andb
xchg
mov
std
ja
out
xchg
pusha
mov
stc
xchg
mov
fdivrl
cmpsl
divl
adc
mov
sti
mov
lea
sub
fmuls
cmp
clc
mov
jle
sbb
test
cmp
mov
add
popf
jge
ret
ficompl
jns
mov
inc
mov
aad
adc
jno
xchg
test
inc
icebp
cmpsl
sbb
mov
jno
cld
shrl
ret
stos
aaa
ds
lcall
cs
pop
jl
cs
lea
cltd
inc
lret
sub
dec
mov
xor
sub
cmc
jge
cmp
sarl
xchg
stc
insl
pop
movsb
sbb
inc
leave
loopne
and
pop
dec
push
dec
cmp
pusha
shr
dec
outsb
lret
shl
in
int
cmc
adc
sbb
inc
popf
lcall
sub
xor
xchg
pop
cs
dec
int
adc
int3
jne
push
call
sbb
push
in
jne
int3
mul
pop
push
imul
scas
push
sbb
push
in
es
sar
aaa
dec
sub
lea
cmp
jecxz
jb
lds
jne
fstps
dec
icebp
xor
push
xor
scas
lahf
je
mov
xchg
mov
ret
popf
dec
lret
les
fldl
ljmp
push
cmp
fdivrl
fistl
and
mov
jbe
outsb
inc
decb
jp
ss
sub
cmp
mov
popf
lret
mov
jp
push
int3
dec
mov
sub
mov
dec
mov
popf
mov
leave
lods
lret
insb
andb
ds
lods
or
jne
arpl
xlat
stc
lods
push
jle
loope
ret
mov
mov
outsl
cmp
xchg
out
pop
pop
jo
mov
hlt
js
sbb
push
push
in
pusha
filds
lahf
xor
adc
shr
ljmp
xor
out
and
scas
dec
xchg
inc
mov
shrb
sbb
pop
sub
scas
sar
js
je
orb
cmp
aam
jbe
leave
mov
test
aas
call
mov
cltd
lcall
pop
orl
loop
push
test
pop
in
sbbb
mov
push
push
pushf
mov
inc
and
test
push
jle
pop
sub
aaa
pop
cmp
push
dec
mov
xchg
pop
into
jns
in
inc
adc
test
jns
cmp
mov
fsubl
jl
pop
dec
inc
mov
or
pop
mov
or
adc
mov
test
mov
inc
scas
mov
stos
cmp
adc
xchg
xor
popa
sub
adc
push
fdivrl
call
jg
pop
test
shr
lcall
push
rclb
out
cs
mov
adc
icebp
cs
ja
pop
adc
xchg
xor
or
jns
sub
cmc
cmp
xor
jp
popf
mov
lcall
addps
cmp
loopne
mov
int
mulb
int3
pushf
add
lcall
mov
lahf
pop
jge
testb
xchg
mov
push
adc
mov
div
mov
xchg
adc
ret
jle
in
lahf
xor
adc
addr16
jecxz
ds
mov
jbe
mov
imul
es
mov
popf
stos
ds
mov
lret
inc
sub
scas
xchg
sbb
pop
push
add
push
idiv
repnz
lea
cs
ds
inc
and
aad
jecxz
cmp
mov
add
inc
mov
dec
mov
jl
int3
gs
xlat
testb
das
inc
leave
subl
or
sti
jl
dec
push
mov
shrb
dec
pop
out
popa
hlt
jnp
xorb
andl
pop
xor
addl
fistl
dec
rcl
sbb
scas
scas
cmp
ss
push
pop
subb
xor
xor
sahf
cs
pop
aas
inc
sub
inc
cmp
adc
dec
adc
push
xor
insb
div
push
ja
addr16
push
pusha
jmp
filds
rorl
cmc
icebp
push
jo
stc
xor
xchg
jmp
mov
fdecstp
adc
int
popa
jae
popf
dec
pop
jno
addr16
push
iret
jp
cli
cmp
test
lea
and
and
sbb
rorb
mov
sbb
jge
sarl
aaa
xchg
adc
into
fiaddl
sbb
mov
rclb
push
sbb
pop
inc
js
xor
int
movsl
dec
mov
int
push
xchg
push
jnp
sbb
mul
xchg
leave
inc
int
imul
and
adc
add
dec
dec
mov
idivb
push
cmp
fs
jns
xor
hlt
adc
movsb
pop
pop
fnsave
fucom
xlat
mov
test
pop
mov
mov
sub
jb
ud1
jmp
inc
jns
test
fstl
addr16
dec
lahf
imul
mov
loopne
or
xlat
pop
xchg
cs
aad
pop
rcr
ds
mov
aad
jbe,pt
pop
mov
dec
jp
div
scas
mov
fistl
hlt
testl
sahf
xor
lcall
mov
xchg
clc
mov
es
push
jecxz
mov
cmp
gs
xor
dec
mov
pop
adc
test
test
out
xor
and
mov
dec
inc
mov
fst
push
xchg
rorb
mov
push
inc
scas
sbb
cmp
hlt
bound
jne
inc
xsha256
cmpsb
rol
mov
cmp
arpl
cmp
cmp
sub
inc
xchg
mov
cmpsb
mov
pop
jno
sbb
sbb
or
fidivs
inc
xor
and
mov
ret
cmpsb
ja
testb
push
iret
jns
movsb
ljmp
inc
repz
mov
rclb
cmp
xchg
sbb
test
inc
insl
loop
out
or
dec
and
fdivs
xor
dec
sarl
in
xchg
jge
sub
rcll
dec
stos
stc
imul
add
loope
adc
inc
pop
mov
repnz
or
repnz
data16
pop
iret
ljmp
mov
xor
movsl
pop
daa
jp
pop
int3
shlb
jnp
fxch
into
mov
mov
cli
push
pop
test
test
dec
inc
jne
xchg
iret
adc
dec
js
mov
cmp
enter
sub
stos
popf
inc
cltd
stc
mov
mov
inc
repnz
xchg
lods
shll
orb
into
leave
pop
cs
jns
mov
sub
adc
cmp
cld
mov
push
pop
cmp
int
cwtl
inc
cmp
dec
dec
mov
pop
fistps
sub
jns
sar
int3
scas
mov
lahf
mov
mov
push
mov
lea
ss
sub
lcall
pop
repz
xor
sbb
aad
xor
iret
and
repz
jns
dec
jmp
mov
mov
iret
ja
ljmp
cwtl
dec
dec
cmp
mov
xor
mov
rolb
lods
dec
xchg
hlt
xchg
adc
xchg
jmp
pop
or
int
xor
fdivl
push
call
push
mov
mov
mov
push
mov
mov
inc
hlt
inc
outsb
dec
fsubrs
rcrl
and
adc
push
adc
add
cmc
test
inc
mov
imul
inc
ss
cs
js
ret
loop
stos
pop
ret
mov
add
xor
popa
push
aaa
imul
and
test
jno
movsl
jp
sbb
sar
sub
mov
ja
dec
iret
popa
xor
sbb
cli
mov
add
clc
jl,pn
aaa
ficoms
clc
lods
dec
cs
clc
add
push
test
icebp
clc
mov
in
clc
in
jl
imul
int
int3
sarl
sbbb
inc
mov
call
xor
xchg
or
cmp
imul
aas
pop
or
shrb
das
xchg
rorl
aad
insb
int3
lods
xor
jae
sbb
cmp
cmp
loope
xchg
repz
add
inc
cli
xchg
push
inc
fsubrl
mov
xchg
and
cmp
das
vpaddq
sub
mov
mov
out
dec
mov
cltd
ljmp
insb
push
mov
mov
lcall
scas
in
pop
jae
insl
lods
push
movsl
addl
fcoml
call
push
lds
mulps
movsb
mov
loope
int
scas
push
mov
pop
sub
pop
hlt
lods
jle
popf
les
inc
into
movl
xchg
mov
out
movsl
aas
or
jns
aam
imul
jne
mov
and
dec
andb
pop
lcall
sub
mov
iret
lods
dec
aam
cltd
cs
imul
push
rcrb
mov
lods
icebp
lock
dec
in
outsl
sub
jno
mov
out
and
pop
xchg
pop
cmc
push
int
xchg
adc
mov
mov
rcll
cmp
fnstsw
adc
mov
jno
repz
dec
jecxz
sbb
loop
mov
nop
rcrb
push
fucomi
push
cmpl
js
mov
test
pmaxub
je
ret
mov
call
xor
in
rcrl
and
popf
mov
pop
les
movsl
mov
fidivrl
les
inc
pop
push
pop
jp
pop
jbe
rcr
adc
stc
icebp
cmp
xchg
push
stc
cmp
pusha
sbb
mov
push
pop
outsl
mov
jbe
lcall
test
push
mov
mov
or
pop
xchg
shlb
out
add
ret
stc
sbb
pop
sarl
sub
stc
mov
arpl
or
cltd
insl
xor
bound
inc
mov
mov
lock
aaa
xchg
rorl
mov
roll
xchg
xchg
or
mov
rolb
inc
pop
cmp
dec
mov
ret
pushf
jle
movsb
fisttpl
sahf
add
lds
jo
mov
pop
cmp
outsb
dec
jge
xchg
sbb
mov
in
dec
inc
imul
push
pop
xchg
mov
push
test
pop
or
mov
mov
cwtl
jmp
popa
pop
jmp
jg
popf
mov
sbb
add
and
daa
jmp
inc
jle
shlb
test
hlt
fldenv
cld
lcall
sbb
outsl
stc
lods
inc
dec
out
mov
repnz
inc
int3
outsl
insb
fdivl
lcall
inc
xor
sbb
xlat
call
mov
xchg
xor
push
stos
adc
test
mov
inc
in
xor
imul
push
shlb
aam
sub
inc
push
leave
jo
jbe
test
ret
inc
ja
stc
les
mov
mov
pop
aam
and
setp
mov
sbb
sub
mov
fnsave
push
push
inc
or
mov
or
pop
int
push
fistpl
mov
pop
cmp
pop
ret
push
out
pushf
idivb
cmp
loopne
mov
pop
aas
or
or
cld
insl
cmp
mov
mov
jbe
mov
and
dec
int
aam
adc
lock
add
xchg
mov
mov
clc
insl
fisubrl
mov
push
add
mov
lods
in
stc
mov
mov
push
into
pop
pop
mov
fiaddl
jmp
dec
cmp
mov
es
sub
xchg
out
lods
fiadds
sbb
push
in
cwtl
cmp
xor
push
sbb
jecxz
mov
jle
cltd
inc
mov
aam
cli
jle
mov
add
lahf
out
fdivrl
cmp
shll
pop
daa
rol
test
sbb
cmp
pop
lods
push
mov
adc
into
ljmp
aad
sub
xor
cwtl
sbb
mov
push
mov
mov
std
xlat
insl
mov
dec
jae
cmp
stos
add
xchg
dec
aas
inc
adc
bound
loop
fmuls
xchg
inc
mov
jno
test
shrb
sbb
into
cmpsl
add
or
lods
jl
or
jp
cmp
inc
inc
mov
xor
pop
xlat
xchg
xchg
xchg
cltd
fsubrl
dec
int
cmp
dec
pushf
xor
dec
push
jbe
ss
or
xchg
lods
fdiv
sub
dec
rol
ret
ljmp
xchg
and
jmp
pop
mov
add
ret
rcll
xchg
enter
sub
data16
test
aaa
xchg
xchg
lcall
sbb
mov
out
mov
pop
addb
pop
testb
mov
sub
add
mov
jecxz
pop
sub
lods
shl
add
jns
mov
sbb
stc
jmp
arpl
cmp
sub
in
adc
imul
cmpsb
mov
sbb
inc
adc
mov
push
cmc
jmp
andb
and
aas
push
jns
push
into
jecxz
inc
xchg
push
fwait
loop
or
nop
dec
fsubl
jnp
aam
cmp
jne
or
in
xchg
subb
jle
jo
hlt
push
xor
pop
popf
jnp
adc
sti
icebp
dec
cmp
fdivp
sbb
mov
push
cmp
outsl
mov
jae
cmp
lods
or
sbb
popf
shll
mov
adc
jbe
mov
inc
lret
rorl
daa
inc
sti
adc
adc
aad
xor
inc
adc
inc
stos
test
mov
pop
or
insb
cmpl
nop
ss
dec
sahf
cld
sub
jle
add
mov
dec
mov
sub
xchg
shlb
insl
fdivl
dec
stc
repnz
outsb
popa
mov
jmp
aam
mov
push
jne
mov
sti
sub
mov
inc
movsl
insl
clc
pusha
push
sub
in
aas
insb
inc
pop
push
mov
stos
sub
fwait
stc
inc
jo
push
cs
inc
fwait
ja
mov
jo
enter
lods
jle
jne
frstor
sbb
repz
mov
fnstenv
test
mov
leave
je
adc
shrl
shlw
or
insl
iret
addr16
lahf
push
inc
or
int
cltd
add
dec
pop
sub
xchg
fdivl
scas
xchg
fdivl
jge
mov
adc
das
mov
adc
rorb
xor
mov
mov
mov
xchg
adc
lcall
imul
ja
lods
cmp
stc
xchg
inc
out
cmp
sti
cmp
and
ljmp
xchg
es
pop
test
sub
mov
pop
sbb
ljmp
pop
repz
push
pop
sbb
jns
idiv
inc
out
sbb
xchg
inc
insl
sti
pop
or
push
sahf
jmp
jl
push
lods
roll
jl
popa
mov
mov
jl
das
mov
push
test
rclb
jl
cvtpi2ps
movsb
loope
push
pop
ret
in
jp
mov
out
repz
xchg
pop
ret
mov
mov
adc
push
cmp
mov
mov
mov
pop
mov
or
jbe
inc
and
scas
ret
cltd
movsb
sub
push
das
leave
stos
pop
outsb
mov
jmp
iret
mov
or
les
in
ret
adc
enter
sbb
pop
push
sub
enter
sub
mov
mov
mov
push
xor
lds
cmp
mov
jbe
xchg
inc
inc
mov
add
inc
cmp
pmulhuw
xchg
inc
fcompl
mov
xor
add
add
xchg
xchg
lret
hlt
in
mov
shrb
pusha
int
icebp
fmull
inc
pop
shlb
shufps
iret
inc
jbe
stos
push
imulb
dec
dec
int
pop
lds
xor
pop
mov
adcb
ss
push
cmpsl
shr
das
insl
popa
or
mov
xor
dec
out
fadds
jp
cld
xchg
xchg
adc
jnp
or
filds
jge
mov
and
pushf
mov
pop
lods
adc
mov
or
nop
push
mov
out
aas
rcrb
sub
shlb
mov
ret
add
mov
jmp
insl
push
cmp
xchg
dec
cmp
jmp
hlt
leave
mov
jg
insl
stos
xor
xor
mov
in
xor
dec
xor
mov
in
mov
pop
push
fs
sub
out
icebp
test
pop
or
add
pop
loopne
pop
outsl
pop
sbb
or
mov
pop
xchg
push
sahf
test
pusha
mov
mov
xor
sbb
dec
or
mov
push
in
push
inc
pop
pop
bound
mov
pop
cmp
push
jae
mov
xchg
dec
push
insl
int
mov
es
cmp
int
pop
dec
sub
roll
icebp
xor
push
lret
push
adc
lahf
popf
popf
aad
pop
and
push
add
cmpsl
and
mov
lret
popf
mov
jg
xor
inc
xchg
paddusb
dec
aam
mov
repz
jae
cmc
repnz
jp
ss
js
lds
cmp
sbb
mov
pusha
sub
aam
xor
and
jmp
cld
cs
ret
jnp
xchg
sbb
mov
mov
test
icebp
cld
mov
add
xlat
jns
xchg
ret
fstp
adc
mov
xchg
ret
iret
mov
sbb
fwait
bnd
dec
out
daa
js
dec
cmp
mov
enter
mov
xor
xchg
mov
mov
sub
ds
fcmovb
loope
fcmovb
loope
aas
outsl
jmp
cmpsl
cmpsl
shlb
fs
andb
push
aas
mov
jmp
mov
mov
lret
loop
fdivl
dec
fsubs
dec
dec
inc
movsl
adc
aas
xor
xor
adc
and
dec
xor
andb
pop
fdivrl
stos
mov
repnz
leave
or
in
inc
pushl
in
mov
mov
arpl
aaa
mov
cs
push
scas
push
and
cwtl
int3
mov
inc
push
sub
out
in
or
pushf
inc
jmp
out
push
lahf
insb
rcl
call
xchg
lret
push
ljmp
mov
je
mov
test
jecxz
popa
push
push
and
mov
mov
das
pop
jae
cwtl
pop
mov
fnstenv
push
jae,pt
fiaddl
sar
mov
shrb
jbe
stos
push
pop
aad
push
xchg
outsb
mov
inc
add
jecxz
imul
sub
mov
sbbb
xchg
shl
rolb
cmp
jbe
push
ds
mov
push
jb
jecxz
pop
adc
ret
mov
push
ss
mov
outsb
sbb
xor
and
inc
xchg
push
out
insb
hlt
pop
mov
iret
push
fsubrl
aaa
mov
aas
cmp
cmp
aas
cs
mov
clc
orb
xchg
mov
dec
test
mov
xchg
ljmp
dec
cmpb
in
sub
ret
mov
xchg
sub
cli
pop
adc
dec
sbb
inc
fnsave
stos
sahf
cwtl
push
push
je
xor
mov
sbb
aam
push
mov
fs
jns
adc
test
insb
sbb
jns
faddl
sahf
dec
xor
push
cs
cltd
aaa
jp
xchg
mov
mov
lds
lock
sahf
jmp
and
rcll
push
jbe
xchg
and
cmpsl
ds
in
cmp
mov
or
out
iret
stos
mov
pop
frstor
mov
adc
inc
ret
inc
lds
shll
loop
les
bound
xchg
mov
xor
or
fstpt
inc
lret
push
hlt
xchg
mov
data16
sbb
inc
cmp
orb
push
pop
xchg
mov
arpl
push
xchg
xor
data16
or
mov
add
xchg
clc
cltd
or
insb
mov
or
and
sbb
addr16
dec
mov
pop
jge
arpl
ret
data16
shll
add
mov
pop
inc
mov
lock
lods
jge
lcall
test
dec
xor
mov
push
push
cwtl
push
mov
jbe
mov
into
dec
inc
mov
xchg
clc
fnsave
fimuls
into
out
adc
stc
cmc
ds
out
outsb
mov
or
ret
les
cmp
psllq
movsl
sahf
add
or
les
lods
xlat
sahf
xor
sub
rcll
aad
aas
lods
popf
popa
cwtl
xlat
xchg
pop
jbe
push
pushf
sahf
add
jle
xor
lods
lcall
nop
mov
dec
adc
jno,pt
fstpl
fnop
xlat
mov
ret
int3
popa
in
jmp
lods
mov
fcompl
imul
xchg
imul
push
sbb
loopne
dec
inc
cmc
cmp
idivl
lret
pop
repnz
jne
int
jle
sbb
xchg
ds
pop
mov
cs
and
adc
sub
mov
dec
pop
pop
cs
jge
add
fistl
adc
enter
cltd
xlat
jp
jae
sub
sahf
push
jbe
or
stc
and
jl
jp
adc
xor
ds
insl
in
cwtl
imul
mov
xchg
rcrl
mov
lea
int
inc
dec
out
pop
jp
xlat
xor
mov
and
mov
dec
push
fwait
push
cltd
xor
popa
or
jge
aam
ljmp
fcompl
mov
movsb
xchg
lea
je
scas
cmpsb
clc
push
stc
cmp
repz
cmp
adc
cwtd
sahf
push
jbe
aad
lods
dec
lds
inc
aam
pop
and
stc
mov
xchg
jmp
fcmovnbe
data16
pop
pop
mov
psubb
push
lods
sub
js
xchg
aad
std
lret
xor
push
jge
sahf
jp
hlt
and
mov
data16
daa
inc
popf
aam
stos
lods
dec
or
mov
jge
xchg
sbbb
fidivl
enter
fimuls
cmp
jae
cmp
pop
sahf
je
mov
gs
or
pop
repz
fistl
inc
call
enter
lret
roll
fld
xor
mov
insl
sbb
movsl
sub
push
and
lods
jmp
aad
pop
shl
sbb
push
push
js
lock
pop
repz
pop
xlat
or
leave
inc
ret
jns
cs
xor
xor
loope
jge
dec
cmp
iret
cmpsb
push
aam
cmp
ds
xchg
cmp
mov
lret
inc
stc
imul
jle
roll
cmp
adc
mov
push
fdivl
jp
push
mov
mov
test
push
or
mov
fisttpll
popa
cli
ja
fadds
xchg
jp
mov
std
xor
out
popa
cmp
movsl
cmp
ja
gs
cmp
cmp
fstp
and
push
repz
lds
push
or
mov
pop
js
jns
cmc
insl
lret
add
lret
cli
mov
fdivl
pop
test
mov
cs
pop
in
or
push
mov
loope
gs
xchg
pop
pop
aaa
lahf
push
movsl
or
imul
ss
lret
push
rorb
fstl
xor
mov
bnd
and
push
jns
jle
cmp
leave
mov
fwait
xchg
int
subb
lret
cwtl
adc
xchg
fcmovne
xchg
fucomi
aad
jge
ja
das
into
jecxz
pminub
lahf
lea
lds
rorb
aaa
test
sahf
lea
aaa
pop
je
xor
cltd
stos
mov
pop
lods
xchg
and
mov
pop
pop
stos
fcoml
ret
jnp
jp
mov
push
xchg
fstpt
aad
lret
jne
jp
xchg
pop
mov
fldt
fdivs
xor
sbb
cltd
std
push
dec
push
lods
push
adc
pop
jns
jle
sbb
stos
sbb
out
aad
jmp
fs
push
mov
or
test
push
pop
ljmp
je
out
push
repnz
adc
jge
jae
dec
ja
push
dec
xor
inc
popa
jb
xchg
xor
mov
pop
stc
xchg
test
pop
sub
mov
push
adc
mulb
dec
in
lret
and
pusha
or
mov
int
popa
add
xchg
lea
mov
mov
dec
int3
mov
fistl
jbe
rcl
daa
cmp
rolb
test
and
jg
cli
iret
cmp
lods
push
stos
mov
sbb
inc
int3
out
adc
sub
rcl
pushf
lods
cltd
pop
in
fstp
cli
sahf
mov
mov
int
ret
pop
mov
fdiv
aam
mov
pop
insb
movsl
pop
fisttpll
inc
lret
int
lahf
out
std
jge
fcmove
fstpl
popf
cmpsl
aad
scas
cmpsb
outsl
xchg
rolb
inc
ja
xor
or
fst
xchg
int3
cmpsb
leave
jns
pop
fidivl
pushf
adc
lods
inc
arpl
xchg
pushf
pop
dec
push
enter
stos
mov
cmp
and
xor
lcall
pop
inc
fisubrl
push
out
push
popf
lds
fxam
aam
js
xchg
cmp
enter
inc
outsl
jl
adc
sbb
fstpl
dec
mov
add
aaa
push
xchg
lods
cmc
push
xchg
add
jnp
adc
pop
lret
add
dec
fsubrl
adc
pop
sub
mov
fimull
arpl
xchg
xchg
and
js
jecxz
cmp
mov
data16
jno
mov
fldt
cltd
lods
inc
test
jecxz
jle
push
push
fistl
jl
nop
pop
scas
inc
lea
mov
lret
arpl
and
mov
mov
sub
jns
mov
lods
mov
les
jle
pop
mov
loop
push
sub
mov
xor
in
dec
push
pop
adc
pop
scas
es
sub
xchg
adc
popa
jo
or
int3
mov
lcall
push
push
out
jb
mov
dec
or
xchg
jp
flds
daa
data16
fldt
push
push
push
pop
dec
stos
js
int
sarl
movsl
pop
mov
repz
xor
int
mov
fwait
push
scas
mov
push
jnp
push
add
sbb
aad
sbb
dec
lret
cltd
shrl
xlat
jp
test
pop
adc
jl
lds
jl
cwtl
shrb
fwait
mov
push
test
jp
xchg
sub
frstor
cld
popa
cmp
mov
xchg
js
mov
lods
cmp
cmpsl
pop
jp
movsl
push
pop
js
js
int3
sbb
fcoml
mov
lods
push
cld
push
dec
imul
gs
fcmove
clc
lcall
push
fnsave
or
lret
pop
cmp
mov
cmp
push
stc
cmp
iret
mov
pop
add
sti
mov
fisubrl
lret
mov
jne
leave
insb
inc
outsl
pushf
movsb
cwtl
fisttpll
loop
sbb
sbb
insl
push
lcall
faddl
xchg
cmp
iret
mov
or
jge
outsb
inc
aam
xchg
pop
cld
push
fsubrs
cmp
call
xor
push
pop
add
outsb
sti
insl
loopne
push
mov
mov
pop
incb
fnstcw
ljmp
inc
adc
out
xchg
daa
ret
pop
aad
gs
mov
cmp
popa
pushf
fs
imul
lret
leave
mov
or
push
jl
lea
fimull
sbb
jnp
std
jp
adc
jle
fsubrl
movsl
std
and
pop
push
mov
ss
mov
cmp
add
xor
cmpsl
pop
xchg
lret
sbb
jl
mov
dec
ljmp
mov
pop
xchg
cltd
into
mov
fsubr
cmp
aad
je
fldt
xor
lret
mov
std
sbb
aaa
mov
aad
popa
jge
insl
cmc
jmp
test
adc
popa
orb
push
adc
cli
xlat
sub
pop
fcmovnb
clc
shrb
and
ret
jl
or
fwait
insb
dec
dec
mov
je
ror
cmp
and
push
shlb
xor
mov
push
jnp
push
cmpsl
aad
mov
ss
jle
jns
fiaddl
data16
mov
scas
sbb
jle
pop
mov
push
fwait
mov
xlat
jbe
and
cld
das
dec
into
inc
sbb
mov
xor
mov
ret
and
outsb
fldenv
lret
sub
sbb
sub
in
xchg
cwtl
push
pop
add
mov
lock
in
and
in
xorl
outsb
mov
xor
pushf
mov
mov
dec
inc
xor
pop
xor
call
sarl
loope
shl
outsb
js
mov
arpl
and
inc
insl
sbb
repz
fstp
pushf
mov
call
out
ss
ja
push
repz
cmpl
scas
insb
ret
data16
adc
incl
aas
cmpsb
leave
mov
scas
push
insl
mov
mov
sub
andb
jne
lods
jle
es
fadds
push
push
lcall
push
jle
call
fisubrl
jle
mov
mov
and
mov
push
pop
cwtl
jae,pt
adc
lds
fdivrs
iret
pop
push
mov
adc
push
push
sti
dec
fistpl
rorl
sub
mov
cwtl
loop
sahf
std
xchg
je
popa
push
fistpl
fdivrl
xchg
push
pop
dec
popa
pushf
pop
ds
ror
pop
mov
outsb
inc
adc
push
fnstsw
scas
or
dec
popa
dec
pop
ds
pop
jg
and
fnsave
nop
sahf
loope
fcoms
sbb
ljmp
adc
repnz
pop
xchg
in
popa
jle
xchg
shlb
arpl
jns
pop
xor
out
or
inc
jbe
sbb
jecxz
push
mov
fisttpl
mov
sub
insb
jbe
push
sbb
ret
cmp
into
stos
hlt
add
bound
imull
scas
popa
mov
fstpt
cmp
mov
outsb
xorb
sbb
jnp
ss
jae
xchg
push
into
mov
mov
mov
sarl
repz
insl
fdivs
mov
jg
jne
lods
ror
imul
fcmovne
test
sti
aad
scas
scas
pushf
jns
fcomps
jnp
je
sahf
popa
popf
ja
das
push
lahf
insb
pop
mov
scas
ds
out
dec
jecxz
cmc
aas
into
cmp
std
int
lea
rolb
pop
dec
xchg
pop
clc
cwtl
cmp
adc
pop
mov
push
aad
mov
lds
dec
out
sti
cmp
popa
jns
ss
pushf
xorl
jbe
ja
cmpsb
out
das
fldt
jle
jge
lret
ja
mov
lahf
cltd
jg
aas
fstps
popf
xchg
jns
cmp
rorb
xlat
sub
inc
stos
mov
les
sbb
pop
repz
ljmp
pop
mov
mov
jbe
cmp
push
in
lods
sbb
sub
enter
mov
jle
adc
xchg
cmp
cs
fwait
mov
sub
shrb
pop
bound
insb
xchg
popf
jae
pushf
sarl
js
lea
mov
jo
push
xchg
mov
push
les
aaa
xor
test
pop
pop
xor
cmp
jp
xchg
xchg
filds
movsl
jp
pop
fdivrs
or
test
pop
shrb
push
scas
leave
xor
mull
clc
sub
aad
imul
popf
sbb
repnz
mov
pop
incb
test
fidivl
cmpsb
scas
shrb
aam
lcall
mov
push
xor
int
mov
sub
cmp
xchg
rcl
imul
lcall
mov
mov
sbb
and
lds
fdivrl
pop
cmp
xchg
cld
imul
insl
sbb
or
xlat
aad
mov
mov
or
movsl
pop
jle
pusha
lods
stc
cltd
mov
int3
mov
push
daa
and
sub
and
call
aas
pop
call
bound
sbb
cwtl
frstor
mov
adc
aaa
mov
pop
jne
out
push
clc
mov
fidivrl
pushf
mov
fwait
stc
sbb
add
aad
enter
sub
xchg
mov
out
jle
sti
mov
inc
adc
mov
push
stc
roll
dec
cltd
lret
cltd
cwtl
mov
jb
ds
pop
scas
std
pop
push
in
pop
cmc
mov
mov
xchg
xchg
mov
dec
arpl
mov
cmpsb
dec
pop
xor
aam
popa
rcr
mov
jle
mov
pop
xchg
push
push
pop
sub
out
stc
int
in
cmp
pop
rcll
fcom
fucomi
int
int3
add
xchg
mov
cmp
fcmovb
adc
dec
cs
mov
ret
sub
scas
sbb
or
rcrb
push
enter
ror
sub
adc
jmp
rcll
cmp
push
sbb
lret
je
fmulp
in
ret
scas
inc
mov
repz
jne
cs
pop
pop
pop
xchg
movsb
test
dec
mov
insb
popf
scas
inc
jp
data16
pop
sahf
dec
popa
pop
js
movsl
sti
mov
aam
cmpsb
xor
sbb
shr
xlat
inc
inc
sub
jno
aam
add
dec
dec
shl
and
fldl
lcall
addr16
int3
ljmp
mov
rcl
jecxz
and
mov
js
imul
push
out
fsubrs
pop
and
pop
inc
mov
or
xchg
mov
mov
in
pushf
in
pushf
lret
mov
in
and
push
je
or
dec
jl
mov
mov
jno
sub
jecxz
js
lret
mov
ja
xor
jge
mov
mov
push
mov
call
popf
xor
push
pushf
int
push
mov
xchg
lods
dec
inc
cwtl
cld
cmpsb
ret
bswap
pop
std
fidivl
repnz
push
adcb
fiaddl
jge
pushf
aad
aas
pop
loop
cld
sti
sub
xchg
or
add
xor
pop
mov
out
sub
cli
fwait
pop
into
mov
mov
pop
adc
and
xor
incl
push
push
es
gs
lods
mov
cmp
jne
sub
nop
mov
repz
cltd
jb
add
xchg
pop
ja
dec
fldt
int3
mov
popf
jns
or
jno
cmc
iret
sub
jno
mov
jnp
mov
adc
leave
ljmp
scas
xor
xchg
out
leave
int3
ja
das
sahf
pop
icebp
sti
jo
fistpll
push
lds
xchg
int3
mov
test
repnz
or
push
sub
es
jno
mov
pop
lods
mov
xor
pop
xor
add
xchg
xchg
aaa
mov
pop
or
push
push
dec
mov
jge
mov
or
jg
jo
rolb
jns
imulb
sub
jle
cmpsb
mov
sbb
pop
ds
lods
cmpb
repz
cmp
nop
std
jae
loop
dec
test
jns
outsb
pop
jg
nop
fistpl
int3
mov
mov
sbb
aam
mov
sbb
inc
cmp
pop
sahf
nop
fwait
lcall
push
enter
ja
mov
out
ds
int
ja,pt
jae
mov
into
inc
jle
stos
into
notl
jl
fsts
mov
inc
dec
sbb
mov
fistpl
out
fcmovne
out
outsb
dec
jnp
and
add
lods
pop
pop
xor
les
xchg
pop
pop
mov
pop
repnz
or
adc
push
add
fcomp
pop
js
fwait
jge
iret
iret
loop
mov
jbe
cmpxchg
xchg
push
jbe
je
dec
in
mov
popf
push
adc
ja
adc
aaa
sub
dec
inc
push
arpl
je
inc
aas
sbb
dec
out
les
outsb
or
cs
push
xchg
test
fnstcw
sbb
outsb
cltd
inc
pop
gs
inc
in
cmp
push
lods
xchg
fistpll
cltd
les
adc
mov
inc
push
stc
mov
or
test
cld
cs
insl
xor
shll
jae
xchg
cmpsb
dec
shrb
or
inc
insb
int
ja
call
repz
xchg
xor
mov
insl
loopne
xor
in
inc
lahf
push
rcrl
scas
aaa
mov
cmp
in
sub
and
add
in
inc
adc
pop
inc
int3
ds
xor
or
in
iret
inc
sarl
subb
mov
lahf
mov
xchg
sbb
mov
mov
cltd
int
xor
push
and
shlb
adc
rorl
push
pop
fdivl
in
fbld
movsl
lods
push
shlb
fmul
xor
mov
cs
repz
cli
sub
insb
fstpt
push
inc
or
out
ffree
sbb
insb
lock
pop
fnstcw
dec
pop
dec
pop
jbe
inc
and
push
jge
xor
popf
imul
xor
pop
popf
rclb
lret
cmp
cwtl
adc
xlat
and
jae
sbb
cmp
lret
xor
lahf
insl
xor
fisubl
data16
inc
push
jle
inc
jg
lcall
push
sub
fdivrl
push
clc
add
mov
test
jge
xchg
mov
sbb
cmpsb
or
lods
shl
push
test
sub
inc
fcompl
aaa
cmp
sub
mov
fldl
idivb
dec
movsl
repz
pop
inc
pop
mov
int3
sbb
call
mov
aaa
xor
add
imul
ja
in
sub
and
das
cmp
imul
mov
out
cmp
push
push
data16
je
sbb
popf
test
push
mov
xor
xchg
in
ss
xor
adc
pop
sbb
cmp
sbb
xchg
push
mov
popf
add
pop
sbb
dec
pop
das
pop
mov
inc
pop
sbb
andb
test
pushf
jns
lcall
aam
push
push
aad
icebp
lods
sti
shlb
idivl
cwtl
pop
scas
mov
cltd
aam
scas
inc
mov
jp
jecxz
mov
mov
hlt
fmull
inc
jo
and
insl
mov
ffree
pushf
pop
sarb
pushw
push
add
lret
negl
das
push
add
push
mov
bound
adcl
jnp
dec
cwtl
popa
mov
mov
cmp
mov
inc
jns
fistps
fs
stos
xchg
sub
mov
nop
jb
xchg
out
push
lock
xchg
adc
xchg
scas
rorb
jne
test
sti
int
mov
pusha
pop
inc
mov
orl
rolb
in
sub
pushf
daa
jb
cmp
cld
xchg
xchg
dec
pusha
aad
push
arpl
popf
xchg
cmp
in
cld
xor
jl
or
mov
or
xchg
repnz
cltd
add
cld
rclb
fsubl
repz
pop
orb
andl
std
sub
push
scas
aaa
repz
add
push
shrl
fnstsw
dec
rcl
and
mov
mov
rcl
pop
pop
push
jo
sbb
jp
adc
sub
cmp
outsl
sbb
push
jmp
jp
pop
mov
fidivs
pop
enter
pop
pop
push
imul
data16
jb
and
iret
dec
iret
cmp
cli
adc
xchg
mov
mov
cmp
testb
aaa
in
dec
xchg
mov
ds
outsb
or
lcall
mov
rcrl
adc
or
aad
adc
jmp
decl
xchg
stc
sahf
repz
inc
push
popf
sbb
sahf
lods
mov
aaa
cmp
ss
mov
mov
popa
xlat
lods
lock
insl
push
mov
nop
out
push
mov
nop
cs
repz
scas
mov
xchg
inc
iret
dec
mov
xlat
ficoml
xor
iret
push
fisubrl
or
enter
dec
sub
pop
or
pop
fmuls
jg
punpckhbw
pop
pop
dec
cmp
jns
jge
sbb
push
rcl
mov
pop
mov
pop
cmp
cmp
fldenv
and
jge
add
push
sub
inc
xchg
iret
idiv
das
fdivrs
mov
rclb
ja
fdivl
out
fxch
dec
into
ffreep
pop
pusha
lea
ja
or
pop
cmp
xor
popf
mov
not
rcrl
bound
add
out
adc
jnp
sbb
data16
outsb
negl
pop
push
aad
sub
xchg
mov
lret
pop
pop
dec
xchg
sbb
push
aad
sub
ret
std
faddp
imul
mov
push
pusha
ss
rorl
nop
daa
cmp
sahf
pop
loopne
aas
scas
mov
cmpsl
cld
sub
sub
pusha
sub
push
and
mov
mov
jns
mov
dec
divb
and
adc
xchg
xchg
and
push
push
push
add
xchg
in
lahf
inc
jge
pushl
cs
mov
mov
dec
xlat
adc
popa
fcmovnu
btr
repz
ja
or
mov
scas
sub
mov
xlat
lcall
adc
popf
inc
mov
lahf
pop
and
pusha
jge
rcrl
rorl
sbb
into
test
lcall
jl
cmc
fcompl
dec
and
add
or
into
outsb
out
jge
push
xor
inc
dec
mov
fisubl
xor
mov
mov
mov
pop
xchg
cmp
jo
cmp
jo
rcll
pop
js
stos
xlat
mov
mov
jecxz
push
and
mov
fimull
iret
mov
call
jge
mov
lods
jo
jge
nop
sbb
cwtl
sahf
cmp
gs
pop
out
push
fdivl
pop
pop
inc
fs
lea
cld
xchg
mov
jge
sbb
xchg
icebp
lds
xor
leave
dec
ja
aad
xlat
xlat
cmpsb
repnz
sbb
pop
and
sahf
dec
cmp
adc
sbb
stc
outsb
push
cmpsb
insb
lock
cmp
leave
fldl
adc
jae
fcompl
test
loopne
sbbb
xchg
sub
aad
or
in
pop
jbe
mov
je
dec
mov
fldl
push
push
pop
pop
or
outsl
lds
enter
arpl
repz
cmpsb
lret
pop
push
mov
sti
mov
scas
jne
and
ret
inc
cmp
mov
mov
sbb
mov
popf
xor
pop
inc
and
xchg
das
shlb
into
mov
jp
xchg
test
add
mov
mov
xchg
cs
les
pop
push
jbe
ficompl
in
fsub
mov
xor
mov
stc
mov
dec
in
dec
pop
shlb
mov
xor
push
inc
shlb
pop
outsb
cmpb
inc
fmull
es
es
inc
pop
dec
inc
xor
aaa
fld
mov
push
dec
cmp
scas
out
mov
fwait
mov
imul
dec
outsb
cmp
xchg
cmpsl
inc
mov
insl
jge
shrb
in
jg
xchg
xchg
mov
dec
add
jl
lret
cwtl
cmp
aam
xchg
push
rcrl
add
loope
dec
sub
xchg
cld
mov
dec
test
sarl
stos
push
push
cld
pop
dec
cmp
popf
popa
cld
jl
out
out
push
lods
daa
rcrb
je
fsubs
rcr
xor
andl
sahf
xor
out
out
pushf
cmpl
pop
shrl
arpl
inc
inc
push
out
cli
xchg
enter
dec
push
adc
push
dec
or
xchg
bnd
mov
push
cmpsl
push
dec
push
pop
or
cmp
xor
test
xor
js
repnz
aad
xlat
aad
sahf
cld
sub
aad
out
xchg
rcrl
ret
std
sbb
and
movsl
mov
stos
iret
lahf
dec
push
cli
mov
mov
jne
add
insl
push
pushf
add
xchg
fwait
and
jmp
inc
fisubrs
les
xlat
iret
inc
fcmove
sbb
les
pop
mov
push
out
test
dec
shl
dec
add
mov
lods
js
je
dec
sbb
xorl
sbbb
addl
dec
icebp
in
aaa
pop
mov
jnp,pt
and
sbb
mov
test
pop
sub
lahf
out
ret
push
lods
push
xor
xlat
pop
push
or
std
mov
xlat
aam
jne
stos
dec
mov
test
sahf
rorl
std
xor
sbb
test
mov
mov
sbb
int3
lods
ret
mov
xor
jmp
int3
fsub
bound
pushf
adc
mov
xchg
push
cmp
xchg
or
fstpl
cmp
mov
push
dec
bound
inc
xor
jne
mov
mov
pop
jecxz
xor
fldcw
mov
fcoml
jne
mov
xchg
mov
shll
in
mov
cs
arpl
imul
test
cltd
stos
enter
test
cwtl
lret
mov
ds
adc
jnp
sarb
inc
fcompl
adcl
adc
add
sub
lret
cmc
out
pop
pushf
lcall
sbb
mov
aad
mov
imul
sub
or
push
pop
aaa
inc
jbe
sub
adc
lods
pop
fadd
mov
pusha
fdivrs
sti
dec
sbbl
jnp
pushf
xchg
dec
xor
adc
pop
jne
lret
cmc
xchg
pop
inc
jns
and
or
adc
lret
sti
mov
addr16
xchg
popa
pop
inc
mov
lret
push
test
lret
fdivr
clc
lret
les
inc
dec
lods
sbb
fs
lahf
inc
movsl
sahf
cmp
lret
add
cmp
test
xchg
ret
repnz
mov
stos
xchg
xorb
adc
repz
lret
sbb
lods
pushf
test
jae
sbb
or
xchg
fmulp
js
outsb
jg
cld
pop
dec
cmpsb
adc
xchg
mov
xchg
sahf
fdivl
out
mov
insb
rcrl
mov
stc
cs
mov
xchg
das
mov
mov
mov
jns
outsl
mov
imul
lcall
in
flds
cmp
jmp
inc
xor
pop
fstpl
mov
sub
shl
pop
push
inc
repnz
xor
nop
daa
int3
mov
aaa
push
aam
xor
mov
sbb
stos
cmp
stc
negl
xchg
lods
addr16
pop
inc
call
sbb
ja
les
pop
sbb
sti
xchg
lods
dec
mov
dec
pusha
push
add
adcl
mov
sub
mov
fimuls
mov
mov
jmp
mov
pop
pop
xchg
jl
xchg
sahf
cltd
adc
xor
test
fwait
out
cmp
adc
mov
and
dec
adc
fmuls
push
pop
cli
in
pop
sub
je,pt
inc
stc
adc
outsl
jne
pop
fwait
jne
xor
rcr
inc
push
mov
imul
fcomps
nop
pop
lret
mov
cli
jg
mov
pop
mov
adc
popf
pushf
xor
out
ds
mov
dec
rcr
insl
push
cmp
std
mov
jle
fcmovnb
pop
data16
in
cmp
sahf
mov
ds
fnstsw
jge
pcmpeqw
mov
and
pushf
icebp
push
mov
dec
mov
mov
flds
popf
aam
std
mov
push
cmp
faddl
test
jl
pop
pop
lods
nop
or
mov
popa
pop
in
mov
bswap
cwtl
std
fldenv
mov
fmull
mov
cmp
les
iret
sahf
push
or
fcmove
into
jo
mov
xchg
je
mov
sbb
or
fucomi
sub
out
mulb
jge
stc
mov
dec
jecxz
nop
xchg
lods
mov
or
lods
inc
pop
mov
int
push
cs
popa
movzbl
xchg
dec
fisubs
loope
xchg
hlt
pop
into
in
dec
mov
dec
jo
cmp
jne
and
out
mov
mov
sti
pop
int
lret
mov
inc
cmp
xor
push
lret
sbb
mov
push
mov
daa
sahf
out
iret
jge
fwait
in
pop
shll
sbb
jb
xor
ss
pop
lods
rcll
pop
push
mov
adc
inc
jmp
push
popf
jmp
dec
fistpll
shlb
sub
sbb
mov
in
jb
vunpcklps
sub
xlat
mov
adc
push
daa
js
bound
lcall
sub
cmc
leave
loop
jmp
push
repz
add
shr
xor
inc
adc
fdivl
jb
add
repnz
jmp
or
stos
pop
je
fcoms
ficoml
mov
mov
xor
adc
xchg
mov
jge
sti
mov
push
mov
xchg
push
push
jne
lret
insl
scas
loope
int3
push
mov
icebp
or
in
jbe
sub
mov
inc
inc
lods
ds
or
jnp
fwait
lcall
xorb
sbb
scas
xchg
daa
mov
mov
push
ficompl
jmp
lret
push
into
lds
sahf
iret
in
stc
sahf
int3
je
mov
mov
fsubrl
sbb
and
fdivl
fdivrl
aaa
lcall
lds
mov
hlt
sub
lds
cltd
or
lret
lret
aad
stc
push
push
nop
je
add
mov
stc
xchg
push
in
dec
jecxz
sahf
adc
and
mov
pushf
jns
mov
cmpsb
adc
lods
inc
mov
mov
test
push
dec
outsl
fiadds
adc
cmpsb
push
ffree
imul
fisubl
pop
xchg
fisttpl
cmpsl
cmc
fnstsw
rcrl
mov
jmp
rcrb
xlat
in
push
out
movsl
xchg
jns
loope
jae
loope
int
stc
push
lods
add
xor
repz
sbb
inc
mov
pushf
sbbb
push
sub
lahf
mov
enter
sub
pop
mov
sbb
pop
cld
in
push
inc
sub
adc
dec
add
movsl
jae
cld
add
xchg
in
jge
repz
pop
jbe
dec
mov
xchg
sahf
nop
jge
push
xlat
lea
push
jle
aaa
adc
push
subb
jbe
or
mov
lods
mov
hlt
mov
mov
cmc
push
out
sub
popa
push
fldenv
lods
mov
push
mov
cs
cwtl
lods
insl
xor
xor
jmp
cmpsb
cltd
mov
mov
enter
push
pop
sbb
int
adc
int3
movl
repnz
inc
mov
pop
roll
aad
in
mov
scas
cmp
pop
xor
nop
sti
cmp
aas
dec
leave
pop
stc
inc
jmp
inc
shll
aam
aas
sub
jge
fdivs
shll
pushf
mov
push
sti
sub
rorl
ficompl
mov
jmp
mov
ds
sbb
jno
and
out
dec
fstpl
xchg
jp
aam
jns
mov
loope
push
je
cli
insl
sbb
mov
xchg
inc
or
cmp
push
push
ja
js
iret
lods
push
dec
out
and
scas
xchg
in
ja
pop
fists
enter
sbb
or
push
loope
outsl
shll
rolb
mov
xor
add
xchg
pop
and
sub
ds
rorl
out
push
fimull
adc
flds
pop
pop
test
das
add
iret
add
sbb
jnp
cmc
xor
ret
fcmovb
jp
lea
jl
mov
mov
push
xor
mov
les
dec
aad
sbb
jge
xor
mov
popa
add
xchg
into
sbb
xchg
cmp
xor
sub
push
test
rcrl
cmp
stos
cmp
cmp
adc
sub
movsb
add
xchg
outsb
aam
in
aad
rclb
lods
mov
outsb
lock
stos
or
fnstcw
int3
mov
mov
pop
or
mov
shrl
pop
xor
fisubl
shlb
cmpsl
sar
jl
push
push
push
cltd
ljmp
aaa
cmpps
mov
jbe
pop
jg
packuswb
mov
cs
pushf
fsubrl
sti
cwtl
out
aad
jge
cmpsb
addr16
pop
xchg
jns
cmc
sarl
xchg
test
js
leave
mov
cwtl
fnstsw
cli
dec
lods
or
push
or
jae
ficomps
stc
or
cltd
dec
jbe
addr16
xchg
mov
scas
adc
hlt
lret
clc
in
fstpt
pop
adc
and
or
cmc
xchg
sti
int3
sahf
rorl
imul
scas
fcompl
fidivrs
cmp
jnp
ds
mov
mov
mov
insl
lods
pop
js
push
cmp
push
push
fwait
xlat
cmp
adc
je
cmpsl
daa
popf
xchg
pop
mov
in
aas
cmpsl
adc
mov
cmp
dec
push
adc
sahf
lods
cmp
inc
or
lea
xor
mov
xchg
mov
ljmp
aam
inc
add
push
add
repz
xor
jne
inc
lahf
cmpsb
jge
negb
and
dec
cmc
pop
comiss
jl
imul
addb
xchg
insl
roll
xor
mov
lahf
jo
loop
cmpb
dec
cmp
es
push
push
test
inc
dec
sbb
arpl
xchg
rep
add
sar
push
outsb
xlat
lods
fnsave
lods
jo
popa
pop
sbb
mov
arpl
jmp
scas
cld
push
mov
dec
ret
mov
jae
mov
dec
mov
ja
fcomps
faddl
cwtl
aad
mov
xchg
or
push
int
inc
stc
and
push
pop
fists
cwtl
push
push
fdivr
lods
push
sarl
push
fstps
jnp
or
push
rorl
adc
and
outsl
mov
mov
int
mov
int3
lcall
pop
cmp
shll
sbb
ss
aam
dec
in
mov
add
loope
pop
mov
lock
insl
shrb
adc
push
je
imul
ret
jae
push
faddl
arpl
mov
mov
scas
cmovp
icebp
jne
sbb
dec
fstpl
xor
jae
pop
int
loopne
les
sub
int
inc
stos
aas
hlt
dec
jno
lods
popf
imul
mov
lods
jmp
mov
es
dec
lcall
int
cmp
test
inc
fistps
rorl
push
mov
pop
sar
ffree
fsubrs
rclb
fs
dec
js
stc
xchg
fldcw
push
pop
insl
imul
fstpl
call
lahf
xor
inc
dec
mov
scas
loop
lds
push
roll
xor
cmp
sub
scas
dec
mov
add
xchg
dec
leave
data16
jnp
shl
sahf
push
shll
or
dec
dec
jnp
lret
inc
jae
cwtl
roll
das
mov
clc
and
fnstenv
rolb
xchg
xchg
mov
je
daa
adc
aaa
inc
pop
jg
call
cmp
cmp
mov
inc
ds
cmp
mov
mov
or
js
xchg
int3
jl
mov
ss
inc
out
in
push
les
sahf
sub
iret
jbe
pop
stos
mov
fwait
hlt
inc
pop
std
dec
lock
mov
xor
hlt
mov
inc
fmuls
cwtl
aad
in
lcall
and
imul
cli
cltd
pop
into
cmp
dec
lea
push
pop
fsubl
lock
mov
sub
jp
inc
shl
dec
xchg
fildll
mov
cmpsb
push
test
or
pop
daa
lock
jle
xorb
pop
mov
jns
cmp
pop
cmp
lret
or
adcl
in
push
push
into
jg
cmp
enter
jae
lcall
shll
out
cmc
flds
movsb
dec
adc
mov
jnp
dec
ljmp
push
adc
shrl
xchg
xchg
pop
aam
iret
mov
addl
jae
lds
push
push
pop
dec
xchg
dec
stos
and
mov
xchg
lcall
sarl
pop
pop
cmp
fistpl
iret
sbb
imul
dec
pop
jo
gs
arpl
stos
mov
pop
sti
push
fisubrl
popf
outsb
scas
push
cmpsl
fidivrl
rclb
jge
xchg
and
add
rcrl
adc
ja
in
push
sbbb
adc
out
push
arpl
lods
dec
clc
jp
lods
repz
enter
push
cld
pushf
or
dec
je
mov
cmp
sub
loopne
fnstcw
inc
dec
dec
mov
fstpt
xlat
rcrl
inc
hlt
divb
sbb
sbb
dec
imul
insb
mov
fcomp
push
pop
fcmovb
ret
inc
or
xchg
pop
cwtl
flds
pop
rcll
test
out
mov
mov
popa
inc
mov
or
subb
inc
xchg
mov
repz
push
xchg
pop
push
dec
dec
daa
ss
sbb
sub
cwtl
mov
repz
or
sub
scas
xchg
xchg
inc
repz
pop
outsb
jmp
and
stos
inc
inc
aad
mov
push
out
rorl
push
adc
fdivs
jb
jl
inc
mov
sbbb
pop
sahf
xchg
fidivl
fisubrl
dec
push
mov
mov
iret
pop
adc
mov
sub
dec
into
mov
aaa
mov
fnsave
or
test
lock
sub
loope
adc
fsubl
rcr
leave
mov
sub
adc
or
paddusw
push
mov
push
insl
adc
mov
cmp
rcr
add
pop
cltd
pushf
push
rclb
xor
fwait
mov
dec
xchg
push
cwtl
dec
rcr
push
lds
sahf
rol
fstl
mov
push
mov
and
lret
fsts
pop
arpl
ljmp
sbb
lock
jmp
stos
inc
data16
hlt
adc
mov
push
imul
or
jle
fstp
inc
and
fdivl
mov
add
xchg
adc
scas
pop
mov
dec
fnsave
hlt
pop
mov
sbb
add
mov
jnp
mov
lds
sub
inc
jle
mov
push
inc
xchg
push
jns
mov
jp
mov
xchg
sbb
shl
inc
or
subb
push
mov
sub
or
push
inc
ficompl
pushf
adc
cltd
adc
std
mov
aas
push
shll
mov
shrb
xor
rcrl
cwtl
xchg
fstpt
xchg
mov
inc
pop
push
jae
sub
pop
mov
sbb
clc
sbbl
or
mov
jge
add
mulb
fldl
test
je
and
sbb
mov
add
cs
popf
mov
jge
lret
push
jge
dec
push
sub
push
stos
adc
or
ljmp
jl
xchg
sbb
jmp
inc
jmp
fisttpll
icebp
sahf
adc
mov
aad
aad
lret
in
mov
ror
adc
inc
mov
lahf
xchg
xchg
add
aaa
sub
add
loop
mov
sub
shl
je
jg
mov
xchg
faddl
popf
push
fmull
push
cli
scas
and
fs
cmp
iret
or
cwtl
and
lcall
movl
movsl
or
dec
out
fsubrs
xchg
popa
xchg
popf
pushf
xlat
lods
aas
lds
test
cwtl
mov
divb
shll
stc
pop
and
call
das
sub
lahf
adc
or
cltd
push
sub
pop
adc
fs
cmp
faddl
fs
lret
stos
movsl
add
jg
int3
js
mov
and
adc
fneni(8087
pop
sahf
lods
and
pop
cld
in
sbb
mov
idiv
sub
xchg
les
adc
mov
out
fwait
shl
sub
jge
sbb
sub
lea
das
mov
jle
cmc
push
shr
jns
cmp
stc
les
adc
mov
push
out
pop
mov
cs
shll
loop
lods
orl
je
insl
dec
aam
int
ret
movsb
sub
push
aad
cmp
or
push
sarl
and
and
aam
ss
in
rcrb
xor
push
loop
sub
cwtl
cmp
rcrl
test
xchg
fistpll
lods
mov
shrl
mov
push
sub
scas
mov
or
mov
sbb
push
iret
aaa
add
pusha
cld
stc
dec
xchg
inc
push
cli
pop
lods
sbb
pushw
push
pop
push
popf
xor
mov
pop
sbb
fdivr
addr16
mov
cmc
push
adc
mov
test
ljmp
pop
cmpsb
jecxz
sub
sahf
out
cmp
in
roll
pop
lods
or
xor
nop
fcompl
out
int3
push
aad
jmp
mov
fisttpl
fsubrl
mov
sbb
or
jnp
scas
test
mov
pop
and
xchg
nop
xchg
mov
pop
in
lret
mov
loop
ja
sub
cs
pop
ret
rolb
lret
fdivr
out
inc
cltd
pushl
xchg
lock
dec
mov
cmp
leave
je
xor
lock
iret
mov
lock
mov
cld
push
enter
push
sbb
adc
movsl
xor
pop
aas
mov
jp
pusha
mov
lods
pushf
and
push
sti
cmp
mov
adc
sbb
lods
call
push
pop
stc
mov
mov
ljmp
xchg
ret
xor
imulb
popf
push
adc
movsl
test
push
mov
lods
fsubl
aad
cld
pop
lods
popf
jp
js
fs
xchg
xor
push
rcll
xchg
push
inc
fstps
iret
js
push
xlat
xchg
xchg
pop
dec
divb
mov
inc
adc
push
gs
popa
push
mov
cmc
ss
in
es
cmp
stos
xor
xor
rcr
shr
inc
dec
aam
inc
int
lret
push
mov
jbe
orb
leave
orb
enter
sahf
mov
ret
mov
dec
lods
add
loope
jnp
pop
pop
aad
lods
das
lcall
pushf
mov
cltd
fnstsw
lods
mov
and
int3
cmp
nop
xor
pop
sub
shll
jecxz
aad
test
cli
fmul
mov
or
lret
std
testb
icebp
shrb
jae
movsb
rcrl
aam
ljmp
push
push
fsub
dec
inc
dec
jne
adc
mov
ret
ljmp
xor
leave
stos
dec
aaa
xchg
push
pop
ljmp
ljmp
dec
xchg
adc
pop
dec
shrl
push
ficompl
lret
xchg
int3
fistl
ss
sbb
lods
dec
leave
jecxz
out
ret
cmp
mov
mov
sub
xor
xor
ljmp
inc
inc
rcr
sub
fdivrs
jae
lcall
push
lods
sahf
inc
lahf
xor
mov
aad
adc
mov
pop
pop
dec
vsqrtss
shll
mov
rcl
lcall
fxch
lret
lea
adc
fcompl
shl
xchg
cmpsb
out
push
cwtl
sbb
pop
ljmp
sub
or
or
imul
ss
mov
pop
inc
mov
cmp
nop
sub
in
rcrb
leave
ss
push
inc
inc
adc
pop
or
mov
ficoms
pop
shlb
stc
xor
dec
fcoml
lret
sub
mov
push
ret
sbb
inc
or
mov
sub
xor
pushf
fs
mov
divl
add
decl
xor
pop
add
sbb
je
jle
adc
fstpl
xorb
int
loop
fwait
xchg
int
mov
push
xchg
pop
arpl
aam
and
ret
leave
das
xchg
mov
dec
jmp
inc
jp
out
es
xor
insb
inc
cmp
pop
jg
stc
ret
std
mov
popa
je
stos
lods
iret
pop
mov
fwait
clc
add
push
xchg
adc
inc
hlt
scas
jmp
int
xchg
cmp
adc
cmpsl
jb
sbb
pushf
xchg
enter
lret
les
adc
outsb
push
pop
negb
pop
pcmpeqb
out
adc
lcall
popf
out
xlat
jmp
ficomps
push
fdivrs
shrb
cld
scas
add
aad
bound
inc
mov
fst
dec
sbb
addb
cmc
mov
lods
mov
sahf
push
gs
aam
dec
fisttpl
jp
test
sahf
adc
daa
fwait
stc
mov
fcompl
sbb
xchg
pop
mov
push
sub
xchg
in
jne
cmp
mov
fistps
hlt
loopne
pop
pop
ljmp
fcompl
mov
rcrl
ja
cmpsb
cwtl
push
mov
push
lods
movntq
out
into
push
jle
data16
aam
xchg
mov
dec
rcll
sahf
inc
leave
shlb
inc
jge
push
push
clc
ss
mov
inc
sbb
jbe
outsb
subl
js
mov
xor
addr16
iret
push
pushf
adc
fucomp
mov
mov
xchg
mov
jns
pop
cmp
in
sub
or
push
iret
ja
out
cmp
cmpsb
fidivl
shrb
out
push
mov
iret
mov
rorb
mov
js
and
idivl
xchg
mull
xor
fwait
mov
push
jne
adc
sbb
insl
enter
jnp
pushl
mov
jbe
out
lock
sarb
rcr
pushf
inc
jge
xor
fists
or
add
insl
dec
movsl
inc
outsl
insb
mov
and
std
fcompl
fnsave
inc
add
mov
out
cmp
push
lahf
pop
out
push
xor
ja
xchg
hlt
jmp
sahf
sarl
cmp
mov
push
mov
cli
ja
cld
mov
pusha
adc
les
ja
lcall
in
push
xchg
lea
shrb
into
inc
xlat
xchg
shrl
in
mov
sbb
loope
mov
sahf
push
adc
loop
out
je
jp
fcom
jle
xlat
shrl
mov
repnz
pop
push
dec
lret
out
ss
xchg
jle
fmuls
jmp
dec
adc
jle
push
pop
test
sbb
cmp
xor
push
fxch
ja
out
xchg
aad
ret
push
jae
sub
pop
push
push
mov
mov
xor
adc
cmp
ss
mov
fs
mov
or
aad
enter
pop
test
gs
jl
insw
inc
lds
leave
shr
jl
test
not
jns
popa
pop
int
sub
mov
rol
mov
js
aad
shlb
lods
dec
enter
push
dec
ret
adc
jmp
daa
adc
or
rorl
adc
and
xlat
xor
imul
push
movsl
or
aam
jno
jl
dec
mov
lret
pop
push
push
dec
jl
ds
cwtl
pop
cmc
sbb
pop
sub
es
ret
test
enter
lret
icebp
push
icebp
fs
and
xorl
mov
inc
les
rcl
mov
sub
fbld
xchg
shrl
mov
in
imul
push
fnstcw
lods
dec
lret
cmc
sub
int3
neg
loope
out
lcall
pop
cwtl
jne
sub
aam
inc
xchg
repnz
lods
jle
mov
dec
add
addr16
shl
ret
adc
inc
xchg
call
dec
xchg
sbb
sbb
and
dec
lcall
sub
pop
out
xchg
xlat
jle
cmc
jecxz
rcrb
pop
pop
lods
xor
cmp
dec
repnz
aam
xchg
insl
or
inc
sub
fadds
outsl
push
pop
sub
pop
in
pop
add
pop
pop
push
int3
leave
adc
lods
push
das
xchg
xchg
inc
and
cmp
out
movsl
push
xchg
xchg
int3
iret
std
ljmp
jmp
or
cwtl
push
ror
sbb
cmpsb
mov
lret
or
pop
sarl
sbb
mov
jno
mov
cmp
jle
outsb
dec
jnp
addr16
cmp
stc
pop
repz
jmp
lret
std
mov
push
pop
inc
and
lds
pop
cltd
and
xchg
out
les
sub
mov
rcll
jmp
inc
push
std
sbb
fnstenv
pop
mov
mov
jb
jle
xchg
mov
imul
frstor
lret
mov
fadds
stos
pop
push
xchg
push
mov
ror
mov
jge
cltd
push
jnp
sub
and
andb
mov
push
mov
out
xor
shrl
xchg
mov
popa
jge
push
mov
mov
cmp
inc
mov
sahf
cli
ds
aam
pop
jmp
jno
pop
into
ss
popa
cmp
adc
dec
push
xchg
fcompl
cmp
ljmp
or
dec
jnp
mov
cltd
sbb
inc
pop
push
mov
pop
push
mov
and
ja
fdivs
ret
mov
sub
sbb
lcall
xor
xlat
out
mov
xchg
xor
pop
cmc
sbb
jp
fcmovu
loop
jne
jle
mov
pop
das
insl
inc
aad
pop
sbbb
cli
sahf
sub
es
sbb
push
sbb
sub
push
xor
fcom
mov
movsl
push
xor
sarl
sbb
cmp
xor
sub
mov
in
mov
out
out
int3
and
aam
push
xchg
fstps
rclb
lahf
cld
mov
rcr
and
movsl
fadd
cltd
sub
enter
adc
adcb
rcrl
sub
lahf
dec
ljmp
outsb
dec
fidivl
rcll
dec
xchg
in
and
lcall
mov
jmp
pushf
leave
add
sub
sarl
ret
mov
jmp
fstpl
repz
fnstsw
into
in
lcall
fcmovne
mov
sahf
inc
pop
mov
std
xchg
pop
leave
pop
jbe
ja
xchg
insl
mov
and
mov
je
jg
js
xchg
rorl
fadd
loop
es
sub
push
aas
pop
insb
shlb
inc
in
mov
jns
shrl
add
gs
mov
jnp
mov
fcompl
adc
pop
or
std
sub
daa
pop
lods
jno
jae
test
inc
jl
lds
jp
sbb
push
push
pop
push
fstpl
sbb
jp
fldl
pop
pop
xor
push
xchg
insl
jne
mov
and
jae
adc
jae
mov
push
stos
sbb
cltd
jnp
push
in
pop
xchg
dec
aam
cmc
rcrb
xchg
and
test
adc
insb
sti
adc
icebp
inc
mov
fdivrl
sarb
dec
enter
push
xor
shll
pop
dec
push
rcll
mov
in
mov
scas
mov
and
stc
daa
fldl
fcmovnbe
mov
in
addr16
nop
sbb
xor
push
jecxz
or
movsb
insl
incb
cli
sub
mov
push
fldcw
push
insl
jbe
pop
or
xchg
cmovbe
popa
mov
push
pop
ljmp
mov
sahf
lods
cmp
arpl
mov
and
aam
aas
inc
xchg
fiaddl
xchg
pop
les
push
mov
jb
jne
roll
aad
mov
mov
std
fbld
mov
scas
jg
sarb
jp
flds
lret
repnz
mov
jmp
push
out
popa
fwait
pop
mov
xchg
fistpl
fadd
imul
push
cld
popf
std
xor
decb
popa
fstpl
pop
mov
jno
insb
out
inc
pop
stc
aad
stos
add
pushf
sahf
mov
jle
leave
dec
push
dec
push
shrl
push
sub
sarl
jmp
xor
cmpb
dec
in
fdivr
repz
mov
xchg
pop
in
test
xchg
jle
push
xor
ljmp
push
pushf
push
jns
push
stc
pop
cld
loopne
pop
sahf
and
push
lods
fwait
rcll
xchg
repz
cmp
scas
mov
xchg
jno
mov
push
dec
pop
shll
cmp
into
test
xor
es
subb
subl
or
pop
cmp
xchg
lods
stc
repz
addr16
icebp
pop
jp
aaa
xlat
jl
sub
mov
dec
mov
scas
lahf
ret
pop
xchg
fists
pushl
fnstsw
icebp
pop
mov
mov
jnp
jne,pt
inc
scas
mov
iret
cmp
stos
pop
mov
and
inc
inc
stos
clc
mov
add
jmp
icebp
adc
jg
xchg
fdivrl
pushf
dec
setp
cmc
ds
sti
rorb
scas
mov
jno
jmp
clc
popa
adc
and
mov
dec
ljmp
pop
outsb
push
shll
stc
fldenv
xchg
inc
ja
adc
mov
ss
dec
dec
pop
push
test
insl
cmp
test
mov
jns
or
aam
idivl
aad
rclb
inc
popa
je
pop
adc
lds
sarl
dec
cltd
or
dec
cmp
push
rcrl
adc
sahf
cmp
sarl
ffree
inc
push
pop
cmc
push
pop
rolb
xorb
nop
xchg
pushf
xchg
scas
push
pop
aas
pop
stos
int
jns
faddp
push
sarb
in
and
jmp
pop
std
dec
pop
mov
test
mov
ja
gs
inc
or
mov
idiv
incl
leave
cmp
mov
ficompl
or
daa
int3
test
pushf
scas
and
cmc
sbb
int3
adc
sti
repnz
or
mov
mov
jl
or
cmp
inc
jecxz
push
pop
fildl
pop
jge
popf
in
lods
shll
inc
in
repz
movsl
jne
add
sahf
xor
fisttps
inc
cmp
xchg
sbb
xchg
dec
pushf
rorl
mov
pop
pop
xchg
enter
push
xor
xor
xor
adc
pop
cmc
dec
sub
xchg
xchg
sbb
cmpsl
sti
cmp
movsl
and
sub
pop
out
loope
jmp
jle
mov
aad
stos
adc
and
lds
data16
daa
ret
ljmp
xchg
or
push
and
pop
out
lret
and
push
enter
push
push
les
test
and
daa
mov
dec
pop
mov
push
cmp
adc
or
xchg
imul
xchg
xor
mov
adc
add
aas
in
jbe
dec
popa
sub
pop
pop
cmp
inc
pop
pop
stc
enter
push
sbb
mov
ljmp
sbb
sub
in
aad
push
rcr
ljmp
adc
dec
filds
insl
jmp
mov
lods
mov
pop
mov
jbe
aam
xchg
adc
and
fstpt
int3
cwtl
aad
sahf
cwtl
adc
test
in
pushf
aad
clc
ficomps
adc
outsl
cmp
xor
mov
mov
shrb
movsl
adc
popf
mov
mov
mov
imul
aaa
dec
pop
fcmovb
dec
cmp
aam
or
sahf
pop
rorl
insb
mov
stc
mov
ljmp
fadd
loope
mov
mov
aad
fs
subl
je
sbb
imul
xlat
jae
pop
repnz
pushf
jno
xlat
das
test
xlat
pop
dec
jbe
adc
xor
pushf
pop
adc
loope
dec
jge
mov
cmp
shrb
sub
push
fcmovu
push
out
lret
aaa
cmpsb
cmc
fwait
dec
aam
cltd
fadd
aad
dec
fcoms
shlb
aam
aad
jge
mov
lret
lcall
fcmove
xchg
push
mov
push
pop
mov
cmp
data16
int
call
fcmovb
jne
lahf
lret
xchg
pop
stos
mov
adc
ror
adc
jae
push
inc
or
adc
dec
sti
lret
out
dec
out
jb
pop
pop
outsb
sbbb
jl
adc
xchg
or
pop
fisubrl
rcrb
les
into
inc
mov
pop
sbb
test
pushf
push
push
push
pushf
push
filds
sbb
imul
add
ror
lahf
sub
mov
clc
es
xchg
repz
shll
mov
jecxz
fstl
fists
lahf
dec
xor
bound
push
mov
out
les
pop
and
mov
adc
pop
push
dec
mov
stos
sbb
fdivr
fimull
mov
ficoml
iret
pop
cli
fiaddl
push
ljmp
ljmp
xchg
movsl
sbb
xor
fcmove
stc
or
jbe
dec
sub
mov
cli
out
dec
out
cltd
push
dec
stc
push
lahf
pop
sbb
rorl
pop
pop
mov
cmc
mov
pushf
pop
mov
fsubrs
fcmovne
xor
sarl
pop
stc
js
mov
push
mov
push
and
xchg
xlat
lods
pop
fnsetpm(287
xchg
or
fcmovnu
cs
push
cwtl
push
jns
rcl
xor
jae
loop
adc
jle
shlb
into
out
in
popa
cmp
push
push
rcr
pop
mov
fstpl
bswap
cmc
lds
add
or
inc
add
int
push
or
xor
sti
dec
subb
cmp
add
ficoms
insl
or
cmp
dec
mov
pop
mov
gs
popa
hlt
lret
dec
xchg
loop
pop
cmp
shl
scas
clc
dec
lock
push
fisttpll
pop
jge
scas
mov
pop
xlat
push
dec
xchg
stc
fdiv
fmul
bound
xchg
adc
lods
dec
decl
mov
fistpl
shr
aas
lea
leave
sub
fisubrl
mov
mov
mov
or
mov
pushf
std
xor
movntq
out
ljmp
push
sbb
dec
adc
adc
fists
aam
aad
imul
mov
xor
xor
or
push
in
cwtl
jmp
insl
push
pop
pusha
scas
adc
pop
icebp
adc
lock
push
repnz
imulb
fdivl
pop
insl
data16
xor
mov
pop
pop
pushf
pop
inc
roll
mov
push
pop
hlt
sti
push
cli
std
cmp
jae
rcrb
or
sub
test
mov
mov
test
popfw
imul
push
out
ljmp
mov
push
pushf
sahf
test
cld
fs
mov
or
xor
mov
push
mov
push
xor
lds
insb
mov
ds
xchg
or
mov
jno
mov
xchg
outsl
lods
ret
pop
jg
or
ds
pusha
sub
lods
cmc
inc
mov
aas
jns
jmp
inc
clc
aam
sti
cmp
push
mov
lds
push
popf
test
dec
stos
push
mov
jmp
leave
jmp
pushf
pop
fidivrl
jp
popa
inc
sbb
sbb
rcll
inc
add
push
in
insl
fsubrs
add
movsl
add
rcll
cvtps2pi
lret
rcr
rcl
cmp
push
add
xchg
fldcw
lods
sub
aad
insb
flds
push
push
icebp
sarl
add
iret
lock
rcr
or
mov
flds
idivb
pop
pop
cmp
cmovl
cmc
setp
or
cltd
aad
sub
inc
fnstenv
add
mov
fstpl
das
xor
xchg
pop
imul
sub
and
subb
sub
mov
xor
icebp
inc
push
aaa
stc
fdivrp
xorl
push
ss
adc
sarl
js
inc
cmp
stc
ret
push
mov
ja
push
dec
push
dec
push
jbe
mov
int
shlb
leave
mov
outsl
rolb
mov
lret
adc
repnz
aam
dec
push
int
hlt
pusha
push
test
stos
rcrb
ffreep
and
mov
roll
adc
push
pop
dec
movsb
mov
dec
inc
jmp
lcall
xchg
je
and
iret
cli
pusha
les
iret
push
mov
addl
and
fisttpl
pop
loope
dec
sub
fmull
rolb
int3
lods
shll
mov
sub
push
fstpt
pop
pop
int
rcll
imul
mov
lahf
cmp
movsb
out
enter
repnz
in
ljmp
dec
adc
adc
pop
sub
adc
mov
dec
ss
loopne
in
stc
pop
sbb
and
out
fdivr
dec
sub
mov
jns
cmpb
hlt
out
push
sbb
jle
icebp
jl
aad
sbb
std
lock
push
jb
ja
pop
mov
ja
or
loopne
or
push
inc
fimull
pop
rcrb
add
pusha
cmc
push
into
adc
test
pop
jge
cltd
popa
pop
add
xchg
repz
inc
xchg
lea
adcl
fnstcw
aad
fisttps
out
push
pop
aam
jmp
test
pop
lcall
lahf
insb
or
and
inc
cmpsl
mov
rcrl
or
jnp
mov
xor
lahf
leave
mov
sub
add
loopne
jae
in
inc
and
shl
sub
mov
or
test
lods
lcall
add
push
iret
imul
and
xchg
dec
lcall
dec
pop
repz
pop
cmp
sbb
xlat
jge
roll
xchg
repnz
xor
fidivrs
push
add
dec
inc
cltd
aam
sbb
xchg
aam
scas
push
sbb
and
push
and
popf
out
push
into
cs
sub
aam
notb
mov
xchg
into
mov
out
cmp
into
int
adc
xor
pusha
ror
push
push
lea
js
ljmp
inc
fwait
cmpsb
nop
and
mov
dec
enter
inc
nop
sbbb
fsts
add
call
in
dec
sbb
addps
mov
shll
xor
insl
dec
aad
fwait
movsl
adc
add
popa
nop
into
sbb
pop
push
push
inc
ds
mov
popa
popf
lods
jno
lock
int
sti
lret
jl
in
leave
jg
and
push
mov
filds
into
mov
mov
fsubl
jns
enter
mov
mov
cmp
jp
in
xchg
shl
mov
push
sub
mov
xchg
or
repz
fistl
jmp
mov
aaa
push
push
inc
mov
dec
repz
cmp
inc
pop
rcrl
into
arpl
dec
sub
jns
sbb
xor
dec
testl
das
or
inc
jae
push
in
adc
shlb
xor
movsl
inc
repnz
xchg
push
enter
ret
pushf
jge
repz
mov
add
int3
int
repnz
or
aam
mov
int3
jo
sti
sbb
test
sar
fs
inc
imul
aaa
popf
mov
jg
jo
enter
cmp
das
enter
andb
xor
popf
int
popa
bound
sbb
mov
int
push
adc
lea
pop
cld
push
cmp
push
xchg
pop
ret
mov
shlb
fcmovbe
xor
adc
mov
xor
fidivs
mov
dec
insb
and
cltd
push
fdivrs
xchg
into
mov
xchg
pop
adc
mov
mov
pop
mov
push
pushf
lds
adc
pusha
es
cmp
mov
push
xchg
pop
into
aam
sub
shll
int
arpl
adc
clc
cmp
pop
mov
ss
push
mov
inc
imul
pop
xchg
xor
int
das
jbe
mov
mov
cmp
or
addr16
cltd
aaa
aam
push
mov
sbb
inc
out
lahf
inc
mov
je
pop
ss
sahf
ljmp
or
aam
sub
inc
rcl
mov
sbb
pop
pushf
fdivrs
inc
xchg
and
cmpl
jne
pop
scas
cmp
jnp
test
xchg
inc
jae
stos
dec
sti
inc
cwtl
iret
mov
sbb
pop
jne
pop
rolb
pop
rorl
or
and
push
scas
lret
mov
pop
jmp
inc
int
cmp
and
mov
dec
ret
inc
push
cmp
mov
adc
leave
jne
sbb
mov
lcall
xchg
lods
cmp
mov
xchg
sub
das
push
and
sahf
jne
cmp
xchg
test
xchg
or
sub
in
add
in
rcrl
sbb
mov
push
cltd
sbb
rorl
push
sti
pop
push
gs
fistl
fdivs
sarb
ss
cmc
pop
and
xlat
fistpl
sub
jnp
in
mov
aam
dec
sub
fcmovnu
repz
pop
xchg
mov
pop
adc
je
mov
push
insl
loope
or
and
and
lods
mov
mov
adc
aad
loope
or
pop
xchg
sbb
dec
adc
test
mov
xchg
lret
sbb
cwtl
sub
ficoml
mov
push
aam
cltd
mov
mov
sub
cwtl
mov
cwtl
pop
inc
mov
scas
int3
dec
lcall
aad
sahf
jo
sub
fisubl
xchg
pop
adc
cwtl
mov
lahf
aam
pop
lcall
xchg
negb
and
inc
push
pop
into
leave
fcmovu
push
rcrb
lret
lods
and
push
fs
sub
xchg
xchg
mov
aam
inc
std
outsb
mov
cli
pop
pushf
xor
scas
scas
xor
lret
aam
adc
xor
push
sbb
arpl
pop
jle
xor
inc
pushf
fisubl
fstp
and
data16
mov
xor
sbb
mov
jp
mov
xor
xchg
addr16
int
ds
mov
adc
and
jbe
jno
sarb
stos
pusha
jmp
cld
aam
push
mov
add
rcl
jbe
or
or
lds
and
lret
cmp
adc
inc
das
sbb
faddl
lahf
push
mov
in
test
cld
or
push
jp,pn
call
cld
mov
lgs
mov
sbb
notl
push
test
sbb
test
pop
jmp
pushf
test
arpl
jl
call
sti
sbb
cmp
ds
ja
dec
out
cmc
cmpl
popa
jnp
inc
sub
int
jmp
fdivrl
inc
int3
jo
push
out
repnz
out
cmp
xor
pop
pushf
fcomps
mov
rcrl
xor
subl
xor
xor
lds
hlt
mov
mov
cmp
mov
pushf
xchg
push
fistpl
iret
jns
push
dec
sub
mov
sub
jecxz
stos
fldcw
iret
mov
add
mov
mov
xchg
aam
lahf
cmp
mov
push
sbb
inc
pop
fs
repz
sbb
adc
inc
lret
jnp
cmp
xor
lods
icebp
pop
push
std
inc
push
xchg
pop
adc
mov
cltd
mov
xorl
sti
pop
adc
inc
jl
xor
leave
mov
out
pop
fsubrs
fdivrl
jb
sbb
cwtl
adc
inc
push
cmp
ds
fildll
adc
dec
cwtl
mov
lahf
fadd
mov
jecxz
out
aam
inc
es
or
lds
lods
sahf
xor
lcall
pushf
adc
jp
pop
std
mov
stos
cmp
pop
dec
aaa
test
fbstp
fcoms
push
adc
scas
inc
xchg
push
inc
test
popa
movsb
rcl
sahf
mov
fs
das
rcrl
dec
dec
inc
dec
jg
scas
hlt
aad
out
add
jnp
jbe
pop
sahf
dec
mov
cmp
push
mov
cwtl
stc
movl
cmpsb
add
repz
data16
jno
sbb
jnp
repz
cmp
jbe
dec
repz
add
lret
js
iret
test
into
rcll
push
pop
dec
fnstsw
test
jnp
movsl
and
ss
adc
fdiv
or
rcll
mov
movsb
inc
xchg
test
xor
rcl
adc
fistpl
repnz
mov
push
pop
jl
adc
mov
or
jnp
jns
sub
cltd
jg
mov
popa
fdivl
push
lcall
add
fnstenv
pop
xchg
jecxz
js
int3
loopne
xchg
cmp
pop
fcmovb
jge
xor
gs
out
fisttpl
sbb
mov
negb
sti
sbb
xor
inc
fisttps
adc
orb
sahf
fcompl
fs
test
jmp
cltd
mov
pop
inc
sub
lea
outsl
adc
jge
sbb
pop
pushf
push
xor
ds
lahf
fistpl
fcoms
mov
dec
mov
lock
sbb
adc
inc
stos
pop
mov
and
mov
xchg
xor
lret
push
and
rorl
dec
cmc
push
out
aas
add
rcll
aas
sbb
cwtl
insl
sti
das
mov
push
xchg
jle
push
aam
insl
pushf
jo
xchg
out
jnp
fsubrs
sbb
push
mov
dec
pop
push
daa
mov
aam
mov
stos
adc
mov
xchg
aam
mov
or
lods
adc
sti
lcall
dec
pushf
jle
push
cmp
cs
add
cmp
sub
cmp
out
andl
adc
shll
clc
mov
jl
sarl
mov
int
xchg
rcr
jae
push
mov
movsb
mov
in
pop
pop
rcll
add
or
push
add
cmp
rcll
inc
and
lcall
add
mov
xor
add
lds
fsubrl
xchg
xchg
imul
sub
and
adc
adc
sahf
adc
push
pop
in
pop
mov
sbb
in
mov
xor
add
push
pop
push
scas
push
cld
xchg
jns
insb
aam
hlt
pop
clc
dec
push
jae
leave
inc
inc
loopne
scas
adc
xlat
jmp
loopne
out
pop
lds
inc
mov
cs
xor
mov
cmp
ficoms
xchg
sar
hlt
sbb
xor
mov
rorb
sbb
sti
sub
cmp
sbb
aad
or
movsl
pusha
xchg
xchg
adc
pop
xor
jns
ds
out
cmp
and
push
sub
frstor
out
fsubrl
aad
out
jnp
cltd
outsl
jl
jp
call
fidivs
hlt
scas
cmpb
arpl
fdiv
js
shrb
push
add
out
cmp
call
pop
movsl
jbe
sbb
paddq
rol
jle
int3
sti
cmpsb
inc
sub
cli
imulb
push
orl
aas
sub
idivl
xchg
out
sbb
cmp
jle
sbb
repz
fwait
lcall
mov
imul
push
pop
or
int
fwait
cmp
inc
add
jg
cmp
mov
mov
rcrl
mov
jae
ret
mov
xchg
les
pop
sbb
xchg
jne
gs
push
test
out
fsubl
aad
das
popf
or
dec
fsubrl
daa
popf
into
pop
dec
imul
sub
jne
pop
test
inc
inc
dec
xchg
vmovapd
mov
popa
pop
in
cmc
fcmovu
cltd
cmp
cmpsb
lcall
xchg
stos
xchg
xor
outsb
cmpsl
inc
je
jmp
pop
mov
fidivrl
daa
jns
int3
sbb
shll
xor
pushl
mov
scas
repz
movsb
mov
push
jle
stc
dec
mov
pand
pop
sbb
hlt
js
pop
xlat
pop
pop
popf
fldenv
fstpl
mov
dec
pusha
mov
fs
or
andnps
xor
jno
xor
xbegin
in
ljmp
cmpsb
gs
out
or
lcall
ljmp
xor
xchg
adcl
add
pusha
in
hlt
xor
sub
lock
test
push
imul
repz
imul
fsts
cwtl
pop
mov
push
adc
fmuls
sub
iret
dec
inc
dec
push
xchg
ljmp
hlt
lret
aam
mov
adc
mov
jne
jo
je
adc
pop
lods
cmpsb
dec
jg
cli
fsubrl
pop
xor
out
ret
ljmp
pushf
pop
lods
mov
mov
pop
jo
xchg
cltd
int
push
jbe
sbb
ffree
nop
adc
fcoml
dec
sub
je
sahf
mov
xor
fstl
jl
dec
push
scas
xchg
xchg
subb
mov
inc
cwtl
aaa
xchg
ja
inc
jne
aam
cli
in
repnz
icebp
pusha
rcll
xor
ja
sti
dec
rcrl
ds
mov
cmp
adc
repz
jl
pop
lret
lret
fsubr
inc
mov
fdivrs
push
push
xlat
dec
mov
mov
out
cmp
mov
xor
subb
xor
mov
shl
fldt
or
push
ljmp
outsl
scas
rcrl
rclb
enter
dec
mov
xlat
jl
sub
pop
pop
fnstenv
stc
pusha
stos
faddl
mov
fcmovnb
mov
mov
bound
xchg
lods
insl
sub
lea
insl
cwtl
addr16
and
xor
imul
push
cmp
pop
pop
jge
lahf
cmpb
pop
sarl
mov
xor
push
mov
push
push
call
popf
jmp
inc
pop
fsubr
roll
fcoml
dec
int
das
cmp
popf
ljmp
lods
popa
sbb
push
int3
jl
inc
popa
xchg
push
fs
mov
pop
ljmp
mov
repnz
or
mov
pop
pop
jbe
stc
xchg
leave
jo
das
dec
pop
pop
fistl
add
stc
fs
fadd
int
fnstcw
into
push
rcll
bound
dec
mov
push
inc
sahf
fst
inc
into
stc
shl
mov
fstp
push
insb
popa
ss
lahf
popf
fsts
into
sub
mov
jge
std
out
jl
fstl
hlt
data16
ret
fcmovbe
xchg
mov
test
cmpl
push
mov
push
pop
out
pushf
cs
add
int
repz
aaa
xchg
mov
dec
and
mov
adc
sahf
cltd
mov
cmp
push
mov
es
cmc
mov
dec
dec
mov
or
adc
pop
adc
icebp
cmc
mov
loopne
xchg
popa
js
aam
aaa
out
pop
jae
repnz
sbb
pop
es
imul
lret
sub
shrb
jne
xor
cmp
inc
pop
ss
addl
lcall
daa
pushf
sbbb
in
and
js
lcall
rclb
add
fistl
lea
and
stos
lods
mov
pushl
lret
xor
aad
fistpl
arpl
push
ljmp
lds
adc
add
xor
int3
rorl
cs
shlb
movsl
fwait
mov
cmc
pushf
cs
inc
mov
inc
mov
shrb
or
aad
mov
sbb
sub
cltd
or
inc
popa
inc
sbb
aad
icebp
cwtl
cmc
mov
das
lods
in
lcall
mov
pop
mov
test
sub
push
shll
and
test
clc
popf
mov
shll
lret
icebp
inc
push
mov
rorl
push
cmp
jae
dec
jmp
test
push
test
jge
mov
lock
and
push
dec
jmp
sbb
lea
fsubrl
xchg
xchg
pop
mov
xor
cmp
aas
outsb
fs
popa
fnstcw
mov
pushf
rorl
adc
cmp
mov
loope
xchg
idivl
pop
pushf
aam
add
shl
add
ljmp
stc
add
mov
cld
mov
xchg
out
push
dec
iret
ljmp
cmp
jge
aas
sub
call
fldt
sahf
inc
stos
xor
scas
push
fisubrl
xor
mov
push
dec
push
int3
dec
lods
jp
pop
lret
cmp
fildl
dec
repz
dec
mov
fstpt
fstpt
in
pop
dec
jnp
pop
enter
inc
cwtl
mov
mov
sahf
stos
cmpsb
in
fcomps
xchg
aam
fcompl
push
lret
out
notb
int
pop
les
movb
jnp
sub
into
shrl
repz
xchg
test
and
push
enter
mov
dec
iret
out
jge
cmpsb
mov
fnstsw
mov
pusha
inc
xchg
dec
lods
test
and
lods
sahf
pop
sarl
lcall
dec
mov
xlat
imul
dec
out
fnstsw
pop
popf
das
cmc
std
fmull
stos
pop
push
inc
fwait
inc
push
sub
xor
sbb
mov
fstps
pop
or
dec
sti
mov
popf
dec
les
pop
jg
rol
outsl
int3
cs
dec
xlat
dec
dec
stc
in
inc
aam
mov
or
cmpsb
test
or
xor
ljmp
cmp
addr16
in
int3
das
fmul
dec
inc
cmpsb
insl
ret
outsb
pop
decb
rolb
or
push
out
add
add
sub
push
fadd
out
xchg
adc
pop
shr
mov
dec
int3
pop
int
flds
xchg
lds
xor
mov
in
scas
sahf
dec
scas
adc
movsb
pop
dec
ret
lea
icebp
vpacksswb
mov
rcll
mov
mov
in
int
sub
nop
cmp
xlat
fsubr
outsl
fdivl
dec
popf
movsb
lcall
int3
or
inc
les
inc
dec
push
xchg
inc
adc
mov
jnp
pop
aam
call
inc
pop
mov
enter
lea
mov
cmp
rcl
push
test
cmc
jno
xor
leave
xor
in
fidivrs
rclb
pushf
adc
mov
mov
or
mov
rorb
stc
lret
addr16
sub
jp
faddl
fdivl
in
ljmp
lret
insb
pop
mov
je
pushf
pop
add
sub
xor
test
cs
rol
rorb
mov
aam
mov
addl
xchg
dec
sbb
insl
cmp
dec
add
repz
mov
fcmovnb
push
jp
adc
inc
inc
test
es
dec
test
cwtl
xchg
mov
mov
test
inc
testb
jp
dec
add
mov
mov
push
push
mov
sahf
push
pop
sub
xchg
mov
int3
clc
jns
enter
xchg
mov
jmp
adc
ret
clc
mov
leave
xor
fsubs
jo
cmp
mov
shl
jbe
mov
sub
mov
jmp
popa
pop
fmull
mov
xchg
aam
lahf
cs
bound
dec
fsubrl
movsb
sahf
popf
int
fcompl
pusha
jbe
dec
xchg
shlb
dec
sub
popf
test
rol
gs
addl
pop
movb
call
nop
into
stos
cmp
cli
rol
adcb
sarb
sub
in
cmc
js
ja
out
xchg
mov
rorl
dec
es
xchg
cld
stos
mov
mov
or
push
dec
imulb
dec
mov
sbb
mov
mov
fnsave
lods
cs
fcmovbe
dec
dec
in
xchg
jp
cmc
mov
mov
pop
or
fisttpl
imul
xchg
and
jecxz
movsb
inc
mov
imul
mov
inc
sub
loope
lods
lret
xlat
push
dec
jp
push
push
enter
inc
push
out
push
or
xor
jno
int3
loope
shrl
sub
lahf
leave
jb
andb
xor
xchg
leave
fimuls
cmc
pop
inc
lret
fdivrs
fiadds
in
ror
push
dec
cwtl
leave
cmp
cs
push
dec
ficoml
jp
mov
shl
in
inc
out
or
add
push
adc
sub
push
lcall
xchg
adc
or
repz
lret
ja
pusha
dec
add
lods
out
insl
sub
dec
dec
les
psrlq
fistpll
mov
pop
imul
cmpsl
stos
xor
outsb
add
shll
sbb
mov
jbe
loop
popa
pop
clc
cmp
add
sub
les
dec
popf
imul
and
ds
push
mov
or
pop
push
adc
xchg
fsubrl
jns
je
fmul
ss
sbb
xchg
sub
push
push
shlb
xchg
ljmp
and
lret
mov
mov
cwtl
sti
repz
sarb
fldt
xor
nop
cmc
ja
dec
mov
outsl
jl
test
sub
fwait
xor
sub
cmpl
sbb
mov
ja
cmp
push
cmpsb
fstl
mov
fiaddl
fistpll
and
or
cld
cmpb
jecxz
pop
xor
xchg
std
ss
popa
dec
roll
push
jns
inc
cmc
or
aad
push
inc
push
add
cmp
divl
add
js
repz
rcll
rcrb
dec
adc
das
adc
fisttps
jmp
xlat
dec
push
ret
test
pop
sub
mov
mov
les
roll
mov
rcll
int
xchg
and
adc
jp
xchg
lahf
mov
pop
inc
jb
lret
in
cwtl
mov
mov
lds
dec
add
xor
aam
pop
mov
xchg
add
xchg
cmp
push
ret
pop
cld
pop
aaa
scas
insl
and
imulb
pushf
lea
std
push
add
dec
push
cwtl
jp
mov
sbbb
sub
inc
xor
fnstsw
inc
push
shlb
cld
mov
pop
lcall
pop
xchg
cli
stos
add
negb
and
fstpl
push
fstps
pop
dec
cmc
fdivrs
push
cli
lods
int
inc
aad
push
mov
push
rcr
lods
push
fst
dec
jbe
jp
mov
jl
mov
rcrb
ds
int
int3
mov
aaa
dec
mov
dec
mov
fmull
adc
mov
fwait
aam
mov
dec
xchg
or
cmp
xor
push
add
ljmp
mov
pop
dec
adc
mov
xchg
loopne
leave
test
xchg
cltd
mov
in
enter
test
aad
push
mov
rcll
pop
lods
pop
sarl
insb
mov
jae
rcl
push
add
or
dec
dec
sbb
sub
loopne
inc
rorl
inc
stc
mov
ja
leave
xchg
push
jbe
mov
jmp
mov
sbb
adc
lret
push
cmp
fsts
xlat
clc
mov
inc
aad
fidivrl
insl
push
xor
inc
or
cmp
sarl
mov
fwait
int3
pop
fcompl
pop
repnz
push
fcompl
dec
jbe
aad
xor
inc
sbb
out
popa
mov
push
mov
cmp
inc
mov
out
int3
sub
pop
xchg
sub
lcall
ss
mov
mov
es
sbb
cmpsb
xchg
andb
and
ds
push
sub
fnsave
xchg
xor
lds
repnz
mov
fnstsw
push
into
lahf
ret
cmp
rcrb
mov
arpl
faddl
push
push
loopne
bound
cmp
xlat
fisttps
inc
outsl
mov
inc
fs
adc
jp
insb
mov
push
icebp
dec
aam
hlt
pop
add
xor
pop
pop
fcoml
fs
inc
stos
push
pusha
fsubrl
ja
pop
and
mov
pop
lds
mov
fisttpl
ds
jl
iret
ficompl
xchg
add
shlb
and
xlat
shl
jp
and
xlat
jb
cmp
cmp
jns
inc
mov
mov
repz
lock
cmp
pop
mov
mov
jns
push
andl
roll
sub
xchg
xor
fwait
push
xchg
push
mov
mov
and
dec
or
adc
pop
pop
cmp
cmpsb
pop
jae
jg
add
dec
and
aad
xchg
fld
mov
cmpl
test
mov
fs
stc
aaa
sub
or
sbb
and
mov
xchg
enter
pop
mov
xchg
mov
sbb
push
fcoms
mov
cmp
aaa
pop
ds
adc
pop
pop
jge
seto
push
push
jae
jmp
mov
mov
cmc
pop
je
jb
push
push
pop
mov
sti
rcrl
or
hlt
rcr
ret
dec
mov
out
imul
aaa
cmp
or
push
lods
insb
inc
xchg
sub
data16
loope
ret
push
cld
ss
testl
mov
jne
iret
clc
lcall
sbbl
ss
dec
xchg
int3
pop
out
mov
or
roll
sbb
xor
sbb
imul
test
je
lds
dec
test
rcr
lea
push
adc
pop
fsub
mov
xor
lea
fsubrs
mov
cmpsb
ret
adc
adc
lret
jne
xor
aam
dec
cmpsb
jae
or
adc
xor
fcmovne
mov
push
cmp
jae
lahf
stos
jl
mov
cmc
mov
fbld
dec
les
mov
and
jne
add
repnz
rcrb
dec
fisubs
mov
cmp
jg
jle
pop
psrld
popa
mov
xchg
incl
repnz
int
push
imul
dec
sahf
push
push
sub
mov
ds
dec
sub
shll
scas
inc
hlt
int
sub
xor
out
imul
fsubs
xor
cmp
shrl
rcl
push
loop
movsl
xchg
sbb
sbb
and
rcl
sahf
dec
insb
shll
loop
shll
not
stc
fcmove
pop
or
cwtl
stos
push
jle
xlat
fucomip
inc
mov
mov
fisubl
push
enter
jecxz
dec
pmullw
dec
push
adc
inc
xor
jne
lcall
cmc
test
xchg
int
push
daa
push
out
jle
push
in
pop
xchg
subl
push
pop
pop
fs
aam
pop
xchg
or
loopne
lcall
push
push
mov
mov
adc
push
aam
shrl
repnz
mov
popf
push
xor
mov
addr16
fsubrl
xor
xor
sub
mov
mov
mov
popf
sbb
movl
jno
or
xchg
mov
popa
xchg
xchg
mov
xchg
dec
gs
mov
mov
lods
jno
mov
inc
adc
movsl
mov
mov
lcall
sarl
jle
mov
mov
fcmovu
mov
cmp
mov
pushf
mov
push
jmp
inc
cwtl
inc
mov
mov
movsb
cmp
push
js
pop
push
lods
or
rcrb
jno
pop
pop
push
lea
lods
fstl
add
mov
loope
xor
sbb
sarb
add
adc
sarl
lock
rorb
mov
dec
mov
mov
sub
shll
mov
mov
jl
out
stos
push
xor
test
cmp
pop
mov
idivb
insb
mov
pop
aaa
pop
rol
or
mov
dec
addr16
mov
aaa
ds
scas
xchg
jmp
mov
sub
fsubl
sti
push
pop
lds
out
imull
leave
sti
aaa
dec
insl
mov
inc
std
int
call
pushf
pop
dec
lret
scas
es
jmp
out
das
push
lcall
xchg
dec
mov
cmp
int
mov
dec
stos
mov
xchg
fmul
cmp
cwtl
lret
insl
test
pop
mov
es
popf
ds
sbb
lea
cmp
inc
ds
fcoml
inc
int
push
inc
cwtl
rcr
ds
inc
filds
sub
sbb
rcr
inc
ds
mov
ret
mov
jl
pop
pop
cmp
pop
jl
mov
pop
pushf
and
fstpl
xchg
fidivrl
push
cltd
jp
dec
xchg
fdivrs
aaa
push
xchg
pop
mov
xchg
aad
push
int
aam
xchg
stc
std
leave
inc
xchg
or
dec
push
add
cmp
xor
mov
xor
rclb
xchg
iret
dec
pop
dec
lcall
jbe
mov
lret
push
dec
xchg
lret
cmp
leave
mov
push
dec
pop
dec
xchg
inc
mov
lds
lcall
jbe
mov
rcll
sarb
aas
shlb
cltd
pop
std
lcall
fstps
pop
fstpl
push
fstpt
ficoml
lcall
xchg
fdivrs
push
in
int
push
push
lcall
jp
push
fcoml
stc
das
jns
pop
adcb
mov
arpl
adc
jb
push
cmp
mov
push
addr16
pop
push
rcrl
cld
cltd
cs
sahf
xor
int3
sbbb
sub
or
push
xor
sbb
push
dec
adc
mov
push
and
scas
sbb
jmp
pop
dec
mov
mov
mov
or
sti
mov
sti
inc
push
fldl
stc
xor
add
icebp
adc
cmpl
cmpsb
insl
test
lret
or
push
adc
bnd
adc
ss
push
ret
mov
adc
aad
add
mov
cmc
ret
mov
sahf
repz
lcall
sbb
pop
mov
add
repnz
shl
mov
lods
cs
test
loopne
cmpsb
repnz
pop
push
add
pop
pop
fsubp
pop
fimull
adc
sbb
inc
imul
jae
fdivrl
inc
mov
pop
mov
scas
cmpsb
loop
les
mov
les
xchg
jl
je
stos
cmp
pop
sar
ds
push
mov
add
xchg
repnz
rcl
into
fwait
push
cli
rep
push
shll
out
xor
jl
std
mov
rcr
clc
jmp
cmp
fsts
mov
xchg
xchg
jp
fmull
sahf
xchg
pop
rclb
mov
lea
mov
sub
fxch
ffreep
insl
outsb
dec
les
rcpps
cmp
cmpsb
mov
jae
sub
fsubrs
pop
push
xchg
dec
pop
cltd
lcall
jge
cmp
lea
std
adc
ja
push
xchg
das
rclb
push
in
jge
xor
dec
jp
inc
sbb
dec
jns
mov
shl
lret
mov
pop
xchg
sarl
je
cmc
pop
sarl
out
dec
shlb
cmpsb
push
out
pop
or
dec
rcll
xchg
inc
ja
repnz
jae
mov
push
pop
mov
xchg
fidivl
xor
xchg
push
inc
insl
scas
ret
cmp
stc
pop
mov
stos
add
add
xchg
fstl
push
int3
rorl
push
test
xchg
push
mov
adc
cltd
pop
push
xlat
jno
shll
sub
fsubrl
jns
push
sub
push
inc
pop
inc
stc
dec
add
mov
sti
pushf
push
dec
shr
pop
push
push
jle
sbb
add
inc
iret
addr16
je
mov
jecxz
ljmp
xor
add
popf
mov
mov
hlt
stos
addl
pop
sarl
dec
inc
ja
pop
pop
push
jmp
mov
sarb
xchg
mov
mov
rcrl
lods
and
sub
add
jl
mov
inc
fidivl
jl
andl
and
dec
loopne
pop
rorb
mov
loop,pt
repz
js
jne
pop
push
push
out
sti
enter
xlat
mov
xor
sub
nop
int
adc
lods
pop
lcall
jno
mov
sbb
pop
pusha
shl
leave
mov
adc
into
lcall
mov
fs
jns
shlb
call
rcll
jle
mov
cmpb
jmp
enter
ss
xchg
sarb
sbb
shlb
mov
dec
in
mov
pushf
adc
stc
push
push
push
jmp
sti
cmp
xor
cmp
pop
cmc
fists
adc
aam
pop
test
jne
ret
push
push
adc
pop
scas
mov
leave
mov
repnz
xchg
adc
push
out
movsl
out
jno
xor
sub
push
mov
inc
ljmp
fistl
push
repz
cld
lods
mov
imulb
inc
mov
jl
and
jae
ret
sub
mov
mov
into
repnz
xlat
sti
cmc
popa
ljmp
ss
sbb
int3
aam
cwtl
jmp
fsubs
cwtl
dec
jbe
adc
shrl
lods
mov
inc
jae
loopne
int
repz
iret
jns
pop
fs
outsl
test
sub
push
hlt
push
or
xor
push
out
daa
mov
shrl
or
adc
jns
inc
sarw
push
or
popa
mov
push
fisubrl
push
mov
cmc
sbbb
lret
jp
adc
xor
mov
jae
mov
lahf
popf
int
adcb
repz
cmp
push
inc
mov
jne
mov
repnz
mov
sub
pushf
ds
int
pop
icebp
dec
iret
xchg
aad
fwait
out
cmp
fnop
aad
cwtl
scas
faddp
pop
dec
movsl
out
mov
shll
mov
sarl
jmp
add
fidivrl
stc
filds
adc
sbb
test
lds
mov
fdivr
xchg
lock
push
mov
stc
idiv
mov
fnstcw
shlb
pop
pop
mov
sahf
inc
inc
jbe
popf
xor
pop
mov
dec
or
decb
mov
or
mov
subl
mov
or
lock
mov
push
cmc
fstpt
aad
shll
mov
pop
ja
push
insb
jg
out
incl
mov
dec
ljmp
fnsave
fcoml
outsl
mov
pop
int
insl
or
xchg
sti
xor
dec
movsl
push
pop
push
aam
jnp
repz
ret
push
jl
fst
or
pop
push
pushf
mov
jbe
sub
clc
bound
aaa
pushf
push
cmpsb
call
in
adc
mov
mov
lds
xchg
arpl
or
fiaddl
push
push
dec
mov
mov
xchg
enter
aas
into
shrl
cmp
push
push
inc
dec
xchg
rcl
cmpsl
iret
xchg
or
mov
sti
fst
test
les
hlt
aaa
fisubl
cmp
aad
fwait
rorl
mov
movsb
jbe
pop
aad
xor
jns
inc
xchg
dec
mov
push
jl
xlat
es
pop
jne
les
sub
pop
mov
xor
jne
aad
sarb
adc
and
clc
rcrb
adc
xchg
pop
lret
pop
sub
and
dec
fistl
pop
stos
aam
and
out
pop
dec
xchg
stos
cmpsl
pop
fisubl
ljmp
pusha
int3
lahf
fidivl
aam
adc
rcr
scas
sbbl
add
mov
aas
cmp
orl
adc
popf
sub
dec
lret
out
push
or
mov
mov
xlat
sbb
loopne
repnz
jp
sar
pusha
jbe
xchg
std
push
cmp
stc
xchg
sbb
jns
adc
pushf
sarl
jne
inc
sbb
jae
das
lods
jp
sti
aad
clc
inc
push
pop
out
out
adc
mov
pushf
push
iretw
rcrb
dec
jns
data16
mov
lods
cmp
fcoml
dec
pop
mov
jge
std
push
lret
mov
sub
sub
and
sbb
sahf
inc
pushf
cmp
clc
js
int3
push
aam
jb
jmp
adc
punpckldq
dec
lock
jg
pop
adc
and
lds
fdivrl
push
jp
xchg
mov
stos
imulb
ret
lods
mov
aas
pushf
pop
adc
pop
mov
pusha
dec
jl
adc
mov
rcrl
ja
subb
mov
je
subb
pop
mov
mov
hlt
mov
pop
fsubrl
mov
into
cmp
mov
mov
js
dec
into
scas
mov
mov
cmp
int3
cmp
mov
mov
lods
jl
je
push
adc
int3
aaa
add
adc
ja
stos
push
test
ja
sbbb
inc
cmp
sbb
mov
jmp
mov
ljmp
mov
push
fstpl
push
data16
enter
es
loop
xchg
inc
les
scas
outsl
sub
insl
test
scas
daa
mov
out
les
mov
fisubl
add
pop
and
test
pop
jns
mov
ficomps
xchg
mov
and
push
pop
ss
fnsave
sbb
repz
in
testb
cmp
pop
sub
add
mov
push
cmp
in
neg
fcmovnu
clc
jge
test
push
rcrb
popf
pop
es
outsb
xchg
jns
cmpsb
ret
je
push
call
mov
stos
mov
lods
cmp
lods
pop
sbb
rcl
test
inc
add
cmp
ja
dec
gs
fisttpll
push
fnstsw
jbe
sub
pop
pop
ror
rep
mov
xchg
mov
mov
mov
mov
mov
dec
adc
nop
push
addr16
das
pop
repz
pop
pushf
jbe
xor
dec
pop
jmp
nop
sub
rcll
push
adc
xchg
outsb
dec
push
ss
pop
xchg
sub
xchg
jo
lcall
xchg
jle
jl
loope
mov
dec
pop
xlat
sub
shll
lahf
or
cmp
xchg
aam
lds
xor
mov
es
xchg
stos
cmp
fstl
insb
add
test
mov
jns
pop
mov
or
rol
mov
pop
inc
jg
cld
hlt
jl
pop
push
and
mov
ja
sbb
decl
push
popa
lock
enter
push
xchg
fucomp
cmp
int
pop
push
adc
or
fistpl
daa
fbld
sbb
arpl
js
mov
cmp
adc
pop
dec
mov
cli
cmpsb
scas
shl
adc
rcl
push
sub
cltd
push
dec
pop
cmpsb
xchg
js
imul
cld
lret
std
pop
insl
sub
mov
inc
clc
add
inc
jmp
mov
adc
mov
into
iret
mov
aad
pop
adc
add
sbbb
xchg
iret
notrack
clc
lods
fldl
stc
xchg
repnz
jl
adc
dec
rcll
scas
push
jmp
movsl
hlt
lea
std
jle
jecxz
in
cmpb
je
arpl
shl
repz
mov
jle
das
pop
lods
sub
fldt
ljmp
das
out
sub
mov
imul
stc
xchg
nopl
divps
inc
xchg
inc
cmpsb
pop
scas
fisttpll
xchg
pop
mov
or
mov
jl
mov
xor
test
push
push
sbb
xchg
pop
mov
popa
adcl
mov
dec
aam
lret
cmp
cmp
incb
movsl
cmc
xchg
dec
push
sbb
lret
add
cltd
sbb
jne
shlb
mov
push
xor
fidivl
xlat
ficoml
or
adc
pop
loope
lret
push
push
test
mov
addr16
aam
push
jecxz
jle
mov
lock
cld
or
bnd
cmp
pop
enter
sbb
andl
sahf
dec
les
adcl
dec
inc
xor
flds
test
and
cmp
fstpl
jle
xchg
cmc
int3
mov
or
stc
dec
pop
lret
lods
push
pop
and
or
sahf
cmp
xchg
les
add
push
fst
push
aaa
fucomip
ljmp
int
movsl
shrb
pop
sub
adc
jp
popf
cs
mov
and
repnz
xchg
test
xor
xchg
fsubrl
cmp
mov
dec
loop
dec
iret
jecxz
pop
pop
ljmp
fcoml
scas
xchg
or
stc
test
rolb
cmpsb
cltd
movsb
and
cmp
push
xchg
mov
rorl
cwtl
cs
test
hlt
mov
imul
test
xor
pop
outsb
daa
inc
add
fisubrl
test
aaa
gs
fwait
mov
insl
mov
daa
fwait
cmpsl
es
pop
es
ss
loopne
bound
xchg
cld
mov
call
push
out
jnp
push
pop
add
popf
or
pop
mov
sbb
lods
fadd
push
sbb
lcall
or
mov
fistl
scas
pop
pop
popa
or
jbe
dec
push
xchg
push
mov
aad
add
and
not
repz
xor
std
mov
pop
jne
xlat
jecxz
ja
add
lods
sbb
fidivrl
mov
jne
aad
les
fidivl
mov
and
scas
lods
flds
int
cmp
inc
int
xchg
add
fdivl
fcomps
push
lret
cmp
and
pop
cmp
xor
int3
push
cmp
iret
fisttps
fwait
out
sub
pop
add
rcrl
push
and
push
pop
push
mov
push
js
insl
jl
outsb
in
testb
ficompl
lods
es
mov
rcrb
adc
popf
insl
call
fldenv
popf
xor
fs
jns
sahf
push
pop
jns
insl
push
fbstp
jge
xor
into
int
cwtl
push
xchg
pop
and
loopne
js
repz
icebp
sahf
fld
icebp
inc
pop
xor
fucomp
jmp
mov
pop
mov
ja
push
xor
pushf
cmp
ljmp
push
adc
pusha
jp
pop
sbb
lcall
sub
stos
pop
mov
fldenv
pop
iret
sub
test
push
cmp
jge
inc
lods
call
mov
mov
lods
clc
fadds
xor
xor
mov
mov
insl
inc
add
lock
not
out
jae
arpl
repz
es
lods
sahf
mov
mov
sub
loop
into
add
mov
dec
add
clc
loop
ss
pop
pop
and
lds
clc
mov
and
mov
mov
pop
mov
push
outsb
rcll
outsl
in
lods
stc
jmp
clc
jl
sub
jmp
mov
inc
and
dec
les
cmpsl
int3
mov
pop
fimuls
sub
rcrl
xchg
dec
adc
mov
jne
push
in
inc
shll
ja
sarb
addr16
pop
into
scas
aad
jae
ret
push
std
ss
jl
push
lcall
xchg
orb
jge
pop
das
inc
or
mov
push
cltd
push
repz
in
xchg
mov
inc
icebp
sti
flds
std
cmpsl
lds
icebp
mov
pop
pop
xor
test
in
mov
dec
in
pushf
or
jne
pop
rcrl
add
mov
insl
lock
int
outsb
iret
lds
arpl
cmp
fneni(8087
lcall
mov
bound
add
xchg
xchg
ficoml
gs
and
xchg
xchg
mov
nop
pushf
repz
adc
add
sbb
cmc
fdivl
insl
repz
or
fidivrl
inc
aad
or
add
cmp
pop
push
pop
cmp
popa
sbb
cld
and
add
data16
xor
xchg
mov
ss
pop
add
iret
pop
sub
add
test
ljmp
xor
scas
sbb
movsb
mov
dec
in
cmp
mov
dec
fwait
add
sbb
shrb
sarl
inc
inc
push
imul
fnstsw
aad
mov
je
andb
pop
lcall
ficompl
mov
dec
xchg
sub
lahf
andl
xchg
push
repnz
sarb
mov
xorb
jne
push
adc
dec
sbb
fsubrp
mov
pop
dec
int3
loopne
xor
stos
or
push
ds
mov
push
jne
add
jne
daa
xchg
pop
ja
fs
dec
adc
sub
pop
push
sbb
rorl
mov
pop
fadds
push
xlat
fsts
fninit
or
mov
ja
pop
iret
cmp
popf
or
iret
aaa
cmp
push
inc
sub
cmpsb
mov
movsl
sbb
fisubrs
pop
cmp
xor
push
scas
sub
pushf
fisubl
mov
and
js
jne
daa
xor
mov
adc
mov
fs
pusha
ss
inc
stos
pop
into
gs
mov
mov
jbe
lret
das
lcall
cmp
popf
cmpsl
fstpt
movsl
lahf
aam
subb
adcb
or
mov
inc
inc
fsubrl
xor
cmc
adc
pop
fsubl
into
fimull
pop
push
mov
je
negb
rcrb
fmuls
iret
fucomp
lahf
ja
mov
rcll
popa
jbe
mov
popf
mov
inc
out
jg
sar
mov
mov
shrl
pop
lret
pop
mov
in
rcll
dec
nop
popa
xchg
rcll
sub
rolb
cmp
fnsave
and
into
dec
pop
std
das
sub
shrl
jmp
je
mov
jecxz
adc
rorl
test
repnz
jbe
mov
lahf
fsubl
lods
mov
in
xchg
pop
mov
enter
in
pop
lods
cmp
jne
cmp
add
jg
sahf
in
dec
fisttpl
pop
xchg
loope
push
aad
inc
inc
push
xchg
cmpsb
sbb
sarb
imul
lret
mov
xor
or
sbb
popf
and
ja
or
sahf
jl
in
lods
fcmove
cmp
xlat
mov
push
aaa
shll
jge
push
xchg
push
mov
les
aam
scas
mov
outsb
jb
jle
pop
fwait
rcl
pop
addr16
sub
cmp
or
push
orb
xchg
pushf
int3
mov
fisttpl
cmc
lret
ficomps
jp
scas
sbb
shrb
inc
cwtl
fmull
inc
or
roll
push
movsb
xchg
xor
ret
push
shll
adcb
push
ficompl
test
inc
mov
jbe
fmull
ds
daa
popf
hlt
in
mov
push
int3
push
lret
push
jbe
mov
push
cltd
fdivl
push
jbe
xlat
inc
xchg
mov
pop
push
sub
sbb
inc
jecxz
ljmp
mov
add
xchg
rcl
bound
pop
dec
pushf
rcrl
jge,pt
fcomps
stc
outsb
push
mov
imul
jge
sub
mov
xchg
daa
fldt
loope
jae
out
adc
xchg
mov
ror
sub
sahf
fidivrl
or
lret
lcall
mov
rorl
aam
mov
jp
shl
pushf
mov
push
stc
adc
adc
push
cmpl
mov
push
fimuls
push
lahf
sbb
fiadds
sbb
or
fidivrs
jp
nop
mov
lcall
ss
push
int
out
and
cmp
mov
xor
les
xor
push
or
sbb
fiaddl
rorl
shlb
mov
push
mov
dec
mov
jnp
cmc
dec
mov
pushl
mov
fisttpll
fsubl
or
xchg
sahf
sbb
mov
pop
rorb
cmc
push
jp
int3
xchg
pop
nop
pop
mov
jbe
jp
lods
pushf
inc
mov
mov
inc
ja
fidivl
dec
lcall
jbe
push
sub
dec
mov
push
push
dec
push
cmc
lret
mov
lds
jge
into
mov
jbe
jp
lods
mov
nop
fnsave
cmc
std
mov
push
inc
pushf
mov
inc
out
push
mul
lret
sarl
inc
xchg
in
xchg
loopne
push
jl
pop
cmp
mov
sarl
xlat
jbe
mov
shl
dec
dec
or
mov
xchg
fadd
xlat
sahf
sarl
mov
les
mov
cmp
push
fisubs
bsr
xchg
ds
jg
fsubrl
and
dec
stc
cld
dec
mov
xor
popa
stos
xsaveopt
arpl
add
insl
data16
aam
pop
fsubrl
int3
notl
loopne
lcall
pop
cmc
sarl
fbstp
fcomi
sub
pop
push
sbbl
popa
mov
sbb
xor
mov
pop
xor
daa
inc
cmp
movsl
xor
mov
stos
lcall
fsts
pop
and
cltd
gs
js
pop
jl
inc
cs
mov
mov
xchg
addr16
mov
jle
jg
or
mov
pop
or
fisubl
mov
mov
adc
cmp
lcall
addr16
pop
shrl
mov
sbb
sub
mov
cmp
imul
xlat
push
sub
mov
inc
mov
adc
push
es
sub
pop
mov
adc
xlat
pop
fstp
roll
mov
inc
insb
scas
aas
mov
dec
mov
dec
ss
aaa
pop
ja
xchg
push
ret
cmp
ds
push
rorl
imul
mov
xchg
push
or
shlb
adc
fcoms
cmp
mov
cltd
pop
out
sub
mov
popf
mov
pop
push
sub
cmc
insb
inc
push
sub
pop
pop
fldenv
mov
xchg
cmp
ss
int
sub
push
push
cmp
push
push
mov
aam
aad
xchg
mov
xchg
mov
xchg
sbb
repz
repnz
lods
cmpsl
mov
xchg
mov
push
xchg
clc
push
jl
je
pop
pop
cmp
push
jg
mov
push
mov
xchg
dec
jno
fsubs
xor
mov
and
cwtl
jnp
jne
int3
lods
mov
jno
cwtl
sbb
insb
mov
cmp
icebp
insb
adc
or
fwait
mov
dec
aam
mov
ret
fildll
cmp
call
dec
and
in
sbbb
scas
mov
cs
mov
cmp
fcmovnu
and
pop
sub
mov
fwait
sarl
sbbb
mov
ret
icebp
cmp
ficompl
jns
mov
ja
xor
lods
mov
push
je
cld
push
ret
lods
notb
sti
add
jo
mov
repz
mov
pop
xor
aad
testb
pop
jo
dec
mov
aaa
pop
jecxz
bound
lock
adc
cltd
stc
lcall
je
int3
inc
int
xchg
inc
lret
add
das
pop
pop
jge
jmp
lds
cmp
and
adc
xchg
jno
fs
cmp
jne
ror
dec
inc
add
push
mov
fcmovne
push
dec
int
jmp
dec
aad
int
sbb
lea
cmpsl
in
mov
lods
jl
dec
mov
mov
cmp
push
lods
dec
mov
insl
inc
pop
cmpsl
mov
aad
icebp
dec
or
lcall
mov
xchg
mov
sub
cli
jne
or
mov
mov
mov
sbb
adc
cltd
mov
sbb
lea
cmpsb
daa
mov
push
pop
jb
orb
inc
mov
adc
mov
sbb
in
movsl
sti
cmpsb
push
je
cs
cmpsl
cmp
push
adc
ficompl
dec
xorl
mov
or
int
pop
jnp
ljmp
stc
repnz
mov
xor
sub
aad
repz
ret
jl
sbb
cmp
push
jecxz
test
push
mov
jp
mov
mov
push
pop
leave
push
adc
mulw
xor
cld
aam
add
ds
sarb
pop
call
cmpsb
pop
clc
ljmp
ljmp
pop
xchg
sbb
jge
cmp
mov
call
mov
clc
int3
dec
jno
lods
nop
push
jnp
dec
pushf
push
rcrb
push
shrb
adc
pusha
pop
push
jns
icebp
repz
in
lahf
stc
outsl
sbb
ja
jns
xor
data16
ss
daa
mov
mov
mov
dec
icebp
cmp
dec
cs
outsb
lcall
pop
cmp
repnz
lds
pop
fcoml
fs
lcall
nop
mov
pop
dec
dec
adc
sub
cli
mov
xorb
pop
sbb
pop
rcrb
popf
xchg
inc
shlb
xor
push
sbb
mov
jne
cmpsb
mov
clc
movsb
leave
loop
jmp
into
cmp
ret
ds
xor
xchg
jne
mov
mov
insl
mov
hlt
fisttps
fisubrl
cmpsl
sub
cs
pop
mov
mov
cs
shll
push
cmpsb
pop
xchg
test
mov
jp
pop
jp
lock
mov
fnstenv
mov
ja
nop
jle
push
dec
xor
push
sbb
pop
leave
pop
scas
xchg
sahf
jp
lock
cwtl
jbe
test
ja
jp
inc
xchg
jge
mov
cmp
jmp
mov
push
push
imul
lds
fstl
pusha
xchg
pop
fcompl
mov
clc
fsubs
or
je
jo
dec
lret
lret
dec
lcall
xchg
in
jmp
pop
mov
cmpsb
popa
pop
fcoml
or
int3
pop
xlat
pop
or
fidivrl
push
or
jne
cmp
sub
loope
hlt
sub
lcall
sub
js
into
xlat
xchg
repz
fstpl
cmp
add
jg
or
and
insb
pushf
rol
inc
mov
mov
int3
in
pop
jnp
cmpb
repz
xlat
or
add
aad
push
mov
test
xor
and
arpl
adc
sbb
sbb
int
testb
xchg
mov
push
xchg
xlat
jle
jne
mov
lea
mov
or
cmp
imul
pop
lods
sub
xchg
aad
jmp
les
fmull
inc
push
ljmp
out
jnp
fcmovnbe
pop
adc
shll
adc
popf
gs
inc
xlat
jg
mov
cmp
rol
xchg
dec
call
jns
sub
cld
jg
cmp
pop
sub
adc
push
out
arpl
mov
pop
pop
insl
lcall
sub
add
and
push
sbb
push
test
xchg
mov
int
daa
push
jecxz
aaa
sub
fdivs
bound
popa
stc
lahf
jno
add
push
xchg
push
pop
out
gs
int3
aaa
push
ja
mov
out
push
insl
ret
mov
imul
test
frstor
int
cmpl
lods
int
jmp
iret
inc
scas
outsb
lods
mov
dec
xor
fstl
push
inc
ja
add
pushf
add
aad
int
ret
mov
mov
push
lods
mov
imul
dec
lods
mov
pop
adcb
bound
dec
sub
mov
pushf
jb
mov
jecxz
jmp
and
mov
dec
dec
fistpl
push
es
cs
cmpl
call
pop
jns
xor
cmp
stos
je
fucomp
adc
sbb
sbb
hlt
ds
cmc
out
jecxz
xor
dec
mov
mov
cmpsb
mov
sub
jmp
hlt
addr16
and
repnz
fcmovnbe
cwtl
inc
and
cmp
shrb
pop
lock
pop
xchg
and
xchg
push
mov
int
xchg
mov
mov
mov
mov
dec
ficompl
imul
mov
xchg
sbb
xchg
mov
cs
push
fidivrl
lods
push
xchg
mov
mov
jmp
pop
imul
popa
ss
inc
aad
cli
dec
xor
push
xlat
fldcw
out
pushf
popf
and
dec
fcoms
pop
test
sti
shr
push
push
and
int
int3
int
data16
ret
imull
inc
pop
loopne
outsb
les
lret
rclb
mov
shrb
pushl
xchg
inc
mov
movsb
dec
xor
out
pop
scas
sub
xor
shrl
pushl
pushf
mov
cmp
add
cs
call
std
xor
jmp
into
daa
shlb
mov
out
jo
int3
outsl
sbbb
pushf
push
ret
inc
mov
inc
xchg
rcll
leave
lret
mov
xchg
mov
jge
jp
sub
push
adc
nop
and
fmull
repz
or
or
aam
mov
cltd
roll
jecxz
lea
cmp
mov
xor
push
daa
sub
pushf
outsb
loop
outsb
add
mov
jge
jg
mov
out
lret
jno
jle
or
cmp
adc
outsb
das
xlat
jge
in
test
pop
mov
xor
sbb
loop
repnz
sbb
fcmove
push
push
xor
xchg
jl
test
push
push
popf
mov
icebp
or
pusha
leave
fcmovbe
lahf
pop
call
push
sub
andl
hlt
dec
fcoml
sti
iret
jne
sub
jecxz
aam
add
pop
jmp
jo
scas
pop
mov
ret
xor
rcll
dec
roll
mov
xor
andl
dec
adc
jne
mov
cmpb
lahf
dec
push
pop
xor
fstps
inc
fcmovb
sbb
lea
adc
cmp
ss
pop
scas
inc
inc
out
jno
xchg
repz
jmp
cmp
sub
insb
dec
dec
lock
stc
pushf
mov
outsl
std
outsb
in
dec
movsb
add
les
ds
xor
push
mov
jp
fsubrs
lds
dec
cmpsl
pop
daa
sti
ficoml
loopne
pushf
outsb
inc
lcall
out
sub
xor
lods
loope
pop
jp
jbe
xchg
mov
in
test
pop
scas
inc
push
push
xchg
xchg
scas
adc
cltd
jge
imul
clc
lcall
cld
dec
addr16
pop
mov
mov
shl
sub
adc
xchg
cmpsb
je
lods
dec
inc
dec
popa
test
xchg
cwtl
sub
cmp
sub
lret
roll
rcrl
sbb
stc
insl
dec
lcall
pop
ljmp
mov
xor
push
rorl
incb
jae
rcll
dec
push
jnp
hlt
dec
leave
out
inc
pop
jne
pop
sub
mov
fisttpl
xor
icebp
sti
cld
or
incb
daa
loopne
jp
xor
repnz
or
jns
inc
es
xchg
mov
or
lret
mov
cli
pop
jbe
sbb
add
pop
or
mov
scas
shrb
loope
std
mov
mov
sbbb
mov
jb
mov
aaa
pushf
roll
repz
sbb
cmp
pop
je
ret
and
enter
cmp
and
push
adc
dec
adc
jns
lea
mov
mov
inc
or
xchg
in
sbb
js
iret
cmp
push
mov
lods
sub
lds
jne
mov
push
add
into
icebp
ss
sbb
subb
insl
push
dec
or
or
out
loopne
mov
cli
sbb
cmp
cmp
aad
sahf
cmp
movsl
fstl
pop
inc
pop
scas
and
out
push
out
int3
xor
push
dec
cwtl
mov
xchg
pop
test
push
pcmpgtw
orl
dec
test
lahf
loop
mov
je
dec
xor
test
lock
mov
faddp
ja
lods
mov
cmc
xchg
xor
mov
xchg
sub
aaa
pop
add
pop
aad
in
movsb
adc
mov
cmpb
push
imul
test
xchg
mov
ja
je
push
stc
fdivs
or
mov
xchg
aam
ljmp
adc
and
ss
idivb
jne
cmp
jnp
popa
pop
xor
or
addr16
lods
mov
xchg
rcrl
clc
rorb
scas
push
jp
ljmp
mov
arpl
leave
cmpsl
ss
sub
gs
push
fiaddl
in
sti
fdivrl
push
lahf
jns
push
xchg
out
pop
xor
sub
add
outsb
mull
stc
loop
shlb
in
cmp
sbb
add
sub
les
xchg
popa
stc
pop
cmp
fimull
xchg
jl
shrb
xchg
and
cmp
pop
cwtl
pop
imul
lret
dec
test
dec
insb
cmp
push
sub
sbb
gs
xchg
push
and
sub
faddl
mov
enter
ds
mov
filds
inc
adc
pop
mov
mov
adc
cmp
adc
add
mov
mov
push
pusha
dec
xor
lock
jle
dec
negb
mov
add
mov
aad
xor
sahf
rcrb
push
mov
sbb
push
mov
jecxz
push
jle
adc
xlat
push
pop
pop
popf
push
aad
out
mov
cmp
lock
xchg
lea
adc
fisubl
and
roll
mov
xor
ficoml
add
clc
idiv
setge
outsl
test
and
movsb
das
dec
fstl
push
sahf
push
into
je
and
xlat
ljmp
xchg
dec
mov
sub
lcall
sti
inc
mov
cltd
jnp
cmc
mov
mov
stos
or
pop
scas
jne
pop
mov
pop
and
pop
xlat
mov
fistpl
out
mov
repnz
movsb
rcll
push
and
mov
inc
sub
ficoml
mov
xchg
sahf
aam
popa
push
add
lds
sarl
movsl
push
cmc
mov
gs
rol
push
ds
push
mov
jge,pt
cwtl
repnz
mov
fdivrs
push
int
rcl
pop
sarb
dec
cmpsl
insb
push
sub
int
dec
inc
lods
std
popa
insl
jmp
jl
in
dec
pop
rcr
iret
mov
jo
inc
lret
aas
data16
aam
adc
stc
ret
shll
mov
adc
in
push
int3
ja
pop
mov
or
cli
inc
xlat
fwait
and
enter
cltd
cmp
call
das
or
sahf
and
clc
xor
inc
mov
ja
mulps
sub
pop
clc
jge
test
sbbl
outsb
addb
ret
xor
mov
dec
xchg
cmc
lret
mov
push
std
push
into
xchg
mov
loope,pt
jb
in
std
pop
lods
ficompl
dec
pop
popf
xor
clc
fistl
faddp
aad
push
jmp
add
ljmp
push
and
cli
ljmp
les
xchg
inc
clc
xor
imul
sbb
fidivl
dec
xor
je
in
mov
fsubrl
dec
mov
add
jnp
test
inc
inc
sub
loop
cs
jmp
aam
cmpsl
mov
fdivrl
mov
jp
sbb
push
jl
lds
mov
fiaddl
cmp
aad
aad
dec
push
aam
fs
sbb
lea
fmuls
jecxz
imul
scas
push
inc
lock
or
push
mov
scas
call
imul
aam
mov
sub
scas
das
stos
sub
clc
pop
dec
add
jmp
mov
inc
sub
jno
mov
jbe
push
movsl
and
add
inc
push
and
or
inc
mov
shlb
insl
in
mov
xchg
push
insl
loop
insl
pop
adc
fnstcw
rcr
jge
out
in
adc
mov
inc
pop
fistpl
xchg
push
out
sbb
in
enter
push
std
pop
cmp
mov
es
loopne
mov
cmpsl
pop
in
mov
cmp
mov
shl
rcr
pop
mov
mov
popa
dec
test
jnp
ds
xchg
sub
xor
pop
lcall
jnp
xor
leave
pop
repnz
mov
cmpsl
sbb
outsb
pop
sahf
das
pop
bnd
mov
xchg
xor
rol
fs
cmpsb
loopne
jns
xchg
adc
setne
mov
pop
mov
loop
push
sub
mov
xchg
out
cmp
fs
clc
adc
push
ret
aas
ljmp
pushf
pop
jmp
dec
rcll
push
pop
or
int3
idivb
fnstsw
dec
into
ss
dec
or
xor
mov
ret
mov
fdivl
dec
pusha
test
int3
cmpb
inc
sub
adc
pminsw
jno
xor
insb
jbe
push
divb
or
fcompl
and
mov
scas
rclb
call
ret
and
mov
aad
sbb
fnstsw
rol
stos
es
lahf
repnz
jge
aam
daa
in
sub
mov
mov
fstl
push
clc
fwait
push
pslld
xor
pop
jo
pop
loop
or
mov
clc
push
and
pop
out
mov
mov
mov
into
rorl
ret
or
outsb
jo
addr16
mov
dec
repnz
stos
cmp
jo
clc
sti
adc
pop
or
jne
mov
mov
cmp
ficompl
jae
in
jne
jns
roll
in
push
fadds
pop
popa
push
movsl
fstl
adc
insl
mov
xchg
pop
push
lock
je
pop
mov
adc
push
leave
cmp
int
aad
repz
not
mov
push
fcom
sub
pop
imul
pop
bound
push
cmp
into
xchg
fnstcw
pop
push
or
inc
push
add
jne
xor
test
sub
insl
cmpsb
mov
mov
aas
shlb
pop
adc
aas
xor
pop
jl
mov
inc
push
push
je
pop
cmp
inc
adc
stos
imul
sub
push
cmc
out
pop
pushf
in
add
lock
push
add
pop
mov
sub
je
mov
insb
popf
aad
push
adc
test
mov
call
sbb
out
xchg
dec
pop
xchg
adc
stc
jo
add
mov
sbb
push
inc
cli
rcrl
cwtl
lds
push
insb
icebp
or
cmp
and
adc
lods
imul
adc
mov
dec
push
push
iret
sub
xchg
sub
push
sar
out
rcrl
mov
xor
add
or
push
xchg
ret
xor
jbe
pop
leave
pop
mov
fadds
xor
mov
dec
subb
xchg
cmpl
pusha
lods
stos
mov
inc
test
cmp
inc
fdiv
aam
sub
mov
ds
movsb
pop
inc
push
push
dec
ja
push
je
sahf
ds
pop
jl
es
and
sub
jbe
test
push
mov
mov
aam
jecxz
push
lock
not
or
dec
call
mov
icebp
push
repz
subb
mov
mov
lcall
lds
add
sbb
xchg
pop
lds
cmpsl
sub
fdivrl
test
movsb
test
pop
pop
cmp
pop
xchg
rcl
pop
add
int
jnp
dec
mov
inc
xchg
js
dec
jo
xchg
sbb
sti
rcl
mov
mov
inc
fs
lret
popf
sahf
loop
xchg
mov
mov
pushf
fs
pop
shrb
mov
push
mov
mov
int
add
divl
or
mov
les
adc
gs
push
xchg
out
sahf
and
mov
cltd
or
pop
fnstsw
cwtl
les
mov
add
sbbl
sub
insl
daa
stc
pop
leave
shll
mov
fs
call
mov
out
repz
daa
fdivl
xor
cwtl
repnz
jmp
inc
call
sub
and
xor
mov
pop
imul
shll
lock
imul
push
stc
mov
shrl
pop
addb
cwtl
jno
dec
shll
mov
int3
lods
xchg
cmp
xor
into
shlb
push
push
pop
call
push
inc
xchg
cs
pop
and
xor
xchg
mov
xchg
lcall
jne
movsb
mov
sbb
repnz
sub
mov
pop
mov
jnp
adc
cmp
push
daa
push
fld
push
dec
dec
xchg
jne
xchg
xchg
adc
jecxz
leave
out
pop
push
movsb
enter
mov
jle
repz
cmp
addr16
mov
iret
popf
pop
sahf
lea
enter
cld
mov
cmpsl
mov
aam
mov
pusha
lods
xlat
test
fdivl
lock
fcoml
mov
dec
insb
int
scas
mov
mov
push
cmpsb
ret
cmp
pop
mov
pop
cmp
rclb
ja
aam
push
push
imul
xchg
ret
out
in
xor
and
pop
int
pop
jp
xor
mov
shll
lods
cmp
lea
sub
out
cmpsb
inc
adc
xor
fdivr
ror
lea
and
pop
push
pushf
je
lret
mov
jle
es
out
mov
test
repz
xor
psubw
xchg
sahf
jbe
pushf
pop
lret
lods
lcall
fsubrs
insl
in
aam
mov
cli
mov
cld
dec
ljmp
ja
xchg
xchg
out
inc
dec
jle
cmp
lods
jae
enter
mov
sub
sub
jmp
dec
ror
lods
xchg
sub
pop
int
rcrb
iret
mov
add
mov
sub
sub
mov
pop
cmp
aam
xchg
sub
lods
mov
pusha
loop
mov
aad
pop
ret
jb
leave
repnz
fcoms
aad
pop
cmp
lea
test
test
mov
pop
out
imul
sbbb
ja
das
adc
pop
stos
popa
jae
adc
outsb
insl
xor
dec
dec
mov
push
aaa
lods
ja
inc
sub
mov
movsb
shlb
fisubl
mov
lods
mov
mov
jne
leave
mov
mov
mov
pop
cmpsb
jne
leave
dec
mov
push
xor
cmpsb
cmp
push
fadds
push
js
cmp
jecxz
clc
ret
ljmp
pop
xchg
jge
rcl
adc
test
addl
shll
pop
adc
bndstx
pusha
push
mov
imul
cmc
xchg
mov
fdivl
inc
in
into
lcall
pop
dec
lock
call
jae
popa
inc
rclb
push
and
jmp
xchg
std
sbb
pushf
adcb
dec
pop
imulb
data16
into
xchg
testl
ds
ret
call
fldl
cld
mov
stos
inc
repz
cltd
je
in
ds
dec
stos
lea
cmp
repz
ljmp
hlt
xor
sub
or
and
fnstenv
lahf
ret
roll
shll
mov
inc
pop
adc
jnp
je
cli
add
push
fwait
or
mov
pushf
dec
sbb
int
in
orb
mov
push
mov
adc
jge
xor
inc
mov
jo
mov
pop
fistpl
shll
jns
inc
xchg
mov
or
adc
mov
and
das
pushf
bound
cmc
insl
sub
mov
cwtl
loope
pop
das
pop
lods
insb
fsts
shlb
scas
push
add
adc
ficoms
insl
aam
sub
jns
add
xchg
pushf
repnz
ss
leave
lds
out
push
xor
jae
call
ror
push
outsb
and
insl
dec
out
xchg
testl
push
mov
loopne
push
ds
lcall
sbb
and
popf
aam
mov
popa
sbb
or
aam
and
xor
inc
pop
sar
xchg
jmp
xor
mov
aam
xlat
push
adc
xor
es
int
push
push
dec
cs
popa
dec
outsb
pop
push
add
stc
pop
or
popa
pusha
sub
orb
test
or
stos
outsb
incb
int
sub
mov
pop
fiaddl
js
sub
add
fcompl
cltd
pop
stc
int3
push
js
jg
leave
inc
stc
push
ret
mov
das
dec
les
mov
cmpsb
aas
cld
push
call
pop
int
jns
fnstcw
sbb
cmp
sub
sub
jecxz
in
xchg
lods
xchg
andl
dec
mov
sbb
fildl
xor
movsl
xchg
xchg
cld
dec
adc
cltd
shll
lret
je
add
sahf
jne
lea
add
push
out
push
xchg
les
pop
mov
mov
xor
push
pop
pop
insb
lods
cld
dec
popw
or
movsl
ret
add
in
cmp
inc
ljmp
int
add
xor
jmp
dec
fcomps
inc
pop
pop
std
aas
shl
jle
add
nop
repnz
xor
mov
xor
cld
js
pop
jmp
and
mov
push
aam
pop
lea
outsb
pop
xchg
ret
mov
sbb
fstl
cld
and
sub
cwtl
aaa
mov
cmp
aam
ret
scas
jo
stos
adc
inc
pop
out
mov
xlat
adc
rcrl
fxch
inc
movsl
fwait
ret
push
aaa
les
cmpsl
xor
xchg
cli
push
loop
mov
pop
hlt
rorl
jl
jne
xchg
mov
xlat
cmp
sahf
popa
mov
les
adc
sbb
shrl
inc
dec
push
inc
inc
lods
xchg
dec
inc
sbb
push
pop
mov
sbb
push
xchg
adc
lock
inc
into
repz
in
add
lret
xchg
ficoms
stc
xor
insb
sub
cmpb
dec
lods
pop
push
scas
pop
and
xchg
adc
hlt
nop
and
out
js
push
mov
inc
ljmp
popa
idivb
popf
aam
push
sbb
cmpsb
lcall
das
jle
call
sub
out
jge
in
push
sub
xchg
sbb
inc
jne
das
mov
xchg
xchg
inc
mov
mov
xchg
das
ja
lds
sub
jle
mov
cmp
js
enter
xor
pop
inc
pop
sub
lods
add
push
aam
jo
xor
out
sarl
pusha
scas
das
jbe
or
adc
pop
xchg
and
arpl
mov
push
scas
scas
mov
sbb
mov
insl
jno
push
loopne
sbb
pop
cs
mov
arpl
mov
jp
push
mov
lds
clc
aam
mov
sub
xchg
enter
aam
jbe
mov
jb
sub
dec
hlt
lahf
inc
jecxz
and
pop
sub
dec
rorl
inc
cmp
jl
fcmovnbe
stos
loope
mov
jl
scas
int3
and
cld
sti
repnz
popf
pop
jmp
jns
test
or
stos
out
aas
mov
inc
pop
sahf
shll
sarb
jne
pop
sarb
imul
xchg
shll
das
dec
fstpt
sahf
push
loope
pop
xor
lea
push
les
scas
mov
inc
sub
fcmovu
mov
insl
or
mov
dec
pop
xchg
insb
mov
fistl
stc
lret
inc
leave
mov
pop
mov
fwait
mov
lret
push
mov
mov
leave
jg
nop
jb
js
cmpsb
jl
mov
jp
fldcw
pop
xchg
mov
jnp
xlat
pop
cmpsl
dec
sub
and
iret
lahf
cmp
and
cmpsb
jae
decl
mov
int3
into
fsts
push
jne
inc
cmp
push
pushf
std
aad
ret
adc
loope
cmp
rclb
mov
push
xchg
mov
pop
cmp
stos
xchg
or
sub
pop
dec
sarb
ret
daa
push
cmpb
icebp
xchg
adc
mov
pop
adc
out
jbe
mov
pop
stos
out
jp
rol
cltd
push
cmp
fldcw
lcall
repnz
sbb
mov
xlat
fs
enter
ss
mov
repnz
aam
roll
adc
pop
fwait
data16
sarb
sysenter
jnp
ficomps
cmpsl
ja
shlb
fists
and
ror
push
enter
xchg
ficompl
or
outsl
xor
cmp
sub
scas
xor
pop
mov
jge
xlat
adc
push
lret
stos
sbb
mov
sub
push
rcrl
insl
int
pushf
xchg
adc
scas
jge
inc
xchg
cwtl
decb
push
cmp
xchg
dec
lret
dec
lcall
ret
ret
pop
mov
daa
push
add
ljmp
imul
jl
pop
lcall
fcompl
lds
pushf
sub
add
shll
loope
stc
outsb
mov
xor
gs
xchg
lret
jae
andps
cmp
ljmp
xor
out
mov
push
jnp
xor
mov
jmp
sbb
fstps
sbb
xchg
mov
jecxz
add
repz
leave
pushf
xor
mov
hlt
lock
inc
test
addr16
stos
out
int
push
hlt
pop
jo
mov
jl
xchg
movl
call
mov
push
pop
sub
in
xchg
movsl
int
mov
pop
sub
cmpsb
push
lods
cmp
out
addl
cwtl
mov
int3
mov
mov
inc
pushf
xor
call
adc
mov
stos
sub
fwait
xchg
adc
sti
xor
jo
test
repz
mov
dec
dec
ficompl
das
addr16
out
jmp
fmull
push
jecxz
jp
std
sbb
fld
fadd
xor
mov
mov
insb
mov
mov
sbb
les
sub
fsubrs
push
lahf
repz
or
in
call
enter
adc
pushf
xor
push
inc
mov
fisubrl
add
mov
dec
dec
addr16
rcl
fmull
push
pop
xor
adc
lea
push
jecxz
mov
jl
enter
nop
dec
fcoms
cmpb
in
or
scas
std
cmpsb
aam
cltd
cmpsl
fcmovu
sbb
mov
popf
sbb
dec
int3
jbe
xlat
pop
mov
and
xchg
add
mov
rcr
sti
push
mov
mov
scas
or
pop
cld
sub
fnstenv
imul
pop
lea
je
sarl
inc
or
xchg
add
aam
test
pushf
std
in
mov
lret
xchg
sub
pushf
sub
mov
or
mov
push
pop
jl
mov
fstp
dec
pop
pop
jge
add
in
dec
mov
xchg
cmpsb
sahf
in
adc
dec
dec
adc
pop
mov
jle
cmp
xchg
mov
sub
fmull
cmpsb
test
mov
vpminub
roll
loopne
dec
icebp
iret
loope
pop
fcompl
dec
in
cmp
fnstcw
lods
out
ds
add
adc
loop
aam
xor
cs
ss
out
mov
push
or
sub
inc
sub
insl
dec
das
jbe
jp
dec
xchg
xor
push
mov
lret
fwait
call
mov
push
push
cmp
movsl
pop
test
fwait
push
mov
cmp
fstpl
jne
inc
popf
aaa
pop
push
sbb
mov
movsl
sbb
pop
mov
stc
mov
fdivl
int
add
mov
out
call
les
lods
push
movsl
mov
lods
ficoml
roll
movsl
in
cld
nop
xor
aam
fnstcw
jl
xchg
xor
cwtl
pop
aam
outsb
cmp
repnz
je
gs
pop
push
and
test
mov
sub
pop
adc
or
idivl
and
sbb
popa
jo
jecxz
mov
testl
mov
jne
mov
lods
data16
fdivrs
repz
sub
mov
mov
jbe
loop
test
into
pop
out
pop
out
fucomp
inc
lcall
loop
push
or
mov
pop
mov
lock
push
jbe
pusha
pop
dec
xchg
and
sbb
rol
inc
fcmovnbe
sbb
sbb
jmp
add
push
push
lcall
lea
call
call
lret
sub
out
pop
ds
test
pop
sbb
je
dec
fwait
add
mov
mov
add
scas
lds
sahf
scas
mov
mov
not
int3
iret
xchg
mov
pop
xchg
jns
xchg
je
into
cmp
dec
sub
lods
pop
mov
push
test
adc
insb
mov
adc
jle
testl
inc
cmp
lret
roll
stos
mov
das
jne
rclb
ss
stos
xor
fldcw
xchg
das
fwait
add
dec
sub
jecxz
xchg
sub
insl
pop
push
mov
pushf
faddl
pusha
sub
loop
shll
rorl
push
sahf
shrl
jb
or
ffree
fwait
jp
or
fistpll
sahf
jle
pop
mov
mov
test
rolb
fdiv
push
mov
sub
adc
cmpsb
leave
xchg
jns
cmc
cmp
xchg
mov
mov
or
test
xchg
fcmovu
mov
jmp
xor
xchg
push
cmpsb
pushf
fimull
pop
push
hlt
mov
aad
push
sbb
push
sub
stc
xchg
repz
loop
mov
sarb
and
aas
mov
setne
lret
and
adc
andb
xchg
cmp
cltd
and
jp
movsl
lods
fdivr
mov
push
test
fidivrs
and
das
push
frstor
aad
insl
fldenv
fstl
inc
xchg
cmpsb
add
rcrl
lods
xchg
pop
lods
fistl
push
jge
jnp
les
adc
shlb
popl
repnz
fstpt
push
mov
jbe
push
cltd
fstpt
mov
cmpsl
test
jle
std
in
pop
outsb
mov
mov
mov
inc
mov
and
xlat
es
mov
push
dec
xchg
mov
lret
stos
cmp
or
cs
cmp
jb
insl
enter
and
sarb
addr16
push
pop
cld
dec
pusha
pop
leave
push
lds
outsb
pop
imul
mov
sbbb
popa
int3
std
lret
lds
pusha
and
adc
xchg
aam
cld
rcl
sarl
arpl
mov
push
arpl
out
sahf
sbb
jl
and
fs
aas
sahf
mov
rclb
repz
insb
mov
pop
dec
sbb
pop
jg
mov
pushf
mov
adc
jle
iret
pop
push
mov
push
adc
adc
inc
popf
xchg
pop
xor
loop
cli
push
aaa
pushf
fcomps
rcll
add
iret
push
rorb
fbld
fmull
add
pop
repz
fs
test
push
xor
sbb
loop
pushf
xor
insl
out
btr
fcmovnb
into
adc
mov
enter
fdivrl
inc
mov
hlt
pop
pop
lods
popf
sub
push
pop
leave
pop
mov
pop
lods
adc
cltd
xchg
ss
pop
xor
cld
pop
or
mov
xlat
sub
sub
lahf
pushf
incl
mov
sbb
out
xchg
inc
xchg
push
ja
ljmp
cmp
jnp
xor
xchg
fldl
pop
inc
fcomps
or
xlat
mov
pop
mov
mov
lods
js
adc
scas
aad
lods
jmp
adc
jge
ret
lds
jmp
clc
mov
or
adcb
aam
lret
fisubl
data16
inc
jmp
mov
out
xchg
push
inc
lcall
mov
repnz
popa
pop
xor
pushf
xchg
mov
out
push
nop
pop
push
push
repnz
mov
cmp
dec
pusha
daa
lds
sub
outsl
push
fstpl
xlat
xor
popa
flds
test
jg
loop
fiaddl
pop
push
lds
scas
jle
mov
pop
lahf
xchg
les
mov
cmpsl
fwait
pop
cmp
repz
insl
sbb
aad
dec
inc
dec
repz
pop
xor
scas
and
movsl
rdtsc
mov
and
into
lcall
jmp
out
mov
mov
pushf
pop
lods
insb
rcrb
mov
std
cmp
and
loop
add
cmp
rcll
sbb
push
inc
insb
cmp
loopne
pop
jmp
in
dec
leave
imul
sarb
and
es
imul
stc
sarb
outsb
loope
shrl
mov
test
sub
or
push
xor
jo
xchg
jge
and
js
and
lahf
sub
lcall
mov
jbe
popf
clc
xor
dec
pop
insl
les
sbb
hlt
test
adc
lods
mov
xchg
shll
clc
sar
xor
out
or
jmp
outsl
rcl
mov
mov
mov
mov
call
scas
dec
ljmp
les
fisubl
sti
mov
dec
rorl
dec
ficoml
fs
insl
ret
nop
inc
push
dec
cmpsl
jp
fcomi
lods
jnp
jo
mov
push
test
push
xor
dec
call
jle
in
jecxz
jge
enter
inc
xor
leave
xchg
jl
out
or
pop
repz
in
jle
bound
imul
mov
sti
jns
ja
int3
stc
mov
xor
psrad
call
pop
leave
mov
lods
dec
repz
in
test
arpl
in
es
push
pop
ja
dec
ss
lahf
cltd
push
out
pop
pop
roll
push
pop
push
xchg
cmpsl
lcall
dec
lea
adcl
ss
add
adc
inc
popf
mov
pushf
filds
adc
lock
sbb
mov
popa
negl
rcll
xlat
lcall
cmc
data16
fldl2t
pop
imul
inc
pop
int3
mov
push
fsubp
pushf
mov
mov
adc
and
fs
test
fwait
shll
repz
out
lods
add
repz
pop
pop
movsb
mov
dec
shrb
pop
ret
cld
fsubrl
pop
aam
std
popa
out
mov
inc
js
push
fcom
jns
addr16
imul
ja
iret
sbb
xchg
sbb
ss
xchg
or
push
push
mov
int
lock
shrb
adc
mov
xor
sbb
fwait
cmp
pop
add
mov
mov
push
mov
jns
xchg
popf
outsb
inc
mov
insl
and
divl
popa
cmp
cltd
pop
xor
xchg
mov
fcomp
fs
shll
mov
scas
pop
mov
xchg
mov
mov
fmull
mov
cmp
and
sub
hlt
out
lret
neg
mov
movsb
add
shr
icebp
fistpl
pop
aad
fcomps
mov
aam
xor
or
pop
pop
cwtl
jns
mov
fwait
pop
aad
xchg
pop
mov
sahf
or
add
jae
fcoml
repz
or
pop
test
or
jg
lea
das
push
cmp
in
adc
push
xchg
fidivl
jne
mov
nop
loop
push
arpl
outsb
sbb
outsb
pop
sahf
mov
xor
cld
jbe
stos
pop
jp
push
mov
pop
outsl
mov
cmp
sbb
mov
lcall
lods
fstl
push
rep
push
and
cmpsb
xor
sub
pop
pop
js
std
adc
xor
mov
test
mov
mov
jle
fdivrs
mov
mov
jge
into
dec
inc
or
daa
mov
cmp
test
pop
fisttpl
xchg
sbb
ja
dec
ss
xlat
cmp
imul
rcll
xchg
js
add
cmp
sbb
adc
xor
iret
stos
and
gs
inc
xchg
push
fadd
fdivrl
push
jnp
icebp
pop
dec
movsl
jbe
sbb
pop
pushf
shll
and
push
cmp
push
js
cmp
sbb
dec
adc
add
sbb
mov
cld
aad
pop
cmp
mov
xchg
inc
mov
or
mov
ja
xor
push
adc
and
pop
add
out
adc
pop
sar
mov
sub
sbb
jle
sub
mov
shll
stc
data16
ds
inc
jl
gs
mov
movsl
sahf
pop
add
xor
imull
repz
out
pop
mov
jg
or
sub
pop
mov
daa
ds
data16
jge
insl
outsl
loopne
nop
sbb
repz
cmp
out
mov
movsb
sub
adc
mov
jnp
jp
pushf
mov
jae
test
das
push
lret
gs
cmpsb
test
ss
inc
pusha
jmp
push
call
iret
sti
divl
pop
xchg
cmp
test
bound
push
xor
jmp
fs
inc
mov
xchg
rol
mov
outsb
cltd
xlat
fcmovnb
cmp
pop
push
shll
jo
int3
jo
jge
and
aas
leave
negl
mov
and
pop
mov
dec
daa
cmpl
insl
or
jbe
shrb
cmpsb
push
sub
lahf
pop
dec
pop
test
sub
cmp
dec
dec
leave
sbb
pop
mov
mov
int3
xchg
popf
mov
xchg
jnp
aaa
dec
adc
fstps
mov
adc
xchg
xchg
push
pop
int3
mov
mov
jbe
popa
mov
add
or
insb
mov
ds
adc
pusha
jle
test
ja
jne
sbb
stc
out
sbb
mov
les
insl
jl
adc
gs
jno
inc
imulb
js
int3
push
dec
daa
adc
sub
insl
dec
mov
insb
pop
cwtl
mov
push
stos
xchg
mov
ljmp
mov
fstps
ret
sub
test
mov
ds
out
scas
das
imul
jmp
fst
mov
fstl
nop
inc
leave
push
sarb
xor
mov
sub
mov
aad
add
push
push
sub
mov
cld
das
dec
shrl
jp
push
daa
lcall
ja
sub
outsb
push
sbb
mov
rorl
push
int
mov
cld
int
add
leave
xor
in
shl
fsubr
stc
dec
jl
sub
xchg
push
or
jne
mov
sbb
xchg
xchg
sub
pop
cmc
fnop
xchg
stos
jp
nop
jne
push
mov
gs
mov
sahf
in
sbb
outsb
cmp
or
add
mov
int3
test
jecxz
mov
sbb
mov
paddw
mov
or
xlat
stos
pop
clc
icebp
dec
mov
push
rcrb
jmp
push
daa
dec
push
mov
lcall
dec
jp
or
pop
cmp
lds
cmpb
xchg
scas
jns
push
xor
lods
lods
pushf
or
adc
ret
xchg
popa
inc
rolb
mov
les
pop
cltd
sbb
fsubl
aam
lea
push
lcall
int
out
and
test
outsl
hlt
mov
mov
xor
rclb
cltd
fcom
lds
sub
inc
xabort
inc
sbb
inc
sbb
inc
dec
idivl
dec
pop
inc
scas
rol
mov
pushf
mov
ror
sti
sbb
adc
mov
mov
dec
push
lcall
repnz
cmp
shrb
nop
ds
mov
call
loopne
push
and
in
sbb
jecxz
call
cli
push
adc
leave
mov
jecxz
mov
jns
addr16
aad
dec
xchg
lods
je
inc
stos
xchg
mov
rcrb
mov
cmp
adc
pop
jl,pt
shll
inc
in
roll
push
pop
movsl
pop
fdivs
lahf
out
roll
cmpsl
dec
js
push
rcr
lcall
outsb
testb
cwtl
push
iret
xchg
sbb
int3
int
dec
mov
sub
andb
mov
addr16
hlt
in
mov
cld
cmp
push
inc
mov
jb
push
loopne
aam
gs
lcall
mov
sbb
scas
dec
shl
out
push
jns
je
mov
fst
insl
cmp
fdivrs
push
aaa
sbb
dec
jbe
mov
push
push
pop
cwtl
sarl
push
mov
push
iret
jp
xchg
sti
andl
xchg
loopne
push
mov
js
nop
jge
in
mov
data16
in
lods
insb
fidivl
sub
ds
mov
mov
or
mov
sahf
lds
int3
jmp
push
clc
fyl2xp1
mov
jns
cli
pop
xchg
mov
test
mov
jge
adc
jge
sub
sti
pop
pop
andb
aaa
fxch
test
inc
xor
pop
or
dec
mov
jge
dec
xchg
or
xchg
xchg
cmpsl
stos
dec
xchg
mov
inc
shrl
xchg
cmp
push
or
push
rcrb
mov
int
adc
push
in
jo
pop
cmp
int3
dec
inc
bound
mov
cmp
out
dec
in
lock
mov
shll
int3
cmpsl
cmp
xchg
push
rorl
inc
push
movsl
push
push
inc
push
push
neg
imul
sbb
push
decl
das
jno
jl
lcall
mov
push
out
mov
xchg
pop
jnp
xor
adc
xchg
fadds
jno
xlat
into
outsb
inc
inc
lcall
stos
daa
cmc
mov
aaa
push
stc
push
enter
test
in
std
pop
int
lahf
data16
movsb
inc
mov
testb
xlat
adc
scas
lods
xchg
addr16
adcb
push
jg
jmp
cmp
xor
arpl
lock
lret
push
ds
push
and
dec
jmp
rcr
dec
pop
push
je
pop
mov
cmp
insl
or
stos
dec
and
ja,pn
fstpl
test
sbb
jns
xchg
or
in
mov
mov
daa
out
dec
cmpsb
mov
cmp
and
lret
jmp
xchg
int
jmp
arpl
ss
xorl
dec
fnstcw
xor
xor
inc
pop
inc
enter
lds
pop
push
stos
pop
das
cmpsl
jno
je
imul
pcmpgtb
shll
daa
dec
daa
cli
sub
adc
mov
insl
aad
popa
mov
push
movsb
adc
aam
rorl
and
addr16
pushf
aam
push
dec
aad
adc
ret
daa
adcl
cmp
pusha
aam
ja
mov
cmp
or
sub
cmp
mov
notl
inc
pop
addl
movsl
stc
rcr
pop
in
inc
repnz
std
sbb
ds
and
lds
rcll
cmpb
repz
cmp
es
imul
sbb
cmp
int
xchg
sub
mov
cwtl
movsb
mov
jmp
in
jp
int3
stc
flds
jno
mov
in
icebp
nop
pusha
lock
cmc
push
call
stos
xchg
fldenv
mov
jmp
mov
cltd
mov
sti
pop
ljmp
mov
aad
in
daa
decl
faddl
add
aaa
jbe
les
jne
push
rol
dec
clc
xchg
push
scas
jg
xchg
sahf
loope
ret
adc
pushf
xlat
push
mov
add
adc
inc
mov
cmp
in
push
scas
push
movsl
sbb
lods
sbb
jge
push
ja
push
shrl
fiaddl
shll
xor
popa
cld
imul
mov
out
jge
out
pop
ror
fcmovb
ja
sbb
pop
jp
popf
dec
add
mov
aas
inc
sahf
push
lods
cld
jg
dec
shll
cmp
xchg
xor
sub
sbb
adc
test
out
push
mov
cwtl
xchg
dec
sbb
mov
sarl
mov
pushf
fs
sbb
in
push
movsb
and
mov
add
mov
movsb
pop
mov
jle
rcrb
pop
jl
sub
sub
push
sbb
imulb
pushf
mov
pop
mov
sbb
fnstsw
mov
aad
fcmovne
movl
sub
ret
les
and
cmpb
inc
cwtl
stc
aad
inc
xchg
cmp
jns
movsl
loopne
data16
repz
loope
push
inc
jne
sarb
aas
ja
js
out
add
push
sbb
sub
and
mov
pop
lcall
xor
int3
cmpsb
pop
jns
pop
test
sarl
ja
les
popf
aam
aam
mov
xchg
lcall
imul
adc
sub
add
imul
inc
out
test
loopne
mov
mov
pop
out
and
mov
push
cmp
stc
out
test
sbb
mov
shll
ror
rcrl
insl
cmp
in
ja
pop
call
xchg
loop
inc
je
mov
into
lods
mov
xor
repz
aad
cmp
mov
sbb
pop
push
push
pushf
out
shl
std
or
mov
call
push
pop
inc
cwtl
xchg
push
lods
mov
insb
pop
mov
sbb
lods
jecxz
add
shl
ret
pushf
xchg
idivl
pop
pop
sbbl
jne
cwtl
xor
out
cwtl
inc
jb
or
fidivl
sti
rcll
mov
fdivrl
ss
pop
mov
push
mov
sti
negl
mov
mov
sahf
push
push
out
cmp
push
repz
xchg
in
movsl
rcrb
cld
popf
push
mov
stc
lcall
fisttpl
sub
dec
pop
test
lret
mov
shll
out
pop
cli
mov
cmpsb
push
xchg
cld
jo
cld
dec
repz
push
sti
xor
push
adc
mov
sbb
inc
push
sub
jne
mov
xor
incl
mov
loopne
cs
pop
imul
push
leave
shl
mov
cli
arpl
xchg
push
xor
cmp
jle
out
mov
push
fdivs
lock
movsl
sbb
mov
pop
fadds
fldenv
iret
lret
lcall
jo
fsubl
add
mov
cmp
adc
sbb
shll
test
xchg
cmp
sti
clc
inc
or
mov
inc
pop
insl
outsl
dec
int
lods
cmp
jmp
sub
lret
rcrl
aad
pop
pop
cmp
or
sarb
popf
leave
jns
push
cmp
rcrl
jno
or
jo
push
or
sub
push
stc
push
mov
mov
push
jbe
pushf
ljmp
mov
inc
jl
mov
mov
idiv
fdivrl
and
mov
out
push
lret
push
inc
or
repz
imul
xchg
push
push
jns
das
or
and
lds
std
insb
xor
inc
sti
pop
fidivrl
int
mov
jecxz
xorb
pop
sbb
lret
sub
pop
fidivl
and
cmp
enter
andl
push
pop
mov
xor
in
push
fcomps
jmp
int3
or
xchg
or
jae
fdivs
dec
jmp
jnp
cmp
lret
lods
mov
xchg
les
movl
aam
cmp
inc
xor
fsts
mov
hlt
cld
hlt
jb
mov
icebp
aad
jp
pop
das
jp
mov
mov
xlat
xchg
jae
stos
jno
sub
push
sbb
jmp
int3
inc
fs
or
mov
lahf
stc
in
ret
and
mov
pop
pushf
es
cvtpi2ps
adc
push
jmp
out
repnz
inc
int
rolb
push
jae
pop
mov
shrl
clc
in
inc
stos
shrb
xor
dec
hlt
or
lods
push
mov
inc
lds
pop
mov
pop
pushf
jecxz
scas
mov
ret
fsubrl
aam
sahf
xor
push
sbb
fnsave
call
jle
negb
sub
int
mov
jp
ja
je
int
xchg
scas
in
jl
lcall
pop
lods
mov
xor
lods
repz
dec
imul
dec
mov
push
cmp
xor
xchg
push
push
sub
fs
sbb
mov
sub
jne
pushf
cmc
adc
jge
int3
push
cmp
mov
push
and
push
cs
shll
pop
jge
fisubrl
mov
pop
int
pop
adc
mov
adc
and
lret
gs
cli
adc
mov
cmc
xor
push
les
int
ret
int
mov
int
lds
adc
inc
jbe
movsb
dec
mov
sub
inc
dec
xchg
paddsw
xchg
mov
int
push
cmc
inc
mov
into
xchg
pop
dec
jb
xor
in
mov
xlat
lcall
pushf
mov
jnp
fsubs
inc
xchg
lods
lock
dec
pop
stos
aad
lods
xchg
dec
fsubrl
and
or
cmp
in
call
rorl
sarb
sub
jmp
push
leave
clc
xor
mov
sahf
ss
ficoml
push
mov
pop
and
push
push
cmc
int
xchg
adc
jge
mov
leave
stos
jge
sbb
push
push
shll
repz
popf
addr16
inc
mov
fsubrs
sub
movsb
leave
js
lret
xor
push
bnd
mov
pop
cmp
push
mov
mov
xor
pop
jne
jge
leave
xchg
fcomps
pushf
lret
add
rcr
lahf
out
in
jle
lret
filds
leave
cmpsl
aam
cld
in
cld
in
sub
mov
ja
das
lods
rcrl
cld
adc
dec
fadd
cmp
aam
popf
rcr
push
dec
jne
xlat
jmp
cwtl
lods
push
ja
sbb
mov
fadd
inc
cmc
mov
sub
xchg
test
cmp
fucomi
fcompl
push
jl
push
nop
cli
mov
push
dec
ret
std
mov
push
fdivl
mov
mov
and
lea
frstor
out
xor
cmc
int3
sbb
fdivl
adc
mov
pop
jno
les
add
nop
lret
ljmp
pop
add
call
mov
imul
sub
xchg
sti
cmp
dec
inc
xchg
out
xchg
xor
outsl
lahf
ss
cmp
mov
jl
cmp
ljmp
popa
ljmp
mov
and
lret
insb
pop
push
pop
cwtl
jae
jns
adc
fcompl
pop
inc
pusha
pop
stc
fdivr
jns
xor
add
mov
mov
mov
xchg
or
fldl
push
push
dec
sub
mov
clc
pop
mov
mov
fildl
cs
iret
dec
cmp
cli
stos
add
dec
jns
rcrl
ffree
and
xchg
fsub
cwtl
lret
lods
push
clc
lea
mov
xor
lret
cmp
ror
xlat
sahf
in
cld
rclb
aas
fdivs
lcall
push
das
rol
sahf
in
jns
fcoml
popf
pop
pop
cmp
stc
push
sbb
pop
sbb
int3
loopne
push
rol
ret
sbb
fst
lahf
mov
inc
aas
jbe
outsb
adc
aad
mov
decl
loopne
xlat
sub
cmp
push
mov
cmp
int
fwait
out
fdivrs
in
insb
cwtl
xchg
jle
mov
lahf
xchg
push
pop
std
aaa
data16
or
popf
pop
shll
pop
ret
mov
cmp
xlat
pop
les
ret
cwtl
inc
mov
mov
inc
cltd
leave
push
jbe
cltd
rcr
enter
dec
test
push
int3
mov
fsts
pop
test
dec
int
cltd
fcoml
daa
jns
fcmovb
fcompl
sbb
mov
arpl
and
pop
jecxz
mov
loopne
jmp
in
fstpl
repz
loope
adc
and
jno
fcmove
push
cmp
jne
adc
xchg
fisubrl
stos
pop
sahf
in
adc
stos
sub
loopne
je
cmp
stos
cmp
jbe
pop
popf
outsb
pushf
pop
sub
mov
pop
jg
or
xlat
mov
cs
push
adcb
int
cli
xor
jns
jmp
lods
pushf
js
mov
nop
shll
in
inc
mov
rclb
aam
xor
outsb
out
subb
or
pop
les
fdivs
push
sub
aaa
jmp
lret
movsb
ljmp
clc
inc
aam
out
lods
cmc
loope
subl
sub
sbb
fnstsw
jge
repz
imul
mov
call
adc
movsb
fcoms
sbb
xchg
pop
inc
cmpsl
cwtl
inc
jge
push
mov
je
paddusb
aaa
sahf
jmp
xor
xor
cli
test
adc
ds
dec
outsl
xor
inc
dec
lods
or
jbe
lcall
mov
mov
and
dec
mov
pop
daa
adc
loopne
stc
lea
clc
loop
push
shl
cmp
frstor
add
cwtl
lock
rorl
sbb
loopne
js
lret
int3
pusha
jns
out
rorb
adc
mov
cmpsb
cmc
mov
xchg
sahf
popa
jnp
aaa
pop
addr16
into
mov
int3
fdivrs
rcrb
shrb
pushf
repnz
shrl
mov
lods
mov
jb
adc
js
mov
int
jne
mov
fbld
xor
xchg
rcrl
test
clc
push
mov
test
jmp
inc
sub
lods
adc
pop
push
stos
out
pop
test
xchg
ror
fisttpl
or
shrl
mov
dec
or
loop
jp
and
mov
xchg
mov
cmp
insl
sbb
scas
scas
sbb
int3
fwait
sbb
jg
xor
mull
add
push
pushf
sbb
mov
sarl
fcomp
in
sbb
aam
dec
js
push
adc
sahf
sar
out
enter
fs
in
ficompl
cld
ljmp
add
rcrl
inc
pop
and
pop
fcoml
sub
pop
xor
jl
xlat
xor
mov
fwait
inc
cmpsl
rcl
rcl
lea
dec
sub
dec
idivb
cmp
cmp
cmpsb
test
xor
or
xlat
repz
jne
cs
add
xchg
sbb
insl
es
outsb
xlat
cmpb
clc
aaa
mov
lahf
sahf
idivl
push
xchg
mov
aam
rcll
subb
sbb
sbb
xchg
pop
jp
xchg
fs
aam
test
popf
pop
mov
xchg
out
dec
iret
int
sahf
cmp
pop
dec
sub
push
popa
xchg
or
fxch
and
ja
das
sahf
lcall
push
outsl
fldenv
pop
add
test
shrb
pushf
xor
icebp
adc
cmp
xchg
sahf
cmp
mov
pop
in
insb
pop
or
jl
jmp
out
pop
jae
push
std
cmpsb
shll
jp
mov
lret
dec
loopne
and
jle
adc
and
dec
nop
cmp
cmp
mov
fimull
jl
insb
inc
sarl
push
adcb
push
insb
repnz
frstor
and
stc
fcomi
aad
data16
ljmp
in
hlt
add
pushf
or
adc
xlat
mov
mov
fcompl
and
fmull
clc
and
pop
shlb
adc
mov
iret
out
sarl
jge
call
push
push
mov
sbb
outsb
pop
aad
inc
int
dec
or
mov
cmpsb
mov
sub
lock
movsl
hlt
mov
and
dec
les
sub
test
dec
xchg
pop
lret
js
aam
sti
cmovs
pop
in
sarl
or
aaa
push
cmp
sbb
ret
sub
mov
das
lahf
mov
pop
notb
dec
push
cmp
shr
iret
ss
cmpsl
xor
xor
mov
mov
sahf
push
and
push
aas
fidivrl
sbb
jbe
pop
push
insb
xor
push
lds
rep
inc
jl
ss
mov
insl
push
jno
pop
test
fsubrs
xlat
push
push
mov
mov
and
jne,pn
push
sarl
cmp
enter
sbb
lcall
lds
std
mov
xchg
outsb
jg
sub
adcb
pop
sub
mov
addl
sub
popa
mov
push
loop
daa
mov
ret
add
movsl
pop
mov
and
shrb
fidivl
jmp
shl
test
push
cmp
stos
push
testb
shl
mov
xchg
daa
out
xchg
ja
mov
pop
loop
adc
sub
inc
mov
jg
cmpsb
adc
push
sti
cmp
mov
jbe
out
sbb
scas
aam
or
inc
fldl2e
leave
mov
scas
sarb
push
push
notb
lods
pop
jle
sbb
insb
push
xchg
sub
shll
fcomp
scas
mov
je
rcrl
rclb
aam
ja
leave
mov
out
das
jl
cmpsb
stc
pop
jns
mov
fs
in
aad
ja
out
mov
aam
pop
xor
movsb
call
push
push
xchg
jb
jne
pop
mov
push
lock
adc
fisubl
push
enter
jle
push
pop
stc
fs
add
fucomip
repnz
push
out
fdiv
data16
xchg
cmp
pushf
mov
imul
lcall
ss
aas
in
mov
ficompl
or
xlat
mov
leave
sarb
add
cltd
mov
fidivs
insb
jne
and
mov
mov
mov
sbbb
fisttpll
sbb
xchg
loope
sub
mov
loop
lods
or
xor
fwait
push
repnz
xchg
ljmp
sar
dec
mov
sbb
dec
rolb
cmp
lock
or
pop
xor
call
mov
sub
xchg
inc
cs
pop
ja
xchg
in
ds
mov
fdivrl
sarl
xor
ret
fdivp
adc
lahf
stc
nop
cmp
data16
cmp
adc
cmpsl
je
arpl
mov
loopne
jmp
push
je
pusha
adc
loope
ja
jl
sub
mov
stos
push
pop
scas
or
mov
inc
adc
repz
jge
add
add
xchg
imul
pop
fists
push
ljmp
pop
jne
pusha
js
mov
sbb
rorb
mov
mov
dec
push
jmp
scas
fisubl
dec
vmovaps
and
setg
call
ds
pop
pushf
mov
push
or
xchg
jge
mov
and
ds
daa
lds
mov
clc
mov
pop
out
cmp
mov
test
int
add
sahf
xor
lahf
or
cltd
out
aam
insl
dec
mov
ret
sbb
les
je
adc
push
fcomip
sub
mov
pop
push
mov
mov
lods
mov
push
cli
aam
fiaddl
fldt
fst
nop
mov
lods
cs
mov
adc
loope
fdivr
pop
mov
adc
sub
je
aas
rclb
dec
inc
push
cmp
xor
popf
cld
sub
lods
movsb
xchg
incb
stc
push
sbb
fdivs
pop
out
int
pop
lret
jns
shrl
cmp
xor
daa
xchg
xor
sbb
xchg
cltd
sub
xor
mov
inc
lock
lods
sbb
push
sub
push
adc
mov
cmp
faddl
test
jo
cmpsb
push
repnz
enter
mov
sahf
dec
ret
jle
pop
xor
cmpsl
lock
jns
pusha
xchg
sbb
mov
mov
outsb
out
sub
in
pop
adc
xchg
inc
push
pop
mov
dec
lds
mov
sti
adc
xor
rcrl
mov
mov
out
sub
mov
std
jmp
dec
push
popf
pop
popa
adc
xor
xchg
andb
movsl
fdivs
mov
pop
lods
adc
das
lret
cwtl
cld
dec
xchg
call
lock
sbb
mov
stos
and
fstps
mov
cmc
stc
xor
cmpsl
pop
inc
xchg
xchg
es
or
or
mov
jno
les
fs
mov
int3
mov
pop
mov
insb
mov
push
imul
aas
mov
adc
mov
jge
sbb
jns
xchg
lahf
fdivrs
push
pop
es
cwtl
mov
dec
test
popa
loop
adc
call
xchg
mov
jne
xchg
cmpsl
popf
xchg
fwait
pop
mov
inc
test
or
scas
jns
pop
adc
pop
aam
mov
dec
xchg
pop
mov
test
push
add
int3
aam
scas
roll
aam
push
xor
xchg
inc
and
inc
out
jl
sbb
fcoms
in
dec
ja
cwtl
mov
sbb
pop
sahf
popf
movsb
xchg
imul
lea
jmp
push
mov
lret
fmul
push
mov
inc
jg
pop
ret
xchg
mov
xchg
sti
fcomps
ja
xchg
or
adc
sub
pop
pop
movsb
ret
mov
xchg
cmpsl
inc
insb
add
add
pop
movsb
and
mov
xor
cs
cltd
pop
push
insl
ljmp
jle
sub
adc
aam
fidivrs
xor
je
sahf
jmp
popf
push
outsb
hlt
push
arpl
popa
repz
and
push
sbb
fcompl
cmp
push
fistpl
mov
xor
mov
leave
sbb
jl
aas
lret
jecxz
xor
adc
sti
push
add
sbb
inc
pop
loopne
ret
sti
push
mov
sbb
rcrl
hlt
xchg
rcll
fnsave
push
jne
sbbl
mov
sbb
out
and
xchg
fdivs
lahf
cli
xchg
or
fstl
sub
pop
fbstp
inc
fxch
in
test
inc
fs
push
pop
cmpsb
adc
pop
rol
inc
xchg
or
cmp
lcall
push
sbb
fs
sbb
or
sbb
xor
and
cld
pushf
push
or
sbb
mov
mov
in
inc
bound
sub
loopne
ja
xchg
test
inc
pushf
sar
or
fildl
pop
out
ds
sub
pop
adc
nop
push
pop
popa
inc
push
jmp
dec
dec
mov
xor
filds
loope
or
mov
popa
xchg
sti
adc
movsl
or
sarl
adc
jb
mov
js
shll
pop
les
shll
cmp
sahf
jle
fistl
pushf
cld
or
lods
adc
lret
xchg
cmp
adc
sti
add
mov
popf
adc
jbe
xor
fwait
in
sub
fbstp
pop
mov
mov
lret
hlt
jg
jmp
shrl
loop
and
int3
jle
int3
stos
fcmovbe
adcl
ja,pt
mov
xchg
fsubr
push
mov
mov
cmp
xchg
faddl
fbld
into
xchg
sbb
icebp
pop
popl
mov
int
add
pop
out
pop
push
adc
dec
lea
xchg
fsts
or
push
dec
fnstcw
xchg
xchg
jl
mov
fimull
mov
jnp
push
xlat
mov
nop
sub
dec
call
mov
pop
outsb
mov
inc
xchg
dec
xchg
stc
push
jmp
push
cs
push
xor
push
dec
mov
cmc
pop
test
sarl
jne
fcompl
jno
pop
jnp
aad
mov
mov
mov
in
push
mov
out
mov
mov
hlt
inc
pop
jb
jo
sti
xlat
popa
xor
ret
dec
scas
sbb
fstps
sub
ret
cwtl
sub
lret
dec
andl
dec
lcall
xchg
js
movsb
dec
repnz
cwtl
das
add
aam
mov
pop
jp
out
jge
rcrl
out
mov
sbb
add
pop
xchg
clc
push
xor
inc
pop
in
mov
push
inc
jl
in
lods
adc
stc
mov
out
insl
rolb
in
pop
mov
xor
ret
sub
insb
iret
mov
je
adc
pushf
shrl
mov
lock
mov
or
scas
or
mov
clc
iret
adc
aam
sar
int
push
cmp
lahf
clc
xor
loop
orb
pop
rorl
dec
and
pop
jecxz
into
stos
mov
xor
or
cs
cmp
mov
fstp
in
gs
push
mov
jae
je
fstl
xor
xchg
lods
sbb
and
ja
fbld
je
bound
call
fidivl
mov
pushf
fcomps
push
push
xlat
mov
shlb
xchg
mov
inc
hlt
mov
mov
jnp
xlat
aam
cmp
mov
stos
adc
jg
into
cmp
shl
sarb
jmp
in
xchg
clc
mov
fcompl
mov
test
fistl
mov
lea
push
jg
sbb
lret
out
insl
outsl
iret
pushf
hlt
ja
mov
pop
dec
push
int3
je
pop
xor
push
jge
jl
lahf
divl
call
mov
je
aam
dec
or
adc
xor
lea
shr
mov
pop
repnz
imul
fdivr
dec
decl
fists
iret
pop
adc
xchg
repnz
out
sarb
jae
fcompl
loop
hlt
fbstp
inc
jmp
scas
pop
push
divb
shll
faddl
push
xor
xor
shl
dec
repz
js
out
add
xchg
bound
jle
roll
add
loopne
fisubrs
pop
fucomip
fs
aam
imul
lcall
into
push
jl
stos
ret
pop
sub
inc
adc
decl
aas
sti
repnz
add
lcall
shlb
mov
fidivl
inc
cltd
pusha
divl
loope
test
push
jnp
ret
sbb
sub
adc
inc
mov
or
pop
jg
xchg
or
mov
mov
ret
rorb
sarl
cmp
xchg
add
aam
lea
push
or
mov
cmp
mov
lods
lea
mov
pop
xor
popf
ljmp
mov
lea
je
lock
cmpsl
xchg
add
push
sub
lods
inc
je
xchg
cmp
popa
lcall
repz
shll
test
pop
add
xchg
in
insl
cli
pop
test
fldenv
fnsave
scas
into
movsl
clc
test
pop
jae
mov
subl
pusha
xor
xchg
push
test
sarb
ds
push
popf
shll
popf
lods
cmp
ficoml
xchg
cwtl
insb
cmpsl
mov
aas
push
fsubrl
ficoml
dec
shl
pop
aas
xchg
stos
lods
mov
jge
lods
out
pop
jnp
push
shlb
jns
mov
subb
iret
fnstsw
aam
xchg
insl
sbb
popa
enter
and
or
ret
out
mov
mov
in
int
pusha
push
push
adc
inc
add
xchg
mov
xor
pop
mov
push
xor
cmpsb
sbb
aam
lods
adc
stos
push
fs
stc
in
dec
adc
dec
or
jmp
and
es
push
out
sbb
je
decl
mov
mov
inc
jne
out
mov
pop
jge
sarl
ss
sbb
std
loopne
mov
push
sbb
stos
popf
dec
outsb
clc
xchg
xor
aad
jbe
mov
jns
jge
insl
cs
loop
inc
xor
xchg
pop
xchg
daa
mov
popf
push
mov
sub
pop
movsl
lods
mov
xchg
sti
or
rcll
mov
xchg
dec
mov
cmp
lock
sbb
add
shll
sub
imul
into
jbe
div
je
push
push
pop
cmc
sbb
jno
ror
push
dec
iret
int
stc
xor
adc
inc
notb
or
cmc
mov
cltd
je
dec
mov
std
ss
push
scas
jne
sbb
push
out
xchg
push
push
jbe
push
xchg
cs
mov
jmp
push
xchg
inc
or
leave
dec
icebp
inc
leave
es
mov
insl
add
xchg
aam
add
popf
lods
lea
std
push
adc
aas
mov
je
xor
mov
pop
mov
pop
loopne
das
jns
and
fmul
stos
dec
jp
dec
push
mov
pop
scas
xor
mov
shll
in
popf
cs
lret
push
gs
fwait
ljmp
stos
fwait
mov
mov
xor
sbb
stc
sbb
sbb
xor
and
in
dec
int3
xchg
test
rcll
test
ss
push
popa
addb
sbb
outsl
adc
xor
fisubl
stc
aad
and
dec
and
mov
sub
lahf
lret
in
pop
in
fstpl
sub
push
push
lret
int3
jns
popf
jnp
cli
pop
lret
mov
popf
mov
roll
mov
or
xchg
lcall
dec
jne
xlat
std
mov
pop
mov
add
ud0
inc
movsw
sub
inc
sub
out
mov
enter
out
xor
mov
cmp
lods
dec
mov
sub
pop
mov
dec
or
lods
insb
dec
mov
or
mov
movsb
jo
rcrl
fs
mov
mov
inc
xchg
fistpl
cwtl
pop
adc
cs
popf
dec
fcmove
ds
cmp
and
push
cmp
and
lahf
pop
jbe
stc
cmpb
mov
sahf
sti
inc
mov
notb
jge
popf
sbb
clc
xlat
dec
pop
rorl
jo
lea
imul
jle
fwait
cmp
mov
out
lcall
push
add
mov
inc
mov
cs
adc
stc
pop
into
popf
pop
push
fwait
jp
aam
xchg
jge
add
mov
ror
iret
jle
scas
fcomp
imul
add
jg
into
int
mov
inc
movl
fcmovnu
dec
ds
mov
jnp
cmp
call
ret
lea
cmpsb
aam
aad
mov
cmp
push
xchg
jg
xchg
ljmp
cld
and
xchg
cmpl
xchg
inc
addr16
int3
mov
shll
xchg
or
ss
jge
inc
lea
out
cs
mov
ret
pop
ja
mov
lahf
nop
jmp
xchg
xchg
insb
jbe
xchg
mov
mov
fistpl
xor
outsb
popf
sbb
pop
push
in
push
or
sbb
or
orb
ja
jb
inc
rorl
mov
jl
mov
push
xor
jne
sub
lods
cmc
and
push
xor
push
sub
xchg
fcmovu
sub
cltd
lods
adc
pop
jl
jle
jns
jp
cwtl
adc
jns
loopne
push
inc
bound
sbb
dec
adc
shl
aad
gs
fdivrl
push
xlat
sbb
shl
push
insl
int3
and
sbb
hlt
mov
jbe
xchg
jns
stos
cli
pop
scas
pop
pushf
cltd
fisubrs
rcrl
sub
and
ds
shlb
push
fwait
inc
pushf
mov
add
sub
jge
daa
mov
rcrl
lahf
pushf
push
stc
rolb
or
adc
flds
ficompl
aas
inc
popa
mov
jge
ss
test
push
pop
push
ret
jne
enter
push
mov
lods
pop
jecxz
push
xchg
loop,pt
mov
lahf
mov
mov
rcrb
jne
xor
add
sahf
mov
inc
xchg
call
jecxz
or
ss
incb
movsb
rcrl
sub
mov
pop
xchg
pop
xlat
cmc
xchg
daa
jg
hlt
sbb
imul
test
cwtl
fisttps
mov
ror
xor
xchg
cmpb
fstpl
ret
call
lods
stc
sub
sbb
xor
xchg
jge
int3
jb
xor
push
cmp
push
call
sarb
mov
pop
out
inc
out
inc
pop
xlat
sti
xchg
int
in
jg
mov
je
enter
pusha
cmpsl
sarb
inc
mov
dec
mull
rcrl
jge
mov
sbb
mov
idivl
sahf
mov
mov
mov
xor
dec
and
fsubrl
imul
add
jae
or
into
xchg
xchg
sahf
dec
ret
cmpsl
jg
rcrl
inc
int3
subb
mov
pop
mov
mov
in
pop
lcall
xor
jg
push
out
sub
rcll
cwtl
mov
aam
cld
fstpl
cmp
aam
dec
std
hlt
and
push
mov
xchg
and
lock
aad
je
push
mov
js
push
repz
inc
std
lods
push
icebp
lods
push
cmc
fnstsw
pop
push
mov
aas
pop
outsb
add
lock
adc
adc
jb
stc
and
cmp
cmpsb
mov
mov
add
mov
mov
aas
pop
mov
adc
pushf
mov
sbb
shll
xchg
mov
call
lcall
sub
push
popf
push
mov
xor
dec
lods
push
int
daa
int
ljmp
push
insl
test
lret
cli
fldenv
xchg
enter
jo
testl
add
sub
mov
fcoml
jmp
or
dec
pushf
fwait
xchg
mov
adc
into
inc
xrelease
jne
fdivrl
iret
push
fcompl
lret
dec
mov
les
idivb
lcall
pushf
mov
lcall
fsubrl
fwait
jae
cltd
lock
jb
subb
mov
xchg
aad
mov
push
insl
push
gs
ja
pop
xor
sub
cld
cmp
adc
shll
data16
std
loop
pop
xchg
das
jae
inc
mov
push
sub
and
addr16
cmp
mov
adc
out
push
addr16
dec
fsts
lock
sub
mov
hlt
ljmp
cmp
sti
or
push
mov
fbld
or
jno
push
clc
mov
add
jne
shlb
sbb
pop
fisttpll
jge
scas
ret
mov
xchg
mov
mov
hlt
push
mov
inc
imul
fnstenv
mov
fisubl
or
pop
pop
sub
cmp
pop
jp
mov
push
mov
test
cmp
ss
fadds
push
pusha
sub
push
je
xchg
aaa
jg
lods
mov
movsb
xlat
dec
incb
push
fdiv
push
fdivl
jmp
jbe
push
loope
jmp
fdivrl
lods
jecxz
bswap
jge
push
pop
lods
mov
dec
imul
rcll
jo
sarb
aam
cmp
mov
aas
vandnpd
push
mov
xor
imul
hlt
popa
flds
dec
mov
lods
repnz
pop
jns
ja
repnz
vcvtsd2si
pop
notl
fistpll
les
cmpsb
or
fbstp
scas
sub
popa
pop
mov
fistpl
ds
adc
cwtl
or
dec
stos
shrb
adc
mov
pop
jmp
jle
sub
jne
add
repnz
stc
mul
sub
push
lds
fdivr
and
xchg
imul
fdivrl
cmp
add
stc
xchg
les
lret
adc
cmp
outsb
jns
fcoml
xor
cmc
jmp
sbb
pop
dec
lds
ljmp
ret
dec
jg
je
out
adc
cmc
pop
cmp
es
xlat
fnstsw
bound
fcomps
sbb
lods
dec
adc
mov
and
cltd
decl
jg
push
int
cmpsb
push
jge
pop
addr16
repnz
mov
push
mov
bound
mov
ja
movsb
cmpsl
clc
popl
pop
push
cmp
aad
adc
sbb
and
push
notb
cmp
xchg
add
repnz
pushf
data16
sub
jbe
add
push
arpl
xor
xchg
xchg
lret
pushf
fldt
ret
bound
int
lods
pop
jae
and
push
xor
mov
mov
fisubrl
cmp
in
push
jecxz
sub
pcmpeqb
lods
dec
and
jg
enter
jge
mov
pop
mov
xor
scas
xchg
xor
jae
dec
push
jg
insb
cmpsb
and
ja
test
push
push
push
xchg
and
mov
stc
add
mov
ret
jb
mov
pushf
inc
inc
stos
sub
std
popa
xchg
or
jecxz
sbbb
push
pop
lahf
push
lcall
cwtl
call
or
pop
sbb
adc
xchg
xor
imul
push
mov
jl
jge
inc
hlt
mov
hlt
xchg
fcoml
ror
into
sahf
sti
cmpb
stc
in
mov
je
mov
clc
xor
movl
mov
sbb
scas
push
jne
push
iret
cwtl
xchg
xchg
mov
stc
push
lret
sbb
je
lods
pop
sbb
pop
cs
sbb
sub
shl
pop
inc
shlb
xor
xchg
js
outsb
cmpsl
dec
push
cld
pop
dec
fld1
outsb
dec
sbb
enter
xchg
int3
mov
jae
and
shrl
sarb
push
rcrl
fcmove
add
aam
pop
mov
movsb
push
mov
mov
andl
ja
ret
xchg
jne
push
pop
xchg
imulb
je
fnstsw
xchg
xchg
loop
or
pop
mov
push
aad
aam
push
xchg
hlt
add
push
fwait
adc
push
les
jbe
shll
mov
fidivl
daa
orl
xchg
cmp
adc
push
jns
xor
mov
push
xchg
jns
mov
inc
cltd
pop
or
sbb
das
pop
scas
dec
pushf
out
les
push
fmul
fcompl
sar
add
loop
and
adc
mov
mov
adc
push
xchg
jl
in
out
mov
mov
jmp
enter
in
rolb
movsb
imul
std
fwait
mov
xchg
inc
xor
mov
lock
xchg
push
sbbb
negl
in
rcrl
mov
jl
pop
xor
fwait
mov
pop
in
mov
outsb
mov
hlt
scas
fucomp
int
jns
xor
inc
adc
arpl
imul
mov
inc
dec
push
mov
fld
mov
das
add
mov
jae
lcall
mov
int
mov
mov
push
push
cli
cltd
mov
aas
adc
or
out
leave
stc
lock
es
ud1
add
xor
pop
mov
scas
push
iret
fstps
cwtl
xor
fidivl
pop
ss
mov
pop
sub
jnp
pop
dec
fldl
push
mov
push
xchg
mov
je
mov
mov
push
jle
cmp
les
mov
out
xchg
popf
adc
pop
inc
dec
inc
mov
jp
or
fcompl
les
pop
xor
rolb
push
push
shll
outsb
xchg
inc
inc
pushf
sbb
push
lret
sbbb
pushf
pushf
xchg
xchg
dec
dec
add
pushf
fcoml
inc
jge
sub
mov
fistpl
push
fdivrl
mov
mov
inc
or
dec
mov
lahf
nop
lahf
lods
lea
mov
js
xchg
hlt
jo
stos
adc
cmp
aas
sbb
repz
lods
fimull
rcrl
fstl
packssdw
aam
test
pop
sub
cmp
push
cltd
xchg
add
les
push
ficompl
call
idivl
mov
mov
mov
and
jae
sbb
pop
cmp
sub
pop
std
fcmovb
mov
popa
sub
mov
fcoml
xor
mov
scas
push
inc
repz
pop
inc
test
jns
push
roll
lea
loope
aad
popf
push
cmp
shlb
xchg
jl
push
stos
cmp
dec
aas
fisttpll
pop
dec
jmp
ffreep
leave
mov
shl
and
shrl
fldenv
mov
pop
jmp
lods
jno
pop
nop
mov
adc
aam
adc
test
ret
clc
fldl
mov
pop
data16
jmp
pop
ret
push
ljmp
inc
ljmp
js
xchg
or
xor
mov
adc
fidivl
mov
ret
add
and
mov
jl
stc
rorb
outsb
mov
outsb
aas
jge
push
sarl
cmp
insl
cmpl
repnz
es
popa
mov
fidivs
repz
out
push
mov
dec
add
inc
sbb
out
lods
movsb
dec
faddl
pop
sub
add
call
add
jae
mov
mov
or
jae
and
inc
aaa
lds
xor
xchg
mov
mov
mov
aaa
lret
aad
jbe
aaa
fldenv
dec
nop
cmp
mov
xor
push
loop
adc
data16
fimuls
dec
ror
or
test
jbe
insl
mov
rclb
out
jne
push
les
mov
dec
jecxz
cs
fidivrl
fcoml
lds
repz
push
divl
pop
xor
pop
daa
movsl
popa
push
dec
adc
jnp
mov
imul
aam
push
ficoms
dec
jl
fdivr
stc
pop
paddw
lret
popf
in
das
ds
lods
push
imul
fldl
xor
sbb
lcall
lods
std
loopne
mov
and
jmp
mov
mov
scas
cli
ja
das
insl
dec
in
aad
lret
pop
cs
dec
out
pop
mov
mov
fisubrs
aas
fdivs
je
addr16
add
int
push
cltd
pop
int3
jmp
stos
mov
cmp
cmpsl
cmp
mov
fnstenv
sub
cld
xchg
lret
je
fcmovb
mov
fsub
into
xlat
cmp
mov
pop
aam
cld
test
xchg
movsb
mov
lahf
sbb
fsts
mov
popf
adc
enter
ss
mov
add
mov
ret
les
mov
mov
loopne
or
jne
jle
ret
lret
into
aas
out
mov
xor
arpl
ljmp
sbbb
std
insl
shrb
inc
sbb
rcrl
mov
push
mov
shlb
xor
pop
testl
jnp
repz
pop
ja
push
fsts
fsts
fcoml
fsubl
mov
lcall
sub
cmp
inc
cmp
mov
xchg
xchg
mov
ds
lcall
jle
adc
pop
nopl
mov
mov
add
loope
push
lahf
xchg
or
lret
jae
loopne
rcr
test
mov
dec
daa
mov
xchg
and
rol
aam
or
jne
pop
or
push
in
roll
mov
shll
and
jg
mov
xchg
loop
imul
test
dec
cmp
fs
cs
outsl
dec
dec
push
pop
pop
lahf
sub
dec
addl
ror
inc
push
and
cmovge
lcall
jo
push
es
pop
fmull
adc
mov
pop
fst
mov
mov
into
pop
mov
or
mov
aad
pop
push
push
mov
push
push
not
xchg
loopne
mov
stos
fstp
ffree
jne
lcall
ret
mov
jge
sarb
add
leave
jge
ret
shl
mov
fsubrl
subl
dec
jne
sub
mov
adcb
repz
inc
inc
mov
popa
pop
xor
or
rcrl
clc
fildl
hlt
ret
mov
cmp
jno
mov
jp
stos
xchg
xchg
daa
push
dec
sub
pop
push
lcall
sub
cwtl
std
jmp
push
dec
pop
cs
adc
jno
push
add
inc
into
push
inc
xor
pop
mov
cmpsb
sbb
pop
jo
pop
insl
cmpb
mov
int
in
and
push
fisubrl
adc
loope,pt
xor
leave
mov
add
ds
lahf
push
lods
dec
mov
jp
imulb
adc
cmp
repnz
insb
ret
add
push
mov
shll
push
pop
js
cmp
add
roll
rol
cmp
mov
mov
jle
pop
ss
sub
movsl
arpl
fstps
arpl
dec
movsl
je
push
sbbl
mov
cwtl
pushf
pop
out
stc
push
scas
loope
aaa
not
xchg
aas
clc
hlt
xlat
lar
push
fsts
popf
cmp
popf
out
sbb
jl
mov
shlb
addl
sahf
popa
rorb
imul
bound
lcall
mov
cli
fcompl
inc
lcall
es
leave
je
shrl
push
sbb
pop
test
cmp
fstpl
dec
leave
xor
scas
and
xor
xor
inc
cld
loop
dec
sbb
in
mov
inc
test
pop
and
sahf
cmc
adc
cmp
or
cs
icebp
push
js
repnz
icebp
or
add
dec
icebp
fs
and
xor
and
cld
cs
xchg
and
test
fldt
cli
inc
lcall
cwtl
hlt
pop
ja
xor
mov
imul
andl
cmp
orl
mov
mov
xor
inc
sti
mov
js
stos
sarb
jp
and
sub
sub
pop
shr
out
shlb
stos
aad
jne
mov
adc
push
xor
ja
cmp
push
rcrb
xor
cmc
shrl
jae
push
push
xchg
aas
ja
in
jno
xor
mov
arpl
aaa
jg
mov
xchg
sub
ficoms
fistpl
cmp
out
dec
mov
aas
cmp
jl
sbbl
mov
loopne
sti
mov
xchg
inc
testl
std
xor
enter
cld
fidivl
add
aaa
loopne
pop
daa
cltd
loope
push
pop
cmpsb
lret
jo
pop
outsb
ret
cwtl
movb
jp
pop
out
jp
fimull
push
iret
pusha
insl
hlt
add
mov
cltd
lret
dec
fwait
ds
sarl
mov
out
loopne
in
ja
das
cmp
push
lods
mov
hlt
andb
testl
inc
out
stos
inc
or
xchg
inc
jl
mov
xchg
sbb
arpl
popf
pop
into
pop
jmp
cmpsb
push
sub
bnd
add
fs
xor
sub
and
ret
adc
movsb
push
int3
fdivr
aaa
fisttpll
nop
mov
inc
lods
pop
daa
pushf
jl
xchg
in
sub
stos
add
outsl
fimull
cmpsb
jle
adc
sub
jl
mov
repz
xchg
pop
push
test
ror
and
or
inc
fmuls
cld
ja
inc
mov
lret
movsl
pushf
data16
hlt
ror
fnstenv
fs
dec
mov
mov
push
dec
dec
aad
fists
mov
das
jle
pop
repz
mov
sbb
lock
data16
push
lret
pop
shll
rclb
jb
adc
jo
sub
sub
dec
roll
popa
mov
sbb
dec
push
dec
pushf
xchg
push
lds
test
lea
cmp
xor
xchg
lods
subl
dec
les
fxch
add
shr
int
xor
push
pop
or
call
shll
adc
test
sahf
clc
jo
pop
mov
daa
pop
orb
jl
xor
and
dec
stc
ss
and
sbb
pop
mov
clc
xlat
jns
sbb
adc
push
rcrl
or
es
lods
pop
js
pop
mov
pop
popa
jge
out
pop
movsl
mov
enter
sahf
int
push
roll
inc
cmpsl
pop
ja
push
clc
push
lret
push
out
insl
lods
sub
mov
xor
inc
pop
xor
test
mov
adc
sub
fistl
scas
inc
or
mov
jns
fists
inc
dec
popa
push
jp,pt
push
push
mov
dec
pop
std
push
jbe
dec
push
hlt
ret
repz
int
in
pop
das
clc
lods
mov
popf
add
cmovne
inc
xchg
pushf
dec
ret
pushf
out
jmp
fisubs
enter
les
cmp
out
jns
fisubrl
lcall
lcall
add
aad
lret
add
pop
or
lcall
pop
xchg
aam
xchg
mov
pop
sahf
push
shll
xchg
inc
xor
push
cs
cltd
loope
int
mov
shlb
in
cmp
leave
pop
jp
inc
ljmp
repnz
out
jle
daa
push
enter
push
pop
out
cli
push
sti
ds
sbb
out
out
cli
push
sbb
shl
ds
sahf
fadd
fstpl
jo
pop
push
popa
in
sahf
adc
xor
sahf
push
cmp
mov
insl
js
movsb
sub
dec
popa
pop
into
gs
aad
adc
shll
hlt
sbb
mov
pop
mov
out
je
mov
add
jne
mov
pop
sbbb
inc
mov
shlb
pop
pop
add
pop
push
mov
xlat
popf
adc
loop
fists
das
xchg
xor
push
popa
jo
loopne
imul
xchg
sbb
jle
push
scas
ljmp
push
cmp
ss
fisttpll
xchg
leave
aas
pop
adc
repz
cltd
inc
pop
jmp
rcrl
lcall
popf
push
clc
inc
mov
stos
jo
pushf
jmp
int3
test
mov
cs
xchg
imul
in
lea
adc
xchg
sbb
sahf
rclb
repnz
add
mov
pop
ds
pop
loope
xchg
inc
mov
mov
lea
aas
dec
pop
xchg
cltd
xchg
int
inc
jp
mov
popf
pop
aad
aam
fsubrs
fnsave
test
fmull
outsb
hlt
sub
fnstenv
fwait
cmp
xchg
cmp
fcomp
out
xchg
fnstcw
negb
mov
jbe
cmp
rorb
movsl
pop
xor
mov
push
fsts
pushf
bound
dec
ficoms
adc
push
out
jo
pop
jae
data16
call
js
mov
cmp
push
xlat
out
fstps
bound
xchg
movsl
loop
pushl
cmpsl
jbe
push
xor
xchg
xchg
mov
mov
jae
std
mov
jmp
push
sbb
ds
mov
xchg
fsubrl
pop
jecxz
mov
pop
ret
push
jge
inc
sti
inc
push
inc
add
dec
into
push
xor
test
mov
adc
rcrb
inc
and
mov
mov
push
lcall
shll
pop
mov
rcrl
sahf
mov
sub
aam
pop
pop
or
xor
fcompl
test
cli
adc
pop
fisttpll
fstpt
sbb
aad
ret
jnp
cmp
mov
add
fisubrl
jae
xor
and
mov
sbb
sbb
cli
xor
mov
popf
jne
cmp
int3
pop
cld
cwtl
cs
dec
loop
or
dec
lahf
gs
fmull
popf
mov
xor
jae
fstl
mov
pop
pop
cltd
jl
icebp
mov
xor
lds
cmp
jge
popf
fadd
mov
int3
mov
or
out
cmp
sbb
lcall
cmp
push
push
enter
mov
xlat
faddp
idivb
mov
jmp
sub
sub
cli
leave
push
add
cltd
stos
mov
movsb
mov
je
bound
xor
lds
cmp
jb
leave
rcrb
sub
dec
decl
inc
jbe
adc
and
pop
scas
xchg
jecxz
popf
pushf
fstpt
jg
ror
sbb
arpl
mov
into
ja
mov
pop
mov
outsl
and
icebp
adc
jp
push
ja
pusha
sub
xor
shlb
and
test
cmp
push
sbb
mov
cmp
inc
xchg
sub
jae
sti
adc
test
pop
pop
cmp
inc
icebp
push
rcrl
cmp
xchg
xor
sahf
mov
adc
ret
scas
dec
inc
mov
and
test
mov
xor
out
pop
sub
repnz
mov
fstl
xchg
std
pushf
adc
push
mov
pop
je
xchg
je
movsb
or
lcall
lahf
iret
loope
pop
xchg
clc
mov
push
xor
dec
mov
or
clc
out
aad
pusha
out
ss
and
pop
clc
add
lahf
pop
test
xchg
lods
add
push
jns
dec
xchg
les
std
ja
xor
fwait
lret
cli
int
sub
icebp
dec
and
ds
add
xor
xchg
pop
mov
faddl
xchg
adc
insb
sub
psrlw
outsl
xor
fnsave
movsl
addl
movsb
cmc
out
mov
orl
jne
scas
imul
fnsave
jne
dec
out
mov
xchg
mov
pop
scas
sub
mov
sub
out
mov
fnsave
sbb
in
or
mov
ss
and
or
cwtl
pop
xor
xor
nop
fsubp
movsl
paddusb
leavew
jmp
les
push
lock
jle
xor
or
out
push
adc
ss
jmp
fldln2
xchg
add
or
jp
add
jmp
cmp
arpl
in
rcr
or
push
xor
lock
push
pop
push
fdivr
cmc
aas
mov
push
xlat
jmp
out
xor
sbbl
scas
mov
js
sbb
sub
sbb
popa
pop
jl
stc
insb
subb
sbb
cmpsb
jns
push
pop
pop
push
jle
lods
popf
inc
jns
inc
pop
add
mov
xor
dec
sub
ret
rolb
cmp
mov
in
sub
pop
pop
aam
sub
ror
pop
out
pop
stos
dec
cltd
fldenv
cs
jne
add
sbbl
loop
pop
daa
inc
cmpsl
stos
repz
fwait
aam
test
cwtl
dec
pop
mov
cld
cwtl
fwait
push
hlt
in
shl
mov
sub
xchg
std
push
mov
pop
js
xchg
fsts
push
popf
sbb
pop
dec
push
daa
ret
pop
jmp
aam
mov
jns
mov
mov
mov
sub
aam
mov
ljmp
mov
cld
dec
add
fldenv
mov
sbb
add
add
mov
pop
imul
scas
lgs
xchg
push
jne
movsl
lcall
shrl
loopne
lock
and
aam
aad
in
adc
pop
or
sar
lods
xor
inc
xchg
inc
in
subl
jae
xor
movsl
lea
mov
push
mov
pop
outsb
mov
pop
sub
and
mov
mov
pop
fmull
push
sbb
rcr
ficoml
push
fnstsw
xor
lcall
dec
rcrl
jle
xor
xchg
sbb
popf
pop
popa
fsubr
rcrl
jle
pusha
add
insl
lods
push
stos
push
adc
cmpsb
push
ss
rolb
and
jbe
lret
add
ret
fwait
hlt
mov
int
and
mov
jne
repnz
cmpsb
lds
jae
test
stc
xchg
dec
repnz
clc
sub
lcall
xorps
sti
push
aad
dec
es
or
hlt
fistpl
aam
lods
pop
adc
mov
aad
or
and
mov
jge
sbb
ja
dec
mov
jo
add
lcall
daa
je
sbb
subb
fcmovbe
push
sbb
or
ss
add
sahf
shll
mov
insb
pop
mov
adc
imul
ret
xor
cmp
mov
hlt
cmp
sbb
or
jbe
testl
or
movaps
sbb
int
nop
out
je
jae
jge
ret
jns
dec
in
stc
pushf
inc
xchg
sbb
pop
or
dec
dec
jecxz
fwait
hlt
ss
lods
loopne
clc
dec
jns
sub
pop
lds
mov
dec
mov
jns
repnz
mov
fcmovu
xorl
les
sahf
cmovno
xor
call
iret
ss
int3
repz
mov
pop
sarb
js
loop
filds
mov
mov
mov
or
ss
pop
inc
cmp
xchg
mov
xor
out
je
cmp
mov
insl
xchg
inc
pop
sbb
mov
push
mov
movsb
mov
lcall
and
stc
shll
inc
pushf
adc
jl
movsl
jb
mov
out
adc
jmp
ffree
inc
or
jg
gs
call
sub
push
insl
mov
mov
cmp
shll
aad
jge
push
mov
cli
push
push
pop
jnp
xor
ja
mov
into
std
rorb
push
jle
es
xchg
sbb
jmp
mov
cmp
fsubr
pop
add
inc
fstpt
insl
andl
leave
aad
pop
push
cmp
dec
mov
xchg
mov
sub
adcb
lahf
ss
dec
in
inc
sbbl
pushf
adc
dec
nop
int
fsubs
fsubr
lds
aam
lods
jle
rorb
cmp
test
les
or
shrd
rcrb
mov
lods
rcrl
mov
loopne
lea
enter
push
inc
or
lods
lods
sbb
mov
jns
cmpsb
xor
das
pop
mov
pusha
xlat
dec
cwtl
dec
es
call
push
fistl
enter
sti
rcrl
or
rcrl
xchg
mov
int3
jne
dec
loop
imul
aam
pop
mov
sbb
mov
jmp
xchg
xor
and
push
shrb
pop
jmp
fldcw
rcl
popf
das
sbb
roll
jno
out
lret
leave
dec
lcall
xchg
loope
inc
repnz
loop
mov
hlt
int3
loope
ret
mov
add
sub
out
cmp
rcrb
pop
jb
fcmovbe
sbb
stos
xchg
mov
repz
popf
insb
je
fbld
ss
fcoms
xchg
sub
insb
mov
dec
push
or
hlt
movsb
push
sbb
repnz
rcl
pop
lods
and
jg
outsl
add
je
rcll
adc
repnz
enter
popf
or
sahf
cmp
push
add
xor
mov
lds
in
shrb
push
sub
dec
jle
js
pop
ficompl
scas
and
iret
into
fldlg2
fistpl
lods
xor
ja
popf
mov
nop
cmc
ficompl
or
cmp
mov
ja
loopne
lods
dec
cwtl
sahf
adc
jmp
xchg
dec
dec
fisubrl
int3
mov
dec
aas
rol
xchg
ret
xor
imul
pop
cmp
push
movsl
push
scas
pusha
dec
inc
pop
loopne
inc
sub
fistl
das
inc
sar
stos
fcomip
pop
aad
int
jbe
faddl
push
ret
inc
cmpsb
cmp
lcall
out
mov
xchg
int
mov
sub
mov
call
mov
push
std
notb
js
stc
das
fidivl
aaa
cwtl
cwtl
out
daa
fimull
cltd
push
pop
dec
pop
popf
das
cmp
lods
adc
js
pop
std
popf
ficompl
fwait
ds
sbb
stos
mov
test
sbb
filds
xchg
lds
pop
cmp
test
jo
jl
std
jnp
les
xchg
imul
dec
jp
out
fwait
adc
cmp
pop
mov
dec
or
pop
sub
mov
ss
fcmovu
jo
cltd
popa
outsl
xor
mov
mov
jno
mov
mov
icebp
je
rcll
push
jno
icebp
je
jbe
push
xor
inc
jnp
fsub
mov
sahf
inc
sub
sub
ja
push
aam
popa
jne
orl
or
push
xor
popf
dec
push
sub
fcomp
clc
jge
movsb
xchg
pop
dec
pop
cmpsl
dec
inc
popa
adc
push
out
adc
addr16
sbb
sbbl
sbb
push
js
inc
or
nop
fisttpl
sarb
out
xchg
xor
jl
ret
dec
sub
into
mov
or
adc
jb
in
push
negl
outsb
xchg
cmp
mov
aad
lock
scas
fimull
inc
insb
sbb
sbb
or
xor
ret
cmpsb
leave
pop
test
mov
jle
adc
test
out
fidivrs
push
push
decl
in
inc
mov
sarl
and
das
push
popf
addr16
in
jle
jo
pop
sbb
jb
roll
lcall
in
mov
rcll
loopne
enter
idiv
call
int3
mov
jle
and
xchg
popf
add
xor
jae
dec
ret
mov
sbb
jb
mov
inc
rorl
mov
sbb
pop
lcall
loopne
pop
inc
fcmovnu
jl
into
jne
cld
sub
dec
pop
lods
mov
into
push
lahf
pop
push
ds
jge
adc
adc
into
xor
dec
cmp
leave
and
jno
std
imul
and
push
in
jbe
inc
jns
std
push
sarb
xchg
mov
dec
push
or
mov
or
test
sbb
xchg
xchg
or
dec
cwtl
ds
sbb
bnd
xchg
mov
repz
jae
sti
sarl
inc
sub
add
push
add
mov
push
xchg
cwtl
in
inc
mov
push
in
add
pop
xchg
jp
xor
inc
inc
pop
xor
js
test
aad
mov
dec
sbb
sub
lods
jmp
mov
mov
leave
push
pop
xchg
iret
push
cmpsb
sbb
sti
js
dec
loopne
bound
sti
push
pop
imul
sub
hlt
mov
pop
mov
cmp
jns
in
cltd
xlat
dec
test
mov
add
push
lods
pushf
sub
jns
ds
inc
stos
mov
jp
lcall
sub
jo
mov
push
prefetch
pop
xchg
jno
adc
xchg
inc
fmull
je
into
cltd
adc
push
cltd
ror
mov
push
leave
mov
cmp
jnp
shlb
sbb
dec
rcrb
int3
mov
cmp
pushf
repz
lret
cmovb
data16
mov
dec
mov
sbb
pop
xor
sbb
add
loope
mov
lcall
shrl
xchg
jnp
lahf
pop
push
sbb
out
stc
xchg
and
sbb
mov
and
adc
je
cmp
sub
mov
add
into
es
adc
mov
xchg
sbb
insb
pop
popf
jnp
dec
sarl
or
xchg
sahf
xor
mov
outsb
xchg
xchg
leave
cs
push
jle
enter
out
lret
test
jmp
push
pop
mov
les
rolb
outsb
arpl
mov
inc
xchg
and
sbb
mov
inc
push
jle
xor
sbb
inc
dec
popf
and
lods
pop
push
push
dec
lods
push
pop
fstp
jb
les
sub
dec
fmull
pop
sbb
stc
dec
pop
fisttpll
jp
dec
lea
int3
mov
inc
dec
mov
pop
les
leave
imul
mov
ja
addr16
pop
in
and
pop
adc
mov
jmp
mov
fwait
mov
data16
pop
rcll
dec
sbb
repz
inc
lret
pop
lods
mov
sub
jl
and
out
lods
jmp
pusha
fisubrl
push
fmull
out
jno
cld
addb
shl
in
stos
scas
pop
pop
fcmove
pop
rorl
out
push
inc
sbb
negl
jge
jns
jl
dec
cli
repz
enter
or
test
inc
ret
xor
adc
ds
cmpsb
aas
push
xor
dec
mov
hlt
jle
out
xor
je
test
pushf
adc
loope
mov
push
iret
jmp
mov
repz
jmp
ja
xchg
mov
pushf
fldenv
add
into
and
jbe
outsb
cmp
xchg
dec
dec
push
adc
movsl
pusha
pop
mov
mov
repz
es
pop
shrl
stos
pop
dec
sbb
pop
in
gs
jb
inc
inc
push
mov
shl
je
mov
xor
movsb
mov
out
xor
mulb
xor
iret
into
mov
pop
or
dec
fmull
ja
push
or
sahf
shll
ret
pop
push
push
mull
dec
jle
inc
fsubs
mov
rclb
jle
sbb
rcrl
xor
inc
lret
aaa
jmp
jmpw
fldcw
lock
xchg
mov
gs
dec
or
ss
add
in
jae
mov
push
sbb
xchg
ss
add
scas
xor
mov
mov
jg
rorl
popf
or
dec
lcall
pushf
cmp
sbb
mov
mov
repz
mov
leave
mov
xor
fs
jae
nop
add
int3
je
gs
mov
popf
jp
stc
arpl
popa
sbb
xchg
in
lret
push
dec
pop
push
out
sbb
jge
inc
aam
pop
popa
mov
cmp
lods
movsb
or
out
add
or
xchg
adc
insb
jns
cmp
fs
mov
test
imul
popf
pop
popa
mov
lcall
out
in
ret
cltd
iret
cmp
push
mov
adc
add
inc
pop
cwtd
and
inc
cmp
push
cmpsb
xor
sub
xchg
inc
jae
push
fisttpl
fwait
in
jnp
mov
add
lea
fimull
adc
adc
pop
call
mov
cmp
fstl
call
and
fisubrl
adc
pushf
jle
pop
inc
fs
jns
movsl
aam
cmovo
push
cmpsb
inc
les
xchg
xchg
sub
test
push
dec
jnp
je
mov
jnp
sahf
repnz
es
dec
mov
sub
clc
aam
inc
inc
frstor
out
mov
pop
mov
lcall
mov
cmc
into
jmp
fcoms
xchg
or
pop
stos
enter
std
push
out
ljmp
add
push
or
jae
aaa
sbb
mov
cltd
add
call
push
add
int
push
mov
push
and
call
cmp
push
aam
xor
or
jb
mov
and
test
or
aad
fsubrl
and
shr
mov
fistpl
push
push
sub
cltd
cmp
pop
movsl
hlt
jp
mov
adc
scas
mov
pop
mov
movsb
insb
mov
adc
mov
dec
xchg
mov
cmp
ds
ficompl
aam
sarb
rcrl
mov
out
addl
mov
adc
lods
adc
mov
iret
xchg
pop
mov
pop
sahf
rcr
stc
xor
in
std
cmp
sahf
lods
pop
inc
stos
fstpt
aaa
pop
rorb
inc
xchg
push
sub
pop
in
ret
inc
push
sarb
dec
mov
test
gs
outsl
ror
lret
xchg
mov
fs
shll
pop
xlat
scas
push
jmp
adc
mov
repnz
and
mov
aad
outsl
jmp
incb
inc
xor
adcl
lods
push
subl
insl
es
add
sbbl
bnd
push
sbb
xchg
repz
roll
popf
cmp
mov
jns
push
ds
cld
cs
cmp
sub
fistpl
js
sbb
xor
xor
sbb
xchg
pop
mov
rcrl
xchg
popf
insl
imul
data16
pushf
push
pop
mov
lds
lods
adc
sysexit
xor
sbb
roll
in
or
push
push
ljmp
lods
push
jne
pop
rcrl
jge
pop
jp
fdiv
sbb
into
fdivl
ret
dec
scas
or
or
stc
rcr
sbb
adc
in
aas
sbb
sbb
dec
jge
stc
fstl
mov
fdecstp
cmp
hlt
std
and
jmp
sub
leave
lcall
pop
fwait
adc
jmp
mov
pop
mov
shlb
out
test
push
rcrl
adc
xchg
mov
jnp
push
cmp
cmp
jg
add
xor
lock
push
scas
sub
add
xchg
jle
popf
jmp
faddl
mov
aas
insl
mov
lock
shl
test
ss
into
xchg
out
xchg
mov
add
stos
xor
sbbb
jge
xchg
or
xchg
in
mov
cmovb
mov
lret
cs
cmp
lods
xor
inc
lds
push
ss
jb
adc
test
mov
push
mov
cli
pop
mov
lods
sahf
push
clc
mov
adc
xor
xchg
mov
arpl
mov
sbb
cmp
pop
je
jp
inc
dec
je
fwait
and
pop
cmp
gs
sbb
push
sub
arpl
ret
xchg
frstor
inc
add
and
stos
cld
daa
push
pop
sub
or
and
decb
push
xor
mov
mov
in
stos
aad
ja
cmp
jno
cwtl
stos
pop
inc
sti
xor
lds
aam
pop
rorl
mov
mov
jae
ffree
out
ljmpw
add
test
add
into
inc
insb
lret
or
xlat
sbb
vphaddubq
mov
std
ja
and
mov
xchg
add
jg
aad
sub
loope
or
rcrb
idivl
cwtl
push
test
out
repz
mov
fwait
inc
mov
jp
rorb
ds
push
into
icebp
ror
mov
xor
and
inc
jg
dec
sahf
cmp
xchg
lahf
jmp
mov
fimull
and
adc
cltd
ficompl
mov
jg
das
je
or
xchg
ret
sarl
push
mov
movsb
adc
pop
and
xchg
aas
out
ljmp
xchg
std
mov
cmp
mov
imul
sbbb
lret
lods
aad
dec
fnstsw
pop
fst
mov
cmpsb
addr16
lret
jb
lret
jbe
gs
mov
mov
out
and
cmp
js
lock
lret
push
xor
aas
jg
subb
mov
xor
addr16
mov
in
mov
insb
or
mov
std
xor
mov
adc
call
cmp
movsl
sbb
subb
stos
add
and
sub
or
leave
scas
rolb
and
xor
fcmovnbe
daa
popa
insl
mov
es
pop
pop
call
mov
imul
orb
xor
fwait
imulb
mov
data16
sbb
sbb
dec
mov
add
ds
mov
cmpl
scas
sbbb
xchg
cmp
jns
mov
cld
sub
aad
cmp
add
insb
cltd
jmp
sub
dec
stos
pop
mov
addl
fdivl
push
mov
imulb
cmpsl
add
push
mov
nop
fcomp
das
mov
push
dec
sar
icebp
mov
pushl
adc
shlb
adc
pop
adc
fdivl
adc
jg,pt
clc
call
scas
jae
and
sahf
xchg
out
mov
imul
pushf
push
fcmovbe
mov
pop
shlb
ja
shll
addr16
xor
mov
bound
movsb
aam
pop
lds
xchg
pushf
mov
scas
jl
mov
mov
inc
fwait
data16
pop
dec
dec
jp
leave
cwtl
int3
pop
xchg
lret
pushf
dec
jbe
cltd
mov
in
lahf
xchg
jo
fistpl
sub
xor
jns
cmc
outsb
shrl
xchg
inc
push
jge
add
dec
or
adc
sub
dec
jmp
sahf
mov
jge
scas
xchg
mov
call
mov
dec
xchg
xchg
pop
mov
jnp
jp
pushf
jp
iret
rcll
adc
xchg
and
in
cmp
fdivrs
fidivrl
pop
rclb
mov
ljmp
cmpsl
ss
sub
aad
enter
or
xor
pop
mov
xchg
and
mov
add
push
repz
push
pushw
pop
std
cmpb
dec
dec
jbe
fwait
pop
imull
sub
xchg
mov
jl
mov
int
repnz
inc
fsubrs
pop
adc
hlt
cmp
xlat
xchg
push
pop
dec
mov
cmp
bound
fsub
mov
push
push
dec
mov
pop
aam
and
or
cmp
and
inc
mov
inc
push
repz
fucom
inc
aad
dec
xor
repnz
xchg
mov
pop
pop
mov
mov
pop
or
cmp
test
shlb
inc
sub
jmp
push
stc
pop
aam
sub
push
xchg
lea
dec
sub
sub
ljmp
stc
xor
sub
sub
add
xchg
jl
jne
xchg
or
or
int3
mov
pop
ds
lods
dec
mov
mov
fs
mov
shl
repnz
dec
dec
out
clc
and
cltd
pop
pop
cmpsb
dec
aad
jne
or
cmc
es
je
je
push
mov
xchg
xor
inc
sub
rcrl
push
push
out
xorb
outsb
pop
push
loopne
xlat
sbb
insl
sub
xor
ret
adc
or
add
cmpsb
mov
sub
push
adc
mov
add
lea
jbe
and
jle
mov
call
aam
ja
mov
aam
ss
idiv
hlt
xor
into
add
into
cmpl
aas
mov
mov
jge
out
test
clc
pop
mov
xchg
sub
iret
int3
das
cli
adc
pop
test
lods
jg
ror
int
sbb
xchg
xchg
push
pop
sti
or
les
mov
jle
mov
fs
aas
lds
cmpsb
pop
arpl
into
mov
pop
stos
lods
stos
sbb
or
fiaddl
cs
stc
pop
mov
ficoml
popf
pop
cmp
jmp
outsb
xor
mov
mov
cli
lahf
pop
jmp
jl
in
cltd
cmp
std
sub
ja
push
int
add
ljmp
sbb
adc
xchg
aad
sbb
andps
xchg
cmp
pop
mov
dec
xlat
add
adc
vmread
pop
pop
fstpl
fstps
cmp
push
dec
push
mov
std
clc
into
sbb
mov
xorb
test
xchg
fisubl
pop
data16
fmull
xor
fimull
mov
push
mov
aad
xor
aad
pusha
push
or
hlt
or
dec
xchg
fnstenv
inc
jne
and
jl,pt
mov
cltd
mov
fscale
adc
sarl
call
loop
jl
dec
adc
add
lahf
aad
roll
pop
popf
test
xchg
mov
aam
popf
movsl
sub
pop
cwtl
ss
cli
xor
adc
jle,pt
es
add
popa
add
adc
or
repnz
jb
in
mov
push
repz
jge
pop
mov
pop
ja
xchg
rorl
add
adc
mov
test
gs
and
adc
fisubl
mov
lahf
mov
add
and
rcl
stos
andl
cmpsl
ss
dec
movsb
inc
lods
jp
les
xchg
scas
mov
xor
iret
pusha
rcr
outsb
inc
mov
mov
sub
leave
leave
pop
push
jl
pop
frstor
nop
stos
jo
leave
mov
cli
mov
leave
aam
sti
aad
mov
sti
cmpsb
push
or
sub
adc
sbb
jno
add
adc
popf
jmp
popa
jecxz
es
xor
and
insb
push
add
clc
fs
call
cmp
mov
stos
cmp
mov
adc
rcrb
roll
pop
xchg
inc
dec
repnz
test
cmp
dec
dec
je
ret
xlat
inc
mov
mov
fstps
sub
popf
sbb
lods
dec
in
push
outsb
cld
fsubs
mov
inc
shrl
xor
out
pop
xchg
xor
or
fstps
add
cmp
jnp
push
dec
dec
push
push
inc
imul
adc
leave
fwait
mov
lahf
add
push
xchg
jbe
mov
pop
clc
pushf
fucomip
fcoml
dec
outsb
cwtl
pop
jle
sbbl
iret
pop
into
pushl
popf
xchg
cld
rcll
popf
push
pop
mov
jl
pop
pop
movsb
pop
xchg
fistpl
mov
leave
mov
fcoms
icebp
mov
fnstenv
movsb
addr16
adc
std
jnp
fistpl
test
sarl
push
rol
jecxz
pop
sub
hlt
adc
cltd
xchg
sbb
je
jecxz
pop
stos
mov
xchg
pop
lret
jne
imul
xchg
sahf
ret
mov
xor
mov
xor
mov
xor
inc
mov
insl
mov
pop
cmpsl
popf
mov
leave
pop
nop
popf
mov
sub
andb
xchg
push
adc
imul
mov
sbb
xchg
in
and
cltd
cld
call
cli
ja
stos
ds
xchg
dec
cmpsb
jmp
mov
sub
andb
fistps
test
sbb
mov
imul
jle
decl
lea
dec
in
fiaddl
sbb
mov
mov
cwtl
pop
mov
xor
inc
fnstsw
xchg
rcrb
adc
xchg
roll
shll
add
dec
and
popf
pop
iret
inc
jl
push
and
cltd
scas
sti
add
mov
pop
dec
stos
xor
inc
mov
shlb
test
xor
je
and
ds
hlt
sbb
sahf
fsubrs
jb
push
ret
xchg
xor
int3
jae
sbb
subl
mov
xchg
sbb
loop
jae
xor
cli
scas
je
pop
xchg
pop
shrb
aam
mov
enter
add
or
push
mov
push
insb
jp
mov
sbbl
adc
mov
push
add
nop
out
cmpsl
pop
movb
insl
cmc
pop
out
dec
inc
sub
dec
inc
push
repnz
push
mov
xchg
dec
out
push
cmp
out
or
xor
pop
pop
das
fcmovnu
sbb
jecxz
sub
addr16
iret
push
xchg
stc
push
je
inc
xor
xor
fwait
das
sbb
ret
outsb
push
mov
xchg
rolb
xor
mov
xchg
push
shrl
add
enter
adc
mov
dec
fisttps
xor
and
lea
mov
cwtl
inc
pop
ret
adc
jge
inc
ss
add
pop
shll
mov
fistpl
sub
pop
add
lds
sub
xor
lcall
xor
pop
movsb
adc
mov
addr16
int3
mov
nop
movsb
shll
mov
pop
jbe
aaa
pop
lcall
mov
cwtl
push
test
jl
push
jle
es
test
in
clc
pop
and
jge
repz
lahf
idivb
pushf
pop
mov
jmp
dec
divb
rol
mov
jp
cmpsb
cmp
or
js
hlt
pop
dec
out
mov
pop
sub
fadds
lahf
test
add
int
and
pop
jne
inc
sbbl
or
and
cmp
pop
imul
mov
outsl
rcll
mov
add
jge
sahf
cmp
lods
hlt
push
call
ds
popf
mov
neg
push
dec
aad
insl
cltd
pushf
xchg
decl
inc
cmp
pop
sbb
xchg
push
inc
shll
xor
pusha
dec
out
sub
pop
aas
xchg
ret
fisubrl
push
mov
jns
mov
shll
adc
mov
xlat
mov
lret
pop
in
mov
jbe
mov
and
mov
lods
mov
inc
cld
jp
rol
xchg
jno
adc
add
mov
and
mov
ja
fisttps
in
jp
fsts
gs
or
scas
xchg
cmpsb
std
rcrb
and
arpl
addr16
push
xor
mov
nop
sbb
ja
in
aam
cld
mov
loop
inc
popa
cs
sub
mov
lret
mov
push
xor
mov
fldenv
leave
cwtl
cs
jle
push
pop
das
pop
or
pusha
adc
mov
or
sbb
fcoms
roll
stc
iret
repnz
divps
shl
push
enter
outsb
jge
sub
in
stc
enter
aam
push
pushf
rcr
les
mov
push
xchg
pop
fsubr
dec
filds
jns
mov
fwait
stc
inc
cmp
push
repnz
lds
pop
lock
push
lods
adc
xchg
leave
rol
pop
lea
fdiv
imul
test
pop
stc
fcmovu
adc
mov
mov
test
cmp
xchg
lods
mov
cmp
jl
add
jle
out
xchg
dec
mov
outsb
jp
cmpsb
mov
pop
cmc
sbb
dec
enter
xchg
pop
js
and
mov
int
pop
xchg
lods
xlat
das
inc
test
mov
push
sbb
push
es
add
mov
insb
int3
stos
sarb
js
sbb
cltd
lea
xchg
fsub
roll
sbb
cmp
and
lret
xchg
dec
cmp
adc
push
xchg
or
mov
xor
int
dec
jbe
orb
xchg
mov
std
and
sbb
mov
sub
test
repnz
lahf
sub
es
mov
mov
ret
jl
in
adc
ret
scas
lahf
int3
stos
leave
jp
sbb
rcrl
cs
inc
fcompl
lods
push
lcall
ja
pop
inc
sub
addr16
sahf
repz
lods
jne
mov
dec
pop
push
pushf
pop
sub
mov
lds
mov
in
xchg
push
cmc
adc
shld
mov
mov
cmc
lret
mov
pop
push
dec
jno
jl
mov
lods
je
lock
mov
mul
add
cmc
or
fisubrl
jl
popa
mov
icebp
mov
mov
xchg
rcrl
mov
mov
nop
jae
jae
insb
jg
jl
jbe
or
sub
movsl
and
sahf
sub
ljmp
dec
inc
in
repz
dec
mov
fucomp
xor
fnstcw
enter
das
leave
xchg
cmp
scas
paddq
lret
test
hlt
das
dec
div
jmp
push
jle
lock
jle
iret
popf
sbb
pop
mov
rol
cmpsb
mov
movsl
test
add
out
pop
jecxz
mov
xchg
fisttpl
pop
sub
clc
adc
mov
gs
roll
push
cli
push
push
mov
rorl
pop
ret
adc
fstpl
int3
sti
inc
push
inc
or
cmp
dec
idivb
iret
cmpsb
ret
ja
shrl
push
adc
xchg
nop
mov
jbe
mov
stos
sbb
mov
cmp
sub
stc
popf
outsb
in
xchg
mov
ds
mov
mov
xchg
or
adc
sub
xchg
pop
sub
aas
aaa
adc
std
aad
rclb
jae
aaa
sbb
xchg
jns
xor
mov
out
add
aad
inc
push
lods
inc
pop
inc
mov
sub
sub
jae
cld
or
push
xlat
adc
sbbl
add
aad
cld
mov
sahf
adc
call
push
push
pop
jle
out
dec
scas
sub
lahf
and
test
mov
mov
and
dec
in
lods
into
xorb
dec
and
xor
jg
cmp
push
mov
pop
in
sub
adc
test
sahf
mov
mov
add
test
sahf
mov
loop
and
dec
gs
dec
aam
popf
xlat
lock
cld
repnz
jns
ret
xchg
xor
pop
ja
inc
cmp
dec
sub
dec
repz
push
push
cmp
fldt
loope
fwait
adc
cmpsb
daa
mov
jl
xchg
sub
jns
jp
xchg
cs
cmp
pop
push
jg
cmp
rol
sahf
xchg
or
out
xchg
pop
push
rorb
mov
js
pop
mov
aad
cli
outsl
ljmp
movsl
lods
xlat
stos
xchg
fcompl
maskmovq
imull
sahf
push
cmp
popf
jne
xor
xlat
mov
es
mov
outsb
es
rol
sarb
mov
mov
int
xor
fsubs
xor
leave
xor
pop
xchg
or
pop
jle
fnstcw
test
shrl
mov
dec
xchg
popa
fstpl
cmc
sahf
push
hlt
mov
or
jbe
xor
arpl
and
cmp
sbbl
inc
xor
cltd
out
scas
push
faddp
lods
push
push
xchg
push
inc
test
pop
insl
or
loop
daa
int
ja
sub
jg
cmpsb
ret
test
dec
fists
sti
pop
jmp
test
aad
cmp
xchg
cmp
outsb
mov
jle
xchg
pop
mov
or
mov
dec
insl
dec
sbb
out
scas
test
lods
push
rclb
xchg
pop
and
shld
mov
dec
hlt
mov
je
test
push
xchg
mov
xchg
das
dec
jmp
nop
into
inc
sub
mov
add
andb
fldl
push
adc
loop
xchg
sub
les
stos
dec
in
xor
jg
add
and
jp
std
mov
mov
cmp
mov
scas
fnstcw
push
clc
stos
aas
lret
test
int
mov
adc
sub
add
mov
xor
pop
adc
xor
mov
cltd
popa
sbb
pop
cmp
ret
cmp
pop
das
mov
and
fwait
cld
add
dec
hlt
les
pop
pushf
lea
push
push
xcrypt-ctr
cmpsl
fnstcw
mov
inc
jns
insb
mov
ret
movsl
shl
sub
pop
loope
lret
aam
ljmp
fldt
idivb
daa
cmpsb
adc
lods
shrb
jecxz
xchg
add
lcall
int3
scas
bound
and
lret
sbb
sub
xchg
ret
xor
scas
mov
gs
push
mov
rcll
jns
push
pop
xor
push
xchg
dec
insl
jne
adc
mov
fcomps
fnsave
push
pop
sub
mov
xchg
pop
inc
sbb
sbb
pushf
pop
mov
mov
jp
lock
mov
adc
xchg
mov
pop
movsb
inc
xor
out
loop
decl
jno
and
sub
hlt
jae
je
add
jo
push
fistps
rep
aad
pop
data16
subl
daa
xorb
jnp
dec
aam
stos
xor
adc
das
inc
adc
ss
jns
test
lret
lcall
iret
xchg
push
mov
and
inc
pop
pop
aad
mov
stc
popf
mov
cmp
cs
repz
or
stos
pop
adc
shl
aad
movsl
xor
pusha
addr16
jno
enter
es
je
stos
orb
pop
popf
sahf
mov
pop
mov
mov
sbb
or
movsl
sub
jge
push
jns
dec
mov
xchg
outsb
sar
or
loop
insb
pop
fidivrl
pop
es
jecxz
aas
outsl
mov
xor
andnps
into
mov
xchg
push
push
and
xchg
aaa
cmp
or
cwtl
mov
outsb
out
pop
out
xor
mov
rcll
jle
nop
push
aaa
mov
cmpsl
mov
sub
pop
xchg
and
mov
mov
jge
mov
pop
pop
add
or
inc
lcall
mov
mov
pop
xchg
xchg
push
cmpl
or
sub
loope
dec
push
rorl
jl
sub
repnz
lcall
stos
in
cmp
xchg
mov
jno
cmp
push
aas
adc
mov
iret
cwtl
fcoms
fstpt
enter
mov
icebp
es
shl
sub
add
hlt
cwtl
lret
mov
adc
stos
out
shrl
out
xchg
fidivl
fnstsw
jle
fdivl
lods
jb
das
cmp
es
fneni(8087
sbb
jmp
jmp
roll
mov
mov
psubw
xor
push
outsb
pop
push
sahf
push
int
sbb
mov
outsb
mov
hlt
fldcw
fdivr
mov
pop
pop
mov
cmpl
and
and
clc
jmp
loop
fwait
gs
xchg
pop
int3
cld
push
lcall
ss
lods
ss
lcall
pop
pmuludq
xchg
lods
repz
mov
popa
adc
add
fiaddl
ss
fnsave
cmpl
pop
lods
jmp
mov
sub
push
cmp
arpl
int
push
sbb
mov
mov
lahf
pop
pop
inc
aam
cwtl
add
jbe
mov
std
push
jecxz
pop
sub
add
clc
xchg
faddl
push
fs
popa
inc
adc
or
adc
inc
adc
ljmp
stc
push
popf
out
inc
sub
popa
sub
decl
mov
fldenv
push
mov
fdivrl
jg
xchg
mov
cmp
rol
mov
hlt
int
cmp
or
pop
adc
mov
jo
xor
ljmp
sub
lret
push
bnd
dec
xchg
pop
jmp
outsb
mov
pop
shrl
pop
push
sub
mov
int3
inc
into
and
jg
pop
outsb
shl
mov
pusha
iret
popa
or
xor
inc
das
mov
inc
push
pop
shl
cmc
mov
aas
dec
cmp
mov
dec
lods
lds
dec
xchg
inc
sbb
xor
xor
lea
insl
push
xor
adc
repz
xchg
pop
adc
repz
push
rcr
daa
mov
pop
cwtl
sub
mov
xor
lret
not
xchg
xor
adc
push
mov
adc
repnz
lret
hlt
pop
lret
mov
iret
ja
jge
mov
sbb
aas
es
imul
push
pushf
negl
xchg
inc
filds
lods
jp
int
sub
in
cld
iret
jnp
test
push
daa
push
outsb
sub
aas
push
pop
xchg
xor
mov
push
into
mov
ret
xchg
pop
mov
call
in
mov
adc
test
mul
negl
sub
and
int
gs
xlat
cmpsb
xchg
xor
xor
pop
or
out
faddl
pop
scas
pop
pop
or
lahf
fwait
push
aam
sti
mov
push
repz
inc
test
ret
push
mov
xor
test
xor
shl
shlb
jnp
std
and
xchg
jmp
sub
push
jae
daa
fcomps
jg
push
xchg
dec
add
fsubr
andl
pusha
iret
sub
cmp
insb
jno
call
jno
pop
jle
xor
test
mov
lods
repz
mov
jns
dec
sub
pop
insb
adcl
mov
sarl
mov
push
test
adc
fidivrl
fsts
xor
shll
pusha
mov
push
jl
sbb
mov
addb
xchg
xor
into
popf
xor
out
mov
and
ljmp
xor
leave
push
dec
adc
dec
xor
inc
enter
sbb
mov
sahf
in
int
stc
aad
faddp
jle
xor
jmp
lods
mov
adc
shl
call
repz
xor
lretw
shll
jbe
addr16
cmpsb
inc
xor
sbb
das
lcall
jmp
fwait
sbb
aas
test
movsb
shrl
mov
iret
pop
jae
movsl
mov
pop
sbb
aad
push
cld
pop
call
imul
stos
cmpsb
rclb
sub
fisttpll
sbb
aad
sub
mov
sub
xchg
js
es
ja
sbb
stos
addr16
sub
cmp
movsl
xor
in
mov
stc
xor
mov
pop
outsl
fcmovnu
jbe
add
es
icebp
cmpsb
popa
add
sahf
shrb
popf
cwtl
push
sub
fcoms
pop
adc
cmp
ja
dec
cmp
xchg
mov
shrl
pushf
dec
orb
or
movsb
sub
rcrl
xchg
gs
mov
fs
shl
mov
out
icebp
sub
sbb
enter
xchg
cli
push
ss
rclb
xor
stos
int
fidivrl
loop
pusha
test
or
mov
repz
pop
sbb
frstor
loope
add
jle
dec
ljmp
jne
ljmp
or
mov
in
cmp
insl
out
xchg
sbb
int
pop
add
pop
jae
es
ss
out
pop
lcall
mov
mov
lcall
fdiv
popf
dec
cmp
mov
pop
in
push
popa
arpl
dec
cmpsb
repnz
mov
mov
push
or
inc
push
incl
repz
clc
insb
fcompl
nop
push
ss
rcrl
and
repnz
pusha
stos
push
lods
adc
ficompl
pop
das
std
cmp
pop
cld
adc
sbb
rcll
stos
pop
pushf
inc
pop
ds
push
xchg
insl
out
mov
fstps
imul
lds
add
inc
int
push
push
int
test
sub
and
adc
sar
dec
sarb
das
repnz
jle
and
xchg
mov
pushf
xchg
inc
xor
push
sub
mov
jg
adc
pop
insb
add
fdivr
cmp
rcrl
aam
dec
repnz
outsb
push
mov
jo
push
sti
adc
or
dec
fdiv
mov
insb
leave
je
ja
jne
cld
sub
xchg
adc
cmp
fisubrl
pushf
mov
test
aad
jns
mov
jae
xchg
cwtl
push
fnstcw
pushf
shrb
stos
jae
adc
gs
sbb
xchg
aas
ljmp
dec
jmp
gs
fldl
mov
lods
pop
nop
push
xchg
pop
or
or
testl
pop
out
fstpl
mov
cmp
and
pop
mov
mov
cmp
or
jg
push
adc
ss
pop
adc
aam
rclb
clc
rcr
mov
inc
fldl
push
arpl
mov
loopne
mov
iret
fbld
into
pop
sti
arpl
scas
dec
shll
fldcw
sarb
daa
push
adc
pop
sub
mov
xchg
jg
enter
inc
hlt
xchg
shr
mov
sbb
xchg
or
mov
xlat
sub
jle
mov
jbe
fstl
stc
hlt
test
cmc
stc
xchg
sub
mov
aad
add
addr16
fistl
xchg
mov
push
incb
sbb
out
sbb
imul
inc
jecxz
ret
and
or
mov
jecxz
ror
jp
jmp
xor
sbb
enter
shrb
pop
dec
std
inc
sub
mov
lock
cs
pop
jge
sub
das
int
filds
pushf
scas
push
rorb
int
scas
js
clc
pop
mulb
xchg
fdivrl
xor
roll
xchg
pop
sub
int
test
ret
dec
mull
int3
pop
repnz
enter
nop
or
xor
push
xchg
xor
jns
jae
push
inc
popa
rcrl
push
jle
dec
aam
add
mov
mov
push
push
in
jbe
sbb
add
popf
xchg
pop
pop
push
pop
xchg
lcall
shll
inc
fsubl
and
mov
insb
aam
aam
jmp
push
or
pop
xchg
cmpsl
jno
push
outsl
mov
lahf
jecxz
aas
hlt
pop
cmp
movsb
fucomp
cmc
repnz
xchg
jns
mov
xor
mov
inc
lret
popf
jo
lea
hlt
jno
sub
mov
out
xchg
push
mov
jge
ret
xchg
rcll
dec
dec
mov
mov
mov
mov
adc
sub
adc
mov
add
xchg
push
jmp
outsl
and
sub
sbb
fstpl
pop
mov
push
int3
jne
inc
fisubl
mov
stc
pop
xchg
popa
sub
jne
inc
mov
out
mov
xchg
insb
jne
push
stc
push
mov
sar
cmp
pop
int
pusha
call
shlb
fcoms
dec
jbe
repz
rcll
jge
xor
divl
fisttpl
ljmp
mov
pop
in
jb
mov
push
aad
into
push
js
sarl
hlt
lret
push
hlt
jmp
xchg
mov
jle,pn
nop
pop
jb
pushf
clc
popf
pop
rcl
xor
xchg
les
lahf
xchg
jle
pushf
add
xchg
pushl
incb
bound
aad
mov
or
outsb
popl
xchg
add
mov
ret
mov
in
xor
adc
mov
fimull
mov
cmp
insb
mov
jns
cmp
mov
je
push
repz
dec
mov
inc
and
inc
jmp
add
mov
pushf
pop
in
leave
je
shrl
pushf
aam
loope
sub
mov
sbbb
cltd
popa
stc
les
or
push
mov
into
and
xchg
pop
sar
in
inc
fists
fucom
jnp
out
in
les
cmp
rorb
jle
cmp
call
das
cwtl
mov
jae
lods
xchg
push
cmp
pop
fstpl
push
mov
and
cmp
push
pop
pop
fdivrl
repz
xchg
mov
mov
lret
cwtl
fdiv
pusha
fcmovne
rcrl
adc
pop
xor
andb
sbb
icebp
sbb
adc
inc
aam
mov
lds
xchg
jb
mov
pop
mov
jge
xchg
mov
mulb
adc
cmp
mov
das
xchg
pushf
jnp
pushf
cld
call
sar
push
sub
xor
pop
push
jmp
lret
dec
mov
mov
mov
sub
fwait
lods
leave
mov
mov
cmp
mov
aad
mov
pop
mov
shrb
dec
orb
xchg
in
cmp
adcb
shrl
mov
jmp
cmpsb
pop
js
lods
push
cmpsb
mov
fdivl
inc
aaa
aad
cld
inc
jl
sub
jmp
pop
sub
aam
pushf
imulb
sub
lret
push
xchg
mov
cs
clc
fmull
popf
inc
cld
mov
aam
fnsave
sahf
outsl
cld
dec
arpl
inc
jle
fmul
jg
xor
outsl
enter
mov
jae
mov
mov
adc
jmp
stc
fadds
rcll
push
pop
aad
pop
adc
pop
cmp
inc
stos
jnp
sub
xchg
xor
stc
mov
fstps
sahf
push
ficompl
pop
lea
inc
push
mov
rolb
in
ds
pop
xor
fnstsw
adc
sbb
std
jecxz
and
aad
int3
add
inc
scas
int
frstor
mov
dec
call
add
mov
xor
sub
push
ret
lahf
int
scas
adc
push
jb
mov
xlat
cmp
ffree
xor
mov
lods
fmul
xor
sbb
dec
jmp
sbb
addr16
scas
mov
cmp
fcomps
sbb
jmp
adc
sbb
insl
mov
mov
flds
xchg
scas
mov
popf
jle
add
addr16
arpl
lcall
lret
int
test
cmp
bound
xlat
cld
es
ja
loop
hlt
inc
inc
in
cmpsb
mov
je
mov
popf
iret
jge
xchg
pop
adc
xchg
add
rclb
into
aaa
das
push
cli
nop
cli
pop
pop
pop
sahf
xor
lds
popf
icebp
aad
push
xorb
jle
popa
dec
in
sbb
pop
fisubrl
mov
lods
das
inc
out
xchg
out
or
loop
jnp
fildl
push
push
sub
mov
push
and
pop
rcrl
and
lret
pop
xchg
outsb
hlt
pop
je
adc
fs
lods
mov
xchg
push
add
iret
shll
addr16
popf
jnp
sbb
pop
mov
sbb
ficoml
icebp
shl
ret
pop
jle
test
xor
lock
sub
sub
mov
pop
inc
push
enter
cs
pop
mov
outsl
sti
out
popa
jno
add
test
sbb
mov
mov
pusha
or
enter
or
cwtl
mov
push
inc
dec
fidivs
setge
cli
pop
movb
mov
fwait
je
and
xor
pop
inc
das
push
xor
sbb
addr16
gs
fcom
fmul
mov
lea
push
js
mov
lods
fldenv
jecxz
out
push
insl
jl
mov
rcr
sti
in
aad
xor
stc
mov
incl
mov
sarb
aam
js
pop
icebp
sbb
test
repnz
lret
xlat
cld
stc
scas
mov
ret
push
xor
push
testb
jl
fcom
shlb
dec
lea
into
pop
cmpsb
daa
jb
popa
jne
jb
ret
jle
mov
fcomps
aam
jo
mov
jmp
dec
pop
mov
xchg
bound
popa
frndint
stc
sbb
adc
in
jl
dec
push
jle
popa
fwait
int
sahf
push
stos
mov
pop
xchg
fidivrl
incl
shrb
sub
nopl
leave
shrl
xor
repnz
stos
xchg
xchg
mov
xchg
into
xor
aaa
inc
push
out
addr16
xor
dec
ljmp
sub
pop
cld
push
scas
mov
dec
pop
cmp
mov
jl
jg
out
fsubs
out
adc
mov
adcb
cmpsb
cmp
sub
cmp
add
loop
add
lcall
movsl
mov
divl
stos
jmp
xor
fnstenv
aam
movsb
and
lcall
mov
in
and
push
mov
les
lcall
cs
cmp
or
dec
ja
lret
push
out
shll
push
jmp
rcrb
ja
gs
sti
jl
lcall
mov
dec
cmp
out
mov
pop
comiss
fistpl
fistl
test
sbb
shll
push
testl
jg
mov
xor
sbb
fdivr
les
lods
mov
nop
fcomip
and
in
hlt
pop
movsl
add
dec
inc
push
inc
xchg
test
mov
imul
pop
mov
mov
or
pop
jbe
incl
mov
adc
adc
shr
ljmp
dec
mov
pop
push
repnz
lods
repnz
xor
push
cmp
ds
mov
xchg
mov
pop
mov
jns
ja
mov
negl
dec
iret
dec
dec
data16
popa
xchg
icebp
inc
pop
sbbl
mov
sbb
xchg
xchg
xchg
dec
dec
mov
outsb
mov
lret
xchg
daa
push
in
inc
xchg
pushf
lods
mov
es
mov
and
inc
cltd
lods
fildll
and
ja
test
cltd
push
pusha
or
pop
adc
out
nop
and
sar
inc
dec
adc
adc
cmp
adc
rcl
or
movsl
out
rclb
shrl
or
jbe
sub
in
es
cmpsl
pop
je
push
pop
cmpsl
add
roll
mov
or
jns
pop
mov
repz
cmp
sbb
cld
pop
inc
inc
pop
test
bound
xor
addr16
fcomi
inc
pusha
mov
xchg
pop
dec
loop
rorb
lahf
mov
mov
add
mov
pop
push
mov
pop
push
mov
fidivl
imul
les
cmpsb
push
cli
aad
shlb
pop
fcompl
mov
mov
pop
fcmovne
inc
sbb
jnp
rcll
popf
enter
jnp
mov
jg
dec
lds
stc
xor
pop
mov
pop
sub
sub
push
nop
add
popa
pop
xchg
out
aam
sub
pop
xlat
mov
pop
pop
fiaddl
cmp
mov
aad
mov
pusha
fmuls
outsl
das
mov
in
xor
adc
cmpsb
sub
and
pmaxub
xor
rcll
mov
lods
xchg
pop
repz
notb
ffree
pop
adc
dec
enter
ss
xchg
popf
stc
xlat
jne
push
jge
xor
out
shrb
gs
aad
inc
mov
or
push
adc
dec
test
shll
scas
testl
mov
mov
cld
push
or
cmp
fistpl
adc
into
cmpsb
cmp
test
sti
xchg
mov
ds
outsl
mov
popf
xchg
int3
and
inc
xchg
loope
js
jl
pop
sbb
jbe
leave
cmp
and
sbb
hlt
add
lcall
push
int3
lcall
inc
out
jl
sahf
daa
jo
enter
pop
push
and
and
insb
add
cmp
mov
dec
sahf
clc
cwtl
ja
and
loopne
sub
push
cli
filds
leave
push
mov
add
es
mov
data16
popa
push
pop
or
pop
jg
clc
sub
in
push
mov
hlt
sub
cmc
outsb
sub
insl
orb
rclb
rolb
das
fbld
push
out
sarb
push
inc
mov
adc
lret
push
jg
jae
rclb
inc
fistpl
push
fisubrl
nop
repnz
pop
scas
adc
into
pop
cwtl
cs
andl
dec
inc
inc
sub
cmpsl
lods
pop
mov
mov
clc
insl
aad
jmp
jg
clc
cld
cmc
mov
repnz
aaa
std
adc
pop
cld
and
xchg
in
mov
mov
rcr
test
pop
data16
ret
adc
and
bound
shrb
jg
ljmp
jle
popa
cld
ja
and
fnstcw
pushf
je
jmp
inc
sub
dec
jno
inc
hlt
iret
fisubrl
cmp
lds
or
bound
xchg
aad
push
mov
jge
lea
cmp
or
jge
push
mov
fcompl
int
cwtl
pop
pop
sub
in
mov
sub
push
or
inc
test
lret
shlb
push
mov
xchg
fisubl
cs
sbb
fcom
popf
fst
push
jns
mov
arpl
ja
loopne
jg
or
xchg
mov
je
fstpt
cmp
cmp
cltd
dec
ljmp
push
mov
cmc
sbb
mov
mov
movsl
pushl
test
jl
aam
in
push
inc
and
cmpsb
xchg
jle
fnsave
jno
jbe
xorl
aad
lods
outsl
movsl
mov
frstor
sub
mov
push
xchg
add
rcll
cmc
add
wrmsr
lea
lods
pop
insb
cmp
repz
scas
push
seta
add
pushf
pop
sahf
adc
lods
test
aad
sbb
rcrb
jle
int
in
or
sub
add
add
mov
out
mov
xor
jb
pop
xchg
add
jno
and
into
mov
cmp
or
sbb
sub
gs
dec
xlat
imul
pop
mov
aad
pop
jecxz
mov
pop
movsl
popf
fsubrl
std
cld
loop
sbbb
in
int3
movl
je
cltd
lds
add
adc
mov
dec
adc
mov
push
and
movsb
lods
ja
outsl
out
adc
call
mov
jae
mov
rolb
ljmp
inc
ret
scas
les
outsb
fstp
sub
rcrl
adc
mov
cmp
mov
ret
jbe
cmp
pop
stc
jle
mov
js
int3
xor
push
out
push
clc
psrld
mov
jge
mov
push
test
push
push
iret
lea
repnz
dec
pop
mov
mov
sahf
mov
cmp
js
sahf
or
fisubl
lret
popf
push
push
mov
pop
in
mov
int3
xchg
shl
pop
fdivr
mov
fs
iret
xor
mov
pop
sub
inc
mov
icebp
fadd
cmp
popf
mov
dec
sbb
dec
scas
push
sar
mov
ds
inc
push
scas
je
or
addr16
daa
or
shll
and
sar
outsb
add
imulb
pushf
mov
pushf
shlb
adc
pop
sbb
jne
mov
cwtl
or
arpl
add
stos
mov
push
inc
ret
mov
cmpsb
shlb
push
fldt
pop
fstp
fcompl
fsub
pop
push
insb
or
ficompl
push
pop
insb
ficoml
add
push
aad
push
fst
aaa
push
ljmp
clc
test
stos
lcall
xchg
sar
call
sbb
inc
loop
xchg
rcl
adc
mov
into
add
sub
call
jecxz
pop
xor
mov
aam
xchg
int3
dec
push
pushf
leave
sbb
xor
jae
cmp
push
popf
scas
push
int
lods
leave
leave
push
lret
dec
push
jbe
mov
dec
enter
lret
lods
frstor
imul
and
call
pushf
xchg
loope
scas
xlat
xor
arpl
jne
insl
test
shll
adc
sub
cmc
xchg
outsl
fwait
dec
xor
dec
inc
pop
mov
out
inc
fs
aad
pop
sub
inc
jne
adc
mov
ljmp
sbb
addb
inc
cmp
jb
mov
fldcw
push
push
hlt
xchg
shl
sub
in
push
imul
fwait
mov
pop
cmp
scas
xchg
mov
movaps
test
lea
sub
push
shrb
lods
pop
mov
cmp
pop
insl
xor
jbe
pop
mov
pop
shll
leave
jne
hlt
sub
pop
and
rclb
aam
cmp
fsubrl
fistpl
fnstsw
mov
or
pop
ja
jo
cmp
mov
shrl
aam
cli
ss
fdivl
jo
cmp
fidivrs
pop
jae
stos
pop
les
jp
lcall
cld
push
lods
mov
mov
nop
jno
cs
jo
mov
add
scas
subb
mull
addl
fidivrl
in
adc
in
adc
cltd
fldl
lahf
out
jl
outsb
pop
sarl
fsubr
mov
push
pop
fnstsw
repnz
jp
ret
lahf
mov
scas
mov
xchg
add
insb
push
mov
cmp
inc
xchg
mov
fistl
test
pop
xorl
mov
and
push
mov
jns
sbb
mov
xchg
flds
pop
fnsave
testb
mov
pop
jbe
jp
mov
jns
mov
data16
mov
push
jnp
xor
adc
push
push
push
pop
shll
or
push
fstpt
loop
stc
push
aad
in
in
aam
adc
std
sbb
xlat
mov
cmpsl
mov
add
sub
mov
xchg
fistpl
iret
nop
shll
pop
out
mov
orl
mov
mov
pop
out
jae
movsl
mov
fwait
xchg
lcall
push
lock
aaa
int3
insl
fldenv
ss
imul
or
sub
sbb
inc
popa
rclb
adc
pushf
pop
addr16
dec
add
xchg
pop
jmp
xchg
push
testb
dec
add
pushf
cli
ja
jl
push
inc
mov
sbb
shlb
pop
xor
test
out
and
or
mov
mov
scas
push
sbb
enter
jp
nop
pop
lods
sbb
pushf
sbb
jnp
push
push
jae
sub
mov
cmp
xchg
mov
repnz
pop
fldenv
cs
subl
sarb
sub
int
negl
cmp
sbbl
pop
sbb
pop
stc
mov
rcrb
sbb
pop
lods
push
sub
outsb
push
movb
dec
sti
lods
repnz
data16
enter
dec
je
repz
into
dec
mov
push
fstps
xchg
sbb
outsl
sahf
cwtl
xchg
pop
push
fstpl
pop
lcall
mov
cmp
push
leave
cmp
jns
sahf
pop
sbb
stos
call
sahf
dec
sbb
fcompl
xchg
xchg
lea
jne
push
fidivs
xchg
push
mov
loop
addr16
mov
mov
aad
bnd
xchg
hlt
mov
push
cmp
push
mov
mov
fdivrl
xchg
aad
lods
popf
js
arpl
in
lret
push
rorb
lret
push
dec
fistl
inc
jo
sbb
jge
pop
mov
pop
mov
pop
or
jo
inc
or
cmpsb
ss
and
cmc
mov
adc
dec
mov
mov
aam
jg
lea
cmp
enter
jmp
fldcw
xor
std
int
xor
xchg
mov
sti
mov
sahf
stos
imul
xchg
jnp
or
xchg
roll
movsl
sbb
daa
outsl
inc
mov
adc
dec
push
mov
jmp
aas
mov
push
fstpl
lea
cli
jmp
jmp
cli
sbb
std
call
fs
les
mov
into
cmpsb
xorl
popa
leave
pop
dec
movsl
loopne
fcomp
int
lea
cld
pop
push
in
fstpl
ljmp
pushf
mov
jge
jle
ja
lcall
repz
cmp
lods
aaa
push
ret
sbb
fcmovnb
into
mov
shlb
pop
sub
insb
push
mov
cmpsl
rcrl
ja
and
sub
repz
mov
in
int3
repz
xor
stc
cld
cs
cwtl
pop
pmaddwd
mov
push
daa
out
fildll
adc
mov
mov
cs
jbe
sbb
jno
jo
lods
shll
push
and
out
iret
jmp
cmpsb
idivl
push
idivb
sbb
sub
mov
xchg
lods
repz
adc
fdiv
adc
mov
sahf
push
addr16
jnp
mov
or
ss
sbb
jge
cld
nop
inc
test
in
out
ds
xor
push
cltd
popa
adc
or
inc
pop
dec
push
jl
aaa
sub
int
pop
in
lea
dec
dec
xchg
ret
mov
pop
adc
xchg
stc
jg
jmp
aam
xchg
sbb
mov
push
cmp
push
aam
mov
popf
and
xor
pop
or
push
mov
mov
sahf
loop
out
inc
pushf
scas
push
xchg
insl
xchg
add
push
cmp
ja
push
and
mov
les
std
sbb
add
into
xor
movsl
pop
repnz
xchg
lods
mov
clc
leave
fsubp
cld
test
ss
xor
jle
test
movsl
xchg
xor
lods
ss
cmp
pop
fidivrs
ja
adc
xor
aam
cld
repnz
mov
in
inc
out
add
rclb
cli
bound
enter
or
repnz
or
std
fcoms
lods
mov
dec
aas
scas
cmp
into
repnz
enter
adc
mov
pop
loop
mov
aad
divl
imul
pop
repz
jo
push
pop
je
fidivrl
repnz
sbb
fimull
rclb
xor
stos
sbb
push
scas
mov
in
mov
pop
adc
xor
mov
and
sahf
mov
cmp
std
xchg
jbe
pop
insb
mov
jb
jmp
cs
pusha
xlat
sbb
leave
into
mov
daa
aad
cld
outsl
pop
mov
cmp
sahf
mov
mov
xchg
mov
push
adc
mov
push
inc
mov
mov
jle
push
ds
fcom
pop
leave
lods
dec
mov
jecxz
jge
jle
jnp
fmull
and
stos
adc
outsb
inc
rolb
mov
xor
pushf
ja
repz
push
xor
bound
mov
sub
adc
imul
pushf
in
clc
fcmovnbe
shlb
cmpsl
fdivl
push
sub
lds
rcll
andb
paddq
lods
xchg
cld
lret
scas
ljmp
cmp
lcall
fimull
pop
inc
fmuls
jmp
cmpsl
mov
jo
lock
cmpsl
push
hlt
test
xchg
lods
mov
jl
cmp
les
shrb
ljmp
sbb
pop
lods
mov
fdivrs
cmp
mov
inc
les
push
movsb
aad
jb
iret
cmp
daa
popa
inc
iret
dec
aad
mull
cmp
stos
add
push
scas
rorb
push
lahf
adc
jnp
and
mov
pop
mov
pop
lods
push
mov
fsubs
pop
int3
cltd
dec
outsb
outsb
push
dec
xbegin
xchg
aad
push
pop
out
aad
adc
pop
push
scas
push
push
daa
lea
gs
lea
add
daa
pusha
pop
mov
cs
stos
dec
ja
push
mov
rcl
les
adc
xchg
adc
cmp
xchg
das
xchg
aad
pop
mov
pop
cli
mov
or
push
cmp
inc
and
sub
lods
stos
shrb
fwait
dec
pop
push
cld
dec
and
andb
jns
push
mov
mov
adc
xrelease
mov
mov
ret
mov
insl
lret
and
adc
pop
int
mov
addb
pop
aaa
dec
ret
rcl
push
pop
xlat
enter
pop
xor
jle
lcall
sbb
mov
sbb
stos
inc
add
fidivrs
sbb
cmpsb
clc
movsb
add
adc
xchg
andb
pushf
xor
pusha
mov
aam
mov
push
je
add
pop
adc
mov
mov
push
mov
popf
cltd
fimull
pop
pminub
push
pop
mov
dec
outsb
cli
adc
rorb
lods
dec
sahf
push
sbb
and
scas
jp
mov
push
cmp
mov
dec
sub
pop
pusha
test
outsl
sub
mov
xchg
or
jecxz
cmc
lods
sarl
enter
clc
pusha
mov
xor
push
sub
adc
add
int
popa
add
test
add
cmp
jle
push
cmp
jl
push
enter
push
scas
jne
jecxz
icebp
lahf
push
std
pop
mov
outsb
add
roll
mov
sbb
fisubl
rcr
rcrb
lods
pop
mov
xor
outsl
lods
jl
ljmp
div
pop
jbe
jbe
les
push
adc
cld
sub
pop
fcoml
hlt
shl
sar
push
imul
mov
frndint
sub
popf
filds
mov
xchg
inc
gs
scas
fnstsw
mov
das
mov
push
fisttpll
fsubrl
pop
pop
xchg
sbb
pop
inc
cmp
add
ja
mov
cmc
mov
sbb
jle
dec
aam
imul
xor
mov
mov
rorb
ffree
cmovne
inc
int3
pop
sub
pop
enter
call
and
repnz
cltd
les
push
popa
je
xchg
add
pop
cmp
xor
outsb
push
inc
jl
out
inc
add
sub
cwtl
jns
mov
ljmp
fwait
and
popa
jl
adc
outsb
in
popf
jg
xchg
das
sahf
xlat
fcoms
aam
jle
int
test
mov
adc
add
push
jns
pop
cld
sub
pusha
jae
iret
outsb
fldt
pop
cmp
and
adc
shll
aas
jne
xchg
xchg
fnstenv
and
fucom
ss
in
mov
mov
xchg
xor
xchg
pop
popf
add
push
fdiv
mov
pop
push
xor
int3
je
popf
fcmovb
push
jmp
pop
add
into
cmp
xor
and
pop
jle
sub
adc
xor
ljmp
mov
jbe
or
push
cmc
clc
inc
cs
xchg
add
mov
aam
mov
cs
test
jecxz
imul
xor
cmp
rorl
mov
bound
and
fstps
mov
adcb
les
inc
ja
xor
and
inc
mov
jmp
push
pop
and
add
mov
push
mov
push
mov
push
add
pop
push
cli
outsb
rcrl
push
daa
ret
cmp
mov
stos
cmp
mov
sbb
and
lret
cmpsb
je
mov
xor
rorl
sbb
mov
pop
dec
dec
push
lods
pop
mov
dec
mov
shll
ljmp
push
dec
and
out
clc
shl
ja
lds
fisubrl
push
test
fdiv
inc
jge
inc
pop
test
mov
cmpl
scas
ljmp
mov
jl
and
or
lds
sbb
and
xchg
jae
mov
cmpsb
lret
mov
lds
and
addr16
lods
xlat
sbb
sahf
out
ja
pop
xchg
push
cmp
dec
rorl
xchg
repz
xor
into
decl
push
aad
inc
pop
mov
das
loope
movsl
xor
xchg
bnd
rcrl
pop
lds
inc
adc
push
lret
pop
lea
and
dec
gs
mov
add
sahf
addr16
pop
fwait
sbb
std
lds
andl
lea
lods
xor
cmp
sbb
mov
mov
insb
adcb
xchg
outsl
inc
lods
sarb
or
lods
add
and
cli
mov
adc
enter
aas
mov
fsubs
xor
adc
cltd
jb
lods
cld
cs
lods
fcomps
or
push
out
add
test
pop
mov
mov
mov
into
mov
dec
js
jns
or
cmpsl
into
push
nop
loop
outsb
inc
mov
test
adc
out
push
hlt
aaa
sub
dec
jge
cmp
push
gs
imul
cmp
stc
jne
int
fnstsw
push
cmp
mov
out
cmpsl
int3
mov
dec
fstl
sub
loop
ret
inc
xchg
lods
push
pushf
dec
cwtl
scas
fiadds
jmp
sub
adc
dec
insb
orl
lods
repnz
push
dec
gs
adc
xchg
test
shll
xchg
lret
push
ja
dec
mov
roll
test
cmpsb
pop
pop
aaa
mov
pop
dec
movsl
cltd
test
mov
cmp
xor
pop
aad
adc
in
jg
push
cmpsl
cmp
mov
inc
jno
mov
fs
pop
xchg
aad
sahf
sbb
adc
mov
and
scas
clc
xor
repz
lods
push
mov
cmp
movsl
int3
xorb
scas
pop
mov
dec
cwtl
neg
dec
pop
mov
mov
fwait
cli
pop
push
enter
rorl
mov
fs
addl
push
push
sub
mov
mov
jl
inc
cmpsb
xor
push
mov
int3
mov
push
mov
push
dec
cwtl
jb
adc
mov
fld
mov
mov
jge
pop
inc
js
inc
and
add
popf
loopne
jne
rcrb
rol
cmpl
pop
xchg
or
or
mov
out
adc
pop
dec
mov
jmp
aad
cwtl
cltd
fcoms
ja
das
out
ljmp
cmpsl
pop
loop
lods
adcl
sti
jmp
fildl
aam
inc
or
inc
loopne
aam
push
int3
and
btc
push
push
aam
cmp
mov
push
repz
rolb
xor
cmp
sbb
cmpsl
jge
out
sub
lds
clc
mov
incl
imul
mov
negb
mov
push
mov
testb
int
out
cmpb
cmp
scas
push
push
ljmp
jnp
mov
ror
push
movsl
clc
mov
fcmovnb
lock
mov
cltd
inc
cld
mov
pop
or
ljmp
fld
mov
pop
add
dec
mov
enter
mov
cmp
test
mov
pop
lahf
lahf
int
int3
push
dec
push
lcall
out
lahf
pop
mov
fdivs
pop
cmc
xor
mov
loop
cli
out
fwait
push
or
cmp
inc
pop
mov
add
fistl
cmpsl
pop
sub
pusha
imul
push
lahf
or
mov
aam
mov
push
pop
sahf
je
mov
mov
adc
pop
pop
loopne
lds
das
lcall
rcl
fxch
les
icebp
insl
rorl
es
shll
rcll
adc
sbb
fimull
adc
adc
imul
inc
pushf
jae
sub
mov
aas
fstpl
imul
shlb
lahf
ret
mov
cwtl
xor
jae
push
rclb
xor
daa
je
jge
shll
stos
test
lahf
out
ror
hlt
aam
mov
orb
inc
lahf
arpl
push
nop
sahf
cltd
pop
sub
leave
inc
hlt
lret
pop
int
shrb
lods
jle
ficompl
jae
inc
xor
pop
add
jne
xchg
rcrl
aas
pop
pop
lds
stos
pop
push
pop
pop
mov
pop
adc
adc
insb
xor
pop
into
cmpsb
insb
nop
je
aad
push
jns
mov
shll
sub
jg
pop
mull
sahf
jo
sbb
jl
pop
sbb
pop
pop
sar
shll
add
push
js
cmp
or
mov
stc
enter
cltd
push
popf
mov
xchg
int3
mov
rolb
or
pop
lea
call
mov
test
mov
incb
jp
inc
mov
adc
xor
adc
dec
push
and
fsts
scas
popf
in
xchg
cmp
push
fdivrl
jge
lahf
pop
adc
and
sbb
in
pop
popaw
push
xchg
cmpsb
es
cmp
pop
pushf
dec
dec
ss
pop
sub
xorb
and
sarl
subb
pop
aad
or
mov
notl
mov
pushf
push
ds
xchg
xchg
stos
cmp
cwtl
push
xor
popf
das
aam
pop
scas
imul
push
in
push
mov
sahf
mov
aam
inc
cltd
lds
jbe
mov
push
lock
dec
sbb
inc
cld
sub
xor
cmp
dec
fistl
inc
in
outsb
das
rcrb
sar
sub
popa
dec
xchg
dec
daa
stc
or
mov
mov
sahf
cmp
or
jle
dec
mov
nop
mov
xchg
ds
dec
adc
jp
popf
mov
js
fcmovb
sahf
pop
ret
lea
dec
fwait
aad
lret
movsl
shlb
cmp
jnp
int
dec
cs
sbb
xor
aaa
aas
lcall
in
jb
sbb
add
lods
mov
je
lods
aad
stos
pusha
mov
pushf
xor
inc
push
mov
sub
and
mov
sub
push
test
dec
jl
sti
jbe
nop
jo
pop
sbb
sub
movsl
cltd
and
xchg
push
testb
in
jecxz
mov
lcall
test
cwtl
jae
pop
gs
push
xor
adc
xchg
cmp
dec
out
rcl
pusha
sahf
dec
out
sti
mov
push
xchg
das
lret
out
mov
das
cmp
push
aaa
pop
cs
inc
ja
cmp
fmull
push
inc
mov
cmc
rcll
push
psubb
jge
inc
popa
out
mov
push
jg,pn
shl
dec
pop
and
je
aas
mov
fucomp
jbe
fisttpl
pop
push
sbb
xlat
clc
aad
add
enter
jns
mov
int3
adc
jo
push
ja
aaa
cmp
jns
mov
inc
sub
insl
mov
mov
sub
and
xchg
sub
inc
pop
jns
jge
lret
mov
sbb
mov
xor
cmp
mov
movsl
cmp
add
xchg
dec
pushf
punpckhwd
ja
das
mov
lcall
fcoms
xchg
dec
int3
jecxz
jo
sub
inc
addr16
movsl
enter
fmull
jbe
xor
dec
out
in
xor
adc
divl
xchg
cmpsl
aad
sbb
dec
mov
cmp
sar
xchg
mov
xchg
fsubl
sarl
dec
jae
addb
repnz
inc
fcompl
pop
inc
fcoml
mov
cld
insl
push
stc
jmp
test
rol
jl,pt
ffree
js
pop
out
fdivs
xor
cmpsb
adc
jmp
add
fmul
cwtl
lahf
pop
sbb
mov
lcall
fadd
shlb
daa
xchg
dec
outsl
pushf
ror
fstpt
cmp
out
roll
or
sbb
and
ret
fcmovbe
jae
jne
sub
and
aam
rcrl
xor
aam
xor
imul
push
dec
lret
imul
pop
pop
into
xchg
jno
pop
stc
push
adc
dec
cmp
and
outsl
int3
jbe
jnp
cmp
push
cmp
lret
jnp
dec
jnp
mov
fcoml
push
mov
cmp
xor
shll
cmc
int
ja
cmp
repnz
dec
dec
pop
jmp
inc
inc
fwait
in
inc
push
sbb
mov
mov
data16
pop
pop
fiadds
inc
lods
cs
addl
lods
pminub
aaa
mov
xchg
push
xor
mov
aaa
aam
fsts
fisttpll
add
frstor
fstpt
cmp
pop
mov
adc
cltd
jg
addr16
xchg
fidivrs
cltd
adc
mov
push
aad
sbb
push
mov
sub
sbb
iret
in
fst
push
push
sub
jno
das
shrl
in
pop
sbb
ljmp
test
out
or
add
adc
cmp
inc
xor
outsl
adc
dec
pop
jmp
ds
inc
jbe
sahf
xchg
sub
cwtl
mov
mov
xor
sbb
mov
lock
dec
dec
hlt
inc
lods
test
les
and
lods
rclb
cli
das
mov
enter
repz
add
or
icebp
enter
xchg
jb
jbe
mov
jnp
mov
mov
jl
mov
fisttpll
fdivl
out
push
fimull
sub
movb
push
rcrl
push
pop
xor
pop
lods
movsl
repnz
incb
mov
stos
cmc
mov
fcmovnu
push
dec
sysenter
out
xchg
pushf
sbb
nop
addr16
push
aaa
ss
aas
aad
fdivl
pop
or
inc
fnstcw
ficoml
enter
sahf
adc
fidivrl
lods
xchg
mov
xchg
les
je
or
pop
int
call
aaa
add
repnz
mov
mov
push
mov
iret
cmpl
xor
es
mov
lds
push
push
sub
ljmp
es
xchg
pop
xor
inc
adc
aam
xorl
ret
sub
xor
clc
add
fildl
jno
inc
dec
loopne
xor
cltd
in
xchg
push
cmpsb
inc
xchg
fisubrl
out
and
jp
jnp
mov
pop
mov
or
push
movsb
sub
movsb
jg
sarl
clc
notb
enter
rolb
adc
xchg
or
fisttps
repz
bound
jg
cmp
jge
xor
mov
fmull
xchg
sub
addr16
ret
fcoms
fnsave
xchg
leave
dec
test
sbb
scas
pop
ret
idivb
xchg
lods
fwait
push
hlt
cmc
aad
scas
dec
sarl
inc
clc
les
add
xchg
daa
scas
scas
repz
dec
aam
stos
dec
fdivs
lret
mov
add
inc
jmp
orb
lret
out
es
aaa
sbb
sbb
stc
adc
push
lret
cmp
or
fisubrl
push
je
adc
minps
jg
inc
fnsave
int3
and
mov
pop
push
push
adc
aam
add
mov
push
fs
std
dec
stos
ss
pop
cld
or
mov
fsubrs
scas
inc
pop
push
mov
sub
mov
push
xchg
jb
pop
pusha
rcll
jo
in
sub
jecxz
jle
aad
adc
dec
sti
inc
ds
pushf
mov
sub
fxch
repnz
cmp
or
lods
mov
jle
cwtl
inc
xor
int3
sti
fcmovnb
cltd
cltd
mov
scas
sti
rcr
xchg
fsts
pop
sbb
bound
sarb
mov
pop
rcrl
xchg
mov
sbb
push
in
pop
pushf
shll
pop
mov
inc
enter
dec
iret
xchg
leave
pop
mov
shl
push
sbb
inc
fcom
cmp
inc
sahf
xchg
mov
jnp
pop
in
pop
jge
std
xchg
dec
pop
cmp
sarl
mov
mov
shl
pop
in
fnstenv
fidivrl
push
cmp
mov
lds
shrl
aam
sahf
rcrl
mov
roll
jp
pop
fmull
sahf
roll
or
stos
mov
stos
lcall
dec
sbb
sub
shrb
mov
fwait
mov
pop
lret
mov
sbbb
mov
fadd
pushw
clc
shr
cs
sbb
cmp
sbb
cs
pop
rcrl
jmp
cs
cltd
roll
imull
fld
jp
cs
stc
sar
cs
sbb
pop
mov
cmp
loope
cs
mov
mov
jp
xlat
test
pop
xor
imul
pop
rcrl
outsb
mov
mov
sarl
mov
sarl
jp
enter
sub
xchg
aaa
je
cmp
stos
fxch
stos
scas
inc
xchg
jp
inc
clc
xchg
fwait
dec
xor
xlat
push
ss
adc
xor
addr16
stos
ficompl
xchg
mov
sbb
stc
enter
pop
push
mov
mov
mov
rorb
mov
fcompl
rorb
inc
pop
dec
fmul
adc
dec
or
or
enter
fadd
rol
sub
jb
adc
fidivrl
cmp
fdivrl
dec
adc
fdivrl
dec
xchg
cmp
fdivrl
test
lods
dec
add
xchg
stos
fsubrl
rorb
add
xchg
scas
enter
cltd
push
rcll
push
mov
je
pop
cltd
mov
cmc
push
rcll
or
cltd
int
rolb
cwtl
push
iret
fmul
or
or
dec
daa
in
ret
ret
mov
into
insb
xor
push
sub
push
ret
mov
aam
fisttpl
loopne
mov
loopne
dec
mov
test
mov
sahf
iret
rcll
dec
in
inc
icebp
cmp
push
popf
lds
dec
sarl
stc
cmp
mov
es
je
mov
aad
nop
aaa
leave
ds
xlat
pop
fs
mov
jae
sbbl
fcmovbe
andb
loopne
fcomps
rcrl
dec
pop
lock
fadds
push
dec
or
lcall
mov
mov
pop
mov
and
xchg
out
pushf
cld
dec
and
roll
adc
mov
enter
sahf
mov
cmova
fimull
shr
and
and
outsl
rcr
out
xor
and
mov
test
pop
and
ret
rcrl
out
shl
add
addr16
mov
cld
sbb
divb
xchg
cli
loop
mov
test
pushf
aam
inc
cwtl
ss
adc
jmp
pop
and
int3
fidivrl
mov
dec
popa
stc
mov
sbb
pop
outsb
pop
mov
ret
jne
xchg
xchg
outsl
rorl
repnz
cltd
fwait
mov
push
mov
adc
jp
popf
roll
fldt
mov
into
std
fcoms
aaa
fs
das
lcall
aas
adc
ljmp
adc
mov
lock
scas
cmp
inc
sbb
stos
mov
shll
and
push
bnd
cmp
jg
cli
add
sbb
dec
leave
jne
in
jne
pop
das
cs
test
shl
xchg
daa
push
mov
leave
pop
push
cmp
jge
pop
fstps
lods
popf
adc
imul
jnp
test
clc
or
shll
stos
xor
pop
popf
arpl
or
xchg
stos
mov
sbb
pop
cltd
dec
jmp
jnp
lret
inc
in
jnp
mov
cltd
mov
push
mov
fstps
cmp
pop
push
addr16
jp
xlat
and
cmp
mov
ds
or
xor
popa
inc
jne
inc
clc
jmp
add
add
loopne
cltd
testb
cmp
jbe
jle
jg
xchg
dec
shrb
rol
xchg
lcall
lahf
push
mov
fidivs
ljmp
cmpsl
push
push
xor
fstps
jmp
push
sub
jb
jne
mov
pop
push
sahf
cli
fidivl
jge
scas
fcomps
pop
sub
loope
sub
dec
out
jge
call
pop
repz
and
jg
xlat
cmpsb
lcall
ljmp
pop
out
movsl
jne
cmpsl
push
mov
insb
cmpsb
push
cmp
pop
ret
cmpb
cld
in
xchg
sti
jmp
fs
xchg
and
push
fld
movsl
mov
push
or
jmp
popa
pop
xchg
sbb
das
adc
loop
and
test
out
mov
ja
movsb
setae
mov
push
aad
pop
rclb
shll
mov
cmp
popa
pop
fcoml
das
push
popf
cmp
mov
popa
mov
fwait
mov
in
loopne
sbb
jbe
xchg
mov
push
jno
xor
test
pushf
sbb
fcoms
ficompl
aad
scas
push
cmpsl
call
adc
cmp
fstpl
cmp
ret
xor
adc
jle
popa
mov
cld
sub
stc
dec
cmpsl
jne
ja
sub
fldcw
daa
add
xor
pop
repnz
mov
xor
popf
jp
lock
pop
js
mov
pop
mov
xchg
sub
ret
add
daa
bound
sti
mov
loopne
sbb
ss
aad
ds
sahf
push
movd
mov
aad
mov
roll
push
push
xchg
rorl
movsb
clc
in
mov
ds
mov
out
lods
jae
mov
mov
jnp
aad
fisttpll
ja
out
ficompl
xchg
xchg
in
stc
xchg
jge
movsb
repnz
ret
lds
mov
xor
ds
pop
xchg
or
cwtl
sub
adc
xor
pushf
in
loopne
insb
adc
shlb
nop
stc
stc
xlat
pop
sbb
je
mov
adc
in
jmp
or
mov
xchg
fldl
lea
cmpsl
push
jl
mov
aam
sbb
int3
inc
sub
jl
lds
in
ds
xchg
lds
daa
rclb
mov
jge
adc
sets
fucomi
lcall
add
outsb
rcl
ss
push
fsubs
fidivs
pop
hlt
clc
lods
sbb
stc
lock
xchg
sarb
ret
xor
xchg
rep
rclb
inc
outsb
and
sbb
xor
movsl
push
pop
mov
adc
clc
sbb
push
loopne
mov
aas
mov
ret
mov
cwtl
sub
fcompl
lods
pop
ffree
jne
dec
xchg
mov
mov
clc
cmp
mov
testl
xchg
and
lret
fisubs
pop
sub
pusha
xchg
dec
icebp
xor
jnp
add
push
lcall
push
sub
cmc
inc
sbb
cmp
mov
divl
aaa
pop
orb
out
mov
bound
mov
and
push
inc
xor
lods
xor
leave
mov
lret
mov
js
mov
adc
nop
jmp
xchg
loopne
pushf
mov
inc
je
xchg
xor
sbb
pop
lods
pop
push
mov
cld
sbb
js
daa
clc
loopne
mov
sarb
dec
and
loope
orl
xchg
push
and
jne
sub
xorb
xor
and
fs
sbb
mov
inc
add
sbb
mov
int3
add
les
mov
xor
dec
pop
xor
xlat
rorl
adcb
lcall
add
pop
stc
rcll
mov
fldenv
add
or
insl
adc
pop
rcr
lcall
nop
inc
jle
popf
pop
xlat
sarl
lea
lcall
adc
adc
push
int3
lock
xchg
pop
ficompl
aam
std
and
sbb
aas
gs
loopne
pop
leave
xchg
inc
lss
fisttps
mov
lahf
cs
cmpsb
xchg
test
jmp
and
jns
mov
mov
pop
adc
mov
aas
aam
inc
cmc
loope
insb
jp
or
push
push
ljmp
pop
pop
fcomps
dec
faddl
inc
push
fcomps
mov
add
mov
sahf
loope
jp
cmc
and
add
jle
push
aad
and
xor
push
cli
pop
adc
iret
bound
fadd
mov
roll
ret
and
xchg
imul
jle
inc
or
push
sbb
push
es
push
fiadds
jl
pusha
shlb
and
jno
popf
dec
push
adc
pop
fnstcw
js
loope
xchg
mov
mov
fadd
cmp
roll
jo
pop
pop
stc
jo
sub
test
out
cmc
or
inc
cmp
outsl
xlat
lods
shlb
push
push
testb
into
sti
xchg
sahf
jge
sarl
mov
rcr
repz
shl
xor
and
push
jecxz
rcrb
rcrl
stc
xor
mov
cld
out
pop
rcr
sbb
out
jno
inc
mov
out
ds
jecxz
mov
insl
sahf
or
popf
jle
xor
mov
xlat
leave
rcr
push
ret
and
sbb
lret
sub
popa
sbb
in
pop
push
mov
xchg
xlat
dec
cwtl
sbb
jnp
or
push
negb
fwait
mov
xor
dec
fcoml
cs
test
shrl
aam
or
pop
pop
jne
ret
cltd
daa
int3
xchg
es
sahf
lods
pushf
fcmovnbe
repz
stc
es
jecxz
push
cmp
jns
fisubrl
and
cmp
sarl
pop
jge
jnp
out
and
push
mov
mov
pop
pushf
cmp
xchg
mov
jne
mov
sub
pop
rolb
aad
push
cld
stos
lret
sbb
add
repnz
xchg
dec
mov
and
stos
lods
mov
mov
adc
push
sbb
cmp
cmp
std
shrb
jmp
or
out
in
xchg
int3
mov
jge
pop
xchg
push
xchg
in
sbb
and
lods
jns
pop
sbb
shr
popf
sub
mov
jb
jle
loopne
in
aas
pop
fnsave
mov
mov
push
popf
pop
pusha
imul
mov
mov
xor
inc
ret
rcrl
fsts
xlat
aad
shlb
inc
xchg
pushf
sbb
xchg
mov
repz
insl
xor
jnp
push
adc
sti
es
mov
movsl
mov
xor
lods
dec
jp
fstl
adc
repnz
addr16
adc
pop
fstpl
popa
and
aas
mov
cltd
pop
sbb
int3
sarb
xchg
adc
repz
imul
mov
aad
ja
add
dec
out
inc
adc
outsb
fmull
mov
push
sbb
and
leave
es
les
cmpsb
cmp
xchg
inc
or
jp
jmp
xorl
addr16
push
pushf
daa
subb
xchg
popa
dec
inc
pop
adc
fldcw
les
mov
adc
rclb
cmpb
jg
int
sub
jp
mov
push
lret
scas
lahf
js
cmpb
mov
nop
test
sbb
in
sbb
mov
mov
cwtl
xlat
iret
sub
jns
push
xchg
call
xchg
pop
pop
pop
loope
sti
sti
outsl
sbb
sub
rorl
stos
push
sub
push
jle
loop
rol
jge
ja
and
add
cmc
insl
adc
inc
scas
jb
cltd
ja
jns
adc
sub
push
in
fst
notb
addr16
je
int
mov
cmp
mov
mov
adc
cmpsb
cwtl
push
mov
pusha
stc
cmp
push
shrl
xlat
wrmsr
fldenv
sarl
inc
pop
push
ljmp
push
xchg
push
lahf
add
lods
and
inc
push
sahf
jge
fstpt
popf
mov
xor
pop
push
fstp
adc
cmpsl
xor
je
out
xchg
roll
adc
popf
dec
lods
sub
mov
ss
mov
loope
popa
mov
lock
inc
lds
mov
fsubs
arpl
jp
push
push
addr16
in
push
shll
pop
xchg
push
loopne
in
push
cmp
sbb
pop
add
dec
pop
or
jle
push
xchg
int
sahf
arpl
jl
rcl
fs
inc
out
scas
test
mov
aaa
movsl
cmp
inc
idivb
fnsave
push
cmpl
pop
push
mov
and
pop
popf
xor
popf
test
popa
adc
int
cltd
aad
cmc
movsl
push
iret
lods
pop
dec
push
imul
push
js
jae
mov
jmp
mov
push
std
out
push
jns
and
inc
xor
adc
push
pop
add
mov
mov
jmp
sbb
sbb
stc
addr16
pop
lcall
push
das
mov
mov
jecxz
gs
cwtl
xor
dec
adc
cmp
mov
rcrl
mov
add
fisubrl
inc
sub
jl
out
or
mov
int3
cmp
mov
ret
ret
push
inc
popf
or
shlb
fsubl
sbb
mov
sub
aas
rorb
mov
pop
jne
jg
adc
xchg
pushf
adc
je
mov
cmp
jecxz
push
sub
fstps
ljmp
sub
mov
fstp
sub
out
mov
bound
dec
inc
adc
mov
aaa
inc
jg
xor
addr16
sbb
mov
pop
mov
ror
lods
xchg
sbb
hlt
and
inc
mov
mov
fstl
or
rclb
lods
lods
mov
adc
lret
jmp
in
ljmp
int
das
movsb
jnp
dec
and
pop
pop
sub
sahf
add
push
sahf
movsb
cmpsl
sti
fcomps
insb
test
mov
rcll
sub
cmp
cs
das
shrb
out
pop
in
dec
fwait
jp
xchg
jne
pop
xchg
cmp
dec
jl
pop
jmp
mov
sub
pop
lret
jae
lcall
jae
addb
and
ss
inc
clc
dec
into
rcll
xor
sub
es
pop
mov
lret
subl
shlb
jle
aam
jecxz
imul
int3
int
pop
cs
or
push
or
mov
aam
cmp
dec
jecxz
xchg
add
fcmovnb
add
or
out
mov
fld
inc
mov
push
adc
sub
fimull
sbb
test
xor
fsub
dec
jle
test
fadds
repnz
mov
pushf
push
sbb
xchg
lds
inc
pop
mov
inc
push
pushf
leave
pop
fidivrl
or
push
int
push
pop
pushf
pop
push
lret
insl
adc
fadds
outsl
lock
mov
and
aam
lods
fsts
iret
push
shr
pop
adc
sbb
pushf
repz
ja
ror
ljmp
repnz
mov
pop
es
pop
scas
popf
mov
je
xchg
sub
push
sub
push
sahf
mov
addr16
pusha
mov
fsts
test
xrelease
stc
pusha
imul
lods
and
pop
call
sahf
or
mov
leave
mov
insl
sbb
mov
shlb
mov
fmull
lret
xchg
push
push
out
out
lds
push
xchg
mov
push
cltd
out
repnz
sub
mov
les
call
sbbb
push
jmp
mov
cmp
jne
pop
iret
into
cmp
dec
jge
lcall
divps
popa
fisubrl
les
xlat
add
dec
in
aam
cmp
push
inc
push
mov
mov
pushf
repnz
jb
xlat
mov
add
cmp
iret
movsb
cmp
lret
inc
cli
test
out
adc
aaa
xchg
push
mov
aad
cmp
lret
ret
imul
jg
arpl
std
mov
fcompl
sbb
int3
rclb
mov
subb
dec
lcall
xor
fistpll
pop
mov
sahf
cmp
cwtl
js
es
leave
adc
insb
jno
jp
xchg
adc
mov
mov
aad
jns
pop
mov
sarl
loop
movsb
addr16
cwtl
hlt
dec
repz
sbb
fldt
popa
jnp
pop
insl
in
into
dec
es
das
push
or
rcr
fstl
sarl
and
mov
pop
lea
aam
in
jbe
vcvttsd2si
mov
pop
pop
inc
cmp
inc
pop
xchg
cmp
pop
pop
int
and
lods
pop
push
in
sub
movsb
sarb
pop
dec
inc
sbb
les
jg
movb
cltd
jge
inc
push
imul
add
fwait
shl
test
inc
enter
aam
sbb
dec
add
xor
jae
push
xchg
repnz
xchg
cmpb
add
andl
dec
push
int3
mov
or
jmp
lods
int3
dec
sbb
pushf
je
inc
iret
add
inc
inc
ss
pop
and
cli
test
inc
loop
shrb
rorl
mov
aam
pop
mov
and
and
dec
inc
dec
xchg
rorl
and
dec
mov
inc
mov
jb
aad
push
xchg
sahf
inc
push
out
popa
outsb
test
xor
lret
xchg
adc
mov
push
jg
ss
xchg
sbb
xchg
cltd
xor
sub
imul
fcmovnb
cld
push
pop
and
std
pop
dec
mov
cmp
sbb
pop
xchg
xlat
cltd
jnp
sub
cltd
nop
xchg
jle
lods
insl
rcll
lods
mov
mov
fnstsw
out
cwtl
add
adc
inc
push
sbb
loop
inc
xchg
ret
je
sar
push
popf
pop
mov
dec
aad
dec
lcall
jle
xor
das
xchg
add
popf
push
dec
sbb
cmp
jg
jmp
mov
pop
push
mov
jno
movsl
les
ret
sub
fldt
out
inc
sbb
call
inc
adc
mov
cmpsb
or
lds
xor
pop
lcall
pop
shll
mov
test
lret
cwtl
int
dec
aam
fstpl
out
stos
inc
fcom
or
cwtl
jl
mov
dec
rorl
fwait
mov
mov
cmpsb
cld
pushf
sarb
addr16
mov
dec
es
cmp
fdecstp
ds
imul
lods
push
mov
push
pop
aad
sub
xchg
mov
add
push
dec
shrl
lret
push
lock
mov
cmc
lods
divl
les
xchg
sbb
shrl
mov
adc
mov
js
push
xor
push
or
jl
out
mov
sti
sti
test
hlt
ret
inc
jge
ret
jnp
aam
adc
fistl
mov
push
push
ss
int3
mov
leave
cmp
pop
dec
pop
mov
xor
add
xchg
lret
xor
in
xchg
fcoms
xchg
aam
ret
push
filds
ss
iret
lcall
in
stc
push
shrl
imul
sahf
mov
push
les
popf
rorl
jge
push
outsl
xor
and
push
mov
ror
adc
sbb
dec
pop
into
pop
lods
int
add
out
sbb
jmp
push
xchg
test
pop
mov
repz
jne
fnstsw
jno
mov
int3
cwtl
push
stos
ja
pop
pusha
jle
aad
mov
inc
imul
mov
mov
shrl
aam
shll
push
jmp
push
dec
test
cmc
test
std
lahf
push
sbb
pop
int
cld
cmp
in
xchg
js
ss
xchg
jg
inc
xlat
mov
add
test
dec
dec
push
xlat
dec
aaa
inc
fcomip
inc
or
sbb
dec
flds
mov
push
adcb
jle
jg
sub
xor
fldt
jmp
adc
mov
ret
xchg
sarl
and
push
loopne
pop
imul
pushf
or
xchg
imulb
cltd
nop
add
push
mov
lret
inc
js
not
jecxz
rcrb
xchg
pop
shl
or
xchg
aad
dec
stos
cmp
ja
pushf
jno
dec
inc
pop
gs
mov
xchg
in
jl
xor
mov
scas
imul
jle
or
and
shl
int3
lret
pop
sub
lahf
fs
cld
fs
cmc
popa
pop
jne
ja
push
aad
scas
cmp
mov
pop
mov
and
popf
mov
xlat
jns
jle
xchg
mov
stos
into
rcl
pop
adc
mov
pop
jbe
mov
dec
js
mov
adc
jl
testl
mov
inc
pop
int
or
inc
xchg
mov
sub
mov
jl
pop
subb
je
leave
pop
dec
les
lret
sub
cld
lock
aam
imul
push
xor
scas
or
aas
cmp
mov
and
inc
sarl
cmp
insl
les
xchg
xchg
aad
cs
dec
jmp
or
aad
not
mov
add
repz
push
es
mov
cltd
popf
adc
out
test
xorb
push
call
je
sbb
sbb
mov
xchg
cmp
je
int
pop
das
mov
cltd
mov
push
pop
xor
out
dec
pop
ljmp
push
repz
pushf
loopne
push
imul
and
in
fmuls
mov
push
in
pop
das
fnstsw
pop
cmp
push
in
mull
inc
mov
sbb
cmc
es
aam
fcoms
int3
pop
je
sti
jl
mov
sub
pop
mov
mov
mov
ss
stos
fsubrs
aad
aam
mov
sbb
xor
in
sbb
sbb
push
mov
repz
mov
jb
adc
mov
mov
pop
aam
pushf
loop
lcall
fs
adc
dec
aas
xor
ja
in
adc
sahf
sbb
inc
or
mov
push
jns
pop
and
pop
dec
mov
push
loop
xor
stc
and
icebp
lds
sub
sbb
and
repnz
popa
sarl
lcall
les
jns
mov
mov
push
and
sbb
sbb
add
cs
or
test
and
xor
repz
mov
pop
test
mov
inc
or
movsl
mov
aam
cltd
stc
sbb
and
pop
cmp
cltd
mov
cmp
push
cmp
aad
stc
cmp
pop
repnz
aam
popa
push
push
pusha
and
mov
stc
fistpll
xlat
sub
xlat
xchg
and
inc
xchg
inc
pop
jp
mov
das
iret
or
mov
ret
icebp
sti
popf
in
xchg
cltd
or
fcoml
into
xchg
cld
push
repz
dec
lods
jbe
mov
lea
mov
xor
push
aaa
inc
and
popf
orl
lret
cmp
les
shrl
fwait
mov
lods
pushf
nop
mov
xchg
xlat
rcl
push
jmp
stos
or
jge
pop
mov
xchg
lret
test
cmp
xor
sbb
pop
xchg
mov
push
fs
sbb
push
or
adc
nop
stos
pop
mov
iret
inc
and
jmp
xchg
sbb
cs
fldcw
sub
mov
aam
loop
mov
fstl
pop
dec
inc
mov
xchg
fcoml
aam
push
inc
repnz
mov
mov
ja
push
and
int
orl
cltd
in
sub
int
mov
jge
or
sub
cs
adc
mov
mov
pop
aad
aad
notb
add
stos
push
mov
aad
inc
dec
dec
addr16
xor
cwtl
and
lcall
and
mov
pop
js
arpl
ja
mov
cmp
xchg
and
add
sbbb
mov
dec
pop
xor
pop
push
jno
push
pop
xor
notl
mov
lret
add
out
push
add
lods
push
sbb
or
inc
fmull
stc
xchg
inc
callw
push
pop
inc
cmp
jle
pop
popa
pop
or
mov
out
mov
mov
popa
pop
jle
mov
ja
das
jl
mov
popa
jnp
sub
sbb
std
jmp
fidivrl
pop
inc
cmp
ja
and
out
mov
jns
mov
roll
add
xor
daa
imul
pop
pop
insl
adcb
cmpsb
hlt
arpl
cld
dec
xor
out
rorl
adc
add
xchg
mov
mov
add
test
push
jg
loopne
adc
and
jb
rcll
jp
fsts
xor
xor
leave
daa
scas
les
pop
and
dec
js
movsl
and
adc
popf
xchg
jge
inc
xor
lret
sub
in
jno
jnp
out
aad
cmp
dec
push
lcall
mov
std
mov
mov
mov
ficompl
repnz
mov
xorb
rcrb
push
rclb
out
dec
rcr
sarl
pop
lods
pop
int
inc
xchg
dec
mov
out
rcrb
mov
push
sahf
xor
je
push
lahf
cmp
xor
cmp
sarb
sar
adc
jp
popa
cli
outsb
and
push
and
push
cwtl
pushf
in
aad
cmp
xlat
cmp
mov
iret
hlt
cmp
mov
aas
mov
mov
cmpsb
nop
je
mov
icebp
xchg
mov
cmp
rcrl
mov
repnz
fwait
pop
pop
ss
xchg
mov
mov
pop
mov
fcmovnbe
mov
jo
enter
xor
dec
dec
and
dec
jns
cmp
fsts
push
jae
lret
mov
je
cwtl
ss
push
ret
mov
jne
xchg
jne
adc
movsl
jbe
pop
hlt
xor
sub
ljmp
and
mov
push
and
inc
hlt
pop
mov
cmpsl
mov
inc
addr16
mov
cmc
clc
stos
aaa
mov
imull
mov
cs
mov
dec
lods
repnz
push
xchg
and
inc
sub
mov
jae
mov
jl
mov
jl
int
sti
ss
add
pop
cmpsl
jle
mov
xchg
xchg
mov
pop
ret
stos
or
jl
mov
in
std
push
cs
fsub
js
lcall
push
and
mov
jmp
movsl
rclb
inc
mov
dec
aad
jl
jae
mov
add
pop
add
jnp
dec
loopne
fnstsw
aaa
inc
shl
iret
rcrb
push
lcall
sar
push
dec
leave
call
pop
fcmovnb
xorb
loop
int3
mov
mov
xor
lret
fwait
roll
jnp
jmp
in
cld
pop
shll
xor
adc
pop
xlat
pop
push
sub
pushf
inc
jb
adc
in
inc
test
enter
or
xlat
negl
xchg
enter
jmp
cmp
sub
pop
in
jmp
sbb
mov
cmp
fcoml
sub
insb
push
lcall
fucom
mov
fistl
ljmp
push
clc
je
or
mov
pop
subl
push
test
mov
sbb
jae
push
aam
sbb
lret
pop
dec
orb
shrl
ret
mov
loopne
test
ja
je
lods
mov
daa
lods
fnstenv
jae
push
aad
dec
out
pop
faddp
hlt
jne
cltd
in
ljmp
jae
clc
adc
xchg
es
aad
rorb
aam
js
jnp
push
jecxz
cmc
xchg
fsubrs
out
mov
xchg
aam
and
mov
sarl
int
fldcw
test
pusha
gs
lods
xchg
shl
testb
jmp
adc
push
rorl
jb
rcl
iret
mov
lds
movsl
dec
adcb
and
pushf
ret
add
push
shll
xchg
pop
push
shlb
push
fnstsw
lds
jmp
int3
push
jae
roll
mov
jle
sub
push
push
push
jo
mov
aad
fs
push
jmp
dec
lods
movsl
insl
xlat
fbstp
fwait
add
mov
ss
push
test
sub
repz
jo
sub
pop
lahf
mov
lods
adc
mov
xchg
mov
out
aas
inc
lods
push
scas
shl
stos
and
jge
ss
repz
aam
scas
je
or
sti
js
popf
xorb
fdivr
or
dec
pushf
fmuls
xor
pop
shl
jge
sub
xor
int
daa
ljmp
jle
cmc
rcrb
scas
pop
sarl
jle
shrl
dec
jmp
jle
jg
mov
pop
fdivr
jne
push
imul
mov
loope
xor
mov
pop
xchg
mov
or
jns,pn
mov
cmpsl
in
movsb
xchg
xchg
in
cmp
inc
fsubl
jae
cmpsb
pop
mov
leave
mov
adc
outsb
inc
fadds
add
loop
push
push
sub
adc
sub
mov
lret
lret
inc
adc
aad
sbbl
push
incb
jge
in
lods
or
pop
push
pop
mov
sub
xchg
push
push
mov
xchg
lret
aas
push
xor
subl
add
mov
outsl
pop
jae
adcl
shrb
xchg
data16
push
xchg
clc
shll
les
fwait
xchg
pop
mov
mov
sbb
repz
cmpsl
jae
in
int3
push
movsl
sarb
sub
mov
mov
xchg
lds
pop
adc
push
aam
lods
es
insb
movsl
testb
jecxz
or
pop
daa
pop
cmp
fdiv
lods
sahf
gs
pop
adcl
aad
mov
and
mov
ss
sbb
and
jnp
xor
orb
xlat
sahf
adc
or
ja
hsubpd
nop
mov
cmpb
push
aad
cld
ja
das
popf
sub
jne
pushf
inc
hlt
mov
push
mov
or
xchg
adc
fistl
push
jl
push
sbb
mov
pop
lds
insl
sarb
xor
mov
sub
mov
aad
push
xchg
inc
sub
mov
out
sub
cmp
xor
fcoms
push
mov
stos
jns
mov
pop
lcall
xchg
out
mov
das
pop
push
ja
cvtdq2ps
or
xlat
out
cs
divl
xor
enter
daa
dec
stc
fcmovb
or
xchg
push
xchg
xor
fidivl
mov
clc
adc
ja
cltd
movsb
cmp
repz
jne
jns
gs
outsl
sbb
in
shll
or
adc
adc
dec
mov
mov
lock
mov
jb
inc
fimull
add
in
loop
jl
test
add
xor
insl
or
cltd
jg
sub
repz
vhaddpd
sbb
aas
dec
dec
aad
adc
lock
add
sub
mov
lea
xchg
bound
test
jb
jmp
pop
pop
addr16
int
cmp
push
adc
pop
mov
cmpb
xor
les
lret
popf
mov
pop
ljmp
lods
adc
fs
iret
imul
push
movsl
xor
inc
aas
pop
lods
push
fistpl
nop
cmp
sub
dec
ficoms
and
enter
lods
stos
add
mov
pop
popa
pop
or
cmp
call
jno
inc
movsb
mov
adc
push
cs
es
repnz
pop
pop
in
int3
or
lods
xor
jl
fistpll
pop
jp
xchg
push
cmp
lahf
sbb
push
fcoml
sbb
lods
imul
and
test
jnp
in
cmp
sbb
xchg
aam
bound
sbb
cld
push
mov
ficompl
cmp
icebp
xor
movsb
ret
imul
leave
aam
lods
xchg
std
stc
cmpsb
mov
mov
movsl
fstpl
mov
adc
aam
jl
mov
out
fbld
ret
sti
ret
je
inc
add
push
mov
sbb
shrl
decb
jae
xchg
movsl
shrl
xchg
add
sar
fwait
jle
sbb
fcoml
inc
or
mov
jmp
mov
add
cmp
mov
pop
in
mov
fs
ffree
or
inc
add
sar
dec
xchg
jb
inc
dec
add
rcrl
mov
aam
test
push
xor
fnsave
sub
sbb
xlat
jge
sbb
add
mov
out
jge
inc
add
popf
lcall
aad
xor
mov
fsubs
mull
sbb
hlt
outsl
push
mov
cmp
or
pop
xor
sbb
lock
shlb
and
sbb
inc
and
frstor
push
push
fucom
mov
in
lds
mov
sub
lahf
faddl
mov
cmp
inc
test
ljmp
rcll
imul
mov
xlat
rorb
pop
xor
mov
mov
push
pop
test
cmpsl
test
icebp
pop
add
jnp
inc
or
stos
pop
sub
aaa
adc
or
xchg
add
repnz
xor
jl
pop
xchg
push
ds
in
mov
in
fnstsw
mov
sub
aam
rclb
pop
inc
sub
xchg
mov
cmp
mov
cmc
fsubl
mov
xchg
lret
sub
pop
arpl
stc
xchg
dec
lods
push
jno
xor
dec
lahf
fs
jle
mov
and
fisubrl
sub
ret
ja
pop
movsb
jmp
xchg
repnz
lods
loop
rorl
fs
sub
stc
fcompl
das
adc
out
xor
popf
push
inc
add
adc
je
add
repz
aam
enter
mov
mov
dec
test
shrl
mov
pushf
sbb
clc
push
test
pop
jns
rcrl
test
inc
xorb
add
adc
ljmp
sub
ret
stos
jg
xor
scas
orl
mov
fnstcw
add
int3
stc
mov
mov
gs
pop
dec
jmp
lret
or
jns
inc
into
jmp
fsubr
xlat
sarl
test
mov
into
dec
mov
xchg
cmp
push
mov
das
jno
dec
dec
bnd
out
mov
cwtl
xlat
popa
aad
mov
lcall
mov
rcrl
and
dec
mov
jle
sarl
dec
dec
mov
out
pop
fnstsw
ljmp
inc
repz
mov
xchg
jge
adc
pop
mov
es
popa
stc
mov
pushf
mov
aaa
and
sbbl
inc
adc
movsb
mov
lret
mov
pusha
fists
loope
fs
ja
arpl
xchg
add
shlb
xchg
pushf
mov
jnp
fcmove
xchg
cmp
fidivrl
dec
push
xchg
ljmp
mov
cwtl
xlat
pop
push
jns
jmp
sub
nop
leave
mov
ljmp
jne
mov
pop
mov
popa
mulb
sbb
stc
pop
in
fstps
mov
in
xchg
push
dec
push
les
pop
stos
jge
xor
push
ficomps
andl
movaps
fcmove
xor
cmp
pop
xchg
cmc
xlat
dec
inc
xor
mov
and
leave
sub
les
lock
cmpsl
es
test
add
clc
lret
mov
rcr
xlat
mov
ret
test
shrl
aad
jle
ljmp
or
fists
cmp
rclb
mov
push
push
repz
mov
fcompl
mov
les
pop
out
mov
les
pop
mov
movsb
xchg
mov
pop
jb
shll
lret
adc
cmc
repnz
das
or
push
pop
jns
into
scas
push
xchg
lcall
int
mov
int3
or
iret
lret
idivb
lea
jg
das
movsl
xlat
jl
cmc
mov
aad
sub
or
jae
or
lods
and
push
add
inc
or
fwait
sub
mov
pop
ficompl
lods
pop
push
and
cmpsl
roll
xor
cmp
fildl
fcmovb
lcall
mov
or
pushf
or
inc
sub
adc
pop
mov
mov
pop
sarl
jp
jmp
test
push
sarl
packssdw
fcomps
sbb
jl
imul
xchg
push
push
incl
sahf
insl
mov
xchg
sarb
sub
add
lods
mov
roll
sub
scas
repnz
push
mov
shrb
xchg
std
rorl
mov
inc
es
fs
and
dec
cmp
xor
test
sarb
cmp
add
mov
fninit
xchg
loopne
enter
sub
dec
lret
ret
into
outsb
pop
push
xchg
xor
call
rol
lods
adc
cmp
daa
jbe
or
mov
ljmp
adc
or
loope
sarl
test
push
jmp
mov
sub
lods
ret
roll
jge
push
dec
orb
pop
lahf
xor
and
fsubl
cmp
pop
xchg
int
adc
xorb
std
mov
lods
sti
aad
movl
dec
sahf
mov
push
mov
dec
push
inc
push
das
popf
mov
jge
add
aam
out
rcrl
sbbl
inc
jle
pop
push
rcrb
pop
call
cmpsl
adc
in
xlat
fcompl
rcll
cmpl
inc
hlt
push
int3
xchg
sbb
imul
inc
cmpsb
mov
jne
xor
pop
fs
mov
sub
jp
test
je
popf
js
pusha
popf
push
mov
push
outsb
lahf
sahf
stos
std
aam
sub
xchg
mov
pop
sbb
lret
ret
jmp
sar
jbe
mov
jl
clc
repnz
mov
add
aad
xor
sar
imul
notb
cmp
push
ss
cmp
je
aad
je
es
aam
shr
pop
mov
out
xor
ja
aaa
adc
data16
sbb
aad
jmp
mov
cmp
xchg
push
push
push
test
out
insb
push
out
and
rcr
test
adc
fnstenv
pop
stos
add
sbb
jnp
pop
out
mov
or
inc
outsb
and
inc
mov
shll
mov
jp
xor
push
mov
pop
pop
push
dec
dec
stc
je
lret
ds
out
sbb
sub
push
xlat
out
outsb
daa
inc
jnp
daa
mov
js
ficompl
imul
jle
popf
sahf
push
bound
popf
mov
jne
decl
cwtl
cld
inc
lcall
ficompl
xchg
cltd
fnstsw
fbld
popf
pop
xchg
cmp
scas
hlt
inc
scas
clc
daa
push
mov
out
jmp
rclb
test
hlt
mov
push
pop
insl
movsb
jns
pop
dec
xchg
or
fdivrl
cmp
nop
mov
cmp
pop
xor
fstpl
mov
inc
cmp
xchg
mov
fistpl
movsb
repz
and
push
mov
aam
lcall
push
rorl
adc
arpl
sbb
pop
mov
xor
cmpl
addl
jle
add
pop
bound
popf
sti
sbb
dec
and
iret
lahf
sar
stos
int
aad
pop
jmp
es
imul
mov
pop
inc
ret
je
mov
int
rcrl
inc
dec
aam
cli
mov
aaa
fbld
jnp
xchg
push
push
xchg
lods
or
pop
mov
lods
jp
repz
aam
insl
add
adc
int3
rclb
pop
int3
ss
xchg
fstpt
shrl
popa
inc
sub
lds
hlt
inc
inc
cmpsb
mov
cs
and
adc
push
add
mov
mov
dec
repnz
jno
aam
popa
leave
mov
les
push
mov
push
adc
dec
cltd
sub
push
int3
jge
stos
dec
sahf
push
cmp
repnz
cli
jns
xchg
and
sbb
popa
jl
cs
adc
push
aad
ljmp
mov
mov
sarl
jne
fcoml
stos
fwait
push
cmp
dec
loop
popa
test
and
jae
xor
cmc
or
int3
push
pushf
mov
std
nop
imul
and
pop
or
rcr
lods
fstp
clc
daa
push
mov
xchg
inc
add
fistpll
ss
ret
mov
ss
outsb
faddp
push
inc
sti
fistpl
into
cltd
in
cmp
clc
push
adc
out
test
pop
pop
pop
mov
adc
sbb
and
sti
or
pop
negl
adcl
fs
ret
movl
dec
mov
popa
notl
mov
pop
lea
scas
mov
pop
mov
lcall
cld
sub
cmp
mov
mov
pop
jle
cmp
add
addr16
inc
sub
cmpsl
ja
jl
cmpsb
jge
out
jge
dec
jns
shl
ja
rol
cmc
mov
sbb
and
cmpsl
outsl
jne
lcall
shlb
cmpsb
in
test
xor
repz
hlt
mov
rorl
inc
mov
cmpsl
test
sub
push
jl
xchg
imul
fidivl
pop
dec
clc
pop
leave
xor
push
push
sti
shrl
dec
js
and
jge
inc
lret
and
cmc
pop
xor
repz
int
add
xchg
sti
ja
fwait
insl
repz
mov
lcall
fcoms
cld
popa
push
int3
repnz
cmp
hlt
dec
sbb
mov
and
push
ja
mov
xchg
mulb
push
xlat
rcl
sbb
fstpt
or
sub
sub
cmc
add
mov
in
mov
ss
ja
lret
mov
cmp
in
adc
push
pop
xchg
mov
lods
push
and
call
fidivl
dec
jnp
repnz
int
jmp
lods
fnstsw
and
xor
xchg
mov
xor
popa
mov
or
stc
shrl
pop
fnsave
in
repnz
sub
mov
inc
cmp
out
jns
inc
push
add
inc
shl
inc
aad
pop
ja
xchg
xchg
nop
imul
in
out
enter
push
fcmovb
adc
push
xlat
repnz
fcom
mov
lock
xchg
xchg
fcompl
lcall
xchg
pop
cwtl
mov
out
mov
or
adcb
fcmovu
mov
pop
mov
in
lock
iret
push
jns
lods
mov
xchg
fcmovbe
pop
repz
test
push
mov
xchg
mov
insl
lods
sahf
shl
cwtl
pop
sbb
pop
fs
repnz
adc
pop
mov
test
xor
nop
adc
mov
pop
mov
adc
hlt
dec
insb
pop
scas
jg
mov
jno
je
pop
imul
arpl
pop
out
push
xchg
inc
lods
pop
fucomi
imul
xchg
mov
clc
repnz
inc
push
lahf
aad
mov
cmc
inc
mov
or
rcrl
stos
fcomps
push
ret
pushf
inc
fadd
ror
es
fdivrs
and
test
xor
pop
in
sbb
cwtl
js
rcl
movsb
dec
jl
inc
popa
xchg
sub
inc
lahf
pop
inc
xchg
mov
xchg
divb
inc
mov
lds
jge
jle
inc
aas
jmp
iret
outsb
push
fiaddl
sbb
pop
out
pop
mov
pop
mov
sub
fs
loop
fmull
mov
int
lods
xchg
mov
mov
xor
insb
sti
add
mov
jmp
xlat
ficompl
mov
cmp
add
mov
cs
dec
sbb
or
fs
aas
push
push
nop
sahf
aad
mov
aad
std
sti
sti
dec
mov
xor
mov
negb
addr16
les
in
mov
adc
popa
add
xchg
mov
lods
sub
ds
jnp
into
cs
sub
fdiv
popa
mov
loopne
sarb
mov
jae
mov
ljmp
inc
jp
gs
aam
sahf
inc
clc
dec
or
cmpsb
mov
cmpsl
mov
push
jecxz
mov
sub
jge
pop
mov
leave
dec
jbe
int
adc
pop
hlt
sub
sub
pop
sbb
popf
fistpl
inc
cmp
fadd
mov
aaa
call
inc
sahf
sub
jno
sti
cltd
or
stc
xchg
pop
ret
mov
lret
jb
pop
dec
lcall
cmp
daa
xor
push
push
jnp
inc
mov
scas
adc
stc
inc
and
pop
int
sub
xchg
pop
or
adcl
pop
je
pop
insb
push
jmp
cli
mov
in
rorl
mov
push
les
jge
fiaddl
shrl
lods
pop
push
pop
loopne
cmpsb
and
xor
jg
dec
jno
sar
mov
insl
push
inc
mov
sub
push
mov
pop
je
movsb
cmpsb
ja
mov
sbb
cmp
sbb
fsubl
addr16
daa
ja
dec
daa
cmpb
lds
dec
in
adc
inc
jno
mov
sub
push
mov
insb
icebp
or
jae
js
fcmovnb
and
shrl
mov
xchg
inc
pop
mov
mov
ja
push
push
cmp
or
dec
xchg
loopne
fistl
push
pop
xor
mov
ret
sbb
fildll
xchg
jle
jae
pusha
sbb
jl
pop
std
push
js
xchg
mov
sub
xchg
js
dec
pushf
xchg
mov
dec
push
xchg
pushf
xor
icebp
xor
sbb
cld
fld
jne
pop
les
idivb
mov
mov
test
shrb
mov
push
sbb
jnp
pop
mov
cs
ret
sbb
daa
fistpl
sbb
stos
outsl
clc
jae
push
mov
cmp
bound
lret
push
mov
or
scas
push
push
mov
cmp
leave
cwtl
hlt
cwtl
push
lcall
mov
jb
cmp
loop
sub
jecxz
les
dec
jl
stos
sub
test
test
jmp
pushf
mov
jp
pop
clc
and
andb
dec
pop
adc
cmp
pushf
out
test
insb
xchg
push
stc
pop
push
push
mov
shrb
aad
lcall
mov
add
dec
das
xchg
shrb
lds
cwtl
lcall
push
jbe
inc
dec
cwtl
xchg
fld
mov
dec
sub
dec
dec
mov
xor
lret
pop
ljmp
popa
outsl
sbb
mov
fstpt
shll
lret
imul
outsb
movb
lods
in
int
sbb
lcall
fldenv
popf
cmp
push
test
xlat
fldl
lods
adc
mov
push
pop
enter
idivl
push
jp
aam
movsb
push
aad
adc
and
pop
sbbl
add
xor
xchg
jb
sbbl
lcall
ds
test
push
std
jge
mov
mov
fdivrl
push
and
mov
pop
mov
pop
iret
push
testb
dec
dec
inc
xchg
jmp
mov
xor
sbb
out
fcmovu
push
leave
sahf
lds
inc
mov
lcall
or
and
jge
pop
xor
in
aas
and
loopne
xchg
out
xchg
bound
out
jmp
inc
add
popa
sbb
sub
imul
cmp
pop
or
push
xchg
jae
or
mov
testl
je
cmp
xchg
rol
add
mov
ljmp
nop
sbb
jne
cld
cmp
sbbl
and
jae
dec
dec
das
push
push
mov
insl
cmpb
push
cmp
sub
cmp
jl
sub
mov
fsts
push
sti
cmp
jo
xchg
sbb
push
pop
dec
mov
xor
inc
aad
dec
addl
adc
bound
fcompl
cwtl
aad
mov
roll
mov
pop
int3
ret
xlat
or
xchg
or
pop
xor
in
cmp
inc
imul
aad
aam
or
dec
aas
rcll
jns
loopne
lea
pop
lret
sbb
push
pop
mov
outsl
out
cmp
aas
fdivl
mov
add
lcall
loopne
cmp
push
jb
mov
inc
lcall
xor
xor
push
xlat
add
hlt
fdivrl
jo
roll
mov
loop
lods
cltd
and
push
loopne
push
leave
ret
cmp
outsl
out
nop
rcr
xchg
fstl
jl
add
push
arpl
pushf
push
cmp
cmpsb
cltd
xchg
iret
xor
int
fmul
mov
xchg
pushf
cmpb
pop
or
leave
xlat
ret
ja
add
sti
dec
out
pop
data16
xchg
aaa
arpl
lret
and
test
mov
adc
int
push
adc
test
mov
or
ljmp
popa
xor
or
sbb
pushf
fnsave
xchg
xor
cmc
pop
popf
sarl
inc
fcmove
adcl
lret
ficompl
adc
mov
cld
xchg
shl
push
ja
adc
je
adc
shr
cwtl
push
inc
aad
cmpsb
sbb
fisubs
fcmovu
cmp
mov
xchg
mov
pop
sarl
xlat
cmpsb
push
shll
dec
sub
fisubrl
lcall
call
push
xor
sbb
push
loop
out
ss
jge
jb
test
or
pop
jge
xchg
push
lcall
or
fistpl
lahf
rcrb
pop
dec
mov
iret
clc
repnz
rcl
stc
ja
aad
dec
add
fcom
mov
ret
fsubr
je
popf
mov
fcomps
add
in
ficompl
sbbb
xchg
sub
push
test
push
mov
xchg
pop
jp
push
fcomps
je
imul
mov
mov
inc
jp
jmp
test
adc
add
popa
cmp
dec
dec
les
cmp
loopne
cltd
fnstcw
pop
pop
outsb
jmp
jbe,pt
mov
lods
mov
les
cmp
jnp
mov
and
nop
lret
pop
xchg
mov
fldl
mov
movsl
cmp
jl
sbb
xlat
arpl
and
cmc
mov
sbb
xchg
or
sbb
stos
stos
sahf
mov
dec
iret
or
jmp
or
call
mov
jae
arpl
pop
shlb
dec
addb
or
loope
sbb
ss
sbb
gs
xor
imul
jmp
imul
push
ja
pop
xor
cmp
inc
add
cmpsl
adc
insl
adc
cs
aam
jo
add
push
add
xor
in
lds
mov
mov
mov
xchg
popf
cmpsb
out
sbb
test
rcl
loope
adc
mov
icebp
inc
sbb
mov
adc
repz
sbb
add
hlt
pop
cwtl
mov
cs
adc
dec
and
mov
inc
jbe
pop
adc
jge
fldt
aas
jl
and
and
scas
adc
add
mov
idivl
xlat
mov
mul
loopne
xor
jne
adc
xchg
push
rcll
stc
push
int3
adc
push
adc
add
dec
sahf
imul
push
incb
jge
lock
rcl
mov
idivb
fnstenv
insl
inc
adc
push
push
cwtl
and
pushf
lds
fmuls
out
dec
jne
fidivl
scas
lcall
fs
pop
pop
xchg
mov
fsts
sub
push
test
xlat
sbb
fdivs
and
insl
jle
cmp
pushf
out
push
stc
pop
mov
sbb
push
mov
xlat
popa
adc
nop
leave
outsb
xor
mov
das
adc
jno
loop
jecxz
xchg
mov
cltd
bound
adc
das
mov
jnp
inc
idivl
mov
lods
mov
popa
fmull
add
mov
pop
sbb
js
ljmp
sbb
mov
rcr
jmp
lods
jp
jne
cmp
pop
push
pop
fimull
cmp
or
cld
sbb
adc
ss
pop
in
mov
pop
xchg
pop
ret
jge
adc
and
inc
xor
jns
lahf
int
movsl
sbb
push
insb
lds
aad
xchg
inc
cmp
ja
cltd
pop
sahf
pushf
xor
scas
push
cltd
mov
out
or
pop
and
fs
sub
mov
lods
dec
je
adc
pop
imul
arpl
insb
and
pop
scas
mov
mov
push
mov
push
ss
aad
psubusb
popa
jge
mov
sub
movsb
add
xchg
mov
dec
out
pop
fsubl
mov
cmp
xor
shll
cmp
sub
popa
je
dec
jbe
sahf
or
mov
lods
hlt
pop
popa
push
pop
xchg
incb
mov
lods
lret
ret
push
scas
scas
mov
push
sahf
push
in
lret
ljmp
xlat
lds
cmp
int3
push
adc
push
mov
dec
cmp
push
fld
inc
mov
test
cmp
into
jp
push
hlt
rorb
addr16
xchg
je
filds
fsub
cltd
jle
adcb
fcoml
xchg
ds
int3
lahf
int
popf
stos
stc
pop
sbb
iret
xor
mov
mov
cmp
pop
int3
push
sti
cmpsl
test
mov
aam
rcrb
std
aad
jae
leave
sub
cmp
pop
push
push
rcrl
popf
mov
mov
iret
fists
push
and
and
aaa
std
push
cmp
das
sbbl
jnp
push
outsb
dec
dec
or
out
mov
add
icebp
sub
xor
mov
test
sahf
stos
std
jmp
in
sahf
mov
cld
mov
test
imul
jae
int
sub
into
test
push
sbb
or
mov
loop
shrb
lods
xor
jns
push
xchg
imul
mov
adc
xchg
mov
inc
cmp
pop
repz
pop
pop
lcall
push
testl
sbb
xchg
sub
dec
pushf
test
jne
mov
test
xchg
pop
lods
pop
xor
sbb
fwait
pop
ret
fstps
shlb
push
mov
lock
xchg
pop
xlat
and
clc
mov
and
addr16
cmp
xor
sub
test
dec
aam
jmp
lea
inc
cmp
sbb
mov
outsl
cli
fmul
aam
xor
xor
out
sbb
mov
outsl
fdivrl
sti
into
es
pop
xchg
fwait
jnp
fiadds
mov
loopne
pop
test
adc
addr16
int
loop
loopne
ret
xchg
movsl
movl
loopne
xchg
and
scas
loop
sbb
pusha
in
sbbl
sbb
daa
es
int
or
fadds
mov
mov
mov
fldt
test
iret
fnstenv
dec
aaa
cltd
fnstcw
mov
ds
enter
dec
fidivs
xor
lahf
xchg
rcr
rol
imul
fstps
aam
mov
scas
pusha
bound
mov
cmc
sub
dec
xor
data16
add
cmp
repnz
rorl
push
lcall
pushf
repz
adc
push
dec
arpl
xchg
pushf
push
out
or
sbb
push
and
lods
push
ja
mov
iret
test
add
adc
jl
out
dec
cld
jg
cmpl
cmp
inc
aaa
dec
ror
and
rcrb
push
fildll
sahf
push
mov
int3
mov
repnz
jo
mov
adc
jo
adc
pop
into
nop
mov
xchg
add
push
cmpsb
stos
pop
pop
inc
mov
lods
cmp
push
pop
rcrb
scas
bound
aam
cmpsb
add
popf
jge
in
mov
addl
call
sahf
and
push
and
jmp
pop
lods
out
jns
mov
mov
push
lahf
and
aas
daa
shll
aam
mov
jmp
push
push
mov
mov
int
xor
popa
fdivrl
js
xchg
push
sahf
cld
fildll
mov
xchg
dec
mov
bnd
les
mov
pushf
sbb
inc
pop
dec
jmp
sub
popa
fcmovne
mov
or
mov
stc
xor
jnp
js
pop
jmp
aas
cmp
cld
scas
push
das
or
mov
inc
adc
je
pushf
adc
pop
sub
adc
sti
leave
mov
movsl
mov
adc
fs
mov
test
mov
lret
icebp
insl
sub
fistpl
dec
sub
push
fcmovnbe
pushf
push
outsl
std
js
mov
adc
rcll
push
cmpsl
gs
ds
je
jnp
jp
loop
add
arpl
popf
pop
inc
cltd
scas
mov
inc
mov
bndldx
or
xor
mov
sbbb
in
dec
stos
xchg
dec
insl
je
mov
lcall
outsb
xlat
jle
stc
rolb
fildll
mov
rcrl
xor
rclb
aam
adc
ja
rorb
aam
xchg
adc
jmp
out
xor
dec
aaa
rorl
pop
out
insb
push
jp
dec
mov
sbb
jo
repnz
jb
dec
movsb
push
in
stos
movsb
xor
cmpsl
stos
and
ljmp
sbb
push
js
cmp
xor
cltd
test
xor
pop
ficoml
into
outsl
mov
test
popf
arpl
out
pop
fbld
push
push
adc
add
sbb
movsb
fsubrl
popf
or
push
int3
mov
addr16
xchg
iret
xchg
sti
sbb
loopne
aad
jmp
aam
mov
sub
stc
push
mov
dec
or
mov
push
push
fidivrs
push
popa
andl
adc
xchg
sbb
repnz
loop
pusha
jl
imul
roll
ds
repz
fists
lcall
xlat
mov
pop
lahf
cmpsb
push
les
cmp
out
pop
out
fistl
out
or
mov
mov
push
sete
or
sub
mov
mov
mov
inc
jno
imul
cltd
test
ja
xor
pop
repz
dec
pop
xchg
adc
fs
lret
aam
mov
mov
pop
aaa
sbb
or
nop
inc
mov
or
popa
or
lock
jmp
and
sub
cmp
in
push
xor
lock
pop
cmc
loope
jle
sbb
jge
ror
lahf
mov
movsb
arpl
jecxz
lret
je
cmpsl
sbb
xchg
fildl
sbb
daa
cmpsb
jmp
insb
addr16
adc
pushf
rcrl
loope
nop
lods
jmp
jb
sahf
pop
in
xor
dec
push
dec
inc
xor
iret
push
mov
pushf
or
stc
dec
jmp
sahf
push
scas
or
jmp
je
pop
sar
mov
inc
mov
mov
sti
aam
push
daa
jge
adc
fst
sub
push
add
xchg
out
cmp
sbb
jge
xchg
mov
pop
inc
iret
jp
out
dec
or
movsb
popf
or
pushf
or
mov
sub
int3
xchg
mov
out
xchg
addb
push
mov
test
adc
xchg
dec
ds
movsl
je
push
push
mov
dec
fsubrl
cmp
xor
dec
sub
add
dec
xor
mov
in
hlt
jno
hlt
insb
sbb
sbb
push
mov
push
mov
xchg
mov
push
mov
xchg
sub
sahf
mov
pop
and
jle
test
std
and
stc
mov
ficomps
push
mov
fists
shl
movsb
pop
popf
jle
popa
mov
adc
aad
std
pop
test
outsl
push
sbb
jbe
mov
cmp
out
inc
aad
jl
xorl
add
scas
ficompl
push
dec
sub
pop
xor
adc
pop
scas
inc
mov
shll
cmpsb
sbb
push
mov
ret
adc
pop
mov
jp
hlt
pop
xchg
jmp
mov
movsl
ja
sub
fucomi
orl
lea
mov
xchg
shlb
xchg
shll
add
or
push
aas
pushf
arpl
jp
sub
testb
mov
rclb
enter
cwtl
jae
lcall
sub
push
rcl
fs
mov
jle
test
adc
idivl
add
sahf
push
sub
add
pop
call
jle
mov
lods
pop
aad
xchg
cwtl
xor
outsb
push
push
push
aad
jl
jns
jmp
ret
sti
push
int
sbb
inc
outsl
out
shlb
lods
adc
mov
mov
out
pop
lds
inc
add
imul
push
push
mov
outsb
cmp
addl
orl
in
nop
es
jle
pop
test
xor
aad
inc
inc
mov
das
jmp
mov
jg
mov
ljmp
mov
flds
fsubrs
mov
das
es
mov
push
fldt
arpl
pop
mov
mov
out
push
daa
lods
xchg
xor
mov
insl
jmp
adc
fisttpl
mov
pop
mov
push
jno
icebp
lcall
shrb
add
in
mov
mov
int
test
mov
mov
or
xchg
in
sub
mov
inc
push
inc
cmpsl
jecxz
outsl
push
or
sahf
dec
sbb
negl
in
push
aam
adc
lcall
outsb
out
int3
jae
sbb
inc
pop
and
scas
test
sahf
add
fbld
stos
xchg
pop
out
repnz
adc
cs
dec
mov
xchg
sarl
sbb
out
jp
jle
mov
dec
and
mov
mov
lea
mov
shll
mov
clc
nop
aam
adc
imul
loop
shlb
hlt
repz
inc
sahf
mov
mov
mov
mov
addr16
in
jb
jge
jnp
sbb
mov
cmpsb
rcr
inc
jle
jge
sub
pushf
mov
jnp
fcmovne
mov
pop
fbld
fcompl
cmp
in
mov
sti
fwait
xchg
fnstsw
mov
loopne
jbe
movb
sub
add
insb
pop
mov
inc
push
fidivrs
fisubrl
fwait
dec
mov
sbb
dec
xorl
xor
push
and
jge
jle
aas
lcall
jg
lods
lahf
insl
dec
xchg
fstpl
xchg
mov
pop
and
pop
pop
pusha
xchg
cmp
sbb
ret
cli
mov
jl
paddusw
stos
in
out
and
mov
enter
cmp
dec
fstpt
fistpll
fisubl
mov
cmp
rcr
jge
sbb
pop
xchg
pop
push
data16
inc
xchg
call
mov
aad
movsl
inc
repnz
mov
cmc
fdivrl
enter
sbb
inc
pusha
punpcklwd
mov
push
int
and
cltd
stos
jbe
stos
aas
or
sbb
pop
iret
out
cmp
or
lea
sbb
out
sbb
sub
inc
test
scas
into
fstl
pop
stos
clc
fisttps
jb
sahf
dec
insl
cmp
and
fistpl
aad
loop
inc
sti
repnz
mov
cld
call
fwait
jno
fnsave
gs
hlt
mov
into
mov
ja
adc
jno
test
rcrb
cld
xor
das
mov
js
dec
sub
inc
int3
xor
into
cmpsb
add
fstps
test
xchg
mov
testb
pop
outsb
mov
pop
popf
loop
fst
ja
dec
pusha
popa
sbb
xchg
cld
or
push
or
in
jp
mov
mov
lods
xor
mov
adc
stos
cmp
stc
clc
xor
cmp
les
addr16
inc
adc
pop
jns
std
xchg
frstor
fdiv
rcl
lret
xor
xor
loopne
test
push
sub
adc
xlat
xor
xchg
ret
loop
ret
cmp
jp
rorl
lods
fidivrs
mov
xchg
cmp
sbb
fwait
jb
dec
fisubl
xor
jns
mov
xorl
stos
fistpll
push
mov
jnp
bound
push
sti
sti
cmpsb
sub
cmp
push
sti
fistpl
pushf
add
sbb
mov
jne
mov
inc
add
scas
dec
mov
aad
push
fsts
jbe
mov
mov
loop
and
mov
lods
outsb
mov
cli
inc
arpl
push
jmp
pop
pop
popa
fdivs
mov
out
mov
jl
inc
cmp
adc
adc
test
hlt
jge
pop
pop
cmp
rcrb
push
inc
outsb
add
sbb
sub
cmp
hlt
xchg
aad
sbb
xor
xor
and
push
das
fnsave
mov
out
std
rcl
push
popa
pop
push
dec
sbb
sbb
fsubl
ret
push
mov
ds
repz
mov
popf
cld
jno
aas
rorl
or
fldenv
pop
xor
push
inc
push
pop
es
inc
aam
inc
in
jns
jb
jnp
outsl
test
ja
sbb
test
dec
stos
cmc
xor
mov
mov
xchg
cld
sub
cwtl
inc
jle
inc
mov
inc
pop
pop
pop
jge
outsb
xor
mov
movsb
inc
icebp
pusha
xchg
imul
mov
xor
movsb
int3
jns
mov
mov
add
or
in
push
and
lea
jecxz
testb
jle
xchg
decb
push
decb
mov
in
fs
shlb
repz
repz
push
clc
add
cmp
addr16
pop
pushf
fwait
mov
jl
xorl
loopne
clc
sbb
push
dec
jecxz
xchg
xchg
das
sub
jp
mov
dec
pop
jecxz
and
dec
cltd
fcmovu
repnz
pop
xor
cmpsl
xchg
not
jne
scas
daa
mov
push
jb
pop
sahf
insl
test
icebp
xlat
xchg
xor
lcall
pop
lret
cmp
sbb
data16
jge
sub
adc
cli
sar
xor
dec
inc
sar
mov
pop
pop
pop
mov
push
insl
test
ss
jae
aas
adc
gs
fnstsw
std
aam
adc
std
lods
clc
adc
sbb
lods
pusha
aas
sbb
xchg
ljmp
cmpps
mov
mov
popf
in
xchg
pushf
add
cmp
jmp
pushf
ror
pop
dec
mov
mov
xor
push
cltd
pop
mov
xorl
cmp
lea
int3
lret
jmp
mov
and
add
jge
das
dec
jp
pusha
imul
popa
rep
push
push
mov
fsub
sbb
sbb
aam
stos
and
in
sub
sti
dec
mov
xchg
test
mov
pop
call
je
sub
jbe
jne
aam
dec
inc
mov
jmp
dec
hlt
xchg
incl
mov
pop
inc
es
ja
xor
mov
push
sbb
movsl
pop
jno
push
inc
cmpsb
ret
dec
push
fadd
xchg
pop
jmp
inc
push
lods
mov
aad
sbb
inc
and
pop
decl
ds
cmp
sub
cli
xor
inc
pop
cmpsb
add
shrl
insl
inc
inc
mov
loopne
fsts
push
mov
orl
pop
jb
cld
add
or
bnd
sub
pop
push
push
mov
mov
xchg
aad
stos
cs
scas
jg
inc
jo
fnstcw
xchg
mov
scas
test
xchg
cmp
cltd
add
xor
cmp
fwait
inc
sub
mov
add
pop
frstor
cmpsl
das
stos
mov
lds
mov
dec
mov
mov
sahf
pop
sub
dec
dec
inc
mov
jg
jle
incl
sti
cmpsb
loope
fsubr
movsl
pop
pop
mov
js
adc
or
es
pop
push
sbb
mov
imul
es
or
ds
fnsave
pop
cmpsl
scas
pop
icebp
mov
mov
xor
xchg
xchg
xchg
xor
scas
mov
leave
insb
aam
lret
pop
sub
mov
or
mov
jo
scas
test
sahf
mov
ss
xor
mov
jbe
mov
push
pop
lods
iret
mov
jae
push
mov
and
lret
jns
rol
jg,pt
mov
push
xchg
pop
pushf
dec
ltr
ss
ret
test
cmp
fsubs
add
push
pop
mov
inc
xchg
fadds
sar
imul
dec
jae
das
xor
jle
pop
mov
xor
rcrb
jg
cmp
or
ror
stos
or
or
mov
sub
dec
pushf
or
jno
adc
mov
push
scas
fs
mov
mov
jnp
inc
xor
jne
ja
in
aad
bound
popa
push
or
dec
enter
mov
xchg
xchg
jnp
outsl
stc
cwtl
adc
repz
fnstcw
or
add
negl
out
xlat
dec
lret
mov
lahf
xchg
pushf
jge
adcl
xor
mov
inc
mov
insb
cmc
ds
dec
jo
nop
in
repz
notl
je
lret
nop
test
iret
xlat
popa
icebp
sbb
sarl
lcall
arpl
aaa
pop
jl
xchg
dec
ror
rcll
fdivrl
fidivrl
pop
push
add
cmpsb
xchg
mov
mov
ss
add
test
movsb
cld
pop
push
xchg
sbb
push
inc
test
mov
push
imul
cltd
pop
mov
pop
out
inc
push
adc
push
sub
push
pop
fst
mov
mov
cmp
fsubrl
imul
sbb
ret
pop
xchg
dec
stc
push
repz
clc
mov
sbb
out
push
push
and
mov
frstor
push
pop
addl
stos
loop
mov
in
sahf
loop
pop
mov
or
sbb
iret
aam
outsl
adcb
bound
outsb
lahf
aad
out
mov
dec
push
push
push
mov
mov
pusha
pop
cmp
inc
clc
enter
bswap
mov
insl
or
dec
cmp
into
lahf
jle
push
jbe
dec
negl
and
and
pop
inc
ljmp
xchg
push
ret
sbb
jp
xchg
cmp
push
jle
cmc
sub
xchg
push
xchg
push
mov
testl
fwait
xchg
cld
xchg
jge
mov
out
dec
jns
mov
mov
test
fidivl
pop
mov
adc
pushf
add
push
flds
addr16
rcll
sahf
add
xor
aaa
mov
push
aad
mov
mov
xor
jne
xor
in
mov
clc
mov
pop
mov
xchg
pop
mov
int3
or
or
mov
dec
lret
jle
subb
dec
scas
adc
jns
aam
inc
mov
adc
sbb
jecxz
cmp
xor
mov
loope
popa
push
mov
lea
lods
movl
rcll
mov
or
and
push
pop
ss
mov
insb
lea
sub
jp
cli
dec
xchg
pop
fsubrl
cli
inc
push
sarl
lcall
pop
movsb
testb
jo
mov
sbb
cld
jl
jbe
dec
fmuls
mov
outsl
test
int
pop
mov
jg
push
call
lods
dec
test
push
sbb
dec
or
pushf
shll
cmp
aaa
iret
sbb
mov
sub
shll
xchg
cmpl
movsb
into
pop
mov
mov
push
cmp
sbb
ja
dec
sub
addr16
add
inc
dec
xchg
dec
or
push
adc
pop
jmp
pop
push
insb
shr
leave
xchg
mov
mov
cmp
or
mov
push
das
sbb
pop
xchg
sub
outsb
orl
insb
inc
cld
pop
add
lcall
out
dec
test
adc
mov
cli
jne
xchg
test
jmp
and
add
imul
std
mov
lret
mov
jecxz
pop
mov
xlat
popa
cmp
cs
aad
shll
inc
sti
cmp
pop
fwait
add
mov
mov
dec
jnp
cltd
pop
sbb
stos
and
rolb
repz
cmp
pop
aad
mov
adc
in
mov
push
frndint
or
sahf
fmul
dec
sub
dec
mov
aam
enter
aam
fidivrl
loop
mov
mov
pop
jns
hlt
nop
aad
hlt
sbb
or
dec
idivl
xchg
push
xchg
aad
mov
repz
and
aam
sub
movsl
cwtl
scas
xchg
push
push
mov
push
jae
add
cs
push
lods
das
or
dec
or
or
call
dec
mov
jge
pop
adc
pushf
mov
pusha
xchg
orps
push
test
cmpsb
fldl
xor
push
lahf
jge
inc
jl
jmp
xor
mov
fdivrl
int
sarb
das
mov
das
out
jl
jle
adc
and
jns
mov
jae
jbe
mov
dec
pushf
cmpb
outsl
sar
jl
dec
xorb
xor
div
rorl
push
dec
push
imul
xchg
nop
aas
cmpsl
push
fcoml
roll
add
aaa
mov
mov
lods
imul
inc
cmp
mov
mov
xchg
in
sbb
fldcw
les
jno
repz
mov
mov
fmulp
enter
sarb
clc
lahf
mov
sub
bound
mov
mov
dec
pop
mov
pushf
xchg
mov
inc
lcall
lret
pushf
lods
rcll
mov
ret
test
ror
mov
lock
leave
shrl
dec
mov
mov
pusha
cmpb
sub
shll
mov
rclb
sub
dec
mov
insl
addr16
push
add
xchg
pop
mov
and
fdivl
inc
push
sti
sub
inc
xchg
inc
push
aam
repz
jle
xchg
push
jmp
sub
out
or
bound
popf
push
stc
jecxz
xchg
stos
lods
jle
pop
inc
jge
pushf
xchg
and
add
mov
pop
xor
add
int3
jle
lods
out
mov
imulb
sbbl
push
int3
push
pushf
pop
push
xchg
popf
xor
dec
loope
loop
lahf
stos
sbb
mov
sbb
or
xor
fistps
pop
pop
adc
cs
push
pop
xchg
shl
add
mov
adc
cwtl
or
fsub
popa
dec
outsl
inc
mov
pop
sar
sub
fcompl
and
in
ss
and
hlt
jge
cmp
fdivrl
mov
mov
aad
repz
xchg
adc
pushf
cld
or
mov
addr16
adc
pop
lahf
cmp
mulb
int3
mov
std
pop
sbb
insl
test
in
outsb
cmp
pop
cld
adc
push
sbb
in
xor
in
mov
repnz
std
push
fnstsw
aam
adc
pop
sbb
cmc
inc
inc
sbb
rcrb
jp
mov
lods
inc
jp
cmp
pop
out
mov
negb
and
mov
repz
pop
pop
cld
dec
dec
leave
xchg
inc
repz
fmuls
and
inc
dec
mov
mov
ss
pop
mov
pop
push
data16
cmp
popa
popa
jno
push
pop
pop
xchg
outsl
cmp
adc
cmp
mov
fdivrs
mov
fstpt
pushf
mov
jns
fucomp
push
jns
adc
mov
insl
test
aad
or
jae
inc
pop
dec
std
ja
cmp
cmp
add
out
jbe
mov
inc
cmp
sahf
jmp
mov
inc
jb
mov
jg
fimull
js
aam
lods
lcall
cmp
imul
cmp
jbe
push
pop
rep
sti
fidivs
mov
jmp
insb
and
or
pop
mov
ret
adc
pop
pushf
inc
pop
push
xchg
add
xchg
test
hlt
cmpsb
mov
les
lods
push
out
xor
cwtl
push
test
xor
inc
jle
insl
gs
enter
push
pop
jle
or
cmp
rcr
int
mov
xchg
rcrb
mov
pop
test
pop
fisttpl
lcall
insl
jo
push
or
repnz
inc
mov
push
pop
sub
shlb
push
push
outsb
jne
xlat
lea
nop
lret
int
fxch
pop
mov
cmp
cmpsb
sahf
jge
mov
pop
shrb
mov
lods
stos
xchg
push
sbb
les
ret
insl
xchg
outsb
cltd
adc
lods
insl
lds
pop
sbb
pop
movsl
mov
cmpsb
push
sbb
inc
jnp
enter
dec
mov
xchg
cmc
xor
jg
lcall
in
inc
jg
fldz
inc
push
into
push
pop
jns
cmp
or
std
pop
xor
mov
in
int
push
pop
sbb
bound
in
into
push
mov
hlt
pop
jae
xor
or
stc
xor
les
pop
js
repz
clc
cmp
test
xchg
add
push
enter
data16
mov
pop
adc
pop
popa
pop
bnd
in
into
inc
push
loope
sbb
ss
and
xor
pop
call
cli
push
aad
cmpl
xchg
lea
xchg
lods
sub
mov
xchg
lock
int3
xlat
je
or
or
jne
mov
sbb
inc
aad
int3
jb
cld
jne
loopne
scas
mov
dec
enter
pop
add
xlat
out
fiaddl
lahf
hlt
fs
out
inc
lret
dec
clc
xor
xor
imul
hlt
sahf
outsb
idivb
popf
rclb
scas
std
imul
sahf
outsb
mov
sub
dec
mov
ret
aam
loopne
fidivrl
cmp
and
aad
repz
xor
jb
lahf
add
ja
fsubs
lahf
int3
movsb
jg
ljmp
call
mov
and
pushf
loop
and
xchg
stc
fidivl
adc
inc
dec
jg
xchg
inc
xchg
push
add
lock
aam
jo
fdivrl
inc
lods
fs
and
aas
push
orl
insb
sbb
ss
arpl
cmp
xor
xor
pop
pushf
sbb
xchg
mov
or
ss
cltd
mov
inc
add
pop
sub
int3
shll
pop
shlb
inc
cmp
loop
fs
xchg
ret
mov
jl
gs
xchg
into
cld
popf
in
and
sbb
adc
jae
shr
ds
fnsave
loopne
ds
call
js
jecxz
push
push
pop
pop
dec
test
rcrl
daa
into
mov
mov
test
jg
push
cwtl
sub
push
mov
mov
lea
repz
ret
add
lret
adc
push
cli
out
and
repnz
repz
xor
into
sti
sti
into
cmpb
faddl
push
pop
sub
or
insb
or
mov
notl
mov
jb
xor
jne
add
dec
int
push
pop
popa
add
scas
lret
insb
fcompl
xor
xchg
lahf
xor
xchg
mov
jae
pop
adc
push
insl
ss
sub
rcl
je
shll
and
cmp
mov
sub
xor
sub
mov
jo
aam
mov
xor
mov
adc
jne
sub
jge
sub
adc
lret
xlat
lahf
cltd
mov
and
sbb
push
mov
sub
sbb
mov
mov
push
lods
fstps
jle
leave
jbe
dec
or
sub
adc
xchg
leave
rorl
pop
push
push
ljmp
mov
push
mov
inc
jbe
loope
mov
mov
jp
jmp
and
mov
lods
sbb
pushf
setne
imul
adc
lds
jns
jg
mov
es
fcompl
psubb
dec
gs
call
push
xor
or
popf
adc
cmp
stos
add
repnz
in
pop
xchg
aad
fsubrs
push
adc
inc
popa
pop
mov
jo
mov
mov
pop
mov
pop
lcall
cltd
mov
mov
hlt
push
jns
sub
add
sub
addr16
pushf
dec
sbb
fldcw
aad
xchg
mov
cs
decb
push
dec
imul
enter
enter
mov
mov
aam
sarl
popa
inc
adc
stos
jns
clc
aam
in
cwtl
pop
mov
sbb
mov
inc
mov
aas
icebp
aaa
popa
xchg
pop
adc
insb
lods
int3
scas
aas
xchg
adc
insb
in
sub
mov
cwtl
sbb
cmp
pop
aam
lcall
int
cs
xor
gs
xor
frstor
mov
cltd
push
pop
fdivs
lods
ja
mov
imul
xor
jecxz
rorl
rol
xchg
out
inc
jg
dec
xor
repz
pop
daa
jmp
adc
xor
xlat
jns
sbb
mov
dec
inc
jne
dec
and
jne
mov
xor
or
daa
iret
pop
sbb
mov
addr16
loope
xchg
add
jmp
sub
test
mov
pop
rorl
inc
aad
out
add
push
push
xor
cmpsb
mov
enter
aas
gs
cmc
mov
outsl
out
mov
addr16
dec
mov
mov
mov
js
std
pushf
inc
fldl
jge
hlt
pop
rclb
je
shlb
jmp
clc
into
cmp
fiaddl
loopne
cmp
sub
cmp
adc
test
pop
outsl
lret
and
hlt
pusha
lcall
and
ficoml
dec
ljmp
mov
adc
ret
fstps
ljmp
fdivl
sub
test
pop
mov
outsl
inc
jnp
jge
sub
jge
mov
add
add
dec
jmp
dec
mov
cmp
lods
and
ficoml
jns
jmp
in
lods
push
sub
adc
cwtl
push
sti
dec
ss
adc
sub
pop
andl
pushf
xchg
sti
jmp
out
lahf
nop
iret
lods
inc
imul
push
out
lret
sub
xchg
pop
push
dec
std
xor
cs
popa
popf
xor
xchg
xchg
or
outsb
and
xchg
lds
fldcw
sub
enter
scas
inc
sarl
pop
cmp
mov
sbb
sbbl
mov
lcall
fdivrl
fnstsw
filds
test
jg
jp
cmp
fwait
push
ficomps
mulb
aas
mov
dec
pop
fs
loopne
mov
fldt
aaa
mov
and
pop
mov
push
push
push
push
orl
rol
push
inc
dec
je
lods
in
push
adc
scas
sub
divl
inc
mov
sbb
insl
in
mov
int
mov
popa
dec
rcrl
jae
jne
xor
mov
inc
ja
aad
or
pop
mov
dec
loope
lods
mov
adc
test
or
mov
rcrb
rol
lods
adc
pop
sahf
mov
cli
dec
jnp
pop
mov
mov
xor
cmp
push
ja
add
pop
mov
inc
and
das
dec
leave
mov
mov
dec
mov
mov
sub
fdivl
xchg
mov
hlt
sarl
jb
and
sub
inc
movsb
lret
adc
mov
mov
push
push
es
dec
adc
sub
dec
mov
clc
push
push
fwait
sub
mov
push
test
inc
aam
int
fwait
jg
mov
or
lret
pop
xor
sub
push
aad
add
stc
mov
dec
clc
xchg
std
mov
mov
scas
adc
outsl
iret
sbb
fs
sub
pop
mov
xor
sub
lahf
ds
and
sub
mov
test
lods
ss
sub
movsl
enter
push
shrl
aam
xor
rorb
insl
aad
mov
mul
jg
inc
push
fcompl
fimull
mov
sub
gs
mov
cltd
enter
arpl
pop
mov
jne
movsl
push
fiaddl
sbb
shlb
add
in
pop
es
pop
mov
add
cmp
jne
push
xchg
push
orb
cmpsl
stos
ret
sub
dec
lcall
xchg
push
cltd
jecxz
loope
ljmp
push
xlat
pusha
or
cwtl
mov
cld
inc
adc
dec
stos
cmp
jnp
cmc
adc
mov
adc
cltd
push
rcr
sub
sub
jl
mov
mov
aam
jge
daa
xchg
scas
xor
loopne
ficoml
cmc
hlt
fdivrs
mov
adc
cmpsb
jle
rclb
stc
cmp
xor
cmp
into
into
repz
xchg
jne
add
fstl
jne
nop
mov
xor
add
daa
movhps
cmc
repnz
pusha
je
sbb
lcall
adc
mov
mov
mov
xor
repnz
pop
mov
mov
hlt
add
cmpsl
decl
popa
call
mov
frstor
mov
in
push
stc
mov
pop
roll
jl
aam
jp
xchg
sbb
out
popa
mov
push
push
mov
lds
scas
xor
jae
jecxz
mov
push
jns
clc
loop
aam
push
shlb
jnp
jge
loop
or
xchg
fmull
pop
andb
loop
xchg
adc
cmp
cmovb
or
enter
aam
mov
add
outsl
inc
push
xor
adc
mov
in
lea
out
xchg
pop
xchg
jle
aam
sub
shl
adc
nop
or
lret
adc
out
lahf
adc
repnz
clc
dec
je
dec
mov
nop
mov
push
lods
mov
xor
pop
push
xchg
insb
pop
xlat
cld
out
mov
mov
mov
clc
pop
aam
ss
testb
sbb
cmpsl
ss
adc
xor
fistpl
std
js
mov
dec
dec
test
jbe
dec
outsb
scas
xlat
add
test
adc
test
mov
xor
shrl
add
sahf
push
imul
fcoms
mov
adc
add
xor
sbb
lret
insb
inc
shll
js
fsubrs
xchg
xchg
mov
mov
dec
fdivr
xchg
and
cmpsl
jmp
dec
sbb
mov
fs
jno
inc
clc
adc
dec
xadd
inc
mov
test
rolb
push
xchg
lahf
jo
adc
dec
aad
mov
dec
ret
and
mov
fwait
xchg
lods
xchg
dec
shll
pop
pop
push
mov
repz
adc
adc
frstor
adc
shll
fcoms
repnz
push
or
call
jg
push
ja
mov
cmp
push
push
xchg
xor
push
jecxz
in
mov
enter
mov
cmp
cmp
sti
dec
push
mov
inc
ja
ficoml
lods
jp
popa
fists
mov
pop
fnsave
shll
mov
sbb
cwtl
or
pop
push
cmp
sahf
xchg
sub
mov
xor
es
sub
pop
jbe
xchg
cs
pop
sbb
loope
sarl
outsb
andl
sbb
in
mov
cwtl
mov
outsl
mov
sbb
mov
ficoms
ss
lods
sub
mov
push
and
mov
dec
imul
xor
push
aaa
xchg
push
cmpl
std
movsl
sub
fwait
mov
or
dec
imul
inc
fidivrl
clc
push
mov
rep
add
mov
push
sahf
aad
adcl
pusha
jecxz
adc
bound
mov
dec
add
lods
jns
fucomi
pop
cwtl
aam
and
jo
push
stc
fsubs
scas
sti
movsb
stos
cwtl
push
sahf
call
test
xchg
fs
sub
pop
dec
add
lods
mov
adc
pop
inc
lea
cmp
lcall
sahf
push
adc
icebp
pop
xchg
xor
inc
int3
pop
rcr
cmp
jns
xchg
jl
shll
add
jo
pop
jae
mov
push
pop
inc
dec
insl
stc
mov
mov
and
and
fstpl
cmc
mov
adc
sbb
pop
pop
pop
mov
sahf
sub
test
jo
xchg
pop
mov
push
cwtl
test
cmpsl
jbe
cmpsl
mov
lods
jb
sbb
inc
adc
jmp
roll
faddp
jne
cmp
and
dec
je
xor
je
xor
sub
inc
cmpsl
adc
int3
fbstp
inc
push
xor
ret
push
pop
ret
outsb
pop
dec
push
mov
mov
inc
mov
xor
insb
enter
adc
pop
cmc
movsb
add
mov
mov
pop
jle
ror
add
outsb
mov
push
sub
jl
adc
or
lret
push
push
add
addr16
ficompl
leave
shll
xor
pop
pushf
cmp
leave
lret
pusha
cli
cmp
lds
cltd
ret
lods
aas
add
call
mov
mov
clc
aam
lds
pop
decl
inc
into
xchg
xor
fbld
adc
jl
mov
adc
int
bound
jecxz
repnz
inc
mov
es
cmp
sbb
sbb
xor
lcall
fisubl
sarb
lods
mov
mov
fcomps
andb
push
cltd
cmp
xor
cltd
push
sub
dec
addb
push
lcall
xchg
push
int
adc
adc
hlt
xor
lds
xchg
push
divb
add
ja
stc
nop
rcll
das
mov
xor
sbb
fstl
loope
xor
test
stc
add
push
fistl
mov
je
mov
lods
pop
cmpsl
das
fsubl
push
pop
xor
push
fwait
pop
mov
cld
insl
repz
inc
lcall
jecxz
add
jmp
sbbb
fsubr
lds
jae
lcall
mov
push
bound
xchg
int
xlat
sub
nop
and
lret
xchg
fnstcw
test
repz
adc
cmp
cmc
pusha
sbb
or
add
xchg
test
negl
je
scas
outsl
pop
rcrl
stc
mov
and
ret
aad
jg
in
push
ss
call
sub
mull
xor
inc
fwait
int
movsb
mov
push
outsl
jns
popa
xchg
mov
adc
andl
enter
adc
outsl
mov
dec
sbb
aad
arpl
sahf
cmc
sbb
jae
push
cmp
jno
fcoml
call
cmp
outsb
loop
add
in
popf
ret
jo
testb
pushf
les
mov
aam
jge
daa
inc
and
xor
inc
mov
adc
inc
mov
shlb
xchg
push
cmp
jge
mov
sbbl
sarl
pop
repz
cwtl
xchg
mov
aaa
push
ficoml
and
mov
pop
push
ljmp
sbb
mov
jg
ss
mov
les
add
fdiv
fwait
insb
mov
enter
sti
jecxz
add
addb
jp
sbb
xchg
enter
cld
dec
lea
and
mov
dec
xchg
sub
lea
popf
add
pop
scas
add
pop
add
xor
pushf
and
lret
push
ja
push
sbb
adc
cltd
sbb
mov
iret
stc
insl
mov
sahf
repnz
jg
dec
insl
pop
and
ja
in
aaa
repz
jmp
int
push
xlat
push
mov
cwtl
jmp
jae
shll
sbb
mov
mov
jp
adc
frstor
fdivs
inc
jecxz
jnp
push
pop
fsubrl
push
repnz
mov
jns
lds
in
rorl
repz
push
das
inc
inc
lret
rcr
adcb
jne
leave
addl
add
int3
cs
jae
int
jp
xchg
cmpsb
sub
enter
popf
js
stc
push
pop
cmpsl
test
fisubrl
dec
ss
xchg
inc
je
mov
sub
ret
add
lahf
jne
inc
subl
fstpt
sbb
aam
adc
jnp
mov
mov
add
sub
mov
xor
hlt
xor
fcoms
jge
scas
xchg
repnz
push
cmpb
aad
mov
mov
push
cmpsb
aam
scas
inc
mov
pushf
mov
mov
iret
leave
rclb
into
xchg
in
mov
dec
cmp
adc
mov
jmp
sahf
xlat
je
fidivrl
mov
fdivr
jle
aaa
ret
adc
sarl
pop
data16
out
out
jle
aad
pop
dec
mov
jp
popa
sbb
add
in
pop
enter
xor
cmp
push
xchg
outsl
xor
xor
jle
addr16
push
sub
int
repnz
mov
cmp
popf
jno
stc
fs
fdivs
iret
fadd
mov
add
lahf
pop
int3
ucomiss
xor
fwait
sahf
movb
push
rclb
sti
or
xor
insl
cmp
xor
popf
xchg
cld
push
pop
ficompl
mov
xchg
test
xchg
pushf
mov
js
rcrl
xor
in
sbbl
insb
push
push
pop
rcrl
int3
xchg
dec
in
stos
adc
repnz
fsubl
fiadds
sub
into
subb
xor
sub
sbb
add
ljmp
clc
push
cmpsb
xchg
sahf
xchg
rol
jecxz
mov
xchg
addr16
and
shrl
pop
cld
fnsave
add
rclb
fcmove
sbb
xor
in
push
pop
ds
xor
inc
add
pop
loopne
push
insb
xorb
dec
stc
hlt
cmpsb
push
je
popa
outsb
mov
and
mov
inc
aad
adc
push
fcomi
pop
aad
leave
in
cmc
pop
push
mov
cltd
jecxz
add
in
test
pop
sbb
ja
jmp
lret
int3
jne
and
xor
repz
jno
pop
icebp
hlt
aad
nop
out
inc
push
or
into
mov
inc
add
mov
in
int3
xor
jmp
sarl
stc
repnz
aam
lock
test
mov
aam
testl
cmp
jp
pop
jge
rorl
repz
icebp
daa
scas
and
popa
inc
sbb
jecxz
insb
cmp
fcmove
adc
cwtl
jle,pn
je
lret
lods
in
adc
mov
xchg
xchg
jecxz
shrb
and
mov
mov
je
roll
lcall
fdivl
cmp
out
inc
sbb
mov
mov
xchg
mov
ror
adc
dec
in
jge
fsubrl
mov
stos
jge
stc
push
push
cmp
repnz
sbb
push
cwtl
scas
pop
xor
mov
cmp
fs
fcmovnbe
mov
inc
mov
xor
pop
push
leave
cmp
sbb
push
mov
fmul
mov
and
mov
fcoml
lock
das
movsb
in
xchg
or
inc
mov
fsubs
pop
jns
iret
cmpsb
pop
jle
mov
sub
push
jns
push
lret
xchg
jle
cs
mov
pop
pop
and
push
scas
fcoml
fcom
in
pop
sub
sahf
repz
orl
dec
repz
jbe
shrl
mov
jle
push
loope
push
fmuls
or
jl
push
aaa
fidivrl
ds
lods
mov
fs
push
jle
repz
xchg
jno
cmpsb
loope
ds
dec
cmp
xchg
stc
xor
jbe
in
aam
mov
ds
ljmp
dec
mov
lock
out
push
push
sar
sub
mov
fistl
adc
pop
push
sbb
lods
loop
out
push
movsl
xor
paddd
hlt
pop
mov
call
sub
out
sub
subl
xlat
sbb
pop
fldenv
xor
addl
xchg
cmp
mov
xor
and
loope
push
or
das
pop
push
fdivrl
jg
popa
out
aad
daa
cld
push
test
sub
xchg
xchg
aad
dec
inc
repz
fsubrl
adc
shrl
pop
out
das
mov
xchg
sub
xchg
jle
pop
movsb
sahf
jmp
out
in
xchg
push
sahf
mov
and
dec
ja
jge
push
fwait
xchg
jmp
out
or
dec
repnz
outsb
scas
push
loopne
pop
pop
cli
sti
cwtl
fstl
fdivrl
mov
jg
in
xchg
leave
jle
adc
mov
aaa
lods
push
jmp
jl
shlw
ds
adc
rcr
push
or
aad
mov
fwait
inc
test
xchg
imul
push
in
xor
sbb
add
pop
cmpb
pop
imul
cmpsb
ltr
jmp
jl
imul
aam
pop
popa
out
push
fdivl
ds
pop
sub
ss
outsl
mov
insl
pop
push
rorl
test
sub
gs
sahf
cmc
cmpsl
sbb
sti
mov
repnz
mov
jns,pn
xchg
loopne
cmp
push
in
gs
mov
data16
mov
test
pop
xor
int
mov
in
inc
mov
pop
push
insl
cmp
iret
rol
xlat
cmp
sarl
xor
xor
add
test
int
lcall
or
fcmovb
pop
leave
ficompl
popa
and
pop
fcmovb
cmp
sub
add
loop
and
xchg
push
pop
add
lret
dec
mov
cmp
test
sbb
cld
jecxz
in
enter
out
clc
ja
xor
fisttpll
sahf
scas
push
pop
mov
ja
inc
inc
mov
leave
push
mov
lods
mov
mov
xor
push
movsb
jle
jg
sbb
lds
jmp
adc
gs
adc
stc
push
mov
das
fcmovu
daa
rol
xchg
xlat
sub
add
outsb
lock
jne
jne
popa
ss
outsb
je
mov
xor
or
rol
cs
enter
dec
jecxz
xchg
adc
dec
mov
loopne
decb
mov
jg
and
push
mov
je
cmc
adc
inc
dec
sub
ljmp
sbb
xor
inc
mov
fistl
test
test
xchg
dec
data16
mov
mov
cmp
fcmovnb
dec
push
push
rol
fdivrs
mov
and
cmp
ds
or
stc
test
adc
and
idivl
push
push
test
fxch
push
push
jne
pushf
and
ret
mov
sahf
test
push
popa
xor
pop
sbb
cmp
and
cmpsb
add
jns
mull
fidivrl
outsb
pop
lea
jge
pop
mov
xchg
mov
xchg
mov
das
mov
hlt
pop
fstps
sub
mov
pop
pop
mov
mov
cmp
mov
adc
rorb
pop
rcr
cmp
jl
stc
xchg
lods
push
pop
push
pop
out
push
movsb
or
adc
fcmovb
push
pop
inc
cwtl
sarb
int3
repnz
dec
ficoms
push
dec
push
je
push
xor
int3
cli
andb
push
cmp
and
dec
mov
jns
enter
adc
and
sub
rorl
je
rorl
jae
mov
lods
sbb
cmc
leave
mov
in
lret
mov
rcrl
push
fst
cli
push
cmp
pop
dec
lds
ret
cwtl
inc
mov
cwtl
mov
pushf
into
sub
int
cmp
jnp
inc
push
or
cwtl
fsubrl
push
mov
inc
mov
in
repnz
fidivl
cmpsl
cmp
fldt
call
lds
popa
push
in
imul
xchg
adc
mov
test
shl
jns
mov
insl
mov
insb
add
fsubrl
repnz
lahf
pop
lods
push
inc
jae
movsb
in
xlat
lods
or
sbb
pop
cld
int
mov
and
sbb
xchg
xor
cmp
gs
pushf
fildll
pop
pop
pusha
sbb
cmc
mov
fidivl
mov
inc
stc
push
fucomi
fstl
cld
or
cmp
cmp
shll
cmp
inc
cmpb
pop
inc
dec
cmp
sarb
sahf
arpl
hlt
pop
ljmp
sahf
scas
hlt
addr16
pop
movsb
jg
fdivrs
aam
dec
mov
test
jle
in
fincstp
adc
cmp
xchg
pand
xchg
insl
sbb
xor
xlat
lods
bound
mov
or
push
popf
out
ljmp
lcall
fdivrs
cmp
in
adc
and
inc
stc
sbb
dec
aam
std
inc
jbe
xor
leave
jmp
jge
rep
push
xor
dec
inc
or
add
and
xchg
lds
es
mov
cmpsl
push
pop
xor
lods
lods
jg
pop
xor
push
insl
sbb
pop
lds
pop
dec
lret
sub
mov
mov
das
adc
dec
aad
or
loopne
inc
xchg
xchg
mov
cltd
mov
rcl
mov
rcr
dec
shrl
push
rol
in
mov
add
push
orb
repz
mov
xor
pop
mov
gs
popf
rcrl
pop
popf
adc
repz
scas
fcmovu
push
hlt
test
cltd
fsub
lds
loopne
inc
dec
sahf
jo
mov
das
test
cld
mov
xor
ja
push
cmpsb
mov
lods
roll
add
int
jl
negb
or
ds
das
incl
dec
push
dec
out
pop
cmp
stc
cmp
fcomi
imul
push
dec
loopne
mov
repz
fcomp
cs
rol
test
std
ds
sbb
neg
aas
sahf
sub
adc
mov
popf
push
pusha
and
mov
cmp
mov
loopne
and
les
mov
xchg
out
out
hlt
xchg
scas
shlb
adc
aam
scas
test
sbbl
cmpsl
and
lods
lods
sbb
sub
adc
rcrl
or
shll
pushf
and
pop
loopne
test
clc
or
mov
dec
les
add
sahf
dec
mov
cwtl
les
inc
xchg
pop
loopne
std
pushf
lcall
cmp
and
into
imul
int3
push
daa
outsl
cltd
dec
cmp
int
xor
stos
jo
jmp
pop
mov
dec
pop
sub
mov
aas
jns
popf
fisubrl
push
xchg
or
xor
test
add
lods
mov
sub
je
lret
adc
pop
lds
stos
pop
clc
cmp
inc
test
leave
sub
insb
addr16
jl
pop
inc
je
cmp
xor
cltd
push
outsl
add
jg
xor
mov
sbb
xchg
sub
and
mov
jp
stos
pop
dec
pushf
pop
mov
mov
fucom
jle
or
mov
cltd
push
adc
lea
inc
flds
dec
mov
rolb
push
andb
movl
fldt
sbb
addr16
mov
cwtl
js
pop
jnp
xor
popf
aad
sub
xchg
dec
out
fs
ds
pop
mov
scas
lahf
mov
movsl
adcb
fmul
push
aam
je
inc
jge
xchg
shl
js
pop
push
add
push
dec
rorl
dec
dec
sar
mov
add
int
test
rcrb
push
mov
out
or
cld
sub
ss
pushf
dec
bound
mov
shll
fxch
nop
mov
pop
push
pop
push
std
jge
and
dec
pop
mov
xor
inc
insl
push
lahf
cmpb
fsubrl
stc
push
dec
addr16
rcrl
test
ds
je
rcrl
je
adc
roll
jae
dec
sbb
sahf
cmp
js
mov
xchg
int3
push
xor
sub
int3
clc
imul
sub
pop
cmpsl
mov
lcall
lret
jp
mov
jns
and
mov
jmp
mov
mov
fdivs
dec
fsubrl
lods
lea
mov
lret
fwait
pop
negl
jmp
push
movsl
push
cmp
stos
mov
adcb
fldcw
dec
dec
lods
mov
or
test
add
mov
push
adc
gs
repz
ret
and
bound
out
aas
repz
movsb
add
mov
pop
mov
add
cwtl
xor
xor
push
inc
rorl
sarb
popa
fnstenv
pop
addr16
pop
pop
clc
imul
adc
jge
adc
cwtl
xchg
adc
in
in
sub
lret
sarb
sub
jne
popa
sahf
jno
dec
fstps
dec
rcll
cmp
xor
pop
ret
ficoms
cmp
jge
paddsb
repz
sbb
push
enter
movsb
jb
mov
fnstcw
mov
sti
fldt
gs
rorl
imul
xchg
shr
cmovnp
xor
and
add
mov
or
rorb
jmp
outsb
sub
add
repz
ss
lods
push
ror
mov
jl
hlt
or
pop
int
push
jge
mov
hlt
push
sbb
cmp
pop
dec
int3
into
into
outsl
push
cld
or
pop
pop
into
das
pop
cmc
add
ljmp
sub
sahf
push
mov
mov
pop
push
notl
fnsave
ds
sarb
repnz
ss
mov
sub
jns
xor
sub
into
popf
add
xchg
mov
fs
mov
jl
cmpsb
insl
cli
cmpb
jbe
mov
mov
ja
sub
pop
cmp
or
xchg
push
sub
or
inc
push
mov
cmp
xchg
sbb
mov
inc
push
pusha
mov
rorl
loopne
aaa
lds
pop
dec
pop
out
pop
add
cltd
inc
pop
lods
adc
iret
push
sub
jbe
mov
jne
repnz
outsl
pop
aaa
insb
inc
xchg
dec
sbb
insb
lods
mov
push
mov
dec
out
dec
ja
movsb
int
cld
cld
sub
insb
xchg
jge
push
aad
insb
or
test
sub
xor
mov
fmulp
aaa
push
dec
adcb
mov
je
push
arpl
out
scas
leave
mov
inc
mov
push
push
mov
sub
test
mov
outsb
mov
mov
sarb
sub
cld
push
xchg
pop
xchg
adc
hlt
insb
cmp
in
je
fdivrs
mov
fcoms
sbbb
je
jge
mov
scas
xchg
cli
pop
mov
lcall
lds
sbb
ret
mov
xchg
xor
std
cmpl
push
adc
mov
cmp
jge
aam
mov
mov
lods
dec
mov
mov
jnp
jbe
xchg
fs
push
xor
ficoms
cmp
lds
lret
jnp
out
shll
xrelease
mov
das
out
adc
sbb
inc
add
fdivl
pop
pop
sbb
pop
cmpsb
lods
stos
dec
lcall
or
fisubrl
rclw
cmp
and
cltd
fstp
std
pop
pop
mov
fldl
mov
outsb
pusha
cwtl
lods
xchg
mov
imul
movsbl
mov
int
insl
insl
mov
push
mov
ss
lods
mov
rorb
ja
cli
out
cmp
push
mov
stc
xchg
push
out
push
mov
mov
jae
adc
lods
xchg
shrl
mov
call
jle
fldcw
fidivrs
mov
rcll
cmp
cmc
jo
ror
fs
test
nop
sbb
xchg
dec
out
adc
inc
fnstsw
xor
adcb
adc
in
filds
aas
mov
adc
cmc
aas
dec
push
cmp
push
fcompl
pop
fstp
mov
push
pop
lea
mov
out
loope
or
int
scas
mov
dec
push
negb
mov
sahf
and
mov
sub
or
into
out
jle
ja
lods
leave
cmp
aaa
adc
popf
int
lcall
fdivrl
aam
test
jge
lods
push
std
lea
jge
lahf
int
push
enter
popa
jb
int
test
leave
xchg
push
push
ss
fisubrs
orl
fs
popa
sti
cmc
test
rcrl
pop
rcrl
cmc
mov
aam
xor
xor
pop
fucom
je
sbb
fwait
rcll
cmp
jno
push
mov
aad
repz
mov
push
push
pop
dec
movsl
mov
mov
xor
adc
sbb
xor
ljmp
lea
push
popf
cmp
xchg
jmp
jmp
mov
mov
xorl
pop
jns
int
mov
aam
pop
push
sarl
nop
mov
xlat
mov
or
xchg
pop
and
repz
hlt
insb
adc
jle
cmp
fisubrs
ja
push
setl
test
xchg
mov
fldenv
lock
ds
xchg
mov
cmp
rcrl
sbb
lahf
ss
mov
cmpsb
vorps
sub
lods
fs
or
sbb
mov
rorl
arpl
jns
xchg
jge
mov
sub
fwait
arpl
adc
add
and
lock
add
inc
scas
fdivrl
push
jns
adc
enter
sub
adc
cmp
xchg
cmp
ret
test
fisubl
movsb
into
into
subl
hlt
dec
cwtl
cltd
inc
popf
sub
test
sbb
jne
fisubrs
lock
mov
cwtl
aad
cs
inc
enter
mov
pushf
push
adc
xor
sbb
or
ret
jmp
aaa
push
gs
aam
std
ja
cld
adc
shlb
dec
xchg
cmp
mov
xchg
mov
into
movsl
dec
movsl
add
lea
jnp
loop
daa
mov
lea
clc
loopne
adc
jg
adc
test
or
lcall
mov
pop
lods
popf
roll
popa
xor
add
fisttpll
push
lcall
adc
push
mov
cmp
lret
ret
ret
push
mov
faddp
jns
outsb
in
int
or
rolb
xor
xchg
dec
cmc
hlt
pop
jge
push
and
push
mov
pop
int3
iret
stos
adc
inc
push
mov
fwait
call
rcr
pushf
xchg
sahf
int
lock
cld
es
insb
fdivr
jl
xchg
flds
ret
iret
cld
lock
xchg
int
mov
pop
clc
xchg
dec
ret
les
sbb
ds
cmp
sahf
cwtl
push
jle
jno
inc
call
cmp
les
push
push
lods
mov
sahf
cs
hlt
pop
ret
jmp
sub
sbb
sbb
push
xor
adc
pop
out
rcrb
ret
cli
cld
outsb
imul
sahf
fstl
xor
sbb
jmp
add
pminub
mov
fiadds
jbe
outsl
popf
xchg
adc
arpl
cmp
shl
dec
cwtl
push
nop
jle
test
mov
adc
es
mov
adc
bound
mov
dec
fstpl
adc
inc
adc
sub
fwait
shrl
push
push
test
mov
fcoms
ds
cmc
pop
stc
lds
or
ss
inc
xchg
mov
daa
aad
jnp
sbb
orb
pop
imul
pop
xchg
sarw
ret
daa
je
fisubl
loopne
cmp
mov
sti
fnstenv
sub
pop
pop
pop
inc
es
push
xor
or
data16
popa
mov
outsb
test
aad
cld
mov
jge
mov
out
sbb
out
sahf
test
pushf
pop
ja
mov
cltd
popa
ds
fs
xor
pop
nop
and
popa
cmp
ja
push
aad
leave
out
js
stos
ficoml
aad
test
push
bnd
inc
xor
mov
fwait
dec
xchg
rcrl
jnp
popf
scas
dec
pop
insl
cld
mov
xchg
pop
push
cmp
test
fbld
lcall
push
push
pop
pop
add
and
dec
push
imul
push
push
push
pop
call
mov
add
pop
xchg
rorl
sahf
popa
inc
add
cmp
sti
adcb
rcl
ljmp
stc
insl
push
hlt
lret
divl
js
mov
in
insl
in
or
sub
cmc
int3
push
push
in
jbe
dec
ljmp
sbb
mov
mov
xchg
je
mov
and
cltd
fs
das
movsb
or
mov
lods
fsubrl
mov
sub
mov
test
inc
dec
push
xchg
ret
in
jge
loop
fucomip
mov
movsl
xor
fdivr
sarb
stc
popf
xor
jno
mov
clc
add
fwait
daa
sbb
lcall
dec
enter
inc
cmp
repnz
cmp
or
jmp
aaa
jecxz
int3
sub
or
xchg
scas
addb
enter
mov
jmp
clc
pop
je
cli
data16
pop
push
xchg
popf
insb
mov
je
sarl
xor
fcoml
jns
xchg
sbb
push
xlat
loopne
sub
hlt
test
clc
pop
cmp
mov
fs
cwtl
adc
cmp
mul
in
xchg
mov
fcmove
arpl
scas
push
ja
test
xchg
cmp
push
sbb
data16
sbb
mov
scas
icebp
lods
xchg
jl
jb
xchg
sbb
inc
push
ss
push
sbb
or
jle
mov
push
push
cld
or
shrl
ficoml
mov
mov
cmp
add
sahf
pop
shll
int
sbb
aas
xchg
inc
sub
in
notb
pop
mov
inc
shrb
adc
in
les
xlat
mov
sub
push
outsb
scas
xor
insl
shlb
push
mov
fnstenv
cmpsb
leave
dec
nop
pop
xlat
rol
js
cli
xbegin
or
xor
lcall
jne
jae
inc
mov
inc
stos
xchg
and
adc
pop
shrl
pop
cmpsl
lock
aam
je
hlt
int3
out
into
xor
xor
rcrl
jo
push
data16
jnp
pop
int
sub
test
fcmovnbe
iret
fcompl
mov
dec
js
sub
mov
repz
sti
xchg
mov
enter
outsb
xchg
pop
and
push
popa
call
jbe
mov
hlt
in
adc
and
inc
or
add
mov
cli
push
cmc
lcall
lret
rol
mov
mov
pushf
sbb
pop
mov
mov
shrl
pop
inc
and
mov
loopne
mov
or
pop
mov
pop
aam
rolb
imull
sbb
or
ficompl
xchg
mov
dec
mov
sub
mov
xor
jmp
call
pop
jl
das
pop
xorl
push
out
pop
out
js
inc
ss
fcomp
push
jbe
int
jne
ror
test
jge
sub
insl
repz
lock
sarl
in
xor
fldl
mov
popa
cli
jbe
mov
jge
inc
xchg
sub
arpl
jmp
add
out
in
cmp
nop
sub
xlat
push
test
loopne
and
negl
xlat
sahf
add
movl
scas
pop
mov
jp
fiaddl
jl
jp
xchg
repz
dec
cmpsl
pop
and
push
pop
push
daa
add
in
sub
cs
ljmp
fstp
add
sar
out
mov
push
cltd
sub
cltd
mov
int
out
jmp
sbb
fsubl
cmpsb
fmuls
mov
jge
mov
ds
or
je
adc
jge
xchg
pop
inc
dec
lahf
cltd
lret
shrl
daa
mov
rcrb
in
into
rol
std
ret
stos
mov
lcall
jg
outsb
js
cld
dec
mov
test
call
test
mov
xor
push
pop
in
sbb
jge
dec
stos
mov
lahf
ja
inc
and
pop
mov
pusha
sbb
pop
xor
lahf
lods
cmp
ror
movsb
jnp
fists
adc
push
lcall
push
dec
shll
shr
into
and
test
jb
push
jmp
fimull
push
shrl
test
mov
rcrb
adc
js
scas
aam
fadds
mov
movsb
cmp
sub
push
nop
mov
lods
sarb
inc
sahf
inc
popa
aaa
aam
dec
aas
adc
push
ss
push
mov
rclb
cmpsb
fsub
sbb
out
shrl
fnsave
fistpl
mov
mov
mov
ret
aad
cli
lds
aad
mov
repnz
pushl
xchg
dec
cmp
jns
pop
sbb
lcall
negb
std
inc
adc
jb
mov
cmp
sbb
popa
inc
sub
inc
xor
lret
sub
rolb
adc
movb
cmpsb
bound
idivb
sti
jbe
cli
dec
or
mov
or
mov
lret
rcrb
fnstsw
push
aaa
mov
xchg
std
popa
xor
shrl
das
rcll
mov
and
adc
je
push
lods
js
pop
dec
pop
lds
insb
aam
pushf
or
inc
insb
pop
adc
mov
dec
shlb
sub
add
rclb
lods
popf
mov
mov
cmpsl
xchg
mov
lahf
pop
movsl
mov
in
cmc
repz
pop
aad
jp
sarb
mov
lret
popf
aaa
pop
in
xchg
xchg
adc
mov
test
xchg
sbb
xor
xchg
dec
push
dec
mov
xchg
scas
shufps
inc
movsb
or
imulb
lock
xchg
or
pop
push
or
ljmp
inc
dec
mov
pop
jle
add
sbb
xor
adc
jne
pop
and
push
dec
add
movsl
push
cmp
sbb
dec
ljmp
lret
mov
lods
fidivs
jo
mov
scas
push
jge
popa
mov
add
inc
jbe
imul
stc
xchg
not
cmp
pop
dec
push
js
inc
in
dec
jge
out
push
mov
pop
or
pop
mov
cs
xchg
xor
popf
out
dec
inc
xchg
fnstenv
xchg
pop
outsb
stc
fcomps
adc
gs
out
push
or
daa
push
and
mov
prefetchw
or
mov
jb
pop
xchg
lods
pop
sbbb
dec
adc
repnz
cmpsl
flds
ljmp
mov
dec
push
jle
xchg
pop
or
addl
jg
je
cmp
mov
sub
lcall
lds
loopne
inc
ds
sub
jnp
sbb
adc
out
jnp
lcall
adcb
jbe
movsb
fnstsw
js
cltd
push
scas
inc
dec
mov
cmpsl
out
les
clc
sub
pop
into
stos
lret
rcrb
inc
mov
testl
lods
insl
lods
lods
repnz
imul
cmpl
pop
movsb
divl
imul
cs
push
roll
dec
dec
cmp
ds
pop
idivb
rcl
mov
pop
pop
sub
sub
rep
sbbb
cmp
push
pop
jnp
fld
aad
inc
jbe
ja
incb
sub
sbb
lock
add
ds
lcall
fwait
or
mov
out
mov
sbb
iret
cli
sub
stc
jg
xor
rolb
lret
aam
mov
test
xor
stc
fucomp
aad
rclb
idivl
dec
push
add
push
enter
fmul
mov
sub
sbb
flds
cmp
sub
cmp
cmpb
popa
push
loop
in
push
shrb
inc
test
dec
mov
aad
lcall
lea
scas
cmpsb
push
mov
jp
push
arpl
lcall
pop
mov
mov
push
push
pop
dec
add
fnstcw
je
fsincos
scas
dec
std
dec
xor
xor
xchg
add
and
adc
call
shlb
pop
pop
fldcw
pop
enter
sti
pop
iret
cld
cmpsb
repz
mov
adc
clc
push
cld
ja
dec
ret
jo
mov
xor
sub
pop
leave
rcl
stos
jp
adc
repz
cwtl
pop
int
push
mov
inc
cmp
cld
push
xor
fisubrs
stos
mov
notl
cltd
jae
mov
mov
xor
shrl
fstps
scas
repz
jle
dec
mov
xor
add
pop
xchg
xor
mov
lahf
inc
sbb
iret
aad
mov
insl
pop
shrl
pop
dec
sbb
jbe
pop
pop
mov
inc
pop
lcall
and
cmpsl
xor
sbb
xor
mov
xchg
stc
pop
sub
loope
xor
xlat
inc
xchg
insl
inc
jno
jmp
je
fcmovnb
fsubs
xor
pop
lahf
sbb
pop
push
scas
pop
daa
sti
xchg
xlat
or
fstpt
fimuls
mov
pop
jle
fcoml
sub
pop
dec
push
pushf
or
add
adc
xor
in
adc
xchg
out
push
push
shlb
lea
in
nop
int
ret
fdivrl
pop
data16
pop
xor
sub
pmullw
cmpb
xor
cs
popa
loopne
cmovns
sbb
shll
dec
jne
lcall
test
arpl
pop
lods
pushf
sub
dec
pop
xchg
rcrl
xor
and
lock
add
jmp
pop
sbb
insl
lcall
mov
in
mov
sub
loopne
xchg
sti
icebp
xchg
pop
cmp
iret
xor
insb
inc
sbb
xchg
push
dec
push
cltd
adc
pop
sub
dec
lcall
lret
leave
outsb
stc
inc
push
repnz
loop
or
push
clc
aam
xor
and
je
adc
stos
fsts
ss
imul
xchg
or
in
mov
push
pop
sahf
pop
or
jmp
data16
cmp
pop
xor
sbb
decl
lahf
out
add
mov
sbb
jg
push
dec
cmp
mov
nop
out
dec
fwait
mov
inc
addr16
xchg
inc
push
outsl
sub
xchg
push
add
sub
xchg
inc
test
sub
int3
jg
rcrl
mov
xchg
in
movb
nop
xchg
test
loopne
cmpsb
xor
jle
push
into
sub
mov
jecxz
aas
rcll
std
sbb
in
cli
jp
fbld
call
popf
adc
aad
loope
test
pop
pop
test
shll
jecxz
xchg
mov
into
pop
mov
rorb
jmp
jo
sbb
jge
jle
cmpl
mov
mov
push
cli
add
ja
sbb
popa
popf
jge
jle
lods
lods
dec
push
dec
mov
and
fcoms
pop
lcall
call
mov
mov
ret
stos
movsl
jp
int
movsl
pop
mov
or
cltd
push
in
cmc
dec
pop
pop
dec
pop
cmp
xlat
rcr
mov
leave
mov
jp
pop
push
mov
cmpsb
mov
xorb
data16
cwtl
je
stos
or
xchg
mov
sti
cld
ret
lret
into
mov
jecxz
fimull
mov
mov
adcb
mov
mov
lcall
xchg
xchg
cwtl
data16
fcmovu
es
scas
mov
push
push
hlt
dec
mov
jecxz
lods
mov
inc
hlt
ret
call
xchg
in
or
sbb
imul
mov
lcall
std
pushf
and
arpl
cmpsb
mov
or
cmpsb
insb
mov
xchg
pop
ficompl
je
fistpll
cmpl
scas
or
fnstsw
xchg
push
jbe
mov
pusha
aas
loop
sub
dec
mov
call
scas
mov
push
sbb
ds
fldl
mov
add
lds
in
mov
push
jle
jp
andb
lods
daa
pop
push
fdivrl
adc
jp
fs
lds
out
mov
adc
push
pushf
fstpl
fistpll
addr16
cmp
daa
fidivrl
mov
or
dec
loope
fcmovb
mov
pop
jbe
addr16
ss
shll
fdivr
add
data16
jnp
int
lea
pop
fldl
push
repnz
aad
adc
testl
cld
xchg
in
data16
out
or
ss
leave
out
adc
mov
add
sbb
popa
gs
inc
cli
lds
fs
ret
movsl
aam
mov
mov
js
andl
loop
adc
xor
jge
and
loopne
or
leave
insb
jb
rcrl
fsubl
data16
scas
mov
push
dec
mov
pop
mov
cmp
xchg
ficompl
stos
pusha
mov
and
pop
xchg
ss
in
mov
inc
xchg
lds
fistl
mov
rorb
jl
mov
aad
push
cltd
ret
test
push
fadd
inc
f2xm1
movsb
test
pop
mov
lret
mov
cwtl
in
adc
push
cmp
fisubs
sti
xchg
ficompl
es
pop
ret
mov
jae
push
adc
pop
mov
mov
or
js
mov
xchg
push
fmuls
xchg
sbb
jg
ss
pop
pop
xor
cltd
sarl
scas
add
stos
cmp
insb
jge
sub
push
mov
les
aad
dec
rcll
sti
jge
mov
xor
inc
dec
jnp
pop
mov
mov
xchg
inc
push
imul
test
jbe
inc
rorl
jecxz
xchg
pop
fcoms
mov
pop
dec
push
push
pop
pop
stos
imulb
xchg
jl
js
test
adc
iret
mov
in
faddp
xor
cmp
shlb
enter
int3
mov
pop
js
pop
dec
arpl
xchg
pop
out
dec
push
sti
fnstsw
gs
xchg
jg
sbb
push
packssdw
loop
les
cmp
outsl
mov
arpl
or
or
and
sbb
and
jl
pushf
fsub
inc
pop
jl
inc
lods
lcall
movsb
roll
ds
pop
int
iret
fsubl
iret
cmpsl
decb
mov
inc
mov
ret
mov
pop
or
std
mov
mov
cwtl
jl
sbb
sbb
push
ret
fstps
shl
jle
shll
aad
cmp
pop
fsts
adc
inc
cmp
jge
mov
sub
js
sti
mov
aas
lcall
in
push
ficompl
fs
hlt
mov
shl
lret
cltd
jbe
sbb
lea
cwtl
rcrb
xor
and
sbb
insb
jmp
or
mov
test
fs
mov
sbb
jnp
aam
pusha
cwtl
shll
jae
xchg
out
in
insl
fcmovbe
push
icebp
addr16
insb
rcrb
mov
pop
in
xchg
popf
incl
nop
push
adcl
aad
xlat
sub
loopne
xchg
cld
mov
ds
stos
adc
fcoml
dec
fstpl
fldcw
inc
mov
lock
dec
fnsave
ficoml
rol
inc
push
aad
into
pop
rol
add
stos
dec
aam
stos
xchg
insl
cmp
add
jbe
push
mov
mov
hlt
ds
dec
mov
adc
adc
fcoms
stos
inc
fimuls
pcmpeqb
jnp
js
dec
negl
sarl
adcb
pop
int3
fadds
repnz
mov
shll
jecxz
sbb
sub
stos
popa
pop
pop
mov
and
push
mov
dec
lods
fs
popa
pop
cli
xor
inc
push
adc
fisttpl
aam
fstpt
sbbl
cmpsw
cltd
mov
rcr
lret
adc
fwait
loope
das
push
imul
adc
pop
cmp
add
push
daa
clc
mov
js
scas
mov
popf
sbb
cmpsl
fidivrl
fs
movsb
repnz
push
sahf
add
repnz
adc
push
ds
pop
in
dec
dec
pusha
cmp
push
popa
push
mov
sbb
loopne
push
incl
xchg
push
rcll
test
inc
xchg
push
inc
les
xor
mov
inc
repz
sub
lea
aam
insl
mov
aas
sbb
frstor
int3
lcall
jecxz
add
stc
adc
adc
out
mov
cli
rdtsc
dec
sub
lods
std
popa
movsl
adc
jle
outsb
ret
mov
iret
sahf
mov
shll
test
cs
addr16
push
lock
pop
pushl
cmpsl
mov
cmp
addb
and
push
jmp
mov
pop
add
sbbb
lret
pop
cltd
push
cld
out
cmp
rorl
mov
lea
mov
sti
and
aam
aas
cmp
jecxz
imul
insl
or
pop
pop
hlt
hlt
and
dec
mov
push
jl
dec
int3
xchg
mov
sbb
push
cmp
sub
test
ja
rep
cwtl
pshufw
daa
fldt
movsb
daa
aam
sbb
jg
and
xchg
pop
inc
mov
mov
fistpl
or
sub
aas
and
mov
fstpt
dec
roll
cwtl
cmpsb
push
shl
ja
outsb
push
imul
pop
nop
add
subb
pop
int3
mov
repz
or
cmp
icebp
enter
dec
ror
scas
cmp
push
xorl
sub
outsb
cmp
adc
rolw
jge
lods
fsubs
sub
mov
fld
mov
adc
fs
push
fldt
sarl
pop
std
jecxz
inc
shll
les
cmp
adc
mov
fstpl
fcmovnbe
adc
repnz
mov
clc
and
imul
mov
lret
pop
pop
mov
ficompl
xor
negl
jo
xchg
les
das
mov
lods
jge
movsb
sahf
sub
dec
xor
cmp
sbb
rcr
sub
inc
mov
lcall
cmp
je
clc
adc
pop
mov
hlt
cwtl
jl
push
fisttps
pushf
popa
mov
jnp
mov
pop
sti
repz
lret
sub
popf
jo
and
jecxz
mov
in
adc
cmp
pushf
jmp
push
fwait
scas
cmpsb
dec
stos
outsb
xchg
mul
mov
lahf
push
ss
inc
pushf
aam
setne
mulb
fldt
stos
int
push
sar
addr16
push
hlt
loope
ss
jle
or
adc
data16
js
xchg
xchg
pop
pop
mov
js
fstl
or
or
insl
pop
jl
and
mov
xchg
out
adc
jne
jge
fildll
add
inc
jle
dec
loope
xchg
sbb
ret
pop
ja
push
enter
xchg
data16
lock
mov
roll
pop
push
daa
scas
xor
and
aas
jns
mov
dec
out
shll
cwtl
mov
mov
lea
out
and
sbb
add
lret
xor
cld
cs
aas
dec
pop
into
daa
fstps
push
cmp
lods
pop
adc
ja
stos
enter
js
lret
imul
cmpsl
sub
mov
pop
sarb
inc
jns
movsl
lds
xchg
inc
cmpsb
lea
ret
insb
cmp
add
sub
cli
cld
in
stc
rcrb
rolb
cld
dec
inc
lahf
mov
mov
mov
les
mov
rcl
sub
inc
inc
cmc
mov
mov
mov
sub
arpl
mov
and
lret
mov
mov
xchg
inc
mov
dec
dec
adc
xor
fwait
adc
mov
push
testb
les
lret
mov
jp
adc
mov
ret
cmpsb
mov
lods
sti
test
pop
or
fsubrs
test
cmpsb
popa
jle
xor
inc
pop
loop
push
fdivrl
push
stos
mov
fadds
xor
lret
and
pop
and
rclb
rcll
stos
notl
push
mov
daa
mov
jae
sbb
dec
popa
rcrb
fs
lret
int
xor
sahf
data16
rorb
cmp
lods
test
mov
push
roll
addr16
add
push
loopne
lods
loopne
popa
popa
sub
push
inc
inc
fsubl
cmovnp
xchg
mov
fdivs
int
je
cmpb
outsb
push
jle
test
adc
mov
enter
int
sti
and
mov
push
hlt
sahf
push
push
aas
adc
les
nop
pop
lahf
sbb
inc
inc
pop
xchg
int
lock
jge
notl
sbb
cmp
mov
arpl
lods
mov
push
xchg
in
aaa
popa
dec
add
cmp
fimuls
push
shl
mov
dec
sbb
mov
jge
xchg
leave
out
pop
and
dec
setne
push
popf
xor
jbe
aaa
loopne
sarb
leave
jle
xchg
cmpsl
sub
push
stos
aad
cld
push
inc
scas
leave
mov
daa
mov
inc
fisttpl
mov
aad
xor
fdivr
test
pop
mov
lods
fisubrl
pop
das
adc
cmp
sbb
stos
jmp
mov
jbe
popf
frstor
or
movbe
add
adc
xchg
inc
jmp
push
imul
cmp
sar
stos
mov
sbb
jle,pt
xchg
xor
fsubs
aas
pusha
shrb
sahf
out
lods
sub
mov
or
dec
xchg
lret
push
repz
bound
mov
mov
sarl
sti
pushf
cmp
mov
fst
add
aad
test
cld
aam
cmp
lods
sbb
mov
dec
sub
dec
das
fsub
pop
aad
fadd
data16
js
push
mov
sahf
aam
mov
sbb
clc
xor
sbb
xchg
sub
and
adc
sbb
inc
rclb
cltd
clc
mov
scas
jecxz
sahf
rcll
mov
xor
jge
scas
push
call
sub
pop
sar
sub
and
xor
mov
inc
pop
sahf
lods
pop
dec
xchg
jb
push
mov
lds
pop
xchg
insb
aad
int
fstpt
lods
outsl
pop
inc
xchg
xor
lods
push
mov
testb
jbe
jp
pop
push
js
fsubrs
orb
pushf
jle
cmc
rcrb
xchg
pop
jle
pop
pushf
fs
rcrl
dec
inc
sbb
pop
cld
insl
dec
push
pop
push
pop
outsl
lods
jo
rcr
rorl
fistl
jae
dec
je
fistpl
jl
jns
rcrl
dec
bound
cmp
pop
pop
int3
es
cwtl
fistpl
xlat
or
sti
pusha
pushf
pop
pop
add
pushf
rol
shll
cmc
push
out
cmc
out
out
mov
push
ret
add
lods
xchg
aad
sbb
pusha
fmull
push
push
in
aad
mov
inc
jecxz
mov
inc
jle
pop
xchg
pop
pop
int3
dec
lods
push
insb
adc
inc
push
mov
rcll
int
lcall
jbe
mov
jbe
mov
divb
fsubrl
iret
mov
adc
ljmp
mov
insb
mov
subl
fldl
pop
cmpb
dec
lds
test
sub
lea
pop
rcll
in
int3
int
push
push
cwtl
les
mov
aad
mov
scas
push
stos
pop
ds
repnz
pop
daa
hlt
dec
mov
xor
fcoml
pop
fsubrp
push
xchg
js
bound
push
mov
das
dec
add
lahf
pushf
fstl
test
aad
xchg
rcrl
pushf
mov
and
mov
mov
mov
ds
jmp
pushf
rorl
insl
fiaddl
jecxz
or
cmp
enter
adc
sub
dec
movsb
jmp
hlt
push
in
je
repz
test
call
sahf
neg
insl
mov
cmp
repz
test
cmpsl
xchg
cli
scas
adc
ja
xor
test
popa
mov
cmpsb
call
es
pop
out
sbb
pop
enter
aam
sub
or
pop
lock
sbb
inc
fwait
cs
sbb
pop
sub
sbb
cwtl
dec
sbb
mov
sbb
fistl
mov
test
loopne
xchg
xlat
sub
fldenv
xchg
out
popf
add
pop
mov
sbb
pop
pop
cld
xchg
into
jl
bnd
cwtl
pop
cmp
and
enter
fnsave
push
int3
mov
adc
aas
mov
std
pop
push
pushf
adc
les
outsl
cmp
cli
popa
inc
jno
cmp
push
je
call
xor
jmp
push
test
sub
fsts
add
inc
xchg
sub
cmp
xor
test
fstps
sbb
cmpsl
pop
jmp
inc
addr16
leave
xor
orb
je
insl
movsb
jbe
adc
ljmp
lret
sub
dec
movsl
mov
jae
mov
adc
cli
aad
cmp
loop
fcoml
and
clc
pop
sbb
sub
lret
cmp
sbb
cmp
mov
pop
mov
movsl
shrl
cs
or
mov
loop
mov
sbb
mov
mov
mov
rorl
cltd
fldl
pop
inc
sbb
int3
arpl
out
pop
rcr
xor
jg
movq
lcall
xchg
sbb
mov
or
out
jo,pt
push
rol
scas
cmpsb
push
dec
movsb
ret
mov
xchg
push
mov
stos
adc
push
xchg
fsubrl
fmuls
shll
mov
cmp
rcrb
sub
fcoml
xchg
ror
jp
mov
int
aad
test
ds
xchg
fcmovnu
adc
pop
rolb
pushf
pop
decl
lcall
or
xor
rcr
clc
or
mov
mov
mov
stos
jp
push
pop
nop
stos
dec
testb
dec
mov
jg
jmp
fistl
pop
hlt
mov
pop
xor
dec
jae
lds
xchg
lahf
sti
cmp
ds
ror
xor
sbb
repnz
subb
and
int3
pop
xlat
mov
mov
cmp
cs
int
jns
dec
fwait
test
pop
jne
lret
xchg
dec
sti
test
rclb
insl
cmp
fldcw
je
mov
push
mov
mov
and
pop
sub
bound
aas
cmp
jmp
mov
inc
rcr
push
pushf
push
pop
stos
dec
or
pop
mov
pop
mov
mov
mov
and
mov
fs
mov
aam
xor
loopne
jo
or
xchg
lds
ss
ss
dec
js
orl
sahf
shll
hlt
call
jbe
dec
sarl
test
shll
xchg
jle
dec
sahf
aad
push
inc
roll
xchg
dec
mov
jg
scas
push
pop
aam
or
inc
les
mov
pop
inc
mov
scas
fld
mov
mov
jns
sbb
test
sbb
rcrl
aad
inc
lea
adc
xchg
xlat
jp
sbb
dec
or
lcall
xor
repz
dec
faddl
cbtw
sarl
mov
inc
sarb
push
sarb
pushl
xor
and
cld
fwait
popa
fidivl
insl
fistl
jmp
sub
jnp
cmpb
xchg
push
dec
or
shll
not
push
jecxz
clc
rcll
mov
push
cs
cltd
in
jl
or
sbb
cmp
adc
mov
loop
test
cs
dec
ja
shll
movsl
xor
xor
fwait
sbb
or
inc
adc
pop
rol
stos
test
dec
jl
mov
ss
cmp
adc
lds
mov
push
int3
xchg
les
jnp
xor
mov
mov
xchg
roll
xor
xor
sbbl
sub
xor
xchg
xchg
pop
mov
fistps
inc
mov
repz
shrl
push
mov
lahf
mov
dec
mov
push
ds
aad
aam
xor
mov
in
xchg
push
lods
cmp
fildl
mov
xor
xchg
lods
mov
dec
sbbb
sub
jbe
pop
orb
inc
xor
pop
pop
sarb
mov
icebp
adc
sahf
out
lods
imul
xchg
loopne
setnp
push
and
pop
das
pop
push
mov
pop
repz
mov
mov
iret
scas
daa
inc
aam
iret
adc
cmp
sub
cs
add
cltd
pop
fwait
push
jmp
test
stos
das
ret
cmp
cmpsl
pop
insb
cmp
jae
pop
xchg
aaa
ds
cmp
lods
dec
stos
fldenv
ret
jge
hlt
push
xor
jne
lds
jmp
das
dec
cmpsl
pop
cmp
adc
and
clc
in
and
push
lds
sbbl
mov
rcll
mov
xor
mov
dec
mov
fwait
mov
lods
push
fldcw
rcll
cmp
and
das
out
cmp
mov
aad
pushf
ficompl
out
scas
jbe
mov
sbb
push
sahf
cmpb
adc
mov
push
pop
jecxz
js
icebp
loopne
outsb
sub
or
rorw
test
test
js
les
mov
fmull
insb
testl
faddl
cltd
in
jecxz
xor
cmp
pop
in
push
push
popf
pop
adc
mov
out
lcall
aaa
cld
lds
pop
loope
mov
push
mov
jbe
sarl
movd
je
cmp
sbb
xor
mov
mov
movsl
aas
dec
sti
and
xor
pop
mov
popa
jge
ljmp
mov
ss
and
sub
jge
popa
rcl
adc
mov
pop
sbb
stc
lea
jp
lods
jbe
rcl
xchg
push
jge
out
sti
adc
push
jle
pop
ljmp
in
pop
adc
das
jmp
and
sub
push
sbb
into
fldcw
enter
data16
pop
adc
pop
mov
adc
fstpt
out
pop
addr16
pushf
mov
sahf
cld
in
cmp
mov
cld
aad
or
push
lcall
ret
ss
dec
ficompl
xlat
aad
push
fmul
fnstenv
cmc
and
mov
rcr
dec
add
ret
xlat
mov
sbbl
mov
cld
shr
stc
cmp
push
and
push
shr
pop
ret
iret
mov
xor
stos
shr
mov
mov
mov
push
je
or
push
sub
pop
push
lds
push
lahf
inc
or
push
push
dec
pop
push
cmp
lods
xchg
dec
mov
out
xor
jl
mov
into
ss
rcrl
test
xchg
add
inc
mov
jg
mov
fsts
mov
adc
push
push
lcall
dec
mov
je
cmp
mov
cwtl
pop
aad
test
cltd
mov
pop
popf
sub
mov
in
xlat
xchg
jp,pt
aam
divb
push
mov
sahf
icebp
rcl
cmp
out
push
pop
mov
pop
pop
pop
sbb
pop
popf
xor
push
fcompl
mov
repz
or
aad
mov
lods
pop
std
rcr
mov
xor
lods
and
lods
adc
pop
pop
pop
lds
lods
aam
xor
stos
insb
out
xchg
shll
mov
jbe
xor
repnz
test
inc
xor
sbb
decl
pop
pop
jbe
lods
fdiv
sbb
loop
rcl
fstpt
add
adc
sub
lahf
push
stc
jecxz
pop
push
or
sbb
xchg
or
rorl
jmp
add
pop
dec
inc
push
ffreep
aam
loopne
push
cmp
mov
movsb
cltd
or
mov
jb
movntq
sbb
xor
aam
cmp
mov
fdivl
inc
orb
rcl
paddq
push
push
adc
mov
push
fsubl
fcmovu
fs
xchg
cld
inc
movb
pop
mov
sbb
mov
adc
sahf
xchg
cmp
out
sub
shrb
in
xchg
xchg
sub
adc
lcall
les
sahf
mov
or
xchg
mov
lcall
data16
or
xchg
dec
pop
lock
jb
mov
pop
insl
sar
xor
lcall
andb
fists
mov
ds
mov
jnp
push
les
adc
mov
or
mov
jg
adc
sbb
mov
and
out
dec
and
xor
int
inc
push
test
xchg
lcall
loope
mov
xchg
into
sub
scas
pop
jle
push
pop
clc
rol
mov
mov
cmp
imul
out
push
out
inc
clc
jp
rcr
imul
lea
notl
lcall
aad
aad
mov
ret
jae
mov
jmp
js
dec
jg
adc
xchg
popf
pop
pop
pop
lods
flds
shrl
sahf
inc
clc
sub
ds
mov
jge
outsb
es
cltd
addr16
sbbb
outsl
add
mov
pop
sahf
mov
mov
dec
mov
pusha
inc
mov
hlt
repz
xchg
rcl
lret
rorb
push
dec
stc
fldt
sbb
pop
dec
dec
push
dec
stos
fstl
repnz
jne
repz
in
inc
popf
in
mov
roll
call
sbb
mov
xchg
xchg
sub
sub
jo
addb
lock
mov
out
adc
mov
orb
fwait
xor
ljmp
pop
enter
jmp
aas
pusha
cmpsb
pop
cld
dec
jns
xchg
les
fldcw
popf
repnz
loop
jecxz
sbb
jl
sbb
jbe
push
lds
test
push
in
push
aad
fstpl
mull
mov
cld
jle
mov
pop
outsl
stos
mov
push
rcr
push
jae
cld
mov
or
je
jo
xsaveopt
sbb
clc
fcmovbe
mov
negb
call
pop
imul
aas
jle
mov
and
push
mov
jmp
in
movsb
data16
adc
test
leave
mov
repz
lods
xor
mov
rcll
ficoms
xchg
push
pop
push
mov
mov
repnz
leave
cmp
sub
call
jge
std
jge
xchg
mov
mov
aam
cmpsb
and
cli
lea
aad
inc
push
jmp
mov
mov
xchg
cmp
or
push
mov
mov
adc
int
sub
out
inc
fsubs
dec
das
movsl
dec
xchg
ss
outsl
ds
pusha
cmp
aaa
fdivrl
dec
xchg
cmpb
flds
add
sub
push
mov
push
jmp
cmp
pushw
sub
jle
cmpsb
aaa
jo
dec
cmp
xchg
add
into
out
sub
cmp
das
sub
shrl
adc
push
inc
mov
ret
jbe
and
dec
pop
shll
jns
pop
jne
sub
jo
fbstp
rclb
xchg
jo
rcll
jno
ds
sti
out
rcrl
mov
sahf
fists
push
lahf
mov
enter
jl
xchg
mov
jle
fbld
lea
ljmp
fstl
call
sbb
in
rclb
scas
js
mov
sub
adcb
je
loopne
outsb
push
add
push
mov
clc
cmpb
clc
pop
sub
sbb
out
stc
inc
mov
pop
dec
mov
aad
sbb
cld
sbb
sbb
mov
push
pop
and
push
jo
add
pop
push
hlt
rolb
aas
lods
push
shrl
in
inc
es
in
mov
sbb
js
movsl
lcall
push
xchg
fldl
mov
stc
call
lods
stc
sbb
leave
jbe
mov
mov
push
lods
mov
or
lods
setne
ret
repz
scas
aad
arpl
fildl
inc
dec
pop
inc
loop
or
iret
mov
pushf
shlb
mov
pop
ficompl
dec
cwtl
out
scas
or
and
ret
out
inc
inc
pop
sti
repz
dec
leave
fdivrl
hlt
cmc
dec
test
aam
inc
js
test
lds
xchg
push
jl
popf
or
sbb
ljmp
jnp
fistpl
cmp
jmp
dec
mov
cld
call
mov
popa
mov
mov
loop,pt
dec
dec
daa
enter
dec
ljmp
cmp
rcr
loop
add
into
pop
lds
pop
adcb
rclb
and
sahf
jmp
push
fcoml
mov
sar
out
dec
jmp
sub
mov
and
and
inc
xchg
test
cwtl
sbb
outsl
lds
pop
fs
jecxz
add
cmp
repz
mov
lahf
push
jns
leave
lea
popa
mov
pop
cs
sbb
cli
add
add
mov
lock
push
lock
xchg
jns
mov
adc
xlat
outsb
sbb
fsubrs
lahf
xchg
in
insl
ljmp
adc
in
stos
cmp
test
fdivrs
jp
mov
sti
cmc
mov
push
mov
flds
xlat
mov
dec
imul
clc
pusha
xchg
dec
jnp
or
mov
mov
movsl
adc
cli
jecxz
enter
xsha1
cmpsb
leave
sar
pop
out
int3
jo
test
push
loopne
mov
cmp
rol
xchg
cwtl
jle
xchg
push
lds
out
popf
adc
popa
and
les
push
push
sub
adc
mov
and
jb
pop
push
xchg
or
pop
jns
cmp
mov
enter
fs
dec
lcall
out
shlb
sarl
outsb
pop
aad
cmp
and
js
push
mov
lock
adc
lods
cmp
dec
xchg
int
sbb
and
push
fbld
sahf
sub
roll
fldcw
dec
push
xchg
dec
addr16
hlt
addr16
jns
fisubrl
push
sbb
push
jmp
cmpsb
mov
lods
or
push
pop
shll
and
add
hlt
test
or
xor
push
sub
sbb
cs
xchg
out
jmp
adc
and
cltd
or
pop
aad
mov
repz
sbb
dec
pop
popa
sbb
and
sbbb
leave
fstl
loope
push
lret
decb
jmp
test
jle
xchg
xchg
xor
popa
pop
or
lcall
fadd
stos
and
mov
jl
sub
cmc
cmp
imulb
cmp
rcr
cs
jl
sti
lcall
inc
fidivrs
movsl
mov
sbb
aad
es
sbb
sub
mov
dec
xlat
mov
cmpl
icebp
push
jb
popf
mov
pop
dec
int3
repz
lahf
repnz
pop
dec
xchg
dec
sub
jle
xor
mov
js
jne
pop
inc
lods
sub
cld
jp
es
mov
stos
pusha
lahf
push
sbb
pop
push
stos
cwtl
push
out
mov
sbb
fstpl
shll
out
xchg
loope
pop
add
dec
mov
mov
push
jae
scas
fnstcw
push
cwtl
xor
lret
jae
or
rolb
xchg
mov
and
clc
adc
adc
fdivs
mov
roll
aam
mov
mov
mov
scas
stc
xchg
pop
outsl
sub
scas
jmp
add
mov
pop
cmpsl
aam
lcall
sbb
pop
or
fldenv
out
sbb
jne
ss
popa
test
push
adc
mov
or
inc
inc
sbb
dec
and
out
stc
icebp
pop
insb
shrl
int
lock
pop
xlat
pop
dec
pop
fsubrs
fldt
jnp
xor
mov
fcompp
cmp
shrl
adc
lds
or
pop
sbbb
jmp
and
pop
test
leave
mov
sbb
xor
xor
les
mov
int
lods
jle
xor
fiaddl
and
mov
jne
xchg
jo
cmp
dec
sub
or
cmp
push
xlat
jecxz
repnz
dec
mov
and
sub
rcrb
xchg
xchg
addr16
rclb
adc
cmp
jo
adc
ja
jns
push
hlt
sub
pop
daa
mov
xor
xchg
loopne
pop
les
ds
repz
stc
inc
adc
inc
sub
add
pop
nop
cs
pop
divl
out
or
xchg
pop
sub
stc
push
mov
lods
dec
xchg
and
xchg
loop
push
cli
fsubrl
jg
sub
popa
add
fcompl
pop
cmc
xchg
ja
inc
shr
mov
mov
fs
test
adc
cld
cmc
mov
loope
sahf
dec
mov
out
pop
xor
add
into
adc
xchg
fisttpl
xchg
popa
call
insl
pusha
mov
sbb
fimull
repnz
daa
repnz
lds
and
fstl
xor
inc
push
mov
mov
mov
fcmovu
mov
addb
cmp
sbb
xchg
orl
ja
das
ljmp
jno
xor
add
pushf
fnsave
fsubr
jae
subl
out
sahf
jae
test
cmp
jbe
push
xchg
jns
movl
cltd
mov
dec
add
cmp
les
pop
jns
movsb
lods
pop
movsb
stc
push
cmp
cmp
mov
dec
push
dec
xor
enter
inc
cmpsb
jns
xchg
insl
out
push
push
mov
aam
mov
xchg
push
sahf
sub
mov
jnp
mov
shll
jl
scas
xor
inc
ficoms
jae
add
add
fistpl
std
mov
adc
ret
pop
mov
lret
dec
out
cld
enter
ljmp
rcrb
aas
fidivrl
lret
or
enter
add
cmp
pop
cld
loope
adc
jl
pop
movsb
lds
xor
sub
jl
pushf
sub
lret
outsb
sbb
fistpll
xchg
cmp
inc
add
sub
dec
lods
fisttpl
jbe
lret
das
repnz
popf
repz
push
jp
sahf
lods
cmp
ret
repz
fdivl
adc
dec
addr16
rcl
in
iret
sub
push
inc
les
shlb
out
out
aam
movsl
push
push
and
mov
mov
dec
push
jg
or
pop
push
cmp
test
sbbl
mov
mov
pop
mov
push
fsubrs
fistpl
mov
or
add
sub
ffree
jne
addr16
mov
insl
fdivrs
bound
mov
push
fstl
shl
pushf
ss
ret
or
cmp
jne
enter
in
jge
inc
shlb
jg
js
lods
stc
cmp
push
sbb
push
inc
pop
enter
mov
cmpsl
pushf
test
push
push
ret
mov
or
and
fsubr
add
aas
in
mov
cmp
push
bound
fstp
dec
lods
dec
push
shll
aas
mov
pop
jge
out
dec
pop
jbe
int
stos
jno
pop
adc
enter
or
pop
insl
lcall
sbb
ss
rcll
inc
push
out
inc
je
or
xchg
add
pop
cwtl
shlb
push
fldt
adc
sub
jge
iret
call
cltd
fsubrl
sahf
sar
loope
test
mov
sarl
rol
mov
mov
cmp
std
add
fs
in
out
cmp
je
clc
jne
movsb
or
fildll
iret
adc
sbb
mov
and
pop
sub
fsubrl
xchg
int3
fwait
shlb
inc
dec
lret
andb
lds
fisttpll
inc
int
roll
js
daa
lods
jg
mov
jmp
outsl
or
jns,pt
dec
mov
dec
popf
xchg
aam
xor
lcall
frstor
leave
jo
or
inc
lret
fstpl
psubw
mov
aaa
bound
xchg
fcmovnu
mov
dec
inc
movsl
mov
xchg
nop
test
mov
fnstsw
adc
fdivl
sub
pop
gs
adc
mov
dec
inc
fld1
cmpsl
mov
stos
ljmp
pop
shrl
adc
sbb
loop
inc
mov
jl
dec
pop
shll
mov
sub
lcall
and
add
lods
pushf
dec
lds
insl
inc
mov
cmp
push
mov
sub
pop
inc
in
pop
sub
daa
push
in
mov
jns
xchg
add
movsb
enter
std
sub
fistl
lds
lret
sub
dec
jnp
mov
push
inc
in
and
bound
test
dec
sub
pop
je
sbb
sub
push
ds
enter
sub
xor
cld
call
lods
cs
mov
dec
notb
cmpsl
adc
testb
enter
push
jmp
mov
sub
adc
xorl
push
inc
mov
dec
icebp
xchg
pop
es
pusha
xchg
and
out
subl
add
shr
or
and
jne
mov
stos
les
xchg
fidivs
cld
dec
sahf
test
scas
jecxz
fadd
cmp
dec
pusha
aas
mov
dec
push
sbb
mov
loop
daa
pop
sub
aad
jmp
mov
xchg
inc
mov
sbb
loop,pn
dec
xor
je
icebp
cmpsl
push
adc
rcll
mov
add
push
inc
push
pop
fwait
xchg
mov
xchg
inc
pop
or
ja
xor
outsb
adc
shrl
mov
mov
ljmp
xchg
int3
cmp
mov
pop
or
clc
mov
scas
fsubl
cs
sti
test
loop
mov
sbb
aaa
mov
stos
add
and
stos
nop
daa
push
mov
sub
inc
dec
inc
dec
add
pop
mov
rolb
mov
and
popa
test
dec
cmpb
scas
push
fstps
mov
lcall
xchg
loop
int3
aam
xor
add
cmp
cmpb
ja
mov
push
lods
sbb
enter
rorl
andl
stos
sbb
xorb
dec
sub
idivb
sbb
jb
movsb
xchg
ljmp
ljmp
mov
std
dec
xchg
rolb
sub
aaa
sbb
ret
mov
and
ret
inc
pop
sbb
and
sub
test
std
dec
xchg
loop
jbe
mov
popa
jae
mov
std
inc
test
lds
dec
mov
stc
in
movsb
cld
pop
popf
xchg
xor
sub
mov
addr16
insl
data16
mov
in
lods
rcr
fsubl
dec
dec
xorb
test
pushf
pop
les
xlat
jne
or
leave
lds
mov
fdivrs
inc
mov
psrlq
shlb
push
fnstenv
jg
nop
in
sbb
inc
fidivl
lcall
leave
roll
pop
sahf
fnstcw
popf
xor
in
enter
shrl
inc
xchg
test
fdivl
fsubs
in
pop
out
mov
cmp
dec
loop
out
arpl
sbb
call
mov
leave
jne
mov
rcrl
test
fpatan
je
insl
cld
pop
inc
dec
mov
xlat
repnz
xlat
scas
inc
movsl
sbb
sahf
xchg
cmp
push
push
fisubrl
js
push
push
mov
sar
mov
insl
push
or
inc
jp
adc
push
xor
mov
pushf
add
xchg
mov
std
fsubr
push
push
aad
pop
fwait
stos
movb
inc
cld
xchg
mov
cmp
xchg
mov
filds
dec
pop
addr16
pop
loopne
push
int3
xor
mov
xchg
mov
mov
mov
jle
rcrb
dec
sbb
jne
cmpsl
mov
inc
mov
lahf
cmpsl
fnstcw
aaa
sub
inc
lcall
lock
stos
mov
xor
outsb
bound
mov
pop
or
fcmovbe
adc
je
subb
sub
inc
adcl
sub
inc
inc
jnp
fnstsw
cltd
adc
roll
in
jbe
rorl
cmp
repnz
fwait
rcrl
dec
inc
arpl
mov
gs
inc
cltd
outsl
andl
pop
daa
mov
mov
cmc
adc
test
fnstsw
dec
shll
inc
pop
and
jno
adc
out
pop
or
xchg
fs
fnop
in
xor
xchg
push
pop
xor
lods
xlat
outsl
aas
aam
adc
pushf
xor
mov
jns
ljmp
fistpl
dec
js
rcll
sahf
jge
mov
mov
fstpt
leave
movsl
std
cs
std
mov
mov
cli
aam
xor
dec
push
mov
cmpsb
jbe
xchg
mov
aas
sbb
push
das
les
xchg
pop
repz
dec
mov
xlat
sub
je
pop
sub
jne
inc
int
int3
push
stc
push
push
in
mov
sbb
shrl
cli
hlt
lahf
cmp
mov
mov
insl
arpl
pop
dec
mov
loope
repz
sbb
xchg
stos
pop
dec
push
addl
xchg
call
mov
hlt
pusha
mov
cwtl
cmp
jnp
loop
fnstenv
xor
dec
aam
loope,pn
xchg
pushf
stc
addr16
sub
insb
mov
xlat
test
aaa
sub
push
pusha
fwait
popf
pop
addr16
fsts
mov
rcrl
fsts
sbb
adc
adc
push
mov
jb
push
add
shl
ja
out
rolb
in
scas
ja
push
adc
push
mov
sbb
sbbb
stc
xor
fstpl
sub
icebp
xchg
jl
cs
popa
divl
push
sbb
iret
es
jle
pusha
movsb
xchg
subb
idiv
pop
cld
cs
rclb
adc
repz
mov
or
xchg
gs
cs
dec
pop
lcall
es
adc
inc
pop
mov
fcmovnb
mov
popa
mov
xor
repnz
adc
lods
mov
xchg
mov
mov
inc
lahf
push
sahf
repz
imul
ret
add
rcrb
std
add
cmp
mov
shll
inc
pop
shll
les
lods
pop
jb
pop
or
jns
push
cmp
int
arpl
aam
inc
leave
clc
shrl
mov
pushf
iret
insl
fimull
xor
lret
fcmovu
rcr
xchg
sub
loop
xchg
dec
and
sbb
ja
jge
mov
repz
adc
rol
sti
jmp
data16
popa
pop
fcoml
xlat
cmp
pusha
fisttpll
pop
jb
stc
pop
stos
dec
shlb
jg
and
movsb
fstl
jl
mov
sub
rcr
shll
mov
adc
rcl
callw
je
inc
pop
xor
mov
decl
add
leave
mov
insb
insb
mov
sbb
je
aad
loopne
xchg
ljmp
popa
int3
out
mov
retw
ja
sarb
aam
pop
mov
adc
adc
pushf
movsb
jle
test
cmp
cmp
push
mov
pushf
ja
fildll
cmp
and
dec
jnp
mov
mov
dec
inc
ret
mov
push
and
xchg
hlt
ljmp
pop
mov
fidivrs
lods
int3
cmc
push
lds
xor
xchg
into
cmp
push
ror
imul
add
testb
or
das
faddl
out
repz
add
iret
stos
loopne
jp
jae
mov
pop
pop
sbb
dec
xchg
shl
out
test
sbb
mov
das
icebp
jl
in
rcl
cld
call
jle
push
add
ucomiss
push
in
add
les
or
and
mov
jno
xchg
xchg
push
je
fidivl
aad
icebp
pop
scas
stc
mov
jecxz
fisubrs
fwait
in
int3
sbb
xchg
xchg
out
int3
stos
outsb
push
push
mov
lea
sbb
push
aam
test
nop
in
push
or
lea
xor
mov
pop
push
sbb
shrb
frstor
inc
add
mov
push
pop
push
fcoms
or
fnstsw
rcr
outsb
pop
jmp
pop
test
jge
and
mov
cmp
sahf
data16
and
pop
mov
dec
or
rcrl
pop
pushf
mov
jnp
jmp
dec
ja
ret
cmp
repnz
loopne
mov
mov
fisubl
lahf
lods
mov
adc
adc
pop
xor
mov
add
inc
stos
loopne
ret
push
jmp
cmp
pop
jle
ljmp
rcr
add
fstl
lahf
dec
cmc
sbb
pop
mov
dec
out
insb
adc
lret
mov
pandn
pop
rep
push
sahf
xor
dec
out
test
sahf
pop
rorl
pop
or
popa
inc
out
xchg
xchg
push
mov
stc
xor
leave
xor
shrl
add
pop
push
inc
fdivp
lods
jae
mov
ss
insl
dec
aam
cmpsb
imul
setle
pop
push
in
mov
int
mov
pop
xchg
test
dec
lahf
movsl
mov
cmc
sahf
push
pusha
ss
imul
inc
insb
add
in
push
std
test
jmp
lods
orps
pop
mov
mov
push
fwait
lcall
mov
imul
add
ss
int
movsb
adc
xchg
and
adc
xor
inc
out
insb
cs
repz
cld
shrb
orl
ret
cmp
popa
repnz
sub
jns
orl
popf
mov
pop
stc
outsb
xor
ss
xorb
push
dec
jo
bound
fdivs
sbb
mov
or
shl
cmp
daa
mov
fdivrl
out
andb
pop
jns
out
dec
cmc
xchg
push
jl
xchg
negb
mov
jno
sbbb
jmp
movsb
ret
subb
sbb
jge
es
outsb
adc
out
pop
test
cmp
and
inc
popa
mov
out
gs
out
mov
inc
sub
cmp
rol
ret
je
sbb
mov
lret
cmp
mov
or
mov
mov
or
leave
das
and
movsb
and
pop
les
addr16
leave
sub
push
mov
mov
rcr
sub
inc
jae
jle
mov
mov
add
shlb
cmc
outsb
data16
cmp
inc
repz
test
pop
jl
or
mov
cmp
push
inc
jge
ja
and
jl
ds
repz
xor
in
call
ds
cmpsl
pusha
pushf
pop
popa
or
fwait
xchg
xchg
mov
sbb
sbb
movntps
lods
mov
xor
jge
or
dec
mov
push
adc
fiaddl
jl
in
push
dec
je
pop
sarl
sbb
jge
and
sub
xchg
xchg
inc
lcall
cltd
xor
lds
shlb
mov
pop
mov
pop
pop
fcoml
inc
inc
add
decb
or
stos
sarl
xlat
cmp
cmp
int3
xchg
pop
rcrl
and
rorb
sub
mov
pusha
arpl
mov
clc
dec
add
adc
push
mov
out
sahf
test
xchg
bts
push
lahf
into
cmp
pop
inc
mov
push
stos
mov
xchg
loop
shlb
outsl
pop
aam
mov
cld
dec
adc
fdivs
jl
psrld
inc
sbb
pop
jne
pop
pop
scas
std
mov
or
xlat
lcall
insb
call
cmp
mov
ljmp
mov
mov
outsb
jae
fdivrl
xchg
mov
stos
ficoml
pop
jno
xchg
inc
inc
dec
popa
lret
mov
mov
xor
dec
subb
adc
jnp
pop
out
rcrb
mov
xchg
repz
enter
fidivl
fdivrs
into
and
push
stos
mov
adc
mov
push
push
sbb
rcr
cmpsl
dec
dec
or
popa
sbb
insb
xchg
mov
ss
cmp
and
dec
je
fsts
jbe
pop
lret
dec
sahf
xchg
push
sar
mov
jl
sub
iret
jmp
loope
mov
push
lea
push
mov
into
pop
xchg
cmp
mov
xor
sbb
ss
cmp
push
push
pop
mov
stos
jmp
inc
xchg
insl
push
lods
add
shrl
aad
outsb
or
dec
pop
mov
jg
push
or
mov
scas
ret
adc
dec
jp
mov
sub
pop
fdivrs
popf
xchg
fldt
mov
cmp
or
xorb
sar
mov
jecxz
cmpsl
xchg
inc
and
push
pushf
and
xlat
sarl
sub
and
mov
aaa
sbb
sti
xchg
adc
pop
movsl
shll
jo
mov
shr
push
pop
sbb
sub
pop
mov
cli
cld
pushf
cmc
mov
xchg
push
mov
mov
dec
lret
cmp
mov
push
ret
rorl
adc
cs
push
push
lods
adc
test
xor
pop
add
fiadds
adc
pop
jne,pn
push
push
jp
je
inc
add
mov
fisttpll
loope
sahf
mov
pop
jge
dec
insb
sbb
lret
scas
mov
and
paddsb
mov
xor
jge
mov
adc
sti
inc
popf
sub
xchg
push
and
mov
adc
add
mov
sub
xor
xchg
pusha
or
std
popf
cmc
std
jl
adc
fsts
fsub
std
pushf
pop
and
sahf
dec
les
lcall
jne
fnclex
into
add
push
cmpsb
sbb
movsb
jmp
pop
mov
notl
xchg
inc
repnz
out
inc
fcompl
fistl
jle
add
fstps
fdivrl
sbb
in
push
pop
loope
or
stos
dec
pop
xchg
sbb
fs
push
mov
mov
lds
pop
aam
lock
mov
pop
movsl
jle
pop
sbb
jp
mov
mov
xchg
pop
cmp
adc
pushf
jnp
out
dec
jb
pop
pop
or
cmc
popf
add
jno
repz
dec
inc
pop
xor
or
cmp
lcall
xor
pop
push
xchg
pusha
adc
sub
aas
out
adcb
push
fidivl
shll
mov
shrb
test
lahf
sub
shr
outsl
fnstcw
pop
xchg
outsl
test
mov
lahf
push
fldenv
or
inc
out
je
fucomip
ficomps
arpl
aaa
lods
aaa
adc
fnstsw
imul
mov
mov
cmpsl
mov
adc
mov
roll
sub
js
cwtl
mov
push
pop
mov
dec
mov
fcmovne
cmpsl
pop
aad
dec
stos
repnz
rolb
and
and
lcall
fisttpll
es
inc
lret
mov
rcl
fdivl
rol
lods
cld
add
shl
mov
push
xchg
mov
push
jp
dec
cmp
sar
cmpsb
lret
xchg
fmuls
mov
sahf
xchg
adc
xchg
shlb
cmp
xchg
pop
popf
out
mov
das
mov
fisttpll
cld
insl
sbb
mov
xchg
pop
outsl
pop
sbb
lcall
mov
fs
xlat
add
jbe
insl
in
test
mov
clc
mov
int3
pop
stos
mov
out
pop
or
sub
int3
andb
aam
cmp
fbstp
enter
and
xchg
fldenv
inc
out
pop
mov
lds
dec
stos
sbb
scas
xchg
xchg
test
pop
ds
jne
les
int
or
mov
jl
ss
sbb
lret
aad
pop
ss
pop
mov
mov
mov
cmp
pushf
out
pop
inc
scas
jmp
cwtl
clc
adc
jg
and
xlat
rcr
stc
outsl
sbb
popa
in
lahf
xchg
add
pop
xor
aad
or
xchg
cwtl
fsubrl
sbb
jbe
sbb
mov
push
push
jb
sbb
push
adc
out
pop
fidivrs
push
fsubr
movsb
push
shl
sbb
mov
sbb
movsb
push
mov
push
gs
shlb
in
sbb
push
adc
pop
rep
into
mov
add
movsl
mov
mov
ja
shll
mov
mov
pop
sahf
test
xchg
mov
mov
jbe
inc
xor
dec
enter
pop
call
in
pop
sti
loop
mov
xchg
in
xor
sub
daa
pop
enter
iret
fs
sarl
fsubs
scas
push
jp
sbb
and
data16
cmp
push
faddl
fnstsw
dec
lock
stos
rcrl
rorl
idiv
mov
fnsave
adc
test
and
xor
repnz
xchg
ja
dec
cmpsl
mov
push
pop
sub
popf
frstor
dec
mov
push
test
rcrl
jb
aaa
inc
orl
sub
fsub
arpl
mov
loope
mov
mov
scas
shrl
fdivrl
jo
pop
mov
jo
xchg
push
stos
or
lcall
test
std
call
mov
xchg
nop
es
sbb
or
mov
xor
push
dec
mov
dec
sub
ds
jo
sbb
out
pop
mov
enter
orb
lds
je
inc
aad
mov
rorb
mov
jge
stos
push
test
push
ss
inc
test
mov
push
test
mov
xchg
sbb
sbb
mov
jmp
dec
push
cmp
adc
fstpt
cmc
decb
in
mov
lret
stos
cmpsl
pop
pop
shlb
cmp
imul
push
jmp
ret
mov
mov
fstl
or
xchg
clc
adc
pushf
xor
out
out
pop
movsl
inc
pop
push
add
repz
inc
cld
in
fwait
leave
sub
stos
push
loope
mov
iret
xorb
push
mov
mov
add
jmp
je
outsl
add
psubw
xchg
ja
add
lock
inc
vcvtpd2ps
add
xor
add
sarl
sbb
cmp
pop
js
movsb
mov
enter
jp
aaa
lcall
push
adc
lds
dec
sub
xchg
push
and
pop
rcrl
loope
xchg
enter
push
into
xchg
outsl
push
mov
rolb
loopne
fidivrs
mov
adc
and
ja
pop
ret
push
int3
adc
inc
int3
iret
adc
fldenv
adc
mov
mov
fistl
aaa
in
fst
adc
rorl
cmp
scas
test
or
xchg
sbb
bound
data16
jmp
rclb
orb
in
pop
int3
scas
xchg
rcrl
movsl
mov
movsl
pushf
popa
cmp
mov
ljmp
fcomps
mov
jp
lds
cmp
dec
aaa
add
shr
pop
pop
mov
xchg
pop
mov
pop
jo
pushf
pop
lods
lods
and
mov
cmpsb
inc
inc
int3
pop
pop
and
std
fldt
aad
leave
push
push
cmp
pop
call
fnop
les
and
or
rcr
rorl
mov
push
pop
or
xchg
aad
test
pop
xchg
or
clc
popa
mov
dec
or
imul
js
test
jg
mov
push
xlat
pop
push
jl
or
jecxz
mov
and
sarb
push
pushf
inc
insl
inc
cmp
mov
in
pop
add
lea
push
mov
jle
push
mov
pop
jl,pn
out
fisubrl
sarl
out
stos
jp
mov
xor
cld
or
mov
xchg
out
ljmp
push
sub
cli
or
pop
and
arpl
pop
or
mov
xchg
push
mov
and
data16
mov
enter
xchg
aas
pop
sub
or
outsl
dec
dec
loope
gs
sti
xor
mov
je
lods
push
clc
fadds
fdivr
dec
xor
sbb
into
call
add
lea
stc
jl
xor
sub
mov
repz
out
adc
xor
or
xchg
lcall
dec
jge
dec
push
fisubrs
jl
pushf
dec
jo
mov
mov
mov
cmpsl
mov
pop
pusha
pop
sub
lock
sub
insb
repnz
add
mov
jl
testl
pop
mov
mov
repnz
inc
insb
inc
cmpsl
xor
push
aad
gs
xor
out
xchg
or
pop
jnp
sub
adc
in
data16
add
sub
jae
dec
lret
lods
jbe
xor
aaa
inc
gs
leave
mov
mov
stos
in
sbb
stos
aad
repz
mov
mov
pop
out
ds
fisttpl
xchg
inc
and
hlt
pusha
and
pminub
stos
jmp
inc
push
lcall
fcomip
bswap
adc
sub
aas
and
mov
adc
dec
hlt
aas
mov
aad
mov
sbb
outsb
in
cmp
mov
push
push
xlat
add
lods
sbb
add
repz
ds
rcll
mov
ficompl
xchg
std
cwtl
adc
lods
rcl
dec
mov
js
pop
push
sub
mov
aam
fdiv
into
cmc
pop
gs
js
lcall
fsubrl
sbb
aad
lcall
int
dec
dec
ret
sti
ja
jae
cli
clc
fs
xchg
in
inc
jmp
orw
push
pop
nop
cli
inc
xchg
adc
and
sbb
scas
jle
sub
insb
leave
add
ss
sub
jb
inc
push
inc
sub
push
xor
std
out
inc
push
jae
push
les
adc
push
sub
mov
fidivs
push
sbb
sbb
fildl
and
ret
cld
ljmp
jge
out
mov
dec
jle
insl
xor
mov
mov
push
hlt
push
cltd
push
inc
cmp
jns
rcl
and
sub
mov
outsl
xor
lahf
mov
sbb
mov
mov
ja
jo
lea
xor
add
lcall
std
cmc
aaa
fcoml
insl
shrl
or
aad
push
xor
add
shll
xchg
dec
adc
js
xor
lret
mov
push
int
ret
cs
and
fld1
inc
pop
in
scas
mov
outsb
cmpsb
sahf
adc
fs
add
int3
ss
xchg
push
rcrb
xchg
je
stos
push
xchg
xchg
push
je
dec
mov
int
xchg
xchg
int
mov
shl
addr16
sbb
adc
xchg
xor
fst
int
mov
cmp
loopne
clc
mov
dec
clc
hlt
in
sub
ds
adc
push
mov
les
jle
jg
push
cwtl
adc
inc
cmc
dec
xor
divl
int3
or
xor
cmp
int3
mov
imul
jne
stc
cmc
adc
stos
das
cld
jp
mov
xor
cli
mov
cmc
clc
fcoml
lret
lods
jmp
jae
movq
fnstenv
repz
mov
int
rcrl
cmp
and
lea
outsb
jge
sbb
sub
mov
cmp
push
xchg
lds
dec
sbb
sbb
lods
xlat
stos
sar
pop
lds
dec
stos
mov
mov
jle
addr16
popa
pop
jns
icebp
push
jl
sahf
adc
mov
push
adc
or
push
pop
cmp
jecxz
jnp
ficoms
insb
pop
dec
or
lcall
jp
pop
jp
fsubp
jle
je
outsb
adc
stos
test
dec
ljmp
popf
movsb
push
cld
and
push
aam
cmp
mov
xorb
ret
aas
push
stc
xor
push
push
cli
fnstcw
dec
jns
pushf
sbb
mov
pushf
lods
push
jmp
lret
pop
adc
jae
js
adc
cmp
popa
mov
fisttpll
fldenv
ja
int
mov
fwait
xchg
add
stc
xor
sbbb
fiaddl
arpl
sahf
pop
pop
lods
push
adc
and
arpl
test
push
pop
fiaddl
push
mov
subl
push
mov
mov
aam
dec
cmp
adc
lcall
neg
xor
pop
repz
lret
xor
xor
jmp
stc
cmp
pop
icebp
loope
test
fistpl
inc
rcr
dec
stos
mov
mov
push
mov
fcoml
adc
push
sub
sbb
pop
and
mov
mov
add
dec
sti
sbb
lcall
cmp
jbe
mov
divb
push
mov
cld
lea
jle
sbbl
jbe
hlt
iret
sbb
jne
pop
xor
jmp
mov
mov
sti
rcrb
jno
xor
and
pusha
iret
aam
pushf
sar
cld
xor
popa
enter
jg
mov
lods
jmp
push
sbb
sub
pop
xchg
mov
pop
lods
movsl
js
ds
adc
sahf
je
sbb
pop
push
std
push
cmpsl
popf
pop
pop
imul
aam
cmc
lods
or
jne
lods
fnsave
push
test
pop
fnsave
mov
push
pop
nop
mov
mov
mov
sbb
cmp
mov
cmp
cmpsb
dec
scas
int3
aas
jne
mov
lcall
into
fidivl
lahf
mov
test
inc
pop
push
xchg
push
je
fistpl
jl
icebp
xor
add
fisttpl
and
mov
pop
fstpl
fnstsw
pop
lcall
stos
mov
mov
js
mov
adc
mov
and
cld
ds
cmp
mov
jge
cmp
push
ss
fisubrs
je
test
cwtl
inc
fnstenv
mov
call
cmpsl
cmpsl
rcrl
push
inc
out
mov
rol
push
mov
add
sub
add
add
mov
rcr
sbbb
fstpt
dec
sbb
sbb
insl
jl
ficoml
pop
cwtl
fldenv
dec
ds
sub
xor
jno
adc
xor
lods
outsb
sub
arpl
movsl
cmpb
stos
push
sahf
popf
xor
stc
idivl
dec
scas
mov
pop
out
adc
adc
inc
dec
xchg
cs
lods
cwtl
lret
cld
jl
inc
inc
mov
jge
je
push
lcall
pop
lock
stc
movsb
inc
jge
adc
dec
stc
jne
or
push
sti
mov
inc
nop
ret
cld
pushf
and
mov
loopne
dec
pop
xchg
xchg
jb
paddusw
pop
push
sbb
sbb
scas
fidivrl
ficoml
stc
sub
ja
cmp
ret
dec
pushf
test
jl
sub
mov
cmpsb
jmp
or
aam
sub
fldenv
sub
dec
loop
cld
or
out
jl
ret
into
sub
mov
jp
jne
mov
push
clc
das
sahf
les
cld
cmpsb
jg
push
add
mov
pop
mov
dec
repz
adc
fcoms
push
fcoml
test
inc
cltd
pop
mov
pop
jne
pop
ficompl
mov
jp
pop
lods
xchg
stc
mov
mov
jo
dec
repz
push
subps
cmp
fisttpl
aad
ljmp
xor
mov
sahf
fstps
fists
push
xchg
scas
fstps
or
mov
sbb
adc
fstps
cli
jo
lods
push
movsl
jbe
dec
and
mov
jmp
jne
dec
sub
fists
popa
push
in
int
push
mov
stos
movl
fldenv
jl
push
pop
adc
ljmp
bnd
bnd
es
scas
pop
ja
push
mov
adc
dec
test
adcb
mov
mov
repz
repz
fisttpl
jmp
loop
test
dec
adcb
fld
lcall
aad
rol
lods
push
dec
mov
push
adc
fcmovb
int3
lahf
mov
push
mov
outsb
insl
add
mov
or
lret
dec
loop
mov
shrl
pushf
iret
adcb
mov
or
sub
lret
repnz
arpl
xchg
insl
fcomi
xor
int
mov
leave
xor
sbb
pop
add
lods
aas
pop
xchg
ds
test
mov
pop
push
adc
daa
shll
jmp
dec
scas
aad
lea
std
or
sahf
sbbl
pusha
mov
ret
pop
fimull
cld
repz
into
nop
mov
in
popa
stc
lea
and
dec
clc
inc
stos
jp
sub
sbbl
xchg
pop
cld
pop
in
xchg
mov
jmp
fucomp
adc
xchg
xor
fnstcw
pop
xlat
or
repz
xacquire
fmul
loope
dec
clc
lods
repnz
ss
lcall
cs
adc
ss
lahf
add
jbe
push
std
arpl
rorb
mov
hlt
cmpsb
js
adc
xor
sub
shl
xchg
mov
jecxz
cmp
insl
dec
jne
aam
push
mov
int
in
jle
int
pop
les
jle
rclb
stos
pop
outsb
fdivrl
inc
outsb
test
add
sbb
jns
call
and
or
scas
lahf
inc
shr
xchg
mov
cwtl
jae
cmp
mov
sets
lods
xchg
movsl
scas
pop
xchg
push
fistpl
pop
shlb
ss
push
add
jns
movsb
leave
stos
hlt
dec
push
iret
roll
mov
or
dec
adc
leave
mov
sahf
xor
outsb
mov
xchg
clc
shll
cmpsb
fldcw
icebp
mov
mov
push
enter
pop
mov
inc
not
push
mov
pusha
sub
sub
test
adc
pop
outsl
sbb
stc
fwait
cmp
or
roll
decb
aam
ljmp
xlat
into
add
lea
push
push
idivb
movsl
pop
xchg
mov
lods
push
mov
dec
xchg
pop
mov
jne
std
xchg
hlt
les
cmpsb
mov
jle
aam
cld
xchg
push
mov
dec
pop
repz
mov
inc
dec
lret
sub
dec
movsl
xor
sbb
sarl
mov
mov
jl
mov
lods
xchg
sahf
shl
fstp
push
inc
imul
movsb
dec
mov
xchg
xlat
or
jle
popa
sbb
dec
cs
dec
mov
pop
push
sub
mov
rcl
nop
vmovsldup
pop
cli
xchg
cld
dec
jmp
std
rcrl
add
dec
jecxz
ret
jge
aam
mov
add
add
cs
iret
xchg
push
mov
imul
lret
cmpsl
inc
mov
mov
mov
int3
push
shlb
sahf
es
pushf
push
inc
push
mov
ss
dec
add
mov
stos
shlb
jp
xchg
arpl
shll
out
lods
cs
addr16
mov
mov
and
movsb
adcb
jle
fcoml
mov
hlt
jbe
pop
dec
lret
stc
scas
pop
pop
inc
push
lds
in
pop
hlt
inc
mov
stos
sub
stc
sub
fadds
xchg
andl
cli
cli
sahf
shrl
movsb
xor
fnsave
and
inc
scas
subb
out
adc
sbb
enter
sbb
aam
xor
mov
xor
fdivr
inc
inc
mov
pop
ret
roll
jnp
pop
mov
push
push
aam
sub
repz
shll
push
clc
xchg
aam
cmp
dec
imul
xor
mov
push
shlb
fxch
cmp
fstp
arpl
testl
and
fcmove
xchg
ret
into
xorb
add
lods
adc
cmpsl
repnz
cmc
sarl
cmp
inc
adc
out
push
ja
leave
shll
lahf
push
scas
pop
xchg
mov
inc
mov
aam
nop
iret
rcrl
cmpsb
mov
jbe
imul
xor
repnz
icebp
fsubrl
adc
clc
pop
test
fstpl
addl
mov
shr
fisubl
ret
test
adc
movsl
xor
cmp
mov
fbstp
lods
sbb
mov
mov
push
nop
adc
xor
enter
sti
mov
fnsave
popf
test
lcall
inc
mov
mov
push
mov
rol
mov
lahf
jns
ja
adc
lret
pop
pop
pop
mov
fsubl
mov
xchg
add
dec
or
sbb
mov
sarl
jne
jae
jns
scas
aad
push
jg
sub
inc
scas
out
outsl
inc
mov
popf
ja
cmp
sahf
and
jg
pop
fimull
dec
fdivl
sub
rcr
mov
xor
jmp
ss
mov
push
push
adc
push
lret
sbb
push
mov
jge
dec
pop
pusha
nop
lcall
jbe
xchg
push
loopne
mov
and
mov
push
popf
rorl
repz
lods
fmull
imul
aam
fs
fsubrl
pushf
xor
dec
xchg
cs
pusha
cmp
cmp
mov
fdivrl
and
mov
mov
sub
hlt
push
and
clc
pop
js
mov
arpl
jbe
insl
es
push
nop
adc
popf
cld
call
mov
adc
decb
or
mov
outsb
cmpsb
pop
inc
xchg
std
xor
ja
nop
dec
mov
or
je
lret
std
push
push
jbe
fidivrl
lahf
repnz
pop
cmpsb
mov
leave
mov
cmp
fisubrl
fisubrl
pop
mov
add
popa
mov
repnz
add
cwtl
sbb
and
scas
inc
fstps
fidivrl
pop
adc
aad
add
xor
mov
adcb
popf
clc
fst
xor
add
or
jl
dec
inc
jmp
test
mov
cmp
pop
movsl
jno
lods
push
push
mov
mov
std
push
cmp
mov
ss
jecxz
adc
sarl
sbb
std
out
test
cmp
decl
sub
xor
mov
push
xor
scas
mov
push
jns
push
and
jg
adc
popa
cmp
imul
jecxz
jecxz
adc
scas
fadd
sahf
xchg
mov
aam
dec
mov
fdivl
inc
inc
jge
enter
xor
aam
aas
fcmovnb
push
pop
sahf
pop
insl
adc
jne
lods
rcll
mov
rcrb
fnstcw
mov
sub
add
push
insl
push
cmp
mov
out
mov
adc
sub
iret
pop
push
adc
mov
sti
fpatan
ja
imul
popf
xor
and
aad
sbb
jl
js
popa
sub
sbb
sub
sahf
lods
mov
fld
movsb
dec
sti
repz
adc
push
cmc
shll
fidivl
fistl
cmp
lods
popf
fwait
dec
scas
and
test
add
mov
insl
sahf
cvtdq2ps
jo
xchg
incl
inc
pop
pop
adc
mov
pop
ret
mov
adc
lock
fmuls
jns
sbb
mov
dec
sbb
and
and
push
dec
cmc
fsts
scas
fmull
popa
xchg
stc
dec
xor
addr16
fincstp
fidivl
shll
pop
pop
mov
ja
fwait
sarb
pop
sbb
orb
popa
dec
xor
aaa
pxor
inc
jp
sahf
pop
xchg
add
mov
xor
jge
rorl
cmc
jmp
inc
insb
add
insb
jle
xor
sarl
mov
popf
je
push
fsubs
add
or
dec
add
xor
popa
test
add
mov
fmul
sub
mov
int
add
and
adc
mov
in
pop
fsts
arpl
lcall
adc
out
fs
jp
popf
lods
pop
jp
push
arpl
push
in
int3
ret
int
push
push
das
mov
xor
xor
jnp
aad
and
adc
push
adc
pop
jle
loope
and
lods
lods
insb
add
not
arpl
mov
jecxz
push
push
pop
push
fwait
mov
fldcw
cs
fmuls
rcl
repz
into
and
pop
push
pop
xor
xchg
ljmp
jp
and
xchg
push
mov
and
sahf
aas
stos
adc
ds
lret
shr
cmpsl
aas
pushf
aad
mov
bound
xor
hlt
push
xor
fdiv
mov
sub
sbbl
incl
scas
pusha
out
lret
pop
push
insb
hlt
daa
or
repz
xor
mov
addb
push
pop
aam
outsb
out
xchg
out
pop
in
nop
mov
mov
adc
ja
jb
ja
arpl
call
mov
rorl
out
std
jp
cmpsl
mov
sbb
jbe
mov
mov
pop
adc
movsl
aas
test
push
pop
lret
daa
lret
pop
shll
push
xchg
pop
scas
jge
push
push
push
mov
sbb
in
jle
loope
andl
or
lret
cvtps2pi
cwtl
mov
adc
mov
dec
int3
push
sahf
push
popa
aad
or
or
int3
pop
lods
sbb
adc
pusha
adc
mov
mov
jae
adc
xchg
jl
sbb
inc
mov
pop
or
pop
scas
jg
mov
pop
ret
movsb
bound
inc
cmp
rcrl
movsb
mov
std
jle
mov
movsb
xor
or
sti
adc
adc
out
xchg
cmp
shlb
aad
ret
pop
repz
dec
xchg
sar
sti
xchg
xor
add
mov
stos
mov
fsts
ds
cmc
fstl
jg
repnz
cmp
les
lret
jge
popa
fisttpl
mov
jl
mov
das
cmpl
jle
pushf
bswap
cmp
dec
rcll
popf
mov
lods
push
lods
adcl
ret
aad
dec
jbe
pop
sub
enter
cmc
call
pusha
stc
xchg
xchg
dec
jo
mov
fisttps
mov
dec
mov
xor
outsb
fldcw
icebp
xchg
sbb
enter
ret
lret
fucom
lcall
rcr
dec
stc
cmp
cmp
cli
sahf
out
stc
in
mov
push
lcall
mov
enter
mov
aam
shl
fsubl
pop
xchg
mov
pop
in
into
hlt
mov
andl
cmp
pop
aam
xchg
shll
lret
sti
js
lods
outsl
outsl
pop
xchg
jge
jmp
outsl
mov
push
cmpsl
fcoml
sti
ds
xor
push
rcll
push
mov
sbb
jo
mov
fisttpll
int
push
popa
les
cwtl
shll
add
push
cld
popf
push
xor
pop
xchg
pushf
aas
lret
repnz
insl
lods
jne
pop
sbb
fldenv
pop
out
dec
lods
or
fwait
je
bound
jbe
popf
lret
mov
movsb
inc
div
lods
movsb
adc
jns
in
push
push
cltd
sbb
rcrl
adc
push
out
mov
push
into
xchg
std
rcr
pop
ja
ds
xor
lock
ds
inc
lahf
jmp
sbb
popf
sub
ljmp
jle
nop
leave
or
repz
mov
xchg
cmp
push
je
mov
sbb
push
jbe
pop
cmovl
popa
leave
nop
jge
sahf
lods
ret
push
test
or
adc
mov
push
sub
adc
jp
ret
out
sub
xchg
mov
ja
popa
fisttpll
cmpsl
fisubrl
into
pushf
jae
dec
adc
scas
xchg
sub
mov
sarb
or
jnp
xchg
int
jp
adc
push
into
push
rorb
xchg
sbb
push
mov
mov
insl
or
pop
into
leave
popa
cmpsl
fisubrl
hlt
jmp
mov
fadd
xor
int3
mov
or
or
xchg
dec
mov
gs
pop
aaa
lds
push
xchg
push
xorl
push
push
fldt
sbb
jne
push
sbb
popa
sbb
push
inc
mov
and
call
push
push
out
daa
xor
rol
xchg
jge
js
jl
repz
mov
pop
out
or
shll
add
cmpsb
and
xchg
pop
js
sub
push
mov
mov
and
jp
in
mov
loopne
orl
mov
adc
mov
dec
xchg
pop
push
aam
repnz
sub
push
xchg
test
popf
ror
or
aam
arpl
fnstsw
jne
mov
jns
and
dec
bound
push
fdivr
andl
enter
dec
push
add
leave
test
scas
test
lods
cmp
cmp
fdivs
mov
and
push
jge
jne
dec
xor
adc
mov
pushf
cltd
add
call
sarb
cs
movsb
nop
cltd
imul
xchg
lret
shll
jb
jns
fdivrl
push
aam
mov
into
rorl
clc
sarb
xchg
dec
jnp
fisubl
int
in
jle
and
or
mov
push
mov
xchg
das
push
lods
stos
aas
xlat
adc
cmp
sahf
and
popf
dec
pop
sbb
sub
and
pop
pop
fdivp
sub
add
inc
sub
ss
shrl
fwait
push
xchg
pop
cmc
mov
xchg
fisttpll
sub
fidivl
stc
xchg
pop
mov
mov
and
fcomi
mov
pop
inc
test
pop
jl
xlat
pop
add
sub
or
lock
sarl
int3
dec
pop
push
stos
dec
xchg
jmp
outsb
es
int
pop
sub
xor
sub
xchg
mov
pop
mov
jns
ljmp
stos
adc
sub
pop
pop
mov
push
mov
js
push
lcall
out
imul
sarl
enter
jns
jge
fwait
outsb
mov
or
xchg
pushf
insl
int3
int
fstpl
aam
fcmovb
cmp
fnstcw
int3
push
push
ficoml
fcomps
jae
lret
hlt
into
loopne
icebp
xchg
aam
fisubrl
ret
test
or
je
xor
cltd
into
mov
cmp
sahf
repz
and
jp
pop
popa
mov
outsl
xchg
mov
dec
mov
pop
mov
ds
pop
test
ja
fisubrl
jle
sets
mov
pop
stos
lea
push
cltd
lods
ljmp
popa
cmp
adc
mov
mov
call
andb
loop
les
pop
test
pop
xchg
jmp
aaa
fcoms
pop
sbb
push
ds
int
cltd
fcoms
aas
insl
hlt
xor
mov
jmp
fwait
js
adc
jne
cs
ja
or
push
ja
mov
xor
call
pusha
xor
push
ficoml
shrl
mov
push
add
aaa
fidivl
push
into
xorl
out
mov
fadds
das
into
sub
dec
ja
stos
dec
cmc
fimull
fmuls
pop
jne
js
xchg
xchg
push
out
xor
call
pop
or
adc
xor
je
lock
nop
pop
ja
xor
hlt
mov
inc
pop
insb
ljmp
stc
jns
ss
dec
mov
cmp
ja
mov
dec
mov
loopne
pop
push
adcl
das
add
adc
jmp
lret
mov
aad
lret
cmp
mov
sbb
or
lcall
aad
ds
cld
mov
lods
mov
frndint
outsb
ljmp
clc
xchg
in
mov
mov
push
rcll
rorl
sbb
stos
sbb
adc
or
stc
jle
mov
sbb
or
jle
mov
aad
and
nop
xchg
fisubrl
mov
test
call
mov
cvtps2pd
scas
sti
or
pop
je
cmp
aas
lahf
mov
jbe
ja
jo
pop
lea
push
loopne
pop
and
in
setg
out
in
adc
cmpsl
sbb
sub
xchg
lds
jae
and
sbb
add
mov
and
lahf
mov
sbb
cmp
aas
enter
cmp
pop
xor
adc
sahf
int3
sbb
xor
out
jbe
daa
aad
jb
sub
push
cs
and
addl
lcall
daa
scas
or
clc
pop
fcmovnu
lds
inc
pop
sar
pshufw
orl
scas
or
inc
jmp
mov
repnz
subb
idivl
pushf
stc
sub
or
cmp
aam
pushf
sbb
imulb
xchg
sbb
leave
nopl
mov
aas
mov
inc
cwtl
and
leave
mov
cmp
pop
mov
adc
xchg
dec
mov
jge
push
pop
aas
jp
fld
xchg
mov
ret
pusha
leave
pop
cs
jge
inc
ret
fnsave
rcl
aaa
sub
repz
test
lret
xor
data16
dec
es
xchg
mov
jle
out
test
pop
mov
stos
bnd
jecxz
inc
repz
test
pop
fwait
mov
mov
xor
dec
inc
fmuls
mov
orl
or
jne
lret
pop
into
fucomip
mov
lahf
stc
jne
pushf
jle
cmp
rorl
lahf
stc
fs
pop
adc
xchg
popf
ljmp
leave
push
aam
inc
fsubrl
and
out
enter
into
fists
mov
les
jge
xchg
adc
scas
jp
sub
movsb
lods
push
xchg
fsubrl
gs
add
lods
inc
aam
lret
add
or
sbb
dec
jbe
lcall
cmpsb
mov
jns
pop
pop
in
minps
push
repz
test
lret
jmp
or
insl
xchg
cs
outsb
sbb
xchg
aaa
hlt
test
push
dec
sahf
xlat
movl
fdivr
sub
pop
flds
sub
sub
insb
push
lcall
out
pushf
cmpsb
ret
inc
adc
cmp
je
jno
xchg
push
insl
cli
add
roll
jne
mov
xchg
sub
xchg
lahf
iret
cmp
jg
mov
cmpsb
pop
jle
push
mov
mov
outsb
inc
dec
inc
cmc
int3
sub
xor
jo
cwtl
rcrl
popa
loopne
adc
jne
xor
pop
cmp
and
mov
mov
xchg
test
cmovg
push
mov
shll
scas
ja
aad
mov
sti
fsts
movzbl
xlat
push
sti
sub
mov
mov
xchg
incb
pushf
fisttps
pop
inc
jg
mov
mov
ljmp
push
adc
jg
jmp
rcrb
jge
sub
inc
adc
add
popf
fisubrl
dec
add
rcrb
daa
inc
mov
pop
cmp
sahf
popl
pop
mov
insb
fiaddl
ss
or
sub
lock
jbe
mov
and
sub
inc
in
fiaddl
pop
movsb
lds
lret
jo
cltd
je
sbb
xchg
jle
js
pop
fcmovnbe
data16
lock
or
mull
call
mov
add
aam
outsb
inc
fsubrs
rorb
lock
pushf
rdpmc
bnd
mov
cmp
sub
outsb
aad
shr
cmp
ret
je
mov
xchg
dec
jge
fisubl
mov
in
or
dec
movsb
ret
ja
push
lret
sub
jl
sub
pop
inc
fyl2x
pop
or
jne
in
aas
aad
jmp
xorl
ja
out
sub
loope
loopne
inc
dec
push
mov
pop
xor
es
mov
lret
jno
mov
sahf
dec
xchg
xor
cmp
jle
js
sarb
scas
mov
push
cs
jbe
push
ret
mov
and
mov
push
or
mov
adc
js
mov
pop
movsb
push
sbb
cwtl
cmp
outsb
lods
xchg
lock
sbb
fisubrl
cmc
fidivl
or
arpl
mov
mov
int3
mov
xor
fisubrl
or
pop
iret
lods
xchg
call
out
mov
fcomps
xchg
hlt
sbb
fmul
aas
mov
int3
sbb
int3
xchg
fnstenv
lods
add
pop
stc
mov
lods
outsb
int3
stos
or
aam
dec
pushf
xor
pop
dec
cwtl
dec
fucomi
sbb
push
push
mov
jl
popa
lds
mov
push
push
mov
add
push
aad
jns
or
insl
push
loop
jnp
mov
dec
pop
cwtl
cli
pop
mov
lock
imul
or
test
sbb
scas
xchg
cld
notrack
mov
sub
repnz
stos
inc
push
fincstp
jle
pop
add
adc
sub
dec
fs
and
push
xor
mov
repnz
repz
push
addl
push
mov
and
es
xchg
sarb
nop
and
out
pop
inc
pop
push
pop
dec
push
mov
hlt
aad
dec
push
faddl
insl
inc
mov
xor
jns
je
pop
cmp
lahf
mov
mov
mov
mov
push
push
pop
into
in
adc
hlt
xor
mov
ret
inc
ljmp
pop
jecxz
addb
mov
and
cmp
mov
iret
pop
imul
xchg
jnp
cltd
cwtl
fcoms
pop
in
scas
mov
gs
jecxz
es
into
push
enter
ror
gs
imul
outsb
xlat
cltd
stos
lods
popf
cwtl
iret
sahf
sti
push
mov
aaa
inc
pushf
scas
mov
pop
mov
outsb
jns
and
xlat
outsb
mov
dec
test
add
mov
fistps
sti
push
fldcw
mov
mov
nop
loope
lea
cmp
sahf
and
jbe
in
mov
mov
icebp
inc
mov
aam
hlt
xor
and
imul
push
sti
push
loop
in
pop
lret
sbb
push
in
int3
stos
mov
shrl
lcall
call
dec
stos
mov
in
cmp
inc
sub
and
out
sbb
cmp
mov
sysenter
mov
sub
fs
pop
push
xchg
out
int3
jb
sub
test
mov
cs
movl
cli
push
pop
push
cmp
sub
insb
jl
cwtl
lcall
rorb
xor
jo
mov
xchg
sbb
push
aam
stc
popa
pop
outsb
int3
fisttpll
add
loope
stc
aam
pop
mov
fmulp
jns
adc
xrelease
push
mov
xchg
test
adc
popa
fisubrl
ss
sbb
stc
mov
dec
xchg
inc
mov
xor
lods
sub
lret
adc
fisttpll
or
pushf
cwtl
aad
cmp
mov
ficompl
add
lods
cmp
movsl
mov
push
popa
std
xchg
pop
fwait
sub
and
mov
mov
jno
xor
pop
ljmp
pop
hlt
iret
jnp
push
ja
push
xchg
inc
insl
ja
mov
push
push
aas
push
pop
sarb
mov
hlt
dec
mov
cltd
xchg
push
sar
out
jmp
pop
xchg
mov
fistl
cmpsb
push
pop
sbb
leave
cwtl
mov
inc
push
sub
push
loop
xlat
movsl
inc
aam
out
scas
sub
cmp
int
nop
adc
outsl
je
push
and
sti
adc
stc
xchg
sbb
xlat
sbb
mov
mov
cmp
adc
ss
popa
test
adc
ss
dec
pop
rorl
aaa
adc
jecxz
adcb
sahf
iret
adc
xchg
xchg
pop
adc
clc
mov
inc
fimuls
sub
cli
jns
fcompl
ret
pushf
jmp
adc
int
aad
frstor
lcall
sbb
dec
mov
dec
das
call
jg
push
pop
dec
dec
jbe
js
pusha
fnstcw
xor
add
adc
push
rcrl
int
mov
dec
xchg
in
aas
lods
pop
push
fcoml
fmull
jns
clc
lret
xlat
pop
jle
aas
inc
stos
enter
into
in
loope
lock
xchg
outsb
dec
mov
loope
scas
mov
pop
jb
adc
pop
push
std
push
shll
popf
dec
aas
dec
insb
jle
pop
int
out
inc
test
lea
xchg
xor
sub
dec
or
push
push
xchg
inc
out
lock
call
mov
sbb
into
jb
push
clc
js
aas
jmp
xlat
sub
adc
mov
cmpb
js
pop
push
dec
jne
lods
loope
out
lods
cld
push
or
xor
in
lahf
push
outsb
jne
decl
fmull
mov
pop
dec
ds
jp
mov
lahf
negl
push
in
dec
lods
sbb
mov
es
imul
inc
mov
push
in
ss
adc
jmp
imul
repnz
adc
push
ljmp
fcompl
xchg
mov
lret
fdivrs
inc
popa
jb
xchg
jmp
pop
lea
dec
stc
int3
cld
ljmp
aas
sbb
pop
jle
mov
cmp
nop
xchg
mov
mov
enter
pop
fwait
push
add
push
and
sub
push
push
std
xchg
outsb
jg
xcrypt-cfb
cmpsl
loop
adc
lret
test
pop
pop
adcb
push
cmpsb
cltd
ja
xor
fisubl
inc
lret
enter
cmp
adc
popf
lret
mov
add
push
rorb
push
xor
add
aad
push
mov
dec
dec
lret
ror
or
aam
shlb
pop
mov
dec
ljmp
lock
push
lahf
jg
in
or
mov
shr
in
inc
inc
push
std
or
daa
jne
ret
jns
ret
insb
into
adc
cld
mov
dec
les
stos
lods
fidivrl
fcoml
je
test
lods
mov
enter
ret
nop
adc
pusha
add
xor
scas
fidivs
lods
lea
test
aad
fdivl
test
add
adcb
mov
ss
cmp
xchg
adc
and
sbb
fcompl
les
pop
sbb
sub
mov
push
adcb
mov
xor
pop
and
and
fstl
shl
inc
fsubrl
stos
xchg
jb
cli
pop
push
out
cmp
push
lock
jge
popa
cltd
lods
ret
mov
xchg
cltd
or
pop
adc
mov
adc
test
out
es
int
dec
jae
or
lret
jl
dec
push
aad
sbb
fmull
daa
xchg
cmpsl
sti
adc
xor
jecxz
loope
ljmp
shll
mov
stos
fnsave
out
or
testb
pop
fsubl
repnz
jg
cmp
jp
sbb
in
and
fsubp
cmpsl
push
xor
push
ja
movsb
add
mov
xchg
lds
aam
mov
out
aad
orl
inc
jo
scas
and
sub
adc
mov
jmp
dec
and
popa
xchg
xchg
push
pop
mov
and
scas
movsb
push
cmp
scas
test
jge
jecxz
out
testl
icebp
aad
mov
std
jbe
pop
fstpl
jnp
notb
aas
xor
clc
clc
cbtw
lret
lcall
adc
cmp
movsl
fdivl
cwtl
fstp
lret
mov
mov
push
pop
push
or
jo
jne
mov
je
push
or
xor
in
iret
pop
mov
fldt
decb
pushl
jne
pop
dec
mov
lds
xchg
decl
sub
shrl
sbb
xor
mov
xor
test
aas
add
cmp
inc
in
faddl
jle
jae
das
pop
int3
push
fstpl
repnz
frstor
inc
push
xchg
push
pop
pop
rcrb
clc
pop
or
hlt
push
aad
adcb
or
pop
aas
test
push
jl
data16
dec
lods
cmp
fnsave
push
dec
jmp
xlat
push
jl
subb
jbe
dec
xchg
xor
test
mov
pusha
fnstcw
fdiv
inc
icebp
jne
mov
das
adc
call
push
push
mov
inc
mov
xchg
and
pop
jp
pop
dec
cmovns
lahf
shrb
sbb
xchg
xlat
imul
sahf
fcmovb
movsb
pop
adc
fdivp
mov
dec
aad
mov
xchg
scas
popa
pop
sub
stc
fs
cld
xchg
insb
fisttpll
sub
aaa
out
lea
arpl
xor
pop
xchg
ret
rorl
mov
call
cwtl
sub
repnz
push
ja
das
ficoml
outsb
jbe
lea
fsts
cld
xchg
mov
andb
pop
ret
enter
xchg
jp
ja
movsb
clc
negb
sarb
andb
daa
stc
push
pop
mov
int3
jp
cmp
dec
push
fldcw
mov
mov
inc
lahf
mov
cmc
pop
and
pop
stos
es
fdivrl
jmp
insb
inc
fwait
iret
je
fstl
iret
test
in
out
mov
cld
mov
sbb
insl
dec
mov
imul
dec
and
dec
xor
mov
pop
jle
lods
add
out
sub
in
cmp
sbbl
mov
pop
sti
les
aas
adc
cltd
test
insl
mov
jne
aam
popa
push
frstor
xchg
cmp
push
pop
mov
xchg
repnz
mov
mov
or
mov
pop
mov
sbb
rcll
adc
fists
outsl
fstps
or
pop
mov
je
jp
sbb
pushf
pop
ret
movsb
sbb
xchg
push
jne
adc
add
popl
and
mov
cltd
xor
pop
stos
mov
sbb
jnp
test
jne
push
mov
jle
in
add
adc
sub
cs
or
inc
cmpsb
into
xchg
inc
inc
stos
push
lods
stc
hlt
pop
dec
popa
das
push
fdivr
xchg
fs
faddl
rcl
cmp
xchg
lock
sbbl
push
dec
jmp
insl
xor
pushf
and
pop
insl
les
mov
clc
dec
aas
insl
jne
pusha
cwtl
fwait
pusha
imul
add
xchg
xchg
pop
mov
push
pop
js
adc
repz
pushl
jmp
and
pop
push
popf
mov
sub
test
popf
into
add
jg
dec
push
stc
add
push
sbb
pop
fsubrl
les
fdivrl
and
cmp
push
mov
sub
push
jg
dec
inc
inc
sarb
xlat
shl
mov
jge
xchg
je
aaa
jmp
push
dec
ret
std
out
xchg
sub
imul
push
push
pop
push
push
lret
jbe
lods
std
idivl
mov
aaa
push
adc
aad
insb
mov
enter
mov
xchg
push
dec
lcall
ljmp
push
mov
pop
sbb
lcall
sbb
lcall
xor
and
xor
inc
pop
xor
mov
jno
adc
xor
xchg
pusha
addr16
adc
dec
mov
push
call
pop
je
cs
outsb
lods
aam
mov
pop
mov
test
jge
lods
lock
outsl
push
scas
pop
sbb
aad
stc
flds
je
pop
arpl
cmp
pusha
aam
pop
cs
hlt
cs
bound
mov
mov
xchg
nop
cmp
jnp
rcrl
pushl
inc
mov
loope
je
pop
mov
sub
adc
xchg
mov
inc
es
cmpsl
ds
push
out
nop
sub
ja
sub
pop
out
adc
fisubrl
jle
sub
mov
cwtl
dec
push
jge
mov
clc
inc
and
push
cs
imulb
dec
jo
call
mov
dec
pusha
xor
mov
mov
or
loop
and
mov
mov
pop
mov
cmp
mov
xchg
mov
out
inc
scas
mov
fsubl
ja
dec
fdivs
popl
lods
xchg
mov
mov
dec
inc
sub
mov
sub
cmpsb
and
jnp
pop
inc
or
jle
lret
fldt
daa
xor
mov
add
aad
into
stos
iret
lret
jns
push
push
test
scas
xchg
mov
jbe
cmpl
clc
fdivr
pusha
jae
fisttpll
stos
hlt
fcoml
push
mov
jno
insb
push
push
out
jo
fldt
fnstenv
imul
xor
jno
pushf
inc
jnp
adc
or
adc
clc
fcomps
cld
in
out
hlt
mov
andb
lret
and
cltd
in
fdivl
and
cs
int
add
xor
enter
pop
dec
sub
shlb
aam
fdivs
int3
pop
rcrl
pop
xchg
inc
cmpsb
rclb
popa
mov
xor
push
pop
aad
sbb
lods
dec
sti
pop
jl
xchg
mov
pop
or
gs
out
xor
ja
das
sbb
popf
int
inc
xchg
mov
fmuls
cmp
jmp
jg
jp
jle
xor
out
cltd
mov
pop
out
add
inc
xchg
mov
movsb
xlat
int3
adc
repnz
and
mov
fmuls
imul
fdivrs
repz
enter
daa
mov
jecxz
pop
cmc
in
aas
in
fldenv
arpl
fistpl
dec
pop
pushf
pop
fstl
push
pop
pop
sub
xlat
adc
pushw
cltd
das
cmp
xchg
aad
daa
lods
ficompl
push
jmp
jae
xchg
inc
mov
les
push
adc
xor
add
nop
cmp
rolb
call
test
xchg
lcall
sbb
pop
aad
add
idiv
hlt
in
mov
push
pop
enter
int3
xchg
push
adc
pop
insl
call
mov
in
aaa
in
aad
adc
aaa
jl
push
mov
jns
jmp
mov
mov
push
cmc
sub
mov
xor
aas
ss
xchg
push
int
in
jne
pop
pusha
shl
mov
push
pop
cmp
rcrl
mov
push
mov
shrl
cmp
je
sbb
and
pop
push
jle
or
inc
call
push
clc
les
sub
fs
cmp
inc
in
pop
mov
xlat
push
daa
roll
stc
mov
sub
rcl
mov
insl
add
cmpsb
and
pushf
adc
cld
clc
cmp
outsl
and
jno
xchg
xor
movsb
stc
jo
mov
or
adc
icebp
adc
lret
sbb
sub
mov
daa
mov
pop
leave
sbb
mov
pop
dec
fbstp
jns
gs
and
repz
push
cmc
fistl
fstl
sub
jbe
into
inc
shll
pop
dec
std
jae
movb
movsb
divb
sbb
adc
std
jle
xchg
andl
jge
andb
cmp
xchg
movsb
jne
lods
sbb
addr16
jmp
int
jmp
sbb
mov
test
lock
and
xchg
pop
xchg
push
notrack
fsub
mov
stos
inc
loope
movsl
into
xor
push
aaa
ja
das
jl
mov
ret
dec
imul
shlb
push
cmpl
in
pop
scas
sub
and
xchg
cld
push
jae
and
das
jo
cmpsb
push
xlat
ror
lods
shrb
outsl
ret
pushf
sahf
aad
mov
fcoml
dec
xchg
sbb
jmp
xchg
aad
push
leave
mov
das
aad
xchg
dec
pop
xchg
into
mov
cmc
pop
int
nopl
decb
xchg
cmc
mov
sub
loope
push
dec
xchg
sub
fs
out
mov
mov
into
pop
xchg
xor
xlat
std
mov
push
cmpsb
addr16
repz
in
adc
push
xor
test
or
lret
xlat
inc
push
cmpb
cmpsl
loop
mov
mov
mov
aam
xor
and
sub
insb
stc
mov
mov
out
xchg
jb
pusha
imul
lahf
cli
jl
mov
jle
push
cmp
xor
stc
gs
in
adc
ja
and
lods
mov
lcall
aam
lods
push
jmp
jns
movl
inc
jnp
mov
or
shll
jo
fmul
cmc
adc
lods
xchg
mov
ret
adc
push
std
and
lret
jae
lahf
adc
test
adc
push
jns
sub
fisttpl
int3
mov
pusha
jno
clc
xor
stos
or
ja
mov
mov
lcallw
aas
mov
push
in
pop
mov
mov
popa
dec
cli
mov
aas
addl
fcoms
outsb
in
cmc
pop
data16
mov
mov
xchg
jo
xchg
or
aaa
inc
aad
fcomps
dec
arpl
popf
scas
jl
jmp
jecxz
int3
pop
popa
lret
dec
jl
enter
les
jmp
hlt
mov
movsl
and
scas
xchg
mov
pop
adc
mov
aaa
fwait
xor
mov
and
mov
xchg
xor
sbb
fs
add
int
xchg
sar
mov
int
insl
add
mov
rcrl
mov
cmpb
mov
xchg
in
enter
mov
arpl
movsl
imul
add
cmp
push
hlt
xor
fs
rcl
mov
or
rcl
xchg
xchg
inc
mov
adc
clc
lret
xor
jbe
cmp
mov
cmpsl
imul
outsb
mov
sbb
push
cmpsl
add
mov
sbb
cmpsl
mov
insb
and
pop
lret
stos
adc
pop
aaa
popf
pushf
cli
cmpsl
jg
cli
cmpsl
cld
sbb
aad
push
push
adc
xchg
pop
jbe
int3
sbb
mov
mov
mov
lods
in
lods
mov
pop
pop
lahf
int3
adc
pop
inc
xlat
mov
rcrl
sub
fstl
loopne
aam
movsl
jns
cmp
fdivl
lret
push
lods
mov
aam
mov
mov
das
inc
popf
sub
aas
andb
jl
divl
dec
lock
shrl
push
and
inc
cmp
sti
sub
int3
dec
push
pop
fldt
pushf
or
repz
and
repz
mov
inc
je
dec
fnstenv
fnstcw
jecxz
push
or
dec
adc
lds
enter
mov
xlat
out
insb
mov
push
ja
xor
bound
and
out
and
enter
sahf
addr16
dec
or
sbb
cld
push
xor
cmp
xor
xchg
repnz
insb
mov
out
sub
or
scas
aam
jp
ss
jle
mov
clc
sub
in
pushf
xchg
ljmp
mov
sub
aas
pop
ror
gs
mov
xchg
or
out
inc
fwait
into
cld
ret
xchg
in
pop
mov
andnps
mov
movsl
fstps
out
and
orb
or
cmp
jno
adc
mov
pop
dec
shlb
inc
xor
aad
pop
sbb
xchg
adc
aas
aaa
fs
ret
cmp
hlt
inc
lds
movsb
cmp
ja
outsl
pop
das
pop
cs
popf
fidivl
jge
jp
mov
cmp
sti
mov
push
jns
xchg
cmp
dec
sbb
sahf
adc
cmc
enter
xchg
sbb
pop
cmp
pop
pop
andl
adc
mov
stos
js
pop
jl
cmp
outsb
mov
fistpll
fisubrl
call
ja
fcompl
lahf
fsubrs
insl
xchg
cmp
fmull
dec
xor
pop
pushf
cld
or
dec
mov
jo
pop
pop
rolb
out
aaa
rclb
push
repz
dec
jbe
ret
lcall
imul
push
mov
dec
jmp
sub
pop
enter
add
push
xchg
out
xor
push
jge
shlb
aam
repz
mov
test
lea
dec
dec
adc
mov
in
and
fdivrl
mov
int
adc
roll
cmp
xor
inc
js
hlt
daa
aam
or
dec
scas
jo
es
mov
out
jo
lret
jbe
jns
add
add
mov
cmp
stc
test
in
inc
pop
repz
fwait
mov
mov
jbe
xchg
sbb
jle
fdivl
jne
push
jns
repnz
mov
xor
ret
jae
push
push
cs
mov
shrb
mov
filds
sub
cli
mov
xchg
bound
xor
int3
dec
test
sub
jnp
jg
xlat
pop
or
sub
xor
scas
ljmp
je
jno
fmuls
jno
shlb
sbb
mov
jo
jl
mov
pop
setne
shl
lods
movsb
push
sarl
ljmp
fimull
outsl
mov
bound
jb
add
test
add
dec
fldcw
pushf
mov
rclb
sub
rcrl
in
sub
add
sarl
mov
inc
lcall
sub
inc
xor
or
test
fidivl
pop
xlat
xor
mov
jge
emms
xchg
popf
lret
loopne
cmp
clc
dec
mov
jo
cmp
push
pop
std
inc
fwait
nop
pusha
and
jnp
fimull
adc
ret
or
ret
or
adc
mov
js
out
andb
rep
push
mov
clc
fidivrl
es
call
cmc
ret
push
sub
pop
xchg
lret
rolb
push
es
cltd
sbb
int3
mov
xchg
cmp
pushf
push
jno
xchg
loop
jb
fsubrs
repz
pop
test
test
mov
jns
fildll
inc
leave
jl
call
xor
sub
cmpsb
jg
pop
mov
xchg
cld
sub
or
jne
sub
incl
cwtl
mov
cmp
jnp
xor
jl
lods
mov
xor
fldt
or
lds
pop
fisttpll
cmp
stos
add
insl
dec
lea
or
inc
dec
nop
xchg
push
adc
rcl
std
sbb
mov
fldl
adcb
stc
pop
mov
mov
cmp
xor
mov
lds
divl
push
push
adc
jp
pop
fstp
js
pop
test
adc
fsincos
cld
aam
adcl
movsl
or
sbb
dec
movsl
sbb
aas
jns
int
ficoml
push
sbb
stc
sbb
fchs
mov
outsb
popa
push
cmp
cmc
xchg
dec
lea
jle
and
test
xchg
jl
sub
pop
mov
push
sahf
xor
nop
mov
data16
popa
fisttpll
xchg
in
fdivrl
mov
mov
mov
xchg
mov
mov
pop
inc
jbe
push
test
xchg
fisubl
jae
inc
sbb
mov
xchg
jae
scas
movb
pop
jg
mov
aas
fimuls
fidivrl
or
and
ljmp
das
aam
lcall
lods
cmpsb
xchg
aad
js
gs
xchg
loop
push
jnp
adc
inc
repz
repz
sub
jns
mov
pop
and
stos
cmpl
ficompl
out
add
lock
xor
inc
mov
push
and
nop
xchg
jle
test
pushf
fstp
push
cltd
mov
popa
push
sbb
aas
adc
loopne
push
jo
hlt
mov
iret
push
cld
das
sbbl
mov
cmpsb
bndstx
movsl
scas
rclb
jbe
mov
xor
inc
dec
loope
shll
sbb
ret
add
iret
xor
fdivrl
pop
sbb
push
pop
leave
mov
add
push
or
aas
mov
mov
pushf
scas
or
xchg
fcoml
fadds
mov
cmpsb
out
call
into
jge
repz
sahf
sub
or
andl
sbb
loop
fwait
xchg
xor
pop
scas
in
mov
sbb
popa
test
or
fwait
shrl
push
ret
andb
sub
or
stc
inc
adc
mov
and
scas
inc
jnp
fwait
inc
lods
cmp
mov
rorb
pop
sub
xchg
out
xchg
or
fprem
int
cli
sti
pop
xchg
leave
pop
xor
push
test
js
dec
dec
or
jge
pop
in
add
es
add
sub
lret
mov
xchg
fs
fdivs
jbe
fcmovb
pop
cs
mov
stos
adc
jns
pop
rorl
repnz
cmp
xor
jle
pop
pusha
mov
cmp
ja
imul
int
pop
movsl
adc
sbb
jl
aas
or
ja
mov
push
push
addr16
and
cltd
sti
jecxz
cwtl
pop
xor
push
inc
inc
aad
es
jg
cmp
xlat
sbb
mov
cmpsb
iret
shrb
sti
nop
push
aaa
pop
aad
xor
push
je
mov
loop
sarb
fldcw
jns
inc
ss
pop
dec
pop
fisttpll
push
cs
adc
int
jle
hlt
xor
shl
mov
gs
pop
fldt
cmpsb
xor
shll
push
lret
pushf
fnstenv
test
movsl
pop
push
push
aad
stc
fcompl
lret
jp
and
mov
jns
test
adc
pop
push
xchg
rolb
sbb
mov
xchg
in
xlat
aad
jnp
push
push
fcom
stos
jg
add
pop
rorb
sub
sbb
push
mov
xlat
fnstenv
lock
adc
incb
call
inc
xlat
adc
aam
sub
mov
lods
pop
mov
inc
jns
jo
xchg
mov
fnstsw
pop
int
push
orl
pop
cwtl
sub
jg
fadds
push
icebp
add
pushf
lea
pop
cld
mov
cmp
mov
adc
outsl
xor
push
sub
dec
ljmp
cmp
test
fcoms
jnp
stos
mov
lods
out
rcrb
sbb
cld
call
flds
mov
cmp
outsb
test
mov
clc
nop
sub
pop
sarb
aam
outsl
and
movsl
rcrl
pop
mov
lahf
lods
repz
pop
fcoms
sarl
cmc
jo
lods
pop
sbb
mov
fcompl
in
xchg
xchg
loop
repz
pop
mov
data16
jae
dec
push
scas
or
mov
ficompl
xchg
xor
add
mov
mov
sub
ficompl
pushf
mov
jle
push
fldcw
stos
push
push
mov
popa
mov
push
pop
orb
jbe
inc
dec
bnd
ss
xchg
pop
out
in
imul
inc
jge
mov
mov
push
push
sub
mov
xchg
pop
subb
jl
jle
lods
cwtl
xchg
pop
mov
in
mov
shlb
sub
pushf
mov
pop
sub
pop
cltd
mov
subb
pop
sti
inc
push
fildl
sub
inc
std
enter
and
lret
fisubl
mov
and
fdivrl
sbb
in
or
cltd
roll
inc
inc
pop
popa
mov
nop
mov
pop
pushf
cmp
inc
jp
xor
sarb
movsb
cmp
rcrl
test
imul
mov
dec
sub
fstp
xchg
jbe
push
mov
pusha
or
add
lods
mov
pop
rorl
and
mov
jg
and
pop
subl
mov
dec
flds
or
pop
sbb
mov
loopne
aam
dec
xchg
mov
fmul
xor
push
jns
flds
sarb
sbb
into
fwait
sub
pop
daa
mov
jnp
push
int
or
pop
dec
enter
outsb
inc
testl
aad
jmp
jl
repz
push
test
jp
mov
add
ret
daa
cmp
movsl
sbb
sub
loopne
popa
and
fistl
stc
fcmovnbe
out
mov
xchg
fldl
lods
mov
pop
popf
into
xchg
je
push
mov
cmp
dec
pop
lods
add
cmc
ss
jl
cmp
pop
push
stc
dec
add
inc
push
or
insb
push
jnp
insb
dec
sahf
xor
pop
mov
pop
insb
jl
xchg
out
sbb
cltd
int
xchg
mov
lea
mov
jns
cs
mov
mov
xchg
adc
jb
adc
jle
jg
cwtl
sbb
xchg
mov
movsb
rcrl
mov
insb
frndint
add
lods
gs
movsl
xor
lods
ljmp
sbb
jmp
sub
mov
dec
mov
insl
cs
clc
push
addl
and
lods
test
pop
divb
inc
lret
dec
lds
cmp
cmp
pop
sub
fidivl
cmp
jmp
push
pop
aam
cmc
mov
sub
idivl
ret
out
adc
jl
mov
and
dec
pop
mov
not
adc
outsb
pop
stc
xor
push
cmp
lea
mov
inc
push
repnz
lods
int3
sbb
mov
push
and
mov
repnz
inc
lods
movsb
ret
fists
fcmovbe
sarl
sub
aad
add
lahf
das
sarl
std
cmp
sub
adc
and
fcoml
xchg
pop
and
lret
es
cli
or
dec
loopne
mov
xor
rcl
push
iret
insl
mov
xchg
pop
orl
mov
jg
outsl
dec
xor
pop
ds
sub
daa
mov
push
jns
pop
stc
pusha
xor
dec
or
xchg
subl
push
lret
or
adc
std
call
xor
fwait
shlb
xchg
pop
sbb
push
pop
repnz
ret
inc
dec
mov
dec
dec
jp
leave
jb
cmp
push
xchg
push
inc
add
jl
ret
xor
xor
jae
add
jbe
sub
push
subl
cmp
fnstcw
es
outsb
scas
mov
fisttpl
push
sub
xchg
mov
push
sbb
cmpsb
xchg
shrl
stc
fst
ja
xor
pop
sbb
pushf
call
rcl
psubd
mov
or
push
xchg
loope
pop
xrelease
jle
and
xchg
jg
lds
shll
sbbl
sarl
insl
sbb
or
cld
in
out
stos
cs
mov
shrl
push
lds
imul
push
jmp
mov
jmp
cs
testb
sar
or
ret
lds
out
scas
xchg
sub
adc
sub
stc
out
cmp
mov
sbb
xchg
sbb
pop
test
ds
mov
leave
lret
lcall
or
mov
cld
cld
jmp
ss
add
fldcw
mov
xor
enter
repnz
jbe
dec
sbb
xor
dec
adc
jns
outsl
lret
shll
push
decb
nop
push
ss
add
fwait
and
cmpsb
bound
push
pop
pop
in
mov
in
repz
aam
jae
movsl
shrb
call
mov
enter
ss
fisubrs
in
pop
rorl
repnz
cmpsb
and
mov
lods
dec
jo
out
aaa
mov
ljmp
leave
insl
mov
and
pop
xchg
lret
out
movsb
imul
xor
xchg
int3
in
cmpsb
mov
scas
mov
jnp
inc
cmpsl
addr16
pushf
dec
xor
lcall
push
xlat
pusha
stc
pop
push
aad
int
dec
or
out
sub
fisubrl
aam
pop
push
sub
fwait
clc
sub
movsb
jg
pop
mov
add
sub
add
pushf
sub
jns
mov
int3
daa
into
int
jp
push
mov
pop
rcr
fucomp
xchg
sbb
popa
adc
jb
jo
xchg
mov
test
fwait
ja
das
sbb
les
addb
aaa
mov
push
sbb
in
sbb
jns
insl
adc
fiaddl
jle
fs
and
add
jge
outsl
push
sbb
movd
out
pop
pop
fs
and
and
push
repz
and
call
shlb
das
jp
xor
inc
mov
test
std
lods
mov
ds
fsubr
daa
popa
fsubl
jo
add
fwait
imul
cwtl
push
repnz
cmc
pop
out
inc
cmp
aas
gs
xor
mov
sub
out
adc
and
out
nop
loop
push
in
mov
daa
mov
mov
adc
ja
int
fcomp
mov
pushf
gs
xorl
stos
aad
sahf
pushf
repz
test
push
popa
inc
xor
sahf
add
inc
add
jae
daa
add
and
sub
lea
jno
out
cmp
int
rorb
loopne
dec
push
pslld
lret
pop
mov
and
pop
fstpl
xchg
cli
aaa
dec
lahf
mov
pop
jo
jge
push
adc
jp
gs
clc
aas
fstpl
lods
push
inc
xor
xlat
jmp
orb
mov
lods
pop
frstor
daa
sub
push
jmp
jbe
jl
iret
bound
xor
sbb
insl
sti
add
sub
jnp
mov
ss
jnp
xor
cmc
test
mov
or
add
push
cmp
clc
cmp
adc
push
lcall
inc
sarl
adc
cmovno
or
push
pop
movsl
pop
testb
sbb
rclb
cmp
sub
jmp
sbb
sti
push
lods
push
mov
xchg
pusha
nop
pop
mov
loop
jae
xor
sahf
shrd
ja
adc
or
push
sbb
outsb
outsb
rolb
mov
jb
pop
pushf
mov
aad
push
cmp
out
cld
pop
insl
push
rcrb
mov
xor
shr
xchg
fisubrl
neg
jle
dec
pminsw
mov
fcoml
ja
nop
sbb
insb
mov
push
dec
xchg
push
pop
add
push
push
int3
xchg
iret
cld
out
push
xor
push
aam
bound
cmp
cmp
test
mov
sbb
adcb
xor
push
in
dec
or
mov
push
ss
pop
dec
cmp
outsb
jne
sahf
jno
push
aam
aaa
pop
int3
pop
push
xor
sbb
inc
mov
dec
sbb
dec
sbb
je
aam
xchg
negb
xor
push
mov
ficoml
push
xor
and
adc
enter
scas
xchg
rorl
adc
int
std
sarl
pop
push
cld
push
jns
cwtl
dec
jge
shlb
mov
push
xor
add
add
adc
ds
mul
lahf
xor
movsl
jecxz
sahf
cmp
jnp
cmc
inc
mov
or
gs
les
cmc
pop
lods
pop
jg
and
fldl2t
jne
and
xchg
mov
jle
push
ss
cmp
jle
aad
shlb
adc
mov
push
popf
jmp
adc
sbb
push
push
cmp
lcall
cmp
xor
sbb
ljmp
out
fmul
and
out
orl
outsl
mov
mulb
insl
ret
jmp
in
mov
arpl
cli
repz
adc
shlb
std
mov
sbb
add
aam
and
adc
xor
popa
cmp
jl
xchg
ljmp
push
fidivl
xor
lods
call
loop
jo
jg
push
je
push
xchg
leave
fldt
mov
movsl
mov
lret
lret
pop
sub
pop
movsl
ja
outsl
sub
pop
repnz
out
sub
fisubrl
in
sub
inc
mov
fucomip
subb
add
sahf
jle
sub
add
cld
es
cwtl
jge
mov
fs
cmp
cmpsb
outsl
pop
sub
sarb
fcmovnu
jl
sub
cmp
xchg
imul
lods
mov
icebp
jl
lret
push
and
out
mov
les
mov
dec
cmp
rcrl
push
add
lcall
mov
cld
lods
lods
ret
addr16
aad
outsb
mov
xchg
sti
das
dec
fcompl
sub
mov
xchg
jnp
push
sbb
outsl
into
mov
jmp
ja
mov
es
in
mov
cmp
jle
lods
cmp
fcompl
and
jns
ja
cmp
sahf
sbb
xchg
pop
cmp
je
lods
push
out
enter
mov
repnz
sahf
cs
dec
int3
cld
ja
imul
sbbb
fldenv
xor
inc
das
sbb
cltd
icebp
fidivrl
cltd
out
rorb
push
lahf
mov
xchg
in
push
les
in
in
cmpsl
repnz
jno
push
jae
jle
sub
sbb
stc
mov
cmp
in
mov
push
cmp
mov
sub
push
insl
aad
lret
mov
fnstcw
test
pushl
mov
jecxz
das
push
add
push
mov
pop
stos
ficoml
cmp
in
cmp
arpl
add
or
call
ret
pusha
lds
sbb
je
cwtl
in
scas
pusha
mov
dec
mov
fs
cmp
xchg
pop
jl
pop
mov
pop
pop
dec
cmp
aaa
pop
mov
mov
mov
jg
jno
cmp
jne
mov
aad
push
inc
ss
sahf
mov
xor
pop
and
pslld
add
dec
xor
out
jp
jge
pop
scas
push
lret
cld
xchg
cmp
add
mov
and
ljmp
shr
adc
ljmp
sub
dec
xor
fdivp
ja
mov
std
pop
rcrl
mov
pop
std
xchg
add
or
ds
mov
sbb
pop
jno
lret
sub
loop
pop
aas
shll
fwait
daa
sbb
push
mov
xor
mov
pop
imul
daa
stos
dec
int3
shrl
sub
pushf
jle
in
movsl
xchg
mov
ds
push
xor
sbb
adc
pop
int
ljmp
inc
cmp
pop
js
fstps
cmc
jmp
das
int
popa
xor
add
lahf
lcall
jg
xor
repz
sahf
xchg
lcall
dec
in
mov
dec
adc
sub
push
pop
cmp
cmp
xor
lret
xchg
push
test
repz
inc
xchg
dec
pop
ret
pop
ja
sbb
aas
es
std
mov
dec
subb
jge
bnd
push
into
cs
int3
pop
stos
out
fstpt
lods
mov
movsl
loopne
fwait
sub
push
pop
jne
sbb
mov
aad
dec
insl
inc
pop
mov
or
mov
js
xor
cmp
aas
inc
pop
mov
xorl
lds
xchg
xchg
xorl
rclb
cwtl
sbb
pop
jns
or
sahf
mov
pop
jne
sti
push
push
xchg
cmpsl
movsb
sbb
xor
jbe
mov
push
insl
arpl
jle
xor
clc
push
mov
sub
aam
jle
jle
popa
xorl
cli
mov
pop
test
fstpt
or
sahf
popf
adc
aad
jmp
mov
inc
push
lods
or
daa
sti
lea
pop
push
and
mov
mov
sub
enter
dec
sbb
cmc
pushf
lock
cmpsb
dec
pop
mov
pop
dec
pop
push
pushf
jle
mov
bnd
aas
stos
test
int
mov
mov
repz
rcrl
mov
movsl
xchg
or
pushf
les
andl
lods
aad
push
pop
fs
jnp
pop
das
or
outsl
scas
adc
sbb
cmp
iret
jmp
jmp
pop
jle
lahf
addb
xor
out
xchg
sub
shlb
jbe
iret
jno
push
mov
scas
xor
sub
mov
mov
pop
jmp
cwtl
lock
repnz
scas
cld
or
lahf
xchg
push
push
xchg
out
sbb
adc
mov
pop
dec
rolb
arpl
fdivs
add
out
cmp
daa
ja
mov
das
shll
cs
mov
ja
into
cltd
dec
xchg
inc
mov
cmpsb
outsb
mov
dec
dec
jno
outsl
mov
and
mov
lods
inc
aas
popf
aam
iret
push
hlt
in
mov
push
ret
mov
xor
adc
dec
mov
aam
add
sub
bswap
sbb
add
out
int3
sbb
shr
add
mov
sub
jle
xor
add
sahf
das
loop
adc
les
in
jle
add
pusha
imul
cmp
inc
orps
int
rclb
outsb
scas
pop
sbb
sbb
pop
push
enter
push
sub
movsb
call
stc
test
shll
mov
jns
xchg
scas
dec
sub
jno
sub
ret
lock
xor
pop
pop
pop
aad
shlb
sub
ss
xchg
adc
adc
push
ds
cli
adc
repz
ja
dec
pop
lcall
loope
test
bnd
out
cmpsl
incl
stc
lock
xchg
push
and
pop
cmp
ret
movsl
imulb
jl
jne
or
push
sub
inc
adc
push
test
xor
outsb
pop
pop
movsb
es
cmpsb
cmp
mov
xor
xchg
es
mov
sub
add
fnstenv
ja
rcll
sbb
mov
inc
add
xor
scas
aam
adc
xor
test
add
dec
cmp
lods
cli
iret
cmp
mov
aaa
dec
pop
add
aad
mov
outsb
adc
data16
out
rcrl
aam
idivb
movsl
adc
inc
aam
mov
adc
sub
sbb
adc
dec
orl
sub
cmp
xchg
call
and
push
xor
adc
or
cmpl
pop
adc
repz
mov
push
xchg
scas
sub
mov
lods
lock
cmpsl
sar
adc
xchg
mov
pop
int3
pop
jl
int3
cmpxchg
lret
push
iret
lea
cmpsl
push
int
cmc
aam
mov
stos
pop
pop
or
lret
mov
lock
add
pop
xchg
js
setbe
pop
int
adc
int3
xor
mov
jl
lds
sub
inc
xlat
adc
jg
mov
mov
insl
push
insl
mov
adcl
outsl
dec
dec
xchg
push
lods
std
outsb
push
push
jp
rorb
popl
mov
cltd
ret
test
out
insb
xlat
inc
out
in
mov
sahf
ds
push
subl
sub
lret
inc
cld
insb
ret
jp
movsb
jecxz
xchg
test
fistl
test
les
push
lods
mov
mul
fidivl
and
adc
iret
bound
sbb
out
out
ljmpw
je
int3
movsb
sbb
adcb
xor
pop
jl
push
daa
mov
fmul
push
stc
bndstx
repnz
mov
into
cmp
test
aaa
hlt
xor
lods
fisttpl
int
and
xor
mov
movsl
pop
and
aad
add
and
add
scas
pop
xchg
out
fldt
imul
sub
insb
or
pusha
pop
or
pop
je
movsb
dec
cld
hlt
inc
push
inc
fsubrs
jmp
mov
push
xlat
hlt
fst
aad
push
pop
out
iret
daa
lea
jne
gs
aas
movsl
push
fdivrl
aad
test
xchg
popa
cmp
dec
cmp
or
sub
pushf
mov
fwait
xchg
movsl
inc
push
ficoml
mov
mov
pusha
addl
adc
xchg
scas
inc
jge
cmpsb
mov
jae
test
adc
mov
jle
cmpsb
add
sub
sbb
mov
mov
repnz
and
or
push
outsb
std
mov
jle
insb
lcall
mov
fcomps
test
fcompl
lcall
add
xlat
int
lcall
movsb
add
xchg
mov
xor
cltd
push
jne
push
clc
fdivl
push
dec
in
dec
xor
clc
lea
cmp
mov
adc
ss
cwtl
mov
inc
mov
lods
jp
mov
jns
xchg
xchg
inc
cs
cli
out
fadd
and
into
test
or
or
pop
jns
repz
sub
rcll
add
xchg
sbb
pop
fwait
xchg
xlat
jns
cmp
nop
push
cmpsb
sbb
mov
je
cmp
jp
adc
hlt
xchg
stos
hlt
adcb
add
and
sub
divl
jg
ret
mov
pop
push
lds
xlat
lret
mov
popf
movsl
push
xchg
push
jl
mov
mov
out
xor
pop
mov
enter
cltd
jecxz
in
ret
xchg
inc
cmp
cmp
sub
and
pop
pop
dec
push
pushf
lret
mov
aad
inc
icebp
jno
and
dec
fimull
push
pop
outsb
cmpb
ret
sub
mov
cld
push
xchg
inc
stos
inc
insb
jb
add
sbb
sub
arpl
arpl
out
ret
sbb
fiaddl
aam
ja
cmpl
lock
xchg
push
outsb
lods
jecxz
xor
stc
dec
int
popf
rcrb
xchg
pop
filds
jb
sub
adc
pop
aam
pop
mov
cmp
sbb
cmp
cld
push
repnz
sysret
outsl
mov
pop
hlt
sub
lea
pop
ljmp
sbb
pop
shl
xor
sahf
sbb
in
aad
data16
mov
pop
daa
in
clc
jns
add
stos
sbb
fucomi
sbb
mov
jl
sub
js
or
xor
push
stc
adc
inc
pop
movsl
jbe
stos
jmp
mov
push
popa
lods
je
out
movsl
stos
dec
fidivrl
insl
in
xor
cmc
jno
cmc
inc
cltd
clc
push
fdivrp
scas
inc
xlat
bound
cmp
mov
aam
inc
leave
pushf
stc
adc
stos
jno
fdivrs
add
subl
inc
adc
out
std
inc
outsl
fsubrl
cmp
jnp
mov
fnstcw
fnsave
aad
jge
xchg
dec
ss
add
sarb
not
repz
or
mov
mov
sahf
aas
sub
lods
lods
sbb
push
shr
fistpll
mov
cmp
push
sbb
dec
roll
loop
sub
lcall
mov
or
jns
fcoml
cmp
enter
pusha
pop
mov
sub
aam
or
push
jle,pt
insl
add
in
in
push
xchg
loope
push
mov
test
ds
xchg
mov
push
push
pop
scas
jns
in
jmp
in
pop
pop
xchg
movsl
inc
in
enter
lret
xchg
stc
push
xchg
lods
les
pop
sbb
call
popf
push
negb
shrb
pop
data16
mov
adc
aam
mov
clc
jle
pop
aas
pushf
std
fistpl
clc
fidivrl
and
inc
arpl
fmul
add
pop
jae
fldlg2
xchg
lret
js
bound
shll
xor
mov
int3
popf
jle
movsb
add
pop
and
mov
sahf
int3
pusha
out
inc
fsin
lret
imul
jne
cmp
mov
pushf
add
or
cmp
jns,pt
mov
jmp
imul
pop
mov
notl
add
clc
enter
outsb
movnti
cwtl
push
mov
add
lods
cwtl
jmp
lret
pop
int
xor
push
dec
cmpsl
ja
pop
pop
pop
jge,pt
iret
pop
jge
inc
notb
pop
test
mov
fcmovnbe
int
dec
and
sti
lods
mov
jg
pop
cmp
es
lods
mov
test
xchg
les
xor
cmpsb
fsin
jge
push
scas
out
dec
stos
xchg
xlat
rorb
jae
aas
pop
test
jns
js
cmpsb
fsub
sti
pop
push
add
jnp
cmp
pop
push
or
mov
out
jne
push
fcomp
cmp
test
call
sub
aad
pop
divb
jecxz
fs
stc
mov
dec
lock
mov
sbb
das
cltd
int
insb
mov
std
sahf
mov
lcall
fstpl
pop
std
mov
fnstsw
push
add
pop
subb
int3
sbb
and
popf
sbb
ret
daa
mov
cmp
fbld
fcom
movsl
loopne
add
movsl
sbb
fdivl
pop
test
lcall
dec
pop
mov
loope
imul
push
jnp
mov
dec
add
lret
sub
insb
inc
arpl
dec
sub
imul
mov
fsubrl
push
insb
pop
push
fs
cwtl
js
dec
mov
xorl
aaa
dec
push
xor
icebp
sub
subl
push
int
lods
pushf
popf
icebp
pop
scas
xchg
ja
bound
lea
push
add
int
dec
pop
ret
jle
std
sub
mov
pop
orb
push
xchg
mov
jge
mov
mov
add
clc
lods
fdivr
data16
xor
dec
cltd
repnz
scas
push
pop
rorb
push
add
rcrl
test
add
ficompl
lret
adc
xlat
mov
mov
lods
pop
int
out
dec
lods
adc
aam
mov
rclb
xlat
ljmp
mov
rcrb
adc
cld
jnp
aam
pop
lods
fstp
lods
fdivrs
dec
mov
mov
loopne
mov
aad
pop
mov
push
popa
fsub
pop
jo
outsb
dec
xchg
stos
call
adc
fs
fldl
push
int3
movsl
ret
add
jo
adc
insl
mov
aad
ficompl
filds
fistpl
push
mov
stos
push
dec
jmp
lret
scas
sbb
jns
sbb
push
sbb
lea
dec
pop
clc
movsb
add
mov
fdivrs
push
sbb
add
xor
movsl
xchg
mov
pop
insl
mov
xchg
rcrb
mov
jne
enter
test
lret
lds
mov
sub
fwait
jl
mov
dec
and
pop
ljmp
pop
jns
jge
sbb
jno
add
cltd
popf
xchg
push
xchg
pop
fldl
push
and
insl
add
add
std
sti
bound
sub
loop
pop
jae
mov
test
lods
mov
shll
fldcw
cmp
ret
int3
adc
pop
fwait
mov
mov
xor
fldl
push
out
ljmp
cltd
adc
aam
cli
fsubrl
pop
jl
addl
test
icebp
loope
xor
aam
and
mov
movsl
fiaddl
dec
mov
scas
fldl
pop
mov
in
pop
add
loopne
mov
push
add
pop
dec
cld
subb
adc
repnz
lds
mov
fnstenv
pop
cwtl
int
push
fsubl
pop
pop
fnstsw
fcompl
sbb
mov
inc
mov
mov
aaa
xchg
movsl
sahf
in
jbe
shll
gs
xor
dec
fistpl
fnstcw
int
mov
rorl
cltd
sbb
xchg
mov
lret
pop
and
loop
fisubl
push
mov
int3
lahf
mov
mov
lahf
pop
bound
pop
fldenv
outsb
cmp
cwtl
fs
out
sub
imul
imul
dec
ds
js
test
pop
mov
lods
testl
pop
pop
mov
jp
or
push
pop
stc
stos
hlt
aad
cwtl
or
pop
sahf
lock
sub
mov
cltd
cmp
daa
pop
loopne
lea
mov
aad
or
das
adc
sub
and
rol
xchg
and
pop
test
jbe
enter
fnstcw
gs
inc
loope
or
scas
movsw
sub
pop
insl
dec
nop
ficompl
push
fstpl
aam
shrb
add
cmp
iret
rol
mov
ficompl
std
shrb
int3
mov
dec
stos
jbe
mov
mov
sbb
fidivl
xchg
mov
sbb
cmp
scas
dec
fidivrl
cmp
arpl
ja
xor
mov
mov
pop
je
frstor
popa
andb
cmp
push
jl
cmp
mov
and
and
push
pop
fisubrl
mov
fsubs
aad
ficoml
scas
out
aam
mov
dec
lea
sbb
aad
sbb
dec
sub
mov
int3
pop
lds
xor
popf
cmp
daa
mov
fnstenv
fcmovnu
mov
mov
fs
xchg
push
test
pop
pop
adc
je
push
cmp
cmp
orl
inc
or
pusha
mov
sbb
rcl
ljmp
int3
sub
lods
test
dec
sub
inc
sbb
in
fstpl
xor
mov
lcall
pop
scas
push
loopne
insb
movsl
xchg
pop
add
pop
dec
and
adc
dec
aam
push
adc
pop
xor
xchg
out
fiaddl
push
pop
sbb
aad
cltd
xchg
push
mov
adc
adc
shrb
sarl
out
pushf
mov
jl
dec
int
push
fcmovne
sti
rcll
cmc
aad
scas
data16
rcrl
ficompl
hlt
mov
inc
fimull
je
repz
sarl
mov
push
cmpsb
sahf
roll
orb
ret
sarl
ds
repnz
jns
in
rorl
cmp
jg
mov
sub
lds
cs
incl
shl
lret
dec
fstl
leave
cld
jne
stos
adc
and
mov
inc
test
inc
sarb
xchg
stc
sti
aam
push
pop
aam
inc
mov
fwait
cld
dec
call
ljmp
mov
iret
pop
ret
jnp
fstpt
push
lcall
pop
pop
fcmovnu
aam
aas
add
sub
arpl
fwait
das
push
lret
sti
dec
adc
lods
mov
sbb
mov
or
push
not
pop
lret
mov
std
or
mov
insl
hlt
cli
lcall
jns
sahf
fisubs
jle,pt
insl
aad
pop
push
ret
gs
xor
out
insl
out
push
test
rolb
mov
test
sbb
fisubrl
push
lahf
movsb
clc
xchg
jb
loopne
and
cmpl
ss
xchg
loope,pt
iret
je
dec
lcall
and
sbb
insl
das
fwait
in
push
and
push
push
sarl
cmp
inc
mov
cwtl
mov
push
js
pop
lods
inc
or
sarb
pop
mov
orb
mov
or
mov
ret
faddl
fadd
sub
push
ds
pushl
fisubrl
popa
inc
mov
clc
mov
test
fmul
cld
in
cmp
call
jne
js
fdivs
xchg
mov
pop
pusha
and
testb
cmp
pop
mov
jle
push
jbe
xchg
pop
jge
adc
in
imul
outsl
lcall
xor
mov
ficompl
mov
add
sbb
push
aad
fsubrs
lret
sub
mov
jge
lds
jg
int3
ds
cmp
ud0
int3
test
movsb
das
pop
fadds
sbb
nop
mov
xor
jns
mov
pop
adc
lock
pop
mov
and
add
lea
jbe
jp
popl
lods
xor
test
sub
pop
jl
jl
js
xchg
mov
pushf
mov
stos
test
xchg
mov
mov
cmp
pop
xor
xor
fmul
cmovnp
repz
add
gs
jp
adc
fstp
je
lret
pop
stos
ret
jg
mov
aam
jmp
push
jg
xor
fstl
xchg
loopne
sub
shll
ficoml
jl
mov
push
pushf
pop
frstor
fldl
xchg
repz
dec
push
cmc
cs
and
js
pop
std
mov
scas
incl
sbb
xchg
and
cmp
dec
jecxz
dec
ja
gs
cmpb
jle
ret
rorl
adc
sar
lods
js
and
xchg
test
mov
jo
fidivs
insl
mov
pop
imul
in
jl
add
and
into
xchg
sub
fcmove
pop
repz
add
sub
mov
or
dec
rcrb
scas
aam
ds
lods
pop
xchg
sbb
jnp
sar
cmp
aad
movsl
loopne
xchg
and
stc
push
sub
push
ficoms
icebp
movsl
dec
imul
mov
mov
ud0
shl
cltd
scas
and
lds
jle
pop
jae
leave
cmp
loope
pop
loop
std
popa
dec
pop
or
adc
pop
sub
mov
dec
pushf
xorl
cmp
aam
jno
iret
pop
insl
addl
mov
sub
pop
and
fstp
push
stc
jbe
xchg
pop
inc
pop
mov
int
sti
dec
xor
sub
out
adc
stc
lahf
mov
jns
cwtl
das
inc
cmpsl
jmp
imul
inc
xor
repnz
jl
test
jg
cmp
dec
test
lea
out
dec
sahf
pop
int
popf
shll
sar
mov
sarb
repnz
or
xchg
sahf
pop
mov
arpl
mov
pop
inc
xor
out
sar
add
test
xorl
xchg
popa
cwtl
jo
or
sbb
adc
gs
aam
aaa
mov
popa
mov
sub
in
pop
out
xor
sbb
popa
je
ret
fadd
mov
xchg
adc
adc
std
rol
or
sbb
cld
jnp
xchg
adc
fwait
xor
jle
pop
xchg
jo
lea
sbb
xor
push
and
or
pusha
pop
sbb
dec
mov
push
mov
aaa
daa
popf
mov
mov
stc
jbe
repz
imul
lea
mov
cld
mov
lods
pop
std
pop
add
fnstsw
xor
push
stos
jae
pop
pop
test
sub
dec
adc
das
fdivrl
lods
cmp
nop
inc
pop
push
popa
sub
into
notb
mov
add
dec
in
inc
inc
mov
push
daa
pop
sub
sti
popa
push
fstpt
insl
fs
arpl
pop
xor
add
mov
cs
les
mov
addr16
sbb
add
jle
lds
push
popa
xor
sbb
jns
js
or
push
jno
sahf
out
std
pop
into
push
push
mov
pop
fsubp
push
jle
scas
sbb
mov
inc
adc
inc
shlb
movsl
inc
cmp
cmp
sbb
movl
das
lods
popa
sahf
xor
pop
negl
fsubl
jge
inc
cmp
fbld
call
ror
mov
rcrb
mov
dec
and
leave
cmp
push
jecxz
inc
push
outsb
scas
mov
dec
mov
jo
and
scas
push
aad
sarl
daa
jp
outsl
mov
mov
jbe
lret
shll
push
xchg
std
out
rcll
insl
loop
lea
xchg
lods
mov
pop
cli
pop
inc
mov
sar
pop
dec
or
jg
cmc
add
jno
cmp
jbe
rclb
cmp
ds
mov
sub
or
lret
mov
out
cmc
stos
or
xchg
jg
test
fwait
xor
addb
pop
lcall
js
push
cmc
mov
xor
outsb
into
cwtl
pop
xor
mov
mov
pushl
out
or
lret
push
sbb
rcll
lds
leave
add
js
loop
or
dec
mov
or
popa
dec
ja
dec
mov
enter
data16
lahf
pop
cs
xlat
push
adc
mov
jns
fstps
lods
mov
rolb
dec
or
pop
jge
popa
lcall
mov
rorb
push
jbe
inc
pop
or
testb
xchg
add
xchg
pop
ja
fnstcw
push
cwtl
cmp
inc
hlt
pushf
xchg
in
adc
outsb
dec
sbb
stc
jmp
movsb
idivb
sbb
and
jecxz
fstpt
ret
aad
test
mov
mov
pop
or
dec
inc
data16
jge
aam
or
test
out
into
xor
mov
xor
xchg
mov
xor
sub
xor
scas
mov
sbb
inc
mov
rclb
sbb
rcrl
mov
ret
mov
test
movsl
mov
sub
adc
xchg
in
or
bound
sub
sbb
xchg
stc
dec
cmp
rorl
jl,pt
movsl
data16
sbb
mov
int3
in
out
call
xchg
js
ret
mov
hlt
jecxz
jnp
rcl
xchg
lret
mov
xor
mov
js
adc
mov
out
std
ds
push
pop
cmp
out
das
pop
out
mov
ds
std
inc
xchg
cmp
dec
inc
lods
push
outsb
sub
in
popf
cmp
push
dec
fistpll
cmp
jb
xor
sub
inc
pop
int
mov
jp
push
scas
jns
icebp
push
jo
sti
mov
push
fcmovnu
pop
fcompl
mov
inc
lahf
stos
rclb
xor
inc
sbb
pop
outsb
adc
and
out
in
lds
cmpsb
pushf
push
rcrl
pop
push
std
sbb
and
in
fsts
xor
jnp
out
push
ret
xchg
aas
ret
push
xchg
mov
inc
cmp
cmp
int
mov
sbb
cmp
xchg
jecxz
fdivl
pop
scas
xlat
mov
or
popf
mov
stos
dec
ficompl
xor
cmp
popf
stos
pop
cmp
pop
jns
rclb
add
je
add
fsubs
and
sbb
add
je
scas
lret
fisttpll
mov
bnd
push
cwtl
jbe
push
enter
stos
mov
loope
lods
push
push
fstl
add
aas
pop
daa
inc
mov
lds
mov
int
sbbl
in
cld
sub
mov
inc
xchg
pop
ret
js
mov
ja
push
adc
mov
sbb
incb
shlb
push
bnd
dec
mov
rorl
iret
fnsave
mov
mov
xchg
dec
fnstsw
push
mov
mov
fisubrl
cmp
int3
pop
push
dec
cwtl
into
fwait
sahf
mov
ds
pop
out
mov
dec
adc
sarl
fnstcw
sti
popa
sbb
inc
cmp
aam
mov
jnp
jecxz
sbb
shll
loop
push
pop
ret
das
mov
pop
nop
dec
cmpsb
push
popa
ds
xchg
pop
pushf
test
pop
cmp
in
xchg
sbb
stos
popa
xchg
add
ss
jle
cmp
aaa
dec
mov
xlat
mov
mov
and
inc
aam
cmc
or
popa
cmp
pop
pop
inc
pop
aad
pop
shl
mov
mov
rcll
adc
mov
outsl
rcrb
push
add
add
outsb
push
nop
xor
in
adc
repz
fsubrs
mov
aas
jbe
jnp
jo
push
xchg
mov
loop
fiaddl
in
outsl
pop
mov
sahf
adc
iret
sbb
adc
repnz
aas
test
xor
dec
stos
out
mov
mov
or
mov
and
jb
daa
dec
sub
mov
xchg
test
pop
fwait
mov
sub
xchg
inc
cmp
pop
jle
ja
cmp
mov
fsubrs
lea
mov
xchg
jecxz
adc
into
rcl
call
lods
xor
xor
pop
shll
ljmp
pop
into
dec
mov
fcompl
push
xor
jae
jp
pushf
lcall
cld
cld
adc
pop
fcoml
stc
repnz
insb
push
push
adc
in
fstpl
int
stc
aam
rorb
shr
outsb
inc
dec
outsb
in
int
xchg
int3
test
xchg
push
pop
push
sub
aas
push
daa
adc
test
pop
imul
push
sub
popf
jb
push
popa
loop
mov
negl
jp
pushw
pop
sub
hlt
xchg
popf
mov
stc
outsb
mov
and
dec
adc
lret
bswap
lock
cmp
jb
cld
aam
fmuls
rcrb
cmc
mov
adc
aam
push
mov
mov
out
ficompl
pop
lods
xor
push
fcmovu
aam
mov
shlb
mov
aad
ljmp
add
xor
sbb
movsl
jmp
mov
mov
mov
shrb
inc
jns
out
cs
adc
cmp
xor
fistl
mov
mov
pusha
rorl
movsl
clc
rcr
test
jnp
mov
push
mov
rorl
mov
push
push
insb
pop
pushf
out
push
adc
mov
fcoml
pushf
inc
sahf
cld
push
add
mov
es
stos
pushf
cld
aas
stc
fwait
cmp
dec
pop
cmp
push
cmp
clc
mov
xlat
pop
aaa
mov
dec
outsb
mov
cld
arpl
push
and
mov
cmp
idiv
inc
sbb
push
fdivr
mov
pop
call
pop
mov
sahf
sbb
fstpl
cmpsb
xor
xchg
jge
aaa
sbb
gs
mov
pop
cmp
pop
inc
mov
movsb
add
pop
rcrb
in
sbb
popf
ds
xor
popa
mov
push
les
shl
push
sbb
fidivl
jecxz
mov
aam
fldenv
mov
cmc
dec
inc
sbb
mov
mov
push
mov
outsl
push
popa
push
push
xchg
movsb
jl
pop
xor
push
out
push
cmp
fucom
cli
xchg
inc
xor
movsl
jl
pushf
xchg
rclb
xchg
adc
xor
test
lret
mov
arpl
loop
ds
jecxz
cmpsb
push
push
lods
xchg
jl
push
lcall
push
jecxz
xchg
inc
jl
inc
dec
mov
outsb
pop
pop
dec
or
imul
inc
jnp
mov
insl
mov
scas
fucomp
sahf
mov
shl
dec
fyl2x
mov
fldl
mov
rcrl
aas
call
add
in
sub
dec
cmpsb
xchg
mov
sahf
mov
scas
fstps
mov
cs
popf
jo
cmp
lods
insb
mov
lods
std
ret
hlt
scas
xchg
mov
fsubr
insb
push
aam
in
xchg
fsubrp
mov
js
cmpsb
sub
sbb
std
jl
cmp
jl
imul
test
fdivl
pusha
xchg
pop
les
or
scas
sbbb
push
jge
inc
enter
int3
mov
mov
adc
data16
adc
bound
xchg
push
sub
jl
aam
dec
pop
mov
pop
dec
mov
fldl
mov
cwtl
and
jns
push
fwait
pop
push
aaa
ror
aad
jnp
and
fistps
adc
sbb
pop
cmp
dec
in
dec
and
dec
push
testl
inc
lcall
sbb
shll
add
cli
cmpsb
inc
sbb
inc
or
xchg
sub
in
mov
jp
ret
imul
cmp
cmpsb
sbb
js
pop
data16
movsl
dec
xchg
inc
scas
rcll
pop
iret
mov
ret
adc
cmp
icebp
sarl
and
add
adc
and
aaa
mov
sub
pop
cmp
daa
dec
pop
cli
sub
inc
fcomp
out
or
mov
pmuludq
cmpsl
cwtl
divl
sbbb
pop
shrl
ss
popf
not
pop
ret
dec
ds
ljmp
dec
jbe
ds
dec
add
je
sbb
sarl
pop
pop
xchg
pop
mov
push
popa
cmc
movsb
sahf
xor
jmp
fs
mov
sub
or
mov
test
lcall
or
mov
push
dec
mov
mov
inc
and
pop
cmpl
popf
repz
mov
loope
mov
mov
jmp
sbb
test
fistpll
adc
data16
pusha
or
xchg
cmc
sub
pop
fnstsw
pop
jae
repnz
imul
lods
push
in
fisubl
dec
rorl
mov
stc
fistpl
add
sub
and
xor
rcrl
nop
scas
cmp
jp
jge
cmp
fisttpl
shrb
in
xchg
xor
jge
popa
mov
add
ss
cmp
bnd
sbb
mov
fidivl
and
test
cmp
nop
das
lods
mov
clc
or
inc
outsb
mov
decl
into
inc
pop
inc
inc
out
out
jo
fwait
loop
inc
pop
adc
ja
jns
mov
lods
lcall
adc
shll
mov
and
movsb
adc
test
mov
into
mov
inc
push
push
jl
pop
test
dec
shlb
xor
sahf
popa
lahf
xor
and
push
repz
dec
jge
lea
fmul
add
sbb
fs
cmp
mov
sub
pop
int3
cmpb
sbb
insl
and
xor
shll
sbb
fnstsw
popf
mov
test
and
dec
pushf
mov
pop
jbe
ret
adc
or
xor
fsubrl
data16
outsl
pop
cmp
icebp
insb
cld
sbb
shrb
lds
push
fstp
and
hlt
pop
lock
xor
inc
jnp
jg
loop
push
mov
aam
dec
xor
sbb
adc
cli
int3
sbb
data16
out
xchg
idiv
aam
ret
in
fcoms
sti
lcall
cld
repz
icebp
imul
xlat
sub
inc
push
or
mov
pop
push
push
and
subb
insl
pop
jb
mov
cmpsl
inc
adc
fcomp
shll
pop
cmp
lea
cmp
mov
fmull
xchg
jmp
fwait
adc
fs
int3
xchg
rcrl
jnp
les
mov
jo
addr16
fnsave
pop
stos
aas
aam
dec
sbb
sahf
lods
jmp
mov
mov
icebp
cmp
pop
subl
pop
rclb
aas
xor
stos
pop
inc
sub
mov
dec
out
sub
inc
mov
aas
dec
sub
mov
mov
stos
mov
scas
test
push
faddl
scas
adc
out
pop
inc
scas
pop
sahf
rcr
test
xor
xchg
sbb
repnz
xor
dec
cmp
push
sbb
inc
sub
fdivrs
bound
aad
push
dec
icebp
lret
inc
jge
outsb
pushf
sti
cmp
xchg
mov
sbb
popa
mov
push
inc
loope
and
xchg
xchg
lods
stos
insb
outsb
ret
lahf
lret
ja
sbbb
out
xor
pop
xchg
push
fcompl
fdivl
iret
pop
rclb
shll
jp
ja
sbb
pop
stc
fildl
xor
je
xchg
fistl
out
push
repnz
lods
xor
aas
dec
mov
xor
fiaddl
fcoml
mov
outsb
addr16
aad
movaps
xor
aad
test
pop
es
pop
push
jecxz
out
mov
out
dec
mov
pop
sbb
add
inc
jecxz
mov
adcl
fcoml
cmpsb
outsb
cmp
seto
lret
push
dec
add
mov
xor
mov
out
stc
rcl
call
mov
outsb
push
cmp
cmp
stos
mov
int
push
sbb
in
fptan
aad
pop
push
pop
cld
outsb
dec
mov
mov
push
in
sbb
push
pushf
popa
popf
push
in
ds
cmp
mov
or
mov
pop
cmp
jo
mov
jo
adc
dec
std
insl
mov
sarl
dec
adcb
push
push
jbe
jno,pt
mov
test
inc
fstps
in
mov
or
xchg
jecxz
cld
adc
push
fildl
sbb
lcall
fdivr
adc
cwtl
lret
jnp
aam
xchg
iret
xchg
mov
and
pop
mov
out
add
dec
lahf
sarb
icebp
pop
divl
add
pop
fcompl
lods
mov
loop
mov
jge
aaa
ljmp
leave
xchg
push
push
into
mov
push
data16
rorb
adc
push
insb
cltd
mov
mov
jmp
popf
int
xor
sbbb
imul
pop
mov
mov
xor
cs
jbe
sbb
push
mov
jl
mov
add
stos
cmpsl
fdivrl
das
and
test
sbbl
pushf
imul
rcr
lock
sub
popa
pop
test
jb
repnz
fmuls
fdivrl
cmp
pop
jl
mov
pop
pop
ret
sbb
jmp
sarb
popf
mov
sub
bound
push
rep
xor
lea
mov
push
pop
mov
mov
cmpsl
aam
cmpsb
cmc
lods
enter
into
mov
push
sbb
std
dec
rcl
shll
xor
xor
js
cmc
add
add
sbb
push
stc
fnstsw
inc
aad
repnz
addr16
pop
arpl
mov
xor
jmp
sbb
push
push
cltd
adc
mov
sahf
aad
mov
jg
mov
mov
shlb
sarb
test
mov
cmp
scas
les
xor
push
repz
into
mov
or
sbb
jno
ret
enter
imul
je
pop
and
sar
lock
popa
outsb
into
std
pop
in
das
aas
popa
fisttpl
aad
cs
mov
inc
cmpl
out
int
pop
into
mov
pusha
sub
push
sbbl
scas
mov
into
xchg
pop
insl
fldl
popa
mov
xchg
inc
dec
dec
adc
add
pop
repnz
pop
push
in
fiaddl
rcrb
popa
sti
sbb
lds
push
ffree
xchg
in
and
pop
pop
and
cmp
loop
cwtl
push
push
repnz
mov
fiaddl
adc
xor
mov
cwtl
outsb
add
and
mov
mov
cmc
dec
fimull
pop
cmp
adc
jle
mov
popf
mov
pusha
fdivs
sub
xchg
call
mov
fcomi
dec
fwait
lds
popa
adc
ret
jge
jbe
sbb
lods
add
nop
mov
frstor
adc
push
hlt
cmp
addl
mov
push
enter
call
xlat
fsubrl
aad
dec
jl
xchg
jnp
fisttpl
adc
int3
jbe
iret
mov
fcomi
scas
adc
push
pusha
cmp
test
lds
dec
or
faddl
jns
jnp
sbb
xchg
dec
cmpsl
insl
repnz
or
fdivl
movsb
jle
cmp
outsl
mov
movsb
and
cld
outsb
orb
inc
mov
pop
sub
iret
lods
fxam
xchg
jmp
rcll
lret
jno
mov
sub
mov
mov
jnp
movsb
movb
adcb
mov
sahf
call
popf
in
int3
inc
sub
leave
push
pop
xor
lret
lret
push
or
dec
pop
xor
ss
popf
fwait
dec
mov
stos
cld
dec
mov
push
aad
lods
push
lcall
sub
roll
rolb
mov
stos
sub
lret
fwait
inc
mov
mov
lods
ret
push
das
out
mov
lds
pushf
rorl
sbb
push
sub
dec
mov
into
lds
cmp
int
dec
xchg
fbld
rclb
dec
mov
dec
stos
sarl
push
inc
jle
ja
adcl
dec
fucompp
dec
mov
ud1
xor
cmp
test
popf
dec
loopne
mov
push
xchg
inc
jle
push
inc
imul
cli
pop
mov
pop
pushf
negl
lcall
lods
lcall
lcall
scas
lret
rcr
aam
cmp
dec
cmp
dec
pop
push
or
inc
xor
dec
inc
mov
jae
xor
shl
jle
cld
mov
pop
out
cmpsl
dec
ds
aam
jne
ds
pop
ljmp
pop
dec
xlat
repz
push
jl
fsub
into
pop
push
push
cmp
fbld
outsb
jecxz
aaa
loop
inc
mov
mov
push
repz
mov
push
xchg
enter
lcall
mov
jp
popa
sahf
leave
fmul
push
sahf
push
cs
out
test
inc
into
sbb
pop
mov
int
ljmp
call
pop
test
scas
into
lahf
jo
sub
sub
adcl
cli
jne
jb
xchg
pop
int3
test
push
daa
cmp
bound
sbb
add
mov
sahf
outsb
iret
xlat
lock
cmp
pusha
outsl
mov
adcl
mov
mov
xor
nop
pop
scas
mov
cmp
mov
push
sub
fwait
shll
mov
rcl
pop
dec
jecxz
daa
jmp
sbb
xor
jg
xor
add
arpl
incb
add
cmp
sub
jl
push
lods
mov
push
ret
popa
hlt
xchg
jp
ds
pop
fcmove
inc
mov
or
cmp
mov
inc
mov
inc
sbbb
roll
xlat
inc
bound
mov
and
out
dec
cmp
jle
mov
ret
imul
ret
mov
push
scas
push
xchg
mov
push
mov
aas
push
cmp
clc
jne
int
fmull
sti
data16
push
pushf
ss
push
lea
and
jp
push
adc
jg
inc
jb
adc
outsb
dec
push
idivb
daa
rcrb
xchg
mov
add
or
sbb
xchg
xor
push
stc
popa
fucomi
add
jbe
pop
xor
push
outsb
popa
testl
shlb
mov
dec
dec
pop
mov
adc
je
inc
fldt
scas
repnz
sbbb
mov
ja
mov
dec
sub
bound
sti
sub
cmp
pop
mov
jno
iret
mov
das
inc
ret
mov
pushf
repz
inc
xorb
clc
push
sbb
sub
ret
imul
inc
gs
pop
push
pop
ret
rorl
lods
je
jge
inc
mov
movsb
mov
adc
fstps
cmp
mov
in
jecxz
sub
cwtl
inc
sbb
ret
jle,pn
mov
out
lcall
ret
add
mov
cld
dec
fildl
xor
stc
lods
iret
leave
pop
lea
mov
mov
cmp
pop
in
insb
notb
xor
jns
adc
gs
mov
int3
divl
mov
add
xlat
and
sub
shlb
adc
shr
xchg
mov
dec
arpl
ror
push
adc
lds
adc
pop
or
mov
mov
xchg
cmp
stc
clc
outsb
sar
pop
rcl
xchg
adc
test
hlt
xchg
insl
stos
les
stos
xor
sarl
adc
addb
push
fwait
xchg
loopne
scas
loop
or
es
mov
cmp
shll
shrl
mov
rclb
dec
cmp
mov
and
cmpsb
push
aaa
ret
mov
rcr
mov
cmpsb
or
rcrl
andb
pop
jecxz
push
cs
sbb
mov
push
inc
popf
aas
jle
fidivl
jae
movsb
adc
fldcw
cmpsb
or
roll
pop
pop
mov
mov
cmpsl
jno
call
cmpsb
outsl
out
push
jns
mov
pushf
mov
loop
adc
clc
enter
jge
cli
sahf
cmp
jp
loop
pop
adc
xchg
int3
fsubrs
ret
cld
mov
inc
test
cmpsb
cmpsl
mov
popf
scas
fstpl
lods
popa
sti
cmp
sbb
fdivr
lret
addb
fwait
xchg
shll
lods
jecxz
pusha
jg
mov
jns
xchg
pop
push
and
aad
popa
clc
xchg
ds
pop
pop
aas
lret
cmp
push
adc
mov
jle
mov
aad
xchg
cmpb
lea
xchg
fisttpl
incb
je
stos
pop
outsb
ficompl
data16
mov
push
ret
ljmp
mov
xor
out
push
lods
rcr
out
pop
lds
shl
pop
inc
xlat
enter
js
inc
cmp
xchg
inc
jecxz
dec
jl
dec
xchg
inc
popf
push
jae
fsubl
fcompl
inc
out
push
popf
ja
pop
push
pop
xor
cmpsl
fcompl
lea
rcl
sbb
leave
ss
cld
dec
call
or
pusha
mov
fstl
flds
pop
jne
mov
jbe
popaw
aad
outsl
mov
leave
pop
les
push
xchg
fnstcw
rcrb
xor
pop
ret
jne
sub
lret
sbb
inc
sub
sbb
cmp
mov
push
rcrb
push
and
xchg
fcmovbe
jmp
pop
fucomp
push
mov
jo
and
lea
mov
mov
mov
hlt
pop
fucomip
cmp
push
xlat
les
jge
push
jge
into
xor
int3
fnsave
repnz
mov
sub
sahf
dec
inc
push
ret
sbb
rcll
jp
cmpsb
jp
loop
test
shlb
xchg
push
dec
jnp
fwait
in
jae
sub
movsl
xor
cli
insl
pushf
adc
jns
mov
jle
xlat
sbb
ja
pop
out
clc
fdivrl
add
les
leave
xlat
jecxz
inc
push
adc
outsl
loopne
fistpl
pop
cmp
jo
jne
sub
iret
dec
sarb
add
dec
rcrb
stos
push
push
sbb
pop
das
cltd
sbb
pop
stc
filds
sbb
bound
jl
and
out
pushf
mov
adc
mov
movsl
in
push
xchg
cmpsb
jge
mov
pop
cmp
mov
std
incb
cmp
pop
sub
bnd
mov
aas
xlat
ret
push
mov
xlat
out
sar
aam
loope
bound
or
push
inc
stc
push
jbe
popa
or
push
mov
sar
sar
mov
add
or
sti
sahf
mov
mov
pop
mov
std
push
das
mov
jge
aas
adc
shll
dec
xor
or
dec
mov
push
mov
xchg
sbb
mov
pushf
fnstcw
mov
in
mov
mov
sarb
jle
sbb
adc
sub
sbb
pusha
mov
xor
push
out
mov
mov
jns
sbb
and
aas
repz
pop
and
sbb
std
pusha
imul
jp
int3
cli
sahf
jle
bound
fistl
cmp
jmp
pop
cmpsl
fstpl
aam
pop
sahf
xchg
mov
jg
shlb
bound
push
cmp
dec
xchg
cmpsb
iret
pusha
mov
insl
push
adcl
imul
ret
mov
lcall
leave
dec
loope
jns
stos
cmc
jp
jge
arpl
movsl
out
xchg
les
aad
fwait
lea
adc
lret
lods
aaa
push
aad
sbb
pop
nop
pushf
int3
ljmp
loop
fmul
popa
sti
pushf
repnz
popf
rcrl
xor
int3
movsl
scas
fldenv
jp
aad
test
pop
xchg
aas
add
mov
cmpsb
mov
sarl
sbb
pop
xchg
push
jnp
fwait
pop
mov
lods
cltd
sbb
sbb
icebp
loop
in
pop
in
fcmovu
cwtl
jbe
adc
mov
inc
push
outsb
mov
ss
popa
ja
cmp
jg
popf
and
xchg
insl
mov
inc
fcmovnbe
jl
popa
adc
mov
sti
sti
daa
and
ds
push
adc
cmpsl
dec
pusha
aad
pop
fwait
jns
aas
inc
mov
loop
add
fistl
mov
stc
outsb
or
inc
sub
push
pop
add
xchg
sub
fnstcw
test
aaa
dec
mov
jp
push
pop
pop
inc
cwtl
fistpl
or
cmp
mov
shlb
leave
test
int
fs
mov
les
mov
adc
pusha
aam
pop
icebp
push
ret
ds
jae
inc
sub
aas
loopne
rcll
loop
fidivl
int
imul
push
jp
imul
sarb
insl
fisubl
lds
int3
inc
out
dec
lds
dec
push
dec
dec
lods
dec
pop
inc
fimull
inc
lds
jp
ret
inc
ret
cmp
iret
shrb
cs
outsl
sub
shrb
lods
iret
stos
mov
daa
fcmove
shlb
leave
rclb
sub
cld
pop
mov
pop
pop
push
aad
lods
repz
fisubl
rcr
rolb
iret
mov
inc
fimull
jmp
and
xlat
outsb
mov
sub
testb
xlat
decl
add
movsb
mov
xchg
aam
xchg
mov
icebp
in
push
sbb
sub
hlt
mov
xchg
push
mov
fsubl
lds
enterw
cmp
add
fwait
int
aam
sub
pop
sbb
mov
pop
push
mov
data16
or
pop
push
or
insl
cmp
mov
push
mov
aad
test
and
lods
jnp
push
mov
repz
lret
push
or
das
adc
push
cmc
add
ret
jg
xchg
push
cmp
push
push
adc
shll
lds
faddl
push
push
mull
out
push
mov
lea
push
cmp
test
lea
xchg
mov
lret
addr16
pop
mov
test
adc
pop
pop
xor
jge
xor
fisttpll
ret
stc
jnp
aam
sbb
cmp
test
cs
jae
pop
rolb
insb
sarl
sub
and
mov
cltd
jne
cld
sti
xor
mov
cli
and
clc
xor
scas
pop
mov
insb
mov
cmpsb
sub
clc
jp
jl
cld
fdivl
js
aam
lds
pop
jge
aas
stos
inc
lds
aam
inc
jp
lods
sbb
mov
pushf
scas
lahf
inc
insb
adc
adc
movsl
pop
repz
xor
insl
cmpsb
int
jge
rcr
jno
xchg
jmp
xchg
add
and
int3
ja
shll
push
iret
lock
lods
add
lret
lea
in
aad
xor
sbb
adc
add
cmc
push
sbb
cmp
loope
adc
and
sbbb
dec
push
test
lea
xchg
push
cmc
aad
es
sti
pop
xlat
movsb
inc
sbb
cmp
xchg
mov
add
nop
and
adc
pusha
push
jmp
xchg
mov
loope
fcoml
push
cmp
loopne
andl
push
outsb
ret
decb
dec
cld
xlat
mov
add
ret
mov
mov
fwait
xchg
and
pop
repz
lock
or
pop
imul
fstps
and
fnstsw
fildl
ret
shl
mov
adc
out
repz
idivb
cli
xor
sbb
adc
fsts
push
lock
hlt
repz
movhps
int
mov
je
jl
rorl
lods
xor
jmp
lods
xchg
mov
lods
mov
xchg
push
repz
xchg
mov
cli
int
out
and
inc
daa
lcall
inc
fstpl
pushf
jns
cli
js
mov
pop
gs
out
cwtl
cltd
int
int
cltd
xchg
stc
in
pop
inc
inc
add
rcl
jl
and
mov
scas
pop
xchg
ret
or
pop
xchg
cmpl
rcl
push
sbb
add
sbb
mov
mov
ficompl
stos
popa
mov
cmp
loopne
and
sub
jnp
push
pop
pushf
sbb
gs
clc
xchg
std
pushf
jno
stos
or
sbb
cltd
jbe
sub
push
push
adc
fildll
cmpl
jg,pt
mov
mov
cs
or
xchg
sbb
add
sub
das
pop
cmpsb
das
insl
sub
in
sbb
aaa
into
inc
or
rorl
das
mov
ds
mov
sub
sbb
fwait
pop
cmp
out
fdivl
int
mov
add
cwtl
stos
xlat
aaa
mov
aam
mov
push
fisubl
clc
mov
cmp
pop
cmp
mov
idivl
cmpsb
mov
cltd
inc
ljmp
sbb
jle
movsb
pop
mov
push
lahf
stos
cltd
lahf
push
pop
push
notb
das
mov
mov
jnp
mov
inc
testl
mov
lahf
pop
adc
out
push
inc
mov
cltd
push
pop
push
xchg
pop
mov
lahf
aam
sub
jp
push
addr16
out
add
mov
adc
pop
push
mov
sahf
hlt
popa
ret
mov
jbe
sbb
shl
js,pt
ja
xor
popa
rorb
pushf
mov
push
ja
rcr
mov
pop
push
imul
jo
push
lods
pop
dec
pop
inc
jl
mov
mov
fnstcw
xchg
f2xm1
push
popf
mov
pop
insl
dec
je
es
push
adc
jmp
add
xor
xlat
int3
out
cltd
sub
sbb
mov
ret
nop
daa
addb
shll
aas
or
sub
outsb
aaa
xchg
fcmovnu
mov
xor
lret
dec
pop
sahf
add
inc
dec
jl
in
mov
pop
lds
add
pusha
xchg
hlt
pushf
and
int
push
xchg
rorl
jle
pop
adc
je
xchg
xchg
or
fldcw
stos
frstor
mov
pushf
popa
pop
test
jl
pushf
xchg
sbb
inc
mov
cmp
leave
pop
mov
sub
cmp
cmc
cmp
imul
pushf
ret
push
hlt
test
mov
mul
ret
xor
push
jl
rolb
inc
mov
repnz
mov
push
insl
add
cmpsb
popa
push
push
vmovd
inc
sub
adc
jbe
cmp
ret
inc
push
mov
jp
cmpb
lds
pop
pop
xor
inc
in
mov
push
xchg
dec
sub
lods
std
dec
popa
jl
mov
mov
leave
js
mov
sbb
xor
adc
int
jne
aam
mov
pop
shlb
mov
pop
xor
cmp
cmp
push
push
test
lods
das
xorps
psubusb
cwtl
sbb
mov
inc
lock
dec
sbb
adc
sar
sahf
inc
roll
sbb
leave
sub
pop
dec
cmc
cld
fnsave
arpl
push
bnd
bound
inc
cli
and
imul
sbb
cmp
aam
enter
xor
lds
aad
adc
adc
out
ds
mov
addr16
and
aaa
push
popf
cmc
int
sarl
push
in
lcall
mov
ja
nop
jl
push
enter
out
pop
aam
jp
popf
and
roll
push
lcall
mov
scas
arpl
std
testb
pop
lods
or
mov
cmp
sahf
mov
ja
ret
jo
xor
push
pop
dec
mov
sahf
lcall
add
push
add
or
jl
inc
mov
inc
fsts
inc
int
rclb
push
mov
cmp
addr16
pushf
adc
xlat
ret
lcall
sub
insb
jb
dec
xor
add
push
out
mov
int
outsb
xchg
popa
push
add
cs
mov
xchg
adc
pop
inc
inc
sbb
sub
sub
icebp
and
aas
insl
mulb
fsubs
test
xchg
cmp
sbb
sub
int3
pop
hlt
into
mov
imul
push
xchg
out
imull
lock
movsb
sysret
adc
jl
adc
mov
ret
xlat
popa
xor
add
lds
jne
jae
jne
pop
repz
movsb
roll
stc
gs
jnp
cmpsb
add
repz
pop
xchg
fcmove
mov
pop
push
mov
fstpt
imul
je
sbb
cli
sub
aas
out
pop
add
insb
dec
xchg
cmpl
add
popa
into
pop
cmp
negb
ds
jns
sbb
stc
ss
cmc
cld
dec
test
xchg
dec
into
test
out
jl
xchg
movsl
imul
adc
push
mov
out
cwtl
lea
push
iret
nop
rcl
jl
sub
mov
sti
xor
ficompl
in
mov
lods
push
ret
test
test
xor
jmp
pusha
inc
adc
cmc
xchg
std
pop
gs
fcoms
les
dec
jns
adc
cwtl
jp
repz
ds
xchg
outsl
repz
mov
jo
int3
adc
add
and
pop
xchg
dec
out
pop
test
ds
push
repnz
mov
lods
push
pop
pop
aad
push
lea
mov
fwait
pop
add
leave
fstl
mov
pushf
aas
fisubrl
pop
pop
cmc
out
xor
mov
jnp
cmp
sahf
into
out
cwtl
scas
outsl
pop
mov
lret
adc
shll
in
lcall
fsubs
test
sahf
add
sbb
mov
call
push
cmp
push
push
popf
mov
test
adc
lods
lret
pop
out
xchg
xor
loopne
cmp
aaa
decb
fwait
aaa
nop
mov
fcmovbe
pop
out
cmp
jmp
scas
dec
movsl
xor
fistpll
xlat
push
pop
and
pop
outsb
push
data16
lahf
inc
mov
test
cmp
add
fisttpll
jbe
xor
mov
int3
or
sbb
push
ss
lcall
ss
shr
out
out
jge
sbb
cmp
test
xchg
mov
fdivp
fsubrl
std
outsb
xchg
mov
xchg
int3
in
subb
fadds
cmpsb
mov
adcl
mov
pop
mov
xor
cmpsb
lcall
dec
cmp
repnz
jle
fisttpll
movsl
push
push
add
ja
popa
cltd
jg
lret
ss
adcb
iretw
sbb
push
mov
jge
inc
sub
xchg
xchg
adc
dec
movsl
mov
in
movsb
dec
inc
cmp
add
outsl
inc
xor
dec
lcall
xor
xor
std
in
fiaddl
lods
push
xor
popf
mov
test
shll
out
or
lods
adc
pop
shll
ret
mov
pusha
aas
mov
aaa
outsb
pop
into
out
ffree
add
pusha
setp
push
je
jbe
pop
mov
and
stos
pop
cmp
push
jge
lods
cmp
mov
movsl
into
fdivrs
shll
mov
jno
inc
test
jno
out
dec
mov
xchg
pop
shl
cli
sub
iret
adc
dec
add
add
into
cli
push
std
call
test
ret
mov
cs
mov
aas
js
mov
jnp
dec
xchg
cld
pop
scas
lea
ds
fcomp
jae
lods
mov
pop
stos
push
repnz
testl
cmp
or
sbb
rcrb
pop
jmp
out
out
mov
pop
mov
clc
das
push
adc
dec
popa
add
aad
adc
xchg
std
jns
xor
pop
add
jbe
pop
lahf
xchg
cmp
dec
jle
fcompl
sbb
rcr
or
mov
les
lea
mov
push
mov
mov
mov
adc
fnstsw
cmp
sub
mov
cmp
push
xchg
mov
jnp
mov
fwait
cld
dec
adc
mov
fadd
or
sbb
aaa
xchg
sub
sub
jge
dec
cld
mov
js
mov
cmp
and
push
fiaddl
rcll
shll
lods
stos
adc
push
popa
nop
xor
add
lds
lea
ja
or
cltd
in
mov
sbb
lds
jl
popa
add
in
mov
lret
mov
or
mov
ja
daa
gs
pop
fmul
xchg
out
int3
mov
out
pop
insl
xor
lea
aad
fsts
and
inc
stos
pop
xor
jae
les
ds
bound
cs
aam
sub
or
repnz
mov
mov
scas
mov
jns
mov
fdivl
xchg
mov
pusha
push
popa
fcmovnu
cmp
out
loopne
mov
or
fmuls
stc
push
cld
rcll
repnz
daa
jge
adc
push
outsb
add
js
gs
rorb
pop
inc
test
pop
push
mov
pop
jnp
jae
xlat
adc
je
xor
popf
stos
push
ret
xchg
lcall
push
shll
clc
popf
cmp
lret
data16
bound
cltd
pushf
push
mov
lods
repz
sub
cmc
cmpsb
je
xor
push
add
mov
adc
ljmp
mov
sbb
dec
xor
mov
int
ds
mov
inc
lea
adc
ljmp
pop
xor
cmpsl
jnp
push
shll
cli
cmp
and
jns
mov
fidivrl
movsl
mov
cs
loope
insb
icebp
xchg
insl
lea
jle
xor
bnd
push
ror
jl
cmc
movsb
repz
adc
mov
nop
mov
pop
pop
popf
sbb
loopne
cmp
pop
aas
jge
sub
lods
fnstcw
test
push
pavgw
les
cmp
decb
sbb
pop
inc
lea
xor
fcmove
popa
pop
in
sahf
push
iret
inc
ficompl
cmpsl
popf
popa
into
lret
sbb
ss
mov
xor
sbb
lret
push
aaa
cmpsb
fidivrl
test
mov
jl
cmp
out
sbb
inc
popa
ret
es
adc
xor
and
or
test
mov
push
pop
std
push
xchg
xchg
mov
mov
jbe
add
inc
mov
std
push
sbb
pop
jp
or
inc
rcrb
mov
inc
push
lret
sti
pop
outsb
adc
cmp
rcll
xor
shl
stos
dec
fsubrs
push
pop
sbb
data16
sub
inc
lock
jge
dec
imul
scas
xchg
cmpsl
xor
insl
mov
push
xchg
lahf
add
imulb
sbb
or
cmp
sub
cmp
repz
je
insl
lods
popa
inc
imulb
xchg
mov
loopne
cmp
push
and
sbb
cmp
test
lock
jecxz
std
fldenv
ret
comiss
push
jecxz
fdivrs
xchg
mov
push
ljmp
or
jbe
xchg
adc
pop
pushf
mov
cmp
xchg
aad
into
ror
int3
xor
push
mov
push
jnp
adc
xor
lods
rolb
sahf
ficompl
ja
jo
rclb
pushf
outsb
sbb
push
push
pop
ds
stos
fldcw
inc
pop
and
inc
test
sbb
andl
insb
lcall
push
jge
xlat
sub
ja
jle
xchg
xchg
mov
sahf
jecxz
aaa
into
shrl
adc
pop
movsb
imul
bound
dec
jno
sub
jo
xchg
pop
fnstsw
adc
insl
and
cmpsb
scas
push
ret
xchg
adc
shll
popf
adc
lods
clc
andnps
mov
leave
sarb
or
pushf
jge
adc
pop
jae
mov
jl
dec
jle
pop
sub
or
mov
test
outsb
and
push
jbe
loop,pt
xchg
lds
scas
out
push
pop
sbb
xor
ror
ds
add
aam
insb
adc
inc
adc
sbb
push
xchg
jg
imul
sbb
hlt
cmp
jp
into
jne
mov
icebp
popf
sti
fucom
arpl
pushf
jle
jmp
cmpsl
lretw
adc
shl
std
cmp
xchg
or
dec
cmp
xchg
test
jo
sub
outsl
aas
aad
aad
out
aad
fwait
div
xchg
inc
in
jmp
data16
ficoms
shrl
stos
jecxz
sbb
imul
fwait
sahf
cmpsb
rcrl
xchg
sub
in
scas
js
lea
xchg
push
pushf
push
aaa
sarl
and
sub
les
inc
push
jecxz
jno
jge
inc
je
add
jbe
out
mov
ficoms
mov
jnp
insb
xor
mov
mov
xor
arpl
push
test
leave
or
fsubs
pop
cmpsb
shlb
movsl
xor
push
sarl
cmc
pop
xor
pushf
call
push
jae
push
push
push
pop
iret
pop
pop
push
lret
xchg
pop
mov
je
sbb
push
jb
das
cmp
pushf
mov
mov
cmp
aas
rcll
jl
cwtl
or
int
and
add
rorl
jecxz
mov
mov
fmuls
xchg
jne
sbb
jb
pop
aad
or
xchg
cld
and
into
and
lret
es
xor
ret
shl
out
scas
push
jge,pn
cmp
cltd
into
lcall
cmpb
xlat
pop
and
pop
rcrl
jge
mov
je
mov
lea
cmp
lahf
push
mov
cltd
popa
jbe
xor
cli
stos
popf
lea
pop
fcmovne
sbb
in
fcmovbe
mov
xor
jge
aad
inc
jne
adc
outsb
xor
push
or
lea
pop
ds
fnstcw
mov
shll
insl
divb
aaa
sahf
clc
sbb
pushf
fisttpl
push
push
xor
movsl
pop
jbe
fildll
add
lahf
cmp
xchg
mov
das
adc
cmp
sub
pop
movl
test
xchg
movsb
xchg
popa
mov
xor
jbe
lods
popf
push
push
push
push
mov
rolb
cmp
xchg
or
jne
popf
insl
int
xchg
xchg
push
lock
sbb
bound
pop
cld
jp
and
mov
mov
cld
into
lds
mov
in
repnz
aas
xor
xchg
stos
mov
xor
rcr
gs
sbb
test
xor
pop
mov
dec
std
popa
fld
xor
mov
fstpt
sub
stos
pop
mov
push
mov
fsub
adc
inc
bound
pushf
lahf
cmpb
dec
fcos
out
sbb
aam
jno
outsb
shl
sbb
ja
jl
pop
js
fs
add
jp
xor
aam
pop
daa
xor
sbb
test
push
pop
out
cwtl
imull
or
out
cs
lds
mov
add
pop
push
pop
sbb
mov
push
mov
clc
in
in
ja
mov
jns
push
add
mov
adc
sub
sarl
xchg
int3
loope
jecxz
outsb
sbb
jl
shl
nop
adc
push
xchg
rcr
mov
lret
xor
aad
pop
movsl
and
jle
lea
jnp
push
jne
mov
jle
roll
mov
sarl
push
dec
mov
fwait
fwait
outsb
daa
iret
mov
push
push
ds
nop
dec
mov
adc
inc
and
popa
test
repnz
pop
lods
dec
les
mov
add
mov
ffree
out
cld
pop
pop
fcmove
mov
jbe
sbb
pminub
pop
inc
and
das
dec
fwait
cwtl
popa
mov
push
les
test
sub
jbe
mov
jl
pop
cli
adc
jnp
aam
shl
lcall
pop
xchg
pop
inc
pop
jmp
xor
pmullw
xchg
sbb
outsl
in
sbb
adc
mov
xchg
popf
out
mov
mov
xchg
popf
jle
inc
fcoml
ror
sub
das
mov
mov
hlt
xor
mov
ss
mov
mov
aam
testb
cmp
aas
insb
arpl
insl
aas
lahf
and
pop
mov
out
pop
and
adc
test
dec
hlt
mov
push
and
data16
lods
sahf
adc
das
repz
mov
cmp
jge
cmp
mov
stos
ret
imul
rcrb
scas
push
popf
int
sbb
in
test
jmp
movsl
sub
fcmovu
and
push
pop
jbe
leave
cmc
dec
add
pop
mov
ss
stc
fisubrl
ret
mov
pushf
push
lcall
cmp
out
xchg
inc
mov
mov
call
pushf
add
pop
cltd
cs
mov
jns
cs
leave
mov
push
sbb
lods
mov
flds
imul
repz
aas
mov
aaa
sub
mov
jge
out
sahf
push
ja
lods
jnp
xchg
leave
cmc
xor
bound
scas
jg
adc
dec
ret
push
xor
lret
ljmp
jl
inc
fimull
mov
div
mov
mov
mov
inc
push
adc
xor
int
sbb
xchg
jle
rcl
mov
in
adc
push
in
rcrb
adc
lea
leave
repz
cmp
mov
faddl
pop
cld
jl
mov
ret
xchg
scas
clc
fsubs
popa
sbb
les
enter
and
lock
inc
sarb
lahf
shl
push
xlat
clc
popa
mov
movsl
fisttpll
ror
and
pop
ds
fisttps
mov
ljmp
xor
fistl
rcrl
test
cmpsl
jnp
mov
mov
push
or
negl
adc
lret
cmpsb
jns
dec
aam
mov
out
cld
mov
lock
jge
push
mov
xor
cwtl
cltd
or
jno
inc
jo
std
xor
aaa
repz
call
inc
dec
movsl
sti
xor
movsl
ja
cmp
sbb
std
pop
push
pop
xchg
test
sti
push
and
inc
pop
cld
pop
cltd
aam
cmp
pop
popf
ss
jge
and
loop
push
sub
mov
pop
pop
mov
adc
fdivr
nop
push
xchg
jne
xor
xor
outsb
hlt
jnp
rclb
lahf
lods
and
cmp
fstpl
lods
push
inc
inc
rorl
je
pushf
jb
fnstcw
ret
adc
mov
jns
fwait
xchg
cmp
mov
sbb
pop
outsb
xor
repz
cmp
data16
test
mov
cmova
sbb
aad
cmp
adc
xor
mov
pop
jg
outsb
dec
jae
mov
mov
lret
in
stos
adc
fisubrl
xor
push
std
inc
sub
setl
and
mov
cmpsb
sbb
sub
rorb
adc
pop
mov
iret
sbb
adc
pushf
push
mov
mov
cmc
push
int3
adc
scas
mov
cmp
test
jge
dec
mov
jg
fdivrs
pop
push
sbb
popf
adc
cltd
mov
inc
jp
and
nop
sub
lahf
push
pop
notb
int
add
out
mov
mov
das
pop
into
push
fwait
ja
pop
xor
ret
arpl
gs
push
sbb
into
sarb
stc
sbbb
jle
outsl
add
xchg
dec
jb
gs
lds
shl
popa
sahf
mov
push
stos
pushf
lret
hlt
mov
cmp
cmp
lret
das
jns
xor
filds
popa
xor
fnsave
lods
out
clc
cltd
mov
jl
xchg
fcomps
pop
repnz
mov
call
pop
xchg
mov
or
sbb
or
pop
aad
ja
cld
dec
cmpsb
rol
dec
sbb
das
lcall
out
xor
xor
and
cld
pop
and
mov
pop
cmp
sub
adc
pop
cwtl
cmp
cmp
ja
add
addr16
fistpl
mov
push
fcoml
xchg
fwait
inc
popf
pusha
inc
rcrl
aad
push
mov
repnz
sub
jne
movsl
lds
cli
cwtl
and
add
out
cmpsb
add
mov
cmp
orb
mov
add
pop
int
push
pop
ret
pop
aas
shll
jge
mov
or
and
addr16
mov
pop
jle
inc
icebp
inc
ret
mov
sahf
mov
imul
xchg
outsl
loopne
mov
fnstenv
test
lcall
jo
je
inc
inc
pop
mov
mov
adc
xchg
fdivrs
mov
dec
or
push
dec
jo
mov
popa
and
push
fnstcw
xchg
shrl
push
xchg
cld
mov
jne
pop
mov
cmpb
call
dec
add
lods
add
sub
mov
adc
lea
sbbl
ror
aas
ret
jmp
adc
fildl
pop
pushf
xchg
push
cmp
jge
popa
mov
mov
mov
cmp
push
or
lret
sbb
pop
inc
adc
inc
fcoml
dec
push
mov
pushf
fmulp
sbb
insl
cltd
sub
jg
jo
fsubp
ljmp
popa
pop
adc
jl
lods
mov
sub
pop
addr16
int
and
enter
xchg
gs
lahf
mov
cld
nop
jecxz
pop
scas
jmp
jle
outsb
data16
jp
icebp
sub
jns
mov
clc
test
sub
cli
es
and
hlt
push
outsl
xchg
inc
pop
popf
inc
jmp
clc
push
hlt
inc
out
cmp
add
jmp
daa
xchg
addr16
mov
push
fisttpll
xor
inc
ds
xchg
mov
sbb
hlt
cs
ficoml
sub
aad
cmp
mov
jmp
addl
rcrb
popa
mov
push
xor
test
pop
jecxz
inc
inc
sbb
aam
xchg
xchg
das
fwait
icebp
xor
repz
jle
xor
jecxz
lcall
xchg
es
lods
mov
push
pushf
jne
adc
pop
push
mov
test
sub
aad
sysexit
faddl
mov
pop
xor
mov
lea
sahf
pushf
pop
sti
popf
shlb
out
outsb
ret
cli
aas
cld
std
dec
lds
mov
pop
stos
arpl
addl
jmp
mov
push
xor
mov
outsb
cmp
cmpb
ret
mov
push
mov
jl
call
cltd
push
js
pop
out
add
adc
xchg
pop
cs
aaa
lcall
xor
push
jg
addr16
jl
adc
xor
mov
ds
cmp
rcr
outsb
inc
cmp
mov
bound
in
mov
lods
xchg
dec
orb
adc
sahf
dec
mov
adc
js
inc
add
mov
cmpsl
mov
pop
xor
xor
xor
aam
xor
sbb
mov
xchg
mov
push
pop
xor
movsb
xorl
fwait
xchg
pop
dec
fnstsw
test
popa
xchg
daa
pop
mov
adc
push
mov
xor
push
xchg
adc
test
notb
cmp
outsb
sub
inc
jp
stc
xor
mov
lods
xchg
add
jl
aas
cli
jmp
or
add
xor
pop
cltd
insl
negl
jecxz
jmp
jg
xor
pop
sti
je
jp
xchg
sahf
add
test
xor
xchg
xchg
jne
inc
aaa
fnsave
mov
pop
inc
popa
gs
add
call
sbb
ret
pop
fs
mov
roll
pop
dec
stc
mov
ficompl
pop
fcmovnbe
out
sti
rcrl
and
and
ret
aam
loopne
fisubl
stos
hlt
xchg
sbb
pop
mov
dec
jle
pop
rclb
int3
sub
cmc
dec
int
popa
mov
outsb
les
shrl
xor
lret
fisttpl
or
and
repz
imul
pop
lea
repz
mov
cmp
pop
fcom
sbb
outsb
pop
aad
sahf
dec
fldcw
or
pop
push
int3
xchg
inc
pop
mov
aam
fbld
loopne
mov
jge
xchg
repnz
cmp
sbb
sbb
aaa
sti
movsb
mov
pop
pop
cmpsb
mov
pop
adc
ds
leave
sti
sarl
decb
enter
outsb
mov
pop
fmul
pop
jge
lcall
in
pop
push
pop
mov
loopne
fcmovu
cmp
mov
enter
dec
std
jp
push
pop
aaa
mov
sbb
ret
in
outsb
push
popa
fisubrl
imul
popf
pop
lret
lods
ljmp
mov
push
lahf
sahf
sahf
stos
pop
lcall
in
jmp
idivl
cmp
scas
fdivr
dec
aad
cltd
jae
adc
cli
push
test
fs
jnp
or
bound
add
mov
and
xchg
rcr
cli
int3
aam
stos
daa
mov
pop
push
jle
and
jge
sarl
xor
stc
bound
adc
icebp
ret
jmp
jl
mov
fistpll
rcll
xchg
xor
inc
mov
pop
cmp
add
into
adc
cld
les
and
sbb
pop
cs
movsb
mov
jl
mov
popa
pushf
xchg
jp
test
cs
pop
xchg
and
scas
sub
aas
cli
nop
lcall
loope
lea
pop
dec
bound
sbb
inc
lods
loope
fbld
ret
sbb
push
rcrb
xchg
inc
rcll
leave
pop
jo
jne
orb
pop
mov
sub
pop
idivb
push
enter
fmul
int
lahf
lods
rorl
ja
fsubrs
int3
rcll
pop
and
shll
add
inc
mov
popa
adc
sub
adc
dec
cmp
shll
rolb
cltd
adc
mov
add
fxch
sahf
adc
xorl
pushf
mov
gs
insl
pusha
adc
pop
and
push
in
cmp
ja
xchg
negl
pop
mov
pop
clc
subb
pop
add
mov
jns
push
jbe
jo
mov
xchg
ficoms
outsb
aas
cld
enter
lods
pushf
jle
pop
mov
das
cli
jns
dec
push
rclb
adc
jbe
pusha
movsb
xor
pop
xchg
mov
sahf
scas
fistpl
ffree
stos
in
mov
xor
adc
cwtl
outsb
leave
dec
inc
dec
sub
mov
inc
cmpsb
lea
rolb
loopne
mov
xchg
mov
aaa
rorl
inc
push
push
cltd
push
adc
lds
out
mov
sarl
fldenv
mov
cmp
aas
mov
sub
lea
jmp
rcrb
aam
rcll
add
cmpsb
shll
and
mov
mov
dec
movsl
jg
fmuls
pop
sbb
rorl
xor
xchg
pop
mov
rolb
scas
sub
add
and
and
imul
popa
sbb
mov
mov
je
jnp
cli
cwtl
mov
or
xchg
inc
jo
ljmp
pop
sti
pushl
adc
ret
ljmp
cmp
das
pop
shl
mov
push
dec
scas
jb
cs
mov
adc
mov
jno
popa
lcall
mov
xlat
xor
inc
adc
adc
pop
int3
into
lods
outsb
mov
movsl
adc
insb
outsb
xor
dec
mov
xor
pop
xlat
or
push
aaa
add
faddl
movsb
mov
into
xchg
mov
mov
or
xchg
push
adc
pop
pop
mov
cmp
stc
xchg
sbb
ret
or
inc
in
sbb
into
pop
cld
out
scas
aad
sbb
push
fldt
imul
call
pop
mov
adcb
pop
sbb
cmp
jp
mov
xor
dec
sbb
inc
icebp
pushf
lea
popf
arpl
shlb
imul
clc
outsb
mov
push
test
pop
xchg
mov
sub
mov
push
andb
xor
adc
daa
jmp
scas
inc
cmp
push
pop
shl
sbb
jle
or
imull
leave
dec
or
pop
push
aaa
pop
jnp
push
fnstcw
movsb
rcll
aaa
jne
and
leave
pop
or
add
int3
sbb
sahf
push
cs
jnp
mov
daa
mov
aad
decl
push
xor
lea
xor
push
in
mov
lods
cs
dec
js
dec
outsl
adc
mov
push
fdivrl
pop
in
mov
mov
inc
xor
pop
je
xchg
in
rcr
jne
pop
dec
popa
pop
pop
int
mov
ds
outsl
pusha
or
pop
mov
popa
pop
lods
sbb
int3
in
lods
into
inc
adc
jmp
lods
jbe,pt
and
mov
xor
mov
in
roll
mov
call
mov
sbb
mov
mov
cltd
jbe
add
mov
push
adc
lea
add
push
or
pop
outsb
mov
je
jecxz
dec
ret
incb
xor
sbb
sbb
xor
mov
cld
dec
ret
jge
sub
repz
cmp
sti
arpl
ret
cltd
call
push
inc
mov
test
add
into
int3
loopne
fdivs
mov
popf
push
icebp
aaa
std
shlb
pushf
cmp
pusha
pop
inc
add
mov
ss
push
cwtl
sti
aad
mov
sub
ss
xor
dec
idiv
int
shrl
xor
xchg
adcb
push
adc
mov
add
cltd
popa
fisttpll
jno
aam
clc
mov
pop
dec
pop
ficoms
imul
mov
das
out
sti
int3
dec
out
idivb
ret
or
iret
aas
jb
and
jge
sbb
push
mov
push
adc
jl
rorl
movsl
mov
pop
jp
scas
push
sbbw
cmc
adc
rcrl
xchg
lea
pop
mov
pop
sbbb
pop
leave
aam
sbb
test
loopne
idiv
outsl
cmc
sbb
dec
lds
mov
enter
mov
movsb
fisttpl
test
int
push
test
xor
dec
test
adc
cli
outsl
in
dec
sbb
push
jg
cs
mov
iret
int3
dec
cs
fcmovnb
push
or
lea
fwait
pop
gs
lds
gs
jmp
rcrl
mov
int3
test
ror
xchg
mov
pop
pop
inc
adc
mov
inc
sub
cli
or
faddl
dec
mov
pop
mov
jns
pop
cmp
fisttpl
and
and
dec
cmpl
movsb
sbb
adc
cs
mov
iret
int3
dec
sub
push
xchg
inc
jg
pop
xchg
add
pop
add
add
rcrl
mov
int3
imulb
mov
rcll
rcr
aam
pop
mov
test
xchg
ja
js
stc
decl
pop
xchg
sub
jl
jle
loop
negl
sbb
cmp
out
mov
out
xchg
clc
mov
inc
push
xlat
jns
pop
rorl
inc
pop
cmp
ret
inc
push
stc
pop
in
mov
jno
inc
pop
and
adc
xchg
inc
repz
int
push
inc
xchg
int
loop
fwait
pop
cs
fsubl
pop
ljmp
in
imul
subb
pop
xchg
dec
inc
setbe
mov
dec
ret
xchg
ljmp
cmpb
aaa
int3
sbb
test
pop
jbe
sbb
cmp
mov
cmp
je
ret
cmp
ds
outsb
adc
or
dec
nop
pop
rorb
or
mov
push
lcall
push
fwait
push
xchg
stc
pop
mov
sbb
dec
fildl
ret
bound
adc
cld
int
test
and
gs
xlat
outsb
mov
pop
and
fldcw
leave
adc
push
aad
mov
flds
jge
filds
fstps
push
pop
xor
mov
stos
vdivss
subb
lods
push
fsubs
pop
ret
movsb
lods
test
popa
xor
inc
cmp
mov
aaa
push
mov
mov
mov
inc
jnp,pn
xchg
sbb
push
cs
sbb
js
cmp
mov
and
mov
in
mov
inc
jl
xor
icebp
lret
adc
adc
addps
scas
push
push
push
mov
xchg
out
sub
pop
pop
mov
pushw
xchg
xchg
xchg
lret
sbb
jnp
js
scas
push
aad
test
out
fiaddl
fcoms
stos
pushl
test
xor
xlat
lahf
test
or
mov
sbb
jge
xor
aam
jge
inc
push
maxps
fidivl
add
inc
mov
rcrl
lods
negb
and
clc
dec
and
inc
and
mov
addr16
cmpl
in
insl
rorl
inc
mov
data16
rcr
mov
adc
fcompl
cmc
pop
faddl
insl
adc
js
mov
mov
jp
xor
jns
lcall
cmp
jnp
pop
fnstsw
cmp
loop
fisttpll
mov
lahf
mov
enter
or
jecxz
iret
or
xor
sub
sahf
adc
push
cs
xchg
fnsave
pop
repz
cmpsb
pop
jmp
mov
inc
jns
mov
ljmp
add
cli
xor
jecxz
gs
leave
mov
or
jno
add
mov
ss
fcmovbe
rcrl
stos
ret
lahf
testb
mov
xor
mov
pop
fildll
adc
dec
in
shlb
stos
sahf
out
out
outsl
jno
popf
filds
sub
xor
jno
in
fidivrl
xor
add
fs
push
pop
lcall
pop
xor
lret
lea
add
ds
sarl
mov
add
inc
inc
lds
popa
and
push
lcall
xchg
loopne
cmp
hlt
sub
neg
mov
mov
sbb
cmp
out
mov
sub
hlt
movsl
imul
mov
pop
jb
xor
rcrl
xchg
aaa
daa
iret
int3
clc
adc
fs
enter
lods
lcall
mov
push
loop
xlat
aad
xor
negl
sbb
aas
insl
aaa
pushf
flds
cmc
les
push
ret
outsb
mulb
cmpsb
add
out
push
and
cmp
jns
loopne
and
pop
mov
xlat
call
aas
shll
push
popa
cmp
cmc
mov
out
cwtl
dec
pop
xor
add
lret
mov
fstps
cld
dec
bound
lret
enter
pop
mov
add
dec
insl
cwtl
jge
push
loop
jl
jmp
dec
sbb
lock
movsb
mov
pop
fbld
xchg
fs
je
pop
add
and
mov
outsl
dec
call
shlb
cmp
popa
ret
adc
daa
stc
call
cmp
xlat
push
aaa
pop
jecxz
push
fwait
insb
movsb
js
jecxz
add
cmpsb
mov
or
scas
pop
repz
das
int3
insl
repnz
xchg
sti
insl
faddl
repz
xor
lret
dec
or
frstor
pop
idiv
cltd
loop
mov
sahf
dec
jae
jge
and
int
hlt
mov
xorb
lods
adc
out
pushf
mov
clc
add
pop
add
jp
fwait
int
mov
imul
jle
test
shlb
test
push
int
je
jb
add
pushf
push
cmp
add
push
mov
add
pushf
mov
repnz
repnz
adc
cmp
mov
sbb
mov
ds
fcomp
pop
adc
xchg
mov
adc
cli
ja
rsqrtps
into
dec
mov
adc
push
mov
shll
ret
and
aam
xlat
jb
jo
ret
sub
pop
jle
aad
mov
cmp
or
xchg
push
mov
adc
lock
pop
mov
pop
jne
pop
rcrl
test
or
into
aas
xor
jge
dec
push
repnz
into
dec
iret
pop
stos
mov
inc
addr16
lods
sbb
jne
mov
sub
xchg
adc
pop
shll
sbb
or
iret
push
sbb
out
rol
aas
icebp
movsl
mov
std
testl
push
mov
pop
sbb
mov
sub
pop
movsb
dec
or
insl
clc
das
rol
out
mov
fldt
dec
pop
mov
adc
cld
and
mov
outsl
pop
and
and
and
pop
jns
faddl
push
out
xchg
cli
push
sub
pushf
mov
adc
testl
ja
fwait
xorb
pop
out
mov
mov
sarb
popa
pop
xchg
inc
mov
mov
cmc
add
addr16
sahf
xchg
xor
sub
int
pop
jne
inc
adc
mov
pop
mov
sbb
fwait
cmp
adc
adc
cmc
sub
cmpsb
popa
and
sbb
insl
or
mov
shrl
mov
sub
mov
push
xlat
mov
scas
add
popf
cmc
sbb
cwtl
dec
dec
jbe
sbb
pop
dec
jbe
data16
out
inc
pop
ret
adc
outsb
adc
xchg
inc
shll
push
into
out
or
pop
rorb
adc
aam
lock
fidivrl
push
pop
popa
test
je
sti
cmc
mov
push
xchg
into
iret
or
adc
pop
movsb
rclb
ss
jne
sarb
push
pop
in
add
or
outsl
sarl
js
mov
mov
mov
pop
addr16
xlat
inc
enter
enter
shll
jo
add
ret
pop
das
fdivl
sbb
xor
std
arpl
ds
out
lds
mov
lret
cmc
aad
rorb
pop
sarl
xchg
ret
pop
punpcklbw
pushf
popa
fwait
bnd
sub
jb
mov
jl
insb
xor
dec
neg
pop
shl
or
push
inc
or
push
sub
push
xchg
mov
fiaddl
sub
fsubl
jbe
mov
xlat
pop
adc
ss
jnp
fadd
rcll
sbb
lock
ds
or
loopne
add
lcall
jo
sbb
mov
jl
xchg
inc
xor
sub
lods
ret
adc
mov
popf
ja
jo
inc
addb
jnp
push
or
push
dec
and
push
sbb
add
rol
add
push
and
sbb
cmpsb
cmp
rorb
mov
push
dec
scas
lcall
pop
mov
cmc
xchg
insl
ficompl
jg
xor
jge
rolb
sub
xchg
in
outsb
ret
push
ret
lods
lret
sub
es
inc
mov
dec
mov
jge
pop
shrb
mov
jp
gs
mov
cmp
sbb
shl
mov
xchg
dec
xorb
data16
mov
adc
popf
sbb
push
xchg
nop
dec
ss
test
pop
pop
jecxz
out
jbe
aad
mov
pop
adc
sbb
rclb
fsubrl
jge
insl
push
rcl
jmp
cli
xchg
insb
int3
stc
lcall
pushf
sbb
std
xchg
jae
inc
cmp
sarl
loop
mov
xchg
mov
sahf
fs
rolb
repz
hlt
insl
pop
xor
dec
push
icebp
xadd
cs
es
std
fnstsw
or
fstl
jmp
pop
fistl
xor
dec
imul
mov
bswap
test
xchg
shlb
test
sbb
pop
xchg
aad
divb
push
push
loop
ja
xchg
mov
cs
push
xor
cli
fwait
mov
cmpsb
fs
and
lods
xchg
mov
pop
jbe
mov
sub
or
jnp
rcrl
mov
rolb
xchg
sub
cmp
stc
ss
dec
loope
icebp
xchg
iret
pop
loope
out
shll
dec
mov
jle
or
cwtl
test
lcall
mov
out
aaa
fsubrl
fdivs
xor
les
test
fmull
lock
adc
scas
enter
xor
adc
mov
in
xchg
loop
cli
mov
sbb
scas
add
xchg
mov
rcrb
cli
push
jp
mov
stc
js
test
sahf
mulb
fstp
dec
add
imull
outsl
insl
sbb
pushf
pop
les
adc
mov
and
repz
nop
adc
aas
mov
inc
loopne
ret
enter
data16
cmp
dec
inc
push
push
mov
aad
mov
movsl
sahf
adcb
out
sbbb
add
scas
in
mov
jns
jb
mov
sysenter
sbb
shll
xchg
jno
xlat
mov
out
pop
sbb
mov
out
mov
mov
cmpsb
pop
rclb
movsb
add
mov
cmp
cmp
sub
dec
imul
fnstsw
mov
cwtl
test
dec
leave
ss
jp
subl
add
dec
push
mov
sbb
ja
mov
adc
cmp
leave
pop
mov
cwtl
mov
pop
les
add
test
push
int3
jnp
movsb
ret
sub
inc
minps
xchg
insl
mov
aas
pushf
add
rcll
test
les
pop
dec
jecxz
fcoms
xchg
mov
aaa
fsubl
mov
mov
jb
mov
fcoms
shrl
sarb
lcall
xlat
movsl
push
sbb
js
lcall
dec
cld
mov
pop
jl
test
and
cmp
mov
sarl
sti
mov
fs
cwtl
repz
and
clc
addr16
fisttpll
adc
xchg
mov
xor
repnz
dec
dec
lock
fnstcw
sub
and
jge
or
lods
filds
or
jl
jl
mov
imul
push
mov
xchg
pop
push
sahf
shl
and
and
or
neg
pop
xchg
insl
sarb
fidivs
push
cwtl
add
cmp
das
pop
lcall
adc
arpl
mov
cltd
test
sub
xor
sbb
ret
pushf
jae
arpl
push
pop
loop
dec
adc
xchg
inc
rorl
push
popf
push
dec
int3
lret
xor
popa
push
mov
dec
xchg
rcr
sahf
addb
xchg
int
mov
mov
mov
mov
cmp
mov
daa
mov
xlat
xchg
insl
mov
pusha
or
adc
dec
xchg
insl
aam
lds
pop
ds
add
enter
cmp
cld
stc
cmc
xlat
inc
sbbb
fwait
andb
loop
push
je
cld
add
cld
and
mov
popa
iret
rolb
lds
cmp
lahf
popa
cmp
xchg
cmp
jns
sub
lret
mov
jbe
int3
mov
fcmovb
daa
movb
addr16
pop
imul
addl
jecxz
idivl
push
ja
loopne
add
fcoml
movsb
mov
adc
daa
xor
call
push
jecxz
rcll
movsl
fsubl
shrb
popa
add
adc
push
clc
je
dec
shl
mov
cs
aam
lock
push
pop
lods
jge
fcoml
pop
adc
add
pop
shrd
jmp
stos
cmp
dec
pop
xchg
addl
xor
outsb
cmp
jnp
sbb
fwait
push
mov
cmp
jno
sahf
inc
arpl
cli
sbb
fnstsw
int
xchg
mov
aam
scas
jg
leave
push
mov
popa
shrl
and
and
jne
mov
outsb
push
cli
aas
jns
std
cmpsb
loopne
shl
movsl
pop
sub
add
mov
enter
sbb
pushf
aas
outsb
pop
add
js
pop
mov
xor
sbb
pop
out
mov
push
out
aaa
jle
cmpsb
jg
xchg
outsb
lret
jle
xchg
cli
xchg
insl
jne
ja
fnsave
push
ficompl
mov
insl
test
test
push
sahf
ja
mov
mov
inc
mov
ret
xlat
cli
dec
push
inc
mov
mov
pop
out
xchg
popa
jle
fnsave
jae
and
inc
outsl
leave
xchg
cmp
pop
sub
in
xchg
fnstsw
mov
mov
inc
stos
sub
jns
mov
pop
sbb
jne
ja
adc
pop
movsb
lret
divl
cmp
aam
pop
mov
pop
dec
sahf
outsb
pop
sahf
pop
pop
ds
add
push
xchg
pop
xor
dec
mov
ret
cmp
pop
mov
xchg
inc
mov
cmpsb
lcall
xor
sub
push
cmp
lods
scas
shlb
adc
xor
pop
ja
sbb
rorb
int
cld
pushl
cmpsb
cmpsb
mov
loopne
mov
mov
push
pop
fildl
or
adc
jbe
aaa
cmpl
lds
dec
mov
dec
xchg
stos
stos
xchg
inc
mov
cmp
jge
paddsw
cmpsb
lret
aad
or
mov
mov
xchg
add
ss
push
mov
dec
fwait
and
lret
ror
adc
mov
jge
getsec
into
scas
leave
mov
lcall
mov
icebp
fwait
rcrb
cmp
loop
imul
insl
cmpsl
lret
inc
pop
into
ljmp
jns
push
std
mov
pop
shl
inc
insl
and
sub
cmp
mov
xor
pop
jb
push
je
lods
aaa
dec
sub
sbb
test
mov
push
mov
sti
sbb
mov
lahf
pop
mov
lret
sbb
jge
xchg
or
ret
mov
fs
cli
shlb
xor
rcr
sbb
lret
jge
jo
clc
jp
arpl
sub
data16
pop
mov
loope
mov
jg
dec
stc
cmp
ds
add
pop
shll
outsl
dec
ret
mov
xlat
sbb
cmp
pop
push
fadds
lods
sbb
mov
pop
out
je
cmp
enter
scas
imul
imul
sbb
cltd
loope
sbb
jnp
aas
push
mov
out
out
dec
xchg
push
lods
in
testl
mov
xchg
jno
cld
test
lahf
sti
inc
lods
dec
test
dec
jmp
repnz
mov
js
pop
mov
mov
push
test
xor
fisubl
popa
into
sub
movsb
mov
insl
jbe
xchg
lahf
int
jns
cli
mov
call
jl
jae
stc
mov
adc
mov
jns
mov
push
dec
xlat
leave
je
mov
push
loop
mov
daa
mov
xor
mov
lods
pop
mov
jp
mov
sbb
fwait
cmp
test
cmpsb
xchg
das
mov
and
xor
mov
mov
push
aaa
xchg
mov
pusha
push
or
push
dec
jge
sarl
mov
out
test
fs
mov
aas
dec
lret
clc
sub
ret
xor
dec
sti
lea
xchg
push
push
mov
scas
in
jge
popf
test
out
add
out
shlb
push
mov
jmp
sbb
ficoml
ret
fwait
ja
stos
and
pushf
stos
addr16
mov
cmp
pop
mov
inc
lea
sub
outsb
push
fdivs
sbb
aam
lds
pop
xlat
pop
and
push
out
pop
lods
cmp
pop
lret
roll
popf
dec
enter
mov
fld
push
cmpsb
xchg
in
shrl
xchg
push
nop
pushf
fiaddl
rcrl
fstps
adc
or
das
adc
lods
divps
mov
lcall
xor
mov
sbb
pushf
push
aam
jbe
in
xlat
mov
lods
mov
outsb
dec
fildll
leave
aam
xchg
cli
dec
pop
push
sti
cmpsb
loope
and
inc
subb
inc
enter
and
insb
jp
jmp
rcr
ja
out
push
inc
cmc
gs
pusha
mov
inc
cld
jno
fists
aas
cld
ja
lcall
into
mov
pop
in
rol
jp
pop
ds
cmp
mov
mov
mov
cmpsl
hlt
test
adc
fmulp
push
or
push
inc
mov
inc
lea
jbe
vminsd
dec
outsl
in
int
into
xor
iret
pop
jne
rorb
mov
xlat
sub
pop
rcll
jecxz
mov
lds
pop
cmp
jge
aas
mov
cltd
xor
push
mov
mov
pop
daa
popa
mov
cs
jl
jne
leave
bound
jnp
mov
adc
pop
hlt
mov
insl
push
repnz
jo
aad
pop
fidivl
insl
push
pop
mov
cmpb
xchg
fistl
lcall
hlt
test
lods
mov
xor
mov
rorb
cltd
pop
cmpsb
mov
mov
pop
repnz
inc
sbbb
inc
cmp
xor
fistpl
jl
sbb
xor
dec
std
mov
push
int3
fidivrl
dec
add
cmpsl
dec
adc
popa
cmp
push
aad
dec
xchg
aad
xor
fsubrl
push
cwtl
mov
push
sarl
test
cltd
mov
outsl
and
cld
cld
sub
fwait
mov
insl
adc
clc
sub
cs
lods
mov
ret
or
pop
cmp
insl
mov
mov
lds
sbb
push
push
add
cmp
lods
push
cmp
sub
lcall
push
cmpsb
jle
jle
add
pop
adc
or
jne
outsl
mov
scas
dec
pop
es
add
xchg
mov
dec
bound
xchg
mov
cmp
sahf
lcall
scas
inc
lods
jle
push
fistl
andl
subb
popa
cmp
fisubrl
mov
pop
clc
cld
dec
popa
add
fisubrl
jle
rolb
insl
mov
cmp
mov
mov
and
out
or
into
push
ja
xor
les
jne
jb
fstpl
jg
frstor
lods
push
mov
mov
cmp
sub
insb
sti
negb
in
xor
xor
mov
out
pop
jle
sub
lods
jmp
aad
dec
scas
pop
lock
repz
vpaddsw
addb
inc
jl
mov
jnp
in
or
scas
hlt
loopne
lahf
sarb
aad
popa
jne
inc
and
inc
sarb
sub
mov
dec
push
repnz
test
popf
fs
jbe
push
lock
or
add
cmpsb
push
popf
js
fidivl
adc
push
aam
mov
lods
adc
cmp
mov
push
clc
repz
xlat
cmp
pop
pop
cmp
mov
shl
dec
xchg
xchg
movsb
xor
jne
fstpl
std
call
lahf
cmp
mov
mov
in
in
cmc
push
cmpsl
bound
sub
sti
cmp
outsb
loopne
arpl
push
mov
pushf
aam
pushf
bnd
incb
outsb
sub
xlat
sahf
pop
xchg
push
xchg
jbe
mov
or
xchg
fldt
push
popf
add
lret
jno
stc
mov
xchg
jle
test
test
lea
mov
popa
add
cld
xor
repz
xchg
sub
ja
pop
nop
ficoml
int
mov
cmpb
sbb
adc
sbb
mov
repz
ja
mov
call
mov
mov
jl
pop
xor
xchg
ds
aad
push
lock
loopne
pushl
call
or
repz
mov
aam
ljmp
fcmovnbe
fidivrl
push
outsb
pop
add
pop
mov
ja
pop
rcrb
insl
cld
mov
mov
adc
iret
stc
clc
cmpsl
es
loop
mov
xchg
mov
lcall
push
sahf
adc
movsl
sbb
jo
push
insl
std
lea
mov
push
and
xchg
jo
sbb
stos
scas
iret
sbb
or
ja
mov
sbb
fsub
push
cmp
mov
push
cltd
lods
cmp
sahf
frstor
lret
lods
out
mov
push
gs
rcrb
push
dec
testb
or
popa
shrl
ret
ja
pusha
js
jns
xchg
add
fdivr
fiaddl
aad
sahf
cwtl
ja
mov
test
aas
mov
push
fs
push
mov
cmpsl
roll
and
push
sahf
jns
add
jnp
enter
cmpsl
sbb
dec
sbb
pop
int
xor
aam
loope
xchg
mov
sbb
mov
xor
mov
jo
push
lret
mov
jecxz
call
popf
cmp
jb
jle
inc
int
movsb
push
cwtl
pop
adc
add
shll
sub
mov
in
push
mov
adcl
jae
pushf
push
cmp
sub
or
adc
inc
inc
leave
icebp
aad
jge
sub
sub
inc
shrl
int
or
fstpt
mov
mov
push
mov
pop
jge
ds
sub
jo
sahf
fisttpl
xor
movsl
push
roll
into
adc
lret
popa
jb
dec
jo
inc
cs
jg
out
mov
xor
jl
stos
lret
in
fldenvs
lret
jle
icebp
xor
daa
in
mov
jle
jo
testl
adc
mov
adc
shr
cmp
pop
sub
ret
aam
dec
mov
lret
pop
mov
popa
sar
xchg
jl
ss
nop
pop
push
shlb
cmp
jle
mov
xchg
int
shlb
cmp
scas
call
inc
mov
and
xchg
aad
cmp
ljmp
dec
in
clc
adc
int
mov
mov
xor
outsb
push
push
cmp
out
jmp
jo
mov
inc
and
and
xchg
insl
daa
dec
out
jns
adc
pop
mov
inc
xlat
push
adc
into
push
dec
repnz
pop
jbe
int
inc
jle
jns
test
jmp
inc
mov
adc
cwtl
fcom
adc
test
cmpb
imul
mov
jg
scas
mov
mov
mov
or
push
jo
outsl
inc
sarl
sbb
shll
stos
dec
jno
xchg
push
push
adc
out
mov
xor
ljmp
xchg
mov
enter
test
dec
dec
pop
loop
pop
fldcw
inc
pop
inc
popa
xchg
stos
aas
ljmp
push
xor
cltd
xor
sub
mov
add
inc
mov
xor
fstp
cmpsb
xchg
and
mov
imulb
movsl
pop
mov
mov
pop
adc
push
sahf
rcr
pop
js
repz
or
ljmp
adc
stc
xor
cmp
pop
pop
xchg
inc
fimull
cmc
into
pop
fimull
es
iret
out
cmp
nop
cmp
andb
cmpsb
aad
cli
lods
aam
std
int3
xchg
mov
jns
adc
cld
sub
mov
lahf
push
lds
pop
aas
inc
mov
xadd
push
icebp
ja
jle
cmp
cli
aad
and
or
notb
mov
and
subb
std
negb
dec
scas
ficompl
xor
mov
pop
rorb
repnz
neg
and
mov
cmp
pop
testb
push
mov
popa
mov
mov
sbb
fdivrl
cltd
mov
xchg
mulb
mov
inc
popf
push
mov
ds
mov
sub
fsubrl
jp
fiaddl
sbb
pop
inc
movsbl
pop
xlat
sbb
fistps
mov
rolb
fwait
push
xor
xchg
jecxz
mov
rolb
or
cltd
and
xchg
adcb
mov
cmp
xor
clc
mov
mov
dec
test
or
clc
pop
rcrl
fs
sbb
fcmovnb
jbe
out
pop
jo
sarb
pop
sbb
adc
mov
xchg
mov
jno
xchg
leave
adc
xor
sbb
inc
ds
lcall
ror
fwait
sub
movsl
fnstenv
mov
fs
fisttpll
icebp
cmpsb
lcall
sarb
mov
shlb
loope
push
mov
data16
fs
pop
aaa
les
cmp
xchg
mov
mov
pop
int
cmp
out
repz
in
lea
xlat
cmp
rcrb
cwtl
setp
mov
notb
je
aad
aas
sahf
test
popf
sar
out
mov
sbb
rclb
jnp
jbe
lods
jg
imul
into
insl
aad
xchg
pop
jns
into
sar
enter
roll
loope
mov
cmpl
dec
inc
cli
stos
aad
popf
stos
mov
lock
rcr
icebp
adcl
popa
cmp
jle
mov
jp
pop
mov
xchg
sub
sbb
push
std
jg
in
inc
popa
das
adc
sub
mov
lods
ss
push
xor
push
mov
cld
mov
mov
cmp
mov
mov
xchg
add
jp
lcall
pop
add
fwait
mov
pop
mov
cld
or
inc
fidivl
pushf
ds
mov
out
int
push
mov
mov
sub
enter
faddl
push
stc
popa
adc
add
mov
push
fnsave
lock
adc
leave
idivl
std
jns
ljmp
push
icebp
flds
movb
inc
sahf
hlt
int
popa
cltd
cmc
lcall
pop
mov
push
jle
fcmove
dec
adc
frstor
cmpl
sahf
js
cltd
scas
popf
mov
das
cltd
push
pop
ja
fwait
mov
popa
mov
cwtl
push
mov
int3
movsb
push
and
mov
jecxz
stos
popa
dec
cmp
out
and
inc
outsb
cmp
ret
mov
js
mov
out
mov
jo
lock
or
in
xor
dec
subl
push
cmpl
sahf
dec
xor
test
xor
cmp
xchg
test
daa
aad
xchg
mov
inc
xchg
pop
inc
mov
push
jmp
into
sub
out
fisttpll
mov
stos
mov
adc
push
cld
rorl
sahf
cwtl
data16
xor
sbb
mov
inc
or
call
push
lods
or
cmp
push
cltd
mov
xor
inc
push
cmp
push
mov
adc
ds
xor
add
and
jmp
int3
dec
cmp
fidivrl
jns
mov
pop
fcmovb
lods
mov
ljmp
jno
cmpsl
xchg
rclb
add
outsb
pushf
cmp
cmp
mov
pop
push
popf
pop
sub
jmp
jmp
jnp
or
rcr
ja
jne
sub
and
mov
inc
sub
roll
add
int
push
sub
ss
popa
ficoml
insl
in
test
xor
inc
mov
adc
rcll
scas
cmp
rep
sbb
xor
mov
xchg
and
sub
inc
scas
dec
fiadds
cmp
jl
xchg
lods
mov
cli
cld
jmp
push
ficomps
mov
iret
sbb
cld
gs
insl
mov
dec
dec
jl
in
mov
cmp
fcoml
jo
push
mov
daa
dec
btcl
push
inc
jge
mov
pop
js
pop
cltd
pop
std
mov
jne
lods
jne
addr16
nop
xor
xchg
fsubrl
pop
xor
fdivrl
imul
lock
fbld
mov
ds
mov
fnstcw
adc
sub
mov
cld
call
jle
subl
or
fs
aaa
cld
in
leave
sub
mov
das
inc
ja
iret
cmp
dec
ljmp
xchg
aas
or
or
daa
cmp
add
cld
push
mov
push
xor
aad
loop
std
shlb
loop
xchg
xchg
mov
inc
les
pop
mov
pushf
sub
insl
out
cmp
push
jp
cmp
cmp
mov
xor
xor
adc
dec
mov
mov
insb
fsubr
pop
lods
fldcw
enter
mov
test
aaa
clc
jle
test
rdpmc
adc
xor
in
std
insl
fbld
mov
mov
mov
dec
xchg
ja
jbe
pop
pop
dec
mov
mov
mov
pop
push
fs
fcmovbe
pop
lret
ja
push
dec
sub
lods
rol
shr
dec
ds
xchg
lods
sub
push
cmp
or
loop
es
mov
stc
jecxz
adc
repz
sbb
add
lahf
into
jae
adc
mov
sub
aam
push
sbb
mov
in
repnz
into
push
nop
pop
pop
add
cmp
cli
adc
jb
and
sbb
cmp
and
jae
cmp
lods
jl
in
jmp
cmp
jns
inc
mov
aad
repnz
mov
mov
pop
cmpsl
testl
cwtl
jo
mov
sub
or
or
popf
cmp
fwait
sbb
sub
shl
sbb
and
cmp
or
push
ja
dec
mov
cmp
add
mov
out
pop
push
neg
add
cld
dec
xor
or
push
and
add
mov
cmp
mov
jns
add
push
mov
pop
adc
sub
lock
ss
insl
adc
inc
xchg
mov
lahf
or
aad
sbb
repz
hlt
pop
movsl
loope
in
lods
dec
out
data16
hlt
pop
pop
repnz
mov
iret
push
push
add
pand
and
pop
fstl
popf
es
push
in
ficompl
enter
jecxz
sarl
in
nop
mov
pop
add
mov
repnz
dec
add
jns
jge
adc
or
out
pop
cmp
popf
inc
std
std
push
mov
push
cmc
xlat
aas
nop
push
push
pop
inc
out
sahf
adc
stos
mov
les
cmp
js
pushf
repz
jbe
outsl
jle
mov
sti
fbld
sbbb
mov
ret
and
insl
lods
int
xor
std
nop
jge
outsb
cli
push
jp
add
xor
mov
push
fiaddl
in
push
cmp
fwait
nop
sahf
inc
repz
cmp
pop
insl
mov
out
and
dec
sbb
or
jmp
mov
shlb
ljmp
outsb
xor
aaa
test
sarb
mov
or
hlt
jo
scas
sub
dec
fmuls
dec
into
xor
push
jecxz
arpl
ficompl
mov
push
out
and
sub
mov
sti
mov
dec
lods
popa
sbb
ss
fstl
jo
push
jb
push
push
mov
mov
sbb
pushf
lods
adc
cmp
inc
mov
gs
adc
dec
add
call
ret
push
ss
mov
adc
addl
jo
mov
popa
out
ljmp
fisubs
outsb
pop
adc
adc
push
mov
les
inc
popa
add
ret
pop
pop
sahf
pop
xchg
sub
dec
out
lahf
pop
lds
sarb
push
subb
xchg
sar
cwtl
popf
push
in
imul
dec
fnstsw
out
iret
das
push
iret
xor
mov
dec
int3
fs
pop
rorb
ret
mov
jne
push
subl
int
adc
jbe
xor
pop
push
mov
pop
js
xor
inc
push
icebp
jb
pop
popf
xchg
outsl
cli
jns
and
subb
fstp
jnp
cli
dec
cli
dec
adc
mov
mov
std
icebp
adc
lods
in
adc
jae,pt
negb
mov
aam
icebp
popfw
mov
jnp
bound
ss
pop
inc
rcrl
push
fucomi
mov
push
inc
or
cmp
mov
jns,pt
sub
dec
and
popf
xor
lcall
sbb
sti
xor
int
jmp
lods
lret
xchg
or
push
inc
popa
jle
daa
test
daa
xchg
jb
inc
jne
jb
pop
gs
push
adc
setne
mov
aad
mov
sti
gs
cmc
adc
rol
xlat
cmp
cmpsl
mov
xor
ds
int
popf
cltd
push
adc
sbb
les
sbbb
popf
ss
sti
pop
mov
pop
push
push
xor
in
fsubs
xchg
xor
ds
push
push
lret
stc
sbb
movsl
fnstcw
cmp
and
icebp
add
pushf
lods
lret
push
lret
nop
stos
sub
dec
add
stos
inc
jle
xor
inc
sbb
fcoml
mov
lds
loop
lds
mov
jle
xchg
fsubl
mov
das
cmpl
jge
jns
mov
shrb
mov
push
or
mov
data16
inc
jl
push
pop
jecxz
push
ja
push
jg
je
pop
popa
lea
pop
push
in
fidivl
mov
cmc
lods
data16
notb
xlat
xchg
jmp
iret
xor
lcall
pop
mov
sbb
sbb
fcoms
mov
pop
fwait
adc
ja
icebp
clc
push
cltd
in
andl
dec
xlat
sahf
xchg
lock
ja
fwait
xlat
mov
sbb
pop
mov
mov
cs
sbb
ss
rcll
ret
push
dec
ret
mov
pusha
add
dec
xchg
divb
sub
jmp
lea
push
repnz
sub
sbb
hlt
iret
aaa
cld
into
lahf
mov
movsb
jo
shlb
pop
mov
js
push
jle
jns
push
insl
test
mov
dec
jle
adc
popa
dec
scas
push
lds
cli
fwait
popa
imul
mov
jle
adc
add
les
rclb
aad
sbb
mov
pop
mov
minps
xchg
mov
pop
xor
sbbb
lahf
jle
push
cmp
movsb
push
rclb
js
xchg
pop
cmpl
int
jne
jl
push
pop
cmp
in
movsl
test
call
pop
and
jl
sub
addr16
lods
pop
pop
inc
sbb
aam
or
inc
dec
dec
push
nop
rclb
xor
jle
mov
fisubrl
outsl
fldcw
fwait
jns
pop
bound
inc
sbb
mov
xchg
shll
enter
cmpsl
push
sbb
pop
adc
loopne
jg
inc
xchg
mov
stos
lods
pop
pop
mov
sbb
pop
and
mull
dec
lret
pop
cmp
xchg
xor
inc
mov
add
inc
in
mov
sbb
jae
cmp
sbb
das
sahf
cmpsl
adc
fsubrl
shll
shl
cmp
xlat
das
je
aam
into
add
jecxz
lods
popf
add
ret
shrl
test
mov
mov
or
mov
and
nop
pop
out
ret
clc
lods
xchg
mov
pushf
pop
and
addr16
movsb
fbld
mov
mov
push
icebp
negb
or
mov
mov
cmpsb
loope
popa
imulb
loopne
ss
call
mov
addr16
fldl
les
mov
push
xorb
popf
push
sahf
dec
jl
jmp
add
mov
or
ret
or
sbb
pusha
xchg
lock
insb
xlat
pop
or
popf
lcall
mov
mov
aad
fwait
ja
pop
nop
jge
xor
leave
sbb
dec
out
inc
fstps
pop
adc
add
add
add
pop
sbb
dec
std
fists
loope
sub
mov
sub
jg
fmuls
ds
dec
insl
push
mov
sti
push
mov
je
push
mov
dec
jmp
fisttpl
jns
or
mov
jecxz
les
jae
mov
testl
add
shrb
xchg
icebp
iret
mov
adc
xchg
shll
cmp
cld
pop
mov
shl
sbb
popa
jo
repz
cmp
sbb
rorl
movswl
movsb
repnz
clc
sti
xor
and
js
aam
test
insb
adc
sahf
ret
xchg
sahf
cld
imul
push
jo
fcoml
cld
push
jo
sub
fistpll
pop
mov
andl
lock
lea
nop
idiv
push
loop
bound
jmp
sub
std
rclb
push
sub
xchg
daa
movsl
lods
pop
xchg
pusha
fdivr
leave
mov
inc
mov
repz
xchg
adc
lods
sbb
jb
xor
jle
loopne
sahf
adc
ret
dec
xchg
addr16
lods
xor
jge
fwait
repnz
stc
push
sbb
fimull
fnstsw
jo
pop
sub
mov
mov
xlat
mov
jge
aam
cmp
ret
rcrl
dec
aam
mov
imul
xchg
stc
pop
into
xchg
push
cmp
xchg
addr16
popa
pop
or
adc
sbb
aam
pushf
repnz
push
and
push
in
hlt
xor
push
arpl
rorl
and
cmp
shr
push
insl
pop
test
adc
lods
fisubs
je
ret
subl
das
rorl
pop
mov
pop
in
mov
into
dec
shrl
push
or
pushf
sub
stos
add
test
aaa
icebp
mov
xchg
mov
dec
mov
or
dec
fisubl
xchg
push
out
orb
jb
outsl
pop
and
jge
push
enter
cwtl
and
cmpsl
inc
dec
enter
adc
sti
pop
xor
and
and
es
ret
rclb
nop
aad
or
or
rcrl
and
mov
xor
scas
pop
sbb
movsb
pop
pop
sbb
addl
add
shll
rorl
sbb
push
out
shlb
push
bound
mov
fld
push
sub
push
std
jle
sub
mov
mov
and
pushf
push
inc
outsb
pop
lret
add
repnz
xchg
jmp
inc
and
pop
daa
lret
mov
popf
sahf
sahf
sbb
mov
shrb
dec
jmp
xchg
loop
movsb
jle
mov
shlb
je
jl
pop
cmpl
inc
jb
jle
fstpt
cmp
pop
pushf
push
cmp
dec
pop
mov
popa
ret
add
inc
xchg
sti
inc
mov
sahf
add
lcall
fistpl
popf
push
cmp
pop
pop
xchg
jge
pop
imul
lahf
mov
cld
mov
or
sbb
imul
lret
ret
mov
lods
pop
cmp
mov
mov
mov
mov
aad
lcall
ja
loop
std
mov
mov
mov
sahf
stos
lret
cmp
fimuls
mov
or
pop
xchg
push
lods
cmp
adc
mov
fidivrl
cmc
sahf
or
push
jnp
inc
cld
int3
fistpl
stos
scas
push
shll
mov
fsub
pop
ss
mov
pop
mov
fwait
mul
push
and
adc
repz
lods
add
dec
add
pop
inc
add
jle
stos
sbb
shl
fldcw
cmc
fidivrl
xchg
mov
in
fiaddl
jne
sub
or
adc
sti
cmp
enter
mov
push
test
aaa
add
sbb
hlt
push
mov
lret
hlt
jg
shll
lcall
roll
pop
mov
leave
addr16
movsl
mov
mov
outsb
push
jle
adc
inc
andl
cmp
jb
leave
pop
sarl
lds
aad
test
jmp
jle
fstl
mov
jle
push
popa
loopne
mov
add
cltd
push
int3
aaa
int
jle
dec
clc
jns,pn
pusha
int
lods
imul
xchg
mov
jns
inc
aad
imul
and
xchg
xchg
pop
data16
loopne
inc
pushf
popa
mov
pop
std
popa
pop
daa
xchg
mov
fs
test
cmp
add
jno,pt
mov
push
sub
xchg
pop
ja
lds
ret
repnz
data16
test
inc
sub
xchg
mov
inc
cltd
push
ss
sbb
mov
xor
lds
dec
repz
push
jnp
sahf
mov
jp
pop
xchg
pop
repz
aam
lret
outsb
sarb
xchg
arpl
inc
es
cmp
test
fstl
nop
dec
fdivl
fld
cmp
dec
repz
mov
or
inc
jb
cltd
cmp
push
loope
popa
xchg
test
repz
jmp
xchg
push
sahf
fnsave
push
fs
and
cmp
popf
aad
outsl
push
mov
jp
stos
inc
outsl
jge
adc
sbb
ljmp
fldl
das
fwait
stc
test
dec
xchg
add
sbbb
xchg
dec
pop
sub
popf
loopne
push
sti
push
cld
and
rclb
pop
cmp
sub
cld
ret
or
loopne
sub
rcll
clc
lods
mov
fwait
outsb
xor
push
cs
movsb
sub
push
fsts
popa
inc
jge
insl
mov
cmp
jbe
push
cmpsb
mov
std
jle
stos
dec
xchg
cmp
in
repnz
bound
fisttpl
sbb
xchg
sub
popf
mov
mov
ds
xor
popf
shlb
fdivl
paddb
outsb
mov
or
or
adc
jl
lret
xor
xor
xchg
pop
jge
inc
push
icebp
cmp
pop
lea
inc
pushf
fcoms
jns
inc
rcrl
cmp
fldenv
scas
ret
cmp
sbb
lret
xchg
mov
lcall
lods
inc
mov
dec
xor
cmp
loopne
inc
xchg
xchg
icebp
shll
daa
rcrb
push
clc
repz
stos
pop
push
ds
aam
push
stc
mov
push
jns
fwait
mov
pop
pop
ss
inc
repz
popf
je,pt
clc
push
mov
cmp
sub
adcl
adc
cmp
mov
sub
fnsave
jge
data16
xchg
clc
in
add
popa
mov
int3
enter
xlat
insb
arpl
nop
leave
xor
pop
fdivp
push
jle
out
pusha
sahf
pop
repnz
sbb
fcomps
lods
sub
gs
insl
movsb
pop
xor
imul
inc
sub
cli
inc
mov
pop
pop
mov
add
shll
in
les
les
jle
mov
lahf
ja
mov
pop
sub
into
adc
xor
in
jae
xchg
xchg
iret
mov
outsl
stos
ror
loopne
fcmovu
push
mov
sub
gs
inc
test
cwtl
cmp
imul
pushf
jb
cmpb
pop
popa
fstpl
jl
inc
lea
push
pop
mov
mov
push
jge
mov
mov
pop
jne
orb
mov
xchg
pushf
pop
pop
and
lret
fwait
lea
push
sbb
loop
jno
xchg
sub
mov
aas
int
mov
dec
mov
scas
stos
ffree
scas
stos
dec
mov
adc
cmp
lds
jge
dec
mov
jae
lods
jp
and
lods
jbe
jmp
out
inc
insl
adc
scas
mov
xor
int
xor
push
or
orl
stos
mov
mov
jns
idivl
cmp
mov
test
std
pop
enter
jle
mov
call
popl
dec
orb
mov
clc
fiaddl
mov
sub
push
mov
dec
fs
ret
test
cmp
jl
cmp
mov
loopne
clc
enter
xchg
adc
xor
jo
jns
decl
adc
push
les
adc
pop
int
scas
jns
xchg
insl
add
xchg
pop
pop
mov
rcrb
cld
mov
fcom
pop
add
fiadds
out
push
scas
inc
xchg
sub
out
popf
cmpb
adc
or
pop
fsubrs
pop
pop
pushf
pop
jg
pop
add
sahf
aam
stc
pop
add
mov
lahf
xchg
popw
mov
pop
mov
cmp
mov
jae
dec
dec
stos
data16
in
inc
jle
mov
mov
jg
daa
cld
add
or
aam
inc
jp
add
jge
mov
jmp
xor
add
mov
jae
filds
or
pop
mov
dec
cld
xchg
repz
xchg
ret
xchg
mov
icebp
jge
les
jne
mov
push
adc
mov
aad
jmp
sub
xorb
inc
fcomps
mov
mov
and
xor
xorl
inc
js
add
out
test
or
push
sahf
sahf
shll
inc
dec
or
cmpsl
cmp
fstpl
cmp
mov
add
jns
cs
mov
test
ja
out
idivb
push
xor
lds
inc
or
jne
inc
pop
mov
pop
dec
test
mov
cli
test
sti
sub
mov
mov
push
xor
out
pop
jo
jle
jle
mov
cmp
jae
out
lret
pusha
mov
lds
cmpsb
mov
lods
xlat
out
fdivrl
xchg
xor
dec
pop
lret
xchg
fcomps
mov
repz
mov
lock
pop
fidivl
ds
inc
mov
ret
jl
inc
stos
subb
mov
pop
push
pop
rcl
or
push
sub
inc
pop
adc
sbb
ds
ss
jns
scas
pop
je
cmp
and
inc
adc
jge
push
push
fsubr
and
in
cli
push
cmp
xchg
inc
lods
pop
cmp
pop
repz
mov
fcoml
jno
lock
cmp
dec
pushf
add
xchg
call
movsb
loop
lret
clc
and
push
push
mov
pop
sti
pushf
xchg
roll
xchg
lods
arpl
push
pusha
mov
push
sub
dec
sub
cmc
scas
mov
pop
ret
fnsave
jmp
xchg
cmp
aas
sub
roll
cmovno
jae
in
andl
sub
pop
sub
lods
xchg
mov
subl
hlt
loope
push
aam
adc
xchg
push
out
std
movsl
out
lds
lods
arpl
in
lock
pushf
push
lds
aam
in
inc
push
sbb
jl
cmp
pop
cmpsl
fistl
popa
fsts
mov
push
xchg
pushf
xchg
fs
sbb
test
adc
popa
jne
adc
push
mov
sarl
xlat
jge
lds
mov
addb
mov
test
ret
jle
roll
mov
lods
scas
hlt
in
xchg
into
gs
loop
jge
in
mov
frstor
mov
jns
ja
ret
adc
or
sbb
aad
jb
or
pushf
jl
inc
mov
imul
xchg
fsubl
in
cmpl
push
in
xlat
cli
inc
aad
pop
sahf
inc
sbb
movl
lret
xor
xorl
sub
cmp
int
lods
ja
and
pop
mov
mull
adc
mov
push
dec
pop
movsl
sub
xchg
sub
jle
roll
sbb
push
pop
call
pushf
ja
js
frstor
sahf
mov
out
pop
pop
jbe
sbb
inc
cmp
fstp
mov
xor
xrelease
shr
int
aaa
lcall
enter
mov
mov
in
mov
pop
ja
mov
aad
push
roll
enter
repnz
mov
pop
sub
xchg
dec
cld
pop
leave
stos
cmp
sub
jnp
fwait
adc
ret
xchg
mov
aas
mov
mov
push
sub
jo
push
push
mov
adc
xor
and
iret
stc
mov
test
fstl
fsts
enter
cmc
cmp
shll
ds
mov
mov
dec
pop
sahf
nop
lcall
push
fwait
popa
pop
sub
or
aas
or
les
jg
jae
leave
lods
mov
mov
fimull
fistl
jg
int
andb
movsb
popf
xchg
mov
push
pop
xor
sbb
dec
inc
jle
movb
xchg
xchg
lahf
inc
sbbb
arpl
mov
cld
cmpsl
iret
insb
pop
or
mov
lret
sub
sub
sbb
sbb
mov
jns
mov
data16
in
ss
div
dec
cltd
ret
sub
in
mov
cmp
adc
mov
push
jo
fnstsw
or
xor
fld
xor
popf
imul
mov
insb
ss
fdivs
push
cli
or
pop
mov
cmc
int
ret
cmpsl
mov
xchg
popf
rorl
mov
jle
pusha
jne
cmpsl
mov
push
cmp
lea
rol
scas
in
xchg
lcall
xchg
vcmpgt_oqss
inc
mov
fdivrl
inc
dec
ficoml
mov
dec
fidivrs
shl
test
adc
pop
mov
sahf
xchg
lds
into
pop
pop
mov
mov
cmp
sbb
pop
push
cmp
fcmovb
jns
sbb
jnp
inc
sahf
imul
shll
jmp
pushf
or
ljmp
wbinvd
mov
jns
shrb
js
mov
std
fmuls
fidivs
or
ss
pushf
jb
pop
outsl
icebp
xor
lahf
jae
xchg
push
mov
sbb
scas
or
pusha
dec
shll
mov
sub
sub
xchg
push
mov
lcall
es
sbbb
movsb
popa
sbb
jge
add
mov
cmp
rcrb
mov
nop
jge
test
out
cmp
xor
fldcw
mov
cmp
int3
pop
lds
pushf
cmpsl
aam
inc
mov
mov
loopne
pop
and
inc
dec
jno
cmpl
repz
mov
insb
push
push
out
push
xchg
frstor
test
jp
add
mov
test
stos
lods
mov
mov
out
mov
pushf
mov
xor
adc
push
cltd
sub
cmp
arpl
pop
mov
mov
sub
sbb
out
lods
adc
scas
mov
into
sub
sub
loop
int
jnp
lahf
sbb
dec
add
cmp
inc
or
scas
call
pop
out
or
pop
mov
mov
inc
or
push
xlat
les
jmp
add
movsl
pmovmskb
inc
push
mov
fmulp
adc
das
std
addr16
jle
pop
test
mov
mov
lahf
xor
push
sub
sbb
xor
orb
dec
push
mov
stc
mov
imul
adc
and
push
jle
gs
ret
scas
inc
jle
cmpsb
pop
aaa
aad
setae
fcomip
jl
fsub
dec
inc
push
xor
add
rol
stc
test
test
inc
sahf
mov
adc
enter
adc
fcmovb
mov
mov
sub
xchg
push
mov
cmpsl
nop
pop
jb
or
imul
clc
cmp
out
xchg
cld
sti
in
xchg
repnz
mov
push
or
mov
mov
aam
sbb
push
ja
add
hlt
pushf
mov
aad
lods
into
fdivrl
idivb
mov
dec
ja
roll
lds
mov
lea
add
adc
and
into
popa
dec
arpl
ret
mov
js
sub
sub
adc
jns
xrelease
or
cltd
dec
cmp
sahf
aaa
or
adc
mul
outsb
lods
scas
out
mov
lret
int
rcrl
mov
inc
mov
loope
mov
mov
sub
mov
add
mov
mov
clc
lret
das
cmp
lods
push
sbb
ret
in
cltd
lods
and
mov
out
enter
add
popa
sti
xchg
movsb
out
xchg
sub
imull
mov
fwait
sbb
insl
mov
pop
xchg
jb
filds
mov
data16
das
ds
xor
mov
add
sub
xor
push
clc
mov
mov
adc
jo
cmpsl
mov
cs
mov
call
mov
leave
cmpsb
pop
add
pop
popa
call
movsl
pop
mov
fdivrl
dec
sbb
xor
jmp
and
insl
rol
add
sar
ljmp
and
adc
test
cs
and
test
pop
ja
insb
dec
jo
call
push
scas
cmp
fsubrs
fldcw
scas
cmp
fstpl
ret
jmp
sub
stc
outsb
fisubl
pop
pop
jmp
mov
in
fcoml
dec
pop
xchg
popf
jp
cmp
fcmovu
in
pusha
sbb
dec
mov
repnz
xchg
into
mov
push
cmp
pop
ffree
mov
inc
out
aad
xor
cmp
lea
pop
pop
rolb
cmp
lds
test
inc
std
dec
mov
movsb
fstl
add
pushf
mov
xchg
inc
movsl
pop
pop
repz
incb
jbe
adc
dec
xor
test
jge
cmp
dec
pop
adc
pushl
adc
shr
insl
fstpt
sub
mov
movsb
iret
inc
mov
sbb
add
lahf
mov
lods
stos
test
and
jge
test
pop
push
setbe
dec
push
std
hlt
and
daa
pop
lret
mov
adc
and
pushf
xchg
scas
dec
rcr
lock
mov
popa
test
repnz
sarb
cld
cld
fsub
mov
sub
dec
inc
xchg
pop
adc
stos
jne
jp
xrelease
or
pop
fcompl
sub
std
xor
mov
aad
sub
xchg
jnp
jae
pushf
pop
mov
popf
xchg
pop
dec
movsl
sbb
jle
cmp
xchg
push
pop
jg
popf
stos
jmp
xchg
push
inc
mov
mov
std
mov
mov
decb
and
scas
rcrb
xor
shll
stos
std
inc
xor
add
fdivrs
lea
sbb
icebp
pop
es
adc
pop
pop
push
xor
xchg
jo
ret
pop
and
dec
pop
cld
clc
outsb
gs
dec
lea
mov
sub
dec
fldenv
mov
cwtl
jbe
rorl
adc
jnp
cmp
push
pop
push
mov
push
add
pop
cld
popa
jb
push
lcall
fwait
push
mov
mov
cli
jl
push
push
cli
sti
in
insl
cld
jbe
push
pop
mov
into
mov
jge
imull
inc
and
and
iret
mov
lahf
cwtl
xlat
sbb
sahf
pop
idivb
fwait
push
pop
mov
cld
jae
adc
xor
inc
popf
push
leave
and
sahf
int
jns
lods
loope
daa
test
out
xchg
leave
fiaddl
out
int3
sti
ror
sub
ja
dec
mov
and
test
outsb
pop
popa
mov
pop
lret
pop
sub
pushf
and
push
pop
mov
sarl
cmp
mov
mov
push
mov
js
fsubrl
arpl
dec
out
xlat
fsubrl
stc
pusha
ret
cs
xor
dec
push
nop
or
jmp
or
push
gs
mov
dec
xor
call
mov
mov
adc
xchg
adc
push
setns
js
or
shrl
cmpsb
andb
iret
pop
ror
inc
pop
or
cmp
ds
mov
inc
adc
mov
fs
mov
lret
mov
nop
inc
mov
inc
clc
mov
xor
mov
xchg
into
ljmp
mov
xchg
push
push
sub
xchg
add
aam
cwtl
rcrb
shr
adcl
sbb
idiv
push
mov
lods
inc
sbb
mov
iret
ss
mov
inc
pop
pop
jne
mov
das
jne
push
sbb
jge
xor
xor
rclb
into
adc
xor
popa
cmp
pop
xchg
jae
out
push
mov
adc
and
lret
xchg
push
push
jp
ljmp
call
scas
pop
add
or
fistps
sub
aad
mov
fdivrl
dec
lea
cld
pop
mov
push
popf
ficompl
sbb
sub
mov
lret
mov
out
ds
xchg
int3
fwait
dec
sub
xchg
xchg
sarl
adc
andb
mov
mov
in
out
mov
int3
mov
jg
xor
xor
shr
xchg
pop
pop
cmp
push
dec
inc
int
rcll
mov
sub
iret
bound
push
ss
fcmovne
sub
mov
xor
ds
push
xor
adc
cmp
jbe
imul
shl
push
arpl
mov
neg
rcl
subl
fnstcw
jmp
aam
data16
push
and
lcall
jle
ja
dec
adc
lods
cld
dec
imul
xchg
div
pop
scas
mov
loope
loop
fs
imul
arpl
xchg
pop
inc
std
mov
pop
int
sub
ds
shll
idiv
cmp
mov
sub
sbb
push
xor
ja
jo
mov
rorb
outsl
pop
pusha
lea
sub
push
and
lock
xlat
cwtl
ja
test
sbb
sbb
dec
cltd
jl
enter
jno
lret
sti
sub
pop
mov
push
mov
out
pop
jle
jg
pop
out
fs
ljmp
sahf
out
push
pop
inc
fadd
iret
loopne
add
js
pop
mulb
aas
aad
inc
jecxz
in
jmp
mov
sbb
loop
mov
and
lock
lods
cmp
mov
subl
imull
sub
adc
jp
jle
jl
je
mov
fstl
mov
jecxz
xchg
pusha
sub
incb
shrb
or
xchg
cmp
sahf
fsubrl
mov
cld
pop
dec
into
push
lcall
xor
repnz
or
repnz
dec
add
outsl
jne
xchg
lods
mov
leave
cltd
in
mov
add
in
dec
test
movsb
fdivs
jle
test
cs
stos
push
fmull
sbb
popa
cmp
pop
jae
andb
or
jno
mov
mov
pop
movsl
aam
ficoml
jp
adc
movsl
repz
ss
inc
fstl
add
mov
lcall
loopne
mul
mov
rorb
pop
cmp
lret
cmp
fwait
in
por
outsb
jp
fstpt
pop
fcomps
jmp
pop
pop
outsl
into
inc
in
sbb
cmp
idivb
cmp
fmuls
push
leave
jmp
cmp
scas
mov
lcall
mov
ret
cmp
adc
jp
dec
out
ss
mov
stos
pop
mov
int3
cmp
mov
fdivrp
mov
mov
mov
mov
xor
fucomp
xor
rolb
addr16
cmp
xor
dec
mov
jl
cmpsb
call
addl
ret
repnz
rcll
scas
das
jg
notb
jp
mov
add
mov
js
mov
jle
into
cmp
frstor
das
cld
lods
cmp
sbb
jge
jg
pop
pop
idivb
inc
mov
sub
mov
mov
mov
filds
scas
add
lods
negb
sbb
cmpl
wrmsr
aam
rorb
hlt
add
bound
scas
cs
aas
sbb
scas
push
cmpb
sbb
inc
scas
lea
pop
insl
test
inc
mov
pop
push
mov
mov
int
add
push
movsb
aad
jmp
into
lahf
cmp
fadds
adc
aad
popa
mov
adc
jle
ret
pop
pop
int
pop
inc
sbb
fistpl
pop
in
lds
jle
push
inc
mov
fmul
jb
xchg
sub
pop
aad
sti
jne
jl
mov
inc
pusha
lret
inc
sbb
popf
enter
mov
lds
push
adc
pop
cmp
fnstsw
push
ljmp
aaa
pop
out
in
mov
jmp
fcomi
or
lret
aad
xchg
adc
adc
cltd
pop
mov
adc
jge
repz
lock
mov
sbb
mov
sub
xor
cmp
mov
aas
pop
dec
pop
ds
mov
mov
fucomp
push
pop
xchg
xor
sbb
add
push
mov
fstpt
outsb
inc
jecxz
mov
jg
and
das
jbe
xchg
adc
cmp
inc
aaa
push
xor
xor
pushf
enter
mov
out
dec
sahf
and
adc
and
push
cmp
adc
pop
lcall
subb
cmp
addr16
lret
out
mov
inc
mov
pushf
mov
dec
int
data16
xlat
adc
mov
sbb
inc
push
sub
lock
mov
js
cmp
in
jno
mov
int3
pop
cmp
mov
aam
fs
adcb
das
inc
outsl
addb
add
leave
jmp
sub
outsb
sbb
adc
cmp
popa
cmp
jl
lahf
pop
mov
xchg
pop
adc
in
push
adc
xchg
push
aam
mov
sar
xchg
das
xchg
dec
fwait
addr16
jno
and
sti
and
gs
sahf
lcall
push
cltd
push
jle
ret
outsb
push
sbb
sub
xchg
dec
inc
sub
jge
add
pop
sub
clc
nop
pop
inc
xchg
lock
out
movsl
data16
mov
jnp
cmp
test
scas
repnz
add
push
pop
mov
push
jge
fwait
xchg
push
lock
gs
lret
adc
int
inc
and
pop
shll
test
adc
xchg
pop
dec
pop
inc
frndint
mov
sti
push
fcmovnbe
aas
inc
insb
test
and
pop
add
jmp
mov
sarl
jae
dec
mov
clc
movsb
movsb
lds
scas
mov
push
int3
push
mov
lds
push
pop
push
mov
inc
stos
aas
sub
sarb
repz
rcll
in
sub
scas
push
idiv
dec
sbb
cli
dec
idivb
lahf
jo
in
jl
xchg
push
inc
mov
mov
add
sar
es
outsb
pop
inc
fs
sbb
rclb
dec
je
mov
inc
jo
mov
xchg
inc
ret
xlat
insl
aad
mov
cmp
cmp
inc
cmp
add
loope
clc
fistpll
or
cmp
fcmovu
aam
pop
shll
inc
aam
jle
sub
fisttps
mov
cs
in
xchg
jne
mov
out
outsb
rcll
pop
mov
mov
aad
in
js
jbe
into
loop
cmp
add
int3
push
mov
push
pop
std
incb
jge
mov
lods
mov
lods
pop
mov
out
dec
out
inc
jecxz
inc
dec
and
mov
xor
es
mov
mov
shll
pushf
scas
jge
out
fdivl
mov
mov
aam
shlb
les
pusha
adc
repz
mov
cmpb
int3
mov
lcall
add
sbb
aad
xor
dec
mov
stc
mov
jge
adc
std
jae
fadd
jo
out
xchg
sub
mov
jge
test
sbb
ja
mov
xor
push
cmp
mov
ret
cmp
mov
mov
xchg
stos
shl
xchg
xchg
ret
shl
sub
mov
daa
adc
cmc
xor
xor
jp
adc
adc
lcall
push
mov
jmp
popf
mov
mov
popf
adc
sub
pusha
pop
mov
inc
bswap
jg
lcall
and
pop
out
push
lret
ja
aad
out
pushf
fwait
pop
jle
mov
jne
add
sbb
clc
xchg
jns
and
dec
pop
dec
add
sarl
clc
xor
lds
daa
call
cmp
cmc
mov
sbb
add
mov
jp
nop
mov
bound
cld
fwait
pop
pop
pop
jmp
popa
fcoml
cmp
fsubs
pop
mov
imul
imul
rol
xchg
imul
sbb
jge
push
sbb
sbb
or
lods
mov
or
idivl
push
or
ficoms
fstp
inc
shrl
pop
cmpsl
in
movsl
ss
push
es
mov
push
int3
and
out
push
mov
das
cmp
xchg
sub
cld
push
fwait
pop
loopne
pop
pop
xor
sahf
scas
std
xchg
mov
mov
lret
mov
sbb
mov
lahf
mov
lret
push
divl
aam
jp
lods
jmp
cmp
clc
pop
outsb
jl
aaa
push
dec
mov
mov
cmc
adc
cltd
jp
xchg
pop
push
js
sbb
mov
ja
jo
ds
sbb
mov
sbb
mov
mov
xlat
push
mov
ja
jle
sti
std
xchg
sahf
adc
mov
ficoml
xchg
xor
sbb
inc
aas
mov
xchg
out
gs
cltd
push
arpl
out
std
pusha
dec
sahf
insl
adc
sbb
sbb
outsb
pop
lea
mov
lldt
fmul
js
out
insl
inc
dec
data16
insl
pushw
and
je
lods
xchg
rcr
jns
sahf
cmc
ss
mov
cmp
cwtl
sbb
lock
ljmp
cwtl
outsb
jmp
js
pop
sbb
cmpl
cs
pop
mov
movsl
dec
jnp
push
dec
pop
gs
jl
scas
add
push
es
jge
mov
mov
cmpsb
imul
pop
mov
shlb
pop
sbb
shll
call
mov
add
sbb
sub
cmp
addr16
clc
mov
push
pop
in
pop
sub
mov
adc
fs
decb
mov
pop
pop
adc
mov
loop
pop
pop
pop
std
and
arpl
push
sub
adc
fstl
into
push
jg
and
dec
xchg
mov
clc
sarl
and
in
shlb
in
push
mov
pop
or
sti
adc
push
call
pop
arpl
shrl
pop
rorl
xorl
dec
xchg
push
xchg
push
je
push
cmpsb
movsbl
push
shl
jge
roll
addr16
push
leave
sbb
or
enter
shlb
popf
int
jge
push
lret
sub
xchg
clc
cmp
mov
sahf
lods
or
push
in
aam
cmp
dec
pop
mov
jg
stos
lahf
fcmovnbe
mov
and
mov
sar
fsubrs
or
imul
pushf
into
ret
mov
ffree
js
push
push
push
mov
pop
std
mov
xchg
cld
mov
adc
les
pop
sbb
and
rorl
in
mov
mov
dec
cmpsb
jg
mov
leave
push
data16
int
jne
loopne
and
mov
fxch
adc
das
outsl
lahf
adc
stos
mov
fadd
rcrb
xor
repz
pop
adc
mov
jns
jle
popa
mov
data16
mov
jle
dec
push
mov
mov
stos
xchg
rcr
es
imul
xor
xor
pextrw
fwait
mov
repnz
and
dec
cmp
into
add
lods
sahf
dec
ficoms
lods
jo
popa
aam
cs
ja
xlat
pop
leave
mov
aam
sbb
loop
sub
fnsave
out
and
jae
movsb
lret
mov
andb
mov
gs
add
push
fistps
dec
lcall
add
sahf
rcl
pop
sbb
into
aaa
xchg
jge
sbb
scas
or
cs
repnz
call
stos
adc
aaa
vunpcklpd
gs
inc
pop
sbb
sub
ret
sar
clc
jp
rcll
sahf
jo
or
dec
clc
das
mov
jbe
in
jnp
dec
lret
inc
scas
mov
enter
lret
fs
ds
pop
pop
mov
cmp
mov
cs
pop
aad
sbb
hlt
outsb
fnstsw
icebp
mov
lret
mov
iret
push
dec
popf
pop
xor
aaa
movsl
bound
into
dec
nop
stc
test
js
inc
loope,pt
fsts
int
lds
js
je
mov
lea
loopne
mov
pop
push
cmp
jl
mov
sbb
lods
popf
loopne
pop
mov
shlb
call
aaa
stos
orb
add
add
push
push
xor
dec
push
loopne
sub
orb
sti
pop
jmp
es
push
call
jb
mov
pop
ret
dec
xchg
inc
fidivl
les
insb
lcall
push
mov
pop
pop
adc
je
xor
fsubl
sbb
mov
int
jmp
lret
movsb
xchg
fsubl
je
add
in
push
jo
stc
add
mov
sarl
mov
and
mov
hlt
lods
pop
inc
mov
hlt
inc
aaa
mov
lods
inc
xchg
mov
mov
pop
gs
mov
push
jo
hlt
pop
push
ja
mov
out
sbbl
push
push
push
lock
outsb
push
aaa
cli
insb
mov
pop
xlat
rcrb
adc
xor
movsl
fisttpl
pop
movsb
mov
mov
pop
push
add
jg
addb
xchg
leave
mov
rol
pop
inc
jl
push
jo
jns
mov
in
popa
stc
mov
mov
cmpsl
test
jo
sbb
adcb
cwtl
pushf
in
push
lahf
daa
adc
jno
pushf
sub
aad
cld
rorl
xor
int
dec
into
insl
rcrb
psubsb
fwait
aad
pop
pushl
mov
cmp
rclb
inc
into
ja
xor
test
dec
mov
xchg
ret
inc
xchg
pop
pop
pop
inc
lcall
xchg
dec
jp
fmul
int
push
push
pop
inc
les
outsl
fimull
xor
mov
mov
cwtl
fcompl
gs
mov
int
ds
mov
mov
js
jne
push
jo
lea
xor
ret
cld
sub
lcall
inc
pop
cmp
xchg
adc
dec
xchg
dec
fcoml
cmp
cmpsb
mov
jecxz
hlt
scas
loop
ret
or
jnp
fsts
push
adc
add
enter
xor
repz
push
xchg
cmpsb
fmul
in
xchg
cld
fwait
sub
pusha
jb
xchg
shrl
mov
inc
int
push
fdivrl
decl
push
cs
mov
jecxz
les
xchg
stc
mov
jmp
and
adc
mov
jg
push
std
jo
les
popa
cmp
aam
pop
aas
xchg
mov
fstpl
in
sahf
loopne
pop
cmpsb
and
imul
mov
mov
mov
mov
inc
dec
ss
mov
loop
mov
cmp
xor
cmp
aam
push
lods
movsl
jge
jmp
xchg
pop
or
and
adc
jmp
ficompl
das
adc
pop
pop
pop
xchg
aas
mov
mov
imul
icebp
pop
mov
jo
insb
mov
inc
ret
mov
lods
sub
gs
sti
fwait
gs
fldt
jl
das
rolb
in
mov
jo
fnstcw
in
lcall
jmp
and
cmc
mov
lods
mov
mov
ret
ret
push
pop
inc
sub
mov
xchg
ret
mov
mov
fistl
pop
inc
pop
fldt
inc
or
xor
fwait
xor
add
pop
cmpsl
dec
sub
xchg
fnstsw
push
sahf
test
fdivr
push
pushf
jns
mov
and
daa
jns
mov
jl
cld
insb
cmp
mov
adc
inc
lods
push
test
out
lods
popf
pop
add
pushf
scas
push
mov
xor
stos
es
push
jg
mov
adc
xlat
or
or
lods
xbegin
out
push
aad
shll
pop
push
dec
push
sub
out
cmpl
push
adc
insl
mov
push
les
fdivr
xor
jns
scas
das
fnstsw
jl
add
pop
sbb
mov
and
repz
mov
pop
repz
pop
sbb
adc
add
lcall
movsb
push
leave
nop
mov
ds
rcr
xchg
je
mov
xor
aad
and
scas
out
sbb
sbb
outsl
cmp
sub
add
dec
and
je
push
pop
shl
jae
jg
fistl
or
sub
int3
xor
xchg
popa
test
in
aaa
sarl
imul
mov
bnd
divps
sbb
lods
cltd
orb
xor
aad
orb
adc
xor
gs
stc
pushf
xor
xor
jp
lcall
rcrl
cmp
push
jecxz
mov
int
movsl
add
fldl
ret
stc
mov
insl
xchg
popf
in
popf
push
andb
fstl
popf
shll
sub
mov
cmpsb
call
add
ja
inc
out
inc
cmc
pop
movsb
addr16
adc
aam
stc
mov
jge
lods
add
pop
mov
loop
mov
xchg
xor
out
scas
outsb
jo
aaa
inc
mov
mov
cmp
dec
add
jp
sub
push
cmp
in
dec
scas
int3
mov
add
xor
add
pop
xchg
inc
neg
jge
sub
or
dec
inc
xor
pop
addr16
xchg
clc
pop
cmp
jo
xor
rorl
or
lret
adc
xchg
mov
lea
ds
cmc
rcl
fistl
int3
lret
sub
and
jp
pop
imulb
enter
repnz
aam
loope
fsubs
pop
mov
and
pop
push
sahf
pop
repz
pop
cmp
push
std
clc
ljmp
mov
cmp
jp
xorl
mov
pop
adc
inc
test
cmp
out
imul
fadds
xchg
mov
adc
out
add
push
repnz
rcrl
mov
sti
lods
pop
call
iret
pop
out
sbb
test
gs
in
sub
lods
pop
popa
push
popf
and
cmp
test
shr
js
enter
mov
decl
ss
ret
scas
movl
push
sbbb
pop
mov
in
xchg
rcr
int
mov
int3
mov
adc
and
push
shl
push
mov
mov
out
mov
pop
or
pop
outsb
mov
loopne
and
aas
test
repz
gs
rcrb
gs
xchg
sbbb
push
adc
push
push
cmp
pop
xor
cmp
fimull
cmc
repz
int
mov
push
dec
imul
sbbl
jns
les
xchg
adc
sbb
in
lcall
add
push
sub
xchg
and
dec
fstpt
cmpsl
xchg
jg
enter
popa
frstor
jmp
rcll
sub
xlat
push
dec
aas
dec
xor
adc
sbb
cmpl
dec
in
sub
test
jns
adc
scas
arpl
jno
notb
test
int
rcll
pop
and
mov
and
fiaddl
adc
cmp
xchg
shlb
dec
cwtl
cmc
pop
mov
inc
shrl
incl
repnz
mov
repz
addr16
lds
pusha
test
mov
outsl
sub
jecxz
xor
sbb
enter
jle
dec
lret
hlt
jl
add
sarl
lret
fisttpll
dec
jmp
orl
ffreep
popa
mov
mov
out
jge
into
loop
pop
push
pushf
pop
jge
iret
jge
jge
jmp
dec
and
lcall
add
push
cmp
jl
or
and
mov
cmp
aam
mov
int
clc
aam
shr
fst
mov
sti
mov
push
bound
std
icebp
xchg
mov
mov
int3
push
jno
test
outsl
idivb
cmpsb
fildl
lds
imull
xor
mov
nop
in
lods
mov
pop
xor
dec
rcr
inc
or
jne,pn
lahf
xchg
xor
fsts
je
out
pushf
push
mov
nop
aad
shrl
cmp
pushf
jmp
lods
pop
cwtl
popf
mov
mov
scas
sub
pop
adc
dec
xchg
pop
pop
cld
lods
adc
mov
pop
lds
inc
lods
movsl
dec
pop
stos
jno
fucom
fadd
jno
push
xchg
movsb
sub
rorl
bound
xchg
lea
out
pop
inc
mov
repnz
test
cmp
mov
add
std
mov
sbb
jp
pop
negb
adc
jmp
mov
out
sahf
movsb
adcb
jp
cmp
test
ret
dec
pop
je
out
fnsave
movsb
mov
mov
lds
mov
outsl
cmp
xor
clc
es
test
lds
imul
jp
iret
call
inc
xor
lock
shll
xchg
pop
or
leave
mov
stos
jns
fdivp
jo
mov
xchg
test
fdivrp
sarl
or
test
cmc
push
xorb
sub
xlat
pop
lds
jecxz
mov
xorb
mov
in
jnp
add
cmp
adc
pop
pushf
js
mov
mov
mov
sub
mov
xchg
xor
pop
jge
mov
fcoml
icebp
out
push
cmp
and
mov
repnz
pop
mov
dec
fsubl
mov
addb
xor
xchg
daa
jle
ss
mov
add
sub
ret
inc
lcall
add
xor
daa
or
fstp
dec
or
mov
cs
js
mov
mov
fsubrl
lods
or
out
stc
mov
pusha
js
sub
push
add
push
jp
pop
loop
dec
in
inc
pop
or
ret
das
outsb
bound
scas
ljmp
dec
inc
dec
fsubrp
mov
pop
inc
mov
lahf
xbegin
mov
inc
imul
adc
pop
lods
loope
jge
pop
sub
xor
pusha
inc
outsb
mov
sub
mov
dec
xor
sub
cwtl
shll
mov
jo
outsb
sbb
xor
mov
push
sbb
mov
test
push
jb
jg
data16
add
mov
arpl
je
mov
rcrb
xchg
ja
fs
xor
mov
mov
xchg
cmp
cmp
push
push
imull
adc
aam
cmp
pop
jmp
and
jge
imul
nop
cmc
icebp
cmpsl
jp
jmp
mov
cmpsb
insl
loope
in
idivl
gs
dec
jnp
push
xor
dec
adc
bound
mov
in
mov
mov
cmpsl
imul
call
lods
dec
add
mulb
jbe
ja
nop
inc
repnz
out
bound
jae
sub
and
xchg
mov
out
aad
aad
mov
stc
stos
push
xor
cs
repz
fs
mov
xchg
mov
addb
jp
shl
mov
outsl
adc
sbb
inc
push
fsubrs
sbb
and
cmpb
outsl
fisttps
aaa
jno
mov
xchg
adc
push
popa
add
cmpsb
insb
cmpb
test
mov
sbb
fmuls
insl
sbb
out
fs
stc
mov
push
xchg
pop
imul
mov
lods
jns
xor
pop
stc
mov
aas
mov
ja
es
cmpsl
sub
mov
sarb
in
out
scas
mov
test
cld
fsts
pop
aam
lods
js
or
adc
aas
lock
lods
push
insb
jge
pop
subl
shll
push
clc
stos
inc
mov
cmp
in
sti
jge
mov
mov
mov
sbbb
xlat
fimuls
inc
cmp
sbbb
clc
cld
dec
or
fdivr
cmp
enter
sub
cli
inc
aam
cmpsl
rol
mov
decl
iret
lret
mov
sarl
clc
pushf
mov
cmpsl
fcomp
cwtl
push
push
cwtl
lcall
xchg
fdivrl
mov
xchg
fnstsw
ret
push
pop
lcall
xor
and
jle
shl
movsl
dec
repnz
lods
cld
xchg
inc
push
jns
mov
inc
cmp
dec
mov
cmp
add
mov
add
sahf
repnz
popa
push
sbb
xchg
lock
rcr
fucom
cmp
into
sbb
pop
cmp
in
orb
jle
adc
xchg
mov
aaa
push
xchg
mov
mov
mov
inc
iret
cld
aad
ljmp
mov
xchg
ja
sub
mov
mov
mov
icebp
repz
mov
push
pushf
pop
std
rorl
cmp
shll
push
cmp
movsl
ds
lds
xor
lods
cwtl
movzwl
inc
scas
dec
cli
insl
cmp
xor
lret
xchg
mov
xor
sub
push
sub
sub
aas
cwtl
paddb
mov
lock
xchg
push
mov
in
je
jl
and
cli
repz
cmp
jmp
push
fldcw
mov
mov
jle
fdivr
movsb
adc
repnz
jle
cld
dec
cmp
fwait
push
sbb
mov
adc
jge
cld
out
mov
xchg
je
and
ret
pop
int3
test
pop
outsb
data16
push
cmp
imul
arpl
mov
jne
mov
mov
push
jne
fcompl
pop
xlat
clc
sbb
sbb
push
mov
scas
cs
popa
xchg
cmpsl
pushl
lcall
shrb
cmp
cld
or
arpl
jb
xchg
pop
das
test
lock
stos
cmpb
jb
decl
stc
sub
sbb
push
push
xchg
mov
or
sahf
xchg
sub
aam
out
inc
xor
dec
loopne
mov
or
pop
mov
arpl
sub
push
lods
cmp
aas
mov
sbb
je
mov
jo
cli
mov
lods
pop
mov
dec
mov
pop
xor
addr16
sbb
cmpsb
mov
lods
test
add
push
mov
jne
and
out
mov
push
pop
fistl
out
xlat
fcompl
movsl
pop
or
xlat
outsl
push
add
aam
adc
out
xchg
mov
cmp
sbb
xchg
fcoml
and
rcll
in
int
jg
xor
int
xchg
sbb
lods
pop
sbbb
shlb
pop
les
push
out
mov
int
inc
sbb
sub
pop
aad
leave
pop
mov
aam
and
rcr
lds
pop
adc
xchg
mov
push
pop
popa
sbb
pop
mov
mov
add
cmp
stc
mov
movsl
and
add
cmp
xchg
xchg
je
fcom
arpl
fsub
or
mov
aad
fadds
jmp
in
sahf
loopne
mov
daa
repnz
std
sub
jbe
lcall
push
sete
stos
rcrl
push
test
adc
mov
xchg
xor
sbb
popf
adc
mov
imul
or
inc
adc
pop
jle
cmpsb
cld
or
mov
mov
nop
xor
pop
lret
pusha
sub
imul
adc
arpl
cld
xchg
in
ja
divpd
push
fdivr
xchg
mov
mov
cmp
jl
shll
sbb
aam
mov
hlt
in
movsl
enter
imul
jge
inc
std
insl
fistpll
aam
out
cltd
loopne
test
xchg
shrl
jmp
add
test
aas
sub
iret
fstpl
mov
and
rorb
imul
subb
cmp
jns
aam
stos
push
fdivrs
and
push
add
cmpsb
push
or
pop
xor
pop
sbb
aas
cmpl
xor
xchg
jae
stc
adc
push
psrlw
aaa
in
enter
outsb
ss
or
sahf
jbe
inc
js
xor
xchg
sbb
sbb
mov
icebp
pop
lods
push
cmp
outsb
movaps
jge
fxch
insl
test
mov
push
inc
mov
je
cmpsl
mov
jmp
cmp
dec
mov
cmp
int3
or
clc
test
jb
push
jo
cmp
dec
lods
adc
xor
js
insl
std
shll
or
mov
sub
xchg
ret
out
ficomps
cmpsl
pop
arpl
mov
cmp
cmp
int3
stc
sub
loope
out
and
xchg
mov
fcmovb
incl
pop
sbb
pop
xchg
ffreep
cmp
shr
mov
std
adc
popf
mov
test
push
jp,pt
mov
insb
mov
shlb
mov
jle
test
popa
ss
xor
jle
popa
and
ret
stc
subb
into
sub
filds
fs
popf
jnp
cs
lods
adc
mov
fiaddl
cmpsl
sbb
xlat
sahf
cmc
mov
pslld
xor
repz
cmp
mov
push
pusha
xlat
pop
push
rorl
sahf
shrb
rcr
sub
xchg
pushf
imul
or
jg
lahf
jne
popa
push
push
adc
cmp
jb
pushf
mov
xchg
popa
stos
insl
mov
mov
dec
out
pop
es
jo
imul
xchg
sub
movsl
pop
push
divl
repz
sahf
rolb
jae
jo
fwait
pop
mov
lret
mov
js
mov
push
or
push
int3
cmp
push
mov
lock
sub
mov
std
and
clc
and
popa
faddl
lret
mov
push
out
xor
push
in
cmp
adc
data16
sar
inc
scas
cmp
test
ds
mov
push
mov
adc
test
inc
jbe
push
movsl
mov
mov
aad
movsl
push
mov
mov
mov
fdivl
into
jo
stos
sub
icebp
mov
arpl
xchg
int3
loope
jns
aad
movsl
xchg
movsb
or
data16
movsb
sbb
inc
mov
lret
and
fstps
pop
xchg
xchg
sti
push
rcll
aas
push
lds
sub
xor
fcom
xor
add
ds
lcall
dec
mov
mov
js
mov
sub
pop
jmp
mov
pushf
push
fldl
mov
push
cld
lods
xlat
mov
divl
xor
out
or
clc
xchg
adc
inc
xlat
call
fsubr
std
jae
push
shll
add
pop
and
pop
adc
fucomp
leave
dec
push
aad
pop
std
addr16
sti
xchg
pop
jp
xor
lods
xlat
inc
scas
inc
shll
fidivrl
aam
ret
and
pop
lods
ljmp
daa
shll
sbb
or
cmp
jo
outsl
fistpl
clc
xchg
cld
cmpsb
xchg
gs
push
lcall
clc
mov
aad
mov
mov
frstor
out
cmpsb
mov
mov
jl
sbb
dec
js
loope
std
mov
mov
cmpsl
xchg
mov
roll
or
sahf
dec
mov
vorps
lret
add
mov
sub
or
pop
fildll
sub
xlat
fsubr
push
or
push
inc
pop
jecxz
dec
pushf
adc
add
jb
sahf
popa
iret
test
xchg
pop
mov
mov
bound
xlat
sbb
lods
xor
pushf
add
cmp
rcr
jae
fsts
fisttps
adc
mov
sub
int
fldenv
inc
sub
mov
in
jb
jge
orb
xor
out
ror
push
insl
hlt
cmc
jge
jnp
pop
ljmp
and
repnz
mov
icebp
jp
mov
insb
mov
mov
je
jge
movsl
or
mov
mov
fldl
in
xchg
adc
mov
out
cld
fwait
stos
insb
sbb
or
leave
call
push
add
into
hlt
scas
pop
mov
jg
sub
out
popf
sub
xor
fidivs
pop
rclb
negb
leave
test
jne
jge
arpl
sbb
stos
dec
push
mov
mov
and
cmp
pop
mov
xchg
sub
cmp
xor
dec
inc
xor
jl
in
clc
jb
inc
sbb
leave
adc
xlat
test
jmp
das
sub
pop
or
fcomps
jle
pop
jge
out
inc
cltd
adc
mov
dec
int3
dec
and
pop
int
sub
and
cmpsl
inc
or
bound
je
adc
jg
mov
jae
repnz
cmp
sub
subl
fisttpll
dec
push
sarl
int
xor
inc
rol
ljmp
popf
sbb
inc
jl
daa
fnstcw
or
push
ret
out
pushf
dec
jno
or
shll
add
sti
jl
sahf
jg
repz
sti
mov
pop
inc
ljmp
mov
xor
loope
nop
pop
jbe
outsb
adc
push
pop
shrl
jns
mov
push
push
fmull
push
icebp
jbe
adc
int
pop
mov
cld
mov
gs
xor
lret
das
sub
jne
xchg
and
repz
ja
pop
into
shrl
jecxz
je
push
sbb
fdivr
movsl
popf
inc
xor
aam
popf
pushf
add
insb
cmp
outsb
lock
or
push
stos
flds
popf
ja
push
add
iret
pop
jle
xchg
pop
arpl
mov
insl
xchg
or
jne
sbb
ret
mov
shr
adc
pop
sub
stos
inc
sbb
cmp
xchg
sub
aam
cmp
rcrb
ljmp
add
cs
mov
cmp
xchg
pop
sub
ljmp
dec
int
stos
push
nop
cmp
mov
pop
pop
sub
xchg
cld
out
push
outsb
adc
ds
xchg
mov
dec
xchg
mov
fldl
xchg
bound
fwait
inc
in
aad
orps
in
sbb
mov
cmp
iret
rcrl
sbb
cs
mov
rolb
jne
cmp
lcall
rcrb
test
sbb
mov
mov
pop
dec
cwtl
in
flds
test
popa
inc
push
jb
dec
adc
push
xor
mov
dec
clc
add
adc
outsb
std
jne
xchg
sub
mov
int
repnz
sahf
ja
push
xchg
push
es
fcoms
inc
mov
add
xchg
lock
ljmp
adcl
jmp
sub
mov
sbb
adc
xor
pop
and
add
add
scas
sub
jp
xchg
or
pop
jnp
pop
into
out
push
out
pop
xchg
mov
insb
int
je
shrl
mov
sbb
orb
adcb
adc
sbb
data16
push
jl
pop
rcrl
mov
jmp
cwtl
xchg
repz
mov
cs
push
int3
xchg
inc
js
mov
adc
mov
adc
pushf
ret
jle
mov
xchg
repz
icebp
popa
pop
mov
pop
fidivl
loop
xchg
cmc
adc
dec
xchg
cmp
int3
push
xor
cmp
mov
adc
popf
test
idivb
add
mov
mov
movsl
ja
pushf
shll
pushl
call
pop
dec
mov
sub
cmc
push
mov
cmp
js
push
sbb
int3
stc
mov
pop
xchg
sub
push
gs
out
frstor
test
dec
decl
xchg
sarb
jmp
inc
stos
or
pop
outsb
ret
lret
out
pushf
xchg
adc
loop
sub
adc
push
adc
mov
add
sti
dec
outsb
out
test
push
lret
mov
dec
pop
scas
test
lcall
out
mov
lcall
or
push
notl
scas
setle
sbb
pop
and
pushf
fstl
mov
popf
sbb
sahf
fbld
dec
stos
or
xchg
and
mov
adc
xchg
lcall
hlt
mov
fldcw
inc
push
in
sti
dec
mov
stos
xchg
mov
data16
dec
jl
cmp
pop
adc
mov
rol
sub
or
ficomps
data16
frstor
jmp
cmp
inc
pop
faddl
xor
mov
mov
stc
pop
mov
pop
dec
sbb
mov
jne
jbe
lds
mov
mov
lds
pop
pusha
mov
mov
fdivr
cmpsl
ror
adc
lcall
stc
aaa
mov
roll
cs
mov
fwait
sbb
sbb
lcall
loope
push
sub
out
sub
lcall
fs
pop
jge
push
adc
dec
loopne
sbb
fbld
ja
jb
pop
cltd
mov
insb
pop
das
mov
mov
fs
sti
aam
push
mov
mov
pop
popa
pusha
adc
int3
inc
push
mov
inc
lods
into
mov
leave
cmp
out
inc
pop
lods
decb
andb
fbstp
adc
dec
jl
adc
rclb
jbe
cmp
hlt
sbb
xchg
push
xchg
and
rcr
ja
rcrb
imulb
inc
das
iret
inc
ja
xchg
inc
cmp
xchg
push
push
ret
and
aaa
mov
sub
mov
sub
cmp
sub
xor
push
in
inc
mov
aam
fistl
cmpsb
lret
mov
call
mov
js
popa
mov
aas
or
rcll
mov
mov
dec
jmp
pop
xor
push
pushf
lds
mov
xchg
dec
xchg
lea
pop
cli
or
fldl
dec
mov
mov
sbb
loopne
mov
mov
cmpb
sbb
imul
lds
jae
jge
idiv
repz
xchg
or
stc
push
out
int3
xchg
ret
xchg
hlt
lret
add
pop
xchg
insb
add
sub
and
mov
sahf
cmp
xchg
cmp
pushf
cld
cmp
push
hlt
pop
lahf
xlat
dec
ficoml
rolb
sbb
sbbl
bts
insl
or
in
mov
int3
sbbl
xor
stos
mov
pop
iret
jo
lds
sbb
inc
cmpsb
hlt
outsb
cmpsb
lahf
mov
mov
inc
xchg
push
xor
pop
lds
dec
shl
xchg
xlat
sub
xor
mov
and
mov
push
sbb
push
stc
fists
sahf
mov
out
xor
jb
aad
cltd
push
outsb
sbb
pop
rcrb
bound
insl
sbb
or
push
push
xlat
bound
add
mov
mov
fdivr
jnp
dec
pusha
in
pop
mov
out
jl
mov
testb
xor
divb
fcomps
shll
in
jp
push
xchg
lods
shrl
popf
mov
dec
stos
jg
sub
xchg
ret
mov
dec
sub
jl
aas
push
dec
jo
loop
mov
mov
push
shll
loop
push
xchg
mov
pop
sub
je
jle
fsubrs
mov
jnp
mov
roll
fwait
add
pop
lds
stos
mov
test
fst
pushf
pop
push
inc
into
inc
pop
sarb
adc
mov
pop
loop
cmp
stos
imull
mov
sbb
cmp
popa
xchg
pushf
insb
pop
xchg
dec
push
mov
cmpsl
dec
xor
mov
mov
movsb
inc
xor
push
pop
cmpsb
sar
push
xchg
and
adc
repz
dec
sub
inc
repnz
pusha
jns
pushf
xchg
push
xchg
cmp
or
xor
dec
mov
ffree
push
nopl
out
cmp
jge
es
cmpsb
sahf
and
iret
fdivrl
jae
mov
imul
fdivl
mov
dec
aam
add
mov
mov
repnz
lea
pop
jo
jae
subb
out
sbb
into
sbb
jb
pop
sarl
mov
cmp
cmc
mov
dec
mov
mov
sarb
adc
insb
in
dec
aas
shlb
ljmp
mov
dec
nop
rcrb
adc
ret
xor
pop
and
imul
daa
add
cmc
rcll
test
ret
out
test
enter
push
xchg
pop
cmc
scas
cmp
sbb
fldt
neg
sbb
imul
add
mov
sti
jnp
add
ds
fistpll
dec
jns
test
mov
push
jnp
mov
jns
sbbb
rcrb
pop
aaa
or
cmp
jecxz
jge
sub
pop
fidivs
cld
pop
or
out
push
xor
or
pushf
in
jp
xorb
jge
outsb
aaa
inc
inc
cmp
push
xchg
add
aad
insl
jo
loop
fcoms
cmc
fldenv
xor
fidivl
ds
jmp
mov
rol
in
mov
mov
and
inc
xor
dec
pop
mov
xor
leave
and
push
jge
int
mov
lods
into
jae
imul
test
push
xor
outsb
out
fidivrl
jne
lock
jle
lods
adc
mov
jl
jl
xchg
mov
lea
inc
pushf
jmp
mov
aas
je
filds
jnp
push
xchg
fimull
mov
shll
xchg
and
iret
cmp
test
cld
push
stc
lret
cmpsb
cmp
std
nop
dec
sub
repz
hlt
pop
popa
adc
fcoml
enter
inc
sbb
adc
mov
sbb
sbb
test
movsb
jl
ja
xor
stos
pop
repz
aam
lods
insl
iret
lods
mov
or
add
popf
pop
mov
lret
jmp
xchg
mov
jnp
prefetch
mov
push
cmp
lss
cld
pop
lock
mov
int3
mov
subps
push
jns
rclb
sub
xchg
pop
dec
out
inc
bound
cmpsl
mov
push
pop
dec
aas
sub
xchg
out
jne
push
lret
shl
das
into
iret
pop
xlat
xor
adc
xlat
sbb
xchg
dec
xor
jae
daa
xchg
mov
movsb
xor
jae
pusha
out
lods
inc
repnz
lock
out
adc
pop
jae
sub
pop
xchg
inc
mov
movsb
dec
sbb
imul
inc
inc
pop
daa
adc
aam
daa
dec
xchg
gs
imul
lcall
ret
dec
jb
ret
repz
leave
push
push
mov
adc
fwait
jl
push
push
arpl
dec
push
jl
sub
inc
cmp
rcrb
fldenv
jb
pop
in
sbbl
lods
test
dec
xrelease
out
pop
lahf
mov
dec
int
nop
jg
push
es
jge
xchg
int3
inc
adc
mov
mov
sbb
jl
int
jle
dec
add
mov
cmp
cmp
fadd
mov
fdivrl
shr
cs
popa
mov
lret
shlb
mov
inc
stc
adc
int3
mov
cli
inc
sub
and
mov
add
pop
cwtl
push
out
hlt
mov
mov
out
pop
xor
shll
pop
or
jns
push
mov
dec
push
lret
fsubs
pop
lods
repnz
movsl
adc
ret
adc
ja
or
fists
and
jae
push
pop
je
out
dec
adc
xor
roll
sbb
arpl
fcompl
notl
xorl
sahf
mov
outsl
mov
insb
ret
in
jae
push
ds
loope
xor
and
xchg
sbb
adc
and
fisttps
ja
repnz
or
shll
mov
aad
je
ficoml
scas
int3
pop
mov
cmpsb
mov
push
sbb
lcall
mov
cmp
jecxz
outsb
adc
cmp
jge
cmp
ftst
mov
inc
in
pushf
ret
xchg
inc
xchg
jb
pop
rcl
test
sub
inc
imul
popa
add
jl
pop
out
fistl
xchg
mov
sub
fcmovne
nop
das
into
pop
repnz
adc
bound
cwtl
sti
push
sarb
inc
movsl
sti
ret
or
adc
push
sub
mov
aam
test
idivl
std
sub
mov
dec
cltd
in
inc
decb
xchg
or
jo
jne
jne
ret
jmp
or
outsl
cmp
cld
cmp
dec
inc
test
bound
fsts
pop
les
xchg
mov
paddsw
repz
dec
add
push
xchg
scas
adc
xchg
clc
adc
lods
fbstp
popa
jp
fcmovbe
pop
xor
pop
dec
xor
aad
xchg
mov
clc
mov
or
mov
push
fcoms
cmp
cwtl
mov
popa
dec
stos
mov
int
cmpsl
dec
dec
mov
pop
sub
mov
adc
fmuls
inc
insl
faddl
es
cmp
mov
rcr
mov
je
in
cmp
inc
stc
mov
mov
dec
jg
std
mov
dec
sbb
popa
int
pusha
inc
adc
adc
into
sbb
adc
jne
xchg
test
lahf
pop
lods
test
xor
test
jne
leave
movsl
adc
jp
clc
mov
sub
mov
stc
fdivs
movzwl
les
pop
pop
lahf
test
pusha
popf
mov
sahf
sti
repnz
ja
lods
pop
xchg
in
mov
xchg
sbb
cmp
pop
mov
hlt
arpl
aam
xor
movsl
aad
xor
inc
popf
push
int3
mov
cmpsb
sbb
clc
cmpsl
popa
adc
ljmp
cli
xchg
or
sbb
shl
inc
push
push
mov
inc
and
out
inc
sbb
fwait
mov
mov
imul
sbb
xchg
movsl
out
xlat
mov
jmp
mov
lock
sbb
adc
xchg
cmp
test
aas
shr
cmp
jg
push
ret
sub
add
popf
adc
push
in
aam
int
jge
pop
cli
push
mov
mov
shrl
jmp
popf
mov
cmp
xchg
dec
clc
mov
out
mov
dec
enter
or
or
pop
jmp
fldl
xchg
push
cmp
mov
sbb
xchg
inc
cmp
mov
inc
pop
xchg
pop
popa
and
lret
xchg
jecxz
push
sarl
inc
or
add
xchg
mov
mov
fsubr
cwtl
imul
fiaddl
xchg
clc
daa
mov
je
sbb
inc
pop
pop
sub
add
push
xor
inc
rcll
fcmovnbe
xlat
sub
and
mov
fwait
sar
lret
stos
pop
xor
sub
adc
icebp
pop
xchg
shrb
sbb
push
and
jp
repnz
xchg
add
enter
mov
rorb
mov
cmp
aad
cmp
lcall
cmp
decl
xchg
out
push
outsb
sbb
jns
movb
shll
pop
roll
cmp
cmp
xor
mov
shrl
xchg
adcw
loopne
lods
scas
outsb
outsl
push
cmpb
jle
sahf
stc
data16
out
je
xor
shlb
and
out
ret
cmp
aad
stos
imul
pusha
lea
or
popf
push
xchg
sub
ret
ret
or
aad
pop
loop
sbb
mov
je
cmp
push
push
pop
sti
pop
std
push
push
imul
in
or
fistl
aam
adc
xor
xchg
cmp
pop
jae
addr16
mov
sti
es
pop
lods
shlb
dec
jae
mov
pop
jp
pop
xor
pushf
add
dec
testb
add
fiaddl
pop
dec
and
aam
out
xchg
push
cltd
push
aam
fwait
addr16
push
lret
aam
xor
ret
stos
insb
jp
int3
lds
xchg
das
xor
sar
pop
jae
pop
popa
dec
sbb
std
and
pop
ja
jbe
inc
dec
fwait
jae
push
int
and
std
sub
fldl
mov
lods
jge
shlb
scas
jmp
pushf
test
and
mov
push
jmp
xor
inc
lods
sti
mov
sti
jge
pop
repnz
xchg
add
cmpsb
push
xor
mov
mov
fidivrs
outsb
fcmovnbe
push
jns
mov
mov
fsubrl
mov
dec
call
push
fdivrl
outsb
stos
cmp
or
jl
dec
xchg
lods
jae
jp
fstpl
pushf
xor
ds
mov
jnp
pop
rolb
aad
sahf
and
add
fidivl
test
pop
push
cmp
das
xchg
rorl
scas
out
push
mov
adc
mov
xor
sub
cmp
movsl
in
lds
sar
movsl
imul
mul
push
rcrb
cmc
pop
mov
jmp
jp
sub
out
int
jle
movsb
pop
pushf
lret
pop
inc
test
xlat
or
icebp
fldl
into
push
je
les
cmp
aam
adc
jbe
aam
push
in
push
insb
mov
scas
jns
aam
mov
cmp
into
popa
stc
or
cwtl
cld
out
mov
hlt
cmc
fs
mov
in
jne
dec
test
mov
mov
lret
pop
mov
out
test
bound
mov
in
mov
pop
mov
pop
daa
pop
popf
fbld
xor
out
add
or
dec
mov
and
xor
cltd
add
add
fisubrl
xor
popa
ja
pop
xor
cmp
pop
pop
paddsw
cltd
add
sbb
dec
xor
xchg
sbb
ds
ljmp
push
popf
jo
popa
out
sbb
cltd
xor
pop
repz
push
pop
mul
test
jmp
push
cmp
or
xchg
lods
fnstenv
pop
fsubs
scas
dec
int3
ret
clc
insb
es
orb
daa
inc
mov
and
clc
or
dec
mov
imulb
lcall
fdivrl
inc
mov
pop
and
scas
fsubl
jl
cwtl
mov
not
push
lods
hlt
lcall
pop
and
mov
xchg
push
xor
dec
jp
push
cltd
mov
dec
dec
pushf
dec
fnstenv
test
cmp
in
ret
dec
adc
adc
shlb
flds
adc
iret
jecxz
fwait
xchg
adc
mov
rcll
popf
clc
inc
and
je
mov
inc
cmp
fiadds
rcrl
add
fimuls
jns
jae
stc
dec
mov
enter
and
or
outsb
add
mov
add
outsl
push
popa
sub
sub
stos
cmp
aaa
push
add
mov
mov
mov
sub
mov
cwtl
mov
mov
scas
movsl
pop
adc
std
jb
aaa
dec
in
xchg
mov
dec
mov
cmp
inc
jno
stos
andl
inc
enter
adc
pop
rcll
push
add
lahf
insb
andl
stos
jge
dec
in
fisubs
xchg
rclb
sbb
paddw
pushf
push
mov
movsl
xchg
pop
add
sub
inc
push
pop
aad
mov
jl
xchg
or
mov
pop
cmpsb
xor
call
in
fcmovnb
clc
and
inc
mov
mov
mov
sub
xchg
mov
adc
aaa
lahf
sbb
shr
jne
ds
adc
aam
std
mov
inc
add
pop
add
sbb
mov
out
lock
mov
fstps
adc
pop
sub
pusha
sahf
clc
les
cmp
mov
push
sbb
sti
mov
sub
cwtl
int
cmpsb
cmp
mov
aad
xor
scas
cltd
push
pop
jne
push
mov
adc
mov
push
pushf
imul
mov
loope
xchg
lahf
enter
das
fcmovnbe
pop
rorl
ljmp
cmpsb
popf
out
fldcw
push
pop
sub
adc
xchg
xchg
pushf
movsb
popa
push
push
cmp
cmp
adc
xlat
stos
sbb
icebp
fldcw
mov
xchg
mov
mov
test
sub
dec
ss
insl
ljmp
mov
aam
inc
pop
aam
lods
and
cmc
sbb
aad
pop
divl
loope
jbe
insl
fdiv
sbb
sbb
movl
or
or
dec
lea
scas
mov
cmp
push
mov
push
mov
sub
test
xchg
rcrb
push
push
mov
lahf
aad
aam
stc
push
xchg
push
cmc
xchg
dec
nop
std
xor
push
cmpsl
loope
lods
sbb
lahf
push
stc
pop
imul
stos
push
sbb
push
rol
shll
push
icebp
or
sbb
cmpsl
cmc
mov
inc
sbb
in
fldcw
ja
imul
xchg
sub
aam
lea
adc
clc
out
mov
lods
xor
mov
fistpll
stos
adc
xchg
ljmp
adc
xchg
outsb
mov
or
pushf
mov
mov
cmp
das
sub
call
jg
je
cmp
mov
inc
rorb
mov
jecxz
pop
out
cmp
mov
rcr
in
ja
roll
lret
push
das
aaa
dec
or
pop
jb
cld
adc
and
pop
lods
lret
cmp
fsubr
jne
mov
sub
mov
ds
add
pop
aas
jecxz
inc
jae
fwait
add
rolb
mov
repnz
adc
mov
pop
inc
or
mov
jge
sahf
xor
cld
push
test
sbb
pop
cmp
cmp
in
add
add
loop
pop
lahf
leave
or
cmp
das
cmp
cld
dec
sbb
push
lock
cltd
cmp
push
and
inc
aaa
xor
xchg
fstpt
jl
fnstenv
dec
push
lret
adc
xlat
les
xchg
and
xchg
cmp
xchg
adc
cmp
dec
enter
xchg
cmp
lds
sti
jmp
lret
int3
iret
cmp
outsb
cmp
js
imul
movsb
sub
insl
jge
cmp
lods
mov
in
pop
sub
fwait
sti
push
and
pop
jne
shrb
rcr
xchg
pop
push
mov
movsl
idivb
clc
insb
push
filds
add
push
fistpl
loope
pop
xchg
mov
pushf
clc
xchg
cmpsl
xor
xchg
ljmp
dec
popa
aas
cmp
out
adc
fsubl
jge
ja
mov
adc
pop
shll
arpl
int3
cmc
xorb
pop
fdivl
pop
gs
adc
pop
jmp
rolb
sub
or
inc
movb
mov
sbb
fisubl
cli
pop
or
fdivr
andb
mov
mov
mov
push
test
clc
aaa
in
fisttpll
outsb
dec
pop
cmp
push
inc
ss
sbb
rcll
dec
test
cmpsl
shll
hlt
push
xchg
inc
imul
xchg
xor
stos
in
pushf
and
popf
jne
cmp
push
adc
lcall
std
in
aaa
push
adc
mov
std
sbb
pop
addl
xchg
aam
pop
mov
cmp
jo
pop
fistps
mov
lods
xchg
mov
lock
insl
pop
mov
stc
jbe
hlt
jb
and
ss
mov
iret
out
adc
inc
jg
dec
jge
insb
xor
fisttpll
lcall
stc
and
rcr
mov
dec
sub
scas
or
add
mov
xchg
out
fs
or
add
imul
addr16
sub
and
xchg
sub
not
add
fs
subb
addr16
negb
dec
lods
shll
push
repz
inc
cmp
scas
clc
fs
cmc
cld
cs
out
fs
les
pop
xor
ficoms
fmull
fucompp
push
popw
sub
and
xor
ljmp
pushf
adc
lahf
out
mov
adc
lds
pop
dec
dec
push
add
popf
push
shll
pushf
jle
negb
pop
and
lcall
add
cmp
dec
mov
ret
jbe
je
mov
xchg
cmp
aas
ds
adc
lahf
das
ret
cmpsb
jns
ret
sbb
xchg
or
pop
in
cmp
xor
movsb
lahf
hlt
mov
movd
sub
and
ret
sbb
pop
jg
xchg
lahf
mov
out
mov
lds
popf
popa
out
fmull
pop
xor
mov
subl
inc
incb
pop
adc
rclb
mov
arpl
fwait
mov
push
cmp
xchg
sub
arpl
mov
sbb
popf
addr16
repnz
into
out
push
fucomi
lods
cli
mov
flds
mov
cmp
adc
jne
scas
sub
cmp
or
repz
pushf
adc
leave
fs
sbb
adc
sub
aaa
pop
pushf
sub
inc
push
sbb
pushf
mov
into
xor
ficompl
jbe
fstpt
xor
mov
xchg
lock
xchg
rcll
test
xchg
xor
shrl
cmpsb
dec
pop
jne
jecxz
dec
push
add
cs
out
mov
imul
pusha
mov
xchg
lods
aas
cwtl
sbb
inc
adc
enter
ret
jne
adc
cld
add
pushf
cwtl
push
inc
sbb
jne
sub
das
aad
fstps
jae
hlt
xchg
sbb
mov
mov
cmp
das
add
xchg
rcrl
stc
pop
mov
ljmp
xor
in
mov
mov
pushf
out
int3
imul
fs
mov
negb
sub
cmp
repz
sarl
inc
std
and
adcb
xchg
jle
movlps
imul
popa
dec
rorl
dec
xchg
scas
push
movsl
xor
adc
pusha
pushf
xor
int
push
in
sub
push
rcll
stos
ss
mov
adc
ljmp
xchg
and
clc
mov
shll
leave
adc
sub
pop
out
push
imul
pop
scas
ret
push
lods
and
cmp
int3
pop
jl
loopne
stos
fwait
les
int3
lret
lahf
fidivrl
xor
cmp
nop
in
adc
into
cld
out
push
inc
push
fstpl
aad
cmc
pushf
mov
xlat
jp
jge
cmp
call
ret
vmovntdq
fstl
pop
jg
push
cmc
mov
mov
dec
rcrb
cmp
enter
mov
mov
jnp
bound
testb
lods
cmp
push
sarb
inc
outsl
push
les
stos
jl
pop
in
add
push
adc
and
xor
ret
xor
repz
ss
mov
iret
fucomp
int3
cli
insb
sahf
out
mov
sbb
aam
rcrl
xchg
add
jne
gs
kmovw
fs
enter
stos
lret
jae
adc
xor
push
bnd
loope
xchg
rorb
adc
js
jle
adc
fcmovb
jnp
xor
fnstsw
outsb
add
mov
fisubrl
cmp
jl
test
cmpsb
jmp
push
mov
pop
and
jno
xchg
adc
sbb
push
stc
rcrl
or
push
xor
fidivrl
sahf
jge
test
leave
out
aam
sarl
mov
dec
mov
sarb
dec
cmc
push
pop
adc
fdivl
into
push
sti
ja
add
pop
mov
or
jp
fstl
cld
aam
jmp
mov
sbb
xchg
fcmovu
add
or
cmpsb
xchg
jl
je
filds
int3
cmpsl
lods
cmp
cmpsb
fstpl
dec
jbe
push
or
dec
pop
dec
je
cmp
inc
into
lcall
das
je
mov
xor
hlt
fldl
jp
das
in
lods
mov
mov
fcmovne
xor
ja
mov
pop
fdivs
add
cmp
or
popf
call
lahf
jbe
insl
scas
mov
dec
stos
ds
sahf
ret
lods
cmpl
repnz
movsl
clc
dec
mov
fwait
push
xor
push
inc
jmp
add
rcrb
cmp
mov
les
data16
popf
pop
insl
mov
std
jmp
int3
gs
push
das
insl
mov
cmp
cmp
cmp
jbe
test
ret
insl
or
int
sti
pop
dec
push
ror
sub
push
cmpsl
mov
mov
movsl
cmp
push
push
das
xchg
cmc
imul
out
push
xchg
jns
xor
cmpsl
test
lret
mov
mov
sbb
aaa
daa
sbb
jl
in
or
mov
fstpt
xlat
mov
vpmovmskb
jmp
out
imul
inc
movsl
popa
cmp
shll
mov
mov
or
shll
pop
mov
rcl
fwait
inc
int
outsl
dec
dec
pop
addr16
test
stos
cmp
mov
inc
mov
adc
leave
stc
sti
xchg
xchg
iret
pusha
jle
mov
dec
aad
push
cld
lea
pop
jo
jmp
adc
sbb
aad
inc
int3
daa
mov
mov
hlt
mov
add
fwait
out
in
xchg
xchg
push
aaa
mov
cmp
arpl
push
cmp
xor
xchg
aad
andb
push
jp
xchg
mov
hlt
fisttpl
je
or
out
adc
int
adc
sub
push
mov
xchg
jne
pop
rcll
fcompl
loop
cli
mov
je
hlt
and
cwtl
jno
pop
xlat
jge
inc
lcall
insl
mov
xchg
cwtl
sub
repz
mov
cwtl
adcl
mov
cmpsl
fidivl
repnz
adc
adc
ret
jge
mov
jge
lods
sbb
aas
aam
faddl
mov
shlb
cmc
clc
imul
shrl
mov
adc
int3
sub
adc
in
mov
pop
xlat
pop
push
out
out
adc
inc
mov
lods
inc
je
sbb
aas
iret
inc
push
cld
imul
adc
cltd
cld
mov
xchg
xchg
into
sub
push
fidivrl
pop
outsb
gs
xor
in
mov
mov
mov
aaa
insb
push
in
pop
xchg
adc
insl
xlat
push
jb
shrl
push
outsb
loope
ljmp
das
outsb
loopne
push
mov
loopne
push
cltd
ds
mov
lds
mov
mov
or
pop
xchg
pushf
sub
lcall
inc
insl
sbb
adc
cld
mov
das
data16
cs
rcl
clc
sub
xchg
jb
xchg
pop
int3
mov
mov
outsb
test
je
and
mov
push
pop
shr
sti
push
cld
pop
fs
xor
aam
notb
repnz
xchg
pop
push
adc
add
repnz
aaa
inc
add
sub
in
xor
xor
mov
rclb
iret
cmp
lock
fdivl
cmp
rcll
jl
addr16
repz
mov
jg
popa
popf
xchg
and
xchg
push
outsb
adc
jp
xchg
inc
out
leave
jmp
ljmp
outsl
test
fwait
jbe
xor
xchg
insl
sbb
repnz
mov
dec
cmp
mov
bound
jecxz
dec
ror
lods
inc
cli
and
cld
dec
jl
mov
mov
cltd
or
ja
mov
sub
and
jb
mov
adc
mov
mov
lods
shr
xchg
aam
cmpsl
push
int3
iret
dec
add
mov
dec
mulb
adc
rcl
xchg
xchg
mov
sbb
lods
adc
dec
sub
dec
sub
mov
mov
pop
outsb
lods
pop
push
fld
js
and
sub
aas
insl
cmpsb
int3
sarl
test
push
pop
fadd
fistpl
data16
leave
rclb
inc
mov
clc
and
ljmp
pop
jle
jl
addr16
lock
ret
or
jae
sub
mov
mov
pop
lret
out
aad
loopne
aad
outsl
je
rcrl
sbb
shll
addl
xor
adc
pop
mov
xor
stos
lea
pop
popa
xchg
ss
aam
cmp
ficompl
icebp
inc
mov
adc
ret
mov
cwtl
aam
fistpl
xchg
test
mov
daa
jno
sbb
mov
push
testl
aas
ret
sub
imul
lcall
into
push
mov
test
jecxz
fsub
imul
jecxz
aam
shrb
mov
je
inc
insb
xchg
inc
paddq
sub
cmp
stc
lahf
loope
aad
call
push
mov
mov
or
mov
push
fwait
popa
cmp
and
cli
sahf
fcmovnbe
in
mov
xchg
xchg
inc
out
add
xchg
lods
jbe
lahf
push
ficompl
hlt
lret
jae
inc
cmp
ret
cmpsb
jp
add
push
xor
addr16
in
call
in
xchg
pop
and
push
xchg
mov
je
movsl
sbb
sbb
and
repz
pop
sbb
es
xchg
xchg
adc
into
lods
into
rcll
inc
jb
inc
shll
faddl
add
cmp
scas
adc
into
mov
lock
call
xchg
aam
nop
sub
rol
xchg
push
lods
js
je
shrl
adc
rcl
mov
or
sub
out
scas
pop
sahf
pop
das
adc
pop
push
fneni(8087
cwtl
jno
pop
sbb
orb
sub
add
mov
into
and
sbb
push
push
stc
xor
les
sar
setbe
imul
mov
sub
cmpsl
lods
ja
mov
push
roll
push
or
inc
pop
pop
es
mov
lock
dec
test
fstpt
push
mov
insl
inc
xchg
fisttpll
enter
mov
clc
or
pop
call
lahf
and
jecxz
ret
jl
mov
xchg
shll
xchg
push
mov
push
dec
mov
sub
mov
fistl
popf
fdivl
fadds
pop
push
dec
adc
mov
mov
int
mov
dec
in
int3
std
jl
les
cmpl
fidivrl
out
cltd
mov
aad
pop
sahf
adc
pop
add
out
sub
mov
outsl
repnz
or
mov
or
aad
sub
sbb
mov
xchg
cld
sbb
pop
adc
ss
pusha
cs
test
lcall
mov
sub
push
fadd
push
adc
push
jge
cmc
push
pop
in
adc
rcll
fwait
ror
and
mov
cmp
repz
out
fdivl
call
sbb
out
fnstenv
mov
pushf
or
test
aad
sar
hlt
fistpll
lods
pop
mov
lock
jae
mov
pop
dec
push
xlat
adc
jge
shll
lds
pop
mov
cmp
push
js
repnz
cmp
adc
fdivs
ror
jmp
clc
ud1
sbb
out
push
xchg
shlb
sbb
pop
jecxz
inc
push
xor
xor
lcall
xor
xchg
mov
push
and
fiaddl
popa
or
adc
call
cs
scas
clc
cmpsl
xchg
fmul
dec
cmc
mov
fstpl
jns
movsl
insb
insl
outsb
hlt
iret
mov
popf
subl
loope
cmp
fldt
inc
aas
lods
mov
inc
int3
or
adc
js,pt
adc
push
mov
inc
scas
sub
pop
addr16
adc
dec
mov
push
xor
popf
dec
aam
pop
dec
movsb
push
outsl
pushl
mov
mov
push
inc
mov
cmp
sarb
rcrl
and
and
adc
repnz
jae
or
lea
add
leave
out
insb
sub
ret
cwtl
pop
cmp
and
nop
js
lds
pop
push
cmp
sub
sub
outsb
or
adc
rcll
int
ljmp
std
push
mov
and
jae
mov
cld
dec
nop
lds
pop
mov
dec
cmpsl
push
mov
jl
mov
sub
lds
ja
in
sti
xor
loopne
mov
aad
jo
sbb
pop
aad
pop
inc
mov
push
adc
jne
pop
stos
mov
inc
pop
sahf
popa
inc
jo
mov
pop
sub
mov
lea
cmp
mov
in
mov
and
movsl
cmpsl
mov
adc
and
cmp
xchg
cli
aas
jne
ret
inc
jmp
xchg
push
xchg
dec
in
fucomi
inc
es
inc
fldl
jp
mov
and
sub
sub
clc
add
add
xor
pop
das
movsb
jae
into
fdivr
shll
stos
mov
aam
mov
popa
mov
or
xchg
shrb
mov
dec
adc
jne
leave
pop
mull
in
test
push
mov
xchg
add
icebp
sbb
in
gs
jge
ret
xchg
mov
ds
je
dec
clc
pop
cmp
cltd
mov
push
aas
mov
fnstenv
int3
arpl
cmp
sahf
sahf
popf
cmp
shll
pop
lahf
inc
in
xchg
aad
call
cs
cmpsb
les
mov
aam
imulb
or
mov
sbbl
cmpsb
cmp
fisttpl
push
shrb
mov
pop
shll
stmxcsr
aaa
dec
les
xchg
pop
mov
int3
hlt
jg
test
push
cltd
pop
popa
inc
mov
mov
adc
push
std
rcr
push
adc
push
sub
int
xchg
out
xor
push
mov
addr16
and
sub
in
cld
div
sahf
pusha
sub
int
enter
inc
shrb
jnp
lods
mov
cli
fidivl
mov
ja
xlat
outsb
jl
push
push
lret
pop
xlat
gs
shr
pop
sub
daa
mov
push
sub
inc
jp
cmp
clc
addps
dec
mov
mov
lret
aad
jmp
dec
sbb
mov
adc
movl
jle
mov
sahf
xor
pop
dec
sbb
cmc
test
pop
rcl
push
rclb
cmpsb
fcmovnb
xchg
test
add
xor
jno
xor
push
nop
clc
fdiv
sub
push
add
mov
cmc
add
rorl
loopne
xchg
add
cli
pop
cmp
push
shrb
lret
push
shlb
inc
xchg
dec
jle
xchg
lret
add
in
test
mov
sub
pushf
shr
leave
and
das
test
xor
sbb
sbb
scas
pop
jle
cltd
jecxz
inc
cltd
subb
mov
sbb
dec
xchg
stc
pusha
mov
ljmp
dec
call
lret
dec
lret
add
pop
fnstcw
xchg
repz
call
stos
jae
insl
ss
out
cs
mov
push
push
xor
mov
or
add
push
dec
jge
enter
into
stos
shrl
adc
mov
cmpsb
ljmp
enter
sbb
fstl
fdivrs
xchg
sbb
jne
leave
je
movsb
xor
mov
out
aam
std
sahf
aas
call
repnz
dec
push
push
jge
add
clc
push
cli
mov
sahf
iret
loope
adc
push
sbb
xchg
mov
rorl
mov
sub
cs
ficompl
movb
lds
pop
and
dec
jbe
jno
out
push
push
push
sbb
mov
js
mov
inc
adc
pop
shlb
movsl
test
xchg
jl
xchg
cmp
popa
cmp
jle
mov
mov
inc
push
mov
jle
lcall
push
popa
in
cmp
outsl
fdiv
cmp
mov
ficompl
push
push
mov
or
sbb
push
lds
sti
addr16
mov
ds
mov
mov
hlt
xchg
pop
push
push
adc
xor
xor
cmp
lods
lods
sub
fnstcw
push
je
cmp
loopne
xor
mov
bound
cltd
jno
pop
cli
std
int
push
mov
mov
les
cmp
mov
in
cmp
cmp
sahf
fdiv
stos
fnstsw
dec
mov
and
cmc
mov
pop
shrl
adc
cli
insb
ret
cli
dec
mov
ja
repz
pushf
xchg
lods
pop
out
mov
fstl
pop
stc
rolb
jge
mov
adc
pop
shll
mov
pop
cmp
fst
or
cmpsb
fldl
pop
mov
push
jnp
pop
flds
lret
pop
mov
xor
into
data16
incl
jo
outsb
out
mov
movsl
sbb
push
jl
xchg
enter
push
into
inc
dec
sbb
out
stc
jg
das
daa
sub
push
test
xor
das
push
in
jns
jl
loope
movsb
adc
adc
xchg
sbb
iret
fucomp
test
pop
mov
pop
int
pop
jno
or
pminub
rorb
fwait
pop
mov
stos
and
lds
int
stos
push
mov
jae
ja
cmp
push
daa
pusha
pushf
xchg
fimull
fwait
stc
mov
scas
lds
xor
rep
sub
push
cwtl
sbb
mov
add
inc
lods
ficoms
jle
outsb
orps
scas
pop
popa
xchg
fdivl
mov
push
adc
sahf
jp
ds
call
push
daa
and
fstl
pop
stos
mov
jle
and
adc
daa
inc
inc
xor
loopne
cmpb
or
push
pop
inc
mov
xor
dec
and
shll
ret
add
jae
jle
in
push
call
insl
loopne,pt
mov
sub
fdivrl
stos
dec
or
loop
test
aas
inc
dec
aad
jmp
rcrl
push
aas
adc
sub
inc
ret
sti
shl
ljmp
add
cmc
mov
popa
dec
cmpsl
sbb
ret
fucom
jns
int
and
mov
test
jae
mov
rcll
or
aam
cmp
xor
mov
jno
ss
in
mov
jns
jp
cmp
push
iret
rcrl
hlt
addb
adcb
add
jl
cmp
xorb
jmp
dec
dec
ds
ljmp
outsl
stc
and
addl
cwtl
xchg
xchg
pop
cld
cs
mov
popa
mov
addr16
jl
ja
jbe
popf
lods
push
sub
out
jmp
mov
xor
xor
lods
lahf
pop
xchg
and
daa
mov
aam
inc
rorl
push
pop
jl
addr16
lret
sub
mov
rcrw
cmp
add
je
sbb
inc
sbb
push
outsb
ret
scas
xchg
cmp
pusha
shrb
outsb
inc
test
xor
outsb
mov
dec
iret
ret
inc
fwait
popa
mov
popf
out
mov
lret
cltd
lahf
fsts
pop
ss
popa
cld
movb
es
lcall
xor
adc
outsl
sub
push
xor
xchg
and
fnstsw
jge
add
repz
fsubs
mov
fsts
mov
mov
cmc
push
sub
pop
or
lcall
shrl
out
outsb
add
ret
cld
cmp
movsb
xor
lods
pop
stos
rorl
mov
popf
sahf
push
mov
jbe
jp
out
adc
sub
mov
cmp
mov
push
mov
leave
xchg
sub
jge
cmp
cmp
xchg
lods
popf
js
mov
fisubrl
pop
mov
pop
xor
rcll
push
push
loopne
add
push
imul
mov
xor
mov
cmp
orb
mov
enter
push
loopne
jbe
xorl
push
mov
std
cmp
dec
jbe
jle
inc
aam
aad
jl
fsubl
push
movsb
mov
das
aas
xchg
sub
jge
cs
mov
sub
mov
push
add
es
pop
push
call
sbb
cmpsl
mov
ds
sbb
iret
lds
dec
push
xchg
push
xchg
repnz
dec
sti
and
pop
dec
int3
jbe
push
stos
adc
test
jle
test
jl
fisubs
jns
jle
pop
jae
pop
mov
or
adc
aam
pop
push
mov
stos
outsb
pushf
lret
push
adc
inc
jne
sub
cmc
stc
ss
rsqrtps
adc
repnz
push
dec
call
and
dec
mov
cmp
add
rorl
clc
test
cmp
pop
xor
lret
jmp
jp
add
das
inc
lahf
or
lea
data16
lods
sti
pushf
xchg
xchg
enter
sub
cli
faddl
neg
jo
mov
ret
mov
aas
stos
ds
or
mov
mov
jns
sbb
or
pop
adc
push
rorb
sbb
cld
mov
frndint
pop
pop
pop
aad
mov
pop
repnz
push
inc
gs
cld
fwait
xlat
lods
pop
pop
push
popf
push
fcmove
data16
lcall
outsb
roll
leave
xor
or
jmp
and
adc
aas
inc
fdivrs
shrl
xchg
or
cmpsb
cmpsl
xchg
fdivr
test
push
sar
sbb
jmp
rcr
mov
mov
push
pop
hlt
or
adc
pop
xchg
lods
pop
mov
xchg
push
dec
mov
add
sahf
int
jmp
pop
insl
xor
pop
pop
inc
mov
pop
push
xchg
xor
dec
lcall
es
sbb
or
inc
or
sbb
cmp
xchg
pop
cmp
iret
stos
xchg
lret
lahf
pop
movsl
pop
mov
mov
mov
jl
dec
int
mov
incb
sbb
rorl
je
cwtl
cmc
mov
and
sbb
imul
addr16
test
jae
jge
popf
mov
pop
outsl
hlt
push
mov
dec
sbbl
sbb
jle
sbb
repnz
push
rcrb
gs
outsb
clc
ja
fstl
pop
mov
xor
into
mov
sbb
push
scas
or
jl
out
add
pusha
dec
rcrb
rorb
add
mov
push
lret
sbb
xchg
jnp
sub
insl
mov
rcll
cmc
adc
sbb
lods
nop
sub
add
xlat
pop
jge
cs
add
repz
cmp
add
xchg
repz
inc
add
cmc
int3
cmp
jne
insl
mov
adc
lock
and
inc
ror
pop
in
and
dec
sbb
iret
leave
and
pop
fbld
jp
fsts
sbb
add
pop
sar
xchg
sub
lahf
or
mov
or
call
aas
call
out
adc
in
jge
stos
dec
add
sub
xchg
push
jae
inc
cmp
mov
out
add
push
mov
and
lahf
mov
fisttps
stos
jns
mov
jbe
jp
cmp
push
mov
pop
nop
fnstenv
cmpl
push
aam
and
mov
ret
test
scas
add
mov
ror
add
clc
cmp
dec
or
mov
or
xchg
sbb
pushf
iret
xchg
push
xchg
rorl
add
movsl
aam
dec
outsb
pop
out
loopne
enter
insl
out
outsb
pop
push
cmp
mov
fsub
pop
dec
hlt
iret
arpl
and
sbb
or
pop
outsb
into
pusha
roll
xchg
add
pop
popa
outsb
ficompl
bound
bound
xlat
sbb
inc
shlb
call
inc
test
push
ret
std
lds
jae
mov
int
mov
cmp
mov
ja
shlb
scas
dec
push
daa
jno
or
cmpsb
movsb
fwait
xor
pop
or
cmp
rol
movsl
mov
xor
xor
mov
ds
xor
xchg
nop
cmp
insl
pop
je
push
into
stc
xor
or
push
push
rcll
popl
cwtl
popf
mov
aaa
ja
mov
mov
rclb
or
jnp
inc
aam
mov
xchg
inc
in
inc
aam
fs
inc
in
movsl
aam
hlt
inc
xchg
fwait
add
mov
mov
ficomps
iret
jns
push
xor
rcll
mov
pop
mov
xchg
jle
rcrb
outsl
cmp
push
insb
es
push
nop
pushf
push
jle
sarl
stos
stc
les
idivb
subl
in
pop
cmp
and
fdivs
orl
xchg
mov
fstl
addr16
fdivs
sbb
or
add
ss
fstl
dec
dec
lds
cs
mov
xchg
scas
mov
inc
cmc
and
lods
inc
fdivr
int
leave
cmp
call
cmp
or
cmpsl
or
adc
push
test
fstpl
loope
imul
shlb
adc
push
fcmove
daa
adc
out
lds
cli
and
daa
sbb
fdivr
sbb
jb
mov
jno
aam
push
push
arpl
fmul
dec
fidivl
out
lea
or
jmp
mov
push
stos
aam
popf
int
inc
fcoms
mov
pop
xchg
mov
jne
fadd
xchg
mov
outsl
hlt
dec
pop
sbb
sbb
les
cmp
xchg
and
cs
mov
jg
jle
aam
sbb
xchg
mov
adc
mov
adc
cli
xchg
sbb
pop
sub
xchg
jp
jg
push
mov
cld
cmp
push
inc
insb
adc
daa
cmp
js
or
fistpl
cmpsb
pshufw
or
int3
aas
cmp
das
popa
repnz
inc
push
cmp
inc
popf
mov
or
push
popa
pop
cld
out
mov
cs
lret
xchg
orl
cld
out
call
pop
mov
into
popa
adc
pop
sbb
imul
in
mov
cmp
or
out
sti
jecxz
pop
xchg
jns
lods
aam
scas
outsb
xchg
aad
jb
cld
mov
rorl
jo
pop
fmul
leave
jno
pop
mov
int
dec
sub
rcrb
jle
daa
cltd
dec
and
mov
gs
jle
cs
in
js
fbld
test
fidivl
pop
pushf
pop
dec
outsl
sbb
fmull
movsl
mov
mov
adc
pushf
fadd
into
jp
fcom
mov
xchg
pop
xlat
pop
fsubr
push
ljmp
sbb
inc
outsb
stc
andl
fldl
in
das
andb
dec
test
jge
insl
push
aad
fisubrl
fsubrl
movsb
lds
mov
pushf
sub
and
xor
cmp
inc
test
inc
sbb
repz
fidivrl
scas
sahf
dec
dec
xchg
jp
addr16
mov
xchg
pusha
int3
loopne
sub
add
popf
pop
shll
adc
inc
pop
fdivrl
sub
in
aas
in
loop
sub
mov
xchg
clc
das
push
std
mov
pop
inc
fsts
mov
stc
pop
scas
push
lea
inc
dec
dec
cwtl
inc
rcrb
sti
insl
data16
xor
xchg
aad
jg
xchg
fmull
rcr
push
sub
cmp
ss
mov
out
adc
xchg
into
out
loop
xor
ucomiss
xor
pop
outsb
mov
out
jle
mov
push
mov
push
jle
int3
sub
ja
nop
inc
push
cltd
sahf
mov
popa
fwait
add
dec
pop
mov
or
jmp
sar
ss
fisttps
stos
vcomisd
mov
mov
xor
push
movsl
push
push
popa
xchg
mov
popf
or
xlat
mov
xchg
add
aad
push
xchg
mov
aas
sti
jnp
cmpsl
sbb
mov
aam
rep
xchg
cmp
mov
or
or
push
jnp
repz
dec
mov
adc
push
jo
adc
xor
pushf
ja
push
cmp
cltd
aam
sarb
popa
stc
cmp
mov
aaa
and
pop
in
stos
sbb
sbb
bnd
push
dec
mov
mov
adc
cmp
push
mov
push
dec
into
cmpsb
push
adc
sar
psubw
mov
rorl
xor
or
jge
adc
pushf
mov
je
dec
mov
jns
mov
mov
mov
mov
push
jo
cmpsb
popf
push
or
push
popa
scas
dec
filds
xchg
fldcw
xorl
cmp
out
sbb
jo
das
and
xchg
jne
mov
jno
xlat
jo
sbb
fsubr
cmp
int3
push
lds
stos
sbb
jg
adc
shrl
mov
push
mov
pop
push
push
stos
sbb
popa
sbb
rcll
and
rcll
dec
mov
jg
fcompl
sub
cltd
arpl
xor
sbb
mov
cli
fstl
int
call
int
popf
int
int
int3
mov
cmp
xor
sbb
ret
call
icebp
fcompl
test
push
jle
jl
or
sbb
aad
mov
pop
mov
adc
lods
mov
pop
push
data16
call
out
pop
dec
std
sbb
pop
pop
jmp
mov
xchg
xchg
cmp
jg
mov
cmp
shll
pop
mov
pop
insl
repnz
inc
ficoml
test
adc
rolb
jmp
sti
or
jmp
or
cli
int
adc
mov
mov
arpl
mov
xchg
push
aaa
cmp
sahf
adc
out
push
loop
into
call
outsl
mov
leave
mov
mov
adc
cltd
cmpsl
cltd
push
jns
scas
pop
sti
push
fstps
stc
pop
test
jmp
cmp
cmpsl
lds
lods
popf
mov
pop
outsb
sbb
nop
shll
test
fdivl
dec
adc
push
movsb
xchg
cmp
cmovge
cmp
lods
fs
jne
leave
dec
shll
std
mov
xchg
fsqrt
pusha
sahf
repz
shl
pop
fcmovnbe
push
paddb
mov
pusha
xor
add
adc
loopne
cmc
cmp
ljmp
fnstsw
xor
cld
cmp
mov
adc
adc
sbb
imul
pop
xchg
or
aaa
mov
int3
sbb
jae
stc
mov
out
sub
out
and
repnz
lea
std
outsb
adc
jns
inc
mov
aam
cmp
mov
out
inc
bound
mov
addr16
and
stos
enter
mov
popf
push
loop
jbe
cli
pushf
pop
pop
jbe
mov
cmpsb
mov
lods
sahf
dec
mov
jecxz
mov
mov
fdivl
jle
jp
pop
mov
mov
hlt
inc
or
out
lret
lock
jnp
pop
scas
pop
int3
jae
push
dec
cltd
mov
in
mov
idivl
rol
das
xchg
xor
and
pop
rcll
add
repnz
or
int
rcll
loop
ficoms
fs
and
push
mov
jg
xchg
dec
dec
shld
push
scas
sub
popa
mov
ja
adc
pop
jne
sub
jb
mov
call
fstpt
ficoml
stos
ds
push
mov
sbb
lods
sti
xchg
rcll
push
or
or
fistpl
gs
push
sbb
jo
xorb
pop
insl
mov
fcompl
mov
aam
sub
leave
sbb
sub
cmp
jle
push
sub
fwait
aam
mov
in
mov
mov
in
les
sbb
xchg
push
cmp
rorb
ds
es
adc
xchg
mov
out
pop
add
repnz
ds
mov
dec
jle
add
jecxz
mov
adc
add
test
jecxz
xor
lcall
pop
sub
shlb
inc
int3
stos
mov
icebp
lea
rclb
pop
jle
mov
inc
jg
jl
in
and
mov
xchg
fcmovbe
fists
popf
pop
mov
fnstsw
in
push
outsl
cmp
xor
mov
stos
mov
into
adc
cmp
inc
push
mov
pop
xor
and
pop
sub
outsl
popa
je
jns
cmp
inc
sarl
mov
or
rcrl
mov
adcl
cmp
mov
add
inc
mov
cli
aas
jl
cmp
ja
mov
mov
lahf
testb
sbb
pop
les
xchg
pop
sub
xchg
pusha
lods
xor
add
xor
sub
out
sub
std
push
add
shr
ret
mov
lods
mov
jbe
sbb
pop
out
shlb
mov
add
iret
sbb
sub
sub
pushf
rcrl
inc
jg
enter
leave
jl
add
icebp
cmp
add
mov
pop
out
nop
adc
sub
mov
cmp
out
add
jne
inc
xchg
js
je
mov
mov
inc
dec
ficoms
xchg
and
cltd
push
insl
dec
mov
jns
fsubrl
testb
icebp
fmuls
insl
pop
cmp
push
xchg
je
and
lret
push
pop
dec
ljmp
shrl
test
jbe
push
cmpb
adc
and
sub
stc
fists
cmp
mov
pop
pop
repz
xchg
jns
mov
lods
mov
jns
mov
inc
sbb
xor
mov
sarb
sbb
fldl
pop
push
ljmp
jp
mov
mov
scas
cmp
subb
andl
push
inc
mov
btc
dec
sub
fisubrl
mov
pop
outsb
test
lods
push
dec
fs
popf
jne
fstpl
movb
ljmp
into
xchg
sub
mov
pushl
lods
dec
lahf
dec
test
mov
aam
push
fsincos
xor
pop
mov
add
fst
xor
sbb
fmuls
out
hlt
mov
sub
jmp
sar
movsl
mov
lret
test
dec
xor
fstps
xor
pushf
cmp
pop
rcrl
and
xchg
fldt
stc
mov
adc
dec
and
lea
sbb
inc
pop
movsb
adc
ja
inc
add
fsubrl
lret
xchg
rorl
xchg
out
popa
mov
in
movsb
cltd
jmp
cmp
aad
inc
add
repnz
mov
fsubl
jl
dec
mov
aaa
jns
insl
movsl
int
or
dec
negl
push
jae
jne
inc
jg
ficoms
sarl
icebp
clc
int
dec
xor
sahf
rcr
push
xor
cmp
pop
cmp
xchg
enter
adc
cmp
cmp
cld
push
sbb
jb
xor
jnp
sub
lods
pop
jo
stc
jecxz
xchg
lret
xlat
jl
push
xor
cmp
mov
cmc
std
mov
jne
in
cli
dec
pop
cwtl
pop
xchg
out
sbb
outsb
rcl
push
leave
fnstsw
ss
das
pop
loop
jg
scas
stc
in
repz
ret
enter
or
sahf
jbe
ljmp
insb
call
xor
mov
lea
push
rcl
insl
aas
sbb
push
inc
dec
jg
ds
div
popa
xchg
dec
pop
cmpsb
aad
in
inc
mov
sub
cmpsl
pop
int
cmc
push
subl
aas
push
push
out
subb
push
clc
insl
in
subb
gs
xchg
inc
xor
mov
dec
xchg
jp
jb
shrl
dec
aad
cltd
fld
xlat
push
xchg
dec
rclb
ret
stos
jge
fcoml
mov
add
sbb
sub
mov
xor
movsl
dec
xchg
lods
jmp
stc
xchg
outsb
aas
xor
mov
mov
shl
ljmp
xchg
push
push
aam
push
adc
cltd
sbb
pop
pop
inc
and
and
pushf
push
inc
repnz
fstpt
sbb
push
pop
insl
fstpt
jbe
adc
lahf
stos
push
inc
cs
lret
or
pop
xlat
mov
sub
mov
pop
shrl
in
pop
cld
repnz
mov
cwtl
scas
xor
outsb
iret
rcrl
std
sarl
sub
sbbl
fwait
sbb
dec
out
inc
clc
xchg
fistl
mov
ret
out
inc
cmpb
jbe
mov
ret
incl
pop
fsub
xchg
push
mul
sahf
mov
adc
mov
pop
cs
pop
mov
cmp
std
mov
std
aas
push
sbb
pop
dec
loopne
adc
iret
cmc
or
flds
pop
mov
dec
movsb
cmpsb
shrl
jmp
aad
jbe
lea
xchg
insb
jge
stos
push
fdivl
out
cs
and
cltd
lods
sbb
mov
sbb
sti
movsb
push
pop
cltd
mov
fcmovu
dec
jo
xchg
push
push
xchg
cmp
mov
das
xlat
push
stos
mov
jge
rorl
incl
mov
cmp
int3
pusha
test
mov
insl
xor
insl
daa
push
ljmp
movsb
or
aaa
out
adc
mov
mov
leave
popa
shl
cmpsl
lcall
dec
stc
into
leave
jae
adc
ss
mov
lahf
sbb
xor
jmp
sahf
out
pop
cmc
push
lods
pop
in
sub
faddl
dec
lcall
fiaddl
adc
inc
hlt
fstl
adc
sahf
lods
sbb
divb
pop
mov
aaa
sub
xor
dec
arpl
jg
adc
adc
pop
daa
stos
jmp
xchg
inc
mov
int3
sbb
les
aam
add
or
outsb
loopne
inc
jl
xchg
mov
pop
add
jns
or
sbb
jle
inc
mov
rclb
pop
aam
fldcw
lods
cld
mov
das
cmc
xchg
sub
movsl
jecxz
cld
pushf
inc
andb
dec
ds
jnp
popa
es
cwtl
xor
inc
data16
sahf
out
dec
cltd
das
ds
mov
mov
int3
out
add
in
xor
jne
ret
inc
call
ret
lods
fisubl
cmp
shrl
out
adc
enter
pop
push
mov
shll
add
outsb
in
adc
xor
xchg
sar
pop
jl
test
push
pslld
ret
fidivl
je
or
push
aam
mov
or
xor
lret
add
rorb
insb
out
out
inc
cmp
xchg
or
movsb
in
js
dec
jecxz
pushf
pop
push
mov
into
dec
mov
push
pop
cmc
jns
mov
stos
mov
je
sbb
push
cmp
cld
xchg
push
or
dec
popa
std
xchg
testl
cmp
mov
movsl
rcl
jns
dec
push
aam
repnz
xor
or
inc
adc
sub
adc
out
cmp
fisubl
and
push
sub
shr
stos
cmp
popf
ss
sbb
dec
mov
out
mov
dec
xchg
dec
sbb
test
add
mov
jg
clc
shll
sbb
fcoml
insb
push
mov
inc
xchg
push
mov
sahf
roll
mov
adc
xorb
cmpsl
clc
mov
sbb
cwtl
insb
aam
leave
sahf
adc
insb
push
ret
push
dec
scas
and
xor
add
shr
lret
lds
and
clc
mov
mov
jp
xchg
insl
subl
dec
inc
cmpl
enter
popa
notb
mov
xor
pop
jne
lret
mov
int3
stos
in
mov
idivl
scas
fucomp
ret
rol
mov
icebp
add
push
push
fistpl
iret
fldl
jl
cmpsl
test
xlat
inc
ror
mov
imul
jle
repz
dec
sahf
pop
jmp
shll
mov
pusha
sbbl
popa
xchg
adc
or
gs
stos
mov
adc
mov
inc
and
xchg
stos
xor
jg
inc
cwtl
xchg
push
sbb
ret
sub
rcrb
push
fstl
mov
adc
fisttpll
lret
adc
aad
roll
std
mov
out
pop
mov
lret
out
cs
nop
dec
scas
in
xchg
sti
int
out
jbe
int
xor
cmp
mov
jg
sub
sbb
cld
ss
lds
mov
sbb
fstps
ljmp
popf
push
sbb
std
test
ljmp
mov
xchg
fists
imul
lret
jns
adc
js
aaa
jl
int3
movsb
cwtl
imul
sub
push
std
into
cmc
sub
dec
jne
and
insl
pop
out
faddl
pop
sarb
sub
sahf
mov
sti
pop
pop
sbb
mov
mov
fildl
pop
cmp
xor
bnd
pop
add
inc
xlat
scas
in
pop
xor
int3
mov
scas
mov
jne
pop
enter
int
jecxz
fcoms
rcrl
adc
fwait
sti
flds
adc
jmp
sub
mov
pop
lcall
ficoml
cwtl
pushl
inc
inc
int3
aam
sub
int
shll
xchg
adc
mov
and
out
enter
inc
int3
cmp
pop
andb
neg
adcb
cmp
adc
fwait
popf
aam
pushf
notl
out
mov
sti
mov
imul
popa
jno
xor
rclw
mov
pop
pop
mov
clc
das
fmull
fadds
sbb
inc
stos
sarl
pushf
pop
mov
inc
pop
icebp
jmp
inc
popf
xchg
fstpl
out
insl
cli
mov
sti
fsubl
xlat
mov
pushf
jg
mov
cmc
dec
mov
mov
mov
sbb
out
jl
mov
mov
ja
sbb
fistpll
pop
aad
mov
xor
and
xchg
iret
jp
fst
dec
loope
inc
pushf
mov
rol
pushf
sbb
shl
mov
xchg
aas
xlat
int3
xchg
int
and
adc
adc
daa
scas
jl
movsb
adc
and
lret
iret
cwtl
aam
xchg
rol
xchg
xor
pop
jge
cmp
cwtl
int3
fldenv
mov
lds
push
jbe
mov
ljmp
test
jo
aam
mov
add
mov
xor
xchg
mov
fidivl
imul
xchg
dec
int3
cltd
cmc
push
pop
sbb
repnz
fisubrs
mov
pop
rorl
mulps
addr16
leave
dec
dec
add
leave
mov
ds
out
inc
imul
pushf
sbb
adc
sub
fstpl
je
push
stc
mov
jae
xor
int
insl
xchg
push
xor
jb
push
xor
test
adc
mov
jecxz
stc
ja
xchg
cld
sub
outsl
mov
pop
xchg
mov
xor
enter
int
xor
sub
aad
movsb
ss
xlat
cmpsb
insb
mov
mov
sub
pop
add
test
rcrl
fadd
test
xor
ret
xchg
mov
in
and
ret
lret
jbe
push
push
xlat
push
xchg
fistl
out
mov
int
in
dec
pop
adc
fdivrl
xor
lret
mov
inc
rcll
imul
mov
mov
out
mov
cmp
clc
and
in
lret
mov
popl
sub
mov
fbstp
push
cmp
jne
pmaxsw
jecxz
jns
popf
jns
push
add
call
xorl
xchg
aad
sbb
mov
int3
dec
sub
js
sub
lods
cwtl
aam
push
ficompl
cld
fldlg2
mov
mov
aad
mov
ffree
jge
jne
loopne
xchg
mov
fstps
sbb
push
fistl
out
into
dec
mov
jmp
mov
jp
sahf
jle
int3
or
in
rcl
push
mov
into
repnz
mov
push
clc
push
push
sbb
and
outsb
orb
xor
and
aaa
sub
idivl
pop
mov
sub
fstpl
nop
je
and
fsts
inc
adc
clc
decl
push
sarl
adc
lds
push
stc
mov
sti
outsb
scas
or
pop
jb
int
shrl
mov
pushf
je
mov
sbb
lahf
je
sbb
aam
int3
lret
int3
jp
stc
add
and
int
xchg
add
cld
rcr
pop
std
test
rcll
jne
and
xchg
sahf
pop
lods
push
xchg
jae
iret
clc
push
fcmovb
frstor
or
or
xchg
mov
add
xchg
shrb
repnz
adc
in
adc
pop
daa
loop
jo
jl
jg
sbb
pop
nop
add
shlb
add
leave
sub
adc
stc
adc
jp
xchg
dec
int3
out
sbb
pop
fidivrs
jae
movsl
js
lods
popa
out
push
stos
sbb
lods
pop
pop
jl
int
mov
and
jns
jmp
pop
add
jbe
mov
aam
fcoms
push
cli
sar
call
mov
jecxz
pusha
gs
les
mov
mov
repnz
xor
inc
push
pushf
xchg
xchg
add
lcall
xchg
sbb
and
test
and
pop
and
fnstsw
lods
lds
inc
lret
push
sub
scas
sub
imul
jmp
dec
in
pop
xchg
scas
outsl
pop
repnz
pop
repnz
pop
loope
test
lret
xor
out
push
or
sti
enter
nop
into
outsl
mov
xchg
and
sbb
cmp
inc
or
int3
pop
jecxz
repnz
push
and
adc
mov
mov
pop
das
cmp
addr16
sub
push
bnd
loopne
jnp
outsb
xlat
fldl
aad
xor
jl
dec
mov
dec
jmp
sbb
sbb
xor
jmp
cmpsb
ret
rcrl
xor
lcall
cwtl
ret
je
gs
ss
cli
pop
cmp
and
lock
cltd
cwtl
repnz
xchg
mov
fs
sub
pop
xchg
sbb
aad
sub
xchg
inc
pop
xchg
jle
mov
xor
dec
cmp
inc
jae
cmovo
push
sub
repnz
movsb
outsb
iret
adc
jbe
sbb
mov
popw
jo
lahf
xor
pop
rorb
dec
test
cmpb
ja
in
sti
pop
sub
lret
loope
enter
lret
inc
int
pop
fs
std
fstpt
lcall
popf
testl
sbb
leave
push
out
push
jmp
cmpsb
mov
repnz
mov
leave
lods
popa
xchg
mov
or
mov
mov
sti
outsb
icebp
xor
inc
xor
das
aas
or
jecxz
ljmp
adc
pop
xchg
aaa
sbb
stos
dec
xchg
xor
mov
xchg
xor
lock
decb
push
dec
pop
jg
sub
in
mov
mov
insb
outsl
scas
dec
pop
insl
jle
fildll
rcll
testb
xchg
sbbl
or
test
shll
xor
cmp
leave
loope
lods
adc
cmp
xlat
aas
incb
aad
inc
sub
jle
mov
mov
cli
lods
imul
lds
xorl
std
ret
in
inc
push
lahf
mov
pop
cmp
push
jnp
or
repz
nop
pop
insl
daa
lcall
sahf
adcl
mov
push
lahf
pop
push
cld
leave
cs
mov
insb
sub
in
and
hlt
inc
int
mov
sub
jle
mov
cmp
or
repnz
bnd
push
sub
mov
imul
pop
hlt
sti
add
inc
aaa
sub
cli
mov
or
fwait
mov
lds
aam
lds
lods
sti
scas
sub
ss
repnz
sbb
lret
mov
pop
lret
or
cmp
mov
pop
cmpsl
dec
jl
cmpsb
mov
sbb
lds
aad
xor
inc
std
stos
lret
neg
push
nop
fisttpll
sbb
mulb
cs
enter
jmp
jb
icebp
cmp
dec
inc
call
repz
pop
loope
push
push
push
rcrb
dec
and
xchg
mov
cmp
dec
add
mov
repnz
imul
test
adc
cmp
ds
mov
clc
push
add
push
sbb
repnz
mov
lods
pop
nop
mov
adc
jge
lea
mov
outsb
mov
test
filds
mov
mov
mov
mov
and
or
xlat
pop
push
dec
cmp
aaa
jnp
or
xlat
cmp
cwtl
mov
inc
lea
cmp
pop
pop
cmpsb
lret
xchg
push
mov
pop
in
in
inc
lahf
fildl
push
outsl
xchg
stc
test
js
shll
lds
sbb
lods
bndldx
iret
mov
pop
mov
cmc
sub
popa
lods
and
mov
gs
jle
or
and
mov
add
scas
rcll
dec
int3
push
out
xor
int
cld
leave
cmp
into
cwtl
adc
jp
pop
dec
cwtl
lret
xchg
adc
push
dec
cwtl
inc
mov
lea
xchg
and
fimull
push
roll
mov
pop
cmp
mov
test
in
fsubs
xchg
or
jnp
pop
addr16
aam
in
out
xchg
and
pop
dec
lcall
mov
xchg
jmp
out
xchg
gs
mov
mov
mov
add
aas
xor
add
push
aam
cmp
mov
mov
pop
dec
jecxz
jg
and
ss
push
jge
js
ret
cmp
mov
cmp
mov
xchg
es
in
dec
aad
adc
sbb
fstp
ret
outsb
es
pop
jg
xor
mov
fisttpll
lods
data16
mov
jge
dec
mov
hlt
or
adc
sbbb
pop
in
sbb
jo
aam
movsb
dec
xor
or
and
enter
in
add
jo
pop
pop
push
dec
mov
fdivrl
cmp
pop
ja
xor
mov
cwtl
loop
inc
push
xlat
mov
call
enter
jp
push
insl
cmp
mov
inc
insl
sbb
ss
inc
push
and
jle
adc
mov
push
loope
fldl
testl
aas
rclb
mov
test
add
shrb
in
lds
enter
mov
into
mov
add
dec
ljmp
sti
lds
jl
ret
ja
xchg
insl
jae
jbe
out
sbb
popa
sahf
inc
cmpsb
lcall
rcll
jmp
cld
cmp
pop
outsb
gs
push
jbe
repnz
ja
or
lods
xchg
sbb
ds
outsb
xchg
inc
cwtl
rcll
mov
nop
movsb
mov
lock
inc
in
sub
lds
in
xlat
cld
or
fs
js
fistpll
lea
xchg
mov
xchg
mov
sbb
pop
xor
movb
push
xchg
rcrb
adc
test
jae
popa
shll
lret
repnz
xchg
pop
movsl
inc
jmp
inc
movsb
mov
test
sahf
jmp
mov
daa
cmpsb
imul
mov
data16
cltd
test
fs
in
dec
ficompl
push
mov
rcl
add
push
mov
inc
pop
sub
jns
sbb
pop
dec
add
inc
xlat
rcl
xchg
and
xor
jae
xchg
pop
fsqrt
dec
jbe
test
pop
pop
cmpsl
fldenv
mov
dec
jbe
inc
aad
push
imul
int
rolb
ror
push
int
pop
mov
iret
fstl
fisubl
fnstcw
jne
pop
mov
int
cmpsl
jae
int
test
fs
mov
jo
lcall
mov
fcmovnb
nop
push
lcall
imul
loopne
sbb
mov
jbe
mov
push
mov
pop
cmp
cmp
jo
inc
nop
lods
push
sar
pop
dec
push
jge
jecxz
jmp
rcl
inc
aad
cmp
add
and
dec
mov
dec
mov
rcll
pop
jbe
xchg
inc
ss
mov
pop
aam
lods
cmc
fldl
or
je,pt
lret
rcl
mov
sbb
mov
fiaddl
inc
idivl
in
mov
push
xlat
inc
mov
mov
lods
adc
jl
sbb
and
mov
iret
cwtl
xor
jnp
pop
ret
aad
jge
mov
push
mov
lea
iret
sub
fadd
enter
int
xor
mov
ficoml
in
sbbb
jo
pop
std
into
jp
stc
outsb
jl
jns
cmp
cmp
inc
repz
pop
in
mov
cmpl
adc
push
push
and
sbb
or
xchg
xor
leave
jae
lds
push
jmp
or
pop
imul
or
mov
outsb
aaa
push
pop
xchg
addr16
pop
xor
mov
pop
shll
pop
inc
test
sbb
pop
lcall
cmpb
test
mov
cmp
fnstenv
cmp
repnz
shrl
jecxz
push
push
cld
addr16
jge
outsb
es
sbb
rorl
pop
js
dec
roll
mov
stos
fwait
aam
push
sub
xor
pop
mov
push
adc
pop
stos
cmp
or
push
test
es
inc
fisubrl
pop
cld
adc
push
xor
xchg
es
xor
xchg
call
xchg
repz
ja
loope
loopne
jbe
push
lahf
repnz
xchg
sub
xchg
sbb
push
pop
mov
les
mov
das
mov
clc
mov
mov
cmp
xlat
lods
stos
imulb
enter
xor
rclb
rcrl
cmpl
int
nop
inc
and
inc
fdivrl
fistl
mov
pop
cmpsl
rcrb
cmp
lahf
pop
cltd
aam
movsb
sbb
push
jle
inc
jbe
sbb
adc
jge
or
sahf
sbb
loop
push
mov
lds
push
mov
push
or
lds
push
fs
push
pop
jl
mov
rclb
inc
jnp
or
push
les
test
popf
cli
lret
push
es
sarl
and
rcrb
mov
pop
lret
rcrl
pushf
push
std
std
mov
rcll
aad
sbb
aad
out
jmp
cmp
xor
sub
lods
mov
frstor
popf
or
retw
rcl
push
push
repnz
sub
aam
sub
jg
xor
sub
fcoml
leave
out
lret
cmp
pop
fs
mov
add
ret
movsl
fsts
shll
repz
sbb
cli
ret
enter
and
xor
out
repnz
sub
sub
inc
jg
mov
jo
jae
xchg
cmp
push
mov
mov
inc
shrl
lcall
shlb
dec
insl
cld
pop
inc
std
xlat
lret
add
mov
xchg
inc
repnz
testl
movsl
jl
aaa
ja
mov
clc
xorl
repz
pop
jmp
push
sbb
jo
mov
push
scas
insl
jl
scas
sub
sbb
lods
jp
mov
push
pushf
push
scas
dec
pushf
les
lods
int
hlt
pop
ficoml
shlb
out
scas
in
jbe
lock
mov
sbb
lret
cmpl
add
add
mov
out
xorl
adc
and
push
gs
es
pop
ret
ljmp
sarb
pop
and
fdivrl
cli
arpl
push
jle
sub
jnp
int
inc
cmpb
sub
aaa
popf
push
pop
pop
sub
dec
or
daa
shll
pop
sub
sbb
mov
jns
mov
adc
xchg
xchg
test
shrb
fmul
sahf
or
pop
lds
outsb
mov
stc
shll
inc
shrb
lea
movb
push
rcr
mov
fmull
dec
popa
cli
sub
mov
fcmovb
dec
xchg
ret
test
mov
fisttpll
inc
iret
out
fadd
mov
fdivrs
mov
aas
shrl
dec
jbe
dec
xchg
dec
je
popf
jbe
pushw
enter
cmc
mov
cltd
int
push
xchg
cmp
push
imul
fmull
dec
rol
rcll
stos
fimull
xchg
pop
scas
xchg
enter
iret
adc
lods
ret
fstl
dec
into
ret
sbb
pop
xchg
pushf
fnstcw
xlat
pop
pop
aam
faddl
shrl
mov
cs
lcall
test
dec
roll
or
ficompl
xlat
mov
sbb
cltd
dec
lahf
fcmovu
aam
ffree
fcmove
xlat
fnstcw
cs
mov
push
ja
outsb
inc
mov
fnstcw
jl
fcmovu
mov
push
int3
and
icebp
sti
scas
sub
cltd
sbb
mov
xchg
repz
lret
pop
pop
daa
int3
ret
js
hlt
imul
jbe
inc
mov
sub
aam
into
jecxz
dec
aam
lcall
jle
jl
cmpsb
mov
jno
mov
call
dec
mov
push
data16
ja
pop
out
pushf
mov
fisubl
sahf
add
test
rolb
aam
outsb
fsubr
push
jg
mov
js
mov
cwtl
pop
sub
fs
xchg
jl
sbb
xor
sbb
loope
icebp
inc
mov
dec
jbe
mov
les
orb
popf
lcall
pop
ret
or
push
int3
aam
xlat
sbb
stos
pop
iret
fstpt
je
mov
and
es
jge,pt
daa
cld
adc
popf
cwtl
mov
out
push
xchg
jp
int3
pop
mov
std
jge
hlt
jg
es
sbb
xchg
lds
and
pop
sbb
push
int
mov
aam
sbb
aas
out
xor
fstpl
aad
aad
sbb
dec
mov
sbb
sbb
adc
or
fstpt
sarb
push
xchg
push
inc
lahf
int3
ror
push
shlb
add
xor
xlat
iret
pop
add
shlb
pop
jge
int3
lods
rcrl
cmpsl
mov
lds
xchg
cmpsl
mov
push
lahf
xor
jg
les
adc
pop
imul
fnstcw
into
sti
ja
jns
jl
add
cmp
push
mov
fs
and
xchg
fmull
sub
mov
les
mov
inc
xchg
shrl
dec
je
fld
sti
rcr
jg
ret
les
int
jno
pop
into
sbb
pcmpeqb
mov
repz
xlat
les
aam
push
fcoms
pop
pop
and
sub
sahf
int
ss
mov
enter
stos
fmuls
clc
call
sarl
ror
arpl
ss
sub
push
ret
imul
mov
ffree
aaa
pop
or
test
lds
sbb
lcall
xchg
jae
dec
scas
rolb
dec
mov
push
popf
cmp
sbb
rorb
movsb
pop
push
jge
add
sti
cwtl
fldt
test
lcall
push
mov
inc
stc
xchg
out
lds
mov
aad
leave
sub
mov
add
lcall
xchg
in
mov
pop
xchg
mov
lret
test
jne
aad
into
fcompl
mov
sbb
nop
fidivl
in
xlat
xchg
negb
fdivrl
pop
andl
inc
das
je
shrb
insb
loop
adc
dec
fsubl
ljmp
leave
test
sub
outsl
or
ss
lock
inc
aad
test
dec
out
or
push
sbb
into
xchg
leave
sar
dec
jns
das
fmuls
pop
mov
ret
dec
cmc
sbb
adc
hlt
push
xchg
addr16
insl
lods
fstpl
lahf
sahf
aam
or
fsubrp
push
iret
lret
fidivrl
adc
xchg
lret
mov
incl
ret
mov
push
fcmove
xor
rorb
jp
rcl
mov
movsl
enter
test
fcompl
push
mov
xlat
stos
push
ret
into
mov
iret
fdivl
ror
ds
mov
cltd
aam
aad
fidivs
rol
fidivl
shrl
rolb
fwait
ret
sub
mov
ret
add
aam
dec
fcmovb
lcall
pop
jg
fisttpll
ficomps
mov
or
popaw
cmc
mov
stos
movsb
adc
shlb
int3
fldl
test
inc
and
cltd
pop
sub
jp
dec
push
fistl
imul
insb
cmc
addr16
jns
xor
pop
test
dec
mov
xor
and
icebp
fdivrl
cmc
or
push
ret
lcall
xlat
inc
mov
mov
mov
sub
mov
fstpl
pop
mov
cmc
dec
mov
lret
push
sbb
dec
xchg
inc
int
xchg
maskmovq
testl
xchg
inc
scas
fdivrl
pop
sahf
cmp
into
popf
mov
push
mov
fcoml
push
mov
fcoml
arpl
pop
mov
stos
aas
inc
dec
stc
mov
jg
int3
fldl
inc
pop
cltd
pop
sbb
inc
mov
push
or
push
sub
test
push
iret
dec
mov
sub
xchg
leave
xlat
jne
cltd
rcr
bound
sbb
or
push
inc
mov
dec
xchg
orl
pop
sbb
lahf
xchg
pop
mov
fnstsw
inc
push
stc
int
rcr
add
fmull
les
dec
int
mov
fstl
sub
ret
lea
xchg
pop
sbb
adc
xlat
aad
test
sbb
pop
xchg
xlat
mov
push
pop
xchg
sarb
fstps
mov
inc
mov
int
jmp
movsb
movsl
les
fisubrl
sbb
ljmp
das
pop
dec
xchg
inc
mov
lds
sbb
jmp
xchg
les
das
mov
movsl
aam
in
pop
sub
loop
insl
pop
fidivs
fmull
jp
pop
sub
aad
testb
mov
push
mov
enter
bnd
mov
add
mov
rcrl
mov
xor
fisubrl
rcr
dec
mov
jno
and
fcmovnbe
xchg
or
lahf
fisubrl
push
push
inc
ficoms
ret
shlb
lret
aad
lret
lret
fstpt
mov
dec
jbe
mov
mov
push
xlat
mov
cmc
jge
enter
aad
dec
in
fcmove
into
ret
sub
fstpl
sbb
leave
test
in
fstpl
cld
pop
sub
add
addr16
je
dec
mov
mov
outsb
je
dec
xchg
hlt
and
jge
xor
mov
mov
pop
stc
or
stos
mov
mov
mov
lret
pop
les
pop
loop
jge
aam
inc
lea
lcall
fcoms
mov
stos
mov
cmp
push
mov
lcall
jp
sub
mov
mov
inc
mov
mov
cmc
imul
ss
ret
mov
pop
enter
sahf
pop
mov
mov
push
fwait
or
xchg
fistpl
dec
push
ds
repnz
and
and
dec
stos
sub
add
xor
sub
xchg
nop
pop
xor
fistpll
fists
mov
xorb
int
bound
dec
cltd
cwtl
iret
dec
fcoms
mov
scas
add
sbb
dec
mov
ja
pop
xchg
jge
pop
mov
leave
mov
xchg
sbb
push
xchg
addr16
mov
lret
dec
lods
int
mov
xchg
int
movsb
mov
outsl
sbb
jge
dec
sarb
dec
ret
dec
push
pusha
aam
xlat
push
cs
aad
out
rcrb
sub
sbb
fcmovbe
xchg
sbb
jbe
into
test
fadd
int
adc
mov
imul
xlat
ficoml
ja
pop
cs
xchg
xchg
call
add
cmp
negl
dec
ss
aam
shrd
dec
aam
push
mov
dec
jge
mul
lahf
mov
cld
in
je
jg
inc
sbb
jge
int
xor
test
dec
push
add
or
and
xchg
fcmovu
movaps
mov
rcl
clc
hlt
popf
test
jnp
lods
inc
mov
scas
mov
dec
rorl
ja
lret
aad
insb
rcrb
aas
daa
pop
test
jp
ja
cmp
scas
jne
les
or
scas
mov
ret
mov
out
icebp
xchg
push
ret
in
cmp
pop
xchg
jge
clc
mov
aad
xchg
mov
leave
fldl
stos
mov
lret
daa
sti
cld
mov
call
fmul
sbbb
jo
push
mov
push
add
into
dec
cmc
and
ret
in
sbb
enter
mov
fmuls
fwait
jge
xchg
inc
pop
sbb
das
sbb
fisttpl
or
or
adc
dec
xchg
pop
pushf
sub
mov
pop
or
stc
and
mov
add
divl
mov
aam
out
movsb
rcr
mov
inc
pop
xchg
fnstenv
dec
aas
jge
mov
jg
mov
push
mov
fwait
sbb
fcoms
call
lret
push
lret
shrl
frstor
lcall
push
leave
fimull
cs
mov
dec
lcall
lds
dec
fmuls
lret
jg
int
test
test
mov
call
into
scas
ret
mov
rcr
int3
dec
xchg
sbb
xlat
mov
jle
fsubr
push
int3
fsubl
fnsave
fdivrs
pop
xchg
ror
rcrl
iret
add
or
pop
sbb
aam
fld
pushf
lcall
faddl
scas
fimull
jge
dec
mov
stos
and
cmpb
xchg
aam
push
cwtl
push
scas
rcl
cltd
xchg
cmp
pop
pop
sbb
dec
inc
fmulp
fcmovu
dec
int
aaa
cs
inc
inc
fcmove
push
add
cmp
push
fiadds
inc
call
ret
push
xchg
sub
aas
or
mov
int
adc
leave
mov
cmp
lret
mov
push
add
ss
mov
popl
mov
push
cmp
lcall
ja
cmp
cs
int3
adc
insl
xchg
sbb
nop
xchg
dec
fsts
push
dec
xchg
or
aaa
clc
cltd
jmp
fdivrl
or
mov
mov
dec
jbe
mov
mov
ror
push
sub
popf
lret
add
xchg
push
mov
mov
aaa
push
shrl
mov
sarb
xor
mov
dec
aad
jo
mov
mov
push
jge
out
xchg
int
jg
lock
sarl
mov
fistpl
lods
jbe
aad
mov
int
push
lcall
mov
xchg
sbb
jge
nop
sbb
enter
mov
fstps
aad
push
push
lcall
xchg
inc
fsub
dec
dec
xchg
xor
dec
push
jge
test
or
inc
mov
push
lahf
pop
push
stos
jge
mov
mov
mov
repnz
jge
push
xchg
mov
pop
js
jge
stos
sub
inc
pop
addr16
dec
inc
iret
sub
xchg
dec
inc
xchg
sub
fistpll
push
xchg
mov
push
fistpll
call
pop
fsubrl
shrb
inc
cmp
push
jl
cld
jecxz
fldcw
mov
enter
aaa
stc
int
cmc
clc
mov
mov
xchg
sbb
cltd
int
sbb
inc
mov
sub
cltd
lea
cmp
pop
int
push
rcr
dec
dec
xchg
lcall
pop
jle
push
mov
fnstsw
sbb
int
aam
pop
int
mov
push
dec
lcall
xchg
pop
ds
cmp
aad
adc
push
xchg
int
hlt
jne
lods
cmp
aad
inc
mov
cmp
popa
push
sub
out
mov
dec
jge
lcall
in
dec
inc
addr16
testl
enter
outsl
rclb
jne
fld
ret
ficoml
dec
fnstcw
test
mov
std
mov
inc
aad
xchg
fcmovnu
mov
sti
xlat
push
dec
adc
pushf
rorl
add
sti
int
cld
dec
int3
fidivrl
add
ret
sti
leave
fdiv
push
push
daa
xchg
adc
adc
adc
sarl
into
dec
jbe
mov
mov
cmp
cmp
int
jne
imul
xchg
sbb
hlt
sbbl
mov
ret
sbb
lcall
fldenv
dec
jge
enter
int
push
in
js
aas
aad
xor
sbb
inc
jg
inc
fnstsw
mov
mov
xchg
fstps
jl
mov
xor
pop
sbb
popf
repnz
loope
xchg
mov
add
outsl
js
addr16
mov
loope
pushf
add
outsl
std
dec
xchg
fdivrl
enter
mov
repz
jmp
cmp
rorb
lret
sbb
cwtl
sub
les
int3
ffree
enter
pop
mov
pop
aad
nop
sbb
push
adc
cwtl
mov
cmp
rclb
jl
sti
xchg
iret
aad
fcompl
sub
jg
fimull
rcl
mov
fimuls
fcomp
iret
dec
add
mov
fimull
add
mov
ficomps
mov
rorb
jge
call
nop
mov
out
jns
lahf
jge
movsl
call
cmpsl
jge
mov
xchg
imul
xor
lds
jns
fmul
pop
jns
xchg
sbb
mov
fstp
sbb
jmp
movb
sbb
xchg
jl
cwtl
push
loop
or
iret
stos
fcmovb
fldl
sub
push
cmpsb
aad
arpl
inc
in
ss
fimull
outsl
or
cmp
and
in
pop
sahf
les
dec
fmul
je
xlat
mov
mov
jl
dec
leave
lret
sbb
test
ficomps
pushf
cwtl
xchg
xlat
lea
mov
mov
imul
ror
insl
ss
addr16
jmp
iret
cwtl
pop
push
lods
mov
xchg
xchg
dec
pop
jmp
rolb
fadd
sub
aad
fstpl
push
xchg
int3
mov
fistl
lds
dec
jge
out
ss
fsubrs
rorl
cltd
adc
pop
and
mov
lods
and
icebp
fmuls
xchg
cmpsl
scas
fwait
arpl
int
cmc
pop
insb
sub
enter
adc
ret
aam
xor
rcr
mov
int
dec
mov
inc
pop
adc
outsl
pop
rorb
mov
lcall
aam
aad
ret
push
clc
dec
fisubs
les
leave
scas
flds
lcall
into
rorl
ret
into
push
mov
psubb
xchg
lret
mov
jbe
mov
mov
push
aad
fcmovnb
mov
je
jp
cmp
sbb
lcall
aam
outsl
dec
xchg
sarb
rorl
mov
dec
xor
ss
jp
int3
lret
push
adc
int
ficoml
mov
or
fdivrl
lods
sbb
mov
jo
xchg
pop
cmp
fadds
inc
stc
ljmp
pop
cmp
lds
fadd
mov
pop
fsubl
jp
cmp
mov
sti
jns
mov
movsb
cmp
fidivrl
mov
fdivrl
mov
fimuls
int3
mov
sbb
int3
fdivl
push
lret
sbb
cmp
test
enter
xchg
ret
mov
fcmovu
int
push
push
inc
fmul
insl
mov
or
sbb
mov
or
movsb
pop
fst
push
adc
pop
mov
es
lods
cmp
inc
pushf
inc
sub
sub
stos
push
cmpsb
xor
lods
fisubrl
jae
mov
call
jns
rcr
movsb
rcl
fiaddl
and
ror
dec
pop
xchg
leave
mov
cmp
rclb
ljmp
cli
jne
cmc
xor
cli
test
inc
sub
or
xchg
ret
sub
mov
cmc
dec
shll
setae
and
sub
push
cli
sub
xchg
mov
sub
and
sar
jns
mov
mov
flds
jmp
fidivl
cmp
stos
jp
repnz
rcr
mov
arpl
ss
stc
add
fcmovu
sub
in
push
sub
rol
fmuls
jge
je
inc
sub
pop
mov
sti
loopne
addb
fnsetpm(287
xchg
xor
flds
jbe
insb
fimuls
into
in
mov
leave
mov
or
cmp
ss
nop
and
stc
mov
inc
les
xchg
pop
mov
push
add
sub
mov
les
fcoms
lds
push
push
push
test
rcrb
ficoml
in
leave
rcl
fcmovne
dec
xchg
adc
clc
sarl
mov
repz
xor
adc
mov
cmc
mov
sbb
adc
pop
jecxz
mov
pushf
lahf
fcompl
movsb
mov
enter
aaa
shrl
mov
jo
int3
dec
xchg
inc
or
dec
pop
xchg
leave
faddl
lds
aam
mov
push
push
test
inc
push
test
inc
adc
leave
shrb
dec
dec
faddl
sub
add
test
pop
adc
xchg
add
dec
les
or
lcall
jg
push
jp
scas
cwtl
lret
repnz
dec
aas
int
cmp
in
rorb
fcmovne
pop
mov
sbb
ficoms
pushf
fs
jle
ja
mov
aad
add
lea
dec
arpl
dec
fs
mov
fwait
pop
pop
imul
xchg
lret
inc
lock
mov
int
gs
rolb
dec
pop
sti
dec
pop
call
negb
mov
fdivrs
cmp
fsubs
sub
lods
and
pop
pop
test
fldenv
xor
mov
fstpl
loop
mov
dec
out
mov
pop
aaa
add
mov
movl
inc
xchg
add
lret
scas
rcl
stos
pushf
or
into
shrl
sub
int3
fcoml
mov
jl
lcall
fcoml
mov
jecxz
cltd
jge
mov
fmuls
fcmovnbe
push
cs
mov
pushf
add
push
inc
xchg
pop
leave
mov
lret
faddl
test
pop
int
ret
insl
mov
into
lods
insl
cmp
sub
cmp
inc
ficompl
or
iret
pop
mov
aad
ror
xchg
cmpsb
fwait
mov
cmp
roll
cmp
pop
push
xor
mov
pop
cmc
cltd
pop
inc
fdivrp
punpcklbw
sbb
lcall
pop
push
loopne
mov
mov
push
pop
popf
sbbb
add
int3
pop
fcompl
lahf
int3
cmp
movsb
ficompl
xor
lret
cmp
inc
into
pop
iret
push
jl
test
lahf
ror
or
sub
fucom
push
int
inc
sub
pop
lds
xlat
lcall
fcoml
fstl
cs
popa
sbb
mov
inc
rclb
pop
mov
push
mov
ret
sbb
mov
lahf
mov
inc
test
dec
fisttpll
mov
mov
dec
pushf
rcrl
jno
fmull
mov
aad
rcr
mov
ss
sahf
fxch
ficompl
sub
mov
pop
les
mov
notl
stos
jns
cmp
int
fwait
push
lcall
inc
cmp
push
xchg
inc
aad
loop
add
push
lcall
sub
dec
cmp
rcr
sarl
ljmp
mov
stos
pop
fstl
push
stos
fstp
cmpsl
sti
lock
sbb
ror
fxch
dec
mov
pop
ret
mov
sbb
fs
ds
notl
fstp
pop
push
rcrb
fistpll
dec
mov
sahf
push
pop
inc
rcl
inc
inc
dec
scas
imulb
in
fstps
ss
ficomps
jp
fsubrs
push
mov
mov
out
aam
enter
fld
pop
addss
sahf
xchg
mov
subb
mov
dec
jbe
xchg
fcmovu
stos
sbb
into
sbb
fxch
stos
ror
xchg
pushf
sbb
les
mov
fstp
push
bound
gs
pop
data16
add
mov
jl
imul
push
fnstcw
sarl
jecxz
mov
inc
lods
push
jge
in
subb
cli
fdiv
movsb
fidivrl
xchg
sbb
aas
ljmp
mov
sti
lret
fdivs
dec
pop
jbe
int
xchg
fldenv
pop
pop
lcall
int3
aam
pop
add
into
iret
insb
pushf
inc
mov
add
lcall
rcrl
mov
rcr
gs
inc
push
jae
push
repz
loope
rcrl
jmp
ja
dec
or
rol
or
pop
push
ljmp
lret
mov
je
popa
push
push
dec
or
cwtl
fcomps
xchg
xor
pop
jbe
xchg
lods
xor
js
cmp
add
push
imul
cmc
xlat
in
jmp
aad
lds
mov
nop
adc
add
jmp
dec
imulb
insl
iret
push
fistl
jne
popa
cmpsb
pusha
das
test
pop
orl
lret
xchg
mov
adc
cli
imul
inc
stos
test
stos
push
jnp
sub
outsl
sbb
adc
shl
sti
daa
or
idivb
div
fcmovne
out
ret
push
sub
add
sub
sub
adc
aas
cs
nop
push
push
sub
stos
add
mov
fisttpl
inc
lret
insl
jmp
fcmovne
imul
repnz
or
movsb
mov
pop
add
scas
mov
mov
push
mov
stos
out
mov
das
rol
mov
adc
icebp
icebp
mov
xchg
xchg
fisttpl
loop
add
jne
lock
flds
pop
scas
sub
push
ret
iret
xchg
js
mov
lret
adc
nop
mov
nop
movsb
aas
cs
and
nop
add
xor
mov
sbb
add
fcmovu
out
std
loopne
rcrl
fidivl
lods
inc
cmp
movsl
loope
inc
pop
cmp
lock
push
int3
ss
lods
jecxz
pop
lret
xchg
cmp
dec
mov
popl
cmp
je
lcall
addb
dec
xchg
xchg
mov
jl
shll
test
loopne
jg
mov
mov
mov
mov
push
imul
pop
cmp
and
fldt
jno
insl
mull
push
fistl
xchg
mov
dec
movsl
push
inc
arpl
and
push
mov
add
int
mov
sti
cmp
push
ds
lcall
cmp
pop
daa
pop
cmp
adc
mov
daa
das
sbb
xchg
xlat
lea
iret
dec
outsl
dec
inc
addr16
push
inc
inc
inc
push
pop
popa
push
jns
aas
cs
in
stos
bound
pop
gs
popa
fistpl
push
out
fildll
gs
pop
pop
dec
or
popl
out
xchg
rcrl
daa
and
push
jg
cmp
pop
cltd
mov
int
jg
jg
pop
jns
cmp
movb
inc
push
adc
xchg
loop
fsub
xor
pop
jmp
test
jle
mov
cmp
push
xor
aaa
sbb
and
aas
cs
mov
sahf
fmuls
mov
stos
add
and
cmp
stc
and
or
and
cmp
push
je
es
cmpsl
lahf
cwtl
ror
xchg
in
mov
je
es
mov
mov
pop
rcll
test
cmpsb
call
divl
rorl
cmc
jg
sub
pop
jl
add
cs
pop
jecxz
fiadds
inc
jp
jle
push
jp
out
icebp
out
in
jmp
sar
jecxz
aas
cs
add
mov
mov
fstpt
inc
xlat
pop
repz
jge
push
imul
xchg
rorl
sti
sub
dec
cmp
sti
enter
call
lea
sbbl
movsb
dec
xchg
dec
inc
pop
movsl
pop
and
aas
cs
js
aas
cmpsl
mov
stos
mov
jae
mov
mov
sbb
or
cmp
pop
mov
jne
mov
add
inc
inc
xorb
jg
das
pop
shlb
out
jp
dec
jl
jg
outsb
dec
dec
pusha
push
js
push
int3
xchg
pop
jns
mov
stos
mov
in
jb
pop
rolb
data16
jle
push
add
in
out
aas
rcl
or
addr16
imul
inc
mov
mov
sub
out
int3
pop
and
jge
aas
mov
jg
dec
adc
dec
or
and
add
add
fdivr
ja
adc
aas
or
unpckhps
mov
mull
jle
cmpsb
cli
xor
les
lret
je
fs
je
jl
fdivr
mov
je
lods
sbb
js
push
cld
or
push
push
shlb
mov
popa
jg
sbb
jns
int
aam
jno
sarb
cmpsb
add
adc
mov
int3
out
pop
addr16
jle
pusha
int3
inc
int3
or
mov
lods
lahf
mov
aas
cs
jle
cmc
inc
int
xchg
stos
sub
lret
pop
fidivs
dec
call
je
and
lds
es
or
jg
shlb
lcall
ljmp
push
fcmovb
insb
dec
test
scas
dec
push
xchg
sub
int
pop
in
add
aaa
cmp
push
test
scas
mov
fldl
xor
push
mov
outsl
sub
pusha
sahf
fcmovbe
loopne
imul
add
push
inc
insl
jno
sahf
ficoml
add
mov
sbb
and
fsubp
in
hlt
ljmp
ljmp
gs
push
push
daa
and
lods
test
aam
insl
adc
sti
mov
sub
pop
loope
aad
lds
pop
cmc
arpl
xlat
fisttpll
mov
lods
insl
jge
fwait
pop
mov
icebp
test
rcrl
mov
repz
xchg
es
dec
adc
ja
and
test
and
test
xor
jae
pop
das
sub
cmp
mov
pop
not
shl
shr
into
aam
ror
cli
aas
cs
jle
mov
or
mov
push
pushf
lea
ja
pushf
cmc
mov
pusha
imul
clc
add
pushf
mov
lea
jmp
pushf
pushf
movb
lea
jb
bt
cmp
pusha
movb
pushf
lea
jae
xchg
pushf
pop
mov
mov
mov
mov
not
bswap
lea
mov
pushf
lea
jmp
pop
mov
movb
pusha
movl
pushf
pushl
ret
add
test
movsbl
or
movl
bswap
test
sbb
add
mov
clc
push
cmc
cmp
jmp
jbe
stc
addr16
mov
lret
dec
mov
push
bound
inc
outsl
bound
or
ret
mov
xchg
sub
je
cmp
xchg
mov
outsb
rclb
lock
inc
aam
enter
inc
ljmp
ret
jp
jg
and
fdivr
sarb
into
add
mov
or
add
aad
inc
push
push
inc
push
pop
outsb
pop
jbe
inc
aas
cs
les
shr
pop
sti
jmp
mov
mov
or
adc
test
lods
cs
mov
stc
xor
adc
push
ja
dec
outsb
xchg
cs
cmpsb
and
rorb
xor
pop
adc
mov
and
fdivrp
xor
in
mov
cmp
fldl
and
shll
das
loop
loope
adc
loopne
int3
in
mov
jnp
adc
push
pop
or
push
or
or
dec
es
add
test
dec
fcompl
xor
enter
cmc
mov
in
inc
jp
flds
leave
nop
or
movsb
pop
inc
into
ljmp
adc
fcom
mov
mov
adc
pop
xchg
iret
jno
in
in
in
cmpsb
sub
dec
pop
sbb
es
add
les
jle
aaa
iret
repnz
popf
xchg
cli
cmc
sub
sbb
loope
dec
add
das
sub
xchg
pop
jecxz
mov
inc
jo
jb
arpl
jl
jle
add
call
xor
dec
cmp
pop
push
or
inc
xor
lods
mov
subb
mov
cltd
loopne
add
imul
ss
pop
mov
inc
pop
sbb
popa
jge
inc
adc
xchg
fcmovb
aad
lock
mov
loopne
mov
loope
mov
cmp
xor
and
das
cs
rol
cwtl
mov
cld
mov
and
aas
and
lods
out
cs
jecxz
or
or
pop
inc
push
cs
imul
jle
iret
data16
xchg
pop
add
cld
cmc
sahf
sbb
adc
cmp
or
adc
adc
cs
lahf
mov
push
call
cld
jmp
or
mov
lahf
xchg
out
loopne
xchg
push
loop
test
adc
aad
sub
sub
cmpsl
mov
mov
insl
fcompl
jecxz
imul
sub
push
repz
int
stc
cld
and
push
or
loop
loop
les
or
xor
or
aas
cs
sub
addr16
btr
mov
cmc
pushf
bt
cmpb
pusha
pusha
push
pushl
lea
jne
not
btr
xor
cwtl
sar
or
mov
rol
neg
shl
cmp
add
stc
pusha
clc
mov
bt
test
movb
pusha
movb
pushl
lea
je
jmp
fwait
mov
xchg
mov
mov
jmp
arpl
push
xor
sub
repz
daa
imul
je
xor
inc
push
rcll
inc
lock
aaa
mov
jmp
nop
cli
stos
jecxz
pop
adc
pop
es
sub
repz
cli
stos
in
das
pop
scas
addr16
daa
cmp
mov
pop
sub
or
mov
sahf
mov
cmp
mov
cltd
enter
push
decl
cwtl
push
push
lods
fwait
aad
into
push
daa
xor
into
and
cmp
in
push
jnp
cmp
addr16
pop
pop
stc
cmpsb
arpl
and
add
out
mov
jne
xor
and
aas
push
push
sbb
cli
movsl
xor
adc
mov
cltd
ret
shl
xorb
shr
cli
loopne
lock
rorb
out
jmp
inc
insl
outsl
pop
pop
aas
cs
fisttps
ljmp
sahf
shll
xchg
and
mov
pop
pop
in
ss
push
enter
mov
inc
or
shlb
pop
cmp
popf
dec
lods
push
pop
pop
shl
fstp
outsb
mov
fildl
push
outsb
push
dec
negb
cli
add
sub
in
and
or
ret
sahf
adc
dec
dec
ficompl
inc
insb
or
lret
int
pop
mov
push
rcl
mov
roll
xlat
pop
jae
ss
outsb
pop
adc
pop
mov
rcrl
fisubl
stc
icebp
cli
pushf
fadd
rorl
mov
das
jp
cmp
rcrl
and
test
mov
insl
sahf
xor
cld
scas
cli
pop
sbb
add
push
rorl
push
push
inc
sbb
mull
fs
test
imul
rorb
rol
mov
mov
xorl
dec
mov
xchg
jle
imul
movsb
xor
in
popf
lahf
fld
cs
mov
out
cmp
dec
fninit
movsb
add
mov
xchg
sahf
push
mov
push
push
sbb
xor
movsb
pop
mov
jl
jle
shl
fs
fisubl
xor
lock
ret
sbb
in
shr
push
sub
push
sbb
or
mov
push
shrb
xlat
inc
cs
mov
into
inc
ficoml
jp
adc
and
fisubs
into
add
mov
mov
js
sbb
xchg
dec
fnstenv
cmp
movsl
add
mov
in
lret
jp
mov
sub
data16
mov
test
inc
dec
mov
leave
arpl
sahf
subb
imul
and
jo
pop
stc
lahf
mov
popa
popa
add
inc
rcrl
rcll
or
fisubrs
aam
mov
es
sub
aam
lret
adc
lods
adc
lahf
cld
dec
fisubs
mov
pavgw
add
fbld
aad
cmp
je
dec
pop
in
mov
clc
mov
rcl
stos
pop
popf
test
pop
lods
pop
int
fcmovu
cmp
cmp
push
jmp
cld
cld
sub
int
mov
scas
mov
rorl
int3
fldenv
pop
lods
cltd
cmpsb
add
ljmp
pop
incb
mov
and
pop
fcoms
cmp
iret
jge
outsl
pop
adc
pop
or
sahf
dec
jae
cmpsb
loope
notl
lret
filds
rcrl
scas
int
loopne
lret
mov
test
lods
mov
aas
cli
ds
dec
sub
outsb
jb
xor
aas
mov
pop
js
mov
lods
jno
lock
mov
and
sbb
lahf
or
mov
sbbb
insb
mov
mov
test
mov
jecxz
dec
inc
daa
xor
fimull
nop
push
dec
mov
dec
popa
pop
pop
sarl
mov
mov
lods
jecxz
mov
ss
lahf
fstl
clc
out
xor
mov
and
mov
cmp
cmc
push
stos
adc
adc
lods
mov
aad
rcll
shlb
aad
aam
cmp
js
cltd
out
mov
fbld
lahf
scas
call
andl
pop
int
sub
adc
sbb
sbb
jge
sub
outsl
pop
subl
mov
pop
lods
push
aam
sarl
daa
out
cld
stc
mov
sarl
pop
push
int
add
out
fstl
sahf
xchg
sarl
or
mov
shrb
mov
mov
add
outsl
pop
mov
dec
xor
or
mov
sahf
xchg
rcll
jge
mov
inc
cmp
orl
stos
mov
lods
ficomps
enter
lret
sbb
mov
into
lret
ffree
xchg
std
leave
jae,pt
aam
enter
test
cs
jp
pop
aad
fcompl
sbb
cmp
ffree
adc
mov
fnstsw
mov
rolb
and
dec
lods
xlat
fimull
nop
pop
adc
fstp
iret
cmp
dec
into
fcmovb
popa
into
lds
scas
roll
enter
sub
mov
dec
jbe
pop
jp
out
fcmovb
es
outsl
push
fcoms
rcll
fnstsw
into
aaa
frstor
movsl
scas
sbb
dec
push
outsb
fsts
pop
xchg
aam
sahf
rolb
mov
leave
pop
aad
jp
outsb
push
dec
fnsave
dec
xchg
mov
mov
enter
push
jo
fcmovbe
mov
mov
lret
dec
pop
mov
push
mov
int3
lods
xor
mov
push
rol
int
mov
xchg
pop
jbe
mov
dec
inc
dec
push
fs
jno
xchg
pop
mov
mov
dec
xchg
rolb
enter
rcrl
xlat
mov
mov
popf
fcom
push
adc
int
fcoms
cmp
adc
fimull
fimull
mov
rol
rcr
ljmp
fisubrl
xchg
cwtl
push
xchg
shlb
shlb
sarl
cld
out
imul
insb
rcrl
fnstsw
fsts
dec
fxch
push
pop
dec
shrb
dec
dec
mov
cmp
mov
mov
ds
xor
sbb
dec
dec
mov
ficoms
lods
fstp
lret
and
push
dec
les
inc
jp
mov
push
xchg
fisttpl
jns
pop
iret
mov
mov
cmpsb
test
int3
rorl
int3
pop
insb
ficomps
sbb
rol
insl
mov
xchg
rcll
in
ss
mov
cmp
faddl
cmp
js
and
cli
scas
push
mov
xor
pop
or
movsb
mov
xor
in
push
out
inc
push
and
mov
sbbb
mov
fldenv
dec
and
sahf
lea
int
pop
rorl
fisttpll
lret
cld
push
test
ror
fisubrl
mov
imul
sbb
jecxz
das
enter
sbb
xchg
int
push
cld
adc
lret
cmp
push
lahf
lcall
jae
outsb
cmpb
test
das
mov
add
int3
sub
cld
js
push
cmc
andl
pop
aas
sbb
jnp
lahf
mov
les
pop
rcr
data16
pop
mov
mov
stc
and
inc
mov
cmp
add
mov
movsb
loop
fwait
shrl
xlat
into
rol
mov
shll
lret
lods
rcll
mov
fsts
dec
xchg
jg
jne
popf
pop
aad
popf
sbbb
mov
mov
pushf
movsl
push
std
mov
insb
es
cli
into
mov
outsb
push
incb
lahf
rcrb
ret
sti
mov
mov
pop
push
repz
push
jnp
rcl
dec
in
fs
mov
mov
cwtl
add
rorl
outsb
inc
ds
inc
mov
bound
lret
rolb
lods
fstps
push
sub
js
aas
adc
in
aaa
jae
lods
mov
loope
sahf
mov
vmovsldup
push
mov
and
mov
and
cmp
lock
cs
push
xchg
lcall
add
mov
idiv
fdivrl
ss
cmp
push
aad
jge
rcrb
mov
fidivl
repz
in
mov
pop
icebp
and
scas
aaa
fs
ss
jnp
xor
xchg
xlat
leave
into
pop
rorl
pop
scas
stc
mov
mov
mov
cmp
mov
pop
ret
lds
fcmovnu
or
int
xchg
sub
pushf
sahf
fsub
xchg
push
jle
filds
in
xchg
test
add
mov
lock
in
mov
mov
dec
pushf
int3
push
xor
std
cltd
xchg
and
scas
cmp
push
xchg
pop
shll
lcall
imul
mov
arpl
mov
cmp
add
ret
rclb
or
mov
mov
je
xchg
fs
adc
jle
scas
inc
inc
sbb
sub
sbb
mov
pop
ret
lods
fistl
cs
mov
jnp
add
fsubl
insb
cmp
xor
insl
sahf
test
rcr
adc
cli
mov
lcall
subb
test
js
cwtl
inc
xchg
ss
js
popa
adc
fidivrl
shlb
cmp
jno
shll
pop
mov
mov
enter
sbb
popf
loopne
mov
andb
iret
pop
pop
jl
lds
int3
push
push
adc
mov
push
loop
out
mov
rcrl
mov
mov
int3
sub
ret
adc
fisubl
mov
pop
or
cmpsb
in
jl
cmp
and
xor
xchg
inc
mov
push
adc
rcrl
int3
add
ret
movsl
xchg
bound
mov
pop
clc
fcmovu
clc
jnp
pop
shlb
pop
lret
loope
cmp
roll
push
xchg
movsb
inc
mov
sbb
pop
add
dec
sti
and
pop
bound
inc
aaa
aas
lahf
xor
adc
cmp
ror
xor
mov
jmp
mov
movsl
jo
sahf
sub
scas
mov
inc
push
xchg
xor
fdivrl
pushf
sti
and
xchg
mov
pop
fnsave
mov
pop
xchg
mov
pop
mov
jg
les
movsl
add
sti
mov
sub
lahf
scas
data16
fs
xor
pop
cwtl
push
pop
rorb
push
roll
pop
mov
mov
or
pop
pop
adc
lahf
ds
jbe
negb
push
and
fs
mov
test
push
sub
out
ror
dec
mov
ja
and
fisubs
mov
pop
ret
lahf
sub
fisubrl
sarl
add
lret
movsl
sbb
push
lods
xchg
mov
rcrb
xchg
xorl
mov
sub
and
dec
mov
scas
push
dec
sbb
sahf
ds
pushf
into
sub
cmp
lods
cmpsb
sub
pop
dec
ret
incb
mov
push
cli
mov
shr
add
push
push
or
adc
lahf
mov
shlb
jl
je
mov
dec
repz
jg
pushf
xor
mov
mov
jmp
push
int
cmpsb
pop
sbbb
fdivs
xchg
xlat
pushf
xlat
jmp
lahf
mov
fwait
shll
jle
mov
movsl
sub
dec
mov
pop
sbb
xchg
leave
pushf
in
jg
add
addr16
mov
pop
mov
shrl
cmp
push
and
js
adc
stos
cmp
or
and
pop
adcb
fwait
sub
shl
sahf
mov
int3
daa
lock
movsb
jno
inc
leave
mov
sarl
movsb
jns
stc
mov
xchg
mov
idiv
mov
bound
mov
in
mov
je
sub
fs
push
test
popf
inc
int
cmp
inc
mov
in
js
dec
out
les
sbb
lret
mov
or
xchg
sbb
int3
mov
stos
jge
mov
cwtl
and
pop
jge
xchg
mov
ds
and
push
lods
and
scas
gs
daa
lahf
xchg
pop
pop
pusha
sbb
mov
lcall
and
sub
les
pusha
rorl
test
push
clc
xchg
mov
push
pushf
in
jmp
and
pop
test
mov
fcomps
fst
std
cmpsl
adc
mov
cltd
pop
cltd
dec
pop
call
xchg
jne
vpsubusw
std
int
aas
jg
push
rcll
cmp
jne
iret
push
mov
pop
mov
pop
sbb
push
int
cmp
sbb
push
mov
jl
jge
and
mov
ficoml
cmpsb
cmp
cmpsl
mov
stos
loopne
dec
cmp
mov
mov
into
add
add
aas
jno
push
cltd
xor
sbb
inc
outsb
dec
out
mov
cld
jns
add
push
mov
adc
out
mov
and
fsubl
fistl
xchg
repz
xchg
test
cmp
insl
sbb
pop
cmpsb
in
mov
jmp
jo
rclb
jo
mov
mov
mov
clc
push
cmpsl
fcmovu
int
test
sub
mov
adc
popl
mov
stos
or
sub
shll
repz
cmp
xchg
adc
sbb
fdivs
sub
sub
or
jbe
repz
mov
loopne
push
sbb
insl
test
jle
mov
into
pop
insl
imul
pop
data16
fldenv
adc
push
insl
inc
jmp
cmp
xlat
cmc
mov
push
fmuls
cmp
xchg
orl
xor
mov
mov
stc
sbb
out
addr16
fnstcw
xchg
xor
xchg
test
lods
mov
and
data16
dec
sbb
popf
push
daa
dec
xchg
mov
cmpsb
ror
xchg
dec
push
in
mov
lods
repz
cld
adc
pop
aad
sbbb
inc
mov
pop
mov
andl
and
cmp
cmpsl
pushf
popf
stc
dec
scas
adc
cmp
cmp
insl
sub
mov
mov
and
into
inc
pop
fbstp
cmp
adc
mov
push
ja
jno
sub
add
mov
or
jns
mov
or
andl
mov
adcl
xchg
rcl
aad
jle
sbb
lret
mov
filds
out
mov
jle
jl
mov
pop
out
ds
into
inc
movsb
jle
or
mov
pop
sub
and
aaa
dec
cmpsb
mov
int3
cmp
popf
pop
imul
cld
cld
fsubs
movsl
sahf
popf
pushf
inc
stos
mov
lods
mov
js
int
pop
add
mov
mov
insl
data16
add
pop
add
xchg
sbb
cwtl
ret
mov
pop
popa
icebp
ds
xlat
inc
roll
adc
push
leave
ds
pop
movsb
xor
shlb
mov
sbb
jl,pn
sar
icebp
mov
inc
cmpsb
stos
lahf
and
aam
mov
jg
stos
mov
push
inc
gs
dec
je
imull
lock
mov
jmp
dec
mov
repz
push
mov
loope
push
xchg
lods
cli
xchg
inc
adc
lahf
pop
aas
and
and
lds
mov
push
sbb
std
insl
sub
into
fwait
scas
insb
cmpsb
sub
es
mov
fsubrs
icebp
push
test
pop
inc
aam
stos
cmp
pop
push
lahf
push
pop
jns
push
ss
dec
and
pop
jbe
lahf
sbb
mov
fdivr
into
jno
fimuls
repz
xchg
xorl
or
jp
aad
cmp
push
andb
push
fstpl
je
lret
jne
xor
test
lahf
push
icebp
cmpb
dec
jno
and
dec
repz
shll
dec
cmpsb
sarl
push
fistpl
mov
mov
xchg
mov
dec
push
xchg
repz
ficoml
lods
popaw
inc
inc
lahf
or
pop
and
ss
inc
out
sarl
mov
lret
xchg
rcl
adc
aas
inc
inc
out
fimuls
lahf
ss
les
dec
add
adc
add
mov
pop
sub
movsl
clc
pop
in
lods
aaa
inc
popf
sbb
fisubl
mov
pusha
xlat
cltd
pop
adc
and
aas
pop
pop
xchg
mov
rcrl
lds
aad
xchg
sbb
jae
mov
sub
hlt
mov
adc
mov
or
inc
pop
fbld
add
xchg
scas
cmc
add
cmpsb
add
inc
sub
test
mov
mov
jne
mov
cmp
ficomps
cld
daa
les
ds
fildl
pop
and
adc
cmp
loope
gs
mov
popf
lcall
scas
test
pusha
aam
add
inc
ret
or
adc
or
jl
cmc
jo
fisttps
loopne
int
sub
je
pop
rcll
sub
sbb
inc
cmpsl
inc
pusha
orb
test
push
sahf
mov
and
xchg
insl
pushf
lea
inc
cld
in
and
imul
xchg
adc
in
mov
aam
lret
mov
mov
lret
mov
dec
es
push
mov
dec
inc
cmpsb
or
shll
push
ljmp
mov
push
jmp
mov
sub
pushf
mov
sub
scas
mov
cmc
mov
sbb
push
dec
mov
and
mov
cmp
inc
push
add
jns
dec
mov
cltd
scas
std
into
subb
sbb
rorb
cmp
cs
shll
pop
sbb
lock
stos
push
mov
fstl
inc
ds
fmul
nop
ret
sub
dec
repz
test
ljmp
cltd
pop
stos
int3
adc
push
xchg
scas
test
cwtl
and
aad
mov
test
and
push
ja
sub
xor
fsubs
sub
add
jmp
out
ljmp
lea
pop
lods
dec
cmp
adc
pop
mov
test
stos
cmpsl
movsb
adc
push
cli
and
push
cmp
shr
cmc
dec
xlat
test
mov
fildll
fiadds
and
ds
test
inc
test
movsb
pop
push
lret
lcall
cmp
and
pop
shll
lret
push
lahf
frstor
cmp
stos
aas
fucomp
daa
clc
insl
insl
ss
gs
inc
mov
jmp
imul
and
rcl
xchg
data16
clc
sti
sbb
mov
jl
into
outsb
ds
shrl
fs
mov
mov
xor
repz
sub
sarl
sbb
jne
jne
xor
dec
mov
jge
sar
push
sbb
xchg
sahf
jge
loope
into
mov
dec
pushf
cmpsb
push
mov
cmpb
add
pop
inc
enter
mov
shll
or
into
data16
movsl
mov
aas
sbb
jno
jno
push
jp
mov
vcvtpd2psx
imul
or
mov
icebp
cvtps2pd
inc
iret
test
mov
adc
sub
scas
xchg
movsb
fiadds
aas
lahf
cmp
sub
pop
out
ds
cltd
jnp
jg,pn
jae
faddl
ficompl
mov
and
in
andb
sahf
mov
test
es
mov
ja
repnz
int3
dec
pop
and
mov
fistpl
fwait
test
jo
stc
mov
or
or
jnp
rorb
lods
in
dec
sbb
rcl
cli
test
lds
into
pop
loop
ja
push
movsb
clc
aam
cltd
into
add
add
test
ret
xor
aas
stos
lea
cmp
sbb
jl
lret
xor
push
rclb
bound
fsubp
shrl
lea
sbb
bound
dec
pop
repnz
sub
stc
push
inc
and
fwait
scas
jns
xchg
popa
mov
jne
xchg
lahf
and
and
mov
push
adc
outsb
inc
pop
cld
mov
and
or
pusha
jp
aaa
aas
adc
insb
push
or
icebp
mov
loope
cmp
repnz
jne
jecxz
add
pop
push
jbe
and
dec
xchg
jg
sub
xchg
movsl
jns
cmp
push
int
mov
or
sarl
mov
pop
aad
xchg
fldenv
jg
dec
cmp
jg
out
mov
or
mov
fwait
ret
inc
int3
cmc
cmpsb
xchg
lods
ror
and
mov
jno
nop
ret
pop
leave
test
xor
roll
sbb
sub
js
mov
cmp
mov
lahf
dec
in
dec
enter
mov
pop
lock
fwait
inc
call
cmpsb
dec
cs
sub
adc
mov
sub
fiadds
shll
push
inc
mov
aad
sti
cs
sahf
mov
sub
jge
jmp
cmpsb
mov
inc
lods
or
ficompl
inc
mov
dec
dec
imul
or
jb
mov
ja
inc
pop
std
sub
fisubrs
int3
popf
pop
add
lahf
insl
xor
cmp
aam
rorl
and
pop
mov
lret
test
mov
test
cld
dec
icebp
push
jmp
mov
les
pop
pop
mov
les
jo
pop
adc
clc
aad
aas
push
cmc
ficompl
enter
mov
rcrl
std
xlat
ljmp
loop
jge
fwait
pop
mov
cmp
loopne
scas
push
daa
or
mov
fstps
gs
ja
shr
mov
pop
fs
or
mov
fidivl
rcrl
xlat
xor
lret
sarl
pop
mov
mov
push
popa
push
pop
faddl
fs
mov
cmp
ret
push
out
test
lahf
test
cli
addr16
mov
cld
pop
lcall
adc
scas
sub
stc
dec
mov
mov
jl
xchg
fidivrs
cmpsb
sub
cmp
pop
repnz
cwtl
jno
pop
adc
push
je
insl
dec
or
inc
addr16
pusha
or
in
cld
mov
les
push
sub
dec
ss
inc
shlb
fcmovnb
mov
fnstsw
cld
mov
subl
pop
and
test
leave
inc
js
lea
cmp
mov
mov
outsl
pushf
in
testl
aad
mov
rcr
not
lret
fcompl
inc
inc
dec
ret
fcmove
cmpb
xchg
xor
fcompl
int
and
pop
push
shl
dec
roll
outsl
cmp
pop
clc
jecxz
add
mov
or
pop
mov
scas
negb
inc
jecxz
mov
lods
inc
not
clc
fisubl
in
lahf
mov
dec
xor
add
cwtl
les
mov
repnz
in
cld
fisubrl
lret
adc
insb
insl
xchg
cli
std
ror
mov
mov
leave
imul
add
into
xchg
ret
mov
jmp
movsl
test
xlat
cld
or
int3
xchg
adc
lods
mov
mov
xchg
dec
nop
fldl
dec
mov
mov
sbb
pop
mov
push
xlat
pop
repnz
pop
or
out
shll
push
xchg
and
aam
dec
inc
mov
xlat
inc
test
jns
mov
jmp
push
mov
loopne
shrl
cmpsb
mov
dec
and
fdivs
rol
cld
icebp
dec
mov
adc
rcrl
je
cmp
faddl
out
notl
xchg
aam
push
sbb
psubusw
int
cwtl
lea
or
bound
scas
dec
das
fxch
xlat
jp
shll
dec
mov
sbb
pushf
ror
lds
add
into
lahf
imul
mov
mov
aas
push
out
sub
js
xchg
sbb
jle
mov
aas
adc
mov
repnz
cmp
lea
cld
mov
lahf
sarb
int
xchg
pop
xchg
int3
int3
ret
and
mov
arpl
or
or
lods
inc
xchg
mov
mov
lods
leave
and
mov
sahf
ljmp
mov
inc
aad
push
pop
adc
je
or
mov
mov
loop
sub
test
js
xor
mov
mov
scas
outsl
lcall
lret
ret
clc
cmp
cld
inc
mov
sub
and
or
jno
call
fdiv
push
adc
shrb
inc
cmpsb
pop
pop
mov
and
ret
in
cmp
addr16
pushl
pop
lock
imul
or
inc
push
xor
inc
add
lods
ficoms
daa
test
out
orb
pop
push
mov
popf
push
fdivr
cmp
push
or
pop
or
sub
mov
je
je
sbb
sub
cmp
mov
sbb
cltd
sub
iret
std
cwtl
dec
popa
cmovo
popf
test
flds
pusha
inc
cmp
arpl
les
movl
scas
dec
mov
jno
fbstp
sub
dec
sbb
or
roll
mov
jne
mov
mov
pop
shrb
xchg
out
push
mov
rcl
cmpb
int
pop
mov
cmp
dec
inc
mov
push
aam
add
push
cwtl
jb
adc
shll
aas
lods
fadds
in
scas
test
jecxz
lret
rcll
sbb
lea
inc
insl
push
pop
dec
adcb
std
push
int3
add
jne
jge
dec
mov
inc
lcall
sarb
cld
lods
fcomi
rcrl
cmp
aas
movsl
xchg
rcll
hlt
les
dec
and
mov
andb
daa
sbb
xor
push
cmp
jmp
push
mov
jb
push
fucom
mov
jne
push
push
data16
hlt
ror
sbb
out
inc
jg
push
or
mov
xchg
aad
jge
lea
dec
sahf
and
lahf
push
jno
jg
dec
push
sub
iret
mov
xchg
outsb
pop
and
aas
mov
clc
inc
mov
push
imul
call
mov
jle
rol
xchg
jbe
mov
push
xorb
push
push
mov
pop
outsb
movsl
push
pop
stc
push
je
fldt
jno
orl
insb
fisubs
and
add
sahf
int3
aad
icebp
jae
je
mov
cmp
xchg
inc
push
mov
sub
test
xor
pop
pop
mov
mov
inc
cs
cmp
mov
out
mov
dec
and
int3
hlt
fadd
stos
adc
mov
rcl
fstl
cwtl
add
aad
les
pusha
mov
ds
les
jbe
cltd
das
clc
add
stos
pop
loopne
je
dec
mov
popa
and
jp
test
int3
stc
xchg
aad
mov
inc
mov
ret
or
mov
loopne
mov
lock
adc
in
clc
push
addr16
mov
das
enter
fstps
fcmovb
sbbl
je
mov
insb
in
pop
sub
push
in
or
mull
aam
scas
gs
addr16
push
xchg
sbb
sahf
test
jg
cwtl
fldcw
mov
pop
rcll
dec
popa
out
mov
cmp
pop
rol
mov
lock
jbe
adc
cmp
in
and
xor
hlt
ss
mov
ret
clc
mov
sub
push
push
inc
sahf
outsb
aam
lods
inc
rcrl
jno
lret
adc
xchg
rcll
outsl
into
movl
mov
mov
cld
data16
popf
sub
push
push
or
mov
or
lock
sbb
shl
fld
test
stos
scas
loope
fcmovu
pop
xchg
ret
add
mov
stos
sbb
jbe
mov
adc
mov
push
jnp
cs
mov
int3
rcr
insl
mov
xchg
js
out
rol
aam
xor
and
sbb
cmp
ds
fcompl
js
ss
repz
test
fstpt
adc
jecxz
lahf
pop
lret
rorb
mov
pop
enter
loopne
leave
pop
call
push
xchg
mov
cmpsl
in
jbe
xchg
shlb
jns
je
cmp
pop
pop
scas
mov
leave
cmp
pop
push
aad
fcoms
into
int3
imull
mov
lcall
or
mov
jle
jns
ret
mov
jg
and
addr16
std
fmull
xor
jno
dec
push
sub
xchg
popf
and
mov
and
shr
negl
je
xorb
mov
sbb
outsl
mov
xchg
lcall
mov
add
js
mov
mov
adc
mov
sub
inc
popf
push
stos
je
call
cmp
cmc
jb
int3
xchg
das
pop
sahf
filds
idiv
xchg
or
pop
jno
jbe
jcxz
mov
inc
ret
jle
daa
xor
mov
leave
imul
cmp
ss
push
push
and
lea
pop
mov
jl
scas
rcrb
or
adc
or
jne
sbb
cmpsb
mov
cmpsl
jbe
mov
dec
insl
imul
cmp
xchg
xor
mov
ja
dec
dec
mov
cmp
adc
xor
fcomps
sti
and
mov
mov
int3
jo
sti
in
push
enter
sub
sbb
dec
fs
pop
mov
js
jge
push
in
xchg
push
stos
fcmovnu
xchg
pop
or
pop
icebp
dec
sub
std
cmp
sub
sub
sbb
xchg
adc
lret
int3
pop
cld
mov
dec
and
inc
sbb
rcrb
xor
push
sbb
shll
test
stc
add
aas
stos
pop
jnp
faddl
inc
mov
sub
imul
mov
int3
insl
mov
push
jle
ja
sbb
fcoml
mov
movsb
ficompl
sti
add
lret
pop
fwait
enter
lret
lock
and
sahf
subl
mov
aam
movsl
aad
jge
cmpsl
push
das
jle
xchg
mov
mov
pop
int3
ljmp
movsb
dec
aam
cmp
sahf
aaa
pop
xor
int3
daa
fdivrl
shl
mov
lods
inc
cmpsb
mov
aam
loopne
jmp
push
dec
adc
int3
ret
cmpsb
mov
mov
dec
push
shrl
aaa
fdivr
gs
sub
pop
jbe
add
clc
xlat
jle
jns
sbb
mov
insl
xorb
rcrl
cltd
jecxz
mov
out
jne
and
rcrl
leave
aaa
insl
add
stc
imul
negb
pop
mov
lds
lods
arpl
dec
int
mov
or
repnz
mov
hlt
ja
inc
enter
bound
aas
roll
insl
pop
into
inc
pop
pop
fcmovnbe
pop
mov
xor
push
pop
mov
xchg
out
loopne
jno
pop
xchg
inc
fisubrs
pusha
out
pop
sbb
or
or
push
fiadds
xchg
data16
mov
daa
ja
out
leave
rol
out
rclb
rcl
xorb
cltd
into
xchg
push
mov
pop
sbb
sbb
cmpl
outsl
jge
stos
sahf
xchg
xor
xchg
test
test
roll
inc
jne
aad
fcomps
arpl
cld
fsin
jle
aad
and
or
ficompl
gs
ja
jp
mov
fcompl
aad
roll
inc
flds
shll
cmp
dec
out
fstl
cwtl
inc
ljmp
inc
popf
sub
xchg
add
cmpsb
roll
pop
dec
int3
xor
push
mov
js
aad
lods
jne
sbb
sti
add
fsubr
movsb
rcl
and
ss
pop
fdivl
mov
lea
daa
or
pop
into
ficompl
leave
push
ss
cmp
in
sbbl
js
aam
divb
roll
jne
jnp
cmp
inc
push
mov
mov
mov
pop
cmp
or
dec
mov
mov
push
push
in
cmpsl
xchg
popa
push
fmul
aaa
dec
es
mov
add
jl
aas
fcmovbe
mov
shlb
mov
cltd
sub
je
xor
cwtl
mov
push
cld
mov
cmpsl
outsl
js
std
xchg
cmp
mov
shrl
ror
pushf
sbb
add
mov
fcmovnu
into
cmp
inc
fdivrs
movzbl
inc
lcall
push
jae
jo
stos
mov
out
idiv
pop
pop
lret
shll
clc
ja
inc
sub
sub
arpl
repz
xchg
jbe
aam
cmp
lock
test
push
add
mov
pop
into
out
xor
into
pop
lea
pop
cmp
loope
fcompl
and
xor
and
je
inc
fdivs
aad
lods
jle
push
pop
dec
jae
inc
xchg
jmp
inc
mov
fistpl
or
int3
pop
pushf
push
shlb
jle
test
int
fnsave
fidivrs
daa
imul
fisubrs
inc
mov
mov
sbbl
vunpcklps
jecxz
dec
or
cmp
pop
aad
fistpl
cmp
rol
cmp
adc
in
mov
imul
mov
push
pop
shl
stos
fidivrl
and
push
sub
rorl
mov
test
xchg
popf
fistpl
push
cltd
and
in
scas
jg
mov
arpl
dec
lods
mov
dec
cltd
rorl
mov
movsl
insb
call
es
sub
mov
xchg
fists
push
sub
mov
push
sub
call
sub
pushf
or
push
sbb
sub
pop
push
shlb
pop
or
jo
xor
dec
cmc
dec
and
insb
pop
stc
add
cltd
jg
cmp
outsb
or
inc
xor
sbb
cmp
outsl
xor
cmpsl
popf
push
mov
stc
into
rcll
not
and
pop
mov
xchg
fisubrl
sbb
out
lret
xchg
sahf
ret
test
jge
sbb
rcrb
rorl
jge
in
pop
pop
inc
dec
xchg
outsb
or
sbb
inc
inc
mov
push
add
aam
popf
sbb
cs
arpl
xor
jge
sub
dec
jmp
cmp
mov
jns
cs
xor
sbb
lcall
dec
pop
test
cs
aam
dec
mov
mov
addr16
xor
jae
repnz
adc
adc
inc
movsl
push
aad
fisttps
lods
mov
pushf
inc
or
lahf
add
xchg
cmp
xlat
mov
shrl
imul
mov
test
inc
rolb
jecxz
xchg
repnz
lds
adc
mov
cld
outsb
lret
shrb
stc
fsubl
cmp
dec
and
roll
lret
mov
pop
pop
fcomp
sub
xchg
or
insl
pop
scas
xchg
jb
sbb
adc
lods
mov
dec
inc
inc
fsubs
pusha
pop
jb
leave
jge
dec
hlt
repz
stc
rcrl
inc
push
pop
dec
imul
mov
mov
pop
ljmp
dec
jae
enter
test
mov
enter
repnz
mov
mov
icebp
int3
fists
lret
lea
test
mov
sub
mov
cmp
shr
push
push
adc
lods
int3
jno
or
push
adc
jo
test
ds
xchg
sahf
stos
mov
mov
filds
dec
mov
pusha
pop
mov
fstl
cli
mov
jl
xchg
dec
iret
or
aad
sar
js
enter
pop
out
loopne
lods
xorb
jno
fcmovu
mov
mov
shll
cmp
fcmovnb
push
or
rcrl
and
ficoms
pop
ljmp
pusha
mov
pop
out
mov
xchg
mov
mov
clc
iret
and
push
sar
cli
dec
xor
into
out
inc
cltd
mov
in
ret
leave
fwait
xor
addr16
pop
call
sub
adcb
cmc
xchg
pop
mov
call
sub
aad
fnstsw
xchg
jne
shll
cmp
adc
mov
jmp
lret
xchg
mov
push
jecxz
ja
lahf
fstps
cmp
or
add
mov
lret
dec
mov
scas
pop
loope
xor
aad
adc
insb
fcomi
mov
fdivrl
fbld
divb
repnz
enter
push
pop
sub
sub
enter
out
add
pop
repz
test
cmp
mov
sbb
popa
dec
aad
dec
dec
stos
out
push
stc
xchg
sahf
jne
loopne
test
lcall
sub
roll
sbb
push
add
pop
hlt
and
out
sbb
adc
lahf
dec
dec
cmp
aam
in
notb
adc
aam
lods
inc
or
or
adc
push
rcll
insb
jnp
xchg
into
cmp
test
push
pop
sbbb
pop
push
filds
lret
fsubrs
shll
leave
xchg
fsubl
fwait
dec
sbb
xchg
xchg
lahf
mov
fucomi
mov
int3
xchg
in
ficoml
daa
xchg
or
push
movsl
sub
ficoml
stos
inc
int
add
ja
xor
outsb
outsb
dec
add
pop
scas
sbb
es
es
int3
cmp
fildl
out
ljmp
dec
mov
out
shlb
sub
sub
popa
pop
pushfw
jnp
push
jle
push
or
inc
dec
or
push
sti
mov
adcl
mov
mov
push
cmp
fildll
inc
outsl
jnp
mov
adc
out
gs
out
lods
movsl
fs
cmpsb
add
adc
push
out
xlat
dec
faddp
sub
mov
fists
xchg
loop
dec
jmp
in
int3
repnz
ja
mov
and
pushf
popf
testb
repz
jne
in
sub
ret
fbstp
inc
roll
dec
or
mov
pop
call
mov
inc
dec
or
and
popf
or
rcr
rorb
or
fstpl
pushf
int3
inc
clc
gs
inc
ror
out
sbb
mov
dec
insb
scas
fcoml
sbb
mov
mov
inc
dec
fdivrp
int3
push
mov
inc
out
jl
pop
imul
sahf
sub
fbstp
sbb
adc
cmp
repnz
lcall
movq
ror
pop
xor
stc
mov
sub
ds
adc
les
mov
lock
lods
sub
add
xchg
or
std
dec
and
lods
in
test
inc
jb
sbb
cld
pop
xchg
pop
sbb
int3
pushf
hlt
jne
sbb
ja
pop
aam
shr
adc
inc
shlb
xchg
jns
ds
sbbl
ds
fwait
sub
pushf
inc
in
mov
jae
mov
push
fcmovu
test
dec
mov
push
lcall
and
hlt
lret
fwait
scas
rclb
mov
lcall
stc
sbb
int3
dec
pop
sub
mov
sub
mov
sub
adc
cmp
out
xbegin
jle
shrl
dec
jne
mov
pop
aas
dec
mov
and
fcompl
fadds
dec
jmpw
mov
ret
mov
js
fsts
pop
xor
sahf
adc
repnz
push
rclb
mull
pop
lahf
das
daa
ljmp
sbb
enter
jle
icebp
add
ret
cli
test
mov
loope
or
in
mov
mov
sbb
sahf
cmpl
fst
loop
int
inc
test
int3
mov
popf
sahf
adcl
mov
sbb
ljmp
jo
add
bnd
repz
mov
imul
aad
stc
pop
push
inc
in
add
int3
xorb
lret
rorl
xlat
mov
push
xor
cmp
pop
addr16
jmp
adc
ss
mov
mov
or
test
loope
lret
pop
fsubrp
ror
xor
mov
or
pop
xchg
ficompl
mov
mov
pop
hlt
mov
sbb
mov
sbb
dec
out
xor
pop
ret
shl
aam
aas
push
sbb
in
sub
dec
push
mov
mov
mov
pop
xlat
pop
xorb
mov
fisubs
scas
cs
jmp
fidivrl
push
ret
outsl
ss
dec
or
pop
cs
movl
jg
inc
stos
cmpsb
pop
inc
cmp
and
and
shr
jae
mov
mov
sub
pop
rol
jl
cmp
daa
or
xor
daa
fisttps
push
call
jge
ds
mov
stos
sar
enter
ljmp
push
or
jb
mov
rclb
jbe
pop
pop
push
fsubs
pop
fdivr
mov
fcomps
pop
out
fcompl
mov
in
test
inc
pop
frstor
jl
mov
int
add
aas
mov
jp
and
lods
lea
cwtl
jmp
jmp
dec
fsubrs
addr16
adc
outsb
mov
xchg
rcr
imul
ds
push
mov
outsl
rorl
loopne
sbb
cmp
xor
into
pop
jge
cld
mov
mov
mov
cltd
xchg
into
mov
pop
add
sbb
or
int3
or
cmc
test
pop
xchg
gs
ret
ds
inc
mov
sbb
ffree
xchg
rol
mov
push
cld
imul
int
int3
repz
mov
jmp
repz
mov
jno
fistl
mov
std
leave
pop
jl
clc
out
popf
mov
cli
ljmp
shl
mov
mov
jae
aam
dec
dec
in
push
xor
repnz
inc
rcrl
pop
es
aam
loop,pt
adc
jge
cmc
mov
pop
in
pop
push
sub
neg
dec
into
inc
pop
mov
in
sub
cld
rorb
xor
xchg
les
fldcw
jge
lods
push
rclb
imul
xchg
movsl
mov
ja
into
mov
bound
roll
dec
sbb
movl
mov
adc
sbb
mov
push
shrb
fmull
cmpl
insl
jne
jle
pushf
lods
push
int3
sahf
lods
jno
push
filds
sub
movsb
call
cmp
pop
pop
fcmovnb
xor
nop
hlt
std
push
insl
pop
in
push
pop
movsb
cmp
inc
cmp
sbb
jp
sub
jmp
adc
cmpsl
imul
pop
jbe
push
lods
aam
inc
mov
shrl
ret
add
pop
mov
cmc
insb
fisttpl
in
ret
mov
sti
push
pop
push
rcll
nop
lret
cs
adc
hlt
jnp
inc
dec
mov
insl
mov
mov
insl
mov
or
sub
jle
push
and
or
cmpsb
xlat
rcrl
mov
mov
outsl
mov
dec
movsl
mov
ror
cmpsl
jne
dec
mov
mov
lds
pop
lahf
shrb
push
shll
dec
xchg
pop
insb
push
add
iret
cmp
repz
jb,pt
pop
stos
and
dec
test
inc
gs
lcall
cld
lahf
in
cmp
add
jno
and
popf
std
pop
ljmp
jmp
sub
lods
out
shlb
jl
hlt
jbe
mov
xlat
inc
call
adc
and
cmpsl
fsubr
pop
jl
cmpb
jns
xchg
shrd
fisubrl
ljmp
shr
push
sub
xor
movl
jl
sub
bound
push
insb
xchg
add
mov
cltd
jp
jle
inc
ret
sub
cwtl
push
fcmovnbe
addr16
mov
fisubs
mov
les
mov
push
das
dec
xor
xor
shll
aaa
es
fwait
rolb
sbb
xor
std
push
rclb
movsl
repz
jecxz
push
inc
sbb
out
lock
ds
mov
std
mov
test
push
shr
fcoml
push
outsb
cmp
mov
add
push
xchg
cmp
rcrl
or
ds
adc
mov
xchg
xchg
inc
dec
aam
andb
sbb
xchg
jl
iret
mov
mov
mov
xchg
stc
arpl
push
icebp
mov
push
mov
out
push
push
adc
in
push
cmp
inc
lods
inc
xor
movsl
cltd
xor
cwtl
mov
adc
rcll
dec
mov
xor
rorl
xchg
mov
sbb
pop
aad
sbb
or
lahf
sbb
mov
ss
test
inc
addl
cwtl
inc
cltd
pop
or
jns
ljmp
pushf
cmpsl
jno
and
cli
pop
and
pop
mov
clc
sub
cmp
sar
or
mov
outsb
cmpb
lods
or
mov
scas
mov
loope
ss
sub
cmpsb
in
movsl
push
outsb
xchg
shll
aas
cmp
jo
inc
in
push
int3
mov
jns
cld
push
mov
mov
fisubl
fidivrl
sbb
mov
sub
rcl
pop
fldcw
lods
ljmp
cwtl
repnz
sahf
xchg
cmp
bnd
hlt
scas
jecxz
xchg
loopne
and
pop
mov
aaa
adc
adc
sub
mov
inc
jge
push
mov
fldenv
cmp
shlb
icebp
aam
cmp
mov
arpl
jl
shll
cmp
lods
rcl
repnz
pop
xchg
push
movsb
ficoms
mov
js
int3
mov
pusha
dec
push
push
mov
movsl
jns
sbb
scas
ds
mov
xor
scas
pop
rcl
add
mov
hlt
negb
pop
repnz
pop
mov
data16
push
movsb
loop
pop
int3
enter
or
sarl
and
mov
rcrb
movsb
mov
push
fwait
int3
loope
mov
adc
adc
movsb
xchg
mov
pop
clc
mov
pop
fcompl
add
test
pop
iret
out
stc
jnp
test
pop
xor
pop
insl
and
into
lcall
mov
push
mov
xor
inc
jno
mov
repz
mov
loop
xor
jb
outsb
add
test
sub
jno
sbb
fsubrs
xor
ja
dec
push
leave
add
sti
push
lods
mov
cmp
push
and
cli
insb
lcall
movsb
cmpsl
sti
and
mov
inc
xchg
imul
lret
add
stos
insl
arpl
jno
or
xchg
stos
jl
dec
inc
sarl
in
test
jns
leave
push
fucomip
xchg
ficoml
and
xchg
movsl
push
gs
lds
and
lea
sahf
pop
outsl
mov
fwait
xchg
lret
in
add
push
or
mov
pushf
push
and
push
push
pop
hlt
je
cmpsb
aam
out
pop
fcoml
roll
pop
push
push
dec
pop
adcb
mov
stos
and
aas
shlb
out
aas
mov
xchg
mov
rorb
lret
movsb
daa
mov
or
lea
daa
dec
repnz
lds
pop
sub
mov
jae
dec
xor
test
pusha
pop
sbb
and
fneni(8087
xor
sbb
mov
insb
push
lods
repz
out
dec
xchg
push
xlat
daa
or
pop
pushf
imull
mov
inc
push
and
push
push
rcl
mov
arpl
adc
sub
mov
fs
pop
inc
stos
xchg
mov
aas
lret
add
lods
and
mov
sti
subl
lea
sbb
xor
je
les
decl
sub
jle
adc
ds
fdivrl
mov
aaa
test
xchg
adc
in
and
mov
push
pand
sbbl
jge
push
xchg
cmpsl
xor
test
and
enter
dec
sub
lods
mov
cmp
test
inc
mov
lcall
pop
jmp
data16
xchg
fdivr
mov
jl
out
mov
stos
push
cld
aad
std
cs
pop
xbegin
fwait
sarl
int3
xchg
mov
or
push
iret
push
sbb
cmp
fisttpl
ljmp
cltd
sub
jno
sbb
jle
push
xlat
call
mov
mov
cmpsl
mov
jecxz
xchg
push
lret
xchg
jmp
bound
into
pop
dec
test
cli
jmp
xchg
mov
pop
sub
test
and
mov
dec
push
jae
cmp
add
loopne
jno
ljmp
pop
insb
js
fistl
push
inc
imull
cmc
andl
add
inc
dec
mov
adc
or
add
int3
sub
dec
rcrl
and
jb
hlt
dec
stc
loope
and
popa
je
data16
jge
clc
call
in
xor
sbb
mov
xor
fcompl
sbb
mov
daa
aad
lds
dec
mov
mov
push
pop
std
int3
mov
aaa
notb
sbb
pop
or
xchg
pushf
inc
or
dec
ror
push
add
scas
pushf
fwait
push
xor
inc
mov
jne
xchg
push
inc
into
sti
lock
pop
fiaddl
jae
stos
mov
sbbb
cmp
clc
mov
xorl
sarl
mov
mov
in
inc
outsl
fiaddl
xor
ljmp
test
js
xlat
movsb
xor
mov
loopne
add
out
dec
call
sahf
xchg
inc
je
sub
pop
shll
fmulp
imul
xchg
js
fistl
sub
out
cltd
xchg
rolb
daa
cli
cld
scas
xor
adcb
in
movsb
lock
in
cltd
pop
hlt
repnz
jge
xor
pop
xor
repz
fs
lods
mov
sub
mov
shll
jg
cmpsl
enter
int3
int3
mov
xor
mov
xor
div
push
xchg
sarl
aas
pop
in
cmp
and
stos
jae
xchg
dec
out
mov
inc
pop
cmc
jno
jl
jne
rcrb
pop
faddl
cmpb
aam
inc
es
push
jl
mov
add
out
subb
pop
lods
lret
sbb
loopne
sbb
imul
cld
mov
jl
rolb
mov
pop
iret
mov
push
mov
pop
fxch
dec
jge
sahf
push
cmp
imul
sahf
lods
js
or
ret
inc
jb
inc
shll
dec
jp
enter
dec
push
sbb
fidivl
add
mov
ret
outsb
mov
int3
and
jns
push
lea
or
adc
insl
enter
popf
das
sbb
jge
jmp
ret
stc
adc
lds
cmpsb
adc
cmpsl
fistl
add
add
cmp
push
pop
loopne
and
jnp
mov
jb
adc
sub
sbb
aad
and
daa
mov
roll
pop
xor
mov
cmp
loopne
add
sbb
push
push
sub
fbstp
sub
flds
lock
adc
scas
je
pusha
sbb
mov
sbb
jo
lret
mov
lret
insl
pop
mov
dec
pop
clc
dec
into
jge
pop
jne
inc
sbb
pop
sub
pop
push
mov
mov
rcrl
rorb
push
gs
pop
ds
out
mov
repnz
push
pushf
mov
xchg
jmp
pop
mov
addr16
pop
ds
pop
fstpl
jmp
mov
mov
mov
cld
in
lahf
or
stos
aaa
hlt
das
ljmp
add
pop
add
push
mov
bswap
add
gs
insl
mov
and
xor
dec
mov
adc
mov
insl
mov
sahf
test
pop
sbb
xor
test
xchg
add
div
pop
imul
aas
lret
mov
int3
fiadds
push
cs
test
stos
cmp
mov
add
jnp
mov
cld
cltd
push
or
sub
lcall
push
lret
xor
mov
scas
xchg
xchg
arpl
mov
scas
push
leave
xchg
pop
ret
push
iret
sbb
jb
fadds
jnp
push
lret
gs
outsb
mov
shl
daa
push
sbb
mov
repz
nop
in
scas
aam
loope
out
pop
adc
mov
mov
mov
push
push
clc
cmpsl
mov
mov
fs
dec
mov
mov
fst
sbb
out
mov
mov
sub
clc
ret
xor
mov
xor
mov
aaa
pop
sbb
aam
fldenv
mov
lahf
cmp
pop
push
adc
sub
cwtl
mov
xchg
rcl
cmp
push
xlat
adc
adc
or
int3
adc
rcrb
mov
push
in
add
enter
dec
lcall
rol
xor
test
cmp
xor
push
mov
mov
aad
fimuls
addr16
adc
mov
insb
popf
aam
ficoml
fdivrs
jle
rorl
xchg
shlb
in
shll
ret
adc
sbb
lahf
mov
test
insl
in
clc
dec
mov
inc
imul
mov
insl
pop
adc
lock
sbbl
js
orps
in
jno,pt
repnz
int
fmulp
sub
call
movsl
hlt
cltd
dec
inc
insl
dec
mov
daa
sar
jnp
lods
out
clc
jle
ss
std
lea
mov
jns
out
xor
in
sub
jl
or
mov
lret
stc
jae
xchg
dec
ds
sub
notl
mov
stos
ss
je
dec
mov
mov
add
dec
out
jl
adc
dec
pop
mov
stos
pop
addr16
jle
pop
lds
fdiv
mov
daa
xor
push
rol
lods
push
jl
dec
lahf
mov
and
pushf
stos
out
xchg
pop
xchg
add
cmp
fmull
and
rcrb
dec
sub
mov
xor
cmp
call
icebp
mov
mov
dec
pushf
rorl
gs
mov
xchg
inc
filds
sti
mov
cmp
lcall
bound
xchg
and
shlb
addb
adc
push
jne
dec
repz
int
xor
fidivl
sbb
mov
fcmovnbe
mov
pop
adcw
ljmp
mov
sub
and
fdivl
sarb
dec
mov
fistl
daa
lret
ret
fimull
jb
mov
cmp
aaa
mov
cmp
mov
rcll
rolb
aad
push
fwait
cmpsb
fbld
pop
in
incb
or
cmc
lret
cmpsl
subb
pop
mov
xor
dec
xlat
pop
lret
push
push
push
push
inc
pop
fiaddl
inc
jle
insl
into
int
cld
cs
push
mulb
adc
mov
clc
fbstp
mov
mov
movsb
push
cmp
jnp
adc
pop
les
rcrl
loopne
data16
mov
aaa
pop
mov
jg
lods
and
shll
jl
std
mov
xchg
in
movsl
and
ret
sbb
pop
lods
testl
mov
inc
sbb
clc
mov
push
sbb
dec
xor
or
lahf
xchg
jno
dec
hlt
aad
in
pop
sti
jb
inc
mov
in
lods
jns
outsb
sub
jl
fistpl
add
enter
stc
fldl
sarl
aaa
out
out
jns
int
mov
push
mov
lock
insl
out
mov
mov
gs
push
iret
in
pop
popa
push
shll
sarl
decl
dec
rcll
rcr
xchg
lcall
push
rolb
lret
sbbb
add
jae
mov
insb
mov
jmp
pop
jmp
mov
inc
scas
loope
cmp
xchg
repz
dec
jnp
sub
mov
aad
ret
enter
jns
scas
xor
mov
cmp
stos
jl
iret
ret
push
lods
sti
adc
insl
in
dec
inc
sub
dec
testl
subb
add
dec
mov
sbb
push
mov
sbb
lret
adc
cmp
pop
adc
stos
test
jno
in
sbb
sbb
jge
adc
scas
add
cwtl
rcl
mov
push
cmp
stc
sarb
xor
sbb
enter
stc
aad
or
sbb
popf
or
test
xchg
mov
inc
inc
shlb
inc
ds
mov
and
push
jmp
mov
sbb
sti
cmc
xor
pusha
lea
jne
movaps
inc
inc
push
rcr
cmp
mov
jmp
rcr
scas
pop
roll
sbb
insl
or
ljmp
lret
push
cmp
shl
pop
xor
repz
ss
and
out
mov
int3
pop
sub
mov
into
cmpsb
mov
pop
jge
test
les
push
pop
insl
dec
cmc
mov
and
pop
push
shlb
dec
cwtl
cli
movl
sub
adc
sbb
pushf
aad
adc
jl
rcrl
mov
enter
stos
ljmp
shr
repz
xor
jmp
movsb
push
dec
sub
xchg
rcl
mov
jle
sub
dec
lods
ja
sarl
insl
cld
jne
dec
ret
mov
js
mov
xchg
push
icebp
aaa
push
mov
rcrl
insl
imul
ljmp
negl
fists
int3
mov
test
lret
faddl
jno
push
inc
cmpl
jge
sbb
mov
pushf
aam
jae,pt
push
ja
push
add
outsb
mov
cli
scas
cmpsl
mov
addr16
mov
rorl
add
into
fsubl
enter
jne
repnz
inc
ret
push
adc
inc
rolb
jne
cmpsb
and
jae
filds
pop
into
push
pop
and
mov
ret
addr16
cwtl
sub
xchg
aad
sarl
mov
sub
ljmp
add
repz
int
sbb
xor
xlat
jp
xor
pop
mov
inc
inc
cmpsl
pushf
fisttps
push
ds
inc
inc
pushl
cmp
jb
mul
cmp
cmp
mov
pop
add
jmp
ds
getsec
fnstsw
xchg
mov
aas
adc
mov
mov
outsb
hlt
clc
mov
fbld
mov
cs
cwtl
arpl
xchg
adc
mov
mov
xor
jge
adc
fldl
pop
cld
or
loop
std
lds
xor
je
and
ss
xchg
sbb
add
lock
lea
out
fdivrl
iret
insb
mov
lcall
das
pop
xlat
xor
inc
jb
idiv
outsb
mov
cmp
out
push
jne
aad
mov
iret
xchg
fisubs
and
sub
stos
mov
pop
push
cmp
sbb
stos
add
lods
mov
into
shrb
adc
lret
sbb
push
fucomp
push
rclb
fldcw
mov
cltd
loope
push
jns
mov
notb
fwait
adc
aas
lret
push
adc
hlt
pop
imul
out
sbb
pusha
cmpb
push
scas
insb
pushf
pop
in
mov
mov
sbb
jecxz
shlb
push
adc
nop
jnp
cld
shll
mov
test
sub
inc
mov
lods
adc
nop
iret
sub
jne
stos
data16
movsl
fisubrl
mov
cld
pop
clc
mov
xor
stc
int3
cmpsb
scas
mov
lahf
xor
sub
test
cwtl
jl
mov
fxch
mov
in
out
lods
in
and
xor
into
lret
cltd
xchg
and
jne
lds
loopne
push
dec
pushf
inc
xchg
ss
fwait
mov
jecxz
daa
mov
lods
mov
jmp
push
mov
mov
xchg
iret
cmp
std
lcall
popf
int3
dec
xchg
inc
mov
rcrl
pop
rorl
push
mov
adc
enter
loopne
pop
loopne
pushf
push
sbb
test
mov
cld
sub
pop
pop
fmul
bound
mov
loopne
and
xchg
pop
and
es
stos
sbb
in
lods
dec
lret
lcall
sub
dec
dec
in
cs
jecxz
jp
lret
ja
or
mov
inc
pop
push
push
and
or
add
add
xor
ficoml
nop
cmp
mov
pop
fdivl
cmc
push
mov
enter
int
cld
repz
dec
lods
lock
out
pop
cmp
add
into
not
jge
clc
mov
mov
mov
jle
pop
fldcw
xchg
inc
mov
sahf
adc
lret
xor
pop
jmp
add
dec
sub
stos
cmp
and
gs
enter
or
xor
jo
pushf
or
aad
lea
mov
pop
pop
add
pop
rcll
ja
stos
jge
push
arpl
lret
push
mov
mov
js
mov
int
add
sub
fmull
cmp
or
push
xor
mov
aad
or
cmp
mov
call
sub
push
cmp
push
pop
mov
inc
xchg
push
xchg
inc
mov
xchg
int3
rolb
xchg
adc
xchg
ret
fldl
mov
add
add
adc
mov
ljmp
inc
jge
std
xchg
stos
jp
mov
fnstenv
cmp
ret
aas
loopne
push
xlat
fistpl
out
aad
jmp
inc
mov
xchg
stos
jnp
mov
or
push
cld
mov
adc
cmpsl
popa
push
aad
mov
lea
in
lds
adc
pop
mov
add
fldl
sbb
mov
inc
pusha
pop
ss
xchg
repz
cmp
addr16
sub
fxch
cld
sub
inc
xchg
imul
imul
adc
sub
aas
hlt
fcoms
stos
add
xor
mov
lds
adc
cmpsb
dec
repz
bound
rclb
iret
test
cmpsl
mov
mov
or
cs
xchg
insb
out
add
jbe
xchg
sahf
repnz
add
inc
aas
lahf
push
jnp
fs
test
mov
fldt
jae
pop
or
rcl
ja
into
xchg
xchg
scas
cwtd
dec
push
call
xor
sub
mov
bound
mov
nop
pop
mov
lea
fldl
xor
das
insl
inc
cmp
pop
add
mov
sarb
scas
scas
test
mov
cmp
cmp
test
fmulp
sarl
stos
xchg
add
fiaddl
jne
and
fcom
daa
stos
mov
and
ss
mov
hlt
adc
jbe
push
mov
mov
cmc
push
dec
inc
fmuls
push
sahf
jmp
jb
sub
sahf
mov
push
imul
pushf
out
es
or
loop
pop
lods
or
jno
push
insb
or
outsl
shll
dec
add
mov
rcrb
mov
sti
fs
pop
pop
cmp
es
mov
adc
fdivrs
add
mov
ret
xchg
outsl
jmp
push
rcl
jae
push
lcall
mov
sbb
push
mov
push
shll
mov
fldt
pop
int3
lret
push
lods
enter
jne
pop
fidivrl
mov
rclb
xchg
leave
mov
movzwl
jmp
bound
lret
cmpsl
cmp
xchg
int3
adc
xor
out
inc
mov
dec
adc
mov
imul
xchg
icebp
xlat
cmp
into
jbe
imul
xchg
out
mov
ja
adc
pop
mov
sahf
sub
shr
jecxz
pop
addr16
stos
lods
aas
sarl
pop
aad
fs
lods
cltd
mov
rclb
into
push
add
mov
mov
arpl
cltd
or
clc
lahf
enter
fsubr
shll
inc
mov
scas
cmp
mov
in
adc
mov
lds
xor
addr16
loope
rcl
andb
mov
fldenv
jne
aam
shll
inc
divl
add
lret
movsb
adc
ljmp
imul
repnz
mov
mov
push
in
dec
or
lods
pop
jle
stc
daa
stc
xchg
xchg
ds
mov
pusha
pop
sbb
cli
or
ja
nop
sbb
sbb
sub
pop
mov
fs
and
aas
cmp
inc
cmpsb
add
xchg
inc
addb
aas
pop
dec
lock
rclb
sahf
sub
lret
jl
movsb
lret
mov
xchg
into
cld
mov
shlb
mov
lret
adc
sbbb
pushf
jmp
inc
dec
sbb
and
pop
cmpsb
daa
or
iret
dec
enter
popa
push
aam
cwtl
and
out
mov
mov
and
leave
lcall
lock
or
xor
jne
mov
popf
in
xor
test
jno
imul
movsl
add
test
xchg
xchg
dec
jae
lds
cmp
mov
cmp
roll
test
andl
fst
roll
stc
addb
sbb
mov
cmp
xlat
pop
je
xchg
shll
imul
mov
mov
shlb
sub
and
test
test
jge
add
mov
lods
xchg
sbb
push
pop
lcall
inc
int3
mov
jge
cmc
jg
cmp
out
in
fisttpl
scas
rclb
rcr
fsubrs
nop
xchg
fs
add
push
sub
pop
cmp
xchg
lcall
daa
imul
sub
roll
lods
push
lods
pop
xlat
mov
xchg
adc
mov
mov
jge
popa
mov
xchg
movsb
mov
test
in
push
pop
shll
sbb
adc
stos
jae
subl
pop
lret
stc
scas
xlat
adc
mov
sti
clc
xchg
gs
pop
pop
roll
fxtract
or
ret
inc
ja
mov
rol
jbe
jae
sub
mov
xchg
addr16
add
or
pop
sbb
hlt
fisubrs
pop
mov
mov
jae
ds
jmp
inc
xor
fidivrs
mov
icebp
lods
xor
jbe
mov
enter
fnstenv
call
paddusw
dec
adc
loope
inc
popa
test
xor
or
loop
icebp
jno,pn
jle
out
int3
sub
push
cwtl
sub
shll
inc
mov
out
mov
out
pop
or
sti
xchg
pop
jno
inc
cmp
dec
lods
adc
sahf
push
cld
mov
jae
xlat
pop
mov
shll
mov
lods
clc
mov
fstpt
cmp
cld
movsl
nop
stc
add
sbb
pop
lods
cmpb
stos
test
outsl
aad
fcomps
push
bound
rclb
ror
mov
cmp
lods
iret
cmpsb
inc
pop
scas
jg
mov
daa
mov
push
dec
mov
call
cmp
gs
lods
xor
outsl
scas
jge
loope
shlb
sub
xchg
mov
stos
mov
jge
pop
cmp
stc
aas
shl
gs
pop
add
enter
dec
mov
cld
imul
fs
scas
cwtl
sbb
aam
sbb
lahf
mov
jns
cltd
insb
ret
xchg
pushf
cmpsl
fdivs
inc
leave
mov
or
push
sub
int
loopne
or
test
jae
push
sbb
sub
push
fisubrl
push
inc
cmpsl
ljmp
test
ss
mov
lea
aam
mov
addr16
sahf
pop
ret
inc
jge
xchg
iret
addr16
sub
shl
aaa
or
pusha
add
into
mov
adc
ljmp
repz
in
scas
pushf
filds
sbb
xor
push
insb
mov
jae
xor
fidivs
hlt
mov
ret
dec
xchg
rorb
add
out
jmp
icebp
adc
insb
sub
jo
out
jmp
cwtl
sub
stos
jecxz
xchg
push
xrelease
adc
push
pop
dec
sbb
jbe
rol
data16
ljmp
fiadds
addl
inc
sti
xchg
jle
shll
lock
cmp
pop
jl
mull
les
jl
cmp
add
into
call
pop
mov
push
sub
aam
setae
sbb
shlb
add
or
inc
mov
inc
jbe
or
mov
ljmp
jle
cltd
pop
std
or
rcl
lods
cmp
gs
nop
pushf
xchg
push
add
insl
sub
sarl
mov
or
jp
xor
xor
mov
hlt
add
sbb
scas
sbb
sbbb
xchg
and
aaa
pop
mov
lahf
mov
push
scas
push
sbb
inc
dec
fcoms
xchg
pusha
pop
fcmovnu
push
jb
sbbl
hlt
mov
push
mov
mov
dec
out
jns
data16
push
or
movsl
dec
mov
mov
nop
pop
mov
pop
shll
out
stos
ljmp
lds
into
pop
ret
cmc
stos
xchg
ret
sub
pop
jg
pop
stc
sahf
mov
adc
add
or
scas
dec
addr16
loop
mov
fists
inc
repz
rcll
adc
shll
xchg
adc
inc
xchg
and
pop
scas
pop
shl
lds
sbbl
es
imul
dec
pop
adc
mov
sub
gs
xchg
jle
inc
clc
leave
call
stos
test
shrl
or
adc
lahf
fnsave
rorb
xchg
fcmovnb
clc
mov
outsl
mov
xchg
xchg
sub
lods
sbb
mov
test
xchg
icebp
sarl
and
lds
ficompl
sub
push
stos
sbb
stc
and
test
push
xor
mov
in
sbb
or
mov
lock
adc
sbb
or
mov
adc
add
jp
das
adc
push
inc
aam
das
xchg
shl
cltd
ficompl
in
mov
xor
fistps
repz
dec
stc
int
dec
inc
mov
ljmp
popf
mov
inc
jne
mov
push
test
sbb
sarl
sbb
scas
ss
pop
mov
daa
jmp
lret
lods
shrl
lea
daa
sbb
fildl
scas
rcll
pop
mov
test
rcl
test
idivl
aas
pop
fldt
into
rol
aad
sub
ret
call
out
pop
addr16
jmp
sbbl
pop
inc
cmc
jne
subb
or
ficomps
mov
xchg
cmp
imulb
cli
xor
adc
pop
cwtl
out
cmpsl
orb
xor
fisubrl
sub
rcr
test
ljmp
rcrb
mov
mov
xchg
inc
jb
popf
leave
or
lret
cmpb
arpl
dec
ds
xchg
dec
int3
scas
pop
addb
sbb
push
call
and
leave
push
inc
loopne
xchg
adc
pop
mov
pop
xchg
cmp
jae
aas
inc
push
xor
daa
pop
pop
shr
add
cmc
dec
lods
sbb
add
adc
adc
mov
mov
clc
and
pushf
or
mov
jp
mov
insl
rorb
mov
mov
decl
jo
mov
sub
mov
jne
mov
fldl
sahf
pop
mov
lods
ds
mov
mov
lds
lret
cmpsl
mov
dec
sub
outsb
call
push
mov
push
icebp
int3
sti
dec
fbld
pusha
mov
mov
int
pop
mov
sub
sbb
dec
mov
adc
popa
push
in
cmp
mov
ja
inc
jg
mov
adc
lcall
xchg
inc
lods
sub
out
dec
cmp
sub
lea
cld
mov
out
aad
daa
inc
pushf
sbb
mov
cltd
push
push
jne
or
sahf
push
imulb
or
lods
mov
adc
enter
ss
pop
and
push
lret
fstps
dec
cwtl
xchg
fdivrl
stc
ret
pop
sub
and
mov
loop
sbb
roll
mov
lods
or
outsb
xchg
dec
sub
pop
mov
sahf
gs
roll
or
out
cmc
call
dec
lret
dec
insb
xchg
mov
scas
sub
out
stc
mov
sti
sbb
push
leave
int
xchg
int
add
add
inc
mov
push
rcrb
mov
ror
jmp
cmp
cmpsl
xor
push
ja
test
imul
and
movsb
rol
mov
or
mov
push
xchg
pop
movsb
jmp
jle
add
fidivs
and
jl
adc
xlat
jle
gs
dec
sar
adc
or
xchg
inc
test
pop
inc
cmc
mov
ffree
lahf
jno
jno
pop
inc
loop
fistps
jle
cmp
jmp
xchg
sarl
aaa
je
mov
rclb
jns
aaa
ficompl
ror
fisubrs
mov
mov
es
sub
pop
sar
and
push
sbb
add
pusha
mov
dec
test
jge
in
or
in
push
aaa
das
lods
sbb
mov
push
pop
mov
insb
fstps
dec
repnz
std
int3
cli
pop
rcrl
cmp
mov
mov
ds
mov
mov
cmc
out
cltd
push
inc
push
lods
jle
daa
ds
rolb
insl
dec
movl
leave
outsb
rol
xchg
call
pop
mov
cmpsl
pop
aas
push
jge
and
movsb
xlat
hlt
ret
iret
andb
sub
ret
scas
fdivrl
xchg
cmp
andb
xor
shll
jmp
lret
mov
mov
and
mov
mov
pop
rcrl
mov
mov
sub
into
jle
dec
fdivs
push
lds
adc
movsb
je
cltd
add
jno
lret
fwait
js
outsb
shlb
inc
daa
xlat
aaa
rcr
xchg
mov
mov
fmuls
push
test
dec
sub
and
cmp
fwait
into
stos
cmp
jne
out
fsubrl
xor
sar
fisubrl
sbb
fisubrl
fcomi
cmpsb
shr
sub
shl
mov
cmp
pop
lock
dec
test
ficoms
push
xchg
vdivss
lret
dec
add
dec
fwait
sahf
push
sub
cmpsb
adc
jmp
sarl
jl
dec
sbb
fiadds
repnz
add
mov
iret
enter
lods
scas
ja
xor
xchg
push
rolb
stc
jg
clc
dec
sbb
clc
fisttpl
sarl
jnp
cli
shrb
pop
mov
jecxz
loope
lret
pop
lods
jo
adcb
movsl
cmpb
sbb
dec
jg
ret
mov
cmpsl
cmp
sbbl
sahf
xchg
mov
fists
cmc
insl
add
mov
mov
rclb
mov
dec
aas
pop
mov
int
jae
ja
out
pop
mov
out
bswap
xchg
mov
fimuls
test
fdivrp
lcall
movb
lea
je
test
cmc
xchg
xor
sbb
mov
btr
jmp
aam
adc
cmpsb
popf
popa
and
mov
mov
push
sbb
mov
xor
jle
add
and
push
inc
inc
insb
xchg
iret
dec
fimuls
movsb
sbb
fmul
add
ss
lret
xchg
aas
mov
dec
fisubs
cwtl
cmpb
fiadds
cmpsl
dec
fcmovne
adc
loop
mov
movnti
stos
pop
arpl
fcoml
cli
test
push
scas
add
add
and
mov
fstpt
add
orb
inc
pop
cmc
jne
cmpsl
pushf
sbb
addr16
rol
jg
adc
ret
lahf
ffree
in
jecxz
repnz
pop
xchg
lret
ficomps
and
xor
icebp
jmp
arpl
push
inc
mov
mov
cmp
sbb
in
sub
js
jecxz
fimuls
sub
mov
mov
dec
pop
jb
add
add
sarl
or
sub
xor
std
fcoml
jmp
call
adc
cs
in
inc
rcr
push
mov
in
inc
scas
lods
nop
dec
add
push
pop
stos
and
xor
scas
and
mov
lds
cmp
jle
fldenv
sub
repnz
stc
mov
clc
and
mov
lea
out
dec
fdivp
jne
shll
inc
rolb
int
std
fidivs
fmull
mov
ret
mov
jnp
dec
jl
enter
les
dec
loope
push
adc
ja
into
test
xor
pop
lahf
int
fisubs
ja
cmpl
push
pop
mov
dec
sbb
adc
push
ss
inc
js
sbb
push
sbb
stc
insb
mov
pusha
and
lea
ja
fsubp
jp
inc
int
mov
adc
mov
xor
cld
lock
sbb
rolb
sub
rcr
and
sbb
jle
pop
test
mov
dec
sub
fcompl
movsb
subl
jle,pt
aad
int
dec
pop
add
lret
ficomps
xor
or
in
mov
test
insl
ljmp
mov
sbb
into
inc
lcall
xchg
cltd
sahf
sbb
fidivrs
push
cmpsl
inc
mov
xor
popf
cltd
xchg
dec
mov
xor
mov
aas
and
enter
mov
pmaxub
and
or
shll
pop
ljmp
cmp
mov
ficoml
call
mov
and
fidivs
adc
ficomps
gs
pop
out
xchg
lods
mov
add
fimuls
jg
decl
into
lock
rclb
fisubrl
lret
and
pop
push
daa
ror
outsl
stc
fidivrs
enter
roll
into
cld
add
mov
lock
jo
mov
mov
fisubs
pushf
push
cmp
add
inc
je
push
add
nop
out
pop
dec
dec
inc
fidivs
push
in
push
ficomps
xchg
repnz
adc
sbb
loop
sbb
pop
ret
andl
sbb
add
fdivp
cmp
adc
gs
lret
pushf
call
adcb
icebp
and
sahf
dec
add
mov
mov
push
lods
sti
movsb
dec
mov
fidivs
sub
rclb
mov
xchg
sbb
into
pop
sbb
jbe
popl
jae
inc
rorb
mov
aad
icebp
fildl
test
jge
cli
iret
push
shrb
xor
cmc
fsubs
ss
neg
loope
mov
push
push
fimuls
inc
or
xor
cmpsl
pop
outsl
repnz
out
lret
cmp
adc
cmpsb
dec
or
rcll
sbb
stc
scas
dec
sahf
ds
ret
xchg
pop
xor
lds
jno
mov
pop
dec
fdivrp
movsl
push
mov
jle
repz
shll
jne
insb
fisubrs
jae
ficoms
sbbb
loope
cmp
pop
sbb
into
testl
into
mov
cmp
or
nopl
movsb
pop
dec
andb
jp
imul
and
leave
and
movsb
test
fstps
je
add
adc
cmp
mov
sbb
out
lcall
mov
sub
jle
scas
mov
fbstp
fidivrs
fdivs
adc
ljmp
xor
xor
fidivrs
dec
daa
loope
push
into
dec
adc
and
jecxz
insl
test
mov
movsb
pusha
sub
ds
add
scas
xor
push
in
inc
mov
fcompp
or
fisttps
cmp
inc
outsl
jl
or
push
and
inc
addb
jle
cwtl
mov
mov
sahf
push
daa
pcmpeqd
lcall
es
jle
mov
xor
pop
cs
int
out
fidivrs
adc
pop
or
fs
outsl
scas
xor
jae
jne
fisubs
xchg
sbb
fimuls
inc
cwtl
fiadds
stc
sarl
fisubrs
and
and
cld
mov
popf
movsb
jne
jp
mov
fcoml
ret
xlat
shlb
into
dec
sbbb
xchg
hlt
mov
xchg
fcmovu
pop
fmulp
jmp
add
mov
and
xor
pop
int
into
cli
popf
xchg
fisubrs
std
jp
push
mov
stc
jno
into
pop
iret
and
xor
sbb
in
sbb
lret
and
ljmp
add
jnp
mov
jl
xor
shlb
das
or
int
sub
je
push
loope
stos
push
mov
mov
imul
push
fiadds
jg
aam
aad
out
push
sbb
mov
xor
stos
fsubr
fcompl
and
gs
dec
mul
fidivs
inc
movsl
mov
stos
fnstsw
call
pushf
lret
jle
inc
rclb
mov
lods
popf
inc
add
mov
pop
inc
shlb
sbb
pop
mov
mov
pop
xchg
ja
std
fisttpl
fcoml
mov
mov
out
inc
fnstsw
iret
fstpl
lods
lcall
mov
aad
lods
ds
lods
pop
pushf
cmp
aad
lods
pop
lcall
pushf
xor
aad
lods
lods
lcall
pushf
or
aad
lods
test
mov
dec
lods
sub
lods
cmpsl
lcall
pushf
pop
pop
out
lods
cmpsb
lcall
pushf
push
pop
in
lds
inc
lods
and
aad
lods
movsb
lcall
pushf
add
jecxz
bound
jnp
cltd
js
aaa
pushf
jne
xor
shrl
dec
lods
mov
lods
add
outsl
cmp
push
aad
lods
icebp
lcall
pushf
inc
pop
movsl
aad
lods
bound
cmp
sbb
aad
lods
repz
pushf
dec
pop
movsl
aad
lods
inc
fdivrl
lcall
pushf
je
mov
mov
outsb
lcall
pushf
sbbl
jg
mov
xor
xor
push
in
jmp
shlb
jno
adc
xchg
cmp
cmp
mov
adc
cmp
iret
push
repz
mov
test
xor
scas
cli
jbe
leave
pusha
jnp
mov
or
fisttpl
push
lock
ret
je
pop
dec
push
test
je
jb
push
mov
dec
sbb
frstor
je
fdivl
rclb
pop
mov
int3
push
xchg
icebp
fdivs
jbe
orl
lret
iret
push
mov
jb
shrb
dec
repz
mov
push
rcll
shrb
or
adc
pop
xor
sbb
xor
jb
cmp
jnp
lock
xchg
mov
mov
xor
push
cli
andl
es
jbe
fwait
inc
aad
xor
push
xchg
adc
movsb
and
mov
cwtl
inc
mov
cmp
stos
ja
jge
cli
leave
in
sbb
stc
jle
push
xor
adc
fwait
xor
add
jb
das
mov
fldcw
inc
mov
inc
xchg
scas
pop
push
push
jb
xor
mov
jg
cmp
add
sub
pushf
pop
push
sbb
and
daa
lock
adc
pop
xor
add
sbb
mov
xchg
les
ljmp
add
cmp
aas
push
fbld
xor
insb
mov
mov
adc
push
pop
mov
push
push
xorl
jne
jbe
pushf
test
push
jo
cmp
sbb
shr
fdiv
xchg
xchg
cmc
jb
jo
stc
fnstenv
cmp
out
das
xor
jb
jbe
lgs
mov
mov
icebp
or
fxtract
adc
push
push
repnz
adc
sbb
hlt
pop
shrl
pop
push
sbb
loope
mov
clc
jnp
jo
addr16
xchg
jne
push
cld
insl
je
das
mov
inc
push
adc
jle
pop
xor
mov
ds
mov
mov
cwtl
movsb
mov
ja
mov
js
shr
dec
into
mov
push
ffree
dec
dec
mov
mov
ficoms
mov
cwtl
js
pop
mov
mov
popa
pusha
sbb
stc
mov
ljmp
mov
and
les
jmp
xlat
leave
test
aam
fstp
and
add
inc
mov
mov
scas
ret
sarb
mov
loop
push
ret
ficoml
mov
popa
jecxz
mov
test
frstor
shlb
add
mov
mov
stos
inc
sub
les
fimuls
rclb
pop
sub
mov
mov
lret
pop
mov
xchg
repz
fidivrl
test
jp
fiaddl
push
js
into
xchg
pop
xlat
dec
out
int3
sbb
lock
xor
xlat
imul
mov
cmp
imul
insb
int3
les
imul
mov
cmp
aam
mov
dec
sbb
ror
in
mov
push
cmp
popf
mov
enter
out
push
mov
jg
pop
inc
and
mov
aam
into
cmp
add
and
mov
jne
mov
int3
popa
inc
mov
aam
sbb
xchg
pop
mov
cmp
aam
jns
dec
add
inc
fsubp
add
mov
sub
rclb
and
dec
lds
ret
in
ret
mov
xor
cld
adc
fistps
and
add
jns
add
in
dec
movsb
add
out
inc
jg
inc
aas
ror
dec
shrb
pop
xchg
xor
lock
aam
xchg
mov
lcall
push
in
jbe
shll
jb
das
mov
fldln2
imul
ret
mov
les
inc
add
lahf
and
pushf
pop
insl
ja
fucom
or
add
cmp
gs
ret
sahf
mov
push
scas
fstp
aad
stos
enter
mov
fmul
push
test
int
into
mov
xchg
sbbb
dec
pop
inc
rcrl
jbe
xlat
mov
mov
push
xor
shl
jp
xlat
cwtl
not
notl
sub
jl
sbb
pushf
jmp
inc
or
mov
xor
gs
sub
xchg
inc
ret
mov
popf
dec
or
mov
mov
aam
pop
xchg
xlat
loope
jb
sub
mov
or
test
enter
push
mov
aad
into
xor
sbb
fdivrs
sub
mov
mov
into
dec
mov
mov
shll
lock
daa
in
mov
jb
adc
ljmp
xor
fdivs
aas
xor
lock
xor
cmp
push
cmc
and
jecxz
enter
dec
and
fs
mov
dec
lea
xchg
cmp
dec
lcall
rcl
mov
mov
leave
dec
jns
mov
flds
mov
sahf
pop
mov
xchg
out
test
pop
insl
jnp
mov
sahf
sbb
in
fnstsw
push
outsl
aad
mov
insl
push
inc
das
mov
dec
sbb
insb
cmp
lods
test
es
outsl
ret
nop
xor
push
and
popf
fldcw
popa
test
jl
mov
rclb
mov
mov
enter
add
fimuls
insl
push
pop
fst
fdivs
mov
gs
dec
std
mov
mov
int3
mov
scas
pop
pop
les
cmpsl
jle
js
sub
jle
in
inc
push
cmp
stos
fcomp
insl
aad
cmp
and
mov
fdivr
cltd
push
test
std
adc
pop
aam
push
fldcw
fidivrl
xchg
data16
pop
sarl
int3
mov
dec
xchg
sub
xchg
sbb
inc
fsub
push
jl
rorb
sti
xor
movsl
push
dec
pop
js
mov
sbb
in
daa
fnstcw
ret
popa
jnp,pt
push
cs
xchg
cwtl
pop
xlat
mov
mov
vorps
pop
push
icebp
leave
out
mov
loope
mov
jge
frstor
jl
jl
xchg
jbe
faddl
data16
lcall
pop
popa
inc
sti
mov
ja
pop
outsl
add
mov
pop
rcrl
xchg
and
mov
pop
pop
mov
daa
popa
lret
mov
pop
mov
inc
call
add
adc
and
xor
mov
sbb
in
sbb
cmp
fstpt
lods
arpl
mov
xchg
aas
dec
mov
push
cmp
leave
add
outsb
sbb
stos
sbb
dec
fnstcw
xchg
push
cli
roll
push
popa
aaa
movsl
mov
stc
fwait
pushf
push
fadds
mov
jmp
nop
pushf
aas
sbb
movsb
cli
mov
adc
mov
pushf
mov
jl
mov
jns
jb
fstl
xor
arpl
sbb
rcl
sbb
jbe
mov
sahf
xor
mov
inc
jl
int
cmp
jg
pop
fdivl
pop
fwait
mov
cmc
pop
enter
repz
fldenv
cmc
jle
xor
cmp
mov
into
cmp
mov
outsl
insl
and
mov
xor
cmp
inc
bound
aad
lret
in
ljmp
pop
lcall
fstpl
push
jle
mov
xor
jne
mov
xchg
push
scas
inc
jne
mov
adc
dec
sbb
lock
sub
jbe
je
xchg
fwait
pushf
data16
inc
cltd
mov
jb
les
lret
xchg
push
sbb
adc
fdivrp
mov
push
loop
dec
xor
push
mov
jne
sbb
mov
inc
test
sub
dec
xlat
mov
mov
sub
mov
lock
adc
in
mov
faddl
push
mov
gs
ret
ja
push
rcrb
or
jle
fsubrl
sbb
data16
pusha
xor
pusha
iret
pusha
punpcklbw
pusha
mov
sbb
fiadds
std
or
loopne
gs
sbb
daa
imul
push
in
popa
push
xlat
dec
mov
iret
push
js
push
testl
dec
add
jmp
nop
push
leave
fs
lds
inc
push
sbb
in
cmpsb
inc
mov
movsb
xor
push
ficoml
enter
pop
cmpsl
pop
push
addl
xlat
les
dec
and
xchg
xchg
mov
in
pop
repz
out
add
js
xchg
sbb
or
cmp
sti
fists
dec
stos
arpl
in
lock
sbb
notb
movsb
inc
mov
fcomip
cmp
xor
push
mov
inc
jmp
lret
mov
cld
adc
xor
jne
add
pop
fwait
pop
pusha
push
push
mov
stc
push
jle
sahf
fcoms
fwait
iret
lcall
setbe
xchg
sete
xchg
setb
xchg
seto
jle
jnp
lsl
add
add
add
call
mov
enter
std
imul
cmc
xorb
sbb
mov
cmc
testl
movsb
cwtl
mov
aam
adc
push
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
mov
fwait
movsb
fisubl
repz
xor
lret
lahf
inc
lahf
inc
lahf
add
or
prefetch
or
jg
fcoml
insb
into
push
mov
aaa
pop
mov
xor
mov
rolb
mov
add
and
sti
mov
rclb
inc
js
insl
add
and
pop
aam
mov
jo
stos
or
sbb
ljmp
icebp
cmc
shl
into
in
int
or
loope
loope
loope
loope
loope
loope
loope
mov
dec
movsb
aam
push
mov
dec
lahf
dec
lahf
inc
lahf
bound
push
mov
or
shld
movsb
pop
push
cmp
xchg
cmp
or
sbb
inc
cli
inc
ljmp
shr
ljmp
cmc
pushl
mov
lods
mov
lds
nop
pop
push
xor
into
dec
lret
ja
push
xor
xor
insl
icebp
test
cli
ret
in
cmp
xchg
stc
adc
in
dec
jmp
and
mov
cli
movsb
hlt
mov
out
je
aas
rcrb
jno
insb
mov
jle
mov
push
cmp
in
dec
insl
ja
cwtl
jbe
dec
cmp
mov
enter
addr16
loop
inc
ljmp
push
pop
xor
xchg
pop
mov
in
in
imul
in
in
in
in
data16
mov
push
adc
adc
pusha
sub
pusha
daa
pusha
add
fidivrl
mov
inc
adc
xor
mov
stc
add
scas
mov
cmc
push
icebp
jne
lret
jmp
jnp
stc
movsl
sbb
mov
setg
pop
inc
stos
aas
sub
out
aas
movsl
aas
and
loop
push
mov
jnp
pop
ja
push
pop
aaa
push
pop
adc
notb
testb
and
shl
sbb
fmuls
push
hlt
push
in
das
in
in
movsl
stos
stc
lcall
shlb
movsb
fstps
xchg
inc
xchg
mov
xchg
aas
xchg
aas
nop
aas
aas
mov
lea
jns
jbe
mov
aad
xor
pop
stc
movsl
pop
movsb
push
ret
jmp
and
test
lds
cli
push
pop
adc
mov
mov
shl
push
test
dec
lret
ljmp
dec
mov
hlt
dec
imul
jmp
leave
hlt
dec
mov
imul
pop
sbb
mov
js
arpl
sahf
shll
cmp
sbb
pop
inc
stos
jae
jp
mov
dec
fdivl
mov
xor
cli
mov
lret
xor
lods
sbb
movsb
int3
push
xor
std
lods
aad
ret
sub
fiaddl
das
cmpsb
das
popf
into
aas
ds
push
outsb
jnp
out
out
dec
int
insl
cmp
adc
fistpll
pusha
dec
adc
popa
or
lea
push
pushf
enter
roll
aas
testl
nop
andb
lret
lods
fstpl
sbb
jmp
aam
sahf
icebp
mov
pop
mov
fwait
inc
popf
loop
hlt
push
xchg
inc
clc
cmpsb
das
icebp
push
popf
bswap
sub
std
roll
fiadds
sti
popa
inc
push
xor
rclb
jb
dec
sub
adc
notl
fstl
std
faddp
mov
pop
pop
rol
cli
or
inc
cld
xchg
test
data16
aad
rcr
aam
push
sbb
fcmovnb
lea
rcr
fiadds
jle
ret
mov
mov
mov
shl
les
stos
lret
sbb
lret
jle
or
push
divb
xor
fldl
adc
mov
mov
fdivp
xor
je
sarl
aam
daa
nop
cld
stos
sbb
sub
lcall
mov
std
mov
pop
cmovo
dec
pop
iret
aam
sbb
cwtl
nop
pop
into
fisubrl
pop
loopne
fdivp
xchg
adc
push
lret
stos
pop
mov
xchg
daa
push
xor
sar
pop
cmp
rcl
and
inc
sahf
mov
pop
inc
or
cmc
inc
jp
lods
vmptrst
dec
inc
enter
ret
pop
dec
into
lcall
fmulp
inc
dec
nop
lret
popf
inc
inc
addr16
test
sahf
add
push
pop
pop
sub
cld
out
push
push
fsubrs
xlat
pushl
popa
xchg
pop
dec
stos
pop
int3
push
fcomp
dec
nop
int
dec
fisubrs
rclb
inc
addr16
lock
mov
push
jns
jnp
push
faddp
or
lods
fstpl
outsb
push
dec
jl
cli
std
fdivp
repnz
push
popa
aam
insl
cmp
cmp
inc
jae
std
fcompl
push
int3
xlat
jb
jle
test
ficomps
sub
sbb
jge
popf
fnstsw
into
pop
push
xor
fidivrs
les
lock
lods
fimuls
sub
push
aas
mov
fiadds
loopne
sbb
push
inc
je
icebp
adc
mov
faddp
adc
into
pop
insl
dec
cmp
ret
dec
xchg
mov
or
xchg
ficomps
pop
imul
cltd
inc
sub
cli
sub
adc
ret
cld
enter
in
adc
negl
pop
xchg
fisubs
jl
loopne
mov
and
setne
cmp
fimuls
xorl
repz
sbb
aas
into
lods
std
sub
inc
js
xchg
push
jbe
xchg
fistpl
in
xchg
xchg
mov
test
pop
clc
jle
fsubrp
ja
xor
ficomps
int3
pop
test
fstp
lret
mov
ficomps
push
popf
ja
xor
fdivp
cmc
mov
mov
idivl
rolb
les
sbb
mov
lret
cltd
xor
repnz
xlat
sub
faddp
and
in
xor
add
std
into
cmpsb
dec
ret
push
and
cwtl
push
pop
jle
pop
fidivs
lahf
mov
test
nop
adc
xchg
int
or
enter
ffree
pop
sbb
pop
cmp
mov
push
mov
push
lea
cld
popf
dec
mov
fwait
jle
or
aaa
push
add
pop
lret
sbb
ficomps
pop
lods
jecxz
adc
mov
fisubrs
jne
pushf
fisubs
cmp
cmp
insb
mov
addr16
fstpl
cs
shl
pop
out
faddl
test
inc
lods
insl
mov
in
or
pop
mov
popa
pop
pop
fmulp
xor
or
push
fimuls
sahf
jo
xchg
mov
insb
adc
mov
ret
mov
rcl
jnp
faddp
inc
xchg
dec
roll
std
mov
xchg
push
into
mov
push
aam
arpl
pop
adc
ficoms
push
pop
xor
dec
mov
aas
in
fstl
aam
cli
pop
xor
mov
xor
cli
scas
loope
inc
xchg
inc
insl
fidivs
sub
dec
cs
mov
aad
xchg
ljmp
enter
mov
fdivrl
push
adcb
pop
stos
push
fmulp
cli
popa
jno
insl
imul
mov
push
movsl
push
nop
fcmovb
add
pop
mov
fnsave
out
adc
sarl
popa
std
sub
mov
dec
fnstcw
sahf
int
cmp
imul
in
enter
stc
fimuls
jnp
and
push
fidivs
xor
dec
std
test
push
fwait
in
neg
out
cmp
cmc
push
lret
add
frstpm(287
mov
rol
pop
stc
sub
xor
std
pushf
mov
pop
rorb
and
pop
orb
fsubrl
popf
mov
fcom
and
cmp
icebp
jle
sbb
ss
cli
fdivl
sub
js
stos
lcall
test
cli
shr
mov
into
ljmp
pop
das
lods
push
jge
cld
out
jnp
sub
and
fmulp
sbbl
push
popf
sbb
and
push
into
xchg
mov
cli
fidivs
daa
dec
jle
loop
sbb
pop
rol
fcmovbe
gs
pushf
out
jg
ljmp
ficomps
jne
ficoms
inc
mov
push
negb
ja
jg
into
ja
cli
pop
out
pop
dec
pop
gs
loop
add
mov
outsb
int
repnz
push
jne
cmp
xchg
ffree
ret
stos
std
cmc
movsb
lock
pop
ret
aad
fidivs
clc
xor
mov
outsl
aas
fidivs
push
cmp
faddp
lcall
cli
pop
fdivs
fwait
push
pop
shrb
jg
push
rcrl
sub
in
loope
sbb
cmp
sbb
aad
sbbl
cld
pushf
or
jecxz
aam
adc
enter
mov
and
imul
fisttpll
js
adc
or
cld
ljmp
gs
rolb
push
test
fsubl
push
dec
fisubl
fiadds
pop
cmc
inc
pop
push
fldcw
mov
jbe
lds
popa
sbb
test
fiadds
xor
fisubs
push
andb
shll
cld
cmp
xlat
ret
mov
scas
jge
or
push
mov
push
outsb
lahf
std
or
movsl
lret
xor
int
js
mov
faddp
and
jge
push
mov
xchg
adc
mov
jns
dec
shrb
sarl
sbb
xchg
inc
divl
addr16
stc
arpl
sub
sarb
or
popa
adc
mov
push
mov
xchg
arpl
fistl
jo
flds
jo
fadds
push
cwtl
fiadds
lods
outsl
lcall
jnp
cmp
mov
inc
popf
jl
mov
jbe
pop
xlat
dec
aam
mov
fcoml
clc
lods
rcrl
dec
repnz
xchg
cld
pop
cmp
ficompl
dec
xchg
das
movsb
fisubrs
ss
jg
xlat
aaa
mov
in
dec
aas
and
fidivs
shlb
push
mov
push
xor
cwtl
fimuls
mov
sub
shll
lcall
outsl
fidivs
lret
divb
ret
test
or
xor
cld
dec
sar
test
ljmp
ss
inc
add
pop
push
dec
push
fimuls
insb
cmp
adc
in
mov
jnp
dec
in
and
nop
int
or
cmp
arpl
insb
cmp
sbb
es
inc
xchg
popf
cmp
inc
inc
xor
in
aam
rcl
punpckhdq
jle
cmp
jg
sbb
fwait
jns
lcall
out
pop
stos
arpl
sarb
mov
xchg
xor
mov
hlt
icebp
popf
mov
mov
fidivs
xor
test
xchg
pop
pop
lret
inc
popa
mov
insl
cmp
pop
pop
lods
pushf
push
fisubrs
insl
fdivl
in
into
dec
popa
mov
std
xchg
inc
les
movsl
lods
cli
push
mov
sahf
jbe
xchg
jle
pop
inc
jl
cmp
pushf
test
rolb
mov
jg
pop
ss
enter
insl
xchg
xchg
shrb
pop
imulb
cmpb
fmull
in
sahf
icebp
std
xchg
fmulp
lods
movsb
roll
fcomps
dec
cld
aam
movsl
sahf
aad
sub
popf
sar
ds
out
push
les
lret
sbb
jl
ficoms
out
sti
mov
cmp
pop
iret
sahf
push
cmpsb
adc
xchg
dec
sbb
out
ficomps
sti
mov
adc
jle
outsb
fidivrl
jmp
je
into
sbb
aam
lahf
push
push
dec
and
fcmovu
subl
enter
mov
sub
add
out
sti
fnstsw
dec
ficomps
pop
ss
cmpb
rcr
jle
add
fidivrs
add
jg
mov
adc
jge
mov
out
enter
leave
sahf
xor
fstpt
sarl
decl
xor
cld
jle
outsb
jp
mov
fiadds
js
sahf
cld
fcmovnbe
jmp
in
adc
std
push
in
fcmove
push
ret
ficoms
pushf
sbb
xchg
fsubrp
loopne
shlb
popa
nop
in
mov
mov
ficoms
rcrl
nop
cld
loop
inc
mov
idivb
mov
pop
mov
mov
ret
repz
pop
cwtl
push
daa
mov
in
fmulp
add
adc
sub
shrl
inc
mov
lret
pop
fwait
mov
fisubs
push
les
mov
fisubrs
rcrl
pop
rcrl
scas
pop
stos
ja
adc
adc
or
jbe
sbb
pop
clc
shlb
xor
in
dec
outsb
push
pop
mov
cmp
adc
test
aaa
inc
call
pop
pop
push
ficomps
push
pop
dec
cmp
lret
fstpt
fisubrs
cli
rol
ficomps
aaa
jae
fisubrs
cmc
mov
mov
pop
outsb
lds
lods
xchg
mov
out
xlat
sbb
pushf
sbb
shlb
fsubrp
dec
aas
ror
or
mov
mov
mov
outsl
ret
cltd
jo
push
ret
mov
mov
jle
jge
jne
std
pop
sahf
push
push
push
sti
fidivs
xor
push
aas
add
ljmp
das
pop
pop
outsb
fmulp
xor
repnz
xchg
fdivrp
cmpsl
inc
xchg
jbe
cmp
ds
into
arpl
inc
jg
repz
dec
xchg
mov
fidivrs
pop
sub
shlw
mov
sarb
popf
stos
fs
jmp
fidivrs
inc
jl
xchg
outsb
xchg
mov
jge
insl
sahf
sbb
loopne
lret
mov
aad
stos
aaa
mov
fmulp
adc
or
inc
clc
jle
lods
ret
lcall
push
xchg
ficoms
fimuls
fwait
sar
ficoms
iret
and
ficomps
loopne
push
fisubrs
add
insb
cmp
xchg
fdivp
popf
push
adc
dec
jnp
ljmp
jg
xchg
cli
cmp
cmp
or
cmpb
mov
pop
fidivs
jg
out
pop
popa
in
data16
add
lret
mov
rcrl
rcr
fcos
dec
pop
xchg
shll
sub
pcmpgtb
mov
es
fnstenv
sub
pop
dec
fs
mov
addr16
rcrl
cmp
mov
stos
enter
dec
add
or
rol
inc
faddp
sub
push
fimuls
jmp
int3
inc
pop
ss
sbb
mov
xlat
jp
jg
mov
data16
add
fidivrs
aad
popf
cmp
addr16
shrl
sbb
in
push
ds
and
sub
add
lret
xor
roll
fsubrl
sub
pop
shlb
ficomps
sbb
fidivs
and
mov
lock
or
mov
pop
sbb
xchg
lcall
popf
shr
dec
mov
cli
cmp
aas
fisttpll
fs
push
jle
sbb
or
cld
aad
add
jb
cwtl
pop
leave
mov
jo
sbb
sbb
and
fmulp
jne
push
mov
push
jae
mov
movsl
sbb
push
xchg
push
mov
sbb
pop
inc
fnsave
pop
std
mov
arpl
pusha
out
mov
mov
aaa
outsl
leave
rcr
add
call
jp
fidivrl
cmp
add
xchg
ds
push
mov
aaa
pop
push
xchg
mov
jle
add
mov
fimuls
and
cli
xchg
sbb
out
roll
push
popf
push
icebp
ficomps
mov
scas
cmp
movb
rcr
pushf
pop
imull
les
inc
lock
sbb
dec
ficomps
or
jge
adc
fnstsw
adc
pop
scas
push
shll
mov
xchg
addr16
into
fstpl
pop
mov
or
xor
fimuls
push
push
out
mov
fimuls
mov
inc
sbb
pop
into
dec
leave
rolb
neg
ljmp
fcoms
scas
jle
fcompl
jle
rcll
enter
daa
lret
fisubrs
sbb
ret
int3
faddl
jns
shll
dec
ja
dec
mov
fiadds
jo
test
insl
fwait
add
push
pop
add
int
mov
ds
push
std
shll
and
mov
fidivrs
and
addr16
lods
rcll
out
mov
jns
dec
shl
iret
ja
or
or
mov
fldt
cltd
or
int3
lock
push
sbb
dec
ficoms
sbb
mov
dec
fidivrl
sbb
cmp
popf
es
xchg
mov
vmovd
enter
fimull
inc
fidivrs
dec
and
sbb
pop
div
fisubs
or
mov
pushf
ja
stc
sbb
xchg
mov
pop
fsubp
sbb
push
cmp
xchg
sahf
lea
popaw
cmp
addw
pop
pop
movsl
sbb
ss
stos
jl
sahf
ret
ficomps
outsb
pop
lret
jp
test
push
xchg
lods
mov
fidivrs
enter
popa
aaa
cmpsb
fiadds
sbb
pop
movsl
xor
ds
xchg
or
xchg
out
lods
push
pushf
aad
gs
lods
adc
cmpsl
cwtl
into
mov
roll
sbb
lods
fdivp
std
mov
iret
add
adc
push
ret
cs
movsbl
mov
les
pop
fiadds
sbb
ret
jp
push
ds
jmp
push
cs
fisubrs
lods
adc
mov
rclb
movsb
add
adc
push
into
frstor
or
test
fstpt
pop
mov
add
mov
push
push
lret
dec
mov
fdivs
popa
pop
test
xchg
rcr
xor
cltd
les
push
cwtl
inc
loope
addr16
mov
jb
stc
sbb
lock
lret
mov
adc
xor
rcr
jl
or
int3
clc
popa
push
cld
into
ficomps
out
cmc
dec
lea
jp
fdivs
shrl
sbbb
out
push
pop
fidivrs
test
rcll
jle
lods
dec
push
in
shrb
jecxz
or
mov
pop
jl
fdivrp
cmpsb
lahf
sahf
iret
cltd
fisubs
inc
outsb
mov
dec
mov
mov
mov
mov
cmpsl
push
mov
fidivs
inc
gs
mov
imul
xchg
lds
sub
mov
sbb
push
ficoml
mov
mov
inc
dec
cld
iret
mov
outsb
sahf
popa
loop
and
ljmp
push
pop
faddl
es
pop
xchg
push
or
cld
jns
jle
pop
xchg
test
dec
xchg
fidivrl
jns
adc
sbb
hlt
sti
push
sbb
sahf
fadds
jecxz
scas
inc
aam
int
inc
pop
lcall
jo
lea
ljmp
incb
ss
nop
inc
sub
ficomps
and
xchg
fidivrs
adc
loope
add
and
pop
adcl
mov
cmp
test
cmp
sub
pop
testl
lods
adc
push
outsb
jge
sbb
xor
lods
jecxz
call
enter
jle
popa
loope
dec
fsubp
and
mov
adc
imulb
push
pop
pop
cmp
arpl
sarb
pop
call
pop
daa
push
in
lcall
scas
pop
fidivs
sti
icebp
mov
push
adc
repnz
std
int
push
cmpsb
ret
pop
mov
mov
mov
mov
repnz
pop
scas
sbb
cmc
fidivs
arpl
inc
pop
pop
sahf
pop
lea
mov
push
mov
sbb
fidivrs
repnz
pop
mov
jle
jg
fadds
push
mov
aad
jbe
scas
mov
cmp
fidivrs
mov
lret
sub
mov
ret
xor
pop
add
and
inc
das
push
popa
arpl
fcomps
ret
movd
mov
fidivrs
and
movsl
dec
out
das
cld
push
jns
push
loop
mov
aad
adc
fdivrl
mov
movsl
fsubp
jns
adc
and
rcr
sahf
mov
cwtl
fidivs
aas
fnstenv
popf
stc
mov
add
outsb
mov
pop
sbb
or
mov
divb
dec
aam
std
fiadds
test
sub
inc
cld
out
pop
aam
ficomps
sbb
inc
pop
fimull
aas
jge
movl
dec
int3
and
in
inc
shrb
fnstsw
mov
cmp
fwait
test
fisubs
sbb
dec
fidivs
mov
loopne
adc
fisubrs
cld
lock
xor
fidivrs
pop
push
cmp
mov
ficoms
push
repz
ss
push
xchg
jle
nop
push
dec
test
rcl
out
mov
jae
push
aam
xor
cmp
sahf
arpl
fisubs
mov
pop
std
mov
cld
mov
data16
aaa
fdiv
das
jns
adc
pop
jg
sbb
mov
dec
sti
mov
aaa
inc
jge
mov
push
lods
out
mov
pop
push
cmp
std
je,pn
ret
movsl
mov
fidivrs
mov
pushl
pop
popf
popa
xor
cld
pop
or
es
sub
lret
pop
cmp
add
test
sbb
xchg
jns
int3
frndint
popf
pushf
xchg
sbbb
data16
fiadds
jae
out
test
into
loope
xchg
in
cld
pop
jl,pn
icebp
scas
xlat
mov
ret
fcmovnu
inc
aad
ds
adc
rcr
int
cmp
pop
mov
fiadds
lcall
std
mov
or
rol
scas
mov
add
push
lds
pop
sti
sahf
adc
out
fisubl
and
pop
movsb
fisubs
lods
iret
cli
imul
aad
lret
jge
mov
test
cmp
inc
xlat
mov
jbe
frstor
pop
aaa
cmc
rclb
into
aad
fidivs
movl
mov
arpl
and
cmpsb
clc
out
aam
das
pop
fisubrs
inc
sbb
js
daa
cld
popf
adc
lret
insl
lock
mov
cmc
and
outsb
rclw
jbe
sti
bound
push
jae
int
jl
mov
inc
ficomps
mov
jle
jnp
pop
mov
mov
cli
and
and
mov
push
stos
push
push
movsb
xor
xlat
sbb
shll
ds
stos
test
popf
or
xchg
inc
outsb
pop
pop
pop
iret
push
cmp
shll
nop
jmp
fstpt
mov
leave
cmp
push
faddp
repz
ficoms
pop
cmp
pushf
fisubrl
push
loop
mov
cltd
movsl
in
int3
int
xor
sahf
cmp
negl
adc
fdivr
enter
push
ficoms
or
repz
cmp
insl
fcompp
xchg
in
popa
sbb
pop
aad
inc
cli
ror
mov
or
outsb
sar
nop
sbb
fdivrs
cltd
xchg
std
mov
rcrb
push
mov
std
push
pop
popa
xchg
pop
fdivl
clc
divb
sbb
cltd
jle
movsl
sbb
and
js
mov
xchg
sbb
add
pop
sbb
andb
jecxz
xor
out
fdivp
lret
fistpll
fidivs
lret
fisubrl
cmp
fistpl
loop
push
fidivs
cmp
sub
mov
fidivs
mov
jbe
fistl
icebp
fs
jg
fidivs
add
push
cmc
pop
cmp
dec
xor
call
imul
inc
dec
std
adc
jg
ljmp
jle
aam
popf
mov
enter
enter
ss
mov
stos
fidivrs
jb
dec
xor
in
push
cmp
fisubrs
pop
push
push
mov
mov
jle
xlat
lret
fcmovu
repnz
fnsave
out
push
aaa
sbb
pop
jno
push
mov
adc
sbb
outsl
fiadds
ret
test
add
fidivs
sbb
xchg
and
fisubs
mov
push
sti
stos
inc
jge
jmp
in
repnz
out
push
cmc
popf
fdivrs
mov
jge
ja
fimuls
fwait
push
xor
mov
repnz
shrb
jne
mov
fmul
repz
push
subl
dec
popf
pusha
cmp
mov
xlat
lcall
fadd
gs
mov
mov
out
sahf
insl
push
fiadds
hlt
cmp
es
pusha
xchg
popf
pop
ficomps
push
ss
cmp
mov
das
insb
mov
cld
aad
aas
or
das
dec
sbb
pop
scas
mov
sahf
xor
pop
jle
mov
mov
cld
xchg
jl
dec
fisubrs
push
pop
in
jle
cmp
mov
sbb
adc
mov
inc
addr16
xchg
rcrb
ficoms
test
insl
cmp
pushf
data16
dec
stos
lret
fsubrp
sbb
xchg
movsb
cmpsb
fmulp
pop
push
push
fldenv
pop
inc
ret
jle
negb
mov
sbb
dec
fdivrp
fwait
lea
pop
mov
rcrl
xor
add
fidivrs
push
fists
ret
mov
xchg
fcmovnb
dec
pop
sbb
or
pop
movsl
inc
es
pop
rcrb
adc
rcr
xchg
fs
leave
outsb
adc
jge
pop
aad
js
fidivrs
inc
sbb
fimuls
aas
and
arpl
add
cmp
rcll
pop
pushw
push
cli
and
dec
mov
push
sar
les
dec
les
xchg
lahf
pop
add
push
mov
dec
pop
fcom
jg
fisubrs
xchg
sbb
pop
adc
cld
or
cs
test
fidivs
pop
jp
xor
xchg
fisubrs
mov
pop
mov
xor
sbb
out
jbe
sahf
xor
adcb
sarl
js
inc
mov
sbb
jae
mov
mov
jno
mov
in
ficomps
adc
rcl
ljmp
jle
xchg
fucomp
push
pushf
ret
dec
divb
fwait
dec
mov
aam
push
mov
faddl
inc
ficomps
xchg
lea
movsb
imul
mov
mov
cs
fsubp
repnz
fadd
sbb
aam
xchg
mov
jb
out
jae
adc
push
add
jl
fadd
xchg
jle
sbb
mov
pop
adc
jecxz
mov
ss
out
fwait
aam
rclb
jp
ror
rcl
icebp
inc
fidivs
push
adc
in
popf
dec
pop
push
rolb
mov
fmulp
adc
cvtps2pd
outsb
or
fimuls
imul
in
sahf
imul
arpl
dec
imul
xor
pusha
fdivrp
std
jecxz
inc
in
xchg
std
mov
bound
ret
fiadds
xor
dec
ficoms
pop
xchg
rcl
ficoml
pushf
stos
shlb
idivb
aam
cltd
scas
inc
push
int3
mov
push
mov
repnz
fimuls
fcom
popa
aas
sub
scas
pushf
pop
lret
das
stc
fsts
orb
xchg
into
in
dec
xchg
insb
es
cld
and
shll
fisubs
pop
mov
fisubs
je
adc
std
fimuls
cmp
or
pop
das
iret
sahf
mov
pop
aas
test
pop
mov
popf
xor
mov
push
sahf
fdivrp
jge
jle
sbb
popa
rcl
ret
xchg
mov
mov
fadds
adc
ja
xchg
sahf
popf
mov
jbe
sbb
xlat
pop
frstor
rorl
jle
xchg
mov
xchg
rcll
lods
jbe
clc
orb
mov
rcr
mov
mov
jae
ficomps
aas
push
xchg
pop
fidivrs
lods
fs
lret
into
sbbb
aad
push
fidivrs
fwait
xchg
popa
sahf
rcr
sbb
mov
in
add
inc
dec
loope
dec
in
cmpsl
ficomps
push
jp
sbb
popa
fidivrs
jne
popa
sbb
cmpsl
or
push
insl
push
dec
fcmovnu
adc
pop
mov
int3
iret
jne
mov
sub
and
lods
shrl
jle
pop
dec
inc
ret
icebp
sahf
cmovb
idivb
xlat
dec
jmp
push
pop
lret
fdiv
jp
outsb
iret
lret
cli
ja
xchg
cltd
loope
fidivrs
loopne
test
cmp
jle
sarb
adc
popa
leave
mov
fidivrs
mov
dec
int3
sbb
sbbb
hlt
rcrb
aas
pop
cmp
cmp
fxch
dec
fmulp
xor
nop
fiadds
mov
jo
xlat
sbb
aad
into
pop
mov
popf
mov
jle
sub
in
pop
lret
fsubp
push
fidivrs
mov
fsubrl
add
inc
mov
push
add
xor
rcll
dec
jmp
ja
and
imull
mov
pop
jle
cwtl
out
stos
jmp
pop
cmp
cmp
ret
cmp
popa
ficomps
mov
sbb
ret
inc
xor
lea
shlb
test
push
das
xchg
ficoms
and
push
cs
pusha
ss
cmp
sub
leave
mov
pop
sbb
sti
ret
into
inc
xchg
mov
test
cmp
ficompl
fisubrs
sub
dec
aad
adc
ds
mov
push
sbb
shrl
faddp
mov
sub
loop
cltd
sbb
das
enter
inc
mov
or
outsb
cmp
mov
mov
ljmp
sahf
in
jle
mov
push
int
shrl
fiadds
dec
int3
xlat
out
fdivp
mov
out
jle
push
icebp
stos
adc
mov
stos
jle
inc
jb
rcll
push
pop
lods
jmp
into
fcomps
fmulp
or
shr
push
fidivrs
adc
repz
xor
sbb
je
add
sbb
scas
cmp
mov
jmp
fcmovu
lret
int
mov
cwtl
lret
mov
stos
ficomps
xchg
aas
rorb
pop
mov
rol
pop
clc
ds
fstp
inc
je
std
orb
aaa
dec
mov
lret
fimuls
ja
daa
sub
dec
data16
mov
mov
lcall
cltd
sub
cmp
push
rorl
cli
adc
in
pop
jnp
dec
cmp
outsb
inc
int
push
or
fidivrs
mov
sbb
pop
fdivp
icebp
lahf
les
fidivrs
mov
pop
scas
xchg
scas
jge
fwait
cmp
fimuls
jl
les
rcrl
mov
ficomps
mov
mov
test
mov
fisubrs
push
xchg
es
outsb
adc
fidivrs
cld
mov
insl
xor
sbb
aad
or
mov
inc
cmp
aaa
cmpsl
lret
data16
inc
inc
push
fsubs
mov
adc
stc
in
int3
ror
lret
mov
shll
inc
ljmp
mov
addb
pop
inc
rorb
cmc
outsb
sub
mov
rcll
push
or
push
lods
lds
inc
xlat
nop
pop
mov
pop
pop
lcall
lds
fistl
ret
in
js
jns
sbbb
mov
mov
loope
xchg
in
dec
mov
cmp
or
xchg
push
xchg
push
push
fadds
in
cld
addr16
jae
adc
faddp
pop
pop
test
std
fsubp
insb
dec
dec
xchg
out
dec
cmp
jle
mov
mov
rcr
pop
test
xlat
cmp
pop
fiadds
dec
cmc
dec
xchg
cmp
leave
lock
ljmp
decl
cli
pop
movsl
jnp
test
pop
xchg
scas
call
jb
cmp
fisubs
sub
and
lods
ficomps
push
out
cmp
xchg
je
jo
fidivs
repnz
jb
dec
mov
mov
fimuls
dec
int3
repnz
daa
fidivrs
adc
mov
cwtl
fildl
adc
outsb
test
cmpsl
out
cmp
sbb
sub
test
fimuls
lea
lahf
cmpsl
repz
mov
out
jo
sbbb
and
push
leave
test
in
sahf
jbe
jle
aas
lock
iret
pop
jge
mov
jne
jnp
ret
pop
fcmovb
sbb
sahf
loopne
aas
fstps
outsl
xchg
stos
xor
ficoms
out
adc
shll
add
scas
adcb
xor
sbb
faddp
sahf
mov
push
pop
mov
into
ja
mov
mov
pop
and
ret
adc
push
pop
xchg
das
aas
sbb
jbe
xchg
fidivrs
xor
shll
cmp
xchg
add
pop
lret
faddp
xor
dec
push
mov
mov
xor
ficomps
xchg
xchg
and
ficomps
lcall
sbb
mov
movsb
shlb
xor
aad
cld
int
ret
xchg
push
sahf
dec
adc
popf
dec
or
xor
inc
cltd
aam
clc
xor
mov
push
sub
hlt
mov
fidivs
xlat
aam
std
pop
fsubrp
xchg
bound
push
rcrl
fsub
ret
dec
sbb
lds
aad
cmp
mov
xchg
fnstcw
jle
cltd
mov
sbb
scas
sbb
out
dec
cld
lds
pop
xor
into
cmp
dec
cli
mov
dec
add
cmpb
push
jne
ret
pop
jbe
add
mov
mov
sbb
sub
mov
push
aam
sbb
mov
pushf
pop
mov
sbb
scas
add
data16
or
pop
jne
xchg
push
and
dec
adc
ss
add
minps
mov
outsl
add
dec
inc
lcall
add
ss
cld
jnp
fimuls
sbb
outsb
iret
fidivs
cmc
cli
sub
jle
pop
popf
dec
popa
push
sti
fidivrs
jp
cs
fcomps
addr16
ret
fisubrs
inc
jg
fmulp
call
and
lods
aas
data16
cld
dec
pop
fistpl
fiadds
lret
fidivrs
cmc
push
or
movsl
push
fistpl
xchg
xor
and
lea
outsb
fmulp
and
aaa
lcall
imul
adc
enter
ficoms
fdivl
mov
sbbl
sub
pop
sarb
adc
ficomps
inc
xchg
loope
psadbw
lret
movsbl
push
nop
xlat
jbe
pop
inc
adc
fsubrl
mov
xchg
add
outsb
mov
lds
push
inc
ficomps
xor
mov
data16
jno
dec
push
jle
test
pop
mov
fcoms
cmp
cld
cltd
in
out
fdivrs
outsl
lret
stos
jb
pop
sub
ficoml
ficoml
and
pop
push
fcmovnu
push
sarb
lock
inc
sub
pop
ss
fnsave
jne
es
lds
fidivrs
fbld
stos
xor
lea
sbb
popa
mov
mov
ss
xlat
jl
pop
fs
fsts
es
push
call
out
out
pop
mov
cwtl
pop
ficomps
mov
ljmp
fisubrs
jmp
insb
clc
mov
jle
mov
faddp
add
and
dec
or
sbb
xchg
ret
imul
inc
fnsave
push
faddp
adc
mov
sbb
push
add
pop
std
test
sbb
or
fdivrp
jo
xchg
and
rcl
subb
jbe
fidivrl
cmp
ret
dec
push
ret
outsb
xchg
shll
shll
nop
push
adc
push
pop
fidivrs
out
jnp
push
sbb
ja
adc
adc
cmp
xor
test
ficomps
fimuls
sub
add
fdivp
lds
push
ficomps
sahf
push
mov
adc
in
fnstsw
imul
negb
outsb
xor
sbb
int3
cwtl
push
test
xchg
flds
popa
cmp
outsb
dec
ret
jnp
lods
stc
mov
fmulp
sub
xchg
push
mov
ljmp
mov
outsl
roll
ficomps
insl
lea
pop
pop
in
sarb
sbb
sub
inc
enter
rcr
aad
imul
clc
xchg
sub
pop
cmp
rclb
ret
mov
adc
in
mov
mov
mov
std
adc
jb
popf
aam
add
stos
faddp
lret
add
ja
pop
fimuls
add
rorl
shrl
imul
mov
pop
inc
fdivrp
orb
xchg
xor
jle
iret
xor
lea
out
push
fiadds
dec
lods
pop
push
pop
lcall
cmc
mov
inc
roll
mov
fisubs
cmpsl
cli
inc
cmp
push
fiadds
and
out
data16
xchg
xchg
stc
mov
jle
sub
mov
sbb
push
mov
shr
push
repz
cmc
cwtl
les
gs
cmp
push
pop
iret
shll
xlat
mov
push
pop
enter
pop
cld
push
fnstcw
into
fcompl
push
dec
sti
roll
out
push
pop
pop
cmp
mov
aam
out
ficoms
fcomps
filds
xchg
mov
ffree
iret
sbb
gs
sbb
ljmp
mov
and
loop
mov
and
mov
nop
sti
lock
fcmovne
xchg
xor
push
daa
icebp
fisubrl
cmp
leave
mov
fsub
clc
mov
xchg
das
mov
daa
shr
sti
push
fidivs
fcmovnb
inc
ja
into
lods
mov
add
dec
int3
xlat
cmpsl
push
mov
sub
icebp
std
popa
call
ficoms
sahf
leave
push
enter
pusha
ficoms
mov
jle
imul
xor
out
repnz
iret
mov
test
jo
ret
cli
ds
mov
pop
mov
push
pop
test
insb
push
mov
out
xchg
sahf
mov
stos
push
cmp
les
cmpsb
sub
dec
addb
sbb
shlb
clc
int
pmaxub
pushf
gs
mov
test
push
rorb
cltd
arpl
fs
cmp
lds
popl
fstp
stc
push
daa
ficomps
dec
into
ret
rcr
not
negb
mov
pop
jl
sahf
mov
int3
pushf
pop
mov
mov
aaa
aam
addr16
mull
outsl
cmp
fcom
or
sti
jge
lret
sub
cld
jle
rorb
mov
jno
lret
ficomps
loope
dec
push
sbb
mov
call
rolb
nop
fidivs
out
xor
push
fdiv
adc
adc
sti
ficomps
xchg
add
pop
xchg
std
cmp
pop
shlb
ficoms
xlat
xor
popf
lock
fwait
push
les
xchg
out
mov
adc
jo
xchg
in
sbb
jbe
jle
push
rcrl
out
jle
sbb
mov
inc
add
or
movsl
ret
mov
pushf
cmp
mov
icebp
je
jg
sub
aad
lock
pop
shll
push
mov
cli
adc
mov
les
in
dec
mov
js
adc
sub
mov
cli
iret
jbe
test
shrl
std
jo
int3
lcall
mov
ljmp
rcrb
test
out
xchg
and
popf
pop
out
ret
xchg
mov
mov
jle
pop
adc
push
enter
fidivs
xchg
lock
ficoms
add
stos
shll
icebp
popf
jmp
fimuls
xchg
sbb
xor
jle
adc
xchg
sub
lret
xor
or
add
push
ret
or
lea
sub
mov
out
orb
pop
adc
push
aad
and
cmp
push
cmp
sub
cmp
inc
movsb
xchg
push
and
push
ss
add
mov
xlat
pop
sub
xchg
mov
jp
push
insb
je
into
dec
ficoms
inc
divb
cltd
ror
std
pushf
dec
popf
xchg
lods
in
xchg
inc
mov
loopne
aad
xor
mov
xor
les
sbb
xlat
in
fcompl
loope
mov
push
outsb
les
xchg
mov
mov
pop
in
adc
shlb
into
cmp
adc
mov
or
lds
fidivs
lds
sbb
pop
out
xchg
fidivrs
mov
into
adc
int
jge
pop
adc
mov
mov
jo
ja
sbb
neg
pop
mov
dec
cwtl
mov
pop
jp
enter
stos
dec
pop
mov
mov
xchg
int
mov
fidivrs
xor
mov
adc
and
and
inc
pop
sub
mov
cmp
mov
fbstp
fidivs
push
inc
cld
sahf
fcomp
nop
popf
push
pushf
adc
cltd
dec
cwtl
seta
xchg
push
xchg
bound
orb
mov
pusha
add
pusha
add
pusha
add
lods
sub
fisubrl
sbbb
mov
mov
dec
nop
add
fisubrs
cmp
push
ljmp
in
in
jmp
inc
in
loope
loope
loope
sbbb
stc
fwait
cmc
fidivl
icebp
cmp
jmp
jno
xor
push
or
pusha
inc
pusha
add
popf
push
mov
cwtl
stos
xchg
mov
jg
test
adc
in
jle
fidivs
push
push
std
in
ret
pusha
loop
add
iret
mov
push
or
in
push
js
xlat
ret
test
mov
mov
jo
stos
mov
pop
ret
into
jmp
icebp
or
cld
int
cmpsl
in
jmp
or
mov
cmpb
cld
push
push
bound
dec
xchg
inc
out
push
rolb
sar
xchg
lret
push
movsl
sub
xchg
xchg
push
ja
pop
xor
insb
inc
push
push
add
lret
adc
data16
fsubrs
push
lds
xor
ror
mov
aas
stos
into
adc
test
add
negb
adc
mov
mov
push
mov
int
cli
out
push
push
out
jmp
ror
movsl
insb
inc
pop
cmp
jl
lret
rcl
and
push
push
iret
aaa
into
sbb
xchg
sbb
mov
adc
mov
enter
data16
test
pusha
loop
inc
mov
data16
insb
xchg
mov
pop
imul
inc
mov
fiadds
push
sti
adc
mov
adc
loope
outsl
push
push
cmp
enter
or
or
pop
rcr
mov
das
rcll
lret
enter
aas
jnp
fidivs
push
xchg
aaa
mov
pop
xchg
imul
adc
int
dec
inc
ljmp
iret
movsl
dec
and
loop
shrb
pop
cmc
sbb
pop
les
jmp
loope
adc
cld
fs
and
roll
movsl
fsubs
push
mov
lods
movsl
jmp
stos
pop
sbb
adc
sahf
mov
cld
xchg
fidivrs
fstps
xchg
ljmp
push
xchg
aaa
xchg
sbb
hlt
mov
in
lahf
rorl
filds
and
push
mov
or
pop
ja
repnz
inc
pop
jl
cmc
in
mov
std
mov
movsl
pop
mov
sarb
dec
mov
cmovle
int
dec
or
fimuls
inc
imulb
rclb
aam
insb
jl
mov
cmp
or
lret
sbb
xlat
adc
xchg
cmpsb
fisubrs
xchg
xchg
mov
fsubrl
dec
outsb
mov
leave
add
push
fidivrs
fildl
jg
fisubs
inc
pop
cld
ffree
int
call
mov
jne
lcall
push
std
push
sub
jbe
icebp
sarw
aam
lds
or
adc
mov
pop
aaa
inc
xlat
fiadds
pop
ficoms
xchg
outsb
stc
fimuls
test
and
push
fnstsw
in
mov
mov
mov
aad
inc
lret
shlb
cmp
cmp
and
mov
aad
std
daa
pop
loopne
js
xlat
fnstsw
rclb
add
sbb
outsb
adcb
lret
movsl
xor
sub
rclb
xor
ficomps
ret
aaa
xlat
pop
fldcw
stos
fidivrs
orb
jbe
mov
pushf
cmpsb
inc
mov
scas
imul
push
mov
fpatan
out
jns
dec
fisubs
cmp
adc
mov
dec
inc
push
mov
or
inc
push
cmp
mov
pop
leave
jo
aam
pop
mov
cltd
push
fadd
jns
push
add
mov
call
xor
sbb
mov
sahf
or
pop
shrl
pop
test
xor
mov
dec
fisubs
int3
stos
les
and
lret
and
mov
lods
dec
pop
push
pushf
xor
fidivrl
stos
mov
xor
inc
sahf
pop
scas
mov
arpl
inc
imul
pop
leave
jle
mov
or
clc
lock
pop
loopne
gs
sbb
out
mov
je
outsb
fdiv
adc
in
adc
ss
xchg
nop
cmp
mov
mov
clc
inc
jg
mov
and
fidivl
cmc
int
adc
jo
ja
pop
rcll
add
push
fimull
clc
mov
mov
jp
pop
dec
je
xchg
leave
jl
aad
mov
ret
push
mov
testb
push
cld
cld
loopne
js
adc
push
je
jecxz
inc
pushf
add
pop
xchg
shlb
pop
xchg
sub
out
inc
mov
xor
cli
dec
or
push
aad
test
add
mov
out
push
mov
pop
pop
cwtl
test
mov
dec
push
push
ss
cmp
push
jo
xlat
jmp
scas
add
ss
jp
into
adc
imul
lds
cli
push
pop
out
cltd
push
sbb
mov
imul
aas
gs
sub
inc
xor
jnp
das
xor
adc
jo
mov
mov
push
test
push
xor
test
movsb
pop
mov
push
mov
jmp
jno
arpl
daa
and
cmc
xchg
insb
jg
cli
out
lock
mov
jl
inc
incb
adc
mov
testb
loop
aas
std
mov
jne
fidivl
out
inc
stos
rcrw
mov
loope
repz
aad
sbb
and
mov
fcmovnu
test
xchg
insl
into
adc
aad
sahf
push
lcall
sub
stos
or
aaa
jmp
int
mov
cltd
sub
ljmp
iret
sub
das
jmp
sub
into
jno
into
jle
into
jns
scas
and
ficompl
fidivrl
fiadds
dec
add
mov
je
pop
lods
jle
ss
ret
shrl
pop
cld
sub
movsb
mov
inc
mov
inc
aaa
push
scas
xchg
out
les
mov
push
fsubl
xorb
push
mov
je
push
mov
jbe
test
jb
xor
loopne
jb
jne
lahf
inc
rcl
xchg
clc
push
adc
sbb
jns
sbb
icebp
cmp
loopne
pop
jl
mov
scas
jl
xchg
inc
jo
sub
mov
push
out
adc
fdivrl
in
rolb
repnz
xchg
mov
mov
jge
inc
pop
mov
ficompl
testb
or
jb
leave
xchg
dec
je
jecxz
enter
push
fmull
cltd
mov
push
lock
pop
xor
fiadds
cmpsl
inc
and
movsl
inc
test
inc
sbbl
and
mov
or
lock
movsl
andl
inc
jecxz
mov
pushf
out
and
add
mov
and
into
popf
addb
aas
jo
push
mov
sahf
test
mov
aam
repnz
mov
mov
xchg
add
in
add
daa
out
jno
add
jg
popa
sub
test
dec
popf
cld
test
test
dec
rcr
xchg
stos
push
push
or
fstl
jbe
fnstenv
or
test
push
inc
ret
lds
cmpsl
ret
mov
int
cwtl
xchg
lds
jle
movsl
mov
enter
fsubp
and
add
xchg
sbb
in
inc
rorb
add
xchg
inc
stos
cs
ja
inc
mov
mov
mov
rcrb
mov
ror
shlb
les
ja
mov
mov
inc
add
cwtl
call
fcomps
sahf
daa
pop
xchg
out
xchg
fisttpll
mov
pop
popf
mull
inc
pop
inc
pop
pop
xchg
sub
dec
repnz
mov
movb
inc
cmpsb
inc
movsl
add
push
dec
fldcw
or
int3
adc
pop
loop
xchg
push
xchg
aad
mov
rorl
cmp
adc
push
dec
fistl
test
faddl
loop
test
cmpsb
inc
clc
pop
movsl
test
addr16
test
mov
rolb
add
out
out
fmull
lret
loop
test
in
stos
push
inc
adcl
daa
stos
enter
rol
test
aad
mov
pop
scas
lds
xchg
inc
jg
ret
pop
les
mov
sub
inc
mov
stos
dec
fisubl
cli
movsb
les
inc
dec
pop
nop
inc
mov
sbb
pushf
fcmovnu
cmp
push
enter
adc
fcmove
or
pop
push
cmp
cwtl
adc
out
add
pop
rclb
popf
notl
fidivl
push
pop
jbe
aam
mov
cmpsb
xchg
fwait
add
mov
lret
test
push
sbb
cmp
rclb
repnz
adc
fidivl
cmp
cmp
jae
sbb
pushf
push
mov
mov
xor
mov
out
into
xchg
clc
pop
movsb
fnstsw
inc
hlt
nop
in
sub
fldcw
gs
push
or
inc
xor
fcmovu
sarl
pop
lock
sbb
push
setb
lcall
mov
call
jbe
push
adcl
stos
aaa
mov
sbb
filds
adcb
hlt
adc
repnz
sub
pop
rcll
push
sbb
ss
mov
mov
jbe
push
xchg
pop
xor
jns
sbb
mov
pusha
es
pop
outsl
pop
fsubl
dec
xchg
push
mov
xchg
stos
dec
jbe
enter
cs
mov
mov
xchg
sahf
imull
in
insb
mov
sbb
out
stc
cmp
jp
fsubrs
push
push
pop
ffreep
adc
cmpsb
lds
aas
stc
mov
int
xchg
cs
xor
call
push
fcmovnbe
cltd
pop
std
mov
fnsave
mov
rcl
fsubrl
pushf
dec
cmp
sbb
in
pop
int
mov
lods
xor
in
pop
outsb
rorl
in
negb
cs
int3
jae
pop
sub
xor
in
repnz
xchg
jge
inc
sub
pop
mov
fcom
push
sarb
outsl
mov
cvtdq2ps
out
aad
inc
mov
inc
dec
and
sbb
inc
nop
and
popf
out
out
and
int3
jno
sti
jae
inc
iret
out
andl
xchg
repz
popa
xor
mov
push
cld
jbe
xchg
dec
out
into
addr16
mov
mov
data16
sbb
jmp
pop
jl
pushf
mov
pop
pop
aad
lods
mov
fsts
push
lods
int
scas
pop
pmullw
push
aam
lods
push
pushf
mov
push
or
lods
lret
push
insb
outsl
lods
pushf
scas
pop
iret
aad
lods
rcrb
lods
mov
lcall
push
pop
jl
subb
lods
or
lods
push
lcall
fcompl
ret
sar
dec
ret
adc
pop
or
sahf
pop
std
pop
pop
push
pop
fstpl
mov
ss
aas
int
pop
fnsave
sbb
mov
fdiv
mov
popa
fimull
ficoml
mov
jb
and
fisubrl
fisubrl
fcmovbe
jnp
stc
pop
fidivrl
push
inc
push
sbb
cli
mov
ficompl
mov
int
jp
mov
sahf
pop
cmp
push
sbbl
mov
jns
lds
fstl
cmp
push
sbb
fdivr
mov
xlat
mov
sub
pop
adc
pop
repnz
aaa
in
fstpl
sub
stos
fldcw
add
hlt
sub
dec
scas
push
mov
sbb
rcrl
ja
hlt
daa
mov
dec
mov
cmc
mov
mov
fnstsw
sahf
fst
mov
pop
adc
push
push
cltd
inc
ret
test
daa
sbb
test
es
imul
jns
mov
pop
lea
fistps
xchg
mov
mov
mov
incl
test
or
test
stos
pop
pop
and
pop
sbb
mov
xchg
into
mov
or
loope
cmpsl
sub
pop
das
mov
leave
adc
mov
rorl
jecxz
and
pop
inc
lods
loop
imul
and
rcrb
test
dec
in
inc
dec
pusha
je
loopne
daa
inc
out
sub
pop
mov
add
div
shl
js
and
cltd
lods
std
pop
jle
and
sub
lods
decb
int3
daa
inc
fs
das
sbb
test
es
mov
pushf
rcrl
pop
dec
sbb
cltd
sbbb
sbb
fwait
xchg
cmpsb
sbbb
aad
lods
lret
mov
sub
int
insl
test
in
xchg
addr16
sub
mov
xchg
hlt
je
fisubrl
out
cmpsl
push
dec
xchg
xor
pop
fdivrl
mov
add
jbe
int
or
xchg
fmull
pushf
lea
jecxz
jbe
movsl
xlat
push
je
in
out
aad
call
dec
rorl
in
cmpsb
mov
jg
mov
insb
test
insb
orps
ds
enter
jecxz
clc
idiv
cmpl
jo
lods
sbb
mov
movsb
stos
dec
fadds
in
pushf
fisubl
repz
rorl
mov
mov
fdivrs
xchg
popf
mov
push
mov
pop
jge
xchg
mov
mov
mov
int
push
cmc
ds
loopne
pop
adc
ret
push
movsb
and
cmp
mov
arpl
xchg
pop
out
lods
mov
pusha
in
popa
cld
ret
test
pop
jb
in
enter
lret
and
inc
or
repz
mov
roll
and
lea
adc
inc
inc
pop
and
sti
test
push
addb
pop
rcl
lods
int
js
push
call
ja
mov
pop
out
repz
js
aad
leave
adcl
dec
out
jecxz
cmp
inc
testl
lods
pslld
mov
test
ffree
jmp
sbb
or
sbb
inc
xchg
jae
out
cwtl
and
leave
aas
xchg
roll
jne
fwait
pop
test
cmpsb
loopne
pop
inc
ficoml
fnsave
xchg
pop
xchg
mov
push
scas
mov
dec
hlt
xchg
jns
inc
aad
or
or
mov
pop
xchg
mov
fsubrl
lock
xchg
lret
cmpsl
sub
hlt
sub
xchg
ja
lds
jecxz
test
pop
lds
test
test
sub
ja
lods
add
aam
cmpsb
xchg
xchg
pop
adc
and
adc
jne
xchg
push
fdivr
xchg
sbb
leave
jmp
pop
push
push
loope
addr16
adc
pop
das
mov
push
mov
jmp
js
fdivrs
rolb
and
sbb
pop
je
add
pop
cmp
inc
fisttpl
xlat
push
shll
mov
fisubs
popa
clc
in
jns
shll
subl
aas
jecxz
sub
ret
sub
stos
jmp
push
inc
in
loop
rcrl
cmpb
subl
pusha
pop
icebp
hlt
push
add
in
loope
test
movl
mov
dec
sbb
or
push
pop
pop
sub
push
lahf
popa
fdivrl
iret
andl
jb
lahf
addr16
divl
mov
push
lahf
in
retw
jp
test
repnz
test
fstpt
scas
mov
insl
das
xchg
in
nop
pop
into
nop
jbe
jl
add
je
push
jo
bswap
daa
repz
idiv
adc
xlat
adc
mov
cmpsl
add
pop
stos
dec
add
xor
xchg
xor
jbe
jg
fmull
decl
xlat
das
aad
dec
xor
or
in
jecxz
hlt
pushf
and
mov
inc
and
inc
jmp
and
lahf
scas
cmp
outsl
mov
ror
mov
into
cmpsl
subb
fists
pop
out
sub
add
nop
push
das
adc
leavew
ja
testb
pushf
daa
or
in
es
out
outsb
mov
out
popa
test
shll
mov
sbbl
xor
xor
insb
mov
mov
test
int
xchg
out
jecxz
inc
int
mov
push
cmp
cmp
ret
cmpsb
movsb
popf
mov
and
cmpsb
jecxz
dec
mov
cmp
dec
sub
xchg
out
jmp
xlat
fstp
addr16
mov
test
and
push
pop
cltd
test
xchg
daa
ljmp
shl
mov
in
testl
repz
clc
pop
mov
stos
lds
push
std
in
inc
ja
test
aas
leave
sbb
cmp
and
or
dec
out
inc
dec
cmpsb
daa
pop
sbb
cmp
push
stos
xchg
mov
or
adc
add
pop
inc
cmp
mov
mov
pop
sub
ss
aad
dec
aad
mov
add
inc
mov
fildl
inc
sub
iret
and
std
add
loope
mov
xor
scas
out
mov
gs
call
aam
push
pop
mov
arpl
jo
sbb
add
fistpl
dec
mov
not
fdivrl
cmp
inc
js
fisttpl
xchg
mov
adc
lea
xchg
dec
inc
sub
lcall
push
sbb
lea
pop
xchg
xchg
pop
sub
into
movsb
les
lcall
jp
in
mov
xor
popf
popf
mov
push
inc
and
addr16
cwtl
jmp
mov
fstps
sahf
cmp
pop
scas
mov
add
jmp
repz
adc
hlt
shl
mov
push
jle
cmp
add
ret
mov
movsb
out
scas
pusha
pop
out
xchg
pop
xchg
sbb
mov
mov
daa
cmpsb
out
cwtl
mov
les
sbb
cmp
add
les
mov
push
ret
pushf
aaa
out
mov
pop
or
pop
and
adc
xchg
fildll
test
f2xm1
mov
daa
movsl
add
test
pop
push
cmp
mov
mov
cld
fldcw
scas
sub
and
out
sub
adc
insb
push
mov
xchg
cmpsl
push
inc
push
fs
mov
test
popf
cmpsl
and
cld
movsl
mov
sub
sub
and
fcmovb
mov
test
call
mov
xor
cwtl
shll
int
mov
push
pop
mov
into
mov
jmp
xchg
ret
pop
sbb
sbb
fld
mov
js
and
mov
lds
ret
pop
fmul
mov
shl
sahf
mov
into
jb
fcmovnb
aas
cld
fstpl
push
dec
test
pop
push
out
add
scas
push
faddl
into
fstp
and
fidivrl
jb
rcl
lret
call
in
push
cmp
fistpl
xor
mov
adc
pop
mov
fdivrl
mov
aam
sarl
or
sahf
dec
scas
jle
rcl
mov
int
mov
pop
aad
lahf
cld
pushf
ret
dec
pop
dec
pop
mov
pop
cmp
xchg
fistpl
addr16
fsubs
rcl
popf
sahf
dec
xlat
push
aam
and
adc
fcmovnb
cmp
push
dec
in
lods
lcall
rcrb
cwtl
fcomps
add
mov
mov
pop
lret
fistl
fmul
jno
fidivrl
frstor
mov
loope
jnp
ret
or
push
aam
cld
insl
faddl
mov
icebp
into
mov
mov
pop
push
fcmovbe
cmpsl
jns
add
ds
mov
pop
in
cmp
test
jbe
stos
fidivrl
js
mov
ret
mov
xor
lcall
pop
ret
ror
push
mov
lret
int3
fadd
cmp
out
lret
xlat
test
push
jo
mov
fmul
cli
pushf
mov
lret
fldl
push
popf
std
fistl
sarb
int
lods
pop
sbbb
enter
enter
xchg
scas
sahf
inc
fcoml
ficoml
fwait
mov
mov
mov
jae
cmp
dec
ja
mov
lret
mov
daa
xlat
lods
xchg
aad
mov
int
mov
fstpt
inc
int3
repz
les
shlb
sarb
insb
ficomps
in
lods
shl
mov
shrb
fidivrs
add
fdivrs
lcall
sahf
jp
pop
in
int3
adc
push
rcrb
mov
jne
pmaxub
fisttpl
ret
cmc
inc
fdivs
shl
dec
je
aad
sahf
or
out
xchg
fst
pop
sbb
push
mov
jno
inc
outsb
stos
aam
rclb
jp
sahf
inc
mov
sub
lods
lret
lret
rol
cmp
mov
mov
lcall
xor
dec
mov
lret
adc
int
stos
aam
into
adc
inc
fcomps
in
dec
icebp
fnstsw
adc
lods
jmp
loope
xchg
push
cli
mov
stos
lds
into
cli
ffree
lea
fsubrs
pushl
mov
inc
int3
lret
fucomp
lret
push
std
dec
rorb
push
test
in
cld
dec
fmull
fidivrs
mov
les
dec
aam
mov
cmp
sarl
rorb
into
insb
dec
mov
dec
pop
shrl
ror
jns
lods
ret
adc
enter
ror
or
adc
fmul
xchg
jle
test
stos
jp
inc
arpl
sub
out
ficomps
cltd
into
dec
cmp
ljmp
mov
fmull
fsubp
push
jns
sub
sarl
enter
enter
testb
into
dec
push
enter
mov
lahf
sarb
enter
int3
sub
enter
mov
les
shrl
mov
push
push
sbb
cmp
sti
fimull
xlat
push
aam
dec
ffree
ud1
sub
rcl
test
rcl
in
es
test
ret
into
jl
sbb
test
out
dec
or
xlat
or
cwtl
xlat
aam
mov
rcrb
je
rorl
pop
aad
inc
aam
jo
ret
push
jge
rol
ljmp
fiaddl
mov
iret
fsubrs
lret
jmp
loope
mov
cmp
rcr
mov
std
cmpsb
aam
lock
fcmovnb
add
pop
jge
mov
fxch
fildl
fs
push
mov
cli
es
dec
cmp
dec
mov
aad
lods
jb
lds
xchg
pop
dec
or
pop
shrl
adc
mov
das
out
dec
mov
rorb
dec
ret
mov
mov
mov
cmp
push
adc
push
sti
push
addr16
mov
mov
fsubrs
inc
ror
sbb
aas
cwtl
xchg
leave
fldl
flds
fstp
ja
xor
rol
and
cmp
dec
fcoml
pop
sarb
and
jle,pt
das
decb
enter
std
test
xchg
inc
repz
mov
lea
push
pop
lahf
sahf
push
std
rcl
rclb
xchg
repz
mov
push
push
mov
shlb
inc
fistpll
xor
pop
fst
mov
into
mov
xchg
cwtl
aad
cmp
aam
out
jo
cmc
dec
movsl
insb
les
movsl
ret
lds
fdivrl
mov
movsl
push
ret
lret
mov
test
lock
les
mov
mov
scas
and
movsl
mov
sbb
adc
mov
icebp
fists
pop
aam
dec
pop
push
mov
loop
xchg
imul
fs
clc
sahf
in
add
test
dec
js
inc
fst
mov
xchg
fdivrs
adc
jl
dec
dec
xchg
fst
jne
xlat
xchg
adc
mov
push
aad
lret
sahf
cmp
pop
rclb
sti
cmc
mov
xchg
cmp
adc
push
in
lods
pop
fadd
sarl
inc
jle
scas
pop
icebp
ss
mov
xchg
cmp
sahf
add
sahf
mov
int3
imul
sahf
push
lret
jmp
mov
hlt
int3
fdivs
inc
lea
fs
fmuls
ret
push
leave
pop
rclb
adc
je
add
int3
mov
add
sahf
cmp
enter
jno
cli
fisubs
mov
xchg
mov
dec
sbb
sbb
fidivs
repz
insl
fisubrl
xor
jb
jae
rcl
shl
ficompl
les
enter
leave
ja
mov
cmc
les
cmp
into
jmp
sub
leave
enter
mov
rclb
push
pushf
aam
sahf
ja
fmul
xchg
shll
int
or
push
ret
int
ret
loope
xchg
fisubl
sarl
aaa
mov
mov
mov
mov
sub
es
nop
fistpl
pop
pop
fcmovnb
push
or
fisttpl
pop
jbe
mov
cwtl
pop
pop
lcall
movb
sahf
push
jp
in
rcl
daa
in
inc
jg
xchg
sahf
inc
insl
push
adc
pop
loope
ret
shl
lods
outsb
cs
fsubl
fldcw
and
les
frstor
dec
jle
ror
jg
pop
xor
lret
stos
mov
jnp
int3
lcall
mov
pop
dec
fstp
xchg
fdecstp
and
push
aad
iret
addr16
aam
fdivrs
inc
into
in
mov
push
scas
cs
fst
push
jp
js
sarb
hlt
jle
mov
ret
jle
aad
push
outsl
xchg
les
fcmovu
leave
enter
leave
jle
pop
shrb
jle
mov
rcll
enter
fisubrs
inc
call
enter
iret
fmuls
jo
test
pop
dec
fcomps
sub
fistl
adc
fsincos
sbb
daa
imul
into
and
mov
aaa
aad
ret
xlat
mov
mov
fcomps
jge
pop
fiaddl
fs
faddp
fdivs
or
enter
xlat
jae
lret
into
cld
insl
aam
jb
lret
int
xchg
mov
mov
aad
rcr
sub
fidivl
cs
lret
adc
fidivrl
repz
cmp
ffree
cld
pop
xor
cmp
ja
filds
rcrb
cmp
iret
movsl
push
dec
fdivrl
jg
cmpb
dec
int3
jp
pop
and
mov
jns
xchg
aas
fidivl
into
rcr
out
nop
jbe
xor
pop
or
adc
fistpl
mov
xchg
adc
lods
inc
fidivl
xlat
mov
sub
lcall
lods
adc
hlt
xor
aad
ss
sbb
outsl
ss
pop
test
dec
mov
mov
sbb
aad
lret
insl
dec
nop
les
ss
test
roll
mov
push
push
or
xchg
mov
jp
hlt
lock
jb
xor
int3
xor
xchg
jb
divl
enter
lea
negb
mov
std
dec
push
in
imul
cld
adc
sbbb
in
scas
jmp
mov
mov
movsb
ret
cmpsl
lock
lods
and
sbb
adc
sub
jmp
mov
cwtl
inc
test
lret
out
or
push
pop
dec
mulb
stc
test
cmpsb
adc
jb
iret
sarb
mov
cmpsb
jns
iret
shlb
ja
jl
outsl
mov
xchg
lcall
push
xor
les
nop
xor
ffree
das
dec
mov
xor
dec
fcmovbe
fcmovnbe
in
or
movsb
shlb
lcall
sahf
pop
lds
fcmovb
xorb
out
int
mov
sti
ret
out
cli
xlat
fisubrl
sub
ret
pop
adc
fmul
out
stc
mov
xlat
xchg
sub
int
fsubrl
xchg
int3
pop
movsb
rol
dec
mov
cmp
int3
rorb
mov
xchg
add
into
or
push
push
int3
mov
insl
popf
mov
mov
int3
movsl
aad
jne
cmp
insl
fisubrl
rcr
mov
ffree
mov
xchg
mov
xchg
mov
fldcw
mov
inc
jbe
mov
mov
int3
push
dec
cwtl
fmul
lods
jle
push
jp
test
sarl
into
mov
js
push
jp
pop
inc
sbb
iret
int
imul
ljmp
enter
dec
rcl
iret
adc
rolb
cld
into
push
xchg
adc
cmp
pop
mov
int
cmp
and
jle
push
es
mov
pushf
mov
push
fcmovb
cmc
mov
fstps
aad
lods
lcall
push
sub
push
pop
movsl
mov
cwtl
xlat
mov
jns
pop
ret
fcomps
sbb
js
lods
ja
pop
pop
cmp
enter
stc
sub
inc
cmp
sbb
lods
negl
sahf
insb
pop
test
sub
mov
jle
pop
mov
mov
mov
lods
mov
aad
int3
into
xchg
into
mov
es
je
xchg
jne
mov
push
lcall
aas
jo
rcr
out
ss
pand
cmpsb
pop
mov
push
xchg
sub
push
sti
push
test
pop
psrlq
fdivrl
pop
call
arpl
fmull
cmp
arpl
pop
out
or
dec
xor
insb
pop
loop
sbb
shl
mov
test
push
mov
xor
rorb
les
out
cld
mov
mov
outsl
push
mov
fidivs
imul
rcrb
aas
jle
js
pusha
cld
in
dec
enter
push
inc
dec
outsb
jbe
jo
ds
out
fcmovb
into
pop
pop
inc
pop
fiadds
bound
loopne
fsubp
lret
aam
push
dec
ficoms
jb
je
lock
pop
inc
pop
fiadds
gs
std
in
int
iret
dec
push
dec
ficoms
jne
outsl
in
cmc
out
out
fld
fcmovnb
pop
inc
pop
fiadds
jnp
stc
loope
fsubp
leave
ror
rorl
dec
ficoms
imul
jmp
repz
xchg
fdivrp
mov
and
xchg
mov
xsaveopt
daa
fisubrs
lcall
fiadds
mov
and
fisubs
mov
or
adc
xor
fidivs
popf
test
fiadds
mov
es
and
push
or
adc
ss
xor
add
add
mov
cmp
and
xchg
mov
adc
mov
mov
xor
xor
jae
xlat
inc
fisubrs
divb
aaa
stc
adc
inc
mov
dec
or
push
int
or
dec
xchg
jge
fidivs
cmp
sti
mov
mov
rcl
dec
shlb
sub
into
jle
add
push
leave
lods
xchg
sahf
in
pop
pop
sahf
aam
loop
sbb
adc
out
int
rcll
sahf
ret
pop
rcll
enter
mov
inc
jbe
clc
lock
aas
xlat
add
nop
sub
xchg
jae
fmul
fadds
cltd
stos
mov
pop
fcom
cmc
push
xchg
cltd
push
psubusw
pop
rcr
mov
jae
lret
fs
lds
fisttpll
push
daa
scas
xchg
js
rcrb
into
push
aas
push
jg
aam
lea
mov
test
cmp
out
test
lret
fstps
aad
fildl
insb
or
fsts
jno
mov
adc
push
es
mov
subl
imul
cmp
xor
fistpl
int3
int3
push
ds
push
mov
mov
lods
aad
in
dec
mov
adc
adc
cmc
aad
xchg
icebp
cwtl
inc
lret
ljmp
push
scas
ret
fmull
fnstcw
mov
loop
push
popf
ret
push
push
lcall
ret
jo
rcr
ficoml
ficompl
leave
test
fidivl
fdivs
mov
or
xchg
lds
mov
sbb
push
mov
fists
outsl
or
loope
push
mov
jne
pushf
ret
int
sub
jp
sbb
test
xor
xor
flds
pop
xchg
aam
push
jno
sbb
inc
mov
mov
lods
dec
lcall
add
mov
mov
daa
lcall
mov
int
lods
mov
nop
imulb
mov
out
mov
add
scas
lcall
leave
lcall
mov
pop
stos
shlb
int
inc
into
push
pushf
popf
cmp
inc
lds
pop
fldcw
inc
loope
sbb
mov
mov
mov
fsubr
fcmovu
push
push
int
adcb
lods
lock
daa
push
fidivs
jae
das
les
lock
cmp
pusha
leave
pop
ljmp
mov
rolb
lods
adc
fistl
push
aam
in
dec
fsubs
lock
je
mov
xor
in
xchg
mov
inc
das
dec
cs
mov
push
xchg
ja
in
sub
int3
enter
xchg
adc
xor
adc
popf
sbbb
and
push
sub
test
push
nop
fnsave
mov
cmpsb
repz
in
lods
mov
pop
inc
mov
sti
sub
inc
mov
cld
lds
jbe
sbbb
insl
rolb
cli
or
xchg
pop
mov
fisttpll
test
mov
lods
mov
popf
test
mov
jbe
or
push
cmpsb
adc
fcmovnb
push
lods
or
sbb
sbb
imul
sahf
mov
sahf
cmp
fsubrs
lcall
lds
fwait
inc
clc
push
push
call
sti
sub
adc
inc
and
push
mov
jp
push
sbbl
inc
sahf
mov
iret
hlt
push
push
xchg
sub
ret
cwtl
je
pop
push
jp
jo
pop
out
dec
xchg
push
xchg
mov
stc
push
xor
mov
xor
pushf
mov
incb
xlat
enter
cmp
sbb
rcll
dec
cld
push
outsb
xor
push
mov
mov
fisttpl
sbb
aam
shll
pop
mov
repz
cwtl
sub
or
xchg
dec
fcompl
aam
adc
or
push
les
jmp
aad
ja
pop
int3
movsl
arpl
iret
mov
aas
jg
mov
mov
jle
cs
ret
movsl
hlt
pop
mov
pop
ja
mov
loope
adc
iret
ljmp
mov
push
jecxz
inc
mov
stc
pop
scas
adc
stos
inc
cwtl
pop
std
js
sti
mov
roll
push
fsubrl
xor
sarb
jl
faddl
test
dec
xchg
and
pop
call
add
lret
jmp
mov
xchg
lds
sub
dec
fsub
sahf
lods
int
lds
mov
les
cmp
push
repnz
jbe
imul
mov
fstp
fucomi
inc
push
xor
sar
stos
aad
jno
iret
insl
enter
mov
leave
mov
mov
mov
cmp
fwait
pop
shlb
mov
insl
xlat
push
lcall
pop
mov
fdivrl
mov
lods
sti
lods
enter
mov
mov
fmull
jge
ss
std
outsl
mov
stos
sarl
push
mov
sarl
insb
jae
aad
ret
push
into
inc
mov
pop
lds
push
dec
mov
inc
adc
faddl
mov
dec
jb
cwtl
test
adc
scas
les
pop
cmp
sbb
ds
inc
xchg
sub
jp
jno
iret
scas
xor
shrb
dec
mov
fcmovnb
icebp
fidivrl
jb
shrb
gs
mov
cmp
add
adc
rclb
sbb
les
scas
pop
cli
test
xchg
sub
arpl
rcl
nop
cmp
adc
insl
push
push
hlt
je
sub
fidivrl
fisubrl
add
fstpt
cs
lahf
jge
push
push
pop
loopne
jbe
sub
std
xchg
test
mov
aad
jno
pop
ret
mov
test
mov
pop
adc
pop
sub
jno
dec
cmp
cmp
hlt
iret
icebp
repz
mov
ret
adc
call
and
xlat
aam
insl
scas
ja
ret
pop
or
das
xchg
ret
mov
cmp
mov
dec
shlb
xorb
and
inc
pop
fimull
lcall
sarb
fstp
lret
lds
inc
aas
lret
adc
adc
inc
mov
xchg
xor
push
clc
movsl
and
adc
xlat
je
push
mov
cmp
jo
fldt
testb
shlb
inc
shl
aas
pop
pop
lret
pop
iret
leave
daa
inc
xor
and
nop
jo
rcrb
or
jno
shll
and
sbb
cmpsl
mov
xor
cmc
pop
int3
pop
mov
mov
pop
lds
fstpl
aad
mov
pop
rcl
fmul
iret
shl
call
rol
movsl
flds
cmp
int
mov
lret
lods
adc
shrb
mov
pushf
mov
pop
pop
xlat
mov
repz
sub
mov
jb
pushf
mov
cltd
into
ss
jb
cmp
sbb
xchg
xchg
in
xchg
adc
je
stos
fsts
push
ret
pop
fimull
testl
mov
pop
aad
jb
push
icebp
push
jbe
repz
mov
pushf
lahf
rcl
cwtl
and
fnsave
jnp
in
xlat
test
mov
into
sub
sbb
aam
mov
mov
lret
mov
jns
jne
lock
inc
lds
inc
push
iret
mov
rcll
xchg
pushf
mov
inc
pop
shll
push
rclb
mov
pop
cs
stos
mov
sarl
imul
push
add
mov
sub
aas
push
and
mov
mov
lahf
stc
pop
js
ret
stos
mov
mov
loope
sarb
jle
cmp
es
ja
pushf
lahf
rclb
xlat
int3
sbb
repnz
mov
jae
cltd
inc
es
xlat
call
inc
inc
inc
lods
enter
adc
sbb
ret
jae
cmp
push
fcomps
dec
lcall
sub
sarl
jl
fsubl
inc
and
push
push
icebp
repnz
cmc
xchg
sub
pop
mov
pop
int
hlt
jne
fsubrl
adc
and
push
jecxz
mov
loopne
les
fstpt
xchg
inc
addr16
xchg
adc
call
scas
std
jo
add
mov
mov
jo
lods
sti
fcomps
jp
pop
xor
xchg
aad
lret
sub
ss
fstps
in
int
lods
mov
fdivl
xor
cld
mov
ds
xor
aad
mov
mov
pop
fidivl
scas
jle
loope
pop
xchg
cld
in
dec
mov
mov
push
xchg
lods
in
outsb
xchg
jae
lret
ds
adc
and
je
and
mov
icebp
test
push
sbb
adc
popf
mov
inc
pop
stos
aad
push
cmp
lret
push
xor
pop
fstps
insl
jge
movsb
rcrb
fcoml
aad
push
mov
scas
push
pop
fcoml
xchg
aad
cli
xor
push
inc
aas
push
movsb
pop
popf
mov
push
pop
repz
insl
les
es
xor
aas
inc
push
mov
ror
push
fcmovbe
mov
fstp
pop
fcmovu
or
les
mov
dec
pop
mov
imul
sbb
hlt
xchg
mov
ret
adc
cmpsl
jbe
mov
pop
addb
int3
pop
mov
ja
xor
dec
and
dec
mov
dec
sbb
fcom
cmc
sub
leave
push
fwait
hlt
xor
push
xchg
sbb
cwtl
xlat
pushf
fdivrs
fcmove
mov
push
mov
mov
pop
mov
xlat
sahf
fincstp
pushf
and
cmp
shll
shlb
mov
jne
aad
xlat
jmp
adc
xlat
mov
mov
rcll
loopne
int
rcrl
js
or
dec
pop
sarb
repnz
iret
xchg
lret
incb
mov
sarb
ja
and
mov
test
mov
mov
and
dec
fstpl
lahf
xor
ss
cmp
jno
and
nop
mov
push
push
push
nop
xor
jecxz
or
popa
cmp
hlt
aam
lcall
push
adc
pop
xor
mov
xchg
xchg
jge
stc
insl
ja
cmp
test
dec
xchg
scas
fsubrl
jns
and
jb
inc
ss
mov
es
lahf
push
mov
sbb
xchg
icebp
jno
out
sub
out
pop
movsbl
mov
or
cmc
inc
pushf
jo
sub
mov
arpl
pop
and
cmpsb
or
stos
aad
cmp
jns
mov
imul
sahf
fidivrs
xchg
mov
clc
pop
fistl
test
mov
push
cmp
out
pop
outsb
repnz
adc
adc
or
inc
popf
xor
push
pop
in
shrl
fmuls
push
push
insb
ficompl
sti
mov
or
sbb
mul
ds
inc
leave
push
dec
sbb
adc
divb
test
fst
fmull
repnz
dec
jne
pop
shll
sar
or
mov
pop
pop
out
pop
xor
inc
dec
sbb
lretw
sbb
fst
push
imul
mov
xchg
jbe
add
stos
flds
pop
in
fucomi
xlat
aas
fistl
adc
fildl
mov
jb
cmp
mov
fmull
sahf
ds
mov
jg
mov
sar
ffree
test
mov
rcl
or
add
jle
shlb
and
lock
mov
dec
xlat
aad
pop
xor
cwtl
ds
add
xor
push
pop
inc
imul
fmull
ffree
push
out
mov
mov
dec
cwtl
cmp
cmc
dec
adc
push
mov
pop
test
scas
or
cwtl
push
push
shll
arpl
jle
xchg
aas
rorb
mov
mov
adc
popa
outsb
imul
jmp
or
cmpl
inc
pop
mov
jns
ja
jae
mov
mov
fmul
mov
push
dec
jbe
cltd
je
iret
into
sbb
std
mov
or
fwait
jns
jl
jl
and
add
sub
mov
lds
lahf
pop
xchg
leave
mov
ficoml
mov
pop
sahf
clc
rcl
push
jg
inc
sarb
jge
int3
es
scas
fisttpl
pop
test
rcll
xchg
les
in
lret
out
dec
pop
dec
aad
ret
out
sub
mov
inc
popf
push
aam
icebp
shlb
out
dec
dec
push
jle
sub
lret
lret
into
aam
lds
pop
jp
rcll
pop
test
rorb
fcmovne
rcr
into
in
ficoml
pop
mov
dec
mov
pop
lret
aam
push
pop
int3
pop
test
aam
push
movl
sub
int
scas
inc
jp
scas
lds
fcomps
cmp
pop
dec
rol
shrb
int
popf
push
lret
pop
xor
ja
jp
scas
ret
cli
push
rorl
and
ret
cmc
mov
mov
aad
cvtps2pd
mov
inc
adc
aam
push
mov
aam
lret
lea
ret
cmp
aam
popf
push
pop
icebp
lds
fcmovnu
rorl
push
pop
fistpl
rcll
mov
rol
push
mov
sub
dec
mov
sub
int
lds
mov
mov
mov
push
jle
xor
mov
pop
flds
jmp
push
shrl
fcmovnbe
push
lret
or
mov
ret
roll
pop
enter
les
fcom
cmpl
rcrl
lods
into
xor
aam
push
je
pop
adc
cs
cmp
rorl
push
jl
stos
rcrl
jns
push
scas
sahf
push
shrl
lods
lret
inc
popf
push
enter
ja
mov
les
fucomp
pop
in
shrl
jp
scas
in
sbb
int3
rol
mov
lret
sub
lret
leave
pop
iret
jmp
jp
rcll
pop
inc
mov
or
cs
xlat
int
rcr
mov
lcall
rcrl
rol
lret
int
es
push
stos
pop
ficoml
ret
ficoml
push
pop
jmp
idivl
pop
icebp
shll
mov
dec
mov
rcll
enter
lret
ret
adc
mov
or
outsb
push
mov
ret
lea
push
aam
pop
shr
push
iret
lock
rcll
pop
and
pop
fnstsw
mov
sub
fisttpll
push
mov
shrl
insl
sub
xchg
insl
push
scas
push
rcll
shr
rcll
jns
leave
jg
push
js
iret
and
fisubs
jp
lds
fs
pop
lret
rorb
xor
mov
jb
adc
aam
push
rclb
ret
jmp
in
test
aam
ds
enter
cmc
aad
ret
mov
pop
cmovl
xchg
sbb
into
push
mov
rorb
test
test
xlat
adcl
rcrb
cmpsl
in
fmulp
sub
push
je
pop
mov
pop
mov
lds
mov
fiadds
aad
cvtps2pi
lret
rcrb
lret
or
sahf
push
enter
adc
cmc
rol
rclb
aam
fldlg2
adc
aam
inc
xchg
fidivrs
adc
rol
push
mov
mov
mov
dec
shr
dec
lods
mov
or
ja
xlat
int3
scas
sahf
push
shrl
shll
inc
jns
pop
rcll
lret
into
mov
lret
ret
push
mov
addr16
dec
mov
jae
push
xlat
or
inc
pop
mov
rcrb
lcall
jnp
push
mov
jp
scas
enter
push
mov
add
pop
pushf
aam
fdivrs
sbb
mov
or
sub
ror
xchg
int
inc
sarl
cs
rol
mov
jge
fcomps
lahf
inc
mov
or
iret
jae
leave
es
fdivrs
lods
iret
lds
sub
lods
leave
inc
enter
inc
in
lods
mov
jp
rcr
stc
in
mov
push
jle
lods
mov
sub
mov
lret
enter
cmp
int
rol
push
jns
fnstenv
sub
int
sub
cmc
enter
and
jno
lcall
lods
aad
int3
jno
mov
sbb
fcmovu
dec
loopne
fadds
lods
aad
dec
mov
fildl
or
inc
into
nop
int
jle
rorb
rclb
mov
int3
or
frstor
int3
add
fstps
push
mov
pop
flds
insl
mov
jmp
add
mov
push
sbb
push
mov
adc
lods
rolb
aad
add
into
mov
rol
or
dec
push
dec
push
rolb
lret
jnp
pushf
cltd
xchg
fcomp
lret
ffree
mov
test
add
ficompl
lock
adc
push
adc
mov
push
or
fldcw
or
iret
push
stos
inc
je
fdivrs
lods
mov
push
fnstcw
fdivrl
rcr
inc
ret
fnstcw
fistpl
mov
fnsave
mov
xlat
lds
or
xchg
cmp
insl
into
jns
int
shrl
popf
mov
es
mov
test
rcr
ss
rorl
adc
fsub
ds
or
mov
cmp
faddl
insb
rcrl
test
adc
fldt
fdivrs
rcl
imul
in
pop
jp
imul
fnstenv
mov
sarl
imul
ficoml
mov
mov
lds
jle
sbb
ret
cmp
aad
sub
lods
iret
inc
rorb
sub
int
int
and
cwtl
cmpsl
lret
lret
shrl
add
push
pushf
xlat
sub
or
iret
imul
sbb
test
shrl
lret
aam
popf
mov
or
xlat
shrl
adc
cmc
fisubrs
int
or
aam
push
xchg
enter
or
fdivr
popl
les
adc
or
ret
iret
pop
mov
ljmp
ja
add
push
aad
mov
cmc
sarb
lods
outsb
lds
cmc
enter
test
loope
fchs
pushf
push
pop
jg
mov
fdivs
fstp
es
fisubrs
push
lret
sbb
aad
rcrb
lahf
jnp
int3
scas
lret
jnp
enter
sarl
add
fdivrl
shll
ficompl
cmp
into
shrl
aad
aam
jae
in
push
fmuls
leave
pop
or
in
lods
test
int3
push
fmul
or
cmc
lret
dec
enter
lret
jnp
les
push
pop
push
mov
imull
cwtl
dec
adc
xlat
fucom
pop
movl
mov
jnp
into
lret
int
fidivs
cwtl
aaa
flds
aam
mov
jp
scas
rcrb
pop
push
js
in
lods
mov
les
pop
pop
push
aad
daa
push
xchg
lods
fstpl
lods
popf
lcall
pushf
lret
aad
lods
sbb
test
aad
lods
mov
inc
lods
jl
sahf
pop
sahf
pop
clc
test
cmp
sbb
xchg
aad
lods
aad
mov
push
pushf
jnp
nop
aad
lods
into
lcall
pushf
cli
pop
mov
lret
dec
jnp
les
ret
inc
xlat
lds
fdivs
rcrb
fdivl
into
in
int
pop
int
xchg
int
aam
in
int
push
int
int
int
in
int
dec
int
mov
in
int
add
in
int
mov
mov
cmpb
mov
cmpb
mov
cmpb
mov
sbbb
lods
ds
add
mov
idivl
fwait
andb
dec
int3
orb
les
pop
loopne
in
mov
and
jp
jbe
adc
xlat
xor
fadd
ret
lods
outsl
jne
fidivrs
inc
aam
add
mov
iret
or
cmc
into
push
int
lret
adc
dec
lret
int
lods
mov
lret
fnstsw
lock
inc
fdivl
dec
fcmovne
adc
jp
lods
jle
rcll
into
mov
xlat
push
stc
lret
leave
xor
mov
cmp
scas
int3
pop
sti
lods
sarb
test
lods
mov
iret
je
jne
jb
adc
jb
inc
jb
inc
jb
inc
ret
mov
jno
fiadds
loopne
adc
push
jg
mov
push
cwtl
cmp
mov
mov
in
int
js
in
int
jbe
mov
mov
mov
shlb
cmc
sahf
scas
ret
test
in
lods
mov
fisubrs
ret
in
pushf
add
xlat
mov
mov
lds
lret
fstpl
inc
jb
inc
jb
inc
jb
inc
inc
fiadds
rcrl
lea
outsb
push
mov
int3
test
push
jge
fldt
jp
lods
vpcmpgtb
aad
dec
loopne
test
fsts
loopne
in
lods
adc
iret
sbb
mov
xchg
iret
inc
aam
xchg
shrb
lea
push
ret
jno
jp
lods
lret
lcall
lods
cmpsl
lds
in
fadds
dec
inc
je
fdivrs
push
shll
push
add
iret
dec
xlat
ss
push
or
dec
fisubrs
faddl
sbb
mov
xchg
fadds
sub
sub
sub
into
sub
xor
adc
fsubrs
movsb
std
pop
aad
jo
mov
lds
lods
out
in
pop
int
xlat
or
lret
sarb
scas
int
sahf
aad
add
fcoml
js
es
lret
push
call
fdivs
xlat
flds
mov
aad
mov
or
jae
cmp
inc
fisttpll
es
pop
rcr
jne
stos
dec
movsb
push
lcall
jp
call
fdivrl
stos
insl
test
dec
push
lret
jo
aam
repz
sarb
bound
lods
loope
mov
mulb
pushf
shl
lods
rcl
les
jns
sbb
sbb
jp
dec
sbb
mov
xchg
aad
enter
addr16
push
leave
inc
shl
ret
scas
push
test
mov
mov
mov
add
fld
iret
add
jbe
cmc
lret
push
sarb
xchg
movsb
int
stc
fimull
movsb
inc
fstl
mov
mov
nop
rcr
sbb
aad
frstor
fstp
cmp
ficoms
shrb
ret
flds
aam
lcall
shll
negl
test
scas
aad
fadds
jnp
movb
jp
scas
ret
rorl
cmc
pusha
jp
lods
mov
ret
mov
cs
dec
sub
cs
sahf
mov
dec
fcmovnbe
mov
int3
rolb
jbe
int
inc
xbegin
lds
cli
mov
xchg
sub
push
ficoml
mov
aad
xlat
sub
dec
lcall
inc
cmp
xchg
scas
faddp
flds
cmpsl
mov
fildl
in
les
fisttpl
mov
mov
adc
xlat
mov
mov
pop
push
or
lods
shlb
fidivrs
mov
push
ror
jmp
lret
nop
int3
enter
mov
pop
mov
fmuls
sub
lods
rolb
jbe
int
add
jbe
cmc
rcrb
push
int3
push
iret
fmulp
mov
fadd
aad
mov
iret
rcll
clc
jp
inc
lock
sarl
js
ret
lds
cmpb
mov
jnp
xorb
fimuls
pushf
jp
cmp
push
dec
iret
js
iret
pop
jmp
int3
mov
dec
shl
int
repnz
xchg
int
xor
in
int
insl
int
or
in
int
dec
int
out
in
int
and
in
vpunpcklwd
jp
mov
in
int
lcall
mov
lcall
lods
pop
lcall
pushf
pop
stc
aad
lods
fstps
lods
cltd
pushf
or
aad
lods
pop
lcall
pushf
test
aad
lods
fcomps
lea
push
lret
xchg
jl
cmc
mov
inc
jb
inc
jb
inc
lret
xor
fldt
mov
stos
mov
daa
mov
mov
mov
dec
mov
cmp
mov
fcomi
jecxz
insl
fidivrs
rcl
aad
ror
dec
iret
push
dec
iret
lods
dec
iret
dec
dec
iret
jmp
aam
jne
jp
scas
ret
push
dec
inc
or
xorb
faddp
xlat
add
fcoms
jne
ficomps
mov
jnp
shrb
insl
and
fnstcw
les
scas
iret
jnp
fcoml
fcoms
sub
pop
shl
ror
pop
dec
jne
iret
insb
xchg
jb
push
inc
jb
inc
jb
es
shr
mov
daa
mov
mov
mov
mov
push
cmp
mov
xlat
sbb
aad
push
mov
aad
xchg
mov
ror
iret
mov
rol
or
mov
pop
jnp
jne
lds
cmpsl
rorb
jp
fisttpl
ret
fidivrs
fdivrl
fnstenv
fnstcw
jns
fdivs
imul
xchg
ret
rclb
ret
adc
iret
pop
popf
int
sub
mov
imul
mov
push
fninit
or
je
mov
jno
rclb
xor
es
fcmovnu
cltd
iret
mov
xchg
inc
fdivs
flds
cmp
and
iret
push
sub
sbb
rolb
add
les
fadd
stos
ffree
jne
jp
iret
fcoml
dec
ficoms
xchg
roll
repz
lcall
mov
mov
faddp
aad
ss
or
push
ret
mov
mov
rcl
pop
mov
push
hlt
ror
mov
aad
lods
fdiv
pop
rcll
push
jbe
lret
xlat
add
rcr
jbe
je
enter
fadds
mov
flds
push
rol
xchg
test
cwtl
fnstsw
dec
lret
ret
and
mov
das
fmulp
into
inc
ret
sarl
inc
sub
int3
mov
dec
push
out
arpl
int
rolb
jl
inc
fiadds
mov
pop
aad
adc
lcall
xchg
push
shrb
inc
in
sub
push
loop
ret
pushf
or
xlat
into
mov
push
mov
pop
shll
xchg
push
iret
stos
cmc
bound
dec
sarl
pop
int
dec
into
sub
scas
lret
es
iret
shll
ret
into
xchg
in
xchg
aam
ficompl
xlat
in
into
mov
into
movsl
rcr
lret
mov
shlb
fcmovu
fdiv
cmp
jle
enter
icebp
leave
in
cmc
mov
xor
ret
test
lds
fcmovb
xlat
add
lcall
pop
pop
jno
mov
test
lods
lret
scas
sarl
outsl
test
rcr
jnp
mov
leave
fiadds
fdivrs
lods
fsts
or
clc
cmc
fidivrs
mov
pop
rorl
nop
cmp
lods
int3
in
jl
fidivrs
ror
xchg
in
push
mov
hlt
mov
rclb
or
ret
fstpl
dec
jno
mov
lock
jp
lods
jle
push
gs
fnstsw
rcll
mov
jnp
les
aad
stos
movl
je
mov
xor
fstp
jae
enter
push
jl
jnp
pop
ja
and
rcr
inc
lds
fidivrs
pusha
fmulp
inc
loopne
rclb
sub
dec
and
inc
dec
shll
jns
mov
push
xchg
test
test
and
xlat
inc
int
adc
out
pop
inc
lds
lret
leave
dec
lret
into
sub
lret
and
and
ret
in
pushf
push
and
js
cmp
fnsetpm(287
jp
fsts
jne
xlat
mulb
inc
jb
inc
jb
inc
jb
inc
jb
inc
inc
mov
call
in
gs
loope
xlat
rcl
push
add
fldl
mov
fadd
fiaddl
aam
push
sbb
mov
or
push
ret
adc
int
xor
fildl
push
cwtl
or
push
xlat
add
gs
jp
add
dec
fiadds
xlat
mov
lds
fdiv
mov
cmc
fdivs
sarb
lret
rorl
je
fnstsw
mov
negl
sarl
enter
lret
sub
xor
shlb
sub
fildl
movsb
negl
lds
push
les
fstl
jle
push
pushf
pop
cmp
pop
aam
sub
mov
pushf
sahf
pop
or
inc
rcll
push
mov
fwait
xchg
fcompl
lea
pop
ficoms
test
xorb
sbb
test
xorb
dec
rorb
xchg
out
fincstp
ffree
lret
fistpl
jp
xchg
sbb
mov
fdivrs
lock
dec
push
fmuls
sarb
inc
inc
aaa
mov
loopne
adc
int
jae
jns
inc
shlb
mov
inc
fdivp
aam
test
mov
add
ret
mov
shrb
pushf
and
push
lea
mov
ljmp
fnstenv
push
xchg
or
push
or
addb
inc
dec
push
shrb
sub
sub
test
adc
fld
pop
scas
aam
iret
jnp
push
scas
lret
aam
lds
push
scas
sarb
sub
mov
ret
xlat
rcrb
xchg
faddp
sub
mov
lret
leave
mov
faddl
inc
mov
lods
push
dec
not
pop
mov
and
fdivrl
mov
ret
jp
mov
rol
cmp
add
inc
pop
sahf
dec
or
shr
aad
cmp
into
push
jp
mov
cld
mov
fdivr
mov
lcall
pop
xor
add
fnstcw
fadds
xlat
xlat
mov
inc
mov
fldenv
xlat
cmpb
sahf
xchg
aam
mov
push
rol
xchg
mov
mov
jns
int3
scas
push
hlt
jp
scas
into
jne
jp
scas
dec
cld
mov
in
lods
fadds
in
lods
roll
in
lods
into
inc
inc
in
lods
leave
inc
mov
jno
jl
adc
pop
cmp
fisubs
sub
sub
sahf
pop
shl
jns
into
int3
rolb
or
int3
dec
add
lods
lret
iret
fldl
sub
sub
push
inc
mov
pop
add
in
insl
ljmp
adc
adc
fidivrs
scas
aas
push
ret
inc
jmp
dec
fsts
repnz
ficoml
xchg
sbb
xor
push
lds
or
jbe
jbe
jbe
inc
ffree
adc
lock
fcompl
or
lods
pop
lds
std
pop
push
lods
add
mov
or
add
pop
mov
jle
xchg
pop
fisubs
iret
mov
mov
ret
jns
xlat
mov
sbb
lods
in
lods
leave
inc
lret
les
lods
aam
mov
xor
dec
fiaddl
gs
mov
jmp
dec
shr
lret
in
lods
lds
jbe
int
add
inc
mov
jp
lods
sahf
jp
scas
rcrb
sarl
fcomps
cli
dec
lret
xlat
ret
push
dec
nop
cs
sbb
int
inc
push
dec
lods
insb
flds
inc
int
inc
rcll
lock
rclb
xchg
push
jge
or
fisubs
cld
andb
mov
fisubs
and
int
pop
int3
mull
in
lahf
lret
int
out
xchg
ds
rcll
test
adc
and
rcr
add
adc
lds
pop
mov
pusha
sbb
add
mov
call
lret
cmpsb
mov
aas
dec
push
xchg
jbe
jle
loop
popf
add
cmc
neg
dec
push
pop
popa
dec
fistpll
fisubrs
bound
inc
fiadds
js
imul
add
cmc
push
ss
push
add
mov
cld
xchg
add
mov
lods
es
xchg
mov
stc
daa
lcall
test
inc
inc
ss
cmc
sub
mov
ficomps
or
std
cmpsb
call
jae
sbb
cld
inc
jp
inc
cmpsb
loope
mov
cmp
jle
ficomps
mov
fimuls
xor
mov
ja
roll
insb
ficomps
xor
dec
invd
sbb
movsl
mov
fiadds
dec
mov
push
sahf
jbe
test
mov
pop
frstor
lcall
imul
jae
enter
inc
or
pop
fildl
lret
int
iret
pushf
adc
aad
lods
sbb
lcall
lods
inc
lcall
pushf
rcrl
aad
lods
push
lcall
lahf
scas
rcrl
dec
lcall
pushf
adc
aad
lods
push
lcall
jl
dec
fldl
lods
sbbb
or
push
pop
rolb
clc
sar
push
fnstsw
fwait
lods
sbb
add
pop
lods
enter
iret
lods
xchg
pushf
adc
lods
sbb
add
mov
push
jle
ficoml
pop
lods
lcall
ret
lods
pop
lcall
push
push
mov
xchg
lcall
inc
lods
test
lods
int
orps
pop
pop
pop
aad
lods
push
xlat
jg
add
inc
aad
dec
or
lea
xchg
lods
sbb
rcr
lods
sbbl
or
aad
lods
push
lcall
mov
pop
adc
lods
xchg
lods
dec
pushf
iret
pop
rcl
xchg
lods
xchg
lcall
add
enter
cvtps2pd
aad
lods
adc
push
push
xchg
pop
lods
ficompl
enter
inc
pushf
pop
leave
aad
lods
or
push
lods
xchg
pushf
sbb
push
xchg
mov
lds
dec
push
dec
mov
bsr
xchg
pushf
aam
aad
mov
push
leave
pop
mov
jne
sbb
push
push
stos
mov
pop
inc
sbbb
cmpb
sahf
mov
inc
mov
mov
lods
push
cwtl
push
mov
lea
xchg
adc
mov
xlat
aad
adc
lods
int3
fcoml
xchg
sbb
mov
lcall
dec
pushf
adc
aad
lods
lcall
add
aad
lods
pop
lcall
pushf
xchg
pop
xchg
aad
lods
pop
lcall
and
aad
lods
lcall
pushf
rcrb
aad
lods
fstps
int
inc
scas
inc
pushf
push
movsl
push
adc
mov
lods
inc
pushf
add
adc
lods
fcompl
xlat
push
lods
xchg
pushf
dec
mov
mov
pushf
lds
aad
lods
aas
ds
pushf
rcrb
aad
stos
dec
mov
pushf
dec
pop
pop
aad
lods
add
push
fwait
mov
aam
adc
mov
add
or
push
aad
lods
push
lcall
pushf
lcall
mov
mov
enter
ds
notb
cmpb
dec
pop
adc
pop
push
lods
adc
adc
aad
lods
enter
test
mov
push
and
push
adc
push
mov
test
push
ds
pop
jle
xor
aad
fstl
mov
mov
ljmp
out
mov
out
push
fidivs
pop
dec
push
mov
inc
mov
cmpsb
das
cmc
fsubp
mov
dec
jno
stos
inc
fisubs
sarb
ja
inc
into
xchg
fidivrs
lret
mov
pop
dec
mov
fisubs
jbe
neg
fsub
out
mov
fstps
and
shl
pop
adc
mov
test
aas
xchg
add
stos
pop
xor
inc
mov
out
loopne
dec
daa
mov
inc
mov
gs
adc
fimuls
sbb
in
mov
adc
push
test
adc
cli
out
mov
cmp
mov
pop
cwtl
ja
push
pop
sahf
ficomps
jb
adc
mov
cmp
lea
cli
pusha
jne
mov
lods
into
push
jmp
xlat
fidivs
cmp
xor
fiaddl
je
sti
mov
insl
xor
add
shl
sbb
stc
dec
add
fbstp
jle
ret
pop
xor
cmp
mov
lahf
rolb
aas
pop
sbb
pop
adcb
push
xchg
fisubs
iret
lods
testl
dec
pop
sti
sbb
jg
and
jns
paddw
in
fdivrl
sub
lahf
aaa
test
stc
mov
fcomp
xlat
or
add
xchg
jmp
into
ficompl
rolb
sub
push
imul
iret
mov
lods
fisttps
inc
jae
or
push
fsubp
mov
xor
adc
mov
sbb
cmp
lcall
into
mov
push
in
ss
jecxz
sbb
fidivs
inc
push
lea
mov
pop
ficoms
rclb
fwait
xchg
js
sbb
xchg
xor
mov
stos
fidivl
aas
aaa
mov
in
dec
rorb
mov
scas
shll
jge
dec
add
aaa
orb
xor
insl
fidivs
dec
clc
push
ficomps
cmp
in
and
mov
mov
stos
inc
lret
ret
popa
mov
or
and
cmp
mov
push
shll
cmc
in
sbb
clc
lds
pop
mov
fidivrs
rorb
ja
pushl
cmpsl
pop
sub
std
cmp
roll
push
jge
test
stos
mov
stc
ficomps
ss
pop
pop
adc
fsubrp
rcr
mov
mov
push
and
fdivr
add
jmp
add
fistl
add
lods
pop
lds
fnstsw
xchg
shl
add
pop
fsubrl
cli
mov
mov
sub
out
dec
adc
mov
ljmp
fiadds
sbb
faddp
je
mov
insb
imul
test
fdivrs
and
and
sub
iret
or
mov
mov
das
hlt
into
pushf
insl
adc
mov
fsubp
mov
std
out
pop
ja
fsubrp
data16
addl
cmp
outsb
sahf
test
bound
iret
sbb
xor
les
xchg
mov
fistl
sarb
jno
add
jmp
scas
test
or
jbe
int3
sbb
fcoms
cmp
fidivs
leave
jle
in
xor
xor
add
nop
loopne
and
cmp
adc
orl
mov
into
cmpsb
aas
sbb
stos
inc
sahf
fcomi
enter
out
or
imulb
mov
into
inc
shr
push
call
fstpt
inc
mov
pop
mov
pop
lock
lahf
push
lret
jae
leave
std
or
jle,pt
lret
sub
fcmovnb
fldcw
xchg
imul
jbe
sub
cs
or
inc
cmp
std
inc
and
jecxz
aad
sbb
dec
mov
stc
mov
shlb
mov
ds
fdivrp
mov
mov
jb
lods
add
cmp
sub
loope
push
lock
shll
xor
push
xchg
cs
popf
and
cmpb
sbb
jo
xor
jbe
push
jl
mov
mov
enter
and
clc
pop
push
out
xor
std
pop
loop
push
jb
or
mov
movl
jmp
mov
jecxz
aas
mov
sahf
mov
cmp
xchg
mov
aaa
iret
outsl
mov
lods
pop
xchg
dec
fiadds
in
insl
jecxz
sub
add
inc
and
adc
rcrb
fstpt
pop
or
and
add
jne
daa
fidivs
xchg
stc
sbb
pop
xor
lret
fisubrs
pop
dec
cmp
push
loop
xlat
fimull
insb
std
shlb
push
mov
mov
inc
push
xchg
fldt
in
pop
push
cli
in
sub
movsb
into
jmp
stos
loopne
xchg
mov
scas
faddp
dec
or
xor
inc
jecxz
das
cmc
adc
cli
push
loop
dec
push
pop
ret
dec
inc
loope
pop
lock
xchg
fiadds
adc
sbb
mov
push
fsubrp
jmp
pop
or
std
sbb
sub
mov
std
cmp
sub
mov
cli
sahf
scas
mov
stos
dec
push
roll
into
out
fsubl
xlat
dec
fldt
addr16
fdivrp
mov
mov
std
pop
loop
enter
lods
sahf
pop
movsb
mov
out
push
shll
aas
je
adc
lods
add
ljmp
and
pop
ficomps
mov
push
dec
stos
xlat
mov
cli
xor
xchg
pop
sbb
in
rol
cmp
dec
xchg
lret
adc
add
cmp
sbb
popw
andb
lret
fidivrs
aad
xchg
lahf
fwait
sub
jne
data16
mov
xchg
push
jp
jbe
sbb
fimuls
ss
ficompl
inc
jge
fdivp
arpl
jae
or
jp
push
sbb
clc
enter
ljmp
jg
pop
fwait
jmp
mov
mov
mov
shll
sarl
insb
xor
dec
xchg
fisubrs
stos
and
inc
push
inc
inc
fmulp
movsb
lds
stos
sbb
mov
pop
ficoms
push
xchg
das
ds
les
pop
and
in
scas
fsubr
gs
pop
sar
dec
mov
sahf
inc
jmp
push
dec
std
scas
sub
hlt
out
adc
popa
mov
push
inc
push
aad
out
orb
outsb
pop
into
sbb
mov
subb
jle
pop
jae
arpl
into
inc
andps
xchg
sbb
dec
and
jl
mov
lods
les
pop
jge
idiv
lock
pop
outsl
enter
fyl2xp1
cmp
fmulp
in
add
jb
add
mov
data16
mov
and
xlat
mov
sbb
inc
adc
shlb
xor
lret
push
lcall
sub
jmp
jne
fisubs
jae
cmp
inc
mov
fsubrp
bound
and
js
rorb
inc
in
jns
cld
ds
jbe
sub
and
sahf
ja
pop
nop
xchg
mov
inc
lahf
int
inc
pop
cwtl
xor
sub
push
xor
aad
fisubs
ljmp
mov
sbb
dec
mov
cmp
xor
pop
jae
in
mov
or
lret
imul
fildl
fdivl
sub
adc
in
mov
fnclex
leave
icebp
sbb
repz
addr16
rcr
jp
inc
ret
sbb
fisubrs
fistpll
sti
add
xchg
shl
mov
cli
xor
xor
jle
cli
scas
pop
sahf
lcall
pop
sbb
pop
mov
ja
lea
and
into
mov
ds
xchg
or
sbb
leave
lret
push
xchg
lock
int3
dec
bound
outsl
pop
aas
fisubrs
cli
shll
jae
pop
gs
add
xor
shlb
xor
mov
cmp
sbbb
out
cltd
fdivp
cmpsl
gs
push
mov
int3
xchg
fidivs
clc
dec
imul
mov
lahf
pop
add
fisubrs
sbb
mov
pop
mov
outsb
adc
jle
ficomps
cmpsb
sbb
mov
push
sbb
pop
sbb
addr16
xor
pop
mov
ret
les
mov
push
and
push
inc
lret
test
or
fidivs
push
mov
lret
lahf
mov
push
mov
ja
fcompl
insl
fimuls
lea
xlat
pop
fimuls
dec
dec
xchg
jb
scas
jo
insb
mov
lret
mov
movl
and
jne
jl
fidivrs
sbb
mov
fsubp
pop
fcmovnb
inc
or
inc
sbb
lcall
cwtl
addl
lods
rol
mov
cmpsl
push
xor
sub
xlat
fidivrs
hlt
data16
mov
pop
inc
inc
movsl
fiadds
fmuls
shlb
xlat
fldt
ficoms
jbe
mov
sti
cli
mov
or
mov
xor
adc
fimuls
push
dec
in
add
cld
sti
cmp
int3
sti
mov
shr
mov
out
aam
pop
outsb
jge
scas
dec
sahf
fidivrs
jle
rclb
iret
rcrb
out
dec
inc
fsubrp
sarl
sbb
jbe
fistps
stos
fmulp
in
jl
pop
loopne
mov
ficomps
je
inc
int3
mov
mov
jne
cmp
and
cltd
sahf
fldt
xor
in
cmpsb
dec
ret
int3
pop
jne
jle
ret
xorb
and
rorb
adc
sahf
jnp
push
call
ljmp
sti
mov
push
mov
rclb
int
dec
cmp
mov
and
es
not
cmp
dec
je
and
dec
mov
xchg
fimuls
sahf
mov
ret
push
test
fidivrl
sbb
mov
xor
aaa
fsubrp
lahf
outsb
xor
addl
fisubs
and
imul
jge
insb
repz
sbb
cmpsb
iret
pop
pop
in
ret
jb
enter
lods
add
clc
and
or
dec
mul
push
aad
mov
fsub
jmp
pop
int
push
gs
fwait
punpckhbw
icebp
inc
cmpsl
out
dec
mov
sbb
sub
xchg
mov
xor
aas
add
cmp
ret
mov
jmp
sbb
inc
push
std
adc
lahf
jae
in
pop
xchg
imul
inc
mov
popl
adc
ds
mov
aam
xchg
sbb
jle
pop
loopne
popa
fidivs
aas
mov
jecxz
sbb
mov
popf
xchg
mov
inc
rcl
nop
dec
std
ljmp
inc
xchg
aam
std
jae
or
mov
mov
orb
mov
sub
fcmovb
outsb
test
fcmovb
jo
or
sahf
xor
push
xlat
insb
fdivrs
push
inc
push
or
pop
js
test
jp
es
adc
mov
and
out
and
sahf
cmp
pop
popf
imul
repz
out
lcall
subb
mov
add
dec
fnstcw
xchg
addr16
out
jecxz
add
sub
imul
fidivrs
jmp
fld
nop
and
mov
inc
lahf
lea
xlat
xor
sbb
push
repnz
gs
in
hlt
and
ret
imul
sub
and
jo
adc
outsb
fsubp
inc
dec
cmpsb
movsl
scas
sahf
lea
pusha
cmp
or
jge
pop
std
xchg
xor
inc
ret
mov
jae
stos
push
sub
cmpsl
test
inc
add
pop
sbb
gs
cmp
sti
out
out
adc
jo
lock
les
mov
loop,pn
cmp
jl
adc
into
push
push
stos
jle
scas
les
ficoms
mov
push
push
cs
lea
testb
xchg
dec
test
fisubs
dec
jns
cmpsl
xor
inc
jle
incl
xchg
test
xchg
andb
jge
jl
int
xchg
xchg
jge
and
loopne
in
stc
cmp
je
jp
mov
gs
inc
adc
insb
dec
sub
xor
ja
mov
xchg
int
fimuls
repz
lret
les
ficoml
fisubs
loope
fs
pop
mov
push
insl
in
xchg
out
xchg
fisubrs
push
into
dec
fstpt
gs
aad
outsb
jg
std
xor
cld
les
sub
mov
inc
mov
mov
cmp
ss
xor
and
jo
push
mov
inc
pushf
cwtl
fidivs
pop
xor
fstpl
fstpt
fiadds
addr16
and
xor
dec
add
loopne
sbb
ficoms
aad
pusha
mov
in
push
js
adc
mov
fimuls
outsl
insl
jmp
pop
addr16
stc
mov
into
gs
arpl
jmp
mov
rcrb
movsb
push
clc
pushf
dec
mov
int
rolb
mov
notl
mov
fsubl
cmp
mov
sbb
movsl
xchg
and
incb
inc
enter
test
mov
fcomp
mov
and
jl
inc
cmpsb
ds
femms
movsb
push
sub
in
fimuls
xor
scas
pusha
and
ficomps
sub
pop
sub
movb
push
dec
shr
mov
ficomps
adc
and
loopne
pop
shl
fisubrs
dec
jo
pop
fistpl
jge
in
inc
loop
sub
inc
divps
aad
jnp
faddp
ret
mov
pop
std
or
ficomps
adc
pop
mov
inc
jbe
fdivp
sub
mov
imulb
aad
imul
push
pop
lods
movsl
dec
icebp
xchg
xchg
je
jmp
mov
outsl
fs
and
fisubs
inc
cmc
and
jnp
push
ja
pop
mov
into
mov
mov
jb
pop
adcb
in
pop
aas
mov
mov
lds
aam
movsb
jle
cmp
or
cmp
add
loopne
xchg
enter
cld
jle
loop
shrb
push
mov
jge
out
int
fimuls
or
enter
mov
push
ret
push
shlb
adc
movsl
pop
mov
dec
and
sub
jae
push
lods
sub
sub
out
cmp
test
xor
addl
loope
mov
mull
mov
es
enter
mov
or
mov
std
xchg
aaa
fistps
sbb
pop
mov
inc
fistl
fbstp
into
andb
push
cli
imul
cmp
insl
or
jp
aad
fxch
ja
divb
xchg
cld
lret
std
cmp
cmc
add
je
imul
lret
inc
fmulp
xor
adc
div
jge
addr16
cmpsb
mov
mov
fisubrs
pop
insb
add
dec
mov
stos
ds
sub
push
jno
int
arpl
mov
shlb
adc
das
flds
push
lret
lret
fidivs
cld
xchg
jmp
jecxz
sbb
dec
pop
ss
repz
jo
daa
cwtl
fwait
cld
pop
je
adc
test
xor
push
push
add
nop
cmpsb
imul
xchg
cmc
jle
popf
sbb
dec
aad
jns
fld
and
jg
lcall
cwtl
loopne
les
xlat
sub
fimuls
cmp
sbb
fisubs
fmulp
dec
ficoml
jge
or
mov
nop
sub
popa
pop
popf
mov
jecxz
rolb
or
lods
lret
hlt
dec
rcrb
cli
pop
in
das
lds
fstpl
ret
pop
dec
dec
jle
xlat
stos
xor
mov
jp
fisubs
mov
or
mov
push
mov
xchg
mov
jae
fisubrs
imul
rcrl
mov
add
cmpsb
jmp
push
fidivs
sub
mov
sbb
sbb
sbb
stos
or
mov
dec
jecxz
js
adc
push
adc
pop
loopne
in
roll
out
dec
outsl
push
stos
pusha
jb
popa
ficompl
inc
or
dec
inc
test
pop
test
in
repz
je
mov
push
pop
movsl
inc
pop
sub
fsubrp
lahf
jl
jmp
test
pop
bnd
into
fwait
dec
fidivrs
popa
fistps
loop
shll
mov
insl
push
ficoml
adc
pop
push
mov
std
pop
outsl
into
fmulp
mov
dec
mov
clc
pop
adc
and
lret
fiadds
scas
lock
dec
in
inc
push
shl
int3
out
pop
push
gs
xchg
fidivrs
fildl
insl
fstpt
ficoms
dec
xorb
cmp
jnp
arpl
dec
les
jno
shll
dec
movl
sub
movsb
xor
aam
jmp
aam
sbb
cli
mov
mov
arpl
sahf
push
cwtl
mov
sete
dec
push
sub
jns
jne
adc
push
lods
jle
xor
push
negb
cld
dec
adc
hlt
js
sbb
aaa
pusha
jle
push
inc
xchg
dec
jns
sbb
enter
inc
push
pop
lea
inc
inc
xlat
push
adc
mov
adc
sbb
loop
into
leave
pop
xchg
lods
cmpb
sbb
lds
mov
xchg
movsl
xchg
shr
cmp
and
les
es
movb
aas
ficomps
inc
fisttpll
sar
fdivrl
lods
ret
mov
mov
inc
lret
fwait
push
daa
jne
adc
pop
fidivs
std
popa
rcrl
out
mov
lods
inc
sbb
sahf
push
testl
outsb
fidivrs
std
std
dec
adc
imul
fidivrl
fsubrp
pop
dec
loopne
lods
pop
jb
ds
ficomps
inc
sbb
test
fisubrs
test
dec
stc
mov
adc
push
and
mov
inc
into
fndisi(8087
outsb
sbb
lds
push
xlat
inc
add
cltd
out
jp
shrb
pop
mov
sahf
pusha
rcr
sub
fidivrs
xchg
and
pop
xchg
mov
inc
inc
pop
stos
enter
fidivrs
stc
mov
inc
sub
and
inc
cmp
sti
add
ret
or
xor
jle
xor
mov
into
fisubrl
lock
cmp
outsb
xor
xlat
mov
sbb
jno
insl
xchg
fdivrp
fstpl
jo
adc
loope
cmovae
and
mov
fidivrs
sbb
push
shlb
mov
fwait
dec
std
mov
cltd
push
cmp
dec
or
mov
or
add
xchg
ret
dec
movsb
rcl
fiadds
gs
and
fucom
add
aad
ficomps
dec
iret
fists
or
jmp
mov
loopne
pop
mov
adc
dec
add
pop
fisubrs
mov
mov
inc
sar
fisubrl
in
mov
sti
sub
lret
ret
mov
lods
insl
mov
pushf
scas
pop
sarb
xor
xor
mov
pop
mov
into
in
mov
xchg
shll
push
xchg
push
add
xor
in
fdivp
pop
push
out
mov
mov
push
in
aaa
ds
mov
or
adc
push
lahf
or
cmp
jl
xchg
inc
cmpsl
insb
fiadds
loope
or
ret
jae
jbe
scas
mov
out
icebp
cli
addb
cli
fdivrp
negb
in
shll
inc
es
sub
and
aam
faddp
pop
dec
cmp
push
add
push
insl
jge
lock
xchg
std
xor
lea
push
add
dec
scas
jb
int
xchg
jge
adc
inc
bound
cld
jbe
add
and
pushf
cvtps2pi
daa
jae
fidivs
je
aad
insb
jle
sbb
mov
cmp
xlat
fisubrs
xchg
mov
cs
fs
xchg
rcrl
dec
scas
rol
cltd
ja
rcr
adc
push
adc
xlat
stc
inc
std
mov
or
into
xchg
repnz
sub
arpl
ja
push
aam
lds
lea
scas
pop
pop
pop
sahf
daa
fisttpl
orl
les
cwtl
popf
mov
imul
pop
mov
cld
or
jns
adc
rolb
arpl
xor
pop
test
sbb
jmp
fucomp
mov
adcl
lcall
fidivs
sub
or
out
out
mov
pop
inc
outsl
adc
fisubs
jecxz
sub
pop
aas
std
push
outsb
xchg
mov
dec
xlat
mov
pop
xchg
xor
lahf
jns
movsb
daa
stc
test
ds
jae
mov
int3
sbb
xchg
pushf
xchg
mov
ficomps
cmpl
ss
fsubs
pop
sbb
in
xlat
jle
inc
sub
xor
rorb
aaa
jle
das
in
mov
mov
pop
scas
sarl
ss
addl
fmulp
cmc
mov
pmaxsw
sub
cmp
sti
lock
icebp
pop
in
mov
ljmp
fiadds
push
fidivrs
pop
pop
daa
insb
data16
xchg
fwait
dec
fidivrs
ret
pop
fisubs
out
loopne
fwait
out
lret
fsts
pop
fisubrs
inc
add
sbb
mov
fsubp
in
cmc
in
adc
fisubs
shl
pop
jp
leave
fisubrs
sub
iret
xor
lea
rolb
les
mov
lret
shll
icebp
fwait
popf
xchg
pop
out
jne
mov
pushf
cmp
sbb
adc
out
shrb
outsl
mov
dec
pop
mov
int3
xchg
addb
jle
into
jbe
jg
pop
sbb
cmp
fists
fisubs
adc
xlat
rcrl
mov
xor
or
sbb
mov
push
mov
pop
paddb
rcrb
mov
mov
fdivl
cld
data16
cmp
lret
add
fisubs
cmpb
ljmp
or
les
xor
mov
das
neg
stos
test
popa
sub
push
fidivs
sbbl
repz
xchg
cmp
dec
out
test
adcb
pop
fisubrs
xchg
and
movsl
fsts
fidivs
dec
mov
mov
scas
xlat
inc
push
dec
fidivs
cli
lods
jg
jle
adc
int3
je
mov
into
stos
shl
jne
jge
mov
aas
sbb
repz
or
gs
ret
jl
enter
fwait
enter
dec
sbb
jp
xchg
stos
add
mov
fistl
js
jne
cmpsb
int
push
fisubrl
cmp
ret
fs
vpslld
rol
ficoms
and
scas
pop
cmp
mov
cmp
add
push
push
pop
ret
insb
jbe
das
sar
and
adc
mov
fsubrl
pavgw
fistpl
cli
int
mov
push
imul
inc
pop
leave
xchg
dec
fiadds
push
or
stos
data16
sbb
mov
sub
xor
push
sub
lds
xor
out
pop
pop
test
mov
in
mov
loope
push
jle
pop
cmpsb
icebp
adc
and
insb
into
decb
js
popa
in
jle
aas
add
clc
scas
into
pop
test
fidivs
pop
push
lcall
fldl2t
dec
inc
fstp
jns
xchg
sub
pop
add
bound
pop
and
into
pop
cmp
cmp
mov
mov
and
jg
pop
neg
ret
sar
sbbb
mov
mov
fstpl
or
cmp
sbb
cmp
pop
lds
lahf
ror
xchg
fimuls
xchg
into
fldenv
push
cmp
push
popf
ficoms
sbb
dec
test
mov
in
adc
int3
fcompl
push
fimuls
adc
std
mov
xchg
in
aam
into
into
out
and
adcb
movsb
add
stos
ds
js
pushf
lods
dec
lock
test
jno
cmp
fcomps
pushf
lahf
roll
and
clc
rcl
sbb
popf
daa
sub
adc
sbb
mov
ret
xchg
fsubrp
sbb
add
jb
fadd
mov
std
divb
fsubl
loopne
fcmovnu
fsts
mov
scas
out
jne
xchg
fcoms
jmp
inc
jle
mov
xchg
subb
inc
aas
das
bound
jl
les
xlat
push
xchg
mov
flds
xchg
popf
adc
jns
std
adc
lds
fdivrp
rorb
in
lahf
cwtl
clc
loop
push
aam
dec
imul
mov
fwait
jle
and
mov
out
jle
mov
pop
mov
fiadds
daa
je
std
mov
sarb
add
lahf
xchg
and
fdivp
movsb
pop
mov
mov
lea
jmp
call
jg
loopne
pop
jns
decl
pop
mov
stc
lock
cmp
inc
push
and
arpl
out
test
sub
std
aad
sbb
pop
bnd
jge
subb
jp
mulb
jnp
add
or
int
aam
mov
loop
idiv
jbe
imull
mov
adc
push
and
mov
push
jge
dec
inc
push
inc
pop
push
aas
das
aad
jecxz
dec
cmp
jmp
jno
mov
pop
popa
mov
pop
mov
pop
lods
sub
hlt
out
jp
adc
mov
xor
pmaxub
push
lcall
xchg
cmp
cmp
call
lods
fdivr
test
scas
ljmp
lods
jl
loop
rcrl
push
and
lea
and
pop
or
mov
movw
cmp
push
push
jmp
call
xor
js
rorl
fxch
mov
sahf
and
cmp
dec
repz
xor
repz
test
mov
sbb
or
push
dec
push
add
out
stos
stos
pop
daa
mov
ljmp
stos
loope
push
das
sbb
ljmp
add
clc
out
and
pop
adc
and
rolb
icebp
or
dec
add
push
push
fsubrs
arpl
mov
and
das
sub
mov
push
jmp
mov
mov
jge
inc
mov
push
insb
xchg
out
pop
subb
and
sub
imulb
pop
jb
push
pop
movsbl
adc
adc
arpl
xor
mov
lds
xlat
jmp
repnz
in
adc
sub
push
stc
sar
repz
rcl
cmc
mul
ror
aad
das
xlat
push
sbb
mov
movsbw
sar
sub
bsf
xor
mov
cmp
stc
sub
clc
pusha
mov
clc
pushl
popl
bt
clc
jmp
mov
mov
or
mov
sbb
xor
out
xor
dec
dec
out
jp
push
cmp
rcr
test
enter
ret
mov
clc
imul
mov
jl
xor
jmp
mov
scas
jmp
mov
inc
mov
bound
jbe
jp
pop
jl
inc
dec
aas
das
xlat
lret
ror
pushf
movb
cmp
bt
neg
pushf
cmp
bt
pushl
cmp
movzbw
jmp
clc
ror
push
mov
dec
call
fcmove
inc
jecxz
test
jae
loope
stc
push
leave
pop
loope
fsts
inc
leave
ret
fistpl
lret
pop
enter
pop
push
decl
dec
adc
lods
cmp
cmp
jp
inc
dec
or
movsl
pop
pop
push
or
ds
sub
push
lods
mov
cmc
mov
push
xchg
mov
js
ja
lret
fdivrp
nop
dec
cltd
test
leave
sub
addr16
pop
inc
fwait
test
xor
sbb
aam
mov
sarb
add
add
mov
xlat
lret
mov
int3
loopne
push
or
fiaddl
pop
and
xor
sub
mov
xlat
repz
mov
dec
add
push
std
jnp
gs
rcr
sar
mov
test
xor
decb
sbb
in
into
into
mov
test
mov
jge
pushf
lcall
test
andb
popa
lea
add
inc
ljmp
fs
call
gs
das
fld
sbb
fcomi
out
stos
test
push
add
das
fprem1
mov
rolb
shlb
cmp
aas
das
fiaddl
adc
inc
push
es
cmpsb
mov
mov
repz
jno
gs
pop
inc
push
inc
jno
aas
das
ftst
in
mov
pop
jo
jo
push
dec
or
push
cwtl
push
mov
pushf
scas
pushf
xor
mov
inc
add
xor
das
mov
loope
movsl
adc
inc
add
mov
mov
into
addr16
fsubrp
mov
test
xchg
scas
xchg
icebp
shlb
insb
testl
jbe
xor
rorl
in
and
push
rol
out
cmp
push
pop
imul
adc
mov
popf
out
arpl
jg
sbb
xchg
xchg
mov
lods
mov
xchg
aas
das
ficompl
daa
push
icebp
cld
pushf
sarl
inc
pop
push
ljmp
rorb
fsubrs
inc
xor
push
inc
bound
movsl
push
adc
popa
test
test
xchg
push
call
mov
aam
test
int3
xchg
cltd
xchg
push
xchg
sub
inc
pop
push
push
dec
imul
inc
jecxz
sbb
sbb
and
movsb
or
aas
stos
mov
repnz
sbb
pop
addb
icebp
mov
insl
ds
ficoms
jnp
inc
int3
mov
or
cmp
adc
and
or
aas
das
fidivrl
push
lea
call
jmp
call
ja
test
insb
cmpsl
cwtl
fcompl
outsb
in
les
jb
jb
ret
xchg
xchg
jne
data16
ficoms
xchg
dec
dec
mov
outsb
and
into
sbb
add
cmp
rcrl
test
fimuls
pop
add
jnp
out
es
sub
pop
inc
enter
add
xor
push
cmp
mov
mov
fmull
rcll
ds
test
out
in
movsb
mov
vandpd
aas
dec
iret
push
lret
jge
xlat
pop
jecxz
inc
jns
adc
mov
lcall
mov
lret
ljmp
jge
cmc
mov
jbe
push
dec
das
or
dec
jp
lcall
adc
addr16
xchg
nop
sbb
lea
icebp
iret
xchg
lahf
mov
hlt
mul
mov
mov
cmpsl
test
cmpl
fcompl
and
mov
mov
stc
pushf
and
setno
mov
bt
test
jmp
aad
sbb
add
add
dec
outsl
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
addb
add
add
add
add
push
sbb
add
add
enter
add
add
inc
push
add
adcb
data16
add
add
add
popf
or
and
push
hlt
pop
enter
and
push
mov
bound
xor
out
nop
dec
lods
insl
pusha
clc
sub
jb
cmp
cmp
test
test
aaa
and
lahf
popf
iret
cli
lods
shlb
aaa
or
cwtl
adc
pop
das
sbb
pop
adc
xchg
jno
inc
out
push
pop
sbb
xchg
movsb
lcall
mov
lods
aas
das
frstor
sub
cmp
pushf
call
fxch
jle
repnz
mov
cli
mov
lods
sbb
mov
daa
and
push
leave
xorb
mov
test
jl,pt
push
cmp
jo
clc
adcb
loope
jl
dec
mov
jmp
shl
ret
cmpsl
sbb
add
dec
fcoml
daa
arpl
daa
leave
aaa
adc
mov
sahf
mov
push
push
repz
loopne
out
xchg
xchg
pop
sahf
pop
out
aaa
lods
and
push
cltd
or
inc
push
push
pop
pop
jne
inc
pop
gs
aas
das
fnsave
ret
inc
adc
pop
sub
adc
mov
lods
subl
inc
test
pusha
dec
mov
xor
and
imul
mov
jl
pop
sbb
insb
fcomps
ljmp
cmpsb
js
push
das
adc
xchg
dec
pop
jge
cmp
mov
sbb
add
cmp
adc
lods
mov
fwait
xchg
mov
xchg
aas
das
ficomps
arpl
pop
out
dec
dec
sarl
inc
fldl
dec
rorl
aad
shl
rcll
and
enter
mov
test
fstl
add
insb
cmc
hlt
lahf
sar
ficoms
xor
xchg
out
lods
jo
mov
cwtl
or
add
lcall
std
and
mov
xchg
mov
mov
pop
cmp
or
add
and
add
aas
das
fisubrs
push
inc
outsl
insb
outsl
jb
add
jns
jp
loopne
push
xor
jno
push
popa
out
push
iret
pop
imull
outsl
sub
pop
dec
cmp
and
jo
sbb
xlat
sub
jo
lods
mov
pop
dec
cmp
add
outsl
mov
pop
iret
inc
or
dec
add
dec
dec
loop
out
dec
lret
mov
mov
push
fdiv
icebp
cli
lods
mov
pop
das
sbb
in
xor
aaa
adc
scas
js
inc
adc
ljmp
insl
addr16
jns
insl
imul
jge
das
loopne
rclb
jl
ss
cs
rorl
dec
iret
imul
popa
push
inc
in
sti
push
mov
scas
pop
rep
add
mov
sbb
sub
outsb
arpl
lods
jno
mov
les
das
sbb
rolb
jmp
dec
dec
cmp
inc
data16
inc
inc
dec
jb
jle
dec
js
aas
das
fistpll
decb
or
fadds
cmp
ljmp
pop
out
insb
jo
js
in
stos
loope
out
mov
ret
jno,pt
or
jbe
push
mov
inc
out
xchg
mov
enter
and
aam
mov
adc
push
aaa
pop
dec
pop
fistpll
jne
pop
jno
int
jne
jno
js
clc
clc
imul
aaa
lods
jbe
das
stos
test
mov
out
mov
rcl
out
leave
iret
in
test
aas
das
loopne
bound
lcall
decl
add
push
pushf
hlt
or
cmp
movb
push
fisubrs
insb
loop
into
data16
jb
and
leave
jmp
push
jno
jo
shll
out
repz
jb
and
aad
xor
sub
icebp
leave
orb
idivb
jg
std
rclb
sbb
mov
dec
or
pushf
call
jno
cwtl
jge
cld
into
aam
loopne
call
cld
call
jae
push
push
inc
push
xor
cs
insb
add
int
imul
sub
or
mov
es
and
push
pop
push
jne
test
push
pop
jg
dec
out
inc
push
insb
ljmp
ljmp
dec
adc
cmp
cmp
shlb
loop
pop
daa
div
cmp
ficompl
and
je
mov
push
loope
xor
xor
les
push
mov
lods
popf
mov
repnz
test
movsl
cmpsl
cltd
xchg
popf
stos
lods
lahf
aas
das
loope
or
xchg
sub
dec
push
out
insb
out
dec
add
pop
sbb
pop
and
add
sbb
mov
inc
int3
and
out
popa
push
add
fwait
mov
xor
gs
jl
nop
mov
cmp
push
mov
sahf
ret
mov
loope
dec
pop
int
icebp
mov
les
sahf
xchg
add
loop
jecxz
lret
jecxz
adc
fwait
add
aaa
xor
fisttpll
inc
mov
into
push
xchg
and
cwtl
inc
neg
call
jmp
xlat
inc
aas
das
loop
push
inc
pop
adc
mov
fcompl
dec
call
lret
fnstsw
addr16
mov
pop
jecxz
sahf
icebp
mov
stc
mov
xor
ret
lea
addr16
sbb
jl
mov
pop
xchg
mov
xchg
mov
jne
fisubl
rol
in
mov
scas
mov
ja
imul
dec
out
repnz
out
ljmp
loop
sbb
and
insl
insl
dec
out
mov
or
sub
subb
and
andb
loopne
dec
add
dec
xor
pop
mov
mov
leave
mov
cmc
mov
test
lret
add
sar
mov
xchg
inc
aad
sub
add
sbb
push
iret
mov
mov
cmpsl
mov
movsl
xchg
mov
lods
xchg
mov
das
jecxz
add
sbb
mov
cmp
jle
sub
add
mov
icebp
daa
lret
cmp
and
jge
sbb
mov
jge
inc
ss
mov
pushf
cmp
call
roll
repz
dec
jle
hlt
jge
inc
cli
cmpsb
cmp
xor
divl
lods
jbe
and
in
xchg
aas
cmp
sub
das
add
das
jecxz
xchg
dec
mov
test
shr
call
call
call
rol
pop
rol
in
scas
mov
mov
lahf
sub
and
nop
sbb
ja
cmp
imul
loop
leave
xchg
aaa
sub
stos
xchg
mov
or
lods
pop
cltd
jae
push
and
dec
add
and
fldl2e
mov
inc
cli
cmpsl
loope
pop
das
adc
cmp
ror
ljmp
roll
call
dec
pop
jno
popa
arpl
jns
jge
aas
das
in
in
mov
call
in
stc
imul
test
jecxz
jmp
mov
cmp
jge
pop
daa
cli
cmp
xchg
xchg
mov
push
notl
cmp
add
or
pop
push
test
shlb
inc
fucom
test
lret
pushf
push
ds
std
dec
jge
inc
mov
mov
push
jge
mov
mov
jmp
aam
fcomp
sar
enter
hlt
ret
aas
das
in
jge
mov
jo
rcrb
pop
push
sbb
cmpsl
sub
and
adc
push
les
pop
mov
jg
jge
cmp
addr16
repz
mov
in
mov
push
dec
add
sub
push
sub
add
xor
call
push
aaa
mov
fs
xchg
cld
add
andb
icebp
jmp
daa
into
leave
push
dec
inc
push
flds
sub
ljmp
cmp
xor
mov
xchg
mov
in
push
xchg
lret
fwait
cmp
dec
shl
cmp
mov
stos
or
aas
sbb
rcrb
bound
jno
shl
aas
mov
in
js
add
sahf
pop
inc
cli
mov
mov
inc
imul
dec
cmp
sbb
popa
adc
insb
sbb
add
fstl
lods
fildl
add
push
aaa
jae
pop
fisubrs
and
mov
push
fstpl
push
gs
push
imul
pop
xchg
das
out
xor
pushf
pushf
cmc
shr
test
cmp
jmp
xchg
call
jmp
div
aam
cli
pop
in
es
aam
fsubrs
jo
add
mov
dec
pusha
add
inc
enter
xchg
jbe
lcall
in
cmc
jnp
dec
inc
and
xorb
fbld
adc
pop
push
sbb
cmp
test
pop
sbb
iret
ja
mov
or
out
ret
or
rol
sahf
outsl
mov
mov
mov
mov
jmp
loope
das
out
adc
jmp
push
lea
pusha
lea
jns
pusha
movl
mov
pusha
pushl
mov
movl
pushl
ret
lea
je
pusha
test
cmp
add
clc
cmp
jmp
movb
lea
ja
push
lea
jb
pushf
cmpb
push
call
pop
cmp
dec
and
sbb
popa
iret
popa
decl
popf
mov
je
mov
mov
xorl
or
cmovs
or
adcl
and
push
xor
ficomps
jb
add
push
or
ret
lea
dec
lahf
cmpsb
mov
mov
push
shrl
cmpsl
inc
rcrl
lods
mov
out
ret
cli
rcr
aam
aas
das
call
btc
and
mov
mov
stc
cmpb
pushf
mov
pusha
pushf
lea
jmp
fstl
std
mov
push
mov
dec
rorb
fisubs
lret
movsl
aad
aam
mov
adc
out
movsb
test
push
cmp
testl
stos
pop
add
subb
mov
cli
stos
scas
shrl
sbb
pusha
fcomps
sub
adc
sbb
sbb
mov
push
pop
outsb
jo
push
jbe
push
jbe
das
call
add
andl
pop
xlat
xchg
data16
adc
das
notb
jmp
sbb
popa
repz
xlat
push
jecxz
jmp
jmp
addl
out
out
cld
lods
punpcklbw
adc
addl
int3
aad
xor
add
pop
or
test
mov
sub
mov
and
adc
sub
das
jmp
movsb
add
ja
nop
pop
jl
pop
cli
fs
insb
out
inc
hlt
or
pop
pop
jle
xchg
movsb
fimull
mov
mov
sub
sahf
and
es
pop
sahf
and
ret
cltd
hlt
mov
jmp
xchg
sub
and
mov
rorb
sbb
sbb
mov
or
mov
cmpsl
call
push
jecxz
jle
inc
addr16
ljmp
xchg
mov
cmpsb
test
lock
lock
fsubp
out
rcl
das
ljmp
mov
stc
lcall
add
fs
je
not
mov
pusha
push
add
test
btc
call
mov
jmp
hlt
loope
int
loop
cli
xbeginw
mov
pushf
cs
push
mov
test
xor
addr16
jl
adc
in
mov
mov
fsubrs
mov
or
inc
cmp
aam
mov
hlt
or
loop
scas
mov
rolb
jnp
sbb
push
out
aam
shl
test
and
pop
test
mov
aas
das
ljmp
loop
mov
es
adc
adc
xor
pop
pop
mov
lods
repz
aad
div
pop
sbb
fwait
call
call
ljmp
pop
fisubs
dec
out
clc
out
mov
sbb
xlat
xchg
mov
mov
in
jne
ljmp
repnz
loop
and
bound
mov
mov
aad
imul
pop
and
lret
cmp
stc
mov
mov
neg
ffreep
call
repz
repz
out
aas
das
jmp
push
jmp
cmp
jnp
enter
mov
leave
mov
das
inc
or
out
ficoml
push
cli
adc
loop
and
fdivr
and
xchg
das
lea
mov
cmp
lahf
fdivr
cmpsb
lods
cmc
popf
pop
and
imul
jp
mov
comiss
js
pop
iret
xchg
adcl
push
cmp
mov
mov
mov
mov
aas
das
in
or
xchg
push
dec
stos
test
int
andb
xor
sub
cmp
xor
gs
stc
jg
sbb
fwait
pop
adc
dec
add
lods
adc
stos
aad
lea
pop
cmpsb
je
jne
lods
movsl
mov
jns
stos
in
jge
rolb
add
sahf
dec
sub
push
cs
and
into
pop
pushf
pushf
push
cli
cmpsb
pop
stos
aam
adc
aaa
ficompl
mov
cmpb
aas
das
in
mov
clc
cmpb
jmp
add
cmp
test
movl
movzwl
rcl
neg
shld
bswap
mov
pushf
clc
call
pushl
call
pushf
setnp
lods
jmp
aam
cmp
cmovnp
outsl
aad
in
dec
icebp
pop
rorl
jnp
or
add
lods
mov
je
mov
push
pushf
lcall
loope
fisttps
movsl
cld
fs
aam
nop
push
push
push
push
ja
fwait
cld
jmp
sahf
push
pop
adc
push
shrl
mov
jmp
push
insl
arpl
imul
adc
das
in
movsb
scas
jmp
xchg
loope
pushl
cli
hlt
mov
insb
shrb
add
clc
pusha
int
jmp
xchg
sbb
push
fs
inc
leave
or
addl
push
loop
in
sbb
pop
daa
sub
dec
adc
sbb
xchg
xor
sub
subl
add
pop
inc
loop
jnp
pop
mov
mov
fwait
lcall
dec
pop
inc
push
fsubp
in
and
decb
xchg
int
jns
dec
arpl
push
pop
jp
out
icebp
iret
leave
in
aas
das
in
push
adc
lea
mov
sbb
pusha
mov
pusha
pushf
pushf
call
mov
lea
je
jmp
push
cmp
push
pusha
setnp
lea
pushf
lahf
lahf
pushl
mov
lea
jge
ja
jmp
neg
lea
jnp
pusha
dec
clc
jmp
jno
out
dec
data16
je
lea
fdivr
mov
xchg
sarl
push
adc
or
jle
dec
shrb
clc
inc
fsubrl
jb
push
addl
cld
ljmp
fnstcw
addl
bsr
sbbb
fldcw
sbb
or
cmp
inc
inc
outsl
repnz
xchg
mov
mov
pop
pop
dec
push
jmp
push
hlt
mov
sbb
clc
out
into
sar
into
enter
das
out
inc
or
lea
jne
call
fmul
pop
shr
in
pop
push
mov
nop
es
xchg
adc
xchg
jno,pt
jmp
scas
lods
pop
jb
cwtl
call
ret
repnz
sbb
xor
cmpsb
mull
test
xchg
dec
pop
mov
outsl
jg
jle
iret
imul
aam
sbb
or
mov
test
fdivrp
push
fcomps
pop
je
push
jbe
pusha
aas
das
out
call
sub
cli
lcall
bswap
jmp
lods
movb
call
xchg
jne
test
push
les
or
repz
sub
jl
scas
push
in
jecxz
pop
jl
mov
jnp
pop
movb
aas
cmp
xor
ret
mov
shrb
aam
data16
cli
lods
lret
ret
sub
cmp
cmp
cli
lods
lret
add
adcl
imull
mov
add
and
sub
lods
jnp
addr16
ja
insl
dec
push
imul
out
loop
test
sbb
mov
inc
push
inc
xchg
mov
or
add
mov
xor
pop
sbb
pusha
cwtl
pop
iret
pop
jae
arpl
mov
out
jmp
or
push
sbb
pop
jae
sub
or
data16
insb
mov
cmp
out
pop
scas
out
cmpb
mov
xchg
sbb
orb
push
pop
jno
inc
pop
jge
inc
pop
cld
sub
sub
cmp
add
aas
das
lock
add
jns
lea
jae
jmp
push
pusha
pushf
sub
test
cmc
mov
mov
cmp
jmp
mov
lea
je
cmp
test
add
cmc
cmp
cmp
cmp
cmp
jmp
xchg
ret
in
xlat
jne
aaa
jae
pop
adc
adc
add
inc
lea
stos
push
push
shlb
cmp
leave
sarl
insl
xlat
xchg
cs
pop
sub
jnp
outsl
stc
jae
ret
movl
fcompl
and
push
pop
add
ss
adc
ficoms
adc
fucomi
lds
adc
cmp
add
sub
add
xor
aas
das
icebp
jecxz
and
jl
add
xor
jmp
push
pusha
mov
pusha
push
pushf
pushl
ret
rol
jle
mov
test
mov
lahf
and
inc
lea
test
mov
dec
ljmp
pop
push
cld
in
stos
fbstp
aad
and
adc
adc
pop
out
push
mov
dec
cmp
aas
sbb
mov
xor
mov
push
aas
nop
jp
cmc
jnp
scas
mov
ja
dec
jmp
mov
scas
or
cmp
xor
cmp
adc
and
adc
aas
das
icebp
mov
pop
shl
gs
outsl
arpl
jecxz
jmp
shll
add
shl
or
mov
outsb
mov
push
loope
stc
inc
fstpl
dec
insl
dec
jecxz
cli
cmpsb
ret
orb
and
fstps
cli
cmpsb
shll
adc
and
lret
in
repz
jmp
in
imul
outsl
jns
jno
aas
das
repz
sub
pop
outsb
jo
imul
pop
xor
xchg
pop
movsl
or
stos
mov
ret
add
push
jg
icebp
or
pop
or
cwtl
mov
xor
lahf
mov
sub
das
or
dec
pop
jp
add
push
jle
ret
jns
mov
mov
mov
mov
cmp
lods
mov
mov
les
shlb
and
iret
xchg
xlat
or
clc
mov
add
adc
fstp
jo
je
pusha
jb
pop
inc
inc
js
dec
aas
das
bnd
mov
lods
pushf
movb
cmc
stc
rol
jmp
mov
lea
ja
pushf
pushf
bt
imul
cmc
clc
add
pushf
pusha
lea
jmp
aam
or
xor
cmpsl
pop
ljmp
addl
orl
stc
pop
int
lds
push
loope
inc
arpl
out
pop
dec
pop
in
mov
test
outsl
inc
add
dec
jne
dec
sbb
inc
xor
dec
dec
add
sti
bnd
pop
fnstsw
rolb
cmpsl
cmpsb
mov
push
dec
inc
cmp
and
outsl
xor
and
mov
sbb
mov
scas
andl
xchg
lea
jbe
setne
mov
shl
rol
bts
bts
add
test
jmp
xor
arpl
loop
imulb
insl
iret
jne
dec
jge
stos
mov
push
xchg
loopne
xor
add
adc
dec
ja
mov
repz
test
xor
cmp
dec
stos
and
dec
xor
mov
mov
fisubl
rcrl
push
addb
enter
inc
jb
sbb
mov
sahf
mov
sub
xor
sbb
movb
fidivs
jl
push
pushw
mov
jae
loope
shl
aad
dec
xlat
xchg
sbb
mov
pop
jle
xchg
orb
push
mov
fcom
ds
mov
dec
aam
lcall
movsl
mov
mov
mov
out
out
test
or
pop
dec
cmc
hlt
sub
cwtl
push
cld
mov
out
jp
in
mov
shl
repnz
ljmp
aas
das
hlt
movsb
lods
loop
shr
sub
adc
mov
add
mov
adc
push
push
decb
jns
fnsave
push
dec
mov
dec
scas
es
mov
and
stos
scas
cmp
les
mul
int
and
xchg
lods
movsb
mov
inc
push
or
outsb
mov
fdivrs
sahf
or
adc
lods
xchg
mov
rcl
pop
push
inc
dec
lods
lret
lahf
cmp
jmp
push
jmp
dec
dec
adc
sbb
test
mov
inc
add
lahf
adc
pop
xchg
cld
cmp
stos
and
mov
cmpsl
cmc
cmc
or
xor
aaa
xchg
nop
dec
decl
popa
pop
jo
inc
add
inc
shlb
xor
arpl
ficoms
xchg
aas
adc
lods
mov
xchg
xlat
inc
pop
pop
sub
movl
sub
sbb
mov
ja
pop
dec
jg
imul
pop
inc
aas
das
cmc
ret
mov
loopne
inc
std
incl
mov
arpl
push
fldcw
pop
shll
movl
pop
lods
scas
insb
flds
mov
nop
test
mov
dec
or
xchg
sti
or
mov
out
pusha
cmpsw
std
pop
addb
imull
imul
pusha
adc
sti
leave
jecxz
xlat
aas
das
testb
rcr
bswap
push
and
jmp
pushf
sub
movw
cmp
pushf
pusha
movl
pushf
lea
jmp
xchg
les
repnz
push
mov
mov
mov
dec
mov
pop
imul
mov
mov
or
sub
shrb
mov
xchg
divl
enter
jno
cli
fwait
xchg
jmp
scas
or
inc
and
sbb
out
aaa
jae
xchg
mov
jp
jge
push
dec
pop
imul
xchg
stos
mov
das
divl
aaa
fmulp
imul
imul
lock
enter
enter
loop
mov
pop
push
cmp
xchg
imul
aas
pop
dec
sbb
js
dec
and
out
mov
daa
sbbl
cli
stos
xlat
mov
movsb
and
cmp
xor
pop
xor
pop
aaa
stos
mov
subb
das
mull
imul
sub
stc
mov
scas
and
cs
cltd
mov
sub
push
sbb
mov
cld
addr16
rcrl
push
mov
decl
mov
and
cmp
push
inc
arpl
inc
leave
sbb
mov
sbb
sbb
mov
addr16
shll
mov
jg
jle
inc
dec
fistps
das
push
addr16
test
cmp
dec
adc
add
jne
dec
call
add
inc
dec
jbe
dec
fs
dec
jb
inc
pop
pop
dec
aas
das
clc
lret
inc
push
filds
lock
or
fxch
xchg
mov
sub
fisubl
js
iret
mov
lret
inc
hlt
cmpsb
sub
stc
roll
cld
repnz
sbb
addr16
call
js
out
fwait
mov
rcrb
inc
sub
data16
sbb
int3
push
pop
mov
cmp
scas
xlat
sahf
xorl
xchg
fiadds
jns
or
dec
and
cmp
pusha
push
xor
mov
xchg
xchg
or
es
pop
jl
call
cwtl
mov
ret
push
xor
sub
add
or
cmp
sbb
aas
das
clc
movsb
scas
jmp
mov
test
mov
adc
movl
jno
jne
jne
aad
lea
sbb
nop
mov
cmp
add
cmp
and
in
ret
aam
mov
out
loope
cmp
std
iret
out
dec
dec
push
arpl
lods
add
fsin
mov
movsb
mov
stos
pushf
mov
das
stc
cmp
add
mov
mov
ja
pop
stc
inc
flds
rcll
lret
dec
push
lds
and
in
inc
iret
lret
daa
add
mov
add
jl
mov
mov
ss
mov
mov
fs
xchg
cmpsl
insb
stos
mov
push
dec
mov
or
and
lcall
sub
aam
fadd
call
lock
aas
das
stc
push
in
daa
das
mov
add
inc
mov
mov
enter
inc
or
mov
neg
movsbl
sbb
lea
add
pusha
mov
pusha
push
call
call
jo
xchg
iret
pop
or
add
add
div
movsb
jne
push
rorl
mov
repnz
je
shlb
push
arpl
xor
je
out
adc
loopne
repz
adc
cld
mov
xchg
push
pop
jecxz
iret
mov
xor
mov
lahf
hlt
and
icebp
rcll
ror
dec
sub
xor
cltd
xchg
sbb
cmp
xor
sub
aas
das
cli
cwtl
pop
xchg
jmp
rol
pushf
jmp
pushf
notb
add
jge
add
je
pop
js
insb
movb
hlt
aam
or
mov
inc
xlat
sahf
xchg
jbe
xchg
lret
test
lods
push
adc
imul
inc
daa
pop
aam
push
adc
jne
sub
out
lock
dec
lcall
ljmp
stos
pop
mov
xchg
out
sti
fcoms
stc
dec
bound
jl
push
xchg
mov
ja
mov
repnz
in
scas
xchg
pop
insl
dec
jne
jge
push
dec
gs
dec
jg
dec
aas
das
sti
jg
add
mov
pop
xchg
iret
rolb
sub
mov
xor
bnd
bound
cmpsl
sub
cmp
pop
cmpl
inc
or
dec
lea
cmp
pop
cmpl
lds
rorb
inc
and
stos
sub
pop
out
xor
adc
mov
inc
lds
inc
xlat
rorl
xchg
cmpsl
mov
cmpsl
cltd
xchg
mov
sti
ss
and
sub
add
stc
lea
add
dec
bswap
mov
shl
rcr
mov
test
bt
clc
cmc
repnz
call
stc
add
push
push
cmc
pushl
movzwl
sub
inc
inc
mov
push
add
cmc
mov
clc
cmc
mov
cmc
test
push
lea
je
stc
push
add
pusha
pushf
cmp
cmp
mov
jmp
xor
ret
jbe
mov
mov
pop
cld
dec
hlt
jb
jp
outsb
aam
pop
dec
movntps
cld
jae
test
js
pushf
icebp
cmp
enter
clc
add
jae
jle
xchg
bound
inc
and
push
push
push
cmpsl
mov
sub
rorb
loop
cli
pop
out
stos
cli
cmpsb
in
imul
xchg
enter
inc
into
or
lods
stos
xchg
mov
sub
add
add
das
cld
lods
mov
test
pop
test
leave
sub
push
in
jmp
push
icebp
jae
sti
in
inc
or
pop
inc
insl
adc
dec
push
loopne
aas
jnp
pcmpgtb
bound
notl
jle
lock
sub
sbb
inc
lret
cmpsb
and
fisubl
fcoml
pop
lea
addr16
pop
cltd
jmp
inc
sti
in
loope
aad
int
stc
fcmovne
aas
das
std
inc
cmovo
inc
and
jbe
xor
cli
decl
fsubrl
pop
push
push
data16
dec
loopne
sbb
sub
push
iret
mov
pop
je
add
mov
xor
popa
stos
jmp
cmc
jne
adc
push
adc
imul
xlat
lcall
and
mov
add
sub
loope
sub
jge
or
sbb
mov
dec
add
fimull
out
and
std
add
jno
cld
mov
adc
int3
adc
mov
pop
mov
je
shl
rcrb
xchg
fwait
popf
mov
mov
xchg
push
pop
or
outsb
insb
adc
cmp
outsl
xchg
xchg
mov
insl
imul
fcoms
scas
push
push
jnp
dec
xorb
adcb
push
mov
xor
lgs
push
in
test
dec
xchg
out
mov
push
mov
lahf
scas
shr
shrl
push
xchg
imul
sar
inc
sbb
push
nop
or
add
mov
or
popa
pop
mov
xor
pop
fcmovu
shll
pop
push
jbe
push
pop
dec
dec
js
pop
aas
das
mov
fsubl
xlat
imul
jno
jge
jns
outsl
sub
ja
clc
js
or
pop
and
int3
loop
adc
or
lcall
popa
sbb
xlat
cmp
bound
mov
sbb
ljmp
loopne
or
test
outsb
int
movb
nop
push
jb
js
sbb
push
pop
push
or
push
mov
popf
xchg
mov
aaa
xor
sub
aas
das
decl
decl
add
pushf
test
cmc
test
add
pusha
pusha
pushf
lea
jmp
loope
data16
xchg
push
repz
xor
jge
xchg
mov
js
lea
xorl
mov
mov
pop
mov
lea
mov
stos
mov
adc
mov
jle
int
sbb
les
xor
sbb
loopne
xchg
enter
gs
sarb
dec
outsb
push
bound
jb
jp
aas
das
fsubp
movsl
mov
or
xchg
adc
cmp
and
rcl
nop
jecxz
clc
mov
mov
insl
sbb
test
push
or
data16
stc
jge
cmpsb
mov
aas
das
jp
xchg
sahf
inc
clc
mov
add
xchg
mov
in
sti
jmp
out
aas
xor
fs
and
xchg
jmp
dec
push
jp
xor
mov
inc
iret
addb
sbb
decl
push
lcall
push
stc
lret
addr16
out
les
ss
aad
aas
stc
and
xor
jno
and
add
sbb
movsb
andb
inc
jp
mov
inc
pop
xlat
push
dec
or
jbe
dec
fidivrl
mov
les
or
aaa
adc
add
or
push
sahf
pop
dec
lock
bound
aad
fistl
cwtl
xor
mov
and
dec
push
in
sub
lea
and
xchg
ret
ficomps
pop
xchg
dec
push
jmp
xchg
aam
add
insb
fs
mov
jge
mov
outsl
sub
out
xchg
enter
mov
int3
push
cmpsb
jmp
gs
adc
ds
sti
or
andl
sbb
call
lods
adc
or
sub
cmp
and
sbb
or
xor
xchg
cmp
cmc
cmp
call
mov
cmp
push
adc
dec
fisubrl
repnz
cli
pusha
push
sbb
test
and
push
cmp
lret
xchg
sarl
fs
pop
push
jnp
dec
jp
pop
xor
mov
rorb
adc
sub
addl
test
push
inc
mov
xor
adc
jne
or
iret
sbb
cs
mov
push
jl
sbb
push
aas
xor
push
imul
cmp
xchg
or
xor
sub
or
sbb
xor
xor
mov
fs
jbe
shl
sub
shr
shrd
bts
bt
mov
bswap
btc
shr
mov
pusha
xadd
add
add
and
bts
ror
add
shr
and
cmp
rcl
cmp
mov
movzbw
shld
movzbw
add
movsbw
movsbw
jmp
pop
pushf
pushl
ret
cld
lods
push
nop
xchg
dec
imul
mov
mov
and
mov
flds
inc
push
das
pop
int3
or
inc
push
flds
dec
cmc
fcompl
frstor
mov
outsl
pop
cmp
pop
mov
js
cmp
das
xchg
test
rcrb
xchg
mov
cmp
fcmove
jecxz
pop
mov
test
in
cltd
or
xor
cmp
pusha
lcall
push
fs
dec
bound
dec
pop
pusha
push
bound
xor
mov
add
inc
stc
neg
clc
cmc
push
cmp
lea
jmp
fwait
mov
andb
iret
push
out
xlat
jge
push
jge
push
push
dec
sbb
pop
mov
push
jne
rcl
pusha
ret
or
mov
stc
mov
pop
int3
sub
pop
xor
ds
dec
jmp
push
bound
fdivr
into
in
iret
fsubrs
jbe
add
in
pop
into
aam
mov
xorl
ja,pn
sub
jo
inc
adc
lret
jge
and
inc
insb
push
push
jp
adc
xor
and
fs
fnstsw
lcall
insb
push
push
dec
bound
pop
push
aas
xor
fnsetpm(287
mov
repz
call
xor
jb
sbb
sbb
gs
popa
push
ret
mov
adc
js
cmpb
adc
sbb
repnz
push
shll
hlt
outsb
je
push
mov
lods
ss
pusha
jmp
out
sub
jbe
cmc
adc
ss
inc
push
push
xchg
sub
jne
rcl
xchg
loope
push
push
mov
jo
xor
stc
cltd
push
fstps
sbb
int
fimull
add
xchg
xchg
cmc
jbe,pn
je
jae
cmp
repz
js
cmp
push
mov
cmc
xor
data16
dec
jp
nop
mov
jo
aas
jb
lock
repnz
fnstcw
sbb
adc
push
and
fwait
xlat
test
push
push
insb
cltd
xchg
lcall
push
mov
nop
cmpsl
nop
bound
shrb
cli
in
xchg
push
jo
test
stos
fnstcw
mov
xchg
mov
push
sahf
mov
faddl
xor
dec
mov
xor
stos
mov
lds
sti
jle
out
jbe
adc
out
pop
into
aam
inc
dec
mov
rolb
sahf
pop
mov
sahf
ret
enter
in
out
dec
sarl
inc
fisttpll
mov
fcoml
jb
sbb
aaa
js
dec
repnz
lock
inc
mulb
cld
push
cli
testb
jg
lds
notb
mov
adc
mov
lcall
pushf
jge
jnp
ja
js
fnstsw
push
mov
movsl
mov
pop
mov
inc
aas
mov
mov
add
jp
lods
int
fsts
mov
mov
je
push
mov
je
or
add
pop
mov
cli
dec
push
aas
in
lret
repz
fsubr
dec
mov
pop
push
out
outsb
dec
adc
incl
sbb
jle
mov
mov
out
int3
stos
add
ficoml
mov
rclb
data16
mov
mov
xlat
sbb
std
ja
mov
aad
iret
mov
outsb
mov
test
scas
mov
gs
lret
xchg
fidivrl
push
in
lahf
mov
mov
mov
std
inc
lods
cld
outsb
pop
pop
icebp
int
jne
push
ret
cwtl
enter
add
and
sahf
adc
fdivrl
aam
std
int3
sahf
dec
dec
shl
mov
inc
iret
ret
push
int
into
dec
fstl
and
cs
pop
outsl
jnp
sarl
jle
mov
ret
fcomip
fcoml
push
jmp
jo
es
mov
in
clc
mov
fdivr
clc
cmp
sub
mov
push
dec
out
insl
fnsave
inc
aaa
enter
fisttpll
fcomp
push
sub
mov
mov
fcmovb
shr
mov
fisttpll
lods
mov
insb
jge
aad
mov
and
jge
push
lock
in
out
test
pop
pop
lock
inc
sbb
pop
jnp
pop
iret
adc
push
scas
xor
xlat
out
dec
cmp
outsl
pop
and
pop
pop
scas
iret
xchg
mov
lds
pop
push
lea
push
mov
cmp
dec
cmp
push
sub
je
repz
mov
addr16
into
iret
mov
mov
xlat
out
jbe
fildl
fcomps
adc
addr16
pop
test
fwait
sbb
ret
mov
shl
and
xchg
pop
inc
pop
inc
pop
sbbw
and
int3
pop
add
cmp
fldt
out
inc
ret
pop
gs
adc
pop
rcl
repz
aas
mov
iret
xchg
shll
stos
dec
pop
jns
xor
sbb
mov
cld
cltd
lods
shlb
aad
aaa
leave
test
das
test
dec
pop
mov
stc
orb
fstl
cwtl
ss
xchg
out
mov
jne
rol
adc
rorl
nop
push
stos
std
lods
shr
lods
push
std
stos
pop
addr16
out
pop
es
into
pop
hlt
rcrb
jle
inc
stc
fstpl
in
jle
sbb
fstpl
int3
jge
aad
cmp
sahf
cmp
sbb
shlb
mov
shlb
shrb
jnp
insb
shl
aad
out
shll
or
aad
mov
xchg
aad
ret
push
ret
push
add
scas
lods
pushf
xchg
fiaddl
lcallw
test
dec
pop
sbb
mov
mov
std
xchg
lret
sar
inc
aam
cmp
movsb
push
mov
out
pop
adc
push
xchg
in
std
test
fistps
movsb
out
addr16
dec
out
std
pop
leave
outsl
sbb
out
cmc
mov
out
sbb
mov
pop
cld
aam
std
icebp
mov
insb
pop
out
fwait
std
cld
jl
fbstp
cmp
jae
aad
jns
shll
sbb
int3
cwtl
pop
js
inc
push
iret
sbb
mov
cmpsl
sbb
pop
cld
out
xchg
std
in
push
dec
jmp
std
lods
aas
ds
sti
sub
or
std
fmull
insb
xchg
std
xorb
ret
push
std
push
pop
gs
cld
pop
push
enter
mov
pop
cld
in
lret
fwait
push
out
aad
cmp
mov
dec
cmp
lea
rcl
cmc
push
xor
jge
mov
mov
adc
sbb
or
fwait
jne
jns
dec
aad
jge
fst
int3
jmp
xchg
dec
sub
ret
fimull
fiaddl
std
sarl
std
sbb
scas
insb
jge
movsl
mov
sbb
aam
push
mov
xor
xor
adc
pop
xchg
fmuls
fldl
cmp
cmp
shll
mov
or
pop
add
pop
add
mov
jg
dec
flds
adcl
fld
hlt
fld1
xchg
aam
jns
jbe
dec
xor
jge
insb
add
jns
mov
out
rorb
nop
sub
iret
sub
dec
sub
scas
iret
sub
sub
adc
pop
int
adc
sbb
ds
mov
sbb
xchg
ds
cltd
insl
xor
mov
push
mov
xchg
or
xchg
pop
mov
pop
nop
pop
push
sbb
adc
sbb
rclb
sbb
pop
push
leave
push
ret
out
ret
fcomps
pushf
aam
popf
adc
lods
mov
adc
mov
push
xor
xchg
mov
push
sbb
into
cwtl
inc
cmc
lret
std
jb
mov
inc
cmc
dec
sbb
int
jae
sub
push
into
nop
fstpl
aad
sub
inc
jns
popf
xchg
pushf
nop
push
fnstenv
ss
push
push
pop
into
fstl
shll
mov
push
sub
cmc
sbb
cmp
push
cwtl
push
mov
push
pop
stos
push
int
cmp
sbb
popf
lds
insb
pop
int3
sbb
or
ficoml
ficompl
lret
lods
popf
mov
jb
test
xchg
shlb
iret
push
or
nop
mov
push
adc
push
jne
rclb
push
xchg
mov
pop
insb
push
lcall
shlb
xor
insb
adc
ffree
and
pusha
sbb
hlt
mov
test
je
hlt
sub
ficompl
dec
aad
stos
inc
xchg
scas
mov
insb
mov
mov
pop
add
pop
idivb
mov
les
pop
js
ds
cltd
mov
pop
xor
sahf
xchg
lret
mov
pop
pop
pop
mov
pop
jl
stos
adc
addr16
or
pop
push
dec
dec
jp
adc
sarb
jl
iret
pop
sbb
popf
sbb
rcr
inc
aad
dec
mov
pop
push
cmp
xchg
jno
int
movsb
aam
rolb
fld
mov
xchg
adc
ss
js
jbe
pop
aas
jae
mov
mov
lods
repnz
jg
hlt
sbb
mov
jg
and
sbb
jae
mov
addb
sahf
pop
add
je
xor
fcompl
movsl
add
sahf
push
jae
iret
insb
in
lods
dec
pop
fwait
repz
mov
cmp
push
pop
int3
fcmovnu
fildll
insb
sar
out
add
jl
int
jle
fnsave
out
pop
jbe
fcoms
push
rcrb
les
lret
dec
jno
cmp
xchg
pop
push
sbb
dec
mov
mov
pop
loope
and
cmp
mov
sbb
lods
aas
fldl
push
in
aas
int3
fmull
pop
rolb
sarl
enter
mov
nop
xlat
and
jnp
imul
xlat
push
cmp
xchg
add
outsb
testl
push
pop
pop
cltd
inc
insl
sbb
rcrb
jle
xchg
ror
pop
insl
adc
es
shll
cmc
ret
cltd
fisttpll
lcall
jns
inc
push
mov
enter
xchg
aas
cs
lret
jne
cmp
outsb
xor
mov
scas
pop
push
or
jle
dec
cli
outsb
push
cltd
movsb
mov
into
rcr
xchg
pop
in
xor
adc
test
dec
xor
and
pop
mov
int3
xlat
sbb
rolb
add
xor
lret
cmpsl
pop
in
and
xor
jno
dec
mov
push
pop
cmp
mov
add
mov
ret
sbbb
push
xor
cmc
pop
enter
xchg
jb
inc
push
mov
cmpsb
push
mov
stos
iret
cwtl
jo
adc
cmp
dec
jge
lds
jne
dec
aad
int3
xor
inc
sbb
push
shlb
jbe
jp
add
jno
pusha
je
mov
adc
icebp
push
jbe
pop
lcall
mov
push
int
dec
stos
aam
jne
ds
xor
fcmove
dec
jne
push
inc
sbb
push
repnz
fmuls
mov
push
pop
mov
mov
mov
mov
sub
fdivrl
sahf
movups
xchg
inc
jno
fldt
stc
mov
sti
fisttpl
fdivl
shl
jmp
mov
in
cmp
dec
cwtl
dec
scas
jle
inc
adc
leave
push
iret
xlat
dec
pop
fadd
shl
mov
adc
shrb
xor
repnz
ss
test
pop
sub
pop
jl
or
or
dec
ret
sub
mov
dec
aad
mov
popf
or
xlat
add
push
int
lds
adc
aaa
pop
fucomp
fsubrl
adc
mov
push
and
mov
jmp
pop
inc
push
movsl
xchg
out
ror
lds
shlb
icebp
in
push
add
inc
lds
shl
push
std
mov
sahf
push
pop
push
dec
dec
int3
lret
xchg
stc
sarl
pop
push
adc
mov
jbe
dec
dec
pop
fsubr
movsl
negl
stos
lret
sub
test
adc
xchg
sbb
into
lcall
jp
pop
addr16
push
fdivrs
cmpsl
inc
int3
repz
mov
rcl
out
mov
fcompl
inc
fmulp
xchg
and
ror
mov
fdivrl
lods
das
adc
push
adc
int3
pop
ror
push
add
adc
ret
cmp
push
jno
dec
dec
pushf
fnstcw
inc
adc
hlt
sub
mov
ds
clc
sar
ds
jge
rclb
jge
sub
fmull
pushl
xlat
addr16
je
into
adcb
in
xchg
add
sahf
adc
ret
stc
test
jp
inc
cwtl
movzwl
mov
xchg
test
pop
mov
push
jbe
xlat
ret
mov
fpatan
push
lret
ficomps
fildll
mov
loope
jmp
nop
xor
sarb
cmp
push
dec
mov
pop
cltd
jge
push
lds
insb
leave
loope
pop
nop
insb
or
idivl
dec
aam
sbb
dec
repz
push
lret
sbb
inc
into
rolb
xlat
pop
pop
xlat
into
mov
inc
jmp
scas
inc
sbb
adc
inc
xchg
outsb
out
push
lret
xor
or
insb
xor
lcall
jnp
js,pt
push
cmp
push
aam
fst
rcr
adc
fyl2x
cld
pop
das
insb
push
push
jns
outsb
les
lods
aaa
movsl
push
sbb
cwtl
sti
fwait
lahf
dec
jns
push
xchg
mov
xchg
lcall
movb
movsb
jbe
inc
mov
in
mov
ret
sahf
jae
inc
xchg
fnstcw
rcrl
jle
hlt
fwait
adc
dec
mov
negl
fmul
jg
push
mov
sbb
pop
add
dec
dec
dec
rcrl
in
lods
xorb
xchg
movsb
ret
xchg
pop
pushf
repnz
push
push
dec
les
sarb
adc
add
leave
jmp
add
push
jbe
mov
pop
pusha
in
sub
rcll
jle
push
pop
xchg
adc
movsl
dec
ficompl
cltd
mov
fnstsw
std
shll
adc
push
fcoml
ret
push
int3
or
in
addb
jmp
cmp
mov
mov
rcrb
insl
call
icebp
xchg
push
jle
dec
loop
pop
xlat
clc
xor
push
mov
sbb
repnz
pop
popf
push
sub
and
iret
sub
ds
cs
xchg
arpl
lret
enter
sub
leave
loopne
iret
push
push
std
aad
stos
push
xchg
lds
mov
mov
sub
mov
movzwl
leave
xchg
sbb
rcrl
and
pop
gs
sahf
mov
insl
push
cli
cltd
dec
stc
or
add
fwait
clc
push
dec
ss
mov
push
pop
dec
push
push
mov
dec
or
jge
in
dec
lods
pushf
mov
adc
stos
aad
mov
add
pop
push
cmp
pop
int3
pop
into
rcll
scas
push
lret
int3
pop
imul
mov
push
mov
pushl
fstp
fisttpll
aam
mov
lret
xchg
mov
adc
dec
mov
jg
rcrb
xchg
dec
pop
rcrl
int3
sbb
ror
xchg
int
push
xchg
xchg
lret
out
cwtl
xchg
fmuls
xchg
xchg
xchg
cmp
mov
jb
fwait
sbb
sub
dec
inc
shrl
add
xchg
icebp
rcrl
loopne
fwait
into
dec
xchg
xchg
xchg
sbb
mov
cmpsl
jae
push
aad
pop
icebp
dec
push
push
jne
lcall
push
add
xchg
fstp
mov
ficompl
push
shll
xor
in
bound
xchg
dec
sbb
fcmovu
lahf
lea
jae
fdivr
dec
jle
fwait
mov
sub
rclb
int
mov
mov
shlb
dec
mov
cmp
pop
mov
jge
jb
test
fdivrl
and
rorb
popl
es
push
aam
xchg
ds
sub
or
aad
pop
adc
fwait
lret
dec
enter
repnz
fwait
dec
inc
mov
lods
add
dec
dec
mov
int3
cmp
fwait
repnz
push
lcall
adc
mov
pushf
cmpsb
mov
lret
pop
mov
shlb
push
insl
lahf
jae
fwait
xor
jl
insl
pop
or
aad
bswap
sbb
mov
adc
pop
cli
fmuls
push
mov
ret
push
rcrl
lret
roll
mov
dec
jge
dec
fstpt
movsb
je
xor
ficomps
mov
cwtl
mov
mov
les
sti
scas
nop
stc
aam
pushf
mov
push
pushf
pushf
mov
lret
es
popf
or
sbbl
jne
ret
inc
inc
dec
fmull
imul
and
pop
hlt
pushf
int3
sbb
inc
push
pushf
mov
xor
sbb
sub
mov
mov
add
inc
sbb
dec
test
cmp
pushf
je
push
sub
orl
mov
mov
xchg
push
adc
rorl
je
iret
iret
fildl
pop
test
mov
in
inc
icebp
sbb
xchg
push
into
movsb
mov
rorl
adc
sbb
aam
lea
push
mov
mov
jg
dec
xchg
cmp
ret
mov
sbb
pop
int3
xchg
push
iret
lods
lea
or
fcmovne
enter
xchg
push
repz
fadds
mov
imul
ficompl
sbb
cmp
pop
inc
mov
sub
push
mov
pop
push
cmp
movnti
dec
lret
push
arpl
push
inc
pop
inc
clc
mov
adc
stos
xchg
mov
pop
insl
or
test
fimull
xchg
mov
shll
fwait
lods
adc
xchg
rcrl
push
pop
fisubrl
or
push
mov
pop
xor
ficompl
push
gs
sbb
xchg
sbb
enter
push
fdivl
xor
add
fdivrp
test
inc
lahf
mov
push
dec
in
call
pop
loopne
call
sbb
adc
sub
pop
add
test
cs
mov
and
adc
fstpl
divb
mov
adc
jns
add
push
xor
xchg
mov
adc
data16
xor
aaa
xchg
fnsave
sub
sub
ds
xor
sub
and
stos
or
repz
jno
aas
xor
xor
stc
jne
mov
ret
dec
call
out
loopne
hlt
aas
xor
jne
cmp
mov
mov
inc
jl
xchg
or
and
push
push
ja
xor
into
mov
into
push
insl
cmp
sbb
sub
lea
out
test
sub
sbb
xor
popf
or
fisubrs
ret
jnp
mov
xor
inc
add
cmp
mov
add
sbb
stos
adc
fisubl
test
lds
aam
lods
hlt
outsl
xor
imul
rolb
int3
pop
andb
xchg
mov
aas
xor
sub
jmp
out
mov
and
add
movsbl
movzbw
push
mov
call
pusha
pushf
pusha
mov
mov
movb
lea
jmp
repz
rolb
iret
push
push
dec
or
add
in
std
fsubs
cmp
std
hlt
out
aaa
pop
fcomps
push
nop
aam
clc
stos
xchg
cli
cmpsb
mov
mov
clc
pop
and
insb
sub
jge
cmpsb
mov
stos
das
adc
cmp
xor
sub
rorb
outsb
dec
inc
pop
dec
push
jp
dec
jl
aas
xor
in
mov
dec
arpl
cmp
cmc
outsl
jmp
dec
icebp
addr16
jae
jno
cmp
inc
mov
stc
rcr
sbb
test
fmull
das
mov
addr16
inc
sub
loopne
mov
fcomp
jno
push
dec
scas
mov
pop
jae
cld
cli
test
push
hlt
in
xchg
rorb
jle
add
and
sub
push
mov
ja
ss
loopne
fsqrt
jo
into
or
sbb
cmp
and
xor
adc
adc
dec
inc
dec
dec
xor
cs
insb
add
setns
sub
jecxz
jno
pop
jmp
repz
inc
sti
in
cmc
mov
xchg
xor
push
lods
xor
xchg
adcl
stos
xchg
xor
jmp
xchg
xor
dec
stos
cmp
dec
push
jbe
mov
mov
movsl
frstor
push
mov
xlat
xchg
cmp
cmpsb
jl
sbb
pop
sub
xor
push
repnz
xchg
mov
cwtl
xchg
xor
add
cmpb
add
sbb
pop
ljmp
je
js
in
mov
nop
test
lahf
sar
and
fidivl
pop
repz
inc
mov
jecxz
repz
adc
int
icebp
pop
gs
xchg
jmp
adc
jb
mov
push
or
pop
ds
and
subb
or
jbe
push
dec
pop
fs
dec
jb
inc
dec
jle
xor
cmc
ss
jb
rcll
xchg
jae
imul
cmp
cmp
loope
lock
mov
sbb
and
les
inc
int3
pop
in
push
int3
data16
ret
lahf
or
sub
lds
lods
call
ds
les
push
jecxz
leave
std
in
pop
jns
mov
add
jae
dec
or
rorl
js
iret
dec
filds
xor
sbb
sub
adc
xor
add
adc
xor
fwait
cmpsb
jmp
aam
mov
or
cmpsl
add
pop
cmp
arpl
xor
popf
in
jns
flds
int3
mov
test
in
push
int3
clc
mull
mov
test
pusha
leave
sbb
jmp
dec
inc
or
in
loope
add
sub
mov
sub
in
loope
lock
dec
addb
gs
xor
xor
sub
shrb
inc
jae
lcall
pop
xchg
mov
adc
mov
xor
or
and
adc
add
aas
xor
lods
mov
int
dec
hlt
clc
fisttpl
cwtl
leave
lea
xchg
xor
pop
cltd
or
aaa
fwait
lea
shrb
sub
cmp
or
pop
xchg
fcomi
aam
adc
cmp
inc
dec
pop
adc
jp
aas
addl
xchg
inc
cmpb
xchg
push
lcall
std
jnp
pop
je
xchg
fcomps
sub
aaa
cmp
popf
sbb
call
iret
xor
es
pop
int
push
inc
cmp
xor
daa
jmp
pop
add
or
add
or
xor
dec
add
add
jns
cli
inc
add
sbb
in
fs
ja
jmp
cmc
movzwl
movsbw
shrd
shrd
shld
mov
clc
add
pushl
mov
cmp
pusha
test
pushf
pushf
lea
je
clc
pushf
bt
mov
add
cmc
bt
test
cmp
push
movb
lea
jb
cmc
pushf
jmp
pushl
pushf
lea
jae
bt
cmp
call
pusha
jne
pop
pop
jp
repnz
inc
ret
fs
sbb
adc
test
fbld
imul
cli
jle
sbbl
mov
sahf
sbb
pop
push
jecxz
stc
cmpsl
and
out
stos
sbb
xor
push
push
imul
cmpsb
xchg
ret
jmp
and
in
xchg
cmpsb
xchg
and
adc
test
sbb
mov
lods
sbb
sbb
and
sbb
or
and
add
xor
and
jmp
push
mov
movb
push
pushl
ret
stc
push
sub
clc
stc
jmp
cmc
sub
stc
shl
add
rol
and
xor
mov
sar
and
mov
cmc
cmc
cmc
test
repnz
push
call
mov
pusha
movb
push
push
lea
jmp
push
or
adc
dec
int3
push
in
inc
aam
fmull
loop
xchg
call
pop
ret
iret
xor
sbb
rorl
aad
add
shrl
mov
sub
sbb
gs
jbe
cmp
lret
aaa
cmp
cmp
iret
add
out
rcl
outsl
xchg
xchg
cmovno
dec
lds
cmp
and
out
cmc
jmp
sahf
xor
das
pop
xor
mov
popa
inc
add
pop
insb
jle
dec
insb
outsb
jle
xor
cli
mov
xlat
sarl
lods
setno
test
idivb
rcrl
jbe
pop
xorb
mov
mov
cmc
inc
xlat
xchg
int3
lea
dec
shlb
lock
mov
test
insl
adc
and
pop
push
cmp
fcom
cli
test
sub
adc
mov
cwtl
add
dec
call
jle
xor
scas
mov
lods
lahf
mov
push
push
and
add
mulb
sbb
mov
aam
int3
pop
call
dec
pop
dec
sbb
je
vpshufb
sub
outsb
scas
mov
sub
loope
hlt
loopne
data16
sub
xchg
or
sub
movsl
ljmp
imul
add
mov
in
test
push
or
cwtl
xchg
pop
scas
lock
repnz
lock
in
jb
aas
xor
xchg
ljmp
jo
dec
jno
push
fst
stc
leave
aas
xor
push
adc
add
xor
mov
mov
jmp
mov
call
mov
movl
bt
jmp
pop
push
flds
out
mov
dec
leave
inc
fnstenv
dec
jmp
aad
jg
and
xor
clc
insl
and
loop
mov
pop
sbb
jmp
adc
daa
fists
adc
out
ljmp
pop
daa
mov
outsb
sub
jne
jne
lods
or
xlat
cmc
dec
add
cmc
pop
push
push
andl
neg
call
out
stc
fucomip
fnstcw
xor
popa
pusha
das
jb
push
cmpb
push
mov
lea
jne
shrd
neg
btr
mov
push
jmp
call
jmp
or
sbb
ja
enter
addr16
jno
add
int3
hlt
and
or
fistps
jl
xor
insb
sub
xchg
add
push
cld
pop
in
push
jbe
dec
rcl
in
inc
inc
pop
movsb
je
add
movsb
mov
lock
sti
stos
cmpsb
das
lea
loope
sbb
std
call
rdtsc
jmp
je
jns
lock
stos
insl
repz
outsl
pop
jae
inc
jno
jne
dec
push
inc
pop
aas
xor
sub
and
jne
rcr
mov
jns
pushf
cmp
add
call
ja
int3
pushw
xor
lret
sbb
aam
cmp
inc
push
xor
leave
pop
xor
cmp
js
or
cmp
subl
sub
mov
pop
and
sti
push
push
push
andl
pop
or
dec
mov
adc
xor
and
add
and
xor
andl
xor
xor
xor
loope
xor
aad
daa
test
mov
lea
mov
xchg
and
mov
dec
cmp
or
loopne
push
dec
jns
sahf
arpl
push
dec
out
pop
test
cli
add
mov
push
push
jo
jp
jne
insl
dec
adc
cmpsb
ss
jno
in
lret
leave
jecxz
sti
cmc
xlat
in
aas
xor
arpl
rorl
xorb
ljmp
cwtl
jmp
cmc
stc
cmpb
pusha
call
jmp
jmp
jmp
sub
lea
jl
pushf
pusha
lea
jb
call
push
dec
dec
dec
dec
cs
insb
add
mov
and
jge
repnz
insb
ret
push
imulb
in
xchg
fwait
add
dec
mov
jo,pt
mov
dec
out
mov
fcomps
ret
popf
dec
and
cmp
cltd
sub
mov
sbb
jmp
popa
out
sbb
inc
stos
xchg
dec
xor
mov
lahf
xor
push
jb
xchg
lahf
lea
inc
inc
sub
xchg
sbb
and
or
dec
js
jl
fs
push
outsb
js
aas
xor
leave
mov
lea
jne
sub
xor
bsr
mov
jmp
fisttpll
data16
inc
jo
xchg
pop
mov
test
xor
jo
fcmovbe
mov
lods
jmp
fdivl
jne
sub
mov
insl
adc
fcmovbe
mov
scas
repz
or
xchg
jmp
mov
test
add
fstl
fxch
ljmp
lods
mov
mov
mov
sahf
aas
xor
inc
or
int
addr16
gs
push
inc
mov
and
sbb
sub
sbb
ja
jno
xor
cmp
cmp
xchg
mov
pop
push
fs
test
cmp
incl
mov
cmp
adc
nop
push
mov
cs
mov
aam
mov
sbb
sbb
sbb
xor
xor
mov
hlt
sub
pusha
movb
lea
jmp
cwtl
lea
xchg
popf
mov
push
les
callw
dec
fcoms
shl
mov
repnz
jne
repnz
sti
mov
sbb
inc
or
mov
shlb
adc
lods
test
outsl
cmc
push
jge
add
sahf
testl
ret
jb
mov
inc
cli
sahf
testl
insb
pop
push
sbb
ficoml
ret
loopne
inc
inc
ss
jne
push
xor
es
xchg
sub
outsl
cmpsl
lea
pop
mov
cltd
mov
inc
inc
je
js
push
push
jp
pop
dec
data16
xor
je
call
rcrb
lcall
xor
add
push
pop
daa
dec
or
ret
in
cmpsb
push
pop
std
mov
popa
adc
jb
outsb
adc
push
inc
cmpsb
or
icebp
cmp
sub
popa
loope
sbb
pop
lea
orl
cmpb
dec
test
pop
lds
mov
lahf
lea
xor
subb
xor
and
cmpsl
sbb
or
xor
out
out
roll
mov
xchg
xchg
or
subl
push
cmpl
pop
bound
cld
mov
cli
movsl
lods
outsl
or
mov
push
or
sahf
or
and
data16
mov
mov
lea
cmc
adc
aam
imul
sbb
cmp
iret
enter
loope
dec
loop
lock
inc
int
out
mov
jmp
or
jb
push
sub
addb
dec
jno
inc
ja
push
push
inc
dec
inc
push
inc
aas
xor
int
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
addb
add
add
add
add
push
sbb
add
add
enter
add
add
inc
push
add
adcb
data16
lea
jne
cmc
mov
clc
add
bt
pushf
call
dec
pop
in
dec
dec
int3
xchg
xchg
cmp
rorl
jg
jns
das
push
or
add
push
cli
int
test
mulb
mov
test
mov
adc
clc
push
cmc
jns
pop
ret
jmp
iret
lahf
or
cmp
imulb
mov
fnsave
add
adcl
out
std
fbld
inc
imul
clc
and
das
or
stos
aaa
xor
add
mov
rcr
hlt
ljmp
aas
xor
jp
add
xor
int3
loopne
insb
out
repnz
into
inc
idivb
dec
lret
dec
or
inc
jecxz
rclb
imul
inc
loop
or
mov
out
imul
lea
xchg
xchg
dec
mov
sbb
sbb
or
out
or
lret
dec
or
mov
bound
xor
aam
hlt
out
repnz
sarb
jl
push
pop
outsb
fs
pop
aas
xor
mov
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
xor
sbb
ret
pop
idivl
push
sarl
jge
imul
jecxz
faddp
dec
add
add
mov
xor
not
mov
jl
push
mov
mov
xor
imulb
push
fs
mov
cltd
jmp
and
in
daa
jnp
or
and
jae
jmp
fsubs
or
pushf
mov
fs
clc
into
aam
cld
pop
xchg
or
movaps
or
aas
xor
mov
or
mov
xchg
ret
dec
insb
loop
ficomps
inc
pop
lock
xchg
push
cmp
divl
loopne
insl
lods
mov
push
dec
outsl
push
ret
xchg
push
cmp
shl
xchg
push
aaa
adc
mov
not
cmc
jo
push
cmp
out
adc
fcoms
push
add
ja
in
sbb
into
or
mov
rcr
aam
in
dec
dec
fs
push
bound
dec
pusha
inc
aas
xor
rcll
mov
jno
addb
je
pop
inc
ficompl
push
jl
dec
jb
add
fnstcw
mov
mov
mov
inc
aaa
xchg
mov
sbb
rcl
idivl
jnp
popa
mov
or
xchg
cmp
mov
loop
stos
in
rcr
lds
sbb
push
jo
bound
add
fstps
xor
add
push
outsl
gs
jns
jge
jg
xor
inc
push
dec
lea
jae
push
movb
pusha
lea
jmp
call
inc
push
fnsave
loop
out
movsl
popf
daa
test
or
pop
mov
mov
pop
mov
pop
add
std
mov
repz
cmpsl
add
pop
mov
in
xor
pop
jnp
arpl
insl
push
imul
xor
lock
mov
lock
mov
mov
mov
add
arpl
add
imul
int3
mov
inc
mov
or
out
fstl
mov
jmp
pop
xchg
cmp
and
push
imul
shr
add
dec
xchg
decl
xchg
mov
andb
xchg
in
push
dec
jmp
fcomi
mov
adc
repnz
ret
mov
stos
mov
mov
lahf
pop
dec
dec
inc
push
dec
jo
pop
je
xor
hlt
addl
jg
lea
sbb
in
loopne
hlt
dec
cld
dec
mov
lahf
push
or
inc
setge
push
ficoms
pop
jp,pt
jp
mov
lret
xchg
cmp
fimuls
mov
iret
push
inc
xor
dec
add
sbb
add
sub
adc
je
xor
cmp
lret
enter
mov
push
or
xor
adc
or
sub
cmp
cmp
xor
mov
icebp
push
jb
push
dec
imul
int3
xor
test
rolb
xchg
jmp
adc
pop
les
push
fdivs
jbe
out
test
push
fbld
push
pop
cs
out
mov
mov
clc
push
and
das
sbb
shlb
jl
test
fwait
xor
fcomp
dec
lahf
popa
adc
xchg
xchg
lods
xchg
aas
xor
jg
sti
or
outsl
js
out
loop
incb
fs
jo
insb
loop
loop
stos
clc
fimuls
cmpsb
or
sbb
sub
int
fimuls
popf
add
xor
popf
mov
mov
sub
fs
cmp
jp,pt
sbbb
xchg
mov
bound
push
push
jb
dec
aas
xor
rclb
and
test
js
call
test
inc
in
mov
imul
adc
in
jmp
sub
hlt
and
int
add
mov
xor
sub
cmc
and
ficompl
lahf
cmp
push
push
movsl
cld
cmc
and
test
and
stos
mov
arpl
cmp
ror
dec
mov
adc
and
popf
push
std
std
xchg
dec
pop
jle
jbe
dec
inc
jp
jbe
dec
inc
aas
xor
cmp
and
jmp
lea
call
push
push
call
stos
into
pop
loop
icebp
rcl
mov
xlat
pop
jecxz
aas
and
dec
push
jno
mov
xchg
imul
xchg
fucomi
cmpsl
cs
push
cmp
xchg
sbb
mov
movsb
push
lock
cmp
pushf
cmpsb
jns
out
fdivl
cmpsl
ja
out
out
popa
imul
mov
pop
sahf
lods
pop
sub
ss
mov
mov
add
sbb
dec
xchg
cmpsl
test
pop
es
loop
fsubrp
int
pop
leave
jecxz
shr
lret
jmp
aas
xor
pusha
movb
lea
call
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
xor
call
ja
mov
pop
clc
sub
push
loope
icebp
ja
pop
fldl
dec
popa
outsl
cmp
fstps
orl
jae
xor
orl
adc
insl
imul
inc
int3
mov
xchg
fidivs
xlat
mov
rorb
jge
dec
inc
dec
imul
pop
gs
sbb
fisubl
lock
sub
adc
dec
dec
mov
daa
cmp
aas
xor
inc
or
pop
push
mov
dec
fcmovnbe
cltd
aas
test
orl
cltd
aas
mov
xchg
in
xchg
pop
out
cmc
stos
lret
sbb
add
dec
bound
mov
out
add
xor
dec
add
lret
xor
ljmp
fisttpll
call
inc
cmp
pop
sbb
sbb
push
cmp
call
dec
nop
sub
addb
mov
xor
inc
add
out
mov
loopne
cld
add
stos
cmpsl
mov
pop
ja
cld
adc
into
jae
xchg
sahf
bound
movsl
daa
mov
cmp
scas
mov
xchg
cmp
sahf
and
pop
and
ret
ficomps
cli
cmpsb
xchg
icebp
das
adc
jp
loop
pop
and
lahf
add
sub
add
cmp
or
xor
and
cmp
aas
xor
cwtl
pop
push
mov
mov
push
pushf
xchg
ficoml
mov
loop
dec
add
xchg
les
lods
movsb
frstor
jo
cwtl
daa
and
push
fwait
pop
fistpl
test
scas
push
iret
jns
gs
iret
push
roll
cmc
fstps
adc
mov
ficomps
daa
mov
int3
push
cmp
das
sbb
sti
mov
lahf
mov
ja
cld
jle
dec
je
dec
dec
jl
pusha
push
pop
pusha
aas
xor
out
lock
and
adc
mov
cli
js
adc
mov
ljmp
aas
ret
inc
rcll
xor
xor
pop
jbe
clc
movl
test
sbbb
sub
cmp
cmpsb
cmpsb
cs
xor
and
sub
cs
test
cli
cmpsb
movsl
mov
dec
outsl
scas
hlt
mov
xchg
test
cmp
xor
and
add
aas
xor
test
add
mov
adc
rorl
mov
scas
add
sub
test
mov
pushf
into
in
aas
xor
fwait
adc
sub
mov
dec
pop
push
repz
outsl
in
inc
pop
iret
cs
xor
movsb
pushf
shlb
je
pusha
into
jo
push
clc
mov
andb
cwtl
enter
xchg
aad
test
test
fcoms
mov
and
daa
push
addr16
pop
add
rcrl
mov
xchg
icebp
out
aad
loope
lret
stc
out
xor
cmpsb
stos
in
jnp
imul
iret
mov
std
ja
outsl
lds
push
jmp
inc
add
cmp
dec
inc
pop
mov
in
rorb
ss
and
lahf
rclb
jle
mov
or
pop
aas
mov
mov
cmpsl
test
inc
add
mov
leave
xchg
mov
mov
call
or
sub
cltd
sbb
push
cmp
lahf
mov
mov
xchg
lahf
movsl
mov
add
bt
call
or
loope
cwtl
cmc
xor
add
ror
and
or
lahf
xor
rcll
dec
testl
sbb
stc
lods
and
out
out
dec
inc
imul
xor
xchg
sbb
pop
sub
xlat
sub
rep
and
lods
addr16
std
das
sbb
push
rorb
mov
mov
subb
nopl
cmp
sbb
or
xor
push
adc
fs
jb
jmp
rol
je
out
ja
push
dec
dec
inc
mov
lods
pop
mov
iret
mov
scas
mov
je
cwtl
xor
icebp
je
jge
imul
les
ss
push
inc
scas
popf
mov
inc
mov
xor
adc
jmp
scas
popf
mov
dec
in
jge
aam
loopne
daa
adc
lea
xor
sub
mov
push
sub
or
add
sbb
add
cmp
xor
or
xchg
repnz
pusha
lea
jne
dec
shl
sar
shl
mov
pusha
shl
sub
shld
cmc
bsr
sar
lea
bt
call
lcall
rol
cltd
mov
pop
ret
fs
push
idivb
pop
pop
sbb
mov
mov
mov
mov
fmull
or
push
or
outsb
and
scas
cmpsb
sub
sbb
mov
fdivrs
stos
sbb
test
lods
aas
sbb
inc
lret
sar
int
fst
leave
jecxz
fcmovne
xlat
aas
xor
jmp
test
movb
push
neg
pusha
call
das
cmp
stos
in
aas
lods
aaa
cltd
pop
cmpl
mov
lods
aad
into
mov
jp
rcll
mov
mov
repnz
fsubrl
insl
sub
inc
int3
lods
inc
sub
loopne
repz
push
and
sti
lock
dec
xchg
jnp
pop
fsts
dec
add
cmc
jp
fsubrs
loope
fucomip
jecxz
loope
in
jmp
ret
mov
pusha
lea
je
clc
add
clc
stc
pushf
jmp
pop
dec
in
push
jae
mov
imull
insb
loop
into
jl
push
into
js
push
scas
mov
popa
fs
mulb
and
adc
nop
testl
sbb
sub
mov
push
lds
stos
out
mov
push
pop
cmp
jp
xor
mov
rclb
mov
and
repnz
in
into
int3
int3
clc
xchg
inc
roll
ljmp
inc
xor
insb
add
dec
nop
mov
outsl
stos
mov
mov
mov
test
test
test
aas
xor
xchg
mov
cmp
aaa
push
cwtl
andb
ds
in
push
add
push
adc
pop
rcrl
sub
fsubrl
cs
push
add
add
pop
and
ret
test
enter
pushf
fs
mov
das
sbb
mov
cltd
mov
roll
ror
rcr
popa
jmp
fcomip
mov
out
aas
xor
fs
je
cmc
cmp
bt
add
clc
cmp
pusha
pushf
call
call
sbb
imul
inc
add
cmp
or
neg
subl
xchg
imul
in
jno
cs
into
jmp
xor
test
pop
daa
push
out
rclb
sbb
jae
jae
aam
out
loopne
mov
das
push
pop
inc
pusha
sub
xlat
lock
push
dec
add
insl
mov
xor
add
lahf
outsb
mov
cmp
cld
stc
mov
repz
cmc
out
jmp
xor
loopne
pushf
not
lods
push
push
pushf
pushf
inc
push
jmp
fwait
sbb
mov
loop
adc
out
xor
cmpsb
call
std
lret
test
daa
das
imul
sub
cmp
cld
scas
jmp
pop
sub
inc
inc
test
cli
lods
cld
icebp
das
sbb
sbb
or
pop
hlt
faddl
pop
sub
mov
test
cwtl
sahf
test
cmpsb
aas
xor
and
fs
rcrl
loope
jmp
mov
out
aam
inc
das
scas
cli
lret
mov
pop
xchg
out
sti
dec
sti
dec
pop
inc
add
mov
push
pop
or
adc
int
and
push
inc
add
insl
test
cmc
loope
xchg
dec
push
scas
xchg
int3
addb
sbb
push
push
sub
clc
call
cmp
cmc
loope
stos
out
std
daa
adc
mov
repz
and
or
sub
add
sbb
and
xor
scas
into
jge
fcoml
ja
stc
pushl
xchg
mov
add
ret
push
loop
out
push
cli
inc
shl
rclb
lahf
int
or
hlt
out
fidivs
ja
std
ja
lea
push
fcmovnbe
push
arpl
sbb
fnstcw
xlat
cmp
ds
pop
jns
sarl
inc
sub
jbe
jne
add
add
out
dec
shlb
aaa
mov
dec
pop
jo
push
pop
pop
inc
bound
xor
out
lods
push
incl
mov
out
rcll
or
mov
in
data16
dec
xchg
and
arpl
popl
out
push
jns
push
test
push
mov
ss
test
xchg
sar
test
or
jecxz
daa
ljmp
movb
in
das
sbb
jecxz
fwait
shr
inc
rcrb
or
or
das
pop
shlb
cld
out
sar
aas
xor
jp
add
push
add
pop
lea
jmp
or
inc
mov
sub
dec
jge
push
jmp
mull
inc
in
lds
push
and
xchg
mov
out
mov
mov
stc
cltd
pop
cmpl
sbb
add
insb
jno
pop
sbb
repnz
and
xchg
sbbl
jmp
sbb
insb
or
dec
and
jb
pop
ret
ds
jl
cld
sbb
cmp
in
xor
in
push
fcmovu
repnz
rcl
int3
ret
aas
xor
lret
not
bswap
mov
jmp
xchg
dec
into
call
pop
sbb
adc
jl
in
mov
call
loopne
test
xor
mov
pop
xor
dec
mov
cmpsb
mov
stos
push
mov
mov
xchg
mov
push
cli
movsl
mov
lds
outsl
shll
ror
out
test
fdivr
cmpsb
aad
popf
fld
pop
and
sub
xchg
sbb
cmpsb
aad
fldcw
adc
fsub
add
dec
xlat
insl
dec
insl
pop
jge
inc
dec
xor
mov
mov
mov
inc
or
jge
ret
push
inc
pop
jg
hlt
push
shlb
pop
cld
push
lock
dec
pop
sbb
mov
mov
insb
dec
out
adc
dec
pop
jbe
fidivs
cli
out
adc
or
cmp
lret
imul
inc
push
inc
inc
mov
adcb
int3
movsl
icebp
leave
cmp
and
mov
fsts
cld
pop
adc
jmp
inc
fs
movsb
arpl
div
stos
xchg
pop
fadds
pop
fs
je
insb
inc
dec
pop
inc
dec
push
aas
xor
push
and
call
pusha
push
lea
jmp
push
or
xchg
cmpsl
cwtl
fcoml
push
jbe
popf
mov
push
sbb
push
and
sar
or
imul
sbb
push
mov
test
mov
cmp
in
mov
call
aas
push
pop
adc
icebp
in
jbe
pop
scas
cltd
into
add
repz
and
xorb
dec
lea
or
mov
aas
mov
gs
xchg
aam
xchg
push
rol
int
fucom
int
aad
rol
sarl
xor
pop
movsl
cmc
jmp
push
or
sbb
bound
mov
push
stos
mov
add
iret
xor
ficoml
fwait
sub
jno
jmp
jmp
mov
clc
jle
jb
pop
fs
push
sbb
mov
js
cli
lods
sub
div
into
sbbl
lret
mov
pushf
xchg
mov
xchg
mov
xor
imul
mov
repz
and
arpl
rorb
fs
dec
fisubrl
cld
mov
cmp
cli
cmp
dec
mov
inc
dec
popf
cmp
imul
xchg
and
push
dec
add
xor
mov
pop
iret
pop
dec
inc
mov
arpl
call
imul
adc
das
pusha
mov
cmpsb
mov
mov
xor
cmp
and
call
not
mov
lea
pusha
pusha
call
jmp
not
shld
sub
movzbw
bswap
mov
not
pop
lea
xchg
movzbw
pop
pusha
pusha
pushf
call
push
inc
lock
xchg
mov
mov
push
mov
xchg
mov
xor
dec
pop
cmc
imul
push
xor
sbb
pop
xchg
xor
ret
sti
push
loope
scas
dec
xor
push
add
lea
sbb
js
jbe
dec
ja
push
cmp
mov
and
mov
xor
lret
adc
and
mov
cs
jmp
repz
icebp
idiv
sarl
xor
xchg
aam
xlat
lea
jne
movzbl
call
ficompl
push
jns
push
testb
lea
popf
add
adc
in
jbe
rorb
daa
cmp
and
adc
inc
je
add
or
push
pop
insl
inc
popa
xor
aas
xor
xor
or
cmp
fisubs
dec
fs
pop
dec
dec
push
addr16
add
test
push
cmp
mov
pushf
cmc
test
call
fidivrs
cmpsl
jno
imul
mov
sub
adcl
inc
unpckhps
popf
mov
ss
sub
cmpsl
add
inc
push
sti
je
shr
mov
ficompl
wbinvd
pop
in
je
shrl
mov
xchg
pushf
stos
aad
mov
adc
mov
sti
cld
pop
ficomps
add
adc
cltd
pop
lock
jns
setno
dec
inc
ja
addr16
jnp
jg
aas
xor
outsl
jne
aaa
not
mov
lea
jno
mov
pusha
lea
jmp
mov
outsl
jmp
jns
out
dec
fisubrs
pop
ljmp
enter
sbb
jo
sbb
inc
jns
in
jae
lock
iret
imul
scas
loope
jo
clc
les
sub
fnstsw
adc
push
jle
das
sbb
add
push
sbb
and
daa
adc
aas
or
and
and
ds
addl
jmp
pop
or
pusha
and
mov
adc
push
and
pop
pop
pop
shlb
call
sahf
negb
inc
stos
movl
sahf
dec
mov
mov
xor
adc
dec
aas
xor
in
jl
inc
sbb
pop
jl
rcrl
int
cmc
fsqrt
xchg
jle
or
and
aaa
cmp
scas
ljmp
push
and
and
adc
or
test
xchg
push
int3
les
pop
pop
adc
jle
and
clc
add
sub
pop
add
out
adc
repnz
repz
sub
int3
fsubrp
int
sbb
jp
mov
mov
scas
mov
xor
xor
stos
add
mov
sti
jns
jge
jne
push
repz
xchg
lods
subb
pop
dec
ret
jmp
adc
jg
std
lock
jo
iret
std
aam
mov
scas
out
push
mov
mov
or
int
fs
sbb
xor
xchg
push
rcr
and
xor
movsb
jmp
xchg
mov
xchg
ljmp
insb
arpl
jle
mov
cmp
sahf
data16
adc
shrb
jecxz
fcomip
repz
loope
aad
icebp
in
xor
xlat
cwtl
fsubrl
sarl
sbb
inc
rcrl
leave
jnp
pop
jmp
into
xor
and
dec
cmp
sbb
dec
xchg
call
sub
jno
sti
mov
fistpll
and
imul
outsl
in
add
cltd
fisttpll
imul
fwait
in
add
stc
stos
aas
push
push
sbb
in
add
dec
sbb
lret
pop
sub
add
sub
xchg
lret
in
addl
loopne
loop
push
or
adc
pop
add
sbb
aas
xor
pop
xchg
outsl
aas
mov
and
lds
enter
call
pop
push
dec
sbb
mov
dec
xchg
in
movsb
gs
push
lea
cmp
cwtl
cli
cmp
sbb
test
pop
xchg
push
fadds
mov
out
fcomp
cwtl
shrl
das
sub
rcl
xor
cmp
mov
pop
and
jle
inc
lret
or
or
or
xor
push
push
dec
bswap
movl
stc
cmp
cmc
bsf
mov
sub
jno
cmc
cmp
pushf
lea
jbe
ror
movsbw
sub
shld
mov
xchg
bts
movzbw
btc
mov
jns
add
not
lea
dec
shr
sbb
mov
shr
add
mov
mov
pushf
mov
mov
push
pusha
lods
pushf
rol
jmp
stc
cmpb
pusha
pushf
lea
jne
sar
mov
pushf
add
push
movzwl
rcr
btc
bsr
mov
push
clc
call
shr
movzbw
neg
bswap
cmp
mov
test
bt
or
pushf
push
lea
je
push
mov
pusha
cmc
adc
sub
bts
sbb
shr
movsbw
movzbw
dec
mov
bt
movsbw
add
rcr
bsf
cmc
add
sub
shrd
mov
jns
pusha
shr
test
cmp
movb
mov
mov
jmp
sub
pop
jnp
push
cld
push
dec
add
or
cmp
sub
lods
pushf
fcmovnu
add
adc
sub
jbe
das
daa
aas
mov
sbb
jg
jg
rclb
dec
push
and
and
cmp
ss
xor
inc
add
sub
movsb
pop
mov
scas
mov
mov
inc
inc
add
mov
fldt
es
or
sbb
cmpb
sub
push
jae
stos
mov
in
clc
lret
xchg
cmp
xor
loopne
cmp
cs
push
xorl
in
call
nop
xchg
test
rcl
divl
lret
in
scas
cld
mov
mov
enterw
movsb
push
push
push
imul
into
dec
xorl
cmp
loopne
and
and
cmp
sbb
sbb
pop
aas
xor
nop
aam
jo
sub
lods
call
inc
dec
shl
jecxz
aas
xor
inc
mov
sub
nop
fists
popa
sti
push
inc
out
movl
sub
jno,pt
leave
les
cli
dec
notb
inc
push
mov
les
and
adc
cmp
aas
xor
jo
xchg
movsb
jbe
popa
stos
mov
lds
jnp
sti
aad
std
push
aas
xor
pop
ffreep
shll
sti
mov
adc
xor
test
test
ret
aad
lea
cltd
push
cmpsb
adc
cltd
pop
movsl
scas
jo
enter
movsl
scas
outsb
loop
jnp
cs
xor
pop
test
sbb
sub
jno
mov
dec
jb
dec
daa
ficoml
rclb
and
sub
push
mov
movsb
xchg
test
neg
ljmp
hlt
out
aas
xor
pop
adc
push
fsubrs
pop
cltd
pop
test
xchg
aaa
mov
mov
lods
daa
adc
mov
add
loop
icebp
xorl
cmp
popf
cmpsl
push
mov
outsb
into
test
push
lret
xchg
icebp
fadd
ss
mov
sbbl
rolb
push
and
addr16
xchg
push
repz
sbb
cwtl
xor
inc
jnp
insb
mov
mov
pop
imul
fmull
push
pop
jbe
jp
jbe
bound
aas
xor
push
adc
add
inc
jnp
xchg
and
adc
xor
add
and
fdivrs
outsb
std
aaa
xchg
fwait
idivb
add
xor
fdivrs
sub
sbb
ret
push
xchg
faddl
int3
jle
je
jbe
dec
and
xchg
imul
mov
jg
arpl
jecxz
cmp
cmc
popa
pop
inc
movsl
fsubl
insb
push
inc
pop
push
pop
dec
jp
jo
xor
stc
mov
inc
and
pop
mov
inc
bt
ror
bt
neg
jmp
sbb
mov
fisubs
sbb
idivb
fiadds
jo
xchg
mov
fdivrp
mov
pop
add
popa
inc
cmc
push
fists
aas
call
es
add
loope
jae
mov
push
xchg
scas
enter
xchg
cmp
outsb
jle
mov
fmuls
out
outsb
push
adc
daa
and
or
xchg
mov
cmp
mov
mov
pop
push
insl
inc
dec
jnp
imul
jg
outsl
dec
aas
xor
repz
rol
add
loop
cli
pusha
decb
je
dec
call
loopne
gs
in
loopne
lcall
mov
push
add
xchg
xchg
rcrb
das
sahf
repz
iret
inc
dec
inc
lods
popf
test
ret
aam
loopne
jb
jo
sahf
repnz
adc
enter
aam
aam
sub
and
inc
jg
inc
jne
dec
jg
arpl
xor
lock
dec
lret
inc
dec
addr16
movsl
pop
outsb
mov
cld
enter
enter
add
jo
push
inc
add
ljmp
jo
mov
sub
push
ret
mov
enter
dec
iret
pop
cmp
sbb
push
mov
popa
pop
sarb
cmp
push
mov
outsb
fdiv
inc
rorb
icebp
mov
iret
shl
mov
in
push
ja
test
adc
push
sub
cs
sub
inc
sbbb
scas
mov
cmpsb
aas
xor
xor
cmp
mov
shlb
clc
inc
in
cmpsb
test
pop
imul
pop
dec
lea
ja
pop
shll
rcl
insl
popa
test
movsl
pop
das
int
lret
popf
mov
popf
mov
jo
popa
pop
adc
into
andl
enter
ret
pop
lock
push
div
inc
cld
fprem1
pop
sbb
or
cmp
jmp
rcrl
adc
aas
sbb
movsl
outsb
sbb
and
sub
xor
or
or
adc
aas
xor
cmpsb
loop
out
push
ret
out
push
dec
or
jns
aad
lock
sub
cmp
push
mov
lods
insb
bnd
pusha
lret
push
dec
inc
add
xor
xchg
or
mov
in
icebp
out
sbb
into
repz
lcall
imul
cmp
ja
sub
rcll
mov
xchg
fsubrs
xlat
jnp
in
xchg
xchg
cltd
mov
sarb
fldcw
push
jne
jno
jns
push
push
pop
inc
gs
xor
cmc
mov
fs
je
cmp
bt
pushf
test
sub
mov
push
pusha
movb
lea
jmp
fmulp
push
jmp
lock
stc
sahf
sub
popa
dec
pop
aaa
adc
dec
jno
hlt
mov
mov
fcmovnbe
das
stc
hlt
out
cltd
icebp
pop
addb
pop
daa
sti
and
push
add
jg
cli
lods
inc
cwtl
add
dec
dec
pop
sub
scas
ret
out
xchg
cli
lods
inc
jo
das
sbb
mov
jo
dec
push
sbb
jo
push
jbe
push
push
push
pop
dec
push
sub
movl
ror
bt
and
ror
mov
lea
jnp
bt
add
push
push
pushf
pushf
mov
call
arpl
pop
insb
cs
mov
or
insb
inc
sub
add
sub
pusha
push
out
inc
ljmp
repnz
daa
ror
push
cmp
inc
aaa
mov
test
pushl
inc
iret
mov
frstor
aam
int
push
test
div
lods
out
adc
sub
push
cmp
cmp
push
data16
inc
cwtl
in
in
lods
ja
js
add
jae
xor
icebp
jmp
mov
out
loope
jmp
xor
jb
scas
sub
pop
and
ret
xchg
mov
loop
movsb
movsl
mov
cltd
mov
rclb
in
jp
out
mov
mov
xlat
xchg
fcompl
xchg
cmp
or
fisttpll
push
cmp
pop
ficoml
or
out
pop
lret
pop
out
fs
loopne
mov
loopne
test
std
in
test
mov
scas
lret
test
ss
push
mov
adc
inc
enter
add
xchg
and
stos
insl
jmp
icebp
ret
jmp
inc
aas
xor
jbe
inc
push
shll
aaa
xor
mov
or
mul
dec
pushf
cmpsb
mov
inc
jnp
or
sub
clc
mov
or
sub
mov
sahf
mov
movb
fstpt
icebp
fbld
jg
sub
lmsw
cmp
cmp
dec
xchg
pop
adc
mov
rcl
shl
jmp
sub
call
into
fildl
shll
or
sub
jno
or
int3
lds
ljmp
lods
mov
es
sub
jmp
arpl
outsl
stc
inc
loope
inc
outsl
divl
jge
xchg
xchg
xchg
cmp
dec
mov
mov
jl
dec
dec
inc
cmp
je
cmpsl
push
or
rcll
xor
pushf
fadds
fcoml
cli
enter
mov
out
sti
iret
xor
inc
mov
pop
cld
outsb
push
mov
rcll
fwait
and
xchg
or
movsl
test
lea
out
ret
ficoml
lret
dec
mov
clc
fdivr
lcall
adc
js
cs
fcomps
lahf
aas
jmp
or
test
jo
and
sub
xchg
lret
mov
loop
cli
lock
or
sbb
adc
sbb
xor
sbb
xchg
test
cwtl
movsb
mov
pop
stc
outsl
fldenv
ja
inc
jmp
xchg
dec
int
xchg
popf
add
dec
push
push
lock
data16
je
cmpsl
sub
lods
scas
pop
and
movsb
sti
mov
jecxz
jecxz
cmpsl
sub
das
adc
jae
mov
out
and
cmpl
pop
inc
not
xlat
loope
jmp
aas
xor
iret
mov
rorl
les
jecxz
adc
ljmp
pop
push
adc
xor
or
jne
mov
sbb
pop
loopne
xlat
stc
lea
js
pop
aad
mov
out
adc
std
push
xor
shll
out
fmuls
push
pushl
mov
cmp
mov
pop
push
test
mov
outsb
dec
clc
nop
cmpb
movups
popf
xchg
jbe
repz
sbb
adc
pusha
cld
push
rorb
cmpsb
aam
int3
ljmp
hlt
fsubrp
idivb
xor
xor
dec
shlb
or
vpmacswd
mov
cmp
sbb
loope
cmpsb
add
or
shll
pop
pushf
sbb
push
lods
mov
and
jge
shlb
jnp
cli
mov
out
sbb
idivl
push
insl
std
xor
cmp
inc
rcrl
mov
sbb
lea
stc
fcmovne
jecxz
push
out
aas
xor
xchg
not
mov
jmp
jmp
lea
movzbw
push
movzbw
cwtl
lea
jmp
mov
or
or
lret
pop
aad
call
fimull
out
push
repnz
out
ljmp
call
jnp
int
fisubrl
push
pop
add
dec
leave
stos
sbb
je
xchg
mov
out
loop
stc
fwait
push
sti
sti
jae
add
ss
mov
cmp
cmp
repnz
aam
shl
into
cli
rol
aas
xor
or
add
rorb
mov
add
ss
fs
setl
lea
scas
in
inc
pop
fwait
inc
pop
mov
cmpsl
cli
lods
xchg
jnp
pop
sub
scas
ret
jns
jns
lods
test
sub
sbb
repnz
outsl
test
mov
sahf
mov
mov
sbb
adc
or
xor
pushf
roll
popf
das
sub
stos
aam
sbb
dec
fsubl
pop
shrb
call
push
std
out
xchg
push
push
push
sbb
out
addb
das
aad
lods
dec
fucomip
jmp
inc
mov
ret
ljmp
sub
mov
mov
push
mov
cmp
icebp
mov
push
pop
loop
out
pop
cmp
xchg
inc
inc
dec
jp
int
stos
mov
mov
mov
xchg
xor
jnp
jo
push
js
nop
movsb
add
sti
pop
fistl
jge
push
fildll
inc
ret
addr16
mov
out
hlt
jp
punpcklbw
cmp
out
ret
pop
mov
mov
jnp
adc
lret
je
xchg
push
jae
and
adc
pop
das
test
out
sbb
mov
cli
test
jbe
add
daa
or
add
or
sbb
xor
xchg
lods
cmpsl
test
mov
push
sbb
and
fnsave
arpl
push
in
imul
stc
ja
mov
cs
mov
jbe
rorb
inc
jo
bound
jo
sbb
testl
rorl
outsl
in
pop
ja
adc
and
or
mov
inc
pop
xchg
mov
imul
mov
daa
mov
sbb
mov
insb
aam
aad
jg
jb
mov
lock
shl
call
xor
outsl
cmpsl
pop
dec
loope
pop
jl
and
push
dec
or
xchg
cmp
out
sahf
mov
and
or
mov
mov
mov
and
ljmp
inc
cmp
int3
push
enter
add
fsubs
xor
repnz
out
xchg
pop
into
pop
outsb
pop
dec
push
pop
jns
stc
out
loop
test
aam
loop
xor
lahf
enter
stc
incl
adc
outsl
adc
or
imul
add
ljmp
sti
inc
xlat
int
jnp
adc
call
aam
lock
sub
or
cmc
cmp
adc
daa
test
rcrl
pop
sbb
popa
imul
dec
or
jne
sub
xchg
fdiv
dec
push
adc
or
jmp
sbb
xor
je
inc
into
or
sub
push
inc
je
pop
pop
dec
insb
aas
xor
cmc
mov
lea
jmp
pushl
lea
je
and
ror
btr
lea
add
btc
bsf
mov
pusha
add
test
mov
btr
bt
lea
mov
pushf
test
cmc
cmp
jmp
xchg
sbbl
xor
add
add
addr16
push
adc
mov
popf
xor
xchg
stos
pop
dec
pop
leave
into
fdivl
es
mov
pushf
mov
mov
lock
cmp
inc
jno
test
add
xchg
aaa
adc
pop
ret
push
mov
repnz
push
fs
inc
bound
or
xor
mov
mov
jle
insl
sub
pop
push
nop
jae
jnp
push
pop
outsl
jnp
xor
ret
sbb
cmp
or
jns
dec
out
cwtl
sahf
aas
xor
ja
mov
dec
inc
or
jg
stc
cmp
jp
push
lock
xor
mov
inc
jle
dec
pusha
dec
and
scas
aas
xor
nop
aam
lods
xchg
scas
cmovs
iret
stc
int
std
aas
xor
jge
add
pop
enter
scas
mov
loopne
mov
fwait
fdivp
pushl
pop
ficoml
jecxz
xor
test
dec
sbb
stc
lock
lods
and
dec
or
push
mov
and
addr16
lods
cmp
daa
loop
mov
aam
clc
or
lods
cmp
push
das
sbb
idivb
in
jmp
inc
pop
and
shll
jge
push
arpl
jne
pop
addr16
jne
xor
cld
mov
inc
incl
jmp
mov
push
lea
je
pusha
cmc
clc
add
push
pushl
cmp
jmp
pusha
pusha
mov
movl
movb
movl
push
movb
pushl
lea
jmp
dec
pop
jmp
outsb
xchg
sub
push
sbb
dec
in
mov
dec
pop
or
ror
mov
cmp
out
repnz
loop
notb
shl
out
pop
lock
mov
pop
pop
pop
jo
lds
imul
mov
leave
adc
or
mov
nop
in
sub
enter
mov
fdivrl
push
push
add
jmp
sahf
add
sub
mov
mov
mov
mov
mov
add
mov
aas
sbb
jl
sub
pop
clc
pop
enter
sub
sub
inc
xor
adc
in
je
ljmp
adc
clc
xchg
aam
xchg
ja
inc
std
dec
in
icebp
iret
mov
sub
jns
mov
stc
int
adc
fwait
dec
and
inc
mov
mov
rolb
lcall
add
fcoml
das
lret
dec
inc
imul
or
mov
cmp
adc
push
repnz
into
fsubr
rcr
cld
cld
loop
aas
xor
inc
add
xorl
setge
pushf
pushf
mov
jmp
sub
arpl
enter
mov
push
leave
outsl
push
dec
xchg
andl
or
fstp
mov
sbb
jne
or
ss
fstp
dec
mov
dec
cmpsl
fidivs
dec
pusha
xchg
jo
jecxz
clc
cmp
adc
aaa
fstl
dec
or
push
mov
cmp
fstl
arpl
dec
inc
imul
push
aas
xor
lcall
lea
jae
jmp
add
inc
gs
jne
jb
outsb
je
push
dec
fs
movsl
adc
or
inc
or
loopne
iret
sbb
fcoms
loope
sub
pop
mov
mov
lea
loope
lahf
dec
sub
push
or
aam
pop
mov
loope
lahf
clc
sbb
and
outsb
bound
cld
int3
dec
pop
daa
push
filds
push
xchg
xchg
nop
xchg
aas
xor
cmp
fs
jb
call
xchg
pop
jmp
shl
loop
rclb
je
jo
insb
sbb
jl
lds
and
mov
mov
xchg
sub
mov
mov
loopne
fistps
clc
mov
fidivl
pop
out
mov
push
lods
jmp
cmp
adc
inc
push
jo
lods
fnstcw
insb
and
out
add
mov
mov
ljmp
jg
addr16
jae
dec
pop
push
arpl
aas
xor
iret
push
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
cmpsb
adc
daa
iret
or
push
adc
into
push
fisubrl
push
out
enter
js
insb
or
ror
repz
mov
aad
xrelease
xchg
xorl
mov
bound
divl
cli
test
push
mov
repz
jmp
push
into
push
and
scas
scas
xlat
mov
or
sub
xchg
fisubs
lcall
mov
loop
pop
jg
xor
cmp
scas
mov
out
in
lret
loope
mov
lock
cli
add
inc
in
hlt
sbb
mov
jl
lods
daa
mov
das
mov
mov
and
arpl
andb
xchg
out
fdivs
xor
scas
cmp
sbb
clc
cmpsl
add
mov
or
push
in
lds
adc
fdivp
rcll
cld
inc
int3
and
test
add
mov
outsb
in
hlt
fdivrp
test
hlt
repnz
into
rcr
aas
xor
xchg
push
lea
jbe
inc
movzbw
sub
btc
rcl
not
cmp
mov
movzbw
rol
bsr
movsbw
mov
xchg
add
sub
push
ror
not
shr
sbb
adc
and
mov
and
add
bswap
mov
pushf
pushf
pusha
mov
pushf
sete
jmp
mov
inc
rcl
scas
stos
ret
lahf
shrb
push
mov
mov
xor
push
sbb
sbb
xor
pop
lock
cld
jb
outsb
ret
cli
cmpsl
inc
xchg
jb
mov
and
push
stos
out
loope
mov
es
cmpsl
inc
flds
das
adc
out
pop
push
or
sub
push
push
icebp
repz
leave
xlat
icebp
mul
inc
out
xlat
aas
xor
push
push
pop
mov
movb
call
btc
movsbw
bt
shl
push
lea
shl
xor
mov
mov
call
shll
jmp
adc
insl
sub
sub
mov
pop
jg
fwait
lret
test
and
scas
cmpps
imul
cs
dec
inc
mov
pushf
sub
test
add
adc
and
mov
clc
mov
loope
xlat
test
nop
xor
outsl
cmp
cmp
popa
data16
into
ja
sbb
and
xlat
jle
fbld
nop
cmpsl
test
out
js
pop
jne
dec
int3
sub
and
jnp
jnp
fnstenv
icebp
ss
lahf
xchg
aas
ds
popf
mov
int3
scas
mov
push
add
push
mov
out
rorb
in
jecxz
xchg
sbb
gs
pop
jg
and
repz
mov
pop
in
aam
push
and
js
mov
fcompl
xor
ljmp
xor
arpl
jecxz
mov
sbb
cwtl
mov
loop
out
int3
in
push
icebp
mov
mov
movsb
or
inc
lret
pushf
cmp
and
sub
dec
jae
daa
and
mov
or
bound
and
aam
orb
xor
pop
pop
or
test
andb
add
imul
das
xor
and
insb
push
mov
cmp
sbb
lods
mov
jp
test
hlt
push
adc
aaa
and
sbb
or
scas
test
xor
lods
pop
and
pusha
xor
dec
or
outsl
pop
dec
aas
xor
mov
sbb
sub
leave
mov
sub
jge
mov
test
shrb
push
stos
imul
sub
mov
sub
jns
std
pop
rolb
push
into
test
test
cmp
cmp
inc
insl
mov
sub
fidivl
pop
xchg
test
fld
sub
dec
sbb
leave
mov
sub
mov
mov
fld
sub
sbb
sub
mov
mov
sub
leave
mov
sub
in
jge
lea
sub
and
jle
rolb
mov
mov
sub
or
lret
paddq
sub
xchg
stos
jg
leave
mov
sub
leave
mov
sub
inc
fwait
repz
mov
sub
cwtl
jge
dec
insl
mov
sub
ljmp
das
sub
jbe
test
xchg
shrb
push
adc
shufps
push
mov
fwait
iret
add
pop
int3
sub
pop
test
sub
jne
xchg
addr16
mov
sub
mov
mov
sub
leave
mov
sub
movsb
jns
mov
mov
sub
arpl
rorb
sub
leave
mov
sub
sarb
aaa
sbb
sub
ret
mov
sub
stos
jle
into
test
mov
sub
jae
push
rolb
clc
roll
cmp
test
nop
fidivl
out
lds
cli
push
mov
mov
aam
sub
jp
push
arpl
sub
inc
xor
mov
test
sub
sarb
jbe
sub
mov
sub
pop
shlb
outsl
fcmovnb
sub
lret
push
mov
sub
cli
es
imul
pop
jge
cmp
mov
sub
wbinvd
xor
rolb
icebp
mov
test
mov
and
ffree
test
insl
shrb
pop
dec
mov
sub
rolb
or
push
pushf
lea
jne
call
jnp
movsl
sub
repz
test
xchg
cmp
mov
add
insb
or
stos
sbb
jle
fidivs
or
sbb
xchg
pop
adc
inc
or
jno
cmpsl
dec
call
imul
ret
dec
bound
add
adc
sub
and
mov
xchg
or
mov
pop
out
jne
dec
jmp
jecxz
filds
dec
loope
mov
popf
cmovno
aas
jno
test
vhsubps
test
adc
aas
clc
or
mov
pop
es
popa
and
int
call
and
pop
das
sbb
jp
fs
js
out
aaa
cltd
cmpsl
cltd
addl
mov
cmp
sbb
xor
sbb
setg
push
ror
and
inc
push
bsr
dec
push
rcl
xadd
and
mov
shld
mov
xor
setl
clc
mov
push
pusha
or
jmp
push
lcall
out
ret
pop
into
push
imulb
ror
pushf
cmpsb
sbb
out
repnz
fsubl
sub
repnz
imul
mov
xchg
mov
inc
rcl
stc
jl
popf
sbb
popf
pop
push
pop
data16
push
dec
lret
dec
daa
inc
cmp
push
out
pop
cli
ficoml
pop
adc
icebp
cmpl
icebp
jge
dec
xchg
mov
pushf
xchg
mov
xor
rcll
pop
sub
or
roll
mov
cmpl
fdivr
add
and
insb
and
jno
and
adcb
test
sbb
push
add
adc
adc
js
push
test
in
imul
leave
mov
fst
roll
sub
stos
subb
adc
fsincos
shr
sti
pop
nop
xchg
and
loope
movsb
ss
movsl
jecxz
pop
push
pop
pop
and
ja
xor
ficomps
push
jmp
or
stos
and
movsb
xchg
test
mov
xor
mov
inc
jecxz
imul
xchg
or
mov
daa
mov
adc
popa
jle
lahf
add
inc
stc
push
out
push
sbb
inc
flds
jecxz
xor
in
test
test
aas
xor
clc
mov
push
inc
add
sbbb
cwtl
mov
mov
mov
jg,pt
push
sub
out
push
or
scas
jmp
rcrb
or
pop
xlat
shll
insl
out
imul
dec
loope
pop
push
sub
jle
and
sub
jp
or
push
sub
jbe
cmp
pop
dec
mov
insl
sbb
sahf
or
lret
sbb
xchg
or
push
and
xchg
sar
and
decl
xchg
jecxz
jmp
int3
or
mov
popl
cmp
dec
adcb
scas
pop
xor
hlt
outsb
cld
call
mov
xor
xchg
outsb
jae
lds
mov
mov
sti
fcomps
in
movsb
ja
cli
stos
push
pop
cli
mov
popf
xor
dec
jae
push
push
pop
daa
clc
mov
push
add
rcr
cli
lods
dec
and
sbb
mov
push
or
jns
mov
addl
das
xor
sub
daa
sbb
xor
mov
dec
call
rol
jmp
add
mov
mov
popa
ret
pop
jns
pop
ret
pop
jmp
cmc
mov
xchg
sbb
in
ljmp
pop
mov
ljmp
xchg
dec
or
or
fwait
and
jnp
stos
mov
push
xor
sbb
popa
inc
and
and
fcomip
sub
rclb
ficoml
push
pop
inc
push
test
push
and
cmp
mov
inc
arpl
push
ja
addr16
pop
jnp
xor
mov
test
fst
xchg
sbb
add
sub
or
push
imul
push
out
or
sbb
in
enter
adc
fcomps
std
sub
and
inc
cmp
adc
xor
inc
jne
decb
mov
out
aas
xor
sahf
fiaddl
cmpsl
push
test
push
in
imul
sbb
sub
adc
or
aas
xor
scas
jmp
jne
lea
jae
push
pusha
mov
push
pushl
mov
pushl
lods
pushl
rol
call
jmp
dec
jle
insl
imul
int
pop
dec
pop
cmp
lods
pop
ljmp
jle
ffree
ljmp
add
mov
sbb
rorl
aam
mov
adc
jecxz
xlat
ja
sar
in
dec
pop
cmpsb
ror
push
xchg
aam
jnp
aam
cmpsl
jo
sbb
fdivr
xor
mov
lods
fsubr
mov
lods
daa
cmp
in
pop
imul
lods
push
andb
adc
shl
movsb
insl
in
push
fisttpl
in
std
cmp
std
xchg
sbb
test
fisubrl
adc
rcl
rcrb
mov
ss
mov
fs
cwtl
push
pop
popa
add
add
push
cmp
adc
jo
push
insl
mov
xor
pop
xchg
stos
xchg
xchg
shrl
hlt
push
rcr
sbb
sbb
mov
rolb
pop
sbbl
mov
data16
push
xchg
into
int3
rcrl
sahf
std
into
add
push
pop
insl
push
push
movsl
outsl
es
sahf
jg
xor
in
in
fsubrl
xor
int
test
cld
iret
mov
mov
sub
sbb
ret
fsubl
in
popf
insb
fdivr
pop
push
std
sbb
xchg
mov
scas
in
out
pop
cld
mov
fisubrs
fwait
imul
push
stc
addr16
xchg
push
mov
dec
roll
sarl
fstps
cmp
insb
jno
dec
pop
jp
ret
dec
cld
mov
gs
xor
push
int3
fiaddl
rcrl
std
outsb
lods
pushf
sar
jbe
or
mov
test
mov
pop
orb
jnp
mov
pop
xlat
xchg
in
lahf
ret
add
cld
fistps
pop
popf
mov
add
inc
movsb
jne
pop
rcr
mov
mov
dec
in
cltd
rcrl
xor
sbb
mov
mov
fstpl
mov
int3
leave
mov
pop
cwtl
mov
roll
pop
insl
or
pop
popf
lcall
pop
jl
ficompl
cmp
cs
cmc
mov
pop
pop
fwait
int3
mov
jbe
mov
jl
popa
adc
pop
mov
loope
push
jae
mov
incl
xchg
push
jns
jbe
out
cli
cmp
shrb
sbb
mov
xchg
fidivl
ja
cmp
js
lods
pop
and
scas
jecxz
int3
pop
jle
xor
lret
add
fstpt
push
dec
xor
cmp
pusha
mov
and
testl
je
push
daa
mov
push
add
mov
shrb
cs
into
int
push
lret
mov
scas
xor
cmpsb
mov
pop
mov
negb
fadd
cltd
lods
or
pusha
mov
push
xchg
push
hlt
xor
jbe
std
adc
shrl
test
push
rcll
inc
bound
mov
sbb
lret
cmp
std
push
dec
in
sbb
bnd
sbb
cld
lds
xchg
fdivr
enter
mov
fistl
into
sub
mov
mov
or
pop
xor
loope
cltd
ret
aam
push
call
cli
ljmp
notl
inc
mov
cmpsl
cmpsb
int3
repz
inc
daa
mov
mov
imul
movsl
mov
mov
push
les
mov
push
adc
mov
shll
js
or
inc
loopne
rcr
fsts
mov
les
cmp
notb
insb
push
adc
xor
and
sarl
rclb
ror
pop
fists
mov
xchg
insb
popa
mov
push
rolb
into
pop
mov
popf
mov
or
cmpsl
in
ja
les
xchg
pushf
sbb
mov
jbe
mov
les
in
je
ds
and
mov
cmp
mov
fldt
jp
cmp
subb
dec
cmp
and
pop
push
xor
inc
mov
sahf
imul
push
test
push
in
fistl
pop
shll
xor
push
pop
adc
fisubl
mov
pop
rorl
add
cld
loope
xchg
test
lods
push
sahf
or
pushf
push
mov
cmpsb
xchg
mov
mov
stos
fimuls
popf
mov
mov
lcall
out
jnp
int
cld
sub
dec
pop
cmpsl
xchg
xchg
inc
xlat
sahf
dec
rcr
test
mov
pop
out
sub
inc
popf
std
repnz
fcoml
aad
lret
mov
out
push
aad
or
mov
sbb
xlat
ror
lock
push
jle
mov
enter
insb
or
mov
push
ffree
sub
pop
mov
push
xchg
jo
shlb
shll
and
jle
push
aad
pushf
stc
out
aad
test
sub
sbb
sbb
fcoml
cli
xchg
out
and
or
cwtl
mov
or
and
ja
mov
cld
push
pop
jbe
jns
dec
push
cld
jp
lea
addr16
fcmovbe
pop
rcll
adc
xorb
daa
jl
out
pop
push
dec
nop
cs
out
mov
and
fimull
mov
jge
pop
pushf
loop
xor
mov
sbb
push
mov
negl
adc
fstl
flds
cmp
push
dec
lods
pop
mov
cld
mov
mov
sahf
add
ljmp
cmp
adc
pop
int3
fwait
roll
xchg
push
inc
xchg
cmpsb
int
xlat
ficoml
sbbb
xlat
out
into
aad
inc
fldcw
cmpsl
xor
lods
out
pop
loop
cmpsb
lcall
lret
mov
mov
int3
sbb
test
es
std
stos
sbb
mov
lods
dec
or
and
cmp
pop
or
xor
cmpsl
mov
lds
xchg
rcr
and
cld
stos
cmp
push
lahf
sbb
sbb
inc
fisttpl
insl
mov
scas
push
cmp
push
or
lods
aad
jge
pop
xchg
shrl
mov
fdivrs
pop
test
fcom
nop
pop
out
mov
in
push
into
jbe
inc
mov
ret
repz
cmp
jl
sub
push
fs
mov
or
sbb
stos
pop
push
ljmp
xchg
jp
in
dec
push
shll
push
mov
mov
aas
inc
lds
enter
push
cltd
idivb
pusha
scas
pop
dec
scas
and
pop
cmp
ret
outsb
sbb
pop
scas
cmpsl
pop
mov
ljmp
ss
in
xchg
iret
in
fcompl
push
insl
fmull
mov
rcrb
inc
in
jg
xchg
ret
leave
cmp
mov
mov
nop
cltd
in
push
call
sbb
int
cmpsb
fldcw
pop
xlat
lods
int3
cmp
mov
pop
nop
and
inc
movsl
or
insl
fldt
stos
ret
sub
jmp
dec
adc
or
pop
mov
out
faddl
lret
jl
les
movsl
rcll
mov
lods
addr16
rolb
jge
mov
xor
stc
push
mov
add
leave
xchg
movsb
shll
pop
into
test
or
mov
inc
sbb
mov
mov
rcr
scas
gs
push
xor
aad
lods
imul
adc
jp
and
xchg
mov
out
pushf
mov
push
mov
sahf
jmp
sbb
xchg
jl
dec
int3
repz
push
inc
inc
les
int3
enter
inc
divb
lods
or
les
mov
dec
xchg
pop
shrb
mov
pop
and
mov
jae
ds
call
imul
lret
xchg
jl
cwtl
push
sub
lahf
ret
dec
jae
int3
xchg
pushf
ja
mov
mov
scas
cmp
fnstsw
cmp
sbb
mov
jp
cmp
jle
test
shll
mov
pop
adc
mov
in
push
mov
add
iret
cmp
outsb
dec
sbb
aam
xor
cmp
xchg
sbb
shrl
xor
adc
sahf
lods
adc
push
push
mov
fcmovb
mov
inc
iret
xchg
sahf
int3
cld
in
and
pushf
mov
cmpsb
insb
insl
xchg
mov
sahf
cld
dec
and
mov
inc
inc
mov
push
sbb
push
mov
mov
pop
or
mov
push
rclb
scas
inc
bound
jl
fimull
inc
cld
mov
and
pop
mov
and
pop
test
fbld
mov
inc
jl
add
inc
repz
cmpsl
jp
pop
je
out
cmp
int3
mov
or
push
mov
mov
stc
lea
ror
mov
pop
sahf
pop
dec
roll
sbb
imul
xchg
lcall
lret
mov
adc
inc
ffree
cmp
roll
cli
aam
leave
into
dec
repz
pushf
mov
sub
pop
aad
sarb
je
int
jmp
leave
lock
add
int
rcrl
lea
outsl
into
aad
aam
add
stc
adc
push
ret
sbb
xchg
mov
sbb
aad
into
pop
fbld
jb
xchg
jle
ljmp
push
pop
daa
dec
mov
mov
lret
das
jl
filds
pushf
lods
in
pop
ror
rolw
dec
cmp
xor
repz
dec
sbb
mov
pop
int3
lds
mov
outsl
mov
mov
imull
cmc
sbb
and
push
insb
pop
fnstcw
or
jno
lock
aad
rcll
mov
subl
int
stos
cmpsb
sub
cmp
stos
movsl
int
and
xchg
adc
mov
in
mov
into
jne
jns
pop
int3
pushf
insl
int3
sar
lods
mov
repnz
into
ss
xlat
mov
mov
xchg
push
push
mov
inc
xchg
nop
lret
pop
pop
adcl
xor
or
roll
adc
pop
cwtl
or
mov
xchg
xchg
divl
mov
mov
add
push
mov
sub
shrb
pop
cmpsb
sub
test
pop
pusha
lods
jl
push
xchg
add
sahf
lret
mov
addr16
mov
lret
mov
adc
mov
mov
test
mov
and
cli
push
and
popf
adc
xchg
jl
pusha
test
pop
push
les
sub
mov
cmp
sub
lcall
pop
jle
sbb
sahf
push
push
popf
push
std
scas
test
ret
leave
movsl
fdivp
pusha
xor
rolb
xchg
je
adc
push
imul
pop
mov
inc
xchg
je
das
rorb
data16
or
leave
sti
nop
or
pop
aam
test
in
push
shrb
sub
jl
fildll
mov
out
popf
xchg
pop
cs
sahf
lods
push
mov
fisubrs
mov
jne
int3
mov
icebp
sarl
lea
insl
pop
inc
sbb
push
ficompl
jl
add
mov
mov
and
pushf
cmpsl
xor
sbb
je
mov
imul
mov
out
or
inc
cmp
push
sbb
mov
mov
cmp
aam
lret
je
loopne
xor
pop
fnsave
cmpsb
les
cli
adc
clc
shll
xchg
pop
movsb
xchg
lea
mov
pop
in
outsb
adc
dec
inc
lret
test
pop
rcl
iret
jmp
pushf
aad
test
je
in
cmp
popf
into
lods
aaa
mov
mov
bound
lods
dec
adc
pop
sbb
push
mov
iret
outsb
lds
fldcw
stc
int3
inc
lods
pusha
mov
jge
ss
cmp
pushf
lcall
popf
xor
cmp
cld
push
sbb
popf
lods
pusha
aam
mov
mov
loope
dec
cmpsl
scas
jmp
test
jns
stc
clc
int3
leave
and
mov
sbb
sarl
xor
or
push
insl
jae
push
pop
mov
in
les
sahf
fimuls
imul
das
jbe
dec
inc
dec
sub
adc
dec
push
aad
xor
pushf
scas
sahf
bound
pop
sub
ficoms
fcomps
xor
lcall
fsub
mov
lods
fnstsw
push
shlb
xor
test
fxam
pop
jecxz
shl
test
imul
shl
xchg
push
mov
sbb
sarb
loope
loope
xchg
xchg
pop
mov
pop
xor
fimull
xchg
mov
aam
aaa
pop
cli
xchg
cs
aad
add
rcl
xchg
xchg
dec
adc
dec
lret
popa
test
clc
mov
and
pop
jne
fcmovu
scas
les
das
jne
leave
aas
fisttpll
stos
sahf
xor
xor
pop
fsubs
into
mov
cmpsl
bnd
out
jmp
subl
into
pop
and
xchg
push
cld
sbb
lret
clc
pushf
decb
ror
and
add
jno
ficoms
lret
push
test
fimuls
or
pop
sub
lods
rclb
adc
shl
sbbb
shl
lds
push
pop
mov
lock
stc
mov
mov
and
xlat
int3
insl
push
mov
insl
and
dec
add
cmp
int
lock
ret
sub
or
jge
sbb
cmp
xchg
mov
mov
mov
lods
sbb
sub
pop
shll
push
cs
push
jl
test
outsb
frstor
mov
int3
cmp
jle
push
push
int
aad
push
loope
add
roll
xor
cmpsb
cld
insl
mov
jp
pop
mov
push
shl
fidivrl
jle
cmp
or
pop
pop
cltd
sbb
add
repnz
sbb
xchg
push
mov
scas
cmc
test
or
fdivrs
cmp
scas
shlb
nop
xchg
push
push
out
push
cli
xchg
mov
sbb
sbb
orb
mov
filds
lret
inc
mov
out
xlat
push
scas
pop
pop
sahf
iret
push
xlat
cmpsb
xor
std
jns
dec
sub
fs
in
sbb
jno
xchg
mov
or
shll
ss
incl
mov
cwtl
mov
jno
fsubp
cmpsl
in
mov
jb
cmp
mov
idivb
cmp
pop
mov
cmpsl
adcb
pop
mov
push
shr
jg
aad
mov
mov
pop
cltd
scas
jmp
loope
sbb
xor
jno
fstpt
mov
rol
cltd
mov
xchg
mov
andl
mov
pop
insl
pop
sub
or
fs
xlat
arpl
push
adc
and
sahf
push
sbb
push
sbb
push
int3
rorl
sarl
xlat
lcall
lods
lcall
fs
sbb
xor
das
xlat
mov
fcomp
dec
mov
shll
cmpsl
repnz
sbb
mov
sahf
shll
sub
pop
mov
jmp
inc
mov
nop
xor
pop
mov
rcrl
pushf
cmp
xchg
insl
sub
sarb
movsb
lock
dec
add
push
rcl
mov
inc
sbb
pushf
jb
push
int
rorl
adc
sbb
insl
adc
call
sbb
inc
test
clc
mov
add
cwtl
data16
xchg
cmpsl
arpl
push
xchg
sbb
sbb
cmp
insl
mov
aas
pop
inc
repz
or
sarb
insl
mov
stos
mov
clc
int3
sti
sbb
mov
movb
lret
int
mov
mov
lods
dec
pop
insb
cltd
gs
enter
cmp
sub
jle
xchg
stos
fstpl
jmp
pop
rolb
vpor
mov
dec
insb
jnp
mov
js
loopne
mov
mov
mov
lods
int
push
cmp
hlt
xchg
pop
add
push
les
jecxz
dec
cmp
test
jl
hlt
mov
sbb
mov
sub
and
cmpsl
push
loope
cmpsl
shll
jle
sarl
leave
arpl
jb
pop
adc
push
xrelease
aas
mov
mov
mov
mov
rcll
stc
cmp
xlat
mov
adc
cmpsl
cli
jl
mov
jbe
pop
inc
xorl
jno
push
fbld
pop
arpl
shlb
pusha
xor
cmp
cmc
add
lods
jecxz
test
sub
cmpsl
fidivl
pop
rcl
pop
in
mov
sarb
dec
cmpsb
hlt
push
and
ljmp
adc
mov
rcll
sarl
aaa
and
leave
pop
dec
or
xchg
sub
and
push
shll
push
daa
and
xchg
rclb
aam
xor
mov
inc
pop
sbb
cmp
dec
shrl
xor
mov
pop
jne
cmpsl
adc
pop
push
jge
cmp
fstps
xchg
jle
xchg
mov
inc
xlat
rcll
mov
rorb
mov
xchg
mov
add
mov
dec
mov
push
lds
pushf
xchg
test
imul
mov
pop
rcr
gs
stc
sbb
pushf
adc
sbb
xchg
inc
inc
mov
push
aam
sbb
jle
pop
jae
sub
pushf
xchg
pop
inc
out
movsb
jb
loop
outsb
jge
add
aas
pop
xchg
ret
fisubrl
in
xchg
fisttps
mov
test
push
jns
out
insl
jl
leave
lret
sahf
notl
shl
int3
adc
xchg
push
jp
ficompl
xchg
sub
ret
mov
pusha
lds
inc
call
repz
out
xchg
xchg
popa
dec
sbb
je
lcall
sbb
add
jne
jmp
inc
scas
daa
fwait
aad
fchs
subl
lret
sbb
add
mov
cmp
lret
inc
dec
test
dec
jo
addb
xchg
lods
lcall
rcrl
sbb
repz
fcoms
shr
gs
ret
adc
leave
push
mov
xabort
roll
xor
adc
leave
xchg
into
xchg
push
pop
pop
movsl
fnstsw
and
and
push
or
add
jne
movsb
fsubr
repz
or
lahf
jp
mov
popa
jns
popa
jl
lcall
enter
es
mov
inc
cmp
rolb
ret
jne
hlt
aam
outsb
push
inc
add
cmpsb
out
pushf
rcrl
hlt
rcrl
mov
cwtl
mov
jge
out
dec
test
pop
sbb
push
dec
fdivl
or
mov
int
daa
lods
ss
pop
xchg
pop
ds
add
inc
les
xchg
ljmp
or
jb
call
outsl
je
rorb
xor
popa
pop
dec
lret
sarb
rcl
cs
adc
testl
daa
xchg
xchg
xchg
jnp
fwait
pop
shll
push
divl
ljmp
fcom
mov
bnd
mov
jg
sbb
xchg
std
sahf
sub
imul
mov
mov
mov
jo
stc
push
mov
pop
push
movl
pop
mov
mov
adc
pop
sbb
call
push
push
xor
xchg
lret
pushf
jns
or
xchg
xchg
lcall
gs
fdivrl
jno
daa
cmp
sahf
rcll
fstpl
negb
clc
lahf
mov
mov
out
stos
imul
jecxz
xchg
mov
sub
pushf
mov
sbb
fisttpl
adc
popf
and
pop
mov
sbb
mov
push
stos
push
inc
mov
mov
xchg
push
rorb
cld
cs
test
and
es
mov
clc
insl
xlat
inc
add
testl
mov
outsb
scas
jb
int3
test
rcl
and
mov
sarl
mov
pop
or
pop
inc
out
xchg
mov
stc
shrb
dec
inc
cmp
mov
push
xorl
leave
ret
shl
dec
mov
xchg
fsubl
aam
push
lds
dec
ret
adcl
fcoml
or
and
shll
jb
adc
sbb
mov
mov
ror
aad
jmp
lds
dec
jp
jge
lods
loopne
push
std
cs
lret
mov
clc
lods
aad
push
aam
mov
push
pop
aaa
pop
popf
pop
shl
pop
mov
les
jbe
js
jl
popf
mov
stos
rcll
mov
pop
mov
xchg
out
ss
test
in
shrl
movsl
inc
movsb
pop
fsubs
flds
xor
addb
std
jmp
pop
push
mov
push
jg
mov
xchg
xchg
test
jmp
movsb
mov
add
dec
out
mov
fldt
xchg
jmp
xchg
xchg
mov
scas
frndint
in
or
mov
rcrl
pop
adcb
push
push
sub
add
rcrb
dec
rorl
js
inc
and
fmuls
mov
nop
fimuls
push
int
xchg
jg
sahf
out
dec
clc
gs
int3
mov
inc
mov
cmpsb
push
and
and
xchg
sbb
es
adc
shrl
xor
nop
int3
inc
rcrl
lret
js
int
subb
mov
rcrb
and
adc
inc
add
repz
test
pushf
or
jle
sub
dec
sub
mov
cmp
dec
dec
mov
jno
jl
es
mov
mov
aad
fistl
fld
xchg
or
push
test
mov
jl
shr
jb
mov
mov
mov
into
movsl
xchg
push
cmp
pop
jb
pop
rcrl
stos
leave
push
sub
int
add
test
pop
shlb
enter
cmp
cmp
cmp
mov
hlt
sub
push
xor
cmpsb
xor
push
push
test
pop
insl
test
rcrl
jno
out
rclb
push
imul
sahf
loopne
iret
lods
sbb
sub
int3
imul
cli
shll
mov
add
test
ficomps
inc
push
add
cld
dec
adc
movsb
mov
pushf
addr16
cwtl
sahf
lahf
jno
push
clc
ss
repz
fcompl
inc
shr
shlb
aam
movsl
inc
jge
aam
adc
sbb
ja
mov
ret
mov
mov
add
das
and
push
mov
cmp
lahf
adc
jne
fmull
rcr
mov
sbb
mov
fiaddl
mov
addr16
cltd
sbb
aas
adc
xor
or
mov
jns
aam
xchg
jae
fdivl
repnz
fimull
xor
push
roll
ja
xchg
mov
ror
jns
or
dec
lret
mov
gs
jnp
sbb
pavgw
mov
inc
int3
pop
scas
inc
enter
rcrl
mov
pushf
sbb
xor
mov
rol
dec
push
rcr
or
adc
pop
xor
ds
roll
int3
mov
xchg
xchg
pushf
cmp
cmpsb
stos
lahf
cmp
vmread
push
sbb
add
dec
lods
insl
push
dec
cmc
sarl
fcoml
fst
sbb
mov
mov
cli
mov
jbe
popa
int3
shrb
adcl
jmp
and
xchg
xlat
sub
and
inc
xchg
daa
mov
lods
dec
scas
dec
mov
aad
mov
out
jbe
movsb
pop
pop
ljmp
ja
loopne
jge
scas
dec
dec
jne
mov
enter
dec
flds
mov
jl
test
cmp
fildll
sub
add
or
dec
clc
or
mov
ret
xchg
mov
cmpsb
les
lcall
inc
push
xchg
subl
mov
lret
dec
xchg
mov
xor
or
xchg
sahf
insb
sub
xchg
insb
inc
inc
mov
or
aad
mov
es
add
add
mov
cli
cld
insb
push
sti
push
cmp
ds
add
mov
xchg
sarl
rolb
inc
sti
in
cmc
push
cmpsb
cltd
mov
jl
rcl
loopne
xchg
cmp
pop
pop
push
lods
stos
lods
lock
mov
insl
out
jae
ds
mov
or
xor
aad
mov
pop
inc
int3
fidivrl
xor
or
xchg
add
adc
and
sbb
fstps
add
popf
pop
rorb
pop
add
stos
xor
stc
add
sbb
jne
dec
sarl
xorl
fmul
ljmp
mov
lret
leave
imulb
xchg
mov
shll
jb
xchg
pop
and
fcmovnu
push
jge
xchg
cmp
xchg
push
ja
xchg
aad
nop
mov
or
sahf
lret
int
cmpsb
cli
repz
inc
ds
dec
fstps
loopne
aam
cmp
mov
jecxz
jmp
xchg
xchg
test
mov
mov
dec
and
mov
imul
mov
mov
xor
add
xor
inc
inc
loope
pop
dec
dec
fwait
push
dec
mov
daa
imul
jb
mov
xchg
test
fnstenv
push
xlat
lret
dec
inc
neg
dec
mov
push
mov
dec
in
movsb
fildll
or
je
sub
xorl
inc
push
into
jmp
test
ds
fcmovnb
jl
xchg
rol
xchg
xor
dec
es
stos
pushf
push
mov
pop
pop
or
mov
mov
cs
dec
sbb
lea
fsts
cli
aam
sub
push
out
jne
inc
dec
jl
cmpsl
mov
scas
fisubl
ret
fdivl
jge
jb
lret
sub
iret
sbb
movl
cs
repz
ss
adcb
clc
fldl
rcll
mov
push
js
xchg
lret
mov
inc
adc
adc
decb
sahf
lcall
rcll
mov
into
lcall
fidivrs
rcll
push
xchg
pushf
push
cld
test
int
rcrl
wbinvd
fsubrs
xchg
push
xor
sbb
ret
cmpsl
imul
lea
sbb
mov
fwait
inc
or
pushf
gs
or
dec
pushf
pop
scas
cmpsb
mov
mov
repz
mov
inc
js
inc
push
sub
jl
cmp
aad
xor
shll
xlat
into
pop
push
sbb
adc
pushf
shll
xor
xchg
cld
cmp
sub
test
jp
rorl
arpl
mov
fcom
mov
and
mov
sub
rolb
sub
push
push
pop
dec
rorb
fsub
push
push
mov
in
popf
mov
ja
cmp
fdivs
pop
xor
cltd
ss
and
mov
cli
aam
les
cmpb
cld
imul
mov
rcrl
lea
xchg
push
lds
in
mov
roll
mov
sbb
mov
inc
push
mov
jl
fsts
sbb
jg
pushf
hlt
jle
cmp
std
dec
imul
cmp
sahf
pop
add
lods
mov
cmp
inc
imul
lahf
rorl
stc
mov
test
inc
xchg
lods
cmpsl
sti
jge
xor
repz
filds
xor
ds
dec
stos
scas
loop
or
inc
mov
xorl
aad
dec
push
fldenv
add
mov
sarl
cmc
adc
testb
sub
inc
je
loop
or
lods
xchg
mov
pusha
add
aaa
or
lcall
sub
insb
sub
mov
xor
shl
fcompl
jg
loope
aas
es
pushf
ss
mov
cli
into
xchg
xor
negb
leave
movsl
inc
xchg
fisttpl
adc
test
data16
push
mov
mov
lcall
rcll
pop
fidivrs
fdivrs
es
decl
xchg
lds
clc
pop
ficomps
mov
je
das
fstpt
xchg
mov
pushf
sahf
mov
mov
and
shll
shl
sub
fmull
pop
lahf
test
enter
data16
jle
xchg
xchg
jge
push
cmp
jl
lret
popa
jne
mov
xor
jmp
and
mov
fiadds
mov
xor
xchg
xor
or
ficomps
cmp
test
sub
cmp
xor
clc
mov
mov
dec
jbe
xchg
leave
lcall
sub
sahf
out
fiadds
inc
sbb
insb
loope
orb
cmpsl
pop
sbb
lret
sbb
mov
jg
ficomps
loopne
repz
cmpsb
sbb
ja
int3
sbb
outsb
addb
jge
jg
dec
fisubrs
sti
insl
push
or
aaa
movsl
inc
sub
fsubp
dec
rcrl
mov
fidivrs
fisubs
fdivs
cmc
out
or
cli
cs
mov
push
fimuls
leave
jno
dec
rcll
fsubp
sub
out
iret
lods
mov
cmp
ds
int
jge
fildl
mov
xchg
push
mov
jmp
je
cmpb
xchg
adc
sarl
pop
popa
ja
or
scas
push
pop
dec
rcl
adc
xchg
or
or
lret
and
cwtl
mov
or
pushf
mov
popf
aaa
cmp
enter
mov
jbe
insb
push
xchg
mov
adc
mov
mov
inc
into
movsb
xor
mov
dec
mov
add
roll
sub
cltd
add
push
scas
scas
or
inc
and
fstl
scas
mov
sarb
jp
daa
mov
imul
fsubl
inc
push
xchg
fisubrs
add
pop
sbb
mov
push
rcl
dec
push
shrd
inc
push
jne
xchg
leave
jmp
cld
mov
ds
and
lret
xchg
pop
xchg
adc
cmpsb
pushf
stos
in
js
xor
fimuls
outsb
enter
push
ljmp
mov
xor
dec
dec
movsl
cmp
mul
and
or
push
mov
sarl
sahf
lea
mov
sub
push
shl
mov
repnz
aad
dec
add
rol
dec
pop
insl
or
mov
ja
data16
dec
jle
inc
imul
sub
push
jns
aad
mov
xchg
push
xchg
push
fmull
das
sbb
adc
flds
pushf
jge
andb
cltd
inc
adc
addb
mov
aad
push
and
mov
sub
lret
jb
mov
and
mov
xchg
int3
dec
data16
sub
jbe
sbb
xchg
xchg
addr16
dec
lahf
push
stos
pop
shrl
out
mov
mov
sahf
hlt
lret
mov
test
iret
shrl
lea
inc
mov
cmp
aas
cmp
add
int
aas
inc
aam
stos
pushf
pop
cmp
lcall
ret
inc
loop
mov
or
rcl
das
dec
adc
in
mov
lea
xlat
daa
call
insb
pop
faddp
dec
ja
push
int3
cltd
inc
pop
xchg
das
outsb
xor
or
rorb
sar
sub
ja
mov
mov
mov
cmp
add
inc
mov
pop
in
adc
sti
lea
xchg
lods
mov
lods
sahf
lret
rcl
lret
stc
lret
test
pop
push
push
jns
popf
cmp
pop
int
push
sub
pop
pop
fdivrl
cli
sarl
inc
mov
fstps
scas
or
in
inc
push
pop
push
dec
adc
adc
fisttpl
jmp
inc
mov
mov
adc
test
movsl
sahf
enter
mov
mov
cs
add
inc
mov
pop
int
mov
jle
pop
leave
mov
pushf
sub
mov
leave
aad
xlat
adc
mov
xchg
xor
sarb
push
mov
sbb
mov
xchg
mov
aad
stc
mov
mov
addr16
xor
push
and
shlb
mov
dec
xor
shl
inc
sbb
outsl
orl
in
frstor
lret
jnp
cmp
jb
fists
cmc
stos
es
xchg
push
sub
jno
mov
loop
int
std
scas
shlb
adc
mov
test
das
push
mov
iret
leave
mov
mov
or
popl
add
aam
rcrl
push
cmpsb
shrl
push
mov
sbb
lods
sbb
ret
cli
xchg
test
cmp
or
into
sarl
inc
loopne
adc
mov
push
cmp
xchg
jns
mov
pop
push
sarl
push
add
sub
dec
xchg
pop
test
xor
call
cmp
push
push
sbb
test
jmp
inc
dec
mov
xchg
mov
cs
adcb
sahf
sbb
scas
jmp
insl
xor
movsl
jmp
push
mov
adcb
imul
pop
mov
cmpsb
xlat
push
push
in
mov
pop
jne
rcrl
shr
sub
or
sbb
pop
mov
inc
xchg
dec
int
fld
idivl
in
push
mov
sub
sbb
cmp
jmp
addr16
sub
jmp
cmpb
test
es
jp
lods
jne
sub
and
pop
pop
pop
cmp
sbb
mov
add
lcall
cmc
push
lcall
inc
notb
out
xchg
dec
add
and
popf
pop
sub
sub
loop
in
mov
jl
inc
and
fstps
mov
ds
mov
lret
cmp
addr16
pusha
xchg
push
fidivrl
mov
std
lods
outsl
stc
scas
fdivrs
jne
mov
dec
scas
xchg
mov
add
xchg
and
movsl
int
orl
jle
mov
cltd
inc
xor
fisubrs
cs
fistps
ljmp
imul
iret
loop
movb
or
lcall
stos
lret
dec
or
cli
insb
shrl
add
sarl
lcallw
roll
scas
mov
or
pop
call
push
add
arpl
pushf
ljmp
subl
stc
mov
stos
aad
xchg
jl
mov
dec
dec
jb
test
int3
insb
sbb
push
hlt
and
int3
xor
sti
rcll
pop
push
shr
test
pop
addr16
rorb
or
aad
sti
xchg
sbbl
movsb
pop
dec
sbb
fcmovbe
xor
les
ret
jne
insb
cmp
mov
into
loop
adc
shrl
push
movsb
mov
iret
lret
mov
add
or
dec
cmp
or
inc
inc
inc
mov
sub
lret
loop
negl
fistpll
outsb
pusha
add
dec
sbb
mov
xchg
sbb
sub
xchg
lcall
adc
pop
cld
push
and
pop
sbb
sarb
jg
data16
sahf
int3
sarl
and
add
lds
shll
fcmove
and
adc
jecxz
push
daa
xchg
and
cltd
int
aad
xchg
pop
sbb
ss
sbb
lods
adc
pop
xchg
mov
fstpt
mov
js
out
popf
and
dec
pushf
xchg
icebp
mov
jmp
cwtl
pop
sub
add
cmp
push
bound
and
add
jns
xchg
out
test
push
mov
or
xchg
xor
adc
mov
jge
pop
sbb
loope
test
pushf
jb
test
loopne
aaa
ret
out
lcall
pop
outsl
jmp
push
add
push
scas
insl
lods
lret
negl
pusha
int
in
xchg
inc
add
mov
mov
dec
lcall
mov
aam
shlb
aad
sub
mov
xchg
dec
adc
into
or
sahf
cld
lret
push
dec
fisttpll
roll
sub
shll
or
inc
test
mov
xchg
xor
pop
dec
dec
dec
sbb
cmp
pop
jno
xchg
pop
dec
jmp
bnd
jne
aad
into
inc
mov
repnz
and
shlb
mov
pop
cs
popa
addl
dec
les
movl
call
rol
popf
sub
divl
cmp
cwtl
and
cltd
mov
movsl
jb
rorl
lret
insl
inc
jnp
bound
fs
fs
sbb
repnz
loope
pop
mov
shll
int3
push
jns
push
nop
dec
int3
js
add
or
dec
pop
popa
daa
mov
out
pop
or
aaa
insl
adcb
fmulp
cmpsb
pusha
push
rcrb
sbb
or
and
cwtl
sti
rcrl
add
mov
cwtl
jo
ds
jae
in
addr16
jmp
fdivrl
push
mov
sti
cmp
testb
and
mov
lods
jne
sti
out
ds
sahf
fsubl
gs
mov
pop
mov
mov
push
scas
or
int
sub
mov
mov
and
sbb
jecxz
mov
jle
jmp
test
xor
aad
pop
jne
push
bound
xor
and
mov
fistpll
add
shlb
sub
ds
insb
sbb
mov
in
neg
push
sbb
cmpsl
jmp
pushf
fldl
mov
or
rcrl
int3
push
shlb
sahf
or
stc
xchg
and
cmc
and
fs
and
in
sub
lock
dec
push
imul
xchg
loope
inc
ret
sub
add
jb
sar
cmp
cwtl
mov
sbb
add
mov
das
les
test
scas
shll
ljmp
dec
inc
sub
and
xor
mov
dec
pop
push
fstpl
std
insl
mov
sbbb
sub
sarl
cltd
into
adc
push
sbb
dec
icebp
dec
jl
loop
movsb
adc
mov
addr16
sarl
scas
int
xchg
or
stc
adc
xchg
sbb
fldl
fwait
mov
mov
adc
int
lods
cmp
sbb
rolb
rolb
bswap
push
sbb
iret
mov
inc
cmpsl
insb
jmp
push
mov
inc
stos
lahf
pop
jge
testl
popf
mov
movsl
cmpsl
in
test
scas
fdivrp
cmp
negl
ljmp
adc
lods
dec
repz
repz
rol
xchg
repnz
test
jb
test
mov
mov
loop
fildl
call
mov
pushf
sbb
scas
movsb
ljmp
mov
ss
jbe
sahf
pop
insl
icebp
mov
push
add
xor
xchg
push
mov
fsubrs
adc
or
jle
test
dec
int3
mov
sti
andb
sarl
pop
sub
cld
ljmp
loopne
cmc
ljmp
jnp
sarl
rorl
dec
push
mov
lods
push
push
mov
xchg
cmp
out
aad
lods
popa
lcall
mov
shr
shrl
push
daa
sarl
fs
dec
mov
test
cmpb
add
mov
xchg
shl
mov
adc
je
gs
sub
push
imul
lods
mov
shrl
pop
daa
adc
inc
mov
xchg
mov
fbstp
fcoms
in
notb
insb
shrl
cmp
gs
clc
cmp
add
enter
gs
mov
push
lea
stc
fdivs
popa
aad
adc
sbb
pop
lahf
jbe
or
sarb
mov
or
mov
push
inc
stc
mov
stos
xchg
sub
rcrl
jae
out
sbb
stos
in
cmp
cmp
fimuls
push
mov
cmp
in
dec
roll
xchg
insb
pop
pop
stc
mov
sbb
sub
in
jno
aam
pop
shl
jmp
pop
sub
je
mov
movsl
inc
xchg
addr16
cmpsb
outsb
cs
rcr
dec
enter
aam
roll
pop
into
lret
xor
inc
xchg
sbb
mov
mov
movsl
fwait
in
adc
dec
mov
push
scas
movsl
flds
repz
or
mov
movsl
fistl
cmpsb
mov
xchg
fisttpl
aam
call
setle
adc
popa
ret
cs
movsl
adcb
cmp
mov
jge
mov
jbe
sbb
xor
mov
push
add
jecxz
es
pop
push
mov
incl
and
mov
push
jmp
sbb
adc
ljmp
faddl
aas
push
jle
pusha
sbb
and
cmc
push
shll
sbb
push
mov
jo
mov
pop
dec
or
dec
lret
js
jmp
fimull
xchg
test
cwtl
out
ljmp
mov
mov
dec
inc
roll
popf
rclb
into
mov
jae
lcall
jge
test
loope
shl
lods
imul
cmp
test
adc
xchg
int
fadds
mov
add
xor
xchg
ret
stos
push
fsubs
inc
sub
cwtl
cmpb
sbb
xchg
xchg
sbb
std
das
int3
adc
mov
jbe
sbb
pop
addr16
int3
push
pop
stc
lods
xor
bound
inc
push
rorl
or
imul
xchg
mov
stc
cli
inc
fcmovu
push
xor
add
push
dec
mov
clc
popa
pop
cmpl
ds
jecxz
test
rclb
orl
mov
mov
test
add
pop
push
mov
mov
sarb
cwtl
mov
mov
push
cltd
add
sbb
xchg
mov
cmp
loop
int3
mov
inc
pop
gs
jo
sbb
push
dec
lret
xchg
mov
sti
aas
mov
shl
bound
adc
sbb
push
insl
sub
mov
jge
cmp
cli
mov
ror
in
lret
insl
into
mov
pop
sbb
xchg
mov
jge
mov
roll
shrl
mov
leave
gs
ljmp
fdivl
scas
repz
jle
int
adcb
mov
lock
fmuls
repz
sub
iret
fisubs
mov
shrl
mov
bound
movsb
inc
ss
pop
push
add
repnz
jnp
sarl
aaa
cmp
cmp
inc
dec
mov
or
hlt
inc
mov
inc
ljmp
mov
pop
inc
jmp
lds
xchg
cmp
sti
mov
fadd
add
mov
fs
sbb
sub
loop
cmpsl
or
sbb
mov
orb
xor
pop
setne
ficompl
aad
jl
dec
mov
and
sbb
gs
xchg
xchg
pop
movb
dec
shl
xor
ja
test
push
add
shll
lods
sbb
mov
fcomi
push
cld
cmp
pop
pop
out
or
inc
decl
fidivl
enter
rolb
lods
mov
dec
sbb
push
shlb
sbb
pop
pop
jmp
enter
pop
cmp
test
out
ror
sub
adc
adcl
mov
mov
pop
inc
xor
cmp
jns
push
frstor
mov
dec
push
in
sti
je
mov
imul
jmp
pop
sub
push
pushf
mov
je
mov
cli
clc
test
fldcw
sbb
jns
cmp
lahf
mov
ficompl
xchg
sbbl
insb
mov
pop
inc
out
sbb
ljmp
push
sbb
xchg
fwait
sti
sub
pop
cmpsb
lret
icebp
sahf
and
mov
dec
lods
or
inc
sub
lods
jmp
repnz
aad
push
aas
and
inc
cmp
jb
jns
mov
dec
ljmp
inc
push
stc
stc
fwait
mov
enter
mov
test
in
test
ja
lahf
cwtl
inc
jne
adc
jmp
mov
sarb
xlat
loopne
adc
popf
mov
mov
mov
cltd
movsl
inc
call
or
sub
ljmp
inc
pop
mov
std
das
shl
mov
test
jle
sub
lods
jge
cmp
sbb
and
arpl
push
inc
testb
sub
cmpb
jmp
call
rorl
xchg
cmp
lods
jmp
outsb
shll
mov
in
xchg
test
flds
popf
lods
imul
insl
in
rorl
mov
cmc
lret
aad
nop
mov
jnp
sub
fwait
out
jmp
pop
jle
push
add
insb
fmuls
add
arpl
faddp
sub
jle
mov
not
dec
sub
je
inc
mov
in
movsl
ret
jp
aam
jns
orl
xor
jne
pop
mov
and
pop
mov
sti
sub
sbb
mov
cltd
movb
mov
ret
dec
dec
xchg
mov
xor
js
sub
stos
lods
shrl
sbb
stos
repnz
les
or
push
or
pop
inc
notb
and
adc
jno
dec
ret
mov
cmpsl
fdivl
andb
fwait
mov
bound
or
mov
pop
pushf
sbb
mov
push
push
cmpsl
jge,pt
push
push
mov
sahf
pusha
pop
popf
and
xor
cmp
enter
mov
mov
inc
loopne
lds
mov
nop
stos
daa
orl
nop
lahf
repnz
roll
or
pop
ror
scas
rcll
jge
mov
fldl
fidivrl
xchg
inc
xchg
fnstenv
and
sarl
scas
shll
les
out
mov
mov
sbb
inc
out
insl
xchg
xchg
cld
cltd
mov
dec
movsl
cld
mov
insb
imul
out
push
lret
aam
sub
aad
int3
cmpsb
mov
dec
scas
idivl
icebp
outsb
mov
xchg
push
cmpl
lret
jge
clc
mov
cmc
mov
or
pop
cmp
incb
sub
scas
negl
out
mov
aad
aam
repnz
add
scas
movl
or
shl
jno
fisttpl
sub
adc
int
push
jno
mov
push
cld
dec
xlat
dec
aad
movsl
pop
fisubrl
adc
push
sub
out
lods
dec
and
mov
mov
xchg
movsl
push
mov
je
outsb
sar
mov
out
xor
sub
xor
subl
lods
adc
testb
js
loopne
hlt
cmc
dec
sbb
sub
sub
pop
xor
jbe
cmp
testb
fsubr
mov
xchg
lahf
push
push
fucomi
stc
mov
out
xor
mov
sahf
pop
push
dec
xor
mov
sub
in
test
push
bound
imul
or
pop
and
pop
cli
sub
cmpsl
dec
scas
lcall
stc
and
jl
mov
scas
pop
sub
cmpl
scas
nop
int3
inc
xchg
insb
adc
push
femms
lods
mov
int3
xor
dec
rcll
adc
dec
call
push
xchg
js
adc
jb
mov
inc
scas
hlt
mov
fwait
inc
movsb
add
inc
sbb
jmp
movsl
out
hlt
daa
aad
gs
pop
sbb
imul
repz
stc
in
mov
or
out
mov
jg
popa
sti
shll
mov
add
dec
sub
xchg
insl
fcomps
jae
sbb
dec
lds
movsl
pop
pop
sbb
cmpsl
addr16
xchg
pushl
fsubrs
sar
test
jl
dec
pop
push
ficompl
int
fcom
popa
mov
or
pop
pop
xlat
arpl
cltd
sbb
dec
mov
imul
testl
or
or
sahf
loope
push
add
movsl
pop
fmul
push
rol
sbb
pop
sahf
or
popf
jne
popa
adc
or
stc
xchg
push
mov
dec
xchg
insb
dec
adc
jge
pop
test
xlat
jb
and
and
popa
xor
cmp
pop
inc
sar
sub
push
pop
outsb
pop
pop
jae
pop
int3
jo
xchg
pushf
dec
xchg
add
adc
sbb
add
push
into
mov
fnstcw
js
xor
xchg
aaa
scas
xchg
and
mov
jge
jle
js
pop
repnz
sub
ljmp
leave
cmpb
push
cmp
add
mov
mov
lea
mov
dec
test
push
push
shll
insl
lods
adc
lds
adc
pop
ror
mov
add
adc
cmp
rorl
xchg
lahf
adc
lcall
std
insl
imul
jge,pt
int3
mov
movsb
es
push
pop
rol
addl
int
xor
roll
add
sbb
sahf
into
jmp
icebp
push
int3
gs
sti
rorl
jne
mov
je
xchg
push
mov
data16
cvtdq2ps
add
xchg
jmp
aas
stc
enter
cmp
cmpsb
jg
fwait
mov
fildll
enter
test
lock
jge
push
pushf
ret
sub
mov
push
setp
xor
pushf
in
cmp
lds
cmp
push
addr16
adc
pop
ja
fst
lret
rcrb
or
mov
divl
push
lods
stos
sub
insl
xchg
lret
mov
nop
ficompl
mov
shll
cmc
dec
sub
sub
ja
dec
cmpsb
mov
jle
sarl
in
xchg
leave
mov
lds
sub
mov
mov
mov
sahf
or
or
popf
xchg
ds
inc
cltd
mov
rol
mov
or
pop
adcl
push
lcall
push
pop
push
mov
test
cltd
inc
cmpsl
in
cltd
adc
xchg
pop
rorl
cltd
sahf
int
int3
mov
insl
iret
mov
dec
pop
pop
add
xchg
mov
and
ds
xor
fsub
stc
insl
inc
ret
mov
mov
or
ds
ret
mov
xor
aas
jge
rcl
jl
or
dec
out
sbb
sbb
cmc
ljmp
pop
insl
shlb
sahf
jp
adc
lret
ret
adc
int3
sub
mull
hlt
and
push
pop
fld
cmp
rolb
lret
ljmp
pop
lds
test
jne
cltd
scas
fwait
out
pop
pop
cmpsl
add
xchg
mov
inc
mov
and
pop
sub
push
push
pop
mov
lret
xchg
xchg
mov
sub
and
push
sbb
or
and
sbb
dec
mov
ret
jns
adc
push
mov
xchg
fnsave
mov
loop
lods
insl
mov
rcll
sbb
mov
ds
lods
lock
mov
ds
jno
mov
add
mov
push
fnstsw
aas
mov
push
sbb
cmp
xorl
dec
mov
cmp
pusha
dec
xchg
mov
repnz
fdivrp
pop
ds
scas
mov
dec
mov
push
jnp
dec
in
je
aad
mov
mov
addl
lds
mov
lods
cmpsl
pop
out
stos
push
push
test
clc
int
mov
das
fcom
lcall
mov
cmpsb
rcrl
cmp
in
ds
addb
xchg
iret
cmpsl
in
mov
aad
jp
int3
add
adc
imul
fisubrs
adc
lds
push
sub
pop
push
pop
rcll
inc
imul
scas
dec
mov
fldt
adc
ficoml
pop
aam
jbe
dec
inc
adc
repz
fldl
jl
stos
outsl
lahf
jmp
push
int3
test
ss
jmp
shll
popa
jae
cli
rcl
test
adc
fcmovu
inc
cwtl
cld
out
adc
lods
dec
mov
pop
push
test
rcr
xchg
mov
mov
sbb
xchg
jl
sahf
fld
fnsave
scas
jbe
leave
fsubrs
addr16
dec
push
ds
add
mov
cmpsl
add
mov
ja
addr16
std
out
add
addr16
lret
pop
jns
imul
test
cmp
mov
roll
push
xor
add
stos
pop
in
daa
enter
lea
jae
in
test
mov
sahf
jecxz
in
mov
sahf
out
int3
dec
faddl
jle
aas
and
push
or
je
aas
sti
mov
out
mov
xor
push
push
push
mov
lds
enter
mov
addr16
stos
enter
push
ret
rcrl
jp
vmovntps
es
adc
rol
xchg
xor
out
xor
jo
add
xchg
les
je
pop
prefetch
repnz
xchg
rcrl
inc
xor
les
jg
scas
ficompl
cld
or
push
sarl
loope
jmp
pop
int
add
lods
pop
or
add
mov
or
movsb
jne
mov
pop
mov
pop
andl
cmp
cld
dec
roll
test
seto
sbb
sub
xlat
mov
into
push
movsb
push
jge
inc
fwait
mov
jb
fmuls
adc
test
int3
push
mov
xor
pushl
xchg
fcompl
sub
inc
stos
jmp
movsb
add
stos
rcrl
xor
test
push
sub
inc
mov
push
add
fsubl
push
mov
mov
xor
shll
inc
inc
std
mov
loopne
dec
pop
pop
xlat
mov
outsb
in
notb
cltd
into
jg
jno
mov
mov
cmp
mov
and
inc
dec
mov
insb
sbb
subb
in
push
lret
mov
fcmove
fcom
dec
jg,pt
inc
rcll
cltd
inc
imulb
pop
hlt
out
mov
sbb
mov
out
pushf
mov
pop
add
sbb
aad
sub
test
sbb
cmp
xchg
sbb
dec
aad
sbb
adc
faddp
inc
mov
lods
push
inc
push
aaa
mov
lahf
jnp
jne
dec
or
jbe
lret
lcall
add
pop
or
or
in
outsb
movsb
scas
pop
cmpsb
sbb
jmp
fsubrs
dec
fstl
xchg
jl
pop
cmc
and
add
aam
pop
mov
stc
rorl
mov
into
out
movsl
jg
nop
mov
inc
fbstp
jb
sbbb
mov
arpl
psadbw
gs
dec
inc
out
add
stos
stos
inc
std
push
lahf
rolb
lds
fldcw
inc
jo
pop
shrl
mov
sbb
push
mov
xchg
cs
and
jne
into
nop
iret
xor
cmp
shrb
lcall
add
roll
std
cltd
int3
jl
pop
ss
push
icebp
out
or
push
and
fisubl
or
gs
dec
sar
sbb
add
mov
jne
out
jle
sbb
fwait
mov
mov
popf
jle
cmp
test
mov
lds
fs
sbb
pusha
popa
push
nop
xchg
rcl
test
dec
out
cmpsl
push
fcmovnbe
scas
popf
into
jo
dec
push
jnp
mov
adc
pop
mov
rcrl
or
jmp
popf
xor
cmpsb
mov
pop
cs
jl
xor
add
lcall
lret
mov
push
cmp
rcr
test
sbbb
fadds
cmp
cmp
sub
push
lret
jne
in
xor
xor
call
mov
daa
stos
loop
nop
shlb
lahf
out
adc
pop
or
mov
push
std
je
and
into
dec
nop
into
xchg
aam
hlt
adc
gs
mov
test
das
movsl
cld
dec
pop
xor
mov
imul
fs
mov
cmp
insb
ja
jg
adc
inc
mov
dec
adc
mov
repnz
and
pop
push
sar
jae
or
mov
jge
mov
xchg
and
clc
push
pop
mov
mov
out
and
mov
lea
pop
or
inc
sbb
cli
jbe
ds
shl
add
out
jo
jge
mov
ds
fsubl
dec
adc
cmpsb
dec
add
daa
mov
stos
shrl
nop
jns
pushf
icebp
iret
and
popf
push
mov
xor
stos
repz
jle
jb
ret
xor
xchg
addb
pop
pop
add
stc
mov
mov
lods
pop
adcb
sub
mov
cmp
popa
inc
mov
push
in
ljmp
push
dec
sarl
fst
daa
pop
sarl
xor
in
aad
cs
adc
xor
mov
push
add
aam
rol
jae
stc
ret
inc
les
mov
xchg
cvtps2pd
pop
and
xlat
cmp
adc
mov
or
fwait
jge
add
push
pop
cmp
jp
dec
mov
or
or
les
xchg
push
mov
mov
add
pop
fdivs
lret
adc
sbb
out
movsb
inc
clc
pop
ds
fxch
jecxz
jl
and
sar
xor
pop
test
notb
pop
loopne
lcall
rol
mov
out
mov
adc
rorl
ja
dec
lahf
push
mov
sahf
rcrl
pop
je
repnz
in
ficompl
cltd
iret
mov
cmp
scas
loop
fucom
inc
or
enter
daa
lea
sbb
inc
xor
dec
adc
sub
add
mov
xchg
inc
inc
lods
lods
ficoml
push
sbb
lods
out
xor
fsubl
sub
int
stos
mov
out
pop
out
pop
scas
and
inc
rcll
inc
inc
or
int
repnz
mov
push
test
mov
xchg
orl
xchg
lahf
mov
mov
fidivs
ja
lods
into
jns
pop
pop
pushf
xor
cmp
xchg
jmp
mov
mov
jbe
inc
leave
inc
sub
adc
adc
pusha
rcrl
dec
and
cmp
rcr
rclb
roll
and
test
mov
fmul
jbe
leave
outsb
pop
dec
aad
sbb
pop
ret
aas
xchg
jne
sbb
lahf
mov
pop
sub
int3
mov
pusha
dec
call
lret
adc
jle
sar
imull
push
mov
fdivr
std
adc
clc
aad
jge
and
mov
xchg
xchg
and
sar
in
cmc
or
or
pop
cmp
testb
gs
fnstsw
mov
popf
jne
sbb
loop
xorl
jae
sti
jne
dec
stos
fstl
xchg
fidivl
xlat
std
lret
ds
xor
insb
xor
mov
dec
aam
jl
inc
das
add
ds
and
jno
mov
lods
shrb
mov
pop
cmp
cmp
mov
pop
adc
pop
jbe
lret
lahf
cmp
adc
or
inc
mov
push
pop
mov
jg
jmp
push
and
fldt
dec
repnz
inc
fbstp
pop
jne
test
xor
pushf
popa
push
mov
pop
in
push
aad
test
pushf
fcoml
sub
lods
sub
mov
pop
mov
jne
push
xchg
out
cmp
push
das
lcall
int3
lds
push
cmpl
jmp
sbb
pop
adc
pop
mov
jbe
sub
jmp
pop
leave
movsb
or
movsl
push
dec
xor
push
mov
fisubrl
out
sub
fildl
add
cmp
xor
sub
mov
ds
pop
and
sub
or
test
shll
dec
or
push
sub
adc
sahf
mov
movaps
and
imul
mov
jge
repz
mov
inc
xchg
es
mov
outsb
je
dec
pushf
add
es
pop
xlat
add
sub
sbb
dec
ds
mov
sbb
dec
std
push
adc
push
loop
jae
mov
pminsw
lcall
add
mov
pop
aad
sub
sub
mov
fdivrs
adc
lahf
jne
les
sar
dec
sbb
mov
or
mov
aam
sbb
dec
in
or
xor
mov
jle
dec
lods
xor
lret
fdivrs
pop
jne
xorb
repnz
pop
lds
lock
adc
add
xchg
push
push
mov
iret
dec
mov
fldl
cmp
mov
repz
adcb
shrl
xor
outsl
inc
sahf
pop
sub
mov
ja
mov
cmp
mov
xchg
mov
pop
cmp
mov
sbb
pop
jno
sbb
and
in
jae
or
ret
pop
jge
mov
or
mov
fst
xchg
and
mov
pop
xor
into
aas
clc
nop
pushf
ljmp
cmp
add
adc
adc
mov
shll
fcmovu
inc
cli
mov
ret
dec
shll
xchg
sbb
jg
xor
outsl
insb
sub
mov
sub
lods
clc
fstps
sub
cmp
bound
pop
lret
scas
pop
adc
mull
or
addr16
ret
movsl
push
in
pushf
repz
dec
cli
inc
cmp
xlat
aad
fldl
lret
mov
stc
mov
adc
test
sub
sarl
jne
fdivr
movsl
movsb
insl
jo
cmp
jmp
arpl
into
roll
fildl
loop
je
inc
inc
mov
xchg
add
sbb
xchg
fisttps
cld
sbb
ficoms
or
ds
gs
mov
xchg
int3
or
mov
popa
jl
cwtl
lods
sbb
pop
lods
jmp
sbb
lock
inc
xor
mov
lods
xor
mov
pop
adc
in
push
mov
add
insl
pop
into
outsl
mov
mov
int3
push
gs
mov
lods
or
xor
lods
sbb
int
repz
fs
or
inc
xor
js
lods
adc
hlt
jp
jae
pop
out
test
stos
pop
mov
cwtl
sahf
out
and
addl
data16
jecxz
pop
mov
jnp
out
sar
add
rcrl
stos
mov
xchg
andl
ljmp
ror
cmp
pop
jb
fists
cmpsl
ljmp
sub
mov
or
cmp
lods
pop
out
decl
fmuls
jge
mov
subb
jle
imul
mov
xchg
mov
mov
mov
aas
sub
call
or
andl
pop
mov
inc
push
mov
outsl
cs
or
repnz
pop
mov
xchg
je
cmp
ds
daa
cs
cltd
pop
adc
stos
and
and
adc
xchg
adc
pop
insl
dec
scas
sub
xchg
mov
fcomps
fdivs
pop
jae
jl
xchg
push
notl
repnz
lahf
mov
push
add
xchg
cmp
rcrl
hlt
shrb
dec
imul
fwait
xchg
adc
nop
cmp
mov
out
jp
into
shll
pushf
xchg
xor
inc
dec
mov
jge
push
enter
xchg
pushf
loop
sahf
mov
jae
shrl
cmp
jb
test
jecxz
lahf
mov
jmp
mov
and
cs
vpcmpeqb
mov
shll
add
shll
lret
push
es
jo
or
pop
pop
adc
push
fldcw
mov
movsb
sbb
mov
cmp
jne
or
ret
dec
pop
pushf
clc
sbb
mov
lret
out
inc
xchg
loope
shll
hlt
xor
out
sbb
mov
adc
sbb
mov
push
dec
imul
shlb
clc
inc
int
xchg
xlat
sbb
ja
pop
faddl
push
add
cltd
or
imul
or
add
pop
shlb
add
pop
icebp
mov
cmp
lods
pop
xchg
sub
dec
push
lds
int3
in
mov
sbb
popa
in
mov
in
je
dec
jae
xchg
add
push
mov
frstor
sarl
mov
insl
sub
repz
dec
xlat
aas
ficompl
lcall
push
cmp
stc
and
shrb
jle
add
icebp
in
fisttpl
sbb
fwait
xchg
xchg
mov
mov
int
out
repz
decb
dec
jne
push
mov
mov
cmpsb
inc
rorl
sub
push
jle
dec
pushf
pop
repz
lret
sahf
xchg
jge
roll
lret
out
int
xor
test
cmp
mov
cli
xchg
mov
rcl
mov
cmpsl
mov
xchg
sub
ds
mov
sar
dec
addb
aaa
pushf
lods
mov
jge
shlb
cmp
adc
lahf
push
pop
mov
repz
jl
fscale
gs
and
das
xchg
jle
push
hlt
out
mov
add
jecxz
lret
and
cmp
pop
sub
adc
dec
sbb
lcall
shrl
sub
jg
pop
lds
hlt
leave
mov
std
cmp
in
xchg
movsb
inc
push
lods
pop
xchg
mov
call
sbbb
xlat
mov
mov
cmp
lods
pushf
mov
mov
xchg
mov
mov
out
sbb
push
in
inc
sbb
aam
and
sub
mov
fldenv
rorb
add
lods
cmc
sahf
xor
sbb
mov
xor
lds
ja
mov
jne
sub
push
mov
std
fdivr
bound
lcall
stc
push
push
repnz
sub
sub
pop
dec
xchg
inc
test
aas
push
out
xor
mov
ja
andl
std
int3
sar
mov
jge
popa
rcrl
sbb
xchg
std
sbb
jecxz
inc
clc
add
and
push
fsubrs
fstl
js
pop
repnz
inc
arpl
in
insl
insl
repz
fs
mov
in
xchg
mov
jns
ss
shlb
call
cmpsb
cmp
push
stos
cmp
arpl
dec
jl
adc
jmp
adc
mov
or
mov
aas
aad
mov
andl
test
xor
dec
push
test
xchg
repnz
xlat
fwait
into
mov
jmp
pop
addr16
mov
lea
inc
adc
aam
pop
dec
aas
addr16
repnz
xor
cmpsl
in
mov
mov
rcrl
dec
in
add
jge
sbb
data16
gs
lds
jl
xchg
xchg
les
lds
fmul
mov
cmp
pushf
xchg
dec
dec
push
nop
xorl
cmp
xchg
ds
nop
cmpsl
pop
jle
cmp
int3
xor
movsb
mov
xchg
dec
push
push
pushf
push
cmpb
mov
cltd
ficoml
add
repz
inc
mov
fiaddl
das
inc
cld
out
mov
sub
fiadds
pop
xor
jg,pt
ficomps
out
inc
cld
jne
mov
fcmove
inc
pushl
subl
push
fidivrs
loope
xchg
jle
xchg
mov
cmpsl
fimuls
pop
push
fcmovu
or
mov
fwait
xchg
mov
ss
lcall
dec
mov
sti
sub
pop
sub
pop
fdivrp
pusha
aaa
movb
test
sub
repz
cmpsl
cmp
dec
clc
into
mov
prefetch
or
xchg
cmc
out
adc
push
loopne
pop
fsubl
pop
pop
mov
jecxz
pusha
mov
mov
add
clc
sbb
push
daa
mov
pop
les
shlb
add
xor
xchg
adc
pusha
fs
stc
add
xchg
test
in
pushl
pop
out
mov
inc
inc
push
test
addl
adc
dec
dec
out
mov
mov
shll
xchg
outsb
movsb
xchg
les
sub
cmpsb
in
or
or
in
repz
das
popa
cmpsl
rorl
sbb
cltd
movsb
daa
subb
dec
cwtl
mov
rep
sbbb
cmp
shr
sub
mov
stos
adc
xor
mov
imul
sub
jecxz
jne
sbb
dec
jle
test
adc
pop
mov
outsl
sar
daa
arpl
mov
scas
into
sarl
sub
xchg
push
mov
lcall
pop
xchg
or
int
push
sahf
sub
into
leave
add
pop
add
pop
adcb
cmp
push
adc
aam
xchg
pop
push
cwtl
pop
jg
or
lock
mov
aad
pop
sbb
fisubrs
push
sub
xchg
into
pop
mov
cmp
mov
pop
mov
rcrl
fdiv
pop
mov
pusha
jae
xchg
mov
loope
pop
sti
test
sar
out
lahf
shrb
andl
add
mov
rclb
push
xchg
out
je
push
or
into
sbb
lods
or
imul
pushf
int3
xchg
daa
inc
xchg
push
add
repz
mov
cmc
add
in
mov
push
cmpsl
js
cmp
mov
shl
out
or
dec
mov
cmp
pop
ja
movsb
xlat
aam
xchg
mov
lods
jae
push
fidivrs
add
push
loope
xchg
dec
lods
mulb
mov
push
fdivr
mov
ret
jl
movsl
pop
insl
int3
mov
stos
stos
lock
or
fstpt
pop
shll
pop
cld
sub
or
xor
pop
adc
push
and
or
adc
mov
mov
sub
and
popa
fwait
test
ja
in
sbb
jge
pop
mov
icebp
sub
or
out
push
jg
add
arpl
stos
pop
mov
adc
rcll
sbb
and
xchg
inc
mov
push
lret
insb
sbb
aas
rcrb
std
push
fwait
dec
out
pop
loop
cmp
je
imul
sahf
xchg
jns
and
arpl
test
jle
mov
inc
mov
push
sub
xchg
xchg
dec
jl
mov
and
fidivs
mov
enter
jecxz
mul
jge
cmp
push
test
cmpsl
dec
jbe
popf
insl
mov
cs
std
rorl
sbbl
push
mov
cmpsb
inc
aad
frstor
xorl
mov
inc
jmp
mov
xchg
mov
pop
int3
ljmp
cmp
aaa
mov
scas
jne
pop
sbb
popa
cmp
dec
push
shrl
test
mov
push
jp
xchg
inc
lods
pop
mov
das
cmp
mov
shlb
aaa
jge
rcrl
sbb
inc
cltd
pop
xchg
mov
jl
push
mov
mov
inc
fistpll
ret
daa
test
out
add
adc
daa
imul
pop
movsl
jle,pn
add
cltd
inc
xor
push
rcrl
arpl
cmc
pop
outsb
jns
loopne
subb
mov
sub
cltd
clc
loop
lds
or
adc
daa
fwait
lods
es
stos
in
lods
xchg
lret
mov
ljmp
inc
sbb
push
add
shrb
or
pop
pop
sarb
sbb
popf
inc
std
jl
adc
daa
mov
lahf
push
pop
mov
jge
scas
sbb
xchg
inc
les
int
push
int3
push
mov
sub
insl
and
xchg
xchg
in
outsb
int
sub
and
or
repz
xor
push
ljmp
into
jbe
push
sarb
and
into
mov
shll
sub
or
in
jg
sbb
repz
inc
sbb
adc
or
jb
stos
mov
xlat
pop
add
sub
pop
negb
rol
inc
dec
dec
in
mov
and
sub
in
xchg
rolb
mov
jmp
adc
cmp
or
cmp
int3
lret
adc
bound
out
pop
outsl
sahf
ret
push
push
inc
push
mov
imul
mov
mov
lret
lods
or
lods
int
and
jecxz
call
es
inc
cld
in
sub
xor
scas
sub
int3
enter
insl
mov
sub
stc
ret
add
in
rcrl
push
mull
lret
fcoml
inc
pushf
pop
jge
imul
mov
jmp
outsl
mov
pop
in
xorl
lock
adc
jg
dec
jmp
cmpl
inc
inc
fwait
mov
xchg
les
lret
jmp
ficoml
shll
rcll
sbb
stc
pop
add
sahf
mov
inc
jp
or
jno
mov
movsl
sub
lahf
out
push
jns
cmpsl
mov
hlt
sub
loope
insl
imul
mov
pop
sub
mov
mov
movsl
sbb
insb
pushf
in
lret
jecxz
push
fisubrl
push
repz
mov
xchg
repnz
movsb
dec
sahf
cmp
popa
xchg
sbb
scas
fcmovbe
or
xchg
jle
push
mov
mov
aaa
xchg
inc
je
jle
rcrl
pop
cmp
jno
jl
andb
enter
mov
cmc
jle
add
lret
data16
push
pop
insb
sar
loopne
mov
fcoml
jecxz
push
cmp
into
insl
dec
imul
jne
lcall
je
shll
rorl
test
pop
roll
mov
add
dec
fmuls
sbb
clc
fdivrs
cmpsl
adc
or
jge
out
jnp
jns
repnz
loop
fdivr
adc
mov
push
push
std
mov
cmp
pop
xchg
stos
les
pushf
test
orb
or
nop
add
rorl
dec
adc
js
lods
dec
xor
aad
dec
out
xorb
mov
adc
out
cmp
fistl
int
fs
push
mov
dec
je
and
sub
and
cmp
lds
int3
dec
xchg
sub
xorl
aad
or
push
push
pop
xchg
insb
out
mov
rcll
push
and
lods
ret
insl
repnz
dec
jo
xor
aas
mov
cltd
add
clc
pop
xchg
ret
fcomps
ret
sbb
and
lahf
lea
mov
sbb
mov
adc
cmpl
xchg
aam
roll
jne
inc
out
sbb
lock
testb
ds
or
fsts
sbb
mov
pop
pop
cmpsb
sub
in
or
into
aas
xor
scas
ror
jmp
sbb
jbe
sub
jecxz
and
loopne
adc
sub
test
inc
fcomps
sbb
push
aad
ss
lods
xchg
js
lcall
ss
xchg
cltd
push
xor
outsb
mov
push
sub
mov
push
call
mov
dec
inc
repnz
pushf
lret
ret
icebp
xchg
repz
scas
ret
loopne
mov
test
pop
inc
test
repz
out
add
in
dec
jo
cwtl
mov
hlt
out
cmpsb
nop
movhps
or
movsl
and
setl
sbb
dec
shl
mov
in
test
leave
mov
cmp
xchg
je
mov
sbb
xchg
pop
mov
xlat
add
rorb
enter
dec
movsb
mov
fwait
lds
inc
xor
arpl
mov
int3
popf
fcoms
test
popa
ljmp
mov
xchg
xlat
cltd
jae
mov
mov
repz
pushf
jno
shrb
shll
ljmp
mov
aam
out
mov
jmp
inc
enter
sti
lea
or
jecxz
sub
shl
cs
and
shl
inc
sub
rorb
or
xchg
adc
or
mov
or
in
fsubrs
into
push
inc
daa
stc
cli
adcl
sub
jo
push
mov
push
dec
outsb
aas
test
cmp
ds
jo
sahf
leave
push
dec
push
mov
call
ljmp
std
ds
mov
aaa
or
pop
sti
mov
xchg
sub
mov
int3
inc
adc
xchg
adc
xchg
sub
call
adc
pop
add
inc
or
mov
dec
shl
jmp
repnz
outsb
jmp
bound
mov
int3
test
lret
xchg
lcall
add
call
cmp
pop
sub
das
jb
cmpsb
jo
mov
add
dec
sti
rclb
jmp
enter
int3
inc
shl
lods
cli
sahf
fcomip
mov
mov
pop
push
and
sti
jp
sbb
mov
dec
jnp
cmc
movsl
jle
add
jl
fldl
add
adc
fcoms
dec
out
jae
rcll
daa
sub
dec
add
shl
push
ffreep
push
jne
push
sti
pop
sbb
insl
xor
jge
sub
out
mov
mov
ret
mov
mov
xchg
insl
int3
sbb
jecxz
test
ss
test
push
test
and
sub
dec
adc
inc
lret
cmp
ds
daa
popf
xchg
sbb
fmuls
int
jbe
and
pop
xor
push
fs
sarl
cmp
lcall
sbb
xchg
in
xchg
out
dec
xchg
cmpsb
dec
lret
add
xchg
cmp
sub
sbb
pop
out
in
fisubrs
sbb
jno
mov
dec
cwtl
sub
add
mov
sbb
icebp
pop
clc
fs
pop
mov
jae
loope
fmuls
mov
fwait
jno
push
insb
inc
aaa
roll
push
jno
and
cwtl
sarb
rcll
sbbl
insl
sbb
cld
adc
aas
pushf
inc
mov
imul
ret
pushf
fcoms
mov
popf
stc
int
xchg
repz
sbb
sbb
shrl
cli
adc
test
aas
in
and
aad
repnz
mov
movsb
xchg
mov
out
pushf
rcll
jmp
icebp
sub
mov
pop
pop
imul
adc
sbb
adc
lcall
insl
lcall
add
lds
push
ljmp
jl
rclb
mov
scas
mov
xchg
cmp
aaa
pop
fnstcw
dec
mov
test
xorb
pop
jle
cmp
xchg
mov
adc
and
cmp
sub
test
pop
mov
addr16
stos
into
int3
mov
pop
push
sti
xchg
cld
insb
inc
loope
push
enter
pop
shrb
mov
push
leave
arpl
push
jecxz
xchg
inc
imul
bound
add
icebp
lds
movsb
or
mov
add
pop
fstpl
dec
pop
or
and
lret
cwtl
mov
shll
and
push
pop
mov
jo
add
pop
rcr
arpl
mov
enter
mov
dec
sbb
dec
mov
inc
ret
movsl
into
data16
cmp
clc
push
lret
sahf
ss
xor
scas
add
mov
aam
push
jnp
ficoml
push
cmp
fwait
ss
xchg
jecxz
mov
scas
in
push
lods
insb
pop
dec
jp
adc
rorl
dec
add
jl
int3
orl
mov
sahf
inc
mov
xchg
mov
xor
push
or
mov
pop
aam
jl
lret
enter
mov
cli
mov
call
movsl
sbb
xchg
pop
xchg
or
adc
jmp
xchg
xor
popf
cmp
xor
adc
xchg
pusha
sub
clc
insl
outsb
repnz
pop
fsubr
gs
int3
pop
mov
lret
ret
ljmp
xchg
and
push
mov
push
loop
out
jo
inc
xor
push
jne
push
stc
out
cmc
ror
cmpl
test
out
mov
pop
sub
insl
cmpb
sbb
adc
mov
shr
addr16
js
mov
test
mov
fmuls
addr16
out
xlat
cmpsl
popf
cmp
loope
ljmp
sbbl
in
mov
dec
fists
pop
scas
lret
popf
jecxz
test
push
push
push
addr16
sub
roll
mov
adc
fdivrl
stc
ds
loope
lret
test
add
pop
jae
clc
mov
sti
into
fdiv
nop
sbb
jmp
stos
pushf
popf
mov
pop
int3
push
mov
fs
lea
mov
mov
int
out
lods
lahf
dec
cmp
sub
fdivs
sub
sti
mov
loope
fxch
pop
stc
inc
daa
xchg
in
mov
mov
or
xchg
inc
mov
shlb
mov
pop
cld
imul
add
jle
add
mov
mov
inc
or
xor
aad
fisttpll
pop
rcll
clc
aaa
scas
mov
xor
mov
adc
filds
ret
push
inc
dec
adc
mov
es
mov
xchg
and
repz
shll
sbb
push
mov
adc
mov
mov
iret
stos
adc
add
dec
je
jmp
lock
xor
fdivp
xchg
or
roll
rol
dec
fdivl
lods
xorl
rcl
ljmp
fistpll
xor
sarl
sbb
loopne
adc
sbb
jb
pop
cmp
add
repnz
cmp
sahf
sub
ss
idiv
inc
cmp
in
cltd
ror
shl
scas
enter
dec
int3
xchg
add
popa
les
xchg
jle
jns
sbb
jno
sarl
inc
pop
cs
inc
xchg
xchg
mov
add
and
rcrb
add
xchg
xchg
adc
filds
jne
mov
scas
shll
sub
shlb
fsubr
out
pop
dec
xchg
dec
mov
xchg
mov
add
inc
mov
imul
adc
jmp
pop
sub
and
pop
ds
shll
lds
push
int
sub
or
fdivrs
xchg
stos
repnz
aas
push
and
pop
xlat
icebp
adc
stos
sbb
mov
sub
pop
mov
sub
aas
movsb
jp
push
sbb
cs
cmc
arpl
jb
fnstsw
push
or
jns
jmp
fldcw
repnz
and
mov
and
jecxz
jg
aad
xchg
rorl
add
pop
sub
lock
ljmp
movb
ja
repnz
sbb
lds
mov
aas
pop
les
lcall
sbb
push
jns
in
xor
xchg
rcrb
je
mov
jns
push
pop
pop
aam
mov
iret
push
insb
ficomps
pop
clc
clc
out
add
lods
orl
jmp
cmpsb
orps
sbb
cmpl
push
sub
jl
ror
jg
cmc
frndint
into
jecxz
mov
cmp
xchg
xchg
lret
icebp
dec
daa
loopne
dec
pop
adc
pop
push
cs
mov
sahf
pop
cs
mov
sahf
stos
inc
sbb
sti
push
dec
mov
roll
xchg
sub
lret
xor
insb
aad
movsb
mov
aad
int3
jmp
sar
out
dec
sub
cmp
in
jmp
jne
pop
push
in
data16
cmp
cmp
shlb
imul
adc
insl
addr16
int
xor
mov
aaa
jae
test
rcrb
add
or
add
leave
repz
sub
ret
jnp
xchg
aaa
in
adc
cwtl
cmp
fdivl
arpl
repnz
xchg
daa
jg
lock
mov
out
adcl
inc
jno
out
mov
popf
jg
ljmp
ss
popa
sarl
aad
pop
outsb
repz
stos
lcall
fcmovbe
std
xchg
shlb
dec
mov
push
push
pop
insb
ficoms
or
sbb
cmc
sub
sarl
clc
icebp
jle
and
mov
push
and
dec
pop
gs
cmpsl
lret
movsb
aaa
cmpl
jg
insb
sbb
dec
xor
mov
repz
sub
dec
repnz
ret
push
or
dec
imul
cmpsl
mov
mov
stos
js
jge
dec
ljmp
cmp
mov
dec
je
lahf
add
stos
xchg
out
jecxz
roll
lea
shlb
mov
bnd
or
adc
or
jo
sub
add
jg
cwtl
xchg
in
mov
xchg
dec
inc
or
inc
insb
or
xor
out
xor
add
nop
inc
pop
in
xchg
push
push
add
xchg
mov
or
scas
inc
pop
movsl
cmpsl
cmp
inc
sub
aaa
jne
push
repnz
lock
mov
pop
mov
adc
out
bound
aad
scas
add
je
sti
movsb
call
js
sbb
dec
mov
mov
mov
cmp
insb
sbb
inc
imul
ret
adc
lret
int3
pop
and
daa
push
sarl
mov
ds
mov
mov
shll
pop
popa
xor
or
pop
out
push
sbb
or
push
fldcw
insl
push
das
push
popa
ds
int3
mov
sarb
dec
rclb
or
and
subb
out
adc
mov
jp
mov
push
dec
or
sbb
rol
mov
iret
test
in
sahf
aas
andl
xor
dec
jmp
cmpsb
mov
cmp
add
sbb
jo
pop
and
scas
or
lods
fisubl
mov
aam
les
add
cmp
repnz
scas
jle
add
test
dec
cli
pop
bound
cmp
mov
imul
mov
jbe
frstor
push
push
sarb
mov
cli
mov
pop
xchg
mov
push
scas
xor
dec
jge
xchg
rclb
shl
cmp
jno
arpl
clc
in
sbb
repz
icebp
pop
mov
nop
mov
cmpsl
cmp
sahf
inc
mov
sub
aam
xchg
aas
jne
jmp
pop
lods
jg
out
push
fcoms
jb
mov
xor
cltd
inc
sub
out
inc
mov
ficoml
xor
fbld
add
std
clc
fcoml
iret
mov
sarl
jge
mov
scas
fdivrs
mov
mov
aaa
fdiv
lcall
jecxz
jp
repnz
xchg
lods
cld
xchg
cmpsl
push
adc
or
frstor
mov
inc
jmp
push
sub
inc
test
mov
into
mov
jecxz
outsb
mov
xlat
dec
repz
ret
arpl
jecxz
jns
sub
pushf
push
clc
pusha
daa
pop
cli
and
inc
and
push
lds
xchg
adc
jne
outsb
push
push
fisttpl
xor
mov
pop
shl
xchg
push
dec
bound
cmpsl
add
jg
sub
nop
test
fdivrs
push
call
jg
in
cmp
sahf
add
or
dec
mov
xor
stc
xchg
cmovbe
out
gs
fmul
std
hlt
xor
sbb
fidivl
shrl
test
sub
jl
jb
push
cs
lock
add
jb
mov
xor
mov
push
test
mov
sub
aas
sbb
popa
je
sbb
stc
movsb
inc
insb
mov
leave
cli
call
fcmovnb
xchg
sub
mov
inc
aaa
mov
xchg
inc
jno
lods
ret
lahf
call
sahf
fs
jge
push
sub
pop
in
adc
mov
xchg
repz
scas
pushf
cmpsl
sub
and
sub
rcl
daa
push
jl
inc
pop
cmp
out
xchg
push
mov
rcll
lods
sub
jbe
ss
mulb
in
sahf
mov
movsb
jmp
pop
movsl
shr
mov
shl
test
jb
fldenv
mov
inc
addr16
hlt
add
push
dec
popl
cmpsb
mov
outsl
pop
sub
jg
jns
pop
add
mov
sub
rol
mov
sahf
movsl
jecxz
ja
or
negl
jns
push
fsubrl
test
scas
into
frstor
or
pop
push
stos
sub
and
arpl
jecxz
push
cmp
sub
mov
rcrb
out
sub
or
shlb
cmp
push
sahf
jns
out
fnstsw
dec
jmp
stc
mov
jb
xor
insl
test
cmpsl
scas
in
pop
aam
adc
in
or
cmpsl
lods
lahf
les
fistpll
pop
xorb
cs
push
jbe
fisttps
mov
push
mov
in
fnsave
push
lods
adc
mov
sbb
jle
push
mov
push
cmp
shll
and
xchg
push
push
adc
leave
sti
add
sarl
cmpsl
subl
xor
shll
or
or
xlat
lds
xchg
or
mov
addr16
sarl
cmp
dec
sub
bound
adc
mov
mov
pop
adc
int
rcrb
jae
dec
xchg
dec
je
jge
cmp
pop
add
and
das
pop
dec
add
cltd
ret
mov
out
jl
pop
xor
cs
pop
dec
mov
fisubl
movsl
mov
call
js
sub
jecxz
scas
cmovne
cmp
shlb
in
sti
test
hlt
sbb
or
xchg
and
pop
mov
aas
sti
pop
pop
pop
jae
add
popa
xchg
pushf
and
sahf
pop
push
xor
pop
jl
lds
sub
shl
sbbl
xchg
xchg
dec
idivb
cmp
fstl
jecxz
pop
iret
mov
loopne
or
pop
fsubs
gs
xchg
xchg
lcall
add
jecxz
mov
mov
pop
mov
mov
adc
push
call
mov
nop
gs
xor
mov
arpl
xor
sarl
leave
dec
std
int
rcrl
gs
xchg
inc
loopne
jmp
and
jne
js
lods
and
movsl
inc
cwtl
out
in
rorb
add
mov
fstps
or
inc
shrb
std
shll
shlb
out
imul
xchg
adc
jne
data16
jno
daa
add
gs
jno
test
inc
xchg
mov
mov
add
jmp
pop
mov
inc
dec
push
sbb
cmpsl
imul
pop
ljmp
movsb
movsl
fisubrs
add
adc
insl
lret
lds
fstpl
lret
dec
cmp
xor
mov
add
push
scas
ljmp
pop
aam
shrl
sbb
xlat
int3
pop
xlat
mov
dec
xlat
pop
add
jle
xor
inc
out
rcrl
loop
js
adc
popf
sahf
jno
fidivl
pushf
sbb
lahf
sbb
sub
lods
dec
sbb
pop
push
fdivrl
xor
and
xchg
loop
inc
xchg
loope
push
cmp
push
test
sbb
push
gs
xor
lcall
loopne
mov
xchg
repz
mov
pop
mov
jle
sar
inc
or
inc
sub
or
pop
aam
lods
jne
adc
cmp
and
lods
xchg
mov
mov
sub
into
mov
fcmovnb
mov
xchg
mov
repnz
sub
movl
xchg
in
into
enter
adc
rorb
cmp
int
mov
lret
mov
push
push
setne
fsubrl
mov
or
xor
repz
and
mov
jl
mov
testb
mov
insb
decb
xchg
inc
mov
xchg
shll
pushf
dec
fwait
lret
add
pcmpgtd
push
xchg
lock
and
sub
push
add
cmp
mov
shll
mov
mov
jmp
add
jge
sbb
jge
rcrl
pop
in
xor
imul
leave
xchg
into
shrb
jle
or
and
mov
repz
push
push
jmp
or
test
sarl
insb
push
into
repnz
inc
in
repz
push
mov
sbb
lods
pop
and
test
rcr
out
push
adc
mov
mov
mov
and
outsb
dec
mov
rcll
jne
inc
js
js
loopne
pop
mov
in
and
sarl
iret
jbe
imul
jne
mov
dec
fisubrl
cli
cmp
xlat
pop
pop
rcrb
mov
aad
push
int3
lret
mov
pop
pushf
cmp
icebp
fwait
ljmp
ss
mov
xor
dec
cmp
fnstsw
ret
pop
pushf
pop
fwait
insb
add
sub
add
nop
testb
orb
lcall
leave
xor
inc
xchg
add
roll
mov
cmp
gs
cwtl
xor
dec
repnz
stos
cmp
outsb
out
inc
mov
mov
pop
sbb
push
mulb
xchg
sub
adc
mov
aam
xor
pop
sub
hlt
or
cmp
sub
js
sbb
fucomp
imul
mov
in
les
mov
pushl
sbb
fs
lret
shll
outsl
cmp
ds
xor
xor
loope
notl
jle
xor
pusha
dec
push
sbbb
dec
sti
mov
js
mov
fidivl
inc
test
int3
fwait
in
pavgb
subl
dec
aas
mov
mov
mov
sarl
outsb
sub
inc
sbb
iret
add
fidivl
aad
mov
inc
notb
mov
adc
push
dec
sbb
mov
repnz
xchg
mov
jp
and
adc
mov
lcall
shlb
clc
xchg
dec
cld
mov
adc
fcom
into
cmp
addr16
shlb
pop
xorb
pop
xchg
xchg
sub
inc
cmp
mov
sbb
pop
and
aad
movsb
repnz
out
das
xchg
inc
push
bound
add
sbb
cmp
and
repz
fists
out
xchg
sahf
fiaddl
insl
inc
mov
sahf
sbbb
jge
cmp
inc
pushf
sbb
jo
adcb
fidivs
lret
repnz
mov
cmp
je
movsl
jmp
lock
dec
clc
cmp
aam
xor
jmp
dec
out
mov
xor
fldl
adc
leave
mov
xor
dec
shll
and
pop
mov
pop
pusha
cmp
sbb
shr
lret
sub
dec
daa
cwtl
inc
das
pop
fs
adc
xlat
lcall
xchg
xor
dec
pop
rorl
rolb
arpl
cmpb
xchg
into
rcl
sarl
jnp
lods
shrb
mov
out
cmp
icebp
jae
test
pop
daa
outsl
add
xor
and
scas
into
shrl
jge
mov
out
add
pop
loop
pavgb
cmpsl
rorb
test
ficompl
fimull
xchg
xor
lds
pop
push
jecxz
jne
mov
xlat
cmp
xor
ss
xor
frstor
xchg
fimuls
pushf
lcall
stos
aad
pop
shl
jae
fimuls
in
push
add
add
adc
insb
loope
sahf
mov
out
scas
popf
leave
jnp
inc
push
push
fidivrs
mov
scas
out
loopne
adc
fsubp
or
cmp
shrb
fisubrs
rcll
pop
test
rcrb
cmpsb
mov
das
jmp
stos
xchg
fdivp
or
xchg
fmuls
sti
mov
in
out
pop
es
leave
xchg
sub
fimuls
insb
shrb
push
jg
movsl
inc
sub
scas
dec
mov
movsb
push
faddl
movsb
test
cmp
ljmp
out
lods
or
xchg
das
loope
sbb
pop
outsb
je
sti
mov
lods
negl
mov
scas
stos
push
lods
pop
arpl
mov
pop
std
repz
aas
lock
into
lcall
xchg
adc
mov
add
rorb
sub
aaa
inc
cmc
add
or
rcll
push
xchg
xchg
mov
shlb
daa
dec
cmpl
mov
xor
imul
int3
push
movsl
hlt
sub
subb
mov
adc
mov
sub
dec
sti
mov
imul
movsb
cwtl
push
nop
dec
mov
push
int3
mov
mov
mov
push
rcl
or
jo
mov
dec
fisubs
or
mov
xchg
sahf
sub
call
mov
lods
shll
xchg
dec
imul
into
push
xor
fiadds
int
xor
mov
sub
cld
jno
jecxz
adc
mov
xchg
clc
mov
jno
mov
jg
ret
mov
sarl
xor
fdivr
mov
and
pop
xchg
dec
pop
sbb
mov
ss
pop
into
cmpsl
jne
jo
mov
test
pushf
sete
mov
cmp
es
jge
test
das
mov
add
jmp
sbb
sahf
jge
out
clc
lret
int3
clc
popf
jge
fcmovnbe
ljmp
shlb
sar
stos
mov
aad
loopne
arpl
loope
mov
icebp
mov
psubsw
daa
sub
xchg
mov
outsl
pop
rcll
inc
jo
or
cld
scas
xchg
inc
mov
arpl
jne
mov
xor
je
fcomps
int
inc
cmp
pop
or
mov
xor
mov
rolb
shr
push
add
mov
mov
xor
sarl
fsts
stc
mov
sub
hlt
jne
sbb
insb
into
rcll
adc
rclb
ficoml
std
mov
cmp
fisubrs
rcll
scas
mov
dec
lods
jnp,pn
mov
adc
fcmovne
or
jmp
push
nop
lahf
aad
xchg
test
cmpb
js
stc
jb
lret
fisubrs
clc
push
push
push
outsb
xchg
pop
pusha
push
ljmp
inc
sbb
cld
clc
jmp
aas
ljmp
adc
xchg
push
mov
fistl
xchg
rolb
pop
xchg
sub
sti
shl
rcrl
int3
lods
mov
lret
cmp
nop
repnz
and
int
stc
ja
mov
pop
sub
aas
sahf
fs
dec
mov
flds
scas
xor
sbb
hlt
push
sahf
lods
push
jnp
lods
ljmp
mov
pusha
inc
xor
ret
cmp
jbe
js
in
dec
outsb
out
loopne
cmp
mov
lretw
sub
mov
push
jle
shll
loop
loopne
je
cmp
cmp
test
fiadds
cmp
fdivl
mov
lods
int3
pop
roll
std
mov
sahf
out
xchg
pop
xchg
ds
icebp
lret
rclb
outsl
movsl
sbb
mov
sarl
punpckhdq
and
out
roll
lds
gs
stos
incl
aam
inc
fdivp
and
pushf
out
dec
mov
xchg
and
aad
lods
or
dec
and
adc
xor
or
push
orl
sbb
add
rcl
jae
sbb
pushf
cmpsb
add
cmp
pop
add
jne
dec
mov
inc
xor
sbb
pop
jge
and
int
sbb
in
inc
movsl
rep
push
xor
call
jbe
push
roll
sbb
push
jno
xchg
push
sbb
into
xchg
dec
outsl
cmp
aam
sub
fxrstor
rorl
and
add
push
cmp
mov
outsl
jmp
cmp
mov
mov
loopne
fdivrl
xor
fisubrl
clc
les
stos
pop
addr16
dec
pop
push
mov
and
push
mov
push
mov
inc
pop
dec
cld
addr16
addr16
pop
or
outsb
adc
rorl
punpckldq
hlt
repnz
sub
adc
fdivrs
scas
xor
cmp
cmpb
push
push
mov
jle
movl
jge
mov
stos
mov
clc
data16
lods
jnp
test
inc
adc
pop
add
sti
ficoml
jb
fsubrl
inc
mov
into
and
daa
popa
pop
sti
xorl
into
cld
adcl
lods
jmp
or
shll
rorb
cli
xchg
add
mov
and
pop
scas
js
jl
adc
mov
pop
mov
fstl
fsubrs
mov
ljmp
mov
mov
cli
pop
mov
xchg
jae
lret
aaa
shrl
sahf
lcall
xchg
out
jle
adc
xchg
dec
and
mov
sarl
and
shll
daa
mov
sbb
out
fwait
lock
dec
xchg
adc
mov
lret
ret
mov
dec
add
je
fisubrl
fisubl
int
daa
sbb
fdivrl
mov
clc
mov
ds
dec
lods
sub
subb
shrl
add
pop
pop
mov
jge
cs
mov
setae
adc
into
stos
pusha
pusha
cmpsb
fcompl
lods
fwait
add
push
adc
imul
cwtl
cmc
inc
push
repz
push
dec
inc
xchg
push
dec
fimuls
cmp
daa
dec
hlt
out
and
test
xlat
lock
test
lods
push
push
mov
pushf
rcll
jnp
lods
imul
add
pop
adc
int3
mov
xchg
imul
sub
xchg
hlt
mov
fs
and
fiaddl
movsl
jmp
in
inc
outsb
into
jae
shrl
pop
shr
test
std
xchg
sarl
ljmp
adc
mov
jae
sub
cmp
jl
mov
sbb
bnd
pop
ficoml
int
push
dec
and
xchg
lret
lret
xor
add
jg
mov
cwtl
cmpb
fidivl
repz
mov
sahf
mov
sub
cltd
mov
mov
xor
sub
sbb
into
dec
out
fisttpll
cmpsb
jo
sbb
push
fcoml
xor
movsl
enter
mov
imul
movsb
ret
icebp
pop
lret
int
into
jbe
aad
xchg
adc
enter
cmpl
fisubrl
jge
rorb
mov
cmp
cmp
mov
popa
int
lea
mov
movsl
jb
cli
xchg
pushf
cmp
sarb
rcll
adc
push
popa
add
pop
or
gs
cmpsl
xchg
js
jge
jp
lds
mov
into
mov
lods
pushl
jne
mov
out
pop
fadds
and
call
jno
sub
sbb
scas
mov
cld
dec
mov
cmp
aaa
xor
pop
pop
xchg
pushf
in
and
nop
mov
or
cmp
push
aad
add
mov
jb
mov
nop
dec
repz
insl
xchg
xor
sarb
stos
rcrl
adc
push
loopne
pop
lret
int3
xchg
adc
inc
cmp
addb
mov
mov
fidivl
adc
shr
fwait
mov
pop
enter
ljmp
imul
movsb
pause
push
test
mul
mov
pop
mov
add
xchg
push
jecxz
loop
inc
lea
adcb
mov
scas
mov
nop
xlat
outsl
into
lahf
out
inc
lea
ret
das
sbb
xchg
and
daa
pop
mov
loopne
fimull
xchg
mov
push
adc
cmp
dec
ficompl
add
and
pop
jmp
inc
inc
rolb
cmp
sahf
ljmp
lret
sub
jmp
cld
shll
punpcklwd
lea
mov
inc
test
aaa
pop
adc
mov
dec
or
dec
movsl
rcr
jecxz
es
push
into
addr16
aas
into
cs
scas
jmp
ss
cmp
add
mov
sbb
sti
ds
js
cwtl
sbb
sbb
pop
rolb
aad
in
xchg
std
push
int3
sbb
mov
sub
incl
roll
add
cld
out
add
sbb
cltd
sarl
xchg
mov
sub
push
or
ja
test
cvtps2pi
mov
xchg
pop
lcall
out
xchg
push
cmp
test
sub
dec
xchg
aam
or
and
adc
lods
mov
sahf
pop
lods
and
dec
jg
or
cs
stos
fstl
adc
sbb
dec
cld
ljmp
sub
adc
sub
test
sbb
imul
mov
cmpsb
mov
xchg
inc
and
aaa
dec
mov
inc
mov
fcomp
pusha
test
repz
sub
dec
andb
insb
iret
mov
xchg
shrl
pushl
stc
and
push
scas
sbb
stos
inc
cmpb
pop
pop
or
in
hlt
shll
sub
fucomi
jl
cmp
jns
out
mov
sarb
faddl
js
jp
push
sub
dec
push
mov
out
push
cmp
lahf
or
sarl
in
sarl
sahf
mov
pop
lcall
sahf
out
shrb
repz
rcrb
inc
inc
les
adc
sbb
sub
test
sti
out
aam
pop
shrl
jbe
and
rol
mov
les
lds
lret
int3
xlat
pushf
addr16
shl
dec
orl
cwtl
xor
cmp
shl
fists
cmp
dec
mov
rcll
sbb
push
sarl
jecxz
inc
in
ja
mov
xor
jae
enter
push
pop
scas
testb
xor
mov
repz
lret
in
adc
inc
pop
stc
mov
repnz
loopne
sub
fsts
cmpsl
lock
stc
cli
jge
outsl
push
pusha
int
shlb
jo
add
jne
sub
jns
clc
mov
je
dec
insl
mov
sbb
mov
aam
mov
test
lods
mov
andl
aad
ss
out
mov
push
and
pop
jne
mov
xlat
push
pushf
mov
pop
xchg
mov
mov
xchg
imul
jl
sbb
sub
jge
cmpsl
mov
push
dec
aaa
mov
sti
push
xor
iret
fcomi
pop
push
mov
stc
int
inc
lret
pop
mov
subb
divl
adc
test
pop
scas
adc
daa
cltd
xchg
repnz
mov
sahf
data16
cs
mov
into
shll
adc
inc
bnd
orl
push
inc
pushf
xchg
lods
es
sub
dec
push
stc
bound
xchg
popa
lea
adc
cmp
movsb
nop
push
sbb
cmp
xor
fildll
stos
xchg
movsb
or
sub
mov
lret
cltd
mov
mov
push
adc
add
pop
std
scas
add
dec
mov
pop
xchg
add
repz
cmp
dec
sbb
push
pop
ret
loope
dec
inc
cmp
outsl
or
mov
cld
cmpsl
mov
stc
push
mov
sbb
adc
and
fsub
dec
sarl
mov
adc
sub
sbb
adc
or
mov
insl
lds
js
rclb
inc
sub
mov
into
shll
pop
xchg
mov
sbb
rcr
pop
scas
jae
jle
xor
pushf
out
hlt
data16
xchg
push
mov
push
or
sub
pop
shll
mov
sarb
mov
sahf
loop
out
push
add
inc
inc
inc
outsl
xchg
sbb
push
int
fsubr
xchg
cs
add
ja
es
add
lods
popa
outsl
jge
test
rcr
pop
out
repnz
mov
xchg
call
cmpsl
iret
jp
mov
add
int3
pminub
mov
pushf
int3
das
pop
lods
mov
mov
ret
out
cmp
mov
cmp
push
out
pop
push
loopne
xchg
fcomp
fs
mov
jmp
cld
cmc
sahf
mov
pushf
jg
fsubl
mov
les
popa
push
rcrb
popf
sbbb
rcll
or
xchg
xor
rcrl
lods
sub
cmp
mov
out
cs
jg
scas
xor
mov
sub
insb
sahf
pop
insl
mov
mov
jne
sahf
jl
push
push
sub
xor
push
int
pushf
idivb
out
faddl
mov
ds
push
enter
clc
mov
push
cltd
add
loopne
mov
outsb
inc
das
cmp
test
rol
hlt
fbstp
sbb
repz
or
scas
rorl
jnp
sbb
dec
cld
into
adcl
cmp
bound
arpl
lcall
mov
sub
pop
sub
dec
mov
mov
hlt
cmpsb
shl
lds
sti
int
mov
jge
or
lret
xchg
popf
aas
pop
movb
mov
push
add
add
into
mov
mov
jg
jg
int
ret
out
out
aas
outsb
xchg
fs
aam
mov
sbb
mov
lods
test
add
xchg
xchg
repz
insl
dec
dec
inc
clc
inc
pop
pop
mov
mov
fbld
sbb
sarl
cld
nop
add
int3
mov
dec
loope
push
and
ss
lea
insl
xlat
dec
nop
rcrl
decb
sbb
mov
pusha
adc
push
fsts
jl
add
rclb
lods
push
mov
cmp
cli
pop
sub
mov
adc
jbe
add
popf
popf
in
pop
mov
out
mov
cmp
xchg
xchg
mov
push
fidivs
jle
dec
cld
in
out
int3
jnp
jg
pop
jne
pop
fiaddl
mov
gs
test
aad
pop
dec
jmp
mov
aad
jge
popa
mov
mov
aad
pop
and
jl
loopne
mov
aaa
fdivrl
into
lahf
pop
xchg
cmc
daa
xchg
mov
lods
add
outsl
std
dec
pop
adc
sub
gs
xchg
xchg
nop
or
xchg
stc
repnz
pop
rcr
test
ret
rclb
xor
jmp
mov
mov
into
sub
outsl
jmp
xchg
pop
shl
test
add
xchg
lahf
fxch
mov
es
fldcw
dec
bound
sub
push
add
mov
dec
cwtl
dec
ja
xor
les
shll
ret
pop
sub
mov
data16
push
xchg
cltd
pusha
inc
jge
shll
mov
xchg
daa
mov
xchg
fisttpll
dec
addr16
pop
out
xor
scas
int3
aam
ret
jns
xchg
imul
rcrl
test
je
xlat
dec
inc
inc
mov
mov
lods
mov
xor
stc
jnp
js
jbe
dec
call
inc
addr16
ja
fcmovnb
mov
jmp
in
movsb
dec
sahf
mov
les
mov
push
pop
xchg
sbb
adc
xor
push
sub
push
mov
lea
lret
adc
test
aad
and
sub
rclb
daa
paddusw
add
xchg
loopne
and
test
int
sbb
faddl
mov
pop
aaa
sub
imul
cmc
add
arpl
mov
sarb
sbb
mov
imul
push
sub
xchg
push
jne
lea
sub
and
movsl
cmp
lret
pop
push
cmp
or
stc
dec
movsl
mov
ja
sbb
ss
leave
push
fcmove
rorl
cmp
aaa
mov
and
je
dec
and
arpl
push
xlat
xor
lock
lahf
xchg
das
aas
or
mov
lods
scas
out
into
dec
in
adc
sahf
mov
fs
lds
notb
dec
jae
adc
and
lods
fistps
js
arpl
int
adc
cli
or
fidivrl
mov
push
push
adc
mov
stc
fwait
bound
lods
and
sub
imul
xchg
aad
pop
ror
out
lret
aas
daa
pop
aaa
dec
push
jb
push
ror
lahf
cmp
cmc
pop
test
mov
lds
add
int3
add
xor
rolb
das
push
jo
insl
daa
mov
sbb
or
subb
mov
mov
cmp
xor
cmp
pop
pop
cmc
fucom
push
les
push
pop
cmp
pop
popa
out
jae
sub
cmp
lret
jl
mov
add
daa
pop
sti
jns
sub
es
cmpsb
in
fmuls
into
in
out
sub
movsl
jb
xchg
xchg
das
insb
or
dec
scas
sahf
dec
adc
rorl
mov
mov
pop
jae
mov
jae
bnd
in
xchg
xor
cwtl
lcall
xchg
mov
hlt
adc
leave
pop
or
and
repz
jnp
lods
jecxz
js
jns
rol
jmp
or
pop
inc
cmc
cld
sbb
ss
fbld
cmpsb
cmp
xchg
lret
es
dec
sahf
jb
ror
movl
mov
sar
insb
cmp
fwait
gs
pushf
out
sub
cmpsl
lods
sahf
scas
int
addb
mov
leave
repnz
mov
push
out
pop
push
inc
cmp
cmp
lds
or
mov
add
les
cmp
je
mov
adc
ds
jbe
fsts
inc
lret
out
and
addr16
adc
sbb
fisttpll
lea
and
ja
lret
mov
fs
mov
hlt
xchg
rcll
mov
jecxz
adcl
and
idivb
cli
insb
dec
inc
push
mov
dec
mov
adc
decb
out
cwtl
jecxz
sti
rcll
out
xchg
mov
adcb
dec
popa
shr
cmp
cld
int3
xor
das
pushf
cmp
stos
inc
insl
pop
push
jns
fidivrl
jae
push
js
into
sub
pop
cwtl
mov
jbe
lahf
call
dec
adc
fs
cs
bound
xchg
imulb
mov
sbb
inc
mov
fucom
ret
pop
popf
mov
dec
fbld
sub
inc
sarl
out
sbb
adc
jge
jcxz
shr
pop
xor
imul
adc
lret
fsubrl
or
push
cmpsl
lds
adc
mov
stc
dec
stc
mov
mov
sti
dec
mov
jae
fcompl
jg
jmp
imul
bound
aas
jb
mov
jmp
test
sub
xchg
cmp
sbb
xchg
sbb
or
fwait
sub
push
neg
fdivrs
cmp
dec
mov
jnp
gs
jae
popa
rcll
add
mov
or
mov
insl
xor
adcl
mov
jne
push
push
push
pushf
icebp
rolb
outsb
mov
mov
cmp
inc
lods
mov
dec
xchg
and
dec
out
shll
mov
test
pop
push
js
shll
int3
xor
mov
xor
shll
mov
call
or
aam
pop
shl
fnsave
rclb
and
adc
xor
rorl
and
sub
push
push
pushf
push
int3
cmp
sarb
mov
bound
inc
stc
mov
dec
movsl
push
push
andb
stos
fdivs
inc
and
sub
mov
adc
jge
test
mov
pop
jecxz
inc
lret
neg
add
repz
or
stos
lret
xor
cmp
roll
jecxz
hlt
inc
mov
fs
jns
leave
jae
or
orl
fiaddl
ficoml
nop
imul
mov
pop
stos
xchg
cmp
mov
rorl
mov
jg
int3
repnz
dec
push
rorl
inc
mov
pop
push
pop
xor
stos
mov
leave
add
aaa
lods
sbb
cmpsl
dec
sahf
mov
fwait
outsb
mov
clc
inc
divl
xchg
sti
aas
out
pop
jp
mov
mov
shrl
inc
fmuls
sub
adc
in
xlat
movl
mov
sub
movsb
or
mov
xchg
push
sete
ljmp
into
arpl
incb
xchg
or
fyl2xp1
dec
jae
sbb
adc
inc
sub
in
rcrl
sbbl
pushf
cmp
js
inc
adc
sahf
mov
aaa
repz
cli
rorl
pop
push
or
mov
xchg
dec
mov
push
cmp
jbe
adc
and
movsl
repnz
vcvtsi2ssl
into
xor
lahf
imull
rorl
or
ss
and
jbe
cltd
sbb
leave
je
adcb
in
push
mov
xchg
roll
sub
dec
je
and
fnsave
or
pop
pop
lahf
test
shll
push
inc
sbb
std
and
mov
popa
jno
lret
jmp
adc
movsl
cmp
dec
bound
sbb
mov
stos
push
dec
sbb
stos
jmp
xchg
push
cld
int3
out
ret
fistps
lods
jle
mov
xchg
mov
icebp
mov
add
xlat
test
call
fisttpll
sbb
pop
rcrl
pushf
ret
mov
mov
rorl
or
xchg
mov
aad
mov
int3
mov
pop
int
repz
out
subl
sub
shlb
mov
testl
pop
mov
loopne
into
in
sbb
and
cmp
movsl
aas
int3
cs
scas
pop
fstpt
sbb
adc
inc
adc
mov
push
int3
sub
dec
xor
cltd
loope
rcrb
push
in
dec
adc
lret
jl
lret
daa
pop
mov
icebp
mov
je
js
inc
mov
adc
shll
or
rclb
pop
cmp
jmp
imull
lods
loopne
sbb
add
xor
lods
bound
fcompl
push
and
adc
aad
sbb
mov
ret
adc
decl
or
mov
sub
mov
mov
mov
rcrl
inc
sub
lret
bound
es
push
mov
cld
dec
cmp
sbb
jl
shll
mov
jno
outsl
cmp
aam
mov
shl
enter
shr
push
pushf
cmp
xchg
lods
leave
xchg
push
cld
loopne
add
ss
xchg
dec
std
addr16
out
lds
xchg
mov
push
adc
fwait
sub
sub
mov
les
ret
cmp
and
fwait
aad
pop
jmp
mov
or
aam
sbb
xor
fstps
mov
repz
xchg
cmpsb
cld
jae
lret
lret
call
addr16
sub
inc
cmp
push
mov
call
call
int3
xchg
cmc
out
mov
cmp
jle
rcll
int3
ret
imul
add
sub
inc
xchg
cmp
int3
jne
mov
imul
and
sarb
mov
jb
pop
sahf
sti
mov
dec
cli
xchg
mov
mov
or
fdivl
int3
das
testl
sub
iret
lock
add
dec
sub
rorl
xchg
insb
xchg
and
dec
lret
cmc
scas
dec
xchg
pushf
jl
cmp
or
andb
movsl
pop
ds
push
decb
neg
out
sub
jo
or
jge
idivb
xchg
stos
xorw
push
divb
lret
pop
xor
jnp
ds
jg
roll
pop
add
out
add
lds
push
notl
out
fnstsw
mov
andl
js
xchg
les
rep
popf
inc
rol
sti
repnz
sub
test
or
lahf
and
jg
mov
push
mov
jecxz
ficompl
pushf
lcall
mov
push
lock
inc
xchg
repz
ljmp
dec
lret
pop
popf
xor
aam
cmp
insl
or
andl
int
and
mov
shll
mov
ds
and
mov
push
fmuls
ds
out
into
pop
les
outsb
jge
mov
mov
arpl
lahf
jle
loope
add
cmpsb
mov
mov
cmp
sbb
cmp
xchg
sti
xor
std
jle
test
dec
out
jmp
mov
push
data16
xchg
roll
sahf
daa
sbb
jle
xor
pop
aad
scas
jl
add
pop
cmpsb
shlb
or
sbb
das
scas
sub
jmp
shrl
clc
lods
mov
cli
and
imul
or
cld
in
fistl
cs
outsl
push
mov
pop
sbbl
add
adc
movsl
add
ret
sbb
or
sbb
shrl
mov
xchg
mov
cld
repnz
ret
jbe
xchg
pusha
fidivl
xorb
mov
jo
sahf
lea
mov
and
jne
clc
fmul
push
jns
into
push
sarl
das
inc
out
cltd
xchg
sbb
or
xchg
lods
adc
xor
sbb
scas
pop
int3
mov
mov
aad
mov
jo
je
dec
hlt
xchg
xchg
clc
adc
iret
insl
lods
nop
fisttpl
lret
int3
ljmp
fimull
ss
imul
cs
test
shll
arpl
xchg
stc
test
cmp
rep
hlt
int
loop
add
mov
fmuls
sub
daa
loope
push
and
repnz
inc
push
fisttpl
mov
stc
loop
popa
pop
inc
jge
fsubr
lods
lea
in
into
sub
or
stos
xlat
sbb
xchg
inc
cmp
or
push
stc
fisttpll
sbb
aam
ljmp
push
and
aaa
cmp
add
negb
adc
jo
pop
icebp
mov
sahf
sarl
adc
adc
xor
cmpl
test
into
stos
shll
push
out
adc
into
pop
mov
sahf
mov
mov
stos
mov
dec
es
dec
cs
int3
jge,pt
and
push
pop
xor
outsb
popf
sbb
lds
test
fst
add
addr16
xchg
mov
jecxz
dec
push
aad
xchg
mov
std
pop
adc
cs
shrl
imul
xor
js
xchg
in
mov
mov
jg
push
inc
in
mov
add
jae
sub
and
inc
int
enter
xchg
xchg
enter
lock
outsb
daa
shl
daa
dec
sbb
sti
inc
mov
lret
ret
mov
jno
movsl
pop
mov
xor
inc
sub
fildl
lds
sub
out
hlt
push
scas
adc
push
push
sub
jl
add
xor
test
cmc
jl
mov
mov
in
add
mov
stc
cs
rolb
mov
lods
fildll
jne
lcall
adc
inc
push
fisubrs
out
inc
jmp
mov
ret
test
adc
pop
dec
xchg
ud0
cmp
mov
dec
je
jp
pop
push
inc
sub
fisubl
js
xor
jns
jl
fxch
into
fidivl
rorb
inc
inc
lcall
pop
cmp
xchg
jge
rcrl
or
lret
dec
stc
xchg
push
sahf
xor
shrl
hlt
pop
pop
or
test
push
push
mov
lret
sarl
or
xchg
push
add
mov
sahf
shrl
lret
cmp
push
mov
cmp
lods
les
mov
test
inc
xor
add
in
add
mov
out
cmpsb
roll
lcall
insl
mov
or
cmp
and
sbb
xchg
jmp
aas
add
rcr
jmp
dec
pop
insb
bound
fcmovnu
adc
lods
addl
mov
mov
jmp
cmp
dec
popa
cltd
andb
sub
testl
xchg
jle
mov
xchg
cli
or
pop
sbb
int
xchg
adc
push
je
decb
test
fimull
cmpsl
cmp
pop
mov
cmp
mov
test
jp
bound
aas
add
mov
mov
lods
add
movsl
in
lds
loopne
adc
push
jp
mov
mov
sarl
sarl
jle
mov
test
xor
out
cmpb
lea
sub
into
inc
sbb
push
cmp
pop
and
sbb
mov
shll
outsl
pop
push
pop
sbb
inc
pop
das
movsb
xchg
lods
out
push
std
scas
in
out
insb
rcrb
mov
mov
or
fwait
dec
outsb
push
mov
test
je
xlat
xor
neg
mov
sub
pushf
jmp
call
push
ficoml
sti
pushf
pop
add
mov
aam
stc
orl
adc
sbb
stos
xchg
mov
test
xchg
bound
rcrb
inc
mov
shrl
pop
jmp
mov
inc
push
pop
sti
sbb
repz
and
pop
fdivs
adc
sub
dec
mov
mov
lret
fsubl
test
imul
loopne
sub
jo
out
mov
sub
jmp
lods
sbb
fwait
sub
mov
test
jb
popa
call
mov
push
or
stc
fwait
jne
fldt
into
jae
loope
sbb
sub
js
movsb
and
jbe
shll
into
adc
sbb
mov
or
inc
or
pop
lcall
aam
inc
imull
inc
out
in
movsb
sub
out
fsubp
xorl
fcmovne
shrl
sub
or
test
movsb
add
and
outsb
mov
jo
sahf
sub
mov
shr
cld
jge
movsb
xchg
js
test
jge
xor
adc
xchg
fmuls
ds
and
aam
adc
mov
and
mov
xchg
fldl
lret
loope
daa
sub
add
leavew
cld
push
cwtl
cli
negb
mov
ret
rclb
pop
push
xchg
arpl
es
xchg
sarl
sahf
mov
jne
sub
adc
fstps
roll
jns
push
mov
jnp
inc
inc
cld
jl
repz
mov
cmp
jne
rcr
call
sbb
int
mov
mov
cmpb
scas
xchg
movsl
cmpsl
mov
xchg
mov
fstps
add
cmp
adc
add
jg
fbld
repnz
pusha
mov
push
mov
mov
push
add
xchg
lret
xchg
mov
lods
and
inc
andb
pushf
push
xchg
xor
pushf
adc
int
rcrl
mov
mov
cltd
bound
sbbl
psubsw
dec
sbb
mov
xor
adc
outsb
fisubrl
lahf
inc
scas
sbb
sbb
addb
ds
xchg
jg
xor
jne
in
jns
std
mov
lods
jmp
ret
fnstcw
and
stos
jae
movsl
shrl
lods
out
dec
sub
or
les
shl
dec
xchg
jns
ret
aad
sbb
pop
xchg
pop
jge
push
insl
popf
jge
jge
inc
xchg
hlt
dec
add
out
sahf
shrl
hlt
add
jbe
jp
cmpsb
dec
adc
xchg
sub
aam
fldenv
movsl
mov
pop
repz
lea
inc
mov
sahf
in
mov
fwait
dec
adc
inc
popa
mov
out
push
xchg
lods
adc
pop
addr16
ss
popa
pop
push
roll
mov
leave
lea
pop
dec
pop
mov
mov
ffree
fwait
movsl
ds
stc
mov
adc
sbb
or
mov
sahf
mov
int
mov
fstp
xchg
xor
sarl
xor
lds
push
push
sub
fnstcw
mov
sub
mov
aas
das
sub
sbb
sub
xlat
dec
sub
jmp
cmpsl
mov
sub
or
add
inc
out
stc
mov
sub
mov
cmpsl
js
clc
dec
frstor
xor
rclb
adc
jecxz
sub
sbb
dec
fwait
mov
in
ljmp
sub
cmp
mov
je
int3
stos
dec
push
xor
aas
sub
pop
rcl
pushf
jmp
adc
xor
pop
in
xchg
neg
bound
rorl
push
mov
data16
xor
mov
das
test
test
xchg
pop
cmp
ret
push
jnp
jmp
cmp
dec
pop
dec
int
add
xchg
call
test
pop
cs
xlat
push
pop
aas
insl
xchg
mov
test
cmpsb
jl
daa
inc
inc
add
cli
in
mov
loopne
test
outsb
in
movsl
lock
dec
in
and
fisubrl
dec
mov
xchg
add
mov
jmp
xor
out
xor
sbb
xor
movsb
cmpsb
std
pop
inc
ds
repz
cmp
pop
and
push
mov
rcr
adc
leave
mov
js
cmc
xor
pop
les
mov
sub
or
imul
mov
or
int3
repz
cmp
pop
inc
cli
pop
sub
pop
mov
cmp
out
ret
push
adc
inc
inc
xor
pop
mov
push
ds
sarl
in
sub
dec
mov
push
stc
inc
fidivs
orb
sbb
xchg
xchg
mov
cmp
xor
repnz
test
mov
push
mov
stc
or
popf
dec
out
iret
sbb
cltd
scas
leave
push
in
je
fcomp
cs
or
mov
inc
aad
xor
mov
xor
jmp
stos
inc
adc
dec
jg
push
shll
sbbb
or
fs
pop
xchg
scas
jecxz
shlb
sbbb
jge
xchg
rcll
pushf
adc
es
add
inc
sub
into
mov
test
xor
mov
shl
lret
mov
mov
fisubs
pop
lcall
shrl
sbb
dec
lods
popa
lcall
movsb
shll
fwait
shrl
repz
or
pushf
stc
stc
movsb
pop
cmp
rcrl
sarl
cli
daa
jge
fdivrs
cwtl
push
ja
daa
jno
xchg
dec
shrl
fcmovu
pop
and
stc
fbld
shll
ficomps
dec
imul
int
es
lds
test
or
xor
pop
jnp
imulb
lods
or
mov
sti
fsubrl
fcomp
adc
dec
mov
mov
in
xor
mov
xor
iret
adc
mov
jns
divb
cld
in
cs
or
jl
aam
mov
out
mov
repnz
std
xchg
or
jnp
decl
hlt
xchg
dec
stc
mov
inc
cmp
or
inc
popa
lea
xchg
adc
out
arpl
cli
cld
push
nop
lret
xchg
cmp
xor
sbb
loop
jp
insl
xchg
cli
lods
scas
xlat
mov
ficomps
push
pop
pop
jle
repnz
mov
leave
inc
sub
mov
mov
sub
mov
cmp
xor
mov
mov
xchg
aad
jbe
lahf
jns
mov
psrlq
into
add
orb
inc
jl
lea
inc
mov
fmul
cmp
ds
jb
inc
dec
popa
lret
cltd
outsb
fisubrl
or
jg
cltd
adc
push
mov
jecxz
ja
roll
or
ljmp
mov
push
mov
and
push
cwtl
mov
test
mov
das
add
out
adc
test
lret
xor
pop
dec
aam
stos
or
decl
or
push
ja
jnp
xlat
cld
pop
xchg
std
pop
mov
addr16
mov
xchg
fldl
sbb
movl
xor
jae
adc
jecxz,pt
jge
lods
stos
jns
mov
sbb
push
push
insl
je
dec
mov
sbb
xchg
rclb
and
cmpsl
push
mov
je
pop
lds
cli
cs
out
aas
jmp
add
adc
cmp
pop
andl
jl
pop
cwtl
xlat
and
dec
xor
cli
jo
add
jg
bound
add
mov
push
ret
dec
push
or
mov
sbb
lds
cmpsl
jne
shr
sub
rcll
inc
jno
inc
shrl
mov
push
adc
push
push
mov
stos
add
in
mov
insb
int3
stos
fs
cmp
jae
lret
adc
enter
mov
addr16
lods
sub
or
ret
fwait
pop
addr16
mov
stos
and
frstor
adc
jno
inc
mov
and
imul
clc
fsts
mov
aas
outsl
test
ljmp
cmp
rorl
xor
pop
sarb
jl
add
mov
jl
ret
lcall
add
cmp
les
cs
stc
daa
xchg
stc
mov
inc
ffree
not
lret
fisttps
movsl
mov
mov
mov
popa
sbb
xchg
nop
aas
xlat
push
or
out
data16
out
int3
int
out
jae
mov
mov
int3
adc
mov
sub
mov
pop
ss
mov
lods
movb
xor
mov
xchg
rcrl
dec
lret
cmp
lods
repnz
push
hlt
jbe
enter
inc
lret
jns
mov
cmp
dec
pusha
jmp
test
push
pop
jp
jl
sub
dec
xchg
mov
shlb
xor
out
push
int
adc
pop
test
lcall
shl
add
and
push
enter
scas
idivl
aaa
loop
jns
cltd
shll
les
rcl
in
ljmp
insb
ret
pop
enter
mov
adc
icebp
push
add
faddp
out
testl
mov
pop
leave
mov
int
cld
stc
insb
cmpsb
push
sbb
cs
nop
xchg
iret
jne
das
xchg
cmp
xchg
push
xor
dec
rorl
lods
dec
jge
aaa
test
repz
mov
cli
ljmp
icebp
xchg
jnp
sub
jmp
xor
and
xor
outsb
xor
in
sbb
pop
shl
xlat
hlt
push
add
fcmovbe
lock
pusha
inc
mov
sub
adc
add
aad
xor
clc
imul
dec
enter
mov
inc
pusha
sub
push
test
rorb
jecxz
xchg
and
mov
sahf
imul
push
aam
cld
je
jle
mov
lahf
test
test
sahf
in
pop
pop
push
xchg
push
es
sbb
sbb
jge
int3
mov
enter
sbb
adcl
jl
cmpl
xor
sahf
sub
iret
ljmp
dec
sahf
lock
and
add
pop
lods
sub
leave
sahf
xor
lcall
scas
pop
mov
adc
mov
xor
cmp
and
xchg
mov
pop
fisttpll
push
shr
lods
mov
cltd
pop
dec
rcrl
or
out
sub
fiadds
cmp
dec
stos
sub
mov
int
rclb
xchg
cli
inc
cld
adc
dec
xchg
call
int3
bound
mov
xchg
shlb
mov
sbb
push
ror
push
out
dec
xchg
jns
push
xor
mov
out
bound
arpl
dec
cmp
popa
clc
test
cltd
pop
ret
aas
pushf
into
psubw
daa
inc
pop
cmp
mov
cmp
insb
dec
xor
pop
pop
pop
jp
mov
aas
sti
into
mov
sub
xor
ficoml
adcl
les
lret
xor
out
jmp
or
clc
and
xchg
int3
test
mov
bound
cwtl
sbb
ficomps
lods
js
jle
rcrl
icebp
or
hlt
imul
adc
mov
inc
cmp
addb
lods
es
loope
sbb
dec
add
jge
xchg
lcall
pop
rcr
jae
into
dec
jmp
rorl
jecxz
cmp
dec
pop
mov
mov
xchg
pushf
shll
roll
mov
in
movzbl
repnz
jle
xchg
aaa
cmp
xchg
xchg
mov
mov
adc
push
mov
mov
clc
in
pushf
mov
mov
gs
shl
js
adc
fisttpl
mov
arpl
push
fcmovne
in
ljmp
or
sbb
loop
cld
daa
push
aas
cmp
push
push
call
lods
xchg
sub
or
cmp
es
xlat
sbb
adc
push
xchg
jae
inc
push
js
push
leave
jmp
sti
rcl
mov
and
and
mov
dec
mov
lods
xchg
add
outsb
xor
icebp
pop
shl
daa
sub
popa
je
xchg
adc
add
pop
or
lcall
je
sub
and
xchg
or
fneni(8087
in
jbe
sub
jge
nop
xchg
dec
repnz
xor
mov
stc
rorl
filds
mov
mov
push
fnstsw
mov
adc
jnp
push
sub
insl
jge
sbb
xchg
fldenv
xchg
sub
insl
xor
adc
arpl
loope
xor
insl
inc
daa
pop
mov
pop
xchg
push
cwtl
aam
jnp
and
mul
sahf
pop
cmpsl
or
jp
xchg
sub
mov
in
movsl
jae
es
cmp
fsubr
adc
movsl
xor
test
js
dec
stc
push
in
mov
shll
sbb
cmc
scas
cmp
mov
sub
rclb
aad
pop
mov
sub
sbb
jg
dec
dec
mov
leave
dec
mov
movl
sbb
shll
add
add
mov
pushf
pop
incb
mov
cmp
add
repz
pushf
out
fimull
es
mov
fildl
cli
cmp
push
xor
mov
mov
pop
insb
add
sti
stos
sub
push
std
ljmp
lret
dec
roll
lret
subl
sti
pop
int3
andb
pop
fiaddl
cmc
ret
mov
orl
mov
push
pusha
jge
insl
or
jecxz
nop
lods
bound
xchg
dec
popa
ret
push
sub
mov
dec
popf
dec
daa
cmp
mov
xchg
jmp
arpl
out
repz
dec
dec
jne
cld
add
sub
xchg
xor
divb
int3
and
adc
xor
mov
jle
outsb
cld
lods
cmpsb
mov
int3
xor
sti
sub
aas
loope
xor
pop
sahf
cld
dec
int
popa
fldt
xchg
or
test
xchg
je
sahf
outsb
jns
fnstenv
mov
test
add
cmp
dec
mov
fimull
lds
mov
addr16
xor
call
lods
mov
lock
mov
xor
xchg
pushf
data16
addr16
push
jl
mov
sub
call
mov
adc
movsl
es
xchg
pop
aaa
pop
adc
loopne
pop
fcomi
inc
dec
push
shl
int
mov
rolb
inc
mov
ljmp
fs
or
inc
jge
insl
add
add
mov
jae
xor
pusha
jge
or
repz
fidivl
and
sbbb
mov
lods
jbe
cld
clc
mov
adc
cmp
xchg
imul
bound
pop
dec
add
scas
shrl
cltd
fdivp
mov
rolb
push
movsb
fidivrs
sub
pusha
imul
xchg
add
mov
ja
inc
inc
pop
sub
xchg
mov
imul
loopne
icebp
shlb
pop
mov
xor
lds
xor
lods
ds
cmp
mov
pop
cmp
mov
repz
xor
insl
rcrl
stos
leave
in
insb
in
mov
dec
ss
dec
aad
lret
cmpsb
xchg
into
jmp
xchg
jbe
mov
shll
pushf
in
addr16
jns
xor
adc
stos
data16
in
mov
popa
rcrl
int3
mov
cmp
cmpsl
cmpsl
pop
incl
in
inc
sub
mov
imul
out
or
mov
mov
pop
cmp
add
push
sub
xchg
xchg
mov
sbb
and
or
push
int
inc
cmpsl
xchg
push
test
hlt
movsl
mov
pop
popa
gs
icebp
add
and
pop
rcll
and
dec
xchg
jp
mov
stos
inc
lods
shrl
aaa
push
pop
mov
shll
and
pushw
add
loopne
imul
jp
dec
mov
aam
jl
xchg
mov
push
add
inc
in
mov
fstps
mov
pop
mov
cmpsb
popa
inc
xchg
lret
inc
xchg
xor
das
scas
pop
or
inc
xchg
pop
je
bound
mov
idivl
push
sbb
addr16
out
ja
sub
jl
mov
inc
push
jle
test
mov
sub
pusha
mov
ja
xchg
jne
std
inc
cmpsb
in
add
sahf
mov
mov
outsb
add
push
dec
fists
mov
sub
or
dec
stos
loop
lahf
repz
out
pop
aaa
pushf
and
mov
mov
pop
jmp
jmp
scas
addr16
aaa
and
movsb
mov
call
cmp
push
sbb
xor
std
int
sbb
loopne
sub
rcrl
or
call
shl
pop
mov
icebp
rcll
test
jecxz
fnsave
mov
inc
test
call
enter
popa
sbb
pusha
out
dec
add
roll
enter
jmp
rolb
pop
jnp
mov
sub
cli
push
int
adc
hlt
and
sbb
mov
cmc
pop
push
sahf
roll
and
ret
adc
imul
int
push
aad
adc
nop
mov
std
sub
shl
jnp
lods
xchg
add
push
pop
lods
mov
loope
cli
jae
mov
adc
shl
or
sti
mov
data16
and
bound
mov
cmp
mov
daa
add
out
aaa
dec
adc
sbb
add
sti
fidivl
lcall
pop
xchg
sahf
aad
xor
idivl
jb
mov
fstps
sub
pusha
adc
sbbl
insl
or
add
mov
enter
mov
lods
cmpsl
ljmp
mov
mov
fmulp
push
loopne
sbb
imulb
push
aad
dec
mov
add
in
sbb
bound
push
sbbb
std
lods
mov
lods
lahf
add
sub
sbb
xchg
outsb
mov
pop
rclb
adc
jge
adc
lcall
fidivs
adc
jmp
or
inc
xlat
jle
sahf
shl
lret
dec
pop
shr
scas
repz
mov
xchg
jl
jle
movsb
insl
dec
dec
jo
sbb
jmp
push
lcall
xchg
xchg
mov
movsb
jl
fst
add
inc
or
and
sub
cmc
sti
rcrl
inc
aaa
icebp
pop
mov
push
mov
mov
lods
dec
cmp
fisubrl
sti
pop
loop
add
outsb
fistpll
subl
push
sub
repnz
xchg
pushf
push
int
push
int3
shl
mov
mov
fwait
lret
sub
mov
and
shl
shl
mov
flds
xchg
mov
lret
test
mov
mov
mov
jb
mov
xchg
ljmp
test
sub
push
mov
out
cmp
ljmp
sub
nop
mov
fidivrl
testb
sub
insl
shrl
std
sub
sub
sub
xchg
sbb
push
leave
test
or
aam
jns
call
insl
shlb
mov
repz
sub
dec
out
aas
pop
mov
sti
daa
imul
mov
mov
rorl
cli
lcall
sub
inc
sbb
rcll
popf
push
push
movsl
cmp
mov
push
mov
iret
repz
or
push
jae
pop
fisttpll
push
sti
push
xchg
mov
int
pop
daa
cmp
jno
fstp
sbb
icebp
jbe
cmpsb
lods
ljmp
jne
rolb
jbe
push
xchg
cmpsb
xor
xchg
pusha
xchg
dec
sbb
jne
cmpl
pop
fcompl
fidivl
insl
push
dec
pushf
dec
icebp
mov
jge
aam
ds
cmp
dec
xchg
repz
pop
ror
or
push
or
out
jo
pop
dec
out
fimull
lret
add
sbb
repnz
nop
push
popf
into
fisubl
aam
mov
mov
adc
js
adc
push
movsl
cmp
scas
and
scas
test
mov
xchg
fldt
mov
adc
sbb
int3
daa
push
xchg
mov
lret
pop
add
sarl
mov
push
lock
xor
adc
jp
rorb
stos
sbb
stos
push
jne
enter
mov
sarl
push
adc
loopne
cmp
mov
cmp
push
testl
shrl
mov
push
pop
rcl
test
sub
lock
mov
mov
cmp
xchg
into
aas
int3
mov
xor
dec
fwait
imull
and
aad
cmpsb
lea
and
lods
or
dec
adc
enter
inc
sub
mov
pop
movsb
xchg
push
or
jb
dec
pop
sbb
aad
lret
pop
daa
pop
std
rcr
mov
pop
adc
xchg
jmp
inc
fsubrl
pushf
or
xlat
and
xchg
lret
popa
aad
fmul
ljmp
xor
push
les
xchg
cmp
ret
sbb
sub
adc
fs
in
std
repz
imul
mov
lods
cs
mov
mov
push
add
pushf
or
mov
lods
frstor
insb
inc
pop
mov
cld
jl
mov
jp
adc
inc
call
mov
out
addl
pop
push
std
cli
cmp
dec
xor
adc
mov
pop
cli
push
sub
and
dec
cmp
or
cmp
sbb
xchg
into
push
dec
movsl
adc
pop
dec
and
sbb
cld
mov
ljmp
lds
mov
lea
arpl
add
xor
inc
xchg
adc
push
fldl2e
sbb
stc
bound
mov
pop
dec
jmp
jp
add
mov
iret
pop
or
adc
fwait
mov
dec
out
mov
xchg
jb
dec
and
stos
repz
xchg
sub
clc
addb
pop
mov
push
pop
test
int
jg
jge
sub
cmp
pop
xchg
pop
adc
imul
cmpsb
adc
push
inc
roll
mov
rcrl
mov
lret
test
icebp
sahf
adc
cmp
mov
push
cmpsl
mov
ljmp
test
imul
dec
pop
push
mov
or
pop
add
jne
lahf
mov
shrl
pop
mov
adc
out
inc
call
push
pop
gs
leave
sbb
call
fistl
mov
xor
notl
inc
fiaddl
mov
rcl
and
xor
ss
adc
fbld
jb
mov
mov
scas
pop
lret
xchg
xchg
and
popa
pop
rcr
mov
mov
mov
inc
repnz
dec
inc
roll
sti
cmpsb
pop
fcoms
mov
cmp
adc
jne
movsl
fs
xor
data16
and
jmp
in
mov
mov
popa
pop
js
inc
lods
sarl
fists
cwtl
stc
cs
xor
jmp
push
mov
stos
jno
test
ficomps
sbb
inc
arpl
outsl
xor
add
jb
rcl
xor
cld
cmp
mov
xchg
jno
mov
and
loop
and
cmp
fmuls
sbb
jl
inc
push
xchg
jge
dec
or
mov
and
xor
mov
rorl
adc
mov
sub
lods
dec
adc
pushf
mov
inc
sbb
add
mov
stos
loopne
stc
jecxz
roll
imul
mov
insb
and
sbb
ret
inc
lahf
mov
sbb
es
cmpsl
icebp
mov
push
imul
cmp
data16
out
mov
pushf
int3
xchg
fistpll
sub
pop
jmp
and
popa
xchg
call
xchg
dec
jecxz
push
sarb
xor
inc
mov
lods
aad
cmp
sub
add
mov
adc
bound
stc
mov
pop
pusha
cmp
sbb
jne
loope
pushf
sarb
xchg
mov
inc
mov
int3
std
mov
je
aaa
sbb
adc
lods
add
adc
scas
sub
sub
aam
jecxz
xor
mov
inc
outsl
fidivrl
pop
adc
cmp
aam
in
fisubl
sub
xchg
adc
mov
xor
test
add
mov
nop
mov
fistpll
shl
test
outsl
mov
psadbw
xor
pop
aaa
xor
mov
roll
lret
in
xchg
cmpsb
xchg
imul
insb
jmp
fisubs
movsl
incl
cmpsl
xor
jge
and
mov
lcall
dec
lcall
repz
int
shll
and
outsb
mov
hlt
mov
cmp
sbb
ljmp
sub
rclb
hlt
test
pushf
xchg
and
clc
xchg
int3
mov
rcr
ss
mov
sub
incb
rorl
dec
adc
lahf
dec
mov
cs
repz
mov
inc
popa
divl
cmp
mov
dec
sub
mov
or
add
insb
sbb
pop
pushf
jg
and
mov
je
sbb
xchg
cld
in
xor
lcall
push
bound
fisubl
addr16
adc
popa
mov
mov
cmp
pushf
shl
shll
shrl
mov
imul
clc
jg
jo
sub
push
adc
sub
push
xor
adc
mov
jg
xchg
mov
pop
gs
out
xchg
push
repnz
cmpsb
and
rcll
or
addr16
xchg
or
lahf
mov
cmp
and
or
jge
mov
out
jae
lret
sbb
movsl
mov
ja
cmp
xchg
movsl
ja
mov
mov
pop
jle
mov
sbb
in
jbe
pop
lret
cmpb
xchg
pop
rcll
mov
push
and
pop
adc
jle
cli
sbb
pop
push
out
cmp
enter
and
fcmovu
scas
filds
sbb
mov
stc
fwait
dec
int3
xchg
imul
sub
sbb
mov
mov
jecxz
jge
lcall
mov
mov
cmp
push
stc
pop
mov
ja
test
lret
xchg
mov
pushf
in
xchg
xor
dec
scas
ror
mov
sar
jne
fstps
add
pushf
roll
sub
loop
push
sbb
ror
hlt
lods
mov
sbb
cld
push
cmp
shll
inc
mov
ficompl
add
cs
inc
jne
jl
ficoms
ss
add
cmpsb
xor
fdivrl
ljmp
test
dec
rcrl
in
es
and
aad
out
aam
fisubrs
mov
roll
jae
stos
xchg
test
cmp
fidivrl
or
jns
movsb
inc
fs
jns
orl
jge
mov
imul
clc
or
push
cmp
addb
adc
dec
xchg
jl
jns
cmp
mov
sbb
sahf
shrl
mov
xor
add
mov
mov
xchg
pop
int
xor
fcmovu
popa
xchg
mov
mov
and
sub
test
das
pop
pop
sub
fsubrs
fdivrs
jge
lods
push
jne
mov
popa
cmp
test
xchg
and
lock
out
cmpsb
mov
test
push
jne
fsubrl
cmp
outsl
sub
in
cmp
mov
hlt
repz
gs
or
orb
push
cmp
push
cmpsl
aam
sar
mov
and
out
cld
loope
dec
std
inc
mov
mov
push
xor
shl
mov
pop
inc
aam
push
daa
adc
xchg
out
pushf
test
popa
xchg
dec
cmc
cli
jb
or
add
sti
or
fs
sahf
fnstcw
jecxz
mov
aas
pop
loope
out
mov
mov
mov
mov
fstpt
sub
insl
cmp
loopne
test
lcall
call
scas
std
dec
cltd
jge
mov
rol
push
in
lahf
mov
mov
xor
daa
out
pop
push
mov
repnz
push
pop
or
roll
hlt
fiaddl
fstpt
push
mov
lret
es
push
pop
or
dec
jne
cmpsl
loop
addr16
fnstenv
out
mov
xor
idiv
test
and
stos
mov
jne
daa
out
lret
pop
repnz
dec
mov
pop
rclb
lcall
xchg
jo
das
jne
mov
loop
mov
lock
fsubl
cmp
xchg
jne
mov
test
adc
ss
out
mov
inc
movsl
or
stos
mov
pop
pop
ficomps
add
cmpsl
pop
mov
int
int3
bnd
sti
or
xor
fnsave
movsl
cs
rclb
jmp
xlat
adc
mov
inc
sarl
pop
lods
or
inc
rclb
loope
xor
lds
dec
popa
cld
jns
repnz
cmc
pop
xchg
mov
push
push
xor
cltd
arpl
or
xchg
mov
mov
scas
shll
sub
ljmp
or
adc
add
daa
enter
lret
dec
je
sub
dec
sub
addb
inc
cltd
cmc
jnp
les
jne
int3
call
push
das
xchg
int
jno
xor
scas
fsubs
fwait
clc
jl
mov
rol
add
push
shlb
fldcw
push
sub
in
dec
pop
cmp
pushf
fldcw
fs
ljmp
fcmovbe
je
test
fnstcw
sub
pushf
pop
lods
jns
and
xchg
adc
add
leave
inc
xchg
ret
mov
inc
mov
bswap
shrb
pushf
sub
stos
add
mov
fs
fisubl
dec
inc
lds
fiadds
repnz
push
aam
jo
enter
jg
push
or
inc
movsb
hlt
sbb
lret
and
mov
ja
pop
stc
movsl
das
mov
lcall
or
jbe
mov
xchg
cmp
xor
or
outsb
jae
dec
inc
adc
ret
jae
mov
faddl
addr16
flds
pop
ss
jo
stc
out
cmp
pop
lods
dec
dec
je
icebp
jne
leave
push
xchg
lods
loop
jg
dec
int3
stc
out
pop
inc
test
mov
loopne
fsubl
es
outsb
mov
pop
cmp
shl
mov
movsb
pop
inc
inc
sahf
pushf
mov
push
stos
push
faddp
mov
shll
dec
dec
repnz
mov
insb
out
dec
fdivl
or
fwait
mov
movaps
xor
in
cmp
jbe
xchg
fstl
sub
and
sarl
fxtract
jb
mov
push
int
and
add
ficoml
outsb
or
cmc
cmpsb
xlat
repnz
stos
mov
sbb
push
cmp
add
mov
dec
mov
jge
or
pop
adc
pop
or
mov
inc
mov
es
mov
loope
das
int3
cmp
cmpsb
mov
xchg
inc
cmc
fsub
adc
add
push
inc
lea
push
mov
mov
shll
push
mov
aam
fimuls
mov
adc
pop
cld
dec
dec
shrb
popf
xor
pop
xor
movnti
jg
out
aad
or
push
sbb
cmp
pop
push
stos
mov
pop
clc
pusha
cmp
repz
sub
int3
insb
rorl
mov
daa
into
jmp
pop
rcll
loop
in
rorb
inc
xchg
les
clc
push
add
or
sti
xor
and
mov
xchg
xchg
sar
fwait
pop
xor
subl
mov
lods
cld
outsl
sub
sub
mov
fmul
outsb
jae
setl
sbb
dec
pop
subb
fsts
push
arpl
mov
clc
and
shll
int
loopne
xor
and
push
add
mov
inc
mov
mov
mov
sub
adc
xchg
add
repnz
pop
hlt
adc
xlat
adc
pop
and
push
stc
adc
call
mov
xchg
jbe
pop
rorl
add
mov
hlt
dec
xchg
sub
pop
xchg
dec
mov
push
push
pop
cmp
lcall
adc
mov
push
sub
icebp
mov
lahf
ds
out
test
sbb
mov
imul
xor
pop
pop
lcall
insb
jo
addr16
outsl
fcom
imul
mov
inc
fidivrl
addl
inc
sub
inc
and
aad
mov
or
int
sub
sub
jmp
add
popa
sahf
lea
mov
adc
jne
dec
jb
jp
add
inc
dec
mov
adc
add
mulb
jae
std
jle
mov
lcall
dec
pop
adc
dec
ds
loop
jge
inc
xor
xchg
jg
sub
and
pop
shll
sbb
push
mov
fcompp
sub
mov
loop
sbb
lret
pop
adc
sbb
fdivl
sub
jg
cmp
push
push
stos
pop
mov
inc
xor
mov
ja
xchg
in
fsubrs
pop
mov
fwait
hlt
lds
fidivl
cltd
iret
cmp
out
sub
xor
sbb
imul
ljmp
and
mov
leave
jns
push
adc
dec
outsl
addr16
sar
insb
jge
and
popf
rol
mov
ljmp
cmp
mov
dec
push
lods
lahf
cltd
adc
clc
lret
mov
loope
pop
fmull
xchg
push
dec
daa
je
cmp
test
cmp
lods
push
xor
jmp
sar
imul
add
out
and
fs
insb
lods
clc
push
sub
cmp
push
call
push
jle
out
push
out
mov
stos
jle
loop
fcoml
jecxz
xorb
outsl
pop
inc
lods
cmp
repz
outsb
cmp
mov
call
pusha
or
jno
std
mov
jns
fidivs
sub
jge
mov
cs
repz
jle
jnp
mov
lods
or
mov
push
pop
sbb
jb
aas
popa
sub
xchg
aas
shrl
sbb
popa
dec
push
dec
jns
lea
loope
xchg
cs
sbbl
xchg
push
push
jne
into
fsubs
int3
cmpsl
jbe
div
dec
movsl
mov
ror
jae
movsb
insb
in
enter
inc
or
andb
mov
sar
fs
movsb
mov
sbb
fistpll
into
fsub
pop
mov
pop
xchg
xchg
subl
addl
data16
xchg
inc
addr16
adc
shll
mov
scas
imul
stos
xchg
scas
lret
inc
inc
cmp
lret
mov
rcrl
dec
sub
outsl
xor
popf
mov
aad
dec
scas
fxch
call
or
lret
movsl
mov
mov
sub
ret
repz
mov
pop
pop
push
movsl
adc
xor
in
shlb
dec
mov
mov
adc
ja
mov
xchg
mov
dec
cmp
add
jmp
xlat
mov
fcoms
in
mov
xchg
fistpll
dec
xchg
int
aam
subl
pop
negb
adc
aad
pop
xchg
xor
aam
or
sbb
es
adc
pop
jnp
insb
pushf
ret
shll
pop
xchg
popa
xchg
fiaddl
enter
sub
sub
pop
sbb
lods
mov
lods
add
outsl
mov
push
ret
fistl
inc
stc
lcall
inc
fmuls
sub
mov
hlt
fcomps
add
pop
insb
sbb
cmp
int
movsb
jge
jo
les
shrb
into
shrl
jae
in
insb
mov
xor
lahf
dec
scas
fdivr
int
xchg
ds
scas
loopne
dec
sahf
jge
mov
mov
cld
jne
ret
clc
out
outsb
push
rolb
jae
mov
or
or
sahf
push
out
rcll
hlt
pop
and
repz
dec
mov
gs
xchg
pusha
jmp
cmp
je
cli
cld
push
popf
mov
adc
mov
hlt
cmpsb
dec
sub
sub
dec
sti
lods
leave
sub
xchg
repnz
and
or
lods
pusha
jp
mov
lcall
jns
adc
shr
or
xchg
dec
xor
aam
ss
adc
neg
addr16
out
rcrb
jae
bound
jge
daa
sbb
loop
popf
lods
mov
push
jns
mov
fcompl
push
leave
es
xchg
jns
cmp
cld
dec
ja
pop
shl
pop
out
push
xlat
stos
inc
mov
add
loop
fwait
or
ss
sub
jno
bound
push
and
gs
push
in
push
xchg
aas
out
xor
rcl
pop
sbb
jb
push
into
push
shll
out
jne
inc
loopne
xchg
bnd
cli
and
dec
jge
mov
popl
jge
subb
inc
lahf
mov
inc
or
mov
js
jge
mov
cmp
mov
pop
sub
sub
sbb
repz
int3
mov
loopne
mov
aad
rcrb
in
aas
push
int3
sbb
mov
ret
mov
add
inc
fxtract
or
leave
push
call
mov
or
jns
mov
repnz
sub
sahf
push
xor
ss
dec
mov
mov
ljmp
pxor
sub
mov
cmp
xor
adc
adc
push
adc
out
cmpsb
or
inc
popf
js
fsts
mov
lahf
pusha
jl
pop
dec
and
add
xchg
test
shlb
jmp
movl
push
mov
dec
inc
daa
xlat
lods
mov
adc
ret
stos
pop
ret
lret
pop
sub
dec
lret
cs
test
pop
in
dec
sahf
cld
dec
adc
pop
inc
fisttpll
fimull
mov
pop
jle,pt
adc
enter
cld
js
cli
aad
sarl
pop
pop
cmp
loope
loope
add
aaa
mov
ss
js
xchg
imul
es
pop
mov
inc
lret
movsb
and
dec
mov
and
xchg
pop
or
das
adc
inc
movsl
loop
sbb
xchg
adc
shl
mov
nop
sub
sahf
mov
lcall
sub
test
loop
and
mov
jne
sar
out
mov
rorl
inc
jbe
imul
sbb
dec
fstl
out
popf
or
mov
repnz
cmpsb
into
or
into
and
pop
dec
test
sbb
bound
jmp
inc
std
mov
push
add
hlt
outsb
sahf
mov
mov
mov
lahf
into
testb
cltd
sbb
mov
imulb
mov
xchg
pop
fdivs
fdivrp
mov
pop
adc
int
shlb
cmp
sbbb
jmp
inc
pop
pop
dec
xchg
scas
cmp
clc
pop
cmpl
daa
adc
pushl
push
sbb
aam
cld
push
inc
ret
xchg
xchg
in
sub
je
ret
fnstsw
cmp
lods
out
aas
insb
mov
insl
xchg
lahf
push
cli
mov
push
ds
pop
cmc
dec
in
movsl
jg
js
jl
out
and
dec
inc
rcll
xor
adc
jns
sub
xor
mov
pop
mov
mov
ss
outsl
inc
cmp
adc
push
dec
jae
out
inc
add
mov
pushf
mov
cmp
push
ds
das
in
enter
pop
sub
shlb
mov
mov
icebp
aad
push
repnz
das
lret
imul
push
jg
xchg
dec
cmpsl
testb
shl
xchg
push
jne
push
xchg
mov
and
out
popa
adc
adc
push
outsl
mov
sub
mov
mov
mov
cmp
enter
sbb
ja
xchg
mov
cwtl
push
rorb
out
fisubrs
sahf
daa
je
dec
shll
sahf
mov
push
int3
or
jmp
dec
fwait
scas
es
aaa
icebp
cmp
sub
sub
fcompl
ror
stos
scas
jmp
ds
test
fistpl
into
and
popa
fdivr
fst
loopne
sbb
jb
sahf
shll
pushw
sub
orl
pop
fisubl
hlt
out
jg
andl
inc
mov
sub
daa
dec
pusha
cmp
ret
mov
push
jno
or
adc
add
lea
mov
sarl
pushf
adc
sahf
sbb
ret
pop
cmp
test
pop
mov
popf
mov
daa
push
lret
ret
lock
cltd
pop
push
cmp
and
jne
subb
aaa
push
rcrl
pop
sbb
mov
int
mov
jecxz
and
out
lret
ja
cwtl
rcrl
iret
inc
jmp
cwtl
adc
dec
jne
add
jl
dec
imul
jmp
lock
cld
xchg
andl
jg
dec
ljmp
rorl
mov
popa
pop
pop
xchg
cld
mov
add
mov
mov
xor
mov
dec
subl
jbe
jb
push
or
pop
xchg
cmp
int3
pop
roll
dec
inc
mov
adc
lahf
ret
xor
cmc
pop
test
pop
jmp
mov
mov
mov
fldl
sub
jl
in
sbb
add
mov
shrd
rcrl
rorl
inc
aas
test
cmp
cltd
aas
cmp
out
jno
xor
movb
pop
cmp
pop
repnz
push
push
aas
add
cmp
dec
int
add
insb
test
mov
flds
pop
fisubrl
sti
add
sub
fldt
out
outsb
or
xchg
xchg
shll
push
push
sahf
add
xor
rorl
fwait
mov
aam
inc
xchg
mov
shll
jg
jae
push
pop
jb
sahf
shrl
idivl
push
cmp
clc
mull
adc
dec
or
xchg
repz
xchg
jne
mov
test
test
adc
aam
adc
pop
out
jge
fdiv
shll
jmp
in
inc
push
push
enter
aad
adc
dec
shll
dec
mov
das
and
fsubrs
inc
ror
stc
pop
push
xchg
loope
sub
mov
imull
shll
jl
sbbb
leave
or
mov
mov
sub
mov
frndint
add
sub
sti
lcall
adc
adc
pop
inc
mov
cmp
fsubrl
divl
aad
cmpsl
mov
pop
pop
sub
into
jne
test
fistpll
xchg
cltd
aam
test
mov
ja,pt
xchg
cmp
xchg
test
mov
lahf
repz
mov
lcall
rcrb
roll
int3
mov
ret
xchg
sbb
sub
jb
sahf
xchg
mov
dec
lods
ror
ret
cmp
xor
or
rcll
jbe
jg
inc
jns
cli
lret
call
mov
outsl
ds
pop
add
pop
xchg
scas
into
rclb
testl
cltd
mov
push
sti
das
rol
xlat
stc
mov
mov
scas
mov
inc
and
jge
test
in
mov
xchg
xchg
repz
ficoml
aad
cltd
xchg
jge
mov
pushf
scas
fwait
cwtl
sub
fsubrp
adcl
lret
sahf
aad
xchg
jae
orb
dec
sbb
mov
inc
insb
frstor
sarl
mov
clc
xchg
fiadds
je
sbb
loop
add
mov
adc
shl
mov
and
imul
inc
push
out
mov
mov
mov
jno
aad
pop
out
push
sub
js
aaa
cwtl
mov
daa
mov
stc
add
xchg
push
jg
lods
fdivl
xchg
xor
mov
mov
cmp
lret
rorl
scas
push
mov
dec
mov
xchg
int
dec
in
sbb
sarl
les
into
shll
cmpsl
push
jl
in
aam
int3
pop
shlb
xchg
inc
aaa
test
pop
sub
testb
test
dec
pop
test
rcrl
xchg
inc
mov
xor
push
push
insl
sub
shl
xchg
repnz
sub
lcall
adc
mov
iret
push
jns
pushf
push
inc
fldt
shr
pop
inc
scas
int
dec
sub
mov
lret
pop
push
inc
les
sub
out
jecxz
jmp
lret
inc
loopne
xor
pop
jmp
bound
xor
les
sahf
xchg
and
insl
mov
or
ljmp
sub
push
shll
cltd
jne
outsb
fdivrl
pop
lods
mov
mov
loope
ret
pop
nop
pusha
sub
add
add
popf
push
repnz
call
les
xchg
aaa
call
mov
jle
pop
adc
fadd
mov
popa
scas
adc
test
xlat
lret
rorl
inc
out
fstp
mov
xchg
and
addr16
aad
jecxz
rcrb
sub
jp
sahf
shrb
jle
int3
inc
ss
push
jmp
fld
cmp
ficoms
decb
out
inc
push
lods
add
mov
test
fcmovb
mov
imul
lahf
scas
cwtl
cli
test
cmpsl
push
in
sub
lock
jns
mov
ret
add
std
mov
aam
clc
mov
dec
iret
mov
std
push
in
xchg
lods
fmull
repnz
jmp
adc
fsubrp
sub
aam
fisubs
daa
in
mov
ss
cmpsb
pop
and
stos
fwait
test
lods
in
add
or
rorl
pop
sahf
lods
gs
xor
or
hlt
push
lods
mov
or
aas
xchg
or
movsl
add
add
sbb
mov
dec
xlat
xor
mov
inc
into
lret
insl
jge
pop
jecxz
add
mov
mov
push
mov
cmpl
lods
dec
in
cmp
cmc
push
shll
pop
pop
mov
ds
repz
lods
inc
xchg
repnz
sub
outsb
mov
xchg
push
fdivrs
adc
fldl
dec
and
jecxz
or
xor
aad
fimuls
aam
mov
xor
lock
adc
xor
popf
pop
lods
adc
mov
inc
adc
rcl
jmp
fucomi
mov
mov
mov
aam
lock
adc
enter
mov
pushf
add
sbb
pop
std
imul
fs
lds
popf
xor
fs
jnp
push
mov
push
neg
dec
xor
add
dec
sbb
sti
mov
out
add
movsb
adc
push
adc
fldenv
addr16
shll
xchg
inc
mov
jnp
sar
adc
mov
sub
push
cmp
push
jge
mov
sbb
les
sbb
lcall
repnz
and
lahf
popf
mov
shrl
enter
dec
adc
mov
inc
jbe
not
mov
dec
pushf
cld
sbb
out
pop
subb
es
std
xchg
int
mov
mov
xchg
dec
jge
mov
mov
inc
mov
aad
aas
in
jbe
or
xlat
ljmp
repz
xor
ret
shrl
and
xchg
js
sahf
cmp
mov
in
mov
divl
pop
cltd
loop
xor
push
out
jp
loop
hlt
pop
cwtl
pop
mov
aaa
in
dec
shl
add
daa
mov
jg
push
adc
sub
jle
mov
popf
mov
push
movsl
push
jecxz
and
shll
push
cld
in
fcmovb
xchg
pop
ret
test
pop
sarb
mov
mov
roll
mov
lret
pop
sub
push
adc
addr16
jg
jl
cmp
adc
data16
dec
shlb
mov
roll
sub
jp
mov
jge
cmp
flds
push
movsl
movsb
lock
xchg
or
subl
mov
jns
pop
xchg
je
roll
xor
jno
dec
mov
inc
imul
testb
dec
into
shl
movsl
popl
subl
shrl
lahf
jge
inc
jne
and
xor
lods
pop
push
out
rorl
add
add
sahf
mov
out
rcrl
add
aam
test
mov
test
and
mov
cld
enter
jmp
mulb
dec
jno
push
xchg
pop
pop
hlt
mov
pushf
mov
sub
jecxz
mov
xor
mov
addr16
adc
mov
inc
xchg
ret
cmp
mov
fidivrl
roll
ss
push
mov
insb
xchg
pop
imul
out
je
pop
jns
dec
insb
xchg
cmp
sub
and
cwtl
jmp
adc
sbbl
add
cmp
shr
jg
xchg
out
in
out
dec
aad
mov
sub
sarl
xchg
mov
dec
nop
push
sub
in
sar
fimuls
loopne
push
cmp
hlt
addb
in
iret
das
jo
mov
out
stos
sbb
xchg
cmc
js
xchg
pop
pushf
test
pop
push
dec
fucomi
lds
pop
cmp
cmp
stc
add
xchg
push
in
mov
add
xor
mov
adc
mov
shlb
lret
pushf
mov
rolb
jp
mov
sarl
inc
in
jne
movsb
mov
lods
cmc
int
xchg
ret
dec
fstl
mov
mov
and
fisttps
es
popa
or
xor
mov
sub
xor
scas
mov
outsl
or
adc
xchg
mov
jmp
in
daa
push
and
inc
shr
lahf
in
push
ds
inc
xor
popf
xor
jle
xchg
push
dec
stc
fidivs
jge
push
mov
mov
test
fsub
cmpsl
aaa
stos
ljmp
push
adc
lods
jp
sub
popf
cmp
cmp
sub
push
push
or
pop
jmp
scas
lret
incl
leave
imul
pop
xchg
lods
cltd
sub
push
lock
jns
jne
into
dec
cld
imul
xor
xor
fldl
mov
mov
movl
push
mov
add
adc
cmpsb
scas
shll
cmp
cltd
mov
jne
mov
daa
inc
daa
fstp
test
mov
add
add
and
push
mov
sbb
sub
out
lcall
aas
into
pop
add
xchg
in
popa
stos
mov
roll
arpl
sub
jge
xchg
fcmove
mov
roll
clc
pop
sub
rcl
rcrl
push
jne
xorb
sub
jle
inc
inc
fsub
jno
xor
sbb
mov
addl
mov
outsb
shrl
js
and
xchg
mov
dec
and
test
or
push
mov
cmp
jo
daa
jmp
nop
add
or
add
push
push
in
test
in
out
ds
ror
sbb
insb
and
arpl
xchg
push
je
addr16
es
jg
rorl
push
and
cmp
lods
cvtdq2ps
pop
inc
xor
outsl
popa
mov
int3
push
fdivr
push
lret
notb
lfence
mov
push
add
pop
push
roll
out
push
loop
adc
xchg
inc
or
out
inc
roll
sub
loop
gs
fs
enter
mov
mov
call
shll
jnp
cmc
inc
fs
int
push
mov
mov
sub
dec
gs
popf
mov
add
gs
mov
mov
jae
imul
mov
stc
push
in
push
in
clc
mov
sti
int
mov
cmp
clc
mov
ja
adc
add
inc
xor
inc
and
push
ror
mov
pusha
mov
stc
incb
mov
adc
adc
enter
sbb
cmpsl
in
jle
test
into
xchg
adc
aad
inc
test
imul
ss
mov
dec
test
mov
inc
xchg
test
addps
xchg
mov
cmp
xchg
pop
outsb
inc
loop
andb
xchg
shl
aas
pop
scas
mov
push
mov
mov
pop
mov
popf
mov
mov
out
push
dec
pop
inc
mov
sahf
lahf
das
jb
lods
push
cs
and
repnz
xor
ds
and
sub
stc
xor
pop
pop
add
jb
fsubrs
shl
loop
lods
sub
stc
ds
jns
inc
dec
pop
shll
popl
or
inc
mov
mov
push
push
or
shrl
sarl
push
mov
into
pop
ljmp
mov
clc
sub
pop
les
sahf
pop
xor
inc
sbb
in
xchg
mov
std
xchg
arpl
add
jg
lahf
pushf
popf
xor
mov
push
lea
xor
js
mov
xchg
subl
sbb
sub
add
rorl
or
pop
mov
addr16
mov
insb
imul
andl
adc
fcmovnu
aad
push
lods
cmp
std
mov
in
rorl
xchg
int
mov
mov
stos
or
ljmp
ds
lret
into
mov
jns
xor
std
into
lahf
dec
inc
mov
sbb
mov
fs
push
fildl
pushf
sub
sub
sahf
popf
aaa
inc
std
mov
stc
jmp
sahf
mov
push
mov
inc
add
loop
aam
or
inc
out
ljmp
sub
in
xchg
inc
imul
lea
pop
movsl
rcll
in
pop
shrl
sbb
aad
leave
gs
movsl
fwait
adc
arpl
mov
inc
aad
fmulp
je
mov
imul
sub
fidivl
movsb
insb
pop
fmul
sbb
sbb
cmpb
rcll
fisttpl
jmp
sti
rcll
addr16
pop
outsb
roll
dec
pushf
fcmove
in
inc
jb
fsubrs
mov
mov
idivl
into
pop
xor
repnz
and
jmp
sahf
imul
movsl
jge
xor
xor
repnz
fildll
xor
test
iret
jmp
in
out
add
or
adc
hlt
mov
or
mov
dec
shrb
xchg
sub
pop
jge
bound
mull
mov
sbb
les
mov
aam
shlb
add
mov
sbb
sbb
ret
jp
jbe
mov
push
xor
mov
arpl
insl
push
mov
or
jb
push
pop
add
rolb
sbb
cmp
mov
das
or
sub
mov
sarb
clc
sub
ret
push
daa
adc
stos
das
xchg
pop
jne
leave
mov
fidivs
es
fwait
ja
shll
push
shrl
sub
ret
mov
push
jno
xchg
sahf
ds
mov
pop
in
dec
push
xchg
sub
ljmp
pop
rorl
ja
push
mov
shrb
pop
xor
rolb
mov
xchg
push
shl
xchg
xchg
xchg
pop
mov
insb
xor
jl
jbe
and
cwtl
es
repnz
ret
inc
pop
mov
imul
negb
adc
sub
dec
jp
sbb
xor
xchg
fdivs
mov
lahf
push
ljmp
add
cmp
nop
loop
roll
inc
mov
inc
xor
gs
movsl
add
sbb
sbb
sub
push
sbb
xchg
loopne
pop
ret
ds
push
adc
and
aaa
aas
dec
shrb
jae
fwait
pushf
ret
inc
xor
xlat
rcrl
mov
fidivl
scas
dec
sub
stc
aas
sub
mov
fldenv
inc
and
push
mov
fnsave
mov
pushf
pop
mov
pop
iret
and
pop
test
stc
scas
or
mov
inc
sbb
xchg
sbb
jns
shll
shrl
fidivl
in
add
mov
mov
push
xor
cmp
aas
push
sub
jl
loopne
fwait
xor
lcall
xorl
mov
push
rcrl
outsl
xchg
bound
pushf
and
rolb
lahf
jae
sbb
std
ljmp
and
cmp
pop
inc
jne
cmp
dec
dec
loopne
inc
xchg
fidivrl
jmp
leave
push
push
das
sub
mov
cmp
mov
test
ss
out
cltd
mov
imul
je
adc
rorl
mov
out
sar
out
mov
push
mov
idivl
jno
xor
add
mov
add
aam
rcrl
push
loop
adc
cmpsb
rolb
hlt
rcrl
out
mov
outsb
das
je
jg
cltd
int3
int
jno
push
xchg
pop
dec
scas
xchg
lods
push
inc
push
jbe
fucom
icebp
filds
sub
adc
imul
xchg
popa
aas
shlb
shll
aad
data16
mov
repnz
aaa
ss
mov
mov
dec
mov
scas
arpl
outsb
adc
xchg
shlb
stos
idivb
adc
or
call
dec
or
push
lea
and
popf
push
mov
push
stos
in
fisttpll
push
stc
cmp
cmp
dec
call
in
rcl
push
cmp
lods
xor
scas
stos
into
rcrl
adc
sub
cld
mov
clc
dec
sbb
test
pop
daa
loop
mov
mov
jmp
mov
push
mov
into
cld
jmp
sub
xor
cwtl
xchg
dec
das
shr
xor
repnz
shl
leave
xor
imul
pushf
imul
lods
push
push
daa
pop
inc
inc
pop
jmp
mov
cmp
into
inc
jp
cmp
movsl
jg
sub
add
adc
xchg
jbe
mov
mov
daa
jecxz
xor
cld
daa
push
nop
or
mov
jg
pop
stc
jle
std
jae
xchg
out
xchg
pusha
cmp
mov
inc
rcl
xor
cwtl
fiaddl
mov
xchg
repnz
insl
and
xor
inc
jno
jg
scas
lret
mov
das
aam
repnz
push
dec
pop
notl
or
pushf
mov
add
popa
dec
mov
xchg
and
into
int
inc
dec
movsl
dec
and
fcom
pop
cmp
popa
add
aam
push
sub
sbb
rcrb
out
into
fiaddl
dec
das
sbb
test
sub
jl
cli
lret
lret
push
wrmsr
fsubs
fnstcw
out
shll
adc
mov
imul
pop
mov
ja,pt
push
pop
jmp
in
rcl
sub
out
jge
or
pop
sub
adc
insb
mull
mov
mov
mov
adc
mov
pop
pop
xor
subl
dec
mov
movsl
hlt
fildl
scas
addr16
mov
cld
xor
push
dec
lods
mov
add
jno
mov
pop
rcl
dec
or
jmp
cmp
sbbl
xlat
cmp
or
cli
insl
sub
mov
xchg
cs
sub
inc
adc
mov
xchg
pop
aas
ss
pop
aam
rcl
push
pop
push
sbb
movsl
and
hlt
fimull
int3
and
mov
dec
cltd
jge
xchg
cmp
cmpsl
gs
adc
adc
rorl
mov
sub
dec
insl
xlat
xor
lds
andl
out
stos
mov
dec
je
pop
insl
leave
mov
movsb
enter
movsl
repz
movsl
shrb
lret
mov
push
jl
dec
or
lret
cmp
mov
lods
jl
stos
scas
or
cmp
pop
lahf
dec
pop
cld
cs
jge
clc
cwtl
leave
repnz
sarl
adc
pop
and
fwait
outsb
fsts
push
adc
pop
cmp
cmc
sbb
sub
pop
jg
mov
out
cmp
rcrl
jne
lds
dec
pusha
sub
cmp
inc
movsl
outsb
mov
mov
cmp
enter
rclb
dec
push
enter
lods
sbb
dec
imul
xor
sbb
jp
mov
sbb
sub
ja
sub
xor
jecxz
xor
inc
call
mov
add
or
out
pop
shll
xor
xchg
fcomip
adc
je
adc
test
ss
iret
fnstcw
ror
xchg
into
ror
ss
aam
test
sub
sarl
mov
out
js
dec
pop
js
xchg
push
rorl
cld
lea
add
scas
mov
test
xor
in
sub
mov
je
rcrl
sub
mov
cs
mov
mov
mov
sub
lods
jne
in
sbb
add
sbbb
lahf
inc
movsb
rcrl
outsb
int3
jp
clc
pop
subl
mov
insl
add
sar
xchg
jl
je
sub
out
loopne
out
daa
adc
jnp
aam
repnz
xchg
in
movsl
pop
push
mov
fadds
lahf
pop
fucomip
mov
out
mov
insb
inc
into
and
add
add
pop
pop
mov
movsb
sbb
ljmp
mov
mov
jmp
call
pop
jb
cmp
imul
rcrl
jbe
aam
scas
sbb
sub
jns
pop
ljmp
mov
ss
fs
fimull
xchg
adc
push
sbb
ja
xor
xchg
xchg
push
pop
xchg
andl
pop
jg
pop
rclb
repz
aam
or
push
lock
add
mov
adc
roll
pop
rcll
icebp
imul
ljmp
sbb
or
enter
sbb
inc
fdivp
fs
sahf
outsb
decb
ret
hlt
jge
ret
outsb
ss
pop
sbb
push
rorb
ds
mov
fistl
clc
jp
lds
jbe
fwait
daa
add
add
das
insl
ljmp
sub
adc
es
cmp
lea
cmpsl
and
int3
mov
and
fisttps
je
dec
test
fisttpll
pop
mov
xchg
aas
xor
cmpb
nop
jbe
mov
xchg
imul
xchg
mov
pop
or
fisubrl
push
pusha
sub
adc
or
rorb
xor
out
stos
mov
pop
jge
stos
jmp
inc
std
xchg
lahf
lcall
mov
jmp
shll
inc
sbb
push
jg
in
sarl
shll
sbb
fs
in
lahf
mov
push
lcall
sarl
shrl
mov
fldl
test
mov
add
imul
jns
cmpsl
mov
lea
clc
pop
push
pop
add
jo
stc
mov
in
aam
lret
shr
mov
insb
imul
rorb
nop
or
jmp
leave
fimull
lret
nop
sbb
lahf
iret
jl
cld
sub
jmp
subl
xchg
shll
sub
fs
jne
cli
and
rcrl
clc
inc
fs
ja
dec
mov
js,pt
cmp
jmp
stos
out
fstps
stc
xchg
in
aad
aam
cmpsl
dec
addr16
jge
xlat
enter
jmp
fldl2t
cltd
mov
mov
xchg
xchg
mov
inc
clc
mov
jns
push
or
loop
test
push
push
ss
or
adc
shll
lahf
scas
popa
sar
cmp
mov
mov
or
mov
xor
pop
divl
mov
inc
mov
cmp
sub
mov
inc
cmp
ljmp
dec
adc
rcl
shr
mov
pop
mov
imul
inc
and
or
dec
jmp
add
sahf
push
das
loope
mov
repnz
int
and
lret
sbb
sub
andb
cmp
arpl
pop
leave
jae
add
test
in
sti
push
imul
adc
jp
lds
inc
add
out
cmp
push
mov
ja
shll
jb
adc
repz
nop
lock
inc
jl
fcompl
icebp
sbb
jg
addb
negl
mov
aas
je
repnz
ror
pop
bnd
cmp
insl
into
xlat
loop
insb
je
xchg
out
xchg
mov
roll
xchg
popa
mov
enter
pop
xchg
xor
push
dec
xor
rcl
leave
jl
sbb
pushf
imul
call
mov
cwtl
cs
or
pop
daa
or
add
fidivrl
popa
mov
clc
xchg
ds
mov
daa
sti
scas
popa
inc
std
insl
cmp
pop
sbb
sbb
ficomps
mov
shl
clc
inc
inc
movsb
ds
mov
jns
es
inc
addl
rolb
xor
bound
insb
daa
and
gs
jle
mov
jp
into
fwait
mov
aaa
rclb
pop
xchg
test
xchg
push
test
stos
pop
xchg
adc
shrl
repz
in
rcrl
push
outsb
movb
add
sub
insb
cmpsl
xchg
ds
mov
addl
xlat
jge
mov
cltd
test
inc
sub
sub
int
jp
nop
jl
mov
sbb
js
shrl
icebp
fdivs
sahf
aas
mov
pusha
jno
imul
sbb
inc
jno
adc
jb
test
je
dec
jge
xor
mov
pop
rorl
pusha
hlt
pop
rol
sahf
or
pop
xchg
xchg
cmpl
xchg
pop
nop
and
fdivr
insb
xchg
xor
jle
and
lds
xchg
sarb
jl
add
shll
shrl
xchg
mov
test
sub
xor
fimull
jb
add
cmp
insb
ljmp
es
mov
xchg
js
cmpsb
mov
mov
test
xchg
pusha
lret
aaa
pop
mov
dec
das
push
jno,pt
shrl
or
fsubl
sahf
gs
outsl
and
push
sbb
repnz
jmp
ficomps
mov
aad
mov
shll
ja
stos
mov
mov
cmp
xchg
shlb
lcall
fldenv
mov
lods
push
icebp
mov
out
fcmovnb
in
mov
mov
and
pop
sub
scas
js
mov
push
mov
scas
stos
adc
jns
rolb
int3
stos
push
mov
das
movsb
lret
insb
jg
jl
imul
outsb
fdivl
jg
push
add
xchg
xchg
push
xchg
in
jecxz
aas
sbb
divl
faddl
outsl
test
xor
repz
cmp
pop
call
int
mov
jg
fistpl
xchg
push
int3
jmp
jle
xchg
pop
or
or
cmp
mov
jmp
dec
xor
xor
cmc
sbb
mov
ds
push
popa
push
mov
lcall
ret
push
jge
add
lock
mov
pop
mov
aam
cli
jmp
pop
movsl
fmul
shrl
adc
jmp
cmp
lods
loope
clc
daa
add
mov
pop
adc
scas
pop
je
pop
sub
sub
insb
aas
push
xor
mov
aam
mov
xchg
call
or
aaa
repnz
push
notb
lret
fstpt
in
into
jle
lock
dec
jg
dec
aad
pop
rcll
sub
js
sbb
lret
popa
stos
jo
andnps
xchg
jns
insl
sar
push
imul
xchg
roll
gs
jp
jmp
pushf
fxch
repz
pop
sti
andb
ret
repnz
and
cmp
inc
repz
js
fdivr
sub
push
sub
jge
aad
outsl
jge
mov
mov
call
or
pop
push
in
jmp
popf
sbb
data16
sbb
imul
rorl
jno
jle
jne
ds
enter
ss
mov
adc
push
sbb
and
mov
mov
out
aad
pop
int3
pop
hlt
lods
cmpb
aam
fadd
nop
cmp
push
sub
int3
jbe
scas
adc
fs
test
aas
out
jne
push
and
jge
xor
je
cmp
out
mov
shrl
clc
push
pushf
shl
call
cmp
lret
cmp
jnp
push
pop
sti
and
jno
mov
dec
mov
int
shrb
jo
imul
mov
push
mov
out
pop
mov
mov
mov
or
fcomp
rol
ljmp
fisubrs
dec
cmp
aas
test
std
fmuls
and
pop
les
fs
std
out
push
aad
roll
push
hlt
dec
and
pop
aad
fwait
sbb
daa
or
dec
repz
lret
inc
adcb
sub
outsb
aas
fnstsw
mov
cmp
mov
lret
mov
xor
jb
fdivl
insl
jo
inc
rcrl
or
xor
adc
push
repnz
mov
dec
fstpl
ret
pop
sahf
jge
dec
pinsrw
popl
and
mov
adc
cmp
pop
mov
mov
add
dec
cmp
pop
sti
mov
or
rorb
rcll
lock
mov
imul
fstps
pop
les
shll
test
and
je
xchg
fcmovnb
repz
imul
rorl
out
inc
fcomps
scas
shl
out
mov
xor
xchg
and
ret
imul
fisubrl
inc
sarb
data16
lret
rcll
mov
stc
mov
cmpsb
cmpsl
push
int
call
std
out
leave
xor
adc
mov
outsb
adc
hlt
xor
shrl
leave
pop
notb
sbb
icebp
cmpsb
outsl
test
lret
int3
sub
lods
cwtl
std
and
js
push
cmp
lods
pop
adcl
nop
jg
sarb
stc
jge
mov
mov
sbb
fiaddl
sub
xor
cmpsb
mov
int3
inc
pop
adc
pop
std
ret
lret
fisttpll
mov
jno,pn
mov
mov
test
cmp
mov
push
sbb
mov
into
cmp
arpl
fisttpl
int
push
pop
nop
or
ss
mov
mov
lods
mov
shrb
data16
cmp
imul
scas
shl
flds
aam
sar
into
or
cmpsb
loope
fisubrs
hlt
push
inc
pop
shll
mov
xchg
xchg
mov
fwait
jae
xlat
shll
ljmp
pop
or
inc
aaa
imul
fwait
sbb
cmp
xchg
jle
xchg
cmp
outsb
jbe
mov
into
aas
push
jmp
or
pop
xor
loopne
xor
repnz
mov
lahf
addr16
mov
adc
push
mov
out
add
mov
enter
mov
jns
movsl
ds
mov
idivb
in
push
cwtl
sbb
push
outsl
rcrl
or
fldl2t
lods
push
cs
sub
pop
add
cmpsb
movsb
xor
idiv
mov
pop
push
xchg
xchg
push
repz
shl
dec
adcb
inc
scas
mov
test
inc
stc
xor
jge
and
fsubrl
pop
popf
add
push
mov
or
adc
mov
inc
mov
jge
add
lds
xor
hlt
cmp
mov
jle
and
lahf
inc
jae
scas
cmc
dec
mov
scas
lock
inc
or
fists
pop
mov
push
pop
jb
hlt
mov
mov
cmp
inc
xchg
repz
mov
out
pop
rcrb
ret
xor
push
and
xchg
xchg
dec
outsl
lods
fs
scas
xchg
add
jns
outsl
inc
sub
cmp
fadd
inc
movsl
pop
xor
xor
bnd
dec
push
pop
pop
pusha
stc
mov
adc
push
and
pushf
mov
jmp
jns
out
sub
mov
pop
mov
mov
sbb
sbb
rorb
aad
rcl
insl
outsb
adc
loopne
jae
pop
adc
jge
into
jle
mov
jns
fcmovnbe
lods
and
stc
push
ret
adc
jl
repz
outsb
lret
test
adc
jg
out
jp
xor
jns
cs
std
cltd
mov
jle
shll
cmp
cmpsl
push
push
out
pushf
movsb
shll
aaa
pop
sarb
int
add
mov
mov
mov
jne
rcrl
inc
push
int
sbb
jge
pop
pop
aam
gs
inc
dec
pop
sbb
ss
mulb
adc
dec
push
call
in
mov
pop
sahf
ror
sbb
movsl
pop
aaa
mov
popa
inc
jecxz
ss
add
or
jo
adc
je
lahf
cmpsl
mov
fdivl
dec
in
fwait
gs
xchg
cmc
jae
out
inc
jnp
push
ret
int
enter
std
arpl
pop
lock
lahf
lret
loopne
arpl
inc
mov
mov
xchg
test
sbb
js
jl
mov
adc
out
clc
dec
loope
and
push
out
outsl
roll
cmp
push
pusha
push
call
les
fmul
das
and
icebp
fmul
fs
lods
xchg
inc
dec
sub
mov
mov
mov
or
push
mov
out
xor
mov
add
mov
shl
add
cmp
fldenv
jb
sbb
loopne
scas
push
jecxz
push
cmp
adc
movsb
pop
mov
pop
addb
mov
pop
clc
mov
or
ljmp
adc
aad
addb
popa
fcomps
sub
clc
adc
lret
xchg
push
lds
ficoms
mov
cmp
or
pop
mov
lock
jecxz
xor
enter
add
mov
fisttpl
aad
std
fnstsw
inc
iret
shl
dec
jae
sarl
dec
adc
push
dec
shrl
push
popa
and
sarl
popa
rcl
xchg
mov
je
mov
pop
push
sbb
inc
std
call
sub
popf
inc
fwait
xor
mov
rorb
mov
lock
push
repz
jg
xor
jae
cltd
jbe
pop
ss
lds
and
or
subl
mov
fcom
icebp
fstp
jmp
xor
mov
out
out
or
push
rcll
adc
pushf
lods
adc
sbb
test
call
in
lahf
cmpsl
push
sub
scas
jo
rcll
out
das
hlt
sbb
pushf
ret
push
add
mov
divl
jbe
lahf
sub
pop
mov
xchg
into
inc
enter
icebp
decb
sarl
shr
adc
rcr
popf
adc
jbe
dec
sub
mov
das
lds
xchg
rol
pop
test
mov
orl
stc
inc
cmpsl
loop
sub
aaa
adc
push
pop
or
jno
xchg
pop
push
pop
cmp
adc
bound
rcrl
test
mov
or
mov
sub
popf
sbb
push
fstl
inc
dec
adc
pop
shlb
mov
lds
out
push
push
aad
vpslld
int3
xchg
daa
mov
jne
xor
sub
rcr
rorb
pop
movsw
pop
icebp
aad
das
add
test
cwtl
mov
xchg
inc
dec
mov
fwait
lods
nop
sbb
sub
mov
stc
jnp
adc
add
xchg
rcll
shrb
xchg
dec
sbb
shlb
xchg
lods
incb
cmp
ficoms
les
xor
ja
pop
jo
sbb
adc
leave
and
hlt
sub
jne
js
sbb
mov
mov
mov
pop
xor
inc
cmp
clc
pop
cwtl
and
adc
mov
xor
scas
incl
push
inc
xor
pop
pop
xchg
cmp
faddl
lods
or
push
cmpsb
loope
lret
popw
pop
stos
mov
rcrl
mov
cmp
sbb
ja
mov
ficoml
cwtl
fsts
ljmp
xor
push
sti
adc
push
cmp
fcomps
bound
sub
in
xor
dec
dec
dec
mov
pop
jge
pop
mov
lcall
adc
jecxz
jle
inc
pop
and
int3
aad
clc
push
ljmp
mov
stos
lods
fimuls
inc
lock
pop
cmpsb
and
mov
stc
aas
pop
fsubr
adc
sbb
leave
out
lods
jmp
push
lea
roll
inc
sbb
cmp
jl
add
push
or
jle
and
ljmp
mov
lods
pop
sub
inc
test
and
test
frstor
into
test
outsl
shrb
lea
dec
cltd
out
scas
cli
stc
add
pushf
mov
xchg
repnz
stos
in
cwtl
fcompl
push
jno
push
loop
std
dec
stc
shlb
insb
jg
adc
mov
jno
add
leave
mov
xor
xor
shlb
add
roll
xor
or
or
loopne
lea
dec
jmp
daa
mov
sbb
lea
into
test
imul
add
sub
les
sbb
mov
insl
sarl
sar
outsl
xor
cmp
lahf
orl
mov
leave
dec
pop
rclb
notl
test
pushl
jo
mov
cmpsb
nop
loope
shrl
repz
rorb
daa
insl
cs
mov
mov
jae
pushf
push
push
xor
nop
cld
xchg
mov
mov
movsl
push
mov
test
fnstenv
dec
rcll
mov
ja,pt
shr
fnsave
inc
test
psubusb
mov
xor
movsb
stc
shll
outsb
out
ret
pop
dec
pop
divl
repz
pop
js
je
xchg
fcoms
xor
inc
add
ds
lret
adc
enter
or
and
das
mov
jg
int3
icebp
push
shll
mov
mov
sahf
shll
jmp
add
mov
cmp
pop
mull
xchg
mov
pop
cmp
arpl
adc
ror
mov
jae
jns
pusha
std
sbbb
mov
std
arpl
pop
lock
fdiv
repnz
fcom
movsb
sti
mov
push
add
inc
imul
and
ficoml
clc
in
mov
pushf
fidivl
lock
repz
mov
imul
loope,pn
mov
or
ror
mov
add
or
add
sub
std
cmpl
insl
sbb
mov
fisttps
push
loope
ds
sub
xor
aad
xchg
pop
repz
lahf
clc
pop
pop
jmp
mov
xor
lea
lock
fmuls
cmpsl
adcb
mov
shll
int3
mov
sub
xor
scas
cld
hlt
mov
movsb
shrb
jg
inc
inc
cmp
or
pop
mov
push
dec
inc
jne
stos
pop
and
add
clc
push
sbb
negb
imul
sbb
dec
xchg
fmuls
mov
add
cmp
lds
outsb
rcll
push
inc
push
out
ffreep
fisubs
cmpsl
popf
mov
mov
push
out
lret
mov
int
fsub
adc
popf
gs
adc
out
in
and
xor
or
stos
mov
xchg
pop
jne
lods
lock
fcompl
loopne
pop
lcall
mov
mov
cltd
xor
lea
pop
fcoms
inc
pushf
mov
std
pop
sub
mov
pop
jmp
mov
pop
sub
ucomiss
popa
mov
jnp
out
sub
jecxz
dec
in
fucomi
scas
sbb
jmp
call
aad
pop
xchg
cmp
popf
pop
mov
cmp
cmp
dec
jae
clc
xor
subb
ljmp
insb
jl
mov
xchg
fidivs
aad
xchg
jl
mov
fisubrl
lahf
xlat
cwtl
ja
pop
aas
aaa
fsts
sub
mov
xchg
shll
push
pop
push
sub
jecxz
jbe
aad
repnz
lahf
xor
sarb
cwtl
sahf
movsl
lods
and
out
or
mov
stc
mov
ljmp
adc
pop
push
rcrl
stos
subl
insl
jns
mov
cltd
dec
mov
sbb
push
popa
imul
xchg
sbb
js
cmp
mov
mov
mov
mov
stos
aaa
mov
xchg
out
pop
out
inc
push
cltd
testl
lods
mov
and
xor
ficoms
sub
jbe
or
xor
inc
roll
pushf
int
rcrb
std
adc
in
rcrl
imul
rorl
mov
repnz
insl
movsl
rclb
int3
sti
mov
roll
cwtl
imul
dec
jae
out
mov
int
out
inc
mov
cmpsl
pop
call
pop
aam
ficoml
outsl
cmp
push
jae
xor
hlt
xchg
xchg
aaa
ljmp
stc
xchg
jp
adc
loope
cmpsb
shlb
int3
cld
insl
mov
les
pop
xor
fidivrs
jge
and
shll
mov
xchg
inc
js
lods
jl
movsl
push
fcmovnu
rcl
popf
mov
stos
cmp
lds
fmulp
rorl
div
inc
enter
inc
ret
ds
pusha
push
add
clc
stos
inc
inc
stos
out
jmp
xor
cwtl
add
mov
ss
lods
mov
pop
push
jecxz,pt
out
icebp
mov
dec
mov
sarl
mov
gs
pop
ja
out
invd
mov
out
sarb
out
mov
lcall
adc
cltd
xchg
or
lret
stc
sarl
imul
iret
loop
movsl
xor
push
adc
addb
pop
fadds
sahf
xor
add
inc
cmc
jae
adc
xchg
sub
fsubs
clc
pusha
lods
imul
pushw
sahf
mov
sbb
das
aas
clc
sub
subl
add
cmp
out
cmpsl
ffreep
sub
iret
jbe
cmp
sub
mov
cmp
inc
sahf
out
and
clc
das
dec
add
lods
rolb
and
cmpsl
repnz
cmp
jbe
test
xchg
inc
fwait
dec
mov
push
insb
cmp
shlb
ret
hlt
pop
mov
inc
sub
mov
dec
cmp
inc
pop
cmp
stos
leave
cmp
outsb
cmp
andl
gs
ret
int
imul
shrl
dec
mov
pusha
fs
inc
mov
sti
shl
ljmp
lea
clc
lods
subl
into
test
call
pop
inc
aad
inc
mov
fdivrs
cmp
mov
mov
add
inc
sub
adc
jecxz
rclb
dec
mov
and
mov
arpl
rcr
shll
mov
or
into
shr
das
jge
mov
gs
fcmovb
jo
push
push
int
arpl
ljmp
dec
or
jae
xchg
popa
loop
fsubrl
fstpt
data16
mov
into
pop
sub
pop
arpl
xchg
fsubrl
hlt
pop
xchg
dec
pop
sub
pushf
pop
mov
adc
mov
mov
inc
cltd
pop
sub
adc
push
cmp
nop
adc
stos
ss
std
push
pop
pop
mov
mov
scas
push
add
dec
and
mov
pop
outsb
movsl
fnstenv
cmp
add
cld
psubusw
push
pushf
rcll
cmp
lods
shlb
ja
test
sub
dec
sahf
xchg
pause
mov
xor
pushf
jl
addr16
adc
lret
dec
sub
jge
mov
popf
push
lcall
test
jmp
out
or
test
out
mov
fdivl
in
sbb
sbb
pushf
sbbl
jge
jmp
xor
fsubrs
add
mov
incl
adc
ljmp
mov
test
int3
jne
adc
sbb
jp
jmp
pop
int3
out
jns
add
pop
sarl
push
xor
call
mov
mov
xlat
dec
rcll
es
mov
push
inc
addr16
sbb
push
ds
shll
adc
mov
sbb
inc
movsl
mov
dec
pop
xchg
mov
push
mov
sbb
cld
inc
gs
je
xchg
enter
cmc
mov
das
push
fwait
mov
sbb
gs
adc
inc
cwtl
mov
sub
lret
jge
pop
sbb
jge
rorl
cmpsb
sub
out
shll
push
aam
out
mov
sub
dec
sbb
outsb
sbb
sarl
test
mov
cld
pushf
and
lds
rcrl
push
mov
mov
es
daa
jge
xor
call
scas
or
das
insl
sti
out
mov
idivb
hlt
cwtl
push
movsb
outsl
sbb
into
or
mov
leave
push
scas
std
jge
nop
mov
outsl
mov
cmp
or
adc
sahf
dec
cmpsl
fbstp
pop
jl
mov
sarb
test
xor
outsl
mov
sbbb
insl
xchg
addr16
xor
pop
and
xchg
sub
dec
add
inc
hlt
enter
pop
inc
dec
jbe
push
jo
outsb
adc
rcrl
repz
les
dec
and
xor
add
lret
lock
aam
adc
andb
shll
out
xor
ljmp
mov
je
fnstcw
shlb
ljmp
aam
lods
bound
pop
push
shll
or
movsl
aaa
xchg
jns
or
js
xchg
mov
pop
pop
mov
stos
hlt
stos
rolb
pusha
push
movsb
and
int3
xor
mov
push
mov
loopne
jge
xor
inc
add
jne
mov
push
cltd
call
xor
rcl
jle
or
sbb
jae
rcl
fldenv
jl
dec
push
mov
push
sbb
pop
cmpl
rcll
rorb
jecxz
or
shll
repnz
add
negb
sbb
push
pop
lods
pushl
pushf
xchg
add
mov
cmp
xor
mov
and
add
sbb
mov
fistps
xchg
js
loope
cs
jl
jo
inc
int3
imul
hlt
push
daa
cmp
mov
inc
mov
xor
scas
mov
xor
cmp
pop
insl
add
push
and
xor
lahf
pop
jge
push
push
xor
rcll
mov
mov
lret
ja
add
test
xchg
rcll
ja
pop
inc
and
idiv
ret
loop
or
pushf
fistl
or
cmpsl
pushf
arpl
int3
pop
inc
into
sub
leave
jecxz
mov
xlat
out
sbb
jge
stos
dec
mov
or
fcmove
icebp
shll
sub
xchg
jno
into
out
lods
xor
push
aaa
xchg
ds
inc
loop
inc
pusha
mov
sub
and
mov
mov
in
fldt
scas
push
pop
mov
add
sbb
xor
stc
nop
xchg
std
fs
dec
mov
stos
xor
push
shll
bound
roll
psubsb
movsb
jno
fisubrl
fnstcw
jbe
and
cmp
cltd
jl
call
cwtl
add
sub
and
fstl
loopne
cwtl
pop
dec
xor
cmp
addb
repnz
movsb
and
dec
aam
scas
scas
jae
jbe
add
pop
daa
fmuls
out
daa
mov
dec
jbe
jns
sbb
aas
and
sbb
jne
rorb
sub
fst
dec
mov
pop
push
loope
cld
lea
adc
call
sub
add
lea
cmp
lahf
xor
xchg
pop
cmpsl
lock
imul
fimull
xchg
int
push
or
imul
dec
mov
ret
fdivr
jne
xor
loopne
mov
sub
sbb
adc
sbbb
pusha
push
cs
pop
cltd
inc
cmpsb
repnz
in
lret
clc
dec
movsl
loopne
mov
mov
ljmp
fimull
mov
mov
mov
xorb
dec
aam
rorl
jge
inc
out
dec
sbb
filds
mov
into
cmp
pop
mov
dec
out
ficoml
sbb
insl
push
mov
cmpsb
jmp
add
ljmp
rorb
mov
sub
add
mov
xor
enter
adc
mov
sub
mov
iret
jmp
adc
pop
xchg
pop
adc
mov
shl
paddsw
jge
mov
mov
incl
mov
jp
sahf
shll
pop
loopne
push
rol
das
add
pop
xor
addr16
int3
jae
sbb
dec
inc
jg
fcoml
outsb
movsl
imul
call
imul
jl
fisubs
js
push
jle
sbb
cli
add
mov
fcoms
fnstsw
cmc
xchg
add
and
mov
cld
and
cwtl
jg
push
scas
mov
es
cli
jo
push
ret
shr
mov
sbb
sub
mov
xchg
xchg
in
shll
stc
dec
or
lea
xor
mov
inc
jae
shl
es
aam
hlt
fsubr
into
jmp
mov
jecxz
out
dec
es
xchg
mov
test
mov
pushf
and
cmp
xlat
sbb
adc
loopne
inc
xchg
pusha
push
or
pop
push
adc
sub
pop
scas
dec
add
xor
rorl
mov
shll
xchg
mov
fdivs
rclb
xor
dec
xchg
mov
sub
ljmp
xor
es
mov
aad
lret
adc
jne
sub
and
aad
adc
aam
and
in
shll
and
ret
shrl
shrb
int
test
jmp
xorl
sub
rcr
shll
rcl
adc
sub
stos
mov
push
or
pop
cmp
shll
mov
cli
xor
ficoms
sub
inc
aad
sbb
bound
cwtl
leave
inc
nop
add
ret
pop
nop
pop
ljmp
sahf
jle
and
hlt
add
fldcw
inc
jne
out
out
add
cmpsb
mov
jge
cmp
add
sub
pop
cmp
jno
dec
outsl
cmpsb
mov
repz
rcll
sbb
stc
cli
js
push
test
adc
dec
pusha
xchg
jl
mov
test
cmp
sbbl
outsb
fbstp
inc
scas
lret
inc
jge
rorl
lcall
add
pushf
xor
daa
mov
dec
mov
dec
add
lret
or
les
dec
pop
popa
pop
adcl
scas
ret
mov
aaa
mov
inc
pop
fistpl
and
dec
pop
sub
jge
ja
rcrl
dec
lahf
sbb
pop
push
pushf
pusha
std
cli
shrl
jg
cmpsb
mov
in
sub
mov
mov
inc
jp
or
xchg
inc
insl
je
fldenv
pop
pop
mov
mov
movsl
sub
out
add
iret
inc
jns
bound
sub
mov
and
inc
std
rclb
daa
add
int3
push
scas
push
xchg
fisubl
adc
fcomip
aas
xchg
inc
loopne
xchg
adcl
hlt
shrl
sbb
cld
in
testb
mov
mov
ds
ficoml
mov
xor
adc
xorb
pop
pushf
es
ljmp
lds
popa
xchg
stc
divb
lahf
xchg
sub
out
xchg
inc
hlt
scas
push
jnp
sbb
hlt
aad
pop
pushf
or
mov
adc
popa
lahf
inc
add
pop
adc
shlb
pop
jge
rorb
scas
inc
jnp
adc
xchg
add
xor
imul
sbb
loop
cmp
jge
dec
repnz
or
push
sar
dec
pop
pusha
loop
fcoml
mov
popa
sahf
rorl
sbb
rcrb
jb
or
das
flds
pop
dec
ljmp
in
cmpsl
xchg
sbb
lods
lret
dec
lea
sbb
aad
mov
xchg
pop
mov
or
sub
stos
lahf
int
pop
outsb
mov
mov
sub
mov
inc
loop
loop
push
fstl
fists
stos
mov
je
and
dec
nop
sti
cmp
dec
jle
adc
out
mov
mov
adc
pop
cld
loop
addb
icebp
cmpsb
jge
dec
fs
out
loope
popf
push
popa
cmp
sahf
pusha
or
jmp
lcall
shl
orb
jmp
jge
push
or
lods
pop
popf
add
lcall
or
xchg
in
fdivl
push
sub
cmp
fbstp
jge
shll
inc
int3
dec
out
mov
and
inc
repnz
fisubl
add
ja
repnz
adc
jns
scas
dec
outsl
inc
dec
dec
repnz
fs
repnz
sbb
subl
inc
orb
pop
cwtl
dec
subl
sub
shll
dec
jmp
in
mov
adc
jne
shlb
xchg
repz
insb
mov
push
cmp
ret
inc
and
mov
pop
inc
bound
jb
aam
addr16
push
pop
ljmp
sbb
mov
add
push
scas
jl
ss
ss
lods
mov
xor
stos
mov
nop
sub
repz
shrl
mov
pop
cltd
test
jl
loop
scas
out
ret
insl
sbb
rcr
loopne
popf
or
sbb
dec
inc
shll
lret
dec
outsb
pop
scas
in
dec
shrb
pop
imul
jne
add
mov
adc
fdivrs
or
adc
mov
aad
and
mov
loope
pop
mov
out
push
pop
gs
cmp
lret
lds
lods
int3
jle
dec
shrb
xor
cli
adc
inc
jg
cmp
sahf
rclb
and
in
fsub
inc
and
insl
inc
inc
shr
push
imul
pop
xchg
jg
stos
cmp
mov
jno
popa
repnz
movsl
xor
lods
shll
jno
mov
fstpl
in
clc
je
lods
or
dec
enter
push
push
push
sub
cmp
cmpsl
addr16
inc
pop
mov
sub
adc
push
sbb
mov
mov
repz
jne
pop
bound
jecxz
mov
andl
jge
pusha
addl
ljmp
push
sarb
xchg
movsb
cmp
nop
lea
fwait
test
fildll
stc
test
adc
and
popf
roll
mov
pop
mov
popa
xchg
inc
int3
xchg
cmp
mov
aam
xchg
lods
adc
pop
repz
ror
pushf
jae
or
cld
adc
xor
inc
mov
sahf
adc
ds
mov
adc
inc
pop
xlat
xchg
dec
lahf
dec
adc
loop
push
jge
out
mov
mov
or
rol
sbb
mov
ret
push
adc
add
jb
imull
addr16
jb
out
lds
int3
sar
daa
jmp
sbb
stos
sub
cmp
test
insb
stc
dec
inc
cmp
mov
into
jne
cmpsb
add
addl
xchg
mov
orb
ss
adc
xchg
jmp
data16
xor
xorb
adc
loopne
ret
int3
imul
popa
inc
jae
out
push
inc
repz
push
cs
adc
inc
mov
in
mov
test
das
push
cmc
daa
inc
and
addr16
jae
jb
fsubr
mov
jp
movsl
mov
mov
inc
push
dec
sub
fcmovbe
inc
cmpsl
cmp
sar
nop
insl
in
jns
rcrb
aam
test
cmp
and
pop
enter
or
out
pop
xor
mov
sti
pop
shll
push
xchg
pop
jbe
jbe
out
mov
ja
outsb
pop
xchg
mov
push
mov
imul
shrb
shlb
std
sahf
pop
sbb
pop
je
xchg
int3
int3
push
mov
arpl
xor
pop
sbb
lds
out
adc
inc
adc
stc
pop
cmpsb
rorl
movsl
jns
pop
pushf
int3
addl
mov
jecxz
lds
pushf
daa
pop
pop
or
fcmovnb
insl
bound
fldcw
test
into
jle
lahf
repz
add
inc
cmpsl
repnz
shl
sbb
push
loopne
dec
rclb
shll
pop
out
jno
mov
inc
pop
cmp
int
pop
and
jecxz
adc
dec
nop
bnd
cli
add
fwait
cld
adc
pushf
dec
add
mov
ds
imul
add
cmc
fistps
mov
pushf
rcrl
stc
push
dec
pop
dec
je
mul
push
insb
and
aam
cmpsb
out
rcrl
push
or
mov
and
push
adc
cli
lret
stos
sahf
out
enter
scas
mov
dec
and
rcrb
mov
cld
add
sbbb
inc
xchg
ss
dec
lds
mov
imul
stc
add
jle
or
cmp
mov
rorb
call
pop
ja
iret
push
jge
lods
cmp
loop
jae
notl
rclb
push
mov
jge
xor
pop
movsb
xchg
mov
and
sbb
out
mov
adc
xor
adc
adc
cmp
mov
pop
jl
sub
pushf
out
pushf
adc
enter
out
or
push
cmp
or
adc
mov
pop
sub
and
rcll
mov
fdivs
cmp
dec
mov
add
dec
int3
sub
jne
adc
mov
push
or
pop
add
stos
pushf
in
push
leave
sbb
mov
scas
sarl
fiaddl
inc
jmp
add
push
sbb
xchg
jo
dec
dec
aam
addl
mov
jno
push
push
movb
loopne
jle
inc
out
test
repz
cwtl
mov
rcr
push
or
or
sub
lahf
mull
xor
std
inc
lock
mov
add
in
jmp
ficompl
push
daa
scas
sbb
les
push
aad
aam
psubb
jl
mov
mov
sahf
shll
mov
pop
sbb
lea
lret
cmp
sbb
call
hlt
inc
sti
inc
push
test
cmp
lea
mov
push
test
add
mov
outsb
in
or
push
adc
push
and
int
rcrb
shrl
lods
push
dec
daa
pop
orb
sbb
cmp
push
sbb
movsl
cmp
outsl
xchg
movsb
cmp
mov
fstl
ret
lret
int3
dec
out
or
mov
test
push
push
or
sbb
adcl
test
or
pop
and
mov
and
mov
fcmove
rclb
xchg
inc
lret
cmp
out
inc
xchg
inc
stos
or
adc
subl
and
sarl
std
daa
rcl
ljmp
dec
shlb
pop
rcrl
icebp
dec
xchg
and
insl
cmp
push
push
gs
test
push
push
sbb
movsb
dec
addr16
cmpsb
mov
in
call
or
xchg
pop
shrl
inc
arpl
or
test
lods
xchg
lods
mov
inc
repnz
mov
mov
std
in
inc
inc
ja
in
inc
shr
aaa
sarl
pop
jp
frstor
fwait
aaa
xchg
in
jg,pn
xchg
rol
scas
jecxz
xor
test
movsb
and
mov
jecxz
test
lods
dec
lahf
pop
lods
jns
out
rcll
clc
std
cwtl
pop
scas
aas
sarl
and
sbb
jl
push
mov
scas
pop
repnz
insb
les
adc
jmp
into
lods
mov
fucomip
repnz
lods
enter
cmp
jge,pn
add
and
xchg
add
lds
jmp
jp
cmc
sti
jge
adcb
pop
sbb
pop
mov
sub
cmp
pop
xchg
jmp
call
sahf
mov
dec
fiadds
shr
xor
jnp
adc
push
sbb
cwtl
lods
jmp
and
repz
dec
mov
sub
pop
cmp
cmp
or
jne
daa
test
sub
subb
pop
lret
into
repnz
enter
ja
rcrl
jmp
ret
xchg
daa
xchg
ja
addr16
mov
mov
mov
loope
mov
icebp
shll
into
jns
and
sub
sahf
int
inc
or
mov
lea
jb
mov
cmpsb
loope
pop
je
jl
sbb
rolb
adc
cmp
ja
paddd
outsl
xor
fists
test
and
push
daa
mov
mov
dec
push
mov
xlat
mov
mov
cmp
mov
cmp
push
lahf
hlt
scas
es
ret
dec
int3
lret
call
int3
xlat
repnz
pusha
dec
cmpsb
sub
mov
aam
pop
ja
movsl
xchg
loopne
rcr
mov
daa
mov
into
xor
daa
mov
or
mov
sbb
fcoms
daa
cmpb
out
jne
and
shll
lret
lods
aas
dec
fstl
sub
xor
std
mov
mov
jecxz
dec
jne
mov
cmpsl
add
mov
scas
out
cltd
jl
inc
add
push
jo
xchg
or
std
out
negl
cmpsl
aad
shr
iret
fisttps
pop
pop
sub
int3
adc
subb
faddl
pop
rcrl
sar
stc
sub
int
loope
mov
jp
icebp
clc
stc
out
pushl
xor
in
movsb
adc
rcl
push
pop
add
out
sub
rorb
mov
mov
test
je
sub
fcoml
scas
rcr
mov
mov
jle
test
push
lods
jge
loop
dec
out
sbb
xchg
mov
or
lahf
mov
pop
jo
and
out
ja
xchg
xchg
xchg
cmpl
and
jle
jne
addb
dec
mov
pop
jbe
and
push
mov
leave
push
sub
enter
aad
cmp
stos
in
nop
test
add
jbe
scas
hlt
pop
imul
shl
sub
pop
jp
pop
pop
gs
pop
xchg
inc
mov
ds
fcmovbe
lret
popa
jle
test
loopne
jns
movl
mov
jle
inc
push
jne
int3
pop
loope
jne
xchg
arpl
aaa
mov
mov
inc
xchg
or
imul
mov
add
test
int
insb
pop
rorl
pop
adc
adc
xchg
push
lahf
test
lcall
xchg
cmpsb
sub
push
popa
xor
push
scas
aad
mov
leave
sbb
dec
lods
fsts
sahf
inc
rclb
fnstsw
xchg
pop
test
negl
jge
inc
daa
pop
mov
popa
pop
sub
mov
inc
cmpsl
jmp
ja
and
daa
inc
ja
fisttpl
lcall
xor
rcll
cmp
xchg
test
mov
sarl
jns
insl
fcmovnb
aaa
cltd
cwtl
je
push
scas
dec
mov
cmpsb
int3
ljmp
fcoml
inc
fldl
ret
hlt
push
sti
mov
mov
aam
stos
fwait
xchg
scas
mov
lods
call
inc
lods
imul
cmp
aas
sbb
pop
incl
call
int3
stos
ret
shrb
or
pop
repnz
test
xchg
mov
cs
xor
imul
adc
repz
pop
xor
mov
cmp
mov
out
sarl
rcrl
lret
sbb
nop
insl
movsb
popf
lret
sahf
sub
movsl
popl
jg
mov
in
mov
pop
outsl
cltd
cmp
push
and
shrl
adc
in
inc
jl
xchg
adc
push
loope
jle
mov
sbb
push
out
lahf
loope
mov
sahf
roll
mov
lret
enter
shrb
fistl
add
mov
mov
lods
sub
xor
jp
out
xchg
roll
mov
repnz
inc
xchg
icebp
flds
and
lret
popa
aaa
cmp
test
mov
mov
mov
movsb
daa
test
push
jmp
mov
pop
ret
jmp
stos
pop
insb
das
imul
jns
je
xor
inc
jp
stos
fcmovu
fldcw
ja
push
mov
aaa
test
je
and
pop
in
sarl
out
test
std
int
fisubl
sub
daa
clc
xor
popa
jno
mov
mov
xchg
inc
stc
imul
mov
mov
xor
xorb
dec
cs
lahf
mov
cmpl
jl
out
fsubrs
mov
push
and
push
jne
lods
push
or
addr16
push
lahf
cmp
test
out
push
mov
mov
aad
xor
pop
into
aaa
jmp
or
jne
inc
sub
lds
mov
das
cmp
xchg
movw
push
iret
sub
sbb
add
lods
loopne
std
rcrl
repz
lea
outsl
fimull
in
nop
repnz
jnp
push
je
dec
sahf
jecxz
cmpsb
std
das
adc
and
adc
mov
dec
mov
inc
cmp
pop
xchg
in
pushf
ret
pushf
adc
daa
shlb
mov
bound
cmpsb
jne
sarl
cmpsb
mov
pop
jns
rcll
ss
stos
add
decl
mov
movsl
sub
pop
sbb
pop
xchg
popa
pop
mov
int3
pop
push
sarl
ss
int
push
jle
mov
test
adc
clc
jl
jl
mov
stc
push
mov
dec
cmpsl
cmp
ret
mov
pop
stos
pop
push
mov
add
int3
clc
push
fistpll
filds
stos
mov
jl
fsubrl
fcomps
sub
daa
jge
inc
jge
stc
loopne
jae
jmp
rorb
lret
mov
xchg
pop
jmp
mov
and
aaa
ret
cwtl
pop
jl
aas
mov
insl
push
or
inc
idiv
pushf
popa
cmc
jge
mov
out
mov
lret
jns
add
xor
mov
jb
inc
sbb
roll
sub
sub
xchg
lods
and
popw
sahf
add
sahf
cld
outsb
push
cmp
adc
pop
xchg
aaa
rcl
cmp
adc
or
mov
roll
pop
jne
lcall
gs
test
aam
add
ds
xchg
mov
push
js
shlb
sti
mov
cmp
sbb
stc
pop
add
xorl
imul
xchg
pop
enter
xor
pusha
push
mov
pop
aaa
sub
and
inc
mov
or
cmpsb
stc
jecxz
test
lahf
shll
or
sarl
xchg
mov
loop
xchg
or
pop
dec
adc
out
sub
shlb
pop
push
push
aam
dec
insl
mov
test
xchg
push
sahf
add
popa
adc
mov
jmp
pop
adc
jmp
xor
jae
inc
addr16
inc
mov
pop
lret
add
imul
stc
repnz
sahf
mov
pop
add
pop
es
jne
sbb
xor
cmp
jb
cld
xchg
mov
nop
adc
fnstenv
into
cmpsl
push
cmp
into
jg
pop
les
lret
sbb
pop
and
xchg
in
add
dec
mov
add
add
cmpsb
pop
sarl
insb
push
js
push
mov
jg
das
clc
stos
mov
test
je
mov
xchg
cmp
mov
inc
inc
sbb
pop
addr16
sub
cmpsl
outsl
add
enter
xor
cmc
cmp
mov
mov
imul
int3
and
jle
dec
sub
push
sub
popa
jl
xchg
sbb
adc
xor
stos
mov
pop
adc
inc
ret
mov
insl
cmp
jns
or
sahf
stos
jp
fiaddl
sbb
das
fisubrs
dec
loopne
shrb
pop
mov
mov
xchg
fcoms
fsubrl
nop
add
inc
pop
lret
rcll
jmp
lods
jp
rcrl
xlat
sub
popa
mov
cmpsb
adc
mov
xchg
sbb
shll
mov
inc
jmp
adc
and
rcrb
cmp
dec
push
aas
lods
mov
std
jecxz
repnz
mov
pop
mov
jge
pop
push
out
rclb
ljmp
out
aad
into
fwait
cmpsl
je
out
xor
mov
mov
jne
sbb
pop
es
addb
push
or
cs
rcll
rcr
vpor
pushf
mov
jmp
sbbl
add
popa
inc
insb
xor
lods
jl
pop
mov
scas
adc
lret
gs
dec
jmp
dec
enter
xchg
mov
stos
xchg
pop
jo
xchg
call
push
dec
addr16
push
gs
mov
jns
movsl
xor
cltd
mov
aas
add
and
outsb
rorl
mov
mov
jl
out
scas
push
mov
aaa
adc
rclb
jle
insb
lock
jg
xor
cmc
dec
mov
sub
add
shll
in
mov
adc
ljmp
sbb
sub
mov
xor
cltd
lods
es
adc
rcll
sbb
adc
mov
iret
imul
push
out
or
cld
fisubrl
call
fcmovne
cmc
bound
sub
lahf
mov
mov
cmp
dec
sti
xor
xchg
clc
es
in
out
addr16
ret
subl
jp
pop
rol
lds
add
stos
dec
insb
push
shr
repnz
or
in
out
cmpsb
mov
mov
mov
mov
pop
scas
xor
cmpsb
mov
or
or
xchg
pop
arpl
mov
shrl
mov
outsl
pop
cmp
pop
adcl
in
cltd
add
pop
pop
in
dec
pop
pop
sub
xchg
push
mov
orb
pop
rcl
fcmovnbe
stc
mov
cwtl
dec
subl
xor
fsubl
mov
cli
mov
shll
xor
xor
xor
jb
insl
insl
jle
shll
mov
aam
push
mov
insb
push
cmp
jle
and
addr16
fdivrl
mov
popf
pop
subb
push
xor
pop
adc
idivb
lahf
lret
std
sub
in
int3
lret
es
aad
sbb
daa
sub
fistps
xchg
jbe
in
xchg
aaa
add
push
push
addr16
out
movsl
scas
xchg
mov
push
add
bound
fbstp
pusha
lods
insl
orb
sarl
add
jl
imul
pop
shrl
ja
push
outsl
jge
nop
aas
arpl
or
daa
out
push
push
adc
xchg
xlat
add
pop
sbb
lods
rorb
mov
addr16
leave
lock
shrl
cmp
push
loopne
mov
dec
into
shll
je
jle
lret
mov
ror
lcall
sub
ds
jo
cs
sub
mov
fbld
cs
sti
loop
ds
rol
lock
push
xchg
jle
loope
cli
cmp
arpl
mov
jmp
xchg
rcrl
adc
inc
add
ss
roll
out
outsb
xlat
je
dec
movsl
cmp
mov
rcll
adc
fimull
sahf
xchg
movsb
add
das
pop
sbb
cmp
mov
xchg
pop
dec
jae
jg
xchg
test
mov
xor
fcmove
push
cmp
aas
shll
pop
cwtl
mov
jecxz
mov
mov
cld
vcmpps
mov
add
jb
lods
mov
xorb
or
enter
add
dec
rol
shll
push
mov
xchg
and
les
into
jmp
fwait
push
lahf
test
push
ss
dec
add
jae
cmp
pop
les
out
pop
ja
mov
in
popf
iret
adc
lds
stc
jl
pop
lods
incb
mov
out
hlt
dec
push
inc
mov
ja
pop
rcr
out
cwtl
sub
inc
icebp
push
sbb
pop
xor
or
fs
lcall
cs
jl
or
push
test
inc
sub
leave
das
sahf
mov
rcll
inc
aam
stc
test
xchg
lods
fbld
mov
xchg
mov
repnz
push
sahf
cmp
js
inc
jg
xchg
xor
dec
je
lods
sbb
mov
dec
lock
mov
mov
lods
mov
and
xlat
lock
jmp
in
or
push
mov
shll
mov
xchg
testl
das
dec
mov
sbb
or
rolb
pop
inc
cld
dec
xlat
call
into
cmp
roll
add
adcb
mov
rcrb
jbe
fcomi
or
std
sbb
mov
shr
sahf
sub
dec
xchg
mov
shl
clc
ficompl
int
sub
and
out
adc
fimuls
mov
cwtl
jno
push
pop
jl
xlat
push
sbb
fcomps
mov
pop
shrl
push
loop
dec
cmp
clc
mov
inc
and
pusha
cmp
cwtd
mov
push
das
jge
cmp
dec
xchg
push
push
mov
xchg
shll
roll
into
pushf
insl
mov
cmc
shll
lret
cmp
sub
shr
jo
dec
mov
and
pop
fsub
sbb
fwait
ret
ret
dec
lret
icebp
mov
or
loopne
into
rol
jo
push
mov
sbb
std
lret
mov
xor
fwait
pop
mov
adc
fcomps
sbb
mov
sbb
sti
rcll
out
andl
shll
popf
push
outsl
aam
orb
cld
insb
imul
ljmp
fstpt
adc
adc
mov
scas
idivb
xchg
xchg
jnp
pop
adc
xchg
pop
pop
mov
inc
nop
mov
jl
int
loopne
xor
inc
push
push
xlat
xchg
xchg
adcb
int3
adc
test
mov
jns
or
cmp
ljmp
inc
inc
adc
dec
lock
fcmovnu
ret
mov
mov
test
add
push
sub
cmp
inc
xor
jge
aam
xchg
fld
cmc
sub
add
sbb
xchg
cs
lds
mov
mov
into
jl
std
fsubl
sar
or
mov
ds
and
push
lods
insb
jp
mov
mov
stc
add
mov
push
dec
roll
jo
inc
lahf
push
xor
nop
xchg
dec
xor
repnz
loopne
shrl
xchg
pop
es
popa
jl
mov
xor
test
pop
jmp
ss
sbb
movsb
lret
inc
movsl
lcall
mov
cld
in
pop
xchg
pusha
subb
jb
dec
push
xchg
push
adc
movlps
sahf
rcrl
lahf
and
push
jmp
lods
mov
sti
push
int3
inc
xlat
insl
mov
dec
inc
in
roll
repnz
movsb
sub
dec
fnstcw
jge
cmp
into
mov
sub
sub
and
scas
cmp
mov
push
and
xchg
mov
orb
sub
mov
data16
fsts
daa
sbb
mov
mov
clc
cmp
aam
inc
in
int
push
negb
mov
movsl
mov
mov
pop
rcll
cmpsl
cmp
ja
sub
rorl
sbb
outsl
pop
pushf
sub
mov
xchg
ja
cli
mov
fcoml
inc
push
sub
cmp
rcr
xchg
data16
lcall
test
mov
ljmp
mov
jmp
call
clc
dec
stc
les
fistl
rorl
jo
rcl
xchg
mov
adc
popf
fdivr
fadds
mov
dec
aam
and
notb
sub
push
repnz
cmpsl
sahf
ror
inc
outsb
mov
jne
adc
lahf
popa
cmp
adc
mov
adc
cmp
push
ret
lret
cmpsb
std
stos
arpl
mov
push
sti
xchg
mov
pop
aaa
mov
adc
dec
sar
jecxz
pop
lods
sub
popf
or
pop
fs
add
aam
out
roll
add
and
xchg
out
pop
mov
sbb
lods
lret
mov
inc
cltd
movsl
fdivs
mov
daa
sarl
dec
hlt
mov
je
xor
jne
out
mov
lret
jbe
pop
or
into
fcmove
ljmp
sub
pop
add
mov
dec
dec
adc
jno
scas
xor
cmp
xchg
mov
push
jne
mov
lea
insb
jmp
cmp
xchg
mov
cmp
add
test
rorb
lret
int3
aad
fdivrl
enter
push
mov
cmc
test
cmpsb
decl
sub
push
call
xor
push
sbb
shl
rorb
adc
loopne
les
cmpsl
cmp
xor
mov
mov
test
jge
fisubl
jge
les
jl
mov
enter
mov
ret
mov
push
in
jb
pop
rcrl
push
push
andl
sub
sar
faddl
jg
popa
cmpb
push
sub
mov
shll
repnz
mov
int3
adc
fidivrl
and
mov
fisttps
xchg
loope
addr16
rol
lea
jmp
cmpsl
stos
daa
arpl
mov
les
mov
inc
mov
shlb
mov
sbb
rolb
flds
ficoml
xchg
rorl
push
mov
nop
ficoml
mov
ds
dec
int
sub
sbb
mov
mov
adc
call
stos
jl
movsl
decl
aam
add
inc
mov
xor
das
test
clc
inc
jb
out
dec
sub
int
ja
dec
mov
xlat
mov
rcl
inc
popl
or
cmp
cld
xor
mov
mov
inc
jp
mov
in
addl
shlb
add
and
mov
enter
or
sub
test
enter
std
pop
sar
xor
lods
fs
inc
in
in
adc
jmp
pusha
dec
xchg
loope
mov
fimull
rol
or
out
sub
repnz
stc
daa
and
js
xor
jno
mov
rcrl
cmp
out
std
inc
inc
jne
jno
sar
or
rcrl
je
aad
pusha
filds
es
enter
movsb
cmp
lods
pushf
mov
adcb
cmc
pop
push
cwtl
pushf
cmp
arpl
or
push
push
mov
test
push
cli
xchg
out
push
sarl
in
std
sub
sbb
scas
shl
out
mov
adc
xor
sub
xor
jns
hlt
sarl
add
fisubl
cmp
jno
fstps
pop
das
xchg
cmp
popa
into
mov
jl
adc
sbbb
stc
dec
call
cmpsl
aas
pop
subl
mov
xchg
cmp
mov
xor
xchg
sarl
in
cmp
repz
test
sbb
test
lods
add
rcll
mov
ja
push
push
mov
out
push
mov
popf
push
push
int
out
inc
shl
inc
out
into
add
lock
fs
pop
out
and
lahf
shr
sub
jno
mov
push
popf
into
sub
jbe
int
cmpsb
aas
into
sahf
rol
shlb
mov
mov
bound
fld
push
add
mov
mov
ret
jae
jb
xchg
insl
jo
mov
mov
adc
cmc
mov
rcrl
add
lea
cmpb
cld
outsb
gs
into
roll
aas
movsl
hlt
stc
and
jle
leave
sahf
pop
fisubrs
gs
sbb
jp
push
popf
and
dec
mov
xchg
imul
data16
test
mov
push
sar
mov
imul
ret
and
or
mov
daa
xchg
sub
adc
sub
fisttps
rorl
outsb
dec
aam
pop
in
call
daa
ja
dec
aam
inc
push
out
or
test
mov
enter
pop
sarb
fsubrl
xor
insl
out
pop
dec
stc
dec
mov
jle
push
shlb
lds
push
outsb
lret
outsb
dec
daa
mov
in
arpl
jg
adc
ja
loope
je
push
stc
enter
rclb
inc
inc
sar
fildl
clc
push
ljmp
stc
xchg
push
mov
or
cmp
push
shlb
mov
jns
add
push
mov
jge
mov
sahf
jne
lds
push
repz
or
pusha
jns
test
jp
out
xchg
sub
loop
mov
cltd
imul
mov
dec
ljmp
enter
ror
adc
daa
push
aas
push
popf
push
pop
mov
movsl
push
or
shlb
loop
je
mov
mov
mov
sbb
mov
sbbb
mov
mov
out
pop
out
push
adc
cmp
in
mov
inc
fmul
jbe
or
cmpsb
or
pop
mov
push
push
enter
scas
xchg
mov
cmp
cltd
mov
scas
mov
pop
sar
mov
ficompl
pop
rorl
arpl
decb
sub
int3
lret
cmp
jg
lods
mov
sbb
pop
jge
jne
and
pop
mulb
fdivs
in
shll
int
jl
or
int
test
sub
mov
add
add
lds
lods
mov
iret
cmp
cmp
sahf
repnz
or
insb
xchg
pop
or
pop
push
cmp
cmpsl
dec
in
popf
push
pop
mov
jl
sub
lcall
pop
enter
fisubl
cmp
cmp
ss
scas
ret
movsl
push
or
and
inc
xchg
or
shll
ds
rcrl
int
adc
stc
ret
cli
sub
cmpsl
jno
push
adc
out
mov
mov
repnz
sub
decl
push
mov
mov
sti
shl
and
stos
sahf
jnp
jle
nop
mov
sbb
pop
out
bound
jae
xchg
adc
rol
int3
inc
jp
pushfw
movsb
push
sbbb
out
jge
mov
stos
adc
je
outsl
push
sub
mov
stc
inc
lods
or
dec
sahf
xchg
mov
ljmp
fistps
sub
mov
nop
inc
test
pop
lcall
jge
test
or
int
fisttps
add
fnstsw
xor
xchg
xchg
mov
psubusb
pushf
push
aaa
decb
sarb
push
mov
ror
out
xor
inc
pop
cmp
cltd
sti
adc
mov
cmpsl
clc
test
sub
mov
dec
and
movsb
or
ljmp
int
add
pop
fistpll
lock
cmpsb
mov
pop
outsb
mov
add
dec
ret
daa
push
sarl
and
divl
cmp
mov
out
repnz
sub
mov
movb
jmp
pop
mov
pop
dec
xor
jo
rcrb
shll
push
stos
out
push
adc
mulb
sbb
pushf
lcall
je
scas
pop
das
shl
mov
outsl
mov
pop
mov
xchg
outsb
jge
sub
movsb
mov
lods
out
and
jno
int3
pop
inc
rcl
rcrl
in
mov
mov
dec
pop
dec
ljmp
cmp
sub
movsl
rolb
pop
jg
inc
cmc
jmp
dec
lock
dec
pavgw
ja
xlat
sub
mov
inc
pushl
xor
dec
adc
lahf
ret
mov
imul
sbb
shrl
adcb
ficompl
out
mov
xchg
aas
add
mov
and
mov
lcall
adc
add
inc
int
inc
rorb
rcr
jnp
les
xchg
in
into
stos
xchg
stc
repz
loop
test
mov
jbe
sub
rorl
xchg
stc
and
cld
mov
outsb
or
outsl
movsl
cmpsl
jecxz
or
and
loopne,pn
popa
pop
fwait
outsb
cmp
mov
adc
mov
pop
and
add
mov
ss
sub
sub
jecxz
push
cmp
pop
push
lods
test
mov
daa
mov
or
into
test
aas
das
sub
adc
lods
popf
aas
adc
imul
and
fnstsw
push
mov
cmp
or
lret
pop
push
pushf
ds
or
lods
orl
adc
int
pop
ds
mov
add
cmpsb
mov
test
shll
fmull
and
pop
insl
pop
fcomp
mov
out
fdivrs
adc
xor
cmpsl
insb
shl
ret
dec
and
aam
or
mov
cltd
fmuls
fwait
adc
sub
addr16
data16
and
stc
in
mov
adc
rclb
xchg
push
xor
shll
pop
mov
outsb
dec
iret
repnz
push
push
dec
jmp
aas
add
into
es
out
imul
and
or
mov
lret
ja
insb
cwtl
xchg
stc
fsubl
push
jmp
or
pop
mov
inc
xchg
call
sbb
mov
mov
cmp
add
in
rol
lods
jl
jmp
aas
jae
and
add
mov
push
cmpsl
pushf
rcrl
sbb
or
out
pop
mov
mov
adc
mov
into
pop
fs
sub
loopne
dec
and
xor
stos
pop
add
iret
loop
xor
pop
mov
mov
mov
dec
pushf
out
unpckhps
inc
xlat
mov
cltd
scas
push
test
inc
xchg
xor
mov
mov
cwtl
stos
mov
jle
xchg
imul
fadd
fisubrs
xor
jge
adc
and
inc
daa
cld
js
or
jno
stos
add
and
roll
xor
push
test
pop
xchg
insb
push
mov
les
test
mov
xchg
cmp
iret
int3
stc
add
mov
adc
cmp
cli
rcrl
cs
loop
push
sub
fldenv
or
lods
into
test
mov
xor
fstl
insl
clc
jle
add
in
jge
push
push
xor
ss
test
jns
cs
add
adcb
xor
ret
cld
sub
in
xchg
or
fsubrl
mov
aam
adc
cmpsl
xlat
fcompl
mov
xchg
stos
cmp
out
mov
push
adc
ret
shl
pushf
testl
adc
adc
or
add
inc
fmul
fcmove
pop
jge
shl
sahf
pop
lcall
leave
dec
or
roll
dec
sbb
pop
jne
and
pop
test
add
cld
dec
mov
faddl
in
hlt
push
call
or
aaa
test
rorl
mov
add
sub
addr16
xchg
adc
dec
shll
out
xor
pusha
outsb
cs
pop
imul
or
sbb
test
pop
das
dec
test
ret
ret
sub
sahf
inc
lret
mov
movsl
shlb
es
stos
push
mov
data16
inc
shll
push
mov
je
lea
popa
cmpsl
sbb
rcrb
mov
scas
push
fsubl
test
fiadds
repnz
jns
xor
and
gs
xchg
pusha
sahf
pop
push
das
out
mov
mov
aaa
test
xlat
js
push
and
pop
xor
lods
mov
lea
int
test
mov
lods
adc
push
popf
sti
jo
call
pop
out
xchg
xorl
xchg
jecxz
pop
lea
aam
daa
pop
cmpsb
push
push
clc
jge
push
bound
popa
shrb
adc
imul
mov
dec
and
jno
ret
in
sar
xor
mov
pop
cmp
mov
pop
sub
mov
xor
xchg
or
in
mov
test
xor
add
xchg
adc
popl
shl
mov
xor
or
dec
test
pop
xchg
insl
mov
pandn
xor
sahf
and
dec
sub
stos
sahf
out
inc
adcb
xor
out
and
or
mov
aas
mov
arpl
ficoms
lret
add
dec
loope
into
jo
xchg
mov
imul
xchg
add
movsb
lret
push
pop
mov
sbb
ret
inc
repz
mov
jae
inc
inc
mov
ljmp
mov
pop
std
stos
push
push
les
lods
pop
shll
aas
add
roll
xchg
gs
mov
ror
test
rcrl
aas
in
ds
popa
bound
adc
mov
and
push
shl
scas
loopne
xor
jmp
jl
shlb
cmp
int
pop
push
addr16
daa
pop
or
mov
add
and
popa
xor
or
push
bound
test
or
xchg
daa
xor
jnp
push
shl
adc
mov
pop
das
mov
jbe
xor
fiaddl
cld
stc
cmpsb
pop
inc
lock
jg
cwtl
aas
adc
cwtl
jns
pop
bound
sbb
cmp
add
out
sub
pop
mov
dec
mov
mov
cmp
cltd
ja
xchg
shr
cmp
popa
mov
jmp
dec
lds
shr
or
daa
adc
dec
daa
push
mov
sbb
xchg
xchg
mov
jp
iret
jnp
sbb
ljmp
popa
dec
dec
xchg
pop
mov
xchg
fistpl
xor
cmp
dec
das
add
xor
js
xor
lods
pop
mov
in
inc
inc
mov
adcl
jbe
adc
xor
sub
int
mov
add
xchg
shll
loope
mov
and
lock
inc
add
movsl
scas
mov
inc
xchg
pop
nop
fimull
shl
out
mul
mov
pushf
xor
pushf
push
cmp
loop
mov
int3
scas
or
inc
xor
js
mov
sbb
pop
dec
xchg
cs
dec
xchg
dec
cmp
mov
inc
inc
enter
dec
adc
shll
dec
pop
les
dec
fcmovnbe
push
clc
lods
rclb
stc
mov
lods
pop
jb
pushf
cmpsb
adc
mov
dec
jb
hlt
les
aad
pushf
rcll
xchg
incb
dec
call
jbe
std
lcall
out
mov
dec
pop
pop
add
push
inc
popa
out
inc
mov
mov
dec
roll
mov
xchg
mov
mov
or
std
rorl
sbb
and
imulb
jp
fdivrl
stos
nop
sti
call
or
sahf
and
add
dec
cwtl
jmp
stos
xchg
push
mov
and
mov
push
and
mov
lcall
sub
inc
fcmovnbe
mov
mov
stos
jecxz
or
xlat
adcb
stc
xchg
mov
xor
pop
push
or
pop
shll
xor
pop
rol
adc
sub
mov
pop
inc
rcrl
push
sbb
in
aas
add
popf
xchg
pop
cmp
mov
out
mov
sbb
outsl
mov
shrl
jo
pusha
adc
mov
cmp
popf
adc
push
add
lret
fwait
rclb
repnz
dec
dec
out
icebp
xchg
jno
shll
and
or
sub
ds
jne
mov
jae
mov
daa
fmull
rcll
int3
jge
mov
mov
xor
mov
icebp
fcomps
rorb
inc
pushf
popf
shll
or
test
pop
cmp
rcll
mov
in
popf
adc
jbe
pop
lret
xchg
pop
push
xchg
mov
faddl
pop
sahf
insl
jge
fcoml
mov
clc
mov
mov
pop
xor
pop
xchg
lea
pop
rorl
outsl
xor
test
xchg
out
mov
mov
pushf
xchg
ret
lahf
mov
cs
xor
cmp
test
mov
imul
lcall
stc
js
push
adc
std
shll
adc
out
inc
clc
cmp
push
inc
jae,pn
les
dec
mov
push
repnz
cmp
mov
and
push
sub
xchg
clc
int3
scas
stos
sbbl
add
jp
xchg
xchg
ffreep
leave
jecxz
ljmp
dec
inc
ss
sub
jg
sbb
fwait
pop
mov
test
decb
mov
and
popf
inc
stos
sbbl
loopne
sub
bound
lods
push
ljmp
jo
lds
scas
mov
cld
cmpsb
insl
out
mov
dec
pop
loopne
cmp
jl
jb
jge
stos
mov
cmp
mov
sub
sbb
push
xor
rcrb
inc
or
leave
clc
mov
and
jl
orb
pushf
pop
push
lock
mov
dec
cmpsb
xchg
daa
int
sti
into
mov
sub
mov
fdivrl
lahf
add
lods
mov
mov
push
xchg
out
imul
adc
adc
fs
fdivl
loopne
and
stos
jae
rorb
adc
popf
es
loop
jecxz
and
jp
and
jge
aas
adc
add
dec
inc
pop
gs
inc
cwtl
push
jge
mov
and
rcl
ret
mov
mov
pop
les
cmp
mov
cmpsl
rcll
sahf
int3
shrl
or
stos
sbb
shr
mov
repnz
clc
mov
int3
lret
cmpsl
mov
push
rcrb
xchg
mov
out
push
mov
scas
xor
imul
mov
shrl
int3
jb
addr16
mov
cmp
lret
orb
mov
or
movsb
fisubrl
outsb
out
call
lods
outsb
and
das
jns
xor
jae
sbb
leave
pop
mov
sub
xor
inc
jne
xchg
mov
fstps
test
out
push
iret
xchg
xlat
cmpsb
fisubs
stos
mov
xchg
mov
aas
jns
ficomps
int3
nop
daa
inc
icebp
cld
add
add
sarl
sarl
cltd
aas
fmull
sub
sarb
imul
adc
stos
pop
loop
stc
enter
mov
jae
inc
and
jmp
lret
push
lods
pusha
adc
push
rorb
subb
inc
mov
sbbl
cmpsb
sahf
loop
ds
daa
arpl
scas
sahf
shll
jge
insb
adc
pop
fiaddl
mov
or
mov
fisubs
cltd
pop
mov
gs
dec
ficompl
ljmp
lcall
lds
inc
hlt
push
cmp
mov
stos
xor
ret
gs
je
mov
jge
test
roll
les
out
jecxz
out
rol
pop
pop
loop
stc
rcrl
outsl
push
pop
js
cmp
aas
mov
jmp
adc
mov
and
out
adc
andb
pushf
pushf
pop
mov
je
fcmovnu
in
mov
std
mov
jo
lods
icebp
pop
adc
andl
xlat
mov
pop
leave
jmp
sbb
jp
inc
sub
or
jmp
lods
fcmove
xor
cmp
pop
dec
sub
mov
jge
orb
jmp
into
push
cmc
stos
cltd
mov
jbe
inc
xor
adc
and
mov
lds
pop
clc
loop
daa
cmpsl
test
inc
dec
movd
stc
mov
inc
or
xor
adc
push
popa
pop
pop
xor
in
insb
cmp
and
mov
mov
into
add
scas
repz
in
push
out
mov
sbb
inc
cmp
jle
cmp
or
lods
cmp
rol
add
or
roll
sub
xchg
cmc
int
adc
inc
or
shrb
shl
sub
mov
mov
fldenv
cmc
and
lret
pop
sub
push
pop
and
mov
dec
push
int
mov
dec
cmpsl
pop
push
and
js
les
aaa
andl
xor
jbe
test
sahf
xor
movsl
incl
or
ret
mov
daa
cmpsb
addr16
lock
leave
rcrb
lds
fdivrs
pop
out
imul
int
mov
fmul
sub
sti
xchg
int3
push
cli
inc
inc
jne
add
sti
int
or
mov
jae
aad
cmp
movsb
loop
outsl
roll
fdivs
fisttpll
inc
roll
pop
xor
jge
jecxz
inc
add
in
and
jmp
push
jg
xor
rcr
shll
lods
and
inc
rcr
xlat
sbb
xchg
pop
jne
in
push
fbld
mov
ljmp
insl
into
les
jae
sub
sbb
mov
inc
add
pusha
loopne
icebp
mov
inc
sbb
addr16
iret
mov
addr16
jge
push
loop
sar
dec
daa
je
clc
jp
rorl
inc
add
sti
insb
movsl
push
mov
pop
mov
lods
push
js
aam
adc
std
pop
mov
xchg
insl
insl
mov
inc
mov
jle
jg
dec
test
mov
jecxz
ja
imul
mov
jge
mov
sbb
xor
dec
rcrb
jl
and
std
push
xchg
mov
ljmp
hlt
bound
mov
lods
mov
xchg
jae
inc
jns
rsm
jo,pt
inc
js
jle
mov
ficoms
jae
stos
and
outsl
mov
fmull
xor
int3
fldl
les
jo
xor
xchg
sub
push
inc
or
aas
adc
pop
push
lret
xchg
subl
shr
sbb
fcoms
insb
lcall
sbbl
mov
and
sbb
scas
shll
fildll
shll
sub
nop
les
sbb
push
pop
ret
clc
pop
sub
aas
scas
aad
or
and
int
pop
clc
jmp
fisttps
pop
pop
xor
pop
cli
mov
repnz
cmp
xchg
in
mov
and
icebp
inc
sub
outsl
xchg
enter
aaa
dec
testb
xor
int3
add
ljmp
inc
stos
rcrb
in
dec
vxorps
in
jae
dec
mulb
sbb
mov
xchg
push
push
or
mov
into
pop
scas
cltd
addr16
lods
cld
popa
jp
adc
js
add
enter
jmp
lret
jae
daa
das
pop
outsl
or
shrb
and
ja
and
gs
lret
cmpw
xchg
add
fs
adc
adc
fnstenv
adc
mov
icebp
jmp
int3
inc
int
xchg
push
inc
ljmp
lret
mov
aas
inc
clc
es
or
out
shr
push
test
jge
test
fiaddl
dec
test
inc
es
xchg
insl
xlat
xor
lods
leave
sbb
mov
adc
mov
sbb
int3
imulb
adc
jg
daa
aaa
xor
cmp
enter
or
stc
out
push
mov
shl
scas
insl
sbb
lahf
xchg
dec
jne
loopne
adc
and
mov
sbb
aas
aad
mov
xchg
inc
sarl
out
ret
sub
pop
mov
pop
shrl
push
xchg
adc
jl
push
in
push
xlat
jg
xor
push
rcl
stc
push
mov
jno
loop
mov
push
stos
insl
rclb
stc
xor
fcmovnb
popl
mov
jmp
xor
mov
xchg
cmc
ss
mov
mov
sub
insl
push
pop
pop
ss
mov
jmp
jle
shll
push
loope
leave
repnz
insl
sbb
dec
cmp
cmp
sti
sahf
push
sub
mov
adc
loop
push
dec
clc
or
pop
test
xchg
dec
lret
push
add
sbb
cwtl
int3
xchg
jge
fbstp
repnz
pop
hlt
arpl
gs
dec
xor
shlb
rorl
sub
out
int3
data16
ds
cld
sbb
xchg
ret
mov
pop
int3
jl
lahf
push
mov
sbb
adc
mov
aad
xor
pop
adc
leave
sub
movsb
xor
and
mov
test
fisubl
out
mov
push
std
inc
gs
xor
insl
repnz
test
ret
mov
ret
sbb
mov
stc
jae
push
mov
mov
mov
mov
and
rclb
lret
xchg
notb
cmpsb
repz
xchg
inc
scas
jo
xchg
push
xchg
pop
and
add
inc
push
xchg
dec
adc
cwtl
data16
xlat
and
fadds
pop
imul
inc
movl
inc
cmp
jnp
rcrl
lret
aas
mov
xlat
ds
jecxz
ds
pop
stos
int
mov
sbb
shll
adc
rol
dec
push
stos
pop
aas
daa
call
mov
or
cmp
jmp
leave
push
cli
sbb
sub
xchg
int3
enter
push
outsl
jne
xchg
lret
and
rol
cmc
fadd
jmp
mov
dec
pop
cmp
stc
insl
xchg
mov
mov
sub
andl
mov
jmp
sahf
out
test
xor
jbe
std
or
mov
repnz
sub
je
mov
sub
es
rol
adc
dec
sarl
cmp
and
imul
cmpb
xchg
adc
bound
jg
jbe
jmp
mov
cwtl
shll
ds
dec
stos
mov
mov
shl
xchg
adc
aas
lcall
repnz
test
rcrl
mov
hlt
stos
in
movsb
add
add
mov
loop
call
sbb
xchg
mov
mov
jge
mov
shr
or
push
into
push
dec
sub
sub
adc
add
cmpsb
in
xchg
shl
sub
mov
cmpb
aas
push
sbb
adc
xchg
out
sbb
test
rcr
mov
inc
pop
xbegin
xor
rolb
pop
add
jae
imul
lods
enter
cmp
mov
into
sub
cmp
sbb
and
clc
dec
lahf
fsubrl
cs
or
movsb
clc
stos
inc
adc
jge
test
nop
adc
xchg
rclb
pushf
pushf
mov
sbb
imul
popf
adc
mov
cmp
lahf
jecxz
mov
cmpsl
cltd
icebp
fildl
mov
sbb
cmp
pop
sar
inc
aad
or
ficoml
mov
or
nop
clc
ljmp
cmpsl
lcall
push
into
dec
ror
and
adc
and
mov
mov
add
test
mov
rcll
cltd
enter
mov
popf
pop
push
roll
xchg
sbb
cmpsb
stc
pop
mov
pop
loop
xor
inc
and
or
popf
push
or
mov
cld
jge
stos
ret
aas
negb
dec
aam
and
lock
and
sbb
fisubrl
addb
push
shlb
cltd
jnp
mov
mov
sar
test
js
adc
subb
jg
inc
mov
dec
xor
pop
insb
dec
push
jle
xchg
push
sbb
pop
into
sub
in
xchg
mov
out
popa
pop
rcll
and
lds
cmpsl
or
nop
or
outsb
sbb
int3
addr16
fwait
insl
lods
aas
pop
sbb
add
xchg
push
fs
or
stos
add
sti
popf
test
movl
shll
cmp
push
sub
adc
xchg
out
daa
out
aas
outsb
fsubrl
xchg
push
rclb
outsl
ds
shl
inc
fists
into
inc
mov
pop
fcomps
popa
ljmp
lods
daa
int
fstpl
jmp
push
and
clc
sbb
add
in
int
in
test
pop
pop
fsubrs
sub
cs
inc
jno
xchg
into
out
repz
cmp
add
rcrl
js
fwait
pusha
add
push
scas
popa
adc
ljmp
sahf
lock
jmp
jae
mov
add
dec
push
in
sub
dec
in
daa
sarb
dec
mov
sub
mov
fdivrs
pop
into
fnstenv
shrl
js
lods
push
sbb
out
mov
out
lret
jnp
push
cmpsb
addb
xor
lods
into
lret
xor
mov
insl
fsts
lds
flds
or
pop
pop
sub
pusha
ds
jne
cmpsl
push
into
rcl
and
std
dec
jo
mov
push
mov
call
jg
stos
or
jns
stc
mov
and
or
out
xchg
and
pop
repnz
xor
inc
mov
fldl
mov
xor
jg
ret
xchg
pop
int3
pushf
jbe
xor
and
aad
shll
aad
lds
sbb
adc
mov
loop
adc
jnp
clc
orl
inc
jmp
inc
ret
cmp
sbb
lcall
daa
test
dec
pop
dec
into
daa
mov
lret
inc
aam
inc
sbb
sahf
aam
xchg
shlb
cmp
in
idiv
jge
adc
test
sahf
loop
sub
xchg
jle
jo
dec
mov
in
inc
imul
leave
aad
sbb
repnz
jecxz
lods
out
roll
repnz
sbbl
xchg
clc
ds
in
shll
pusha
mov
pop
pop
lds
and
push
xchg
jl
dec
ror
add
xchg
js
xor
sub
adc
fsubs
sahf
sbb
pushf
inc
flds
push
and
push
mov
add
ss
ror
insb
daa
cli
das
sub
mov
fstpt
push
lods
gs
jmp
adc
mov
push
cmpb
fiaddl
mov
insl
sbb
push
jno
fmull
cmpsl
sbb
sbb
stos
ret
mov
lcall
popl
punpckhdq
xchg
push
cs
test
and
arpl
repnz
gs
call
mov
xor
jecxz
push
pop
push
cmp
aas
mov
pop
nop
movsb
popf
int3
cmp
fwait
xorl
mov
test
inc
mov
insl
movsb
push
mov
movsb
add
rcll
mov
mov
shl
inc
sbb
mov
lods
push
cmpsb
lret
pushl
fmuls
movb
mov
scas
cmc
dec
xchg
in
and
pop
rcrl
dec
adc
push
rorb
sbb
out
adc
sub
fsubl
pop
push
pop
int
jae
leave
and
and
jg
outsb
inc
ficoms
pop
sub
jl
pop
popf
inc
nop
imul
adc
int3
ret
stos
mov
repz
mov
xchg
ret
dec
rcll
cmpsb
je
cltd
push
dec
dec
shl
mov
popa
fdivrs
stc
ret
fcmovbe
xor
cli
rcrl
stos
rol
daa
movsl
adc
push
pop
mov
dec
sarl
je
xor
inc
add
fstpl
int
dec
pop
xchg
lea
fs
or
loopne
lret
mov
dec
pop
addr16
adc
jno
cli
sahf
inc
insb
shrl
sbb
cs
rcll
cwtl
shll
popa
std
int3
dec
fwait
sbb
mov
nop
dec
popf
shrl
pop
lret
ljmp
xchg
mov
pcmpeqb
and
in
shrl
or
pop
jp
jo
or
push
cmp
imul
movsl
push
scas
stos
es
stc
and
dec
fistpl
push
xor
out
mov
dec
outsl
push
jge
ficompl
inc
pusha
mov
out
and
out
lret
cs
insb
jl
xorb
stc
aam
in
cmp
clc
fistpll
scas
cmp
cmp
mov
pop
lcall
int
push
aam
sub
mov
mov
xor
roll
shl
into
sbb
mov
imul
cmp
mov
fmuls
cld
daa
into
dec
out
dec
in
mov
adc
stc
inc
dec
mov
movsb
ds
jns
sub
repz
aad
data16
sahf
int3
xor
xor
and
jl
cmpsb
es
jmp
adc
rorb
fiadds
jo
dec
es
cmp
sub
lret
pop
hlt
roll
inc
xchg
lock
test
mov
ljmp
pop
cmp
dec
sub
test
sbb
rcr
mov
dec
decb
mov
addl
insl
aaa
adc
lods
sub
cmp
mov
setg
pushf
roll
jne
dec
sbb
pop
push
push
cmpsl
clc
fs
and
scas
repnz
pop
clc
xchg
mov
stc
scas
ljmp
or
mov
sub
pushl
push
xor
lea
sbb
ds
or
aas
scas
or
in
inc
ja
inc
inc
inc
je
ljmp
sbb
pop
dec
je
outsb
es
mov
inc
mov
adc
push
fdivrs
loope
jp
leave
roll
xchg
cmp
je
out
fwait
push
inc
in
int
xor
xchg
sar
xchg
or
and
shr
xchg
fnsave
add
dec
mov
push
jp
jge
cmp
int
ret
cs
jno
add
jo
hlt
dec
lods
fs
dec
cld
loope
mov
push
shlb
jns
push
fdivrl
or
pushf
pop
mov
ds
xor
ja
sbb
test
ficomps
stc
xor
jae
dec
fcmovbe
fisubl
stos
xlat
out
and
adc
insb
popf
fistpl
mov
sub
into
insl
lods
mov
ja
push
or
in
cmpsb
ds
cmp
ret
pushf
outsb
mov
mov
dec
lock
push
inc
cmpsl
sahf
jno
add
outsb
adc
lret
insb
sub
pop
aaa
pcmpgtb
frstor
aas
sbb
int3
xchg
jecxz
mov
shll
sbb
sbb
sub
lock
pop
shrl
pop
cmp
aaa
adc
stc
jne
or
mov
dec
mov
pop
mov
jle
sbb
cli
shll
adc
int3
xor
jl
sar
cmp
les
jmp
outsb
xor
loope
pushf
adc
xorb
dec
cmp
mov
jae
mov
enter
push
adc
dec
repz
scas
sbb
stos
shlb
or
fistps
orb
pcmpgtd
inc
mov
sub
cld
lods
inc
sub
das
int3
movsl
sarb
xor
imul
push
fsubrl
mov
mov
mov
xlat
and
xor
jmp
adc
sbb
inc
aad
out
xchg
insb
inc
cltd
ficoml
xchg
jg
out
stc
add
pop
jl
mov
pushf
mov
outsl
pop
insl
leave
mov
aad
xchg
addr16
xchg
and
into
shlb
loopne
and
insl
pop
pop
bound
insb
pop
lea
repz
pop
test
enter
lods
cli
in
inc
aad
cltd
sbbl
jne
mov
lods
pop
and
inc
lahf
dec
push
lock
inc
mov
jecxz
inc
jae
leave
push
inc
pop
arpl
dec
push
pop
dec
outsb
mov
jecxz
push
mov
mov
nop
ffree
addr16
jb
mov
push
insl
sub
shll
inc
pop
fstpl
and
lret
cmp
cmc
mov
nop
adc
jb,pn
pop
jmp
cmp
fldcw
push
sub
inc
cmp
mov
je
and
jle
pop
stc
shl
jp
sub
inc
jae
aad
lahf
jnp
bound
hlt
lahf
stos
push
jmp
sbb
xor
mov
pop
pop
sub
adc
fiadds
out
popl
popf
mov
loope
xor
int
xor
mov
inc
pop
movsb
fpatan
fcomps
stos
hlt
jno
pop
and
xchg
sahf
add
mov
cmp
inc
push
cmp
popf
push
jbe
in
jmp
jl
or
or
es
testb
push
and
mull
xchg
fdivrl
pop
adc
test
jle
inc
in
mov
push
rcr
scas
or
xor
mov
daa
leave
sub
xor
loope
repnz
add
out
loop
and
add
ja
xchg
inc
add
gs
int3
and
repz
roll
divb
int
lret
inc
jae
inc
mov
dec
and
lcall
pop
or
stc
fnstsw
mov
adc
cmp
lods
pop
lds
test
movsb
pop
add
ret
sbb
add
mov
fisubs
jb
out
int3
ret
call
adc
rcll
mov
sbb
popa
xchg
in
inc
ljmp
adc
addl
rorl
mov
sub
sahf
push
shrl
ret
dec
add
das
nop
dec
int3
in
iret
inc
jle
jecxz
popf
mov
in
cmp
stos
inc
sub
fucomi
mov
xor
pop
int3
add
mov
mov
iret
lds
insl
sub
mov
or
xor
pop
es
repnz
aaa
insl
sbb
cwtl
jecxz
or
pushf
pop
fdivs
icebp
fmul
daa
pop
inc
lods
lcall
aas
mov
insl
sub
ds
push
fidivl
es
clc
cld
add
in
push
inc
mov
sbb
rolb
jno
lock
or
cmp
mov
nop
pop
jl
xor
sarl
xor
push
xor
in
shll
mov
movl
enter
xlat
pop
je
imul
sahf
rolb
int
mov
mov
loopne
mov
sub
dec
mov
pop
xchg
mov
mov
repnz
shl
insb
or
repz
fadds
movsb
call
shll
stos
pop
mov
pop
jg
or
lock
inc
pushf
les
cmpsl
and
aad
ret
iret
stc
xor
pop
dec
call
fisttps
pop
jle
shrb
mov
pushf
iret
and
data16
movsb
lds
pop
xchg
lea
cmovp
fistpll
push
mov
mov
inc
aam
test
nop
jl
push
xor
shll
insl
test
dec
mov
mov
cmp
sub
es
dec
dec
mov
rorl
push
xor
mov
sar
fmull
in
add
mov
or
enter
lahf
fisttpll
roll
int
mov
lock
aam
jmp
add
loopne
inc
ljmp
push
ficomps
jecxz
insl
or
in
or
scas
stc
and
jle
loop
add
adc
shll
daa
adc
jne
fsts
xchg
movsl
adc
fcmovnbe
sarl
std
and
int3
paddusw
cs
std
sub
rcl
mov
les
les
jmp
mov
pushf
dec
inc
xchg
mov
fstpl
outsl
jnp
pop
addr16
adc
sarb
jo
inc
push
aam
sub
lcall
shll
dec
jge
mov
stc
aad
jl
xor
cmp
mov
repz
xchg
mov
mov
xchg
mov
fdivr
out
pop
pop
sbb
shrl
sub
mov
les
rclb
inc
mov
adc
daa
jb
inc
and
dec
or
xchg
jge
mov
or
sbb
dec
mov
add
inc
enter
cmp
stos
add
pop
cs
pop
push
pop
roll
xchg
jg
es
add
outsb
test
sbb
jae
repnz
aad
mov
dec
dec
loopne
repz
mov
enter
adc
mov
cltd
xchg
scas
inc
jge
sbb
mov
sbb
stos
sbb
mov
loope
lock
movsl
mov
jns
jle
into
cltd
test
incl
mov
fmul
add
jge
sub
mov
adc
inc
jle
fcompl
repz
int3
dec
insl
lods
or
in
mov
mov
pop
mov
iret
shll
pop
or
stos
popa
inc
imul
cld
mov
cld
mov
ds
adc
add
sub
mov
hlt
ljmp
loop
add
cmp
aas
mov
repnz
jmp
mov
movsb
xchg
repz
jb
stos
jb
pushf
pop
popf
jae
mov
jb
cli
mov
jg
lahf
cmc
popl
push
jecxz
xchg
cmc
mov
adc
out
jnp
mov
adc
jne
ficoml
add
mov
shl
push
popa
sar
pop
mov
mov
rcrl
popf
stos
cmpsb
stc
add
push
push
aaa
rcll
jbe
lcall
inc
mov
inc
mov
dec
out
or
fbstp
mov
lret
jmp
hlt
scas
nop
aad
xchg
cli
sub
mov
pop
es
stos
lea
lcall
test
dec
mov
fwait
iret
and
push
ljmp
cmp
lods
shl
jmp
pop
fmuls
sbb
divl
xchg
mov
out
orl
sub
stos
push
out
push
sbb
sahf
lods
fnstenv
lods
in
dec
divl
hlt
pop
addr16
jle
xchg
pop
pop
push
xchg
or
scas
rolb
popf
repz
sub
andb
mov
pop
popa
fcmovu
in
and
add
or
lods
in
mov
xchg
adc
scas
inc
push
add
addr16
xor
stos
dec
icebp
jge
scas
cld
xor
daa
hlt
xor
in
inc
lahf
rol
mov
mov
push
frstor
ror
fs
call
mov
sbb
fs
mov
push
rorl
mov
xor
inc
pop
mov
jno
mov
or
imul
mov
xchg
loope
pushf
or
movsb
cmc
pop
jae
sbbl
lods
mov
xchg
lcall
jnp
loopne
ret
mov
cs
push
jae
into
fisubs
xchg
test
jge
jl
mov
xchg
xchg
dec
xchg
in
ja
sbb
lahf
sub
pop
fisubs
mov
inc
sbb
or
ffreep
andps
decl
pop
mov
aas
movsl
xlat
mov
jae
out
xor
imul
mov
enter
addr16
ja
jne
hlt
pop
call
mov
aas
sti
xor
loope
clc
push
xor
call
pop
push
cmc
xchg
incl
emms
rcrl
sub
scas
rcrb
inc
outsl
outsb
int3
ljmp
mov
lret
mov
mov
and
inc
rcrl
shl
in
jne
test
movsb
pop
int
stc
inc
inc
int
jne
sbb
inc
adcb
mov
out
xor
inc
jae
stos
in
ret
xor
dec
inc
out
call
inc
arpl
int3
outsb
ret
int
xchg
pusha
xchg
push
mov
mov
stc
dec
cwtl
jno
outsl
mov
and
jge
repnz
sbb
inc
push
rcr
mov
sbbb
out
inc
pop
sub
fstps
dec
repnz
adc
adc
add
lcall
jl
mov
dec
mov
cmp
mov
or
fldt
out
test
or
popa
lods
and
push
sahf
cmp
add
mov
fdiv
rcrl
mov
mov
xor
cmc
dec
pop
xchg
and
sarb
cmp
lcall
mov
aad
inc
movsl
pushf
inc
repz
aam
pop
fcomp
push
or
pushf
mov
clc
mov
in
or
cmp
xlat
add
bound
xor
mov
lods
movsb
cmpsb
lret
push
pop
fcmovnb
fwait
das
sbb
cmp
daa
imul
lret
cmp
sub
pushf
and
mov
cmp
sarl
mov
xor
imul
ljmp
dec
mov
and
inc
fimull
pusha
ds
negl
dec
cmp
xor
pop
test
mov
repz
subb
dec
cmp
xlat
out
movsl
cmpsl
and
jmp
mov
lods
sbbb
enter
ret
fwait
insb
ja
jno
stos
jge
push
push
sub
aad
stos
test
loope
mov
push
xor
sbb
in
addr16
fldcw
sbb
cwtl
aas
mov
int
inc
push
andl
call
cmp
xchg
cld
clc
push
std
fmull
rcll
aas
gs
cmp
test
or
mov
jae
mov
and
jbe
adc
cmp
or
stc
out
jns
movsl
fcom
nop
xchg
mov
mov
std
jge
pusha
jns
and
pusha
hlt
adc
cltd
enter
xchg
fsubrl
shrb
cmpsl
out
jmp
rorl
test
push
int
scas
mov
shrl
repz
stc
pushf
jge
roll
je
dec
jmp
push
dec
aad
xor
cwtl
je
push
inc
popa
aaa
lret
or
inc
loope
nop
cltd
loopne
mov
push
scas
sub
or
inc
movsb
jg
int
leave
or
pushf
mov
shll
add
mov
or
rcrl
mov
sub
es
call
movsb
jne
mov
xchg
in
jnp
cmp
fdivrl
repnz
and
add
jecxz
inc
sub
jns
imul
pop
sbb
mov
fwait
pop
test
pop
ret
pop
sub
shll
jmp
cmp
pop
pop
shl
stc
lea
xor
jbe
jg
les
insl
test
stos
insl
shll
out
aam
ljmp
loopne
enter
std
rep
jge
clc
and
repz
sub
int
push
sarl
mov
lret
out
or
sub
hlt
dec
push
test
sbb
stc
rcll
push
in
ljmp
mov
insl
ja
jecxz
aas
xlat
pop
pop
pop
daa
mov
les
popf
jo
jl
pop
rorl
aam
mov
cmp
repz
sbb
aam
insl
mov
xchg
adc
cltd
push
jmp
mov
nop
pop
call
in
fidivrl
addr16
pop
ret
mov
mov
rcll
or
sahf
sbb
lcall
add
jp
sub
xchg
movsl
stos
or
enter
leave
mov
addr16
sar
dec
inc
xchg
testb
pop
insl
fadds
mov
adc
cmp
cmp
mov
mov
jae
movsb
push
mov
cli
or
dec
loope
jo
test
std
push
cmc
test
add
xchg
mov
pop
sbb
insl
cmpsl
fstpt
clc
push
inc
push
pusha
pop
aam
ds
jmp
sahf
sti
mov
cmp
addb
pop
shl
and
push
call
adc
roll
pop
dec
xchg
pop
mov
mov
push
lcall
mov
or
dec
int3
or
push
pop
rcrl
mov
push
xchg
mov
sahf
mov
les
push
or
test
sub
mov
stc
jecxz
lahf
dec
add
xchg
popf
loopne
popf
das
mov
addr16
ljmp
fisubrl
pushf
push
add
mov
pop
lds
mov
inc
stc
aam
fldenv
mov
push
cmc
mov
clc
or
ljmp
jmp
les
insl
pop
repz
out
ljmp
pop
mov
stos
cmp
lret
adc
and
lea
pop
pop
lahf
out
loope
or
inc
mov
test
pop
xchg
adc
xchg
add
dec
lods
cmpsb
je
fsubl
stc
push
out
mov
lods
test
push
outsl
stos
clc
rcl
mov
push
imul
daa
mov
lret
push
mov
jp
inc
rcll
lods
inc
pop
add
jns
imul
mov
out
mov
mov
mov
shll
pop
pop
lcall
xor
das
mov
pop
mov
inc
cmp
pop
sti
shll
cwtl
mov
inc
cmpsl
mov
inc
sti
xchg
jae
sti
rolb
addr16
cmp
pop
test
mov
dec
xchg
lahf
fsubs
mov
push
je
jo
jno
pop
subb
xchg
jg
cmp
xchg
iret
scas
aad
pop
jns
inc
fwait
pop
mov
lahf
pop
out
push
jo
mov
scas
aam
int
or
sub
mov
es
sar
fsubrl
insl
dec
jmp
push
inc
faddp
and
stos
dec
fsubp
std
stos
pushf
jmp
cmp
aas
cmp
adc
adc
fiadds
and
idivb
cmp
stos
sbb
dec
xlat
dec
and
or
imul
push
add
outsb
inc
dec
sbb
add
std
pop
ds
fisubrs
inc
repnz
stos
pop
cmp
loop
outsb
cmp
fnstsw
inc
pop
jmp
or
popf
cli
rcll
push
adc
cmp
ja
jl
mov
enter
pop
adc
pop
shll
inc
add
imul
stos
adc
cmpsl
sbb
ror
mov
sbb
popa
and
mov
pop
jno
mov
sub
popf
testl
nop
mov
ret
cmc
jmp
ljmp
into
shl
idivb
mov
pop
jg
and
int
sub
aaa
push
jae
xor
adc
jno
icebp
ljmp
or
orb
pop
stc
iret
inc
out
cmpl
shll
add
or
or
punpcklwd
sub
inc
into
jl
shr
addr16
repnz
imul
lea
nop
mov
and
jnp
jecxz
jne
inc
fstpl
mov
sti
rorb
popf
in
data16
and
push
mov
bound
lahf
out
lret
icebp
sahf
xlat
shll
lods
adc
ljmp
mov
add
pop
test
adc
aas
fistps
and
incb
xchg
mov
fwait
mov
or
rcll
repz
cld
xor
cmpsl
add
repz
sbb
test
scas
sbb
pop
sarl
jmp
xor
push
fnstenv
sar
jbe
imul
xor
jmp
or
daa
aad
add
out
insb
cltd
mov
jne
scas
xchg
imul
fsubs
sub
jns
cmpsb
adc
mov
jne
rclb
stc
push
sub
stos
mov
mov
rcll
sbb
mov
loop
mov
lods
jno
je
or
xchg
cmp
and
lock
jbe
dec
lds
enter
shrb
lcall
pop
and
lods
pop
iret
adc
mov
rolb
in
mov
dec
xor
mov
cmc
mov
mov
push
fsubl
push
sarl
pop
mov
mov
sub
sub
es
sub
cld
or
dec
aas
and
loopne
push
cli
lret
cmp
repz
int
loop
push
clc
pop
mov
pop
ret
jns
pop
mov
sbb
movsb
daa
test
sbb
ljmp
shr
sub
and
pop
shl
adc
imul
jecxz
repz
rcrl
fimull
mov
rclb
mov
mov
push
push
jl
das
scas
in
rorb
dec
mov
pusha
into
jne
lds
mov
rcl
or
mov
lods
ret
mov
enter
xchg
cld
dec
imul
loopne
shrb
cmp
sarl
sbbb
ja
xor
mov
cld
xchg
into
in
mov
test
and
mov
test
repz
idivl
es
and
cmpsb
lea
push
incb
rcl
pop
fwait
aam
sbb
fs
loop
aad
mov
lret
out
sbb
stos
ret
xor
movsl
stos
pusha
sbb
fxch
cmp
jmp
xchg
push
mov
bound
fadd
fidivrs
pop
fadd
sub
psllq
cmp
rcr
pop
sbbl
fcmovb
into
daa
xchg
dec
jmp
lock
sbb
movsb
xchg
fcmovnu
sub
adc
fsts
insb
sub
jmp
in
jo
push
xor
adc
sbb
clc
lret
xchg
mov
cmp
push
call
or
and
mov
or
mov
jge
push
ds
xlat
outsb
cs
ljmp
mov
test
mov
adc
popf
jne
enter
mov
rorl
mov
mov
mov
ds
mov
addl
ret
lea
lods
je
add
call
fcomps
jns
add
mov
lahf
and
xchg
mov
lods
in
aam
roll
fidivrl
add
push
pushf
stc
add
iret
fstps
cmc
sar
pop
mov
ficomps
cwtl
imul
pop
aas
lods
cld
lods
cmpsb
negb
std
push
pop
push
mov
movq
adc
push
mov
imul
inc
jge
outsb
mov
and
popf
shll
or
in
add
xor
push
in
pop
fwait
ds
add
pop
sub
fstps
testb
fisttpl
lret
mov
aam
sbb
inc
movsb
movsl
repz
pop
rcrl
adc
jl
test
std
out
mov
ficomps
sahf
jns
dec
out
push
sarl
add
dec
in
fstps
pop
adc
pop
cld
into
mov
push
dec
outsb
shll
in
call
or
mov
out
push
jne
and
ja
mov
stos
ds
dec
ljmp
sub
inc
repz
push
xor
xchg
add
cmpsl
dec
or
aaa
fstpt
clc
aaa
addl
ja
or
xchg
and
fbstp
lods
pop
popa
movsl
daa
popa
pushf
mov
ffree
inc
mov
sub
sbb
mov
cmpsb
pop
pop
andb
mov
lcall
and
ror
sub
adc
shrl
push
inc
insl
aam
adc
pop
xor
cli
ret
jmp
mov
mov
pop
fisubs
pushf
dec
xor
dec
pop
stc
inc
imul
or
out
test
adc
shll
mov
mov
jno
test
clc
dec
cmpsb
mov
xor
mov
sub
xchg
addr16
rcll
fistpll
mov
mov
in
call
enter
daa
add
bound
xor
pop
adc
lcall
shll
push
je
adc
dec
xor
xchg
rcr
cmp
inc
aam
pop
xchg
stc
mov
adc
jl
in
das
lret
lret
sarl
sub
scas
push
mov
fwait
push
out
lret
push
mov
pushf
lret
pop
int
and
pop
stos
in
cmp
adc
push
aad
orl
xlat
push
rcrl
dec
sub
sbb
jge
mov
imul
je
sahf
mov
clc
and
mov
sub
fidivrs
lds
xchg
shrl
ljmp
imul
lahf
jo
dec
daa
in
inc
push
scas
enter
xchg
out
bnd
push
cmp
mov
jbe
loop
fwait
das
mov
jg
adc
sub
ficomps
lcall
sub
adc
sbb
adc
and
xchg
pushf
jnp
mov
cmp
lahf
mov
jnp
aad
mov
push
fucom
lret
dec
mov
int3
icebp
jno
dec
mov
pop
out
inc
or
in
cmp
mov
orb
sar
pop
jb
test
xor
stc
inc
xchg
adc
inc
cmp
dec
ljmp
roll
xor
pop
lcall
pop
out
cmp
mov
xchg
cld
adc
sar
add
test
imul
out
mov
out
jnp
cmp
push
pop
inc
stc
xchg
imul
sti
out
movsl
mov
xchg
inc
inc
inc
adc
shll
test
push
lret
fsubs
mov
jo
test
int
ret
insl
jmp
lret
sub
mov
mov
and
fcmovu
fmull
stos
shrl
mov
call
mov
das
pop
mov
dec
insl
pop
pop
pushf
stc
shll
into
cmp
enter
mov
xor
hlt
cmp
fs
in
mov
pushf
dec
mov
loop
shll
mov
pusha
push
pop
pop
push
loop
sbb
cs
push
imull
mov
repnz
je
pop
scas
xchg
outsl
jg
dec
lahf
mov
lret
xchg
rclb
lret
insb
mov
xchg
xor
adc
lahf
jge
in
imul
push
ret
mov
lods
fwait
out
dec
ret
xchg
sub
mov
adc
push
shll
adc
push
fstpl
popa
das
insl
cmp
dec
rcrb
icebp
dec
cltd
or
int3
jno
aam
mov
fsubrs
xor
mov
lods
cmp
mov
outsl
xchg
loopne
vpsubw
jns
xor
rorb
push
mov
push
nop
sub
pop
jne
xchg
xlat
push
xchg
xchg
sub
rolb
pop
clc
inc
xchg
dec
mov
dec
jmp
nop
cmp
add
and
int
xchg
add
push
cmp
adc
ds
mov
rep
lods
inc
xor
out
fistpll
add
pop
ror
subl
clc
les
sub
mov
das
fsubs
pusha
add
mov
mov
int3
lahf
push
jge
jne
add
xchg
lret
lods
icebp
sbb
ror
mov
cmp
xchg
push
je
sahf
loopne
sar
mov
je
outsl
push
int
or
adc
popa
cmp
push
mov
cmp
int
jg
bsr
mov
add
and
bound
pop
pushl
cmp
xor
sub
movsb
push
or
repz
dec
into
outsl
fnstsw
xor
jecxz
pop
cmpsb
xchg
outsl
dec
aad
push
in
mull
lret
and
jae
into
lods
jecxz
test
ja
push
loopne
xchg
popa
sahf
push
lret
push
xor
sbb
imul
push
int3
sahf
or
mov
add
sbb
cmp
or
dec
repz
cltd
adc
enter
xchg
sbb
and
scas
in
aam
jle
pop
das
incl
push
mov
movl
adc
sbb
mov
mov
xchg
push
sbb
movsl
xchg
shlb
rcll
pushf
pop
adc
ret
mov
or
pop
shl
out
call
fwait
rclb
arpl
orl
mov
adc
into
or
pusha
shll
dec
xor
pop
dec
xchg
xchg
mov
mov
repnz
lock
mov
movsb
addr16
enter
mov
mov
pop
push
sarl
ja
cmp
mov
addl
clc
xchg
sub
negb
daa
xor
mov
sarl
fst
mov
xlat
xchg
movsl
fcmovnu
sbb
fsubs
roll
inc
dec
push
jle
mov
push
nop
fidivl
lods
insb
lahf
ja
test
bound
sti
push
xor
mov
mov
popf
mov
pop
push
movntq
and
sbb
mov
adc
notl
fs
pop
mov
add
les
add
mov
pop
sbb
cs
mov
scas
negl
mov
test
push
aam
push
dec
sub
shl
xchg
jp
and
rcrl
mov
mov
and
orps
movsl
sub
push
pop
mov
into
jb
out
fstpl
push
fwait
push
fidivrl
and
pop
int
int3
cmpsb
mov
or
fildl
shr
push
scas
lods
or
mov
pop
pop
cmp
pop
aam
repnz
mov
mov
adc
outsb
ror
cs
lds
mov
xchg
sbb
xchg
ljmp
lods
push
push
add
pop
mov
ret
pop
hlt
shrl
jl
adc
xorb
sbb
and
not
fst
lods
inc
mov
add
mov
dec
in
int3
and
icebp
jae
xor
pop
xchg
imul
xchg
xor
jmp
fidivrs
dec
cmpsb
inc
sbb
je
cwtl
mov
sbb
gs
pop
push
cmp
and
fidivrl
stc
inc
stos
lds
arpl
popf
push
aaa
jns
sti
imul
add
fistps
int3
sub
mov
clc
adc
dec
dec
rcl
adc
mov
sahf
pop
xor
pop
or
mov
scas
fdiv
lods
mov
loopne
xor
push
add
lods
sub
sar
pop
vmaxpd
test
movsl
outsl
add
fdivs
insl
or
rcrl
out
movsl
xlat
xchg
cmpsl
pop
push
lcall
lahf
jns
call
push
daa
xor
mov
pop
and
orl
sub
adc
jge
fadd
repz
sbb
xlat
lock
stos
rolb
enter
sahf
xchg
pusha
aad
adc
push
mov
pushf
aad
orl
movsb
rcr
lret
push
hlt
lret
rcl
pop
ret
scas
xchg
mov
push
pop
or
adc
sub
inc
or
cmp
mov
lahf
jle
aad
sbb
cmpsb
call
xor
test
or
mov
sub
sub
and
cltd
loopne
popf
outsl
dec
or
mov
mov
int
inc
cmp
jno
lods
call
jecxz
inc
fadds
xchg
add
sub
fs
pusha
mov
add
inc
leave
xchg
xchg
adc
scas
insl
out
xor
or
pop
in
jnp
sub
or
mov
xor
dec
fbstp
mov
rcr
mov
xchg
jne
rcrl
pop
mov
sbb
cmp
inc
sbb
arpl
push
inc
jmp
cmp
mov
mov
mov
adc
jle
out
dec
data16
push
inc
insb
push
mov
dec
mov
ja
mov
mov
test
pushf
jns
in
mov
push
xor
add
jae
inc
pop
or
inc
mov
sub
xchg
sub
mov
sbbb
dec
xchg
pop
lahf
dec
sahf
rcrl
lret
inc
lret
xchg
js
rcl
inc
jno
adc
adc
dec
mov
or
jecxz
imul
dec
icebp
sbb
aad
dec
inc
adc
mov
les
sub
je
mov
sbb
mov
imul
shr
sbb
push
in
sahf
mov
jae
pop
cld
shlb
daa
cmpsb
sbb
mov
cmp
imul
cmp
mov
fmuls
pushf
mov
sub
test
insl
cld
mov
movsl
pop
fldl
jl
lret
or
mov
sub
mov
mov
daa
mov
push
rcl
mov
jae
jmp
inc
add
push
cmp
sub
shl
add
push
mov
lret
xchg
ljmp
jb
jl
rcr
ljmp
imul
and
call
mov
or
pop
xchg
mov
std
push
xor
out
popf
add
adc
dec
adc
repnz
or
jge
mov
ss
mov
stc
pop
out
rcll
sbb
adc
rol
out
out
pop
rcll
add
mov
xchg
shlb
out
adc
or
inc
lcall
call
dec
or
stc
adc
loopne
pusha
movsl
mov
addr16
pop
in
jne
jge
xlat
int3
xlat
and
testb
sub
xchg
shr
mov
out
add
adc
xor
fldl
pop
pop
push
xchg
adc
or
cmp
lods
aad
push
sti
sbb
addr16
cld
sarb
call
fstp
dec
push
mov
mov
cmpsb
das
aam
sub
xchg
jg
negb
cmp
sbb
add
test
loopne
dec
xchg
mov
jb
popa
cwtl
lds
mov
incw
adc
dec
pop
addr16
adc
jl
push
sahf
lods
mov
xor
xor
and
cmp
cld
scas
fdivrp
mov
call
sarl
scas
or
nop
lcall
shll
out
jnp
adc
inc
mov
loop
int
outsl
call
int3
or
mov
pushf
out
out
push
mov
xchg
das
fcmovnb
aam
ljmp
inc
pop
sbb
fimull
std
xor
jl
out
mov
pop
xchg
loope
adc
xor
mov
pop
rolb
xor
mov
jne
jbe
dec
testb
neg
mov
jmp
mov
sarl
negb
mov
insl
ret
dec
inc
mov
sub
jle
cmpsl
jl
clc
mov
addr16
sbb
shll
cmp
mov
push
cld
in
dec
push
popl
sbb
xor
movl
dec
pop
rcr
or
insb
repnz
je
rcrb
shrl
not
daa
std
enter
mov
mov
inc
and
daa
mov
xor
popa
outsl
sarb
cwtl
adc
out
pop
lods
ljmp
mov
rol
daa
shl
jmp
addr16
mov
insl
pushf
into
add
leave
push
sbb
test
sub
lahf
dec
xchg
xchg
mov
jne
mov
daa
xor
movsl
push
push
idivb
out
jae
testb
dec
ja
mov
pmulhuw
xlat
jmp
sbbb
hlt
prefetch
inc
mov
push
sahf
jne
dec
das
add
testl
xchg
aas
mov
xor
jns
inc
in
mov
nop
in
xchg
jns
ja
adc
push
xor
and
cltd
jle
mov
pop
dec
push
out
inc
or
push
lret
cld
lahf
pop
xchg
call
xchg
cmp
push
ss
and
adc
lret
sahf
rol
cmp
jle
pop
lock
scas
insb
pushf
push
std
xchg
sarl
addr16
add
xchg
jg
aam
pop
pusha
jns
daa
test
jno
shl
pushf
mov
and
sti
imul
dec
push
jne
pop
ret
iret
fnstsw
ret
inc
mov
cmp
jge
jmp
xor
pop
je
pop
sar
pop
jno
mov
cmp
fwait
push
push
out
leave
push
mov
inc
rcr
shll
ffree
aam
shlb
pushf
xchg
ljmp
repnz
push
out
mov
jno
push
sahf
aam
sarl
xlat
pop
shl
gs
das
sub
or
lods
mov
addr16
and
loop
jae
subb
or
mov
sub
jbe
or
add
mov
aad
pop
fidivrl
add
rorl
dec
in
lods
mov
mov
sbb
jb
aaa
jle
shll
jmp
mov
cmp
fnstcw
sbbl
mov
inc
push
sub
sbb
scas
repz
cmp
and
fisubl
rcl
int3
cmp
clc
cmp
pop
orl
scas
in
pop
ds
rcrb
cmp
ss
sub
fsubl
shlb
fistpl
inc
repnz
scas
or
mov
jl
push
pusha
scas
mov
test
gs
pusha
sbb
rcrl
roll
std
int3
in
mov
xor
cmpsb
in
xor
push
rcll
dec
xchg
mov
mov
fcoms
mov
rcrb
fisubrl
lea
push
lods
and
jl
mov
mov
std
mov
adc
cld
mov
ficomps
adc
or
mov
jp
aad
shll
rcrb
out
xchg
test
je
add
add
rclb
into
jmp
or
inc
mov
pusha
mov
sahf
fs
pop
mov
arpl
cmp
rcll
xchg
mov
pop
arpl
jnp
add
or
call
jae
das
jl
mov
inc
push
enter
ds
loop
popf
in
ror
dec
jbe
push
leave
lods
or
or
adc
push
sub
dec
xchg
mov
repnz
mov
sub
push
out
dec
ja
mov
sbb
arpl
fstpt
into
ds
fdivrl
in
loop
mov
dec
and
bound
xlat
ja
int3
inc
xor
dec
jne
mov
call
jne
xlat
repnz
inc
sub
in
push
aad
or
insl
fmull
jae
xchg
inc
push
fcomi
jl
das
xor
push
enter
mov
test
lock
dec
push
dec
data16
es
rclb
mov
xchg
push
dec
xchg
sub
ror
or
sbb
rcl
cmp
xor
and
aas
lret
cld
fmull
or
cmp
sub
ja
or
loop
lods
jl
cmp
subl
pop
push
xor
mov
sub
sub
adc
addr16
scas
or
inc
in
icebp
pop
pushf
inc
xchg
into
in
mov
std
stos
les
add
xor
mov
jb
dec
fisubs
hlt
addr16
pop
adc
push
adc
add
push
fisttps
mov
into
add
xor
push
push
mov
adc
or
in
ror
ficomps
cmc
clc
sarl
int3
out
add
stc
push
inc
movsl
sbb
leave
mov
or
and
cmp
xchg
cmp
cmp
sbb
rcl
mov
lods
xchg
pusha
push
mov
shr
imul
push
push
pop
mov
push
xchg
pop
sub
pop
adc
jl
cmp
mov
add
or
rclb
punpckhdq
sub
cltd
mov
fs
mov
mov
xor
jbe
sbb
test
stc
sbbb
pop
pop
or
jmp
andl
pushf
sarb
pop
jmp
out
push
jb
push
sbb
in
dec
mov
xchg
pop
aad
inc
in
pop
aad
dec
dec
movsb
shlb
dec
add
bound
add
fisttpl
adc
shll
or
cmpsb
int
ret
out
leave
adc
daa
and
mov
rclb
roll
mov
mov
lret
mov
shrl
lea
sbbb
loopne
mov
dec
xchg
adc
inc
mov
xchg
test
mov
add
fsubl
in
xchg
out
push
dec
test
add
lret
adc
shll
shrb
mov
xlat
movsl
xor
lret
mov
lret
pop
clc
mov
dec
sahf
aas
push
xor
dec
sub
sarl
popf
push
jmp
and
xor
into
scas
jnp
push
rcll
mov
xchg
push
lods
int3
fdivr
rorl
push
push
lea
fs
inc
in
jmp
loop
rcrb
pushf
stc
add
pop
xchg
dec
out
jo
push
shll
loop
pusha
add
xchg
cmpsl
lret
shlb
mov
jmp
mov
xchg
cmp
add
clc
insl
and
mov
test
pushf
and
push
push
in
shl
mov
fcompl
enter
rcrl
xchg
push
aas
sbb
adc
jg
mov
in
adc
pop
xchg
mov
mov
or
lret
roll
ja
loopne
stc
push
xorb
cmpsb
loop
bound
cltd
test
pushf
jb
pusha
mov
dec
mov
xlat
decl
inc
mov
lods
add
dec
push
pop
sub
pop
ret
and
pop
movsl
clc
push
shll
cmp
fucomi
mov
rcrl
mov
ret
lods
sub
ret
out
dec
mov
push
sbb
jl
cmp
pop
movsl
xor
mov
sbb
xchg
mov
mov
mov
inc
pop
fldcw
inc
mov
ljmp
pop
mov
inc
jl
stos
pushf
jns
mov
sbb
movsl
adc
cltd
out
jne
mov
pop
cmp
sub
pusha
push
mov
repz
dec
xchg
int
repz
sbb
mov
repnz
jp
xchg
lods
adc
jmp
ja
add
lock
mov
loope
adc
out
mov
and
dec
add
sbb
mov
shll
push
nop
xor
and
mov
dec
or
cs
cwtl
inc
out
inc
imul
hlt
lock
push
pop
out
push
xchg
pop
fcompl
mov
pop
mov
xchg
fiaddl
in
fs
popa
add
mov
mov
test
movl
add
jbe
movsb
psllq
pop
jae
pop
fucomi
xor
int3
cltd
test
push
aas
adc
and
fldenv
mov
or
in
pusha
mov
loop
loopne
cs
or
leave
out
hlt
cmpl
xchg
fistl
add
mov
fcompl
mov
mov
out
fdivl
stc
or
adcl
shl
mov
push
and
fwait
sarl
js
notb
les
insb
ja
out
insl
jle
int
fisttpl
pushf
mov
sbb
rcl
das
adc
rcrl
dec
jno
add
sbb
out
and
shl
sub
cmpb
mov
outsl
into
pop
ss
mov
jne
mov
mov
ret
jbe
mov
dec
xchg
bound
lahf
stos
pop
pop
jae
jg
push
cltd
pop
mov
xchg
jae
ficoml
cmc
dec
push
lahf
sti
lea
shrl
xchg
lods
dec
je
test
pop
int3
dec
cli
jecxz
ds
ret
jns
dec
scas
jmp
fstpt
xor
imul
int
xchg
movb
jg
leave
push
add
cmp
inc
pop
jbe
jecxz
jmp
repnz
lret
push
push
test
mov
test
outsb
movsl
scas
lods
mov
das
aas
dec
sub
mov
aaa
inc
fbstp
cmp
std
jae,pn
sub
fdivs
jae
mov
lds
in
add
sbb
fcoms
adc
jg
jae
dec
clc
mov
int
add
pop
cld
imul
iret
inc
repnz
sbb
mov
pushf
dec
or
scas
cmp
mov
sar
dec
gs
add
lods
out
xor
xchg
repnz
rclb
out
shrl
movsb
push
clc
rcl
adc
ret
or
push
xchg
push
fmul
inc
adc
sbb
rorl
and
pop
clc
dec
rolb
lea
int3
jg
mov
imul
inc
adc
fisubl
shrl
int3
into
roll
out
pusha
ret
xor
test
sbb
sub
dec
add
jno
hlt
pop
add
mov
sub
inc
jns
out
fisubl
mov
mov
outsb
pop
jno
push
pushf
enter
ret
js
sub
pop
icebp
xchg
mov
loopne
sbb
bound
movsl
insb
in
test
lcall
aas
repnz
fs
jge
dec
int
mov
sar
sti
pushf
andl
fiadds
inc
movsb
ds
divb
rcrl
lret
lahf
out
ficomps
out
xchg
xchg
inc
sub
rorl
dec
lret
xor
lcall
lcall
out
jae
xchg
xchg
jne
mov
jb
dec
inc
inc
shl
ljmp
lods
dec
out
mov
push
cmpl
movsl
xor
inc
sar
fistpll
mov
rcl
out
mov
les
xor
enter
rcr
mov
mov
lods
jl
ret
movsl
sar
int
pop
mov
dec
mov
pop
xlat
push
sarl
filds
push
push
xchg
fcos
xor
mov
das
sub
pushf
shlb
add
adc
jne
lret
decl
dec
adc
stc
enter
sbb
xchg
cmc
mov
adc
idivb
rorb
outsb
cmp
add
enter
dec
and
shll
int
outsb
mov
dec
fwait
rorl
out
push
mul
jp
pop
std
mov
mov
push
add
inc
pop
ret
lahf
gs
adc
fistpll
mov
std
das
les
mov
sahf
popf
jle
sti
dec
fsubrs
fsubrp
dec
pop
das
mov
adc
inc
xor
ret
bound
sbb
dec
lods
add
sarb
adcb
sahf
push
ficomps
dec
imul
in
fldcw
sti
inc
pushf
addl
sbb
or
subb
push
and
cwtl
pop
mov
insl
xor
popa
sbb
sahf
or
loop
lea
mov
icebp
es
lahf
outsb
push
test
mov
lahf
and
push
dec
scas
fidivl
cli
loop
test
fnstsw
int
dec
add
dec
test
sbb
mov
jge
shl
adc
mov
mov
mov
out
dec
out
movsl
fs
dec
jmp
out
sti
jmp
roll
pop
sti
mov
popf
into
decl
mov
mov
pop
fisttpl
and
mov
mov
inc
gs
aam
xlat
sub
sbb
cld
daa
cld
lret
xchg
popf
sub
outsb
inc
or
push
ds
push
dec
lahf
add
imul
nop
rcll
je
dec
outsb
sub
push
fwait
clc
sbb
xchg
adc
pop
mov
das
cmp
and
shll
aas
push
cmp
adc
mov
lock
iret
jne
fsubr
pop
pusha
pop
aad
cmp
fisubl
mov
sbb
mov
cltd
js
add
sbb
or
push
sub
push
push
sub
fiadds
idivb
xor
fmul
dec
xchg
and
shl
dec
mov
xchg
out
and
lret
add
inc
stc
aas
dec
mov
fldl
xchg
sub
in
xchg
ss
inc
inc
mov
mov
mov
mov
fsubr
and
jmp
dec
jmp
sahf
cwtl
pop
test
in
and
in
mov
pop
setp
mov
mov
jno
fidivs
cmp
mov
dec
shr
rcll
mov
repnz
mov
subl
shr
inc
mov
in
cmp
sub
xor
icebp
jl
pop
out
mov
push
inc
jge
pop
lock
pop
mov
inc
pop
sub
rol
or
add
push
and
insb
scas
cwtl
adc
aas
lmsw
mov
jl
pop
push
call
in
lahf
dec
mov
adc
repz
sbb
iret
jle
das
popa
pop
out
mov
pop
sarl
dec
xchg
mov
ret
dec
and
pusha
aam
mov
lret
shrl
es
mov
jge
mov
dec
insb
cmp
mov
adc
out
sub
in
push
adc
pop
in
mov
fidivs
aas
daa
loop,pt
pop
add
into
mov
out
sar
fistps
mov
xchg
dec
out
jbe
sbb
lret
lcall
dec
loope
into
gs
stos
push
mov
xor
fcmove
movsl
imul
mov
mov
mov
cmp
push
cmp
in
clc
aas
xchg
add
push
jns
ljmp
jl
lcall
out
lahf
dec
sarl
jl
xor
add
stos
sub
shll
pop
dec
ja
jmp
mov
inc
std
shrl
movd
test
insl
mov
mov
mov
mov
xor
je
and
lods
jne
push
mov
js
test
outsl
pop
xor
sar
fiaddl
and
aaa
mov
outsb
or
dec
pop
mov
and
lods
and
adc
push
cmp
mov
dec
dec
clc
fcoml
sub
fsubr
mov
pop
insb
aam
test
lods
xlat
int3
popf
cmp
clc
cmpsb
std
je
call
lret
sub
mov
movb
mov
xchg
into
cli
adc
mov
cmp
loop
sub
jmp
ljmp
stos
sarl
pushf
push
shll
lds
adc
ret
lret
cmp
fildll
sarl
cld
int
push
xor
lock
jmp
adc
xchg
mov
add
lods
test
push
pop
inc
enter
shll
data16
mov
xchg
dec
mov
xchg
cwtl
test
inc
pop
clc
outsb
movsb
movsl
xchg
pop
sbb
xchg
and
lret
sbb
lock
out
int3
sub
cmp
xchg
adc
rol
adc
mov
sub
repnz
es
push
push
mov
fstl
xor
test
jl
sub
imul
sub
fsubr
add
fnstcw
subb
add
repz
aas
aas
mov
sub
out
rcll
xchg
dec
sub
push
mov
cltd
dec
orl
loopne
pushf
push
xor
into
in
mov
push
pop
xchg
je
enter
adc
sub
add
stos
push
js
push
jge
pop
int
add
fisubrs
data16
idivb
dec
aam
xchg
shl
repnz
out
xlat
sbb
cmp
pop
xor
mov
int
rorb
fdivl
xor
pop
sarl
into
sbb
mov
inc
mov
dec
je
pushf
imul
inc
dec
adc
outsl
stos
ljmp
faddl
in
jnp
mov
pushf
xor
xorb
sbb
pop
add
popa
mov
sub
xchg
jecxz
rcrb
push
fwait
cld
jmp
outsl
fildll
out
push
xor
movsl
xchg
imulb
xrelease
mov
ret
cmp
clc
stos
movsb
jnp
std
mov
mov
cs
cmpl
jmp
cmp
pop
mov
filds
in
push
fldz
cmpb
ds
rorl
mov
ds
mov
xor
xchg
push
xor
icebp
test
cmp
insl
or
xchg
popf
std
icebp
cs
push
insl
incb
ljmp
cld
insb
sbb
sbb
jecxz
lods
push
pop
jge
adc
xor
arpl
sub
sub
inc
sub
jg
mov
aaa
pusha
aam
inc
popf
mov
adc
or
ret
mov
sarl
repz
leave
and
add
ljmp
stc
dec
dec
into
rcr
decb
repz
jne
lds
lret
sar
jmp
mov
jns
inc
out
xchg
icebp
enter
xor
jmp
ds
jecxz
daa
lahf
dec
stc
xor
shlb
je
popf
mov
je
sbb
into
repnz
rcrb
mov
lahf
test
insl
push
pop
loope
adc
cmp
roll
mov
shll
jnp
adc
push
push
sub
push
cmpsb
sti
jge
or
push
les
ret
or
sub
xor
sub
mov
cmp
and
fwait
pop
jp
sbb
lods
pop
int
or
lahf
mov
iret
xchg
js
push
les
into
jo
rcrl
push
mov
pop
nop
aad
xor
or
sti
addb
adc
or
movsl
xchg
push
imul
push
scas
jle
rcrl
jae
mov
xorl
fwait
lahf
fisubrs
jns
add
mov
aam
clc
stos
or
push
sbb
int
jmp
jns
das
aad
push
sub
call
push
stc
xchg
xor
stc
cld
in
add
sahf
cmpsl
mov
add
fimuls
jg
in
inc
insl
push
out
and
xorl
adc
inc
mov
scas
adc
je
jo
mov
sbb
xchg
jb
in
rorl
push
jg
popf
cmp
rolb
jae
cmp
mov
pop
lcall
mov
inc
push
sub
nop
push
or
rorl
mov
out
xorb
inc
or
mov
movsl
es
jne
stc
xchg
xchg
dec
jbe
add
xlat
stc
inc
cmpsl
sbb
lds
out
sub
xor
ret
push
fnstsw
mov
fmull
or
cmp
and
cmp
enter
xor
jbe
dec
push
mov
sahf
ror
mov
sbb
mov
roll
loopne
cmp
xchg
pop
mov
ret
lods
jge
jb
pop
in
out
fwait
jecxz
xchg
jmp
pop
ds
fld
rcl
sub
pop
push
add
cs
fcmovb
pop
ret
cmp
aas
push
ror
fnstcw
in
mov
sbb
push
ret
mov
push
cmpsl
cmp
fisubrl
rcrl
mov
lahf
mov
inc
fistps
std
lea
cmp
or
mov
cmp
inc
inc
leave
jle
push
push
and
mov
addr16
stc
jne
xor
pop
xchg
dec
popa
mov
lds
pop
fdivr
mov
sbbb
xchg
push
subb
pop
sub
dec
rcll
lret
stc
mul
fadd
int3
sub
je
sub
in
inc
imul
shl
push
mov
test
add
jo
sbb
lds
lret
cwtl
xchg
mov
test
inc
loop
in
jecxz
seto
jb
cmp
jge
add
xchg
or
jecxz
cld
jne
mov
orl
cwtl
add
cmp
shl
pushf
lahf
scas
cmc
enter
lods
push
sub
scas
pop
cmpl
pop
sbb
hlt
movsb
add
cmp
xchg
cmp
or
test
fidivrl
je
sub
movsl
ficomps
jbe
dec
jmp
cmc
aas
ds
sarl
jl
mov
ret
cmp
xchg
ss
loope
lods
and
xchg
adc
cmpsl
pop
inc
xorl
xor
adcb
pop
arpl
inc
mov
xchg
rcl
les
jmp
inc
out
lods
shrl
mov
jb
cmpsl
add
adc
cmp
and
mov
inc
inc
sti
mov
pop
test
inc
dec
pushf
sbb
dec
outsl
insb
or
sub
leave
mov
imul
pop
cmc
roll
testl
cmc
repz
popa
mov
lods
sbb
mov
idivb
mov
scas
mov
and
cmp
ror
pop
pop
jmp
inc
mov
lods
loop
jbe
mov
sub
dec
mov
mov
lods
or
ja
xchg
and
rclb
pop
mov
aas
iret
fisubrs
insb
out
adc
lcall
cmpsl
es
roll
jnp
adc
sub
aaa
mov
test
fldcw
sbb
lea
ljmp
bound
lods
and
or
cmp
popf
in
mov
mov
dec
daa
push
xor
or
fcompl
arpl
or
jmp
cltd
push
jne
add
jge
movsl
inc
sar
pop
addb
frstor
and
add
idivl
xchg
cmp
adc
cld
into
out
lahf
jbe
jne
xor
int3
movsb
or
cmp
or
mov
and
test
lods
mov
push
cli
jno
and
push
out
test
cld
insl
int
adc
test
repz
jmp
fcompl
and
sahf
jmp
rcll
mov
jo
movsb
dec
cs
repnz
sbb
inc
pop
sub
call
lds
adc
int3
xor
mov
imul
push
jbe
xchg
mov
push
cltd
ficompl
add
out
mov
and
or
arpl
cmpsb
jno
mov
scas
add
push
adc
aas
sbb
add
or
in
pop
inc
rcll
pop
lea
add
push
out
pushf
addr16
pop
rol
pop
out
adc
orl
movsl
push
xchg
cmp
sbb
scas
pop
aad
fildl
cld
inc
nop
jl
pop
clc
mov
xlat
rcll
mov
in
nopl
cltd
xchg
mov
mov
aam
and
push
dec
adc
mov
cmp
mov
imul
ljmp
or
into
movsb
adc
aad
into
cmp
jg
popf
sub
ja
xlat
loopne
in
ficoml
scas
jmp
xor
xor
shrb
mov
push
xor
jp
insl
add
mov
and
fidivs
ljmp
cld
xor
inc
lods
popa
shrl
or
add
hlt
sub
xor
jno,pn
bound
inc
fcmovu
into
sbb
je
std
insl
out
fstpl
leave
nop
ljmp
fdivl
cmp
sbb
loopne
filds
mov
outsb
cmpsl
push
mov
dec
xchg
lcall
cs
mov
loope
add
test
out
dec
das
out
int
lods
or
inc
sub
clc
roll
adc
dec
xchg
daa
lds
push
push
test
fnstcw
lds
xchg
loop
jecxz
clc
pusha
iret
clc
mov
adc
adc
insl
das
adc
cltd
aam
pop
hlt
movsl
add
lods
mov
inc
jno
jmp
mov
jl
push
addr16
pop
dec
fdivrp
push
test
pop
pop
fdivl
sbb
inc
inc
adc
push
fwait
shrb
jge
out
sarb
jmp
in
inc
mov
pop
lret
fstps
pop
mov
mov
and
leave
sub
popf
notl
add
lods
xchg
xchg
jle
mov
pop
je
push
and
dec
insl
aaa
sbbl
das
bound
outsl
adc
test
mov
nop
shl
fninit
mov
xor
or
xchg
xchg
cmpsl
mov
dec
js
clc
dec
lahf
cmp
adc
mov
sahf
sbb
subl
xchg
inc
mov
int3
and
cmp
in
add
jg
lods
loop
mov
rclb
in
or
mov
mov
jo
xor
dec
xor
adcl
xchg
sbb
mov
xchg
inc
jnp
out
mov
fxch
mov
rorl
loopne
and
dec
push
iret
mov
ficoml
orb
fs
clc
pop
cwtl
lcall
movsl
mov
push
fstpl
xlat
mov
sub
pop
add
cli
rcll
fcmovnu
jle
into
or
sti
sbb
fldenv
fcom
mov
aad
dec
sbb
mov
add
ret
push
mov
pop
jl
imul
add
jle
or
out
stc
cmp
fistl
mov
adc
jge
out
repz
mov
fucom
cmp
jno
sub
pushf
out
add
pop
shll
mov
cmc
sub
cltd
or
mov
jno
mov
leave
cltd
xor
rorl
out
xchg
dec
dec
jmp
inc
mov
in
inc
or
pushf
sbb
ljmp
movsl
or
or
pop
lret
xchg
dec
lods
frstor
inc
inc
mov
loope
mov
test
add
xor
pop
sarl
push
xor
mov
xor
xor
xchg
jno
out
jne
sub
jno
pop
adc
loopne
mov
pop
push
jmp
xchg
or
xchg
stc
lea
fnstcw
sbb
pop
mov
pusha
sub
add
adc
ror
rcrb
arpl
add
jmp
mov
sti
lods
ficoms
shll
pop
cmpsl
pop
lret
mov
lods
out
push
sub
pop
jmp
lods
or
repz
adc
cmpsl
inc
orl
mov
aad
jg
fstpt
push
dec
test
dec
pop
dec
mov
mov
fistl
sub
pushf
sbb
sub
imul
jp
or
mov
mov
cmp
test
dec
mov
icebp
pavgb
mov
lahf
xor
add
int
sti
xchg
jl
das
cli
nop
mov
fs
in
jns
sbbl
lock
sarl
popa
in
mov
idivl
fimuls
mov
push
xor
sub
pop
hlt
mov
pusha
mov
xchg
sbb
inc
sub
fs
sbb
push
leave
clc
aas
jg
outsb
push
fcmovb
cmp
stc
cs
cli
sahf
imul
push
adc
pusha
dec
mov
dec
imul
sbb
pop
mov
and
int
pop
fstpl
fcom
inc
fisubs
pop
rorl
sahf
or
pop
mov
mov
or
push
pop
mov
push
mov
lea
lods
mov
filds
repnz
pushf
cld
sarb
pop
ret
cmpsb
jl
push
shrb
mov
lds
add
mov
dec
mov
cmp
ret
pop
daa
mov
xor
jl
mov
sarl
rol
scas
or
xchg
rclb
std
lods
lock
cwtl
fs
iret
sub
inc
jge
jge
mov
test
enter
push
add
int3
or
clc
lret
inc
cmp
lret
add
jo
scas
or
lds
cmp
push
pop
roll
sbb
mov
xchg
popa
mov
add
pop
jl
call
jno
rorb
aam
daa
inc
or
pushf
mov
push
ljmp
mov
pop
mov
adc
xchg
imul
cmp
or
into
mov
rol
jbe
movsl
ret
mov
xchg
gs
scas
pop
lods
outsl
jmp
jmp
loope
or
mov
mov
jl
xor
mov
ret
mov
xchg
arpl
xchg
xchg
daa
movsl
push
mov
into
icebp
loope
int
movsb
mov
and
aaa
fdivl
xchg
dec
pop
push
jns
lahf
dec
fwait
mov
pop
ficomps
cmp
pop
loope
adc
push
aam
jp
fists
mov
and
pusha
pushf
mov
or
sahf
dec
add
aas
sbb
shl
push
cmp
mov
xor
imul
mov
fld
sub
ficomps
add
xchg
jge
add
jl
sbb
rcrl
mov
or
lods
out
mov
inc
jbe
xchg
dec
repnz
sbb
movsb
adc
inc
and
test
imul
inc
movsl
ror
sub
and
insl
mov
cmpsb
lods
or
jmp
test
inc
sti
jne
jns
mov
inc
rcrl
rcrb
jmp
out
pusha
fstps
pusha
insl
or
sub
call
add
divb
popa
dec
add
sub
add
xchg
mov
pop
pop
rorl
jge
mov
ret
cmpsl
push
mov
stc
in
roll
rclb
adcb
sarl
lock
add
mov
ja
sbb
gs
clc
mov
jns
loopne
push
ds
mov
inc
sarl
movsl
pop
jns
mov
cmp
loopne
lcall
popa
leave
lahf
mov
adc
add
fcompl
mov
mov
adc
inc
pusha
mov
cmc
pop
cmp
sub
jge
sarb
jmp
lods
out
sub
pushf
pop
push
orb
dec
jae
std
mov
into
scas
mov
lods
scas
xchg
popa
sar
movsl
out
sub
jecxz
scas
iret
sub
addr16
mov
pop
mov
pop
in
ss
fucom
dec
in
mov
mov
sbb
cmp
ret
sub
xchg
mov
add
xchg
mov
pop
lret
sbb
rcrl
mov
cmp
mov
fstps
jns
push
mov
or
xchg
cmpsl
loope
jns
imul
inc
out
test
fidivl
cwtl
test
push
outsb
dec
pushf
or
push
cmp
loop
test
dec
sbb
pop
loope
fimull
cmp
test
sahf
dec
jns
ret
shll
out
cmp
leave
cs
imul
call
mov
adc
jecxz
xchg
jg
inc
fistps
xor
fdivl
mov
mov
cltd
enter
mov
push
xchg
ljmp
mov
pop
pop
dec
and
adc
clts
sbb
and
fbld
fdivrs
lea
into
adc
out
js
inc
xchg
adc
jle
scas
sub
xor
xchg
stc
mov
shl
push
sbb
cli
cmp
clc
sub
pop
daa
xchg
xchg
jge
aad
cli
mov
pop
adc
arpl
pop
push
cmp
stc
out
xchg
fidivl
lods
insb
clc
xor
dec
popa
jmp
stc
mov
les
pushl
rol
js
xchg
sbb
adc
mov
je
and
xor
mov
fs
and
jb
mov
inc
das
lret
xchg
mov
add
sbb
insl
imul
mov
fimull
pusha
pop
pop
sub
repz
xchg
ret
xchg
dec
bound
jbe
cmp
je
sbb
mov
dec
repz
push
outsw
push
jmp
cmc
insl
ss
adc
int3
mov
mov
mov
imul
and
pop
or
jne
xor
jmp
xchg
mov
jns
jno
dec
ljmp
movsl
pop
mov
cmp
cmp
sbb
pop
bound
aam
cmp
sbbl
test
push
shll
pop
push
shrl
in
aam
cwtl
add
add
cld
sarl
sbbb
into
sahf
xor
xchg
popa
or
int3
dec
sar
or
inc
adc
insl
mov
push
mov
int
jmp
shrl
dec
leave
dec
xchg
fildll
hlt
mov
mov
cmpsl
cmp
les
jg
cmc
jne
fsubrs
outsl
xchg
call
addr16
sbb
xchg
stos
lret
push
rcrb
leave
push
mov
xchg
ds
cmpsl
push
jb
fnstsw
insl
mov
lcall
jle
xchg
dec
ds
sbb
jge
inc
xor
mov
xlat
shlb
pushf
cmp
outsl
aad
sbb
jp
sub
adc
add
subb
add
addb
xchg
inc
sbb
fsubrl
aad
xchg
add
mov
mov
xchg
and
mov
or
lds
jne
inc
jns
mov
int
jno
mov
adc
repnz
adc
movsl
push
sub
int3
hlt
lret
sbb
mov
movsl
add
mov
sbb
xlat
mov
pushf
lds
xor
dec
lcall
iret
mov
xlat
int3
pop
imull
sti
ror
sbb
dec
jecxz
cld
sbb
push
cmp
stos
aas
xor
imul
cs
outsb
pop
mov
mov
ss
aam
mov
cmp
loop
pusha
int
inc
mov
mov
push
sbb
sbb
inc
fldl
cwtl
in
sbbl
xlat
or
jge
push
stc
pushf
into
pop
mov
les
rcl
inc
stc
add
das
dec
xchg
daa
push
adc
sahf
negb
pop
and
repz
and
mov
aas
mov
pop
lret
mov
in
out
push
jbe
pop
shll
adc
jmp
and
mov
popf
cmpsl
aas
repnz
mov
and
insb
pop
insb
push
mov
pop
in
cmp
adc
inc
push
dec
or
gs
pop
loop
cmp
pusha
in
mov
sbb
repz
aad
sarb
adc
add
xchg
dec
loopne
lret
fwait
jns
nop
mov
fwait
popf
lods
xor
dec
cmp
sbb
fld
repnz
pop
mov
pop
mov
jge
es
mov
fwait
mov
pop
rcr
fsubrp
sub
cmp
xchg
dec
sbb
cmp
fsubl
out
aad
inc
sub
cli
mov
jno
mov
rorl
aad
jle
adc
out
cmp
stc
mov
xor
push
push
sarl
adc
popa
push
outsl
int
scas
mov
loopne
pop
subb
pop
shll
insl
fwait
rorb
daa
je
addr16
in
push
cmpsl
and
mov
ss
cmpsb
mov
add
push
arpl
sub
cs
jo
push
into
add
sbb
lahf
mov
imul
es
or
mov
xchg
add
push
cs
mov
lret
scas
xor
popf
into
movsl
jecxz
fbstp
dec
add
xor
push
dec
jb
aam
fcoml
out
pusha
pop
mov
sub
dec
pop
jl
jle
test
cltd
lret
dec
pushf
enter
scas
xor
push
sub
repnz
pop
xor
sbb
cltd
fimull
imul
and
ffreep
lcall
movsl
shll
cmc
mov
lds
mov
arpl
ret
mov
dec
jge
mov
mov
pop
jns
cmp
psrld
push
popa
aam
ljmp
test
push
push
xchg
cmp
enter
out
js
push
adc
mov
ret
fadds
inc
fldenv
loopne
ret
xor
cmc
leave
call
jge
and
lret
es
lret
jmp
lea
ja
push
inc
mov
xchg
mov
lret
inc
cs
mov
inc
sarl
mov
mov
in
xchg
popf
lahf
push
fucompp
out
sbb
or
lret
pop
lock
cltd
jl
fidivrl
push
je
push
aam
ss
sub
xchg
rorl
push
cmpsb
or
fistl
pop
dec
inc
call
scas
sub
daa
in
mov
insb
push
mov
pop
push
mov
ja
inc
jae
inc
ljmp
orb
sub
insb
addr16
mov
ror
pop
shr
cmpl
inc
jmp
inc
mov
xchg
lea
mov
dec
pop
add
addb
movsl
xchg
sbb
stos
mov
aam
addr16
stc
adc
push
das
repnz
inc
mov
int3
fidivrl
out
push
shl
push
in
out
pminub
push
out
push
icebp
jo
mov
mov
out
pop
inc
out
mov
pop
mov
out
mov
shlb
cmp
clc
test
imul
fcomps
fisttpll
movsb
mov
adc
jmp
mov
push
in
xchg
pop
inc
out
add
insb
sbb
call
cmp
sub
xchg
arpl
movsb
xchg
aam
cmp
mov
push
jge
sti
mov
lahf
daa
mov
inc
inc
in
faddl
pop
sub
push
mov
push
push
idiv
ds
lahf
mov
adc
cmpsb
aam
jno
jae
add
add
in
shll
cltd
jo
shlb
ds
xchg
or
into
and
cmp
aas
sub
pushf
daa
das
push
icebp
movsl
fnstenv
add
and
cmp
stos
xchg
cmp
sbb
popa
dec
and
jbe
aaa
jne
dec
cltd
pop
std
add
lret
mov
mov
stos
stc
popf
dec
jecxz
add
ljmp
pop
mov
push
cmp
ret
sti
pop
push
lret
sub
sarl
or
cli
test
popf
jbe
xor
hlt
dec
fisubs
mov
loop
lods
loope
adc
pop
sub
and
push
or
lods
fstp
pop
jnp
xchg
jg
lahf
sarl
push
les
cmp
insl
fwait
mov
aaa
mov
cmp
dec
aad
imul
ja
cmpsl
hlt
push
sub
je
push
aad
jl
and
lods
push
icebp
repnz
jge
in
fdivrp
daa
mov
shlb
repnz
fidivs
iret
movsl
mov
mov
outsl
lods
cmpsl
aaa
mov
pop
pop
and
inc
xchg
repz
in
sub
mov
aas
imul
nop
inc
movsl
cmp
fcomi
mov
lret
push
sub
jmp
and
mov
jmp
lret
mov
sahf
push
out
scas
movsb
sub
lret
cmp
rep
push
pop
cmpsl
cmp
fs
jecxz
inc
out
sar
scas
decb
inc
stc
cld
jne
mov
outsb
inc
xchg
popa
or
popf
out
dec
pop
mov
je
fildll
shl
sbb
adc
mov
andb
ljmp
loop
mov
xor
cmp
clc
fimull
shrl
cmp
aam
fidivrl
sti
mov
insl
mov
pop
faddp
roll
mov
rclb
pop
inc
fimuls
inc
int
cmp
adc
dec
dec
mov
cmp
or
xor
cltd
ret
mov
jne
cld
sahf
ljmp
les
push
xchg
mov
cmpsl
ficomps
aad
mov
jle
cwtl
xlat
aam
cmpsb
call
loopne
pop
gs
inc
and
loop
les
mov
mov
adc
jnp
pop
add
sbb
in
sub
out
neg
pop
mov
fisubs
lock
scas
mov
data16
xor
cmc
out
adc
into
ret
mov
jb
xchg
mov
fmulp
inc
psllq
inc
sbb
lods
out
jge
pop
xchg
cs
ret
push
jnp
sub
push
jb
xchg
or
or
adc
cmp
xchg
pop
int3
xor
cmp
sub
rclb
sbb
pop
cmp
rorl
jnp
scas
mov
test
sub
sbb
fstpl
cmpsl
in
xlat
jmp
add
test
mov
stc
pop
cs
stc
fcmovnbe
in
sarl
fldenv
repz
je
rcrl
daa
loopne
inc
lods
leave
ja
push
mov
mov
mov
dec
xchg
mov
mov
xchg
popa
jbe
mov
fcompl
lcall
mov
or
lock
push
xchg
pop
lea
mov
sbb
cmp
addr16
insb
add
enter
mov
push
fcmovb
je,pn
decl
or
insl
sbb
add
cld
xchg
inc
push
xor
add
sub
out
xchg
frstor
or
out
mov
and
cmp
adc
cmp
pop
mov
imull
dec
xor
xchg
and
mov
pop
fcmovne
enter
or
mov
lds
mov
andb
int3
adc
pop
mov
out
xor
push
or
stos
sbb
enter
jae
shrl
cmp
leave
sbb
out
mov
cmp
lret
pop
mov
push
jae
dec
inc
lods
xchg
rcll
gs
lcall
shll
push
push
lea
das
xchg
ss
dec
pop
cmp
sbb
rorb
sbb
mov
inc
sarl
adc
cmc
push
test
into
push
cld
mov
rcrl
jecxz
stos
sahf
ret
mov
movsl
jns
mov
xor
fdivrp
inc
cmp
int3
lret
aam
ljmp
inc
dec
xchg
jge
dec
jnp
fcmovu
dec
addr16
call
insl
test
sub
adc
push
addr16
sub
cmp
mov
rorb
xlat
inc
cltd
mov
pushf
subl
repnz
and
arpl
fidivrl
outsl
cmpsl
insb
mov
pop
mov
std
adc
fcoms
xchg
xorl
mov
addr16
rcrl
int
pop
int
scas
or
fstps
test
rcll
ret
stc
scas
cmc
test
xor
xor
mov
out
inc
fstp
popf
mov
mov
fsubl
ficomps
inc
data16
xchg
lods
inc
mov
xor
enter
sbb
pusha
stc
fisubrs
clc
cli
push
fcomp
dec
adc
roll
aam
sbb
jne
cld
addr16
aas
or
sti
jg
ljmp
lret
xlat
fcompl
pop
sbb
push
mov
scas
inc
or
stc
inc
push
inc
fidivs
fsubr
jmp
or
sbb
fsubrl
dec
ficoml
insb
addb
sar
imulb
pop
xlat
fsubrp
add
fsub
xchg
mov
test
sbb
sub
fcompl
pop
hlt
ficomps
jb
fcompl
jae
imul
test
mull
movsl
int
add
mov
in
ds
push
lret
inc
mov
movsb
cmp
jb
pushf
popa
sub
rcll
mov
movsb
push
dec
shll
inc
pop
mov
mov
scas
xchg
pop
sub
out
pop
iret
xchg
pop
inc
repnz
cmp
mov
aaa
adc
in
dec
push
stc
lahf
stos
mov
cmp
jecxz
js
pop
fldl
pop
mov
xor
cmp
roll
stos
dec
ds
jg
call
push
or
popf
and
jb
inc
jge
mov
sahf
cltd
mov
lret
xor
insl
xor
jo
repz
dec
sbb
das
inc
mov
cmpsl
xlat
nop
pop
addb
test
nop
mov
shll
insl
inc
inc
xor
filds
lahf
xlat
mov
mov
aam
sub
lods
mov
mov
cld
ljmp
push
pop
jl
sbb
xor
push
xor
repnz
pop
shlb
mov
scas
je
pop
lret
mov
sub
in
jle
sti
or
jmp
ljmp
dec
out
aas
stos
mov
clc
nop
and
xchg
sbb
mov
push
scas
pop
cmp
mov
adc
repz
cmp
mov
sub
pop
roll
stc
icebp
mov
sub
jge
mov
jns
adc
rcrl
or
cmp
popa
inc
mov
leave
dec
mov
aaa
fists
xchg
cmpsb
cmp
mov
cmpsb
cltd
pop
pop
cs
leave
stos
movsl
add
fwait
and
jo
pop
pop
sbb
aaa
or
test
cmp
enter
jge
out
sbb
xchg
pop
ror
inc
and
data16
ds
pusha
das
sahf
mov
jl
sbb
ljmp
dec
iret
insl
jns
xor
mul
push
fwait
hlt
mov
mov
ror
cmp
xchg
xchg
jecxz
movsl
adc
xchg
mov
jp
in
bndldx
stos
test
stc
flds
out
sbb
add
mov
jl
cmp
pusha
jno
dec
jne
add
ja
shl
in
xchg
jae
into
adc
pop
cwtl
push
xorl
inc
jge
inc
call
pop
movsl
mov
leave
xor
in
fld
aam
push
push
mov
mov
adc
fisubl
or
lret
imul
mov
cmp
adc
mov
pop
test
and
xchg
test
mov
jmp
and
cs
cmpsb
cli
jg
fsubp
push
pop
adcb
adc
sti
push
mov
adc
sub
or
pop
inc
push
loop
insl
sub
das
jne
mov
jl
addr16
fcoms
repz
clc
and
shll
push
inc
cmpsb
mov
dec
sbb
leave
and
fcoml
iret
sbb
sub
je
or
mov
pop
scas
bound
and
dec
insl
dec
subl
jl
cmp
loopne
aad
xor
adc
aad
mov
dec
sbb
data16
adc
shlb
push
push
push
inc
in
jns
xchg
pop
xchg
sti
mov
pop
xchg
aad
xor
rol
add
pop
cmpsb
inc
pop
call
cmpsb
in
fwait
aas
mov
lahf
push
stos
fxch
jmp
insb
xor
pop
stc
pop
imul
mov
push
in
xchg
shll
insl
scas
lcall
mov
addr16
std
jo
mov
loope
jo
jnp
arpl
aad
mov
test
and
outsb
shlb
fisubrl
jge
test
sbb
test
into
lahf
out
push
xor
jmp
fdivs
rcrl
stos
sti
xor
inc
jnp
fcomps
je
mov
ret
lea
dec
notb
and
call
imul
outsb
cmp
out
and
push
jno
cmp
scas
cmp
subl
popa
xchg
push
in
pop
fnstsw
shlb
fs
sub
xor
fidivl
in
out
pop
loop
sbb
xchg
roll
sbb
ljmp
push
push
jae
mov
xchg
mov
push
fistl
xchg
sub
outsb
fdecstp
mov
lcall
mov
out
dec
dec
dec
test
push
out
jb
lea
adc
pop
ljmp
cmp
sti
jno
cmpsb
sahf
lret
dec
test
xor
or
mov
and
pop
fnsave
xchg
cmp
pop
stc
push
jmp
mov
pop
rcr
fstpl
addr16
dec
out
jne
xlat
inc
in
adc
cmp
xchg
je
push
subl
cmp
fimuls
std
fisubrs
pushf
xor
ds
shrb
insb
icebp
cmp
lock
dec
push
or
leave
ficomps
roll
jne
sahf
mov
dec
sbb
xchg
fidivrs
mov
push
cmp
xchg
aas
xor
mov
sbb
mov
aam
pop
enter
outsb
and
sbb
frstor
ret
cltd
mov
sbb
xchg
xor
in
cmpsb
sub
in
leave
ja
mov
ficoms
xchg
lods
push
sahf
pcmpgtb
out
cs
fcompl
idivl
xchg
xor
leave
into
pop
out
pop
mov
es
fildll
xor
xchg
adc
cwtl
xchg
pop
dec
push
fnstsw
cmc
cmp
mov
add
leave
mov
aas
cmpsl
std
jl
andl
in
xchg
push
lds
jmp
lcall
aas
mov
sahf
sahf
and
mov
inc
xchg
icebp
and
cmp
push
call
cmc
cmp
ljmp
and
stc
test
aad
lods
lds
add
mov
aaa
push
lcall
sub
dec
sub
decl
fldcw
adc
fisubrl
outsb
andb
lock
jne
inc
cmp
movsb
mov
and
shll
adc
mov
push
jecxz
xor
repz
sub
ss
xchg
sbb
sub
jo
push
imul
in
gs
mov
xbegin
enter
pop
int3
cld
push
jl
shl
icebp
xchg
dec
sub
popf
xchg
test
in
inc
mov
add
mov
test
lea
mov
bound
mov
gs
mov
inc
lods
pusha
and
jl
decl
add
aas
mov
mov
std
xor
arpl
ds
mov
mov
test
pop
dec
sub
push
cld
mov
rcr
fisttpl
mov
xchg
mov
inc
inc
aam
lcall
xor
repz
dec
push
push
fidivrl
lret
sbb
push
cmp
cmp
insb
mov
fdivrs
gs
inc
lock
repz
imul
movzwl
pop
adc
fcmovbe
xor
push
mov
shll
pop
insl
mov
repz
add
jbe
pop
es
xchg
pop
mov
sbb
scas
lcall
jns
dec
notl
sbbb
into
shrl
ljmp
loope
ds
test
inc
sbb
or
pop
adc
push
in
sub
out
rcll
stos
fcmovnu
xchg
cmpb
sti
and
sahf
cmpsl
shl
jge
sub
add
jb
in
xchg
inc
rclb
sbb
mov
sarl
mulb
push
outsb
push
fistl
shrl
or
int
imul
push
jmp
pop
pushf
fcmove
push
and
add
push
xor
scas
xchg
lahf
push
icebp
shl
call
scas
add
inc
lahf
xchg
aas
or
lods
mov
ljmp
movsl
cmp
mov
roll
add
call
dec
adc
xchg
pop
jecxz
aam
inc
shlb
mov
xchg
pop
jnp
mov
cli
int
sub
pusha
fldl
dec
js
arpl
jge
jo
jae
nop
aaa
clc
lods
xor
rcrl
jmp
adc
cmp
addr16
movb
outsl
mov
xor
insb
outsb
adc
scas
xor
jmp
push
xor
out
vmload
jo
mov
nop
int
invd
sahf
pusha
mov
mov
jb
and
jg
push
pop
fsubrs
repz
push
or
ret
into
movsl
pop
xor
in
into
pop
sub
xor
mov
dec
aaa
out
jg
repz
jge
xor
xor
inc
rcrb
lahf
inc
or
push
cmc
xchg
sub
movsb
fadd
scas
push
xor
daa
mov
movb
clc
pusha
mov
dec
jp
fists
and
imul
outsb
adc
adc
push
mov
in
xor
cwtl
push
mov
pusha
cmp
jle
je
xor
sub
daa
imul
aas
movsb
mov
pop
mov
dec
pop
fcmovbe
mov
in
mov
inc
mov
hlt
lahf
movsl
sub
insb
xchg
movsb
les
inc
lods
sarb
adc
sbb
xor
xchg
incb
fimull
sbb
lcall
sub
push
mov
mov
pop
dec
test
hlt
mov
imul
mov
jmp
pop
das
push
sarb
cs
jmp
ret
pop
or
and
xorl
dec
inc
repz
push
mov
sbb
dec
shr
or
ja
fs
jl
enter
aam
stc
add
pushf
fs
mov
adc
test
sub
mov
bound
push
inc
hlt
sbb
ffreep
aas
jge
addr16
jle
xor
in
jb
daa
push
adc
lcall
fisttps
shll
push
xlat
mov
dec
add
jl
out
stc
sti
out
adc
popf
cmpsb
stc
push
adcb
test
sahf
jne
push
push
lahf
pop
in
or
aam
ret
xor
add
and
pusha
cltd
xchg
in
roll
pop
ret
addr16
xlat
lods
lock
cmp
fiaddl
pushf
rcrb
mov
lods
sarb
out
out
mov
loop
frstor
inc
jg
inc
lret
gs
pop
out
ss
adc
dec
xchg
icebp
jno
mov
mov
out
or
dec
adc
insl
sub
mov
push
push
lock
aad
cmp
imul
add
ja
popf
out
cltd
out
popf
push
loopne
dec
lahf
dec
sbbl
push
xor
sub
and
cmc
sahf
pusha
sub
bound
out
jl
stc
stos
ss
pop
and
xchg
inc
rcr
inc
mov
add
shll
sub
push
out
mov
adc
dec
aaa
jecxz
sahf
push
xor
int3
or
jg
add
mov
xchg
into
mov
xchg
mov
insl
adc
xor
and
xor
or
push
mov
xor
dec
mov
shl
push
sub
and
jae
shl
sar
mov
adc
adcl
scas
adc
sbb
imul
rolb
mov
adc
xor
or
mov
aas
cvtpi2ps
out
push
xlat
sub
jae
xor
movsb
lea
stos
jne
push
xchg
clc
push
sbb
sbb
scas
loope
repnz
xor
fdivrs
push
jmp
fisttpl
mov
push
cwtl
push
fsubrs
fyl2xp1
into
orl
xchg
fisubrl
rcrl
mov
pop
add
enter
insl
push
out
add
inc
sarl
fs
cmc
mov
or
xor
fdivl
xchg
cld
pop
jne
mov
imul
sub
lret
cmpb
push
adc
sub
dec
fcomps
push
sub
push
in
daa
pop
push
cmpsb
int
outsb
mov
lock
pushf
out
push
dec
mov
sahf
mov
lds
mov
int3
xlat
mov
mov
aaa
out
mov
das
add
cwtl
xor
les
adc
movsl
push
imul
stos
scas
jmp
popa
stos
lods
sarl
xor
and
adc
push
mov
push
imul
mov
jo
pop
cmpsb
fsubs
rolb
cmpl
jle
adc
sahf
out
fstl
insb
jmp
cld
lahf
fs
ja
pop
sbbb
jmp
sahf
shrl
sub
out
cltd
mov
ds
pop
xor
push
inc
jg
pop
mov
mov
int3
xor
xchg
cltd
mov
ret
jecxz
pop
push
in
mov
cmp
cmpsl
ds
movsl
jnp
fmull
daa
cmp
repz
sarl
mov
or
push
xchg
sub
add
ds
cmpsl
sbb
xchg
in
pop
je
xchg
fdivl
jmp
cmpsl
mov
sti
dec
push
jge
inc
or
inc
mov
inc
cmp
push
icebp
mov
test
adc
outsb
sub
fiaddl
dec
ss
std
in
push
shlb
aam
xor
mov
mov
sahf
mov
int3
repnz
xor
cmp
xchg
pop
das
xchg
andb
imul
and
or
adc
shlb
push
pop
inc
jge
mov
or
or
mov
dec
rcrl
in
push
ret
clc
cmp
push
out
mov
repnz
jnp
aad
or
inc
hlt
daa
xor
mov
rcll
ja
adc
or
out
jns
inc
jae
out
out
cmpsb
std
lds
test
shrl
and
dec
scas
mov
lods
adc
pop
shl
sub
lds
scas
in
mov
pop
mov
xor
xchg
mov
in
aad
enter
fs
mov
in
rcll
adc
push
mov
sub
aad
testb
enter
lods
or
xor
out
popf
rol
movsl
sub
xchg
adc
std
icebp
pop
hlt
mov
int3
and
xor
inc
cmp
mov
popf
out
popa
ljmp
mov
mov
mov
in
cld
lods
loop
repnz
mov
iret
xor
cmpsb
sbb
movsl
or
sarl
imul
and
xor
mov
jbe
dec
push
mov
insl
sbb
xor
rolb
jge
mov
test
adc
add
popa
xor
jl
movsb
andb
inc
jne
sahf
cmp
aas
out
jae
dec
pop
hlt
xchg
out
bound
sbb
sahf
popa
lods
test
cmp
lcall
mov
stc
jl
scas
cmp
std
aas
jmp
daa
arpl
mov
out
xor
push
movsl
cli
movsb
les
mov
inc
sbb
xchg
cmp
sub
faddl
xchg
add
ss
bound
pop
mov
movsl
dec
mov
sbb
adc
bound
movlps
idivl
dec
outsl
popa
jmp
rorl
popl
mov
mov
push
cmp
mov
pop
pop
stc
lods
xchg
daa
jge
push
shrb
add
pop
test
insl
and
mov
lcall
jnp
into
add
rol
icebp
push
sbb
inc
jl
pusha
mov
repnz
pop
adc
es
jns
cmpsb
dec
addr16
shrb
jne
mov
lods
mov
rol
jnp
popf
int
sar
jne
lcall
into
je
jne
mov
mov
adc
mov
daa
mov
stos
idiv
mov
mov
xchg
pop
cmpl
int
pop
mov
jge
xchg
std
jge
jecxz
movsl
js
dec
test
jae
cld
stos
in
pop
and
mov
dec
cmp
jns
adc
addb
aaa
popa
iret
cmp
adc
xor
roll
mov
push
pop
xlat
lods
pop
and
adc
subb
sarb
mov
mov
pop
inc
xor
cmp
mov
jno
jns
jge
out
jno
in
xor
jne
xchg
dec
dec
cs
jne
lds
in
cmp
cmp
jg
add
vmread
fstpl
cltd
push
aam
or
mov
push
test
rcll
jns
leave
stos
clc
out
sbb
mov
bound
ret
sti
rorb
clc
inc
sbb
xchg
mov
or
mov
ja
fists
mov
cwtl
hlt
scas
stc
ret
mov
stc
or
dec
mov
in
sub
pushf
data16
lret
ret
aad
mov
stos
and
into
sub
mov
test
add
push
pop
add
ror
push
and
mov
jnp
loopne
inc
les
mov
and
mov
fcmovbe
xchg
repz
mov
mov
fmuls
out
xorb
movsl
pop
rclb
orb
aas
hlt
mov
pushf
lds
pop
sti
sarl
mov
dec
mov
xor
cmpsb
shrl
jle
pushf
sub
push
test
jbe
lods
shr
int3
sub
add
add
mov
in
fucomip
pop
mov
push
rolb
xchg
inc
dec
in
jae
int
pop
pushf
loopne
push
nop
mov
cmp
pushf
dec
rorl
ja
cmp
cld
mov
arpl
mov
add
scas
ljmp
push
cmc
sub
mov
mov
jae
cmp
sarb
cld
scas
cmp
cmp
stos
pop
mov
fldenv
mov
pushf
addr16
push
pop
cmpsb
xchg
pop
cld
roll
sbb
sub
andl
sub
inc
pop
add
push
ljmp
mov
cli
and
test
popa
dec
shlb
movsl
push
ljmp
ret
addr16
push
and
inc
fstpt
add
or
jle
shr
shlb
in
sub
clc
xchg
inc
push
dec
mov
stos
sahf
int3
mov
push
outsl
push
push
lock
add
pushf
push
nop
mov
mov
lods
repz
xchg
cltd
xor
inc
mov
mov
sub
mov
lds
push
lods
jg
pop
adcl
mov
sub
icebp
aam
jb
lret
mov
or
outsb
loopne
push
xchg
gs
cltd
aaa
mov
faddp
and
dec
ret
insb
adc
and
pushf
lods
int
call
mov
cmp
dec
push
in
jno
mov
arpl
and
stos
js
sarb
adc
jmp
fs
fldl
jo
xchg
sub
mov
test
stos
pushf
sahf
add
mov
cmp
sub
mov
arpl
cs
mov
lods
xchg
lret
xchg
push
sti
int3
shrl
jae
pop
cwtl
adc
xor
test
or
loop
js
je
cli
xlat
rcr
out
lahf
or
fisubrs
xchg
push
push
cmpsl
xor
pushf
test
sbb
push
fwait
or
aas
into
dec
fisubrs
dec
movl
and
movsb
or
mov
mov
int3
rep
fisttpll
and
cmp
cmp
inc
mov
cli
add
out
pop
lret
movsb
pop
jl
popa
fstps
pushf
rorl
int
sub
loopne
mov
movsl
add
fwait
iret
dec
mov
loop
pop
adc
add
xor
jle
shl
xchg
sub
push
lahf
push
pop
fucom
mov
popf
jne
add
je
xor
out
inc
popf
jg
jecxz
hlt
pop
inc
mov
mov
dec
fistps
pop
xchg
mov
cmp
out
inc
pop
mov
test
sub
mov
add
icebp
pop
mov
xor
or
fwait
shl
adc
jge
mov
ficomps
rcl
ja
mov
mov
lods
stos
cltd
push
mov
ret
mov
mov
sbb
push
into
adc
or
mov
iret
ja
xchg
pop
push
mov
sub
jns
loop
daa
stc
add
or
xchg
add
sbb
in
push
loope
sbb
subb
mov
pop
dec
lea
lods
repz
mov
scas
fcmove
int
ss
dec
das
rcrb
fnstcw
outsb
jmp
mov
or
or
rcll
scas
xchg
andl
add
aas
mov
mov
lock
subl
pop
push
enter
push
sub
pop
pop
insb
call
pop
into
addr16
into
call
in
xchg
jl
inc
adc
int3
sub
push
jecxz
imul
rol
rolb
fcmovnb
daa
stos
xchg
adc
and
nop
enter
jge
repz
adc
sbb
add
scas
mov
push
bound
pop
pop
gs
lods
movsl
mov
xor
and
shrb
lea
jl
enter
imul
or
pop
in
popa
jmp
mov
lea
test
loop
movsl
aam
adc
mov
stc
popa
pop
scas
dec
dec
ret
ss
pushf
inc
and
mov
sbb
aad
mov
das
inc
fildl
xchg
ljmp
addr16
ret
fs
mov
lds
pop
and
insl
or
push
xchg
jne
or
jle
mov
shll
add
inc
ljmp
mov
sbb
insl
into
clc
test
mov
ja
sbb
sahf
or
mov
xor
std
rcll
dec
std
jb
stc
fdivs
fsubl
int3
jecxz
rcr
std
mov
popf
add
jg
sarb
aas
mov
int3
xor
sbb
test
js
sub
pusha
fld
cmp
stos
inc
fstpl
unpckhps
pop
sub
lret
dec
loopne
into
sti
xlat
ljmp
jle
iret
fstpt
xor
js
cli
xor
mov
adc
nop
lods
xor
cmp
fwait
mov
xor
mov
mov
mov
pushf
cmp
enter
mulb
add
stc
push
shrb
cmp
mov
add
pushf
mov
les
gs
stc
rorl
pop
or
call
cmpsl
dec
stc
ja
adc
sbb
scas
xchg
mov
out
sbb
fcomps
test
into
pop
sarl
inc
inc
or
or
sbb
popa
movsl
push
orb
test
jle
fistl
dec
lret
sub
jl
sbb
into
inc
test
leave
iret
or
adc
pop
dec
pop
lods
cmpsb
scas
jno
cmpsb
mov
push
imul
dec
mov
adc
sub
pushf
cwtl
jmp
cmp
pop
xchg
mov
and
out
xchg
int3
sar
jns
add
or
stc
xorl
mov
dec
xchg
jg
xchg
jg
cmp
inc
in
add
sbb
sbb
push
pop
mov
lock
mov
clc
movsb
cwtl
or
push
pop
lods
andb
out
pop
aad
imul
cli
mov
push
xchg
ds
cltd
mov
movsl
inc
push
fidivrs
push
sub
jmp
mov
les
fistpl
cmp
mov
jecxz
xor
mov
adc
int3
mov
sahf
and
cmp
push
jp
sub
xor
dec
jle
cwtl
inc
xor
mov
push
call
xchg
fs
and
lcallw
sbb
adc
rclb
test
jae
pop
xchg
pusha
lods
mov
ret
xchg
loope
fcompl
fisubl
and
movsb
ds
imul
jg
out
sahf
adc
icebp
shll
pop
lds
dec
aad
movsb
add
popa
fidivrl
insb
cli
sbb
je
dec
inc
or
cld
push
xchg
jl
jge
mov
outsb
mov
rcrb
push
pop
insb
adc
int
sbb
xchg
stc
das
mov
xor
xchg
into
js
shlb
jb
sub
add
adc
repz
xor
mov
push
jb
mov
dec
testb
shlb
sarl
addb
aam
mov
dec
in
imul
les
call
in
push
ss
lods
enter
icebp
incl
sub
cmpsl
add
out
arpl
cld
push
mov
fists
and
popaw
daa
cwtl
inc
aad
repz
fcmovnb
ret
dec
test
das
fsubl
jnp
jnp
jge
xchg
dec
lea
lahf
jne
movsl
mov
hlt
add
xor
sub
fcomps
dec
dec
inc
rclb
push
mov
outsb
out
movsl
sbb
inc
mov
fwait
jl
aas
daa
xor
fs
mov
ss
incl
pop
or
inc
fs
cli
testb
in
pop
fisubrl
iret
cmpsb
test
mov
mov
sbb
shlb
das
stc
std
push
pop
cmpsb
fxch
sub
mov
stos
sub
cmp
mov
aam
sbb
cs
push
in
push
cmp
and
out
lock
lods
push
xor
call
pop
jb
push
jae
xchg
decb
jmp
sarb
int
jmp
or
movsb
xor
mov
push
cltd
inc
testl
sub
cmpsb
sbb
imul
clc
mov
sbb
mov
out
popa
out
enter
out
stos
cmp
fiaddl
xlat
out
push
mov
dec
pop
mov
lahf
push
cmp
sbb
or
xchg
into
mov
clc
push
or
lea
dec
ljmp
ljmp
mov
shl
outsb
cmpsl
dec
and
xor
mov
pop
and
lcall
mov
lock
bnd
popa
inc
mov
addr16
movsl
pop
sbb
sarb
loop
mov
outsb
imul
inc
sti
roll
push
mov
pop
jecxz
add
mov
mov
pusha
jo
in
lods
xor
inc
clc
pop
sub
cmpsb
sbb
mov
cmp
pushf
cmpsl
dec
ret
jl
add
add
jns
out
inc
lret
add
fildl
in
jne
lods
sub
loop
push
and
cmp
fisttpl
jae
inc
and
or
mov
inc
pop
xchg
mov
ljmp
lret
test
std
cltd
cmpsl
das
jg
jmp
add
adc
fmuls
loopne
or
xor
mov
out
aaa
and
ds
out
pop
stos
dec
dec
fadds
sub
push
pop
roll
dec
pop
pop
call
inc
adc
mov
outsl
je
rcll
add
pushf
ja
jmp
fs
into
xchg
mov
mov
sub
cltd
mov
xchg
push
xor
inc
insl
and
ret
cld
mov
mov
jae
jg
leave
sbb
pop
andl
mov
jb
leave
add
push
xchg
sub
ret
cmp
pop
into
roll
cmp
sbb
add
mov
pop
mov
outsl
test
add
push
ret
shll
mov
sbb
mov
xlat
sarl
scas
popf
xchg
int3
adc
add
jae
cli
js
inc
fisubs
pushw
rcrl
mov
data16
dec
mov
nop
out
mov
fcoms
call
xchg
mov
cli
insl
pop
push
xor
add
pushf
test
xchg
rclb
mov
daa
add
pusha
xchg
enter
inc
sub
imul
int
or
js
aad
cmc
aad
mov
aam
lea
das
mov
jle
inc
hlt
mov
or
sub
outsb
test
fs
les
pop
test
xchg
mov
mov
xor
leave
or
sub
mov
or
and
enter
sbb
rorb
insl
dec
cmp
popa
shrb
pop
les
mov
repz
out
jae
pushf
inc
mov
rclb
call
jge
jae
in
das
int
pop
pop
add
call
jmp
cmp
outsl
lds
xchg
out
inc
mov
mov
inc
lods
or
insl
mov
clc
scas
push
pop
lcall
outsb
stos
inc
xor
xlat
lcall
sbbl
push
pushf
rol
xchg
shll
jg
xchg
rcrl
into
rcrl
sub
ret
test
jmp
lods
pop
into
es
xchg
xchg
lds
shl
xchg
xor
jo
jmp
push
addr16
push
xor
push
mov
mov
fwait
push
cmp
mov
push
jnp
cmpsl
jmp
pop
jecxz
ja,pt
adc
loop
add
outsb
sbb
xor
fdivs
mov
loopne
int
mov
push
adc
les
sub
push
xor
sub
xchg
push
insl
sahf
inc
jmp
adc
rorl
in
mov
jecxz
sar
push
mov
jecxz
call
shrb
mov
fisubrs
dec
fisubrs
xchg
shr
jne
inc
jle
fsts
inc
fnstsw
sarb
fsubrp
push
sub
mov
lret
adc
inc
mov
data16
jecxz
cmp
fucomi
push
sti
dec
jae
cmp
call
sbbb
or
ficomps
pop
mov
pop
roll
cmp
xchg
sub
cwtl
rcl
je
out
jae
shll
xor
inc
stos
adc
pop
jge
dec
cmpsl
jbe
xchg
lahf
mov
cmp
repnz
xchg
std
mov
shrl
rcr
test
pop
jmp
daa
shll
and
lahf
and
mov
sbb
sar
push
fsub
mov
dec
xchg
jge
mov
xchg
pushf
outsl
and
adc
jecxz
rorl
jne
mov
push
aad
sbb
test
mov
ffreep
mov
movsl
lret
rclb
pop
sbb
ds
pop
mov
mov
adc
sarb
or
xor
push
pop
icebp
scas
test
lds
and
mov
test
cmp
mov
mov
loope
js
je
pop
rep
push
shlb
inc
sub
and
push
roll
enter
shll
je
push
pop
call
cltd
inc
xor
leave
outsb
and
in
mov
aas
mov
cs
xor
test
inc
lock
and
cltd
cmp
shl
sub
movb
sti
roll
and
fistpl
mov
cmp
jne
fidivl
xchg
loopne
pushl
leave
pushf
cs
jo
lods
mov
daa
sahf
lods
mov
jecxz
and
insl
push
inc
and
xor
mov
hlt
mov
push
fadds
fxch
cmp
inc
je
push
in
shrl
in
jo
sbb
in
pop
aam
pop
inc
sub
pop
dec
pop
pop
inc
frndint
mov
mov
stos
addr16
inc
inc
ret
repz
mov
cli
mov
pop
cmp
lods
xchg
pusha
out
inc
mov
cwtl
js
stos
pop
adc
jp
jno
jg
push
dec
addl
xchg
and
xor
cmp
adc
xor
cmp
sub
pop
out
dec
sub
sbb
mov
mov
out
adc
add
repnz
sub
xchg
xor
and
mov
dec
mov
push
incb
je
lods
andb
adc
fdivrs
mov
push
pop
fcmove
shrl
and
pop
lock
loopne
sub
sub
or
pop
shll
or
mov
add
jo
insl
cmp
sahf
xchg
mov
xor
cltd
mov
push
inc
pop
xchg
cld
int3
popa
roll
mov
das
xchg
sbb
push
dec
push
js
hlt
mov
std
ret
mov
arpl
cmp
fdivs
and
nop
add
sti
clc
mov
aaa
jne
xor
imul
incl
sub
int3
dec
sub
sub
punpckhbw
cld
ror
jp
jge
pop
and
dec
test
fdiv
inc
test
ja
pop
pop
mov
inc
ja
xchg
lret
imul
mov
lds
and
pop
lods
movzbl
adc
xor
shll
jl
out
jmp
mov
xchg
sbb
icebp
lea
sbbl
mov
jecxz
cmc
sbb
or
aad
lods
jns
and
pop
or
test
dec
and
xlat
hlt
mov
push
cmpsb
jl
inc
popa
pusha
cmp
movsb
xchg
shll
or
pop
inc
imul
pop
popf
roll
sti
test
dec
cs
sarl
sub
repz
scas
fisttpll
or
rcll
mov
ficomps
cmp
adcb
xchg
call
push
or
hlt
add
imull
xchg
call
lods
in
jge
notb
cmpsb
xchg
mov
sub
fisttps
pusha
hlt
sub
call
mov
andb
mov
cltd
movsl
cmp
int3
pop
ljmp
scas
ficomps
repnz
into
ret
mov
inc
stos
sbb
xor
jno
test
xor
push
mov
sahf
adcb
mov
out
inc
xchg
shll
mov
mov
cmp
aad
cltd
jno
or
into
rcll
xchg
rorl
test
addr16
inc
inc
mov
and
enter
sti
insl
ud1
mov
jmp
pop
shlb
rcll
sub
jno
into
rcl
roll
addl
cwtl
inc
jae
cmpsb
mov
sub
pop
sub
xor
es
imul
inc
xor
mov
data16
fsts
push
or
mov
cmp
cmp
sarl
lret
outsl
in
rolb
aam
imul
repz
sub
mov
fcoml
shlb
call
frstor
lods
xchg
test
sarl
stos
cmpl
pmaxsw
shlb
int3
dec
dec
mov
aam
push
enter
sub
mov
mov
cmpxchg
movsl
popf
xchg
xor
outsl
sub
ja
and
sarl
imul
adc
pop
imul
popf
lock
test
pop
mov
call
mov
sbb
push
subb
push
jae
and
pop
cmpsb
jnp,pt
pop
fsubrs
bswap
rcr
sarl
pop
pop
mov
test
xchg
ljmp
xchg
inc
add
push
add
rorl
inc
cmc
sarl
sub
rcll
push
push
mov
inc
lahf
sbb
leave
xor
inc
cmp
shll
aas
sub
in
test
call
add
aam
adc
out
ds
xchg
inc
xor
sub
xchg
je
fbld
mov
jne
stos
ljmp
jns
ffree
fldl
repnz
fdivr
sub
bswap
xor
mov
and
xchg
dec
lret
xchg
test
and
rorb
mov
add
mov
xlat
idivl
xchg
dec
mov
cld
cmp
and
int3
dec
mov
popf
mov
xchg
ret
push
xchg
int3
jmp
or
push
mov
dec
dec
sbb
jne
xchg
int3
loop
mov
shll
ljmp
stos
sub
cmp
pop
mov
mov
pop
fisubrl
repnz
pop
lods
daa
mov
adc
xor
ds
shl
aas
sbbl
inc
pop
sbb
pop
mov
fimull
sub
xchg
and
in
dec
pop
xor
dec
flds
add
cmp
and
fldl2e
pop
or
rcl
mov
repnz
cli
stos
add
clc
out
dec
ret
ffree
adc
pop
push
shll
stc
add
iret
rorl
add
pushf
rcrl
inc
push
or
mov
jo
ficompl
shrl
dec
arpl
push
mov
or
push
adc
xor
or
pop
mov
movsl
in
dec
pop
scas
mov
int
sarl
pushf
lods
ficoms
pop
sub
sarb
rcrb
inc
aas
jae
lret
xor
jl
or
repz
dec
cmpsl
jle
pop
int
gs
sub
pop
inc
hlt
inc
pop
fadds
imul
ffreep
iret
icebp
sub
in
lar
fs
cwtl
inc
pop
sub
out
sub
cmp
add
mov
jecxz
movsb
xchg
aad
push
dec
xor
pop
scas
test
mov
adc
mov
jecxz
aam
fldl
cmc
call
dec
ds
or
inc
push
sub
ret
mov
mov
sar
imul
pushf
jp
jg
or
cld
rcr
sbb
adc
insl
sub
dec
and
gs
push
mov
mov
push
je
mul
stc
xchg
xchg
in
ret
stc
into
in
mov
fdiv
mov
roll
rol
adc
ret
lods
lret
sub
rcrl
pop
dec
shlb
mov
aad
adc
bound
pop
jge
and
insl
aas
inc
sahf
stc
adc
shrl
cmp
xchg
inc
pop
adc
sub
icebp
pop
insl
mov
stos
mov
mov
mov
pop
add
ss
mov
mov
mov
push
mov
pop
sarb
sarl
and
movsb
popa
out
pop
push
je
imul
add
inc
push
and
inc
les
fdivr
push
lock
sbb
jp
lcall
sti
sbb
sahf
es
pop
mov
jbe
mov
push
jns
mov
out
cmp
adc
lret
jbe
cmp
in
call
mov
aam
xchg
jo
shll
sub
iret
fs
or
xchg
add
rclb
pop
lods
mov
data16
dec
rol
mov
jns
in
mov
jle
add
lret
mov
mov
jbe
in
push
mov
dec
aam
jno
pop
push
dec
int3
inc
xor
int
cld
imul
roll
outsl
mov
add
mov
jbe
enter
dec
or
rorl
sbb
ret
clc
mov
xchg
addb
das
inc
lret
jne
aas
or
xchg
dec
xchg
jecxz
fmul
pop
sub
mov
repnz
ficompl
adc
add
popf
stos
popa
cmp
ret
push
test
in
mov
inc
insl
sub
dec
push
mov
mov
jl
mov
ss
mov
sbb
and
add
push
xchg
jg
xchg
test
aad
ret
in
and
and
sbb
sbb
push
xchg
xchg
mov
sub
loop
and
cmp
mov
mov
roll
and
xchg
dec
pop
inc
add
sarb
mov
cmp
movsl
mov
pop
aaa
lret
fbld
subb
iret
pop
rcl
hlt
mov
pop
mov
pusha
jb
lret
call
mov
sub
cmp
popa
lds
sub
roll
jg
ss
stc
lret
sarl
jl
sti
stos
pushf
mov
push
cmp
jo
mov
adc
sub
inc
xchg
sahf
pop
shll
xor
adc
mov
mov
sahf
scas
clc
jno
outsb
xchg
aad
mov
adc
shlb
faddl
mov
pop
pop
xchg
ret
jae
add
mov
mov
fidivl
bound
stos
das
ljmp
mov
js
shll
fistpll
add
repnz
lret
xor
repnz
fldl
jmp
mov
bound
adc
out
cltd
add
mov
xor
ds
xchg
lock
xchg
pop
xor
lcall
or
out
push
daa
pop
jbe
xchg
dec
lcall
inc
cmp
lea
and
out
mov
lods
addr16
and
push
shll
out
lds
pop
sub
push
lea
inc
je
movsb
sbb
frstor
insb
and
lods
fcmovnu
xchg
ja
mov
mov
and
mov
loop
mov
push
jge
imul
xor
or
jbe
mov
mov
popf
jge
xchg
or
dec
movb
and
mov
in
add
mov
jecxz
mov
outsb
popf
adcl
push
lods
fmuls
mov
pop
and
out
repnz
push
pop
mov
add
mov
mov
repnz
xchg
fnstcw
add
test
jmp
daa
fcmove
fwait
daa
adc
jae
sbbb
and
xchg
es
pop
or
jns
enter
mov
shlb
lfs
jbe
rorl
inc
lods
fmull
mov
xor
adc
lret
jmp
int3
mov
mov
mov
mov
xlat
int
shll
bnd
ljmp
shll
push
int
pop
clc
push
cltd
xchg
js,pt
dec
mov
inc
mov
int
pushf
push
data16
int
lret
jne
inc
pop
test
shll
xor
push
jo
test
adc
jmp
mov
lcall
insb
mov
mov
ds
scas
push
or
repz
xchg
test
stc
mov
jl
inc
out
xchg
dec
pushf
loop
cmpb
jl
decb
jnp
roll
pop
inc
out
cwtl
push
movsl
movsb
adc
fimull
jno
insl
cmpsl
bnd
mov
lods
addr16
xchg
popa
jl
mov
int3
mov
sbb
jns
fsubrs
mov
idivb
xchg
xchg
lahf
rcr
and
pop
mov
and
mov
inc
mov
aad
sub
jne
or
mov
push
leave
adc
mov
in
jns
push
std
lea
adc
dec
aas
into
jecxz
sahf
sarl
sbb
pop
out
subb
mov
fisubrs
std
ljmp
adc
jecxz
xchg
mov
pop
dec
mov
jae
fdivrl
inc
lret
xchg
int3
jg
mov
aam
nop
xchg
cmpsb
dec
xchg
push
sub
cmpsl
jmp
lea
fsts
out
adc
shl
call
sub
lret
mov
cli
rcl
sub
mov
lcall
xor
js
adc
fucomi
mov
xchg
mov
sbb
jnp
loop
mov
cmp
in
pop
repnz
mov
mov
xor
dec
pop
mov
push
repz
scas
iret
pop
cmpl
fsubrs
adc
ss
addl
dec
rorl
jecxz
loope
ret
je
mov
into
dec
shrl
dec
roll
mov
aad
pop
inc
mov
inc
mov
pop
les
cmpl
nop
repnz
daa
push
inc
pop
sbb
jns
dec
pop
std
in
fists
cltd
mov
xchg
test
aas
nop
test
les
es
loop
int3
sub
fwait
sub
xlat
shrb
mov
adc
push
pop
sti
push
mov
out
int
and
inc
push
ror
mov
mov
xor
xchg
leave
out
repnz
cld
popa
cmpsl
rorl
add
pop
mov
rclb
mov
push
xchg
je
cs
cmp
lcall
inc
cmp
lcall
inc
test
mov
sbb
pop
mov
das
inc
push
fcmovnb
fwait
jle
sbb
movsl
push
lret
lret
lret
stc
adc
iret
pushf
inc
divl
int3
lret
sub
cmp
push
adc
xchg
ret
cmp
cmp
daa
adc
xchg
mov
sahf
mov
xchg
loope
mov
mov
add
push
adc
ja
xchg
and
test
repnz
out
ret
sti
sub
clc
enter
inc
xlat
cs
sub
scas
adc
add
int3
loopne
dec
add
scas
xchg
filds
or
inc
inc
roll
pop
xorb
xor
jge
pop
cmp
pop
repnz
push
imul
or
bound
ja
sahf
enter
cmpsl
repnz
jp
mov
aam
fimull
not
lds
xlat
lret
cs
mov
sbb
call
mov
cmpsl
adc
stos
js
pop
mov
and
mov
outsl
pop
add
int
sub
xchg
lcall
mov
negb
cmp
test
inc
pop
movsl
in
outsb
popf
adc
ficompl
fcmovu
pop
enter
jl
mov
pushf
mov
cld
fdivr
or
insb
fistps
aam
mov
adc
andl
nop
push
pop
sbb
mov
das
cmp
mov
sub
add
jae
mov
rcll
leave
mov
fcomps
mov
xchg
inc
lods
mov
xchg
in
or
xchg
pop
adc
jmp
mov
sub
aaa
mov
ficoml
mov
mov
cmp
inc
pop
stos
js
xchg
xchg
cmp
imul
mov
xchg
fimull
and
push
jg
sbb
xchg
sub
lock
aaa
into
pop
lcall
mov
mov
ret
shlb
and
sub
cmp
fstps
push
loop
pop
les
push
fsubp
sub
mov
sarl
rcll
pushf
add
repnz
push
xchg
loop
push
mov
sbb
mov
jl
dec
cmpsl
xor
sub
popa
mov
ss
mov
or
mov
adc
inc
int
fistpl
rcr
decb
inc
sti
fmuls
test
push
lds
cwtl
das
mov
leave
subl
aas
hlt
and
pushf
shlb
xchg
push
rcrl
mov
push
xchg
shrb
dec
fucomi
fchs
push
cld
loopne
cs
lcall
inc
out
mov
outsb
rol
inc
movsl
mov
mov
iret
and
mov
test
repz
jb
stc
lahf
cmp
test
rcrb
cmp
insb
jne
pop
movsb
jg
jbe
into
jge
out
mov
mov
inc
lods
or
sbb
mov
mulb
jge
dec
mov
sbb
mov
cli
xchg
sbb
fisubrl
stos
lret
lret
xchg
stmxcsr
mov
pop
shll
xchg
aas
mov
mov
pop
sbb
cmp
inc
icebp
sti
lcall
pushf
or
pop
mov
shlb
push
jmp
fstps
orb
fwait
mov
xchg
lret
sbb
mov
xlat
fstps
cmpsl
sbb
addr16
mov
int
addr16
or
stos
mov
outsl
pushf
pop
leave
mov
jg
repnz
and
jo
and
loope
sub
jmp
out
push
jp
shl
pop
insl
repnz
inc
aad
lret
mov
sbb
sub
loopne
fists
es
sub
and
push
fsubrl
lret
in
and
sbb
frstor
lods
jecxz
xchg
popf
mov
inc
inc
clc
xor
add
shrl
clc
std
xchg
push
mov
adc
xlat
addr16
fadd
sbb
cld
sub
jns
cmpsb
inc
dec
and
pop
mov
xchg
mov
add
push
add
xchg
mov
xchg
lds
cmp
inc
jge
add
dec
add
mov
sbb
outsb
mov
scas
notl
jmp
shl
dec
outsb
in
mov
mov
xchg
mov
and
or
ret
outsb
ffree
mov
mov
clc
mov
cs
imul
and
sub
repz
pop
rcl
mov
loope
or
ficompl
jg
popa
fldt
sub
push
ror
mov
pop
adc
add
xchg
mov
and
ret
out
ss
pop
popa
pushf
or
sub
lods
xchg
cmp
fmuls
test
out
lret
mov
xor
aaa
pop
xchg
imul
jl
addb
mov
sub
ljmp
setl
mov
or
pop
iret
cmp
int3
mov
mov
repnz
outsl
xchg
adc
shrl
in
dec
mov
cwtl
pop
shl
push
cmpsb
sbb
jg
sbb
push
inc
daa
mov
xchg
andl
dec
lods
loope
lods
dec
out
inc
xlat
push
cwtl
test
xlat
stc
jno
stos
pop
push
mov
xchg
mov
sbb
xor
and
push
pop
cld
in
pushf
cmpl
out
popa
scas
mov
add
push
out
push
mov
int3
shrl
das
out
push
jge
push
and
mov
or
test
cmp
ljmp
pop
adc
push
or
adc
cli
xchg
les
out
andb
lret
mov
cmp
mov
inc
sub
fcmove
hlt
shlb
mov
sbb
rcrl
mov
mov
dec
jp
shl
dec
xchg
xchg
int3
sub
sub
sti
pushf
popa
imul
ja
loopne
adc
push
jge
fisttpll
dec
dec
lods
pushf
push
add
out
int
or
pop
mov
xchg
lods
sbb
mov
int
jge
and
and
out
pop
jle
outsb
popa
xchg
xchg
pop
pop
neg
lods
adcl
push
cli
rorl
gs
test
push
pop
jecxz
pop
arpl
js
adc
fcmovbe
daa
inc
test
cmp
sti
sbb
xchg
imul
mov
mov
mov
xchg
push
aam
mov
mov
inc
out
add
fst
sbb
in
mov
pop
shll
xor
hlt
jge
xchg
fsubl
popa
push
mov
fistl
jmp
dec
jno
cmp
cmp
shll
adc
or
out
jmp
jns
and
pop
mov
bound
sti
pop
shr
sbb
out
roll
xor
adc
outsl
cmp
mov
sbb
cld
xor
fsubl
subb
xchg
or
call
and
rcll
movsl
add
jmp
fwait
outsl
or
xor
test
cs
dec
jb
sub
sub
fsubrs
rorl
cmp
lods
dec
mov
dec
nop
mov
and
call
faddl
sbb
sbb
lcall
adcb
fwait
into
inc
bound
inc
out
mov
shll
inc
adc
roll
movsb
movsl
test
cmpsl
ja
jle
mov
decb
add
add
and
jne
ljmp
add
ret
mov
dec
jns
aaa
jge
hlt
mov
fimull
loope
repnz
sub
pop
jnp
les
ja
jo
jmp
jbe
jg
test
add
mov
cmc
and
dec
inc
testl
pushf
dec
cmp
add
mov
mov
add
int3
dec
pop
add
and
test
insl
ret
xor
repnz
sti
les
stos
cmp
fcmovu
in
rclb
lret
scas
hlt
adc
mov
cmp
jmp
test
xor
jae
jecxz
cmp
push
jmp
adc
ficompl
cld
pop
test
repnz
adc
pop
dec
je
xlat
movsl
push
insl
fdivrs
jae
rol
dec
cmpsl
call
stc
test
xchg
orl
shr
pop
movsl
pusha
gs
push
lods
mov
adcb
inc
clc
jnp
int3
ja
or
pop
and
scas
sub
pop
add
bound
cmc
sbbl
rorl
inc
pop
sbb
enter
mov
sbb
je
dec
rcr
mov
xchg
out
inc
mov
js
ficoms
xor
xchg
mov
inc
pop
dec
stc
ret
icebp
pop
sub
cpuid
lret
xchg
cmp
mov
pushf
cli
rcll
xchg
lods
imul
jp
pop
or
inc
sbb
mov
push
andl
js
frstor
mov
lea
xor
and
pusha
push
fisubl
out
out
xorb
push
and
fnstsw
xor
mov
mov
push
scas
roll
arpl
inc
outsl
lds
inc
add
addr16
jae
sbb
mov
xor
pop
sub
cmp
inc
push
je
ja
push
jge
fs
in
xor
aad
pop
xor
push
aam
and
lret
mov
shrl
repnz
jmp
es
jg
add
push
add
incl
push
pop
mov
inc
sbb
lret
fstl
fs
adc
xor
das
sub
icebp
insl
jmp
movl
insb
push
ror
or
mov
call
dec
and
ss
lock
lret
rcr
sbb
push
mov
or
ret
mov
cmp
push
jne
xchg
adc
add
mov
mov
mov
xor
out
sarl
push
push
sahf
sub
bnd
scas
sub
addr16
mov
xchg
andb
add
mov
mov
sub
loop
adc
pop
pop
xor
lods
push
xor
out
xor
rorl
mov
mov
ds
pop
or
or
mov
adc
dec
daa
adc
sub
sahf
enter
xrelease
and
push
std
inc
fcmove
push
pop
mov
testb
fwait
mov
loop,pt
lods
sbb
es
imul
pop
adc
data16
mov
lds
xor
sbb
test
push
mov
addl
push
in
or
ja
inc
scas
mov
add
jae
pushf
rol
pushf
jae
shl
dec
int
xlat
jge
into
add
dec
pop
nop
jl
out
mov
rolb
fistl
dec
mov
sbb
stos
add
call
pop
push
rcrl
repnz
orl
mov
push
xchg
stos
pop
repz
dec
fnsave
iret
inc
cmp
out
sub
repnz
mov
test
cmpsb
inc
pop
repz
xlat
aad
out
repnz
leave
sahf
sti
lret
jae
pop
pop
sbb
inc
pop
jns
rol
dec
inc
push
loopne
sbb
inc
lods
call
xchg
movsl
or
inc
out
lods
sub
push
insl
or
sahf
les
jecxz
mov
sbb
shll
fldcw
mov
add
push
add
in
imul
jge
iret
clc
pop
push
push
insb
int
pop
sub
xchg
in
jecxz
add
das
dec
lcall
lods
sbb
xor
jb
cmp
dec
mov
es
enter
and
pop
cmp
mov
shll
and
pushf
lahf
shlb
jae
iret
xchg
adc
std
mov
lods
push
aaa
lods
cs
mov
xchg
enter
lea
cmpsb
in
es
xchg
inc
cs
fistpl
xor
lret
rorb
ficoml
xchg
jb
iret
mov
mov
icebp
push
into
xor
fidivs
sub
lahf
push
or
jl
adc
sbb
jl
hlt
pop
dec
xchg
push
clc
jl
push
lret
out
sub
add
lea
mov
cmpsl
rcr
lock
out
ljmp
sub
cltd
sbb
ljmp
nop
push
push
scas
or
mov
out
sub
push
std
lods
movsl
dec
fisttps
pop
mov
out
add
mov
in
lods
mov
mov
test
jne
mov
jge
mov
lods
mov
arpl
sub
or
addr16
loopne
mov
repz
mov
sbb
push
subl
movsb
sahf
pop
mov
sbb
clc
xor
cmpsb
sbb
fs
jns
xor
or
jmp
stos
mov
fucomi
mov
pop
ljmp
sbb
loopne
movzbl
cmp
pop
push
mov
int
push
mov
roll
pop
sarl
xchg
jmp
adc
jge
movl
or
loop
xchg
inc
clc
imul
mov
cld
pusha
pop
mov
insl
dec
test
repnz
xlat
sti
inc
cmp
fimull
movl
cmp
dec
pushf
adc
out
jnp
dec
jg
pop
xor
test
pop
aam
sbb
das
sbb
inc
pop
sbb
aas
mov
xchg
push
jb
test
or
mov
sbb
leave
mov
daa
lcall
and
inc
rorl
cmp
lret
jae
addr16
scas
imul
push
mov
mov
mov
ss
jmp
vmovss
sub
lret
lods
jmp
mov
push
testb
pop
mov
rcll
push
jl
lcall
sub
imul
jne
add
jmp
add
inc
and
mov
fadds
jge
fcoml
pop
dec
push
enter
pushf
push
inc
je
and
jns
imulb
popl
out
inc
sub
jl
rcll
dec
xchg
shrb
int
sar
inc
aas
sub
insb
testl
or
xor
dec
dec
loop
dec
subl
lcall
push
mov
or
sarl
inc
inc
push
sub
and
stc
cld
decb
push
dec
loope
push
scas
ja
and
xchg
sub
sahf
out
lret
dec
and
out
lret
xor
lods
lock
test
int3
call
pop
jne
popf
fisubrs
sahf
mov
mov
test
pop
fsubr
pushf
cmpsb
sar
mov
push
sub
das
pop
out
add
mov
pushf
sbb
xchg
gs
adc
dec
pusha
shlb
mov
dec
test
cmp
push
pop
add
fwait
add
mov
mov
ror
fstl
sti
rcrw
ss
fldt
jae
pushf
fsubrl
sub
test
int
pop
decb
mov
out
movsl
stos
mov
push
mov
add
lock
out
std
in
leave
aam
es
rclb
fidivl
mov
outsl
das
cmc
mov
sub
lock
sub
lods
mov
shrl
mov
mov
cmp
addr16
sub
rcl
jecxz
stos
mov
test
int3
push
cmp
inc
out
mov
mov
jle
shll
dec
mov
pop
in
xor
dec
or
repnz
ds
mov
and
inc
and
inc
pop
cmp
jb
or
in
push
out
mov
pop
mov
push
mov
sahf
and
xchg
data16
xchg
mul
repnz
jmp
mov
sub
cmp
xchg
scas
aam
out
addr16
sub
pop
jge
movsl
dec
adc
ror
adc
pusha
xchg
sub
clc
mov
xchg
cmp
inc
fmull
add
xchg
jno
mov
cmp
fiaddl
xchg
movsl
int3
shrb
shlb
push
stc
aaa
subl
dec
movsb
mov
fcmove
and
jno
subb
ret
xchg
sub
test
arpl
es
lods
sbb
jg
adc
mov
roll
test
sti
sarl
or
pop
mov
lahf
adc
sub
push
je
mov
jno
push
aas
inc
ret
lods
mov
pop
xchg
or
or
jne
mov
rcll
sarl
push
xchg
or
fsubrl
in
and
stc
or
inc
jp
mov
bound
ror
mov
push
into
inc
in
jae
add
inc
xchg
push
push
push
xchg
movl
xorb
pushf
rorl
lea
pop
jo
outsl
aas
addr16
sub
decl
mov
sbb
sub
icebp
icebp
dec
mov
lods
jp
inc
cmpsl
orb
mov
pop
push
movsb
aad
dec
jo
sub
dec
mov
rorl
out
cltd
pushf
sub
mov
mov
pusha
popa
lea
stos
push
xchg
pushf
mov
xor
inc
sub
out
pop
out
cmp
rclb
sar
addr16
cmp
mov
xchg
mov
cwtl
aam
pop
push
cmpsb
adc
std
push
in
gs
mov
cmp
out
push
mov
lock
pop
test
sbb
mov
push
repz
inc
push
push
imul
les
into
stc
pushf
xor
xchg
ds
dec
mov
ja
fistpl
pop
push
out
ficoml
adc
rcrl
mov
in
push
sbb
push
xchg
adc
rorb
add
scas
lods
fmuls
sbb
adc
gs
lret
or
push
mov
idiv
pop
mov
dec
and
or
sbb
xchg
daa
cmp
jae
xchg
cli
sarl
mov
addr16
adc
in
out
add
push
scas
lods
aaa
insb
ds
fistl
inc
mov
stc
das
jae
mov
mov
add
mov
sub
jl
ss
popa
sub
es
adc
into
std
out
cmc
xchg
popa
ja
in
stc
jne
sbb
cmp
add
cld
in
mov
push
rclb
jne
out
fstpt
cmp
sahf
ss
inc
xchg
jns
pop
stc
inc
das
lods
mov
adc
call
sbb
xor
mov
in
cmp
push
jl
mov
hlt
addr16
out
add
rcrl
or
mov
mov
push
sub
push
cwtl
xchg
mov
push
fcomps
mov
aad
mov
js
jno
test
fs
adc
sarb
loopne
cmp
test
cli
pushf
adc
fxam
in
xchg
and
and
mov
sarl
enter
dec
mov
loopne
idivl
data16
andl
in
lret
cmp
sub
inc
es
mov
adc
adc
mov
jecxz
jns
mov
dec
cld
fmuls
loope
fwait
cmc
inc
mov
cmpl
push
lds
dec
shr
lahf
pop
cmp
repz
out
inc
mov
adc
bnd
mov
out
inc
xor
xor
mov
or
fldenv
xchg
ja
sahf
fcomp
shll
into
xchg
lret
out
fcoms
jne
rolb
rcrl
addr16
outsb
xor
mov
sbb
inc
shl
inc
cmc
jne
in
pushf
lret
or
in
xor
pop
cmp
mov
enter
out
jge
mov
pop
cmp
and
dec
mov
dec
cmpsl
rcrl
jb
dec
das
mov
jmp
jns
sub
jmp
push
rol
insb
les
insb
adc
xlat
shl
dec
push
sarl
ret
push
pop
dec
rcr
mov
jno
push
mov
mov
and
cltd
lods
xchg
xlat
push
insl
mov
mov
pusha
pop
lret
push
pop
mov
jecxz
into
inc
pop
pop
mov
add
outsl
push
cmp
js
mov
sar
dec
lods
sub
aam
pop
jne
or
xor
sub
std
call
xor
pop
inc
stos
enter
test
outsb
loope
xor
mov
cli
das
inc
push
jg,pt
mov
nop
sub
bound
ret
dec
inc
subb
cmc
scas
divb
push
sti
and
sbb
adc
hlt
lret
leave
or
xor
cmp
and
xchg
xchg
xlat
aad
testl
cmp
iret
inc
pop
push
pop
je
pop
movsl
cmpsl
jbe
and
jl
inc
pop
pop
int3
adc
push
adc
adc
pop
sbb
dec
rol
shll
and
out
and
sbbl
in
stos
fldl
and
insl
pop
imul
fisubl
mov
cltd
jge
popa
pcmpgtd
scas
jbe
lods
clc
inc
int
scas
divb
mov
fisttpll
push
addr16
mov
iret
lret
sbb
cmc
out
inc
cltd
lock
dec
xor
mov
mov
lock
test
push
mov
xlat
mov
dec
aam
daa
sub
dec
hlt
add
sti
cltd
ja
adc
xchg
sbb
cmpsl
add
cmp
ror
and
sub
les
dec
out
fiaddl
lret
inc
sub
mov
dec
mov
repnz
cmc
mov
pop
and
or
shrl
sbb
sbbl
filds
jnp
jbe
mov
push
sarb
out
mov
dec
add
mov
mov
scas
xchg
shll
sub
test
push
dec
ja
lahf
mov
or
mov
push
jae
add
add
shll
pop
xor
popf
pop
iret
jl
mov
addr16
sub
adc
mov
into
pop
daa
xchg
inc
xor
lods
rcrl
into
shrl
xchg
adc
outsb
das
cmp
shl
adc
mulb
repz
xchg
jl
bound
xchg
into
test
roll
popf
sbbb
gs
pop
mov
outsb
fbld
pusha
sar
out
call
test
imul
lahf
sub
test
mov
insb
fisubrl
push
and
clc
lds
aad
adc
add
xchg
push
pusha
pop
xchg
xchg
clc
shll
xchg
nop
jl
int
out
lret
xlat
movb
out
int3
inc
pop
sub
lret
imul
out
imul
dec
dec
test
inc
stos
inc
cli
xlat
or
call
out
rcll
inc
jmp
sub
xchg
mov
cwtl
jne
xchg
mov
push
pop
mov
iret
xchg
mov
out
outsb
jecxz
popa
cmp
cmpsb
xlat
mov
fimuls
dec
sbb
bound
in
cld
pop
clc
ficoml
mov
int3
adc
dec
xor
das
bsr
test
adc
int
xor
inc
fsubp
inc
jp
cmp
stos
push
jmp
cmp
cmpsb
adc
into
push
pusha
insl
lds
cmp
shll
std
lods
gs
dec
lret
pop
inc
mov
les
loopne
pop
sar
fxch
pop
mov
popa
sub
fisubl
repnz
enter
or
sub
xchg
pop
popf
lock
test
rcll
repz
movsl
fcompp
xchg
outsl
sub
pop
mov
add
xor
dec
pusha
jmp
clc
dec
call
mov
stc
xor
pop
sub
fimull
shlb
mov
pushf
sbb
sub
xchg
loopne
mov
mov
pop
repz
mov
xlat
aam
popf
fwait
and
lret
inc
ret
rcll
ss
adc
add
clc
add
pop
pop
mov
adc
inc
jp
sub
pop
adc
fsubs
xchg
push
dec
aas
fstl
sub
mov
push
jne
leave
sbb
test
pop
add
mov
adc
cmpsb
aad
xchg
into
fidivl
bound
imul
add
dec
push
popf
jle
pop
test
hlt
xchg
clc
shll
and
push
stc
lret
push
mov
sub
cmp
dec
inc
hlt
sub
mov
sar
add
xor
sub
xor
pushf
mov
inc
sbb
outsb
pop
xchg
imul
popa
mov
fdivl
shr
and
cmp
pushf
popf
out
pushf
inc
or
shrb
pop
lahf
int3
sti
adc
lret
inc
cmpsl
call
jb
enter
or
dec
mov
pusha
add
jae
cmp
xor
ror
dec
es
pop
fisubrs
movsb
in
add
jmp
cmp
sub
mov
fiaddl
and
fbld
mov
push
mov
clc
repz
mov
or
cld
mov
fisubl
adc
pushf
mov
adc
sahf
std
popl
xchg
cmpl
dec
rclb
aad
movsb
jne
sub
cs
xchg
ror
lret
aaa
pop
cld
cmp
fs
and
and
daa
andb
cmp
loopne
test
mov
int3
mov
xchg
daa
ficompl
dec
xor
popa
mov
mov
stc
repnz
arpl
sahf
push
roll
cmp
mov
daa
inc
cmp
xor
fistps
stos
mov
inc
lahf
jle
adc
push
pop
add
xchg
mov
add
call
dec
pop
stos
and
inc
jecxz
sbb
sti
or
loopne
sbb
subb
aam
and
fistps
rcll
adcl
adc
xchg
das
adc
call
mov
sahf
lret
aas
adc
ljmp
cli
adc
pop
mov
jl
push
lcall
mov
stc
xchg
mov
fadd
pop
mov
mov
js
mov
sbb
fcoml
pop
lahf
sub
ss
xor
movsl
xchg
je
add
cmp
add
cmc
push
rcrb
daa
cmp
adc
lret
pop
ret
call
repnz
imul
mov
jg
sub
cmp
mov
incb
and
mov
cmp
ret
mov
sbb
popa
sub
jp
cmpsl
mov
pop
push
pop
outsb
enter
pop
leave
and
pop
into
in
dec
mov
sti
jmp
int
dec
je
aaa
ljmp
pcmpgtd
sbb
sub
adcb
add
xchg
das
xor
pop
mov
push
flds
cmp
test
sbb
xor
add
mov
mov
outsl
jle
pop
shll
in
sbb
lods
out
fiaddl
fdivs
push
je
aam
jnp
lods
ror
cmpsl
pushf
shlb
in
push
push
xor
xlat
lods
mov
test
in
mov
jns
add
negl
imul
stc
rcr
sub
sbbl
fscale
test
lahf
sbb
xchg
dec
pop
sub
scas
int3
mov
into
fsubl
mov
mov
fs
fimull
cmp
gs
aaa
cmp
jg
inc
add
mov
mov
mov
xor
mov
fidivl
outsb
leave
shll
xchg
mov
je
ds
xchg
pop
and
jecxz
in
outsl
ret
lahf
dec
jo
cmp
sbb
cmpsl
les
sub
clc
shr
iret
in
shlb
mov
rclb
daa
add
xor
xchg
stc
inc
adc
adc
xchg
xor
mov
das
xchg
sbb
sub
sbb
shrb
aam
jge
daa
inc
push
ret
mov
jle
into
dec
or
cltd
cmp
icebp
into
sub
out
aad
push
push
lods
add
daa
mov
out
push
fwait
into
push
adc
cmp
cmp
dec
daa
push
daa
dec
fcmovnu
xor
fisttpll
add
inc
sub
cltd
mov
mov
mov
jo
sarl
test
shlb
pop
mov
imul
cltd
test
nop
scas
in
dec
or
xor
mov
scas
repnz
leave
aad
cmpsb
xchg
mov
adc
lods
dec
les
lock
mov
sbb
insl
int3
sub
outsb
sub
movsb
sti
pop
dec
xor
mov
cmp
sub
int3
xchg
xchg
aas
aam
addb
out
inc
das
inc
lea
xchg
lock
xchg
mov
test
cmpsl
sbb
push
cld
insl
stos
jmp
pushf
mov
cltd
loopne
jle
dec
jae
dec
sbb
mov
mov
inc
pop
lret
icebp
xchg
roll
sub
or
pop
jl
mov
insb
aam
adc
mov
shrb
ss
fstpl
and
push
cmpsb
insl
imul
inc
addl
adc
inc
mov
mov
fimuls
dec
out
or
xor
daa
sbb
lret
rcll
fidivrs
jmp
cmp
sti
addb
or
mov
rcr
add
mov
mov
popf
into
mov
adc
and
adc
pop
and
inc
adc
ficomps
bound
or
xchg
aas
sbb
movsl
adc
push
imul
xchg
std
mov
pop
pop
inc
dec
loopne
xchg
inc
roll
hlt
in
cs
rcll
lret
enter
fsubrl
outsb
bound
shl
adc
aam
sub
jne
cmpsb
adc
push
inc
jp
xlat
sarb
sbb
pop
fsub
mov
ror
mov
jne
cmp
xor
push
push
stos
mov
call
dec
mov
rcrl
shl
jne
js
fsubs
into
scas
insb
daa
xor
and
out
out
xchg
mov
fs
mov
fldenv
pop
jne
mov
arpl
pop
add
push
and
rcll
jnp
push
xchg
inc
jecxz
cli
jmp
aam
inc
xor
push
xchg
and
pop
sub
dec
xchg
stc
movsb
push
jecxz
dec
xlat
mov
cmpb
jne
into
sub
mov
pop
fmul
pop
push
arpl
inc
sbb
dec
mov
sarb
pop
out
mov
xchg
jge
int
shl
fwait
jbe
push
in
stc
cmpsb
mov
sbb
jp
shll
dec
in
scas
lahf
sub
mov
jno
add
in
mov
es
cli
insl
into
int3
dec
lods
je
popa
aad
mov
lret
incb
popf
jecxz
fdivrl
lods
adc
rorl
decb
and
mov
xor
insb
xlat
pusha
jge
push
pop
pop
je
jl
cmp
pop
lods
aaa
add
aaa
push
test
sub
xchg
fs
ror
ja
mov
sub
das
je
cld
dec
cli
ret
repz
or
xchg
push
sub
imul
les
mov
ljmp
adc
pop
popa
and
pop
out
lret
adc
dec
jmp
push
sbb
roll
imul
rolb
mov
mov
stos
sahf
fcmovbe
inc
enter
fdivrl
jl
hlt
mov
or
aam
lret
dec
sub
dec
pop
nop
adc
pushf
rcll
mov
das
dec
cld
dec
adc
lahf
cmp
jmp
enter
icebp
sub
jl
shr
sub
test
sahf
rorl
rol
call
lret
xchg
dec
outsb
imul
adc
out
xchg
out
mov
mov
jo
mov
pop
loope
mov
lret
adc
inc
inc
jl
jmp
pop
xlat
je
mov
loope
lret
mov
mov
ss
addr16
icebp
cltd
cmp
cmp
clc
ja
push
sub
add
aam
dec
sbb
mov
fiaddl
pop
jg
pop
pop
repz
outsl
pop
rcrb
xor
nop
movsb
cmp
scas
shrl
dec
jae
push
pop
popa
test
fstl
rcll
leave
and
in
pusha
enter
mov
or
call
sub
cmp
pop
lods
xor
jno
movl
sbb
lods
dec
cwtl
lods
mov
xor
int
fstpl
stos
roll
addr16
cmpsl
cmp
mov
push
fdivl
rorl
sub
push
sub
enter
sbb
outsb
pop
addr16
aaa
mov
jo
mov
jle
test
adc
daa
cmp
inc
in
xchg
mov
cld
mov
addr16
xor
ret
lcall
sub
ret
outsl
ficoms
into
dec
fidivs
fildl
out
sahf
fdivp
mov
inc
sbb
and
out
push
fidivrs
dec
push
jns
aaa
mov
xor
mov
push
std
jge
call
mov
sub
mov
fisubs
pusha
aaa
or
mov
jmp
orb
mov
inc
sub
int
mov
jb
lods
pop
fsubrp
or
fisttpll
test
data16
push
sbb
pop
add
arpl
bound
jge
push
pop
cmp
test
push
sti
inc
mov
popf
jae
dec
jmp
jge
jg
xor
push
inc
fs
data16
stos
leave
mov
imul
bound
adc
jg
sub
jb
mov
xor
sbb
dec
mov
lods
bound
push
push
sub
outsb
ljmp
cmpsb
movsb
dec
push
push
mov
shrl
shl
mov
dec
imul
out
out
sahf
lods
shrb
xchg
inc
mov
mov
adc
and
xor
fistpll
mov
call
cmp
pop
jecxz
and
test
rorl
repz
popa
jne
addr16
inc
in
jge
rorl
dec
add
movsl
mov
cmp
divb
xchg
fmuls
xchg
call
mov
cmpsl
or
mov
push
les
lcall
in
sahf
iret
push
or
stos
pop
mov
sti
outsb
dec
cmpsl
mov
and
mov
int
push
decl
jecxz
lret
adc
ja
xchg
ds
mov
rclb
leave
pop
jg
outsb
fstpl
push
push
pop
push
clc
add
push
sbb
clc
imul
pop
rcrl
in
push
dec
adc
adcb
stc
jo
shlb
jne
fsubl
dec
push
inc
jmp
sub
fcmovbe
and
bswap
xchg
loope
push
popa
movsl
rcrl
scas
mov
into
test
adc
ret
lcall
sub
test
or
xor
repz
sub
or
mov
adc
ss
out
loopne
ret
push
mov
jmp
or
mov
xchg
mov
pushl
push
dec
fisubrs
loopne
jge
push
dec
orl
fld
fimull
imulb
pop
jl
inc
dec
mov
mov
scas
adc
pop
leave
or
lcall
inc
jmp
mov
stos
push
xor
lcall
xchg
cmc
xchg
mov
rorb
iret
mov
add
mov
pusha
iret
pop
das
shrl
incb
int
movsb
pop
into
je
lock
pop
dec
pop
movb
xchg
insl
cltd
adc
jge
and
push
stos
jl
sub
add
xchg
and
pop
insl
mov
fadd
shll
outsb
or
dec
loopne
in
shll
jecxz
cmp
or
adc
scas
pop
inc
sbb
mov
mov
imul
pop
rclb
fmuls
lahf
insl
jmp
insl
push
aad
pop
repz
mov
adc
rcll
sub
fmull
fildl
push
fsubr
scas
popf
roll
pop
popa
and
mov
mov
pusha
sbb
orb
int3
fsubs
xchg
add
lahf
iret
mov
mov
cmpsb
xchg
inc
ret
inc
aaa
shll
mov
xor
lds
xchg
fstps
imul
xchg
xlat
arpl
mov
mov
scas
cltd
pop
xor
mov
pop
sti
jl
mov
loopne
lret
adc
frstor
pusha
dec
lcall
addl
push
lcall
sarb
mov
pop
xor
xchg
int3
jbe
pop
jge
mov
inc
shrl
out
mov
mov
lods
dec
testl
rorl
shl
pop
sti
sbb
jl
pop
fucom
adcb
add
lret
roll
sbb
in
inc
mov
mov
pop
repz
pop
movsl
aad
mov
adc
or
repnz
jae
push
stc
repnz
sbb
dec
mov
out
ret
adc
pop
call
stc
mov
pop
rcll
stc
xchg
xor
mov
shlb
add
mov
jg
pop
push
imul
pop
sahf
rol
mov
xor
jecxz
shlb
inc
loop
clc
cli
and
cmpsb
or
dec
mov
cmp
cmpsb
pop
xchg
push
xor
add
loop
stos
aas
xchg
and
popa
mov
faddl
shrb
ret
lcall
aas
dec
test
cmp
cs
push
es
or
push
je
jg
lret
rcrl
es
int3
call
push
pop
xchg
cmpsl
adc
hlt
repz
and
lcall
lods
mov
packuswb
sbb
push
movsl
push
jp
orb
je
rcl
cmc
sub
jl
ret
add
pop
sub
jmp
int
sbb
inc
icebp
sarl
lea
mov
imul
xlat
pop
add
pop
div
sahf
lock
dec
fdiv
pop
mov
adc
ljmp
into
cld
jmp
sbb
xchg
shrl
clc
pop
jp
shr
sub
shrb
shl
xchg
mov
xor
in
aas
sub
jge
out
add
dec
mov
push
popa
rcl
mov
lahf
sbb
out
and
or
rolb
nop
mov
sub
jne
orb
push
pop
cwtl
pop
cltd
inc
aam
outsb
scas
ror
lods
pop
cld
xorl
stc
and
daa
pop
jns
stos
insl
xor
push
xor
xchg
xchg
stc
xlat
jge
outsb
pop
pop
adc
in
pop
pop
mov
adcb
rorl
enter
movsl
stos
loop
pop
jne
push
push
adc
push
sub
js
mov
mov
lcall
pop
push
sub
mov
subl
sarb
not
into
nop
out
shll
aas
daa
movsb
adc
repnz
pusha
push
inc
hlt
inc
dec
insb
aam
je
imul
jns
nop
jp
dec
mov
daa
mov
das
sahf
mov
jecxz
jmp
inc
cld
mull
das
lods
mov
xchg
loop
stc
sub
mov
dec
dec
lcall
pop
xor
lods
mov
dec
into
jne
xchg
lret
xor
jecxz
jecxz
imul
pop
mov
jg
xchg
test
pop
dec
mov
xor
cs
jge
in
lret
mov
hlt
fisubs
cmp
cld
stos
or
ffree
test
aam
cmp
push
mov
in
fistps
test
mov
sbb
repnz
inc
pop
scas
in
pop
roll
push
xorl
enter
out
aas
push
rcrl
xchg
mov
outsl
mov
jmp
adc
jmp
sub
xor
aas
mov
push
mov
pop
or
mov
ds
lods
pop
cltd
mov
push
jae
clc
outsl
fisubrl
mov
mov
xchg
cmp
mov
divb
mov
pop
mov
or
sub
jne
dec
iret
cmp
inc
out
cmp
pop
dec
arpl
add
repnz
jle
mov
ljmp
jmp
lods
icebp
mov
js
cwtl
popa
cmp
fyl2xp1
fiadds
stos
ficoml
je
xchg
xchg
xchg
sarl
xchg
insb
mov
push
push
mov
push
push
cmpsb
adc
movsb
xorb
mov
insl
inc
shll
jbe
mov
push
hlt
push
loopne
shlb
jo
inc
fnsave
in
mov
xchg
inc
lret
pusha
roll
sub
cmp
sahf
js
andb
test
xlat
or
rcl
lds
mov
mov
stc
repnz
mov
fldcw
outsl
xchg
rcr
xchg
inc
decl
rclb
in
or
out
mov
cmp
ljmp
adc
fidivs
test
cmp
and
xchg
scas
and
sub
add
sahf
dec
lods
dec
das
push
dec
fs
div
add
insb
mov
stos
adc
jns
push
mov
leave
xchg
in
mov
sub
clc
cmpsb
xchg
xchg
pop
shrl
stos
dec
fists
cmpsb
in
cwtl
sbb
and
ss
and
out
xchg
aas
sbb
test
lock
rorb
xlat
aad
sbbl
jle
rol
or
mov
gs
push
iret
movsl
pop
insl
imul
push
insl
gs
mov
cmp
ljmp
ja
dec
fisubrs
roll
cld
enter
mov
lret
rol
sub
sub
pusha
xor
rorl
out
inc
pushf
dec
push
stc
push
mov
scas
xchg
cs
lods
sub
lods
sbb
mov
push
shrb
in
sysret
mov
sub
mov
mov
shrb
and
jmp
xchg
cmp
or
fiadds
xchg
push
mov
add
mov
sbb
sbb
lods
mov
scas
or
lret
rcrl
fistps
into
in
fwait
shrb
insb
pushf
sbb
push
sbb
ret
std
outsb
jb
push
mov
mov
popf
into
and
dec
fimull
repnz
lock
or
sub
sti
mov
mov
in
rorb
pop
int
sbbb
jl
inc
pop
inc
or
push
add
addr16
rorl
push
cld
shrl
xor
cmovle
dec
sbb
and
adc
add
and
out
and
adc
jg
xchg
add
scas
not
test
mov
xor
pop
dec
idivb
sbbb
inc
xstore-rng
cmpsl
test
cmp
sub
ss
pop
adc
sar
ja
xor
decb
mov
add
shlb
repnz
xchg
stos
mov
cltd
adc
or
int3
adc
sbb
inc
dec
inc
sbb
test
dec
push
ss
push
jl
lret
insl
out
mov
arpl
or
fcmovbe
outsb
roll
leave
jl
mov
repnz
gs
jg
in
xor
mov
ja
inc
dec
push
daa
popf
xchg
sti
xor
insb
leave
sahf
outsl
shr
or
push
pop
jae
dec
jns
cmpsb
aad
shrl
jb
push
aam
aas
push
mov
inc
dec
sub
mov
xchg
sar
jmp
push
movsl
enter
pop
pop
mov
ficompl
sub
mov
test
fists
xchg
lret
inc
or
mov
inc
lahf
push
test
test
mov
outsb
pop
xchg
cwtl
ror
divl
sahf
mov
cmp
roll
dec
xor
mov
xor
je
inc
jo
enter
rcr
scas
xchg
clc
or
mov
into
push
cli
out
inc
loopne
lock
adc
insl
mov
push
and
pop
out
xchg
xchg
lods
ficomps
sbb
xchg
cmpsb
std
fs
nop
das
mov
jge
pop
mov
sbb
outsb
push
and
aas
scas
sahf
sub
cmp
xchg
add
cmc
mov
rcrb
dec
rcl
loopne
push
or
mov
pop
clc
push
pop
rcr
mov
mov
xchg
int
idivl
sbb
and
xor
pushf
jne
dec
xchg
loopne
fsubl
mov
daa
cwtl
imulb
pop
xchg
mov
xor
shlb
jns
pop
add
push
add
xchg
loopne
mov
aas
gs
mov
sarb
adc
mov
sahf
xor
xchg
lahf
cmp
test
roll
mov
xor
xor
jmp
mov
fists
out
cmp
das
scas
push
or
cmp
pop
mov
inc
and
cs
xorb
cmp
das
cmp
mov
test
mov
leave
and
inc
add
xor
lods
daa
pop
add
enter
xor
hlt
dec
xchg
xchg
ficoms
int3
sbb
sarl
xor
xchg
pop
adc
pop
lcall
shr
inc
clc
push
mov
sbb
sub
stc
add
ficoml
add
test
pop
mov
mov
fadds
sub
fildl
lds
adc
loopne
gs
jl
jge
fs
xchg
pusha
mov
and
jne
inc
ljmp
out
test
movsb
fdivrl
mov
lods
xor
stc
mov
mov
stc
jp
and
push
ja
mov
cmp
mov
pop
sub
jp
pop
xchg
mov
in
pop
and
xor
and
mov
xchg
insb
xchg
sbb
xchg
mov
or
ljmp
mov
mov
jbe
fcomp
add
xchg
xlat
lds
or
ljmp
clc
xchg
pusha
imul
xor
mov
lods
sub
shl
sahf
insb
div
call
dec
je
jmp
cli
dec
int3
sarl
or
call
stc
inc
sahf
aam
ficompl
push
daa
add
icebp
mov
xor
outsl
test
nop
mov
jmp
sarl
icebp
les
mov
pop
or
mov
mov
clc
mov
shrl
or
sub
into
mov
scas
shl
sbb
adc
insb
mov
pushf
roll
shlb
mov
sub
testl
jle
sub
clc
mov
adc
jl
lret
sbb
jnp
leave
gs
or
gs
dec
push
mov
xchg
dec
jnp
jle
rorb
xchg
incb
xor
fnstcw
insl
into
jl
and
mov
ds
int
repz
jl
jp
mov
ficoms
pop
push
ficoml
insb
rclb
xchg
mov
mov
and
pushf
dec
pop
pop
sahf
push
mov
sub
add
fsubrl
roll
cld
stos
outsl
sarl
sub
fdivs
mov
sub
test
stc
test
aas
mov
je
pop
outsb
testb
test
mov
inc
push
mov
sub
das
xchg
xlat
xor
pop
and
sar
int
mov
lcall
pop
sub
mov
fmull
add
stos
adcl
enter
fdiv
int
sar
mov
jge
fnstcw
scas
push
pop
mov
jae
cld
in
pop
addl
mov
int3
fs
in
not
mov
jno
or
mov
rcrl
call
mov
cmp
mov
imul
cmp
std
ret
or
jl
lock
inc
push
in
daa
mov
mov
add
cmp
dec
movsb
leave
dec
mov
loope
mov
cmp
inc
loope
jo
adc
pop
out
mov
test
sub
and
rcrl
stc
mov
daa
hlt
out
inc
jb
arpl
movb
push
popa
and
push
add
pop
xor
test
xor
adc
stc
pop
out
push
dec
xchg
psrld
jle
insl
rorb
lods
loope
out
mov
rorl
jecxz
jae
mov
das
sub
addr16
adc
jp
popf
jo
or
mov
fnsave
jmp
repnz
pop
dec
stos
mov
sbb
pop
xor
sub
sarb
jns
pop
ss
mov
call
sbb
nop
push
dec
negl
in
cmp
dec
fnstcw
or
inc
int3
dec
out
mov
sub
and
pushf
xchg
pop
shl
pop
out
out
aam
cmp
sbb
lods
cmpsb
sbb
fisubs
xor
jae
movsl
push
and
cmp
lret
and
jge
roll
and
push
jmp
fcomps
sub
daa
fcoml
lret
sub
inc
cmp
mov
mov
push
aam
fcomp
roll
sbb
mov
lock
dec
mov
xor
loop
add
pop
push
xchg
ror
repz
shll
pop
es
les
int
shlb
nop
fisubl
hlt
xor
jmp
mov
lock
pop
adc
inc
rorb
lods
loope
sub
jb
mov
adc
pop
mov
in
mov
mov
aam
lahf
aam
out
add
scas
in
dec
shrl
mov
addr16
mov
push
stc
jg
mov
ds
loope
fmulp
cmp
jae
js
push
test
sbb
xchg
int
mov
lock
out
add
roll
jbe
push
mov
stos
pop
lea
inc
pop
je
and
imul
sahf
push
pop
adc
and
inc
mov
xchg
push
gs
lock
push
push
std
shrl
and
dec
sbb
pop
roll
nop
repz
fisubs
ret
push
pop
cmp
and
dec
insl
and
push
shlb
cs
xchg
mov
sub
xor
xchg
mov
movsb
das
insl
cmp
cmp
pushf
jg
pop
add
mov
leave
lret
clc
cltd
int3
nop
es
xchg
arpl
sbb
cmp
movsl
push
aam
mov
mov
dec
mov
dec
ja
cmp
es
add
fnsave
fimull
pop
inc
mov
int3
pop
or
into
out
and
cmp
clc
push
sarl
cmpsl
jge
mov
enter
lret
xchg
add
xchg
fucomp
jbe
mov
add
mov
and
lret
xor
xor
ret
cmp
int
aas
in
push
xorl
sub
ss
or
cwtl
cmp
dec
shl
out
fcompl
ljmp
add
mov
mov
push
sub
test
daa
mov
mov
movb
aad
push
pop
push
push
push
mov
sar
adc
addr16
pop
fldcw
loopne
cld
and
mov
jg
test
add
push
aad
movsl
mov
lods
xor
lahf
cltd
ss
add
pop
jae
fyl2xp1
out
sub
dec
lahf
arpl
stc
xor
sbb
and
sbb
insl
outsb
sbb
lods
xchg
mov
ljmp
arpl
push
or
cs
and
sbb
rcll
hlt
in
jb
sub
jnp
out
scas
dec
or
sti
addr16
hlt
mov
daa
jmp
and
cmpsl
into
push
mov
pop
ljmp
inc
sub
xor
mov
insl
stos
xchg
mull
push
pop
inc
push
cwtl
test
or
rcrl
rclb
dec
int
test
adc
outsl
mov
lds
je
repz
pop
dec
frstor
pushf
or
cli
data16
bound
fldl
test
sahf
dec
push
xchg
cmp
les
stc
mov
mov
mov
adc
sub
shlb
cmp
scas
inc
push
roll
aas
repz
movsl
fcomp
scas
rcrl
lret
adc
clc
fsubl
lret
test
mov
dec
jno
push
add
jp
fadd
and
push
jp
hlt
mov
dec
sub
in
add
dec
movsb
clc
jg
push
aam
fldcw
clc
popf
clc
loop
inc
mov
jg
dec
push
repz
cmpsb
push
cmp
push
ficompl
mov
sbb
mov
aad
mov
pop
xor
mov
or
adc
gs
inc
call
sahf
fs
xchg
dec
mov
cld
sahf
lods
cmpsb
int3
add
daa
push
mov
cmpl
daa
and
add
lahf
roll
adc
shll
and
sbb
ret
add
jae
shll
cmpsl
testb
xchg
mov
outsb
test
xchg
dec
or
mov
add
fisttps
rclb
int
int
ret
insl
push
out
mov
push
xor
add
pusha
sti
incb
std
outsb
cmpsb
jl
aam
sbb
out
aam
jl
cmc
pop
add
loopne
adc
inc
dec
xor
pop
clc
mov
cmp
outsl
cltd
pop
faddl
mov
jp
rcl
xlat
fstps
in
mov
mov
jmp
jne
aas
shr
movsb
jle
imul
and
adc
mov
lds
movsb
lods
aaa
mov
clc
roll
lret
jmp
jecxz
stc
ljmp
test
push
mov
xchg
pusha
ds
shll
adc
and
mov
sub
nop
lock
dec
inc
aad
adc
adc
mov
jmp
je
outsb
inc
add
or
out
lods
scas
adc
dec
cs
cwtl
orl
pop
xchg
stos
cmp
das
and
mov
push
fadds
or
test
adc
mov
sub
sbb
ja
pop
into
rorl
push
shl
aam
cli
sbb
orl
mov
movsb
cmp
repz
pusha
fiadds
aas
xor
add
add
adc
aas
dec
pop
stc
mov
mov
xor
and
addr16
cmpsl
xchg
mov
roll
pop
xor
fildl
es
mov
pushf
aas
imul
stc
mov
insb
push
and
mov
fstpl
subb
sbbb
ljmp
aas
push
and
sub
xchg
aam
fdivl
dec
pushl
pop
pop
popa
xchg
jae
cs
dec
cmp
nop
mov
xchg
arpl
fstpt
jae
test
gs
xlat
out
pop
sub
adc
mov
cmp
call
fidivrs
sub
das
xchg
lret
cmp
insw
mov
leave
dec
ret
cwtl
sub
stos
pop
push
xchg
lds
sub
aad
ror
sti
and
clc
inc
mov
inc
loopne
jb
popa
ret
out
scas
fidivs
in
inc
call
pop
lahf
xchg
clc
add
and
pop
ret
lcall
jae
jae
sti
xchg
daa
enter
lret
sub
hlt
pushf
inc
mov
pop
sbb
lods
adc
adc
sti
std
inc
lods
inc
cmp
out
test
nop
jge
jae
into
sub
push
sbb
push
cld
stc
ljmp
sarl
jnp
aam
mov
sti
fstpt
fsub
sub
inc
movsb
fwait
jns
outsb
test
adc
rcrl
push
inc
jp
mov
pop
int3
movsb
xchg
sarl
fnsave
dec
and
daa
sti
lods
in
bound
dec
jl
shrb
roll
jg
jne
mov
adc
daa
insl
dec
fistpl
aad
push
fld
clc
cmpsl
mov
mov
cmp
pop
mov
shll
out
std
popa
out
xor
ljmp
cmp
sarl
xor
add
hlt
pop
ret
push
xor
push
fisttpll
push
mov
dec
ljmp
insb
ljmp
sbb
mov
jno
mov
mov
movsl
dec
jge
xchg
sbb
xor
and
add
add
outsl
sti
inc
add
nop
push
repnz
adc
fbstp
and
mov
mov
pop
inc
stos
jne
das
outsb
in
pushf
test
and
jg
les
jl
xchg
fcomp
aam
cld
or
cmc
pop
sub
ret
mov
sahf
jmp
repnz
inc
sub
and
xor
call
mov
jge
or
in
pop
shll
jae
inc
or
sbbb
pop
cld
jmp
call
mov
jae
mov
out
mov
scas
dec
lock
or
jmp
mov
out
mov
xor
loopne
aam
sub
mov
mov
test
xor
insl
mov
dec
inc
fsub
stos
popa
xchg
das
xchg
sub
mov
jne
xchg
adc
aad
mov
ljmp
repnz
pop
cwtl
ret
int3
jns
enter
fcmovnb
les
mov
int3
xchg
es
fildll
dec
ds
out
mov
dec
nop
cmp
mov
insl
push
lods
or
mov
fcoml
pushf
std
mov
xor
mov
hlt
and
rcrl
dec
push
mov
into
dec
out
xor
xchg
ja
mov
push
mov
dec
jae
cmpsb
xor
cmp
push
out
cmpsb
mov
aam
xchg
mov
repnz
fcoms
dec
in
shrl
pop
int
pop
fisubs
pop
in
int
int3
call
pop
pop
js
xchg
shlb
mov
xor
jnp
sub
lcall
outsl
inc
or
ds
addr16
sbb
push
out
push
cmp
push
scas
sarl
mov
shl
sbb
hlt
push
lds
sub
shll
jg
insb
out
xor
xchg
xchg
pop
cmp
jno
pop
jns
xchg
loopne
fiaddl
pmaddwd
stos
jecxz
sub
int
mov
xchg
addr16
mov
call
xlat
out
imul
mov
push
dec
dec
shl
mov
push
mov
notb
or
fstps
mov
shr
push
push
mov
out
xchg
mov
dec
lock
xchg
jecxz
xchg
jg
jl
xchg
rcrl
dec
dec
leave
inc
pop
movsl
dec
out
push
or
adc
inc
jae
mov
stc
push
mov
das
inc
dec
popa
mov
out
mov
pusha
pop
adc
test
popa
sahf
je
in
xchg
xchg
xor
pop
push
pop
cld
mov
clc
dec
mov
and
mov
lcall
dec
and
jae
add
js
cmp
cmp
fdivl
push
xchg
ljmp
mov
inc
lods
xchg
sub
sarl
out
sbb
jne
lea
push
lahf
into
jae
cmpsl
push
movb
loope
or
mov
add
xchg
xlat
jnp
sub
int
sbb
jae
add
insl
and
jnp
ja
inc
mov
lret
xchg
outsl
ds
rcrl
dec
jecxz
fcomi
lds
ss
lret
lods
ja
ss
imul
mov
mov
pushf
les
shll
cltd
daa
mov
pop
add
add
mov
repz
lret
cmp
push
xchg
rcrl
cmp
xchg
mov
and
loope
jmp
add
mul
inc
sahf
mov
push
pop
xchg
xor
cmp
scas
add
sarl
popa
dec
xlat
int3
jbe
xchg
les
scas
mull
clc
lds
adc
cltd
push
jno
push
and
cmpsb
mov
cwtl
out
loopne
pop
into
jnp
sub
ja
into
arpl
scas
mov
mov
jns
pop
inc
fistps
sub
jb
popf
push
adc
int3
es
test
or
lret
xchg
and
xchg
dec
dec
dec
rclb
xor
and
clc
loopne
lret
push
adc
mov
mov
popf
jae
dec
std
jmp
xor
jmp
cld
mov
repnz
clc
loopne
mull
ret
dec
stc
ljmp
fnstcw
push
int
mov
das
cltd
xchg
loopne
pop
xor
and
push
push
mov
pop
or
jg
pop
push
dec
dec
pop
sbb
mov
mov
add
test
sbb
jb
daa
hlt
pop
mov
push
stos
push
sub
cld
jge
cmpsl
rorl
sbb
ja
js
imul
lods
pusha
outsb
dec
jns
cwtl
outsb
pop
xlat
rorl
sbb
iret
test
sub
mov
jmp
or
mov
data16
dec
sar
and
mov
adc
aad
lods
jp
inc
sarl
xchg
dec
sarl
sub
sahf
and
mov
jno
les
insb
mov
inc
adc
mov
adc
jmp
or
jnp
adc
or
ja
xor
sti
data16
sub
aas
mov
inc
stc
sahf
fmuls
push
dec
jae
into
insb
iret
mov
xchg
add
cmpsl
xchg
jne
dec
inc
add
int3
mov
int
dec
sub
hlt
fsubr
adc
pushf
jl
pop
adcb
pop
test
lret
mov
into
pop
int
addr16
enter
mov
ds
push
lods
add
sbb
movsl
jae
cmpsl
jge
in
ficoml
mov
pushf
cmp
dec
rcr
stos
inc
push
pop
aam
mov
pop
jno
cmp
sbb
xchg
mov
leave
aaa
pop
insb
clc
push
lds
scas
es
popa
pop
push
mov
ficomps
cmpsl
xchg
mov
xchg
xor
test
mov
xor
jge
pop
push
rcrl
sarb
adc
jbe
stos
loop
push
jno
lcall
hlt
aad
aam
ret
sbb
lret
jp
or
rorl
rolb
std
popf
incl
aad
mov
sbb
sub
dec
xchg
shrb
and
mov
dec
out
popa
ret
dec
cld
in
std
call
mov
mov
fimuls
ss
mov
cli
cmpsb
pop
cmpsl
into
and
aaa
jmp
xlat
xor
mov
jle
cli
jle
arpl
sbb
out
jmp
dec
sbb
fisubrl
and
inc
les
push
fnstsw
mov
fcomp
mov
and
inc
mov
pushf
out
fsubs
xchg
arpl
shlb
adc
jl
adc
cmp
pop
sahf
insl
nop
icebp
aas
out
scas
sahf
lds
cltd
or
ficomps
loopne
pop
and
jle
sub
movsb
je
mov
xor
outsl
fcomps
fisubl
pop
xor
pop
scas
inc
cmpsb
je
ror
test
jmp
sbbb
add
hlt
adc
scas
mov
pop
je
cld
out
xchg
insb
dec
jp
sub
fdivrs
pusha
or
mov
cmpl
es
fs
push
add
int
rol
loopne
xor
dec
fisttpl
pop
adc
mov
shll
push
xor
aam
shr
inc
sbbl
dec
ds
movsb
cltd
sahf
inc
sub
nop
lea
rolb
cs
push
jne
jmp
test
inc
xor
push
mulb
gs
mov
xor
sub
mov
scas
rcrl
jl
xchg
cld
int3
fcomip
cmpsb
rcl
in
test
movsl
or
pop
movsb
pop
out
or
mov
pop
mov
dec
addr16
or
outsb
loop
bound
shll
add
jnp
jne
xchg
lahf
adc
scas
imul
mov
inc
inc
or
push
cmp
aad
mov
stc
pop
rcll
sub
push
or
mov
and
loop
push
mov
scas
rcl
sahf
cltd
les
mov
flds
nop
cmpb
inc
add
mov
or
scas
shr
xor
movsb
leave
addr16
adc
xchg
mov
mov
lret
leave
lods
ljmp
cmpsl
cmp
pop
dec
jl
push
shll
xlat
cld
sub
lahf
int3
cs
jmp
popa
push
add
mov
inc
inc
pop
xchg
jle
cmpsl
sub
dec
pop
int
push
btc
addr16
jecxz
aas
mov
stc
pop
cmp
insb
cmp
push
dec
xchg
pop
pop
sub
and
mov
mov
jno
ljmp
pop
push
cmp
loop
gs
xor
ret
sbb
sub
pop
xchg
xchg
adc
sahf
aam
addb
pop
out
push
enter
cmp
pop
enter
jg
arpl
outsl
mov
cmp
cld
sub
ljmp
rcl
push
sub
lea
in
jae
add
add
xchg
int3
fs
int
cltd
push
jno
fdivrs
pop
mov
sbb
xchg
dec
cmp
mov
lcall
les
ja
lock
fisubl
xchg
pop
add
jno
roll
adc
pusha
xor
hlt
je
or
mov
xchg
call
jp
dec
push
adc
lcall
mov
mov
stc
rolb
call
mov
xchg
add
inc
sub
mov
std
pop
jnp
add
cmp
push
scas
ljmp
jge
push
das
clc
pop
mov
cld
jne
aas
imul
jg
ror
mov
mov
xchg
fdivs
arpl
insb
xchg
inc
shr
into
test
add
cmp
mov
pop
in
add
sarl
or
xchg
add
push
insl
insl
pop
int
pop
add
inc
cmp
out
shr
xchg
mov
sarb
push
mov
pop
std
repnz
jnp
add
and
cmp
dec
inc
mov
cs
push
mov
adc
push
fnsave
fcmove
repnz
pushf
je
roll
mov
icebp
imul
inc
fnstenv
lret
hlt
pop
and
sbb
movsl
into
out
mov
sub
sub
lds
in
sbb
cld
or
mov
cmpl
push
and
cmp
jmp
mov
jmp
pop
scas
popf
jb
mov
sbb
mov
xorl
je
pop
out
cli
stos
mov
negb
rcrb
out
mov
inc
outsl
mov
fstl
mov
cs
clc
int
fistps
mov
fucom
inc
adc
xchg
in
outsb
sbb
out
cmp
scas
stc
or
jge
push
inc
mov
mov
ds
cmp
int3
jno
mov
rorl
outsb
sub
mov
mov
xor
fwait
int
xor
testb
mov
push
idiv
das
mov
out
jmp
js
dec
push
xchg
xchg
dec
xor
mov
xchg
clc
jp
and
out
repnz
jne,pt
imul
xor
aam
mov
push
ret
int3
repnz
xor
or
jbe
pushl
leave
loope
pop
mov
xchg
cmp
mov
cwtl
push
lods
out
push
xor
push
mov
psubw
test
sbb
mov
shll
add
inc
enter
nop
lods
outsl
rcll
adc
imul
test
mov
hlt
or
jb
repz
xchg
cmc
lahf
aad
test
and
dec
adcl
cwtl
mov
inc
insb
push
pop
rcrl
mov
fists
sub
in
ja
xchg
aas
mov
mov
sub
jo
out
les
shrb
sti
or
cmc
pop
xchg
mov
shrl
and
push
mov
nop
enter
pop
add
ljmp
push
mov
cmc
out
mov
cmp
mov
fcomip
adc
or
stc
mov
je
jns
sub
mov
stos
mov
popl
enter
out
fistl
adc
mov
scas
addr16
pop
mov
sarl
out
pop
fisubrl
xchg
dec
mov
icebp
adc
mov
and
mov
rcll
int3
das
dec
pop
push
cli
mov
inc
mov
xchg
data16
mov
lods
inc
jo
stos
jnp
cmpsb
repnz
dec
mov
pop
inc
push
xchg
xor
clc
enter
and
scas
sbbl
fcoml
aam
inc
mov
xchg
or
jne
js
push
ret
mov
pushf
fadd
or
sbb
add
mov
out
push
cmp
adc
into
mov
into
sti
xor
pop
fadds
scas
out
mov
aaa
lahf
jl
fmull
xchg
inc
and
push
pop
xor
pop
in
mov
mov
adc
dec
mov
fldcw
inc
mov
xchg
inc
adc
addr16
dec
jo
and
imul
mov
jge
inc
popa
das
push
fs
pop
pop
pop
ja
das
xor
shll
icebp
ds
jae
insb
pop
in
mov
push
xor
cmp
ret
je
int
rcrl
stos
mov
fld
outsl
shlb
aad
push
dec
mov
aad
mul
xchg
sub
pop
cld
lahf
and
sbb
inc
jl
mov
dec
pop
inc
or
lret
mov
mov
sub
insl
jno
or
fwait
sarl
fcom
aaa
sbb
stc
pushf
dec
out
inc
push
jmp
mov
mov
lods
sahf
in
push
mov
pop
je
jl
mov
not
fyl2x
push
iret
jmp
lods
mov
rorb
sbb
sbb
mov
sti
bnd
int3
lret
shl
lock
je
test
push
mov
ficomps
ret
out
jmp
mov
and
xchg
imul
iret
call
subb
pop
mov
pop
jmp
lret
dec
das
aas
xor
cmp
fidivrl
xor
in
int3
add
sub
adc
fimuls
xchg
lret
outsb
add
dec
and
cmp
enter
pop
and
arpl
fs
mov
ret
hlt
leave
enter
int
int
ds
jl
adc
das
inc
push
mov
ret
adc
insl
pushf
cmp
push
test
push
adc
pop
xor
hlt
mov
jnp
and
outsb
xor
push
cmp
pop
out
rorl
and
lcall
lock
mov
cmp
xchg
aas
jle
dec
push
sbb
dec
mov
xchg
inc
scas
push
jg
test
aam
adc
out
es
add
push
and
pop
rcll
cmpsl
incb
sarl
ret
inc
fnstsw
cmp
arpl
adc
leave
fdivrp
jecxz
test
inc
sub
out
clc
aas
xor
mov
mov
dec
cmc
sub
ficomps
xchg
nop
jne
sahf
in
test
inc
adc
icebp
lahf
call
or
leave
mov
inc
push
ficomps
adc
pop
repnz
test
jg
fsubp
out
mov
cmp
in
lret
add
sahf
lcall
icebp
cmpsb
dec
aas
or
inc
std
xchg
sar
sub
testl
pop
jl
popa
fcomps
psrlq
and
cmp
push
mov
movb
mov
icebp
dec
dec
xchg
int
jecxz
xlat
bound
xlat
fs
test
mov
call
xor
dec
or
movsb
dec
into
dec
inc
call
addr16
lods
pop
insl
mov
adc
jae
mov
cmp
in
mov
jge
dec
jecxz
mov
and
cli
dec
imul
lahf
or
in
insl
sbb
jge
fildl
adc
shll
jl
add
sbb
or
pusha
pop
ja
andl
cmp
inc
testl
imul
mov
stos
fcmovbe
aas
mov
das
fwait
aas
imul
roll
shl
fmul
mov
call
push
shr
cli
jle
movsl
lods
pop
and
or
cs
loopne
shl
or
xlat
pop
rol
movsl
fcmovu
sbb
loop
sbb
daa
repz
and
ret
xor
cltd
add
xor
dec
int3
test
xor
jne
call
sub
popf
xor
pop
int3
fsubrl
xchg
pop
cmpsl
mov
lods
mov
rorl
das
or
mov
jl
shll
xor
jle
inc
int3
xor
insl
std
lods
adc
js
xor
push
xchg
ds
mov
add
pop
xchg
rcll
daa
dec
pushf
loope
scas
mov
mul
popf
call
fdivs
pop
pop
mov
cmpsl
dec
lea
mov
int
faddl
imul
pop
ror
inc
sub
scas
pop
stc
jmp
clc
push
mov
rol
fnstsw
mov
hlt
or
pop
mov
pop
mov
test
ja
dec
push
dec
and
fnstsw
rcl
pusha
pop
dec
jae
loop
lcall
daa
dec
hlt
xor
addr16
mov
dec
cmp
rorb
popl
je
or
push
mov
mov
inc
lods
pop
cmp
test
rorl
sub
jns
rep
lods
adc
adc
loop
cmpsb
rcrl
push
jl
dec
pop
repnz
add
insb
mov
mov
xchg
xchg
aad
aaa
xchg
rol
insl
jecxz
es
xor
lahf
push
lcall
mov
andl
mov
bound
mov
insb
hlt
cmp
les
in
sub
dec
and
inc
jo
jae
mov
and
in
sub
jge
inc
xor
jge
repnz
xorl
mov
xor
pop
mov
arpl
roll
imul
xchg
addr16
cwtl
mov
push
xchg
xorb
ret
adc
js
aas
scas
aad
dec
es
fs
cmp
push
sub
pop
out
fdivrl
fcmovnu
inc
and
jne
sbb
js
test
fists
aam
or
sbb
or
rcl
mov
cmp
xchg
sub
mulps
sti
loope
lret
pop
fcoml
mov
mov
xchg
push
es
pop
xor
inc
mov
int3
mov
mov
mov
nop
test
lret
out
outsb
fs
push
cmpsl
cmp
hlt
push
out
insb
cld
popf
adc
outsl
leave
dec
sbb
push
sar
jmp
sbb
mov
sbb
pop
pop
xchg
xchg
in
or
and
pop
pusha
xchg
cmpsb
dec
loopne
repnz
mov
mov
or
stc
jmp
dec
pop
into
adc
mov
xchg
jl
inc
mov
aad
fsubrl
mov
clc
fdiv
insl
ficoml
jmp
xchg
loop
rcrb
pushf
sbb
push
cmp
xor
sbb
cmp
mov
gs
cmpl
pop
shlb
xchg
jae
cmpsb
int
push
xlat
sub
push
sti
or
cmp
xlat
mov
int3
dec
in
data16
test
inc
mov
aam
pop
ds
cmp
scas
add
mov
push
movsl
imul
jae
xorl
jl
sbb
into
subb
aam
inc
outsl
pop
daa
pop
ret
mov
rcll
bound
out
data16
ffreep
test
dec
aad
lods
sahf
xor
sahf
insl
push
xlat
pop
or
repz
int
ja
xchg
mov
sub
xor
test
mov
inc
jnp
mov
daa
xor
cwtl
int
jbe
jecxz
mov
imul
push
lods
xor
push
inc
sub
insb
loope
sbb
rcr
nop
das
xor
pop
add
fiaddl
stc
popf
adc
jle
or
adc
fadds
mov
insb
iret
jl
pop
jmp
out
scas
out
int3
ljmp
leave
jns
je
xlat
xor
scas
int
aad
dec
adc
test
fcmovu
pop
rcll
outsb
fmull
jne
imul
or
ljmp
clc
pop
shrl
ret
fdivs
shlb
mov
fistl
dec
sub
add
cwtl
adc
sbb
stos
xor
iret
and
mov
lret
inc
pop
mov
icebp
pop
mov
push
pop
sub
sarl
cmp
mov
fwait
scas
lcall
cmp
dec
cmp
xor
ret
or
ret
clc
add
xor
js
lock
adc
es
mov
dec
in
ss
cmp
mov
pop
rcrl
jne
lahf
dec
ret
push
in
stc
popf
pop
and
adc
xor
push
or
rol
mov
mov
cs
lods
call
jne
gs
int3
jle
adc
lcall
popf
jo
mov
imul
stos
test
rorl
out
mov
sbb
test
add
jb
or
in
pop
dec
aam
test
lret
out
cwtl
adc
iret
rcl
in
lods
xor
clc
rorl
out
rcl
or
add
movsl
cmp
sub
lods
lcall
mov
lods
fildl
negl
pop
mov
or
dec
sbb
xchg
dec
jne
gs
sub
pushf
add
ds
push
pop
pop
jae
sbb
loop
lods
dec
push
and
xchg
mov
xlat
cmpsb
pop
fcomps
jp
add
in
jo
sbb
mov
sbb
xor
jmp
lcall
push
dec
lds
leave
fcmovnbe
ds
int3
imul
jae
lock
or
ret
arpl
cld
int
push
lods
and
jmp
ja
sub
shrl
lods
rcl
push
das
add
lret
outsb
pop
test
inc
push
mov
jmp
ljmp
xchg
dec
shll
je
aad
ss
sub
cmp
inc
dec
shl
roll
iret
xor
in
push
adc
xchg
dec
ds
fistpl
xchg
push
xlat
andb
dec
mov
mov
fimull
lret
push
sbb
dec
pop
leave
fsubl
rcll
das
lods
cmp
into
hlt
push
dec
repnz
daa
mov
push
repz
sbb
fsubl
loope
out
cmpb
mov
pop
cmp
daa
jmp
rclb
shr
ds
aad
sub
ljmp
shll
xchg
fcoms
pop
sub
paddw
fistl
je
push
out
insb
lods
call
pop
insb
and
push
rolb
mov
mov
je
or
pushf
adc
lods
pusha
pop
sub
fiadds
inc
cld
and
loopne
jb
jge
mov
gs
cmp
pop
ret
jle
fwait
jecxz
loope
sub
sti
daa
in
fadds
sub
pop
mov
and
mov
or
dec
adc
or
mov
fwait
jmp
push
inc
push
stc
xchg
rcll
cmp
lret
adcb
out
mov
or
movsl
mov
mov
test
pop
cmp
aas
call
pop
dec
push
bound
daa
mov
adc
push
cmc
xor
leave
inc
pop
mov
int3
je
fistps
in
andb
push
gs
pop
mov
repnz
jns
fwait
aas
scas
sbbb
add
es
mov
aam
cmp
rclb
dec
jns
adc
or
aad
faddl
xchg
movsl
and
adcb
push
test
and
sub
test
push
adcl
dec
sub
and
dec
mov
clc
pop
rcll
lahf
sbb
add
shrl
rcrl
push
es
pop
ret
dec
mov
inc
ficompl
cli
gs
ret
inc
fsubrp
xlat
mov
xor
ret
push
mov
cwtl
hlt
ljmp
or
sub
mov
dec
sti
daa
fstpl
repnz
out
inc
das
push
mov
xchg
mov
stc
insl
adc
movsb
dec
pop
adc
mov
cmpsb
mov
bound
sbb
xor
ds
int3
sarl
out
js
adc
jecxz
xchg
push
add
jbe
addr16
mov
add
or
push
vmovhps
cmpb
cmp
or
int3
sbb
xchg
xchg
repz
mov
sub
fnsetpm(287
mov
xor
sub
cld
insl
xchg
mov
imul
mov
add
addb
aas
sub
xchg
push
roll
cmpsb
mov
cmp
icebp
es
subb
outsl
xchg
cs
adc
cmp
mov
sub
xlat
mov
repz
aam
dec
sub
dec
into
pop
shrl
mov
clc
xchg
addr16
repz
mov
sub
or
xchg
std
popa
sub
ljmp
shlb
and
cmp
test
ror
xchg
jae
pop
sbb
mov
pusha
int3
pop
mov
mov
icebp
dec
cmpsl
out
push
push
cs
loope
rorb
and
in
into
clc
add
data16
dec
out
nop
repnz
push
aaa
mov
test
and
push
push
add
sahf
aad
mov
je
pop
pushf
in
test
jae
mov
aas
jae
xor
mov
or
aam
add
pusha
mov
xchg
xchg
sbb
lds
push
mov
stc
pop
jcxz
stos
push
push
dec
mov
lods
sub
test
fs
cltd
and
jae
cli
jbe
and
mov
dec
sub
xchg
movsb
adc
mov
adc
flds
sbb
lea
bound
call
sub
std
pop
pop
inc
rcrl
xchg
mov
cmp
jae
mov
pop
push
xchg
aam
pop
stos
fwait
inc
adc
adc
and
xchg
aas
mov
mov
inc
ret
fnsave
sbb
sahf
enter
add
lods
lcall
sub
clc
dec
mov
lahf
jmp
adc
shll
add
clc
dec
dec
inc
mov
push
je
add
push
pop
insl
cmp
dec
xchg
cmpsb
cmp
shll
xchg
mov
sbb
push
mov
fadds
xchg
xchg
xor
jb
stos
mov
repnz
jae
ficoml
cld
or
push
aas
push
mov
in
cwtl
lods
xchg
pop
sub
jle
jp
add
xchg
dec
push
and
xchg
mulb
test
lods
dec
add
xchg
mov
pushf
push
and
adc
and
xchg
inc
xchg
test
adc
enter
sbb
into
xlat
repz
adc
ds
dec
leave
in
mov
aad
rcl
popa
cltd
push
lret
cmc
cmpsl
movsb
dec
sbb
xlat
inc
daa
std
aad
push
lods
cmpsb
adc
jne
shrl
jae
rcr
sbb
mov
inc
cmpsl
outsl
dec
xor
or
dec
adc
pop
cmp
popf
cs
aam
insb
sbb
pop
add
jge
in
adc
sbb
push
mov
sti
or
aas
lcall
pop
mov
rcll
int
mov
fbld
pop
adc
pusha
mov
xchg
fsubrl
adc
outsl
jo
lods
mov
scas
pop
cld
fstpt
mov
xchg
rorl
adcb
sub
sahf
or
or
aam
jl
aad
pop
loop
push
cli
mov
mov
or
mov
rcll
dec
or
xchg
jo
ret
xor
inc
inc
push
lahf
ds
cmp
shll
mov
mov
inc
xor
xlat
je
insl
jne
cmp
inc
rolb
and
cld
xor
das
inc
push
pop
cmp
sbb
jmp
pop
sbb
adc
into
roll
sar
dec
mov
mov
stos
sub
add
out
pusha
movsl
sti
fstl
or
push
scas
call
repnz
pop
pop
js
sub
or
lret
adc
int3
add
sahf
test
xor
inc
pusha
add
stc
jp
mov
push
out
addr16
movsb
xchg
add
clc
aaa
xor
fsubrs
fisubl
jge
fs
push
fstpl
mov
mov
mov
test
cld
sub
inc
mov
pop
push
adc
ficoms
pop
cmp
ror
stos
mov
pusha
jb
push
jmp
jmp
sarb
add
mov
imul
sbb
in
sub
std
cmp
jne
fs
push
jbe
dec
xor
push
pushf
clc
leave
inc
add
dec
jne
dec
jae
sahf
test
adc
add
and
mov
jne
stos
or
sbb
xor
and
or
lods
add
movsb
mov
insl
lods
or
out
int3
into
cmp
jbe
loop
sub
hlt
mov
insl
push
jle
out
ds
push
cmp
inc
ret
push
mov
cltd
inc
js
mov
lret
cli
sarl
scas
mov
push
cli
mov
mov
orb
fdivr
dec
fdivrs
adc
loopne
inc
sti
mov
fstl
mov
decb
add
jecxz
sub
popa
fistps
jge
addr16
mov
popa
sbb
shll
jge
fistps
out
push
push
fnstenv
stc
jle
faddl
mov
into
rol
cmp
sahf
sahf
ret
lds
lods
mov
xchg
nop
xchg
sub
rorl
and
or
out
mov
loopne
pop
loop
jp
xchg
jg
incl
pop
pop
insl
out
repnz
cmpl
sahf
cmpsl
jl
xor
test
rcrb
insl
les
lahf
test
dec
shlb
adc
and
mov
ds
push
mov
fadds
mov
or
push
lea
cmp
or
sarb
adc
rcl
fwait
shrl
incb
stos
mov
ficompl
fwait
ds
repz
add
sahf
fs
jmp
movsb
push
insl
lret
mov
add
fdivrp
in
movlps
sub
sar
xor
jne
jg
out
enter
iret
pop
jecxz
xchg
cmp
xor
push
addr16
lret
sub
push
mov
loopne
xchg
aaa
mov
adc
pusha
dec
lods
push
mov
xchg
lret
mov
jg
ljmp
mov
lret
dec
lcall
into
sub
scas
leave
sub
dec
notb
ret
cmp
stc
jmp
mov
and
mov
out
pusha
cwtl
call
sbb
push
dec
jge
sbb
push
clc
pop
mov
xchg
insb
adc
inc
fs
xor
xor
push
mov
repnz
pop
pop
mov
xchg
or
ds
mov
mov
out
pop
xchg
jg
push
xor
jmp
jnp
clc
xchg
xchg
pop
lahf
test
inc
int
pop
jge
xchg
stc
loop
fwait
mov
jno
rclb
adc
pusha
es
imul
pop
mov
addb
scas
daa
popf
sahf
addr16
fcmove
call
mov
mov
pop
mov
imul
data16
jmp
sbb
mov
movsb
cmc
sub
std
ja
push
mov
ds
and
aam
ljmp
sti
adc
aas
mov
push
mov
sarb
or
inc
adc
int
push
pop
popf
xchg
fdivr
shrb
cmp
mov
scas
pop
sarl
mov
outsb
xor
pop
mov
xchg
fisubs
pop
push
and
mov
test
clc
rcr
dec
daa
repnz
cmp
nop
cs
xchg
sahf
shrl
and
add
lock
lods
cmpl
pop
into
push
jp
cs
stos
adc
cmp
mov
jle
shlb
jmp
jmp
repz
test
xor
cld
xchg
cmpsl
jmp
inc
push
es
lcall
loopne
daa
dec
push
lock
cmpsl
ljmp
push
sub
out
stos
test
addr16
add
mov
imulb
loope
dec
adc
jge
cwtl
pop
inc
ds
mov
pusha
and
jb
push
jg
sbb
ds
aaa
mov
xorb
fstl
dec
xchg
pop
lea
mov
sarl
add
mov
dec
repnz
sti
enter
jnp
inc
push
ret
adc
jne
les
mov
scas
fstps
mov
out
inc
js
dec
jge
inc
mov
jmp
lahf
xor
or
bound
fstps
cmp
pop
sub
cwtl
inc
jl
shr
pusha
bound
mov
adc
mov
stos
push
mov
xor
sahf
jb
push
int
lret
cld
or
rcrl
mov
shlb
push
movsb
int3
add
dec
adc
push
int3
jp
or
sti
mulb
cmp
enter
sti
sub
xchg
cmc
fsubrs
cs
xchg
sarl
xchg
sub
push
int3
adc
mov
pushf
jecxz
xchg
dec
call
fcmovb
scas
sub
sub
out
std
xchg
je
mov
push
inc
test
xchg
jge
fisttpl
cmpsl
xor
inc
out
mov
mov
mov
in
add
pop
popf
xchg
sahf
xchg
mov
push
shll
das
mov
pop
shll
mov
rcll
cwtl
pop
loope
enter
push
mov
ds
ss
cli
mov
aam
mov
sub
insb
jmp
or
and
das
pop
jecxz
mov
inc
stos
sti
rclb
daa
adc
lods
aam
inc
push
xchg
hlt
push
out
nop
pop
mov
shll
inc
clc
fisubrl
sbb
into
mov
sub
mov
push
aas
pop
cmc
cwtl
sbb
inc
stos
push
stc
addl
jmp
into
in
cmp
loop
clc
je
aas
rorb
pop
adc
stos
and
pop
lods
jb
stc
pop
repz
xorl
loopne
dec
mov
imul
pop
cmpsl
arpl
enter
add
cld
dec
mov
push
ljmp
jg
adc
lcall
or
sub
rorb
xor
dec
xchg
sbb
xlat
gs
jp
add
fldcw
mov
popf
cmp
jae
aaa
sti
test
pop
jp
push
stc
out
fstl
xlat
pop
xchg
mov
dec
repnz
mov
mov
mov
cmp
rcll
xchg
xchg
test
pop
mov
pusha
xor
xchg
jno
mov
int3
lods
rorb
mov
inc
cmpsb
cmp
jo
clc
and
ljmp
mov
shll
or
stc
push
cmpsl
cwtl
pop
fs
lcall
scas
pop
pop
pop
sbb
sti
subl
inc
dec
ret
insb
add
cli
xchg
pop
xchg
xor
je
pop
pop
and
sbb
pop
mov
and
mov
aas
dec
xchg
test
popf
scas
xor
mov
ds
in
push
cmp
pushf
pusha
rclb
add
inc
pop
sub
mov
cmp
in
mov
mov
mov
sbb
cld
sbb
test
push
out
mov
xor
cmp
sub
push
pusha
fldt
leave
fisttps
mov
xchg
xor
lock
cmp
xor
into
jae
test
ret
stc
xor
adc
in
mov
mov
sahf
xlat
xchg
adc
out
inc
imul
movsl
int3
sub
pop
dec
mov
shr
push
cltd
mov
mov
or
push
fisubl
scas
dec
int
mov
loope
inc
jae
rcrl
or
shrl
negl
jne
push
cmp
xchg
xchg
mov
push
andl
jg
jmp
mov
test
mov
cld
or
push
nop
fistpll
jle
mov
out
jmp
sbb
ror
pusha
add
lret
xor
test
dec
int
push
xchg
daa
cmp
cltd
jne
sub
mov
lret
xchg
mov
pop
jne
frstor
rcrl
out
pop
dec
jle
jmp
jnp
and
jae
xchg
int
dec
sub
mov
stc
adc
xor
pop
sub
cs
int3
mov
mov
cmp
add
xchg
mov
push
or
mov
das
ret
call
outsl
insb
sar
sbb
lds
icebp
pop
insl
imul
cltd
repnz
jne
pop
scas
aad
push
jge
in
and
xor
cmpsl
imul
add
out
mov
insb
addb
rcrl
and
sub
mov
mov
mov
bnd
xchg
pop
mov
push
movsl
jnp
dec
jge
mov
add
sbb
push
jle
test
dec
das
push
pop
dec
cmp
xlat
movb
mov
xchg
sbb
sub
mov
xlat
in
nop
mov
decb
ss
into
lds
dec
mov
aam
xor
daa
lahf
je
mov
pop
movsb
dec
pushf
sarb
lcall
ds
xchg
mov
xor
lods
faddl
mov
into
ror
jo
cmp
lods
or
jecxz
add
popa
push
push
test
insb
sub
lcall
dec
pop
ds
sti
or
popf
nop
jno
sbb
push
xor
aad
mov
jl
xlat
int3
icebp
aam
pop
into
mov
repnz
sub
mov
lahf
adc
test
or
rcll
sbb
into
dec
jp
int
or
dec
mov
mov
inc
aad
mov
add
int3
stos
out
dec
cmp
pop
nop
repnz
pop
es
push
dec
xchg
loopne
aad
stc
mov
rcrb
ljmp
inc
jg
mov
addr16
mov
mov
ja,pt
into
xchg
mov
dec
mov
sbb
out
jmp
leave
jg
inc
jmp
pop
imul
jle
dec
cmp
leave
into
sbb
mov
call
pop
les
jb
mov
imul
mov
pop
cwtl
push
lods
pushf
shlb
mov
addr16
sarl
mov
stc
jp
jne
xchg
inc
pop
dec
repz
xlat
jge
dec
cmp
push
sbb
sub
jecxz
ja
sub
mov
or
push
pop
fadd
cwtl
scas
hlt
imul
adc
pop
xchg
push
call
rclb
and
stos
enter
xchg
dec
repz
mov
jl
fsubs
fld
mulb
push
pusha
ds
dec
les
or
mov
rcrl
loopne
push
out
xchg
sub
in
inc
scas
add
push
mov
push
jo
dec
adc
test
shll
fidivl
in
ljmp
adc
xchg
mov
test
inc
fcmovnb
adc
jge
pusha
scas
pop
pop
push
dec
aam
ret
jae
jl
lods
xor
push
out
adc
cmpsl
imul
stos
ds
adc
je
andb
loop
pop
das
lahf
add
add
xchg
mov
mov
loop
leave
into
sbb
xor
cltd
dec
mov
rep
and
add
sahf
cmpsb
stos
add
ds
scas
push
pusha
lahf
jae
cmpl
and
out
cmp
push
rorl
jae
inc
cld
ret
add
ljmp
scas
shrl
scas
mov
daa
xchg
adc
or
into
and
stos
loop
int
lock
xor
push
fprem
lds
enter
enter
aaa
push
in
cmp
sub
cltd
mov
mov
pop
punpcklbw
shrl
aam
sub
stos
out
jns
lret
hlt
inc
or
rcl
jnp
adc
stos
frstor
pop
mov
pop
movsl
cmpsl
jge
or
fwait
push
lods
insb
scas
add
pop
scas
pushf
in
ficoml
fisubrl
stc
xchg
xchg
pushf
dec
rcl
jge
jne
lcall
jo
add
push
int3
mov
hlt
lcall
out
stos
jl
pop
mov
lods
push
out
mov
push
je
stos
pushl
mov
cmp
cmpsl
mul
das
pop
outsl
aad
lods
xor
lcall
mov
mov
cmp
aam
out
jnp
and
jne
mov
push
cmp
cmc
cmp
mov
repnz
pop
je
and
ret
push
pop
out
mov
ljmp
add
pop
mov
inc
ss
and
int
mov
out
dec
daa
push
mov
and
cmpsl
sar
int
xor
xor
clc
pusha
xchg
mov
push
mov
dec
mov
scas
lods
aam
shll
mov
cli
mov
ds
ror
pop
fldl
inc
aas
scas
dec
xor
inc
sahf
xchg
adc
aas
lret
dec
fcompl
lods
rcll
fsubr
rclb
push
xor
movsl
mov
test
repz
cmp
inc
ja
mov
repz
je
pushf
pop
int
movsb
xchg
shrl
in
or
dec
shll
jae
and
mov
and
mov
sub
rcrl
movl
sub
add
mov
lds
inc
shrl
rcr
or
push
mov
pop
out
adc
rcll
mov
xchg
fsub
dec
xchg
ljmp
jmp
subl
imul
nop
mov
pop
dec
adc
rorb
adc
lock
add
add
repz
or
dec
loopne
movsb
aas
and
add
and
cmp
stos
fisubrl
mov
test
mov
dec
xchg
inc
icebp
sarb
imul
test
aad
int3
sub
xor
add
sar
movsl
das
xchg
shll
fadd
jno
push
adc
push
in
movsb
cmp
out
sbbl
mov
mov
mov
xor
add
mov
lods
xchg
rcrl
push
dec
jge
addb
cmp
inc
push
leave
inc
not
in
je
iret
cmp
jo
and
es
dec
test
xchg
mov
shrl
cmp
outsl
lret
outsl
mov
dec
mov
test
pop
pop
pop
push
jge
jge
mov
sbb
std
xor
pop
lds
pop
sarb
or
cmp
shrl
ret
pop
dec
aas
addr16
xor
pop
imul
xor
leave
shrl
int
pop
sub
insb
sub
xchg
jae
jbe
int
lret
lret
leave
dec
es
jmp
jno
rdtsc
jecxz
adc
mov
add
fdivrs
out
and
jge
loope
jl
push
sarl
scas
call
push
lock
stos
jle
and
scas
mov
sbb
inc
xor
lret
stos
jge
mov
shll
pop
enter
xchg
fisubl
aam
fistl
dec
lcall
incl
daa
ret
test
cltd
xchg
mov
clc
dec
adc
sub
js
xor
cld
sub
mov
or
sarl
sbb
or
fwait
mov
loope
out
mov
mov
clc
and
sub
jmp
shl
mov
scas
push
xchg
sub
mov
inc
pop
aad
adcb
in
xchg
push
or
fs
fidivrs
call
mov
mov
mov
out
iret
sar
cmp
cwtl
movsl
pop
push
mov
and
adc
mov
jecxz
insb
js
inc
rolb
fstpl
mov
les
adc
aam
shl
imul
sub
stc
xor
jle
push
jmp
mov
mov
or
pop
inc
lahf
stc
mov
sub
repnz
mov
lods
cltd
cmp
std
repnz
xor
shrl
repz
mov
testb
xchg
pop
lods
lods
dec
adc
sub
popa
jns,pt
sub
mov
fcoms
mov
mov
dec
aas
mul
mov
add
push
jne
mov
or
cs
cmp
pop
sbb
sahf
cld
mov
pop
xor
addb
mov
sbb
aam
out
xchg
mov
in
shrb
pop
cmp
mov
xchg
pop
push
pop
xor
shlb
pop
mov
mov
mov
and
cmp
sbb
stc
gs
imul
pop
pop
sub
pushf
add
in
fs
inc
movsl
add
inc
pop
es
and
imul
pop
rcr
pop
sub
movsb
mov
xchg
sti
pop
mov
lods
cld
pop
xlat
bound
push
cmp
punpckhbw
pushf
insl
ss
jp
outsb
mov
hlt
cmc
push
push
push
fsubrl
int
cld
sbb
pop
imul
movb
sbb
sbb
nop
imul
dec
push
jns
ss
fidivl
push
stos
mov
test
std
stc
pop
push
mov
mov
lds
popl
sbb
push
inc
mov
jecxz
lahf
sbb
pop
jmp
mov
xor
mov
adc
jg
imul
adc
lret
mov
mov
rclb
out
int3
cmp
rcll
xchg
sbb
gs
lcall
shl
xchg
cmp
sahf
xchg
push
loopne
and
cmp
push
je
sti
jmp
xchg
xchg
xchg
hlt
adc
je
inc
sub
mov
jbe
clc
jg
loop
dec
adc
lock
mov
mov
or
push
psubq
add
fidivrl
lahf
adc
cmpsb
rol
xchg
ds
adc
shll
cmp
mov
or
ss
push
lods
cmp
xchg
lods
pop
dec
mov
int
loopne
pop
data16
call
arpl
test
pusha
loop
shl
mov
xchg
pop
test
es
clc
movsb
stc
stos
insb
push
push
xchg
mov
mov
push
sub
out
fcmovnb
roll
xor
daa
xchg
jg
lods
pop
andl
mov
scas
jle
xchg
add
pextrw
sub
bt
or
call
push
adc
fstl
cmp
mov
rcrl
and
mov
jmp
shll
test
dec
mov
adc
pushf
sar
xor
repz
push
sub
sbb
add
xorb
cld
pop
daa
jno
mov
dec
mov
mov
cmp
cld
xor
cli
jnp
cmc
bswap
adcb
scas
jbe
iret
jns
inc
xchg
mov
xor
fbstp
mov
int3
push
jl
xorb
unpckhps
out
cmpsl
mov
shll
fdivp
iret
add
shrl
mov
addr16
inc
lock
dec
jbe
testl
or
imul
rclb
mov
fsubl
out
pop
mov
mov
xorb
mov
lret
mov
lds
mov
mov
fldcw
shrb
shlb
adc
dec
xchg
aam
addr16
repnz
popf
mov
and
mov
dec
sbb
in
mov
std
and
or
sbb
mov
icebp
repnz
lds
jge
mov
bound
jns
mov
xor
pop
push
xor
lret
outsl
pop
clc
mov
or
jne
call
xchg
addr16
adc
mov
mov
jecxz
clc
enter
pushf
sub
push
es
adc
int3
out
pop
pop
push
and
frstor
push
xchg
or
imul
in
nop
pop
popf
push
shll
or
push
add
mov
sti
clc
mov
jl
inc
incl
pop
push
mov
inc
insl
mov
pop
clc
sbb
rclb
sub
rcl
cmp
xchg
mov
push
lret
cwtl
cmpsl
mov
cmpsb
fldcw
adc
cmp
fmull
repz
rcll
mov
lods
frstor
repnz
mov
mov
jbe
jno
sahf
xchg
jne
cmpsl
pusha
pop
xchg
push
hlt
ret
push
and
in
sahf
andb
test
insl
out
mov
pop
std
cmp
das
xor
push
and
das
out
aam
stc
imul
leave
or
jae
addr16
ret
fimull
repz
mov
mov
or
cwtl
pop
clc
cmpsb
not
xchg
popf
in
std
repz
jne
ret
xor
push
xor
jle
roll
jno
lret
into
movl
ds
mov
cltd
aad
subl
and
addr16
xchg
rorl
pop
lock
mov
rcrb
sub
sbb
push
jno
ficompl
loopne
rcl
and
lods
sbb
int3
idiv
cltd
or
rcr
repnz
pop
pop
xor
add
out
or
mov
sub
dec
orb
push
and
call
movsl
test
repz
and
lret
fld
lret
or
andb
scas
mov
jp
sbb
sahf
ror
shll
mov
cltd
mov
enter
inc
flds
movb
jg
cmovnp
sbb
adc
rcrl
xchg
pushf
jp
test
adc
hlt
pop
add
ds
rorl
jo
and
rcrl
add
adc
fdivr
popf
fnstsw
adc
faddl
jl
fistpl
cs
int
sub
xchg
mov
aad
inc
sub
leave
mov
mov
sub
mov
sub
adc
in
push
es
fbld
fwait
jmp
cmpsb
insb
adc
sbb
shl
and
cmpsl
dec
je
hlt
int
pop
add
repnz
mov
outsl
cld
fisubrs
inc
fcmovnbe
lods
adc
xchg
mov
sub
mov
push
shll
and
stc
lahf
test
adc
cmp
pop
adc
lods
int3
aad
pop
jl
inc
repnz
adc
cwtl
mov
leave
sub
imul
orb
cmpb
and
jle
pop
xor
xor
sub
xchg
xchg
pop
dec
into
push
mov
sbb
sahf
fs
or
cmp
pop
loope
pop
or
xchg
fstpl
mov
popa
and
in
xorb
push
out
stc
loope
push
ljmp
pop
in
pop
call
sarl
adc
ret
in
cmpl
scas
lods
adc
lret
mov
sbb
fcoml
es
pop
repnz
int
dec
cmp
loop
int3
xchg
adc
mov
loop
mov
dec
out
mov
dec
out
lahf
xorl
dec
sub
fldt
mov
jle
and
aaa
dec
aad
dec
pop
out
lods
cmp
js
lahf
add
rolb
or
and
or
ljmp
mov
push
leave
daa
cli
mov
mov
sub
jne
cmp
xor
xchg
jle
in
push
jne
in
iret
mov
insl
cmp
ret
mov
xor
sub
clc
insl
pop
lea
push
setbe
inc
cmp
inc
cwtl
sbb
jl
or
add
js
into
mov
lods
jns
mov
or
in
out
imul
jbe
das
cltd
subb
lcall
shl
add
out
test
jge
xor
adc
idivb
fsubrl
sahf
shrl
dec
out
mov
push
repz
lea
sarl
push
sti
adc
sub
cmp
inc
insl
ret
push
add
sub
pop
sarl
fadds
pop
adc
addr16
adc
or
imul
jmp
jno
outsb
push
pop
addl
pop
loopne
pop
jle
jb
mov
cltd
lret
jge
cmpsl
pop
lock
shrl
mov
cmpsl
sbb
repnz
std
jecxz
mov
push
push
mov
popf
sar
pop
insb
jg
scas
enter
mov
sti
inc
jge
test
test
hlt
mov
fstp
xchg
stos
or
pop
into
lods
xor
mov
ds
test
rep
fdivrs
repnz
shlb
cmp
shlb
add
pop
inc
xchg
pop
rcll
add
pop
pushf
adc
cmp
mov
or
xor
push
jl
sbb
lahf
push
into
rcll
in
loopne
lock
push
lret
rcr
inc
movsb
inc
ret
mov
les
push
sub
xchg
in
mov
ret
inc
fists
addr16
adc
xchg
movsb
popa
cmp
mov
sti
out
push
inc
add
push
cmp
mov
jo
into
or
inc
mov
mov
nop
ss
jge
fdivrl
sub
mov
dec
int3
jge
mov
inc
add
adc
popf
rcrl
sub
nop
fsubrl
mov
cmpsl
mull
test
rolb
aad
ljmp
lock
lahf
cmp
jg
pop
pop
sbb
xor
arpl
stc
xor
jne
fnstcw
mov
rcll
dec
test
dec
xchg
push
pushl
js
push
or
sub
sbb
jg
jno
fs
xor
call
mov
ficompl
pushf
hlt
pop
cmp
or
mov
lcall
xor
and
xchg
daa
call
daa
inc
push
cmp
test
mov
mov
jl
scas
mov
add
dec
push
sti
xchg
mov
mov
push
jns
xchg
push
mov
test
xchg
fdivs
inc
mov
test
xchg
dec
rcll
or
inc
sub
adc
inc
popa
mov
sarl
enter
xchg
enter
pop
pop
jp
dec
cmp
pop
mov
outsl
lcall
fildll
ss
xor
int3
fsubl
ret
pop
sbb
pop
aaa
ficompl
pop
mov
jmp
xlat
mov
push
sbbl
jno
sahf
rcll
push
iret
into
daa
add
cmpsb
or
jo
frstor
fists
ret
les
sbb
inc
scas
loope
jae
into
popa
sub
lahf
aaa
pop
add
inc
mov
xchg
lcall
sub
push
mov
mov
insl
aaa
jmp
ljmp
rcrl
cmp
pop
mov
cmpsb
std
repnz
lods
sub
adc
repz
pop
sub
rolb
pop
push
adc
dec
fisttpl
and
fst
je
ds
adc
add
mov
js
cltd
cli
dec
shr
inc
imul
mov
or
and
data16
mov
mov
inc
sbb
sub
xor
jbe
mov
ljmp
xchg
jbe
or
inc
or
imul
jl
push
pop
sahf
fistps
cwtl
mov
into
adc
add
or
push
mov
scas
icebp
mov
lret
repz
xor
sti
jp
rcr
lcall
int
xchg
fidivs
and
into
sbb
fidivrs
cmp
mov
dec
push
push
lret
clc
call
jmp
and
mov
cs
inc
nop
inc
int3
lds
pop
mov
xor
mov
jmp
fisubl
test
outsb
adc
xchg
or
std
mov
pop
out
lret
fs
sub
in
movsl
cmpsb
dec
or
scas
jl
stos
cmp
mov
and
stos
adc
repz
or
leave
das
popf
or
insb
sub
daa
clc
into
add
out
add
sub
stc
js
and
or
push
inc
dec
insl
push
adc
sbb
mov
push
sarl
jmp
sub
test
push
cmp
and
add
jae
enter
cli
fwait
call
mov
in
pushf
pop
or
add
adc
dec
loopne
hlt
adc
rcrl
mov
rorb
mov
and
out
in
and
das
lret
xor
adc
andl
xor
repz
dec
mov
jne
adcl
xlat
test
imul
mov
mov
aad
jne
iret
mov
sbb
movsb
arpl
and
inc
sarl
lahf
outsl
stc
push
mov
and
mov
cli
cli
roll
mov
xor
sahf
jmp
lret
mov
xchg
pop
or
imul
repnz
lds
arpl
daa
adc
lods
and
pop
cli
pop
jae
mov
daa
ret
adc
pop
fisubrl
rcrl
cmpsb
pop
rolb
int3
lahf
rcll
stc
lret
inc
xchg
addr16
xchg
inc
icebp
shr
out
fistpl
fwait
push
sbb
das
mov
mov
lock
int
push
dec
or
or
mov
xor
int3
or
jl
mov
adc
jne
mov
cwtl
xor
jne
mov
jb
xlat
into
shr
jg
scas
cmpsl
out
in
test
adc
inc
dec
jne
jmp
push
mov
jne
fdivl
lret
ret
repz
add
inc
int
adc
insb
and
push
rol
outsb
adc
inc
or
inc
into
movsl
push
mov
cld
and
leave
out
outsl
lods
xchg
sub
test
xchg
dec
dec
insl
pop
mov
jno
rorl
xor
push
cmp
xor
inc
adc
std
ja
push
xchg
and
mov
pushf
sarl
sub
sarb
shlb
into
sub
pop
xchg
xorb
aaa
dec
sub
inc
push
and
sti
rcl
adc
xor
test
je
jl
ja
popf
hlt
popa
pop
inc
call
ss
into
xchg
pop
mov
xor
fmuls
subb
push
push
cmp
add
int3
cmp
add
jge
dec
adc
scas
mov
lods
mov
lcall
xchg
mov
push
movsb
icebp
pop
dec
push
imul
xchg
les
add
sbb
xchg
inc
mov
ja
mov
xchg
mov
stos
sbb
call
mov
dec
pop
pop
pushf
test
jge
fs
stos
lods
push
fnstsw
mov
shll
nop
push
xchg
insl
mov
mov
pushl
mov
or
mov
mov
test
insb
lock
shlb
lock
jg
jecxz
cmpsb
cmp
add
insl
mov
shlb
mov
int
jnp
sbb
mov
pop
fnstsw
mov
gs
push
pusha
imul
rclb
jmp
cs
xchg
and
mov
ss
rol
mov
in
rol
jno
hlt
out
in
mov
int3
int3
repnz
movl
repnz
fsubl
mov
stos
loop
and
and
rorl
sub
sbb
out
out
sub
xlat
in
cmp
push
pusha
aas
adc
cmp
orb
aam
mov
xor
push
mov
add
cmpsl
mov
rcrl
inc
pusha
push
cmovp
mov
inc
lods
add
xlat
push
pusha
jecxz
pop
sbbb
cmp
orb
jb
cmpl
jge
js
mov
xchg
xor
or
pop
adc
sub
mov
mov
mov
insl
add
xor
pop
dec
mov
fs
rorl
inc
je
pop
clc
aas
mov
add
mov
or
xchg
pop
int3
pop
rcrl
push
daa
xchg
idiv
fmuls
dec
jae
pop
and
pop
sbb
mov
popa
out
repnz
in
add
fadds
mov
add
ja
dec
andl
hlt
push
fsubr
push
dec
sar
das
and
stc
in
push
push
stos
pop
xchg
idivb
mov
sbb
pop
pop
aas
lahf
sub
cld
out
fisubl
shll
push
inc
xlat
sbb
cli
cmp
dec
cmp
cmp
jle
jo
ret
xor
sbb
ljmp
idivb
mov
fldt
xchg
pop
xchg
call
pusha
je
jae
stos
sbb
mov
ror
std
fdivl
or
sbb
and
inc
shlb
in
sbb
lret
xor
mov
mov
jg
lahf
cli
push
popa
mov
cmc
or
rclb
sub
mov
push
inc
pop
out
mov
xor
cmp
jbe
scas
pop
repnz
out
dec
mov
sahf
cld
lret
inc
xchg
stos
out
lcall
pusha
jg
adc
loopne
jns
dec
roll
pop
roll
and
mov
mov
cmp
ljmp
scas
sarl
adc
jns
xchg
cmp
ret
dec
cmp
xchg
mov
rcrb
xor
dec
dec
jnp
hlt
fisttps
int3
and
push
mov
push
outsb
pushf
insl
xchg
jne
push
andb
add
je
sbb
loope
out
cmpsb
mov
mov
hlt
push
or
icebp
push
fidivs
sub
jge
roll
jno
xchg
leave
loop
ret
sub
xchg
repnz
mov
push
xor
out
popf
dec
ss
addr16
or
push
xor
into
jae
add
mov
fnstenv
push
xchg
push
cli
loopne
or
jecxz
test
add
movsl
cmp
rolb
sbb
jnp
repz
loopne
dec
xor
or
adc
stos
push
shll
leave
pop
adc
mov
push
or
mov
lods
xchg
mov
test
inc
fidivl
call
push
fists
jg
lods
sahf
pop
insl
sub
pop
popf
clc
inc
stc
daa
insl
pop
cmp
sub
outsl
xchg
sub
push
xchg
xor
leave
jp
dec
cmp
aad
mov
repnz
mov
mov
mov
decb
inc
sahf
rolw
jb
xor
ret
push
addr16
xchg
sbb
and
mov
mov
pop
adc
mov
shl
push
add
sarb
out
aaa
pop
roll
scas
inc
shll
outsl
push
pop
inc
pop
fcmovnb
js
push
lret
or
mov
ja
and
nop
cmp
subb
adc
push
popa
gs
shrl
sbb
out
dec
sbb
cmpsl
push
scas
mov
mov
hlt
xlat
into
pop
bnd
lahf
cwtl
xor
daa
or
xchg
jb
push
mov
push
sub
pop
cmp
rolb
aas
fs
imul
test
rcr
les
jge
es
mov
mov
negl
xor
insb
add
sub
or
mov
es
cltd
aas
jle
ljmp
call
mov
leave
adc
dec
jae
dec
sahf
stc
out
adc
lds
clc
popf
shrb
insl
lcall
in
mov
jl
xchg
fcom
pop
xor
std
rorl
fsubrl
fcompl
sbb
jge
or
into
in
into
rolb
scas
shll
test
cs
jp
shl
mov
xchg
xchg
adc
call
inc
mov
arpl
jp
xlat
fcoml
cwtl
inc
xchg
or
push
inc
fidivrs
jmp
mov
ds
pushf
inc
xor
mov
jne
push
cmpsb
sar
xor
jl
test
int3
jg
xchg
xchg
dec
xor
aad
dec
inc
add
pop
rol
fisttpll
sbb
fldl
cmc
ja
stos
lds
dec
dec
ss
mov
add
push
sbb
rcll
pop
xchg
dec
iret
stc
mov
jns
rep
mov
xor
mov
sub
out
test
xchg
sti
repnz
add
adc
xchg
mov
push
movsl
adc
pop
xor
mov
push
or
rolb
push
ljmp
mov
pushf
dec
incb
fldcw
cs
mov
repnz
cmp
xchg
fcmovnb
xchg
mov
stos
add
push
orl
push
pop
dec
jecxz
mov
ja
ljmp
aas
pop
out
add
mov
jg
stos
xor
lods
fildll
jge
push
insl
decb
push
inc
rol
adc
sub
inc
popa
ds
sub
inc
insl
out
dec
call
xor
xchg
jne
ljmp
arpl
aam
ss
push
rcrl
jecxz
loopne
xchg
aas
jl
lea
fst
hlt
ss
push
fstl
or
mov
inc
test
add
gs
pop
adc
ret
int3
xor
ss
xlat
imul
push
fcmovnb
hlt
jo
dec
mov
inc
mov
aad
addr16
jg
mov
push
push
push
icebp
xor
int3
mov
fcmovbe
add
xchg
cmp
cs
in
ja
push
shll
hlt
in
mov
jmp
add
mov
dec
movsl
mov
fwait
xor
test
add
xchg
xor
mov
sbb
sub
pop
mov
sti
inc
test
call
jbe
pop
xlat
mov
std
pop
loopne
xchg
or
adc
dec
xor
test
xor
mov
mull
adcl
or
inc
jne
and
jbe
shll
and
imul
shll
out
mov
xchg
aaa
aas
les
add
cwtl
adc
stos
mov
dec
jo
insl
xchg
mov
push
pop
xchg
js
enter
mov
leave
std
aad
popa
jecxz
aas
lahf
insb
sbb
scas
push
daa
fsub
adc
jne
cmpsl
aaa
insl
sub
shrl
mov
je
rclb
aam
stos
pop
jne
add
and
sub
pop
scas
ret
dec
arpl
int3
xchg
lret
inc
pop
repz
cld
mov
adc
nop
addl
fbstp
daa
pop
mov
stc
lahf
mov
rorl
cmpsl
adc
mov
scas
xor
cmp
sub
bswap
and
lahf
insb
ret
out
gs
into
imul
enter
and
mov
pop
sub
xor
mov
pushw
enter
or
jge
and
in
test
jge
add
lret
lea
out
pushf
mov
xchg
stos
inc
pop
insl
dec
mov
push
shll
xchg
mov
mov
ja
mov
mov
add
rolb
loop
ds
mov
cmp
lods
js
lahf
je
jb
inc
mov
mov
mov
pop
daa
and
inc
lods
ja
leave
add
pop
shl
lods
push
loopne
popa
sub
jmp
fsubr
stos
aad
and
scas
add
repz
stos
fcom
mov
inc
repnz
pop
xchg
cmpb
push
pop
pop
test
mov
dec
into
sti
cwtl
shll
push
mov
adc
aad
inc
imul
push
cmp
shll
mov
or
xchg
dec
sbb
mov
sbb
add
gs
rcll
jge
shlb
add
mov
std
rorl
mov
in
xor
rolb
int
rolb
or
inc
mov
mov
adc
fsubs
stos
cmc
les
xchg
arpl
aas
xchg
dec
das
stc
lds
ret
jns
scas
xchg
ds
xchg
sbb
mov
xor
adc
fstpl
fcoml
ds
in
je
mov
push
push
adc
incb
pop
aas
scas
stc
xchg
fildl
sarb
std
cli
mov
sub
movsl
int3
rol
pushf
cmp
sub
shll
cltd
pop
or
push
int
stos
or
neg
imul
out
inc
out
sub
pop
push
dec
test
xchg
xor
pop
dec
add
inc
pusha
or
jne
xor
push
sbb
ror
adc
jge
adcb
sahf
lods
inc
in
fcmovnbe
inc
std
icebp
xchg
aam
loop,pn
sub
int
dec
lahf
mov
mov
stc
mov
jne
lret
lret
add
fs
jmp
dec
into
mov
dec
push
sahf
shll
or
push
imul
xchg
in
pop
cmp
sbb
push
sti
loope
scas
cmp
pop
out
mov
jmp
add
adc
pop
and
mov
shll
dec
movsb
test
fsubrs
push
movb
push
sbb
jge
fs
and
into
mov
ds
in
xchg
shlb
mov
xchg
test
cmp
std
sti
push
repz
test
bound
inc
lods
fdiv
jne
fwait
or
jl
dec
adc
jne
sbbl
and
jns
push
aad
mov
sub
pop
sarl
xchg
out
add
les
verr
sti
jge
mov
xor
sahf
sbb
xchg
daa
mov
pop
add
mov
push
mov
sub
pop
js
fmull
pop
ficoms
pop
inc
aad
mov
out
es
xchg
pop
rorl
shll
mov
jmp
repnz
mov
adc
cmp
inc
fs
lret
sahf
insl
imul
push
xchg
out
adc
in
pop
adc
xchg
add
fstps
inc
jg
pop
sub
xor
mov
jle
mov
psraw
enter
sahf
lahf
or
shl
adc
dec
js
fcoms
xor
arpl
inc
mov
std
filds
sub
adc
jg
sbb
out
mov
lea
mov
mov
clc
sti
mov
clc
xlat
fsts
js
inc
push
ss
pop
scas
bound
insb
js
mov
jecxz
xchg
mov
imul
sarl
out
and
int3
fisttpl
ds
dec
icebp
in
pop
repz
push
mov
dec
xchg
adc
add
mov
adc
pop
dec
daa
mov
pop
cmp
push
aaa
lret
cmp
mov
and
or
int
int
das
aam
add
mov
dec
ja
or
stc
xchg
in
xchg
mov
jae
mov
fxam
and
filds
repnz
mov
stc
aad
dec
jno
mov
icebp
call
lods
aad
jg
aam
test
inc
mov
sarl
imul
pop
shll
gs
push
add
add
jmpw
adc
cmpsb
lret
mov
shrl
and
int
lods
lods
fmul
and
pop
pop
pop
jp
jne
and
cmpsl
inc
mov
pop
repnz
mov
jno
imul
out
adc
dec
ljmp
ds
shrl
les
lods
push
cs
jge
ljmp
repz
jno
mov
xchg
sbb
cmpsb
ljmp
out
jge
adc
mov
and
call
sub
or
add
mov
decl
xchg
push
sbb
pop
sbb
and
popa
movl
mov
and
testl
push
jl
pushf
dec
or
scas
jnp
sti
addr16
repz
dec
cwtl
add
lcall
mov
push
push
loope
dec
aaa
movsl
mov
cs
lds
jge
mov
xlat
daa
pop
mov
jecxz
mov
insl
adc
pop
lret
int
sbb
add
and
mov
lcall
aad
mov
jecxz
lods
xor
sbb
jmp
xor
out
pop
outsl
out
pop
xor
ja
cld
imul
leave
sar
cmp
mov
adc
mov
dec
mov
xchg
stc
orl
bound
call
jbe
xchg
nop
adc
pop
jge
mov
rcl
pop
adc
ret
icebp
rorl
jo
shl
out
adc
cmpsl
mov
inc
mov
or
jecxz
imul
idivb
or
jl
or
call
icebp
jge
pop
aaa
inc
into
jne
xor
jge
mov
mov
lahf
adc
pop
repz
sbb
push
jnp
jge
repnz
xlat
sahf
cld
stos
in
jge
and
jecxz
clc
pop
lods
stos
cmovge
popl
pop
dec
loope
pop
test
sbb
out
cmp
popf
repz
cmpsb
ror
daa
idivb
xchg
cmp
add
movsb
jne
sub
repnz
mov
outsl
cmp
mov
jne
shl
mulb
sbb
out
adc
jp
jecxz
mov
push
mov
dec
pop
and
sbb
in
cmpsl
xlat
mov
jl
and
insl
dec
imul
jecxz
mov
dec
adc
cld
mov
lds
outsb
xchg
enter
aam
idivb
and
lds
push
sti
dec
pop
lahf
fdivrl
xor
pop
cmp
jp
add
mov
nop
imul
push
mov
mov
pop
test
sbb
repnz
stos
pop
jns
jg
fsubl
in
jge
push
scas
into
push
mov
mov
jae
cmpsl
lods
mov
jne
sub
mov
int
fistpll
jecxz
inc
xchg
nop
stos
loop
das
out
adc
and
mov
pop
test
xchg
mov
pop
cmp
mov
movl
or
lds
jmp
mov
xchg
dec
das
dec
jge
mov
loop
ss
lea
or
hlt
out
mov
ds
xchg
cmp
push
clc
adc
sti
mov
mov
ret
jne
ficoml
dec
pop
mov
or
or
dec
jne
push
mov
mov
arpl
sbb
das
lahf
push
sahf
mov
faddl
push
sti
xchg
je
cmc
pusha
push
push
sbb
or
aad
fbld
inc
push
jmp
dec
jne
lods
push
ja
mov
jno
rcrl
jl
mov
cmp
je
movsb
xor
cmp
lds
daa
mov
lret
outsl
jae
call
cltd
inc
adc
int3
xor
out
loope
pusha
and
pop
scas
pop
pop
rcrl
roll
out
aam
insl
imul
add
cmpsl
imul
mov
lds
roll
adc
xlat
add
inc
popf
mov
mov
adc
fs
xor
rol
add
dec
push
mov
aas
aas
mov
aaa
data16
mov
leave
hlt
out
cwtl
and
xor
loop
sbb
subb
cmp
and
ret
fimull
sbb
mov
repnz
xor
sbb
or
dec
add
int
ret
push
dec
sub
xchg
xchg
adc
xchg
xchg
inc
out
subb
dec
mov
mov
adc
ja
std
jge
mov
push
mov
enter
out
loop
push
fsubl
movsl
push
dec
scas
iret
add
push
adc
add
cmp
test
fadds
pop
mov
pop
xor
xlat
mov
ljmp
mov
or
push
xor
cmpsl
aad
add
dec
mov
mov
aas
adc
xor
adc
fdivs
fisubrs
test
ds
xchg
std
dec
pop
push
sbb
sbb
mov
cmp
push
sar
out
xchg
dec
mov
add
clc
dec
cld
movsl
fistpl
mov
lods
mov
mov
mov
aaa
dec
jne
mov
push
or
xor
mov
mov
lret
movsb
jle
sub
insl
inc
pop
movsb
inc
pushf
lahf
call
mov
sar
stos
lods
int
mov
mov
mov
xchg
scas
add
push
mov
ftst
dec
or
push
mov
xor
sbb
hlt
repnz
jnp
movsl
add
shll
pop
mov
mov
popw
xchg
fsub
xchg
xchg
pop
adc
pusha
or
insl
stos
adc
xchg
rclb
lea
das
push
jae
fidivrl
mov
lahf
pop
inc
xor
lods
mov
add
mov
ret
test
xchg
xchg
dec
inc
movnti
xchg
aaa
fnstsw
rcrb
addl
push
sbb
cwtl
out
aas
fistps
mov
inc
xchg
mov
adc
loop
mov
lcall
or
dec
rcrl
jnp
xchg
xchg
add
imul
mov
xor
cmp
sub
fdivl
repz
pop
outsb
jg
stc
and
cwtl
into
or
cmpb
sbb
aad
inc
mov
out
jge
cs
out
rcrl
pusha
mov
sbb
fidivrs
call
call
mov
ficomps
cltd
repz
int3
push
dec
jmp
xchg
test
add
xchg
rorb
mov
call
sub
push
sub
scas
nop
int
sarl
push
lahf
xchg
sub
sub
push
ljmp
sarl
inc
dec
outsl
pop
jge
mov
jb
test
scas
fnstcw
shll
sti
stos
mov
pop
mov
rorl
xchg
roll
dec
xchg
subl
inc
sahf
jg
xchg
fnstenv
rcrl
sbb
sahf
push
out
mov
repz
cwtl
sbb
adc
flds
mov
pop
rcll
pushf
out
movd
fcoml
mov
mov
add
sbb
push
or
testb
cmpsb
jne
mov
lret
pop
inc
ret
mov
bound
jmp
cmpsw
inc
movsb
ficoms
mov
jg
jae
orb
fidivl
add
push
push
sarl
xchg
jae
fwait
sub
and
add
xchg
into
aad
push
and
das
repnz
out
movsl
cmpsb
sbb
dec
test
cmp
push
pop
sti
shll
cmp
mov
jl
dec
jle
mov
daa
jmp
cmp
popa
int
xchg
cmp
jmp
or
fwait
inc
mov
stos
popf
xor
jo
pop
cltd
push
leave
sub
mov
pop
inc
jne
or
out
mov
ds
lds
out
in
pop
mov
xlat
pop
shll
cmp
movntps
pop
ljmp
scas
insb
push
and
andb
jg
cltd
dec
xchg
cmp
sbb
jg
fs
push
pop
adc
jl
mov
std
pop
cld
outsb
xorl
xchg
mov
test
and
mov
rorb
xor
dec
rcr
add
mov
add
test
adc
sbb
imul
jo
and
jne
pop
orl
mov
push
fsubs
pop
shlb
pushf
pop
das
push
xlat
pop
out
inc
mov
pushf
jp
inc
lea
mov
xorl
loopne
jg
jg
cmp
adc
shll
sbb
in
mov
shl
pushf
insb
mov
pushl
pop
adc
jl
rcl
ret
pop
xor
cmpsb
add
stos
lahf
rcll
js
sti
fstl
sbb
sub
rcrb
scas
lds
dec
arpl
outsl
inc
push
mov
xchg
in
je
call
gs
ja
cs
jl
rorl
ljmp
pop
pushf
dec
push
xor
nop
fsub
pushf
enter
dec
dec
imul
inc
xchg
lods
xor
mov
test
xor
test
repnz
dec
pop
sarl
push
stc
pusha
divps
dec
scas
aad
stc
pop
and
aam
pop
pop
and
data16
fstps
in
push
cmp
leave
decl
rcrl
daa
xchg
mov
mov
adc
mov
sahf
repz
mov
aad
test
lock
xor
je
or
mov
add
pop
lret
imul
hlt
and
movntps
xor
fwait
dec
sbb
mov
pop
data16
add
faddl
loop
outsb
cmpsl
pop
adc
jns
jne
jnp
inc
adc
shl
in
out
dec
ret
lods
sahf
je
mov
push
mov
addr16
sub
xchg
push
sbb
int
pop
add
pop
call
je
pop
enter
dec
loopne
in
inc
ja
mov
mov
sar
dec
sarl
or
ficompl
inc
repz
pop
mov
arpl
adc
sbb
cmp
mov
pop
cld
cmp
addr16
dec
iret
sub
into
mov
xchg
pop
andb
stc
int
xchg
mov
and
pop
push
mov
stc
loope
jle
shll
adc
negb
pushf
dec
or
push
xchg
incb
rclb
sarl
add
mov
jl
jecxz
push
xlat
test
filds
clc
movsb
dec
sarl
inc
sub
hlt
pop
xor
mov
push
and
rclb
push
popa
lods
xchg
mov
fiaddl
cmp
aad
pop
and
bound
or
jl
inc
xchg
sahf
xchg
iret
imul
jbe
dec
cmp
adc
andl
sti
push
movsl
inc
shrb
jmp
adc
in
pop
scas
sbb
mov
fsubrs
in
add
pop
add
jp
mov
adc
arpl
jb
rclb
ret
ret
sahf
sub
fisttps
push
lahf
cmc
paddw
cmpsl
push
int3
mov
xor
clc
adc
aad
lock
in
fstl
push
xorl
movsb
inc
push
pop
shll
sbb
push
mov
and
cli
cmp
cld
push
cmc
mov
jb
or
adc
movsl
inc
dec
and
or
push
scas
inc
arpl
mov
outsl
mov
in
int
leave
out
insb
cmp
or
dec
clc
shl
mov
mov
mov
repz
dec
mov
mov
cmp
out
push
roll
add
inc
inc
xor
popf
push
or
adc
mov
mov
add
mov
xchg
or
fmul
push
divl
add
mov
pop
adc
fmul
cmp
dec
int
out
push
pop
jne
es
ret
jb
mov
inc
jb
cmp
das
repz
out
sar
mov
sbb
push
dec
ja
dec
mov
jae
addr16
mov
out
push
shr
pop
or
pmulhw
ljmp
cmp
jmp
adc
xchg
xchg
xchg
rcrl
in
sub
or
jno
enter
adcb
pop
mov
fcmovnb
cmp
rcrb
jnp
cld
or
jmp
subl
inc
mov
dec
rcrl
push
popf
sub
mov
adc
push
mov
inc
out
pop
test
push
mov
mov
add
push
fldenv
insl
inc
nop
sub
sub
sarl
dec
sbb
push
stos
fcmovbe
shll
fs
rep
push
incb
mov
enter
hlt
shll
rcrl
pop
stos
xor
aam
leave
stc
dec
dec
repnz
add
mov
jl
hlt
shrl
cmp
cli
jb
add
sahf
rol
pop
out
inc
lock
dec
jge
fiaddl
iret
leave
fs
in
mov
repz
push
out
sahf
pop
repz
rclb
lock
fsts
lret
inc
pop
mov
jmp
mov
mov
les
pop
jmp
out
xlat
sbbl
jecxz
sti
ss
lock
test
mov
add
adc
rcrl
xor
movsb
cmp
shl
xchg
inc
pop
xchg
pop
or
pushf
adc
cmpsb
aam
scas
loop
mov
pop
mov
adc
sbb
cmp
xchg
push
popf
pop
adc
lahf
sti
imul
cmp
mov
sbb
cli
gs
add
sub
mov
push
fucomip
cmp
sub
xchg
sub
and
dec
mov
sbb
push
inc
sub
jmp
mov
jp
jbe
jmp
stos
icebp
jmp
aam
mov
pop
add
and
clc
insb
loope
xchg
sbb
rcl
push
sahf
into
rolb
cmpsb
push
iret
mov
pop
pop
test
xchg
call
cmp
fsubl
fs
test
add
jb
ret
or
xchg
and
fmull
ds
je,pt
sbb
lea
jae
mov
pop
push
sahf
pop
dec
inc
call
pop
cs
out
mov
mov
pop
fldl
dec
out
sbb
adc
dec
add
imul
jb
mov
insl
sub
inc
push
mov
and
cmpsl
in
push
out
mov
and
mov
jne
int
cwtl
fdivs
cmp
test
inc
int
loopw
es
scas
inc
and
jne
repz
div
lods
push
pushl
xchg
cmp
rorl
mov
mov
dec
ja
cwtl
and
xchg
push
andb
stos
popa
scas
lcall
mov
mov
sub
push
xchg
or
stc
xor
lods
xor
pop
sar
les
rcrb
jno
dec
and
aaa
sahf
mov
add
movsb
shlb
test
aas
sarb
lret
inc
loopne
data16
sbb
mov
jp
adc
push
mov
addb
push
cmp
jecxz
add
cmc
mov
mov
stc
test
mov
xlat
outsl
rcrb
jns
int
sub
sahf
rcrl
mov
jecxz
orl
mov
out
push
mov
sahf
movsl
jp
jp
repnz
mov
mov
insb
xor
mov
push
in
xchg
mov
mov
cmpsl
dec
push
arpl
cltd
outsl
std
cs
out
sbb
or
ror
mov
clc
and
pop
lret
push
pop
scas
fadd
sahf
je
mov
scas
stc
rcr
call
ljmp
cs
ds
sbb
ffreep
pop
rcll
dec
subl
das
cmp
fbstp
insb
inc
inc
cld
and
pop
das
rcl
mov
test
arpl
add
xor
movsl
shll
cmpsl
roll
leave
xlat
std
jbe
jp
mov
push
jge
sub
std
pop
jl
sub
jne
or
sbb
jp
mov
jb
sub
lods
loopne
leave
scas
ja
mov
mov
je
xor
das
lcall
fstpl
in
mov
or
adc
xor
rol
dec
mov
inc
mov
adc
in
clc
popa
lahf
xchg
in
pushf
dec
sbb
xor
jne
sbb
push
cmpsb
popf
fldt
cmp
pushf
insb
dec
pop
inc
imul
cmp
xchg
fcmovbe
sbb
jne
fistps
mov
clc
fcmovnbe
test
movsb
xchg
subb
clc
mov
pushf
pop
bound
aad
int3
dec
adc
xchg
or
sar
test
leave
and
lods
push
cmpsl
scas
fstp
xor
insl
jne
or
pop
cmp
or
cmpb
mov
rol
loopne
sbb
mov
pop
and
sub
mov
or
mov
js
and
adcl
lock
mov
sub
push
out
mov
cmpsl
cs
push
pop
out
fwait
dec
fsubl
hlt
iret
jmp
xor
jns
add
xchg
push
fbstp
jne
mov
leave
pop
sub
adc
stos
mov
sbb
mov
cltd
pop
push
hlt
mov
outsb
cmpsb
cltd
sbb
mov
add
fsubl
xchg
in
stos
repz
mov
xor
mov
das
push
cmp
dec
mov
rcr
sub
or
mov
jp
xor
ret
or
mov
or
lea
mov
pop
sahf
push
pop
mov
adc
lods
test
push
inc
and
xchg
pop
out
and
aas
popa
jns
pushf
sti
pop
jnp
mov
cmp
ficomps
pop
xchg
in
in
mov
popf
mov
fcoml
lods
out
int3
mov
and
inc
xchg
or
cmp
push
fcompl
rol
add
fstpt
and
enter
lret
sbb
mov
sbb
inc
into
mov
int3
mov
push
pop
pushf
fnsave
les
dec
lahf
or
cmp
push
jle
xchg
daa
sahf
test
lea
pop
scas
pop
outsb
mov
ret
test
dec
jge
mov
lahf
jge
js
mov
sbb
add
mov
cmpsb
cmp
mov
cld
jmp
es
mov
bnd
dec
test
jae
pop
cltd
xchg
loopne
xor
push
idiv
fisttpll
jecxz
sub
out
dec
mov
xchg
sub
lret
aas
aas
xor
and
lcall
arpl
in
jl
jnp
jl
dec
loope
sti
pop
or
cmp
mov
xor
int
mov
jge
ror
inc
add
loopne
or
inc
pop
rorl
in
pop
pop
xor
jmp
jno
pop
adc
repz
and
rorb
inc
sahf
or
ljmp
inc
cltd
jne
push
rorl
mov
in
inc
push
insb
enter
and
mov
pushf
int
lcall
and
aas
xlat
mov
fcmovnb
mov
nop
ds
sbb
dec
aas
addr16
push
sbb
cmp
mov
jae
xchg
and
lods
pop
sbb
mov
lods
mov
push
mov
xchg
mov
mov
xorb
rcll
insl
ja
adc
cmp
repnz
ficompl
mov
mov
push
enter
aad
fucomp
jbe
xchg
scas
out
sbb
sahf
popf
mov
rcl
xchg
mov
cld
sub
xchg
ljmp
cmc
int3
push
sub
dec
das
push
sbb
inc
inc
stos
or
in
loopne
daa
cmp
psubw
jo
leave
into
xchg
insb
shlb
shlb
cld
aas
incb
insb
dec
push
mov
pop
enter
repnz
push
mov
int3
jbe
or
in
out
aas
xchg
pop
xor
gs
or
stos
xchg
xchg
ret
sti
and
mov
scas
shll
lods
inc
lahf
imulb
ds
cmc
pop
pop
pop
adc
mov
stc
ljmp
cmpsb
repz
repz
xchg
inc
xchg
popf
mov
stos
sub
push
pop
xchg
lds
into
pop
sub
jge
jl
pop
push
pop
out
mov
enter
clc
mov
mov
or
fadd
jecxz
rcl
adc
sbb
mov
xchg
and
pop
pop
bound
cmp
mulb
sub
lds
addr16
hlt
sub
jge
lahf
push
imul
rol
xchg
inc
mov
lea
inc
mov
mov
push
shll
dec
jnp
jecxz
movsb
addr16
add
xor
adc
jg
and
mov
je
mov
mov
xchg
cmpsl
xorl
fs
xor
int3
mov
dec
scas
data16
into
test
adc
movsb
shrl
jl
jnp
push
sbb
sub
stos
inc
shll
pop
aad
jae
mov
enter
cmc
sbbl
mov
xchg
adc
jne
call
pushf
rolb
int3
push
loopne
fimull
sarl
aad
out
andl
adc
mov
or
mov
rcl
and
push
add
cwtl
sub
scas
jmp
mov
inc
pusha
adc
fistpll
fcmovb
ljmp
mulb
xchg
lds
sbb
ja
mov
mov
pop
call
cmp
pop
sub
inc
xchg
rorl
cmp
lock
in
enter
mov
popf
iret
pop
jns
aas
xchg
dec
sarl
push
pop
sub
rcl
stos
test
jl
loop
mov
iret
adcb
jle
add
das
scas
andb
and
push
pushf
cltd
sub
xchg
pop
fwait
sarl
push
xor
mov
in
dec
ret
sub
scas
movsb
inc
aas
or
mov
mull
push
mov
in
xchg
or
movsl
dec
movsb
std
jmp
push
inc
jge
mov
xchg
nop
lods
popf
cmpb
xchg
push
mov
pop
fs
imul
scas
mov
test
pop
movsb
mov
jbe
pop
icebp
shll
ror
sti
fildl
push
mov
lea
ljmp
fwait
jmp
arpl
scas
jns
jno
inc
push
push
mov
outsl
pop
cmpsl
sub
test
add
inc
jg
lcall
lahf
int3
je
int
inc
cmpsb
mov
pop
sbbb
mov
jge
mov
adc
out
shll
pop
outsl
fcoms
jne,pn
into
roll
cmp
xor
lods
dec
cmp
dec
xor
or
dec
data16
lahf
cmc
or
jge
sbb
add
lock
test
and
inc
mov
jno
xor
mov
inc
mov
aam
sub
xchg
into
sti
dec
xchg
iret
dec
lcall
clc
or
popf
xchg
pop
daa
push
lds
test
sti
or
mov
mov
lods
movb
sahf
mov
repnz
mov
dec
jge
stc
and
cmpsl
pop
ds
mov
dec
mov
fcmove
loope
in
sbb
psrad
pop
xor
jp
fs
adc
mov
and
mov
loop
push
or
enter
in
imul
leave
clc
push
shl
fwait
sbb
lret
push
cmp
lret
add
fadds
cmp
aam
roll
pop
cmp
mov
scas
rcrl
repnz
shrl
xor
xor
push
cs
lds
lahf
jle
pop
in
adc
sti
andl
scas
and
xchg
loope
stos
dec
cwtl
enter
jbe
xor
pop
push
add
push
xor
push
push
scas
xor
movsb
and
arpl
insl
xchg
lods
lret
popa
enter
inc
or
mov
into
int3
data16
xlat
hlt
dec
mov
lahf
xlat
mov
lret
mov
push
scas
shll
daa
ret
jecxz
sahf
or
inc
loopne
mov
int3
mov
rorb
lock
lcall
jl
bound
xor
inc
testl
adc
lret
fisttpll
xor
sbb
xchg
sbb
call
fistpl
rcrl
cwtl
pop
int3
dec
lret
pop
pushf
xor
arpl
xor
and
xchg
cmpsb
repnz
xlat
popf
rolb
pop
pavgb
jmp
push
mov
shrb
pop
sub
inc
inc
push
pop
xor
mov
jmp
dec
sarl
xor
mov
pop
and
ljmp
pop
mov
push
addl
aas
sub
lcall
pushf
cmp
movsl
lcall
lock
and
cli
hlt
in
daa
mov
sahf
and
imul
add
in
sbb
xor
mov
lret
xor
xor
lods
add
cwtl
and
loopne
sbb
fldl2t
rcr
or
test
daa
fimull
sub
inc
xchg
repz
pop
pop
pop
mov
std
jb
mov
out
out
fdivp
out
mov
and
pop
jl
mov
inc
dec
loopne
into
fmull
aad
pop
inc
jne
add
mov
leave
hlt
ja
inc
jmp
movsl
sahf
rcrl
jbe
sahf
push
xchg
cmpsl
xor
xchg
sub
gs
adcl
std
push
cmpsl
call
in
mov
lods
arpl
mov
dec
nop
dec
test
jecxz
pop
and
insb
xchg
aad
or
mov
jle
aaa
inc
cmp
inc
inc
cltd
daa
ljmp
mov
sbb
push
mov
call
and
repnz
mov
mov
jg
mov
mov
scas
sbb
xor
outsb
jbe
aaa
aaa
pop
cmp
es
imul
out
sbb
sub
movl
cmp
fdivs
in
das
push
test
mov
clc
xchg
repz
pusha
cmp
inc
hlt
jg
nop
and
arpl
mov
mov
add
mov
pop
cltd
jmp
xchg
insb
cmp
das
insb
push
mov
lahf
rcrl
int3
pop
aad
sbb
cmp
mov
sbb
lret
in
mov
sti
add
add
scas
push
cld
into
fistl
fwait
cmp
jo
dec
pop
std
into
push
mov
sbb
cmp
dec
xor
fcomp
in
push
mov
and
xchg
add
imul
ficoml
xor
push
rorl
jge
and
aas
xchg
jmp
mov
jo
pop
shrl
fwait
ja
jecxz
call
mov
mov
fdivr
lea
sarb
pushf
xor
sub
repz
xchg
mov
cmp
ds
out
mov
jg
orl
sbb
xchg
jl
add
scas
cmp
and
shrl
mov
shl
cmc
mov
dec
sub
call
adc
pop
mov
mov
ljmp
jb
test
pop
mov
lock
inc
xchg
mov
cltd
jecxz
enter
out
or
mov
cmpsl
int
add
pop
out
pusha
mov
cltd
xchg
dec
jecxz
cmp
or
mov
rcrl
lea
pop
mov
xchg
mov
push
lret
enter
lods
mov
cmp
aas
or
out
call
pop
jl
in
ds
rorl
jno
inc
mov
cmp
mov
cwtl
cmp
mov
in
and
and
jl
jg
filds
adc
sub
pop
adc
sti
je
pop
jg
leave
lret
mov
roll
jae
imul
insl
mov
jnp
jg
xchg
scas
int3
mov
addr16
movsl
movsl
jecxz
push
stc
pop
xchg
aas
adc
mov
lret
mov
mov
inc
dec
cmp
mov
sub
imul
add
fidivrl
cltd
sub
or
xor
iret
jbe
stos
push
lret
adc
mov
aam
xor
jle
push
sar
mov
enter
imul
cmp
gs
jle
add
mov
cwtl
mov
shl
sbb
inc
shrb
lods
cs
xchg
push
jge
sbb
ds
sarl
mov
arpl
es
dec
cld
cmpsl
dec
mov
int
mov
sbb
xchg
sub
fcompl
cwtl
dec
sar
mov
pop
sahf
pop
leave
ret
inc
mov
dec
sub
adc
shll
fsubp
ret
outsb
lret
cli
dec
mov
sahf
cmpsl
and
fmull
jbe
pop
jae
fisttpll
cli
pop
pusha
cmpsl
mov
xor
stos
mov
stos
pop
and
pop
movsl
outsb
fisubrs
cmpsl
or
mov
loop
shll
add
adc
gs
ret
int3
cmp
mov
mov
fwait
xor
int3
jb
cmp
shll
pop
test
add
mov
adc
pop
jecxz
shrl
sbb
inc
mov
lods
leave
fidivl
or
fwait
jle
das
adc
ror
leave
insl
pop
and
lds
fstpt
push
movl
pop
fldt
test
mov
pop
adc
hlt
dec
out
faddl
sahf
out
int
inc
test
addr16
stos
lds
cmpsb
sarl
out
in
jne
mov
pop
mov
and
clc
and
sti
orl
in
out
stos
mov
pushf
stos
push
aas
pushf
inc
cld
cs
ljmp
mov
adc
sarl
arpl
or
or
pop
daa
inc
test
lret
adc
sbbb
xor
pop
push
mulb
sub
pop
out
jo
cmp
aad
jge
jnp
in
and
std
outsl
mov
lods
pop
or
xor
jmp
adc
roll
xchg
hlt
and
mov
lea
das
inc
ljmp
push
rorl
or
mov
xor
sub
insl
lcall
mov
int
or
push
outsb
lock
stos
pop
dec
pop
adc
je
or
scas
cmpsl
mov
jg
shlb
iret
add
lods
mov
bnd
inc
fsubp
dec
xor
mov
js
popl
int
jg
sub
adc
fdivs
adc
mul
pop
aad
not
jne
cmp
sahf
push
repz
push
dec
sbb
dec
dec
mov
movsb
aad
mov
add
scas
jnp
xor
sarl
pushf
int
jne
fcompl
js
inc
imul
enter
adcl
shr
movsl
and
outsb
out
sub
popf
adc
sti
out
ret
xor
jae
out
mov
jl
mov
cmp
subl
aam
xor
mov
mov
xchg
out
adc
sti
daa
test
shlb
in
pop
repnz
shlb
lea
inc
rcrl
dec
shr
sbb
xorl
mov
lods
dec
xor
cli
pop
jg
arpl
xor
int
aas
jge
xor
mov
jge
cmp
mov
outsb
stos
fldenv
rcrl
ds
test
dec
push
lahf
out
cmp
ret
fiaddl
insb
scas
push
cld
lods
out
out
daa
scas
push
jg
rcrb
hlt
sarl
ss
fnsave
lahf
rcll
xchg
jae
pushf
and
cmc
scas
ffree
insb
mov
xchg
pop
rcrb
fnstenv
sbb
out
sub
mov
ss
pusha
cs
cs
sub
flds
filds
ret
add
inc
sub
cltd
mov
test
ja
mov
pop
gs
jo
pushf
mov
mov
push
jp
dec
scas
cmpsl
sti
fistl
fistpl
mov
pusha
or
ss
and
pop
pop
pop
iret
cmpsb
cli
enter
push
cs
sbbb
add
jl
mov
jo
cmpl
les
shll
sti
or
adc
sbb
xchg
lods
cs
scas
mov
lods
inc
pusha
mov
xchg
mov
pop
push
push
pushf
mov
jne
mov
loop
shll
xor
add
pop
mov
insl
mov
lahf
mov
lahf
les
inc
lret
push
cld
xlat
adc
pop
cmp
sub
loop
sbb
jecxz
js
push
add
sahf
jg
mov
hlt
lock
jbe
mov
dec
into
shrl
in
aas
mov
dec
xchg
shl
insb
xor
mov
xor
and
rorl
iret
int
sub
mov
pop
into
xlat
pop
pop
mov
xor
and
pusha
mov
pop
mov
lods
jg
jp
sti
daa
sub
notb
dec
enter
adc
xchg
lret
out
inc
mov
add
out
pop
pop
movsl
or
cmp
xor
cs
mov
push
jne
scas
int
out
jmp
insl
jbe
jae
shr
jbe
rorl
pop
mov
mov
xor
mov
pusha
or
lret
cmp
les
xlat
rcll
push
pop
xchg
cmpsl
mov
mov
xor
pop
inc
jg
jne
inc
aaa
lret
stc
int3
fisttpll
adc
movsl
sbb
cmp
fdivl
mov
mov
or
movsb
or
inc
pop
and
fistps
mov
mov
clc
cmp
push
xchg
nop
or
mov
int3
cld
xor
je
sub
adc
jl
sub
scas
dec
jge
add
inc
decl
rcrl
aam
xor
repnz
mov
adc
xchg
add
mov
sub
arpl
subb
iret
push
jmp
std
xor
inc
xor
cmp
aaa
ljmp
mov
adc
xor
movsl
clc
fdivs
lods
sub
mov
aad
push
call
ret
pop
daa
mov
es
dec
lea
or
cmp
int
push
nop
pop
mov
es
lahf
mov
xor
dec
or
and
stc
sub
cmp
ror
mov
jne
and
mov
gs
jbe
push
sarl
cwtl
mov
inc
cmovnp
icebp
aas
jl
xchg
test
dec
and
jp
xor
stos
xchg
add
mov
pop
pop
les
mov
jns
fistpll
jo
pop
ja
aad
add
adc
fnsave
mov
add
popa
pop
int
aam
mov
dec
dec
xchg
test
jg
js
inc
roll
jno
out
inc
jbe
popa
test
mov
fists
xor
mov
or
out
mov
dec
pop
loope
push
ret
jbe
stos
ds
or
lods
and
sbb
xchg
fmul
cmpsl
aad
lds
mov
sahf
xor
push
sti
mov
mov
imul
adc
sahf
cld
int3
in
popl
imul
sahf
rorl
int3
add
je
pop
cmp
cmc
das
lock
sub
add
xchg
lea
addr16
mov
or
ret
out
popf
adc
in
or
fiaddl
sub
push
rorb
sahf
mov
cmp
push
addr16
rcrl
cmp
sti
faddl
fdivrs
adc
jl
imul
push
js
lods
fidivl
rcr
fs
xchg
int3
mov
cmp
ja
mov
loopne
pop
es
enter
push
jp
cmp
into
sarl
pop
sub
stc
mov
dec
pop
inc
xchg
scas
mov
mov
pop
adc
xlat
scas
mov
cmp
imul
mov
insb
out
icebp
out
fcomi
popa
mov
mov
insl
cli
daa
mov
inc
sbb
inc
mov
sti
sahf
jg
aam
stc
popf
pop
lods
ficomps
adc
sub
mov
add
pop
pop
rol
std
mov
sbb
mov
sahf
cmp
clc
adc
fimull
out
pushf
adc
jne
cs
or
ret
sahf
mull
jbe
xlat
mov
lods
inc
sub
add
add
pop
or
push
fsubl
cld
xchg
dec
outsb
xchg
int3
push
pop
mov
inc
mov
out
mov
jmp
pop
mov
rorb
cmp
inc
dec
adc
fdivrl
sahf
rorl
xchg
cmp
sarl
and
sarb
cmc
sub
hlt
scas
data16
or
dec
xchg
rorl
popa
and
xchg
aad
ds
inc
fdivrl
push
js
sahf
or
xlat
mov
out
dec
xor
ds
xor
data16
mov
imul
inc
enter
add
inc
addr16
roll
jmp
push
pop
or
push
sub
mov
mov
cmpsb
sbb
sub
in
je
mov
xchg
subb
sahf
imul
jp
lret
mov
add
mov
popf
aaa
mov
adc
fildl
adc
cmp
movsb
out
sahf
mov
inc
or
ljmp
and
mov
cld
sub
rolb
shl
jae
mov
pop
sti
scas
popa
xchg
sbb
rorl
xor
xchg
dec
stc
fldl
sbb
roll
dec
cmp
pop
ret
pushf
outsb
sbb
fdivr
fcoml
jge
aam
jge
pop
shll
out
pop
mov
mov
js
sbb
sarl
sbb
xchg
cmpsb
out
cmp
nop
movsb
jmp
dec
or
push
mov
addr16
mov
imul
aaa
inc
incb
loope
shl
fwait
xor
add
sbb
test
rol
inc
movsb
addr16
int
push
mov
xchg
scas
sub
sbb
movsb
pop
inc
jns
mov
leave
jnp
test
rcl
mov
sti
mov
rcll
fsubrs
fadd
mov
shll
repnz
push
mov
or
add
cmpl
xchg
mov
inc
std
dec
mov
adcb
testl
out
fcomp
fcomps
data16
jl
andb
std
out
xchg
lods
ret
sub
push
cltd
mov
daa
das
add
daa
adc
dec
fs
dec
sbb
xor
pop
lahf
mov
jbe
lcall
fwait
out
adc
and
aas
int3
sub
ja
ljmp
adc
or
jae
loopne
cmpsb
pop
mov
setle
ljmp
icebp
dec
add
addb
shr
scas
mov
jp
stos
out
rcrb
repnz
mov
jmp
jne
pop
lock
cmp
hlt
pop
or
lds
cwtl
popf
daa
adc
nop
mov
roll
pop
mov
pop
sub
mov
mov
pushf
and
dec
fstps
cli
cld
mov
mov
outsl
push
pop
mov
movsb
add
mov
into
mov
jno
in
insl
stos
aad
stos
mov
mov
cmp
jbe
or
fidivrs
mov
dec
bound
jge
in
pop
cli
daa
je
mov
clc
push
inc
push
cmpsb
pop
cmp
mov
std
sbb
sarl
repnz
lods
lret
inc
jecxz
mov
outsb
mov
fs
fcmovnb
push
test
xor
clc
mov
inc
add
xchg
pop
push
pushf
pushf
lea
and
push
pop
daa
repz
stos
in
int3
leave
sbb
mov
adc
pop
push
movsb
inc
xchg
mov
pop
xchg
ds
jle
bound
clc
es
shl
lods
aaa
hlt
adc
mov
lret
call
fsts
das
jge
sub
jbe
fmuls
inc
lret
sbb
leave
shll
cmp
fiaddl
mov
inc
mov
icebp
xorb
fadds
or
pop
and
pusha
pop
pop
outsb
push
inc
cmp
jne
mov
sub
fucomp
call
jmp
mov
es
lcall
mov
mov
jg
inc
adc
sub
jb
movsl
mov
inc
lea
fidivrl
adc
sub
push
lock
je
fldcw
xchg
hlt
cmp
mov
cmp
mov
pop
mov
sbb
jb
adc
addr16
mov
iret
iret
shlb
rcll
inc
movsb
push
dec
hlt
xchg
add
insl
add
pop
jmp
push
pop
xchg
aad
jle
sahf
adc
and
sti
popf
pop
mov
mov
test
loop
ret
inc
repz
adcl
ss
popa
xor
sbb
or
hlt
pop
dec
lods
push
mov
ljmp
dec
push
mov
pop
lds
cs
gs
mov
add
mov
sti
into
movsl
push
xchg
push
push
dec
add
cmpsb
jl
aad
addr16
push
shl
test
hlt
lcall
mov
sar
lcall
jne
push
shl
addb
jecxz
adc
xchg
and
pop
pusha
pop
inc
mov
cmp
add
ret
adc
je
cwtl
in
xorb
loop
xchg
xchg
cld
in
jecxz
arpl
mov
cwtl
out
add
push
fnsave
lahf
push
xor
adc
mov
and
das
fmul
mov
mov
adc
push
into
sbb
pop
mov
xchg
fisttps
mov
mov
add
cmp
shll
jno
rol
dec
lods
into
adc
mov
dec
or
mov
aas
mov
sub
push
outsl
movsb
fiaddl
clc
add
pop
dec
xor
pop
cmp
rcll
push
xchg
das
pushl
jbe
adc
inc
out
jmp
jne
push
push
or
xor
inc
cwtl
hlt
xchg
add
fcomps
mov
dec
shlb
mov
not
stc
rorl
mov
jmp
repnz
add
int
xor
fdivrl
xor
xchg
scas
and
add
or
jge
ds
mov
lock
add
cwtl
fmulp
rcrl
or
or
dec
ret
dec
cmpsb
ljmp
lret
roll
sti
xor
inc
call
rorl
sub
sub
jl
add
jg
lret
and
nop
push
sbb
push
adc
xchg
cmpsb
pop
rcl
in
and
pop
ds
mov
mov
fbstp
push
pop
ss
popa
inc
fcomps
out
repnz
aad
jns
addr16
ficoml
pop
ljmp
jl
mov
sbb
xchg
mov
xchg
dec
lds
stc
repnz
scas
fwait
insb
mov
loope
cltd
sti
ror
push
data16
mov
pop
sti
xchg
sti
cs
xor
sbb
fcomps
cmp
stos
jb
inc
sbb
movl
aad
lods
mov
flds
and
xchg
loopne
int3
pop
pop
or
xlat
sbb
das
lahf
cmp
inc
into
sub
out
add
loopne
pop
jge
jle
xor
jo
scas
outsl
fildll
fists
int
cmp
sub
sub
shr
mov
or
xchg
jno
mov
mov
scas
mov
ja
sub
mov
pop
imul
repnz
movsl
jno
aas
into
data16
sub
js
es
movsl
cmp
shrb
das
mov
jecxz
push
mov
out
adc
stc
pop
lods
mov
push
jbe
push
mov
lahf
in
call
jmp
imul
pop
jns
jecxz
cli
mov
xorb
test
lret
loopne
out
jge
cmpl
sbb
sbb
adcb
fidivrl
mov
addr16
fstpt
fisubrl
mov
inc
xchg
push
and
mov
stos
mov
or
iret
jbe
stc
sub
stos
fstpl
out
int3
jmp
xor
mov
pusha
pop
mov
inc
out
test
add
shr
pop
popa
bound
add
dec
mov
fistl
lock
mov
addr16
sub
pop
inc
ss
push
movsb
lret
roll
inc
repnz
mov
mov
ret
frstor
jae
mov
mov
inc
rclb
inc
jnp
and
and
shl
push
mov
imul
fxch
inc
mov
or
push
ds
push
rcrl
adc
cmpsl
enter
mov
inc
outsb
and
ret
sub
inc
orl
rcr
push
adc
sarl
cltd
adc
add
cmpl
mov
xor
dec
push
pop
cwtl
mov
orl
lret
rolb
pop
jmp
push
aad
popa
or
test
mov
inc
out
adc
xor
jle
sub
insl
mov
dec
xlat
dec
xchg
mov
fisttpl
mov
sahf
mov
inc
rcrb
hlt
ror
jg
xlat
loop
push
dec
sbb
rcl
fsubrs
popa
clc
enter
into
pop
fstl
mov
push
std
ret
xlat
cmp
jp
lret
nop
scas
in
fisttpll
std
or
imul
inc
inc
dec
std
jl
jb
lods
pop
rclb
mov
loope
negb
mov
push
mov
arpl
dec
pop
rolb
inc
pop
dec
jns
scas
outsl
outsb
sarb
pop
in
clc
pop
inc
mov
aas
mov
in
ljmp
mov
inc
je
cmpl
lahf
add
dec
mov
jg
xlat
daa
test
icebp
dec
sarb
add
xor
in
je
dec
fucom
add
dec
or
daa
push
js
in
fisubl
jg
mov
jle
cmp
fsubs
lea
sahf
fmuls
bound
movsl
in
mov
fisubrs
jae
dec
or
dec
repnz
adc
cli
fidivrl
cwtl
shl
int3
dec
lahf
inc
rolb
push
fnsave
aad
fldt
inc
std
xor
bound
sahf
fidivs
lahf
adc
ja
xlat
loop
pop
adcl
movsb
dec
gs
lods
dec
push
scas
fcomi
adc
pop
enter
es
mov
dec
pop
fsubs
lret
inc
xchg
push
pop
aad
into
adc
in
addr16
pop
les
jg
icebp
xor
cmp
pop
loope
xchg
push
inc
fcmovnbe
cmp
dec
bswap
aam
fcomps
outsl
xorb
lods
mov
add
mov
lahf
js
and
push
rcr
leave
repnz
mov
inc
inc
stc
jns
fsub
push
mov
pop
jbe
outsl
rcr
and
cli
pop
rcl
pop
lret
adc
or
mov
sbb
fcomps
pop
lret
outsb
push
into
bound
sahf
fsubs
jp
xor
dec
push
ficoms
sub
lcall
mov
jne
enter
mov
mov
or
lea
jb
cmpsl
dec
shl
jl
ljmp
int
jecxz
jbe
stos
inc
pop
stc
sarb
ss
or
test
adc
dec
shlb
jl
dec
xchg
int
lret
mov
dec
fcompl
lods
mov
inc
fistl
dec
cwtl
stos
cmp
mov
push
mov
rcrl
xchg
movsl
lcall
into
dec
pop
mov
and
rorb
mov
jno
sar
int
sbb
cwtl
lret
add
cmp
ficompl
sar
pop
inc
push
mov
xchg
jle
mov
fcomip
xchg
dec
shll
pop
xchg
pusha
mov
icebp
fdivr
jmp
stc
inc
pop
sbb
leave
imul
repnz
outsl
pop
add
mov
dec
fnstsw
push
xchg
sub
aad
fmuls
pop
add
inc
push
xchg
push
sahf
jmp
mov
mov
sbb
ljmp
shll
into
in
mov
lock
add
in
aad
mov
push
stos
in
mov
mov
dec
pop
int3
fxch
shl
imul
pop
adc
add
inc
pop
mov
mov
sahf
sbb
lahf
int3
stc
cwtl
cmp
pop
dec
sahf
aad
adc
int
shrb
xor
mov
test
jae
jp
aas
pop
inc
or
rcr
push
ret
out
iret
dec
in
add
pop
and
daa
adc
push
sti
lcall
jbe
or
rcrb
push
pop
cmp
add
inc
xor
mov
sbb
mov
inc
and
mov
dec
cltd
dec
lahf
xchg
push
xchg
push
std
aam
adc
dec
aad
fnstsw
fcmovb
pop
rolb
xor
jns
fdivs
pop
hlt
and
mov
jmp
push
into
fmul
xchg
mov
aam
dec
push
mov
jnp
aas
mov
dec
test
dec
pop
es
popf
js
aas
dec
lds
mov
fcoml
inc
push
push
aad
dec
subb
jecxz
sbb
outsb
stc
and
pusha
mov
jne
dec
push
int3
int3
inc
jp
leave
lods
int3
mov
pusha
mov
push
testl
ss
fs
addr16
lea
xor
fadds
inc
mov
mov
push
ffree
fsubs
pop
bound
sbb
cld
rolb
repnz
inc
ljmp
xchg
cmp
fimull
ds
es
pop
sahf
mov
jl
enter
int3
sbb
pop
idivl
pop
inc
inc
pop
xor
push
push
cwtl
enter
inc
inc
cmp
lods
pop
hlt
or
int
fcomp
ret
fsts
dec
dec
pop
mov
pop
das
pushf
pusha
testl
fsubrl
pop
iret
ret
inc
lahf
mov
pop
scas
or
das
push
sahf
testb
sub
lock
clc
scas
sbb
mov
jge
push
or
xchg
scas
movsl
enter
popf
push
or
pop
mov
adcb
push
ficoml
bound
popf
inc
fscale
dec
push
in
fmul
sbb
jo
cmpsl
pop
cli
rcr
sub
xor
adc
frstor
dec
mov
pop
push
push
ror
int3
push
mov
push
pop
add
les
mov
mov
xchg
pop
aaa
roll
and
sbb
mov
shlb
mov
rolb
out
mov
int3
int3
cmp
addb
dec
dec
lods
lds
ror
jbe
mov
push
ret
ja
std
xlat
jecxz
iret
cmpb
mov
pop
push
or
ret
jne
aas
scas
xchg
add
scas
and
enter
cvtps2pd
fcmovbe
pop
lds
mov
dec
mov
push
inc
dec
adc
sub
adc
pop
dec
mov
rol
xchg
dec
dec
pop
push
and
pinsrw
bound
pop
fldt
aaa
popf
jns
int3
jl
stos
int3
inc
fstps
mov
int3
sub
leave
adcl
pop
test
and
fstpl
mov
cwtl
rcr
pop
std
pusha
clc
inc
inc
in
push
lods
mov
dec
fldt
jne
test
pop
fistl
mov
xchg
pop
mov
ffree
lods
pop
xor
fldcw
mov
mov
rcrl
mov
xchg
push
push
dec
popf
scas
cmp
aas
fcomps
stos
xchg
dec
dec
pop
fsubp
imul
pop
pop
rol
lock
jbe
pop
shll
leave
into
dec
mov
xor
fcoms
pop
notb
out
enter
xchg
jns
sub
rcll
mov
outsl
cmp
shrb
add
jbe
inc
sahf
fcom
sub
faddl
mov
pop
stc
aad
sbb
push
or
cwtl
push
fcomps
sbb
ljmp
int3
adc
dec
shlb
lret
ret
sub
repnz
add
inc
in
aad
add
rcr
sbb
xchg
and
dec
mov
leave
sahf
inc
or
jg
inc
int
xlat
pop
dec
pop
popf
dec
xchg
ret
aam
dec
pop
xor
or
scas
jl
pusha
mov
sarb
jecxz
mov
cmp
aad
dec
inc
fiadds
mov
push
out
fucomip
pop
rclb
into
xchg
adc
fisttpll
pop
and
mov
hlt
pushl
inc
fs
mov
add
fcomps
enter
push
sbb
sbb
push
rorb
daa
popf
jmp
push
and
jle
add
ret
mov
popa
enter
addb
push
inc
mov
jae
aad
fcomp
outsb
mov
std
in
enter
xor
push
fstl
test
or
fldcw
mov
push
and
push
push
shrl
dec
push
mov
cltd
rcrb
dec
xchg
jne
sbb
pushl
aam
xor
idivb
mov
pop
sub
push
push
fsts
outsl
sub
xor
ret
filds
inc
fcomps
lret
fcom
rcl
or
sahf
aas
push
mov
mov
mov
or
adc
mov
int3
fcoml
adc
jbe
or
fdivs
addr16
adc
mov
xchg
fadds
pop
xchg
das
jae
fldt
shrb
inc
leave
xlat
sahf
icebp
mov
sbb
aam
inc
sbb
les
mov
lcall
pop
insb
adc
lahf
and
inc
lcall
mov
and
or
int3
aaa
js
pop
xor
or
rcr
clc
int3
dec
scas
shlb
add
ficompl
fcoms
loopne
inc
scas
dec
ja
dec
rcr
and
fwait
inc
pop
cli
cmp
mov
jo
fdivrp
inc
xchg
arpl
inc
aam
aad
pop
lods
add
or
ja
leave
scas
mov
fldt
rcrb
ss
dec
into
mov
in
mov
pop
xchg
popf
push
je
enter
aam
aam
xor
lahf
fmul
dec
inc
outsb
jge
pop
push
gs
pop
dec
mov
mov
fidivrs
mov
int
rol
xor
iret
dec
out
mov
ret
dec
aam
sarb
test
enter
fcoms
daa
repnz
push
mov
aad
inc
dec
cld
std
adc
pop
pop
inc
popl
push
into
mov
sbb
push
xor
loope
repnz
sbb
outsb
and
nop
mov
jmp
ror
push
lret
mov
fiadds
xchg
xchg
shlb
into
ret
in
cmp
cwtl
mov
xorps
or
pop
sbb
sahf
in
divb
lock
pushf
inc
fbld
mov
popf
sub
xchg
lds
pop
add
fmuls
insb
jo
pop
xlat
add
or
dec
jge
cld
pop
pop
insb
pop
pop
iret
cs
rorb
mov
aam
ljmp
cld
divb
xchg
mov
fmull
push
outsb
and
jne
inc
and
sahf
mov
sahf
in
fcmovne
mov
gs
out
mov
or
cli
mov
pop
ss
ret
scas
mov
cmp
push
enter
jbe
dec
xchg
aas
mov
dec
aam
aas
mov
push
mov
in
loopne
int
stos
push
das
dec
and
push
sbb
dec
fucomi
and
test
jge
lock
adc
outsb
fisttpl
clc
lods
cs
dec
jae
mov
sub
aad
push
mov
rorb
pushf
adc
aam
dec
jo
lods
xchg
xlat
mov
fidivrs
sahf
aam
int3
and
into
cmp
lds
mov
insb
fistl
inc
pop
and
aad
dec
int3
decl
dec
sahf
push
mov
std
lret
pop
cld
fcmove
adc
stc
std
cmp
push
mov
mov
rcr
pop
cmc
pop
testl
mov
add
or
jle
lret
loopne
andb
xchg
ja
fmuls
push
adc
lcall
pop
scas
xor
xchg
shlb
cmp
movsb
push
pop
ficoms
jl
ficoml
inc
rcrl
dec
xchg
in
dec
or
fisubrs
push
aam
dec
mov
or
mov
ret
in
push
pushf
cmp
mov
nop
xchg
dec
into
push
dec
sbb
mov
insl
xchg
sahf
lcall
dec
shll
cs
movsb
dec
into
xchg
addl
inc
jmp
popf
lcall
es
cmp
int3
pop
inc
cwtl
push
rcl
enter
cmp
adc
das
fildl
fisubrs
adc
lds
aam
ret
mov
aam
pop
inc
cmpsl
clc
dec
fidivrl
mov
pop
push
mov
push
icebp
add
in
push
fidivs
enter
dec
sbb
pop
push
into
inc
test
fadds
mov
cmc
inc
or
int3
jne
dec
and
int3
inc
cmp
add
mov
push
pop
inc
in
std
or
xchg
pop
push
aas
mov
push
pop
mov
push
jno
or
cmp
xchg
mov
cmp
jp
and
push
pop
fistl
sub
inc
jecxz
leave
int3
dec
pop
jbe
shlb
dec
cli
dec
pop
adc
mov
inc
xor
rcr
xor
dec
data16
rcl
fcmovnb
xchg
fnsetpm(287
dec
or
int3
and
push
arpl
pop
mov
aad
aam
ret
cwtl
ffree
enter
add
lods
into
ficoms
cli
inc
jl
dec
inc
mov
shrb
into
jp
pushf
sbb
push
cld
enter
add
daa
pop
movsl
mov
movl
add
xlat
pop
bound
mull
xor
jne
ret
aam
dec
xchg
repnz
shr
dec
into
sub
fisubl
push
outsb
aad
pop
les
push
dec
push
fcomi
mov
jae
sahf
xchg
add
push
jbe
and
sub
aas
mov
xor
sbb
inc
ja
adc
pop
hlt
xchg
xlat
dec
les
dec
xchg
dec
mov
jae
dec
jmp
pushf
popa
ficoml
xchg
cwtl
iret
imul
push
pop
cmp
shrb
xchg
push
sahf
jg
cs
loop
inc
add
rorb
out
dec
jne
mov
or
rcrl
bound
jb
enter
push
mov
pop
mov
lret
push
sahf
iret
mov
cmpsb
mov
fdivl
loopne
push
movsl
shlb
f2xm1
pop
mov
addr16
mov
adc
pop
cld
and
mov
pop
xchg
xlat
add
rorb
push
pop
adc
sub
repnz
xor
pop
inc
mov
inc
mov
pop
inc
sbb
pushf
aam
push
fcmovb
decl
sbb
pushf
int3
push
pop
push
insl
sbb
fisttpll
inc
pop
xor
sbb
ficoml
jne
inc
push
sbb
inc
jl
fcmove
mov
push
mov
add
in
lods
arpl
inc
insl
cmp
and
dec
sahf
es
imul
pop
push
lcall
pop
inc
mov
jge
push
cli
mov
repz
push
sahf
shr
cmp
gs
mov
in
aad
push
lcall
outsb
int
inc
aad
mov
fwait
lcall
adc
or
cli
pusha
pop
aad
insb
mov
pop
xor
enter
shll
ficoml
gs
add
rolb
ret
sub
sbb
sarl
loope
or
adc
dec
dec
mov
add
adc
cli
inc
popf
pop
sahf
int3
push
lods
inc
pushf
adc
pop
dec
mov
pop
push
pop
xchg
ficoml
add
fst
sarl
cmpl
mov
dec
rclb
pop
or
push
mov
pop
call
mov
mov
rcr
ds
or
xchg
mov
jle
loopne
fsubr
insb
rorb
dec
mov
rcrl
into
mov
int
aad
test
loope
insb
rclb
loop
sbb
aad
sbb
mov
lret
push
mov
gs
pop
lcall
pop
cmp
sbb
dec
in
les
adc
pushf
push
in
xor
das
sbb
jl
pop
inc
ret
test
xchg
mov
ret
pop
mov
and
push
inc
fcoms
sbb
fucom
in
and
repnz
dec
fcmovu
out
cld
sbbb
test
push
mov
rclb
mov
pop
sbb
bound
out
mov
int3
mov
xchg
ret
jp
les
xor
lret
fcompl
pushf
mov
xchg
inc
pop
push
inc
jo,pt
push
and
mov
ret
aad
dec
dec
mulb
int3
pushf
mov
sti
dec
in
mov
xlat
xor
pop
mov
mov
rcr
xchg
ds
push
lcall
push
inc
sti
or
mov
into
jmp
push
pop
shrb
sahf
loope
mov
fidivl
xchg
fdivr
les
and
pop
push
sbb
adc
cmp
dec
xor
leave
mov
inc
pop
jne
pop
fcomps
xor
cmpsl
xchg
leave
jb
push
stc
or
aad
rclb
push
les
push
mov
ss
jne
cltd
mov
lcall
into
pop
mov
stc
lcall
int3
aam
sbb
popa
mov
jo
cmpsl
addb
mov
cmpsb
push
mov
cwtl
fiadds
test
pop
mov
insl
dec
sub
loopne
jmp
aad
fstpt
popf
push
sti
cs
push
mov
cwtl
xor
nop
scas
jno
mov
std
push
adc
inc
sub
fmul
mov
imul
mov
mov
mov
push
or
jp
cmp
push
mov
mov
dec
dec
movsl
push
xor
cmp
cwtl
mov
add
pop
mov
cmp
sbb
inc
dec
fistpl
lods
jecxz
dec
fstpt
rcrb
adc
insb
ret
loop
lret
js
push
pmovmskb
pop
int
jp
sbb
inc
fnstsw
add
jns
mov
ds
stos
xor
push
inc
push
push
pop
pop
dec
jnp
iret
jle
arpl
pop
add
leave
pushf
rcl
enter
xchg
add
into
lock
rcrb
into
stos
sbb
ret
inc
push
mov
mov
stos
mov
stos
in
roll
repz
xchg
hlt
mov
jbe
int3
stos
mov
rcr
test
push
or
mov
mov
push
mov
scas
pop
cmp
call
lahf
vmovddup
cltd
cwtl
mov
sarl
mov
loope
lcall
lahf
mov
rcl
jno
or
mov
dec
aas
ljmp
outsb
sarl
sahf
insb
xchg
sarb
rolb
mov
aam
mov
push
aam
dec
mov
push
push
xor
ds
mov
xor
cmpsb
sbb
lea
out
xchg
clc
inc
pushf
mov
shrl
lret
cld
fdivrs
aad
ficoml
push
cmp
and
xor
sub
dec
pop
push
xor
les
fdivs
int3
push
add
inc
push
mov
push
adc
fs
and
sbb
sahf
jg
pop
jge
adc
mov
xchg
int3
xlat
push
pop
scas
lock
ret
adc
aad
mov
aam
inc
scas
in
jb
dec
pop
dec
cmp
adc
popf
xchg
dec
sarb
push
xlat
mov
int
es
inc
pop
xchg
mov
cmp
adc
jb
fcomps
fiaddl
sahf
test
push
push
flds
jg
clc
sbb
stos
dec
lret
loop
dec
mov
push
out
lret
int
adc
int3
push
lahf
and
je
fcmovnbe
ror
mov
mov
stos
adc
xchg
aad
mov
ret
sub
push
push
hlt
jecxz
mov
out
cwtl
fxch
mov
jle
lcall
fimull
pop
rcll
enter
cld
xlat
push
mov
lret
test
iret
dec
aad
shrl
fxch
mov
xor
test
das
sbb
int
dec
cld
add
push
sbb
sub
fimull
inc
jmp
scas
inc
sub
inc
jecxz
fldt
into
fs
iret
add
inc
pop
mov
or
rclb
movsl
xor
ret
pop
pop
sbb
sbb
fistps
pop
hlt
fldcw
mov
sbb
mov
or
adc
jge
iret
push
rol
xchg
xchg
cld
test
int3
into
jg
pop
out
xor
cmp
jp
pusha
pop
mov
les
cmp
sbb
ljmp
pop
xchg
ficoml
cwtl
jmp
sbb
fnstenv
xor
test
push
rclb
mov
ds
in
jae
bound
pop
sahf
mov
enter
scas
cltd
cld
and
adc
sbb
mov
sahf
push
pop
std
dec
inc
mov
cmp
jge
sbb
adc
ss
leave
in
data16
insb
pop
aad
pop
xchg
or
add
rorb
push
sbb
and
adc
inc
xchg
in
mov
hlt
data16
inc
iret
fldcw
push
stos
fmul
rclb
cwtl
dec
pop
mov
pop
cmpb
pop
push
aad
inc
dec
pop
mov
daa
inc
sbb
fs
and
inc
mov
inc
dec
jb
ljmp
fsubp
or
icebp
pusha
int3
ss
sbb
lcall
sbb
mov
cmpsb
mov
fsubrl
pop
dec
nop
lret
fidivrl
jns
ret
sbb
push
ficomps
sbb
data16
xchg
aad
push
into
fcompl
inc
lds
xchg
pop
nop
inc
scas
adc
aam
lea
sbb
les
outsl
lock
dec
pushf
sti
and
sub
repz
pop
iret
cmpsl
sub
leave
aaa
mov
xor
stc
test
mov
and
sbb
jmp
inc
dec
rcrb
xchg
imul
sub
clc
sub
dec
add
mov
dec
fisubrs
mov
in
pop
xor
sarb
stc
shlb
and
pop
sti
std
cli
insl
nop
loop
inc
add
fisttpll
push
scas
mov
enter
fnstsw
mov
dec
rolb
int3
dec
mov
sub
or
sub
mov
pop
mov
dec
sub
inc
or
int3
mov
fmull
push
dec
mov
imul
enter
jmp
mov
fwait
inc
es
leave
dec
dec
fldcw
or
xchg
ret
outsb
add
mov
pop
aad
fcmovb
ljmp
sub
enter
in
ss
dec
ror
fadds
in
mov
fimuls
sub
mov
pop
into
aad
dec
cmpsb
pop
push
cltd
fadds
inc
into
lahf
jge
adc
mov
aad
sbb
push
jmp
shr
lods
push
xor
pusha
jg
add
push
std
fdivl
into
rol
fcoms
test
int3
sbb
xchg
cltd
rclb
push
pop
or
sbb
loopne
mov
aad
cmp
mov
cmp
dec
ja
lret
or
sub
hlt
mov
fdivrl
scas
push
or
or
dec
rcll
mov
sbb
sahf
enter
adc
int3
lret
push
sbbb
or
ficoml
jecxz
inc
inc
cli
dec
fcoml
sbb
or
rcrb
jmp
imul
sub
int
pop
das
fdiv
cmpl
dec
sbb
push
xchg
cmp
lret
mov
dec
cmp
mov
fnstcw
push
inc
inc
into
mov
xor
mov
ret
int3
adc
push
pushf
mov
jle
lret
mov
je
int3
or
sbb
sahf
xor
push
cmp
fsubr
push
fstl
lods
adc
sarl
fdivr
or
scas
xor
addr16
std
dec
aad
pushf
dec
xchg
aam
push
xchg
loope
jne
fldl2e
jb
mov
push
lods
mull
pop
xchg
push
int3
in
pop
pop
scas
aam
fisttps
ret
sti
mov
icebp
xchg
out
pop
xchg
fidivrs
dec
jns
pop
fwait
sarb
loopne
add
lret
inc
scas
jl
lds
dec
jne
lret
iret
add
or
xchg
ret
adc
and
aas
fnsave
inc
cwtl
aad
jae
fsubs
and
push
mov
xor
mov
inc
xchg
dec
fisttpl
stos
dec
mov
pushf
test
into
mov
mov
xchg
fisubs
push
mov
jg
sti
mov
cmpl
fadd
test
add
push
sbb
or
jnp
fcmovnb
cmp
push
inc
fxch
fisubrl
sub
sti
dec
fidivs
push
sbbl
pop
shrl
dec
int3
cmpl
bound
clc
ror
push
add
fdivr
mov
pop
sbb
rorl
subb
enter
ljmp
jle
lods
pop
das
pop
and
inc
bound
or
push
xchg
mov
dec
pop
adc
jns
dec
dec
jns
push
pop
dec
pop
adc
dec
fldt
inc
mov
dec
cmpsl
dec
aam
jae
vminpd
or
cmp
loopne
adc
in
pop
test
mov
inc
mov
dec
lods
dec
adc
mov
mov
andps
pop
fistl
leave
movsb
sbb
iret
xor
inc
adc
mov
dec
cli
or
pop
aad
imul
loope
inc
push
inc
push
hlt
mov
jo
cmp
int3
cli
mov
sahf
negl
filds
fcoms
loope
pop
lods
and
fadd
arpl
dec
pop
lcall
xchg
jae
shlb
pop
loop
add
pop
imul
add
out
mov
pop
fdivrs
jns
ret
test
bound
repz
push
lds
mov
idivb
cwtl
inc
pop
jne
mov
pop
popf
pop
xor
mov
fcmovnbe
loop
stos
les
icebp
cmp
and
int
or
jno
jg
pop
mov
push
test
in
enter
fistl
sub
ss
mov
lahf
mov
mov
shll
into
outsb
xchg
jge
and
int3
aam
pop
les
aad
inc
mov
cmp
fnstcw
fadds
stos
pop
mov
addr16
test
idiv
int3
in
push
fcompl
dec
mov
xchg
lock
lods
mov
mov
fsub
bound
rcrb
pop
dec
inc
or
cmp
dec
xor
adc
lds
mov
movsl
xchg
int
in
xor
aad
std
or
fisttps
in
inc
push
fidivrs
movsl
shlb
push
ja
call
insb
iret
shrl
clc
iret
popf
ficompl
aas
xor
xor
daa
fistpl
or
push
fld
shlb
ds
jne
popf
dec
inc
iret
push
mov
push
les
pop
cmpb
shll
or
inc
fistl
lret
xchg
xlat
or
pop
mov
mov
bound
outsl
ret
pop
add
mov
icebp
jns
rcl
dec
dec
lds
mov
stos
push
mov
dec
clc
or
and
hlt
jmp
pop
fucomip
sar
sbb
or
xchg
push
iret
into
lret
pop
outsl
pusha
cld
xchg
or
cmp
inc
loope
lret
adc
into
xchg
fdivrs
mov
pop
cld
cli
sbb
sbb
rcll
push
nop
jns
scas
icebp
clc
jbe
jno
dec
outsb
push
push
add
sub
lods
xor
pop
aam
aas
sbb
inc
shlb
xchg
into
push
ret
pop
or
mov
iret
out
push
jle
pop
push
out
lcall
dec
les
lock
push
pop
cmp
jle
out
ret
xchg
pop
fstpt
jae
pop
mov
mov
nop
dec
shlb
mov
popl
rcll
jns,pn
ret
dec
iret
adc
push
pop
stc
ja
and
inc
sbb
leave
inc
hlt
int3
stc
mov
std
rcl
mov
pusha
movsl
ret
pop
int3
ror
sbb
dec
lcall
test
iret
add
in
lods
dec
leave
out
mov
dec
pop
repnz
jne
mov
sbb
out
xchg
add
or
rorb
sub
xchg
int3
ret
mov
jge
or
cmp
pop
sub
stc
add
jge
sbb
adc
jle
out
scas
mov
cs
mov
dec
les
mov
stos
jmp
fstpt
xor
mov
aad
xlat
cmp
add
shlb
fdivrl
jbe
repnz
add
xchg
push
xchg
lret
sbbb
pop
je
jne
fistpl
aas
cmp
jge
xchg
sbb
inc
into
mov
pusha
inc
insb
ret
mov
ret
add
push
lods
aas
mov
insl
mull
or
in
dec
lret
push
inc
fcomps
das
icebp
outsb
mov
aad
enter
les
dec
push
jmp
subb
push
nop
pop
xchg
call
or
sarb
inc
rcrl
stos
cwtl
and
aad
xchg
fcompl
fbstp
in
push
cwtl
ss
leavew
or
mov
xchg
pushf
pop
daa
or
adc
ds
outsb
aas
dec
leave
fdivs
fidivrl
pop
lcall
add
pushw
dec
clc
xchg
inc
rcrb
roll
std
inc
fiaddl
in
pop
mov
pop
dec
aad
push
push
mov
fistl
dec
mov
adc
loope
lahf
sahf
fstp
sti
jle
jge
mov
inc
sub
sbb
and
xchg
sbb
lret
mov
mov
inc
hlt
dec
ss
rol
stos
int3
cmp
pop
sub
lcall
lret
adc
add
bound
xlat
loope
leave
mov
imul
adc
xor
pop
stc
cli
outsl
aam
cmp
nop
into
add
pop
dec
insl
leave
inc
fldenv
mov
pop
les
lock
int3
imul
adc
inc
add
loope
adc
mov
pop
xor
xchg
inc
int
xor
xor
inc
stc
in
fs
dec
in
mov
inc
movl
inc
sahf
jb
dec
in
dec
inc
jo
lock
mov
js
dec
xchg
or
push
into
mov
daa
leave
clc
nop
pop
insb
xchg
aas
faddl
jl
pop
sbb
aam
pop
adc
nop
shlb
xor
daa
in
fsubl
inc
inc
fsubp
push
inc
fists
mov
inc
ret
enter
push
sub
ret
fistl
fs
lods
test
pop
into
or
dec
sub
jns
push
sbb
sub
sarl
js
cwtl
pop
mov
into
xor
sub
push
lods
rorl
xlat
mov
nop
mov
inc
cmp
fistl
pushl
das
sarb
or
repnz
sti
arpl
popa
fstl
cmp
cld
cli
cmp
push
lret
xchg
pop
or
pop
dec
pop
hlt
lcall
pushf
jle
nop
sbb
sbb
shll
pop
fadd
dec
cmp
inc
ds
shufps
push
pop
aad
enter
daa
mov
mov
cltd
dec
inc
jmp
mov
cwtl
inc
in
int3
pop
testl
cwtl
leave
sub
inc
cmp
mov
mov
pop
test
push
mov
dec
cmpsl
push
rcr
jl
sbb
rcll
in
mov
aas
bound
inc
in
push
mov
sahf
add
push
int
and
mov
inc
push
sahf
cs
insl
packuswb
shrb
pop
jmp
int
scas
bswap
ficompl
dec
dec
xchg
iret
jle
pop
and
push
fcompl
push
fsubrs
xchg
lret
inc
or
sub
fxam
ds
test
rorl
aam
hlt
ficompl
push
jg
rolb
ror
rcl
adc
xor
repz
pop
sar
adcb
mov
inc
xchg
inc
and
dec
jge
idiv
xor
lds
mov
sub
cmp
cltd
push
stos
jge
add
pop
into
addr16
sti
aad
inc
pop
cmp
lods
inc
fisubs
and
push
fidivs
shlb
js
mov
mov
dec
shrl
or
push
dec
fldl
or
int3
popf
inc
push
cmpsb
lcall
mov
scas
mov
pop
and
rorl
inc
sti
out
fsts
scas
arpl
stc
inc
lods
mov
inc
inc
cli
pop
ror
dec
pop
push
push
scas
inc
fistpll
faddl
int
or
inc
fsubl
mov
rol
sub
leave
push
stos
lret
inc
adcb
push
lcall
jne
rcll
idiv
push
or
repz
push
jns
into
sub
movsb
repnz
outsl
push
sbb
mov
xchg
pop
pop
cmp
aad
divb
xchg
mov
aad
mov
mov
mov
pop
int3
dec
into
bswap
lret
scas
aad
push
pop
dec
sbb
push
cmpb
fimull
mov
pop
lret
aam
or
dec
cli
cmc
addr16
dec
or
pop
pop
enter
int3
ja
inc
dec
int
mov
dec
jle
sbbb
xor
lret
ret
mov
aas
into
mov
cmpsb
dec
jmp
ficoml
push
or
fcmovnu
sahf
stc
aaa
jno
push
dec
pop
pop
pop
cli
test
inc
sti
dec
pusha
jl
mov
je
shrl
dec
push
inc
fdivs
lds
mov
ret
in
fwait
std
stos
adc
cmp
add
lahf
add
ret
stos
loope
mov
adc
push
adc
mov
js
rcrb
fcmovne
add
repnz
pop
push
inc
notl
enter
add
into
lret
pop
cld
cmc
ds
insl
xor
lret
sbb
movsb
mov
int3
rcrl
inc
xlat
mov
cltd
aam
dec
add
scas
and
fs
jmp
lahf
fiaddl
lcall
mov
fcmovbe
jge
jmp
fmull
addl
icebp
aad
rcl
dec
push
mov
lods
pop
push
fidivs
fcompl
mov
rcll
dec
not
or
fsubrl
fimull
stc
sub
push
add
sub
inc
push
jle
mov
dec
clc
outsl
stos
dec
std
repnz
mov
sub
cwtl
jle
stos
inc
leave
pop
jb
jae
std
mov
cmc
into
gs
push
rorl
xchg
mov
imul
dec
cmpb
dec
dec
inc
int3
push
and
xchg
add
xchg
loopne
int
rcrl
push
inc
pop
mov
test
xlat
push
stc
shrl
das
mov
decl
adcb
lds
outsl
jne
xchg
adc
xlat
aas
mov
int3
dec
mov
les
dec
aad
fisubrl
push
dec
mov
dec
cmc
jmp
push
dec
imul
dec
int3
dec
out
jge
adc
repnz
jmp
xchg
mov
inc
or
and
or
sub
iret
repz
push
fcmovnu
outsl
and
test
pop
fimull
inc
ljmp
pushf
fcomps
lret
mov
movsl
inc
push
mulb
mov
pop
dec
dec
dec
sbb
mov
jge
cld
pop
in
int
mov
aas
test
filds
rcrl
lret
adc
xor
aad
inc
pop
mov
jmp
fnstenv
int3
jne
lret
xor
insb
adc
shrw
enter
xchg
cmp
jmp
mov
hlt
popf
cmc
int
pop
les
and
push
sahf
or
push
add
pushf
xchg
push
mov
into
jns
rol
push
and
jle
inc
push
fcmovnb
mov
pop
std
fadds
flds
sbb
adc
jne
inc
push
jbe
or
rclb
das
jecxz
inc
add
aad
sub
pop
je
rol
sbb
cmp
push
outsl
inc
mov
push
insl
xchg
xchg
enter
jp
push
cltd
mov
xchg
mov
icebp
xchg
inc
push
fstps
or
rcrb
pop
cmc
ds
push
nop
rcrb
leave
fadd
fs
adc
push
dec
stos
inc
testb
dec
dec
int3
push
sahf
push
pop
xchg
mov
sbb
rcl
das
inc
fmuls
pop
in
sahf
stc
cmp
mov
dec
sti
ret
inc
or
fadd
mov
notb
leave
in
pop
inc
movsl
fstl
pop
movsl
leave
mov
fdivl
out
fldcw
jge
loope
xchg
push
pop
cmp
aad
enter
inc
out
xlat
cld
out
xchg
cmp
inc
mov
test
in
mov
ficompl
enter
adc
inc
xchg
inc
int3
into
xchg
imul
mov
mov
jge
push
dec
pop
pop
aad
mov
jno
rorb
ret
sahf
cmp
xor
shlb
fisttpll
or
rcrb
mov
sarl
dec
add
fidivs
loope
jmp
push
mov
rcr
ror
daa
daa
dec
inc
cmp
ss
xchg
dec
mov
xchg
fsubrl
shll
dec
jge
sbb
dec
add
pushf
out
jg
dec
pop
xchg
inc
pop
ja
mov
inc
adc
mov
xchg
unpckhps
sbbl
arpl
xchg
shlb
nop
sahf
or
stos
push
mov
movsb
jno
fcmovnu
jae
inc
aam
cmp
leave
rcl
les
aad
clc
mov
clc
xlat
inc
clc
jmp
push
faddl
pop
cmp
mov
cli
flds
dec
xchg
lcall
pop
aad
fcompl
push
pushf
inc
dec
inc
lahf
sti
adc
mov
push
rolb
test
inc
cwtl
pop
iret
cmp
iret
ds
cmp
ret
cmp
ret
iret
into
and
dec
seta
lret
stos
dec
lret
pop
into
sti
cli
cmp
fsubl
pop
inc
icebp
sub
cld
mov
lods
add
negl
pop
aaa
dec
xlat
xchg
int3
inc
mov
mov
insb
dec
pop
pop
stos
clc
fimull
iret
lock
xor
rorb
shl
inc
mov
mov
or
or
add
pop
push
dec
mov
sub
ror
sar
xchg
les
rcrl
shrb
ret
aaa
lds
mov
xchg
leave
daa
or
sahf
sbb
inc
mov
and
fisttpll
ret
pop
sbb
sbb
inc
inc
call
in
ficoml
ficompl
aam
push
add
dec
pop
cld
ret
sbbl
push
into
xor
mov
daa
movsl
aad
aad
ljmp
aas
int3
mov
int3
cs
es
push
pop
mov
ljmp
sbb
movsl
mov
mov
in
aad
dec
mov
mov
mov
mov
pop
ss
push
push
rclb
dec
icebp
push
and
adc
xchg
inc
mov
push
sarl
out
jae
inc
int3
aam
sub
popf
mov
int3
lods
push
sub
push
push
or
pusha
aaa
rcll
repnz
sahf
ljmp
test
in
rclb
dec
cmp
mov
dec
pop
addr16
movsb
mov
dec
jge
xor
sbb
dec
mov
inc
ret
jle
xchg
inc
xchg
lds
clc
bound
xchg
cmc
mov
dec
jle
mov
fcomps
xchg
pusha
fsubr
sbb
pop
pop
push
push
sub
push
imul
pop
mov
fs
fcomps
cwtl
fwait
sub
iret
mov
push
xchg
push
sahf
inc
insb
addl
inc
ja
lret
fildl
sbb
pop
mov
les
dec
scas
lret
mov
pop
rcr
push
mov
int3
xchg
adc
pop
fs
pop
rclb
cwtl
pop
xor
or
bound
push
push
push
fcmovnu
pop
jb
in
or
sbb
dec
xchg
scas
dec
xchg
aam
jp
sub
ficoml
test
stos
int
jbe
and
fnsave
shl
shrb
dec
hlt
testl
pop
push
dec
rcrb
hlt
movsl
or
jne
fldenv
lret
pop
xchg
adc
xchg
mov
ds
in
push
aad
xor
fcoml
sbb
aaa
jmp
push
int3
mov
ret
mov
adc
cmp
test
mov
cmc
jmp
pop
pop
icebp
fcomps
dec
scas
xor
add
insb
iret
iret
movl
int3
int3
mov
jl
enter
mov
aam
dec
jecxz
add
sbb
out
pushf
je
fisubl
into
cwtl
pop
outsl
fdivrs
popf
imul
lret
xor
sub
aam
xor
cmp
xchg
jne
dec
mov
out
cld
ret
rcr
in
sarb
xchg
or
mov
xchg
dec
and
mov
adc
repz
pusha
lea
sub
inc
stc
ror
dec
call
aad
jge
or
mov
aam
sbb
fadds
fcomps
popl
leave
pop
movswl
into
xchg
data16
push
push
aas
or
ret
or
fildl
addl
ds
jp
dec
xor
aas
sti
mov
fildl
fucomp
mov
ds
mov
lret
fidivl
roll
in
pusha
inc
jmp
cmpsl
inc
scas
adc
fildll
and
aas
inc
mov
lcall
add
cltd
fcmovnb
loope
and
dec
clc
dec
cmpsb
mov
push
cli
test
inc
fsubrp
pop
pop
or
movsb
stc
pop
push
pop
cmp
lods
pop
and
jge
jg
sbb
pop
fnstcw
or
daa
mov
jecxz
xor
add
inc
sti
xlat
lret
icebp
fld
dec
scas
fs
lcall
dec
cmp
mov
jl
stos
mov
mov
rcr
popf
pop
rcrl
cmpsb
push
jmp
sbb
and
fmuls
lock
testb
pop
call
aam
cmp
negl
dec
sbb
daa
aad
jl
loop
xor
adc
filds
fnstcw
push
jno
loope
es
jne
inc
push
cmp
or
call
push
fsubs
test
loopne
enter
push
stc
xchg
lret
popf
jecxz
les
fsubrs
fcomps
dec
sar
sti
scas
inc
movsl
sub
aas
sbb
jl
inc
shr
pop
mov
test
ss
call
jns
mov
fwait
aad
push
jge
xchg
iret
mov
push
adc
iret
stc
loopne
rcl
inc
inc
push
mov
dec
leave
mov
xchg
stc
sahf
fimull
push
mov
xor
mov
inc
mov
adc
push
inc
mov
mov
jle
dec
sahf
and
fidivrl
jg
pop
add
xlat
mov
fcomi
adcl
xchg
rorb
push
int3
mov
pop
mov
add
jns
cli
push
rcr
adc
fldcw
jae
pop
cmp
adc
dec
sub
ret
dec
cmp
add
and
add
pop
hlt
in
dec
push
mov
xchg
dec
je
por
insb
jno
xor
std
pop
into
repnz
frstor
push
inc
xchg
sbb
mov
push
sar
movsb
test
mov
dec
lds
push
ja
ljmp
leave
jge
fbstp
fstl
dec
aad
ds
aam
call
outsb
inc
hlt
xlat
hlt
cmpsb
fimuls
popa
mov
dec
xchg
into
cmp
pop
or
sub
sub
cld
dec
ror
xchg
mov
or
cmc
dec
enter
mov
aam
pop
or
in
pop
jmp
pop
sbb
jl
cmpsl
call
lods
lahf
mov
dec
aam
push
lds
shlb
iret
jecxz
cwtl
clc
orb
xchg
pop
pop
mov
mov
inc
mov
sarl
testl
push
jae
nop
into
fstpl
call
leave
rcll
fimull
fs
pop
clc
dec
leave
hlt
dec
dec
sbb
mov
cmpb
xlat
pop
ror
pop
popf
lds
xchg
aad
mov
fdivr
xor
out
inc
push
frstor
pop
and
data16
gs
inc
add
cmpsb
daa
mov
lret
mov
divl
leave
rcr
rolb
push
sbb
pop
sbb
int3
ret
dec
or
dec
pop
dec
pop
rcr
mov
adc
xor
fsubrs
int3
lret
mov
mov
xor
jl
shl
rcrb
jg
insl
jge
leave
or
jb
lret
lret
aas
int3
jae
sti
fsubl
jg
sub
xchg
fcmovu
std
adc
out
cmp
ret
dec
xlat
jnp
mov
dec
std
ret
popa
sbb
inc
popa
test
push
pop
fcoms
dec
pop
dec
pushf
in
sti
inc
pop
cmp
sti
loop
jbe
pop
sbb
fcmovu
ds
xchg
pop
sbb
pop
pop
repz
aad
xor
jbe
imul
push
mov
rcl
sub
lret
icebp
or
push
icebp
pop
or
inc
ljmp
mov
scas
into
jl
hlt
cmpl
mov
mov
push
inc
pop
nop
int
xchg
rol
test
popw
ror
aam
hlt
pop
loop
jmp
in
vmovq
jmp
int3
jae
inc
int3
aam
fstpl
xchg
fsubrs
pop
aad
std
add
inc
clc
vaddsubps
jle
in
dec
js
fdivs
daa
enter
mov
pop
lcall
mov
jle
push
je
leave
jbe
inc
mov
aad
push
xlat
es
addr16
dec
and
jbe
pop
movsl
ret
xchg
push
lds
dec
stos
or
dec
mov
push
sahf
pop
fcmovnu
lret
mov
fstps
std
out
fmuls
gs
stos
scas
jp
inc
sbb
call
shlb
add
adcl
int3
adc
pop
pushf
ljmp
fcmove
call
mov
dec
scas
xchg
ret
into
dec
hlt
sub
dec
jle
fistps
jns
inc
jecxz
push
sar
pop
lods
leave
lret
jb
mov
test
int3
ret
inc
cmp
out
or
rcr
pop
mov
dec
inc
roll
push
push
rolb
lret
fldt
add
enter
bound
jae
aaa
pop
cltd
or
js
ror
push
mov
test
dec
cmp
sarb
fcmove
mov
aad
enter
push
jbe
aas
dec
mov
loopne
cmp
mov
push
out
dec
jns
push
inc
ret
xor
sbb
in
inc
fiadds
scas
pop
mov
iret
shrb
imul
dec
and
dec
jge
dec
icebp
dec
mov
fnsave
shr
test
mov
daa
pop
aam
out
fimull
and
nop
inc
daa
jle
jo
mov
repnz
or
mov
aam
lahf
and
mov
dec
mov
inc
pop
int
fidivrs
fstl
lret
mov
neg
pop
scas
stc
pop
pop
into
rcr
leave
arpl
repz
mov
xchg
rcl
outsb
inc
stc
pop
cmc
inc
inc
jle
sbb
cmp
adcb
xchg
rclb
or
and
leave
cmp
shl
xchg
push
ret
cmpsb
push
mov
jno
fnstcw
and
add
std
aam
inc
inc
fdivp
push
xchg
mov
xchg
dec
adc
nop
sub
int3
inc
inc
push
fisubs
mov
fs
mov
clc
mov
mov
xchg
jg
push
add
leave
sti
xchg
faddl
mov
fmuls
or
or
outsb
xchg
mov
repnz
test
pushf
fiadds
push
lahf
subl
outsl
inc
lret
push
cmp
int3
popw
lret
sahf
sbb
in
stc
pop
mov
int
xchg
je
pop
in
cmpsl
sbb
dec
sahf
pop
sub
sbb
bound
push
ds
inc
sub
sti
dec
pop
pop
jp
cltd
sbb
movsl
jb
mov
push
int3
jl
inc
sarl
sti
jne
mov
dec
std
mov
sub
test
dec
xchg
dec
mov
pop
jle
ret
mov
add
adc
jbe
mov
sub
jl
std
mov
sub
pop
leave
inc
mov
jg
cmp
rorb
iret
jne
dec
push
inc
pop
scas
out
add
and
in
fsubs
cli
push
pop
or
cmp
into
ror
jbe
aad
enter
sahf
mov
je
xor
inc
int
scas
mov
adc
mov
cmp
sub
rcr
cli
pop
pop
pop
std
into
int3
sbb
jno
fwait
sub
fsubrs
outsl
pop
push
inc
cmp
sarl
mov
stc
jae
sbb
sbb
les
mov
clc
inc
mov
aad
push
mov
es
into
stc
pop
adc
sbb
jge
cmpsl
push
mov
out
ljmp
sbb
sbb
mov
mov
out
push
xlat
loopne
jns
test
sbbl
fistpl
ficompl
test
add
fwait
add
pop
jmp
dec
sbb
shlb
mov
pop
xlat
cmp
pushl
fisubs
insl
jb
sbb
pop
sbb
fcmove
jle
sti
cwtl
scas
xlat
int3
out
pop
fisubrl
jae
aad
jg
xlat
mov
inc
xchg
mov
mov
inc
mov
add
cmpsl
jno
sbb
and
aam
cmp
mov
testl
fdivl
xor
or
push
inc
or
rcl
hlt
adc
lds
or
lods
xchg
outsb
pop
add
sbb
lock
pop
dec
jecxz
pop
fcmovnbe
adc
lea
dec
std
mov
sub
loope
sahf
cs
sbb
jae
xlat
jg
movsb
shlb
aas
jle
dec
ror
lret
mov
test
aaa
dec
mov
in
xchg
jns
iret
sarl
pop
stc
or
push
shr
dec
into
ret
rorb
jae
gs
dec
fidivrs
mov
cwtl
ficompl
ret
push
ljmp
fistpl
sbb
cwtl
dec
sub
aas
cld
sub
faddl
iret
dec
aas
push
mov
aad
aam
adc
icebp
sarl
into
ds
rclb
adc
int
mov
popa
std
sbb
into
lds
enter
sbb
pop
cli
mov
repz
inc
jecxz
ret
lret
mov
mov
dec
mov
pop
or
in
cmp
pop
dec
sahf
mov
push
xchg
les
adc
fidivl
dec
rcl
jno
xchg
ret
test
pop
outsl
mov
mov
adc
pop
xor
mov
dec
sti
leave
inc
and
cmp
jge
jmp
and
ficomps
ss
dec
mov
pop
dec
dec
inc
rcr
push
pop
push
jge
sub
inc
fcmovb
and
std
out
aas
mov
mov
sbb
adc
pop
int3
pop
or
cli
push
dec
int
out
push
pop
jl
cmp
mov
mov
mov
jge
out
pop
mov
pop
jge
lret
mov
pop
mov
test
pop
jae
adc
xchg
popa
nop
dec
and
pop
iret
push
jne
sub
sahf
inc
je
cs
aad
aad
jne
xchg
push
mov
xor
cmp
push
xchg
cld
xor
xor
or
ror
mov
lods
fdivl
pop
adc
cmpsl
cmp
fistpll
out
repnz
push
idivb
leave
int
js
mov
loope
loop
cwtl
int3
ficoml
pop
jbe
and
add
stos
mov
mov
mov
inc
clc
shll
add
mov
sahf
fldl
outsl
xchg
adc
cmp
lcall
fiaddl
mov
pop
adc
pop
imul
hlt
rorb
xchg
lahf
mov
jns
inc
cwtl
mov
dec
pop
sbb
mov
rorb
adc
dec
jae
push
inc
out
rcl
hlt
pop
sub
inc
arpl
pop
or
jmp
mov
cmp
mov
inc
mov
clc
adc
cmpsb
inc
imul
xor
dec
call
leave
push
iret
scas
sbb
sbbb
cld
mov
dec
push
lret
in
push
nop
add
sti
imul
pop
inc
jecxz
jno
cwtl
inc
shl
pop
xchg
arpl
ds
inc
push
pop
push
pop
mov
loop,pt
notb
loopne
shr
push
mov
jge
fstl
jl
aam
cli
xchg
add
mov
call
fs
gs
aas
rcl
xchg
clc
pushf
adc
fmulp
lcall
insb
outsb
rclb
aam
and
or
mov
jg
mov
cli
cld
faddl
mov
dec
push
movsl
shl
outsb
xlat
push
ret
pop
cmp
fdivr
cld
inc
sbb
mov
movsb
out
or
dec
fmuls
xchg
stos
mov
cmp
movsl
inc
pop
inc
outsl
sub
std
dec
lcall
rolb
into
mov
arpl
fcomps
iret
ret
push
fxch
xchg
out
ror
mov
stc
nop
sahf
xlat
sahf
pop
mov
sbb
adc
jge
add
fldl
mov
push
rorl
adc
fcmovnu
xlat
std
jle
jmp
dec
stc
scas
pop
mov
addr16
lds
adc
lret
popa
fsubs
sbb
pop
ret
xor
imul
daa
das
pop
shrb
fcoms
pop
fidivl
and
aad
fisubs
dec
add
or
jmp
cmc
xlat
sti
ljmp
lds
pop
cmp
notl
adc
fwait
ss
sbb
les
add
js
jl
push
mov
int3
js
mov
pop
xlat
push
mov
icebp
or
loope
cmp
inc
xchg
mov
int3
mov
or
pop
or
adc
jl
dec
int
jge
test
mov
dec
sti
or
fisttpl
mov
dec
cli
and
xchg
mov
adc
int3
mov
ds
lahf
ret
dec
lret
mov
mov
mov
fildl
sub
push
dec
pop
pushf
leave
shlb
jne
jg
sbb
sbb
or
int3
fdivp
sbb
dec
aam
pop
sub
stc
push
lret
mov
dec
lds
sbb
insl
mov
enter
adc
imul
lret
ja
aas
cmp
mov
test
jle
mov
push
iret
sbb
sbb
mov
xor
sti
ljmp
adc
xchg
rcl
scas
es
sarb
movsl
aad
gs
enter
out
ret
aam
fcompl
push
or
jge
mov
cmp
dec
inc
lret
inc
jmp
pop
push
dec
pop
cmp
iret
andl
mov
xor
int3
gs
sbb
adc
fcomi
pop
xlat
aaa
sbb
enter
jecxz
sti
sbb
pop
push
outsb
fcoml
orb
fxch
jmp
pop
aad
xor
push
inc
pop
fisttpl
pushf
and
jne
out
aad
dec
lock
and
stos
adc
shlb
dec
inc
jge
popa
xor
enter
pop
lret
je
sub
lret
sbb
insb
add
mov
add
pop
sbb
in
js
addr16
or
fcmovb
nop
jle
loop
inc
negl
testl
daa
cwtl
fidivrl
leave
into
dec
mov
push
pushf
add
inc
jecxz
shrl
dec
leave
pop
mov
sub
pop
dec
int3
scas
mov
test
notb
cmp
daa
pop
jns
mov
jge
icebp
enter
jl
cwtl
push
inc
push
push
fcmovne
dec
rolb
fisttpl
pop
dec
scas
mov
rcrl
sti
cmp
daa
into
ljmp
mov
mov
cwtl
nop
insb
fisttpl
insb
dec
mov
mov
cmp
sbb
rorb
repz
std
int3
pop
xor
push
sub
shlb
cmpsl
fmull
mov
pop
xchg
bound
cmc
push
pop
dec
sub
pop
or
pop
ljmp
mov
insl
mov
enter
pop
mov
rcl
sahf
push
push
dec
pop
movsl
int3
pop
retw
out
lahf
rol
dec
ficoml
mov
int
incb
push
or
int3
sarb
sbb
pop
dec
fcmove
orb
adc
sahf
arpl
lock
cli
mov
pop
enter
rcr
mov
xchg
gs
fdivrl
test
addr16
push
xlat
inc
inc
adc
out
mov
mov
mov
mov
add
out
pop
iret
pusha
clc
dec
enter
mov
ret
aad
mov
scas
pop
sbbl
pop
jae
adcl
mov
sbb
outsb
es
mov
inc
stc
repz
int
xlat
push
aad
mov
ljmp
in
mov
lods
xor
adcb
lahf
xchg
test
ret
mov
loope
or
dec
ficompl
call
aam
popa
cld
jmp
cs
int3
int
sahf
and
jge
fidivrl
push
push
into
hlt
sub
fmulp
mov
shlb
ret
dec
cmp
mov
aam
cwtl
xchg
mov
cmp
stos
pop
mov
stos
cwtl
dec
iret
mov
inc
jb
mov
adc
jmp
cmc
fcmovu
dec
aam
cwtl
repnz
inc
in
fadd
out
das
adc
adc
mov
or
andl
enter
lret
sub
pop
push
adc
ror
int
aaa
int
testb
fsts
inc
aad
pop
dec
pusha
shrl
test
inc
ficomps
fstps
outsb
mov
xchg
push
inc
pop
sahf
es
imul
enter
mov
cmp
inc
jl
ret
mov
es
ret
test
push
lods
ljmp
fcomps
iret
push
and
dec
mov
stos
ficoml
sbb
dec
loopne
in
cmp
fmulp
into
xchg
xor
adc
jb
ljmp
inc
mov
inc
mov
cmovl
movsb
ror
ret
das
or
scas
pop
iret
in
jecxz
movsl
inc
ret
jno
push
call
xchg
xchg
test
mov
sbb
adc
pop
push
ret
out
sbb
into
jb
cmp
out
shll
lret
pusha
push
popf
add
jmp
xchg
mov
shll
ret
dec
stos
popf
flds
jle
rcrl
iret
into
pop
cli
pop
mov
scas
dec
pop
loope
fisttpll
popf
aam
push
aaa
cs
jl
lods
push
gs
push
mov
loope
int3
sub
inc
sahf
sahf
fildl
xchg
loop
sbb
pushf
sub
push
or
sahf
mov
loop
push
rclb
xchg
and
inc
jl
push
pushf
stos
add
dec
leave
fdivs
push
leave
xlat
jne
pop
je
ljmp
adc
popa
push
lds
sahf
sar
fsubl
into
mov
inc
notl
xchg
into
add
fmull
dec
lret
and
rclb
push
rolb
aad
inc
cmpsb
push
mov
cmpb
mov
popf
inc
xchg
fcomps
repz
mov
sahf
ret
sti
xchg
call
ret
push
adc
inc
sbb
pushf
xor
xlat
jns
xchg
into
jne
sbb
add
aas
jb
aaa
orl
bound
divl
fcmovnu
push
inc
nop
jb
leave
jae
lret
scas
leave
cmp
add
mov
or
lods
mov
rcr
mov
inc
pushf
lock
and
pop
add
mov
test
dec
rcl
cwtl
mov
leave
pop
cld
and
in
fdivs
andnps
fsts
dec
aaa
rol
ret
lods
mov
test
in
xchg
pop
out
int
cmpsb
rcr
neg
push
pop
inc
jecxz
mov
rol
inc
repnz
push
add
pusha
cmp
inc
in
out
jl
xchg
aad
sbbb
inc
pop
mov
repnz
jge
fistl
data16
push
mov
aad
test
int
mov
scas
in
xchg
lret
test
sub
sbb
jne
mov
out
dec
push
push
std
adc
cmp
cmpl
push
popa
adc
sahf
mov
les
test
rcl
int
pop
or
inc
iret
pop
int
mov
dec
inc
xchg
inc
pushf
shrl
pop
lret
mov
fldl
cwtl
mov
in
sbb
cmp
es
sub
jle
ficoml
mov
fldenv
and
inc
push
xchg
cwtl
mov
dec
ds
sbb
pushf
popa
jne
fmul
inc
add
aad
test
add
jge
or
shlb
mov
sarb
inc
clc
or
rcrb
fdivrs
sarb
int
jne
inc
rcrb
in
fistpl
xchg
aad
cmpsl
stos
inc
push
fstpl
icebp
xchg
cmp
inc
pushf
ss
pop
loope
inc
ftst
push
dec
xlat
and
xlat
adc
int3
inc
enter
ss
gs
xchg
jns
push
xchg
ds
pop
popa
sbb
jmp
aam
dec
dec
or
scas
cmp
ret
test
inc
xchg
dec
mov
loope
les
arpl
jo
push
xchg
lods
pop
into
xor
pop
mov
dec
cmp
xchg
inc
repz
dec
dec
lcall
imul
pop
aaa
push
jle
push
mov
dec
dec
fsts
mov
jmp
push
cmp
notl
faddl
cmp
add
pop
pusha
fimull
test
rorl
or
pop
mov
sub
int
jbe
add
cmpsb
pop
mov
jmp
clc
enter
mov
iret
adc
lret
in
int
fimull
pop
hlt
pushf
insb
dec
popf
pop
rclb
les
cmp
push
pop
aas
jp
leave
mov
inc
mov
xchg
inc
pushf
imul
stc
xchg
xlat
iret
dec
adc
jg
fmull
adc
pop
inc
cld
fstps
shrb
lret
dec
adc
mov
cmc
aad
dec
ret
pop
ret
pop
loopne
lret
and
addb
inc
jl
fcmove
and
loope
icebp
sbb
xor
loopne
fcmovnb
push
dec
mov
push
jle
lahf
lock
fcompl
cmp
dec
pop
loopne
inc
dec
pop
mov
insb
mov
aas
cwtl
jecxz
mov
aad
pop
dec
repz
insl
sti
dec
inc
aam
adc
out
aas
pop
cwtl
pop
in
rcll
fdivl
fmul
xchg
ficoms
arpl
repz
jp
mov
dec
test
vpcmpeqw
sbb
mov
pop
inc
dec
sbb
sub
adc
fcomps
pop
cmp
lock
ret
sti
inc
adc
xchg
std
mov
lods
test
pushf
sub
test
fmull
iret
xchg
xchg
jge
hlt
adc
pop
xlat
pop
fstp
sbb
andb
inc
mov
fwait
imul
movl
repnz
mov
int3
mov
jle
dec
inc
mov
push
rcll
xchg
sbb
fcmovu
repz
cwtl
lcall
cmp
shrl
inc
lods
jae
pop
inc
xchg
pop
in
xchg
mov
fisubrl
fiaddl
cmp
or
aam
dec
pop
fsubr
add
and
push
xlat
xchg
iret
mov
xchg
iret
inc
int
mov
add
or
imul
inc
rol
fs
sbb
xchg
inc
aad
inc
mov
jge
loop
fdivr
mov
pop
dec
xchg
enter
addb
jbe
mov
jecxz
clc
sbb
xchg
dec
or
cmpl
icebp
mov
not
rcrl
jne
dec
ficomps
or
jge
adc
jno
cmpb
subb
std
rcll
stc
lahf
add
dec
cmp
fcmovu
mov
cmp
mov
in
mov
inc
in
fildll
dec
leave
mov
cmovne
xor
pop
mov
outsl
clc
popl
adc
mov
push
xchg
movsl
insl
cmp
inc
push
ret
loopne
xchg
fistpl
jne
mov
mov
scas
aad
dec
or
aas
int3
pop
mov
fcomps
jg
inc
fwait
adc
push
jecxz
pop
sub
pop
mov
jns
iret
testl
test
sbbb
pop
pop
mov
test
ret
sub
shll
hlt
pop
xor
fnstenv
bound
cmp
fimull
sub
js
xlat
test
and
int3
sbb
pop
push
movhps
clc
xchg
jge
push
enter
pop
rcll
dec
cwtl
aad
inc
into
ss
pop
std
movsl
iret
push
int3
dec
cli
mov
in
iret
push
adc
xor
jl
insb
ret
or
xlat
push
jge
cmp
xchg
pop
mov
arpl
push
mov
inc
stc
rcrb
aam
add
scas
jno
inc
leave
shlb
jmp
dec
pop
xchg
fadd
cmp
adc
sub
andb
dec
push
fimull
or
sub
dec
jp
repz
dec
into
stos
mov
cs
push
fidivrl
aam
or
cmp
fimuls
mov
ret
pop
les
inc
into
lods
loopne
inc
rcrb
mov
push
sbb
fiaddl
pop
lods
mov
inc
leave
mov
or
lods
lds
lods
out
dec
dec
add
rcrl
lret
rcr
mov
dec
pop
loopne
dec
push
jns
loop
neg
xchg
fimull
xor
int3
mov
insl
adc
iret
popf
rcl
ret
or
jo
xchg
out
dec
divl
push
xlat
iret
call
jne
pop
in
xlat
stos
pop
into
aam
int3
shr
iret
jle
add
or
xchg
scas
pop
dec
fldt
fcoms
mov
clc
and
push
lods
fistl
jg
lahf
aas
mov
pop
scas
fisttpl
out
fsts
cmp
loope
fcoml
dec
lret
into
out
outsb
sub
mov
loopne
pop
pop
pop
dec
mov
insb
mov
iret
adc
mov
mov
add
mov
mov
cs
cltd
sahf
stos
mov
inc
inc
add
xlat
aad
sub
pop
sbb
cmpl
in
sub
insl
mov
push
js
jl
repnz
push
pop
test
aad
jl
pop
fmull
lods
rcr
xchg
outsl
in
pusha
fsub
xor
jle
mov
or
mov
xor
andb
rorb
popa
sbb
daa
xchg
push
inc
mov
lret
mov
cmp
or
adc
push
sub
rolb
pop
sbb
lods
addr16
xor
push
push
ror
inc
inc
jl
shrb
dec
jge
decl
int
aas
rcr
adc
ljmp
enter
add
sub
cld
iret
mov
pop
aam
loope
call
pop
push
and
jmp
sbb
push
sub
push
cmp
popa
add
push
add
sbb
cs
mov
sbb
cwtl
adc
inc
ficomps
mov
shl
test
aaa
pop
push
cli
cmp
mov
movsl
push
xchg
fidivrs
popf
pop
jge
xchg
mov
inc
popa
sbb
mov
enter
repnz
mov
mov
mov
or
into
dec
lock
out
test
cli
dec
fdiv
jl
call
loopne
enter
inc
mov
dec
int3
mov
pop
pop
cli
jmp
iret
fistpl
decb
popa
fldcw
scas
insb
inc
sbbl
pop
adcb
pop
add
int3
pop
test
mov
int3
jle
fimull
iret
dec
inc
inc
pushf
andb
fs
lret
mov
xlat
mov
sub
outsl
lahf
cmpsb
inc
push
mov
jns
into
outsb
les
jp
mov
cmpsl
xlat
movsl
pop
ficomps
int
mov
xchg
sahf
inc
and
dec
ss
jmp
pop
fsubr
mov
ljmp
inc
rcll
fcmovbe
mov
inc
fsincos
add
mov
pop
xor
call
xlat
push
enter
inc
loope
xchg
mov
lcall
dec
xor
mov
fdivrp
add
jno
sub
dec
imul
ret
sub
pop
lret
mov
cmp
mov
shlb
in
loopne
jns
repnz
jle
sub
cltd
sbb
dec
pop
dec
scas
out
xchg
lods
aad
or
std
push
roll
cld
push
mov
adc
xor
rcrb
leave
test
inc
mov
test
faddl
adc
dec
inc
pop
fmulp
pop
jo
inc
stos
int3
out
aam
pop
xchg
adc
fidivrl
sub
push
mov
stc
scas
or
fistpl
into
mov
in
dec
fsubs
lret
adc
jge
inc
xchg
jo
dec
mov
jge
pop
adc
stc
pop
dec
pushf
scas
mov
mov
dec
pop
pop
sti
cmp
or
mov
mov
mov
in
and
mov
dec
fsubs
mov
iret
icebp
mov
push
pop
push
int3
std
push
pop
std
mov
in
aam
inc
cmpsb
sub
pop
aad
fildll
jb
ficompl
mov
jle
leave
cli
cmpsb
cmp
mov
xlat
test
adc
xor
inc
push
sub
dec
in
xor
cmpsb
xor
sahf
or
cmpsb
dec
hlt
xchg
nop
gs
fnstcw
sbb
cmp
aad
rorl
pop
mov
outsl
dec
mov
push
mov
fistl
int3
pushf
add
add
xor
push
rol
adc
push
sbb
xchg
outsb
mov
mov
fdivrs
mov
leave
cmp
inc
lret
push
adc
les
push
cli
pop
outsb
mov
imul
pop
xchg
dec
into
iret
cmpsl
fldl
lods
lret
shrb
jmp
push
sbb
ret
ficompl
mov
push
dec
lds
xchg
fsubrs
xor
icebp
int
mov
mov
cmp
enter
lret
mov
pusha
or
lds
ds
cld
aad
stos
idiv
int3
jp
cmc
mov
push
fsub
sub
xor
inc
sahf
jecxz
jp
xchg
mov
fldt
xchg
lods
mov
cmpsb
inc
mov
inc
ds
mov
mov
into
push
xor
shl
jmp
and
les
mov
ret
mov
pop
into
aas
negl
jae
dec
aam
enter
sti
arpl
int3
mov
cmp
and
ja
pop
stos
mov
fs
mov
rcl
add
std
or
sarl
rolb
jmp
fisttpl
divps
std
xchg
rorb
enter
cmp
dec
xchg
cmp
adc
push
into
insl
popa
add
mov
addr16
les
enter
dec
fcomi
push
lret
push
mov
xchg
out
aad
dec
sarl
lods
cmp
adc
mov
xor
lcall
or
jno
mov
inc
aam
outsl
mov
mov
xchg
rcl
inc
jl
out
dec
roll
dec
pop
clc
pop
or
sbbb
adc
inc
lret
jns
adc
pop
lds
mov
xchg
dec
aas
into
fsub
into
jo
shlb
cmp
jle
int
repz
scas
int3
test
outsb
popf
sub
xchg
fcoms
pop
dec
dec
test
aam
dec
and
mov
xchg
inc
shlb
xchg
cld
dec
stc
int
mov
mov
cld
int3
push
mov
iret
mov
mov
hlt
push
call
fdivs
int3
inc
rcr
stos
lret
sub
leave
push
aad
int3
je
xor
xchg
fcmovbe
dec
cmp
ret
dec
xchg
mov
mov
fmuls
stc
xor
movsl
int3
imul
cmp
mov
cmp
loope
xchg
add
mov
sti
enter
push
lret
gs
ror
jns
push
iret
je
sub
adc
xchg
push
cmp
sahf
loope
lcall
in
mov
rol
sbb
push
mov
sub
mov
cltd
push
inc
sahf
inc
call
lret
push
xchg
mov
loop
or
sbb
cmp
int3
dec
sahf
jae
ja
mov
xchg
inc
dec
mov
push
push
jl
lods
into
idivb
xor
push
hlt
int3
or
push
lret
int
xor
push
ret
pusha
fcmovbe
repz
jmp
fnstsw
das
mov
jns
scas
inc
or
sub
pop
push
ss
clc
dec
mov
jae
push
mov
xchg
push
shrb
sbb
cwtl
inc
ss
loopne
pop
lret
dec
mov
jae
pop
aam
cmpsb
xor
pmullw
sahf
dec
mov
rcl
lret
stc
jecxz
inc
push
pop
mov
mov
and
fcomps
test
lret
push
cli
dec
fcoml
cld
mov
cmovnp
fcoml
jle
addr16
pop
arpl
leave
cmp
mov
int
dec
iret
sub
insb
fsubrs
test
and
aad
xchg
aad
pop
fstpl
mov
jmp
ds
outsl
loope
add
push
mov
dec
pop
fidivs
sub
push
inc
mov
mov
aam
push
ds
into
call
movsl
sarb
inc
mov
shrl
shlb
mov
mov
in
ja
push
in
pusha
cmp
jmp
insb
mov
lcall
pop
cld
inc
insb
int
sahf
add
pop
or
mov
out
mov
and
loopne
dec
pop
fildl
frstor
sub
jl
int3
enter
cwtl
mov
sarl
and
ficomps
shrl
fmulp
inc
flds
aad
mov
lcall
adc
es
inc
push
das
std
push
push
cmp
cmp
fs
push
insl
pop
dec
mov
lcall
iret
xor
les
mov
dec
xchg
out
fmul
or
gs
mov
out
inc
cmpsl
les
int
jge
incb
dec
iret
xor
mov
cmp
orb
dec
inc
mov
or
ljmp
dec
push
mov
push
xor
dec
testb
aad
inc
push
scas
cmp
fstl
into
cltd
pop
fcompl
cmp
push
inc
into
push
jmp
outsl
jecxz
lea
dec
mov
clc
addr16
cmc
sbb
sub
dec
leave
iret
ss
xor
fdivs
xlat
cwtl
je
repnz
inc
mov
fcmovu
sbb
clc
daa
in
loopne
inc
fisttpll
mov
sbb
push
inc
dec
fcmovnb
dec
cli
pop
xor
inc
push
jge
incb
jmp
std
js
mov
mov
inc
fcompl
adc
dec
aam
push
jge
lret
das
mov
xchg
enter
push
pusha
pushf
std
in
or
pop
adc
push
adc
arpl
sbb
xchg
enter
lcall
fisubl
jne
dec
ds
mulb
cmp
sbb
mov
pop
mov
popf
xchg
test
inc
push
rorb
mov
pop
out
xchg
or
mov
fistpl
faddl
dec
xchg
and
sbb
shrb
loop
fisttpl
lret
hlt
in
dec
pop
jp
push
cmp
fisttpl
inc
mov
daa
mov
pop
sbb
lret
xor
arpl
aas
cmp
ret
sahf
dec
ss
fcmovbe
mov
push
aad
adc
adc
gs
pop
inc
sub
sahf
mov
push
rcl
xchg
and
in
fdivrs
movsb
ret
daa
xchg
pop
cld
dec
sbb
jno
ret
loop
subl
rcrl
testb
pop
fadd
lds
dec
pop
outsl
popf
scas
insl
jmp
int3
pushf
ret
push
outsb
mov
mov
pop
adc
stc
jecxz
pop
loope
add
xchg
mov
outsl
sbb
neg
int3
push
mov
push
out
dec
sub
and
add
sahf
add
inc
xlat
icebp
aad
lods
insl
add
jmp
push
dec
mov
fnstsw
cmp
mov
and
add
rolb
out
aad
and
out
dec
dec
fcom
enter
push
jmp
dec
jmp
pop
shlb
xlat
dec
outsl
and
push
pop
enter
test
loopne
pop
fimuls
aad
mov
loopne
pop
insl
dec
xchg
aam
inc
pop
dec
inc
xchg
ret
popa
fsts
sub
mov
movsl
mov
xlat
fmuls
out
mov
add
mov
andl
es
xor
enter
ficompl
aam
xchg
xor
rcl
pop
pop
movsb
cmp
shrb
pop
mov
and
shlb
jmp
stos
test
add
mov
mov
mov
push
rcr
add
push
pop
adc
rcl
mov
mov
jl
shlb
inc
stos
sub
test
enter
inc
hlt
lret
mov
stc
inc
fistpll
or
xor
fildl
rclb
aam
dec
pop
dec
into
into
shll
inc
pop
xlat
mov
xchg
mov
jbe
dec
aad
push
dec
rcr
dec
int3
jge
xchg
jns
aas
fsincos
loope
adc
dec
clc
mov
fcoml
mov
mov
pop
inc
pop
int
ja
mov
mov
mov
shll
sbb
push
rcl
test
adc
dec
xor
mov
xchg
leave
fdivs
out
and
pop
ret
lret
pop
int
sbb
xor
scas
dec
int3
dec
cmp
rclb
shlb
inc
cwtl
sub
insb
push
dec
scas
push
xchg
sub
ljmp
jb
mov
xchg
dec
fldcw
aad
ret
xchg
sbb
insb
jl
inc
jae
sub
int3
xlat
and
xlat
jne
lcall
rol
ljmp
xor
mov
xchg
orb
adc
pop
jo
or
mov
mov
lret
dec
pop
jae
rcr
call
inc
aam
dec
sbb
push
rol
inc
fisttpl
dec
mov
lock
mov
push
mov
out
cwtl
shl
fcomps
aad
lods
pop
in
fcompl
inc
ljmp
pop
dec
fldl
jl
inc
scas
jo
cmp
sahf
fwait
cmp
aam
xchg
mov
dec
xchg
mov
std
fs
leave
push
adc
mov
repnz
ds
push
mov
lods
aam
fcmove
jg
out
fisttpl
leave
ret
cmp
scas
arpl
inc
js
fcompl
xchg
test
cli
cmp
aas
dec
dec
cli
inc
pop
and
cmp
pop
aad
or
es
les
inc
fcoml
inc
ficoml
pop
push
aam
repz
cli
scas
aam
ficoms
cs
movsl
leave
xchg
fadd
rorl
inc
sbb
cmpsl
dec
jb
iret
aas
ror
sub
lcall
js
sbbb
aad
ror
fcos
jp
repz
xchg
rcrb
jecxz
xchg
mov
out
dec
movb
pushf
push
jmp
fsubrs
aas
outsl
aam
fwait
mov
cmpsb
xlat
inc
icebp
addr16
stos
sbb
push
inc
dec
inc
leave
outsb
insb
lock
mov
es
fdivrl
xlat
jle
xchg
pop
cltd
movsl
sbb
test
popa
dec
fcmovbe
adc
sbb
pop
mov
les
xchg
popa
xchg
es
aas
cmp
xchg
fsubl
pop
inc
flds
popa
xchg
jmp
cmp
sahf
fadd
and
inc
rclb
daa
sbb
adc
or
mov
jmp
idivl
call
xchg
sbb
inc
push
cli
inc
ds
cwtl
leave
enter
cmpsb
sbb
add
scas
push
ljmp
aas
jmp
push
aad
inc
rclb
adc
push
enter
mov
rolb
dec
inc
cli
fsts
fcoms
adc
or
int3
push
and
hlt
test
fsub
ljmp
test
mov
popf
fcmovu
data16
sti
mov
xchg
pop
lahf
ret
inc
into
adc
test
jae
fldt
adc
fsubrs
scas
dec
aam
jg
lret
add
inc
test
fdivrp
inc
add
lahf
inc
push
cmpsb
cmp
loopne
int
ljmp
pop
push
xlat
aad
push
into
mov
lahf
or
test
ror
ss
stos
inc
cld
les
or
pop
jecxz
ja
push
or
ror
push
inc
push
jecxz
push
mov
ds
leave
enter
xlat
mov
mov
orb
sub
push
fnstenv
pop
cmpsl
push
movsl
out
mov
mov
pop
cs
push
inc
and
mov
dec
add
ds
insl
sub
imul
cs
or
push
ret
adc
clc
call
out
push
inc
xchg
aad
sbb
lret
dec
sub
daa
pushl
aas
xlat
pop
aam
out
test
sbbb
aam
ret
iret
sbb
and
rcrb
ror
push
xor
fsts
xchg
push
fst
fstl
shl
dec
iret
neg
daa
add
mov
xor
dec
scas
jno
mov
imul
lock
fs
lret
cmpsb
ret
add
into
jmp
fidivrl
iret
sahf
jno
dec
subl
add
pop
adc
add
jne
dec
dec
pop
into
jns
mov
sbb
in
das
imul
push
sub
xor
inc
sub
push
lock
into
movsl
xchg
jmp
dec
int3
pop
popa
and
mov
push
fstps
iret
push
add
jo
out
cwtl
ret
push
dec
into
stos
notb
lods
add
iret
mov
cmpsb
les
mov
clc
push
sahf
movsl
or
xchg
or
iret
push
xchg
insb
int3
aad
fsubs
icebp
lock
ds
inc
push
nop
inc
mov
mov
hlt
sbb
mov
jl
jns
rcr
jge
cmp
and
fmul
ss
xchg
nop
jmp
aas
repnz
lret
arpl
aam
pop
ror
scas
and
dec
lods
mov
xlat
rcll
daa
imul
enter
mov
adc
dec
dec
pusha
fnstcw
icebp
jge
add
cmc
les
shrb
mov
ror
cld
int3
out
ljmp
fldt
ret
mov
imul
outsl
cmp
loopne
scas
push
add
xacquire
fmull
dec
pushf
test
and
mov
dec
inc
pop
xchg
fimull
out
sbb
imul
pop
pop
lahf
pop
cmp
adc
fiaddl
gs
dec
stos
ljmp
sahf
fsubs
fstps
pop
jbe
rolb
aam
enter
mov
or
mov
xchg
sub
inc
mov
ficoml
push
sahf
xchg
sbbb
int3
mov
jne
lret
rclb
leave
fisubs
out
pop
aam
fimull
jle
enter
push
sub
fs
xchg
outsl
mov
ljmp
jmp
bound
mov
ficoms
cld
aad
int
fstps
dec
scas
cli
iret
ds
inc
and
push
adc
sbb
in
mov
data16
mov
in
dec
fistl
jp
out
inc
sbb
enter
inc
mov
mov
addr16
xchg
mov
push
lret
out
in
dec
pop
popa
fists
cld
int3
test
dec
in
xor
push
stc
ja
push
movsl
daa
mov
xchg
fidivs
movsb
xchg
aaa
ror
push
pop
pop
test
enter
pop
dec
lret
mov
push
dec
adc
daa
or
push
sbbb
mov
add
repnz
adc
cmp
outsl
rol
das
inc
adc
addb
mov
scas
jno
mov
pop
push
popf
ror
pop
cmp
dec
sti
out
inc
inc
cmpsb
fisttpl
mov
adcl
aaa
jmp
jle
fistl
jne
mov
inc
pop
xor
fadds
xchg
mov
cmp
pop
ds
rcll
sahf
int
mov
loope
add
dec
int3
leave
sbb
rorb
xchg
xor
dec
inc
aad
cmp
outsl
shr
ljmp
shl
faddl
cli
inc
mov
xlat
cmp
mov
cmpsb
pop
or
fcomps
or
adc
test
aad
adc
fidivrl
ljmp
pop
in
adc
into
mov
cmc
adc
fdivrp
lock
mov
jl
mov
cmpl
pop
iret
cwtl
jp
lret
mov
mov
loopne
jno
rcr
pushf
out
lahf
mov
dec
sbb
dec
fldenv
pop
stc
mov
pop
scas
lcall
lock
pop
insb
aaa
jne
insl
rclb
add
test
leave
scas
cmp
arpl
cmpsb
insb
fisttpl
fmull
xchg
dec
xchg
inc
leave
mov
jge
dec
lock
int3
inc
jne
fidivrl
xor
xlat
sub
sbb
ret
mov
sbb
data16
into
mov
out
pop
ds
adc
push
fiaddl
shlb
dec
pop
mov
lret
daa
clc
inc
jbe
ret
insb
inc
aas
push
or
adc
sbb
sub
fisubl
int
iret
xchg
jp,pn
lods
jg
dec
cltd
fcmovnb
aaa
loop
jb
pop
mov
cmp
pop
pop
adc
int3
sbb
xchg
sbb
mov
jae
mov
in
pusha
dec
pusha
or
scas
push
xlat
iret
xor
mov
sahf
rclb
ret
mov
lret
fld
stos
cwtl
add
fcoml
in
adc
clc
add
fcom
mov
jns
pop
lods
dec
xchg
leave
lds
jle
mov
or
mov
stc
lahf
mov
jge
pop
adc
mov
loopne
cld
mov
lret
xchg
in
adc
bound
icebp
adc
int3
add
cwtl
shl
aas
dec
or
jecxz
push
int3
pop
stc
and
rclb
shlb
into
cmpsb
push
jbe
ja
fidivrl
lods
inc
push
shlb
cmp
sarl
cmpb
ret
dec
xchg
inc
mov
jno
int3
mov
xor
and
push
cwtl
mov
les
dec
les
lahf
jg
hlt
fmul
inc
movsl
shrb
dec
test
popl
xor
mov
pop
scas
mov
sahf
sub
int3
add
jo
aas
add
xchg
scas
pop
cs
lods
stc
inc
dec
jge
ror
das
ret
dec
aad
fisttpll
mov
ret
ja
and
std
dec
inc
in
jge
mov
test
sarl
ds
dec
fimull
adc
cwtl
and
iret
jp
dec
stos
mov
xchg
cltd
enter
jno
movsl
fsubs
pushf
cmpsl
jg
flds
stc
int3
test
out
dec
jle
push
ss
andb
inc
int3
pop
sub
aad
mov
insl
jg
push
pop
inc
rclb
dec
xchg
cmp
inc
fnsave
mov
bsr
fcoml
xor
leave
rorl
sti
dec
jmp
mov
int3
pop
rdmsr
mov
push
fnstsw
add
enter
jle
loope
hlt
mov
jo
sar
mov
cbtw
pop
lea
shlb
mov
jmp
push
ss
sub
in
xorl
ror
leave
adc
cmp
adc
pop
push
imul
fwait
push
mov
xchg
mov
mov
sub
pop
jmp
or
inc
mov
xchg
mov
stos
scas
jbe
outsl
cld
dec
loop
adc
inc
aad
stos
inc
fisubl
or
aad
push
mov
mov
push
cmp
push
mov
dec
outsl
mov
test
sub
fdivrl
cmp
adc
in
das
pop
dec
je
cmp
loope
mov
adc
pusha
dec
lods
push
iret
sarl
pop
enter
or
sbb
xchg
pop
pop
xchg
pop
cmpsl
dec
fimull
add
inc
int
mov
out
inc
fs
jle
fimull
jmp
dec
stc
sbb
xchg
mov
push
mov
mov
gs
es
mov
xor
mov
pop
popa
mov
cwtl
pop
mov
sub
sbb
fldenv
pop
lret
cmpsb
iret
nop
popf
cwtl
adc
test
lret
and
mov
pop
int
rcr
sahf
imul
aad
lret
aas
leave
push
push
scas
clc
mov
sbb
mov
adc
arpl
push
das
ds
xor
fistps
test
pop
shll
adc
notb
enter
push
rcll
jl
add
lcall
out
jmp
fldcw
add
cli
or
inc
jle
sti
movb
lds
jle
xchg
insl
cmp
in
data16
shr
iret
loopne
aad
in
loop
xlat
cmpsb
dec
fisubrl
hlt
enter
mov
xlat
les
xchg
inc
jmp
mov
jmp
out
les
aaa
rcrb
aam
and
add
push
push
lcall
inc
cmp
icebp
pop
leave
mov
int3
mov
int3
pop
inc
push
pop
xchg
mov
inc
xchg
int
mov
int
rcrl
pop
mov
push
outsl
or
jl
inc
pop
pop
cli
sbb
dec
mov
pop
pop
push
loope
call
cmpl
sbb
mov
out
jns
push
les
lret
imul
enter
push
fistpl
push
bound
pop
sbb
lret
sub
cmp
mov
fsts
jg
pop
fistpl
mov
mov
mov
iret
scas
lret
pop
cld
push
ds
sahf
inc
mov
iret
inc
dec
and
outsl
out
jns
fisubs
mov
dec
mov
test
aas
pop
pop
push
arpl
push
mov
jmp
sub
popl
inc
push
dec
iret
testl
mov
inc
cmpb
mov
mov
leave
adc
lret
jg
fldl
cmp
xlat
jne
int3
aam
mov
dec
inc
int3
push
mov
nop
sbb
lret
into
sarb
push
pop
xchg
fadds
fsts
dec
dec
aam
fistl
add
cwtl
sub
dec
fs
sti
cs
mov
cld
int
jle
mov
adcb
sahf
lods
daa
inc
push
sbb
mov
inc
jle
push
out
lret
dec
scas
add
out
adcb
inc
fcoms
fidivrs
lret
xchg
outsl
nop
ret
lahf
mov
ret
sbb
adc
adc
jbe
sbb
cmc
push
add
test
jno
xchg
jecxz
mov
add
loopne
xlat
sbb
push
fistpl
xchg
push
xchg
sbb
xchg
mov
fistl
ljmpw
xchg
clc
pop
mov
std
imul
xchg
pop
mov
outsb
int
mov
cmp
fidivl
cld
cmp
lds
or
push
cwtl
mov
sbb
mov
dec
add
xchg
sub
int3
fldl
fidivs
in
outsb
or
inc
mov
mov
dec
pop
pop
jge
stos
test
xor
push
dec
into
test
mov
xlat
mov
adc
add
xchg
push
dec
mov
inc
ds
int3
mov
int
je
or
inc
ja
jo
aaa
rcll
pop
sbb
xchg
add
in
leave
stos
push
sahf
adcl
out
ds
inc
ficoms
jle
imul
int3
daa
push
inc
mov
shufps
fstps
ljmp
cli
mull
jne
imul
mov
dec
or
aas
inc
into
bound
cmp
push
push
dec
lret
je
xor
push
hlt
fildl
pop
mov
mov
pop
inc
pmaxub
ljmp
fldlg2
add
aam
push
fidivrl
ret
adc
call
nop
add
jl
fstps
sub
or
jl
and
mov
mov
rorl
cld
mov
call
jle
outsl
leave
stos
lret
cmp
or
pop
jbe
cmp
rcr
dec
int3
pop
sub
in
enter
clc
jbe
dec
push
push
mov
dec
dec
stc
jle
push
out
aam
lcall
sar
je
fistpl
ja
pop
xlat
inc
mov
sub
scas
pop
adc
dec
ror
and
push
jo
aas
call
pop
mov
shr
pop
push
jle
mov
rol
sbb
push
mov
aaa
push
cmpsl
out
ds
dec
mov
xchg
pop
js
es
jecxz
xchg
pop
enter
cs
fmuls
inc
adc
push
xchg
mov
shr
pop
push
addr16
push
push
pop
fld
js
fldt
lret
enter
jl
inc
popa
xlat
inc
shl
pop
inc
adc
test
dec
je
dec
sbb
fnstenv
in
mov
adc
push
fists
jge
mov
mov
sbb
aas
int
mov
sbb
jl
fistpll
scas
iret
add
clc
lret
push
fldl
aaa
data16
jl
ret
test
mov
cmc
leave
jmp
push
ja
add
dec
aas
int3
cli
or
sbbb
xor
enter
push
or
add
ror
jmp
push
stc
inc
rcrl
repnz
inc
jns
pmaxub
jmp
aaa
cmp
sbb
enter
xlat
shrb
fcmovbe
push
inc
add
pop
pop
lret
sub
dec
jae
fidivrl
pop
lret
out
in
pop
push
ljmp
push
pop
dec
jmp
dec
xlat
addr16
dec
push
inc
and
pop
or
fstps
ljmp
pop
std
stc
dec
repnz
leave
push
bound
sbb
inc
jg
setae
add
std
mov
aad
iret
pop
or
call
or
dec
shrl
or
jecxz
dec
jle
jno
lcall
ds
call
adc
mov
cmp
cli
fstl
mov
or
test
dec
bound
cmp
sub
aad
test
push
pop
sub
xchg
mov
push
inc
sub
pop
pop
inc
dec
ffree
cltd
cmpsl
dec
mov
jl
mov
dec
push
into
cmpsb
fadds
mov
cld
fucompp
int
mov
mov
scas
in
cmp
xchg
xchg
rcl
jmp
fnsave
pop
bound
insl
jecxz
ret
rcl
shlb
pop
pop
loopne
xabort
lret
pop
xlat
sahf
push
gs
cmp
jl
jno
leave
dec
or
pop
mov
sbb
pop
mov
jmp
ds
inc
lret
orl
dec
push
cld
shrb
shrb
les
daa
xchg
fstps
out
cwtl
repnz
push
mov
pop
out
mov
dec
dec
mov
stc
mov
rol
mov
dec
fsubl
cld
das
int
fimuls
or
ds
push
lahf
lahf
mov
jl
aam
inc
push
pop
lods
fcmovbe
ds
outsb
xchg
imul
or
fmuls
jne
jl
bound
dec
jge
loope
inc
adc
sub
rcrb
push
pop
cmp
sub
ficompl
mov
cwtl
sbb
and
xor
or
lahf
in
int3
xchg
mov
call
leave
sbb
cmpsl
rcl
fadds
sub
mov
sahf
dec
fninit
mov
std
addl
addr16
jle
dec
sbb
sbb
dec
cmp
xchg
aam
dec
jno
aad
aad
popf
pop
sti
pop
cwtl
aas
or
in
out
or
dec
stc
xor
sarl
lock
ljmp
in
fwait
sahf
popf
pop
stc
fmuls
xchg
lds
frstor
or
jl
fcmove
or
das
push
sti
lods
faddp
and
pop
cmpsl
adc
scas
dec
xchg
add
stc
inc
mov
test
rolb
inc
inc
enter
xchg
mov
pop
push
jbe
inc
outsl
jl
movsb
gs
aaa
les
mov
ljmp
mov
aad
gs
pop
aas
mov
jecxz
pop
add
jl
lret
mov
out
fstpl
adc
dec
shrb
outsl
lods
enter
dec
dec
int
pop
ds
aad
push
std
shr
inc
ret
xchg
cmpsb
aad
ljmp
mov
add
fyl2xp1
xor
pushf
dec
push
nop
lret
mov
lret
loopne
jb
fstpt
fcomi
mov
clc
test
adcb
out
pop
gs
mov
sbb
in
aas
cmc
jmp
xchg
icebp
call
push
inc
pop
into
ja
sbb
xor
dec
mov
fstpt
mov
jns
or
inc
pop
das
mov
or
mov
inc
cmp
test
push
xor
push
nop
pop
roll
sub
or
je
mov
cmp
int3
scas
in
sub
xchg
inc
mov
enter
sbb
int3
jae
inc
push
dec
mov
xor
popf
xlat
sbb
sarb
xor
xchg
fcom
or
push
in
stos
inc
aad
xchg
mov
add
mov
int
inc
inc
inc
xchg
xchg
sbb
push
xchg
mov
mov
push
dec
sahf
push
das
lret
adc
int3
out
or
xchg
or
dec
sbbb
in
outsb
mov
pop
fldt
sbb
into
adc
lret
sbb
fimull
out
cmp
adc
cwtl
dec
xchg
fmulp
dec
dec
aam
sbb
mov
outsl
insb
ficoml
popf
fdivr
shlb
inc
push
jge
sub
aas
pop
jl
push
scas
add
enter
dec
jno
dec
cmp
fcoml
pop
mov
scas
add
dec
out
sbb
test
or
inc
js
nop
ficomps
fdivrl
xchg
jmp
jno
push
enter
int
mov
inc
ficompl
sub
lret
shlb
shlb
jge
movsb
aam
int3
stos
sub
xlat
push
adc
xchg
shl
pop
push
sahf
adc
cmpsb
push
rcl
xchg
mov
mov
inc
add
pop
mov
cmpsl
cltd
mov
and
in
pop
and
aas
out
jbe
sarl
pusha
dec
sahf
xchg
loop
xchg
lret
mov
sbb
sbb
iret
inc
out
aas
dec
jl
jns
les
fcmovnb
jge
arpl
jo
lret
pop
sar
add
bound
adc
pop
mov
outsl
inc
mov
call
stc
add
inc
mov
jp
or
push
inc
jge
insb
jle
aam
hlt
jmp
dec
lahf
loopne
jbe
push
add
mov
xchg
cli
loope
lret
add
call
mov
xlat
inc
call
sti
iret
mov
sub
ret
cs
jae
stos
pop
shrb
fstpl
pop
imul
add
cli
pop
push
jb
mov
cs
fbld
add
mov
sub
add
les
lret
ljmp
sub
daa
in
test
push
cwtl
dec
sahf
or
lock
mov
push
sahf
dec
into
rclb
ror
dec
sub
pushf
xlat
pushf
dec
mov
mov
cmp
aam
push
cmpsl
sbb
cmp
fmul
ficompl
xchg
adc
je
rolb
xchg
and
shlb
scas
xor
cli
adc
fs
stc
jle
sbb
ret
ret
adc
mov
movsl
insl
aas
mov
lock
push
adc
out
fnstcw
ds
fcomps
ja
insl
movsl
pop
jmp
test
out
sbbb
push
sbb
xlat
repz
enter
loopne
and
mov
fsubs
hlt
push
pop
mov
pusha
out
ja
shlb
pop
ret
jg
movsl
inc
testl
mov
test
aad
add
mov
mov
adc
xchg
sub
push
and
ja
dec
mov
or
xor
mov
fcoml
push
ffree
pop
mov
pop
pop
lods
jl
stc
push
nop
pop
sbb
mov
xlat
cwtl
mov
fidivrs
or
fcoml
js
test
xchg
icebp
rcr
jno
pop
cwtl
loop
or
dec
inc
push
dec
inc
dec
lds
mov
mov
into
fistpl
xor
fmuls
iret
xchg
dec
rcl
pop
mov
movsl
lods
xlat
sahf
sub
push
mov
xlat
les
iret
int3
lds
inc
fsub
aam
stc
and
dec
sbb
out
into
push
movswl
dec
push
stc
or
dec
jmp
cmp
xor
int
mov
adc
rcr
mov
cmp
in
jne
fcmovu
js
dec
hlt
push
fcmovu
pop
shll
ret
stc
add
out
bound
repz
pop
jge
mov
ret
pop
xchg
ds
ja
leave
xchg
rcll
sbb
imul
pushf
out
jne
aas
push
clc
filds
iret
rclb
scas
and
stos
mov
ljmp
rorb
xchg
test
out
dec
push
call
dec
adc
mov
push
pop
imul
int
push
rclb
rcrb
fcmovnb
push
test
add
inc
mov
mov
bound
adc
dec
leave
subb
into
data16
dec
pop
mov
sahf
inc
and
dec
pop
jo
gs
hlt
jge
inc
fsubl
pop
call
inc
aam
cmp
rclb
ror
xchg
jns
cmp
rcrb
es
lret
aas
int
sahf
mov
and
push
jl
fcmovbe
sub
add
push
fdivs
lea
data16
addb
mov
pop
inc
jle
jmp
cmp
not
xchg
sub
mov
std
scas
dec
sbb
dec
pop
repnz
inc
mov
into
mov
lret
dec
mov
es
push
xor
mov
inc
inc
fsubrs
jmp
dec
inc
push
cmp
int3
std
loope
nop
sbbb
out
dec
pop
mov
push
leave
adc
stos
add
jb
setle
daa
popa
pop
dec
mov
mov
into
cmc
push
aam
nop
xor
ljmp
xor
inc
mov
les
insl
inc
sahf
jge
inc
jne
ret
inc
fadds
outsb
into
inc
adcb
inc
insb
orb
inc
fdivl
cmpl
mov
cmp
push
std
fsubp
jns
push
test
add
cmc
mov
jno
and
inc
sbb
fsubp
mov
cmpsb
mov
sahf
stos
dec
pop
jns
pop
sub
and
jns
xlat
xor
dec
pop
hlt
iret
dec
out
fcomps
iret
mov
testb
dec
inc
bound
mov
enter
pop
push
push
shlb
ror
stc
sbb
xlat
mov
sahf
hlt
xchg
adc
test
jae
into
push
inc
dec
mov
jbe
ds
jg
push
push
cld
les
mov
add
arpl
dec
dec
int
inc
cli
add
inc
sbb
push
fsts
notl
fsts
ret
cwtl
rcrb
mov
mov
inc
xchg
push
mov
push
pop
ficompl
shrb
dec
xchg
faddp
xchg
insb
adc
fnstenv
ja
xor
sub
cld
xorl
xchg
popf
rcr
dec
xchg
inc
sbb
out
icebp
jle
es
push
in
pop
jp
test
add
int3
fnstsw
test
popa
sbbb
pop
imul
leave
xchg
test
fsts
dec
inc
enter
nop
pop
mov
test
dec
mov
inc
roll
push
mov
inc
dec
sub
pop
xchg
lret
xlat
sarb
push
xchg
into
dec
fildll
jne
lret
mov
jl
jmp
dec
andb
cltd
sub
int3
push
pop
inc
dec
stc
dec
dec
call
nop
xor
ret
nop
inc
ret
pusha
push
test
mov
cwtl
int3
jle
cwtl
sbb
mov
push
jns
int
sahf
pop
mov
add
sbb
dec
inc
cmpsb
jl
add
inc
jns
dec
mov
lahf
int
pop
aas
mov
scas
lcall
aad
std
push
inc
sarl
out
rclb
movsb
push
inc
jl
loopne
adc
jae
testl
gs
pop
call
arpl
in
dec
xor
dec
orb
mov
pushf
sbb
or
inc
dec
aam
sbb
outsb
mov
fdivrs
cld
jp
mov
cltd
lret
inc
add
xchg
push
xlat
adc
mov
dec
ror
cmc
repnz
pop
jge
sbb
mov
ds
test
xchg
jae
push
mov
push
pop
ret
sub
int3
scas
inc
cmpsl
mov
fmul
les
sbb
test
hlt
int3
out
dec
push
push
dec
leave
in
ffree
fdivl
data16
les
rcll
imul
inc
or
int3
stc
sub
jge
add
lcall
scas
lret
into
pop
or
es
rcrl
fidivrl
movsb
add
xor
push
push
jbe
dec
xchg
insb
rclb
outsb
mov
cmp
popf
xorl
enter
insl
cs
xchg
push
mov
cmp
inc
mov
pop
shlb
sbbb
shll
mov
scas
cmpsl
ficomps
cld
into
lds
pop
insb
fcmovbe
pop
cltd
inc
xchg
jbe
call
aad
cmpsl
fildl
cltd
or
add
mov
ret
mov
scas
jns
inc
into
call
push
mov
sub
push
sbb
xlat
fldenv
mov
add
shr
mov
mov
push
ds
pushf
fstpl
push
ret
lods
inc
mov
adc
inc
jne
push
xor
sbb
cmp
dec
sub
scas
dec
xchg
popa
adc
dec
cmp
fiaddl
dec
lret
cmp
fnstsw
xchg
xlat
fstp
sbb
orl
js
les
pop
pop
outsl
mov
jbe
hlt
das
xlat
insl
aad
rclb
out
mov
sbb
fstps
and
pop
mov
outsl
aad
movsl
leave
add
outsl
xor
cmp
loopne
inc
fcmove
pop
stc
in
dec
andl
inc
inc
push
ror
in
jecxz
and
inc
icebp
int3
jns
pop
aad
mov
cmp
int
sub
mov
pop
stc
sub
std
inc
mov
inc
fldt
sub
jo
cmp
or
cmp
lds
mov
pop
mov
aaa
push
cmp
dec
jmp
aad
xor
dec
daa
cmpsb
inc
add
ss
inc
xchg
push
into
push
mov
push
inc
ds
lods
mov
sahf
lret
xchg
sahf
mov
pushf
stc
inc
aas
mov
xchg
adc
es
mov
pop
ds
pop
sub
rcr
rolb
inc
mov
mov
fistpl
popf
add
pop
fs
push
cltd
ret
inc
fidivrl
push
dec
push
das
jl
cmpsb
enter
fsub
adc
ret
jp
cmc
inc
pop
sbb
pop
rol
ret
fistpl
pop
les
aad
imul
xlat
lret
cmpsb
fmuls
cmp
ja
leave
mov
dec
push
ja
xchg
pop
out
xchg
ret
in
testb
push
dec
fcoms
clc
in
xor
into
fldcw
jle
test
ljmp
mov
jne
dec
fisubrs
test
mov
add
pop
insb
pop
sahf
ret
lret
mov
outsl
mull
push
ret
daa
mov
leave
sbb
fnstenv
fmuls
mov
pop
jae
mov
adc
int3
faddl
test
in
out
int3
shrl
test
sbbl
pop
and
fstps
aas
dec
push
xchg
jmp
inc
fmulp
jb
mov
fldenv
movsl
clc
mov
addb
ret
dec
push
pop
pop
hlt
pushf
pop
and
pop
cld
fadd
int
mov
test
ret
cmp
outsl
insl
pop
popf
mov
mov
adc
repnz
mov
xchg
rorb
add
lret
int
dec
jge
cmp
cmovg
lret
dec
jl
cld
imul
mov
dec
jle
xor
inc
in
cmp
fcmovne
fistl
aad
xor
ret
add
push
adc
add
mov
fsqrt
jbe
fwait
jle
pop
fsts
sub
outsb
lds
hlt
pop
dec
cmp
pop
mov
and
ja
ret
pop
imul
aad
andl
pop
shll
ror
sahf
ljmp
lahf
mov
lods
sahf
scas
mov
adc
shll
clc
mov
adc
test
out
inc
lds
js
inc
rcl
cltd
mov
ret
add
in
pop
cmp
sub
xchg
cld
pop
sub
add
pushf
jmp
ret
daa
dec
dec
mov
and
push
out
inc
push
mov
cltd
rcr
or
jp
rcr
cs
jo
aas
cmp
lds
push
sarl
iret
pop
sbb
dec
mov
mov
xor
mov
pop
mov
jno
inc
xchg
mov
iret
push
fwait
outsl
mov
ds
pop
scas
movsl
jae
adc
cltd
pop
lret
mov
adc
rol
faddp
fisubrl
jecxz
fldt
loopne
enter
nop
iret
je
pop
mov
ds
daa
pop
jo
movsb
sbb
sti
iret
fistpl
repnz
cmpsl
xchg
inc
jle
fnstsw
sbb
xchg
inc
cltd
jbe
sub
ds
dec
fsubrs
std
mov
sbb
int3
shl
lret
cmp
mov
inc
cmpsl
out
sbb
repz
and
mov
ret
dec
int3
ds
xorl
push
jge
gs
pop
xchg
cmp
mov
insb
lods
adc
int3
pushf
int3
fcmove
fld
loop
lock
and
pushf
xchg
shll
add
push
cmp
fs
cld
mov
pop
mov
pop
xor
fs
outsb
xor
xchg
iret
jl
ret
mov
pop
rorl
push
mov
dec
xchg
das
mov
dec
sarb
aad
xchg
fsubl
mov
mov
inc
fsubrs
push
fiaddl
mov
aam
xchg
cmp
movsb
lret
inc
sbb
test
xchg
insl
pusha
jle
orb
jne
or
cmc
jl
mov
mov
cmpsb
adc
fwait
into
jmp
jl
inc
jle
and
or
and
fld
iret
dec
stc
ja
lret
jmp
push
in
pop
cmp
pushf
push
dec
gs
aad
push
jle
scas
call
jae
push
pop
adc
jge
roll
cs
pop
into
minps
push
pop
fsubrs
mov
xchg
mov
pop
pop
clc
xor
mov
cmpsb
sbb
inc
adc
stos
ljmp
aaa
mov
inc
cmp
mov
fwait
aas
aad
inc
or
ljmp
cld
adcb
adc
movl
shrb
es
push
enter
add
push
leave
fcomps
pop
fdivs
push
sarb
lret
std
mov
loope
sbb
and
pop
fcoms
xor
into
dec
inc
aam
int
xor
clc
int
fisubrs
mov
and
xor
xchg
loop
mov
mov
mov
xor
test
pop
mov
fdivr
xchg
int3
int3
inc
lret
jl
mull
imul
mov
sbb
ret
cltd
cmp
leave
ds
jecxz
pop
aad
xchg
std
stos
es
enter
dec
or
inc
xchg
out
inc
mov
aas
mov
mov
mov
mov
dec
push
sahf
pushf
dec
xchg
mov
lret
mov
pop
decl
sub
push
add
inc
inc
mov
negb
iret
adc
pushf
ret
pop
ret
stos
mov
in
int
in
dec
fs
in
repnz
std
xchg
rcrl
fadd
and
std
ret
mov
adc
leave
add
mov
in
mov
lods
orl
rolb
mov
hlt
xchg
in
push
mov
inc
call
push
mov
lods
call
imul
sub
push
mov
ljmp
test
xchg
les
movsb
push
in
sub
mov
aas
faddl
test
adc
shlb
pop
cmp
pop
xchg
in
xchg
dec
mov
jp
add
inc
xlat
sub
sar
dec
dec
xor
popf
int3
inc
pushf
test
jmp
pop
mov
cld
in
aam
cld
dec
out
enter
or
cmc
pop
ljmp
jge
in
mov
fnstsw
cmp
movsb
popf
stc
mov
movsb
push
test
lds
mov
lock
or
inc
xchg
sbb
sbb
rorb
test
dec
mov
cs
mov
fisubrs
test
sub
pop
repnz
mov
sbb
xchg
jns
lods
ret
dec
lret
mov
pop
and
adc
cmp
sahf
add
adc
cwtl
cmpsb
inc
leave
int3
xor
pushf
push
sub
jne
outsl
inc
dec
cmpb
jecxz
mov
inc
sahf
xor
lahf
ret
hlt
ss
sti
int
xchg
into
inc
mov
jo
or
mov
inc
cmp
aas
dec
and
xchg
sbb
dec
ficoms
sahf
je
sub
inc
mov
or
fiaddl
test
cmp
fsubr
std
adc
and
pop
sti
push
pop
cwtl
popa
dec
lds
rolb
xchg
into
mov
inc
xchg
cmp
outsb
jge
fcomps
loop
dec
icebp
iret
les
stos
roll
enter
iret
xchg
jl
pop
imul
fcomi
repz
rorl
inc
cwtl
jmp
ds
sub
inc
add
fcompl
inc
or
aad
pop
mov
sahf
sub
mov
jg
insl
cmp
inc
sarb
aas
call
ret
test
cmp
aad
jmp
mov
jle
jmp
rcrl
fcoms
aam
dec
negl
inc
jl
pushf
xchg
int3
jne
push
dec
repz
ret
hlt
jp
rcll
pop
mov
mov
subb
push
dec
repnz
push
pushf
adc
test
xchg
into
add
sti
cltd
sub
push
pop
or
iret
pop
fisubs
jl
xchg
repz
inc
pop
into
dec
cmp
inc
out
inc
dec
mov
ss
sahf
xchg
and
mov
out
xchg
fwait
ret
cs
cmpsb
pop
cmp
lds
scas
inc
outsl
test
ret
fisubrs
test
push
mov
rcrb
adc
popf
les
test
cmp
lret
xor
inc
mov
leave
popa
ret
aas
xor
cmp
fistl
mov
or
fchs
lcall
cmp
cmp
xchg
test
jns
jecxz
push
negb
decb
out
leave
into
push
pusha
jns
ds
inc
ret
and
les
fcom
pushf
push
ljmp
ret
lret
int
fcompl
es
fadds
adc
xor
jbe
pop
dec
pop
push
sbb
jo
mov
or
mov
mov
or
scas
insb
repz
fistl
sub
xor
mov
arpl
arpl
ror
movsb
pop
inc
inc
mov
sub
lret
mov
fmul
icebp
mov
aad
fcmovb
fcmovnbe
jle
inc
mov
pop
stos
dec
stc
into
lret
mov
das
aad
adc
popf
inc
enter
loopne
add
andb
bound
iret
std
jmp
xlat
aam
sti
rorl
movl
into
lret
inc
push
shl
ja
call
pop
rcll
rorl
test
inc
sbb
pxor
xchg
dec
push
pop
std
orb
cmp
aas
push
rcl
movsl
lret
into
fsubr
vpunpckhbw
cwtl
push
shrb
mov
pop
xchg
xlat
pop
mov
ficoms
popl
enter
push
outsl
int3
inc
sub
pop
and
xlat
push
dec
fimuls
push
jb
push
scas
pop
call
cmp
imul
or
std
hlt
cwtl
lahf
mov
sbb
into
repz
aam
adc
mov
jp
pop
pushf
movsl
ret
jb
jmp
mull
pop
aam
xor
dec
xchg
fdivrl
push
shl
adc
dec
rol
lret
cmc
cmp
aam
lret
cmpb
mov
dec
xchg
dec
out
push
outsb
adc
loop
add
push
jle
into
add
movsb
inc
movsl
cmp
int
pop
mov
xor
push
push
fstpt
mov
ror
rorl
dec
sub
jge
js
rcll
mov
pop
aaa
dec
sahf
dec
popa
nop
and
jecxz
adc
lods
scas
sub
jecxz
sar
fcomps
push
cmp
lret
cld
adc
aad
rorl
cmpsb
add
lds
nop
rorb
pusha
lahf
xchg
push
xor
loop
dec
push
insl
ret
ss
sahf
lock
aam
rcr
shlb
cmp
ret
lock
aam
inc
sub
int
mov
pop
out
mov
fsts
xchg
xchg
ds
idiv
arpl
aad
lods
pop
std
dec
xor
sub
sub
dec
ja
push
sti
sqrtps
rcrl
out
adc
jmp
ret
pop
push
ret
nop
stos
pop
mov
enter
fisttps
lret
pop
inc
jle
fsubs
push
mov
jmp
pop
int3
xor
push
clc
lock
lret
into
mov
jo
jmp
rcl
test
sub
dec
add
pop
pop
fisttpl
out
mov
pop
jge
xchg
rclb
nop
mov
jae
cmp
push
sub
dec
pop
clc
cmpb
cmp
push
sarl
pop
sahf
sub
xchg
sbbl
pop
into
add
add
jg
nop
fimuls
xor
out
hlt
push
or
imul
and
jae
push
mov
xchg
push
mov
mov
rcl
push
adc
in
sub
mov
dec
inc
pushf
lcall
xor
xchg
loop
cmpsb
dec
rcrb
mov
sti
adc
rcrl
mov
hlt
xchg
rorb
flds
stc
jmp
lcall
or
popa
or
mov
ds
call
sbb
cmp
xchg
inc
sub
sarl
adc
orl
xchg
into
or
mov
cmp
data16
int
push
adc
stos
adc
aad
adc
popf
inc
aam
out
mov
int
pop
pop
and
dec
aas
inc
stos
int
mov
clc
cltd
int3
shl
or
push
pop
rcrb
jbe
jge
adc
pop
nop
lahf
in
imul
faddp
mov
xchg
pop
push
clc
push
lret
push
mov
cmp
xchg
jns
cwtl
fwait
mov
mov
push
inc
leave
ror
loopne
pop
adc
dec
ficoms
mov
inc
rol
fstpt
sbbb
mov
pop
jle
call
fucomi
sbb
das
pop
sub
adc
lret
pop
ret
jmp
or
into
xchg
sub
int3
and
jne
jbe
xlat
loopne
ljmp
cs
flds
xor
dec
mov
sub
push
jno
aas
jg
js
leave
sti
sbbb
sub
or
ds
out
aad
mov
test
std
out
dec
mov
int3
xchg
rorl
inc
loop
pusha
dec
cmp
fdivr
mov
dec
mov
ds
ds
ret
pop
outsb
aad
adc
dec
cmp
jmp
push
cmpsb
push
into
cwtl
lock
out
fdiv
ret
inc
aad
into
xchg
pop
jnp
mov
ret
ljmp
dec
pushf
pop
sub
loop
shlb
add
xor
inc
pushf
movsl
add
pop
int
dec
pop
jbe
daa
inc
leave
inc
lret
cmpb
pop
rcr
ds
mov
dec
repnz
xor
movsl
and
xchg
test
dec
add
ljmp
sbb
insl
mov
cli
xchg
out
imul
hlt
ja
push
stos
test
lcall
fld
and
loope
mov
rclb
inc
xchg
adc
jl
incb
cmp
dec
stos
pop
leave
movsl
xor
cld
fabs
cld
test
dec
rcrl
mov
dec
push
mov
ret
sub
ficomps
pop
das
sub
pop
fmulp
arpl
es
shrb
adc
dec
mov
rorl
int
popa
ds
aam
sub
iret
sbb
leave
rcrb
enter
mov
pop
inc
lret
clc
mov
in
add
insl
orb
fnstsw
test
decl
les
add
ljmp
dec
dec
minps
mov
fdiv
cmpsl
pop
sahf
xor
repz
int
cwtl
pop
mov
ss
add
push
sahf
cmpsl
ret
shrl
movsl
inc
les
lds
popf
inc
lods
lds
pushf
inc
jmp
pop
xchg
in
repnz
inc
jle
aad
adc
xchg
or
push
and
ljmp
push
mov
pop
inc
jne
int3
rorb
ja
cmp
test
dec
inc
sub
pop
imul
ret
int
imul
dec
push
lock
inc
int
mov
or
jns
sbb
addr16
rcr
mov
shll
mov
mov
aad
pop
push
pop
mov
scas
cmc
lahf
test
jb
sarb
mov
push
into
ja
cmp
dec
out
jo
hlt
inc
pop
pop
jb
mov
xchg
int3
mov
mov
stc
je
inc
pop
jl
jecxz
into
xchg
cmp
xchg
arpl
inc
pop
pop
fcmovne
xchg
mov
mov
ret
dec
jge
push
or
add
fcoml
adc
decl
pop
adc
gs
popa
mov
jecxz
dec
pop
sub
push
out
adc
fbld
rclb
push
dec
cmp
mov
fistl
insb
pushf
mov
and
gs
inc
aam
arpl
push
das
ljmp
fcmovu
rcr
xor
aam
jae
sahf
loopne
and
ret
enter
shll
in
test
push
push
nop
inc
jmp
clc
xlat
xchg
mov
jae
mov
jb
pop
fsubs
or
jmp
fmull
mov
clc
stc
inc
leave
sub
aas
iret
and
les
out
int
dec
xchg
icebp
pop
mov
sbb
dec
dec
sahf
stos
xor
sub
lods
dec
into
add
repnz
push
fcoms
jge
into
dec
add
fxch
fadd
stos
dec
sbb
fdivl
cmp
push
in
jae
and
ja
lret
mov
dec
mov
dec
lret
aad
push
xlat
cmp
add
imul
aad
sub
cli
inc
xlat
adc
enter
xchg
into
push
iret
push
mov
mov
adc
loope
fistl
sbb
lret
lcall
push
fcom
cmpsb
dec
sahf
test
mov
inc
mov
jl
cwtl
bound
mov
push
ret
adcl
addl
out
fcmovnb
dec
into
pushf
cmpsl
lret
lret
mov
cmpsb
rclb
mov
sarb
clc
enter
int3
jbe
mov
or
aad
jmp
inc
mov
push
pop
sarl
or
mov
pop
lahf
outsb
aad
jl
addr16
je
xlat
fcomps
iret
xchg
aas
push
mov
sbb
clc
mov
into
pop
call
iret
push
xchg
imul
cmp
shlb
cmp
leave
jl
into
pushf
cmp
and
and
push
sbb
mov
push
aad
jg,pt
inc
push
or
aad
adc
into
pusha
fsubs
mov
lds
mov
es
pop
xchg
into
ret
cmp
out
push
lret
pop
and
lret
mov
lds
dec
push
int3
add
dec
or
jmp
sahf
and
pop
mov
mov
dec
rcr
fistpll
out
movsl
shlb
sbb
loop
dec
push
pop
bound
pop
mov
shl
shlb
mov
leave
jge
pop
es
add
pushf
or
lret
mov
jmp
outsl
int3
sahf
pop
xchg
pop
cmpsl
dec
push
fdivl
rorl
pushf
dec
cmp
out
pop
iret
add
cs
mov
dec
sti
cwtl
sub
fcomp
int3
dec
leave
call
lcall
lds
xor
aas
pop
push
pop
ds
stos
adcb
push
clc
sbb
dec
mov
fcoml
enter
popa
notl
fcomp
fwait
sub
xor
sbb
lahf
lcall
mov
xor
rorb
les
push
jg
pop
cli
repnz
mov
ret
fsubp
sahf
fmul
jmp
dec
movsl
mov
roll
ret
sub
inc
sub
push
xlat
test
mov
scas
pop
scas
packsswb
in
push
mov
mov
scas
adc
aas
ficoml
add
and
add
push
mov
xchg
ret
rolb
aam
aas
jb
mov
lret
xchg
xchg
aas
xchg
sub
push
xchg
pushf
jne
xor
inc
inc
and
add
mov
adc
clc
push
into
xor
cltd
inc
out
pop
inc
xor
pop
int
jge
cmp
mov
int
inc
sbb
jb
inc
shrb
enter
xchg
mull
faddl
pop
xor
mov
out
outsl
inc
dec
pop
stc
cld
cmp
out
cs
popa
push
pop
mov
lods
mov
roll
push
bndstx
xor
inc
xlat
dec
ds
inc
lahf
jns
dec
repz
rcl
jmp
enter
aas
sub
push
in
scas
mov
aam
inc
push
fstpl
cmp
xor
fcmovu
loope
xchg
imul
cmc
int3
mov
pop
jle
sub
xor
xchg
sbb
dec
scas
lods
mov
movsl
aad
in
fcmovne
and
xor
dec
cli
sbb
sbb
mov
cmpsb
fstp
xchg
cmp
dec
nop
fbld
ds
ds
xchg
dec
dec
push
pop
mov
dec
push
dec
push
test
popa
popf
into
popa
inc
mov
imulb
mov
xor
hlt
sub
mov
push
mov
mov
inc
sahf
test
notb
repnz
stc
dec
pop
mov
inc
loopne
sbb
jne
fiaddl
repnz
xor
xlat
pop
test
xchg
sub
xchg
int3
rcrb
push
dec
mov
int
mov
fstps
mov
pop
loopne
std
shrl
ja
xchg
mov
aas
mov
cmpsl
insb
ret
test
shll
xchg
cmc
mov
ret
fcomp
or
test
dec
xchg
stos
inc
mov
mov
stc
repz
adcl
fcmove
push
dec
adc
fsubl
mov
lcall
sahf
mov
xchg
mov
in
sbb
dec
fildl
movsl
iret
push
xchg
pop
jge
idivb
cmp
nop
jmp
xor
adc
gs
stc
pop
push
push
stos
int3
jbe
mov
rorb
gs
dec
jecxz
add
push
fnstsw
cmpsl
or
inc
dec
pop
mov
sub
inc
sahf
cmp
cmpsb
xchg
push
adc
movsl
out
dec
pop
in
test
movb
pop
push
ror
mov
add
clc
jge
mov
jbe
and
pop
fmulp
outsl
hlt
push
add
push
fdivrs
in
dec
xlat
hlt
and
dec
fistl
arpl
dec
int3
mov
test
call
pop
inc
loope
dec
lret
stos
sub
lahf
aad
pop
int3
lret
pop
jne
lret
pop
fisubs
cmpsl
mov
xchg
jle
loope
pop
cmp
mov
mov
sti
popa
dec
push
ret
movsl
fsubs
add
into
dec
jecxz
cmc
push
cwtl
jmp
lret
jl
mov
push
lds
add
fisubrs
sahf
push
into
aas
add
xchg
dec
sub
pop
mov
rcll
pop
ret
mov
jg
rorb
xor
test
hlt
mov
repnz
aas
pushf
dec
add
stc
and
push
pushf
mov
xlat
stc
imul
int3
mov
sarb
insl
push
adc
mov
std
ljmp
gs
in
inc
push
inc
push
mov
push
jne
fcmovu
add
dec
and
xchg
aas
push
hlt
ficoms
test
and
test
dec
sbb
mov
in
loopne
xchg
add
nop
into
inc
and
dec
xchg
xchg
xchg
dec
into
push
shll
loope
cs
aad
dec
push
pop
pushf
hlt
mov
fcoms
aad
cs
push
subb
nop
xor
fimuls
cmc
hlt
aad
inc
pop
add
pop
sub
push
mov
aam
pop
sarl
inc
inc
mov
adc
pop
rolb
xor
sbb
aas
fst
pop
push
pop
sti
out
orb
rcrb
mov
arpl
mov
loop
dec
dec
mov
pusha
in
call
in
pop
add
rorb
xchg
xchg
add
pop
adc
cmpsb
pop
mov
sub
inc
sub
aad
pop
gs
adc
mov
pop
fisttpll
lret
out
inc
xchg
mov
inc
dec
lahf
dec
push
pushf
shl
inc
pop
cmp
mov
mov
fsubs
push
shrl
fisttpll
imul
pop
pusha
inc
lods
or
fnsave
jo
aam
cltd
pop
mov
mov
sbb
pushf
mov
outsl
cltd
lret
in
sub
sbb
xchg
pusha
dec
xor
leave
pop
bnd
xchg
int3
push
inc
mov
hlt
push
clc
push
pop
sbb
mov
cltd
movsb
cmp
mov
es
xchg
sub
mov
sub
mov
stos
or
sti
mov
jle
cs
stos
enter
ficoml
push
pop
adc
dec
push
int3
rol
push
mov
mov
dec
mov
aam
dec
es
aad
mov
xchg
leave
inc
push
add
dec
dec
int
add
cmp
mov
mov
in
mov
dec
enter
sub
hlt
mov
int3
aas
stos
rorb
shrl
cmpb
test
sbb
inc
stos
push
iret
mov
push
jle
or
cmp
cmp
faddl
jmp
jmp
dec
int
into
inc
inc
stc
insl
mov
fstpl
and
sar
sub
jge
push
ficompl
es
ljmp
ret
mov
repz
sahf
jmp
shl
aam
mov
dec
cwtl
pop
sahf
mov
repnz
rcll
xchg
aad
pop
pop
inc
jge
cmpsb
mov
sub
dec
ret
xor
mov
jno
jmp
js
adc
push
and
lret
fldenv
dec
xchg
mov
clc
dec
incl
dec
jg
pop
mov
rorb
add
cmp
pop
pop
pushf
pop
inc
leave
or
repnz
sti
pop
int3
test
stc
inc
in
adc
scas
iret
int3
in
pop
imull
rcll
leave
cwtl
jle
cmpsb
lcall
fdiv
shlb
iret
and
pop
leave
stos
daa
mov
es
daa
fcomps
rorl
inc
ret
aam
pop
xchg
cmp
jle
sbb
sarl
push
lock
pop
xor
rcrl
cmp
mov
dec
push
mov
adc
mov
leave
clc
mov
popa
shrb
push
fcmovbe
mov
data16
and
dec
cmp
jl
dec
out
inc
mov
add
xor
lds
int3
dec
int
fstps
mov
push
ss
popa
pop
push
adcb
das
xor
jmp
push
sbb
iret
push
mov
mov
pop
mov
cwtl
jmp
fnstsw
adc
pop
push
push
and
push
mov
fdivp
aad
test
lds
and
jns
inc
push
ret
mov
fcmovu
ror
das
sub
dec
and
rol
adc
mov
ds
jns
jl
icebp
mov
push
jle
dec
pop
jne
clc
fdivs
dec
fidivl
cwtl
mov
or
xor
and
dec
or
add
pop
cmp
push
sahf
hlt
pushf
pop
mov
push
dec
mov
mov
sub
fcmovb
push
out
inc
dec
push
int3
lcall
cmp
push
rorl
mov
ret
lcall
cwtl
out
fildl
popl
repz
push
call
push
add
cwtl
mov
ret
jge
pop
xor
pop
pop
std
push
aad
xchg
xchg
int3
aad
inc
scas
push
cmpsb
insb
xorb
add
aad
int
add
push
jg
out
inc
mov
adc
dec
scas
cmp
sbb
pop
stos
lahf
iret
outsb
testb
stc
inc
aas
out
cs
mov
fdivs
push
enter
dec
aas
js
call
leave
pop
mov
push
sbb
dec
nop
fstpl
cmp
lret
push
cmpsl
loope
pop
imul
hlt
sbb
cwtl
fistl
inc
xchg
inc
ret
push
stos
push
ds
in
leave
dec
cmp
aad
pop
mov
cwtl
dec
pop
mov
repnz
fadd
mov
push
int3
mov
mov
aad
jl
popf
push
gs
lret
add
out
sbb
out
cld
push
lret
pushf
xchg
fs
fstl
xor
adc
pop
fisubl
push
shll
mov
dec
int3
jg
aam
pop
rorl
iret
pop
imul
pop
iret
sti
xchg
ficompl
fdivl
cld
inc
add
dec
leave
ds
and
enter
aam
dec
xor
inc
dec
xor
dec
in
cmp
add
lret
cwtl
pusha
pop
hlt
or
rol
jb
and
fistl
pop
xor
push
cld
push
in
pop
mov
push
outsl
bound
aad
leave
lcall
sub
dec
loop
push
insb
or
aad
dec
stc
int3
push
pop
stos
push
clc
cmpsl
inc
jmp
jge
negl
cli
ret
or
into
lods
mov
in
leave
dec
clc
push
dec
pop
pop
fistpl
push
xchg
mov
or
mov
pop
xor
or
test
mov
out
adc
sahf
cltd
mov
loope
jns
rclb
xchg
xlat
inc
push
pop
xor
adc
push
xchg
pop
outsb
add
cmpsb
inc
mov
repnz
lret
pop
stos
sbb
lret
or
or
mov
rorl
outsl
aad
test
sub
pop
icebp
pop
fimull
mov
xor
into
dec
mov
push
dec
xchg
xlat
mov
mov
sub
xchg
leave
push
dec
inc
jle
xchg
xchg
sbb
adc
mov
call
and
stc
sbb
ds
inc
mov
mov
inc
jae
lds
movsl
or
pop
int3
sbb
mov
rorb
inc
ljmp
push
inc
test
jl
in
popa
outsb
fiaddl
jle
mov
ret
dec
rcll
xlat
ja
dec
test
mov
xlat
stc
mov
enter
mov
fdivr
cmp
mov
or
int
in
pushf
mov
cmp
inc
pop
cld
rol
int
jle
es
das
inc
mov
imul
push
mov
lret
iret
push
ret
ljmp
adc
mov
and
add
loope
filds
data16
inc
mov
into
mov
mov
dec
fcmovb
xchg
iret
pop
test
leave
cwtl
lcall
cmp
fcomps
int3
ret
lcall
fnstcw
mov
inc
enter
fcmovnbe
add
fimull
lret
sbb
and
mov
sbb
or
orb
lds
jge
aad
mov
or
movb
push
pop
lahf
jo
mov
outsb
test
dec
inc
xchg
mov
jmp
nop
lds
ret
ror
dec
mov
dec
aam
inc
mov
faddp
jbe
imul
mov
fisubl
test
and
inc
xlat
push
xchg
adc
adc
loope
sbb
add
aad
inc
mov
push
sbb
sub
xchg
mov
ret
test
ret
dec
inc
ds
inc
daa
or
mov
clc
stos
roll
mov
enter
inc
into
mov
clc
mov
insb
loopne
dec
pop
ljmp
mov
das
enter
stos
dec
insl
cltd
inc
pop
out
mov
daa
sbb
inc
dec
inc
aad
movsb
lret
fptan
jno
inc
pop
adc
xchg
ret
mov
and
dec
dec
xchg
fdivrs
mov
and
push
fisubl
push
mov
cs
pop
int
cld
pushf
xchg
repnz
dec
pop
pop
rcl
jl
mov
sub
sti
or
pop
ffree
cs
cmp
pop
cli
paddusb
push
test
cmc
push
mov
dec
pop
ja
dec
popa
repnz
dec
xor
sqrtps
fistpl
inc
push
popf
test
mov
adc
cwtl
and
mov
ret
into
sti
dec
sahf
xchg
addr16
xor
add
pop
or
mov
fldt
lret
nop
mov
out
pop
dec
fcomp
lret
fwait
push
mov
push
push
into
or
ljmp
sbb
or
push
jl
dec
pop
sbb
data16
out
sub
push
mov
aas
dec
subb
rclb
hlt
gs
lret
iret
xchg
lds
in
aad
pop
mov
clc
movsb
mov
mov
jecxz
pop
jge
pop
in
inc
dec
sti
sti
sub
adc
xchg
pop
das
mov
add
dec
mov
dec
pop
fmulp
mov
testb
enter
mov
xchg
pop
adc
mov
and
xor
loopne
add
mov
ja
pop
lock
jle
adcb
or
pop
ret
pushf
lods
xorl
pop
call
insl
mov
fsts
scas
cmpsb
aas
sbb
sbb
aas
fldt
xchg
pop
mov
mov
dec
xor
dec
sbb
dec
into
jo
sub
mov
aam
cmc
dec
pop
jg
stos
cltd
mov
cs
inc
pop
fimuls
xor
mov
or
aad
mov
nop
testl
leave
pop
dec
xlat
jge
dec
xchg
hlt
aad
enter
cli
rcr
sub
pop
lahf
rclb
sbb
adc
xchg
into
lds
pop
outsb
jl
mov
rcl
dec
fdiv
pushf
jecxz
je
dec
jae
leave
dec
bound
aad
pusha
les
sbb
shll
xchg
inc
dec
sbb
bound
cwtl
aam
fmuls
lret
xor
int
jle
data16
repz
jns
cwtl
int3
dec
adc
dec
daa
les
and
mov
mov
fcmovbe
sahf
dec
or
mov
mov
dec
push
faddp
jecxz
sub
inc
fistl
shlb
or
mov
xchg
into
icebp
jp
in
inc
leave
pushf
mov
inc
inc
push
cmp
stos
das
aad
mov
repnz
fidivrs
push
mov
mov
sahf
notl
aam
push
dec
mov
test
lret
mov
ret
push
sbb
lret
dec
inc
in
ds
jge
push
fcmove
and
shrb
rcrl
lods
rcrl
out
cmpsb
push
inc
xchg
dec
into
test
iret
cmp
into
pop
out
jle
jb
mov
pop
jl
mov
lret
inc
inc
push
lret
push
orb
test
sbb
adc
dec
lret
dec
pop
xchg
mov
movsl
mov
push
repnz
rcll
adc
clc
out
fcmovu
cli
adc
dec
inc
push
pop
sbb
in
fadd
mov
and
xchg
addr16
sahf
jecxz
dec
aam
pop
std
add
sbb
push
push
rcrb
mov
inc
sbb
rcll
popf
inc
test
cs
roll
scas
cwtl
xchg
ds
pop
stos
ficoml
push
inc
inc
inc
stos
cld
incl
addr16
pushf
fisttpl
mov
jae
or
dec
mov
xchg
mov
dec
push
stc
xchg
nop
rcl
mov
icebp
push
jge
jns
lret
dec
xor
cmp
pop
dec
jno
sub
pushf
orl
cmp
add
inc
shr
leave
mov
pop
mov
scas
push
dec
les
lret
mov
movsl
pop
push
xchg
stc
cld
call
imul
or
je
and
sbb
push
sbb
dec
jg
sarb
jmp
push
dec
cli
cmp
sub
cwtl
jecxz
sarb
cmp
and
mov
stos
int
insb
fisttpl
dec
lret
sub
dec
pop
dec
iret
test
pop
mov
outsb
jne
rcr
push
pop
mov
fldl
mov
dec
xchg
xlat
rol
rol
fistl
lret
xchg
pusha
mov
xchg
js
scas
sarb
pop
and
xchg
pop
inc
aas
ret
fldenv
prefetchw
mov
loopne
mov
dec
xchg
aad
xor
jl
jo
jg
into
out
sub
inc
dec
int
sahf
ja
mov
mov
fadd
jae
cmp
jl
fcmovb
test
pop
pop
xor
sub
jecxz
dec
xchg
sub
xchg
sbb
sbb
int3
ret
outsb
in
mov
push
outsl
add
and
rclb
ficoml
push
sub
aam
cwtl
lds
jbe
jl
subb
pop
ds
sbb
inc
dec
push
pop
out
mov
loop
sar
xlat
mov
dec
inc
fcmovnu
ja
insb
lds
scas
sbb
int3
mov
sub
dec
sub
dec
aas
xchg
nop
int
xor
mov
jg
mov
lods
fcompl
out
push
mov
das
cs
or
dec
in
pop
repnz
and
outsb
in
ss
xchg
fs
sahf
filds
test
icebp
xchg
mov
fcmovu
or
icebp
sbb
inc
xchg
ficomps
sti
mov
push
repnz
ret
push
les
test
pop
test
mov
lcall
dec
inc
cmc
jl
gs
call
sarb
daa
xchg
add
enter
push
flds
inc
jns
lret
in
mov
mov
jo
int3
dec
leave
or
int3
pop
fisubl
test
leave
stc
hlt
cmpsl
push
cmpsb
xlat
dec
dec
inc
push
addr16
inc
adc
dec
sahf
rorb
das
mov
sahf
or
and
dec
pop
or
leave
scas
pop
fdivr
aas
mov
mov
mov
jl
lret
jg
bound
cmpsb
jb
push
fidivrs
xchg
in
push
dec
iret
std
pushf
popf
mov
dec
xchg
mov
pop
mov
pop
nop
shrb
pop
int
or
mov
clc
les
aam
push
cli
pop
jne
dec
cmpsb
in
clc
or
pop
pop
fmull
sub
push
rcll
lahf
inc
adc
fcmove
loope
pop
pop
sub
fdiv
js
xor
data16
mov
test
dec
add
addb
push
pop
fiadds
daa
cmpsb
jae
insl
sub
xchg
cld
into
popa
and
jno
xchg
jns
mov
dec
add
dec
jae
mov
or
pop
lret
mov
ret
loope
add
xchg
fadds
inc
lret
or
mov
test
sahf
inc
neg
or
mov
jbe
cwtl
mov
mov
dec
pop
pushf
jp
dec
ret
pop
clc
mov
clc
mov
mov
inc
mov
int3
dec
pop
mov
cmp
test
pop
sub
add
lret
cwtl
fnstcw
fs
or
clc
ja
fnsetpm(287
jmp
movb
rolb
sbb
adc
lret
push
xchg
fldt
mov
and
inc
jns
rorb
into
mov
cmp
ja
dec
cli
adc
inc
inc
std
dec
xchg
dec
push
loope,pt
jo
cmp
sahf
dec
daa
pop
add
dec
or
flds
or
fadd
sahf
push
fs
out
xor
push
xchg
jns
loop
sarb
jecxz
test
jg
fcoms
dec
or
inc
push
popa
divb
pop
mov
clc
cmp
repz
dec
inc
rcr
cmpl
and
lds
test
mov
les
inc
outsl
cmp
dec
dec
mov
fiaddl
lret
pop
rcrb
mov
popf
sti
pop
cmp
movsl
cmpsb
fcompl
nop
push
insb
mov
outsb
xor
dec
outsl
push
clc
add
aad
rorl
out
dec
test
pop
inc
mov
xchg
pusha
leave
fisubl
ljmp
lds
inc
or
adc
call
test
je
stc
cmp
int3
dec
pop
xchg
mov
jno
sahf
popf
call
jl
mov
inc
inc
in
push
cwtl
repnz
xchg
das
jae
sahf
mov
cs
inc
push
xlat
add
inc
fistl
std
push
iret
xor
jae
pop
fcomp
add
cmp
dec
xlat
and
test
fcoml
sahf
outsb
sbb
dec
int3
push
pop
sar
andl
lret
pop
adc
jb
jl
and
aam
stos
inc
mov
pop
mov
iret
shrb
mov
fistl
dec
push
nop
push
sahf
sahf
push
sub
fdivrs
mov
mov
add
popl
icebp
fadds
inc
sbb
in
adc
stc
arpl
fsubrs
xchg
adc
xchg
aas
insb
aas
jae
mov
pop
push
out
mov
mov
sub
cmp
dec
sahf
adc
std
js
cltd
ficomps
dec
pop
dec
mov
dec
aas
jae
cmpsl
pop
adc
sub
pop
out
cltd
aas
int3
scas
mov
jge
add
fldenv
mov
mov
push
sti
xor
push
in
test
cmpsl
pop
fsubrs
mov
lret
sti
sub
aam
dec
inc
inc
dec
scas
xchg
jns
xchg
push
jmp
movsb
int3
shl
mov
inc
dec
mov
jae
inc
sbbb
inc
fcmovnu
add
cmp
fisubs
cmc
clc
cli
jo
mov
outsl
xchg
push
xchg
int3
mov
mov
leave
push
or
les
fildl
mov
push
aad
jne
inc
mov
dec
inc
mov
mov
push
das
mov
mov
and
mov
frstor
mov
leave
pop
in
fs
filds
int
fistl
add
and
test
lret
fisttpl
arpl
dec
pop
scas
out
jbe
mov
int3
or
sti
adc
xlat
inc
movsb
movsl
aad
dec
faddl
lods
jae
sub
xchg
fmulp
cmc
push
rolb
dec
dec
sbb
lahf
push
scas
ds
inc
enter
shll
add
ret
dec
inc
ds
sub
inc
push
adc
sahf
mov
inc
inc
adc
add
jmp
inc
push
cltd
sahf
clc
ret
mov
jge
push
xor
fcom
or
fdivrs
push
sti
scas
dec
xor
fxch
into
sbb
push
leave
ds
or
pop
in
jge
cmp
clc
bnd
push
aad
ret
adc
jge
or
ror
out
ret
xor
inc
ds
push
push
fisttpl
sub
pop
fisubl
outsb
out
pop
dec
xchg
inc
sub
jle
inc
cmp
push
xchg
rclb
nop
mov
jns
les
hlt
fildll
aaa
push
mov
jecxz
lock
pop
into
jg
jmp
das
iret
jle
adc
cwtl
fld
dec
aad
mov
jp
idivb
mov
ds
mov
xchg
fimull
ret
sti
jle
fldenv
adc
sub
pop
aas
fdivl
iret
dec
mov
mov
mov
push
ret
out
fcom
jo
add
mov
xchg
pop
mov
dec
fcmovnu
add
fistpl
dec
sti
jge
sbbb
or
into
dec
sbb
xor
lret
leave
dec
rclb
cmp
mov
in
sub
xlat
clc
jne
mov
sbb
xchg
pop
jae
adc
xchg
push
insb
insb
leave
pusha
cmpb
xor
call
fstpt
and
xchg
mov
mov
scas
leave
xchg
jns
stc
or
int3
or
loopne
aam
aam
push
ret
in
xchg
or
sbb
aad
lock
ret
adc
cmp
lret
fmulp
movsl
jbe
lret
in
mov
dec
xchg
fwait
inc
pop
cmp
add
cwtl
mov
mov
dec
mov
imull
outsl
icebp
push
jne
push
lods
imul
and
lret
insl
inc
or
adc
enter
add
sbbl
mov
lret
dec
imul
into
shrb
stos
xchg
ja
and
rclb
pop
fstps
cmp
mov
sti
addb
leave
dec
cmpb
in
sbb
testb
xor
dec
cmp
xlat
popf
adc
pop
push
xchg
mov
pop
dec
flds
and
mov
addr16
stos
rcrb
pop
lret
cmp
loop
ret
or
sub
rclb
dec
rcrb
arpl
dec
fmuls
es
rorl
cmp
sahf
dec
xchg
clc
pop
loopne
dec
mov
mov
or
mov
xor
insb
call
sahf
int3
lock
imul
fisttpl
aam
out
mov
clc
mov
enter
int3
mov
pop
das
xchg
dec
pop
jl
push
in
call
mov
rol
dec
cli
jmp
mov
dec
push
push
iret
stos
daa
ret
cmp
andl
ljmp
mov
mov
dec
sti
jae
sbb
cli
and
out
enter
and
aam
dec
inc
adc
ret
or
pop
pop
int3
mov
loopne
dec
push
jo
cmp
loop
ret
iret
mov
sar
ljmp
aad
sbbb
in
insl
enter
ror
shll
pop
testl
fnsave
movsb
jns
pop
in
incl
loopne
iret
test
bound
sahf
cmp
adc
or
dec
push
xor
ret
dec
mov
andl
xor
js
cmp
ret
enter
xlat
mov
loope
xor
pop
push
dec
jp
xchg
vshufps
add
pop
leave
adc
mov
dec
xchg
mov
inc
je
adc
aam
cmp
lret
fcomp
iret
add
mov
inc
mov
inc
mov
sbb
nop
stos
mov
dec
dec
out
push
rolb
inc
jmp
rcl
inc
mov
inc
shr
dec
repz
cli
ret
fildl
repz
test
pushf
add
std
imul
es
lods
fiaddl
add
incl
fdiv
adc
push
pop
mov
xchg
jbe
xchg
iret
fwait
jl
scas
xchg
stc
cmp
push
in
sub
pop
into
dec
sub
lods
sarb
adcl
sahf
stos
or
fcomp
sbb
dec
or
aam
jne
fcoms
push
cmp
mov
dec
mov
ret
int
add
sbb
int
sti
jge
lret
mov
mov
ljmp
add
test
dec
mov
ljmp
push
lahf
movsl
xchg
lods
iret
loop
mov
aam
inc
jg
leave
sahf
mov
out
push
inc
outsl
lahf
pop
in
mov
xor
mov
pushf
out
push
repnz
inc
pop
rcr
add
xchg
mov
and
cmp
outsb
ret
repz
ret
pop
es
cmp
int3
mov
fnstcw
daa
lods
push
jecxz
ror
mov
clc
xor
pop
adc
jg
sti
cmp
jae
and
push
mov
mov
pushf
imul
loop
leave
cmc
lret
push
cltd
xor
push
shlb
sahf
dec
add
sarl
repz
jecxz
nop
inc
lods
adc
jbe
cmp
mov
inc
les
lret
repnz
aam
fsubrs
or
outsl
xchg
xchg
int
push
add
cmpsb
jmp
mov
add
enter
rcl
pushl
leave
flds
ret
dec
lret
gs
lret
xchg
lds
pop
enter
sbb
inc
push
sub
fimuls
mov
or
cmpb
or
mov
push
in
jo
mov
repz
dec
xlat
fnstcw
xchg
pop
sub
lds
jge
clc
fadds
fcoms
fistpll
inc
add
push
les
dec
inc
jp
clc
adc
sbbl
gs
lcall
cltd
hlt
sbb
push
mov
fidivl
rcr
adc
fdivrs
xorl
insb
out
aam
jmp
cmpsb
push
into
pshufw
aaa
pop
cli
mov
jns
inc
pop
and
call
adc
pop
jb
pop
mov
aam
mov
ljmp
cld
mov
fsubs
mov
jecxz
inc
sub
aas
jmp
ret
xchg
subl
pop
xchg
mov
or
dec
pop
sbb
lods
inc
inc
into
rorl
fadds
inc
pop
fwait
ljmp
push
into
fsubs
pop
jne
sahf
fildl
sub
fsubrs
dec
int3
sbb
jno
cmc
int3
fwait
adc
repnz
std
rorb
js
dec
adc
inc
repnz
and
jle
stos
sub
mov
aaa
pop
fimull
rcll
xchg
and
shl
cwtl
clc
hlt
rorb
cmovge
imul
push
xorb
ror
movsl
pop
lret
push
push
jle
mov
iret
rolb
mov
test
loopne
gs
in
lret
pusha
sub
ja
push
pop
cmp
mov
dec
icebp
out
int
cmp
mov
pop
mov
iret
stos
mov
dec
ficompl
test
xchg
cmp
mov
stc
xchg
pop
push
sahf
push
out
cli
sbb
xor
ret
dec
es
and
jae
insb
jmp
imul
push
pop
lret
push
outsl
lret
cmp
dec
out
aam
xor
icebp
lcall
enter
add
mov
lret
mov
xor
aam
int3
mov
push
es
int3
inc
out
into
sub
lods
sbb
mov
idiv
insb
not
int3
dec
jae
xchg
mov
pop
shl
sbb
aam
aas
pop
movb
adc
inc
iret
shrb
std
inc
cmc
inc
xchg
dec
or
mov
jmp
enter
fsubs
lahf
aam
aas
xchg
dec
pop
inc
fadd
pop
push
cmp
lds
ret
pushf
mov
dec
test
mov
pusha
into
pop
bound
push
ror
inc
jmp
cmpsl
lret
fimull
inc
dec
popa
movsl
add
daa
iret
dec
or
mov
fcoml
popa
dec
insb
inc
inc
pop
orb
add
cli
xlat
fisttpl
cmp
fistl
push
mov
ljmp
pushf
popf
dec
in
xor
ror
jle
pop
sarb
ret
pusha
add
push
scas
roll
pop
push
inc
rcr
jl
sbb
lret
jge,pt
xchg
mov
insl
xchg
aad
rcrl
pop
pop
inc
jae
out
pop
movsl
shlb
inc
pop
add
add
mov
int
hlt
pushf
repz
add
dec
push
jno
repz
cmp
imul
iret
adc
int3
lret
mov
and
pop
movsl
inc
xor
inc
iret
cld
xchg
push
lret
xchg
loop
sub
lret
pop
hlt
mov
jns
push
stc
jmp
lret
inc
test
push
mov
or
jne
stos
push
ror
pop
lock
pop
dec
fisttpl
fsub
test
ret
iret
test
pushf
xchg
xchg
pop
pop
jno
ficoml
faddp
and
movsl
fistl
add
mov
outsb
sbb
adc
inc
stos
rcl
push
leave
mov
and
rorl
pop
inc
sarl
cmp
aas
jmp
jle
mov
into
mov
aas
fsts
jge
sbb
inc
pop
jl
lcall
fldenv
jle
addb
xorb
jge
jg
cwtl
dec
push
mov
fstpt
dec
pop
cs
mov
and
pushf
mov
mov
pop
xchg
pop
rorl
sbb
mov
rcrb
fdivs
aas
dec
stc
push
adc
adc
vxorpd
std
adc
pop
inc
fimull
lret
data16
imul
cmp
push
inc
cs
rcr
dec
es
cmp
cmp
xchg
leave
ret
into
push
sub
pop
mov
shrl
hlt
ret
sbb
mov
push
fdivs
leave
cmc
fcoms
inc
adc
mov
or
dec
dec
sbb
xchg
aam
dec
testb
movsl
leave
fstp
scas
js
sub
jmp
shll
cwtl
pop
stos
dec
mov
lret
mov
sbb
inc
pop
decl
lret
mov
mov
movsl
cmp
cmpsl
sbb
ret
sub
lret
notb
xchg
pop
fmuls
pop
add
aad
lock
mov
xlat
fxch
push
jge
jne
add
pop
aad
pop
and
mov
xchg
gs
incb
fisubs
aad
mov
push
sbb
xor
fbld
dec
rorb
push
ret
rol
adc
sahf
pop
push
imul
mov
cmp
jge
loope
xchg
gs
inc
loopne
pop
hlt
loopne
dec
adc
adc
sbb
into
dec
push
fnstenv
fistpl
lret
jp
sbb
push
sti
jno
ret
inc
lret
inc
cmp
in
xchg
lret
push
xlat
mov
and
adc
mov
ficoml
xchg
roll
lcall
or
roll
in
dec
xor
test
dec
inc
or
dec
jecxz
add
cmc
jmp
pop
sahf
push
ficompl
and
xor
mov
lcall
int
cmp
push
enter
sub
mov
into
rorb
ds
inc
fcmovnb
dec
inc
repz
aad
shll
adc
xbegin
std
test
mov
popa
daa
rcrl
gs
clc
cmpb
xchg
je
jmp
inc
pusha
mov
inc
and
fs
hlt
inc
call
mov
int3
dec
sbb
xchg
push
int3
adc
ret
mov
ja
push
or
shlb
jns
imull
sbb
int3
xchg
mov
ret
aad
iret
cmp
repz
sti
movsb
pop
inc
aas
push
sbb
lods
pop
mov
mov
inc
rclb
pop
into
xchg
call
jl
pop
mov
dec
fcom
adc
pushf
out
mov
outsl
ja
fdivr
nop
dec
mov
pop
dec
lds
mov
fs
call
rcrl
rorb
std
xchg
inc
cmpb
rcr
sub
pop
out
jns
sbb
xchg
adc
and
inc
mov
mov
cmp
fisttpll
mov
orl
cwtl
insb
mov
mov
pop
jns
sub
inc
aaa
into
or
lock
xchg
enter
push
fstp
rcrb
cwtl
pop
mov
clc
inc
rcrl
int
mov
push
add
inc
push
mov
pushf
cld
dec
jle
jmp
inc
fdivrl
dec
mov
mov
ror
push
mov
or
ret
sub
dec
mov
fadds
push
dec
fistpl
fnstcw
in
dec
inc
jge
and
mov
arpl
xchg
andl
pop
ds
pushf
jl
leave
aas
lret
mov
out
mov
mov
into
jb
add
cmpsb
fnstsw
lds
clc
ret
int3
and
rolb
push
bound
int3
aas
pop
jle
jae
dec
ret
bound
iret
mov
pop
std
cmpsb
outsl
outsl
stos
dec
shrb
scas
cs
cmp
jns
shlb
cmpsl
dec
ja
mov
jmp
fstpl
xchg
out
mov
lret
mov
test
pop
fistl
int3
xchg
sahf
push
jmp
cli
jne
push
mov
clc
and
pop
inc
mov
insb
ret
jg
xlat
mov
inc
pushf
xor
ret
ja
into
into
pop
fmull
int
mov
adc
adc
leave
xchg
mov
and
out
inc
push
daa
test
aad
push
ds
inc
xor
mov
inc
sahf
lret
fwait
add
repnz
movsl
out
ja
ret
dec
aas
lret
add
xchg
idivl
into
sbb
lret
enter
xor
cwtl
dec
cld
ret
cmpsl
mov
inc
aad
loopne
repnz
pop
pop
addb
inc
imul
add
jge
scas
dec
movl
adc
sbb
aas
rcll
aad
sbb
or
mov
fdivrl
stos
shlb
or
pop
shl
movsl
aad
pop
lahf
sbb
shll
movl
fcomp
movsb
fstpt
push
inc
dec
out
xlat
addb
lcall
inc
pop
mov
dec
loope
lock
cmp
pop
inc
mov
add
aam
inc
and
rcrl
sti
push
insl
push
call
ret
jg
stos
sar
out
add
sar
test
xchg
sahf
cmpsb
dec
arpl
jecxz
inc
pop
fdivr
push
aas
pushf
mov
rorb
cli
popf
cmp
sbb
mov
mov
push
xchg
sti
subb
icebp
psrlq
mov
and
push
sub
dec
pushf
inc
fdivs
clc
imul
pop
fmuls
adc
clc
enter
pushf
push
int3
pop
cmpsb
fistl
popa
leave
mov
and
mov
or
pop
dec
stos
inc
rorb
xor
sbb
sbb
push
fldt
xchg
adc
push
daa
rcl
lret
cmc
mov
jl
loopne
roll
mov
pop
pop
add
fmull
mov
xlat
sbb
jg,pt
cmpl
into
mov
and
mov
cld
push
ds
cmp
imul
lahf
add
adc
add
stc
insb
stc
fisttpl
mov
test
fsubrp
xchg
adc
push
daa
sbb
ds
jl
mov
xchg
out
fcmove
and
data16
dec
movsl
sarb
into
inc
aas
scas
jb
int3
sti
int3
mov
pop
jne
loopne
loop
push
clc
cmp
adc
cs
gs
pop
mov
cmp
rol
push
ret
pop
pop
rcl
rclb
mov
adc
mov
xor
add
fldenv
stc
sub
dec
push
les
push
xor
les
fstpt
push
pop
mov
sbb
or
pop
pop
fcmovbe
mov
and
lret
mov
mov
fcmovbe
add
lahf
movsb
shr
aas
rolb
shl
stc
sbb
jg
pop
inc
int3
lds
adc
xor
dec
sub
dec
mov
mov
data16
cs
inc
jne
xchg
jne
mov
movsl
std
mov
pushf
xor
xchg
mov
jle
mov
mov
scas
adc
cs
or
sbb
xchg
outsl
and
dec
sahf
xlat
ljmp
jl
out
fs
push
jp
shr
ds
sbb
in
cli
addr16
pushf
add
ficoml
mov
subl
sbb
xor
pop
sahf
cmp
loop
and
fcomps
fildl
mov
in
mov
aad
nop
lds
push
sbb
das
pop
enter
es
sbbl
int
cmp
js
loop
fidivs
orb
mov
rcr
dec
iret
dec
clc
mov
ret
into
jae
lds
pop
push
into
push
and
mov
into
jmp
or
leave
hlt
cltd
fsts
out
adc
mov
sbb
push
loope
ficompl
mov
jge,pt
jnp
pop
dec
mov
cltd
jge
mov
pushf
loope
sub
dec
sub
push
pop
push
dec
pop
pop
flds
int3
pop
jne
dec
cmpsb
cmp
add
cwtl
sbb
dec
ror
into
or
sarb
push
cmp
fiadds
xor
fldcw
aam
xchg
jmp
fnop
inc
sbb
call
daa
dec
fsubrs
ret
pop
into
fcomps
or
iret
aam
pop
dec
ds
or
test
int3
jle
push
test
push
sar
xor
inc
mov
enter
pop
ficoml
sbb
xchg
dec
js
stc
cld
add
pop
rorb
loop
inc
inc
mov
cltd
push
fldl
icebp
mov
and
pop
andb
and
out
int
daa
inc
fildl
cmp
addr16
fxch
pop
aam
test
fiaddl
pop
pop
jb
fcom
lods
mov
call
scas
and
pop
pop
jg
stc
dec
lret
xchg
pop
mov
inc
push
insl
push
push
popa
cmc
pop
sbb
insb
int3
lret
jl
mov
enter
roll
sub
dec
sbb
inc
and
iret
lcall
add
faddl
add
xchg
data16
jns
inc
ficoms
adc
jne
inc
std
sbb
rcr
test
jne
inc
dec
pop
pop
mov
sub
dec
aas
mov
test
and
push
mov
movb
scas
cmp
stos
inc
outsb
notl
repz
or
popa
xchg
mov
lret
ret
sahf
inc
test
fdivrs
mov
rclb
sarl
xchg
inc
enter
xchg
shll
into
aas
loope
inc
add
push
pop
shrl
ja
dec
cmc
push
mov
jmp
inc
sahf
inc
int
daa
mov
dec
aas
xchg
sbb
sahf
mov
aas
aad
test
sahf
or
aam
iret
jns
test
dec
push
pop
enter
rcrb
int3
pushf
int
dec
scas
xchg
mov
push
ja
sarb
stos
push
add
cmpsb
stc
scas
lods
loope
sbb
mov
clc
enter
inc
into
imul
rorl
push
cli
test
or
jl
xor
and
push
pop
pop
popa
rcll
enter
dec
mov
fsts
and
rcl
dec
dec
inc
test
jle
and
jcxz
pop
aad
popf
inc
out
enter
dec
push
mov
loop
push
dec
ficomps
fldcw
push
imul
mov
scas
stos
pop
pop
mov
orb
add
push
jne
jg
inc
xchg
jmp
push
rclb
cmp
leave
xchg
lret
add
and
rcrb
mov
xor
push
es
push
inc
rcrb
adc
inc
mov
faddp
inc
test
addr16
add
inc
pushf
popf
or
mov
push
into
das
ljmp
pop
mov
cmp
pop
stc
sbb
ja
inc
sti
xor
cmp
iret
int3
cmpl
loopne
rcrl
repz
push
dec
lock
xlat
cmp
cmp
jecxz
push
rcl
cmp
and
loope
mov
fdivs
pusha
sarb
inc
mov
push
jno
cmpl
xor
loopne
shlb
adc
sbb
roll
sub
ret
sets
jge
adc
rcl
xchg
std
aas
lods
or
and
insl
sub
mov
dec
imul
lock
pop
xchg
ja
and
cmp
addr16
loop
inc
push
and
imul
xor
pop
push
aad
inc
bound
add
imul
pop
inc
out
sbb
popf
mov
add
mov
and
fstl
mov
ret
mov
mov
pop
jge
pop
jle
mov
xorb
in
mov
fcoms
mov
mov
mov
lcall
mov
cmovne
test
rcl
xchg
stos
mov
arpl
inc
fcmovu
push
cltd
pusha
or
mov
fsubs
pop
mov
add
pop
jne
sub
inc
in
adc
push
xchg
inc
aam
or
sarl
dec
sub
aas
and
decl
mov
pop
push
mov
mov
dec
dec
push
push
fidivs
sub
lret
inc
inc
mov
jns
dec
insb
leave
inc
clc
cmpsb
out
dec
rorl
jecxz
lret
stc
mov
daa
mov
aas
mov
cmpl
mov
mov
cs
sbb
pop
enter
jge
sub
xlat
add
pop
xchg
xlat
push
fmul
fdivs
pop
jmp
out
in
push
jp
sti
fisubl
repnz
sub
int3
shlb
xchg
or
push
push
pushf
xlat
adc
jns
test
sbb
dec
mov
adc
push
imul
jmp
stos
sub
pop
sbb
les
rcrl
mov
jne
es
in
shlb
ds
jb
lods
push
pop
inc
fcomps
shr
jno
jne
lret
dec
dec
jle
mov
fidivl
push
aam
sbb
fbld
inc
cwtl
pop
fsubs
mov
push
lret
mov
pop
insl
sbb
dec
push
ficoms
inc
bnd
pop
mov
loope
popf
and
inc
sar
ljmp
and
jge
and
fisubs
dec
mov
inc
dec
sarb
pop
and
pop
sahf
lret
outsb
sbb
popf
dec
test
mov
ret
xchg
xchg
loope
cmp
ja
fcmovne
sbb
cmp
rcrl
sbb
ret
lahf
add
push
std
mov
mov
mov
jae
cmp
fs
inc
inc
mov
add
mov
mov
mov
mov
fisttpll
cli
insb
dec
add
cld
and
sbb
addb
pop
jmp
pop
ds
cli
adc
cmc
ret
dec
aas
sahf
cmpsb
fcomps
aad
aad
scas
dec
movsl
push
sub
pop
pop
jg
fmulp
sbb
jae
fisttpl
int3
inc
inc
daa
aas
sub
fsts
mov
pop
pop
pop
jae
inc
pop
or
xchg
mov
inc
call
lock
testl
aas
sbb
xlat
popf
cltd
adc
cmp
scas
push
mov
movsb
das
push
fcoms
jp
stos
cwtl
flds
pop
jbe
fwait
mov
sbb
mov
mov
sub
mov
aam
mov
enter
push
cs
add
push
mov
cmp
jno
pop
ss
adc
jo
mov
je
mov
gs
pop
mov
add
xor
pop
pop
xor
loopne
iret
sar
push
ret
stos
sub
sub
or
cmpsl
and
jns
pop
stc
ds
cmpsl
jle
inc
testb
and
int
pop
fs
pop
and
rolb
fnstsw
out
cli
ret
rclb
mov
add
jb
cmp
imul
push
hlt
fiadds
lret
mov
inc
sub
inc
lods
pop
mov
ficoml
fistl
gs
test
mov
ljmp
cltd
aam
inc
dec
rcr
insb
mov
imull
push
dec
fmul
sahf
lods
dec
setns
cmp
add
insl
sti
pushf
jns
mov
lret
inc
mov
pop
jmp
aam
shll
cs
into
add
pop
mov
aas
mov
test
or
adc
aad
pop
rcrb
xlat
cmc
push
jl
ljmp
loopne
push
shll
pop
aas
out
push
cmp
fcoml
add
rcrb
push
ds
inc
leave
xchg
adc
ret
pop
dec
fdivrs
movb
mov
nop
dec
and
pop
mov
clc
add
mov
lcall
es
pusha
pop
sub
insb
mov
xor
test
pop
xchg
movsb
inc
aas
ret
cmp
push
push
sbb
mov
dec
mov
push
fisubrl
cmp
enter
test
mov
rcll
mov
cmovb
into
bound
mov
mov
xor
arpl
pop
or
inc
iret
ds
inc
enter
ficoml
insb
push
xchg
cmpb
shlb
int
mov
inc
dec
mov
xadd
rcrb
out
pop
inc
xchg
and
jge
dec
push
fistps
jl
iret
cld
lret
jmp
leave
inc
scas
aas
inc
mov
mov
outsl
or
mov
shl
or
pop
sahf
pop
call
jo
inc
inc
mov
add
cmp
ficoms
aad
pop
xchg
sbb
loope
add
dec
push
add
jns
pop
call
dec
ficoml
stos
xor
cwtl
enter
cmp
imul
pushf
repnz
popa
subl
jo
in
loope
aam
sbb
ret
fdivl
xchg
loop
adc
std
cmp
push
fcmovb
xlat
je
scas
xor
shr
int3
fidivrl
jns
es
dec
fsub
adc
fmull
mov
or
adc
pop
int3
mov
and
iret
into
out
mov
mov
adc
mov
shlw
js
jne
push
lods
dec
sbb
dec
aad
xlat
into
insl
and
dec
enter
pop
or
sub
std
clc
fsubrs
inc
jae
mov
aad
nop
into
pop
fstl
in
out
dec
pop
leave
loope
add
hlt
or
push
loope
dec
sti
and
xlat
mov
inc
mov
inc
iret
addr16
fistl
hlt
sbb
mov
fdivr
push
xchg
fdivrs
out
es
in
lret
mov
insb
fldt
aad
jge
adc
call
mov
fisubs
mov
push
xchg
int3
push
adc
dec
ds
lahf
push
fcomps
imul
adc
mov
fildl
das
mov
mov
fdivl
aad
cld
cmc
cmp
mov
lret
ficoml
out
dec
fstpt
inc
push
movsl
movsb
dec
fcomi
lods
lds
loope
addr16
mov
out
jo
cmp
dec
sbb
xchg
popa
xchg
xor
cs
dec
sbb
push
inc
sub
xor
iret
jl
dec
ror
aas
xor
fcompl
sarb
out
inc
cmp
cmp
fcmove
push
ds
lret
xchg
jge
inc
out
dec
or
out
int
push
insl
nop
aam
mov
in
push
imul
fldenv
mov
cwtl
xor
dec
aam
mov
push
cli
pop
sub
mov
pop
int3
sub
dec
mov
sbb
inc
int3
test
cmpb
push
fcompp
or
pop
bound
jge
lods
push
pop
push
inc
fldenv
dec
int3
mov
enter
cmp
mov
push
cltd
jmp
pop
xchg
pop
dec
mov
xor
sarb
xchg
jle
sarb
adc
push
pop
stc
fdivs
push
leave
sbb
jg
push
dec
sbb
xchg
jno
loop
into
mov
pushf
imul
ret
jns
mov
movsl
les
dec
shl
jne
xchg
stos
inc
push
pop
mov
inc
cld
popa
dec
dec
jo
cmp
and
pop
add
rolb
fistpl
pop
and
pop
mov
fsubrs
or
ret
rcrl
sbb
xchg
sbb
push
mov
fdivrl
jge
mov
xlat
hlt
push
inc
mov
mov
shrb
inc
sub
inc
xchg
jmp
cmc
mov
fimull
pop
inc
jle
sub
fsub
daa
cmc
inc
jl
loopne
mov
insl
adc
or
int3
inc
xchg
daa
push
add
dec
inc
scas
mov
out
mov
adc
lret
mov
and
inc
sbb
jmp
lret
xchg
stos
hlt
mov
mov
in
out
fisubrs
pop
lret
lret
sub
dec
movsl
xor
dec
xchg
insb
jbe
xchg
imul
mov
mov
ja
push
pop
push
inc
fnclex
dec
inc
fs
aam
mov
fcoml
sti
call
pop
dec
lret
and
xor
jl
push
in
ljmpw
mov
ss
mov
ret
mov
mov
cmp
rol
dec
xchg
dec
ret
pop
aam
cwtl
adc
mov
jnp
fadds
into
sbb
dec
xchg
aam
iret
pop
mov
dec
inc
inc
daa
lret
pop
xchg
add
dec
inc
fstpt
cmc
inc
rolb
insl
inc
mov
inc
popf
cmp
inc
xor
adc
push
mov
push
or
pop
dec
ror
xor
fadds
out
inc
dec
roll
fsubrl
pushf
ret
addb
hlt
out
pop
xchg
cmp
lret
fistpll
pop
inc
pop
out
rolb
and
test
dec
fidivrs
das
leave
outsl
daa
lds
sbb
sbb
gs
sbb
mov
or
cmp
subl
into
jp
adc
sub
int3
ja
std
int3
mov
icebp
cmpsb
jno
dec
cwtl
out
jae
xlat
mov
inc
sahf
jo
jle
xor
cld
mov
iret
dec
cltd
int3
flds
outsb
int3
pop
dec
leave
lods
ds
lock
dec
test
pop
lret
int
xor
inc
outsb
les
aaa
fucom
cmpsb
inc
jo
fnstenv
pop
xor
inc
adc
dec
das
outsb
xor
aad
pop
mov
mov
cmpsl
fwait
sbb
xchg
inc
dec
sbb
in
lods
lret
repnz
inc
inc
pop
cli
mov
mov
scas
popf
or
int3
test
fimull
loop
ljmp
inc
cmp
arpl
mov
xor
into
pop
push
push
sbb
cmpsl
push
inc
mov
push
clc
js
int
repnz
leave
dec
pop
dec
sarb
pop
mov
aaa
push
push
jl
sarb
rcl
cld
popf
aad
cltd
sub
adc
push
add
push
cmp
mov
es
loope
fcmovb
aad
dec
into
imulb
cmpsb
out
movsl
jmp
pushf
adc
xchg
or
adc
xor
rcl
dec
movsl
daa
shl
mov
pop
fisubs
mov
in
int
mov
rclb
sbb
loop
into
and
xchg
ret
pop
mov
insb
or
subb
mov
cltd
or
mov
out
fldenv
jns
fcmovu
sbbl
cwtl
sbb
jp
cmp
mov
dec
ljmp
mov
ljmp
fld1
dec
aad
dec
or
scas
dec
jle
rorb
sahf
test
push
sbb
rclb
and
push
dec
rcll
shlb
jmp
int3
enterw
or
stc
mov
scas
cmp
sbb
mov
sbb
stos
jge
push
inc
push
dec
ds
mov
mov
call
push
add
inc
pop
cltd
pop
jb
subl
mov
or
shrb
leave
sbb
aam
jbe
push
inc
addr16
dec
aaa
xchg
incb
mov
mov
mov
add
mov
ficompl
clc
rorl
dec
ret
mov
fcomps
sbb
stc
or
repz
jmp
inc
pop
sarb
out
push
push
mov
inc
dec
cmpb
leave
aad
enter
stos
jle
into
stos
dec
push
loop
dec
mov
dec
sub
ljmp
sarl
daa
rcrb
ja
jg
inc
cli
jg
push
orl
test
daa
aas
pop
rclb
mov
je
int
ljmp
insb
pop
out
addw
sbb
adc
iret
inc
xchg
push
out
adc
cli
add
and
dec
mov
and
test
jecxz
adc
sbb
aad
sub
dec
and
inc
out
ret
sahf
pop
and
insl
mov
add
je
jp
push
int3
iret
pop
pusha
mov
cwtl
pop
hlt
mov
dec
clc
mov
mov
insb
ret
iret
ficoml
dec
js
mov
jns
dec
test
ret
pop
jecxz
pop
test
pop
int3
lahf
popf
orl
mov
int3
xor
fs
int3
gs
and
dec
pop
cmpsb
and
call
inc
div
insl
push
lock
fnstenv
in
divl
les
mov
dec
mov
les
xor
xchg
push
mov
push
cmc
mov
pop
push
popf
call
out
pop
lds
dec
xor
fildl
mov
rcll
lret
imul
dec
addr16
int3
mov
mov
pop
dec
fldt
rcrb
int
pop
sub
aam
xchg
hlt
daa
or
dec
rcrb
movsw
lods
scas
xchg
inc
pop
sbb
mov
int3
dec
js
aad
bound
mov
mov
dec
pop
mov
push
test
ficomps
enter
mov
movsl
xor
sahf
mov
dec
sbb
int
cli
in
fcompl
push
jp
rorl
into
outsl
loopne
stc
fdivrs
aad
and
jmp
fstp
or
mov
dec
faddl
out
sub
pop
outsb
cwtl
clc
add
hlt
dec
movsl
or
arpl
mov
dec
ljmp
int3
cmp
mov
inc
sbb
ret
jecxz
fmull
fidivrl
es
mov
push
insl
daa
push
mov
push
ss
fnsave
dec
pop
cmpsb
ficoml
xchg
fxch
xor
bnd
loope
sbb
add
mov
data16
cmp
test
and
mov
cmpb
pop
nop
rcl
adc
cmp
int3
mov
rorl
or
nop
out
inc
aas
adc
ss
arpl
imul
fmulp
sub
js
shrl
ret
mov
mov
loopne
fsubs
stc
call
xlat
mov
or
mov
fistl
ror
push
clc
aas
pusha
mov
mov
pop
fisubrs
into
std
push
shrb
pop
test
rclb
pop
stos
add
dec
jle
inc
dec
inc
push
mov
sbb
push
cmp
in
int
scas
sub
lds
mov
push
inc
mov
outsl
lods
loop
into
cltd
inc
dec
xor
xchg
mov
fsubr
out
fldt
mov
leave
fildl
xchg
push
add
fcmovu
or
jge
push
jl
std
lds
out
out
inc
cmp
pop
int
mov
lock
dec
jp
mov
gs
inc
inc
mov
sti
mov
pop
jb
push
push
pop
jle
ret
adc
mov
mov
xchg
dec
jle
cs
pop
mov
mov
dec
ficoml
push
xor
push
pop
mov
sbb
push
or
sub
scas
mov
mov
lds
sbb
aas
push
ds
adc
sub
popf
leave
or
test
jl
int3
lret
stos
mov
pop
adc
adc
xor
cmpsb
xchg
aam
sarl
pop
cmp
adc
or
ret
push
sahf
sbb
xchg
inc
movb
mov
add
xor
in
push
inc
mov
insb
fsubs
jmp
in
shl
stc
ds
hlt
test
pop
pop
dec
adc
mov
ds
xlat
cmp
jmp
dec
sti
out
movsb
in
inc
aam
fstps
cmp
or
bound
mov
stc
aas
mov
rcl
test
cmpb
xchg
pop
addb
xor
push
mov
das
sbb
aad
sahf
mov
fldl
rorl
xchg
cmpsb
fs
mov
stos
dec
xchg
jns
push
fmuls
aaa
mov
int3
mov
imul
rolb
fucom
inc
cs
js
sbb
imul
mov
icebp
clc
aas
rolb
lods
inc
jg
aas
pop
ljmp
push
dec
dec
mov
cs
ljmp
out
xor
inc
cmp
jle
xchg
mov
and
dec
add
or
pushf
out
lahf
dec
movsl
and
fcmove
setle
mov
lret
flds
jg
lret
xchg
add
stos
aas
dec
adcb
enter
rcrb
or
push
movsl
clc
add
inc
jne
lret
add
mov
addr16
dec
dec
iret
sti
sub
inc
insb
xlat
aaa
cmp
xor
push
dec
inc
dec
mov
std
fstp
push
into
aad
aas
in
mov
and
loopne
aad
lret
add
fwait
sub
inc
dec
in
inc
sub
lds
pop
dec
cltd
sbb
rclb
dec
bound
inc
add
stc
shl
sbb
mov
push
call
cmpsl
push
test
ljmp
rorl
inc
cmp
xchg
dec
mov
in
scas
push
je
js
sbb
insb
rcl
sub
dec
push
pop
fsubr
cmpsl
dec
sahf
call
xchg
dec
fmul
add
out
mov
pusha
mov
pop
pop
mov
add
jecxz
dec
adc
mov
ret
je
jo
jge
jge
insb
add
rcr
pop
pop
sub
push
xlat
rcr
notb
pop
mov
shll
stc
mov
cmpsl
aam
lds
cmp
dec
jno
lret
xchg
push
dec
mov
xor
push
add
jp
dec
mov
add
call
insl
dec
es
loop
inc
std
rorb
lret
fsubs
fisttpl
cld
and
adc
inc
rcll
push
inc
add
inc
inc
mov
out
or
leave
out
jge
and
mov
jl
inc
pop
xchg
adc
icebp
leave
xchg
daa
mov
cmpsb
lods
fstpl
aas
pop
pushf
data16
nop
sub
push
test
fidivrl
in
jecxz
inc
jle
call
es
mov
dec
sti
jne
dec
and
jg
aam
dec
test
adcl
mov
jne
dec
out
pop
test
xor
sub
fimuls
lods
leave
push
push
push
adc
jge
sti
mov
mov
push
inc
jecxz
enter
push
ds
iret
mov
sar
inc
nop
sbb
inc
aas
fnsave
pop
sbb
mov
push
outsl
insb
inc
les
jno
pop
icebp
pop
pushf
jmp
ds
std
popf
jae
push
ficompl
pop
inc
clc
mov
xchg
mov
mov
daa
jns
leave
into
lods
les
inc
mov
outsl
or
int3
mov
rcr
jecxz
and
arpl
push
xor
mov
pop
dec
ficompl
mov
mov
fcomps
pause
ds
mov
inc
dec
or
mov
inc
sbb
pop
call
addr16
leave
xchg
and
inc
in
loopne
int
mov
sbb
cmp
js
pop
sahf
xor
cli
neg
pop
sahf
cmp
shll
int3
dec
negb
jo
or
leave
pop
jmp
cmp
fidivrl
push
js
fs
inc
cli
adc
add
adc
jne
ret
mov
jne
sti
lods
mov
dec
in
test
inc
vminpd
inc
nop
add
int3
dec
out
pusha
add
cld
lds
xchg
sahf
cli
push
inc
pop
das
mov
inc
mov
jne
in
add
adc
movaps
hlt
std
push
inc
push
test
stos
test
dec
inc
inc
aam
daa
cltd
std
loop
xchg
pop
inc
dec
addr16
sahf
or
mov
push
sarb
gs
int3
roll
add
sbb
rorb
pcmpeqb
dec
inc
lret
aad
test
xlat
dec
dec
mov
fwait
mov
jle
push
jl
out
iret
inc
add
lods
jge
jmp
cmp
cwtl
cmp
fsubrs
jecxz
pop
mov
fadds
clc
jmp
fdivp
sub
mov
aad
jecxz
fwait
or
scas
push
inc
mov
mov
push
add
outsl
inc
push
mov
cwtl
loop
rolb
cmp
aam
jecxz
inc
cs
jo
jmp
call
fisubs
lds
dec
mov
and
dec
adc
icebp
jl
sbb
ret
lret
jge
adc
test
inc
pop
push
es
jne
daa
movsl
cmpsl
out
xor
or
std
dec
jmp
mov
and
adc
outsb
fucomi
orb
bnd
mov
cmpsl
iret
std
lock
rclb
ficoml
ret
cmpsb
fdivrs
mov
add
mov
rcrl
xchg
xor
dec
inc
xchg
int
add
jge
movsl
add
inc
mov
xlat
int3
sbb
lret
add
in
push
aad
inc
fstps
aad
push
sahf
ljmp
in
fidivrs
insl
mov
pushf
int3
sub
ret
ljmp
stc
sbb
shl
aam
aam
hlt
pushf
mov
mov
gs
sbb
outsl
or
add
cmp
xchg
dec
mov
lret
or
rcrl
sbb
xchg
xchg
mov
add
sbb
aad
jp
rorl
jl
and
fcmovb
out
jbe
jae
adc
lretw
mov
mov
pop
dec
fsub
jle
inc
sub
fucomp
pop
sub
ret
rorb
inc
into
pcmpgtd
iret
pop
dec
dec
jge
adc
inc
sar
fmull
mov
sbb
sub
repnz
inc
ret
inc
into
test
mov
dec
dec
adc
negl
fisttpl
ficompl
mov
add
pop
pop
cmp
xchg
inc
pop
call
arpl
push
in
pop
test
push
int
fistpl
mov
inc
dec
in
push
clc
mov
ss
mov
add
dec
adc
jl
and
inc
test
mov
lret
in
inc
clc
inc
push
fidivrs
sub
sahf
push
scas
adc
repz
push
testb
jns
inc
mov
inc
inc
addr16
mov
clc
mov
pop
leave
fcoms
jo
popa
push
xchg
sarb
mov
inc
add
jae
mov
adc
mov
and
sbb
sahf
sub
mov
push
mov
push
sahf
fadds
and
xor
lods
inc
xchg
fidivrs
lret
inc
dec
dec
pushf
push
movsb
and
in
cmp
lods
push
or
lret
lods
xchg
ss
or
inc
in
rcrb
xor
lds
fildl
aas
pop
scas
xchg
cs
lock
ret
sub
xor
xlat
dec
push
pop
jg
mov
sub
fdivrl
xchg
dec
rol
push
sahf
or
loop
xlat
ror
out
aad
jmp
ret
mov
pop
pop
out
rcl
sar
insb
xchg
push
out
cmpsb
shrb
mov
push
mov
int
scas
add
mov
clc
repz
shlb
stc
hlt
push
push
inc
pop
and
jge
es
mov
or
mov
clc
mov
insb
cmp
int
mov
aaa
fisttps
arpl
aam
shlb
pop
nop
leave
inc
shlb
das
pop
enter
ja
push
mov
fisubs
or
lret
adc
inc
sbb
jmp
test
pusha
xchg
adc
ror
sub
push
add
push
stc
adc
repz
out
fcompl
out
icebp
push
das
clc
daa
inc
rcl
aaa
or
rcr
sub
xchg
pop
mov
push
ret
sbb
mov
shrb
add
mov
sahf
push
and
scas
ret
and
sbbl
rorl
imulb
xchg
sub
or
ds
jmp
fcmovne
pop
jle
or
std
push
clc
aad
lret
les
xor
cmc
call
xchg
fstl
dec
adc
in
std
lret
pop
test
lahf
and
in
std
push
inc
xchg
sbb
out
dec
pop
cmp
jg
push
push
frstor
mov
sti
push
les
stos
cmp
je
stc
xor
ret
cmc
rclb
les
or
jae
aam
ficoml
sti
pusha
arpl
mov
cwtl
jecxz
mov
popfw
test
test
xlat
shlb
fdivr
orb
cmp
mov
iret
xchg
mov
and
cltd
jae
cwtl
pop
rcr
ja
lods
xchg
lds
mov
xchg
mov
lret
sahf
sbb
lods
dec
aas
mov
les
lret
jmp
ret
into
std
pop
test
and
movsb
push
cmc
lock
call
sarb
push
lods
cltd
mov
jge
adc
push
inc
pushf
mov
aaa
rcll
fidivs
xlat
pop
sub
int3
xchg
push
lret
sbb
fcmove
aaa
sbb
inc
and
jae
pusha
pop
lods
mov
dec
dec
popa
push
frstor
jns
mov
push
bound
clc
ret
jp
inc
mov
fcmovb
and
dec
cwtl
mov
jb
subl
stc
int3
popa
ror
sbb
stc
or
cltd
leave
mov
inc
movsb
jl
test
pop
fwait
andb
mov
cld
dec
mov
dec
aaa
jns
cmpl
sahf
inc
lds
dec
sahf
fwait
cmc
ret
xchg
mov
int3
ret
in
sarl
imul
sahf
ljmp
mov
pop
inc
dec
mov
and
dec
or
shl
addr16
jns
add
js
out
dec
pop
hlt
sub
lods
sti
inc
pop
dec
push
mov
mov
pop
xor
sub
in
pushf
add
dec
jbe
mov
std
inc
inc
ret
imul
std
or
das
ds
imul
sbb
in
repz
int3
pop
adc
clc
jge
in
iret
sub
jle
imul
inc
pop
xlat
dec
jae
das
in
ret
mov
mov
adc
in
cmp
push
faddl
test
dec
les
fcmovnu
pop
testb
dec
les
xor
and
inc
stc
jg
stos
out
dec
inc
sbb
inc
ds
push
hlt
pop
rcl
cltd
into
iret
idivb
insl
sub
inc
jecxz
rcrl
aam
popf
rcll
inc
push
adc
or
lret
mov
push
int3
daa
sbb
shrl
push
inc
scas
popa
cld
int3
into
int
mov
es
rcr
fidivrs
pop
sub
pop
jle
jmp
mov
dec
pop
inc
lret
sub
pusha
dec
jmp
mov
lock
inc
scas
xor
dec
fldt
outsb
pop
pop
pop
mov
sbb
or
sub
pop
lods
icebp
cmovne
mov
xor
out
and
sbb
rolb
arpl
mov
jno
dec
mov
stos
pop
inc
or
loopne
out
and
xlat
mov
pop
es
adc
imul
xorb
inc
pop
add
leave
lret
inc
mov
dec
test
lock
adc
jno
pop
sahf
loope
inc
dec
test
ficoml
clc
jbe
icebp
mov
and
jge
xchg
repz
mov
jbe
jecxz
inc
fisubrs
dec
test
pop
ja
test
call
scas
add
pop
adc
or
enter
stos
aas
inc
sbb
scas
mov
in
daa
pop
out
push
aam
add
adc
scas
dec
or
imul
test
mov
rolb
fimull
and
rol
dec
pop
scas
pop
pop
ljmp
ss
aas
xchg
xlat
aad
mov
lahf
push
mov
mov
iret
int3
push
jne
enter
inc
xor
clc
adc
nop
xor
cld
mov
imul
mov
and
leave
dec
mov
xor
inc
stc
lds
imul
js
dec
sahf
out
adc
fstl
adc
movsl
jecxz
pop
inc
inc
sbb
push
in
inc
dec
sub
jmp
dec
mov
cmp
pop
and
cmp
fmul
mov
xor
dec
push
xchg
in
adc
mov
jge
or
jns
push
int3
add
loope
xor
int
rolb
or
inc
fadds
fsts
or
pop
sub
xlat
mov
data16
push
shlb
jb
sar
xor
inc
and
fsubs
imul
sbb
repz
into
pusha
inc
fcompp
sarb
aam
mov
inc
into
icebp
push
pop
jae
sar
adc
mov
adc
aad
lret
mov
sbb
dec
dec
jp
xchg
int3
aad
xlat
jg
push
out
dec
enter
cli
jae
adc
fcomp
adc
mov
orb
push
sbb
cmp
jo
outsl
lret
aas
aas
mov
or
std
mov
movb
jno
sub
aam
aam
shrl
dec
scas
push
jecxz
add
aas
pop
mov
mov
mov
int
jbe
into
iret
adc
inc
cmc
inc
or
mov
ficoml
jae
cmp
lods
int
pop
inc
fidivrs
lock
aad
add
fdivr
cld
push
dec
or
ds
mov
daa
rcll
pop
orl
xorl
insb
pop
inc
cmpsl
jne
fadd
fmul
lret
aam
add
pop
inc
push
fxch
sti
jo
std
pop
jae
aam
sbb
iret
shrl
popa
sbb
inc
mov
pop
push
push
lods
enter
push
in
and
cmp
test
jae
jne
or
mov
ret
adc
jmp
fiaddl
xchg
cmp
stc
rol
jmp
out
inc
iret
sbb
rcrb
dec
stos
int
mov
and
fistpl
ljmp
jl
shlb
iret
inc
cltd
inc
xor
ror
rcl
inc
dec
lret
push
das
int3
sub
xor
dec
dec
dec
lcall
daa
enter
jge
sub
jns
fistpl
jne
sbb
fdivl
jae
lahf
push
jle
mov
push
mov
leave
jne
fcmovnbe
sub
outsb
gs
mov
cld
stc
dec
pop
mov
std
sti
stos
jae
out
jge
rorl
jl
ror
mov
push
mov
rclb
out
leave
sub
push
xor
scas
cwtl
sub
cmpsb
sbb
lcall
push
cwtl
sahf
mov
pop
adcl
lcall
dec
push
sbb
mov
push
pop
lds
mov
filds
pop
xchg
push
stc
pop
inc
out
pop
pop
in
cmp
daa
mov
nop
dec
rcl
rolb
in
fisubrs
lcall
in
cld
int3
mov
lret
imul
xchg
jl
testl
add
or
mov
xor
mov
clc
lods
repz
out
lret
mov
mov
dec
xor
shl
in
fsubrs
and
inc
jbe
mov
add
dec
pop
out
into
xchg
gs
cmp
inc
push
mov
mov
adc
rorl
fdiv
add
pop
fnstcw
stc
out
mov
scas
cmp
add
push
outsl
cmp
mov
iret
rorl
sbb
ds
pop
pop
xchg
jg
inc
call
xor
dec
into
gs
cmp
adc
jle
jo
mov
or
mov
xlat
push
lds
pop
mov
xlat
push
push
jmp
cmp
loopne
leave
sahf
dec
sub
push
mov
xor
bound
popf
ror
loopne
pop
arpl
cmpb
inc
fisubs
clc
xchg
stc
repz
pop
clc
mov
dec
rol
into
jp
clc
pop
and
sbb
aam
dec
test
mov
adc
push
lods
sub
or
out
mov
cmova
mov
inc
pop
xor
loopne
add
daa
aad
mov
cwtl
xor
push
ss
ror
or
dec
ficoml
or
cmp
xor
mov
aad
bound
and
nop
iret
jmp
jle
cmpsb
dec
mov
pop
sahf
pop
xor
jle
cmpsb
pop
mov
mov
imul
nop
mov
cwtl
jmp
fildl
repz
pop
lock
pop
push
xlat
pop
mov
mov
or
hlt
ror
out
inc
cld
movsb
and
mov
pushf
mov
lret
jns
aas
inc
rol
or
pushf
ds
jmp
hlt
out
pop
rclb
rep
cmp
inc
dec
ret
cltd
adc
mov
adc
mov
clc
dec
inc
insl
mov
mov
sub
or
fcmovbe
jb
dec
int
ljmp
movsb
stc
insb
mov
fisttpl
xor
push
push
cmp
mov
sti
fisubl
jne
bound
lods
dec
push
leave
pop
pop
xchg
lret
and
ret
repz
cs
fisubrs
dec
out
shrb
sarb
repnz
jo
pop
clc
ret
cmp
jle
push
dec
cltd
inc
testl
and
les
scas
mov
jae
push
fiadds
ficoms
xor
adc
psubusb
jl
sub
dec
jno
pop
notl
std
adc
int3
mov
leave
js
incl
ss
stos
lock
mov
sahf
aas
adc
les
xlat
pop
mov
int3
sub
pop
sub
out
test
fisubs
xlat
sub
inc
add
cmpsb
inc
push
jns
fdiv
hlt
mov
insl
xor
fists
xchg
cmp
push
fst
mov
rcr
push
push
hlt
decl
mov
jns
sbb
mov
adcl
push
fidivs
sub
imul
testl
dec
push
cmp
jo
pop
sub
cs
sar
into
inc
jecxz
pop
and
aam
repz
cmp
mov
sbb
push
or
mov
push
mov
mov
pop
aaa
adc
xchg
leave
sarl
xchg
dec
fdivs
mov
lret
stos
mov
incb
cs
pop
dec
ljmp
dec
sbb
decb
mov
pop
push
pop
stc
jbe
push
add
pushf
jp
imul
sbb
sbb
pop
ds
lock
cmp
dec
pop
scas
shl
mov
movsb
insb
rclb
mov
xchg
in
ret
scas
int
xchg
pop
mov
aad
xchg
rcrb
sbb
push
movl
jb
imul
jae
test
sbb
test
cmpsb
ljmp
mov
scas
fistpl
dec
int3
pop
into
jno
pop
or
dec
jle
push
insl
in
addb
outsb
xlat
fsubs
fcomp
pop
cld
mov
sarb
sub
lcall
test
int3
shrb
mov
fidivl
rcr
cmpb
add
jns
ficompl
sbb
pop
sbb
jle
dec
push
mov
stc
fdivs
push
push
cmpsb
push
dec
xchg
ret
xchg
pop
aas
sahf
icebp
lock
xchg
add
into
aam
ss
mov
lods
add
pushf
jmp
push
push
pop
mov
addb
sbb
std
or
push
hlt
arpl
sbb
add
into
mov
cmp
mov
jl
outsb
cmpsl
outsb
dec
mov
ret
rcr
insl
xor
aam
call
inc
push
inc
inc
lret
mov
adc
ret
mov
daa
mov
jmp
int3
shlb
outsb
xchg
and
gs
add
lds
jg
inc
fildl
sub
dec
mov
ret
inc
push
jae
or
scas
xor
mov
adc
adc
mov
sub
fnsave
int3
dec
jmp
xchg
mov
pop
push
cld
fucom
or
or
or
ret
mov
xorl
lods
adc
dec
add
xchg
ret
fldt
fimull
test
fcmovnu
adc
mov
dec
fisttpll
jbe
and
add
push
pusha
sub
adc
jne
dec
pop
subb
dec
mov
sub
push
mov
fsub
mov
mov
mov
mov
int
push
cld
sbb
jge
xchg
mov
pminub
jecxz
push
lcall
add
xor
pop
rolb
push
cmp
fdivs
mov
xorl
or
xchg
aas
les
push
pop
xchg
mov
pushf
xor
cmp
ret
loopne
data16
int3
repnz
in
call
sub
insl
cmovp
mov
xor
pop
or
aam
cli
dec
push
cs
dec
dec
fsts
aad
or
xchg
rcr
adc
dec
cmc
shrl
push
ds
cli
push
mov
fwait
int3
dec
mov
mov
adc
dec
test
mov
inc
aam
lds
fwait
jns
dec
into
pop
imul
mov
shr
sub
repz
les
ret
pushf
and
lret
fisubrs
pop
xchg
dec
int3
sbb
cli
cmpsl
stos
rcrb
ds
out
pop
aam
lret
lods
inc
repz
pop
stc
sar
xchg
cs
ret
das
xchg
negl
ja
xor
rorl
popa
aaa
insb
mov
inc
fsubs
jge
mov
sahf
adcl
jne
ss
dec
cld
decl
jg
pop
in
lret
cmpsb
movl
lret
push
dec
ret
dec
pop
scas
mov
adc
dec
pushf
sahf
cmp
push
cmpsb
push
add
pop
inc
dec
out
mov
cmp
pop
in
xlat
cmp
pop
mov
push
and
jae
pop
dec
fadd
push
std
imul
aas
dec
push
dec
sbb
push
fstps
add
dec
shlb
inc
pop
enter
lret
enter
pop
shl
int
mov
jg
and
repz
imul
cmp
dec
dec
mov
xor
aad
push
xchg
mull
ficoms
pop
mov
out
cwtl
xor
jns
push
and
bnd
lret
lods
inc
mov
stc
xchg
xchg
nop
dec
idivb
xchg
jl
mov
xor
xchg
mov
fiadds
jne
mov
into
arpl
into
xor
mov
fdivs
ficoms
les
or
or
mov
xchg
or
pop
jae
pop
fisubs
mov
dec
popa
xchg
pusha
jl
push
aad
daa
add
shrb
int3
inc
add
out
test
shll
int3
aam
inc
pushf
test
into
hlt
je
mov
or
stos
shrl
dec
add
xchg
pop
and
mov
les
xor
cmp
pop
xorb
inc
push
dec
jb
outsl
shlb
int3
int
push
inc
ljmp
lret
addr16
aas
cwtl
adc
mov
fnsave
jl
mov
push
adc
mov
inc
cmp
xchg
les
ret
mov
rcrl
cmp
cmpsb
les
add
fimull
repnz
int
xchg
hlt
xchg
fstl
cld
lods
sub
out
xchg
sar
fcoml
sub
xchg
inc
rcrb
hlt
adc
and
lods
pop
rorb
mov
popa
ror
adc
adc
stos
iret
das
xchg
dec
push
lods
popf
cmc
mov
shlb
int3
lret
test
push
pop
call
decl
mov
ret
gs
bound
in
stc
cmpsb
rcl
inc
ds
cmp
cmpsb
dec
xor
fmul
add
mov
xor
xlat
xor
sbb
aad
xor
fstpl
clc
bound
lods
pop
and
jo
lret
sbb
pop
xchg
mov
add
inc
jge
fsubrs
inc
push
inc
scas
sbb
stc
and
inc
inc
xor
rcrb
or
xchg
push
stc
and
imul
sbb
cmpsb
fcom
sarb
pushf
mov
mov
jns
stos
push
rcr
or
rcr
shl
cmp
insl
adc
out
inc
lds
push
xor
shl
fmulp
lock
mov
sti
and
enter
lret
pop
rcrl
rorb
push
cmp
cmpsb
mov
jns
jne
cltd
jae
fdiv
pop
cmpl
das
fsub
adc
ret
cmp
leave
insl
inc
dec
xor
ret
pop
loope
sahf
fsubrs
push
sahf
call
fsubs
or
dec
repnz
or
jg
push
push
into
jno
or
mov
out
sub
sbb
sbb
aad
jge
popf
pushf
rolb
int3
stos
pop
mov
ss
adc
stos
mov
xor
les
pop
pop
lds
aad
aaa
cmp
enter
dec
ficoms
inc
inc
cmp
sti
jns
lods
aas
push
mov
cmp
mov
or
fiaddl
adcl
fdivl
fcomi
rcrl
mov
push
inc
sahf
leave
push
scas
pop
inc
imull
in
xchg
mov
sbb
ficoms
add
dec
cltd
mov
leave
sbb
dec
rorb
or
scas
pop
cmpsl
fimull
jecxz
je
fs
mov
sub
imul
stos
lret
jbe
fldpi
iret
dec
xchg
add
push
cmc
push
aam
les
iret
push
mov
mov
dec
icebp
hlt
notw
dec
movl
and
ja
mov
cmp
sbb
or
inc
mov
sahf
into
int
sbb
rolb
into
mov
fcmovbe
push
cmpsb
jns
push
jl
xchg
call
dec
addr16
ret
scas
mov
xor
test
aam
sbb
xor
dec
fnstcw
inc
frstor
iret
out
pushf
cld
and
mov
xchg
push
inc
mov
adc
into
push
or
inc
add
fcmovu
in
inc
mov
adc
aad
fcom
xchg
push
xor
fcmovbe
pop
imul
es
nop
add
aad
mov
stc
sbb
shrb
inc
fiadds
fbld
ljmp
push
ret
inc
loope
pop
cwtl
mov
mov
rcrb
fbld
or
mov
iret
icebp
ss
jl
call
sarb
test
adc
fcmovbe
lcall
inc
std
jecxz
or
pop
insb
bound
mov
ret
movsl
adc
jl
cmpsl
iret
movsl
xchg
jecxz
inc
dec
pop
stc
cmpsb
rcr
fmul
xor
fmul
iret
pop
add
sbb
pop
ret
and
adc
bswap
pop
outsb
or
xchg
sahf
aas
sbb
ficoms
leave
dec
sbb
out
cmp
pop
push
inc
xchg
aad
iret
test
daa
loopne
shlb
call
aad
ds
fcos
out
dec
loope
in
fmull
sbb
iret
jl
and
rorl
dec
xchg
ljmp
and
fisubrl
int3
adc
cmpsl
fcompl
aam
stos
cmp
push
lret
adc
faddl
cmpsb
mov
pop
mov
inc
stos
pushf
cwtl
jmp
test
xor
sahf
fidivs
sbb
mov
mov
mov
rcrl
mov
push
scas
sarb
dec
mull
pop
jbe
in
cwtl
hlt
movsb
dec
dec
int
lock
dec
inc
cmp
sub
mov
xchg
cld
mov
pop
insl
adc
lret
dec
scas
leave
xor
xlat
xchg
and
dec
xchg
xor
mov
adc
sbb
inc
mov
pop
sub
popa
fiadds
or
xchg
dec
push
jne
into
mov
scas
sub
les
fmull
and
dec
inc
pop
fdivr
fmul
test
xchg
lret
js
sub
mov
mov
xor
outsl
push
pop
xchg
fwait
pop
rcrb
rcr
inc
sbb
pop
aam
pop
cli
mov
cs
dec
inc
pop
nop
pop
mov
mov
scas
out
mov
push
test
clc
pusha
pop
jle
into
mov
in
mov
cmp
sbb
sbb
pop
jae
fldenv
rcl
jne
dec
movsl
loop
scas
pop
inc
sarb
scas
xor
mov
ds
ss
cld
dec
jbe
dec
std
sti
dec
xor
mov
movsl
aas
test
lret
int3
jl
and
lret
sub
leave
testl
lret
dec
pop
jg
test
pop
jge
pop
adc
popa
fcmovbe
enter
xor
push
mul
cmpsl
dec
mov
jbe
adc
xor
inc
dec
jecxz
inc
or
xchg
xor
inc
icebp
mov
push
into
rcrb
or
adc
inc
mov
add
pop
mov
xor
inc
add
aam
imul
mov
adc
lods
fsubs
popf
or
jle
push
pop
mov
lret
inc
div
pop
sub
adc
pop
ja
pop
mov
ret
push
xchg
jo
push
push
fdivrs
or
sub
cld
pop
leave
pop
pop
fdivrs
call
aas
dec
fsubr
add
or
dec
jg
inc
imul
add
sbb
inc
dec
pop
pop
les
xlat
rol
fmuls
sbb
inc
cmp
mov
leave
mov
addb
mov
inc
xlat
dec
mov
pop
fsubrs
fmuls
fsubrs
mov
call
aas
aad
push
clc
lret
ja
pop
push
iret
push
sub
or
dec
mov
lock
mov
push
aam
push
sbb
mov
fdivp
clc
fs
daa
les
mov
xlat
aas
aaa
mov
mov
ljmp
adcb
dec
lods
pushf
lret
int
pop
aad
ds
pop
or
pop
aad
clc
mov
push
aad
sbb
xor
dec
pop
pop
andl
imul
mov
pop
aad
sbb
lahf
rorb
pop
in
hlt
ja
adc
enter
les
xchg
sahf
inc
mov
xor
mov
lods
xchg
cmp
ffree
fcomps
add
mov
cmc
int3
pop
inc
popa
add
xchg
xor
mov
pop
xor
mov
xor
outsb
call
mov
jno
inc
into
dec
lods
pop
aas
out
mov
push
adc
adc
mov
test
cmp
iret
aad
push
lret
dec
jns
repnz
adc
into
enter
cwtl
and
fcomps
rolb
mov
in
mov
adc
lock
dec
sub
repz
inc
dec
push
xchg
xchg
push
int
cmpsb
sarb
or
pop
rcll
pushf
daa
fimull
mov
jne
dec
enter
xchg
cmp
xchg
mov
rol
test
xor
dec
push
scas
jb
fstpl
test
xchg
mov
call
jmp
leave
je
int3
inc
cmpsb
mov
sbb
pushf
cmp
out
sbb
push
adc
xlat
daa
into
mov
loope
ja
dec
into
jns
push
pop
lock
scas
cmpsl
dec
fcmovb
pop
sbb
dec
pop
xchg
call
aam
cmpl
xchg
aas
dec
pop
leave
push
mov
repz
push
inc
jg
addr16
pop
xorb
fcmovu
jp
pop
ret
inc
je
faddl
push
fmuls
adc
ficompl
mov
jge
test
jb,pt
lahf
adc
pop
out
aam
incl
int3
movd
stc
shlb
dec
sbb
movsb
xchg
push
xchg
inc
rcrb
sub
mov
int3
xlat
bnd
xchg
bound
lods
jne
push
rcll
xchg
sti
mov
mov
ret
sub
mov
jae
cmp
fisttps
sbb
xchg
push
jbe
pop
int3
jp
inc
jae
mov
mov
inc
dec
jmp
inc
insl
or
and
rol
into
lahf
loop
pop
mov
shrl
pushf
loop
in
addl
cmp
stc
pop
jae
dec
xchg
lods
pop
pop
ret
lret
rorl
cmp
adc
inc
xlat
imul
push
pop
cmp
rclb
push
lock
test
leave
mov
scas
fldl
data16
jle
mov
and
pop
call
mov
mov
aas
cs
jne
dec
into
push
into
mov
ss
pop
loop
lidtl
cmp
or
dec
int3
movsl
cli
je
idivl
inc
adc
push
mov
push
or
mov
jmp
dec
cwtl
mov
mov
inc
push
dec
call
xchg
pop
push
jecxz
fldt
lret
int
test
pop
xchg
and
rorl
fdivrp
shll
adc
push
cmpb
add
shlb
dec
xlat
shlb
push
lret
loopne
mov
cmp
sahf
mov
popf
mov
fldl
movsb
mov
call
dec
cwtl
xor
pop
push
dec
pop
mov
cmp
ficoml
mull
sub
fcom
mov
mov
rorb
push
les
adc
cmpsb
pop
int3
jmp
rcrb
cld
cli
in
cmp
insb
push
icebp
movb
aad
inc
xchg
mov
incl
cmpsl
frstor
fstl
call
push
fstpl
push
xchg
xor
je
mov
sbb
adc
sub
lret
adc
addr16
inc
inc
daa
xor
frndint
into
xchg
insl
lods
mov
je
sbb
fcoml
insl
notl
aaa
ror
popf
lret
lret
icebp
cld
fadds
dec
jle
jb
addb
vpaddb
jmp
je
shrl
add
into
pop
sub
dec
daa
or
pushf
js
xlat
jl
sub
dec
out
xchg
inc
rorl
xor
cld
cltd
les
fistl
sbb
push
out
mov
jmp
fcmovu
into
int3
jbe
xchg
sbb
inc
scas
dec
fsubrs
cmpsl
xchg
aad
adc
push
clc
sub
jno
movsl
sbb
iret
fcmovnbe
or
in
cmp
fcmove
inc
cmp
add
pop
dec
sahf
jno
dec
mov
pop
movsb
aam
inc
mov
add
loop
dec
adc
mov
and
inc
ret
test
ror
int3
fwait
dec
ret
enter
shll
and
fdivrp
cmp
dec
mov
fbstp
mov
or
fcomps
or
inc
adcl
xchg
or
into
jecxz
outsb
fsubs
lods
xlat
loop
stc
data16
push
mov
test
shlb
inc
fcmovu
mov
push
iret
sub
inc
faddl
sbb
mov
push
jb
lods
test
clc
jg
aam
inc
addb
js
movsl
addr16
dec
or
sbb
pop
enter
cmp
lret
push
mov
pop
adc
xchg
fildl
mov
dec
push
negb
cmc
xchg
inc
or
cmc
inc
inc
mov
and
cmp
cs
enter
jns
icebp
cmpsl
xorb
rorb
xor
ds
or
dec
int
xor
inc
cmp
aas
fdivr
pop
fidivrl
je
iret
cmp
and
aam
call
or
push
dec
sbb
call
push
addb
leave
in
pop
jle
mov
sub
jns
inc
and
sarb
out
std
leave
inc
push
mov
pushf
out
jo
sbb
push
insl
insb
out
add
shll
int3
daa
sahf
pop
out
fcmovbe
or
sub
mov
ja
inc
stos
std
xchg
popl
inc
mov
stos
xchg
mov
sbb
push
pop
cmpsb
dec
rorb
and
fisubs
aaa
loop
cmc
pop
xchg
leave
xor
shrl
mov
sti
stc
xorb
ljmp
fcmovu
aad
testl
fcomps
ljmp
mov
or
scas
dec
pop
cmpsl
fiaddl
or
movsb
adc
mov
inc
rcl
mul
mov
into
out
jo
dec
in
xlat
mov
inc
add
jge
add
aad
int
incl
xchg
push
les
imul
das
inc
sarl
xchg
mov
mov
dec
shll
mov
repz
xchg
and
dec
mov
movsb
out
mov
push
lcall
roll
cmp
scas
sbb
imul
or
cmp
push
jge
ficoml
mulb
pop
xchg
les
addr16
clc
xorl
xlat
into
dec
scas
std
ja
dec
jg
aam
int
cli
sbb
daa
pop
add
inc
outsb
xor
rclb
ljmp
inc
leave
inc
sub
push
cld
pop
pop
into
mov
sub
aas
sti
pop
pop
rcrb
mov
ds
shrb
enter
fwait
into
pop
add
jle
pop
ds
scas
sub
inc
jge
dec
sahf
lcall
adc
sahf
mov
and
mov
out
xchg
mov
or
popa
hlt
xchg
int3
xchg
addr16
rolb
int3
sub
addr16
mov
dec
pop
lahf
mov
add
cmp
mov
cmc
rcrb
push
lock
sbb
mov
sbb
sub
mov
lret
xchg
and
ret
fwait
add
mov
adc
ds
xlat
lds
xchg
mov
mov
jl
les
jno
mov
lds
xchg
xchg
adc
outsb
add
leave
dec
cmp
dec
test
xchg
mov
inc
fimuls
lahf
test
push
sbb
test
sbb
mov
in
aaa
pop
inc
fcmovnbe
xchg
or
scas
sbb
sti
mov
pop
and
aam
and
xchg
pusha
and
inc
mov
adc
gs
dec
ret
testb
jge
aas
mov
or
vdivpd
mov
and
dec
sbb
mov
jmp
aas
jl
fiadds
flds
xchg
xchg
dec
clc
adc
loope
jl
dec
jns
dec
xchg
jge
rcll
xor
xchg
ret
sub
mov
mov
mov
aas
jl
fiaddl
mov
inc
lock
pop
fisubs
xor
push
movsb
inc
xchg
clc
imul
add
in
imul
mov
in
push
mov
mov
outsb
scas
push
mov
jae
inc
lds
test
dec
repz
push
je
out
aaa
orl
ffree
xlat
mov
lret
js
cmp
lret
mov
icebp
divb
lret
ret
pop
pushf
pusha
lret
and
dec
pop
inc
adc
jb
push
into
push
int
test
js
adc
push
jmp
mov
pop
rorl
ficoml
pop
push
sbb
pop
nop
sbb
push
jg
inc
mov
cltd
cmpl
or
stc
fsubl
shl
fmul
mov
das
pop
les
or
pop
int3
dec
gs
mov
cmc
mov
out
aaa
inc
cmp
xchg
push
mov
xor
inc
inc
inc
test
rclb
pop
mov
das
fbstp
fcmovb
jb
ds
adcb
xchg
and
mov
add
lds
fildl
int3
rolb
pop
mov
xchg
push
cld
imul
loope
jle
stc
loopne
sbb
dec
mov
cmp
mov
out
aad
mov
pushf
seta
popf
pop
mov
mov
movsb
daa
inc
cmp
push
pxor
push
aas
mov
push
adc
cmpsb
enter
push
fsincos
lods
fimull
outsl
pushl
dec
push
fnstenv
push
mov
mov
mov
sahf
mov
orl
mov
adc
aam
cmovns
sbb
push
cmp
xor
inc
push
xchg
sub
inc
out
sbb
pop
sbb
sbb
jge
mov
xor
rcrl
imul
or
sub
cmpb
fisubrs
sahf
xchg
push
mov
fdivrl
push
repnz
push
pop
add
ret
mov
mov
leave
pop
xor
push
add
jle
lods
aam
stc
leave
cmpsl
lret
rdmsr
outsb
rolb
push
sti
mov
arpl
aas
dec
stos
jmp
sahf
lods
push
sbb
enter
push
in
rol
aad
cmp
mov
and
mov
fs
sahf
ret
jge
fsubrl
pop
faddp
jmp
jns
lcall
sbb
aad
ficompl
in
clc
push
jl
ret
int3
push
pop
ret
adc
out
or
xchg
pop
adc
push
ficoms
push
pop
imul
cmp
testl
fistpll
mov
cmp
mov
mov
fisttps
mov
pushf
lret
clc
pop
ficompl
sbb
mov
cs
mov
mul
jecxz
enter
push
scas
incl
or
insb
fdivrs
fisubs
xor
ljmp
xchg
dec
pop
mov
jge
pop
lret
lods
adc
repnz
pop
inc
add
xchg
pusha
pop
dec
push
cwtl
mov
into
inc
ds
sub
cmc
das
pop
inc
testl
xchg
test
pop
rcr
pop
leave
repnz
std
decb
cwtl
leave
xlat
xchg
push
jge
dec
jno
repnz
inc
or
mov
dec
dec
xchg
addr16
iret
rol
int
popf
push
mov
rcrb
pushf
inc
adc
mov
leave
push
add
push
inc
shl
test
aad
jno
xor
movsl
xorl
ds
push
xadd
shlb
dec
adc
mov
repz
add
jge
xlat
cmp
dec
in
jl
dec
sarb
push
xchg
popa
lret
xchg
bound
jl
rorl
scas
adc
push
or
pop
mov
ficomps
adc
fdivr
and
into
dec
xchg
or
fsqrt
pop
test
sbb
roll
or
dec
rcrl
pop
incb
rol
dec
jg
fiadds
and
pop
lds
sub
lret
dec
inc
pop
mov
lds
into
imul
mov
fbstp
fucomp
ds
fimull
xchg
inc
xchg
sub
sarb
push
cmp
cmpsb
lret
pop
outsl
pop
in
or
enter
and
out
xlat
pop
mov
test
jle
insl
nop
add
lds
cli
xor
mov
sub
mov
outsl
push
or
pop
ds
mov
enter
enter
fnstenv
ja
aad
pop
into
mov
out
xor
mov
movsl
aam
dec
or
mov
jge
sbb
bound
inc
hlt
add
push
jmp
fidivrs
mov
sti
pop
leave
dec
and
xchg
mov
add
mov
push
rcll
sbb
aam
aad
aas
fsubp
cmp
sub
xchg
mov
jmp
out
inc
pushf
cltd
xchg
inc
pop
fidivs
in
mov
leave
add
movsl
inc
xchg
dec
rcr
icebp
adc
scas
inc
scas
and
ljmp
xor
repz
dec
aam
test
push
push
fxch
cld
dec
cs
xchg
add
inc
pop
and
inc
xchg
iret
scas
cmpsl
pop
mov
ret
xor
int3
mov
jbe
loope
pushf
mov
jl
int3
push
push
ljmp
and
rorb
fisubrs
push
rcll
sbb
int3
xor
add
sbb
sub
pop
mov
mull
sub
lods
jbe
fyl2xp1
repz
dec
out
mov
ficoms
pusha
fdivrs
dec
mov
or
fisttpl
lods
xlat
les
pop
popa
int
js
mov
pop
pop
cld
adc
test
xchg
ficoms
pushf
or
stos
mov
pop
or
addr16
iret
mov
je
js
aad
jg
jle
jne
out
jns
sbb
adc
jl
movsb
inc
mov
scas
in
ja
mov
xor
nop
sub
or
aas
sbb
cmpsb
push
mov
push
fstps
inc
rcrl
cmp
add
lret
iret
iret
and
int3
dec
das
adc
mov
adc
lret
fcomp
add
pushf
push
es
mov
pop
cmp
jne
sti
xchg
ds
ret
cs
dec
ficompl
push
sarb
adc
out
adc
repnz
ljmp
push
pop
sub
or
idivb
fcoml
insl
push
fimull
mov
dec
sbb
enter
mov
jle
inc
cmp
lret
adc
nop
mov
bound
xchg
dec
push
cmp
shll
inc
int3
push
dec
aam
into
ret
cmpsb
stos
in
dec
movb
repnz
cmp
insl
mov
adc
pushf
xor
or
int3
dec
mov
in
int3
add
cmp
stc
rcr
xor
xchg
xchg
pop
or
push
aad
sub
lds
int3
stc
lcall
rorl
ficoml
loop
pop
pop
push
rcl
pop
scas
aas
test
rcll
dec
pusha
hlt
add
out
push
lret
into
xchg
test
sarb
js
or
push
jge
and
fidivrs
les
ljmp
add
mov
push
xor
ljmp
mulb
sahf
pop
push
jecxz
inc
and
enter
jbe
fstpt
inc
mov
inc
inc
and
mov
push
ret
or
mov
aad
popa
sbb
xchg
jae
fildl
mov
mov
ret
add
jecxz,pt
jmp
push
fcomp
push
adcl
cli
pop
scas
int3
pop
cmpsb
repz
pushf
and
cmp
push
xchg
mov
jg
imul
cmp
enter
dec
std
cld
add
or
repnz
inc
mov
rcr
xchg
or
enter
jmp
fisttpl
enter
push
xchg
jecxz
sti
icebp
aaa
pop
imull
pop
leave
call
aam
test
pop
or
inc
jg
orb
add
cmp
mov
xchg
ret
xchg
jge
pop
fcmovnbe
int3
jbe
ror
ds
mov
sarl
out
inc
shrb
repnz
push
fcomps
ficoml
int
mov
pop
ds
xchg
jge
rcll
push
adc
sub
jne
jo
xchg
adcl
scas
mov
fsubs
pop
into
movswl
stos
rcrb
shr
add
push
test
sahf
mov
mov
cmpsl
mov
fsubl
dec
mov
xchg
dec
mov
mov
mov
sbb
iret
pop
xor
addr16
out
dec
adc
jl
sbb
fadd
push
mov
fcom
cmp
into
and
movsl
fsubr
das
fcmovbe
push
loop
ss
or
push
outsb
push
sub
pop
or
xlat
pop
decl
roll
lock
mov
mov
loope
inc
pop
xlat
sti
pop
js
data16
inc
fiadds
fnstsw
jns
dec
fdivs
inc
leave
ficomps
cmp
xor
ret
dec
iret
xor
pop
pop
pop
dec
dec
dec
js
aaa
loope
and
fmul
fdivp
jo
cmp
jmp
fiadds
imul
mov
clc
or
ror
push
dec
ds
popl
push
add
cli
scas
fcompl
sahf
icebp
and
mov
into
leave
scas
cwtl
pop
cli
jne
xlat
iret
sub
dec
dec
inc
scas
cs
sahf
data16
jmp
les
sbb
jne
mov
mov
push
mov
popa
clc
nop
xlat
movb
xchg
pop
and
sub
pusha
int
and
rcr
pop
push
outsb
inc
hlt
rol
dec
aas
mov
and
mov
jmp
jle
and
adc
iret
nop
fcmovbe
mov
cmp
nop
les
imul
adc
enter
xor
fidivrs
stc
cmp
inc
enter
jmp
sarl
push
insb
aad
ficompl
push
cli
mov
pop
scas
loope
push
sub
les
xlat
popa
out
or
jle
ja
stos
or
sbb
xlat
ds
ss
arpl
pop
xchg
cwtl
mov
loope
popf
test
repnz
mov
pop
test
imul
iret
flds
outsl
jb
cwtl
subb
arpl
jl
addb
mov
lahf
sar
dec
scas
dec
pop
pop
jno
ds
or
mov
incb
icebp
dec
dec
xchg
cmp
or
mov
out
mov
pushf
enter
cmpb
out
pop
dec
xchg
mov
rol
fmuls
mov
je
leave
rcr
pop
movsb
mov
inc
pop
test
mov
test
mov
sti
sahf
bound
out
xchg
cmp
xchg
jae
xlat
mov
pop
push
std
sub
insb
mov
inc
fstpt
inc
pop
jl
test
cmpsb
leave
pop
fisubs
ret
test
xor
push
or
inc
mov
or
mov
adc
push
sbb
and
test
xchg
incb
mov
iret
pop
jne
sub
inc
shrb
cs
outsb
pop
addr16
jle
imul
xchg
push
push
aaa
stc
shrl
mov
lret
fs
push
aaa
dec
mov
test
mov
es
fisttpll
mov
add
scas
pop
rcrl
or
out
push
out
mov
leave
inc
sahf
out
mov
sti
cmovae
shrb
sbb
les
cwtl
mov
dec
pushf
cmpb
add
dec
roll
push
pushf
outsl
mov
rcll
aas
mov
ss
int
es
loopne
sbb
negb
faddl
cmp
xor
inc
jle
mov
aad
cli
inc
sbb
fldl
jbe
aas
pop
lret
ljmp
dec
fs
jge
inc
and
pop
rol
int3
mov
jo
mov
outsl
mov
mov
adc
mov
push
push
jge
addb
jae
inc
pusha
mov
pushf
repnz
call
ret
fsts
pop
push
dec
int
addl
int3
into
mov
adc
mov
xor
jl
inc
pop
jne
adc
or
xchg
fmull
inc
data16
test
dec
add
movl
std
test
push
mov
push
pop
sbb
fildl
mov
addr16
inc
xchg
push
pop
out
fstps
push
mov
adc
pop
daa
fcomps
xchg
je
inc
push
stc
push
pop
cltd
mov
jne
inc
daa
push
ds
jge
sbb
enter
clc
arpl
dec
sbb
idivl
leave
bound
xor
dec
fwait
sub
inc
dec
mov
inc
lret
sub
jmp
fcomps
out
inc
inc
pop
mov
stos
pusha
shrl
scas
and
cmp
mov
adcb
mov
sbb
mov
in
lahf
or
sbb
xchg
mov
sbb
mov
inc
aad
adc
movsl
mov
pop
loopne
mov
push
in
jl
dec
jmp
pop
sub
mov
pop
js
jg
fbstp
test
loopne
add
rolb
loope
out
dec
adc
dec
sub
icebp
lahf
cmp
mov
je
cwtl
add
and
pop
adc
int
scas
xchg
bound
mov
inc
pop
dec
xchg
pusha
fisubrs
xor
rclb
test
fisttps
xchg
push
inc
xchg
sbbb
mov
ret
shl
adc
inc
clc
int
mov
ja
rcl
icebp
sbb
negb
xchg
pop
ja
jmp
cld
ror
lahf
mov
push
inc
ret
fistpl
lods
jns
lret
rorl
dec
js
enter
dec
mov
adc
cli
rcr
xchg
sahf
jmp
dec
call
pop
shll
gs
cmp
mov
sbb
push
inc
xchg
pushf
pop
idivl
dec
push
add
and
lret
jmp
dec
mov
dec
pop
inc
ficompl
pop
sub
stc
addr16
dec
xchg
dec
mov
leave
cmp
xchg
scas
leave
inc
cmp
fsubs
adcb
mov
mov
inc
test
fcmovnbe
ds
xchg
mov
sbb
clc
adc
push
sbb
adc
jge
mov
fcomps
jge
and
subb
mov
roll
jp
and
jg
les
mov
out
cmp
jmp
push
cmp
dec
pop
sbb
icebp
mov
add
out
cmp
mov
and
aam
inc
inc
mov
loop
enter
cmpsb
pop
or
daa
in
adc
ficoml
test
test
push
dec
repz
xor
mov
shlb
adc
pop
stos
pop
xor
sbb
iret
fmuls
into
outsl
imul
adc
pusha
push
mov
leave
sbb
shlb
xchg
ja
fildl
push
fstpl
cmpsl
mov
aam
aad
int3
iret
sti
mov
sbb
mov
mov
pop
and
push
sbb
mov
cltd
mov
inc
or
fidivs
cmp
xchg
movsb
mov
pop
and
roll
inc
sahf
icebp
shlb
inc
mov
pushf
dec
rcrl
push
mov
iret
mov
or
das
nop
inc
dec
inc
jle
movsb
test
jle
rcll
pop
mov
dec
jno
ret
out
int
scas
mov
pop
mov
aaa
pushf
sub
lret
sti
mov
dec
stos
jle
xchg
pop
inc
or
pop
adcb
fstl
fiaddl
frndint
mov
pop
cmp
scas
push
mov
jl
popa
sbb
scas
cld
push
jle
jo
dec
dec
ret
aaa
pop
out
push
into
dec
das
or
movsb
xchg
push
test
pushf
in
push
cwtl
cmp
inc
dec
lds
pop
repnz
xor
adcl
dec
dec
and
add
icebp
xor
xchg
sbb
mov
push
mov
fadds
jae
or
popa
cmp
jle
jns
fmuls
sub
scas
sti
lahf
sub
inc
pop
sbb
mov
sbb
xchg
mov
adc
dec
nop
push
pop
sub
and
add
clc
aad
push
dec
jge
ljmp
jo
mov
mov
push
jle
test
adc
rclb
mov
lods
add
push
frstor
or
aad
lcall
jno,pn
fisubl
pop
into
repz
add
frndint
push
xchg
nop
sbb
mov
leave
inc
inc
pop
stc
sub
ss
jne
arpl
add
sbb
rcl
sub
mov
out
lret
aad
and
push
dec
imul
daa
ficompl
outsb
pop
cmp
lods
xchg
shl
sbb
mov
inc
mov
sub
inc
mov
sbb
and
pusha
inc
ljmp
cli
insl
or
add
in
cld
xor
adc
and
iret
or
mov
jns
lret
movsb
enter
aad
out
jge
and
les
jns
movsl
dec
push
inc
jl
mov
sahf
dec
out
mov
inc
xchg
ficomps
cwtl
cli
clc
jae
mov
inc
cmp
inc
rcrl
jmp
sbb
ljmp
inc
jns
ret
leave
fistpl
jae
pop
jge
rcl
into
aam
pop
add
xchg
jge
rol
cmpsl
cltd
push
jns
aad
pmullw
int3
pop
mov
jecxz
int3
ret
mov
leave
enter
clc
jl
daa
fisubl
and
loopne
lahf
pop
mov
dec
mov
aad
mov
and
pop
scas
leave
lods
xchg
enter
lds
mov
mov
jbe
sub
sarl
int3
dec
dec
call
scas
adc
daa
jbe
pushf
jl
inc
inc
loopne
insb
mov
faddl
mov
sbb
psrlw
mov
mov
cmc
ja
push
mov
inc
hlt
xchg
lods
inc
bound
into
shl
out
movsl
xlat
xchg
mov
aas
iret
cmp
popa
or
xchg
dec
jle
mov
int3
adc
mov
rclb
mov
int3
mov
pop
add
imul
mov
and
dec
rcr
mov
adc
dec
pop
out
pop
shrb
dec
push
or
or
stc
arpl
fidivrs
pop
xor
xlat
dec
iret
scas
jp
xor
inc
or
cmp
fnstsw
sub
lock
add
jmp
aas
jbe
xchg
fisubrs
ljmp
das
or
cmp
sarl
jge
mov
inc
sbb
fcmovb
mov
repz
aad
sbb
cmpsb
pop
xchg
add
sub
sub
or
rolb
jge
push
ret
push
frndint
push
cmp
data16
int3
ret
scas
lcall
test
daa
push
ds
push
mov
inc
pop
cmp
mov
dec
cld
jmp
cmpb
inc
xchg
leave
inc
sbb
push
or
aaa
xor
mov
sbb
push
rcl
inc
int3
mov
push
lods
repz
inc
mov
dec
mov
jb
pop
dec
dec
pop
inc
jl
mov
je
add
jae
test
fidivs
push
leave
jo
rcrl
mov
adc
pop
jmp
cld
cltd
int
mov
xchg
adc
iret
mov
xchg
rorl
enter
outsb
push
mov
out
sub
push
mov
movsb
lea
test
dec
cmp
sbb
cmp
push
adcb
les
pop
pop
xor
ds
and
pop
or
int3
xchg
pop
mov
xchg
xchg
mov
pushf
push
orb
add
scas
push
sbb
dec
xlat
inc
fiaddl
icebp
push
int3
jl
sub
push
cmpsl
rcrb
push
fsubs
fdivs
aad
pop
adc
lds
push
cs
push
movb
sbb
pop
push
imul
push
fnstenv
sbb
or
gs
jne
fadds
pusha
inc
lods
insl
jns
push
push
ds
bound
icebp
fisubrl
lret
sbb
jno
std
xlat
sbb
push
mov
dec
outsb
ljmp
iret
ljmp
cli
push
cld
iret
std
lret
es
jne
pop
fcoms
mov
daa
cli
inc
aam
sti
cmp
dec
aaa
jb
xor
push
push
jmp
ret
pop
cld
iret
xchg
mull
jo
int3
mov
push
sub
lds
fucomp
insb
iret
addr16
shl
mov
xor
fnsave
in
or
xchg
push
fildl
rcl
movsl
rol
les
cmp
inc
enter
dec
push
ror
pushf
sahf
ret
pop
lret
lds
and
jp
push
mov
repnz
out
fstl
inc
bnd
push
push
iret
fstl
jge
mov
jp
mov
xchg
cwtl
das
shlb
je
aad
pop
mov
in
mov
int3
inc
or
push
stc
jns
test
inc
and
lret
mov
and
sbb
push
stc
scas
lahf
pop
sahf
insb
sub
jb
cmpsb
cmpsl
ret
ds
pusha
fwait
jecxz
mov
popf
outsl
loope
fstps
ljmp
xor
repnz
inc
daa
cmpsb
pop
jno
xchg
fidivrs
aad
out
rcll
stc
dec
rol
push
aad
add
cli
test
adc
mov
loopne
fimull
iret
mov
push
inc
jl
int3
jle
int
mov
mov
pand
imul
ss
push
fsubr
inc
dec
loopne
fnstcw
xchg
xchg
ret
ficomps
sub
dec
cli
push
fildl
add
mov
fdivrs
jl
push
cmp
push
push
sub
jle
fmul
pop
rcrl
mov
push
mov
mov
jmp
int3
mov
nop
adc
fcoms
push
sbb
and
insb
xchg
jae
dec
jl
out
inc
popl
xlat
xchg
dec
daa
mov
das
mov
push
outsb
jge
aad
shrb
pop
jmp
sub
sahf
andl
inc
adc
aad
push
into
jp
ja
loopne
xlat
call
xor
mov
mov
test
sub
enter
adc
ja
repz
mov
mov
mov
inc
mov
or
in
add
fcmovu
inc
rcrl
out
into
mov
arpl
mov
push
jne
imul
adc
mov
fcoml
psubw
add
inc
imul
cmp
inc
call
dec
jle
adc
pop
add
mov
std
inc
mov
inc
add
popf
sub
adc
fsubrs
sahf
push
mov
fdivrs
jns
mov
adc
cwtl
xchg
shl
lret
sahf
scas
lock
xchg
test
mov
adc
cli
lods
fcoml
ficompl
lods
insl
and
push
sbb
cmpsb
cmp
sub
jl
mov
repz
lret
repnz
aas
jle
lds
adcb
mov
and
dec
jne
or
rclb
xchg
xlat
push
movsl
out
aam
dec
repnz
mov
aad
xor
clc
mov
push
inc
int3
adc
lret
sbb
fnsave
sbb
pushf
adc
add
push
int3
into
xor
sbb
pop
cwtl
int3
sbb
sahf
mov
sbb
jns
pusha
fmul
sbb
or
scas
push
mov
stos
inc
fimull
xchg
dec
mov
mov
add
mov
loope
pushf
les
push
sbb
push
cmc
xor
xchg
mov
pop
mov
fistpl
sbb
dec
dec
adc
rolb
aas
ret
inc
test
hlt
xor
dec
pushf
es
fadds
pushf
repnz
xchg
sbb
xor
pop
dec
xchg
mov
sub
pusha
jno
inc
ljmp
inc
pushf
ficomps
subl
push
pop
mov
inc
lret
adc
ret
ror
adc
loope
mov
pop
ficomps
dec
jns
flds
clc
mov
loope
adc
inc
inc
jl
out
lret
cmpsl
jl
cwtl
mov
fldl
fstpl
lret
dec
mov
jmp
fiadds
enter
call
and
and
pop
pop
mov
lods
jmp
pop
push
fcmovu
jp
orl
repz
lahf
mov
lret
xor
ds
adc
dec
inc
fisubs
je
jno
mov
push
aas
sahf
cmp
fcmovb
inc
push
ficomps
jne
mov
inc
std
les
ds
push
aam
ljmp
xor
pop
sub
pop
jo
fisttpll
push
fimull
imul
shll
pop
shll
shrl
dec
int3
mov
into
or
divb
movsl
fdiv
fmull
xchg
sbb
xchg
push
push
inc
into
mov
cld
pop
bound
lods
and
inc
into
out
inc
adc
mov
push
push
rcr
daa
jge
pop
leave
xchg
push
xchg
mov
jno
mov
out
shrl
fadds
leave
aas
subb
addb
data16
xchg
pushf
mov
repnz
xchg
push
test
imul
ja
rcll
and
fidivrs
jmp
cmp
sarb
icebp
mov
das
dec
inc
dec
int
icebp
rcrb
push
adc
xchg
repz
dec
add
inc
xchg
cmp
mov
rcrb
dec
dec
jno
bound
pop
mov
push
pop
std
ror
adc
dec
je
iret
mov
iret
subb
mov
into
enter
stos
inc
int
pop
sahf
cmpsb
add
ret
inc
ljmp
aam
or
dec
rorl
adc
rcl
aam
cmp
cmpsb
mov
test
dec
jecxz
cli
cmp
mov
aas
in
lods
hlt
test
ss
ljmp
push
xchg
int3
adc
jg
jno
movsb
pop
push
fdivrs
push
pushf
fists
sarb
pop
xor
movl
fs
inc
dec
mov
pop
mov
pop
cltd
call
addl
leave
xor
pop
cmp
mov
dec
add
push
xchg
cmp
push
dec
cmp
and
or
loope
mov
xor
addr16
inc
xchg
cld
notb
mov
inc
inc
test
xchg
mov
sahf
add
dec
cli
movsb
faddl
sahf
adc
xor
jne
mov
bound
je
scas
inc
mov
mov
movsl
leave
push
or
push
sub
pop
pop
jo
or
dec
aad
xor
pop
rorl
dec
inc
pop
sbb
popf
add
push
icebp
out
iret
xor
push
pushf
or
cmp
sarb
call
ficomps
push
mov
sbb
or
rol
xlat
mov
fbld
push
mov
add
xchg
movsb
aas
xor
mov
inc
add
pop
enter
mov
dec
aad
mov
repnz
push
or
divl
mov
inc
lcall
cmp
mov
sbbb
dec
imul
jl
push
jae
fistl
add
xchg
jl
in
dec
iret
clc
fistpl
mov
push
inc
pop
sti
cwtl
xor
add
rcrb
xchg
call
mov
push
pop
sbb
scas
push
fistpl
pop
adc
sbb
ror
stos
inc
mov
or
data16
and
test
loope
pop
mov
cld
out
cmp
pop
pop
fdivrp
pop
mov
push
lret
ljmp
rolb
lods
decb
cmpsb
cld
ret
inc
pop
outsb
sti
stc
push
clc
fadds
dec
test
or
pop
fnstcw
fistl
fimull
jno
stc
test
aam
rcrb
or
xor
pop
pushl
xlat
add
adc
mov
xchg
aas
jge
pop
pop
adc
in
dec
gs
mov
xlat
jo
fdiv
inc
into
es
fucom
rcl
mov
ret
jecxz
xchg
jmp
test
nop
xor
enter
add
adc
jae
cltd
cmp
xchg
mov
popa
xchg
ret
enter
fcmovu
mov
repz
jmp
xchg
jg
filds
pop
movsl
rolb
or
xchg
daa
cs
aaa
pop
mov
pop
sub
adc
fcomps
test
fadds
push
call
jo
stc
stc
cwtl
fisttpl
push
popf
and
ljmp
inc
inc
cmp
adc
insl
pop
add
rclb
loopnew
ret
hlt
aam
fiaddl
movsl
fxtract
fdivrs
cwtl
xlat
xor
ret
jge
mov
adc
loope
xchg
dec
das
cmpsb
push
xchg
mov
push
xor
dec
inc
leave
mov
int3
int3
push
push
pushf
pusha
arpl
ret
dec
cld
pop
lahf
or
sbb
jae
repnz
popa
hlt
shrb
int3
push
inc
pop
mov
push
pop
and
pop
test
shrb
ljmp
mov
rcrl
iret
and
orl
popa
jbe
pop
xchg
mov
adc
fldcw
shl
jns
mov
xchg
cs
sahf
sub
data16
repz
insw
mov
dec
add
xchg
jp
shlb
or
mov
into
push
jno
call
loop
inc
sbb
push
pop
add
movsb
push
xchg
sbb
mov
fidivs
fsubrs
scas
inc
or
aad
insb
mov
sub
fistl
or
aad
lds
addl
stos
ret
scas
ret
sub
sub
push
push
aaa
mov
xor
xchg
adc
mov
pop
scas
pushf
cmp
roll
pop
out
sti
jle
sub
sbb
mov
push
xor
les
fildl
dec
fimuls
inc
push
mov
cli
xlat
push
dec
ds
int
clc
pushf
jae
sarb
push
fnstenv
sbb
les
ficomps
ds
arpl
stc
push
ficoml
ret
data16
inc
jmp
sbbb
sub
lods
mov
leave
dec
inc
mov
jp
fstpt
fcomps
push
movsb
out
add
scas
cmp
fcmovu
inc
inc
jb
jno
cmp
jg
push
out
imul
adc
shrb
dec
mov
inc
xchg
roll
inc
push
fcoml
popf
mov
int3
push
aas
push
scas
xchg
test
test
pop
dec
lret
popa
mov
xor
inc
mov
sub
cmp
pop
lahf
ret
mov
inc
test
aad
fadd
jge
cmp
std
ror
inc
sbb
lods
jle
pslld
test
lret
shll
dec
or
xchg
xor
or
or
jno
fcomp
cmovnp
outsb
dec
out
push
adc
adcb
pop
int
lret
jl
je
jne
dec
aad
fildl
leave
aam
push
fdivrs
stos
cmc
push
push
lods
lods
inc
cmovb
roll
popf
lds
and
leave
dec
dec
call
sbb
pop
aam
rcrb
add
jl
inc
dec
popa
pop
jno
jmp
pop
inc
cmp
fsubs
dec
adc
sti
cmp
xchg
into
imul
mov
mov
movsw
pop
xor
fstps
mov
fisubrs
or
inc
aas
mov
in
pusha
rol
add
popa
ja
clc
loope
aas
aam
fimuls
dec
adcb
aam
enter
sbb
mov
pop
dec
fmuls
mov
cli
cmpsl
dec
pop
inc
cmp
mov
add
jge
mov
push
inc
dec
sbb
int3
pop
jo
push
inc
aam
cli
cmp
lds
scas
pop
jle
xor
inc
sub
mov
popa
rol
jne
aad
idivl
inc
adc
fdivrs
into
inc
add
pop
push
adc
adc
cmpsb
pop
stos
jmp
es
into
dec
mov
loope
cli
jge
adc
insb
inc
out
int3
or
pop
int3
sahf
jle
and
mov
pop
adc
cltd
mov
scas
push
arpl
mov
sub
push
aas
adc
cli
rcr
dec
mov
pop
xchg
clc
dec
inc
leave
add
adc
dec
cmp
inc
shlb
fistl
aad
outsb
sahf
fcmove
loopne
pop
ret
popf
std
xchg
lock
mov
es
lds
test
movsl
or
popf
ljmp
int3
int3
cmp
movsb
pop
data16
cmp
xor
pop
push
dec
inc
scas
dec
mov
mov
std
xchg
mov
fcmovne
int
xlat
lret
into
push
xchg
aad
jecxz
fsubs
cmc
ret
xchg
pop
jge
jle
or
movsl
int3
jmp
push
jg
mov
jl
pop
cmp
xchg
lret
fcoms
subb
enter
sbb
inc
or
daa
aad
lahf
ja
sbb
loopne
iret
in
nopl
pushf
fimull
movsb
inc
xchg
aaa
xor
inc
fcomps
fadds
or
dec
nop
xor
inc
loope
int3
mov
mov
adc
jb
dec
sti
rcrb
fcom
neg
sarb
dec
shll
xchg
push
addr16
pop
jmp
xor
icebp
push
dec
push
fdivl
fistps
mov
gs
ret
cld
mov
fcompl
out
adcb
and
adc
divb
test
pop
enter
xor
popf
dec
xor
dec
imul
loopne
lret
sbb
push
leave
mov
out
push
daa
adcb
shrl
jae
imul
cld
jae
lods
or
sbb
shrb
xor
rcrb
mov
aam
fldt
mov
in
cwtl
inc
mov
jge
dec
mov
or
inc
dec
inc
in
cmp
fmuls
or
scas
lods
jecxz
lods
pushf
adc
inc
sbb
sub
ret
ja
mov
push
sarl
aad
mov
fiaddl
pop
push
mov
lods
mov
or
fsts
mov
adc
push
jle
lods
faddl
in
mov
push
in
test
mov
fldpi
insl
pop
outsl
cld
into
int
sahf
in
sahf
pop
mov
xchg
les
xor
mov
dec
in
mov
repz
pop
jne
pop
ret
dec
aam
xchg
push
mov
nop
cld
rcrb
mov
xchg
int3
ret
mov
daa
add
shrb
xchg
rol
push
fldlg2
rol
test
mov
jno
xchg
push
dec
push
fsubrs
pusha
icebp
cmp
inc
cmp
in
cmp
mov
fmul
jne
mov
lret
int3
push
mov
lods
fisubrl
push
push
dec
push
pop
int3
mov
jp
adc
jmp
inc
cmp
mov
iret
inc
fidivrs
loope
stc
adc
into
mov
mov
mov
inc
dec
sub
inc
jmp
imul
mov
fcmovbe
dec
lods
cmp
into
pop
int
and
mov
mov
negb
leave
mov
out
jecxz
lds
addb
rep
xlat
fidivrl
or
xchg
mov
inc
mov
xchg
jno
dec
mov
pop
lcall
imul
or
retw
mov
dec
inc
add
pushf
lock
push
cmc
jl
in
cmpsb
ret
push
repnz
mov
ret
enter
push
aad
shlb
bsr
repnz
inc
call
loop
clc
testb
adc
xor
and
stos
shll
mov
pop
adc
arpl
push
inc
pop
test
jne
call
dec
scas
and
cmp
insb
int3
xchg
call
xchg
in
sub
shrb
aas
pop
jmp
lret
fstp
iret
sub
add
daa
popa
faddl
jp
xor
mov
xor
repnz
pop
dec
into
stos
dec
fidivs
sar
pop
sub
pop
or
mov
cwtl
ds
int3
aas
xor
aad
into
adc
mov
mov
pusha
shlb
fsub
inc
inc
add
dec
sbb
add
sahf
nop
mov
leave
sti
arpl
xchg
aas
mov
out
dec
enter
cli
cmp
stos
adc
cmovle
dec
mov
inc
mov
shll
jl
hlt
mov
rcr
sarb
stc
ffreep
movsb
dec
inc
loop
inc
pop
xor
out
call
pop
cmp
and
loope
push
or
cmpsb
lret
shrb
mov
mov
fcompp
imul
inc
pop
fimuls
cwtl
mov
add
pop
dec
mov
pusha
lcall
mov
add
cmovle
into
inc
add
hlt
add
mov
xchg
into
int3
or
jecxz
mov
xchg
ror
xlat
dec
jne
dec
into
cmp
inc
lret
pop
ficompl
mov
aad
mov
aas
sarl
pop
shr
jne
push
inc
push
jle
dec
lret
int3
cld
lret
es
out
fildl
pop
pushf
mov
xorl
clc
aas
rcrl
fcmovb
mov
out
roll
dec
aas
aad
fidivl
ret
jno
inc
lret
mov
fcom
xchg
scas
aaa
mov
cmp
cmp
test
dec
pushf
cmpsl
adc
adc
seto
mov
ret
pop
dec
push
push
mov
and
mov
cs
jle
addb
push
pushf
push
mov
lea
mov
fisubl
mov
jle
leave
sahf
out
iret
imul
dec
dec
add
xchg
dec
xchg
inc
out
adc
nop
and
inc
push
dec
stc
fs
jp
xchg
add
jle
mov
int3
dec
in
enter
or
mov
pop
xor
ficoml
lcall
push
call
mov
clc
cltd
nop
fst
sarb
mov
push
gs
mov
xchg
jl
push
pop
push
mov
cmp
paddusb
cltd
mov
inc
int3
xlat
cld
push
cmp
pop
jle
xor
nop
fs
hlt
inc
aad
sbb
mov
sub
fsubr
nop
mov
jmp
imul
xchg
fcmovu
out
ficompl
mov
dec
int3
add
sti
imull
and
fcoms
jecxz
push
push
cmpl
iret
sbb
dec
call
cmp
adc
dec
push
popf
cmp
inc
dec
sbb
leave
scas
xchg
push
ds
cli
cmp
fchs
add
jae
les
jecxz
push
imull
push
or
pop
ficoml
outsl
pop
adc
add
leave
cmp
sbb
jae
pop
inc
jo
loop
lret
pushf
jmp
fidivrs
aad
push
mov
cmc
sbb
mov
and
pop
jge
clc
xor
pop
aaa
or
lcall
pop
out
sub
sti
int3
es
sbb
jmp
pop
rolb
test
dec
cld
fcoms
orb
int3
mov
sar
jbe
cli
mov
rol
pop
negl
mov
dec
inc
or
dec
jp
cmpsl
aas
scas
mov
mov
hlt
cmp
jae
insb
loope
xlat
push
cmpsl
pop
fmull
mov
pop
rorb
inc
sbb
mov
lds
cld
push
aad
inc
add
enter
xchg
lcall
inc
lods
and
sahf
or
jne
xor
fnstenv
insl
xchg
loop
add
mov
mov
sub
aas
add
icebp
pushf
hlt
cmp
mov
imul
arpl
pop
imul
inc
add
test
scas
pop
sub
ret
aad
fldl
popf
lds
iret
nop
dec
fdiv
inc
pushl
mov
out
push
push
aad
sub
lods
push
int3
sarb
jmp
ds
xchg
test
mov
notl
xchg
into
lds
mov
cld
popa
inc
enter
mov
mov
cltd
jns
dec
push
jge
cli
fcoml
xlat
into
xchg
insl
gs
jmp
pop
aam
xor
out
popa
js
jle
jge
push
adc
ffreep
ret
pushf
adc
mov
out
out
sarb
in
push
inc
inc
adc
outsl
arpl
sbb
or
movsl
adc
les
mov
dec
cwtl
adc
jo
push
xchg
int3
mov
jbe
fnsave
dec
cmc
fstps
fnstenv
iret
sahf
pop
mov
adc
fcmovnu
shlb
xchg
push
fcom
test
fxch
aad
rcrl
orl
mov
sbb
mov
jbe
mov
fistpl
dec
cmp
jle
mov
outsl
mov
pop
fs
mov
test
pop
sbb
dec
mov
insl
int3
rcr
fadd
sub
or
jo
mov
aas
mov
call
movsb
pop
es
decl
loope
mov
rcll
lret
or
mov
std
int3
test
xor
xchg
pop
xchg
enter
aas
icebp
insb
dec
pop
fmuls
inc
ret
mov
sti
or
aad
push
mov
cmpsb
pop
aas
fidivl
out
dec
adc
ljmp
mov
call
lock
fdivr
cmp
clc
mov
das
xchg
inc
enter
jge
ljmp
inc
cltd
mov
and
pop
std
mov
les
ja
xchg
ljmp
sbb
xor
or
sub
inc
into
cmp
fsubs
fcmovnbe
aad
cmp
iretw
inc
xchg
jp
push
sbb
lret
sbb
adc
sub
aad
jp
pop
sbb
lahf
dec
mov
mov
mov
add
jmp
out
push
mov
jns
mov
scas
jae
fdivs
clc
push
aam
int3
and
outsl
out
cwtl
xchg
and
inc
ret
add
sub
push
push
pop
pushf
repz
xchg
mov
mull
pop
lret
leave
ret
cld
ljmp
popf
pop
fsubr
rcr
shlb
push
mov
call
movb
dec
addr16
hlt
cltd
rcrb
enter
xchg
into
pop
mov
pop
lret
lds
xlat
inc
ljmp
pushf
ficoml
icebp
or
add
xchg
and
inc
or
or
inc
jge
dec
imul
jg
aam
call
push
push
jae
popa
pop
into
inc
out
fdivrs
shlb
inc
pop
cmp
sahf
sbb
pop
inc
mov
sub
ret
pop
dec
insl
push
mov
call
shlb
sub
dec
clc
jne
insb
dec
mov
hlt
pusha
push
jmp
push
push
jmp
orl
jl
cmp
outsb
inc
pop
orb
je
clc
dec
pop
pop
sub
xchg
xchg
enter
sub
sti
jl
and
fidivrs
or
mov
leave
iret
dec
adc
jge
cmc
mov
push
xor
lods
in
out
and
push
pop
insl
fcomip
sub
push
inc
inc
iret
mov
iret
pop
inc
jle
dec
ss
mov
and
rolb
imul
jp
mov
ds
push
mov
les
pop
lret
sub
fimuls
push
mov
nop
jecxz
ja
pop
mov
imul
mov
dec
inc
into
lods
dec
pop
push
pop
or
pop
mov
sahf
ja
int
pop
push
ret
imul
sub
xor
aad
daa
leave
sahf
jae
out
mov
sbbl
ds
push
cltd
rcrb
sti
psadbw
fnstenv
divb
ret
out
shr
clc
imul
mov
sarb
jl
cmpsb
pop
jge
pop
ds
shlb
insb
inc
movl
inc
repnz
lahf
xchg
cmp
mov
mov
adcl
adc
cmpsl
movsl
ret
mov
jne
cmp
scas
dec
es
dec
aam
xchg
sti
outsb
stc
gs
inc
int3
cwtl
jle
daa
dec
test
lret
sti
cmp
mov
jp
jmp
aad
aaa
xchg
lret
pop
test
cmp
in
test
test
rorl
cmp
fstpl
xor
sbb
sahf
adc
push
addb
outsl
iret
jae
dec
into
pushf
mov
xchg
jmp
ficomps
sahf
push
dec
mov
shr
sahf
cld
push
cld
lret
pop
mov
pop
les
inc
out
xchg
pop
pop
inc
cmp
lret
aad
xlat
mov
out
mov
arpl
insb
pop
pop
jl
pop
outsl
jge
test
iret
out
dec
push
aad
frstor
pop
ds
xlat
ficoml
dec
sub
sbb
scas
fisttpl
outsb
sub
shrl
inc
or
enter
fstpt
mov
xchg
ds
xchg
shlb
movsb
int3
inc
jb
pop
into
stos
jle
pop
mov
aas
sbb
jmp
dec
push
mov
repz
leave
pop
mov
sbb
xchg
xchg
inc
fdivrl
addr16
inc
repnz
dec
pop
pop
mov
sbb
sbb
movsl
aad
jle
push
aaa
stc
shlb
std
xchg
lock
pop
je
sahf
push
repnz
cwtl
enter
mov
int3
nop
push
sahf
sbb
in
out
pop
jecxz
dec
data16
or
shl
stos
pop
push
dec
dec
push
leave
cmp
lcall
or
mov
jmp
mov
outsb
mov
std
cmp
andl
into
sbb
cmpsb
cmp
test
out
mov
rcl
rcl
outsb
pushf
in
mov
jecxz
lds
or
pop
xchg
std
imul
dec
mov
or
sbb
inc
mov
xor
in
test
mov
inc
sti
xor
and
mov
jo
fsubrs
and
int3
ret
jmp
jmp
jno
lahf
shrb
pushf
pop
lret
movsl
int
repnz
dec
aad
pop
arpl
or
daa
test
mov
enter
sub
xchg
fcmovbe
fldcw
out
push
jne
push
subl
dec
rclb
jle
dec
fmulp
sbb
push
adc
bound
std
cmpsb
repnz
mov
addr16
faddl
pop
jb
lcall
sarl
filds
pop
jmp
jge
rorl
cmp
inc
ss
sti
loopne
into
cwtl
ror
jmp
fcmovu
dec
push
outsb
adc
lahf
push
sahf
or
daa
add
dec
leave
aam
aas
dec
or
xchg
scas
sbb
and
mov
mov
sarl
in
dec
inc
push
fisubrs
gs
xor
icebp
inc
insb
dec
imul
xchg
xor
in
flds
aam
ret
cmp
shll
mov
lock
aas
push
adc
decl
ljmp
addr16
pop
aam
test
dec
xchg
sbb
mov
roll
js
or
pop
inc
fcoml
iret
fiaddl
pop
xchg
fiadds
dec
mov
cmp
aaa
fdivrl
xchg
imul
shlb
fcmovbe
rcrb
inc
xor
jge
mov
pushf
dec
push
mov
fisubl
lret
jo
bswap
jl
lcall
sbb
dec
fcmovnbe
xor
adc
ds
addr16
rcl
jmp
leave
inc
aaa
stc
add
and
clc
in
inc
gs
into
fcoms
outsb
push
xchg
lods
in
inc
ficoml
aaa
mov
pop
std
out
pushf
push
mov
mov
mov
pop
iret
jmp
jmp
dec
int
push
mov
ror
inc
cmp
and
add
stos
repz
repz
mov
xchg
aam
dec
adc
sub
pop
mov
or
clc
jle
jae
mov
mov
ja
push
inc
inc
fmuls
fimull
xchg
inc
add
rol
dec
pop
add
mov
pop
jb
mov
cltd
test
pop
xor
iret
push
scas
mov
or
iret
out
mov
shl
xlat
mov
pop
sahf
cmp
push
dec
rcl
jecxz
inc
mov
add
int
jne
xor
les
fcompl
ret
mov
sbb
lahf
push
jge
push
scas
int
dec
pushf
mov
out
clc
add
jge
rorb
lahf
dec
sahf
scas
adc
mov
mov
pop
imul
push
js
jno
adc
nop
movsl
lret
or
rcrb
inc
push
dec
push
push
dec
jle
dec
cmp
lods
cmp
call
cmpsb
fmul
or
jp
ficoml
stc
add
cwtl
ficoml
push
insb
out
push
lret
nop
ds
in
xchg
jg
push
jge
roll
aad
mov
jne
pop
scas
and
mov
jo
mov
setge
mov
aaa
je
inc
sar
mov
xor
sub
mov
scas
das
fistpl
pushf
adc
or
xchg
aas
xchg
enter
mov
leave
pop
fwait
cmp
pop
data16
add
mul
adc
test
jb
mov
rcr
mov
sbb
insl
xchg
sub
rcr
int
mov
mov
dec
cmp
mov
bound
movsl
inc
push
pop
into
insl
jb
mov
in
imul
daa
loopne
addr16
mov
inc
dec
cwtl
jl
leave
push
dec
push
cmp
out
sbb
shrl
scas
iret
ret
and
xchg
dec
push
fimuls
jl
sub
fisttpll
xlat
sub
jne,pt
mov
cmpsl
inc
int3
or
mov
mov
fcmove
mov
xchg
fdivr
and
dec
movsl
xor
pop
dec
inc
adc
mov
gs
mov
inc
inc
cs
js
inc
pop
rol
push
dec
xchg
aam
fadds
adc
inc
pop
cli
mov
fadd
sahf
xor
out
mov
into
imul
sub
int3
lret
fmull
les
roll
jb
jg
mov
in
and
mov
push
mov
sub
cli
jge
or
roll
add
sub
and
shrl
jbe
push
push
outsb
adc
and
mov
push
sbb
pushf
push
cs
mov
stos
inc
push
in
ret
mov
iret
into
or
sbb
push
ljmp
bound
xchg
dec
push
sbb
cltd
scas
adc
mov
ds
cmpsl
jl
mov
movsl
rcr
pop
in
or
aad
pop
pop
add
outsb
mov
cmp
testb
sbb
cli
daa
fsubs
ret
iret
jge
adc
fmuls
into
xor
clc
in
dec
insb
scas
call
cmp
mov
mov
mov
aas
sahf
imul
inc
push
xchg
leave
pop
ja
xor
aaa
mov
push
jge
jne
fsubl
inc
or
cwtl
add
loopne
dec
ds
and
rol
out
push
mov
xchg
dec
push
mov
rcrb
jle
enter
clc
shl
push
mov
mov
aad
adc
mov
adc
mov
xlat
push
test
out
enter
adc
jp
pushf
sub
insb
mov
lods
jg
pop
or
mov
int
mov
push
outsl
push
xor
mov
inc
fcmovb
pop
int
or
pop
mov
xor
or
dec
aam
mov
xchg
jbe
sti
mov
adc
xchg
mov
xchg
cld
xadd
xchg
push
mov
dec
dec
xor
iret
int
nop
add
movsl
cmpsb
dec
mov
aas
push
xchg
repnz
push
jmp
repnz
sub
inc
movb
mov
insb
sarb
in
xor
shlb
int3
leave
in
pop
sbb
scas
bound
fiaddl
fistl
fcomps
mov
lret
mov
sahf
jne
addr16
in
inc
dec
shrb
lcall
pop
dec
popa
imul
pop
shld
fidivs
inc
push
pop
insl
inc
mov
adc
inc
sbb
inc
dec
dec
loope
sbb
mov
inc
sbb
loope
cmp
cmc
mov
pop
ret
nop
fcomps
dec
pop
push
into
pop
dec
sti
pop
cmp
leave
cmp
dec
es
adc
xchg
cmp
sub
fsubl
fidivl
ret
test
sub
bsr
gs
inc
push
jmp
aad
push
ficoms
jmp
dec
push
mov
cs
pop
dec
fildl
in
int3
dec
dec
testl
mov
movsl
outsb
repnz
inc
cmp
scas
push
fdivrs
sbb
aas
int3
jae
mov
pop
push
aam
push
inc
push
dec
sarb
decl
sub
and
mov
mov
popf
push
adcb
or
dec
and
fcomps
aaa
js
std
scas
inc
and
xchg
pop
sbb
cltd
jl
insb
or
mov
ret
sahf
pop
sbb
and
ds
adcb
sbb
mov
out
xlat
les
xchg
out
mov
pop
rcrb
aam
shlb
dec
pop
shrb
fcoms
inc
sbb
inc
adc
jg
aad
into
or
mov
pushf
mov
cmovle
lock
in
add
push
pop
lods
and
cmp
mov
sahf
addr16
in
cmp
xchg
aam
int3
add
cmp
iret
pop
jae
les
mov
adc
rcll
mov
ret
aad
push
jge
push
cmpb
xor
mov
stc
jbe
enter
cwtl
pop
jo
lret
das
lret
pop
sub
das
dec
sbb
es
mov
loopne
inc
nop
or
inc
leave
mov
xchg
adc
sahf
inc
loope
ret
xor
mov
test
rcl
inc
lock
mov
dec
push
into
fninit
add
jae
lcall
ljmp
scas
xchg
pop
pop
sub
das
cld
or
fdivrl
mov
inc
into
xchg
fdivrl
inc
in
sub
inc
sub
rclb
push
test
fmuls
popa
enter
mov
dec
cmp
mov
xlat
pop
sbb
xchg
les
xchg
cmp
or
icebp
dec
cmp
rclb
ror
mov
outsb
mov
enter
pop
sub
into
icebp
stc
mov
lods
mov
or
int3
inc
sahf
mov
js
aam
nop
xchg
mov
mov
mov
ret
in
pushw
or
int3
dec
aad
sahf
mov
pop
cmc
fucom
pushf
dec
int3
pop
cmp
dec
jo
or
pop
lret
aas
out
cmpsb
stos
sbb
push
aad
std
push
mov
and
inc
inc
addb
std
enter
mov
inc
xorb
xor
aad
pop
sarb
pop
mov
cmp
leave
sahf
cmpsl
xchg
mov
sarb
and
pop
jmp
ljmp
movl
dec
adc
shlb
mov
in
ljmp
fistl
pop
add
jecxz
aad
pop
mov
data16
push
rorb
mov
inc
inc
lds
mov
push
jg
push
iret
adcb
jne
les
push
cmp
clc
mov
pop
cli
in
fdivrs
inc
in
cmp
xchg
dec
fcmovbe
xlat
fsts
jl
add
ds
mov
mov
pop
and
pop
cld
clc
add
pop
ljmp
mov
pop
xor
xchg
adc
lret
rcr
push
ds
sahf
xor
jb
or
mov
leave
and
add
aam
push
pop
jle
xchg
ffree
fisubl
inc
and
ret
bound
push
mov
pop
ljmp
dec
stos
outsl
and
mov
add
and
ljmp
clc
loop
sub
outsb
sarb
scas
mov
pop
xchg
pop
sub
xchg
jne
inc
or
sub
mov
cmp
test
rcrl
pop
fnstcw
ja
ret
clc
in
aas
shlb
inc
andb
sub
ret
mov
inc
cltd
ljmp
mov
inc
jmp
inc
mov
sub
push
lret
scas
pop
mov
lea
cld
int3
ret
mov
mov
ljmp
aaa
inc
ficoml
xor
std
rolb
cmp
adc
int3
xchg
sub
pop
inc
ljmp
mov
loop
add
clc
or
leave
sbb
fwait
push
sbb
nop
shll
hlt
xchg
xchg
cmp
fsubrp
cltd
fcompl
insl
mov
mov
dec
sbb
pop
ret
aaa
xor
movb
daa
adc
aad
dec
pop
sbbb
fcmovbe
rclb
ds
leave
into
test
inc
cmp
fcmovb
jle
test
lcall
xchg
add
scas
lret
fisttpl
sub
mov
jno
pop
into
fsubp
rcrb
mov
push
pop
mov
lret
lret
or
push
addb
sbb
jno
fcomps
addr16
sbb
int
sub
pop
es
decb
test
pop
rclb
dec
adc
into
sbb
fisttpl
dec
xchg
mov
mov
je
jne
roll
xchg
push
add
add
mov
sub
lret
lret
repnz
repz
movl
lret
jmp
inc
cli
xor
hlt
mov
rol
rolb
cwtl
push
ret
push
push
push
in
xlat
jbe
inc
iret
push
mov
xchg
testl
mov
pop
ret
rclb
push
push
pop
movsl
iret
iret
mov
addl
pop
in
dec
ret
enter
xlat
scas
adc
pop
push
push
dec
mov
xchg
or
pop
and
sbb
mov
pop
jno
pop
js
int3
push
dec
sub
aad
mov
out
mov
pop
xlat
lds
daa
aam
hlt
call
leave
repz
pop
sahf
hlt
sbb
fcmovnbe
aam
add
cmp
xor
push
cld
sbb
iret
fcomi
xchg
fdivrp
rcr
sub
dec
inc
pop
fcomps
imul
inc
sub
int3
mov
fisubrs
jle
mov
int3
xor
xlat
cmp
fcmovu
jmp
scas
jne
cmc
xor
mov
adc
add
inc
ret
pop
mov
loopne
pop
in
ret
in
testl
dec
out
popf
mov
jbe
push
int3
sbb
aad
test
leave
fdivrs
xor
subb
fildl
es
aad
xchg
or
sahf
aad
mov
dec
cli
adc
popa
addr16
pop
mov
pop
push
std
pushf
daa
out
inc
std
cmp
lahf
inc
scas
pop
sbb
sub
cmp
das
popa
inc
sbb
finit
jge
xor
adc
push
int3
sbb
sbb
push
cltd
xchg
call
ret
mov
mov
jmp
int
ret
repnz
in
lock
mov
scas
push
dec
iret
out
mov
dec
mov
mov
xor
jb
sub
enter
loop
dec
neg
popf
jle
sub
mov
les
mov
aas
xorb
mov
inc
fimuls
mov
aad
inc
and
or
movsl
into
divb
mov
ljmp
enter
test
ret
shlb
jge
or
aam
dec
cli
mov
sarl
in
repz
mov
dec
inc
push
int
adc
inc
iret
mov
xor
and
jl
jg
mov
enter
mov
inc
sti
push
lds
jge
insb
xor
insb
enter
repnz
or
aad
jno
dec
dec
enter
shl
mov
iret
sbb
cmp
fsubr
fmulp
and
and
push
jge
fiaddl
jbe
xchg
xchg
jge
sbb
lock
in
lret
sub
mov
dec
cmpsb
push
clc
jns
push
sbb
ret
xchg
xchg
inc
sysret
ljmp
out
or
adc
cmp
jns
rorb
inc
mov
pop
fiaddl
fiadds
lods
pop
inc
addl
lds
dec
fnstsw
repnz
mov
xchg
fnstsw
xchg
pop
in
aad
aas
in
cmp
push
adc
jl
pop
inc
movsl
lret
out
sbb
xchg
cld
fidivrl
popa
add
cs
test
fidivrs
push
sub
mov
cmp
inc
ret
mov
push
neg
hlt
jl
in
popa
adcb
fs
daa
ret
mull
je
cwtl
pop
pop
jge
hlt
pop
rorb
xchg
mov
test
lret
jl
rcrb
dec
ficomps
sub
stc
cmc
das
xor
into
in
xor
lods
mov
stos
aad
sarb
mov
fisttps
inc
call
lret
sbb
push
sarl
push
outsb
push
call
mov
sahf
sbb
insl
int3
std
incl
fiadds
stos
ret
mov
les
in
inc
pop
mov
jl
adc
xchg
lret
cmp
popf
bound
xchg
mov
fwait
xchg
fnstsw
stc
sub
movsl
movsb
fcoml
cmp
nop
cmpl
pop
mov
fcoml
sbb
adc
cmpsb
sub
dec
scas
lods
inc
lds
push
mov
rolb
mov
pop
inc
sbb
ror
or
repz
mov
int
and
fdiv
mov
into
fcoms
mov
pop
mov
or
int3
pop
sahf
xchg
sbb
aaa
push
aas
fdivrs
into
mov
stc
jmp
inc
bnd
mov
test
dec
stc
das
dec
movsl
and
lods
jns
mov
mov
rclb
push
in
popf
in
xchg
stos
loopne
ficoml
dec
jmp
cwtl
int
in
dec
fildl
mov
clc
mov
push
lds
dec
pop
inc
mov
pop
sub
insb
add
fcoms
fmul
mov
push
add
scas
mov
ror
xchg
inc
pop
jl
inc
inc
push
ljmp
test
xchg
int3
shlb
xchg
int3
aas
js
fcompl
aad
cwtl
outsb
cmp
in
inc
xchg
add
in
or
icebp
iret
pop
dec
pop
dec
pop
add
aam
mov
pop
fstpl
sub
push
xlat
clc
cmc
adc
pop
test
push
mov
js
jge
rorb
cmpsl
aas
jns
inc
pop
sbb
pushf
jne
loope
shl
fcomp
adc
dec
scas
test
mov
dec
cltd
bound
iret
shlb
dec
mov
adc
dec
fiaddl
sub
enter
nop
pop
sbbl
lahf
ret
dec
and
mov
jno
nop
or
push
test
mov
add
add
aas
mov
les
das
mov
adc
adc
dec
mov
mov
pop
ret
jbe
xchg
out
aad
jg
mov
enter
mov
stc
fcoms
mov
test
mov
sbb
movsb
mov
push
rcl
cmpsl
add
dec
pop
daa
push
pop
adc
enter
pop
call
dec
add
dec
xchg
insb
sbb
xchg
push
cmp
hlt
stos
add
pop
push
dec
or
test
fcomps
sar
rcrb
repz
push
fildll
pop
jmp
in
push
ss
or
aas
sub
pop
jae
nop
ret
jg
leave
dec
pop
sub
pop
jae
xor
add
fdivl
pop
sbb
xlat
fidivl
jae
pusha
ficompl
xchg
xor
mov
clc
mov
push
movsl
repnz
faddp
sbb
mov
pushf
les
inc
push
cmp
pop
pop
call
leave
mull
mov
push
lods
and
out
mov
pop
inc
xchg
test
jg
inc
dec
fcompl
dec
xchg
cmp
imul
mov
ret
fcoms
push
iret
nop
cwtl
push
shl
inc
dec
dec
adc
adc
push
cs
sbb
dec
ret
js
inc
dec
int3
pop
adc
fistps
stos
jl
dec
fnstenv
sub
fdivrs
fs
add
rcll
xlat
cmc
jne
jl
cmpl
adc
push
rcl
pop
dec
inc
xchg
test
dec
pop
iret
jle
cmp
adcl
xlat
les
adcb
aad
mov
cmp
fwait
stos
xor
fstpt
int3
pop
movsl
mov
movsb
shlb
aam
fstpt
cmp
aad
enter
movl
stc
add
es
ds
fcmove
xchg
push
push
mov
adc
xchg
lret
sbb
in
or
sbb
leave
adc
cmp
es
pop
cld
jp
insb
int
mov
xlat
test
inc
fldl2e
cmp
test
test
jecxz
dec
xor
adc
sti
inc
in
mov
push
inc
fcmovnb
fmuls
inc
sbb
movsl
inc
cmpsl
rcr
inc
sahf
push
sub
xor
sbb
push
leave
ds
dec
test
inc
frstor
out
aas
ds
pop
add
stc
xchg
adc
and
sti
fdivrs
fcmovbe
das
out
dec
roll
sub
pop
ss
pushf
icebp
lds
test
mov
dec
dec
movsl
inc
jno
push
and
iret
sub
test
jp
mov
inc
push
mov
dec
je
aad
mov
sub
mov
jns
int
lods
push
sahf
ret
xchg
les
in
rorb
inc
dec
dec
aam
lods
fdivs
dec
test
push
mov
fcmovnbe
negb
push
cmp
push
push
ljmp
pop
inc
int3
adc
pop
sbbb
push
or
jne
repz
pop
pop
mov
jmp
out
inc
cli
jmp
jl
mov
fcoms
fldcw
mov
cwtl
fcmovbe
xchg
push
inc
add
fistpl
sahf
call
sahf
in
inc
fcoml
and
jle
xor
pop
iret
lret
xlat
jge
push
loope
lds
enter
pushf
mov
push
pop
mov
pop
pop
mov
imulb
jge
push
jge
sahf
out
ret
dec
out
inc
inc
xchg
in
enter
mov
push
inc
ds
pop
popf
push
mov
cli
lods
fldcw
inc
pop
fstl
sbb
inc
fwait
movsl
shlb
fs
mov
mov
out
or
in
push
ss
and
js
scas
push
out
lds
jl
sub
or
aam
into
ds
movsb
and
cmp
mov
lcall
imul
test
mov
pop
rcrb
xchg
sub
inc
push
sbb
xor
dec
jbe
inc
pop
cmp
dec
hlt
and
xor
jle
addb
hlt
bound
in
sbb
pop
pop
ds
imul
into
stos
mov
lret
ret
icebp
add
jmp
sar
inc
aad
xchg
mov
movl
scas
movsl
aad
xchg
dec
pop
push
push
push
hlt
enter
hlt
mov
jl
mov
push
fstps
push
aas
into
pop
mov
jne
and
inc
add
push
es
jp
mov
stos
inc
jno
pop
out
ljmp
out
iret
jne
push
inc
jae
int3
inc
cmp
decl
ret
mov
xchg
dec
ret
xchg
into
sub
cmp
mov
jae
sub
ret
pop
fcmovb
jmp
loopne
push
outsl
gs
sarl
out
in
dec
clc
inc
xchg
cli
sti
sbb
shlb
jg
ds
jge
push
insl
mov
jmp
mov
adc
pop
cmp
pop
cld
int3
jne
es
mov
pop
ljmp
sbb
subb
les
adc
cs
rclb
fnstenv
inc
testb
jmp
shll
leave
cld
arpl
sub
inc
dec
dec
inc
xchg
cltd
jl
mov
sbb
dec
mov
or
std
ffreep
pop
pop
ret
mov
fcompl
dec
stos
into
std
lods
pop
rol
push
pushf
lret
pop
fstpl
xchg
adc
rcl
ljmp
or
mov
adc
subb
mov
dec
push
jae
loopne
aam
sub
dec
pop
out
into
aam
adc
xchg
rolb
pop
into
adc
dec
roll
outsb
push
scas
addb
dec
mov
push
add
pop
fdivrl
inc
pop
es
dec
jne
sar
jge
loop
pop
test
mov
aam
push
hlt
sbb
shlb
into
ret
je
inc
aad
mov
rcrl
jl
lds
inc
shr
ds
jmp
mov
fidivrl
into
icebp
sub
fisttpl
jl
daa
bound
inc
ficompl
dec
sub
orb
inc
inc
lods
push
movsl
fmul
rcll
pushf
dec
addb
out
imul
imul
cwtl
inc
sahf
xchg
inc
or
or
shrl
das
clc
or
lods
sarb
mov
mov
mov
mov
inc
mov
stos
int3
jne
loopne
lret
mov
enter
adc
es
aad
push
sbb
sahf
sbb
push
aam
pop
cmp
js
popa
out
pop
jle
jns
mov
rolb
push
push
mov
jge
dec
inc
popa
mov
xchg
int
adc
fs
jo
daa
leave
lret
fcmovbe
jge
popa
dec
hlt
jecxz
mov
notb
mov
lret
mov
sub
stos
dec
int
jge
shll
inc
rol
out
adc
xchg
addr16
fmul
lods
add
cli
jb
xlat
sti
scas
ficompl
frstor
mov
inc
add
dec
dec
push
loop
fimull
out
std
push
aad
push
out
xlat
call
fiaddl
pusha
pop
stc
ret
pop
fcomps
andb
nop
jnp
and
int
nop
push
xchg
addb
dec
arpl
inc
fdivrs
inc
sbb
sub
jl
aas
shlb
iret
pop
jne
movsb
inc
les
mov
inc
mov
aas
jle
sbb
mov
lcall
cmpsl
fisttps
add
out
aad
les
dec
aam
cmp
mov
jo
iret
call
out
ljmp
fdivrl
or
data16
jge
mov
pop
leave
jae
in
cmp
adc
inc
push
scas
aas
pop
xchg
or
dec
dec
sub
and
fs
cs
fadd
push
push
hlt
lods
dec
rcrb
arpl
push
dec
scas
sarl
add
xlat
stc
ljmp
push
lds
inc
sbb
jmp
fiaddl
movsl
stos
scas
fiaddl
aam
jae
jg
inc
enter
fs
ljmp
push
mov
in
aas
lods
ljmp
dec
mov
inc
xor
jne
mov
sbb
inc
jecxz
xchg
into
out
mov
popa
adc
inc
cmp
repnz
jmp
dec
popl
fiadds
clc
sbb
es
inc
cwtl
cmpsl
rclb
into
fistpl
popa
push
mov
adc
shlb
push
aam
pushf
nop
mov
or
pop
mov
xchg
jbe
cmpsl
and
test
ret
pushl
xchg
imul
dec
pop
int3
leave
mov
dec
or
sbb
cwtl
mov
pop
fnstcw
das
xor
insb
mov
leave
sbb
fiaddl
sahf
sub
pop
movb
cli
inc
jno
push
mov
pop
ret
repnz
dec
lret
icebp
fcoml
mov
and
stc
pushf
cmpsb
lcall
pop
loop
inc
or
jmp
dec
xchg
repz
cwtl
outsb
clc
pop
inc
fimull
into
hlt
lods
dec
ret
movsl
jmp
mov
jle
fmul
dec
cli
jge
enter
loopne
insb
sbb
into
fnsave
xchg
dec
popa
cmp
mov
inc
lds
adc
xchg
leave
in
jle
sti
mov
mov
fmul
ret
mov
data16
adc
pushf
dec
rol
xor
mov
fcmovnb
xchg
mov
pop
inc
cmp
push
sbb
loope
testl
rorb
dec
enter
hlt
inc
sbb
cmpsb
inc
es
mov
jno
mov
pop
js
aad
bound
call
adc
ret
pop
push
add
addr16
fxch
clc
testb
sarl
sub
js
fcomi
les
cld
jae
lahf
jp
into
aad
inc
jge
jbe
sbb
xlat
pop
lock
cmp
inc
pop
xchg
into
and
adcl
scas
mov
lods
roll
sbb
jbe
mov
xchg
pusha
xorb
int
pop
repz
fldenv
and
frstor
mov
jl
dec
shll
xchg
test
rclb
dec
inc
jmp
call
inc
sbb
adc
aad
mov
pop
dec
mov
pop
mov
in
imulb
and
xchg
fiaddl
and
or
sub
ljmp
add
dec
adc
aam
jb
shrl
sti
add
outsb
fimuls
fmuls
enter
std
sub
push
sarl
add
push
pop
in
mov
inc
sub
push
cmp
xlat
repnz
adc
cwtl
ret
adc
out
fmulp
inc
test
mov
aad
fmull
inc
jge
mov
inc
loope
pushf
mov
repnz
fldl
mov
dec
xchg
mov
enter
xor
push
dec
test
xlat
mov
mov
mov
add
or
lds
inc
pop
in
das
fiaddl
inc
fdivrs
jl
mov
cmp
cld
cmp
ds
mov
rcrb
add
pop
pop
add
stc
rcl
out
imul
hlt
daa
bnd
rcr
add
in
pop
enter
xchg
push
mov
push
pop
dec
adc
xor
mov
imull
add
fnstsw
fcomp
sbb
nop
jne
jge
shrb
aad
push
jae
sbb
push
xlat
into
fstpl
fcmove
aam
mov
bound
rcl
rorb
pushf
outsb
nop
cmp
nop
dec
orb
cmpsl
dec
pop
sbb
mov
xchg
fimuls
and
nop
inc
push
push
in
mov
add
push
push
fimull
out
inc
mov
sub
dec
inc
hlt
push
mov
int3
dec
xor
fdivl
inc
test
aad
add
pop
leave
push
push
inc
mov
cmp
shlb
js
punpcklbw
fcmove
sbb
jns
ss
push
mov
mov
xor
pop
aad
jmp
sbbl
fidivrs
pushf
dec
jl
popf
sbb
push
push
mov
test
aam
dec
movsl
aad
sti
popa
inc
mov
fmull
fnstcw
lahf
mov
jge
and
dec
and
fcomps
sub
scas
mov
rcr
data16
mov
aad
aam
mov
orb
out
leave
cmp
lods
sbb
mov
gs
dec
pop
sbb
push
popa
out
dec
inc
xchg
inc
inc
dec
mov
sub
fmuls
push
ficomps
jo
lret
pop
in
sbb
test
sub
loopne
jmp
mov
sahf
test
pop
out
add
sbb
mov
sarb
jecxz
and
dec
push
setns
pop
push
aas
cli
mov
in
popf
int
or
stc
test
mov
popf
movb
in
push
xchg
out
shll
push
enter
stc
cmp
xlat
adc
push
jne
int
out
sub
pushf
in
popf
push
adc
in
or
ror
scas
pop
stos
adc
fmulp
pop
popf
xchg
push
mov
dec
sahf
lods
shrb
aas
mov
into
sbb
ret
sub
and
call
inc
ret
sarl
mov
pop
movb
popl
cmp
pop
dec
nop
iret
push
dec
inc
mov
inc
icebp
imul
out
xchg
mov
lods
pusha
push
mov
fcomps
popa
xchg
enter
cmc
jae
jae
inc
pop
xchg
into
bndstx
stos
out
leave
loop
fstps
inc
inc
sub
cmp
fmul
or
sbb
insb
aad
adc
lret
fnsave
iret
clc
or
sti
cmp
xchg
fcmovne
sbb
xchg
cld
push
mov
add
popf
push
testb
repz
ss
inc
push
pop
fcmovnu
aad
aaa
mov
pop
mov
rcr
pop
xchg
adc
fmuls
addb
mov
ret
sub
iret
mov
test
dec
les
pop
inc
inc
aam
and
imul
pop
nop
rcl
jns
out
mov
and
push
sub
jne
lret
call
dec
rcr
inc
js
out
aaa
out
dec
sub
jle
enter
out
pop
mov
inc
jno
pop
mov
sub
xor
ss
pop
mov
out
cld
and
inc
push
arpl
sbb
in
xchg
dec
test
push
xor
into
inc
dec
add
dec
in
sub
gs
rep
aas
ror
lods
pop
jl
movsl
dec
dec
bound
rol
pop
sbb
bound
dec
push
jb
sti
and
mov
fdivrs
cmpb
pop
push
sbb
inc
push
push
aaa
daa
aad
mov
mov
dec
iret
lret
inc
and
dec
jmp
pop
out
int
push
mov
incl
cli
ja
dec
pushf
mov
pop
and
xchg
cmp
loop
cmpsl
fldt
cltd
inc
push
xchg
adc
and
or
mov
mov
add
rcr
xchg
mov
jecxz
enter
or
mov
adc
ficompl
cmp
dec
jno
aas
push
fcmovb
push
dec
enter
fdivl
aad
sbb
sbb
add
popf
dec
ret
cmp
pop
dec
add
repz
adc
loope
jl
mov
mov
cmp
xlat
mov
leave
shll
stos
rcll
ret
or
scas
or
hlt
fsubs
mov
mov
rcr
dec
mov
sub
addr16
jl
sarl
aas
insb
fwait
clc
movsl
ror
int3
int
xchg
sti
stos
jns
mov
rcll
xchg
or
lret
jmp
push
hlt
les
mov
xchg
jns
mov
fidivs
lret
sub
fs
or
fdivs
ret
into
push
dec
scas
jmp
pop
sbb
inc
ficoms
daa
sti
fiaddl
mov
cwtl
fs
faddl
fidivrl
xor
fstpl
dec
inc
dec
daa
imul
lods
clc
int3
xchg
into
pop
ret
repnz
sub
inc
cli
paddusb
sahf
addr16
sahf
pusha
les
test
scas
in
daa
sub
push
xchg
pop
mov
jns
push
sbb
loopne
dec
pop
shll
fstpl
push
lret
pop
push
adc
xchg
cmc
jg
lret
jecxz
inc
sbb
and
cld
das
int
std
xchg
push
addr16
mov
subb
insb
iret
out
fcmovb
int3
mov
jmp
ret
jle
inc
jp
dec
outsl
ret
lods
dec
sahf
mov
fnsave
leave
sub
fmull
inc
shlb
aad
leave
cmp
mov
fdivs
pop
dec
out
rclb
stos
sar
dec
xchg
inc
pop
xlat
fdivs
dec
pop
dec
loopne
shr
cli
cmp
dec
or
rolb
insl
fldt
sub
inc
mov
data16
iret
ret
imul
enter
or
sub
es
dec
cmovg
pushf
cli
into
sbb
sub
or
sarb
dec
dec
pop
adc
test
sahf
aad
aam
add
jl
fcmovu
mov
pushf
cwtl
mov
pop
xlat
mov
mov
push
data16
pop
cs
xchg
js
and
leave
stos
dec
inc
jge
mov
ret
cli
cwtl
shrl
mov
clc
push
sahf
cmpsb
rcl
mov
and
in
adc
icebp
rcpps
pop
xlat
and
jo
pop
mov
jmp
movsb
inc
scas
jge
cmpsb
int
cltd
or
inc
dec
aam
cmp
sahf
mov
and
mov
pop
or
or
rcl
adc
fimuls
pop
and
adc
or
cli
cs
sahf
mov
and
aam
int3
cmp
pop
or
jmp
dec
lcall
xchg
pop
xchg
lahf
fs
shlb
aad
scas
aaa
dec
ds
add
repnz
shl
cmp
roll
adc
adc
sahf
dec
adc
fstpl
fldenv
jp
rcrl
or
in
daa
xchg
cli
ret
xor
int3
int3
loope
lret
daa
adc
xchg
sub
fisubl
cmp
inc
stos
pop
mov
lods
mov
out
add
xor
sbb
dec
js
inc
icebp
pop
adcl
bound
jae
fcoms
xchg
mov
pop
fidivrs
scas
je
pop
dec
ret
sarb
mov
sub
adc
add
fdivrs
dec
add
lds
inc
cltd
popf
add
rclb
ss
nop
iret
cmpsl
notb
xchg
add
lahf
and
sbb
out
pop
scas
imul
cmp
cmp
in
cli
and
aaa
idivl
in
adc
push
jns
icebp
arpl
inc
push
rcr
mov
movsb
std
pop
mov
sahf
and
fsubrp
outsl
ret
stos
aam
in
add
mov
sbb
in
and
in
sub
insl
lock
xchg
shrl
and
cmpsb
jg
les
ret
rcr
test
shrb
sbb
cltd
push
cwtl
push
lcall
cmp
lock
daa
fdivs
inc
push
fiadds
cmp
mov
sarl
jg
ret
cmpb
inc
sub
sub
sbb
sahf
push
ficomps
xchg
mov
cmp
inc
push
repnz
xchg
adc
pop
push
xor
mov
outsl
adc
shlb
inc
sub
lahf
into
fcompl
pop
sbb
sarb
xor
test
arpl
loope
jnp
pop
dec
mov
sahf
fdivp
sub
jmp
test
pop
lret
sbb
test
jb
adc
xchg
dec
rolb
mov
xchg
mov
push
in
adc
out
xchg
mov
aam
out
push
test
sbb
fisubl
mov
std
jge
nop
pop
sti
neg
pop
test
push
nop
sbb
test
stos
adc
data16
push
jbe
fisubrs
sbb
std
out
out
lret
fisubl
pop
lahf
pop
popf
mov
fs
cmp
cmpsl
enter
pop
fisubs
pop
clc
popa
and
test
sub
test
pop
gs
data16
arpl
mov
mov
in
mov
cli
ficomps
sub
xor
out
leave
mov
push
ja
std
addr16
pop
rcrl
or
lods
gs
push
fidivrs
mov
pop
sub
jg
aad
push
mov
divb
mov
dec
into
fucomp
push
push
and
and
into
movl
ljmp
add
fdivrp
hlt
gs
fisubrs
add
mov
int
push
lods
addl
mov
sbb
xchg
jb
leave
push
jle
lret
push
cltd
jmp
dec
adc
mov
rcr
mov
iret
mov
cwtl
addb
push
jns
into
jp
push
fidivrs
js
adc
sti
pop
popf
fisubrs
lret
out
pop
or
push
fidivs
pop
ret
out
dec
hlt
lahf
roll
arpl
and
or
mov
dec
inc
loope
inc
in
outsb
ds
adc
xchg
sub
push
inc
jnp
aas
add
scas
pop
inc
push
ficomps
test
test
pop
fiadds
fldl
mov
inc
add
xor
std
outsb
flds
sbb
mov
mul
mov
rorl
sbb
fmulp
jle
jl
fisubs
je
cmp
dec
mov
push
xor
inc
pushf
lods
dec
pop
imul
mov
sahf
sbb
fwait
jmp
jbe
dec
jns
mov
mov
dec
in
mull
cmp
or
adc
jno
mov
xor
sub
addl
add
shll
sbb
push
mov
inc
aam
inc
lea
cmc
ss
sbbb
fsubp
sbb
fidivs
ljmp
pop
call
pushf
inc
xlat
jns
ds
call
fisubrs
ljmp
and
pop
popa
fidivs
pop
dec
mov
xchg
pop
lret
and
fiadds
cwtl
int3
cmp
repnz
sbb
mov
mov
mov
hlt
xchg
mov
jl
add
jg
pop
and
mov
mov
pop
push
mov
shr
test
xchg
lahf
dec
mov
dec
mov
mov
and
xor
cmp
loop
ja
enter
fiaddl
fimuls
dec
popa
sti
std
dec
icebp
inc
loopne
xor
jne
adc
mov
sahf
cwtl
mov
ret
in
xor
xor
dec
ljmp
xlat
pop
inc
jns
or
aam
sbb
mov
std
pop
test
fimuls
movsb
ds
aad
xchg
mov
dec
adc
fisubrs
sub
out
jle
scas
jge
enter
add
mov
jmp
dec
mov
cmp
pop
mov
fbld
out
push
aas
aaa
fdivrp
out
sbb
mov
fisubrs
pop
ljmp
xchg
out
lock
out
mov
faddp
loope
add
fimuls
fists
cmc
mov
ja
and
jg
mov
loope
insb
adc
sub
faddp
sub
cltd
adc
rorb
xchg
mov
pushf
sbb
repz
ret
fdivl
hlt
aad
mov
pop
lea
jecxz
mov
hlt
std
mov
arpl
rol
jo
jb
out
push
mov
dec
mov
scas
pusha
fimuls
outsb
stc
mov
xchg
cmp
movsb
hlt
fiadds
mov
ja
pop
mov
lds
popa
lret
dec
cli
mov
test
scas
mov
scas
mov
ror
into
or
dec
sbb
mov
fisubl
mov
loope
mov
xor
ficomps
testb
push
repz
jl
ficomps
adc
int3
push
dec
scas
fisubrs
pop
jle
fmulp
addb
lret
add
test
inc
push
pop
shrb
cmpsl
inc
mov
push
mov
jle
clc
test
jle
xchg
cmpsl
or
cwtl
insb
aas
push
pop
push
mov
xchg
xor
jmp
mov
fisubs
jp
pusha
ficomps
inc
test
sbb
fdivrp
xchg
lahf
lret
ss
cmp
into
mov
pop
mov
sbb
cmp
fidivs
dec
and
fisubs
subb
aad
dec
mov
fiadds
inc
sahf
xchg
cmp
dec
aam
ret
jle
mov
jb
xor
pop
out
xor
mov
push
stos
fmulp
out
dec
xor
push
push
icebp
lock
sub
mov
ss
int
ficoms
jbe
xchg
aam
sbb
or
negb
scas
mov
rol
fsubrp
je
dec
shrl
sub
xchg
data16
lret
ss
nop
jb
scas
and
ret
xchg
dec
fidivrs
loopne
dec
mov
mov
inc
lods
pop
adc
insl
stos
jle
inc
test
outsb
lret
inc
mov
sbb
das
adc
fucom
lods
mov
std
mov
fsubrl
pop
add
dec
sub
orl
push
cmp
test
xchg
mov
fisubrs
jns
dec
jo
push
or
lods
fnstsw
dec
fimuls
repz
add
sub
in
cmp
mov
push
pop
jle
pop
mov
mov
fsubp
sub
rcr
das
insb
enter
add
or
mov
ljmp
xchg
fisubs
xor
rcll
or
jle
pop
nop
sbb
ret
push
fisubs
pop
subb
ror
push
cli
xchg
mov
add
aad
inc
jp
adc
mov
jge
jecxz
aam
fisubrl
push
jl
pusha
pop
ficoms
mov
ficoms
mov
into
jno
lods
fiadds
pop
call
rcr
int3
cmp
pop
add
or
adc
dec
dec
pop
je
mov
hlt
push
xchg
push
rcr
stc
mov
and
xor
rcrb
mov
fimuls
arpl
test
inc
pop
into
ss
xchg
sub
jbe
pop
outsl
fidivrs
lret
aam
pop
mov
cmpsb
push
mov
mov
mov
sti
dec
adc
clc
fistpl
enter
xchg
add
sub
fidivl
pusha
fdivrs
mov
das
into
and
pushf
les
push
cmp
fidivs
adc
cmp
cld
cmp
mov
icebp
dec
mov
lahf
mov
fstps
fidivrs
jns
sub
xor
rorb
fidivrs
cmp
fucomi
and
jp
ficoms
or
in
jnp
jle
dec
lcall
ret
jns
fisubs
fwait
test
lret
fisttps
mov
ficomps
call
fsubl
and
andb
into
sti
arpl
out
cli
das
add
popa
popf
jns
sbb
rcll
into
add
loope
lods
popa
jle
push
mov
cmpsb
adc
add
jle
ss
pop
jge
and
pop
mov
mov
mov
fidivs
adc
xchg
push
sub
mov
xor
outsl
cltd
adc
mov
push
andl
lret
scas
ficomps
mov
xchg
fnstcw
hlt
xor
pushf
push
int3
add
out
sbb
popa
lret
loope
inc
jmp
mov
xchg
in
ret
std
loop
rcrl
sub
push
add
xlat
jmp
push
dec
repnz
mov
mov
insb
jle
outsl
loope
das
movsb
lahf
inc
pop
sub
ss
push
adc
fisubs
jne
push
mov
cwtl
xor
pop
xor
into
mov
jb
sub
push
add
jnp
std
ja
je
outsl
jl
cmpsl
lret
mov
xchg
add
test
cmp
into
jl
int
sahf
lods
adc
aas
rorb
inc
fiadds
fcoml
inc
aad
cltd
jle
push
int3
sti
sbb
mov
cmpl
cli
fisubs
jae
cmp
into
pusha
sbb
xor
iret
mov
popa
ja
or
les
mov
and
xchg
adc
sarb
push
cld
pop
adc
stos
rorb
pop
aam
daa
into
sub
xchg
mov
hlt
imul
loope
movsb
aam
mov
fwait
std
push
outsl
in
xlat
enter
and
lods
mov
arpl
mov
pop
loop
fisubrs
enter
lret
lods
std
loope
push
andl
outsl
fidivs
cmp
imul
pop
push
sarb
fisubrs
push
sub
aas
daa
mov
pmaxub
inc
pop
cmp
adc
mov
insl
out
mov
into
fcmovnu
enter
xor
ficoms
insl
lcall
test
cmp
ret
dec
in
rcrb
mov
cmp
movsb
fisubrs
outsb
push
mov
in
rclb
and
fiadds
fxch
rcr
push
mulb
mov
pushf
xadd
mov
mov
std
out
fisubs
pop
mov
push
sub
push
fsubrp
jo
jl
push
divl
mov
test
sahf
jnp
pop
fnsave
shlb
xor
dec
stos
xchg
or
pusha
jo
std
fstpt
jae
push
iret
fisubrs
sbb
adc
push
fdivrp
shll
stos
std
bound
std
pop
jb
movb
mov
jbe
and
cmp
push
pop
pop
fsubrp
outsl
mov
sahf
mov
add
cmp
jae
bswap
inc
ficomps
mov
testl
mov
imul
xor
and
mov
pop
ja
inc
lret
cmpsb
mov
out
cmp
sar
fimuls
mov
dec
sahf
in
jmp
adc
push
mov
mov
and
mov
mov
mov
test
arpl
jo
faddp
mov
fidivrl
jo
mov
xchg
sbb
sbb
push
mov
inc
inc
mov
cld
sahf
sbb
xor
fwait
or
movsb
dec
loope
and
sub
mov
ficoms
les
test
cmp
add
out
pop
decl
inc
dec
loopne
popf
fimuls
js
sub
std
sbb
into
and
inc
push
leave
push
sbb
inc
test
add
lods
jno
ret
mov
fsubrp
dec
push
or
cs
jmp
cli
pop
jnp
movb
mov
jbe
pop
test
mov
sbb
mov
mov
and
cmp
jl
dec
cli
pop
push
data16
inc
es
pop
xchg
lock
ficoms
ja,pt
add
adc
push
cmpb
mov
jg
loop
loope
loopne
push
int
std
sub
mov
enter
or
add
aas
mov
rcrb
aaa
repnz
into
ret
jnp
xor
fidivrs
mov
fidivs
pop
insl
or
jecxz
push
outsl
xlat
mov
xorb
lret
pusha
adc
ficoms
push
cmp
data16
xchg
ja
std
hlt
dec
ficoms
and
dec
cld
sbbb
mov
popa
in
outsb
cltd
dec
fsubrp
stc
lea
mov
sbb
rcrl
dec
or
cmc
xor
push
fistpll
pop
mov
pop
push
nop
add
ja
imul
adc
mov
adc
ret
aam
bound
pop
sahf
cmp
fcomip
pop
out
jb
fmulp
rorl
add
fiadds
mov
lea
es
cmpsl
cwtl
pop
ret
jmp
mov
leave
sti
rol
sbb
or
and
and
mov
xchg
sbb
jmp
aad
xor
mov
mov
fsubrp
mov
ffree
fimuls
lret
cmp
pop
je
xchg
addr16
mov
sbb
inc
inc
adc
data16
rolb
and
mov
pop
push
cli
mov
inc
fidivs
xchg
cld
push
xchg
lret
lock
loopne
imul
fisubrs
fwait
in
test
cmp
out
popa
leave
sub
ret
test
fidivs
pop
cltd
pop
adc
cwtl
lods
mov
test
test
push
cli
jle
lds
mov
into
lret
fidivrs
stc
add
sarl
inc
dec
mov
movsb
adc
cmp
fbstp
daa
sub
mov
insb
sbb
fcoms
outsl
fildl
int
imul
mov
loopne
pop
into
fsubrp
and
xor
fsubrp
adc
lods
cmp
int3
inc
std
ret
arpl
and
xchg
push
rcr
xor
sub
mov
test
dec
ja
mov
mov
inc
add
sarb
lahf
js
mov
add
dec
imul
ficomps
in
test
int3
add
lods
fidivrs
sbb
sub
std
out
sbb
cltd
mov
push
xchg
fiadds
mov
shlb
in
add
jo
data16
mov
push
jno
fisubs
and
jnp
cmp
cs
andl
cmc
divl
cmp
lret
pusha
push
popf
sbb
cmpsb
inc
inc
dec
mov
ficoms
add
clc
out
fisubrs
sahf
lods
ficoms
jnp
lds
iret
adc
mov
popf
mov
mov
inc
xchg
lds
std
adc
xchg
je
mov
mov
int3
lcall
fmull
fisubrs
xchg
sbb
sub
push
mov
cmp
inc
fdivrp
cld
add
and
fdivp
or
fsubrp
lcall
fisubrs
xchg
nop
pop
or
std
fidivs
mov
xchg
fisubrs
pop
and
mov
pop
out
jl
loopne
adc
js
mov
inc
jle
sub
push
xor
int3
or
faddp
aad
inc
mov
imul
sarb
mov
nop
outsl
in
add
fistpll
rcr
pop
adc
ljmp
mov
xor
mov
fisubrs
std
xchg
fldenv
cwtl
std
and
mov
cmp
fimuls
inc
ret
lods
adcb
fimuls
js
aam
into
mov
enter
dec
mov
dec
inc
std
pop
jbe
add
test
fmuls
fiadds
pop
ficoms
jl
sbb
ret
imul
andb
lock
pop
mov
and
mov
xchg
cmp
sbb
jge
sub
push
cmp
pop
sahf
mov
add
pop
loope
fidivrs
inc
sub
fidivrs
adc
stc
jle
fisubrs
scas
mov
cmp
fidivs
ret
xorl
cld
and
ljmp
xor
ja
mov
mov
pop
fimuls
fdivrs
xlat
push
lret
aas
sbb
mov
aaa
sub
ficoms
and
xchg
out
scas
hlt
jl
sub
int3
lret
and
and
ficomps
subl
je
dec
cltd
setle
shlb
fmulp
stos
shll
hlt
fiadds
insl
push
pop
bound
js
push
xchg
push
mov
lret
nop
inc
push
repz
addr16
leave
xcrypt-ctr
cmpsl
fidivs
and
adc
fisubs
mulb
loopne
cmp
scas
rcrb
fcmovnu
out
mov
xlat
pop
sub
add
cwtl
addr16
add
cmpsl
mov
iret
loopne
clc
icebp
lahf
lret
faddp
data16
hlt
sub
jo
mov
gs
in
pop
xchg
mov
cmpsl
xchg
fsubrp
sbb
push
call
push
sbb
rcr
lretw
inc
js
jp
mov
arpl
stos
xor
push
jnp
pusha
xchg
cli
dec
cmp
faddp
pop
adc
daa
fisubs
dec
or
dec
stos
mov
pop
mov
cli
jmp
sarb
mov
fimuls
movsb
out
push
dec
cltd
xchg
push
stos
jecxz
sahf
jo
icebp
cld
std
gs
aam
shlb
sub
mov
push
add
fidivrs
movsb
jmp
outsl
ficoms
mov
mov
aad
dec
cmpsb
cld
and
pop
fidivs
mov
mov
rcll
mov
decb
and
ds
mov
push
jg
inc
cmp
ficomps
adc
sbb
fs
int3
or
mov
add
mov
add
mov
sub
jl
mov
out
fidivrs
sbb
pop
fimuls
repz
xor
jmp
stc
scas
fiadds
jno
test
mov
inc
icebp
adc
xor
dec
cmp
add
jne
outsb
push
mov
add
sub
dec
cmp
faddp
es
pop
sti
pminsw
aad
outsl
stos
xlat
or
sbb
mov
out
pop
repz
fidivs
mov
xor
dec
fidivrs
data16
xor
stos
push
xor
or
pop
jae
aam
dec
fcompl
popf
push
sub
insl
mov
xlat
test
lods
push
aaa
or
inc
sbb
shr
cmp
cmp
inc
aas
xchg
xchg
jb
fdivrp
inc
loope
movsl
arpl
sbb
jnp
lea
faddp
sub
scas
fiadds
jno
fnsave
mull
mov
popf
imulb
xor
das
mov
jmp
push
je
insb
into
fimuls
fcoms
movsl
xlat
ficomps
adc
adc
fidivrs
cmp
sbb
jne
scas
mov
lret
lcall
stc
dec
cld
lds
call
cltd
lret
aas
jbe
mov
ficoms
mov
add
fiadds
ljmp
in
sub
sbb
int3
ja
leave
movsb
pop
cltd
adc
fisubs
mov
inc
iret
ret
xor
dec
outsl
aad
cmp
pop
sbbb
in
xor
dec
in
jg
cltd
les
fadd
cmp
add
adc
inc
jns
fimuls
adc
jnp
enter
test
ficoms
jle
push
or
jp
sub
mov
loope
mov
fdivrp
ss
pop
mov
mov
mov
fimuls
dec
fisubl
test
sbb
loopne
fidivrs
aaa
push
mov
rcpps
inc
push
ficomps
push
sub
sarl
fldcw
rcrl
pop
push
test
pop
push
aad
int
and
dec
fnstsw
sbb
outsb
jge
ss
loopne
decb
cmpsb
ficoms
or
mov
ficomps
mov
shlb
ficomps
loopne
faddp
cmc
sti
imul
dec
inc
ficomps
inc
push
inc
dec
fidivrs
stos
push
repz
jecxz
xor
xlat
in
fimuls
cmc
cmp
cwtl
test
fiadds
nop
inc
xchg
fdivrp
sbb
mov
in
hlt
into
bound
cmpb
sbb
mov
std
popa
xor
xchg
dec
les
arpl
in
ja
xchg
into
push
dec
jne
push
add
lods
bound
movsb
std
das
push
faddp
adc
dec
mov
adc
mov
fidivs
push
adc
adc
pusha
xor
arpl
repnz
loope
sti
scas
fisttps
fisubrs
rclb
lret
add
push
nop
cmp
add
or
pop
push
fisubs
jge
sar
push
adc
data16
dec
neg
or
push
mov
mov
xchg
or
jl
mov
mov
mov
or
push
inc
lcall
mov
ret
cli
sbb
and
cmp
and
sahf
stos
dec
out
addr16
xor
fiadds
andl
sbb
mov
and
and
adc
popa
loopne
std
bound
dec
cmp
adc
sahf
push
mov
cld
cltd
stos
xor
sub
leave
faddl
sahf
and
aam
cld
mov
jp
and
shr
fimuls
leave
imul
cmpsl
cmp
jge
repz
sbb
negb
mov
jne
ds
cltd
jbe
pop
mov
imul
sarb
daa
jae
xchg
xchg
dec
out
hlt
cld
mov
shll
call
and
lcall
fisubrs
mov
sbb
mov
loopne
inc
nop
enter
cmp
adc
insl
lock
mov
fisubrs
js
mov
icebp
xor
rol
cmp
stos
mov
fisubs
outsb
pusha
mov
scas
mov
mov
jge
cmp
std
cmp
and
xor
fimuls
xchg
lods
ficoms
jne
mov
mov
push
dec
repz
les
cmc
sub
mov
sbb
pop
xor
stos
aas
push
rcr
xchg
arpl
xorl
outsl
fsubl
mov
sub
loop
jno
sbb
dec
pop
sbb
gs
push
lret
mov
or
push
mov
fiadds
xchg
movsl
xchg
test
fiadds
mov
les
lret
and
add
push
cmpsl
rolb
adc
lock
jecxz
mov
mul
out
fistl
out
fisubrs
faddl
inc
adc
les
pop
fidivs
and
std
call
fbld
sbb
jne
lds
aad
sub
add
inc
aaa
stc
cmp
push
and
pop
fiadds
or
sbb
add
shrl
ficoms
jnp
pop
fiaddl
sub
push
push
sahf
ja
push
pop
sub
out
cmp
movsb
mov
sti
out
dec
ds
jnp
push
xor
pusha
daa
add
ficomps
js
jbe
pop
fisubrs
mov
in
nop
jmp
into
sarl
fiadds
adc
cld
add
mov
sub
lds
add
inc
xor
fldenv
xlat
int3
adcl
into
mov
js
lods
les
xchg
int
out
mov
inc
into
imull
cs
ficomps
test
sti
xchg
sbb
nop
mov
cmpsb
fstp
push
test
xor
or
das
and
aaa
xchg
pop
sbb
sbbl
sti
lahf
mov
jbe
lock
lds
push
pop
rol
jge
aam
cmc
push
jo
insb
mov
jg
js
loope
lods
ficoms
add
lret
mov
ja
fsubp
pop
imull
mov
adc
lods
pushf
cmp
test
sub
fisubs
ret
push
xor
fs
mov
in
into
mov
sahf
out
jecxz
jne
xlat
sbb
add
or
imul
lea
lcall
xchg
push
data16
arpl
int3
adc
mov
ret
sbb
fidivrs
push
loope
dec
into
add
mov
xchg
imul
in
mov
fimuls
imul
std
sbb
xor
mov
or
shr
imul
lahf
jle
add
xorb
lcallw
inc
and
add
lret
shrb
mov
pop
imul
fiadds
jno
pop
fs
add
mov
cmpsl
repz
mov
in
cmp
shrb
fwait
jp
pop
into
xchg
gs
and
cmpsl
mov
pop
lds
mov
fiadds
xchg
cld
popw
js
movsl
out
sbb
test
cli
inc
lret
mov
inc
movsb
xchg
jle
inc
dec
lds
bound
sbb
ficoml
sub
add
jo
and
jno
decl
scas
pop
mov
mov
imul
fdivrp
lods
fwait
aam
enter
adc
dec
fisubrs
mov
pop
fisubs
clc
mov
stos
into
sbb
xor
push
mov
in
push
in
pop
jge
push
mov
inc
ds
inc
lret
jae
out
loop
xor
sbb
mov
fisubl
add
scas
mov
ss
xchg
sub
inc
out
sbb
pop
in
sahf
add
or
ret
jnp
jecxz
mov
cmp
xchg
jb
loopne
cmp
andb
adc
insl
enter
int
lds
adc
fsubrp
fldl
daa
adc
xchg
lahf
mov
popa
outsb
mov
mov
jnp
sbbb
sbb
jb
push
mov
stos
push
and
lcall
outsl
fucomip
mov
jne
dec
or
call
mov
push
adc
push
ja
or
xor
jnp
push
push
push
lret
mov
dec
mov
into
into
into
faddl
sti
xor
push
adc
jno
roll
ficomps
push
lods
lcall
add
int
shrl
add
fidivrs
fidivs
pop
out
das
push
mov
repnz
mov
lds
cmp
popa
fsubp
xor
add
xor
dec
inc
xchg
rclb
sub
test
insl
mov
fcmovnu
fsubrp
shrb
fldlg2
adc
cli
push
pop
dec
inc
lds
ret
adc
pop
fidivrs
sar
dec
das
cmp
push
imulb
dec
jo
push
mov
sbb
lret
pop
xor
ds
and
inc
or
icebp
adc
fdivrp
rclb
aad
test
popa
ljmp
cltd
dec
sub
pop
mov
mov
les
ja
xchg
push
rcrb
xor
xchg
int3
aaa
jg
sti
lcall
dec
fidivs
pop
out
inc
add
popa
neg
js
or
push
sub
std
loopne
mov
ret
cmp
orl
adc
shrb
rcr
mov
ret
jae,pt
scas
fdivp
cmp
push
cmpsb
cmp
push
fisubs
and
dec
mov
outsb
and
sar
fdivp
inc
lahf
mov
fsubl
into
xchg
mov
fisubl
cwtl
sarl
fimuls
dec
sub
add
test
add
fbstp
stc
rorb
xor
jl
mov
ficoms
dec
xchg
lahf
mov
pop
lock
push
pop
or
fistpll
and
mov
jge
sbb
mov
mov
mov
out
pop
scas
loope
fidivrs
ja
fldcw
and
inc
repz
in
pop
sahf
cmc
mov
jnp
rcrb
je
ret
idivb
incl
roll
aas
js
inc
std
jle
mov
cltd
sub
cld
sub
cmp
or
or
cld
mov
dec
cmp
mov
mov
in
fidivrs
hlt
fadd
sbb
mov
addr16
sbb
fs
jne
lods
dec
jns
or
mov
adc
jo
jecxz
xchg
std
mov
test
dec
into
bound
aam
push
jp
lds
nop
xchg
inc
adc
lahf
fidivs
ss
mov
jge
cltd
fiadds
push
enter
scas
cmp
lea
movb
push
bound
add
rol
fisubs
add
fisubs
mov
pop
into
mov
sub
sarb
fisubs
lods
mov
aas
fnstsw
and
mov
inc
sbb
js
aad
mov
fidivs
loope
mov
aaa
repnz
xor
inc
dec
push
aas
fidivrs
push
testl
jle
arpl
mov
fiadds
cmp
or
movsl
clc
jmp
lods
arpl
and
inc
mov
outsl
mov
add
xchg
shrl
dec
in
xchg
ret
mov
push
sub
rolb
imul
sbb
andb
push
pop
push
fmulp
inc
xor
sub
xor
push
iret
mov
int3
lods
fimuls
insl
repnz
sbb
push
inc
lock
ficomps
dec
xorb
movl
adc
xchg
lret
out
and
push
adc
ficoms
or
stc
scas
std
insb
pop
scas
inc
push
out
ficoms
arpl
cld
enter
lret
mov
fidivs
pop
out
test
pop
sbb
fdivp
jno
inc
frstor
mov
testb
lret
mov
icebp
and
mov
mov
into
loop
cld
pop
shlb
dec
test
dec
jbe
paddusw
rcll
or
ficompl
into
mov
push
out
fdivp
sub
xlat
rcr
sub
mov
jo
leave
mov
adc
xor
mov
aaa
ret
ljmp
sbb
cmp
orb
sub
jno
or
and
scas
sbb
jle
jmp
imul
cmp
ficomps
lea
out
inc
faddp
mov
sbb
xor
icebp
push
test
ficomps
xor
add
dec
mov
mov
rcrl
xor
pop
das
adc
std
xlat
adc
and
dec
out
ficoms
pop
es
outsb
rorb
les
ret
movb
mov
fisubrs
or
mov
stc
jge
fisubs
sahf
and
ljmp
jbe
test
mov
test
fiadds
arpl
ficompl
jbe
pop
mov
mov
mov
jno
jmp
ficomps
push
mov
add
in
ja
fadds
stc
xlat
jp
fidivs
and
arpl
mov
mov
mov
sarl
mov
shrb
and
pop
jns
mov
inc
cli
jge
cli
ret
clc
mov
add
sub
loop
lea
out
cld
sbb
out
push
jp
test
dec
outsl
mov
fisubrs
ret
fsubrp
call
jl
fisubrs
jmp
loopne
fidivrs
xorl
cmpsb
push
jl
test
xorl
ret
stos
and
leave
xlat
sbb
mov
fs
aam
aad
sbb
out
out
cli
sub
insl
lock
fcmovnu
mov
fs
and
sbb
pop
push
movsl
js
fidivrs
mov
aam
mov
scas
notb
jle
mov
and
and
pushf
fs
div
popa
jge
jg
fldt
fimuls
mov
insb
cmp
inc
and
stos
test
insl
cltd
into
or
push
xlat
push
sbb
cvtpi2ps
push
test
ss
je
fisubrs
inc
jo
push
mov
xchg
mov
hlt
in
ret
fidivs
and
jp
lock
into
popa
xchg
je
dec
fiadds
lret
mov
pop
mov
icebp
shll
fisubrs
push
jmp
testb
fidivs
das
mov
dec
std
mov
fdivp
mov
pop
jb
fisubs
dec
sub
ja
inc
push
imul
scas
fiadds
outsl
lea
xchg
shl
push
es
cld
mov
rorb
mov
cmp
sbb
ficoml
cmpsl
es
fidivs
clc
bound
xchg
ror
lea
js
movsl
or
gs
jmp
mov
xchg
movsl
mov
aad
and
into
xor
xor
repnz
or
xchg
mov
test
ss
insb
cmpb
repnz
fiadds
popl
sahf
test
stos
dec
lret
mov
repz
adcl
fdivl
les
mov
sahf
mov
add
xchg
sbb
repnz
out
dec
cld
cmc
mov
mov
inc
sbbl
push
mov
xchg
gs
fwait
sbb
cwtl
fisubs
leave
pop
jg
xor
push
cmp
sbb
pop
pop
stos
adc
arpl
loopne
push
in
sub
jno
fidivs
sbb
mov
sbb
pop
add
mov
dec
ret
ficomps
xor
rorl
mov
xor
or
movsl
mov
scas
je
iret
xchg
lods
inc
cld
call
enter
xor
cmp
insl
pop
inc
pop
jle
add
pop
test
and
icebp
xchg
xchg
stc
fstp
dec
mov
cmp
xor
add
into
mov
cltd
dec
ficomps
or
mov
xchg
lods
loop
pop
inc
rolb
test
fimuls
jns
out
std
xor
mov
mov
mov
dec
scas
pusha
fidivs
xor
sub
push
mov
jbe
mov
scas
fadd
mov
adcb
in
pop
cmpl
sbb
lret
mov
or
sti
mov
jno
int
pop
jge
jge
lods
fmulp
cli
adcl
pop
sbb
imul
xor
mov
fwait
das
push
jl
or
fiadds
sbb
mov
pop
add
sbb
rolb
pushf
in
mov
popf
enter
pop
add
pop
push
das
ds
adc
je
push
fisubrs
mov
iret
cmp
lcall
pusha
rcr
and
jmp
aad
fiadds
stos
jne
js
dec
fisubs
and
xchg
fisubs
jns
lds
test
cmpsb
mov
or
dec
rol
push
ss
clc
mov
out
mov
add
sub
or
fidivs
stos
enter
fnsave
mov
pushf
pop
add
mov
xchg
adc
pop
sti
dec
mov
push
xor
jb
sbb
icebp
fmulp
pop
inc
das
lcall
lds
in
adc
into
int3
popa
mov
add
aam
cmp
sub
jo
mov
push
fdivp
mov
std
nop
fidivs
fsts
inc
cli
pop
push
xchg
into
jp
mov
dec
push
ret
mov
mov
fiadds
int
jle
sbb
jg
fdivrp
mov
dec
jno
push
cmpsb
fisubs
or
pop
popa
push
xchg
fisubrs
dec
aaa
hlt
push
fisubrs
jl
jo
repnz
xchg
fiadds
sbb
imul
cltd
ret
fimuls
and
pop
push
add
jge
sbb
cli
pop
mov
and
push
in
imul
add
xchg
stc
jle
sbb
pop
jmp
cltd
pushf
or
dec
repnz
lds
ret
mov
xor
fcoml
inc
je
cmp
jge
inc
aam
fidivrs
cltd
jo
fmulp
jecxz
add
xlat
outsl
arpl
xor
inc
mov
or
cmp
pusha
ficomps
jge
mov
xchg
sub
sbb
fiadds
inc
int
loope
lods
and
mov
fcomps
movsl
or
mov
mov
push
push
xchg
dec
std
sbb
shll
add
sub
fimuls
mov
fisubs
pusha
int
nop
rcll
pop
testb
clc
or
pop
scas
adc
xchg
int
push
push
push
inc
je
lea
jmp
push
lret
test
cld
mov
into
push
stc
jbe
aad
ficoms
cmpsl
dec
push
sbb
repz
jge
clc
xchg
add
fidivrs
push
or
push
lock
adc
arpl
xchg
jmp
faddp
jp
xor
rorb
fidivs
adc
mov
inc
jle
add
pop
sub
mov
mov
cmp
out
sub
shll
mov
adc
fiaddl
jl
mov
xor
mov
push
mov
or
inc
sahf
test
stos
cld
or
aam
movzwl
add
movsl
dec
push
dec
rcr
movsb
test
pop
fwait
cmpsb
mov
nop
je
jmp
lods
xor
push
cmp
ss
pop
pop
inc
cmc
jmp
fidivs
cwtl
and
push
sbb
jle
dec
cmp
adcb
sbb
cli
mov
fisubs
pop
mov
mov
rcll
out
jne
cmp
mov
cmpsb
daa
mov
jnp
or
in
mov
inc
test
and
scas
popf
xor
jb
loopne
je
enter
xor
sti
ficoms
jns
mov
inc
mov
into
std
push
xor
sub
fucomp
mov
cmp
fidivs
sbb
lret
test
in
fidivs
xchg
shrb
lea
push
mov
movsb
stc
push
mov
jge
mov
repz
lahf
faddp
lret
push
push
repnz
jp
sbb
in
shlb
jb
push
dec
push
cmp
xchg
hlt
ret
in
ret
fdivl
ljmp
fimuls
cs
jecxz
aas
shrb
std
in
cmc
mov
popf
rcr
dec
rcr
ficoms
pop
orb
in
mov
inc
adc
movsl
sbb
movsb
aas
mov
sub
mov
push
iret
fisubs
push
dec
mov
jae
xchg
adc
idivb
push
jmp
fcmovnu
sbb
xabort
adc
mov
orb
repnz
mov
test
sbb
xlat
je
pop
cmp
xchg
repnz
stc
lea
push
xchg
or
lret
inc
mov
add
push
ret
sub
fimuls
js
popa
dec
push
fdivr
stos
les
jecxz
ficoms
incb
bound
push
jb
ficoms
out
push
ja
sbb
ficomps
xor
inc
ficoms
addr16
xchg
fmulp
std
mov
lods
dec
adc
js
or
loope
jo
mov
arpl
in
sbb
ret
cmp
and
xchg
adc
or
push
jle
inc
mov
xchg
sti
fiadds
mov
sub
mov
push
daa
sub
jp
push
inc
dec
mov
dec
cmp
mov
jns
out
fisubs
and
into
push
pop
cs
sub
and
jnp
sub
scas
dec
adc
cmp
test
inc
fisttps
sbb
dec
aaa
add
inc
in
ficomps
jl
arpl
int3
cmp
lahf
and
lret
mov
aad
fsub
es
and
xchg
pop
add
jb
fsubp
push
cli
mov
icebp
jg
les
shll
pop
sub
ss
jle
sbb
pop
jb
cmp
cmp
int
xchg
ret
inc
xor
add
ja
jae
cmp
mov
xor
add
inc
and
push
pusha
add
dec
fisubs
adc
mov
xchg
addr16
xor
xchg
test
inc
pop
or
popa
fnsetpm(287
mov
ss
lea
push
dec
sarl
mov
push
sub
sbb
push
push
pop
adcb
xchg
or
neg
xor
adc
xchg
and
je
cmp
dec
sub
fidivs
mov
nop
out
add
cld
lret
cs
cmp
rorl
dec
pop
aam
cmpsl
js
add
mov
ficomps
inc
sub
lret
add
adc
aas
lods
jae
mov
xchg
mov
jmp
ficoms
xchg
sbb
cld
add
lcall
cld
aad
test
ret
lret
mov
shlb
andb
jo
adc
cmp
mov
dec
testl
mov
and
into
adc
xlat
lock
dec
push
sbb
stos
mov
pop
ficomps
ds
mov
push
out
add
pop
lret
imul
aaa
mov
ficoms
mov
in
fmuls
out
or
pop
movsl
push
pop
lcall
fdivp
xor
shll
pop
jne
push
in
cmpsl
ret
scas
rcrl
xor
nop
push
imul
ficompl
daa
inc
sbb
scas
dec
jl
popf
sbb
ret
mov
rcr
jb
icebp
leave
fiadds
xchg
pop
scas
cmpsb
cmp
jecxz
loopne
daa
sub
enter
xor
ficoms
mov
fiadds
xchg
aaa
test
push
fimuls
rcll
cmp
cmp
rol
add
ficoms
outsb
pop
cmp
dec
lds
rorb
xchg
dec
hlt
loop
fisubs
repnz
jb
outsl
push
fisubrs
mov
cmp
jns
fs
sub
ficoms
sbb
mov
test
addr16
shrb
and
in
adcl
rorb
ficoms
inc
jno
lds
pop
mov
xchg
add
inc
xor
inc
int3
adc
cmp
cli
push
and
inc
test
sbb
mov
fidivs
mov
faddp
repz
andl
cmp
jle
aaa
sarb
inc
adc
mov
or
int3
popf
or
sub
fidivs
adc
jae
jmp
mov
in
ficoms
call
shrb
cmp
lea
sbb
jne
dec
cli
dec
int3
sbb
mov
mov
adc
cmp
into
mov
fimull
fsubrp
mov
jbe
cmpsb
push
push
fisubs
xchg
test
fdivp
in
ljmp
sbb
pop
or
ja
out
fs
dec
mov
fmulp
pop
dec
xchg
push
jle
sti
fidivrs
cmp
xchg
pop
jecxz
fmulp
jp
add
mov
js
xor
repnz
mov
adc
nop
pop
aam
les
mov
insb
cmp
xchg
cmc
adc
lret
dec
call
mov
pop
jo
mov
shl
data16
mov
pusha
jb
push
push
inc
jg
jno
lods
fimull
fiadds
into
pop
mov
jne
or
and
jns
mov
fimuls
sarl
fiadds
mov
xor
ret
mov
out
dec
sbb
in
push
cwtl
push
jnp
std
out
lahf
dec
jno
cmpb
push
in
and
jnp
add
jge
mov
push
xchg
jmp
fidivrs
jne
ljmp
stc
in
sub
lds
popf
into
cs
push
pop
sbb
inc
jecxz
xchg
repz
push
and
aad
mov
ret
jo
sub
xchg
fdivrp
mov
jb
inc
sbb
movsl
stos
add
ficomps
mov
mov
stc
push
fimuls
cltd
in
pusha
movb
dec
fisubs
push
outsl
test
pop
div
dec
mov
mov
ret
sbb
mov
js
dec
mov
fidivs
test
lock
xor
push
lret
out
ret
push
hlt
ficoms
mov
nop
or
pop
jp
xor
fiaddl
psrad
arpl
pop
cmp
push
adc
in
sbb
out
lret
nop
es
shlb
fs
push
mov
pop
cmpsl
cmpl
ljmp
int
insb
prefetch
or
xor
push
xor
xbegin
ljmp
outsb
cwtl
add
or
add
adc
lret
adc
jl
lret
jns
xor
fidivrs
fistpll
or
addr16
lret
dec
mov
dec
daa
out
subl
or
mov
and
stos
adc
popf
sbb
inc
mov
jbe
stos
mov
insl
fsubs
cld
inc
jmp
adc
sbb
insl
push
cmpb
lods
js
icebp
in
call
fiadds
addr16
cmpsb
fisubrs
jb
push
pop
mov
add
mov
outsb
jle
std
arpl
into
push
enter
fimuls
shrb
std
mov
aam
cmc
mov
dec
xchg
out
movsl
inc
or
shl
scas
sub
rcrb
leave
xor
inc
faddp
fmull
iret
nop
icebp
xchg
cli
xchg
jns
xor
std
sub
out
fimull
les
mov
repnz
in
ret
mov
xlat
icebp
into
xchg
xor
fisubs
pop
loopne
mov
xor
dec
mov
mov
jns
loop
jecxz
adc
out
and
lret
call
mov
ficoms
cmpsl
and
mov
cmp
sub
fisttpl
jo
sarl
fimuls
test
xchg
in
into
jae
lods
fdivrl
fisubrs
pop
test
or
idivb
dec
pop
cmp
dec
lods
fisubs
push
xorl
cmc
jle
cmp
cmp
push
lcall
cmp
pusha
adc
pop
xchg
fsubp
test
bound
pop
ja
mov
cmpsb
xchg
or
pushf
jae
cmpl
mov
lods
push
fdiv
pop
mov
int
or
out
jg
fidivs
je
insb
fadd
dec
inc
stos
mov
cld
cmp
ret
lock
lods
cld
rolb
insl
roll
lods
mov
jne
outsb
aad
in
aam
shrl
xchg
xchg
or
stc
std
adc
push
lds
sti
and
xor
or
mov
out
push
loope
test
rcll
mov
das
fisubrs
jl
pop
pop
add
jmp
pop
sti
dec
lret
lret
mov
out
xchg
in
aaa
ret
mov
aad
iret
das
sahf
pop
jecxz
faddl
std
or
push
shr
pop
jae
mov
mov
das
cmpsl
les
xor
data16
add
sti
mov
fldcw
cld
std
loopne
mov
shlb
jmp
jp
pop
pop
pop
dec
jmp
fisubrs
mov
fucomip
jns
fidivs
mov
mov
mov
jnp
out
jo
mov
mov
js
and
ficomps
pop
addr16
dec
inc
sbb
mov
rclb
lock
je
std
pop
subb
lret
sbb
fisubrs
and
ret
fidivs
test
push
mov
pop
aaa
in
fidivs
add
sbb
sub
fsubp
adc
adc
sub
in
lahf
lods
or
pushf
cli
andps
psllw
test
push
std
mov
sub
xchg
int3
cmpsl
popf
rolb
mul
stos
in
int3
sbb
fnstcw
fdivp
xlat
pop
lods
js
mov
cld
add
fs
in
dec
int3
inc
ljmp
rclb
fidivrs
pop
int3
iret
repnz
sbb
sbb
adcb
popa
add
iret
sti
mov
and
add
shll
jo
push
push
fdivp
bound
sbb
sbb
mov
push
in
ficomps
ss
adc
mov
cmc
lcall
lea
xlat
fsts
pop
in
mov
add
push
arpl
ficoms
cmpsl
stos
lahf
push
inc
sbb
repnz
inc
shlb
sub
mov
test
inc
jae
aas
fsubp
outsb
mov
xchg
popa
cmpsl
jmpw
add
cmpsb
inc
jle
xor
std
sbb
fldt
inc
insl
pop
or
fsubrp
fldcw
cli
sahf
cld
loopne
lret
into
mov
xlat
or
add
add
fstl
jmp
cmp
mov
sarl
ss
fimuls
lods
xlat
sahf
fidivrs
dec
cld
pushw
repnz
adc
mov
add
mov
push
sub
or
sbbb
sbb
leave
fstp
cmp
push
inc
iret
and
mov
gs
mov
mov
or
icebp
push
fsubrp
ds
cmpb
imul
pop
mov
fidivs
xchg
repnz
mov
int
cmpsl
rorl
jmp
pop
or
pop
fadds
jno
jp
scas
clc
outsl
les
loopne
sub
fidivs
mov
sbb
insl
iret
xchg
scas
inc
lea
test
pop
lods
pop
fnstsw
adc
mov
cmp
lock
testl
adc
dec
dec
mov
fstp
add
loop
mov
rclb
inc
movntq
out
scas
xor
mov
icebp
mov
imul
faddp
xor
aad
fiadds
sbb
fs
mov
int
fiadds
and
add
cli
loopne
push
xchg
jno
fcmovnu
pop
ret
movsl
fimuls
aad
sbbl
cmc
or
jecxz
in
mov
cs
movsl
mov
inc
jb
aaa
jge
cli
testb
insb
lahf
imul
mov
fisubs
aad
int3
add
fisubrs
in
mov
adc
sahf
mov
adc
push
pop
in
stos
pop
sbb
fidivs
or
mov
aaa
fidivs
adcl
call
mov
fisubrs
push
push
mov
jne
cmp
dec
xor
pop
xchg
mov
stc
ficomps
sti
jmp
and
sub
xchg
or
mov
mov
fucomip
sbb
fcmovu
mov
mov
ja
add
pop
mov
push
xchg
xchg
xchg
sbb
push
sti
iret
sbb
dec
jno
fdivrp
and
xchg
jge
mov
adc
testl
into
aas
add
dec
adc
stos
adc
push
jns
mov
push
int
cmpb
xor
adc
stc
push
dec
shll
jle
sbb
dec
cmpb
mov
mov
add
sbb
fisubrl
xchg
inc
inc
or
dec
aas
sub
sti
dec
xor
test
xor
and
icebp
pop
rolb
sbb
or
ficoms
pop
es
popf
das
adc
sbbb
mov
or
rcl
fdivrs
mov
pmaxub
inc
push
lret
fidivrs
test
xchg
inc
and
jp
int
out
shrl
idiv
movsl
sbb
add
cmp
mov
leave
xor
xor
ret
cli
dec
pop
fidivs
push
sbb
ficomps
mov
aas
and
fisubrs
testb
jecxz
jmp
xlat
jbe
and
shll
fimuls
ror
adc
fiadds
clc
jnp
mov
lahf
sti
or
xchg
sbb
jle
je
test
int
sbb
cmp
popa
and
ret
dec
inc
aam
adc
add
in
fsubrp
mov
push
aad
sub
push
or
bound
fidivrs
add
fistl
xchg
iret
cli
imul
adc
mov
cmp
scas
call
movsb
rcr
out
popf
mov
ficomps
push
icebp
dec
add
aad
js
lret
mov
das
jge
mov
into
ficoms
cs
sarb
jns
sbb
les
inc
ret
ficomps
dec
xchg
mov
add
pop
xor
push
jne
fisubrs
inc
adc
es
test
fdivrl
cli
sbb
cmp
adc
sub
fdivrp
test
test
xchg
addr16
adc
jge
out
push
mov
jae
sbbl
xor
inc
and
mov
mov
mov
adc
outsl
sahf
sbb
ficoms
aam
push
inc
sub
cltd
fidivs
imul
fidivrs
or
pop
sub
dec
outsb
outsb
and
fsubp
movsb
repnz
cwtl
addps
and
mov
mov
mov
pop
adc
mov
adc
ja
test
fidivs
sub
lret
ficomps
xchg
xchg
into
imul
cmc
aad
rcr
ss
daa
pop
mov
or
mov
enter
lods
shrl
sar
xchg
cmp
or
and
clc
ss
jle
adc
insl
loope
fiaddl
pop
arpl
test
sarl
jo
sbb
lcall
sbb
cld
repnz
push
push
jne
push
ss
mov
loop
leave
and
adc
or
mov
cmpl
mov
les
sbb
mov
ficomps
loope
pop
adc
nopl
push
cli
pusha
push
enter
mov
mov
or
mov
cmpsb
scas
iret
xor
sahf
xor
mov
outsb
jge
lods
inc
lahf
andl
scas
ljmp
movb
pushf
imul
repz
pop
push
sbb
sarb
icebp
nop
es
ficomps
add
imul
add
popf
lock
leave
mul
xor
push
das
aad
std
adc
pop
lret
iret
lret
fidivs
xor
mov
call
dec
pop
and
cmp
je
fidivs
insl
daa
dec
lret
fidivs
fwait
and
stc
ds
add
dec
cli
fisubs
push
imul
jle
push
jbe
fsubp
push
push
test
outsl
xchg
enter
aaa
cld
pop
mov
dec
rorb
ficoms
jbe
icebp
ja
frstor
mov
sub
outsb
iret
fisubl
daa
xor
ficomps
fnstsw
fidivs
inc
mov
mov
rcrb
xlat
cmp
push
loope
neg
xchg
sub
lret
cmp
mov
rorb
and
fldenv
mov
mov
fidivrs
aam
dec
aaa
mov
loopne
fwait
pop
std
mov
sub
cld
fimuls
movsb
xchg
push
or
fdivp
lock
mov
dec
sahf
fmulp
aaa
cmpsb
xlat
test
gs
in
or
ret
lcall
rcrb
fs
mov
cmp
push
lcall
test
and
lock
test
and
or
add
cli
dec
inc
andl
and
jg
das
dec
push
loope
mov
int
cmpsl
insl
sub
fimuls
adc
pop
in
mov
mov
or
jne
repnz
lock
xchg
adc
mov
aad
jmp
inc
pop
sti
add
mov
lret
lcall
mov
fsubp
or
xor
cmp
stc
sub
scas
fdivrs
inc
sub
jecxz
xchg
pop
inc
in
hlt
movsl
pop
sbb
and
or
inc
fsubp
cltd
popa
inc
add
jle
clc
dec
rclb
in
xor
xlat
sub
test
and
push
fsubrs
mov
dec
jb
nop
in
popa
aad
mov
or
ficoms
iret
xchg
sbb
and
ficoms
shlb
pop
sub
rcl
lcall
sti
clc
aam
sbb
gs
leave
mov
sub
cmpsl
fdivrp
sub
clc
fidivrs
decl
mov
mov
cmp
mov
aas
aas
and
addr16
imul
ficomps
aad
out
ficomps
test
add
sbb
cld
inc
mov
lret
xor
cli
inc
cmp
std
xchg
cmp
idivb
pop
into
das
insl
addr16
mov
ficomps
ret
sbb
es
jge
fisubs
ja
test
dec
lret
add
bound
mov
scas
xor
repz
or
add
push
xor
lcall
outsl
movsb
sahf
jge
fwait
pushl
ret
add
mov
test
sub
push
out
pop
fidivrs
mov
cwtl
dec
outsb
mov
sub
in
rol
jecxz
sub
call
dec
imul
data16
pop
iret
and
mov
xor
rol
sbb
ja
push
mov
xor
scas
push
fdiv
sub
cmp
loopne
dec
jmp
xor
and
clc
insl
adc
or
inc
ret
test
jae
fimuls
push
add
fisttpll
cmpb
in
add
loopne
fsubs
dec
inc
jle
loop
mov
pop
or
lds
inc
int
pop
and
fwait
mov
or
sub
cli
push
mov
jno
dec
xor
push
xchg
mov
out
fnstcw
sub
fisubs
adc
stos
nop
push
addr16
add
xchg
mov
dec
lahf
shll
test
lock
iret
mov
mov
fisubs
cmc
dec
pushf
cmp
das
adc
mov
jns
mov
or
mov
or
mov
in
into
data16
shll
adc
ss
add
es
inc
scas
icebp
ja
les
push
testl
sub
das
loopne
lret
out
adc
jmp
into
push
add
std
mov
or
lcall
dec
aam
adc
cmp
sbb
movb
adc
mov
or
ficoms
pop
cmp
faddp
dec
cmp
jns
repz
insb
outsl
mov
ficoms
test
mov
outsb
sbb
push
divl
jecxz
sub
mov
mov
ja
loope
pop
pop
shll
mov
mov
xor
sbb
mov
xor
aas
add
scas
push
fidivrs
inc
mov
pop
mov
xchg
call
jae
into
cmpb
fisubrs
adc
jp
jne
in
mov
fcmovbe
mov
fidivs
ficoms
and
inc
ficomps
out
test
pop
lods
out
jae
cmp
and
fstp
into
cltd
sahf
mov
or
test
fnstcw
mov
clc
mov
int3
test
xor
xor
mov
and
xorb
mov
xor
jl
arpl
cmc
stos
xlat
lahf
fmulp
sbb
adcb
lock
fsubp
fmuls
sahf
mov
pop
add
or
fisubrs
mov
sbb
sbb
int
in
xchg
sub
notrack
jle
xchg
shlb
pop
in
loope
or
dec
pushf
lret
into
fimuls
ret
fisubs
lcall
push
and
inc
test
sub
cltd
cmp
std
cmc
xlat
and
mov
or
lds
jae
pop
inc
pmaxub
cli
jmp
in
int3
mov
ja
ficomps
jnp
cmp
xchg
jo
dec
outsb
outsl
and
xchg
add
stos
adc
jno
sbb
xchg
jle
push
sub
dec
pop
lahf
cld
bound
push
fisubrl
and
nop
sbb
xchg
test
or
movsb
jle
aam
mov
adc
jnp
into
mov
fidivs
xchg
scas
and
fstpt
lea
repnz
jecxz
lret
pop
mov
pop
xchg
fiadds
push
xchg
pop
and
sti
pop
in
sarb
outsl
sub
in
rorb
sub
sbb
or
mov
rclb
scas
mov
dec
fmulp
pusha
jmp
mov
test
iret
sbb
jbe
data16
inc
inc
mov
push
aad
ret
jle
push
mov
lret
dec
cmp
adc
addr16
pop
shlb
mov
lods
insb
addl
cmp
movsl
stos
and
fisubs
xor
mov
decb
push
xor
sahf
push
lds
ret
add
lret
sub
cld
cwtl
test
imul
or
pop
cmp
fwait
pusha
stos
mov
fmulp
scas
dec
push
xor
push
and
int3
pop
jle
or
mov
in
es
repz
into
mov
pop
hlt
sbb
xchg
imul
adc
ret
mov
jle
mov
xlat
push
imul
shll
aas
daa
dec
test
fimuls
out
inc
insb
adcb
scas
push
xor
xchg
or
popf
fsubrs
push
pop
out
xor
inc
sbb
push
dec
insl
adc
inc
jle
adc
mov
xchg
fisubrs
fisubs
add
fidivs
mov
mov
aam
sarb
add
fimuls
and
fidivl
inc
push
int
push
mov
mov
xchg
lods
jg
mov
fisubl
push
icebp
int3
push
dec
and
xchg
notb
jecxz
ficoms
xor
enter
inc
fldcw
add
popf
push
lods
mov
divb
addr16
jns
fisubs
sarl
or
fstl
sbb
ficomps
fisubrl
movsl
mov
jle
fsubp
repnz
std
aaa
es
mov
jae
pop
popa
mov
mov
popf
mov
divl
mov
das
fimuls
cmpsl
adc
ljmp
dec
in
inc
mov
inc
jo
mov
into
add
rclb
frstor
lods
cmpsb
dec
fisubrs
mov
hlt
fiadds
stc
jle
fisubs
and
roll
push
push
test
addr16
xchg
adc
push
fcmovu
adcl
in
pop
fisubrs
lea
loope
jle
adc
popa
sti
cmp
data16
xor
pop
add
xor
xor
push
jl
mov
ficoms
cltd
ljmp
sub
jo
adc
stos
dec
jns
xchg
fidivrs
mov
xor
aam
popa
push
fstps
in
adc
jp
jmp
jge
lods
ficoms
pop
pushf
mov
sub
fsubrp
testl
in
or
pop
out
jnp
aad
es
ret
push
insb
into
test
je
aas
lret
lock
faddp
es
sbb
fwait
arpl
lahf
clc
xor
sub
jbe
fiadds
mov
arpl
jg
mov
or
push
fidivrs
cmp
je
loope
pop
int
mov
fmulp
adc
cmp
jle
arpl
daa
mov
inc
mov
pop
repnz
ret
cmp
pop
lcall
xor
fimuls
cltd
lret
mov
xchg
pop
push
aam
fcmovnu
cmp
testl
or
jo
or
cwtl
aad
hlt
in
jno
int3
fiadds
lret
and
aaa
dec
sbb
pmovmskb
popa
mov
fidivs
and
jp
stos
das
cld
or
shrl
lock
push
call
popf
lcall
pop
jle
nop
fidivrs
adc
idiv
or
fiadds
add
mov
pop
stos
in
arpl
movl
adc
fisubs
lret
loope
lret
std
sub
add
jl,pn
pop
cmp
xor
fimuls
arpl
faddp
std
rclb
jno
scas
fimuls
iret
ds
fidivrs
insl
inc
mov
clc
and
aad
push
faddp
jmp
sub
rclb
push
and
sbb
fisubs
enter
std
jecxz
jno
dec
test
pop
insl
stc
cli
jecxz
fimuls
fwait
cmp
cwtl
pop
fiadds
pop
pop
dec
mov
outsl
addl
mov
fisubs
push
xchg
xor
loopne
imulb
ficoms
dec
or
out
repz
cld
neg
dec
xor
outsl
lods
sub
mov
imul
pushf
or
ficomps
cltd
outsl
inc
fmulp
inc
sub
xor
push
les
or
mov
fs
lcall
sub
fiadds
push
pop
sbb
std
sbb
imul
rcrb
and
fidivs
jns
int
out
dec
jno
rcll
stc
mov
daa
js
add
jg
sub
incl
pushf
inc
jmp
imul
mov
mov
enter
lcall
cli
xlat
insl
pop
into
pop
inc
sbb
call
push
icebp
xchg
xchg
sahf
inc
fisttpll
jp
das
into
adc
lret
sub
fs
cmp
push
test
loop
fimuls
mulb
addr16
fidivrs
and
fisubs
mov
mov
sub
out
cmp
cld
dec
sub
in
sbb
fiadds
jge
js
push
push
movsb
pop
xor
jmp
inc
cmp
in
fisubrs
mov
xor
fisubs
or
es
jno
faddp
mov
lods
int
mov
sub
ret
in
jo
sarl
mov
aaa
cmc
fiadds
in
movsl
lock
adcb
out
outsb
xchg
lahf
add
es
flds
cld
fimuls
and
rcr
nop
mov
aad
test
negl
fisubs
adc
mov
je
icebp
dec
xchg
jp
fidivs
sbb
in
fsubrp
test
out
shrb
out
clc
fidivrs
in
sbbl
fdiv
and
mov
jnp
outsl
xchg
mov
mov
xor
mov
into
lcall
aas
pop
fidivs
xlat
push
sub
test
xchg
mov
fidivs
pop
sub
sbb
into
push
ja
shr
pop
sbb
movsb
mov
sbb
push
imul
dec
sbb
jl
outsb
test
add
movb
fiadds
loope
lret
fisubs
in
adc
lcall
ret
fidivrs
xor
jle
pop
in
mov
lret
xchg
ficoms
fstps
faddp
rcrb
test
test
stos
lods
and
testb
je
into
rcr
jg
adc
pop
or
fidivs
lea
pusha
movsb
dec
data16
jge
cmpsb
cs
movb
ficomps
ret
je
mov
jno
dec
jns
jl
sbb
mov
add
nop
fiadds
lcall
mov
rorb
add
jle
xor
push
lret
mov
jge
into
movsl
fs
mov
sbb
sarl
mov
fiadds
ficomps
mov
faddp
insl
adc
xor
ret
out
fdivrp
push
pop
ss
pop
mov
fiadds
call
test
cltd
jge
sbb
jb
cmp
lret
dec
fisubs
pusha
mov
mov
fisubrs
es
ss
fxtract
add
mov
and
mov
sbb
stos
or
dec
mov
pop
loopne
xchg
push
fidivrs
in
stos
test
fldt
mov
in
fisubs
mov
push
mov
imul
fdivp
add
out
fidivs
leave
sarl
cli
arpl
andl
jge
adc
cmp
pusha
daa
and
lret
mov
dec
pop
fcoml
fwait
sbb
pop
lret
cmpsl
pop
fiadds
mov
inc
lods
clc
xchg
into
lahf
rclb
out
and
setle
stos
fnstsw
or
les
adc
mov
out
leave
gs
xor
std
movsb
cmp
jae
bound
sbb
mov
mov
ret
test
fidivrs
mov
push
repz
addr16
jb
cld
mov
pop
xor
fisubs
xor
sub
iret
pop
push
cmpsl
fiadds
mov
js
inc
sahf
xchg
ficomps
adc
or
aad
jo
test
stos
ficoms
xchg
push
inc
std
mov
int3
fwait
mov
sub
add
lock
mov
mov
inc
call
add
test
xor
fcmovb
add
cmpsl
ds
mov
sbb
enter
dec
xchg
outsl
pop
fdivrp
jnp
movsb
or
xchg
sbb
sarl
out
icebp
sarl
add
or
adc
insb
int3
mov
pop
fisubrs
dec
push
adc
loopne
pushf
enter
fidivs
push
adc
adc
insl
push
cmpsl
inc
mov
fisubrs
jmp
adc
fiadds
leave
fucomp
mov
ret
jnp
xor
ficomps
dec
xor
push
mov
mov
rcrl
loop
test
and
adc
and
sbb
or
mov
jge
repz
fld
rcr
sarb
jmp
nop
sbb
fidivrs
adc
fimuls
cwtl
mov
and
xchg
sub
rcr
cmp
cltd
or
pop
inc
jno
push
test
clc
xchg
push
lods
or
fiadds
mov
add
xor
push
pop
nop
enter
clc
fiadds
xor
movsl
add
sub
push
fisubl
push
mov
mov
adc
cld
enter
into
cmp
ja
push
dec
negl
push
fcmovnu
xor
inc
cmp
ficoms
adc
je
xor
or
cmpsl
fdivrp
mov
rcr
sbb
stc
sbb
jne
and
leave
fidivs
dec
outsb
xchg
fdivrp
mov
les
mov
pop
sub
jbe
cld
push
shll
lods
fisubrs
aas
xor
sti
ficompl
xor
push
fidivrs
pop
stos
leave
mov
ret
xchg
scas
clc
dec
sti
push
loop
shlb
sub
mov
js
cmp
adc
or
fimuls
in
and
sbb
sbb
in
fidivrs
push
outsb
inc
cmpsl
cli
es
mov
fisubs
scas
and
push
and
or
std
dec
leave
dec
mov
loop
push
mov
add
imul
mov
cmpsl
mov
adc
out
dec
or
jl
pop
out
fiadds
fisttps
sbb
mov
sbb
loop
fidivrs
lahf
push
roll
push
sbbb
push
mov
in
addr16
test
mov
arpl
outsl
mov
lds
xchg
movsl
sbb
int
pop
mov
sub
imul
jle,pn
or
addr16
ficomps
pushf
mov
mov
push
insb
cmc
out
loope
fsubl
inc
fidivrs
stos
jmp
fistps
jecxz
or
cmpb
jns
ds
push
pop
pusha
fidivs
push
mov
xchg
rcll
hlt
aaa
ss
mov
and
fidivrl
cld
push
mov
popa
lret
dec
dec
sbb
mov
sar
shl
fsubrs
push
sub
push
sub
leave
fsts
das
in
mov
lcall
xchg
imul
cld
sub
into
or
ss
lret
adc
inc
arpl
outsl
jno
hlt
or
movb
xor
add
ficomps
fs
nop
ds
ficoms
cmpsl
popa
imul
repz
daa
dec
loopne
lahf
jecxz
pop
or
adc
aas
mov
fiadds
test
jmp
push
dec
xor
sbb
add
scas
adc
flds
xchg
cli
movsl
mov
cmp
cmp
jg
pop
rcr
xacquire
add
xor
outsl
cmpl
leave
dec
adc
xchg
adc
adc
dec
inc
incl
stos
xchg
ficoms
cld
pop
inc
xor
aam
jge
sub
cmp
add
movsl
xor
and
enter
adc
sbb
fsts
lock
sbb
loop
push
add
xchg
fildll
imul
in
fsubrp
les
vmovss
adc
fimuls
ds
sbb
mov
daa
mov
pop
pop
push
aaa
into
rcr
nop
xchg
mov
sahf
sti
lods
roll
adc
scas
into
xor
into
cmpb
inc
sub
cmc
scas
inc
jp
enter
and
enter
mov
adc
insl
pushf
out
sti
inc
dec
fidivs
test
insb
lock
rorb
xchg
mov
cmpb
shlb
lret
sbb
andl
adc
lds
enter
inc
aad
fisubs
movsl
adc
outsl
jns
dec
push
faddp
mov
mov
pop
push
repz
ret
imul
pop
sbb
leave
mov
jo
aam
push
loope
inc
push
mov
jno
xchg
mul
inc
and
sarl
dec
jle
or
mov
mov
or
xchg
dec
cmc
jb
pop
shll
fmulp
fs
notl
jb
sahf
and
inc
mov
subl
out
ss
in
nop
ret
xor
xchg
fidivs
mov
cltd
inc
adc
inc
popf
sbb
int
mov
mov
jle
insl
ret
adc
jmp
fimuls
or
stos
aaa
lcall
or
cmp
ret
add
jne
fstp
dec
out
loope
mov
mov
ljmp
lret
and
cli
loop
or
and
jbe
push
scas
ficoms
sub
xchg
in
fsubr
ret
into
and
addr16
movsl
or
subb
ds
pop
or
xor
fiadds
hlt
sti
andb
stc
xor
pop
ds
fisubrs
pushf
pop
xchg
fiadds
mov
push
mov
mov
fdivp
sub
mov
arpl
daa
cmpsl
adc
mov
cli
jns
jecxz
inc
push
xchg
popf
mov
fidivrs
add
rcrl
int
mov
sub
faddp
cmp
jp
bound
lods
ror
data16
dec
or
jo
ficoms
bound
adc
and
and
sub
fdivp
or
fidivrs
ret
movsl
fisubs
pop
sbb
std
mov
push
jo
in
ficomps
int3
fucomip
fdivp
ret
fcomps
add
jne
xchg
jle
and
shr
adc
add
loop
jae
int
push
mov
adc
mov
add
mov
cmpsb
pop
pushf
inc
adc
ja
pop
faddp
cmpsb
jp
xor
mov
pop
mov
jmp
adc
dec
push
cltd
mov
mov
fsubrp
scas
cmp
mov
cli
inc
inc
daa
shlb
xchg
jno
ss
dec
inc
ror
fmulp
lea
stos
add
jmp
out
addb
clc
cmp
leave
xchg
mov
adcl
sbb
mov
fiadds
pop
jle
testl
int3
cmc
mov
fs
nop
sbb
negb
sub
aaa
lods
xor
or
std
adc
or
dec
faddp
shrl
stc
aad
data16
aam
ficomps
adc
jle
test
inc
jle
popl
xor
scas
cmp
cmp
fcmovnu
mov
sub
mov
or
gs
jmp
dec
xchg
stos
mov
ficoms
mov
xor
mov
cmp
mov
fcmovnu
jnp
aam
inc
test
fisubrs
jb
rcrl
lret
jne
cmp
add
outsb
xchg
in
sbb
mov
lods
fsubrp
or
cmpl
mov
fimuls
rcll
lret
inc
adc
dec
in
jne
stos
ficomps
movsb
sahf
int3
push
xor
push
fmulp
inc
aam
xchg
stc
sub
push
inc
or
bnd
jnp
cmp
push
xchg
sti
adc
notl
fwait
out
inc
in
jmp
xor
out
mov
push
sbb
rcl
mov
cwtl
jnp
test
ret
mov
xlat
add
fisubrs
adcl
mov
in
sub
cmpsb
cwtl
movsl
jmp
int3
aam
or
cmp
jecxz
inc
xlat
and
scas
fmul
lods
ficoms
hlt
cltd
mov
adc
test
push
pop
mov
into
ds
out
mov
push
pop
xchg
out
xor
cmp
test
mov
dec
popa
test
xor
sti
dec
mov
std
les
jbe
and
cmc
pop
cmovns
xor
push
shrl
std
mov
fcompl
repz
fdivrp
nop
movl
fisubrs
push
jo
mov
pop
xor
xchg
adc
je
xchg
pop
fsubl
ret
xor
and
or
add
fidivs
and
jns
lods
sub
jge
cmc
stc
mov
arpl
push
xchg
and
fsubp
in
in
push
adc
movsl
mov
hlt
ss
sarb
lods
es
adc
xchg
jae
ja
fiadds
mov
sti
popf
mov
sbb
adc
shrl
cwtl
in
movl
sbb
dec
pop
cmpsb
daa
mov
aaa
mov
into
loop
gs
rolb
or
ficomps
das
push
out
dec
mov
mov
xchg
xchg
inc
sbb
and
add
and
inc
push
inc
jbe
lret
cltd
mov
test
scas
fsubr
filds
dec
sub
cmp
push
ja
inc
jno
pop
lock
insb
mov
xchg
icebp
lcall
iret
xor
sarl
inc
push
and
js
or
pop
xor
rcr
mov
stos
sbb
int
les
sub
rclb
lods
pop
xchg
fidivrs
sbb
cld
mov
bound
mov
fildl
push
inc
pop
and
arpl
test
into
adc
add
lods
xchg
push
mov
xchg
out
jp
fxch
test
subb
mov
cli
xchg
jnp
mov
cli
dec
dec
jge
cmpsb
xchg
jg
mov
fimull
fsubp
aaa
dec
push
in
xor
fsubrp
jl
into
movsb
push
ljmp
dec
lahf
jge
faddl
lock
mov
das
js
mov
add
jge
inc
pop
push
and
adc
ss
loope
add
mov
leave
insb
fstl
fidivs
cmpb
rcrb
mov
pushf
out
xlat
ret
repnz
and
xor
inc
cmp
jmp
cmpsb
ret
pop
fidivrs
pop
mov
cltd
push
ja
jecxz
scas
xlat
pop
jo
cmp
fsubrp
or
mov
pusha
std
popa
fsubrp
inc
clc
mov
xchg
scas
rcrb
fmuls
adc
sbb
adc
inc
dec
xorl
mov
xchg
into
pop
xor
add
fdivrp
sub
addr16
mov
rclb
jmp
jle
mov
nop
scas
imul
imul
int3
aaa
jae
adc
xchg
fisubrs
push
ljmp
loopne
fwait
add
out
or
js
fs
inc
add
fisubs
cmpsl
mov
jae
mov
xbegin
shlb
jle
in
lock
bswap
dec
gs
fsubp
cmpsb
aas
divl
stc
mov
xchg
mov
and
dec
aad
ficoms
mov
jge
data16
sti
faddl
cmp
mov
shlb
std
std
lds
push
ret
adc
mov
sahf
dec
dec
je
mov
ret
lret
or
mov
and
fiadds
cmp
fimuls
sahf
push
sub
cld
addr16
aam
std
inc
mov
dec
mov
imul
fidivs
fwait
nop
das
add
fcmove
ret
xor
inc
faddp
lret
push
stos
xchg
pop
cmp
push
icebp
mov
adc
sub
nop
jo
into
imulb
push
add
faddl
pop
jg
jp
mov
in
xchg
fucomip
addr16
into
test
rcll
cld
mov
shrl
cmp
in
into
scas
loope
addr16
xor
notb
loopne
inc
adc
mov
shlb
adc
insl
shlb
inc
xorb
fisubrs
fcomps
in
mov
scas
add
lret
fisubs
lret
mov
mov
inc
jle
add
xchg
cmp
jecxz
data16
in
cli
outsl
lods
push
fidivrl
mov
out
repz
repnz
ret
sub
je
out
imul
lock
ja
pop
mov
inc
push
fisubrs
xor
mov
sbb
xor
cld
lret
xchg
or
adc
fcomps
cwtl
lods
inc
adcl
cmc
or
ficomps
sub
mov
repz
jmp
stc
movsl
fidivs
scas
orb
sbb
xor
es
add
push
jae
std
xchg
into
inc
dec
and
cld
jo
pop
aaa
neg
loop
fcmovnu
mov
mov
adc
ja
je
ret
inc
dec
push
mov
mov
sub
lcall
mov
xchg
cmp
inc
sbb
jne
lds
das
mov
in
ja
add
stc
fdivrp
or
or
adc
fisubrs
test
jbe
shl
adc
and
adc
xchg
push
xor
ljmp
shll
pop
xlat
nop
pop
ja
sub
and
inc
push
mov
xchg
fisubrs
mov
push
xor
shl
mov
outsb
mov
mov
ficoms
mov
fiadds
sub
aam
stc
fidivs
inc
xchg
add
mov
std
adc
faddl
les
add
pop
jp
cmp
ficoms
or
ds
out
xchg
xorl
fimuls
mov
js
push
dec
fdivp
push
flds
insb
int3
ret
idiv
fidivs
aaa
jp
sub
leave
dec
fiadds
jl
fs
push
lods
ret
lahf
xchg
ficomps
lock
pop
fadd
pushf
fisubs
and
mov
jge
shlb
or
sarl
mov
mov
mov
and
shrl
fdivp
xor
add
insb
jle
dec
mov
pop
pop
orl
pushf
lea
movsb
jae
mov
push
sti
jg
pop
push
fs
push
cmpsb
iret
fisubrs
jecxz
and
testb
jle
lret
sbb
inc
sahf
and
lods
fmulp
or
xchg
mov
int3
jns
lret
sub
push
sbb
enter
mov
and
int3
std
fidivl
in
fs
rcrl
sub
pop
sarl
stos
push
aaa
sub
dec
inc
add
notb
jo
lcall
and
scas
arpl
jle
lret
push
lea
vpsrlw
sahf
out
enter
shlb
dec
ficoms
add
adcb
fidivs
inc
pop
mov
hlt
mov
ret
inc
jns
rolb
add
mov
push
push
gs
dec
aas
xchg
cmp
cmp
xchg
mov
fsubrp
pop
fdivs
fidivs
lods
fstpl
icebp
add
into
inc
or
in
mov
test
push
lock
lret
aam
aaa
sbb
test
addr16
mov
sbb
mov
push
imul
mov
mov
lret
mov
les
jg
cld
jl
out
sahf
ja
movsl
int3
fwait
sti
fiadds
dec
test
add
fistpl
lahf
out
jmp
lock
adc
cmp
pop
leave
jae
fidivs
loop
mov
add
fdivrp
push
mov
cmpsb
jge
repnz
mov
and
push
mov
imul
pop
and
add
add
not
dec
sarl
mov
repz
inc
loop
fisubrs
push
inc
adc
or
pop
xchg
fisubrs
loopne
ficoms
xor
fisubs
dec
insl
repnz
inc
cmp
scas
adc
jb
add
fstp
lahf
arpl
out
gs
sbb
outsb
ficoms
sahf
adc
jo
insl
loop
fisubrs
cmpsb
and
cld
cmp
jo
daa
sub
lahf
mov
mov
cmp
and
push
xor
es
sbb
mov
jo
or
ficoms
popa
inc
mov
sahf
jl
xchg
xor
add
out
pop
or
adc
negl
add
lods
ja
popf
xorl
add
loope
jecxz
aam
fmulp
jb
out
inc
fiadds
fnstsw
loop
mov
rcr
mov
add
fimuls
jae
aas
fadds
inc
fisubrs
push
arpl
fsubp
jp
fildl
call
adc
je
add
dec
fidivrs
dec
lcall
aad
rorb
ficoms
sbb
jne
hlt
rol
decb
mov
adc
pop
imul
lds
daa
or
jb
mov
scas
test
fidivs
xchg
aad
fmulp
ljmp
fidivrs
pusha
mov
jae
push
ja
ficoms
mov
sbb
fisubrs
and
sbb
xor
sbb
xor
aam
ficomps
dec
adc
fimuls
mov
stos
faddp
call
mov
mov
inc
xor
mov
mov
lahf
imul
fldcw
fsubrp
sbbl
mov
mov
dec
sub
jnp
jle
lahf
mov
mov
inc
push
cs
cmc
push
jnp,pt
insl
inc
dec
xchg
pop
clc
or
jb
sbb
or
jmp
aaa
shrb
ficomps
popa
or
inc
xchg
xchg
ficoms
lods
sbbl
mov
addr16
adc
js
loop
jbe
call
sub
ficoms
pop
aas
sti
cld
jg
sbb
inc
mov
rorl
sub
xchg
fidivrs
xor
pop
loope
fldl
repz
ret
mov
sub
xchg
into
mov
and
xor
fdivrp
jle
mov
fiadds
sti
lahf
stos
pusha
inc
outsb
ficomps
or
push
in
push
fimuls
repz
adc
jo
mov
dec
std
pop
xchg
cmpsb
scas
lcall
fmulp
sbb
popf
in
push
jg
fimuls
mov
daa
ficoms
inc
test
int
sub
cmpsb
mov
adc
out
fidivs
cli
adc
sbb
mov
cmpl
cld
or
adc
test
mov
xor
sar
scas
call
pop
faddp
pop
out
fdivp
push
lret
mov
pop
je
xor
imul
pop
repz
sbb
cmp
xor
sarb
ret
push
and
gs
aas
addl
pop
sbb
mov
repz
aad
ficoms
les
rclb
push
fisubl
dec
fiadds
cmp
mov
movsl
cli
ficomps
xchg
mov
ficomps
jge
jnp
sub
dec
sbb
mov
mov
or
fidivrs
shlb
adc
and
push
rcrb
stos
in
lret
sahf
movsl
jle
fdivrp
scas
les
sub
mov
sub
or
add
lock
cmp
ficoms
sub
ds
ret
xchg
lahf
in
pop
ficomps
leave
add
cwtl
xor
push
adcb
pop
addr16
sti
mov
cwtl
pop
int3
ret
test
ret
mov
ds
ficoms
and
fiadds
mov
jmp
cmp
out
sub
rol
jge
sbb
cmp
mov
insb
inc
les
iret
scas
xor
push
das
xchg
ficomps
gs
lods
xor
lds
aam
add
pop
test
popf
mov
sbb
push
add
fstl
sub
fcom
cld
fiadds
mov
mov
nop
fstpt
dec
push
or
mov
mov
push
jmp
rolb
add
mov
lea
xor
fisttpl
repz
dec
xor
jmp
mov
sub
fisubrs
jo
rclb
faddp
jbe
inc
stc
xacquire
cli
or
in
ljmp
xor
jne
or
inc
jmp
pop
push
or
fisubrs
mov
adc
shll
jle
cmp
jbe
or
call
movsl
mov
fimuls
aad
js
xchg
imul
sbb
mov
push
mov
sbb
test
mov
neg
inc
xchg
fucomi
push
jo
adc
fimuls
cld
mov
push
dec
mov
dec
jge
fmulp
add
call
fsubp
mov
cmp
sbb
mov
jp
mov
cmp
xchg
outsb
fistpl
stc
mov
fidivs
cmp
and
ficoms
or
movsl
jbe
int
stos
push
repnz
xchg
jnp
pop
pop
into
rcr
dec
fwait
sub
in
mov
ja
pusha
push
lret
push
rolb
movb
or
xor
add
fstpl
pop
adc
popf
in
mov
fdivp
les
aaa
ficomps
xchg
jns
test
push
mov
jne
mov
push
scas
ljmp
int
test
jp
fimull
fwait
push
lods
out
jle
mov
cmp
into
xor
data16
int3
mov
push
or
xchg
dec
std
ss
frstor
adc
fisubs
xor
ret
sub
lea
mov
mov
cmpsb
jl
push
jnp
ljmp
push
lock
insl
or
cmp
push
sbb
push
push
adc
pop
stos
inc
jg
neg
sbb
arpl
popa
push
cmp
adc
mov
xchg
pop
mov
fisubrs
pushf
fsubr
jge
inc
sub
push
ret
scas
xor
sbb
stc
pop
popl
xchg
sbb
aaa
daa
dec
jno
and
pop
fnstsw
add
faddp
or
aas
inc
pusha
push
xchg
xor
sahf
in
cld
mov
inc
dec
hlt
fiaddl
fisubs
sbb
sbb
js
mov
dec
jle
aad
mov
psllw
mov
jb
test
sub
ret
fidivs
lea
mov
mov
xor
mov
xor
test
mov
ds
arpl
or
fisubs
scas
sub
cmp
out
xchg
leave
lret
pop
ljmp
add
dec
je
fimuls
loope
pop
xorb
das
pmaxub
mov
mov
lcall
or
scas
and
mov
xchg
xchg
jmp
aad
mov
loope
cmp
ss
inc
push
je
cs
movsl
inc
imul
push
arpl
lret
mov
fidivs
jl
cld
insb
jg
fiadds
cmp
mov
enter
lahf
lock
fidivrs
sbb
cmp
mov
into
div
push
ficomps
jecxz
das
call
ficomps
aam
sub
es
and
add
sbb
imul
mov
movsb
mov
mov
into
in
push
xor
mov
pop
mov
inc
mov
push
and
cmp
sti
test
or
mov
cwtl
icebp
shl
hlt
int
int3
mov
ret
pop
sbb
aad
imul
lret
sbb
jle
jae
pop
xchg
les
xchg
ret
popa
or
aaa
gs
inc
push
jmp
ficomps
xchg
xchg
sbb
shl
lods
push
enter
add
arpl
aaa
sbb
int3
test
xchg
aad
movsl
hlt
adc
jae
jge
fnsave
imul
add
in
mov
xchg
jl
mov
mov
jne
rcl
pop
ficoms
jo
pmaxub
mov
or
lret
push
cld
ret
mov
push
pop
fdivp
das
rcrl
std
sub
cmpsl
jo
fidivrs
push
sbb
mov
inc
in
ficomps
push
xor
xchg
fimuls
inc
addr16
jno
cmp
fxch
lods
mov
ficomps
rol
ret
cmp
sbb
ret
fists
inc
iret
jmp
movsl
enter
imul
xchg
or
es
lods
add
dec
inc
or
xor
fidivrs
popf
and
cmp
divl
call
xlat
adcb
fidivs
cmp
stc
ret
fisubrs
andl
call
cwtl
gs
cmp
addr16
sbb
mov
fmulp
dec
adc
xor
cld
stc
pop
mov
test
and
rorb
into
push
cltd
add
jmp
add
mov
jo
fisubrs
xchg
add
stos
clc
test
jnp
dec
mov
mov
cmp
ret
mov
fisubrs
add
outsb
mov
push
pop
scas
inc
test
mov
cwtl
pushf
in
std
adc
and
xor
cmp
es
pop
fidivrs
pop
fstpt
mov
mov
lret
push
mov
add
fldlg2
lcall
push
loope
fidivs
cli
jnp
dec
jns
mov
mov
faddl
out
fsubrp
dec
out
into
cmp
cs
rcll
jnp
daa
repnz
fsubrs
cmpsb
fimuls
lret
mov
mov
add
shlb
mov
ja
je
sbb
clc
into
cltd
add
lahf
mov
lock
mov
movsb
lods
js
mov
ficomps
and
int3
dec
fisubrs
sbbb
cmpl
xlat
sub
fdivrp
adc
cmpsl
bnd
aad
pop
outsl
das
cmp
pushf
lret
repnz
fsubp
ret
sbb
sarb
or
and
cmp
sub
fsubrp
stos
mov
ss
sti
jecxz
rclb
fdivp
xchg
cmp
ds
ficomps
jbe
pop
inc
jp
and
xchg
test
fdivp
out
pushl
inc
cmp
pushf
and
repz
or
scas
popa
cltd
fiadds
push
mov
xchg
mov
int
shrl
in
push
push
les
bound
sbb
incl
es
idiv
pop
jge
into
inc
push
gs
rcr
adc
adc
ja
cld
push
jne
mov
lea
mov
iret
out
movsb
add
out
xchg
pop
shrb
mov
pop
xor
cmp
cmp
fdivrp
mov
sbb
push
or
gs
fidivrs
pushf
mov
hlt
ficomps
jmp
cs
push
rcrb
enter
fidivrs
sarl
test
lea
outsb
sbb
lret
xchg
or
les
fwait
rcr
dec
aam
xor
adcl
fiadds
pusha
test
and
outsb
adc
and
push
dec
push
jb
stos
dec
fidivs
sahf
loopne
out
negl
mov
push
call
jg
imul
lods
fwait
lds
push
in
lcall
xor
rorl
push
add
pop
mov
mov
xchg
incb
mov
sahf
imul
pushf
sub
repnz
jecxz
xor
or
mov
daa
out
xchg
cmp
mov
rcll
enter
pushf
shrb
loopne
scas
data16
xchg
mov
mov
enter
xor
test
iret
adc
dec
jne
and
test
aaa
or
xchg
icebp
xchg
fcompl
sub
lret
jle
add
fcomps
outsb
fmulp
hlt
push
dec
cmpb
rorl
xchg
jge
rorb
inc
and
pusha
xlat
push
shufps
outsl
ss
fidivs
jne
fidivrl
mov
lds
ljmp
leave
ret
int3
aaa
fisubs
push
mov
xchg
adc
xchg
sub
fisubl
cltd
push
shll
mov
in
jno
inc
lea
inc
cs
pop
testb
jp
ja
jne
mov
push
sbb
pushl
data16
dec
movsl
stc
popa
jo
out
sarl
movsb
in
mov
dec
sbb
add
out
fidivrs
or
mov
idiv
popf
ret
pop
pop
movb
negb
das
xor
adc
sub
je
lods
add
call
push
inc
inc
xchg
pop
dec
shrb
fisubrs
sbb
leave
pop
xchg
js
dec
sub
xchg
mov
jg
shl
jle
fisubs
mov
pop
mov
mov
and
or
test
ljmp
in
sub
jb
inc
mov
add
fisubs
or
sub
sti
push
cmp
fidivs
test
add
jo
fidivrs
pop
pop
pop
dec
pop
scas
pop
mov
mov
aad
xchg
mov
cmp
mov
ficoms
into
xor
jns
push
mov
cltd
mov
mov
push
scas
std
xchg
mov
or
adc
jnp
push
sbbl
pop
fildll
jb
gs
pop
iret
into
xlat
pop
lock
rcrb
sbb
or
cmpsb
aaa
dec
mov
ficoms
add
arpl
popl
sbb
mov
into
jno
mov
roll
into
xor
push
rcr
mov
lret
xchg
imul
inc
xor
push
dec
fmul
mov
jg
or
fsubp
int
adc
jge
ficomps
jle
stc
fidivrs
mov
mov
fstpl
test
jno
xor
lret
ficoms
mov
inc
ret
cmp
push
cmp
jecxz
or
jns
test
push
daa
fimuls
pushf
pop
jle
inc
sbb
mov
jg
std
hlt
add
arpl
jmp
cmp
cmpsl
inc
mov
popa
fidivrs
pop
sbb
inc
lcall
rcr
fisubrl
push
jle
lods
int3
int3
push
fidivs
test
add
push
in
cli
mov
fisubs
scas
push
mov
pop
sahf
pushf
add
mov
popa
lret
popl
xorl
aad
mov
fs
fimuls
pop
mov
fisubrs
pusha
clc
mov
idiv
rclb
dec
or
repnz
jp
pop
sbb
sbb
lahf
inc
cltd
into
jo
xor
call
fstps
jae
cmpsb
inc
sbb
dec
mov
cltd
jge
mov
mov
sub
fidivrs
mov
addb
fbld
std
fnstcw
dec
push
dec
mov
add
dec
and
insl
icebp
movsb
mov
and
imul
mov
or
add
stos
popa
arpl
and
or
insl
aam
sbb
cs
and
cmp
sub
push
push
sbb
mov
test
mov
cmc
out
ret
xor
push
popa
xor
push
repz
pop
dec
dec
adc
mov
mov
out
sub
cmp
or
sahf
inc
daa
imul
sbb
pop
lods
aam
mov
je
sbb
jp
sub
sarl
pushf
or
shlb
rolb
popa
scas
lret
xchg
ficoms
push
loopne
movsb
push
enter
cwtl
xor
test
sub
cld
cmpsl
movsl
and
clc
xchg
mov
icebp
fiadds
nop
mov
hlt
and
js
mov
cmp
mov
mov
adc
inc
aam
fidivrs
mov
jb
inc
insl
and
imul
sub
repz
dec
scas
aad
ficomps
in
jg
push
insb
hlt
adc
iret
ficoms
out
pop
mov
lock
jbe
sub
lret
and
push
and
mov
out
lods
jle
scas
pop
in
out
addr16
adc
aaa
pop
mov
fiadds
movsb
cmpb
push
xor
fidivrs
lret
cli
or
es
mov
jno
sub
std
std
movb
les
mov
mov
sarl
adc
fs
sbb
ret
xchg
push
das
pop
jp
push
adc
aam
je
ljmp
mov
lcall
xchg
rol
faddp
adc
add
fidivrs
jne
mov
xchg
mov
je
xchg
pop
fidivrs
stc
lahf
in
lds
inc
dec
mov
or
jbe
jp
xchg
push
std
je
test
dec
inc
xchg
fsubrp
test
sub
mov
mov
fstps
mov
jle
mov
xchg
mov
xchg
iret
out
aam
lahf
adc
lcall
jmp
in
in
xor
or
in
es
call
movsl
adc
push
fidivrs
jne
inc
mov
xor
mov
mov
cs
repz
and
cmp
mov
or
cld
stc
out
and
je
out
cmp
sbb
jnp
sbb
add
sub
insl
test
out
fisttps
add
or
jg
fisubs
jl
sar
push
imul
subb
lock
push
jb
bnd
fidivs
jge
xor
in
fisubs
mov
aad
mov
stos
int
lds
push
xor
adc
jle
jne
pop
jl
push
pop
mov
pushl
repnz
push
xor
cmc
in
pop
jne
mov
jno
pop
fisubrs
sbb
sti
jle
mov
mov
adc
sahf
cmp
mov
or
mov
pusha
shlb
jmp
popa
xchg
rcr
hlt
aaa
insl
push
int3
nop
mov
or
fidivrs
sbb
jb
fnstsw
add
inc
ljmp
xchg
jmp
pop
in
jns
cli
shrl
sub
and
lret
push
dec
ficomps
mov
cmp
nop
jno
imul
xor
sub
jg
in
sbb
pop
sbb
loop
into
mov
js
fimuls
mov
pop
loope
loopne
inc
jle
jmp
out
pop
outsb
sbb
scas
cmpsl
mov
or
lods
test
mov
mov
sub
ss
aas
mov
adc
mov
sub
pop
jmp
aad
sahf
xor
xor
xchg
sbb
adc
fisubs
add
inc
sub
rcr
mov
pop
mov
fdivrp
cmpsb
pushf
push
andb
rorb
inc
jcxz
call
fidivl
adcl
fcmove
and
dec
ficoms
dec
xchg
push
dec
pop
in
stos
lcall
gs
and
mov
aam
cwtl
mov
fiadds
pop
xor
imul
scas
mov
fwait
shrb
sbb
xchg
fdivl
push
add
ficomps
mov
jne
cwtl
sarb
pop
cmpsb
insl
into
mov
popf
and
sbb
xchg
imul
dec
and
inc
int3
mov
cmp
pusha
add
jg
lret
inc
into
push
daa
cmpsl
repnz
lret
fimuls
repz
inc
fisubrs
scas
mov
std
rolb
loopne
outsl
jbe
inc
ret
pushf
xor
jns
adc
ficoms
adc
popa
decl
xchg
mov
add
andl
out
aam
or
outsb
or
or
dec
iret
cmp
fcmovnb
mov
lahf
ljmp
inc
into
sbb
mov
fisubs
outsl
push
adc
mov
dec
outsb
arpl
scas
mov
lds
xchg
fidivrs
outsb
divb
jl
lods
add
es
aas
dec
mov
pop
pop
xchg
inc
enter
cld
sub
rorb
or
into
std
ficoms
pop
cwtl
daa
in
lods
add
mov
xchg
cmc
lret
rcr
mov
cmp
jno
push
outsl
hlt
fmulp
jb
add
inc
mov
fidivs
movsl
cmp
in
orb
out
orl
mov
xchg
xor
jbe
inc
sbb
push
sbb
cmc
aam
fldt
mov
adc
jne
fsubp
lds
xchg
lret
rcr
call
sarb
fidivrs
int3
rcr
jmp
dec
in
fimuls
xchg
hlt
movsb
std
push
stc
mov
mov
sbb
or
scas
inc
jbe
mov
cmp
xchg
icebp
inc
push
jnp
insb
xchg
movsl
sub
pop
popw
popf
cmp
cld
rcrl
lods
mov
xchg
dec
mov
xor
andl
pop
xor
sbb
add
adc
pop
imul
sub
inc
ficoms
les
sbb
jbe
fimuls
jns
decl
int3
mov
leave
sbb
das
sub
std
shr
xlat
sbb
fidivs
aaa
push
faddp
dec
dec
jp
push
xchg
pop
into
aas
lods
insb
sub
stos
out
dec
jbe
mov
cs
insb
lret
std
fiadds
xor
push
sahf
fldenv
repnz
adc
mov
in
ret
stos
ljmp
xchg
fimuls
jp
out
jae
push
gs
aas
lahf
pop
out
sbb
pop
sbb
ret
lods
cwtl
fdivrs
xorb
fiadds
add
xchg
xlat
adcb
cli
mov
into
outsl
dec
mov
push
int
push
insb
sub
and
jle
std
mov
mov
in
mov
inc
repnz
or
stos
add
xor
addr16
mov
enter
mov
inc
add
push
fisubrs
lods
sbb
jecxz
jg
xlat
loop
fistpll
lea
sti
fsubl
mov
push
pushf
mov
jle
sub
sub
adc
and
jl
mov
popa
fildll
mov
xchg
xchg
or
repnz
jnp
decl
mov
pop
fisubrs
call
incb
popf
nop
pop
sbb
jo
pop
sub
fisubrs
add
fstl
out
fimuls
jecxz
push
pop
rcr
add
out
fmulp
out
sub
lret
sarb
fcomps
or
and
subl
fwait
sbb
mov
xchg
ljmp
into
jnp
sub
push
mov
aas
push
mov
rcrl
inc
aad
cmp
xor
jle
scas
lahf
mov
inc
jle
or
fstl
int3
test
outsb
jle
cli
ret
lret
jne
fdivp
xchg
pop
imul
fimuls
ficoml
lods
pop
in
std
pop
lock
andl
fisubs
pop
jnp
js
mov
into
mov
fdivrp
jle
stos
mov
dec
sahf
ja
pop
into
cld
push
imul
xchg
add
rorb
cmp
insb
scas
push
mov
movsb
fsubp
or
fwait
repz
leave
aaa
add
xor
std
mov
cmp
pop
mov
hlt
bound
push
gs
push
fidivrs
movsb
repnz
pushf
cmp
imul
dec
xchg
pop
icebp
push
add
inc
xchg
dec
jp
out
fisubs
cs
daa
cmp
and
xchg
les
stos
lret
scas
shll
push
xchg
nop
pop
fchs
cmc
mov
adc
xor
pop
jge
insl
lahf
std
sahf
mov
test
xchg
sub
icebp
repz
xor
sarb
xor
fidivrs
dec
jbe
lahf
les
xor
shl
in
pop
leave
fisubs
ffree
push
cmovbe
inc
mov
push
dec
lret
addb
iret
repz
mov
rcrl
cmp
ficomps
xor
ficoms
cmp
std
fiadds
jne
pop
inc
fisubrs
xor
loop
or
out
xor
lock
outsb
lods
ss
cmc
push
dec
cmc
fdivrp
cmp
roll
mov
sbb
jb
test
push
movsl
mov
loope
add
inc
lcall
incb
faddl
std
jl
mov
divb
fisubs
dec
enter
adc
adc
sti
jle
je
lret
sahf
dec
leave
sbb
mov
or
dec
lcall
ficomps
cmp
jle
sbb
movsb
lods
sbb
lahf
dec
fisubrs
mov
movsb
into
xchg
mov
ss
add
or
sub
sub
inc
test
xchg
xchg
fsubs
loopne
ficoms
sub
cmp
inc
pop
in
sahf
mov
cmp
cmp
outsb
iret
cmp
ficoms
add
jg
xchg
js
das
jmp
sub
mov
mov
insb
dec
les
and
sbb
loope
icebp
lret
pop
sub
in
mov
push
push
std
loop
sbb
lret
jl
push
jle
loope
jp
cld
into
dec
repz
inc
lods
popf
jg
mov
jle
out
jnp
or
shll
cs
mov
xchg
fdivrp
dec
inc
cmpsb
sahf
in
fidivrs
fcomp
ds
push
int3
adc
dec
scas
fdivp
sbb
jl
fisubrs
adc
pop
lahf
sub
test
out
in
fidivs
cltd
and
push
test
fstpt
vxorps
insb
out
sbb
jg
mov
loope
add
dec
int
lret
leave
sub
cli
pusha
adc
bound
fisubs
mov
mov
imul
xor
pop
sub
int3
adc
std
and
pop
pop
test
mov
cmpsb
stos
das
mov
and
fcomi
inc
push
push
cmp
and
fdivp
out
mov
inc
jle
cmpsl
insl
mov
sbb
outsl
pop
ficomps
movsb
int3
fldenv
cmp
fwait
sbb
add
fstpt
pop
mov
dec
daa
shrl
cmpsl
movsb
push
fs
xor
pop
popf
movsl
push
xchg
or
lds
nop
mov
push
lods
fsubrs
loope
adc
insb
jg
aaa
fisubrs
mov
pushf
sub
stc
lret
imul
push
add
lret
mov
fsubp
pop
stos
jmp
cmpsl
mov
xor
sub
jne
dec
aam
xor
or
gs
mov
test
cltd
shlb
fimuls
jnp
outsl
jmp
aad
inc
dec
xor
aas
cld
movsb
data16
push
inc
ja
cmpsl
mov
cld
push
xchg
cli
std
lret
outsl
test
cmp
pop
xlat
push
pop
into
js
cmp
aad
dec
aas
fsubp
mov
inc
jne
xlat
popa
not
jmp
mov
mov
ficoms
push
imull
jl
cld
dec
cwtl
insl
aas
stos
int3
inc
std
rcrb
push
out
or
cmc
out
add
jecxz
push
aaa
ds
movsb
sbb
mov
cltd
in
sbb
leave
loop
int
out
pop
push
inc
rcr
mov
pop
das
fiadds
mov
push
adc
aam
cli
sti
dec
fisttps
sub
imul
ficoms
pop
xchg
fsubrp
std
jl
iret
sar
sar
xchg
or
lock
and
int3
inc
jnp
popf
scas
pop
fiadds
loopne
arpl
inc
lods
mov
jb
inc
icebp
fisubrs
scas
push
inc
xchg
jmp
xor
pop
jnp
jle
adc
xor
aam
inc
cmp
dec
add
mov
and
dec
sbb
pop
xchg
adc
fsubp
add
rcrb
cld
cmp
psraw
fisubrs
mov
push
ffreep
pop
fidivrs
sub
mov
rcrb
fisubrs
cld
jo
aaa
or
into
xor
cmc
mov
outsl
test
mov
divb
xlat
or
fs
jno
into
cwtl
pop
int
inc
fisubrs
lock
cmc
or
fidivrl
push
xor
je
inc
int
lcall
adcb
pop
ljmp
push
testl
jae
fldl
pop
dec
fidivrs
dec
pop
sti
maskmovq
xor
push
into
das
mov
hlt
fldenv
mov
add
mov
mov
ljmp
fidivrs
cmp
push
sbb
jne
push
testl
ficoms
bound
add
mov
lds
in
sbb
and
daa
sbb
fcoml
sbb
xchg
cmp
sbb
in
sub
aam
xor
scas
push
pop
cwtl
scas
fdivr
mov
fidivrl
push
sti
sarl
xchg
jmp
xor
rorb
jmp
pop
in
ficomps
sbb
cmp
mov
sahf
in
adcb
les
sub
std
jne
adc
ret
enter
pushf
movsb
into
mov
out
mov
or
std
adc
outsb
flds
outsl
int
and
cmpsb
push
inc
jp
jg
fimuls
mov
scas
orb
mov
in
mov
xchg
std
into
dec
jae
cs
dec
dec
fidivrs
mov
fisubs
frstor
add
mov
mov
pop
sbb
adc
jl
cmp
dec
xor
lahf
aad
adcb
and
inc
dec
fisubrs
xchg
add
lret
ficoms
rcl
mov
jg
mov
and
push
fidivrs
mov
adc
pop
adc
faddp
mov
xor
xchg
repnz
pop
or
jl
sar
mov
cmp
dec
dec
add
lock
fdivp
arpl
loop
sti
push
fistpll
ret
xor
pusha
adc
xchg
push
mov
cld
mov
dec
int3
jle
xlat
outsb
and
mov
pop
popa
lds
testl
ljmp
in
xor
sahf
roll
sub
push
add
lret
bound
sub
push
mov
sbb
cmp
xchg
mov
jne
fiadds
adc
imul
notb
cmp
xor
out
loope
cmp
adc
fdivp
pop
inc
mov
add
dec
jle
fs
cmpsb
pop
int
test
mov
insl
sbb
rol
or
lea
push
loopne
std
or
jnp
mov
icebp
std
das
add
jmp
aad
stc
dec
xor
cmpsb
orb
jmp
sbb
adc
test
outsb
add
outsl
sbb
mov
xor
pop
mov
xchg
cmp
ficoms
inc
out
jmp
in
dec
sti
mov
scas
scas
ficomps
push
dec
aaa
icebp
dec
stos
in
fisubs
sahf
adc
xchg
fiadds
fidivs
sub
sbb
sub
push
shll
fwait
daa
in
repnz
sub
lods
xor
push
fistpll
bound
pop
lds
dec
arpl
sbbb
jle
pop
std
inc
paddsw
imul
add
mov
mov
ljmp
shll
or
fidivs
mov
jecxz
push
mov
inc
fimuls
mov
xchg
mov
lods
in
push
pop
push
xor
in
adc
enter
inc
xor
mov
sarb
ficoms
pop
push
cld
icebp
xor
mov
daa
cmp
cmp
jge
out
push
outsb
fidivs
cmp
mov
adc
fidivrs
mov
sub
add
setge
daa
outsl
std
enter
xchg
ret
fisubrl
pop
mov
movsb
push
repz
fiadds
sub
xor
sbb
or
push
std
shlb
mov
in
lret
ret
popf
mov
std
mov
lahf
int3
xlat
or
nop
jno
iret
pop
js
push
mov
pusha
mov
movsb
xchg
cmc
cmp
jb
cmp
rcrl
fiadds
stos
bound
subb
add
shll
xorl
fisubs
or
fwait
inc
jecxz
arpl
mov
ljmp
nop
fildl
mov
das
notb
mov
inc
fidivs
xchg
dec
mov
fidivs
sub
fsubrp
cmp
pop
rclb
fidivrs
cmpl
fidivs
pushf
pop
dec
aam
data16
shll
fdivrp
and
lds
dec
mov
jb
jbe
sbb
push
inc
pushl
pop
xchg
ret
ljmp
sub
sub
jo
inc
ja
fs
pop
sub
ficoms
jmp
push
rdpmc
sub
test
inc
js
adc
ficomps
dec
sub
mov
mov
in
fistpll
jns
sbb
mov
test
fdivrp
mov
test
aaa
sub
and
and
push
lahf
mov
stc
dec
and
aaa
loopne
mov
fimuls
ror
fisubs
xchg
cs
movsl
or
fidivs
jle
mov
fisubs
pop
adc
sahf
aaa
ret
into
cmp
sahf
xor
inc
mov
sub
fisubs
loope
mov
mov
sub
lcall
mov
mov
cld
js
push
mov
fidivs
loope
movsl
fidivrs
or
scas
or
jle
and
mov
ret
sahf
cld
pop
cmp
test
push
ret
mov
fwait
jnp
inc
pop
std
cmpsl
fimuls
stos
imul
jno
jecxz
mov
loop
cmp
lods
outsl
push
cld
jo
std
pusha
fidivrl
roll
fimuls
int3
cltd
bound
hlt
sbb
add
and
je
mov
sarl
popa
inc
cmp
push
dec
int
ljmp
es
push
in
and
into
mov
sub
push
mov
pop
inc
push
mov
or
mov
std
mov
cmpsb
push
outsb
mov
pop
jne
fcmovbe
scas
push
and
xor
push
lret
js
or
out
cmpl
insl
nop
data16
fidivrs
pop
call
out
ret
mov
add
aad
cmp
test
and
or
gs
in
aas
and
xlat
adc
scas
sub
fiadds
not
icebp
push
jo
fmulp
test
out
xorw
and
aaa
test
ja
cli
fdivp
pop
lret
mov
fiadds
pop
fcmovbe
insb
popf
fidivrs
mov
xchg
fimuls
jmp
jo
mov
leave
adc
pushl
push
ret
jmp
stos
aas
into
mov
fdivp
mov
test
fidivs
sub
add
lret
imul
insb
nop
jecxz
inc
fiaddl
mov
or
push
fidivrs
aam
into
enter
jl
fs
mov
leave
loopne
xor
adc
mov
cmc
negl
flds
mov
jae
xchg
fidivs
popa
ds
add
rcr
enter
xor
add
sbb
ficompl
cli
jnp
cmp
loopne
xchg
mov
xlat
sahf
fimuls
repnz
ficoms
insl
push
leave
xchg
inc
int3
mov
pop
fimuls
push
or
sub
sbb
add
cld
outsb
adcl
mov
fiadds
pop
inc
loop
push
aas
rcr
xlat
fdivr
and
jge
pmaxub
test
outsl
repnz
push
jo
mov
imul
repz
xchg
lock
fisubs
sbb
mov
movsl
jo
add
push
jno
fimuls
xchg
or
dec
in
sahf
popa
fcoml
fisubrs
sub
or
push
out
pop
add
fisubrl
inc
add
rorl
sbb
cmp
push
jae
movsl
jb
or
cld
inc
jo,pn
jp
pop
pop
leave
ret
std
out
pop
call
es
cld
js
add
jbe
fiadds
adc
mov
popf
mov
fucomi
cmpsb
test
jecxz
and
enter
jge
dec
inc
lret
arpl
mov
lahf
fidivrs
aas
mov
xor
add
sbb
test
ficomps
xchg
fisubrs
push
dec
outsl
mov
imul
inc
inc
enter
shr
fiadds
push
jbe
push
push
loope
out
mov
rorl
jg
ljmp
fsubs
pop
or
fidivs
fucom
fimuls
push
lcall
sti
add
movsl
iret
add
fimuls
fwait
add
or
xchg
js
mov
jle
mov
fildll
sbb
ficoms
lock
fiadds
jbe
mov
pushf
xlat
mov
adc
mov
and
cmp
inc
add
and
push
aas
ret
int
faddp
dec
xlat
cmp
mov
out
mov
subl
lds
or
pop
fisubs
sub
mov
sub
xor
dec
ret
sbb
fsubr
sbb
stc
fidivs
jl
enter
lods
add
adcb
lock
push
jge
fcoms
fcmovnu
gs
push
out
jge
sbb
negb
mov
push
jg
mov
fisubs
int
pushw
adc
xor
adc
pop
push
ficomps
lds
mov
push
callw
xor
ret
outsb
rdmsr
mov
dec
mov
leave
inc
mov
and
cltd
xor
std
jecxz
and
inc
xlat
sub
sbb
pusha
inc
fcmovnu
das
inc
rclb
std
enter
xor
ret
int3
cmpsl
jle
and
fdivs
int3
pop
xchg
popa
fisubrs
lea
sbb
mov
xchg
ret
in
rcr
xlat
roll
fimuls
push
inc
aas
inc
bound
push
jns
sub
cmp
fiadds
nop
popf
push
sti
test
jle
scas
push
cmp
adc
mov
push
or
xor
insl
mov
pop
xor
jp
shlb
aad
fmull
cmpl
sbb
mov
inc
rcll
rclb
sub
pop
cli
push
or
add
or
fsubl
cmp
jmp
sbb
push
les
jge,pn
jmp
sub
cmp
adc
or
push
pop
mov
ficoms
and
pop
aad
fisubs
insl
es
aaa
mov
ja
subl
sub
and
sti
repnz
sub
push
dec
je
sbb
mov
cld
sbb
js
test
out
add
jle
cmp
push
ficoms
loope
movsb
jns
arpl
in
imul
mov
inc
std
dec
push
pop
in
mov
push
cmpsb
das
pop
adc
cmp
incb
es
sarl
ds
int
sbb
imul
xor
cmp
mov
shll
fsubrp
sub
adc
jno
add
daa
aas
imul
insb
xor
inc
inc
arpl
fisubrs
pop
xchg
fsubp
fnsaves
jle
sbb
xchg
insl
sub
xor
inc
addr16
imul
fnsave
fiadds
mov
jno
lock
bound
sub
jbe
shlb
or
paddq
pusha
fisubrs
xchg
fcoml
dec
jge
adc
test
repz
andl
subb
jno
ficomps
lret
jo
inc
into
push
fisubrs
sub
in
rolb
fidivs
adc
xor
jp
stos
fiadds
addr16
jo
jnp
fisttps
adc
mov
adc
sbbb
add
shl
mov
out
leave
fs
or
xor
fmulp
jg
pop
or
fisubrs
leave
mov
cs
cmpsl
divl
clc
loop
xchg
cld
xor
das
push
loope
adc
pop
bnd
fisubs
jmp
daa
lcall
frstor
cmp
pop
test
jbe
imul
xor
dec
enter
ficomps
mov
sbb
lret
push
les
std
jbe
out
push
cmpsb
push
movsb
test
xchg
push
icebp
push
ljmp
std
and
push
inc
pop
cmpsl
mov
scas
push
jo
push
mov
xchg
bound
cld
iret
mov
xor
rcr
js
adc
dec
adc
movsb
sbb
mov
ja
in
fidivrs
push
cmp
std
sti
lock
jmp
jns
lds
inc
jl
mov
push
mov
cmp
outsb
std
nop
xchg
fyl2x
adc
fisubs
jnp
fidivrs
jbe
dec
outsb
sarb
lods
add
mov
nop
pop
fsubrp
jmp
and
and
jne
cs
dec
decl
sub
stc
jns
int
mov
test
fdivp
dec
ret
aad
push
aaa
aam
ret
lods
test
jl
sbb
jp
lahf
ljmp
fdivp
js
sbb
cmpsb
fs
std
and
ja
jge
fisubrs
jo
movsb
inc
mov
jg
push
lcall
pop
leave
movsb
sub
adc
adc
xor
jle
dec
mov
dec
mov
jno
fisubrs
sbb
bnd
lret
pop
icebp
cld
test
ficomps
mov
bound
cmp
xlat
fisubrs
jge
ficomps
flds
outsl
and
xchg
xchg
ficoms
lods
add
sahf
dec
inc
pop
and
mov
lods
or
test
dec
add
sbb
in
adc
shll
mov
fidivrs
dec
jge
jle
mov
adc
mov
inc
xchg
nop
fidivs
popa
xor
fimuls
dec
lods
sub
arpl
dec
nopl
into
push
fisubrl
lea
mov
jle
lret
jmp
mov
ret
repnz
add
fimuls
pop
es
jg
and
mov
fidivs
shl
fsubrp
sub
daa
or
xchg
rcrl
aas
ja
lock
xchg
cmp
jmp
aad
fidivs
xor
cmc
sbb
fnstsw
fs
into
mov
icebp
push
cld
mov
test
int
cli
std
outsl
and
cmp
xchg
inc
dec
addr16
push
fmulp
dec
adc
cmpl
or
mov
xlat
add
adc
popa
es
std
adc
stos
push
into
fistpl
cld
clc
subl
fldl
adc
jae
pop
add
push
mov
jns
fwait
sbb
lret
leave
dec
and
js
push
into
cs
push
or
pop
test
mov
cwtl
xchg
in
jge
pop
add
mov
jl,pt
fdivrp
sbb
xlat
pop
imul
fisubs
jb
mov
xchg
cmp
jae
imul
push
in
jo
jo
sbb
fimull
cltd
xchg
jnp
fidivrs
cmpxchg
fidivs
add
fiadds
iret
xor
fildll
ja
mov
out
add
nop
test
jl
pop
push
fidivrs
icebp
xchg
xchg
scas
mov
popa
add
xor
outsb
jg
add
into
das
mov
rorb
loop
push
fwait
sbb
adc
sbb
outsl
daa
mov
sahf
jg
sarb
fimuls
dec
xchg
lahf
faddp
and
dec
ficomps
mov
jp
lods
ficoms
add
out
fiadds
sbb
mov
xor
test
shlb
outsb
pop
pop
fidivs
lods
mov
std
sbb
sarl
clc
sbb
mov
pushf
les
jnp
fbld
orb
mov
add
lret
inc
sbb
repz
inc
push
inc
lret
faddp
mov
popf
iret
mov
fisubrl
das
sub
mov
cli
je
dec
or
iret
push
fidivs
adc
xor
mov
cmp
fisubrs
xor
pop
or
dec
movsb
cmp
lods
insl
scas
test
add
stc
adcb
jle
mov
xchg
or
ficoms
jno
xor
fiadds
sub
fidivs
fidivrl
dec
in
cmp
inc
jb
movsl
outsl
or
jg
fisubs
pop
arpl
fdivrp
push
in
iret
push
mov
fidivs
popf
xor
pop
js
mov
pop
inc
sbb
mov
mov
or
in
adc
lods
fcmovne
fdivrs
pop
dec
sahf
adc
rolb
inc
pop
fisubrs
mov
dec
int
call
xchg
dec
push
flds
or
fisubs
jp
xchg
out
dec
add
xor
mov
fnstcw
sbb
cli
into
aas
ljmp
add
push
dec
jo
xchg
and
fiadds
fs
ror
add
pop
sbb
call
xchg
push
cmp
fidivrs
orb
and
fcomps
ficoms
fiaddl
ficoms
iret
push
aas
pop
dec
mov
jg
loope
movsl
movsb
fdivs
jbe
fcoms
popf
fs
jle
aam
xor
and
pushf
adc
repnz
test
clc
mov
jg
dec
or
pop
inc
ficomps
rcll
and
shrb
jecxz
inc
fidivs
jle
dec
cmp
faddp
or
repz
dec
std
mov
aam
inc
mov
cld
fiadds
cs
lock
sbb
sbb
das
ficomps
lods
adc
dec
pop
lcall
mov
ja
ret
sub
push
or
cld
mov
enter
inc
mov
testb
xchg
out
ret
test
inc
adc
ficomps
or
idivl
lea
xchg
fmulp
xchg
push
adc
into
pop
in
add
fs
pop
jo
aam
fisttps
mov
sbb
outsb
rcrb
mov
gs
xchg
aas
adc
test
mov
jmp
aad
jnp
xor
adc
ficomps
insl
push
adc
adc
fiadds
xor
xchg
addb
mov
xor
cmp
mov
or
aas
xorl
out
jg
jmp
sbb
jp
and
mov
sub
dec
mov
cli
xor
sahf
mov
in
aam
add
fsubp
add
fidivrs
dec
push
or
lods
xchg
lods
in
mov
cli
addr16
xchg
add
sub
mov
fidivl
fidivrs
sub
aam
cs
dec
fimuls
push
pop
ds
mov
imul
out
pop
mov
faddl
xchg
adc
arpl
push
daa
les
xor
mov
inc
test
sbb
inc
daa
xchg
fsubp
scas
int3
xchg
enter
jle
dec
lcall
insb
ficomps
inc
mov
in
mov
sahf
movsb
outsb
cmp
xlat
add
sub
dec
ds
arpl
mov
repz
fsubp
scas
popf
mov
mov
cwtl
xchg
or
dec
sbb
icebp
sbb
push
mov
faddp
ficompl
std
pop
inc
ficomps
mov
cli
lret
stos
xor
fidivs
inc
ja
in
mov
lods
fidivs
cld
movsl
or
es
ficomps
pop
int3
lods
hlt
jae
mov
les
cmp
cmp
ficoms
or
flds
inc
mov
adc
cmp
pop
bound
out
pop
movb
es
cmpb
xchg
add
out
mov
fidivs
sub
dec
xor
fmulp
aam
das
push
fyl2xp1
adc
or
and
sbb
sti
fsubrp
lcall
mov
imul
and
aad
in
push
fimuls
aas
mov
fisubrs
dec
or
stc
mov
xor
insb
and
ss
ficoms
in
imul
push
pop
fildl
rclb
fimuls
adc
rcll
loop
ja
add
std
mov
insl
mov
test
mov
fisubrs
imul
fidivrs
sbb
push
xchg
bound
inc
pop
mov
mov
lcall
pusha
fdivl
mov
jns
cmp
mov
mov
xchg
fmulp
mov
mov
xor
mov
fidivrs
add
dec
fidivrs
fnsave
ficoms
dec
sti
into
fidivrs
out
xor
lods
or
or
mov
cmpsb
sbb
sbb
fisttps
rcrl
aaa
ficoms
dec
jl
jge
adc
lret
fidivs
sbb
mov
push
int3
outsl
and
sub
jge
mov
sbb
mov
jg
inc
in
loope
lods
sbb
sub
sub
ffreep
pop
mov
popa
test
repz
mov
pop
mov
xor
push
lret
mov
in
aad
inc
insl
stos
std
std
sbb
cltd
or
jecxz
pushf
fidivl
pop
fiadds
imul
add
push
scas
inc
lods
fsubp
dec
mov
int
and
fmulp
xchg
inc
dec
and
std
fidivl
push
ljmp
dec
pop
xor
xchg
clc
fiadds
in
loopne
shll
into
sub
and
hlt
cli
fcomi
push
pop
test
mov
nop
jle
mov
xor
test
xchg
ljmp
sbb
fidivrs
scas
pushf
faddp
testb
faddp
lret
cmp
fisubs
enter
dec
fs
sti
pop
pop
arpl
cmpsl
jae
cmc
dec
mov
jge
mov
sub
shl
gs
stos
mov
xchg
jmp
aad
xchg
jg
push
cld
sub
sbb
jge
fiadds
pop
mov
test
jbe
cmpsl
imul
fsubrl
aas
sarl
imul
sub
inc
jmp
mov
ficomps
ljmp
les
and
cmp
sahf
sub
addr16
and
stos
mov
nop
out
fiadds
pop
ret
pop
pop
adc
push
divb
pushf
movsb
fadds
test
fwait
push
imul
fildl
out
leave
mov
aad
mov
jo
fisubrs
dec
daa
pop
negb
fidivrs
mov
int3
and
cmpsl
fiadds
push
sbb
fidivs
sbbb
ja
std
ret
mov
mov
mov
inc
enter
adc
insb
in
int
xor
dec
fisubrs
out
daa
push
fsubp
rclb
in
xor
adc
sahf
jle
inc
inc
push
pop
nop
shrb
fimuls
aam
fldl
cmp
sbb
aad
ficomps
je
dec
les
das
mov
cltd
lret
inc
dec
push
orb
lods
and
iret
sbb
fstl
in
pushf
fidivrs
icebp
ds
cwtl
loope
jae
xchg
push
sub
into
push
sbb
inc
mov
pop
push
jmp
xchg
mov
cli
add
in
insb
sahf
fadd
ret
push
adc
outsb
jno
or
pop
lea
inc
or
ss
lret
inc
fcmovbe
mov
push
jmp
jle
lret
inc
test
movsl
and
pop
and
faddp
loop
shlb
cmpsb
sub
fsubp
outsl
jae
dec
pusha
inc
adc
lea
aaa
mov
adc
pop
fdivp
mov
jo
das
pop
xchg
xchg
adc
push
mov
fidivs
dec
cmp
xor
cmp
in
fidivs
add
into
fidivs
loope
push
add
jl
and
ficomps
sbb
testl
in
pop
pop
push
bound
test
incb
pop
mov
sub
jnp
loope
lcall
dec
pop
dec
dec
adc
xchg
pop
mov
mov
test
test
mov
and
mov
outsl
ret
cmp
dec
inc
and
sbb
into
shl
adc
jg
sbb
into
cs
mov
jbe
dec
mov
insl
std
shll
sub
ret
dec
inc
and
push
jp
inc
mov
push
popf
into
lods
jne
cltd
mov
push
rolb
push
inc
ficoms
or
es
dec
mov
add
test
mov
add
ss
mov
or
ret
inc
out
lahf
inc
push
mov
les
fidivrl
ficoms
mov
mov
fsubp
jge
pop
rcll
fdivp
mov
jl
fimuls
call
mov
cltd
pop
jle
adc
je
sbb
add
pushf
mov
lds
fwait
xor
data16
jge
leave
mov
inc
sbb
fs
cltd
mov
inc
dec
scas
jbe
cmp
xchg
cmp
cld
fiadds
adc
ljmp
and
hlt
dec
test
int3
cmp
xchg
sub
cmp
mov
dec
fsubp
push
mov
xchg
fiadds
sub
xor
mov
push
into
popl
jmp
and
mov
adc
add
aas
mov
or
and
lods
adc
cld
push
push
push
loop
scas
popf
test
fisubs
mov
dec
lret
faddp
jge
pop
add
sahf
inc
and
push
pop
ficoms
sbb
pushf
bound
mov
ss
clc
rorl
rcr
add
mov
dec
aas
into
and
inc
mov
popa
cmpsl
xchg
pop
lret
jmp
aad
cmp
fidivs
mov
lds
mov
rcll
int3
adc
push
fidivrs
pop
push
cmp
push
fidivs
xorl
mov
push
fsubrp
and
jp
insb
dec
fidivs
push
out
jo
cmpsl
stos
mov
sub
push
push
fiadds
inc
fucomip
sub
mov
lock
imul
jge
mov
cmpl
xor
add
fidivrs
xor
push
mov
sub
enter
cwtl
xlat
jne
in
data16
fiadds
ds
push
enter
aam
mov
out
dec
rcrb
pusha
fdivrp
out
test
mov
inc
daa
lret
lea
cli
sbb
adc
xor
scas
lret
movsl
xchg
popf
mov
ficomps
sub
xchg
dec
fidivs
pop
cltd
lds
jle
pop
inc
icebp
pop
shrl
cmp
enter
dec
inc
cs
sub
hlt
shrl
int3
dec
imul
fisubs
pop
cmp
ss
ret
pop
and
mov
inc
outsl
fcomps
rcll
jle
mov
cmpl
repz
inc
or
test
and
jbe
fidivs
push
push
mov
repz
pop
mov
sahf
rcr
mov
or
iret
bsr
push
push
into
push
pop
fsubrl
ja
daa
cmc
sti
fidivrs
cmp
push
xchg
xchg
inc
jb
faddp
incl
cld
movsl
push
mov
xchg
jo
fisubrl
imul
repnz
push
add
jmp
jae
fidivs
mov
popf
mov
div
mov
adc
dec
cli
stos
das
mov
dec
adc
test
pushf
jnp
mov
mov
or
mov
call
rclb
dec
data16
or
mov
icebp
dec
xchg
fdivrp
cmpsl
mov
rcl
xchg
fwait
scas
jl
stc
loopne
scas
lds
mov
cmc
or
andps
std
jecxz
test
test
or
loope
push
mov
push
icebp
arpl
lcall
xor
cld
pop
leave
popf
fisubs
jmp
fidivrs
jne
iret
ds
xor
sahf
sahf
daa
add
leave
and
icebp
lahf
pop
fidivrs
sub
mov
inc
cli
fdivp
in
outsl
or
test
into
stos
cmp
cmpsb
dec
jp
aas
daa
fnstenv
mov
rorl
cmpsb
inc
std
fsubp
fnstenv
and
push
jge
xchg
jp
fs
dec
call
xchg
xchg
mov
out
fidivrs
into
mov
fisubrl
fidivs
sahf
or
inc
ja
dec
pop
addl
jnp
fmull
fisubrs
pop
add
sbb
xchg
adc
outsl
into
push
or
lahf
outsl
jo
and
call
cmp
fdivp
add
test
das
dec
sarb
cld
push
outsb
sti
loope
mov
mov
sub
jle
lds
xchg
fisubrs
pop
mov
out
ficomps
pushf
loope
std
repnz
in
fiadds
xor
sbb
cmc
pop
mov
fidivs
stos
cmp
aam
out
xlat
dec
push
inc
cmp
ds
aaa
pusha
fucomip
jo
fsubrp
mov
nop
xchg
fimuls
mov
hlt
pusha
xchg
inc
int3
ret
and
sbb
fsubl
popa
add
sarl
loopne
in
int
insl
fisubrs
sub
fisubs
fsubs
ja
push
fimuls
rcl
nop
out
test
andl
xchg
adc
repnz
shll
xor
push
lea
xchg
movsb
lret
outsb
mov
lret
ret
ss
cmpsl
insb
push
pop
cmp
lcall
fdivp
xor
sarb
sub
dec
or
pop
sbb
fdivrs
loope
mov
dec
xchg
jae
add
ljmp
sbb
mov
data16
fimuls
xchg
mov
ja
xor
scas
ret
add
into
cli
pop
add
adc
fsubrp
sub
fidivs
les
enter
je
mov
mov
inc
jg
test
insl
fsub
imul
aad
or
cld
imul
pop
sub
cmp
add
mov
pop
movl
sbb
mov
leave
int3
pop
mov
lds
push
pop
mov
pushf
stos
pop
and
imul
cwtl
or
ljmp
andl
cmp
mov
jb
mov
mov
out
repz
add
rcrl
push
decb
sbb
fisubrs
inc
inc
jo
and
repz
and
sbb
pop
loopne
fidivrs
enter
xor
std
iret
outsb
insl
ret
stc
inc
mov
add
sarb
cmc
icebp
adc
fidivs
mov
xchg
outsb
push
cmp
mov
fisubrs
rolb
cmc
and
fiadds
outsl
scas
sbb
hlt
inc
test
cmpsb
into
ret
mov
fisubrs
movsb
test
dec
mov
ds
jo
jmp
test
mov
push
int3
jle
idiv
dec
in
jp
adc
xchg
addl
clc
into
add
test
scas
hlt
xlat
lods
push
ficoms
addl
push
cmc
or
mov
cmp
push
xor
jb
incl
inc
movsl
addr16
test
push
pop
cmp
xor
into
rcl
add
inc
sbb
pop
fiadds
dec
dec
mov
popf
sbb
pop
neg
jge
mov
xor
icebp
sahf
dec
mov
dec
sbb
sub
call
movsb
jae
push
sbb
jne
cld
sbb
push
sbb
xchg
xor
cli
add
lds
inc
inc
or
mov
push
scas
push
cmp
jp
sub
lods
ljmp
mov
mov
rcrl
ja
pop
dec
ficomps
jne
mov
xchg
popf
cmpsb
cmp
dec
fmulp
xchg
xor
test
fisttpll
js
lret
jae
lock
inc
ficoms
mov
mov
adc
adc
inc
xchg
fimuls
jbe
popf
mov
mov
inc
xchg
std
adc
mov
add
cltd
pop
push
sbb
addb
dec
jg
enter
sbb
xor
sub
mov
cs
or
push
jnp
fdivrp
dec
cli
test
xchg
mov
cmp
aas
cld
aaa
insb
mov
sbb
fdivrs
popa
push
mov
and
out
add
fdivp
or
int
cmp
inc
jge
add
outsb
fcomi
out
push
mov
daa
cld
sbb
push
lret
jle
int
sub
into
sub
jnp
adc
setno
dec
xchg
add
mov
push
jle
pushf
xchg
jg
lret
push
xchg
loopne
jne
cmp
fdivl
pop
les
inc
ficomps
mov
cltd
fdivrp
jmp
jecxz
pop
cli
xlat
fsubp
and
fsubr
pop
or
lds
inc
fimuls
cmpsb
imul
xchg
call
fidivs
cmp
or
fwait
popa
xor
mov
adc
aad
or
outsl
xor
sub
inc
jle
sub
add
fimuls
jl
push
and
movsl
push
nop
aas
data16
notb
pop
fimuls
ss
stc
jne
cmp
fmulp
arpl
fidivrs
scas
jecxz
test
xor
lret
pop
jge
adc
add
push
mul
fs
xchg
pop
dec
es
into
push
mov
jno
xor
ficomps
cltd
test
fiadds
cmp
add
jl
jg
jle
xor
fiadds
inc
sub
and
mov
ficoms
cld
xor
jmp
adc
inc
adc
xchg
mov
test
icebp
fisubrs
add
cmp
sbb
bound
lahf
rcrb
xchg
dec
out
adc
cmpl
push
inc
mov
fisubs
push
subb
daa
insl
dec
sub
fs
fsubrp
or
add
cld
sbb
mov
sub
enter
xor
outsl
imul
cmp
fidivs
or
leave
fidivrs
out
xor
cld
cld
fwait
pop
push
addr16
pop
xchg
sub
dec
cwtl
mov
mov
in
jne
or
mov
or
int
xchg
push
sbb
fidivs
ficomps
xchg
xor
fisubs
movsb
or
fisubrs
insl
out
inc
sbb
or
sbb
inc
fidivs
enter
jge
aad
andl
fistpll
sub
icebp
xor
jp
outsb
cmp
in
add
repz
fisubs
dec
mov
sarb
loop
pop
mov
into
xor
adc
adc
lcall
push
fiadds
jle
mov
dec
mov
loopne
minps
sub
push
mov
mov
insl
jo
imul
ficompl
fidivrs
sbb
in
mov
push
xorl
adc
inc
push
pop
fisubrs
jp
imul
cmc
cmp
push
rcll
fimuls
ret
jge
push
rcrb
pop
inc
shl
arpl
cmpb
and
mov
xchg
push
es
push
or
jae
sbb
cmp
bound
mov
imull
fcmovu
dec
stc
outsl
loope
add
adc
jb
cmp
into
push
mov
xor
fidivrs
imul
rclb
inc
jle
sbb
int
fmull
leave
xchg
sub
xchg
fmulp
hlt
pop
stc
and
lds
mov
pop
movb
or
repnz
push
cmp
out
test
iret
lds
ljmp
mov
sub
pop
out
pop
insl
outsb
nop
ja
mov
pop
enter
mov
das
push
fiadds
sti
ljmp
add
and
inc
js
xlat
pop
jnp
mov
fimuls
mov
out
faddp
repnz
insl
cmp
aaa
bound
in
pop
jle
mov
sub
loopne
mov
jno
std
and
fistpll
into
cmp
lods
sub
ficomps
mov
mov
leave
rep
enter
mov
js
fmulp
jmp
add
scas
cmc
fimuls
out
pop
sarl
jo
dec
popf
or
mov
inc
xor
mov
sbb
jo
jl
out
inc
fidivs
in
subb
aas
lret
fisubs
and
sbb
jge
jp
sahf
mov
dec
fidivrs
sti
int
pop
lret
cltd
das
mov
pushf
les
fimuls
pop
pop
jmp
out
mov
mulb
std
sub
bound
sahf
repz
xchg
xlat
adc
pop
out
fimuls
nop
inc
lock
stos
jb
or
repz
sbb
mov
sub
or
jle
pusha
shlb
inc
daa
rorl
xchg
imull
fdiv
test
repz
or
and
cmp
sbb
mov
popa
push
cmp
fidivrs
cmpb
in
add
rcr
sub
mov
push
fisubs
adc
fcompp
nop
hlt
insl
data16
pop
push
scas
ss
mov
fsubs
mov
add
scas
adc
das
fcmovu
or
lret
lahf
shrl
add
into
fdivp
fisubrl
fdivrp
insl
ja
testl
jle
shlb
jl
or
enter
shlb
ficoms
test
in
ficoms
jmp
testb
into
sbb
or
add
jo
fisubrl
out
mov
shl
lret
inc
cmp
dec
mov
pop
pop
mov
into
leave
mov
mov
xchg
jmp
insb
mov
and
hlt
cmp
inc
mov
push
fmulp
loope
stos
or
pop
cld
mov
mov
add
add
or
lock
cmc
andl
xor
sbb
ret
xor
xchg
pushf
in
push
into
mov
jno
cmp
cwtl
push
xor
pop
lret
neg
jbe
ds
push
imul
imul
mov
mov
cmp
add
shll
push
sub
out
mov
jge
mov
jl
es
xchg
es
enter
test
pusha
xor
inc
push
adc
insl
pop
jle
inc
rorl
xor
sbb
sbb
dec
cmp
orl
outsb
xchg
lods
jle
dec
aas
xchg
mov
adc
pop
xor
rcr
fsubrl
dec
and
jmp
subl
xlat
push
fidivrs
stos
cmpsl
mov
das
js
cmp
sbb
scas
cmc
or
int3
sub
loope
mov
push
data16
fimuls
push
imul
xor
fidivrs
fcompl
fimuls
iret
cli
cmpsb
or
dec
add
pop
sbb
and
cmc
dec
sbb
fisubs
push
jo
shlb
sbb
and
movsl
ds
cmc
out
mov
push
sub
es
in
les
mov
xor
popl
add
ficoms
cltd
sbb
aaa
fcomi
in
das
jmp
mov
leave
je
inc
mov
bound
vpmaxub
call
in
cli
fdivp
cmp
arpl
xchg
jne
sar
dec
fs
fsubrp
mov
mov
xchg
push
inc
dec
rol
xor
mov
stos
fisubs
lret
mov
cwtl
mov
fimull
or
push
sbb
jecxz
inc
sub
xchg
fiadds
push
repz
out
faddp
pop
rclb
mov
je
add
pop
iret
mov
mov
inc
fnstsw
mov
cld
loopne
xchg
sbb
xor
and
cmp
stos
xchg
xchg
adc
dec
test
mov
ficoms
mov
shlb
mov
push
mov
lcall
ret
mov
lods
stc
js
add
rorb
into
adcb
notb
sarl
inc
mov
add
push
inc
fidivs
xor
xchg
aaa
mov
mov
jnp
push
hlt
cmpps
pop
ljmp
fcoms
jp
and
mov
add
add
ljmp
jg
nop
icebp
loope
insb
jle
int
push
hlt
sub
adc
sbb
ret
sbb
fiadds
jg
pushf
rclb
repnz
rol
and
lds
fidivs
cmp
sbb
inc
or
stos
fimuls
jnp
jecxz
and
lds
cmp
adc
or
rorl
push
in
inc
bound
xchg
mul
xor
hlt
fadd
add
lods
cmp
fisubrs
fistpl
jb
popa
jle
lahf
out
insl
leave
mov
xchg
pop
sahf
sbb
je
add
out
sbbb
inc
push
ficomps
push
outsb
adc
mov
and
seto
iret
aas
push
shl
ficoms
mov
fiadds
push
push
fcompl
scas
ds
lea
cs
xor
std
mov
xchg
dec
scas
fwait
or
cli
pop
mov
cmpsl
add
mov
fisubs
push
push
das
mov
gs
sarb
xchg
cmp
into
add
ficomps
jmp
xchg
mov
addr16
adc
add
inc
inc
repnz
mov
test
test
cli
push
xor
bound
cmp
test
fiaddl
cmp
mov
dec
fisubs
jmp
xlat
jle
mov
int3
mov
ret
mov
into
and
and
pop
nop
cmp
xchg
outsb
mov
fnstcw
scas
add
clc
imul
cmpsb
mov
fiadds
ficoms
insb
ljmp
xor
cmp
xlat
fisubrs
subl
xchg
pop
aaa
mov
jmp
cmc
not
sahf
scas
mov
xor
jo
inc
xchg
adc
or
pop
jno
popa
mov
ss
rclb
sub
insb
shll
adc
pop
test
lock
xchg
xchg
inc
pop
ficoml
mov
addr16
fdivp
enter
xor
repz
loope
into
mov
xchg
inc
jo
ficomps
test
bnd
and
jne
adc
mov
mov
adc
outsb
mov
in
stos
mov
mov
jl
adc
negb
push
dec
ficoms
rcll
outsl
push
repz
mov
mov
and
or
xchg
sub
push
fisubrs
inc
mov
mov
dec
jbe
jecxz
and
fsubp
bound
fdivr
mov
ficomps
or
jno
dec
ror
add
xchg
xchg
lods
mov
rolb
cmc
jl
js
fmulp
aad
cmp
ficoms
mov
inc
fcompp
dec
fsubs
fisubs
xchg
out
iret
rol
ds
cmp
movb
jae
in
ja
ds
pop
mov
scas
divl
cmp
fistpl
push
lods
adc
fiadds
xchg
dec
jecxz
enter
and
gs
fs
out
rolb
pop
jmp
sbb
mov
sbb
fidivs
add
fdivrp
popa
mov
loopne
and
dec
pop
aad
xchg
ficoms
orl
and
fidivrs
cwtl
sub
mov
sahf
ljmp
sbb
std
imul
xchg
ret
sti
cmp
int
xor
rolb
ret
decb
cld
mov
cmp
repnz
in
fildll
les
mov
ficoms
xor
mov
inc
jno
push
lret
decl
std
add
fdecstp
fiadds
cmc
push
sti
ficoms
jp
push
add
arpl
popf
scas
xchg
stc
dec
mov
and
fsubrp
in
sbb
and
in
shrb
and
jnp
int3
stc
dec
ret
sbbb
jns
scas
adc
fidivs
xorb
push
sahf
sbb
repz
cmp
lret
movb
push
popf
fdivp
jns
dec
fsubrs
mov
movb
fidivs
mov
xchg
andl
loope
mov
push
dec
lods
fists
ljmp
sub
insb
adc
js
outsl
repnz
mov
xor
fimuls
rcrl
fidivs
jecxz
lods
cld
xchg
or
ficompl
mov
lret
cmpl
loopne
or
fidivs
jp
fs
sub
mov
mov
rcr
hlt
lock
mov
push
imul
sbb
mov
popa
fisubrs
mov
xchg
movb
in
adcl
xor
rcr
inc
std
bound
adc
mov
enter
sbb
into
sbb
push
push
jle
movsl
stos
cld
adc
lahf
jl
arpl
add
fs
std
cli
pusha
lea
fsubp
pop
and
fmulp
lock
mov
mov
loop
and
ficomps
pushf
movsb
cmpsl
sub
inc
xchg
clc
data16
sbb
in
faddp
cld
sub
or
gs
aas
insb
fmulp
scas
mov
out
fdivp
inc
jmp
cmp
int
xor
xchg
fistpl
fcmovu
adc
inc
fwait
incb
jg
mov
in
cmpb
jo
xchg
lret
neg
cmp
and
std
addr16
orb
sub
orl
je
mov
sbb
inc
push
dec
or
stos
pop
fsubp
push
sahf
cli
bound
cld
stc
fisubrs
mov
jle
les
fidivs
add
int3
mov
or
daa
fsts
ss
ja
adc
mov
leave
dec
sbb
ret
fldt
fcmovu
push
hlt
cli
pop
mov
xchg
fcomps
add
pop
dec
fidivs
lock
xchg
ficomps
in
aaa
jecxz
in
xchg
std
pop
adc
add
xchg
pusha
or
sub
sar
lret
or
daa
arpl
mov
insb
test
xchg
cvtdq2ps
fdivrp
scas
loopne
mov
enter
or
cmp
int
adc
int3
pop
insl
dec
mov
inc
inc
sub
into
arpl
pop
sbb
mov
pop
mov
mov
ret
outsb
rorb
jle
mov
cmp
pop
and
fsubp
xchg
and
dec
inc
jb
test
and
cmp
and
push
pop
cmp
mov
mov
dec
inc
loope
daa
sbb
push
sbb
lret
pop
fidivs
pop
sub
mov
test
in
ficoms
mov
xor
das
cmpb
adc
pop
dec
ret
lods
enter
xchg
sbb
mov
jne
xor
sbb
push
scas
fimuls
jb
pand
lret
aaa
fisubs
sbb
mov
scas
scas
jb
pop
mov
fisubs
jle
shr
mov
jecxz
aas
cmp
and
notb
sub
in
dec
xchg
lds
cmp
mov
jle
out
jmp
sbb
lret
cmpsb
sbb
dec
pop
fidivrs
jbe
out
fidivrs
in
push
xchg
or
dec
xchg
ret
icebp
cld
adc
mov
mov
fidivrl
mov
ja
mov
hlt
pop
sbb
ficoms
add
test
push
mov
fmul
pop
jne
xor
cld
std
pop
js
mov
mov
mov
hlt
in
adc
fidivs
cmp
or
cwtl
adc
insl
jle
or
pop
inc
ficomps
jg
fdivp
call
or
fiadds
cmpsl
push
push
ficomps
outsb
pop
dec
ficomps
xchg
jb
cmp
movsl
mov
jns
mov
into
sarl
dec
cs
inc
fsubrp
jnp
in
push
dec
cmpsl
mov
dec
test
push
fistpll
arpl
dec
aaa
clc
mov
mov
fcoml
jle
lahf
std
sbb
aam
lock
dec
lret
mov
inc
and
and
sti
pop
add
jge
inc
adcb
adc
mov
ss
loope
js
int
lods
adc
cld
jns
adc
pop
mov
dec
fmuls
out
repnz
cmp
icebp
mov
cltd
pop
out
dec
fidivs
stos
leave
subb
fisubs
jecxz
adc
fisubs
inc
cmp
adc
inc
cmp
push
inc
add
push
mov
loopne
add
cmc
cmp
and
mov
sbb
ret
ficoms
mov
sbb
jge
fsubp
fistl
mov
cmp
ret
dec
ficoms
jg
sbb
jnp
out
mov
fists
scas
aad
pop
testb
mov
pop
ss
fists
test
xchg
add
shrl
mov
clc
fsubp
lret
cltd
jg
pop
stos
fidivs
add
fs
mov
mov
adc
mov
rolb
fmuls
fsubp
pop
aad
pop
mov
mov
fisubs
aad
data16
popf
xor
mov
shll
les
jb
lret
test
xchg
lods
mov
mov
lret
ficoms
cmp
mov
xchg
or
shlb
add
shr
outsl
addr16
movsl
jp
and
imul
or
rorl
hlt
ficomps
sahf
cwtl
int
mov
push
lea
cmp
add
sub
pop
movsb
lods
mov
sbb
lcall
xor
nop
jnp
arpl
fisttpll
push
test
pop
mov
aaa
cltd
std
or
das
lahf
jecxz
adc
inc
test
lret
ror
pop
pop
mov
and
lahf
inc
mov
out
jns
inc
shll
mov
test
cs
fisubrs
mov
lahf
fidivs
scas
cmpl
push
loopne
hlt
test
mov
inc
int
adc
cmp
or
test
fisubs
repnz
icebp
mov
adc
inc
cmp
inc
outsl
roll
inc
rorb
ficomps
push
mov
mov
outsl
pop
loop
fisubrs
shlb
ficomps
outsl
inc
cld
push
repz
adc
jbe
pop
dec
adc
popa
fmull
faddp
mov
cmp
nop
sbb
ljmp
inc
psubw
xchg
inc
in
inc
fstp
fsubrl
pop
insl
xor
mov
add
mov
pop
notl
imul
fidivs
pushf
cmc
mov
fisubrs
imul
jb
inc
pop
pop
in
cld
movsl
sbb
sbb
fisubs
into
es
ficoms
add
sub
inc
inc
arpl
push
mov
popf
jle
mov
jo
int
xor
dec
mov
push
sbb
inc
pop
mov
dec
and
mov
dec
pop
sbb
lods
mov
ror
ficoms
cmp
pop
push
sbb
jne
lret
push
jnp
fidivs
push
xlat
clc
fyl2xp1
mov
repnz
dec
dec
or
scas
dec
jbe
das
je
rcr
into
mov
xchg
inc
inc
pop
fsubrp
stos
jp
fcmove
fnstsw
mov
pop
sti
jns
ja
fisubs
pop
stos
xchg
mov
xchg
mov
xor
pop
iret
icebp
stos
cld
xor
push
mov
pop
mov
ja
xchg
in
sub
testl
cmp
into
adc
jl
test
jns
xchg
lret
clc
pop
fidivs
cmp
fdivrp
movsb
and
fnstcw
and
outsl
and
in
adc
jp
add
dec
fidivrs
add
add
cli
out
and
jle
mov
sub
and
jnp
fidivs
or
imul
repnz
inc
fisttps
ficoms
push
aaa
add
push
sbb
jle
sarl
jae
lahf
lock
xor
jge
mov
fidivs
xchg
scas
jbe
cmp
std
inc
mov
jg
or
loope
sbb
out
jns
test
mov
fstpl
mov
push
cwtl
pushf
mov
mov
movsb
daa
xor
adc
jmp
mov
pop
fidivs
fldl
out
stos
mov
push
test
adc
sbb
inc
cmp
or
jmp
dec
pusha
movsb
xchg
ret
mov
lods
int
psrlq
cmp
fs
rorb
xchg
outsb
popa
mov
jg
mov
xchg
in
xchg
test
xchg
fimuls
sub
pop
rcrb
in
bound
ficomps
mov
xchg
fisubrs
imul
divb
fsubp
mov
test
adc
xchg
arpl
mov
push
aaa
lea
xchg
fdivp
out
push
jl
and
enter
nop
adc
jecxz
stos
fisubrs
pop
js
outsl
cmpsl
sbb
cmp
fidivrs
or
and
sub
lock
pop
inc
mov
mov
jo,pt
xchg
lret
imul
cmc
sbb
xor
inc
xor
fisubs
mov
cmp
cmp
test
mov
cmp
les
and
in
xor
adc
fidivs
in
fadds
fiadds
inc
push
and
dec
pop
jg
movsl
fmuls
cs
inc
lock
xlat
sahf
ss
cld
and
aam
out
mov
dec
jle
add
dec
imul
jmp
clc
movsb
rol
fiadds
in
fmull
fldt
sbb
mov
ds
jmp
adc
cwtl
int3
add
pop
mov
lods
arpl
mov
fdivp
sbb
mov
or
mov
push
mov
adc
add
mov
daa
mov
lds
mov
or
enter
loopne
mov
enter
mov
adc
insl
into
mov
jbe
sbb
xchg
rcr
jge
aad
fstpl
add
dec
add
inc
fwait
outsb
or
jle
dec
fstps
fwait
mov
lret
xor
sbb
shld
outsl
cld
insb
push
push
push
fiadds
fiadds
inc
stc
repz
cmpsl
pop
js
les
adc
sbb
scas
fwait
lahf
into
mov
pop
push
loopne
mov
fiaddl
fiadds
inc
fmul
sub
insb
or
jno
push
mov
and
lods
adc
sbb
fimuls
cmc
int3
lret
sub
mov
arpl
fsubp
jb
jecxz
inc
mov
cs
ficoms
out
ficomps
fwait
or
push
jae
push
inc
sbb
test
mov
popf
add
testl
js
jne
ficomps
out
dec
fmulp
pusha
push
mov
sbb
pop
call
mov
data16
xchg
cwtl
std
dec
out
jae
sbb
pop
ficomps
stc
ror
faddp
fnstenv
sbb
loope
ficoms
ja
dec
mov
xchg
jmp
inc
ljmp
dec
enter
lea
pop
xchg
ds
ljmp
mov
rcr
clc
in
xchg
inc
mov
out
sbb
mov
xor
jmp
js
fisubs
pop
xchg
notb
mov
mov
fimuls
fs
fidivrs
adc
xchg
pop
jns
fidivs
aaa
mov
int3
repz
sub
stos
std
aam
cmp
enter
and
push
movsl
jp
push
das
inc
dec
fisubrs
sbb
mov
sub
sbb
ds
or
fidivrs
pop
dec
stos
popf
sub
test
sub
mov
into
aaa
das
pop
xchg
xchg
fimuls
inc
push
outsl
faddp
add
dec
sahf
and
shl
xor
in
or
fstpl
or
xor
add
mov
and
in
jo
imul
int
fiadds
xor
mov
in
adc
fimuls
xchg
jle
jne
pop
or
mov
cli
pushf
dec
fsubp
xor
mov
lcall
subb
sti
inc
push
sbb
stos
add
aaa
ficomps
add
movsl
fiadds
sub
mov
cmp
jno
or
ds
lret
rolb
sbb
mov
xchg
js
jp
dec
daa
cmp
pop
add
std
leave
sbb
loopne
test
loope
push
dec
fdivp
mov
mov
mov
hlt
adc
rorl
cld
cmpsb
sub
fidivrs
frstor
out
jg
call
add
mov
testb
mov
adc
addb
fdivrp
arpl
pop
push
inc
adc
lds
loopne
sbb
mov
mov
pop
xchg
push
stc
cld
add
cmp
pop
fiadds
xchg
test
test
mov
fisubs
jno
clc
shrb
rcr
scas
test
rcrl
or
cmp
pop
out
mov
fistpl
clc
jmp
aad
and
xor
jb
lock
mov
sub
jle
mov
into
mov
cli
aam
pop
lret
cmpsb
ja
jecxz
push
pop
fisubs
into
adc
dec
fidivs
fidivrl
sbb
lahf
xor
leave
and
sub
into
stc
pushw
ficoms
jecxz
clc
stos
movsl
addr16
sahf
rcll
cld
shrb
lock
xchg
add
jmp
shlb
movsb
mov
aaa
cmc
fsubr
sub
leave
fisubs
and
sbb
cld
mov
push
mov
add
bound
pop
and
addr16
jl
dec
pusha
ljmp
fidivrs
and
sti
cs
sbb
xchg
inc
xchg
fimuls
sar
lods
imul
fdivrp
mov
insb
or
repnz
lcall
xchg
sbb
popa
enter
fdivl
xchg
mov
stos
insl
mov
fiadds
shrb
es
xchg
icebp
cmc
mov
fisubrs
sbb
add
mov
dec
pusha
xor
std
mov
mov
loop
jl
sti
cwtl
sub
iret
fsubl
outsl
xchg
push
fcomp
push
push
in
cli
mov
mov
and
adc
xor
mov
cmpb
out
mov
outsb
fsubp
ja
dec
fdivl
sub
xor
pusha
push
or
insl
mov
repnz
das
fisubrs
fidivrs
pusha
cmc
cld
ds
rcll
xchg
adc
push
mov
mov
adc
movsl
aas
rcll
fsubp
data16
loopne
test
es
jae
add
push
push
shlb
cmpl
divl
jmp
pop
jge
push
insl
gs
sub
dec
jle
std
mov
lcall
js
rclb
inc
add
sbb
jne
int3
leave
dec
mov
insl
fidivs
mov
cld
stc
loope
sub
jp
add
scas
or
ficoms
cli
push
push
or
test
xchg
xchg
sub
cmp
sub
xor
adc
out
mov
xchg
int
clc
and
sti
inc
ss
fmulp
and
jl
add
repz
pop
popf
inc
das
pop
aas
push
fidivrs
mov
mov
jo
in
les
lds
adc
outsl
pop
add
sti
ficomps
mov
std
in
inc
fnstcw
loopne
and
jp
icebp
add
rclb
dec
fiadds
sar
mov
mov
jge
cmp
mov
jmp
jno
mov
pop
dec
jnp
cmp
cmpsb
nop
lret
into
cmp
ficomps
ret
pop
push
inc
aaa
pop
fimuls
sub
jl
fsubrp
sahf
push
push
cmpsb
pop
lahf
js
mov
andb
lock
outsb
shrb
cmpsb
inc
jge
mov
es
fimuls
movl
fiadds
scas
int
rorl
mov
adc
and
xor
mov
hlt
fisubs
out
ret
mov
cmc
rcr
enter
mov
dec
ds
mov
movb
mov
xchg
rorb
jecxz
cmp
inc
mov
xor
pop
cltd
pusha
lock
inc
sahf
lods
mov
jns
daa
fdivp
popa
xor
lods
fisubs
mov
sar
fmulp
pop
dec
cmpb
mov
xchg
and
in
dec
xchg
faddp
mov
incb
push
jle
ret
jno
ficoms
icebp
ja
xlat
inc
mov
nop
fisubrs
imulb
ret
inc
ss
inc
adc
adc
push
jmp
mov
ficomps
out
mov
jae
out
pop
sub
push
add
xor
fisubs
repnz
mov
inc
mov
mov
or
clc
imul
push
std
rcrb
sub
xchg
dec
or
gs
test
adc
cmp
jmp
mov
sbb
shll
lret
pop
inc
popa
sbb
test
cli
loopne
xchg
pop
lret
mov
add
pop
pop
mov
pop
dec
cmp
mov
and
fiadds
xlat
xor
cld
mov
test
sub
dec
mov
mov
aam
ficomps
push
mov
and
push
movsl
add
nop
lods
lret
push
and
clc
in
or
cmp
xchg
fimuls
xchg
in
sbb
fdivrp
shlb
pop
fidivs
cmpsl
pop
cmp
scas
push
cwtl
les
sbb
fsubp
cli
adc
icebp
fidivs
sbb
loop
outsb
ficomps
sahf
jp
mov
fidivrs
les
sarl
jge
daa
inc
mov
and
insb
and
mov
inc
gs
pop
scas
cld
test
pop
xchg
cmp
and
mov
movsb
dec
xor
iret
not
insl
in
popa
inc
subl
sbb
int3
xchg
lahf
dec
cmp
xor
inc
sbb
gs
call
std
mov
fsubp
add
inc
mov
andb
sub
and
popa
sbb
jmp
xchg
and
sub
test
fisubrs
sbb
jno
jo
jle
and
outsb
mov
or
lret
in
adc
mov
hlt
fcoml
int3
lods
fidivs
sti
test
jle
test
jno
or
pop
xlat
out
fisubrs
xorl
sub
push
cs
imul
negb
movsl
jo
adcb
es
and
aas
das
xchg
fiadds
jmp
lcall
inc
je
ficomps
mov
cmpsl
jl
das
scas
stos
inc
adc
aam
add
or
pushf
or
lcall
sbb
shrb
insb
nop
faddl
dec
and
or
iret
ljmp
stc
add
aaa
and
jb
xor
ficoms
or
xchg
xorl
shlb
scas
loope
sub
into
sub
ja
jle
or
push
add
fimuls
or
iret
pop
clc
xor
andb
in
mov
pop
scas
sarl
or
push
sar
in
fiadds
mov
fimuls
adc
push
jns
xchg
out
repnz
bound
mov
push
jmp
push
jl
fdivrp
adc
je
push
and
sbb
into
jp
in
mov
pop
lods
mov
loop
fsubrp
mov
lcall
cltd
fimuls
jnp
imul
out
mov
push
mov
fistps
xor
xchg
rcr
gs
sbb
sbb
jl
je
push
lods
pop
sbb
orb
lock
je
jmp
shlb
and
jle
add
lret
push
ret
movsb
fidivs
adc
jg
adc
push
int
movhps
mov
into
cld
mov
inc
pop
pop
cmp
int
fimuls
xchg
cmp
repnz
xchg
ret
push
xor
fisubs
flds
pop
aad
inc
inc
std
push
jno
stos
pop
push
test
cmp
cli
scas
xlat
in
sub
pop
aad
scas
faddp
lds
pop
nop
fidivs
mov
mov
xchg
mov
adc
movl
adc
mov
popa
es
xchg
dec
mov
int
inc
ret
fidivs
jmp
sub
push
push
lods
shll
mov
cmp
fimuls
negb
pop
sub
ss
adcl
cmp
inc
arpl
idiv
push
jle
dec
pushf
scas
in
push
enter
fisubs
lret
sbb
fisubrs
add
rcr
fs
xchg
cmp
mov
pop
out
jle
fdivrp
clc
sbb
mov
sub
jns
or
cli
jge
cmp
xchg
arpl
mov
xchg
jmp
and
cld
aad
out
in
xor
sbb
in
and
or
xchg
mov
or
ficomps
sbb
cmp
pop
sub
mov
inc
mov
cli
push
mov
into
andl
rorb
std
mov
test
push
fisubs
in
stos
test
pop
xchg
cld
or
xchg
iret
subb
mov
loope
mov
dec
push
fmulp
push
inc
movsb
and
adc
fisubrs
inc
movsl
xor
push
stc
cwtl
test
mov
jbe
iret
adc
sbb
lods
pusha
aaa
lahf
sti
rorb
ds
lret
sbb
fwait
jle
imul
fnsave
xchg
scas
pop
xor
stc
jb
fisubrs
fwait
daa
sbb
imul
insb
pop
push
or
imul
fsubp
xchg
loopne
sbb
mov
xor
dec
ficoms
sahf
mov
enter
mov
rorl
icebp
ss
dec
pop
rcrl
insl
int3
pop
add
in
fimuls
dec
lods
test
shrl
imul
int
push
or
hlt
seta
mov
xor
push
push
pushf
push
sarb
mov
arpl
loope
pusha
cld
inc
jg
sub
int
xchg
mov
enter
hlt
ffreep
subb
call
xor
or
or
fcmovnu
mov
aaa
inc
jecxz
into
ficomps
xorl
inc
sbb
ret
iret
push
int
pushf
mov
mov
cmp
movsl
fisubrs
andb
out
out
pop
mov
fnsave
fisubs
call
loop
fidivs
ret
in
sbb
mov
in
pop
mul
fidivs
lock
lret
das
fnstcw
stos
test
mov
xor
fidivrs
lcall
cmp
pop
fcmove
mov
sbb
out
stos
rorb
pop
pop
mov
dec
iret
xchg
fcmovnu
mov
stc
and
lds
pop
mov
les
fdivp
rcll
cmpsl
test
xchg
fdivl
push
pop
pop
call
adc
lret
ja
mov
lds
xchg
cmp
in
insb
iret
je
xchg
or
cmp
jb
pop
jo
sub
mov
in
push
mov
pop
mov
aas
cmp
fdivp
mov
ljmp
nop
inc
xor
lret
mov
fcomps
and
mov
aad
sahf
push
mov
sarb
sub
pushf
xor
rcll
mov
mov
clc
into
lock
adc
cs
enter
cmp
dec
xchg
aaa
inc
cmpsb
lret
xchg
into
jns
cmpsl
fisttps
js
faddp
mov
insl
outsl
sbb
and
jl
xchg
fstl
fimuls
mov
mov
xor
fsubs
push
sub
popa
scas
syscall
jo
aas
jge
push
movsl
jl
jns
fidivrs
push
fisubrs
inc
mov
int
sbb
hlt
adc
insb
addl
loopne
adc
sbbl
nop
mov
dec
pushl
test
jge
in
cmp
jnp
add
push
sub
xlat
sahf
fidivrs
cmp
inc
decb
fisubs
or
aaa
push
or
cmp
test
hlt
rorb
cwtl
addr16
std
inc
sbb
test
pop
es
xlat
test
mov
xchg
jle
movsl
sar
je
fisubs
in
push
mov
inc
ljmp
sbb
push
nop
loope
test
movsb
push
fimuls
sub
pusha
popf
rclb
ret
add
arpl
cmp
das
xor
icebp
faddp
or
jnp
das
movsb
fisubs
add
ficomps
pop
repnz
aaa
mov
mov
pushf
clc
ficomps
mov
shrb
mov
or
fimuls
mov
push
loope
test
adc
aam
inc
aad
sti
or
xor
xlat
push
shlb
sbb
inc
scas
out
ss
test
cmp
and
std
inc
xchg
pop
mov
outsb
inc
dec
dec
jle
lret
or
adc
or
or
and
mov
adc
clc
ficoms
mov
adc
sahf
lods
and
mov
fdivrp
sub
lods
add
int3
pop
mov
push
jbe
stos
ficoms
push
fwait
lret
fsubrp
pop
rolb
xor
cltd
out
adc
push
stos
adc
jae
fidivrs
inc
icebp
outsl
sbb
ficomps
push
mov
mov
mov
fiadds
pop
xchg
sub
ret
jle
ja
shlb
cmp
fnstenv
or
insb
outsb
loop
fiadds
and
scas
das
in
ficoms
inc
sbb
shrl
xor
xorl
stos
lret
cmp
bnd
push
fsubrl
adc
sbb
cmp
orb
mov
mov
mov
psubd
rol
mov
and
ficoms
outsl
hlt
outsb
push
push
das
inc
loop
mov
gs
sub
fcompl
pusha
sbb
mov
jnp
push
cmpsl
out
mov
and
testb
aas
pop
xchg
xor
fisubrs
xor
sbb
out
ljmp
inc
addl
in
cmc
mov
scas
inc
cmp
push
insl
inc
and
push
fsubp
add
xlat
pop
movsl
mov
insb
ret
sub
int
adc
fidivrs
sbb
add
and
fisubrs
icebp
mov
xchg
fdivp
adc
lret
and
lret
lahf
add
mov
std
dec
inc
mov
inc
jne
cmp
call
shl
rclb
mov
jbe
push
dec
mov
lods
lahf
rclb
dec
cld
lds
and
push
or
pusha
gs
add
push
fdivp
sarl
ret
scas
xor
push
arpl
and
lock
adc
push
inc
mov
xor
and
xchg
xchg
int
sti
jl
inc
lret
aas
pushf
xor
outsl
inc
jmp
and
js
adc
pop
psubsb
mov
loopne
pop
les
jge
sahf
xor
cmpsb
incb
add
sbb
std
push
sub
jmp
and
pop
mov
stos
jno
into
shlb
lods
loop
push
pop
mov
xor
sti
into
lea
xlat
or
pop
sub
dec
xor
imul
jne
fbstp
das
jns
aaa
push
mov
mov
adc
dec
jl
loop,pn
push
jmp
sub
sbb
push
cmc
jmp
fcomps
repz
adc
pop
cs
and
stos
ds
jg
dec
jl
pop
jo
int
push
cmp
and
push
cmp
mov
pop
pop
xchg
mov
cwtl
hlt
pushf
mov
dec
aad
ret
pop
repz
sub
pop
or
inc
cwtl
dec
bound
fdivrp
push
cltd
cs
in
jecxz
fsubrp
sbb
aaa
mov
into
adc
dec
pusha
inc
xor
fiadds
arpl
pop
xchg
out
push
hlt
gs
mov
push
popf
fisubs
sbb
xchg
fisubs
fsts
dec
enter
fisubs
call
rorl
aas
inc
push
pop
and
arpl
mov
fimull
jl
xchg
test
daa
sarb
and
ss
outsl
dec
inc
fisubs
jle
push
roll
popa
lea
sub
lret
dec
mov
mov
sbb
inc
cmpsl
or
ljmp
inc
adc
enter
fsubrl
dec
arpl
lock
insb
mov
pop
mov
xchg
imul
inc
and
aad
mov
xor
lcall
data16
adc
mov
ret
dec
cli
sahf
push
ret
loop
mov
adc
sahf
dec
and
dec
mov
mov
clc
and
lods
jo
notb
mov
push
jle
aas
jg
sub
sahf
sbb
lcall
mov
cmp
es
add
sub
testb
stc
movsb
fstp
imul
in
insl
jge
leave
fisubs
or
push
sbbb
mov
clc
fdivr
repz
div
cmp
fistpl
fidivrs
inc
arpl
pop
inc
sub
fmull
pop
add
outsb
xchg
push
out
sub
fidivrs
push
daa
push
or
adc
push
lods
inc
ret
scas
int3
inc
fmuls
dec
loopne
ficomps
loope
jbe
sti
xor
das
mov
fimuls
mov
inc
jno
lret
test
sbb
lods
incb
jbe
fwait
sahf
frstor
ret
xor
xchg
inc
outsb
mov
cmpsl
dec
cli
fidivs
sbb
js
inc
shrb
push
in
fiadds
bswap
sub
fisubrs
push
jl
rcl
mov
mov
movsb
add
lds
fisubrs
mov
push
or
rcrb
test
mov
sbb
dec
in
adc
stos
xor
ret
and
hlt
jno
inc
and
pop
mov
or
ljmp
rcl
ficoms
cmp
or
jbe
pop
inc
into
ret
andb
xchg
mov
mulb
or
cmp
add
jg
jae
shlb
pop
or
popf
sub
neg
cmp
fildl
adc
insb
fidivs
lcall
sahf
gs
mov
inc
sbb
xchg
sub
sbb
stos
mov
dec
adc
mov
std
xchg
movaps
jg
and
xlat
sti
sahf
jbe
into
andps
std
scas
loop
or
ljmp
sub
dec
int
pop
mov
rclb
mov
pop
fiadds
push
iret
movsl
fiadds
push
js
and
cmp
mov
sub
aaa
in
loopne
pop
les
aam
cmp
xlat
inc
adc
xor
add
inc
outsw
sbb
pop
adcl
les
push
int3
jp
dec
xchg
dec
fidivrs
jb
adc
or
out
in
jno
lds
out
test
and
fisubrs
dec
xlat
mov
push
cmpsb
add
or
jne
ret
mov
jg
sbb
ret
push
cwtl
imul
lret
scas
ficoms
fdivs
into
dec
jo
mov
movsb
jge
and
push
scas
cwtl
ljmp
mov
fiadds
sub
enter
sub
mov
mov
xor
pushf
gs
repnz
aam
xor
lcall
pop
xor
fidivrs
inc
sub
fimuls
jecxz
sbb
mov
data16
rep
pusha
imul
or
mov
xchg
mov
ficomps
and
or
lcall
ret
dec
or
std
faddp
xchg
lahf
js
in
adc
or
sub
stc
push
sbb
cmpb
sub
sbb
lret
mov
sbb
arpl
fidivs
sahf
scas
push
push
cmc
lea
mov
sbb
pop
mov
dec
add
xor
mov
aas
cmpsl
xor
js
inc
fmulp
movsl
clc
addr16
icebp
sbbl
xor
sar
je
aas
popa
into
aad
cld
int
fiadds
xorb
or
es
into
movsl
jg
data16
adc
imul
cli
push
mov
lret
mov
cmp
lods
pop
fimuls
xchg
mov
jno
mov
mov
sbbl
adc
clc
rclb
aad
xlat
notb
fiadds
sbb
fdivrp
fiaddl
sub
pop
adc
add
insl
imul
xchg
fmulp
movsb
add
fwait
push
lods
sbb
fmulp
push
movsl
xor
push
fdivs
mov
rcrl
xchg
cs
cwtl
xlat
inc
std
incb
stos
fidivrs
sub
fisubrs
nop
xchg
out
fdivp
mov
pop
or
dec
iret
xchg
insl
jnp
add
add
inc
daa
fidivrs
or
mov
into
ret
push
rcll
mov
xor
fimuls
adc
xor
adc
insl
pop
sbb
inc
fimuls
movsb
ja
jl
icebp
xchg
lea
test
mov
outsb
roll
dec
sbbl
sub
dec
jne
stos
xchg
into
or
sbb
les
imul
outsl
std
sub
jge
and
fimuls
repz
pmaxub
sub
pop
sub
inc
fisubrs
jge
mov
jl
fidivrs
mov
gs
xchg
cmp
push
fmull
dec
jle
or
lods
stc
jno
adc
test
push
mov
shlb
loop
cmpl
bound
testb
mov
or
inc
add
pop
add
fdivrl
dec
inc
lock
ficoms
jae
loop
inc
aad
fimuls
add
testl
in
das
fidivrs
dec
mov
je
cmp
mov
xchg
fisubs
lods
cmc
call
sarb
push
sbb
jne
and
dec
scas
fiadds
xchg
test
fiadds
lds
mov
fcmovnu
inc
jbe
adc
leave
test
lods
shr
fimuls
das
or
add
sbb
ja
push
stos
pop
lret
pushf
sbb
adc
jle
iret
pop
cmp
in
arpl
ss
stc
shll
mov
mov
fistps
add
enter
rorb
sub
jl
inc
in
inc
mov
xchg
ficoms
mov
push
movsl
std
xchg
inc
fimuls
fiadds
jp
gs
lcall
insb
mov
fidivrs
xchg
out
sbb
call
adc
or
mov
jns
repz
cld
pop
cmpsb
xor
jo
fisubs
mov
aaa
fdivp
add
add
lds
push
daa
test
addb
jne
fadds
fisubrs
add
jge
rcll
push
dec
ljmp
and
mov
int
fiadds
xchg
sub
mov
out
and
pop
add
pushf
or
rolb
popa
std
test
push
pop
pop
in
push
fiadds
aaa
sub
sarb
ficomps
jbe
sbb
xlat
push
rcrb
or
fisubs
pusha
lods
push
inc
sbb
loopne
xchg
les
jae
int3
cli
dec
push
and
fisubrs
sbb
add
mov
pop
fcmovnu
xchg
dec
jne
in
mov
mov
sub
push
pushf
mov
jbe
push
mov
loopne
bnd
nop
ret
adc
or
data16
icebp
ficoms
inc
adc
xchg
cmp
pop
cld
movl
stos
jp
jle
fs
lret
sahf
int3
inc
pop
sarb
add
ss
mov
pop
enter
pop
imul
pushf
rolb
jnp
or
in
icebp
idivb
sbb
adc
xchg
push
nop
sbb
fisubl
pop
dec
mov
inc
cmp
adcb
fidivrs
lret
loope
cmp
ficomps
testb
pushf
mov
imul
fsubrp
jo
cmpb
cmpsb
fstp
adc
mov
in
fimuls
into
dec
stos
jl
not
sahf
test
xchg
fimuls
ss
aam
arpl
jle
je
add
ficomps
fsubl
cmpsl
xor
lcall
mov
push
js
faddp
push
sar
pop
dec
jne
je
mov
aas
leave
sbb
adc
mov
popf
inc
fcomps
mov
into
push
sbb
dec
std
shll
bndldx
fdivrs
lods
cmp
daa
enter
sub
subl
inc
mov
sahf
subb
or
jl
sbb
in
pop
shr
fimuls
push
inc
lret
aaa
pop
es
test
push
mov
sti
fucom
rolb
pop
add
imul
dec
ja
into
push
mov
mov
mov
and
jg
mov
adc
push
dec
cmp
es
mov
mov
sub
fisubs
mov
sub
out
adc
test
jb
std
lret
mov
aam
xchg
mov
inc
sub
fsubrl
cs
or
lahf
xchg
pop
in
fsubp
sub
fidivrs
cmc
mov
ficomps
lds
dec
ficoms
int3
inc
sbb
icebp
cmp
in
in
cmpb
jle
push
stc
mov
gs
rolb
pushf
push
ja
jae
mov
cmpb
pop
in
imul
imull
jl
fcmovnbe
pop
cmp
inc
cwtl
pop
mov
je
icebp
fiaddl
mov
xorb
push
xchg
fdivrp
lods
ficompl
fidivrs
or
sbb
out
arpl
jg
ficoms
mov
repz
adc
fsubrp
mov
and
fisubrs
or
add
fisubrs
sbb
xchg
push
ljmp
sub
sub
pop
lds
clc
into
lods
ja
test
pop
pop
lahf
cmp
mov
inc
and
sti
insb
shrl
jp
fidivs
stos
cwtl
scas
add
mov
push
mov
pop
mov
fs
in
sub
mov
les
jo
fistpll
cmp
jns
inc
ljmp
jle
mov
cmc
movsl
push
test
dec
cmp
pop
test
cmp
pop
std
jp
push
inc
dec
xchg
jmp
je
mov
rcrl
es
mov
arpl
lret
sub
into
push
aas
testl
std
test
test
and
ret
adc
dec
imul
neg
add
jl
in
push
aad
fcmovnu
lahf
das
and
fdivp
mov
push
scas
aas
std
std
lea
decb
jge
in
ficoms
ret
leave
cmc
jb
jg
enter
mov
roll
mov
rclb
dec
fidivrs
aam
pop
jnp
mov
pop
pushf
mov
js
repnz
in
sbb
or
jmp
jle
ficomps
xchg
popl
rcr
out
xchg
cltd
add
fsubp
mov
xlat
add
xor
fsubrp
dec
adc
mov
fiadds
fimull
inc
mov
sbb
hlt
cmp
fmulp
jg
ljmp
std
and
xchg
inc
ret
jno
scas
xchg
repnz
daa
in
out
lods
sarl
mov
push
cmp
dec
fisubs
xlat
cs
inc
and
mov
inc
divb
mov
movsb
mov
push
cmp
mov
mov
lds
dec
cld
pushf
out
mov
inc
lret
daa
and
xchg
jmp
sub
add
push
jp
jge
pop
sahf
pop
insl
xor
cmpsl
mov
cmp
clc
scas
fmulp
sarb
cmp
dec
or
sbb
stc
fidivrs
mov
add
xchg
into
jge
ret
aad
fiadds
loopne
pop
std
push
xchg
push
fiadds
push
testl
and
jle
sbb
popf
outsl
enter
fimuls
or
and
sbbl
inc
sub
and
call
adc
lock
dec
pop
mov
sahf
pop
scas
push
ficoms
adc
or
sub
xlat
or
into
push
add
pop
js
add
fsubp
scas
movsb
lret
fwait
push
fiadds
shr
fstl
dec
leave
xchg
fiadds
xor
sbb
ja
push
das
stc
pop
loopne
lret
sti
mov
fnstenv
xlat
add
mov
lods
cltd
mov
sbb
gs
imul
jae
pop
dec
xchg
xchg
mov
push
ficoms
adcb
add
mov
rorl
fimuls
xchg
inc
cmp
mov
dec
xchg
jmp
aam
push
push
fisubrs
xor
rclb
insl
addb
fcomp
test
cltd
pop
je
add
sbb
fmulp
cmpsb
outsb
sbb
jg
into
faddp
and
xchg
fisubs
lahf
loop
add
rclb
jmp
test
popf
into
subl
sbb
mov
mov
inc
xor
fcmovnb
jge
mov
and
and
jo
test
das
push
cmc
cmp
mov
mov
iret
jp
popl
aas
or
dec
or
pop
xchg
sub
lret
mov
add
fidivrs
cmc
int
popa
shll
jl
repnz
jmp
fiadds
inc
mov
nop
outsb
fidivs
mov
loope
ficomps
and
in
fcompl
ficoms
test
jecxz
mov
in
or
or
nop
mov
fstpt
out
das
jno
sub
adc
mov
inc
mov
fimuls
lcall
jns
fisubs
sarl
aaa
mov
or
jne
sub
fimuls
pop
imul
stc
ret
rol
fisubs
je
fidivrs
or
fstpt
push
insb
fidivrs
test
clc
insl
ljmp
cmpsb
cmp
xchg
sbb
ficomps
outsl
cmpsl
mov
xchg
push
das
sbb
mov
les
shl
add
into
cmpl
mov
enter
mov
cs
clc
fidivrs
and
and
jns
xor
inc
inc
in
mov
fmulp
sbb
aad
jnp
fxch
inc
in
and
push
xlat
sub
jp
ds
add
cmp
movsb
pop
or
into
add
push
ja
push
ds
or
push
jle
push
mov
cmpsb
insb
xor
test
mov
mov
fidivs
sub
xchg
fidivrs
hlt
push
fs
jbe
lahf
pop
leave
enter
or
lock
adc
fmuls
add
pop
out
jge
ficomps
push
sahf
add
sahf
and
jbe
xorl
fimuls
or
adc
ficomps
rcrl
jl
mov
or
pushf
push
ficomps
mov
ret
out
xlat
xor
fs
jg
xchg
inc
add
cmp
cltd
mov
mov
jecxz
lret
mov
fidivs
cli
or
lahf
mov
fisubrs
xchg
inc
push
loop
mov
into
gs
mov
add
fisubrs
mov
fmulp
dec
in
filds
pushf
jmp
in
xchg
pop
icebp
sar
lods
push
lret
inc
bound
std
xchg
adc
cmc
xchg
sbb
nop
out
fidivs
testb
fisubrs
pop
xor
or
pop
adc
std
imul
fiaddl
push
and
lds
fsubrp
sub
lret
push
iret
fisubrs
pop
pop
inc
jle
cwtl
cli
insl
fs
into
pop
pop
sbb
pop
cmpsl
fimuls
rorb
cmpsl
jl
lods
pop
nop
imul
pop
lcall
aas
push
pop
xchg
xchg
divl
loop
fidivs
imul
push
sbb
dec
fimuls
mov
test
cli
scas
fcmovb
sahf
clc
lret
pop
imul
js
pop
fisubs
dec
addr16
push
dec
fisubrs
lahf
xchg
jmp
idivl
icebp
and
mov
fisubs
adc
push
in
dec
push
clc
fisubrs
scas
xor
ds
push
dec
xchg
outsb
mov
aas
fiadds
out
stos
imul
inc
outsl
movsb
fistps
jle
fwait
cli
pusha
pop
in
int
ss
sbb
fimuls
push
mov
mov
int
xchg
inc
mov
cwtl
outsb
icebp
push
cmpsb
dec
inc
icebp
ds
call
imul
into
pop
lock
clc
mov
loop
jmp
push
mov
std
stos
addl
xlat
or
jp
mov
inc
fmulp
add
xchg
ficoms
sbb
fsubrp
add
xor
push
shr
insl
mov
xchg
inc
fdivrp
int3
sub
das
xor
icebp
testb
cmp
lret
add
cmp
dec
fidivs
mov
xor
cmp
loop
inc
scas
shl
add
lea
enter
int3
mov
adcb
or
fisttpll
fidivs
sbb
fisubs
lcall
sbb
in
jo
into
fidivl
push
xchg
por
xchg
in
js
scas
fdivl
add
jl
mov
or
jecxz
or
adc
fidivl
into
fwait
repz
std
lahf
lods
rcr
push
add
and
pop
jb
mov
fidivs
dec
push
sbb
fisubs
or
mov
repz
mov
cmpsb
lods
inc
mov
fidivrs
imul
fildl
adc
pushf
fiadds
adc
je
test
mov
add
mov
call
sbb
mov
cmp
ret
cmp
jne
pop
arpl
mov
sub
xchg
xchg
or
fdivrp
loop
mov
pop
sub
sbb
or
nop
jge
inc
test
imul
add
sub
dec
pop
xor
push
ficoms
mov
outsb
in
movsb
sti
mov
fisubs
xor
push
mov
fidivrs
xchg
js
lock
sub
pop
mov
lahf
fsubs
jno
dec
inc
les
fidivs
pop
adc
cld
jne
inc
lock
jp
mov
push
and
push
ja
sarb
frstor
repnz
sbbl
pop
mov
fsubrp
jle
and
mov
arpl
or
mov
pop
std
jnp
sbb
shlb
test
pop
mov
mov
lods
inc
aaa
push
mov
or
sbb
adc
lea
xor
lock
fisubs
sub
adc
fidivrs
sbbl
adc
add
dec
int
scas
sub
fmulp
insl
adc
and
fidivrs
pop
test
cmp
pushf
sti
loopne
repnz
mov
imul
cmp
and
std
adc
stos
sub
std
cltd
inc
lods
adc
fdivrp
js
push
das
fwait
mov
or
xchg
pusha
loope
pop
insl
inc
repz
xchg
fidivrs
add
and
enter
sbb
insb
fcompl
xchg
add
popa
adc
xchg
jnp
mov
xchg
test
in
xor
cli
sarl
dec
ret
jnp
push
fisubs
dec
notl
xchg
mov
pop
nop
mov
insl
dec
push
push
dec
test
mov
pop
arpl
sarl
decb
fmulp
lcall
lea
push
pusha
fmulp
js
mov
fiadds
xor
or
aad
pop
stos
inc
lods
cmpsl
mov
sub
xor
imull
faddp
fs
or
icebp
shll
fimuls
pop
aaa
xchg
sarl
xchg
sahf
shlb
mov
sub
aad
jo
fidivs
mov
sbb
out
jle
shlb
jge
stc
ds
test
fsubp
jns
fmulp
jle
test
sbb
mov
pop
push
into
sub
cltd
dec
pop
mov
add
sbb
fdiv
outsl
mov
and
push
pop
punpckhbw
rorl
mov
scas
sahf
into
shlb
imul
xchg
jmp
mov
inc
push
fidivs
or
test
push
mov
leave
sbb
js
icebp
ljmp
push
outsb
jns
cs
fidivs
add
cwtl
add
xchg
loope
jb
aam
ds
mov
imul
pop
ficoms
xchg
je
fdivp
adc
out
rcrb
test
daa
call
adc
scas
xor
inc
jp
fisubrs
xchg
and
aaa
xlat
outsb
enter
xor
in
ss
insl
les
inc
sbb
dec
into
int3
xlat
into
icebp
pop
nop
pop
std
ffree
mov
cmp
xchg
add
fidivs
dec
sbb
jle
mov
into
repnz
sti
rorb
out
aad
clc
jecxz
outsl
fidivs
mov
mov
mov
xor
jmp
insl
sub
inc
pop
cli
sbb
test
xchg
push
xor
mov
rcr
mov
in
xchg
dec
fcompl
ret
cmpsl
xor
mov
lods
or
bound
xor
scas
pop
int3
aas
inc
lods
inc
cmp
inc
sbbl
cltd
cmc
push
mov
dec
cmp
sub
adc
out
mov
lods
pop
and
sahf
mov
mov
inc
shrb
pop
fdivl
neg
lahf
inc
inc
xchg
inc
mov
popf
push
imul
rcrb
pop
fldt
into
adc
or
mov
mov
mov
sub
cmp
aam
dec
rcrb
scas
inc
gs
mov
out
divl
adc
dec
cmp
xchg
fcoml
stc
add
mov
mov
jbe
movsb
out
mov
cmp
xchg
fisubs
jecxz
add
push
xor
stos
mov
pop
das
lret
fsubp
ja
mov
pop
xchg
xchg
sbb
adc
xchg
aam
fisubrs
shrb
xor
fiadds
js
outsl
mov
mov
mov
pop
dec
mov
test
xchg
ficomps
jmp
adc
push
dec
aaa
jns
add
push
mov
cmc
jmp
pop
imul
jp
cmp
push
pop
ljmp
mov
and
mov
cld
pop
out
sbb
movb
cs
mov
fisttpll
pop
dec
push
jnp
pop
pop
adc
shrb
faddp
imul
out
push
ret
lret
aaa
fidivrs
rcrl
jmp
lret
push
mov
mov
stos
sbbb
lock
pop
xchg
push
sbb
jge
adc
sub
jg
stc
add
daa
jbe
fmulp
xor
fsubrs
hlt
sbbl
jle
jo
push
pop
fidivs
push
ljmp
adc
ret
dec
clc
xor
cwtl
call
fidivrs
arpl
sub
inc
dec
std
adc
rcrb
jecxz
mov
xlat
ljmp
imul
ficompl
pusha
or
inc
xchg
mov
mov
xchg
mov
cmp
ret
cwtl
fisubs
fnstsw
inc
adc
popa
aaa
inc
pop
dec
and
jnp
iret
mov
in
fidivs
rorl
sub
push
sbb
int
push
inc
insl
sbb
nop
pop
stos
push
div
cltd
scas
fs
fidivs
xor
push
cmpl
push
lea
sti
cwtl
out
aad
fs
add
mov
adc
mov
mov
pop
minps
mov
sbb
push
and
sub
sub
xchg
mov
pop
outsb
mov
fiadds
mov
cmc
jmp
aad
or
sar
ficomps
in
adc
lods
jg
fisubrs
mov
pop
fsubp
stos
cli
push
mov
lret
and
cmp
hlt
enter
xor
addr16
adc
fidivs
jo
pop
dec
jmp
fwait
xchg
fisubrs
ds
adc
lret
xchg
mov
fimuls
iret
stos
loopne
xor
sahf
sbb
repz
jg
outsl
aam
fsubrp
sub
sub
in
mov
movsb
sub
shll
movsb
dec
rcr
addr16
enter
push
notb
adc
pop
iret
popf
mov
cwtl
mov
pop
ljmp
sbb
sbb
lret
imulb
in
dec
pop
ss
shlb
fiadds
lahf
shrl
mov
push
mov
fcmovb
mov
in
or
shrl
xchg
shlb
cmp
xor
sub
xor
mov
pop
insl
divb
popf
movsb
test
repz
icebp
aaa
mov
xlat
scas
dec
mov
jnp
outsb
ret
cld
dec
mov
shlb
fs
xor
loop
dec
call
and
pop
adc
outsl
jle
js
push
xchg
out
imul
jnp
test
loop
test
sub
sbb
aad
push
jo
lret
or
roll
mov
sub
jnp
jle
rolb
lahf
jb
xor
sar
or
jno
fisubrl
bound
adc
movsb
mov
mov
add
inc
cmp
push
lret
jb
daa
inc
xchg
shrl
xorb
out
inc
aad
faddp
jbe
es
mov
std
or
jae
rcrb
inc
loop
fisubrs
popf
icebp
into
fisubs
call
jle
arpl
cmp
fiadds
rcrl
push
mov
inc
sub
mov
mov
dec
or
mov
dec
shll
fdivp
mov
jb
xchg
enter
stc
and
lds
push
clc
orl
cmc
ficomps
jbe
jl
push
inc
mov
leave
clc
add
fidivrs
pop
fiaddl
mov
out
ficomps
and
pop
pop
ds
into
push
mov
std
sub
in
loop
iret
jns
xor
fidivs
std
jmp
mov
lods
js
cwtl
xchg
fistps
sub
mov
mov
jae
in
xor
lret
xchg
fstl
fsubp
mov
jns
ss
inc
cld
es
mov
inc
lahf
mov
mov
std
mov
mov
inc
test
mov
mov
mov
dec
loope
out
fidivl
out
mov
ror
cmc
aad
mov
jmp
mov
inc
andl
and
fisttps
mov
fisubrs
mov
sbb
fiadds
inc
dec
mov
push
cmp
lahf
mov
xor
test
mov
fcmovu
insb
test
and
sbb
fidivrl
cmp
push
std
outsb
cmp
mov
inc
pop
ficomps
inc
mov
sbb
adc
jge
lret
mov
jno,pt
daa
aas
test
iret
das
jg
fiadds
fstl
fidivs
addr16
lock
xor
fdivrp
cmp
cltd
std
mov
adc
pminub
xlat
adcl
cmp
into
push
addr16
ret
xor
faddp
stc
xchg
xchg
pop
loope
hlt
fisubrs
test
and
inc
mov
mov
adc
add
ja
movsb
in
xchg
jns
jle
inc
cmpsl
lods
rcr
repz
fidivrs
fsub
push
sbb
add
into
add
nop
out
lret
mulb
pop
aaa
xorb
jecxz
adc
push
es
fisubs
js
add
add
out
hlt
sub
fisubrs
mov
bound
and
out
push
cmpsl
jmp
sbb
clc
and
pop
sar
mov
sub
in
in
or
xorb
cmp
ret
xchg
jl
fiadds
inc
aad
xor
les
xchg
xor
fimuls
and
mov
test
mov
adc
pop
push
insb
aad
mov
andl
fisubrs
dec
enter
mov
mov
xchg
sbb
mov
int
stos
xchg
jnp
mov
mov
js
pop
loopne
sub
stc
addl
shrl
lds
gs
add
xor
xlat
test
sub
pop
push
sbb
lods
xchg
rorb
xchg
mov
push
into
mull
shrl
int
inc
cmp
cwtl
sbb
in
and
and
aaa
fisubrs
dec
loop
scas
adc
inc
je
fadds
pusha
xchg
mov
add
fdivrs
cmp
daa
pop
cltd
or
push
insb
int3
pop
mov
inc
into
mov
xchg
jle
push
cmpsb
loopne
icebp
int
cwtl
cld
nop
xor
mov
or
or
mov
xlat
lock
popl
sahf
icebp
push
jle
fldl
push
mov
std
popf
jecxz
outsb
xchg
xor
mov
cwtl
jle
mov
lret
push
pop
sahf
push
and
pusha
in
adc
mov
mov
mov
mov
sbb
fildll
xchg
test
js
jo
cmpsl
fcoml
test
aaa
mov
sbb
jle
in
jns
fadd
jle
xor
shll
mov
dec
cmp
pop
add
nop
insl
cltd
orl
cmc
cmc
or
shrl
ds
fidivrs
push
jmp
jae
sub
mov
fisttps
mov
fisubs
adc
test
mov
fidivs
int
inc
test
fidivrs
xchg
mov
push
dec
popa
call
lret
and
je
std
mov
dec
aas
cs
mov
movsl
mov
mov
inc
shl
and
cmp
fdivrl
in
jne
stc
fimuls
and
mov
into
or
xchg
bound
add
inc
push
mov
mov
jbe
xlat
or
ret
adc
or
fistpll
int3
mov
xchg
outsl
movl
fcmove
divl
jmp
add
ja
mov
pop
fdivl
ficoml
sti
add
fimuls
mov
push
or
add
mov
sub
fidivrs
cwtl
pop
enter
xchg
clc
les
ficomps
add
fwait
jbe
jns
std
inc
rorb
or
mov
pop
enter
sar
sbb
fisubrs
sbb
into
sahf
lods
jmp
orl
into
xchg
push
jns
cs
mov
xchg
test
jnp
sahf
ror
sub
mov
or
fbstp
jae
sbb
ret
sbb
mov
mov
sbbb
or
fadds
xlat
shlb
xorl
mov
push
add
into
push
or
fs
or
addr16
sti
int
push
sub
fsubrp
adc
fstpt
add
ja
pushf
bound
inc
fmulp
mov
repnz
scas
cmp
fisubrs
idivl
sahf
push
cli
in
sbb
fisubs
cmp
cld
xchg
jecxz
mov
mov
jnp
cmove
add
inc
fmulp
jp
mov
mov
xlat
adc
pop
int3
mov
or
insb
xor
das
dec
ja
fidivrl
add
adc
jbe
mov
ficoms
sahf
mov
ficomps
push
bound
push
jle
fs
arpl
inc
not
adc
mov
mov
jb
inc
inc
sbb
mov
fidivrl
mov
xor
sbb
pop
loopne
inc
add
icebp
fisubs
sbb
and
movsb
cmpsl
adc
mov
inc
and
ficomps
or
gs
add
fldt
aam
or
popf
xchg
sbb
inc
aad
enter
testl
popa
inc
dec
mov
repz
fiadds
fs
ficoms
cmp
cmp
jns
mov
lock
fimuls
dec
ss
mov
int3
fidivrs
xorl
jle
dec
and
jb
adc
ret
adc
push
jae
enter
add
sahf
push
bound
scas
insb
jle
ret
lds
pop
int
add
icebp
cmp
push
push
push
cmc
dec
fisubs
sub
outsb
out
ss
test
repz
xor
lret
push
ficomps
push
mov
cwtl
in
pusha
clc
xlat
dec
mov
rcrb
pop
test
mov
imul
inc
pop
jnp
dec
jno
ja
xchg
rcr
cmp
out
sub
js
daa
dec
push
or
pop
sbb
movb
jns
inc
ficomps
aas
loopne
fisubrs
dec
jnp
movsl
xor
fdivp
mov
inc
fisubs
call
popl
fdivrp
icebp
ja
mov
stos
lods
sarl
std
test
pop
fidivrs
mov
cld
aaa
fsub
fisubrs
shlb
jecxz
jle
inc
popa
bswap
dec
outsl
adc
mov
mov
pop
repz
fmuls
cwtl
fs
fidivs
mov
mov
setno
fdivs
lret
into
jl
in
shl
push
xor
jb
jl
ffree
jno
jge
push
pop
lods
sub
fsubs
lods
jl
cmc
jle
into
rcr
int3
dec
cmp
push
or
fisubrs
ret
lret
int3
mov
clc
sbbb
out
sahf
fiadds
sbb
lret
and
fisubs
add
xor
push
xchg
aaa
dec
inc
into
outsl
pop
mov
fdivs
inc
sbb
xchg
fisubrs
or
jl
rcr
xchg
stos
je
cmpsb
pusha
dec
in
fisubrs
sbb
call
mov
fidivrs
ficoml
sbb
jne
or
fidivs
sbb
or
stc
arpl
jbe
and
inc
adc
and
hlt
cld
test
adc
je
ficompl
or
pop
mov
mov
jmp
outsl
call
sti
xchg
insb
xchg
sbb
into
cmp
pop
rcr
insl
mov
add
push
insb
jle
les
mov
fidivrs
mov
xor
in
loope
stos
sub
es
stos
sbb
fstp
stos
call
fidivs
ja
inc
mov
add
rclb
ficomps
fnstsw
fiadds
dec
insl
repnz
mov
mov
inc
or
into
das
shr
cs
mov
je
lret
fimuls
rol
cmpsb
push
fs
cli
test
aad
ret
fimuls
aaa
mov
fsubrp
sarl
push
fdivp
or
and
sub
lock
inc
fdivs
test
faddl
jge
xlat
push
into
mov
add
sbb
stc
xchg
inc
sub
fmull
in
add
rorb
pop
and
ret
cmp
pushf
jb
popa
repnz
mov
sahf
xor
test
ljmp
and
fidivs
out
int3
ds
inc
jecxz
in
adc
loopne
fidivrs
and
nop
pusha
fimuls
inc
outsb
push
dec
mov
xchg
cltd
outsl
adc
repnz
mov
inc
sbb
stc
mov
popf
cwtl
dec
add
clc
xchg
lods
stos
aam
xchg
push
cs
stc
fisubs
and
dec
imul
jle
mov
and
cmp
jne
idiv
repnz
pop
fmulp
hlt
ss
cltd
adc
fidivrs
arpl
sub
ds
subl
rcrb
ret
fmulp
cli
inc
dec
pop
scas
repnz
mov
and
dec
fisubs
push
aaa
xor
push
cld
shrb
outsb
ja
jl
shrl
aas
jbe
shll
call
xorl
jo
ficomps
aam
sub
or
scas
mov
add
push
cli
jb
jno
lock
cmc
cmp
cld
fsubp
addr16
dec
enter
mov
mov
inc
arpl
into
jmp
push
stos
mov
and
shl
adc
and
sub
leave
testl
std
xchg
adc
sti
fisubrs
push
xlat
ficoms
imul
mov
insl
fdivp
fwait
or
shr
neg
push
leave
pop
stos
push
xor
push
aad
lock
sahf
pop
std
test
adc
fwait
cli
std
in
add
mov
fisubs
outsl
sbb
cmc
inc
imul
fidivs
jp
call
test
fisubs
jne
pop
or
stos
iret
negb
movsb
fisubrs
rclb
jmp
loop
xor
sbb
dec
cmpsl
and
out
fidivs
test
mov
push
sub
icebp
pop
xchg
mov
inc
rol
cmp
fdivrp
add
mov
shlb
in
mov
push
mov
loop
in
fisubrs
and
aaa
packuswb
outsl
cmp
ficomps
mov
mov
fdivr
fld
xor
lret
and
xor
insl
movsl
hlt
push
jle
out
adc
push
sbb
out
faddp
xor
sbb
pushl
fidivrs
push
outsl
out
hlt
mov
cmc
xchg
mov
shrl
or
push
fisubrs
xlat
inc
fidivrs
dec
movsl
std
fwait
loop
out
adc
dec
aaa
mov
in
mov
add
ret
lret
mov
ret
test
popf
icebp
jno
mov
das
adc
inc
xor
adc
ja
jle
je
jl
dec
pushf
mov
cltd
out
lcall
mov
and
fisubs
loope
imul
sub
xchg
fidivs
xchg
xchg
and
or
xor
repz
xor
test
xchg
mov
nop
adc
fisubl
xchg
xor
fisubrs
mov
pop
pop
std
in
ja
mov
testb
mov
xchg
push
jmp
ficoms
xchg
iret
inc
sbb
push
add
imul
inc
repz
jae
mov
lret
push
and
add
ret
cmp
popl
inc
jns
jg
inc
push
fs
mov
fisubs
std
xchg
rcl
fsts
sbb
scas
push
mov
insl
test
stc
nop
dec
mov
cs
mov
fdivrs
out
sbb
into
lods
jmp
fisttpl
int3
into
inc
jnp
mov
dec
fisubrs
dec
cmpsb
cmp
pop
test
dec
std
out
fbld
add
aaa
fsubrp
outsl
add
pop
adc
jl
cmpsb
nop
add
lahf
xchg
andnps
jecxz
sbb
lock
ljmp
iret
push
add
fiadds
addr16
pop
mov
push
dec
jg
inc
and
mov
mov
out
fisubs
mov
xchg
in
cmpsb
jle
mov
pop
leave
xchg
enter
cwtl
repnz
sub
data16
mov
jecxz
mov
cli
pop
dec
inc
fldl
fmulp
dec
stos
fisttpl
cltd
jle
dec
fsubp
ja
fcom
insl
sbb
fidivrs
pop
sahf
cli
or
mov
pusha
sub
inc
or
xor
push
hlt
pop
push
sbb
lds
es
sbb
gs
std
dec
lods
mov
mov
push
fidivs
sbb
rcll
fisubrs
cltd
test
fisubs
inc
mov
fidivs
iret
add
std
testb
stc
aam
xlat
ss
fidivrs
movsl
adc
fisubs
lret
fisubrs
out
fisubrs
lret
cmpl
pop
dec
add
ret
fs
cld
adc
pop
shrl
cmpsl
inc
leave
and
clc
mov
mov
cmpsl
imulb
aas
adc
mov
jbe
add
jmp
aad
pushf
sub
ds
in
ficomps
fs
mov
dec
jp
inc
xchg
adc
mov
test
cmp
popf
pop
lds
mov
arpl
pop
divb
cmp
jnp
cmp
xor
cld
and
and
mov
adc
in
xor
push
mov
cld
mov
sahf
xchg
scas
bound
into
pop
aam
subb
add
lahf
adc
push
lret
jmp
shr
scas
mov
mov
push
jne
shlb
cmp
cmpsl
pop
pop
aas
and
mov
cwtl
xor
fstps
mov
cmpsb
data16
icebp
sbb
insl
fiadds
pop
mov
push
fidivs
sbb
shr
jnp
pop
mov
daa
orb
or
xor
mov
cld
xchg
dec
data16
loopne
and
fidivs
push
xor
adc
insl
pop
adc
movsl
test
ret
rorb
mov
xor
out
fisubs
cmp
pop
and
insb
cmpsb
inc
outsb
sbb
xchg
fidivrs
sti
ret
cli
mov
fidivrs
shrb
xchg
add
outsl
inc
mov
ficoms
mov
sahf
inc
xor
xor
mov
lock
add
movsl
jo
out
inc
push
dec
ret
es
add
je
push
mov
nop
mov
lret
inc
orb
popf
xor
mov
es
fsubp
pop
dec
lods
out
pusha
pop
sbb
mov
push
aaa
sbb
add
dec
sbb
jb
movsl
pusha
inc
adc
cmp
out
pop
fsubrp
push
lret
jle
ficoms
add
cwtl
fiadds
inc
insl
xor
mov
popf
js
mov
je
xlat
fwait
subl
scas
add
fiadds
xchg
dec
sub
mov
mov
fisubrs
inc
idivl
fimuls
repz
sbb
sbb
dec
pop
rdpmc
mov
lea
mov
stc
call
std
or
mov
mov
jbe
jle
lret
sub
test
xchg
inc
push
sub
rcrl
fidivs
pop
cmc
cmp
ja
or
push
mov
loop
movsl
scas
mov
xchg
into
lods
mov
iret
subl
jnp
fimuls
in
js
and
xor
mov
fidivs
xchg
in
sub
fisubrs
pop
cmp
jne
adc
jbe
je
sub
mov
sti
mov
xchg
adc
cmpsb
xor
fsts
es
sub
jp
cmp
aaa
dec
mov
aas
bound
out
push
daa
js
into
push
cwtl
aaa
fisttps
into
jle
jnp
sub
cmp
dec
jmp
fsubr
aaa
sahf
fistpll
push
mov
popa
lret
sbb
repz
jl
rclb
inc
clc
jo
punpckldq
andb
div
mov
push
loopne
into
into
stc
add
jge
imul
mov
leave
test
mov
int
ffree
fisubrs
test
jns
and
rcr
jle
pop
xchg
jmp
mov
mov
pushf
mov
lahf
and
ret
inc
fidivs
add
jmp
push
gs
pop
jns
dec
inc
icebp
push
fsubrl
adc
shr
xlat
pop
movsb
ret
cmp
sbb
or
jg
rorb
in
mov
inc
stos
aad
mov
xchg
aam
pop
hlt
cmp
out
fmulp
test
dec
and
sbb
enter
xor
and
xchg
inc
push
in
ja
shll
cmp
mov
xor
mov
push
nop
gs
divb
push
ds
xchg
mov
add
cld
cmp
dec
fidivrs
mov
std
fsts
inc
add
pop
sbbl
mov
fmulp
sub
adc
in
inc
fiadds
std
notb
std
pop
bound
enter
pop
mov
shlb
and
into
or
or
enter
aas
stos
jb
mov
xchg
push
jmp
aad
mov
sbb
sub
leave
ficoms
ds
sub
test
push
cld
cli
stos
adc
js
sub
cmp
jno
test
addr16
ficomps
push
mov
mov
mov
mov
jno
dec
icebp
mov
sbb
push
scas
fldt
xor
shlb
dec
mov
sahf
call
mov
jge
mov
aam
dec
hlt
sub
ret
fidivs
push
scas
dec
imul
aaa
mov
mov
in
into
xchg
leave
jo
fidivs
xor
adc
pop
add
cmc
fidivs
mov
push
cmp
mov
loopne
movsl
pop
xchg
push
sbb
mov
rcrl
inc
cmpsl
lret
mov
into
mov
cmc
jle
dec
cmc
rcrl
enter
fidivrs
insb
mul
fisubs
inc
xor
scas
mov
imulb
loopne
fists
movsl
jp
jno
push
xor
rclb
fidivrs
xchg
aad
xlat
push
jge
fldl
inc
dec
add
jl
cli
out
sub
push
subb
into
in
inc
rcrb
fisubl
fisubs
xchg
outsl
fisubrs
call
lods
js
fisubs
jae
clc
enter
fwait
xor
fiadds
lea
adc
jo
mov
sub
jge
xchg
push
fsubp
jne
xor
mov
mov
ficoms
lods
add
aam
push
cmc
into
ficomps
cmp
push
call
ret
fisubs
cmpsl
imul
mov
aaa
icebp
mov
push
add
mov
cmpsb
popa
and
sarb
popf
ficomps
cs
mov
fisubs
mov
adc
xorb
dec
inc
dec
loope
loop
negl
pushf
stos
shrb
pop
cmp
xor
in
sbb
ficoms
lahf
fimull
jmp
mov
mov
dec
xchg
call
ret
fstps
loop
ficomps
sti
test
jbe
push
fidivrs
push
popa
mov
test
xchg
in
xchg
ljmp
and
mov
xchg
cmc
ja
cmp
pop
mov
ret
aas
inc
lds
iret
xchg
in
shlb
fidivs
add
loope
js
add
into
out
or
test
inc
rcr
faddp
adc
lods
cmp
out
rcr
adc
fcompl
dec
dec
and
inc
pop
xor
mov
jl
testb
fucomip
sub
push
aam
sub
dec
push
fisubrs
mov
fsubrp
push
into
add
dec
pop
cmp
cld
jnp
xor
jb
push
cmpsb
int
test
mov
jl
fbstp
fsubrp
movsl
aaa
and
or
push
jns
pop
ficomps
int
rclb
faddp
fcoms
fisubrs
xchg
fiadds
ljmp
pop
dec
sub
loope
push
dec
int
push
dec
sub
fimuls
fdivrs
inc
insb
pop
pop
cld
subb
inc
dec
pop
fdivp
fistl
sbb
xor
arpl
lcall
jmp
inc
sbb
into
sub
cmpsl
fimuls
jbe
xchg
ficomps
xor
fisubs
inc
dec
jmp
jb
xchg
cmpsb
loop
hlt
dec
push
int3
sub
test
stc
aas
sub
cli
cmpl
stos
mov
xchg
mov
in
sbb
inc
sub
push
fsubs
push
fidivrs
fimuls
mov
or
lock
xor
fidivs
add
lret
adc
inc
push
push
push
scas
movsb
mov
pop
cli
fimuls
mov
es
aam
sub
add
scas
popf
sub
insl
rcrb
mov
das
mov
and
ret
lds
push
aas
inc
xor
incb
aad
push
sbb
ret
xchg
xor
sbb
mov
sahf
mov
pop
into
sub
sbb
addr16
lret
neg
cmp
jle
pop
pop
loopne
aas
adc
adc
fisubs
movsb
stos
pushf
cmpl
mov
arpl
adc
pop
sbb
push
in
inc
imul
xor
cld
pop
jmp
aam
jge
sbb
add
pop
sarb
push
andb
fwait
out
leave
loopne
out
sub
xor
push
mov
push
fsubrp
scas
pop
mov
clc
ficoms
sbb
imul
cmp
ds
call
push
imul
pop
in
inc
fidivs
aas
mov
sbb
stos
cld
mov
loop
iret
daa
sahf
mov
pop
insb
push
push
adc
inc
rorb
ficoms
stc
cmp
enter
xor
push
into
xchg
insl
mov
mov
push
lret
test
mov
cmp
adc
add
pushf
iret
fimuls
addr16
insl
fimuls
sub
in
sub
rcl
cld
cvtps2pd
cwtl
scas
push
push
inc
fidivs
nop
mov
mov
movsl
xlat
sbb
iret
fisubrs
pop
repnz
fidivs
adc
fidivs
inc
mov
in
jge
fdivrl
pop
xor
mov
std
or
test
jno
insl
cmp
inc
lods
cmp
inc
cmpl
loope
incb
rcrl
mov
cmp
les
cltd
test
cs
loopne
pusha
sahf
xor
or
push
push
aam
mov
sar
mov
adc
jo
mov
in
sub
inc
idivl
or
sub
adc
fiadds
push
or
into
lcall
mov
adc
dec
jne
push
rcrl
por
dec
xchg
xchg
xor
ficoms
jecxz
hlt
sbb
push
or
mov
xchg
cmpsb
fisubrs
mov
out
fimull
test
sub
fmulp
push
mov
xchg
repnz
mov
mov
sub
add
mov
jmp
pop
mov
xor
jb
adc
les
sti
sarb
or
jns
ret
in
outsb
inc
mov
int
mov
jge
or
out
lahf
fld
jecxz
and
push
je
jp
test
fimuls
pop
lock
add
sbb
out
pop
pop
out
into
mov
jl
test
scas
fmulp
sbb
mov
xlat
mov
andb
clc
filds
faddp
inc
loope
aaa
dec
cmp
scas
sbb
lds
jl
dec
and
pop
lahf
push
jmp
jnp
pop
jne
into
das
xor
fisubs
and
ljmp
push
cs
adc
loope
fisubrs
pop
sub
fsubp
xchg
adc
xchg
jle
inc
pop
mov
fdivrp
out
pushf
call
pop
jg
into
dec
rclb
inc
cmp
cmp
lods
jnp
ret
stos
in
rolb
push
dec
ficoms
cmp
mov
push
pop
mov
lods
adcl
rolb
add
mov
xchg
adc
arpl
fmulp
int
fldenv
cmp
mov
popa
push
test
or
movsb
imul
in
dec
ja
mov
xor
aas
push
js
cmp
or
push
mov
pop
push
mov
gs
pop
imulb
mov
int3
fiadds
ss
cmpsl
adc
in
cs
repz
pop
scas
shll
pushf
cld
pop
shl
xchg
lret
jge
clc
pop
shrb
scas
dec
fs
cld
int
cmpsl
mov
loopne
mov
fimuls
jae
ljmp
cmp
faddp
push
aas
loopne
cmc
mov
xchg
fucomp
add
cmp
movsb
pop
pop
xor
jl
sbb
inc
sbb
fldl
pop
mov
test
push
pop
ljmp
adc
iret
fsubrp
addr16
outsb
dec
push
inc
ficoms
in
or
fnstenv
fwait
and
xchg
xor
or
push
dec
mov
stos
rol
and
loop
insb
rcrl
lea
mov
and
nop
push
sub
inc
fwait
xchg
cld
mov
mov
mov
shlb
fidivrs
pop
and
fisubs
xchg
inc
shrb
jl
outsl
jecxz,pt
sbbl
imul
pop
mov
repnz
ror
pusha
aaa
mov
fisubs
loope
jo
shld
insb
and
stc
inc
outsl
das
cmp
xor
adc
jle
repz
addb
xor
hlt
sub
aad
sbb
add
fsubr
fsts
sahf
xchg
rcr
mov
add
aam
and
fidivs
dec
adc
sbb
mov
loop
into
push
ljmp
and
cmp
pmaddwd
das
stc
fisubs
sbb
mov
cmp
or
cmpsl
inc
fidivs
or
sbb
clc
xlat
jle
in
mov
fisubrs
pusha
out
sbb
shrb
lea
mov
fiadds
adc
xor
jno
or
js
fidivs
shll
int
or
cmc
cld
jbe
jmp
cmc
cmp
sub
cmp
insb
inc
hlt
dec
fidivs
orb
in
mov
sub
fimuls
lret
sub
mov
inc
push
test
ss
cmp
push
test
das
nop
sub
jno
adc
mov
dec
ficoms
in
fs
mov
fidivrl
call
fidivs
imul
rcll
jne
jg
dec
popl
fdivrp
mov
push
stc
fiadds
mov
and
sub
jbe
xor
lret
call
jle
xchg
xor
inc
fcmovu
mov
sahf
inc
pop
fmulp
repz
or
pop
and
test
push
sti
aad
cmpsl
iret
add
adc
sbb
js
mov
pop
fcmovne
das
scas
ficomps
inc
mov
in
cmp
fcomps
adc
push
clc
imul
nop
adc
mov
lcall
std
pop
or
fsts
jle
and
loope
jp
xchg
fcmovne
dec
sahf
inc
hlt
lods
fidivs
mov
and
pop
repnz
sarb
ljmp
cmc
bound
stc
sbb
test
arpl
cmpsl
ret
out
inc
mov
std
ja
push
fcmove
ret
jmp
adc
orb
lock
mov
ficoms
add
into
movsl
fldcw
inc
fisubrs
jg
mov
bound
std
sub
mov
adc
fisubs
jle
out
jno
inc
mov
fs
ja
pushf
mov
mov
divl
pusha
jecxz,pn
rcll
jb
inc
pop
cwtl
and
fsubp
mov
jecxz
jb
xlat
fsubrp
outsl
loope
mov
or
fdivrl
jns
sbb
mov
fiadds
adc
dec
into
xchg
aad
int3
jb
and
xchg
and
fadds
ret
aaa
std
lret
flds
mov
jle
push
out
sub
adc
sub
pop
cld
push
and
jbe
cli
fisubrs
sub
lcall
xorb
fidivrs
adc
ljmp
push
xchg
popa
test
lea
shr
out
add
adc
inc
sbb
add
push
sub
and
mov
mov
js
mov
sbb
inc
outsb
push
sub
push
or
ret
aas
jle
or
mov
or
iret
xor
inc
push
ficomps
sbb
cltd
fimuls
out
sbb
adc
pop
mov
cli
fdivrp
mov
lret
popa
cmp
xor
pop
pop
mov
or
xchg
outsb
push
mov
fwait
rolb
jge
lods
jmp
inc
nop
mov
and
pop
mov
ret
dec
sub
loopne
mov
fmulp
outsl
cld
xorb
cmp
jg
insb
sub
idivl
add
clc
cmp
and
adc
and
cmp
mov
sbb
insb
push
or
push
repz
sub
mov
pop
pop
fldcw
enter
cwtl
cmpsl
lret
aaa
mov
mov
xor
fiadds
push
pop
imul
je
mov
pop
cmc
xchg
std
andb
out
sti
sarb
daa
or
cmpsl
fisubrs
pop
ja
inc
push
dec
mov
mov
loopne
and
enter
xor
iret
shl
adc
fsubp
dec
xchg
inc
es
test
aam
jae
ret
icebp
fidivrs
sbb
ficomps
cli
add
jmp
mov
and
sub
and
ror
pop
out
xchg
add
dec
outsl
fmulp
fdivrl
xchg
ficoms
int
cmp
jecxz
std
sub
dec
or
aam
ret
std
adcb
push
dec
pop
pop
mov
outsb
push
pop
jb
in
mov
mov
aas
mov
or
add
fiadds
insb
ja
lods
fs
std
inc
xorl
inc
rcr
pushf
pusha
aad
into
sub
scas
sbb
adc
mov
movsl
les
sbb
int3
std
out
cmp
faddp
push
in
es
outsl
cmpsb
add
or
imul
gs
popf
test
out
enter
ficomps
xchg
das
lret
mov
aaa
subb
cmpsl
imul
mov
call
roll
rorl
std
cmp
gs
lock
fisubl
dec
mov
add
fimuls
and
sub
movsl
outsb
fsubp
and
or
fidivs
test
push
push
rcr
push
test
sbb
sub
inc
sub
pop
mov
fs
mov
pop
pop
pmaxub
mov
ss
sti
in
loop
iret
jle
fiadds
xor
sub
or
jg
mov
enter
outsl
mov
mov
int3
dec
in
mov
loope
adc
in
cmpsb
jns
and
sub
add
std
daa
imul
and
mov
into
loop
dec
xor
ret
aaa
dec
mov
mov
nop
into
cli
mov
sub
or
cmp
push
jnp
xchg
orl
fdivrl
sub
fisubs
inc
ret
cwtl
lds
aaa
subb
jl
loop
aaa
push
inc
fdivp
lahf
mov
push
jns
into
xor
mov
push
and
xchg
add
loopne
shlb
mov
jg
jle
loope
mov
iret
add
adc
test
mov
outsb
js
pop
ljmp
push
pushf
xor
je
repnz
ret
and
jg
push
ljmp
scas
lea
adc
inc
out
fmulp
mov
cltd
xchg
fiadds
hlt
xlat
mov
push
jp
loop
out
or
fisubrs
fsubl
adc
inc
fiadds
mov
dec
fdivrp
hlt
stos
int3
pop
xlat
fsubs
aas
addr16
sbb
xchg
fisubs
je
dec
sarl
mov
outsw
test
inc
negb
xchg
scas
in
lcall
fidivrs
clc
push
fidivrs
cli
nop
sti
jle
js
cmpsb
push
insl
lahf
push
push
inc
ss
push
adc
lods
aam
cmp
aas
int
ret
enter
mov
cmp
lret
inc
mov
sbb
jno
fiadds
jl
shll
jmp
pop
cld
into
inc
cmpsl
repnz
out
repz
clc
and
push
pushf
shlb
enter
push
aaa
gs
scas
imul
ljmp
jmp
in
cmp
xor
push
sub
xchg
fisubrs
mov
jnp
std
jmp
jmp
sbb
mov
sbb
fisubrl
addr16
inc
fimuls
loopne
mov
cmp
fiadds
or
sahf
mov
int
iret
adc
fimuls
push
leave
faddp
popf
stos
add
mov
cmpsb
ud0
cld
mov
xor
and
xchg
dec
std
jmp
sub
fisubl
push
scas
mov
aas
ficoms
xor
push
xchg
loopne
push
mov
pop
jo
sbb
pop
xor
jb
fisubrs
sub
ds
out
sbb
xchg
ficomps
mov
mov
xchg
and
mov
add
ret
fisubrs
out
pop
ficomps
insb
jo
mov
jg
and
xchg
insl
mov
push
fmul
lret
ror
idiv
loope
adc
sbb
inc
rcr
push
test
push
jbe
or
pop
add
jb
cmp
orb
pop
add
aaa
mov
pop
in
loop
push
lret
jbe
and
popa
xor
sub
enter
fidivrs
sti
pop
mov
pop
fidivrs
xchg
in
jle
sub
ljmp
push
gs
lcall
rorb
test
ficoml
cmpsl
or
sbb
mov
ss
fisubs
dec
cmc
dec
popf
test
sub
loope
add
fidivrs
xor
push
faddl
shrb
sbbb
mov
cmpsb
or
fiadds
mov
imul
lcall
popf
sbb
std
notl
fwait
mov
loop
mov
adc
adc
cmp
dec
push
test
addr16
scas
int3
sbb
into
mov
cld
lds
fidivrs
lods
adc
or
sub
jne
jge
dec
arpl
add
mov
adc
and
pop
std
lds
or
cli
sub
jp
inc
dec
jbe
adc
push
sti
cmp
test
jl
mov
ljmp
cmp
loop
in
add
add
jne
fisttpll
roll
push
fidivs
cmc
xchg
movl
cmp
dec
testb
cs
cmp
pop
sbb
fstpt
mov
mov
data16
xlat
mov
jg
rcr
into
inc
pushl
add
sar
int3
mov
push
or
push
ret
mov
mov
lods
sbb
add
out
ret
cmp
add
xchg
in
pop
cs
add
adc
jnp
mov
jge
cmpsb
jmp
adc
mov
ret
mov
lods
and
inc
or
idivb
out
into
sbb
lahf
fiadds
pop
cmp
enter
cmp
add
adc
ficoms
dec
test
jg
out
loope
js
mov
sub
ret
adc
push
sarb
jns
pop
xchg
mov
cld
mov
stos
mov
arpl
dec
jle
xor
xor
lret
mov
or
sub
pop
push
fiadds
adcb
fldenv
std
cltd
sub
xchg
mov
inc
xlat
rcrb
add
cmp
pop
pop
or
xchg
xchg
pusha
inc
test
fiadds
jno
mov
xchg
call
aas
or
int3
cmp
lret
imul
in
ds
jne
mov
xchg
adc
in
mov
inc
push
test
push
daa
fdivrs
gs
sub
ret
cmp
xchg
push
sbb
sarb
test
out
pop
adc
lods
ficoms
push
xor
lea
sbb
ss
ror
push
push
and
ljmp
sbb
scas
push
fisubs
mov
push
fdivrp
inc
push
add
inc
fiaddl
insb
or
mov
rclb
push
mov
xchg
jmp
aad
jns
and
data16
jno
inc
aas
nop
gs
dec
fisubs
outsl
lret
mov
pop
mov
lcall
aaa
mov
or
andl
arpl
and
call
fcomps
push
dec
into
inc
ja
cmp
inc
sahf
cli
inc
jnp
jbe
inc
sub
jmp
fiadds
add
cwtl
imul
or
movsb
jge
mov
sub
outsl
les
leave
pop
lods
jb
adc
fidivs
xor
icebp
push
lock
or
jge
pop
cwtl
mov
stc
cmpsl
leave
mov
ficomps
push
xor
sbb
xlat
and
jle
pop
jo
mov
addr16
xchg
lds
shll
push
daa
inc
lret
or
add
insb
xchg
and
dec
call
aas
loopne
push
stos
enter
xor
test
ficoml
sub
enter
sbb
cwtl
gs
cmpsb
loop
aam
js
jecxz
stos
dec
fidivrs
movsl
in
ljmp
mov
xchg
dec
in
sahf
fsubl
sub
popa
sarb
pop
and
ficomps
enter
add
fiadds
mov
mov
ret
xor
xor
push
lret
shrb
iret
ret
divl
add
push
fiadds
inc
mov
test
xchg
xlat
jle
in
push
sbb
jle
sbb
xor
and
or
xorb
jne
pop
mov
scas
cmpsb
cs
into
cmc
pop
push
pop
xchg
shll
cmp
pop
inc
mov
fidivs
inc
fsubrs
movsl
sbb
subb
push
clc
fimuls
cmp
inc
and
js
sbb
cmp
push
faddp
popf
and
xchg
idivl
std
ficomps
fisttpl
push
adcl
or
dec
fsubp
xor
lcall
pop
cmpsl
rcr
xchg
jmp
rcll
sti
icebp
jne
in
dec
push
rclb
dec
jecxz
xor
fs
cwtl
and
into
lret
xor
sub
xchg
fiadds
mov
and
cld
jg
and
in
push
rclb
mov
xchg
sbb
mov
sarl
adc
ds
iret
scas
adc
xorb
xchg
xchg
insl
js
xchg
cs
mov
mov
sub
jle
pop
fadd
sub
lret
cmp
rcr
test
sub
dec
jns
sti
fisubrs
push
mov
testl
and
std
addr16
jle
fxam
sub
and
repnz
fidivs
jp
and
dec
bound
xchg
icebp
mov
pop
sahf
add
out
ds
mov
daa
mov
jnp
fisubs
call
push
test
push
faddp
leave
nop
and
fdivrs
ficomps
mov
mov
fs
push
std
pop
icebp
cmpb
mov
push
add
and
mov
adc
fimuls
loope
mov
fyl2xp1
sub
call
ja
stos
cld
sub
sbb
pushf
pop
shl
repnz
fisubs
xor
jo
jmp
test
stos
cmpsl
add
cltd
fyl2x
xchg
jecxz
mov
mov
cmp
jbe
or
outsb
ret
fisubs
scas
inc
arpl
sti
fisubs
xchg
fdivp
repz
fisubs
insl
cmp
mov
leave
dec
pop
repnz
mov
xchg
mov
enter
es
mov
fisubs
bound
fidivs
mov
mov
cmp
idiv
push
fidivrl
ss
das
adc
outsb
andb
scas
inc
cmp
add
pop
out
loopne
lret
shlb
dec
call
xor
cld
pop
cmp
mov
and
mov
cs
sti
mov
cmp
addr16
or
aad
or
add
xchg
dec
pop
jmp
aad
ljmp
sbb
sahf
fsubs
mov
and
addr16
test
hlt
enter
mov
lret
fsubp
cmp
fcmovu
in
movsb
sub
or
push
sti
ficoms
jmp
add
mov
and
stos
std
adc
imulb
clc
sub
pop
fldt
sahf
loope
mov
aam
insl
xor
dec
fwait
cwtl
add
push
mov
imul
mov
stos
movsb
xchg
adc
ficomps
pop
jmp
jg
ror
ficomps
test
push
xor
pop
pop
mov
test
cwtl
mov
cmp
pusha
and
aam
jecxz
sbb
push
fdivp
pop
adc
xchg
xor
out
pop
rorl
popf
fisubs
outsb
xchg
rorl
fimuls
jl
inc
fsubrp
cld
push
jae
test
aad
mov
pop
adc
imul
fiadds
insl
pop
xor
inc
push
mov
cmc
int
fidivrl
sbb
cwtl
mov
fisttpll
pop
cmp
fsubrp
mov
fstps
outsb
sarl
and
into
push
aas
out
mov
mul
xchg
shrb
rolb
xchg
test
jns
sub
dec
push
jle
rcr
ss
adc
repz
mov
sub
fiadds
lcall
mov
cli
pop
jae
in
add
ret
fcoml
or
mov
jno
pop
fs
fimuls
lods
ret
mov
orl
cmc
fimuls
nop
iret
cmp
into
cmpsb
pop
dec
jb
js
inc
test
out
daa
sbb
ret
xor
mov
dec
jp
add
cld
inc
mov
int3
call
stos
inc
out
pop
xorl
subps
sbb
insl
mov
aad
lcall
icebp
xchg
shlb
mov
xchg
in
test
pop
jl
mov
jno
and
mov
test
lds
fidivs
stos
or
fsubrp
sub
jno
sbb
das
dec
xchg
cmpsl
mov
loop
fisubrl
scas
sub
fimuls
xchg
sbb
mov
shl
ret
push
imull
fidivs
subl
cmp
pop
push
lret
mov
rcl
xchg
in
shr
iret
jno
cmp
and
xor
sbb
inc
sbb
loopne
mov
lret
std
xchg
pop
fsts
adc
push
xchg
popa
fisubrs
push
push
pushf
dec
sbb
ja
mov
and
ficomps
xchg
into
sar
mov
dec
or
jo
jnp
cmc
pop
push
dec
fs
or
test
mov
lds
ficoms
jecxz
push
sbb
cld
repz
cmp
sarb
jg
popf
lock
test
dec
add
cmp
push
loopne
xchg
pop
pop
out
rolb
mov
jg
adc
insb
jle
mov
jle
adc
add
popf
mov
jmp
pushf
add
test
movsl
imul
cld
lea
inc
lret
inc
mov
jle
stos
les
imul
jecxz
js
push
xlat
jb
out
cmp
insb
aam
pop
fdivrs
xchg
jo
fiadds
es
mov
xchg
and
hlt
or
mov
movsb
mov
mov
mov
dec
mov
out
ficoms
mov
inc
faddp
mov
sub
pusha
fidivs
aam
mov
pop
xchg
mov
xor
les
sti
fimuls
ss
fidivrs
arpl
ficomps
nop
scas
jae
out
stos
mov
mov
pop
sarb
fldl
std
int
pop
enter
dec
push
sahf
sub
rclb
lea
sub
fimuls
fildl
rolb
fiadds
fimuls
mov
mov
sbb
shll
std
lds
inc
mov
mov
test
or
cmp
and
sbb
dec
fidivrs
push
and
jb
sahf
mov
and
mov
adc
cmp
push
movsl
ret
stos
outsb
push
popa
sahf
jg
inc
cld
adc
addr16
adc
ret
cmp
imul
inc
mov
sarb
in
scas
sbb
cwtl
out
fimuls
inc
push
jb
adc
mov
in
mov
jle,pt
cmp
xor
ror
jmp
or
mov
cmp
add
xor
out
jl
mov
daa
cltd
jle
fimull
and
xlat
out
inc
cwtl
push
xchg
scas
pushf
adc
xchg
push
mov
loopne
dec
jnp
test
dec
addr16
pop
fiadds
push
insl
jo
in
mov
iret
outsb
test
loope
adc
lcall
fucomp
fsubl
cmp
and
clc
dec
xor
cmp
mov
out
in
jmp
mov
pop
fidivs
jnp
jbe
add
pop
outsl
push
repnz
push
adc
mov
mov
repz
ror
pop
sub
int3
jg
sbb
mov
xor
push
inc
enter
shr
xchg
aas
stos
mov
fdivl
popf
les
fdivp
cwtl
or
fiadds
ljmp
cmp
leave
lahf
gs
sar
inc
aam
pop
hlt
xchg
out
push
ficoms
jmp
movsl
sbb
add
mov
xchg
ja
scas
fiadds
xchg
shlb
fiadds
inc
or
popf
gs
imull
pop
std
fcmovnu
fldl
shlb
and
std
cwtl
sub
les
xchg
fidivs
mov
scas
or
rcr
jmp
jl,pn
repz
xchg
icebp
dec
push
call
jae,pt
pop
and
cli
stc
movsb
loope
lds
ljmp
or
mov
outsl
add
fisubrs
dec
and
ljmp
mov
sub
jge
repnz
ja
dec
and
inc
shlb
fimuls
data16
outsb
mov
sbb
xor
ds
add
pop
das
js
je
ficomps
add
cli
or
mov
faddp
je
xchg
and
ficoms
jae
hlt
jns
mov
fiadds
not
mov
push
aas
fimuls
cmpsl
mov
iret
repz
xor
or
rorl
dec
lods
jecxz
mov
sub
jnp
insl
dec
cs
jle
xor
jne
rol
adc
pop
sbb
clc
push
lret
stc
sub
sbb
nop
add
ret
sbb
inc
aaa
pmaxub
push
sbb
mov
arpl
lahf
and
xchg
subb
into
fsub
mov
jbe,pn
clc
arpl
push
adc
ficoms
insb
insl
mov
jg
push
loope
lods
lahf
fmulp
pop
sub
and
jle
test
add
pushf
stos
adc
repnz
rolb
xor
std
add
pop
push
rolb
test
xchg
cltd
sbb
mov
outsl
cmp
inc
in
jle
loop
cwtl
pusha
mov
jb
mov
push
push
xchg
rol
hlt
cmp
mov
int3
cmpsb
in
and
lods
inc
sbb
dec
popa
shlb
dec
dec
ficomps
cmp
in
ficoms
xor
in
enter
adc
adc
andb
nop
mov
mov
divb
mov
jne
ss
ret
dec
fsubp
sub
add
push
mov
sbbb
cmp
mov
aam
xor
aas
fiadds
cli
mov
rorb
cmpsl
les
cs
mov
jb
and
mov
pop
or
gs
dec
aas
mov
fdivrp
out
xchg
pop
call
fwait
aad
mov
xor
test
xchg
iret
and
inc
xor
sub
and
xchg
das
xchg
adc
cmp
jnp
pop
rorb
addr16
outsl
lahf
cmpsb
add
mov
test
fiadds
mov
lds
and
push
adc
fisubs
push
inc
faddp
mov
cmp
and
fiadds
sub
pop
cmpsb
add
pop
imul
fimuls
fwait
dec
sar
in
mov
imul
mov
and
ljmp
ficomps
pop
test
sarl
je
sbb
ficoms
imul
mov
mov
push
aas
xchg
stos
mov
subl
daa
movsb
mov
jbe
insb
call
aam
scas
movsl
jle
mov
int3
add
fmulp
pop
jns
xor
cmp
stos
inc
aam
shrb
inc
dec
std
jb
test
imul
fdivp
fmuls
fisttpll
jne
add
lahf
cmp
outsb
push
mov
addl
lea
mov
in
and
pusha
idivb
pop
inc
push
push
mov
fiadds
in
ret
fdivrp
jns
addr16
sub
cmpsb
dec
push
movb
ds
mov
es
sahf
xchg
mov
or
push
pusha
sub
fimuls
jno
pop
pop
pop
sbb
sbb
ja
cmc
iret
pop
xchg
shrl
outsb
into
pop
push
in
fcmovu
jb
ret
mov
fisubs
dec
repnz
pop
jp
notb
cwtl
imul
jae
lea
inc
add
cmp
sti
popf
ficomps
notl
gs
das
arpl
inc
adc
push
inc
dec
into
repz
testl
outsl
ficomps
adc
sub
push
fs
push
sti
fimuls
in
mov
test
push
fisubs
rol
out
sti
popa
pop
or
mov
stos
cli
push
inc
int3
mov
sub
leave
stos
sbb
gs
mov
in
pop
mov
jae
std
fidivrs
pop
pop
nop
ret
mov
xchg
dec
fcmovbe
sti
xchg
fscale
iret
cltd
mov
xchg
add
fisubs
fs
or
call
mov
addr16
in
aas
daa
les
scas
fistpll
fidivrs
loopne
inc
fisubs
inc
push
fwait
xor
dec
mov
mov
fs
fstps
push
loopne
fimuls
fidivrs
sbb
dec
inc
js
fisubrs
mov
push
dec
push
or
lods
fisubrs
inc
lds
or
rcrb
jnp
sbb
dec
test
cld
negl
fisubs
sbb
fidivrl
aas
rcrl
pushf
fmull
push
outsb
cmp
lahf
dec
pusha
xchg
sbb
in
cmp
enter
cwtl
test
out
add
fiadds
mov
into
jo
add
call
cld
push
in
sub
fwait
jmp
lret
cli
mov
fidivrs
cs
push
jp
repnz
cltd
std
ret
xchg
xor
and
cmp
das
stos
neg
in
scas
enter
ret
mov
mov
xor
and
xchg
lock
outsb
fisubrs
push
xchg
pop
clc
sbb
push
fimuls
int3
cs
and
ficoms
xchg
sbb
xchg
pop
popa
hlt
fdivrp
fs
testb
xchg
xchg
lret
negl
add
push
aad
movsb
std
mov
pop
jae
rcrb
outsl
cld
testb
xor
push
and
adc
fisubrs
arpl
lock
inc
fiadds
scas
lods
hlt
std
out
dec
outsb
outsb
mov
pop
lret
fld
lcall
xchg
dec
sub
das
ficomps
jmp
insb
fimuls
aad
jne
rcr
fidivs
jns
lods
call
aas
fisubs
ret
fsubrp
in
push
aad
dec
mov
ljmp
movsb
cmp
inc
fsts
mov
test
inc
and
aaa
push
jge
fcmovnbe
cmp
fs
pop
jl
mov
fidivs
dec
mov
jmp
jge
mov
and
jbe
pusha
pop
popa
fisubrs
cmpsb
jecxz
loop
lods
ds
mov
jle
cld
pop
sahf
mov
aam
jl
into
xchg
cmc
push
popa
or
push
xchg
fsubp
inc
movsb
icebp
push
aaa
fwait
hlt
ficoms
std
in
out
scas
sbb
xor
mov
xor
mov
dec
push
xchg
cld
gs
mov
loope
jecxz
sbbb
push
inc
ficomps
ss
sti
out
mov
imul
xlat
pop
cli
bound
push
xchg
dec
mov
push
aas
shl
mov
daa
iret
std
out
mov
je
insb
call
lock
xchg
xchg
push
loopne
pop
adc
enter
xor
dec
or
pop
inc
in
push
test
insb
jo
sub
clc
test
ffree
inc
xchg
cmp
incb
add
sub
mov
fisubs
xor
adc
shlb
mov
push
add
sbb
push
push
mov
mov
xchg
adcb
fidivl
cmpsb
push
sbb
jae
jo
popf
push
ficoms
call
inc
adc
jp
ficomps
fsubl
out
xor
pushf
push
or
jno
xchg
and
sub
sbb
lret
xor
cmc
ret
inc
cmp
pop
push
test
xchg
mov
push
dec
jns
pop
pop
cmp
out
lret
xchg
out
fimuls
aam
add
gs
jae
dec
cs
cmpsl
push
fidivrs
mov
test
fiadds
fisttpl
jne
les
mov
pop
adc
faddp
je
pop
xor
push
mov
adc
rorb
call
rolb
cmp
push
push
mov
sbb
xor
mov
mov
xchg
lret
xchg
mov
stc
in
fisubrs
lds
dec
and
jmp
out
or
imul
push
sbb
mov
lock
mov
sahf
sub
sbbl
stos
pop
out
popa
fidivrs
call
jmp
js
iret
xor
cli
adc
add
mov
lahf
dec
rcrl
mov
mov
jae
movsl
les
and
cmpb
add
cli
movsl
fwait
mov
insb
jbe
lahf
std
ret
leave
std
out
add
push
arpl
jnp
mov
push
lods
popf
mov
fisttpll
pusha
insl
test
fisubs
mul
or
lods
xor
inc
mov
jmp
xchg
test
cmp
sub
ret
iret
dec
sbb
inc
or
and
out
push
sbb
fimuls
lock
dec
pop
loopne
rcr
and
push
xchg
jge
mov
fisubs
jg
mov
test
ja
fmulp
popf
iret
fs
sbb
jo
jle
aas
fiadds
mov
add
lock
cmc
pop
sahf
repnz
gs
push
xor
into
pop
stc
pushl
mov
test
stos
fidivrs
inc
cltd
inc
fcoms
xlat
pop
add
cmp
xor
sub
cmpsb
add
std
inc
mov
ficomps
push
pushf
int3
jge
sti
aas
and
inc
ficompl
mov
popa
cmp
std
adc
andl
ja
xchg
into
sub
roll
iret
fisubrs
mov
push
jne
pop
ficomps
push
sahf
loop
mov
shl
push
nop
mov
outsl
pop
cli
shll
sub
std
sub
movb
push
call
leave
pop
mov
into
testb
pop
testb
sub
loope
fisubs
adc
cmpsl
popf
test
pop
loop
stc
test
shrb
or
jecxz
mov
gs
aas
cmc
and
xchg
jmp
aad
cmc
xor
push
pop
inc
data16
mov
xchg
fisubrs
mov
lret
mov
cmp
loopne
pop
ficomps
mov
dec
dec
sbb
ficoms
in
sbb
fisubrl
mov
ficoms
xchg
push
dec
addl
jne
js
or
fisubrs
aam
ss
sub
lret
jno
add
in
int
and
pop
movsb
fiadds
jnp
fwait
sahf
out
imul
add
lock
rclb
js
push
cmpsb
add
inc
fidivrs
mov
cwtl
incl
rcrb
mov
ds
sub
std
jb
pushf
imul
pop
popf
mov
pop
mov
outsl
dec
xchg
in
cmp
dec
rcll
cli
test
or
dec
insb
fidivs
mov
ficomps
pop
lea
pushl
std
dec
enter
shlb
push
fiadds
sahf
add
sub
test
ljmp
std
sbb
cmp
fisubrs
outsb
pop
inc
fisubrs
mov
jo
ficoms
rclb
stc
add
int3
outsl
mov
pop
leave
push
call
dec
cli
mov
sub
int3
gs
sub
jae
jle
or
jo
out
mov
fsubrp
add
push
xchg
mov
sbb
scas
lret
sub
xchg
or
insl
jno
pop
jle
pop
out
sbb
jp
cmc
pushf
adc
fs
std
and
sahf
push
inc
sub
movsl
jle
jne
sbbb
jle
xor
lret
movsb
or
fidivrs
hlt
jae
xchg
mov
jo
jle
mov
xchg
int
faddp
xchg
or
mov
and
fidivrs
xchg
mov
mov
mov
out
mov
sahf
cmp
call
sarb
mov
push
xorb
xchg
dec
fisubs
insl
pop
mov
jecxz
xchg
dec
sub
sahf
jecxz
fimuls
or
fisubl
and
out
int3
sbb
inc
or
push
mov
xor
xchg
ds
in
jo
fcomps
mov
xor
fidivs
inc
jmp
adc
jbe
xchg
or
inc
cld
fmul
lret
xor
add
mov
and
rol
or
mov
ret
in
xchg
jle
les
mov
ret
adc
dec
jle,pt
test
inc
inc
jne
mov
cmpl
es
ficomps
mov
fstps
jmp
and
push
adc
mov
dec
xchg
or
inc
mov
pop
pop
out
mov
mov
cli
inc
loop
outsb
test
sarb
jle
lods
dec
out
enter
xlat
jne
pmaxub
ret
hlt
sbb
aaa
jo
jmp
xlat
mov
or
lods
push
stos
fimuls
lahf
pushf
fiaddl
lock
fadd
sbb
add
fidivrs
cld
sahf
mov
jle
adc
sub
int
pxor
out
adc
mov
jle
push
dec
inc
pop
pop
int3
push
mov
enter
fwait
mov
repnz
std
pop
outsb
xor
sbb
call
fidivrs
enter
ficoms
sti
stos
pop
and
or
clc
cs
xlat
xlat
hlt
fidivrs
shlb
fnstenv
xchg
pusha
or
mov
sbb
loope
xchg
mov
cwtl
outsl
mov
ja
pop
and
dec
fsubp
sbb
xchg
cmp
dec
sub
fnstsw
leave
and
cli
rcrl
inc
sub
adc
cmp
push
xor
jecxz
jmp
push
adc
ficomps
lret
ficomps
adc
inc
jae
ja
popa
into
push
mov
std
jle
sub
test
out
mov
fistpl
aas
jnp
add
fsubrl
cmpsl
shlb
cld
mov
gs
test
push
fcoml
or
aam
sbb
aas
nop
inc
inc
mov
add
jmp
fimuls
cmp
mov
lcall
pop
fdivp
jle
or
ficomps
cli
add
repnz
outsb
lock
addr16
ficomps
jo
test
fnsave
jmp
ficoms
imul
fsubp
jge
scas
inc
dec
push
dec
and
out
mov
sahf
push
sbb
rcr
test
dec
popa
sub
cmpsl
rolb
sub
push
jb
lret
fisubs
je
pop
in
xor
fidivl
push
lock
xchg
pop
jle
sub
and
cwtl
mov
std
fdivr
mov
test
ds
ret
lea
xor
and
sub
out
cld
popf
sarl
inc
sub
push
or
dec
xor
cmp
add
push
inc
movb
enter
xor
int3
xchg
sbb
pop
insl
clc
ret
or
test
in
std
pusha
sbb
icebp
jb
enter
or
add
shrb
mov
lods
dec
fisubs
jle
jbe
loop
or
movsb
fisubs
sbb
int3
jle
fldl
js
fwait
add
mov
fisubrl
repz
bnd
push
int
sub
lcall
sbb
or
sub
mov
fsubp
mov
cmpsb
pop
std
xor
das
ja
sbb
outsb
jno
adc
popa
fldt
jle
insl
ljmp
and
ds
cmp
push
les
out
sub
movsl
push
jne
jg
ficomps
inc
es
out
in
push
jae
jbe
inc
in
in
sarb
popf
jmp
scas
imul
icebp
mov
das
cli
fisubrs
adc
xor
mov
clc
cmp
lcall
ficomps
rorb
lea
sahf
das
rcrl
jns
sub
fstp
push
mov
fsubr
xchg
faddp
sub
stc
and
stos
pop
push
and
pop
or
out
testb
std
and
ret
pop
loop
scas
jb
sahf
fimull
subl
sub
popa
ficoms
int
xor
xchg
inc
mov
les
mov
leave
fidivs
sub
int
js
out
jg
outsl
or
fidivrs
hlt
inc
lods
scas
in
aam
jecxz
std
idiv
cmp
push
adc
int
jns
ficoms
xor
addl
scas
adc
sub
loope
fldcw
cmp
jp
imul
lods
int3
test
mov
adc
sub
fistpll
push
fisubrs
mov
adc
jecxz
fidivrs
dec
sbb
jne
fisubs
pusha
dec
lret
adc
cmc
ret
popf
jnp
aaa
fsubp
xchg
sbb
mov
inc
fidivrs
cmp
cs
shl
xor
jbe
fldenv
insb
movsb
cltd
fiadds
icebp
dec
cmp
fdivp
push
dec
and
ret
loope
lods
ror
sub
push
lret
ficoms
lahf
mov
pop
repnz
aam
jmp
and
xchg
ret
xchg
fidivs
cwtl
mov
sbb
pop
push
aas
inc
in
fdivp
stos
jbe
mov
jecxz
jae
xlat
enter
sti
into
dec
cli
and
imul
mov
xor
in
mov
pop
aad
hlt
lods
jo
int3
sbb
pop
mov
fimuls
sbb
and
popa
ficomps
jl
mov
mov
xchg
jae
dec
in
dec
mov
shr
jno
mov
mov
mov
rclb
jnp
mov
add
sub
mulb
cmp
shlb
lock
arpl
in
fidivrs
fisubs
data16
int3
xor
fisubs
lret
mov
add
push
inc
addl
test
lods
fisubs
adc
sahf
jo
adc
scas
sub
pop
mov
or
add
aas
sub
andb
cmp
fsubrp
inc
std
sub
ljmp
pop
sbb
aam
pmaxub
or
lods
mov
mov
test
fiadds
lret
les
dec
fidivs
dec
cmp
popa
fidivs
dec
lea
xor
sbbl
sahf
test
jp
push
xchg
subl
shrl
fidivrs
mov
sahf
mov
pop
cld
mov
iret
sub
pushf
sub
push
push
fiadds
fisttpl
out
push
jne
fbld
fiadds
in
inc
fs
add
scas
xor
nop
fsubrp
mov
pop
rcll
mov
dec
mulb
into
cmpb
ficomps
clc
cmp
out
sbb
mov
test
ret
fidivs
xor
mov
rol
adc
fimuls
pop
aad
insb
popa
add
pushf
inc
mov
rclb
fsubp
inc
cmp
ror
pop
ds
and
adc
or
mov
inc
aad
mov
loop
lcall
pop
or
fwait
cmp
jo
add
xchg
push
in
dec
in
mov
mov
leave
loop
ret
rcr
lds
inc
push
cvtpi2ps
add
add
xchg
repz
das
fsubrl
and
rcr
and
and
push
push
jp
mov
mov
mov
xchg
stos
pusha
pop
in
arpl
fmull
mov
sar
sbb
dec
push
jp
pop
or
aam
cmp
mov
dec
ficoms
shll
push
cmp
cmp
fs
mov
sti
inc
aaa
repnz
movsl
lods
ficoms
xor
out
fisubs
imul
rolb
mov
pushf
scas
jae
into
xchg
imul
fwait
data16
aad
fdivp
adc
or
cmp
out
xchg
rclb
je
loop
in
dec
sbb
mov
push
xchg
fcompp
fwait
adc
rcrb
loope
xchg
fisubs
out
faddp
jne
add
js
ficomps
xchg
jl
fidivs
stc
inc
pop
or
dec
inc
add
fisubrs
imul
loope
subl
pop
xor
pop
adc
inc
lods
aaa
sub
jne
and
sbb
sub
hlt
mov
out
aam
dec
sti
pop
test
arpl
sbb
sub
inc
vandnps
push
lret
mov
int3
outsl
mov
mov
fdivr
sub
mov
ret
pop
adc
xchg
lahf
jle
enter
and
decb
std
pop
stos
push
pop
xchg
or
ficoms
lods
jp
xchg
dec
sbb
shll
std
mov
mov
les
sbb
sahf
ret
or
outsl
mov
xor
test
sbb
cmp
sub
es
dec
aaa
cmpsb
xchg
mov
aas
jl
ficoms
call
sbb
mov
lock
dec
fidivrs
or
push
movl
ficoms
lds
out
neg
cmp
imul
sub
xlat
fidivrs
jle
out
xor
xchg
fiadds
mov
mov
fimuls
aaa
imul
mov
mov
ficomps
sbb
stos
ficoms
sub
rcl
loopne
cmp
pop
fldcw
or
leave
pusha
cld
push
scas
test
dec
insl
mov
xchg
cmc
pop
hlt
into
mov
mov
outsl
jl
sbb
nop
mov
dec
ret
mov
xchg
sbb
push
ficoms
rcrl
lret
cmp
bound
les
notl
nop
sahf
mov
fidivs
cmpsl
mov
lcall
mov
inc
out
fisubs
and
fcmovnbe
out
or
mov
pop
xchg
scas
fidivrs
adc
sbbb
cmp
cmpsl
add
sbb
clc
jge
addr16
mov
aas
icebp
or
gs
mov
cmp
shlb
fiadds
aad
into
push
mov
sbb
out
lret
data16
scas
fstpt
test
cli
ficomps
jns
dec
add
cmp
ljmp
dec
and
sbb
lods
shr
and
test
inc
loope
cmc
adc
jno
or
nop
std
dec
jge
imul
ficoms
leave
lock
mov
mov
outsl
fisubs
push
push
add
mov
rcrl
in
jo
mov
repnz
xor
inc
fisubrs
ja
pop
sbb
std
jle
in
cwtl
fs
cli
xlat
add
fmulp
adc
pop
ficomps
push
jnp
imul
es
out
mov
xlat
fcoms
out
sub
cs
ds
pop
or
or
imull
xchg
fimuls
inc
push
mov
xor
or
inc
loopne
outsb
push
sahf
xor
shlb
pop
insl
cmp
jo
pop
test
jle
les
jns
cld
scas
pop
test
fiadds
daa
or
outsb
movsb
push
and
popf
mov
mov
sti
inc
sarb
or
push
ds
sub
and
std
mov
fadds
repz
subb
movsb
int
sbb
ficomps
leave
jo
dec
jbe
sbb
jge
xchg
push
fsubp
ljmp
iret
xor
out
xchg
push
sbb
jno
fimuls
mov
adc
cmc
pusha
ficoms
addr16
scas
add
lret
jb
xchg
inc
int
sub
movsl
fimuls
rcr
out
dec
cli
movb
fcmovu
xor
test
pop
pushf
data16
jae
cmp
inc
cmpsb
popf
les
das
push
and
fidivrs
pop
add
nop
xchg
add
fidivs
outsl
je
std
push
lds
xchg
shlb
lcall
outsl
rclb
int3
aam
sbb
jne
daa
out
adc
inc
cmpsl
mov
add
xchg
push
fimuls
cmpsb
mov
cmp
pop
out
push
sbb
cmpsb
xchg
aas
add
xchg
paddq
ljmp
shlb
sbb
fcoms
mov
nop
fdivrl
jns
mov
ficoms
sti
fdivrp
adc
xor
imul
lret
jo
lods
fiadds
push
mov
xor
in
jecxz
outsb
les
int3
mov
sub
and
add
mov
mov
or
std
push
mov
fidivrs
jp
sbb
adc
pop
mov
fdivp
sbb
lock
push
into
cmp
fwait
gs
mov
lret
inc
jnp
sbb
fdivp
insb
cmpsb
add
test
iret
push
faddp
into
aad
aaa
rorl
inc
pop
jl
dec
pushf
pop
push
xchg
into
les
sbb
mov
std
inc
les
jecxz
add
ss
inc
ficoms
jmp
mov
jg
adc
loope
mov
std
mov
push
in
out
mov
jle
fisubs
sub
ficomps
int3
repnz
jnp
sar
ret
daa
adc
stos
mov
cmp
cld
xchg
cmp
push
or
scas
data16
xor
mov
stos
mov
mov
movl
sub
push
shl
push
in
int3
inc
in
and
inc
int3
imul
add
popa
jg
in
dec
incl
out
and
mov
in
mov
shrl
mov
fidivs
and
xor
push
mov
ficoms
inc
test
test
adc
xor
std
push
jae
push
scas
dec
nop
fidivrs
adc
ret
inc
fdivrp
lret
in
out
mov
test
sti
fs
fisubs
das
jle
cmpsl
cs
fidivs
clc
push
fidivrs
loopne
and
pusha
jbe
mov
mov
es
sub
fiadds
testl
push
jmp
sub
pop
xor
or
sar
dec
inc
inc
inc
fdivrp
dec
insl
mov
sbb
scas
cmpsb
data16
stos
lret
push
cmp
mov
addb
mov
jae
dec
shrb
ret
sti
dec
sbb
das
pop
fidivs
add
pop
and
xchg
fisubrs
dec
sbb
mov
sahf
out
ss
cld
std
mov
mov
ficoms
imul
mov
movsb
fwait
mov
mov
adc
jle
ret
enter
int3
push
iret
xor
cwtl
push
fcomps
loope
xchg
sbb
pushf
pop
pop
lock
fisubs
pop
jns,pt
add
fsubp
mov
imul
lea
or
cmp
je
sub
push
and
daa
inc
repnz
or
sub
inc
pusha
into
fidivrs
xchg
fidivs
and
pop
xor
repz
insl
dec
sarb
or
mov
pop
icebp
cltd
xchg
ficoms
popa
cmp
add
add
mov
rclb
mov
dec
out
test
outsb
mov
rorb
mov
aaa
adc
adc
xchg
call
pushf
mov
scas
push
fmulp
repz
pop
inc
cmp
ret
sub
mov
push
adc
jae
mov
xchg
push
in
fcoml
or
cltd
pop
jno
dec
fidivrs
lods
int3
push
addb
nop
imul
fidivs
in
and
pop
jb
into
sub
fs
movsl
mov
ficomps
mov
inc
outsb
pop
add
shlb
fsubrp
inc
aam
mov
popf
rcrb
testl
pushf
repz
es
jbe
fs
je
rol
dec
xchg
xor
adc
mov
jge
cmp
into
fimuls
pop
jne
iret
hlt
pop
dec
lods
dec
mov
insb
fiadds
xchg
scas
or
sub
mov
xor
mov
loope
push
dec
dec
jmp
add
add
aad
cmp
xor
sub
push
inc
pop
push
movsl
lret
repz
pop
jle
or
lcall
mov
push
dec
fmulp
dec
test
xor
jp
cmpsl
js
int3
mov
dec
into
sub
into
push
mov
mulb
sahf
aam
jmp
push
adc
mov
movsl
cs
adc
jae
mov
xchg
sbb
std
cwtl
lret
fwait
cmp
and
decl
fimuls
jb
lods
and
cmp
out
nop
adc
jnp
shll
or
inc
cmp
out
xchg
dec
jns
dec
sbb
inc
mov
les
popa
sbb
cmc
cld
add
sbb
pop
fidivrs
les
inc
js
lahf
add
pop
orb
push
fcoms
aaa
and
fsubrp
add
dec
cmp
mov
sub
xor
and
sub
mov
adc
nop
push
rol
cmc
mov
fdivrp
pushf
adc
repnz
hlt
in
ret
jbe
cmc
ficoms
pop
push
fsubrp
push
inc
fdiv
lcall
js
shl
jns
add
xlat
ja
mov
dec
pop
addr16
pusha
adcb
sbb
nop
xchg
xor
fdivp
or
int3
jmp
movsb
xlat
sbb
into
icebp
or
push
sahf
mov
push
xchg
xor
in
mov
das
insb
sub
push
xchg
mov
xor
push
scas
push
icebp
mov
push
sbb
or
ss
enter
pop
adc
pop
cli
push
push
xlat
scas
jl
out
aam
mov
inc
out
sbb
mov
pop
aam
mov
add
in
mov
fnsave
cmpsb
cmpsl
fisubs
in
sti
sub
clc
mov
push
fisubrs
xchg
dec
or
gs
sahf
aas
sbb
add
xchg
inc
lcall
fimuls
dec
data16
and
mov
test
stc
mov
cmp
test
cmp
addr16
gs
add
sbb
jl
xor
pop
push
mov
and
pop
out
adc
fidivrs
push
mov
ja
sahf
fmull
adc
sahf
pop
cmpl
cs
push
push
jecxz
movsb
mov
jle
fwait
scas
or
in
movb
xor
iret
outsl
fidivs
ds
out
dec
fisubrs
cwtl
sub
in
xor
call
jge,pt
add
imul
rcrb
xchg
call
xchg
ficoms
and
out
jge
test
fidivrs
sub
fisubs
inc
cmp
mov
add
fiadds
cmp
mov
or
shrb
out
adc
popa
and
fiadds
mov
arpl
out
cmp
lock
in
xchg
fiadds
mov
or
dec
daa
jge
mov
mov
or
loop
in
inc
shlb
xchg
jo
nop
outsl
addb
cli
push
push
loop
mov
inc
fiadds
repz
pushf
sar
and
sub
mov
sbb
push
pop
jo
dec
in
fsubrl
mov
ja
xor
mov
lds
ds
insl
or
xchg
cmp
push
lods
rorl
cmc
mov
fstps
push
fimuls
push
jb
fimuls
xchg
movsl
add
dec
shll
or
xor
xchg
aas
push
lods
jo
out
add
xchg
imul
loop
jge
jb
outsl
imull
mov
fcmovnb
and
bound
sbb
pop
je
ficomps
dec
xor
fisubrs
lcall
xor
sarb
fimuls
sbb
loope
sub
sbb
lret
mov
jae
ficoms
movsl
cli
dec
faddp
sub
mov
fimuls
inc
mov
jbe
sbb
mov
insl
xchg
pop
pop
push
aas
ljmp
into
sub
cwtl
pop
out
clc
std
inc
ja
mov
enter
mov
xchg
test
outsl
sbb
iret
in
pop
xor
add
stos
add
jno
js
cmpl
mov
jle
enter
xchg
cmp
ljmp
inc
das
iret
ficoms
mov
out
pusha
mov
and
psubusw
mov
push
das
add
jp
into
bound
movsb
adc
mov
fiadds
sub
jle
xor
sahf
jnp
add
xchg
cmpsb
ficomps
lret
aas
gs
xchg
pop
sub
add
xlat
aaa
fimuls
and
sbb
dec
stos
jl
clc
fdivp
push
aam
ret
push
mov
jmp
fcomps
into
push
mov
pop
jge
cwtl
xchg
jecxz
cmpsb
xor
ret
dec
fisubrs
int
cmc
fidivs
adc
mov
adc
pop
jp
fisubs
outsb
lret
mov
repnz
sub
pushl
adc
mulb
out
jnp
inc
inc
outsl
and
fimuls
or
shl
xchg
inc
adc
jle
iret
dec
or
or
pushf
test
push
mov
pop
into
inc
xchg
into
cmp
cmp
mov
push
push
sbb
inc
sub
xchg
jb
in
call
mov
xchg
stc
fidivrl
enter
rcrl
sub
xor
mov
sub
cltd
sbb
pop
nop
mov
push
inc
popf
ficomps
out
sbb
dec
ficoms
arpl
fdivp
pop
scas
mov
cmp
push
out
sbb
lret
ss
jle
mul
sbb
divl
fimuls
cmpsl
pusha
fidivs
mov
fiadds
mov
scas
jle
insl
or
or
adc
xchg
fimuls
lds
aad
fisubrs
inc
sbb
fsubp
and
mov
mov
sub
lods
leave
scas
lret
aas
cli
cmp
gs
pop
les
shr
fimuls
int3
mov
jle
andb
mov
push
mov
mov
and
xchg
sahf
sub
cld
es
xchg
mov
cmp
imul
fsubp
or
fdivrp
out
shlb
fidivs
punpckldq
fisubrs
loope
pop
fcomip
test
gs
ror
sbb
fisubs
jle
sbb
imul
push
loope
dec
pop
std
mov
mov
xchg
fdivrs
mov
inc
xchg
daa
mov
fldenv
add
inc
cmp
lods
scas
scas
addr16
xchg
lock
std
loopne
sub
fmulp
inc
xor
insb
aam
ficoms
xchg
out
cmp
inc
inc
dec
mov
mov
xlat
sbb
fldcw
xchg
dec
jne
or
lret
scas
fisubrs
bound
mov
jb
mov
into
mov
loop
fisubs
and
pop
push
outsl
jo
xchg
push
mov
jns
decl
repz
mov
fwait
mov
push
iret
pop
sbb
mov
sbb
push
lds
dec
fidivs
mov
inc
sahf
or
rol
fidivs
and
fidivs
inc
sbb
xchg
sub
fildl
cmc
rol
cwtl
shll
or
push
loop
ret
mov
fiadds
sar
movsl
xor
pop
sbbb
out
into
or
sti
jae
in
jg
add
mov
jnp
movb
mov
popf
adc
adc
xchg
ja
std
fldt
jl
clc
bound
je
mov
dec
ret
pop
shlb
push
dec
or
ret
je
push
cmp
and
sbb
cli
adc
dec
loop
xlat
mov
aad
adcb
ret
jnp
int
fisubs
xchg
out
cmc
sbb
jbe
and
cli
test
fbstp
jecxz
into
xchg
nop
fisubrl
sub
insl
cmpsl
pop
mov
fsubp
pop
push
xor
mov
xchg
pop
jle
sti
xchg
lret
iret
sahf
jl
push
xor
xor
add
jle
inc
js
or
fiadds
or
fiadds
inc
in
fiadds
lock
mov
int3
adc
idivl
push
popa
lds
mov
sub
std
fdivrp
push
rorb
mov
push
std
mov
jp
ljmp
bound
mov
push
mov
into
add
cs
push
mov
dec
jnp
fiadds
mov
addr16
test
mov
andb
xor
cmp
andl
arpl
stos
mov
out
lock
jns
fcomps
adc
xlat
jge
daa
ja
push
into
xchg
icebp
mov
jg
ret
jb
repz
es
mov
rorb
subps
or
pushf
ficomps
mov
fldl
fisubrs
inc
or
aam
sbbb
arpl
add
push
ficomps
test
test
cmp
cld
arpl
inc
push
lret
ja
xchg
insb
call
sbb
xor
jmp
in
sub
in
or
dec
fsubp
xchg
mov
xor
dec
mov
add
rcrl
mov
push
shlb
scas
out
std
lahf
push
push
cld
mov
cmp
nop
adc
test
jl
pop
mov
adc
fimuls
push
pop
cli
pop
fldt
hlt
inc
out
sbb
mov
push
lret
fidivs
mov
fs
ficomps
inc
jae
cmpsl
mov
jle
aaa
vmwrite
clc
repz
fidivs
cs
cmp
push
int3
mov
xchg
ficoms
jmp
push
fimuls
jbe
stos
sbb
mov
roll
inc
push
mov
clc
in
fmul
cmp
faddp
dec
repz
push
pop
fidivrs
mov
dec
add
fimuls
xorl
and
mov
and
sahf
fwait
adc
pop
inc
push
dec
imull
jae
pop
test
aam
cld
pop
sub
mov
roll
jo
jb
add
inc
inc
movsb
cli
ljmp
in
lock
leave
xor
ds
push
scas
push
cli
mov
pop
xchg
movsl
popa
mov
cwtl
jbe
outsb
pop
imul
pop
notl
jne
jmp
ret
sub
pop
and
ficomps
mov
jecxz
xchg
pop
mov
pop
or
daa
fmulp
aas
inc
or
nop
insb
ficoms
mov
inc
lret
scas
fisubl
xchg
sahf
int3
jg
fdivrp
jp
enter
xor
xchg
bound
insl
xchg
movsl
inc
sub
pop
fisubrs
cmp
fiadds
icebp
stc
xchg
rcr
xor
lds
sub
jle
movsl
inc
les
gs
call
mov
sti
fcom
out
fisubs
andps
mov
ficoml
inc
stos
mov
mov
fisubs
add
lcall
jo
arpl
pop
push
xchg
in
mov
lret
fisubs
pop
inc
mov
add
gs
jecxz
and
into
inc
ret
push
jno
popf
sbb
subl
loopne
sub
inc
fisubs
push
push
sbb
clc
jb
jno
inc
dec
sbb
loope
jl
fisubrs
push
or
sub
scas
ficoms
add
lret
pop
jae
fiadds
lds
sbb
inc
in
popf
mov
pop
idivl
adc
fisubrs
xchg
adc
adc
je
jmp
fidivs
std
sub
pop
call
in
cmp
jmp
xor
or
testb
bound
pushf
xchg
jns
loope
cmp
lds
and
jle
cld
movsl
or
in
ficoms
std
pop
test
pushf
test
mov
arpl
in
sub
jecxz
rclb
data16
add
icebp
pop
in
in
insb
ret
lahf
ficoms
aaa
mov
fisubrs
add
cld
adc
jp
mov
daa
adc
mov
mov
into
imul
cmp
inc
or
mov
inc
jns
jae
mov
mov
jne
xchg
mov
xor
std
fsubrp
aas
fldcw
shlb
push
outsb
ret
addr16
sahf
fsubrp
dec
icebp
mov
lods
xchg
fcomps
xchg
popa
roll
into
stos
cltd
sbb
into
or
push
cmp
sbb
cmpsb
ficoms
loopne
faddp
jp
ret
push
insb
jo
std
pop
movsl
push
sbb
into
xchg
push
adc
push
xorb
lock
in
imul
xor
xchg
and
mov
push
push
cld
cmp
mov
pop
push
mov
or
pop
repz
adc
jns
xor
mov
dec
or
mov
les
stc
dec
mov
pop
xor
xor
mov
pop
scas
adc
push
stos
and
dec
dec
pusha
jecxz
pop
fs
inc
ficoms
cmp
fimuls
pusha
hlt
faddl
inc
repnz
nop
xchg
lock
or
jmp
stos
lcall
mov
ficomps
mov
mov
add
mov
mov
sub
aas
pop
aaa
adc
and
loope
jb
fisubs
cmp
push
xchg
test
fidivs
stos
sub
notb
jl
fiaddl
std
mov
push
mov
insb
scas
ret
dec
das
cli
xchg
jp
mov
or
incl
daa
inc
loopne
jle
shlb
test
icebp
fisubrs
clc
cli
shlb
sub
jb
or
add
push
aas
mov
js
inc
jmp
aad
jge
xor
dec
fsts
inc
inc
jne
jnp
hlt
mov
mov
cmp
std
cmp
loop
fcoms
ds
dec
pop
movsw
mov
jo
pop
add
mov
and
jecxz
adc
es
dec
xchg
and
stos
faddp
sbb
sahf
gs
sbb
in
aad
jle
and
into
imul
adc
lds
add
xor
mov
mov
ret
dec
mov
sub
movsl
adc
sbbl
int3
mov
arpl
xchg
pop
adc
cmc
inc
aad
ja
dec
fisubrs
jg
pop
xchg
fiaddl
fimuls
lret
mov
cld
aad
mov
fisubrl
daa
repz
sub
insb
es
incl
jns
push
scas
loopne
jae
cmp
clc
movb
jecxz
mov
push
xor
movsb
insl
xlat
sbb
adc
nop
test
cmp
xor
icebp
sbb
cmpsl
fidivrs
dec
adc
push
lret
mov
outsb
dec
ret
pop
dec
sbb
lock
lds
push
rcl
pop
mov
repnz
push
fimuls
out
xchg
xor
movsb
mov
or
mov
ss
cmpsb
sbb
mov
fmulp
adc
jo
fisubs
mov
push
xor
xchg
andb
jp
fmull
testb
sahf
push
or
jnp
jno
pop
bound
dec
mov
lods
inc
and
addl
xor
cmp
inc
rcl
iret
push
cmp
push
and
jb
mov
mov
movsl
je
movb
xchg
mov
xor
fldl
dec
add
push
gs
inc
mov
cmp
cmpsb
push
and
fistpl
sbb
mov
into
das
mov
pop
adc
push
fisubs
cmpsl
mov
dec
add
fimuls
lcall
xchg
rol
and
cmp
sub
jne
mov
dec
shrl
mov
out
or
adc
icebp
lds
or
and
or
adc
add
test
xchg
sub
cmp
add
je
mov
jle
pop
pop
ret
ja
les
stos
mov
ficomps
dec
iret
subb
xor
into
jp
clc
in
les
sbb
pop
into
fldt
mov
in
mov
cld
push
les
lret
mov
xor
jns
cmp
ficomps
jecxz
mov
jo
test
sbb
jle
std
xchg
dec
rcl
out
jbe
pop
xchg
test
sbb
ret
jge
ficoms
into
dec
sarb
repz
mov
outsl
ficoms
mov
test
into
and
jmp
stc
out
fidivs
imul
fidivrs
imul
movd
add
lret
adc
or
pop
addr16
rcr
or
fidivrl
idivb
fmuls
loope
pop
jp
data16
push
sub
int
adc
inc
lret
pop
pop
dec
std
or
fdivrp
outsl
repnz
adcb
loop
cmp
mov
out
ret
sub
inc
mov
std
cltd
fdivrp
sarl
jecxz
jmp
fisubs
cmp
and
add
sbb
inc
xchg
nop
out
mov
xchg
cmpsl
dec
add
ficomps
cmp
je
cmp
add
sub
in
mov
xchg
jae
in
in
sbb
pop
loope
sub
push
adc
mov
push
or
daa
into
in
inc
mov
inc
sarl
idivb
rcrb
rcrb
adc
imul
xorb
lea
pop
sbb
lret
adc
loope
pop
pop
mov
cld
fs
xchg
insb
jne
fcmovnu
popa
mov
clc
ficoms
rorb
sbb
add
dec
addr16
popa
fisubrs
aas
test
shll
xchg
pop
jb
es
pop
dec
sbb
xor
jo
data16
cmc
push
inc
lret
pusha
std
mov
shlb
cli
add
jbe
lret
or
es
incb
mov
xlat
addr16
ficoms
sbb
int3
cmc
fiadds
repz
and
mov
movsb
int3
enter
jg
push
dec
xor
in
mov
cld
subb
mov
insb
sti
ficoms
add
mov
mov
or
fwait
xor
fisttpll
push
push
inc
cli
xchg
push
mov
mov
fstpt
pop
ret
in
mov
mov
mov
ds
push
mov
inc
call
popa
in
pop
xor
cmp
inc
xchg
rcrb
jno
std
pop
outsb
push
jle
nop
daa
inc
mov
in
pop
enter
dec
popa
fisubrs
fldenv
loopne
popf
push
enter
xor
sti
pop
or
jmp
jle
sub
xor
push
mov
jae
fiadds
add
out
add
jns
les
jo
fidivs
adc
and
mov
and
adc
dec
jnp
into
gs
push
nop
mov
xchg
mov
in
test
xchg
jle
sub
cmp
jae
jo
push
jl
shlb
mov
or
xor
mov
scas
shrb
mov
or
push
shlb
cmpb
jbe
out
lods
lret
sbb
sahf
into
cmc
and
xchg
cmp
faddp
pushf
jecxz
cmp
inc
xchg
xchg
clc
fisubs
cmp
fimuls
mov
sbb
or
in
pusha
test
add
jae
adc
imul
jmp
inc
fcmovnu
inc
push
into
das
in
adc
lcall
dec
scas
arpl
mov
push
cltd
mov
cmp
xchg
rclb
insb
cmp
fisubs
pop
insl
jb
push
pop
lock
shlb
das
xchg
dec
iret
fidivrs
lds
pop
xor
or
push
jbe
mov
dec
jo
cmpsb
push
sahf
adc
jb
fidivrl
aad
jmp
push
pop
sub
fsubrp
mov
xor
adc
out
je
iret
push
and
mov
fimuls
or
mov
scas
loope
push
in
mov
jmp
inc
cmp
lret
outsl
adc
lcall
fisubl
lahf
inc
xchg
mov
cmc
movsl
std
fisubrs
jp
fldcw
test
lea
mov
dec
pop
addr16
enter
mov
mov
cmpsl
into
jle
mov
lods
push
leave
or
std
aaa
gs
sub
xchg
cmpsb
bswap
sbb
into
nop
fists
jns
ret
fiadds
pop
cmc
sbb
insb
xor
jl
push
pusha
push
fimuls
fcomps
mov
pop
std
lock
jmp
and
gs
dec
add
fsubp
fists
mov
int3
mov
sahf
in
ret
out
sub
sti
or
loop
add
rcrb
outsl
jle
repnz
mov
outsb
insb
xor
inc
pop
ret
dec
scas
xchg
mov
ljmp
aas
pop
jecxz
mov
inc
stc
call
fdivr
cltd
nop
mov
xlat
xchg
std
addl
jle
jbe
pusha
and
inc
xor
pop
lcall
lods
push
adc
add
jle
and
shlb
faddp
popa
dec
nop
cld
fimuls
adc
cli
xchg
pusha
add
in
cs
out
pusha
inc
sub
push
mov
insb
bound
mov
push
sarb
mov
fimuls
mov
push
ficoms
ret
push
ss
ficoms
xlat
jne
arpl
test
push
andl
out
stos
mov
arpl
fistpl
pop
out
iret
cmpsl
in
cmp
xchg
clc
into
sub
mov
mov
adc
roll
aas
and
fisubs
mov
in
aad
sub
xor
mov
insl
cmp
fidivrs
mov
xchg
daa
lret
mov
lods
pop
dec
push
sbb
fisubs
dec
xorb
mov
fimuls
dec
orl
std
clc
mov
and
aas
push
dec
shrl
jns
sahf
mov
fidivs
shrb
mov
daa
fildll
xor
push
push
jle
pop
mov
fwait
data16
out
inc
fdivrp
adc
pop
and
xor
push
repnz
outsb
push
ficomps
ss
mov
cwtl
push
jle
dec
sub
jle
xor
mov
imul
mov
mov
in
movsl
xchg
fidivrs
pop
rol
ficoms
sub
decl
pop
ds
shrb
cmpsb
adc
xor
sbb
xchg
dec
fimuls
enter
xor
fisubs
adc
sbb
and
movsb
test
add
into
icebp
pop
adc
or
xchg
mov
les
fisubrs
out
dec
dec
popf
inc
fisubs
adc
loop
mov
bound
xor
inc
dec
outsl
clc
fisubrs
fnstsw
mov
dec
repz
fiadds
pop
sub
and
int3
jo
fisubrs
push
outsl
mov
mov
cli
and
xor
xlat
push
paddusb
sarb
int3
cwtl
mov
fidivs
push
add
jge
fisubrs
ret
xor
push
mov
aaa
rclb
faddp
xor
popa
push
xchg
jb
fisubs
jno
mov
xchg
sar
arpl
into
fidivrs
outsb
cmc
mov
sbb
xor
lods
add
sub
int3
test
icebp
rcrl
fiadds
xor
in
pop
jle
call
xor
je
ficoms
pop
mov
inc
js
lcall
in
shl
sub
sbb
jne
test
dec
insl
mov
xchg
imul
inc
mov
jecxz
popa
and
pop
sbb
pop
loope
push
in
cmpsb
subl
ljmp
sub
sbb
push
ja
jl
pop
fisubs
shll
idiv
or
inc
iret
add
xor
xchg
push
add
addl
push
aaa
mov
add
shrb
les
sahf
sub
lea
repnz
mov
into
or
mov
pop
pop
fcomp
aas
and
cli
and
add
aaa
dec
ds
cmp
mov
out
nop
repnz
in
sub
sbb
cli
inc
or
inc
repnz
sub
popf
aas
test
nop
add
cmp
inc
ret
sub
aaa
lahf
out
sbb
ficoms
insl
clc
fs
std
push
out
dec
push
dec
sbbb
lock
repnz
mov
and
mov
and
cld
adc
pshufw
jecxz
loope,pn
pusha
push
int
fs
sub
fucomip
adc
std
jle
inc
jnp
fwait
fisubs
adc
pushf
sarl
inc
repnz
lods
ret
push
xor
mov
add
push
mov
inc
mov
xchg
xchg
mov
sub
or
sbb
inc
clc
rolb
aas
cmp
sti
dec
add
insb
hlt
roll
push
and
cmp
mov
rorl
icebp
mov
xchg
or
mov
sub
jg
mov
popf
dec
fimuls
push
sub
bound
mov
add
fimuls
ds
fisubrs
adcb
arpl
lds
mov
push
enter
std
sub
fwait
lea
gs
dec
fidivs
pop
mov
add
jge
fs
jle
pop
xchg
mov
cmpsl
ret
mov
lods
lret
inc
scas
push
rclb
sub
push
push
and
in
dec
fldenv
scas
andl
sub
jl
xchg
out
aad
rcr
xor
out
sbb
out
mov
cs
popa
inc
dec
out
mov
test
cli
pop
xchg
jnp
sbb
shlb
pop
out
jg
fcomps
fidivs
mov
and
cmp
and
call
ret
aam
popf
dec
jb
les
sahf
pop
sub
sbbl
fisubrs
push
fiadds
insb
rorl
sahf
push
adc
ret
push
fisubs
leave
mov
shll
push
sub
ficoms
adc
mov
cwtl
in
xchg
sti
inc
js
ret
repnz
sbb
into
mov
pop
jp
nop
mov
xchg
mov
jne,pn
shrl
jge
daa
push
imul
inc
in
insb
mov
cmpsb
inc
inc
xor
fisubrs
adc
insb
sahf
hlt
enter
cld
xor
sbb
ret
xor
sub
enter
fidivs
stos
icebp
jp
or
mov
mov
inc
and
xchg
xor
stos
fimull
push
mov
mov
shl
shlb
fisubrs
cmpps
xor
sbb
inc
mov
into
loop
repz
fidivs
sub
leave
push
cmp
jae
adcl
xor
in
jmp
or
negl
xor
jecxz
add
dec
cmpsb
arpl
pop
movsl
inc
pop
stos
and
lods
fisubs
mov
cmc
fisubs
dec
rol
pop
xchg
cmp
push
add
jae
inc
ret
movsl
faddp
and
andb
out
cli
movsb
mov
or
es
add
and
inc
add
fdivrp
daa
mov
mov
cmp
xchg
aam
pop
pusha
into
fistl
sbb
data16
je
lds
fsubrp
adc
int3
lcall
cwtl
out
fwait
pop
fiadds
sbb
jne
rorb
and
ds
xchg
add
stc
fisubs
test
lock
cltd
ja
add
push
jbe
xor
xchg
popf
test
into
sbb
fsubr
ja
ficomps
mov
popf
sub
pop
fwait
pop
mov
leave
imul
pop
fisubrs
push
mov
fidivs
xchg
sti
and
jle
xor
movl
mov
aam
mov
in
mov
fnstcw
scas
fimuls
sti
or
jp
mov
jae
dec
xor
fisubrs
sbb
out
cmp
and
push
in
pop
ljmp
insb
adc
lods
mov
xlat
xlat
xchg
out
icebp
ljmp
add
fisubrs
or
and
fiadds
lret
sbb
or
pop
inc
filds
fidivs
ret
rcrl
enter
fisubrs
sbb
sbb
rcrb
jmp
fisubs
lock
inc
fsubs
sub
les
sbb
push
mov
sahf
std
lds
fiaddl
int
add
ficomps
jle
lods
imulb
and
mov
fstpl
push
xchg
ret
dec
xor
iret
pushw
fisubs
cmp
jle
jmp
stos
mov
sbb
cmp
xlat
ret
pop
mov
fisubrs
cmp
or
call
sti
scas
xchg
fdivp
inc
mov
out
xorb
fidivrs
int3
dec
xor
and
jg
mov
pop
mov
popa
ficoms
mov
mov
xchg
mov
aaa
in
mov
or
xor
adc
push
lock
and
push
jg
xchg
mov
fdivp
nop
and
xor
dec
cwtl
std
fisubs
shlb
jo
push
push
push
pop
in
into
sbb
jg
inc
lret
jmp
repnz
add
mov
negb
aaa
adc
jns
clc
imul
cld
in
loope
rolb
fidivrs
xlat
stos
mov
out
mov
enter
mov
xor
xlat
inc
push
sbb
fisubrs
pop
mov
xchg
enter
pop
test
into
fidivrs
jne
pushf
lret
jle
cmp
xchg
push
fisubs
dec
fcmovne
mov
in
daa
orl
lahf
mov
push
int3
jle
and
mov
ds
adc
shrb
sti
sbb
aam
ja
mov
add
sbb
call
popa
int
adc
mov
push
leave
dec
shlb
xor
push
int3
xor
lock
out
fisubs
mov
cwtl
push
orb
decb
dec
fisubrs
jb,pt
mov
stos
imul
cld
pop
sbb
jg
and
dec
out
push
arpl
rcrl
adc
ljmp
sbb
aad
inc
repz
cmpsl
scas
clc
gs
xor
std
enter
xor
sub
jge
jo
insl
inc
adc
add
sub
pop
xchg
and
lcall
cmp
sbb
roll
add
or
fimuls
xchg
mov
mov
adc
std
mov
test
outsl
xchg
dec
movd
sbb
sub
adc
in
mov
out
push
and
sbb
xor
icebp
jo
push
fdivrp
push
lods
ficompl
data16
inc
in
dec
fimuls
xor
cmp
or
nop
jno
lret
push
push
cmc
cmpl
ljmp
js
fimuls
push
mov
xchg
mov
mov
clc
daa
cmp
out
imul
scas
add
in
bnd
and
push
mov
fstl
ficoms
fstpt
rcr
sbb
pop
aad
adc
fdivrp
je
dec
dec
fwait
push
cli
out
stos
mov
add
call
shlb
or
fiadds
sbb
rclb
xorl
stc
xchg
mull
cmpsl
jno
or
mov
jmp
push
out
xor
mov
mov
test
fidivl
mov
push
pop
push
mov
lret
mov
mov
xchg
add
pop
jno
iret
push
dec
rdpmc
ficoms
sbb
js
std
sahf
mov
inc
ror
mov
mov
mov
add
sbb
int3
aas
mov
sarb
push
test
inc
add
decl
mov
popa
fidivs
flds
add
aaa
inc
jp
and
pop
sbb
adcb
out
nop
fiadds
cs
cmp
ret
into
adc
neg
cwtl
dec
outsb
push
pop
cmpsb
ss
pop
test
push
mov
lret
rcrb
push
loopne
mov
cmp
sbb
add
lret
fcomps
faddp
and
push
test
jge
sbb
push
pop
cs
add
fcmovnbe
jg
enter
fs
sub
adc
mov
jle
sub
pop
enter
push
in
dec
pushf
ficoms
mov
fbstp
out
fwait
sbbl
sti
pop
inc
fiadds
inc
roll
adc
jecxz
ret
jl
pop
xchg
cmp
adc
xchg
jbe
loop
add
mov
xchg
ds
imul
std
pop
and
ficoms
sbb
sbb
lret
inc
pop
mov
xchg
pop
mov
mov
ror
sub
push
nop
faddp
bound
jle
cmpsl
mov
mov
mov
testb
mov
cmpb
cmp
or
shlb
mov
lret
xchg
cld
enter
pop
adc
ljmp
inc
mov
fimuls
xlat
ja
rcrb
les
gs
mov
loope
push
lahf
leave
xchg
aas
push
rcrl
ficomps
jnp
pop
pushw
out
inc
pmaxub
lcall
mov
mov
loope
pop
pop
add
mov
pop
mov
fidivrs
out
jmp
mov
cmp
and
xor
adc
fidivs
test
fidivs
jbe
cltd
fisubs
cld
adc
mov
add
fsubp
xor
movsb
mov
mov
cmovb
clc
jle
xor
insb
ret
das
fiadds
cli
mov
cwtl
cmp
add
xor
xchg
lds
or
ds
fnstcw
sbb
adc
push
mov
fimuls
xchg
add
out
jle
loopne
shll
xchg
sbb
pop
push
mov
fiadds
or
inc
ficoms
mov
mov
enter
xor
pop
ficoms
jb
je
inc
mov
ds
repz
xor
ficoms
or
cmc
enter
std
xchg
out
arpl
test
add
jmp
mov
loope
ficomps
mov
mov
nop
leave
or
fwait
mov
ror
fbld
fdivp
lea
scas
sub
fs
sbb
xor
xchg
mov
mov
cltd
push
test
mov
xor
test
and
out
inc
fidivs
inc
aas
or
cmpsb
sbbl
shrb
jge
mov
or
cmp
inc
xchg
nop
rorb
adc
sub
or
fcom
xorb
lea
inc
popf
cmp
imul
je
xchg
nop
inc
insb
cmp
mov
pop
sahf
lret
ret
mov
push
das
dec
cmc
mov
adc
stc
fnsave
int
sub
mov
mov
call
ficomps
cmp
inc
sbb
jne
mov
pushf
push
mov
fidivrl
cli
stc
cmpsb
repz
lds
in
push
and
pop
int3
cmc
pusha
fidivs
shlb
js
ja
fxch
sahf
test
inc
std
test
ljmp
lcall
in
enter
fdivp
dec
pop
mov
aam
mov
mov
and
jo
ljmp
std
add
mov
fdivrp
add
std
mov
arpl
xor
jle
fwait
cmp
jecxz
adc
daa
fidivrs
out
hlt
inc
scas
xchg
lods
fidivs
lods
pusha
fdivrp
test
int3
mov
and
sub
sub
sar
dec
mov
out
fimuls
sub
imul
rorb
or
xchg
cmpb
fisttpll
lret
inc
fiadds
test
push
dec
fists
add
std
xchg
jl
lahf
jle
push
leave
mov
xor
andb
add
scas
fsubr
std
fisubl
loope
push
jg
fidivs
jmp
test
xchg
jg
or
loope
aaa
mov
fisubrs
cmp
and
jle
sahf
add
jno
mov
xlat
push
pushf
movsb
fidivrs
repnz
fidivs
sahf
push
fmulp
lea
ficompl
sbb
pop
jge
std
jecxz
or
popa
mov
pop
scas
pusha
inc
push
cmpsb
adc
sbb
mov
icebp
int3
xchg
scas
and
mov
out
popa
fiadds
sarb
and
in
xchg
jno
cmp
push
xor
lea
fdivrp
jg
and
nop
insb
mov
jnp
rolb
ss
in
inc
stos
into
arpl
sbb
scas
xchg
push
mov
out
push
outsl
fmulp
cmp
lods
pop
out
push
mov
add
sub
popa
ds
push
pop
ficoms
cmpsl
imul
cmpsb
int3
shrb
dec
fisubrs
cmpsl
movsl
test
iret
xchg
jg
gs
add
fmulp
andl
and
push
jmp
aad
lahf
xchg
xor
sbb
fisubrs
cbtw
push
jmp
cmp
mov
fst
cli
lods
icebp
cld
lret
push
rol
outsl
repnz
hlt
cwtl
addr16
adc
mov
mov
xor
jmp
dec
inc
sbb
jne
adc
icebp
into
sbb
mov
dec
scas
in
cltd
pop
jg
sahf
aaa
inc
pop
cld
daa
xor
aam
mov
sub
test
sbb
int3
loop
hlt
fidivs
and
ficomps
in
shrl
leave
mov
jb
xor
or
and
push
repnz
hlt
mov
fidivrs
int
insb
xchg
incb
imul
mov
jbe
sbb
cmp
mov
mov
sbb
xchg
movsb
aam
xchg
loop
dec
mov
inc
jle
aas
jo
fisubrs
dec
inc
xor
xchg
xchg
std
lods
fidivs
fmuls
dec
lret
fisubs
adc
fiadds
inc
test
pusha
fnstsw
lea
icebp
sbb
sbb
cmp
mov
push
add
mov
outsb
add
cld
jnp
ret
mov
xchg
fiadds
dec
lock
lods
xlat
jg
mov
inc
outsl
cld
popa
jecxz
push
into
outsb
mov
bound
daa
mov
xchg
stc
repz
fisubs
sub
cmpsl
pop
xchg
mov
pop
aaa
data16
xlat
push
xchg
dec
and
xor
dec
in
or
nop
mov
mov
mov
fidivs
sbb
pop
cmc
roll
pop
lret
pop
fsubp
cmp
fists
mov
inc
cmpsb
xchg
ficomps
movsl
cmp
adc
inc
pop
inc
out
aas
push
xchg
loopne
inc
ficomps
add
jae
mov
addl
sbb
test
ficoms
ja
add
enter
imul
cmp
lcall
add
mov
ficomps
aaa
sbb
jne
jp
dec
notl
out
xchg
out
pop
sar
faddp
fmul
and
fsubrp
stos
test
repnz
add
ficoms
xchg
test
xchg
in
xchg
sub
lret
inc
sbb
mov
jno
push
pop
out
mov
lds
cmp
mov
xchg
dec
imul
fxch
sbbl
fmulp
adc
js
sub
pop
popf
mov
out
mov
dec
xor
pop
les
adc
sbb
jns
pushf
ficoms
pop
xor
dec
decl
std
fldcw
fadd
imul
push
lret
sub
dec
push
aad
lods
push
imul
mov
jnp
adc
gs
cs
pusha
cld
or
imul
movsl
icebp
dec
mov
mov
cmpsb
jo
or
fistpll
fmulp
insb
aaa
sub
ljmp
in
push
int
sbb
outsl
lahf
div
cmpsl
into
aam
dec
lock
scas
fcomp
pop
imul
xchg
fidivs
les
fisubs
mov
push
loop
loope
or
fisubrs
jb
mov
pop
adc
ficomps
pop
push
sbb
in
and
dec
fsubl
bnd
ret
call
ficoms
std
inc
mov
imul
cltd
test
ret
mov
cmp
movsb
push
pusha
mov
dec
cld
mov
jns
fidivs
push
dec
ljmp
in
add
icebp
shrb
dec
loopne
xchg
mov
xchg
nop
and
test
roll
imulb
push
iret
sub
fistpll
jp
mov
test
nop
add
fisubs
testb
pop
in
inc
adc
rcll
icebp
in
xlat
sbb
push
push
imul
ds
loope
mov
lret
lret
push
ret
pop
into
pop
sbb
fidivrs
xchg
xchg
inc
pop
adc
ja
cmpsl
insl
xor
mov
clc
ret
rcr
mov
into
jb
or
mov
mov
mov
xchg
pop
ss
aad
dec
pusha
xor
ficomps
mov
add
stos
inc
ret
xchg
js
fcoml
icebp
test
add
gs
dec
rolb
jbe
lcall
lahf
popf
add
pop
push
pop
cmpl
loop
adc
imul
mov
push
fimuls
cmp
stos
mov
test
call
add
lret
cmpsb
ds
add
scas
or
arpl
jp
jg
mov
xchg
fwait
out
fisubs
in
icebp
mov
leave
cmp
or
push
stos
pop
test
mov
mov
bound
cwtl
arpl
insb
out
test
inc
fsubp
idivl
mov
fimuls
pop
in
mov
mov
cmpsl
out
scas
mov
shl
fimuls
mov
shrl
dec
insb
add
mov
shlb
xchg
mov
loopne
lcall
xor
test
mov
ror
out
sub
daa
mov
into
cmpsb
fnsave
inc
push
outsb
add
pop
jmp
scas
cmp
aad
sub
add
shl
ficoms
xor
push
jle
loopne
mov
inc
fidivrs
xchg
mov
jo
fsubrp
and
or
outsb
adc
loope
jo
ficomps
mov
xchg
data16
ficomps
push
pop
xor
ficomps
and
jno
nop
movsl
jle
ss
dec
lods
xor
int3
sub
cmc
loope
jnp
dec
xor
cmp
jg
mov
jb
insl
push
inc
pop
lods
neg
movsl
dec
jle
cmp
loop
out
je
popf
mov
aad
add
xor
fidivs
cmc
aaa
inc
mov
out
mov
icebp
aad
idivl
jmp
dec
ficoms
dec
sub
fimuls
pop
sub
pop
lret
lcall
mov
into
cmp
lret
ficomps
aaa
lcall
mov
sarb
std
aas
jno
out
fadd
jae
jl
and
push
insl
or
lods
push
cs
pop
and
test
xchg
add
movsb
sbb
les
nop
fidivs
rclb
lret
push
ja
faddp
int3
pop
clc
lcall
xchg
stc
out
out
mov
cmp
xchg
in
fcmovnu
add
daa
or
sbb
cmpb
mov
fucomip
jne
mov
or
jecxz
cmp
or
jmp
jns
mov
inc
in
je
in
js
mov
bound
jmp
jb
scas
and
push
imul
jp
mov
out
dec
out
push
adc
dec
cmp
ret
jge
shrb
cmpsb
scas
fidivrs
dec
testb
push
add
aaa
dec
js
ret
repz
push
mov
jle
sbb
clc
push
jl
inc
pop
ficoms
sbb
fiadds
out
mov
aaa
lea
and
lds
jge
fstpt
mov
add
inc
daa
loope
mov
mull
adc
jmp
jae
mov
std
push
mov
xor
ret
xor
ljmp
ficomps
addr16
test
cs
pop
cltd
pop
ret
mov
and
inc
cmpsb
inc
aad
mov
lcall
adc
jmp
xor
cltd
inc
mov
fdivp
dec
js
fsubrl
fisubs
aas
rcrb
test
or
dec
mov
fidivrl
cmp
inc
faddp
mov
jo
cmp
outsl
and
bound
adc
mov
nop
mov
fdivp
jno
ja
fcmovnu
jecxz
ss
inc
mov
popf
fisubrs
xlat
push
repnz
mov
lds
and
lcall
pop
es
jmp
rcrl
xchg
cmpsl
mov
shll
dec
clc
sti
loop
faddp
js
stos
sub
mov
fimuls
inc
lea
mov
jbe
roll
aad
fisubrs
xchg
cwtl
adc
dec
ds
das
data16
xor
xchg
mov
test
xor
in
mov
dec
cli
cmp
in
pop
adc
addr16
mov
or
inc
cmpsl
outsl
fiadds
fsubr
mov
mov
or
cli
adc
pop
push
mov
pop
or
lds
cld
outsl
fidivs
cltd
sub
out
mov
pop
ficoms
fwait
mulb
ficomps
push
leave
lret
mov
push
dec
test
int3
fidivs
pop
pop
and
lock
cwtl
sbb
sti
incb
mov
ds
roll
mov
std
imul
pop
shl
and
xchg
out
jb
xchg
enter
mov
daa
in
popa
icebp
cmp
push
jmp
popf
inc
outsb
sbb
xchg
xchg
cmp
loopne
ds
es
push
subl
inc
mov
test
fimuls
pop
adc
jmp
xlat
sarl
inc
add
xchg
pop
and
mov
mov
sarb
jmp
or
addr16
jmp
xor
in
std
outsl
mov
ljmp
mov
stc
sti
add
ficoms
or
outsl
sbb
xchg
inc
jo
xor
push
daa
pop
sti
mov
hlt
repz
in
jmp
nop
lds
bswap
and
adc
outsl
repz
pusha
ficomps
mov
inc
fiadds
adc
inc
xchg
cmp
push
inc
sbb
cmp
jl
movsl
jge
cmp
adcb
sti
pop
fimuls
pop
add
movsl
outsb
jmp
ss
push
fst
mov
popf
inc
lahf
or
fimuls
insb
das
stos
push
imul
fistps
push
fidivrs
dec
stos
mov
xor
imul
push
mov
out
data16
fidivs
dec
inc
fimuls
mov
fidivs
xchg
and
push
stc
pop
adc
dec
lds
mov
jg
xor
jbe
bound
push
das
fisubrs
mov
sbb
adc
test
cmpsl
sub
outsb
cmp
mov
repnz
cwtl
mov
rcrb
outsb
sti
fcomp
lcall
add
pop
add
and
js
cmp
pop
sbb
lret
push
adc
insb
mov
jle
dec
adcl
xchg
fiadds
sbb
mov
mov
fimuls
sbb
adc
and
aas
out
fidivrs
mov
dec
popf
js
mov
loope
ret
jecxz
rcr
out
mov
fisubrs
xchg
subb
jnp
jb
clc
sbb
dec
cmpsb
stos
fs
fmuls
outsb
and
cmpsl
mov
shll
sti
xlat
jl
sahf
test
outsb
fwait
mov
fidivs
adc
lock
fimuls
and
fidivrs
jge
jne
mov
scas
cwtl
adc
or
mov
sub
subl
adc
mov
mov
inc
inc
fidivrs
fidivrl
pushf
xchg
or
lods
repnz
mov
ret
fisubs
imul
dec
mov
cmp
pusha
fisubrs
jmp
cmpsb
fsubp
cli
movsl
xor
fcmovnu
jle
rolb
ss
mov
xor
mov
mov
cmp
hlt
lcall
mulb
ljmp
cmp
aad
aam
sbb
xchg
ret
ror
cmp
sbb
mov
or
push
movd
in
ret
pop
notl
cmp
negb
cmpb
mov
adc
arpl
push
mov
add
out
ret
adc
push
push
leave
add
fidivs
fs
add
repnz
lret
pop
popa
xchg
clc
add
rorb
data16
mov
mov
xchg
les
mov
xchg
push
cmp
push
pop
jnp
mov
and
stc
sti
jp
loop
arpl
inc
adc
mov
test
mov
cli
add
mov
faddp
cmpl
lods
fsubrp
leave
addr16
dec
jo
in
clc
mov
andl
fidivrs
mov
test
dec
pop
inc
sub
mov
stos
in
mov
cld
addl
fimuls
hlt
pop
das
fisubs
shlb
ja
ficoms
cmc
xor
and
fsubrp
xor
leave
jnp
lret
or
push
ljmp
fistpl
rolb
repz
fisubs
adc
movsb
fstpl
ret
push
cmp
sbb
cld
inc
mov
pusha
pop
sub
xchg
mov
dec
out
sbb
jno
sbb
shlb
sti
inc
sbb
jne
xchg
mov
fcmove
es
ljmp
popl
insl
cli
hlt
sbb
mov
aas
jp
mov
insb
fnstsw
cmpb
push
or
loope
pop
outsb
rclb
dec
ds
test
mov
mov
fisubrs
fimuls
jecxz
js
mov
push
clc
mov
mov
cltd
in
out
std
pop
push
in
sub
sbb
mov
jo
ljmp
mov
das
jmp
in
movsb
dec
pop
fmul
cli
push
xor
mov
out
jno
mov
fs
pop
pop
inc
sbb
rcrb
sarl
fsin
cli
into
inc
jl
jb
addr16
inc
mov
push
fiadds
mov
fdivrp
xor
in
sub
pop
jae
std
addl
cld
sarb
adc
imul
fs
fisttpl
adc
das
cltd
jnp
xchg
pop
fidivs
pushf
dec
movsb
in
jge
mov
roll
sbb
call
push
adc
lret
xor
jl
fidivs
jno
dec
cli
fidivl
fsubl
fs
lds
pop
in
or
sti
xchg
pop
jbe
sub
imul
pop
ficoms
push
xchg
jle
push
loopne
sub
test
mov
fidivs
mov
pop
ds
shll
xchg
inc
sti
lock
sub
shlb
cmp
fiadds
dec
mov
pop
jns
mov
mov
das
pop
in
mov
lock
cmp
mov
cmp
test
push
inc
cmp
iret
mov
in
mov
pop
mov
sub
repnz
fnstenv
aam
ficomps
stos
nop
imul
pop
sbb
fisubrs
fstp
out
mov
gs
in
std
pop
aad
jnp
cmp
dec
fwait
mov
cmpsb
xlat
fidivs
test
mov
clc
ret
xchg
aas
aaa
fisubrs
jp
dec
fiadds
lret
push
inc
js
lahf
mov
call
div
aaa
add
jle
pusha
push
pop
and
push
add
jge
jbe
push
bound
mov
pop
fsubp
dec
mov
in
fisubrs
sbb
les
mov
popa
sbb
xchg
cwtl
ficoms
pushf
cmp
xchg
repnz
mov
ret
je
mov
test
rcrb
div
fiadds
cwtl
mov
mov
jecxz
loop
xlat
fcmove
xchg
or
fldl
xor
popa
inc
fmulp
jle
lret
add
test
fmul
push
mov
xchg
pop
sbb
push
fisubs
mov
shrb
jmp
pop
test
in
movsl
dec
shl
in
push
push
push
scas
lods
jge
pop
jl
adc
jae
mov
ss
ficoms
test
idivb
mov
aam
sub
arpl
sahf
cmc
jmp
adc
inc
fwait
out
icebp
scas
sbb
mov
std
rolb
fidivs
adc
hlt
pop
sahf
sti
xor
push
fisubs
out
ror
pop
nop
pop
fimuls
test
cmp
outsb
mov
test
inc
jmp
aad
das
fiadds
sbb
adc
xor
mov
pop
scas
mov
mov
pop
cli
fidivrs
add
lret
adc
sahf
pop
dec
jne
dec
jecxz
or
out
leave
ficoms
loop
sbb
or
dec
and
stc
inc
adc
push
jno
push
enter
stos
push
cmp
lods
lds
cld
mov
into
mov
fimuls
sbb
aad
bound
aas
fsubrp
push
pop
cmc
push
movsb
inc
popa
fidivrs
fwait
lret
std
lcall
or
mov
push
fimuls
outsl
sbb
mov
inc
pop
dec
pop
rolb
pop
ds
mov
sbb
pop
int3
jecxz
mov
inc
fimuls
out
pop
cmp
xchg
mov
out
push
dec
and
lahf
inc
stos
jge
scas
cmp
ficomps
je
pavgb
ficomps
loope
fidivs
adc
or
mov
sarb
pusha
icebp
pop
pop
dec
fnsave
sbb
idivl
lea
adc
aas
dec
pop
mov
mov
mov
ja
loop
inc
lcall
sub
mov
aaa
lock
fisubrs
xlat
mov
pop
lcall
mov
sub
fwait
xchg
repnz
gs
fisubs
mov
mov
dec
and
and
fsubp
fcompl
cltd
xor
dec
fimuls
dec
insb
ficomps
lods
xchg
daa
fidivs
inc
and
cmc
push
push
pop
sbb
cmp
ja
and
jb
mov
les
jp
movsl
xchg
lahf
cmp
sahf
out
cli
inc
fidivs
shll
adc
stos
push
gs
cmp
mov
dec
popf
xchg
mov
pop
fildl
movsl
push
adc
in
fimull
out
mov
bound
add
rclb
mov
or
jne
sub
dec
bound
xchg
dec
xchg
jbe
mov
inc
inc
add
jnp
inc
gs
stos
or
fcomps
sbb
test
xchg
arpl
leave
and
loope
jnp
sbb
aaa
jg
push
rclb
mov
push
ljmp
fimuls
push
pop
iret
push
cmp
std
push
arpl
and
sbb
and
mov
out
mov
mov
loope
rcrl
inc
ficoms
in
adc
lret
inc
faddp
sti
dec
mov
mov
clc
xchg
std
pop
mov
inc
lods
jmp
fimuls
xor
les
dec
fmulp
xor
lods
out
test
xchg
stc
out
mov
into
xchg
jbe
or
sbb
fimuls
cmpsb
in
pushf
test
fisubs
cmp
xor
fidivrs
cmp
push
repnz
in
lahf
faddp
mov
orb
lock
jl
adc
test
sbb
push
sbb
addr16
jg
pop
insb
loope
imul
int
repnz
or
adc
fsubrl
nop
push
fiadds
mov
mov
pushf
sarb
repnz
aaa
dec
ret
ficomps
test
jbe
in
into
adc
inc
adcl
mov
pushf
scas
cld
push
xlat
xor
cmp
test
or
add
pusha
pop
aam
inc
ret
push
fidivs
mov
out
mov
loope
ret
int3
stos
add
jp
popa
std
pusha
sbb
ficoms
imul
decl
fisubs
in
pop
fiadds
roll
cmp
dec
cmp
ficomps
mov
out
test
aad
pop
jle
mov
fidivs
mov
adc
push
jb
ficomps
leave
scas
das
xor
xchg
lea
lcall
inc
sub
mov
fimuls
and
adc
pop
mov
pop
push
flds
sub
leave
rclb
sub
dec
mov
loope
mov
into
aas
iret
lcall
xchg
sub
xchg
ficomps
sti
stc
sbb
sbb
into
repz
rorl
pop
push
mov
test
std
cmp
push
int3
pop
les
cmp
jge
xchg
in
xchg
lea
dec
sub
out
ror
faddp
andl
xchg
ficoms
adc
fnstenv
push
sub
aaa
fiadds
sahf
dec
es
jp
xlat
inc
je
and
std
imul
jl
fsubr
scas
adcb
pop
into
movsb
js
sub
in
jb
ficomps
fidivs
sub
push
xor
rcr
fistpll
stc
and
aas
shrb
ds
or
dec
and
ficompl
mov
cwtl
inc
xchg
int3
out
mov
je
repnz
dec
lret
fdivrp
or
push
leave
insb
cltd
stos
fidivs
scas
inc
fidivrs
add
jno
outsl
clc
xor
push
std
addr16
pop
enter
jg
sbb
lods
dec
cmpsb
icebp
fidivrs
mov
mov
mov
nop
add
sbb
push
dec
jecxz
push
mov
fisubs
stos
ficoms
shlb
mov
dec
cmp
push
movswl
jle
push
lret
mov
ficomps
fpatan
aaa
mov
xchg
dec
sub
mov
loop
dec
mov
jle
mov
pop
sbb
fsubrp
and
fdivr
jo
xor
dec
jle
or
divl
mov
pushf
or
shlb
mov
jno
int3
cli
lock
push
jnp
jb,pt
pop
cld
inc
xchg
sti
movsl
sarb
divl
faddp
adc
addr16
mov
pop
jae
ret
test
repnz
popf
sub
idivl
lcall
std
adc
cltd
test
mov
out
mov
rcrl
call
sbbb
cmp
cmp
mov
lahf
dec
dec
int3
out
mov
fidivrs
xchg
adc
add
fidivrs
cmc
lods
leave
and
scas
inc
fbstp
add
push
cmp
or
sbb
ljmp
pop
sub
mov
je
xchg
fidivs
pop
arpl
cmpsl
mov
xchg
pusha
inc
repz
and
jle
into
mov
add
fiadds
inc
mov
ficomps
repnz
mov
mov
out
paddsb
es
les
jbe
cmp
repz
adc
inc
std
jns
pop
and
mov
ficoms
lcall
fiadds
fxtract
scas
jge
call
ficomps
jp
adc
dec
lods
add
jae
ficomps
out
repnz
ds
and
arpl
jecxz
xlat
or
mov
xchg
std
cmpsb
adc
out
test
pop
sbb
mov
fadds
aaa
inc
inc
int3
ficomps
mov
cmpsl
push
aaa
push
or
pop
cmp
leave
add
fsubrs
lods
jbe
shrl
pminub
mov
mov
jg
mov
mov
jge
inc
cld
pop
test
jle
dec
add
lcall
data16
repnz
ret
mov
iret
mov
sub
jae
aam
cmp
jecxz
jmp
xlat
std
enter
and
push
shrb
jle
roll
leave
mov
xchg
lea
pop
hlt
testb
int3
dec
pop
jo
and
dec
faddp
popa
xorl
sbb
lret
repz
fimuls
push
test
fisubrs
ds
bound
xchg
adc
xchg
add
mov
jne
nop
fisubrs
xor
enter
ss
jmp
push
sbb
rcr
subb
or
cld
pusha
lret
out
fs
pop
mov
dec
add
jns
sbb
cmp
cmpsl
and
sub
xchg
jge
xor
jb
jae
test
gs
aas
push
lds
xchg
mov
pop
aad
out
jmp
ljmp
sbb
or
and
inc
in
mov
push
sti
out
xchg
cli
sub
push
lret
mov
cmp
je
addr16
mov
dec
mov
sub
sbbl
push
test
or
nop
and
xor
insl
push
dec
push
and
stos
push
aaa
mov
mov
jl
inc
sub
cmpsb
jmp
add
test
ficoms
es
movsb
lea
aam
fwait
decl
in
adcb
fmulp
dec
fsub
xor
push
inc
mov
push
stos
sub
mov
mov
out
mov
mov
xor
imul
mov
les
adc
jle
mov
pop
ss
mov
fisubl
daa
jns
nop
or
andb
outsb
cli
lods
movsl
xchg
ficoms
fwait
std
enter
xor
add
insl
push
stc
sbb
int3
cmp
test
sarl
fisubs
icebp
fwait
orl
shrl
xabort
xchg
out
outsb
aam
sbb
enter
dec
jl
dec
push
loop
add
fisubs
push
aaa
ret
stc
fidivrs
adc
aad
mov
xor
pop
faddp
and
test
cli
sbb
pop
fidivs
jbe
push
mov
lcall
or
add
pop
faddl
adc
clc
lret
aaa
jno
jle
test
dec
ror
jecxz
mov
xchg
fisubs
or
xchg
pushw
fiadds
insb
cmp
mov
test
daa
movsl
loope
aad
orb
cwtl
out
xor
lods
or
mov
sbb
pop
add
jge
in
into
xor
mov
not
cmpsl
leave
sub
dec
adc
inc
fidivs
fs
nop
pushf
mov
mov
stos
pop
lcall
push
cmp
xor
in
mov
fidivs
or
dec
mov
sbb
mov
rcpps
xchg
xchg
mov
jle
push
jbe
cs
sub
inc
test
xchg
scas
xor
aam
lock
mov
push
pop
mov
mov
cmp
jle
mov
xchg
inc
ja,pt
iret
push
or
xor
inc
mov
out
shll
pop
push
into
push
mov
mov
lods
push
les
insl
cmp
fidivs
adc
sbb
paddw
inc
inc
sbb
xor
mov
int3
fwait
std
lcall
or
push
mov
jp
cmp
mov
xor
lock
out
out
stc
mov
pop
push
or
xorb
arpl
cmpsb
pop
mov
mov
sub
aaa
out
fsubrs
push
int3
mov
stos
pop
sti
push
xor
loop
adc
sbb
subl
fcomps
call
syscall
dec
rorl
dec
int
push
push
jle
mov
and
xchg
stos
loope
pusha
dec
int
xor
sub
inc
mov
push
jle
ficomps
sahf
mov
jmp
ficomps
mov
fisubs
lcall
sbb
push
into
dec
inc
cmp
stos
mov
sbb
fsubp
jnp
xlat
popa
aaa
lock
aas
push
ja
push
xchg
insb
fisubs
mov
push
fisubs
sub
fdivp
or
dec
fisubs
or
sbb
mov
adc
sub
in
xor
sub
push
lea
incl
mov
or
mov
testb
inc
ljmp
jmp
mov
xor
arpl
inc
push
scas
outsb
sarl
lea
imul
fstp
mov
add
cmc
fs
ja
xlat
out
mov
adc
cmp
nop
loopne
sarb
sub
sub
aaa
gs
mov
aas
add
shufps
in
pushf
jmp
mov
xor
sar
js
fidivrs
inc
mov
ficomps
adc
mov
ja
cmp
fiadds
cmp
in
rorl
adc
outsl
jne
mov
or
sub
out
mov
and
or
xchg
push
fisubs
dec
sahf
fiadds
inc
dec
aam
add
cmp
loop
inc
mov
fmulp
imul
mov
sbb
stos
leave
in
cmp
adc
xor
push
imul
pop
ficoms
cmc
mov
mov
xor
inc
fisubs
ds
add
into
mov
xchg
mov
mov
xlat
xchg
adc
out
ficomps
fst
movsl
jg
daa
fiadds
mov
outsb
inc
xchg
jl
scas
lret
xchg
ficomps
repz
movsl
sbb
bound
push
add
adc
insl
arpl
inc
pop
scas
pop
into
test
jl
loopne
ficomps
icebp
mov
into
fiadds
add
std
cmp
loop
push
int3
xor
into
mov
mov
push
aas
mov
fmulp
shlb
jp
ljmp
out
ficoms
adc
jge
dec
ret
sbb
mov
into
repz
push
inc
negb
inc
jle
jo
test
push
ret
mov
mov
aaa
std
movl
fisubs
sbb
xor
or
or
xchg
cmpsb
mov
pop
fdivp
mov
lods
repz
jbe
sbb
adc
mov
shlb
cmp
pop
pusha
shll
jne
test
movsl
adc
incl
cld
ffree
fimuls
pop
bound
jge
fimuls
pop
inc
fisubs
or
popf
fisubrs
imull
or
jle
movsb
call
fsubrp
mov
fidivs
mov
stc
jle
lcall
mov
adc
cmp
adc
cwtl
jne
pop
sbb
push
jbe
leave
mov
mov
mov
fisubs
in
shlb
ret
in
or
outsl
jbe
vgf2p8affineqb
test
xchg
into
mov
ljmp
pop
or
dec
into
insl
pop
jmp
pop
movsb
into
test
popf
mov
xchg
mov
ficomps
iret
out
dec
int
cmpsl
ficomps
sbb
mov
loope
and
fimuls
cmc
jae
mov
gs
in
cs
fisubs
movsl
cmp
dec
lods
adc
push
fdivrs
in
es
fisubs
pop
mov
in
std
fimuls
fnstenv
pop
fimuls
sub
cld
sarl
aam
dec
scas
ja
lods
pop
inc
mov
adc
int
sub
std
movsl
into
jl
aad
and
jecxz
jnp
mov
push
mov
mov
fidivs
ret
or
int
sbb
aam
fidivrl
test
into
pop
stos
lahf
fidivrs
mov
xor
xchg
lock
adcb
cli
mov
add
std
jl
or
xlat
mov
jg
int3
iret
loope
mov
out
dec
in
or
mov
test
jle
call
xchg
mov
in
pushf
addl
sbb
mov
loopne
jge
mov
fidivrs
les
fiadds
pop
jecxz
rolb
ficomps
scas
jbe
jp
xchg
stc
je
pusha
stos
cmpsb
incb
lahf
mov
xlat
xchg
das
enter
pop
lcall
and
jmp
sbb
jle
popa
lds
adc
rep
xor
fxch
jne
inc
stos
ja
sub
into
mov
orl
mov
jle
nop
jns
fidivrs
cmp
das
xchg
pop
mov
stc
adc
xor
fidivs
cmp
mov
fsub
push
xchg
mov
pop
fidivrs
pop
call
icebp
mov
adc
ret
scas
cmpsl
shl
int3
mov
lret
fimuls
shlb
sub
int3
lahf
sub
aas
add
out
rol
dec
mov
jmp
ja
jnp
xor
xor
fisubs
cmc
inc
xor
and
scas
andl
add
pop
adc
addr16
or
dec
add
icebp
mov
arpl
pushf
mulb
dec
mov
inc
fidivrs
adc
sub
push
dec
inc
mov
cli
xorb
sahf
and
out
sub
xchg
into
mov
aad
imul
xlat
nop
movsb
cli
mov
dec
in
ret
fmulp
mov
imul
push
ret
cmpsl
ficomps
inc
aad
lret
or
bswap
incb
aas
ret
into
mov
test
fidivrs
int3
imul
mov
push
mov
adcb
mov
sarl
mov
or
cli
jle
sti
mov
push
mov
xchg
ljmp
fmulp
dec
arpl
xor
lods
ficoms
xchg
sbb
cli
inc
dec
loop
test
notl
and
fisttpl
std
fstpl
sbb
pop
xor
popl
dec
xlat
cmp
xor
xchg
sbb
loop
jl
dec
push
xchg
and
and
movsl
outsl
jb
aam
mov
imul
mov
pop
adc
jg
dec
jle
jbe
and
or
lods
sbb
int3
pop
push
jo
jb
push
adc
mov
cmp
xchg
fmul
out
fidivs
test
or
jle
pop
andb
fiadds
ror
in
sarl
sub
push
cld
fisubrs
mov
int3
movsl
and
mov
out
mov
rcr
xchg
subl
jae
into
push
inc
add
cmp
mov
push
loope
and
das
outsb
hlt
loop
adc
add
sbb
fdivs
lcall
adc
jle
xchg
int
xor
adc
mov
stos
or
push
in
lret
fidivs
mov
sbb
cld
ficoms
cltd
stc
int
ret
out
adc
out
ficomps
inc
push
jne
js
test
stc
fidivs
inc
fidivl
add
push
mov
fwait
ja
inc
pop
pop
push
push
fisubs
push
fbstp
sti
mov
mov
fidivs
ret
add
cli
insl
pop
js
mov
pop
xchg
mov
cmpsl
inc
mov
push
fiadds
cmpl
and
cmp
lret
cmp
push
fisubrs
idivb
xchg
rolb
xor
mov
aaa
xchg
fdivr
mov
jbe
into
adc
aam
pop
sbbl
out
movsl
jle
fsubrp
push
imul
mov
fidivrs
insb
pop
dec
test
mov
cmpsb
jns
flds
fistpll
adc
int3
ficomps
jg
jp
imul
pop
ficoms
mov
inc
inc
mov
mov
lret
mov
mov
and
lahf
jg
rcrb
fidivrs
dec
xor
push
stc
fidivrs
ja
fwait
out
loope
jp
outsl
fidivs
cmp
stos
push
aam
std
or
enter
loope
mov
push
imul
cmp
fidivs
es
push
nop
roll
fisubs
imulb
cltd
mov
xor
mov
cmp
and
sub
inc
pop
movsl
pop
lds
push
xchg
sbb
lock
cmp
js
pop
popa
out
push
dec
cmc
adc
fidivrs
in
or
rcrl
enter
sub
ficoms
xor
mov
mov
outsl
push
neg
inc
pop
icebp
and
jae
jle
mov
lret
jb
hlt
push
inc
lcall
out
addr16
out
es
lret
enter
adc
fdivp
add
inc
fmulp
pop
add
jb
add
fdivs
fsubp
ror
xchg
mov
ret
or
pop
cmp
jle
pop
fs
mov
xchg
testb
aad
push
shlb
push
mov
stos
data16
js
inc
fsubs
jb
test
iret
sbb
jg
or
stc
push
mov
sbb
mov
dec
mov
push
mov
pop
mov
movsl
in
mov
and
nop
int3
ja
sti
push
dec
loope
lock
fidivrs
cmpsb
je
out
pop
fiadds
aam
icebp
in
sub
cmc
faddp
add
movsl
xchg
imul
cmpsb
movsb
in
inc
push
mov
ret
in
repnz
fsubp
leave
pop
dec
xor
push
test
push
push
mov
das
sarb
cwtl
jo
cmp
insl
adc
pmaxub
ret
fmuls
sbb
push
imul
pop
pop
stc
mov
into
out
enter
out
fisubrs
shl
dec
add
neg
or
js
adc
fidivrs
inc
aam
add
xchg
cwtl
mov
loopne
mov
push
xor
dec
fisubrs
inc
push
in
fisubrs
xor
ficomps
sti
lcall
cmp
dec
cld
jmp
mov
dec
ret
mov
mov
and
loop
in
stos
add
stc
cld
pushf
aas
lds
loopne
outsl
filds
push
ficoms
dec
mov
ficomps
lods
add
fimuls
stc
aaa
sub
inc
push
sbb
inc
sub
jo
rorl
jl
push
cmp
jno
jge
lods
fsubrl
fimuls
jns
or
fdivr
fisubs
clc
lods
test
scas
fimuls
jo,pt
xorl
mov
rorl
fisubs
mov
adc
pushf
imul
jb
imul
cmp
stc
dec
adc
fisubrs
movb
push
imul
dec
fdivrl
inc
fisubs
xor
jno
mov
sbb
sbb
adc
mov
ds
dec
pushf
dec
jl
adc
fdivp
adc
cli
xor
add
fisubs
sbb
jne
sub
dec
xchg
fidivs
xchg
xchg
add
ds
lds
sbb
pop
or
push
jg
push
jbe
movsl
xor
sbb
sbb
xchg
ret
ljmp
fimuls
mov
repnz
and
add
sbb
daa
pusha
mov
nop
out
add
and
std
jp
add
dec
jno
js
enter
xor
mov
jmp
sti
mov
popa
fld
lods
add
cmp
rclb
jle
ret
dec
inc
stc
fisubrs
mov
or
ljmp
jle
jne
or
push
fidivs
sti
pop
mov
test
jmp
mov
cmp
arpl
aad
fsubp
scas
cs
insl
push
out
jnp
enter
fisubs
inc
cmpsb
xchg
test
push
sbb
rcrb
sub
push
cmp
sbb
mov
jl
add
push
sbb
ja
lahf
outsb
arpl
subb
dec
lock
cmpsl
int3
fdivrs
stc
fisubs
sub
adc
aaa
push
pop
fidivrs
jp
push
and
and
movq
sbb
fsubp
or
push
int
jmp
mov
adc
ret
jle
jle
and
mov
lret
pushf
cld
rolb
repnz
pop
fmulp
ret
inc
ljmp
pop
mov
fidivrs
stos
aaa
out
sti
mov
ret
xlat
ficomps
mov
inc
jle
sub
sbb
imul
int3
inc
cld
aas
xchg
fisubs
add
mov
hlt
addr16
int3
shll
cld
or
sbb
xor
fimuls
daa
jb
test
shr
xchg
ficoms
clc
in
dec
movsl
shll
or
insb
fidivs
sbb
or
adc
mov
xchg
nop
movsb
ficoms
popa
rclb
fidivrs
mov
adc
jmp
jge
adc
nop
cwtl
pushf
rol
jb
lret
jno
mov
sahf
pop
fildl
fisubs
stos
add
mov
mov
cmpsl
jbe
mov
mov
pushf
clc
cld
add
scas
sarb
sub
repnz
gs
sbb
mov
mov
fisubs
xor
or
aad
mov
mov
sbb
inc
fsubs
data16
inc
ficomps
or
test
jbe
cli
rcl
into
lret
das
cmp
mov
loopne
and
add
pushf
mov
test
cmpl
jns
xor
fwait
xchg
sub
push
mov
xchg
les
xchg
jo
outsl
call
sub
mov
add
xchg
or
push
pop
call
pop
repz
test
fidivs
leave
iret
pop
aaa
sub
into
adc
jp
aaa
insb
adc
sahf
push
and
cltd
xlat
xor
xor
ds
push
popf
sbb
mov
je
and
mov
fiadds
out
xlat
std
out
jg
shlb
in
jns
or
stos
or
fiadds
sbb
xchg
xchg
ljmp
xchg
mov
xor
insl
fnstenv
les
int
xor
xchg
ret
sbb
inc
pop
sti
add
rcrb
add
in
std
sub
jp
rcr
xchg
mov
in
into
pmaxub
pop
out
outsl
cmpsb
push
or
out
stc
mov
fidivs
dec
repz
mov
inc
popa
sub
ret
in
rcr
jo
mov
cmp
fmulp
mov
aad
xchg
jb
xlat
in
mov
fcoml
ficoms
pop
dec
or
mov
fs
aad
cmp
sbbl
cmc
adc
fisubs
cmp
fidivrs
sub
xchg
dec
movsl
adc
fidivrs
dec
out
jp
pop
pop
cmpl
into
or
jo
fisubrs
inc
dec
lock
pop
enter
movsb
fisubrs
rcrb
je
or
and
fiadds
cld
aam
cmpsl
lret
neg
bound
aad
xorb
int
dec
and
loop
dec
loopne
push
xchg
xor
popa
stc
or
lcall
sub
das
cmc
mov
push
fisubs
dec
addr16
fisubs
sbb
fidivrl
test
lret
inc
fiadds
and
sbb
xchg
xchg
cwtl
mov
pop
sti
fsts
cltd
xor
mov
faddl
jns
js
pop
ficoms
mov
mov
out
lock
mov
in
xchg
push
jge
cmp
inc
sub
inc
imul
jns
inc
mov
test
mov
pushf
fidivrs
mov
jo
sbb
and
mov
je
ficomps
pop
inc
lods
mov
lock
mov
ja
xchg
hlt
fiadds
push
or
mov
cmpsb
dec
in
out
mov
adc
fucomip
mov
push
aaa
jnp
movsl
sbb
into
out
and
pusha
push
push
stos
test
sbbb
xor
fcom
pop
cmpsl
and
push
icebp
test
ficompl
jge
shr
xchg
push
fdivl
mov
jg
icebp
psraw
sub
in
sub
or
pop
adc
xor
pop
ficomps
cmp
push
adcb
sbb
faddp
in
dec
std
xor
fdivrp
nop
mov
fldt
out
stos
push
hlt
inc
ficomps
sti
popa
dec
xor
fimuls
pop
or
fidivrs
scas
inc
fisubrs
mov
mov
ficomps
data16
sub
ss
and
stos
xchg
testb
cmp
adc
rol
sbb
mov
jb
inc
push
xchg
ficoms
mov
jge
ficoms
sahf
xchg
pop
outsl
fisubrs
ss
inc
adc
shrb
add
repz
mov
out
scas
loop
lea
xor
sub
push
adc
pop
dec
ds
aad
fsubs
push
aam
sbb
cmpsl
int
mov
mov
clc
add
jmp
pop
or
arpl
or
cmpl
into
fiaddl
sub
pop
adc
ficomps
mulb
data16
std
inc
push
mov
mov
sbb
iret
jo
add
dec
lret
sub
cmp
push
pop
stos
and
dec
ficomps
inc
mov
ficoms
jmp
sbb
lret
mov
sub
adc
sbb
push
dec
pop
mov
fcomp
sahf
sbb
mov
stos
mov
fiadds
pop
arpl
mov
leave
dec
push
movsb
aaa
stc
rcr
fwait
das
pop
in
xor
stos
jmp
jae
xor
out
xchg
push
jmp
aas
cmpb
jge
ret
movsl
sbb
loop
pop
mov
lahf
mov
pop
pop
les
sub
sub
out
sbb
or
incl
mov
pop
cmp
inc
adc
sub
sbb
mov
push
loopne
int
enter
mov
adc
insl
jmp
xor
cmp
outsl
inc
addr16
pop
icebp
cmp
into
fnstsw
pop
cmp
ret
jecxz
outsb
jnp
mov
cmp
mov
in
es
mov
xor
push
and
mov
xchg
outsl
rorb
push
lcall
jp
shll
fdivp
out
outsl
movl
xor
sbb
fnsave
jb
ficompl
mov
fiadds
dec
in
fsubp
cmp
xor
mov
popf
add
mov
pusha
enter
out
fiadds
and
mov
push
fstpt
cmp
mov
and
jle
outsl
push
out
mov
ficomps
add
mov
jne
jmp
cltd
mov
popf
repnz
neg
in
lods
dec
fisttpl
xchg
das
sbb
addps
cmp
mov
sub
lcall
push
jge
pop
test
cwtl
cmp
fwait
mov
fisubrs
dec
fcoml
mov
dec
fimuls
xchg
leave
test
add
and
xlat
lret
dec
jle
cli
xchg
out
push
rorl
fisubrs
lret
jae
and
aas
pop
mov
sub
pop
js
rcr
dec
das
pop
xor
fisubs
sub
in
sti
icebp
in
iret
jb
xchg
fidivs
xor
mov
lcall
pop
pop
outsb
jmp
mov
mov
push
lods
in
mov
cmc
push
sbb
daa
mov
ret
addl
mov
xor
std
sub
fnstcw
fidivrs
daa
fidivrs
xor
fisubrs
xchg
jno
out
mov
inc
stc
cs
cli
cmpb
into
mov
fisubs
addr16
adc
sub
mov
fidivs
xchg
pop
std
jl
mov
pop
lahf
mov
stos
cmp
mov
and
mov
shlb
std
jge
or
pop
mov
jg
push
lret
int3
stos
mov
mov
fisubs
jmp
fidivrs
and
dec
cld
sbb
fisubrl
sub
repnz
xchg
gs
divl
adcl
fmul
arpl
fstps
pop
sbb
inc
jecxz
and
jno
sti
cld
cltd
mov
rclb
or
pushf
std
sbb
cmp
jl
or
add
iret
inc
cmp
pop
ja
aam
inc
xchg
aas
push
hlt
scas
push
sahf
fmulp
or
and
pop
push
mov
popa
dec
lods
rcr
aad
cmpsb
cld
mov
jp
pop
in
cmp
jae
sub
stos
fidivs
jnp
lret
fidivs
out
xor
fdivp
stos
subl
sbb
inc
mov
arpl
xchg
push
sub
jle
fimuls
adc
es
pop
jne
rcr
jo
dec
hlt
fs
fisubs
sbb
clc
and
rorl
or
xchg
cmp
aas
mov
ret
mov
mov
adc
dec
repnz
daa
xor
bound
xchg
inc
in
lods
and
mov
test
push
mov
lret
fstpt
push
adc
inc
fmulp
xchg
or
dec
mov
dec
pop
mov
fcmovnb
addl
push
data16
mov
rcr
fimull
push
into
fstpl
lock
mov
cmp
sub
xchg
inc
fiadds
shlb
fimull
push
je
xchg
pop
sub
cwtl
adc
jge
xchg
in
push
push
mov
cmp
out
cwtl
push
sti
mov
xor
fisubs
scas
out
mov
test
sub
add
mov
push
fidivs
xchg
cmp
loopne
or
arpl
daa
cmp
push
insb
je
movb
call
stc
xchg
fisubs
sbb
dec
xchg
enter
es
jle
adc
ds
dec
mov
aam
sti
test
clc
fimuls
nop
xor
sbb
pop
sub
xchg
cld
inc
add
xlat
push
dec
ficoms
jge
test
mov
inc
jbe
mov
inc
clc
fimuls
and
cmpsl
ficoms
shlb
fistps
xor
mov
int3
fwait
repz
mov
inc
sub
xchg
jo
test
push
jns
adc
mov
clc
xor
in
fwait
xchg
fcompl
sbb
xor
std
cmp
jno
fimuls
push
lods
popf
fmulp
pop
orl
cmc
push
sahf
xchg
mov
and
ret
ljmp
mov
xchg
pop
inc
ss
lods
movsl
shrb
push
push
js
cmp
jo
fmulp
add
hlt
fisubrs
mov
rcrl
nop
ficomps
fcomi
fmuls
das
cli
xchg
mov
sub
fimull
dec
jle
mov
xacquire
call
lock
xchg
cmp
cmp
jne
sahf
stos
cli
dec
ja
and
sub
sar
dec
ficomps
pop
pop
sub
jae
jge
or
into
fimuls
shlb
jne
les
pop
movsb
pusha
ficompl
into
insl
aas
pop
adc
ficomps
pop
lds
ror
xchg
fistpl
je
or
fdivp
iret
or
xor
mov
outsb
js
mov
fisubrs
mov
sarb
cs
push
mov
fidivrs
or
fnstenv
sub
hlt
inc
cwtl
std
mov
sub
into
pop
xchg
and
push
inc
mov
inc
dec
dec
mov
fidivs
xchg
mov
dec
out
fisubs
addr16
icebp
pop
or
repz
dec
xor
jl
test
mov
nop
test
ret
xor
fimuls
mov
js
out
repz
leave
jmp
fiadds
pop
mov
fimuls
and
fdivrp
dec
jge
xchg
add
fidivs
pop
jg
ficomps
xor
int
cmp
dec
sub
sbb
adc
lcall
test
into
ds
int
repnz
adc
sti
ret
sbb
faddl
pop
adc
push
inc
inc
xchg
into
jno
mov
ficomps
aaa
jecxz
arpl
daa
jge
cmp
shlb
pusha
dec
dec
or
fsubrs
gs
add
lds
loope
jp
lock
sbb
test
pusha
into
lret
mov
stos
into
hlt
jnp
loope
fimuls
mov
push
fimuls
push
bound
mov
mov
into
push
test
test
std
pop
not
lock
fdivs
clc
fisubs
pop
inc
fimuls
scas
cmp
jne
icebp
out
rcr
or
dec
popa
iret
pop
sbb
push
add
loop
add
jle
pop
jg
xlat
cmpsl
loopne
pop
mov
lret
clc
dec
fcmovu
or
pop
inc
leave
sub
outsl
or
cmpsl
out
mov
les
mov
xchg
cltd
sbb
fnstenv
hlt
or
pop
xchg
daa
incb
dec
das
mov
std
inc
cmc
aaa
cli
pop
aam
lret
idivb
xor
fiadds
addr16
notl
dec
ficomps
jae
mov
mov
shll
sbb
mov
and
mov
push
xlat
push
jl
fisubs
sahf
pop
fimuls
aam
jns
push
sub
movsl
jno
popw
ficomps
imul
lods
sbb
bound
jae
aaa
stos
leave
into
xchg
sti
xor
jle
aam
push
cs
pop
sbb
adc
out
ss
pop
std
sub
fcompp
scas
nop
ds
sbb
sbb
dec
xchg
mov
pop
sbb
in
or
ret
sub
fidivs
stc
adc
sti
std
daa
fiadds
xlat
or
sbb
insb
jle
jnp
inc
dec
dec
scas
dec
push
adcb
outsb
fidivrs
fdivl
add
mov
jo
scas
insl
fidivs
out
add
push
fimuls
jl
pop
mov
push
mov
add
jle
outsb
mov
xchg
sti
dec
clc
jb
cltd
cmpsb
into
test
fsubp
jle
add
insb
mov
fisubs
inc
xor
mov
sub
pop
push
pop
mov
mov
repz
push
sub
ret
rorb
pop
leave
adcl
push
inc
xchg
cs
fsubp
in
iret
xchg
fsub
mov
sbb
or
cld
jno
cltd
pop
mov
fldcw
clc
sub
arpl
cwtl
rcl
jbe
cmp
push
sbb
jb
ljmp
movsl
fldenv
into
andb
out
pushf
jae
cld
jne
cmp
negb
loope
xor
or
mov
ss
xor
fstpt
pop
das
push
faddp
out
adc
inc
shll
std
dec
idiv
outsl
into
in
movsl
lcall
test
jnp
sbb
mov
in
dec
adc
ret
push
cwtl
push
mov
stc
push
fidivs
mov
push
mov
arpl
push
sar
fisubrs
push
inc
mov
ljmp
push
fisubrs
push
and
xlat
ja
mov
insl
mov
mov
fisubrs
pop
iret
mov
mov
lcall
pop
stos
ljmp
mov
into
sbb
out
inc
pop
les
mov
adc
pop
lock
jns
cmp
mov
mov
test
mov
sar
imul
fyl2xp1
and
push
ficomps
out
push
jp
in
leave
fimuls
push
inc
pop
mov
fiadds
into
sub
push
xchg
cld
add
negl
mov
fidivrs
out
test
inc
pop
rol
fldl
sbb
fcoml
dec
jl
jbe
ficoms
cmp
fiadds
pusha
lret
fsubrs
lahf
sbb
add
sub
mov
mov
xchg
insb
shl
mov
jle
psubsw
pop
lret
lret
adc
ficomps
int3
jle
fdivl
jae
gs
insb
push
test
rcr
or
sarl
push
pop
cmp
mov
outsb
stos
stos
call
ret
push
mov
pop
cmp
arpl
addl
and
pop
ficoms
fcomi
neg
mov
or
fidivs
sbb
sti
movsl
popa
xchg
jo
fimuls
pop
cmpsl
mov
xchg
lods
es
in
push
lret
sarl
enter
push
or
ljmp
sub
or
mov
ret
add
loop
inc
inc
push
ficoms
ss
jbe
or
cmpsb
std
jb
sti
push
scas
dec
pop
lea
sbb
out
ficomps
test
rep
xor
stos
fidivrs
andb
and
mov
mov
push
push
xchg
clc
fimull
dec
scas
sub
sub
or
fld
or
aas
pop
mov
mov
xchg
xchg
rorb
sbb
lret
lds
inc
inc
stc
in
xlat
sahf
mov
call
fisubrs
es
fnstcw
xchg
fmulp
outsl
pop
popf
xor
fimuls
loopne
mov
sbb
ds
pop
ljmp
lods
and
push
cmp
popf
inc
fisubrs
mov
dec
sbb
adc
cmp
sahf
cmc
in
mov
aam
sub
ret
add
std
or
shrb
mov
lea
inc
addb
push
dec
cmp
push
ss
adc
negb
outsl
fdivr
mov
pushf
pop
mov
ret
daa
aad
fs
lcall
cld
xchg
imul
xchg
sub
jnp
pop
fsubrp
pop
fucomip
roll
stos
test
daa
jb
mov
addl
stos
pop
fisubrs
mov
fiadds
stos
xor
fidivrs
pusha
insl
inc
jl
iret
inc
fisubs
xchg
mov
icebp
pushf
adc
mov
add
push
shrl
call
jge
imul
loop
push
mov
rcrb
repz
int3
inc
vmread
notb
sub
fidivrs
mov
nop
fdivp
push
cmpl
rcrl
cli
jo
fidivrs
mov
in
imul
fmul
movsl
sti
xor
push
lods
std
or
inc
jno,pn
mov
mov
ret
sbbb
jmp
bound
jl
push
mov
scas
xchg
inc
arpl
movsl
ljmp
lods
out
xor
es
mov
xchg
jae
loope
enter
fidivrs
xlat
cmp
fdivp
inc
in
fldt
pop
jb
das
xor
jnp
push
cmp
into
dec
test
cmc
mov
shlb
sbb
xor
jle
mov
cmp
jg
sbb
jne
cmpsl
xor
leave
sbb
xchg
mov
ljmp
fcmovu
and
lods
mov
loop
cmp
ficoms
xchg
mov
fisubrs
fisubl
popf
outsl
sub
dec
push
inc
ja
fsubrp
ret
pop
or
in
xchg
fimuls
mov
pop
sbb
repz
test
in
add
fimuls
sbb
jae
lds
mov
jp
ret
push
pop
sarb
or
adc
mov
jns
out
daa
inc
psubd
sti
mov
sbb
fdivrp
fwait
push
loop
mov
xchg
fisubs
xchg
jp,pt
dec
into
xchg
mov
xor
add
dec
adc
les
lret
jp
ffree
jbe
stc
ficoms
cmpsb
sub
iret
test
insb
aam
ret
or
aaa
fsubp
and
sbb
or
mov
and
mov
xorb
cli
pop
lock
sahf
fadds
jnp
int3
sbb
add
pop
xor
movsb
mov
pushf
ja
mov
fidivrs
scas
and
sub
push
popa
adc
fisttpl
cmp
fidivs
sbb
leave
add
mov
sbb
xor
mov
push
aaa
fbstp
in
inc
repnz
lods
inc
stos
enter
cltd
stos
in
jl
dec
data16
mov
pop
ret
aam
or
pusha
xchg
fcmove
inc
push
loope
pop
mov
cmp
shl
sub
es
sbb
lahf
push
dec
mov
adc
fs
push
sub
mov
lret
sub
push
mov
add
pop
mov
cmpsl
cld
ficoms
cmovp
out
hlt
movsl
ss
pushf
mov
arpl
pop
mov
ja
out
lea
push
xlat
lret
pushf
std
jne
pop
add
add
popa
mov
pop
faddl
daa
sbb
sbb
into
inc
sub
es
dec
in
sbb
mov
xchg
ficoms
aad
xchg
push
xor
sbb
jbe
insb
fwait
aaa
mov
mov
mov
loope
cli
xchg
fidivl
xchg
push
pusha
fidivrs
mov
aam
cmp
dec
stos
dec
fs
jo
fdivp
repz
inc
call
shlb
fdivr
add
in
xchg
dec
mov
addr16
pop
sahf
fiadds
adc
push
pop
in
sub
mov
mov
imul
push
movsb
stos
push
sahf
fidivs
add
leave
das
loop
mov
push
or
dec
push
jo
pop
dec
mov
jp
cwtl
xor
cmp
adc
data16
xorl
ficoms
insl
jb
test
mov
dec
andb
dec
shrl
popf
into
jmp
insb
lcall
std
andb
dec
cmpsb
push
loopne
aas
pop
enter
fdivl
push
push
hlt
adc
insl
je
dec
inc
fisubs
fsubrp
lds
icebp
mov
fcomip
adc
out
xlat
popa
add
jge
add
mov
dec
aad
push
pop
mov
and
fisubrs
and
adc
pop
rcrb
aad
fiadds
cmpsl
enter
call
pop
faddp
cmp
in
movsl
sbb
adc
imul
mov
pop
and
ss
sub
cltd
xor
sarb
fimuls
mov
fsubrp
ljmp
sub
mov
mov
adc
aas
into
mov
pop
jo
sbb
pop
stos
inc
sbb
rorb
stos
faddp
xchg
out
dec
pop
dec
std
aas
pop
es
jp
mov
ret
sbbl
inc
jbe
xchg
jns
or
into
dec
fcmovnbe
out
aaa
das
pop
xchg
js
adc
loope
pop
add
xor
fisubrs
lcall
ror
mov
cmp
push
pop
jg
out
jp
pmuludq
cwtl
dec
inc
push
out
lcall
mov
out
and
fmuls
bound
dec
imul
push
in
xchg
inc
call
cmpb
les
sub
fisubs
pop
out
insl
ja
pushf
sbb
fisubl
fidivs
push
cs
popf
hlt
sbb
xor
pop
push
js
xor
pop
call
ficoms
mov
int3
in
das
push
jnp
fisubrs
outsb
cmp
sbb
fidivrl
or
fimuls
es
fmull
std
stos
mov
sbb
and
es
add
cmpsl
ja
dec
fidivrs
pop
lods
dec
or
mov
sub
clc
into
popa
inc
faddp
cs
mov
sarl
and
cmpsb
in
orps
xchg
add
push
ret
into
std
jl
adc
sbb
rorl
scas
lahf
fisubs
outsl
pop
lock
and
fdivp
hlt
sub
fisubrs
push
push
loope
fdivrs
jg
lods
jo
int3
fcmovne
push
jmp
push
adc
ljmp
mov
pushf
mov
aas
cmp
jbe
add
popa
std
icebp
fcompl
jp
inc
lret
stos
mov
adc
cmp
xlat
fimuls
fdivp
test
xor
enter
mov
aad
pop
jmp
int3
popf
xlat
and
mov
dec
popa
lahf
fisubs
out
mov
xchg
loopne
add
lret
cld
mov
sub
fisubrs
stos
aaa
andl
inc
ja
mov
notb
cmp
sub
cmp
pop
mov
adc
repnz
inc
je
arpl
cmpsb
dec
push
mov
scas
std
test
xchg
rol
fisubs
push
mov
mulb
scas
pop
fisubrs
mov
mov
nop
sub
cli
cmp
test
cld
push
cmp
movb
xchg
insl
ficomps
jl
faddp
xor
test
add
lcall
lock
xor
fstpt
fisubrs
jns
roll
pop
aam
mov
repz
pop
fimuls
orl
inc
into
test
and
push
adc
bound
fisubrs
or
dec
pop
lcall
sahf
ret
cld
sub
int3
inc
into
stos
in
fsubrs
outsb
dec
mov
imul
loope
movsb
into
jnp
fwait
aas
cmc
mov
ret
aaa
cltd
leave
xchg
ret
mov
push
insl
push
push
mov
add
mov
cwtl
mov
cld
into
scas
mov
fidivrs
mov
xchg
sub
imul
pop
pop
dec
sbb
mov
in
xchg
mov
mov
pusha
sahf
daa
test
loope
rcl
lret
insb
in
fidivrs
inc
cmp
aas
notb
fcmove
dec
fmulp
push
sbb
xor
sbb
mov
mov
ffree
test
adc
mov
icebp
faddl
rolb
int
add
sbb
or
cmp
loop
dec
and
push
scas
and
and
jecxz
outsl
arpl
in
mov
stc
lcall
fidivrs
add
add
jle
mov
int
push
repz
lods
mov
dec
pop
xchg
imul
fidivs
dec
js
and
jl
jno
mov
xchg
sub
fiadds
rcll
std
shll
fucom
push
stc
pop
sub
into
rolb
mulb
inc
in
out
or
xor
mov
add
mov
inc
sbb
lret
fidivrs
sbb
fdivp
xchg
aaa
out
jns
aas
fisubrs
addr16
adc
outsb
ror
dec
ret
fidivs
push
mov
pop
shlb
and
sub
into
stc
jne
fiadds
jp
lahf
cmovns
xchg
jmp
ret
lds
cmc
push
or
or
jbe
fimuls
enter
rorb
icebp
lret
ljmp
add
adc
ja
pop
push
sbb
cmp
sti
mov
sub
lret
fldt
cmp
pop
xchg
mov
push
mov
fidivs
sub
or
fidivrs
adc
ret
std
jns
mov
inc
call
mov
add
inc
fmulp
fxch
pusha
mov
pop
out
fisubrs
push
lds
push
jp
xlat
fisubrs
xor
lods
jge
fdivrp
mov
rcr
lret
into
push
fldt
dec
mov
icebp
or
push
sahf
dec
fidivrs
mov
mov
stos
ret
mov
getsec
ds
xchg
sbb
fisubs
bound
in
dec
fisubrs
into
cmp
lock
mov
inc
test
sbb
sbb
jge
out
pop
push
pushf
std
sbb
in
cmp
fs
jns
in
outsb
ficomps
lock
sub
popf
jp
sbb
pop
pop
add
sbb
repnz
ret
push
mov
inc
sbb
pop
std
cwtl
jae
inc
add
dec
stos
add
cltd
mov
shrb
sahf
mov
mov
ficomps
shll
push
lods
fidivrs
jb
jle
jae
fisubrs
hlt
push
xchg
dec
int3
and
jno
div
add
jmp
ficomps
clc
daa
dec
ljmp
xchg
xchg
mov
rcrb
or
ljmp
sub
cltd
fsubp
push
sti
int
mov
rcr
dec
nop
sbb
fdiv
inc
mov
stos
or
add
ret
lods
fsubp
arpl
dec
xchg
push
pop
mov
scas
mov
into
fdivrp
jp
out
mov
jg
pop
or
xchg
fs
cmc
fimuls
sbb
fidivs
clc
fsts
pop
ror
sub
cli
inc
or
xor
xor
mov
push
jmp
sbb
popa
mov
xchg
test
dec
inc
mov
jb
test
fpatan
js
lret
rol
lret
jns
cmp
pop
daa
pop
sbb
lret
dec
test
dec
cmp
ficoms
mov
and
pusha
adc
sub
mov
dec
testb
stos
movsb
out
cmpsl
sahf
into
es
pop
pmaxub
aam
sbb
jp
hlt
inc
lods
imul
dec
andl
repz
fmuls
push
push
movsl
cmp
push
mov
pop
xchg
rcr
mov
jge
std
mov
outsb
jns
sahf
dec
mov
fidivs
imul
add
shlb
fcoml
ret
shrl
test
inc
push
xchg
or
out
insb
add
or
or
test
xor
loopne
cli
ror
int3
mov
xor
lcall
inc
stc
aad
lret
sbb
add
mov
cld
sbb
cmp
inc
pusha
cli
add
push
jae
mov
mov
fidivrs
loop
xchg
clc
sar
pop
push
out
dec
lds
outsl
lea
dec
sbb
adc
repz
mov
push
adc
aam
cmp
sbb
ret
inc
cmp
cld
in
fwait
push
je
aas
xor
fidivs
or
mov
adc
sub
and
fisubs
cmc
jecxz
mov
push
fisubrs
test
inc
push
cltd
fidivs
jb
inc
outsb
inc
inc
fisubrs
mov
out
and
movb
mov
add
xor
cmpsl
inc
mov
cmp
cmp
inc
xchg
mov
das
xchg
outsl
inc
adc
mov
mov
mov
dec
ret
std
mov
sbb
fidivrs
push
cmpb
jne
mov
mov
scas
xchg
sub
addr16
jge
mulb
add
push
outsl
or
cmp
push
adc
negb
mov
jmp
push
and
cmp
pop
jnp,pt
ja
fidivrs
pop
loop
into
mov
xchg
repz
sti
inc
fwait
adc
fisubs
notb
add
fidivrs
jno
es
sbb
xor
cld
fisubrs
add
mov
jo,pt
and
ret
pop
sub
inc
fsubrp
add
mov
sbb
mov
int
push
std
jmp
data16
outsb
aad
shl
les
fisubrs
dec
lock
mov
mov
lret
xchg
fs
into
fidivrs
aam
or
mov
in
add
inc
push
jg
scas
incl
ffreep
sub
fiadds
mov
dec
rclb
loopne
popa
jl
mov
add
subb
lock
scas
fcomp
and
and
and
add
jge
clc
xlat
push
fidivs
out
js
or
adc
xor
or
xchg
fists
adc
je
or
or
pop
sub
data16
jo
jle
jmp
lods
pop
ret
fcomp
xor
test
rcrl
fidivrs
and
stc
mov
push
out
xor
ficoms
jmp
out
es
into
ds
mov
inc
icebp
push
push
mov
xchg
adc
mov
push
pushf
outsl
and
fsubr
ficomps
jg
frstor
ss
fimuls
imul
xchg
xor
push
das
rcr
sahf
sub
imul
pop
ljmp
sbb
nop
mov
inc
cld
divb
push
rol
sar
xor
push
jg
push
cld
jp
scas
ficomps
lea
ret
shll
ds
cmp
in
fs
mov
ficomps
sbb
mov
lret
into
and
std
cmp
xor
or
gs
ror
aas
jmp
addr16
xchg
dec
add
cld
and
mov
sub
sbb
data16
mov
je
loope
mov
pop
push
aaa
fdivrp
out
imul
sub
cmp
enter
xor
sbb
pop
cs
mov
lds
int3
outsb
faddp
push
sahf
mov
xchg
jle
adc
sbb
insb
push
ficoms
pop
inc
sahf
aas
jnp
sbb
fdivp
adc
repz
inc
adc
mov
imul
ss
or
fisubrs
fwait
xchg
and
in
add
fisubrs
xor
fiadds
sbb
mov
pop
fisubrs
mov
scas
adc
cmp
lcall
loopne,pt
sbb
adc
gs
enter
mov
xchg
loope
add
sarl
cmp
inc
add
add
inc
js
sbb
into
xchg
xor
pop
loopne
add
mov
scas
adc
lret
inc
ficoms
fisttps
icebp
sbb
shl
cmp
addl
dec
push
movd
jl
sbb
loopne
mov
push
out
fimuls
pop
pop
rorb
std
call
push
mov
cli
daa
push
cld
bound
jle
jp
repz
lods
sbb
pop
out
sbb
sbb
jo
mov
fsubp
mov
xchg
dec
xchg
jp
adc
xchg
fmulp
fcompl
mov
fisubs
jno
mov
aaa
std
lret
lods
pop
int3
pop
orl
cmc
adc
cmp
in
ficomps
cmp
cmp
fisubrs
jb
sahf
cmpsl
inc
std
shrl
lahf
jle
cltd
orb
fisubs
inc
es
fisubrs
imul
pop
jecxz
mov
test
ficoms
fldt
adc
dec
adc
sbb
mov
movzwl
cmp
lcall
mov
jne
jnp
xor
dec
jns
dec
aaa
movsb
std
xchg
mov
mov
aam
push
pop
stc
fimuls
or
lds
sbb
fisubs
cs
sub
pop
jbe
fldl
push
mov
pop
test
xchg
xor
ljmp
mov
outsb
into
pop
fnstenv
data16
sbb
dec
mov
xchg
test
jp
ficoml
out
cld
movsl
sub
ret
add
scas
xlat
push
js
adcb
les
push
mov
jecxz
cli
mov
xchg
cmp
in
stc
adc
lcall
cltd
mov
orb
sbb
cli
andl
sbb
mov
xchg
lods
lahf
fs
mov
cli
ret
jns
sbb
push
bound
or
dec
mov
adc
into
dec
loop
cmc
cmpsb
fidivrs
mov
into
ret
call
pop
fimuls
jl
dec
std
xlat
push
lahf
popa
psubusb
or
lock
aad
loop
dec
daa
test
jge
mov
inc
sbb
jle
mov
loope
jle
int
inc
sub
mov
add
push
pop
int3
pop
fwait
pop
mov
int3
pushf
or
jp
sbb
ret
shll
fidivrs
aad
les
pop
fmulp
adc
inc
inc
mov
ficomps
dec
cltd
in
into
jecxz
cld
cmp
aaa
cmp
mov
fmulp
jbe
pusha
push
out
cmp
nop
insl
pop
mov
fisubrs
cmc
scas
int3
fisubrs
sbb
and
xor
andb
addr16
fisubs
xchg
push
mov
pop
sti
in
ja
shll
int3
sub
or
jmp
push
sub
xchg
mov
out
out
nop
inc
fidivrs
dec
bound
ss
inc
int
adc
les
arpl
jg
repz
jmp
jnp
lea
into
sub
aaa
lahf
cwtl
into
inc
rorb
lds
pop
push
leave
in
fisubs
jns
loopne
clc
add
inc
mov
or
je
or
aas
test
mov
xchg
movsl
insb
jmp
pop
fimuls
push
pop
data16
mov
mov
add
add
call
fidivrs
xor
lock
cmpsl
mov
hlt
mov
lret
fidivs
cmp
negb
lea
scas
pop
fisubs
adc
push
imull
mov
repz
xor
dec
stos
notb
jecxz
or
mov
repz
leave
das
sub
xchg
aad
cmp
outsb
imul
and
xchg
in
xor
add
gs
fidivrs
push
in
fmulp
push
out
jge
ret
mov
test
cmpsb
sahf
loopne
test
adc
std
sub
imul
push
pop
xor
cld
mov
pop
xchg
cmpl
loopne
pop
or
inc
mov
fldl
dec
sahf
jl
dec
repnz
into
test
ret
rcl
loopne
in
enter
mov
adc
insl
cld
fidivs
test
sarl
icebp
cmp
sti
cmp
add
push
or
pop
out
fs
mov
or
sti
loop
mov
and
orb
outsl
shll
push
lret
mov
je
repz
loopne
pop
sub
into
sbb
xor
jo
fimuls
mov
jmp
in
mov
ljmp
ficoms
inc
jno
ret
jne
or
jle
mov
add
and
imul
cmp
fdivrs
add
inc
xchg
adc
cmp
in
cmp
out
sbb
mov
sahf
xchg
es
cwtl
jae
add
fidivrs
fbstp
negb
fisubrs
enter
xchg
mov
out
loope
scas
ret
mov
jb
lcall
cmp
movsl
mov
sbb
sbb
jge
adcb
pmaxub
xchg
inc
mov
sub
jbe
lds
sbb
cld
fwait
jmp
insl
push
pop
faddp
imul
fsubp
lret
ljmp
fnstsw
pop
jne
je
ja
push
inc
pop
sub
in
mov
aaa
cmp
scas
iret
ja
test
xor
xor
lods
mov
mov
mov
sbb
sarb
std
insb
cmpb
fcoml
cmc
inc
push
fidivrs
nop
popf
inc
and
fidivs
jmp
fdivrp
sub
lods
fnstcw
mov
mov
movsb
xchg
dec
fidivrs
xor
or
cld
mov
mov
cmp
mov
or
loope
jnp
cltd
mov
shlb
je
adc
fists
nop
mov
aaa
jg
mov
arpl
fidivrs
sbb
dec
inc
aam
lahf
test
ficoms
fsubrs
and
push
add
jge
or
insb
fisubs
push
add
mov
int
jmp
outsb
sub
jle
adc
arpl
mov
in
insb
fstl
fcompp
ret
shlb
cmp
sbb
or
clc
mov
imull
xchg
dec
fmulp
jecxz
jb
xlat
xor
push
jp
jne
shll
imul
inc
das
push
inc
mov
xchg
dec
popf
addr16
mov
adc
fisubs
sbb
mov
popa
aas
lret
dec
into
add
xchg
aas
repnz
in
dec
mov
sar
ret
stc
ficomps
bound
ficoml
push
cmpsb
mov
daa
ficoms
imulb
decl
sahf
ja
into
andb
xchg
int
fisubs
enter
fisttpl
out
pusha
pop
lret
cld
cmpsl
repz
mov
and
fdivrp
dec
xor
xor
cmpsl
pop
fmull
fisubs
xchg
test
rorb
xchg
ficomps
pop
popf
shll
mov
stc
std
mov
pop
xor
lret
sbb
sbbl
adc
jne
mov
std
stos
pop
test
and
fdivrl
push
pop
arpl
fiadds
dec
addr16
dec
inc
in
xor
adc
cmp
pop
and
lret
adc
xchg
outsl
push
dec
rclb
fidivrs
cmpsl
lahf
aad
mov
cmp
and
test
iret
add
inc
push
outsb
adcb
mov
adc
fiadds
leave
push
mov
orb
ret
push
mov
jmp
cwtl
mov
rolb
and
cmp
nop
imul
xor
in
mov
inc
sub
xchg
and
or
dec
daa
fidivs
fsubr
insb
pcmpgtw
stos
inc
mov
inc
scas
loope,pn
xchg
fisubrs
jns
dec
stos
add
faddp
insb
xor
repz
mov
fisubrs
loop
inc
aaa
leave
pop
mov
push
rorl
sbb
rcrb
cmp
mov
sti
outsb
lcall
or
ficomps
int
loop
push
mov
inc
arpl
inc
and
mov
ds
jle
outsl
jmp
dec
push
popa
js
mov
mov
dec
repz
lret
std
xor
ret
inc
out
sbb
pop
jo
sar
push
outsb
fcompl
add
fisubrl
fisubs
inc
inc
sbb
mov
lret
andb
push
test
popf
add
lods
or
cltd
sbbl
ficoms
shll
pop
lcall
js
mov
dec
xchg
sub
jle
mov
inc
cmp
sti
mov
jge
fsubrp
es
mov
add
push
inc
adc
mov
popf
orl
aad
cmp
push
repz
adc
lods
into
je
mov
push
popf
mov
aaa
std
lcall
fdivrp
shl
sbb
sbb
dec
xchg
insb
and
mov
cmpsl
xchg
jo
sbb
dec
ficoms
lds
jp
and
fimuls
imul
jbe
cmp
ficoms
mov
xchg
jge
mov
sahf
push
sbb
mov
push
fcompl
fidivl
sub
fmulp
lds
sti
or
mov
xor
rolb
pop
dec
fnstsw
outsb
dec
pop
add
mov
fiadds
les
sahf
cmp
mov
adc
xor
popl
xchg
jb
iret
push
aas
mov
stos
jg
std
pop
mov
mov
icebp
push
inc
test
inc
cmp
mov
mov
mov
in
xor
enter
nop
into
cmp
insl
fdivp
or
stos
mov
inc
cmpsb
test
test
push
mov
test
fidivrs
out
aaa
stos
std
and
ficomps
xchg
pushf
jl
adc
push
aas
mov
daa
outsl
addb
shl
fdivrp
fdivr
scas
sbb
cld
xchg
pop
fiaddl
and
push
pop
xchg
fimuls
jg
idiv
dec
loope
insb
int
ss
test
jle
xchg
mov
nop
mov
shr
pushf
iret
ficompl
repnz
ljmp
add
adc
pop
add
push
stos
xchg
dec
cmp
jecxz
aaa
push
xlat
inc
sti
fisubs
or
stos
fimuls
pop
ja
inc
int
pop
mov
jmp
out
int3
mov
test
jae
jle
sbb
cmpsb
popa
int
xor
dec
mov
shl
in
inc
movsb
rorl
pop
mov
bound
test
jno
sub
scas
nop
ficoms
dec
dec
fidivrs
pop
push
adc
shll
sub
and
bound
fisubrs
lret
push
mov
into
pop
cltd
adc
add
movsl
daa
fsts
shrb
xchg
in
push
cmpsl
or
decl
clc
dec
jmp
rolb
mov
or
gs
xor
adc
pop
lcall
aad
cli
xor
fsubrp
and
sbb
fmull
jbe
dec
mov
mov
test
dec
cli
pop
cmp
nop
lret
cmpsl
cmp
fsubp
pop
pop
mulb
inc
fidivrs
dec
xor
popf
mov
mov
int3
andl
jl
jo
in
mov
in
push
fidivs
xor
mov
mov
inc
mov
xor
arpl
fidivrs
adc
lea
outsl
loopne
shlb
fisubs
dec
fmull
and
hlt
push
sub
pop
adc
push
ja
into
adc
cwtl
repz
fdivr
andb
xchg
ds
adcb
call
sbb
pop
jns
inc
mov
insl
fimuls
out
out
xor
cli
sarl
fs
inc
mov
or
fidivs
inc
std
inc
xchg
or
sbb
mov
fisubrs
stc
enter
xor
sbb
or
and
lods
fs
fisubrs
cmpsl
lock
jge
enter
cmp
add
in
outsb
xlat
test
fimuls
mov
mov
rorb
sar
jno
test
pop
test
cmp
push
aam
mov
lods
push
mov
xorl
xchg
adc
sub
rol
jo
or
fmull
jae
xchg
fsubrp
pop
sub
out
mov
lret
or
jno
int
adc
xor
enter
xchg
inc
cmc
fs
arpl
icebp
or
ficomps
imul
imul
pop
movsl
ret
or
adc
std
fmulp
add
sbb
jno
ss
xor
push
push
jae
cli
imul
pop
rcr
and
negl
inc
int
fildl
pusha
adc
sbb
dec
je
clc
pop
fisubs
dec
mov
fisubs
lcall
in
rorb
mov
xor
test
pop
fisubrs
fistl
in
imul
jp
sbb
cmp
jbe
out
push
mov
xor
test
add
popf
mov
jp
out
ficompl
jmp
and
lods
jae
fidivs
or
pop
insl
push
test
xchg
jp
movsl
sti
and
fistpll
iret
test
pop
xor
mov
aam
js
xchg
mov
mov
xor
in
out
jae
ret
pop
cmp
pop
ficoms
cmp
cmp
fs
jbe
or
mov
fisubrs
fsin
push
jecxz
jg
in
fidivs
xor
cmp
hlt
push
push
pop
cs
pushf
rorl
push
fidivs
rolb
dec
lret
dec
cmpsb
add
xlat
test
inc
push
loop
ret
aaa
jecxz
sbb
xchg
add
aam
sti
pusha
les
lock
clc
and
jmp
mov
cmp
push
mov
sahf
cli
xchg
jg
sbb
loope
mov
nop
fisubrs
push
insl
mov
fidivrs
dec
push
pop
and
out
mov
scas
pop
pushf
pusha
mov
repnz
fsubp
ffreep
xlat
jl
xor
fiadds
pushl
mov
fiadds
cmpb
cltd
fisubrl
xchg
xlat
rclb
xchg
std
or
mov
xor
fidivrs
loopne
xchg
sbb
hlt
clc
inc
sahf
int3
pop
fimuls
sbb
fimuls
jmp
add
scas
gs
mov
mov
jp
sub
out
mov
add
mov
inc
push
sub
push
sub
pop
and
pop
adc
mov
mov
pop
scas
push
lods
fimuls
inc
pop
xchg
cli
lret
clc
in
pop
movsb
adc
pop
fs
into
pop
and
cmpsl
xor
fildll
mov
inc
clc
outsb
fmulp
cld
shl
popf
sub
mov
gs
push
aas
je
in
mov
xchg
push
jmp
and
push
pop
xor
dec
lret
jl
in
fidivrs
pushf
inc
out
cmp
mov
cmc
lret
js
mov
sarb
fstpl
fiadds
lcall
fimuls
xchg
push
mov
push
push
adc
aas
in
mov
and
out
adc
orl
fsubrp
dec
dec
adc
in
inc
ficoms
sahf
loop
frndint
loope
push
xchg
aam
push
push
roll
pop
mov
scas
jb
mov
shll
ficomps
rorb
test
adc
cmpsb
xor
push
ret
aaa
pop
push
pushf
ss
cltd
and
mov
cmp
or
into
jnp
mov
cli
sbb
adc
imul
xchg
jle
inc
mov
and
out
clc
enter
pop
in
daa
imul
sahf
xor
inc
fdivp
mov
xchg
fisubrs
mov
enter
fwait
xor
lock
insl
push
adc
fdivrp
loopne
test
mov
add
icebp
popf
jg
mov
jnp
add
cwtl
jmp
pop
adc
mov
mov
fiadds
fwait
and
rcrb
fidivrs
lock
pop
pcmpeqw
test
outsl
and
sbb
fmulp
pop
mov
mov
push
dec
faddp
das
jge
sub
sahf
inc
jp
push
into
fistl
rcrb
xchg
lods
std
in
das
mov
fcmovb
mov
push
fidivrs
or
fists
cmp
popa
add
rorl
xchg
mov
ss
cmp
mov
sub
cwtl
sarl
pop
shlb
addb
ficoms
out
orl
mov
shlb
inc
fsubr
jge
xchg
in
imul
fcompp
stc
lahf
ficomps
inc
and
fldt
rclb
js
fisubl
ja
fimuls
jns
mov
inc
cwtl
add
subl
rcrb
add
cmp
std
mov
aam
shll
push
stos
and
adc
xchg
mov
xchg
pusha
imul
stos
xor
shlb
xchg
out
push
push
add
jg
fsubrp
xchg
inc
inc
fisubl
ds
pop
pop
dec
xor
xor
fisubs
or
in
sti
pop
mov
iret
inc
mov
ja
sahf
out
fiadds
into
pop
js
cmp
aas
mov
mov
rcr
ret
in
sbb
add
outsl
das
fidivrs
fsts
xor
icebp
std
inc
add
jne
sbb
xchg
inc
pushf
fcompl
jecxz
ficoms
push
insb
aad
fiadds
push
orb
dec
mov
and
push
mov
je
in
out
add
mov
bound
fisubrl
nop
jnp
ljmp
cmpsb
pop
xor
test
ffreep
adc
dec
aaa
loopne
je
fimuls
call
push
fidivrs
or
lahf
add
sbb
lock
dec
push
pop
ds
enter
pusha
jge
dec
fisttpl
pop
mov
aad
jg
sbb
int
mov
bound
ja
jb
cld
and
jle
dec
jns
iret
mov
add
dec
repnz
fs
mov
cmpl
inc
push
sub
stos
stos
shl
ret
cltd
insb
cmp
sysenter
xlat
imul
or
pop
fisubs
inc
or
cld
sbb
and
or
pop
inc
and
mov
rcr
movsl
rcr
adc
lods
std
mov
cld
inc
mov
fisubrl
in
iret
inc
fidivrs
push
xchg
lahf
push
mov
insb
and
nop
fstl
cmp
adc
mov
ss
shll
fadd
sub
sahf
mov
fisubl
xchg
into
xchg
ja
scas
fisubs
inc
lea
imul
lret
add
jne
add
ficomps
imul
adc
mov
out
clc
ficoms
pusha
cmp
fimuls
or
fdivrp
les
aas
cvttps2pi
fiadds
xor
insb
jmp
aad
mov
testl
data16
clc
sub
insb
mov
ficomps
jge
lret
int3
je
lods
lret
sub
xorb
ret
mov
dec
jns
pop
mov
sbb
mov
jge
xor
cmp
test
stos
push
iret
dec
scas
loopne
xchg
jnp
jg
add
cld
push
ficoms
and
fisubs
add
ja
cmp
dec
into
adc
sbb
in
sahf
mov
out
sbb
push
arpl
dec
push
pop
gs
pop
dec
xchg
pop
pop
std
aaa
mov
jge
jle
out
sbb
pop
std
mov
mov
mov
fimuls
jl
out
popa
iret
cmpsb
rcr
scas
push
push
daa
xchg
jg
or
ss
int
movl
add
ficoms
daa
loopne
cmc
insl
enter
cmpsb
xor
adc
repnz
inc
mov
push
mov
push
clc
fucom
int3
out
call
jp
outsb
ret
dec
fidivrs
lods
mov
fsubrp
enter
insb
test
aam
stos
and
cltd
inc
add
adc
outsl
fimuls
add
sub
mov
mov
fwait
repz
push
lods
sub
sbb
xlat
adc
fidivs
or
mov
jle
ret
add
in
pop
xchg
insl
shrb
cmpb
icebp
add
rolb
ds
fists
lods
push
cltd
daa
cmc
movsb
hlt
rcrl
add
cmp
push
pusha
ret
movsl
pop
addl
fidivrs
cmpb
mov
aam
je
sbb
xchg
pop
mov
imul
popf
mov
mov
das
sbb
push
movb
decl
ljmp
jg
call
rcl
xor
cmp
call
sbb
fsubp
push
insl
mov
orl
xchg
pop
es
mov
and
pusha
inc
aad
fiadds
jbe
lret
push
fdivrs
test
xchg
nop
fiadds
mov
jp
lock
sub
aad
fsubp
js
ja
fildll
add
fidivrs
incl
fdivrp
enter
insb
outsb
add
push
pop
or
sarb
mov
pop
test
xlat
in
xor
mov
xchg
cmp
pusha
adc
dec
jns
or
inc
scas
xchg
cld
shll
cmp
lods
and
and
and
cld
and
jp
mov
loopne
ficoms
xchg
mov
test
out
fisubrs
das
add
mov
cld
in
jnp
shr
dec
adc
scas
jle
gs
cli
outsl
int
xchg
pop
ficoms
adc
pop
aaa
or
fsubrp
sbb
pop
jnp
ret
push
enter
sub
pushf
lock
mov
mov
push
add
jle
shl
push
testb
jg
outsb
jnp
int
movsl
add
in
sub
fisubrs
xchg
pop
outsb
ficomps
sbb
jb
popf
pushf
stos
fsubrp
mov
movsl
je
ret
iret
pop
xor
or
add
rol
std
inc
arpl
pop
cltd
push
ficoms
push
xlat
add
inc
cmp
or
fdivrp
test
add
test
inc
add
xchg
ret
xchg
and
repnz
cmpb
leave
sbb
sbb
arpl
xor
mov
xchg
in
add
in
fs
ffree
sub
daa
mov
stos
ficoms
add
je
nop
jae
sub
cmp
out
xchg
testl
adc
mov
push
lods
jle
mov
ljmp
scas
enter
jg
cli
pop
les
jmp
jl
fs
sub
pusha
gs
cmpsl
int3
mov
mov
mov
jo
fimuls
sub
fdivrp
dec
gs
sarl
test
es
filds
jmp
fadd
xor
or
mov
bound
mov
test
ds
mov
cltd
cli
lret
cmp
dec
sbb
rcr
xchg
push
addr16
push
test
test
aas
ret
cmp
jmp
pushf
in
mov
and
mov
leave
mov
cmp
dec
dec
andb
in
sahf
sarb
cld
sub
scas
or
sub
or
fiadds
pop
inc
pop
imul
or
ficomps
les
xor
add
data16
push
lds
mov
aam
jb
dec
inc
or
mov
into
ds
std
call
xchg
decb
xchg
stos
in
jb
mov
fcmovbe
pop
mov
jle
or
lods
fidivs
insb
std
add
xor
fimuls
mov
enter
std
push
loopne
mov
in
xor
jo
and
ficoms
cwtl
mov
fidivrs
in
xchg
cmpsb
cmp
jmp
jle
test
or
sti
aaa
add
xor
outsb
adc
dec
push
fimuls
xor
push
cvttps2pi
mov
pop
fsubrl
push
into
das
inc
mov
mov
jbe,pt
sbbl
mov
fidivl
ficomps
repnz
shlb
mov
push
in
fimuls
cmp
fimuls
je
pop
divl
sbb
lcall
ret
adc
aam
rcl
test
pop
jl
imul
mulb
sbbl
imul
out
jae
out
fiadds
cmpsb
es
add
imulb
movsl
xlat
movsb
in
popl
inc
fidivrs
popf
or
cmp
jle
das
pusha
stos
ret
adc
cli
push
dec
xlat
adc
mov
ficomps
lcall
dec
jae
push
ficomps
sbb
sbb
adc
cs
xlat
jp
mov
leave
xlat
push
fisubs
clc
ljmp
jbe
fbstp
test
xchg
repz
into
add
cmp
jl
aas
ficoms
jg
add
push
and
cmp
xchg
dec
or
mov
lcall
ficoms
js
filds
jle
add
dec
mov
inc
mov
rcr
push
fimuls
adc
js
jns
std
lods
addr16
pop
xor
mov
push
sub
fnop
shll
and
ret
jp
movl
xchg
lods
data16
int
mov
ds
loope
inc
pop
sub
adc
cmp
cmp
fisubs
pushf
mov
adc
mov
mov
inc
or
ficomps
cltd
imul
clc
dec
jmp
push
lahf
push
fcomps
fiadds
int
cltd
inc
xchg
fdivp
aas
and
jg
ficoms
cld
jge
jno
push
xchg
mov
pop
sub
dec
ror
cli
bound
sub
fimuls
xchg
jle
call
fxch
mov
dec
xchg
push
push
popf
fdivp
shr
ret
sub
xor
cmp
jl
pop
mov
call
fisubrs
scas
cwtl
fdivrs
xor
gs
pop
or
dec
shlb
xorb
mov
popa
xchg
hlt
push
xor
mov
and
mov
cmpsl
icebp
popa
jmp
ficomps
test
mov
in
rcll
fdivp
sub
fisubs
bnd
push
lock
or
shl
fimuls
mov
ficomps
cmpb
push
jmp
scas
std
mov
mov
sub
ret
test
push
orl
mov
cmp
sub
idiv
js
rcl
ja
fcompp
call
or
jge
pop
jmp
mov
nop
xchg
das
ja
add
stos
xor
jb
jle
sbb
mov
and
add
xlat
fidivs
cli
int3
mov
leave
data16
inc
fcompp
pop
insl
or
addr16
fsubp
dec
mov
add
std
subl
sub
cmpsb
mov
jb
fimuls
adc
jo
push
dec
jmp
jecxz
lods
mov
sahf
fstpt
cld
int3
scas
ss
push
and
add
icebp
cli
push
imul
mov
movsb
mov
fwait
inc
cmpl
mov
sub
xor
push
mov
jle
jg
mov
mov
out
aad
jbe
ja
pop
outsl
rcll
sarl
lret
mov
xlat
xchg
and
ret
out
push
mov
movsl
fidivs
out
mov
fidivrs
shl
out
daa
int3
mov
mov
insb
adc
mov
scas
fcmovnu
adc
sbb
enter
fwait
xor
aas
mov
insl
test
out
mov
imul
std
sahf
inc
fstp
es
cmp
jno
add
cmp
outsb
and
dec
pushf
lods
mov
mov
popl
loop
jnp
test
jecxz
adc
xlat
test
outsl
sahf
cwtl
mov
jb
lcall
repz
sbb
sub
mov
jo
lds
mov
fmulp
xchg
pop
pop
fdivrl
shll
fisubrs
rcrb
jno
fstp
jae
xor
rcr
push
subl
in
fisubs
pop
mov
cmp
push
xchg
jnp
jb
ret
ficomps
movsl
inc
push
and
out
mov
nop
es
faddl
into
and
incl
mov
xor
outsb
add
outsb
sub
ret
negl
pop
fdivs
mov
mov
test
xchg
and
ret
mov
xor
push
sbb
dec
ror
ret
jp
sub
dec
lret
dec
xchg
jg
mov
sbb
xchg
stc
jmp
bound
and
leave
fimuls
cltd
loop
jbe
lods
or
push
xchg
cltd
pop
sahf
hlt
ljmp
dec
fisubrs
fwait
or
pop
cmp
fidivs
mov
pop
testl
jmp
loopne
cmpl
xor
fidivs
lds
push
aaa
add
sarb
fidivrs
sbb
jle
mov
enter
fcompp
adc
jg
cld
jecxz
and
push
std
in
inc
call
mov
push
iret
faddp
jp
dec
std
dec
in
idivb
lods
fdivrp
sub
fisubs
out
lahf
sub
pop
or
pop
mov
dec
push
inc
enter
negb
aaa
jae
ffreep
jnp
ret
inc
sbb
push
sbb
sub
sbb
push
push
insb
jb
lahf
adc
sbb
ljmp
fisubs
popf
mov
add
jge
sub
int3
rcll
jg
ror
push
scas
int
repz
rclb
into
jle
imul
psubq
mov
fsubrp
pushf
imulb
ret
dec
cmp
xor
scas
fisubs
ds
pop
mov
push
inc
fisubrs
ret
into
cltd
addb
xlat
push
out
lret
lods
fisubs
and
pusha
clc
xchg
pop
sub
lods
fisubs
push
out
fisubrs
push
int3
lret
mov
and
pop
test
pushf
pop
pop
popa
fimuls
fisttps
lret
int
fidivrs
mov
in
or
aaa
mov
std
sub
shlb
loopne
stos
push
xchg
mov
mov
lock
js
divb
or
ss
mov
adc
sahf
ficoms
xchg
sbb
lea
lock
lret
jnp
or
xor
or
pop
mov
mov
hlt
mov
gs
jp
shlb
fisubrs
loopne
into
or
gs
ss
insb
mov
jge
stos
fsubrp
or
sbb
mov
popf
fidivrs
inc
xlat
inc
data16
rolb
mov
test
cli
call
popa
movsb
sbb
fiadds
or
lods
and
fimuls
sar
mov
push
jle
fdecstp
bnd
pusha
pop
lret
xchg
hlt
inc
cli
and
mov
push
dec
mov
push
stos
and
ficomps
jb
clc
aad
sub
adc
jg
ficoms
mov
push
sub
out
movsb
fisubrs
in
add
flds
inc
xor
push
inc
mov
jp
and
or
cwtl
cmc
fistpl
cli
or
stc
and
mov
imul
fiadds
and
out
flds
rorl
mull
or
sub
insl
jecxz
fs
in
add
ja
add
sbb
xor
into
loop
insl
fisttpl
rolb
jl
movsl
pop
outsl
lods
icebp
push
xchg
scas
pop
faddp
out
sbb
push
push
add
aad
outsb
dec
test
ficoms
jne
fldcw
js
mov
nop
cmc
ret
icebp
mov
sub
push
add
mov
repz
leave
mov
fisubrs
push
sub
out
fiadds
jmp
dec
push
es
inc
xchg
inc
ret
xchg
call
shll
shl
or
push
jno
sbb
test
fisubrs
cmc
adc
jmp
out
loopne
and
inc
fdivp
arpl
ficomps
and
fisubrs
dec
mov
add
fdivrl
jae
test
adc
stos
mov
popf
dec
into
sbb
cld
aam
fldt
fsubp
das
mov
pusha
adc
rorb
movsb
push
mov
gs
std
call
mov
shl
cmp
sbb
jne
in
dec
sub
adcb
sub
and
stc
or
rol
add
out
and
pop
daa
into
sub
insl
jbe
rolb
push
push
sub
inc
test
pop
shlb
sub
sub
or
ja
fdivrp
pop
pop
mov
loopne
xchg
xchg
test
adc
ret
cltd
or
or
push
addb
into
loopne
lds
pop
flds
mov
ficomps
pop
scas
data16
fisubs
das
jns
mov
push
dec
mov
xchg
mov
mov
std
notl
mov
and
push
add
add
fisubs
dec
pushf
mov
lods
test
stc
cli
mov
stos
fsubrp
xchg
fisttpl
into
pop
out
push
mov
or
xchg
rolb
movsl
mov
sarl
fucomip
xor
ret
fsubrp
addr16
insl
mov
ficomps
enter
and
mov
fs
mov
fmulp
lock
gs
fcomp
fiadds
das
add
jge
icebp
aad
mov
aad
cmp
jg
sbb
shlb
aaa
das
sbb
jecxz
pop
adc
and
xor
popf
lret
or
sbb
or
testb
xor
pop
pop
inc
loop
fstpl
inc
ds
push
dec
stos
inc
into
stc
cltd
repnz
fisubrs
std
clc
sbb
in
or
cmp
fstpl
movsl
pusha
jmp
xchg
push
out
insb
fisubs
mov
popf
js
mov
sbb
xchg
inc
popa
cs
sub
mov
xchg
lret
in
repnz
rcll
sub
push
fidivrs
mov
fidivs
push
jle
fdivp
cmpb
addr16
mov
ss
cmp
and
xchg
push
xchg
testl
lea
jg
jmp
test
lret
add
or
pop
add
fiadds
shlb
adc
cmpsl
mov
fidivs
inc
rcrb
int3
sub
cmp
fidivs
in
xchg
fisubrs
jmp
add
sub
mov
lock
data16
stos
idiv
inc
adc
sub
adc
sub
fiadds
cld
repz
cmp
mov
addr16
fimuls
dec
jecxz
sbb
subl
sarl
test
and
adc
nop
dec
push
dec
sub
cmp
sahf
pop
mov
ljmp
fistps
add
mov
shl
mov
xor
xor
push
insb
ret
rorl
loope
sbbb
xlat
mov
stos
cmpsl
cwtl
mov
push
adc
and
mov
movsb
fidivrs
or
fisubrs
mov
pop
sub
out
mov
mov
xchg
ja
out
loope
lock
shll
mov
daa
add
iret
and
mov
push
insb
inc
mov
pop
sub
fisubrl
ficoms
sub
jae
enter
xor
and
mov
scas
fiadds
jne
test
lret
into
mov
icebp
ds
rcr
addr16
jne
out
add
sarb
mov
pop
jbe
lds
sbb
pop
jl
loop
push
sbb
mov
jg
cld
aad
push
pushf
jmp
fidivs
mov
mov
xor
repz
dec
movsl
imul
mov
cmp
sti
fidivs
mov
xlat
fsubp
cmpsl
ss
mov
mov
test
pop
jno
loop
pop
jo
lods
jp
pop
fiadds
and
lcall
push
aad
jl
into
and
mov
xchg
fisubs
fsub
cmpsb
adc
mov
aam
lock
mov
jae
inc
fisubs
mov
popf
in
es
out
and
int
pop
pop
das
shll
xorl
adc
push
mov
out
call
std
inc
sbb
cmp
leave
ficomps
jne
sub
dec
or
xor
ret
and
in
sub
lds
inc
mov
sub
mov
push
add
test
les
fiadds
fiaddl
scas
sub
add
pop
jb
fidivrs
cmp
xor
popf
inc
sti
repz
aaa
fisubs
add
xchg
jge
js
jmp
fmulp
lret
sbb
mov
jecxz
in
mov
fbld
std
cmp
repnz
nop
ret
mov
cmp
cmp
xor
adc
sub
mov
insl
and
mov
mov
xor
pop
fcompp
inc
loop
sbbb
jge
leave
je
fidivs
cs
mov
fdivrs
aas
sahf
dec
aaa
lcall
sbb
push
jp
ret
ficoms
mov
sbb
pusha
and
pop
or
push
xchg
and
lock
shrb
fisubs
imul
push
fidivrs
cmp
fidivrs
pop
rol
fsubp
dec
mov
int
divl
sub
mov
adc
je
push
pop
call
imulb
pushf
and
dec
or
sbbl
jp
jge
inc
ficomps
decb
inc
in
inc
cmp
lcall
push
sub
sbb
adc
jb
pop
fisubs
es
inc
and
lock
pop
ja
sahf
hlt
mov
mov
adc
mov
dec
or
enter
mov
dec
das
xchg
fidivs
in
sub
rcrl
xchg
into
outsb
lea
push
movsl
lahf
mov
out
push
aam
clc
mov
add
mov
lods
add
ss
lret
out
arpl
push
out
push
fidivs
fisttpll
fmulp
gs
out
cmpsl
ds
pop
lods
cmp
pop
scas
mov
xor
push
popf
ficomps
xchg
sub
mov
mov
daa
mov
xor
fimuls
xchg
pushf
mov
cltd
mov
xchg
loopne
jle
jecxz
mov
sbb
add
pushf
mov
cld
cmp
test
xlat
rcr
mov
push
leave
std
pop
inc
xchg
jbe
jp
dec
ret
xchg
pusha
jge
mov
lods
stc
sbbl
enter
ret
mov
ficoms
mov
dec
fimuls
xchg
stos
sbb
mov
cmpsl
xlat
and
test
add
mov
jae
jle
lds
pop
dec
dec
fwait
rol
repz
inc
hlt
mov
fidivs
xor
xor
mov
cwtl
dec
aas
pop
rcl
mov
outsb
cmp
mov
stos
push
inc
sbb
and
mov
pop
inc
xchg
xor
jns
out
or
cmp
fiaddl
daa
ficomps
insb
jbe
push
scas
aaa
fisubrs
std
xchg
jnp
push
loopne
ret
enter
xor
pop
faddl
mov
xchg
mov
test
fimuls
sbb
mov
gs
or
cmp
mov
outsb
mov
push
adc
mov
cs
inc
in
and
cmp
aas
push
aaa
fdivrp
mov
insl
mov
push
fiadds
mov
rcr
sub
pop
sar
jo
cld
push
arpl
mov
fimuls
repz
faddp
mov
inc
imul
or
fisubs
xchg
lods
jl
ljmp
sahf
js
shrl
lret
imull
ficoms
jne
or
fiadds
xchg
jge
mov
les
call
and
add
jo
jae
test
int3
mov
mov
popf
mov
pop
pop
negl
sbb
loopne
jne
das
in
dec
xchg
adc
fisubrs
je
inc
xchg
dec
push
popf
dec
and
lcall
hlt
jmp
cmp
pop
pop
int3
jne
repnz
dec
popa
sbb
cmp
jge
fdivr
dec
push
jo
lds
and
push
push
fidivs
lahf
jecxz
stc
imul
test
push
pop
fsubrp
aas
lcall
add
pop
mov
ja
enter
iret
jg
dec
lahf
inc
xchg
aad
dec
pop
sti
or
stc
ret
inc
xor
adc
fsubrp
imul
pop
mov
test
nop
sahf
mov
ret
test
dec
cmp
xor
fidivrs
pop
lret
inc
ret
in
sbb
mov
mov
mov
xor
fsts
mov
push
inc
fidivrs
cli
dec
leave
std
dec
test
ljmp
dec
out
fidivs
into
xchg
pop
shrl
mov
addb
cmpsl
fiadds
mov
test
xor
ret
pop
mov
push
dec
sbb
ret
jno
into
and
push
lahf
cld
sbb
jmp
sbb
add
js
nop
lods
pop
cmpsl
add
sbb
mov
fisubs
pop
jg
mov
loope
outsb
jo
int
outsl
sub
sub
adc
test
fiadds
out
fs
sbb
pop
pushf
cld
shl
push
les
xor
scas
xor
loop
les
in
mov
sbb
scas
dec
ret
cltd
ss
leave
jecxz
ljmp
cmp
fsubp
or
cld
dec
pusha
dec
mov
fisubrs
mulb
enter
xchg
int3
mov
insb
add
inc
popa
jb
outsl
dec
push
fisubrs
mov
push
aaa
jle
in
aam
rol
add
push
inc
xor
imul
push
cld
push
xchg
nop
jg
fiadds
fsubs
mulb
adc
dec
arpl
in
ficoms
sub
scas
das
lods
fisubs
out
pop
fsubrp
lret
push
jmp
fsubp
add
push
jge
pop
mov
ficoms
sub
mov
dec
sbb
jle
sub
dec
or
fisubrs
push
mov
xchg
jae
lret
jg
aad
test
adc
out
bound
std
xor
data16
roll
add
test
adc
fimuls
cmp
into
pop
sti
lock
or
and
ret
lret
mov
sahf
jmp
ror
iret
popa
fdivrp
and
jl
adc
xchg
pop
pop
push
fimuls
add
push
sbb
into
add
aam
jnp
fidivs
in
imul
or
movsb
jae
mul
fwait
jl
adc
cmp
stos
xchg
xchg
xor
push
and
fisubrs
or
pop
add
jae
or
fistps
jb
ret
mov
mov
sbb
inc
imul
out
loope
outsb
loopne
mov
fmulp
mov
out
xor
ds
arpl
xor
insb
mov
mov
shr
fisubrs
or
push
push
enter
fidivs
adc
or
insl
xor
mov
and
dec
aas
mov
mov
icebp
jle
jecxz
add
add
mov
cmp
outsb
mov
loop
cmp
mov
jae
shlb
insl
dec
and
adc
outsl
pop
sub
push
leave
pop
ljmp
pop
and
repz
sub
dec
jo
cld
xor
push
add
push
mov
inc
cmpsb
fiadds
out
setle
jmp
into
xor
or
xlat
jno
in
jp
lahf
xchg
pop
lods
movsb
mov
xchg
pmaxub
fldt
cmp
push
adc
and
xor
test
movsl
lret
dec
pop
sbb
fdivrp
push
out
inc
push
fdivrp
repz
es
jnp
add
dec
insb
into
jae
dec
add
cmp
inc
mov
fidivs
jno
mull
test
fistpl
stc
out
sbb
enter
sbb
dec
loopne
mov
or
xchg
jecxz
cld
mov
leave
fcomps
mov
fsubrp
dec
sbb
gs
repnz
xor
push
ja
fsubp
lret
and
sbb
mov
mov
xchg
xchg
adc
out
popf
mov
or
test
test
pop
bound
dec
std
xchg
addr16
sbb
and
sbb
fisubrs
adcl
js
mov
fiaddl
ret
mov
lods
fisubs
in
call
std
mov
std
mov
mov
fbld
inc
fisubrs
fnstenv
inc
sbb
std
insl
in
aas
and
push
loopne
das
jp
cmc
ret
hlt
dec
pusha
into
ret
lods
sbb
sbb
mov
imul
mov
jnp
sbb
mov
mov
or
movsb
lea
ret
faddp
xor
sbb
push
jl
xchg
test
out
in
push
sbb
lock
fimuls
mov
adc
cmp
lahf
lods
lret
fcmovu
or
pop
out
mov
jg
push
jae
mov
icebp
pop
sub
fisubs
out
adc
jle
mov
cmp
cmp
mov
adc
fmul
fisubs
rcll
pushl
xchg
inc
xor
and
cltd
push
sbb
sbb
stc
inc
aam
das
orl
mov
fisubs
mov
xchg
std
xchg
in
pop
hlt
stc
int3
pop
mov
fidivrs
out
loopne
or
into
popa
xchg
push
sbb
adc
cmp
xchg
fisubs
or
jmp
sub
ftst
cmp
fimuls
jbe
mov
inc
jle
nop
xor
test
ficomps
sti
cmpsb
std
aaa
adc
add
xchg
arpl
push
fidivrs
scas
pop
fwait
sbb
out
pushf
jae
std
and
dec
cltd
add
cmp
pop
cmp
cs
dec
daa
fimuls
stc
xchg
sub
es
gs
loope
imul
xchg
das
fiadds
mov
ficomps
mov
inc
cmpsb
mov
sar
cmp
popf
test
icebp
fisubrs
lret
cmp
xchg
in
les
add
mov
push
loop
call
inc
dec
add
lret
mov
and
lahf
sub
ret
fiadds
ds
add
dec
fisubrs
out
into
icebp
cld
cld
loop
pushf
aam
jae
sub
inc
add
sbb
xchg
xchg
lcall
cmp
sbb
fwait
aam
test
cmpsl
leave
pop
inc
cmpsb
xor
push
sarb
push
adc
cmp
les
pop
or
leave
fisubs
hlt
jbe,pt
adc
fdivp
jno
imul
jge
ficoms
and
mov
scas
test
aas
pop
fidivrs
out
pop
jl
rorl
fisubrs
or
mov
mov
bound
mov
pop
pusha
loopne
sbb
ficoms
fidivl
cmp
fisubs
jno
and
lahf
inc
adc
cltd
test
ret
mov
fstpl
fidivs
add
or
ljmp
fnstenv
mov
xchg
loop
pushf
sbb
add
push
lds
xor
push
jl
jmp
ds
pop
mov
sbb
es
sub
add
sti
sbb
call
ficomps
mov
stos
fsubrp
xchg
imul
fcoml
and
bound
ficomps
int
fimuls
movsl
lods
flds
add
xchg
out
mov
push
cmp
fidivs
mov
insl
jno
movsl
cld
inc
mov
ret
idivb
mov
fimuls
es
and
fidivrs
inc
fldl
sbbb
dec
pop
jmp
das
mov
fiadds
jne
xorb
loop
into
out
mov
jg
lcall
and
and
push
in
xchg
push
sti
scas
sbb
les
dec
mov
jle
mov
dec
jo
leave
adc
stc
mov
test
fimull
mov
ficoms
daa
fdivr
dec
test
mov
lods
ljmp
inc
stos
inc
aaa
dec
fdivrp
pop
inc
sbb
scas
cwtl
fisubs
adc
insb
div
xchg
out
fdivrp
pop
fs
iret
inc
ja
pop
xor
adc
fstps
cmp
add
in
sahf
sbb
dec
mov
adc
out
cmpl
xchg
sbb
sub
mov
scas
mov
popf
fisubrs
fsts
or
mov
ficoms
scas
dec
pop
jecxz
lods
fisubrs
xchg
push
out
pop
add
xlat
into
into
pop
fs
mov
or
xlat
nop
add
xor
fisubs
dec
cmpsb
cmp
sub
std
inc
shrl
fildll
or
jo
fiadds
stc
xlat
mov
inc
push
sbb
cmp
das
xorl
push
pop
mov
nop
lock
fcomps
fsubrp
clc
add
aaa
push
inc
in
push
push
xchg
ret
gs
jg
sub
ret
loope
je
int
mov
fimuls
adc
pop
jle
mov
sti
cs
pop
pop
sbb
repnz
ret
scas
xor
ja
call
pop
inc
fidivrs
inc
stos
fcmovu
cmpsl
cltd
jns
and
jo
inc
cmp
sbb
or
push
fsubl
pop
jmp
inc
add
mov
push
xchg
fsubrp
out
hlt
push
pusha
icebp
int3
loop
mov
mov
std
inc
lcall
or
fidivrs
mov
fs
out
outsl
sub
test
lock
mov
fisubs
xor
adc
or
inc
ss
jno
adc
sahf
push
pushl
push
mov
out
ficomps
pop
std
enter
push
ficompl
adc
mov
cmpsl
inc
fldt
cld
aas
fidivrs
xchg
pop
push
rorb
pop
mov
gs
jle
aas
add
cmpsb
mov
xchg
stos
dec
in
aad
test
add
sbb
leave
data16
jbe
incl
ds
mov
cli
xchg
dec
cmp
lret
fwait
cmp
xor
fisubs
clc
xchg
dec
outsb
fidivs
pop
mov
sarb
xor
js
jne
inc
inc
fisubs
xor
mov
pop
sbb
sahf
xchg
bound
enter
fdivrp
pop
cmp
pushf
mov
sub
add
cmpsl
cmc
loopne
imul
xchg
andb
dec
fsubr
mov
inc
fmulp
in
mov
push
int3
jns
add
push
pop
push
sbb
mov
popa
stos
cwtl
sub
jl
cmp
adc
sbb
imul
imul
hlt
pop
mov
ljmp
pop
fisubrs
out
bound
in
shll
divl
jmp
inc
xchg
jle
xchg
scas
xchg
in
lret
inc
outsl
push
fsubp
mov
adc
std
adc
jbe
fiadds
enter
imulb
enter
sbb
fucomp
pavgb
loope
jle
ja
int
cmc
fimuls
cmpsl
mov
mov
out
loop
pop
ss
and
sbb
outsl
in
pop
push
int3
sarb
imul
mov
or
sub
out
cli
or
dec
ret
xchg
into
add
mul
cmp
fdivrp
fdivl
and
daa
or
out
pop
hlt
xchg
out
adc
sbb
std
pop
cmc
movsl
jle
rcr
sbb
xchg
jl
ficoms
jb
and
fiadds
pop
movsl
push
loop
addb
or
pop
add
rolb
test
ja
ja
cmp
inc
pusha
fnstsw
out
xchg
pop
arpl
jo
int
fisubrl
lds
dec
push
ficoml
or
pop
outsl
into
dec
data16
mov
rcll
cmp
shrl
outsb
ret
pop
jne
neg
aaa
dec
push
jecxz
mov
mov
jbe
jae
lds
adc
into
xor
test
add
fmulp
movsl
ficomps
test
pop
sub
inc
outsl
fcmovbe
aas
ficomps
sub
cmp
loopne
fidivs
pop
cmpsl
sar
mov
stos
xchg
sbb
jle
cs
mov
fimuls
adc
mov
repnz
push
mov
insb
jnp
in
xor
xor
cmp
xchg
adc
adc
sub
lock
cmp
mov
xchg
lret
lods
lods
push
fstps
out
cmp
out
push
and
jp
lea
lods
jg
adc
pop
or
dec
out
mov
imul
inc
sub
arpl
xchg
aad
dec
fiadds
sti
inc
test
sbb
xchg
xchg
dec
ret
sbb
fnsave
add
add
jl
jp
push
shlb
iret
aaa
ficomps
lock
test
mov
loope
inc
and
ja
iret
add
outsl
jns
push
fsubrp
imul
shl
into
mov
fisubs
mov
adc
xor
sub
dec
sbbb
cli
mov
jmp
pushf
mov
cmpsb
inc
mov
push
cmp
fidivl
into
adc
jmp
lea
jo
mov
fiadds
xchg
or
mov
or
sbb
gs
jle
lock
pusha
mov
mov
movb
hlt
and
int3
inc
and
or
sbb
fimuls
dec
dec
pushf
fidivrs
mov
cli
dec
ficoms
in
jmp
shll
xchg
sub
and
jae
faddp
addr16
rclb
mov
xchg
jp
pusha
cld
mov
std
cmp
fisubs
mov
arpl
mov
jmp
std
push
hlt
lods
out
rolb
pop
pop
repz
add
fisubrs
fs
pop
jne
jle
cmpsl
insl
aam
mov
adc
clc
fidivs
or
xchg
into
ret
pop
sbb
arpl
aas
fidivrs
in
out
xchg
aaa
adc
mov
fisubs
sahf
xor
mov
mov
pop
pop
inc
into
ss
lahf
dec
mov
mov
lock
faddp
push
fadds
into
insb
cmpsl
addr16
ja
add
cltd
mov
ds
addl
dec
pop
mov
push
lock
repnz
sub
fiadds
jle
stos
popf
gs
cld
rcll
cmp
xchg
int3
pop
push
add
push
push
call
sarb
das
in
jge
and
leave
into
or
ljmp
mov
out
pop
call
mov
and
incb
out
fidivrs
inc
sub
fisubrs
inc
or
jle
pop
ficoms
xchg
mov
fsubp
lcall
mov
ja
mov
negb
inc
ficomps
movsl
xchg
std
icebp
addr16
push
enter
adc
imul
fisubrs
dec
jae
sbb
fs
lea
icebp
adc
pop
fisttpll
or
fidivrs
push
dec
fidivrs
mov
ficomps
mov
pop
cmp
and
mov
mov
fistl
les
retw
insb
mov
jo
fiadds
pop
sbb
cmp
pop
xor
mov
jo
into
mov
ret
mov
fisubs
das
jae
fimuls
jo
xor
dec
rcr
or
mov
sbbl
incl
sbb
cmp
aad
pop
rcrl
xchg
push
repz
loopne
aam
sahf
inc
mov
pop
adc
pop
out
aaa
lcall
andl
add
mov
jae
sbb
ficoms
mov
adc
cwtl
jle
aam
jns
out
adc
inc
fimuls
lcall
push
fidivrs
call
insl
mov
lods
jmp
jne
jge
mov
into
call
ficoms
lret
faddp
jmp
movsb
lret
mov
ja
push
je
scas
test
xchg
loopne
imul
iret
jmp
arpl
mov
jle
pushf
clc
out
ja
in
pop
pop
adc
fisubs
pop
adcl
mov
sbb
xor
imul
cmc
js
fisubrs
push
pop
xchg
xchg
lahf
mov
mov
sbb
inc
inc
mov
in
call
imul
jns
enter
cld
jg
mov
lret
jo,pt
fdivrp
fstpl
jne
fisubs
mov
push
mov
dec
inc
mov
lods
outsl
fimuls
lret
out
pop
inc
fcmovnu
into
or
cs
mov
jle
pavgb
dec
cmpsl
shlb
cmpsb
je
xor
fistpll
mov
insl
cmpsl
ficomps
xchg
cmp
ficoms
loopne
lahf
inc
and
fiadds
into
add
xchg
andl
add
out
loop
xchg
pop
repz
cltd
es
push
push
shlb
int
shrb
mov
insb
adc
jle
cld
ficomps
dec
pushf
pop
or
push
mov
and
std
int
ret
fsubs
xor
incl
lcall
stos
ficoms
add
cli
scas
enter
cmp
cmp
cwtl
mov
pusha
ret
fcmovu
movl
icebp
fisubs
hlt
push
aad
xor
sub
frstor
je
cwtl
sbb
aas
aam
mov
dec
fdivp
xchg
mov
xchg
std
test
in
xchg
rol
out
fimuls
xchg
xor
int3
rcr
aad
in
jb
mov
fiadds
nop
push
outsl
adc
dec
je
pop
xor
in
mov
pop
in
push
arpl
ret
push
inc
int
scas
fldenv
sbb
mov
xlat
or
pop
ljmp
sub
fstpl
fs
dec
pop
add
mov
iret
xchg
inc
mov
cmp
clc
fistpl
cmp
shlb
mov
xor
ficoms
mov
jle
push
loope
ljmp
sub
jae
cmpsb
sbb
stos
fsubrs
out
into
xchg
mov
cli
mov
fnstcw
jne
in
cld
and
push
or
dec
std
mov
xor
inc
ret
xor
in
pop
leave
mov
imul
adc
mov
mov
push
dec
loopne
test
sahf
enter
aas
jo
adc
pop
inc
adc
stos
sbb
xchg
out
imul
sbb
jae
loop
ficoms
in
cmc
mov
pop
xchg
xor
lahf
dec
push
mov
roll
push
pop
fidivrs
ja
fidivl
ficoms
sarl
ret
aam
jo
sbb
adc
clc
ljmp
xchg
pop
cld
hlt
out
mov
inc
in
insl
daa
lds
fimuls
bound
insb
add
sarl
mov
loopne
cmp
enter
fidivs
nop
lcall
insl
mov
cmp
mov
fimuls
mov
sub
cmp
fwait
aad
add
mov
fisttps
mov
mov
sub
loop
inc
jo
call
mov
popl
inc
in
sbb
cmp
mov
test
hlt
inc
repz
icebp
cli
push
and
fstl
sbb
in
push
push
pushf
mov
ret
pop
xchg
sbb
in
cli
cmp
fidivs
hlt
out
iret
neg
fidivs
in
pop
sub
gs
cmc
aas
lret
daa
pop
pop
inc
cmp
push
xchg
arpl
jb
fs
rcll
mov
xor
rolb
fdivp
xlat
xchg
inc
je
stos
fidivs
xchg
jae
fisubs
sarb
popf
mov
mov
mov
or
push
das
test
push
push
adc
je
js
dec
jnp
add
mov
jmp
lcall
nop
jns
add
add
and
je
xchg
aaa
mov
fidivrs
popf
jbe
stc
ljmp
jmp
sarb
fimuls
xchg
jl
jbe
add
cld
push
sbb
cmp
jno
xchg
xchg
enter
pop
aas
ficoml
cli
icebp
shrb
add
cmp
imul
packuswb
fidivrl
ficoms
movsb
sbb
xor
call
inc
outsb
arpl
pop
sub
mov
mov
pop
lods
les
mov
int
test
dec
ljmp
in
scas
inc
clc
mov
mov
mov
lahf
xlat
std
aas
rorl
xchg
add
ficomps
pop
fiaddl
dec
cli
aaa
lea
mov
outsl
out
data16
fmulp
movsb
or
aad
or
xchg
mov
les
fisubs
sub
stos
jl
dec
mov
aaa
pop
jge
xchg
out
add
add
jns
sbb
cli
lahf
fisubrs
leave
xorb
lock
add
fsubrs
cmp
push
add
fidivs
test
sub
enter
mov
shrl
fcompp
lea
jle
in
fidivrs
mov
and
pushf
jecxz
repnz
enter
dec
lcall
and
fimuls
pop
movsb
mov
fisubrs
xor
fisubrs
jecxz
pop
in
pop
mov
push
cmp
nop
fimuls
lret
lods
inc
sti
cmp
xor
std
push
scas
int3
rcr
shll
push
fidivs
popa
sbb
jg
xchg
mov
xchg
into
notl
rcr
mov
cmpsl
push
fisubs
and
cli
and
pushf
and
inc
nop
fisubrs
push
scas
fmulp
jg
and
xchg
push
xchg
fimuls
push
out
fisubs
lea
les
push
pusha
jns
mov
sub
pop
add
ficoms
pop
mov
pop
js
mov
loopne
clc
xchg
test
jnp
sub
stc
xchg
test
or
fiadds
aas
repz
mov
xchg
aam
pop
cmpsl
mov
sub
lds
pop
aaa
jne
fsubrs
std
mov
stos
test
mov
jmp
add
cmp
xor
pop
push
lock
fidivs
stos
aad
inc
jae
xor
jg
shr
or
mov
xchg
ds
out
fisubrs
lods
das
dec
jg
inc
fisubrs
inc
insb
fdivrp
jae
jmp
fisubrs
xchg
add
mov
push
ds
lret
test
into
inc
in
push
in
dec
leave
ficomps
aaa
push
aas
lods
shrl
and
ficomps
sahf
popa
mov
cwtl
or
in
ret
jecxz
fidivs
add
imul
pop
fwait
and
enter
add
fimull
ret
lock
or
sarb
insb
cmp
dec
fiadds
ja
scas
in
and
ficoms
add
test
jmp
adc
int3
jmp
sbb
test
imull
aam
push
icebp
jmp
stc
pushf
cmp
and
xor
push
or
sbb
mov
insb
dec
fsubp
or
dec
adc
and
cli
sahf
pavgb
js
outsl
mov
cmp
lret
mov
xchg
cmp
aam
mov
mov
icebp
sbb
sahf
lea
fimuls
stos
push
cmp
arpl
xchg
sub
in
fiadds
xor
fisubrs
arpl
jno
fidivs
cwtl
lods
dec
ds
addl
ficoms
test
gs
xor
fidivl
outsb
lret
fiadds
dec
xchg
movsl
popa
lods
fiadds
fwait
test
and
fisubrl
fiadds
addr16
in
jmp
dec
sub
push
shlb
test
ficomps
and
adc
sbb
movb
mov
mov
lcall
sarb
mov
sarl
fs
jne
nop
testb
fdivrp
mov
ficoml
cmp
or
sbb
or
data16
jbe
inc
lea
faddp
test
sub
cli
sbb
or
push
shrb
fidivrs
pop
sar
add
xor
sbb
dec
mov
xchg
xchg
mov
into
std
jae
add
lret
cmp
js
jp
mov
mov
mov
sbb
faddp
inc
clc
mov
dec
push
xor
jns
lcall
mov
cmp
mov
out
and
sbb
and
jmp
jb
mov
insb
mov
push
shrb
negl
out
xchg
ds
into
inc
inc
and
fimuls
inc
push
jge
lods
mov
dec
in
jno
cmpsb
scas
push
mov
test
lret
and
out
pop
push
faddp
repnz
adc
sti
sbb
fidivrs
test
xchg
stc
sub
std
lock
jg
fcom
dec
inc
and
xchg
lds
ret
lahf
je
push
fcomi
cld
mov
jg
inc
loope
jbe
xchg
int
lahf
ds
inc
mov
sbb
sti
pop
rcll
nop
mov
sahf
pop
ret
fdivp
sbb
and
push
xor
adc
inc
inc
push
fidivs
pop
cltd
fistpll
fdivrp
xlat
repnz
pop
jo
sbb
or
call
mov
arpl
or
ficoms
sahf
fisubrs
or
pushf
cmp
jge
push
sbb
lock
fsubs
cli
mov
rcll
push
sub
add
mov
bound
imul
push
xor
mov
rclb
testb
leave
fidivs
push
mov
test
arpl
push
mov
jle
std
mov
gs
fmulp
pop
lret
or
sbb
push
sbb
add
popa
inc
fs
enter
inc
sarb
shl
insb
mov
push
clc
add
dec
rolb
pop
sub
ja
fimuls
jbe
add
aas
mov
rcl
ret
roll
jmp
dec
std
and
sbb
mov
mov
xchg
ret
push
adc
push
fcmovb
lret
call
pop
mov
fidivrs
dec
clc
je
mov
mov
inc
sub
fidivrs
mov
mov
adc
dec
ds
mov
ficomps
xchg
sub
clc
in
add
fidivrs
jmp
push
enter
movsb
xor
adc
in
fiadds
leave
outsl
in
jo
xor
popf
pop
push
fcoms
mov
cwtl
mov
aas
xchg
ret
out
add
fcomps
or
shll
imul
push
mov
fisubrs
in
popf
jne
out
loop
cmp
in
into
cltd
sbb
jae
or
inc
dec
testb
pop
scas
pop
lcall
loopne
ss
cmp
shlb
fimuls
adc
dec
push
fiadds
xor
test
stc
pop
fimuls
pop
and
cmp
or
decl
ret
mov
mov
insl
in
add
add
and
xchg
mov
pushf
cmpsl
fisubrs
push
cltd
ficoms
mov
xlat
fimuls
insl
pop
dec
push
dec
sub
sbb
scas
faddp
jo
insl
adc
cld
das
jle
xor
xchg
xchg
test
mov
xor
inc
pushf
or
pop
pop
fdivs
loop
pop
pop
pop
aad
jle
in
or
xor
fisubs
aaa
clc
sarl
fdivrs
push
sarb
aam
and
insl
movsl
xchg
cmp
sub
jg
cmpsl
ficoms
lret
es
adc
jae
sub
pop
or
fs
fdivp
popf
stc
aaa
outsl
div
imul
xchg
imulb
fimuls
aas
decb
ret
outsb
inc
pop
fsubp
std
lcall
imul
xchg
mov
sbb
jne
iret
repz
fistpl
out
xchg
sar
test
mov
test
or
pop
fisubs
xor
pushf
neg
push
fidivrs
test
xchg
rorl
ljmp
lcall
outsl
xor
cli
ja
clc
into
pop
xor
fsubl
xchg
xor
mov
hlt
xor
cmpsl
xor
aam
add
sbb
fidivrs
sub
insl
lret
dec
fidivrs
loop
sub
in
mov
xchg
fidivrs
pusha
dec
adc
xchg
mov
jns
scas
dec
inc
xchg
iret
mov
xchg
in
sbb
std
hlt
ja
cmpsl
rdmsr
fisubs
mov
stos
sbb
cld
lods
ret
clc
lea
out
mov
std
hlt
shrb
mov
or
movsb
mov
sahf
das
push
dec
pop
pop
cmpsb
fstpt
sub
fists
mov
dec
fidivs
xchg
or
jge
je
jl
shl
pop
cs
lahf
mov
mov
lock
sbb
fimuls
add
jge
mov
push
in
arpl
in
imul
sarb
jge
add
imul
pop
std
inc
insl
mov
xchg
mov
repnz
sub
icebp
mov
into
xchg
push
jp
add
pop
clc
and
inc
loop
mov
stos
insb
cmp
xchg
data16
jecxz
loope
xlat
mov
shl
fimuls
shlb
pusha
ss
in
fiadds
repz
fidivs
hlt
mov
out
int3
sbb
leave
xor
sbb
jo
fisubs
out
dec
aam
data16
mov
les
mov
and
push
mov
dec
sbb
mov
pop
inc
nop
divb
mov
mov
popa
adc
dec
push
arpl
fidivrs
mov
fidivrl
adc
mov
in
pusha
jle
sbb
lea
mov
cld
pop
out
adc
jmp
mov
sahf
clc
sub
jl
mov
mov
cs
mov
and
aas
sub
sbbb
dec
sbb
dec
outsl
xor
sub
sbb
adc
cmp
movsb
fisubrs
cmp
lahf
fisubs
and
pop
pop
pop
pop
ljmp
cmpsl
stc
mov
fiadds
inc
jmp
fisubrs
repz
ficomps
adc
add
dec
dec
mov
bound
sahf
ret
cltd
cmp
cld
mov
in
fisubrs
mov
add
inc
xor
cltd
ficoms
mov
inc
sahf
sbb
fwait
mov
imul
add
in
xor
sahf
mov
xor
pop
arpl
mov
dec
sbb
cwtl
xchg
loopne
aam
dec
into
sub
dec
fidivrs
xor
lret
sbb
mov
inc
mov
mov
repz
or
mov
daa
inc
loopne
fimuls
dec
push
dec
insb
addr16
dec
sahf
scas
and
jge
dec
repnz
pop
xor
pushf
iret
adc
insl
adc
inc
rcr
aam
test
ja
push
aas
das
sub
or
outsb
add
pushf
add
dec
push
xchg
shll
mov
and
loop
inc
or
ror
and
stos
sub
js
cmp
jg
in
push
daa
lds
fiadds
cli
cmpsl
lret
addr16
add
out
or
jmp
leave
jle
xor
jo
int
push
js
push
mov
xchg
fdivl
ljmp
fidivrs
push
mov
cvtps2pd
cmp
cmc
jle
mov
cmp
jb
xor
into
dec
ja
inc
xor
mov
inc
mov
add
addr16
jle
sbb
push
jae
jle
int
in
frstor
fiadds
negl
inc
adc
in
mov
das
fidivrs
pop
fidivs
mov
fidivs
xor
incb
ljmp
mov
adc
lcall
fmulp
cmp
push
jno
stc
dec
pop
inc
lds
je
and
imul
fmulp
lret
pop
ficoml
mov
test
ja
push
aaa
ljmp
or
inc
push
pop
loop
cltd
ja
mov
js
mov
xchg
ret
sti
or
sbb
fidivs
fidivrs
jmp
or
push
sbb
adc
mov
les
fwait
lret
outsb
adc
into
dec
flds
sub
fidivs
es
std
pop
movsl
adc
and
rolb
xchg
dec
fsubrp
sbb
mov
push
sbb
mov
fadds
or
pop
repz
xor
negl
cmpsb
call
faddp
cli
fistps
xchg
imul
aaa
mov
ficoms
jne
bound
push
out
mov
data16
inc
mov
fidivrs
loopne
or
fisubs
mov
popa
add
jge
dec
push
push
adc
xor
mov
in
lods
fsubp
outsl
je
int
es
lds
pop
mov
xchg
xchg
pop
test
sbbl
xor
lods
scas
push
jg
jge
mov
xchg
stos
mov
inc
ficomps
das
mov
into
pop
cmp
popf
cs
rcr
xlat
adc
call
jecxz
lret
mov
xchg
and
ror
je
cmovl
fs
dec
pop
mov
mov
mov
mov
cwtl
out
sub
push
inc
and
outsl
ficoms
xor
ficoms
fstps
std
stos
ss
fidivs
pop
arpl
mov
scas
push
push
scas
fmuls
fimuls
cmp
pop
lcall
mov
lods
adc
mov
in
shl
sahf
into
nop
cmpsl
sbb
cmp
dec
cs
rorb
mov
or
gs
fsubrp
push
mov
push
aaa
cmp
fisubrs
cmc
aad
loopne
fidivs
fbld
sbb
std
xchg
pop
inc
push
ljmp
test
mov
pop
in
imul
dec
lds
popa
dec
mov
pop
clc
ret
xchg
aaa
dec
ds
mov
jge
cmpl
fiadds
mov
adc
lret
loopne
rorl
push
ja
cmp
inc
sahf
aas
jmp
mov
aam
pushf
sub
inc
push
fiadds
jge
ljmp
repnz
push
push
in
mov
fwait
inc
xchg
popf
imul
jbe
pop
leave
mov
bound
ds
mov
push
add
test
mov
in
testl
fmulp
push
xchg
call
imul
mov
dec
mov
ficomps
xchg
rclb
xor
mov
daa
ficoms
test
insb
out
popf
fisubs
inc
dec
gs
scas
dec
jmp
fidivrs
loopne
das
loope
fisubs
fdivl
or
lret
insl
and
inc
fisubrs
add
fisubs
lods
push
fldl
insb
aam
pop
test
flds
xor
adc
sub
fidivs
dec
xor
inc
and
leave
psrlq
cmp
push
jle
mov
and
xchg
repz
sub
sub
mov
mov
dec
jl
fidivrs
cmp
addb
mov
sbb
loopne
sbb
ficomps
in
jno
std
xchg
pop
shll
cmpsb
sbb
fimuls
rol
or
cmp
push
adc
jb
imul
fmulp
push
cld
out
addr16
push
fiadds
sbb
sub
xor
fimuls
data16
adc
inc
sbb
aaa
popf
cmp
and
stc
fisttpl
adc
push
adc
jl
je
incl
cmc
inc
inc
mov
and
pushf
and
and
ficoms
and
mov
fisubs
dec
adc
push
mov
adc
xchg
add
cmp
fisubrs
fadd
jmp
cmp
shll
sub
dec
push
xchg
sahf
ret
test
xchg
sbb
jle
fidivrl
cmp
sub
push
enter
jle
ja
mov
out
fidivs
mov
fisubs
jnp
xor
jne
add
dec
into
js
int3
cmc
add
call
mov
mov
jmp
or
mov
xchg
jle
mov
ficomps
divb
pop
or
outsb
push
sti
mov
and
inc
and
xlat
jp
fisubrs
dec
jne
dec
lods
add
fsubrp
jb
neg
xor
aaa
fdivp
or
out
decb
sub
add
jnp
lea
aam
jle
push
mov
test
mov
xlat
filds
lret
jne
popf
aaa
mov
fisubrs
push
xchg
cmp
lahf
in
loopne
shr
mov
mov
mov
pop
cld
popl
lods
dec
pop
push
stos
or
cltd
mov
fldcw
xchg
int
cmc
xor
fiadds
pop
adc
popf
and
fisubs
jnp
mov
and
mov
outsl
scas
ds
stos
xor
int3
pop
cmpsl
pushl
sub
rcll
stos
fisubs
fsubr
jecxz
inc
ljmp
sbb
jae
fidivrs
cli
ficomps
jbe
ljmp
cmp
int3
inc
cld
fisubs
pushf
mov
shll
imul
mov
xchg
mov
xchg
in
mov
sub
push
loope
test
lcall
mov
dec
gs
nop
and
xchg
neg
in
outsb
inc
add
ficomps
jnp
arpl
gs
ret
daa
xchg
scas
fiadds
insb
lea
sub
out
fcmovnu
cmp
loop
rcrl
mov
xchg
pop
add
xor
cld
sub
adcb
clc
jo
in
sar
sub
mov
or
int3
sahf
jg
aas
jle
jnp
in
push
mov
pop
jmp
aad
add
xor
mov
sbb
ljmp
inc
clc
dec
je
out
fisubrs
xchg
lret
and
add
xchg
lret
imul
dec
lcall
fmulp
dec
orl
imul
adc
ficoms
add
push
dec
sbb
popa
stos
push
lds
sahf
cld
mov
mov
mov
ret
xchg
or
sub
xchg
das
add
out
mov
imul
fwait
out
movsb
xchg
mov
jl
xchg
or
leave
inc
out
stc
xor
push
fstpl
js
push
outsb
xlat
ficomps
cli
xchg
mov
cwtl
subl
or
aad
fisubrs
and
out
rcl
fisubrs
or
push
pop
xchg
sbb
push
orl
cmp
jge
mov
cwtl
add
std
insb
mov
cmovb
adc
ret
mov
ljmp
xor
test
adc
push
sub
inc
inc
xchg
jg
fiadds
fwait
icebp
jg
mov
xor
xlat
push
xchg
add
popf
bound
cmp
imul
jle
loop
jmp
rorb
or
arpl
and
push
out
out
mov
ds
xor
cmp
fisubs
sub
jecxz
sbb
sub
or
int3
mov
pop
mov
sahf
jl
xchg
stos
in
retw
add
xor
sbb
loopne
icebp
xor
addr16
cmpsb
ficoms
aas
xor
and
xchg
jl
int
jno
sarl
mov
mov
inc
bound
movsl
in
fdivp
sbbb
pop
dec
mov
mov
fcomps
dec
fiadds
jb
nop
inc
shlb
rorb
dec
mov
and
das
cmp
fisubrs
je
stc
ficoms
mov
fcmovnu
pop
lcall
fidivs
cmp
cmp
leave
sbb
ficomps
dec
stos
push
adc
xchg
mov
sbb
ret
movsb
loop
push
or
cmp
jb
cmp
std
imul
ljmp
int3
lret
repz
dec
movsl
pop
fidivs
xor
lds
xchg
push
xchg
int3
sti
pop
xor
iret
fidivrs
pop
xor
ficomps
js
sahf
in
pop
dec
fiadds
pop
mov
pop
and
push
cmp
popa
sub
mov
lret
jns
std
sbb
inc
push
fidivs
fdivrp
cli
std
sahf
aad
fstps
add
push
aaa
jp
repz
or
mov
ss
lret
add
pop
into
rcr
cs
es
aam
cmc
in
jnp
add
dec
ja
je
insl
fiadds
test
mov
jae
jne
xchg
ret
loope
sbb
jl
push
lock
sbb
jo
orb
mov
push
adcl
and
xor
add
jge
lock
push
inc
push
mov
jg
cmpsb
push
loope
fidivs
int
xor
sub
bound
adc
lahf
pop
inc
sub
call
repnz
dec
ret
in
int3
jmp
pop
fdivrp
dec
xchg
scas
pop
push
aad
fiadds
insb
stos
ret
mov
inc
pusha
jecxz
cmpsb
mov
xlat
jne
sub
inc
insl
loope
or
cltd
push
pusha
mov
add
cmp
jnp
pop
std
jmp
hlt
lret
mov
ficomps
sbb
fdivp
aas
dec
mov
fstpt
pop
push
je
mov
flds
sub
std
cmpl
sbb
mov
push
notb
into
icebp
movsl
and
into
fsubrp
add
stos
mov
arpl
dec
push
push
adc
scas
jb
push
lea
fimuls
insl
imul
int3
pop
rcr
add
push
cld
fs
mov
mull
mov
mov
dec
rclb
imul
cld
aas
sbb
push
lret
xchg
stos
inc
pop
aad
jle
sbb
es
insb
mov
repz
and
mov
mulb
or
fisubs
or
popf
sbb
cmp
push
shlb
dec
arpl
and
loop
mov
jmp
bnd
mov
sbb
and
jnp
int
into
call
push
mov
fmulp
popa
sahf
lcall
aaa
aam
mov
mov
imul
insl
add
mov
jle
leavew
icebp
xor
daa
mov
push
dec
les
faddp
out
mov
cmp
sbb
push
ds
lret
sbb
repz
cltd
fimuls
jl
mov
add
mov
arpl
in
xchg
fimuls
xor
jmp
inc
inc
scas
fwait
daa
push
push
fcompp
shl
mov
ficomps
aad
adc
test
pop
inc
mov
dec
fidivs
hlt
ss
lahf
jle
outsl
fucomp
out
enter
std
add
outsb
cmpsl
ficomps
dec
and
jecxz
outsb
mov
daa
and
mov
mov
jl
mov
ud2
fisubrs
insb
outsl
dec
and
add
mov
dec
pop
repz
rorb
sbb
inc
or
imul
fnstenv
push
fsubrp
jmp
fdivrl
fiadds
or
mov
sti
pusha
fisubrs
and
roll
out
stos
cmp
push
push
pusha
inc
jb
sahf
and
fldenv
mov
roll
jp
pop
fdivp
add
or
add
mov
outsl
inc
jne
int3
sbb
pusha
mov
add
fisubrs
inc
mov
adc
mov
daa
rorb
loopne
pop
mov
cmp
lcall
cli
jle
fstpl
cmp
lret
cmp
jne
xchg
into
dec
inc
fnsave
mov
push
ret
rcrl
enter
sub
lea
dec
fimuls
push
sahf
mov
mov
repnz
test
dec
jge
mov
mov
xchg
fcmovu
lods
or
sub
xchg
pop
std
sbb
ja
fiadds
push
mov
xchg
mov
pushf
sti
jne
nop
test
jle
add
js
fidivrs
out
stc
fiadds
shr
fimuls
les
in
loopne
inc
cmpsb
adc
and
aaa
sub
cmp
jmp
mov
scas
xor
fisubs
cmp
and
jb
lods
loop
sub
lds
fmulp
jo
leave
cs
fimuls
pusha
imul
cmpsb
push
push
lahf
std
test
xchg
mov
fmul
and
push
aaa
fisubs
movsl
sbb
mov
and
and
leave
test
sub
arpl
fsub
sub
ret
add
dec
cmc
jge
add
loopne
dec
mov
fiaddl
jg
adc
xchg
int
push
pop
fisubrs
mov
popa
fidivrs
mov
pop
js
aaa
fidivs
movsl
push
fcmovnu
repnz
xor
mov
call
fidivs
inc
insl
mov
and
jecxz
sarl
push
cmp
insl
fimuls
pop
daa
aaa
inc
mov
pop
mov
push
adc
and
popf
int3
mov
faddp
sbb
cmpsl
fisubs
jmp
adc
push
xchg
out
adc
in
jae
push
sub
push
and
rclb
imul
idivb
pop
push
inc
movsl
xchg
fidivs
std
out
mov
push
jno
jle
mov
add
push
fimuls
xchg
xchg
lret
xor
ficomps
in
push
sub
fisubs
mov
iret
cmpsl
aaa
sbb
ficoms
inc
js
shrb
mov
movsb
into
xchg
or
adc
lret
cmp
into
flds
lret
outsl
inc
aad
mov
push
fwait
sbb
push
cwtl
inc
es
mov
test
mov
cli
mov
pop
std
lret
lds
fisubs
mov
lret
fiadds
addr16
mov
dec
divb
nop
in
jmp
fimuls
and
dec
std
sarl
sub
push
dec
push
insb
adc
sahf
cmp
add
cld
sub
not
mov
sahf
add
lcall
out
fistl
ficomps
stos
xchg
jle
orb
xor
sbb
inc
cmpsl
sub
std
or
mov
into
aad
sbb
fidivrs
faddp
rcrb
es
imul
cltd
pop
dec
dec
mov
xor
xchg
movsl
sbb
out
mov
push
roll
dec
mov
or
std
and
insb
fisttps
cmc
scas
movsb
fidivs
insl
xchg
std
inc
loopne
inc
add
inc
push
xorl
int3
es
insl
cltd
dec
mov
xchg
test
adc
mov
icebp
mov
js
cmp
ficomps
and
add
add
ficoms
dec
lret
cmpsl
xor
mov
fsubrp
rolb
inc
and
cmpsb
mov
jbe
jne
mov
xchg
mov
mov
inc
repz
fisubrs
sbb
or
fstps
mov
ja
mov
repnz
mov
mov
pop
inc
in
outsb
loope
in
stos
xchg
xor
inc
add
fidivrs
mov
jno
scas
imul
sub
sbb
imul
sarl
push
je
jge
movsb
push
lock
lret
jb
lds
fisubs
pop
sub
orb
out
sub
adc
stc
rol
xchg
xlat
fdivp
add
push
faddp
inc
sbb
mov
popf
add
fisubs
das
jb
aaa
sub
fimuls
jl
faddp
add
lcall
xchg
push
rcrb
mov
ret
push
jne
sbb
dec
loopne
xchg
mov
mov
pop
and
sbb
into
not
and
xor
xchg
cmpsb
jbe
into
fisubs
pop
ljmp
fsubrp
insb
add
fcmovu
push
pop
pop
pop
ficomps
mov
pop
push
dec
fimuls
xchg
dec
cmp
test
lea
iret
pushf
add
xor
dec
push
add
sarl
ficomps
jbe
pop
xchg
bnd
sti
repz
in
ficomps
aam
sbb
jle
push
ret
addl
push
mov
push
jle
mov
shl
std
into
jecxz
mov
add
jp
movsb
orb
aas
mov
mov
pop
bnd
or
push
push
or
xchg
pop
data16
test
out
cmpsb
jge
inc
test
mov
movsb
fistps
cmp
fisubrs
iret
or
jl
cli
mov
push
popa
jb
lahf
pop
dec
outsl
or
aad
sub
iret
fisubrs
fwait
xor
and
xchg
pop
xor
icebp
xchg
jne
adcl
loop
loope
push
int
push
add
ficoms
fucomi
fdivrl
aad
ficomps
push
mov
jp
sbb
lahf
cwtl
ret
nop
sub
sub
cmp
pop
mov
inc
add
fimull
cltd
test
scas
mov
xlat
cmpsb
lock
das
cmp
lret
rorb
fdivp
push
mov
xchg
jp
mov
push
ja
int3
xor
cmpsb
xor
and
mul
ljmp
mov
cli
xchg
xchg
mov
sahf
in
ss
rcrl
pop
sub
push
shlb
hlt
sbb
ficoml
mov
add
mov
cmp
ss
loop
pushf
arpl
test
fiadds
scas
lods
out
loop
mov
out
xor
fcoml
pop
ficoms
popf
jo
fs
or
sbb
movsb
cmpsl
jg
mov
insl
clc
fdivrl
mov
in
lret
xchg
fimuls
and
fidivrs
dec
shl
mov
xchg
push
jmp
aad
jle
xor
nop
sbb
mov
mov
mov
fidivrs
jge
into
outsb
sbb
cmp
cli
jge,pn
or
lcall
mov
jmp
andl
cmp
fwait
and
adc
clc
mov
dec
dec
cmc
es
mov
sahf
aad
cld
inc
adc
rcrb
mov
xor
imul
dec
and
out
xor
in
test
leave
xor
sub
mov
pusha
xchg
ficoms
fisubs
jno
sar
ficomps
pop
fsubrl
sub
out
sar
int
pop
add
in
pop
mov
in
xchg
inc
add
out
mov
jns
sbb
fiadds
or
ficomps
enter
scas
int
mov
mov
loopne
loope
frstor
mov
add
insl
stos
movsb
push
inc
fdivrp
dec
stos
test
xchg
fisubrs
sti
test
fbld
ja
cmp
movsl
stc
add
mov
pop
outsb
and
lcall
lods
mov
cs
cltd
loop
sub
rcr
in
mov
and
sahf
test
mov
adcb
dec
fstpl
push
mov
mov
push
repz
add
ficomps
push
push
jo
xchg
std
notb
mov
fucompp
mov
mov
fsubl
fdivp
xor
xchg
inc
or
xchg
ficoms
jno
in
jmp
inc
lods
and
pop
andl
inc
cmc
out
lret
roll
jle
cmp
lret
jb
jecxz
fiadds
movsl
pop
or
add
jo
enter
sub
mov
inc
jae
sbb
scas
mov
mov
mov
dec
pop
mov
outsb
jne
adc
lds
ficomps
mov
cmp
fstpl
dec
ficomps
pop
push
jg
std
es
push
jne
xchg
dec
or
jle
mov
vpor
fiadds
lds
and
cmpl
jbe
and
inc
adc
loopne
xchg
ret
bnd
fsubrp
std
or
adc
lea
pop
xor
ljmp
pop
loope
inc
mov
xchg
cli
shrb
movsl
fstp
cmpsl
iret
xor
in
call
js
test
or
mov
mov
fidivrs
mov
test
setge
in
inc
fsubrp
or
mov
adc
inc
cltd
fxch
sbb
and
push
jl
lret
inc
jle
dec
out
icebp
push
lods
rclb
mov
into
mov
into
test
fs
ficomps
pop
push
aam
aas
mov
cmpsb
pop
mov
test
cmp
fisubrs
dec
or
aaa
push
fstpt
sbb
mov
mov
adc
lahf
jb
mov
daa
lock
sbb
sub
fcmovnu
cmpb
mov
popw
push
or
aas
out
adc
fidivs
shlb
jle
jle
push
loope
ret
cmpsb
inc
mov
fildll
sbb
fimuls
cmp
and
or
mov
xchg
inc
mov
pop
stos
fidivrs
xchg
insl
cltd
pop
or
aas
mov
mov
into
out
loope
inc
fdivp
sub
mov
clc
sbb
ret
test
jge
int3
aad
adc
loope
xchg
inc
popa
push
push
push
mov
lods
cmpsb
xchg
cmp
xor
icebp
shrl
mov
sbb
aam
push
xchg
ljmp
nop
mov
jbe
cmp
aam
ficomps
adc
in
and
sti
mov
mov
fldcw
xchg
out
mov
lret
fisubs
mov
and
xlat
xor
add
cmpsl
jno
push
xor
pop
cmp
loopne
test
into
adc
or
gs
push
xor
fsubrp
sbb
mov
sahf
ja
lods
jmp
enter
fimuls
mov
data16
mov
mov
cld
ljmp
repnz
inc
lret
dec
cmp
add
into
dec
pop
cmc
fidivl
adc
rol
mov
jg
jle
adc
cmp
push
xchg
hlt
fsubp
stos
fdivs
ficomps
cld
je
mov
loop
fiadds
fidivrl
add
inc
imul
xor
inc
movsb
mov
cltd
add
shlb
fimuls
leave
ret
cmp
xor
push
pop
loope
push
pop
sub
mov
cwtl
shrb
dec
popf
dec
ror
fdivp
fnsave
sbb
jge
lods
imul
pop
nop
dec
push
mov
add
xchg
call
fcmovbe
xchg
aam
jmp
pop
ficoms
sub
outsb
inc
ja
std
lods
scas
idivb
ret
in
loopne
push
adc
xchg
xor
mov
cwtl
into
cld
or
insl
frstor
jae
xchg
jmp
test
or
push
pop
or
fimuls
inc
mov
aas
add
shrb
fisubs
mov
mov
xchg
loop
jmp
fidivrs
and
jecxz
pmaxub
mov
cld
push
mov
fidivs
mov
mov
int3
inc
test
fiadds
enter
xchg
jo
in
pop
fcoml
or
cld
xchg
xor
in
xchg
and
fsubl
inc
adc
fisubs
xchg
aam
pop
cmp
pop
and
push
adc
ficoms
shl
cld
fisubrs
cmp
xor
jle
jb
mov
out
movsl
dec
push
adcb
dec
fidivs
pop
jge
shr
adc
fisubs
jae
and
cmp
scas
popf
fdivrp
lock
mov
sub
adc
pop
pop
dec
jmp
std
ret
stos
fisubs
call
mov
pop
sub
fidivs
sbb
dec
ss
fidivs
and
jbe
stc
or
lcall
xor
or
jmp
fidivs
scas
rclb
aaa
test
cmp
xlat
ljmp
stc
push
sub
rcrb
mov
ret
xlat
mov
mov
inc
sti
fnstsw
add
xor
in
fiadds
jb
js
sub
ficomps
mov
mov
mov
add
cmc
xchg
mov
movb
cmp
shrl
imul
lea
cwtl
fisubrs
mov
xchg
test
pushl
fstps
lea
mov
push
push
les
mov
sbb
push
mov
or
sbb
inc
xor
daa
fdivp
orl
lods
xchg
fidivrs
insb
call
fisubs
fld
repz
fucomip
filds
sbb
insl
into
into
push
in
xchg
xor
push
mov
cmp
jg
ficomps
mov
repnz
and
add
jge
in
push
rcr
insl
subl
mov
dec
bound
cmc
js
adc
inc
out
fidivrs
hlt
pop
dec
push
nop
mov
lahf
pop
pushf
fimuls
lods
repnz
aaa
faddp
loopne
stc
xor
cs
fucomi
rcrb
add
push
jnp
pop
mov
jb
xlat
testl
and
pusha
add
adc
lahf
imul
hlt
jg
loop
int3
jp
jne
xor
rcll
ret
fimuls
popf
add
les
in
or
ret
pop
adc
daa
push
add
int
push
sub
fidivs
dec
ret
cmp
sub
jno
dec
fidivs
dec
sub
in
fisubs
and
sahf
or
scas
out
orl
ficomps
jle
push
je
pop
dec
faddp
push
add
sub
fs
jb
pop
push
daa
cmpsl
sar
pop
push
pusha
xchg
rolb
nop
icebp
sub
xchg
ret
rcrl
loop
or
sbb
mov
or
dec
ds
xor
ljmp
inc
inc
dec
ss
mov
xorb
lret
xor
add
dec
hlt
mov
fidivs
testl
std
and
call
push
push
dec
xor
stos
icebp
std
cmpsl
cmpsb
sahf
adc
je
mov
inc
loop
icebp
mov
add
sti
int
imul
xchg
js
movsb
cmp
fsubrp
aaa
fcoml
je
fidivs
sti
jp
fisubrs
mov
sub
xlat
cwtl
scas
cmp
test
xchg
int
sbb
add
fisubrs
cmpsb
pop
xor
adc
dec
xchg
mov
xchg
call
jmp
daa
adc
xchg
inc
sbb
adc
fcmovb
scas
add
mov
xchg
movl
popf
mov
xlat
mov
ds
out
iret
rolb
adc
cld
sub
jnp
mov
sbb
std
sub
or
outsb
pop
inc
clc
dec
ficomps
cmp
mov
jns
mul
sub
xchg
rcr
daa
jl
and
fsubr
pmaxub
aas
sub
fimuls
jns
mov
mov
fsubrp
daa
xchg
push
das
xchg
sub
jge
test
jo
adc
ljmp
cmp
or
test
lods
mov
sub
sub
add
pop
fidivs
lods
insb
mov
fidivrs
mov
rcr
test
push
fmulp
jl
jb
sub
andl
out
ss
fmulp
jle
es
testb
adc
aas
inc
fistpll
dec
mov
out
out
fdivp
mov
fildl
test
inc
adc
ret
pop
sub
and
mov
dec
jle
lcall
mov
jle
inc
sub
leave
sbb
jne
push
out
sarb
loopne
xchg
fnstsw
inc
lods
xchg
fdivp
and
or
push
imulb
sbb
pop
jge
test
xchg
fisubrs
and
dec
clc
sub
sbb
pop
call
sbb
sub
pop
daa
mov
mov
xchg
ds
or
fdivp
call
fnstenv
std
cmp
or
xchg
dec
mov
std
mov
out
rcr
adc
mov
jmp
cmp
idivb
mov
cmc
sub
or
cltd
std
das
insl
fidivs
and
push
mov
std
inc
dec
fidivrs
arpl
ds
into
loop
pushf
cs
mov
push
mov
aas
loope
roll
std
test
fiaddl
adc
cmpb
mov
or
jl
movb
movsb
gs
cmpb
mov
fdivrs
fiadds
jnp
xchg
add
jge
inc
cmc
push
imul
jg
je
inc
loope
movsl
pop
int
adc
jmp
adc
jbe
pop
repnz
pop
mov
adc
cmp
outsl
nop
fidivrs
or
ret
xor
xchg
sub
fsubrp
cmpl
mov
jne
mov
sahf
repz
rcr
cmp
nop
and
cmp
ret
cli
push
or
scas
pop
pusha
rcr
fisubrs
cmp
and
fdivp
mov
xor
ficomps
ds
sub
fs
push
in
dec
leave
mov
negb
and
cmp
fisubrs
lahf
stos
xor
bound
sti
push
fimuls
mov
faddp
fcoml
scas
ficomps
int3
push
sub
ds
scas
arpl
fisubrs
jmp
fimuls
push
ss
lret
mov
stos
pop
jns
sbbb
out
pop
in
enter
and
mov
sub
mov
sarb
and
or
cltd
cmpsl
fidivrs
ds
and
fiadds
dec
out
mov
xor
sbbl
push
fidivrs
mov
sub
mov
outsb
lret
dec
cmp
fidivs
addr16
cld
aas
dec
xorb
fdivrs
popa
jnp
shl
jle
and
ds
adc
dec
push
push
dec
shll
stos
sbb
xchg
cld
mov
sub
jge
or
add
je
imul
nop
push
ficoms
ret
fwait
int3
pusha
test
fiadds
ror
add
cmp
das
push
fwait
enter
ficoml
pop
js
pushf
mov
cwtl
inc
mov
ror
fidivs
pop
ja
sub
push
pop
imul
jnp
pop
dec
leave
xchg
ja
sbb
out
or
push
rol
out
movsb
daa
and
or
ficomps
inc
mov
fisubrs
xchg
jne
mov
mov
cld
mov
xor
fldt
inc
insl
add
lahf
jmp
ja
stos
into
icebp
inc
xor
ficomps
cmp
jb
hlt
outsb
lea
fidivrs
mov
lcall
hlt
loop
in
into
rcll
cmpsl
fidivs
mov
push
dec
and
dec
mov
addr16
xchg
repz
leave
in
test
sub
popf
jno
jle
push
inc
push
insl
push
bound
and
jle
in
or
fdivrl
ret
or
inc
fadds
pop
enter
addl
enter
leave
push
cmp
inc
pop
add
pop
inc
fiaddl
out
movsl
lods
pop
int
sbbb
aam
fdivp
insb
inc
cmpsl
ficoms
push
jle
mov
das
xor
inc
sbbb
mov
fimuls
test
ljmp
adc
loop
gs
test
add
lcall
fidivrs
cmp
movsl
fnstenv
sbb
lods
dec
imul
xchg
ja
and
dec
inc
std
xor
dec
jno
ljmp
add
fimuls
fstl
xchg
fs
ljmp
jne
sub
dec
cmpsl
pop
or
hlt
ja
pop
dec
pop
call
cmpsb
xchg
iret
jle
mov
push
aad
call
lods
into
add
div
js
sub
add
push
mov
lea
in
cmp
jmp
xchg
test
adc
mov
test
aad
mov
leave
std
fidivrs
pop
fstps
xchg
and
push
pop
jo
jp
add
dec
shrl
dec
imul
into
jg
sarl
loopne
jnp
das
faddp
dec
daa
push
icebp
push
ficoms
test
lods
adc
push
aaa
mov
pop
sbb
fidivs
or
push
sti
lcall
ret
mov
lock
push
mov
jg
fisubrs
add
sbb
fimuls
push
push
adc
mov
jg
dec
jo
inc
int
bound
sub
pop
adc
pop
cmp
test
pop
and
or
fstpl
push
cwtl
ja
cmp
std
pop
xor
mov
mov
stos
cld
xchg
or
jecxz
jb
xlat
shrl
mov
cmp
shlb
or
pop
fisubs
inc
int3
or
enter
sub
pop
dec
rcrb
sbb
jno
cmpsl
or
dec
into
or
push
xchg
sbb
push
in
sti
jle
rcrl
pop
push
cld
aas
aaa
fldenv
inc
and
fcmovnu
pop
mov
mov
fisubs
fidivl
stos
rcr
ss
xchg
jno
mov
int
ret
imul
and
fisubrs
daa
out
shlb
aas
xchg
push
pop
test
enter
fidivs
pop
xchg
push
mov
cwtl
mov
call
out
sub
pop
orb
idivb
aad
cmp
mov
inc
or
out
fisubrs
aad
repz
xor
clc
jns
sbb
inc
cld
data16
and
out
mov
test
aad
fidivrs
out
lret
idivl
mov
cmc
mov
inc
orb
dec
xor
fdivrp
subl
imul
lock
setnp
jmp
jg
dec
fidivs
in
stos
and
lret
ret
cld
rolb
aam
push
out
and
popa
imul
adc
inc
scas
gs
xor
xor
cmp
mov
mov
push
fidivrs
test
push
loope
pop
rorb
pop
mov
cwtl
cli
test
pusha
lret
int
fdivs
ds
fisubrs
ficomps
dec
mov
fisubrs
ret
out
xor
loop
shrl
sti
daa
dec
lea
or
std
imulb
fadds
cld
jno
scas
push
xor
mov
fsubp
jb
int
push
push
pop
ds
xor
clc
lahf
inc
arpl
xchg
test
fidivs
dec
icebp
pusha
std
scas
js
mov
ret
mov
into
and
inc
mov
in
ficomps
mov
movsb
ficomps
mov
mov
inc
fiadds
fidivrl
outsl
fisubrs
push
roll
jno
mov
and
movw
sbb
mov
movsb
out
or
pop
mov
xchg
dec
or
xor
negb
pop
pop
push
sbb
ret
mov
in
jl
cmc
ficoms
fwait
rol
test
push
out
jl
sbb
shrb
push
fiadds
loopne
pop
test
std
out
and
inc
cmp
jae
not
inc
and
ja
and
rcr
xchg
fisubrs
das
or
xor
je
jecxz
into
ljmp
ficomps
outsl
push
mov
dec
cmp
inc
movsb
sbb
jne
and
dec
push
xor
xchg
adc
in
fdivrp
insb
mov
std
mov
or
mov
jbe
out
xor
push
mov
imull
xchg
or
ljmp
pusha
sub
sbb
ja
or
pop
xchg
insb
ret
fisubs
popa
add
cmp
cmpsb
mov
mov
or
xor
enter
lret
mov
sub
dec
into
les
cmp
aad
xor
aas
jns
loope
sub
mov
imul
fisubrs
or
in
aas
add
push
cli
pop
fwait
jp
idivl
mov
adc
lds
loop
cmp
mov
loopne
fsubp
or
jge
jnp
fcmovnu
mov
test
mov
fisttps
add
mov
lsl
mov
jp
jle
adc
lahf
idivb
roll
fs
add
mov
test
rcr
add
notl
mov
cltd
ja
jg
scas
fisubrs
loope
mov
fildl
jmp
mov
inc
pop
and
mov
cmp
jo
and
mov
fidivs
lds
ljmp
ficoms
rolb
pop
push
stos
scas
ficoms
sub
adc
fsubrp
or
and
fimuls
pop
sub
jae
jne
inc
imul
enter
dec
hlt
sti
xor
dec
mov
dec
inc
sbb
pop
fisubs
pop
pop
dec
jmp
xchg
mov
fimuls
shrl
int
cmpsb
fisubs
bound
or
fbstp
nop
das
xchg
and
out
jae
inc
icebp
aaa
in
add
mov
sbb
jbe
cs
push
sub
lea
pop
and
ror
lds
scas
adc
fiadds
mov
adc
cmp
push
pop
and
stos
fimuls
jno
mov
subl
out
fimuls
fstpl
fidivrs
jae
inc
mov
xchg
cmpsb
mov
mov
adc
das
fiadds
and
sbb
sbb
fidivrs
inc
imul
outsl
push
push
test
fmulp
ret
cli
jnp
mov
std
ds
cmp
test
mov
faddp
dec
ss
mov
inc
data16
cmp
fidivrs
or
xor
push
loopne
inc
mov
stos
pop
jg
sahf
jmp
in
icebp
aam
fidivrs
cmp
push
fiadds
mov
mov
lcall
mov
leave
inc
jnp
fidivs
ficompl
or
imul
xchg
shll
nop
add
sbb
cld
push
mov
push
lret
pop
imul
adc
push
jle
xchg
push
pop
nop
out
call
and
jbe
xor
xchg
insb
movsb
add
add
mov
dec
fsubp
xchg
pop
ror
sbb
sub
and
mov
test
daa
les
icebp
cmpb
lods
cmp
mov
adc
stos
sub
xchg
pop
jne
mov
dec
xor
mov
stos
mov
sub
outsl
xor
lods
sahf
push
addw
xchg
mov
out
cwtl
dec
std
mov
sub
ret
rcrb
and
jo
imul
mov
dec
xchg
push
fsubp
push
adc
lcall
pop
or
int3
int
jno
fimull
fisubrs
mov
jmp
jg
xor
ret
scas
cmp
jb
fiadds
inc
ja
dec
movsl
out
fidivrs
orb
xchg
out
cli
mov
push
es
add
fisubs
mov
lret
mov
lret
outsl
jecxz
testl
inc
das
xor
sbb
dec
cltd
in
mov
cli
xchg
call
cs
xchg
loop
lret
sbb
jne
cmc
lds
and
imul
sub
lds
fbld
fimuls
mov
imul
test
xchg
ficoms
add
fidivl
inc
mov
pop
aas
rol
mov
daa
scas
pop
jmp
mov
xchg
adc
pop
sti
pop
lret
cmp
iret
push
inc
xor
sbbl
mov
enter
in
jmp
std
xlat
ficomps
outsl
adc
sahf
sub
jns
cmp
mov
mov
fisubs
sbb
jg
bound
sahf
lret
sbb
cs
jp
mov
jno
lods
pop
ret
adc
mov
movsb
out
add
xchg
fdivrs
add
adc
fisttpl
rcrl
fidivrs
iret
pop
dec
insb
sbbb
mov
mov
jo
lds
aaa
jmp
mov
sbb
sub
rcrb
add
incl
lock
jb
push
das
cmp
and
jne
add
jge
fwait
xchg
ret
inc
mov
jg
into
adc
mov
rcrb
inc
inc
sub
into
xor
dec
sbb
jle
mov
pop
je
mov
fidivs
pushf
or
ficoms
sub
jae
mov
aaa
decl
fistps
fisubrs
inc
iret
sbb
stos
int3
ficoms
in
jecxz
pop
jb
xlat
jp
sub
inc
ret
ficomps
fstp
mov
xchg
sub
xchg
hlt
mov
in
scas
aas
lods
movsb
jle
sbb
out
dec
fisubrs
and
xchg
andb
lahf
lret
das
ror
jb
adc
enter
xorb
fdivrl
fisubs
nop
faddp
sub
mov
push
inc
test
ficomps
arpl
mov
enter
call
movsb
sbb
nop
xchg
in
fisubrl
add
sahf
or
fcomps
inc
ljmp
imulb
xchg
clc
xchg
mov
rcrb
imul
out
xchg
or
fimuls
mov
mov
ficoms
inc
adc
pushf
iret
lahf
mov
imul
inc
xchg
loopne
mov
test
xchg
adc
cmp
sub
sbb
dec
js
mov
testl
fidivrs
and
pop
enter
jb
ss
jbe
lcall
sbb
sbb
repnz
outsb
cmpl
add
inc
shll
test
mov
dec
leave
imulb
movsl
pop
in
jp
in
neg
pusha
pop
pop
je
mov
cwtl
jp
sar
cmp
fadd
pop
aam
sub
xchg
dec
dec
sbb
sbb
pop
mov
mov
xchg
out
fisubs
sarl
subl
pop
mov
or
scas
test
and
loopne
dec
pop
cmp
xor
adc
insl
js
int3
inc
xlat
mov
xor
loope
sbb
in
idivl
shll
incl
jno
sub
data16
dec
sahf
cmp
aad
in
mov
fisubs
mov
add
mov
invd
pop
fidivrs
outsl
pop
jne
push
sbb
std
jno
pop
push
mov
pop
pop
xchg
repz
xchg
jle
cld
jmp
xchg
test
mov
into
fs
aaa
aam
ficomps
iret
inc
in
xor
into
pusha
xor
lods
dec
or
test
push
add
and
jno
roll
idivl
push
dec
jo
jb
mov
jmp
sbbb
leave
into
movb
es
xchg
fiadds
movsl
cmp
rcr
mov
push
stc
mov
fisubrs
add
jb
sbb
adc
das
cmp
mov
je
ljmp
lret
lcall
add
rol
daa
sbb
ret
xchg
lds
clc
dec
pop
into
sbb
fiadds
stc
lods
jmp
adc
and
arpl
pop
jbe
sbb
ficoms
xchg
push
xchg
jle
ljmp
ja
xlat
dec
push
std
pop
cli
out
int3
fcmovne
ret
pop
fidivs
shrl
movsb
lods
push
sti
jbe
popf
iret
call
ficoms
sub
pusha
pop
cld
lahf
dec
mov
mov
dec
in
xor
add
jl
sub
lock
cmpsb
jns
dec
mov
lods
xchg
pop
mov
pushf
dec
mov
mov
std
ds
mov
in
sub
nop
xor
cmp
dec
jp
jae
dec
push
mov
mov
mov
lds
push
into
jne
cmp
pop
jecxz
and
jge
fidivrl
imul
dec
syscall
or
pop
test
in
loope
out
cwtl
add
lods
aaa
pop
into
sbb
clc
addr16
jl
cmp
add
xchg
lahf
sub
addb
lods
shrl
fsubr
int
mov
add
jge
xchg
push
cmc
adc
mov
in
pusha
mov
int
aas
jge
sbb
lret
cmpl
cmc
pop
insl
mov
into
pushf
jge
jl
repnz
ret
xor
mov
mov
inc
bound
cmp
add
cwtl
daa
into
xlat
adc
ficoms
ljmp
roll
push
and
hlt
and
mov
rcll
xchg
mov
dec
push
xor
lret
dec
push
shlb
loopne
hlt
loop
in
cli
cld
adc
outsl
pop
into
sub
push
ds
or
dec
lods
push
pop
fisubrs
or
nop
jp
cmp
negb
lret
test
sbbb
cmpsb
ss
mov
push
lds
arpl
xchg
sbb
mov
inc
lea
in
out
fstp
lret
cmp
pop
shll
pusha
std
mov
fs
fs
pop
cmpsl
push
cmpsl
les
fimuls
mov
sub
idiv
or
add
adc
xor
mov
lret
aaa
leave
out
inc
jle
sbb
push
mov
filds
lods
mov
test
out
fdivr
mov
inc
lret
mov
sbb
enter
loopnew
fiadds
xor
popf
sbb
xchg
rclb
and
xchg
adc
push
dec
xchg
push
test
stos
and
sub
fidivrs
sub
pop
filds
push
fidivs
shrb
cmp
pop
movsb
les
cmp
inc
or
in
xor
leave
xchg
push
push
push
sbb
sbb
imul
mov
addr16
inc
cmpsl
mov
cmpsb
inc
pop
sbb
mov
adc
pop
mov
outsl
ficoms
mov
shlb
lods
jnp
fimuls
ljmp
inc
das
jo
scas
lods
je
std
xchg
jmp
jmp
fiadds
mov
mov
insl
mov
push
inc
push
or
sbb
mov
push
icebp
mov
fisubrs
cmp
adc
add
mov
outsb
push
fnstenv
rcr
test
xchg
jle
cmp
xlat
add
dec
jo
and
cmp
lds
push
stos
out
push
mov
in
adc
fdivp
test
sub
outsl
loopne
addl
lds
ficoms
lds
nop
xchg
punpcklwd
dec
divl
xor
push
mov
cmp
lret
fisubl
pop
mov
dec
cltd
or
adc
dec
fisubrs
test
cmp
push
in
cmp
jb
roll
sbb
rolb
out
xchg
out
fisttpll
mov
sub
fidivs
or
inc
or
str
fisubrs
insl
adc
xchg
je
jg
dec
fisubs
mov
cmp
dec
jo
fsubrp
fstpt
sub
cmp
cli
inc
sbb
jne
iret
or
xchg
inc
sahf
mov
in
adc
stc
int3
mov
jecxz
and
jns
or
fnsave
inc
xor
push
into
ds
xchg
cli
mov
shll
scas
add
addr16
fisubs
xchg
mov
ja
adc
xchg
pop
inc
fimuls
shl
dec
xchg
ficoms
push
sti
mov
iret
fiadds
sub
add
mov
jl
xor
sbb
fwait
push
mov
mov
out
sti
inc
mov
or
cmp
mov
ficoms
jns
jl
pop
fidivs
pop
mov
outsb
xor
std
mov
mov
aas
sbb
push
mov
push
xchg
rcr
dec
mov
into
mov
out
pop
pop
sub
adc
xchg
dec
fiadds
mov
outsb
dec
mov
add
data16
test
fsubrp
dec
ret
stos
arpl
pop
sbb
pop
jbe
push
in
xchg
ret
pop
std
dec
sub
cmp
and
roll
add
cmpl
ficoms
push
mov
jg
scas
clc
loope
jle
int
push
pop
clc
fisubrs
pop
adc
sbb
adc
mov
pushf
pop
ret
dec
repnz
in
xor
cmp
sbb
cli
jnp
inc
adc
fimuls
cltd
mov
cmp
mov
push
stos
cmpsl
lret
mov
push
or
mov
pusha
lds
testb
fisubrs
pop
xchg
xchg
fimuls
hlt
pop
sbb
and
aad
fisttps
outsl
daa
dec
aas
push
bsf
ljmp
roll
inc
sub
fstp
adc
in
cmp
cmpsl
mov
jecxz
nop
ficoml
daa
pop
cmp
ficomps
dec
adc
das
pop
arpl
fidivrs
push
dec
out
inc
scas
mov
and
lea
cmpsb
pushf
out
mov
rcr
xor
adc
imul
std
and
popf
mov
or
in
mov
sbb
out
rcr
fisubrs
lret
xor
sbb
inc
scas
dec
mov
xchg
cmc
fsubrp
sbb
aad
popa
jae
gs
sbb
data16
mov
int
mov
test
movsb
sar
iret
push
sub
ret
int3
cmp
xor
pop
fisubs
addr16
adc
mov
rorb
das
pop
cmp
mov
and
pop
adc
push
xor
stos
std
test
es
ret
cld
inc
mov
data16
mov
sub
insb
cld
pop
add
lret
ficoml
shll
jge
mov
leave
cmp
std
push
xor
mov
jno
outsl
fidivs
js
rcrb
jb
pop
movb
push
ds
push
sbb
mov
out
pop
loop
fidivs
xchg
xchg
push
or
jmp
ror
movsb
sahf
daa
xlat
mov
mov
jl
insb
pop
lcall
scas
in
lret
cmpsl
xchg
cltd
int3
and
loop
ficoms
xor
push
ljmp
inc
in
xor
test
mov
scas
loopne
imul
jne
cmp
cmp
mov
xor
push
dec
addr16
mov
cmp
xchg
inc
rcr
cmc
adc
ret
pmaxub
pop
lods
outsl
xchg
popf
inc
push
aad
fidivrs
jg
ficomps
or
fisubrs
and
std
sbb
lods
pop
rolb
repnz
loope
fisubrs
fsubrl
fiadds
or
xor
jno
push
fistps
dec
and
faddl
fsubp
into
push
rorl
cmp
push
lea
jb
adc
jmp
movsl
inc
lods
inc
sbb
lahf
sbb
jno
rol
fwait
push
adc
mov
aad
jae
ror
aas
inc
scas
scas
fsubrp
mov
mov
mull
xchg
cmp
xchg
int3
stos
adc
ficoms
je
xlat
cmp
or
fnstenv
clc
fidivs
rorb
fisubs
sbb
jne
idivl
nop
adc
xlat
lahf
xchg
into
add
stc
in
xor
inc
mov
pop
fdivr
or
mov
clc
push
add
arpl
mov
ljmp
mov
or
xor
push
ja
adc
push
mov
xchg
out
cmp
iret
cmp
lret
xor
cli
add
test
imul
inc
pop
cmp
push
cmp
in
jnp
lret
shrb
adc
push
ljmp
je
popa
mov
pop
movsb
std
fsubrp
ret
jo
repz
push
jns
push
jp
sub
cld
fsubp
lods
pusha
lods
xchg
mov
subps
shr
push
aam
fidivrs
mov
jnp
dec
cmp
dec
push
lcall
test
sub
out
push
inc
pop
aaa
dec
cmp
insl
sbb
pop
xor
fidivrs
lahf
jnp
ficoms
and
lock
pop
ficomps
xor
cmp
std
lea
xor
test
inc
and
jg
sbb
loope
mov
adc
mov
jle
rol
pop
mov
jp
sbbb
xchg
mov
pop
pop
xchg
xor
inc
rcr
cmp
pop
mov
adc
and
lcall
jecxz
xchg
adc
fiadds
cmp
cmp
add
inc
jle
ds
mov
ror
hlt
pushf
insb
sbb
fidivs
stos
push
cmc
popf
fisubrs
xor
mov
dec
mov
mov
sti
into
sbb
enter
ficomps
jge
xchg
bound
into
or
mov
cmp
nop
movsl
call
test
xorb
push
lahf
ficoms
mov
out
adc
ficoms
into
or
lea
mov
stc
lock
cmp
into
add
fiadds
mov
cld
pop
mov
mov
mov
xchg
shlb
xchg
sub
testb
inc
inc
aas
jo
cld
dec
mov
fs
pop
rcl
xchg
xor
mov
in
pop
test
inc
pop
push
pop
std
test
cmp
jg
lret
flds
cmp
mov
pop
fiadds
lods
or
dec
ficoms
aad
outsl
sub
mov
jmp
test
mov
and
push
pop
outsb
mov
lock
mov
pusha
das
ss
jne
aam
dec
subl
pushf
les
cli
push
sub
movsb
cmpxchg
fwait
xchg
sub
lds
enter
xor
pop
mov
sbb
pop
and
ficomps
mov
pop
repnz
sbb
fdivrp
mov
ds
mov
xchg
imul
or
test
mov
mov
stos
xchg
cmc
mov
rcr
cwtl
pop
jp
loop
inc
or
adc
rorb
pop
shrb
xchg
daa
loopne
int3
pop
xor
cmp
test
stc
std
add
add
sbb
lret
mov
aad
iret
cmp
dec
add
les
inc
out
dec
push
push
or
and
cmp
int
into
jg
nop
and
in
outsl
xchg
fdivrp
mov
outsl
mov
lock
jb
mov
xor
repz
jle
fisubs
mov
sbb
std
in
jo
xchg
sti
push
fisubs
mov
sbb
in
fldt
or
loope
cld
or
sub
fsubr
pop
ret
inc
lods
inc
ret
sbb
sbb
mov
push
sub
adc
inc
icebp
mov
test
fsubp
popf
dec
cmp
cmp
call
jnp
popa
repz
jae
adc
fimuls
test
in
lret
fcmovnb
xchg
das
mov
in
ja
je
test
adc
pop
mov
enter
cld
cmpsl
dec
call
mov
pop
mov
sbb
icebp
sub
mov
sub
cltd
xchg
stc
or
adc
arpl
sub
jno
jbe
pop
sbb
push
stos
ret
fsubrl
xchg
es
ljmp
dec
inc
sub
int
sbb
cmp
or
jl
mov
xchg
cltd
push
out
sti
dec
xor
iret
rcl
sub
push
fcmovnb
fiadds
test
js
dec
mov
cmp
mov
pop
mov
in
into
sub
les
jb
cmp
jmp
adc
vmwrite
adc
mov
out
fwait
std
fcoms
adc
and
push
sbb
sarb
mov
dec
fwait
lret
or
lods
mov
mov
loop
into
dec
add
jle
mov
or
add
data16
fimuls
lea
fiadds
lock
ja
js
push
ficomps
mov
sbb
ds
mov
in
faddp
push
push
repz
fdivp
sbb
fmul
cltd
sub
and
ss
aam
ficoms
mov
fcmovu
jg
jmp
sub
mov
mov
ret
and
jle
rcl
inc
mov
cmp
popa
pushf
sbbl
lret
ret
rorl
std
cld
push
fsubrs
mov
xchg
xchg
mov
stc
sahf
fwait
jecxz
loopne
clc
xlat
cld
push
mov
jo
sarl
ficoms
mov
add
sbb
int3
jne
mov
in
icebp
and
adc
popa
and
dec
xor
lret
les
std
xchg
in
test
roll
fisubrs
sbb
and
pop
push
cmp
jmp
rcll
sbbl
ss
mov
fidivs
es
arpl
popf
out
cli
push
xchg
daa
push
fistpll
test
push
out
inc
mov
lret
adc
push
std
add
idivb
fs
cmp
pop
dec
out
mov
xor
clc
push
pop
faddp
or
mov
adc
iret
mov
gs
push
cmpsl
aas
cwtl
popf
aad
nop
fidivs
cltd
xchg
les
in
push
cmp
stos
ret
out
loopne
callw
inc
pmaxub
push
mov
or
fdivrs
xor
fimuls
test
dec
into
dec
loop
mov
mov
add
insb
jle
cli
pop
int
pop
faddp
shlb
mov
adc
fisubs
xor
sub
movsl
into
cli
insl
pop
sahf
push
fs
cld
mov
call
mov
sub
fisubs
add
pusha
pop
imul
and
push
mov
cmp
cmp
ret
xor
push
clc
ja
push
fisubs
sarl
cwtl
mov
add
ret
mov
ds
sbbb
fimuls
xchg
pop
sub
or
lds
in
jo
and
enter
inc
jle
insb
push
mov
inc
sbb
scas
or
cmp
adc
sub
data16
and
add
ror
test
daa
insl
loopne
les
mov
push
sbb
and
xor
fnsave
sub
pusha
fimuls
add
dec
sbb
ja
fidivs
scas
lret
addr16
loop
or
shrb
adc
add
popa
outsl
fcoms
ficoms
into
mov
fimuls
in
loopne
ja
pop
xlat
sub
jbe
test
and
std
int
push
ret
out
mov
xchg
lods
jo
lds
stos
sbb
nop
xor
movsb
add
in
jno
rolb
ficomps
jle
lods
jne
sub
cmpsb
sbb
sbb
mov
push
mov
push
int3
jl
stos
xor
lcall
inc
mov
add
xorb
cmp
test
aam
sti
es
xchg
add
push
les
jmp
jnp
pop
mov
je
inc
xor
mov
adc
fisubrs
or
lcall
mov
sarl
xchg
jne
sbb
popa
into
sti
dec
lds
push
mov
subb
xchg
dec
repz
fimuls
iret
les
out
into
rcr
push
mov
cmp
xchg
lret
scas
sbb
push
push
in
sub
or
pop
imul
neg
pop
cmp
sti
mov
xchg
movl
iret
imul
xor
jp
enter
fidivrs
mov
pop
ja
neg
mov
cld
mov
pop
ds
out
add
fimuls
adc
mov
scas
int3
fiadds
mov
enter
adc
in
rcr
mov
inc
and
push
fisubs
jp
loopne
dec
fidivs
dec
mov
jle
jb
out
mov
int3
std
lahf
cs
addr16
jnp
and
dec
cltd
push
inc
cmpsb
jle
notl
fistps
xor
mov
aaa
adc
sbb
pop
stos
jl
das
and
mov
movsb
mov
lock
jle
fbld
je
outsb
addb
pop
push
pusha
mov
mov
jg
adc
xchg
sbb
sub
cmpsb
les
jb
cmpl
rcrb
mov
jg
sub
lock
call
out
lcall
fidivrs
inc
in
push
fdivp
stos
jle
and
mov
jno
xlat
xchg
shlb
or
pop
push
pusha
cmp
jmp
fdivp
xchg
inc
inc
sub
cmp
add
cmpsb
and
icebp
in
sbb
fiaddl
sub
inc
add
dec
ret
mov
jnp
fiadds
shl
fsubp
sub
mov
inc
push
rcr
rorl
fbstp
nop
lock
idivb
scas
jbe
adc
ss
out
pop
std
ret
arpl
insb
lods
push
and
mov
aam
fidivs
lret
mov
jb
repz
mov
adc
or
jecxz
push
mov
sub
rcrb
orb
mov
aas
xor
sbb
into
xchg
cmc
mov
sbb
into
bound
and
outsl
flds
ficoms
ss
mov
mov
and
cwtl
lret
sbb
cmp
pop
push
into
sub
dec
lret
insb
fiadds
test
sarl
lods
mov
fmulp
incl
adc
xchg
inc
push
dec
imul
push
sahf
mov
test
out
xor
dec
sub
das
fdivp
add
popf
sub
lods
mov
lcall
fld
in
fimuls
bswap
or
pop
xor
push
cwtl
sarl
lret
adc
xor
mov
mov
shr
cmpsb
shrb
fisubs
adc
sbb
mov
lods
mov
inc
fsubr
std
cmp
pushf
or
sub
mov
inc
ret
aaa
insb
imul
pop
fisubs
bound
fimuls
xor
cli
fidivrs
inc
bound
xor
push
test
lret
fisubs
add
out
push
std
pop
cmp
sarb
outsb
aaa
sahf
icebp
into
dec
pop
lock
mov
mov
sbb
inc
rcr
rcr
loopne
and
sub
aad
xor
and
icebp
fimuls
mov
fidivs
repz
icebp
push
fisubrs
xchg
cmpsb
push
sbb
enter
outsb
and
mov
aam
xor
into
mov
fisttpl
rcrb
fdivp
jno
aam
pop
adc
lods
mov
js
push
in
sbb
pop
incl
cmp
push
insb
sub
inc
pop
mov
movsl
mov
pop
outsl
or
out
out
call
hlt
or
fimuls
inc
xchg
add
or
add
popf
xchg
fidivrs
sbb
mov
out
xor
das
into
dec
mov
je
ljmp
mov
js
into
lcall
fidivrs
cmpsb
bound
lods
or
fcompl
xchg
popf
fmulp
dec
pusha
lcall
xchg
fs
lds
xor
xor
pop
leave
clc
jbe
cmc
int3
popa
inc
pop
fisubrs
movb
xchg
jno
mov
cmpsl
fcmovu
rclb
sub
jecxz
in
pop
add
outsb
std
inc
pop
into
cltd
stos
lret
scas
xchg
fists
sti
jp
rolb
dec
pushf
loop,pt
and
cmp
pop
movsl
fimuls
sbbb
cmpsb
in
xlat
int
les
lea
ficoms
popf
test
jns
pusha
fimuls
mov
test
inc
fidivrs
into
flds
mov
and
pop
test
arpl
imul
jne
cmp
int3
xchg
ret
cs
orl
mov
cmp
popa
cmpsb
cli
push
loopne
fbld
push
ffree
fisubrs
or
aaa
scas
inc
fstps
fimuls
xchg
mov
push
fdivp
cmpb
sbb
enter
fcoms
sub
and
ja
mov
cld
sbb
inc
mov
sub
pushf
loope
jl
int
push
fimuls
xor
mov
arpl
mov
in
pushf
into
pusha
cli
cmp
push
movb
mov
xor
mov
insb
call
mov
inc
inc
jg
adc
cltd
cmp
es
xlat
cs
mov
ljmp
mov
pusha
pop
and
mov
xchg
std
std
aaa
call
insb
test
les
and
mov
outsb
pop
jae
gs
pushf
dec
dec
imul
xchg
add
pusha
outsl
roll
lcall
bound
lods
push
push
mov
adcl
fcmovne
jp
scas
mov
inc
adc
mov
mov
scas
fisubrs
clc
lods
lea
push
mov
inc
cld
inc
popf
jns
mov
fs
cltd
fidivs
pop
mov
fisubrs
test
inc
clc
dec
jo
vandps
mov
jl
ss
fwait
xor
int
sbbl
xchg
fsts
clc
fmulp
aad
out
xor
sbb
shlb
and
pop
dec
push
mov
test
fiaddl
inc
mov
daa
popa
cmp
jge
fiaddl
lcall
fiadds
xorl
jo
lret
repnz
out
push
cld
push
gs
in
stos
sub
std
mov
je
aad
fsubrl
adc
jg
mov
add
mov
movsb
outsb
notb
in
js
add
mov
mov
insb
push
decb
pop
into
outsb
and
cwtl
out
bound
and
ds
push
into
xchg
xlat
dec
pop
jg
cld
and
iret
xchg
fiaddl
mov
out
xor
dec
daa
inc
in
push
or
fidivs
mov
pop
ficoms
pop
jl
xchg
adc
add
jae
imul
xor
mov
adc
fisubrs
adc
fs
mov
popa
mov
fnsave
cmpsb
fadds
outsb
lods
ficoml
loope
fisubs
mov
push
std
loop
sbb
rol
lahf
pop
and
fiadds
jnp
int
push
outsl
sbb
cmpsl
pop
push
enter
or
mov
mov
mov
lods
mov
hlt
pop
jo
int3
xor
add
mov
mov
in
std
push
fdivr
pop
xchg
iret
xor
movsl
test
pop
in
jno
fimuls
mov
lods
lahf
xlat
mov
outsb
stc
test
cmc
push
rolb
adc
or
add
pop
dec
sahf
inc
aad
andb
sbb
pop
out
push
push
bswap
scas
test
mov
inc
shlb
xorb
mov
mull
fimuls
fistpl
mov
in
sub
mov
mov
subl
bound
sahf
fmulp
sarl
xchg
sbb
jne
ret
jle
sbb
icebp
cs
dec
mov
stc
insl
lahf
inc
ret
xchg
lret
and
and
test
xchg
pop
es
ljmp
in
sub
notb
ja
mov
push
pop
pop
popa
fisubs
mov
outsb
ficoms
cmp
jne
and
fidivrs
mov
mov
mov
sbb
cmp
std
in
jmp
push
into
inc
cmp
add
ficoms
xor
aaa
jns
fwait
cmp
inc
insl
add
add
std
mov
jo
fiaddl
cmp
repnz
notl
or
call
les
pop
fimuls
rclb
out
clc
fiadds
sahf
cs
pop
jp
or
cmpsb
movsl
aam
movsb
dec
movb
sbb
stos
mov
pop
and
add
aaa
fstps
sbb
lcall
mov
and
icebp
sbb
gs
fsubs
sbb
ret
ds
ficoms
movsl
or
jg
js
loope
mov
push
aas
sub
adc
out
mov
push
pop
xor
jge
mov
bnd
sti
inc
lret
pop
add
ljmp
das
jno
inc
loopne
stos
mov
into
jecxz
insb
dec
movb
fidivrs
or
mov
inc
pushf
inc
inc
stos
jg
mov
fwait
mov
fnsave
dec
sub
push
iret
sbb
push
pmaxub
xchg
or
idiv
xlat
mov
scas
shrb
sbb
xor
lcall
adc
bound
test
mov
xchg
fdivp
out
push
dec
rcr
ss
or
fisubs
lock
jnp
pop
fisubrs
sbb
jo
add
lret
in
push
push
fidivs
sub
out
aaa
add
mov
clc
jb
jl
call
push
adc
into
sbb
mov
lret
movsb
xchg
fiadds
insl
aad
fiadds
mov
adc
aas
neg
push
int3
dec
inc
loop
aas
std
mov
rclb
cli
jl
nop
iret
lret
out
xchg
movsl
test
shll
std
fimuls
fstp
mov
mov
fiadds
inc
call
and
dec
add
mov
dec
add
fidivs
inc
jns
sahf
negb
lds
sub
sbb
fsubp
imul
fimuls
fwait
or
mov
pop
leave
dec
out
mov
push
xlat
sbb
push
inc
lock
pusha
pop
sarb
popf
mov
shrb
outsl
mov
jg
call
icebp
test
imul
out
lret
rcrl
repnz
or
into
scas
or
sbb
scas
cli
fs
and
xchg
inc
jg
push
add
fidivs
es
adc
insl
push
inc
dec
inc
adc
bound
xorl
rcl
sub
fisubs
outsb
ficompl
dec
jo
fdivrp
mov
push
dec
fsubrp
loop
rcll
inc
and
pop
punpckhwd
ficomps
push
jnp
fimuls
daa
mov
mov
fisubrs
and
mov
ret
nop
push
xchg
inc
in
test
jg
jl
xor
mov
or
data16
cwtl
fmulp
rcrl
ret
aam
popf
mov
cmc
cwtl
ja
jnp
mov
sub
push
stos
ficomps
inc
insb
ficoms
adcb
ret
push
adc
stos
sbb
push
add
ret
je
loopne
inc
fmul
sub
popf
fsubs
dec
fidivs
into
xor
cs
in
rclb
mov
push
popa
mov
lods
lcall
push
sbb
xor
xchg
mov
jne
jno
fimuls
out
inc
mov
aad
ficoms
lea
movsb
das
and
mov
lret
push
es
loope
or
cmp
lcall
xor
mov
ja
mov
ss
lods
add
fidivs
mov
cwtl
xor
faddp
insb
js
in
pop
push
mov
jns
mov
sbb
in
add
sub
adc
fimuls
adc
fisubs
cmp
icebp
std
nop
call
flds
adc
or
xchg
inc
gs
jp
shll
sub
dec
mov
out
add
mov
sub
in
fidivrs
mov
aaa
std
cmpsb
xor
jmp
fbstp
add
ret
pop
popa
imul
fdivp
rcrb
pop
jge
jl
fidivrs
push
cs
mov
js
xchg
xor
lock
in
fcomps
and
fidivrs
sub
cmp
ficoml
sbb
mov
jg
into
pop
loope
push
push
loop
jnp
aas
adc
roll
fnstenv
sbb
cmpsl
out
jecxz
ret
in
shlb
std
dec
enter
mov
test
scas
mov
stos
aad
push
cltd
pusha
arpl
fsubp
popa
ds
xlat
pop
iret
sbb
push
or
int3
mov
faddp
cld
inc
dec
mov
xchg
cmp
dec
aas
icebp
fsubrp
sti
and
jge
sbb
test
out
mov
xchg
pop
mov
push
pop
rol
shrb
fwait
mov
mov
std
xchg
mov
push
nop
rcr
jle
notb
call
fsubp
adc
arpl
push
mov
pop
ret
lea
dec
xchg
rcrb
rcr
fisubl
fs
ficoms
push
cmpsl
aas
jo
fimuls
xchg
mov
faddp
popf
out
sub
aaa
outsl
sbb
sub
aas
add
fwait
mov
add
add
jmp
into
stos
dec
xor
inc
nopl
mov
popa
into
out
mov
sub
test
loopne
iret
lret
arpl
mov
xor
sub
or
addr16
call
in
mov
clc
mov
push
jae
and
daa
adc
inc
push
rcrb
lret
fimuls
insb
sahf
stos
pop
je
adcl
or
pop
add
fimuls
push
pop
mov
mov
std
add
adc
sti
fisubs
aas
xor
ja
jmp
adc
mov
or
cmp
ret
stos
mov
into
int
sbb
test
pop
mov
cwtl
mov
ret
push
ficoms
shll
lcall
mov
jne
xchg
fidivrs
push
scas
leave
xlat
xchg
dec
fisubrs
int3
enter
xchg
dec
je
adc
insl
imul
push
rorb
fisubrs
pop
cmp
jle
mov
outsb
xchg
imulb
ret
das
adc
cli
mov
cld
gs
mov
mov
fidivrs
xchg
add
fmulp
ss
push
push
mov
mov
cltd
rep
out
rcr
fisttpl
sub
addr16
les
leave
insl
ficoms
push
je
test
or
add
cmp
inc
inc
and
clc
cwtl
xor
je
or
insl
cli
jno
pop
into
pop
repz
lods
jmp
sub
sbb
cmpsb
ja
pop
push
add
fidivs
or
fcompl
movsl
or
imul
fidivrs
nop
movb
es
sti
mov
jae
scas
aad
inc
pop
or
ljmp
xchg
jae
mov
sbb
pop
inc
jecxz
sbb
pop
hlt
fidivrs
xchg
add
aad
scas
stos
cld
lcall
sub
cmp
add
xor
jne
jmp
jno
mov
fmuls
fdivrp
lods
loop
lds
fnstcw
dec
sbb
cli
push
int3
dec
fimuls
xchg
inc
ret
fidivs
mov
jge
lds
adc
pop
not
push
ja
int3
jb
pop
cmpsb
sahf
fisubl
fidivs
add
iret
pushf
in
out
cld
imul
mov
ficomps
sub
jae
jge
in
xor
into
fisubs
lock
repnz
mov
add
mov
sub
mov
std
lret
es
xor
xchg
aaa
notl
lcall
mov
mov
xor
out
xor
lret
into
jp
jle
cmp
or
or
jnp
or
dec
sar
cmpsb
inc
adc
fistps
push
sahf
cmp
sbb
jl
mov
arpl
and
test
scas
and
sbb
std
jle
jge
fisubrs
leave
mov
jg
mov
loope
fisubs
ljmp
sahf
fmulp
pop
adc
mov
cmpsl
cwtl
sub
mov
adc
pushf
lahf
jo
mov
ret
mov
aaa
in
loop
in
test
sbb
inc
ja
shrl
jecxz
cltd
adc
and
aas
mov
xlat
sbb
cmp
push
or
push
repz
mov
outsb
inc
mov
fisubrs
dec
xchg
es
and
dec
jle
and
sub
dec
loope
push
popa
lret
dec
ficomps
insb
out
xchg
mov
rol
lds
lea
outsb
push
fimuls
push
mov
mov
nop
fisubs
jo
and
aam
fiadds
sti
and
arpl
inc
in
notb
or
out
adc
or
mov
lods
fs
xchg
pop
std
je
jno
push
pop
rorl
jle
shlb
pop
sub
push
dec
or
adc
jo
fidivs
lcall
ds
outsb
jmp
jne
shlb
pop
gs
mov
fisubs
sub
std
mov
rolb
sar
mov
rolb
cmp
inc
into
pop
lds
ljmp
add
fsubrs
mov
xor
xchg
mov
mov
into
sbb
push
dec
inc
js
stos
ficomps
int
cld
fisubrs
jecxz
aam
mov
sub
clc
ficoms
imul
mov
movsb
les
jge
enter
call
fisubs
xor
pop
dec
sbb
das
fidivrs
mov
mov
inc
adc
test
ficoms
sbb
data16
push
push
cli
jne
lahf
sub
fsubp
rorl
daa
fisubs
mov
insb
fsubp
hlt
mov
and
sbb
xchg
clc
stos
xor
mov
dec
push
xchg
xor
lahf
adc
fwait
aas
roll
dec
jecxz
test
hlt
add
icebp
shll
fstp
cltd
jl
cmp
push
mov
mov
pop
and
jle
aad
jae
rclb
mov
mov
lods
cmc
and
inc
outsl
js
inc
push
rolb
orb
into
int3
ret
mov
mov
jo
mov
mov
mov
ret
xchg
fwait
sbb
xor
clc
and
imul
ret
fdivrp
add
adc
mov
int
sarl
aad
push
ljmp
dec
inc
mov
sbb
addb
out
loopne
ret
jecxz
pop
es
popf
xor
cli
test
mov
mov
popf
sbb
lock
popa
dec
int3
das
fs
out
adc
push
fisubs
dec
lret
in
sbb
lcall
mov
fidivrs
cmp
xor
ficomps
cmp
ljmp
xchg
fsubrp
stc
int
ficoms
and
aas
fisubrs
jbe
mov
scas
ss
sbb
js
rorb
sub
in
dec
xchg
jle
ja
push
popa
pop
int
jle
mov
lret
ficoms
vpmacsdql
mov
fidivs
js
int3
mov
std
push
add
rcr
in
dec
sub
nop
cmp
xor
jns
pop
stc
pop
inc
dec
orl
add
rorb
pop
pop
jmp
scas
popa
sbb
into
fdivl
push
decl
out
pop
cmpsl
into
into
pop
cld
fiadds
push
sbb
xchg
jnp
jne
dec
cmpsb
xor
fisubrs
dec
test
mov
fsubp
aaa
cmp
lea
sub
stos
push
imul
lahf
pop
in
or
faddp
lock
fadds
sbb
into
fiadds
xchg
mov
repnz
gs
stos
iret
loope
jb
int
inc
mov
aad
cltd
jle
std
mov
shlb
inc
adc
cmp
ret
stos
xor
jp
sahf
fdivrp
adc
inc
or
lcall
mov
mov
add
mov
cmp
or
dec
push
pusha
mov
fisubs
ficoms
pop
mov
sti
and
xchg
ficomps
cld
push
jg
in
cltd
fbstp
enter
mov
ret
inc
xchg
fsubp
cmp
outsb
sub
push
ficoml
and
push
cli
in
data16
js
nop
cli
sbb
into
test
and
mov
fdivrp
mov
arpl
push
sbb
add
scas
mov
cld
mov
pop
lret
lret
je
insl
pop
or
dec
add
mov
pop
add
cmpsl
std
xchg
and
mov
cmp
ficoms
sub
add
or
and
pop
imul
dec
xchg
ret
fiadds
in
push
aaa
jge
push
fs
sbb
mov
shr
mov
test
enter
and
shrb
cmp
inc
xchg
fiadds
popa
xchg
and
sbb
xchg
sbb
rcrb
xor
cmp
fcmovbe
jmp
ss
repnz
adc
test
inc
jns
dec
push
mov
int3
call
cld
inc
ficoms
aam
fdivl
fisubs
add
gs
or
out
into
movsb
loop
jb
fwait
jmp
lret
jbe
cmp
shl
add
mov
cmp
push
jno
pop
sahf
cli
dec
add
into
sub
inc
cmp
ds
and
sbb
add
imul
pop
neg
pop
mov
inc
das
fsubrp
mov
daa
shl
jecxz
adc
jns
fsubrs
cmp
inc
rclb
scas
mov
into
inc
sub
jecxz
xor
pop
pmaxub
adc
insl
lods
lds
fisubrs
and
cmpsb
jbe
cmp
int
fsts
outsb
mov
mov
mov
or
fisubrs
shl
fiadds
and
js
subps
push
sti
outsl
sub
push
push
fsubp
dec
mov
mov
aaa
mov
or
cmp
sbb
xchg
cmp
leave
std
in
push
fwait
lret
adc
cld
xchg
sbb
arpl
mov
insl
sahf
push
xor
adc
fidivs
ds
pop
sub
jp
andl
fdivp
call
shrl
adc
std
test
jb
adc
fiadds
mov
jle
xor
inc
out
or
fisubs
mov
push
add
mov
mov
mov
mov
add
xlat
sbb
sub
and
ficoms
push
push
inc
je
addr16
dec
jp
mov
fmull
lcall
movsl
adc
pop
sbb
cs
dec
test
imul
test
fisubrl
in
fisubs
and
inc
fistpl
or
jp
push
sbb
sbb
popa
cmp
out
stos
and
sbb
pop
das
ret
add
mov
fists
sti
cmpsl
aas
in
iret
pop
fdivrp
leave
xor
fwait
outsl
add
cld
into
jmp
pop
das
mov
mov
mov
cmp
fdivp
and
push
sub
inc
imull
inc
push
mov
shl
std
lock
and
push
jbe
and
popa
fidivs
into
dec
stc
inc
std
lods
fwait
jl
fmull
imul
mov
ret
or
pop
sti
mov
int
pushf
mov
test
mov
jl
ret
pop
xchg
fimuls
and
adc
cmpsb
push
sbb
lahf
fs
fcompp
cmpb
lock
jl
hlt
fdivrs
or
and
jbe
push
jge
rcll
jl
fiadds
pop
mov
fsubp
loope
scas
push
int
add
or
cmc
nop
enter
jle
cmp
mov
or
sbb
sarb
ret
fisubrs
pop
lods
pop
cmp
orb
fisubrs
mov
push
out
xlat
dec
sbb
or
cmp
fisubs
dec
dec
inc
cli
adc
fisubs
adc
mov
xchg
and
mov
into
in
popa
adc
mov
xor
fiadds
shll
or
jp
shlb
fisubrs
jns
ret
fmulp
mov
mov
mov
js
loopw
fidivrs
ss
or
push
in
fldt
lea
in
or
outsl
sub
movb
add
movsb
jle
pop
mov
mov
cmpsl
mov
xor
fdivrp
loop
sarb
fisubrs
in
orl
push
insb
ss
repnz
sub
cmpsb
xchg
cmp
jmp
mov
call
fstpl
push
mov
push
lretw
into
js
jge
ret
ficomps
test
pop
cli
in
mov
xor
inc
mov
pop
pop
sbb
lods
aas
dec
inc
sbb
and
fimuls
dec
or
ret
inc
movswl
xchg
stos
sbb
push
xchg
fimuls
sarb
stos
lret
add
add
cld
jbe
leave
aam
sbb
xchg
out
cltd
mov
imul
cmp
inc
add
fwait
xchg
scas
dec
in
or
leave
int
xor
push
push
jg
push
rol
das
pop
fidivs
push
cmp
jg
out
into
loope
xchg
ds
sbb
sbb
in
mov
pop
lcall
in
loop
fsubr
pop
fwait
rcrl
xlat
add
or
push
mov
sbb
fiadds
shrl
call
xor
sti
loopne
dec
push
fmulp
xchg
insb
push
xor
negb
insl
mov
ficoms
leave
mov
add
jle
cmp
inc
icebp
pop
lahf
fisubrl
inc
xchg
fimuls
stos
mov
int
cmc
loop,pn
mov
rolb
aad
maskmovq
jge
outsl
lods
and
loope
mov
fisubs
repz
sbb
dec
sub
sbb
cld
cmp
cmp
dec
fidivs
loopne
and
call
das
xor
mov
cmp
std
cld
lcall
ljmp
orl
inc
cmc
sbb
rcrb
jmp
cmp
sub
xor
out
jle
movsl
jl
dec
orb
scas
out
rol
lds
xchg
jae
les
mov
popf
aas
add
lret
leave
xor
mov
mov
cmp
je
xor
out
mov
xchg
xchg
lcall
lahf
shlb
js
ljmp
inc
daa
into
and
sub
xchg
ds
pop
lret
rol
ficoms
xor
or
outsb
xor
sbb
push
test
xchg
xor
push
fimuls
dec
add
stos
mov
fiadds
lret
ja
ss
pop
sahf
hlt
fbld
fiadds
and
mov
add
ficomps
js
xchg
movsl
pop
int
faddp
mov
dec
xchg
fisubs
nop
mov
mov
adc
cld
add
inc
xorb
ficoms
sub
std
iret
add
mov
push
mov
and
push
push
mov
jg
mov
subb
imul
ficoms
mov
test
jp
ficomps
lret
jnp
or
std
jmp
add
shl
fisubs
icebp
and
ret
loope
fidivrs
aaa
jno
test
fcompl
fs
aam
push
les
dec
orb
clc
sbb
sbb
fmul
and
inc
lret
add
jge
dec
pop
push
fisubrl
mov
aam
fucom
xor
lret
mov
add
jle
aas
ficomps
mov
mov
dec
xor
push
sar
ret
fistl
aad
add
shll
fisubrs
out
and
jecxz
or
movsb
and
rcrl
or
xchg
inc
pusha
add
sahf
fiadds
sub
out
ficoms
xorl
or
sbb
mov
xor
testb
mov
imul
add
roll
sub
push
sbb
sub
push
xor
and
ljmp
shl
std
fmulp
jnp
fwait
ss
add
adc
xor
cmpsl
arpl
fstl
fimuls
out
fisubs
xchg
gs
xchg
push
ficomps
in
dec
pop
inc
xchg
faddp
mov
jl
mov
ret
shl
mov
cli
lcall
std
xchg
sub
iret
or
fisubrs
dec
aas
lea
mov
xchg
mov
aad
xor
xor
insb
and
inc
sahf
add
xchg
mov
push
into
test
or
lret
sahf
sarl
cs
loop
addr16
jg
dec
mull
or
mov
loope
sbbl
roll
and
outsl
push
cmp
ficoms
sahf
or
cld
mov
insl
mov
xchg
test
jecxz
xor
push
imul
shr
ficomps
cmp
in
leave
jle
shlb
push
cmc
je
push
xchg
pop
lret
mov
mov
cwtl
test
pop
loope
sahf
cltd
inc
ds
add
and
sbb
stc
jl
lret
xchg
test
scas
ret
out
in
lret
rcl
fisubs
pop
xor
fisubrs
jbe
adc
in
push
scas
adc
jmp
loopne
out
sahf
fmulp
sub
xor
adc
mov
icebp
loopne
ja
cmp
mov
into
fs
jne
cmp
jnp
fucompp
aas
cmp
dec
mov
in
outsb
popa
outsl
cmp
lea
mov
adc
xor
inc
fisubs
sbb
adc
outsl
out
push
cwtl
dec
pop
fidivrs
iret
outsb
sbb
repz
fmulp
pop
mov
mov
jo
std
push
fcomp
cs
addb
stos
mov
fdivl
mov
pop
add
jns
mov
lods
xorl
insl
xchg
rorl
ficoml
leave
jl
fidivs
adc
popf
xchg
icebp
fisubs
and
hlt
ljmp
fisubs
add
dec
loope
pop
ficoms
ljmp
fisubrs
div
and
imulb
lds
xchg
mov
pop
dec
mov
insl
add
dec
lcall
ror
int3
pop
xchg
lods
fidivrs
jg
push
sbb
jne
data16
ficoml
pushf
mov
sub
into
pop
adc
arpl
faddp
mov
lock
or
push
pop
jbe
pop
popf
ficoms
ret
test
xchg
fcom
dec
ljmp
mov
sub
repz
data16
shl
ja
rol
pop
xor
xchg
fisubs
cmp
std
sti
idivl
iret
rol
and
sub
dec
inc
add
pusha
or
fisubrs
push
mov
mov
lahf
sbb
movsb
pop
repz
les
pop
fidivrs
cltd
aam
out
pop
fidivrs
sti
cmc
inc
sub
cmpsl
mov
mov
jo
sbb
xor
fnstenv
std
in
sbb
mov
fidivrl
ret
xchg
dec
daa
sbb
ja
mov
pop
fmulp
in
test
cs
adc
adc
lahf
int3
fimuls
xor
cmpsb
pop
sbb
test
xor
sbb
faddp
mov
mov
ficomps
je
stc
jl
in
sbb
lret
call
fdivp
ds
and
arpl
leave
fisubs
insl
lahf
ja
insb
xchg
fidivrs
je
push
jne
sub
std
jg
push
dec
loope
mov
int
fimuls
sub
adc
rolb
pop
cli
es
popf
lcall
cmp
lret
ret
lds
cltd
std
outsb
idiv
jno
lret
sub
inc
loope
lahf
stos
addr16
das
cltd
cwtl
fimuls
daa
jecxz
sub
xlat
lcall
rorl
cli
subb
decb
inc
cmp
inc
mov
xchg
dec
pop
xchg
mov
jle,pt
or
and
rclb
xlat
mov
add
lcall
rcll
push
sub
into
testb
push
mov
and
push
enter
mov
icebp
stc
nop
std
sub
fdivp
mov
imul
cli
cmp
ss
sub
mov
and
push
push
push
out
pop
fimuls
sbb
dec
pop
imul
add
mov
fs
cmc
pop
out
fidivs
cmpsl
in
into
jne
or
adc
movsb
fmulp
pushf
sub
push
stos
or
gs
rolb
aas
and
jg
push
sbb
fsubrp
dec
cld
cmp
testl
mov
xchg
inc
xchg
data16
clc
stc
inc
stos
jne
mov
test
and
inc
loopne
ds
ds
push
into
mov
lret
int
xchg
sbb
adc
stc
mov
and
filds
push
fstpt
stos
sbb
inc
ficomps
mov
adc
cmp
imul
cmp
inc
std
or
fwait
sbb
in
dec
out
push
fmulp
cmovs
xor
push
xchg
fisubl
ficomps
sti
jbe
inc
push
xchg
ficomps
xlat
cs
ret
lcall
ds
mov
imul
in
pop
mov
xor
ficoms
push
call
outsb
or
xor
mov
add
test
lea
out
scas
fiadds
outsl
stc
or
push
fimuls
enter
xor
fidivrs
push
adc
add
leave
push
inc
rclb
test
fdivp
imul
fisubs
rcr
sbb
movsl
cmp
inc
mov
push
dec
push
fisubrs
aad
fwait
xlat
icebp
mov
fidivs
cmc
rcr
ficoms
and
or
comiss
mov
jg
sub
push
jne
cmc
ja
mov
and
push
mov
testb
or
adc
sbb
fidivl
mov
inc
shrb
fsubrp
mov
fcompl
loope
xor
dec
lret
test
aas
inc
div
bound
xchg
into
stos
sbbl
cmc
pop
ficoms
cmp
push
imul
inc
or
movsl
mov
fadds
out
lcall
es
fs
add
ret
sbb
cmp
and
popf
sbbb
negl
aam
hlt
outsb
loope
das
lock
mov
dec
dec
inc
and
lods
push
lcall
or
pop
cmp
or
jns
test
lock
jb
mov
into
das
stc
dec
dec
inc
lds
imul
imul
mov
mov
test
xchg
jle
and
inc
push
fidivs
dec
push
cld
cmp
mov
ja
mov
pop
ret
mov
pop
xchg
leave
shrb
mov
or
inc
add
jae
js
xchg
pop
ret
mov
mov
pusha
les
sbb
jns
mov
inc
mov
faddl
shrl
into
out
inc
push
mov
push
push
xchg
cmp
pushf
dec
fisttpll
bound
mov
dec
mov
mov
mov
and
mov
xchg
mov
inc
into
pop
cmp
jmp
sub
inc
fdivr
ret
jg
aaa
cmpsl
xor
xchg
jl
outsb
sbb
lahf
mov
inc
mov
inc
sbb
fcomps
enter
cmpl
jge
loopne
iret
push
cmp
out
jmp
and
jb
jmp
push
mov
cmp
jle
stc
mov
rcrb
xorl
cld
xor
jle
xchg
pop
push
es
xchg
push
fdivp
stos
test
setns
xchg
cmc
jecxz
stc
cmp
xor
ficomps
or
loope
push
dec
scas
inc
notb
fsubp
movsl
lret
xchg
ljmp
sbb
lods
into
jg
jo
scas
jb
imul
popa
jbe
or
pusha
std
xchg
mov
adc
pop
popa
loop
roll
sub
pop
sbb
bound
and
pop
dec
mov
fisubs
inc
neg
pop
sub
ss
cmpsl
es
aam
popa
fiadds
lea
roll
les
inc
lret
dec
sbb
pop
ficoms
push
andb
pop
popf
sub
cmpsl
mov
mov
mov
rcrb
rorb
push
fiadds
in
aas
and
lods
push
adc
ret
mov
pop
mov
jmp
aad
into
fnstenv
ljmp
inc
data16
enter
jle
mov
out
dec
cli
fiadds
cmpsb
lret
inc
cmp
outsl
ds
out
js
cmp
mov
cmp
cmp
cmp
sub
push
mov
and
iret
repz
xchg
fildll
icebp
lret
ficoms
cmpsl
jo
inc
mov
in
rolb
sbb
fidivs
adc
add
imul
sbb
xor
push
in
jns
test
lahf
mov
dec
xor
leave
mov
push
cli
fildl
mov
cwtl
hlt
loopne
jecxz
rorb
add
ds
icebp
sbbb
pop
test
mull
sbb
xchg
ss
add
ja
pop
daa
pop
cs
jg
nop
inc
rolb
dec
lret
push
scas
inc
lds
xchg
ficomps
jg
enter
daa
xor
aad
inc
sarl
pop
insl
sbb
inc
leave
pop
mov
sbb
stos
incb
bound
fstp
mov
repnz
sub
imulb
das
cli
dec
inc
scas
pop
mov
mov
fs
shrb
pop
and
lret
outsl
or
push
movsl
push
adc
push
mov
aas
ficomps
repz
loopne
fwait
sub
sub
jo
inc
adc
push
mov
pusha
cwtl
scas
xchg
mov
in
repz
push
xor
jmp
push
or
push
jno
addr16
pop
mov
cmp
out
cmp
push
imul
les
push
or
jb
repnz
inc
mov
xchg
movsl
iret
jne
les
aad
fsubp
mov
mov
fiadds
inc
in
jae
sahf
cld
rolb
dec
fidivrs
sbb
outsb
mov
das
sbb
fidivrs
je
inc
dec
hlt
test
mov
call
inc
rcl
xchg
rcr
sbbl
sbb
jne
inc
mov
cmp
sahf
or
insl
stc
outsb
mov
fidivrs
or
mov
jbe
sbb
xchg
ds
mov
add
jle
ljmp
mov
ficomps
and
mov
mov
mov
sub
enter
fisubs
or
test
pop
test
mov
push
mov
and
jb
cmp
jmp
adc
cs
aas
jns
mov
addr16
mov
push
cmp
fstps
into
or
push
hlt
xor
fdivp
dec
je
mov
fiadds
cmc
mov
stc
std
sti
into
jbe
repnz
icebp
pop
or
and
xchg
jnp
popa
jb
test
inc
test
mov
rol
stos
rcrb
mov
mov
mov
fsubrp
mov
lock
jg
fsubrs
mov
jge
les
push
push
stos
xchg
sarl
test
loope
mov
add
adc
pop
add
imul
dec
pop
fisubs
xor
pushf
popa
xchg
add
jb
scas
std
ret
cs
ds
test
adc
and
mov
daa
fimuls
cwtl
cltd
fcmovnu
imul
xlat
lret
fisubrs
cmp
call
rcrb
pusha
jne
xchg
inc
les
es
xchg
mov
pusha
int3
push
push
push
mov
sbb
mov
popa
cwtl
mov
fidivs
mov
or
cmp
cmp
std
sub
clc
adc
fcoms
pop
mov
pop
fisubrs
sub
stos
imul
sarl
sbb
jae
pop
jo
arpl
mov
into
cltd
lea
std
cltd
mov
pop
mov
fisubs
fs
setp
cmpsl
pop
addr16
inc
hlt
call
jmp
in
sub
mov
nop
daa
inc
gs
jge
mov
xchg
pop
imul
aad
jle
xor
enter
sbb
adc
lock
or
divb
clc
cli
jge
push
lret
add
mov
ficoms
dec
iret
jo
out
mov
sbbb
jno
xor
inc
mov
mov
jle
add
adc
leave
push
dec
sbb
xchg
stos
dec
xor
push
cld
out
int3
aam
add
push
dec
shl
or
sbb
lret
xchg
arpl
sbb
in
fimuls
je
xor
push
aam
arpl
sbb
pop
fisubrs
lock
cwtl
mov
adc
je
scas
jmp
push
ficoms
imul
mov
into
in
inc
cmp
out
pop
test
roll
rol
daa
jle
adc
or
jnp
ret
pop
push
scas
insl
mov
xchg
fisubrs
dec
sbb
xchg
xor
add
fiadds
icebp
sub
test
imul
inc
push
push
daa
adc
mov
fstpl
or
faddp
jmp
sbb
cld
dec
popf
movsl
sarl
inc
fwait
pop
loop
cmpsl
pop
and
ja
sahf
pmaxub
xchg
outsl
xor
jo
add
xor
mov
movsb
push
out
repz
adc
fisubrs
dec
cli
sub
cmpl
jo
rcll
mov
into
gs
ja
cwtl
in
dec
jns
fiadds
leave
or
call
loop
pop
pop
pop
or
lods
fnstsw
pop
adcl
in
shll
std
xor
fisubrl
pushf
ss
inc
popa
jns
xchg
fidivs
add
ja
out
fs
scas
dec
mull
mov
in
jae
lds
fisubrs
inc
shl
mov
repnz
lds
sub
fisubs
add
push
adc
imul
fsubp
mov
mov
lcall
and
lahf
fdivp
aam
sbb
fmulp
or
jl
fisubrs
add
fisttpl
or
or
std
dec
push
cmp
std
xor
lahf
ds
and
pop
push
aad
fistpll
or
mov
sti
inc
xchg
iret
pop
fisubs
xor
fimuls
mov
pop
dec
out
jb
mov
ret
jle
add
into
vorps
insl
mov
mov
push
inc
sti
inc
or
pop
aas
mov
add
std
cmpl
and
push
xchg
inc
adc
xor
fisubrs
jne
aam
out
push
lcall
add
mov
loopne
fisttps
mov
aas
test
repz
jb
mov
fidivs
std
and
pop
jl
es
push
adc
adc
addb
mov
adc
ret
sti
add
sbb
hlt
mov
jg
and
and
int
inc
popf
je
movsb
pusha
ficomps
jle
xchg
add
jp
pop
ss
ficomps
aad
faddp
jge
push
xor
push
dec
std
incl
pop
enter
fstps
out
stos
fidivrs
clc
cltd
insl
hlt
and
jecxz
jmp
add
cmp
std
or
xor
mov
inc
adc
mov
fisubs
push
int3
idiv
incl
sbb
fimuls
dec
mov
out
dec
cmp
cld
in
ret
ror
subb
ficoms
insl
push
lods
mov
shlb
outsb
mov
clc
in
push
cld
fidivs
fstps
adc
sbb
mov
insl
stos
mov
loopne
jo
rclb
lcall
add
or
fs
scas
aaa
pop
fidivrl
pop
adc
into
sbb
inc
inc
sbb
ret
cmpsl
or
gs
movsb
outsb
mov
int3
andl
jmp
aad
mov
xor
outsl
jb
arpl
ss
into
sub
inc
sahf
dec
inc
sahf
mov
pushf
cli
cltd
cmpsl
lret
sub
stos
fidivs
xchg
addr16
loope,pn
bound
xor
jl
fcompl
cmpsb
sar
and
stc
loope
enter
or
inc
dec
stos
inc
sub
cmp
aam
std
cmp
mov
fisubrs
push
push
mull
mov
mov
add
xlat
leave
loopne
pop
xor
je
divb
push
fisubrs
pop
inc
in
leave
mov
cwtl
and
jb
enter
push
fidivrs
mov
sbb
sbb
pop
mov
and
or
pushf
test
pop
daa
xchg
pop
fidivl
or
jmp
insb
fsubrl
test
scas
xchg
or
xchg
pop
ficomps
mov
enter
pop
xor
mov
insl
jp
cmp
and
sbb
mov
xchg
icebp
shlb
std
clc
push
cmp
fs
add
sbb
aas
or
jns
inc
jne
mov
movsb
add
mov
mov
sub
shr
outsl
aas
ds
push
add
mov
mov
psllq
dec
pop
mov
and
sbb
adc
or
pop
leave
fidivs
adc
cmp
dec
add
xor
ficomps
cld
or
daa
cltd
pop
call
fidivrs
pop
cmc
test
adc
cmp
push
dec
jo
sbb
push
fisubs
mov
cmp
dec
fisubs
jno
push
add
jg
iret
inc
je
sti
fidivrs
addr16
dec
neg
int
fcmovne
xchg
mov
push
jle
adc
add
ja
pop
cs
dec
xor
mov
jecxz
xor
mov
jbe
cmp
push
xchg
cli
fidivrs
stos
dec
inc
dec
jp
nop
jecxz
pop
sub
scas
fdivrp
add
adc
xchg
xor
dec
add
jns
repz
or
into
mov
mov
rcr
lret
fisubrs
pop
in
notl
hlt
cmpsl
mov
out
pop
rclb
loopne
test
mov
xchg
mov
cld
lret
repnz
aam
mov
cmp
pusha
fsubp
cmpsl
pop
out
or
fimuls
xor
data16
cmp
insb
mov
jne
scas
jns
addr16
mov
xor
mov
fstl
mov
or
cmp
loopne
and
xor
ljmp
mov
inc
push
cmp
out
xor
xorb
ret
ja
nop
jnp
add
sbb
test
mov
fistps
or
pop
mov
movsl
jl
xor
lcall
das
icebp
add
lock
push
inc
fdiv
adc
add
jge
mov
push
loop
mov
fdivs
loope
fidivrs
add
xchg
ja
iret
jle
and
loopne
ja
adc
pop
and
pushf
lods
faddp
push
stos
ret
cmp
xor
sti
fcmovu
shlb
inc
insb
popa
add
cltd
jmp
jbe
xlat
sbb
push
sub
into
mov
pop
push
fisubs
ret
xor
mov
std
and
cld
sti
sbb
lea
adc
dec
pop
lds
xchg
out
xchg
jo
rcr
jmp
std
sub
push
cmp
inc
push
inc
fisubrs
seto
jbe
and
add
ss
mov
jl
mov
enter
or
out
fimuls
and
pop
idivl
into
scas
imul
in
push
mov
mov
cmp
jno
xlat
jnp
fisubs
mov
mov
mov
sub
jmp
jp
mov
sbb
jle
arpl
mov
cli
fidivrs
and
sub
pusha
lret
movsb
cmp
xchg
ds
ret
addr16
mov
or
mov
shrl
ficoms
out
mov
and
roll
push
ficoms
subb
pop
lret
das
mov
sbb
xchg
mov
add
dec
outsl
sbb
cltd
push
dec
push
cld
sarl
movsb
scas
or
cmpl
xchg
jb
mov
inc
push
ficoms
lcall
cld
xor
mov
aad
cltd
pop
dec
pusha
je
lods
sbb
ds
cmp
mov
cwtl
mov
pop
sahf
std
xchg
lods
daa
xor
add
scas
lods
add
mov
ret
and
lock
movb
in
repnz
fsubp
shrb
push
out
ja
xor
adc
mov
xor
pop
mov
jg
adc
sub
fstpl
or
add
mov
sub
mov
mov
fcomps
shlb
mov
mov
imull
pop
push
mov
push
lahf
mov
out
xchg
repz
bound
pop
enterw
jo,pt
mov
mov
icebp
cmpsl
pusha
inc
lret
push
fiadds
xchg
pop
fidivs
xor
mov
jge
jno
bnd
xchg
sub
lods
fimuls
mov
add
pop
cmc
out
out
shll
ficoms
xor
jb
and
inc
scas
xor
movsl
sub
sbb
mov
addr16
cld
call
inc
sbb
daa
jae
mov
push
mov
popf
or
fwait
neg
pushf
mov
dec
das
fidivrs
and
mov
cwtl
cmp
dec
ror
mov
ret
fiadds
jg
aas
rcr
popa
and
cmp
addr16
jno
jne
testb
aaa
fistpll
into
mov
xor
xchg
mull
rolb
mov
mov
cli
mov
xor
enter
push
xchg
hlt
out
ljmp
arpl
sub
lcall
out
cmp
mov
fidivs
fdivrp
nop
lods
je
mov
fidivs
rol
sub
fidivrs
mull
pop
test
cld
mov
push
movsb
mov
loopne
or
jge
add
stc
pop
adc
jg
jns
ficoms
push
mov
fisubs
xor
adc
leave
jg
and
push
roll
cmp
mov
loop
stos
jae
inc
mov
mov
adc
into
jle
aam
cs
cwtl
lds
add
mov
dec
enter
fidivrs
das
test
mov
cmc
sub
xor
fidivs
mov
or
pop
push
pusha
pop
lahf
inc
push
popl
lock
push
and
sub
add
jge
pop
pop
les
cli
ficoms
loope
data16
sub
shlb
jle
sar
ficomps
into
and
ficoms
pop
repnz
pop
lret
ret
mov
xor
fldenv
pop
sahf
dec
cmc
inc
andb
cld
stos
sbb
lret
dec
mov
pop
mov
dec
into
mov
pop
cmp
mov
faddp
sbbl
mov
fisubs
mov
pop
pop
jne
fisubs
sub
in
push
sbb
fdivrp
mov
stos
dec
fsubrp
jmp
mov
ficomps
mov
dec
or
push
xlat
sbb
sbb
stc
or
daa
nop
or
jmp
dec
inc
mov
dec
ss
int3
adc
iret
lea
sub
scas
cmpsl
lahf
icebp
inc
jmp
mov
cmp
pop
inc
xchg
ficoms
add
fisubrs
sbb
cmpsl
lcall
jne
mov
lret
or
sub
xor
ret
or
ss
fiadds
mov
faddp
xchg
mov
out
add
aad
sbb
xor
fistps
mov
fiadds
inc
lret
sub
insl
mov
or
or
lret
jnp
call
jle
shlb
xchg
decb
cmpsl
xor
inc
mov
ja
jmp
clc
or
mov
outsl
xor
adc
xorb
hlt
lret
fiadds
sahf
faddl
repnz
aam
jecxz
jae
scas
sti
addl
add
imul
jmp
ficomps
stc
test
add
and
adc
popaw
rorl
and
pushf
pop
xchg
inc
or
fdivrp
outsl
rcrb
pop
je
or
pop
jle
ds
mov
fidivs
pop
in
pop
fsubp
mov
cmpsl
and
dec
out
into
pushf
mov
daa
fmulp
jb
or
cltd
insb
cmp
sti
repnz
fwait
sbb
xchg
xchg
mov
outsl
test
xlat
das
inc
ficoms
or
outsl
mov
fisubrs
test
or
fisubrs
push
out
icebp
loop
test
cmp
dec
add
stos
lods
xchg
outsb
ss
pop
dec
mov
and
aas
loop
ret
cld
lods
mov
and
pop
mov
fcoms
xor
fiadds
adc
fidivrs
push
xor
inc
sub
jle
jo
sbb
sbb
xchg
roll
jns
jno
jb
xor
iret
mov
adc
out
mov
lods
std
cmp
rorb
lock
push
dec
sub
inc
or
arpl
cld
imul
mov
movsl
push
mov
fs
push
out
outsl
fisubrs
movb
std
addb
add
inc
inc
jle
fcoml
popf
stos
ds
mull
jb
dec
fwait
adc
loopne
je
aaa
mov
outsl
in
dec
mov
mov
iret
call
push
fidivrs
dec
in
out
cmp
pop
aaa
jmp
fidivs
xchg
lods
add
stc
out
xor
mov
and
push
mov
cld
jbe
int
bswap
pop
test
xchg
lcall
mov
sub
sub
fidivs
pop
add
fidivrs
push
mov
loope
arpl
mov
push
xor
jbe
add
sbb
les
sbb
and
jle
mov
leave
lret
lock
jle
xlat
out
les
fcmovu
push
adc
sbb
shlb
fcmovnu
cmp
icebp
ret
fs
push
jae
xchg
inc
jb
faddp
dec
out
add
lods
test
add
push
das
into
mov
outsl
mov
jnp
jo
ja
mov
or
pop
iret
dec
lret
ret
pop
lret
push
aaa
std
aas
test
and
xchg
push
shld
and
push
pop
pop
lock
ficomps
pop
ret
std
cmp
int3
mov
ss
fidivs
std
jno
fimuls
jo
adc
sbb
sub
in
push
adc
sub
and
shll
idiv
fidivrs
ret
std
shll
push
cmpsl
cmpsb
ret
jns
push
test
mov
jns
push
pop
cltd
iret
inc
faddp
jecxz
push
test
into
cmp
fimuls
in
test
out
add
and
xchg
pushl
push
ret
insl
add
sbb
fisubs
mov
pop
sbb
ret
outsl
in
faddp
fcmovnb
mov
mov
adc
ficoms
sbb
mov
pop
fiaddl
lahf
cld
push
cmp
jns
add
ret
cmp
insb
adc
movzwl
push
cli
call
pop
fimuls
enter
lret
je
mov
cs
cmpsl
fiadds
sub
les
mov
pop
cmpsb
lret
mov
fimuls
mov
pusha
ficoms
shrb
std
je
or
gs
sbb
out
xchg
jns
jge
cmc
xchg
jp
fsubrp
ds
test
xor
xor
repnz
jb
out
in
jbe
test
and
aas
jp
xchg
mov
pop
sbb
fisubs
out
loopne
pop
mov
psubq
jmp
add
mov
and
call
popa
xchg
into
adc
sahf
jp
jns
ja
inc
aam
ficoms
or
xchg
std
adc
imul
push
xchg
cli
fwait
addb
or
lret
leave
sar
scas
push
xor
push
nop
xlat
fisubrs
mov
or
mov
add
sbb
fsubp
mov
idivb
xchg
subb
call
fbstp
out
lods
push
std
mov
roll
xchg
or
push
xlat
clc
insb
pop
aad
inc
fidivs
jns
icebp
pop
lahf
xchg
fisubs
fucom
loopne
imul
mov
inc
fmulp
adc
lret
jbe
ficoms
adcb
pop
enter
add
std
nop
cmp
adc
pop
and
outsb
fiadds
dec
sbb
pop
mov
mov
sbb
int
mov
scas
and
repz
pmuludq
outsl
mov
cli
into
mov
mov
sub
xchg
sbb
ficomps
imul
push
das
loop
mov
fidivrs
jle
in
jmp
adc
fcoml
shlb
ja
jo
faddp
mov
pop
enter
lods
push
push
and
cmc
sbb
lret
scas
xchg
push
daa
int
jb
fisubrs
jp
sti
sbb
mov
out
aaa
xor
fiadds
add
cwtl
arpl
mov
inc
pop
std
jbe
mov
dec
or
xor
test
adc
das
mov
clc
adc
loopne
fidivs
sbb
cld
sbb
xchg
lcall
fcmovb
shrb
out
jle
rorb
push
into
pop
dec
xor
fistpll
xchg
rclb
adc
stc
nop
lds
push
and
pop
fdivs
push
std
ficoms
dec
test
and
xchg
and
or
insl
fidivl
mov
sub
popf
outsb
xchg
ja
dec
ficomps
fsubs
xchg
cli
jb
sti
shl
iret
pop
push
or
adc
jns
ret
idivl
pop
out
insb
fsubrp
xchg
popa
add
push
jge
fidivrs
dec
ret
mov
mov
xchg
lret
pop
mov
pop
int
into
test
sbb
xchg
mov
repnz
sub
dec
test
pop
xchg
lods
mov
mov
jmp
ror
xchg
cmpsl
push
into
push
faddp
lods
cs
pop
cmp
fidivrs
call
int
cmpsb
mov
imul
out
inc
aaa
fisubrs
ret
add
outsl
push
push
mov
xchg
pop
adc
ficomps
or
fcom
test
sahf
aas
xchg
add
leave
jmp
push
sarb
fisubs
data16
fidivs
dec
adc
adc
pop
mov
pop
fnsave
popf
jno
repnz
jmp
inc
out
or
lret
rclb
faddp
inc
inc
add
stos
push
pop
sahf
cltd
repz
xlat
out
pop
sarl
fcmovb
xchg
or
int
pusha
xchg
adc
fiadds
daa
cmp
xchg
mov
iret
cmpsb
int3
fisubrs
or
data16
fisubs
mov
push
dec
fidivrs
push
jge
sahf
lret
xor
in
pushf
mov
sub
push
pop
jg
bound
scas
or
mov
mov
push
sbb
cld
push
lret
cmp
sarb
or
xor
push
mov
arpl
sbb
sbb
lea
lock
lret
sbb
pop
jle
add
insb
movsl
rorl
into
cmpsl
int3
push
test
clc
or
rclb
dec
lret
and
into
idivb
addb
roll
pop
jmp
xor
xor
neg
inc
ljmpw
fidivs
movsl
adc
adc
pop
add
ret
cmp
daa
mov
addr16
hlt
xchg
dec
std
in
into
icebp
mov
fidivrs
subl
adc
jl
movsl
js
adc
loopne
push
dec
xor
stos
fsubrp
sbb
sahf
sbb
cld
fimuls
movsb
adc
fimuls
imul
ss
sbbb
cmp
xchg
leave
arpl
inc
xor
push
bnd
push
mov
pop
rorb
mov
mov
sub
lods
jecxz
mov
push
adc
mov
imul
push
dec
mov
lret
xchg
xchg
lods
aam
out
fdivrp
shrl
or
dec
or
pop
testb
std
xchg
scas
sbb
jge
fisubrs
fildll
faddp
push
xchg
fsubp
cltd
jne
sub
xlat
xchg
pop
or
and
push
fstp
pusha
add
cmp
mov
cld
jmp
cltd
and
fisubrs
pusha
dec
inc
loop
sub
xchg
and
test
cld
nop
cmp
outsl
ret
push
loope
dec
mov
fdiv
mov
iret
movl
fisubs
jo
fimuls
push
int
sahf
mov
or
dec
xchg
dec
fisubrs
xor
jb
sub
or
fs
and
pop
jle
pop
test
push
fisubrs
rcll
ror
push
jl
jb
xor
xchg
pop
movsl
mov
xor
mov
fiadds
fisubl
in
mov
fsubrp
jae
jl
inc
mov
dec
mov
in
jnp
pop
div
outsb
test
pop
das
ficoms
jg
inc
je
push
pop
dec
lods
addl
lcall
pop
rcr
aas
dec
pop
cmp
fs
into
arpl
dec
dec
iret
cmp
test
les
fiadds
das
insb
sbb
mov
aas
es
or
mov
aaa
icebp
movsl
ficoms
jp
mov
fidivs
xchg
lds
sti
ljmp
adc
sub
push
pop
arpl
mov
pop
into
popa
mov
xchg
fisubs
xor
je
and
xor
test
out
pop
popa
stos
cld
sbb
jns
into
mov
xchg
in
fisubs
dec
sub
push
sbb
jns
mov
pop
inc
and
sub
fimuls
mov
std
xor
mov
cltd
aas
push
fidivs
out
pop
cmp
lods
scas
sbb
fmuls
fiadds
or
in
inc
jnp
lcall
cmpsb
mov
mov
and
xchg
popa
sbbb
jno
xchg
jl
pushf
stc
push
sbb
fiaddl
andb
xor
or
popf
add
sahf
aad
sbb
fimuls
mov
idivb
out
pushf
push
mov
ret
sub
fsubrp
adc
pop
sbb
cmp
dec
mov
mov
lods
repnz
xor
xchg
popa
fwait
ljmp
fstps
cld
push
inc
divb
std
cltd
test
mov
cmp
push
les
faddp
xchg
pusha
cmp
mov
pop
sbb
hlt
mov
test
insl
fisubrs
and
pop
aam
push
mov
dec
enter
mov
jne
mov
into
push
mov
push
pop
sub
mov
add
xor
mov
mov
jp
nop
ljmp
xchg
sbb
gs
jp
fdivrl
clc
push
and
scas
pmaxub
into
mov
jmp
lret
fdivp
inc
pop
fs
jnp
inc
ret
mov
jecxz
repz
adc
mov
jbe
sub
popl
or
mov
aas
cmp
cmpsl
das
adc
jmp
mov
shlb
xchg
or
fisubs
inc
add
mov
mov
es
je
mov
cmp
mov
shlb
inc
cmc
cli
dec
jg
mov
sub
sbbl
adc
pop
jae
and
into
cli
adc
jecxz
push
dec
rclb
stos
push
fimuls
lods
cld
lahf
add
sub
xchg
mov
imul
fiadds
or
in
dec
gs
adc
fadd
xor
xchg
faddp
imul
sbbl
dec
xchg
or
repnz
fmuls
pop
fidivrs
xor
insl
sbbl
sub
mov
test
add
comiss
rcr
mov
daa
sub
or
aaa
jne
imul
inc
mov
sbb
and
ss
jl
inc
shl
push
arpl
sti
xor
jns
test
inc
pop
xchg
fiadds
and
test
add
sbb
mov
add
ret
fiadds
cltd
shll
loop
jle
inc
insl
mov
test
mov
push
div
mov
rol
mov
or
cvttps2pi
xchg
jnp
and
aam
addr16
aas
outsb
fidivs
lcall
xorl
daa
fidivrs
loop
sub
fidivs
xchg
fsubrp
in
add
sub
add
mov
in
ljmp
pushf
je
orl
mov
shll
js
cmp
and
fidivs
aaa
out
sub
popa
jle
cmpsl
jno
add
mov
cli
jnp
in
sbb
and
fidivs
stos
cmp
pop
lahf
fidivrs
pop
int
negl
lods
test
das
jmp
sbb
fidivs
jmp
pop
fwait
stos
fidivs
fcmovnu
mov
insl
shl
in
sbb
sbb
jne
movsb
aad
push
out
mov
cwtl
movsl
stc
ffreep
test
lret
adc
lea
cwtl
jbe
std
in
push
loop
outsb
test
imul
fsubrp
inc
loopne
fucompp
mov
fisubrs
cmc
and
jns
ja
inc
aam
fdivrs
and
or
adc
iret
push
pop
cli
sbb
pop
cmp
jbe
mov
xchg
xchg
into
add
xchg
sbb
fimuls
fsts
add
mov
jg
sbb
adc
xchg
movsb
inc
int3
lret
testl
and
push
push
andl
int3
sbb
stos
dec
mov
lods
div
sti
fimuls
into
pop
lret
faddp
add
fdivl
movsb
or
mov
sbb
test
jp
fbld
into
rol
sahf
or
mov
or
mov
ficoms
arpl
adcb
lock
mov
mulb
into
cmp
or
push
xchg
rcll
xchg
cmc
fidivrs
clc
mov
fs
int
mov
daa
fmulp
enter
nop
jle
ficoms
pop
cwtl
hlt
and
pushf
fidivs
scas
inc
sub
pop
sbb
mov
jecxz
or
dec
hlt
fiadds
test
mov
and
stos
ret
aaa
add
fsubp
xor
inc
jle
adc
or
pop
pusha
inc
fidivs
mov
xchg
testl
stc
fmulp
mov
les
mov
lea
lods
mov
inc
pop
inc
int
fdivrp
pmulhw
es
push
xchg
sub
cli
push
or
popa
push
je
ficomps
nop
addb
ret
imul
int3
adc
pop
arpl
xchg
scas
subb
rorl
stos
fiadds
pop
sub
dec
add
push
xchg
fs
mov
cmpsl
inc
repz
mov
mov
rcr
aam
sub
mov
gs
xlat
cmp
int3
pop
popa
xchg
dec
jns
jmp
aad
or
and
andl
fdivrp
inc
inc
sub
test
fdivrp
inc
xchg
jg
inc
or
lcall
dec
fisubs
dec
xor
mov
scas
fidivrs
les
and
mov
loopne
fistpl
push
outsl
rcr
imul
rcr
aaa
jo
mov
and
jno
ljmp
adc
jge
pusha
cmp
outsb
mov
pop
leave
inc
cmp
into
push
xor
fcoms
mov
cwtl
loope
in
cld
ret
fistpll
jnp
sbb
sbb
test
inc
movsb
fidivs
aam
jno
out
aaa
test
jmp
push
fldcw
mov
std
inc
pop
scas
dec
pinsrw
jne
jo
ja
dec
xor
cmpb
insl
daa
stos
ret
inc
ficoms
test
sub
mov
mov
sbb
outsb
and
sarl
aas
outsb
scas
mov
stc
adc
xchg
lret
psrad
lret
outsl
jbe
and
filds
ret
sbb
mov
movsl
mov
add
enter
mov
stos
sub
arpl
sbb
pop
or
xor
sbb
hlt
cmp
jo
xor
and
js
test
pop
test
cltd
lods
mov
sti
jle
repz
xchg
push
xchg
rcl
ficoms
pop
cmp
push
fidivrs
jb
fldl
lret
fdivr
out
add
mov
faddp
sbb
es
mov
add
js
pop
inc
inc
fiadds
and
popf
xor
test
into
lret
mov
push
das
and
jecxz
into
pop
push
fimuls
sub
subl
mov
sub
cmp
or
sbb
jne
loop
dec
add
mov
fidivs
outsl
mov
aam
and
or
test
cld
push
mov
push
xor
push
ljmp
mov
sub
xorb
pop
imul
leave
xchg
push
fisubs
cmpsb
lcall
add
xor
js
fidivs
add
mov
inc
cltd
in
in
cmp
faddp
and
mov
adc
and
out
fiadds
scas
dec
mov
push
lret
inc
cwtl
inc
std
jb
jecxz
frndint
ret
lock
xchg
pop
push
icebp
xor
jp
mov
imul
mov
fsubrp
cli
push
inc
into
sub
imul
fidivs
cmpsb
sbb
push
ja
movsl
fnstcw
dec
or
rorb
mov
jl
cmp
js
lahf
icebp
push
jbe
loopne
dec
dec
lock
stos
fdivs
mov
push
add
mov
pop
sahf
add
sarb
fiadds
adc
sbb
dec
push
out
jb
loopne
mov
pop
nop
pop
fimuls
outsb
mov
daa
pop
ret
xor
sub
pop
fidivs
push
jb
cmp
insb
stos
sbbb
cltd
enter
dec
jmp
and
cmp
pop
or
mov
fwait
pusha
data16
inc
fisubrs
test
xchg
ficoms
cmp
inc
and
jg
sbb
sbb
jmp
mov
pushf
insb
mov
fisubrs
lcall
sub
jo
ret
sahf
subl
or
cmp
nop
ss
sub
jmp
push
sahf
inc
and
int3
rclb
push
gs
bound
scas
adc
out
fdiv
lret
testb
jnp
stos
xor
cli
cltd
pop
and
fisubrs
mov
mov
fiadds
clc
je
dec
shl
out
sarl
lea
cmp
jb
ficoms
icebp
and
jmp
ds
add
pop
lret
shr
cmp
inc
in
jl
mov
test
jo
cli
jle
pop
xchg
in
aam
cmp
lods
fiadds
mov
addr16
mov
fimuls
add
cmc
jae
fiadds
inc
mov
adc
jo
pop
sti
inc
adc
push
add
cmp
sar
pop
stos
pop
in
add
out
call
fs
sub
std
test
push
push
mov
mov
xchg
pop
fs
pop
outsl
mov
in
mov
aas
leave
push
loopne
pop
xor
sbb
xor
mov
mov
adc
add
lahf
fidivs
loop
push
imul
push
pop
into
xchg
mov
mov
out
aas
rcrl
add
popa
outsb
call
cmpsb
insb
mov
dec
inc
lock
scas
cld
jbe
pop
xchg
into
call
fisubrs
or
mov
and
pop
jle
in
inc
sbb
lods
fidivs
icebp
xorl
into
cmp
ret
add
addr16
fdivr
cmp
dec
xchg
fsubp
mov
sahf
push
scas
lahf
loop
fwait
shlb
and
mov
arpl
fidivs
es
push
gs
fimuls
mov
push
rorl
adc
sbb
sbb
jo
test
push
fiadds
icebp
ficoms
hlt
and
mov
sbb
in
jns
lcall
lods
xabort
sbb
test
lcall
sub
push
cli
movsl
and
int3
inc
jbe
outsl
sbb
jmp
cmp
out
adc
inc
mov
aad
std
pop
sbbl
jmp
sbb
inc
adc
mov
popf
xchg
fisubrs
testl
pop
lods
das
and
cmc
adc
push
jae
cmp
xor
lcall
dec
add
fidivrs
adc
sbb
jne
mov
lahf
stos
ficomps
mov
or
loopne
popl
test
fidivrs
pop
test
ret
sbb
or
ljmp
mov
ficoms
push
dec
repz
cmp
frstor
ficoms
inc
inc
jns
iret
aas
dec
xor
xor
js
dec
test
ficoms
mov
iret
jle
scas
in
add
aaa
mov
int
and
adc
inc
inc
inc
add
insb
shll
daa
pusha
into
and
add
jl
xchg
dec
add
jecxz
add
push
mov
pop
in
repz
ffree
sbb
fimuls
enter
lock
outsb
popa
inc
int3
mov
cmpsb
daa
into
pop
test
sbb
ficomps
scas
aaa
testb
push
sbb
mov
push
cmp
inc
jle
sbb
lock
cmp
fadds
adc
sub
ficoms
scas
push
pop
mov
ss
jg
stc
cli
loope
pusha
je
fsubrp
ja
insl
sar
std
adc
loopne
pop
lds
js
mov
into
std
pushf
adc
imul
ret
xor
out
ficomps
incl
add
ja
popf
in
into
aad
lret
sbbb
arpl
dec
jne
inc
jle
fisubs
sub
or
xor
xor
nop
dec
sti
lds
mov
into
cmp
scas
jle
popa
stos
fidivrs
push
dec
test
or
push
aas
pop
in
fimuls
ror
mov
fidivrs
pop
bound
in
mov
outsl
jo
lret
fisubs
dec
notb
jecxz
repnz
push
ss
and
lahf
jle
jmp
xchg
rorl
stos
fisubrs
mov
popa
push
out
into
mov
jg
push
pop
lds
lret
inc
push
cmpsl
push
das
in
std
fidivs
cwtl
jmp
dec
repnz
pop
mov
gs
in
call
pop
fiadds
pop
xchg
pop
push
xor
neg
add
sub
mov
data16
xchg
mov
lret
cli
lcall
dec
cmp
and
lods
addr16
pop
xchg
mov
icebp
adc
xor
jge
dec
mov
xor
into
mov
push
dec
lods
inc
pop
stos
jno
out
icebp
cld
sbb
add
mov
jns
rolb
fidivrs
cmp
inc
inc
cld
mulb
push
lret
in
fidivrs
push
inc
xor
push
lock
push
add
pop
jle
lcall
sub
cmp
jbe
ds
cmp
mov
std
imul
out
les
cli
mov
addr16
fidivrs
shrl
mov
add
and
xor
jle
inc
jg
inc
scas
jmp
sbb
loopne
cmpsb
fcmovne
mov
aas
cli
aad
push
dec
fimuls
inc
mov
std
sbb
call
mov
incl
fdivrp
xchg
dec
add
lea
ljmp
mov
mov
ret
jge
mov
test
and
outsl
push
jb
push
sbb
add
adc
std
outsl
inc
pop
mov
into
int
push
and
jo
fimuls
push
dec
aas
movsb
mov
sbb
lret
cmp
cs
mov
or
aaa
mov
sbb
std
jae
cmc
stos
in
scas
rcll
cld
sarb
inc
pusha
fdivs
hlt
push
fiadds
es
sbb
xchg
jmp
cmp
aad
push
xchg
push
ss
add
rolb
inc
imul
xchg
push
popf
je
out
divl
jb
sarl
jns
dec
adc
fidivs
in
dec
daa
lret
mov
pop
arpl
call
rcrl
insl
fidivrs
adc
in
push
fidivs
aad
dec
pop
add
out
xchg
dec
sbb
pop
stc
scas
push
faddp
pop
ss
and
fisubrs
add
fisubrs
push
cmpsl
fsubrl
xchg
pop
or
ds
inc
push
sub
jmp
ja
into
rcr
pop
mov
mov
mov
fcompp
xchg
stos
dec
loope
jns
sbb
fidivs
scas
popf
faddl
fidivs
pop
sti
fisubs
mov
mov
aam
or
fisubs
les
pop
cmp
cmp
lea
jb
xchg
jns
sbb
lods
pop
mov
mov
clc
std
mov
js
cli
outsl
add
ror
push
xor
into
jp
dec
pop
dec
fidivs
aam
mov
sbb
mov
cs
sub
sbb
jnp
jmp
dec
push
push
sbb
call
fwait
lret
dec
ret
adc
push
aaa
fiadds
mov
data16
enter
mov
lahf
fisubs
test
lock
scas
sub
fdivr
mov
and
popf
mov
fisubs
hlt
addl
loope
shll
insb
sub
fisubrs
das
pop
aas
dec
std
int
push
jmp
repnz
sub
xor
xor
pop
gs
stc
inc
fisubs
inc
stos
in
mov
into
jecxz
rclb
xlat
mov
bound
aas
loope
std
dec
pusha
mov
dec
cmpsl
pop
mov
xchg
rcrb
js
daa
xchg
jno
addb
imul
int
fidivs
mov
xchg
sti
rcrl
shlb
mov
sub
push
xor
adc
dec
mov
mov
lret
and
popl
ss
fimuls
dec
loop
arpl
stos
orl
dec
in
cmp
cltd
int3
lock
sub
imul
into
in
fs
push
dec
in
pop
or
mov
mov
and
sub
test
pusha
or
adc
cmpsl
jo
cmp
mov
ds
insb
cli
aad
out
xor
out
sbb
fmulp
push
xchg
sbb
inc
cmp
es
mov
das
ja,pt
cli
mov
cli
cs
out
cmp
sub
fiadds
mov
std
fwait
sahf
dec
or
fildl
jmp
add
aaa
and
dec
and
or
push
dec
inc
fsub
mov
into
sahf
sub
inc
cld
mov
lods
ljmp
add
imul
aaa
in
movsb
mov
sbb
lret
fidivrs
xchg
sbb
xor
push
adc
loop
aaa
pop
icebp
fsubrp
sbb
cwtl
ret
iret
incb
std
xor
mov
mov
sbb
fimuls
push
mov
faddp
sub
out
pop
push
sub
push
and
mov
lds
insb
jecxz
rolb
ret
scas
mov
xchg
popa
loopne
ficoms
daa
xor
or
insl
popf
ficomps
test
sbb
out
icebp
ret
ds
fldl
nop
mov
cmc
outsb
sbb
into
movsb
subb
or
insb
fwait
mov
loop
fnstcw
rclb
pop
and
scas
neg
mov
mov
push
sbb
inc
mov
hlt
inc
lahf
repz
and
sub
adc
sbb
clc
mov
adc
push
out
test
jle
cmpsb
xchg
ret
pop
movsl
xor
jle
fimull
sub
in
xchg
mov
adc
fiadds
shll
popa
sbb
push
in
fiadds
inc
mov
sub
pop
sbbb
out
fisubrs
in
je
ficomps
insl
jge
fisubrs
ret
lea
popf
push
lret
sub
mov
mov
mov
dec
mov
pop
adc
call
dec
fidivrs
cmp
sub
ficomps
push
dec
hlt
add
inc
js
jmp
aad
faddp
mov
mov
rorl
jbe
mov
ret
lcall
loope
and
pop
fidivrl
pop
sub
in
std
inc
divb
icebp
pusha
pop
inc
fsubs
xchg
pop
push
mov
inc
jb
fmulp
nop
xor
lret
jle
stos
int3
lock
int
pop
lcall
leave
mov
cmpsl
vcvtss2si
cli
les
dec
fidivrs
sbbl
push
pop
xor
jns
fidivs
inc
push
cmp
pop
ficoms
pop
add
std
ret
pop
fxch
sbb
mov
jp
fisubs
dec
dec
cmp
lods
jl
mov
add
aas
pushf
jge
into
add
and
pop
jecxz
or
jnp,pt
add
dec
mov
aas
push
cmpsb
popa
xor
mov
sbb
xor
mov
sub
sahf
jmp
mov
fwait
lahf
dec
pushf
push
into
push
repnz
lret
or
add
xchg
rcl
cli
push
lock
pop
ss
loope
repz
int
push
sub
iret
lock
adc
mov
mov
inc
repnz
daa
into
ret
xor
pop
sar
cwtl
mov
dec
inc
ficoms
stos
add
popf
cltd
fidivrs
fwait
insb
xlat
cld
mov
and
mov
jle
pusha
fdivrs
repz
xchg
outsb
or
ficomps
es
and
in
ficomps
notb
popa
out
lods
fisubs
dec
std
and
fwait
adc
in
into
in
and
test
pinsrw
or
push
std
aam
dec
clc
int3
pop
push
out
rcr
mov
sub
testb
sub
scas
xchg
cld
adc
adc
xor
xlat
loopne
push
fimuls
xor
fdivp
mov
dec
jge
pop
sbb
mov
mov
nop
rol
pop
fimuls
les
in
in
xchg
fcom
mov
sub
iret
js
mov
loopne
gs
cmpsl
cltd
aas
fiadds
mov
xchg
rcll
jmp
fiadds
mov
jo
push
lret
data16
add
inc
sarb
mov
aam
jle
cli
shl
loopne
lret
cmp
loope
aas
pop
jnp
push
ficomps
dec
mov
dec
jg
xorl
mov
cwtl
xchg
push
pop
jmp
and
stos
mov
push
xor
xchg
aam
or
add
fistpll
outsl
push
ficomps
mov
inc
jns
or
cli
sub
xor
ret
and
push
dec
add
mov
fisubs
in
add
test
jne
rcr
loop
ds
xor
mov
imul
rcrb
ja
mov
or
dec
xchg
pop
cmp
out
mov
mov
test
ret
or
jae
xchg
roll
fsub
xlat
scas
mov
xchg
andb
or
jmp
lea
mov
inc
in
fimuls
xchg
and
xor
jecxz
jae
and
xlat
cmp
and
aaa
outsb
daa
icebp
int3
dec
add
jae
sub
adc
out
cmp
int
or
orps
mov
test
add
mov
mov
fimull
sub
faddl
jbe
dec
mov
push
jg
fisubl
fidivs
pop
fwait
iret
mov
fdivl
aas
xor
out
mov
or
or
jno
dec
dec
mov
lods
fldl
push
imul
push
fcomps
cmp
test
sbb
ficompl
aaa
movsl
pop
fidivs
sbb
je
mov
es
sbb
add
imul
fimuls
inc
scas
jecxz
mov
popf
mov
mov
cli
fildl
repnz
dec
faddp
ljmp
std
pusha
xor
fistps
dec
xchg
rcrb
out
cmp
and
cmp
cmpsb
sbb
ficomps
mov
stc
out
es
lds
std
dec
and
out
faddl
cmpsb
inc
imul
int3
xchg
mov
lock
shlb
xchg
adc
sub
out
pop
fdivp
lret
pop
mov
inc
in
pop
sti
test
push
or
into
push
cltd
add
inc
cmp
fimuls
imul
xor
in
jle
ficomps
les
fisubs
mov
and
fwait
inc
loope
scas
mov
mov
insl
mov
sub
std
repnz
fimuls
pop
xor
cmp
jo
das
jp
or
dec
std
jecxz
loopne
rol
inc
test
out
popf
imul
cs
stos
cmp
dec
push
rclb
mov
xchg
fiadds
lret
cld
std
and
inc
and
pop
xor
mov
jl
fcomps
add
fisubrs
lahf
jbe
xorb
or
idivl
xor
jle
enter
inc
decb
sub
fiadds
jg
fiadds
scas
dec
int
or
or
push
loopne
pop
leave
fidivs
jle
sbb
fdivl
in
jb
jle
es
dec
add
jmp
pop
mov
cmpsb
out
stos
pop
sarb
dec
lds
lret
aad
xlat
ficoms
xchg
mov
xor
adc
pop
fimuls
xchg
or
fisubs
hlt
outsl
repz
leave
test
mov
sbb
adc
popa
ficoms
mov
loopne
fidivs
arpl
rcrl
and
je
sbb
pop
pushf
push
ficoms
sarl
lret
out
nop
lods
in
sub
lret
enter
and
call
icebp
imul
gs
fldl
lea
fisubrs
jns
and
daa
jno
sub
loopne
mov
lods
rcrb
clc
in
or
sub
push
mov
in
sbb
sub
pop
xchg
paddsb
adc
imul
aad
mov
xor
dec
mov
data16
ja
inc
addr16
push
out
jb
pop
test
mov
jo
pop
seta
pop
pop
ss
sub
fimuls
das
mov
out
fiadds
fidivrs
cmpl
pop
cmp
push
dec
mov
sub
push
ficomps
js
pop
std
aam
test
sub
dec
daa
add
sahf
xchg
lret
or
mov
fwait
lea
in
or
inc
ror
xlat
sub
arpl
push
or
fidivrs
xor
mov
push
out
std
lahf
incb
idivb
add
fidivrs
loope
imul
test
out
xchg
cld
mov
test
imul
outsl
in
cld
push
or
cltd
insb
xor
inc
fisubrs
mov
xchg
fisubrs
sub
loopne
test
enter
mov
mov
jmp
out
lock
rcr
inc
xchg
je
mov
sub
push
ffree
or
cmp
dec
cmpxchg
push
movsb
sub
push
sub
dec
or
dec
es
mov
pop
aas
loop
adc
rorb
in
ficomps
outsl
scas
aad
into
push
out
sbb
fisubrs
repz
lods
fsubrp
scas
push
sub
sbb
mov
jle
push
and
popf
mov
ret
cli
ror
jbe
cltd
scas
lcall
adc
fidivs
add
shll
fisubrs
pop
cmc
sbb
or
jo
push
and
cmp
push
les
mov
outsb
inc
icebp
addb
xchg
adc
daa
stos
xchg
fisubs
xlat
fidivs
test
inc
push
mov
popf
pop
or
and
lods
fidivrs
das
lods
cltd
and
shlb
rorb
jnp
fidivs
jmp
jle
pop
cmc
cmp
scas
rcrb
push
ss
fstpl
jne
cmpb
mov
ret
cmp
out
jno
adc
cwtl
lds
ficomps
and
faddp
jae
aam
enter
ja
test
sub
or
arpl
imulb
mov
mov
ja
adc
add
xchg
addb
sti
sarl
lods
xor
pusha
or
dec
dec
fidivrs
clc
sbb
pop
dec
fidivrs
inc
addr16
fsubrp
xchg
sbb
les
fcomps
dec
push
inc
jns
fdivrp
xchg
inc
mov
mov
lds
add
inc
fcompp
adc
adc
mov
dec
lcall
aas
mov
test
pop
out
xchg
or
cs
fimuls
push
add
dec
cmc
sti
cmpsb
mov
push
add
fdivp
mov
fstp
aaa
arpl
in
int3
repnz
mov
enter
fiadds
sbb
inc
mov
jle
outsl
and
xlat
lahf
ret
fisubs
les
dec
mov
jg
pop
mov
xor
jb
int
dec
mov
js
unpcklps
dec
fidivrs
pop
inc
and
rcrl
push
cli
ret
in
xor
dec
addr16
pop
ret
pop
test
fisubrs
loopne
cs
std
jg
xlat
jmp
fidivrl
shrl
pop
outsl
pusha
add
andl
mov
test
imul
and
das
jecxz
xor
popa
fidivrs
pop
dec
xor
add
fsubs
in
ficomps
cmp
push
sub
dec
push
adc
mov
xor
cmp
jge
out
popf
ficoms
xchg
mov
out
addl
enter
scas
sub
leave
lea
mov
icebp
or
fmulp
add
push
mov
fdivrl
ret
mov
into
movsb
mov
fdivrp
or
mov
sub
fs
lahf
push
or
imul
aas
xchg
sbb
fisubs
add
xor
icebp
aad
dec
or
das
sbb
ret
sti
ficomps
push
mov
test
push
cli
or
out
lret
into
cmp
mov
mov
les
sbb
jge
movb
fisubs
jmp
push
cmpb
mov
stc
fimuls
sbb
dec
daa
push
jl
stos
cmc
shlb
inc
lret
mov
ret
pop
sub
xchg
in
ficompl
imul
pop
dec
sti
ficomps
cmp
add
leave
push
faddl
loopne
outsb
dec
push
xchg
push
pop
aad
in
mov
mov
xlat
and
incl
lcall
daa
fisubs
mov
and
sahf
fisubrs
arpl
xor
inc
call
or
inc
mov
ret
lea
fcmovnu
lods
mov
cs
jno
xor
pushf
sbb
adc
insl
repz
and
xlat
test
or
into
rcrb
frstor
cmp
dec
add
int3
test
dec
ficoms
dec
mov
dec
mov
mov
out
loop
cmpsl
pop
sarb
jmp
mov
jge
fcoms
rcrb
mov
popf
test
mov
dec
inc
jae
popa
adc
sbb
lret
pop
jo
pop
inc
push
aaa
ret
mov
out
xchg
lods
jecxz
fsubl
scas
sub
or
jno
and
imul
jge
xor
cmc
sub
stos
aaa
cmp
push
ret
jl
jb
cli
fimuls
movsl
jg
push
sbb
xchg
mov
add
inc
xor
or
jae
sub
repz
xor
popf
cli
insb
popa
div
sbb
mov
xlat
mov
hlt
inc
je
lds
std
dec
mov
insb
negl
call
inc
pushf
in
cmp
sbb
mov
les
sbb
push
ret
repz
xor
mov
nop
or
pop
bound
xor
push
push
push
fisubrs
mov
xor
es
fiaddl
sti
jg
iret
fiadds
xchg
push
ja
push
jns
pop
cmp
sbb
push
xchg
xor
jmp
iret
jp
shll
repnz
add
in
js
pop
fimuls
mov
mov
data16
cmpsb
and
add
inc
fidivrs
adc
mov
jns
sbb
aaa
fidivs
mov
mov
loopne
outsw
inc
fldenv
es
push
scas
imul
lahf
leave
cmp
fisubrs
mov
gs
mov
pusha
push
fisubrs
cmpsb
push
mov
aaa
jnp
outsb
decl
inc
push
mov
test
int3
fistps
icebp
faddp
xchg
insl
xor
mov
mov
jnp
inc
push
mov
sbb
mov
push
lock
out
sbb
and
stc
jge
and
mov
jg
mov
loope
fisubs
std
sub
mov
fidivs
test
negb
popl
cmp
fdivrp
imul
pop
in
int3
mov
sub
cltd
xchg
sub
test
cmp
sub
sbb
das
pop
mov
and
pop
fisubs
inc
adc
mov
cmpsl
int3
rcrb
add
sbb
repnz
cmp
pop
xchg
mov
fimuls
lods
in
cmp
shl
lahf
lcall
sbb
loop
push
shlb
aas
mov
fsubp
mov
divb
fmulp
lret
ss
push
adc
outsl
add
mov
aas
test
scas
fsub
sbb
loop
lret
stos
int
pop
jge
pop
ja
js
sub
push
pop
clc
jle
mov
add
arpl
fiadds
sub
fidivs
arpl
std
jge
xor
pop
in
mov
mov
push
ljmp
xor
cmp
mov
lret
jmp
mov
sahf
aaa
mov
movsl
xchg
or
daa
mov
or
inc
pop
dec
lods
das
addr16
adc
ficoms
cmp
jmp
jl
mov
ljmp
mov
movsl
dec
lds
stos
je
fisubs
mov
pushf
mov
and
fiaddl
imul
jl
inc
movsb
ficoms
fwait
shlb
pop
leave
sbb
xor
push
int3
js
ret
sub
mov
pop
dec
std
jo
sahf
fisubs
jnp,pn
sbb
mov
xchg
pop
leave
movsb
lods
insb
aas
sbb
xchg
inc
fucomi
adc
pop
rcr
hlt
jmp
or
aaa
jle
jl
repnz
test
xor
xchg
imul
xchg
hlt
enter
xor
mov
orb
push
repnz
inc
fsubr
enter
and
vphadduwd
inc
sub
fidivrs
mov
pop
xchg
outsb
xchg
pop
dec
dec
pop
fimuls
sub
dec
jne
rol
fisubrs
in
sub
jb
outsl
loop
and
push
pop
fidivrs
jnp
mov
repz
test
sub
popa
out
jo
push
rclb
mov
xchg
lret
sarl
mov
or
lret
jno
inc
and
jae
test
ret
movb
cmc
fidivrs
shrl
out
cmp
push
arpl
fidivl
daa
fiadds
stos
shlb
adc
cmp
fcoms
faddp
pusha
testb
push
fistps
popl
sbb
jbe
inc
xchg
int3
mov
mov
pushf
push
or
push
ficomps
test
loop
jno
adc
jbe
dec
push
adc
ficomps
dec
cmpsl
fstpl
fidivrl
sbb
dec
pushf
dec
ficomps
pop
mov
std
mov
stc
push
push
jecxz
fiadds
stos
and
cmp
pop
jbe
testb
fisubs
mull
sub
fidivrs
outsl
ljmp
pushl
lret
pop
ficomps
jbe
popa
mov
pop
jo
ficoms
inc
sub
ret
mov
adc
iret
adc
daa
into
sub
arpl
lods
std
mov
rcrb
subl
negl
adc
xchg
jb
jns
mov
icebp
mov
movsl
cmpsb
jle
lret
fsts
sti
insb
and
dec
xchg
outsb
inc
fstp
fidivs
lods
loopne
orb
iret
mov
into
ficoms
lods
popf
or
ret
dec
cmp
mov
test
inc
sub
fisubs
xchg
ret
cmp
mov
aad
jl
ja
xchg
push
out
in
lahf
mov
inc
gs
inc
sar
fcmovnu
add
xchg
and
or
push
jge
cmpsb
cs
sbb
pop
mov
jg
xorb
int
rolb
adc
sbb
mov
cli
cmpsb
pop
into
inc
mov
pop
imul
add
ret
fidivs
stos
lcall
pop
sbb
aas
xchg
mov
mov
fiadds
cmp
sub
mov
inc
shl
mulb
or
lcall
bound
gs
jge
push
cli
pop
xchg
or
fimuls
rcll
dec
outsb
push
push
inc
bound
fimuls
sub
jle
nop
lea
xchg
test
mov
cld
mov
lods
pop
adc
andb
out
xor
scas
dec
scas
mov
fidivs
out
in
pop
mov
push
and
adc
fdivr
or
and
int3
mov
push
ret
cmp
inc
mov
sbb
dec
sahf
jg
out
dec
fisubrs
add
push
sub
lods
movb
fimuls
sbb
xor
fidivrs
pop
out
mov
test
pop
cli
inc
push
push
lret
sub
jle
fdivp
pop
jmp
sbb
dec
daa
or
roll
adc
mov
adc
push
mov
hlt
imul
push
fs
sub
inc
xchg
mov
cwtl
sub
sbb
add
into
imul
pop
push
fsubs
push
fsubrp
jnp
lret
mov
xlat
push
das
mov
mov
pop
add
ficomps
mov
out
pop
std
push
in
mov
sar
ficomps
or
push
jo
imul
lret
jg
insb
imul
faddp
inc
gs
cmp
sub
ja
ss
daa
dec
out
dec
or
out
fldcw
nop
inc
push
mov
pop
cmp
jbe
fcmovne
jl
jle
xor
dec
les
cmp
sbb
test
dec
icebp
fs
fnstsw
mov
lock
jb
sbb
lahf
cmp
sbb
mov
data16
lds
fimuls
rorl
les
outsl
jge
mov
jb
add
jle
repz
inc
sub
out
inc
sbb
mov
fimuls
sbb
mov
add
xchg
xchg
lea
cmc
int3
sbb
std
sarl
jno
imul
lods
fidivrs
lods
cs
fisubrs
pushf
rcr
xchg
sub
push
add
jb
pusha
ljmp
mov
push
mov
cli
sbb
pop
mov
jmp
inc
idivb
jnp
mov
ds
idiv
or
xchg
shrb
push
xorb
je
mov
lods
or
into
inc
sub
mov
inc
cmp
test
bnd
ja
mov
leave
xchg
add
jo
loope
loop
lret
sahf
fidivrs
mov
jmp
test
xchg
push
mov
ljmp
or
outsl
mov
std
mov
pop
push
mov
mov
jne
mov
sub
push
mov
jb
fidivs
js
jmp
mov
xchg
pop
inc
jmp
out
les
int3
cmp
push
fimuls
aad
jns
sar
xchg
inc
insb
push
lret
dec
push
sahf
mov
push
std
jae
in
fabs
fidivrs
and
out
fisubrs
test
sti
and
inc
add
lods
adc
xor
out
sti
stos
xchg
into
xor
mov
or
ret
std
pop
mov
cmpsb
add
outsl
fiadds
dec
sbb
ret
aaa
les
sbb
jmp
cmpsb
scas
lds
aaa
sub
xchg
lock
mov
push
lods
imul
pop
push
pop
mov
fwait
mov
repnz
add
mov
or
sub
fwait
adc
fisubs
pop
xor
fidivrs
loope
pushf
jnp
ret
sbb
outsl
xor
xor
pop
jmp
pusha
ficomps
xor
fiadds
jecxz
mov
hlt
add
and
scas
dec
jns
ja
les
xchg
mov
sbbb
stc
int3
pop
test
and
cltd
cmp
sbb
fcom
popa
lcall
fstpt
xchg
imul
and
fsubrp
push
repnz
bound
add
fiadds
imul
call
insl
es
adc
frstor
push
jle
rorl
xor
call
fidivs
mov
push
lea
ret
scas
pop
ss
xor
xor
stos
insl
clc
jne
mov
dec
sub
mov
mov
aas
addr16
rcr
cli
fimuls
test
icebp
cmc
enter
cmpsl
rcl
and
clc
xor
ficoms
inc
inc
fiadds
stos
mov
test
nop
xchg
pop
dec
inc
fmulp
icebp
and
push
pop
test
xchg
sub
movb
fidivs
cmpsl
and
pop
aam
adc
inc
sub
pop
sarl
add
js
std
cld
dec
test
call
inc
inc
sub
jle
sbb
ret
pop
xor
push
add
jecxz
fwait
adc
idiv
in
mov
sbb
push
into
ficomps
dec
push
or
test
scas
enter
xlat
adc
out
ficoms
ds
rcll
fisubrs
pop
pmaxub
or
arpl
lret
out
inc
adc
rorl
faddp
icebp
daa
jp
jmp
mov
outsb
fwait
insb
test
adc
mov
pop
movsb
xchg
lds
fsubp
lcall
pop
xor
mov
test
dec
jle
mov
adc
fimuls
test
add
add
stc
aas
outsb
int
sub
dec
xchg
andl
pop
shll
rolb
adc
fs
imulb
and
jp
push
and
sub
xchg
xor
cltd
sub
fisubs
dec
sbb
pop
insl
jo
std
cmp
push
mov
icebp
xchg
leave
jbe
or
inc
xor
arpl
or
ficoms
jno
or
push
iret
xchg
xor
cmc
fcomip
sarl
xor
mov
mov
cld
push
and
adc
sbbb
enter
sub
mov
push
adc
fidivs
pusha
pop
inc
fistl
fcmovu
mov
mov
dec
out
or
xor
aaa
cmpsb
adc
sub
fs
dec
lea
lcall
ja
shlb
adcl
sbb
fmulp
and
dec
mov
call
xor
mov
cmp
lds
je
or
mov
cltd
sub
add
ret
cmpsl
xlat
xchg
mov
gs
adc
sub
push
xor
ja
fs
pop
jle
data16
popf
kmovw
dec
ficoms
sti
inc
adc
iret
inc
push
ficomps
xor
jp
inc
js
sahf
sbb
push
mov
fisubs
add
lret
pop
sti
scas
cmp
fiadds
jns
or
inc
pop
lahf
add
clc
jb
std
xorl
hlt
ficoms
and
mov
jnp
sbb
fsubp
lods
and
ret
mov
fidivrs
or
cmp
aad
adc
orb
rcr
adc
sub
pusha
cli
fisubrs
xor
test
add
je
pop
ret
outsb
xor
cmc
ficomps
push
movsb
dec
jl
mov
xchg
std
lahf
add
push
or
or
mov
aam
and
sub
jge
lds
sbb
cmp
jl
int
inc
sub
testb
adc
outsl
push
lret
repz
add
fdivp
nop
cltd
scas
ret
fidivs
call
aam
pop
dec
gs
stos
rcr
sub
cltd
addr16
jecxz
iret
popa
outsb
or
cmp
mov
mov
inc
push
ficomps
xchg
xchg
and
adcl
loopne
fsubl
mov
negb
lods
ficomps
lret
xor
mov
pop
rolb
aas
lds
adc
data16
xchg
fimuls
fcoms
mov
jmp
nop
rcl
fdivp
pop
push
in
testl
and
pop
push
sbb
mov
fimuls
jb
cmp
lret
test
adc
aas
fiadds
or
int3
cmpsl
jns
mov
jmp
fdivrp
cltd
adc
rorb
ja
cs
add
aas
add
aaa
mov
xchg
fimuls
aad
lret
out
and
movsl
jmp
jge
shll
fiadds
mov
mov
test
std
xchg
sub
cmp
cmpsl
dec
addr16
inc
rorl
fidivrs
sbb
leave
sbb
pop
mov
sub
mov
dec
push
into
mov
mov
ja
fisubrs
aam
pop
ja
or
movb
test
sub
ficoml
mov
and
mov
sbb
leave
ljmp
dec
push
outsb
add
fisubrs
div
pop
push
inc
inc
mov
cwtl
cmp
push
ret
dec
rorl
mov
cmp
sbb
arpl
xchg
add
fiadds
lret
mov
addr16
insb
movb
fiadds
xchg
scas
mov
in
sub
mov
movsl
fnstenv
pop
push
inc
adc
insl
jl
sub
fisubrs
cmc
cmp
fdivp
movsb
cmp
movb
mov
gs
ja
sti
cmp
xchg
mov
jecxz
jg
pop
mov
scas
and
leave
nopl
and
fsubrp
push
or
aas
pop
js
push
inc
xor
divb
faddp
lret
sub
cli
mov
cli
sbb
nop
push
push
pop
and
les
movq
test
ds
fdivl
push
pop
xor
mov
and
jno
inc
clc
fstps
xchg
fisubrs
mov
sahf
cmc
stos
ja
rcrl
ret
inc
cld
cmp
push
inc
fiadds
jb
fadds
inc
add
mov
add
repnz
xorb
push
push
fisubs
arpl
add
xchg
pop
daa
jae
and
idivb
fidivrs
popa
or
aas
divl
fcmovnu
sbb
mov
adc
inc
testb
cmp
adc
lcall
fidivrs
cmp
enter
ficoms
jne
dec
mov
inc
mov
cmp
xchg
pop
push
cmpsl
stc
enter
aaa
imul
or
sbb
jbe
lret
lret
hlt
outsl
test
xchg
dec
pop
fsubrp
mov
aam
out
sub
adc
fisubs
ja
aaa
sbbl
mov
cld
and
jp
fiadds
cld
aaa
adc
test
pusha
adc
sbb
pop
lock
mov
mov
pop
in
aaa
pushf
jo
ficomps
cmp
ficoms
outsl
loopne
jns
test
fiadds
out
xorb
mov
std
mov
and
xchg
or
lock
pop
mov
iret
imull
mov
ficoms
into
imul
scas
or
out
sbb
mov
dec
ficoms
pop
inc
sbb
cmc
add
faddp
pop
or
aaa
sbb
sub
sbb
jbe
jl
addb
lahf
sub
inc
lock
add
js
and
mov
jge
rcr
jmp
pop
jg
adc
ljmp
or
imul
fdivp
out
pop
popa
cmp
inc
cmp
mov
shrb
cmp
xor
adc
stc
data16
pop
jbe
cmc
inc
lret
stos
fsubrp
mov
and
ficomps
ja
lret
or
mov
pusha
mov
mov
jg
xchg
fucom
faddp
hlt
sub
sahf
pop
and
rcrw
imul
push
dec
dec
lcall
fsubrp
sub
in
clc
jmp
push
push
xor
adc
push
dec
add
cmp
inc
and
adc
xchg
sub
mov
dec
push
pop
arpl
lahf
ljmp
repnz
jae
lcall
ficomps
jmp
mov
pop
jae
ret
arpl
jge
mov
and
xor
mov
xor
mov
mov
and
jmp
jmp
aad
in
xor
daa
ficomps
or
xchg
sbb
inc
das
imul
cli
fidivl
fimuls
cmp
adc
pop
fcoml
pusha
fsubp
aas
xchg
dec
incl
fidivs
xchg
mov
por
lret
clc
mov
inc
ficoms
or
inc
imul
inc
dec
fisubrs
xor
sahf
cmp
sar
aam
push
cmp
inc
mov
imul
mov
movsb
enter
inc
inc
sbb
in
lret
sub
jg
xor
mov
push
xchg
push
bound
pop
out
and
mov
iret
cs
sbb
fidivs
mov
insb
jns
aas
push
or
pop
push
mov
inc
aad
repz
xor
nop
mov
das
mov
or
shll
inc
and
scas
mov
push
ficoms
ret
fmulp
pop
and
xlat
adc
mov
mov
pop
je
call
ficoms
icebp
les
fisttpll
sbb
popf
pop
outsb
or
scas
adc
mov
mov
add
pop
fmulp
mov
cmpsl
subl
fisubrs
pop
push
lahf
inc
ljmp
loope
cmp
xrelease
lock
arpl
fisubrs
or
fstps
xor
fidivs
xor
sti
mov
xchg
data16
xlat
push
iret
fidivs
and
or
mov
or
pop
popf
int3
aaa
lods
sbb
cli
or
stos
mov
adc
push
loope
fs
add
jle
mov
jle
orb
out
add
mov
xchg
jnp,pn
cmpsl
fimuls
mov
fisubrs
mov
add
nop
sbb
and
popa
cs
das
outsl
or
pop
adc
dec
fdivp
dec
lret
mov
dec
fimuls
aas
adc
call
shrb
lret
sar
sbb
jne
insl
pushf
dec
jmp
cmpsl
xchg
mov
stc
ror
xchg
mov
insl
or
inc
movsl
jbe
mov
test
xchg
out
inc
pop
ljmp
pop
and
fisubrs
inc
pop
mov
sbb
jmp
xchg
add
xchg
dec
int3
sti
xchg
std
aaa
ror
in
fidivs
ret
test
fiadds
or
ficomps
pop
idivl
mov
mov
in
dec
adc
les
dec
xchg
adc
mov
sub
xor
inc
scas
std
ret
ficomps
hlt
and
push
int
mov
push
dec
addr16
inc
fsubrp
pop
lods
gs
push
mov
inc
out
into
push
fisubs
or
ss
pop
dec
movsl
std
gs
push
aam
xchg
sbb
loopne
ret
lahf
mov
ficomps
or
and
push
push
sbb
pop
or
pushf
lock
in
xchg
jns
and
cmpsb
xchg
pop
add
xchg
push
test
lret
push
mov
insb
fsubp
jle
hlt
outsb
fs
cld
pop
or
lods
into
adcl
popa
fidivrs
push
rcrl
sbb
dec
mov
repnz
ret
xlat
xor
movlhps
call
push
cmpsb
mov
inc
sbbb
jecxz
aas
fimuls
cmp
xchg
push
leave
idiv
fwait
inc
pop
inc
ret
lcall
ficomps
int3
sub
push
and
fmuls
sbb
in
fidivrs
dec
repnz
fimuls
mov
xchg
and
or
jecxz
js
adc
fiadds
and
movl
mov
lods
push
jnp
add
scas
neg
dec
lods
mov
ss
loope
mov
enter
fiadds
fldcw
cld
jecxz
pushf
out
xchg
arpl
aad
fiadds
add
addl
pop
push
mov
fcomp
stos
clc
shll
aad
fidivs
or
cmp
dec
ret
fwait
mov
xchg
adc
fsubp
aad
lea
xor
faddp
sbb
push
push
inc
aad
pusha
or
jne
cli
rcr
std
lret
mov
pop
js
sbb
cvtps2pi
cmp
mov
mov
fs
fsubrp
scas
jle
mov
popa
inc
pop
ficoms
push
addr16
dec
dec
fisubrs
fdivp
stc
cld
inc
xor
aam
mov
imul
xor
fcomp
push
xchg
repz
movsb
std
xor
fwait
lock
lods
in
sub
xchg
xor
enter
jne
cmp
popf
jns
mov
cwtl
gs
aaa
jbe
jl
ficoms
cs
imul
pop
neg
jae
mov
mov
fiadds
out
mov
sti
rorl
lret
jo
add
insb
or
inc
ret
lock
xchg
lea
sti
aas
enter
xor
xchg
add
dec
jnp
insl
fisubs
mov
test
jg
mov
icebp
in
push
lock
lea
sbb
add
movsb
mov
add
cmp
ret
sarl
mov
out
jnp
faddp
pop
in
push
lods
sbb
ficoms
movsl
dec
mov
mov
mov
int3
imul
inc
dec
out
jo
insl
jl
ficomps
pusha
xlat
xchg
xchg
ficoms
mov
faddp
xor
sub
fsubp
jno
push
lret
mov
fimuls
addr16
div
fsubrp
aam
rcrl
cmp
push
xorl
aad
dec
lret
fiadds
sbb
fidivs
adc
mov
lcall
ds
aam
mov
cmpsl
popf
movsb
push
fidivs
cmpsb
mov
fisttpl
mov
push
das
lcall
inc
je
xchg
stos
sarb
dec
mov
add
ret
call
rolb
cmpsb
adc
push
pop
cmpsl
sbb
and
dec
test
fmulp
fs
stc
pop
lock
sahf
lds
dec
and
or
fiadds
dec
push
add
sbb
popa
xchg
or
inc
fidivl
mov
loopne
les
ja
adc
cmpsl
fidivrs
mov
hlt
das
std
daa
xchg
sti
push
movsl
iret
fisubrs
xor
xor
sub
add
push
into
js
imul
dec
mov
mov
mov
ficomps
dec
les
sub
adcl
adc
jns
pop
ficomps
inc
idivb
fcompp
mov
jnp
std
repz
pop
and
fisubrs
sub
imulb
dec
fdivrp
ja
lods
xchg
mov
mov
fisubs
out
insb
stc
into
mov
popa
mov
or
push
fidivrs
cmpsb
push
xchg
ficomps
test
movl
fidivs
push
xchg
mov
fidivrs
enter
loopne
int3
xchg
fiadds
fs
xchg
lock
add
sub
fidivs
sub
nop
add
fidivrs
mov
mov
jg
pop
adc
cltd
add
sub
fiadds
jl
outsl
jle
pushf
sbb
scas
mov
pusha
jge
icebp
jns
movsb
repnz
cmc
ret
fisubrs
inc
mov
sbbb
in
mov
sub
sarb
jecxz
xchg
rcl
pop
inc
cli
mov
mov
jnp
fisttps
pusha
fsubrp
lock
jmp
and
xchg
sbb
hlt
cld
jo
cmp
mov
and
xchg
cmp
cld
mov
cmp
mov
pusha
shll
mov
bound
xchg
lret
mov
mov
pop
xlat
nop
mov
jnp
std
ret
fidivrs
imull
sahf
loop
mov
and
push
lret
sbb
ret
lret
jle
fsubrp
pop
and
add
es
push
cmpsb
fisubs
pop
mov
cli
cmpsl
fidivs
gs
clc
fsubp
inc
push
shrb
sub
out
hlt
push
or
fimuls
mov
mov
xchg
aaa
jmp
aad
mov
lods
sbb
data16
jl
dec
mov
fisubs
xor
out
mov
imul
sbb
add
cmp
inc
loop
scas
mov
rol
adc
movb
mov
pushf
and
jge
scas
lret
testb
inc
stos
sub
jns
cmc
push
sub
ficomps
add
nop
aas
stc
imul
adc
dec
imul
mov
cmpsl
jle
fmuls
add
xchg
mov
pop
xor
mov
sbb
out
cmpb
outsb
lock
call
ficoms
imul
pop
cltd
jo
mov
xchg
jmp
fisubs
loop
out
cld
lods
or
pop
subb
jle
pusha
sub
scas
jecxz
xchg
xchg
cmp
pop
fsubp
or
lods
fidivs
lods
adc
adc
insl
rclb
inc
pushf
or
test
in
pop
pop
out
add
leave
push
mov
pop
add
outsb
inc
sbb
jle
mov
pop
rcr
adc
pop
test
into
test
out
adc
lahf
ds
push
fsubp
stos
js
mov
push
mov
and
push
fidivs
out
sbb
icebp
cmp
loop
add
aam
mov
adc
lds
sbb
jmp
push
add
push
inc
rcr
shl
imul
sbb
xchg
shr
add
cmp
fiadds
jb
push
in
inc
out
adc
ja
or
mov
sub
inc
es
pop
mov
jne
fs
ficoms
inc
mov
xchg
in
popf
fidivs
push
test
mov
mov
adc
fisubrs
je
push
in
or
jnp
lcall
pop
mov
pop
cmp
sub
jne
cmc
fisttpl
fidivs
mov
shl
xchg
and
adc
mov
fsubs
divb
das
jbe
mov
lahf
test
test
cmp
rorl
push
repnz
fidivrl
test
ss
sti
ja
sbb
ficomps
fimuls
xchg
lea
jnp
iret
jecxz
xor
fidivs
data16
orl
sub
mov
inc
in
xchg
adc
fidivrs
shlb
dec
jle
imul
jge
fidivs
cmp
fdivrp
add
aas
fsts
mov
lcall
or
xchg
push
rorl
fwait
cmp
lods
cmpsl
mov
mov
js
fsubrp
cwtl
insb
movsb
into
aas
mov
inc
jno
push
ja
fidivrs
xchg
dec
ljmp
xor
fcomip
call
mov
aaa
jl
icebp
sbb
xchg
lods
add
les
sbb
lods
daa
fiadds
sbb
fstl
add
lret
ljmp
int3
mov
mov
xor
dec
fidivs
adc
movups
pop
lcall
cli
aam
cmpsl
into
xchg
ret
and
add
fidivrs
gs
fmulp
pop
fcompl
test
call
inc
in
les
jecxz
fmulp
xlat
lock
push
cmp
int3
lea
or
inc
jmp
push
popa
inc
inc
cwtl
add
push
aas
xchg
mov
std
hlt
fiadds
mov
adc
cmp
andl
sub
dec
mov
std
in
shl
rcll
lahf
sub
adc
loop
fisubs
fwait
dec
push
xor
scas
mov
out
rcll
add
loopne
push
scas
ss
sbb
inc
arpl
xchg
rorb
out
jle
lret
pop
rol
dec
mov
adc
fstp
mov
pop
sbb
fiadds
cmp
sar
lret
sub
mov
gs
std
lea
mov
outsb
ret
mov
movsb
jmp
inc
inc
out
mov
scas
das
fcompl
sti
into
data16
leave
testb
mov
test
add
or
cmp
nop
sub
jg
std
dec
imul
cmc
mov
mov
mov
lret
int
and
mov
out
adc
ss
push
dec
cmp
adc
movsb
sbbb
lea
aam
add
add
test
mov
push
push
ficompl
movsb
sub
fidivs
and
xor
cmp
fidivs
insl
add
add
dec
push
in
imul
mov
addps
lret
mov
mov
scas
cmpl
ret
notb
imul
pop
fidivrs
adc
fimuls
mov
cwtl
jnp
adc
mov
ficomps
js
inc
std
cmovae
scas
or
daa
std
inc
loopne
out
sarb
cmp
xor
aam
notb
enter
inc
aaa
sub
adc
icebp
and
push
int3
cmp
add
jecxz
adc
jb
dec
fisubrs
inc
mov
fidivrs
clc
loop
xchg
rcr
and
and
mov
jle
leave
pop
push
xchg
adc
cld
fisttps
repz
dec
pop
ficoms
sbb
or
jbe
or
mov
jge
test
fsubp
fsubl
push
or
inc
mov
in
movsb
jns
xchg
cmpl
xor
cmp
sarb
xor
lods
fsubrp
movsl
mov
subb
sbb
out
fisubrs
enter
scas
fistps
add
loope
call
jp
pop
popf
out
leave
div
loopne
outsb
fistpl
mov
rcr
sbb
out
cltd
je
insl
mov
hlt
mov
mov
lcall
ss
dec
popf
cmp
mov
lds
cmp
jle
mov
mov
stc
inc
xor
lds
pop
fisubs
jbe
pushf
jle
push
inc
mov
out
push
imul
inc
lock
enter
jge
ficoms
pop
xor
mov
lret
sti
cli
movsb
sbb
pop
fisubs
pushl
xor
fisubs
js,pt
inc
lret
cmp
in
cmpsl
xlat
aas
cmp
iret
mov
adc
sub
or
sbb
adc
inc
std
xor
hlt
fldenv
mov
cmp
ljmp
xor
cld
mov
into
push
leave
into
sti
pop
cs
int
fucomip
jge
jnp
xor
fisubrs
cmpsb
rcll
fldcw
ret
cltd
mov
inc
sbb
dec
into
jl
jmp
jmp
lahf
mov
loop
aam
xor
and
popa
cmp
and
push
out
fisubs
xchg
jge
sbb
ficoms
fadd
mov
jg
push
addr16
fimull
sub
pop
jbe
adc
xor
addr16
mov
std
pushf
cmp
pusha
inc
ret
dec
adc
test
ljmp
ja
pop
das
lahf
je
stos
std
cmpsb
cwtd
jg
jecxz
jo
inc
mov
or
add
xor
fisubrs
inc
aaa
mov
fisubs
push
in
fcomp
hlt
mov
stos
and
and
mov
fisubs
pop
push
dec
shlb
out
inc
outsl
inc
jle
in
mov
ror
adc
push
into
mov
inc
sbb
push
faddp
fildll
mov
mov
out
in
dec
divb
lahf
pop
and
ja
or
arpl
mov
jno
scas
add
add
enter
sbb
popf
lret
scas
push
and
fisubs
add
pop
xchg
fs
rcrl
aam
cmpsl
out
inc
fimuls
cs
adcl
sub
fistpll
or
mov
cmp
mov
stos
push
leave
sub
aad
ret
sarb
sbb
inc
xor
paddusw
test
leave
iret
lret
popa
cmovnp
fiadds
dec
sahf
cmc
insl
fsubp
stos
dec
mov
sbb
sbbl
xor
fidivrs
shlb
ficoms
je
push
dec
fisubl
stos
sbb
pop
mov
aam
fisubs
dec
add
fdivp
fildll
loope
push
jno
sub
movsb
pop
repz
dec
das
jb
leave
push
ss
push
fsubrs
mov
inc
mov
cwtl
inc
jle
pop
fiaddl
into
sub
cvtps2pd
daa
out
sbb
pop
fildl
pop
fisubs
ficoms
adc
cmp
daa
cmp
push
stos
inc
insb
insl
pop
fiadds
out
sub
xchg
jbe
and
push
stos
cs
enter
xor
xlat
fcoms
insl
pop
testl
out
je
push
mov
xor
fisttpll
les
xchg
mov
outsb
sbb
lret
dec
dec
leave
sahf
mov
mov
inc
dec
cld
push
in
ror
mov
or
es
shrb
xor
push
enter
mov
push
or
adc
in
shrb
ficoms
aad
jo
das
push
ficoml
push
pushl
xchg
lret
xlat
ret
fmull
mov
or
fisubs
pop
or
ficoms
mov
faddp
cmc
pop
adc
ficoms
fdivp
push
pusha
cmp
push
pop
fidivrs
pop
lea
cmpb
pop
gs
jle
pcmpeqb
add
clc
push
or
mov
popf
mov
idiv
fistpll
into
or
mov
xchg
mov
dec
fiadds
shlb
mov
push
xor
loop
sbb
ficoms
rorl
sbb
inc
js
icebp
stc
push
pop
mov
in
and
or
pop
test
cmpsb
out
pop
add
addr16
xchg
data16
imul
xlat
pop
sbb
lcall
ret
mov
xchg
sarb
ret
lret
xchg
iret
nop
sbb
mov
mov
fisubrs
mov
mov
fistpl
les
xchg
es
jns
lods
sbb
mov
xlat
pop
call
jne
inc
rorb
and
fimuls
jp
fimull
and
fidivs
inc
imul
rclb
and
sbb
lret
or
mov
jl
cmpsb
xor
pop
test
add
fbld
and
cmp
mov
pop
sbb
add
imul
fisubl
sbb
shll
fcomp
pop
les
add
jge
mov
in
popa
popf
ret
pop
mov
loope
insb
into
int
push
jge
cmp
in
adc
sti
jle
cld
cmp
movsl
mov
adc
sahf
pushf
ret
repnz
or
cmp
out
incl
lods
pop
or
and
inc
xchg
pop
fsubrl
cltd
xor
xlat
and
xor
add
push
or
fidivs
lret
inc
aad
xchg
icebp
jle
xlat
hlt
int3
fs
mov
jnp
clc
sbb
inc
std
popa
imul
adc
pop
inc
test
fs
rcr
or
nop
clc
test
sbb
stc
or
sarb
inc
mov
xor
lcall
mov
mov
xchg
test
les
push
int3
ror
scas
cs
cmp
adc
std
out
xor
lret
pop
xlat
loopne
pop
cmp
stos
fisubs
push
pop
pushf
xchg
and
adc
mov
dec
sbb
inc
sarb
jecxz
mov
sti
aas
shll
rcr
cmpsl
xchg
sbb
jno
xchg
add
adc
cmc
clc
int3
ficomps
cmp
push
fiadds
fwait
mov
test
pop
cli
movsb
inc
clc
lret
xor
pop
out
ret
iret
fimuls
mov
cli
std
jmp
test
ret
mov
sbb
in
inc
adc
cli
and
push
jns
fidivrs
sahf
dec
pop
mov
movsb
aam
inc
cmc
sub
cmp
outsb
pushf
imul
sbb
lods
movsb
jb
sbb
fidivrs
leave
scas
cmp
mov
sub
sbb
pop
sbb
push
clc
cwtl
sti
jmp
movsb
rclb
fcmovnu
ds
dec
or
push
ret
aaa
jl
into
xorb
cmp
into
into
pop
mov
adc
dec
dec
ficomps
insb
xorl
inc
scas
aas
mov
int3
stc
loopne
out
jge
enter
fiadds
xchg
cmc
insl
sub
lcall
adc
dec
scas
fisubrs
gs
fidivs
add
clc
fisubrs
dec
cmc
dec
std
pop
mov
movsl
popa
and
mov
jns
or
inc
stc
sahf
sbb
shll
outsl
xchg
fs
jp
mov
push
sbb
into
repz
faddp
sahf
aaa
dec
sub
enter
push
lea
ficoms
out
mov
mov
xchg
cltd
loopne
idivb
fsubr
in
xor
sbbb
dec
mov
dec
push
pop
mov
inc
fisubrs
stc
xor
cmc
insb
mov
cmp
push
add
ss
test
inc
leave
cmpsb
fldenv
xorb
out
int
movb
and
es
das
add
call
test
cs
xchg
stos
mov
sub
and
mull
dec
pop
fisttpl
jmp
adc
xchg
dec
repz
hlt
mov
fmulp
out
lcall
loope
xchg
push
cmp
fisubrs
sbb
test
mulps
inc
cld
incl
adc
sbb
jno
sahf
std
vcvtpd2dqy
or
fisubs
fbstp
bound
mov
jmp
sbb
std
and
cmpb
pop
in
cli
pop
mov
ja
test
pop
jne
mov
mov
int3
xchg
fdivrp
sub
ds
mov
mov
xor
fiadds
cmpsb
push
js
fiadds
inc
pop
test
insl
mov
mov
js
fdivrp
pusha
cmp
sub
data16
xlat
or
popa
fidivrs
mov
cmpsb
mov
mov
fsubrp
call
push
jmp
idivb
pusha
fmull
fmulp
outsb
lods
sbb
mov
fdivrp
dec
out
cld
add
outsb
pop
lret
or
daa
flds
fimuls
out
shll
lahf
icebp
pop
ffreep
pop
pop
ret
lret
frstor
fidivs
xchg
mov
push
xchg
push
inc
lahf
jecxz
lods
ret
ficomps
lock
pop
push
and
stos
pop
pop
jge
push
test
xchg
mov
mov
and
ljmp
fidivs
cli
push
outsl
jo
mov
idivb
pushf
pop
sbb
bnd
push
ret
cmpsl
and
lret
lcall
xor
fidivs
mov
cmp
xor
dec
imul
lea
mov
mov
push
ja
dec
mov
das
loopne
data16
inc
int
and
clc
mov
sub
pusha
ret
dec
or
test
ljmp
shll
jge
sub
adc
ficoms
and
nop
xor
pop
imul
pop
push
inc
jl
ss
ret
ficoms
push
test
pop
push
outsl
outsb
xor
addb
lret
fsubp
daa
cmp
lods
frstor
fisubs
mov
push
cmpsl
cmp
sbb
xor
jbe
mov
sub
insb
sbb
gs
push
fidivrs
jl
and
sbb
jmp
push
sub
cld
xor
add
sbb
out
data16
push
xchg
adc
xor
sub
test
mov
cli
pusha
and
dec
testb
pop
cld
cmp
addr16
inc
and
into
sub
jbe
out
adc
pop
sbb
mov
mov
and
lods
and
addb
ja
sbb
imull
sahf
ljmp
gs
imul
add
mov
rcrl
fiadds
push
cmpsb
mov
xchg
pop
cld
in
mov
pop
leave
pop
aas
sbb
lret
fdivp
push
add
pop
scas
pop
sahf
les
xchg
mov
add
rolb
ds
sbb
in
cmp
imul
xchg
pop
add
xorl
out
fiadds
das
rorl
add
daa
fidivs
xlat
or
mov
leave
push
scas
fisubrs
sbb
ficomps
mov
stos
pop
adc
std
pop
xchg
xor
test
icebp
std
orl
scas
sbb
int
rolb
insb
xlat
movd
fmull
pushf
dec
andb
dec
adc
ficomps
and
fisubs
jge
push
outsl
sub
push
popf
jne
mov
mov
jle
mov
aaa
sbbl
lret
add
sbb
icebp
jnp
les
dec
lret
fisubs
nop
xchg
in
fisubrs
fcoml
fisubrs
xchg
or
in
fnsave
pop
ljmp
cmpsb
rcrb
fidivs
xchg
cmc
pushf
insl
pop
outsl
push
pop
cmp
push
lahf
into
out
jb
push
dec
inc
pusha
fisubs
movsl
sti
pop
and
out
sahf
sbb
cmpsl
es
pushf
aam
jecxz
lcall
rclb
cmp
popf
int3
mov
sub
ficomps
dec
je
fiadds
stos
dec
subb
lock
mov
shlb
cmp
negb
dec
or
test
test
data16
xchg
stos
fidivrs
lods
lds
mov
cld
push
pop
jbe
lret
cmp
mov
ret
ficomps
fisubrl
inc
xchg
mov
ja
lret
ficompl
mov
aas
lret
sti
inc
fldl
pop
xor
mov
mov
pop
inc
mov
mov
ret
mov
rcrb
fnstcw
push
mov
fidivrs
push
inc
or
fidivs
fldl
std
test
neg
xchg
ja
ds
mov
popf
mov
lods
sub
pop
decl
or
cs
rcrl
jno
or
ss
jnp
stc
out
fimuls
call
in
std
test
ret
adc
ret
jae
popaw
aaa
call
mov
cs
and
pop
lahf
or
mov
jnp
fisubrs
fcoms
jle
int
fidivrs
push
sub
ficomps
mov
fiadds
and
mov
bound
movb
fstp
aas
pop
iret
jno
mov
dec
fisubrs
repnz
imul
into
orb
loope
and
ficomps
out
pop
pop
mov
cld
scas
stos
flds
mov
gs
sub
inc
cmp
push
lock
mov
inc
ficoms
mov
xor
pop
sub
adc
in
data16
inc
xchg
sbb
mov
inc
cmp
shlb
inc
sahf
jne
dec
sti
in
inc
fmulp
rcl
sbb
faddp
push
xchg
mov
mov
stos
leave
mov
push
ficoms
cld
out
cmp
lret
mov
test
das
push
adc
fldcw
lea
jns
mov
mov
pop
fisubs
push
add
fiadds
movsb
pop
fldcw
ret
lods
mov
aam
clc
lcall
and
xchg
rcr
orb
jno
push
mov
ficomps
dec
call
fmulp
sub
sbb
jp
loopne
test
sarb
ficomps
push
ret
lret
mov
mov
add
std
jno,pt
addr16
aam
dec
popa
inc
mov
xchg
sub
pop
xchg
mov
sahf
and
mov
sub
sbb
lds
xor
mov
arpl
sbb
cld
push
aam
xchg
sub
imul
add
cmp
ret
movsb
pop
mov
mov
adc
fsubrp
dec
repnz
fisubrs
daa
push
in
test
std
inc
adc
mov
shlb
pop
add
ds
mov
iret
sbb
rcr
pop
cmpsb
xchg
scas
lret
ficoms
imul
sub
daa
sahf
inc
sbb
or
cmpsb
dec
insb
iret
enter
pop
fiadds
scas
xchg
out
adc
repnz
fisubrs
enter
xor
push
adc
int
jmp
push
test
rclb
fisubs
or
xchg
add
mov
mov
and
cmp
lock
push
loop
mov
push
pop
subl
push
fiadds
cmc
mov
dec
ljmp
repz
mov
out
lret
sbb
aaa
push
ficoms
dec
mov
pop
mov
loope
pop
jnp
cmp
xor
dec
xchg
or
xchg
fidivrs
out
ficoms
andl
sbb
cmp
xchg
aas
pusha
in
jb
fsubrl
pop
xchg
arpl
andb
ficomps
es
fiadds
jae
std
xchg
clc
inc
into
inc
dec
mov
fisubrs
aam
ja
loop
pop
inc
das
pop
scas
mov
sub
cs
fidivs
lahf
pop
mov
int3
xchg
lcall
movsl
cld
rcr
fisttpl
cmp
add
sbb
jne
in
dec
fiadds
mov
push
ljmp
mov
rol
sub
in
ffree
cmc
or
inc
xchg
insb
inc
cmp
pop
jg
cs
imul
fcmovu
add
sub
loope
pop
jmp
ret
ja
sbb
lret
mov
movsl
popa
repnz
jnp
sbb
iret
loope
aam
mov
fisubrs
js
stc
lcall
out
pop
mov
hlt
in
cmp
fidivs
and
cmp
xchg
dec
adc
fidivrs
test
inc
mov
inc
fidivs
in
pusha
scas
std
pop
sub
and
push
sub
cmp
xor
xchg
adc
mov
hlt
std
cs
ds
xchg
sbb
cmp
or
inc
fadd
test
fsubrp
xchg
fistps
fiadds
aaa
adc
mov
or
push
sarb
gs
les
xchg
fdivp
mov
cmp
in
mov
mov
fidivrs
addr16
decb
fidivrs
mov
aad
into
int
push
inc
sub
cmp
jno
pop
jbe
dec
mov
nop
daa
ficomps
arpl
sbb
stos
xor
in
fdivrp
negb
pop
addr16
sti
push
inc
inc
cli
loope
fimuls
jecxz
popf
fiadds
xlat
or
repz
adc
sti
enter
xchg
mov
ret
pop
outsb
xchg
lret
stc
hlt
sub
lock
cmp
sbb
pop
push
xchg
popa
iret
pop
aas
dec
rol
mov
js
dec
xchg
cmc
jbe
cmp
aam
cmp
push
in
push
das
nop
push
bound
fdiv
xor
inc
rorb
mov
rorl
mov
jnp
mov
jle
unpckhps
repz
adc
faddp
arpl
out
ficomps
leave
add
out
adc
lret
xor
faddp
pop
loop
filds
repz
fiadds
pop
push
insb
shr
test
stos
clc
sbb
pushf
aad
mov
into
ret
pop
pop
fsubrp
aas
mov
lcall
xor
fisubs
aad
cld
cmpsb
xor
loope
outsl
sbb
fidivl
xchg
in
mov
jl
mov
sub
outsl
cli
mov
scas
mov
movb
sarb
addr16
sbbb
lret
imul
sahf
sub
jmp
xchg
xchg
mov
dec
mov
out
adc
pushf
or
and
push
push
xor
stos
ret
loope
sahf
fisubs
cmpl
inc
sub
out
add
inc
pop
and
push
fdivrp
rcrl
dec
clc
ficoms
in
int3
mov
leave
push
andb
mov
dec
fidivrs
push
dec
stos
pop
sti
pop
sbb
cmpsb
cwtl
fdivrl
shrl
fisubs
lret
xor
xor
cmp
pop
fimuls
les
sahf
mov
test
faddp
std
and
inc
and
sub
aad
clc
insb
in
ficoms
inc
cmp
fiadds
in
fs
loopne
fnstcw
enter
and
sub
sbb
jg
mov
push
arpl
sbb
and
sahf
cmp
cmp
adc
fidivrs
outsb
sbb
fmull
push
push
mov
xchg
enter
xor
mov
rorb
fidivs
pop
push
rcr
arpl
out
lcall
push
add
mov
lahf
outsl
fs
scas
fimuls
mov
js
xchg
ss
jecxz
push
or
xlat
into
imul
ret
add
fisubs
push
loopne
shlb
pop
ficoms
mov
cmpl
or
shll
jae
push
fdivr
and
add
movsl
ds
scas
dec
outsb
mov
or
mov
add
jae
and
inc
ficoms
stc
or
ficoms
in
idivl
aad
std
data16
das
push
hlt
test
fisubs
inc
dec
mov
lahf
fsubrp
lcall
cmp
rolb
popf
cmp
int
sbb
add
rcr
mov
mov
imul
sarl
rcr
loopne
movsb
or
bound
ficoml
les
sti
popa
stos
ljmp
mov
sub
cwtl
pop
xchg
ja
ficoms
mov
notb
xchg
push
iret
lcall
loop
movsl
dec
xchg
mov
pop
test
mov
mov
mov
push
les
fiadds
adc
std
jge
jns
rolb
lock
xchg
paddw
lcall
and
push
lret
jp
ficomps
dec
push
xchg
push
cmp
cmpsl
sub
mov
cs
ja
jecxz
sbb
jnp
mov
fimuls
imul
jae
cli
fiadds
movsl
xor
ficoms
pop
std
cmpsl
sbb
loopne
mov
mov
xor
xorb
repnz
fcomps
roll
xchg
fsubp
cmp
in
push
cltd
pop
pushf
je
cmc
popf
into
ja
scas
mov
scas
int
inc
mov
movsl
mov
icebp
xchg
jl
ficomps
jns
fwait
nop
ficomps
cli
push
faddp
movsl
lock
xor
adc
jbe
pop
xchg
push
int
inc
push
enter
lds
cltd
mov
in
jecxz
add
movsb
inc
into
fidivrs
out
add
push
aas
fisubs
adc
push
dec
cmpsl
fisubs
push
pop
and
das
pop
fisubs
imul
fisubs
shl
out
inc
mov
xchg
jg
vpmulhuw
iret
sbb
fiadds
into
push
call
ficoms
xor
jmp
xchg
test
gs
ss
add
je
adc
int
arpl
fimuls
scas
mov
in
out
repz
lret
rorb
push
mov
fisubs
inc
pop
pop
cmpsl
xchg
dec
mov
sub
fdivrp
ret
rcr
pop
inc
rcr
pusha
or
sub
lret
dec
fidivrl
fiadds
icebp
sbb
inc
xor
or
mov
mov
aaa
fprem1
jg
sarb
test
cltd
pop
cli
aam
mov
insl
cmp
adc
pop
jne
loope
add
cmc
dec
mov
imul
dec
mov
and
in
adc
push
mov
fimuls
mov
jecxz
sahf
ret
fbld
test
sub
add
outsl
imul
push
lea
std
pop
fsubrp
cld
xor
xor
insl
outsb
cs
dec
jns
stos
into
mov
ficomps
ds
mov
cwtl
jb
adc
ja
add
pop
mov
pop
negl
mov
inc
lcall
jmp
push
inc
out
mov
movb
daa
aam
ret
fimuls
insl
and
sbb
sub
inc
icebp
xor
lcall
enter
xor
jg
jl
inc
jle
imul
imul
test
mov
fdivp
in
mov
fidivrs
aaa
and
outsb
sub
dec
jo
cmc
ret
cmp
aam
mov
call
jmp
out
repz
ficoms
xchg
push
inc
addb
mov
add
stos
popa
pop
inc
movl
cmp
ficoms
daa
push
fisubs
mov
inc
pusha
xchg
jae
in
pop
aas
fdivrl
adc
xor
jmp
or
daa
fs
sahf
jle
pop
cmp
add
xorl
in
push
clc
pop
roll
fidivrs
sahf
jge
popf
jb
fisubrs
inc
lcall
sub
dec
fsubp
jbe
je
xchg
cmpb
mov
cmp
jae
out
loop
inc
mov
pop
sub
mov
xchg
mull
sbb
shrb
into
add
jge
popf
es
inc
loopne
or
std
rcrl
in
mov
fiadds
test
mov
jne
lds
cltd
jge
test
cwtl
incl
stc
icebp
sub
push
movsl
fisubs
add
fisttpl
sub
sub
push
push
jl
fisubrs
adcl
daa
and
adc
jmp
pop
and
jle
add
leave
sahf
mov
xchg
call
inc
movsl
sbb
shl
out
add
mov
pop
and
xchg
mov
mov
pusha
sarl
les
and
mov
fidivrs
outsl
mov
adc
pop
and
fdivrp
hlt
inc
push
jg
fisubrs
mov
push
stos
jp
fsubp
fisttpll
xor
jl
pop
int3
out
out
insl
fiadds
into
cmpsl
dec
xor
jp
sbb
or
fiadds
dec
pop
hlt
pop
cmpsb
sbb
dec
test
repz
int
jge
ret
dec
stos
mov
arpl
cmp
gs
push
cmc
ficoms
push
ss
push
jno
push
ficomps
fidivs
xchg
add
jge
or
push
fisubrl
into
mov
adc
loope
call
push
int
ficoms
jns
mov
out
pop
mov
mov
fidivs
cmp
push
fiadds
aas
mov
adc
cmp
pop
imul
cltd
dec
lock
fsubp
int
and
pop
add
jnp
or
sub
daa
jo
out
cld
xchg
fisubs
push
ja
mov
int3
rcl
inc
and
fimuls
sbb
lahf
inc
xchg
fidivrs
mov
sub
or
in
inc
mov
test
xor
push
outsb
ficomps
sti
push
aas
rcr
mov
in
stos
nop
cmpsb
pop
xor
idivb
rcl
sub
xor
adc
or
xchg
scas
iret
fidivs
test
out
mov
lcall
jl
fiadds
and
sbb
rcr
movsl
and
cmpsl
mov
add
imul
repnz
ds
ds
mov
xchg
xlat
mov
mov
jmp
aad
mov
xor
dec
mov
iretw
inc
in
fiadds
addr16
test
cli
lock
cmp
lcall
addr16
loopne
dec
pop
xorl
jmp
aas
fidivrs
xchg
sbb
mov
cmp
adc
dec
xchg
test
fisubrs
jno
sahf
popa
cld
xlat
cs
jp
jb
loopne
ret
sub
stc
add
ret
mov
cs
loope
fwait
xchg
jecxz
in
or
fiadds
call
fiadds
and
push
mov
fiadds
incb
fidivrs
movsb
loope,pt
or
imul
push
pop
mov
push
pop
mov
fidivs
out
rcr
mov
xchg
mov
daa
dec
or
insb
xor
lret
jl
jne
xchg
xchg
sub
data16
enter
xor
push
rclb
insl
ret
icebp
cmp
jmp
lods
pop
outsb
iret
lds
push
mov
add
cmp
sahf
fiadds
push
test
dec
pop
or
xchg
fmuls
fimuls
and
ds
push
outsl
mov
xor
fdivrp
cmp
lahf
es
fidivs
jb
repz
dec
mov
pop
out
inc
out
and
jbe
push
frstor
mov
sbb
in
fwait
in
faddl
sbb
aas
or
add
add
dec
push
fimuls
lods
sbbl
and
ficomps
or
push
std
add
inc
cli
sub
bound
mov
sbbb
je
shlb
leave
dec
add
mov
mov
ret
ficoms
arpl
ror
cld
sbb
out
das
mov
cwtl
adc
ret
hlt
je
mov
xlat
dec
sbb
xor
jle
fimuls
sub
sarb
jl
loopne
xlat
mov
jne
inc
cmp
mov
inc
mov
sub
lds
inc
pop
sahf
and
pop
fimuls
xor
add
dec
ficoms
push
mov
inc
test
xchg
daa
sbb
ljmp
dec
cmc
sub
fsubrp
and
jae
pop
cli
xchg
push
mov
mov
sti
ret
ret
adc
inc
ficoml
push
faddl
add
pop
js
aas
or
les
pop
fisubs
mov
in
xchg
push
faddp
inc
clc
das
cmp
je
ficoms
inc
mov
jns
add
push
mov
fcmovnu
fisubrs
std
add
pop
mov
leave
push
or
push
fidivrs
sbb
in
lods
mov
mov
repnz
out
cltd
into
mov
mov
int3
jnp
inc
test
dec
filds
cmpsb
lods
notb
test
xor
icebp
cmc
xor
ljmp
rcrb
sub
mov
lock
pop
push
ficomps
dec
mov
imul
cltd
cmp
mov
lods
mov
aaa
fidivs
push
int
outsl
or
sub
adc
or
sbb
pop
dec
fwait
sbb
mov
lds
test
push
add
xor
xchg
dec
xor
ljmp
stos
dec
adc
cltd
fiaddl
jecxz
ficoms
jnp
cmc
add
fimuls
cltd
ljmp
lea
mov
fiaddl
mov
pop
fisubs
mov
sbb
ss
dec
cmp
fimuls
xchg
sar
cmp
and
pop
and
sub
push
push
lea
lret
mov
call
xchg
testb
js
ss
or
adc
testb
fimuls
adc
jl,pt
cld
mov
out
sahf
rcr
lret
or
bound
inc
in
mov
add
mov
pop
push
loope
mov
into
and
faddp
scas
rolb
sub
fdivrp
call
gs
fisubs
fstpt
add
in
xchg
sti
dec
jmp
aad
inc
mov
ficomps
clc
pop
adc
aaa
leave
fiadds
cli
mov
test
mov
fimull
fiadds
leave
cmp
xchg
push
pop
lods
fisubrs
addr16
aam
dec
jmp
lcall
jae
xor
into
fucomip
xor
and
jb
fisubrs
jnp
dec
xor
push
sahf
ljmp
in
fdivrp
mov
xor
test
cltd
fisubrs
adc
add
popf
push
fisubrs
xor
push
fisttpl
sub
cmp
jb
fidivs
jmp
mov
mov
out
cwtl
inc
cmp
scas
loope
mov
push
pop
sbb
push
mov
cwtl
cmp
pop
aas
lea
std
mov
adc
xchg
mov
out
jmp
cmp
imul
or
xor
scas
push
ficoms
inc
loopne
cld
dec
enter
ret
adcb
cmc
and
inc
sub
or
test
sbb
push
std
insl
cli
cmp
outsl
sti
loopne
fsubp
gs
pusha
dec
mov
jle
xchg
mov
aad
loop
lret
and
push
lcall
outsl
fidivrl
cltd
push
mov
rorb
ret
lods
loop
repz
mov
pop
fisubrs
jae
xchg
sbb
dec
xor
push
int3
scas
mov
std
xchg
xor
stos
lcall
or
mov
ret
loopne
pop
jb
aad
bound
xor
cmc
sub
sbb
cmp
fstp
pop
mov
es
xchg
cmp
movsl
jle
enter
and
int
jo
clc
push
neg
add
test
jae
mov
sarb
popf
hlt
mov
sub
sti
das
leave
bound
xchg
jl
xchg
je
dec
and
loopne
std
mov
cld
aam
enter
sub
dec
fimull
xorl
sbb
jbe
sbbb
cli
push
mov
fisubs
xchg
lret
popl
xor
inc
pop
lds
scas
lret
pop
aaa
jbe
or
mov
fmulp
cltd
push
ljmp
dec
and
ror
pop
jp
std
aaa
ja
add
mov
sbb
fidivrl
iret
fs
jne
cs
ficomps
xchg
gs
pop
pusha
mov
mov
std
pop
ficomps
test
dec
out
ficoms
adc
rcr
jns
cmp
and
ficomps
mov
sub
mov
sar
xor
mov
xchg
push
test
scas
fimuls
cmp
je
shrl
out
movsl
cld
ror
pop
mov
pop
in
mov
jnp
fsubrp
clc
dec
sbbb
incb
push
fidivrs
sahf
out
aaa
sub
cld
sbb
mov
inc
mov
or
lods
mov
xchg
cmp
ficoml
jae
pusha
adc
push
imul
pop
xlat
loope
mov
push
int
ficomps
cmovg
adc
jl
mov
lock
fildl
pushf
sub
cmp
test
popf
mov
rcrb
jno
inc
cmc
fsubp
cmp
mov
movb
aaa
pop
xlat
mov
insl
cmp
fdivrp
or
ja
fisubs
mov
inc
sub
into
nop
mov
into
out
hlt
mov
sbb
imul
popa
pop
pop
adc
mov
in
xchg
xchg
jl
dec
in
sub
faddp
ljmp
fiadds
lods
jns
push
jmp
popf
dec
mov
adc
ficoms
mov
daa
orb
jo
int
sar
leave
mov
push
pop
xchg
push
scas
or
aam
aad
adc
sbb
mov
sub
data16
add
std
fs
fwait
pop
loop
stos
fisubs
sbb
test
clc
das
movsl
movsb
sarb
pop
fimuls
jg
pusha
aas
cmp
sti
or
mov
push
clc
add
fidivs
lret
imul
std
data16
push
inc
fsubs
jp
and
out
test
into
xor
mov
push
push
sub
dec
fisubs
jle
inc
dec
sahf
ficoms
cmp
jmp
jmp
cltd
mov
lret
inc
push
adc
fidivrs
dec
iret
mov
out
jae
aas
repz
mov
rclb
jne
jmp
pushf
imul
std
nop
out
inc
mov
mov
sti
leave
add
jle
das
test
push
mov
jg
rcr
push
pop
jbe
lret
fidivs
fcmovnbe
lahf
cmpsl
fisubrs
cmpsb
cmpl
jbe
ja
mov
xchg
xchg
sub
xchg
jle
ret
cmp
out
adc
out
repnz
aas
xchg
or
mov
inc
mov
ficoms
arpl
mov
ficoms
hlt
pop
pop
adc
insl
or
subb
xchg
jg
pushf
inc
cmp
std
push
xchg
rolb
nop
push
sub
dec
inc
or
jmp
loop
sub
in
jmp
cmp
and
outsl
in
dec
push
pop
fisubrs
movsb
mov
push
jno
or
es
ljmp
sti
sbb
loopne
fidivs
sahf
mov
orb
adc
ret
orb
icebp
xor
cmp
mov
cmovle
and
test
fcompp
lods
adcl
fdivp
pop
mov
fidivrs
jge
in
xchg
jb
ficomps
inc
sub
xchg
movsl
mov
int3
push
cmp
inc
push
push
es
call
inc
stos
jae
enter
ficomps
push
popf
xchg
fisubrs
testl
fiadds
jnp
cs
dec
fbstp
fimuls
arpl
lcall
in
push
shl
clc
xchg
shrb
js
jne
dec
imul
fiadds
lds
xchg
and
cmpsb
or
cld
mov
adc
lret
xor
xor
jb
xor
inc
xchg
cli
ret
fldcw
loopne
popw
jle
std
dec
ja
push
sub
sbb
ficoms
repz
frstor
push
add
sbb
dec
movb
fs
add
xchg
dec
pop
mov
mov
ljmp
cmp
add
mov
ficoms
mov
sbb
iret
mov
push
fidivrs
inc
stos
and
push
dec
nop
ss
mov
loop
lods
repnz
cmp
out
into
push
into
popf
jl
mov
movsb
std
or
scas
sbb
cmpsb
out
and
or
fsubrp
fbld
push
mov
dec
aaa
stos
add
push
std
push
jl
cmp
lahf
faddp
sbbb
lock
sbb
or
hlt
and
cwtl
jbe
add
cld
add
push
ficomps
sub
jg
cmp
loope
jo
and
pusha
outsb
mov
sub
dec
xor
mov
cmp
xchg
xchg
test
pushf
iret
inc
outsl
repnz
sarl
ret
inc
xor
js
std
add
add
les
pushf
lods
test
ss
clc
or
sbb
or
insb
pusha
push
xor
ficomps
sbb
xor
sbb
push
fwait
int3
mov
je
sub
pop
sbb
movsb
dec
jb
stc
fidivrs
test
lock
mov
or
jae
test
push
xor
or
es
xchg
dec
not
test
pop
ss
std
adc
dec
fisubs
fwait
push
push
shl
pop
scas
aaa
div
in
sub
xchg
lret
pop
or
pop
lcall
mov
add
ficoms
jle
mov
test
push
insb
sarb
shrl
fimuls
loopne
sbb
mov
cmpb
mov
and
fidivs
inc
aad
push
cmp
fsubrp
or
sbb
cmp
inc
popf
lret
outsb
sbb
push
into
test
lahf
loop
mov
dec
sub
push
pop
jecxz
sub
cmp
xor
std
fiaddl
xor
or
adc
js
addr16
int3
mov
jle
sahf
pop
pop
sbb
pop
or
aam
loopne
mov
repnz
xor
imul
stc
mov
fstps
jge
pop
leave
mov
mov
adc
je
scas
push
jle
xchg
addr16
call
out
mov
ds
out
sbb
dec
imul
jne
pop
jbe
mov
xchg
fisttpl
out
lret
sarl
mov
daa
inc
scas
leave
or
jb
gs
xchg
inc
test
xchg
js
add
enter
xor
jne
adc
cmp
inc
popa
fisubl
test
dec
cmpsl
mov
mov
mov
mov
add
ficomps
outsb
mov
ja
clc
into
mov
mov
jle
push
test
aaa
imull
outsl
push
daa
push
rorl
fidivrs
pop
popf
cmp
fiaddl
push
mov
faddp
sub
ficoms
repz
fs
fiadds
testl
or
shlb
data16
cmpsl
aas
int3
mov
std
std
or
insl
sbb
ret
test
lret
mov
jb
ret
movb
movsl
sarl
andb
jnp
movb
aaa
pop
aam
add
push
jae
int
fiadds
test
sbb
cmp
outsl
imull
jp
fistl
push
ficoms
lds
cltd
mov
mov
or
lcall
push
not
xchg
sbb
pop
sbb
mov
add
loop
dec
lret
out
ficoms
jb
pmaxub
in
out
test
nop
cmpsb
sar
or
scas
mov
in
push
mov
adc
test
sbb
or
arpl
cmc
int3
sub
jmp
lds
sbb
dec
pop
fdivp
bound
xchg
outsl
push
xor
sub
sbb
iret
mov
leave
sbb
jg
add
loopne
inc
ret
ficomps
pop
mov
std
das
jle
cmp
in
lock
inc
xchg
les
fisubs
cmp
loop
adc
ficoms
ret
jns
xchg
inc
jbe
movsb
xchg
mov
aas
jle
dec
andb
jne
sbb
data16
sahf
and
call
ficomps
dec
push
ficomps
mov
mov
out
std
fidivs
into
cmp
in
cs
iret
ud2
xor
sub
fisubrs
cmpsb
adc
in
jmp
sbb
iret
js
aaa
add
sti
jg
fimuls
push
mov
and
and
adc
push
sbb
fsubs
fdivrp
filds
xor
dec
pop
push
mov
int3
cmp
jg
fs
loope
mov
xor
adc
je
pop
jle
xor
pop
ds
mov
fimuls
pushf
jne
or
jbe
enter
sbb
xor
fimuls
push
mov
ficoms
std
stos
movsl
fimuls
jecxz
std
cmp
xlat
mov
push
mov
test
es
jle
jp
fisubs
pushf
pop
dec
fdivp
loope
repnz
inc
cmc
test
aas
sbb
add
fisubs
ret
scas
dec
sbb
aaa
js
add
cmp
add
shrl
sub
in
sbb
ret
or
pop
mov
sub
nop
cmp
fidivs
stc
ss
fidivs
in
jl
sar
push
fs
inc
out
lea
mov
xchg
in
lds
ficomps
movsl
xor
ja
and
jl
and
subb
in
sahf
shl
mov
gs
or
into
ret
lea
loop
pop
mov
jmp
mov
xchg
movsl
jnp
aad
cmp
xchg
ficomps
ja
dec
adc
fiadds
add
fiadds
sbb
lret
cmpsb
cmp
cld
and
addr16
pop
dec
ret
loopne
es
orl
sbb
add
mov
les
out
ljmp
push
pop
mov
sahf
divl
cwtl
cld
ret
aam
fimuls
add
sub
adcl
nop
push
xlat
fwait
push
cmpb
lea
jg
xor
enter
sbb
mov
fimuls
adc
adc
fchs
mov
jle
lds
stc
fimuls
out
js
sbb
ret
adc
jge
iret
mov
rcll
pop
out
daa
insb
arpl
stos
fisubrs
aam
out
dec
sbb
cmp
and
loopne
mov
pop
pop
xor
loope
ficoms
dec
and
fiadds
pop
or
push
sub
pop
fstl
fidivrs
movb
iret
cmp
xor
dec
in
dec
xchg
sahf
ficoml
rorb
jle
aaa
dec
rorb
rol
jnp
sbb
jp
dec
outsl
cmp
sahf
push
mov
rcrb
repz
iret
inc
dec
insl
ret
jo
test
push
test
adc
jmp
in
fcmovnu
cwtl
adc
xor
std
clc
pop
or
lretw
xor
pop
pop
push
insb
lods
shl
addl
rcl
je
or
cmp
mov
sbb
inc
jne
and
into
sbb
out
icebp
inc
sti
mov
or
add
cld
cmp
jae
add
inc
lds
push
mov
fldcw
rcr
ficomps
inc
das
sub
ret
cld
jne
je
dec
dec
xchg
fwait
inc
mov
sub
outsl
push
arpl
adc
cltd
lods
shrb
dec
cmp
clc
fisubs
sbb
int3
pop
ficomps
mov
xchg
fisubs
stc
xchg
lcall
and
scas
xchg
mov
push
std
das
data16
push
enter
pop
fiadds
dec
pop
fidivl
jne
and
pop
ljmp
mov
ds
pop
sbb
mov
imul
iret
fimuls
out
xor
dec
add
jae
test
movb
mov
scas
fidivrs
in
add
jno
fs
pop
mov
shl
jns
or
mov
or
test
fcmovnu
pushf
jle
and
mov
jne
sbb
cld
dec
mov
in
shrb
out
enter
into
jge
cs
mov
inc
or
enter
push
xor
test
in
into
test
ret
js
jle
aaa
loope
mov
ret
xor
jl
movsl
lock
lret
lahf
push
xchg
std
fiaddl
mov
add
add
jge
cli
mov
gs
fidivs
pop
stc
loope
je
int
mov
incl
adc
dec
sahf
pop
les
jp
pushf
sbb
pop
xor
das
fidivrs
lcall
xchg
pop
dec
adc
mov
stos
ret
jae
popa
cmp
jecxz
clc
xlat
sbb
into
push
dec
icebp
or
cmp
jns
or
shll
pop
inc
hlt
push
sarb
and
sbb
cmpsb
pop
std
jle
mov
leave
cmpl
cmp
out
dec
sub
mov
sahf
bound
fiadds
mov
rcr
cmp
negb
sbb
loope
and
fstpl
and
pop
arpl
pop
cmp
scas
jno
movsb
fimuls
je
movd
mov
adc
rol
pop
add
cmc
fsubl
in
fcmove
xor
cmpsl
dec
fimuls
inc
mov
fidivl
rclb
mov
gs
ljmp
mov
test
fistpl
jmp
int
notb
xor
add
data16
loope
inc
xchg
sub
mov
nop
fidivrs
xor
mov
dec
into
cmp
pop
push
fsubl
dec
fidivs
xchg
mov
sbb
fdivrp
jno
jmp
pop
and
and
test
push
dec
stos
cs
inc
insb
inc
jle
sahf
xchg
lea
aam
sbb
jle
scas
lret
sub
jb
inc
ficomps
movsb
movsl
icebp
push
fwait
mov
jmp
sub
hlt
faddp
dec
xor
push
cmp
push
pop
pop
cwtl
mov
and
inc
movb
xor
out
imul
lods
leave
pop
mov
dec
ficoms
xchg
cli
repnz
push
fisubrs
sarl
fsubrp
or
ret
rclb
subb
dec
ret
mov
ljmp
adc
insl
jle
mov
pop
xchg
and
out
sarl
sbb
lret
cmp
int3
mov
dec
outsb
std
rcr
std
cmp
and
mov
jnp
pop
shlb
add
cmc
outsl
inc
fisubrl
pop
pop
xchg
xchg
mov
dec
je
repz
inc
aam
adc
aaa
fbstp
ficomps
sahf
inc
cs
mov
and
mov
cld
xor
cmc
rol
fs
jno
data16
sub
lods
testb
subl
hlt
cmc
lods
push
shrl
pop
inc
mov
fdivl
mov
movsl
les
addl
movb
inc
jne
inc
repz
fnstcw
push
jle
clc
popf
jnp
lods
js
or
inc
das
push
push
dec
push
adc
ret
es
nop
mov
and
mov
rcrb
ficomps
sbb
ficomps
mov
fisubs
xchg
push
bound
mov
fistpll
lds
in
cmc
ret
or
or
jbe
mov
dec
in
test
xchg
inc
mov
movsb
fcmovbe
or
sub
fldl
rol
pop
scas
sbb
mov
mov
neg
sti
jl
call
sahf
xor
xor
fimuls
mov
mov
mov
in
cmp
ret
out
inc
or
imul
lahf
les
out
out
pushf
and
mov
fldcw
test
not
jp
add
xor
popa
fimuls
ss
mov
ficoms
or
dec
or
dec
das
fwait
test
jecxz
fists
xchg
faddp
add
fiadds
sbb
std
bnd
out
sahf
insl
push
lds
mov
fisubs
mov
lock
and
aad
ds
in
and
out
adc
jge
ja
jns
repz
fnstcw
sub
mov
loope
mov
aas
sub
cmp
adc
pop
int3
jle
fcmovnu
pop
pop
imul
mov
push
sbb
ret
fidivs
push
sub
lahf
pop
js
stos
inc
pusha
mov
popf
lea
jecxz
or
es
cmp
das
or
push
fiadds
movsl
shlb
sbb
push
adc
addr16
ret
js
int3
fimuls
iret
lcall
ficomps
inc
popa
shrb
push
das
sbb
inc
hlt
in
aad
sub
insl
jae
sub
push
fiadds
aas
push
sahf
push
pusha
sbb
mov
push
and
cmc
je
in
dec
fdivp
adc
lahf
arpl
test
aaa
fidivrs
lea
out
dec
aaa
ror
into
data16
pop
sti
jae
add
lock
fs
bound
cmpsl
jne
in
mov
xchg
insb
jnp
lahf
inc
sub
cmp
cmp
mov
fimull
gs
dec
aas
cmpsb
fists
mov
pop
xchg
mov
loopne
outsb
repz
pop
call
inc
inc
data16
inc
cmp
sbb
add
filds
lds
out
mov
int
scas
vcvttps2dq
shl
dec
fimuls
jbe
mov
gs
inc
jmp
pop
push
inc
push
push
mov
adc
aam
shll
fsubrp
dec
dec
ss
test
pop
cmpsl
sahf
sbb
sbb
aam
pop
cld
mov
fwait
sbb
inc
jmp
mov
push
lock
in
mov
inc
cli
test
int
fisubs
xor
push
or
push
ds
pop
lock
je
into
neg
pusha
cwtl
leave
xchg
or
dec
icebp
rcl
fisubs
adc
and
in
pop
pop
fcomp
mov
mov
xchg
mov
daa
cpuid
mov
scas
rcr
mov
inc
sub
inc
nop
std
xchg
stc
fcmove
loopne
std
test
push
xor
mov
fisubrs
dec
addl
insb
mov
fdivp
and
fstl
or
ret
or
insb
add
fimuls
push
mov
sbb
push
loop
call
adc
mov
pop
pushf
push
std
cmpsl
ficoml
jno
mov
mov
sub
cmp
ret
sub
cld
lds
mov
mov
cli
push
in
jle
iret
and
fsubp
push
lods
clc
fadd
mov
or
iret
jno
and
pop
xchg
jns
adc
inc
cmc
fisttpll
pop
shll
int
push
sti
mov
loop
inc
inc
mov
daa
fiadds
inc
je
out
mov
or
es
int
add
jl
jae
cli
imulb
into
adc
int3
popf
ficomps
lret
jge
fisubrs
shrl
popa
sar
fisubrs
imul
jmp
pop
cmc
call
fidivs
adc
daa
inc
add
adc
faddp
mov
aam
xchg
jmp
sbb
rcrb
data16
or
out
fdivp
jbe
repnz
jl
fsubp
test
call
xlat
loop
fisubrl
add
jge
mov
push
ja
fcoms
pop
inc
fsubs
xchg
inc
sbb
fmulp
jg
xor
aad
into
add
xchg
movsb
jge
pop
cltd
xor
ficoms
inc
cmpsl
mov
jo
push
in
dec
pop
and
inc
ljmp
enter
dec
inc
call
and
es
jle
mov
push
sbb
jp
pop
sub
pop
lods
fidivs
ljmp
inc
mov
ret
data16
or
lret
idivl
ja
outsb
dec
scas
xchg
lret
mov
cmp
loop
test
fisubs
dec
sbb
icebp
xchg
fidivrs
mov
js
rol
shl
adc
mov
and
sbb
xor
push
mov
fisubs
aas
loope
jbe
int
loop
xchg
mov
bound
jle
arpl
lahf
pop
mov
mov
ljmp
ret
and
cmp
cmc
fimuls
mov
je
stos
sbb
mov
pop
jecxz
cmp
cmp
mov
push
or
xchg
ficoms
inc
inc
push
mov
jae
jne
hlt
pop
ret
int3
xor
mov
lock
lea
in
cmp
popa
loop
fimuls
dec
cld
and
jle
xchg
mov
in
scas
add
push
inc
sub
fmulp
add
jmp
inc
push
jge
out
test
into
cmpsb
pop
nop
push
fsubrp
notb
cmp
cmp
outsb
adc
inc
into
arpl
lret
push
dec
jbe
scas
pushf
stos
mov
movsb
sbb
imul
shr
fimuls
out
pop
aaa
or
ret
das
aam
mov
and
out
rcr
mov
sub
add
dec
mulb
pop
lcall
sbb
xchg
mov
jmp
aad
xchg
mov
ficomps
mov
push
and
enter
fstpt
mov
pop
cmp
sbb
pop
sub
adc
xor
insb
jbe
dec
fimuls
cmpl
in
add
jae
xchg
mov
jbe
push
push
call
mov
enter
std
jne
aam
or
mov
stos
fiadds
imulb
imul
xchg
js
out
test
loopne
push
lds
std
mov
leave
ss
into
sub
repz
pop
push
adc
loope
fists
cwtl
into
xor
js
sub
int
lret
sbbb
jmp
push
ret
sub
fisubrs
xchg
inc
fisubrs
out
mov
sbb
es
or
aaa
sbb
mov
lock
int3
and
xchg
xchg
aaa
loopne
cmp
enter
sub
cwtl
push
adcl
cmp
cmp
and
icebp
fsubp
mov
jle
dec
scas
add
pop
pop
fisubs
inc
mov
aaa
sub
xor
inc
push
ficomps
and
pop
sbb
in
xchg
addr16
push
inc
enter
mov
pushf
mov
mov
cs
ss
sbb
fcoms
push
fiadds
jecxz
testb
push
xor
stos
jp
xlat
cli
push
jno
fwait
pop
xor
lods
fisubs
rcr
andl
cmc
fsubrp
xlat
mov
cmp
push
fwait
inc
iret
jb
mov
sub
movsl
pop
fdivrl
sbb
mov
pushf
ficomps
jnp
add
sahf
std
jae
mov
mov
mov
popf
into
inc
adc
test
push
inc
and
clc
mov
inc
adc
mov
arpl
enter
in
shl
ja
call
or
sbb
dec
mov
mov
lds
sbb
fidivrs
fidivs
repnz
inc
and
dec
push
jbe
mov
mov
and
xchg
mov
cmp
repz
ficoms
ficompl
add
cmp
ficoms
mov
pop
hlt
xchg
std
mov
shl
sar
fisubrs
stos
xor
lock
add
pop
xlat
dec
pop
cmp
mov
mov
jb
das
les
mov
jl
mov
sarb
sbb
loopne
into
mov
scas
dec
mov
iret
sbb
fisubrs
shll
fisubs
jo
jbe
sub
loop
stc
lods
mov
mov
nop
fimuls
out
outsb
cmpsb
into
lods
sub
mov
jae
lcall
push
or
into
pop
jle
mov
fisttps
lods
addr16
push
loopne
ret
adc
push
sbb
lds
or
mov
into
add
cwtl
fiadds
cli
adc
xor
and
mov
mov
push
sub
mov
shl
push
fsubp
pop
mov
out
fisubrs
shrl
jbe
add
inc
pop
mov
movsl
mov
jle
out
pop
ret
xorb
ficoms
in
pop
lods
cli
ss
inc
inc
scas
stos
cmp
jns
push
fisubs
jecxz
adc
out
cmp
cld
jp
pusha
icebp
faddp
inc
jecxz
das
incl
adc
hlt
jb
int3
adc
and
sbb
repnz
dec
xchg
and
ss
fisubrs
push
les
sub
imul
fisubs
push
push
test
adc
mov
jge
nop
mov
dec
out
neg
inc
ja
xlat
mov
ss
hlt
pusha
adc
mov
pop
push
scas
fdivs
fimuls
int3
cmp
push
roll
and
stc
fs
pop
mov
repnz
test
pop
shlb
loope
daa
or
gs
push
outsb
aas
sti
jle
dec
mov
jb
push
jmp
scas
shr
sahf
pop
lods
push
sbb
or
fdiv
xor
add
popa
cli
adc
or
outsb
and
pop
cmp
jle
push
mov
or
dec
or
mov
int3
daa
or
enter
test
testb
leave
jne
push
xchg
cmp
sahf
outsb
lods
mov
jnp
das
pop
aam
and
sub
cld
test
imul
add
cmp
in
push
fsub
leave
mov
pop
xor
inc
jge
push
jge
pop
fisubs
mov
adc
or
inc
cmpsb
ds
arpl
sbb
or
imul
pop
into
arpl
add
cmp
adc
fsubp
dec
rcll
clc
sbb
mov
fiadds
adc
scas
cmc
outsb
fdivrs
loopne
stc
inc
enter
inc
xor
loope
insl
aam
jg
inc
xchg
push
mov
xchg
faddl
rorl
jp
push
inc
out
fiadds
dec
sub
outsb
dec
mov
adc
mov
adc
popf
push
pop
cmp
call
into
test
jle
test
push
mov
das
push
in
mov
push
loopne
jmp
mov
mov
and
xor
add
jb
test
addl
addl
daa
inc
shlb
xor
pop
rol
jle
mov
orl
int3
cmc
push
mov
daa
shl
andl
push
cmp
dec
jb
in
fiadds
inc
out
call
fsubp
orb
fdivp
ss
mov
ret
in
add
pop
jae
repz
das
push
sahf
xchg
mov
xchg
mov
adc
or
fstpt
ficomps
sti
rcrl
push
sarb
lcall
in
sarb
sar
sbb
push
or
cmovns
ficomps
fs
stc
adc
dec
cmpsl
and
xor
fisubrs
push
imul
test
mov
fimuls
mov
pop
inc
sub
fisubs
fcmovnu
adc
push
pop
xchg
jmp
xchg
xchg
fisubrs
xor
shrb
adc
fiadds
push
or
sbb
pop
cmp
mov
mov
inc
in
xchg
jmp
fimuls
cltd
cmp
ss
push
inc
fsubrp
jns
adc
test
mov
std
push
mov
lcall
inc
and
pop
fiaddl
push
dec
cltd
into
fisubrs
mov
xlat
pop
out
lcall
sub
orb
dec
and
dec
fdivp
add
test
aam
pusha
fcomip
popa
sub
std
cli
push
lcall
add
gs
cmp
pop
lahf
lcall
in
lock
enter
jnp
add
mov
ret
mov
ficomps
mov
jbe
push
int
outsl
mov
adc
push
sarl
xchg
dec
pop
rcl
loopne
out
adcb
dec
rol
jecxz
into
xor
ficoms
inc
or
pop
xor
inc
pop
dec
fsubrl
cltd
out
push
jecxz
shrb
xlat
cli
pop
in
pop
cmp
dec
or
into
push
pusha
sbb
fstp
inc
addb
mov
xchg
mov
js
xchg
fmulp
jge
iret
and
imul
add
dec
rorb
fidivrs
insl
stos
cld
in
mov
aas
sarl
sub
push
or
and
dec
cmp
loope
inc
adc
mov
les
inc
adc
sbb
adc
loop
ficoms
test
jns
lea
int3
dec
out
leave
sub
lret
adc
pop
pop
and
add
push
outsb
fs
push
dec
rorb
fisubs
jnp
sbb
or
xchg
rorb
sub
cmp
or
jle
lret
fidivrs
xchg
xchg
repnz
xchg
jp
xor
rcr
aad
pop
in
mov
cmc
inc
fisubs
movsb
mov
pop
mov
pop
into
jb
push
sarl
scas
out
cmp
sub
addr16
sub
pop
mov
xchg
out
std
andl
push
mov
and
fisubrs
les
fisubrs
cwtl
stos
lock
or
mov
inc
lds
ret
lea
ficoms
pop
imul
cmp
and
in
ficoms
leave
ja
sub
xor
out
add
pop
aam
les
cwtl
stos
lock
mov
inc
adc
or
into
pop
adc
xchg
imul
mov
mov
nop
out
ljmp
shr
add
fimull
mov
pop
leave
xchg
sbb
jmp
int
ret
pushf
loopne
aaa
mov
stos
xorb
inc
cli
adc
insl
out
mov
and
stos
test
sub
jbe
fidivs
daa
xor
fnsave
push
cmp
fnstcw
std
and
dec
loopne
pop
mov
dec
mov
je
fsubp
loop
inc
mov
sub
cmp
pop
jg
je
lret
popf
mov
repz
shlb
or
bnd
push
nop
loope
fisubrs
sbb
mov
fimuls
out
or
shll
xchg
stos
in
mov
fcmovnu
scas
rclb
dec
fmulp
or
dec
push
jno
arpl
fisubs
mov
push
cmc
and
inc
push
aas
cmp
push
ficompl
lret
inc
int3
dec
fiadds
andb
pop
out
rol
movsb
adc
fdivp
sahf
sbb
sbb
lods
jae
or
inc
repnz
ficomps
sbb
pop
ret
shll
xchg
daa
mov
popf
dec
mov
inc
into
mov
call
rclb
cmp
fsts
jne
fimuls
ret
orl
xchg
fmuls
stc
xor
jo
lds
mov
ffree
and
jbe
jae
push
push
jmp
mov
es
lods
subl
iret
in
xchg
ja
and
dec
jae
jb
fcom
mov
xchg
cmp
ss
imul
cmp
add
js
movsb
out
pop
fidivs
les
mov
test
cmp
insb
cs
idivl
jns
mov
dec
inc
and
loop
int3
movsb
mov
add
dec
std
into
clc
mov
and
cmpsb
je
dec
jp
xchg
and
lcall
mov
sbb
or
clc
fisubrs
or
stc
popl
jnp
lds
cmpsb
ret
jle
test
inc
adc
in
and
xchg
sbb
lcall
inc
stc
pop
lahf
fisubs
mov
lods
sub
jl
and
jle
aad
add
filds
push
jle
mov
jg
or
sarl
inc
sub
pop
fs
mov
jl
insl
add
add
mov
into
pop
pushf
std
aaa
adc
repnz
ret
nop
sbb
dec
lcall
loopne
aas
inc
ljmp
rcrb
add
jg
cmp
stc
mov
pusha
ds
and
pop
xchg
dec
rcr
hlt
mov
or
sub
push
cs
enter
popa
dec
ja
dec
fmull
mov
xchg
imul
lahf
sub
out
sub
sub
push
stos
xchg
fiadds
pop
push
rcrl
mov
adc
pushf
cmpsb
mov
fidivs
imul
dec
lds
fwait
mov
scas
fsubp
insl
ret
out
fsubrp
movsl
lret
mov
fidivrs
jbe
outsl
arpl
fs
inc
test
mov
cmpsl
stc
fidivrs
std
mov
xor
xchg
sarb
data16
nop
scas
mov
aas
xor
xor
xchg
push
aad
arpl
sbb
les
les
or
fiadds
push
mov
test
mov
lret
dec
cmp
bound
inc
mov
call
mov
sahf
in
sbb
adc
ds
and
push
sub
std
push
in
ffreep
or
loopne
cld
mov
std
lahf
fisubrs
jne
add
xor
sbb
push
jnp
nop
movsb
dec
cld
push
sbb
dec
pop
nop
fmulp
or
je
sub
iret
fimuls
xchg
fldcw
mov
addr16
shlb
outsb
pop
fcompl
outsb
xor
aas
ds
ret
int3
sbb
fisubrs
pop
enter
pop
fidivs
mov
out
adc
cmp
mov
mov
mov
outsl
cld
mov
jbe
sub
cmp
xchg
jo
or
push
repz
lret
push
adc
ficomps
nop
movsl
inc
fldt
fisubrs
adc
das
icebp
std
pop
in
adc
aad
fiadds
lret
cwtl
outsb
test
loope
mov
pop
fimuls
or
rcl
pop
loope
ss
inc
mov
or
lods
push
xor
xor
pmaxub
fimull
or
pusha
aaa
out
stc
push
sub
cmp
jo
fisubrs
ss
pop
mov
in
xchg
or
stos
xor
cltd
cmpsb
or
pop
cmp
pop
fisubrs
cmpsl
jp
cmc
fiadds
sti
sarl
jbe
cmp
push
into
adc
das
inc
faddp
shld
sbb
jge
outsl
popf
jg
add
fdivrs
add
mov
push
mov
orl
fucomi
jae
adc
fimuls
je
sbbl
fidivs
mov
add
lcall
add
shl
std
pushf
pop
cmp
jnp
cmp
repnz
dec
jle
pop
mov
aad
mov
jb
fdivrp
push
inc
or
push
jle
jle
data16
lds
sub
jbe
mov
ja
test
pop
ret
ljmp
add
sub
add
pop
fidivs
orl
sbb
frstor
xchg
lret
fdivrp
adc
addr16
xor
test
sbb
adc
aaa
mov
mov
popf
add
fistpll
mov
inc
test
dec
lods
inc
shl
mov
leave
notb
std
inc
ficoml
inc
ljmp
push
xchg
ret
loop
dec
mov
imul
sub
pop
into
adcb
mov
test
out
aaa
sub
lock
lcall
xlat
and
sub
xchg
into
ret
sub
fnsave
movsb
divb
into
sbb
jmp
jle
out
dec
rcrb
inc
cmp
add
adc
mov
pop
add
jge
fisttpll
sbb
nop
mov
jg
testb
jbe
sub
cmp
mov
iret
ficomps
shlb
fsubl
repnz
out
fcmovnb
cmp
mov
insl
lcall
test
pop
or
fstl
inc
popf
fisubrl
cltd
sub
jecxz
in
cli
aaa
xlat
sub
cmp
adc
fidivrs
lret
pusha
inc
jge
inc
mov
lock
jmp
fidivl
into
cmpsl
sti
int3
cmpsb
ljmp
fsubrp
adc
hlt
mov
cmp
out
gs
in
fs
xorb
sbb
dec
adc
jno
inc
mov
jge
nop
xchg
cs
test
icebp
lods
adc
adc
adc
jbe
push
inc
imul
fimuls
lea
out
out
mov
lret
inc
pusha
lret
push
ficoms
add
ficomps
cmp
mov
add
in
mov
and
push
aaa
pushf
pop
rclb
sub
push
or
mov
lret
mov
shl
imul
aad
sbb
pop
out
and
xor
add
les
popa
mov
sbb
xchg
inc
cmp
imul
mov
ficomps
mov
mov
mov
lret
filds
and
fdivp
lods
pop
push
fisubs
imull
fiadds
xlat
mov
sbb
add
fcmovnu
imul
dec
fisubs
divb
jno
in
jle
push
leave
mov
pop
sub
add
mov
add
scas
mov
cmc
shlb
adc
dec
inc
into
sbb
dec
mov
pop
subl
fimuls
shll
sbb
pop
into
xor
insb
fiadds
add
scas
enter
xchg
push
xchg
jno
jns
std
cld
enter
jb
std
loop
shlb
in
fadds
xchg
push
test
push
shr
test
mov
fmulp
cmp
fisubrs
ffreep
ficoms
mov
imul
mov
pand
cld
test
push
mov
fdivrp
mov
fisubs
mov
jle
mov
ret
jo
std
jle
push
jmp
loop
inc
popa
push
arpl
in
mov
data16
ficomps
decb
inc
mov
jno
fidivrs
pop
mov
fidivrs
and
arpl
outsb
std
mov
ror
and
inc
ficoms
sbb
jb
scas
sub
inc
shrl
jo
out
xchg
fimuls
pop
xor
mov
jae
mov
inc
fidivrs
mov
fwait
popf
sahf
and
shlb
das
ficomps
cwtl
xlat
adc
bound
fiadds
sarl
hlt
les
lcall
fst
pushf
test
repz
jne
and
dec
sbb
mov
pop
into
xchg
or
sbb
vpsubb
and
mov
insl
or
xor
push
popf
sub
fdivrp
cs
add
fs
out
mov
ficomps
int
pop
scas
add
ja
sahf
cmp
fidivrs
xor
sti
fisubrs
cltd
push
xor
enter
and
inc
pop
mov
das
mov
mov
add
in
icebp
mov
ret
push
fidivs
adc
fisubs
rolb
fimuls
mov
sbb
mov
ds
jbe
jmp
fisubs
in
pusha
fidivrs
push
xchg
dec
jge
psubd
shlb
in
je
into
pop
xor
cs
inc
aaa
testb
ficoms
dec
adc
cmpsb
push
ljmp
fisttps
inc
ret
aam
jg
aaa
iret
jae
sbb
xor
cs
cmc
fidivrs
lcall
fisubs
xor
movsl
scas
pop
and
movsb
scas
push
jge
std
cmp
push
mov
pusha
ret
dec
jg
ds
loopew
mov
fisubrl
dec
jle
fistl
hlt
popa
and
test
dec
sbb
fdivp
bound
bnd
mov
mov
aam
adc
test
inc
xor
fldt
fsubl
call
aas
cmp
fs
add
lret
jle
mov
xchg
mov
hlt
aad
std
int3
dec
push
lods
test
inc
adc
stc
in
rclb
add
jmp
cwtl
ffreep
fidivs
mov
aad
push
nop
jmp
imul
test
mov
nop
fisubrs
inc
push
imul
or
into
cmpsl
xor
or
arpl
push
push
ja
iret
mov
xor
lods
fmulp
ljmp
push
add
adc
pop
xor
sub
xchg
roll
clc
js
mov
sub
push
fisubs
or
aas
data16
xchg
xchg
dec
mov
jmp
xor
fidivs
or
sbb
out
fisubs
jne
inc
loopne
jle
mov
notl
push
fdivrp
in
mov
loopne
stos
out
cmp
xchg
sub
addr16
push
dec
fmuls
mov
mov
sub
jmp
popa
mov
mov
sbb
mov
adc
in
push
dec
add
mov
or
jmp
cmp
js
scas
mov
add
faddp
imul
fisubs
ja
cltd
notl
sbb
xor
mov
pop
leave
dec
std
adc
xor
lds
sbb
push
cmc
or
subb
xchg
std
xchg
cwtl
mov
adc
ficoms
ja,pt
int3
sbb
mov
testl
stos
xchg
push
fiadds
out
inc
int3
xchg
rcrl
xchg
andb
gs
inc
insb
fidivrs
sarb
scas
fidivrs
sub
pop
popf
jmp
enter
xor
fmulp
adc
pop
mov
jecxz
adc
ljmp
xchg
frstor
cmp
int3
jno
outsb
sarb
xchg
mov
inc
jnp
mov
test
repnz
sub
cmp
je
emms
fisubrs
push
jns
sti
inc
mov
movsl
mov
fsubs
sub
frstor
test
jo
fisubrs
push
mov
ret
fidivrs
loop
or
popf
xor
or
into
popf
jno
daa
bound
jae
lret
adcl
push
inc
mov
mov
xchg
std
and
fisubs
add
adc
ja
test
aaa
fisubs
aas
xchg
push
add
pop
loop
jae
mov
idivl
popf
mov
push
cmpsb
fistpl
je
das
and
dec
cld
adc
xchg
cmp
fimuls
mov
mov
cmp
jmp
shlb
je
jle
icebp
jmp
sbb
fnstsw
jo
mov
add
movsl
sbb
jg
xchg
ret
and
stos
cmc
or
or
xchg
ficoms
or
call
sbb
xchg
stos
pop
shr
cmpb
aaa
xlat
aas
sub
or
ficoms
dec
ja
jp
ficomps
and
mov
sti
inc
push
es
rclb
fidivs
cwtl
push
in
jo
lahf
fidivrs
sbb
pop
push
es
fidivrs
ret
mov
dec
sbb
fidivs
cmpsl
cli
adc
jo
jns
nop
mov
mov
fisttpll
xchg
stc
sbb
pushf
jl
or
dec
clc
out
adc
dec
adc
loopne
ds
jle
jbe
test
or
out
fstpt
adc
incl
push
ret
fadd
mov
jnp
xchg
clc
dec
pop
and
lcall
fbstp
fld
jge
mov
mov
fidivrs
mov
sub
in
lahf
jmp
inc
lock
fisubs
sub
mov
dec
movsb
xchg
jge
fisubs
push
dec
adc
cld
push
jg
rcrb
mov
dec
pop
int
jae
sub
xchg
adc
mov
leave
jbe
dec
imul
or
sbb
repnz
das
push
ret
dec
xor
fidivs
or
push
imul
push
xchg
outsb
fisubrs
xlat
jge
dec
mov
or
fisubs
pusha
nop
repnz
inc
sbb
and
sub
hlt
pop
and
int3
out
ret
sbb
mov
ficomps
mov
addr16
dec
mov
aad
xchg
inc
cwtl
iret
std
in
pop
scas
rcr
in
sub
push
mov
pushw
push
mov
mov
nop
mov
sbb
out
fsubl
mov
jb
mov
inc
arpl
xor
fidivrs
fisttps
fidivs
pop
lret
xchg
jl
pop
fmulp
loop
add
jo
lret
popf
fmulp
pop
ret
mov
cmpsl
push
pop
faddp
mov
xor
clc
pushf
outsb
ficomps
rcrb
fidivrs
and
test
mov
add
ja
xchg
subl
pop
pop
aad
ror
jecxz
cs
sbb
pop
or
pop
push
inc
xchg
mov
test
sahf
es
lret
push
jle
xchg
pop
pop
cmp
fimuls
mov
in
xchg
and
or
inc
mov
and
jecxz
push
inc
es
fisubs
pop
fwait
sahf
push
sbbb
aam
les
into
add
ficomps
push
pop
xchg
scas
xchg
xchg
mov
ret
mov
stc
pop
lock
push
divl
sub
mov
pop
dec
insl
int
cmpsb
push
cwtl
and
jno
or
jnp
inc
mov
ficomps
subb
adc
enter
push
fisubs
call
push
pop
rol
lods
daa
nop
ficoms
mov
cmp
cmp
scas
shlb
in
xchg
pop
sub
cmp
enter
xor
jecxz
adc
outsl
sbb
fiadds
dec
xchg
test
inc
mov
cld
mov
jp
sub
ficoms
mov
loop
add
dec
fsubrp
popf
inc
dec
sub
jmp
lds
dec
mov
push
mov
movlps
pop
outsl
push
mov
or
mov
jmp
repz
into
mov
sub
outsb
repnz
cmp
or
pop
adc
mov
mov
xchg
dec
xchg
in
stos
in
fsubl
aad
fidivs
mov
cmpsb
fidivs
xchg
xor
sahf
mov
lods
fistps
rolb
cmc
scas
repz
or
lret
fidivrs
pop
inc
push
sbb
movb
pop
movsl
faddp
dec
cmpb
xchg
faddp
inc
cmp
outsb
into
xchg
add
xchg
aad
jge
sbb
push
jns
add
pushf
ffreep
das
ficomps
adc
sbbl
dec
cmp
adc
mov
mov
ja
sbb
pop
out
adc
dec
dec
into
sbb
xchg
aas
push
pop
aam
clc
nop
cmp
and
adc
push
jbe
cmp
mov
fisubs
enter
sarb
ds
loopne
sub
push
pop
in
fnsave
add
cmpsl
pop
movsb
sbb
mov
xchg
lahf
xchg
dec
repz
mov
jmp
ficomps
mov
mov
sub
imul
outsl
idivl
mov
add
cmp
inc
pop
les
test
mov
sbb
fucompp
jns
mov
in
out
mov
xor
jle
mov
fnstenv
pushfw
and
leave
jmp
sbb
stos
imul
lods
mov
or
add
aaa
jle
xchg
into
js
mov
int
jmp
fisubrs
cmpl
add
std
cmpsb
pop
test
jp
test
ja
push
or
inc
sbb
mov
mov
push
rclb
add
xorb
sbb
mov
sbb
fsubr
inc
out
or
jge
xchg
or
call
ret
jg
jbe
fsubp
xlat
mov
int
ds
fisubrs
xchg
imul
fwait
or
jle
inc
and
jp
mov
inc
jbe
lods
sub
scas
ficomps
lods
ret
repz
sbb
mov
imul
aas
add
cltd
add
into
mov
push
lock
fidivrs
mov
cmc
push
insb
pop
pusha
mov
xchg
or
add
inc
xchg
hlt
sub
and
xchg
pop
ficomps
rolb
sahf
popa
sarl
dec
inc
cltd
mov
out
or
out
outsl
add
jb
lret
mov
sti
mov
pop
inc
push
dec
ficomps
xchg
les
or
imul
cmp
in
jmp
aas
je
aad
fimuls
fiadds
je
out
popf
adcb
hlt
shrb
fidivrs
rcrl
jmp
mov
cmp
xor
fisubrs
lods
nop
pop
or
xchg
nop
ficoms
mov
mov
shll
xorl
adc
add
mov
testl
mov
test
cmp
mov
cmp
mov
into
out
shll
xchg
fisubs
and
push
loopne
jle
xor
push
sbbl
fisubrs
nop
and
jae
lret
fimuls
test
daa
stos
mov
jnp
cld
xor
test
fisubrs
aas
xor
inc
cwtl
xor
imul
or
movsb
ret
lods
pushf
fwait
dec
cmp
fsubrp
into
mov
jo
xor
add
fisubrs
es
in
mov
out
and
decb
pop
or
cmpsb
test
mov
and
test
ficomps
call
out
sahf
xchg
lods
imul
dec
std
fs
mov
fisubrs
outsl
inc
and
popa
repnz
out
sub
lds
stos
pushf
enter
jle
jmp
test
sub
in
test
rorl
dec
icebp
ss
fstl
push
call
shll
das
dec
rcrl
mov
mov
fsubrp
push
rorb
shll
fidivs
scas
jne
outsl
jle
testl
mov
mov
mov
dec
sbb
into
inc
mov
adc
std
ficomps
vpshuflw
jl
mov
jmp
sahf
sub
push
push
cmp
pop
xlat
stos
clc
jge
mov
jno
fimuls
pop
pushf
int
lods
adc
jmp
cmc
into
sti
mov
pop
cld
ficoms
clc
sbb
push
inc
mov
fisubs
push
ficomps
jmp
loope
or
es
lea
xor
scas
rolb
std
mov
ret
testl
jp
jl
adc
in
dec
leave
mov
aaa
mov
into
cmp
ret
not
jp
mov
and
adc
call
mov
mov
leave
push
fisubs
repnz
movsl
or
jge
lret
and
dec
cmpsb
push
jno
jl
inc
fiadds
xchg
cmc
fcomp
int
fidivl
adc
jbe
sbb
lea
sbb
push
mov
xchg
push
mov
out
gs
iret
test
inc
dec
xor
add
add
faddp
stos
js
out
fstps
jle
mov
pushl
fsubrp
dec
cli
call
fidivrs
mov
sbb
ret
dec
test
mov
out
mov
xor
mov
or
fnstenv
and
and
les
fisubrs
dec
cmp
dec
inc
adc
negb
out
inc
push
jns
lahf
dec
aad
pushf
sarl
or
sti
jnp
pop
dec
dec
movsb
mov
cmpsb
gs
dec
test
cmpsl
mov
ficoms
xor
cld
ja
loop
push
imul
test
jg
aaa
in
fadds
push
pop
test
std
lcall
mov
fidivs
outsl
loope
push
int
jbe
fsubrs
mov
ret
repnz
dec
rcrl
icebp
mov
lea
push
repnz
scas
push
ret
push
xor
sbb
fimuls
flds
or
or
cltd
mov
ret
mov
iret
xlat
scas
pop
in
cmp
popf
mov
pusha
fsubl
rolb
shlb
xchg
test
int3
inc
jle
and
ljmp
fdivp
cmc
or
icebp
fwait
ret
mov
ficomps
xor
rcr
cli
mov
fmulp
add
push
lret
or
outsl
nop
or
enter
lcall
adc
mov
arpl
inc
xchg
sub
inc
out
fimuls
lret
les
inc
ds
test
fs
cwtl
pop
ficomps
aam
cmpsl
xchg
jo
repz
ret
xlat
rol
mov
sbb
sub
adc
push
fidivs
mov
push
jmp
adc
xchg
mov
sbb
mov
cmp
fidivrs
enter
cli
jne
lret
clc
fidivrs
in
sysret
outsl
mov
and
les
subl
enter
enter
fidivs
adc
fidivrl
push
dec
std
test
stos
cmpsl
jg
ficomps
dec
push
pop
pop
aam
into
test
xchg
lods
add
mov
add
push
pushf
movsb
clc
and
push
sahf
outsb
in
push
push
ja
cmp
ss
movsb
mov
lcall
mov
insb
and
fidivrs
xchg
cmpsb
mov
les
arpl
sbb
cmp
inc
test
ficomps
cmpsl
adc
xchg
dec
jae
out
mov
fidivrs
daa
and
or
movzbl
cmp
das
rcr
aad
jecxz
xchg
into
dec
fsubp
jmp
out
xchg
nop
xor
iret
inc
insl
ret
sub
bound
xor
icebp
out
mov
popf
cmp
jbe
add
sub
lret
push
mov
ss
shl
stc
sub
fisubs
roll
cmovp
std
outsl
mov
int
fsubrl
mov
mov
shr
or
xchg
sub
jo
sbb
iret
push
es
cltd
ficomps
mov
into
inc
xchg
dec
or
imul
fcmovu
or
bound
scas
pop
daa
mov
fs
outsb
std
cmc
out
ficomps
rorl
int3
cmp
push
push
into
inc
jb
mov
stc
movsl
inc
pop
lods
and
je
out
push
mov
sahf
roll
lods
sti
and
shl
sbb
xchg
dec
inc
mov
or
ficomps
test
sbb
das
test
ficoms
inc
lret
jg
mov
js
fidivs
repz
xor
call
psrld
out
cmp
pop
dec
xor
mov
fsubrp
sbb
repz
or
je
push
push
fimuls
fwait
rcll
fimuls
jl
sbb
add
ficoms
xchg
fwait
inc
inc
ljmp
imul
rorl
sbb
cmp
in
pop
jmp
out
out
xchg
loop
xor
sti
lods
ret
ror
imul
cmp
dec
adc
ret
pop
sub
xor
repnz
adc
les
ja
inc
lods
lret
mov
add
mov
pop
fimuls
testb
sub
and
fidivrs
push
cmpsl
lods
xchg
fimuls
push
xor
fsubrp
outsl
or
cmpb
pop
add
jnp
fsubrp
jns
inc
cmp
cmpsb
xchg
push
cs
and
std
ss
push
into
addr16
pop
mov
std
jl
push
or
clc
fstps
subb
lock
xor
cmpb
out
and
pop
lods
and
push
ds
in
out
jg
movsl
jnp
sbb
cmp
sub
data16
jae
mov
xchg
pop
lods
fidivs
mov
cmp
out
push
ret
mov
std
ljmp
lret
shlb
mov
and
pop
cltd
inc
ficomps
jecxz
aam
xlat
inc
aas
fcmovnu
cmp
jns
pusha
loop
into
inc
clc
ret
mov
cltd
dec
xchg
add
hlt
jae
push
int3
fldl
and
rcrb
push
clc
pop
dec
pushf
fiadds
dec
mov
and
mov
shll
scas
push
push
push
sbb
cltd
cwtl
mov
clc
nop
mov
rcr
fcoml
mov
adc
mov
push
jecxz
or
scas
rcrl
lea
imul
pop
sub
daa
push
add
nop
inc
mov
cmpsl
mov
rorb
clc
call
ds
sub
xchg
hlt
or
gs
fisttpll
lock
push
xor
xchg
jmp
aad
scas
sub
xchg
fmulp
jne
inc
mov
sarw
sub
inc
or
in
repnz
outsb
and
dec
dec
lret
fdivrl
add
or
mov
mov
ficoms
mov
int
mov
hlt
adc
out
sbb
push
pushf
test
stos
rolb
cld
jl
lret
push
aam
push
jb
mov
xchg
mov
call
enter
dec
test
jne
cvtdq2ps
leave
lret
pop
sub
cli
pop
xor
push
inc
test
xchg
ficomps
hlt
add
ficomps
test
xchg
repz
clc
lds
shlb
ficomps
jmp
mov
cltd
mov
mov
or
fcmovbe
fwait
sub
dec
or
cmp
insb
xor
fiaddl
xchg
fisubrs
and
loope
loopne
push
inc
enter
xor
in
shrl
or
inc
fwait
testb
fdivp
or
pop
fidivrs
dec
adc
dec
scas
jnp
outsb
and
das
inc
test
push
push
mov
sbb
scas
mov
sbb
and
std
stos
jne
in
ret
pop
mov
pop
mov
sub
shl
fistpl
movl
sbb
fdivrp
push
cmp
pop
lcall
fidivrs
lahf
xor
fdivrp
dec
or
push
jno
cld
push
inc
pop
ror
js
aas
bound
dec
cmc
call
sti
ficomps
fs
cmp
or
or
call
push
sbbb
add
cmp
xchg
fldt
int3
jae
pop
ret
into
inc
mov
cwtl
mov
dec
inc
cmpsl
test
mov
out
adc
clc
cwtl
mov
testb
aas
mov
inc
dec
ficomps
or
mov
std
sbb
enter
ds
add
xchg
sub
ss
adc
je
adc
cmp
xchg
or
sbb
lret
mov
add
xchg
and
ljmp
cs
or
pop
fdivs
in
pushf
fisubrs
mov
xchg
fidivrs
cs
lds
pop
inc
xor
fiadds
jae
insb
pop
lret
fisubrs
mov
pop
mov
xchg
shrb
mov
adc
lds
fisubs
xor
mov
and
std
pop
jle
lock
mov
xchg
mov
iret
push
pop
jp
ljmp
lods
mov
ds
fimuls
nop
cs
fimuls
dec
xchg
mov
fimuls
and
cmpsb
lahf
lret
inc
fiadds
imull
mov
aaa
or
lret
fidivrs
insb
push
cmpsb
imul
out
sbb
inc
fdivp
add
je
int3
or
pop
nop
mov
jge
scas
ficoms
popa
inc
mov
jg
mov
loope
bound
int
outsl
cli
sar
cmp
adc
std
push
mov
push
cmc
ficompl
and
mov
out
pushf
sahf
aas
sbbl
add
xlat
mov
adc
xor
ffree
and
ficomps
xchg
add
dec
icebp
sbb
stos
inc
sti
inc
cltd
hlt
imul
xlat
lds
cmp
jbe
pusha
or
rolb
loope
mov
mov
xchg
add
fsubp
or
adc
sbb
sbb
std
dec
daa
xor
mov
xchg
int3
mov
jne
in
lcall
fiadds
dec
push
xor
push
jbe
ljmp
mov
jns
inc
ss
fsubp
loope
and
arpl
std
mov
push
xchg
enter
sbb
lea
xlat
test
cmc
adc
xchg
rcrl
push
cwtl
sahf
add
add
shrb
pop
lret
ljmp
push
ficoms
imul
add
jne
scas
mov
andl
fisubrs
mov
sbb
imul
xor
loop
push
ficoms
xor
das
push
fisubs
xor
add
cld
std
mov
cmc
loope
cli
cpuid
mov
loopne
and
inc
pop
cmpsb
fidivrs
lea
pop
call
fidivs
insl
pop
mov
fidivrs
mov
fsubrp
lcall
mov
cmc
dec
sahf
inc
ljmp
aam
pusha
jno
sub
jae
add
mov
push
pop
push
lds
addr16
xchg
fwait
sub
shr
pop
lock
xor
ficomps
movsb
inc
mov
mov
mov
cli
mov
push
pop
push
flds
out
add
pop
sbb
or
lcall
push
mov
les
insl
out
jmp
pop
shll
andl
or
sbbb
push
cld
pop
scas
lret
xchg
iret
jbe
dec
loopne
enter
xor
mov
lds
jle
push
or
test
fidivs
icebp
sub
aaa
inc
sti
push
ficoml
mov
jbe
movl
mov
popa
xor
loop
xor
das
ror
and
fiadds
outsl
fcompl
into
fnstcw
mov
mov
iret
pop
ficoms
sub
cwtl
sbb
ror
xor
call
push
cltd
xchg
xchg
bound
fdivl
add
or
imul
sbbl
mov
fcmovne
jle
fcmovbe
cmc
das
loope
rorl
cmpsl
test
xlat
pop
xorb
stos
mov
movsl
adcl
and
xchg
arpl
mov
rol
sbb
es
fidivs
ja
inc
out
int
mov
out
mov
fdivp
stc
mov
mov
das
cld
add
nop
cmpsb
push
je
test
mov
mov
lea
das
mov
call
pop
fs
cmp
jne
inc
sarb
mov
arpl
lds
ds
xor
lods
mov
sti
fisubs
pop
xchg
push
fidivs
mov
fldcw
std
lods
ljmp
or
sub
pop
je
cltd
ja
cmpsb
dec
ficomps
pop
pop
mov
xchg
es
arpl
std
out
pushf
inc
outsb
fisubs
xor
jle
add
fmulp
mov
cltd
ret
aad
push
imul
mov
in
stos
into
icebp
adc
jmp
adc
adc
aaa
jns
scas
in
inc
sub
gs
mov
inc
jecxz
aaa
jno
fld
int
fisubs
ja
jp
xchg
pop
lock
into
dec
sub
fadds
jnp
into
ljmp
or
pop
lock
xchg
sbbb
lods
hlt
fisubs
arpl
mov
rol
xchg
cmp
sbb
adc
push
dec
dec
lahf
lods
jmp
andb
ret
pop
loopne
movsl
push
add
lock
pop
int3
mov
inc
cli
pop
fsubp
pop
movsl
sbb
leave
xor
fisubrs
add
repnz
ficomps
pop
cli
sub
mov
fmulp
sub
fidivrs
ret
shlb
jle
xchg
pop
pushf
mov
fiadds
and
cltd
xchg
jecxz
xlat
jne
cwtl
ficomps
cmp
xchg
lea
fsubp
xor
das
adc
inc
ss
jmp
rclb
pop
mov
aam
int3
pop
cmp
cli
and
repnz
sbb
popa
ror
pop
jne
sbb
inc
fidivrs
sbb
in
aaa
repz
xor
sub
ficompl
int
push
sbb
mov
fiadds
insb
divb
push
fisubrs
bound
mov
push
arpl
cmp
push
scas
sbb
in
iret
push
jmp
out
xor
mov
ficomps
cmp
neg
out
pop
in
ss
cmpsl
loop
xchg
inc
mov
test
jp
mov
test
fimuls
adcl
mov
mov
xor
inc
aad
push
fidivs
fstl
mov
push
xchg
push
inc
test
stos
mov
xor
into
fisubrs
cwtl
fcmovne
fisubrs
gs
pop
inc
xor
mov
mov
test
pushl
sarl
fucom
fists
dec
sub
inc
dec
flds
fdivp
stos
adc
sahf
mov
fidivs
push
jle
xor
aad
xchg
fisubs
cmp
into
shl
imul
jo
adc
aam
lcall
or
fidivrl
cmpl
inc
pusha
xor
inc
mov
dec
adc
ss
fnstsw
fidivrs
push
xor
sbb
mov
es
faddp
repz
stos
cli
xchg
xor
push
out
adc
or
int3
sbb
loopne
mov
pusha
ja
fiadds
push
lea
xchg
jge
mov
enter
dec
xor
xchg
ds
insl
or
push
mov
sbb
xor
popf
fstpl
xchg
cltd
cmp
mov
outsb
enter
dec
mov
sbb
mov
xchg
sub
fsubp
fldt
ds
aad
cli
push
push
sub
cmpsl
mov
mov
jecxz
hlt
stos
int
sub
ja
fidivs
idivb
jne
mov
inc
sub
in
daa
into
fcompl
mov
rorl
scas
push
lods
jno
jg
cld
pop
pop
add
mov
sbb
cmc
aas
mov
sarl
push
cmp
mov
into
jmp
inc
xor
lcall
negb
xlat
fdivl
or
es
mov
mov
aaa
mov
inc
mov
ljmp
add
scas
sbb
repnz
das
out
xchg
mov
into
outsb
inc
dec
dec
inc
fsubrp
test
ja
or
mov
push
xor
shr
fisubs
mov
mov
ficomps
dec
dec
jae
push
jle
aaa
xorb
fisubrs
rol
push
cli
cltd
lret
and
mov
ja
adc
xchg
ficoms
inc
imul
sub
or
mov
ja
fimull
shrl
outsl
xchg
xlat
int
cmp
push
pop
xor
int3
pop
fs
add
enter
cltd
sar
or
sbb
mov
shll
mov
xchg
jl
cmp
push
inc
mov
jns
in
roll
pop
iret
mov
push
cmp
std
inc
pop
in
flds
jne
and
inc
fimuls
pop
dec
fcmovnu
inc
pop
lods
in
jle
cmp
jno
out
rcrl
xchg
fstps
call
jnp
movsl
adc
das
mov
pop
mov
rcr
cld
ret
xor
xchg
mov
fidivs
push
jecxz
lret
aad
mov
xor
push
mov
or
cli
jge
jo
push
push
fidivrs
sub
stc
sbb
fiaddl
int
jle
jle
and
cmp
inc
addr16
movsb
mov
sbb
cmp
pushf
leave
test
das
repnz
scas
xor
sbb
repnz
stos
lcall
sub
fidivs
xlat
xor
fiadds
cmpsl
pusha
push
fiadds
sahf
mov
xchg
clc
fdivrp
hlt
iret
pop
sbb
int3
stos
icebp
ljmp
jns
jo
jl
pop
dec
les
mov
add
in
int3
xchg
roll
add
inc
fiadds
repnz
adc
jge
imul
nop
or
into
popa
mov
cmpsl
ss
ficoms
mov
xchg
push
lret
adc
scas
sub
into
fimuls
es
in
inc
fidivs
add
inc
fisubs
adc
negb
movsl
mov
push
dec
ds
and
push
fisubrs
or
mov
mov
ret
mov
repz
jmp
xchg
or
jle
loopne
xchg
sbb
mov
push
jo
push
nop
test
or
cli
inc
mov
scas
jmp
bound
andl
inc
ret
fidivrs
cmp
xor
sbb
mov
clc
pop
fdiv
adc
loopne
push
dec
js
pushf
stos
sub
ficomps
fmuls
push
aam
das
ljmp
pop
bound
call
ficomps
fwait
jle
aaa
lods
in
pop
mov
mov
push
shl
and
mov
push
mov
pop
pop
mov
loop
cwtl
inc
adc
sbb
jne
ds
fmulp
jns
dec
std
push
imul
ljmp
pop
pusha
fldenv
mov
fsubrp
in
aad
in
out
cmp
hlt
jmp
jne
stc
daa
push
ficoms
or
std
subb
xchg
inc
dec
cwtl
test
adc
add
loopne
inc
enter
sbb
push
cmp
iret
faddp
pop
insl
cmp
mov
shrl
mov
scas
cmc
icebp
lahf
add
fidivrs
mov
cltd
add
dec
cli
sbb
in
in
shlb
mov
not
push
dec
rorb
psubusb
in
dec
push
fldt
repnz
mov
mov
cmpsb
pushf
fiaddl
ficomps
mov
jo
es
ficoms
int
mov
xor
pop
ds
dec
push
std
pop
inc
xor
int3
int
or
push
jno
xchg
out
pop
pop
mov
in
lods
mov
into
xchg
cmc
outsl
ficomps
fwait
ror
mov
xor
push
pop
push
xor
mov
lds
movsl
inc
movsb
hlt
fiadds
call
adc
sub
sub
mov
add
xorl
inc
inc
sub
scas
lret
xor
xor
mov
das
or
mov
fisubs
dec
bnd
mov
mov
loop
call
rolb
ss
std
sbb
mov
add
mov
jbe
xchg
sbb
cmpsb
stos
int
and
call
ficoms
or
xchg
adc
push
ljmp
mov
add
stc
movl
mov
xchg
imul
mov
lahf
jno
xor
mov
sbb
into
cmpsb
mov
cmpsl
push
sub
xor
dec
in
repnz
cld
mov
inc
lret
dec
adc
jmp
jae
xor
mov
lcall
and
fsubp
aaa
fstpt
push
int3
dec
fidivs
subl
int
ds
filds
inc
push
pop
cs
dec
pop
jnp
push
fidivs
cmpsb
pop
imul
fcmovb
fld
jg
fmulp
shll
ficoms
mov
faddp
and
sub
insb
push
sbb
fsubrs
dec
mov
mov
push
test
inc
mov
ficoms
mov
cmp
sub
push
mov
rcrb
pop
sub
pop
or
outsl
fiadds
push
ret
fldt
int
mov
mov
inc
pop
es
test
or
leave
lret
jecxz
mov
sub
fisubrs
adc
or
inc
lods
pusha
mov
jae
and
enter
andb
gs
jecxz
dec
int3
push
fisubs
and
imul
or
sahf
fimuls
mov
xchg
test
xchg
or
sahf
ss
sub
out
ficomps
bound
outsl
xorb
aaa
out
inc
out
jle
adc
dec
or
mov
add
popf
lods
push
outsb
cld
push
pushl
fidivs
and
std
dec
adc
pop
mov
pop
cmp
mov
jnp
pop
fisubrs
dec
and
mov
shlb
mov
jmp
jge
sub
into
ficomps
test
lahf
aas
dec
ficomps
xchg
and
aad
cmp
sbb
jbe
dec
neg
pop
inc
cmc
je
mov
test
push
arpl
hlt
lret
shlb
pop
cltd
cwtl
fidivrs
dec
int
ficomps
loop
fldl
jmp
xor
mov
pop
adc
fs
cltd
es
push
dec
pop
xchg
stos
faddl
lcall
in
ds
jge
sbb
aaa
iret
add
push
jp
fimuls
addr16
push
movsl
sbb
movsb
cmpb
inc
in
mov
xor
push
ret
push
out
fisubrs
mov
cwtl
scas
outsl
es
push
orb
mov
repz
inc
call
add
mov
stos
fiadds
out
inc
or
push
rcrl
rcrl
nop
or
xchg
adc
xor
scas
arpl
call
sahf
sbb
ret
push
jecxz
fidivs
aad
dec
pop
push
inc
fiadds
add
xor
hlt
jle
mov
mov
ficoms
fsubrs
add
jecxz
js
shrl
sub
cmpsl
mov
mov
and
pop
xchg
mov
int3
insl
and
seto
outsl
cmp
push
outsb
fisubs
mov
pop
xchg
sub
addb
addr16
mov
dec
push
mov
cltd
mov
xchg
insl
xchg
sahf
in
sbb
sbb
xor
dec
daa
or
pop
test
pop
sbb
sub
in
jg
faddp
sarl
inc
cmp
fidivs
in
inc
ficomps
movsl
divb
popf
imul
mov
stc
es
loope
sbb
cli
and
pop
inc
iret
arpl
popf
xlat
add
push
jecxz
fcmovnu
and
stos
das
cmp
ja
into
je
xor
sbbl
inc
ficomps
fwait
jecxz
shlb
adc
clc
cmp
sub
inc
jle
cli
jne
jb
dec
test
xorl
mov
inc
push
lds
fmulp
fwait
or
push
out
push
cmp
xchg
test
iret
in
inc
mov
faddp
ljmp
sub
or
pop
inc
lahf
mov
jle
pop
inc
adc
xchg
sbb
sti
inc
add
mov
pop
sbb
jns
insl
rol
js
jmp
sub
fdivs
out
fidivs
rolb
mov
cmp
jne
iret
or
sbb
or
xorb
lahf
test
xchg
xchg
fisubs
adcb
jp
inc
sbb
pop
shrd
arpl
fimuls
fidivs
sbb
fwait
or
es
jnp
data16
xor
xor
sbb
dec
in
fbstp
inc
dec
aaa
sbb
in
jl
inc
mov
fisubs
and
lahf
or
xor
lock
out
aam
outsl
xor
inc
pop
ficomps
jge
adc
popa
push
inc
jmp
dec
jg
sub
fidivrs
int
arpl
sub
pop
adc
in
insl
lret
into
push
jg
aaa
push
jl
pushf
adc
add
jnp
sbb
in
cmp
fisubrs
inc
xlat
mov
jmp
aam
dec
cltd
jnp
std
out
jecxz
jo
shlb
cmp
inc
or
pusha
fiadds
jne
mov
xchg
xor
hlt
inc
sbb
idivl
sbb
pushf
shll
mov
sub
push
cmc
in
adc
jecxz
lret
push
xchg
dec
ss
stos
ljmp
nop
int3
sahf
fisubrs
jmp
ds
into
loopne
adc
cwtl
fwait
pop
push
dec
sub
jle
inc
sub
jbe
mov
pop
faddp
push
pop
add
jo
aaa
pop
enter
sbb
mov
test
cli
fsubrp
sub
and
negl
dec
aas
arpl
repnz
jg
mov
inc
aad
inc
push
xor
daa
adc
jno
push
movb
mov
test
jg
mov
xchg
pop
cmp
xor
or
mov
icebp
leave
xor
add
and
das
pop
dec
adc
sbb
jb
dec
mov
stos
sbb
outsl
mov
xchg
aam
adc
sub
aas
cs
test
sub
out
mov
sti
fwait
mov
xchg
in
ficomps
icebp
or
sub
in
push
cmp
cmp
fcompl
and
rcl
fimuls
jecxz
jg,pt
les
rcr
add
inc
rcrl
rcr
jbe
stos
add
std
lods
out
insb
nop
pop
ret
adc
mov
xor
loop
xchg
inc
mov
scas
mov
fidivrs
loopne
outsl
fdivp
enter
xor
adc
pusha
movsb
xor
pop
push
fs
jmp
and
cmp
add
jns
stos
outsb
or
hlt
nop
sti
fimuls
cmp
das
sar
pop
mov
sahf
adc
or
push
add
mov
mov
inc
mov
push
loop
mov
dec
dec
sbb
insb
mov
and
sbb
mov
fidivrs
xchg
dec
repz
ficoms
fsubl
fists
xor
arpl
or
fiadds
pop
lods
call
sub
sbb
scas
jge
mov
cmp
jmp
push
std
jb
test
inc
int3
mov
dec
fildl
lahf
in
lods
dec
fimuls
mov
add
test
inc
jb
xchg
loop
jmp
cld
sub
in
int3
and
std
adc
inc
dec
je
jl
call
shlb
inc
mov
lret
cmp
mov
and
nop
mov
stos
pusha
dec
inc
fiadds
mov
rcl
xchg
dec
enter
mov
aad
cmp
scas
fisubs
enter
pop
jmp
fidivs
mov
test
pop
loop
ljmp
dec
jl
push
aad
pop
aas
out
add
jbe
pop
mov
sbb
ss
jle
jbe
iret
lock
sbb
lret
pop
add
fsubp
inc
js
addr16
in
pop
dec
mov
outsb
cld
mov
mov
mov
sbb
daa
xlat
into
nop
jns
roll
mov
sub
mov
fisubrs
xchg
roll
sahf
fnstenv
sbb
xor
ret
and
pop
jp
mov
mov
fimuls
cmp
inc
fmulp
jge
push
cs
lahf
sub
jnp
add
dec
pop
mov
ficoms
test
or
mov
ret
or
pusha
xchg
sbb
gs
fstpl
int3
push
iret
dec
lahf
fidivs
push
xchg
fidivs
pop
and
fbld
mov
fidivrs
adcb
mov
hlt
jg
lret
fsubrs
cmp
sahf
xor
sti
fnstcw
fdivp
pop
jne
pushl
cld
mov
or
fisttpl
in
fdivp
negl
cmp
inc
push
mov
pop
cld
lods
cltd
or
mov
cld
xlat
sbb
xor
repnz
mov
pusha
cmpsl
das
dec
inc
mov
mov
test
hlt
sub
ja
cltd
daa
push
and
ficomps
sbb
popa
ret
aam
pop
ret
sbb
cld
push
fsub
xlat
neg
faddp
ja
lds
push
es
addr16
iret
ficompl
ficoms
sti
jmp
cmpb
nop
jle
dec
mulb
jl
mov
imul
pop
lret
arpl
mov
lret
adc
fimuls
sahf
xlat
add
pop
in
repnz
decl
clc
pop
addr16
cmpsl
les
push
push
lret
int
xor
movsl
fsubrs
or
lcall
jle
and
aam
jle
pop
js
das
xor
into
xchg
sbb
push
fidivrs
xchg
inc
and
inc
mov
xor
cli
movsl
imul
cmp
rcr
mov
call
mov
pop
mov
aaa
xor
jmp
or
mov
dec
fidivrs
adc
inc
mov
lret
outsb
fimuls
add
stos
xchg
push
jmp
sahf
sub
inc
inc
jl
cmpsb
mov
adc
pop
ret
dec
mov
mov
movsb
int3
dec
mov
fsubrp
iret
and
negb
add
push
fiadds
inc
pop
cli
push
pop
xor
dec
stos
inc
ret
addr16
ds
or
sbb
fsubrp
mov
xchg
outsl
pop
dec
ficomps
inc
mov
flds
mov
xchg
test
rorl
mov
daa
mov
orb
add
sti
inc
aaa
cmp
xchg
repz
pop
fsubp
es
dec
ret
mov
outsb
adc
xchg
jae
fiadds
lahf
cli
test
jmp
popl
mov
mov
cmp
ficoms
out
or
pop
and
xchg
mov
mov
popa
rorb
push
mov
outsl
inc
dec
push
ficoms
pushf
jne
pusha
loop
fimuls
mov
cmc
fisubrs
or
fiadds
or
loopne
push
out
fisubrs
mov
shlb
mov
hlt
pop
fmul
in
jb
xor
or
or
pop
sahf
cmp
pop
lahf
ficoms
xchg
movsl
pop
jle
or
mov
rorl
push
movsb
sbb
fiadds
push
pop
pop
sbbb
std
dec
nop
ret
in
es
fiadds
rolb
xor
cmp
fisubrs
dec
mov
popf
fimuls
jne
lret
js
mov
je
sbb
ficompl
pop
mov
rcr
pop
push
pop
cmp
lods
sahf
sbb
jne
dec
cs
fdivrp
and
mov
aaa
adc
stc
aam
or
fadds
and
jmp
mov
jle
shll
and
test
adc
sbb
ljmp
sarl
adc
xor
mov
pop
dec
stc
fmulp
mov
pop
add
sub
iret
mov
fistps
js
cmp
push
pop
subl
mov
mov
arpl
dec
popf
ficoms
cmp
xor
js
pop
cmp
cmpsb
inc
inc
lock
inc
mov
mov
xchg
std
jbe
mov
fxch
mov
ss
jp
pop
or
dec
push
mov
je
mov
inc
jo
into
sbb
mov
jnp
cmp
mov
test
test
imul
std
sub
in
sbb
jmp
sbb
lahf
pop
hlt
fidivrs
or
mov
lods
fimuls
fwait
mov
icebp
jge
rcr
cwtl
comiss
fdivp
push
inc
jg
ss
loope
clc
jle
int
mov
sub
shlb
add
or
cmp
inc
dec
ficoms
int3
cwtl
aaa
ret
mov
adc
mov
pop
fiadds
add
cltd
cmp
pop
xlat
mov
into
loope
pusha
mov
cmc
adc
fmulp
mov
lea
mov
es
repz
sbb
imul
popa
in
cmpsb
dec
out
sub
xchg
in
out
rorl
jnp
roll
shlb
shlb
mov
sub
xor
xor
and
push
lret
insb
adc
adc
mov
push
push
cwtl
inc
scas
pushf
mov
jmp
mov
leave
rol
pop
sbb
cmp
cmp
and
push
xor
nop
xor
mov
jbe
mov
ror
lcall
imul
dec
mov
xchg
rclb
hlt
adc
sbb
xor
jle
clc
mov
mov
int
leave
addr16
mov
aad
fidivrs
pop
out
lret
fidivs
pop
insb
sbb
adc
dec
movsl
mov
sbb
xorl
imul
and
push
adc
jo
lret
mov
xchg
fsubrl
aas
mov
mov
mov
movsb
dec
mov
lock
imul
cli
push
loope
fstpl
in
cmp
and
fidivs
xor
mov
jns
push
pop
xchg
dec
jle
mov
ret
pop
jp
ret
jle
push
nop
sbb
fwait
dec
imul
pop
fsubrp
ret
shll
mov
mov
jmp
orb
les
jle
lds
scas
into
push
out
xchg
fiadds
jl
enter
dec
popa
cli
push
dec
insl
movsb
mov
movl
mov
ffree
test
cmp
xorb
cmp
or
dec
into
push
mov
mov
mov
push
ror
and
push
enter
jno
outsl
cltd
add
inc
or
fidivrs
xchg
jl
movsb
sbb
adc
pusha
sub
scas
inc
ficomps
daa
int3
jo
dec
lcall
cli
xchg
fwait
mov
fiaddl
in
shrb
adc
jle
sbb
add
jno
xchg
mov
sahf
cmp
push
lods
xor
scas
jnp,pn
adc
out
fcmove
mov
push
jb
cmp
sbb
xchg
inc
inc
test
loope
xor
fiadds
out
mov
fmulp
movsl
jl
add
sub
and
dec
push
mov
popf
mov
stos
mov
fistpl
ficoml
ficomps
arpl
ficoms
mov
into
scas
lcall
ficomps
cmp
cld
mov
jne
xchg
jb
cwtl
mov
fidivrs
stc
xlat
hlt
cmp
lds
icebp
and
jge
in
cwtl
pop
shlb
fdivp
push
or
aas
sbb
ljmp
icebp
lahf
sub
mov
cmp
fiadds
ja
and
dec
fisubs
mov
out
mov
sub
scas
test
iret
and
lcall
xchg
std
cmp
es
mov
mov
arpl
pop
cmp
cmp
xchg
cmpsl
jns
les
inc
fsubrp
sbb
mov
loopne
mov
leave
mov
and
fidivrs
mov
jp
push
push
cmp
daa
cld
mov
ret
xlat
ficoms
inc
divl
jo
add
fidivs
mov
mov
scas
bound
sub
scas
cmpsb
fwait
pushf
insb
test
shrb
lock
pop
imul
push
in
out
xor
jl
adc
es
or
movb
xchg
lret
fdivrs
cs
fidivs
into
xor
cmpsl
ja
push
fsubrp
lcall
sbb
loope
mov
xor
adc
jo
or
xor
pop
fisubs
xchg
sub
call
mov
xor
dec
mov
jmp
scas
lret
scas
repz
push
xchg
out
jecxz
xchg
ficoms
cmp
and
mulb
test
aad
mov
cld
or
or
ret
ret
and
jno
icebp
fwait
add
ficoms
mov
xchg
xor
lret
in
ret
cld
cmp
mov
sub
push
fisubs
and
pop
dec
push
push
mov
push
nop
lods
pusha
lret
negb
call
faddp
xchg
adc
cmp
xchg
fadd
arpl
subb
in
mulb
lea
fsubrs
lret
fidivs
cld
pop
and
add
fs
ds
xor
aas
mov
xor
rcr
shll
repz
or
gs
imul
fidivs
test
jmp
aad
adc
daa
mov
retw
inc
jo
push
outsl
mov
jnp
push
mov
lret
cld
jo
push
pusha
xchg
or
loopne
addr16
sub
je
or
lret
mov
and
dec
fisubrs
mov
jp
stos
leave
into
add
jge
scas
aam
orb
add
std
add
ss
xchg
fwait
mov
vmovupd
into
xchg
xor
push
inc
xchg
adc
dec
ss
sub
movsl
adc
movd
incb
out
fidivrs
in
outsb
fwait
sbb
sahf
fisubrs
lret
mov
adc
sti
mov
cmc
std
clc
fwait
out
fidivrs
xor
adcb
and
sbb
scas
insb
and
je
repz
out
xchg
xchg
das
push
xor
rdmsr
or
xchg
rolb
mov
int
dec
loope
xlat
insl
xchg
inc
nop
jne
pop
test
lea
icebp
or
cmpl
lea
inc
dec
xor
bound
push
dec
push
sbb
cmp
mov
sub
int
pop
int3
add
xchg
fldenv
mov
inc
bswap
xchg
hlt
outsl
mov
clc
loopne
mov
fidivrs
add
ffreep
sub
rcr
inc
xchg
jne
in
push
fidivs
adc
push
sub
adc
aaa
xchg
jns
jmp
fcoml
fidivs
cli
jno
ficomps
pop
push
test
add
sbb
dec
sub
mov
cmp
push
xor
fldl
aas
movsl
jnp
daa
lds
test
and
push
jle
aam
lds
imul
xchg
movsl
inc
pop
call
and
sub
rolb
fnstcw
test
push
pop
dec
je
add
lods
mov
fimuls
call
fisubrs
pop
cwtl
ficomps
push
and
xorb
stos
sub
cmp
out
stc
adc
add
and
dec
fimuls
sub
jbe
fidivrs
mov
stc
xchg
cs
fisubrl
lret
pop
ficoms
aad
ss
jns
ficomps
add
mov
cmpl
repnz
fidivs
push
xchg
adc
fidivrs
call
dec
fidivrs
inc
push
clc
fsubrp
xchg
and
push
cmp
fidivrs
adc
jmp
fs
xchg
stos
lock
fmulp
jmp
jae
call
sahf
push
or
push
add
jb
xchg
sbb
and
fidivrs
lods
stos
mov
inc
out
pushf
cmc
fsubs
mov
xor
sarb
shrl
cmpsb
test
sbb
stc
xchg
ret
in
jmp
aaa
pusha
cwtl
jg
xchg
fimuls
push
mov
mov
icebp
addb
fdivp
lock
cmp
shrl
rcl
jae
fmulp
dec
push
push
int
sub
jg
push
pop
loope
cmp
std
outsl
jns
test
adc
sahf
fsubp
jle
je
pop
dec
xor
fsubr
sti
pushf
mov
push
stos
in
jge
xor
ficomps
pop
fcomp
ficomps
inc
xchg
cmp
cltd
loope
daa
jecxz
dec
mov
fdivrs
rolb
fmulp
inc
cmp
sub
inc
fimuls
dec
xchg
pop
stos
cmp
hlt
mov
sbb
addr16
fidivrs
xor
sbb
inc
fimuls
popa
sub
fisubs
xchg
fldl2t
fdivp
in
subl
push
add
push
fidivs
and
inc
adcl
fidivrs
pop
ss
imul
ficoms
push
fcmovnbe
popl
ret
testb
lret
sbb
xchg
pop
dec
lock
add
int3
adc
or
push
aas
mov
ret
mov
jne
pop
clc
push
xor
sarb
and
sbb
cld
and
testb
jmp
cwtl
imul
push
inc
lret
lret
aad
push
lds
mov
fdivrp
sbb
fdivl
data16
in
pop
sub
mov
test
ds
cli
adc
pop
jg
cmp
mov
inc
ljmp
xchg
dec
xchg
cmpl
cmp
mov
mov
push
dec
xor
xchg
stos
fsubp
sahf
push
jmp
cld
cld
xchg
jg
sub
and
dec
fimuls
imul
sub
test
jp
and
leave
popa
fisubs
bound
loopne
pop
jp
mov
hlt
pop
je
fidivrs
movsb
pop
sbb
fiadds
std
fmull
mov
movsl
pop
xor
mov
jg
lods
jg
fisubs
xchg
daa
push
mov
xor
cmp
xor
jle
jb
xor
push
push
adc
insl
call
scas
dec
test
xchg
jo
enter
and
fnstsw
add
cmp
or
aas
and
xchg
dec
mov
pop
pop
mov
loop
pop
imul
and
mov
xchg
sahf
dec
fisubrs
es
mov
lock
lret
xchg
repz
out
sbb
fldcw
jle
dec
sbb
or
scas
jo
dec
int
lret
mov
fbstp
cltd
and
sbb
mov
fcmovu
aad
sbb
jno
adcl
in
gs
scas
bswap
cmc
fidivs
ss
rcll
xlat
dec
adcl
cmp
sbb
and
das
mov
mov
es
fisubrs
add
inc
mov
js
jle
in
std
sti
mov
inc
fisttpl
fidivs
das
aam
cmp
pop
je
sub
dec
stos
inc
hlt
mov
push
aad
lcall
mov
rcrb
icebp
cmp
mov
xor
jne
imul
mov
rolb
call
jmp
mov
push
mov
das
jbe
testl
test
xchg
roll
mov
cs
ficompl
jo
int3
fidivs
pop
jno
push
ja
sbb
negl
cld
mov
xchg
fimuls
sti
inc
pop
iret
cli
jae
fadd
cmp
ja
xchg
adc
pop
pop
imul
outsl
mul
mov
xor
stos
push
jle
jl
sub
pusha
mov
jns
mov
addb
iret
mov
cmpsb
cs
std
cmp
mov
into
and
push
mov
xchg
dec
fidivrs
fbld
mov
test
adc
out
mov
adc
repz
mov
mov
push
cmpsb
aad
pop
test
jo
add
add
ret
jge
iret
gs
jle
negb
les
jl
push
movsb
imul
mov
xorb
stc
mov
pop
std
and
ja
out
loope
sbb
mov
cli
dec
stos
scas
pop
lods
inc
int
cmp
mov
sbb
cmc
adc
push
mov
adc
out
je
mov
enter
jl
sbb
and
popa
ret
sbb
or
inc
inc
aas
push
pop
loop
jle
inc
hlt
mov
stos
enter
ficoms
outsb
xlat
ficomps
insb
clc
or
jno
enter
js
fisubrs
xorl
push
mov
dec
push
mov
fidivs
addr16
add
std
mov
arpl
stc
in
scas
ja
rcrl
into
and
xorl
cld
push
lods
stos
nop
clc
repnz
popa
sbb
fidivl
jnp
in
adc
lret
arpl
xchg
movsl
movsb
scas
add
loop
out
xchg
fiadds
fidivrs
pop
add
fbld
lods
scas
pop
loope
mov
fisubrs
mov
sub
sub
loopne
or
gs
fld
aas
fidivrs
jnp
mov
ficomps
in
mov
shlb
scas
enter
sbb
movb
mov
test
sub
in
mov
or
ficomps
pop
aas
push
les
sub
lods
dec
popf
mov
mov
sbb
movsl
jmp
loop,pn
cmp
or
lds
pop
push
into
sbb
xor
sahf
mov
movsl
stos
in
cmp
ss
in
jle
add
jb
imul
sbb
movsb
inc
scas
pop
fwait
sarl
pop
in
push
insb
inc
leave
adc
sti
popa
xor
sbb
push
rcrl
mov
cwtl
pop
mov
inc
aam
push
pop
ds
or
sbb
movsl
lcall
rolb
add
xchg
and
fs
inc
daa
ret
or
dec
mov
outsb
jno
popa
inc
fstpl
scas
fidivrs
inc
insl
xchg
push
loopne
aas
enter
shll
icebp
adc
insl
cli
fiadds
and
repnz
in
shl
dec
sub
mov
fidivrs
mov
cmp
xchg
insb
fisubrs
xchg
jl
inc
mov
add
pusha
push
loop
sarb
fidivs
sub
dec
fsubp
outsl
divl
ds
mov
mov
fimuls
jnp
sub
cltd
add
xor
push
ret
cmp
jl
aaa
imul
ficomps
sbb
jno
or
lods
repz
pop
push
xor
ficoms
dec
cwtl
cmc
fiadds
icebp
shll
xchg
xchg
cmp
push
je
jle
ficoms
in
inc
daa
dec
push
movsl
fidivrs
adc
out
fnstsw
and
jns
enter
inc
fiadds
mov
lcall
mov
int
out
sbb
hlt
clc
xchg
into
inc
cmp
fildll
adcl
je
ljmp
mov
stos
out
fmulp
jb
call
fdivp
ret
adc
mov
imul
dec
push
and
xchg
stc
push
dec
jno
pop
xchg
pushf
fisubs
js
lret
mov
push
jbe
fsubp
push
loopne
daa
test
xchg
jns
pop
ljmp
adc
sub
ficoms
movsb
ja
std
and
ds
shrb
je
sti
pop
nop
mov
or
repz
add
jg
sbb
mov
pop
push
or
mov
fiadds
loop
faddp
fwait
popf
push
cmp
or
mov
mov
mov
in
rorb
dec
rorb
and
inc
cli
popf
xchg
jp
xchg
rorl
pushl
lods
in
daa
je
and
aam
dec
into
mov
fisubrs
rclb
loop
jg
xchg
jnp
pushf
stos
dec
and
test
cmpsb
xchg
fisttpl
insb
adc
mov
ss
aaa
mov
into
sbb
je
sti
jl
push
std
fdivrp
sub
lahf
fimuls
subl
sbb
pop
outsl
and
xchg
adc
neg
push
add
fidivrs
nop
mul
jns
fmulp
outsl
jbe
sub
aas
lahf
inc
jle
testb
mov
xor
mov
repnz
popa
mov
pop
lcall
xchg
data16
inc
xchg
jle
adcl
and
sbb
fisubrs
leave
fimuls
lcall
shll
xchg
xchg
in
lods
fdivp
shr
cmp
mov
dec
fisubs
or
sbb
pop
fisubs
or
fidivrs
pushf
into
fsubp
push
pop
and
sub
inc
sbb
lods
push
jb
and
nop
mov
mov
jp
mov
bswap
jbe
mov
add
fidivs
push
lea
mov
out
ds
lret
dec
pushf
call
or
fs
jge
leave
pop
nop
into
sbb
mov
jns
sbb
pop
scas
into
sub
and
movsb
push
aas
aad
lret
push
cmpsb
fiadds
jne
je
fdivrp
clc
xor
inc
cld
sbb
mov
in
cli
inc
inc
add
fidivrs
dec
cmp
jg
faddp
or
pop
dec
idivb
jnp
ljmp
fwait
add
call
nop
jle
mov
lds
inc
and
mov
xor
js
insl
test
mov
pop
jp
fsin
ret
aam
inc
fiadds
add
mov
stos
push
adc
push
movsb
mov
imul
sbb
mov
js
push
fisubs
movsl
lods
push
out
fimuls
sub
mov
ljmp
stos
fnstenv
jle
push
push
mov
lds
ficoms
fidivrs
call
rorb
loop
ret
insb
xchg
inc
inc
adc
scas
inc
fiadds
loopne
jo
enter
jns
pop
je
adc
insl
sub
aas
sbb
mov
imul
mov
add
rcrb
pop
dec
jmp
fisubrs
loop
sbb
cmp
insl
fisubrl
enter
jge
add
stos
push
rol
fidivrl
xchg
xchg
and
jle
sbb
mov
mov
fidivs
dec
jmp
mov
xchg
sub
in
addb
fsub
mov
or
repnz
jle
cld
pop
cmpsb
sub
and
and
cmc
jo
adc
mov
push
adc
ficompl
fiadds
or
subb
out
cld
arpl
push
jns
and
out
jae
pop
out
dec
inc
add
mov
pop
adc
push
fildl
or
adc
rcl
xor
shlb
fimuls
stc
sub
lcall
pop
rolb
fcompl
sbb
lods
sti
inc
in
dec
pushf
mov
insb
inc
mov
xchg
push
fisubs
stc
jne
xlat
ljmp
pop
fimuls
jbe
xor
push
xchg
mov
test
mov
inc
dec
fiaddl
sahf
fisubrs
or
push
pop
test
sbb
icebp
fisubs
imul
out
sti
das
fsubrp
cmp
xor
clc
pop
add
scas
jae
push
fst
into
mov
xchg
sti
fimuls
repz
iret
les
fidivrs
add
adc
enter
cli
adc
inc
jne
sbb
mov
in
std
js
or
sti
jmp
adc
fistpll
xor
jl
mov
sahf
lods
mov
sub
loopne
mov
scas
loope,pn
cmc
fimuls
sub
mov
jg
adc
mov
test
pop
mov
mov
sbb
xorb
xchg
test
lahf
out
std
shr
mov
bound
and
mov
sbb
ficoms
dec
out
mov
pop
sti
jg
cltd
mov
fisubrs
inc
scas
lds
out
jp
fidivrs
mov
cmp
cmp
into
pushf
jl
mov
cs
mov
fdivr
mov
mov
and
popf
stos
fisubrs
push
test
push
fisubrs
xlat
into
rolb
and
in
or
jg
pusha
insb
std
fsubrs
inc
push
mov
xor
hlt
in
ja
int3
push
pushf
cli
and
lret
and
or
sub
dec
sbb
xor
mov
in
xchg
inc
sarl
mov
sub
jecxz
add
test
ret
push
or
and
daa
nop
and
lods
in
out
shll
push
fdivp
into
ss
mov
pop
add
or
scas
aas
daa
out
add
push
ror
sub
pop
mov
xor
inc
in
pop
pop
inc
vpaddw
test
dec
sar
lock
mov
fs
xor
shrb
mov
repnz
mov
aad
cmp
dec
sbb
pop
pop
inc
ljmp
pop
test
jno
push
mov
jmp
pop
fidivs
cmp
xchg
jbe
movsl
mov
dec
ret
call
orl
jbe
adc
adc
xchg
popw
push
sbb
lret
sahf
incb
lret
bound
shrb
pop
fidivrl
out
sbb
push
movsb
mov
fwait
adc
nop
sbb
test
push
mov
ret
fisubs
pop
mov
mov
iret
cwtl
test
das
pop
not
jg
ja
out
imul
xor
scas
mov
rolb
push
shr
cmp
add
js
or
xchg
jle
inc
out
mov
scas
in
rclb
mov
or
push
adc
aas
jmp
ret
cmp
pop
xchg
cmp
mov
daa
or
roll
cltd
outsb
ret
dec
ficoms
shlb
adc
xchg
movsl
lret
or
sbb
cmp
mov
xchg
popa
push
arpl
jae
das
int
add
pop
push
mov
cmp
ss
mov
inc
push
cmpsl
repz
cwtl
ficoms
in
mov
shlb
sbb
or
push
ljmp
push
lods
lods
fmul
mov
mov
rcr
arpl
cmp
fidivs
int
inc
fidivs
movsl
filds
sbb
dec
jnp
push
or
cli
mov
add
push
outsb
fiaddl
mul
fidivrs
jae
pop
ljmp
vmovaps
notl
xchg
fldt
loopne
push
ss
adc
dec
ficomps
out
les
out
mov
mov
add
ficomps
dec
cmp
jecxz
and
aad
adc
dec
mov
fidivs
stc
xchg
xchg
jle
lds
adc
cmpsb
adc
jbe
cld
pop
push
cs
jp
adc
mov
xchg
movsb
fimuls
ljmp
mov
inc
pop
inc
subl
pop
sbb
fnstcw
xchg
or
popf
fmulp
pop
shlb
mov
out
add
mov
or
pop
pop
push
ja
fidivl
outsl
in
mov
cld
pusha
sbb
sbb
push
inc
inc
add
mov
mov
ljmp
int3
cmpl
or
fimull
mov
inc
mov
repnz
or
fidivrs
push
or
mov
xor
fisubs
push
dec
mov
xor
addr16
dec
aaa
in
fisubrs
leave
jl
fdivp
jo
ss
out
adc
mov
sbbb
fadds
and
fs
add
jge
lcall
mov
cmp
push
in
sub
loop
sahf
cmpsb
fstp
jle
xchg
aas
pop
ret
inc
mov
mov
insl
mov
mov
xchg
fimuls
ret
and
in
and
decl
dec
pop
inc
mov
mov
int3
into
ret
mov
iret
loop
imul
dec
or
cmc
dec
fisubs
push
ja
pop
fs
fisubs
and
inc
fdivp
sbb
int3
stc
or
enter
mov
popa
mov
cmp
dec
cmpsb
mov
out
xchg
inc
xor
pop
cld
ror
dec
fisubl
ds
sbb
sbb
push
and
lahf
std
lods
adc
fnstenv
xchg
jle
sbb
lock
adc
jns
ficoms
fs
insb
test
fimuls
ja
pop
fmulp
popf
hlt
sub
fiadds
push
fsubl
outsb
ficomps
popf
mull
mov
add
clc
sahf
mov
xor
sub
pop
js
gs
cli
cmp
into
addb
ficoms
fadd
sub
and
cmp
or
pop
pop
fiadds
outsl
mov
test
adc
lret
cmpsl
cmp
xor
xchg
addr16
into
mov
jne
pop
or
into
loopne
out
arpl
frstor
fidivrs
sub
push
dec
stos
sbb
stos
fisubs
negb
pop
add
and
into
jge
add
ds
push
inc
pop
fisubrs
movsb
mov
fstl
in
fisubrs
xor
push
pop
add
into
mov
cmp
cwtl
cmp
push
pop
and
jle
fldenv
sbb
aam
imul
mov
xlat
and
xchg
push
add
and
jmp
xor
cmp
or
sbb
insb
les
aam
scas
xchg
adc
xchg
push
fiadds
icebp
loopne
xchg
test
mov
push
sub
insl
jno
iret
inc
mov
jmp
test
mov
and
icebp
test
fisubs
push
cmp
add
outsb
lock
aaa
mov
cli
testb
or
and
add
prefetchw
or
dec
pop
sbb
push
cmp
add
lcall
shlb
imulb
ljmp
mov
push
inc
rcrl
xchg
xor
push
fsubrl
arpl
xor
jne
or
sahf
mov
pop
sti
daa
sub
add
xorl
out
rcll
adc
push
push
inc
dec
push
jb
ja
fimuls
je
movsl
adc
sub
cmpsb
out
push
sbb
dec
cli
shlb
pusha
mov
pop
xchg
jae
sub
mov
jp
popf
bound
xchg
fcmovnu
inc
stos
fisubrs
inc
sub
adc
adc
dec
and
jle
cmp
mov
sub
fadds
ror
sbb
into
mov
jne
and
dec
pop
add
aad
loop
pop
lret
push
stc
mov
out
enter
mov
or
insl
mov
jo
push
push
aam
mulb
xor
lds
mov
mov
roll
pop
sbb
stos
scas
and
mov
xchg
mov
sub
fmulp
cmc
push
dec
xor
adc
push
pop
stc
fimuls
mov
jnp
xchg
mov
cmp
les
enter
insb
dec
adc
fidivrs
loopne
inc
stos
mov
sbb
movb
sub
and
push
pop
out
and
std
mov
cld
pop
lret
lods
inc
int
push
mov
pop
out
cmp
fmulp
std
iret
and
das
sub
jnp
xor
ljmp
sbb
testb
filds
adc
aaa
sbb
or
jl
add
ficoms
cmpl
andb
fsubp
sbb
mov
xchg
fdivr
cmp
in
add
jge
mov
jns
mov
rcrl
test
movsl
jnp
push
ss
cs
jle
cmp
pop
in
sbb
mov
pop
frstor
inc
cli
push
faddp
or
rclb
mov
xor
sahf
fisubrs
sbb
into
jge
add
dec
sti
or
fnsave
mov
mov
xchg
iret
enter
imul
inc
and
sbb
fsubp
popa
rcll
mov
std
lahf
cmp
rol
test
push
and
fdivr
push
push
mov
mov
cmc
fsts
imulb
and
into
inc
imull
sbb
or
test
test
fiadds
int3
out
das
popf
lret
sbb
jbe
fldl
rcll
fisubs
sti
pop
jl
imul
cltd
mov
clc
fisubs
adc
or
jle
nop
cmpl
outsl
imul
jmp
jge
inc
xor
pop
mov
xchg
mov
inc
pop
cmp
mov
push
xlat
outsb
lret
fidivrs
pop
int
fiadds
stc
lds
dec
or
sbb
into
adcl
inc
fsqrt
and
inc
dec
stos
adc
popf
mov
in
dec
xchg
loope
stos
subb
sahf
cmp
call
jae
xchg
insl
add
mov
inc
push
out
aaa
shlb
dec
ror
in
shrb
ss
xor
xchg
into
mov
dec
adc
cmp
fiadds
xchg
push
sar
mov
fidivs
cmpsl
mov
sbb
inc
ret
imul
or
pop
sbb
or
push
pop
rol
ljmp
or
and
fsubrp
jp
inc
sub
jl
jle
sti
lock
loopne
loop
dec
sbb
out
push
mov
xor
dec
test
mov
or
sbbl
inc
push
lcall
sti
nop
pop
cmp
fldl
sbb
cld
sbb
lds
mov
inc
xchg
fisubrs
mov
fisubrs
movsb
jbe
push
daa
inc
outsl
int3
mov
ficoms
mov
enter
fisubrl
jl
mov
into
sbb
pop
test
cmp
jle
enter
xchg
lods
outsl
jmp
push
cwtl
pop
add
xor
inc
into
fimuls
cmp
faddp
pop
xchg
xlat
sub
sar
rcr
movsb
inc
xchg
sbb
adc
les
sub
sub
bound
popf
jmp
iret
popl
mov
filds
inc
int
add
sbb
into
testl
into
lahf
push
adc
imul
dec
ret
or
jmp
inc
and
push
fisubs
cmp
loop
sbb
jne
fisttps
repnz
inc
xchg
fistpl
shll
ss
sub
or
js
fisubrs
cmp
push
jnp
pop
imul
ljmp
push
cli
sub
pop
fwait
imul
fsubrp
repz
inc
lcall
xchg
dec
mov
out
sub
mov
pop
xor
ret
add
and
sub
pop
cwtl
fiadds
adc
sbb
and
rcrb
xchg
cmp
std
inc
adc
cmp
inc
xchg
pusha
inc
push
rorb
mov
into
fwait
std
enter
fxch
cmp
into
clc
sarl
dec
sbb
dec
outsb
jb
lods
lret
icebp
push
push
out
inc
ficoml
lret
cs
enter
push
jecxz
jnp
jmp
dec
fisubrs
lock
mov
test
fidivrs
sbb
in
dec
push
jae
fidivs
lahf
inc
inc
jno
xlat
lods
fidivrs
fnstcw
fmuls
add
mov
jge
xor
arpl
fisttps
stc
jle,pt
jg
loop
loope
jb
int
data16
adc
rcr
fwait
jle
ss
adc
mov
aam
pushf
dec
mov
bound
ret
jmp
fisubs
loopne
xchg
cwtl
pop
ficoms
aaa
ss
pop
sbb
repnz
mov
mov
inc
push
mov
fimull
mov
xchg
jl
data16
fiadds
sub
and
lds
sti
dec
stc
sbb
add
popa
cmc
or
leave
dec
fisubrs
jmp
xchg
xorb
inc
rorl
and
push
ret
inc
or
in
sbb
mov
mov
in
notb
fisubrs
inc
scas
ss
pop
mov
lahf
arpl
ret
lds
test
hlt
cmp
in
fimuls
out
shrl
pop
ficomps
pop
adc
add
jg
faddp
fs
sti
enter
fidivrs
cmpsl
cltd
jb
mov
in
ja
movb
ror
fisubs
or
gs
sub
imul
jmp
push
pushf
fiadds
sbb
movsl
movsb
and
icebp
mov
test
dec
cmp
fsubs
std
adc
rorb
sti
pop
imul
or
xor
stc
mov
sbb
sahf
inc
jmp
sub
mov
jle
fisubs
insl
inc
xchg
push
dec
out
fidivrs
sbb
sahf
adcl
ficoms
cmp
in
pop
add
push
lcall
fwait
icebp
fidivs
out
in
loopne
and
fldenv
add
push
clc
sti
pop
xchg
mov
mov
data16
aaa
sbb
fimuls
xor
cld
in
sbbb
scas
imul
xlat
pop
cmc
mov
mov
dec
pop
jg
out
into
pop
cmp
cld
push
xchg
sti
daa
fadd
ficoms
popa
lcall
inc
fisubrl
ficoms
jmp
lods
fmulp
out
outsb
xor
pop
into
mov
inc
ljmp
push
and
jmp
fisubs
bound
mov
or
dec
fs
mov
les
movsl
call
rcr
pushf
inc
and
fiadds
cmove
insb
mov
lret
orb
xchg
filds
movsl
inc
push
faddp
adc
cmp
ficomps
outsb
bnd
data16
push
adcl
ret
xchg
and
imul
fdivl
fwait
pushl
xor
into
fidivrs
mov
inc
push
pop
lods
cmp
into
subl
cmc
lock
std
sub
push
xchg
pop
pusha
jb
nop
dec
fiadds
pop
in
push
lcall
sbb
out
add
mov
cld
mov
xchg
test
push
inc
lods
outsb
mul
sub
lea
lock
adc
fisubrs
xchg
jo
pop
cmp
jge
addl
arpl
call
sbb
pop
cmp
insl
push
jne
add
lahf
lea
xchg
mov
es
call
stc
cmc
sub
lds
and
mov
or
lods
cmc
cmp
jo
test
xchg
mov
mov
push
cld
sub
mov
fwait
cmp
push
xchg
and
inc
jl
daa
sbb
fiadds
rcr
dec
insl
and
pop
aaa
fisubrs
mov
fs
push
les
sub
jp
cmpsl
fidivs
pop
inc
jb
mov
test
out
std
clc
inc
into
pop
jge
fisubs
jle
sbb
jp
lods
stos
dec
loope
sub
mov
fwait
mov
fmulp
mov
cmc
test
or
xchg
lds
enter
test
pop
test
add
jnp
ja
ror
dec
dec
pop
cmp
sub
mov
push
add
fdivp
lahf
insb
imul
fsubs
pop
xor
nop
daa
cli
aam
sub
inc
push
fisubrs
cmpsl
mov
popl
lret
scas
jle
int
and
sub
mov
adc
insl
mov
test
mov
lds
mov
xchg
jmp
inc
lret
inc
test
sub
movsb
pop
jne
stos
fisubs
pop
pop
shl
ficoms
push
xor
cmp
pop
and
pusha
in
xchg
sbb
enter
lret
sbb
and
int3
jbe
and
fidivrs
mov
cwtl
test
popa
sbb
add
movsl
mov
xchg
cmp
ror
sarl
mov
push
bound
xchg
push
sub
loopne
lret
lss
cmp
mov
jae
lea
ficoms
notl
in
xchg
sahf
and
shlb
mov
lods
pop
cmp
aaa
clc
ret
lods
jmp
pop
fidivrs
xchg
xchg
clc
ljmp
subb
push
pop
or
gs
sbb
fdivr
dec
cmc
mov
xchg
add
add
mov
mov
inc
sbb
xchg
rorl
and
test
push
cli
hlt
push
fidivrs
pop
fwait
cmp
bound
pop
pop
ficoms
dec
fimuls
mov
jne
sbb
lret
pop
insb
mov
and
adc
lds
std
xchg
cmp
cld
jle
cmp
hlt
fwait
xchg
out
into
mov
push
imul
and
add
in
adc
adc
xor
mov
mov
movsl
cmp
hlt
jle
cwtl
sbb
or
mov
sar
std
in
sbb
lods
jle
pop
cmpb
rcll
fsubrp
or
out
lds
rolb
mov
inc
mov
inc
imul
jecxz
cmp
mul
adc
mov
inc
xor
pop
fidivrs
test
push
test
lahf
jmp
ret
add
lock
or
fimuls
pop
xchg
in
inc
mov
outsb
ficomps
sbb
or
mov
mov
dec
lret
loop
sbb
sub
fidivrl
ficomps
cmpsl
icebp
push
in
mov
mov
mov
mov
pop
popf
lods
ljmp
add
jo
mull
add
and
mov
sti
in
jg
dec
fcompl
nop
ds
mov
or
leave
jge
pop
lea
push
mov
xchg
cld
in
fdivrl
xor
fisubrs
inc
out
sbb
arpl
xchg
adc
fiadds
or
es
test
add
xorl
dec
sbb
mov
popf
inc
imul
fisubrs
lods
mov
jle
add
je
mov
dec
adc
out
outsl
aaa
aaa
fmul
lcall
mov
cmp
mov
sbb
dec
fmulp
fmuls
mov
test
fldenv
stc
push
jle
test
lds
js
jle
and
enter
cld
mov
sbb
adc
mov
jecxz
cmpsb
ficomps
inc
pop
sarb
ja
fidivs
sub
xchg
mov
sti
fisubrs
mov
mov
fisubrs
add
shrb
js
fimuls
pop
aad
mov
mov
in
cwtl
faddp
push
jge
cmp
jnp
ficoms
pop
sti
loop
test
inc
mov
lods
mov
outsb
xchg
fimuls
or
sbb
push
inc
lahf
lock
xchg
decb
mov
pop
movsb
mov
jno
popf
pop
pop
jl
loop
lea
inc
sbb
mov
pop
insl
cmpsb
mov
push
test
push
mov
lahf
ret
jmp
jns
repnz
pop
daa
fidivrs
push
push
mov
mov
lahf
xchg
push
movl
fcom
push
cli
and
out
ds
into
mov
ret
jbe
and
mov
iret
xor
mov
sub
mov
out
jle
jb
stc
pop
pop
into
faddp
or
pushf
adc
out
insb
ret
add
fisubs
mov
pop
fmulp
and
inc
push
sbb
dec
cltd
out
mov
sbb
into
pop
pop
cmp
ret
faddp
sahf
xchg
pusha
or
mov
mov
or
xor
insb
sub
loope
and
aam
outsb
popa
pop
cmp
pop
mov
pop
xchg
in
jle
test
int
push
fiadds
add
imul
cld
int3
and
testb
mov
adc
outsl
lret
fidivrs
push
nop
in
scas
loopne
xor
jle
in
inc
out
mov
pop
cmp
ffreep
into
xchg
xchg
fs
sub
shll
mov
cmovns
stos
sbb
fisubs
sub
fdivrp
gs
daa
aas
xchg
adc
add
adc
std
call
fidivrl
insb
pop
xor
lods
mov
sbb
dec
add
loope
push
inc
or
push
mov
test
pop
ret
fs
lret
mov
outsb
cld
flds
mov
test
dec
into
add
mov
sub
sub
jecxz
fdivrl
and
ljmp
cwtl
and
stos
inc
sbb
mov
fcom
cltd
mov
jle
add
ja
push
cld
iret
icebp
sbb
mov
jle
and
push
leave
data16
fistpll
add
jle
pop
sbb
pop
shll
mov
fsubrp
icebp
adc
mov
sarb
xchg
cmp
cmpsb
dec
mov
imul
outsb
cmpsl
pop
and
sub
dec
out
fsubrp
jmp
shrl
in
adc
mov
or
dec
mov
scas
ficomps
mov
out
loopne
xor
ljmp
lret
ficoms
orb
insl
stc
fidivs
test
mov
and
sub
ficomps
arpl
jno
popa
and
inc
add
scas
cmc
outsb
imul
mov
mov
xor
push
xor
lods
sarb
push
and
mov
outsl
fisubrs
push
sbbb
outsb
mov
lret
repz
test
movl
sbb
sbb
inc
les
ficomps
push
rolb
addr16
cmp
mov
fdivrl
movsl
xchg
daa
or
or
jno
mov
gs
les
pop
fiadds
xor
mov
pop
scas
push
ficomps
sub
push
stos
movsl
xchg
add
subb
call
jl
rcr
pop
es
out
add
fisubs
fs
das
imul
ret
sbb
insl
cld
scas
insl
jmp
enter
std
adc
repz
dec
lahf
fmulp
inc
mov
xor
call
out
xchg
pop
hlt
jne
loop
dec
ret
jno
add
js
rol
jg
stc
ss
lahf
rclb
and
test
jbe
std
aad
push
dec
cmp
xchg
rcr
hlt
ljmp
call
mov
jge
pop
dec
mov
cmp
cmp
daa
xchg
and
sti
filds
mov
je
nop
push
xchg
ret
fwait
and
sarl
icebp
pop
mov
in
sti
aas
mov
ja
inc
push
adc
inc
or
in
xor
fmulp
orl
std
bound
fnstcw
mov
ficomps
mov
jnp
rorb
jae
push
pushf
imul
jbe
mov
hlt
movl
xchg
jnp
ss
dec
sbb
xchg
into
fidivrs
iret
add
mov
mov
jl
or
jnp
push
aas
pop
fucomip
popa
rolb
lock
fsubrs
loop
jne
imul
cld
movsb
out
in
in
mov
jg
jl
loope
mov
int
shrl
add
adc
lret
pusha
je
pop
fsubp
mov
sbbl
cmc
sub
xor
jns
xor
repz
cld
cmpsb
stos
outsl
xor
cltd
sbbb
inc
xlat
sub
cmp
in
cmp
pusha
sbb
jo
into
and
dec
xchg
push
mov
hlt
mov
adc
fiadds
mov
cli
mov
xchg
ret
dec
fistl
inc
mov
jo
in
ret
inc
fcomps
jp
fiadds
mov
mov
cwtl
push
shlb
push
ss
nop
jo
shl
mov
xor
and
pop
fdivrp
arpl
pop
push
xor
scas
push
cmp
leave
sbb
rolb
aas
lret
mov
jae
jg
cmpsw
mov
sbbb
mov
hlt
add
movsl
mov
insb
fcmovb
xor
scas
shrb
testl
xor
pop
shll
lods
add
mov
aad
cwtl
mov
cld
sbb
into
inc
mov
jb
pop
daa
lods
test
loopne
sub
mov
sbb
push
in
lds
pop
fisttpl
into
dec
xchg
pop
outsl
mov
mov
mov
jmp
sbb
das
mov
fmulp
cmpsb
adc
mov
adc
ret
maskmovq
imull
sahf
mov
and
std
cmpsb
aas
xchg
aam
subb
cld
push
add
adc
imul
lds
movsb
jle
cmpsb
fwait
into
gs
in
push
loop
test
pop
insb
add
cwtl
push
popf
mov
pop
pop
addl
jae
dec
mov
ds
xchg
sbb
into
xlat
sub
and
je
xchg
cs
xchg
out
ficoms
cli
lods
rcl
mov
push
or
gs
sbb
pop
fisubs
scas
fiadds
ja
shl
pop
push
ficomps
xor
repz
insl
or
push
pusha
test
daa
dec
rclb
push
icebp
dec
xor
fldl
cmp
test
aam
xchg
fsubrp
push
dec
pop
rolb
fidivs
iret
mov
das
push
loop
fidivrs
and
iret
repnz
aaa
xchg
call
xor
and
pop
mov
in
repz
mov
dec
fisubrs
xchg
dec
fstpl
in
mov
jo
scas
sub
mov
rep
dec
xchg
push
faddp
outsb
pop
faddl
shlb
xor
add
or
int3
ficompl
fisubs
jecxz
inc
fisubrs
ret
push
add
dec
push
jno
push
jb
jle
add
loope
int
das
sar
add
shl
ficoms
and
es
jg
mov
cmp
inc
xchg
movl
cli
popf
mov
inc
cmpb
clc
jne
adc
inc
sub
je
scas
hlt
dec
dec
fsubs
mov
out
stos
lcall
jp
shl
loopw
scas
fiadds
adc
mov
jge
mov
in
ficoms
push
push
loop
lds
and
in
or
clc
jbe
sarb
cmc
stc
sbb
test
dec
sub
ljmp
pop
and
rcll
fisubs
add
into
xchg
mov
cli
inc
sti
sbb
iret
ficoms
stos
and
add
cmp
cli
js
out
mov
adc
fidivs
xchg
mov
cmp
rclb
loope
ss
subb
jns
add
inc
fidivrs
stos
add
std
dec
inc
psubusw
dec
push
and
pop
insb
cmp
ret
xchg
sbb
fst
lods
mov
xor
faddp
into
xchg
sbb
cs
xchg
ficomps
or
ficomps
cmp
inc
cmpsb
jmp
mov
in
fildll
loopne
ret
cmp
insl
aaa
scas
popa
sbb
adc
jecxz
push
in
lods
jp
faddp
jmp
pop
lock
cmp
add
adc
pop
pushf
dec
syscall
sbb
add
ds
pop
push
rcrb
into
push
das
jg
dec
lock
jp
lcall
popa
fisubs
jle
insl
incb
fisubs
pushf
ret
or
das
repnz
pop
dec
ret
fidivrs
call
push
mov
dec
stos
mov
cltd
xor
repz
cmp
push
xlat
cmp
push
add
dec
and
pusha
push
pop
sti
jl
jle
andb
fimuls
int3
mov
sub
and
test
sbb
ret
into
add
addr16
fidivrs
ret
in
push
fisubrs
inc
or
fisubs
mov
push
addr16
adcl
pop
fiadds
test
push
not
mov
jg
ficoms
jae
shrb
push
aad
das
scas
cmp
scas
mov
sub
lret
push
sahf
cmp
push
into
loope
xor
enter
out
mov
mov
push
outsl
rolb
jle
inc
mull
hlt
enter
iret
aas
lret
mov
xchg
jl
jbe
subl
xorb
xor
fidivrs
sbb
out
rclb
inc
pop
and
iret
test
push
pusha
cli
dec
lahf
or
inc
inc
sarb
pop
testl
push
and
fisubs
subl
jge
push
and
xchg
pop
das
adc
imul
mov
ds
sahf
push
pushf
fdivrp
fimull
popf
pop
sub
sar
add
imul
add
div
test
in
popa
pop
inc
cmpsl
fdivl
cmp
loop
lea
jle
cwtl
mov
cld
dec
xlat
sbb
sti
popf
pop
xchg
jmp
mov
cli
cld
imul
mov
std
into
lahf
ficoms
jns,pt
pop
shll
daa
inc
adc
fimuls
fildll
insb
cwtl
add
test
fldt
fsubrp
pushf
loopne
orb
xor
scas
adc
insl
ds
and
jne
cmp
mov
fdiv
push
mov
xchg
cmp
xor
fisubrs
rclb
dec
fisubs
mov
cmpsb
fiadds
loop
icebp
je
jb
ss
and
js
inc
imul
outsl
adc
inc
mov
mov
mov
rcr
xchg
pop
sti
sub
mov
dec
xchg
adc
sbb
fmulp
xchg
xor
mov
fsub
mov
sub
or
pop
cli
jno
cmpsb
pop
mov
fiadds
cmc
jno
add
xlat
mov
cmp
push
adc
lret
repnz
rcr
and
sub
out
ficompl
mov
icebp
fisubs
cmp
fildl
dec
fcoms
jb
aaa
in
fidivrs
sub
inc
push
neg
xchg
lods
fildl
fisubrs
dec
je
sbb
dec
lods
mov
fsubp
lcall
mov
rorb
pop
test
jne
mov
sbb
mov
leave
xor
adc
xlat
sahf
vunpcklps
xchg
mov
or
sti
jmp
pushf
icebp
test
xchg
or
insl
ljmp
outsl
std
sub
pop
movsl
fisubrs
sub
jle
cmpl
arpl
mov
cld
pusha
xor
bound
jmp
jg
std
mov
sub
sub
hlt
add
cmp
fscale
loope
ss
cmp
inc
std
push
jle
stc
rcrb
pop
xchg
jg
fidivrs
pop
adcb
out
fisubs
jp
daa
fsubp
dec
jl
je
or
jle
mov
popa
shr
std
push
cmp
cs
sar
lods
lods
or
sbb
jnp
idivl
pop
jp
cmpsb
sbb
iret
test
push
lcall
fcmovu
jle
sbb
fiadds
push
pushf
xchg
mov
cmp
mov
fdivs
shl
mov
aaa
mov
push
mov
mov
cmp
cmpsl
ds
lcall
fisubrs
pop
mov
adc
out
fidivrs
std
push
pop
xor
and
pushf
imul
inc
ffreep
fmul
pop
xor
mov
movsl
pop
sub
fiadds
and
iret
ficomps
push
cmp
std
xlat
roll
add
jge
dec
inc
es
mov
into
nop
add
hlt
in
inc
fmulp
pop
jbe
and
mov
je
cmpb
dec
adc
mov
mov
pop
mov
add
push
loopne
add
push
push
cmp
shlb
xor
lock
mov
ss
mov
adc
jae
arpl
aas
push
js
lcall
or
push
xchg
sub
stc
push
mov
mov
mulb
cmpsl
pop
xor
sti
inc
daa
mov
push
sar
jnp
mov
dec
sub
insb
or
gs
pusha
cmpb
inc
je
addl
aad
pop
fisubrs
sbb
push
fiadds
dec
fldenv
fucomip
ficomps
test
mov
insb
cli
gs
lret
jmp
enter
cld
shlb
xlat
add
inc
cmpl
lods
inc
outsb
jnp
ret
and
jmp
push
and
stos
ficoms
in
sahf
jmp
in
lret
inc
cld
aad
addr16
sub
ret
adc
xchg
outsb
push
scas
ds
movsb
xchg
jmp
fwait
add
divb
mov
jns
repz
mov
add
mov
mov
or
cwtl
xchg
ret
sbb
dec
cltd
fidivrs
bound
leave
mov
ljmp
cmpsb
fimull
ficomps
jp
inc
xchg
mov
jo
cmp
xchg
fcomps
scas
loopne
inc
jecxz
mov
xchg
mov
fidivl
jo
enter
xor
into
mov
sahf
into
push
jbe
inc
adc
fcoml
pop
icebp
mov
mov
inc
and
mov
mov
call
cli
dec
test
cmc
cmp
inc
hlt
ds
mov
adc
and
movd
pop
fisubrs
mov
xchg
mov
mov
add
xor
and
enter
sbb
iret
and
push
daa
push
mov
xorl
inc
pop
fmull
ret
and
lock
daa
jno
cmp
pop
inc
int
fisubrs
scas
cmc
addb
into
icebp
cmp
push
mov
inc
jb
aad
push
inc
iret
ficomps
orb
mov
mov
jbe
es
cli
pusha
add
inc
adc
jae
aas
test
xlat
popf
into
int
jmp
push
jle
std
fldt
aaa
fs
fmull
adc
push
push
dec
mov
jne
mov
repnz
shlb
fisubs
cmp
xchg
sbb
jne
mov
mov
cmp
lods
adc
pop
lds
mov
jns
mov
push
ficomps
and
test
xchg
mov
mov
rcr
incl
sub
fimuls
mov
inc
addr16
ja
ficoms
pop
adc
hlt
mov
xchg
adc
mov
movsb
pop
xor
sub
js
in
mov
jl
adc
xor
or
sub
mov
sbb
adc
inc
mov
fiadds
mov
mov
aam
fimuls
mov
rcr
adc
push
pushf
pop
jp
push
ljmp
sbb
fimuls
push
lea
mov
or
or
lock
add
fimuls
dec
and
push
test
sbb
lret
insb
fmul
fidivs
in
data16
cmpsl
fidivrs
or
adc
mov
lock
add
cmp
lret
add
jge
and
sbb
jg
mov
loope
fisubs
mov
cltd
sub
dec
adc
fiadds
push
pop
fsubrs
mov
ficomps
aas
repnz
faddp
aad
gs
mov
out
popf
dec
add
jle
fadds
rorl
cld
scas
pop
cltd
jne
dec
jecxz
out
insb
movsb
cmpb
movsl
loop
or
pop
sbb
cltd
cmp
test
xchg
cs
sbb
sbb
mov
sti
fidivrl
cmp
jp
fdivs
dec
sbb
fisubrs
adc
addb
pop
push
mov
fidivs
fsubp
popf
in
cmc
fisubrs
shrl
adc
lcall
std
scas
jne
mov
out
fidivs
pop
pop
aam
notb
dec
loopne
fs
fidivrs
pop
ret
cmpsl
push
jle
mov
lret
jg
maxps
icebp
fisubrs
nop
out
fwait
or
gs
xor
fisubs
cltd
cli
insb
psubsw
dec
shr
xor
sub
sbb
push
data16
xchg
inc
xchg
in
ret
test
insl
fdivrp
cmp
imul
pop
das
ret
rcr
cld
dec
push
push
ret
adc
jmp
movsl
mov
and
sarb
jne
fisubrs
aam
dec
lahf
push
fisubrs
mov
fdivrp
add
test
or
mov
sub
fsubp
add
fdivp
cmp
adcb
out
pushf
loop
das
sti
in
mov
loop
xor
push
jl
add
pop
mov
pop
pop
dec
xchg
mov
mov
sub
ret
sbb
sbb
ficompl
add
sti
dec
mov
aad
repz
adc
outsb
add
fiadds
daa
fwait
sbb
or
subb
inc
xchg
inc
std
sbb
inc
mov
and
mov
popa
fisubrs
insl
aad
cmc
inc
stos
ficoml
test
rcrb
pushf
cld
push
into
aaa
mov
cmp
in
xor
sahf
outsb
std
loope
lock
sub
jmp
mov
push
jbe
movsb
cli
mov
fisubrs
hlt
xchg
pmaxub
mov
outsl
inc
mov
fidivs
push
jle
mov
cmp
jbe
xor
sub
jecxz
test
jo
xchg
mov
mov
imulb
sbb
adcl
cmc
fisubs
lock
test
push
jno
mov
xchg
fwait
jb
ret
out
sbb
xchg
test
mov
dec
rcr
sbb
scas
push
mov
cld
into
jb
nop
ret
sub
movsl
std
sbb
andb
ficoms
push
lret
dec
es
fidivrs
jae
or
and
mov
mov
popf
push
xlat
sub
cmpsb
aad
xchg
fisubrs
adc
pop
inc
lret
pop
dec
cmp
lret
ds
call
aam
fisubs
cmp
loopne
std
mov
dec
dec
stc
sahf
mov
cwtl
sbb
xchg
cmpsb
in
dec
into
pop
jecxz
lds
pop
pop
fisubs
ficompl
or
out
jbe
adc
push
lret
xchg
push
inc
in
ljmp
outsl
sub
aas
pop
push
mov
adc
xlat
add
xchg
cmpsb
shlb
pop
sti
pusha
lock
iret
xchg
ret
fidivs
add
test
jge
scas
pop
out
fidivs
mov
push
cmp
xchg
cmp
jge
xchg
scas
into
xor
jmp
fidivs
lock
mov
xor
sbb
push
cmp
outsb
jp
decl
add
dec
fidivrs
mov
pop
add
inc
into
addr16
or
cmp
sahf
adc
jnp
fidivs
outsb
cmpsb
push
fmulp
ds
xor
filds
adc
or
inc
jl
mov
call
push
sbb
push
sbb
mov
pop
fdiv
std
sub
and
xor
jge
into
dec
push
out
mov
cmp
clc
lcall
push
xor
lret
dec
adc
fimuls
cmp
test
pop
pop
inc
mov
push
xor
repnz
or
adc
scas
ficomps
mov
and
inc
mov
data16
inc
je
sti
stos
jecxz
and
sub
xchg
sbb
jno
pushf
or
adc
fisubs
mov
mov
push
and
pop
hlt
cs
into
cld
frstor
push
popa
les
jp
gs
adcl
shll
mov
push
and
mov
fidivs
xchg
outsb
inc
nop
jl
jle
imulb
xchg
loopne
loope
adc
ficoms
push
jno
arpl
dec
js
sub
fimuls
andb
lret
sub
sbb
in
test
jno
mov
cmpsl
jns
rorl
mov
shlb
sub
fs
outsb
aas
mov
pop
xchg
mov
insb
xchg
aad
adc
xor
inc
push
ficomps
sbb
and
jo
fidivrs
test
fisubs
imul
mov
out
sahf
pop
inc
sar
pop
addr16
mov
fimuls
and
pushf
cld
push
mov
inc
jp
and
adc
dec
push
pop
fsubrp
push
stos
mov
mov
add
aaa
lea
aam
fsubrp
jge
jg
add
inc
adc
xchg
movsb
fimuls
pop
jne
inc
repz
leave
fidivrs
and
push
sbb
fisubrs
loope
pop
in
ficomps
cwtl
fnstsw
std
sahf
push
arpl
mov
into
mov
and
dec
fisubrs
push
cmp
cwtl
xchg
mov
imul
rcrl
pop
daa
cmpsb
out
mov
insb
cli
jge
inc
and
into
cwtl
cmpsl
pop
push
xchg
mov
enter
pop
adc
xchg
scas
shlb
pushf
adc
inc
fsubp
test
inc
cli
popf
faddp
icebp
lret
fldl
adc
and
mov
dec
rcr
add
fimuls
test
push
loop
shrb
and
movsl
add
jno
pop
push
push
jge
add
out
dec
fisubrs
repz
ret
incl
sbb
xchg
fwait
jo
mov
dec
jb
roll
xchg
cmp
cmp
aad
fbstp
jno
and
cmp
pop
std
jae
pop
fwait
rclb
lea
rcrl
shrl
xor
lea
out
adc
arpl
int
mov
pop
jle
sub
fiadds
dec
inc
inc
mov
mov
stos
inc
sub
fiadds
inc
jmp
mov
in
ficoms
fisubs
xchg
test
xchg
fistpl
ret
push
das
gs
mov
mov
jl
sbb
or
mov
add
push
pop
call
imul
lea
adc
out
into
out
jns
cmp
enter
fisubs
or
std
cmp
call
je
jo
sbb
pop
ficomps
xchg
cld
pop
pminsw
fisubrs
ficompl
sub
add
ja
out
sub
js
fmulp
sbb
pop
xor
pop
iret
xchg
xchg
push
xor
fstps
mov
cmp
push
pop
lea
sarl
fiadds
cmp
in
push
ret
aaa
adc
sbb
fisubl
push
lea
or
dec
fisubs
mov
sbb
fidivs
negb
sahf
push
fcomi
mov
jle
inc
fisubs
lahf
lods
jnp
mov
cmp
into
add
adc
cs
push
in
or
cmp
jnp
mov
dec
mov
pusha
arpl
mov
ret
fildll
add
aaa
cmp
adc
xchg
int3
adc
jae
push
fimuls
or
fcmovu
popf
xchg
push
pop
and
fdivp
xchg
jmp
adc
mov
jg
scas
fucom
cli
ror
int
outsb
jecxz
mov
fiaddl
pop
mov
nop
ret
fldl
pop
jle
push
repnz
dec
movsb
mov
cmp
adc
pop
xchg
sti
lds
ret
add
add
fidivs
mov
sub
fimuls
js
pusha
iret
adc
push
mulb
xchg
imul
xor
and
sbb
adc
out
arpl
lock
loop
scas
mov
aaa
in
rorl
adc
sub
jle
or
out
mov
pop
aam
mov
iret
notb
ficoms
ss
sbb
adc
fidivrs
into
mov
scas
scas
pop
mov
out
test
pop
lret
rcrl
pop
mov
pushf
sahf
mov
xchg
lods
push
insl
pop
scas
sub
adc
inc
xor
fisubs
daa
mov
sarl
xlat
cmp
cld
cmc
jno
rclb
stos
aas
push
in
mov
ds
repz
idivb
aad
lahf
ret
push
mov
xchg
data16
testb
jp
int3
repnz
iret
outsb
push
cli
fsts
out
lret
decb
pop
inc
fisubrs
dec
scas
fimuls
xorl
mov
lods
mov
and
jno
push
fidivs
dec
cld
jnp
fwait
stos
mov
mov
aam
sbb
fidivrs
imul
sti
mov
jb
lcall
leave
sub
xor
push
mov
lds
lods
mov
mov
jl
aad
push
and
ds
iret
data16
adc
imul
pop
ja
sti
fidivs
push
test
add
mov
jge
jno
shll
mov
mov
aaa
xchg
fwait
push
in
sbb
into
cld
jecxz
pushf
and
pop
adc
cmpsb
ljmp
test
pop
test
icebp
dec
ret
frstor
mov
mov
add
lock
dec
jns
jle
sub
ficomps
mov
sarl
in
cmp
ret
sub
jmp
mov
js
bound
xor
pop
push
sbb
add
cmp
pop
sbb
mov
jne
cmp
int3
push
cwtl
xor
push
in
cmp
xor
repz
imul
lret
pop
jl
mull
cmpsl
push
lods
and
jne
cmc
icebp
fnstsw
cld
pop
imul
push
or
jb
mov
inc
dec
or
fisubs
in
add
std
push
lea
into
es
push
fiadds
xlat
testl
push
mov
popf
mov
lods
imull
dec
fidivrs
push
mov
sub
ss
ja
cmpl
cli
aas
clc
fsubrp
jmp
fs
push
lahf
sbb
and
daa
mov
dec
andb
mov
in
aas
cltd
ficomps
stc
idivb
pushf
ljmp
fimuls
jbe
dec
pusha
push
pop
inc
mov
mov
ljmp
pop
sub
or
pop
xor
xchg
ja
int3
outsb
fsubrp
jecxz
mov
fsubrp
xlat
or
mov
iret
fisubrs
sbb
hlt
sub
ljmp
sub
fiadds
mov
mov
gs
insl
les
test
enter
push
jns
mov
test
fisubrs
stc
sahf
or
bound
pop
push
sbb
ficompl
ja
lods
fsubrp
movsb
mov
jbe
fidivs
in
into
mov
ja
rorl
mov
push
add
outsl
cmpsb
fimuls
xor
scas
jmp
aaa
fiadds
push
sbb
aam
jl
or
sbb
pop
push
lahf
fidivs
hlt
xorb
lock
stos
out
fsubs
divl
cmp
sub
push
jge
in
cmpsl
push
xor
ds
ficoms
mov
sbb
cmp
sub
into
lea
fisubrs
movsb
jle
sub
shlb
fisttps
dec
mov
xor
pop
imul
ret
push
mov
test
cltd
dec
mov
adc
xlat
push
repnz
cmpsl
movsb
lahf
or
dec
mov
jl
not
jmp
xchg
pop
add
inc
xlat
inc
int3
outsb
mov
and
ljmp
popa
or
js
fwait
or
fsts
push
sbb
scas
xor
push
sbb
push
xor
repnz
jg
nop
cmpsl
fisubrs
test
lret
ficoms
ss
into
bound
ficoms
out
loop
mov
scas
fsubrl
lock
shlb
aaa
jle
jl
mov
add
mov
push
jbe
pop
scas
outsb
dec
adc
mov
fdivrp
jmp
or
cld
sub
push
imul
mov
xchg
out
xor
sahf
xchg
dec
jmp
mov
subb
sbb
sub
les
push
fidivrs
jne
xor
lret
cmp
mov
jns
pop
lcall
mov
push
pusha
sahf
add
into
add
cwtl
testl
stc
fisubrs
or
dec
fwait
jle
cmp
bound
cld
pop
push
rorl
int
and
sahf
scas
out
imul
inc
fstp
fwait
mov
in
adc
cmp
leave
fcmovbe
push
fimuls
pop
js
push
and
ficomps
pop
pop
mov
cwtl
or
popa
ret
mov
mov
imul
daa
xchg
and
mov
add
jo
negl
fisubrs
daa
cld
out
mov
push
movsl
mov
pop
inc
mov
stc
sbb
sub
fdivp
loopne
push
enter
ret
jle
adc
mov
or
sarb
iret
ffree
xor
push
fidivrs
lea
mov
pop
scas
add
fsubrs
loop
xchg
jp
xchg
fiadds
in
and
xchg
paddb
xor
pop
push
loop
cmp
mov
xor
neg
mov
xchg
push
ss
ficomps
lds
jnp
ficoms
mov
fiadds
xorb
xlat
fdivr
fidivrs
sub
int
jno
popa
pop
rcr
in
lods
pop
dec
cmp
cmc
add
shr
jle
push
cmp
das
pop
in
jb
lods
mov
jecxz
adc
pop
addb
xor
adc
into
and
nop
jae
cmc
xor
inc
inc
das
add
fiadds
ficompl
add
mov
fsubp
je
jl
dec
push
mov
xchg
mov
fdivrp
call
mov
hlt
cmp
fs
aaa
sbb
pop
pop
and
cmp
out
leave
xchg
xor
add
lds
push
std
and
into
jbe
ficomps
inc
test
mov
adc
shl
sub
dec
mov
std
pop
fwait
xor
mov
ret
mov
iret
les
inc
mov
js
fimuls
pop
lret
mov
mov
cmpsb
in
cltd
jbe
sahf
cmp
sbb
ljmp
jg
shll
fisttps
fsts
pop
inc
and
push
sbb
scas
mov
lods
mov
fidivs
out
sahf
mov
loopne
xchg
ret
mov
pop
jnp
fimuls
jp
cmpsb
mov
enter
cli
mov
jns
aaa
inc
sub
add
and
sahf
inc
test
add
inc
pushf
lock
das
fcomp
fdivrp
dec
and
add
jge
jle
push
xlat
fdivrp
push
mov
lods
fdivrp
xor
cmp
int
fisubrs
sub
xchg
xlat
adc
shrb
pop
push
mov
fidivs
test
xor
add
fidivs
jnp
mov
push
pop
fisubrs
inc
dec
mov
rcrb
rcr
xlat
out
or
cmp
mov
into
jo
sbb
pop
inc
rclb
sub
hlt
mov
fsubrp
int3
jno
lods
and
dec
fidivrs
sub
popa
sub
cmp
mov
roll
and
rcll
sub
push
decl
std
pop
push
das
xor
nop
ficomps
fdiv
lea
jle
out
pushl
pop
inc
mov
jb
add
popf
ds
push
int3
movb
cmp
movsl
out
sbb
add
inc
mov
add
inc
andb
and
cmpsl
aam
fsubp
mov
jecxz
adc
inc
rcrb
jo
cld
stos
push
jle
ret
aas
mov
xchg
mov
add
sub
aaa
rclb
addr16
cld
movsl
rcl
sbb
shll
data16
sbb
mov
push
test
sbb
cli
adc
lret
movb
clc
pop
mov
dec
pop
int3
lret
hlt
arpl
fidivs
je
inc
aaa
jmp
fisubrs
xor
and
mov
popa
xor
std
mul
stos
hlt
inc
sahf
add
push
std
cld
xchg
or
aam
fnsave
in
mov
mov
out
push
movsb
shrl
fdivl
imul
jl
sbb
pushf
xchg
ficoms
sbb
mov
mov
mov
pop
std
mov
negl
fimuls
cmp
imul
fisubs
xor
xchg
cltd
push
fidivs
out
out
movsb
shll
and
jmp
fsubrs
pop
mov
inc
inc
popf
fisubrs
fisubs
push
enter
lret
xor
fidivrs
insl
ljmp
test
jecxz
pop
icebp
sub
sbb
cltd
enter
jp
and
push
xor
sbb
or
mov
push
psubd
sarb
into
andb
jae
movd
into
push
xchg
mov
or
mov
dec
mov
sbb
aaa
imul
push
aad
std
mov
ret
in
mov
jmp
mov
mov
mov
fidivs
jnp
aaa
lods
outsl
fadd
mov
xor
sti
rcrl
leave
cwtl
ds
into
pop
test
lcall
test
cmp
push
mov
fimuls
es
pusha
into
add
fiadds
inc
inc
out
dec
sarl
cmc
faddp
xchg
idiv
js
fistpl
lret
xor
imul
sub
ficomps
add
mov
xor
mov
inc
imul
insb
push
sub
jne
mov
xlat
lret
or
int3
test
sar
and
sub
cld
mov
jbe
jbe
push
inc
into
shrb
xchg
int
xchg
ljmp
inc
inc
sub
mov
das
xchg
jmp
dec
mov
push
dec
mov
std
sub
ret
jge
fsubrp
xor
imulb
add
xchg
fiadds
pop
imul
sub
in
fisubrs
xchg
push
cmp
jo
fists
jmp
ret
arpl
inc
sub
loopne
ficoms
adc
mov
pop
and
ja
inc
sbb
fidivrs
and
lods
lods
fmulp
inc
aad
mov
xchg
out
sbb
mov
fsubp
or
adc
fimuls
mov
mov
test
std
filds
lds
ficoms
xor
sbb
jns
cmpsb
jl
adc
push
aad
dec
cld
lahf
cmpsl
popf
rolb
std
daa
es
and
sbb
add
jecxz
and
mov
in
mov
lret
jae
ficomps
jnp
fdivs
sub
or
ljmp
jno
mov
mov
jmp
or
repnz
and
rol
test
fdivrp
jbe
jns
in
adc
lods
stos
js
or
cltd
lea
loopne
add
adc
xlat
xchg
inc
cmp
add
imul
daa
pusha
and
ja
mov
inc
stos
xchg
aas
mov
fmulp
push
mov
mov
popa
dec
scas
inc
dec
rcr
mov
mov
jge
add
pop
mov
popf
in
fimuls
mov
fisubs
daa
mov
jg
aaa
nop
repnz
idivb
fimuls
adc
adc
ficomps
mov
sub
out
dec
scas
pop
rclb
out
push
lret
lods
cmpsl
sbb
add
ret
fs
jmp
cmpsl
fdivrp
push
mov
jo
jle
shlb
xchg
or
gs
in
aas
fisubs
push
addb
push
sti
adc
fsubp
jg
xor
cld
rcrl
cltd
out
add
ret
inc
fisubs
mov
mov
xlat
cs
fmulp
mov
out
or
pop
mov
fdivrp
dec
xchg
jl
mov
push
push
add
sbb
leave
data16
enter
adc
in
push
dec
fsub
add
sahf
mov
repz
aam
mov
sub
inc
fmulp
add
scas
pop
imul
outsl
sub
movsb
lret
jns
leave
sbb
inc
xor
push
lcall
add
dec
push
mov
cwtl
push
adc
lods
sub
cmp
mov
test
cmpsl
mov
pop
fsubl
enter
mov
out
pop
and
loopne
fcmovne
out
xor
and
fdivp
inc
mov
sti
cld
or
shll
ljmp
xor
icebp
xor
adc
jle
ret
iret
int3
test
jno
popl
sahf
test
loop
push
mov
fiadds
adc
sbb
dec
dec
ljmp
mov
push
fimuls
loop
cwtl
lret
jecxz
cmp
sub
fisubrs
adc
dec
fidivrs
jbe
jge
repz
mov
jecxz
adc
sbb
cmp
push
in
pop
lods
roll
into
enter
dec
pop
out
xor
mov
outsb
pop
fisubrs
pop
push
adc
lods
test
rol
into
call
ja
shrl
dec
cmp
push
outsb
add
inc
sbb
loop
int
rcr
out
adc
fisubs
add
pop
or
jae
into
out
inc
mov
test
into
xchg
mov
sahf
fcmovnu
loope
add
rcr
adc
jp
hlt
push
fildl
fidivs
pop
lcall
lea
cmpsl
dec
ficomps
popf
and
dec
jb
call
fisubs
pop
stc
push
cmc
dec
lds
sub
push
dec
or
in
or
ficoms
insb
test
xchg
jae
xchg
lock
ret
icebp
movl
call
ja
ja
fnsave
pop
into
mov
popa
jle
sti
sbb
imul
jbe
mov
add
xchg
scas
pop
mov
loop
or
test
ficomps
xchg
add
faddp
sub
les
xchg
pop
jns
fimull
xchg
inc
aam
push
mov
int
inc
mov
fcmovnu
push
fsts
and
push
pop
jnp
jp
je
cmp
jl
lods
ficoms
call
out
fimuls
into
xchg
jecxz
cs
fimuls
adc
cltd
repz
sub
dec
loopne
cmpsb
hlt
adc
test
imul
mov
and
imul
adc
repz
lahf
push
loop
das
adc
pop
pop
dec
lock
iret
mov
fadds
cwtl
inc
add
push
or
push
or
ja
pop
jg
fisubrs
push
loope
fs
jns
pop
sub
lea
std
jle
jecxz
pop
shlb
inc
ficomps
push
out
ret
mov
mov
adc
pop
int
inc
xchg
mov
adcb
dec
fsubp
cmp
out
sbb
add
adc
es
mov
xchg
fists
sti
fmulp
mov
imul
sbb
lods
mov
pop
jle
shl
jb
leave
xchg
sub
sub
pop
cld
insb
jle
push
shll
std
rclb
lds
mov
out
adc
outsb
jle
push
cwtl
and
call
pop
fidivl
lods
fsubp
sub
ficomps
xchg
testb
fs
negb
jmp
cmpsl
call
add
clc
pop
mov
add
sub
lods
or
cmpsb
pop
fistpll
shl
mov
xchg
mov
ja
mov
fiadds
mov
sbb
sub
mov
pop
mov
test
dec
cwtl
ror
fisubrs
push
cmp
loop
hlt
mov
lahf
fimull
push
push
fidivs
mov
test
xor
icebp
mov
rclb
fimuls
push
dec
ja
stos
stos
daa
shr
sahf
pop
fdivp
jo
fstpt
aam
fidivs
add
fisubrs
lahf
cmp
sbb
and
fsubrp
bound
jno
lods
pop
fidivs
cmp
inc
or
sbb
jg
cld
xchg
call
in
mulb
ret
das
mov
sbb
sbb
mov
pop
push
jg
inc
pop
addr16
xchg
fcompl
shll
clc
daa
pop
push
enter
cmp
insb
mov
movsl
inc
dec
xchg
fisubrs
adc
fsubp
jge
addr16
pop
xor
lret
es
insl
das
or
inc
push
pop
test
jp
mov
imul
cmp
xor
mov
mov
mov
mov
sub
loop
leave
xchg
ja
pop
pop
cmpsl
inc
iret
inc
add
add
or
jecxz
mov
mov
pop
mov
lods
pushf
ret
sub
pop
inc
jo
mov
mov
mov
xchg
dec
xchg
into
add
in
cmp
fcompl
into
clc
or
pop
shll
fisubrs
mov
std
lods
fidivrs
mov
xchg
xchg
rcr
xor
cmp
push
push
pop
xchg
shlb
inc
jle
in
movsl
rcrb
ret
out
xor
es
xor
mov
jae
loopne
out
inc
sub
dec
mov
fidivrs
pop
jg
sub
mov
das
sbb
inc
and
or
xor
lcall
mov
iret
cmp
mov
scas
pop
fimuls
or
in
ficoms
stc
ja
fisubrs
and
adc
mov
pop
fisubs
push
xchg
sbb
fisubs
ljmp
lds
pop
mov
mov
xor
enter
xchg
pop
jo
or
xor
mov
scas
mov
cmc
popf
add
lcall
fisubs
or
sti
in
cmc
into
out
les
enter
into
outsl
into
adc
or
jns
cld
add
imul
adc
std
jp
in
ftst
pop
rcr
and
stc
or
push
mov
or
lods
lds
adc
sbb
xor
dec
movl
fisubrs
mov
cmpsb
add
push
fidivrl
enter
aaa
ror
lods
sbb
and
add
lahf
stc
sti
pop
lods
sbb
test
outsl
mov
add
and
sbb
jge
cmp
pushf
fidivs
iret
loope
fidivrs
mov
push
ret
adc
jae
jle
jo
pop
pop
daa
std
add
jbe
or
ret
out
and
fsub
cmp
mov
cwtl
mov
mov
mov
mov
sarb
fsubp
push
out
xlat
fcomps
fidivrs
xor
jl
mov
outsb
and
dec
fisubs
popf
cmc
das
cmp
out
sbb
mov
rcr
add
push
popa
xchg
xor
lea
mov
xor
lcall
into
sub
push
loope
bound
adc
lret
mov
ds
psadbw
sahf
mov
pop
dec
ss
or
sub
sbb
xor
add
aaa
push
insl
and
scas
push
icebp
jle
lea
fucomp
out
shlb
aaa
dec
ficomps
mov
or
sahf
fs
pop
sub
out
mov
aas
fidivrs
sar
outsb
sub
bound
or
cld
fadds
aas
rcrb
inc
mov
xchg
cwtl
dec
jmp
fisubs
pop
fdivs
bsr
ss
cmp
inc
hlt
push
fimuls
jb
es
sarl
cli
popaw
into
fdivp
negl
cmp
mov
pop
nop
xor
fisubs
dec
int3
mov
mov
std
mov
in
dec
jl
mov
inc
std
movsb
adc
out
sub
into
pop
dec
push
popa
fsubrp
stos
inc
pop
pop
sahf
clc
into
sar
add
pop
aam
pop
data16
inc
fisubrs
imul
movsb
fwait
adc
nopl
in
into
sbb
leave
pop
add
and
push
mov
mov
fidivrs
cltd
movsb
jno
jg
mov
fisubs
mov
fidivs
sbb
sub
pop
pop
add
cwtl
lock
xchg
jle
inc
out
int3
fimuls
xor
pop
xchg
mov
insb
lahf
lods
imul
shrl
into
jl
loopne
pushf
ficoms
adc
sub
and
pop
pop
adc
inc
add
inc
fiadds
decb
push
xor
mov
cmp
cmp
shr
add
sarb
les
dec
ficomps
clc
cltd
mov
leave
loop
shl
add
lds
int3
imul
xor
ret
or
mov
fsubrp
ds
xor
fisubs
pop
sbb
repnz
jo
ficomps
fdivs
xchg
in
shl
sti
std
xchg
leave
outsl
xor
mov
fdivrp
adcb
lods
into
std
es
addl
xor
shrl
in
and
push
lods
add
fiadds
mov
movsl
icebp
pop
fdivr
sbbb
data16
shrb
mov
inc
or
icebp
fisubrs
inc
inc
into
fisubrs
popf
fcmovu
testb
mov
insl
stc
das
sub
cmp
xor
mov
lcall
inc
loope
and
mov
scas
pop
jne
xor
sti
mov
push
idiv
xchg
mov
mov
lds
mov
mov
mov
jp
jbe
inc
push
cmp
add
std
mov
mov
inc
and
mov
push
pop
pop
into
xchg
ja
mov
pop
push
fiadds
sbb
fimuls
push
iret
inc
push
scas
dec
add
es
js
fsubp
lods
pop
inc
push
lea
mov
or
hlt
into
das
adc
cmp
icebp
sub
loop
fidivrs
cld
jno
or
jmp
push
fdivrp
mov
mov
xchg
xchg
or
loopne
cltd
rcrb
jp
jns
dec
or
mov
mov
hlt
out
pmaxub
sbb
iret
cld
push
cs
out
xchg
or
push
std
jnp
popa
dec
jae
lea
test
pop
fistpll
pushf
stc
ret
jno
cmpsl
aaa
jmp
fiadds
fdivp
jl
inc
mov
popf
lahf
add
or
fcomps
sub
out
dec
push
push
and
out
jg
ficomps
jge
scas
mov
inc
je
mov
fidivs
sbb
int
mov
xchg
mov
ficomps
je
pop
lcall
pushf
sbb
shl
xchg
mov
ja
push
cltd
xor
adc
dec
sahf
out
pop
inc
mov
test
cltd
fidivs
icebp
cmp
xchg
push
or
push
mov
adc
cmp
repnz
sbb
je
and
mov
sbb
mov
js
mov
push
bound
fidivs
pop
rcl
cmpb
int3
jne
push
popf
std
jo
bound
neg
mov
mov
nop
rcll
out
pop
cli
dec
mov
ficoms
cmpsl
sbb
arpl
adc
dec
jno
mov
jo
lret
xchg
ficomps
int
int3
add
lcall
xlat
mov
bound
lret
outsb
fsubrp
xor
rorb
cmp
or
gs
pop
popa
fidivrs
xchg
mov
adc
clc
xor
push
mov
push
imul
fidivrs
xchg
cwtl
pop
mov
lret
stos
stos
outsl
inc
fiadds
sub
andl
aas
xlat
dec
pop
mov
cwtl
jmp
fsubrp
gs
mov
and
xchg
fcmovbe
cmp
push
sub
stos
jns
cs
cld
add
imul
adc
sub
shrb
mov
and
stos
movsb
mov
pop
add
mov
jnp
xor
push
jns
jge
xor
inc
rcr
pop
repz
xor
and
test
movsl
sbb
cmp
std
pop
movsb
add
mov
pop
push
xchg
inc
and
xchg
shll
fidivs
sub
popf
insb
aad
cld
add
scas
les
notb
enter
xor
fists
insl
jae
std
rcrb
fdivrp
jo
lock
mov
jl
ljmp
mov
jo
pop
outsb
repnz
lret
dec
and
mull
pop
movsl
lret
mov
cltd
cli
and
test
outsl
pop
sbb
movb
pop
inc
adc
mov
sub
ja
or
int
cmpsl
fisttpll
cmc
jo
lret
rclb
out
fidivs
or
aas
fsubp
and
pop
fidivs
xchg
dec
or
movsb
xlat
mov
lods
jecxz
mov
xchg
cmc
mov
stc
jne
ficomps
fdivrl
sbb
inc
aad
mov
cli
enter
std
movsl
add
mov
out
ficoms
vmulss
fiadds
popf
mov
push
fiadds
rorl
in
jl
push
cmpsl
idivl
mov
inc
call
lret
push
xchg
je
cli
arpl
dec
jle
mov
sahf
mov
lcall
aaa
fnstcw
pop
cmp
faddp
add
repz
test
pusha
mov
push
mov
stc
mov
mov
and
ja
or
mov
pop
ljmp
and
movsb
cld
xchg
inc
cltd
cmpsb
mov
fidivrs
sub
xor
stc
std
jbe
ja
dec
rcrb
dec
ret
mov
xchg
mov
cmpsb
sti
sarb
pop
iret
fbstp
fidivs
mov
jbe
or
scas
sti
js
adc
popa
mov
mov
scas
in
ds
jae
adc
cmp
out
adc
inc
fidivrs
cmp
sub
xor
mov
fisubs
xor
cmp
aad
jp
ret
imul
push
add
out
cmp
mov
insb
push
mov
xor
loope
jl
sbb
dec
push
jecxz
cmpsb
pop
ficomps
adc
addl
faddp
sbb
mov
cmp
notl
or
into
fisubrs
lahf
sub
mov
and
lds
fsub
pop
ljmp
fbld
into
imul
push
test
jg
mov
add
cs
mov
sub
in
jmp
fsubrp
sbb
pushf
mov
mov
fwait
ret
xchg
pop
fisubrs
pop
insl
fsubrp
inc
imul
cmp
out
add
fimuls
sbb
cmp
ss
jmp
test
lock
sbb
fsubrs
hlt
das
xchg
adc
fimuls
ja
sbb
aad
or
ret
mov
xor
addr16
insl
gs
fiadds
aas
sub
cmp
ret
push
inc
add
out
nop
imul
js
std
ss
lds
movsl
fimuls
mov
lea
cmp
sbb
mov
adc
loope
pop
bound
lret
mov
ret
fimuls
movsb
std
pop
mov
sub
mov
mov
shll
xchg
xchg
pop
jmp
aad
pop
cmc
xor
mov
sbb
xchg
fbld
mov
test
cmp
or
xchg
and
or
cmp
clc
scas
pop
test
addr16
fisubrs
dec
adc
mov
jle
jmp
mov
mov
repnz
popf
lds
push
push
dec
push
repz
ret
ficomps
cmp
outsl
mov
sub
cs
pop
add
imul
push
std
movsb
movl
in
rcrb
aas
cmp
sbb
fisubrs
repnz
fidivrs
lret
sbb
fidivrs
fisubs
and
aas
imul
adc
pop
inc
dec
push
mov
rolb
ficoms
xchg
dec
outsl
pop
jno
daa
lahf
pop
out
or
push
xchg
insb
jmp
aam
ss
jle
scas
mov
lcall
inc
in
fmulp
pop
lods
jo
outsb
mov
aam
test
and
inc
pop
mov
sub
fdivp
lret
cs
fisttpll
or
add
pop
rcrl
dec
add
mov
ljmp
mov
icebp
fimuls
mov
pop
pop
ficoms
pop
ret
mov
mov
iret
inc
repz
lret
insb
iretw
imul
sbb
shr
push
jo
xchg
push
add
inc
call
xchg
pop
mov
lds
or
fidivrs
pop
nop
das
jbe
sbb
cwtl
scas
sbb
xchg
cmc
ret
aas
shrl
std
in
or
mov
stos
xchg
add
movsl
xor
or
push
fidivs
frstor
cmpl
adc
std
inc
adc
fdivrs
push
fidivs
xchg
test
jne
fs
add
pusha
push
ficoms
mov
cmp
cmpsl
mov
pop
sub
lcall
ss
rcr
lock
and
js
sahf
out
jge
jne
pop
pop
dec
cld
mov
fidivs
in
out
sub
movb
and
notb
or
jae
jbe
sub
les
or
inc
outsl
fiadds
jmp
pop
mov
movsl
sub
cmp
ficoms
mov
inc
mov
lock
xchg
inc
enter
cltd
js
iret
cwtl
fidivs
add
mov
dec
into
sub
fdivrs
adc
ficoms
mov
je
cmp
add
int3
adc
mov
jo
fidivrs
repnz
mov
mov
jnp
std
lret
cs
push
filds
push
imulb
imul
cmp
mov
push
into
std
or
pop
cs
shrb
mov
fimuls
out
lock
imul
jge
fildll
mov
aaa
xor
bound
adc
push
jge
arpl
adc
push
fcoms
adc
fiadds
sahf
push
push
push
xchg
addl
xchg
jg
pushf
inc
loope
cmp
int
jbe
sub
xlat
aam
jle
add
and
pushf
inc
shrb
das
std
ret
std
xor
into
pop
incl
xchg
sub
sbb
dec
mov
or
pop
mov
xlat
mov
test
rorb
mov
dec
jmp
int
sbb
jge
inc
or
int3
sub
in
int
sbb
ficoms
popa
idivl
out
dec
in
hlt
jne
xorl
lea
inc
or
pop
ret
adc
inc
sbb
fsubr
loope
loopne
mov
pop
mov
jle
sbb
ret
push
dec
xchg
xor
mov
sbb
push
ficoms
xor
arpl
fmulp
das
scas
mov
jle
add
test
jg
cld
pop
add
xchg
push
into
imul
mov
mov
faddp
in
enter
fmuls
cmp
jle
das
xor
aas
dec
fiadds
dec
testb
testl
pop
xor
ficompl
cmpsl
jae
rorw
and
test
xchg
sar
xchg
mov
cmp
cmc
in
pop
fisubs
stc
addr16
jp
dec
fisubs
dec
sbb
mov
cmp
and
jbe
addr16
std
aaa
push
icebp
insl
add
sahf
shll
cld
dec
cwtl
ret
and
insl
sub
jno
add
cld
xor
dec
push
test
movsb
jge
lret
fimuls
in
loop
fidivrs
leave
das
nop
cs
push
mov
shl
pop
jp
adc
pusha
idiv
paddd
mov
out
lods
ds
fmulp
movsl
inc
imul
pop
imul
sbb
mov
faddp
xchg
inc
stos
out
lahf
loopne
xchg
shl
mov
ficoms
jnp
int3
insb
add
fidivrs
mov
fidivs
xchg
mov
fiadds
xor
push
and
inc
hlt
pop
pop
test
jno
les
push
mov
lahf
ficomps
fimuls
outsb
sbb
out
pop
mov
sub
js
std
test
popf
dec
and
cmp
outsl
mov
shlb
cwtl
inc
sbb
repz
enter
inc
pushf
adc
xor
stos
sbb
cld
push
jo
rcl
lret
das
mov
xchg
ret
push
fidivs
xor
inc
ficomps
jno
into
fimuls
pop
cmp
add
cs
popa
andl
cmc
repnz
mov
ror
adc
std
push
enter
jb
push
fisubrs
movsl
inc
mov
cmp
and
jl
jnp
xchg
mull
mov
int3
mov
pushf
mov
popf
mov
ficomps
imull
mov
xchg
das
mov
jmp
push
les
je
fiadds
mov
lahf
fisubrs
out
ljmp
test
jl
es
bnd
and
dec
xchg
rcl
mov
lret
sbbb
imull
fimuls
lds
pushf
and
mov
push
or
fsubp
jbe
fsubrl
jge
mov
into
xchg
or
jo
ficoml
add
mov
dec
ja
xor
dec
pop
std
jo
mov
xchg
negb
sti
mov
cmp
iret
xor
xchg
fsubrp
or
add
xor
fistpl
and
std
mov
mov
jle
in
mov
cmp
adc
mov
movsb
inc
jmp
cli
jle
mov
xchg
std
dec
ret
addr16
outsl
and
js,pt
or
fisubs
lods
out
xchg
fisubs
mov
jl
jae
fidivrs
into
movsl
lahf
fildll
jo
rorl
mov
mov
cmp
jno
xchg
mov
decb
mov
fiadds
sbb
nop
aam
and
push
or
sbbl
lock
dec
fdivs
sub
sub
cmp
nop
add
fidivs
pusha
push
mov
jg
call
scas
pop
int
sub
sub
mov
jle
les
mov
mov
div
fsubrp
xor
loopne
ficoms
xor
cmp
lret
pop
fisubs
test
mov
mov
cltd
mov
pop
mov
cmp
cmp
jle
in
scas
movsb
mov
adc
loop
fidivs
add
shll
mov
sbb
fidivs
es
nop
insb
xchg
aaa
aad
in
fiadds
shll
push
mov
jl
repnz
dec
sub
adc
ficoms
bound
jle
shlb
inc
ss
pop
adc
std
test
push
js
ret
mov
fimuls
shll
xor
in
and
das
pushf
incl
xor
jbe
fs
inc
lds
fdivp
and
mov
fisubs
clc
in
xor
insl
lret
xchg
lods
or
gs
xor
aas
in
sbb
mov
jae
jp
jne
and
aad
lret
daa
fidivs
fwait
sub
das
data16
jle
outsl
lahf
mov
std
test
mov
sub
fidivs
idivl
or
pop
pushl
and
stos
dec
push
hlt
mov
filds
jmp
xlat
lcall
mov
mov
push
nop
fidivrs
les
andb
aam
loope
sbb
sub
fwait
lea
fiadds
mov
inc
and
push
pop
leave
ja
outsl
into
xor
pop
imul
or
daa
xlat
or
mov
mov
pop
repz
ficomps
ds
fiadds
pop
mov
mov
sub
in
sbb
rorl
cmc
push
sub
adc
insb
fidivrs
idiv
inc
jae
shrl
ss
loopne
xchg
xchg
xor
fisubs
insl
leave
pop
pusha
inc
in
std
subl
rorl
out
cli
int3
cmp
hlt
push
mov
mov
ficomps
pusha
dec
adc
push
jle
mov
mov
fcompl
js
rcr
xchg
jge
and
pop
pmaxub
push
add
mov
mov
imull
into
imul
push
cli
mov
nop
icebp
sub
fmulp
sbb
cwtl
and
fiadds
mov
inc
fimuls
loop
pop
in
lret
fdivrp
faddl
cmp
out
sbb
jl
sub
test
stos
pop
lds
lods
inc
sbb
orl
cmc
add
sar
out
aaa
cmpb
sbb
gs
movsl
or
jae
adc
jbe
inc
orb
fidivrs
es
pusha
std
xlat
jae
ret
lds
pop
and
popf
fiadds
sti
not
dec
add
imulb
mov
inc
adc
in
mov
mov
sbb
adc
lcall
pop
cltd
ror
aam
cmp
and
faddp
push
jne,pn
out
dec
outsl
xor
shll
and
jns
sbb
outsb
lds
fimuls
and
int
sbb
call
fisubs
xchg
xor
adc
xchg
aaa
sub
hlt
and
ja
aas
push
pop
ficoms
mov
xchg
fimuls
movsb
ds
rorl
xor
aaa
sub
js
ja
mov
inc
push
das
pop
lock
popf
in
lcall
cmpl
sub
jns
xchg
pop
xchg
mov
into
mov
push
add
fstps
lret
jle
and
lods
cli
jp
mov
test
mov
loopne
mov
jg
sbb
hlt
cs
or
pop
orl
leave
cmpsb
mov
aad
sti
mov
mov
xlat
pop
sbb
mov
push
lahf
das
xchg
arpl
or
inc
fadd
fisubs
incl
jge
sbb
push
int3
les
fidivrs
mov
cmp
outsb
int
outsl
sub
int3
test
idiv
jle
scas
or
icebp
mov
or
pushf
xchg
fiadds
repnz
test
xor
call
mov
sarb
inc
sti
fisubrs
call
jmp
out
xlat
repz
aad
cmp
jle
or
adc
mov
mov
mov
in
hlt
std
jbe
int3
fdivs
and
inc
mov
sbb
das
dec
popa
into
stos
mov
cmp
imul
xchg
rcr
jmp
sub
insl
sub
sbb
imul
push
and
test
mov
in
nop
dec
jecxz
fdivp
mov
push
std
ss
lret
aam
aas
arpl
out
push
lcall
push
lea
add
sar
into
clc
lret
or
ficomps
fmulp
add
or
cmpsb
sbb
mov
inc
mov
clc
adc
inc
pop
sub
inc
add
gs
sbb
jg
inc
mov
xchg
fmulp
rcl
dec
bound
mov
out
shll
fsubp
inc
push
mov
std
dec
test
mov
cli
adc
es
adc
cmp
fisubrs
pop
mov
fidivs
mov
fiadds
push
andl
insl
stc
mov
cmpsb
add
adc
scas
push
das
mov
or
push
cld
xchg
fisubs
cltd
sub
jle
and
das
sub
or
sbb
into
push
fwait
pop
sub
cli
push
leave
jo
out
xor
notl
fisubrs
sbb
pop
fisttpll
cmp
adc
mov
and
ficoms
push
aam
sbb
or
ficomps
push
mov
aas
xchg
cwtl
out
pusha
dec
sarl
jnp
fisubs
add
fisubrs
fwait
inc
add
pop
scas
or
xchg
ret
and
loopne
mov
mov
cmc
pop
adc
sti
xchg
mov
fisubrs
ja
pusha
adc
fisubs
vpunpckhqdq
xlat
cmp
inc
jmp
out
stos
out
imul
jnp
mov
mov
sahf
fidivs
lock
cmpsb
shlb
and
stc
psrld
std
outsl
shlb
push
stc
sub
rcr
stc
repz
jmp
push
fisubrs
sub
in
test
lds
lret
sub
sbb
cltd
in
loopne
fsubrl
mov
ret
push
fidivs
ret
pop
jo
sbbl
mov
in
xor
mov
sarb
push
lret
pop
lret
fidivrs
inc
mov
xor
shl
mov
scas
faddp
lret
sub
es
clc
dec
jle
or
fdivs
shlb
sti
fimuls
mov
loop
hlt
add
mov
test
mov
test
dec
je
inc
lret
fimuls
lahf
pop
mov
scas
mov
lcall
rcr
dec
add
cmp
imul
jle
int3
mov
mov
into
dec
xchg
inc
push
cmp
lds
inc
sbb
into
lret
ljmp
iret
test
xchg
fiaddl
mov
adc
xlat
stos
pop
pop
push
aas
adc
pop
and
mov
cs
sub
stc
cltd
sbb
loope
into
iret
bound
leave
clc
or
popf
sbbb
jle
mov
aam
loop
std
in
scas
ss
enter
imul
cld
mov
xchg
arpl
in
mov
cmp
std
fidivrs
jae
fldcw
stos
ljmp
incl
dec
fidivrs
sbb
lods
xlat
aad
mov
aad
insb
outsl
cmp
into
cmovns
scas
leave
xor
ljmp
jae
mov
jle
test
outsb
add
scas
ret
pushf
xchg
adc
aaa
xchg
mov
jl
enter
fisubs
jno
mov
sub
jne
xor
and
lahf
add
jge
push
in
in
sarb
jg
push
fs
frstor
sub
cmpsb
sarl
bound
push
pop
pop
fisubrs
hlt
fildll
cmp
sti
aaa
repnz
dec
ret
les
xchg
sub
cmp
jae
ficomps
aas
pop
inc
repz
popa
es
adc
cltd
lcall
adc
gs
idiv
xor
leave
lock
xor
int3
mov
sub
mov
xchg
dec
fisubs
sbb
sbb
sbb
sbb
out
std
lods
jbe
enter
loop
xchg
xchg
xchg
push
mul
pop
fidivs
push
mov
fcoms
iret
mov
fiadds
inc
js
jo
std
mov
int3
sbb
sbb
roll
cs
fidivrs
add
sub
out
dec
fidivs
pop
lock
cli
mov
sbb
cmpsl
out
les
xor
mov
pop
sub
dec
sbb
gs
mov
aas
cmp
jle
mov
cmpsb
fs
jmp
aad
xchg
sbb
push
mov
scas
mov
lods
fdivrp
cli
das
or
lret
push
add
inc
loope
pop
push
fiadds
into
dec
pushf
pop
xchg
cli
into
lods
push
adcl
push
jb
mov
sarl
adc
push
ja
mov
int
insl
stos
pop
cltd
adc
sahf
stos
sbb
aam
fidivs
push
add
fimuls
imul
ficoms
and
in
xchg
out
xchg
leave
add
ret
xor
push
xchg
mov
push
pop
fstp
pop
je
mov
sahf
cwtl
inc
loope
rorl
ds
xlat
sbb
fisubrs
pop
roll
mov
inc
js
xchg
sub
loopne
rol
das
mov
sub
in
fimuls
inc
incb
add
xor
mov
cwtl
sbb
test
xor
jb
jp
and
call
test
in
fwait
out
adc
icebp
fimuls
fisttpll
mov
mov
loop
cltd
out
inc
pop
shll
fidivrs
je
ror
dec
fsubrp
and
aam
rdtsc
pop
ficomps
ljmp
mov
arpl
sub
pop
sub
test
push
jo
cmpsl
mov
imul
test
xchg
sub
in
leave
pop
mov
xor
mov
or
dec
fidivrs
lods
lea
push
cmc
ret
stos
adc
cld
xor
push
imul
push
jb
cmpsb
enter
fsubrp
movsl
mov
adc
inc
out
insb
pop
push
into
mov
sahf
jae
cmp
cli
inc
std
insb
mov
popf
test
ret
movsb
ja
shl
dec
das
ljmp
je
push
adc
fisubs
aad
sarb
sub
loopne
out
cmp
or
jne
les
fimuls
stos
xchg
mov
daa
ficoms
pop
pop
cmp
and
loopne
or
push
inc
jbe
cmp
insb
sbb
pusha
inc
jnp
ljmp
cmc
test
in
aam
add
and
inc
pop
aad
out
pop
mov
lret
or
fdivrp
sbb
and
sbb
jmp
into
add
shll
fiadds
pop
sbb
fisubrs
push
mov
pop
faddp
mov
dec
cmp
pop
jge
adc
ljmp
jecxz
mov
dec
push
jg
pop
pop
pop
pop
and
push
push
faddp
fidivs
dec
iret
cmp
lods
call
std
sbb
out
xlat
test
into
into
inc
in
fstp
imul
jnp
fsubp
sub
pop
lds
test
jno
ffreep
int3
pop
faddp
and
xor
ficomps
push
mov
jl
imul
lock
lret
stc
fmuls
ficomps
and
sbb
into
xor
add
rcr
mov
in
out
cld
loope
push
shrb
sub
add
pop
xchg
fmulp
data16
aas
rcrb
inc
das
jge
ss
add
decl
ficoms
xchg
jne
inc
xchg
out
dec
cltd
sarb
jecxz
pop
mov
and
adc
data16
dec
mov
pusha
pop
push
stos
inc
enter
mov
in
js
fdivp
sarl
movsb
fisubs
sub
sbb
int
popa
pusha
push
jae
jo
cmp
xchg
outsw
shl
imul
rcrl
add
pop
std
out
push
push
jno
mov
nop
xchg
xchg
in
mov
cmp
shlb
adc
pop
arpl
rcr
push
mov
jo
jle
gs
out
int3
push
lret
pop
push
movsl
and
nop
push
cmpsb
add
scas
xchg
fisubs
inc
pop
cmpsl
adc
xor
pop
fmulp
and
dec
mov
inc
or
mov
loopne
aas
aam
dec
mov
xchg
pop
jmp
aad
cmp
xor
sbb
cmpsb
ret
data16
inc
inc
fisubs
xchg
test
mov
xchg
lret
mov
pop
icebp
fimuls
cmp
mov
mov
xor
movsb
fisubrs
pusha
mov
and
xor
adc
fdivp
push
push
insb
cli
push
stos
xchg
clc
sahf
dec
ret
fcompl
mov
in
shrl
inc
out
jbe
sarb
push
psraw
aad
addr16
fwait
jb
lret
in
arpl
xchg
ror
fdiv
xor
push
aaa
into
fsubrs
pop
pop
add
inc
mov
idivb
test
fmulp
or
mov
sbb
fisubrs
push
mov
push
mov
cmc
xchg
leave
mov
mov
imul
or
aam
insb
lcall
scas
pop
adcb
dec
loopne
rcl
fs
adc
adc
cmp
ret
push
mov
push
inc
pop
inc
popa
test
adc
and
pop
mov
inc
mov
hlt
fldenv
mov
aaa
ficoms
and
movsb
push
bswap
xor
pop
pop
push
iret
xchg
imul
repz
adc
std
sbb
add
jo
out
or
dec
lahf
xchg
in
sub
std
sbb
cmpsb
jmp
in
inc
or
mov
adc
call
fsubp
add
jae
add
rol
into
mov
push
or
jb
push
fiadds
test
movsl
leave
into
call
xchg
out
mov
push
movb
pushf
add
test
jae
movsb
and
js
mov
cmp
imull
pop
mov
fisubrs
push
adc
enter
sbb
lock
out
mov
stos
lcall
enter
testl
sbb
jne
pop
pop
in
add
ljmp
mov
stos
jae
mov
xchg
or
mov
jbe
lcall
ljmp
dec
imul
pop
mov
ficoms
lahf
jns
ja
shl
std
pop
push
adc
xchg
jge
jg
sti
xor
sbb
mov
jo
xor
bound
jle
cmpsl
js
arpl
enter
add
mov
and
das
aad
das
mov
cs
dec
inc
inc
je
or
pop
mov
std
jnp
pushf
mov
jmp
sbb
fiadds
adc
dec
data16
cli
lods
sbb
enter
fnsave
shll
test
and
clc
jnp
iret
popf
test
cmpsb
jg
jle
test
sbb
inc
int
ficoms
int3
cmp
sbb
xchg
popa
notb
xchg
fimuls
xor
faddp
lock
cli
fdivrs
mov
jg
lret
jge
cmp
jns
fiadds
pop
lret
loope
pushf
mov
mov
fimuls
inc
adc
fbstp
lock
cmp
ret
mov
aaa
sub
arpl
repnz
fisubl
xor
jmp
cmp
stos
lahf
int3
pop
sub
std
dec
inc
cmp
mov
fucom
int
jb
push
xlat
or
cld
sub
aaa
lds
imul
inc
addr16
popa
mov
sbb
jb
fcmove
mov
addl
mull
sub
lret
dec
sbb
out
sub
mov
push
iret
sar
and
and
sti
mov
xchg
sbb
inc
aaa
mov
insb
fdivrp
nop
sub
jle
inc
movsb
es
mov
adc
or
arpl
push
scas
sbb
cltd
pushf
pop
fidivrs
push
adc
das
pop
mov
scas
fnstenv
daa
xor
fidivrs
cmovs
das
inc
ficomps
jge
nop
rcr
cli
add
jnp
ds
fmulp
in
aas
outsl
icebp
mov
fsubp
arpl
ficomps
push
inc
xor
int3
inc
sbb
push
pop
dec
mov
inc
xchg
mov
fdivrp
icebp
add
addr16
pusha
lret
inc
mov
pop
cli
lea
fwait
mov
dec
mov
inc
adcl
sub
and
sbb
movsb
push
dec
or
stos
fimuls
stos
sahf
in
inc
cld
sbb
mov
sbb
inc
push
lds
or
fdivp
imul
fcomp
movsl
movsb
xchg
fwait
sbb
jle
in
xchg
mov
mov
xor
fisubs
mov
pop
mov
pop
cbtw
mov
sbb
je,pt
fdivrp
sbb
mov
imul
ficomps
mov
jge
out
into
cmp
out
dec
add
rcr
adc
push
daa
bound
pop
jg
mov
out
inc
jle
add
xchg
lods
fcmovu
ljmp
pop
ret
cmp
call
mov
dec
inc
test
add
cmp
mov
fimuls
sub
cmp
or
int
outsb
aad
and
shll
inc
pop
mov
mov
or
cli
fimuls
push
nop
imul
sub
and
repz
mov
jnp
sub
loope
sbb
sbb
cld
mov
and
xchg
lods
in
popf
stos
pop
fcoml
cmp
shlb
mov
pop
push
fidivrs
lods
xlat
ret
mov
es
or
shll
sub
cmp
cld
push
stos
or
xchg
pushf
inc
cli
fmulp
xchg
addb
popa
out
jle
loop
mov
sarl
add
or
fiadds
iret
outsb
mov
popf
or
notl
jl
fstpt
mov
dec
ficoms
imul
je
loope
fimuls
push
shll
lcall
sub
xchg
cmp
add
sbb
jne
mov
pop
icebp
mov
mov
cmpsb
fimuls
stc
cwtl
mov
lds
test
sti
je
jbe
shr
push
sub
notl
xchg
stos
cmp
push
xor
ret
stos
sub
pop
adc
pop
sets
ja
incb
sbb
pop
std
mov
shlb
test
xchg
ficoms
or
out
ficomps
xor
mov
mov
push
pop
in
or
cmp
rorl
lret
lea
ret
fidivrs
jns
fbstp
fidivrs
mov
and
std
js
fstps
add
sub
ds
dec
sbb
es
fimuls
adc
fmulp
aam
aas
cs
mov
movsl
jnp
mov
mov
cmp
fs
fcomps
std
aaa
imull
orb
xor
or
rolb
push
and
push
jmp
adc
add
jge
pop
inc
push
sti
sub
fdivrs
fidivs
inc
int
fiadds
mov
arpl
loop
pop
ret
shlb
or
ret
xor
ficomps
lods
incl
nop
pop
push
fdivp
addb
jp
cltd
outsl
fs
insb
ficomps
xlat
jbe
lods
cmp
popa
mov
into
sub
push
inc
push
ficoms
mov
sub
lock
int3
call
mov
cli
inc
pop
popa
movsb
shl
movsl
neg
fiadds
and
in
aad
rcl
mov
xchg
push
lcall
jle
mov
xor
push
idiv
pusha
adc
inc
jl
roll
adc
rclb
jle
addr16
lea
cld
stos
nop
lret
mov
mov
fiadds
inc
jbe
fs
dec
ficomps
ljmp
mov
inc
js
cmpl
ja
subb
or
sti
inc
mov
aas
or
cmp
xchg
inc
push
push
aad
xor
jle
sbb
or
inc
nop
fidivs
mov
sahf
fisubs
lret
repnz
cmp
jge
pop
sub
arpl
je
mov
movl
data16
sahf
lret
jne
xor
push
adc
in
cmp
cltd
dec
test
add
ficomps
add
push
nop
in
mov
cmp
inc
push
inc
push
pusha
movsb
mov
movsl
ror
in
mov
inc
ficomps
xor
jbe
fcomps
push
jg
pop
inc
in
and
mov
and
sbb
std
add
add
or
ficomps
add
mov
cmpsb
mov
mov
sarl
int3
jb
sub
push
out
movsl
jno
pushf
sahf
and
scas
nop
imul
ret
sbb
loopne
out
ror
lods
add
fidivs
inc
out
adc
insl
fs
inc
mov
dec
test
ficomps
mov
adc
out
xor
jns
add
jecxz
mov
mov
jmp
xchg
fsubp
cmpsb
mov
push
fisubs
nop
sti
jno
xlat
outsl
dec
pop
sbb
adc
inc
mov
nop
repz
and
cmc
fidivrs
sub
sbb
into
addr16
nop
scas
sbb
shrb
cmp
cmp
pop
enter
push
fidivs
mov
ja
in
xor
cmc
mov
inc
roll
aas
xchg
fidivrs
dec
push
add
inc
or
jbe
cmpb
bound
pop
lea
imul
repnz
fisubs
js
in
fimuls
popf
imul
add
rorb
dec
sbb
jge
into
inc
sbb
mov
push
mov
int
lcall
push
stos
cmp
inc
sbb
in
jmp
xchg
mov
fisubs
xchg
inc
push
cmp
fdivp
jno
sub
or
int3
ficoms
test
out
pop
sahf
inc
test
ficoms
in
mov
fmul
fildll
push
movsl
stc
pop
fdivp
inc
jno
mov
pop
sbb
fcmovb
popa
xchg
mov
mov
xor
mov
into
add
jmp
js
and
insb
pop
clc
pop
dec
mov
mov
cmp
ret
test
fidivrs
movsl
cmp
mov
adc
xor
cmp
mov
or
mov
mov
xor
and
push
ss
mov
gs
mov
pop
out
cmp
fcmovu
into
jno
xchg
sub
jle
jnp
dec
stos
jmp
push
clc
cmpsb
inc
pop
mov
jno
cmp
filds
push
inc
aaa
add
rcr
sbb
push
cmp
xor
ret
fdivp
or
xor
ss
lock
fimuls
inc
add
jge
push
gs
icebp
or
popa
in
jg
jp
loope
lods
pop
fmulp
inc
dec
repnz
and
jp
pop
imul
lcall
ret
repz
adc
in
std
pop
jle
sbb
cmp
call
and
mov
shufps
ljmp
pusha
stos
out
fiadds
jmp
mov
xchg
lds
hlt
xor
cmpsb
int3
faddp
and
sub
sbb
mov
push
dec
push
std
sub
xchg
lock
mov
in
hlt
scas
shrl
jle
clc
lods
push
cmp
andl
addb
test
jg
nop
jbe
or
sub
dec
in
pushf
aas
lret
ss
xor
adc
jb
mov
dec
adcl
sbb
dec
fidivs
xor
xor
icebp
orl
fs
pop
jnp
frstor
mov
push
add
sahf
sub
or
gs
push
lret
incb
jmp
sub
lds
xor
dec
xchg
loopne
adc
mov
bound
and
mov
adc
cli
rcrb
mov
cld
pop
into
mov
scas
dec
mov
pop
pop
in
mov
cmpsb
cld
in
fsubp
shl
fmull
push
fcmovne
jbe
mov
push
ffree
push
push
jg
sbb
push
call
cld
popf
fsubrs
add
out
jnp
xchg
xor
negb
pop
std
rcl
lahf
test
popf
in
out
mov
cld
lea
mov
ljmp
das
pop
xorl
fisttps
jle
push
sar
bound
cld
pusha
icebp
aad
mov
es
push
ljmp
daa
aam
dec
int
pop
push
addr16
push
lcall
lods
pusha
scas
pop
dec
push
imul
rorb
neg
xchg
pop
pop
cmpsb
xor
fcoml
pop
int
jge
rcll
add
nop
mov
cmpsb
ss
mov
dec
rorb
xchg
pop
dec
add
out
divb
ficoml
lret
jl
movsb
aas
jle
imul
push
lcall
orl
adc
popf
sbb
out
pushf
es
popf
call
cs
dec
inc
dec
fsubp
roll
call
cmpsl
sub
pop
js
insl
lods
sbb
push
lods
push
lea
int
in
ficoml
stos
cmp
adc
add
xchg
jmp
loope
inc
mov
xchg
push
pop
pop
jns
adc
adc
shll
or
mov
fsts
stos
xchg
int3
push
outsb
add
shll
add
fdivs
fcomp
push
pop
or
fcom
xchg
mov
int3
cld
or
aam
shl
inc
xor
lahf
loop
lock
sub
mulb
mov
or
ds
popa
aam
repz
shr
sbb
inc
int3
lods
or
rcrb
shll
mov
les
mov
xchg
stos
je
xchg
mov
shlb
mov
rcll
push
pop
cs
cwtl
inc
pop
and
lret
mov
insl
cld
ljmp
jle
mov
push
dec
mov
aad
mov
mov
mov
pop
mov
fcompl
stos
icebp
pop
xlat
xchg
jno
or
pop
repz
imul
push
rol
shll
mov
push
pop
jb
xchg
inc
inc
lods
daa
jb
xchg
sbb
inc
pop
pop
fsubrl
cwtl
mov
sbb
push
fildll
sahf
push
pusha
mov
dec
mov
nop
pop
outsl
add
daa
cmp
mov
mov
sub
push
ljmp
rcrl
leave
scas
fucomp
outsl
sarb
rorl
int
xor
fimuls
cs
pop
aam
cmp
insl
popa
xchg
repz
pop
cmp
mov
push
mov
mov
pop
lret
loop
fs
dec
popa
rorb
pop
mov
popf
fisubs
mov
cld
leave
adc
out
jle
sbb
push
and
fstpt
notb
cli
mov
xchg
push
sub
jle
imul
scas
ds
jbe
xchg
xor
and
test
shll
inc
sbb
pop
xchg
sub
aam
lock
jle
outsl
xchg
shlb
inc
mov
jne
shll
mov
pop
pop
scas
cmp
xchg
fldcw
test
mov
inc
in
sar
outsb
lcall
push
sahf
rolb
or
clc
mov
std
shrl
jbe
mov
xchg
in
fldl
xchg
rclb
mov
lods
push
movsl
or
cmp
jbe
pop
push
outsb
fidivrs
and
jg
push
mov
xlat
or
mov
and
imul
pop
xchg
pop
mov
xor
dec
popf
lods
push
lret
xchg
push
movsb
xchg
roll
adc
sub
push
mov
sbb
adc
mov
incl
lds
aam
fldcw
pop
divl
dec
sarl
mov
dec
insb
les
mov
inc
rorb
adc
ja
cmpsl
cmpb
add
pushf
popf
shl
imul
pop
add
add
xchg
inc
leave
dec
sub
fnsave
loop
rcrb
xor
xor
dec
inc
ret
shlb
mov
add
shrb
jge
adc
pop
cmpsl
pop
insl
ljmp
mov
lods
insl
dec
fadd
movsl
add
aam
fistpl
xchg
je
loopne
sbb
mov
xor
test
fsubs
jae
and
mov
mov
int3
imul
ret
aaa
push
imul
pop
dec
jge
lahf
or
pop
aam
sarl
jo
inc
int3
imul
cmp
stos
lahf
pop
lods
mov
rorb
adc
mov
in
pop
sbb
daa
fisubrs
ror
jb
shrl
mov
adc
add
int3
sub
add
sbb
sti
sub
or
mov
mov
and
mov
pop
test
nop
stos
fmull
arpl
dec
xor
mov
or
mov
in
notb
insb
mov
mov
mov
add
jl
mov
pop
jle,pn
stos
mov
aas
jecxz
ret
push
leave
es
sub
pop
adc
mov
add
inc
dec
adc
jns
ficoml
movsb
fadds
mov
lret
xor
pop
in
jmp
mov
shrl
fildll
adc
dec
fninit
sbb
aaa
push
sbb
dec
pop
pop
push
pop
int
sarb
insl
jns
clc
and
subl
frstor
mov
shlb
fwait
dec
pop
xor
pop
cwtl
lods
imul
push
ffreep
lods
gs
mov
sbb
sub
lods
jne
in
out
add
rcrl
cmp
push
xchg
imul
lret
adc
inc
push
pop
push
xchg
mov
pop
adc
jns
ret
jle
rcl
cltd
orb
cmp
push
mov
mov
test
fmul
xor
cld
mov
lret
rorl
jnp
lods
sbb
fxch
mov
int
loope
or
cmpsl
mov
jl
sub
out
dec
fwait
jmp
mov
mov
sub
mov
mov
dec
xchg
push
sub
into
les
js
imul
insl
mov
pop
sbbl
pop
popf
and
loop
pop
jno
cmpsl
sahf
xchg
mov
cmp
leave
push
sbb
nop
and
mov
std
les
cmc
mov
sbb
fnstsw
rolb
adcl
aas
and
outsl
arpl
rolb
mov
inc
insl
pop
mov
fisubrl
sarl
cmpsb
sbb
cmpb
jnp
mov
xchg
push
lcall
add
lods
pop
xchg
into
sarl
je
pushf
xchg
js
mov
fdiv
mov
bswap
fld
testl
xorb
sahf
mov
call
ss
add
dec
dec
mov
movsl
insl
jmp
jl
cld
jge
fs
jo
fiaddl
push
xchg
cs
and
stc
dec
out
push
jne
jb
pusha
insl
mov
mov
xchg
dec
movsl
pop
nop
aas
pop
inc
outsl
ficomps
addr16
jg
aad
cs
cmp
adc
xchg
aad
testl
cld
in
fmuls
int3
xchg
fiaddl
sub
imul
sbbl
xor
push
lods
xchg
je
cmp
and
pop
daa
imul
push
fcoms
out
repnz
mov
mov
scas
int3
fsubs
xlat
shrb
mov
mov
xor
int3
aam
inc
lea
les
pop
dec
add
xchg
add
sbb
in
rcrb
lret
jge
mov
jo
into
aad
rclb
push
sbb
pop
sbb
sbb
pop
jmp
adcl
inc
fsts
push
js
mov
pushf
xlat
movsb
mov
and
sub
stos
shr
xor
or
adc
sbb
lret
xchg
ss
mov
in
movsl
mov
xor
std
push
pop
adc
and
pop
pop
repnz
in
push
sbb
std
into
sbb
mov
jl
iret
mov
lret
fsubl
cli
adc
pop
adc
out
inc
je
int3
je
add
fimull
cld
adc
jg
add
test
int3
or
cs
pop
fcomps
shr
adc
xchg
mov
or
adc
rcrl
push
pop
mov
test
adc
and
scas
xor
xor
rorl
xor
std
fsubl
sahf
ss
mov
adc
aam
fsub
or
sarl
in
insb
lods
lret
js
popf
adc
jnp
lret
cltd
into
jno
mov
sbb
inc
fdivl
fst
ja
adc
fcomps
mov
cwtl
ljmp
int
jo
rcrl
cwtl
aam
out
jae
fidivs
mov
sbb
call
fdivr
scas
xor
in
mov
sarl
fists
cmpsb
xchg
int3
mov
lret
adc
leave
dec
loope
push
adc
inc
and
jg
hlt
ficoml
leave
popa
xchg
pop
fiadds
adc
fnsave
loopne
stc
pop
cld
insb
inc
rcrl
sarb
jg
fisttpl
repz
or
add
or
sarl
cmpsb
nop
jmp
or
int3
mov
adc
lods
xchg
push
imul
cmpsb
outsl
mov
daa
rorl
scas
cmp
inc
or
xlat
jbe
jl
dec
add
mov
test
push
jo
push
outsl
addr16
pop
cld
outsb
popf
jle
mov
mov
insb
xchg
in
adc
and
add
lret
and
cmpsl
push
mov
mov
out
and
rorl
clc
int3
sub
lahf
test
mov
jle
fstpl
pop
in
sub
insb
mov
rep
add
sbb
aad
pop
push
gs
and
lcall
mov
dec
cld
sub
rorl
jge
movlps
push
push
aas
mov
add
inc
adc
inc
cmc
sbb
mov
sbb
repz
pop
repnz
jg
mov
nop
fmull
stos
je
pushf
test
les
movsb
aas
daa
pop
std
popf
push
fdivrl
sahf
pop
out
jb
xchg
enter
cltd
pop
or
out
shll
repz
stos
inc
and
mov
mov
cwtl
or
adcl
xchg
sub
mov
mov
pop
sub
adc
mov
cmp
ret
mov
mov
jb
loopne
adc
mov
les
out
mov
pushf
pop
fstps
jb
push
dec
sbb
addr16
inc
pop
rorl
insl
test
adc
sub
popf
call
repz
push
aaa
cltd
sti
fstl
int
pop
ficoms
je
fisttps
dec
push
pop
into
fcompl
repnz
shll
sbb
jl
scas
insl
dec
jg
rcrb
jg
adc
sbb
sbb
xor
add
iret
lea
sub
mov
xor
fimull
aad
and
shl
adc
scas
out
imull
mov
lods
out
xchg
dec
xlat
and
mov
cmp
adc
mov
lret
xchg
jnp
mov
shl
lret
mov
shr
sub
jmp
aas
jp
shll
push
out
fwait
insl
mov
pop
inc
movsb
cmpb
and
dec
jns
pop
dec
lods
xor
pop
cld
andl
pop
shlb
mov
stos
cmp
xor
jb
subb
repz
push
pop
test
xlat
push
cmp
pop
dec
call
leave
lahf
fstpl
rcl
popa
pop
out
dec
mov
cs
pop
inc
fwait
and
loope
sub
scas
cmp
mov
sarb
jl
aas
les
shll
and
test
ret
cmp
lahf
xor
push
cld
aam
or
lahf
repz
clc
es
icebp
lahf
sbb
mov
sbb
adc
cmpsl
repnz
sbb
rcrl
sbb
punpckhdq
in
mov
pop
or
int3
or
insb
jl
stos
lds
mov
cltd
xchg
lods
data16
cmp
cmp
roll
fsubrp
fiaddl
nop
mov
shlb
stos
fiaddl
mov
sahf
je
shrl
mov
inc
stc
dec
enter
insl
and
out
mov
popf
cltd
movaps
mov
aaa
lods
pop
push
imul
loop
xchg
pop
lcall
cmpl
mov
mov
dec
lret
lods
cmp
dec
jmp
fmull
push
jge
movb
xor
pop
sub
int3
and
lret
mov
pop
cmc
int3
jae
in
push
shll
push
xchg
outsl
into
push
pushf
adc
mov
xor
imull
loopne
lret
cld
bound
scas
pop
aam
push
das
movsl
outsb
rcrl
std
mov
mov
insl
lods
mov
popf
or
fcomp
inc
jbe
xchg
hlt
mov
push
movsb
aam
push
bound
adc
mov
pop
rcrb
mov
clc
scas
fildl
jmp
or
dec
mov
or
leave
jp
inc
adc
aad
pop
mov
mov
cmc
jge
cmp
push
bound
push
int3
xlat
mov
stos
insl
sbb
pushf
add
dec
xor
in
leave
mov
mov
jg
aam
dec
shlb
lods
mov
mov
je
shll
sbb
leave
jl
sub
imul
jnp
movsl
ja
pop
mov
int3
xchg
dec
mov
shrb
pop
int
lret
fcmovu
aaa
cmp
sub
lods
xchg
adc
rclb
mov
call
orl
pop
repnz
fistpll
dec
mov
jg
inc
mov
pop
dec
pop
fisubrs
jnp
or
mov
in
test
ljmp
pop
adc
inc
mov
or
dec
adc
movsb
xchg
xchg
ret
jnp
mov
in
lcall
aaa
xlat
sbb
imul
pop
notl
movsb
add
pusha
jno
xor
mov
adc
mov
rcll
cmp
mov
sub
lret
lcall
loope
fidivl
mov
lret
stc
out
mov
or
pop
mov
push
imul
add
fs
rcl
cmp
test
pop
mov
call
movsl
mov
or
or
lods
pop
pop
fwait
sarl
dec
jne
push
dec
jnp
lahf
pop
mov
fldl
movsl
lods
xchg
js
mov
inc
xor
mov
add
jge
fistpl
mov
inc
sub
dec
repz
pop
cmpsb
dec
rcll
repnz
mov
lock
dec
jo
cmpsb
add
shl
repnz
pop
int3
in
mov
aas
adc
aad
jae
push
bound
cmpl
imul
jae
push
lea
test
push
xor
or
xchg
jns
and
push
es
pop
lods
adc
mov
dec
aam
loop
insb
mov
and
add
sbb
daa
or
pop
pop
pop
xchg
dec
push
sahf
xchg
sahf
ja
inc
and
sarl
rorl
aad
lods
js
pop
outsl
and
and
das
movsl
mov
insb
jge
sub
fisubl
ss
dec
shr
push
dec
mov
fldcw
cmp
jmp
imul
ds
popf
push
sbb
std
mov
push
cli
nop
lods
xchg
mov
addr16
mov
roll
push
js
fs
mov
xchg
les
adc
leave
fnstsw
pop
pushf
xor
in
repnz
in
xlat
push
inc
fisubs
fs
imul
adc
stos
pop
cld
fldt
rcr
lods
dec
or
xchg
int
popl
rcl
stos
test
jl
push
push
mov
ljmp
dec
in
ss
add
inc
cmc
mov
lds
xor
sub
ret
lock
dec
mov
sbb
aam
fsubr
adc
xchg
lcall
mov
cmc
scas
push
gs
imul
movsb
cmpl
cld
push
sahf
scas
xchg
subl
insb
inc
stos
std
pop
cld
in
fdiv
sbb
adcb
xor
jg
xchg
jb
jge
adc
mov
inc
jne
xchg
popa
std
dec
test
fiaddl
shr
add
push
cmp
mov
orl
push
mov
adc
jge
pusha
add
xchg
mov
shll
mov
mov
test
push
sarl
mov
mov
lret
mov
popa
cmc
into
mov
cmp
jb
add
add
fwait
imul
sub
sbb
xchg
xor
sti
dec
aad
ds
xchg
mov
mov
xor
test
int
adc
dec
mov
mov
pop
test
or
mov
pop
aaa
inc
repz
mov
mov
jne
rorb
gs
cmpsl
sbb
sub
sbb
mov
inc
imul
cld
dec
cmpsl
jmp
jl
push
orb
lds
fs
xorl
inc
adc
add
data16
pop
pop
cmp
aas
inc
pop
call
int
ficompl
int
inc
push
xor
in
push
cmp
mov
sub
cmp
pop
cwtl
add
and
cs
pop
into
mov
aad
xchg
pop
xor
dec
add
ficompl
push
and
cmp
mov
jmp
mov
pop
add
popf
jp
push
repnz
aaa
outsb
mov
lds
sbb
jecxz
in
fistl
jae
cmp
dec
outsb
push
sub
lds
push
fcomps
jne
int
push
fxch
lods
adc
shrb
scas
mov
fsubrl
mov
mov
jp
add
inc
xlat
sahf
insl
dec
push
mov
push
and
push
inc
int
push
mov
add
sahf
rcrb
jns
cmpsl
lods
movl
test
xchg
mov
stos
or
frstor
jnp
lret
movsl
lret
push
jae
into
repnz
aad
push
pop
int3
sbb
cs
leave
roll
mov
jg
sub
push
fistps
pop
lods
in
pop
cld
mov
inc
add
and
mov
fsubrl
outsb
das
test
cmpsl
test
mov
inc
mov
aaa
push
insl
loopne
es
arpl
int
sarl
cmp
cmp
sarb
cmp
aam
cli
pop
int
cmc
mov
xchg
iret
dec
adc
push
lock
clc
daa
cltd
fidivs
mov
pushf
jecxz
sti
pop
sbb
test
call
test
adc
inc
xor
sub
cmp
sub
fisttps
lock
fimuls
jle
inc
inc
mov
inc
dec
sbb
mov
and
and
mov
mov
dec
aaa
mov
mov
pusha
rcrb
aaa
scas
std
mov
sub
aas
ret
fiaddl
push
pop
xchg
xor
mov
mov
xor
scas
mov
and
ss
dec
adc
int
xchg
push
vandnps
pop
push
aaa
mov
repnz
dec
sbb
cld
mov
dec
and
je
mov
xchg
sbb
pop
movsl
pop
fxch
fwait
outsb
pushf
shlb
ds
mov
popf
and
frstor
lret
xchg
pop
icebp
push
pop
mov
push
lahf
out
jp
mov
outsb
icebp
or
mov
xchg
cmp
pop
and
dec
push
cmp
mov
sub
pop
gs
push
nop
not
mov
rclb
mov
dec
ljmp
dec
adc
shll
pop
mov
push
fcoml
dec
mov
rorl
jne
in
fwait
test
dec
in
mov
mov
cltd
dec
adc
test
into
pop
cs
lret
mov
iret
insl
sub
je,pt
mov
or
aas
cwtl
mov
js
in
push
cld
ljmp
push
sbb
mov
push
push
or
js
notb
popf
rorl
adc
adc
jecxz
rcl
pop
shll
push
pop
into
in
pop
scas
mov
outsl
pop
inc
jnp
mov
rorl
mov
and
sub
lods
js
dec
or
aaa
sub
push
xor
inc
sti
pop
mov
imul
xor
mov
push
jp
scas
lock
pop
pop
ret
or
jmp
les
rol
adc
xor
push
push
push
mov
xor
cs
aam
sub
sbb
sub
adc
sbbb
pop
sub
xchg
andb
sbb
daa
xlat
mov
cmp
scas
push
jmp
lods
cmp
sahf
imul
clc
cmpb
jns
scas
es
subl
clc
xchg
testb
add
cmp
push
pop
ljmp
int
ret
xchg
jbe
cmpl
adc
lret
daa
xor
dec
push
ffree
pop
pop
jae
jmp
sbb
mov
xor
rcll
mov
and
fistpl
arpl
xor
push
lods
cmp
xchg
sub
sub
fnstenv
and
rcrl
rcrl
xchg
inc
mov
pop
divl
sbb
out
fisubl
sub
cmpsb
mov
daa
or
roll
test
and
mov
jge
gs
inc
jno
and
and
rorl
test
addb
lock
rorl
push
mov
mov
idivb
jne
dec
and
mov
xor
mov
push
int3
es
and
test
xchg
fcmovb
xlat
mov
dec
outsb
daa
lcall
arpl
or
fisubl
out
int3
cmp
int
out
xor
es
cld
icebp
int
in
and
shll
mov
push
movb
rol
frstor
out
sti
jne
stc
xor
clc
nop
mov
mov
test
aaa
stos
sar
sub
sbb
mov
jp
scas
adc
mov
imul
jg
out
aam
leave
insl
mov
xchg
mov
jnp
ljmp
sub
add
stos
repnz
pop
cmp
and
into
out
scas
mov
adc
insb
pop
rcrl
lods
test
add
jmp
mov
pusha
popa
dec
mov
jl
mov
xlat
pop
pop
aad
lods
push
fcompl
mov
test
sbb
jl
mov
jle
or
ficoml
std
hlt
pmaddwd
mov
xchg
movsl
sub
or
cmpsl
mov
inc
pusha
imul
mov
sahf
mov
cld
repnz
pop
and
rclb
pop
and
rcrb
js
imul
ljmp
push
jl
dec
pop
std
in
stos
les
xor
xchg
out
ljmp
aas
push
add
mov
sub
cltd
jmp
repz
hlt
sahf
lcall
sarl
int
sub
out
add
dec
cs
or
lcall
inc
inc
jmp
push
xor
fdivl
sub
stc
mov
inc
xor
push
fcompl
cmp
mov
scas
lods
aas
daa
aas
pop
fstl
lods
pushf
adcl
sub
frstor
incl
mov
ds
pop
or
push
and
mov
pop
fcmovu
repnz
xchg
out
inc
sub
pop
cli
roll
jg
jle
sub
rcll
cmpb
pop
sbb
dec
lods
mov
mov
push
int3
xor
cmp
sar
inc
mov
sbb
sti
lods
test
rclb
scas
movsl
cmpsl
mov
xchg
pop
icebp
divl
fdivl
xor
pop
int3
das
jecxz
stos
ljmp
lea
mov
pop
sti
jne
jmp
and
aas
mov
xor
cld
lea
xchg
pop
outsb
pop
sub
mov
adc
shll
cmp
and
sbb
outsb
mov
jno
into
mov
inc
scas
sbb
sub
mov
lret
xchg
rclb
ljmp
cmpsb
mov
pop
rorb
add
and
out
movl
popf
adc
lds
dec
lods
adc
arpl
rorb
negb
adc
bound
adc
push
pop
push
je
popf
rolb
pop
xor
xor
popa
daa
mov
enter
sbb
out
shl
sub
lods
lea
pop
repnz
cltd
sub
shll
mov
out
pop
adc
aaa
insb
imul
adc
rcrb
and
fcomps
fwait
roll
arpl
adcb
dec
xchg
inc
vpackssdw
fbld
repz
pushf
or
push
push
jb
dec
sbb
push
insb
sub
cmpsb
add
jg
lods
jns
das
jno
popf
fcoml
enter
jg
insl
pop
aad
test
inc
adc
xor
mov
sti
push
inc
fnstenv
icebp
jne
sarl
es
add
pop
jl
mov
mov
jo
sbb
lods
cmpb
pushf
sub
cli
jl
mov
fcmovb
pop
jnp
fcom
mov
mov
push
lods
iret
imul
dec
stc
ret
mov
mov
or
decl
insl
dec
int3
push
lcall
roll
cltd
lds
adc
ss
dec
cmpsl
into
ljmp
lcall
or
fisttpll
xchg
imul
cmp
rorl
jle
ret
push
shr
jne
adc
jmp
enter
lahf
daa
les
fimull
rcl
push
sbb
pop
cld
mov
or
push
sbb
mov
push
add
popf
fadds
xchg
ja
ficoml
movsb
mov
add
loop
fdivs
cs
sbb
mov
fiaddl
pushf
fcompl
stos
push
inc
sub
divl
jbe
mov
xchg
jl
mov
dec
jae
int3
xor
movsb
lea
rcll
out
call
or
shlb
push
sbb
fsubrl
pop
jne
inc
jge
sbb
cmp
mov
mov
repnz
cmp
dec
pusha
aad
bound
andb
nop
jle
and
jne
pop
xlat
movsb
sub
dec
add
ss
loope
add
pushf
lods
bnd
mov
pop
std
mov
mov
into
insb
ja
fisttpll
movsl
call
adc
jbe
jae
sub
into
into
sub
out
movsl
in
pop
adc
cmp
dec
aad
xor
ds
lcall
xchg
into
sub
clc
mov
mov
das
es
cmp
popa
loop
mov
fwait
sbb
movsb
sbb
insb
loopne
pop
xlat
shrl
pushf
inc
je
add
dec
cmp
mov
sbb
push
cld
or
xor
fsubl
jae
fidivrl
jns
gs
shl
shlb
add
mov
mov
cmp
xchg
and
movsb
sbb
enter
jbe
xchg
xor
mov
sub
xchg
jg
adc
pop
sbb
push
mov
xchg
aam
jb
sub
pop
in
add
cmp
dec
mov
push
rep
aas
fs
push
das
lcall
and
inc
push
xchg
inc
cmp
mov
in
cmp
sti
jne
mov
or
jb
lods
ret
into
push
rorb
fcmovb
cmpsb
roll
or
rcr
aas
decb
adc
leave
inc
add
mov
pop
jbe
shll
and
out
ljmp
out
xor
cs
xchg
pop
pushf
mov
loopne
fcoml
and
sti
xchg
xchg
jle
mov
movsl
mov
mov
inc
mov
xchg
hlt
je
lahf
mov
dec
xor
leave
add
shl
mov
fbld
dec
loop
std
add
into
inc
jge
fsubl
pushf
jae
inc
xchg
inc
xor
lahf
insb
ss
push
add
stos
aad
jmp
mov
dec
mov
sbb
cli
rcrl
addr16
iret
rol
mov
jge
cld
sub
cltd
xchg
mov
jnp
push
insb
push
jle
and
xor
push
and
mov
adc
mov
sti
scas
cli
pushl
pop
mov
push
lahf
cmp
stos
lahf
cmp
add
das
xor
test
int3
jne
jne
lods
mov
jnp
lods
aam
int3
mov
adc
shrl
hlt
or
out
mov
mov
shlb
push
pop
outsl
adc
mov
jne
std
xor
int3
sub
push
cmp
gs
mov
pushf
xchg
xchg
pop
shrb
ror
pop
mov
lods
jno
dec
fdivrs
adc
pop
ss
lret
jne
lds
cmp
fmul
es
inc
xchg
xor
sub
scas
sbb
imul
mov
push
pop
dec
or
fwait
push
jl
xor
shlb
ficomps
inc
test
roll
cmp
addr16
sahf
fimull
dec
push
or
popa
cmp
xchg
sbb
jmp
fmull
fcmovnb
xchg
mov
jae
loopne
rcrb
and
into
icebp
and
pop
mov
jg
dec
fstps
xchg
push
sub
shll
push
sbb
lds
mov
cmp
jne
dec
xor
rcl
pop
pop
int
cli
clc
test
popa
sub
jg
shrl
jno
mov
pushf
sbb
gs
or
adc
rcl
sbb
cltd
and
das
jl,pt
cmp
into
lret
xor
orl
sti
fisubl
and
mov
clc
mov
jb
das
inc
adc
cmpsl
jbe
dec
lods
xchg
cld
pop
testl
fisubrl
xchg
push
movsl
sub
les
adcb
mov
sti
and
cmp
cmc
pusha
sub
cs
in
lcall
or
mov
mov
testl
adc
test
sbb
cmc
pop
rclb
fdiv
enter
in
cmpsl
cmp
xlat
xchg
or
dec
push
pop
cmp
jp
inc
dec
cmpsl
sti
jge
push
jg
pop
adc
shll
cwtl
lcall
adc
cmpsl
les
shrl
push
loope
xlat
gs
push
xor
or
xchg
fimuls
xchg
pop
lret
hlt
adc
xorb
dec
sbb
sub
xchg
lret
cmp
arpl
daa
shrl
sbb
dec
pop
adc
and
pop
lret
pop
dec
cmp
lahf
dec
inc
fadd
add
decb
adc
sarl
mov
daa
push
jae
mov
lahf
int3
pop
pop
pop
in
push
loop
lods
arpl
push
xchg
adc
fisubs
adc
loopne
adc
push
inc
icebp
dec
lods
push
xchg
lahf
pop
out
fisubs
test
jae
adc
mov
lods
push
test
shrl
int3
cld
adc
cmp
fadds
jmp
xchg
xchg
adc
scas
sub
adc
inc
xchg
aaa
jl
sub
inc
ds
dec
dec
inc
mov
fdivl
fisubs
mov
rcrb
sub
jge
cmpsb
je
or
out
push
fsubrl
cmc
pop
call
xor
cltd
jae
popa
jg
jecxz
lret
pop
push
jae
call
out
push
lcall
pop
push
lea
dec
jl
and
push
dec
rcrl
lahf
pop
and
out
dec
xchg
jae
test
and
jno
ret
not
pop
adc
jbe
adc
mov
xlat
insb
push
xchg
cmpb
outsl
pop
or
test
xchg
xchg
mov
int3
push
pop
ror
inc
cmp
ret
scas
dec
mov
mov
jo
push
mov
sbb
sub
pusha
movsb
mov
stos
push
mov
ffreep
je
int3
add
leave
into
sahf
fnstenv
xor
adc
push
pop
push
mov
daa
sub
cld
fcoml
pop
cmp
lret
xor
cmp
xor
daa
pop
jns
add
mov
pop
mov
jmp
fwait
cwtl
sbb
jbe
push
cmpsb
aas
dec
rorl
jp
shrb
mov
mov
sub
lret
xchg
add
fsubr
pushw
dec
xchg
data16
lods
lods
sahf
scas
dec
ja
js
add
lahf
call
mov
mov
pop
jge
adc
push
mov
push
shll
dec
cmp
stc
mov
pushf
jns
cltd
pop
lods
mov
les
cmp
fildll
movsl
sbbl
ss
add
jl
popf
xchg
jg
test
test
mov
dec
adc
xchg
mov
cmp
clc
sub
lret
mov
inc
jl
inc
cs
popf
sbbl
std
sti
imul
sub
mov
jl
mulb
movsl
xlat
stc
adc
mov
adc
js
xchg
popf
jecxz
push
scas
sbb
ss
xor
stos
mov
mov
xchg
push
mov
push
rclb
and
clc
cwtl
aad
push
in
jge
mov
pop
fcoms
rcrb
cmp
test
adc
xor
pushf
cmp
enter
pop
mov
imul
out
enter
mov
iret
test
pop
les
inc
cmp
stos
xchg
jl
fstps
lods
jecxz
bound
test
in
loope
je
jns
loopne
or
cmp
pushf
addb
jnp
pop
mov
lods
inc
data16
push
in
pop
addr16
sarb
fdivl
loope
stc
mov
push
sahf
int3
inc
rol
ja
lea
xor
jp
lods
imul
jmp
shr
jbe
adc
adc
lahf
inc
fimuls
fstpt
dec
cmp
rolb
dec
sub
mov
add
or
shl
mov
arpl
mov
cmp
add
sbb
sbbl
hlt
mov
adc
push
mov
push
rclb
xchg
ret
call
and
xchg
les
fdivrl
outsb
rclb
add
jmp
pushf
stos
in
dec
repnz
imul
xchg
push
xor
jns
xor
inc
mov
es
sub
jmp
stos
mov
lods
ljmp
scas
cld
rcrb
pop
sub
mov
pushf
mov
xchg
orl
shll
sbb
hlt
push
int3
add
dec
xchg
add
and
movsb
sbb
cs
out
addr16
ret
in
fs
jmp
jl
xchg
lret
cwtl
test
pop
or
aam
cmpsb
jl
movsb
repnz
mov
mov
push
pop
mov
jne
mov
jae
add
push
mov
pop
cmp
sub
mov
sbb
pushf
mov
rcr
jp
add
push
jmp
clc
inc
sarl
xchg
push
push
mov
shll
fists
pop
or
sbb
dec
fmul
rcrl
imul
xor
sbb
pop
fdivrs
fiaddl
or
add
jle
jp
jne
fcoml
lds
fsubrs
or
shll
in
push
inc
out
add
adc
pop
in
aaa
aam
shlb
pushf
xchg
loop,pt
aas
cli
dec
dec
test
sar
inc
pop
sbb
mov
sub
dec
out
pop
stos
call
and
inc
mov
aam
xchg
xchg
daa
mov
pop
push
push
ja
mov
std
js
pop
lahf
orb
mov
fsubrl
adc
cmp
rol
push
push
jge
int
dec
shrl
addr16
lds
sub
cmp
scas
rcr
push
les
insb
fimuls
outsl
dec
pop
xlat
sarb
jecxz
lahf
movsb
ds
inc
lcall
movl
insl
push
mull
mov
xchg
dec
push
pop
dec
fwait
xor
cmpsl
adc
or
icebp
gs
xor
mov
mull
xchg
repnz
sbb
shl
rcrl
and
push
movsb
mov
and
mov
mov
stos
sbb
xchg
aas
stos
iret
lahf
add
xor
clc
sub
xor
in
hlt
subl
cmp
hlt
pop
in
out
ljmp
fidivl
into
mov
sarl
mov
mov
sbb
fimuls
jb
pop
sahf
rcrl
movsl
lock
inc
popf
dec
das
int3
int3
std
mov
and
sbb
lcall
push
cmpsl
push
shll
out
arpl
aam
out
jl
push
dec
fdivrs
mov
shll
pop
hlt
xor
repnz
pop
cld
aas
adc
dec
cmp
pushf
dec
mov
sahf
lea
fwait
mov
dec
fistps
mov
inc
push
insl
sbb
push
push
shlb
cltd
aam
jmp
icebp
in
mov
cltd
jne
int3
mov
inc
xor
and
pop
lock
and
pop
lds
xor
lods
push
jnp
mov
shrl
lods
push
lret
or
pop
ljmp
jecxz
mov
int
outsl
or
cwtl
dec
push
insl
out
adc
rol
pop
daa
adc
fidivrl
cmp
les
xchg
out
or
jecxz
rcll
pop
mov
mov
jne
pop
mov
out
dec
jae
sub
jo
and
and
dec
jno
pop
rorl
cmp
into
loope
inc
loopne
mov
nop
dec
stos
and
sub
loop
cld
pushf
scas
mov
push
sbb
ret
add
test
out
push
fmulp
xchg
scas
roll
dec
dec
dec
lds
adc
rcrb
sub
adc
iret
jl
xor
dec
decl
sbb
adc
xor
pop
push
mov
xchg
mov
lea
repnz
adc
cmp
ret
mov
xchg
jg
and
test
ja
lods
aam
mov
popf
movsl
std
cmpsl
negl
std
fdivrl
inc
push
jns
adc
mov
mov
cwtl
and
mov
addl
gs
xlat
imul
xchg
pop
sub
mov
push
cmp
sbb
xchg
lods
ret
or
ljmp
fdivrp
add
pop
jge
xchg
mov
aam
aam
scas
rorl
and
xchg
and
repz
push
jne
dec
adc
pop
jmp
lret
sbb
mov
xchg
lret
clc
sbb
push
mov
cmp
lahf
sarb
lahf
xchg
sub
push
popa
xlat
push
sarl
scas
cmc
push
jns
lahf
int3
mov
mov
mov
jge
push
xchg
loop
sub
jl
fld
shll
jl
inc
mov
adc
jne
xchg
movb
mov
sbb
lret
dec
jmp
sbb
nop
and
in
in
mov
mov
in
test
sub
out
jne
pop
sub
xor
and
rcll
sbb
push
popf
fs
pop
jo
jmp
xor
push
mov
cwtl
sbb
mov
xor
xchg
jb
mov
mov
xchg
jae
in
shll
xchg
xchg
jb
cmp
test
cmpsb
pushf
pop
jp
fstps
inc
movsb
js
sub
or
jp
cmpsl
push
sahf
fcompl
test
push
leave
dec
sub
shrw
in
mov
sbbl
inc
rolb
mov
mov
mov
movsb
movsl
mov
mov
jge
adc
cmc
shrl
hlt
dec
dec
fsubrl
jg
cli
sbb
andb
lcall
cld
push
gs
addr16
lret
shr
daa
adc
add
mov
sbb
lret
xchg
adc
data16
cvtps2pd
jge
adc
or
std
sarl
popa
pop
fildll
dec
adc
cltd
dec
sahf
mov
fisttpll
gs
pop
andb
or
mov
cmpsb
sub
push
rorl
sub
inc
xchg
stc
push
jne
popl
lds
push
jns
int3
shll
sub
clc
dec
sbb
rcrb
insl
add
shll
and
sbb
xchg
inc
add
fsubl
cmp
ljmp
iret
mov
lcall
shlb
filds
jg
xchg
sub
mov
inc
inc
js
lods
lret
inc
mov
jl
pusha
jmp
xlat
mov
fdivrs
mov
push
mov
scas
sbb
loopne
push
test
adc
pop
mov
fsubrs
dec
add
dec
lods
cmp
xor
ror
fcom
loopne
jns
or
icebp
sbb
int
push
dec
push
aad
in
cmp
push
xor
pop
inc
out
fisubrl
mov
jle
pop
daa
inc
test
shlb
int3
cmpsl
sti
je
movsb
mov
call
jge
cmp
adc
push
fcoms
shlb
outsb
stc
mov
addr16
std
xchg
fcmovu
fisttpll
gs
in
mov
out
stos
pushf
out
sti
jns
mov
std
enter
and
dec
mov
adc
inc
fdiv
repz
setle
fisubs
sub
mov
or
dec
fstl
push
adc
xchg
sub
xor
pop
into
es
cwtl
adc
popa
pop
pushf
mov
scas
jg
ret
mov
cwtl
repz
adc
push
jle,pt
cld
test
mov
mov
xchg
mov
mov
push
inc
insb
loopne
pop
in
pop
sub
xchg
or
pop
lods
std
inc
call
cld
jl
sbb
repnz
hlt
mov
sarl
sub
xorb
adc
sbb
jge
jnp
lahf
lea
sub
jne
sahf
mov
test
int3
dec
mov
inc
inc
xor
mov
dec
fcompl
adc
lods
or
roll
jg
xchg
adcl
jns
aas
aam
mov
fmul
adc
fbld
add
test
xchg
jns
inc
mov
shrl
xchg
mov
add
movsl
call
sti
into
icebp
jne
lahf
xchg
lock
xor
jl
pop
push
cmp
gs
gs
and
xorb
and
insb
lods
popa
lret
dec
dec
shlb
roll
scas
pop
rcll
aaa
mov
adc
shlb
add
mov
pop
stc
jl
imul
fcoml
inc
lock
test
sarb
fcoms
insl
mov
inc
cmpsl
hlt
pop
insb
xlat
adc
jp
lock
push
jl
sbb
fldcw
sub
mov
cmp
clc
ficomps
sahf
mov
xor
sar
push
adc
test
sbb
jns
mov
pop
stos
rcr
sbb
enter
mov
pop
jmp
xlat
cld
mov
out
and
sarl
inc
push
sahf
sbb
shlb
or
inc
push
pop
cmp
inc
lock
sar
outsl
pop
cli
push
push
clc
lods
pop
lods
test
xchg
shl
cli
xchg
cmpsb
aaa
push
mov
push
or
or
mov
shll
cmp
movl
mov
pop
lods
push
mov
pop
mov
int
outsl
dec
leave
adc
add
sti
add
sub
into
std
jge
fcompl
xchg
scas
loope
std
stos
outsl
mov
es
mov
cmp
into
int3
sub
setp
pop
dec
push
scas
push
xlat
insb
xchg
pop
jb
fs
sbb
cmpsl
leave
cli
cmpsb
in
out
les
or
jns
int
adc
push
inc
xor
and
and
sub
pop
sahf
pop
mov
arpl
imul
lock
fbstp
lea
push
xchg
into
mov
fsts
out
push
cmp
sub
call
push
xchg
icebp
xchg
mov
lods
lcall
adc
mov
dec
ficoml
sbb
pop
xorb
shrl
stos
mov
sub
cmp
arpl
hlt
push
scas
movsl
insl
mov
dec
xchg
repz
jmp
sbb
les
call
movsb
aad
arpl
fisttps
inc
popa
ds
std
jl
call
mov
pop
sub
movsl
adc
scas
adc
xchg
adc
lahf
dec
lods
cs
test
sub
xchg
enter
or
xor
push
lods
test
mov
mov
mov
jae
lods
add
dec
ret
sub
movsl
lcall
dec
lods
dec
add
fstpl
cmp
jmp
movl
mov
cmp
test
pop
sbb
aas
mov
xor
xchg
lret
pop
mov
aaa
movsb
inc
push
xchg
or
pop
lcall
sbb
iret
pushf
push
sahf
inc
and
filds
push
xor
packuswb
pop
pop
pushf
jmp
rcll
mov
lds
inc
add
mov
jp
sbb
jle
add
imul
outsl
cmp
jg
sub
stos
cmp
inc
cmc
fisubs
sub
sub
mov
sahf
mov
mov
mov
sub
out
xchg
cld
enter
fdivs
jmp
jecxz
sub
enter
jnp
pop
into
push
inc
mov
call
in
hlt
in
fdivp
rep
or
js
daa
leave
push
cmp
jl
shrl
rcll
lods
and
scas
cmc
int3
jo
sarl
divl
pushf
popa
pop
dec
mov
sti
lahf
ret
int3
daa
add
pop
dec
inc
popf
sub
mov
roll
fdiv
add
adc
imul
cmp
int
push
cs
lcall
dec
rorb
subb
fwait
aam
inc
lret
lahf
ds
mov
dec
mov
movsl
mov
push
sub
push
stos
mov
imull
movsl
arpl
movups
mov
push
xor
adc
fisubs
dec
ret
xchg
ss
sub
test
mov
into
jl
rcll
in
pop
sti
lret
cmpsb
mov
or
pop
lea
sbb
je
push
xor
test
mov
ja
cmp
mov
pop
mov
stc
dec
lds
or
fcmovbe
adc
jbe
mov
fstl
and
push
adc
mov
add
mov
xor
jle
sbb
lods
aam
lret
add
and
inc
xor
mov
cmp
repnz
or
xchg
adc
lcall
add
sahf
dec
mov
sti
fimuls
shr
jg
add
out
rolb
les
or
out
or
lods
arpl
aam
jns
sub
inc
xchg
push
sbb
pop
lret
sahf
or
mov
in
mov
sbb
fnstsw
ds
cmp
mov
lds
daa
fildl
pop
push
add
lods
sbb
add
leave
shrl
ss
mov
aas
clc
push
aas
repnz
or
mov
mov
cmp
scas
iret
add
jge
test
pop
jae
mov
dec
cmp
mov
xor
mov
mov
push
mull
add
fs
test
or
sub
xchg
or
mov
loopne
or
mov
repz
out
push
js
cltd
shrl
mov
clc
mov
fcmovnb
jne
sub
mov
scas
shr
test
outsl
rcll
mov
or
sub
pop
jecxz
lret
insb
stc
nop
pop
xchg
hlt
fiadds
outsb
dec
xchg
ror
pop
pushf
imul
sbb
sub
out
aad
shll
cmpsb
movsb
int3
mov
pop
xor
stos
and
xor
sub
fldl
mov
xchg
pop
dec
lcall
not
mov
je
loop
daa
and
addr16
add
aad
daa
push
mov
jge
mov
cmpsb
sti
daa
mov
dec
cltd
or
aad
sahf
daa
push
dec
rclb
out
add
popa
aas
aaa
dec
test
lret
enter
sbb
cmpsl
cmpl
inc
adc
std
adc
mov
push
mov
jbe
cmp
test
call
jns
inc
dec
pusha
stos
fmuls
shrl
add
ret
mov
xor
jl
inc
int
jmp
scas
in
shlb
mov
mov
xchg
sbb
in
pop
inc
sub
sbb
jp
int3
adc
cmp
mov
test
push
sub
xchg
xchg
jge
cmp
add
xorb
dec
mov
mov
xor
mov
imul
push
loope
cmp
mov
aad
aaa
hlt
add
sti
and
dec
adc
enter
xchg
push
std
fmul
fdivs
je
mov
sbb
dec
sub
adcb
rcrl
adc
jl
jbe
repz
fcmovnbe
insb
pop
insl
out
push
jl
dec
adc
mov
fsubrs
push
pop
sbb
dec
mov
hlt
dec
mov
inc
insb
aad
pop
fdivs
jns
dec
divb
mov
nop
jo
pop
fcmovbe
mulb
cmpsb
rcrb
adc
call
popa
push
xor
mov
jbe
rcrl
inc
fists
xor
jecxz
dec
shlb
mov
lds
xchg
dec
bound
inc
mov
xchg
dec
inc
fmull
xor
insl
sub
lods
inc
mov
lret
push
fstpl
mov
stos
xchg
cmpsb
fcoml
hlt
insl
or
jge
sbb
int3
test
lret
clc
sub
sbbb
movsb
lods
mov
mov
insb
adc
dec
sahf
movb
popf
into
aad
out
pop
ret
shll
sbb
sbb
pop
out
pop
lret
enter
outsb
mov
test
pop
aam
jg
fldz
rorb
call
mov
dec
sub
mov
mov
xlat
or
stos
enter
push
sahf
int3
into
or
movsb
xchg
sar
mov
in
fs
ss
xor
lods
xor
mov
notb
sub
dec
sbb
cmpsl
dec
insl
sbb
pop
add
popf
and
into
outsl
xchg
cmpsb
mov
clc
add
lods
stos
adc
sub
cltd
pop
fcmovbe
mov
mov
push
sbb
ds
sub
inc
mov
xchg
test
jmp
push
mov
int
adc
rcrb
sti
mov
inc
cld
aad
sti
or
jno
int
fsubrs
dec
jge
imul
mov
cmp
cmpsl
fdivrl
pusha
lret
push
ds
push
leave
jmp
pop
xor
icebp
push
rorl
or
jmp
add
push
ret
pop
cmpsl
or
mov
sub
das
pushf
rol
sbb
cmpb
movsl
ficoms
out
xchg
filds
pop
xor
fs
dec
fwait
dec
push
adc
or
sbbb
rcrl
daa
aas
ret
dec
sbb
das
addr16
je
dec
int3
pushf
dec
repz
fmull
pop
sbb
push
idivb
inc
pop
rorl
mov
cmp
jle
shll
icebp
outsl
test
dec
insl
mov
enter
hlt
aaa
push
xor
int
sarl
addr16
sbb
mov
xor
sti
adc
out
mov
subl
xor
inc
and
lods
or
sbb
mov
mov
push
call
add
popf
test
jmp
mov
pop
pop
mov
out
das
aas
jmp
lods
int3
sbb
pop
pop
push
xchg
cmpsl
out
loop
daa
clc
inc
pop
jae
addr16
pop
pop
push
fwait
push
mov
mov
sub
xchg
jl
mov
push
adc
xchg
sahf
or
cmc
dec
aaa
fimull
cmp
lock
cmp
adc
mov
sub
lods
pop
int3
xchg
or
mov
arpl
lods
dec
cli
sub
push
xchg
outsb
aam
inc
xor
add
pmuludq
push
popf
ljmp
xlat
stc
ror
insb
rorl
test
in
cmpb
rolb
push
sarl
cmp
push
pop
dec
mov
into
fsubl
sub
in
fldcw
or
sbb
int
mov
arpl
sub
jg
les
stos
pop
push
nop
mov
sar
push
xchg
sbbb
das
imul
fidivl
sti
enter
mov
pop
mov
pop
test
iret
mov
jle
cltd
mov
sti
mov
add
gs
fisttps
add
mov
bound
popf
xor
dec
bound
popf
insl
insl
add
cmp
outsl
dec
clc
xchg
mov
mov
sbb
lods
rcll
or
into
xlat
cld
dec
lods
test
pop
in
aaa
jmp
pop
xor
fadds
push
fsts
int
fcompl
cltd
push
adc
mov
movsl
jne
sahf
int3
mov
dec
dec
lods
push
sbb
adc
lret
into
ret
xchg
adc
adcb
xlat
jae
inc
sti
mov
inc
push
ds
sub
faddl
xchg
cmp
shll
xchg
and
pop
daa
sub
mov
lcall
push
insb
adc
lods
jno
in
inc
fistpll
or
adc
inc
fiaddl
ds
xlat
sahf
ret
not
cmp
or
rcll
pop
pop
inc
nop
pop
mov
aaa
mov
xor
jge
outsl
cmp
lock
jmp
xor
push
in
imul
pop
mov
insl
out
and
adc
aad
stos
xor
fistpll
add
icebp
int3
repnz
insl
mov
sbb
cwtl
hlt
fs
inc
jle
frstor
call
std
or
loope
dec
test
nop
cli
pusha
and
add
fsubrl
pop
sub
pop
xchg
cwtl
and
pop
aam
and
mov
dec
mov
xor
arpl
jbe
xchg
dec
scas
and
xor
or
repnz
aas
pop
movsl
test
pop
std
aam
aad
insb
rolb
mov
jno
gs
imul
imul
pushf
cmp
adc
mov
in
mov
shll
loop
repz
lahf
mov
jno
pop
push
jmp
mov
cmp
pop
hlt
push
shll
adc
cmc
jge
nop
int3
pop
out
or
add
sub
jg
adc
add
sbbb
lock
in
jecxz
add
les
and
nop
mov
pop
mov
lods
dec
mov
clc
dec
into
inc
jl
adc
pop
stos
cld
adc
mov
or
aas
int3
mov
fnsave
es
xchg
jecxz
out
shll
ljmp
xor
into
jg
mov
lods
mov
and
adc
movsb
pop
dec
xor
sub
mov
or
inc
ret
jmp
mov
test
sub
mov
daa
pop
mov
cmp
rol
sbb
das
sbb
movsl
xor
dec
adcb
movsb
ss
push
mov
test
inc
push
arpl
lds
addr16
sub
je
mov
shl
sahf
and
cmpsl
cmp
les
leave
loopne
mov
sahf
je
aad
push
or
mov
inc
fcmovnbe
xor
js
mov
sarb
pop
outsb
cmp
push
out
push
or
inc
adc
sar
mov
xchg
mov
xchg
daa
mov
mov
dec
mov
test
push
insb
sub
sub
inc
inc
xor
mov
insl
fs
pop
adc
add
inc
sbb
je
aas
out
in
pop
out
movsl
inc
xrstor
and
je
dec
mov
std
inc
das
cs
or
popf
mov
jge
push
add
sub
shll
mov
push
adc
push
and
lods
push
jmp
push
fsubl
jnp
push
inc
add
mov
lds
shl
mov
cwtl
push
rol
andl
les
test
mov
fisttpll
jmp
push
or
or
nop
xor
rorl
clc
cwtl
ret
add
std
sub
xor
scas
lods
mov
aas
test
icebp
jno
test
push
mov
xorb
lods
xchg
hlt
push
dec
cmpl
ds
imul
push
mov
cmpsb
cmp
out
out
push
lods
xlat
fldcw
mov
mov
ficompl
xchg
mov
add
jge
ret
add
jns
je
inc
pusha
xchg
push
or
shlb
add
mov
dec
data16
jae
mov
lret
cmp
inc
addr16
sbb
adc
int
sub
js
dec
jl
jl
fistpl
das
xchg
aad
xchg
dec
fs
imul
and
mov
mov
mov
das
jns
adc
insb
popf
test
pop
ret
call
ds
lds
mov
add
and
loop
mov
adc
mov
mov
enter
dec
sub
data16
shl
bound
cs
add
scas
mov
push
rcrl
push
xchg
cmp
ret
sub
sub
mov
or
out
push
sbb
mov
or
fldcw
lret
je
xchg
cltd
call
sbb
pop
rcl
sbb
jmp
mov
sub
mov
ljmp
out
mov
adc
loopne
cmp
push
shll
sub
xchg
stos
pop
and
scas
push
or
dec
test
pop
pop
jge
lret
sar
lods
xchg
popa
lret
jo
hlt
mov
pop
mov
enter
inc
sbb
imul
xchg
adc
push
lret
rcrl
mov
adc
fsubrs
cmpsb
ljmp
pop
and
mov
xchg
push
add
pop
pop
ljmp
into
test
adc
dec
dec
jle
or
out
jbe
stos
loope
roll
pop
push
mov
in
sbb
xchg
in
insb
add
mov
leave
mov
cwtl
cmp
or
test
lods
scas
fiaddl
aam
jg
ss
xchg
rorl
xchg
sbb
fxtract
add
xor
arpl
cmp
es
pop
popa
fidivrs
cmpsl
out
or
push
scas
jnp
dec
clc
andl
inc
xchg
nop
inc
int
adc
das
jae
lret
addr16
mov
enter
in
adc
adc
jnp
xchg
xchg
pop
clc
push
sub
sahf
xor
dec
xchg
add
mov
std
inc
xchg
pop
mov
int3
test
cmp
ljmp
mov
jg
and
shlb
scas
ds
xchg
aaa
pop
mov
mov
pop
dec
jbe
pushf
cmpsl
mov
addl
push
test
rcll
mov
xchg
popa
adc
add
sbb
test
inc
mov
lret
std
int3
pop
push
test
mov
jp
cmp
pop
leave
lods
pop
in
lahf
out
stc
rorl
cltd
xor
push
mov
mov
sahf
insl
mov
mov
les
lret
mov
xorl
flds
jle
jl
pop
jo
stc
fistl
movl
add
pop
daa
and
addr16
push
mov
mov
xchg
loope
rcrl
and
sub
fadd
clc
movsb
insl
call
fwait
inc
inc
sarl
repnz
shlb
add
push
push
sub
pop
lods
cs
inc
into
ror
or
dec
sub
aas
test
aad
sar
xor
pushf
xor
imul
cld
shll
dec
sti
sbb
add
clc
inc
jg
cmpsb
outsl
fdivr
lcall
mov
test
adc
int
int
fsubs
inc
cmp
push
mov
and
sbb
ss
fcmovb
roll
insl
add
fst
add
pop
dec
pop
and
je
push
pop
stos
adc
ljmp
les
int3
inc
das
cli
roll
sub
fyl2x
lods
mov
push
jae
sbb
dec
cmpb
pusha
lods
mov
dec
shll
jb
das
sub
mov
jg
fucomi
in
cmp
adc
fbstp
push
jae
rcll
lea
cmp
push
dec
fadd
bsf
mov
test
mov
dec
xchg
rclb
jl
mov
sti
shr
leave
jmp
sub
jne
cmpsl
jecxz
cmp
xchg
and
xor
int
lods
in
addr16
cmpsl
xor
mov
xchg
ds
lds
inc
frstor
mov
mov
add
mov
pop
shlb
cmc
call
pop
add
mov
xchg
daa
leave
and
divb
pop
fldl
mov
xchg
sbb
jo
insb
int3
dec
push
push
push
or
out
cmp
add
rolb
iret
mov
mov
repnz
lds
nop
mov
js
js
cli
push
jae
dec
mov
cmpsl
insl
jge
mov
lcall
mov
clc
lret
pop
addl
sub
inc
cmp
stc
or
dec
dec
rolb
cmpsb
push
and
fiaddl
into
ds
push
lret
push
mov
mov
jne
int
pop
mov
fisttpl
sub
jbe
into
add
fstpt
mov
or
xor
fstl
aam
imul
adc
mov
mov
stos
iret
pop
cmpsb
cmp
ss
jg
lret
lods
inc
popf
icebp
repnz
pop
lret
pop
popa
jne
movsb
sbb
call
shll
lock
out
out
cmpsl
in
cmp
or
push
jl
stc
jo
dec
rcrb
adc
and
cmp
fnstenv
xchg
dec
xchg
mov
aad
add
roll
or
in
mov
or
mov
shll
testb
int3
cmpsb
stc
xchg
inc
sarb
rorl
cmc
push
mov
out
enter
leave
jmp
or
aam
cmp
cmp
ss
movsl
stc
shlb
fsubrp
pshufw
in
ljmp
xchg
mov
add
mov
add
out
or
xchg
test
xlat
dec
sub
je
dec
push
xchg
sub
fwait
mov
and
daa
push
sbb
cmp
clc
lods
mov
add
or
les
mov
push
xor
addr16
stc
adc
out
pop
shr
sub
xor
xor
lret
inc
push
scas
sarb
pop
ss
dec
fcmovu
mov
sbbb
dec
mov
das
pusha
std
dec
lods
or
js
mov
ret
jl
and
jge
out
sub
add
call
scas
adc
into
mov
add
mov
loop
pop
cwtl
ficomps
ret
xorl
mov
cs
push
dec
outsl
out
bound
push
popf
mov
push
stos
sbbl
or
jp
inc
rcr
xlat
rorl
clc
stos
mov
jl
dec
mov
daa
in
rdmsr
or
pop
cmp
daa
cmpsl
cmp
rclb
pop
ljmp
leave
mov
xchg
lods
push
lds
insb
mov
add
pop
pop
inc
and
idivb
jbe
into
adc
mov
gs
scas
ss
cli
imul
mov
and
inc
xor
pushf
cmp
push
pop
shrl
pop
mov
movsl
lods
insb
mov
inc
mov
pop
inc
call
or
jle
mov
xchg
inc
pop
std
lea
xchg
sub
mov
adc
pop
mov
add
addr16
gs
std
mov
sbb
stos
call
clc
and
mov
sbb
das
cltd
pop
cmpsb
mov
mov
clc
sar
sub
jl
outsl
sti
mov
xchg
pushf
add
push
shlb
frstor
sub
fstpl
lds
nop
fwait
xchg
xchg
add
lret
jne
insb
arpl
mov
into
xor
sbb
dec
hlt
rorl
mov
xor
enter
mov
vcvtsd2ss
push
pop
hlt
mov
mov
cli
in
inc
in
out
leave
sbb
shrb
mov
jbe
leave
adc
mov
pop
je
xchg
cmpsb
mov
lods
mov
aam
scas
pop
daa
sbb
jo
aaa
lock
xchg
mov
pushf
out
mov
rol
or
mov
mov
inc
stos
fwait
hlt
cli
les
lods
aaa
push
mov
dec
mov
aas
insb
fbld
in
hlt
mov
jecxz
test
fistpl
mov
xchg
and
push
stc
popl
push
scas
test
sbb
add
lds
ret
dec
cmp
in
sub
lcall
cwtl
pop
pop
jle
xchg
fcmovbe
mov
rcrl
lret
lcall
scas
test
imul
mov
cltd
shlb
pop
and
jo
loopne
gs
mov
xchg
sub
int
mov
mov
mov
pop
imul
jnp
mov
sub
lea
fmull
dec
push
pop
inc
int3
int
pop
pop
stos
negl
jp
push
test
sub
pop
or
sti
lret
push
rorl
jmp
ret
lock
lahf
pop
lods
aaa
xchg
cmp
popa
jne
aam
test
dec
xor
pop
mov
xchg
inc
push
mov
cmp
pop
sbb
xchg
ret
cld
jb
repnz
int3
sti
mov
in
fisttpll
adc
int
push
ljmp
jbe
push
mov
dec
xor
mov
xchg
pop
mov
cli
mov
fistps
test
adcl
pop
mov
sub
fistpll
add
aad
dec
mov
or
xchg
faddp
xchg
jg
in
cmpsl
pop
je
sbb
out
inc
and
je
sub
pop
or
and
xchg
dec
iret
aad
test
push
jg
out
into
mov
dec
cmp
mov
sub
lcall
lret
pop
pop
outsb
jno
popa
mov
aam
jb
iret
lcall
push
pop
jg
enter
cmpsl
inc
in
sti
loopw
mov
mov
fidivl
mov
je
in
dec
insb
jns
icebp
scas
pushf
hlt
xor
jmp
pop
scas
scas
or
idivb
sbb
sub
popa
fidivs
cmp
ljmp
and
add
daa
ss
imul
mov
sbb
jl
and
add
push
rorl
cmp
aad
push
dec
push
out
lods
ret
adc
int3
inc
cwtl
dec
enter
push
fwait
mov
repz
loop
add
out
insb
mov
dec
mov
fsts
fnstsw
add
dec
lret
inc
lds
nop
aam
scas
push
jl
pop
lds
pop
xor
cmp
test
mov
mov
or
call
xor
xchg
pop
lds
fnstenv
sbb
in
cmp
sbb
inc
hlt
sub
mov
andb
scas
pop
ficomps
sar
dec
push
mov
mov
mov
mov
enter
pop
xchg
rclb
imul
and
lds
pop
rorl
add
or
or
pop
subl
fnstsw
inc
mov
lcall
shll
push
inc
je
mov
mov
fwait
test
dec
push
jp
roll
sub
lods
and
fucomip
ds
arpl
aam
sbb
sahf
rcr
aas
inc
xchg
jecxz
lock
cmpsb
in
outsl
dec
add
mov
lods
adc
in
leave
out
in
and
inc
lods
fdiv
das
lods
addb
in
jae
outsb
jns
sub
mov
add
arpl
sub
push
push
mov
jecxz
stos
out
cmp
sub
outsb
aad
sbb
je
jbe
pop
xor
stc
shrb
bound
jns
lods
jmp
mov
xor
mov
out
add
xchg
hlt
xchg
enter
movsb
inc
std
inc
xchg
fildll
xchg
arpl
andb
movsl
inc
xlat
mov
sub
and
mov
pop
insl
mov
ret
inc
sbb
test
mov
clc
std
mov
int
enter
lcall
stc
lcall
mov
mov
jge
rcrl
ret
shrl
xor
stc
fs
adc
insl
adc
roll
imul
mov
fdivl
push
aaa
xchg
pop
lahf
inc
jne
scas
aaa
xor
repz
dec
arpl
jmp
je
test
lock
add
or
test
shll
inc
sti
ret
shl
pop
repz
mov
icebp
inc
lret
stos
clc
insl
shll
dec
imul
jp
aad
jle
repz
xor
inc
mov
sahf
rcl
or
icebp
mov
into
and
mov
dec
dec
popf
movsb
out
sub
or
jp
shrb
lcall
gs
push
lahf
mov
add
lods
jno
inc
lahf
test
sahf
add
shll
aaa
push
push
pop
mov
or
jns
popf
cmpb
fbld
cmpsl
pop
rol
jg
jp
mov
int3
lea
int
into
fxch
test
aad
bound
push
pop
jns
pop
pop
pop
and
roll
xor
stc
push
xchg
lds
adc
call
pop
icebp
sub
ret
adc
lret
pop
dec
jbe
mov
mov
mov
iret
fildll
movsb
pop
mov
mov
dec
cltd
bound
fistl
adc
mov
or
in
mov
es
jp
dec
lea
mov
sarl
lcall
dec
or
popf
add
jae
std
pop
movsb
aam
dec
movsl
rorl
dec
es
add
mov
mov
fsts
jecxz
xchg
iret
stc
shll
adc
pop
dec
lea
sahf
pop
mov
cmp
outsl
fldl
push
sbbb
sub
sbb
mov
lcall
notl
pop
mov
dec
pop
xchg
push
fs
push
fcmovnbe
shrl
mov
rolb
add
fdivl
cs
cmpsb
jb
push
neg
add
sub
sarb
int3
add
movsl
push
mov
add
mov
jmp
sub
sahf
jo
popa
mov
rcrl
loope
repz
jle
jle
add
shrb
movsl
push
out
xchg
fimull
pop
cmp
or
icebp
mov
lcall
fsubs
xchg
mov
push
mov
int
mov
xchg
lock
add
pop
rcl
and
dec
inc
iret
push
fadds
mov
inc
call
fsubs
push
push
mov
cmpsb
repnz
sti
roll
shl
pusha
and
out
push
mov
outsb
jmp
iret
add
test
mov
sbb
add
lods
test
shll
cmp
dec
daa
or
cld
jmp
mov
lods
out
rorl
mov
mov
mov
pop
cld
mov
push
inc
pop
test
out
cli
mov
pushl
lods
mov
rorl
enter
cs
sbb
les
inc
insl
mov
sbb
pop
push
dec
adcl
mov
aaa
in
push
pop
ds
cmp
add
or
inc
xchg
pop
add
mov
imul
sub
cmpsl
and
dec
adc
in
xor
jbe
int3
mov
fimull
jle
mov
inc
and
adc
sti
mov
imul
push
inc
das
out
sarl
imul
pop
mov
movsb
mov
mov
xor
std
movsl
fs
push
mov
xchg
cmpsl
cmp
mov
ds
and
pushf
pop
sahf
and
lods
repnz
loope
push
cmp
lahf
mov
mov
cmp
movsb
cwtl
pusha
push
out
sti
mov
mov
inc
and
insl
push
or
andb
sub
lds
daa
push
loopne
push
cld
outsb
mov
mov
mov
nop
xchg
stos
sbb
jae
cmpsl
aaa
or
adc
mov
jg
xchg
loop
jae
dec
roll
mov
pop
adc
sub
sbb
into
data16
pushf
adc
ficompl
in
out
cmp
mov
ds
cmp
std
aad
push
ret
lret
sub
das
rcll
fisubrl
shll
and
push
int3
int3
ficoml
fucomip
jae
xchg
stos
xchg
mov
fnstsw
aaa
push
jae
lods
in
loope
jge
insl
or
sbb
adc
inc
gs
ficoml
jecxz
xchg
sub
imul
std
xchg
lret
mov
dec
or
or
je
ficoms
roll
je
inc
jns
loope
fimuls
negb
pop
ret
fidivl
stc
dec
imul
imul
inc
mov
sub
mov
mov
dec
test
clc
add
or
sub
mov
pop
and
xchg
imul
mov
insb
rcrl
jg
fdivr
sub
adc
mov
jge
xchg
dec
xor
xchg
in
mov
xor
sub
xchg
sarl
repz
or
sub
inc
repz
fistps
cwtl
popa
push
jo
jnp
movsb
push
ficoms
ljmp
cmp
in
push
fucomi
mov
movsl
xchg
rol
popa
push
mov
scas
hlt
cmp
jns,pn
and
dec
push
shll
xchg
into
cmp
inc
imul
mov
outsl
jl
mov
xchg
adc
add
popf
cmp
jo
jmp
iret
mov
inc
loope
insl
sub
push
das
dec
ficoms
and
xchg
pushf
pop
pop
loop
std
pop
mov
fcmove
cltd
lds
into
jne
sahf
loopne
out
inc
push
mov
jle
adc
shll
into
cmp
pop
push
lcall
mov
daa
loopne
pop
cld
cmp
dec
ss
in
or
mov
clc
into
add
outsl
pop
ficomps
pusha
aaa
test
jge
mov
nop
fcomps
mov
cli
mov
push
pmulhw
add
ret
push
jbe
repnz
pop
mov
outsb
adc
xchg
cld
jle
data16
xchg
int
popa
test
pusha
jg
mov
test
jnp
in
and
cmp
rolb
adc
dec
xor
jp
clc
sahf
lret
notl
mov
lods
lock
sub
or
repnz
lods
int3
mov
sbb
insb
fdivrs
lock
aad
push
lret
inc
mov
aas
and
pop
fst
mov
or
xor
and
into
aad
jecxz
ret
add
mov
sub
sub
lds
aam
fmul
sub
roll
orb
dec
lret
sarl
sbb
std
push
push
je
ret
popf
lahf
shrb
push
cmpsl
hlt
cltd
shll
int
push
fidivrs
and
addb
mov
mov
and
scas
out
inc
jne
jp
aam
mov
imul
adc
mov
xor
enter
push
xchg
mov
testl
std
jg
jnp
pop
mov
jmp
xlat
fmuls
dec
jne
mov
xchg
xchg
xchg
sbb
lret
cmpsl
out
test
pop
in
fcompp
mov
xor
stc
roll
sarb
jl
sbb
rcr
enter
lret
xorb
loopne
mov
inc
push
loope
add
std
roll
mov
mov
lods
aam
jge
dec
jecxz
xor
shll
stc
add
add
stos
adc
and
inc
sub
divb
cltd
cmp
out
mov
fcoml
into
out
cltd
push
xchg
lds
insl
cmp
int3
mov
pushf
dec
mov
jno
fsubrs
in
pop
ljmp
jg
inc
cmp
inc
sbb
jmp
mov
aad
push
lret
insl
sbb
sbb
into
loopne
add
bound
sub
rorb
es
pop
mov
push
mov
push
dec
mov
int
mov
mov
jne
sbb
and
jge
mov
sbb
mov
sub
lds
sub
adc
pop
cmp
cld
test
pop
lcall
aad
mov
cli
xchg
ret
xchg
fadd
xchg
mov
fmuls
xchg
push
fsub
idivl
je
fwait
lods
test
push
sub
daa
int3
cmp
andl
pop
out
out
push
dec
repnz
ret
inc
in
dec
pmaxsw
into
mov
fucomi
xchg
addr16
mov
pop
lahf
in
cli
mov
loop
je
cmp
leave
mov
cltd
mov
cs
mov
push
pop
rcrl
test
pop
mov
jnp
cld
scas
sub
sub
xchg
dec
dec
repz
gs
add
lahf
lea
lret
lret
jl
jge
inc
or
pop
cld
lods
xor
movsb
notb
push
cmp
fsub
adcl
jno
sub
pop
jae
sub
mov
das
stos
int3
movsb
testl
xchg
shrl
adc
push
cmp
lods
cmp
dec
mov
inc
or
cmp
add
fistps
lcall
pushf
mov
shrd
sub
lret
inc
insb
jge
into
push
mov
pop
pop
dec
stos
es
xor
ffree
push
dec
inc
inc
in
fs
xor
inc
adc
arpl
insb
test
pop
outsb
cmp
in
mov
fldenv
inc
jge,pn
addl
push
xchg
sbb
pop
or
shll
inc
xchg
jecxz
and
xchg
add
cmp
mov
dec
jge
mov
mov
sub
xchg
mov
jns
mov
mov
mov
cmp
iret
mov
mov
xchg
inc
imul
xchg
add
ljmp
pushf
mov
into
mov
mov
shrl
movq
add
aam
push
iret
repz
shl
inc
push
dec
jo
lret
or
mov
imul
inc
cs
test
xchg
test
or
cmpsb
jmp
lods
je
xor
sarb
outsb
push
jbe
out
fistl
cmp
rol
or
xchg
xlat
xor
sub
pusha
xchg
jge
dec
adc
jae
ja
mov
jnp
test
sub
add
andl
push
xchg
sub
mov
fldenv
call
hlt
lds
mov
pushf
in
and
pop
std
xor
mov
mov
sub
sarl
rcl
into
lcall
jae
push
mov
movsb
fisubrl
sbb
jmp
enter
mov
or
ffree
push
fadd
pushf
les
subb
stc
sub
inc
shr
es
cwtl
fisubl
fisttpl
add
add
mov
mov
fstl
and
xchg
fcompl
and
push
sub
jge
mov
lods
inc
ja
xchg
outsb
rcll
xorb
fnstsw
mov
lcall
pop
das
lcall
inc
push
jmp
dec
daa
gs
inc
jl
clc
push
addr16
ficompl
sub
pop
dec
fs
fsubr
pop
stos
lods
push
adc
mov
addr16
jl
mov
xor
rcr
cs
mov
pop
fidivrl
pop
addb
loop
repz
push
rcrl
adc
xchg
insb
cmpsl
push
push
mov
lods
rorl
leave
rolb
mov
bound
cmp
insb
dec
push
enter
inc
stos
shll
cltd
mov
mov
or
mov
shrl
inc
enter
inc
rol
inc
icebp
mov
insl
xchg
inc
sbb
data16
push
int3
cld
xchg
cwtl
nop
in
push
add
sub
in
fcompl
stc
stos
cmc
ret
mov
cmp
ret
fwait
sbb
cmp
idivl
xor
into
cmc
push
icebp
stos
push
dec
sub
dec
mov
aas
rcrb
nop
fcoml
adc
iret
jno
push
dec
lods
cmovs
ja
sub
mov
mov
mov
push
mov
mov
xor
sub
test
push
aaa
pop
rclb
add
fdiv
xor
sbb
push
int3
cmp
jne
mov
les
nop
add
and
pop
mov
scas
xlat
xchg
jnp
ret
cmpsl
mov
push
sbb
sub
test
divb
mov
push
into
aaa
push
data16
xor
mov
and
dec
xor
jmp
sbb
mov
test
lcall
punpckldq
push
sbb
or
mov
or
jecxz
sub
dec
cmc
popa
mov
pop
push
movsl
test
rol
notb
and
scas
push
fcompl
sarl
mov
outsb
xchg
ja
mov
or
mov
js
movsl
repnz
or
mov
ret
stc
cmp
and
sbb
in
mov
cmc
fcomip
loope
jo
pushl
rep
push
mov
push
movsb
ficoml
nop
add
mov
lret
aaa
mov
movsb
insb
inc
or
rcrb
call
movsl
push
movsb
lret
mov
in
or
push
inc
mov
jno
mov
cmpl
int3
jo
outsb
inc
add
sbb
adc
mov
scas
mov
das
or
xor
nop
mov
into
adc
pop
mov
jl
hlt
push
mov
jmp
divl
insb
or
enter
inc
mov
sub
int3
jo
mov
xchg
or
pusha
lret
add
jg
mov
mov
or
sbb
push
andb
jb
adc
push
ret
sar
jns
xchg
rcll
mov
mov
push
push
aaa
mov
out
test
ret
flds
dec
into
iret
int
fcoms
adc
adc
seto
test
jl
mov
cwtl
mov
rcll
pop
pop
in
ficomps
aam
sahf
sbb
xor
mov
mov
cld
xchg
push
ja
push
inc
aaa
sarl
cltd
stc
adc
mov
inc
scas
pop
xchg
stc
gs
xor
push
ljmp
xlat
push
push
and
cld
adc
fdivs
adc
push
or
js
pop
arpl
into
cmp
xlat
jbe
mov
xchg
das
aaa
inc
pop
test
lret
pop
fcomps
mov
pop
cwtl
rcrb
dec
sbb
loope
mov
movsl
ret
movsb
mov
cs
cmp
adc
aaa
mov
or
mov
xchg
gs
loop
and
enter
test
repnz
sbb
outsb
mov
push
mov
nop
aad
mov
push
iret
lret
dec
ltr
negl
cmp
xlat
and
cmc
xchg
shld
mov
mov
ja
adc
pop
push
pop
insb
les
enter
inc
push
rcrl
fadd
lcall
lea
sub
sub
and
jle
sbb
icebp
shr
outsl
jmp
inc
loope
mov
int3
js
imul
mov
sub
cmp
or
cli
pop
in
fcompl
cmp
pop
jb
lock
in
pushf
in
mov
les
sub
mov
sub
cmp
ljmp
dec
xchg
daa
dec
mov
cmp
rcrb
sub
or
sbb
std
dec
pop
xchg
stc
jae
xchg
icebp
xor
dec
jmp
in
fcompl
stc
pop
cmc
xchg
icebp
in
push
jmp
shl
adc
lods
popf
xchg
dec
sbb
pop
push
sbb
adc
xlat
push
dec
movq
lret
out
jmp
xor
pop
inc
rorl
inc
jl
adc
not
jne
jmp
xor
rcrl
les
push
jmp
pop
fsubrl
fldt
data16
mov
sbb
cmp
sbb
insb
movsb
dec
mov
scas
xlat
sbb
mov
nop
mov
mov
daa
pop
pop
int
xchg
adc
mov
movsl
cltd
les
aaa
int3
xchg
into
rcr
scas
clc
fdivrs
mov
into
xchg
dec
ja
push
dec
fxch
into
dec
inc
or
xchg
push
mov
movsl
in
add
loopne
jo
mov
or
mov
fsubs
pop
sarl
sbb
jecxz
fidivrs
and
push
jmp
stos
sahf
push
mov
or
mov
or
mov
inc
sbb
ja
sbb
and
vmovmskps
cmpsl
fdivrs
mov
dec
movsb
lret
mov
enter
movsl
lahf
pop
jg
inc
pop
in
cmc
push
icebp
dec
push
test
nop
in
addl
xchg
ja
jmp
mulb
fst
sbb
mov
add
aas
stos
lret
push
add
adc
xchg
push
push
dec
int3
fsts
shl
stc
mov
pop
or
adc
fmull
pop
pminub
pop
psubusw
push
fistl
xchg
aam
push
rcl
push
mov
push
cld
rclb
shl
push
in
in
in
in
in
in
in
movsl
dec
mov
dec
ljmp
lret
loope
ja
enter
rorl
test
fs
add
nop
fsts
adc
pop
mov
push
sub
mov
jns
ljmp
in
jo
and
enter
push
bound
aas
das
jp
lods
pop
xchg
sbb
test
outsl
insb
cmp
xchg
nop
mov
je
jo
gs
pop
xor
push
lret
into
int
fcom
mov
pop
pop
push
sub
xlat
or
or
cli
fwait
ljmp
mov
fs
je
shrl
popf
ret
loope
loope
filds
pusha
mov
fldenv
rorb
cmc
mov
xor
push
or
dec
dec
pusha
pop
pusha
inc
sarb
cmc
rcll
das
shlb
pop
jne
pop
push
dec
dec
cmp
mov
mov
js
movsl
frstor
jmp
inc
loope
loope
loopne
pop
je
xor
nop
xor
xor
dec
hlt
cmpsb
in
add
pop
sbb
push
push
push
xor
lods
shll
sbb
int
dec
cmp
or
outsb
leave
lret
xchg
pop
mov
fsts
ja
push
pop
aaa
xlat
pop
push
not
div
aad
mov
sbb
enter
push
insb
mov
cmp
int
je
stos
push
aaa
inc
stc
outsb
in
pop
es
pushf
cmp
out
mov
xor
dec
mov
sbb
mov
mov
add
fcoms
nop
insb
sbb
negb
stos
rcrb
aam
push
or
mov
jecxz
inc
cmc
add
xchg
push
push
sbb
insb
adc
or
fcompl
sbb
adc
inc
cld
korw
les
lahf
ret
lahf
rcrl
cmp
dec
xchg
iret
ja
push
into
aaa
dec
pop
int
dec
test
dec
test
dec
test
dec
dec
aas
pusha
aas
pop
pop
rolb
sti
inc
test
jle
inc
push
icebp
xchg
lea
fmuls
ljmp
fdivrl
mov
xchg
fs
bound
add
rorb
adc
mov
sbb
lea
inc
ss
xlat
sti
mov
scas
int3
mov
jp
test
inc
push
mov
popa
sbb
cmp
lods
sub
xlat
sbb
adc
cmp
in
cltd
dec
in
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
inc
inc
rorb
aas
sarb
aas
pop
or
pop
popf
mov
mov
mov
bound
pusha
aaa
pusha
xchg
pusha
aad
hlt
movsl
sbb
mov
icebp
lahf
adc
into
testb
sub
std
push
leave
loope
loope
and
insb
sbb
andb
mov
rcr
mov
jge
test
ror
cmp
ficoms
mov
sbb
testb
mov
mov
dec
imulb
mov
inc
in
iret
mov
rcl
mov
mov
stc
add
test
jp
fdivr
push
fnsave
xchg
mov
adc
jb
inc
hlt
adc
lods
lahf
in
lahf
dec
lahf
stos
lahf
ljmp
testb
gs
ljmp
in
in
in
data16
mov
insb
pop
push
push
cmp
xchg
clc
prefetcht1
in
in
in
in
adc
pop
inc
in
mov
jnp
punpckhwd
in
in
in
in
in
movsl
inc
cmpsb
or
dec
insl
mov
pop
movsl
mov
mov
cmp
pop
notb
mov
adc
or
xor
xchg
ljmp
outsb
je
mov
lret
imulb
enter
inc
std
lcall
add
dec
lea
push
add
rcrb
or
push
add
and
fnstenv
fcoms
mov
sbb
xchg
jle
cmp
xlat
imul
nop
ds
sbb
jns
xchg
push
jp
jae
push
stos
stos
or
add
pop
sub
cmp
in
fwait
xlat
jbe
xor
cmpsb
lahf
mov
dec
adc
mov
lds
mov
jbe
pop
pusha
insb
mov
not
dec
pop
cmp
sub
gs
mov
dec
dec
sar
inc
cltd
mov
inc
jl
outsb
add
pusha
enter
scas
inc
in
dec
adc
stc
mov
dec
ret
inc
mov
cmp
pop
aas
jmp
hlt
push
xor
cmp
movsl
jo
pop
ljmp
sbb
mov
mov
mov
out
mov
inc
fld
aad
inc
cmp
in
or
in
sbb
xchg
push
shll
lret
mov
push
mov
js
pop
sar
push
mov
int3
insb
push
pusha
fisubl
pusha
fldenv
pusha
fsubs
pusha
xlat
pusha
push
pusha
pusha
push
pusha
aad
push
pusha
aam
push
pusha
shll
adc
fimull
rorl
push
bswap
cmovg
into
cmovle
int
dec
bswap
cmovl
lret
cld
or
dec
mov
dec
xor
rolb
aas
inc
lret
pop
outsb
lret
lods
add
fmuls
inc
movsl
dec
std
pop
ja
mov
mov
sbb
push
leave
lret
test
jmp
aam
lret
scas
mov
sahf
mov
mov
xchg
test
arpl
and
negl
pushf
push
push
ret
cvttps2pi
xor
sbb
mov
inc
int
lods
mov
jbe
insb
xor
pusha
pop
cmp
fidivrl
repz
movsl
lods
fcomps
enter
aas
xchg
push
xchg
pop
adc
push
mov
cmpb
xchg
mov
mov
sub
nop
adcl
sbb
cmp
loope
dec
sbb
push
pop
aaa
push
dec
push
fmul
inc
jbe
fcomp
mov
inc
mov
ret
testl
sbb
sub
mov
jae
xor
fcmovbe
sbb
pop
or
lahf
or
clc
adc
or
mov
mov
add
bswap
xor
sbb
inc
ljmp
psubw
mov
out
mov
test
mov
inc
cmp
in
add
inc
and
pop
inc
frstor
in
in
in
in
in
fs
jecxz
in
in
in
in
in
in
in
movsl
inc
aad
ficompl
fdivrs
xchg
push
out
in
adc
push
pop
pop
sbb
cwtl
mov
fcmovbe
xlat
xchg
int
into
inc
dec
jbe
add
sbb
aaa
lea
inc
enter
inc
aas
lds
jae
lods
into
int
pop
xorb
lret
cmp
pop
jnp
daa
sub
sarl
repnz
fnsave
sbb
inc
insl
ret
stc
inc
ret
inc
sub
rclb
imulb
ret
sbb
add
cld
hlt
inc
in
in
in
in
add
inc
inc
in
in
in
movsl
inc
aam
cmovno
rorb
dec
or
pop
lahf
inc
divb
aam
adc
shl
pop
inc
or
lods
pop
inc
ffree
pop
inc
fadd
pop
inc
fstpt
push
xor
dec
cmovp
or
xlat
rcl
dec
xchg
std
sbb
in
cld
in
hlt
push
in
add
int3
std
ja
inc
mov
sbb
pushf
data16
jg
cltd
push
js
dec
cmp
and
jp
push
pop
movsl
lods
fnstcw
sub
xlat
aam
push
aad
push
fidivl
call
mov
pushf
adc
insb
push
sbb
sbb
insb
scas
in
jb
das
mov
or
into
mov
push
sbb
cmp
pop
aaa
push
pop
int
shrb
jbe
jge
repnz
lds
mov
sbb
xchg
loopne
pop
cmp
mov
xchg
aad
add
sbb
inc
pop
xchg
sahf
int
cli
mov
sbbb
insl
add
xchg
arpl
sbb
fisttpll
sbb
sbb
pushf
pop
xchg
push
in
fsubs
in
out
in
xchg
cltd
rclb
add
jl
aaa
dec
xchg
rorl
sub
fwait
inc
into
xchg
sahf
fiaddl
fadds
cmp
inc
push
or
jne
sub
jae
xchg
out
vcvtps2pd
push
test
std
pop
lahf
push
xlat
xchg
xchg
int3
xchg
nop
pop
push
xor
xchg
dec
xchg
or
mov
orb
pop
insb
jbe
iret
dec
xchg
or
ljmp
sub
pushf
pop
jne
xchg
int3
js
insb
sub
inc
pop
shll
adc
enter
fldl
xlat
push
push
aad
mov
inc
xchg
xchg
pop
sub
pushf
pushf
dec
into
test
shrb
inc
inc
mov
xor
inc
mov
fcoms
adcb
repz
cmp
dec
xchg
leave
aad
pushf
xlat
nop
lret
hlt
sti
sahf
xchg
outsb
xchg
test
lret
mov
xor
adc
dec
rcl
sbb
pop
inc
mov
leave
sbb
jmp
loop
adc
pop
shl
idivb
pop
pop
xchg
fnstsw
pop
std
fistpl
in
loope
loope
loope
loope
and
fs
xlat
adcb
push
lahf
aad
or
shll
fwait
rcl
or
rcll
aam
adc
adc
jg
jo
stos
mov
dec
sub
clc
cmp
in
push
ja
mov
in
leave
lret
sub
mov
lds
movsb
mov
mov
push
ror
leave
inc
fcomps
mov
movsl
enter
pop
add
movsb
cmp
in
cmp
inc
add
outsb
test
hlt
or
adc
pop
adc
ret
lret
xchg
mov
jbe
jp
orl
pop
pop
sub
cmp
mov
adc
fcoms
fcompl
nop
mov
icebp
lds
js
aad
xchg
push
je
inc
mov
sbb
mov
scas
negl
sbb
mov
push
adc
iret
inc
pop
dec
inc
xadd
cwtl
das
lret
dec
into
pop
mov
rolb
dec
ds
cltd
scas
test
aaa
rcl
setne
int
push
push
pop
enter
mov
adc
inc
hlt
mov
inc
sbb
dec
out
je
pop
and
cltd
shll
scas
inc
xchg
jl
pop
push
mov
jle
sti
ret
mov
mov
dec
ja
sbb
iret
pop
sbb
pop
aas
insb
fdecstp
mov
mov
je
shlb
fcmovu
or
mov
mov
push
xlat
cwtl
pop
mov
dec
mov
mov
sbb
push
inc
nop
adc
cmpsb
into
add
sbb
shll
dec
pop
dec
push
jle
nop
push
jge
cld
jl
jl
cli
pop
dec
pop
bound
and
clc
movsl
fldl
hlt
mov
mov
leave
lods
enter
out
fmuls
pop
int3
sti
push
data16
aam
in
repz
jp
sahf
mov
jns
or
sarl
outsb
fwait
jmp
lret
negl
sbb
inc
sti
mov
push
shlb
aad
mov
leave
xchg
adc
cmpsl
jb
cmpsb
cmp
aam
sub
inc
test
sti
pop
adc
or
rclb
pop
into
cwtl
int3
pop
mov
and
hlt
hlt
sarb
and
xchg
imul
push
test
into
dec
pop
fcomp
mov
or
pop
xchg
nop
loopne
or
jle
aaa
jbe
lahf
jp
int3
jl
enter
sbb
or
jmp
fistpll
popf
mov
stos
aad
scas
push
fsubrl
cmp
jecxz
call
mov
xor
std
or
in
cmpb
pop
movsl
frstor
pop
fstpt
pop
mov
lahf
scas
push
sar
jle
movb
loopne
mov
mov
mov
in
data16
sub
ret
cld
sti
test
jle
push
mov
sbb
fstpt
lcall
pop
nop
mov
cmp
add
sbb
adc
jle
jo
dec
movl
aaa
insb
jge
aaa
adc
ret
nop
push
and
jle
rcrl
mov
push
xlat
pop
xchg
movsb
ja
jle
pop
lcall
dec
or
outsb
push
movsb
out
dec
sarb
flds
push
dec
rol
jge
mov
mov
xchg
xor
push
or
test
mov
sbb
imul
leave
xchg
enter
xchg
inc
iret
inc
testb
mov
pop
dec
push
nop
lret
push
dec
jne
inc
dec
or
orl
cmova
xchg
mov
mov
xchg
cmpsl
mov
fadd
sbb
mov
add
sub
dec
cwtl
pusha
cmp
mov
movsl
push
mov
nop
dec
testb
dec
push
lods
mov
inc
sbb
push
pop
sbb
sub
jge
xor
data16
pop
push
fisubs
inc
sahf
aas
out
adc
and
mov
sti
mov
xor
push
ret
cmp
ja
jge
mov
jl
cwtl
lret
inc
add
iret
inc
xchg
jl
mov
xor
pop
push
jg
test
cmp
mov
xor
ret
insl
lahf
lods
lahf
sub
cld
sbb
insb
and
inc
lods
leave
or
leave
dec
movsb
lret
fdivs
mov
ret
jmp
rolb
xchg
cld
mov
and
push
cmpsb
mov
rorb
push
into
test
add
sub
push
std
insb
inc
lcall
dec
fdivl
sub
std
push
mov
ja
push
xor
lods
pop
mov
lcall
jne
mov
ljmp
insb
fisubrl
push
push
pushf
xchg
mov
rclb
syscall
pushf
mov
subl
lea
cmp
inc
repnz
sbb
pop
vpcmpgtb
in
push
neg
pop
inc
cmp
enter
dec
adc
pop
mov
je
jno
mov
push
mov
sub
lods
lret
aas
cwtl
out
mov
and
sarl
sbb
or
rcrb
aas
out
ja
ret
cmpsl
dec
cmp
inc
insb
bound
push
stc
mov
mov
inc
mov
ds
stos
push
movsl
mulb
in
dec
mov
std
ret
mov
lods
mov
jno
adc
mov
mov
and
negl
xor
les
pop
mov
dec
jbe
sbb
shlb
std
add
dec
fs
add
inc
inc
ja
sbb
and
pop
ficoms
pop
std
imul
and
rcrb
dec
outsb
sub
dec
mov
mov
imul
in
sbb
cwtl
cmp
push
adc
push
xor
or
sahf
js
cld
push
mov
mov
jl
pop
cmp
mov
or
jne
mov
inc
push
mov
cmp
xchg
inc
aad
std
or
rol
int3
stc
shlb
or
iret
gs
mov
push
int3
mov
lret
testb
testb
mov
enter
mov
test
sbb
sbb
bound
xchg
mov
ror
pusha
fcomps
cwtl
stc
pop
fmull
adc
inc
xchg
ret
roll
mov
mov
jbe
xchg
dec
mov
pop
jae
mov
aam
ret
push
cmpsb
into
jne
into
xchg
pop
mov
mov
gs
sub
mov
ja
cmp
sbb
movsl
sub
pop
nop
sbb
rorb
notl
push
iret
dec
push
mov
out
mov
push
xchg
outsb
mov
jae
pushf
rcrb
sbb
pop
pop
ret
inc
lods
pop
lret
into
cmp
sbb
adc
loopne
mov
sbb
pushf
popf
xchg
enter
enter
mov
rorl
sti
jae
xchg
push
push
pop
pop
out
adc
into
xor
dec
jmp
sarl
dec
test
xchg
and
popf
test
mov
dec
nop
push
fcmovb
push
sbb
rcrl
aad
inc
roll
hlt
movb
idiv
and
testb
pop
pop
cwtl
into
pop
fiaddl
pop
dec
cmp
inc
nop
lock
pop
int
cmp
inc
stos
pop
enter
sub
mov
push
es
fidivl
adc
push
rcr
or
pop
pop
mov
xlat
jl
pop
int
jae
js
lret
es
sbb
xchg
cmp
ds
sbbl
mov
mov
fstpl
popf
xchg
pop
jae
xlat
cmp
ret
mov
enter
xchg
adc
stc
iret
cmc
int
enter
mov
jae
int3
xchg
add
cld
pop
hlt
fucomi
pop
mov
pop
or
pop
jne
mov
movsl
push
mov
mov
aad
pop
mov
pop
dec
shlb
clc
mov
mov
add
mov
adc
aad
push
fdivrs
cwtl
lds
mov
xor
jge
das
mov
mov
scas
push
pop
lret
push
nop
xchg
push
jno
or
shlb
pop
icebp
sar
cli
fidivrl
int3
pop
fstp
adc
aas
mov
jl
rclb
and
mov
lcall
pop
ljmp
in
cli
cmp
pop
jecxz
push
popa
inc
adc
rclb
nop
cmp
mov
pop
loope
pop
mov
adc
and
aaa
and
sti
stc
mov
in
ffreep
mov
xor
mov
mov
sbb
scas
jmp
push
mov
mov
inc
clc
mov
repz
pop
sbb
dec
sbb
add
sub
aaa
inc
sbb
leave
sbb
sti
xlat
cmp
push
adc
inc
adc
xchg
mov
mov
mov
dec
jb
mov
or
push
sbb
pop
es
fidivl
mov
lds
xchg
in
lret
dec
mov
pop
aaa
or
xor
cltd
fcompl
lcall
cld
xchg
js
movsl
scas
movsb
mov
pushf
mov
cld
enter
stos
fdecstp
cmp
fdivl
inc
daa
ljmp
sbb
add
lret
or
out
out
or
cmp
dec
adc
aad
add
jne
ret
xchg
dec
aas
fwait
cmp
mov
cmc
mov
push
andb
xlat
iret
roll
push
out
sahf
aad
push
adc
das
inc
aam
popl
pop
sbb
int3
pop
les
or
push
movsl
inc
jge
mov
cltd
lods
iret
into
sbb
cltd
les
jbe
repz
xor
jno
push
xchg
cs
inc
enter
aad
js
cmp
push
mov
testb
adc
sbb
jnp
cmp
inc
adc
aas
sahf
pop
loopne
cmp
or
notl
push
jecxz
loop
sahf
ss
aas
xor
icebp
rorb
test
push
aam
xor
adc
ss
dec
jl
int
push
sub
addr16
sbb
inc
mov
aas
jb
in
jne
jmp
inc
or
jae
dec
mov
jb
scas
adc
mov
aam
jno
int3
adc
jae
mov
and
dec
fimull
adc
xor
sbb
aas
mov
sbb
testl
adc
fs
addb
lds
sbb
mov
jb
fwait
push
jmp
cltd
insl
cmpsb
aam
xor
and
cltd
ja
push
adc
dec
shl
aaa
aam
or
mov
leave
lods
xor
scas
lret
rcr
fmuls
xchg
scas
lret
inc
sbb
adc
shr
pusha
or
decl
js
inc
ret
push
divl
push
cmp
imul
inc
add
cli
add
mov
adc
cwtl
pushf
jne
fldl
or
cli
and
fnstsw
cmp
imul
sub
rcr
mov
push
lea
xor
jno
lods
movsl
inc
dec
orl
jg
ret
sbb
les
cmp
fstl
movsb
das
fsts
pop
ret
xchg
xchg
cmp
inc
ja
std
les
mov
or
test
out
cmp
jno
mov
insb
jns
sbb
popa
add
pusha
addl
inc
push
rcrl
push
jmp
rclb
dec
lret
adc
in
mov
mov
cwtl
sbb
push
stc
mov
sbb
jmp
add
add
ja
push
cmpsl
cmp
sbb
in
push
arpl
fs
pop
lret
cmp
sbb
sbb
sub
int
fs
dec
pusha
test
mov
inc
or
add
inc
lods
les
push
mov
movsb
jns
mulb
jae
mov
aas
lahf
push
jns
inc
mov
fstpt
jne
sbb
pop
cmp
push
mull
gs
aas
pushf
mov
xlat
fnsave
mov
ret
adc
shrl
outsb
mov
sub
adc
rolb
mov
xchg
mov
cmpl
dec
les
test
sub
inc
loop
cld
and
fbld
aam
push
xchg
adc
xor
stc
mov
xchg
mov
bound
inc
mov
mov
cmp
ret
into
mov
mov
pusha
pop
mov
dec
rcrb
inc
inc
pop
cmp
ja
xchg
rclb
int3
lret
mov
or
inc
lods
mov
jns
dec
sbbl
int3
adc
rorb
push
nop
inc
jne
dec
pop
push
inc
sbb
jmp
or
insb
icebp
orb
cvttps2pi
mov
iret
and
pop
jae
in
ror
mov
pop
cmp
les
iret
cmpsb
hlt
jecxz
push
add
adc
lahf
xor
in
push
push
xor
in
pop
stc
scas
cmc
push
icebp
in
ret
dec
add
cmp
xchg
mov
in
ror
test
pop
aas
jbe
pop
cmp
ds
xlat
push
push
mov
push
adc
call
sub
cmp
cs
pop
jmp
rcr
aas
mov
ss
pop
sbb
das
xchg
sub
push
dec
cmp
negl
into
lret
inc
inc
sarb
xlat
sub
adc
lret
adc
test
rolb
push
xchg
icebp
lret
inc
cld
sub
aaa
insl
idivb
ret
mov
lahf
rorl
lret
sbb
rcr
fdivrl
mov
adc
adc
pop
pop
js
mov
lret
mov
and
popf
mov
xchg
sbb
jb
and
mulb
lahf
dec
cmp
test
fstps
imul
fcom
xchg
mov
repnz
xchg
stos
sarl
xchg
sub
dec
addr16
gs
ds
and
push
jle
ja
stc
sbb
mov
sub
cmpb
mov
nop
mov
xchg
add
cli
popa
ljmp
jg
mov
pop
cmp
push
out
pushf
jae
mov
push
pusha
or
add
jl
rorb
clc
adc
add
idivb
insb
sbb
mov
inc
cli
jb
nop
hlt
dec
int3
in
in
gs
rolw
andb
adc
les
sahf
sbb
insb
fcmovne
push
imul
fwait
dec
ret
push
xor
mov
pop
sbb
jae
mov
xlat
cmp
adc
push
mov
and
aam
or
add
pop
lcall
xchg
inc
rcr
lcall
pop
cmp
mov
pop
or
inc
pop
cmp
xchg
nop
cmp
jns
adc
sub
and
rcrl
sbb
mov
stos
xchg
mov
arpl
stc
ds
inc
cwtl
inc
mov
push
mov
sbb
subl
aaa
rolb
dec
push
popa
mov
xor
ret
pop
push
aam
push
rcrl
pop
adc
cmpsl
push
xchg
sub
lret
mov
mov
sbb
push
jmp
stos
lret
roll
jmp
sbbb
in
cwtl
mov
scas
iret
pop
clc
stos
mov
rcll
cmp
mov
sub
push
loopne
adc
inc
cwtl
rol
dec
cmp
jb
das
or
fcmovb
xchg
sahf
outsb
add
push
push
adc
push
mov
fsubrp
subb
ffree
dec
stc
rcll
sbb
insb
jmp
sahf
pop
mov
mov
sahf
sti
mov
addr16
and
xchg
cltd
data16
or
in
inc
xchg
jge
push
mov
sbb
mov
les
scas
aas
inc
cmp
pushf
mov
sbb
mov
mov
mov
jae
adc
aaa
sbb
inc
dec
movsl
ror
fcoms
test
sahf
mov
aad
push
xor
xchg
push
inc
andl
rcrl
push
jmp
outsb
fwait
jmp
sub
addb
sbb
enter
sbb
insb
test
hlt
xor
pop
dec
sti
push
jp
or
xchg
repz
subb
xor
mov
sbb
lods
rcl
nop
ljmp
pop
sbb
ret
adc
lods
or
xchg
add
adc
shll
repnz
cld
jne
mov
les
unpcklps
push
pshufw
int3
pcmpeqw
test
les
sub
sbb
inc
cmpsb
js
and
sbb
or
push
or
das
xchg
repz
pop
dec
xchg
push
cmp
aam
mov
xchg
xchg
or
jmp
fldcw
xchg
mov
add
pop
mov
pop
aas
or
jge
push
mov
mov
sbb
sub
lret
psubusb
enter
xorb
or
ret
lea
mov
xor
push
or
das
aas
scas
or
cli
lods
jmp
mov
sub
fsubrl
lahf
stos
pop
add
test
or
xchg
movsl
pushw
movsb
andb
and
dec
sbb
por
mov
pop
mov
cmc
cmp
imul
adc
aas
pop
sbb
dec
mov
into
push
add
sub
dec
dec
aaa
pop
negb
mov
mov
fimull
push
shlb
mov
push
nopl
insl
cmpsb
adc
sbb
push
push
fwait
nop
adc
mov
sub
popf
hlt
pop
outsb
add
lret
sbb
dec
cltd
gs
adc
ret
fcoms
sub
cwtl
cwtl
xlat
test
cmp
adcb
mov
jp
aam
and
test
fadds
pop
xlat
jne
dec
pop
jle
aad
sub
mov
push
xchg
pushf
lahf
lret
mov
pop
addb
leave
dec
movsb
inc
xchg
rol
push
ja
fcoms
test
lahf
inc
lahf
rclb
mov
pop
jns
push
pop
xor
mov
fcmovnb
pminub
pop
psubusw
pop
psubusb
mov
push
lahf
in
jge
push
aam
repnz
fimull
int3
lcall
mov
stc
add
push
pushf
leave
xchg
cmp
cmpsb
pushf
mov
ret
int
xor
js
cmp
in
add
stc
mov
stos
enter
push
pushf
xor
ret
push
in
mov
push
xchg
add
and
mov
dec
pop
lahf
jmp
ret
stc
pop
insb
fst
les
pop
xor
dec
cltd
clc
mov
push
adc
push
xor
sahf
or
mov
pop
in
cmp
xchg
pop
sbb
ret
cmp
push
dec
ja
push
add
inc
adc
cs
inc
insb
pushf
sbb
inc
mov
push
inc
cmpsl
movsb
aad
dec
jns
or
test
test
sbb
popf
inc
push
dec
sub
xchg
mov
dec
adc
stc
cmp
std
lret
sbb
pop
adc
popf
sbb
cmp
add
and
xor
pop
in
sub
xchg
sub
and
test
lds
mov
nop
inc
or
xsha256
cmpsb
adc
push
jg
mov
or
push
testb
call
xchg
mov
xchg
push
out
std
push
mov
pop
jge
push
rolb
pop
pushf
dec
outsb
inc
xchg
mov
pushf
jmp
roll
xchg
and
std
push
adc
ret
sub
outsb
xchg
pop
mov
add
mov
dec
or
push
cmp
jae
sbb
dec
sbb
or
enter
mov
cwtl
adc
rol
xchg
dec
enter
sti
fcmovnb
jg
daa
dec
or
mov
ljmp
xchg
mov
insb
xlat
mov
pop
scas
sub
xchg
popa
addb
pushf
cmp
sbb
stc
push
ds
push
sahf
add
inc
mov
adc
pop
push
mov
arpl
pop
push
xor
fwait
add
loopne
dec
sbb
push
cmc
ret
inc
jb
xchg
idivb
pushf
add
ret
inc
pandn
push
dec
xchg
in
add
inc
mov
jge
jns
xchg
push
dec
xchg
pcmpeqb
xchg
lds
dec
aas
lods
dec
dec
cli
sub
sub
pop
mov
xchg
jp
inc
mov
rclb
int
sub
mov
movsl
fiadds
lahf
jg
adc
cmp
dec
mov
pop
rcrb
mov
jl
sbb
cmp
aas
jns
mov
xor
lahf
sub
mov
push
outsl
xchg
xor
adc
adc
cmp
adc
sbb
pop
inc
mov
mov
sbb
scas
or
fistpll
int
orb
mov
outsl
jne
andw
xor
lret
std
pop
fdivl
pop
leave
inc
cmp
cmpsl
xchg
cmp
pushf
stc
cmpsb
inc
cwtl
push
mov
ljmp
les
mov
divl
sbb
mov
mov
addl
lret
int3
push
adc
outsb
mov
jmp
dec
into
sbb
or
push
mov
xchg
sbb
mov
mov
popa
push
int
dec
lcall
mov
int
rol
ljmp
shufps
cwtl
mov
pop
idivb
pop
pop
cld
pop
cmpsl
mov
mov
xlat
fcomps
pushl
mov
lcall
stos
dec
cmpsl
dec
pop
xchg
adc
jl
ds
ja
aad
mov
mov
mov
stos
pop
lahf
out
sbb
dec
shlb
push
push
shrl
aam
lret
cld
fdivrs
test
mov
adc
cmp
outsb
push
xchg
mov
xor
push
addr16
arpl
in
js
cmp
mov
sbb
mov
outsl
cld
add
rcll
mov
pop
xlat
push
jo
mov
insb
inc
ret
test
mov
xchg
roll
das
mov
leave
cmp
and
push
mov
inc
scas
ret
or
test
aam
loop
adc
pop
mov
cmp
pop
cmp
inc
clc
adc
adc
and
and
lea
inc
pop
adc
sub
push
movsl
aas
and
mov
cmp
mov
das
ret
mov
psraw
lahf
out
pop
fmull
sbb
in
mov
mov
and
xchg
cmp
mov
pop
mov
stos
push
pop
cmp
sti
xchg
cmp
xorb
pop
push
fcmovnbe
int
mov
enter
sub
adc
lret
pop
pop
sbb
mov
shll
mov
aam
ffree
pop
out
pop
pop
dec
mov
rcr
repnz
fcom
or
xlat
xorps
pusha
push
pusha
aam
push
adc
cltd
psrld
aas
pushf
cli
push
ljmp
dec
pusha
lret
pusha
dec
or
push
leave
pop
xchg
mov
adc
jl
enter
push
cli
ret
mov
rolb
cli
inc
jmp
push
add
mov
adc
cli
or
outsb
adc
pop
push
adc
movsl
inc
mov
inc
push
ror
dec
ror
adc
outsb
test
addb
cli
aas
pop
negb
fnstsw
pop
or
sbb
outsb
push
pop
pusha
fiaddl
pop
hlt
fdivr
push
xlat
movsl
push
pop
inc
push
cmp
gs
mov
xchg
mov
into
std
mov
mov
jg
push
push
sar
push
scas
pop
stc
rclb
dec
cmp
dec
js
inc
sbbb
int3
idiv
push
sahf
int3
std
add
mov
dec
add
mov
sub
popf
cmp
les
sub
add
inc
cmpsl
push
stc
cmpsb
add
add
cld
aad
in
movsl
mov
cld
xchg
mov
inc
push
jl
dec
sbb
fnsave
adc
inc
lods
mov
jmp
inc
aas
xchg
mov
fstpl
push
mov
sbb
enter
mov
mov
cltd
cmp
dec
push
lcall
fcmovu
dec
leave
jl
ret
rorb
dec
inc
pop
sarl
pop
pop
pop
mov
add
inc
pusha
ret
addb
pop
pop
aaa
pop
enter
push
sbb
leave
test
dec
mov
pop
mov
ret
mov
push
inc
jl
mov
inc
mov
pop
pop
dec
push
mov
iret
iret
jae
cld
mov
pop
push
aas
popf
fiaddl
dec
mov
stc
push
mov
dec
ret
aas
ret
sub
push
jne
outsb
rcll
push
push
or
dec
dec
gs
mov
pop
rcrl
pop
in
into
push
in
into
jmp
lcall
js
test
push
rclb
inc
fdivrs
pop
lods
inc
mov
pop
cmp
push
dec
dec
cmovnp
dec
out
les
mov
pop
sub
aad
movb
rcll
jne
orb
rorb
popa
jge
inc
mov
push
rcll
dec
je
daa
sbb
inc
pop
pop
sbb
push
jmp
dec
dec
inc
mov
dec
into
jne
cld
dec
dec
mov
cmp
sub
dec
xchg
inc
setae
dec
daa
in
xchg
inc
inc
inc
mov
cwtl
sahf
push
sete
mov
jl
rclb
pop
mov
sbb
jl
inc
into
stc
dec
mov
sbb
ret
or
sbb
sarb
dec
or
push
fsubrs
sbb
fmulp
dec
dec
inc
pop
push
sahf
fcomp
adc
inc
dec
stc
pop
std
test
mov
icebp
inc
les
cld
push
ret
movsl
inc
mov
jns
mov
pop
mov
pop
mov
xchg
neg
negb
fadd
ljmp
test
ljmp
mov
rcll
mov
inc
sub
or
cltd
aam
push
in
in
movsl
shr
pop
roll
mov
sbb
stc
int
int3
xlat
sbb
xchg
ljmp
or
fsubrs
adc
dec
rcrl
push
movsl
shrl
or
dec
push
cmp
ret
test
rcll
addb
inc
pop
pop
cmc
lds
inc
mov
dec
push
sub
push
push
inc
iret
cli
or
hlt
fmul
in
in
in
gs
stc
fwait
lret
inc
leave
jge
enter
and
or
inc
test
inc
fdivs
ret
mov
inc
inc
push
les
ret
aas
inc
pop
ja
sbb
and
add
rol
push
mov
ret
stc
iret
mov
mov
xchg
dec
mov
ret
dec
dec
repz
ror
or
push
pop
ret
dec
adc
xchg
dec
orb
and
roll
ds
rorl
int3
or
int3
imul
gs
sub
rcl
aas
inc
ljmp
xchg
pop
ja
clc
push
push
fmull
dec
bswap
cmovp
inc
mov
xor
xchg
pop
aas
fmull
sbb
aas
mov
push
xchg
pop
push
in
aam
push
dec
test
push
cwtl
add
inc
add
rol
mov
iret
mov
insb
int
sbb
orb
lret
leave
aas
dec
dec
sbb
testb
sub
add
dec
lcall
dec
jle
call
mov
add
inc
mov
in
jne
or
test
clc
xchg
cwtl
xor
ja
sbb
push
jno
nop
dec
cmp
in
cltd
lahf
xchg
fstps
pop
pushf
and
mov
push
mov
mov
inc
pop
dec
insb
inc
int
pop
mov
dec
adc
jne
inc
notl
test
jae
jge
dec
mov
inc
rcrl
pop
clc
sbb
push
into
cmc
dec
and
enter
into
rcrl
push
pop
pushf
dec
test
dec
mov
inc
lahf
mov
ja
add
inc
insb
fs
and
dec
fcoms
aad
test
shr
cltd
sbb
dec
pop
into
fisttpl
stc
dec
pushf
inc
push
pop
xchg
leave
mov
hlt
rorl
mov
addl
dec
push
jne
fsubrl
jg
repnz
ror
repnz
mov
into
xor
or
insb
push
int3
inc
xorl
inc
imul
and
xchg
or
dec
dec
lds
mov
ljmp
add
jno
xlat
fisttpll
insb
mov
shr
test
dec
enter
mov
mov
cmp
xchg
mov
push
mov
mov
leave
pop
xchg
cmp
dec
adc
enter
popf
rcr
fisubs
test
lret
lods
rcl
pushf
fimull
xchg
mov
aas
mov
push
jne
jge
aad
aam
xlat
lret
ds
imul
inc
enter
pop
sbb
hlt
xadd
push
frstor
outsb
int
sbbb
xor
ret
in
shlb
rcr
pop
push
add
test
jg
cmpsb
fwait
lds
inc
push
xchg
push
ret
fmuls
fcmovb
xlat
inc
ret
jmp
mov
and
adc
inc
leave
ror
dec
mov
insl
pop
mov
push
push
pop
push
out
sbb
or
push
adc
pop
pop
pop
ds
dec
and
sub
push
imul
adc
fstpt
rcl
fdecstp
into
clc
int3
cmp
repz
pop
inc
inc
inc
pop
adcb
adc
mov
aas
jg
xchg
adc
xchg
sub
enter
or
out
rolb
or
cmc
dec
aam
lcall
inc
fimuls
fsubl
shrb
add
pop
jne
orb
popa
cwtl
xchg
push
sar
mov
iret
xchg
adc
add
jne
rcrb
test
rorb
mov
int
mov
or
lret
hlt
leave
mov
fwait
mov
bswap
hlt
inc
push
pop
mov
push
jmp
inc
dec
mov
add
adc
or
lret
sahf
mov
cmc
fmull
call
mov
rolb
sarl
iret
les
dec
int
lret
aas
dec
out
rorb
rcr
enter
outsl
lcall
xlat
cmc
push
pushf
ror
push
dec
sub
popa
imul
add
dec
fstpt
sbb
xor
pop
sbb
or
ds
ja
inc
jmp
sahf
or
mov
add
inc
pextrw
push
inc
or
push
fmuls
iret
dec
or
les
push
xchg
fldcw
sub
or
lret
movsl
dec
stos
sbb
negl
clc
aam
mov
add
leave
inc
pop
rolb
into
lods
dec
pop
dec
add
nop
inc
dec
ficoms
add
stc
push
mov
test
dec
push
fidivs
cmp
xchg
sahf
push
leave
mov
adc
add
lret
mov
inc
ja
xchg
rcll
mov
ja
push
ss
lret
dec
lds
shlb
sarl
rorb
push
dec
mov
dec
iret
or
mov
nop
dec
push
mov
pushf
into
lds
dec
or
push
les
popf
xchg
call
add
rcrl
ret
rcrl
pop
push
xchg
leave
or
into
or
vfmsubaddps
xchg
fisubl
or
xchg
lret
lcall
int
pop
dec
enter
dec
push
or
int
xchg
cmp
push
ret
push
fsubrs
push
fidivl
lcall
int
dec
dec
push
cmc
lds
leave
xchg
xlat
leave
or
int3
leave
lea
pop
sub
mov
xchg
xchg
int
pop
inc
mov
pushf
ret
lea
pop
mov
jmp
popf
dec
add
xchg
lret
int
inc
cmpsl
inc
mov
mov
xlat
inc
inc
push
cmpsl
add
cmp
popf
xor
ret
roll
mov
mov
push
pushf
pop
add
jne
test
aad
push
inc
leave
into
xchg
movb
mov
sbb
xor
inc
add
test
shll
lods
push
adc
lret
inc
mov
roll
movsl
pop
pop
or
mov
pop
sbb
pop
jmp
jne
ret
fldl
push
mov
dec
insb
dec
mov
inc
jmp
test
iret
add
ficoms
push
sbb
sub
les
insb
inc
xchg
iret
int
fstpt
aam
int
push
dec
push
aam
inc
push
insb
inc
jne
aas
dec
cltd
pop
leave
pop
dec
adc
test
ljmp
mov
sbb
dec
leave
pop
rcl
or
mov
shll
stc
dec
dec
xchg
dec
test
inc
xor
stc
pop
dec
lcall
jl
mov
push
dec
adc
decl
cli
leave
insb
inc
js
inc
sbb
xchg
pop
dec
dec
stc
push
pop
mov
dec
cmpl
inc
rolb
repnz
jge
inc
inc
fcoms
dec
xchg
rol
shl
sbb
dec
xchg
mov
dec
push
pop
pop
lods
pop
lcall
sbb
xchg
insb
dec
outsb
dec
inc
addb
test
pop
rclb
pop
push
push
mov
xor
lcall
rorb
mov
ficompl
rcl
lods
push
testb
sub
fldl
rcrb
xlat
pop
push
push
pushw
push
adcb
dec
cmp
ficompl
xchg
inc
std
push
inc
inc
ret
fcmove
ss
adc
test
into
jne
leave
les
xor
inc
cmp
cmp
dec
sbb
enter
dec
iret
jg
dec
sbb
xor
mov
inc
in
inc
ret
sbb
push
add
dec
jl
jne
lret
sub
inc
ret
sub
cmpb
xorb
psrlq
sub
dec
test
dec
rcll
dec
push
cmp
push
inc
enter
inc
xchg
roll
add
pop
jne
pop
cmpsb
int
lahf
push
pop
push
push
inc
psubq
push
rclb
xchg
clc
enter
inc
inc
inc
xchg
pop
inc
pop
cmp
pop
cwtl
rclb
cwtl
andnps
cmpsb
pop
dec
pop
xchg
sbb
dec
mov
dec
adc
inc
movsl
inc
ljmp
call
cld
cmpb
fisttpll
pop
inc
iret
aad
ret
xchg
mov
js
movsl
fnop
dec
xor
inc
pop
push
sbb
push
push
enter
mov
js
sbb
pop
jne
pop
mov
push
lahf
push
cwtl
nop
test
rorb
jmp
push
sti
ret
jne
aas
aam
nop
pop
xor
push
add
push
sti
push
hlt
adcl
sub
dec
pop
jmp
mov
pop
ret
lea
dec
movsl
push
ret
into
jae
cld
xchg
dec
movsl
dec
or
aas
repnz
pop
push
int3
jae
jge
push
mov
rcrl
or
lret
cwtl
int3
mov
push
mov
sbb
lods
dec
test
dec
mov
inc
sub
pop
inc
popf
aad
lods
push
cmpsb
dec
push
mov
dec
aas
inc
dec
iret
push
inc
adc
inc
pop
test
xlat
rclb
shll
movsl
dec
lea
iret
inc
daa
push
enter
movsb
into
sbb
mov
push
les
push
push
dec
aas
dec
lods
lret
lahf
dec
lahf
inc
cwtl
dec
mov
mov
dec
int
or
pop
inc
dec
dec
sbb
and
pop
push
adcb
ljmp
adc
inc
fsubrs
insb
into
push
int
or
cli
inc
insb
fstpl
push
mov
dec
adc
test
nop
nop
pop
push
fcoms
xor
xchg
adc
pop
push
push
pushf
xlat
lret
mov
xchg
rorb
pextrw
push
inc
test
in
rcrb
inc
inc
into
mov
leave
pop
stc
std
pop
mov
xchg
lcall
leave
cwtl
mov
aam
push
imul
mov
inc
js
clc
inc
in
push
inc
inc
inc
in
roll
pop
mov
sub
ljmp
movl
aas
mov
cwtl
rolb
dec
rorb
ret
roll
pop
mov
push
dec
lret
sbb
push
and
lret
ljmp
lods
rcl
sbb
int
fcmove
ret
stos
adc
xchg
fcoml
gs
stos
jg
dec
fidivrs
dec
pop
inc
dec
ret
stos
adc
push
icebp
ret
adc
xchg
push
movsl
into
fidivrs
rol
out
mov
rol
lods
pop
sub
inc
push
mov
repnz
xchg
dec
push
lret
inc
cs
pushf
push
inc
pop
lods
push
xchg
add
adc
cld
lds
clc
ds
ret
imul
stos
push
sarb
cmp
jmp
jne
fimull
add
mov
testb
add
pushf
rcrb
rcl
adcb
cmovge
ret
cwtl
test
add
xchg
push
mov
xor
sbb
inc
les
mov
aad
push
push
notb
push
lea
pop
lds
dec
mov
push
insb
iret
mov
hlt
dec
mov
adc
push
rcll
push
les
inc
sbb
insb
fnstenv
aam
dec
rorl
dec
sbb
adc
frstor
test
lret
leave
icebp
inc
and
mov
fnstsw
lods
push
jns
inc
dec
cmpsb
sbb
jns
mov
adc
jl
mov
pop
cmpsb
sbb
xlat
fdivrs
push
mov
dec
jo
cmp
dec
lahf
dec
lahf
dec
xlat
push
in
inc
gs
sub
dec
xchg
push
fadds
shrb
dec
pop
mov
shrb
fimull
rcll
bswap
hlt
inc
or
lcall
iret
pop
movsl
pop
pushf
push
and
sub
pop
fidivrl
push
js
movsl
dec
inc
aad
leave
jb
inc
addb
xchg
aas
xchg
push
lret
dec
dec
sbb
mov
inc
adc
inc
int
pop
pop
fdivrl
cmpsl
aad
cltd
mov
adc
addb
cmp
xlat
lret
cltd
dec
xchg
sub
or
clc
dec
dec
or
pop
cmp
lret
sub
lret
mov
or
xchg
jo
aas
inc
roll
cltd
rorb
cmovnp
pop
fisubs
mov
add
rcrl
enter
cmpsl
lea
shrl
xor
test
push
fwait
pushf
aad
les
lret
lds
xchg
rcrl
test
dec
cmp
push
pop
dec
pop
mov
stc
rclb
sti
iret
mov
or
movsb
push
ss
lds
pushf
ret
push
pop
or
adc
mov
rcll
int3
aas
dec
or
mov
fwait
addl
fnstcw
rorl
rcrl
sub
lcall
sbb
jne
dec
push
mov
movsb
pop
ss
inc
sbb
aas
fmull
pushl
fadds
shr
pop
adc
addb
adc
jne
sbb
shlb
in
jecxz
ds
rcrl
and
ds
sarl
jb
push
adc
adc
dec
add
jne
pop
jne
faddp
dec
mov
xchg
rorl
cmpb
faddl
push
inc
dec
mov
mov
sub
orb
adc
pop
nop
adc
hlt
and
pop
mov
idivb
aas
dec
fs
lret
xchg
and
mov
aas
mov
movsl
dec
sbb
rclb
ljmp
rorl
xchg
stc
inc
adc
test
hlt
and
aas
cltd
hlt
movsl
pop
jns
push
rcll
push
add
dec
lcall
mov
push
rcrb
lods
enter
mov
jmp
lea
fnstenv
push
stc
aam
flds
pop
sbb
add
sbb
sbb
fwait
mov
pop
ljmp
sahf
ljmp
dec
out
enter
scas
mov
add
out
lret
cmp
iret
int
mov
sahf
ljmp
sub
add
popa
scas
xchg
call
lret
int
aas
push
push
mov
xor
lcall
mov
repnz
repnz
fisttpl
pop
xchg
mov
pop
pop
sarl
jl
add
and
lahf
inc
mov
mov
pop
pop
dec
dec
dec
hlt
lods
leave
xchg
jl
orb
or
pop
cmp
mov
hlt
sub
dec
or
lods
dec
pop
xchg
push
xchg
xchg
movsl
psubq
push
hlt
mov
mov
or
sub
mov
mov
mov
dec
lahf
leave
negb
mov
pop
push
dec
sbb
fisttpll
or
mov
mov
imul
leave
cmpsl
inc
in
lds
mov
mov
add
push
add
mov
cmp
inc
xchg
inc
lock
or
pop
adc
sbb
addb
dec
mov
pop
pop
dec
ror
lods
rclb
jl
adcb
mov
inc
xor
adc
push
jmp
aas
dec
push
mov
adc
mov
lret
dec
fwait
dec
aad
inc
xchg
ljmp
pop
dec
sbb
nop
out
adc
mov
adc
insl
shrl
add
jne
out
xchg
mov
jmp
mov
hlt
sub
inc
fwait
add
sbb
inc
pushf
enter
add
xchg
inc
jne
add
cwtl
roll
inc
add
jge
mov
stc
push
inc
xchg
dec
mov
cmp
aas
stc
xchg
shl
dec
push
or
mov
mov
sub
sub
int3
sub
int
pushf
mov
lods
adc
cmc
mov
inc
sbb
jns
mov
inc
xorb
out
add
cmp
out
inc
mov
cmp
rolb
pushf
or
jno
dec
out
roll
jno
shr
add
mov
call
aam
add
insl
aad
push
clc
adcb
inc
jne
inc
out
or
pop
cmp
out
dec
mov
cmp
mov
sub
sub
subb
sbb
cmp
sub
or
dec
cmp
cmp
mov
sub
lret
ss
lea
fs
pop
enter
dec
cwtl
mov
rclb
pop
stc
fildl
jbe
stc
roll
bswap
push
dec
leave
sub
nop
sub
adc
xchg
sub
adc
xchg
sub
adc
xchg
sub
adc
push
fldcw
sub
daa
push
insb
push
sbb
les
jae
xchg
fcom
mov
pop
dec
push
movsl
adc
or
cmp
xchg
ss
sub
in
mov
xor
sub
out
fcoms
stos
int
sti
dec
orb
and
inc
xchg
daa
popf
insb
inc
push
add
push
adc
pop
xlat
jae
cwtl
adc
sbbb
cs
fwait
or
pop
jne
into
movsl
ja
xchg
je
or
pop
xchg
sbb
sbb
cs
popf
mov
shrl
inc
add
jne
nop
or
push
aad
push
in
sub
push
add
lea
cmp
mov
fldpi
pop
aad
or
inc
inc
out
ret
aas
test
inc
inc
out
push
mov
inc
fstpl
dec
or
mov
mov
psubq
dec
popa
push
inc
popa
cwtl
movl
push
lods
adc
rclb
adc
xchg
cmp
or
sub
mov
rorb
xor
psubsb
push
orb
int3
mov
dec
sbb
xor
and
jecxz
dec
adc
inc
mov
adc
jne
lds
cmp
aad
xor
inc
flds
pop
mov
mov
adc
orb
mov
pushf
test
pop
xchg
sbbb
xor
movl
mov
movsl
mov
adc
dec
adc
mov
sti
or
int3
adc
rorl
lcall
ljmp
and
jmp
mov
sub
push
adc
push
xor
adc
jl
movsl
mov
test
add
dec
mov
hlt
pop
inc
fmull
mov
inc
scas
cmp
ret
adc
movsl
loope
insb
dec
and
inc
inc
shr
sbb
ret
pop
push
aas
aam
add
mov
pop
stc
sub
fadd
and
sbb
inc
xchg
mov
jne
inc
jae
pop
imul
mov
cltd
and
cltd
sub
cltd
sub
mov
addr16
movsl
inc
aaa
cmpl
jmp
inc
int3
imul
push
out
stc
rcrl
cmpsb
int3
push
mov
rclb
cmp
jmp
roll
xchg
adc
adc
push
inc
and
dec
and
call
adc
push
inc
jmp
jmp
inc
out
adc
mov
inc
cmp
arpl
je
sub
add
out
push
decl
outsl
fidivs
xchg
pop
cmp
sbb
dec
orb
xchg
inc
mov
lea
pop
inc
or
adcb
ss
addb
push
out
mov
lahf
stos
push
dec
sub
pusha
iret
repnz
adc
pop
ret
mov
dec
dec
dec
aas
dec
aas
dec
ljmp
inc
xchg
mov
pop
add
insb
dec
fistl
push
out
pop
nop
adc
adc
inc
xchg
dec
pop
testb
and
stc
mov
outsl
inc
roll
mov
jl
lret
dec
add
shrb
enter
inc
kandnb
lods
fidivrl
test
sahf
nop
fwait
push
aad
sub
cltd
repnz
adc
mov
lret
test
lret
fcmovnbe
fstps
leave
pop
sbb
lret
jmp
mov
mov
aad
xchg
sbb
or
lcall
pop
aaa
lret
sbb
or
fisubl
ja
cwtl
aas
ret
jae
sbb
stos
push
leave
xor
mov
rcr
flds
pop
lret
mov
fisubl
in
add
push
rorb
sbb
or
jne
fidivl
cltd
mov
mov
inc
cli
shr
addb
lret
mov
fsubs
mov
sbb
jae
fwait
movsl
cltd
xor
sahf
sbb
pop
iret
push
dec
iret
pop
testb
xor
clc
jg
dec
pop
sahf
pop
push
sub
sbb
fwait
cli
sbb
lcall
cli
cmp
setbe
push
setne
adc
setae
adc
xchg
enter
adc
nop
aas
adc
aas
mov
push
aas
lea
or
aas
mov
or
mov
or
mov
or
mov
or
xchg
pop
aas
xchg
push
aas
test
add
aas
cmpl
aas
cmpb
aas
subl
xchg
enter
and
dec
in
popf
dec
mov
fistps
imul
jg
sub
mov
mov
xchg
pop
cld
xchg
out
lods
push
mov
std
jle
sarb
pop
jge
xor
mov
insb
xchg
push
cwtl
into
stc
in
repz
mov
or
pop
mov
out
jp
rorb
sti
stos
aaa
sub
cmp
int3
jge
lds
mov
or
addr16
push
add
sbb
pop
mov
lahf
and
pop
xor
mov
push
add
xlat
cmp
repz
dec
mov
in
push
stc
ljmp
fiaddl
lret
sbb
movsb
mov
sub
add
push
cmp
mov
sbb
mov
std
lds
cmp
cmc
rorl
and
push
mov
enter
pop
leave
cltd
jge
mov
pop
std
push
mov
or
adc
cmp
testl
push
popa
stc
incl
jl
and
pop
mov
nop
inc
test
sub
add
ror
insl
mov
scas
rcrl
nop
clc
push
jo
int3
mov
int
jns
push
xchg
cmp
ljmp
xchg
imul
lret
inc
ja
cmp
xchg
push
mov
mov
sbb
lods
mov
dec
dec
pusha
mov
adc
cltd
testb
les
sarl
rcrb
pop
sti
cltd
fimull
sub
pop
nop
loop
push
les
sti
sbb
cs
inc
pop
jp
mov
xchg
ljmp
xchg
cli
ja
mov
pop
or
push
ror
push
mov
xor
subb
adc
sbb
lds
or
call
lret
clc
jno
push
mov
add
jp
mov
adc
ficoms
xor
rcrb
dec
cmp
push
mov
out
insb
sub
push
pop
xor
mov
pop
dec
out
xchg
inc
enter
test
jmp
stos
testb
aam
inc
fcoms
xor
adc
aam
push
mov
insb
je
sbb
repnz
jg
mov
testl
sarl
push
sarb
jg
mov
push
mov
mov
dec
aam
out
fmuls
cs
js
or
xor
push
out
push
sub
pop
sahf
imull
aad
stc
xlat
or
movsl
jno
add
xchg
mov
rclb
ds
sbb
roll
nop
fdivrl
cltd
jns
inc
pushf
cmp
shll
pop
cwtl
jns
dec
xchg
lahf
cmp
mov
mov
mov
xlat
adc
adc
mov
out
and
xchg
test
fcmove
pop
xchg
mov
stc
js
mov
pop
inc
mov
notb
adc
lret
xlat
cmpsb
or
fsts
jge
mov
mov
mov
cltd
ja
dec
sarl
mov
xchg
jl
test
ficoml
adc
pushf
cwtl
fdivrl
or
and
xchg
xchg
pop
jne
and
push
testl
stos
ja
xchg
ret
inc
push
sub
xchg
imulb
movsl
loopne
pop
xchg
push
ret
aam
cmp
insb
add
test
pushf
mov
sub
dec
mov
ret
sar
xlat
push
or
es
inc
pop
mov
pop
fwait
pop
int
out
dec
inc
push
pop
rcrb
push
push
dec
cmp
rclb
mov
cmpxchg8b
pop
pop
cmp
rcll
jne
mov
cld
cltd
jge
add
push
nop
rclb
adc
iret
add
sbb
inc
sub
shlb
dec
xchg
enter
sub
shrb
mov
push
imul
inc
ficompl
sub
mov
push
add
ds
push
ret
sarl
notl
pop
push
jne
pushw
out
pop
push
fwait
or
sub
xchg
sbbl
fmul
push
push
xor
cmp
xlat
jne
nop
clc
out
std
and
mov
int
dec
aam
dec
xchg
mov
lea
imul
pop
or
pop
loope
jp
mov
jecxz
pop
js
movsl
mov
sbb
cmp
imull
add
pop
cmpsb
xchg
pop
pop
adc
cld
xchg
xor
fadd
iret
pop
jmp
ss
pop
mov
xchg
adc
jne
pop
xor
mov
push
lock
mov
inc
mov
adc
imul
sarl
adc
adc
stos
iret
add
sbb
sbb
addr16
xchg
dec
into
and
in
fdivrl
or
dec
xchg
cmc
fcomps
fbstp
lret
xchg
lods
aas
sbb
jle
sbb
add
sbb
xchg
test
cmp
sub
push
and
mov
mov
stos
dec
sbb
mov
xchg
call
mov
pushw
insb
push
stos
inc
or
mov
fstl
mov
xor
dec
jbe
lret
pusha
dec
scas
dec
jl
fcomps
icebp
stc
imull
adc
adc
pop
sub
or
aaa
ss
mov
sub
mov
push
ror
push
jne
cmpsb
inc
add
or
or
sbb
ret
enter
dec
xchg
cmpb
mov
push
leave
dec
xchg
scas
psubw
jns
jmp
adc
sbb
push
aad
adc
xor
pop
cmp
jae
push
rolb
cmp
cmp
inc
dec
pushf
ds
jge
cmpl
aaa
cmp
cmp
iret
fdivs
mov
xchg
jmp
pushf
aad
pop
shl
xor
sbb
xchg
mov
lock
out
push
push
xor
lods
jb
sub
ss
les
adc
sbb
mov
mov
rclb
jo
lods
iret
lcall
divl
jno
loope
js
push
cmp
xchg
pushf
mov
pop
mov
add
rcl
pop
ficoml
pop
adc
lret
push
aad
sub
int
loope
adc
jg
repz
mov
call
cmc
ljmp
stc
xlat
aam
test
xchg
xchg
mov
shll
or
movsb
stos
xlat
aaa
fs
cwtl
pop
mov
push
lods
cld
sbb
shll
mov
cmp
cwtl
std
push
fdivrl
adc
pop
or
movsl
lods
int3
xchg
xchg
pop
aas
fdivs
in
ds
dec
or
inc
push
les
or
sbb
ja
dec
enter
cmp
incl
lods
push
xchg
push
out
dec
jne
inc
ficoms
scas
mov
movsl
add
movsb
cmp
enter
ss
jl
pop
mov
stos
leave
rcl
push
inc
push
pop
sbb
dec
cmp
push
shll
mov
xor
test
sbb
fisubrs
mov
movsl
add
pop
mov
or
les
adc
aad
sbb
imul
lcall
lahf
xchg
mov
jmp
jbe
jle
nop
xchg
pop
jmp
push
insl
mov
rcrb
inc
xlat
sub
sbb
out
jg
xor
mov
inc
cmp
fwait
ret
lods
mov
mov
pushf
fldt
rclb
xor
push
je
insb
xor
ja
stc
dec
mov
pop
les
fcmovb
pop
sbb
dec
mov
sbb
or
cwtl
js,pt
inc
enter
aaa
adc
sbb
divl
mov
inc
mov
push
arpl
xchg
dec
inc
rdmsr
fcmove
push
cmp
stc
mov
xor
pop
mov
mov
cmp
das
pop
test
xor
sbb
aaa
adc
out
or
movsb
inc
sbb
das
mov
repnz
fdiv
sti
rcll
aas
cmpl
popa
jge
jp
pop
aas
shlb
rcll
inc
lahf
dec
push
rcl
adc
mov
jle
mov
outsb
dec
inc
cmp
fidivrl
push
push
test
rcll
sahf
enter
int3
pop
xlat
jg
outsl
or
mov
ror
or
into
aam
aam
mov
fsubs
mov
sarl
fstpt
mov
adc
pushf
xor
push
inc
rcrl
xchg
setbe
daa
inc
or
mov
stos
ror
fdiv
fmuls
pushf
mov
popfw
scas
insb
out
sti
xchg
dec
adc
adc
xor
pop
jbe
pusha
ja
into
xchg
shlb
xchg
shlb
dec
dec
mov
sbb
jns
inc
push
xchg
sbb
or
xor
fs
imul
not
sub
dec
push
jle
jne
dec
stc
xlat
std
sbb
std
enter
fbld
ret
inc
insb
pop
imul
pop
mov
dec
mov
pop
jns
or
sub
jg
test
cmp
aas
push
push
leave
gs
dec
stc
xchg
cld
cmp
xchg
inc
insb
shll
inc
ss
xchg
mov
icebp
mov
rclb
xlat
pop
ret
or
add
or
sub
xorl
in
mov
test
xchg
loop
enter
jns
push
and
jl
addr16
mov
roll
adc
stos
xchg
movsl
cmp
xchg
dec
dec
sbb
inc
aaa
into
pop
or
test
rcr
inc
aad
mov
idivb
add
mov
test
lock
jo
adc
dec
fstpl
sbb
cmc
out
pop
loope
or
pop
xchg
and
add
neg
lock
dec
cmp
ret
pop
jl
cld
mov
out
mov
xchg
xchg
mov
xchg
xchg
pop
ret
sarl
mov
std
push
jo
adcl
xchg
out
test
dec
sbb
mov
inc
push
sbb
or
insb
pushw
mov
xor
dec
xchg
inc
subl
xchg
sarl
xchg
nop
cmp
mov
lods
and
lcall
ret
push
stc
xor
cmp
enter
inc
adc
enter
inc
stc
sbb
cmpsb
dec
ljmp
mov
xchg
cmpb
mov
adc
sbb
ljmp
testb
les
scas
rcr
inc
mov
pop
cmp
mov
gs
int3
lods
xlat
mov
mov
mov
mov
out
lahf
ret
aam
jae
sbb
fdivr
mov
xchg
mov
pop
enter
add
or
sbb
enter
lahf
xchg
enter
push
stc
inc
add
sti
lret
scas
nop
jge
pushl
jge
mulb
sub
cwtl
inc
push
mov
jo
jle
ss
daa
insb
gs
nop
cmp
sbb
sbb
addl
cmp
push
sbb
lcall
push
xchg
insl
ds
push
mov
lret
rcr
pop
or
rcrl
adc
fdivrs
sbb
mov
push
sti
or
ret
xor
or
insl
mov
adc
testl
iret
loope
xor
rorb
pop
mov
outsl
lods
movsb
jno
inc
fiadds
rcll
dec
xchg
and
inc
jmp
cs
sahf
xchg
lret
xchg
pop
xor
add
or
daa
ds
rorl
shrb
insl
xchg
sbb
mov
cwtl
ss
or
pop
in
cmp
pop
pop
xlat
mov
repnz
cmpb
pop
shll
jmp
aaa
es
popf
push
int
mov
push
outsb
stc
fsubs
mov
adc
sbb
or
je
std
test
hlt
filds
push
cmp
add
sub
xchg
mov
inc
mov
dec
inc
sub
cld
addr16
dec
fldcw
lahf
std
pop
mov
fsubl
mov
add
aas
mov
xlat
into
pop
lock
sbb
xchg
in
nop
aaa
in
pop
push
xchg
insb
push
pushf
jge
sbb
mov
dec
movsb
and
cmp
aam
sbb
push
and
xchg
mov
pusha
inc
mov
inc
mov
std
das
aaa
jno
and
mov
int3
push
outsb
cwtl
mov
in
inc
pushf
jl
rcl
fs
mov
mov
adc
mov
cs
sbb
cmp
ja
inc
sub
dec
dec
pop
sub
lds
mov
das
jmp
inc
hlt
jle
xchg
stc
aam
fst
pop
xchg
jne
and
xchg
std
pop
gs
and
sbb
jno
in
adc
pop
push
sub
mov
push
enter
mov
sahf
mov
jns
fldl
shlb
pushf
pop
pop
loop
cmp
xchg
test
mov
jmp
cwtl
aad
or
pop
rcll
xorl
aaa
insl
ja
pushf
add
dec
repnz
cmp
adc
sbb
aam
into
stc
inc
scas
xor
pop
pushf
cmpsl
xchg
subb
xor
pop
lret
inc
rcrl
cs
dec
cmp
ret
push
nop
clc
loopne
cltd
cmp
add
mov
xchg
aad
dec
push
fimull
and
or
stc
xchg
icebp
push
dec
sub
lcall
pcmpgtd
push
sbb
adc
push
jge
nop
rorl
ja
pop
cli
fidivrl
int
test
push
fcomp
hlt
adc
call
iret
stc
popa
aad
js
or
cmp
pop
pop
cmp
sbb
idiv
mov
mov
mov
adc
into
popa
sub
pop
aas
cmp
mov
xor
push
out
aas
ret
inc
jg
sbb
mov
cmp
fistpl
movsl
je
lret
sbb
push
insb
lret
push
rorb
push
pop
aam
shlb
fcomp
cmp
dec
rcl
dec
clc
sti
cmpsb
iret
scas
jns
sahf
jp
pop
dec
sbb
xor
mov
iret
sar
cld
push
mov
movsb
das
or
push
mov
pop
rcll
jo
push
adc
into
nop
fcompl
sbb
jl
enter
addb
cmp
cmpsl
or
sbbl
leave
pop
stc
pop
push
lea
rcll
mov
rcrb
pop
dec
pop
out
adcb
icebp
enter
mov
and
leave
mov
xorl
mov
inc
flds
cmp
mov
fdivs
jl
pop
jge
pop
ror
rclb
mov
push
psllq
mov
xor
add
cmp
js
sub
orl
int
lods
shr
lret
ljmp
push
add
cmp
pushf
mov
cmpb
popf
jl
lret
inc
or
sbb
mov
mov
fdecstp
mov
jne
cmp
jecxz
cmpsb
dec
push
lret
push
mov
mov
dec
push
ja
rcl
push
jge
testl
mov
rorb
lret
pusha
shr
pushf
rcl
mov
neg
movzbw
push
movzbw
call
jp
lods
sub
pop
mov
push
addb
es
cmp
or
add
jbe
call
pop
rcrl
mov
lahf
fstl
bound
xorb
inc
gs
mov
pop
lahf
fstl
inc
es
test
stos
lds
xchg
mov
inc
outsl
mov
dec
mov
cmp
sub
pop
adc
aaa
or
cmp
dec
imul
fdivp
sub
bnd
js
dec
ljmp
addb
xor
lahf
jo
leave
fists
push
repz
sahf
jnp
dec
les
clc
mov
or
mov
imul
push
int
idiv
pop
jecxz
ljmp
stc
mov
xor
xlat
std
fcmovnbe
div
repz
in
jo
pusha
pushl
mov
mov
mov
pushf
mov
lea
js
pushf
movw
pusha
mov
pushf
call
mov
call
mov
push
pusha
lea
jmp
mov
pushl
pushf
jmp
bt
jbe
add
dec
bt
rol
rcl
and
bts
not
mov
pushf
pusha
call
neg
shrd
mov
ror
shr
bt
mov
clc
test
add
call
mov
shl
rol
sar
mov
test
test
jmp
pushf
pushl
push
pushl
popl
push
movb
pushl
lea
jmp
pusha
mov
pushf
pushf
mov
pushf
mov
call
mov
pushl
mov
movb
pushf
call
pushf
popl
movw
pushl
pushl
popl
movb
pusha
pushf
lea
jmp
mov
movb
call
mov
push
pushf
push
lea
jmp
sub
aad
aam
push
lea
pop
jmp
mov
movb
mov
movb
movw
lea
jmp
pushl
push
pushf
popl
jmp
pusha
movw
mov
mov
call
mov
pusha
push
push
mov
pushf
lea
jmp
mov
pushf
pushl
mov
mov
lea
jmp
pushl
pusha
call
movw
ror
test
call
push
jmp
jno
sub
pusha
inc
bt
pusha
pushf
jmp
rol
push
xor
shr
mov
push
jmp
pusha
jmp
call
push
test
push
xor
mov
call
call
pushf
call
bt
mov
stc
bt
test
jmp
jmp
add
sbb
not
xorb
lea
pusha
bswap
pushl
mov
pushf
lea
jmp
bt
cmp
cmp
add
pushf
mov
pusha
pushf
pushf
lea
jmp
pushf
mov
movw
pushl
mov
pushf
jmp
aad
shld
cmc
mov
shld
mov
cmc
clc
call
test
stc
sub
movb
test
shl
movb
mov
mov
pushl
mov
lea
jg
pushf
movb
mov
pushf
popl
jmp
sub
movb
jmp
pushf
mov
movw
push
jmp
mov
sub
bsr
rcr
neg
sbb
add
pushf
call
inc
push
decl
mov
call
call
mov
jno
bt
clc
bt
add
call
pushl
mov
jmp
lea
jne
call
pushf
mov
push
lea
jmp
mov
push
jmp
push
lea
jo
mov
pusha
pushf
pushf
mov
lea
jmp
jmp
mov
jmp
call
call
lea
jne
bt
clc
stc
xor
jmp
push
pushf
popl
mov
pusha
pushl
popl
pushf
mov
pushf
movb
lea
jmp
push
mov
pushf
pushf
push
pushf
lea
jmp
pusha
pusha
call
pusha
call
stc
add
pushf
push
mov
lea
jo
pushf
push
mov
pusha
movb
pushf
pushl
lea
jmp
shl
sbb
rcl
movzbl
jmp
mov
push
pushf
lea
jmp
or
pusha
pushl
lea
je
call
mov
jmp
pushf
movl
mov
mov
movb
mov
call
bswap
push
bswap
mov
pushf
movb
lea
jns
cpuid
call
call
test
sub
pushl
call
pushf
mov
movl
pushl
ret
pusha
test
cwtl
cmp
cmc
bt
sub
mov
pushf
bt
push
mov
pushf
sub
movb
movb
mov
lea
jmp
pushl
mov
mov
pushf
popl
pusha
jmp
pusha
mov
jmp
sar
shrd
rcl
xor
mov
test
pusha
add
pushl
pushf
lea
jmp
jmp
mov
jmp
push
jmp
pusha
mov
movw
lea
jmp
pushl
call
jmp
or
mov
push
add
pushf
mov
pushf
lea
jmp
mov
sets
pushf
mov
pusha
add
clc
test
stc
jmp
pushf
push
mov
pushl
movb
movb
lea
jmp
pushf
call
mov
call
movw
push
mov
movb
pushl
ret
cmc
sub
jmp
rcl
aaa
pushf
cltd
mov
aas
pop
das
bsr
stc
pop
sub
btc
not
pop
rcl
rdtsc
stc
pop
sub
pop
pusha
pushl
popf
setb
pop
lea
mov
not
cwtl
mov
setge
movsbw
bswap
push
mov
movzbw
mov
mov
pushl
lea
jle
seto
pusha
mov
pusha
pushf
pushl
ret
mov
jmp
call
call
stc
add
cmc
sub
jns
sub
jmp
mov
cmc
sar
mov
jmp
bt
push
clc
sub
jo
mov
bt
bt
clc
pusha
sub
call
mov
pushf
jmp
test
ror
shr
jmp
call
popl
pushf
pushl
lea
jmp
pushf
push
mov
mov
pushf
jmp
mov
mov
jmp
lea
das
or
bsf
mov
call
jmp
mov
jmp
test
sub
call
sub
test
test
add
cmp
neg
pushf
mov
sub
cmc
rol
jmp
movw
inc
cmp
cmc
neg
stc
test
clc
add
movb
sub
test
mov
cbtw
clc
pushl
jmp
mov
mov
call
pushf
jmp
pusha
mov
call
pushf
pushl
popl
push
pushf
lea
jmp
pushl
pushf
popl
call
not
push
jmp
jmp
add
test
stc
sub
call
jmp
jmp
pushl
xchg
mov
pushf
jmp
clc
add
pusha
movb
lea
jmp
pushl
mov
push
mov
movb
mov
lea
jmp
ror
cmc
pusha
call
cmp
pushf
clc
call
lea
lea
jp
pusha
mov
pusha
movl
movb
lea
jmp
mov
push
mov
pushf
lea
jmp
pushl
mov
call
pushl
push
pushf
popl
mov
mov
pushf
mov
call
movb
xchg
cld
pushf
mov
jmp
jmp
neg
jmp
mov
mov
jmp
mov
pushf
pushf
push
pushf
popl
jmp
stc
cmp
stc
add
call
jmp
lea
ror
sub
stc
mov
cmc
jl
add
push
pushf
pushf
lea
jmp
pushf
mov
call
cmc
mov
pushf
mov
pushf
test
lea
jle
stc
add
pushf
pushf
push
mov
pusha
pushf
movb
lea
jmp
add
stc
sub
pushf
push
not
jmp
movw
pushf
mov
push
mov
lea
jo
push
push
call
call
jmp
pushf
jmp
call
pushl
mov
pushf
pushl
push
call
call
jmp
pusha
jmp
call
call
mov
dec
cmc
inc
neg
mov
push
clc
call
movb
mov
jmp
call
call
mov
bt
cmc
sub
movb
lea
jmp
pusha
pushl
popl
movb
lea
jmp
push
jmp
pushl
pushf
popl
lea
jnp
pushf
mov
pusha
pushl
popl
mov
lea
jmp
pushl
popl
pusha
pusha
add
clc
pushl
popf
push
push
mov
movw
lea
jmp
pushf
lea
call
push
push
pushf
mov
push
lea
jne
bswap
mov
test
stc
and
pusha
stc
call
shr
movb
mov
jmp
pushf
pushl
pushl
mov
jmp
push
mov
call
pushf
pusha
mov
mov
call
btc
shl
dec
shld
mov
jmp
pushf
popl
pushl
push
mov
pushf
mov
movb
mov
pushf
pushf
movw
mov
lea
jmp
pushf
mov
pushf
pushl
ret
cmp
cmc
pusha
add
call
movzbw
test
lea
stc
cmp
pushl
pusha
pushf
movb
lea
ja
cwtl
xor
aam
mov
sar
stc
setl
lea
aad
jmp
jmp
xadd
neg
mov
ror
cmc
cmc
ror
add
pushf
not
pushf
pusha
mov
pushf
call
mov
jmp
cmp
jmp
movsbl
pop
pushf
movb
pusha
pushl
ret
push
pusha
pushf
popl
mov
call
inc
call
and
push
pushf
movb
mov
pushf
pushf
popl
pushf
mov
pushl
popl
pushf
pusha
push
lea
jmp
push
mov
pusha
mov
mov
push
jmp
call
jmp
mov
pusha
jmp
jmp
pushf
pushf
mov
pusha
pushf
mov
pusha
pushl
mov
jmp
lea
je
push
cmc
cmc
call
call
pusha
mov
jmp
mov
push
pushf
jmp
stc
sub
jmp
pusha
pushf
push
mov
call
lea
mov
pushf
mov
not
call
stc
clc
shl
call
xchg
call
pushl
mov
mov
call
push
pushf
popl
jmp
pusha
mov
pushl
mov
movsbw
mov
setle
movsbw
mov
movzbw
movzbw
pop
movzbw
pushf
popl
lea
xor
btr
neg
xchg
bsr
btc
mov
pushf
inc
adc
xchg
lea
seto
rcr
dec
pushl
dec
xor
bt
push
inc
and
bts
mov
test
neg
stc
btc
rcr
ror
ror
not
bswap
inc
pushf
xor
and
add
lea
rcl
xor
btc
inc
sub
lea
jmp
mov
movw
movw
mov
mov
mov
call
stc
stc
jmp
push
pusha
call
pushf
popl
pusha
call
pushl
inc
shrd
rol
sub
setne
mov
add
je
add
jnp
mov
pushf
pushf
mov
lea
jmp
mov
push
push
pushl
jmp
push
pusha
mov
mov
push
mov
pusha
mov
push
call
lea
jne
sar
shl
pushf
mov
jmp
pushf
add
mov
jmp
mov
call
call
jmp
call
rcl
mov
stc
call
test
mov
neg
stc
mov
jmp
mov
mov
xor
mov
shl
clc
mov
stc
add
pushf
jmp
pushf
mov
pusha
mov
pusha
call
sub
pusha
push
mov
movw
pushf
lea
jmp
lea
bswap
lea
pushf
pushf
call
movw
pushf
popl
mov
jmp
mov
movb
lea
jmp
not
clc
bt
rol
jmp
mov
mov
jmp
pushf
popl
movl
mov
call
sub
mov
bt
mov
clc
mov
cmp
sub
push
lea
jmp
mov
pushf
pushf
movl
lea
jmp
jmp
mov
pusha
pushl
lea
jmp
mov
call
call
push
pusha
lea
je
clc
jmp
jmp
sub
mov
pusha
pusha
add
push
jmp
pusha
rol
clc
pushf
cmc
clc
sub
bt
cwtl
test
call
pushf
pushf
mov
jmp
mov
movsbw
jmp
lea
jbe
mov
push
push
mov
lea
jmp
mov
pushf
pusha
lea
jmp
mov
jmp
sbb
and
rcr
add
sub
pusha
pop
call
pusha
mov
mov
movl
lea
jmp
call
adc
sar
sar
mov
test
sub
btr
bswap
setge
not
stc
rcl
btc
rol
movsbw
dec
dec
movzbw
dec
inc
push
jmp
clc
bt
sub
je
mov
stc
jns
cmp
or
call
pushf
mov
pushf
pushf
pushl
ret
pushf
popl
cmc
movsbw
mov
push
xadd
movzbw
xchg
mov
movzbw
dec
xchg
pushl
or
pop
lea
pushl
popl
shl
movl
pop
shl
mov
setno
neg
call
test
bt
call
cmc
aas
bswap
mov
or
pushf
or
mov
jmp
mov
pushf
mov
mov
mov
push
pushf
lea
jmp
pushl
pusha
mov
pushf
pushl
mov
push
lea
jmp
xor
cmp
bt
xchg
test
clc
cmc
push
jmp
mov
pushl
pushf
mov
pushl
mov
jmp
sub
stc
cmc
push
push
ror
bt
xor
pushf
test
pusha
mov
add
jae
clc
bt
sub
pusha
pushf
mov
movb
pushf
lea
jmp
rcl
sub
sar
shrd
bsr
jmp
test
add
movb
movb
bt
stc
add
pushf
pushl
mov
mov
pushf
movb
push
pushl
ret
neg
pushf
stc
cmp
bt
add
pushf
jmp
divl
pushl
pushf
call
jmp
adc
cltd
pushf
mov
adc
mov
not
mov
bt
pushf
bt
add
pusha
bt
cmp
cmp
shrd
pushf
mov
push
pushf
popl
push
pushf
push
pushl
popl
push
movb
push
lea
jmp
sbb
movzww
clc
xchg
pusha
pushf
jmp
pusha
mov
pushf
lea
jmp
cmc
add
movb
pusha
lea
jno
pusha
mov
pusha
pushl
pushf
movb
lea
jmp
call
mov
jmp
call
pushf
call
mov
pushf
movb
pushl
lea
jmp
mov
mov
push
mov
pushf
mov
movb
push
lea
jmp
push
jmp
pushf
popl
pushl
pushl
popl
movb
movb
movl
mov
lea
jmp
bt
jmp
mov
push
mov
push
call
bt
push
not
call
call
shrd
mov
pusha
pusha
cmp
test
sub
test
test
pushf
cmc
add
call
mov
jmp
rdtsc
movzbw
rdtsc
call
pusha
jmp
pushf
push
pushf
popl
pusha
call
test
add
push
pusha
pusha
push
mov
mov
mov
pushl
movw
lea
jmp
mov
pushf
mov
pushl
movw
pushf
lea
jmp
call
mov
movb
movb
movw
movw
pushf
popl
call
pusha
mov
movsbl
pushf
mov
movzbw
std
push
mov
jmp
mov
push
pusha
lea
jmp
pushf
popl
mov
movb
movb
pushl
pushl
popl
pushf
movb
lea
jmp
call
aad
and
notl
shr
mov
bt
bt
cmp
stc
sub
clc
bt
cmc
cmc
and
call
pushf
jmp
clc
sub
movb
bt
add
jmp
btc
mov
cmc
ror
add
stc
add
setnp
push
mov
sets
mov
call
mov
sub
cmc
jmp
jmp
mov
push
pushf
jmp
pushl
movl
pushf
pusha
call
pushf
pusha
mov
pushf
mov
push
lea
jmp
push
mov
bswap
lea
call
add
jmp
mov
mov
jns
pushf
lea
pushl
call
cld
pushf
pushf
pushl
rep
cmp
mov
pop
sbb
mov
clc
std
stc
clc
pushl
popf
push
mov
pushf
movw
lea
jmp
mov
pushf
push
pushf
popl
pushf
mov
pushf
push
movb
mov
jmp
push
mov
call
call
pusha
call
cmp
pusha
lea
jne
call
call
test
sub
cmc
sub
call
call
movw
pusha
call
lea
jmp
pushf
pusha
xor
mov
xchg
cmp
cmp
mov
jmp
shld
movzbl
bswap
rcr
sub
setae
inc
sub
rcr
add
cmc
btc
btr
neg
btr
pushf
or
add
rcr
sub
dec
movzbl
call
push
call
call
mov
pushf
push
mov
jmp
pushf
xchg
mov
shl
add
not
rcr
btr
bswap
xor
add
not
shld
push
mov
movb
shl
stc
bt
bt
pushf
shr
push
test
push
stc
or
jmp
pushl
mov
pusha
pushf
pushf
lea
jne
push
pushf
mov
call
mov
mov
clc
push
ror
movb
add
cmp
add
call
jmp
pushl
popl
movb
mov
mov
mov
lea
jmp
mov
mov
pushf
pushf
popl
mov
pusha
call
call
sub
push
mov
mov
pusha
mov
jmp
jmp
bt
clc
sub
push
pushf
push
lea
jmp
jmp
push
push
not
mov
jmp
dec
cmc
sub
bt
jmp
pushl
mov
pushl
popl
movw
mov
movb
pushf
lea
jmp
push
jmp
jmp
cmp
sub
bt
stc
cmc
test
cmpl
jmp
shr
movl
pushf
pushf
mov
pushf
pushf
popl
call
movzbw
dec
shld
xor
pop
pushl
movzbw
movzbw
movzbl
call
pushl
mov
pushf
mov
movb
mov
lea
jmp
pushf
mov
mov
mov
movw
mov
pushf
jmp
test
mov
shl
mov
pusha
not
lea
jle
not
test
cmp
cmc
stc
and
push
mov
call
pushf
jmp
mov
push
mov
pusha
call
and
mov
cmp
call
mov
call
movb
call
pushf
pushf
mov
pusha
pushl
movb
pushf
lea
jmp
call
mov
call
xor
dec
shrd
mov
rol
clc
add
mov
cmc
pusha
clc
push
sub
cmp
clc
shr
push
mov
call
pusha
cmc
sub
pusha
call
mov
push
lea
jmp
mov
pushl
lea
jmp
btc
aas
or
mov
bt
bt
pushf
bswap
cmc
sub
pushf
test
call
aaa
pusha
cwtl
sub
jns
rdtsc
bt
cmc
call
mov
call
pushl
popl
push
push
lea
jmp
mov
call
cmp
sar
mov
add
sar
pusha
mov
clc
test
call
xor
lea
jns
stc
mov
push
cmp
test
sub
pusha
push
pushf
mov
mov
mov
push
movw
pushf
lea
jmp
mov
mov
pusha
pushl
movl
lea
jmp
shr
cmc
lea
ror
add
xor
dec
rcl
and
stc
mov
pusha
pusha
cmp
add
pushf
mov
movb
pushf
pushf
lea
jmp
xor
bt
push
cmc
pushf
xchg
pushf
test
pusha
stc
mov
pushf
test
cmp
pushl
sub
pushl
mov
movb
lea
jne
test
xor
jmp
mov
movb
mov
pushf
call
pusha
movb
xchg
jmp
stc
pushf
and
jmp
mov
pushf
lea
jmp
push
pushl
popl
push
movw
lea
jmp
cmc
sub
pusha
lea
jne
cmc
sub
pushf
call
lea
btc
mov
clc
sar
not
mov
clc
push
cmc
sub
movb
shl
push
call
push
jmp
call
call
mov
pushf
jmp
pushf
clc
cmp
sub
cmc
test
cmp
clc
mov
mov
movb
stc
sub
lea
jbe
mov
pusha
pusha
lea
jmp
shld
movsbw
daa
bts
movzww
jmp
test
sub
call
call
xor
mov
push
pusha
jmp
pushf
xchg
pushl
push
movb
movl
jmp
add
pushl
pushl
mov
mov
movw
lea
jmp
pushl
cmp
and
cmc
cmp
pushl
pusha
pushf
jmp
call
jmp
mov
jmp
call
jmp
pushl
popl
movb
movw
mov
lea
jmp
pushf
mov
movb
pushf
lea
jmp
cmp
lea
jb
neg
pusha
sub
mov
rol
stc
pushf
sub
jmp
test
sub
call
pushf
popl
call
bswap
add
stc
neg
clc
btr
mov
btr
sbb
pusha
rcl
xor
movzbw
not
shrd
rcl
shld
xor
seto
dec
dec
inc
dec
shl
mov
xor
ror
call
pusha
ror
xchg
pop
inc
btr
lea
bsr
lea
btr
bts
shld
pop
sub
sar
cmc
pushf
sub
lea
xor
shr
mov
call
call
jmp
mov
pushf
pushf
mov
lea
jmp
movb
push
pushl
popl
mov
movb
mov
lea
jmp
mov
pusha
pusha
pushf
popl
jmp
mov
shr
jmp
call
pusha
jmp
mov
pushf
pushl
push
lea
jmp
pushf
popl
jmp
movzbl
btc
mov
stc
pushl
call
pusha
push
pushl
mov
jmp
pusha
call
neg
call
pusha
pushf
mov
jmp
mov
pushf
mov
pushf
mov
pushf
pushf
push
pushf
lea
jmp
call
mov
pushl
pushf
popl
pushf
pushf
lea
jl
push
pusha
push
pushl
mov
pusha
call
call
pushf
push
mov
pushf
call
cwtl
mov
mov
lea
lahf
pusha
mov
pusha
jmp
mov
movb
movw
mov
movb
lea
jmp
mov
call
mov
mov
mov
lea
jmp
pusha
dec
push
sub
cmc
mov
call
push
mov
pushl
pushf
lea
jmp
shr
rcr
shl
mov
shl
jmp
pusha
not
movzbl
pusha
call
pusha
pushf
mov
jmp
sub
push
push
pushf
pusha
mov
pushf
pushf
lea
jmp
mov
call
call
mov
push
push
movb
mov
mov
jmp
pushf
mov
stc
pushf
or
call
pushf
sub
pushf
call
call
pushf
mov
movl
push
mov
movb
pushf
mov
pushf
lea
jmp
xor
add
mov
cmp
not
and
dec
mov
call
call
pusha
clc
movw
stc
neg
clc
test
stc
clc
sub
jmp
mov
pushf
push
lea
jmp
movzbw
movzbl
push
mov
mov
push
mov
lea
mov
pushl
call
jmp
bt
jns
rcl
mov
sbb
adc
add
mov
pusha
cmc
sub
test
cmp
shl
call
jmp
mov
pushf
pushf
pushf
popl
movw
call
pusha
call
stc
sub
bt
test
call
movw
mov
push
lea
jmp
sub
call
jmp
push
setae
lea
mov
jmp
mov
pushf
mov
jmp
dec
rol
pusha
shl
not
rol
bsf
or
xor
not
call
mov
push
pushf
push
jmp
ror
cmc
call
shld
mov
pusha
push
call
call
push
sub
mov
movb
mov
pushl
mov
mov
pushf
lea
jmp
pushl
popl
push
lea
jmp
call
pushf
popl
push
mov
jmp
sub
and
sub
enter
cwtl
lret
jo
sub
enter
loopne
sub
and
sub
clc
std
sub
loopne
sub
loopne
sub
clc
or
or
adc
xorl
sub
clc
std
sub
clc
std
sub
loopne
sub
nop
mov
or
and
and
imul
enter
jo
sub
and
sub
nop
sub
sub
enter
lock
sub
loopne
sub
clc
and
xorl
sub
loopne
sub
shlb
or
dec
sub
dec
in
sub
subb
cmpl
xor
cmp
bound
adcl
mov
sub
jo
sub
push
xor
and
xor
orl
sub
mov
sbb
adc
adcl
lret
nop
sub
sub
mov
cmp
call
sub
dec
in
sub
loopne
sub
rorb
sub
adc
sub
fcoms
sub
adc
sub
and
sub
fcoms
sub
cwtl
lret
clc
and
and
call
sub
or
cmpl
sub
clc
and
add
sub
dec
in
sub
fmuls
adcl
imul
add
sbb
add
adcl
in
add
pop
sub
js
sub
lock
addl
jmp
sub
loopne
sub
rolb
subl
sub
rolb
subl
sub
add
sub
nop
mov
sub
clc
and
and
jo
add
mov
sub
rolb
adc
mov
adcl
movsl
sub
mov
add
loope
xor
popa
sub
add
sub
rolb
xorl
shrl
addl
add
add
sub
rolb
orl
sub
sub
loopne
sub
shlb
adcl
jmp
sub
loopne
sub
nop
clc
sub
jo
sub
nop
mov
sub
push
mov
addl
clc
sub
push
bound
addl
mov
sub
clc
and
adc
mov
sub
push
or
add
sub
add
sub
dec
in
sub
nop
clc
sub
add
sub
mov
sub
and
sub
mov
sub
subb
sbb
imul
sub
pusha
push
mov
jmp
and
and
rcr
mov
pusha
mov
cmp
movb
sub
mov
pushf
push
mov
pushf
lea
jmp
mov
movb
pushf
lea
jmp
push
push
pushl
popl
mov
lea
jmp
movb
push
mov
movl
pusha
pushf
popl
push
push
jmp
mov
pusha
pushf
mov
lea
jmp
cmc
stc
push
sub
pushf
test
movl
mov
test
call
or
shl
mov
rcr
shl
mov
jmp
add
push
clc
pusha
bt
add
call
mov
call
pushf
mov
pusha
mov
call
pushf
mov
pushf
pushf
popl
jmp
call
pushf
mov
pushf
push
lea
jmp
test
sub
bt
bt
pusha
call
pusha
movw
pusha
lea
jbe
push
call
push
mov
mov
jmp
call
push
lea
cpuid
pushf
movw
stc
sub
stc
stc
pushf
cmpl
pushf
jmp
mov
push
pushf
mov
call
push
mov
lea
jno
push
call
lea
jne
adc
xorb
pushf
mov
movb
lea
jmp
movw
movw
movl
movb
pushf
mov
pushf
mov
pusha
pushl
ret
jmp
pusha
inc
test
call
pushf
popl
pushf
mov
call
btr
shrd
bswap
test
movzbl
not
xor
ror
pushf
clc
lea
pusha
not
setle
bts
shl
add
add
bt
stc
ror
shr
rcl
pusha
xor
test
mov
stc
test
add
jmp
movl
not
test
not
cmc
bt
test
cmp
sub
jmp
add
add
mov
pushf
jmp
cwtl
cmp
call
cmc
jmp
lea
jnp
push
mov
mov
mov
pusha
push
lea
jmp
push
call
movb
mov
pushl
lea
jmp
pushf
pushl
pushf
popl
pushl
jmp
mov
bts
movzbw
mov
sete
movzbw
test
stc
add
bswap
bt
neg
mov
bsf
rcr
dec
stc
xor
adc
pushf
sub
ja
not
shl
rcr
xor
dec
bswap
dec
dec
dec
sub
sete
xor
cmc
bts
movzbw
movzbl
pushf
mov
jmp
