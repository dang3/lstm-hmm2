mov
les
sbb
adc
cmc
lea
dec
xchg
mov
in
lock
rolb
pop
cmp
mov
sub
sti
loop
das
int
inc
xor
or
nop
inc
ljmp
clc
ss
xchg
lods
iret
shll
test
cwtl
loopne
inc
sbbl
mov
jb
push
stc
cs
ja
xor
add
dec
inc
in
pop
icebp
aas
mov
rcrl
xchg
mov
das
lods
jg
push
mov
push
std
repz
push
repz
xchg
mov
cltd
dec
pop
mov
mov
div
jbe
das
repnz
mov
cli
popl
inc
mov
mov
lcall
add
sbb
insl
test
xor
add
adc
cmpl
in
jne
pop
jge
add
fwait
test
and
mov
decl
test
jno
push
sub
js
inc
insb
clc
jb
add
jg
ja
jae
je
fstl
icebp
cmp
mov
cli
mov
mov
push
cwtl
xor
lock
dec
icebp
xchg
pushf
jg
mov
neg
scas
lret
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
cli
xor
std
sarb
pop
fs
fs
mov
jp
test
insl
imul
cmp
jl
in
in
add
jmp
in
fdiv
inc
lds
cmpsl
roll
sbb
xchg
xchg
push
lret
xchg
sti
push
in
dec
les
push
mov
sarl
sub
push
mov
and
in
ficoml
aam
push
repnz
jl
cmc
mov
loopne
outsl
mov
or
ljmp
xchg
sahf
test
add
pop
cmp
mov
iret
inc
jl
fdiv
aas
loopne
enter
icebp
cli
into
js
mov
clc
leave
mov
insl
cld
ja
lds
addr16
inc
push
sbb
mov
mov
fadd
xor
out
xorl
pop
call
lret
enter
clc
in
xchg
and
fdivl
cmp
pop
int3
inc
inc
jns
pushl
into
pop
movsb
fisubrl
popa
sbb
ss
push
fs
xchg
mov
dec
in
add
leave
lock
jp
insb
out
or
popa
mov
jno
jno
lret
jae
in
sbb
nop
cs
inc
pop
mov
stc
xchg
add
outsl
jns
pop
popf
push
xchg
cmpl
pop
fdivrs
mov
mov
jnp
jp
in
jb
in
dec
out
and
aam
lods
dec
jae
pop
sarb
iret
inc
xchg
sub
jae
leave
cli
mov
push
cmovns
adc
jge
sbb
test
shll
iret
int
push
xor
inc
mov
mov
iret
enter
jnp
sbb
lock
clc
cmp
es
and
repz
jno
daa
add
rcll
fstpt
mov
inc
idivl
shr
add
mov
in
xor
outsl
filds
inc
outsl
rcll
adc
cmp
xor
lods
and
jle
or
movsb
pusha
shl
in
push
add
and
xor
dec
adcb
adc
lods
and
sbb
insb
jp
pop
testl
cmp
fwait
add
out
stos
fcoms
push
popa
xor
fwait
sub
mov
fs
in
or
xor
cmp
aad
add
movsb
imul
aad
cmpsb
inc
das
sub
outsl
cli
into
inc
cli
stc
dec
sub
cwtl
xchg
test
inc
cmp
insb
cld
jnp
mov
sbb
dec
xchg
mov
lds
repnz
jnp
movsl
cmc
repz
xor
pslld
rol
mov
int
fcoml
cs
je
inc
adcl
and
ja
or
add
mov
push
lock
addl
lcall
inc
inc
aas
push
lahf
dec
add
xchg
mov
mov
jp
jne
lcall
shlb
stc
or
lret
xchg
pop
push
add
jecxz
and
lds
enter
push
or
addb
nop
int3
sahf
xchg
lods
sbb
mov
jo
sub
pop
mov
xchg
pusha
out
mov
dec
mov
sub
and
shll
sbb
dec
mov
cmp
ret
mov
mov
cwtl
sbb
fcmovnu
sbb
stos
and
sbb
fcmovnu
sbb
test
adc
pop
xchg
stos
lahf
data16
divb
cmp
mov
roll
loopne
jp
lea
push
xchg
outsl
xor
stos
sahf
in
and
or
iret
jns
mov
sbb
jl
daa
sahf
outsb
call
sub
xchg
das
mov
add
push
cld
xchg
sbb
aas
iret
addr16
stos
pushf
push
xor
pusha
loop
inc
pop
dec
mov
rcll
outsb
das
int
imul
jmp
dec
sbb
sub
mov
dec
mov
xor
mov
mov
inc
dec
jle
jge
xchg
sbb
shll
mov
cmp
icebp
inc
mov
cmp
pop
jecxz
ds
lds
fisubl
dec
icebp
les
jns
mov
rolb
movsl
cwtl
out
sti
sbb
ds
sbbb
enter
sbb
jo
repnz
dec
mov
popf
push
push
cltd
sti
mov
sbbl
inc
cmc
outsb
loop
lods
and
std
push
or
gs
pop
inc
cmp
mov
push
mov
cltd
fbld
imull
nop
lret
sub
adc
push
and
mov
addl
movsb
pop
stos
lcall
push
and
lret
mov
mov
stos
cld
adc
mov
cmp
and
jbe
ss
jbe
cmp
mov
jp
cmp
cmp
and
jp
pusha
xchg
dec
mov
pop
pop
test
sahf
in
sbb
pop
mov
fsubrs
push
push
xor
and
sbbl
clc
fcomps
test
insl
test
push
sbb
jae
loop
push
adc
fisubrl
cs
cmp
out
xor
and
inc
pop
sbbb
loop
add
clc
sub
mov
mov
jmp
int
ret
pop
outsb
popa
or
jp
enter
sbb
repnz
or
or
xchg
inc
rol
cmp
arpl
mov
jae
imull
ret
jp
push
or
int
ret
add
js
sub
cs
lret
sbbl
std
or
filds
scas
jnp
pop
push
push
mov
lahf
shl
mov
ret
cmp
adcl
xchg
xchg
jb
cld
loope
rcrl
lds
push
ficoml
and
or
jns
sub
push
push
ss
test
push
add
outsb
add
test
jge
sub
in
inc
loopne
jne
sub
and
movhps
fdivl
jno
fcmovnb
lods
jg
push
pushf
loop
arpl
insb
xchg
rclb
push
mov
repnz
push
xor
fcomi
daa
adc
add
out
dec
es
enter
loope
mov
mov
imul
iret
cmpsb
jns
cmp
out
inc
sbb
jl
mov
cmp
or
mov
add
sbb
or
jle
push
cli
xor
notl
shr
jno
jnp
out
cmpsb
or
subl
push
push
bound
sbb
fmul
data16
pop
hlt
fdivl
push
xor
aaa
jle
mov
pop
sub
xor
stos
mov
add
pop
in
std
or
imul
sub
fs
popf
out
push
jno
inc
sbbl
insb
outsl
cmpsw
insl
mov
and
call
pop
inc
lea
cmp
loop
fcomps
leave
nop
jecxz
cmp
lret
push
mov
in
mov
loope
std
and
xchg
insl
and
movzwl
scas
mov
out
push
dec
jp
push
loopne
cmp
imul
inc
lock
jmp
and
jge
jl
inc
cmp
dec
bound
movsb
pop
sbb
xchg
aam
test
ret
ret
sahf
jae
lret
mov
push
in
mov
push
mov
mov
gs
test
js
jmp
sub
or
popa
xchg
jo
sub
das
lret
add
mov
movsl
or
clc
hlt
mov
pop
adc
fucomi
jl
cwtl
shll
aaa
xchg
lods
add
clc
adc
cmp
mov
jp
popf
test
es
mov
jp
and
jl
rclb
and
dec
loopne
add
imul
iret
scas
dec
push
inc
in
outsb
inc
in
and
subb
pop
mull
fimull
lock
inc
cmpsb
lret
and
daa
outsb
sub
stos
out
xchg
shlb
push
inc
dec
jl
fs
sbb
sub
mov
lret
mov
ljmp
loopne
add
and
or
js
adc
sbb
lods
repz
push
adc
jnp
sbb
xor
inc
xor
lock
lds
in
dec
sahf
push
inc
cli
mov
mov
mov
jbe
icebp
repz
and
mov
sbb
lret
and
xchg
lret
cmp
test
ja
add
lods
stc
inc
cmpsl
pmaxsw
or
push
and
lcall
or
push
jbe
mov
imul
inc
fstpt
xchg
add
repz
pop
jle
shr
js
data16
mov
or
jg
add
xchg
xor
sub
pop
iretw
into
ret
pop
aam
inc
aaa
push
les
icebp
push
mov
or
insl
jg
or
jp
mov
mov
mov
push
inc
test
mov
mov
xlat
andb
mov
pop
inc
cmc
pushf
fdiv
jbe
mov
dec
add
xchg
mov
push
ret
sarl
push
push
and
aaa
add
insl
fwait
and
jle
xor
inc
std
sti
cmpsl
xlat
sbb
and
test
xchg
pop
dec
addr16
mov
dec
dec
xchg
jno
fs
int
mov
push
push
mov
out
or
jle
outsl
mov
push
dec
sub
inc
lds
les
mov
int
xor
in
dec
movsl
push
inc
stos
ret
mov
aaa
mov
inc
sahf
incl
sbb
les
mov
pop
xchg
xchg
pop
repnz
xor
inc
or
xchg
adc
push
push
jns
mov
inc
mov
jg
and
push
int
fisubl
flds
sub
stos
fistpl
arpl
inc
ret
out
inc
mov
pop
jmp
xchg
dec
cltd
ret
sarl
pop
pop
cmpsl
shrb
cmpsl
xor
inc
mov
repnz
mov
lret
cld
and
pop
fisubrs
ss
in
cltd
sub
xlat
call
mov
inc
and
or
scas
sarb
out
inc
test
arpl
inc
push
push
sbb
inc
xchg
pop
lods
sub
leave
inc
adc
insl
pop
in
cltd
add
movsb
stos
mov
dec
jne
cmp
push
xchg
pushf
divl
ljmp
xchg
push
cmp
les
add
and
scas
subb
push
into
dec
aam
add
movsb
dec
fistpl
shll
cmc
dec
sub
das
inc
cmpsb
mov
jp
ja
fnsave
rorl
pusha
loope
std
jae
sarl
sarl
adc
in
lcall
stc
jno
xlat
das
imul
sub
mov
cmpsl
lock
ja
add
out
cmc
or
adc
maskmovq
testl
adc
sbb
and
jmp
mov
rcrl
loope
xchg
aam
or
icebp
jecxz
pop
inc
xchg
enter
ss
push
mov
jo
mov
in
outsl
rorb
adc
fnstcw
add
mov
scas
outsb
dec
cltd
adc
and
mov
inc
int3
movsb
in
pop
cmpsl
push
add
jae
lock
inc
jle
mov
sub
outsb
es
cmpl
jge
cmp
lcall
bound
pop
mov
mov
push
jo
or
xor
jmp
xor
xor
cmp
mov
das
mov
mov
xchg
sbb
mov
xor
adc
dec
jne
incl
cmc
sbb
mov
out
pop
in
cmpsb
sbb
mov
into
or
stos
sbbb
mov
add
loop
ja
repnz
sub
jo
aaa
and
test
add
dec
jl
mov
aaa
adc
jae
aad
add
xchg
iret
mov
jne
or
xor
or
test
push
mov
arpl
outsb
and
cmp
repnz
repnz
in
imul
in
jmp
iret
xchg
pop
lahf
cmp
sbb
jle
stos
std
pop
mov
xor
xchg
sbb
or
lods
xor
jne
fmuls
add
mov
or
jno
pusha
rcll
inc
ja
add
das
xchg
adcb
xchg
sti
pushf
mov
push
push
jge
insb
jae
mov
sbb
fwait
xor
movsl
jmp
xor
or
or
test
sahf
add
sub
pop
subl
mov
fldl
ret
cmp
outsl
sub
in
popa
xor
daa
sarl
push
outsb
push
out
cmpsb
push
fisttpl
push
test
mov
push
fwait
add
sub
inc
mov
jbe
movntq
sub
jo
dec
xchg
testb
xor
add
aad
outsb
lods
out
imul
add
int3
jl
ljmp
jecxz
repz
stos
mov
inc
xchg
adc
jo
fsub
jns,pt
xor
cmp
scas
test
shrl
imul
scas
jns
add
dec
inc
or
rcrb
adc
test
lret
inc
ss
mov
xor
jnp
adc
push
dec
xchg
inc
push
mov
bound
ss
leave
mov
jecxz
into
adc
lods
rorb
jg
sti
rorb
mov
divb
dec
mov
mov
xchg
mov
xchg
sub
pop
and
or
mov
inc
push
inc
loop
sbb
mov
mov
ss
pop
mov
inc
sub
and
nop
mov
shll
fadds
pop
movsl
pop
xchg
sbb
test
std
mov
in
cli
cmp
jle
repnz
add
in
xchg
push
and
clc
movsb
pop
sbb
mov
jl
insl
xor
jns
push
and
jmp
loopne
mov
dec
cmpsb
sub
xor
push
shlb
xchg
lret
sbb
movsl
inc
pop
push
jae
xchg
sbb
lcallw
std
jmp
dec
popa
xor
inc
jo
jle
mov
arpl
scas
push
sub
lret
movsl
push
push
jmp
mov
xchg
stos
jbe
in
ret
cli
mov
sub
pop
sbbb
or
cltd
inc
sub
push
mov
pop
cmpsb
adcb
sbb
lock
sub
imull
inc
xorb
push
rep
popa
and
inc
gs
jge
mov
fstl
dec
cmp
sub
aam
mov
sbb
lock
xor
loope
and
mov
mov
mov
sub
push
inc
test
xor
cmp
popa
sbb
mov
add
repnz
shrl
stos
les
dec
pop
jge
mov
and
mov
aam
movb
mov
and
dec
in
xor
push
loope
inc
pushf
mov
cltd
pusha
pop
jns
loop
xchg
cmp
mov
jnp
repz
je
add
outsb
pushl
ret
lock
loopne
scas
testl
nop
sbb
cli
ja
sub
inc
jne
inc
shll
fcoml
xchg
xlat
or
sbb
adc
push
out
ss
andb
and
jno
divl
cld
mov
int3
imul
in
lahf
dec
les
pop
mov
lea
imulb
inc
scas
lods
lahf
mov
mov
push
cmp
push
leave
mov
cltd
shrb
cmp
rorb
mov
or
outsl
mov
or
mov
mov
push
test
cmpsb
lds
xchg
jge
icebp
jno
decb
and
mov
mov
xchg
jo
ret
xchg
jp
addl
cmp
jo
ret
or
add
lock
inc
addl
push
or
xchg
push
inc
test
addl
xchg
mov
mov
or
mov
mov
inc
popa
mov
xchg
sarb
pop
ret
xchg
fs
mov
mov
push
or
xchg
icebp
dec
or
mov
mov
jnp
idivb
jg
push
jnp
jl
mov
jl
jl
jnp
xchg
xchg
pop
or
mov
cld
lret
mov
mov
rorb
jg
push
jnp
jl
mov
jl
jl
or
jnp
xchg
or
jg
xchg
add
addb
addl
xchg
dec
loop
inc
popl
mov
movsb
shrb
out
int
dec
sub
test
adc
cmc
add
sbb
push
cmc
pop
sbb
sub
adc
xlat
and
in
xchg
lods
stc
aad
rcrb
clc
jno
test
jl
xchg
cmp
aam
xchg
stos
push
mov
iret
das
sti
test
add
cmp
into
xor
fidivl
out
in
ds
pushl
nop
js
and
push
sub
inc
pop
cmp
add
cs
repz
or
push
ja
and
imul
xorl
xchg
adc
jg
insb
ficompl
add
jno
and
sub
je
add
dec
xchg
adc
push
jae
test
push
push
repnz
cmpsl
cmc
scas
adc
cmc
aaa
inc
call
sarb
push
inc
fimuls
mov
addr16
icebp
dec
add
cmp
ds
inc
cmp
out
pushf
pop
xchg
mov
xchg
es
dec
outsb
sub
jle
stos
xchg
dec
jmp
dec
lret
jbe
lea
and
mov
hlt
mov
rorl
out
and
add
arpl
dec
jge
andl
scas
outsb
in
push
xor
fadds
test
mov
mov
iret
and
sub
and
clc
popa
inc
repz
subl
test
mov
push
imul
cmp
adc
push
jo
lea
pop
aam
xchg
pop
rclb
loopne
fwait
jae
imul
jmp
sub
roll
das
pop
outsb
jb
and
ret
nop
dec
shll
pop
stc
xor
es
xor
out
rep
jnp
daa
mov
inc
mov
pop
rep
add
xor
cmp
inc
and
pop
imul
gs
popf
into
popf
cmp
xchg
aad
or
add
add
sbb
lea
xor
sub
cs
jbe
shl
out
cld
inc
xor
mov
cmp
ss
int
jne
and
jne
mov
xchg
inc
mov
cmp
mov
sbb
mov
out
frstor
jmp
inc
xor
int
les
push
test
scas
addr16
in
push
imul
stc
or
movsl
sbb
popa
sub
pop
mov
jae
inc
pop
or
push
inc
xlat
push
test
pop
cmp
outsl
sub
inc
ficoms
and
mov
add
daa
cmp
lds
mov
mov
jmp
or
mov
jecxz
std
xchg
fs
xor
movb
xlat
fs
mov
icebp
mov
test
xchg
jmp
sbb
leave
dec
sub
inc
fwait
rcll
xor
inc
xor
sub
andl
idivb
push
cli
stos
mov
stos
in
ret
jmp
cwtl
cmc
add
outsl
jl
cmc
cmp
dec
jg
stos
and
insl
pop
push
jnp
and
jmp
jno
mov
xchg
out
mov
mov
mov
jnp
mov
pop
sub
ficoms
jg
inc
jno
popf
sub
xchg
stos
into
mov
mov
test
push
nop
sbb
js
arpl
enter
testb
cmp
push
out
out
inc
insl
cmp
mov
cmp
packssdw
out
pop
pop
xor
shll
sub
mov
mov
scas
jno
out
out
ret
ljmp
pop
dec
sub
rolb
bound
push
add
sbb
cmp
subl
scas
push
mov
out
mov
fsub
add
dec
repnz
out
add
popf
mov
aam
ds
jns
fneni(8087
iret
push
stos
dec
xchg
jg
inc
rclb
jp
cmp
call
pop
mov
mov
pusha
into
jle
mov
sbb
addr16
mov
daa
lods
cmpsl
bound
in
dec
or
cmp
out
popf
or
jno
mov
insb
sahf
or
test
out
mulb
and
pop
inc
pop
xchg
scas
mov
push
inc
mov
fisttpl
je
pushf
sub
mov
in
xchg
pushf
sbb
jmp
stos
inc
dec
sbb
out
adc
test
je
dec
int
cmc
pop
out
ret
cmp
xor
xorb
xor
call
mov
fadds
popa
xchg
push
insb
call
mov
shl
repz
xor
shlb
insb
cmp
jne
jb
outsl
jp
sub
jge
pusha
mov
lcall
add
ret
mov
jo
sahf
mov
arpl
mov
ja
dec
cmp
or
pop
imul
gs
mov
in
push
loopne
invd
inc
pushf
push
ss
int
sarl
arpl
pop
dec
or
xor
sub
sbb
mov
fst
ja
subl
arpl
into
mov
push
int3
jno
and
xchg
cmp
pop
mov
imul
push
fistps
jbe
mov
test
gs
test
je
inc
and
sub
sub
mov
adc
pop
xor
lods
add
mov
imulb
push
fcoml
loopne
mov
inc
icebp
movsb
loope
sbb
stos
into
movsl
and
xchg
jbe
mov
enter
in
mov
mov
iret
or
adc
sbb
lods
pusha
xchg
push
inc
mov
jae
push
lds
into
int3
stos
xor
sbb
jl
and
mov
inc
xchg
stos
divl
insl
push
hlt
mov
gs
das
pand
ficomps
cmp
mov
mov
out
sbb
xor
push
cmp
inc
inc
xchg
mov
pop
dec
jae
pop
add
xchg
mov
xchg
mov
sbb
adc
mov
xchg
inc
ficoml
shll
movsl
or
shlb
mov
pushf
sub
in
inc
out
mov
or
iret
sbb
or
mov
push
mov
jbe
fs
xor
mov
inc
hlt
test
sub
inc
inc
fisubs
repnz
cltd
repz
negl
movsb
cmp
out
loope
jne
xor
mov
or
or
add
imul
mov
popf
out
pop
out
cld
lds
jb
enter
cmp
adc
scas
xchg
cld
sbb
inc
test
and
cmp
jl
adc
pop
shlb
adc
pop
mov
mov
jnp
movsb
in
pop
and
pop
aad
lds
cmp
and
jb
push
mov
add
push
cmp
adcb
lea
je
jl
mov
divb
mov
in
cmpsb
mov
adc
enter
cmp
repz
xor
call
jmp
mov
mov
cli
call
insb
dec
and
xorl
inc
test
push
outsb
sub
in
leave
hlt
sub
mov
pop
jmp
bound
rclb
and
outsb
gs
dec
pop
pop
in
test
iret
mov
inc
pusha
xchg
adc
mov
rsm
mov
rorl
stc
cmpsl
das
repnz
mov
and
lods
movsb
hlt
pop
fsub
or
inc
xchg
pop
push
test
xor
insb
mov
add
ret
inc
ficomps
outsb
popf
or
out
leave
mov
ret
sbb
adc
cmpsb
outsb
lods
dec
out
xor
fidivrs
test
ja
shlb
pop
inc
cmpsl
push
adc
mov
mov
or
divb
mov
std
sbb
imul
cmpsl
or
jnp
cmc
push
push
mov
mov
fs
rclb
sub
stos
ret
and
xlat
test
mov
ja
stos
sub
cs
push
or
outsb
neg
pop
aaa
fldt
in
idiv
cld
push
pop
or
mulb
hlt
incl
cmpl
fwait
movsb
push
mov
or
xorl
rcrb
mov
push
pop
or
sbb
subl
jnp
push
into
or
xor
or
pop
push
cmp
cmpb
mov
lret
arpl
push
fsubrl
push
hlt
mov
stos
cli
mov
ja
test
xor
cmp
sub
sbb
sbb
jae
loope
ret
mov
inc
dec
dec
pop
sub
out
push
sub
inc
sub
mov
aaa
pusha
jmp
in
test
loope
mov
scas
jo
mov
test
push
les
jp
cld
cmp
mov
cli
cmp
cmp
pushf
cld
xchg
push
mov
mov
lcall
sub
stc
jo
out
pop
mov
sub
aaa
insb
outsl
stc
mov
mov
in
aam
mov
std
cmpsl
xlat
jbe
popa
cmpsl
mov
cmp
mov
xchg
daa
rcll
pop
cmp
test
xchg
mov
add
lock
rorb
divb
mov
or
mov
movsb
pop
or
data16
mov
add
decb
sbb
out
jle
cmp
fiadds
adc
push
test
push
push
arpl
xchg
jbe
enter
pushf
cmc
imul
cld
or
stc
lret
aaa
mov
pop
mov
lret
stos
nop
outsl
repz
mov
pop
inc
dec
add
mov
outsb
dec
insl
movsb
ds
xor
in
insb
mov
push
int3
loope
lret
arpl
jp
fwait
xor
jo
cmpsl
jae
jmp
pushf
loope
jge
cmp
push
fisttpll
enter
push
pop
adcl
sbb
cmpsb
call
sahf
call
int
jbe
popf
cmp
xor
cmp
jge
cs
and
insb
push
pop
adc
cmp
cld
xchg
outsl
lea
push
mov
fnstsw
jnp
jl
frstor
sti
xchg
cmpsb
mov
pop
mov
xchg
xlat
jge
or
js
test
add
repz
mov
xchg
das
mov
sub
and
push
ja
xchg
dec
sahf
popf
dec
dec
js
sub
std
mov
hlt
adc
sar
pusha
xor
rolb
jo
mov
xsha1
cmpsb
or
push
nop
cmp
cs
mov
lods
movsl
pop
mov
test
inc
and
sub
faddl
repnz
xchg
in
adc
lret
ss
popa
lds
xchg
rolb
lock
repz
cli
pop
aas
cmpsb
in
lods
or
xchg
push
mov
and
xchg
add
inc
push
and
cmpsl
jnp
xor
dec
mov
and
addr16
pop
pop
or
mov
push
jge,pn
pop
jbe
or
aaa
sbb
ret
dec
repz
lcall
adc
push
in
push
cmp
mov
mov
lcall
adc
lcall
das
out
mov
das
push
aas
jno
sbb
pusha
xor
cmpsl
das
mov
mov
jecxz
inc
xchg
jae
cmp
jnp
xor
scas
out
pop
int3
lcall
mov
andl
popa
mov
jae
cmp
std
loop
pop
dec
sub
in
push
imul
xor
xor
shll
mov
movsl
xor
and
xor
dec
cmp
clc
jo
sub
adc
inc
mov
add
iret
xor
mov
insl
cmp
hlt
xchg
adc
jmp
cmp
mov
jp
das
pop
es
outsl
aaa
out
pop
aam
notb
roll
adc
xchg
stos
sbb
xor
or
fwait
mov
xlat
lods
mov
pop
sar
scas
lahf
xchg
out
and
sub
sub
ljmp
fs
imul
push
jl
xchg
pop
push
jle
push
adc
ljmp
mov
scas
mov
xchg
outsb
stos
mov
je
xchg
adc
mov
popf
enter
into
adc
mov
cmp
scas
sub
std
mov
sbb
push
mov
push
repz
mov
jmp
cmp
cmpsl
ret
add
push
outsb
jp
inc
jge
mov
mov
push
adc
out
movsl
lods
imul
lods
sub
inc
je
sub
or
inc
and
icebp
adc
lcall
shl
xor
rcl
jnp
outsl
mov
fidivl
jno
enter
mov
jne
pushl
mov
xchg
inc
fadds
shlb
add
mov
nop
sbb
or
sbb
or
pop
popf
je
lock
pushf
rorb
jb
in
jo
jmp
mov
mov
bound
add
cmp
sbb
subb
cmpsb
xchg
cmp
leave
cli
push
rclb
das
stos
push
mov
pop
dec
pusha
out
mov
lods
mov
clc
les
or
sbb
fstps
sub
mov
in
sbb
mov
push
ljmp
insb
inc
test
fisttpl
jnp
add
add
push
mov
mov
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
sub
pusha
push
mov
add
add
xor
add
add
pop
popa
leave
ret
add
add
movsb
js
pop
add
fsub
jbe
fsubp
out
xchg
sub
jb
test
sti
rcrb
xchg
nop
adc
mov
addl
fstpl
aam
into
add
xchg
inc
inc
xor
mov
loopne
into
mov
jno
cmp
inc
stc
loope
or
pop
push
loop,pt
fistl
mov
jnp
lahf
test
std
cli
xchg
sub
jp
sub
rol
into
stc
xchg
sub
pusha
mov
dec
adc
push
xchg
addr16
pushf
pop
bound
xchg
scas
popf
jge
jle
lcall
xchg
push
ret
adc
jg
xchg
push
pop
sbb
out
jb
jae
lock
cmp
mov
mov
xchg
orl
fmull
pop
jl
aam
std
movsb
fxch
mov
mov
mov
push
push
stc
xor
icebp
out
dec
incl
cmp
ret
popa
pusha
sbb
xchg
jo
xchg
sbb
rcrb
xchg
push
mov
dec
or
test
arpl
int
cmpsb
insb
int3
lcall
iret
iret
pop
sub
pop
icebp
mov
lds
inc
fnstcw
add
pop
fiadds
sbb
jmp
pop
xchg
inc
aam
ja
mov
mov
add
mov
inc
jbe
mov
xchg
loope
and
mov
jmp
out
cld
les
pushf
lcall
pop
pusha
cld
lret
push
cmp
mov
dec
jle
sub
xchg
mov
pop
pop
stc
dec
sub
ljmp
xor
ret
mov
cmp
cs
shlb
xor
repnz
pop
sub
mov
leave
pop
push
out
dec
loopne
aam
sbb
fidivl
and
add
xchg
shrb
push
xchg
adc
iret
in
lahf
xchg
sar
jae
jns
sbb
hlt
dec
add
jno
pop
and
cmc
sbb
and
mov
push
or
dec
jecxz
or
movsb
lds
movsb
ret
stos
add
rorb
jae
mov
ds
fwait
es
xor
bound
bound
stc
inc
test
or
lock
jne
add
jb
fcom
mov
aam
sub
test
lock
lods
xor
xor
inc
mov
push
pop
add
cwtl
mov
or
mov
sub
pop
push
outsl
outsb
aas
mov
insb
sub
xchg
jl
je
fisttps
std
inc
push
xor
mov
lahf
je
or
add
xor
ret
pop
cmp
xor
hlt
adc
pop
hlt
ds
mov
insb
cli
sbb
push
and
xor
xchg
sbb
xchg
push
jle
and
mov
xchg
mov
enter
daa
subl
cmp
xlat
int3
in
cmp
add
mov
push
dec
loope
data16
int
les
inc
adc
mov
xchg
gs
xor
and
mov
mov
xor
clc
test
or
hlt
arpl
xchg
xor
adc
adc
inc
xor
jne
xchg
movl
add
aad
bsf
cmp
mov
xchg
lea
push
popf
cli
sbb
outsl
sub
adcl
mov
lock
sbb
adc
inc
mov
dec
je
push
push
add
cmp
out
pop
mov
into
pop
mov
out
addb
jns
cmp
daa
pop
cmp
movsb
arpl
cmp
int
sub
mov
dec
or
pusha
stc
repz
jl
ds
or
cmp
imul
in
mov
int
dec
mul
sub
scas
shlb
aas
inc
push
adc
pop
out
mov
dec
or
cs
xchg
sar
xor
out
dec
fildl
mov
jp
mov
das
dec
cmc
mov
stos
int3
ret
or
scas
popa
lods
popf
dec
cltd
jge
sub
js
les
imul
out
mov
lcall
mov
iret
mov
xor
push
into
xchg
xchg
mov
sbb
fidivrl
xchg
stos
cmp
call
test
mov
sbb
imul
or
add
lods
fwait
sub
xlat
addb
jno
test
or
fbld
adc
pop
dec
and
jns
xor
cmp
out
adc
xchg
cmp
mov
lods
insl
jns
loope
add
mov
xchg
out
data16
sub
cmp
cmp
rcr
sbbl
or
lahf
test
pop
sub
ret
and
leave
mov
das
es
mov
adc
xorb
dec
mov
dec
pop
test
loopne
adc
inc
mov
mov
je
xorl
andl
sbb
stos
adc
rcll
pop
int
call
repz
daa
fnstenv
mov
mov
and
out
ljmp
xor
pushf
xchg
jecxz
xor
cmp
push
fmuls
xlat
push
or
shrb
mov
pop
xor
out
cld
je
cmp
shlb
notb
hlt
clc
cmp
sbb
or
sub
cld
lods
xorb
add
sbb
pop
mov
sub
lcall
inc
xchg
pop
pusha
mov
jecxz
stos
rcrl
repz
jmp
dec
xor
repz
or
mov
daa
xchg
fwait
adc
pop
mov
and
lret
mov
mov
push
pushf
inc
lea
xchg
adc
add
js
adc
lret
inc
fwait
add
ds
mov
dec
pop
dec
cli
xor
in
lds
or
pop
lods
outsl
xchg
mov
xor
inc
xor
pop
pop
cs
imul
jbe
call
mov
lcall
lods
js
add
sar
test
mov
or
fwait
jecxz
jnp
gs
push
cmp
enter
call
je
adc
mov
jmp
and
inc
out
cmp
xchg
stos
push
loop
subb
lret
subl
je
and
mov
ror
sarl
in
enter
jnp
lods
leave
mov
adc
add
sbb
xchg
xchg
fnstcw
mov
push
push
shll
lcall
xchg
aad
ret
sti
xchg
adc
je
sti
ret
les
jmp
repz
pop
jbe
outsb
or
cmpsl
xchg
xor
cltd
push
in
dec
stos
rcrl
mov
or
mov
lea
js
jl
cmp
sub
outsl
leave
jno
ror
mov
repz
xchg
xor
aam
mov
fdivs
shlb
inc
sub
sbb
clc
stos
mov
cs
or
mov
popa
pusha
cmpsl
in
clc
lret
jmp
lds
sub
jl
movsw
jp
or
iret
lods
xor
mov
icebp
and
sbb
nop
fstpl
fldl
sbb
push
movsb
andb
push
stos
hlt
sub
leave
xor
xchg
rorl
leave
shrb
gs
push
cmp
mov
mov
ja
cmp
mov
add
xchg
xchg
cwtl
mov
inc
cltd
ficoml
in
or
mov
mov
inc
and
adc
and
inc
fcompl
in
pop
or
push
lret
sti
lret
repz
dec
cmp
push
cmp
sti
mov
mov
in
mov
ret
fisubs
imul
pop
jne
int
fwait
outsb
arpl
lahf
pop
and
sub
pop
outsl
roll
push
sti
iret
adc
or
mov
lret
in
xor
ret
nop
pop
jp
fistpl
in
xor
jge
push
pushf
ss
in
and
xchg
adc
cmp
push
sub
cmp
aam
xor
sub
popf
mov
cltd
les
and
mov
jmp
and
sbb
adc
pop
mov
xor
mov
sub
loopne
push
scas
pusha
fstpl
mov
enter
insb
dec
push
sti
std
adc
mov
jmp
out
shr
rcrb
xor
lods
push
and
imul
mov
add
sub
mov
ljmp
xchg
repz
sub
dec
xchg
or
pusha
shrb
and
xor
movsb
mov
je
rep
pop
pop
stos
sbb
lea
and
xlat
mov
int3
pop
or
mov
aas
inc
inc
loopne,pt
loope
mov
imul
jle
mov
mov
fs
outsl
push
mov
sub
test
xchg
lahf
push
scas
or
dec
jnp
push
push
add
mov
fidivl
andl
dec
int3
stos
es
mov
cld
insb
imul
test
mov
xchg
mov
sysret
dec
xchg
out
push
cld
and
pop
jo
inc
aas
cmp
lcall
adc
xchg
mov
cmc
adcb
sub
pop
rol
mov
lret
test
imul
mov
popw
ret
je
gs
sbb
mov
bound
push
clc
cmp
sbb
xor
pop
cwtl
imul
stos
mov
lock
out
popa
push
and
aad
xchg
test
mov
stc
mov
ljmp
fldt
xorl
xor
xchg
and
xchg
push
pop
divb
ret
icebp
int3
mov
sub
jg
int
inc
aaa
xor
mov
mov
flds
fstpt
add
push
hlt
dec
mov
fiadds
xor
pop
cld
sbb
jmp
cmp
cli
mov
dec
sbb
out
mov
cmc
or
sbb
mov
adc
jge
jb
packsswb
mov
push
and
push
dec
xchg
xchg
or
test
int
push
in
jle
cmp
jp
pop
jae
in
popf
fnsave
or
mov
lds
in
add
push
dec
jnp
mov
dec
std
xor
in
xchg
dec
ss
mov
inc
jns
nop
xchg
xchg
push
loopne
fldenv
mov
mov
add
xchg
icebp
bound
subb
xchg
sti
fcmovb
dec
mov
aad
inc
xchg
fidivrl
roll
or
test
leave
push
out
rclb
or
insb
xor
rorl
sbb
aaa
pop
mov
div
sub
jg
cmp
out
mov
xchg
ja
add
xor
insb
movsl
inc
mov
pop
stc
add
xor
into
add
addr16
jmp
xchg
cwtl
test
cmpsl
sbb
fsubl
cmp
ret
cld
mov
daa
mov
dec
mov
mov
nop
jl
sbb
cmp
xor
into
subb
insb
mov
push
pop
cli
mov
lret
ficoms
jge
push
test
pop
sahf
and
xchg
dec
nop
roll
lret
imull
cmp
lahf
xor
in
jle
sub
popf
arpl
or
fisubrs
push
sbb
mov
cmp
cmp
dec
aaa
mov
fcoms
add
jp
cltd
dec
inc
fbld
lcall
xchg
popa
ret
jg
dec
cmpsl
or
aad
pmuludq
cmp
shr
mov
fwait
and
push
out
cmpl
mov
jp,pt
aas
push
in
or
push
imul
fdivp
dec
inc
push
aas
cwtl
leave
inc
sarb
jbe
or
or
cs
add
push
mov
pusha
mov
add
inc
cmp
popa
cmpsl
cmc
rorb
test
pop
or
loopne
inc
sub
sub
dec
pop
push
cltd
dec
sbbl
loop
pop
mov
jne
int
cmp
lahf
mov
and
les
add
rcll
fidivl
adc
or
mov
pop
gs
jno
and
sub
test
push
sbb
aaa
push
sbb
aaa
push
sbb
aaa
push
sbb
aaa
push
sbb
aaa
push
sbb
aaa
push
sbb
in
pop
out
into
cmp
into
pop
mov
sarb
insl
out
into
pop
mov
sarb
insl
out
into
pop
mov
sarb
insl
out
into
pop
mov
shrb
mov
mov
mov
flds
dec
mov
add
xorb
push
sbbb
dec
mov
addr16
dec
jne
das
mov
jl
daa
jae
test
mov
shll
test
iret
cmpsb
cmp
int
mov
mov
xchg
popf
psubsw
push
stos
test
mov
and
or
adc
mov
add
negb
cwtl
fistpll
test
jg
je
or
pop
push
xor
push
ja
inc
xor
out
mov
jmp
jne
and
int
jo
jp
js
sbb
jle
out
jl
xchg
arpl
int3
ret
hlt
xor
cmp
shrl
lock
pop
mov
arpl
xor
fmull
sub
sbb
ja
cmpb
inc
roll
cli
adc
xor
mov
hlt
sbbl
dec
xchg
cwtl
cmc
inc
sub
test
mov
stos
imul
and
push
and
pop
push
out
mov
xchg
loope
dec
inc
mov
fs
inc
in
sub
xchg
adc
dec
mov
mov
xor
aad
push
adc
mov
insl
cmp
divb
in
fisubs
adc
and
sub
jl
push
jno
adc
cmpsb
data16
xchg
sbb
pop
imul
inc
rolb
add
ds
push
lcall
adc
dec
cld
xchg
sub
pop
pushf
decb
push
cltd
xlat
mov
mulb
inc
push
or
loopne
dec
xchg
dec
pop
mov
cmp
xor
scas
ret
scas
push
jb
insl
pop
mov
jae
in
adc
int
es
sbb
aas
pop
imul
xchg
into
adc
ss
pop
cmp
ds
aas
insl
pusha
mov
jns
mov
flds
xchg
rorb
lods
dec
push
arpl
cmp
scas
sti
fsubrs
pop
aam
push
in
loopne
clc
dec
xlat
mov
cmc
ljmp
lahf
mov
insb
xor
sub
mov
jge
scas
sahf
vfnmadd132ss
mov
nop
add
or
sbb
add
je
ja
xchg
push
aam
dec
int
adc
cmp
mov
mov
addr16
xchg
lret
js
test
jg
popl
jns
imul
fnsave
inc
mov
daa
insb
out
rorl
cli
adc
jno
fstl
repz
cmp
jg
pop
out
sbb
jae
xor
sbbb
test
mov
loop
mov
dec
add
and
pop
sub
jo
das
cmp
int
iret
sbbl
jo
push
fcomps
sti
out
ret
gs
icebp
pop
jae
dec
mov
mov
dec
cmp
inc
pop
push
jp
inc
fdivr
popf
psubw
inc
mov
test
xchg
outsb
xchg
aaa
mov
in
push
lret
dec
ja
push
and
mov
cs
push
mov
test
push
and
icebp
mov
push
mov
push
and
fs
or
cmc
sti
mov
movl
daa
sub
es
push
sbb
adc
sub
test
je
cmc
cmp
or
mov
jo
scas
pushf
lds
fwait
and
ret
mov
and
out
insl
in
out
and
xchg
cmp
cwtl
je
or
pop
insl
aam
push
aas
popa
sti
scas
push
xchg
sub
cmp
ret
jl
or
mov
and
xchg
inc
jecxz
xor
int
mov
rolb
loope
cmp
popl
lcall
cmp
inc
repz
js
sbb
cli
adc
dec
stos
movsb
test
loope
sarl
loop
nop
sub
les
test
aam
jmp
popa
push
add
jmp
sbb
or
cmpsb
in
dec
mov
leave
xor
inc
pushf
add
add
cld
test
sub
adc
popf
fwait
push
imul
mov
test
loope
mov
addr16
inc
sub
and
aad
jnp
and
mov
adc
dec
loop
bound
pop
mov
jae
les
cs
add
jno
aam
push
ljmp
lret
outsl
in
fbld
push
leave
inc
aad
mov
mov
mov
rorl
add
push
pusha
push
js
subl
popa
test
pop
mov
xor
data16
out
cmp
cmp
push
sarl
lds
push
daa
rcll
xorl
lret
cld
fwait
mov
into
push
or
jae
jno
addr16
cmp
mov
add
insb
lea
or
ds
adc
shrb
mov
cmpsl
adc
jmp
inc
jns
mov
in
sbb
mov
shrl
adc
mov
out
ret
sub
clc
jo
and
cs
std
dec
daa
mov
add
mov
push
and
mov
aad
mov
mov
mov
sbb
inc
xor
rcr
cld
sub
aaa
push
daa
cmc
and
jmp
push
insb
icebp
xchg
fsubrs
cmpsb
inc
mov
mov
mov
dec
loop
subb
jae
jne
xchg
mov
loopne
dec
add
hlt
mov
pop
rolb
cmp
and
enter
push
sub
stc
adc
dec
sti
mov
push
stos
push
mov
add
and
sarl
repz
xchg
clc
test
cmpsb
nop
loopne
and
lds
jmp
sub
fisubl
outsl
inc
jge
popf
jecxz
mov
pop
lds
adc
cltd
dec
sub
cmp
mov
subb
icebp
inc
out
sbb
xor
cmp
cmp
insl
test
xor
pop
pop
adc
insb
sbb
mull
int3
mov
mov
lock
aaa
ljmp
push
das
test
pushf
pop
pop
dec
ds
fdivrl
ds
testl
push
mov
jne
lds
repnz
or
mov
xor
enter
sub
addr16
pop
jg
adcl
jge
lcall
cmp
out
mov
mov
cmpsb
testb
or
test
into
xchg
fmull
mov
out
inc
pop
dec
cmp
test
inc
adc
lods
ret
loopne
out
sub
rclb
sub
lock
std
into
das
pop
loope
pop
adc
in
jp
sti
sbb
ljmp
jg
and
sub
cmpsl
or
add
ret
push
cmp
xchg
dec
dec
push
mov
popf
mov
mov
inc
in
cli
aas
loope
adc
ret
push
or
or
sahf
xor
cmp
rorb
mull
sub
fistps
push
clc
mov
or
jbe
xor
adcl
daa
sub
xor
mov
inc
enter
dec
in
je
pop
in
jns
pop
sbb
mov
jle
sbb
inc
inc
push
mov
adc
out
push
sub
or
sbb
cmp
sub
clc
mov
pop
jmp
sub
push
and
or
xchg
js
in
cmpl
sbb
xor
fidivl
jbe
daa
fiaddl
mov
or
xor
insb
inc
mov
aad
lods
adc
pop
and
es
sub
cmp
sbb
mov
xchg
sub
int
xor
lock
js
pushf
clc
shrb
call
sbb
andl
xchg
xchg
add
xchg
jmp
pop
ljmp
je
mov
cmp
add
fistps
pop
and
sub
xlat
sti
sahf
pop
dec
adc
xlat
sbb
mov
cltd
or
sbb
jne
add
jecxz
in
and
cmpsb
adc
xor
jge
testb
pop
push
adc
lea
insb
fcmovnu
ljmp
imul
push
inc
jge
xchg
mov
add
adc
cmpsb
lods
push
rclb
clc
lds
mov
xor
adc
and
mov
mov
mov
popf
pop
ljmp
cmp
shlb
and
loope
lods
stc
jns
je
ret
inc
in
clc
cmp
orb
and
inc
clc
gs
dec
xchg
test
xor
or
aad
mov
mov
ret
testl
cmp
pop
xor
xorl
cmp
push
jl
xchg
xlat
int
pop
stc
es
movsb
enter
cmpsb
pusha
sbb
jp
fildl
mov
mov
js
push
arpl
adc
cmc
jae
stos
sti
or
xor
popa
inc
push
add
mov
jl
lahf
push
out
daa
popf
lret
aaa
inc
gs
xchg
adc
subl
xlat
cmp
lea
rcr
sbb
clc
adc
cmp
cmc
jmp
and
inc
sbb
or
jne
mov
loopne
push
jno
enter
sub
xor
addr16
xchg
out
push
std
cltd
insl
sbbl
call
rol
pop
stos
dec
scas
test
mul
aam
push
pop
sub
fisubrs
nop
das
out
lahf
jo
sbb
ret
in
pop
lea
outsb
dec
les
mov
mov
jb
sub
push
inc
dec
jno
cld
shl
xlat
jg
arpl
xlat
cwtl
jecxz
popa
jo
and
pmovmskb
lods
xor
xchg
mov
xor
xchg
mov
inc
stc
addr16
xor
jns
jecxz
inc
xor
cmp
jb
idivl
pop
dec
lds
add
loop
or
leave
loope
sub
cmpsb
sti
cmp
fisttpl
push
adc
cmp
pop
dec
pop
xchg
int
or
leave
cmp
cmp
shll
inc
ljmp
cmp
bound
mov
jno
add
mov
pop
rcr
aaa
xor
lret
nop
mov
push
loopne
mov
test
sub
mov
stc
sub
adc
xor
popf
ret
sarb
cs
mov
loopne
sbb
add
insb
jb
xlat
mov
push
cld
mov
xchg
in
cltd
arpl
daa
clc
jb
lret
stos
inc
cmp
push
adc
fs
mov
out
fistpl
icebp
dec
inc
or
jg
out
mov
movsl
mov
mov
adc
pop
mov
add
ret
adc
dec
lcall
jns
jmp
cs
test
repz
xor
sbbl
pushf
pop
inc
jp
pop
sub
nop
data16
sar
pop
push
inc
or
dec
pop
popf
sub
mov
lds
outsl
cs
sub
loope
or
cmp
daa
xchg
dec
into
es
add
mov
cltd
pop
add
jne
stos
arpl
and
std
sbb
notl
lahf
push
std
cmp
mov
js
push
outsl
and
popa
dec
loope
sub
test
out
or
cmp
adc
cmp
xor
dec
adc
and
xor
add
mov
sbb
inc
dec
test
or
xchg
push
ss
jnp
enter
addb
jbe
fwait
mulb
xor
lods
pop
and
add
aad
adc
fwait
shlb
cmpsb
nop
iret
repz
shll
pop
or
mov
mulb
inc
loop
roll
pop
sub
fdivrs
lcall
out
shl
fcomps
mov
pop
dec
add
cmp
insb
rcr
jecxz
adc
add
out
repz
inc
in
and
fsubrs
loop
dec
sub
lea
push
sbb
fcompl
js
std
push
dec
movsl
insb
ljmp
jmp
xor
push
je
add
sub
pop
inc
push
cltd
inc
push
iret
dec
jecxz
rcl
fsubr
inc
cmp
and
push
cmp
mov
mov
lret
inc
xor
sub
icebp
lea
or
pop
jno
or
cmp
inc
imul
mov
fs
inc
stc
dec
jp
pop
mov
movsl
ds
inc
ljmp
or
jae
and
nop
in
pop
and
sbb
cmc
and
mov
shll
rorb
shl
cmpsb
lods
imul
sbb
sub
fnsave
repz
loope,pn
cmc
push
cmp
push
xor
pop
inc
leave
or
scas
cmpsl
mov
rcrl
cmpsl
mov
push
xchg
dec
cmp
pop
cmp
push
ficoms
xchg
and
dec
mov
and
sub
jae
sub
xor
adc
dec
sahf
leave
pusha
inc
iret
or
rorb
clc
xchg
lret
pop
mov
mov
fisubl
mov
call
mov
adc
bound
inc
push
mov
inc
enter
stos
inc
jmp
repz
in
aaa
shlb
mov
outsb
cmp
aad
jmp
pop
mov
jno
pop
add
xchg
arpl
stos
push
aad
aas
sub
adc
addr16
push
orb
and
mov
aad
inc
jp
mov
popl
cmp
mov
pusha
inc
cltd
shr
cwtl
test
add
jg
pop
bound
test
xchg
push
or
xchg
pop
dec
mov
push
mov
sub
dec
ja
mov
jb
int
push
shll
cmpb
dec
sahf
in
mov
cli
icebp
das
subb
or
out
shll
inc
leave
loop
jo
out
int
push
xchg
shl
movsl
pop
and
je
shrb
add
int3
fldt
out
or
or
lods
xchg
fucom
popf
dec
pop
nop
jno
pusha
push
in
mov
jmp
and
stos
lahf
adc
jns
pusha
mov
lds
or
jmp
and
aaa
lods
addb
dec
dec
or
ret
repz
leave
xchg
test
sbb
inc
and
inc
rorb
push
inc
pusha
push
cmp
movb
mov
test
int
aaa
popa
push
xlat
test
or
jne
ficompl
gs
pop
or
cld
jo
inc
cmp
mov
sbb
push
push
push
pop
sbb
add
xlat
bound
jecxz
jae
jge
jg
shrl
inc
sub
or
adc
pushf
jb
or
lock
dec
inc
inc
xchg
xor
scas
mov
shlb
cwtl
xorl
jp
sbb
insl
orl
in
jns
cmpsl
scas
popf
mov
adc
inc
sub
dec
jns
pushf
cmp
pop
mov
fbstp
leave
or
cwtl
inc
sub
lcall
pop
lds
rolb
adc
xchg
cmp
mov
mov
clc
jle
sbb
adc
stos
fsubrs
pop
stos
aaa
imul
mov
sti
or
xchg
or
mov
movb
dec
psubd
into
inc
out
ja
pusha
inc
add
scas
mov
push
out
inc
add
pop
enter
sti
ficoml
out
rorb
movsl
xchg
sub
test
mov
iret
jp
insl
push
sarb
out
jne
in
push
bswap
fadds
loopne
mov
xor
add
test
jp
sti
movsl
stos
xor
mov
push
sub
sbb
mov
movsl
cli
fiadds
jmp
test
test
outsl
rol
lret
mov
insl
sbb
cmp
arpl
jae
es
push
pushl
loopne
rorb
push
jae
push
shr
lock
mov
std
sub
add
or
sub
jns
mov
mov
fnsave
and
je
xchg
popf
popa
cmp
xchg
cmp
or
int
ret
push
jo
scas
cmp
test
adc
inc
cmp
mov
leave
mov
cmp
aam
sbb
xchg
test
sbb
fisubs
fnstcw
mov
stc
ja
rclb
into
lock
jno
je
fmuls
loopne
xchg
cmpsb
mov
jae
jnp
in
mov
pop
xchg
fs
fcomi
in
das
push
out
push
fwait
mov
dec
lret
orl
fsubs
add
jb
sbb
sbb
push
dec
leave
lahf
scas
adc
adc
jns
xchg
inc
addl
add
pop
pop
gs
loope
cmp
adc
sub
bound
mov
repnz
mov
mov
loope
jg
bound
fstl
lahf
jb
incb
adc
fiadds
fistps
in
mov
jae
ret
inc
mov
or
movsl
or
gs
sbb
in
fst
movsb
mov
pop
test
fidivl
cwtl
fcompl
ficomps
rcll
mov
or
push
outsb
mov
and
fstps
adc
pusha
loope
mov
icebp
mov
loop
ret
and
pop
pusha
lea
and
pop
addr16
scas
mov
rcr
sub
jns
lahf
leave
call
xchg
les
fisttps
data16
lcall
or
mov
pop
sbb
shrb
jae
int
pop
mov
fwait
xchg
mov
ja
xor
lahf
lahf
std
cmp
inc
test
xor
push
dec
inc
ret
pop
xchg
adc
call
pop
ret
pop
xchg
cmp
xor
cmp
or
fs
or
repz
inc
stos
loop
rorl
sbbb
jnp
inc
outsb
fsubr
push
and
pop
stos
imul
outsl
and
adc
xor
push
push
aas
jb
jo
xor
cmp
mov
mov
mov
mov
xor
or
or
add
inc
pop
add
pusha
xlat
or
jno
popf
mov
sbb
movsl
dec
add
lods
lret
in
jl
xor
std
and
xchg
inc
ss
inc
push
add
test
cltd
fidivrl
std
pusha
pop
or
dec
mov
out
jb
loop
mov
lds
mov
je
or
jmp
andb
int
insl
cmp
jge
insb
jbe
outsb
dec
gs
call
mov
popa
sub
rcll
mov
mov
adc
sti
sbb
adc
mov
shll
pop
pop
fstps
push
jae
push
xor
cmp
mov
das
push
aas
aam
push
test
sahf
sahf
jge
add
lock
sahf
ret
mov
inc
pop
pop
mov
sub
xchg
clc
fbld
or
mov
jo
aas
rcl
adc
enter
cmp
fs
outsb
ja
cmp
mov
pop
mov
addr16
xlat
inc
stc
cld
pop
pop
dec
pop
pop
or
ret
fildll
shr
pop
push
ret
rcrl
mov
js
stos
stc
dec
lds
xlat
xlat
or
mov
adc
outsb
xor
jg
xchg
cmp
mov
lahf
dec
fmuls
inc
cli
test
cmp
les
mov
pop
add
ja
add
int3
subl
mov
mov
arpl
repnz
aam
dec
cli
jl
imul
xor
add
jmp
aam
xor
push
xchg
mov
jbe
fstpt
inc
and
mov
add
or
push
stc
popa
inc
cmp
rol
scas
xchg
push
mov
xor
call
cmp
sub
push
loope
std
or
and
jo
loopne
mov
icebp
hlt
inc
inc
pop
insl
mov
adc
jae
inc
pop
loop
popf
dec
jmp
dec
push
std
adc
and
sbb
sub
insb
repz
popa
adc
pusha
xchg
les
inc
loope
sbb
imul
xchg
mov
or
mov
mov
sub
mulb
out
mov
mov
sub
je
cmc
in
inc
js
shll
imul
fldcw
jmp
insl
mov
xchg
loop
and
mov
fsubrl
daa
jno
fdivrl
outsl
or
xchg
inc
insb
adc
xchg
inc
cmp
jno
inc
mov
inc
and
push
out
outsb
xchg
inc
int
out
dec
sub
sbb
jmp
sbb
adc
into
jmp
stc
dec
adc
jp
inc
inc
adc
mov
cmc
sahf
outsl
xchg
das
ret
pusha
lahf
call
xchg
sub
aaa
inc
dec
out
test
mov
xchg
out
roll
loop
sahf
dec
dec
mov
enter
or
imul
mov
outsl
ss
inc
xchg
cli
loopne
lea
mov
aad
pop
popf
cmpsl
shlb
arpl
addr16
lods
mov
js
pop
lods
fldl
cltd
jge
bt
cmp
dec
fidivl
in
dec
inc
xchg
and
cli
cmc
dec
loop
xchg
in
outsb
pop
add
mov
repz
mov
lcall
pop
arpl
jno
jecxz
xor
sbb
mov
pop
loope
mov
jl
sub
inc
int3
out
cld
jae
adc
xchg
loop
shlb
xchg
cli
add
inc
es
xor
sbb
mov
jl
aaa
fcomi
ds
xor
scas
sbb
insl
leave
sub
cmc
dec
jmp
dec
sbb
jecxz
pop
pop
fisubrs
stos
int3
pop
cwtl
jbe
cmp
pop
loopne
sub
pop
enter
inc
mov
arpl
mov
lods
loopne
out
sub
stc
bound
xor
testl
addr16
fdivrl
repz
add
in
mov
fs
addb
mov
std
cltd
mov
loope
add
mov
daa
xor
shlb
mov
icebp
roll
cli
insb
sbb
pop
cwtl
movsb
out
sub
and
add
int3
sbbb
mov
mov
mov
stos
mov
xlat
insl
cmp
fcmovnb
loope
inc
cmpsl
sar
or
and
outsb
subl
test
dec
cli
loopne
std
sbb
insl
push
jo
in
sub
test
xchg
and
enter
mov
push
rolb
push
inc
in
adc
jp
xchg
sub
sarl
mov
mov
sbb
ljmp
xchg
arpl
mov
repnz
gs
mov
sbb
push
out
jo
jo
lea
add
addl
push
ss
mov
adcb
nop
subl
pop
xor
std
cmp
cmp
or
aaa
pop
add
mov
pop
leave
dec
in
lods
test
inc
mov
leave
stos
push
in
popf
mov
mov
imul
testl
shrb
push
cli
mov
sub
pop
andb
orl
fiadds
jg
xor
sbb
mov
and
je
aas
add
aas
push
filds
sub
lret
jge
addr16
rclb
adc
ret
int3
sahf
push
adcl
xor
mov
and
jp
in
jo
outsb
mov
jge
lock
jmp
js
pop
xor
push
stc
sahf
shll
inc
dec
aad
notb
inc
push
inc
enter
cmc
add
lahf
clc
mov
addr16
lea
mov
fmuls
pop
lcall
push
cld
stos
mull
lock
add
iret
mov
outsl
or
in
std
jl
inc
dec
fsubs
mov
add
fisubrs
ficoml
aas
xchg
leave
pop
pop
xor
dec
xchg
add
mov
int3
dec
sti
cltd
jp
or
mov
sub
adc
push
xchg
jo
movsb
fisubs
push
cmc
and
mov
push
rol
test
xor
fcoms
pushf
int
jge
lcall
jb
aaa
pusha
mov
jne
loop
mov
aaa
mov
cmp
leave
pop
bound
shr
push
movsl
pop
mov
sbbb
rolb
movsl
outsl
add
jg
adc
add
stos
mov
push
aad
push
fcomps
cmp
jmp
or
je
xchg
int
mov
ja
jge
adc
and
mov
js
jo
cmp
repz
add
push
add
js
cmpsl
bound
mov
or
jnp
cmpsb
and
sub
pop
sub
repnz
inc
inc
mov
add
repnz
rorl
je
mov
push
cmpsb
and
scas
iret
fwait
adc
inc
popf
add
push
js
outsb
mov
inc
shld
mov
cmp
loope
or
imul
mov
arpl
lret
push
mov
ficoml
push
imul
out
xchg
jno
mov
sahf
push
adc
in
add
dec
popf
cmp
and
dec
mov
add
stos
mov
in
jne
insl
pusha
push
cmp
loopne
rolb
pop
push
out
inc
push
inc
shll
or
fdivrs
rcrb
lret
sarb
jno
jae
mov
out
into
in
fwait
out
fisubl
mov
popf
xchg
pop
repz
mov
nop
in
cmpl
push
int3
cld
cmpsl
ret
out
jle
pushf
mov
jne
lcall
mov
stos
into
loopne
sbb
outsl
sub
dec
inc
inc
push
xchg
pusha
and
mov
and
test
sahf
fidivl
mov
xchg
aam
xor
add
lea
test
lods
dec
or
bnd
repnz
or
add
mov
stos
fdivr
inc
lock
add
mov
lret
std
xlat
fs
adc
cmp
mov
loope
shll
jecxz
out
stos
mov
out
lahf
mov
mov
mov
inc
and
test
iret
ret
ret
and
iret
idivb
cli
pusha
out
mov
pop
sub
push
mov
adc
inc
out
adc
pop
dec
xchg
in
fstl
cmp
adc
cmc
aam
mov
ret
mov
jno
sub
mov
cmpsb
pop
nop
dec
iret
dec
push
mov
call
add
js
mov
stos
jl
mov
xor
aad
int3
push
add
mov
inc
add
jb
movl
jae
repz
dec
sub
addr16
sbb
pop
push
pop
cmp
rcr
jmp
nop
test
popa
ljmp
mov
mov
lock
cmp
add
sbb
sub
sub
out
add
push
add
jo
ljmp
xor
sar
lock
shlb
stc
pop
pushf
jl
jb
mov
es
jecxz
ds
jns,pn
pop
pop
inc
fsubr
xchg
stos
scas
sbbl
pop
ret
enter
mov
pusha
in
inc
sbb
rcrb
aam
rol
mov
jp
xchg
repz
out
sbb
adc
adc
and
fs
mov
push
and
dec
lret
add
mov
in
jle
jno
sub
aas
arpl
cld
js
sub
jge
jmp
or
cmpsl
scas
mov
lea
pop
mov
jecxz
hlt
mov
in
sbb
sbbb
or
movb
jb
jne
push
dec
xorb
sbb
out
jno
aaa
pushf
aaa
fisttpl
out
pop
pop
in
rolb
shll
pusha
sbb
mov
mov
test
imull
mov
int
idivl
enter
loope
shlb
int
push
cmc
fidivs
je
push
xchg
cmp
loopne
xchg
mov
scas
stos
push
adc
sbb
repz
fcompl
sti
icebp
cmpb
shrb
cmpsb
pop
xorb
jbe,pn
test
fildll
add
push
cmpsl
cs
in
aas
mov
adc
lcall
cmpsb
pop
fsubrl
int3
pop
dec
or
mov
and
mov
xor
fidivrs
rorb
jb
jecxz
cltd
lret
in
mov
bound
cmp
sub
iret
cmc
or
jnp
jb
pop
and
jle
mov
xor
in
cmp
lock
inc
mov
adc
push
pop
adcb
xor
cmpsl
mov
and
xchg
jle
cld
in
mov
frstor
adc
shr
or
push
sub
or
xor
dec
xchg
push
push
mov
and
xchg
cltd
mov
mov
adc
lds
imul
mov
mov
dec
or
or
pop
push
fs
xor
mov
enter
int
inc
test
mov
sahf
or
cwtl
loopne
push
mov
mov
mov
stos
lods
sbb
dec
mov
and
test
pop
xchg
imul
jmp
sub
or
xor
fnstcw
sbb
sub
sub
pop
xchg
pop
xchg
into
sbb
orb
push
imul
or
push
test
stos
or
push
fsub
lds
shr
and
and
pop
mov
pop
xorb
sahf
repnz
imul
jecxz
dec
push
pop
adc
adc
or
lcall
lea
clc
xchg
push
les
pop
pop
mov
push
call
xlat
add
sahf
add
dec
fisttpll
fistps
aaa
cld
pop
mov
aaa
mov
arpl
shrb
pusha
pop
cmp
in
xchg
add
sbb
leave
xchg
pop
xchg
or
outsl
mul
cmpb
or
push
and
jae
adc
or
xor
mov
lahf
ss
push
xor
fxch
mov
inc
add
inc
jbe
bound
mov
call
jl
jnp
cmpsl
fimull
imul
pop
push
loopne
lret
jo
sub
sbb
pop
das
orb
adc
jge
xorl
cmovp
mov
sbb
aaa
pop
in
aaa
mov
cmp
adc
out
ret
aas
adc
mov
bound
aas
insl
dec
icebp
adc
sarb
sub
std
adc
inc
xor
testb
gs
xchg
mov
xor
ficoml
dec
xchg
mov
movsl
out
lret
std
add
int
faddl
fimuls
mov
sbb
ret
clc
mov
mov
shrb
adc
sbb
and
push
ss
pop
insb
sahf
stos
pushf
add
xchg
dec
in
jg
cmpsb
and
mov
cmpsl
hlt
push
int3
dec
pushl
ja
scas
into
cmp
mov
stos
sbb
pushf
or
jecxz
jp
inc
subb
movsb
mov
in
or
inc
xchg
inc
test
lret
bound
in
adc
es
shlb
in
mov
roll
push
clc
fldcw
pop
cwtl
lock
lock
adc
fcoms
push
aas
xor
les
das
and
mov
pop
hlt
ss
cmp
xchg
push
add
inc
mov
stos
clc
and
add
push
xchg
in
inc
xor
jne
xor
outsb
xor
fisubs
pop
fidivrs
mov
leave
cld
sub
sub
and
xchg
sahf
pushf
clc
ss
out
xlat
lds
mov
subb
inc
xchg
icebp
jbe
add
pop
sub
js
gs
outsl
xor
xchg
js
aaa
jecxz
jmp
sbb
sbb
rorl
xor
push
sbb
insb
sar
mov
dec
xor
dec
push
add
outsb
mov
test
pop
mov
js
pusha
jns
pushf
mov
xchg
cwtl
ret
jp
mov
jecxz
mov
cs
mov
enter
outsb
mov
mov
jne
xlat
xor
call
imul
in
in
fsubl
out
cmp
inc
out
ret
lods
aas
sub
and
add
mov
pushf
ss
ds
aad
mov
clc
jno
insb
sub
orb
std
or
sub
icebp
and
adc
cltd
out
neg
rcl
ret
pmaxsw
sbb
mov
sub
lds
xchg
xor
jp
xor
pop
pushf
lahf
nop
mov
push
into
adc
sbb
mulb
nop
je
sub
aam
xor
mov
jb
jo
ja
inc
jns
cwtl
or
xchg
inc
imul
and
movsl
mov
jb
mov
rorl
push
inc
and
push
rcrb
stc
inc
mov
int
pop
daa
jae
jle
and
inc
add
sub
and
push
and
sbb
fwait
pop
sub
jns
adc
dec
mov
cwtl
das
xor
lods
aad
push
mov
pop
stc
cmc
icebp
sub
insb
hlt
dec
lds
fstp
or
or
std
and
ret
xor
mov
repnz
mov
mov
jle
inc
adc
cmp
inc
mov
inc
dec
stc
in
sbb
lea
in
notb
cmpb
sbb
stc
dec
fistpll
push
push
pop
cmc
outsb
inc
xor
sbb
xchg
and
das
cs
xlat
mov
out
xchg
jo
fdiv
sarl
cmpsb
insb
js
add
pop
je
in
dec
sbb
xor
mov
mov
sub
or
sbb
gs
repz
daa
mov
insl
pop
sub
push
jae
mov
push
xchg
insb
icebp
data16
or
sbb
test
pop
data16
push
adc
dec
jns
mov
insl
xchg
arpl
jo
insb
mov
sub
shll
inc
dec
imul
inc
pop
or
pop
out
push
jbe
sti
ja
hlt
and
push
mov
aaa
jmp
pusha
scas
lds
arpl
pushf
pushf
stos
mov
adcl
in
or
ljmp
inc
cltd
push
bound
add
xor
loope
sub
js
les
inc
rorl
out
mov
xchg
dec
scas
subb
cmp
cmp
fadd
bound
sti
xchg
sub
bound
dec
cli
pop
in
sub
xchg
ja
adc
enter
popf
jno
cmp
xchg
inc
jns
gs
inc
and
jnp
loope
rcrl
test
mov
movsl
and
rorl
lods
lods
mov
xchg
mov
push
cmp
cltd
pushf
push
es
mov
xchg
sbb
mov
jg
or
test
imul
jno
js
std
and
test
mov
jb
cmpsb
mov
cltd
shll
inc
add
sbb
divb
aaa
sbb
sub
rclb
int3
ret
sbb
ja
ficomps
add
iret
gs
hlt
push
push
pop
imul
lock
mov
jg
and
xchg
aad
arpl
jns
xor
imul
push
mov
mov
into
lock
rcl
cmp
dec
xchg
arpl
call
jle
andl
push
sub
pop
js
dec
mov
xor
out
mov
and
dec
lock
roll
push
inc
das
je
and
lahf
scas
sbb
dec
xchg
jmp
outsb
int
sub
xchg
mov
loop
je
mov
push
sub
adc
mov
in
repnz
sbb
movsb
cltd
adc
inc
fnstsw
es
or
repz
insb
movsl
int3
imul
lret
pop
lahf
adc
add
in
xor
sub
cwtl
inc
mov
fbstp
sbb
push
fs
out
xor
mov
sub
jns
lret
xchg
addr16
mov
shr
pop
mov
pop
les
mov
pop
pusha
scas
mov
add
mov
inc
je
pop
lds
testl
jge
dec
or
in
jmp
pop
lods
mov
push
adcl
icebp
int
ljmp
inc
cwtl
jg
mov
cmp
lret
xchg
sub
inc
cmp
and
jae
xchg
mov
adc
stc
out
fcompl
scas
adc
cmpsb
es
sahf
stc
adc
push
insl
push
mov
mov
push
sti
out
aaa
lock
arpl
leave
into
pop
cmp
loope
sub
inc
daa
ds
adc
adc
ss
add
es
les
mov
int
pop
lahf
in
mov
pop
shrb
dec
and
lret
xchg
enter
fisubs
and
mov
in
sub
sub
ficomps
in
fwait
mov
mov
pop
bound
pop
loopne
test
das
dec
or
fistpl
mov
and
push
mov
xchg
scas
jo
jno
gs
in
mov
push
sbb
scas
rorb
into
add
sub
pop
jg
inc
pop
test
push
push
pmuludq
out
xlat
lock
icebp
adc
push
outsb
hlt
jae
movsb
lret
pop
je
mov
cli
lcall
testb
idivl
add
xchg
stc
out
in
mov
push
jne
lcall
sbb
test
out
xchg
repz
cwtl
dec
pop
pop
rcrb
mov
cltd
or
pop
es
mov
mov
out
mov
loopne
mov
cmp
shll
fwait
adc
in
loop
adc
add
or
inc
inc
inc
inc
adc
mov
lret
int3
adc
lods
pop
int3
inc
rol
addb
inc
int3
adc
lods
push
movsl
mov
inc
rol
addb
inc
int3
adc
lods
dec
movsl
mov
inc
rol
addb
inc
int3
adc
movsl
mov
inc
rcrb
mov
rcll
mov
cs
mov
pushf
mov
mov
jnp
xchg
pop
aam
xchg
xchg
out
mov
aam
and
idivl
ds
arpl
aad
imul
mov
sub
sub
adc
pop
pop
cwtl
xorl
sbb
mov
rcl
lea
fimuls
data16
jae,pn
sar
leave
add
dec
mov
pusha
push
xor
jle
push
sub
ljmp
sub
stc
test
cmp
imul
or
fidivl
in
and
imul
fs
test
popa
add
adc
jns
jl
cmp
push
cmp
xchg
push
adc
mov
add
add
in
add
mov
divl
addr16
push
andl
out
jg
clc
sbb
testl
or
jne
rcr
loopne
cmp
addl
dec
int
push
jp
pop
pop
jno
adc
jp
xor
outsb
xor
cmp
sub
mov
and
xchg
pushf
xlat
outsl
popf
jb
jmp
and
cmpsl
pop
or
in
cmp
inc
mov
or
push
jb
pop
mov
loopne
mov
pop
cmp
in
ret
sbb
push
mov
shll
arpl
mov
movsl
scas
rcll
jl
gs
jns
or
mov
push
dec
or
sbb
mov
es
pop
loopne
movsb
sbb
movb
outsl
enter
loopne
imul
das
les
push
jp
sub
rcl
outsb
aam
adc
stos
sbb
mov
mov
add
rdpmc
sarb
dec
dec
cmpb
and
in
mov
stc
push
call
negl
call
fsubrl
aaa
inc
ds
lret
mov
shrl
mov
popf
int3
dec
inc
cwtl
out
daa
xchg
test
inc
jmp
movsl
movsb
inc
adc
and
inc
scas
stc
pop
add
test
and
int3
sbb
jmp
pop
insl
outsb
jle
icebp
inc
mov
outsb
and
mov
dec
daa
js
dec
push
das
jnp
sahf
mov
adc
xchg
int3
inc
sub
aam
inc
jbe
xchg
xchg
push
jge
push
and
roll
cmc
dec
mov
mov
jp
xor
add
out
push
push
pop
pushl
jo
dec
jne
xchg
mov
cmp
insb
sub
xor
mov
test
movsl
mov
lods
push
and
pop
push
lahf
ljmp
mov
pop
cwtl
and
leave
or
in
pop
jns
inc
mov
test
enter
shl
push
mov
xor
rol
pushf
shll
andl
jns
or
lds
fisubs
es
pop
repnz
js
dec
mov
pop
int3
in
pushf
push
rcl
ret
xor
ret
popf
fnstsw
cmp
movsl
jb
xor
gs
out
and
pushf
test
pop
es
popa
cmp
imul
ficoms
jae,pt
adc
repnz
mov
mov
pop
and
sub
mov
mov
mov
dec
int3
sbb
fisubl
jnp
mov
adc
ret
roll
mov
scas
das
cmpb
jno
xor
dec
push
aam
mov
fisttpll
mov
cwtl
dec
loopne
cli
int
add
inc
mov
scas
dec
ffree
pop
sti
pop
add
rcll
add
imul
iret
dec
fcompl
push
stos
push
test
and
movsl
in
push
mov
es
and
mov
adc
pushf
adc
jnp
arpl
ror
in
cli
fsubrs
jl
jno
or
cmp
mov
popf
lock
call
dec
popa
sub
insb
int3
sub
pop
pop
ja
push
mov
inc
dec
sbb
stc
xchg
outsl
mov
sub
dec
scas
and
scas
pop
lret
es
or
dec
cmovb
insl
mov
fs
lds
std
imul
push
test
dec
inc
and
mov
aad
jbe
loop
sbb
dec
jbe
jbe
xchg
scas
lret
sub
add
shr
das
pushf
push
insb
adc
ret
xor
cltd
lret
in
mov
mov
mov
movsl
addl
dec
adc
push
push
jns
arpl
rcrl
icebp
xor
jae
or
sbb
jg
jle
mov
pop
aas
mov
inc
mov
mov
or
daa
add
gs
xchg
test
dec
fldcw
aad
mov
push
int3
sti
or
inc
aam
and
lock
cmp
pop
outsl
xchg
mov
adc
icebp
out
inc
mov
iret
jmp
lock
icebp
jp
in
aad
repnz
xor
cmp
pop
mov
inc
jae
add
jmp
and
movsl
or
add
pop
push
imul
xchg
cwtl
jo
cmp
or
lcall
fmull
pop
js
out
fwait
xor
cwtl
test
push
pop
popl
test
jae
pop
push
shll
lret
js
jp
pop
jge
xchg
lret
test
stos
jbe
push
mov
push
xchg
movb
push
lea
loope
xchg
sub
fiaddl
jl
ljmp
cmp
lds
sbb
jb
iret
and
add
js
mov
sbb
mov
dec
pop
mov
imul
xchg
pop
pop
mov
notb
mov
out
sarl
or
call
lcall
adc
shlb
pop
cmpsl
ffreep
pop
cmp
xchg
stos
cmp
mov
adc
cmp
sub
inc
fistpl
push
stos
xchg
push
cmc
jp
inc
and
sub
push
add
aam
in
inc
mov
lahf
stc
popf
sbb
add
out
dec
sbb
mov
or
mov
push
fstpt
adc
mov
ret
xchg
mov
daa
or
xchg
fcmovnu
adc
bound
and
xchg
ret
pop
popa
outsb
insb
notb
adc
pop
adc
add
jb
add
mov
popa
pop
fisubrs
mov
repnz
push
mov
lcall
sub
push
jmp
cwtl
fcomps
adc
push
cld
adc
cld
jle
or
ja
ja
adc
sbb
xchg
jle
fstps
sbb
pop
mov
aaa
xchg
xchg
push
popf
push
mov
dec
iret
xorl
xor
sbb
jecxz
jae
jle
mov
fists
push
or
cwtl
push
lret
divl
and
pop
dec
or
push
lcall
mov
cwtl
inc
jnp
mov
orps
js
and
std
or
jle
jbe
mov
adc
pop
push
push
sub
bound
pop
lahf
mov
push
add
adc
hlt
cmpb
pop
test
and
pop
test
gs
xchg
repz
mov
pushf
jmp
mov
dec
jmp
xor
fistps
imul
ret
shlb
add
mov
out
movsb
sub
scas
sti
adc
mov
int3
jge
roll
adcl
add
rolb
mov
mov
adc
cmc
addr16
sub
inc
sbb
pop
dec
jno
stc
xor
outsb
imul
mov
cltd
pop
icebp
loop
push
sub
mov
je
hlt
push
push
out
mov
icebp
push
cld
lods
stos
movsl
lds
leave
orb
mov
and
les
xor
es
repz
or
leave
mov
adc
jo
jns
jl
stos
xchg
shrb
psrlq
mov
jbe
or
out
mov
aam
imul
sbb
push
dec
sbb
or
sub
addb
xor
xor
pop
pusha
fsubrp
sbb
sbb
pop
aam
or
jp
jno
iret
push
cs
push
jge
sbb
mov
mov
mov
dec
cltd
mov
rorb
push
jbe
pop
test
test
loope
outsb
stos
lock
sarb
jg
sbb
mov
and
jg
int
pop
jnp
into
mov
xchg
xchg
mov
mov
pop
jge
fistps
mov
jae
out
sbb
movsb
push
cmp
pop
jns
jge
lods
pop
into
mov
cmp
fs
jns
stos
sbb
mov
mov
into
xor
cltd
mov
inc
push
leave
jb
stos
xor
or
xlat
sbb
add
aas
adc
hlt
cmpsb
mov
xchg
enter
adc
stos
rcll
xchg
aas
xchg
lds
xchg
mov
sbbb
das
xchg
sbb
call
mov
push
mov
sbb
shlb
jb
add
aas
cmpsl
pop
or
leave
mov
flds
inc
adc
movsl
loopne
push
imul
pop
sti
andb
or
lea
mov
push
xchg
push
cmp
inc
je
lea
pop
or
test
dec
jge
sbb
mov
and
das
out
aad
mov
cmp
cmc
lods
push
jge
ret
xor
and
push
outsb
sbb
add
out
cmp
inc
mov
add
and
rorl
daa
fs
sub
push
push
stc
repnz
xchg
xchg
stos
push
and
xchg
repz
test
lea
and
mov
call
arpl
jno
sub
push
dec
inc
hlt
xor
pop
cld
mov
mov
or
xchg
mov
pop
jno
sub
mov
mov
in
inc
sub
pop
and
lods
stos
mov
mov
movsl
adc
mov
jl
dec
aas
xchg
lock
stc
lods
add
mov
movsb
fcmovne
push
xchg
mov
outsb
jecxz
out
imul
and
adc
addr16
push
jne
lock
ret
inc
outsl
clc
push
adc
mov
aad
lret
mov
daa
sbb
mov
adc
in
dec
daa
or
or
inc
stos
mov
sbb
lea
jns
lcall
pusha
fwait
cmp
push
mov
int3
xchg
ret
xchg
xchg
daa
enter
sti
aas
adc
scas
fnstenv
inc
pop
pop
ret
rolb
push
or
cmp
mov
inc
loope
iret
and
or
pop
ret
mul
mov
adc
cmc
ljmp
mov
xlat
or
cld
movsb
mov
pusha
cmp
xchg
insl
xor
outsl
fs
jno
pushf
fmul
or
jl
jno
mov
mov
push
shr
cli
clc
cmp
xlat
sbb
inc
dec
xor
xor
cwtl
adcl
out
xor
roll
fs
stos
pop
xor
scas
out
push
mov
lret
clc
shll
mov
push
jno
fisttps
icebp
icebp
xchg
jne
sarb
xchg
scas
dec
lock
je
loopne
icebp
int
pop
scas
in
cmp
sub
ds
mov
sub
mov
paddusw
pop
pop
jmp
push
loope
and
push
jp
or
xchg
shll
ljmp
mov
push
jnp
cs
xlat
repnz
jns
dec
dec
or
shrl
lahf
mov
and
int
or
dec
pop
andb
orb
mov
cld
push
pop
and
test
fnstsw
hlt
pop
int3
adc
cmp
jle
js
cmpsl
and
aaa
push
adc
jmp
mov
inc
push
lods
push
mov
call
jle
lods
jae
fwait
xchg
dec
cmp
es
xchg
inc
fstpt
xchg
dec
lret
std
rorb
push
jo
lock
imul
xor
cmp
sbb
aad
out
mov
jmp
test
call
cmp
cmp
in
sbb
notl
in
les
push
cli
xchg
sub
cs
mov
cmp
insl
incb
dec
incb
aaa
xchg
push
lock
cmpsb
jbe
mov
ret
xor
rcrb
sbb
ja
mov
lret
fcomps
jnp
jb
mov
out
faddl
mov
pushf
push
jge
mov
aam
sub
fnstcw
popf
popa
adc
rclb
xor
mov
pop
loopne
push
mov
test
jns
test
and
divb
loope
sub
in
out
les
add
lods
dec
imul
cmp
xchg
lea
adc
jb
daa
int3
addr16
test
out
ss
or
mov
mov
rcl
sbb
mov
cmp
rcrl
push
push
adc
adc
shl
and
cmc
lea
lods
mov
repz
mov
dec
xchg
mov
test
shlb
imul
repnz
lret
movsb
movsb
xchg
adc
mov
imul
or
jle
lock
pop
std
lret
in
adc
test
jmp
jbe
add
es
xor
scas
incl
or
movsb
hlt
jl
inc
lahf
pop
and
push
lret
cmp
rorl
adc
repz
outsb
jbe
jp
jo
dec
ds
cmp
mov
popa
adcb
jl
inc
aas
out
jno
nop
sbb
outsl
fldcw
stc
inc
xchg
sbb
dec
pushf
ret
inc
sahf
popa
rcrl
sbb
test
xor
or
sub
pop
jl
nop
cmp
and
adc
xlat
cmp
repnz
addr16
cmp
bound
das
js
loopne
test
scas
shll
imul
sub
push
std
dec
aam
fidivs
sarl
fidivrs
push
repz
jecxz
int
mov
lock
or
sub
sbb
mov
test
push
mov
pop
or
xchg
add
or
mov
jp
fs
sub
mov
xlat
lods
shrl
in
insb
jno
out
bound
mov
mov
sub
orl
inc
scas
es
cltd
dec
imul
mov
ja
leave
dec
loop
repnz
jns
inc
cmp
ljmp
stos
mov
dec
movsb
xchg
test
test
adc
push
xchg
mov
pop
outsb
or
inc
xchg
and
add
adc
push
pop
imul
jns
movl
iret
test
sub
add
hlt
mov
pop
dec
push
ds
insl
sbb
and
sarl
cmp
pop
inc
mov
add
mov
sarl
lock
sbb
sub
clc
mov
pop
int
movsl
xlat
fbstp
cltd
int
pop
shr
pop
decl
inc
addr16
add
push
scas
cmp
mov
ss
or
inc
rol
cmp
sbb
add
xchg
adcb
ret
inc
les
insb
into
in
out
mov
xor
mov
test
xchg
add
fsubs
lds
adc
pop
sbb
repnz
ljmp
sbb
iret
inc
push
lock
jmp
sub
cmpb
jmp
jge
fcmovne
clc
push
mov
dec
xor
xchg
mov
xlat
and
test
inc
pop
int
data16
rol
jnp
push
jmp
adc
lret
stc
movsb
ja
inc
fld
dec
or
jne
aad
xchg
cmp
repz
jno
mov
xlat
sub
fists
fwait
pop
dec
jbe
dec
mov
inc
repz
dec
mov
pop
sbb
mov
call
ret
hlt
mov
xchg
lds
jo
cmc
sub
nop
mov
in
idiv
pop
xor
push
dec
sub
subb
into
int3
mov
fbstp
mov
add
cwtl
cvtps2pd
lods
icebp
fadds
cmpsb
test
sub
mov
cli
imul
mov
shrl
repnz
insl
dec
mov
imul
int
sti
add
add
or
jp
addr16
stos
inc
cmpsb
popa
mov
ficoml
sbb
fdivrl
dec
jle
lock
repz
fisttps
mov
aam
push
popa
add
jo
mov
push
mov
nop
pop
flds
int
in
jnp
xchg
mov
push
add
in
pop
insl
addr16
add
rcrl
sbb
jl
fs
fsubr
insl
mov
sbb
lret
movsb
ja
dec
idivl
cs
fstps
or
out
lahf
mov
out
jecxz
je
mov
movsb
call
cmp
ret
cld
pop
insl
pop
int3
xchg
adcl
push
push
push
sub
sarl
mov
sbb
mov
or
pop
jp
js
mov
xchg
insb
sahf
adc
push
repz
fdivrl
inc
ret
stos
mov
mov
cli
bound
sub
dec
xchg
mov
repnz
add
inc
daa
insl
aaa
ret
dec
xor
mov
cltd
push
lods
xor
mov
loop
out
dec
sahf
inc
lea
ss
xchg
add
push
mov
push
mov
mov
xchg
sub
jbe
xor
jge
sbb
addb
repz
lret
cmpb
call
lret
sub
mov
add
sti
loopne
scas
mov
loope
test
pop
mov
dec
push
jmp
ficoml
push
inc
sbb
mov
daa
sahf
mov
das
es
into
xchg
addr16
mov
fdiv
xor
adc
mov
sbb
psubsb
ja
repnz
lea
push
adc
or
lahf
sbb
pop
pop
ret
test
pusha
mov
pop
cld
push
stos
push
repz
adc
xlat
xor
cmp
jmp
jmp
xor
test
or
call
sarl
jmp
popf
in
adc
xchg
or
popf
roll
lods
bound
dec
push
es
lea
sbb
push
iret
nop
test
adc
bound
cmp
popa
loopne
jb
fiaddl
leave
lret
mov
sbb
or
pop
inc
mov
cwtl
lcall
js
daa
jmp
loope
xlat
daa
lods
andl
scas
cmovae
mov
ja
addb
call
adc
add
xor
clc
mov
ret
inc
add
cmp
cmpsl
mov
mov
mov
mov
test
pushl
xchg
fs
pop
jo
les
aas
cld
cmpsb
cmp
shl
lret
stos
loope
insb
pop
ja
leave
dec
cs
test
les
xor
aam
outsl
in
mov
rcrl
in
movsb
repz
mov
or
sbb
mov
test
aas
dec
sub
mov
xor
push
jnp
int
push
popf
xchg
rorb
int3
leave
lcall
movsb
and
lahf
ret
and
pop
mov
mov
push
adc
adc
xchg
mov
les
adc
dec
out
and
and
xchg
leave
add
and
out
mov
xlat
mov
jle
aam
jae
cmc
inc
cmp
cwtl
jecxz
adc
cmpsl
cli
mov
ljmp
inc
sub
sbb
lods
push
aam
hlt
cmpsb
popa
sub
and
push
and
stc
loopne
xchg
push
adcl
sbb
lods
out
xchg
xchg
push
adc
out
xor
mov
mov
sbb
push
inc
or
loop
aad
xchg
cmp
lret
pop
ja
add
scas
adc
jae
xor
xor
push
das
fsts
mov
cmc
into
lahf
repz
add
fisubrs
dec
mov
mov
push
es
add
pop
stos
cmpsl
loopne
js
sti
sarl
pop
xchg
cmp
orl
out
cmpsb
jmp
subl
stc
jecxz
mov
xor
and
sub
adcb
lea
mov
xchg
aas
inc
popa
ret
inc
outsb
cmp
cmp
std
call
adc
movsb
rcll
in
popf
push
xor
mov
adc
stos
xchg
js
pop
mov
adc
lock
sub
mov
jne
ror
or
pushw
xor
outsl
mov
mov
xor
in
adc
int
cli
dec
sbb
cmpsl
orl
pop
pop
and
pop
xlat
movsb
das
add
iret
les
or
pushf
push
add
cltd
rclb
lret
enter
nop
or
inc
imul
fdivr
js
cmp
repz
mov
and
aas
sbb
pop
sub
mov
inc
jecxz
dec
lret
jno
fcompl
lcall
cld
push
push
testb
mov
mov
adc
out
in
cwtl
pop
out
sahf
xor
xchg
mov
lret
push
or
add
adc
or
popa
push
fstl
xchg
mov
cwtl
xor
add
mov
mov
lods
dec
je
add
mov
cmp
sub
cmp
fadd
shll
mov
pop
mov
push
cltd
in
xchg
iret
adc
out
mov
inc
les
shlb
xchg
xor
jo
mov
push
xlat
int3
js
ljmp
sti
pop
xchg
adc
fs
xchg
insl
pop
pop
mov
xchg
int3
push
sub
enter
gs
sub
adc
inc
mov
ja
mov
rorb
mov
test
outsl
mov
xchg
xor
adc
rcll
pop
push
sub
and
repz
dec
pop
pusha
mov
cmp
out
add
push
mov
push
dec
adc
cmc
pop
mov
jge
iret
pushf
add
addb
mov
sahf
sbb
xor
in
sub
outsb
sub
mov
dec
mov
dec
and
repnz
test
mov
andb
icebp
xchg
fdivrs
pop
lcall
jbe
stc
xchg
mov
std
jo
insl
sbb
int
scas
call
push
cs
xchg
ret
iret
enter
rcrb
rcl
add
dec
jmp
lahf
ret
iret
call
jmp
test
insb
inc
cs
and
incb
stc
mov
push
add
ljmp
idivb
jae
xor
xchg
mov
push
roll
push
pop
xor
mov
push
mov
mov
out
mov
gs
outsl
push
push
andl
sub
mov
xor
xchg
cld
pop
popa
subl
ljmp
xchg
test
jnp
pushf
int3
add
sbb
mov
out
mov
inc
popf
lret
insb
andl
jl
aas
adc
icebp
shll
ficoml
mov
cltd
aad
push
add
insl
btc
push
jns
sub
push
pop
pop
mov
push
adc
mov
fcomps
jmp
mov
cli
inc
and
imul
push
xchg
push
imul
jbe
push
sub
aaa
fcomip
fcmovne
icebp
sbb
mov
xchg
lret
cmp
nop
nop
xchg
xchg
imul
adc
ss
mov
xchg
jp
stos
les
sub
hlt
xor
aad
dec
std
pop
jg
imul
add
pop
adc
scas
sahf
push
cs
pop
test
xlat
mov
cmpsl
stc
cmp
incb
fs
pop
add
loop
popf
ficoml
fsubs
ljmp
pop
dec
mov
jge
into
sti
sti
inc
jno
cmp
in
dec
pop
jae
dec
pop
cmpsb
shll
lods
aad
ret
mov
add
mov
xor
cmp
mov
mov
mov
nop
and
std
dec
call
das
xchg
mov
xchg
jns
mov
andb
or
sbb
or
push
xchg
mov
push
push
push
sub
jl
hlt
push
out
add
lahf
adc
sub
adc
rcrb
fidivl
dec
or
cmp
pop
pusha
andl
push
pop
je
mov
fisttpl
adc
fsubrs
mov
fs
mov
leave
pusha
xchg
jne
sub
push
inc
adc
in
sbb
push
jg
int
hlt
mov
pop
ds
or
jge
pxor
shrl
cmp
pop
pop
enter
and
cli
or
jnp
fists
mov
jns
sbb
ret
out
cltd
dec
outsl
cmpsb
push
jg
cmp
pop
push
je
and
and
loope
mov
scas
or
inc
cmc
mov
pop
testl
mov
cmp
subl
and
es
daa
cmp
mov
push
pop
push
lods
jmp
mov
push
or
gs
pop
stos
jbe
sti
fdivp
imul
fdivs
fdivrs
xor
int
jl,pn
aam
adc
dec
xchg
lea
add
enter
or
pop
jno
inc
xor
or
jle
adc
icebp
xchg
leave
addr16
test
lods
nop
test
orl
pop
fldl
outsl
mov
jno
push
mov
mov
mov
push
jle
sbbb
add
mov
nop
mov
es
nop
out
sbbl
push
lcall
mov
popl
hlt
mov
push
lret
test
jle
adc
int3
outsl
mov
mov
and
cmp
jb
sbb
xchg
aam
inc
bswap
cmc
or
les
cmc
scas
lock
lea
pop
dec
cld
sub
adc
scas
test
cmp
push
or
add
inc
pop
sub
les
cmc
sub
fildl
clc
pop
jl
cli
into
adc
sub
rorl
int3
mov
insb
fstps
mov
add
jecxz
sub
mov
push
adc
mov
aam
sbb
dec
pop
fdivrl
add
imul
pop
mov
aam
xchg
lods
pop
std
xor
add
shlb
mov
pop
aas
shrb
out
xor
sub
ljmp
cld
repnz
call
add
dec
hlt
mov
mov
mov
sub
xchg
insl
fistpll
add
fadds
add
pop
jae
or
call
fdivp
jae
test
xchg
aaa
out
mov
jo
hlt
lcall
ret
sbb
xchg
hlt
mov
xchg
pop
jle
xchg
dec
mov
dec
xor
ret
movsl
mov
sbb
cmp
loopne
pop
cmc
push
aaa
and
and
jnp
xchg
clc
fstsw
shrl
test
push
movl
popa
popf
popa
jno
paddsw
pop
mov
imull
pop
mov
stos
test
sub
pushf
jmp
or
jmp
leave
addr16
mov
inc
nop
loopne
arpl
repnz
mov
loop
xor
xchg
mov
movsb
xor
in
push
mov
jl
hlt
adc
mov
adc
push
mov
in
and
add
cli
cmp
iret
in
sti
js
ficomps
repz
sub
adc
idiv
push
movsl
jge
dec
ficoml
mov
aas
pop
test
push
pushf
sbb
fwait
adc
sbb
cwtl
mov
jge
dec
in
test
stos
stos
sub
in
mov
cmp
pop
mov
insl
mov
sbb
outsl
inc
lock
popf
ds
push
xlat
insb
sbb
lret
adc
jp
push
jg
pushl
mov
xor
cli
push
scas
mov
xchg
bound
inc
sub
pop
nop
insb
fnsave
insb
pop
mov
cs
pop
mov
jle
pushf
pop
pop
and
sub
sub
mov
ret
pop
bound
inc
nop
push
xor
add
imul
insb
cld
mov
add
jbe
ds
push
sub
ret
in
call
out
xchg
dec
imul
adc
cmp
pop
add
add
insb
inc
add
push
xor
subl
add
adc
inc
add
add
add
and
jae
add
add
inc
add
add
sub
push
in
jb
jns
and
adc
mov
pop
sub
scas
mov
scas
jbe
int
inc
fldt
test
jmp
xchg
stc
inc
lret
daa
movsb
sbb
xchg
jmp
cmp
iretw
outsl
pop
mov
sahf
cmc
std
pushf
pop
out
sbb
sub
jle
in
add
cltd
push
push
fldl
or
pop
dec
rcrl
sbb
inc
aam
inc
outsb
repz
lret
fwait
inc
lcall
sub
fisttpl
sbb
mov
push
push
and
hlt
sbb
pop
pop
pushf
mov
push
orl
daa
call
pop
lcall
and
push
shrb
mov
pop
sbb
scas
fs
js
cwtl
jmp
mov
loop
jmp
xlat
int
addr16
and
mov
jb
jge
or
mov
dec
pushf
adc
insb
or
inc
iret
cli
fadds
ret
ljmp
lret
popf
pop
stos
outsl
mov
adc
mov
mov
stos
in
out
negl
or
test
out
or
lahf
ljmp
insl
loop
adc
in
cwtl
shl
imull
aaa
fmuls
or
ss
and
jp
dec
ret
push
push
test
popf
pop
sbb
std
ret
mov
push
sbbb
mov
imul
iret
inc
fimuls
shll
xchg
xchg
sbb
sti
rclb
inc
sbb
fs
loopne
rorl
outsb
leave
gs
adc
inc
arpl
roll
push
mov
cli
aaa
mov
cltd
fwait
cli
loope
in
dec
sub
mov
in
jecxz
or
popf
jecxz
fists
mov
mov
dec
cs
xchg
adc
rcrl
xor
movsl
imul
shll
inc
out
incl
mov
ljmp
mov
push
dec
lods
sub
out
and
pop
xchg
clc
add
mov
divb
aaa
mov
loope
clc
call
dec
push
xor
imul
addr16
insl
cld
xor
jb
jae
stos
jp
dec
mov
pop
int
pop
test
push
gs
jmp
imul
jnp
pop
popf
out
xchg
lret
call
add
testl
xor
sub
sub
jp
aad
and
test
push
scas
gs
mov
addr16
ret
nop
mov
sub
mulb
movsb
pop
dec
movsl
fstps
jbe
outsb
das
stos
mov
das
lret
mov
ja
add
fmull
fcmovnb
mov
les
loope
enter
mov
pop
rol
dec
mov
fists
mov
xchg
add
sbb
test
imul
or
add
sbb
shl
insb
shll
and
movsb
ds
mov
mov
mov
sbb
out
mov
js
ds
rcrb
sbb
fs
pop
fisttpl
xor
inc
jns
fstl
sub
push
pop
pop
fistps
cmpsb
test
xchg
push
add
sbbb
push
cld
sbb
std
jl
rclb
mov
inc
and
cmovbe
enter
jno
outsl
xor
dec
lret
sbb
add
pop
out
add
mov
xchg
les
dec
in
lds
cmp
loopne
jg
int
ja
pop
fsub
fs
iret
stos
aad
sub
hlt
lea
push
mov
fstl
add
pop
test
mov
idivb
shl
aad
inc
push
mov
mov
jmp
jnp
adc
enter
stos
jl
faddl
outsb
into
jne
adcb
add
add
sbb
leave
fs
push
fistl
rcl
dec
mov
pop
aaa
push
cmp
jne
lcall
jl
xor
sbb
out
sub
cmp
add
js
dec
iret
rol
jp
je
jae
lcall
rcll
and
or
jl
and
stos
incb
or
bound
pop
cld
xchg
adc
jp
add
mov
adc
jb
in
testb
mov
or
sbb
loope
pop
mov
pop
inc
mov
scas
sub
mov
aad
lret
das
adc
insb
int
aas
mov
sahf
sbb
push
jae
outsl
mov
xlat
and
ja
movsl
aad
push
mov
jl
andb
mov
jae
inc
fldl
lods
js
jge
sbb
xchg
push
clc
sbb
adc
popa
fisttpll
repnz
shr
lahf
ret
insl
pop
mov
mov
xchg
ja
es
sbb
pop
cmp
sub
mov
repnz
scas
pop
jbe
adc
push
test
inc
call
sbb
out
inc
clc
pusha
push
cmpsb
mov
sub
fisubrl
jno
xchg
nop
sbb
insb
sbb
shl
cli
js
mov
scas
pop
pop
lea
jb
cltd
cld
sub
push
scas
mov
stos
push
push
cmp
stos
mov
fsubs
nop
pushf
mov
shll
sub
jge
xchg
jl
push
outsl
repz
add
xchg
std
cmp
hlt
xchg
ret
out
mov
inc
nop
into
lahf
cltd
mov
popw
add
call
fcmovnbe
movsl
pop
xchg
movsb
mov
sub
ret
adc
add
enter
xchg
cmp
mov
and
aaa
lock
pushf
cltd
jge,pt
pop
popa
out
add
sti
push
push
push
rclb
mov
xchg
fdecstp
push
pushf
mov
jmp
movb
stc
sub
mov
cmp
jnp
pop
data16
into
out
mov
bound
mov
scas
xor
mov
hlt
arpl
cmp
dec
lcall
inc
push
fnstenv
outsb
shlb
and
testb
xor
xor
mov
cmovno
xor
sti
in
cmc
adc
pop
lods
sbb
sbb
psubsb
loope
push
scas
jne
xchg
jp
inc
push
loope
enter
cmpsb
mov
cmpsl
incb
pop
adc
jae
ljmp
aam
mov
sahf
int
inc
dec
lret
xor
out
pop
adc
mov
notl
imul
dec
clc
test
outsb
mov
mov
mov
jg
nop
lea
xchg
xor
cmpsl
push
movsb
pusha
mov
mov
insl
inc
jbe
cmp
pop
dec
or
js
cmpsb
or
push
xchg
mov
fiadds
cmc
test
std
xchg
mov
cmpb
movsl
fsubrp
adc
adc
push
loopne
pop
js
orb
aam
and
imul
cmp
inc
testl
call
push
std
jmp
loope
xchg
shl
iret
mov
mov
jle
outsl
push
xchg
mov
negl
je
and
test
lock
push
or
aaa
cmpsl
xor
pop
jge
aad
or
mov
loop
jmp
ljmp
out
rorb
push
das
sarb
pop
mov
push
xchg
imul
xchg
rorl
jmp
fwait
daa
pop
dec
inc
clc
push
xor
mov
xor
pusha
sub
jl
je
jg
movsb
xor
xor
hlt
out
jle
je
loopne
dec
mov
jnp
les
shll
inc
sub
add
dec
daa
mov
and
inc
lea
out
push
sahf
loop
cli
add
jno
jae
fildl
mov
dec
inc
mov
mov
jecxz
sbb
xor
and
lahf
pop
fistpl
in
les
and
bound
inc
enter
cld
or
sub
push
mov
movsb
dec
push
insl
fcompl
lods
jmp
hlt
mov
nop
mov
pop
add
rorb
aaa
addl
cmp
insl
cmp
dec
js
add
fcoml
cmp
inc
adc
or
clc
lods
movsl
jno
mov
and
ss
stos
shll
lods
mov
dec
movsb
imul
int3
or
subb
sub
hlt
add
stos
and
loopne
aas
cmpxchg
negb
fiaddl
adc
orb
idivl
adc
inc
xrelease
xorps
mov
loope
add
or
cld
out
lea
mov
lret
pusha
pop
dec
movl
scas
pop
push
jno
int3
pop
lret
shlb
mov
fnstenv
clc
sbb
sub
incl
subb
lds
push
xor
mov
sahf
outsb
jle
cmp
xchg
ficomps
lea
aad
push
pop
xchg
or
xchg
pop
mov
lea
mov
pushf
gs
xlat
inc
outsl
scas
push
mov
lcall
les
mov
aam
ja
jo
shl
cmpsl
pop
fs
dec
repz
pop
cmp
je
xor
jmp
icebp
push
es
iret
aas
movsb
lds
xchg
mov
inc
xor
repz
icebp
mov
outsl
dec
sbb
jle
xchg
pop
popf
aas
inc
xor
sbb
add
add
pop
xchg
jecxz
mov
repz
aad
test
jle
stos
sahf
ss
dec
les
fcoms
repnz
in
adc
xchg
lcall
lds
int3
mov
xchg
add
jp
rorb
pushf
cmc
es
dec
push
cmp
mov
lahf
loope
lret
and
pop
cmc
mov
dec
sub
mov
lods
cld
lods
pop
fisubl
and
jns
jle
xchg
push
notl
repz
paddq
mov
mov
dec
ljmp
mov
xchg
adc
out
rol
pop
fbld
mov
inc
ret
mov
inc
mov
xor
xchg
pushf
inc
jo
pop
dec
mov
xchg
cltd
cwtl
xor
inc
jmp
jg
fcmovnb
xchg
popa
dec
ja
sbb
pusha
xor
aas
mov
pusha
int3
xchg
popa
gs
jnp
nop
push
ljmp
push
jle
enter
mov
add
sub
out
dec
test
cmc
sarb
stc
push
add
mov
out
sub
je,pt
jg
fs
or
rolb
mov
xchg
enter
lcall
das
sub
xor
xchg
inc
xlat
mov
jbe
mov
xor
aaa
rorl
movsl
cmc
sub
mov
loopne
inc
pusha
pop
lods
movsl
add
dec
xchg
mov
dec
stos
cmp
mov
rcll
cltd
test
iret
mov
arpl
mov
and
sub
push
or
sub
mov
adc
add
pusha
mov
shl
clc
test
and
pop
push
and
jno
or
aam
bound
xlat
xchg
scas
pusha
cmp
cli
xor
or
lcall
cli
shrb
push
sub
fidivrl
fldcw
pusha
rcl
dec
cltd
fistl
pop
cmpsb
adc
inc
add
add
inc
test
icebp
movsb
insb
pop
mov
shrl
mov
inc
mov
jge
pop
popf
cmp
out
pop
insb
scas
and
add
stos
sbb
jnp
in
popa
inc
sub
push
out
ret
mov
sub
loop
cmpsb
imul
mov
jnp
jmp
and
xor
loope
sub
fwait
adc
and
imul
lret
inc
ss
fsubr
add
popf
loopne
ret
mov
xor
arpl
mov
sub
dec
pop
xchg
test
fisttpl
and
fldenv
fldl
sti
or
gs
loopne
pop
out
mov
add
clc
mov
adc
mov
je
addr16
adc
ret
sub
es
lods
jbe
add
mov
int
popf
bound
fldcw
jnp
imul
inc
cmc
inc
xor
pop
lahf
xlat
ret
jp
push
ljmp
mov
sbb
cmp
popa
int3
lods
idivl
xchg
ss
sub
sarl
inc
rolb
pop
sbb
out
sbbb
stos
pop
mov
adc
xchg
cmp
daa
ss
mov
aaa
add
jg
and
sti
inc
adc
pusha
imul
stc
xor
test
jle
sbb
cltd
insb
js
or
jo
xor
and
sub
lahf
xlat
adc
add
xchg
jp
xchg
mov
aam
mov
mov
sbb
add
aam
cmp
push
rcrl
dec
in
clc
inc
out
sub
pop
je
inc
sbb
es
in
movsb
movups
paddw
hlt
into
lods
int3
in
add
push
inc
adc
pusha
adc
scas
repnz
or
mov
ret
stos
inc
rcll
mov
cmp
loope
xchg
stos
lds
dec
in
mov
push
mov
sub
fstps
les
mov
cwtl
test
addl
jo
insb
neg
cmp
into
enter
mov
xor
dec
mov
loop
jg
inc
adc
lods
mov
fwait
dec
push
stos
and
dec
jp
pop
cld
cmp
imul
jb
ret
call
push
push
xchg
neg
xchg
and
pop
inc
inc
push
sbb
push
pop
out
lcall
aaa
jnp
mov
inc
fwait
pop
lahf
lods
cmp
sub
mov
fsubr
cmpsb
mov
mov
cmpsb
jecxz
jbe
push
stos
jns
xchg
aas
sub
sub
xchg
lcall
lea
jecxz
dec
add
cmp
hlt
dec
pop
mov
bound
jbe
dec
das
js
out
lret
cs
ret
es
inc
sub
ret
mov
lock
not
scas
jno
sub
sahf
lret
insb
bound
iret
sti
lock
test
lods
call
pop
and
aas
fdivl
lret
add
sbb
mov
addb
in
mov
adc
clc
lods
jb
movsb
setnp
mov
push
ds
sahf
jne
mov
or
and
pop
imul
rolb
data16
shlb
movsl
out
je
pop
popf
jmp
dec
in
pop
nop
sub
clc
mov
lock
cmp
jecxz
fstpt
mov
xor
mov
jae
add
addr16
arpl
sbb
imull
pop
fs
push
ds
ret
dec
adc
mov
and
adc
imul
arpl
inc
sub
jg
testl
adcb
and
and
jg
mov
and
push
outsb
mov
xchg
pop
dec
sbb
cmp
lcall
outsl
fisubrl
insl
mov
test
mov
test
arpl
pop
dec
mov
icebp
add
daa
mov
mov
mov
mov
sbb
call
fbld
aas
lea
iret
adc
test
frstor
sarl
pop
xchg
mov
sahf
mov
test
sbb
and
bound
pop
popf
in
or
fmul
mov
cmp
jns
adc
push
insb
fdivr
hlt
ja
icebp
clc
jno
aam
lock
shl
mov
adc
dec
sarb
ret
jae
and
mov
insb
popf
loop
sub
mov
aad
push
loope
push
pushl
xchg
pop
dec
xor
xchg
lahf
xchg
or
dec
and
hlt
jle
jnp
fld
and
stos
mov
mov
add
shrl
xchg
inc
xor
outsb
mov
sub
cmp
orl
ja
in
mov
xor
gs
jno
xlat
xor
or
mov
mov
data16
or
mov
add
jno
xchg
jge
lods
in
hlt
pop
push
mov
addr16
lret
and
test
out
xchg
and
dec
and
mov
xor
mov
pop
jo
xchg
add
lods
subb
out
adc
xor
jb
inc
fbstp
cli
and
cmp
or
cmp
xchg
jo
pop
movsb
cld
andb
xlat
jb
clc
xchg
push
icebp
or
daa
sahf
inc
push
mov
js
scas
repz
add
push
adc
sub
arpl
inc
jmp
add
inc
int3
push
rolb
mov
xchg
ds
int3
xor
cmp
stc
xchg
lcall
pop
or
sub
dec
or
pop
push
xchg
jl
stos
push
fstp
in
repz
outsb
popf
pop
mov
xor
adc
sbbb
xlat
in
cmp
pop
and
mov
popf
or
adc
jnp
adc
movsl
jno
pop
cmpl
xor
leave
dec
xchg
pop
mov
push
jne
ja
add
xchg
mov
jmp
pushf
dec
pop
and
gs
daa
adc
xor
mov
nop
mov
push
cmc
mov
jnp
cmpsl
sbb
push
cli
repz
mov
push
and
inc
ss
repz
xlat
vmovaps
inc
outsl
add
dec
jecxz
xchg
jge
iret
cli
fldenv
clc
and
sbb
cmpsb
lods
inc
outsb
jb
or
decl
mov
or
call
mov
mov
push
push
xor
rcr
cwtl
int
inc
iret
cmc
fsubrp
les
repnz
jo
lcall
in
sub
inc
pushf
cwtl
add
stos
jge
push
jg
mov
cmp
inc
jbe
and
mov
pop
mov
mov
inc
sbb
and
mov
adcb
loopne
stos
into
xchg
jne
sub
sbb
push
inc
fisttps
add
clc
xchg
pop
inc
cmp
mov
pop
lcall
nop
inc
hlt
mov
call
mov
ret
ljmp
outsl
les
push
push
mov
ret
sbb
ret
sub
push
cmpsl
push
cmp
fwait
sbb
adc
push
ljmp
xor
movsl
addb
xchg
push
xchg
mov
adc
and
dec
push
jae
cld
jge
jnp
out
adc
push
mov
xchg
adc
ljmp
mov
sbb
or
add
es
movsb
xchg
stc
aas
leave
aam
xchg
fwait
push
sbb
jno
in
jl
jnp
stc
popf
loope
fs
pop
out
ret
pop
mov
xchg
dec
leave
in
iret
sub
mov
sub
icebp
sbb
loop
ja
les
test
push
dec
rorl
jle
inc
outsb
mov
rcl
mov
clc
in
adc
insl
push
repz
mov
xchg
mov
mov
clc
add
repz
insb
and
scas
inc
push
lret
mov
pop
and
mov
daa
ljmp
pop
sub
mov
cmp
pop
fidivl
add
test
cld
jmp
or
out
ss
ds
xchg
jb
data16
shrl
add
cwtl
mov
out
and
loop
inc
lret
mov
xchg
insl
cmc
cmp
jb
jbe
mov
fcomps
pop
jg
es
adc
pushf
scas
arpl
sub
and
addr16
int3
dec
jne
mov
mov
adc
jb
ret
xor
ds
enter
cmp
cmp
adc
lret
adc
dec
cmp
pop
sahf
les
ss
out
xor
xor
rcr
xchg
dec
add
arpl
lods
pop
sbb
mov
mov
inc
aam
les
adc
movsb
aas
cmpsb
ret
pusha
addr16
aad
daa
js
fsub
xchg
pushf
roll
test
aam
mov
xorb
rorb
inc
push
sub
cmp
stc
data16
insl
sub
addr16
pop
xchg
lret
sbb
push
or
fs
pop
adc
lcall
sbb
in
lcall
lock
movsl
nop
dec
pop
cmpsb
fs
stos
outsl
pop
movsb
cli
cmpsb
cmp
pop
cmp
push
ror
adc
in
pop
sti
inc
mov
cmpsl
inc
add
mov
in
lea
adc
dec
or
sub
imul
in
push
aam
sbb
jne
aam
pop
fimull
fsubrp
nop
xor
jle
icebp
mov
ror
fadd
out
popf
fmull
jbe
mov
push
adc
sub
ret
outsl
std
mov
xchg
inc
out
aad
mov
and
push
adc
cmpsl
or
in
lahf
stc
scas
enter
popf
pop
jb
cmp
ret
sarl
imul
ljmp
xchg
mul
cli
pop
adcb
cmp
jno
sbb
xchg
dec
inc
sub
lods
dec
fneni(8087
cmc
cmpsb
mov
jge
sub
shr
and
les
mov
cs
sbb
add
or
dec
jecxz,pn
xor
sub
inc
and
fcmovb
xchg
adc
push
mov
into
xchg
stos
scas
sub
stos
movsb
mov
idivl
js
mov
mov
push
add
inc
mov
push
pop
in
jge
repz
loope
push
loope
data16
push
xor
jecxz
aad
pop
stc
jecxz
push
pusha
in
int
adc
sbb
push
sub
les
stos
lret
test
adc
push
cld
xchg
or
in
fmulp
into
cmp
pcmpeqw
loopne
lcall
lods
scas
mov
lret
scas
rcr
adc
xchg
movsl
inc
in
in
cmp
mov
or
leave
test
jmp
stos
xchg
sbb
es
or
cmc
test
adc
les
mov
stos
and
popa
jnp
mov
sbbl
outsl
popf
jo
sub
push
sub
adc
sahf
movsl
xor
mov
call
out
lcall
and
scas
int
xor
cli
jge
and
cli
sbb
adc
xchg
sbbb
jne
les
mov
push
xor
insl
pop
dec
cltd
shlb
pop
jno
stos
sub
pop
sub
cmpsb
mov
add
scas
dec
jae
aam
lods
lock
xor
pop
gs
data16
or
cmc
xor
cld
inc
pop
mov
xchg
inc
xlat
mov
mov
mov
ljmp
notl
pop
adc
inc
mov
push
push
xor
xchg
mov
ret
fldenv
pusha
lea
syscall
stos
fisttps
jne
mov
imull
js
dec
stc
mov
xchg
inc
mov
test
icebp
mov
je
test
adc
rcrb
jno
pop
jg
int3
cmp
fldl
add
gs
sarb
dec
mov
cltd
sbb
mov
fcomps
xchg
adc
in
loopne
test
push
addr16
cmc
inc
sbb
cmp
mov
sahf
insb
inc
push
inc
xchg
ja
adc
push
xlat
or
jl
inc
cmp
or
popa
stc
imull
xchg
rorb
adc
fimull
mov
push
into
xchg
fidivrs
js
and
cs
add
arpl
push
jmp
jp
test
mov
lcall
stc
imul
add
or
int3
inc
add
pop
dec
popa
mov
or
xchg
sbb
in
push
jmp
sbbb
push
cmpsb
ja
pushf
pop
pop
fistps
mov
scas
mov
mov
test
stc
xor
cltd
and
mov
repnz
mov
pusha
gs
ds
mov
push
cmp
mov
arpl
aas
scas
je
lret
and
adc
cmpps
jnp
jle
rorb
sub
fcmovb
loope
mov
out
je
adcb
push
sbb
pusha
clc
loop
fwait
sbb
add
and
or
fdivrl
xchg
scas
jle
dec
sahf
push
outsb
das
push
jg
les
je
and
lea
xor
sbb
adc
push
jge
push
std
adc
mov
in
mov
subl
xlat
cmp
cmp
mov
lods
in
cltd
push
icebp
fninit
hlt
push
fcmovbe
sti
mov
dec
cmc
jno
repz
cmp
add
imul
cmp
loop
adc
repnz
or
test
aaa
pop
mov
xchg
add
xchg
dec
call
iret
mov
pop
or
pusha
xlat
add
adc
jmp
into
movsl
cs
das
add
xlat
xchg
data16
dec
and
fbld
incb
in
xchg
cmp
sub
aaa
popf
in
pusha
or
adc
mov
fidivrs
test
sbb
lret
out
cmp
outsb
and
mov
inc
pop
xchg
fmull
notb
mov
sub
lock
aaa
scas
in
lds
cmp
nop
xchg
std
imul
mov
stos
mov
je
sbb
inc
and
dec
mov
movsb
stos
fiadds
loopne
in
mov
and
or
cli
stos
xchg
push
inc
ret
add
sbb
and
lock
or
mov
cltd
pop
mov
jecxz
fsubrs
xorl
sub
nop
push
inc
pop
std
jmp
and
adc
or
mov
cwtl
js
pmaxub
adc
dec
test
sub
mov
mov
ss
je
cmp
scas
mov
mov
or
push
js
in
insl
inc
popf
pushf
add
lds
push
and
lods
mov
cld
sbb
stc
xchg
sbb
in
fstl
jge
or
subl
mov
aas
mov
int
sub
jge
pop
pop
lods
or
pop
push
fcmovbe
leave
insb
mov
sub
inc
ds
cmp
mov
pop
arpl
mov
cmp
in
jmp
mov
jnp
out
je
mov
mov
sub
jmp
enter
fisttpl
dec
mov
add
adc
insb
pop
cmc
repz
jnp
out
test
clc
jge
push
jge
subl
movsl
cmp
daa
stc
out
inc
jle
xchg
loope
xchg
aas
fiaddl
mov
xchg
sbb
iret
add
sbb
mov
mov
xchg
inc
xchg
mov
stc
dec
insl
ficomps
mov
jns
push
cmpl
aaa
movsl
sbb
movsl
mov
xchg
addr16
pop
sub
leave
xchg
pop
imul
inc
push
imul
int
dec
mov
or
xlat
dec
xchg
pop
iret
push
sbb
jl
addr16
sub
pop
jl
das
arpl
jb
dec
dec
repz
dec
hlt
inc
fistpl
jge
cmpsb
popa
adc
popa
dec
fldcw
lods
lret
xor
lret
cmpsb
xchg
fisubrl
cmp
push
adc
negb
sub
movsb
es
outsl
push
sbb
jne
insl
or
imul
in
cltd
lods
out
insb
push
loopne
jns
out
dec
ret
pushf
rorb
xchg
sbb
hlt
inc
imul
add
jno
xchg
lcall
xchg
jns
es
xor
mov
pop
cmpsb
sbbb
inc
jl
jnp
xor
push
or
inc
lods
xor
stc
lods
lea
shll
or
add
pop
inc
ss
pop
mov
repz
pop
dec
xlat
hlt
fsubrl
and
jnp
dec
or
sub
inc
inc
push
fistpll
fwait
inc
jbe
enter
ds
addl
sbb
push
mov
add
loop
jmp
out
pop
mov
push
loope
arpl
xor
push
dec
or
pop
push
xchg
push
mov
jp
int3
addr16
aas
mov
jb
dec
stos
xchg
push
sbb
mov
test
rol
lcall
movsb
xor
je
mov
ret
popf
cmp
aad
mov
loop
push
nop
jmp
push
or
pop
inc
call
sub
int3
les
insl
bound
xor
arpl
or
xchg
xchg
adc
mov
add
push
mov
push
inc
repnz
inc
je
ret
lock
lea
dec
lahf
inc
inc
mov
xor
dec
xsha1
cmpsb
dec
test
aam
inc
dec
sbb
mov
jnp
cmpsb
cwtl
es
push
fmulp
repz
xchg
push
sub
dec
adc
ret
xchg
cld
and
sub
and
ret
or
inc
dec
fwait
sub
adc
adc
fdivs
mov
loopne
in
inc
mov
and
xchg
inc
and
out
jecxz
xor
xor
xorb
sar
pop
cmp
shrb
and
sbbl
fidivrl
sub
mov
push
fbstp
lods
xchg
xor
cmp
mov
sub
cmpsb
out
mov
bound
int3
adc
mull
adc
pop
fs
fsubs
int3
cmpsl
xor
dec
cmc
out
sahf
or
jne
stos
pop
lods
inc
pop
pop
fsts
lock
clc
push
cs
mov
mov
repnz
cmp
data16
adc
pop
sub
bound
ljmp
aaa
xchg
dec
jecxz,pn
fucomi
shrl
mov
std
aaa
repz
cli
mov
call
mov
lahf
in
and
sahf
inc
pop
pop
pusha
mov
pop
inc
enter
rcr
andl
mov
lea
mov
test
jae
stos
pop
jmp
mov
repz
out
icebp
sti
ljmp
xchg
and
or
xchg
add
cmpsl
dec
in
jge
jno
addr16
inc
xchg
bound
adc
mov
xchg
pop
sub
mov
cmpsl
inc
add
inc
repz
sbb
pop
push
sub
dec
or
shl
pop
insb
clc
push
fnstcw
cli
outsb
loope
mov
xor
xchg
fcompl
aas
adcb
mov
jbe
or
popa
lock
daa
add
jb
loope
mov
loope
mov
sbb
adc
xchg
xchg
mov
or
iret
dec
jae
std
clc
rcrl
adc
jo
add
adc
sbb
aad
fisubl
insb
dec
mov
pop
out
loope
dec
cmp
cmp
mov
jno
add
mov
xlat
fldcw
je
jmp
mov
mov
and
cmp
sbb
in
sub
fwait
ret
or
inc
cmc
sahf
dec
push
xor
sbb
lods
pop
pop
mov
imul
shll
xor
xchg
xchg
divl
fistpll
sbbl
out
cs
add
shlb
sub
pop
dec
mov
mov
dec
cmp
cmc
pop
gs
xorb
jnp
iret
mov
lahf
add
xchg
add
push
pusha
jge
mov
and
push
cwtl
sbb
xchg
push
xor
test
sub
adc
adc
data16
test
rcll
mov
insb
mov
iret
cmp
push
popf
mov
cmpb
movsb
xorl
das
out
and
inc
ljmp
mov
ss
xchg
jb
adc
or
iret
lea
ret
gs
adc
or
jp
arpl
and
inc
out
cmp
daa
and
data16
popf
sub
enter
inc
xchg
mov
in
add
and
adcb
push
dec
jb
jbe
mov
sbb
sub
adc
aas
and
popf
jns
nop
imul
insl
idiv
pop
fldl
mov
pop
adc
sbb
xchg
fwait
adc
cmpsl
xchg
jecxz
pusha
enter
push
sbb
loopne
jecxz
dec
dec
push
dec
imul
hlt
push
lret
aam
mov
push
or
jle
pop
outsl
mov
xchg
fistl
adc
add
fwait
add
mov
jge
pop
xchg
sahf
or
dec
mov
call
push
lea
mov
scas
sub
stos
out
movsl
bound
inc
mov
jle
loope
movsl
adc
or
sbb
outsb
add
enter
sub
xorb
loopne
dec
mov
hlt
sbb
leave
or
add
xchg
dec
cs
jo
scas
xchg
push
cmpsl
daa
cmp
nop
fisttpl
mov
cmp
sbb
mov
icebp
sbb
pop
push
pop
popa
cmp
cmp
stos
and
in
outsl
push
push
mov
xchg
fistl
test
xor
outsl
jo
cmc
mov
adc
xor
daa
sarl
mov
out
pop
clc
xor
push
adc
scas
lea
adc
test
mov
out
sub
ficoms
scas
flds
or
and
pop
enter
das
jbe
jbe
rorl
push
pop
xor
and
xor
lea
xchg
cmp
push
lods
xchg
nop
mov
xor
jb
aaa
lret
add
mov
adc
pop
fistl
mov
inc
xchg
cmp
xor
cs
adc
in
pop
std
stos
pop
inc
mov
fsqrt
repnz
adc
cs
ss
cmp
mov
jno
cwtl
dec
in
mov
jb
add
add
sbb
test
inc
outsb
outsb
xchg
adc
or
cmp
adc
test
cmp
jns
movsl
jl
cs
pop
lds
rolb
push
into
les
adc
cmp
inc
mov
xor
dec
popf
mov
fisttpll
mov
test
inc
subb
inc
or
or
or
mov
rcll
and
inc
repz
add
push
push
add
aaa
int
iret
and
xchg
sub
mov
and
xchg
out
push
mov
pop
dec
cld
and
and
mov
xor
lcall
div
jp
adc
mov
aam
int3
das
test
icebp
pop
jo
jnp
popf
push
pop
and
push
lea
sbb
shl
xor
jl
sub
in
push
jecxz
push
shrb
out
nop
push
mov
dec
sub
dec
xor
inc
int
mov
inc
enter
into
outsb
aas
add
ja
sub
frstor
int
stos
pushf
ret
lock
mov
int3
sbb
iret
jb
mov
femms
mov
or
scas
adc
xchg
lds
adc
dec
mov
shrl
inc
or
push
out
xchg
dec
sbb
push
imul
push
lods
mov
cs
xchg
ja
int3
push
je
test
jg
or
add
xchg
push
in
xchg
lock
outsl
mov
or
into
mov
out
outsb
push
sbb
mov
fsub
lea
dec
jae
xchg
dec
in
int
lret
sbb
jbe
test
jae
mov
mov
stos
je
test
mov
pop
jmp
mov
stos
ds
arpl
mov
ss
push
lea
mov
in
add
bound
pop
push
enter
lock
fisubl
and
sarl
out
repnz
xabort
stos
mov
fcmovnu
cmp
cs
std
stos
mov
adc
fcoml
mov
jl
push
mov
and
mov
jb
clc
push
jge
fs
loope
popf
jecxz
xor
in
jnp
shlb
jbe
jmp
shrb
mov
mov
cli
clc
xor
std
xchg
loopne
movl
sar
ret
jbe,pn
cmpsb
or
outsb
fnstenv
fisubl
sub
out
aad
xchg
push
mov
sbb
lret
cmp
repz
stos
jp
iret
andl
clc
addr16
test
ret
push
sub
int
or
inc
bound
stos
xor
push
push
dec
lret
rcll
cmpsb
xor
cs
test
ds
jns
inc
cmc
dec
adc
das
pop
mov
cs
cmpsl
push
adcb
out
jge
inc
imul
pop
xor
sbb
out
cmp
mov
jbe
sub
xlat
cmp
xchg
sub
out
scas
orl
in
inc
in
ret
ret
mov
fisubrl
ret
inc
stc
dec
mov
xor
popa
jns
push
pop
pop
adc
scas
jl
addr16
push
lods
pop
in
and
jmp
leave
jbe
notb
pop
jo
in
lock
xor
mov
stos
out
and
popa
xor
jle
jecxz
mov
aaa
cmpsb
adc
in
cmp
cmp
fildl
popw
mov
inc
call
outsl
push
pop
std
adc
xchg
testb
xorl
pop
sbb
in
add
movsl
data16
ficomps
into
mov
add
mov
lret
inc
ret
dec
testl
andl
push
hlt
cmc
push
sarl
mov
hlt
cltd
aam
stos
jecxz
push
iret
mov
outsb
sub
cmp
mov
push
mov
pop
adc
imulb
data16
insb
out
stos
subb
add
out
stos
or
push
mov
pop
push
sti
lret
out
bndldx
mov
cli
xor
pop
pushf
adc
addb
adc
jb
out
cs
lods
movsb
icebp
fs
jg
cmp
test
mov
lea
cld
dec
dec
cmpsl
adc
xor
stos
hlt
lahf
aad
fnstenv
pusha
mov
push
cmp
sahf
xlat
pop
mov
lods
sbb
mov
add
mov
fbstp
imul
in
out
aaa
xor
pushf
jne
jno
sbb
cmp
aas
inc
scas
cmp
outsb
xchg
sbb
push
pusha
sub
jp
add
push
cmp
sub
cli
xor
jb
hlt
sbb
nop
movsl
sar
or
xor
call
mov
cwtl
cmpsl
jg
sahf
push
cmc
mov
fmul
loope
cmp
stos
mov
pop
push
xchg
mov
aam
cmpsb
jae
bound
lods
jno
push
lahf
mov
add
adc
mov
and
test
xchg
xchg
pop
sub
subb
cld
lea
aam
pushf
in
jmp
repz
add
fisubs
cmp
in
mov
lea
ret
mov
sahf
sub
add
push
jl
jno
rolb
into
push
cmp
adc
xor
and
sbb
or
inc
jns
cs
mov
loopne
mov
inc
xchg
sbb
int
out
mov
daa
xlat
je
push
arpl
add
pop
bound
xor
jle
mov
or
jl
adc
pop
jp
ret
cmp
xchg
cmpsb
mov
out
sbb
inc
mov
je
nop
sub
jecxz
aas
clc
or
out
cmc
xchg
test
fdivrs
test
arpl
add
sbbb
cmp
push
outsl
in
loopne
std
jp
movsl
pushf
fimull
andb
add
leave
clc
subb
lahf
xchg
lcall
loope
or
in
fcom
hlt
sub
pop
mov
adc
pop
jp
jle
scas
addr16
mov
sbb
fstpt
aad
xor
and
adc
mov
add
or
cmp
loop
xchg
cld
fs
cmp
std
das
sti
in
mov
mov
js
inc
int
and
stc
test
inc
pop
faddl
jo
ficompl
fwait
add
andl
and
inc
idivb
lea
in
pop
cvtdq2ps
sahf
lea
or
jb
fldl
add
lea
es
pop
movsb
push
xlat
mov
push
pushf
movsl
loop
pusha
fstpt
fwait
in
sbb
ffree
stos
js
jg
int3
cli
out
add
outsb
mov
xor
push
mov
les
or
lret
push
aas
and
jno
repz
ret
aaa
dec
cmp
arpl
mov
repz
test
testl
rdtsc
pushf
call
loope
push
sbb
cmc
inc
inc
rclb
lea
xchg
add
or
repnz
lock
movsb
lcall
stos
mov
out
popa
in
and
xor
mulb
mov
inc
enter
mov
stos
push
jo
cld
xchg
push
jne
incb
loop
shll
dec
enter
rcl
or
push
adc
inc
lock
sbb
dec
mov
inc
in
popa
mov
call
mov
xchg
and
std
xchg
mov
mov
inc
mov
loopne
xchg
mov
mov
rsqrtps
gs
pop
es
adc
js
sub
inc
mov
fucomp
rcl
loop
mov
das
popf
jae
imul
inc
shrb
cwtl
addr16
repz
popa
push
inc
inc
xchg
shrl
sahf
mov
mov
sbb
lock
bound
inc
aas
or
cmp
jg
or
pusha
jmp
pop
rolb
mov
dec
sub
bound
addr16
int
gs
arpl
lock
inc
and
mov
clc
leave
and
mov
mov
out
inc
cmp
push
insl
pusha
and
imul
mov
mov
jle
jae
add
sarb
jns
loopne
out
mov
xchg
xlat
fisubs
cwtl
adc
arpl
mov
ja
push
fnstenv
addr16
cmp
sub
add
gs
sbb
cli
js
jns
mov
jl
dec
imul
fstpl
test
push
add
push
lds
inc
arpl
in
ret
push
xchg
mov
mov
mov
test
mov
inc
xor
jl
fwait
push
pop
call
push
add
mov
test
sbb
lock
inc
mov
cmp
lcall
cmp
mov
add
jo
int
andl
xchg
mov
mov
and
gs
add
mov
xchg
push
pop
idivb
dec
imul
test
adc
aas
xchg
aaa
jmp
jecxz
dec
test
iret
and
push
cmp
push
xchg
sub
int3
jmp
imul
cwtl
dec
cwtl
ds
fldenv
jae
sub
cmp
das
test
scas
out
jecxz
mov
mov
ss
repnz
jg
fiaddl
mov
das
das
int3
sbb
inc
pusha
ror
out
mov
fstpt
in
out
ja
dec
push
aad
out
sahf
fimuls
sbb
adc
cld
jle
mov
xchg
daa
loopne
ljmp
push
sarb
mov
loopne
pop
popa
fstpl
loope
bound
inc
addb
jp
loopne
fucomi
mov
mov
ds
repz
jle
mov
push
test
je
sbb
or
dec
movsl
push
dec
test
cwtl
cli
imul
icebp
mov
aam
lock
dec
fildll
js
push
shrb
adc
addr16
xor
cmp
inc
pop
pop
shrl
repz
test
adc
or
cmpsb
leave
frstor
inc
cmpsl
cmpsb
and
data16
sbb
mov
jmp
and
imul
out
mov
jne
clc
cmp
inc
mov
shrb
cmpsl
aad
pusha
push
inc
cmpsb
mov
push
jecxz
orb
xor
rcll
sti
lahf
out
jnp
push
aad
mov
int
push
ret
in
sub
inc
xor
and
push
pop
pop
add
outsb
nop
sub
mov
movsb
sbb
aad
clc
into
fcmovb
fcomps
inc
mov
popf
mov
pusha
jb
outsl
xor
cld
mov
in
jecxz
dec
lret
mov
or
adc
mov
inc
cmp
pop
andl
loope
outsb
and
mov
pop
mov
fwait
bound
mov
les
cld
lcall
into
adc
insl
subl
mov
pop
xlat
ret
push
arpl
fsubr
shrl
sbb
dec
std
inc
scas
cmpsl
lahf
cmpsl
ja
icebp
pop
and
js
sbb
rcr
cmp
mov
cltd
push
jecxz
icebp
lahf
movsl
fldt
mov
fisubrs
out
insl
cmpb
filds
cmpsl
clc
mov
xor
cmpsl
imul
mov
dec
pop
jns
pop
mov
sti
fstl
shlb
hlt
push
and
push
or
scas
roll
sbbb
push
sub
in
push
push
inc
jb
mov
dec
fisubrs
loop
ss
lock
dec
in
xchg
xchg
cmc
mov
mov
pop
es
frstor
idivb
xor
test
pushf
aad
ja
jle
cmc
jno
push
clc
pop
sbb
dec
dec
or
mov
imul
jg
cwtl
enter
mov
sub
adc
mov
sub
pop
lds
lcall
jmp
cmovbe
int
cmp
movl
mov
xchg
jne
outsb
inc
cs
mov
inc
dec
push
mov
arpl
test
outsl
adc
enter
jp
xchg
imul
cmpsl
mov
dec
add
lahf
insl
into
outsb
data16
cmpl
add
mov
out
std
cli
pushf
sbb
mov
popf
mov
push
push
sbb
jno
xchg
nop
mov
lret
mov
popf
testb
lods
fwait
sub
test
jns
fs
movb
movsb
xor
pop
sub
shlb
ret
jb
xlat
cwtl
adc
aas
repz
mov
enter
pushf
test
inc
mov
pop
xor
xor
pop
sti
lock
jg
imul
stos
pop
push
rcrb
hlt
mov
into
sbb
pop
iret
insb
popf
cmovo
gs
cmp
iret
sub
and
xor
call
adc
xchg
hlt
add
jle
mov
repnz
cmc
ror
sbb
inc
mov
fadds
xor
jecxz
ljmp
xor
cwtl
hlt
and
push
cltd
mov
daa
and
pushf
push
jae
inc
and
dec
lds
inc
dec
outsb
pushf
mov
jmp
push
mov
stc
pop
sarl
das
outsl
jg
cltd
and
lea
cli
loop
popa
push
iret
test
in
insl
sbb
in
inc
dec
pop
jns
xchg
cld
pop
pusha
add
jle
mov
outsb
mov
aas
cmp
icebp
test
js
mov
leave
fildll
push
aam
movsb
mov
jno
out
mov
int3
popf
inc
into
lods
adc
push
mov
and
push
jbe
fimull
in
call
ja
js
or
mov
aad
lret
je
dec
jl
loop
out
imul
sbb
xor
mov
fisttpll
xor
sub
call
pop
insb
xor
out
pop
xbegin
and
mov
dec
ds
inc
mov
hlt
test
insb
add
pop
pop
iret
pop
add
hlt
test
jg
test
pop
test
cmp
sub
cltd
cmp
loop
lock
sbb
pusha
and
call
jae
fnstenv
mov
push
das
in
aam
mov
adc
pop
sub
int3
imul
or
movsb
adc
sbbl
insb
push
daa
roll
push
jb
cwtl
dec
mov
bound
jp
pop
cmp
les
das
out
inc
addl
ret
rolb
mov
jbe
jmp
lret
mov
pop
inc
sub
lret
cmp
pop
fstps
fucomip
pushf
xchg
add
push
or
roll
sub
jns
stos
hlt
jbe
add
scas
pusha
mov
xchg
jp
pop
mov
push
shrl
out
jns
jecxz
enter
sub
lods
dec
sti
pop
fcomps
mov
fidivs
jle
mov
dec
aaa
cmp
mov
mov
cld
fcomp
stc
lock
xacquire
pusha
push
decl
push
stos
lret
add
in
push
hlt
scas
jmp
or
aas
xchg
imul
es
int
lock
jp
push
push
or
lock
outsl
test
loope
push
dec
lret
xchg
mov
stos
pop
add
cld
insl
and
jns
mov
call
fstps
sbb
ljmp
rcll
adc
pop
inc
aam
push
xchg
jmp
repnz
arpl
stc
jo
in
pop
aas
in
xor
mov
sbb
inc
jo
sub
mov
inc
push
clc
lcall
loop
xchg
adc
mov
xchg
iret
mov
loopne
movsb
cmpsb
jecxz
mov
dec
pop
add
ja
add
xor
stc
daa
jmp
sbb
andl
sbb
int
rcrl
dec
lcall
or
sbb
loopne
and
ljmp
cmpsl
inc
dec
mov
into
and
rol
scas
mov
mov
pop
out
mov
ror
dec
dec
jp
fldt
mov
imul
mov
sbb
mov
js
les
mov
les
fldcw
cmp
xor
pushf
fucomip
pop
cli
fcmovnbe
and
adc
fimull
push
mov
inc
or
mov
sub
test
push
movsb
pop
add
sbb
sub
stos
movsl
insl
aam
inc
ja
sub
mov
mov
cmc
stos
lret
or
pop
jecxz
push
pop
sbb
sbb
pop
cmp
shr
mov
mov
mov
jae
sub
cmp
sub
out
dec
push
jg
sbb
xor
bound
or
std
scas
les
pop
fmul
cmp
push
ror
popa
adc
out
dec
ss
and
in
out
daa
mov
sahf
xchg
testb
test
clc
inc
push
dec
fildll
jns
sbb
or
xor
fmuls
mov
or
hlt
mov
jne
loope
mov
mov
adc
aaa
inc
mov
lret
loope
rolb
or
movsl
and
pop
mov
push
xchg
xchg
sbb
hlt
sbbl
mov
imul
mov
jmp
cmp
fldl2e
or
mov
movsb
lret
outsl
call
test
sbb
repz
and
ror
push
push
add
cld
fbld
and
mov
cwtl
xor
int3
shlb
push
fistpl
and
or
scas
jae
jne
sub
mov
mov
mov
xor
push
cmpsl
ret
ds
pusha
xor
cmc
outsl
mov
cmpsl
inc
scas
xchg
rcl
inc
sti
mov
inc
or
outsl
push
inc
jo
or
jmp
imul
inc
fistps
ror
push
fdivr
dec
mov
cmp
adc
sub
lcall
lret
into
rorb
fcomps
mov
or
push
sbbl
mov
lahf
cmp
hlt
adc
push
pop
cli
in
inc
popf
cltd
loope
inc
andb
inc
pop
and
mov
inc
test
loop
out
adc
mov
dec
repnz
sub
jp
cli
jecxz
movsl
das
and
imul
xchg
mov
insl
cmp
or
je
imul
xchg
test
jo
inc
test
push
push
sub
aam
ds
sahf
mov
mov
sub
scas
pop
sarb
cwtl
mov
into
and
nop
std
inc
xor
rcl
xor
loope
ficompl
ss
inc
js
and
xor
inc
xor
push
std
rorb
adc
loop
int
xor
xor
lcall
jmp
loope
das
and
jl
imul
push
dec
repnz
push
dec
loop
or
lcall
push
cmpsl
lods
outsl
orb
adc
sbb
lret
inc
jmp
movsb
lock
fcmovb
push
call
pop
push
push
out
fsubr
pop
mov
rcrl
jge
mov
fisubrl
push
js
jl
or
in
sbb
and
pop
xchg
into
sub
je
jns
cmpsb
shlb
lret
stos
jbe
imul
dec
bnd
fdivrs
add
std
inc
fistpl
pop
mov
outsb
bound
cltd
cmpsb
dec
sti
pushf
sbb
dec
xlat
jbe
fs
and
jne
xor
inc
lcall
add
popf
outsl
adc
into
push
fs
fwait
mov
fstl
and
fadd
popa
ds
stos
or
sahf
movsb
push
les
mov
push
lock
pop
pop
and
push
mov
inc
xor
xchg
inc
and
addr16
jae
popf
cwtl
pop
orl
jmp
fdivrs
jne
pop
cmp
xchg
in
pop
sbb
mov
push
dec
je
mov
jmp
leave
adc
gs
sub
les
xchg
sbb
rcrl
ds
add
int3
xorb
push
push
repnz
sbb
sbb
xchg
ss
mov
loope
shll
adc
sub
punpckhwd
xlat
cmpsb
pop
sti
adc
lock
movsb
jo
xor
inc
fdivr
push
mov
sub
negb
sti
dec
js
addl
stos
pop
dec
mov
sub
or
xor
add
fldl
mov
cmp
mov
mov
xchg
cmpsl
pop
sub
fwait
jnp
sub
jno
push
mov
jae
adc
cmp
clc
jbe
adc
bound
inc
jle
pop
sbbb
fdivrl
lock
jne
add
cmp
jae
mov
out
int
loopew
sbb
dec
out
xor
jmp
push
jge
sbb
xor
orl
jge
xor
and
mov
movsl
cmp
jae
and
clc
inc
or
mov
fimull
aad
adc
mov
push
or
into
pop
pop
fsubl
adc
xchg
gs
cmp
imul
lret
push
and
aad
aaa
fimull
dec
pop
or
mov
lods
icebp
mov
not
dec
lahf
mov
shll
test
mov
xor
jne
mov
adc
push
lret
push
ds
jae
fs
xor
mov
sub
cmpsb
fidivs
lock
lds
das
addb
add
adc
push
fwait
cmp
pop
dec
cmpsl
push
mov
popf
adc
xlat
mov
and
repnz
pop
xchg
mov
jbe
and
fists
or
psrlq
pop
xor
mov
ret
das
sti
sbbb
pop
xchg
pusha
jnp
mov
mov
fxch
lea
mov
nop
or
mov
arpl
mov
lods
in
mov
and
lea
cmpsb
adc
mov
sub
pop
test
pusha
mov
mov
rclb
adc
xor
popf
gs
dec
popf
or
mov
inc
andb
outsl
lcall
or
scas
ret
cs
icebp
out
out
aad
movsl
mov
punpcklbw
xchg
mov
pushl
sub
add
sbb
or
sub
dec
mov
scas
cld
addb
aas
mov
push
push
pop
fldenv
stc
nop
push
in
mov
leave
cli
xor
ret
ja
js
icebp
insb
out
cmc
sub
jo
pop
pop
pushf
pop
iret
lret
sub
push
sbb
xchg
fwait
es
cmp
pop
xlat
aas
mov
mov
jnp
fldt
mov
cmp
gs
cmc
cli
jmp
lods
xor
in
mov
mov
and
xor
shrb
cld
or
dec
imul
js
mov
stc
pop
push
insb
push
mov
xor
int
mov
adc
pop
xchg
lods
pop
and
fbld
gs
xchg
dec
daa
scas
or
ss
push
test
sub
into
mov
cmp
dec
mov
in
jge
push
pop
gs
xlat
insb
pop
push
pop
fs
fstl
jmp
test
outsb
xchg
pcmpgtw
lahf
insb
nop
and
sbb
cmp
jae
fistl
stos
lds
adc
and
and
clc
scas
xor
popf
ljmp
addr16
and
xchg
test
xchg
sahf
mov
sahf
pop
dec
sbb
push
fidivs
stos
sti
ljmp
movnti
stc
jae
into
icebp
hlt
pusha
jnp
xchg
mov
push
xlat
or
jl
lret
jno
add
jp,pn
sti
mov
pop
inc
jnp
add
into
imul
lods
sbb
dec
test
xor
lods
stc
lds
sarl
jae
cld
pop
in
rolb
push
das
testb
mov
loop
addr16
sub
out
imul
les
dec
sub
mov
negb
add
negl
bound
test
push
inc
mov
adc
jp
loope
repz
inc
ficoms
jg
or
push
jg
vmread
xchg
mov
fnstsw
inc
sbb
out
sub
test
in
ret
pop
xchg
mov
hlt
in
or
mov
imul
movsl
into
test
fcoms
jg
addr16
cmp
sub
sub
in
out
scas
sub
sbb
dec
insb
out
ds
ret
mov
or
mul
sub
shll
stos
cmp
sbb
repnz
insl
push
rorb
jns
lods
or
popa
and
mov
fsubrs
sub
sbb
sbb
xchg
lods
add
xchg
ret
ds
test
mov
lods
and
adc
jne
jle
mov
loopne
cmp
mov
inc
js
aam
cmp
add
inc
mov
jecxz
mov
and
sti
mov
mov
mov
push
and
ja
or
nop
mov
cli
mov
out
dec
mov
fidivl
dec
cs
jecxz
decl
pop
xor
sbb
les
lea
xlat
popf
xor
notb
xchg
hlt
push
and
loopne
stos
add
or
int3
insb
pop
jbe
dec
add
mov
sub
repz
jb
pushf
lods
xchg
mov
ror
or
js
stos
jge
xlat
sbb
stos
push
jmp
ds
mov
lds
loop
cmpsl
mov
ljmp
mov
xchg
das
outsl
push
test
rcr
jge
mov
sbb
xor
pop
inc
xchg
and
xor
mov
arpl
xchg
push
add
xchg
cmp
xor
loopne
sbb
repnz
jge
mov
aam
adc
lods
mov
xor
dec
adc
xchg
sbb
push
scas
or
sbb
dec
iret
add
pop
jne
gs
jns
ds
sti
imul
adc
popf
or
pop
es
or
pop
ret
cmpsl
sub
insb
add
pop
ja
sbb
pop
stc
mov
pusha
mov
shlb
fidivrs
pop
mov
sbb
fdivrl
in
add
lods
mov
clc
push
push
cs
call
int
push
jo
je
ret
lahf
lock
add
push
bound
mov
cwtl
pop
filds
addr16
emms
mov
adc
sbb
push
in
or
mov
pop
add
pop
add
or
mov
mov
pop
sub
xor
cs
mov
fs
adc
fdiv
sahf
adc
cmc
cmc
insl
mov
pop
inc
aas
jnp
lret
add
out
dec
cwtl
stos
aad
pop
out
cld
je
ss
xchg
scas
jg
push
dec
adc
push
xchg
imul
into
subb
sub
cwtl
stc
lea
fsts
inc
inc
ret
pop
je
inc
stos
mov
adc
cmpsl
fs
mov
push
out
daa
divb
mov
and
outsb
cmp
lds
push
les
mov
stos
push
mov
addr16
in
pushf
mov
dec
pop
rol
push
lahf
faddl
cmp
adc
test
or
lahf
aam
push
xor
jne
jg
dec
sub
or
xor
mov
popa
stc
pop
mov
push
repnz
in
fcmovne
pop
ds
cmpsb
add
or
and
pop
loope
ret
ljmp
pop
clc
pop
jb
push
mov
sub
ret
mov
das
movb
cld
and
popa
xchg
xor
mov
and
or
aaa
push
rcrl
and
and
xor
xchg
aaa
adc
jge
push
scas
add
fs
cmpsb
pop
adc
aam
js
inc
outsb
sbb
cli
sub
out
jno
adc
rclb
add
icebp
jnp
xchg
cmpsl
lods
mov
push
inc
xchg
add
and
enter
mov
in
fnstsw
cmpsl
lds
cmpsb
or
test
or
mov
rorb
mov
fs
pop
cmc
jge
mov
push
lods
mov
sub
ja
inc
push
icebp
xor
jg
movsb
xchg
sbb
add
repz
stos
lcall
xchg
clc
std
outsb
xchg
mov
and
sbb
cmp
data16
jmp
sub
pushf
push
fdivrl
ret
leave
mov
mov
or
shll
repnz
jge
push
mov
push
fldl
jbe
jge
popa
jne
add
lock
cli
push
sbb
das
or
or
enter
mov
and
cmp
push
mov
dec
iret
sbbb
data16
push
lret
fwait
shl
push
movsb
sbb
sahf
fsubrl
in
cmpsl
lea
sahf
shll
mov
cmpsb
fcmovbe
push
aaa
ret
inc
js
push
fildll
xlat
jne
or
lcall
xor
mov
fdivs
mov
add
or
cwtl
xchg
jecxz
inc
hlt
fs
and
mov
orl
icebp
lret
dec
iret
add
sbb
xchg
rcrl
cmpsl
jecxz
mov
sti
aas
outsb
push
mov
push
mov
cli
xlat
mov
or
mov
cmpsb
loop
adc
imul
addr16
mov
sahf
lret
lock
cmc
xchg
lock
jne
mull
push
addr16
mov
jmp
add
mov
sub
push
mov
movsl
push
adc
inc
and
adc
fldt
mov
push
sar
dec
out
lea
cwtl
add
push
jbe
jle
push
pop
cmpsl
jae
rorl
sub
jb
jg
lods
adc
xor
pop
sar
mov
push
leave
xor
sbb
xor
outsl
cmp
into
enter
push
xor
pushf
cmp
iret
bound
xchg
str
rcrb
dec
or
cmp
xor
cmpsl
rclb
test
adc
pop
pop
xlat
cmp
aam
dec
out
add
fadds
mov
out
mov
mov
mov
xchg
cld
inc
xor
repnz
cmp
xchg
je
and
insl
jp
sub
imul
into
int
cmp
sub
imul
outsl
rolb
dec
aad
enter
mov
sbb
test
mov
jnp
jns
xchg
xor
dec
sbb
adc
mov
push
mov
cmp
stos
mov
outsb
scas
cmp
push
shl
mov
insl
adc
fiaddl
ja
loope
cmp
cmpsl
sahf
addr16
inc
jmp
aaa
scas
roll
cmp
inc
xlat
dec
arpl
ss
or
add
data16
inc
jp
push
jbe,pn
outsl
test
aas
push
mov
shll
sub
sbb
cmp
jne
lret
pop
out
aas
cmc
mov
fwait
jmp
and
mov
and
daa
cmp
clc
mov
pusha
sbb
sub
cltd
xchg
jp
sub
inc
and
pop
inc
add
mov
mov
adcb
daa
sbb
add
shrl
ret
ffreep
push
mov
adc
sub
add
jbe
sub
xor
mov
xchg
fists
pushf
sbb
or
xchg
jmp
scas
mov
stc
jmp
out
dec
pop
push
les
repz
sub
xchg
fsubrs
sub
mov
add
sub
bound
ret
icebp
push
or
xor
cli
ret
rcll
clc
cltd
dec
xchg
lcall
inc
xor
dec
jle
mov
dec
sub
push
leave
mov
loope
cld
mov
shr
push
mov
push
fs
lcall
pop
lock
jns
aas
adc
cmp
sub
outsl
sbb
adc
ret
pop
push
inc
inc
insb
shrl
or
out
dec
mov
or
push
push
add
sbb
inc
enter
stos
cmp
adc
addr16
stos
aas
or
imul
push
pop
dec
hlt
sub
sahf
sbb
and
inc
aas
xchg
das
jb
mov
pop
stos
inc
xchg
pop
push
adcb
int3
push
cmp
mov
adc
mov
dec
lods
or
mov
imul
xchg
cmp
sahf
ss
sbb
sub
aas
popf
and
cmpsb
rclb
inc
pop
shll
pop
push
xor
fidivrl
imul
pop
cmp
in
jl
es
int3
call
jnp
add
xor
sarl
cmpsb
ret
jp
lret
js
call
and
mov
aam
pushf
iret
fstpt
inc
cltd
jae
or
jp
push
xorl
xor
lods
addr16
dec
inc
je
push
into
dec
mov
push
idivl
loopne
loope
or
sub
jmp
mov
xchg
ljmp
aaa
repnz
cmpsb
imul
insb
popa
fwait
sti
jne
dec
insl
aas
mov
or
sbb
lret
aam
addr16
cld
mov
insb
out
xchg
push
jmp
inc
adcb
xchg
loop
inc
daa
lret
or
or
mov
xchg
cmp
dec
fnstsw
cmpsb
shlb
in
sub
mov
fstpt
jp
inc
mov
fnstenv
cltd
and
mov
sbb
test
or
fisubs
jno
adcb
pop
mov
ret
xor
jnp
inc
bound
pop
add
or
sbb
add
cld
mov
sar
lret
xchg
pop
pop
mov
push
push
fnstcw
mov
pop
lret
test
cld
lods
int
shlb
adc
fmuls
xchg
cmpsl
addr16
adc
aas
inc
inc
cmp
pop
nop
nop
jne
inc
outsb
and
fnsave
push
stc
daa
pop
test
mov
dec
and
insl
fisttps
xchg
jge
dec
cmp
inc
pushf
dec
or
loop
gs
lods
or
out
stos
xchg
pmullw
sbb
jle
cmp
pop
movb
hlt
xor
push
cwtl
xchg
std
push
adc
in
sar
icebp
addr16
jle
or
aam
jle
cltd
jnp
jno
mov
popa
mov
scas
rorb
dec
push
ja
imul
je
jle
cmc
push
test
pop
rclb
adc
imul
push
adc
gs
and
inc
rorb
mov
adcl
out
adc
js
xor
sbb
cli
mov
mov
mov
cli
call
and
mov
neg
stos
in
ret
aad
or
aam
push
or
scas
rolb
dec
movsl
jmp
push
repnz
cmp
jge
add
out
inc
sub
je
and
sar
fbld
lret
rolb
jge
ss
imul
sub
das
jmp
es
or
jecxz
iret
aad
in
adc
nop
push
adc
jbe
xchg
test
push
cli
shll
sbb
leave
rorl
ret
and
dec
jge
addr16
or
cltd
fdivrl
mov
idivb
adc
in
mov
mov
sub
bound
mov
sahf
popf
nop
sti
dec
inc
sub
leave
in
and
add
jae
cs
push
fidivl
mov
mov
sbb
jmp
mov
test
mov
popf
and
imul
sub
jnp
lcall
test
scas
mov
push
pop
mov
push
dec
push
leave
mov
call
cmpsb
fists
inc
add
cli
dec
xchg
adc
in
adc
sub
addr16
insl
xor
dec
addb
or
fimull
inc
inc
loop
jbe
add
mov
aad
aad
jg
mov
mov
sbb
aas
mov
je
xchg
pop
adc
movsl
xchg
out
xchg
mov
cmc
or
cmp
les
xchg
scas
daa
xchg
repz
pop
inc
and
mov
mov
lds
mov
dec
popf
mov
mov
sub
mov
xchg
push
push
pop
jne
xchg
xchg
popf
aaa
jg
xchg
mov
jnp
pop
cmp
add
ja
popf
xor
sbb
jg
xorb
andb
hlt
fiaddl
mov
daa
stc
sarl
int3
add
sbb
ret
out
add
fcom
in
add
call
stc
fnstcw
repnz
mov
loope
test
mov
push
leave
sarl
cmp
fwait
cs
xor
out
fucomi
fidivs
scas
sahf
xor
clc
jg
xchg
out
add
xlat
mov
dec
pop
xchg
aas
repnz
xchg
mov
daa
ret
fwait
sbb
sbb
insl
cs
add
push
arpl
lret
ret
sbb
cmp
insb
andb
cld
rcr
insl
je
popf
dec
and
inc
push
arpl
cli
mov
pop
mov
mov
xor
scas
lea
arpl
pop
jbe
dec
je
lods
sahf
push
lds
pop
insb
test
je
cmp
xchg
call
lea
cli
insl
xor
insb
xchg
arpl
mov
pop
cmp
jne
adc
andb
sbb
pop
jbe
lcall
cmp
cmpsb
add
js
lcall
lahf
mov
mov
cmp
xor
mov
repz
mov
and
mov
sarb
xor
xor
pop
in
add
ljmp
out
orb
fxch
xchg
fldl
jnp
pop
or
push
sbb
mov
mov
jns
rcrl
pop
ds
xchg
fidivrl
add
sub
repz
jae
pop
add
scas
xchg
or
jnp
cmp
int3
cmp
push
jbe
xchg
mov
aam
sub
rolb
jbe
lods
fwait
xchg
bound
scas
pop
mov
cmp
add
int3
or
fldenv
push
cli
mov
xor
idiv
mov
movsb
cwtl
and
mov
jg
mov
popl
inc
int3
fistps
aaa
in
icebp
add
mov
push
scas
filds
adc
xor
xchg
mov
mov
lret
inc
and
pushw
jg
and
pusha
add
mov
imul
scas
ja
cmc
sqrtps
enter
out
cmp
fucomp
sarb
cmpsb
mov
dec
mov
mov
in
jb
movsl
add
mov
add
addr16
pop
mov
inc
push
mov
inc
sbbl
roll
js
fwait
xor
dec
pusha
cli
xor
ficoms
in
or
adc
loope
lods
test
jne
popf
icebp
in
sub
push
inc
mov
xchg
aas
mov
cmp
jp
xchg
push
add
ret
or
inc
loop
ja
or
xor
lret
mov
sbb
aaa
rorl
mov
push
jg
push
fisttpl
jge
and
jo
inc
dec
mov
test
scas
xlat
xchg
sar
inc
jmp
orb
aas
dec
jo
lock
add
xor
in
fiaddl
into
mov
jnp
cmpsb
inc
sarl
inc
add
pusha
jno
test
jns
xchg
jge
clc
adc
mov
push
mov
negl
push
int3
fldt
jno
add
ja
mov
jne
in
dec
ret
pop
aam
fbstp
cli
addr16
push
rorl
push
xor
or
xor
nop
jo
or
test
test
push
insb
ficoml
mov
stos
mul
inc
or
mov
cltd
and
dec
pop
orl
xchg
cmpsl
ret
fs
lahf
test
push
pop
in
cmp
je
xchg
mov
test
outsl
sbb
sahf
inc
fstps
lock
sbb
fdiv
xor
mov
cmpsb
cwtl
push
push
push
pop
inc
imul
pusha
fsubp
test
xlat
jnp
or
js
aad
int
xlat
and
mov
fcmovbe
loopw
outsl
mov
shlb
xchg
in
cmc
scas
jge
jge
add
in
pop
in
in
push
pushf
mov
inc
sbbl
mov
or
out
and
fst
xchg
scas
lock
clc
cs
addr16
or
and
push
ljmp
jl
xor
mov
mov
pop
jns
sub
loopne
push
rorb
mov
inc
dec
les
loopne
cmp
lcall
cmp
ljmp
mov
mov
aad
lcall
push
sbb
stos
dec
gs
ret
xchg
aad
insb
lret
pop
jp
jbe
or
cld
jmp
sbb
jbe
add
mov
je
dec
jbe
fnsave
negl
adc
cltd
iret
aad
cwtl
stc
mov
adc
or
std
cld
ret
mov
sbb
add
gs
xchg
mov
mov
daa
push
loopne
push
jge
xchg
sbb
jmp
mov
pop
loop
pop
jge
bound
cld
mov
mov
cmp
or
xor
jg
andb
bound
test
xchg
inc
shrb
xor
stos
clc
movsb
adcb
cmpsl
in
repz
test
ss
or
aas
insl
pop
fs
movsl
mov
lock
les
enter
ljmp
mov
andb
int3
mov
jnp
repnz
lgs
inc
inc
mov
incl
stc
insb
pop
jbe
adc
push
sbb
cltd
cmp
push
xchg
mov
jne
int3
ds
les
dec
and
xchg
add
aam
and
lock
pop
out
add
xor
pop
daa
mov
pmaddwd
sar
mov
dec
cltd
push
or
sub
sub
outsl
rclb
jl
dec
je
loope
jb
mov
dec
punpckhbw
pop
lods
lret
repz
xor
inc
adc
call
add
gs
out
pop
orb
jne
adc
call
sub
push
dec
stos
push
call
cmp
mov
insb
lea
mov
ficoms
mov
je
add
push
push
loope
mov
lods
push
call
sub
dec
mov
xor
mov
jo
push
pusha
cld
xchg
xor
mov
ret
lock
and
popl
xchg
stos
push
decl
inc
lret
push
sub
inc
xor
lret
insb
lea
outsl
mov
mov
mov
repz
fcmovbe
movsb
dec
pop
sub
fwait
push
mov
or
ficompl
jle
cltd
mov
pop
pop
and
jno
lcall
push
cmp
pop
cmc
sbb
in
out
stos
jo
push
cs
push
adc
or
cmpsl
lret
fstl
stos
mov
pmullw
and
jno
push
nop
dec
cmp
out
xchg
inc
gs
and
fsts
addl
shl
ja
cmp
orl
test
jp
std
mov
jmp
lock
jae
lcall
cli
xchg
adc
push
jnp
dec
inc
test
ja
clc
es
jno
inc
mov
jnp
scas
mov
jno
jno
jg,pt
jp
jns
jg,pt
jb
lock
cmpsb
clc
push
jg
es
jne
jns
jno
jge
xor
inc
jno
xor
inc
jne
mov
jae
sbb
and
mov
xchg
rcrl
scas
cwtl
loop
sub
push
mov
and
cwtl
jg
xor
jge
add
loopne
ds
mov
sub
sub
mov
ret
push
cs
ss
mov
ret
jb
push
data16
xchg
outsb
bound
jle
je
cli
repz
inc
repz
xor
and
mov
loopne
mov
mov
push
imul
lahf
outsl
outsb
mov
out
pop
mov
mov
jo
and
dec
jge
mov
outsl
fiaddl
ret
addr16
insb
sbb
mov
add
cmp
push
mov
mov
adc
ffree
mov
popa
inc
add
or
xchg
jmp
popa
mov
daa
add
xchg
push
out
stos
and
out
dec
orl
push
sub
roll
fcoms
sub
ret
lret
nop
sub
imul
pop
lret
sbb
lea
mov
arpl
int3
std
fcomps
sub
rorw
jo
xor
mov
into
sub
sahf
sub
pop
mov
loop
scas
dec
icebp
sub
mov
mov
push
push
mov
out
xchg
ret
mov
and
or
push
pop
mov
sub
in
out
xchg
or
cwtl
mov
mov
dec
mov
test
sarl
jecxz
xchg
jmp
popf
jbe
loop
decb
icebp
lds
add
cmp
adc
jne
imul
stos
cmp
lds
movsb
scas
mov
push
aas
scas
icebp
fcmovb
aam
leave
sbb
dec
cmp
mov
out
and
pop
aad
pop
jmp
loop
mov
pop
dec
lods
mov
stos
sahf
push
push
aaa
xchg
xchg
or
or
xor
in
das
int
lret
pop
mov
jecxz
jl
inc
mov
call
out
pop
xlat
ffreep
sub
pop
pop
sbb
mov
jl
shr
mov
inc
jge
sub
mov
pop
dec
or
scas
int
xor
sub
bnd
daa
addb
push
dec
cmp
and
jg
mov
push
adc
inc
popf
addr16
mov
cmpsb
mov
gs
mov
dec
xlat
and
cmp
cltd
cltd
adc
push
pushf
cltd
adc
xlat
push
sbb
loopne
sbb
push
idivb
int
xlat
into
add
rorb
pop
dec
fdivr
imul
aam
adc
dec
iret
and
sub
xor
xorb
fcmovbe
adc
sub
fdivs
outsb
inc
mov
mov
add
sub
gs
xchg
nop
ds
lcall
mov
ja
inc
push
das
push
dec
mov
sub
push
mov
xchg
arpl
push
mov
push
loopne
lahf
test
add
cmp
pop
xchg
sub
fs
sub
or
or
cwtl
push
mov
or
push
jecxz
mov
mov
std
aam
push
xchg
mov
inc
pop
dec
and
in
sbb
xor
adc
shrl
jl
inc
incl
iret
std
lods
mov
xchg
xchg
outsb
lods
sahf
das
xor
fisubl
mov
cmp
popf
lods
mov
cmp
sbb
int3
fildl
roll
hlt
js
jo
mov
js
sub
jmp
mov
insb
xchg
xor
in
cltd
rclb
scas
push
stc
hlt
sub
movsl
cltd
leave
in
push
mov
ds
dec
cmpsl
icebp
jecxz
sbb
decb
jge
cmp
lds
xchg
adc
adcb
decl
adc
cmpl
mov
lahf
pusha
push
iret
inc
and
xchg
or
cmp
dec
push
add
dec
mov
sub
jge
js
jne
jns
push
fisubs
sub
out
inc
mov
inc
add
dec
mov
mov
int
fucom
dec
adc
add
mov
scas
dec
jge
sub
pop
dec
das
push
int3
push
ficompl
fdivrs
les
pop
xor
add
outsb
cmp
adcb
jb
lds
repz
addr16
enter
jp
mov
in
jl
loopne
aaa
xchg
mov
pop
fisubs
dec
pop
jecxz
mov
std
jae
icebp
in
fs
data16
xor
pop
aam
and
mov
sbb
inc
jbe
into
and
push
arpl
mov
cmpl
fstpt
mov
push
sbb
loopne
mov
cmpsl
in
sbb
std
xchg
test
dec
jecxz
or
pop
aad
mov
into
inc
es
jg
jl
insb
add
mov
xor
xchg
movsb
jo
add
fldenv
les
out
sbb
fbld
scas
ds
and
mov
sub
xlat
mov
ljmp
push
cmp
pop
or
call
push
subl
clc
int3
dec
stos
out
lock
outsb
test
lret
cwtl
sbb
call
insb
outsl
je
shll
rolb
pop
daa
push
push
mov
daa
add
adc
rcll
fwait
icebp
loopne
loop
adc
jl
xchg
inc
lods
sbb
jb
lea
movl
scas
mov
mov
ljmp
icebp
sahf
popa
lods
pop
cmpsb
xchg
jge
add
lds
iret
scas
mov
clc
pop
sahf
data16
mov
sub
xchg
inc
pop
int
fs
jecxz
mov
or
jo
mov
pop
sbb
mov
cmp
int
popf
ljmp
pop
pop
jl
out
rorb
jb
outsl
adc
pop
mov
arpl
mov
aaa
adc
push
pushf
jno
add
adc
movsb
clc
mov
inc
jle
mov
je
xchg
subl
inc
sbb
ja
dec
mov
and
push
mov
mov
cmpsb
movsl
jns
adc
push
shll
mov
cmp
fsubl
pop
push
repnz
gs
shlb
das
mov
int3
inc
pusha
adc
sub
out
xor
stos
shlb
or
int
out
mov
popf
icebp
inc
adc
pop
xchg
inc
xor
or
data16
aad
jp
jl
cmp
shr
xchg
xchg
outsl
xorl
test
jl
outsl
jnp
jecxz
and
mov
leave
sbb
mov
jns
aaa
insl
mov
push
fyl2x
ja
aam
adc
fstpt
sub
jae
or
inc
ja
push
js
jmp
sbb
and
and
sahf
push
rcr
imul
push
push
xlat
cli
pop
ljmp
dec
push
pop
iret
dec
fst
jae
push
xor
xchg
or
and
xchg
lea
fbstp
jo
movsl
lldt
aad
mov
ljmp
fistl
jbe
das
and
int
out
pushf
mov
sub
call
xchg
dec
xor
mov
fs
popa
jmp
icebp
jbe
inc
daa
dec
out
aaa
stos
sbb
mov
or
mov
fisubrl
stos
call
testl
pop
test
rorl
jns
jne
loope
adc
aad
sti
mov
js
pop
in
les
ljmp
mov
popf
jmp
mov
and
fwait
test
into
pop
fldenv
dec
movsl
popf
and
stos
ret
aad
les
ret
movsb
xchg
pop
es
fs
test
push
mov
mov
cmp
das
sbb
popf
jns
subl
fistpll
in
lahf
insb
je
pop
dec
inc
pushl
xchg
in
aas
or
cs
pop
mov
pop
jmp
loope
inc
push
mov
xor
and
aaa
repz
cmp
and
lds
out
imul
fbstp
es
jecxz
mov
movntq
out
or
mov
push
pusha
push
fstpl
pop
lea
sti
or
cmp
leave
hlt
inc
aad
or
xor
inc
out
out
pop
inc
ret
xchg
popa
fstps
sbb
pusha
mov
andl
loope
lret
sbb
sti
xchg
ljmp
test
push
jp
push
mov
xor
push
insb
fnstsw
inc
and
sub
mov
inc
pmaxub
mov
inc
in
rorb
xor
fidivrl
fisubrl
xor
pop
inc
in
outsb
fnsave
jne
call
lret
jecxz
push
in
hlt
shrl
cmp
add
mov
vsubsd
int3
mov
mov
and
push
mov
or
push
lock
xor
stos
lcall
imul
rorl
cwtl
repz
inc
fcompl
into
mov
inc
jge
rcrl
popf
dec
scas
mov
mov
cmpb
test
mov
adc
push
fisttpll
sub
or
fs
cmp
and
test
mov
dec
xchg
inc
hlt
push
push
mov
sbb
and
and
push
sarl
push
popa
cmc
push
lds
sub
cmp
mov
fstp
mov
cld
shlb
pop
and
mov
lock
test
mov
jne
mov
xor
cli
jne
in
mov
and
adc
adc
movsl
lret
aam
not
aad
mov
test
adc
scas
cmpsb
mov
lret
out
in
jne
popa
shll
outsl
mov
enter
dec
push
inc
call
insl
aad
icebp
pop
jno
shlb
cmpsb
es
insb
add
inc
xchg
inc
dec
cmp
test
das
out
push
mov
sub
mov
pop
inc
xor
or
loop
pop
fs
in
fildll
xchg
fstpl
shlb
dec
pop
test
xchg
stc
stc
mov
push
fcoml
xchg
jb
mov
cmpsl
inc
add
add
add
int
lret
pusha
shll
movsb
inc
xor
popf
pop
pushf
test
xor
xlat
pop
jecxz
cmp
fwait
imul
xor
inc
stos
dec
and
in
xlat
stos
js
push
dec
jge
outsl
cmp
clc
jae
or
enter
sbb
mov
lret
add
les
xor
imul
ds
or
pop
xchg
or
addb
into
push
pop
mov
push
sub
sbb
adc
int
inc
movsl
rcr
xchg
or
clc
cltd
lahf
or
jb
icebp
aas
and
inc
xor
mov
pop
mov
adc
out
mov
lods
and
push
rcl
inc
xorl
push
sbbb
push
or
aad
push
mov
out
pusha
mov
mov
fsubs
xor
orb
mov
fdivr
aam
mov
in
mov
ljmp
cmovge
sub
cmp
pop
rclb
cmp
push
nop
dec
xor
jg
mov
sub
aam
sbb
xor
cmc
and
aam
add
mov
push
scas
push
inc
pop
pushf
stos
mov
sub
mov
bound
mov
sbb
movsl
lret
adc
fsubrl
mov
cld
xor
pop
jl
sti
daa
stc
ja
mov
mov
daa
aaa
sarb
fadd
testb
mov
add
xor
mov
cltd
jno
iret
sub
dec
sub
das
insl
lea
cmpsb
mov
mov
add
lds
int
push
shr
lcall
push
xchg
add
xor
pop
and
add
adc
adc
dec
scas
push
fists
jns
and
jmp
roll
lcall
and
scas
fistps
mov
lea
aas
cmp
xor
jg
je
mov
adc
mov
shrl
ljmp
jb
xchg
in
xor
adc
dec
mov
imul
aas
sbb
std
mov
hlt
xor
push
insl
popa
loope
push
daa
push
push
rolb
pusha
jg
shrl
mov
lods
or
mov
mov
mov
cmc
dec
mov
mov
loopne
sub
mov
xchg
push
in
or
data16
out
mov
loopne
sub
pop
cmpsl
addb
xorb
pop
lods
loopne
jg
ss
inc
jbe
outsl
sbb
or
pop
out
push
orl
out
mov
or
add
push
mov
mov
push
clc
sbb
cmp
jo
mov
sahf
jp
fisttpl
scas
lods
jp
test
decl
andl
push
push
jnp
fcmovnbe
fdivrs
cmp
jns
popa
inc
rcl
out
rcll
or
pop
rol
adc
jno
push
fidivs
aam
insb
sarl
fbld
int
mov
out
es
mov
aas
call
or
in
or
mov
mov
inc
mov
in
pop
adc
sbb
les
mov
enter
mov
dec
lds
loope
rorb
inc
inc
push
cmc
mov
pop
adc
cmpsl
inc
ficompl
ja
fcomi
push
pop
lds
push
rclb
sbb
iret
mov
xor
xchg
out
fldenv
mov
cmpsl
rorl
xchg
adc
scas
cmp
jl
divb
mov
mov
mov
sbb
sbb
push
adc
push
lea
gs
fnstsw
out
mov
loop
mov
mov
cmp
adc
sti
scas
sub
push
mov
dec
xchg
sbbl
bound
in
add
mov
aam
sub
fnstsw
mov
pop
ja
cs
jmp
add
sahf
addr16
cmp
enter
xor
repnz
repnz
adc
cmc
mov
repz
xor
mov
mov
aas
sub
push
or
mov
mov
sbb
xorb
fadds
xchg
jl
mov
mov
div
sbb
xchg
add
sub
xchg
jbe
push
lret
fs
sti
lahf
add
jg
jecxz
fucom
lods
adc
in
jns
scas
inc
test
adc
jecxz
pop
sbb
mov
shrl
int
sub
call
fistpll
dec
cmpsb
rcrl
pop
inc
pop
stc
jmp
out
jp
jge
mov
cmp
xor
enter
xchg
add
lahf
test
push
les
hlt
inc
xchg
movsb
dec
std
push
sbb
sahf
sub
cmpsb
add
dec
daa
pop
rcll
pusha
push
push
mov
out
xchg
adc
sbb
push
or
adc
lret
pop
mov
nop
call
push
movsl
xchg
lea
pop
add
scas
push
pop
fwait
xor
mov
sub
mov
mov
std
mov
fdivrl
adc
sbbb
pop
iret
jno
push
push
jp
sbb
lcall
imulb
mov
pop
cli
push
xor
pop
fstl
test
push
in
out
or
jle
jge
pop
add
fisttpl
popa
jns
xchg
es
push
lea
movsb
inc
repnz
push
js
movsl
fdivrl
mov
mov
in
or
inc
sti
test
inc
pop
cld
and
in
jae
jle
les
xor
and
xlat
dec
xor
and
sahf
je
icebp
mov
lahf
push
sbb
or
roll
pop
push
sti
std
pop
or
jno
xchg
sahf
cltd
ja
xlat
inc
xchg
fdivp
loop
xor
js
inc
idivl
adc
mov
out
jg
xchg
pop
add
jae
xchg
and
jmp
and
test
mov
and
pop
pushf
stos
cmp
push
dec
jge
mov
adc
into
jno
loope
xchg
movsb
inc
enter
xchg
aad
sbb
jns
cmpsl
cmp
cltd
lea
fsts
fisttpll
sub
lea
idiv
mov
lahf
and
adc
adc
mov
sub
cmpsb
lods
in
cltd
pop
mov
pushf
push
inc
js
inc
fstps
or
mov
fistps
sub
and
jnp
fdivs
aaa
daa
psrld
push
jl
dec
mov
mov
lcall
gs
ljmp
push
xor
push
or
test
dec
xor
fisttpll
test
cmp
dec
mov
inc
cli
mov
xchg
or
lods
repz
cmp
push
jo
cmp
roll
jp
ret
aad
enter
push
xor
testl
add
aam
dec
and
or
mov
mov
jmp
fdivrl
sbb
mov
mov
sti
pop
push
stos
add
inc
pop
lahf
push
popa
rcll
inc
and
mov
jl
jo
scas
and
insl
mov
mov
inc
mov
mov
sbb
insb
and
pop
dec
aad
lods
adc
push
mov
add
add
pop
loope
mov
lea
dec
xorb
arpl
jle
fmul
add
jg
xchg
xchg
je
push
pop
mov
adc
mov
cltd
jae
into
repnz
sbb
push
aaa
mov
sub
call
xor
adcl
fidivs
mov
mov
dec
loope
fcoml
insb
jnp
in
dec
push
loop
push
inc
push
fisttpll
xor
in
sbb
add
imull
daa
test
pinsrw
push
pop
push
scas
fst
mov
cmc
flds
xchg
cld
lret
or
sahf
frstor
jle
and
mov
fbstp
iretw
xchg
sbb
xchg
cmp
sub
push
imul
lods
jp
test
jecxz
das
mov
inc
xlat
fwait
push
or
sahf
mov
movsl
cmp
sub
sbb
add
sbb
inc
les
je
jp
xor
fcomps
or
pushf
add
idivl
inc
je
jbe
in
pop
dec
or
cmp
icebp
int3
inc
adc
push
jl
hlt
testl
fwait
cmp
fbstp
rcll
sub
sub
xchg
cmp
aam
mov
pop
pop
mov
loopne
dec
or
jne
xchg
sahf
repz
sub
popf
loopne
enterw
mov
insb
xchg
push
pop
xchg
lahf
or
fld
lods
cmp
inc
xchg
jo
jecxz
sub
jmp
rcr
mov
mov
xor
int
fnstcw
xchg
sar
insl
fcom
pusha
addr16
jge
xor
aaa
ja
jg
insl
das
xchg
cmpsb
and
push
in
push
outsb
out
shll
push
push
mov
mov
nop
adc
ja
cmpsb
inc
pop
mov
sahf
sahf
roll
and
mov
mov
insb
rolb
lods
dec
cmp
mov
popa
inc
jge
lods
push
sbb
and
ljmp
adc
scas
test
xor
add
push
dec
and
repnz
ss
adc
xchg
pop
es
sub
loope
cmp
test
loopne
js
push
or
in
popf
les
push
xor
xchg
cmpsb
and
pop
xlat
add
sub
test
lret
push
mov
cmp
dec
mov
addr16
aaa
addr16
adc
pop
popf
push
mov
fldt
push
jl
fldcw
cmp
sub
xlat
or
lea
xor
pushf
mov
shll
mov
jns
lods
or
sbb
adc
lahf
fwait
repz
push
popa
push
outsl
lcall
cmp
cmp
roll
int3
push
repz
adc
xor
in
xor
and
inc
idivb
scas
scas
ror
pop
out
mov
filds
pop
mov
lods
jle
sbb
adc
mov
jmp
pusha
lds
mov
sahf
cltd
xchg
add
aas
into
jae
pusha
and
mov
push
sahf
pop
inc
loopne
add
es
sbb
sbb
cmp
dec
and
dec
dec
cmp
cmpsb
push
jo
ss
xchg
rcrb
inc
mov
xchg
outsb
dec
cmpsl
dec
lret
lahf
insb
or
add
cmp
data16
in
mov
or
xchg
mov
and
daa
addr16
data16
cmp
lret
mov
mov
pusha
andb
mov
addl
repz
arpl
jo
adc
sarl
and
popa
into
sahf
cli
mov
imul
andb
dec
movsb
sti
xor
mov
xor
and
push
loop
add
leave
fsubs
jnp
in
aam
in
and
add
stc
or
ret
outsb
sub
mov
mov
cmpsl
pop
ror
fwait
lds
xchg
mov
pushf
add
jo
jbe
insb
lods
xchg
dec
mov
mov
loopne
sar
nop
push
or
inc
fwait
data16
push
pop
push
out
sbb
and
dec
repnz
push
mov
mov
je
sbb
xor
sti
fs
mov
andl
xor
dec
xchg
roll
cmp
and
cld
mov
push
jne
adc
pop
xor
lds
lahf
adc
add
ret
stc
xchg
sahf
cld
pop
fldl
mov
ret
jle
jno
stos
ljmp
repz
dec
push
xor
jge
rcrl
jnp
mov
in
xchg
in
pop
ja,pn
popf
pop
sar
addr16
fcompl
mov
cmp
movsl
fcoml
repnz
xor
cmp
test
repnz
pop
shlb
loopne
std
popa
hlt
cld
lret
sub
js
outsb
movsl
daa
pop
mov
movsb
pop
nop
xor
lock
mov
aam
in
jp
shll
dec
and
cmp
adc
aam
and
push
and
popf
pop
mov
sub
sub
xchg
es
dec
push
popa
stos
dec
clc
and
jmp
inc
jecxz
mov
adc
xchg
add
in
imul
arpl
or
jae
hlt
or
mov
in
inc
sub
jns
add
adc
mov
les
pop
push
cmp
mov
xchg
mov
xchg
stos
inc
rcll
adcl
lds
xchg
mov
adc
inc
mov
fiadds
inc
pop
jnp
cli
fdivrl
adc
cmc
sarl
mov
stos
cli
sbb
fwait
cmp
push
jae
sarb
mov
or
fstl
idivl
mov
push
push
lret
cld
scas
mov
je
pop
imul
or
and
push
sti
in
lea
es
mov
sbb
sub
inc
shl
cmp
mov
sahf
xor
imul
mov
arpl
divl
jmp
adc
divb
mov
in
xchg
or
test
dec
ret
sub
push
cmp
inc
aas
or
clc
lcall
jo
ret
fistl
dec
mov
scas
fcmovu
cmp
movsb
push
data16
pop
pop
pop
jb
xor
and
pop
lcall
dec
inc
cmc
or
fwait
sub
out
cmp
jecxz
pop
xchg
mov
and
fstpt
push
addl
test
and
dec
stos
and
push
pop
js
lea
sub
pop
int
repnz
int
icebp
add
out
cmp
ret
jp
xchg
sbb
mov
pusha
cwtl
ja
dec
mov
js
int3
scas
insb
cwtl
add
test
mov
jl
jb
push
mov
ljmp
ret
mov
into
and
sub
mov
and
pop
pop
inc
popa
mov
enter
rol
add
sub
out
push
pop
jb
sub
sub
pop
push
pop
adc
push
cs
sbb
dec
push
mov
icebp
sarb
cmp
pop
rcr
sti
push
enter
mov
pop
mov
cld
stc
jns
ljmp
fld
lret
outsb
jl
add
bound
fisttpl
cmp
or
sub
pusha
mov
jns
iret
ljmp
shld
and
sub
lock
xchg
add
ret
add
sub
mov
cwtl
xchg
pushl
das
push
pusha
paddq
into
fidivs
push
mov
jno
out
xor
int
sbb
aam
unpcklps
loopne
outsb
mov
or
push
mov
and
lock
dec
sbb
inc
icebp
shrb
insb
sti
loop
inc
pop
cmpsb
lock
loope
add
pushf
out
cmpl
xor
mov
fsubrs
dec
mov
pushf
push
jno
fistpl
mov
shr
mov
fcoml
mov
mov
mov
lcall
push
inc
mov
fstpt
or
ss
and
pop
mov
xor
scas
test
mov
bound
adc
or
xchg
sub
ret
push
pop
and
in
push
in
dec
fnstcw
push
xlat
or
push
mov
inc
push
mov
pop
dec
add
push
inc
pop
inc
ds
leave
jnp,pn
sub
lahf
jl
aad
xchg
pop
icebp
test
jnp
pop
lods
mov
sub
sahf
and
add
hlt
insl
xchg
lcall
jp
inc
mov
inc
idiv
test
ja
pop
dec
pop
xor
lcall
mov
das
les
pop
andl
cmpsb
out
mov
imul
adc
popa
test
mov
mov
dec
mov
add
nop
cmp
aam
sti
call
lds
insl
sub
jle
out
pop
sub
sub
mov
lods
push
fnstenv
outsb
mov
xchg
add
or
push
sbb
in
adc
mov
inc
sub
jp
es
mov
aam
addl
lahf
cmp
jge
cltd
insl
icebp
nopl
clc
pop
sarl
dec
fmuls
add
dec
cmpsb
lcallw
xor
test
lds
and
add
aam
sbb
adc
pop
out
into
roll
mov
popa
xlat
stos
xchg
mov
inc
repz
movsb
mov
inc
sub
xchg
inc
adc
repnz
add
test
fwait
fs
add
xor
out
cmc
and
outsb
movsl
mov
cmp
xchg
xlat
fildl
insl
xchg
ret
mov
adcb
jg
mov
cld
adc
push
mov
mov
and
dec
aaa
aas
test
loope
pop
loop
sub
je
or
inc
leave
sbb
or
pop
inc
out
pop
scas
adc
mov
hlt
push
ret
fwait
mov
test
pop
andl
sti
mov
pop
cli
orl
int
dec
fisubl
cmp
add
push
loope
inc
inc
test
lds
gs
cmp
pushf
arpl
xor
ss
jne
out
inc
ret
sbb
and
loope
nop
cmp
pop
mov
xor
push
movsb
subl
sbb
or
mov
mov
inc
cwtl
leave
nop
sahf
sub
ljmp
sub
cmpsl
adc
sti
push
pop
fistps
adc
loop
cli
add
fcmovnbe
mov
add
jge
movsb
mov
or
pop
stos
xchg
mov
xchg
fsubs
xor
xor
inc
rcrl
jge
and
cmp
adcl
add
sub
xor
add
pop
clc
or
push
mov
sbb
nop
sub
xor
and
inc
xchg
mov
dec
mov
lcall
sub
cs
pop
add
push
sbb
pusha
test
pop
mov
pop
sahf
hlt
ret
scas
rorl
xorl
ljmp
repz
aas
fstp
sub
lret
pusha
pop
add
and
add
mov
addr16
dec
and
ljmp
popw
or
sbb
shl
jecxz
repz
xchg
lock
inc
mov
ret
cs
push
test
push
stc
cmp
daa
mov
add
cmc
xchg
dec
or
fnstenv
mov
cmp
iret
bound
lahf
fs
adc
les
lea
addr16
out
lods
dec
aad
shrb
in
repz
popa
add
xchg
mov
adc
imul
sub
push
cmp
push
aas
int
cltd
add
ljmp
xor
iret
les
push
popa
jno
lcall
repnz
cmp
mov
cmp
push
adc
out
lret
and
dec
mov
add
and
mov
inc
ss
mov
push
sub
jp
lea
cltd
out
mov
les
inc
sub
xchg
or
xor
fwait
push
fisttpl
addr16
idivb
and
add
mov
out
into
and
or
ret
clc
dec
push
std
mov
int3
cmpsl
jae
fildl
jle
mov
add
cld
jecxz
mov
inc
push
aam
adc
aad
add
push
mov
pushf
jne
lret
lret
xor
or
mov
repz
xor
call
outsb
aaa
repz
out
rolb
aam
push
push
aas
dec
or
xor
xchg
cmc
mov
dec
or
or
andb
push
aaa
jp
or
xchg
outsb
sub
hlt
add
xchg
test
lcall
jge
les
dec
cmp
and
test
mov
ret
shrb
leave
imul
pusha
sub
adcl
xor
inc
mov
stos
add
int3
pop
popa
mov
std
outsl
mov
pop
sbbl
mov
mov
sbb
fdivrs
inc
lock
add
sbb
mov
pushl
push
adc
out
adc
fstps
cmp
adc
sub
fists
push
xor
or
rcrl
loop
iret
pop
mov
movsb
cli
fldt
std
and
packuswb
dec
in
inc
sti
cltd
add
cmp
pop
into
js
push
mov
jb
movl
ds
inc
mov
add
lods
jle
testl
pop
mov
nop
rolb
mov
jmp
adc
fistpll
cli
pop
inc
aas
fsubr
jno
add
cwtl
lret
aad
xchg
jb
jb
out
imul
mov
lret
and
xchg
outsb
xchg
adc
inc
rclb
test
daa
xchg
pop
andb
out
xor
jno
call
and
cmp
mov
scas
negl
mov
jge
dec
insl
dec
cmp
aaa
movsl
lret
cmp
mov
fnstsw
xor
pop
rcll
pop
sti
push
or
xlat
mov
dec
fsubrp
popa
into
scas
pop
adc
sbb
mov
xor
mov
out
ja
addr16
adc
xlat
sbb
notb
sub
std
ffreep
out
add
sub
icebp
repnz
mov
testl
bnd
mov
mov
xor
movsl
bound
aaa
in
in
hlt
jmp
jnp
rclb
jno
out
cmp
cmp
jecxz
std
popa
add
cmpsl
fcoml
shlb
lea
add
jle
pop
ljmp
dec
pop
shll
das
or
lahf
cmp
mov
aaa
in
data16
roll
pop
mov
popf
jne
and
pop
movb
or
lret
lea
xor
movsb
lds
lea
push
sahf
sahf
sbb
loope
ljmp
or
cli
xchg
shl
jecxz
sub
in
aas
dec
dec
lret
inc
cs
fsts
pop
ret
sbb
pushf
lods
inc
cmp
shlb
jb
lds
in
and
dec
daa
mov
lcall
push
movsb
dec
sub
inc
stos
adc
jp
sbb
cli
movsb
sub
inc
pop
orl
lahf
cwtl
mov
rcll
scas
mov
mov
mov
shrl
sbb
push
dec
pop
sbb
sbb
pusha
sub
in
cmp
cmp
mov
loopne
pop
add
and
pop
sub
sbb
dec
inc
rolb
mov
pop
lcall
idivb
imul
insb
fstps
xchg
xchg
mov
pop
bound
enter
subl
cmpsb
mov
push
outsb
xlat
jmp
xor
xchg
xchg
icebp
xor
xor
out
mov
sub
rorl
dec
adc
dec
add
adc
adc
mov
popf
pcmpgtd
dec
add
stos
pop
out
loop
sub
xchg
add
addr16
jb
fnstsw
inc
mov
push
stc
jl
movsb
lret
pop
jne
shr
shll
inc
dec
test
cmp
fucomp
sub
mov
in
xor
push
add
sbb
or
and
pop
enter
lock
add
pop
sub
jmp
jo
es
push
adcl
pop
imul
cld
lret
mov
dec
data16
fstpl
add
adc
and
inc
or
lcall
xbegin
pushf
sub
and
fldl
xchg
pop
dec
sub
cmpb
push
mov
mov
inc
aas
cmp
mov
adc
fmul
sub
jmp
push
fmuls
mov
aaa
out
inc
pop
mov
mov
jne
mov
sub
sub
popf
push
jle
inc
add
sti
in
dec
xor
mov
xor
mov
cmp
ja
inc
cli
fwait
push
xor
xchg
lcall
pushf
cmpsb
inc
jo
dec
adc
pop
imul
mov
push
stos
je
movsb
aam
jo
shll
mov
imul
adc
jo
mov
sahf
mov
dec
jge
sbb
mov
lret
pop
lcall
xor
jle
lds
add
je
mov
test
imul
xchg
in
and
push
mov
xchg
mov
inc
lret
inc
xor
fs
cmp
test
sarb
add
lea
iret
adc
jo
dec
nop
inc
fsubs
sbbb
inc
pop
andb
bound
lretw
out
jmp
movsl
mov
mov
ss
stos
int
push
add
cmp
jg
xor
and
popw
jno
and
nop
pop
loope
inc
xchg
ja
mov
mov
sti
push
sbb
sahf
lods
cwtl
sbb
into
cmp
pop
jo
and
mov
ja
out
push
fcomps
push
cld
loope
call
adc
xchg
jp
jne
aam
int
sub
daa
cmp
pop
testl
scas
xchg
push
jmp
xchg
test
lcall
cmp
pop
arpl
sbb
out
shl
test
fsubrl
ss
mov
lahf
pop
sbb
cmc
mov
lahf
jno
mov
xchg
xchg
stc
in
pop
or
into
ja
adc
add
daa
in
adc
push
ret
outsl
outsb
cmp
and
les
push
cltd
imul
push
rclb
popa
dec
mov
jge
fldenv
cmpb
cmpsb
cmpl
frstor
or
pop
pop
int
lds
mov
push
sub
jmp
int
xor
fistpl
jns
out
loopne
or
adc
scas
faddl
mov
add
cmp
mov
cmp
inc
or
inc
lret
jl
aaa
mov
imul
dec
ret
and
mov
push
lock
mov
lods
inc
cmpsb
ds
ja
mov
jge
mov
sbb
into
stos
cmpb
mov
mov
pop
dec
daa
data16
sub
in
subl
jge
fmuls
inc
jns
xchg
xchg
fsub
pop
sahf
cli
pop
das
mov
mov
push
in
pop
lock
in
inc
jg
adc
adc
lret
fistpl
rcrb
mov
adc
dec
sbb
or
adcb
lods
int
or
dec
push
push
stos
sub
xor
mov
outsb
xor
adc
adc
gs
mov
mov
xlat
mov
xchg
lcall
cmpsl
fsts
jmp
inc
outsl
mov
mov
dec
push
cmpsl
jecxz
fdivrs
push
repnz
lock
jl
test
cmp
pop
mov
or
cmp
sub
adc
cwtl
pop
in
clc
sahf
fs
fcoms
mov
shlb
mov
add
inc
xlat
insb
adc
adc
pop
add
aas
dec
adcl
out
fiadds
iret
insb
xor
push
cmc
dec
xchg
outsb
jmp
aaa
loopne
out
data16
inc
scas
or
into
icebp
outsb
and
loopne
divl
out
cmp
rcrl
push
adc
xchg
mov
mov
stos
push
popa
aad
fsubp
push
lock
or
out
cs
outsb
shl
push
adc
and
shll
xor
and
jg
xlat
pop
cld
loop
push
scas
rclb
and
and
mov
push
xchg
fisubs
jle
pop
lcall
mov
inc
lahf
mov
mov
and
dec
mov
inc
sbb
dec
cmc
and
sub
cld
call
shlb
inc
push
mov
lret
mov
popa
jg
imul
or
cltd
scas
fisubs
ret
pop
cli
int3
jmp
fcompl
test
cld
sti
ret
fbstp
cmp
xor
addr16
mov
scas
stc
iret
pop
repnz
pop
in
jno
mov
icebp
jg
jge
enter
xchg
out
sarl
movsb
mov
inc
into
test
movsb
jmp
sub
dec
mov
rclb
shll
and
xchg
adc
push
pop
decl
gs
movl
adc
insb
jle
popa
test
int3
lds
push
cmp
xor
repnz
repz
dec
cmpsb
xchg
cld
xor
cmp
adc
mov
les
mov
sbb
xor
mov
pop
std
pop
lea
xchg
imul
inc
outsb
add
inc
push
loop
ret
rolb
pop
test
sub
adc
pop
push
test
sarb
daa
bound
decb
mov
push
cmp
mov
add
out
sub
xlat
lock
sbb
idivb
dec
in
cmpsb
inc
add
in
fstps
mov
xlat
push
shrb
xchg
sub
pusha
loopne
outsb
lcall
pop
cmp
pop
fisubrl
faddl
insb
inc
push
xlat
add
push
mov
fwait
xchg
push
jbe
lock
mov
icebp
or
xchg
pop
and
push
lock
add
stos
pusha
int
shlb
out
and
pop
add
or
push
test
icebp
daa
sub
lds
cwtl
pusha
xor
and
xchg
jbe
jne
iret
xor
mov
icebp
sbb
bound
jo
dec
insl
dec
mov
cmp
cmp
lods
stc
fwait
inc
mov
fistpll
jecxz
cmp
cmovs
or
pop
bound
notl
add
rcl
shr
mov
cmp
in
mov
xchg
add
cmpsl
inc
sarb
adc
push
sub
fs
lahf
cmp
pop
mov
add
nop
aaa
ljmp
pusha
insl
insb
inc
out
dec
out
pop
dec
mov
ss
stos
nop
enter
jl
dec
sbb
sub
mov
mov
movl
imulb
scas
lret
into
in
mov
xorb
and
or
aaa
sub
popf
pavgw
mov
xlat
popf
loop
xor
imulb
fsubr
gs
jo
jl
rorl
mov
aad
fstps
and
sub
adc
stc
sub
int3
sbb
es
push
nop
out
sarb
sbb
jno
jecxz
adcb
outsb
pop
lahf
das
loop
pop
pop
mov
psrad
jnp
fidivrl
and
push
cmp
inc
and
cmp
adc
xor
sbb
push
addr16
mov
dec
cmp
jmp
repz
mov
lods
dec
mov
mov
or
sbb
lds
inc
fcomps
ret
sbbl
div
nop
lds
jno
add
flds
xchg
int3
cmp
xor
jns
addl
push
in
andb
cmp
sbbb
sbb
dec
inc
cld
fsubs
add
or
cmp
and
jnp
outsl
mov
ds
fwait
adc
mov
mov
jl
cmpb
jno
cltd
das
mov
jge
sarl
in
and
test
jb
ss
mov
in
hlt
rorb
mov
push
rcl
orb
fmulp
ljmp
pusha
jno
aaa
add
and
xchg
jno
pop
mov
enter
cltd
rcll
lods
sub
mov
add
mov
xchg
ds
sub
into
icebp
add
jge
int3
add
adcl
mov
mov
inc
pop
daa
pop
hlt
xlat
enter
or
inc
sub
scas
pop
loopne
xchg
loop
sub
mov
out
je
pusha
mov
je
les
aas
out
icebp
pusha
sbb
or
fwait
stos
adc
xchg
pusha
pusha
adc
sub
xchg
int
lea
cmpsl
pop
sbb
hlt
insl
enter
dec
aad
mov
jp
adc
aam
aaa
mov
loop
mov
fnstenv
mov
sub
push
inc
mov
roll
js
mov
fisttpll
and
and
pushf
jmp
add
adc
fistpll
inc
ficoml
jnp
pop
aam
mov
pushf
icebp
xchg
jl
mov
push
mov
cmp
insl
and
aam
in
sbb
push
xchg
enter
add
mov
push
push
sub
nop
mov
ds
cmp
adc
dec
jp
into
cmp
xchg
xor
test
insb
jb
cmp
xchg
mov
arpl
fstpt
jmp
imulb
xchg
sti
dec
pop
adc
sti
out
mov
cli
cmp
lret
mov
jg
frstor
das
call
xlat
outsl
cmpsl
in
and
jbe
adc
and
pop
shll
dec
sbb
das
minps
cmp
lds
xchg
sub
add
jo
mov
pushf
inc
xchg
mov
push
pop
bound
xor
cltd
and
outsl
mov
shll
pop
mov
ljmp
mov
cmpsl
jge
mov
xor
insb
fcmovbe
xchg
enter
xlat
sbb
ret
xchg
movsl
loopne
stos
in
sbb
xchg
mov
jp
insl
cs
pusha
cltd
js
fcmovb
mov
mov
mov
sarb
pushf
adc
aaa
cmpsl
enter
pop
sbbb
mov
icebp
loopne
xor
dec
jne
out
mov
xchg
rorb
push
out
arpl
dec
cmpsl
jmp
aad
mov
daa
jne
sub
sub
mov
testl
insb
xor
cmpsb
outsl
out
test
xchg
fwait
inc
and
cmp
jp
rcrl
push
pop
ja
push
xor
dec
xor
inc
rcrl
mov
movsl
je
arpl
mov
sbb
push
jmp
push
mov
sti
imul
std
sub
pop
cmp
sarl
cld
dec
xor
push
jle
inc
loop
sahf
in
inc
call
push
das
rolb
into
sbb
or
jns
ss
lret
mov
push
aas
sbb
fisubs
out
mov
push
push
mov
shrl
es
fisubrl
pop
sbb
sar
xor
adc
jge
xchg
sti
xchg
es
lret
imul
aas
jae
xchg
test
rcrb
cmp
loopne
psubb
insb
and
repnz
dec
test
sbb
pop
xlat
pop
sub
dec
pop
pop
cltd
mov
inc
cltd
pusha
add
enter
adc
call
sbb
in
push
sbb
mov
out
fistpl
sbb
jns
mov
and
sti
dec
hlt
cmp
jp
adc
lods
loop
les
or
sbb
test
jle
xchg
aas
sbb
mov
sti
pushf
sub
out
push
js
movsl
xchg
push
xor
lock
popa
jno
outsb
jp
and
xor
ret
sbb
icebp
arpl
dec
mov
addr16
mov
dec
adc
cmp
and
jp
mov
insl
push
or
add
dec
mov
or
sar
int
adc
cs
push
cli
int3
cmc
xor
pop
lret
icebp
inc
cmpsl
mov
pop
pop
dec
cld
pop
dec
adc
add
shrb
jne
mov
adc
pop
pop
out
xorl
addr16
ret
adc
sbb
pop
imul
pop
test
loop
xchg
lock
xchg
popf
stos
pop
lds
mov
insb
jg
jg
insb
add
mov
inc
sub
scas
or
jg
inc
dec
sub
arpl
dec
mov
sbb
mov
cmp
pop
add
fisubs
xchg
dec
movsb
jo
shlb
xchg
add
fsubl
bound
xchg
xor
adc
jno
aas
cli
fnstsw
arpl
add
enter
mov
xchg
pop
sub
movsb
sahf
sbb
sahf
add
xor
mov
xor
test
stos
je
xor
pop
jmp
cmp
paddd
scas
dec
aas
sub
jge
aam
mov
out
xor
ret
mov
adc
mov
push
push
daa
add
push
mov
movsb
rclb
push
push
jmp
sbb
lahf
insl
loope
adc
insb
cld
add
dec
mov
mov
mov
andb
mov
inc
jl
pop
mov
sub
stc
push
mov
or
mov
dec
or
pop
adc
jge
fcmove
imul
xchg
repz
sti
stc
popf
cmpsb
arpl
shlb
xor
ficoml
adc
xlat
inc
jae
movsl
shrl
jbe
lret
xchg
push
cwtl
mov
jns
dec
xchg
shll
xchg
shrb
cli
movsl
pop
dec
xchg
mov
mov
mov
mull
push
aad
fistpll
push
fiadds
push
dec
int
dec
mov
sub
or
std
sub
mov
mov
sub
add
pop
or
jne
pop
cmp
dec
and
or
sub
xor
loope
das
cmp
arpl
lret
lock
lods
popf
ds
into
test
fiadds
in
mov
out
ds
mov
lret
arpl
cmp
or
push
pop
vpcmpgtd
scas
mov
test
push
lods
jl
push
xchg
addb
dec
aaa
push
mov
sbb
in
fs
loopne
xchg
fisubrl
dec
add
or
and
or
push
mov
cmp
rcrb
out
inc
add
fstpl
insb
mov
xchg
ret
gs
xchg
pop
test
rcl
and
ret
and
cmp
data16
jmp
push
test
adc
cmp
mov
and
scas
fsub
es
xchg
push
xchg
dec
xchg
inc
iret
icebp
sbb
sbb
jl
and
push
add
into
xlat
xchg
mov
ljmp
stos
lret
jmp
out
inc
add
sub
movsl
daa
divb
mov
lods
adc
test
leave
rclb
and
lcall
xchg
push
daa
xchg
mov
jne
mov
std
push
bound
dec
push
ror
xor
dec
push
pop
out
aaa
divb
push
fnstsw
pop
scas
ljmp
popf
sbbl
scas
add
decl
imul
xchg
fwait
and
push
push
lods
repz
inc
stc
insl
mov
mov
aam
sti
xchg
hlt
or
or
lock
ss
imul
int3
pop
pop
dec
xchg
sbb
jp
sbb
sub
push
mov
sbb
out
add
ds
fdivs
push
test
data16
adc
jle
daa
loopne
sbb
jbe
sub
or
dec
fidivl
and
pusha
aam
sahf
xchg
or
sahf
dec
add
ljmp
rol
pushf
inc
std
cld
pop
lret
push
mov
xor
out
pop
aam
shl
scas
pop
imul
dec
neg
inc
dec
subl
pop
movsb
jge
fistpl
mov
jecxz
popa
pusha
mov
sbb
ljmp
jge
addr16
add
fwait
clc
cmp
xor
mov
mov
lea
pop
loop
mov
sbb
cmp
iret
push
mov
mov
dec
add
pmaxub
lret
popa
sub
leave
in
push
sub
or
xchg
inc
gs
sbb
jl
adc
mov
sub
shrb
mov
xchg
add
xlat
std
mov
sub
sub
cmp
mov
mov
adc
orl
and
jl
pop
pop
and
sub
insb
jp
scas
fmuls
mov
sub
cwtl
cmpsb
insl
into
and
iret
push
ljmp
out
pop
jnp
xchg
cmp
push
in
push
stos
mov
ret
outsl
fdivrl
jmp
loopne
rolb
lea
xor
or
jo
ljmp
nop
adc
popf
in
or
ds
aam
fs
les
leave
sbb
mov
loop
xchg
dec
add
xor
sti
std
clc
jns
pop
push
mov
aas
out
in
stos
popf
push
pop
mov
lods
jo
push
rcll
gs
loop
add
push
std
adc
dec
jle
cmpsb
jp
fimull
jmp
les
ds
scas
and
fmull
pop
movsl
dec
pop
xor
sbb
daa
les
mov
rolb
mov
mov
andb
data16
jg
add
cs
mov
and
lret
sbb
sub
in
xor
mov
mov
mov
out
pop
call
xlat
repnz
inc
pop
mov
lcall
lock
shrl
popa
xlat
lcall
sbb
orl
rcrb
lret
or
in
jmp
xlat
cmpb
es
and
je
push
mov
jb
mov
mov
cltd
repz
adc
pop
and
pusha
mov
cmpb
ret
dec
mov
jecxz
mov
aam
push
inc
cmp
jno
fisubs
cmp
sbb
mov
jb
cli
sbb
jno
pop
andb
jo
pop
adc
jbe
insl
jnp
inc
or
xchg
add
add
push
mov
pusha
mov
mov
movzbl
xor
mov
inc
dec
test
jne
popa
leave
ret
add
add
add
add
jb
push
mov
mov
add
lods
popf
and
mov
lods
data16
and
dec
jbe
pop
fldenv
punpckhwd
arpl
inc
lea
and
fs
sub
inc
and
push
and
cmp
or
sbb
imul
and
addl
dec
add
das
sub
push
or
daa
pop
cld
inc
mov
lock
cmp
outsb
dec
int
sub
push
mov
cmp
das
leave
shll
mov
outsl
aad
nop
movnti
push
mov
inc
xchg
xchg
loopne
lret
test
sbb
add
scas
xor
outsl
adc
rcl
sti
sub
jne
mov
dec
incb
ljmp
sub
adc
add
lds
and
leave
mov
pusha
cmpsl
cld
cmp
fwait
cmp
pop
xor
mov
adc
ljmp
mov
loopne
shl
cwtl
cmp
das
jg
insb
outsb
mov
adc
out
lock
mov
push
movsb
mov
mov
jo
lds
adc
cmp
aam
cmpsb
cmp
xchg
js
aaa
mov
pop
xor
add
mov
pop
fidivs
in
dec
call
adc
pop
cmpsl
jno
inc
jle
outsb
sbb
ds
jo
jns
idivl
mov
jp
jne
lcall
sbb
test
out
lock
es
and
std
cwtl
lods
out
mov
mov
and
adc
in
inc
aaa
test
push
pop
pop
or
sbb
roll
in
mov
mov
lcall
lods
xlat
cs
cltd
or
mov
pop
shrb
push
or
adc
lock
mov
ret
inc
frstor
repnz
lret
mov
int
pop
push
iret
nop
rorl
aaa
jns
xchg
sbb
inc
sub
push
stos
mov
adc
gs
pop
mov
frstpm(287
arpl
push
imul
mov
and
loop
cltd
les
adc
scas
leave
push
sar
xchg
sbb
jg
sbb
sarb
xchg
push
into
and
push
and
mov
add
xchg
rorb
js
lahf
pushf
jecxz
aaa
jmp
mov
dec
push
leave
test
mov
fists
and
push
js
jno
data16
sub
jmp
xor
push
dec
pop
repz
or
popf
sub
add
jmp
rcrl
dec
into
lods
push
jb
xchg
subb
mov
and
pop
fcoms
pop
ret
or
popf
push
enter
test
adc
mov
repz
add
jle
push
out
pop
push
push
mov
fidivs
pop
sub
adc
fdivrp
rep
add
xchg
inc
jmp
movsb
test
mov
or
add
sub
or
lret
push
push
rcrb
jb
push
jno
mov
pop
mov
enter
xchg
js
or
push
dec
mov
flds
mov
je
dec
add
js
pop
dec
cmp
cmc
and
xchg
or
sar
popa
add
jle
sub
cmp
sbb
jns
sarl
xchg
out
adc
jae
hlt
insl
push
mov
pop
push
stc
lret
xchg
std
call
imul
daa
sbb
jb
cmp
push
subb
hlt
mov
dec
adc
add
aad
movsb
mov
test
mov
loop
outsl
orb
clc
push
mov
push
jl
inc
jg
jmp
jbe
xor
sub
fsts
fld
mov
dec
es
scas
stc
movsl
pop
bound
add
enter
in
or
adc
hlt
mov
xchg
push
movsb
aaa
popfw
popa
stos
rcll
addr16
mov
hlt
daa
repnz
push
aaa
mov
cld
mov
dec
insb
jecxz
pusha
or
data16
sbb
int3
lret
sbb
xchg
popa
mov
xor
dec
pop
adc
test
je
arpl
test
cmp
pop
das
test
inc
scas
or
add
out
or
pop
js
lret
lock
outsl
data16
jno
mov
or
jno
clc
ds
aas
cli
or
ljmp
and
xchg
icebp
bound
outsb
sbb
jecxz
dec
adc
arpl
jbe
pushf
pushf
arpl
ljmp
jb
arpl
outsl
call
pushf
push
pushf
push
imul
ss
popa
call
xor
push
imul
popf
bound
ss
gs
insl
call
call
stos
mov
arpl
add
shrl
mov
inc
stc
dec
rol
mov
jle
jb
pop
iret
add
pop
gs
lret
imul
popf
inc
daa
pop
pusha
int
mov
sbb
lock
xor
pop
mov
sti
lahf
mull
popa
xor
ror
les
out
cltd
xchg
lcall
cmc
mov
jnp
idivl
loop
hlt
sub
push
jns
inc
dec
or
cli
xchg
mov
sub
shrb
xchg
pushf
data16
cmp
or
inc
loopne
dec
add
and
mov
movsb
gs
mov
stc
adc
mov
jmp
cmp
mov
dec
pop
outsb
cmp
push
jp
add
mov
std
sub
pop
and
test
jbe
shl
xchg
xor
cmp
sub
mov
bound
inc
jle
mov
mov
cmpsb
or
mov
sbb
imul
sbb
jo
and
jmp
enter
aaa
sbb
int
movsb
adc
in
mov
fisubs
push
in
pmulhw
mov
push
cmp
movsl
lcall
inc
scas
push
mov
iret
lea
and
or
jmp
xchg
jbe
pop
jmp
sbb
or
jmp
push
and
pop
addr16
adc
pop
or
add
addr16
xlat
dec
leave
xchg
jmp
pop
arpl
mov
dec
mov
fucomp
rcll
dec
lea
negb
pop
sbb
ret
xchg
rorl
and
cmpsl
push
fdivs
ss
cmp
cmp
inc
stos
and
cmc
rcll
jo
sahf
mov
sub
imul
pop
repz
xor
mov
push
les
mov
sbb
or
ss
mov
out
cmp
decl
cld
sub
mov
es
hlt
lcall
popa
xlat
jge
or
and
dec
cmp
adc
cmp
sbb
iret
push
inc
mov
in
sbb
pop
sti
xchg
sub
pop
sbbl
dec
into
pop
sbb
dec
call
aad
push
sbb
shlb
jo
aaa
and
xchg
ja
push
jns
pop
or
loopne
clc
in
mov
or
daa
jle
es
jne
aaa
pop
xchg
inc
push
mov
xor
outsl
pop
insb
sbb
xor
outsl
fs
xchg
mov
pop
cs
adc
imul
movsl
mov
inc
mov
mov
ret
sub
in
ss
aas
lahf
mov
rcrb
mov
das
into
add
and
repnz
pop
add
lds
lahf
dec
imul
dec
xchg
push
mov
jne
lcall
movsb
mov
cmc
push
push
mov
stos
mov
pop
lock
or
cmp
add
jns
inc
sarb
out
scas
cmpsl
fwait
jmp
sbb
pop
lsl
out
adc
shll
aam
data16
stos
js
push
arpl
cmc
fbstp
sarl
jb
mov
stos
pusha
mov
adc
repnz
adc
xor
dec
pop
xor
jp
inc
push
ja
cmpsl
add
js
add
scas
subb
push
pop
pushf
loope
cs
jmp
push
scas
popf
or
loope
ljmp
jle
mov
imul
xchg
test
leave
je
leave
in
out
xchg
incb
jg
test
pop
aad
imul
cwtl
sarl
pop
scas
sbb
cmc
inc
xchg
imul
sbb
dec
inc
andb
jno
adc
mov
pop
shlb
bound
jno,pt
push
imul
jl
jno
mov
into
out
scas
and
in
xchg
out
cwtl
bound
insl
insb
aam
stos
push
dec
aad
loopne
pop
aad
imul
dec
stos
fildl
ljmp
sbb
mov
cmc
pop
add
sbb
pop
jle
and
movsl
test
mov
cmp
in
mov
bound
loopne
std
mov
cmc
int3
into
out
push
bound
and
in
pop
and
jb
dec
aam
cmp
out
dec
lock
mov
stos
jns
fistpll
out
adc
fdivrl
sarl
out
xchg
mov
inc
lahf
lcall
pop
inc
std
inc
out
jecxz
ja
inc
jns
inc
mov
mov
test
jl
jbe
pop
add
pop
or
inc
sbb
lock
fmul
add
or
inc
repz
mov
xor
fistpll
rclb
pop
push
inc
cmp
imul
pop
xchg
jne
xor
push
xchg
ss
mov
test
int
sub
mov
jl
leave
imul
test
and
lds
leave
or
fistpll
xchg
adc
enter
int
lods
fidivrs
lock
fistl
js
test
cs
dec
inc
arpl
jl
mov
icebp
insb
xchg
repnz
jg
lods
adc
fldt
pop
inc
pop
insl
add
xchg
xchg
stc
cmp
or
adc
mov
sbb
sbb
inc
stos
jb
jle
and
jmp
ss
mov
arpl
cmp
mov
movsb
dec
xor
je
sub
arpl
imul
out
lods
mov
cmp
add
arpl
cmp
fdivrl
fdivp
dec
jg
addr16
dec
jnp
addb
jo
cmp
imul
mov
dec
xchg
dec
cli
cmp
mov
int3
cwtl
push
pop
mov
loop
scas
nop
test
mov
divb
cltd
sti
filds
jae
mov
xchg
or
popf
mov
pop
je
xchg
jnp
es
dec
int
aad
ja
push
mov
pop
arpl
dec
int
adc
stos
daa
in
cli
data16
out
pop
mov
ljmp
jo
cmp
and
xchg
jae
inc
inc
outsl
insl
lock
jge
or
mov
fcoml
jbe
ja
decb
xchg
enter
pop
and
cltd
aam
mov
addb
push
jecxz
cmc
shlb
ret
ret
jecxz
add
cld
inc
ss
scas
div
lret
add
bound
cmp
dec
movsl
mov
fisubs
jecxz
and
pop
aam
jne
or
sbb
test
sti
xchg
cltd
in
jmp
xchg
ror
repnz
or
ret
fistpl
dec
lods
pop
cmpl
cmpsl
das
pop
pmuludq
sub
pop
push
jo
adc
leave
bnd
xor
push
add
mov
and
arpl
lcall
cmpsb
adc
sbb
jo
mov
inc
push
sub
dec
loope
jnp
in
mov
mov
adc
jnp
aaa
bound
mov
int3
iret
into
shll
out
xor
mov
adcl
ja
push
or
hlt
xchg
jb
fisttps
and
jne
add
in
jecxz
stos
subb
stos
mov
lock
mov
outsb
jg
rorl
call
pusha
iret
cmpsb
cmp
mov
mov
test
repz
movsw
sub
jl
xchg
pop
jb
dec
addr16
adc
inc
xchg
out
pop
inc
mov
dec
inc
scas
mov
daa
stos
imul
add
in
in
push
or
and
dec
out
call
and
cld
rcl
data16
fdivs
jl
scas
push
push
mov
ljmp
lods
mov
xor
mov
add
scas
icebp
mov
movsb
nop
pop
cltd
cwtl
mov
insb
mov
sbb
xor
push
dec
push
add
adc
cmp
adc
mov
movsl
inc
cmp
imul
lods
add
cli
imul
mov
and
push
sub
add
clc
and
jnp
xchg
rcrl
mov
sbb
in
dec
outsl
imul
or
aad
test
jle
fists
inc
aas
push
in
sub
data16
fwait
cs
cmp
lahf
mov
mov
fisubrs
push
mov
xchg
pushf
and
push
shl
xor
out
mov
jmp
sbbl
dec
negl
push
mov
mov
dec
xor
hlt
es
das
add
xor
lods
dec
or
imul
nop
inc
or
int3
push
cmp
add
stos
fisubl
repz
or
jne
insl
and
jnp
dec
xchg
jl
fsubrl
sbb
cmpsl
dec
push
test
cmp
or
jno
mov
js
fcomip
inc
mov
out
shlb
mov
ret
test
and
addr16
add
adc
dec
pushf
jo
cwtl
scas
cmp
xchg
xchg
xor
lock
es
jge
pop
in
jne
xchg
iret
test
aas
std
aas
lahf
sbb
push
ss
mov
push
cltd
jl
cmpb
je
mov
nop
enter
adc
push
jmp
push
sbb
cmpb
rcrl
aaa
push
scas
in
pop
sbb
pop
mov
sbb
add
cld
lods
in
mov
mov
mov
lahf
fimull
movl
in
enter
dec
xchg
push
push
dec
call
fsubl
mov
es
add
jnp
stos
dec
inc
add
cmp
sbb
adc
inc
pop
push
jb
jae
notl
mov
cs
iret
scas
add
jno
sbb
and
shll
jg
fnstsw
bnd
repnz
lret
mov
lock
cmp
add
jle
mov
mov
call
fisttps
push
ljmp
inc
aam
pop
push
dec
push
pop
inc
xchg
bndstx
pop
rcrl
add
lods
pushf
movsb
arpl
jnp
repz
xor
lret
mov
jo
bound
stc
fs
add
sarl
fcmovne
mov
sub
call
mov
mov
dec
dec
out
loop
stos
mov
in
mov
pop
int
lock
dec
lcall
push
mov
ficompl
lret
daa
add
cmpsb
fs
bound
fsubrl
inc
cltd
movsb
bound
and
lret
add
in
std
addb
and
xor
mov
mov
xchg
ja
shll
cwtl
push
mov
mov
fdivs
shlb
imul
and
aam
les
les
les
mov
les
cmc
push
dec
or
mov
dec
inc
jl
cmp
cmp
jmp
test
lods
sub
or
mov
dec
mov
rclb
cmp
inc
add
inc
sub
inc
xor
int3
les
mov
imul
pop
out
pop
dec
inc
inc
fwait
add
fstpl
jle
ss
movl
cltd
jae
xchg
and
andl
jae
subl
lret
xchg
ret
fisttpll
jp
adc
or
or
or
cmp
jmp
mov
sahf
mov
dec
mov
cmp
fs
into
mov
iret
xlat
xchg
pop
shr
cs
push
cmp
stos
dec
pop
clc
sub
lret
pop
sub
or
test
lahf
mov
inc
lds
push
mov
stos
loop
mov
pop
daa
test
enter
sub
mov
cs
sub
push
sbb
clc
jge
inc
jmp
adc
stos
dec
cmpsl
popf
repz
in
loope
pop
sbb
std
iret
push
push
xor
jnp
nop
sub
mov
imul
cmp
mov
mov
lcall
push
jns
loopne
mov
jle
xor
xor
into
int3
shlb
jns
jecxz
popf
jbe
xor
popa
mov
jno
jmp
js
scas
jmp
lock
idivl
jp
clc
sahf
push
xchg
and
inc
mov
hlt
jb
test
ficoms
int
mov
pop
ljmp
in
push
dec
dec
xchg
xor
aas
jecxz
mov
dec
mov
inc
fadds
xor
mov
dec
ds
jno
jbe
pushf
cmp
inc
jmp
mov
rcr
push
add
or
pop
and
sbb
outsb
mov
jb
and
mov
out
ja
into
push
jle
xchg
je
xchg
test
ds
adc
mov
scas
sbb
pushf
fwait
leave
mov
lea
xchg
les
sub
push
test
sbbb
inc
push
repz
lea
out
lret
mov
push
in
push
mov
jae
out
xor
push
into
out
sub
xchg
outsl
jge
test
dec
lret
adc
adc
subb
push
enter
inc
sti
add
cmc
sarl
fcomi
pop
aad
subl
sub
and
xchg
add
dec
mov
test
rcr
jle
and
mov
out
push
ror
dec
loope
pop
mov
inc
shll
xchg
jmp
inc
mov
sbb
ds
push
bound
mov
add
xchg
or
push
push
imul
repnz
dec
ljmpw
and
jle
adc
jne
popa
loope
cmp
int3
out
ds
data16
or
jp
adc
fsubr
imul
mov
dec
loope
in
sbb
test
loop
into
and
pushf
ja
outsl
mov
pop
sub
cltd
jne
std
and
nop
das
add
movb
mov
clc
jl
lahf
add
orb
jmp
push
into
cmp
add
leave
std
jno
shl
xor
mov
iret
test
mov
mov
or
and
mov
je
inc
inc
cmp
push
icebp
jmp
das
jo
mov
mov
ror
outsl
repz
iret
idivb
mov
inc
ja
jp
and
popf
sub
jp
push
call
and
aam
mov
mov
stos
adc
xor
lret
imulb
fs
mov
pusha
xor
mov
mov
pop
sbb
jns
jecxz
mov
leave
jl
sbbb
sub
jg
mov
pop
loop
jp
enter
sub
mov
idivb
xor
ficoms
pop
mov
jne
mov
ss
leave
loop
cltd
cmp
xchg
ljmp
fidivs
mov
jns
sbbl
popf
cltd
cwtl
jnp
push
loop
mov
out
stc
repnz
inc
out
sub
sti
mov
out
pop
mov
fdivs
out
jge
mov
jp
data16
jle
jp
mov
mov
sub
xor
call
fimuls
out
loop
xor
xchg
mov
inc
pop
rcll
jbe
or
sbb
and
or
add
xor
xor
popa
enter
mov
dec
inc
cmpsl
add
hlt
cwtl
in
out
mul
xchg
sbb
cmp
push
add
fwait
xchg
dec
cmp
push
mov
mov
mov
xor
loop
dec
and
pop
imul
inc
sbb
push
pop
nop
mov
xchg
lret
aaa
rorb
mov
mov
cmp
leave
fcoml
in
fistpll
add
jae
xor
mov
shlb
cmp
adc
dec
sbb
push
lret
pop
aad
daa
and
sub
fidivrl
addr16
ret
into
lret
std
shlb
repnz
jle
lahf
notl
scas
cmpb
xlat
stos
pop
lret
das
scas
lret
cmp
mov
pop
fadds
aad
xchg
xchg
dec
or
pop
lcall
xchg
xor
aas
sub
clc
adc
adc
outsl
mov
rclb
lock
cmpsl
push
xor
pop
icebp
enter
push
jbe,pt
cmp
sti
addl
in
add
sub
inc
outsb
mov
jp
outsb
jns
addl
push
dec
cmp
cmp
or
cmpb
inc
adc
mov
mov
hlt
push
repnz
in
mov
lcall
in
jmp
aad
out
sahf
mov
ret
sub
or
fldl
rorb
fstpl
cli
mov
pop
decb
pop
stos
mov
pop
mov
data16
sub
ror
push
mov
mov
inc
push
ret
inc
fdivl
popf
mov
and
mov
sbb
nop
xlat
bound
addl
mov
leave
sbbb
sbb
nop
out
aas
iret
cli
xchg
movsl
mov
rcpps
sbb
addr16
jp
in
mov
lret
pop
jle
fcmovnbe
addr16
sub
sbb
sub
and
mov
into
cmpsl
inc
mov
pop
xchg
jecxz
js
ficoml
pop
mov
jae
cmp
dec
jne
bound
and
sbb
pop
sub
xchg
in
cmc
push
jge
mov
jb
lds
aad
lods
aam
xor
daa
push
out
mov
stc
bound
cmc
lea
cmp
js
mov
lock
push
cmp
xchg
or
in
mov
test
sub
xchg
push
icebp
mov
sbb
mov
sub
insl
mov
xchg
adc
mov
ret
mov
xchg
popf
push
mov
cli
or
andb
mov
cmpsb
push
adc
dec
jge
fs
fnstenv
shlb
jbe
or
test
push
fs
pusha
leave
xor
inc
xchg
adc
sahf
jmp
push
lcall
xor
adc
lods
pop
push
ja
pop
cmp
sub
push
shrl
cmpsl
sbbb
inc
fisubl
out
xchg
add
mov
dec
bound
cltd
pop
vpmaxub
ficoms
cmp
or
in
mov
xchg
mov
pushf
cmp
lea
mov
jae
js
pop
mov
fidivrs
addl
scas
and
dec
fs
cmp
int
adc
pop
lret
mov
ret
mov
mov
repnz
nop
jle
lret
jg
pop
fbld
and
mov
add
mov
rolb
shrb
dec
hlt
xchg
stos
cwtl
lds
xor
test
xor
sub
inc
mov
shrb
and
sbb
sbb
jnp
dec
inc
scas
mov
in
filds
mov
cmp
mov
inc
and
data16
inc
ja
push
loopne
popa
dec
in
jns
sub
cmp
lock
inc
gs
out
mov
scas
sbb
and
int3
out
add
or
cmp
scas
xchg
imul
idiv
loop
pop
xchg
mov
fwait
and
sub
mov
ret
or
test
pop
dec
dec
xor
in
adc
cmpb
fadd
rcrl
dec
clc
pop
jns
dec
cmp
jne
js
push
dec
ja
mov
jno
popf
xchg
mov
mulps
popf
sbb
or
loop
cmp
fidivrl
adc
int
aad
les
daa
call
aam
imul
scas
scas
jo
jno
cld
inc
daa
fsubrl
icebp
or
xor
dec
pop
stc
add
inc
dec
lret
sbb
icebp
daa
cmp
arpl
out
mov
outsl
jmp
sub
hlt
sbb
loopne
mov
xchg
imul
push
clc
std
out
cwtl
lds
jge
adc
push
push
leave
addb
int
sub
dec
sbb
in
das
sub
outsb
xor
je
into
dec
test
mov
repnz
xor
push
mov
pusha
lock
xor
loopne
xchg
leave
xchg
xor
stc
mov
xchg
mov
icebp
xor
pop
mov
lods
sub
mov
xchg
fldt
movsb
es
fwait
jle
cmpsl
inc
movsl
fcoml
fnstsw
and
xchg
test
cmc
mov
aas
je
dec
fwait
mov
insl
dec
pop
mov
and
aad
ja
rcl
lahf
mov
pop
sbb
lcall
push
pop
push
adc
or
xchg
cmp
rorb
test
repnz
ret
mov
dec
ja
into
mov
push
or
cltd
mov
mov
in
rclb
into
xchg
pop
cmpb
lea
cmc
and
call
or
stc
decl
push
scas
lods
or
rcl
push
sub
cmp
xchg
push
sub
cmp
loop
inc
mov
add
lods
xor
xor
jb
pop
push
mov
add
icebp
mov
jle
fadds
out
push
jmp
mov
jg
out
jbe
push
push
push
xchg
jno
xor
and
idivl
ret
ja
push
mov
test
xchg
inc
jno
dec
fsubrp
add
imul
fisttpl
or
push
mov
in
mov
pop
jmp
in
popf
mov
dec
jne
arpl
xor
orl
mov
mov
xchg
orb
movl
aad
xor
arpl
lock
jnp
jnp
xor
movsl
xchg
add
fiadds
and
and
shrb
sahf
xor
out
imul
inc
out
pushf
jae
sub
mov
lock
mov
mov
pop
push
inc
das
and
cmp
out
mov
jae
mov
jp
cltd
out
les
sbb
test
xchg
jge
xchg
inc
shr
sub
pop
dec
out
push
lods
lock
jmp
fimull
and
cmpsb
inc
mul
xchg
repnz
arpl
xor
xchg
adc
orb
mov
adc
xchg
mov
fidivl
cmp
dec
sbb
orb
out
out
outsb
dec
jns
and
lea
mov
and
mov
mov
jl
jb
inc
inc
jae
cmc
push
ficompl
decb
jecxz
cmp
scas
in
cmp
adc
sldt
stos
mov
popa
jmp
push
sarb
pop
icebp
mov
jns
ds
cmpsl
and
addr16
cmp
hlt
push
push
sbb
shll
mov
inc
inc
xorb
aaa
xorl
aas
pop
mov
mov
push
mov
add
mov
pop
repnz
repnz
mov
mov
inc
aas
push
dec
or
pop
rclb
and
push
sub
adc
or
jbe
mov
push
push
pop
mov
mov
stc
mov
fwait
or
adc
mov
in
add
out
hlt
test
pop
mov
ret
inc
sbb
in
mov
add
inc
imul
pop
leave
push
test
dec
insl
or
aaa
mov
jbe
jmp
popf
or
add
xchg
inc
stos
sbb
imul
aas
jo
push
cmp
jmp
sub
test
pop
aam
lock
mov
roll
xor
sub
sbb
adc
and
jmp
mov
pop
push
arpl
cmp
ljmp
mov
mov
jno
mov
lea
jno
and
loopne,pt
add
out
lds
out
or
outsb
ror
mov
or
dec
lea
fstpl
fwait
insb
push
pop
rorb
aas
xchg
inc
sub
movsl
dec
bound
push
adc
cmc
mov
mov
mov
cmc
mov
mov
mov
cmc
mov
mov
mov
cmc
mov
mov
mov
cmc
mov
mov
mov
cmc
mov
mov
mov
add
or
es
sub
fiaddl
xor
jo
mov
xlat
or
mov
subb
inc
add
sbb
cli
sbb
mov
ja
cmp
inc
sub
push
shll
add
dec
sbbl
mov
cli
in
push
imul
cmp
mov
insl
out
and
subb
fcoml
xchg
fldenv
and
js
mov
add
out
xchg
and
mov
push
push
mov
mov
bound
cli
mov
leave
shl
push
mov
dec
push
and
mov
repz
aam
sbb
imul
adc
arpl
adc
push
lret
push
xchg
pop
popa
mov
pop
stc
aaa
lret
repnz
xchg
jne
inc
jp
pop
setnp
and
jnp
pop
push
setb
xor
movsl
scas
mov
push
pop
pop
movsl
xchg
inc
sbb
imul
xchg
aaa
mov
add
xchg
outsb
ds
imul
pusha
mov
xor
and
xchg
movsb
loope
ljmp
test
fisubrs
pushl
inc
inc
cwtl
inc
out
scas
jo
incb
aas
test
inc
fstl
lcall
hlt
test
repz
sahf
outsb
popf
add
fimuls
push
fsubrs
sar
ljmp
push
mov
out
xor
sbb
jge
xor
xchg
cmc
cmp
rorb
aaa
iret
inc
push
mov
sahf
test
stos
xor
sub
stos
pop
sbb
push
pop
xchg
inc
in
pop
cmpsb
adc
and
ljmp
shlb
int
xchg
lahf
dec
inc
insb
xor
lods
cs
pusha
xchg
out
int
rclb
in
cmp
push
stos
and
xor
adc
rcrb
push
pop
pop
xchg
add
out
cmp
jg
sti
fbld
cmp
std
cmp
test
aaa
xchg
inc
loop
insl
es
sbbb
pop
rclb
ja
fidivl
lret
pop
sbb
mov
iret
push
jnp
and
lfs
cmp
cmp
shll
pop
and
ja
cmpsl
pop
mov
and
test
out
cmpsb
loope
hlt
adc
insb
jae
dec
push
sub
xchg
dec
dec
jmp
inc
mov
je
pop
scas
add
sahf
add
fnstenv
jmp
aam
jo
inc
push
ret
push
ds
xchg
dec
mov
add
lahf
and
cltd
outsb
pusha
sbb
ret
add
in
jge
shrl
rcrb
outsb
into
or
add
pop
daa
inc
add
add
jge
inc
add
pop
inc
add
add
push
xor
and
add
xchg
inc
inc
add
adc
mov
xchg
inc
add
add
test
inc
add
add
insb
inc
inc
add
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
enter
add
add
popa
inc
add
add
add
daa
inc
add
add
add
jae
add
add
add
inc
add
add
pop
bound
je
jae
xchg
repz
mov
insl
dec
test
out
mov
fdivrs
dec
iret
dec
in
out
les
dec
nop
and
sub
daa
or
lods
jle
mov
jne
out
pop
push
jb
aad
mov
enter
fdivs
xchg
in
push
push
inc
je
or
loop
bound
jo
jbe
imulb
testl
pop
std
lret
std
inc
mov
add
add
add
inc
add
add
loope
inc
add
mov
enter
add
mov
cmp
pop
enter
fsub
mov
pop
outsb
inc
mov
das
jle
add
add
add
xor
add
add
add
add
add
add
in
sti
push
sti
bound
pop
les
fs
sbb
ss
rcll
pushf
xchg
sbb
jg
xlat
mov
jns
xchg
pop
xor
cwtl
sub
test
sbb
jae
pop
je
lods
pop
sbb
lea
inc
xor
mov
adc
mov
jge
cmc
rorl
loope
cmpsb
dec
add
xlat
add
in
pushf
call
jo
aaa
inc
inc
cwtl
lods
or
cmp
out
xchg
iret
pop
mov
mov
add
mov
adc
xchg
ds
or
lds
int
cmpsl
sbb
add
push
movsb
mov
mov
addr16
aam
sub
cmpsl
mov
push
mov
push
lock
or
daa
jg
dec
cmpsb
sahf
mov
loopne
mov
xor
jnp
xchg
mov
fildl
cmp
sbb
jp
mov
dec
push
test
adc
cmp
add
lahf
sub
movsb
jle
mov
pop
add
mov
rcrb
xlat
jnp
test
cmp
mov
fcoms
add
iret
mov
jnp
pop
mov
jle
xchg
cmp
or
ljmp
out
push
jae
stc
cmp
jmp
add
and
jmp
add
in
fdivr
incl
jmp
add
insl
loope
incl
sub
call
xor
push
push
push
push
call
mov
movzbl
push
pushl
pushl
call
add
cmp
jb
mov
pushl
pushl
call
nop
pushl
pushl
xor
pushl
pushl
call
xor
call
add
cmp
jb
call
call
leave
popa
ret
add
add
add
subb
inc
add
jmp
scas
ret
shll
test
inc
adc
pop
clc
push
xor
sbbl
dec
aas
subb
out
in
adc
cwtl
mov
js
int
adc
lahf
adc
add
mov
inc
add
lock
je
rorb
lret
xchg
cmpsl
fmul
pop
cmp
mov
in
fstpl
pop
out
mov
ret
mov
and
mov
leave
dec
cs
xchg
pushw
mov
inc
stc
int3
xor
out
clc
dec
js
push
cmp
push
subb
lea
ficomps
negb
xor
dec
cmp
and
mov
push
mov
test
push
cmc
rolb
mov
ror
fldt
or
out
inc
add
rclb
ret
xchg
mov
mov
sbb
pop
rol
mov
pusha
jnp
rcrb
ds
push
cmp
push
dec
std
outsb
rorl
fildll
dec
ja
cmp
push
fnstcw
inc
or
mov
xor
andl
dec
pop
mov
rclb
push
fabs
sub
jne
ss
inc
out
adc
in
enter
xchg
xlat
loop
and
dec
dec
push
arpl
into
pop
aam
and
pusha
fs
mov
out
or
add
add
pusha
push
mov
mov
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
jmp
sub
orb
pop
xchg
or
pop
lods
xchg
push
and
mov
test
loopne
push
call
mov
lret
jle
inc
mov
sahf
push
and
jl
or
push
xor
shl
das
or
addr16
and
inc
sbb
inc
xor
lcall
jmp
dec
or
dec
lret
arpl
sbb
in
int3
out
stc
lods
jb
mov
inc
pop
push
inc
in
popf
fstps
push
lock
mov
pushf
or
out
ja
lock
loopne
rol
into
and
hlt
jns
sahf
outsl
sbb
and
fildll
add
sub
sti
cli
add
pushf
aas
adc
mov
stos
dec
dec
pop
ret
pop
xor
push
dec
mov
pusha
jle
pop
test
cmpsl
or
outsl
push
sub
orb
in
cmp
aam
and
popa
sub
aas
mov
pop
or
sarb
xor
decl
addb
adc
js
ficoml
loopne
or
jg
das
scas
movsl
sbb
mov
adc
push
xchg
jg
dec
and
cmp
sbb
jno
rcrl
sub
pop
add
adc
push
jmp
pop
imul
sbb
jmp
sti
leave
lret
outsl
mov
movsb
mov
out
sbb
or
test
sar
je
dec
mov
xchg
jg
cmp
xor
lcall
out
xor
xlat
adc
gs
loop
in
adc
popa
aad
loope
push
clc
bound
mov
fisubrl
xchg
mov
das
in
add
fldcw
rol
