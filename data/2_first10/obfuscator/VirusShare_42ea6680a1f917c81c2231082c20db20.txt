jl
cmp
sti
hlt
add
rorl
cmpsb
aas
sbb
jns
adc
sbb
outsl
xor
negl
out
rcrl
out
je
mov
in
popf
push
stos
pop
inc
mov
out
lock
fistps
clc
daa
jge
mov
sub
lods
enter
sub
sti
inc
mul
mov
pusha
add
subb
cmp
inc
lret
pop
xchg
add
outsl
dec
mov
mov
fwait
mov
sbb
outsl
les
inc
pushf
xchg
int3
adc
out
inc
aad
adc
dec
rol
push
clc
dec
addr16
int3
sahf
pop
mov
js,pn
mov
shlb
dec
or
push
dec
cmc
add
xor
push
cmp
sbb
jmp
arpl
insb
push
hlt
adc
lcall
fxtract
in
insb
jo
mov
and
cs
dec
jmp
test
sub
shrl
popl
das
daa
adc
into
dec
out
pop
sub
sub
xlat
xchg
popf
pop
out
rcll
loope
stc
mov
cld
in
mov
xchg
testl
stos
nop
dec
xor
sub
in
lahf
les
mov
add
mov
rorb
lds
cmp
dec
out
adc
mov
mov
mov
push
mov
aad
mov
fldenv
mov
inc
mov
cmp
pop
dec
mov
test
or
jg
mov
pop
mov
mov
out
in
shll
stos
mov
shll
daa
ror
test
push
mov
push
and
push
pop
outsl
fisubrl
push
cmc
aaa
add
lahf
daa
cld
push
cmp
movsl
ljmp
mov
out
inc
inc
inc
fnsave
jmp
into
mov
pop
xor
push
mov
lea
stos
adc
imul
lds
pushf
hlt
xchg
js
stos
push
ret
cmp
pop
pop
cltd
dec
mov
leave
or
cld
mov
pop
dec
iret
test
mov
mov
stc
push
out
sub
cmp
fcomip
in
cs
leave
inc
mov
sbb
hlt
inc
inc
mov
and
nop
addr16
js
push
popl
mov
inc
js
or
sbb
sbb
sahf
inc
call
inc
hlt
cmpsb
lret
out
inc
cmp
mov
xchg
imul
sti
xchg
dec
dec
sub
dec
mov
insl
mov
dec
push
in
rcrb
pushf
add
fs
add
add
gs
nop
mov
push
mov
insl
lcall
icebp
push
pop
out
cwtl
out
in
cs
jne
outsb
cmc
cmp
mov
pusha
adc
pop
movsl
inc
mov
jae
hlt
pushf
out
movsl
sbb
inc
xchg
imul
xor
add
mov
out
aaa
int
push
mov
hlt
and
test
mov
mov
mov
sbb
pop
add
stc
rcll
and
push
jae
ficoml
test
mov
push
out
gs
mov
fmuls
sbb
dec
shrl
push
push
mov
rcll
scas
lcall
mov
testl
push
mov
xlat
fsubr
adc
cltd
or
mov
int3
cmp
in
fwait
pop
nop
inc
push
sbb
cmpsb
xor
jmp
xor
or
push
push
pop
sub
std
cmpsb
lods
aas
push
sub
scas
jg
int
call
scas
push
mov
cmp
inc
shlb
dec
pop
cli
js
mov
gs
push
sub
jns
and
mov
fisubs
mov
inc
int
xchg
sahf
or
push
mov
and
mov
inc
loope
std
rolb
sub
inc
sub
inc
out
fldcw
xchg
xor
je
pop
xchg
in
insl
pop
sbb
jne
testl
hlt
xor
ret
mov
pop
icebp
jle
push
leave
and
loope
xchg
in
dec
and
mov
mov
cmp
into
mov
or
mov
adc
xchg
fnstenv
xchg
or
or
mov
nop
adc
shrl
insl
xchg
test
mov
mov
mov
jns
leave
lahf
mov
call
sbb
xchg
pop
call
xchg
rolb
mov
adc
add
jb
std
test
adc
adc
ljmp
push
pop
out
cli
jmp
add
dec
xchg
xlat
xchg
imul
repz
jbe
mov
sbb
jno
mov
out
adc
stos
setp
stos
xchg
push
idivl
roll
dec
lret
cltd
or
fbld
aas
arpl
rcr
idivb
stc
fwait
lret
imul
mov
lods
loope
xchg
push
mov
test
loope
mov
cmp
add
fwait
call
adc
inc
xlat
dec
aam
mov
sbb
fistl
pushl
cmpsl
xor
aaa
mov
push
les
mov
mov
fcomps
je
loopne
mov
outsb
lds
sti
and
or
and
iret
es
repz
sub
movsb
addl
ljmp
pusha
xchg
in
js
pop
mov
and
addb
push
test
movsb
es
inc
mov
or
stos
mov
push
inc
in
xchg
mov
mov
inc
add
jmp
or
sub
test
jns
cld
ret
insl
cmp
lahf
sbb
lahf
pop
nop
movsb
insb
test
sbb
cmpsb
or
or
shl
and
addr16
int
push
int
xor
pop
pop
mov
jae
out
sarl
enter
push
int3
adc
push
adc
mov
mov
jecxz
jne
clc
in
in
pop
sub
sbb
mov
test
test
push
sbb
push
mov
sub
test
test
fwait
cmp
shrb
jno
jp
xchg
xor
fldl
push
jle
lcall
mov
push
add
gs
mov
popa
mov
xchg
in
mov
lds
cltd
loop
pop
repnz
cmpb
jg
xor
jmp
xlat
push
fidivl
sbb
lods
fucomi
dec
mov
mov
rdpmc
insb
int3
xchg
mov
sub
aaa
cmpsl
in
mov
dec
jns
shrb
test
dec
aaa
mov
rolb
rorl
mov
xorb
lds
nop
fwait
and
lds
and
aas
repz
loopne
out
in
clc
fisubrl
pop
mov
rorl
dec
scas
scas
or
adc
cmpsb
sub
js
cmp
or
shl
lods
push
movq
scas
out
or
xchg
dec
xchg
xor
push
jno
fists
cltd
lret
mov
and
push
daa
lods
call
sbbb
pop
shll
fstpt
movsb
xchg
rcll
sbb
int3
rcl
in
ds
aaa
jle
daa
xchg
into
mov
sub
test
out
imul
or
pop
mov
les
imulw
xor
divb
jno
lods
mov
or
or
aas
mov
mov
mov
sarb
mov
lods
adc
fnstsw
lea
add
pop
fwait
cmp
jl
inc
adc
mov
repnz
jmp
xor
jg
or
ljmp
jge
xchg
mov
mov
arpl
mov
lret
testb
dec
and
mov
pop
hlt
hlt
pop
mov
pop
scas
div
mov
sbb
loop
ljmp
test
add
pop
shrl
rcrl
in
add
out
daa
mov
pushf
inc
xchg
jmp
mov
or
mov
push
mov
jecxz
insl
inc
mov
lcall
dec
fwait
call
sbb
sbb
jne
std
sub
xchg
lods
sub
fwait
xchg
mov
push
inc
pop
test
dec
stc
inc
add
cs
adc
cld
mov
and
test
lahf
xor
sahf
xor
jp
test
mov
mov
arpl
fwait
mov
fcmovnu
lods
addr16
add
sbb
les
push
xor
stc
in
or
test
pop
pushf
mov
sbb
xor
lret
dec
xchg
pop
pusha
push
jle
jbe
cmc
jns
lock
stos
xorb
test
xchg
mov
insb
jbe
daa
sbb
sub
jnp,pn
lret
dec
jl
ficompl
inc
mov
testl
push
in
mov
test
and
sbb
pop
and
mov
mov
mov
lock
sub
aam
dec
jb
push
or
jb
push
in
mov
aam
mov
and
pop
insb
and
xor
mov
pop
je
jae
testb
movsl
rorb
mov
jno
sub
xor
mov
mov
sbb
lds
push
outsb
scas
icebp
cmp
ss
pop
cmpsb
stc
not
pop
loopne
xor
lret
add
fmul
adc
xchg
mov
and
iret
mov
xor
xchg
pop
mov
mov
jl
add
lret
lds
popf
imul
in
cmp
sti
cmpsl
in
xchg
in
mov
dec
stos
adc
movsl
inc
iret
popf
dec
or
add
mov
test
mov
pop
and
and
imulb
pop
leave
sbb
xorl
add
sub
xchg
xor
push
pop
movsl
mov
or
sbb
or
add
push
popf
sub
testl
push
lods
pop
cmp
imulb
inc
sub
test
cld
test
cmp
aam
cmp
inc
inc
sub
lods
lahf
adcb
imul
push
xchg
test
add
cli
jecxz
stos
sti
je
sub
xchg
mov
push
lods
js
xor
decb
lea
sub
push
stos
adc
jge
pushf
lcall
sub
addr16
xor
sub
adc
leave
jne
cmpsb
ret
ss
movsb
imul
jl
mov
out
cmp
add
jo
push
je
xlat
stos
rcrl
mov
fwait
out
mov
cltd
mov
push
add
int
jle
adcb
mov
scas
shrb
push
sbb
jmp
cli
mov
lret
jnp
fcoms
inc
cmp
out
mov
or
lea
push
mov
sti
in
mov
out
add
popa
popa
sbb
fbstp
adc
add
xor
jl
aas
add
frstor
push
je
sbb
ret
cmc
jecxz
cmp
jnp
xchg
jbe
jno
jbe
cld
and
add
or
pop
lods
push
loope
pop
mov
pop
lret
pop
lcall
adc
jns
pop
push
mov
and
loopne
fcoms
mov
clc
js
mov
or
jp
mov
outsl
loop
sbb
xor
and
and
aaa
subb
mov
xchg
shr
idivl
cmpb
mov
sbb
mov
fstps
insb
sub
cmp
jg
xchg
push
mov
bound
pop
adc
jp
mov
adc
mov
lahf
and
push
int3
sti
cmp
lret
pop
mov
mov
out
adc
or
sbb
sbb
aad
shll
inc
loope
iret
or
movsb
in
rcll
out
neg
into
jb
sbb
sti
shl
aas
movsb
jecxz
adc
test
lret
rorl
es
dec
fisttpl
outsl
js
mov
add
adc
ljmp
xchg
pop
jmp
pop
push
lods
insl
xor
vmwrite
dec
sub
mov
sti
inc
pop
add
in
aaa
adc
test
popa
push
mov
cwtl
loop
sbb
cmp
jae
test
int3
negb
fistl
loopne
scas
jne
out
inc
cmpsb
jbe
enter
call
repnz
fiadds
sbb
mov
loope
sub
cmp
sub
outsb
xor
outsl
inc
call
push
pop
lods
xor
imul
jbe
mov
stos
lret
pop
daa
jmp
stos
and
lds
add
mov
lods
fistl
arpl
mov
nop
push
xor
jecxz
call
ret
pop
mov
dec
mov
sarl
mov
insb
add
adc
loope
jp
pop
push
mov
in
not
fnstsw
data16
mov
mov
or
cld
xor
fsub
out
insb
push
nop
inc
iret
jo
xchg
cmp
push
xor
hlt
enter
mov
cmp
lahf
xor
out
cli
fldt
sti
scas
mov
pop
mov
mov
mov
out
and
jae
jge
and
sti
fcomp
fs
subb
shrb
cs
lods
mov
repz
stos
mov
repz
loope
xor
jno
dec
fstpt
pop
cmpsb
cmp
sub
push
out
mov
clc
int
adc
jae
in
out
mov
cmp
lahf
pop
jmp
sub
movsb
cmp
imul
pop
sbbl
test
jge
pop
mov
sbb
insb
pop
movsl
rolb
inc
stc
leave
test
aas
jle
dec
inc
push
test
push
pop
in
push
push
call
push
loopne
ja
dec
aas
icebp
das
add
adc
pop
lock
bound
insl
loop
xorl
inc
int3
out
pop
out
fldt
and
xchg
add
gs
pop
mov
jmp
sub
lret
jl
push
ljmp
addb
or
mov
push
jo
jns
sarl
aad
enter
stos
shll
outsb
or
incb
xor
mov
lock
out
pop
jae
sbb
ret
cmc
inc
cmp
add
lea
jbe
xchg
adcl
mov
sub
xchg
xor
dec
shll
jmp
inc
jmp
push
imul
sub
adc
int3
pop
lods
cmp
call
mov
int3
int3
hlt
ds
pop
add
jmp
outsb
imulb
loopne
dec
scas
scas
xchg
test
pop
ret
je
call
sbb
cmpsb
add
das
inc
inc
lret
bound
sub
xchg
inc
mull
arpl
xchg
insb
aaa
jge
daa
dec
dec
rorl
test
imul
sub
jnp
and
dec
add
out
enter
fcomip
ret
jle
and
inc
mov
cwtl
shrl
pop
push
fbstp
insb
inc
dec
push
imul
imul
add
ds
xchg
add
dec
out
mov
dec
sbb
mov
push
dec
enter
inc
ljmp
push
push
nop
repz
sub
shl
jmp
pop
jg
test
movsl
lcall
adc
jp
xchg
dec
fmuls
xchg
lock
jmp
test
aas
mov
push
dec
push
jnp
aad
dec
das
mov
jnp
mov
sti
mov
sub
sti
in
loop
sbb
sbb
mov
das
sbbb
xchg
adcl
push
xor
pushf
das
mov
testb
sbb
adcl
mov
sub
adc
es
cli
adc
nop
cli
or
and
dec
call
loope
ljmp
xlat
or
scas
ds
adc
inc
sbb
cli
xor
mov
out
shlb
inc
xchg
inc
cmp
push
negl
sbb
inc
loope
sbb
xor
sbb
adc
mov
jge
scas
cs
or
data16
cmp
movsb
mov
push
int
dec
jnp
push
add
pop
ds
jb
add
mov
lea
push
mov
jb
sub
xor
out
call
stos
sub
lock
divl
rcrb
roll
and
mov
scas
or
inc
dec
cmpsl
fstp
xor
std
dec
ss
shrl
inc
mov
cld
xchg
test
sub
icebp
popf
jbe
xor
jmp
fs
jns
push
cmpsb
pop
mov
pushf
sahf
and
cli
mov
out
xchg
mov
push
jns
and
push
imul
and
inc
xchg
and
aas
pop
shll
in
xchg
mov
fidivl
icebp
incl
sarl
das
shll
int
mov
repnz
loope
movsb
das
jmp
adc
and
pushf
incl
imul
push
xorb
cs
mov
in
xor
pop
je
inc
push
xchg
mov
dec
mov
push
in
or
bound
jbe
adc
clc
outsb
add
imul
insb
lret
inc
jns
mov
xor
cmp
scas
lcall
inc
popa
mov
add
loop
cmp
cmp
mov
jp
or
int3
push
jbe
or
dec
sbb
cmc
roll
in
enter
rcll
stos
fisttps
jmp
jae
icebp
cltd
jle
mov
cwtl
das
cmp
inc
enter
adc
sub
push
inc
jp
mov
pop
mov
mov
fistps
fcomps
daa
adc
xchg
aas
push
insb
gs
xchg
cmp
jb
and
push
mov
daa
pop
jge
jl
mov
or
push
pop
test
sub
repz
das
fucomp
or
fidivs
call
cmpsl
lret
add
lods
addl
leave
add
andl
dec
cli
xchg
imul
cs
push
adc
loop
sti
adc
js
icebp
jg
vmovntdq
xchg
subl
stos
test
cmc
mov
inc
jle
das
in
stc
fwait
mov
mov
cmp
out
stc
xchg
and
xor
lods
cmc
add
ret
mov
repz
or
sub
lock
mov
stos
sarb
xchg
insl
clc
and
pop
ja
push
jp
xchg
xor
je
and
call
mov
mov
inc
push
adc
insb
mov
lds
enter
cli
lahf
sub
jg
inc
int3
ja
add
sub
fstp
push
je
fisubs
out
xchg
and
movsb
mov
cltd
push
imul
popf
ja
dec
shll
daa
std
and
imul
pop
shlb
rolb
jecxz
sbb
inc
dec
push
lock
outsb
pinsrw
sbb
int
add
fcomps
or
pop
xor
push
pop
outsb
pop
jp
sbb
lds
fiadds
arpl
mov
mov
pushf
js
js
or
add
mov
stc
loope
inc
sub
clc
jecxz
mov
cmp
scas
iret
cmpl
arpl
shlb
jne
scas
test
jbe
outsl
dec
mov
jb
push
ljmp
shl
lahf
inc
dec
mov
sub
cmp
data16
nop
or
mov
lds
adc
jno
dec
inc
jecxz
icebp
push
inc
test
add
cmpsl
repnz
les
sti
or
dec
mov
cli
jg
lahf
inc
bound
in
mov
loope
insb
adc
jno
cmpsl
cwtl
test
or
xchg
push
push
fmuls
mov
mov
lcall
mov
jp
jb
es
cli
popa
ds
mov
or
xchg
imul
cmc
test
into
pop
mov
ret
xor
in
dec
movsl
fwait
fwait
pusha
xchg
jp
in
idivb
fcomps
sub
es
lret
xlat
pushf
mov
aaa
adc
xchg
sar
pop
xor
ret
sub
sbb
mov
out
ljmp
mov
test
mov
mov
inc
mov
lods
fisubrl
mov
roll
subl
je
sub
add
push
aam
popa
addr16
hlt
rorb
das
into
and
in
mov
mov
mov
sub
sub
add
mov
aaa
out
insl
pusha
xchg
or
sub
insl
fbld
shl
jae
lcall
mov
dec
dec
popf
clc
and
jmp
sub
dec
fwait
dec
ret
add
xor
lods
test
sub
adc
fildll
sub
ss
out
mov
icebp
xchg
lods
xor
int3
loope
ret
mov
xor
jne
jae
push
int
mov
cld
js
xor
fwait
out
outsl
loop
mov
ret
cmpsl
in
shrl
sbb
movl
das
sbb
cmc
sub
dec
cmpsb
add
sbb
pop
push
in
dec
jp
dec
xchg
and
aam
scas
popa
sbb
xor
movsl
adc
shl
out
or
mov
pop
xchg
inc
je
sub
add
sbb
dec
and
enter
push
xorl
into
sub
adc
push
cmpsl
in
fcmovne
les
xor
inc
and
imul
pop
orl
aam
pop
push
stos
mov
dec
mov
push
in
shrb
xchg
xchg
stos
push
xchg
jge,pt
idivb
mov
fcmovnb
jp
test
test
in
cmp
adc
rcll
fidivs
or
add
xor
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
call
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
or
or
add
add
dec
dec
and
add
add
bound
gs
add
bound
add
xor
pop
sub
sub
pop
add
add
sub
and
and
je
and
cs
xor
or
add
add
inc
jne
insb
imul
and
and
popa
and
cs
add
jb
add
or
insl
jo
gs
imul
popa
and
add
push
jb
outsb
jae
outsl
jb
imul
and
cs
add
dec
outsl
jbe
outsb
and
push
and
insb
and
xor
pop
cs
add
add
pusha
rdtsc
mov
rdtsc
mov
mov
dec
jne
rdtsc
sub
sub
cmp
jne
ret
nop
popa
jmp
pusha
mov
jmp
call
add
add
pop
cmpb
jne
mov
mov
add
sub
jmp
add
inc
add
dec
add
push
add
pop
add
add
add
add
inc
add
add
add
xor
dec
dec
cmp
jg
incb
popa
mov
mov
ret
add
or
insl
outsl
jbe
outsb
and
jo
jb
and
insb
and
xor
pop
cs
dec
outsl
jbe
outsb
and
jo
jb
and
insb
and
xor
pop
cs
add
push
gs
outsl
arpl
imul
and
fs
jae
and
xor
pop
pop
and
cs
and
je
jae
add
and
je
jb
jae
insb
je
imul
imul
and
ja
push
inc
and
insb
and
cs
push
arpl
jo
insb
imul
and
insl
jo
gs
imul
cmp
and
or
add
add
sub
push
gs
imul
cs
add
add
add
call
add
add
add
add
add
mov
add
sbb
add
add
push
and
add
sbb
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
bound
fs
insb
add
inc
add
inc
add
push
add
add
add
add
add
add
mov
