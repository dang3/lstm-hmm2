jb
or
add
xchg
sub
popl
or
iret
push
dec
inc
mov
xchg
inc
mov
mov
icebp
adc
nop
or
rclb
aas
pop
test
js
cmp
jo
jl
cmp
ret
shll
add
mov
out
dec
mov
adc
cmp
daa
popf
subb
dec
cmc
dec
cmp
fdivrs
and
jne
stos
mov
and
jmp
bnd
jae
call
xor
clc
outsb
inc
aaa
ficoms
dec
dec
sahf
idivb
adc
xlat
sub
push
adc
and
jmp
je
test
fucomip
push
or
pop
je
xorb
add
call
dec
clc
insb
fildll
std
es
rcll
adc
repnz
sbb
push
mov
icebp
test
mov
lock
adcl
xchg
or
push
mov
addps
scas
pusha
cmp
mov
mov
movsb
fldcw
lods
pop
jge
in
cmp
lahf
pop
dec
adc
aaa
insb
ljmp
incb
inc
sti
add
out
orl
lcall
and
cwtl
push
fs
in
adcb
scas
jp
lret
mov
lahf
push
sub
roll
ret
xchg
mov
xchg
xadd
mov
rcl
setne
mov
jmp
adc
pushl
lea
jmp
into
outsl
push
sub
push
fisttpll
out
mov
movq
jle
lret
jno
jo
aas
outsl
push
fadds
adc
fsts
pop
mov
divb
data16
xchg
inc
sub
cmp
push
rcl
sub
inc
jg
add
mov
mov
push
test
arpl
xor
inc
adc
jbe
push
sbb
xchg
jge
mov
fisttpl
sub
fwait
add
popf
mov
mov
mov
dec
pop
fsubr
inc
mov
push
add
pop
cmp
cmc
xor
std
lss
hlt
das
push
lea
ret
xchg
outsl
fcoms
lds
fdivp
std
push
and
sub
in
xchg
lea
jae
jmp
outsb
in
sub
xchg
imull
stc
jmp
inc
xchg
cli
cmp
fnsaves
mov
cmpsb
jae
cmpsl
dec
pop
cmc
jae
cld
xchg
loop
sti
lods
sub
xor
inc
icebp
lds
ja
push
inc
cld
cs
and
xchg
pop
inc
pop
fwait
daa
mov
adc
dec
rorl
ss
sub
sub
dec
mulb
xchg
inc
mov
push
loope
fsubs
stos
push
inc
cld
fstps
or
pop
jne
jb
jno
dec
orl
xor
rcr
lock
les
dec
dec
rcr
clc
mov
mov
pushf
add
imul
dec
rorl
mov
mov
adc
scas
adc
jns
xchg
pop
test
add
mov
sarb
jae
lods
add
cmp
js
pop
sub
mov
cld
mov
je
int
int3
push
sub
adc
push
imul
push
lret
aas
mov
jmp
mov
push
jb
je
or
xor
std
out
mulps
jmp
jo
xor
fildll
lods
push
xlat
pop
push
mov
cltd
pop
sbb
les
mov
imulb
outsl
aad
int
cs
test
out
add
ds
rorb
pushf
jmp
lea
ja
setae
setg
xor
cmc
sub
call
not
add
add
setae
btr
pushf
mov
movb
mov
shr
pushf
cmp
push
mov
lea
je
clc
clc
cmp
call
xchg
cltd
lods
adc
leave
lock
aam
xor
in
incb
sarb
adc
loop
sbb
mov
enter
sti
mov
and
aam
ljmp
jge
xchg
aad
shll
pushf
stos
cmp
stc
or
mov
mov
pop
jl
call
pusha
lea
je
pusha
call
lea
je
cmp
jp
pushf
cmp
pusha
lea
je
push
push
pusha
lea
jmp
mov
pusha
push
jmp
push
ret
mov
sub
adc
push
cmc
add
dec
xchg
int3
sti
dec
scas
mov
sub
mov
out
sbb
in
pop
push
inc
inc
or
mov
cltd
add
adc
cmp
mov
sbb
and
in
mov
dec
mov
dec
shll
nop
pop
and
movsb
or
outsl
inc
out
rcrl
fs
xor
fldcw
adc
rcrb
call
arpl
mov
push
xchg
push
mov
vpcmpeqb
sub
add
int
push
xchg
daa
jbe
leave
incb
jecxz
stos
in
xchg
pushf
int
in
xchg
lods
sbb
pop
mov
mov
insb
jmp
xchg
jle
adc
rorl
adc
ret
mov
repnz
mov
cmp
popf
ljmp
scas
mov
push
jecxz
pop
repnz
mov
jmp
pushf
push
mov
movl
jmp
pusha
call
lea
je
clc
push
pusha
sub
cmp
push
cmp
pushl
pushf
call
pushf
lea
jb
call
lods
lock
mov
jg
adc
xor
cmpsb
push
lret
test
test
movaps
xchg
scas
mov
into
test
in
stos
loop
sbb
push
imul
imul
jecxz
add
sbb
and
aaa
test
push
clc
loop
jecxz
leave
sub
pop
repz
mov
fldt
roll
mov
por
adc
testl
xor
ret
aad
push
inc
imul
mov
out
sti
push
mov
jbe
mov
in
shll
and
pusha
mov
inc
push
cmp
aam
out
outsl
sub
mov
xlat
call
in
pop
aaa
test
jg
mov
add
repz
inc
fists
sub
pushl
div
lcall
adc
subl
pop
les
lahf
mov
push
icebp
pop
inc
dec
or
pop
sub
push
arpl
ficoms
test
add
call
push
lea
je
pushf
jmp
push
pusha
lods
neg
clc
sar
rcr
add
stc
bt
pushl
ror
movb
rol
pushf
sub
mov
neg
pushf
mov
stos
pushf
not
call
mov
call
sbb
cmp
js
fs
add
roll
popf
into
push
pusha
xor
lock
mov
fbstp
jb
jecxz
adc
inc
stos
insb
sti
mov
cmp
inc
push
int3
adc
push
xchg
loopne
out
and
mov
int3
xchg
test
aaa
out
adc
xchg
add
repnz
js
sub
or
dec
and
mov
stc
sub
stc
fidivrs
push
mov
inc
and
pop
mov
cltd
test
in
ret
gs
xchg
jge
ret
enter
cmp
mov
test
mov
pusha
mov
and
stos
daa
xor
sbb
mov
in
inc
adc
mov
dec
sbb
loope
mov
xor
lock
dec
nop
movsb
popa
popf
mov
ss
movsb
jae
adc
shlb
cltd
adc
adc
add
sub
adc
in
inc
arpl
out
sub
mov
push
pushf
inc
scas
aaa
sbb
push
inc
mov
int3
sti
call
imul
jae
dec
rorl
sbb
jo
lock
sbb
cmp
movsl
rcrb
inc
cmp
sub
rcrb
mov
xchg
aad
add
jp
jne
out
jbe
adc
mov
loope
cld
adc
rorl
inc
insb
sti
out
mov
push
sub
mov
xor
adc
into
add
iret
mov
test
in
ret
mov
push
inc
xor
sub
pop
mov
popf
popf
es
movsb
xor
push
and
adcl
lea
je
cmc
push
movb
cmp
jmp
add
inc
gs
outsl
fs
gs
imul
add
pusha
test
mov
push
call
cwtl
mov
pop
xor
xchg
inc
je
xchg
stos
sbb
cmp
adc
and
dec
mov
daa
mov
pop
push
xor
xchg
cmp
jo
and
arpl
mov
cmpb
xchg
sbb
fnstcw
out
aaa
dec
sbb
test
mov
or
stos
stc
pop
sbb
les
mov
ljmp
pop
pop
sub
shl
push
xor
test
jg
mov
mov
cmp
or
jae
loope
inc
xor
mov
push
insb
out
out
cmp
lods
andb
push
or
mov
cmpsb
in
dec
mov
xor
fidivs
dec
or
test
sub
sbb
xchg
ret
jo
mov
adc
add
in
xchg
cmp
movsb
jo
add
pop
int3
xor
outsl
decl
sub
pop
and
outsb
dec
jb
pop
mov
adc
mov
adc
arpl
jo
push
jg
ret
xor
add
movsb
xchg
lcall
dec
pop
ljmp
sub
and
xchg
dec
xchg
sahf
enter
ljmp
jnp
push
dec
jle
jmp
fsubs
mov
inc
imul
cmc
fwait
and
sar
imul
shlb
out
mov
inc
aam
dec
idivb
pop
out
lcall
mov
push
jmp
std
pop
sbb
cmp
lret
mov
sub
test
and
mov
out
mov
xchg
pop
inc
out
mov
pop
or
sub
pushf
push
cmp
repnz
in
ds
cwtl
loope
mov
adc
push
imul
fwait
stos
jns
mov
mov
stc
sbbl
inc
dec
pop
scas
mov
ds
fistl
loop
pusha
pushl
lea
je
push
mov
pushf
pusha
lea
jmp
sub
pushf
cmp
call
mov
jns
clc
clc
test
pusha
lea
jno
pusha
mov
lea
je
pushf
sub
push
push
cmp
pushf
pushl
mov
lea
ja
push
pusha
imul
movb
push
test
add
pushf
lea
jmp
call
imul
mov
adc
hlt
and
cmp
fcomp
mov
lahf
add
xchg
or
loope
ljmp
repnz
xchg
inc
test
out
pop
sbb
rorl
mov
cwtl
ret
cltd
xchg
inc
cmc
mov
cmp
loopne
call
jne
push
xor
out
stc
iret
xchg
cmp
mov
leave
push
data16
xchg
fidivl
rorl
adc
dec
lcall
and
cmp
mov
push
lea
jmp
or
js
cld
stos
xchg
lds
adc
imulb
movb
pop
and
mov
stc
out
enter
repz
sub
pmaddwd
fucom
dec
jp
rorl
daa
xor
fcompp
or
ja
pop
push
fsub
sub
inc
and
or
add
loopne
pop
sub
or
push
scas
cmp
xchg
or
mov
scas
cli
or
mov
jmp
dec
pop
in
sbb
fldenv
mov
aam
sbb
adc
mov
cmp
sahf
push
stos
jne
fwait
sbb
in
hlt
arpl
mov
jb
push
ret
xchg
and
adc
push
aaa
and
outsl
or
cwtl
or
lret
xchg
idivb
pop
outsb
stc
dec
pop
push
pop
push
rorl
push
or
sbb
push
in
fmull
cli
ja
test
mov
and
add
loop
cwtl
or
fnstsw
in
pop
std
or
movsb
fcoms
xor
das
shll
inc
fs
xchg
cmp
push
hlt
mov
push
sbb
push
inc
mov
pop
jmp
push
and
cmpsb
inc
scas
negb
out
add
and
jecxz
xchg
popf
sahf
mov
lret
bound
or
rorb
nop
pop
jmp
lret
fsubs
inc
push
pop
loop
lds
pushl
rep
mov
mov
pushl
movb
pushl
push
lea
jmp
imul
sbb
sub
inc
outsl
popa
int
sub
fildl
cltd
out
int3
sti
pop
aas
movsl
lret
mov
inc
inc
lahf
movsl
dec
pop
ret
pop
pop
xor
pop
push
repz
bound
push
sbb
movsb
dec
xrelease
mov
cmp
lea
daa
jne
icebp
aaa
rcl
pop
fld1
scas
push
loopne
cmpsl
mov
jmp
sub
xor
mov
sbb
push
and
cmp
push
fs
lea
imul
movsbw
pop
not
pop
pusha
pushl
ret
pushl
test
pushl
popl
pusha
pusha
clc
cmp
push
jmp
aas
add
insb
pushf
or
cmpsb
adc
ret
addr16
jnp
push
mov
test
insb
xor
jle
and
push
sbb
lcall
adc
jb
adc
cmp
int3
adc
and
movsbw
btr
mov
push
pushf
and
test
test
cmp
clc
add
movw
lea
jmp
shrd
bts
xor
pushf
seto
jmp
bswap
lea
add
pusha
clc
mov
call
push
fsub
sbb
es
mov
push
add
or
aad
xchg
pop
sub
dec
push
mov
xchg
or
mov
xlat
das
cmp
mov
inc
icebp
add
sti
shlb
jb
and
xchg
outsb
rcrl
pop
test
mov
cmp
sub
push
xor
mov
dec
add
dec
mov
sub
orl
fstpt
aaa
mov
rorb
add
add
add
ret
jl
or
jmp
pushl
mov
pushf
inc
movb
not
pushf
pushf
mov
lea
pusha
jmp
and
in
sub
loope
pushf
dec
mov
and
cmc
pop
subb
inc
jno
xchg
mov
addr16
xor
push
add
cwtl
fs
inc
push
mov
mov
xor
jo
adcl
scas
rclb
adcb
int3
adc
push
mov
jmp
stc
jmp
ja
inc
push
sub
xor
xlat
dec
cmp
mov
xchg
and
jo
cld
loopne
and
xchg
xchg
or
bsf
mov
das
loop
cmp
mov
sbbb
mov
xchg
add
cmp
mov
cmpsb
nop
das
or
lret
out
or
mov
add
test
pop
inc
push
out
mov
mov
test
ljmp
nopl
lds
push
dec
cmp
pop
mov
sub
adc
adc
push
std
sbb
shrb
and
lea
popa
xchg
xchg
push
cmpsl
lods
pop
cmp
lcall
cli
mov
push
jmp
sub
lock
std
cmc
xor
outsl
xor
in
sbb
cmp
dec
ret
insb
fcomps
add
dec
sub
shlb
lock
adc
out
icebp
jle
push
out
pusha
xchg
xchg
mov
pop
not
movzbw
mov
pushf
pushf
push
pushl
ret
adc
cmp
sub
cltd
lds
rolb
repnz
cmp
inc
gs
mulb
push
repnz
jbe
jecxz
and
int
pop
xor
cli
mov
iret
enter
test
mov
adc
mov
adc
cmp
mov
dec
fldt
adc
jmp
mov
xchg
sub
dec
ja
fisttpl
mov
push
pop
stc
les
or
aam
cmp
lahf
or
or
dec
fistps
xor
jmp
xchg
shrl
or
ret
jae
push
rolb
pop
jo
or
pop
sub
mov
stc
adc
add
or
repnz
int
xchg
lds
or
add
bound
std
rcrl
mov
hlt
push
jl
cwtl
xor
pushf
lea
call
push
lea
jae
cmp
clc
push
xor
movl
movb
push
lea
call
call
stc
mov
bt
pushf
pushl
bt
sub
push
stc
test
not
cmp
xor
pushf
rol
clc
stc
call
jp
aas
and
aaa
lahf
clc
push
or
jmp
test
in
sub
push
cli
or
mov
xchg
xchg
or
out
test
movsl
cmpsl
scas
pop
pop
adc
xchg
stc
es
dec
mov
jns
jne
popw
jmp
adc
lods
mov
sub
mov
cltd
jg
ja
pop
cmpsl
je
xchg
pop
mov
mov
push
adc
add
out
and
xchg
pop
xchg
cwtl
add
sti
mov
cmp
push
push
lret
sahf
mov
pop
xchg
xchg
or
rcll
xor
or
mov
jp
cwtl
mov
enter
loop
lcall
xor
inc
jmp
jle
cltd
and
sub
xor
sub
icebp
mov
jecxz
add
fbstp
adc
je
xor
jnp
ja
xchg
sub
lahf
or
movsl
adc
jbe
aad
mov
paddd
push
ffree
inc
xlat
scas
mov
inc
push
loop
dec
fidivs
addr16
and
stos
mov
xor
mov
inc
mov
push
push
imulb
pop
aas
pop
sti
sbb
outsl
decb
mov
lret
mov
adc
test
jns
fbld
jle
loope
add
mov
mov
mov
jb
xor
fs
insb
add
inc
and
negl
inc
and
sbb
inc
and
jnp
movsl
lock
lea
jmp
jne
call
inc
in
and
out
mov
in
pop
leave
jnp
cltd
dec
sbb
xchg
jns
loope
mov
rorl
sti
xchg
mov
cmp
sbbb
jno
inc
or
jecxz
leave
xchg
outsb
push
push
loop
cld
aam
jmp
ret
mov
and
sub
out
inc
sbb
lods
js
stc
stos
aad
lock
cmp
and
cmp
xchg
add
sub
xchg
ss
mov
jns
push
or
xchg
inc
mov
mov
and
shl
add
cs
sub
push
push
pop
stos
cmp
xlat
call
mov
or
push
call
and
les
fmull
jns
sbb
leave
cld
and
mov
sub
dec
std
xchg
or
lcall
fwait
in
aad
iret
or
shlb
loopne
inc
mov
pop
movsb
xor
jb
xchg
cmp
lods
icebp
fcom
int3
lock
lods
cmp
fldcw
int3
xlat
and
insl
aad
mov
mov
lea
call
rcr
imul
js
mov
nop
pushl
pop
adc
loope,pn
add
cwtl
mov
je
mov
inc
xchg
xchg
or
imul
xor
pop
addr16
cli
es
jmp
inc
add
jbe
mov
pop
lods
test
add
insb
ljmp
inc
sub
sbb
sbb
push
and
cmp
rcrl
push
outsl
inc
punpcklbw
push
lods
fs
push
lods
xchg
and
sbb
mov
pushf
movl
cmpb
mov
pushf
pusha
pushf
lea
jne
shl
push
xor
inc
shl
mov
call
loopne
js
add
xchg
xchg
imul
xlat
lahf
bound
mov
mov
popl
mov
lret
dec
push
repnz
mov
sub
add
repnz
add
ljmp
dec
insb
jae
pusha
movsl
cltd
mov
orb
hlt
arpl
into
and
ret
rclb
jae,pn
js
sti
lcall
fldcw
int3
movsb
push
stos
pop
icebp
ret
xorb
loopne
fstl
test
mov
mov
test
pop
out
outsb
test
lods
or
push
sbb
adc
in
xchg
lahf
xchg
fildl
scas
fcomip
inc
out
pop
adcb
add
lret
inc
fidivl
cs
xchg
icebp
cmp
inc
data16
push
outsl
fcomps
pop
xor
in
xchg
cmpsb
leave
cmp
sbb
jns
jl
push
ret
add
subb
sbb
jne
mov
out
lahf
es
mov
pop
movl
mov
mov
adc
mov
imul
mov
and
imul
push
shrl
or
xchg
lds
icebp
cmp
jnp
xchg
sub
das
scas
test
dec
shrl
flds
xchg
push
cmpsb
scas
icebp
mov
in
rcll
adc
xchg
loope
pop
sub
dec
fldcw
mov
xchg
jle
cmp
data16
lea
call
call
call
js
int3
jle
pop
mov
insb
xchg
mov
and
xchg
and
cmp
sar
sub
jg
sub
test
mov
add
lahf
lret
add
call
enter
inc
jecxz
lahf
call
jle
rcl
dec
xor
push
mov
xlat
push
subl
jb
into
push
sub
std
or
or
call
es
scas
push
mov
je
push
jp
add
pop
popf
jg
dec
mov
idiv
icebp
pop
int3
cld
addr16
clc
adc
pop
inc
push
test
pop
push
and
imul
cs
push
cld
hlt
pop
sub
pushf
pusha
rorl
sbb
loop
hlt
jg
sub
negb
dec
ljmp
sbb
add
cmp
movsl
dec
pop
jp
mov
sbb
mov
xchg
sarl
adc
std
je
mov
ret
sbb
clc
sahf
call
or
loopne
hlt
in
loopne
pop
pushf
aaa
daa
pop
lods
mov
scas
cltd
sbb
test
sub
or
and
pop
sbb
cmp
sahf
orb
sbb
hlt
lds
mov
adc
cmp
call
mov
and
sub
mov
daa
xlat
xbegin
sub
xor
loope
push
pop
popa
inc
mov
pushf
mov
lea
popa
dec
cmp
xchg
mov
push
push
addr16
and
aas
sub
daa
imul
sti
xor
pop
icebp
stc
stos
xor
lods
outsb
es
rolb
xor
mov
xchg
push
jge
aas
stos
jnp
inc
out
pop
push
add
out
mov
das
mov
pusha
xor
loop
jle
sahf
das
jge
lcall
lcall
add
pushf
push
lea
jmp
mov
js
mov
es
add
ja
xchg
add
mov
push
ljmp
repnz
stos
imul
inc
push
cmp
test
jmp
pavgw
push
sbb
cmp
int3
adc
je
and
js
inc
imulb
inc
jbe
adc
test
je
pop
add
or
add
xor
lret
jno
repnz
shr
cld
les
adc
add
imul
xchg
aas
xchg
in
hlt
cld
in
lahf
or
repz
lock
push
jne
mov
inc
and
jmp
scas
pop
mov
fstpt
pop
or
inc
mov
adc
jne
adc
ljmp
push
dec
lret
mov
call
not
mov
pusha
sub
mov
push
rep
jmp
lea
call
test
stc
sub
pushf
movb
lea
jg
jne
push
movl
jmp
inc
push
lods
sub
leave
lock
or
cli
sub
mov
js
xchg
loop
sbb
pop
sbb
inc
stos
xchg
outsl
push
push
jne
cmp
orb
adc
push
xchg
loopne
add
dec
popf
out
decb
jmp
push
fs
aas
repnz
adc
int3
call
mov
pushl
push
movw
lea
call
push
call
test
test
mov
movzbw
shld
sbb
mov
call
push
cmp
jmp
jmp
and
mov
call
pushf
movb
pusha
mov
push
not
pushf
setb
lods
cmc
cmc
cmc
cmc
not
movb
cmc
pushl
clc
ror
jmp
push
jmp
rcrb
test
inc
dec
pusha
outsl
addr16
sbb
sbb
sbb
or
sbb
lods
mov
push
adc
push
ss
xchg
cmp
pushf
cmp
movb
cmp
call
clc
sub
call
sub
pusha
pushl
inc
lea
pushf
lea
call
pusha
call
adc
add
add
add
mov
clc
clc
clc
test
call
in
mov
mov
and
mov
cmpsl
in
cmc
pop
add
add
adc
nop
sbb
add
adc
or
xchg
mov
xchg
cmp
ds
in
stos
lea
mov
mov
adc
dec
cli
or
ss
adc
and
pop
movsb
ja
push
sub
add
popf
les
add
cmpsl
lea
ja
call
mov
js
lock
and
push
push
mov
mov
adc
xchg
imul
push
or
ljmp
push
dec
std
jmp
xlat
lret
fcmovne
dec
dec
inc
pop
mov
mov
sbb
shll
test
mov
sarl
dec
ret
andl
mov
fwait
imul
push
jl
or
and
push
xor
in
adc
out
or
jg
xor
mov
lret
mov
clc
out
jb
jno
daa
xor
adc
js
pop
pop
fistps
sbb
pop
and
sete
ss
jbe
push
idivb
loopne
mov
je
adc
push
jno
aad
add
icebp
rcll
jle
sbb
and
call
lods
cwtl
mov
movsbl
xchg
call
loop
in
sub
mov
push
subb
inc
jno
push
ds
mov
jp
cmc
sub
sbb
dec
mov
sub
add
xchg
xchg
sub
in
aad
mov
lds
lock
imul
xlat
movsb
cmp
fstl
add
push
ret
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
add
cmp
subl
aaa
sub
mov
test
adc
push
jl
jns
out
call
xor
inc
cmc
sub
out
dec
lock
decb
rcrb
in
or
stc
and
notl
push
dec
xor
mov
je
in
rorl
push
push
sbb
loope
sub
xchg
cmp
pop
enter
mov
xchg
mov
mov
jl
push
fdivp
sarl
notl
icebp
xchg
adc
aas
push
enter
call
xor
pusha
sub
jmp
pop
popl
pop
push
int3
cmp
pusha
pop
and
push
lods
movsb
push
mov
push
adc
mov
les
inc
mov
cmpsb
fwait
or
add
push
push
or
cmpsb
and
repz
mov
or
pop
mov
paddusb
dec
pop
in
mov
push
out
jle
cmp
js
aad
xor
aam
out
sbb
inc
das
fwait
lret
popf
adc
loop
xchg
mulb
jne
pop
inc
scas
jg
xchg
mov
adc
xor
in
fsub
movsb
xor
pop
test
and
push
lea
mov
mov
xchg
cmpsl
xor
mov
paddw
shll
test
or
or
pushf
pushl
jmp
clc
test
push
jmp
sbb
sarl
imul
call
jno
testb
or
mov
sub
arpl
cmpsb
int3
xrelease
dec
int3
xor
lahf
daa
fisubs
fimull
into
jbe
shll
stos
imul
incb
add
aaa
fwait
and
fs
adc
data16
pop
xchg
dec
lcall
inc
mov
dec
inc
pusha
push
mov
push
pushl
call
push
lock
std
std
andb
mov
ret
jns
push
mov
pushf
mov
pop
cmp
out
aas
lahf
sub
jge
or
mov
and
aam
pop
roll
fbld
adc
test
das
lods
xchg
mov
push
push
inc
jbe
arpl
xchg
push
push
cmpsl
hlt
adc
or
test
jmp
adc
inc
pushf
lea
jae
bsr
lea
mov
bsf
call
clc
cmp
call
push
movw
push
add
jne
push
lea
pusha
mov
jmp
inc
shll
js
jmp
or
xchg
mov
push
mov
ljmp
adc
pop
vphaddbw
mov
loop
xchg
mov
js
pop
or
idivb
out
cwtl
cs
leave
or
push
push
stos
mov
fiadds
xchg
dec
aad
out
pop
mov
stos
dec
xor
loopne
pop
lods
mov
leave
aad
hlt
rclb
in
jecxz
inc
adc
leave
pop
adc
xor
inc
sub
push
inc
sti
test
mov
cmp
xor
push
insl
xor
clc
mov
std
insb
inc
inc
stos
call
or
stc
xor
push
jns
dec
rcl
fcoms
je
popa
push
sahf
sub
mov
and
pop
dec
sar
adc
in
fisttpl
lea
jmp
fildll
xor
cld
addr16
add
xchg
xorl
inc
mov
outsb
hlt
shrl
sbb
or
cmp
pop
or
dec
lret
cmp
sub
repz
xor
sub
nop
lcall
clc
xor
mov
inc
xchg
les
bound
xorb
aaa
cld
jg
fistpl
frstor
jae
add
push
xchg
and
adcb
jmp
adc
jns
mov
pop
pop
xor
sbb
mov
int
jmp
mov
pop
or
leave
fstl
inc
mov
imul
lahf
sbb
sbb
cmp
dec
xorl
pop
arpl
movsb
push
and
mov
cmp
and
xchg
stc
pop
adc
out
scas
dec
jno
lret
xchg
leave
nop
cmp
test
mov
pop
push
inc
push
and
lahf
test
xlat
mov
call
jmp
push
lea
jne
pusha
lea
call
pusha
push
movb
lea
jmp
bt
pushf
sub
bt
clc
call
stc
jbe
push
shl
mov
cmc
test
sub
jmp
mov
js
stc
call
inc
repnz
jnp
gs
call
pop
pop
std
stos
add
andl
loopne
xchg
faddl
fmuls
loope
aas
out
or
jmp
sti
jns
lds
xchg
xchg
xchg
cmc
aam
xor
adcl
pop
pop
cmpsl
xor
sub
leave
out
sbb
dec
pop
das
std
push
sbb
cmp
sbb
or
add
cmp
add
mov
lea
jmp
jmp
add
push
add
addb
add
mov
add
add
add
xor
xchg
repnz
cltd
add
aaa
add
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
js
arpl
cmc
cmpsl
adc
jae
pop
add
mov
push
int
outsb
pop
test
pop
or
sahf
stos
sub
or
push
push
jns
dec
xchg
jl
xor
mov
push
jle
rorl
mov
xchg
sbb
int
lods
jg
sbb
sti
dec
pop
sub
bound
sbbl
add
in
das
arpl
call
add
mov
pushf
mov
xor
test
mov
cmp
cmp
stc
sub
pushl
pusha
rep
call
ljmp
dec
cmp
fwait
or
imulb
adc
lret
div
shrb
add
cmpsb
xchg
or
loopne
imul
mov
dec
test
lods
push
or
lcall
loopne
mul
pop
arpl
inc
dec
outsl
pop
or
or
sub
popf
stos
mov
dec
sbb
xor
jmp
jne
sub
sub
out
fimuls
out
xchg
mov
cmc
insb
inc
and
inc
sub
and
add
cmpsl
xchg
or
jg
inc
xor
iret
jl
or
out
mov
push
or
cmc
pop
inc
mov
stos
shll
or
jb
push
dec
xor
popf
je
add
push
mov
in
shl
enter
cltd
cli
jo
bound
mov
cmc
jo
add
mov
mov
testl
mov
js
mov
arpl
sub
dec
aaa
movsl
push
add
dec
cs
xor
adc
popf
subl
cmpsb
xchg
or
mov
lock
dec
mov
test
loop
dec
subb
inc
test
mov
push
mov
ljmp
popf
loopew
fs
mov
je
lret
xlat
test
jne
push
movsb
mov
dec
les
lret
clc
sub
movzbl
mov
cmp
cmp
push
cmpb
pusha
call
stc
and
call
testl
xchg
mov
daa
xchg
enter
stos
push
sbb
mov
call
adc
dec
mov
adc
xor
xor
aaa
and
xchg
adc
ret
loopne
orb
jp
out
sbb
mov
add
pop
push
shlb
mov
call
push
sub
or
push
add
into
ret
mov
inc
mov
shlb
mov
mov
jnp
jb
data16
test
cmc
sbb
xchg
movsl
push
mov
loope
inc
push
push
sub
jg
insb
repz
pop
mov
imul
call
mov
xchg
aaa
dec
add
das
pusha
or
pushf
mov
mov
pushf
lea
je
push
clc
or
call
stc
push
btc
mov
adc
jae
rcr
push
test
sub
push
bsr
sbb
setnp
push
push
xadd
not
mov
btr
push
sar
mov
sbb
xor
rcl
bswap
mov
sbb
bsf
or
pusha
mov
clc
clc
stc
or
call
add
or
sub
xor
setg
ror
ror
shr
lea
mov
bsf
shl
add
pushf
bsf
add
or
rcr
dec
shr
mov
test
movb
call
lea
jne
call
test
neg
cmc
push
push
cmc
shr
jmp
cmc
sub
push
lea
call
jmp
or
sub
pop
cmpsl
adc
je
xchg
shrl
cmp
pushf
out
fstpt
lods
fbstp
ret
test
or
in
push
outsl
xor
cld
arpl
and
mov
mov
cmp
daa
out
sbb
pop
stc
nop
push
inc
dec
sbb
and
stos
out
std
add
xor
lock
fninit
aam
xor
aam
mov
or
in
mov
ret
je
icebp
rclb
and
js
xor
paddd
mov
sti
divb
xor
adc
jecxz
xchg
or
push
ret
mov
out
jecxz
push
insl
sarl
pop
data16
push
lret
sahf
lret
sbb
xor
xchg
test
push
scas
cmp
push
and
cmp
dec
push
sahf
xchg
sbb
xlat
gs
adcl
push
jl
mov
cmp
lret
rol
jae
aam
mov
iret
shr
mov
cmc
cltd
push
push
sbb
stos
xchg
or
pop
push
cmp
femms
pop
aas
repnz
enter
lcall
inc
jb
ret
dec
mov
jge
daa
cmp
jnp
and
jnp
das
mov
pop
cmp
cmp
lds
jbe
jno
add
testb
bound
imul
cmpsl
jmp
cmp
repz
push
inc
mov
fiaddl
add
inc
movsl
and
jb
lcall
or
stos
inc
lock
xor
iret
ffree
ja
leave
pop
inc
inc
inc
push
outsb
push
or
in
sub
mov
push
mov
data16
in
decl
push
jmp
cmpsb
mov
or
cmp
sarl
sar
or
add
rolb
pop
mov
cmc
test
movb
jmp
lea
jne
lea
bswap
pusha
jmp
inc
push
setne
inc
dec
setp
call
sub
loopne
mov
cmpsb
fmul
imull
push
sbb
push
aam
cmp
rclb
xchg
or
push
mov
push
out
mov
and
or
inc
sub
xchg
mov
xchg
ret
inc
push
push
pop
mov
xchg
inc
daa
dec
icebp
fucomip
xor
mov
xor
fwait
inc
inc
xor
adc
out
xchg
pop
sub
pop
mov
inc
jmp
xchg
js
mov
xchg
add
fmul
cmp
data16
and
xchg
add
or
inc
mov
por
add
xchg
inc
xchg
and
pop
ds
ljmp
sbb
jne
cmp
push
icebp
xchg
pop
add
jns
ret
lock
icebp
push
adc
dec
sti
int3
sbb
aaa
inc
push
out
adcl
loopne
cmpsb
sbb
lods
add
or
test
adc
jae
cmc
add
jmp
mov
test
call
loopne
sub
xchg
ds
mov
test
scas
das
mov
insl
fmull
fdivrs
aad
dec
cmp
or
push
gs
mov
xor
sbb
adcb
lods
pop
pop
imul
stos
xor
iret
jbe
loop
pop
xor
or
mov
jle
and
decl
pop
push
pop
icebp
sbb
jmp
push
movl
movb
mov
call
add
mov
bound
loop
inc
mov
in
repz
stos
pop
inc
cs
scas
inc
ja
push
das
mov
xchg
or
jns
pop
je
fiaddl
orl
push
je
movsl
daa
jno
and
jbe
sub
int
or
rclb
lods
mov
pop
push
push
sub
jp
xchg
cli
or
mov
push
pushf
push
sbb
lock
sub
mov
push
mov
xchg
lcall
insl
jnp
adc
mov
not
push
movsbw
sub
jl
mov
adc
mov
cmp
cmc
call
lea
jne
pushf
sub
aad
das
and
mov
lea
shr
setp
cmp
add
shl
jmp
cmp
push
lea
jbe
movsbw
bsr
pusha
mov
pop
add
pushf
cmc
sbb
mov
and
pusha
add
and
shld
ror
movsbw
movl
cmc
call
lea
jne
push
call
push
lea
ja
call
inc
add
sub
sub
mov
out
xchg
push
lahf
test
dec
push
mov
sbb
or
xor
insb
mov
pop
out
sbb
pop
idivb
xchg
cmp
divb
leave
mov
popa
pushf
call
dec
or
jnp
iret
xchg
loop
push
dec
inc
sub
cmp
roll
push
loopne
orb
mov
pushf
das
push
insl
cltd
dec
xor
adc
jmp
mov
js
leave
clc
push
and
idiv
shll
mov
cmp
orb
ds
inc
mov
adc
hlt
add
pop
xor
adc
int3
subb
sub
sbb
inc
out
jno
nop
notl
mov
int
inc
fcmovb
ja
pushf
fiaddl
push
repnz
xchg
dec
cmp
fsubrs
push
jne
ficoms
cmp
add
shl
in
fsubrp
mov
dec
sbb
and
ret
pop
jb
inc
xchg
jecxz
add
dec
gs
popa
addr16
outsl
js
add
inc
and
xor
movl
lea
jmp
jns
pop
cmp
repnz
rol
scas
loope
rcll
movsl
in
shll
or
movsb
ret
jbe
jns
pop
mov
cmp
into
js
loopne
movsl
jp
cwtl
fiadds
and
popf
xchg
or
stos
push
inc
scas
pusha
cs
or
push
mov
loop
fiadds
pushw
dec
mov
stos
jns
in
inc
push
mov
jno
daa
jl
mov
mov
pushf
ds
cmp
std
das
pop
and
imul
inc
sbb
ret
dec
add
sti
test
in
sahf
into
jnp
push
mov
daa
and
fidivl
mov
cwtl
inc
xlat
pcmpeqw
stos
jp
test
fsubp
inc
into
ds
push
mov
fcoms
and
or
lret
mov
sub
xor
fsubrs
je
push
mov
popa
xchg
lds
xor
add
fsubr
ja
pop
cmp
stc
xchg
pop
mov
jnp
cmpsb
or
mov
sar
cmpsl
cwtl
mov
xchg
add
jmp
dec
add
shl
cmp
pop
push
inc
xor
fucomip
mov
inc
push
pop
into
pop
leave
push
xchg
pop
mov
sub
or
testl
loopne
out
int3
adc
xlat
call
jnp
pop
aas
sub
sbb
add
popa
movq
adc
aad
sbb
sub
ss
scas
cmp
xchg
or
jno
lods
aam
packuswb
iret
fidivrl
in
insb
fimuls
stc
xor
jmp
stos
lods
lods
movsb
push
sbb
mov
aaa
jle,pn
aad
and
stc
pop
addr16
jecxz
add
hlt
les
push
sub
push
movsl
xor
ret
iret
jbe
sub
add
adc
xorb
mov
jns
loopne
cli
faddl
jnp
xor
or
dec
cmp
lahf
test
inc
jae
pop
jns
in
andl
ja
sbb
jl
add
repnz
addr16
mov
cmp
pop
and
andl
cmp
insl
fcoms
add
fs
nop
mov
inc
mov
adc
out
adc
shll
add
push
add
addb
add
mov
add
add
add
xor
xchg
repnz
cltd
add
aaa
add
add
add
test
movb
pop
pop
not
bswap
mov
cwtl
not
lea
lea
jno
push
push
movl
push
movb
pushl
pusha
mov
pushf
pushl
ret
pushf
call
shld
bsf
sub
bt
shld
shld
shr
btr
mov
or
bt
add
call
cs
sub
test
dec
shr
sub
inc
add
dec
push
jo
dec
adc
or
mov
or
xor
adc
icebp
pop
dec
insl
ja
iret
mov
mov
push
push
jne
mov
and
sub
inc
adc
adc
pop
repnz
xor
sub
stos
cmc
inc
push
jae
test
add
shll
sarb
lret
leave
or
stc
leave
fsubrs
sub
fnsave
ja
pop
int
xchg
les
das
addb
jp
or
dec
jbe
jne
movb
mov
mov
cmpsb
out
jns
mov
jecxz
andl
imul
cmp
xlat
dec
inc
mov
lock
cmc
mov
mov
and
pop
rol
jge
pop
shll
xchg
pop
jo
test
inc
outsl
and
sti
int3
jb
les
fxch
sbb
out
das
addr16
fsub
mov
ret
cmc
test
test
andb
adc
mov
lock
adc
mov
jnp
or
mov
inc
sub
clc
add
xor
push
daa
test
ss
mov
mov
inc
or
les
xchg
xchg
cld
call
xchg
addr16
dec
pop
rcrb
lods
push
shll
movsb
in
xchg
sub
xchg
xor
mov
mov
in
mov
cmp
sbb
lret
pop
lds
movb
jle
add
and
jecxz
test
or
rorl
mov
mov
sarl
push
lcall
inc
jle
jmp
fimuls
sub
fildl
out
push
or
mov
pop
adcl
aad
push
push
std
add
js
outsb
testb
ret
jmp
data16
fs
push
ret
cld
mov
and
aaa
cmovno
add
push
pop
inc
dec
cld
out
test
mov
mov
add
pop
out
hlt
or
clc
fcomp
shl
das
mov
or
jbe
mov
jge,pn
in
jbe
pop
add
js
popa
sarb
stos
popf
leave
cmp
out
addr16
xchg
mov
test
lret
xor
ffreep
test
push
aad
imul
mov
inc
xchg
cmpsb
cmp
movsb
hlt
adcb
or
jle
bt
push
shld
stc
ror
shld
push
bts
mov
dec
mov
ror
pusha
stc
jmp
jmp
hlt
jle
inc
sub
or
jns
push
xorb
rolb
add
xor
and
repz
push
pop
and
cmp
movsl
dec
or
mov
pop
mov
pushf
stos
dec
xchg
loope
push
sub
sbb
into
cmp
rcrl
cwtl
push
ja
iret
repz
jae
push
movsl
rcl
push
mov
xchg
sahf
and
test
les
repnz
in
inc
push
lahf
jno
push
popf
mov
sub
rcrb
or
sub
and
into
lods
popf
inc
shll
adc
movsl
dec
addr16
std
xchg
pop
mov
push
push
pop
mov
movsl
ja
jp
push
jge
cmp
negl
mov
sub
and
fisttpl
faddl
push
in
lods
js
les
arpl
leave
push
pop
jmp
sub
adc
mov
inc
push
popa
xor
sub
aas
dec
lret
jmp
pop
add
add
test
shrd
clc
add
jmp
pusha
lea
ja
cmp
sub
stc
rcr
rcr
shrd
add
btr
movzbw
mov
rol
not
mov
pushf
repnz
jmp
jmp
pusha
pusha
movl
pushf
pushf
jmp
rcll
inc
sub
std
scas
sahf
adc
push
nop
cmp
fisttpl
cmp
shl
fnstcw
je
aam
sub
ret
push
dec
push
push
push
sbb
dec
jmp
push
add
pop
cltd
scas
inc
xchg
xor
push
popa
je
shlb
ror
clc
rol
adc
adc
fs
je
pushf
cmc
test
sub
pushl
test
cmp
stc
cmp
mov
pushf
lea
ja
stc
call
leave
shll
sub
add
sbb
out
les
in
mov
arpl
pop
in
mov
sbb
aaa
mov
xchg
xlat
shlb
pop
insl
mov
ds
or
mov
adcl
nop
xchg
dec
sbb
or
pop
nop
fucomp
and
rcl
dec
cmpsl
inc
jnp
xor
and
outsb
pop
add
jne
inc
and
push
subl
sbb
lahf
and
pop
mov
sub
mov
iret
andl
test
icebp
inc
jmp
sub
hlt
xchg
pop
iret
jl
mov
hlt
cld
pushf
sub
or
xchg
cmc
divb
cli
popf
into
lahf
mov
or
insb
jle
pop
sub
dec
adc
pop
lds
sub
repnz
jmp
repz
inc
sub
and
fcmove
js
push
shl
push
rcll
and
lods
xor
mov
imul
addr16
bound
cltd
inc
jmp
pop
mov
sub
cmp
xchg
mov
sub
xor
xlat
aaa
add
or
pushf
stc
dec
xchg
xchg
push
xchg
jge
cmp
adc
push
sbb
mov
mov
cmpsb
jne
xchg
addr16
iret
loopne
ret
lea
movsl
lea
stos
inc
stos
pushl
pushf
pushf
lea
jmp
lret
shll
sub
add
fiaddl
ja
push
add
mov
repz
mov
cmp
inc
fwait
movsl
dec
ds
jb
xchg
or
mov
out
mov
call
imul
ret
jmp
jmp
or
ret
test
cwtl
rclb
orb
scas
xor
cmp
xchg
mov
mov
cltd
and
bound
std
or
adc
jecxz
shrb
decb
adc
inc
sub
inc
and
cmp
pop
and
lea
lea
mov
movzbw
mov
push
call
pop
jmp
sbb
repnz
mov
or
xchg
call
adc
sub
xchg
or
pop
or
jle
cmovle
pop
sub
pop
shlb
xchg
outsb
mov
sbb
jmp
iret
clc
dec
xor
mov
dec
dec
outsl
jbe
in
movsl
mov
adc
jo
dec
in
jae
mov
sahf
icebp
ds
sub
mov
loop
test
loope
mov
std
sub
inc
inc
and
and
add
jmp
loope
outsl
mov
xor
add
mov
mov
ret
or
mov
sub
inc
enter
xchg
adc
sub
sti
pop
sbb
stos
mov
adc
mov
xchg
bound
or
leave
cwtl
add
fs
jne
stc
mov
clc
test
stc
cmp
call
adc
lock
sub
aad
cmp
sbb
scas
push
sarb
mov
fmull
mov
inc
pushf
rorb
inc
add
pop
jg
ret
ret
out
adc
add
pop
or
sahf
dec
notb
or
push
std
mov
popa
clc
adc
in
inc
int
add
divl
int3
push
sti
mov
sar
sbbl
xchg
sbb
inc
jmp
test
pop
movsl
mov
pop
sub
xchg
movsl
and
fnstcw
cmp
aaa
mov
jb
mov
js
int
in
jge
sbb
mov
jo
pushf
inc
fcoms
ljmp
sbb
sub
dec
jmp
mov
mov
push
dec
jbe
pop
xchg
sti
call
xchg
pusha
dec
or
cmp
jno
clc
popa
mov
xor
aad
jle
mov
adc
xchg
mov
adc
movsb
sub
lock
jl
and
jle
adcb
in
push
mov
int
fldenv
mov
mov
aas
mov
ljmp
hlt
push
popf
stos
xchg
pop
andnps
cmp
push
rcr
mov
pop
mov
orl
xorl
pop
dec
sub
outsb
xlat
push
cmc
mov
mov
andnps
mov
cld
inc
fisubrl
mov
dec
jg
pop
int
es
test
sahf
and
xchg
mov
dec
popf
in
xchg
push
loop
test
pop
jle
push
mov
push
mov
rcrl
add
addr16
test
push
dec
jo
xor
dec
inc
insb
pop
mov
jns
incb
neg
xlat
decb
mov
cmpb
mov
push
pop
or
in
repz
das
push
mov
cmp
xor
jg
inc
mov
sbb
adc
mov
cmp
std
jp
mov
test
xchg
js
jmp
out
sahf
xor
iret
sbb
xchg
and
imul
dec
sub
inc
push
std
out
and
subb
jp
cmp
shl
xorl
adc
add
and
std
repnz
shrl
sbb
sbb
sbb
sbb
mov
and
cs
or
movsb
inc
mov
cmc
loope
rcll
jg
pusha
mov
int
sub
das
ret
cmpsb
je
imul
dec
sub
in
roll
jns
aam
jae
push
pop
jb
out
ffreep
test
inc
sbb
mov
rolb
adc
outsl
sbb
es
test
or
arpl
cmc
mov
or
inc
hlt
jb
xchg
sbb
js
sti
dec
imul
pusha
inc
push
pop
ljmp
pop
dec
fldcw
leave
fsubrl
mov
xchg
jecxz
push
dec
aaa
test
adc
arpl
cmpsl
xchg
mov
movsl
xchg
push
push
lret
loopne
inc
stc
sahf
pop
lcall
orl
or
lock
xor
pop
inc
jp
jmp
fisubl
addr16
sub
lret
lods
jne
xchg
loopne
mov
fsubs
or
pop
rorb
outsl
push
sbb
push
cmpsl
repnz
shll
inc
in
xlat
jle
and
xor
sub
inc
mov
push
inc
mov
dec
inc
out
mov
mov
scas
call
dec
mov
nop
adc
fwait
xchg
jl
cmp
pop
push
pusha
push
mov
xchg
and
ret
jmp
sti
out
repnz
cld
and
call
idivl
stc
mov
xor
mov
cmpsb
cmc
jp
test
push
and
pop
sub
xchg
sub
enter
mov
mov
dec
sbb
xchg
outsb
lods
loope
stos
out
lods
arpl
fisubrl
ficompl
pop
cs
sub
inc
outsl
pusha
movd
or
insb
xchg
dec
sti
test
fdivl
and
out
sbb
cmp
pop
or
arpl
xchg
mov
add
aaa
leave
arpl
shll
pop
stos
xchg
inc
xchg
jno
imul
cmp
push
outsl
out
rorb
add
cmp
loope
adcb
push
in
jmp
and
js
pusha
xchg
jmp
pushf
lea
jae
jmp
sub
sub
js
mul
nop
ret
popl
mov
in
sub
aaa
and
jbe
push
es
cwtl
or
xchg
jnp
jo
push
aas
inc
cmp
adcb
mov
popa
outsl
mov
xchg
dec
pop
ret
jecxz
jae
xor
sti
test
mov
sub
fdivrl
sub
fstl
repz
mov
aas
and
pop
sub
lds
mov
fwait
cmpsl
lea
add
ret
out
push
ja
push
data16
add
loope
lods
xchg
cmpsl
mov
push
cmpsb
xor
addr16
inc
cmp
sbb
out
inc
mulb
mov
sbb
cs
ljmp
lahf
pop
pusha
cmp
push
jnp
mov
cmp
dec
loope
add
adc
lock
sbb
xchg
xchg
inc
mov
dec
or
dec
rcrb
push
cld
mov
inc
mov
dec
fwait
call
cmc
les
mov
mov
xchg
xor
insl
dec
sub
push
jge
fmulp
cli
jmp
mov
fildl
push
dec
jg
jle
inc
mov
lahf
sbb
xchg
or
xchg
sub
jle
scas
fmull
and
cmpl
push
mov
iret
cli
nop
pop
js
call
enter
int
jmp
jbe
inc
jle
mov
rcl
pop
add
or
lret
gs
pop
pop
or
pop
in
adcl
frstor
push
lret
dec
sub
mov
bound
mov
in
mov
xor
mov
mov
aad
dec
imul
jl
sub
gs
jp
adc
jno
adc
stc
xor
iret
loope
mull
int
jle
dec
or
xchg
sbb
and
mov
pop
out
jg
insl
in
sub
lds
add
sbb
bound
pop
mov
or
js
mov
push
inc
mul
adc
mov
inc
andb
scas
xchg
out
and
inc
lds
inc
inc
dec
scas
gs
push
xchg
and
inc
sub
sub
pop
adc
push
add
cmpsl
stos
clc
nop
shrl
fucomi
fs
pop
jbe
aas
out
lds
cli
adc
xchg
mov
dec
das
adc
stos
mov
ret
xchg
data16
push
pop
repz
jo
fs
xchg
push
sub
inc
jmp
adc
mov
push
xorb
into
xor
scas
frstor
les
mov
cld
cmpsb
dec
jecxz
pop
test
sbb
cmp
jmp
mov
sbbl
mov
xchg
rcrb
loopne
push
divb
add
or
test
and
bound
repnz
xchg
xor
dec
cmp
mov
pop
pushf
pushf
push
lea
jmp
xor
in
xlat
add
movsb
push
ljmp
sbb
mov
sub
lea
das
loope
pusha
pop
cld
out
stc
mov
icebp
outsl
mov
aaa
sarl
xor
test
xchg
lret
repz
xchg
rcll
int
into
pop
fisttpl
push
jnp
or
push
popf
scas
jl
mov
dec
lret
jge
orl
and
push
popf
jae
decb
cmp
mov
cwtl
lahf
call
jno
jecxz
sub
hlt
xlat
dec
mov
movsb
push
xor
xchg
fs
out
sarl
inc
pushf
mov
les
mov
in
andb
jge
repnz
sub
mov
jp
jnp
mov
in
cmp
sarb
aam
sub
in
in
je
gs
cs
add
sub
xchg
and
xor
inc
imul
in
aaa
xchg
js
sbb
mov
dec
add
mov
push
lret
jnp
lret
lahf
push
cmp
xor
movsl
dec
jne
insl
insb
mov
jecxz
adc
scas
fiaddl
rcl
nop
fwait
ret
xor
sti
and
add
mov
sub
loope
mov
movsl
dec
mov
jl
jle
ficoms
push
test
or
push
push
push
push
lock
pop
testb
cmpsl
js
push
rcrb
pcmpgtb
js
sbb
jge
sbb
test
or
stos
cwtl
in
cmp
sub
cmp
pushf
dec
in
cli
lds
fadds
scas
pop
int3
xor
mov
push
aas
mov
xchg
rcr
inc
hlt
fiadds
lahf
imulb
add
cmpsb
cwtl
lods
add
fiadds
mov
lcall
add
jmp
mov
insl
orb
mov
pop
fidivrs
and
js
sub
lret
mov
push
add
sbb
mov
ja
fsubs
aam
mov
or
push
in
test
push
in
sbb
mov
pop
cmc
leave
xor
or
pop
sbb
mov
out
out
xor
jp
adc
and
mov
xchg
call
repz
xchg
xor
sub
push
lea
jecxz
add
stos
fcoml
js
subb
or
call
mulb
fcomip
push
mov
jecxz
xchg
or
inc
xlat
jo
cmp
fidivl
out
daa
cmpb
sub
test
out
jo
out
adcl
hlt
jl,pn
loope
sti
xor
fdivs
pushf
and
aad
or
cmp
into
pop
xor
mov
bound
inc
out
mov
dec
rcll
inc
aad
mov
dec
push
jo
fadd
cmp
dec
push
add
std
addl
fs
ret
js
into
and
aas
lea
or
ss
enter
jge
sbb
loope
dec
dec
shll
pop
pop
movb
fsubrl
adc
test
rcr
xor
sti
or
jbe
jae
xchg
push
cmpsb
scas
and
sbb
enter
xor
mov
pop
xlat
inc
call
js
inc
imulb
fadds
adc
mov
int
daa
popf
or
pushf
push
xor
jo
icebp
xor
stc
push
fildl
dec
lret
cs
pop
mov
into
in
add
xchg
xchg
xchg
pushf
imull
call
mov
xor
decb
push
sbb
cld
imul
mov
lret
daa
xor
xor
ljmp
sub
xor
sub
leave
mov
xchg
and
mov
ds
shll
push
push
cmp
fisubs
xchg
daa
mov
xchg
loop
add
push
cli
rorl
pop
test
shll
mov
sbb
cmc
push
cmp
call
dec
in
xchg
js
pop
ret
push
add
xchg
inc
mov
xchg
popa
sub
xorb
jle
negb
leave
xchg
or
pop
icebp
pop
xchg
out
and
out
push
pushf
cmpsb
adc
mov
rcl
ss
or
arpl
sub
insl
cmpsl
mov
sbbl
pop
daa
push
fcmovnb
mov
loop
adc
pop
movsb
inc
mulb
inc
push
cmp
inc
add
cmp
fisubrl
std
test
xchg
push
xchg
sub
cmp
movb
not
cmp
push
stc
xor
bt
stc
cmc
rol
stc
cmp
not
call
cmpxchg
push
sub
add
jge
pop
mov
pop
push
sbb
cmp
sub
insl
mov
xor
or
mov
int
mov
outsl
cmp
push
mov
loope
inc
jne
mov
cmp
les
mov
lret
sbb
mov
in
into
std
data16
divl
nop
xlat
pop
aad
adc
inc
xchg
cmp
mov
je
aas
add
mov
daa
jno
arpl
jns
mov
andb
inc
adc
orb
sub
std
stos
pop
iret
andb
lea
js
adc
repz
dec
mov
adc
and
and
repz
add
lahf
rolb
dec
pop
adc
in
mov
xchg
mov
popf
insl
push
adc
xor
sub
xchg
and
fsub
test
movsb
pop
and
adc
dec
mov
xchg
dec
xor
movsb
pop
loopne
jns
mov
cld
mov
xlat
xor
cmp
sarl
lods
sub
mov
mov
add
aad
repnz
ffreep
mov
or
jns
pop
imul
xchg
jbe
xor
notb
call
es
push
sub
test
iret
add
lea
fmuls
pop
stos
lahf
or
sarb
in
xchg
inc
add
fiaddl
jmp
sub
shrl
jne
cld
jecxz
in
movsl
cmp
sub
cmp
shld
push
jecxz
jmp
sbb
mov
aas
pop
sbb
fldt
or
pop
ret
lret
push
stos
mov
or
xor
jne
rcrb
mov
jae
movl
call
lfs
pusha
lret
jg
lcall
fldt
leave
pop
cmp
jmp
lods
sbb
jns
xor
fbstp
jle
jno
mov
lret
test
fiaddl
inc
dec
mov
mov
lods
pop
nop
ds
sahf
out
scas
outsl
cmp
cmp
insb
lods
clc
pop
xchg
push
sbb
insb
into
fsubs
mov
mov
pop
in
pop
and
sub
dec
push
ret
out
mov
lret
inc
je
int3
mov
xchg
cs
addr16
into
jb
popf
push
mov
xchg
mov
fs
xor
mov
push
mov
fstpl
adc
cmp
pop
inc
cmc
test
pop
push
loope
dec
sbb
cmp
ret
sarl
dec
mov
lods
je
addr16
xchg
lds
cmp
popa
fisubrs
rcrb
push
iret
rcrb
or
add
or
cmp
and
xlat
xchg
mov
and
sub
mov
jnp
or
dec
add
test
call
jecxz
aas
shl
das
decl
lods
hlt
sbb
mov
fimull
icebp
orb
jno
push
push
pushl
movb
pusha
lea
jmp
call
pusha
rep
pop
pushl
bswap
mov
mov
movl
movb
pushf
lea
jmp
mov
adc
lea
jge
pusha
lea
jae
push
pushf
mov
jmp
lea
jae
cmp
jmp
sub
pop
sub
sbb
scas
pop
into
jg
and
ret
dec
mov
outsb
repnz
mov
xchg
int3
xchg
or
pop
and
inc
nop
clc
test
cmp
inc
popf
cmpsl
mov
inc
ficoml
mov
sbb
pop
pop
idivb
mov
push
insb
iret
inc
shl
scas
jl
mov
push
dec
inc
clc
loopne
cld
pop
pushl
pushfw
popw
sub
rcr
seto
mov
jmp
sbb
sarl
sbb
mov
inc
aad
pop
jbe
int3
je
xor
rol
add
mov
rclb
nop
fwait
cmpb
cmpsl
in
xchg
lods
xlat
insl
push
ja
jmp
inc
mov
daa
fidivl
out
add
pop
outsl
jae
add
jbe
cmpsl
movsb
xchg
es
aam
jbe
push
loope
add
inc
or
and
iret
pop
sub
cmpsb
bsf
fcmove
mov
jmp
int
ds
inc
jo
push
dec
dec
leave
push
inc
and
inc
stos
and
cli
mov
dec
inc
push
sbb
icebp
cmpsb
ficoms
lahf
push
lret
mov
mov
add
int
mov
rcrb
mov
mov
call
andb
into
jge
sbb
je
push
inc
cltd
movsl
sub
js
cmpsb
mov
int
or
enter
xor
pop
inc
outsb
sbb
add
and
jnp
mov
shrb
add
test
outsl
sbb
dec
inc
cld
push
scas
test
outsb
rcrb
out
notb
xchg
add
cmpsb
sub
scas
lock
aas
inc
repz
lret
sbb
in
fimull
into
fsubs
cmp
movb
push
jmp
cmpsb
xor
pop
sub
mov
stos
pushf
mov
lods
arpl
shrl
nop
and
out
mov
sub
shll
mov
and
inc
fwait
jg
pop
gs
imul
and
lods
jl
sbb
int3
cld
mov
lods
cli
lret
fisubrs
lret
aaa
fnstcw
sti
aas
fucomi
fisubl
xor
inc
stos
pushf
dec
jnp
push
test
push
inc
jae
jb
rclb
xchg
insl
cmp
rclb
rcll
xchg
jo
pcmpgtb
js
dec
negl
and
decb
int
jne
and
mov
repz
mov
dec
sbb
sub
jp
fsubrl
xor
mov
notl
jg
sub
negl
int
out
jns
fldenv
dec
mov
cmp
sbb
xchg
or
cmp
insb
push
cs
pop
mov
inc
sub
sub
mov
int3
adc
pop
sbb
in
cld
jae
pop
push
add
std
loopne
inc
mov
push
lahf
ljmp
dec
gs
out
hlt
adc
push
pop
jg
cli
or
and
rorl
das
dec
xlat
and
jp
cmc
stc
ror
test
clc
sub
bt
clc
neg
jmp
das
mov
pop
sub
out
mov
stos
sbb
lret
xchg
add
xor
pop
inc
xchg
xchg
dec
and
cmp
enter
xor
xor
and
sub
pop
std
mov
cltd
inc
in
cltd
inc
fldlg2
mov
mov
cmc
xchg
or
inc
pop
sbb
inc
jle
orps
filds
fldl
jecxz
xchg
movsb
repz
pmaxub
ds
pop
jne
es
lahf
lods
pop
mov
rcr
clc
shl
shld
sub
cmp
mov
push
cmc
mov
movw
sub
push
cmp
cmc
cmp
pushl
popl
test
cmp
push
pushf
jmp
pusha
lea
je
push
lea
jmp
mov
in
pushf
int
sub
or
jmp
in
out
mov
push
fsubs
stos
stc
push
lahf
push
std
incl
push
test
inc
sub
popf
cmp
jg
pop
inc
push
pop
cs
mov
cmp
into
push
add
mov
push
imul
inc
test
inc
push
test
rorl
mov
ja
das
push
pop
sub
pusha
inc
stc
movsl
push
lds
adc
xchg
popf
mov
pop
mov
loopne
push
jb
push
mov
in
push
imul
mov
lret
test
ret
test
int3
ja
and
sbb
orb
stos
or
adc
into
xorb
lods
cmp
out
test
add
push
push
pop
int3
out
mov
jo
adc
decb
inc
dec
pop
push
pushf
lea
jne
push
stos
pusha
pushf
lea
jmp
lea
jae
jmp
jmp
mov
cmc
stc
mov
sub
test
repnz
push
call
adc
sub
jmp
roll
movsl
adc
ret
cmc
mov
aas
shll
mov
mov
insl
dec
rcll
xor
cmp
imul
dec
cmp
adc
add
mov
mov
lods
cmpsl
adc
out
loopne
or
arpl
div
orb
or
stc
jge
push
jge
and
mov
pop
cltd
and
xchg
arpl
xchg
leave
cs
mov
add
mov
mov
mov
out
imul
jno
cmp
mov
push
fidivs
jle
inc
gs
les
lahf
adc
incb
xorb
lods
adc
mov
out
rcrb
push
cmp
dec
aaa
cmp
lret
mov
ds
mov
pop
jnp
xor
adc
add
push
jns
jbe
aam
rorb
fnstenv
lret
or
rcll
mov
add
and
and
out
mull
lods
fmulp
test
test
and
xorl
dec
cmc
or
xchg
scas
shr
sbb
push
das
movsl
ds
jle
push
fcmovu
arpl
aas
ss
cmc
popa
rep
jbe
std
cmp
hlt
jnp
pop
std
push
dec
mov
test
daa
sub
in
mov
xor
inc
jnp
imul
pushf
sub
add
pop
repz
mov
rdpmc
loop
jb
jb
aam
sbb
fwait
inc
add
mov
sbb
loope
or
jl
add
sub
mov
enter
or
aam
insl
sbb
pop
jno,pt
popl
mov
cmp
imul
mov
fsubs
push
ret
jne
imul
xchg
mov
std
shufps
dec
inc
fldenv
imulb
inc
mov
sub
nop
sub
sub
pop
adc
scas
popa
mov
adc
icebp
fld
das
movsl
cli
or
mov
fsubp
push
daa
ljmp
cmpsl
xor
test
popf
fs
add
cmp
rclb
and
fldcw
filds
loope
aam
xor
add
into
sbb
mov
jmp
mov
cmp
repz
pop
cmp
xor
adc
cmp
sbb
lods
hlt
sbb
mov
je
lods
out
lds
js
xchg
dec
imull
inc
mov
cwtl
inc
jb
push
mov
sbb
out
xor
popa
push
aam
or
fsts
jb
adc
imul
xchg
shll
push
mov
xor
push
inc
push
fiadds
aad
daa
xor
test
out
jecxz
dec
rorb
fisubl
jns
xchg
mov
movb
mov
sub
pushf
jmp
jno
mov
clc
cmpb
pusha
call
pushf
mov
shrl
hlt
mov
roll
jno
lret
test
push
pop
jno
popa
or
mov
cmova
in
roll
xchg
sub
cmc
sub
mov
adc
add
std
adc
sahf
jo
gs
push
fadds
imull
xor
loop
mov
pop
push
pop
push
pop
and
out
dec
lcall
or
lahf
lret
lock
arpl
pop
ret
adc
xor
sarl
dec
pop
and
cmpsb
fs
mov
movsl
dec
and
mov
sbb
out
and
xchg
lods
and
test
icebp
pop
popa
jmp
repnz
xorl
sub
imul
test
mov
scas
cli
dec
sbb
jns
sbbb
imul
push
lea
je
test
jmp
cltd
mov
adc
enter
and
int3
push
mov
int3
ret
jbe
add
mov
int
mov
aam
jno
iret
add
mov
lds
pop
lahf
sti
and
cli
repz
imul
movsb
rol
mov
cmp
add
jmp
pop
and
xor
push
cmpsb
mov
cli
dec
clc
and
gs
lds
xor
add
aaa
or
movsl
test
mov
inc
fdivs
icebp
cmp
jmp
adc
nop
cmp
jno
lcall
xchg
pop
insl
mul
xor
push
fs
xchg
popa
out
cmp
mov
sbb
push
and
xchg
and
cmpsl
sbb
mov
sbb
or
lret
or
rolb
aaa
dec
adc
mov
or
xor
xor
dec
adc
enter
mov
mov
or
cwtl
aaa
scas
iret
nop
push
push
sub
xchg
and
or
sahf
rorl
adc
hlt
cmp
sub
sti
bound
add
mov
rorl
out
cs
js
test
cmc
iret
nop
push
aas
outsl
dec
pop
pop
mov
fadd
mov
imul
into
sbb
mov
push
loopne
fisubrl
pop
push
inc
jnp
push
call
push
pushf
jge
rcr
mov
pop
dec
outsb
pop
xor
xchg
scas
mov
mov
dec
jle
shll
inc
mov
fcmovu
push
push
xor
pushf
xchg
scas
sub
shr
mov
jnp
push
jp
insb
fisttpl
insl
push
pop
leave
sarl
adc
xchg
xchg
cmp
rcrb
adc
ja,pn
fstps
shll
mov
mov
jns
mov
xor
imul
fsub
testl
sbb
inc
dec
arpl
lret
gs
fsubs
inc
das
pusha
aam
icebp
pop
adc
das
sbb
out
push
mov
ljmp
imul
fbstp
cmc
cwtl
ret
push
movsl
out
js
add
inc
daa
movsl
into
dec
cmp
fdivl
mov
fwait
and
push
mov
int3
ret
decl
popf
shr
mov
push
ret
shlb
mov
mov
cmp
test
add
cmp
pushl
pushf
test
push
pushf
mov
pushf
lea
jne
pusha
movb
jmp
pusha
clc
clc
cmp
push
pushf
mov
jmp
push
imul
fmuls
sub
addr16
sub
icebp
jg
leave
mov
inc
ljmp
das
js
pop
movd
lret
pop
ret
fmuls
repz
and
xchg
pop
das
orl
lea
jae
pusha
pusha
pushf
mov
lea
jmp
testl
xor
dec
js
pop
dec
jne
shlb
push
mov
loope
cmp
rcr
xchg
or
dec
jecxz
cltd
cmp
cmp
fadds
push
pop
xorb
cwtl
adc
push
xchg
mov
hlt
les
mov
lahf
inc
adc
sub
mov
pop
stos
std
dec
cltd
cmpsb
ja
xlat
jmp
in
es
pushf
jg
iret
addr16
cmpsb
iret
cld
in
fists
mov
sub
dec
xchg
test
mov
xor
ror
mov
data16
or
jno
cwtl
lcall
xor
icebp
sahf
clc
out
loope
xor
sbbb
jb
negl
mov
xlat
icebp
aas
push
mov
sbb
mov
jne
iret
pop
pmuludq
psubusb
push
jo
jge
mov
outsl
rolb
fs
adc
pushf
push
stos
mov
iret
aaa
popf
push
cs
adc
mov
nop
test
xor
adc
add
dec
test
ja
ljmp
aam
xor
jecxz
fcomps
gs
filds
pop
std
rcll
lds
fsubl
dec
cmp
sbb
mov
push
sahf
or
pop
push
outsb
fmulp
push
adc
mov
or
xchg
hlt
gs
xchg
mov
xor
adc
mov
scas
jnp
pop
pushf
pop
push
jbe
push
inc
jne
int
sub
ljmp
out
mov
in
cwtl
cmp
bound
pop
dec
mov
flds
xor
lcall
and
out
mov
popl
mov
jp
out
stos
mov
fldenv
xchg
bnd
xchg
lahf
stos
sbb
add
repnz
movw
push
pushf
pushf
pushl
ret
movb
lea
call
call
call
inc
push
imul
gs
enter
add
adc
sub
aas
jns
xchg
or
jns
nop
xchg
inc
scas
dec
pop
shll
xchg
cmp
enter
dec
push
sbb
fisttpll
orb
rorb
loopne
mov
loop
cmp
or
sbb
add
movsl
inc
push
xchg
and
js
lods
pop
xchg
fmul
cmp
push
ret
xor
dec
cli
and
or
or
mov
mov
roll
sub
sbb
dec
hlt
les
inc
sub
dec
movsl
adc
nop
hlt
xor
pop
fdivrl
jecxz
pop
pop
repnz
ss
clc
and
and
iret
sbb
adc
and
add
mov
xor
mov
add
inc
push
lods
push
js
lock
dec
jle
pop
mov
out
lret
filds
xor
bound
movhps
and
mov
dec
fisttps
lret
adc
imul
mov
iret
js
stos
sarb
add
jmp
push
rcll
add
loop
fwait
in
fwait
sti
mulb
int3
pop
sub
int3
fsubrp
mov
test
ja
or
inc
pushaw
bt
pushf
add
jmp
sti
mov
call
jnp
cmc
push
push
js
imul
jmp
dec
jne
adc
inc
mov
inc
in
xor
inc
jae
adc
xor
push
pop
fsubrl
xor
lahf
add
push
xchg
outsb
es
je
loope
inc
xchg
and
mov
int3
adc
cwtl
pop
call
mov
lea
jbe
push
pushf
lea
call
push
pushf
call
addr16
push
imul
cmpsl
sbb
js
fmull
bound
fcompl
jno
flds
inc
jne
push
imul
cmp
xchg
cli
and
pop
sub
cwtl
mov
insl
cmp
pop
sub
add
movsl
ss
inc
lahf
fwait
adc
aas
xchg
fmul
xchg
and
imull
pop
dec
clc
out
xchg
sub
aaa
ret
aam
popa
test
sub
or
or
or
cs
repnz
int3
mov
mov
jmp
mov
and
mov
in
sbb
lea
imul
loopne
add
and
nop
mov
xchg
test
jbe
adc
call
pop
jnp
imul
out
xorl
subb
mov
les
je
jle
lret
sbb
or
aad
mov
mov
cmp
jmp
popa
or
cwtl
cs
ficomps
push
sbb
ret
mov
xlat
or
push
push
pop
daa
nop
mov
push
imul
or
ss
movsl
cltd
stos
adc
push
hlt
shll
cli
insb
fimuls
ljmp
je
push
push
das
mov
repz
xchg
or
sbb
mov
cmp
xchg
jnp
cmp
cmp
flds
mul
inc
fnsave
adc
and
mull
push
imul
lret
mov
xor
addl
lock
mov
push
cmp
jle
fsubr
cmp
sbb
sahf
cs
jo
xchg
scas
lea
jb
jmp
jmp
dec
pop
in
insb
sub
mov
sahf
dec
shll
push
mov
lods
jnp
cli
sahf
std
neg
adc
repz
cmpsb
insb
idivl
retw
aaa
stos
ud2
fldenv
or
jbe
pop
xor
arpl
inc
xchg
shl
mov
shll
ret
push
loopne
inc
shll
cmc
adc
adc
mov
fs
call
pusha
jmp
arpl
insl
sub
lahf
enter
mov
roll
jmp
inc
jl
xchg
jge
inc
es
or
les
shlb
std
int
rcrl
cmp
inc
pop
imul
push
mov
push
fs
jmp
mov
mov
pushf
mov
bswap
pop
push
pushl
ret
jmp
movl
pushf
pushf
movb
push
lea
jmp
xchg
and
sub
push
mov
and
push
mov
adc
jg
mov
mov
test
pusha
aaa
stos
cmp
inc
es
xor
jge
hlt
inc
xchg
jmp
pop
loop
sahf
mov
xchg
loopne
adc
mov
rcll
std
or
sub
cmp
adc
jo
inc
fildll
xor
or
sub
and
lock
insl
nop
xorl
xchg
int
xchg
pop
mov
movsl
mov
adc
lods
mov
or
sbb
add
xchg
in
add
sbb
push
dec
loopne
aam
xchg
xchg
pusha
mov
movl
call
mov
pushf
lea
jmp
cmp
js
loopne
mov
push
lret
ds
fsubr
icebp
aad
and
inc
sub
mov
xchg
or
or
push
out
fwait
rol
imul
outsb
cs
push
movsl
cld
scas
aad
or
enter
jg
and
dec
xor
test
adc
cwtl
push
and
adc
dec
das
ja
mov
xchg
call
testb
out
lcall
lds
arpl
inc
insb
insb
outsl
arpl
movl
jmp
pusha
call
sbb
push
sub
or
and
shll
inc
out
mov
add
mov
or
pusha
add
test
jb
cmpsl
cmpsb
jge
mov
mov
cld
mov
cmp
sub
dec
pop
imul
pop
push
mov
lahf
jo
out
jg
add
lea
jne
push
movb
lea
ja
mov
pushf
pushl
inc
inc
lea
pushf
pusha
inc
add
push
xchg
lea
cwtl
bswap
neg
mov
shl
push
sub
call
call
jmp
popa
cs
lods
fisubrl
lods
outsb
loope
popf
sub
out
in
fisubrl
loope
insl
lods
cs
fisubrl
mov
sub
das
lods
insl
popa
stos
popa
mov
lea
ja
stc
push
imul
movb
bt
add
movl
push
pusha
movb
lea
jmp
test
xchg
jo
js
lods
fmulp
jp
jge
lcall
mov
cltd
andl
add
inc
stos
hlt
ds
arpl
imul
push
xchg
xchg
pop
aam
test
mov
push
movsb
cmc
mov
lret
adc
sbb
rorb
add
add
mov
incl
mov
mov
adc
xor
lods
movsb
or
es
daa
and
movsb
dec
outsb
push
mov
mov
inc
imul
fnstcw
xchg
xlat
ljmp
push
add
inc
std
dec
cltd
mov
pop
mov
das
mov
nop
jns
test
push
xor
mov
imul
outsb
mov
mov
sub
cmpb
lret
mov
jmp
jmp
jno
pop
jno
js
icebp
pop
sarb
in
sbb
mov
mov
jge
mov
mov
adc
xchg
or
lahf
sbb
in
and
mov
scas
jmp
enter
out
ljmp
lahf
cmp
xor
add
cmp
test
push
in
ds
cs
xchg
fmul
push
pop
in
pop
mov
xchg
cld
test
xchg
stos
mov
ja
int
inc
jmp
dec
out
mov
jb
js
test
pop
mov
sub
gs
loop
out
mov
pop
cmp
lods
into
push
mov
xchg
push
jb
push
jmp
std
pop
xor
movhps
mov
mov
das
das
mov
xorl
mov
movsb
jo
mov
shr
mov
mov
mov
mov
aam
aad
and
sbb
mov
mov
mov
push
ss
lret
out
mov
test
nop
clc
fisubl
lds
out
iret
aad
iret
shrb
sbb
imul
push
std
lcall
popa
lock
shl
out
sti
dec
push
jmp
fisubl
jmp
pushf
sub
lea
jb
cmc
cmp
jmp
adc
js
push
repnz
add
and
jmp
mov
dec
mov
in
jp
mov
xor
xchg
or
add
fldenv
dec
into
pop
dec
lret
dec
test
mov
addb
sbbb
ss
ret
jb
xlat
adc
repnz
or
lods
mov
mov
aad
clc
ret
push
and
push
icebp
dec
pop
add
in
mov
jmp
or
bsf
mov
pusha
movsbw
add
not
mov
lea
jmp
movb
lea
jae
push
call
fwait
test
flds
loop
pushl
insl
test
je
movsb
fwait
cld
lds
iret
out
sub
addr16
bound
arpl
fistpl
cs
push
cmp
lock
int3
insl
xchg
push
inc
js
xor
sbb
adc
fmuls
insl
and
jo
pop
fs
xchg
mov
adc
mov
xchg
cmpsl
insl
fnstsw
out
pop
sub
mov
in
adc
jmp
aam
mov
mov
hlt
lds
hlt
add
or
in
sub
cmp
cmpsl
stc
lds
adcl
fs
adc
daa
mov
lea
mov
movq
inc
inc
mov
add
xchg
xchg
adcl
clc
mov
scas
xchg
jnp
nop
ss
icebp
es
enter
lock
imul
mov
popa
loopne
xor
inc
es
popf
lods
cmp
sbb
jl
xchg
jnp
or
cmp
pop
xchg
out
mov
inc
jne
js
sbb
aaa
fs
add
and
sahf
stos
es
aad
jnp
sub
mov
jmp
enter
xsha256
cmpsb
adc
scas
xchg
mov
cmp
repz
mov
fs
aad
scas
lds
lret
loopne
loopne
mov
sub
xchg
shlb
jle
push
jb
mov
iret
xchg
jmp
int
outsb
cli
mov
push
shl
gs
cmpsl
imul
js
cmp
pop
or
imul
stos
cmp
es
cmpsb
enter
mov
orb
dec
insl
in
cwtl
or
mov
aad
lods
push
enter
mov
cmc
insb
data16
ljmp
xchg
mulb
sti
ljmp
stos
push
add
mov
ds
cld
cmc
or
jmp
es
pop
push
into
mov
mov
adc
inc
xchg
rcrl
test
add
popa
icebp
pop
fs
cld
jmp
iret
fdivl
arpl
sub
mov
hlt
pop
int3
sbb
pop
mov
jb
pop
stos
xchg
pop
call
add
outsl
push
data16
pop
mov
std
mov
movsb
mov
mov
sti
mov
add
sbb
cltd
mov
jg
jbe
mov
pop
ret
bound
or
jp
mov
movsb
jmp
sahf
outsb
sub
xchg
jg
pop
fstpl
push
mov
icebp
cld
dec
pop
cs
pop
stc
adc
xlat
and
jbe
js
adc
mov
movsb
iret
inc
push
push
adc
and
adc
movsl
gs
add
into
sub
les
push
fldcw
ss
sbb
xor
scas
mov
mov
dec
inc
stos
movsl
cld
sub
or
pop
mov
xchg
ds
pop
pop
inc
or
or
test
push
jno
and
push
mov
inc
movsl
xor
rcrl
outsb
add
lods
cmp
jbe
ret
sub
inc
mov
jmp
enter
or
and
xchg
or
or
pop
mov
fcmovb
jne
shr
xchg
or
adc
pop
popa
leave
leave
adc
xchg
and
sub
sbb
cmp
pop
push
push
sub
cmc
add
mov
sbb
leave
das
ss
or
in
add
jb
push
inc
lock
lea
jae
sar
rcl
mov
xchg
mov
btr
test
rcr
shl
mov
push
sub
bt
pushf
cmc
test
repnz
pushf
mov
jmp
mov
movb
movb
lea
call
call
pop
jnp
ja
js
and
and
mov
jp
add
fs
orl
pop
mov
dec
add
pop
scas
jl
fucomp
inc
gs
es
add
int3
outsl
test
mov
or
sbb
inc
outsb
es
ja
inc
and
mov
mov
std
sub
stos
repnz
or
std
pop
dec
push
fs
mov
js
stc
push
out
xchg
cltd
jecxz
fisttps
or
out
adc
lret
cmp
shll
push
mov
dec
or
push
cmp
pop
cmp
add
mov
jo
cltd
dec
jae
mov
shl
sub
pop
mov
mov
xor
cmp
inc
mov
mov
loopne
pop
jl
imul
lcall
mov
repz
and
sbbl
jmp
rcr
insl
jns
js
xor
jg
mov
sub
or
icebp
dec
test
fistpll
leave
sub
pop
pop
jg
inc
stos
iret
fwait
push
add
push
out
mov
xchg
imul
cmp
cmp
push
stos
cmp
sub
cmp
lcall
loope
ror
bt
jmp
push
pusha
call
dec
clc
cmp
shl
pushf
lods
cmc
bt
lea
jb
add
jmp
mov
pushf
pushf
lea
jmp
mov
add
shrd
mov
movzbl
shr
bsf
bswap
neg
mov
push
stc
or
call
call
call
jmp
jmp
xor
jmp
ret
dec
cmp
mov
mov
ret
sahf
lahf
orb
icebp
xlat
leave
in
popf
adc
pop
cmpsl
cmp
push
insb
add
mov
sahf
ljmp
popf
adc
scas
cld
into
hlt
push
sub
lret
lret
xchg
clc
pop
mov
xorb
push
cmp
push
insl
push
js
lock
stos
pop
push
fsubs
shrl
jmp
jno
inc
mov
mov
test
jns
pop
lods
jp
push
mov
inc
adc
inc
xchg
lret
ds
mov
inc
push
movsb
aaa
or
scas
pop
imul
js
je
js
ds
lret
mov
lods
pop
pop
jnp
cmp
jl
arpl
push
jp
mov
sbbl
push
fwait
push
and
insl
jle
imul
pop
push
pop
sub
pop
sub
stc
or
dec
jmp
mov
arpl
jns
dec
pop
xorb
stos
pop
cmpsl
cmp
in
xchg
jnp
inc
arpl
push
push
insl
fs
movsb
arpl
call
or
imul
push
fdivr
pop
stos
ljmp
icebp
popa
pop
cld
aad
pop
jnp
mov
xchg
pop
push
push
fldt
fldl
test
mov
mov
jns
ret
jae
cmp
cld
mov
addr16
push
daa
addr16
ja
jecxz
mov
mov
enter
jecxz
das
sub
inc
jl
ljmp
loope
push
push
pushw
stos
movsb
sbb
imul
inc
pop
addr16
ds
push
addr16
das
cmpsl
jnp
cmp
pop
imul
jg
imul
mov
pop
cmpsl
stos
xor
add
push
xchg
push
shrl
push
fisubl
leave
arpl
sbb
sbb
mov
jns
xchg
push
lock
push
pop
ds
inc
cltd
jp
ja
fistpl
fiadds
cmp
cmp
xor
jnp
insb
and
fwait
dec
data16
test
pusha
idivb
pop
stos
lahf
pop
stos
cmpb
dec
ja
pop
mov
stc
lcall
inc
push
or
psllw
xchg
in
fildll
dec
jmp
jae
mov
jbe
or
jbe
xor
jge
inc
sbb
enter
fwait
mov
jae
jns
fnstcw
jg
sarb
and
dec
xlat
add
clc
out
mov
jnp
addps
pop
sub
ljmp
ds
push
loope
aas
fwait
sbbb
sti
push
xlat
insb
jl
stc
mov
scas
in
push
fwait
loope
cmpl
push
mov
jns
das
mov
out
aad
add
imul
xor
stos
ss
vpaddsb
ds
pop
lcall
push
cltd
cli
fwait
xchg
push
mov
jl
arpl
repz
fcoml
ja
dec
roll
mov
xlat
popa
push
insl
insl
fldt
and
fistpl
sub
xchg
insb
fdivr
negl
and
jbe
xlat
sahf
lods
xor
insl
cmp
imul
int
or
dec
xlat
divb
insl
pushf
pop
pushf
xor
sub
daa
jle
xchg
sti
stc
outsl
std
ja
fiaddl
sbb
aas
inc
repnz
ljmp
arpl
sbb
ja
inc
dec
test
out
das
jae
iret
sub
or
addr16
adc
cmp
in
scas
inc
imul
jno
jo
sub
xchg
jle
leave
repnz
cli
sbb
xlat
inc
push
jp
je
jb
add
pop
sahf
dec
xchg
xor
dec
xor
mov
cmp
imul
mov
gs
cmp
dec
in
bound
mov
aaa
div
sub
xchg
add
add
popa
xchg
into
dec
ds
ja
lods
sub
mov
dec
or
pop
xlat
mov
ds
stc
or
or
mov
in
dec
stos
sbb
fwait
mov
jae
dec
ds
or
cmp
jb
jno
lahf
jno
lahf
cmp
jns
in
insl
imul
fildl
dec
arpl
jns
lds
cmp
std
ss
fld
mov
mov
cld
out
imul
jns
sub
mov
notl
push
lret
leave
sarl
lret
pop
fisttpl
sub
dec
xchg
lcall
stos
insb
pop
imul
js
or
shl
jl
ds
cmpsl
xlat
loop
push
jp
mov
fldenv
mov
fwait
gs
sbb
sbb
in
sbb
sbb
mov
out
sbb
cmpsl
mov
and
jo
sbb
fdivs
pop
std
push
jns
sub
stc
fldcw
add
xlat
pop
push
xchg
push
or
xor
sub
mov
scas
mov
out
lahf
and
into
imul
or
fstl
jns
cmpsb
cmp
imul
push
popa
pusha
pop
mov
mov
cmpsl
jl
or
ljmp
scas
mov
out
jbe
insb
outsl
cltd
inc
add
jns
inc
stc
mov
pusha
xchg
dec
bound
xor
ss
lods
mov
dec
push
scas
mov
or
test
adc
fistl
push
insl
mov
sub
mov
or
dec
loope
lea
data16
xchg
lret
sbb
dec
pop
adc
into
call
mov
fnstcw
cmp
xor
rcrl
mov
cltd
stc
sbb
cmpsl
in
scas
shll
insb
mov
cmp
fisttpl
imul
stc
scas
mov
mov
xchg
mov
adc
jecxz
xchg
stos
xlat
mov
ficompl
js
fwait
jb
fucomi
inc
std
inc
sub
cmp
cmc
icebp
test
imul
cmpsl
fdivl
xor
call
cmp
stos
push
ljmp
ja
add
lock
ljmp
lock
sbb
lret
stos
cld
fists
lea
pop
adc
push
dec
xor
aaa
sti
pop
mov
flds
xchg
and
clc
mov
scas
mov
cmp
jmp
loope
divl
sahf
xlat
xor
sub
in
jne
das
adc
dec
add
pop
incl
aam
cmp
push
lret
dec
pop
or
jecxz
ljmp
sbb
push
inc
inc
sbb
ficoms
fcoms
jp
fnstcw
adc
xlat
dec
dec
push
clc
mov
sarl
sub
push
icebp
sbb
and
jbe
movb
int
cwtl
scas
adc
cmp
lcall
lock
push
fistps
mov
mov
sbb
in
sbb
ss
pop
cmp
and
push
add
pop
push
ds
sbb
lock
jo
movsl
dec
cli
dec
or
mov
push
notb
decb
mov
shll
dec
push
mov
das
sti
mov
xor
mov
cmp
fcmovnb
push
loop
cli
int3
fs
jo
lea
stos
sbbl
pop
je
ss
lea
pop
lcall
add
jns
xor
iret
inc
xchg
faddl
mov
cmpsl
adc
xlat
insb
daa
sbb
xchg
push
imul
in
aaa
mov
dec
jns
in
loopne
mov
loope
push
sbb
cmpsb
loop
sub
mov
sub
xor
stos
mov
jmp
push
fstpt
push
dec
int3
jl
and
add
dec
sbb
insl
rclb
cmp
gs
dec
pop
sbb
ljmp
add
sbbl
fisubs
aas
subl
mov
xchg
cli
movsb
fwait
sbb
ret
outsl
jae
jg
pop
mov
push
imul
sub
lret
scas
pop
out
fiaddl
ja
mov
jno
repnz
and
mov
mov
dec
dec
je
lahf
movsl
pop
rol
add
stos
fsub
ret
and
xor
cmp
icebp
dec
sub
cmp
fdivrl
cmp
pop
mov
pop
xor
pop
inc
and
dec
cmp
sub
sub
or
cmp
push
xor
mov
or
cmp
add
out
xchg
pushf
cmp
gs
cmpsl
adc
lret
sbb
mulb
fdivrs
inc
jns
dec
popa
imul
rcr
imul
or
and
sub
sahf
loope
cmp
cltd
addr16
jae
cmp
lods
inc
or
idivl
cmpsb
pushf
xchg
dec
lock
sbb
cld
dec
dec
mov
divb
pushf
cmp
jecxz
xor
into
jnp
lods
rcrb
cmc
adc
fistl
and
cmp
cmp
pop
cmp
dec
iret
scas
stc
outsb
sbb
or
cmp
mov
mov
xor
cmp
cmp
inc
cmp
stos
sub
fwait
sbb
cli
imul
jp
adcb
sbb
int3
negb
stos
stc
sbb
push
jnp
mov
cltd
or
imul
push
sbb
sbb
rcr
in
sub
das
sbb
and
sub
cli
jnp
pop
in
aam
scas
sbb
sbb
sub
test
inc
in
stos
pop
loop
cmp
dec
into
out
pop
pop
imul
in
mov
fmul
mov
pop
idivb
cmpsb
cmp
ljmp
cmp
jnp
and
cltd
call
xor
push
dec
pop
cmp
push
dec
xor
or
daa
lods
cld
jbe
adc
pop
imul
dec
icebp
sbb
xor
pushf
jnp
daa
xchg
sbb
pushf
xor
mov
lcall
mov
jnp
stc
push
or
leave
cmp
or
xchg
sbb
cmp
jb
push
xchg
ds
out
sub
stc
out
mov
or
repz
pop
lret
xor
push
adc
push
fwait
std
push
jl
pop
inc
or
push
test
jp
pop
or
dec
insl
xchg
jns
iret
ds
fs
push
fbstp
sub
cmp
arpl
pop
scas
add
cmpb
jbe
dec
mov
add
dec
ficompl
mov
rorb
das
stc
sub
xorl
pop
stos
leave
mov
outsb
arpl
pop
jl
arpl
sub
xor
cmp
mov
sbb
stos
pop
xlat
mov
js
insl
cmpsl
stc
mov
push
das
sti
sub
mov
jg
push
or
pop
rclb
imul
inc
push
cmp
push
mov
out
inc
sub
fwait
jmp
je
and
mov
add
jl
repz
cmp
das
cltd
stos
mov
rorb
mov
adc
aaa
imul
xchg
jl
pop
and
push
inc
mov
lcall
xor
jl
xchg
or
xlat
ja
loopne
stos
push
lret
jns
or
xchg
out
jl
jnp
jmp
jno
and
jno
mulb
lcall
inc
or
sbb
mov
xor
enter
dec
push
loop
xchg
jp
ss
or
out
cltd
push
std
clc
xor
cli
ljmp
adc
fbstp
test
aaa
dec
loopne
mov
adc
js
and
es
pop
nop
insb
jmp
sub
dec
mov
fsts
stos
div
push
imul
cmp
lcall
out
mov
mov
gs
xchg
jb
push
sub
mov
cmp
cmpsl
jge
cwtl
pop
ret
ds
sbb
aam
xchg
cmp
fwait
inc
cmp
outsl
mov
fwait
cmpsb
or
mov
add
scas
sarb
loop
xor
lret
fwait
and
cmp
and
scas
fildl
ja
fldenv
mov
add
lods
sub
xlat
icebp
cs
pop
xor
push
fimuls
push
adc
lcall
cmp
dec
mov
mov
mov
or
xchg
fs
lods
loop
cmpsl
add
out
sub
lret
mov
arpl
loope
fwait
aad
mov
add
cmpsl
jecxz
clc
fdiv
outsb
cltd
in
jp
xchg
cmpsl
fdivs
das
inc
xor
add
pop
push
fildl
sarl
mov
fnsave
cmp
ss
xor
in
cmpsl
pop
in
test
mov
sbb
pop
push
stos
inc
adc
in
movsb
ret
inc
mov
rcll
jns
insl
popa
movsl
sbb
push
mov
test
xlat
xchg
adc
push
or
into
jp
lcall
insl
mov
mov
adc
aam
sbb
aaa
addr16
sub
xlat
and
lahf
adc
and
mov
je
pop
sbb
les
pop
fldenv
rcrb
fcoms
into
movsb
sub
addr16
pop
gs
mov
es
mov
ret
push
insb
in
adc
push
pop
xor
arpl
sti
fstpt
sub
fmuls
repz
pushf
in
mov
push
scas
ljmp
xor
push
sub
inc
in
inc
ret
dec
mov
cmp
pop
and
fsub
cmp
jno
cmpsb
jmp
cld
dec
jecxz
stos
sub
fadds
test
sbb
push
loop
sub
mov
dec
fistl
adc
insl
negl
stos
jecxz
outsl
cmp
inc
cmpsl
push
fistl
mov
sub
mov
insb
inc
inc
jae
lahf
jae
add
pusha
jmp
and
sbb
imul
mov
movsl
lahf
cltd
or
push
mov
and
inc
data16
aas
stos
pop
cltd
jbe
in
mov
adcl
mov
adc
pop
scas
iret
filds
jno
dec
jbe
add
add
mov
xchg
push
add
mov
mov
stc
and
push
fildl
rcl
into
jno
pushf
stos
imul
decl
or
in
jne
jae
lret
cltd
jns
fwait
pop
fistpll
inc
xchg
pop
xchg
jo
scas
fisubrs
jl
push
arpl
and
adc
sarl
loope
cmpsb
rcrl
or
inc
out
cs
cli
adc
or
loope
adc
in
repz
in
mov
jb
jo
stos
inc
xlat
lret
mov
ret
dec
sarl
cwtl
mov
fdivrs
push
insb
mov
or
mov
insl
mov
sbb
inc
xor
out
dec
icebp
pop
sub
bound
pop
xchg
cltd
arpl
push
mov
test
mov
cmp
fidivl
jbe
xchg
pop
stc
cmpsl
es
cld
mov
xchg
icebp
pusha
mov
xchg
mov
xor
cmp
ror
inc
insb
push
dec
jnp
push
dec
mov
dec
dec
ds
dec
jae
push
adc
jne
inc
and
sbbb
rcrb
sarb
xchg
sbb
pop
pushf
repnz
sbb
jo
sub
cwtl
dec
fildl
cmp
mov
leave
pop
aaa
test
dec
inc
dec
in
add
cmp
jae
dec
enter
sub
adc
cmp
or
fldt
call
jp
or
lret
fdivrl
adc
push
xor
sti
dec
leave
or
arpl
call
cmpsl
lds
or
dec
adc
cltd
jl
mov
int3
lcall
sbb
xor
xchg
jp
xor
or
push
inc
push
lcall
repnz
je
jp
add
shrl
outsl
dec
sbb
jns
outsl
fnstcw
scas
xlat
mov
addr16
nop
mov
dec
pop
mov
cs
add
dec
imul
jmp
xor
xchg
aad
cmp
mov
cmp
dec
imul
cmc
push
mov
pop
mov
dec
out
or
push
fstpt
adc
stos
outsl
xchg
mov
xchg
mov
dec
aaa
mov
inc
shl
cs
je
xor
pop
sbb
dec
cmp
push
dec
or
mov
das
stos
imul
repz
xor
loop
or
pop
rclb
mov
xchg
add
sahf
ret
sbb
adc
mov
imul
loope
or
int3
ljmp
push
cld
xlat
lods
fcomps
stc
add
lret
pop
roll
ja
or
arpl
push
dec
jmp
rolb
fistpll
sub
cmpb
cmp
jo
or
scas
inc
inc
push
xchg
fs
js
dec
ret
ljmp
xchg
rcrl
pop
mov
stos
fisubrl
xchg
ret
pushf
push
mov
ja
jns
sub
pop
or
ficoms
jae
cld
repz
stc
adc
adc
push
add
fwait
scas
cmp
pop
jns
jp
cmp
xor
movsb
inc
jae
mov
cmc
insl
cmp
sub
in
adc
arpl
inc
dec
xchg
into
fnstenv
mov
aam
xchg
xor
xchg
cli
out
fs
xchg
mov
mov
je
mov
xor
rcr
xchg
mov
insb
jno
dec
clc
lds
pusha
lret
dec
adc
pop
push
adc
jg
arpl
cs
and
adc
sub
push
mov
sub
sbb
xor
pop
inc
xlat
inc
fisubrs
in
leave
icebp
fiaddl
stc
repz
nop
sbbb
and
dec
int
mov
jmp
adc
fiaddl
jmp
orl
or
sbb
push
xchg
jae
adc
push
popa
leave
orps
adc
jmp
sbb
fsubl
add
sub
pushl
imul
sti
fisubrl
mov
pop
or
stos
add
ljmp
xlat
push
jb
rorb
data16
loop
mov
or
jl
push
cmp
outsl
pop
xlat
leave
test
stos
das
xor
xchg
dec
dec
sti
out
and
mov
fsts
lret
in
dec
cs
push
push
mov
push
jno
movsb
sub
push
pop
stc
dec
mov
xor
cmp
jle
pop
xor
jno
xchg
scas
mov
fstl
cltd
bound
mov
jb
push
pop
fs
rclb
inc
aam
mov
lret
clc
cmp
sarl
xlat
cld
out
pop
loopne
push
cli
sbb
jge
pop
pop
addr16
inc
insl
mov
popa
mov
repnz
jge
pop
cs
mov
jp
push
push
enter
call
popf
loop
jae
fnstenv
dec
mov
int3
mov
sbb
adc
sbb
cmpsw
pop
ja
fnstcw
adc
or
lret
sti
pushf
add
fisubrl
xchg
fldt
push
nop
and
stc
xor
inc
inc
dec
sbb
jb
mov
cmp
mov
cwtl
sbb
jns
xlat
mov
or
inc
in
rol
jp
mov
dec
ret
jge
push
or
and
cld
ja
dec
jo
xor
jp
push
in
and
rcrb
sbb
jae
shr
xchg
and
mov
ljmp
pop
imul
bound
sbb
sbb
xor
data16
add
test
inc
ja
fldcw
xchg
push
mov
sub
loopne
stc
arpl
aam
lcall
sbb
das
pushf
push
sub
mov
ret
hlt
xor
inc
cwtl
xor
push
cli
jmp
rclb
jbe
pop
pop
sub
fnstsw
lods
xor
test
mov
lea
cmp
mov
xchg
ss
xor
mov
dec
add
and
jp
adc
cmp
adc
dec
jae
lods
outsl
sub
xlat
dec
push
fisubrl
push
inc
pop
daa
cmp
jl
push
push
jbe
push
and
adc
outsb
cmp
aad
pop
inc
stc
popa
ja
push
push
dec
and
flds
loop
in
jno
xor
test
mov
repz
sub
addr16
les
xlat
dec
mov
cmp
gs
pop
xor
mov
jnp
or
mov
adc
fiaddl
rorb
add
out
adc
dec
mov
ja
pop
out
mov
ds
mov
push
fldenv
or
icebp
jle
xlat
aas
jmp
ficompl
fidivl
sub
negb
cmp
movsb
inc
cmp
hlt
sar
jg
mov
dec
lret
jb
pop
add
or
cs
xor
data16
into
ja
aam
inc
out
mov
sub
pop
mov
mov
shll
sti
loopne
ret
cmp
rorb
push
mov
jmp
pop
je
sbb
sub
pop
dec
mov
jns
cmp
mov
dec
pushf
stos
dec
movsb
cmp
stc
jmp
rcr
lea
xchg
cli
dec
movsl
dec
test
sbb
or
mov
je
in
ljmp
call
add
fcmovnb
cmp
pop
pop
adc
inc
ljmp
hlt
negl
pop
xchg
jae
in
cmp
xor
jns
mov
daa
cmp
lahf
xlat
ja
mov
dec
inc
mov
ja
jno
arpl
add
adc
aaa
lcall
pushf
ljmp
jnp
and
mov
cmpsb
xor
loopne
jb
fisubs
imul
cli
repz
sub
call
cmp
adc
fmull
addr16
div
and
pop
call
loopew
jns
test
cmp
dec
xor
outsb
xchg
mov
aad
cmp
push
stc
andb
bound
lret
insl
or
and
cmp
dec
pop
pushf
cmp
mov
push
xlat
cs
jle
fistps
in
push
mov
fisubl
leave
mov
and
mov
jns
xor
iret
jp
sbb
mov
aam
lret
or
into
mov
pop
fcmovnbe
or
dec
dec
popa
sub
ljmp
stos
add
mov
jmp
inc
xor
sub
test
jo
push
or
mov
cmp
xlat
fstps
sbb
xor
add
xchg
xlat
fisubl
imul
addr16
arpl
xor
rorl
pop
int3
add
push
push
cmp
bnd
jl
stos
pop
sbb
out
inc
dec
out
cmpl
mov
in
or
aam
pop
aaa
pop
cmp
cld
dec
push
jl
jecxz
inc
mov
mov
es
lcall
ja
jo
pushf
or
cwtl
mov
mov
push
jp
push
xchg
movsb
add
jg
loop
ds
dec
jne
sarl
and
lods
xor
mov
cwtl
adc
fldenv
ds
pop
test
lods
inc
and
jnp
adc
lea
mov
iret
repnz
imul
adc
jb,pt
stc
lods
xchg
fistpl
lcall
xor
jl
mov
mov
loop
sub
sub
outsb
scas
ds
orl
enter
cmovno
push
push
ds
rcll
and
out
ds
xlat
or
hlt
test
mov
ja
fldcw
divl
pushf
push
push
add
dec
pusha
xchg
xchg
fstpt
hlt
push
pop
pop
repnz
fimull
xor
xor
rol
fs
fsubrs
cmp
mov
jne
mov
add
ljmp
mov
cmc
out
push
lods
dec
rcr
and
mov
aaa
aaa
push
addr16
pop
lea
sub
and
bound
bnd
imul
mov
filds
push
add
xchg
cli
xchg
and
jne
sub
repz
push
add
jbe
insb
and
or
pop
xor
pop
pop
or
shl
andl
fwait
and
adc
pop
aaa
in
fldt
leave
arpl
jmp
loope
sarb
push
sbbb
and
out
fsubrs
or
xchg
test
mov
jae
loope
inc
dec
add
jne
shrl
mov
cmp
out
mov
hlt
cmc
testl
incb
test
sub
test
and
cli
add
or
mov
aad
inc
movsb
lods
lret
push
lds
fcompl
dec
dec
and
inc
and
pop
xchg
cs
jbe
fidivrl
sub
outsl
fnstenv
pop
popa
ret
es
cmc
inc
fsts
scas
cs
sbb
clc
jge
mov
out
xor
sti
and
jae
push
cs
mov
icebp
push
mov
xor
cmp
xchg
das
orl
mov
cmp
inc
cmovo
je
push
adc
fneni(8087
out
mov
mov
push
fldt
jne
pop
and
out
pushf
xchg
dec
icebp
mov
in
push
cmp
adc
jbe
gs
fstpt
inc
les
or
ljmp
sbb
or
dec
xor
test
cmpsl
dec
or
push
xor
jmp
xchg
xchg
cmp
fdivrl
icebp
cli
xor
pop
int
adc
adc
or
and
cmp
pusha
aam
jp
xlat
addl
jbe
push
mov
xchg
pop
cmp
pop
je
dec
out
test
fnstsw
push
jg
in
and
xchg
gs
mov
add
push
dec
dec
out
pop
cmpl
or
xchg
mov
pop
addr16
mov
xor
in
pop
fdivrl
fld
sub
scas
into
sub
daa
pop
movsb
arpl
movsb
leave
xor
xlat
sub
cld
cmpb
inc
aam
push
iret
xor
pop
test
jns
sub
sub
xlat
inc
lds
push
scas
cli
ret
enter
out
lcall
dec
sarb
jl
add
xor
addr16
aam
bound
push
xlat
sbb
out
sub
pop
imul
jne,pn
sbb
out
or
mov
aas
jo
sub
int
cmp
cli
push
psubw
dec
imul
leave
insl
xor
sub
scas
int3
mov
mov
adc
out
ss
jp
mov
ja
test
jbe
xor
mov
daa
dec
xlat
movsb
sahf
clc
enter
shrb
outsl
in
in
outsl
jnp
push
lret
jno
into
enter
jae
xchg
xchg
pop
pop
in
adc
push
leave
mov
mov
dec
js
sbb
loope
fbstp
call
cmpsl
sub
sub
xor
dec
jg
data16
add
test
cmpsb
jne
jl
xchg
sbb
pop
push
bound
push
repz
pop
and
jne
push
ds
pop
stc
xor
stos
loop
arpl
loop
outsl
inc
mov
in
and
int3
lock
orl
gs
xchg
and
stos
xor
popf
pop
adc
fisubl
fildll
cmp
push
push
cmp
sahf
push
je
pop
test
decl
int
ja
push
stos
rorb
sub
fucomi
lock
mov
rorb
sbb
ljmp
push
stc
xchg
push
fidivrs
add
enter
cmp
ss
cmp
xor
jns
dec
lahf
jg
flds
int
sbb
xlat
or
jge
mov
stos
xlat
cs
fsubl
sub
pop
ja
call
lret
bnd
jl
inc
es
jno
cmp
adc
lahf
imul
pusha
dec
xor
fidivrl
inc
add
loop
cmp
adc
and
xlat
cmp
dec
mov
push
sub
jnp
push
rcl
pop
js
dec
xor
testb
inc
dec
bound
out
dec
xchg
push
push
ficompl
orb
push
mov
push
in
jno
fldt
add
or
fists
inc
subb
sti
fisubl
jge
jne
jb
push
outsl
cmp
xchg
xor
fildl
inc
and
movsl
jnp
incb
mov
adc
push
pop
test
ljmp
lcall
and
lret
jg
fcompl
add
stos
xor
jp
shlb
dec
inc
rcrl
sahf
gs
sbb
mov
xor
hlt
lret
lods
std
call
pop
jno
test
pop
adc
js
jle
in
mov
fistl
out
fwait
cmpsb
push
sub
mov
data16
pop
jns
sub
xchg
test
std
and
add
jmp
aam
jle
stc
xlat
je
pop
es
cltd
sbb
push
sarb
ja
nop
push
pusha
sub
inc
dec
xchg
xlat
adc
jge
mov
push
pop
add
outsb
mov
jbe
cmp
mov
pop
mov
std
add
jecxz
aad
popa
pusha
xor
sarb
pop
sbb
push
adc
shll
push
sub
ss
xor
ljmp
xor
pop
dec
sub
jp
or
pop
stc
mov
mov
cltd
xor
sbb
push
lahf
and
push
in
push
loop
mov
sub
fwait
push
dec
mov
inc
testb
pop
ja
pop
scas
xchg
repz
adc
daa
and
dec
cmpsb
js
push
jne
pop
lret
cld
sub
pop
jecxz
repz
les
add
fsubs
in
movsb
shlb
xlat
ret
cld
int3
cwtl
nop
jno
xorl
fcmovnu
and
mov
adc
add
aad
jl
fcmovnb
mov
xor
inc
lcall
stos
sub
push
push
xlat
pop
fwait
outsl
fld
lret
or
lret
in
sahf
ret
inc
fwait
or
sub
jae
fistl
pop
mov
inc
dec
adc
outsb
xor
and
insl
and
or
xor
jbe
jb
dec
fistpl
xchg
pop
sub
jmp
imul
cltd
mov
pop
fnstcw
jl
mov
dec
xlat
ret
push
mov
mov
add
add
lret
adc
and
rcrl
pop
sbb
push
adc
push
stos
sub
jne
push
jg
test
jno
jbe
sub
addr16
or
and
jns
sbb
pop
lret
dec
jb
dec
mov
mov
stos
cmpsl
sub
adc
jmp
ja
lcall
cmp
jl
adc
push
cmp
cmp
jmp
jae
add
stos
adc
loop
dec
mov
sub
xlat
xchg
fwait
xchg
cmp
push
iret
es
sti
stos
or
test
std
loopne
sti
bound
icebp
mov
mov
fcoms
scas
or
sub
jno
jmp
sub
inc
pop
xchg
stc
call
out
xchg
pop
jl
sub
mov
inc
scas
push
add
outsl
test
and
adc
fcoms
cmp
dec
cmp
add
mov
dec
cmpsb
xchg
and
sahf
pop
fstpt
lock
divl
add
or
imul
js
xlat
push
das
mov
dec
mov
adc
out
arpl
dec
mov
add
xor
sub
in
and
cli
pop
push
add
out
inc
xchg
push
imul
les
ds
test
sbb
dec
shrl
sub
cmp
pop
scas
jl
mulb
rcll
fldt
sub
pop
outsl
mov
cwtl
popa
imul
pop
mov
push
fbld
mov
dec
pop
or
cmp
pop
mov
popa
pop
push
lcall
enter
mov
aad
cmpsb
imul
sub
cwtl
out
movsl
pushf
addr16
dec
outsl
mov
out
and
sbb
push
mov
pop
xor
sbb
pushf
fs
jp
imul
pop
push
dec
jno
dec
inc
outsl
lods
xor
sub
in
sbb
imul
push
pop
cmp
je
adc
push
cmp
add
imul
les
mov
aaa
mov
test
enter
dec
je
cmp
lcall
pop
mov
add
xchg
xor
cmp
sub
xlat
mov
push
ficoml
sbb
and
push
into
mov
xor
cltd
mov
ret
adc
repnz
cmpsb
add
inc
mov
in
dec
pop
pop
push
imul
jecxz,pt
int
sub
loop
or
and
imul
sbb
test
cmpb
jle
and
cmp
stos
test
adc
sti
fistl
pop
inc
jnp
sbb
rcrl
cld
push
icebp
adc
add
xchg
lds
je
sub
xlat
ljmp
xor
dec
cld
inc
lds
ds
mov
mov
xorb
outsb
outsb
shr
dec
xchg
or
xor
imul
cmp
movsl
xlat
or
lahf
xor
insl
jl
adc
int3
jmp
xlat
out
insb
bound
shll
imul
pushf
cs
lahf
and
cmc
cmp
stc
fildl
test
sub
stc
fsubrs
stos
mov
int
mov
stos
add
push
ds
pop
lret
mov
aad
cmp
out
and
out
imul
mov
xor
fucomi
inc
jl
lods
mov
sbb
dec
or
adc
cli
popf
adc
fwait
mov
mov
sahf
cmpsb
inc
lods
xor
jp
in
aam
pop
sbb
xchg
hlt
pop
imul
popa
inc
jle
push
test
and
xchg
pop
adc
adcl
xchg
fcomi
sub
lret
pop
pop
jo
sub
fiaddl
js
pushf
sub
sbb
pushf
jg
mov
pop
sbb
cltd
arpl
sub
test
aaa
fstpt
mov
das
lret
pop
xchg
out
std
ds
add
mov
push
int3
sbb
cs
nop
out
in
jbe
movsb
jo
imul
lahf
pop
test
jecxz
lock
and
out
dec
popf
dec
int3
jae
mov
inc
sub
pop
in
push
iret
addr16
inc
pop
scas
cmp
mov
outsl
xlat
lods
xchg
pop
es
xor
inc
insb
xchg
xchg
jmp
dec
adc
mov
je
scas
sub
inc
not
stc
mov
or
adc
fsubrl
pop
fldenv
notl
out
insb
push
sbbb
adc
mov
or
add
jg
aam
or
lods
dec
insl
or
cmp
xchg
lahf
cmp
das
stc
lahf
push
cwtl
push
mov
dec
mov
fidivrs
cmp
inc
lock
ror
inc
mov
popa
mov
jp
cmp
stc
fldenv
pusha
mov
sub
push
ficoms
pop
imul
rcll
mov
jbe
int
mov
loopne
clc
mov
mov
cmp
notb
cld
adcb
xor
adc
cmp
outsl
fistl
filds
sti
and
lret
mov
xlat
push
in
cmpsb
mov
das
cmp
mov
inc
mov
ja
jno,pt
ss
enter
das
jecxz
fstpt
push
js
sub
add
subb
and
repnz
cmc
test
dec
in
jg
add
sub
and
jae
into
or
arpl
xor
inc
jge
jns
push
or
inc
push
dec
mov
xchg
xchg
fwait
push
adc
sbb
jmp
xchg
xchg
add
jb
push
push
dec
mov
and
imul
lret
sbb
outsb
mov
data16
push
jp
lcall
xchg
fidivl
push
xlat
xor
scas
mov
adc
and
aaa
cli
vxorps
sbb
lods
stos
aad
mov
dec
fstpt
ljmp
lea
cli
xor
xor
stos
dec
outsb
pop
fcom
jns
pop
inc
lahf
xchg
push
xor
sti
push
sub
jbe
cmp
imul
adc
mov
fsubrs
adc
sub
mov
xchg
loopne
cmp
fldenv
fwait
xor
aad
xor
cmp
fisttpll
cmp
xchg
push
xchg
cmp
fnstcw
test
int
scas
dec
test
xorb
scas
push
adc
cmp
jns
adc
lcall
imul
cmp
dec
icebp
iret
std
push
dec
jo
push
jmp
icebp
je
mov
jo
stc
inc
or
mov
add
dec
or
test
sbbb
scas
cmp
sbb
dec
ljmp
je
cmc
jne
in
sbb
and
imul
pop
pushf
lods
sbb
push
xchg
xor
add
popf
push
add
sub
loop
es
jp
xor
cmpsb
icebp
push
in
leave
mov
hlt
push
lret
cld
out
ds
mov
rorl
aaa
cmp
sub
ss
add
iret
mov
pop
clc
jge
outsl
int
rclb
dec
fcoms
mov
add
mov
cltd
clc
and
fidivrl
inc
repnz
push
pushf
mov
sub
dec
repnz
and
dec
inc
sbb
dec
and
lret
out
dec
test
jp
cmc
mov
and
addr16
gs
cmp
pop
jp
sbb
mov
push
imul
sub
lds
mov
rcr
mov
out
scas
jg
insl
clc
and
cmp
mov
push
insb
mov
dec
fsubrs
push
in
dec
inc
jbe
shlb
or
pusha
addr16
jmp
mov
xlat
xor
mov
sub
xor
das
ljmp
imul
push
inc
clc
stc
out
test
cs
test
jns
stos
xchg
cmpsb
enter
ljmp
sub
jne
imul
xor
mov
mov
flds
mov
jmp
mov
loop
fisubl
add
sub
and
push
cmp
dec
das
imul
jnp
lret
dec
sub
xlat
mov
fildl
ljmp
in
mov
shll
stc
shrl
jae
nop
sub
js
lahf
inc
cmp
mov
fcomi
aam
lods
mov
imul
and
pop
mov
sti
mov
mov
test
dec
fildl
pop
add
jo
das
xor
sbb
cmp
fsts
sahf
shl
sbb
inc
or
cwtl
sbb
ja
inc
mov
daa
loopne
pop
lods
test
inc
cld
mov
and
arpl
insl
jp
mov
sar
movsb
cmpb
cmp
mov
pop
shr
fwait
sbb
mov
add
push
stos
mov
ds
pop
inc
ja
jbe
xchg
xor
out
clc
in
cmpsb
lret
xchg
out
jb
jns
lods
fwait
mov
mov
addr16
arpl
push
cmpl
outsb
add
pop
in
iret
ds
cmp
mov
xchg
mov
inc
push
pushl
pop
and
pop
lret
sub
hlt
movsb
push
subb
push
mov
mov
push
push
and
xlat
add
fimull
mov
ljmp
xor
shll
cwtl
cli
sbb
out
imul
push
gs
in
aaa
int
stos
add
mov
inc
out
sbb
sbb
test
outsl
mov
out
pop
dec
xor
sub
rclb
mov
dec
push
xor
cmp
inc
adc
dec
in
mov
popf
push
inc
int3
xor
pop
cmp
xchg
jbe
std
xlat
pop
dec
push
mov
dec
mov
pop
jns
add
sub
jno
mov
call
insl
out
cmp
xor
jg
jp
ffreep
lds
aas
and
sub
je
fldcw
outsl
mov
repnz
cmpl
inc
jmp
pop
pop
dec
stos
inc
xchg
mov
or
imul
inc
rorb
fwait
aaa
push
imul
insl
mov
sbb
mov
cmpl
sbb
stc
jb
inc
aaa
test
fwait
pop
ljmp
std
pop
jecxz
sbb
mov
fs
jns
movl
fisttpl
and
jcxz
cmp
les
or
cli
or
out
xor
mov
ljmp
add
in
sbb
bound
mov
sarb
push
ds
pushf
dec
enter
add
sub
mov
pop
xlat
hlt
push
mov
lret
loopne
lret
push
inc
ja
push
pop
dec
xchg
loopne
mov
dec
mov
sub
fldt
sbb
xchg
xor
jb
stc
cmp
push
adc
jno
sbb
stos
jae
xchg
jne
adcb
jns
add
fidivs
and
dec
and
jmp
popa
in
jp
sti
es
sub
and
jns
enter
pop
es
sub
sbb
mov
and
cmpsl
clc
inc
int3
adc
test
xor
jmp
cmpsb
mov
push
inc
sub
adc
addr16
pop
outsb
mov
aaa
sub
xlat
mov
jmp
sar
and
pop
dec
flds
sbb
dec
or
ffreep
loope
push
ja
cwtl
mov
pop
mov
into
mov
pop
adc
add
ds
lcall
and
rcrb
cmpsb
pop
hlt
mov
push
sarb
dec
xchg
sub
add
imul
jl
or
flds
xor
jmp
mov
xlat
or
jnp
iret
sub
push
cmp
mov
pushf
mov
push
mov
push
push
push
cmpsl
lcall
sbb
xor
dec
movsl
cli
outsb
hlt
mov
push
sbb
adc
add
push
xor
loopne
adc
ja
jp
aas
imul
lahf
pop
and
subb
push
repnz
out
fsubrs
stos
cmp
out
jp
std
in
repnz
and
jp
ret
in
pop
push
pop
mov
jg
gs
cmp
mov
ja
mov
jno
fistpl
dec
insl
push
test
shlb
xchg
cmp
ret
ja
popf
outsl
cmp
out
xlat
mov
mov
cmp
adc
push
dec
xor
sbb
inc
fs
dec
add
mov
pop
lcall
mov
sub
in
push
adc
add
aad
cmc
xor
sbb
push
add
sub
or
mov
jnp
scas
inc
cmp
or
push
sub
mov
xchg
sub
aad
cli
fdivr
xor
stc
jae
xor
or
jnp
imul
add
insl
movsb
mov
lea
enter
mov
sub
push
add
add
fs
mov
sbb
dec
sbb
xchg
inc
insl
call
inc
sahf
imul
push
sub
insl
xchg
mov
mov
pop
sub
movsb
shll
imul
adc
fnstcw
sub
sbb
insl
cld
adc
cmp
sub
repz
pop
sub
lods
lods
pushf
mov
std
les
or
cmpsb
xchg
adc
push
push
pop
repnz
fisubrl
std
sbb
negl
mov
xorl
jg
dec
cld
pop
dec
jae
push
sub
mov
cld
test
pop
dec
mov
jnp
dec
inc
roll
inc
loope
leave
lret
xchg
xchg
pushl
xchg
mov
sub
out
addr16
sub
add
add
xlat
ret
sbb
sub
mov
lods
push
xchg
in
sbb
push
inc
sub
ret
dec
mov
add
pushf
cltd
add
shrl
pop
cwtl
mov
adc
repz
mov
das
jg
push
sbb
xlat
popa
add
push
cmp
fsub
ss
addr16
adc
mov
aad
int3
push
adc
out
rcrb
leave
pop
adc
outsl
outsl
movsb
iret
mov
sahf
pop
pop
mov
pop
hlt
or
dec
cli
jl
cmp
add
lock
mov
push
sub
outsb
xor
dec
stc
dec
xlat
je
xchg
jle
cmpsl
add
push
std
mov
jae
inc
lret
jmp
jmp
ja
xchg
aas
push
pop
jp
loop
cltd
pop
lret
push
movsl
sbb
sbb
dec
pop
push
sarl
in
jns
add
inc
inc
sub
add
jne
cmp
mov
jl
or
dec
movsw
push
jle
and
cs
dec
jl
out
pop
inc
cwtl
and
jo
push
ss
mov
xchg
mov
ret
aaa
dec
mov
or
stos
stc
and
cli
sub
call
es
jp
mov
sub
xor
push
sbb
sub
mov
mov
subb
cmpb
stc
xor
push
pop
mov
dec
inc
xchg
mov
mov
xlat
mov
mov
dec
mov
pop
or
inc
stc
fisubs
stos
add
push
xor
fildl
mov
xlat
inc
pop
xor
cld
mov
bound
ds
mov
enter
add
hlt
mov
dec
ds
mov
and
mov
xor
popl
xchg
jae
cmp
repz
add
arpl
test
sbb
flds
je
adc
or
dec
fsubrl
divb
sbb
inc
stc
cld
or
out
or
out
std
mov
or
pusha
outsl
push
mov
sub
dec
mov
stc
stc
dec
adc
xlat
popa
dec
gs
jp
pop
mov
iret
subl
imul
insl
pop
sub
or
out
xlat
arpl
mov
rcrb
stc
jp
dec
mov
and
xor
ljmp
adc
cmp
addr16
scas
push
popa
sahf
add
fsubrp
fistpl
test
push
sbb
xchg
jl
test
fistpl
push
int3
aad
pop
out
rcrl
clc
loop
shlb
xchg
sti
jno
push
adcb
push
orl
cmp
push
test
adc
dec
outsb
mov
daa
rorb
in
add
mov
sub
test
rcll
sbb
push
insl
rclb
mov
mov
push
jecxz
sbb
sub
push
add
jecxz
sub
mov
sbb
inc
scas
lea
stc
out
inc
inc
jns
mov
sbbl
pusha
jp
stc
out
mov
xor
jmp
test
and
push
pop
cwtl
xor
int
mov
xor
jmp
cmp
inc
imul
xor
push
pop
sub
ss
jb
pop
jae
dec
cmp
mov
and
adc
fmulp
fistl
lock
mov
jbe
stos
out
push
push
arpl
icebp
push
aas
mov
jbe
sbb
adc
jno
loope
jl
ds
pop
cmp
jo
daa
pop
mov
jne
cmpb
xor
fdivr
xchg
shll
jno
cmp
les
xchg
std
cmp
es
jmp
sub
push
rorl
daa
data16
notb
cltd
lods
outsl
jo
fistpl
cmp
jge
mov
movsb
pop
outsb
jmp
loope
arpl
jns
and
pop
sub
push
fdivrs
lahf
xchg
jmp
or
ret
shlb
cwtl
mov
and
dec
mov
jnp
add
push
jne
push
inc
push
sbb
sbb
push
pop
jecxz
mov
jne
aad
xor
dec
pop
add
cwtl
ret
test
cmp
cs
xor
fstl
sub
pop
or
adc
int3
fiaddl
push
les
fcmovnu
mov
subb
gs
fistl
mov
and
icebp
ret
aas
push
cmp
adcb
sbb
stc
add
dec
jl
lods
jo
out
or
mov
pop
adc
mov
jae
xorl
mov
xor
stos
into
fnstcw
movb
ret
rcrl
repz
push
cmp
inc
inc
sti
nop
push
mov
mov
in
pop
in
jge
ror
xchg
call
imul
lret
je
xchg
xor
jp
or
fisubl
sub
in
push
or
add
je
cld
andb
ss
movsb
lods
sub
fcmovnbe
cmpsl
loopne
push
dec
xlat
call
arpl
push
cmpsl
movsb
or
cmp
shll
cld
dec
push
shr
xchg
inc
mull
int
cmp
sti
jg,pn
int3
push
test
dec
inc
cmp
lret
in
xor
inc
out
push
inc
lods
fcmovu
pop
xchg
pop
arpl
stc
pop
or
xlat
and
popf
sbb
fcmovnu
aad
stc
pop
cmpsl
ss
stc
enter
dec
xchg
adc
aam
or
pushf
out
pop
xor
mov
mov
push
fildl
mov
pop
js
fs
pop
inc
fldl2t
and
add
pop
sub
jo
fistpl
out
mov
in
xor
mov
addr16
or
xor
sbb
js
clc
scas
adc
sub
xor
dec
lret
xor
jae
fldenv
xchg
inc
push
mov
leave
push
stc
cmp
xor
ds
stc
pop
addb
jmp
repz
xor
dec
sbb
stos
push
jnp
sub
les
scas
lcall
cmp
add
or
js
dec
mov
cmp
dec
pop
mov
in
sbb
and
xchg
xor
pop
mov
jnp
add
xlat
xchg
or
pop
dec
or
sti
dec
adc
sti
ja
cmp
dec
mov
stc
xchg
sub
imul
and
jmp
cmp
addr16
insl
mov
mov
imul
imul
mov
adc
mov
ret
sub
pop
sti
cli
inc
fs
pop
xor
movsb
ds
mov
inc
pop
dec
or
iret
sub
mov
cmpsb
loopne
not
cmp
adcl
mov
fdivrs
cmp
sbb
and
ucomiss
or
jl
cmpsl
and
insl
xor
loopne
push
push
or
dec
stos
lds
mov
out
jae
popa
ljmp
out
push
sti
lock
lods
vsubss
stc
jns
ljmp
sub
pop
xchg
dec
xlat
adc
ret
lock
cmc
cmpsb
in
cmp
push
mov
imul
lret
in
fcmovu
inc
and
repnz
xor
sub
sbb
outsl
iret
cmpsb
daa
sub
and
addl
data16
jae
cmp
pop
repnz
push
fldt
push
inc
mov
jl
xchg
xlat
adc
out
xchg
cmp
sub
mov
lret
ja
dec
fsts
mov
xor
outsb
mov
ret
and
dec
pop
bound
ljmp
outsl
insl
dec
jl
mov
gs
sbb
pop
insb
out
pop
and
outsb
pop
fldenv
popf
xor
test
mov
xchg
or
pop
xorl
pop
imul
pop
xor
cmp
xchg
jae
mov
ss
fadds
jns
in
das
or
dec
outsl
pop
xchg
sbb
sub
push
and
mov
jo
imul
mov
cmpsl
and
sub
jae
cwtl
jmp
push
sbb
out
out
sub
flds
push
dec
pop
movsl
inc
push
loop
je
arpl
sub
shlb
xor
jmp
movsb
jg
jp
inc
pop
add
popa
dec
dec
cli
cmp
sub
cmp
je
or
or
imul
inc
adc
frstor
stc
stc
aaa
movsl
nop
loope
adc
sub
imul
popa
jno
sub
add
call
pop
or
sbbl
cmpsb
sub
das
mov
test
es
cmp
and
lock
sbbl
push
sub
imul
pop
fcmovnb
pop
hlt
shll
jp
sbb
mov
in
outsl
int3
mov
fwait
mov
mov
or
jp
bound
jbe
popa
xchg
push
sbb
test
pop
fincstp
xor
mov
pop
out
fucomip
rcrl
mov
dec
dec
sub
hlt
jne
mov
rcr
mov
test
cmp
and
jl
mov
popf
fsubs
mov
mov
xchg
or
pushf
or
or
pop
dec
xlat
xchg
cmpsb
pop
pop
movsl
mov
jp
push
cmp
sbb
mov
push
call
cwtl
js
and
xor
pop
jecxz
movsl
fcmovbe
movsb
mov
xor
cmp
xor
in
mov
add
mov
fdivrp
and
xlat
jmp
dec
pop
std
dec
mov
jns
fistl
lcall
bound
pop
sub
cwtl
mov
cld
test
dec
int
jno
je
xor
aad
mov
fdivrl
popa
outsl
das
mov
xlat
movsl
dec
shl
jle
mov
fs
and
repnz
lcall
bswap
xlat
jle
jnp
flds
adc
pop
ljmp
addr16
ficomps
fs
je,pn
dec
hlt
jle
push
popa
xor
mov
mov
mov
pop
sbb
repnz
adc
dec
xchg
inc
inc
xor
sbb
sbb
push
mov
js
fistpl
imul
fists
xor
sbb
dec
cwtl
pop
dec
lahf
mov
inc
or
fsubrp
push
jmp
arpl
push
mov
mov
lret
push
fsubr
cmp
fisttpl
inc
pop
or
xchg
arpl
jle
add
cmpsb
mov
jecxz
cltd
pop
sub
lret
xchg
outsb
rcl
imul
push
inc
cs
dec
int3
call
int3
mov
mov
jbe
fs
xchg
mov
mov
pop
in
enter
adc
sub
cmp
jp
cli
jb
cmpsb
and
adc
cmp
imul
cmc
inc
pop
cmp
fyl2x
jbe
daa
cmp
pushf
insb
mov
movb
sti
ret
inc
xlat
mov
stos
orb
and
push
mov
mov
fst
push
pop
dec
call
imul
popf
bound
jle
mov
out
outsl
out
clc
shrb
into
push
test
mov
cli
sub
mov
in
jl
cwtl
aam
sub
shr
out
inc
leave
shr
and
fsts
insl
push
push
lea
mov
xor
ret
jl
and
mov
pop
imul
xor
sbb
cli
mov
inc
xchg
stos
xchg
mov
mov
add
aaa
ljmp
imulb
pop
ljmp
testb
add
in
addr16
dec
popw
cli
loopne
mov
xlat
mov
pop
xor
push
xor
inc
xchg
inc
xchg
mov
pop
push
addr16
call
lock
xchg
xchg
cmp
or
pop
aad
pop
shl
test
jns
cmp
dec
stc
or
and
nop
dec
subl
mov
aaa
jo
aaa
out
mov
arpl
scas
mov
aaa
aam
jns
sbb
inc
imul
xor
jae
int3
mov
dec
bound
aam
xor
ret
ljmp
xlat
xchg
enter
push
iret
cmc
jns
lret
outsb
nop
into
push
or
jae
scas
testb
cs
dec
out
mov
cltd
dec
pop
cmpsl
or
push
repz
xor
add
lcall
cmp
sar
mov
arpl
insb
xor
sbb
sbb
fdivrl
sub
or
xor
mov
add
dec
push
xlat
and
lahf
clc
int3
push
xrelease
arpl
cmc
xchg
fldcw
jo
xor
jb
xor
sub
push
push
jp
test
inc
sbb
push
ljmp
fstps
adc
lods
rorb
xor
dec
xlat
xor
dec
cmp
lcall
pusha
sbb
cmp
call
mov
loopne
testl
in
xchg
lock
cs
insb
adc
or
xor
test
jne
insl
or
idivb
jl
mov
int
stos
mull
push
negl
xlat
dec
int
pop
ljmp
sub
inc
fbstp
xchg
xor
jmp
cmp
arpl
jb
adc
push
adc
xor
jbe
pop
aaa
push
push
stos
pop
enter
jnp
and
mov
add
sti
dec
lock
and
test
jns
in
xlat
lds
pushf
jmp
push
push
js
imul
dec
daa
xchg
inc
and
gs
dec
sbb
cmp
movsb
dec
and
xor
fdivs
add
pop
hlt
inc
and
fisubl
ret
ja
dec
std
jno
or
outsl
xor
sbb
imul
test
or
sbb
fldenv
out
das
push
addr16
mov
inc
leave
pop
mov
jecxz
cmp
insb
cwtl
pop
mov
loopne
jp
xchg
decl
dec
into
jae
jl
cli
loope
movb
push
push
fimuls
mov
rorb
popa
push
outsl
js
mov
cmp
test
push
sub
repnz
sub
fadd
imul
xor
pop
add
mov
mov
jae
clc
bound
fldt
add
add
test
dec
stos
je
xchg
fdivs
sub
aad
add
sub
inc
push
addr16
test
mov
aaa
jp
and
jmp
movsb
mov
mov
mov
cs
imul
mov
push
xlat
punpcklbw
xor
imul
jae
xlat
push
adcb
and
jbe
push
orb
jae
mov
xlat
xor
mov
cld
inc
add
sub
repz
xchg
cli
pop
loope
adc
mov
sbb
pop
nop
xor
fs
pushf
fcmovnu
sbb
jne
data16
lods
mov
addr16
cmp
popf
push
sub
roll
mov
and
xor
imul
out
sbb
pop
roll
test
sub
outsl
jbe
imul
repz
les
mov
std
stos
pop
push
negl
inc
cli
je
hlt
mov
add
test
fidivrl
inc
repz
cmp
insb
push
mov
clc
sbb
and
cmp
loopne
sbb
sbb
pop
pop
call
in
bound
movb
push
mov
xor
xchg
rcr
push
in
bnd
scas
inc
and
adc
sbb
ret
addr16
jne
cld
xchg
mov
movsb
filds
repz
mov
jae
fsts
test
or
jmp
mov
mov
add
cmp
nop
into
add
inc
imul
stos
insl
inc
test
cld
imul
dec
add
push
mov
cltd
sbb
xchg
mov
movsb
iret
stc
jnp
or
loop
cmp
mov
xor
mov
fisttps
pop
mov
jp
rcl
mov
addr16
test
lcall
movsb
stc
pop
shlb
jns
cli
jns,pt
ss
cwtl
movsb
ror
sub
pop
fsubrp
push
adc
inc
fnsave
leave
movsl
mov
cmp
inc
xchg
push
sbb
insb
aam
aas
xchg
pop
scas
lea
sub
inc
lea
jg
cwtl
push
add
mov
fdivrs
xchg
ja
fistl
jne
jbe
fnstenv
pop
xor
daa
add
cmpb
inc
push
lret
lcall
dec
push
je
dec
lret
add
xlat
pop
lods
push
mov
xlat
gs
cmc
sbb
and
or
mov
stc
insb
xlat
sub
push
in
arpl
and
jo
ret
cmp
rcr
in
cs
shrb
aaa
push
ljmp
xlat
in
loope
jp
pushf
shll
jne
add
fistpl
fiadds
inc
cs
pop
clc
fstps
daa
adc
pop
inc
in
jns
xor
or
mov
jbe
and
or
inc
arpl
divl
clc
fnstcw
mov
dec
ja
adcb
xor
add
mov
xor
pushf
pop
xchg
jb
jmp
xor
andb
mov
mov
out
shrb
stc
push
and
or
sbb
inc
cli
adc
xor
jno
jle
stc
sub
daa
cs
clc
jge
cmp
lock
outsb
test
out
nop
fnstenv
jne
push
push
adc
je
sbb
sbb
cmc
push
popf
ss
cld
adc
sub
dec
out
add
add
cli
outsb
iret
xlat
jmp
bound
inc
lcall
in
lods
and
cwtl
adc
sub
mov
rorb
or
xor
sub
sub
or
xchg
inc
adc
dec
and
aaa
addr16
loopne
mov
mov
dec
xor
cmpsl
or
insl
inc
shl
fucomip
add
mov
int
sbb
aam
xchg
xor
lcall
pushf
pop
or
sbb
ficoml
jns
pop
dec
ret
fisubrs
js
pop
cmp
lret
ret
jmp
xlat
lods
ja
int3
xchg
xchg
addr16
fwait
notb
sbb
lods
arpl
xchg
idiv
nop
bound
xchg
out
loope
add
ja
push
xor
sti
jp
fldz
xlat
fs
mov
sub
xchg
xlat
push
mov
lret
xor
dec
add
test
xor
daa
mov
jae
sub
bound
push
xlat
fdivrp
icebp
inc
add
insl
xor
fisubl
push
pop
sub
test
test
ja
aam
sub
cmp
lods
lods
shll
jge
pop
cmc
jp
fstpt
insl
pop
aas
sub
jg
pushw
sbb
cmp
push
jo
pop
fildl
adc
sbb
sub
jmp
aam
into
daa
mov
or
xor
sbb
jle
and
cli
std
into
push
ss
stc
setne
sub
dec
inc
fstpt
rorl
xchg
and
sub
stc
pop
sbb
aam
push
lock
pop
ds
pusha
pop
das
popf
fisubs
push
ret
out
jbe
ljmp
sub
xorb
bound
orl
aaa
daa
in
and
in
shrl
imul
fnsave
les
mov
js
dec
sub
sub
aam
jmp
aas
and
adc
xlat
cwtl
pop
lcall
arpl
lcall
pop
idivb
dec
pop
pop
jecxz
cmp
jae
ja
enter
cmp
xor
pop
aad
or
lea
rcl
add
jno
sbb
insl
mov
jno
sbbl
test
enter
popa
jbe
jp
inc
add
fs
ret
addr16
jl
enter
in
push
cmp
add
out
pop
aaa
xor
popa
jp
and
jns
imul
sub
mov
sub
popf
adc
xchg
xchg
sbb
cmpsl
das
ret
xor
dec
dec
or
iret
mov
or
repnz
fimuls
jmp
push
mov
pop
loopne
cmpsl
xchg
pushf
popf
sbbb
fsubp
addr16
cs
ret
aad
jae
sub
test
push
outsl
pop
repz
jbe
adc
outsb
loop
in
xlat
mov
lods
ja
aad
mov
or
jo
and
movsb
stc
imul
arpl
mov
and
arpl
dec
push
sub
movsl
xchg
push
jo
push
dec
push
into
fistpl
scas
popa
gs
addr16
popf
push
pop
pop
loope
mov
cmp
pop
repz
xlat
rcl
ret
js
test
dec
stos
mov
lcall
mov
dec
adc
stc
ficoml
xchg
test
fiadds
mov
jl
stos
test
test
jne
fcmovne
in
stos
es
mov
inc
push
sub
inc
mov
add
insl
fwait
inc
cmc
in
jnp
cmp
dec
jl
clc
jg
mov
cmc
mov
jmp
cld
pop
pop
sbb
push
cld
adc
ljmp
popa
dec
mov
popa
sub
sarl
sub
cs
pop
dec
mov
fcmovbe
adc
pushf
fyl2xp1
sub
adc
ret
fcoms
push
or
sub
push
cwtl
xchg
dec
movsl
jae
xor
mov
jecxz
jnp
pop
mov
sub
test
mov
fcmovbe
pop
cmp
adc
rorl
out
enter
mov
cmp
std
scas
scas
lret
call
xlat
js
inc
pop
dec
out
pop
out
or
inc
clc
cmp
imul
ja
mov
addb
push
add
ja
insl
inc
inc
sub
inc
adc
push
lahf
dec
lods
cmp
iret
mov
leave
gs
cwtl
mov
movsb
push
mov
adc
adc
out
aam
jb
aam
dec
cmp
inc
cmpsl
or
insb
outsl
mov
mov
inc
xchg
cltd
jo
sub
cmp
cs
mov
imul
xchg
push
jno
aaa
sub
imul
cmp
fldt
xchg
xorb
je
out
cld
push
pop
sbb
shl
je
loop
cmp
xor
add
push
xor
cld
subl
sub
pop
js
mov
mov
shlb
lcall
decl
jno
jge
mov
cmc
imul
scas
jg
out
push
dec
sub
sub
jne
int3
sbb
stos
push
dec
push
je
movsb
jp
jb
pop
inc
inc
jne
mov
adc
push
ficoms
cltd
mov
mov
push
mov
cmp
cmpsl
cmp
jmp
xchg
mov
movsb
mov
imul
xor
jne
fldenv
aas
xchg
adc
out
jg
pop
movsb
stos
cmp
cs
and
add
or
push
inc
test
and
dec
daa
mov
or
adc
insl
bound
stos
sbb
dec
subb
idivb
cs
lods
xchg
cli
xchg
push
ret
adc
jo
nop
inc
enter
into
movsl
loope
push
cltd
movsb
inc
jne
icebp
inc
xor
repnz
ljmp
jno
pop
cld
js
into
or
pushf
push
jmp
popf
jae
lcall
cmp
in
jae
cmpsb
inc
fildl
cmp
cmp
pop
fstps
cmp
adc
fstps
insb
popa
pop
sub
mov
sub
adc
ljmp
mov
stc
rcrl
fnstsw
xor
insb
flds
inc
inc
sbb
imul
cli
add
out
mov
push
xchg
sub
fstps
hlt
sub
rclb
lahf
das
pop
call
jno
pop
xchg
jb
data16
jg
push
xchg
cs
andl
rcr
insw
fdivrp
das
stc
and
divb
jnp
dec
add
sbbl
push
pop
xlat
xor
xchg
imul
and
mov
sbb
and
adc
push
push
aaa
jo
adc
std
fs
cmp
lahf
xchg
xor
bound
push
xor
mov
jg
sub
add
add
add
shll
or
out
pop
dec
xor
sbb
mov
fimuls
fidivrl
sbb
push
shll
sub
jo
es
sti
push
ljmp
cmp
js
xchg
xlat
and
lods
fidivrs
sbbb
pushf
push
adc
hlt
pop
xor
in
nop
insb
shll
cmp
lret
fldcw
mov
jno
cmpb
stos
adc
inc
arpl
lock
mov
loope
push
mov
or
inc
xchg
pop
ret
adc
xorl
mov
test
add
mov
and
jne
mov
in
fcoml
test
fildl
xchg
gs
jnp
jae
cmp
ja
cmp
pushf
jg
outsl
cmp
ret
nop
lret
xchg
mov
inc
sbb
push
dec
scas
jae
inc
push
jmp
and
jne
ret
fnstcw
jmp
sbb
sub
cmc
das
imul
stos
stc
insl
addb
stos
movsl
sahf
mov
stc
addr16
les
nop
jnp
cld
sti
push
xlat
mov
int3
dec
movsl
outsl
lret
lret
lahf
fldenv
mov
in
mov
xchg
mov
jle
movsb
cli
jg
jbe
mov
mov
pop
mov
jl
stos
xchg
xlat
fsubr
fdivrl
mov
ja
faddl
lea
ds
mov
or
insb
sbb
lock
mov
in
jmp
fisubs
xor
movb
lahf
cwtl
pop
test
or
jb,pn
dec
cmp
inc
xor
xor
mov
mov
cli
hlt
push
or
pop
in
add
xor
mov
imul
cmp
sub
adc
sbb
test
loop
arpl
and
decb
sub
jg
sbb
sub
jno
pop
push
imul
std
or
jb
ss
loope
fisubrl
sahf
dec
or
or
xor
xchg
inc
fnstenv
or
jl
cmpsb
adc
and
add
push
sub
dec
or
jbe
mov
test
sbb
jo
std
lods
repz
jno
jp
test
lods
inc
es
mov
mov
sbbb
pop
push
and
cltd
stos
lret
dec
shrl
lcall
lahf
orb
out
addr16
pop
hlt
fistpl
std
lret
pop
xlat
mov
ds
mov
pop
jns
sbb
mov
sub
jbe
xor
imul
adc
cmp
push
mov
ds
cmpsb
dec
jp
mov
test
out
mov
out
pop
jge
mov
cltd
add
movsl
lock
test
ljmp
mov
jns
xor
xlat
bound
test
in
pop
and
xor
xor
aaa
clc
jae
into
xor
push
dec
mov
mov
jns
xlat
pop
fcomps
push
cmp
adc
arpl
xor
out
les
or
addr16
push
repz
push
mov
xor
std
in
jns
push
or
ljmp
adc
shll
pop
adc
daa
clc
and
dec
les
ret
dec
xor
outsl
adc
icebp
pop
test
add
inc
push
fisttpl
push
lret
imul
fdivrl
int3
data16
jb
and
add
ds
shr
out
jno
aad
cli
pop
jg
test
lock
lea
test
inc
and
fwait
in
out
stos
mov
push
dec
stc
cmp
and
fcmovne
push
pop
push
inc
popa
mov
repnz
jne
jb
pop
pop
push
dec
or
mov
and
out
inc
mov
xlat
lods
pop
pop
fsubrl
out
fildl
push
mov
fiadds
call
sbb
es
push
xchg
ljmp
sbb
stc
cwtl
add
push
aas
out
inc
and
cmp
xor
jo
xchg
and
dec
imul
pop
and
push
repnz
xchg
add
adcl
daa
mov
or
pusha
and
arpl
xlat
jmp
mov
sahf
fstp
mov
jo
add
data16
outsl
pop
fcom
pop
addr16
jns
mov
push
loop
jae
mov
add
push
or
and
dec
aaa
push
add
xchg
xlat
lea
jecxz
pop
add
lcall
push
outsl
mov
inc
lret
mov
cmpsb
out
jl
fidivl
stos
adc
sub
xlat
std
sub
bound
negl
xchg
and
out
mov
push
imul
movsl
pop
iret
mov
int3
push
xchg
add
mov
and
push
xor
aad
outsb
add
or
movsb
call
insb
pop
mov
dec
lahf
rolb
xlat
jo
jp
mov
mov
or
scas
sbb
nop
lds
jns
push
xchg
addr16
adc
xor
fistpl
xlat
ret
xor
ljmp
xlat
xchg
add
jg
dec
fwait
ror
sbb
mov
xlat
xor
cli
cs
jnp
je
lahf
pop
rcll
popa
xlat
or
imul
lea
cs
cmp
out
addr16
jns
cmp
aad
test
hlt
lret
int
adc
std
cmp
dec
or
addr16
mov
mov
sbb
orl
fwait
xor
addr16
push
xor
or
out
adc
fwait
dec
jno
sbb
repz
jno
add
stos
inc
mov
lret
cmp
sbb
fistpl
mov
sub
inc
ds
jae
dec
ret
or
clc
push
repnz
pop
pop
xor
fldenv
std
lods
out
jns
add
jmp
push
dec
xor
fwait
pop
sbb
jne
nop
cmp
pop
jmp
add
inc
push
ja
inc
lahf
jle
adc
sbb
add
test
mov
xor
cmp
dec
xchg
fisubl
push
gs
out
jno
and
push
insl
and
pop
cmp
adc
dec
inc
ret
cwtl
inc
sbb
lahf
cmp
movsb
imul
loopne
mov
cltd
nop
add
push
lea
out
sub
lret
out
inc
xchg
inc
mov
xor
sub
outsb
push
mov
aaa
mulb
call
test
js,pn
fisttpl
addr16
mov
dec
out
decb
mov
dec
push
xor
pop
mov
movsb
and
or
gs
pop
push
jno
pushf
sar
jb
pop
dec
ds
xlat
aam
dec
xlat
ficomps
scas
mov
rorb
test
psllw
cmp
fcmove
jbe
sarl
jmp
adc
xchg
jno
sar
pop
or
and
fmul
es
adc
jae
mov
daa
cmp
mov
and
pop
out
scas
cmc
push
ret
pop
ret
and
dec
imulb
jbe
xor
adc
cwtl
insb
movsl
sahf
rcl
lods
lock
popa
test
lahf
inc
push
pop
jns
fwait
call
adc
cmp
scas
sub
out
jl
outsb
push
and
dec
out
flds
in
jae
stos
sbb
insl
push
pushf
cs
xor
jno
mov
or
dec
or
adc
mov
dec
into
mov
adc
movsb
scas
jo
dec
adc
push
jbe
leave
sub
pop
xor
mov
bnd
cmp
jno
js
dec
int3
cmp
rcll
scas
adc
fildl
jne
push
inc
or
pushf
add
mov
xor
clc
ja
jno
adc
gs
jecxz
sbb
lcall
xor
sbb
scas
shll
ret
cmp
push
es
fmuls
dec
stos
mov
jmp
fnstsw
push
bswap
pop
mulb
in
call
outsl
mov
inc
mov
insb
mov
int3
mov
and
les
push
xchg
add
enter
daa
push
or
dec
imul
cmp
movl
dec
pop
pop
jbe
out
fisubs
sub
repz
push
lahf
std
dec
ss
push
lret
imul
xchg
out
sbb
dec
or
xchg
push
mov
and
push
lock
into
mov
loopne
adc
jle
hlt
in
or
add
dec
adc
inc
xor
mov
dec
push
sbb
dec
arpl
test
mov
push
mov
jmp
into
push
jno
sahf
pop
adc
and
sbb
adc
pop
iret
push
fildl
clc
or
repz
inc
dec
je
cmp
fmull
inc
mov
sbbb
push
iret
out
inc
pop
sbb
test
int
mov
pop
dec
ret
verr
cmp
push
cmc
sub
lret
mov
imul
sub
pop
dec
sub
dec
insl
pop
jle
push
xchg
jo,pn
jb
dec
int3
xor
inc
lods
popa
mov
sbb
popf
out
inc
loopne
mov
cmp
push
xor
pop
jg
xor
cmp
mov
orb
aam
mov
cmpsb
mov
pop
or
cmp
xor
hlt
xchg
js
jbe
sub
xchg
out
xlat
or
sub
and
imul
mov
pop
andl
dec
jp
pushf
cs
dec
sub
pop
pop
push
fwait
insl
push
fcmovnb
outsl
arpl
cld
fldt
daa
mov
fistl
pop
sarl
cmpsb
outsl
popf
and
repnz
pop
adc
push
ss
das
push
mov
pop
jbe
rcrl
imul
pop
cmp
and
inc
ljmp
inc
xor
cmp
and
and
test
pop
lock
adc
xlat
popa
ljmp
movsl
insb
bound
or
pop
fcomp
adc
dec
mov
add
add
daa
sub
fmull
mov
xchg
pop
add
lretw
iret
pop
out
mov
fdivp
adc
frstpm(287
sub
xchg
cmp
xorl
imull
adc
jbe
dec
xlat
pusha
and
or
cmc
xchg
sbb
adc
pop
cli
mov
mov
out
inc
and
out
jbe
xchg
lea
jno
outsl
out
sarl
fnstenv
dec
add
dec
inc
push
callw
pop
ja
dec
pop
int3
leave
movsb
push
iret
mov
cltd
popa
test
jns
es
jg
out
add
xchg
ja
adc
push
lea
enter
sbb
sbb
aas
or
loop
cmp
scas
stc
mov
cli
inc
stos
mov
sbb
push
mov
sbb
jb
xchg
cmp
push
std
icebp
jns
push
add
idivb
insb
and
sbbb
xor
mov
popf
push
aam
adc
pusha
popa
inc
das
test
xor
pop
dec
push
dec
enter
ds
stos
pop
and
rolb
js
sbb
sbb
jmp
xor
cmp
cwtl
xor
aas
fdivrs
dec
je
lahf
dec
sbb
sti
or
pop
mov
push
xor
jae
js
pushf
mov
int
sbb
lret
push
cs
in
xor
dec
pop
cwtl
xor
sbb
test
dec
jne
rolb
pop
xchg
mov
pop
mov
lods
dec
jp
das
xchg
mov
jae
fwait
xlat
inc
sub
stos
in
sub
outsl
mov
inc
cwtl
mov
push
mov
xchg
jp
and
ficoms
jg
pop
push
in
repnz
stos
mov
idiv
jmp
daa
sub
ds
insl
and
lret
or
shrl
or
enter
icebp
and
outsb
fistpl
shl
mov
mov
lahf
repnz
cmp
repz
insl
sbb
scas
aas
mov
jns
adc
jl
movsb
inc
cmp
mov
pop
jb
notrack
scas
or
shl
in
jbe
test
into
scas
popf
out
push
xchg
test
das
xchg
loopne
mov
cmp
andl
xor
lods
and
jecxz
xor
lods
sub
fcmovne
lds
jmp
lock
or
lea
inc
mov
orl
outsb
lret
leave
in
or
test
adc
xchg
pop
pop
imul
mov
mov
addr16
push
push
push
movsl
out
cmp
dec
out
pop
ret
sbb
pop
pop
mov
mov
subb
mov
cli
xchg
xchg
imul
and
std
pop
mov
pop
into
cmpl
test
cmpsb
imul
mov
repnz
xor
mov
fsubl
cmpsl
mov
push
xor
xlat
and
call
cwtl
jl
jl
lds
mov
mov
pop
mov
add
add
cs
or
cmp
stc
and
daa
or
push
xor
movsb
sub
cwtl
ret
xor
divb
sbb
inc
cmp
jns
xlat
rcll
pop
xchg
push
sub
cld
inc
dec
jb
cmp
inc
int
mov
roll
and
repnz
or
adc
scas
jae
jmp
mov
mov
push
adc
lcall
xor
push
push
sbb
push
and
push
adc
pop
xor
pop
int3
push
inc
inc
es
fisttpll
push
xchg
sbb
pop
inc
sub
jns
pop
icebp
jo
push
or
mov
jno
mov
data16
cmp
or
andb
aas
repnz
jns
jg
fdivs
hlt
rclb
icebp
into
js
push
pop
jmp
hlt
add
jmp
out
sub
lods
and
mov
xchg
in
push
pop
push
fidivrs
pop
test
stc
mov
push
mov
fwait
rolb
jns
dec
stc
stc
adc
repnz
and
cmp
in
lods
faddl
sub
sbb
aad
cmp
lcall
scas
adc
xchg
imul
cld
cld
insl
sti
and
stc
adc
arpl
dec
xchg
mov
aad
add
daa
push
add
and
add
movsb
dec
pop
xchg
jne
and
stc
dec
pop
pop
cli
adc
sbb
add
mov
cld
rclb
xchg
std
push
dec
rcrl
and
sbb
xchg
xchg
cld
cmpsb
or
jnp
ja
daa
dec
pop
wbinvd
pushf
imul
imul
jbe
lods
xchg
cmp
or
movsb
cmp
lcall
scas
inc
mov
out
negb
push
mov
fnsave
adcb
jbe
cmp
in
jns
mov
jmp
push
pop
es
pushf
xlat
pop
out
xor
ljmp
stc
lret
loope
popa
push
xlat
daa
popa
outsl
movsl
sbb
fldlg2
sub
fsubs
ljmp
jbe
fs
dec
jno
push
inc
push
or
rol
mov
sarl
xor
int3
inc
test
push
addr16
dec
iret
xchg
add
dec
call
and
jnp
fistpl
nop
outsl
and
mov
movsb
add
pop
es
popa
out
push
orl
pop
dec
orl
stc
lret
testb
fistl
jg,pt
dec
lret
pushf
mov
sub
dec
add
jmp
out
add
jmp
or
cld
push
mov
shll
xor
lea
aam
inc
push
xor
sub
cltd
mov
push
notl
cmp
mov
jbe
ret
gs
icebp
test
sahf
xlat
insb
jle
into
push
mov
jmp
in
xchg
pop
xor
inc
jbe
xor
stos
lcall
cli
adc
jl
mov
in
insb
xor
push
sub
ljmp
lods
or
mov
mov
or
pavgw
je
jne
fcoms
pop
xchg
pop
sbb
lock
pop
ret
xlat
xchg
push
and
and
test
mov
outsb
cmp
ja
dec
mov
mov
ds
inc
jecxz
cmp
xor
mov
jno
mov
addr16
dec
mov
cli
xchg
xchg
sahf
jg
cmpsl
insb
andb
mov
fiaddl
loopne
mov
cld
es
pop
and
pop
mov
jbe
jnp
sub
sbb
out
mov
push
call
and
or
das
arpl
jae
test
push
rorl
clc
mov
jns
fisubrl
xchg
fisubs
testb
jns
rorl
dec
pop
out
call
aas
pop
aaa
xlat
mov
sub
mov
sbb
js
clc
xchg
or
dec
jp
fnstsw
sbb
test
dec
aas
inc
mov
and
inc
adc
aas
negl
lock
sub
or
push
stos
and
enter
cld
adc
xlat
lahf
push
xor
fidivs
push
stos
inc
push
mov
xchg
dec
pop
repnz
xchg
sub
loopne
out
pop
lahf
daa
pop
lods
dec
dec
inc
icebp
mov
jp
stc
fsubp
push
test
sbb
xchg
push
int
mov
imul
xor
push
sub
push
hlt
xchg
and
jno
sti
jbe
sub
xor
ret
les
rolb
jnp
inc
lahf
mov
xor
fmuls
pop
fdivr
shr
push
jmp
scas
jecxz
pop
or
mov
or
mov
inc
cltd
js
add
mov
adc
outsb
mov
jnp
insl
idivb
leave
inc
and
int
dec
mov
dec
sti
push
or
imul
add
cmp
lods
out
xor
lcall
lcall
add
pop
mov
stos
stos
ja
xchg
push
xchg
or
repnz
jmp
mov
std
push
add
xlat
stc
icebp
ror
jne
fcomi
shr
jmp
mov
pop
popf
xor
mov
mov
mov
fistl
pop
in
or
xchg
mov
adc
pop
iret
pop
inc
dec
aad
jp
jnp
jecxz
popl
mov
mov
hlt
sbb
aaa
jg
push
push
sbb
int3
or
into
js
lret
pop
dec
pop
mov
cs
int3
xchg
cmp
inc
xor
push
cmp
add
mov
push
jae
jae
test
hlt
cmc
mov
inc
jae
xchg
cli
iret
mov
add
xchg
lret
and
std
add
pushf
pop
mov
push
sub
add
dec
dec
push
lcall
pop
lods
and
xor
sbb
lcall
inc
add
cmp
cld
cmp
popa
jp
xchg
add
fimull
add
and
test
xchg
ljmp
pusha
xlat
das
inc
subl
or
xor
and
mov
jle
cltd
roll
out
dec
jno
roll
inc
xor
enter
dec
mov
repz
sbb
std
pop
xlat
or
addr16
mov
bound
in
inc
fistl
jae
fsts
push
das
mov
cmp
cmp
fisubrl
movsl
addr16
iret
test
sbb
fcoml
outsl
jmp
jo,pt
cmp
hlt
movsb
cmp
mov
xchg
jb
mov
cmc
xchg
fstpt
pusha
jno
fstpt
jne
lods
dec
xor
fwait
call
adc
inc
xchg
cmpsb
dec
loopne
sbb
or
sub
leave
flds
mov
and
fcoml
push
outsb
mov
pop
js
pop
mov
or
sub
push
cmp
imul
add
rolb
sbbl
fwait
lea
and
xor
xor
movl
cmp
push
push
xlat
and
jmp
pop
dec
clc
stc
adc
cwtl
fldt
ret
cmp
in
movsb
adc
cwtl
test
inc
xor
in
sub
inc
sub
in
cmp
push
lods
mov
or
lcall
sbb
stc
xchg
inc
lret
or
mov
scas
or
adc
add
lret
pop
push
push
or
dec
inc
shlb
lret
in
or
cmp
xlat
mov
mov
cmp
xlat
lds
addr16
pop
std
imul
cmpsl
dec
inc
pop
mov
or
or
xchg
mov
mov
stc
popa
xlat
dec
in
mov
xor
cmp
fdivrs
push
pop
and
mov
adcl
jb
ficoms
es
adc
cmp
in
daa
jecxz
mov
jp
insb
jg
or
ds
pop
imul
adc
lods
xor
lock
and
inc
lret
and
fidivs
dec
push
and
mov
pop
cmp
repz
cmp
ret
idivl
add
push
clc
and
fdivl
pop
add
aaa
imul
in
push
stos
jmp
jp
call
cmc
daa
push
xlat
and
ljmp
pop
inc
jl
push
xlat
mov
pushf
xchg
xor
xchg
sbb
mov
in
cmp
mov
cmp
mov
scas
pop
add
in
sub
mov
pop
fnstcw
arpl
lcall
dec
out
out
mov
fldcw
mov
insb
push
and
testl
pop
js
mov
jae
push
cld
push
aas
pop
push
cmp
dec
orb
imulb
popf
roll
adc
jmp
jle
xor
or
push
xor
xor
jp
jns
dec
mov
xchg
or
std
andb
daa
fs
sbb
rcr
leave
pop
lds
xchg
push
sub
xor
jns
xchg
push
inc
jmp
lods
inc
mov
sub
mov
out
mov
adc
lock
in
push
adc
dec
insl
cmp
in
inc
ja
outsl
rcrl
dec
leave
fsqrt
pop
inc
stos
int
pop
mov
push
out
jp
sbb
scas
add
cmpb
es
push
xchg
add
add
jmp
mov
mov
loope
addr16
sbbb
or
cmp
in
push
xchg
dec
call
mov
pop
cmp
cwtl
cmp
data16
imul
addb
push
sub
add
hlt
mov
lods
lret
and
jns
out
sbb
out
test
ja
leave
cmc
dec
xchg
and
inc
sub
std
es
sub
js
popf
imul
cmp
movsl
mov
mov
or
scas
fdivr
dec
rcr
adc
sbb
outsl
stos
inc
mov
push
mov
mov
cmpl
cmp
cmp
pop
jl
test
mov
fsubs
jg
pop
imul
mov
inc
jmp
add
imul
out
cmp
fcomp
inc
dec
rol
push
in
push
sub
jno
shlb
xchg
shrl
pop
mov
pushf
imul
lret
jge
shrl
in
loopne
pop
lods
pop
push
out
xchg
imul
insb
dec
push
ja
add
jne
mov
lret
jge
sbbb
lds
ret
stos
xor
dec
les
cwtl
decb
popf
dec
mov
jb
add
adc
inc
fidivs
push
and
sub
in
inc
pop
fsubl
scas
enter
mov
std
inc
out
negl
cmpsb
add
pop
dec
scas
ret
xchg
mov
adc
mov
inc
jle
outsb
jb
stc
jae
push
faddl
sbb
bound
dec
xor
int
aam
pop
mov
pop
clc
push
andl
xchg
push
sbb
jb
insl
lea
or
inc
mov
enter
stos
jl
mov
fcoml
flds
xor
lret
and
sub
inc
mov
shlb
xchg
and
push
cmp
stc
int3
dec
xor
fisttpll
pandn
mov
push
stc
sbb
dec
jb
push
xlat
cs
dec
dec
int3
xchg
loop
jmp
sbb
loopne
mov
pop
xlat
sbb
cmp
ffreep
push
fistl
pushf
push
xor
xlat
shrb
clc
push
lcall
std
mov
mov
inc
inc
arpl
jae
xlat
mov
pop
lock
fdivrl
loopne
imul
aaa
aaa
sub
add
pop
adc
or
bound
xchg
jp
call
lcall
in
jp
mov
cmp
push
ficomps
xlat
and
ret
imul
mov
xor
pop
arpl
aad
pushf
cmpl
pushf
inc
jecxz
jl
icebp
add
jo
lea
jmp
mov
adc
lret
rol
int
mov
mov
mov
inc
or
or
sbb
jae
inc
sub
fistpl
ret
cmp
lahf
pushf
inc
add
mov
add
repnz
sahf
xchg
into
cli
icebp
jno
xor
outsl
xor
xor
inc
push
int
sahf
mov
fildl
xlat
mov
out
jno
in
rcl
mov
flds
cmp
xchg
repnz
xor
dec
jns
inc
stos
stc
dec
xchg
negl
xor
push
out
lret
adc
jns
cmp
out
cmp
fiadds
jmp
xlat
and
rclb
pop
stc
xor
out
lcall
cmp
dec
xchg
popa
cmpsl
push
mov
mov
mov
lds
jmp
cmp
scas
cmc
cmp
inc
movsl
std
jge
js
mov
mov
inc
xchg
fidivs
sbb
orb
xchg
ljmp
shlb
xor
mov
push
mov
movsl
xchg
inc
xor
ret
and
jg
mov
and
aad
cmp
jns
sbb
sbb
std
jp
mov
jg
sub
insb
mov
je
notb
push
mov
mov
push
add
push
das
insl
pop
sub
or
xor
mov
lret
mov
push
push
xchg
xor
and
cltd
jg
cmp
in
push
ret
daa
mov
xchg
arpl
push
inc
ret
cli
es
push
test
pop
lods
push
adc
cmp
imul
loope
xlat
add
pop
subl
stos
out
cld
int3
fsts
test
mov
jmp
jle
mov
outsl
popa
fisttpl
cmp
inc
mov
popa
dec
pop
fs
adc
cmp
pop
sbb
push
sbb
ds
imul
fadds
js
sub
xor
or
xchg
mov
arpl
lcall
test
lds
fsubrp
dec
cmc
in
test
repnz
adc
fimull
and
cmp
fcomi
dec
adc
inc
jmp
pop
jno
lret
or
pop
jno
negb
dec
fstps
mov
out
into
sbb
or
push
mov
mov
jl
sbb
mov
dec
mov
mov
or
mov
fcmovbe
mov
push
and
mov
cltd
and
je
adc
js
popl
rcrl
jne
lcall
ret
adc
ja
cmpsl
xor
cld
popa
fidivrl
push
dec
pop
and
and
pop
sbb
insb
jge
leave
push
pop
mov
rorb
cmp
test
cmpsl
ljmp
inc
mov
cmp
xor
adc
mov
in
aad
int3
and
xorl
mov
jo
scas
rcrb
jmp
aas
jnp
rcll
or
dec
sbb
icebp
and
dec
dec
imul
add
lcall
mov
stc
push
sub
cmpsb
mov
cmp
test
cmp
das
fwait
cmp
or
ret
mov
jno
and
or
fcmovbe
lret
in
push
inc
jbe
push
sub
and
add
ss
dec
mov
cmpsb
incb
jp
nop
inc
push
cmp
and
or
rcrl
push
shlb
es
jg
leave
xor
xor
push
adc
bound
sbb
or
push
cmpl
mov
inc
loope
xor
inc
fsts
daa
mov
and
fstpt
sub
inc
sarl
push
adcb
pop
dec
addr16
dec
xchg
push
push
fnsetpm(287
push
fsubl
sti
sahf
mov
dec
xlat
ljmp
gs
ja
fcoml
and
push
jge
aas
loop
sahf
fisubrs
mov
outsl
ret
cmp
enter
xchg
outsb
popa
push
add
scas
jge
insl
or
mov
pop
mov
jne
dec
inc
jns
jno
cmp
outsl
sti
dec
cmc
sbb
call
arpl
es
xlat
fwait
stc
lahf
and
jmp
push
add
and
xchg
jns
or
dec
test
mov
aas
adc
fmul
cmp
push
add
add
pop
lcall
push
cmp
mov
fidivrs
xchg
lret
scas
cmovnp
dec
cmp
rcll
xchg
test
or
cmp
int
adc
sbb
mov
xchg
pop
mov
cmp
add
imul
add
inc
push
xor
add
testl
cmpl
xorb
pop
xchg
movsl
arpl
cmp
cmp
xor
mov
cwtl
add
int
neg
add
fbstp
stos
imul
dec
ficompl
andl
jae
filds
stos
xchg
and
sbb
cmp
cmpsl
add
rcr
stc
jge
test
enter
xchg
sarl
pop
push
adc
jl
popf
adc
sbb
dec
sub
inc
or
push
jb
shlb
fldt
movl
or
mov
call
icebp
repz
xor
outsl
add
push
mov
lret
aas
sbb
in
add
dec
jl
hlt
gs
jg
dec
xchg
xchg
aas
gs
mov
mov
in
ljmp
icebp
outsb
cmp
std
mov
mov
ja
inc
mov
sub
xor
pop
fadd
popa
mov
push
int3
out
sub
mov
xchg
sbbl
insb
sti
test
sbb
rolb
xor
mov
aad
fistl
add
call
sbb
dec
cld
jl
mov
int3
jae
xchg
mov
lods
and
call
push
sbb
das
mov
js
jle
mov
jl
xchg
movb
push
movsbl
adc
sub
inc
mov
cmp
push
mov
push
mov
cmc
ret
and
fldpi
jns
bound
xlat
cs
fiaddl
inc
addr16
cmp
outsb
bound
push
movsb
xor
add
mov
xor
pop
xor
push
mov
push
shl
sub
or
dec
xor
sahf
xor
stos
mov
jo
leave
stc
cwtl
and
loope
dec
and
push
xchg
imul
mov
sbb
jb
sahf
push
and
pop
sbb
mov
subl
das
stc
je
fldcw
xor
stc
xlat
sub
cmp
jns
adc
xlat
xlat
pop
mov
pop
jmp
imul
inc
add
repz
outsb
cmp
lret
aam
push
sbb
or
mov
mov
ljmp
pushf
xor
icebp
add
jg
and
inc
call
clc
add
push
xchg
idiv
xchg
das
andb
xchg
imul
sbb
add
mov
dec
lahf
lock
addr16
push
fsubrl
jno
jg
xor
dec
or
jle,pt
jo
add
insl
pop
test
pusha
mov
mov
sub
fstps
xlat
xchg
jo
and
arpl
movsb
iret
loop
push
in
or
test
out
aad
inc
gs
mov
sbb
and
push
mov
sub
add
mov
rcrb
add
cmc
popa
mov
mov
sub
dec
mov
in
pop
je
sub
ss
movsl
lcall
dec
add
xor
jmp
imul
or
pop
iret
loope
lock
sub
and
and
fs
xor
nop
movsl
lcall
xchg
idivb
sbb
dec
arpl
xchg
loopne
js
jns
cld
jns
adc
loopne
push
xlat
loope
ljmp
xlat
sarb
stc
and
xor
clc
std
sbb
imul
dec
enter
icebp
mov
pop
adc
sub
dec
pushf
test
adc
rorb
or
or
sbb
daa
pop
sbb
jge
arpl
jp
fwait
sbb
dec
hlt
aam
dec
push
pop
ss
pop
stc
xchg
jno
test
xchg
ret
cmc
push
insb
jae
jecxz
imul
mov
or
scas
out
cmp
je
mov
pop
je
fs
jnp
add
pushf
jle
lock
sub
jbe
sub
jge
test
push
cmpb
push
lret
pop
ret
test
faddp
mov
enter
sub
or
and
push
pushf
fucomip
test
jge
pop
lea
cmp
cmp
insb
test
mov
xchg
xchg
addr16
les
test
mov
mov
or
mov
dec
ljmp
stos
ljmp
xchg
int
cmp
xchg
pop
jns
or
gs
loop
xlat
add
popf
cld
and
lret
mov
push
mov
enter
sbb
ret
push
adc
lahf
out
xchg
dec
pop
pop
cmp
loope
imul
push
mov
mov
dec
xlat
lods
jmp
fistl
jb
faddl
sbb
cmp
out
pop
das
loop
xlat
lods
scas
jge
incb
jne
mov
sub
nop
test
loopne
sub
lds
pop
jnp
xorb
jl
aaa
pop
fistps
insb
mov
jns
pop
pop
dec
add
adc
dec
lods
test
sbb
pushf
push
inc
cwtl
jge
cmp
insb
dec
pop
int3
cmpb
mov
pop
pop
fcomps
xchg
cmp
test
loope
inc
cmpsb
in
or
cmp
dec
jp
stc
and
xchg
sub
inc
mov
inc
xchg
sbb
dec
sbb
jne
mov
pop
pop
mov
pop
xlat
pop
sahf
imul
popf
xchg
rorl
jnp
pop
das
sub
in
in
mov
inc
jp,pn
xor
loopne
out
in
in
rcrb
pop
fwait
sub
push
xor
jle
loope
xor
mulb
xchg
sub
sub
and
arpl
das
test
rcll
mov
mov
hlt
add
adc
cmp
std
or
mov
sbb
lret
shr
xlat
or
rcr
jno
test
dec
add
xor
xchg
jl
lock
cli
mov
imul
cmpl
movsb
sbb
adc
sbb
jae
xlat
mov
push
dec
inc
inc
inc
test
or
insl
fisubs
gs
or
insl
pop
pop
repz
fstps
mov
push
jp
or
xor
mov
jecxz
xchg
pop
lret
push
loopne
push
loope
scas
pop
mov
lea
push
push
fistpl
repnz
pop
dec
push
scas
bswap
xchg
outsl
icebp
xchg
aad
xor
xchg
xor
imul
imul
outsl
jmp
dec
push
add
setle
jmp
cltd
fistl
mov
int3
mul
or
cmp
jp
pusha
fsts
add
cmp
cmp
in
jne
pushf
ja
in
dec
push
sub
cmp
jg
in
push
lea
mov
cmp
int3
sub
jns
hlt
rcr
into
adc
cmp
std
sar
or
xlat
pop
in
pop
and
cli
or
loopne
aaa
inc
int3
xor
mov
push
cmp
push
or
adcl
push
xlat
fs
or
data16
ret
int3
xchg
mov
push
sub
sub
pop
mov
mov
mov
outsb
mov
pop
cli
je
stc
xor
hlt
out
xchg
das
dec
mov
cmp
cltd
subb
addb
sti
pop
xor
cmp
jbe
jns
fisubs
xor
xchg
and
xabort
cmc
xor
js
mov
mov
or
pop
push
adc
add
stc
imul
fdivs
std
cmp
xlat
cltd
lock
cmp
cmc
adc
mov
cs
scas
test
mov
aad
sbb
xchg
pop
pop
mov
fldcw
mov
pop
rcll
insb
push
jae
fnstcw
std
in
out
nop
push
int3
xor
pop
dec
jne
addl
push
and
popa
sahf
push
or
jo
scas
jnp
or
or
movsb
pop
fistl
xchg
mov
dec
xlat
cmp
xor
aam
popf
pop
add
subl
cmp
sbb
fildl
add
lret
push
mov
push
mov
outsl
fcompl
neg
lret
in
mov
fstpt
jg
and
icebp
ja
stc
int3
add
and
les
xchg
xor
mov
cmp
es
cs
pop
dec
idivb
aaa
fsubrl
xor
push
subb
pop
xorb
add
inc
imul
arpl
mov
and
or
and
jne
jno
cli
push
mov
jae
xorl
and
lcall
ret
jne
adc
test
lcall
stos
or
add
push
push
cmp
mov
sldt
and
imul
mov
jne
loop
cmp
cmpsl
shlb
stc
xchg
ficoml
lret
insb
push
ret
push
and
pop
cmp
pop
xlat
mov
nop
cmp
test
dec
arpl
popa
loope
pushf
cld
into
out
mov
jnp
dec
and
cld
stc
andl
call
inc
lret
sub
shll
dec
shrl
fchs
sub
imul
mov
subl
mov
pop
sub
outsb
divl
loope
dec
test
int3
cmp
test
enter
cs
jns
pop
lock
mov
jl
xor
cmp
nop
xchg
mov
fdivs
rolb
insb
mov
cmp
cmpsl
inc
and
inc
xchg
xor
dec
xchg
pop
outsl
mov
aam
xchg
lcall
adc
jns
dec
stc
inc
pusha
dec
xchg
pushf
cmp
jnp
sbb
adc
rcr
push
mov
das
lahf
call
cmp
loop
and
lods
cs
jg
xor
jbe
jo
cmp
push
xor
inc
inc
shrb
bound
inc
mov
test
daa
dec
divl
adc
or
idivb
subb
add
mov
mov
push
dec
dec
pop
jecxz
in
mov
cmp
nop
scas
sahf
sbb
push
push
das
jge
icebp
sub
mov
imul
xor
daa
lret
push
mov
xchg
sbb
push
sub
cmp
cbtw
jmp
mov
mov
out
pop
call
jle
xor
or
hlt
dec
mov
lea
adc
push
je
xchg
ds
int
jp
add
dec
sub
ljmp
into
pop
sub
sti
stc
fstps
out
leave
sub
mulb
add
sub
bound
enter
sbb
daa
cmp
mov
lea
cld
outsl
shll
ficompl
pop
sti
xchg
shl
cmp
ljmp
inc
js
mov
and
adc
xlat
sbb
orb
inc
cmp
out
push
stos
sbb
nop
test
add
push
daa
dec
test
dec
lea
mov
dec
cmp
xlat
ficoml
lock
push
fsub
js
inc
mov
js
xchg
pushf
dec
jns
loop
aas
repnz
gs
sub
std
xlat
push
addl
pop
filds
pop
enter
add
jne
orb
cwtl
push
movntq
xor
in
fxch
je
xchg
sbb
imul
cmp
sbb
jae
add
lcall
scas
mov
out
mov
mov
dec
mov
cs
mov
push
int
push
aad
js
cli
jnp
xor
test
sub
mov
mov
adc
adc
jg
stc
cmc
lea
and
idivb
mov
jns
mov
push
cltd
pop
int
cmpsl
sub
paddsb
pop
pop
adc
and
lahf
lcall
imul
mov
stos
jge
adc
mov
sbb
push
xor
sbb
and
sbb
outsl
sub
add
mov
adc
adc
inc
cmp
stc
popa
cmp
addr16
push
imul
addr16
push
push
fildl
sub
inc
stos
mov
shl
jle
dec
cmp
ret
jmp
dec
stos
aam
adc
push
inc
insb
mov
or
mov
addr16
jo
shr
movl
stc
jg
xchg
je
shr
mov
or
mov
aas
cmp
loop
pop
lret
jmp
mov
fs
sbb
add
inc
push
fdivrl
push
pop
jg
or
sbb
sbb
insl
imul
inc
lock
mov
jl
adc
jl
jge
xor
test
imul
push
pop
pushf
pop
mov
das
xchg
and
mov
faddl
stc
fs
sbb
jmp
jbe
pop
jl
sub
jns
test
xchg
jb
jbe
aaa
inc
test
adc
arpl
mov
loopne
push
push
out
pop
test
stos
push
pop
hlt
lahf
cmpsl
fldt
mov
arpl
push
or
push
jo
cmp
enter
or
fistpl
pop
std
inc
pop
sbb
sbbb
js
jp
ds
lods
and
in
out
inc
popf
dec
mov
sbb
movsl
adc
scas
sbb
imul
add
jmp
cmp
pop
dec
mov
js
xor
arpl
xlat
icebp
aam
jg
iret
add
testl
xor
xchg
jge
fcomps
sarb
daa
loope
in
inc
pop
dec
inc
aaa
mov
idivb
gs
dec
mov
sub
es
or
aad
cmp
imul
mov
idivb
pop
push
sbb
mov
mov
push
sub
ljmp
hlt
pop
add
mov
fnstcw
push
mov
ss
aas
fimull
dec
iret
push
xor
adc
mov
push
mov
xchg
dec
test
dec
icebp
cmp
sbb
dec
dec
xlat
sub
pop
mov
add
and
das
xchg
sub
mov
push
push
ja
mov
arpl
cmpsb
push
sbbb
jae
aam
sub
sbb
mov
icebp
std
out
push
out
dec
mov
mov
fcmovnu
xchg
mov
stos
pop
cmpsl
sbb
movsl
int
xor
imul
mov
xor
cmp
daa
mov
push
and
add
cmp
test
dec
mov
or
jae
inc
nop
test
inc
mov
jns
mov
in
ret
test
jae
mov
lret
push
arpl
lcall
xlat
idivl
pop
mov
push
sub
leave
pop
negl
mov
xor
pop
repnz
or
repz
scas
cmp
in
lock
xchg
popa
sbb
add
dec
push
insb
sub
std
mov
mov
imul
or
dec
iret
cmc
fadd
dec
add
mov
orl
ljmp
jae
cmp
out
sub
ds
repnz
mov
cmp
mov
fwait
lcall
xlat
es
stos
mov
out
sbb
icebp
pop
cmp
enter
push
enter
and
jno
lcall
ss
gs
mov
aam
push
out
movsb
fnstsw
xlat
mov
flds
fstpl
and
mov
and
push
shl
xorb
sbb
push
jo,pn
xor
push
jae
dec
and
mov
jno
pop
test
into
jnp
push
xchg
and
and
push
mov
sub
and
xor
mov
xchg
adc
xlat
cmp
into
addl
push
jns
pop
out
lcall
xor
sub
pushf
pop
mov
mov
sub
lret
push
jo
loopne
in
xor
push
and
or
sahf
cli
mov
mov
arpl
xor
imul
and
pop
scas
xor
or
das
mov
int3
fadd
and
pop
pop
mov
mov
adc
out
daa
mov
jnp
sub
outsb
sub
lods
pop
cmc
test
pop
sbb
sub
call
inc
push
inc
out
and
xor
and
mov
jae
cli
outsb
scas
mov
loop
imul
inc
xchg
iret
lods
retw
xchg
out
aaa
sub
rcrl
mov
dec
sbb
pop
xlat
iret
mov
mov
jae
mov
test
sbbb
fidivrl
adc
clc
mov
push
add
jle
push
dec
xchg
les
xor
in
xchg
lods
inc
xlat
push
sub
fwait
je
fisttpl
cmpsl
int
lret
repz
and
sub
fdiv
ds
push
in
lret
dec
daa
pop
inc
into
mov
fidivrl
xchg
pushf
lea
xchg
jmp
mov
ret
pop
push
pop
mov
fcomi
mov
sub
add
jecxz
lcall
loope
dec
mov
and
imul
sbb
flds
cmp
mov
or
arpl
int3
and
sbbb
jns
dec
jne
in
sub
and
or
or
in
insl
sbb
mov
outsb
hlt
sbb
push
jle
pop
add
mov
lret
data16
stos
sarb
sub
dec
sub
popa
pop
aam
loopne
cwtl
sti
fnstcw
into
fimuls
int3
shl
insl
xchg
ret
movsb
inc
dec
mov
mov
scas
mov
sbb
jmp
push
mov
mov
pusha
jns
adcl
sub
mov
pop
mov
cmp
frstor
cmp
sub
sub
iret
or
pop
repnz
jne
xchg
xchg
inc
out
pop
iret
xor
xchg
fsubp
dec
cmp
jg
pop
popf
mov
je
push
or
mov
add
mov
xchg
scas
mov
push
es
sub
push
sub
dec
imul
sbb
imul
cmpsb
sbb
push
or
mov
cwtl
cltd
push
xlat
andb
sbb
les
push
into
fistl
pop
mov
andb
lcall
lahf
or
and
sbb
das
lahf
mov
addr16
push
ret
jp
xor
sub
xchg
push
imul
or
fsub
pop
xor
jb
inc
dec
hlt
jns
aam
mov
jp
cmp
xor
inc
addr16
testb
xchg
dec
adc
push
inc
leave
dec
adc
mov
lret
ret
out
test
out
add
jecxz
fldt
sub
fs
int
mov
idivb
sub
stc
es
int3
xchg
cmpsl
and
or
and
in
test
subb
xor
clc
sub
jl
jge
jmp
jg
xlat
sub
iret
ja
sbbb
push
mov
jae
fsts
or
mov
movsl
jno
pop
std
std
aaa
pop
mov
subb
outsb
inc
aad
sub
lds
xchg
fidivrs
dec
notb
jmp
lret
ficomps
sbbl
dec
fstl
cli
rcr
xor
cmpsb
mov
jne
ja
mov
leave
mov
out
xchg
sbb
rcr
push
scas
jbe
xor
in
add
xor
sbb
std
clc
mov
dec
addr16
lahf
or
mov
xlat
xor
imul
mov
jno
fcmovnbe
je
movsb
fld
jb
mov
jl
cmp
fimuls
in
inc
roll
dec
cmp
das
pusha
imul
jne
pop
ret
xlat
sbb
adc
push
cmpsl
pop
adc
icebp
cmp
push
insl
add
xor
stc
mov
push
orl
daa
leave
test
inc
push
fnstsw
inc
jg
shlb
repnz
sahf
movsb
clc
cmp
sbb
jmp
sbb
add
dec
dec
and
lock
int3
mov
xor
iret
nop
pop
sahf
xlat
mov
rclb
mov
cltd
out
out
ja
repnz
xor
mov
in
in
jge
adc
sti
sbbl
jecxz
inc
and
mov
xor
mov
sub
xchg
fistl
pop
xor
shll
fldl
es
xchg
call
or
xchg
xor
loop
fisttps
test
out
in
cmp
stos
shr
cmp
pushf
jno
jg
push
cwtl
dec
jo
test
aas
je
sub
lods
pop
inc
or
dec
jno
add
jno
cmp
pusha
sub
pop
mov
or
or
stc
pop
add
pop
ret
xor
test
push
mov
push
test
xor
mov
and
mov
repz
aad
daa
mov
repnz
es
outsl
daa
and
fstpt
jp
pop
adc
xor
adc
pusha
sbb
or
mov
test
pop
xor
pop
inc
popa
insb
xor
push
mov
push
xchg
movsb
dec
jnp
les
mov
inc
aam
adc
jmp
ficoml
fld
data16
imul
cmp
jmp
imul
pop
jecxz
mov
jecxz
dec
dec
xlat
sub
gs
sbb
testb
stos
cli
xchg
xor
xchg
data16
ret
movsl
sbb
push
lods
mov
dec
out
fimuls
xlat
mov
lret
cmp
ss
mov
and
cltd
and
mov
sarb
or
sbb
jmp
test
int3
xor
jge
movsl
sahf
rorb
andl
movsb
dec
scas
dec
inc
dec
cltd
xor
in
test
mov
in
xchg
test
cmc
fnsave
sub
out
sbb
pop
cli
xchg
ja
aaa
push
cwtl
call
imul
sub
add
aaa
rcrb
add
stos
mov
pop
push
push
fistps
cli
and
jae
jmp
cmp
adc
sub
add
ret
test
mov
stc
test
jbe
loopne
out
sbb
negl
shlb
and
or
dec
cltd
inc
ljmp
insl
fldcw
pop
xor
adc
mov
stos
fs
inc
ljmp
jbe
xchg
pop
push
sbb
push
std
cmp
mov
test
jle
in
sbb
pop
jo
or
es
out
xlat
fwait
jmp
je
outsl
nop
mov
mov
loop
jno
popa
push
adc
movsb
ficoms
jb
push
mov
jae
flds
add
cwtl
loop
lahf
fistl
adc
sub
sbb
mov
push
sbb
hlt
xchg
cmp
cmp
test
adc
addr16
fnstenv
jp
rcrb
mov
adc
pop
push
jg
insb
push
ficomps
jecxz
cmp
cs
push
stos
sbb
sub
jo
push
mov
sub
xor
movsb
dec
sub
and
aaa
movsl
lret
mov
jp
add
mov
fiadds
add
mov
sub
gs
inc
aam
mov
and
mov
shll
iret
adc
or
push
xorb
out
dec
fldenv
push
cmpsl
pop
sarl
push
pop
mov
test
lods
dec
test
fisttpl
sbb
sub
cmpsl
cltd
jae
mov
add
fs
and
out
cli
mov
jne
xor
dec
xchg
out
ret
dec
sarl
pop
or
push
mov
insb
inc
mov
mov
dec
fstps
xlat
and
enter
jge
cmp
sahf
les
and
daa
jo
cmpsl
les
iret
jnp
test
js
push
outsl
in
mov
pop
imul
lret
adcb
ljmp
imul
jmp
or
nop
sahf
and
imul
pop
leave
sub
inc
and
mov
mov
mov
cld
xor
insl
cli
and
cmovb
push
movsb
addr16
fdivrs
sub
mov
push
out
xchg
test
movsb
mov
push
xchg
and
dec
mov
cmp
xlat
jecxz
out
push
outsb
lret
test
cld
scas
xchg
add
push
sub
sbb
lahf
push
inc
xchg
inc
mov
inc
jge
test
pop
jns
loop
stos
cmp
subl
scas
cmp
mov
cs
inc
sub
push
or
and
fsubl
mov
dec
push
mov
nop
and
xchg
xchg
fldcw
test
xorb
xchg
arpl
add
mov
repnz
push
sbbl
add
dec
sub
ljmp
cs
cmp
mov
dec
mov
jl
jno,pt
jl
xor
arpl
add
je
or
test
sub
int3
lock
aaa
ljmp
nop
aam
mov
repnz
add
je
rorb
stc
pusha
stos
xor
push
in
cmp
dec
arpl
sahf
xchg
cmp
cs
lcall
fdivrs
loop
aam
pop
test
hlt
fbld
sbb
add
xor
xor
adc
leave
jno
aam
sbb
mov
inc
push
or
mov
pop
xor
xor
xor
aam
jno
out
xor
jge
mov
push
fnstenv
mov
hlt
mov
jbe
test
mov
decl
rcrb
ret
fcmove
sbb
mov
scas
pop
nop
push
xor
adc
nop
sub
xlat
dec
mov
pop
push
stos
lods
jae
cmpsb
jge
lds
push
and
cmp
cli
fistpl
jbe
ret
mov
jo
pushf
pop
sub
loop
jae
fwait
scas
adc
jmp
sub
shlb
loopne
pop
lahf
push
dec
xchg
fcoms
cmp
test
call
adc
dec
mov
arpl
cmp
mull
out
mov
mov
test
test
mov
cmc
pop
bound
and
jb
xlat
jbe
xchg
aas
stos
jmp
mov
jae
push
pop
in
xlat
pusha
iret
ja
adc
adc
push
lods
in
pop
sbb
lahf
and
repnz
fidivrs
sbb
jg
mov
mov
xlat
cltd
or
cmp
push
cmp
ljmp
dec
data16
cmp
js
pop
pop
lahf
aaa
pop
mov
flds
lods
fiadds
mov
push
push
ss
cmc
in
rorb
repnz
xchg
jae
iretw
xchg
fidivl
in
fucomp
test
cmc
cmp
adc
mov
ljmp
and
test
jne
test
jns
shr
loope
pop
stos
push
iret
in
scas
or
call
pop
pop
jecxz
and
fldt
inc
jns
dec
dec
and
pop
lret
mov
insb
jns
jne
insb
and
call
rcr
adc
dec
pop
xor
das
xchg
loope
mov
add
fadds
xor
mov
iret
pop
scas
jb
mov
ret
dec
jecxz
mov
jbe
stc
ret
das
sahf
std
mov
cld
mov
push
mov
inc
scas
mov
out
sub
sbb
add
xor
or
loopne
sub
rcrl
and
inc
push
mov
movsl
mov
popa
fldt
push
xor
outsl
cmp
int3
addr16
and
sbb
andnps
imul
shlb
sub
cmpsl
mov
dec
cwtl
outsb
pop
daa
jns
and
loop
cld
popf
adc
mov
stos
fidivrs
fstp
cmp
test
add
sbb
inc
sahf
test
fisttpl
jne
jle
inc
rcl
pop
and
xchg
adc
lahf
sub
les
push
or
mov
movsl
fistpl
andb
pop
sub
lahf
xlat
js
arpl
cmc
test
push
push
xor
movsl
add
xor
lds
call
and
lret
adc
jg
mov
in
add
and
cmp
xchg
sbb
movsl
jno
mov
mov
lret
out
sbb
mov
xlat
and
loope
inc
jae
aad
sbb
fdivrs
lret
mov
jp
faddl
ret
pop
fistpll
xor
pushf
mov
inc
nop
mov
xor
arpl
rcll
ds
mov
mov
or
sbb
pop
fsubl
xor
ja
cli
or
aam
js
xlat
add
push
repnz
and
cmp
hlt
adc
mov
push
xor
sbbb
cmp
inc
push
push
decl
sub
push
inc
fwait
adc
movsl
and
pop
dec
mov
xchg
adc
aaa
leave
pop
fstpt
cld
adc
imul
rorb
das
int
in
fstpt
jae
or
aaa
xor
stos
mov
repnz
fnstcw
fstpt
je
out
imul
sbb
pop
sub
cli
adc
cmp
out
dec
and
jl
enter
dec
addr16
arpl
dec
gs
flds
jl
mov
stos
shlb
bound
mov
push
test
inc
push
and
push
inc
ret
cmp
out
jl
flds
mov
clc
pop
mov
mov
cs
jns
int3
lods
push
push
xor
push
mov
mov
cmp
jmp
sbb
shrl
xlat
jle
xchg
int
jnp
shlb
mov
lret
or
das
cmpsl
pop
mov
sbb
mov
mov
popf
mov
dec
ds
pop
mov
jae
or
lahf
jecxz
mov
mov
out
testb
out
sbb
and
out
xchg
dec
add
mov
inc
test
jno
mov
fimuls
cmp
movsb
lock
dec
mov
mov
dec
sbb
outsb
adc
nop
sub
mov
hlt
aas
imul
test
arpl
aas
mov
repz
es
stos
repnz
or
pop
sub
stc
inc
sub
lret
sbb
mov
cmp
xor
fsubr
sbb
jnp
adc
adc
dec
fistl
cmp
js
aaa
pop
mov
fsubrs
aas
mov
stos
icebp
pop
push
ds
sbb
clc
fimuls
aad
not
shlb
add
pop
push
std
pop
data16
aas
hlt
mov
add
fcomps
mov
loopne
push
out
sbb
inc
xor
xlat
sbb
into
mov
and
jge
repnz
stc
sub
pop
enter
pop
push
mov
adc
mov
push
fs
xor
push
shr
jo
fcmovnbe
out
lods
rcrl
ss
pop
push
dec
es
arpl
test
bound
pop
das
adc
and
arpl
in
inc
fcmove
xor
jns
jne
xor
jns
push
stc
mov
and
xchg
sbb
outsl
xor
into
out
mov
hlt
and
movsl
jmp
jmp
xorb
inc
push
shlb
ffree
and
mov
adc
xchg
cld
int3
cmp
enter
pop
sbb
out
mov
and
mov
mov
insl
test
sbb
andl
xorb
jo
pushf
sbb
push
call
pop
sbb
cmp
out
rcrl
push
testb
arpl
mov
cmp
sub
push
xchg
aad
rcll
push
and
mov
and
and
cmp
jne
mov
sbb
addr16
push
jns
lds
push
jecxz
es
cmc
out
lods
add
xor
mov
inc
ficoms
ss
ja
cmp
mov
dec
imul
jb
aaa
scas
dec
fmulp
push
mov
fcmovnu
call
ja
rorb
jmp
into
adc
inc
cmp
cli
mov
and
mov
sub
pop
pop
dec
mov
out
mov
add
mov
or
pop
je
imul
gs
pop
and
dec
add
add
pop
fs
shlb
daa
movsl
aaa
jne
lcall
inc
and
rcrb
push
mov
shll
outsl
add
mov
inc
ret
mov
ljmp
call
mov
fdivrp
adc
mov
mov
pop
imul
and
inc
aas
xor
jo
pop
add
push
push
dec
loopne
push
iret
adc
and
out
or
pop
imull
inc
pop
mov
popf
push
add
xchg
mov
add
out
neg
idiv
mov
or
outsb
stos
jae
push
idivb
test
mov
push
in
dec
adc
jne
cmp
cmpsb
mov
fisubrl
movsb
add
fidivrl
push
imul
in
negl
shll
test
mov
mov
fsubrl
or
ret
jb
fs
mov
mov
mov
rcrl
lret
inc
bound
cmpsb
mov
add
pushl
xchg
shrl
ds
push
cmp
inc
xor
fildl
and
data16
ret
pop
call
push
fiadds
add
inc
xchg
repnz
rcr
scas
mov
sub
jb
push
ljmp
fildl
lret
imul
sub
xchg
inc
mov
sbb
push
cmp
jae
dec
xchg
int
cmp
xor
add
xlat
mov
lea
addr16
and
push
cmc
sbb
mov
xor
xchg
jl
fcompl
incl
mov
les
pop
pop
mov
test
cli
jge
out
ret
xor
mov
loopne
inc
fdivp
notl
xchg
pop
and
cld
jb
cs
lods
shll
enter
repnz
mov
je
cmc
ret
mov
dec
decb
andl
xor
sbb
addr16
callw
push
je
jp
cmpsl
repnz
test
test
or
or
add
push
pop
pop
dec
rcr
xlat
mov
jp
gs
lods
dec
dec
jnp
pop
mov
sub
and
stc
jbe
dec
xchg
test
mov
aaa
mov
pop
dec
add
xor
add
jmp
or
ficoml
dec
xor
cmp
sub
mov
cmp
sbb
jno
cmc
mov
orb
inc
data16
mov
stc
mov
data16
inc
xor
movsb
sbb
add
mov
jl
lock
cli
lock
aad
out
jb
adcl
popf
push
xor
mov
cmp
and
fldl
push
mov
push
jno
test
ja
mov
sahf
stos
mov
or
xlat
outsb
xchg
mov
xor
lret
lods
lds
out
jp
push
push
mov
or
movsb
adc
stos
sub
ja
add
jne
dec
mov
cmc
imul
xorb
add
xor
outsb
add
out
jno
imul
sbb
jae
sarb
and
xchg
inc
fnstenv
jg
push
inc
int3
mov
lret
shrl
daa
ja
pop
fcmovne
sarb
jp
stc
mov
roll
jp
js
jg
loopne
push
sbb
mov
sub
sbb
cli
inc
or
jmp
cmp
cwtl
push
ret
mov
sub
push
fldl2t
shld
push
mov
xchg
ljmp
js
aam
ljmp
aaa
lcall
fnstcw
ficoms
fcmove
aam
push
fstpl
and
xlat
cmp
mov
imul
jge
push
and
pop
push
std
jmp
fstpt
pop
fldcw
lcall
std
insl
fimuls
sub
pushf
xorl
imul
push
cmpsl
pause
repz
cmpsb
and
mov
inc
nop
ljmp
clc
les
add
add
xchg
push
cmp
out
jno
flds
lds
iret
mov
mov
sahf
jae
popa
je
jl
jmp
inc
mov
xor
leave
insb
push
jns
add
cmp
pop
sub
scas
add
pop
xchg
shlb
cwtl
stos
lret
add
inc
std
data16
les
aas
pop
xor
dec
push
loopne
jl
inc
mov
xor
add
mov
mov
xor
adcb
rorl
ja
int3
or
sti
fldt
xchg
ljmp
mov
mov
mov
sbbb
push
inc
cli
mov
sub
xor
mov
movsl
mov
stc
jge
pop
mov
jp
adc
jl
fnstcw
ret
test
call
fwait
xor
and
fidivs
inc
and
notl
pop
pop
dec
mov
cmp
rcrl
jecxz
icebp
fsubs
jg
movd
in
mov
cs
mov
cs
or
cmc
mov
mov
sbb
movb
hlt
xor
cmp
clc
adc
call
fsts
loopne
int
out
ljmp
pop
sbb
push
push
xchg
sbb
test
dec
mov
and
and
cmp
xorl
outsl
sub
sbb
and
jnp
adc
sarb
pop
xchg
jns
pop
xlat
arpl
shr
cmc
sahf
popa
jle
stos
mov
and
sbb
ds
loop
adc
imul
cmp
pop
sbb
lcall
push
stc
push
arpl
xchg
and
or
jae
xlat
fcomip
rorb
fldl
stos
scas
jmp
test
sbb
dec
mov
sbb
in
dec
addr16
mov
and
adc
xor
jnp
push
mov
add
packssdw
nop
sbb
dec
xor
sub
pop
insb
pop
leave
hlt
add
sub
xor
xchg
cmp
sub
cmp
movsb
mov
mov
and
push
inc
movhps
sbb
sub
cmp
jl
sbb
xor
gs
inc
and
out
fiadds
xchg
sbb
xlat
pop
inc
int3
rcrb
cmp
clc
leave
mov
lahf
fsubp
pop
xor
enter
faddl
icebp
push
mov
or
cmp
sub
cmp
xchg
jb
add
fstps
push
push
jmp
fnsave
js
mov
cmp
fs
xorl
notb
das
xchg
mov
cmpsl
cli
ret
push
jae
lcall
and
movsl
xor
jl
sbb
ja
pushf
rclb
mov
sub
mov
dec
mov
jo
das
sbb
push
ret
xor
mov
dec
xlat
popf
cmp
cmp
pop
and
and
xchg
jae
add
xor
mov
ret
loopne
mov
test
fldt
gs
push
cmp
cmc
jne
mov
xchg
cmp
ds
je
pop
mov
loop
push
jae
push
mov
dec
adc
dec
sbb
cmpsl
fiadds
cmp
stc
fld1
push
push
loope
xchg
xchg
mov
sbb
xor
stc
out
fistpl
or
mov
sub
mov
icebp
mov
loopne
push
and
stos
mov
rolb
ror
js
pop
inc
jmp
mov
dec
inc
call
sbb
aam
mov
sbb
inc
add
adc
incb
dec
pushf
xlat
ret
popf
and
mov
mov
sub
daa
jno
movsl
mov
scas
and
jne
aad
lods
push
jbe
mov
cld
fs
adc
sub
push
xchg
pminsw
and
cs
push
dec
dec
in
les
int
lcall
fsts
add
dec
movsl
rclb
mov
cmp
mov
test
inc
mov
mov
xlat
popa
pop
call
js
mov
jmp
iret
cwtl
xchg
push
iret
and
cmp
nop
mov
pop
mov
je
jl
ret
mov
pop
sbbb
jp
popa
push
addr16
add
cmpsb
insl
les
lahf
xor
inc
and
and
insl
cs
arpl
mov
mov
xchg
lahf
push
sbb
xchg
lcall
sub
sub
dec
fildl
xchg
or
aas
push
xlat
inc
pop
testb
rorb
or
push
scas
dec
or
and
xor
mov
gs
in
xor
movsb
fisttpl
sbbb
and
test
cli
jb
lahf
bound
add
dec
js
inc
gs
sbb
pusha
stc
xor
pusha
dec
xlat
divl
popf
cmp
movsl
inc
repnz
fdecstp
xor
into
movsb
sarb
push
dec
cwtl
mov
xchg
dec
lea
or
cmp
push
sbb
xchg
scas
into
data16
fucomi
push
sbb
jge
pusha
cld
into
in
aam
mov
push
add
mov
ror
stos
mov
sub
imul
push
cmp
fwait
xchg
fisubl
dec
lahf
dec
arpl
sbb
xchg
pushf
test
mov
fisubs
push
call
dec
or
pop
mov
jl
mov
sbb
sub
addb
sbb
into
out
xor
call
mov
stc
pop
xchg
mov
mov
cwtl
in
xchg
push
or
adc
dec
test
cmp
xchg
mov
xchg
out
ficomps
push
xchg
pushf
sarb
lret
test
push
or
jno
sub
fdivs
insl
rcr
push
ja
test
jmp
enter
dec
push
cs
fcoml
add
lods
imul
sbb
test
fldl
dec
es
mov
cmp
push
jle
test
movsb
mov
dec
gs
and
addr16
lret
movsb
imul
dec
dec
fisttpl
sub
sub
push
lret
test
dec
mov
jb
jno
pop
adc
mov
int3
pop
jb
pop
add
addr16
cmpsl
imul
inc
shr
movsb
sbb
push
adc
je
pop
fiaddl
or
mov
loopne
fucompp
test
cmc
or
xlat
or
adc
stc
std
pop
icebp
lret
imul
xchg
fisubrs
addr16
xor
dec
cwtl
xor
sub
int
mov
pop
cld
pop
rorb
scas
fwait
or
add
je
or
shlb
push
inc
or
fnstcw
cmp
aas
jmp
cmpsl
mov
stos
repnz
cmp
add
push
loop
mov
jnp
ds
xlat
neg
arpl
fldt
nop
xor
inc
mov
addr16
xorl
xchg
push
xchg
std
xchg
xchg
adc
add
dec
sti
in
jp
int
jbe
cmp
mov
cli
stos
fldenv
test
adc
pop
xchg
dec
arpl
sub
xchg
into
imul
mov
cli
arpl
push
jns
mov
arpl
cmp
imul
sub
jecxz
push
dec
loop
inc
xor
push
inc
mov
sahf
lret
sub
xchg
inc
rclb
rcl
and
enter
insl
lods
stos
push
push
sti
pop
addr16
js
test
jge
pop
dec
lods
out
sub
xchg
jnp
fscale
sub
nop
icebp
dec
outsl
iret
sbb
push
sub
xchg
inc
out
jnp
mov
or
push
cmp
psubusw
adc
cltd
lock
daa
cltd
data16
into
fcmovnbe
sti
xlat
dec
and
cli
add
fidivrs
add
lahf
ds
dec
and
xchg
mov
jp
mov
jnp
add
pop
fstps
jg
cmp
shrl
mov
jns
dec
out
sbb
mov
pop
sahf
xor
jns
or
ljmp
fisttpl
mov
daa
bound
cmpsl
inc
mov
cmpsb
jnp
clc
mov
sbb
rcr
push
lods
jge
dec
adc
or
lret
daa
and
jg
sbb
mov
imul
ja
lods
pop
imul
dec
mov
push
pop
imul
pusha
fs
fwait
push
sub
xor
stc
xor
adc
push
mov
sbb
cmp
and
adc
dec
add
aaa
jns
cld
stos
iret
aam
sub
jl
xor
jne
shl
test
cmp
push
shl
dec
sarb
movsl
push
push
and
or
cmp
arpl
pop
push
jmp
pusha
push
shrb
jbe
or
mov
adc
movsb
test
lcall
inc
xor
ret
xchg
push
fstpt
sub
test
in
mov
dec
int
sbb
je
outsl
or
push
aam
jae
flds
rorl
mov
push
jo
or
cmp
cli
popf
out
push
sub
mov
fld
stos
jle
sub
mov
adc
mov
xchg
jno
lea
xchg
push
pushf
dec
adc
int3
in
scas
and
push
push
icebp
xchg
icebp
xlat
dec
xor
je
add
insb
xlat
aaa
adc
xchg
and
inc
into
ja
jmp
lret
js
jecxz
jl
sub
or
sub
sub
or
push
dec
inc
sbb
jne
xlat
inc
iret
ret
pop
imul
add
push
mov
lods
jecxz
shlb
mov
mov
fiadds
xor
scas
dec
push
sub
arpl
pop
xchg
lret
xlat
loop
aad
fstps
fs
cmp
outsl
fldcw
les
fcmovnb
pop
xor
test
leave
dec
dec
sbb
dec
fldl
dec
cmpsb
or
cmp
mov
fildll
ret
inc
dec
sbb
sub
jbe
imul
and
andl
int
mov
mov
jns
adcl
push
sub
imul
pusha
pop
cmc
push
xchg
sub
and
xlat
xor
stos
xchg
iret
mov
mov
sub
fdivr
outsb
shrb
cld
lds
ja
in
loope
shll
outsl
sub
hlt
aaa
das
outsb
std
pop
repnz
dec
outsl
mov
js
sbb
sti
cmp
leave
aam
ja
add
jns
add
and
lret
cmp
mov
xor
scas
test
push
xlat
std
ret
sar
stc
imul
gs
sub
adc
pop
xchg
adc
adc
lret
aam
push
jb
cmpsl
icebp
mov
push
jmp
pop
mov
stc
insb
xchg
xor
pusha
cld
insb
or
pushf
pop
mov
adc
mov
sub
jl
outsb
and
cltd
pop
and
shll
pop
and
mov
daa
enter
sbb
pop
push
arpl
cmp
xchg
mov
fdivrp
fucomi
add
stos
mov
sbb
jle
jbe
ret
hlt
cs
inc
push
dec
push
arpl
shr
jbe
dec
and
mov
xlat
push
sub
cli
push
cli
mov
mov
add
imul
ja
call
stos
push
jl
inc
rcrl
push
test
sbb
test
mov
push
adc
mov
and
mov
sub
test
dec
sub
inc
mov
test
mov
sub
and
and
ficomps
add
jnp
popa
loopne
rolb
pushf
movsl
xor
stos
jbe
loope
xchg
pop
xlat
enter
pop
sub
xor
loop
push
iret
jno
adc
mov
fsubs
and
inc
aas
arpl
arpl
mov
sbb
rorl
jns
aaa
pop
sub
insl
imul
fldt
fcmovnbe
int
mov
arpl
or
push
jne
push
pop
loopne
loopne
pop
stos
cs
xor
jno
js
cli
cmpsb
loop
dec
dec
and
and
bound
ficomps
add
inc
mov
mov
jl
iret
stos
std
iret
idivb
int3
cld
mov
push
mov
push
jmp
jns
aas
dec
xlat
cltd
pop
imul
test
lahf
xchg
pop
add
loop
test
insl
movsl
or
push
or
dec
fstpt
push
pop
jl
mov
mov
jbe
add
gs
outsb
xor
inc
push
and
fidivl
leave
aam
mov
xchg
imul
pop
jmp
xchg
dec
aam
jnp
clc
dec
mov
not
pop
cmp
jns
call
int
fadds
lret
addr16
stos
push
clc
or
inc
fisubs
shll
dec
imul
test
jno
add
popa
xchg
mov
addr16
enter
add
cli
ljmp
ljmp
cmp
inc
push
pop
ds
inc
adc
mov
pop
fcmovnu
mov
or
xchg
pop
mov
mov
jmp
jb
mov
jl
cmp
jae
lods
push
mov
ret
rcll
or
inc
rolb
cli
cld
gs
mov
mov
cs
cld
cmpsl
cmp
add
pop
ss
xor
lahf
cmp
outsl
pop
call
pop
jle,pt
push
dec
dec
enter
push
jne
cmp
leave
popa
gs
mov
inc
push
xchg
mov
and
jb
cmp
ds
mov
mov
sar
add
imul
ja
cmc
mov
mov
inc
dec
es
addr16
test
dec
dec
fistpl
xchg
xor
outsl
and
mov
fcmovbe
dec
jl
fsubp
sbb
inc
or
stos
pushl
push
divl
mov
mov
jnp
mov
sub
rclb
cmc
cmp
pop
test
dec
es
popf
mov
dec
addb
ljmp
xor
cmpsl
dec
stos
fdivrl
cmpsl
dec
sub
jmp
pop
cmc
lods
xlat
lret
mov
cmp
or
xchg
test
mov
xlat
sbb
dec
xchg
jb
push
jno
pop
xor
xor
and
not
mov
push
cmc
cwtl
jge
in
scas
dec
cmp
add
shrl
xlat
xor
lcall
enter
imul
cli
jp
cmp
adc
adc
jg
mov
fcomip
push
lret
test
cmp
push
iret
sti
inc
dec
cltd
subb
out
pop
adc
cmp
fiadds
push
push
inc
aaa
pop
in
out
xchg
mov
pop
fcomps
adc
jmp
jmp
and
or
movsl
cmp
fwait
sbb
xor
jecxz
jb
inc
push
mov
and
xchg
dec
in
pushf
pop
and
inc
push
xchg
cmp
mov
push
hlt
aam
mov
stc
inc
fs
lret
dec
cmp
sub
test
lods
lret
lcall
aam
nop
xor
jp
mov
push
fs
sub
lcall
enter
cmpsl
out
adc
xchg
mov
fiadds
out
fs
mov
add
lods
mul
cmp
jns
mov
xchg
cmp
cmpsl
dec
jno
scas
hlt
xor
xor
inc
push
adc
stc
incb
loop
jb
enter
dec
or
jnp
xor
sub
pop
mov
dec
inc
sub
pop
jle
push
mov
das
pop
in
dec
xor
xlat
fdivrp
jl
fiaddl
stos
pop
inc
mov
push
xlat
enter
xlat
jb
xor
addl
jg
imul
jge
mov
cmp
jmp
stos
sub
xor
neg
sahf
adc
ljmp
mov
jno
xor
mov
imul
cld
and
cltd
test
add
mov
pop
push
mov
pop
std
imul
daa
and
inc
fldt
arpl
mov
mov
sbb
mov
push
dec
dec
in
loope
mov
ja
mov
dec
xor
push
cmpsl
mov
push
stc
pop
jnp
iret
cmc
ja
and
in
and
xor
inc
test
lods
and
and
xor
dec
pop
xlat
lods
push
nop
cmp
jns
jno
fildl
test
xchg
out
movsl
mov
cmp
cmc
fsubr
jo
test
nop
cmp
jp
lret
sbb
lcall
cli
jmp
xor
dec
lods
dec
jae
inc
mov
cs
mov
pop
add
cld
repnz
mov
xchg
push
movsb
jo
add
inc
test
push
or
mov
dec
pop
xor
imul
push
jb
repnz
xlat
cmp
push
or
sbb
or
sub
mov
cmp
cli
out
push
mov
call
ret
icebp
sub
fmuls
fxch
leave
dec
ret
xor
and
xlat
in
push
inc
out
fwait
insl
inc
fldt
jge
es
mov
cmp
jae
xlat
push
or
push
dec
cmp
das
cld
lock
jne
fnsetpm(287
xchg
ds
stc
jmp
sub
and
jb
xor
call
stc
fldt
add
imul
fnstenv
int
adc
icebp
fistpl
ret
push
stc
push
jbe
xlat
cltd
shlb
add
and
pop
cmp
dec
orl
cltd
and
push
push
cmp
stos
lret
pminub
imul
sub
gs
or
sub
sbb
cmc
xor
jg
mov
mov
pop
mov
mov
jae
ret
mov
pop
fwait
add
or
pop
push
jp
pop
pushf
sbb
inc
insb
and
lods
xchg
jmp
jp
jg
inc
adc
cmp
mov
insb
push
or
cmpsl
addr16
dec
xor
imul
mov
jbe
loopne
in
push
and
jbe
mov
inc
dec
jge
dec
xor
and
fdivrp
les
out
or
jge
cmp
mov
dec
out
in
insb
jns
movsb
jnp
sbb
mov
and
fistl
and
jp
dec
pop
in
jg
fdivp
push
daa
push
sub
mov
jnp
mov
jp
or
dec
push
stos
or
mov
push
mov
stos
cmp
aas
adc
pop
push
inc
movsl
inc
insb
xlat
jne
sbb
andb
cmc
and
nop
adc
fdivrs
icebp
cmpsl
lock
sbb
push
rcl
dec
mov
inc
shlb
in
inc
bound
lds
mov
pop
jmp
xlat
fadds
shlb
popf
pop
mov
test
mov
das
fcmovnu
dec
leave
ljmp
lods
pop
xlat
ljmp
push
xor
xchg
jb
mov
jmp
mov
cmp
mov
je
pop
je
sbb
shl
sub
sarb
out
and
pop
leave
jnp
push
nop
sbb
or
sbb
jae
mov
dec
mov
xlat
jl
xchg
lods
jb
out
mov
xchg
imul
jl
std
push
dec
adc
pand
and
pop
sub
ret
push
ffree
dec
stc
jp
adc
and
stos
inc
jp
aam
es
mov
push
loope
test
push
aad
sub
pop
inc
cmp
sarb
xor
or
sbb
cmc
xlat
clc
or
xor
sbb
jp
xlat
sti
mov
xchg
xor
stc
xor
pop
insl
rolb
pop
xchg
test
pop
inc
scas
pop
pop
mov
xor
add
lretw
inc
mov
jne
imul
or
jne
popa
int
idivl
mov
dec
mov
data16
dec
fisttpl
arpl
adc
subb
daa
out
sub
sbb
mov
mov
add
ja
and
xchg
fucomi
pop
xchg
push
rcrl
rol
push
xchg
and
xorb
lahf
mov
push
and
sbb
shl
outsb
arpl
addr16
mov
mov
mov
xchg
cmc
pop
cmp
out
sub
push
imul
sbb
rorb
cltd
push
fdivrp
dec
or
dec
daa
mov
es
dec
sbb
cmp
cmp
dec
dec
stc
test
dec
mov
cld
outsl
inc
cmp
xlat
fwait
adc
add
in
mov
dec
lods
pop
inc
add
xor
mov
leave
xor
xlat
adc
mov
sub
or
mov
fisttpl
xor
sub
and
or
mov
push
stc
cwtl
xor
sub
hlt
pop
and
mov
mov
mov
jb
test
adc
inc
mov
or
mov
lret
cltd
sbb
pop
sub
push
dec
std
mov
inc
fistl
sbb
jp
jns
addr16
xor
jnp
rcrl
je
adc
add
arpl
xor
push
mov
push
xor
pop
mov
stc
mov
fcmovnb
loop
sub
in
jae
mov
pop
push
and
cmp
pop
xchg
insb
imul
negl
scas
popf
stos
mov
adc
pop
pop
sbb
int
icebp
pop
sub
lods
dec
call
xor
jl
mov
mov
popf
into
imul
adc
in
sbb
push
jmp
out
cmp
push
and
jnp
dec
popa
sub
push
xchg
test
outsl
xor
nop
pop
jns
subb
cmp
jp
pusha
insl
imul
icebp
pop
push
cmp
addl
popf
jle
stc
push
xlat
xchg
push
or
mov
mov
fnstcw
xchg
icebp
push
push
jb
jge
or
int
fiaddl
pop
nop
adc
sbb
add
push
nop
mov
rcrl
push
sub
jbe
cmp
movsb
sub
cmp
popf
rorb
inc
adc
popa
sbb
sub
sbb
ss
mov
dec
adc
shrb
push
mov
in
scas
daa
in
sub
shlb
fcmovne
or
rorb
or
stc
cmp
gs
xchg
cmp
sbb
movsl
testb
lret
jl,pn
xor
inc
mov
shrl
push
leave
xchg
cmp
and
lods
pop
sub
je
int3
pop
mov
push
outsl
xor
xchg
push
mov
loop
cmp
pop
stc
xchg
sbb
cmpsb
mov
outsl
cmp
xlat
inc
aad
subl
pop
int
push
xor
and
orb
dec
mov
adc
gs
sbb
or
loop
outsl
movsl
in
mov
jae
sbb
jne
mov
jbe
add
lret
cld
sub
jae
push
xlat
xor
xchg
sub
cmpsb
cwtl
or
adc
dec
xlat
dec
out
addr16
adc
jl
mov
addr16
xlat
xor
xchg
fistl
stos
sub
out
lret
or
mov
into
cmp
daa
sub
out
fs
inc
add
xchg
cmp
out
imul
loope
dec
scas
dec
cltd
adc
sbb
sti
xchg
arpl
inc
insl
sbb
stos
mov
push
orl
sbb
inc
adc
xorb
mov
stos
pop
mov
push
and
aaa
dec
push
roll
jle
scas
and
int3
lds
imul
pop
jmp
jnp
pop
aaa
outsl
jne
inc
in
orl
fwait
addr16
popf
shrb
pop
nop
pop
xchg
adcl
sbb
mov
jae
ljmp
into
xor
cmp
xor
xor
sbb
rorl
cli
js
stc
or
pushf
arpl
popf
xchg
bound
mov
sbb
push
jbe
xlat
aaa
sbb
fistpl
push
cmpsb
mov
sbb
imul
jae
push
add
stos
cli
loop
pop
pop
repnz
popa
jns
andl
adc
pop
dec
dec
xchg
xchg
sbb
adc
fildll
les
adc
pop
xlat
mov
mov
and
orb
pop
stos
and
cmc
xlat
mov
stos
lcall
jecxz
sub
or
in
xchg
in
fdivr
lods
rclb
and
pop
call
push
outsl
dec
insl
icebp
dec
xor
sub
pop
add
fsubl
xlat
gs
or
cmc
pop
push
pusha
aam
and
je
ficoms
ret
and
jmp
or
cli
cmp
xor
sbb
lret
icebp
pop
movsl
stos
and
daa
jmp
adc
sub
and
jnp
dec
lret
xchg
popf
inc
cmp
lcall
xor
jg
push
cwtl
sub
cld
mov
xor
outsb
adc
enter
stos
sbbl
jp
add
or
clc
jle
loopne
lea
and
pushf
sub
fldenv
jmp
cmpsl
mov
fisubl
inc
mov
push
arpl
pop
ja
mov
js
jl
nop
dec
xor
pop
pop
daa
jae
cmp
sbb
das
add
mov
mov
sbb
iret
pop
in
sub
nop
dec
mov
pop
call
imul
test
sti
inc
jno
xlat
dec
xor
cmp
out
rcr
add
sub
pop
lods
push
jecxz
pop
sarb
popf
xor
jg
push
insl
jp
xlat
dec
inc
and
call
rcrl
mov
pop
lods
push
inc
dec
push
dec
and
je
aad
mov
ss
pop
jae
fcmovnb
mov
ja
jo
stc
jbe
xlat
lret
lret
sbb
imul
push
push
pop
sub
scas
add
fbstp
and
push
lds
pusha
adc
xchg
sbb
mov
adc
dec
subl
ds
out
cmp
or
test
imul
push
rcll
icebp
pop
mov
cmp
popa
aaa
adc
xor
fisubrl
add
push
jns
faddl
dec
mov
ds
or
fsts
sbb
cmp
xlat
mov
mov
test
jns
insb
icebp
hlt
rcrb
push
xlat
sahf
fsubrs
cmp
inc
mov
int3
in
mov
xor
cmp
movsb
mov
and
dec
ljmp
xor
jne
pop
sub
loope
je
ljmp
loopne
adc
rorb
lcall
cmp
cmp
mov
xchg
mov
jae
pinsrw
or
fstp
pop
arpl
mov
push
and
cmp
mov
dec
xor
sub
stc
and
jo
cli
inc
and
xchg
dec
cs
push
clc
mov
jne
xlat
mov
dec
into
lcall
mov
cld
xlat
nop
ss
dec
dec
mov
cmp
mov
jecxz
push
cli
in
icebp
fistl
lods
xchg
icebp
pop
mov
std
sti
lahf
sbb
aaa
orb
test
push
push
and
or
out
imull
sbb
stc
dec
enter
push
in
jle
shll
or
fldenv
hlt
xchg
mov
je
sub
js
dec
xchg
sbb
pop
inc
adc
out
and
cs
mov
jnp
adc
push
mov
filds
flds
ret
call
mov
mov
jp
int
jns
mov
je
jbe
mov
popa
inc
sbb
repnz
in
aas
call
inc
rcrl
and
xchg
es
sub
sub
mov
pop
jmp
push
inc
mov
stc
and
imul
pop
sbb
add
scas
jbe
xor
arpl
add
ja
or
pop
jb
lret
addr16
mov
fdivs
test
aas
push
in
mov
into
popf
and
imul
push
insl
or
jbe
xor
cmp
adc
pushf
xlat
cmp
sbb
mov
je
or
aaa
in
xchg
nop
adc
in
mov
mov
xchg
lahf
pop
out
aad
mov
or
fdivrl
xor
imul
imulb
dec
jl
add
iret
mov
and
push
push
push
mov
jne
mov
ss
stc
inc
rcrl
xor
sbb
lcall
shrl
or
xor
mov
pop
dec
jo
sbb
loop
or
and
test
test
mov
fiaddl
add
outsl
pop
pop
mov
pop
lret
push
jp
fsubrp
rorl
push
cli
filds
jmp
and
je
jge
outsb
xor
adc
fistpl
addr16
shlb
dec
sbb
pop
or
dec
fcomi
dec
push
stc
out
or
push
xor
sbb
out
pop
adcl
ljmp
jmp
mov
arpl
loopne
lea
inc
and
pushw
xorl
xor
into
aam
xchg
imul
inc
repnz
std
insb
mov
inc
shrb
mov
inc
stos
jno
add
std
scas
adc
aas
sarl
add
push
cmp
scas
into
gs
out
xlat
push
jg
sbb
cmp
je
pop
xlat
inc
add
jp
pushf
push
xor
fistl
arpl
ret
mov
push
test
rcr
cs
jae
out
fndisi(8087
mov
mov
pop
test
xchg
adc
mov
js
adc
dec
push
aad
insb
pop
mov
lock
sti
jae
add
data16
in
dec
push
jecxz
pop
fistpl
adc
jp
pop
jmp
dec
xchg
xor
push
lret
xchg
or
cmpsl
xlat
xchg
jp
fcmovne
pop
mov
sub
cmp
sarb
pop
mov
adc
jbe
mov
mov
cmp
aaa
stc
fidivs
int
push
cmp
jl
mov
mov
sub
outsl
xchg
js
cmp
fnstsw
clc
mov
addr16
adc
stos
sti
faddp
cmpb
int3
xor
stos
add
imul
sbb
js
xlat
cmp
stos
and
sbb
ds
dec
stc
iret
mov
and
dec
mov
lock
mov
jb
aam
mov
pop
movsb
sbb
sbb
sbb
mov
xorl
push
cli
pop
icebp
cli
call
sub
cld
sbb
insl
jecxz
xor
xor
daa
popf
les
cwtl
lock
fadds
pushf
ja
jb
mov
popa
add
fisttpl
hlt
mov
mov
add
pop
jb
lret
xlat
cmp
addr16
mov
icebp
xchg
mov
popa
cmpb
push
mov
leave
push
outsl
movsb
test
negb
push
or
jmp
cmp
xchg
adc
ret
or
sbb
cmp
pop
int
and
in
add
inc
jb
pushf
les
outsl
sbb
mov
stos
pop
push
xlat
int
sub
inc
mov
int3
dec
clc
in
mov
loop
mov
fstpl
jnp
xor
aam
jb
pop
aaa
jae
test
adc
je
jg
and
dec
std
imul
sarb
ficoms
call
inc
flds
movsl
jae
jae
adc
xor
negb
xor
sti
sbb
fwait
push
xor
outsl
push
adc
jnp
push
bound
fldenv
movsb
push
mov
mov
jbe
xlat
popf
push
inc
jno
sub
cltd
xorl
pop
cmp
scas
popa
dec
sub
xchg
lock
jecxz
pop
mov
pop
js
fdivrs
pusha
pushf
sti
jl
out
adc
cwtl
mov
dec
jecxz
xchg
jge
mov
fabs
jecxz
mov
sub
sub
pop
dec
xlat
adc
aad
mov
hlt
cwtl
sub
stc
xchg
lcall
xorl
cmp
stos
jb
ficomps
pop
and
cwtl
lahf
jl
jno
loopne
mov
push
push
rorb
sbb
xchg
jno
adc
pop
cmp
mov
inc
add
popa
lods
sub
lods
cmp
int3
cmp
mov
mov
pusha
test
lret
or
movb
imul
test
in
aaa
cld
data16
add
pushf
dec
cmp
xor
pop
pop
jae
push
push
xor
jno
divl
and
mov
push
hlt
pop
fdivr
push
cmpsl
dec
jb
stc
data16
cli
ror
pop
js
pop
cmp
mov
sbb
fsts
rcl
mov
sub
xor
cmp
pop
popf
popw
jno
arpl
push
mov
call
push
sub
sbb
iret
lret
or
lret
fwait
dec
mov
jg
cmpsb
mov
pushf
flds
loope
dec
rol
mov
call
lds
sub
push
jb
xor
jno
mov
add
jne
jp
sbb
dec
gs
addr16
imul
cmp
stc
test
hlt
mov
cmp
lea
les
push
addr16
xchg
sub
shll
insb
add
sbb
ret
add
sub
mov
aad
mov
and
pop
cld
adc
adc
pushf
xlat
nop
lds
push
daa
jne
mov
or
insb
dec
dec
push
ja
cmp
or
xchg
dec
js
mov
jecxz
mov
mov
xchg
push
add
leave
jge
das
push
fldenv
jae
cmp
jne
outsb
test
cmp
push
lods
scas
jmp
jne
mov
or
dec
into
arpl
sub
aam
into
inc
cmpb
mov
add
lret
pop
lea
push
mov
stos
loop
adc
pop
shrl
dec
push
mov
addr16
jecxz
sbb
loopne
cmp
xlat
sub
and
aaa
icebp
push
popf
lahf
loope
cmp
fcmovnu
push
jb
mov
stc
jecxz
add
bnd
push
push
in
mov
or
add
repz
add
xchg
aam
mov
xor
cmp
lods
xlat
cs
pop
mov
and
and
dec
aad
repz
mov
xchg
fists
mov
xor
mov
data16
jno
adc
cmc
popf
ret
xchg
leave
pushf
add
sbbl
pop
pop
fidivl
dec
mov
fldenv
jge
dec
insb
test
outsl
jo
sbbl
aas
dec
fpatan
dec
mov
cmp
mov
push
and
mov
or
dec
xlat
and
cmp
js
adc
test
mov
sbb
mov
xlat
mov
dec
mov
out
in
fwait
nop
sbb
xor
mov
in
fistpl
lret
push
cmp
rcrl
fnclex
call
jae
out
movsb
dec
fsubl
mov
mov
xlat
pop
test
push
stos
js
std
dec
pushf
xchg
mov
outsb
lret
xor
ret
jae
mov
lock
insb
jmp
dec
test
cmp
arpl
ret
lret
scas
sbb
jg
outsl
test
or
xlat
imul
adc
xor
lea
jmp
ja
fldcw
out
lds
jle
mov
push
insb
sub
jmp
int
imul
dec
ret
movsl
xchg
xor
xor
dec
hlt
add
dec
sbb
fnstcw
add
push
adc
inc
push
add
mov
ja
jmp
inc
shll
dec
sub
xchg
insb
fbstp
inc
jle
jne
out
jge
dec
pop
cmpsb
or
in
icebp
jp
fcmovnbe
push
mov
jb
int
add
dec
mov
test
pop
mov
fs
jne
aam
or
or
pusha
push
push
hlt
pop
mov
cmp
dec
lods
xor
mov
fnstenv
xor
fcomps
push
xchg
sbb
test
adc
or
push
lahf
int3
aaa
adc
push
je
xchg
bnd
xor
xchg
cmp
sbb
or
fcompl
out
mov
inc
and
pop
adc
mov
lret
xchg
adc
imul
pop
inc
cmp
pop
push
in
xor
xchg
jae
stc
rcrb
or
cwtl
xlat
push
and
in
pop
pop
outsl
xor
jae
in
imul
jge
cmp
lret
subl
push
aaa
or
pop
push
jno
jmp
hlt
iret
jge
sahf
addr16
jb
cli
jo
sbb
push
retw
add
lcall
inc
sbb
add
xlat
scas
ja
push
sbb
in
xor
xchg
in
adc
lcall
lods
mov
pop
clc
lods
adc
cs
inc
loope
pop
shr
pop
outsl
das
pop
and
mov
push
xor
xlat
dec
and
or
mov
gs
repz
jo
xchg
jmp
add
push
push
and
xlat
jle
xor
cld
inc
pop
mov
jl
cwtl
rorl
jnp
fwait
sbb
push
pop
xchg
push
add
pop
pusha
dec
out
jge
pop
add
push
and
inc
mov
and
out
add
xor
addl
data16
jl
pop
repz
sub
lret
imul
push
xlat
int
mulb
sti
stc
cltd
lret
mov
inc
int3
jl
pop
push
pop
in
shll
stc
mov
int
in
pushf
test
pop
add
or
fldcw
cwtl
in
ljmp
aaa
pop
cmp
ja
cmp
pop
fisubs
push
or
cmp
push
js
outsl
and
les
mov
adc
mov
dec
scas
xlat
inc
push
subl
xchg
outsl
cmp
cmp
xor
cld
flds
pop
or
movsl
xlat
dec
or
test
and
inc
jg
out
xlat
or
dec
inc
cmp
mov
mov
dec
inc
mov
xchg
sbbl
subb
xor
add
enter
jge
es
iret
fcompl
pop
jle
inc
mov
pushf
pop
xchg
fcmovnu
mov
xchg
sbb
dec
movsb
push
int3
mov
push
sbb
pop
ret
lods
in
push
outsl
and
push
sub
hlt
sarb
sub
ja
or
push
push
lea
inc
popl
pop
pop
jg
daa
xor
jbe
enter
imul
es
inc
dec
xor
inc
jae
ljmp
ret
jbe
push
mov
lods
and
shll
sub
jge
lods
in
xor
adc
imul
fisttpl
aad
inc
mov
dec
push
xlat
pushf
mov
icebp
mov
inc
les
je
pop
push
fiaddl
jns
fstps
cmp
out
sub
insl
fld1
adc
pop
fdivr
xchg
push
adc
xor
loop
xchg
mov
jl
dec
dec
addr16
pop
add
mov
dec
jne
mov
adcb
aas
addr16
rcrb
in
ljmp
jno
dec
bound
loop
push
int
daa
cmp
pop
and
mov
pop
daa
jmp
add
test
inc
call
loop
dec
mov
adc
dec
jae
push
push
xlat
mov
iret
inc
pop
flds
push
xchg
out
ja
loop
dec
mov
inc
imul
push
cmpl
inc
jno
sbb
jae
push
dec
add
lock
dec
and
sub
xlat
push
xor
dec
int
cmp
mov
sub
add
nop
add
stos
ja
xchg
fs
movsl
sub
mov
and
pop
imul
sub
fsts
andb
outsl
push
mov
dec
mov
sbb
push
cmp
jl
adc
test
or
addr16
bound
nop
outsb
mov
jp
sahf
xor
sarb
push
mov
sub
data16
mov
ds
fisttpl
push
cwtl
push
jmp
dec
fldt
or
int
add
jge
xlat
divb
xchg
pop
pop
pop
mov
cld
test
push
dec
ja
lock
ret
xor
sbb
jge
sahf
pop
pusha
pop
xor
xchg
and
xlat
push
adc
mov
outsl
stos
adc
xorb
movsl
pop
xchg
adc
push
push
and
lods
cwtl
stc
push
pop
mov
pop
push
jmp
in
push
pop
idivb
xchg
lret
hlt
dec
cmc
clc
insl
xlat
ss
pop
jb
pop
mov
add
xor
imul
inc
lret
jne
cmpsl
sub
adcb
popa
jne
mov
and
stos
fwait
in
rclb
sub
fnstenv
add
ds
fwait
lds
or
jp
ret
xchg
jae
out
or
ret
adc
jne
into
push
push
mov
jno
lret
mov
addl
cmp
mov
adcb
mov
or
pop
cmp
movsb
xlat
xchg
test
xor
mov
push
mov
or
adc
and
mov
inc
push
sub
push
clc
jmp
shll
cmp
lret
fimull
aaa
adc
dec
mov
push
cwtl
frstor
push
mov
inc
inc
push
fiadds
test
lods
add
xchg
dec
lea
mov
fldt
mov
and
dec
int3
addb
push
ficomps
push
ja
cmpsb
xlat
dec
andl
xor
jmp
jmp
cld
xlat
dec
aad
pushf
adc
sub
jnp
pop
leave
into
jg
mov
icebp
adc
mov
xlat
pop
sub
sbb
fnstcw
push
in
xchg
mov
sub
pop
dec
fcoms
out
je
fwait
cmp
xlat
ja
dec
cltd
fstpt
fistpll
xor
adc
sbb
adc
divl
lret
std
inc
add
adc
std
out
xchg
xlat
inc
and
sbb
bound
cmpsl
clc
or
mov
inc
imul
sub
pop
add
out
adc
out
icebp
sub
adc
sub
cld
sbb
add
fs
xor
daa
xor
xchg
jns
je
add
fisttpl
data16
sbb
push
das
sbb
scas
in
push
outsl
jl
add
cli
rcll
push
ret
pop
lock
and
movsl
dec
pop
fldt
lods
lahf
je
fs
std
jns
test
and
cmp
cmp
xlat
lcall
add
inc
jae
and
pop
std
mov
shl
xor
and
add
faddl
movsl
cmp
dec
mov
xor
hlt
pop
jo
mov
pop
loop
and
enter
push
and
mov
push
ljmp
jno
les
inc
fldenv
iret
mov
push
sbb
push
aaa
aas
xchg
push
call
cmpsb
test
dec
jl
fldt
mov
aad
ljmp
into
xchg
sub
sub
pop
das
outsl
xchg
fnstcw
mov
clc
jno
loop
sub
nop
sub
pop
out
cmp
ja
icebp
jb
imul
sbb
jle
shrl
xlat
or
xchg
repnz
dec
arpl
pushf
std
and
inc
pop
xchg
push
ja
movsl
xchg
aam
int
pop
jne
lea
jp
push
lods
mov
mov
fnstcw
int
aas
aaa
adc
scas
jle
shll
pop
xchg
sbb
jbe
cmp
mov
jp
dec
xchg
xchg
or
push
stos
push
out
cmp
int
test
push
xchg
xor
das
jno
outsl
mov
xchg
mov
push
cmc
push
mov
push
fisttpll
xchg
stc
and
es
mov
aaa
xorb
iret
mov
mov
xchg
repz
adc
daa
in
jae
xlat
movsl
andb
test
or
ljmp
pop
pop
xchg
fidivl
sub
imul
or
aam
aas
pop
pushf
jp
loope
xlat
arpl
addr16
pop
fnstenv
mov
mov
stc
mov
xor
inc
lods
leave
in
pop
daa
push
fadds
mov
mov
and
pop
test
dec
dec
stc
and
sbb
ja
sbb
xor
bnd
push
mov
jge
pop
pop
test
or
lret
mov
clc
popf
jb
cmp
or
adc
out
sbb
mov
adc
sub
cmc
cmp
ds
lcall
jp
fidivs
stc
int3
cmp
es
cmp
mov
imul
mov
mov
xor
xor
cmpsb
ret
dec
int3
mov
fcmovne
sbb
inc
pushf
das
cmp
fimuls
shl
outsl
mov
inc
fimull
adc
cmp
push
repz
ficompl
push
stc
mov
ficomps
mov
dec
mov
imul
adc
in
adc
mov
iret
ds
push
lods
inc
xchg
mov
push
adc
ja
and
cmp
inc
mov
xor
in
test
outsb
and
lcall
popf
int
add
in
addps
clc
jecxz
dec
movsl
mov
cmp
pop
mov
xor
xor
jmp
mov
add
hlt
rdtsc
sbb
xor
mov
popf
jl
shl
xor
and
sub
sub
add
insl
mov
dec
jmp
in
mov
push
mov
aad
test
add
jp
xlat
bound
pop
daa
jl
add
xchg
fs
test
inc
cmpb
imul
xlat
jecxz
mov
dec
lods
xor
cmp
pushf
pop
in
mov
fiadds
sub
ja
fldt
jae
cmp
push
out
xchg
inc
orl
and
mov
add
loopne
push
mov
enter
pop
rolb
cmp
jae
lret
dec
arpl
jecxz
rclb
pop
sbb
dec
mov
pop
jne
test
data16
mov
cmp
push
movsb
or
clc
pop
in
ja
repz
sbb
xor
pop
test
cmp
xlat
xlat
icebp
daa
dec
or
fcomi
cmpsb
mov
subl
sbb
cmpsl
repnz
add
inc
fbld
imul
push
xor
nop
mov
fs
xlat
mov
lahf
imul
flds
lds
imul
fs
mov
cmp
mov
insb
repnz
xchg
xchg
lcall
jne
movsl
pop
adc
lods
push
pop
and
arpl
xlat
or
or
pop
fsubl
mov
pop
mov
nop
lds
mov
sub
popf
push
mov
movsb
and
repnz
dec
rcrb
cmp
or
lock
xlat
mov
pushf
leave
jne
lahf
das
stc
sarl
adc
out
jmp
cmp
loopne
cmp
pop
dec
mov
orb
cld
cltd
cmp
adc
cs
lret
push
inc
dec
movsb
stc
cwtl
adc
pop
iret
cmpsb
icebp
rcrb
sbb
mov
fnstsw
xor
insb
push
push
adc
mov
sbb
dec
popf
xchg
je
rclb
cmpsl
cmp
cmp
xor
cmpsb
fldt
or
xlat
jne
pop
jo
cmp
xchg
ret
stc
push
push
mulb
jl
imul
add
dec
or
sahf
scas
movsl
mov
sbb
orb
cmpsl
sub
stc
jbe
std
and
push
mov
or
rcrl
push
or
in
rcll
xor
fcoms
mov
xor
test
push
lret
lds
xchg
lret
cmc
xor
sbb
ds
pushf
push
xor
repz
jae
lods
test
jmp
inc
shlb
mov
mov
roll
out
xor
sbb
test
and
ret
or
out
inc
mov
jbe
xchg
sub
repz
mov
mov
xor
pop
fdiv
push
push
xlat
les
sbb
jl
lds
and
jne
in
aad
shlb
pop
jae
mov
sbb
pop
sti
mov
dec
xorl
push
xlat
rorb
push
dec
xor
repz
fists
xchg
jns
std
out
push
xchg
fadd
xor
mov
pop
in
pop
xor
xlat
mov
cs
testb
ret
imul
lahf
adc
mov
stos
jp
or
push
and
mov
rclb
dec
and
and
sbb
daa
add
dec
sbb
orb
add
lret
gs
adc
insl
jp
mov
sub
adc
and
push
mov
xor
xlat
movl
cltd
or
or
add
xor
xor
popa
lods
js
jp
stos
outsl
jae
cli
mov
adcb
sbb
inc
jl
pushl
or
int3
js
nop
jge
insl
loopne
xor
mov
add
sub
dec
mov
dec
mov
jmp
adc
xchg
pusha
xchg
loopne
jg
jl
sub
cli
negb
mov
out
cmovnp
or
repz
xchg
hlt
imul
push
mov
nop
xorb
mov
out
cmp
fwait
xor
push
sbb
or
test
in
test
out
jb
pop
cltd
add
ret
push
lcall
mov
jnp
test
ja
ja
mov
xor
jle
ret
mov
adcb
lock
sti
push
cmp
mov
dec
movsl
push
movsb
movsl
rcl
movsl
rol
fidivrl
fidivrl
clc
mov
dec
jmp
jns
or
fcompl
or
cmp
inc
int3
mov
mov
loope
scas
outsl
mov
popf
sub
jp
fldenv
lods
sbb
cmp
push
fs
outsl
mov
repnz
adc
dec
dec
push
cli
sbb
bound
add
addr16
js
mov
pop
pusha
popa
xchg
and
imul
mov
fnstcw
lcall
out
jne
es
push
dec
or
inc
pop
rorl
inc
fnstcw
dec
inc
xchg
ja
dec
not
repz
sub
dec
fwait
pop
sahf
outsl
cmp
iret
shll
push
xchg
insl
jmp
sbb
std
adc
ljmp
test
mov
out
xchg
dec
jmp
imul
sbb
mov
popa
sub
inc
lock
pop
push
sub
sbb
sti
hlt
push
and
and
pushf
push
adc
jnp
xchg
dec
fiadds
lods
jg
xlat
inc
mov
out
pop
sub
ds
jne
mov
loop
or
sbb
push
cmp
stos
rcr
push
sub
movsb
outsb
jl
xchg
dec
pop
and
ds
adc
pushf
mov
push
popf
jo
in
cltd
ljmp
and
inc
aam
popf
call
insb
cmpl
mov
jp
clc
in
es
pop
push
jmp
cmp
mov
xor
lret
push
cmp
test
pop
ret
xor
xorl
jl
jge
in
int
xchg
mov
lds
pop
int
mov
mov
int
xor
jbe
sbb
sbb
sub
add
sahf
ret
fcmovbe
imul
enter
ret
push
and
cli
pushf
sub
sub
pop
cld
into
mov
ja
das
jmp
adc
mov
or
inc
jno
xchg
dec
jg
into
xor
pop
xorl
jo
loop
push
or
pop
cmpsl
insb
add
rcl
jp
stos
push
lret
dec
loopne
or
or
movsl
out
and
inc
sub
sbb
sub
std
pop
pop
icebp
jo
or
lahf
popl
sbb
dec
cmp
jecxz
add
fcmovnbe
adc
aaa
pop
icebp
and
push
jne
xchg
cli
das
ja
imul
mov
dec
mov
and
push
jge
out
movsl
lahf
adc
ds
xchg
mov
cmp
fwait
add
xor
and
xor
shl
dec
cmp
mov
push
push
jns
cld
xor
xor
jae
mov
fisubrs
xchg
dec
cmp
push
int3
ret
pop
ret
cmpl
fldt
sbb
lods
shl
sbb
push
sbb
mov
int
adc
add
cmpsb
std
clc
daa
repnz
aaa
mov
adc
ljmp
outsl
dec
daa
pop
jo
xlat
cmp
and
jb
jbe
xlat
push
loope
push
fstpt
rolw
xchg
fs
mov
dec
pop
fdivrl
pop
iret
out
dec
pop
pop
jge
jl
pop
and
push
popf
int
pop
xchg
inc
imul
sub
xlat
dec
mov
push
mov
pop
mov
cmp
xor
ret
push
xchg
shlb
xlat
insb
jae
sbb
cmp
push
xlat
push
fldt
add
cltd
mov
fiadds
cmp
outsl
mov
add
sub
sahf
fcomi
xor
sbb
mov
fnsetpm(287
xchg
cli
sti
jne
sub
ss
inc
jae
xor
fcoml
fildl
pop
out
ljmp
scas
or
and
mov
xorb
mov
adc
std
leave
negl
inc
mov
stos
lret
inc
xor
mov
add
cltd
add
dec
pop
fnclex
fdivrp
pop
dec
imul
imul
movsl
movsb
adc
cmp
pop
dec
add
aam
sub
dec
stos
jnp
call
or
mov
nop
xor
ret
jg
pop
out
loope
jp
and
loop
push
pop
nop
add
mov
cmp
imul
enter
imul
xchg
jbe
lock
xchg
mov
push
adc
std
ss
aam
pop
popl
pop
mov
sbb
fs
dec
pop
lret
xchg
addr16
cmpb
daa
xlat
xchg
shlb
stc
or
bound
xor
mov
xor
xor
andl
jecxz
les
loope
out
pushf
daa
out
dec
jno
adc
dec
ret
popf
fs
jmp
sub
imul
fwait
test
pop
das
sub
push
ds
pushf
paddsb
xor
jae
push
icebp
mov
jnp
cwtl
push
and
dec
inc
outsl
fwait
mov
push
movl
pop
add
xor
rcll
mov
test
rol
lahf
cli
out
xrelease
gs
loop
mov
push
xchg
or
mov
xchg
ret
lcall
pop
je
jp
std
jecxz
sbb
xor
in
aad
fidivrl
call
mov
lahf
push
jle
dec
loopne
out
hlt
inc
dec
jecxz
adc
test
mov
add
gs
in
jmp
aam
movsl
lock
aad
and
add
jmp
idivl
fwait
adc
dec
xchg
cli
mov
mov
pop
xor
mov
outsl
inc
dec
xchg
dec
cld
imulb
add
jae
mov
fisttpll
sbb
test
sub
es
xlat
xor
mov
popf
xor
pop
bnd
divb
xchg
cli
cmp
xchg
cmp
mov
sbbb
mov
imul
push
cmp
out
push
dec
sbb
cwtl
xor
push
sub
insb
fbstp
mov
std
jnp
jbe
push
mov
mov
pop
lcall
jl
xor
cltd
sub
xchg
das
push
pushf
jo
or
pop
and
sub
arpl
sbb
mov
and
or
cwtl
fwait
mov
ret
fistpl
shrb
mov
imul
stos
push
mov
rcrb
cwtl
lods
loopne
adcl
mov
mov
popa
ret
pop
jle
movsl
std
mov
pop
decb
bound
sub
stos
mov
sub
stc
daa
push
push
mov
mov
and
and
jnp
pop
xchg
sbb
out
test
movsb
in
dec
fisttpl
sbb
jbe
pushf
mov
sbb
xlat
in
lcall
ljmp
dec
ljmp
hlt
adc
xor
cld
or
sub
or
push
popf
fdivrp
cmp
xor
or
je
ja
and
add
jae
notb
adc
pop
sub
mov
inc
push
jbe
je
or
sbb
jno
mov
stc
push
mov
fnstcw
cwtl
and
xlat
mul
enter
pop
mov
xlat
loop
ljmp
mov
push
mov
and
cmp
dec
sub
sbb
je
inc
jno
inc
movsl
push
mov
cs
xor
jmp
xor
jl
jns
push
bnd
mov
ret
stc
xchg
xchg
dec
jmp
call
in
idivl
shrb
xchg
add
pop
lahf
jg
mov
inc
movsb
sarl
jo
fisubs
mov
in
push
sub
pusha
inc
pushw
jecxz
cld
mov
or
xchg
pop
outsl
iret
mov
and
out
pop
arpl
jp
jnp
cmp
out
push
xchg
addr16
out
stos
mov
fstpt
xor
mov
jle
dec
jmp
push
pushf
push
dec
cli
dec
xchg
out
cld
dec
xchg
sub
jno,pt
xchg
pop
sbb
scas
jb
add
imulb
lods
mov
fstpt
jmp
das
andl
jae
sub
pop
push
cs
neg
arpl
pop
jle
pushf
orl
mov
jle
inc
imul
popf
cs
push
xchg
shll
xchg
mov
xchg
fstl
lock
mov
scas
fnstenv
xchg
pop
pop
dec
mov
mov
into
adc
inc
cmp
push
cmp
cli
inc
adc
pop
jle
xorb
imulb
push
or
pop
fnstenv
xor
sbb
cld
inc
and
shl
fs
mov
mov
mov
mov
addr16
xor
bound
mov
sub
sbb
xor
repz
jno
outsb
pop
jecxz
mov
cmp
aad
mov
xor
xlat
jb
add
jg
mov
jnp
fwait
dec
xchg
jnp
inc
mov
sbbb
call
popa
icebp
add
mul
test
in
jbe
add
mov
cltd
or
jmp
mov
test
ja
cld
aad
movsl
mov
mov
cmpsb
pop
sbb
and
xchg
addr16
out
sbb
inc
sti
ss
sub
sarb
cmp
out
sbb
mov
in
sub
xchg
cmp
pop
das
and
push
cli
or
adc
enter
and
push
xlat
aaa
fs
fdivs
pop
in
jmp
jl
int3
mov
rcrl
fs
movsb
jb
and
int3
loope
dec
cmp
jle
cmpsb
imul
cmc
mov
pusha
icebp
mov
hlt
rolb
mov
imul
sub
mov
add
notb
incl
adc
jae
xchg
fstps
movsl
jg
ljmp
xchg
xlat
cli
in
mov
and
cmp
movsl
pop
push
popa
sti
pop
addr16
add
mov
dec
and
hlt
and
cmp
sub
mov
lret
lods
movsl
iret
mov
cs
lock
inc
cld
jl
lods
xlat
adcl
int3
dec
lea
cli
sbb
nop
push
sti
xchg
fucomi
xor
sar
inc
xor
push
mov
imul
inc
inc
xchg
movsl
in
shll
arpl
rorl
gs
mov
std
xor
add
fdivs
std
dec
cmpl
pop
mov
fs
pushf
xchg
inc
std
and
add
add
add
clc
or
and
dec
dec
xor
test
les
fdivrl
lret
aad
cld
jo
sbb
jns
mov
sbb
add
or
jg
cli
js
cmp
imul
push
icebp
enter
xchg
mov
clc
push
f2xm1
adc
push
mov
stos
sbb
rcrl
push
sbb
inc
lods
mov
push
cli
mov
mov
cwtl
jge
int
push
push
repz
icebp
out
push
push
ja
jle
daa
hlt
mov
push
sub
or
cs
lcall
jg
cld
push
fcompl
add
cwtl
mov
sub
mov
add
lret
push
pop
jecxz
fdivr
dec
mov
fbstp
sub
xor
and
shrl
mov
jae
ret
mov
test
mov
shrl
addl
xchg
pop
fidivl
xor
jns
flds
cmpsb
mov
das
insl
mov
inc
cmp
xchg
std
jmp
stc
dec
and
sub
pop
adc
jb
mov
xor
scas
push
gs
int3
ss
lea
adc
das
shrb
fiadds
ds
mov
inc
push
pop
xor
sbb
enter
ds
call
dec
or
test
fidivl
mov
std
xor
shrb
adc
mov
cmp
in
xchg
pop
sub
ja
add
mov
addr16
sbb
mov
sub
cld
hlt
test
scas
std
jp
inc
xor
push
sub
stos
xorb
fistl
xor
popa
xchg
xor
leave
or
pop
icebp
pushf
adc
stos
push
pusha
sbb
orb
xchg
mov
test
dec
aam
or
mov
mov
dec
cwtl
mov
fstps
push
mov
cld
enter
sbb
pop
inc
fucomi
movsl
andb
mov
lods
sti
xor
dec
out
in
popa
cli
mov
cmp
jns
fdivs
push
pushf
repz
cmp
in
xchg
imul
les
shl
cmp
mov
outsb
mov
scas
xchg
xchg
ja
stos
or
mov
cmp
xchg
sbb
pop
push
mov
fs
sub
and
jae
or
ficoms
ss
or
nop
jle
lods
xor
or
lods
jg
sub
fcmovne
aas
mov
pushf
sub
cmp
and
stc
mov
add
or
out
repnz
dec
sub
jp
push
enter
mov
push
jns
cld
adc
bound
dec
movsl
push
dec
imul
imul
out
mov
mov
je
enter
fistl
or
ljmp
mov
jmp
xchg
arpl
es
xchg
mov
icebp
sub
sbb
and
adc
mov
inc
subl
mov
pop
js
stos
ficomps
call
lcall
sub
and
cli
sub
pop
push
push
call
jne
cmpsb
adc
xor
mov
xlat
xchg
xor
cmp
fistl
add
jmp
jg
jmp
pop
aam
cmp
lret
sub
push
test
fistl
mov
cwtl
xchg
or
mov
orl
mov
aas
stos
and
test
mov
mov
or
fdivrp
pop
pop
sub
push
xlat
dec
xor
lcall
xor
inc
jnp
lret
in
dec
cmp
rcrb
push
adc
pop
push
scas
ja
xchg
rcll
or
or
cmp
cli
jecxz
push
add
push
shll
jbe
pop
sub
mov
out
lods
mov
test
pop
cmpsl
hlt
sarb
sbb
sub
jle
pushf
mov
or
pop
xor
dec
lret
popf
jp
push
das
add
testl
mov
xor
cmp
jae
test
dec
test
aad
mov
adc
rcrl
cmp
sbb
jp
test
stos
fnstenv
mov
push
pop
lret
ret
dec
addl
daa
je
insl
mov
dec
mov
inc
push
insl
mov
jmp
xchg
out
repnz
xchg
and
jmp
and
dec
and
inc
roll
push
stos
sub
test
imul
stos
adc
fildll
movsl
sarl
mov
sbbb
add
dec
jge
push
fldenv
push
adc
int
xchg
lret
jp
xlat
fists
lcall
mov
pop
imul
add
or
test
xor
jne
pop
xlat
cmp
movsl
and
popa
and
dec
pop
xorb
sbb
push
je
mov
jno
mov
ss
cmp
jbe
mov
repnz
mov
xchg
leave
inc
mov
insl
or
xchg
imul
in
xchg
add
mov
das
sbb
or
js
stc
rcr
jmp
xor
jne,pn
xor
daa
xor
push
shrb
sub
or
xchg
xlat
imul
subb
fcmovnu
add
add
shrl
dec
fwait
jns
pop
dec
mov
jle
push
or
fnstenv
dec
std
xchg
xchg
mov
push
jg
mov
push
dec
xor
mov
repz
stos
add
jnp
clc
push
xlat
fcmovu
pop
mov
lods
lcall
push
vpmacssdd
lods
data16
pop
out
push
jecxz
xchg
cmp
fidivs
sub
jge
stos
enter
addr16
jne
jb
adc
dec
pop
inc
and
iret
jo
dec
shrb
and
fildl
cmp
xchg
andb
int
fistpll
enter
cmp
dec
popa
pop
push
ds
ss
imul
pop
fisttpl
lcall
pushf
fidivl
cmp
or
pop
dec
add
mov
enter
stc
mov
test
je
and
dec
and
fdivs
int
lods
adc
mov
inc
xchg
popa
fadd
cmp
cmpb
fldt
inc
fdivrs
lock
mov
leave
lcall
xchg
fisttps
ror
inc
repnz
lea
mov
mov
dec
push
mov
in
mov
hlt
cmp
jmp
mov
xor
sub
cs
inc
nop
mov
mov
jl
dec
stos
pop
test
es
or
xor
lods
push
je
dec
add
mov
sbb
mov
orb
xor
inc
pop
out
sub
xor
cs
mov
xor
clc
xor
jo
cmp
out
pop
cmc
pop
cmp
and
fnstcw
jge
movsl
movsl
fs
add
mov
mov
std
flds
xchg
inc
cld
aas
cs
mov
adc
out
sbb
mov
imul
push
cmp
ja
outsl
js
cmp
and
jb
rclb
sbb
in
cmpsb
cmp
test
or
adc
lods
lcall
push
arpl
sbb
cs
cmpsl
sbb
xlat
les
roll
fistl
ds
int3
lcall
mov
mov
subl
stos
std
xorb
push
xchg
imul
les
ljmp
jecxz
arpl
mov
pop
xor
xor
fnsave
adc
push
les
xlat
sub
xchg
push
mov
dec
xor
mov
push
lret
push
add
inc
ds
xchg
jmp
push
jge
lahf
jp
add
pop
icebp
xchg
xor
out
push
ja
fsts
movsb
repz
and
cs
in
test
sub
outsl
pop
jb
lret
insl
les
insb
mov
inc
pushf
push
shll
aas
pop
out
jbe
mov
push
push
adc
mov
pop
pop
dec
cmp
mov
jae
push
add
fimull
jno
mov
cmp
sbb
mov
cmc
mov
push
adc
and
push
sbb
dec
pushf
mov
outsb
sub
movsl
push
xor
push
aas
shlb
mov
inc
jp
jns
ljmpw
xsave
mov
imul
cld
into
rclb
mov
and
xorl
outsl
inc
cli
sti
xor
mov
addr16
outsb
or
cli
movsl
dec
mov
das
jecxz
jb
in
jnp
sbb
hlt
dec
xor
push
xlat
mov
add
cli
imul
mov
mov
insb
rorb
push
lret
repz
pop
dec
mov
dec
cmp
jecxz
add
mov
push
inc
popa
shl
jno
cmp
pop
ss
or
dec
dec
ja
popa
scas
fchs
xor
sub
pop
ja
push
pop
pop
mov
stos
add
cwtl
popf
push
xchg
dec
icebp
movsl
pop
leave
mov
fimuls
cmpsl
insl
cmp
dec
hlt
or
mov
int3
lcall
cmp
mov
movsl
push
xchg
sbb
inc
sub
movsb
inc
xor
pop
mov
stc
in
xchg
shrb
jmp
pop
fldenv
movsb
pop
xlat
rcrb
and
xor
mov
std
xor
xlat
lret
lcall
ljmp
gs
das
lods
dec
sbb
fildl
lds
dec
mov
mov
xchg
and
fisttpl
out
lea
sbb
xor
pushf
in
mov
push
add
jbe
subb
aam
dec
cltd
fiadds
rorb
push
pop
jg
ds
lea
sarl
adc
cmp
stc
adc
insb
test
repz
or
arpl
movsl
pop
not
cmp
and
or
xchg
cmp
iret
cli
leave
dec
loope
sahf
addr16
jae
cmpb
orl
cs
cmp
stc
mov
scas
outsb
pop
push
jmp
push
jecxz
scas
test
add
add
test
stc
and
mov
pusha
jl
ljmp
insb
outsl
mov
cmp
xchg
clc
ret
xor
adcl
pop
mov
fsubrl
sahf
sar
xlat
push
addl
mov
cld
clc
aam
test
in
in
insb
jb
inc
sub
pop
fbld
ret
inc
fildl
mov
mov
inc
js
test
xlat
xor
insb
and
xor
push
jnp
nop
lret
xor
jp
enter
add
dec
xchg
fnsetpm(287
out
xor
push
pop
imul
rolb
mov
nop
int3
jge
mov
loope
cmp
enter
test
xor
sbb
fwait
int
dec
in
fstpt
cmpsb
cmp
insb
rcr
cmp
xor
and
and
cli
imul
ds
ficomps
adc
call
add
inc
mov
out
mov
or
mov
add
mov
call
fbstp
pop
sub
push
or
jae
lock
mov
xchg
hlt
cmp
jnp
jecxz
sub
sahf
fwait
cmp
andb
enter
dec
jb
jns
jle
jae
cmp
xlat
insl
out
pop
daa
push
and
ds
xlat
notb
pop
and
daa
sub
dec
cmp
ja
cmp
ljmp
push
lahf
fidivs
imul
add
ljmp
pop
daa
cmp
dec
or
push
inc
mov
dec
mov
in
pop
jnp
rcll
inc
xor
lods
push
or
or
mov
movsb
popf
pop
mov
fcmovbe
loop
mov
sti
inc
jge
cs
xor
dec
mulb
xlat
push
nop
add
test
mov
imul
or
sub
cmp
cmp
test
cmpsl
fiadds
sbb
jle
hlt
fdivrl
ljmp
ljmp
scas
xor
push
les
add
push
imul
jbe
mov
jno
push
mov
xchg
insl
push
and
stc
mov
dec
dec
das
fstl
lods
cmp
pop
fcomps
or
scas
sub
jp
or
leave
xchg
loopne
imul
push
mov
arpl
daa
lret
push
inc
pop
movsl
negl
or
stos
or
push
mov
inc
imul
andl
mov
xor
lahf
mov
jae
xchg
xchg
cmpsl
pop
jne
xchg
lret
push
sub
outsb
push
movsb
orl
jne
mov
inc
out
xlat
lock
pop
or
and
lcall
push
rolb
adc
or
lock
sbb
jne
stos
mov
pop
loop
aaa
mov
and
jb
dec
and
xchg
fldenv
leave
aam
nop
sbb
cs
dec
sahf
push
cli
add
adc
ja
ficomps
cli
lea
ret
fstps
mov
and
std
pop
mov
or
xlat
push
cmpsb
jns
push
pop
js
adc
mov
enter
lea
dec
push
stos
loop
jg
out
add
pop
add
in
push
dec
sub
push
enter
sub
pop
adc
add
push
xchg
xor
jns
rclb
and
les
fs
xlat
vpermilps
mov
nop
rcrb
movsl
add
cmp
dec
fnstcw
ficoml
push
adc
mov
cmpl
xchg
pop
xchg
cmpsb
sbb
pop
ja
sti
test
sti
sbbl
js
xchg
repnz
test
cmp
lret
pop
adc
addr16
mov
lcall
pop
mov
xchg
push
jbe
push
inc
dec
push
rolb
lds
and
xchg
fsubrl
mov
out
jecxz
pushf
hlt
inc
sbb
sub
divb
mov
push
xor
pop
push
repnz
adc
jnp
push
and
sbb
outsl
pop
add
pop
xchg
sub
nop
cmp
cmpsl
mov
mov
jo
dec
repnz
scas
cmp
and
xchg
dec
lret
ss
dec
mov
aam
jno
mov
jns
pop
push
adc
sbb
sub
and
sar
push
xor
adc
aas
and
push
cltd
jne
pop
jmp
sub
xchg
inc
outsl
pop
pop
push
test
fadd
fcmove
js
dec
inc
jnp
dec
sub
mov
xor
mov
cmp
jge
sbb
stos
cmc
dec
pop
scas
lret
pop
ret
mov
es
gs
or
fiadds
ja
jae
xlat
mov
lock
pop
mov
shll
andl
popf
mov
imul
xchg
ja
seto
dec
ljmp
adc
xor
pop
cltd
jmp
in
inc
push
rcrb
cmc
sub
insb
mov
pusha
ret
jle
sub
mov
xchg
pop
sub
subl
fnstenv
cmp
jge
pop
hlt
bound
test
and
sti
mov
xor
pop
xor
push
rorb
scas
repz
mov
int
push
ja
xor
js
add
arpl
sub
push
xchg
mov
push
cmp
sub
lea
arpl
dec
inc
addb
inc
sbb
jnp
clc
xchg
call
add
fmul
and
xor
nop
add
data16
or
addr16
jns
dec
jmp
cmpsl
xchg
mov
xchg
or
pushf
and
and
pop
lods
jnp
dec
mov
repz
jb
bound
dec
mov
push
loope
sub
dec
push
je
jae
inc
clc
pop
fwait
clc
mov
and
xchg
mov
jmp
dec
sti
test
pop
mov
adc
mov
pop
jle
mov
ds
insb
cwtl
lods
clc
mov
lea
mov
lea
dec
iret
mov
bound
fiadds
jns
pop
jmp
add
push
xor
jne
mov
sbb
cmp
dec
xor
pusha
xor
sub
lods
mov
sub
dec
xchg
mov
fldcw
fwait
xchg
fcoml
xor
push
lock
mov
xor
cmp
mov
ss
imul
jp
add
mov
xor
lods
push
cld
loopne
fwait
sub
inc
adc
cmp
outsb
jne
jo
and
mov
dec
test
loop
mov
test
mov
xchg
std
fsub
std
sbb
rorb
mov
or
leave
and
xlat
cmc
push
xorl
sub
pop
sarl
jne
xchg
fisubrs
jbe
fnstenv
nop
cli
sub
test
cmp
jb
sbb
in
ret
adc
and
in
in
addr16
rcrb
inc
lahf
mov
cmp
inc
test
cwtl
cs
hlt
mov
xor
popa
jno
or
sbb
fcompl
jmp
pop
pop
sbb
enter
repz
pop
cmp
xor
mov
pop
adc
orl
ja
adc
fnstenv
iret
out
xchg
jg
in
jge
data16
in
mov
ljmp
push
fdivr
jno
bound
sbb
dec
inc
cli
mov
pop
sbb
mov
insb
cwtl
sub
xor
sub
jae
xor
jno
cwtl
loop
call
pop
mov
add
jmp
xchg
sub
pop
les
mov
and
pop
mov
rclb
jg
pop
mov
subl
xchg
addr16
jl
js
or
arpl
mov
push
cmp
push
mov
sbb
push
mov
rcr
mov
or
sahf
dec
cwtl
add
lds
xor
xchg
jg
and
rclb
jnp
sub
out
mov
fildl
mov
adc
std
adc
push
mov
fimuls
push
push
adc
xor
sbb
loop
fs
mov
aad
sub
cmpl
rorb
sub
mov
leave
out
hlt
add
mov
es
rcrb
jmp
add
cmp
fsubs
repnz
cmpsl
jno
loopne
or
cmpsl
cld
push
pop
fbld
mov
movsb
idiv
and
and
add
nop
xchg
xchg
or
in
jecxz
imul
mov
test
add
pop
cmc
iret
inc
xlat
pop
out
call
pushf
fidivs
stos
jmp
mov
add
es
mov
xor
jno
sbb
mov
jecxz
les
mov
negl
loop
dec
aam
sub
add
inc
fcmovne
cli
or
sub
mov
push
inc
imul
sub
scas
jb,pn
jg
jae
dec
pop
ret
push
cmp
or
mov
push
sub
jns
sbb
stc
dec
imul
and
jo
test
inc
fcmovnb
jb,pt
dec
push
add
addr16
inc
xor
or
mov
clc
insl
sub
push
addr16
in
push
push
adc
icebp
fmull
inc
addb
in
xor
outsb
add
and
jge
lret
popf
mov
mov
outsb
imul
pop
das
call
cmpsl
pop
jbe
or
and
movb
xor
loopne
jmp
lahf
adc
loope
xor
fidivrs
test
or
xor
dec
cmp
loope
lock
repnz
sbb
sub
sbbb
ds
mov
or
std
cld
lock
mov
push
imul
outsb
das
ret
pop
and
add
add
stos
push
cmp
push
mov
xchg
ret
sub
add
ljmp
xchg
icebp
add
stc
sub
and
adc
and
pop
push
stc
or
pop
out
inc
imul
and
dec
fisubrl
add
int
pop
cmpsl
jne
sbb
das
jo
shll
pop
cmp
xor
adc
std
ret
sbb
sbb
xlat
cmp
sub
cmpsl
sbb
mov
fwait
xor
mov
or
cltd
cmp
lret
mov
flds
leave
cli
test
movsb
loop
ja
pop
and
sub
in
mov
xlat
mov
and
pop
pop
mov
mov
pop
push
push
dec
xlat
pop
push
add
sbb
rcll
sbb
leave
cmpsb
adc
mov
dec
jns
cmp
jecxz
lcall
int
mov
scas
push
cli
xor
sbb
inc
cltd
cltd
rcrb
jns
pop
mov
or
push
xor
sahf
jl
cmp
jo
jecxz
jae
adc
push
divl
mov
aad
jp
jmp
imul
stc
xlat
fmull
mov
fwait
mov
int
and
pushf
adc
inc
dec
cmp
cltd
adc
int
cmp
xlat
mov
jns
jns,pt
mov
sbb
cs
or
outsb
jae
stc
fidivs
fadds
fistl
jo
push
mov
test
fcoml
pusha
mov
xchg
mov
ficompl
mov
xchg
mov
subb
adc
sbb
jecxz
cld
shl
sti
xchg
jnp
xchg
dec
or
push
inc
jg
mov
inc
popf
sbb
cmpsb
mov
bound
jb
stc
pop
xor
in
imull
xchg
jp
xor
xor
push
dec
test
mov
cmp
sub
jp
add
dec
pop
xor
jmp
cmp
pop
jg
mov
jmp
lds
test
imul
add
int3
aas
inc
sbb
inc
loop
loop
fsubrl
ja
xchg
and
push
mov
arpl
out
or
aam
lcall
test
int
gs
sarl
outsl
pushf
dec
mov
cld
mov
jno
xor
pop
movsl
jae
add
sub
leave
cli
add
mov
rorb
mov
add
or
sti
fcoms
jo
cmp
dec
sub
aad
and
int
stos
enter
js
push
dec
imul
in
push
or
xlat
fiadds
ljmp
mov
cmp
sbb
pop
stc
sub
pop
sub
add
mov
popa
js
lret
jae
out
xor
pop
pop
mov
cmp
xor
lds
dec
jge
or
out
cmp
cmp
sahf
outsb
shlb
sbb
push
mov
jae
icebp
jno
and
jbe
out
std
xchg
daa
nop
loopne
addb
aam
pop
ret
mov
pop
xor
xor
out
lods
xchg
mov
ret
and
imul
lock
or
push
sbb
repnz
jns
shrb
test
outsb
cmpsl
fidivrs
pop
cmp
dec
dec
test
dec
mov
sahf
fldcw
sbb
stos
js
xor
mov
mov
cmc
xlat
scas
clc
loopne
rcrl
cmp
dec
mov
mov
mov
ja
ja
pop
adc
out
jg
imul
into
out
mov
inc
push
pop
mov
popa
jmp
add
cli
ds
pop
sbb
jecxz
xor
jl
jne
dec
mov
cmpsl
fisubrs
rcll
nop
jl
sbb
shrb
and
push
mov
dec
jns
xor
sbb
or
jmp
mov
rclb
loope
jne
xlat
mov
dec
in
push
add
std
fs
xor
push
adc
xchg
stc
push
mov
out
sub
rcll
stc
jge
jbe
sbb
lea
pop
xlat
pushf
mov
fdivrl
dec
mov
inc
je
cmp
insb
adc
mov
dec
imul
imul
shlb
pushf
mov
stos
int3
insl
jns
push
or
sub
xlat
cmp
adc
mov
int3
xchg
iret
pop
xchg
nop
jb
xor
sub
mov
inc
dec
push
test
insl
or
cmp
jno
test
adc
fwait
popl
lea
xor
xlat
aam
arpl
push
adc
adc
pushf
adc
sbb
xor
pop
pusha
or
je
jg
aas
pop
xchg
xor
mov
dec
out
inc
push
lock
fstpl
pop
fld
inc
jo
or
aam
test
iret
sub
pop
push
pop
ficomps
sbb
fsts
mov
jl
xchg
mov
xorb
in
dec
pop
test
xchg
movsl
std
jp
fyl2x
ja
push
push
xlat
ss
ja
jp
aad
push
pop
mov
cmp
pop
dec
in
jno
inc
cmp
dec
xlat
repz
sti
loope
test
jo
mov
cmp
cld
ficomps
test
addb
push
movl
jo
xchg
test
aam
inc
js
subb
dec
jne
mov
add
pop
mov
jg
aaa
xchg
mov
pop
jg
rorl
dec
mov
and
sarl
in
cld
ficomps
hlt
sbb
pushf
xor
and
jmp
stos
shr
jne
mov
or
lret
fwait
jmp
pop
aaa
and
cmp
dec
add
sbb
stos
pop
movsl
sub
jge
out
or
cmc
sbb
mov
mov
adc
jl
pop
inc
push
sbb
dec
stc
call
sub
push
mov
adc
sbb
or
xchg
fnop
fwait
xchg
inc
and
xchg
dec
fucomi
jmp
mov
or
sub
mov
les
sub
inc
fnstenv
test
cld
leave
lods
xor
and
push
push
pop
andl
sub
xor
mov
or
sub
ror
push
lods
jb
inc
xlat
push
sub
test
imul
subb
int3
sbb
fs
les
sti
cmpb
adc
jae
sbb
arpl
add
outsl
dec
mov
mov
pop
and
jge
fwait
push
adc
jp
mov
loop
xlat
mov
rcrb
inc
add
pop
adc
fs
sub
stos
pushf
lcall
or
fidivrl
cld
jecxz
inc
jns
imul
xchg
sbb
inc
and
jl
or
sbb
inc
jns
inc
divl
sbb
dec
stc
sar
flds
imul
pop
pop
mov
mov
push
mov
cld
sub
shlb
jge
mov
cs
and
mov
inc
loope
fldl
push
and
popf
shll
mov
and
pushf
fstpl
subb
sbb
dec
dec
dec
imul
repz
call
fnop
xlat
jge
testl
js
and
mov
gs
lods
dec
movb
push
mov
stc
flds
repz
pop
ja
pushf
cmc
sarl
dec
mov
subl
push
fsub
dec
inc
dec
imul
mov
mov
mov
cwtl
mov
push
imul
je
cmp
xor
shlb
loop
hlt
xlat
fcompl
call
lea
fisubrl
cwtl
add
adc
jge
pop
and
mov
cwtl
enter
dec
xor
fistl
jns
ret
add
pop
push
mov
push
sub
enter
aam
pushf
aas
popa
inc
clc
add
xchg
cld
jp
or
addl
aas
push
rcr
mov
nop
hlt
inc
out
cmpsl
sbb
mov
in
in
xchg
jne
adc
in
jno
add
mov
sub
fwait
pop
jns
jae
fs
mov
iret
push
sub
pushf
jmp
xorb
out
es
insl
and
inc
ja
cmpsl
inc
fs
dec
std
add
in
sub
cmpl
adc
repz
mov
inc
push
test
jp,pn
fistpl
add
pop
sbb
aad
aaa
shrb
add
imul
ret
xchg
mov
adc
inc
jp
cmp
gs
fistpll
stos
push
stos
rcrl
push
stc
xor
daa
push
movsl
insb
das
push
mov
xchg
imul
xor
add
push
fcmovbe
adc
jne
xor
sbb
sbb
pop
pop
dec
ljmp
iret
cmp
repz
xlat
add
or
pop
mov
scas
or
adc
mov
mov
dec
leave
inc
andb
aas
std
sub
mov
ja
sbb
in
or
dec
into
ret
add
insl
ficoml
inc
lret
sub
lods
mov
mov
lret
xor
hlt
hlt
loop
mov
xlat
mov
aaa
cmp
cmp
cs
out
mov
sahf
dec
adc
in
or
icebp
jno
cmpsl
xchg
add
xor
sub
push
movsb
lcall
ss
ror
jle
dec
mov
sub
dec
cmp
xor
fcmovnb
xor
insl
int3
std
push
xor
and
cs
jbe
inc
ret
dec
aaa
mov
je
jne
fs
adc
lret
lret
pop
imul
or
std
mov
inc
nop
in
mov
stos
sti
out
sbbb
inc
dec
addr16
fiaddl
jle
cmp
xor
mov
mov
in
daa
insb
loopne
ljmp
in
or
int3
out
pop
jle
dec
push
cmp
mov
jb
int
xor
icebp
sub
scas
neg
outsl
add
mov
sbb
out
and
andb
lds
leave
and
out
sbb
cli
dec
dec
out
mov
push
xor
mov
std
jmp
mov
sbb
jae
fcom
cmp
inc
push
or
mov
push
sbb
dec
jmp
jge
pop
xchg
lahf
xor
add
cmp
sub
add
jns
xor
cmp
mov
xchg
add
fldt
mov
jg
hlt
or
mov
arpl
stos
cwtl
jl
or
or
arpl
xchg
clc
outsl
mov
inc
cmpb
cmpsb
adc
adc
xchg
pop
xchg
test
pop
dec
hlt
ja
fstps
sub
pop
xchg
mov
cmp
jge
fincstp
fnstenv
xchg
repnz
dec
sbb
ffreep
sub
clc
inc
sti
ja
ret
xor
mov
mov
push
push
sbb
xor
test
outsl
arpl
out
and
xor
movsb
imul
ss
cmp
iret
pop
jno
loope
jmp
cmp
xorb
xor
and
insl
outsl
sahf
das
repnz
add
jecxz
leave
or
dec
sub
jl
jne
movl
dec
dec
jno
mov
jg
ret
jns
pop
inc
sti
dec
dec
test
out
scas
dec
or
incl
xor
mov
or
mov
lock
js
aas
gs
dec
outsl
jno
sbb
pop
sub
push
popa
mov
adc
mov
mov
fs
sub
scas
xchg
mov
je
jns
xchg
mov
adc
xchg
mov
mov
insl
xor
sub
and
mov
mov
jle
stc
mov
cmc
jp
xchg
push
in
adc
push
or
ljmp
mov
jnp
and
adc
mov
stos
sub
push
cs
sbb
mov
enter
mov
sub
or
lock
cmpsl
lcall
or
sub
and
test
sub
cmpsb
jmp
xchg
fnstenv
xchg
daa
js
pop
adc
lret
sub
sub
push
pop
mov
jge
pop
je
or
sbb
leave
dec
lret
icebp
pop
call
clc
jb
jae
dec
push
sub
pop
pop
jns
add
rorl
cmp
lret
sub
xor
nop
das
cld
pop
jae
adc
sbb
jg
xorb
int
xlat
mov
js
in
dec
shr
cld
or
push
xor
lahf
repz
jbe
stc
into
in
hlt
test
int
dec
loop
fsts
js
mov
cmp
cmpb
cld
scas
mov
push
scas
mov
xor
movsb
or
sub
das
out
adc
cwtl
mov
pop
ljmp
scas
inc
ret
ret
fldenv
mov
push
pusha
pop
xchg
stc
inc
fistl
movsb
les
push
mov
daa
fdivrl
xor
repnz
dec
call
add
sbb
orl
dec
pop
jne
push
cli
cld
sub
mov
ret
xor
adc
rorb
cmp
out
daa
jns
add
lret
mov
xlat
mov
arpl
lcall
notb
jae
adcl
push
rcll
add
sbb
icebp
sub
sbb
inc
jecxz
sbb
aaa
lcall
cmp
sbbl
xchg
in
imul
add
mov
arpl
push
mov
arpl
shll
cli
lret
push
mov
bound
push
jg
mov
jl
mov
add
cmp
mov
stos
inc
repz
or
xlat
adc
fdivl
cmp
in
jae
test
js
arpl
mov
call
or
add
pop
push
iret
cmpsl
xchg
ret
mov
andb
aaa
and
out
lea
je
setns
movsb
and
mov
sub
je
out
movsl
nop
sbb
fdivrs
sub
std
or
add
ret
push
or
jbe
or
mov
outsl
pop
pcmpgtw
fcmovne
rorl
xorb
sub
insb
adc
push
xlat
in
sar
orl
xchg
sub
jae
pop
fidivrs
mov
cmp
imul
push
jae
xchg
ja
mov
cmpsl
jmp
fs
cmp
mov
mov
and
sbb
xor
es
add
out
aaa
ja
stos
rorl
fisttpl
jp
or
pushf
xlat
mov
lock
sti
sub
test
loop
xor
or
lahf
and
jbe
out
aad
jl
gs
add
lods
int3
and
xchg
xor
add
or
jns
fchs
call
stc
incb
mov
mov
cmp
pop
jne
adc
scas
les
pop
push
add
fwait
lods
and
cmp
stc
jp
fcmovnb
adc
xchg
cmp
sbb
cs
aas
add
jp
add
mov
mov
stc
arpl
push
inc
fidivl
iret
or
addr16
adcb
xor
out
mov
push
imul
ja
icebp
cmpsl
arpl
mov
mov
mov
and
outsb
dec
pop
adc
or
sahf
push
fistpl
or
addr16
pushf
jae
push
dec
mov
sbb
dec
clc
jge
jae
sar
stc
fisttpl
nop
cwtl
push
push
add
fstpl
and
loope
jmp
ret
cmp
mov
cld
mov
or
insl
ds
cmp
imul
imul
popf
dec
cmp
xlat
loope
dec
pop
prefetch
or
push
add
cli
test
jmp
push
and
sbb
jns
lret
das
cmpsl
mov
fnclex
cli
int
cs
sub
mov
pop
pop
cs
xchg
out
xchg
outsl
scas
dec
movsb
push
adc
adc
add
jnp
mov
adc
enter
test
cmpsl
scas
fdivr
movsb
pop
imul
dec
pop
pop
test
enter
pop
loopne
test
lods
pop
out
repnz
orl
fistpl
ss
jae
cmp
pop
andb
and
mov
push
push
stc
fidivrs
xlat
sub
dec
sub
adc
jge
and
adc
sub
xor
test
fmulp
cmpsb
adc
jb
popa
leave
jle
inc
push
sub
call
repz
pop
dec
or
les
pop
mov
push
pop
pushf
or
pop
adc
test
push
inc
adc
dec
push
movsb
inc
adc
ljmp
pop
push
pushl
pushl
test
lock
xor
adc
or
in
in
out
ds
sub
jp
dec
out
sbb
push
test
push
aaa
sti
fcmovnu
pop
xor
push
cmp
pop
sub
sbb
sub
rorb
repnz
addr16
push
fwait
stos
adc
mov
mov
imul
xchg
sbb
ds
test
dec
pop
xchg
xchg
xchg
jl
bound
fnstcw
std
adc
mov
dec
cmp
sub
or
mov
mov
or
fldenv
push
dec
and
mov
pop
pop
jae
cli
sarl
add
cld
pop
pop
jne
popa
cmp
jae
push
cmp
sbb
ljmp
jmp
dec
orb
fisttps
mov
ds
cmp
fcmovne
sbb
sbb
jg
orb
jle
mov
sbb
mov
dec
movsl
pmulhw
inc
fisubs
jmp
cli
jbe
sbbl
lret
xchg
or
cmpl
roll
ljmp
pushf
mov
inc
push
fsubrl
sbb
ds
and
ss
mov
add
jle
push
mov
xor
xchg
lock
pop
outsl
enter
out
pop
push
in
shrl
ljmp
adc
popa
sti
dec
xor
inc
dec
mov
pop
mov
fisubs
cli
fnstenv
push
test
in
addr16
sub
jnp
mulb
push
insb
or
mov
mov
and
fsts
sarl
jge
sbb
sub
add
stc
jecxz
push
mov
ret
mov
insl
push
inc
fidivs
jne
enter
xlat
sbb
sub
fistl
es
and
jbe
sbb
fsubs
imul
aad
sbb
insl
repz
mov
mov
in
adc
add
jg
cmp
test
pop
sbb
inc
dec
out
imul
sbb
popa
xor
or
dec
stos
ror
inc
std
mov
mov
mov
cmc
les
mov
and
in
push
cmp
push
ret
or
xlat
sub
scas
and
cmp
imul
xor
fdivs
repz
mov
das
insb
xor
std
andb
cld
jae
mov
mov
data16
push
xor
in
cmpsl
mov
gs
xchg
ret
cmp
and
clc
dec
lahf
sbb
push
jmp
fstpt
mov
lea
cmp
jecxz
and
incl
dec
std
inc
addr16
mov
push
test
xlat
ret
inc
push
rcrb
add
lcall
and
cmp
sub
sahf
mov
and
cld
inc
adc
add
in
mov
sub
or
enter
fisubl
ret
ljmp
movsl
jp
enter
icebp
rcrb
sub
inc
or
xchg
inc
inc
jmp
sbb
jne
sbb
mov
sbb
and
fcom
cwtl
fildl
push
neg
mov
add
dec
or
xor
mov
insl
fildl
inc
mov
or
ja
pop
std
sarl
aad
xchg
push
xor
das
shrl
sbb
lret
pop
mov
cmpsl
mov
daa
mov
mov
pop
and
addr16
cli
xlat
push
inc
cmp
rorb
push
mov
jp
jbe
inc
or
insb
sarl
push
push
mov
mov
cmp
xchg
push
pop
movsb
pop
mov
dec
aam
imul
mov
out
and
in
xchg
test
daa
movsl
jl
cli
lds
lods
and
ljmp
jns
pop
jg
jg
add
xor
cwtl
adcb
pop
mov
or
push
in
mov
imul
popa
and
shr
pop
cmp
pop
mov
int3
pop
imul
or
cmpsb
shll
jge
and
sub
insb
mov
xchg
jle
rol
out
cmpsl
or
cs
xor
inc
inc
pop
cld
dec
sbbb
aas
hlt
leave
js
fstpt
mov
jnp
aam
pop
mov
inc
out
imul
lret
mov
das
test
test
imul
sub
ljmp
mov
pop
je
rcr
test
inc
push
js
xor
test
test
clc
cmpsl
push
xchg
xchg
jae
xlat
fincstp
mov
testl
bound
cmp
imul
scas
and
adc
lahf
sbb
cmpl
xchg
repnz
imul
jnp
jl
js
nop
sbb
ret
popa
inc
test
jne
mov
repz
lods
push
xor
xlat
push
popa
outsl
lcall
push
sub
iretw
addb
std
idivb
pop
rcr
test
xchg
sbb
sub
push
jle
mov
jns
repnz
sub
sbb
mov
pop
rcl
lods
cmp
cmc
or
xlat
jle
stos
jmp
or
cmp
inc
pop
mov
or
rcl
push
dec
lret
xor
shlb
hlt
add
into
aaa
cmp
jge
aad
je
clc
or
cmp
iret
stos
mov
jbe
lret
jg
adc
dec
push
mov
or
sbb
sub
xlat
in
mov
sub
push
sub
hlt
into
or
or
cmp
sub
and
mov
push
lods
incb
pop
or
or
pop
xchg
stos
xor
fcmovne
pop
in
cmp
in
mov
outsl
sbb
fcomi
sar
jp
mov
out
or
int3
int
pop
mov
mov
ds
nop
pop
sarl
add
push
sbb
and
or
jo
pop
xor
arpl
rcr
adc
push
xor
sar
fistl
pop
xor
xor
loopne
mov
xchg
jae
rcr
cwtl
jp
xchg
push
sarb
jne
aas
sbb
mov
lods
mov
popf
leave
ret
int3
iret
arpl
test
int
rcrb
pushf
dec
pop
sbb
push
movsb
imull
js
aam
mov
xlat
out
test
pushf
fidivrs
dec
jns
fcoms
dec
out
push
dec
imul
stos
jae
cwtl
inc
subl
jl
in
add
ja
add
loopne
ret
mov
clc
dec
repnz
dec
fidivrl
or
pop
and
jb
sbb
jae
sahf
xchg
push
insl
xchg
orl
and
and
jg
std
in
inc
push
pop
adc
adc
rol
cwtl
jbe
pop
ss
and
fistl
fsts
lods
shl
hlt
lahf
sbb
jbe
aas
mov
push
imul
mov
call
cmpsb
dec
test
out
in
test
mov
rcll
fimuls
inc
movsl
insb
je
mov
fcmovnb
stos
orl
out
int3
mov
push
cwtl
pop
push
xorl
ljmp
orl
inc
dec
inc
fs
xor
insl
nop
call
cli
mov
mov
gs
ficoms
xor
setg
xchg
arpl
aam
xchg
fiaddl
inc
insb
pop
mov
outsl
mov
in
add
mov
xchg
jnp
fldenv
sub
sbb
arpl
jb
lea
mov
outsb
aas
xchg
jne
xor
jbe
fstpt
lds
orl
xchg
push
cmp
mov
xlat
push
testl
cmp
scas
cmp
movsl
mov
push
outsb
pop
ret
ja
xor
pop
fwait
scas
sbb
mov
ljmp
jbe
dec
dec
or
imul
jae
inc
addr16
adc
cmp
jae
and
loopne
push
sbb
mov
stos
aas
mov
mov
jp
cmp
mov
jo
int3
js
push
add
dec
psraw
mov
inc
sbb
ret
and
xchg
loopne
mov
sub
imul
mov
aad
popf
jae
pop
push
adc
cmp
test
xchg
cmp
fwait
pop
sbb
jne
lcall
xchg
nop
jmp
outsl
ret
mov
push
dec
icebp
or
int3
out
cmp
leave
push
out
cmp
out
mov
adc
fildl
test
inc
dec
out
add
or
sub
rcrb
stc
rcrl
cmp
pop
add
sbb
scas
pop
adc
es
lret
push
jmp
stos
push
xchg
pop
lods
cli
xor
mov
dec
test
fcoms
mov
push
jnp
pop
fcmovnbe
aaa
mov
jae
pop
insl
push
pop
mov
dec
add
mov
fcompl
jno
add
push
fsts
mov
rcrb
add
xlat
jno
xor
popa
fs
mov
jecxz
mov
ret
loope
or
out
add
jecxz
sub
push
add
and
es
enter
and
loopne
out
jnp
adc
xchg
dec
dec
fistl
outsl
insb
jno
test
in
cmpsl
xlat
jne
mov
loopne
fsubrs
jp
stc
xchg
ja
sub
dec
jle
cmp
flds
ret
loope
jne
sub
and
addr16
inc
cmp
cmp
scas
xor
js
mov
insb
pop
and
fmuls
xchg
jno
cwtl
les
aaa
dec
mov
and
sbb
sub
jae
fsqrt
aad
bound
pop
mov
push
lahf
fwait
cmp
mov
jle
leave
aas
and
cmpsl
arpl
test
cs
dec
clc
xchg
mov
mov
and
int
cli
in
lret
or
ret
jp
jo
dec
decb
clc
addr16
cmp
enter
inc
pop
xchg
popf
mov
mov
jo
push
mov
mov
pop
mov
pop
xchg
test
mov
push
mov
gs
fcomps
and
ds
sbb
fsubl
fldenv
mov
out
pop
pop
cmp
pop
xlat
lea
pop
mov
fidivs
sub
incl
jae
xchg
jno
fldenv
xor
sub
jp
add
push
mov
sahf
mov
jo
addr16
jnp
cmp
lcall
xor
loop
pop
mov
sbb
mov
je
xchg
mov
test
fildl
scas
fcompl
sub
push
in
or
or
dec
and
xorb
cmp
adc
stc
mov
stc
das
pop
call
sub
rcll
pop
xchg
test
inc
jbe
cmp
xor
and
jp
push
movsb
out
je,pn
add
pop
lock
and
add
pop
imul
andb
out
mov
sbb
mov
mov
xor
xchg
add
cmpsb
mov
push
std
push
jle
addb
dec
mov
push
jae
jg
mov
push
les
inc
pop
addr16
fistpl
shlb
mov
stc
out
leave
adc
fdivrl
or
lret
fldt
and
dec
push
fstpt
stc
or
insb
add
jnp
dec
pop
lea
xlat
cmp
cmp
call
cld
add
xor
push
push
xchg
stos
call
iret
cmp
dec
inc
in
jg
shll
mov
push
pop
pop
rorl
into
sbb
mov
mov
xchg
xor
mov
cmp
push
out
imul
ficoms
add
mov
jge
xchg
pop
cmp
nop
and
jb
fmull
xor
fsubl
lcall
and
test
cmp
xlat
pushf
insb
movsb
jbe
cmpsb
icebp
mov
loop
fidivrl
push
inc
pop
cmpsl
dec
std
ret
or
das
stos
inc
je
sbb
xorb
mov
fs
mov
aaa
cmp
add
daa
pop
lret
jle
xlat
aam
lods
inc
push
pusha
or
or
xchg
pop
cli
adc
out
sbb
jno
cmp
cs
jnp
lahf
fistl
pop
stos
imul
pusha
arpl
sub
and
rorb
in
and
mov
insb
dec
xorl
inc
push
fwait
pop
inc
xchg
enter
push
cmpl
pusha
gs
xor
mov
pop
stos
mov
mov
jo
fsts
je
test
out
daa
xchg
popf
sarl
or
and
fstps
rol
cmp
jno
std
lock
push
inc
push
call
sub
mov
or
ljmp
fcoms
cmp
js
mov
xor
or
xchg
test
cmp
scas
int
nop
rcll
dec
cltd
arpl
fidivs
arpl
sub
fsubrl
inc
into
mov
loope
std
xor
or
mov
xchg
cmp
cmc
lods
and
mov
cmp
fisttpl
mov
or
ss
inc
sub
adc
iret
stos
sbb
cmp
fistpl
cs
jmp
dec
sahf
cli
adc
in
movsl
mov
cmp
push
out
mov
stc
shlb
test
cmp
mov
addr16
aad
js
testl
jmp
cwtl
jbe
ret
out
mov
mov
imul
fists
mov
xor
stos
aam
push
push
pop
daa
jnp
inc
gs
xorb
shr
stos
imul
mov
pop
js
xchg
subb
or
cmpsb
call
xchg
mov
call
lods
mov
xchg
mov
cli
insl
or
dec
outsb
push
inc
jne
xchg
mov
ret
mov
and
mov
ja
shlb
pop
jbe
fdivs
fdivs
cmp
or
sbb
mov
mov
outsl
xchg
xchg
jns
sub
xchg
dec
mov
xchg
and
xor
mov
and
not
stos
test
hlt
jge
fsts
jle
movsb
push
sub
xlat
xchg
lock
dec
push
mov
sub
jns
mov
cwtl
pop
repnz
fcmovnu
and
aam
xchg
rorl
sti
sbb
and
mov
jp
aas
lods
add
xlat
dec
stos
nop
jecxz
lea
push
stc
xor
test
jmp
pop
jnp
sbb
adc
or
int
data16
sarb
push
rcll
fdivrp
mull
lods
jb
and
sub
lret
out
and
jge
pop
sub
arpl
or
or
fildl
fstl
dec
xchg
cs
test
dec
xor
out
mov
mov
push
or
stos
fdiv
enter
scas
jns
cmp
dec
and
cmp
mov
or
test
mov
add
inc
cmp
xchg
aas
fldenv
inc
xorl
lret
sbb
push
aas
jl
xor
inc
sub
dec
jo
pop
lcall
or
lds
sbb
push
in
and
mov
scas
mov
repnz
ret
mov
xchg
leave
daa
loop
lods
iret
jne
or
cli
das
popa
ja
or
pushf
mov
push
push
jmp
mov
jle
add
adc
xor
daa
xor
xchg
xlat
xor
std
std
mov
fst
in
lcall
into
sub
imul
cmp
testl
and
jmp
mov
push
xlat
sbb
add
mov
push
fisttpl
and
repnz
stc
mov
mov
iret
pop
sbb
sub
in
sub
jne
icebp
push
popf
add
pop
inc
pushf
mov
dec
add
lods
adc
and
jae
icebp
cmp
stos
sbb
ret
jb
add
mov
fisubrl
sbb
xchg
mov
inc
jmp
xchg
mov
mov
ss
pop
pushl
out
mov
adc
fldt
test
push
and
xorb
sahf
adc
sub
mov
add
daa
icebp
insl
imul
gs
adc
jecxz
xchg
sti
inc
or
ret
outsb
jl
add
or
into
cmp
imul
xchg
movsl
dec
mov
sub
and
das
divl
mov
xadd
sub
cmp
lret
test
pop
stc
lret
aad
push
and
cmp
rcr
inc
mov
mov
sub
jle
push
dec
cmc
push
mov
dec
fstpt
lcall
or
cmpsb
std
xchg
or
dec
shl
pop
pop
lret
imul
pop
cmp
adc
adc
pop
mov
mov
inc
pop
inc
cs
push
sub
pop
movsb
cmp
pop
mov
xchg
and
xor
mov
dec
scas
push
loop
out
test
ret
inc
push
xchg
repnz
and
xchg
jecxz
add
rcll
in
cmp
scas
or
xchg
xchg
or
push
dec
jns
sbb
aaa
stos
xor
sbb
loopne
xchg
inc
dec
xlat
cmp
dec
and
mov
push
je
gs
dec
jae
or
push
and
ficoml
jo
outsb
cmp
out
arpl
inc
sti
inc
cmpsb
jecxz
lds
xchg
jbe
xlat
fcmovnu
xorl
andb
sub
and
pop
mov
popa
xor
xchg
mov
add
outsl
jecxz
testl
lret
rcr
stos
and
cmp
aam
outsl
subb
jne
pusha
add
pop
xchg
cli
push
mov
stc
cld
sub
fistpl
push
les
cmpsb
cli
jge
icebp
pop
out
ss
rcrb
or
out
mov
repnz
dec
les
int3
fcmovnu
cmpsb
das
rcl
mov
jns
cmp
dec
in
mov
mov
ret
inc
jae
sahf
fsubl
aam
fcomi
shlb
push
cmp
inc
xorl
aas
mov
mov
dec
jnp
rolb
and
push
fdivrs
mov
sbb
sub
pop
cmp
xor
xchg
xor
aad
pavgw
ss
dec
xor
das
mulb
roll
cs
negb
add
int
nop
cmc
imul
mov
inc
or
mov
rolb
jb
xchg
orl
in
cs
jno
or
lcall
fsts
sti
pop
lret
push
xlat
js
notl
mov
mov
xor
push
daa
cmp
hlt
jno
fucomi
sbb
imull
clc
cmp
incl
push
xchg
and
les
dec
and
std
fcmovnu
dec
shll
movl
mov
insb
fwait
jae
dec
pop
stos
jnp
xchg
leave
push
mov
jnp
sbb
ficompl
push
and
lea
pop
mov
xlat
and
out
push
or
and
fisttps
insl
fstpl
push
inc
mov
dec
xor
jo
fstl
outsl
int
cmp
lcall
js
adc
or
scas
fidivrs
test
dec
fstps
loop
fsubrl
jae
pop
stc
sub
add
inc
fcoms
fnstenv
fisubrl
int3
in
adc
push
ja
icebp
dec
insl
xor
push
jg
cmp
mov
mov
vpunpcklwd
and
or
xlat
mov
test
dec
and
adc
xchg
scas
addl
sub
aaa
inc
sbb
cmp
cmp
mov
mov
addr16
jb
xlat
mov
popf
sbb
mov
mov
push
and
cmp
es
push
cltd
push
imul
movaps
xchg
shll
lods
aad
sbb
outsl
nop
aad
inc
out
and
out
add
jl
push
fucomp
popf
enter
hlt
push
sahf
out
mov
sbb
test
or
lahf
push
lahf
jb
and
adc
ljmp
test
pop
sbb
mov
cmp
mov
and
and
stos
lds
xor
pop
scas
and
pop
ret
insb
mov
pop
test
add
mov
push
shr
jae
mov
mov
mov
xchg
add
lret
sbb
inc
scas
rcrb
pop
and
mov
in
filds
fidivs
lods
push
movsb
arpl
jmp
dec
in
or
or
sub
push
and
imul
xchg
das
sbb
cmp
sbb
mov
mov
mov
scas
rcrb
pop
adc
mov
leave
addb
fisubl
push
dec
jmp
sahf
sbb
push
insl
and
hlt
negb
add
xchg
inc
jnp
popf
fyl2x
ja,pn
pop
sub
aam
cltd
pop
mov
sub
push
dec
dec
xor
mov
cmp
or
cs
add
popf
loopne
xchg
xor
outsb
sub
mov
in
dec
ss
fsubs
sub
xchg
shll
mov
nop
dec
movsl
sahf
mov
das
imul
jecxz
adc
unpcklps
and
movsb
xchg
ret
jg
mov
mov
pop
js
xlat
lcall
lret
add
pop
pushl
jle
cwtl
push
out
popf
adc
scas
sub
fwait
jb
cli
lds
daa
ljmp
mov
adc
cmpsb
dec
movsb
adc
cmp
push
xchg
aad
jg
and
sbb
mov
addl
xlat
sbb
outsl
lock
xorl
adc
in
pusha
add
pushf
jmp
xlat
sahf
ret
icebp
xor
push
xor
cwtl
mov
pop
andb
clc
mov
push
popf
push
cs
mov
fmul
push
mov
xor
push
push
xchg
stc
add
dec
insb
sbb
pop
and
mov
inc
add
out
jp
ret
loopne
ss
ljmp
xor
jl
pushf
in
and
or
jb
xchg
and
sbb
or
stos
sub
pop
or
je
or
mov
sbb
cmp
or
neg
lret
xchg
and
jmp
imul
mov
ja
jl
inc
fnstenv
xlat
fs
push
and
inc
jne
cmpb
inc
dec
sbbl
pop
les
sub
lods
lock
jae
call
cmp
xchg
xchg
cmpsl
dec
jle
test
sbb
push
push
xor
pop
lret
mov
ljmp
push
fisttps
mov
and
pop
in
dec
dec
jne
lcall
dec
sbb
sbb
adc
fistl
aam
mov
push
sbb
pop
mov
adc
jle
js
lahf
aaa
imul
xchg
shlb
inc
cli
jg
dec
mov
lret
push
xor
lods
pop
or
xor
rcll
daa
push
dec
xor
jp
dec
sbb
lcall
add
nop
and
add
xor
subl
jge
adc
pushf
lahf
test
cmp
testl
arpl
adc
or
push
xchg
in
test
mov
mov
mov
imul
inc
insl
les
push
sub
popa
in
add
aaa
imul
shrb
jnp
add
stc
lods
ds
scas
add
inc
sti
mov
sarb
cmp
popa
push
imul
sbb
xor
pop
add
xchg
icebp
cwtl
adc
or
repnz
adc
fcmovnbe
dec
dec
and
pop
push
adc
dec
daa
lds
out
mov
popf
or
stos
mov
cltd
fnstenv
sahf
pusha
mov
mov
xchg
ret
or
stos
jmp
test
sti
cmp
pop
mov
arpl
mov
fwait
xchg
and
aad
inc
add
ret
sub
xor
not
xchg
mov
push
cmp
mov
in
imul
ds
sar
sub
cmc
xchg
test
and
iret
xor
mov
fldt
adc
mov
adc
inc
cmp
mov
loope
lds
imul
fsubr
push
xchg
add
cmp
jge
and
js
stos
jae
mov
dec
pop
inc
das
adc
cld
sbb
and
lret
std
icebp
lock
inc
sub
daa
les
popa
dec
and
push
pop
neg
mov
mov
das
test
xor
lret
test
push
jns
add
hlt
les
loope
ds
add
cs
sub
cmp
and
adc
jp
push
and
fld1
test
lahf
cmp
popf
leave
push
dec
sarl
and
scas
mov
pushf
jle
sbb
sub
call
mov
data16
jb
lea
ja
mov
cmpl
sub
push
rcrl
xorl
xor
xor
xorb
mov
nop
xchg
mov
int
cs
dec
sub
dec
or
sub
add
jmp
push
sub
jl
aas
add
clc
mov
pop
dec
orb
xchg
dec
mov
pushf
enter
mov
dec
and
xor
pop
xor
dec
pop
and
xchg
jae
ds
movsl
jmp
out
jae
pusha
inc
gs
test
test
neg
push
pop
cmpsl
jae
xchg
xor
push
jp
sbb
pop
fcom
imul
sbb
arpl
jge
shrl
sahf
popf
fcmovb
movsb
cs
xchg
xor
ret
lock
xlat
jg
test
or
push
out
inc
pop
cmp
fld
subl
add
lods
movsb
push
fldt
push
ret
sahf
mov
leave
and
roll
add
test
xlat
adc
pop
inc
das
dec
imul
jl
pop
xlat
mov
sub
add
in
sbb
push
std
fisubrs
xchg
and
mov
jmp
push
adc
jns
and
or
xor
xor
mov
outsb
pop
mov
sti
popf
or
push
xchg
mov
sub
xor
pusha
cmp
hlt
push
jmp
dec
movsb
out
fisttpl
fadd
or
mov
stc
insl
jle
andl
divb
test
call
addr16
lcall
addb
lods
push
orl
sub
ds
mov
inc
pop
lcall
int3
push
cmpb
cs
mov
adc
sbb
daa
mov
or
mov
rcrl
adc
cli
dec
icebp
orb
add
push
adc
and
out
es
cmp
mov
pusha
xlat
cmp
push
xchg
inc
and
dec
xlat
aaa
adc
pop
jns
test
cmp
pop
ds
dec
stos
add
and
sub
xlat
sarl
dec
adc
jne
xorb
inc
insb
sbb
faddl
push
jo
dec
pop
fwait
mov
pop
test
shll
movsl
and
xchg
cmp
fnstcw
fwait
pop
xlat
lock
or
adc
xlat
push
testl
test
fisubrs
shl
pop
adc
sbbl
fnstenv
hlt
int3
lea
imul
lcall
push
xlat
sbbb
mov
sub
nop
xor
leave
sbbl
int
pusha
push
nop
aas
testb
or
dec
in
addr16
cmpl
cltd
stos
outsb
fprem1
pop
mov
pushf
pop
add
jl
into
xlat
sub
push
sub
mov
dec
xchg
jl
xchg
mov
in
fucomi
push
cmc
xchg
ja
pop
shrl
ljmp
mov
adc
jg
xor
inc
mov
jno
movsb
movsl
and
dec
rcrb
stc
adc
fcmovnb
add
pop
les
stos
pop
movsl
out
out
dec
lret
or
fsub
xchg
pop
mov
cmp
and
cld
jge
std
sub
cmpb
sub
add
xchg
movsb
nop
push
jg
dec
pop
mov
repz
ret
sub
xchg
pop
std
adc
mov
or
inc
jecxz
std
bound
test
loop
push
xor
hlt
cli
cmpsl
mov
sbb
xchg
divl
insb
xlat
lcall
push
ret
ja
mov
fwait
insb
and
or
dec
test
pop
out
shrb
aam
add
inc
jnp
xlat
sub
pop
fdivrs
out
lea
sub
testl
lock
and
adc
jno
and
stos
xor
sub
and
flds
ja
out
add
movsl
dec
pop
or
out
shll
std
cmc
and
jg
cmpsl
jo
outsl
lea
les
mov
dec
sarl
sub
js
out
rorb
ds
je
iret
jmp
xchg
lods
pop
outsl
sub
adc
shll
cmc
ds
test
stos
sbb
cmp
es
fildl
inc
sbb
popl
icebp
and
jae
jmp
imul
push
xchg
jae
lds
add
fisttpl
and
insb
sub
scas
fcoml
mov
pop
xor
outsl
sbb
cmp
test
rclb
and
fnstcw
fst
push
sbbb
push
inc
add
or
xor
xchg
int
cs
jo
shll
mov
sub
or
dec
pusha
jae
pop
dec
popf
sub
and
cmp
aaa
push
testl
arpl
xchg
jb
std
jecxz
popf
mov
or
hlt
std
pop
add
jo
cmp
dec
bound
cmp
cld
insl
outsb
ror
mov
movsl
mov
or
lock
imul
mov
sti
cli
popf
loope
out
push
addr16
aam
mov
rcll
roll
sbb
sub
adc
jl
adc
add
and
xchg
xchg
and
call
fldcw
cmp
hlt
and
cmpb
and
cld
jg
xor
inc
icebp
mov
sbb
mov
les
lea
fmull
push
shrb
jge
and
push
stc
mov
xchg
xlat
xchg
cmp
jne
jne
pusha
gs
retw
xchg
mov
call
xor
addr16
pop
nop
push
pop
and
lret
leave
sub
push
mov
xchg
call
cwtl
jo
or
dec
cmp
xor
mov
insl
sbb
out
mov
test
sti
mov
xor
inc
fsubrs
cmpsb
roll
gs
test
icebp
jle
adc
jg
adc
adc
xchg
jns
imul
jns
push
movsl
jae
xor
mov
test
fmuls
mov
fs
fisubrl
pop
pop
jmp
fildl
rcrl
xchg
sub
cmp
sti
sti
pop
pop
in
in
jne
mov
xchg
orb
test
mov
dec
mov
mov
push
mov
mov
and
mov
fidivrl
test
sbb
pushf
sub
aaa
imul
aas
push
rorl
aad
data16
inc
rorl
imulb
jp
bound
addr16
hlt
dec
pop
push
inc
arpl
stc
mov
push
inc
pop
ja
jno
cmp
idiv
jecxz
fwait
fmuls
xlat
rorb
xor
jno
aam
mov
loopne
xchg
or
dec
add
dec
pushf
cltd
mov
ss
fistl
push
push
and
push
divb
push
jnp
xchg
cmp
add
mov
and
or
imul
mov
push
shrl
fisttpll
popf
lcall
or
jns
mov
pop
jno
imul
jmp
mov
xor
xchg
test
call
push
js
dec
sub
daa
cs
bound
out
jmp
and
daa
pusha
enter
pop
jae
fstpt
jg
mov
out
pop
xchg
test
test
jmp
movsl
xor
roll
out
mov
pop
jmp
orb
sbb
loopne
insl
andb
push
orl
out
dec
push
loop
add
pop
mov
imul
push
test
lahf
xor
ret
add
aad
pop
cmpsl
cmp
test
push
and
repz
fidivrs
std
xlat
cmpsl
shrb
icebp
lods
orb
cmc
inc
xlat
jecxz
jns
sbb
dec
inc
cmp
cli
pop
js
sub
sub
inc
mov
cmp
cmpsb
pop
xchg
jb
decb
icebp
jmp
popf
xchg
fnstsw
jae
addr16
or
xor
aad
cli
test
cltd
enter
adc
dec
cmpsl
push
mov
lret
add
push
and
push
call
mov
inc
fnstenv
and
lods
mov
bound
inc
sbb
orl
int3
add
fdivrl
push
sbb
inc
fstps
jl
cmp
xchg
push
and
mov
adc
scas
mov
stc
and
adc
or
xchg
fistpll
imul
fisttps
dec
push
jnp
fnstcw
xchg
iret
cmp
pop
or
and
in
dec
add
ret
push
cmp
adc
lret
cwtl
and
lret
sbb
inc
lret
inc
test
outsb
push
loop
sub
sub
pop
jle
iret
push
lret
adc
dec
or
int
push
xor
nop
mov
dec
mov
js
dec
shr
stc
test
rclb
xchg
mov
testl
sub
fsts
xchg
subl
cmp
jl
hlt
adc
dec
ret
lods
xorl
js
mov
ljmp
xchg
xchg
dec
mov
adc
es
aaa
add
mov
push
repz
xchg
or
lret
adc
or
scas
out
jmp
dec
sbbb
lret
push
add
ljmp
leave
ret
fidivrs
sbb
push
nop
and
adc
cmp
mov
xor
xor
clc
jbe
mov
out
sti
repz
sub
fidivrs
aaa
inc
imul
int
fists
hlt
leave
inc
inc
xchg
imul
fwait
lahf
lods
je
mov
out
call
mov
out
aam
fdivrs
jno
ret
sbb
in
paddd
add
aas
repz
int
sbb
dec
bound
hlt
adc
push
loop
and
xlat
test
inc
cltd
jp
cmp
pushf
ret
add
push
std
jae
lea
out
xchg
xchg
enter
lcall
nop
push
jb
in
sbb
fnstenv
aad
gs
adc
or
test
mov
andb
in
adc
xor
cmp
lahf
push
pop
pop
pop
xchg
jae
dec
rcrl
push
push
and
fwait
in
mov
xchg
xchg
js
jns,pn
in
dec
outsl
mov
adc
sub
sub
mov
stos
sahf
fsubrl
leave
and
popa
mov
jmp
dec
enter
loop
lret
mov
sbb
jno
mov
pop
push
shll
call
lods
imul
orb
lret
popl
test
xchg
les
imul
test
xchg
add
pop
lock
mov
sub
addr16
cmp
xchg
dec
sub
addb
inc
jmp
mov
mov
sub
sub
sub
jno
fdivs
stc
mov
cli
flds
dec
cmp
faddl
icebp
xchg
and
add
dec
repz
mov
adc
pop
movsl
sbb
outsb
jno
inc
inc
repz
cmp
test
icebp
pop
mov
sub
mov
push
mov
jp
jae
cld
loope
cmp
mov
xor
addb
or
jno
cmp
or
nop
dec
int
mov
pop
inc
lret
xchg
aas
add
lods
movsl
mov
scas
hlt
push
xor
imul
push
pop
pop
cld
into
dec
outsb
xor
push
xlat
sbb
ja
add
out
stos
out
cli
test
sbb
inc
and
lret
pop
or
hlt
cmp
mov
add
cli
in
test
or
lock
mov
into
lret
sbb
inc
push
fmul
in
lret
cld
and
sbb
add
mov
divl
sbb
mov
mov
lods
jl
and
cs
xchg
daa
fnstenv
jecxz
leave
push
stos
jnp
imul
push
inc
test
pop
incl
xlat
sahf
imul
lahf
or
loopne
cld
testb
add
clc
sti
inc
es
sbb
inc
pop
pop
mov
xchg
mov
pmaxub
push
imul
cmp
adc
adc
leave
cmpsl
jle
mov
imul
mov
mov
xchg
xchg
out
jae,pt
in
fstps
adc
mov
cmp
call
out
pusha
sbbb
sahf
repz
xlat
int
add
jmpw
cmp
inc
loop
xchg
add
jle
scas
imul
pop
mov
das
shll
pop
push
std
out
shll
shl
jp
mov
iret
into
pop
lea
adc
push
dec
lcall
dec
shr
inc
mov
dec
jbe
lcall
pop
js
inc
and
ljmp
dec
jge
xor
cmp
sarl
xor
cmp
cmp
pushf
and
pop
js
lret
sub
lret
ret
stos
xchg
jp
ja
push
xchg
mov
arpl
hlt
nop
dec
fdivrs
sti
xlat
fidivrs
int
xchg
cli
push
pop
fstl
jbe
pop
imul
add
and
or
fsubrs
push
loopne
js
or
test
lahf
daa
imul
movsb
dec
sbb
dec
das
pop
cmp
ja
lret
stos
jno
fstl
insb
adc
and
fs
or
jae
xor
jp
mov
jbe
test
fnstenv
pop
in
adc
sarb
cmpsb
push
test
sub
shl
mov
ss
nop
jl
addr16
ja
push
lret
popa
dec
xchg
stc
ss
ds
outsl
mov
loopne
lret
insb
xchg
std
cmpsl
test
xor
xor
inc
jb
and
inc
push
into
je
xor
xor
cltd
rcrb
cmp
pop
sbb
xor
inc
sbb
xchg
cmpsl
inc
cmc
sbb
jns
push
orb
pop
stos
hlt
push
push
pop
movsl
cmp
and
and
push
stos
ja
ficoms
fmuls
mov
fwait
and
fxtract
movsb
gs
jge
in
push
xlat
cmpsl
xchg
out
mov
dec
fistpl
jb
add
fs
sub
mov
mov
imul
pop
add
idivb
loope
push
xor
pushf
sahf
mov
xor
and
dec
arpl
push
inc
or
and
sahf
xchg
repz
clc
out
test
je
sbb
fcmovne
outsb
arpl
or
adc
rcrl
cld
iret
jge
shl
pop
inc
jge
in
mov
pushf
out
popa
stc
xor
fsubr
lret
out
sub
ja
sub
fldenv
dec
fidivrs
or
icebp
cwtl
outsl
inc
shld
es
add
sbbb
sub
std
sbb
and
pop
adc
adc
adc
or
in
addb
sbb
pushf
lret
pop
out
loope
adc
out
xchg
fbld
adc
push
sbb
mov
or
ja
lcall
cmp
test
add
pop
stos
dec
mov
call
dec
mov
xchg
sub
clc
cmp
adc
cmp
outsl
dec
and
or
pop
sarb
xchg
and
mov
jp
mov
pop
sbb
inc
outsl
sub
dec
jb
je
mov
out
xor
push
mov
in
test
xor
ret
jb
insl
inc
dec
rorb
xlat
ljmp
daa
jae
inc
clc
sbb
inc
jmp
shll
out
aas
imul
push
jne,pt
in
idivl
mov
sbb
or
movsl
dec
jno
jo
into
movsl
inc
cmp
xchg
cmpb
mov
adc
test
sbb
cmp
xchg
push
mov
xlat
jp
jb
push
push
cmp
call
jnp
fldenv
sub
fsubs
mov
test
mov
cmpsb
std
jae
sub
sbb
imul
out
les
in
mov
sarb
aaa
jge
mov
sbb
or
cwtl
inc
loope
jae
iret
cld
xchg
int
or
aas
es
pop
ja
push
xor
jno,pt
lcall
rcrl
sarl
negb
pop
movsb
pushf
mov
xchg
or
pop
mov
les
xchg
insl
stos
pop
dec
mov
mov
div
mov
and
addb
rorl
pusha
or
fisubs
mov
fildl
pop
xor
ljmp
lea
inc
mov
inc
nop
and
xor
test
sbb
push
dec
cld
sbb
test
fsubrs
cmp
outsl
sub
xchg
push
jg
pop
push
test
lea
int3
dec
fnstcw
mov
orl
insb
aad
cmp
pop
adc
call
insb
and
push
test
mov
add
push
out
ficoms
push
out
mov
imul
jecxz
pop
ds
lock
adc
xchg
cwtl
or
test
cmpsl
aad
imul
push
aaa
dec
cmp
cmp
mov
cmp
aam
out
repz
inc
cmpsb
cs
push
pop
add
addr16
mov
dec
ljmp
mov
jle
test
xorb
gs
push
scas
fwait
in
mov
push
sub
cmp
mov
push
jae
mov
sbb
push
jbe
mov
lods
xor
pop
in
into
xor
mov
xchg
mov
mov
addr16
adc
mov
dec
and
cwtl
in
push
sahf
or
push
scas
push
lret
jns
mov
cld
lcall
dec
loope
cli
mov
and
sbb
cwtl
cmp
iret
cs
mov
xlat
int
push
push
cmp
sbb
rcl
adc
mov
dec
and
xor
popa
mov
or
outsb
fcomi
adc
jge
mulb
insb
jae
inc
cltd
adc
push
jp
outsl
xor
adc
add
cmpsl
and
sub
jbe
dec
mov
pop
sub
jmp
xor
mov
imul
out
mov
adc
fsubrs
fisttpl
jne,pn
scas
cmpsl
mov
sbb
cli
nop
inc
mov
xchg
bswap
dec
jo
jl
cli
addr16
shlb
xchg
dec
or
nop
pop
into
rolb
mov
or
mov
lods
add
mov
push
fistl
mov
in
push
fistl
sbb
mov
adc
mov
sbb
cli
mov
mov
or
aas
insb
jne
inc
rorb
or
incb
xchg
subb
int
or
jge
adc
xchg
imul
xchg
int3
das
aaa
popa
test
in
inc
mov
repz
xor
subb
test
icebp
pop
sub
xchg
mov
jo
mov
outsl
lods
mov
jecxz
aad
insl
insl
fwait
sti
lods
xorb
fdivs
subb
loopne
cmp
push
mov
xchg
mov
and
cmc
xor
fisttpl
xchg
leave
jae
push
xor
mov
mov
sbb
loopne
add
mov
sub
fisttpl
push
outsb
lcall
inc
add
or
inc
sub
pop
ljmp
xchg
mov
in
fwait
jae
cmp
les
add
or
mov
loop
dec
push
xor
push
push
aam
lret
cmp
dec
mov
adc
lret
pop
adc
jne
fstpt
out
push
fisubs
pop
and
sub
xor
lret
fcmovbe
xchg
incb
push
jmp
sub
xchg
ret
pop
push
out
push
fdivl
add
xchg
or
mov
sub
sub
fsts
mov
push
rcrl
and
movsl
jle
pop
scas
rcrb
dec
or
push
js
mov
clc
adc
rorl
mov
and
xlat
xchg
mov
xor
xor
or
jnp
and
or
repnz
dec
or
pop
fs
stc
or
mov
adc
scas
test
add
push
dec
fstps
sbb
movsl
pop
cmp
inc
push
int
cld
loop
jo
adcb
fimull
add
andl
push
add
lock
push
fdivs
cmc
push
rcr
jge
int
ljmp
ret
test
cmp
jp
outsl
sti
ss
test
clc
pop
sub
fnstcw
pop
pop
movsb
test
dec
cli
push
sub
pop
xor
fsts
xchg
cmpb
out
add
or
call
imul
fistpll
jle
xchg
dec
cmp
sti
pop
outsl
xchg
es
out
stc
and
xor
jl
fcmovnu
aaa
xor
or
leave
jae
and
sbb
ja
and
jno
and
imul
push
pop
mov
inc
xchg
shrl
xlat
fsubrs
add
sbb
mov
sbb
mov
shll
dec
nop
fsubrl
jne
fcomps
mov
or
cli
popa
fisubl
xchg
cmp
mov
outsb
enter
lcall
pusha
dec
mov
les
or
sbb
insb
cmp
fisttpl
shrb
pop
fstpt
fnstenv
jbe
nop
jge
pop
sbb
cmp
cmp
dec
insb
cmp
jno
sbb
sub
jb
shrl
repnz
xchg
jnp
xor
and
adc
sbb
imul
icebp
adc
imul
fldenv
adc
push
fstpt
xor
sub
push
sub
jno
cs
fcmovne
icebp
mov
sub
divb
mov
insb
gs
pushf
arpl
dec
sbb
jno
dec
or
jecxz
mov
and
sti
addr16
aam
sarb
icebp
je
nop
arpl
inc
jns
push
jmp
ljmp
jp
imul
jno
pushl
push
jp
and
push
addr16
fucomi
sbb
pop
aas
sub
add
mov
mov
lret
jo
jp
xchg
add
aaa
cli
addr16
addr16
lock
xor
mov
aas
jmp
or
mov
adc
mov
push
inc
adc
fcmovne
js
pop
out
xor
add
xchg
out
jae
arpl
cmp
addr16
js
outsl
mov
push
into
dec
mov
cmp
cli
inc
add
outsb
popf
mov
adc
popa
in
adc
push
out
jmp
sbb
imul
stc
mov
xor
xor
jae
nop
push
adc
jg
jb
pop
cmp
negb
jp
je
out
adc
fistpl
mov
mov
mov
imul
cmp
jns
push
stc
or
cmc
push
popf
push
ja
xchg
adc
cmp
mov
inc
xchg
jmp
mov
jg
rcrl
xor
mov
push
call
jg
inc
push
ret
data16
cmp
push
test
and
insl
lods
lods
mov
aad
jg
fcmovu
cmp
pop
push
mov
orb
data16
lods
cli
pop
imul
iret
lods
dec
aam
dec
jo
ss
icebp
mov
dec
pop
jecxz
add
inc
cmc
xlat
iret
inc
icebp
mov
sub
mov
cltd
jno
fcompl
jbe
mov
mov
in
cmpl
je
jmp
xchg
hlt
push
fwait
push
cmpsl
pop
cmpsb
push
cli
xor
push
fcmovu
push
mov
aaa
in
and
bound
xchg
pop
dec
mov
fsincos
or
jge
ret
inc
lds
out
jo
sbb
dec
adc
xor
lds
xchg
cmp
cmp
adc
xor
sub
xor
pop
add
ja
pop
repnz
in
rcl
cmpsb
push
mov
pop
sarl
bound
inc
cmp
xlat
xor
mov
in
out
mov
movsl
fiadds
dec
das
arpl
rcl
and
mov
out
je
xchg
adc
int
xor
ds
adc
dec
dec
adc
daa
pop
add
insb
pushf
xchg
jb
fldt
xlat
cli
sti
imul
subb
out
mov
pushf
jmp
dec
repz
jge
sbb
imul
lock
dec
shlb
es
daa
pop
and
out
movsb
insl
les
mov
or
push
aas
mov
cmp
outsb
sub
fstpt
xorb
jbe
sbb
out
mov
mov
dec
xchg
divb
xlat
push
daa
insb
xor
jne
sbb
jmp
push
mov
jg
cmp
or
or
inc
scas
jg
dec
lret
push
das
cli
mov
arpl
inc
cs
and
xchg
push
xchg
bound
fbstp
mov
jo
jmp
sub
xor
shrl
add
sarl
add
cmp
jae
cmp
fsts
ljmp
std
pop
cmp
imul
test
rcr
js
xlat
cltd
repnz
enter
add
inc
fs
and
sub
or
sbb
arpl
cs
inc
and
pop
cmp
outsb
jns
pop
fidivrl
and
jae
push
xor
mov
sti
setg
adc
iret
mov
push
std
push
sub
dec
sub
jns
mov
cs
sbb
cld
call
or
cmp
pop
cmp
scas
pop
sbb
adc
and
sub
imul
xor
xor
leave
popa
dec
jae
test
sbb
cmp
jae
mov
test
movsl
stos
divl
cli
mov
xchg
mov
fstpt
pusha
mov
jnp
flds
push
push
mov
loope
std
sbbl
enter
fcomps
adc
xchg
in
adc
test
pop
in
adc
fistl
cmc
repz
fisubrs
cli
cwtl
dec
lret
mov
addr16
mov
bound
pop
rcrb
out
add
lea
and
ljmp
dec
sahf
sbb
or
repnz
fstpt
sub
cmp
mov
jns
dec
vmulsd
push
popf
icebp
out
dec
int
packuswb
popf
cmp
pushf
mov
mov
pop
add
mov
sbb
addl
xchg
int
pop
pushf
inc
add
mov
movsb
fcmovu
lahf
jns
fstps
ds
and
and
dec
shl
jge
mov
jmp
push
xchg
or
bound
sbb
jns
pop
and
xor
outsl
or
and
test
jmp
insb
fistpl
mov
sub
cmp
mov
push
mov
or
adc
jmp
pushf
lcall
add
pop
call
rcr
push
pop
cmp
pushf
leave
pushl
xchg
outsl
pop
jnp
int3
cmp
rclb
lock
jae,pt
xor
movsl
adcb
arpl
mov
inc
or
jg
sbb
jmp
mov
push
popf
mov
hlt
jg
movsl
fsincos
xorl
xchg
ret
sbb
jnp
subb
mov
add
mov
push
cmp
pop
arpl
insb
pushf
sbb
cmp
dec
pop
es
loopne
sub
adc
mov
sbb
addr16
sbb
mov
push
xchg
jb
inc
rorl
ljmp
ja
ds
mov
test
rol
sarb
lahf
inc
out
add
inc
pop
mov
mov
xchg
and
dec
lcall
stc
je
pop
push
push
xor
cwtl
jecxz
imul
in
imul
mov
imul
pop
dec
push
lods
dec
jns
flds
ss
push
loope
push
jmp
jp
sub
or
sub
and
add
xlat
cs
cld
xchg
xor
pusha
xor
not
mov
test
or
inc
and
aam
jae
and
or
dec
mov
xor
sbb
xor
jg
enter
leave
jecxz
aas
cmp
push
arpl
dec
lret
mov
or
imul
icebp
push
pop
push
outsb
lret
jle
ds
popf
pop
sbb
xor
movsl
and
mov
je
loopne
dec
pop
dec
outsl
pop
lret
jmp
ja
and
leave
xor
fisubrl
imul
push
imul
inc
test
dec
xor
mov
push
in
fcmovnb
cmpb
stc
pusha
enter
notl
in
pop
subl
lret
bound
cli
mov
adc
add
pop
and
push
orb
sbb
in
imul
cwtl
cmp
add
sub
push
fcomps
inc
xor
add
inc
out
movl
xchg
dec
dec
sbb
sbb
out
pop
sbb
sub
fdivrp
xor
mov
sub
and
addr16
int
fnstenv
dec
mov
jp
sti
movsb
inc
sbb
std
cmp
or
add
and
int3
sbb
sub
xchg
pop
shll
sbb
out
inc
dec
cmp
insl
pushf
mov
mov
xor
and
mov
pop
or
mov
fnstcw
shrl
add
setne
les
ficoms
adc
jmp
lds
inc
ss
xchg
add
fwait
aaa
out
cmpsl
stos
movl
add
xchg
pop
ret
or
addr16
cmp
mov
hlt
xlat
out
scas
push
add
jle
cwtl
jae
popa
jae
loope
jns
cs
mov
sub
jno
dec
enter
insl
jns
jecxz
ficomps
imul
mov
jecxz
jnp
dec
fcompl
mov
test
cmp
fisubrs
add
call
pop
dec
popf
push
and
jl
pop
xor
cmp
mov
fs
pop
add
insb
fadd
pushf
insb
and
gs
xlat
iret
lcall
cmpsb
movsb
mov
dec
das
adc
mov
arpl
lock
sub
pop
and
fnstcw
retw
sub
push
add
imul
test
sbb
cmp
loope
pop
sub
in
ds
and
fs
sti
jae
sbb
arpl
icebp
inc
xchg
sbb
ljmp
dec
stc
aam
cld
jecxz
data16
clc
xlat
push
xor
adc
adcb
xlat
mov
les
fcomi
push
stc
ja
enter
or
xchg
adc
lcall
and
incl
sub
and
out
fnsave
and
jp
fistpl
sub
mov
lret
mov
jp
sbb
daa
inc
les
cmp
addl
out
push
fstpl
add
push
jno
popf
adc
repnz
dec
imul
adc
bound
mov
push
nop
add
jno
out
fiadds
cmp
mov
cli
inc
test
aam
ficompl
fistpl
add
sti
scas
stc
or
pop
cwtl
divl
jns
jl
pushf
std
sub
and
jmp
int
es
dec
lds
xor
sbb
popl
jae
pop
and
xchg
test
inc
sub
push
mov
into
xchg
cmpsl
lret
and
lcall
push
or
test
cld
sub
push
mov
or
ja
in
dec
adc
pop
jp
or
jae
xlat
fnstsw
push
lret
lods
pushl
mov
pop
ss
lea
dec
and
inc
pushf
stos
ret
dec
xchg
push
insl
pushf
push
test
cld
mov
cmpsb
filds
insl
popa
mov
xchg
push
or
bnd
lds
mov
jno
add
cmp
int
test
xchg
lods
lds
dec
fs
pop
mov
fcoms
push
sahf
sub
xor
js
cmp
loop
bound
popa
loope
cltd
and
xchg
push
and
pop
loop
dec
xor
push
cmp
cmp
dec
inc
stos
xor
cmpsb
add
push
pop
inc
in
jne
inc
dec
shl
mov
into
push
sbb
xchg
xchg
in
push
and
and
mov
xchg
xchg
aaa
cmp
daa
add
shrl
movsb
fisubl
aaa
call
lret
cli
push
sbb
fildl
pop
in
fsts
dec
or
pop
mov
aad
cmc
pop
mov
xlat
notl
mov
fidivrs
int
mov
stos
cmp
inc
repnz
jge
rorl
mov
scas
cli
icebp
ret
adc
mov
jne
push
xor
xor
xor
lret
loopne
xor
dec
mov
fmull
ljmp
dec
xchg
inc
stos
push
pop
and
fwait
cmp
mov
and
pop
xor
int3
shlb
test
subb
sbb
pusha
fnstenv
xor
idivb
fwait
xchg
jns
dec
imul
xlat
jge
add
imul
test
leave
and
cmpsw
cld
andl
jp
sbb
cmp
dec
cmp
pushf
dec
loopne
bound
out
lahf
jmp
shlb
xor
or
leave
inc
ret
stc
push
cmp
inc
push
fidivrs
mov
push
pop
mov
icebp
into
and
notl
stos
xor
jmp
in
inc
iret
movsl
xor
adc
mov
jp
test
mov
sbb
or
cmpb
ss
xchg
push
jnp
lds
push
pop
iret
xchg
stc
movsl
fmuls
fcmovnbe
lret
stos
and
mov
lods
fsubs
les
sub
repz
jge
dec
and
xchg
mov
dec
jns
xchg
fstpl
sti
jp
inc
pop
mov
or
imul
cmpsb
stos
push
push
xchg
sbbl
sub
pop
lods
mov
and
xlat
cmpsb
adc
sub
nop
ret
subl
mov
mov
xor
xor
rorb
mov
or
sbb
fwait
lret
dec
xchg
outsl
sub
mov
shl
inc
in
cmpl
adc
sbb
xor
jp
pop
mov
das
cmp
inc
iret
lock
mov
sarb
lea
pop
movsb
adc
sub
xchg
cmp
mov
mov
and
or
fs
pop
stc
test
adc
jg
sbb
loop
lcall
pop
fldt
psubb
and
pop
movsb
dec
pop
or
insl
cmpl
xchg
dec
xor
fnstenv
call
push
mov
cmp
ret
push
sub
xlat
inc
test
mov
xor
push
cwtl
jg
jnp
orb
cmpsb
jo
ja
dec
out
inc
mov
inc
inc
adc
dec
daa
pop
cld
push
mov
ret
cmp
xlat
mov
or
dec
and
leave
pop
push
fisttpl
pop
adc
fcomip
subb
mov
out
dec
inc
xor
fsubs
mov
std
dec
xor
push
mov
idivb
mov
popa
fcomi
data16
xchg
rcll
gs
add
lods
inc
ror
dec
fstpt
inc
jns,pn
ds
mov
fwait
and
fucomip
movsl
mov
daa
xor
mov
iret
cmc
and
lret
xchg
stc
mov
addr16
jb
call
push
out
pop
jp
dec
sbb
or
inc
lds
xor
popf
xlat
lret
cmp
or
cmp
cmc
scas
adc
push
push
mov
rcrl
mov
xchg
ljmp
xlat
jo
mov
push
cmc
mov
adc
arpl
lahf
xchg
and
fidivrs
inc
jge
ja
add
and
imul
xorb
cmp
hlt
inc
dec
in
add
lcall
lock
jbe
mov
mov
jno
and
jl
xor
stos
fwait
xor
cmp
fnstcw
xchg
jns
cltd
jecxz
ds
loope
pop
daa
ss
xchg
mov
cmpsl
mov
mov
sub
lea
mov
frstor
sbb
decb
stos
cmp
mov
loop
xor
mov
jns
imul
fimull
mov
mov
pop
sub
fldcw
imul
pop
enter
mov
icebp
xchg
mov
addl
or
and
aas
dec
pop
push
sar
jle
stc
sub
and
iret
mov
dec
jecxz
xor
or
iret
push
sar
movsl
add
and
mov
shrl
pop
xlat
xor
mov
frstpm(287
mov
push
push
call
jmp
ljmp
sub
fwait
out
and
pop
jle
lcall
iret
ja
xor
test
mov
sub
int
and
cmp
lds
repz
mov
pop
out
or
out
sub
xor
add
lret
jne
fwait
mov
shrb
nop
lock
xor
xor
cld
sahf
push
push
clc
push
and
xchg
mov
add
imul
ret
mov
pop
clc
pop
mov
pop
dec
cltd
out
or
cmp
jns
shl
dec
jo
mov
pop
mov
jbe
dec
mov
dec
lahf
xlat
mov
clc
mov
xchg
and
iret
adc
iret
in
sbb
fcmovnu
adc
pop
clc
lock
sbb
pop
and
xchg
fwait
cmp
int
cmp
push
rolb
js
pop
addr16
dec
dec
or
sbb
and
mov
lods
fldt
iret
imul
dec
mov
cld
and
mov
enter
ror
in
xchg
hlt
push
xchg
cli
jb
mov
jbe
or
dec
ds
xlat
inc
push
pop
mov
inc
cltd
fisubs
nop
push
sahf
mov
dec
jns
out
clc
ja
push
mov
inc
dec
pop
test
xchg
sbb
inc
jle
push
mov
cli
rcl
aaa
stos
ja
bound
jae
sbb
pop
or
cmc
and
xchg
pop
inc
and
jg
or
iret
push
push
mov
dec
fidivrs
adc
mov
or
xchg
sbbb
cmp
fistpl
out
je
jbe
push
loop
fildl
sub
or
mov
adc
iret
push
es
je
mov
test
shl
pop
outsb
fdivrs
fstps
mov
xlat
mov
aaa
aas
mov
and
cmp
mov
fs
fnstcw
adc
jge
arpl
xor
mov
iret
out
rorb
pop
stc
xor
insl
dec
mov
jmp
fistl
rclb
icebp
loop
and
add
adc
pushf
xchg
aaa
mov
jg
adc
mov
test
cmp
fisubrl
sub
push
cmp
in
pop
pop
notb
adc
jo
imul
scas
in
rcrb
mov
cmpl
imul
jne
ret
fsubrl
es
push
mov
adc
and
stc
movsb
xchg
push
jae
push
adc
fistpl
adc
popa
cmp
mov
cmp
pop
inc
jae
jmp
pop
adc
testl
cmpsb
insl
mov
push
fnstcw
scas
in
xchg
lret
pop
fcoml
hlt
and
enter
inc
cwtl
push
repnz
jbe
push
fldenv
ljmp
ljmp
cli
or
pop
xlat
xchg
clc
pop
sbb
repz
stos
sti
pop
dec
mov
pop
inc
push
ja
pop
jo
cwtl
pop
pop
clc
push
fistl
scas
loop
jle
jno
arpl
push
shlb
jp
das
mov
mov
pop
or
scas
sub
cmc
cld
leave
sbb
lret
mov
inc
add
mov
mov
cmpsl
pop
sbbb
mov
addr16
gs
cmp
daa
rorl
data16
in
cmp
push
jae
and
or
xchg
das
inc
fsubr
imul
pop
jmp
ret
inc
adc
test
xchg
nop
xor
mov
rcrb
xchg
mov
pop
push
fstps
testl
or
cli
or
arpl
or
xor
inc
in
mov
mov
cmp
mov
push
ljmp
imul
add
andb
xor
out
mov
imul
mov
loope
popw
sub
fnstsw
add
jae
mov
mov
jae
jo
jbe
das
rcrb
shll
pop
sti
bound
jne
and
xchg
mulb
xchg
xchg
pop
cltd
push
sub
in
or
dec
iret
lock
pushf
fnstenv
ds
xor
mov
push
mov
pop
pop
stc
loopne
xor
mov
movsb
aaa
pop
test
repz
sub
cwtl
jl
outsb
je
inc
cmp
sbb
sbb
push
cld
insl
xor
cmpsl
std
cmp
jae
mov
jecxz
mov
and
pop
sbb
roll
adc
sbb
push
sub
pop
or
xchg
shrb
adc
fdivp
dec
test
insl
icebp
sbb
pop
int
sub
fsts
dec
popl
cmpl
cmp
inc
cmp
mov
mov
movsb
cli
mov
fld
push
push
sub
loope
sbb
mov
jb
mov
cmp
mov
insb
cmpsl
dec
jl
je
ljmp
and
add
stos
pushf
mov
inc
out
mov
jbe
cmp
stc
ret
flds
call
movsl
mov
jnp
fldcw
cmpl
insl
out
adc
jp
adc
cmp
mulb
sbb
cmp
mov
mov
imul
filds
repnz
jl
mov
les
shlb
bound
push
pop
sbb
and
mov
jmp
xor
sbb
jge
or
xlat
arpl
push
clc
cltd
fisubrl
inc
xorl
iret
xor
int3
xchg
jae
lods
pusha
pop
pop
push
outsl
add
inc
push
cmp
arpl
jecxz
sub
out
iret
jns
imul
sub
cmp
sbb
xorb
xor
js
jnp
test
clc
xlat
sbb
divb
fcmovne
cmp
fnstenv
jp
cmp
xchg
push
xlat
jo
sbb
out
movsl
jp
fldenv
xlat
cmp
jmp
xchg
jb
mov
hlt
arpl
pop
lea
cs
sbb
xlat
ficoms
cltd
sub
shlb
cmp
dec
cli
cmp
out
cmpsl
mov
movsb
cmp
pop
cmp
js
pop
les
push
rorb
mov
pop
pushf
je
test
pop
sti
push
fistl
mov
pushf
and
aam
movsl
add
je
xchg
push
dec
mov
and
leave
sub
cld
cltd
mov
pop
sub
pop
shr
or
out
out
scas
lahf
cmp
mov
dec
sub
jg
imul
mov
lahf
sahf
and
dec
aam
xchg
ficompl
sub
pop
mov
loop
jmp
popa
roll
jmp
fstpl
test
stos
sti
dec
testl
mov
shl
mov
fbld
enter
std
imul
xor
dec
pop
rorl
fisubs
xchg
or
nop
in
sbb
jge
outsl
and
cld
lahf
data16
inc
mov
or
shll
inc
sbb
imul
inc
inc
cmpb
mov
inc
adc
stos
shlb
pop
dec
gs
xlat
int3
add
aas
and
push
dec
sbb
pushf
cwtl
test
push
sub
xchg
out
popf
into
jnp
lret
out
push
add
enter
mov
push
lds
nop
enter
push
shr
mov
cmpsl
roll
mov
pop
sti
or
dec
out
dec
push
ss
sub
dec
mov
or
fimuls
scas
sbb
xor
cmp
jle
jmp
subb
add
inc
test
push
fxch
nop
stos
repz
jns
add
inc
xor
vmread
jbe
or
xlat
jne
cmp
add
push
add
stc
sub
pushf
jbe
enter
jbe
inc
arpl
movsb
pop
pop
mov
cmpb
sub
pop
xor
xor
test
testb
lods
test
aad
repnz
dec
dec
xor
pop
lahf
aaa
cmp
ds
test
cwtl
fcmovnbe
data16
xor
and
pop
xorl
js
enter
and
xchg
ds
pusha
je
hlt
inc
fnstcw
loopne
sbb
das
rorb
sub
sub
pop
fwait
notb
inc
mov
call
addr16
pop
repz
out
push
and
aad
rcr
pop
sti
addr16
stc
xorl
xor
add
scas
mov
mov
jns
dec
aas
sub
cmp
sub
adc
jg
pop
icebp
jne
push
or
bound
stos
jl
lret
push
mov
insb
add
out
xor
ffree
arpl
in
push
imul
pop
clc
hlt
test
sub
push
xchg
fisubrs
push
sub
xlat
orl
das
pop
addr16
xlat
lcall
test
mov
dec
adc
xor
xor
dec
xlat
out
xchg
inc
fstps
fldcw
push
jbe
xor
into
movsb
xchg
call
add
xchg
and
rcr
inc
adc
inc
sub
mov
xor
mov
push
sbb
push
jp
cmp
cmpsl
dec
jae
mov
and
loop
cmp
mov
pop
xlat
nop
int3
xor
jae
test
mov
xchg
xchg
adc
sub
loop
pushf
dec
xor
arpl
rcr
jae
ficoms
inc
mov
imul
sarb
call
arpl
adc
pop
pop
sbb
mov
lcall
fcmovnb
jp
cli
mov
xlat
sbb
xor
mov
adc
pop
mov
pop
outsl
xor
lods
sub
ret
mov
int
mov
jnp
fstps
push
inc
pushf
push
or
out
adc
cmp
jg
cli
ret
sub
and
rcrb
lahf
ja
pop
cmpsb
or
sbb
int3
jno
test
pop
mov
jg
cmpsl
dec
mov
repz
cmpsl
xor
dec
ret
cld
push
push
mov
aad
jno
les
ficompl
add
push
add
fldcw
out
xlat
xor
arpl
fs
outsl
sti
shlb
inc
pushf
movsl
popa
and
aam
nop
xlat
push
xchg
mov
jno
insl
pop
jmp
insb
add
inc
add
xor
ja
subb
loopne
jae
outsb
arpl
subb
sbb
add
push
jg
or
les
jno
sbb
popf
push
pop
call
xchg
cli
dec
xlat
es
insb
icebp
fildl
mov
cmp
xchg
ss
cmp
sub
cwtl
cmpsl
loope
and
addr16
jle
push
andl
repnz
jbe
jmp
inc
int
mull
adc
mov
mov
jne
xlat
shl
divb
movsb
mov
divb
enter
xor
insb
je
adc
adc
add
or
ljmp
movsb
ret
pop
or
js
mov
repz
pop
cmp
fnstcw
cmp
push
and
cmc
and
orl
icebp
mov
pop
jmp
lahf
jmp
jae
fxtract
inc
push
je
cmovbe
enter
test
gs
xor
lock
mov
adc
ret
mov
les
inc
fidivrl
decl
adc
push
lret
mov
jns
xor
shlb
pandn
push
add
and
jmp
fisubs
and
cmc
sub
loop
stos
scas
sub
stc
xlat
dec
gs
mul
repnz
inc
inc
inc
fstl
xor
daa
lods
xor
cmp
data16
jg
in
cmp
xlat
cli
jge
or
push
in
cli
hlt
shlb
fstpt
cmp
test
ret
cmc
and
das
imul
adc
mov
in
imul
add
adc
jne
jmp
scas
je
sbb
xor
sti
nop
imul
das
mov
pop
jno
lret
mov
fiaddl
arpl
inc
test
aas
fnsave
orl
jae
in
lock
out
fsub
jne
or
push
pop
imul
inc
sbb
repnz
sbb
lret
xchg
mov
jbe
inc
repnz
jnp
movsl
nop
or
ret
inc
sub
add
jae
push
adcb
out
push
rorl
nop
out
insb
mov
mov
mov
and
jns
das
dec
xor
xor
cmp
jg
out
mov
gs
xchg
jp
dec
pushf
loopne
push
jbe
cmpsl
repnz
sub
jmp
cmp
pop
test
and
push
xor
aad
pushf
push
ret
dec
mov
cmp
pop
imul
jl
xor
jno
outsb
test
movsb
insl
in
jnp
popa
mov
lds
cmp
mov
fstpl
addr16
ret
stc
sub
mov
rcl
and
pop
add
call
inc
and
jo
xorb
out
roll
cmp
test
mov
xor
outsl
inc
mov
adc
in
push
icebp
jb
data16
std
jmp
repz
in
add
xor
out
cmpsl
inc
fisttps
ljmp
andl
icebp
dec
sub
and
fimuls
lods
inc
xor
xor
jns
daa
inc
mov
rorl
fistl
fisubl
in
pop
mov
add
fistl
jmp
xor
xorb
xchg
mov
fadds
pop
pop
mov
fisubrs
add
sbb
adcb
testb
or
fldt
pop
xchg
jbe
jge
push
imul
vunpcklps
cltd
xor
sbb
cmc
aam
mov
scas
push
cmp
fwait
call
xor
pop
les
xchg
imul
lcall
lds
call
fldenv
sub
mov
mov
js
testb
sahf
int
cmp
pop
addb
into
jo
test
jl
and
adc
or
sub
adc
sti
xor
test
aaa
outsb
cld
push
dec
mov
nop
and
mov
scas
ljmp
lds
push
shrl
iret
push
mov
push
sbb
xor
or
fldt
jmp
mov
sub
push
fs
mov
cs
adc
stos
dec
mov
cmp
dec
sub
xchg
std
movsl
movsl
push
shlb
pop
xor
icebp
lods
shll
jbe
push
out
push
jmp
adc
movsb
pop
xchg
std
pop
aad
pop
xor
sbb
dec
sbb
fsubl
push
arpl
mov
sub
jns
mov
push
mov
out
pop
stos
jp
sbb
cmp
sub
pushf
fsts
adc
cltd
aam
stos
stc
pop
pop
fstps
movsl
or
mov
arpl
pop
inc
je
xor
pop
xor
pop
neg
sub
jg
xchg
adc
ss
fld
mov
adc
clc
movsl
mov
push
cmp
add
cmpsl
xchg
mov
inc
lods
pop
xlat
and
cmpsl
pop
mov
xor
mov
cmc
mov
jns
xchg
andb
out
inc
mov
scas
add
clc
jno
pop
hlt
mov
ss
mov
mov
xlat
mov
jle
into
and
cmp
lea
addr16
stos
lods
pop
adc
pushf
ss
fstl
mov
and
ss
fisttpl
les
ss
ficompl
loopne
pop
push
ljmp
les
inc
inc
gs
fldt
rcrb
stos
ja
std
sbb
fcmovnb
mov
orl
mov
sbb
out
pop
xchg
pop
sbb
in
lret
mov
jns
lahf
cmp
loope
ficoms
push
adc
xor
movsl
outsl
cmp
or
or
iret
out
xor
cmp
pop
lods
data16
mov
push
mov
in
sbb
sbb
pushf
outsl
cmp
and
lock
insl
sub
sbb
insb
test
sub
test
cltd
mov
sub
push
add
sub
push
mov
pop
je
aas
xlat
ret
xchg
mov
lret
or
mov
cs
jne
inc
mov
mov
in
sti
xor
xor
cmp
and
dec
into
dec
cld
dec
addr16
fimull
sti
adc
dec
lret
stc
imul
inc
fldt
or
sub
xchg
xlat
out
cmc
popf
cld
or
repz
decb
mov
sbb
pop
jns
jl
frstpm(287
jge
xor
and
cli
cld
insl
ds
xor
orb
push
shl
dec
repnz
push
or
fwait
ds
xor
add
pop
and
insb
fiadds
aam
fbstp
movsb
jno
cmp
imul
sbbb
pushf
push
dec
cmp
cmpsl
dec
fidivrl
test
loopne
jb
adcl
pop
push
jo
nop
loop
nop
iret
xor
mov
jecxz
cs
fidivs
dec
cmp
cli
inc
xlat
dec
insl
js
xchg
xchg
out
dec
out
out
xorl
push
and
std
mov
push
pop
sbb
lock
ljmp
sub
test
negb
pop
jmp
cltd
and
daa
mov
push
sub
cmp
test
or
push
imul
fs
sti
ficoms
push
mov
sbb
not
mov
xchg
push
dec
or
and
jne
les
movsl
mov
dec
mov
fsts
popf
mov
sbb
cmpsl
inc
inc
into
fisttps
mov
cmp
call
mov
sub
xor
or
push
addr16
mov
arpl
ret
push
cmpsl
xchg
dec
pop
cmp
cs
pop
add
mov
mov
addr16
sbb
in
dec
mov
mov
mov
jl
xlat
imul
mov
dec
or
ficomps
add
mov
es
xchg
imul
stos
xor
out
ret
mov
or
adc
imul
sub
xlat
push
inc
outsl
lods
pop
pop
pop
push
inc
jae
pop
das
testl
adc
xlat
lret
lahf
push
cmp
push
pop
pop
stos
xchg
iret
movsl
adc
dec
lahf
xor
cmp
ss
repnz
inc
loope
cmpl
lahf
and
mov
lds
js
rcrb
add
addr16
leave
das
mov
cltd
xchg
imul
movsl
xchg
adc
aaa
fsts
js
mov
mov
sub
pop
lret
cmpsb
or
and
and
lods
fstps
push
pop
ds
lahf
int3
addr16
fmuls
les
fucomi
add
flds
stos
cs
pop
mov
cmpsl
sbb
cs
mov
loop
je
cmp
sub
add
mov
mov
pop
push
xchg
lahf
pop
adc
cltd
std
inc
jae
std
inc
xchg
ret
add
xor
dec
dec
sub
and
mov
push
sub
push
int3
inc
cmp
cld
movsl
repz
shll
inc
les
jl
mov
add
stos
into
push
inc
data16
nop
dec
test
dec
fs
ret
push
pop
sbb
xchg
dec
or
popa
fcmovbe
out
imul
and
es
jo
std
or
jno,pn
xchg
push
push
out
popa
ja
or
aam
mov
jo
popf
mov
out
add
push
cld
mov
inc
inc
mov
push
cmp
dec
dec
xor
sbb
ret
lret
push
je
aas
add
pop
sbb
jp
sbb
fistpl
data16
arpl
repnz
push
push
jg
jecxz
push
inc
and
jl
mov
insb
pop
push
cmp
add
std
inc
stos
lahf
xchg
call
sbb
adc
adc
movsl
jmp
in
jmp
out
mov
addr16
mov
pop
xchg
push
jns
inc
or
out
aas
jl
push
ret
adc
jle
inc
das
or
mov
sbb
cmpsl
xchg
subl
icebp
loopne
jg
lcall
aaa
sbb
push
pop
pop
gs
mov
rcr
inc
sbb
aaa
subl
cmp
xor
inc
pushf
cs
pcmpeqd
fiaddl
lock
in
fsubrl
dec
jb
sub
enter
or
enter
je
add
and
add
mov
adc
je
out
xor
imul
into
pop
jns
in
psubsw
fisubs
pop
fimull
outsl
sbb
in
in
in
out
pop
sbbb
stos
inc
andb
mov
dec
daa
mov
lods
lock
cmp
and
xorl
or
gs
cmp
push
mov
push
pop
daa
bound
loop
adc
xor
ss
mov
adc
push
xor
add
sub
je
cmp
jg
jno
stc
dec
pop
cmp
and
pop
lods
mov
sub
push
repz
popf
add
fisubrl
add
andl
lahf
ret
add
xor
xor
fcomp
mov
sbb
xlat
cmpsb
lret
rorb
cmp
pop
bound
imul
mov
pop
jb
and
add
adc
jne
xchg
mov
mov
sub
nop
jns
mov
jae
push
pop
repnz
sbb
add
jnp
xlat
sub
push
xor
ror
add
sub
mov
je
mov
sub
sti
sbb
dec
mov
inc
sbb
aam
mov
nop
cmp
clc
data16
fimull
adc
shll
les
or
xor
and
mov
cs
xchg
cli
xor
add
outsl
stc
mov
fsts
fsubrl
xchg
mov
and
nop
orl
cmp
add
dec
and
cmpl
add
dec
jb
leave
shrb
out
jne
shl
jp
lcall
test
mov
and
lret
lds
mov
arpl
fcomi
testl
push
test
cltd
loope
mov
jo
jp
mov
xor
loope
and
pop
fcmovnbe
mov
mov
popa
lods
inc
xor
pop
pop
ljmp
fisubs
inc
pop
mov
and
mov
adc
mov
mov
push
inc
pop
add
push
push
sub
fisubrl
dec
int3
mov
rorb
jno
stos
enter
ja
push
push
loopne
xor
push
movsb
adc
jp
xor
mov
ds
or
mov
add
inc
lahf
dec
sbb
pop
or
fnstenv
xorl
dec
cmp
arpl
xor
imulb
sbb
fcmovne
pop
lods
jno
cmp
push
cs
mov
mov
cli
mov
subb
mov
dec
mov
cld
mov
nop
push
add
add
adc
outsb
push
pop
test
mov
lock
mov
jae
xor
or
sub
xorb
push
mov
mov
popl
lret
jl
stos
xlat
dec
xor
sbb
jp
sbb
movb
push
ja
xchg
sbb
jnp
dec
dec
push
jae
pop
pop
cmp
push
stos
mov
out
cmpsb
push
sbb
xor
outsb
or
insb
dec
cmp
addr16
fs
mov
outsl
xor
mov
inc
xor
pop
pop
dec
add
jmp
fnstsw
adc
xor
daa
popf
fs
out
xchg
mov
jns
call
cmpsb
call
lea
shlb
adc
lcall
popf
lcall
in
pop
jns
sub
orl
and
insl
mov
xor
faddl
cmc
addr16
cmp
test
mov
xor
dec
pop
iret
mov
cmc
cmp
xor
sub
cs
outsl
stos
mov
sub
scas
push
or
pop
sbb
add
insl
xlat
insl
xchg
jae
lcall
aam
dec
scas
xor
push
dec
push
xor
sub
xor
and
jae
xchg
shlb
sub
xchg
cmp
xor
out
sbb
out
cs
mov
clc
fidivs
mov
fucomp
cmp
dec
ror
mov
or
rclb
stc
xchg
mov
fimuls
movsl
push
pop
out
xlat
pushf
rorb
repnz
pop
sbb
cmp
pushf
ret
and
stos
and
adc
mov
mov
adc
cmp
sub
out
lahf
cwtl
jmp
jne
inc
stos
pop
leave
push
and
popf
pop
and
xor
jle
pusha
mov
fnstenv
shlb
xlat
pop
pop
push
movsb
ret
or
ret
jmp
or
cmp
sti
pop
jns
cli
out
push
cmpsl
cmp
cmp
cs
push
orl
iret
dec
lock
mov
push
add
jecxz
repz
xlat
mov
sub
xchg
nop
pop
pop
xor
shl
in
ja
popf
dec
sub
and
sahf
lcall
sbb
fstpt
xor
jg
sti
sahf
aam
rclb
in
fwait
mov
cs
add
sub
push
mov
and
pop
add
inc
mov
sub
xor
loop
fnstenv
imul
mov
shlb
cs
rorl
jae
rcl
fprem1
out
sub
inc
movsb
mov
clc
ret
movsl
movsb
aam
ret
mov
cmp
dec
icebp
daa
pop
jmp
fildll
clc
mov
or
xor
dec
jle
sbb
xchg
dec
imul
pop
xor
and
enter
adcl
call
add
leave
fistl
js
negb
xchg
or
jno
inc
sbb
mov
mov
dec
stos
fisttpl
jns
out
sub
loopne
xchg
fldenv
add
enter
inc
loopne
sbb
scas
or
lret
ficoml
push
ja
push
xor
jl
rorl
push
or
xchg
fldt
push
ljmp
dec
daa
int
inc
nop
sbb
in
outsl
jno
dec
add
mov
adc
and
pop
xchg
shlb
sbbb
push
and
test
mov
enter
add
sub
aam
adc
les
out
pop
mov
out
stos
fisubrl
mov
mov
xor
lret
aam
enter
adc
push
xchg
lods
mov
jmp
mov
dec
pop
dec
mov
xor
sub
pop
roll
fnstenv
bound
stc
pop
add
inc
mov
jno
icebp
jnp
fsincos
pop
pusha
les
addr16
adc
push
xor
gs
sub
xchg
jecxz
sub
or
das
call
mov
sbb
and
mov
fidivs
push
push
or
mov
and
xorl
or
mov
and
jno
movl
lock
adc
into
dec
test
outsl
and
jb
call
xor
or
and
stc
cmp
push
pop
leave
jg
out
loope
pop
sub
adc
dec
outsl
xchg
or
xchg
out
addr16
mov
fcmovbe
stos
add
mov
jb
das
or
push
add
mov
jns
fsts
leave
faddp
mov
jg
mov
pop
jg
jge
fldl
xor
push
jl
daa
aam
jp
mov
xor
xchg
addr16
xlat
mov
push
xor
fnstcw
dec
popa
pop
cli
jo
xlat
or
outsb
jl
addr16
icebp
test
and
or
stos
mov
or
daa
mov
scas
xor
ret
out
and
and
mov
push
dec
outsl
xor
and
sarl
jle
shrb
lods
and
jmp
fidivs
push
mov
cli
xor
int3
mov
cld
gs
sub
imul
push
or
adc
fistpl
and
sar
jno
jbe
pop
mov
dec
xchg
jmp
test
push
sub
mov
test
cmp
into
mov
pop
outsl
jb
enter
fwait
cmp
and
pushf
push
fcomps
ds
inc
lods
daa
not
push
fcmovbe
popf
or
jecxz
jbe
pushl
or
stc
mov
lock
test
mov
sarl
fsts
mov
mov
xlat
loop
dec
or
xor
ds
xchg
dec
and
ss
mov
leave
shl
loop
imul
loopne
push
xchg
cmp
or
mov
out
cmp
sub
lret
jo
dec
out
push
push
cmp
push
imul
fldt
in
int3
into
mov
push
xchg
mov
pop
insb
adc
pop
lcall
mov
les
cmp
inc
jnp
push
repz
xchg
imul
cmp
lret
sbb
push
xlat
lods
in
imul
fwait
xlat
insl
dec
push
jbe
repz
outsb
ficomps
cmp
dec
loop
inc
fcomi
jbe
cs
cld
lea
xlat
and
inc
sub
test
clc
imul
cmpsb
jl
or
sbb
test
or
push
mov
adc
xlat
movsb
add
fsubrl
or
gs
dec
shll
mov
add
xor
cs
add
sub
inc
mov
lret
mov
dec
dec
dec
sbb
in
jno
mov
xor
fcmovnu
or
ret
loopne
sbb
ljmp
lret
xchg
adc
ljmp
aaa
pop
and
jp
add
fiadds
xor
adc
andl
lock
call
dec
mov
je
and
fwait
xchg
adc
xchg
ret
add
ret
pop
dec
jae
push
push
pop
sbb
push
sub
fwait
sub
movsb
cld
mov
xlat
sahf
cmc
sti
jecxz
dec
jns
push
stc
jg
xor
mov
lock
not
aas
test
loopne
pop
pop
dec
xchg
add
and
insl
bound
ja
test
mov
and
xchg
pop
cwtl
mov
or
add
and
jb
das
movsl
push
sahf
pop
int
xor
imul
mov
ror
shrl
xchg
and
xor
ds
movsl
in
jle
mov
dec
pop
pop
dec
test
ret
hlt
in
insb
jl
xchg
imul
cli
xlat
fs
xchg
arpl
dec
xchg
jae
test
into
sub
insl
jp
std
addb
dec
xchg
and
lcall
dec
mov
jp
sub
sub
out
nop
lahf
jnp
inc
sbb
fxch
xchg
add
icebp
lea
cmp
sub
inc
fldenv
repz
xor
das
jle
cwtl
and
inc
push
xchg
cli
and
loop
fs
dec
lds
push
xor
test
insl
xor
xchg
jecxz
sbb
daa
and
dec
sbb
loope
xchg
pop
push
lret
test
movsl
lret
jae
insb
jae
jp
pop
or
in
rolb
dec
xor
rcrl
jp
call
shrl
insl
jae
and
fdivp
mov
ljmp
add
mov
test
xchg
and
or
fs
fidivrl
fdivrl
jno
xlat
popa
ss
sbb
mov
daa
jae
pop
movsb
cltd
mov
sti
push
scas
pop
inc
dec
divb
ljmp
cmc
mov
or
push
cmp
or
mov
idivl
sub
push
fiaddl
lcall
push
mov
cmp
cli
outsl
and
fcmovnb
addr16
mov
cmp
mov
enter
push
stc
stc
roll
push
ret
jbe
jns
pop
push
adcl
lea
test
push
mov
jo
aam
and
xor
cmpsb
icebp
int
push
pop
jnp
jns,pt
and
mov
sbb
ljmp
subb
bound
pop
cmp
jbe
sub
repz
cmc
iret
jg
xor
insb
aas
add
adc
and
adcl
or
xor
sub
cmp
sbb
stos
pusha
pop
fsts
push
or
shrl
mov
in
mov
jns
push
enter
mov
fcomp
popf
lods
xlat
test
pop
jo
lea
pop
andl
xlat
shl
dec
imul
or
movsl
sbb
cmp
dec
and
lcall
or
je
sbb
movsl
cs
inc
sub
sub
lock
movsb
flds
cmp
sbb
jge
inc
jge
mov
add
arpl
xor
roll
cmp
aaa
fistpll
mov
pop
cmp
dec
sub
cmp
push
push
sub
sub
mov
rorl
and
popf
test
xchg
clc
fidivrl
xor
jl
mov
pop
repz
mov
lods
mov
cmp
in
and
dec
std
xor
xlat
mov
aad
jmp
jmp
out
and
sub
pop
leave
mov
dec
sub
xor
shrb
jl
fucomip
dec
adc
movsl
push
mov
xlat
cmp
mov
ja
xor
scas
lds
aas
sub
roll
cmpl
int3
test
inc
lcall
dec
mov
dec
inc
push
cmp
sbb
push
sbb
fs
fdivr
pop
xchg
lods
adc
in
ss
push
mov
repz
test
lahf
push
fcomi
xchg
push
imul
xor
imul
dec
repz
jmp
dec
movsb
lock
fcmovnu
sbb
inc
xchg
lret
subb
jp
roll
sub
test
inc
push
pop
push
push
dec
sbbb
jg
mov
popa
add
xchg
out
roll
fcomi
fimuls
and
stos
xlat
adc
and
xchg
out
out
or
pusha
sub
adc
popa
insb
push
sbb
sub
jg
cmp
in
adc
add
jmp
imul
sbb
xchg
pop
push
dec
jae
fnstenv
movsl
add
pop
enter
icebp
cmp
mov
inc
insb
icebp
jb
stos
push
sbb
add
mov
or
or
xlat
fcmove
pop
pop
push
movsl
dec
ja
insl
ja
inc
mov
shll
cmp
and
mov
ret
xor
cld
inc
lahf
dec
clc
stos
clc
xchg
out
clc
dec
out
aad
fwait
mov
test
xlat
in
sub
or
push
test
xchg
dec
sbb
lahf
xor
test
insb
mov
jae
lcall
outsb
sbb
cmp
inc
cs
cld
test
cmc
test
out
es
bnd
rcrb
xchg
sbb
mov
jp
mov
xlat
in
xchg
push
pusha
out
push
testl
outsl
xchg
stos
subl
jp
mov
push
and
cwtl
cld
arpl
ja
mov
push
xlat
and
enter
stc
mov
stc
jb
push
lret
pusha
enter
sti
loop
xor
es
mov
dec
xchg
cmc
repnz
jmp
mov
and
rorl
hlt
dec
jb
pusha
outsl
ds
icebp
or
icebp
jae
mov
pop
jecxz
xor
push
pop
cs
fidivs
xor
fwait
and
sbb
xor
cmp
add
and
xlat
loop
flds
mov
call
dec
enter
es
test
bound
sub
pop
push
int3
jne
in
and
xorl
mov
fsubl
pop
dec
jg
sti
dec
xlat
movsl
mov
pop
les
out
testb
roll
movsl
dec
pop
test
xor
pop
test
fldcw
mov
loope
xor
cmp
shll
xlat
loop
pop
repz
call
pop
sbb
arpl
rorl
mov
mov
and
dec
or
and
jmp
dec
sub
adc
pop
and
sbb
aad
gs
push
js
adcl
xchg
sub
pop
mov
sbb
popa
dec
inc
xchg
lret
adc
pop
clc
movsl
sahf
dec
jne
mov
in
fistl
cmp
pushl
dec
cmpsb
pop
adc
mov
push
dec
sub
loop
inc
call
arpl
mov
dec
inc
mov
hlt
mov
out
paddb
pushf
les
push
add
sbb
andl
idiv
xchg
jl
inc
insb
fcmovne
sbb
gs
jmp
test
xlat
pop
cmp
and
or
mov
sub
mov
cmp
pop
in
cmpsb
mov
dec
mov
mov
test
xchg
adc
xlat
cmpsb
stos
lods
push
loop
lea
in
dec
shl
pop
jne
adc
jbe
nop
mov
or
paddb
dec
cs
repz
insl
xlat
push
cli
inc
sti
outsl
push
fstpt
adc
sub
repnz
std
push
test
or
divl
jbe
pop
cmpsl
mov
in
inc
ret
test
push
jg
jnp
sbb
cli
push
pop
lock
shll
mov
popa
sub
push
nop
sahf
ljmp
mov
sti
cs
pop
or
mov
std
ret
in
loopne
sahf
outsl
fiadds
xlat
pop
rcll
xor
adc
jg
add
xor
xchg
push
pop
daa
xchg
aad
lret
fisubrl
into
dec
ds
push
adcb
sub
push
xor
cwtl
fs
jno
dec
pop
pushf
inc
adc
fsts
jl
fisubs
sbb
imul
push
stos
popa
xchg
push
jns
fcomi
mov
and
mov
mov
out
jb
iret
aas
dec
sub
lods
jg
jle
sbb
pop
lock
dec
pop
cmp
pop
int
leave
inc
movsl
shl
inc
xchg
pop
adc
pop
loop
dec
popa
inc
daa
mov
jl
es
rclb
fnstcw
cmp
outsl
or
in
cmp
lret
inc
xlat
cs
imul
pop
arpl
jmp
stos
iret
sbb
and
dec
xor
inc
ljmp
and
fistpl
rolb
sbb
imul
jns
mov
pop
cmp
cmpsb
pushf
shrl
jl
and
xlat
repz
inc
or
imul
es
sub
clc
dec
pop
subl
jo
shll
mov
faddl
fildl
xor
pop
or
testb
or
sub
dec
test
xchg
xchg
or
adcb
imul
cwtl
inc
push
or
push
sbb
sbb
iret
js
or
or
andl
jns
cmp
pop
lea
test
popf
mov
push
es
popf
and
push
and
jno
mov
push
sub
cmp
cmp
add
and
or
pushl
nop
jg
call
jl
clc
push
sub
pop
ljmp
ss
adc
xor
andb
push
mov
lcall
add
xchg
lret
jne
xor
jle
inc
mov
mov
cmp
xchg
imul
add
jle
mull
mov
cmp
aam
cltd
lea
sarb
and
xchg
dec
mov
rclb
stos
in
inc
and
mov
push
aad
mov
movsb
ret
pop
adc
pop
cmp
push
pop
stos
fwait
jb
mov
lcall
repz
dec
insb
xchg
xchg
adc
sub
sub
fcmovnb
movsl
repnz
mov
sub
out
inc
mov
test
repnz
mov
stc
sbb
imul
adc
pop
dec
mov
xor
dec
add
sbb
std
bound
pushf
xor
mov
inc
dec
mov
mov
inc
repz
sub
fs
cmp
dec
push
cs
pop
inc
jmp
sub
add
shll
mov
in
xor
jg
jb
adc
mov
lahf
mov
xor
dec
jl
std
add
mov
ret
pop
xor
sbb
push
lcall
pop
jp
je
cmpsb
loopne
mov
sub
push
inc
xorb
aam
in
cs
push
xor
movsl
out
mov
mov
jl
pop
mov
stc
int3
divb
frstor
sub
out
iret
stos
xchg
and
vmread
repz
xor
mov
in
and
mov
xchg
mov
icebp
push
mov
lret
pop
and
nop
mov
jne
test
mov
scas
cmc
xchg
mov
push
inc
aad
cmpsl
sbb
or
or
repz
jmp
mov
sbb
xlat
mov
sarl
cld
cmp
jle
dec
sbb
adc
ja
sbb
dec
jl
pop
xor
push
int3
loop
mov
pop
fcompl
xlat
mov
fcomip
sub
mov
inc
add
movsb
stos
push
pop
mov
lock
xor
rorl
insb
and
cmp
pop
iret
movsb
mov
mov
pop
pop
sbb
sbb
cli
adc
incl
pop
xor
std
xchg
andl
mov
pop
iret
xchg
adc
sub
jmp
insb
ljmp
push
movsl
jmp
ret
mov
pop
rorb
lds
ljmp
lods
and
sbb
popf
dec
shlb
hlt
imul
inc
adc
dec
pop
xchg
add
and
dec
orb
std
xor
shl
out
xchg
cltd
lcall
xor
and
push
outsl
mov
je
ja
fs
jmp
in
xor
iret
repz
xor
sbb
and
and
cmp
bnd
aaa
aam
imul
push
mov
int3
sub
xor
mov
adc
push
ds
inc
cltd
negl
in
out
sbb
xor
iret
xor
nop
sbbl
inc
lds
pop
sub
insl
fstl
sub
pop
fsin
push
divb
dec
cmp
pop
out
cmp
int3
mov
mov
movsb
jo
add
dec
leave
dec
push
xor
xchg
movsl
jbe
xor
imulb
nop
or
push
xchg
push
jmp
cltd
inc
jns
push
je
movsb
pop
inc
test
and
stc
xorb
mov
icebp
cltd
popa
fstpt
sub
push
jg
add
fcmovbe
cmp
stc
mov
cmp
xor
jmp
sub
sub
add
mov
aad
mov
in
xchg
lock
or
lcall
pop
stc
pop
mov
in
iret
mov
pop
push
addr16
jl
mov
loop
insl
sub
adc
mov
ret
ficomps
mov
or
loope
shlb
xor
pop
in
stc
mov
inc
push
inc
ss
jo
push
sub
test
cmp
subl
fidivl
stos
pop
das
xor
movsl
mov
in
jnp
pop
inc
aad
cmp
sbb
cwtl
sub
jnp
test
xchg
mov
lea
and
nop
bound
or
aas
imul
bnd
fiadds
and
in
inc
stc
int3
mov
adc
outsl
sbb
adc
or
fmul
add
fmuls
clc
popa
jle
call
nop
cltd
jle
rolb
hlt
enter
push
dec
push
les
dec
js
push
pop
rolb
jno
jns
movsl
addr16
sti
stc
shll
and
mov
and
inc
and
fildl
xchg
cs
int3
mov
pop
jae
inc
jge
sbb
shll
inc
push
pop
mov
add
push
leave
andl
aas
add
out
dec
inc
ret
int3
cmpsl
pop
push
xor
insb
xor
repnz
xlat
or
sbb
jecxz
or
xchg
bnd
lea
pop
jae
sub
pop
pop
popf
enter
sbb
mov
xor
cs
test
mov
pop
fsts
mov
mov
out
imul
rclb
sub
jno
jno
fst
mov
dec
std
add
xchg
test
pop
push
mov
int3
lea
std
jmp
dec
lret
or
fisubs
cli
mov
into
pop
aam
sbb
sub
jno
xchg
or
and
or
daa
dec
and
das
xor
or
add
push
test
repnz
test
cmpsl
fldenv
mov
inc
mov
fwait
push
std
mov
dec
ret
add
jmp
aam
adc
test
mov
mov
lret
fwait
mov
aaa
mov
repnz
pop
jno
mov
pop
xchg
jno
mov
xlat
popa
cmpsl
xchg
fsub
cmp
out
stos
pushf
daa
stos
mov
pop
cmovbe
or
mov
pop
gs
pop
dec
xor
subb
fisubl
orb
lcall
pushf
cmp
scas
push
jl
pop
sbb
lret
inc
push
push
mov
sub
loopne
mov
subb
and
popf
call
jno
sti
leave
adc
test
dec
adc
mov
sahf
sbb
push
push
push
fcmovbe
cmp
jno
mov
and
xlat
xchg
push
push
mov
imul
xchg
jmp
ret
jl
scas
xor
insb
mov
enter
cmp
and
out
mov
out
inc
or
dec
into
or
popa
test
imul
jae
mov
xchg
add
jno
inc
mov
mov
pop
sub
xor
and
out
popa
test
int
push
sub
outsl
fnstcw
pop
add
jno
adc
jp
ror
addr16
jecxz
xlat
loopne
mov
aam
daa
mov
dec
add
xlat
cmpsb
arpl
push
fcmovnbe
repz
negb
out
push
xor
lods
adcl
and
adc
mov
push
inc
jns
push
mov
lahf
push
xor
cmp
popf
adc
push
or
lahf
inc
pop
mov
and
mov
cmp
cmpl
xlat
pop
inc
mov
add
addr16
aad
popf
mov
js
sub
xor
test
aad
adc
push
mov
jp
mov
enter
cmp
jnp
push
adc
push
movsl
loope
imul
ss
stos
imul
mov
out
xor
mov
adc
fsub
and
fstps
lcall
sub
cmp
leave
pop
or
dec
fstpt
push
jg
mov
int
xchg
les
adc
pop
jmp
xor
les
and
std
cmp
and
xor
push
ret
mov
push
push
ljmp
mov
cli
movsb
add
and
cmp
xor
fidivl
xchg
push
push
jne
jp
mov
or
mov
hlt
cmp
sbb
jge
out
jg
mov
jl
and
jno
mov
cmp
jnp
daa
and
pop
pushf
push
mov
out
push
fcoml
faddl
movsl
xor
fisttps
jmp
mov
pop
mov
push
sbb
imul
fsubp
xchg
addb
xlat
test
pop
push
xchg
pop
mov
inc
jmp
loop
xor
pop
xchg
rorl
or
jg
or
je
mov
adcb
add
jbe
loope
imulb
inc
jae
mov
push
mov
adc
and
xor
js
add
push
mov
xlat
frstor
pop
fwait
mov
test
mov
xor
sub
push
cmp
ror
push
xor
and
push
push
movsl
aaa
lock
fptan
cmp
dec
add
lahf
mov
sarl
jle
int3
or
fstpt
push
inc
adc
fidivs
das
jne
add
jno
cmc
xor
add
enter
outsl
shrl
in
cmp
mov
insl
fnsave
repz
adc
mov
loopne
xor
stc
fiaddl
pop
push
add
cmpsl
inc
mov
mov
movsb
xor
jno
and
xchg
jbe
sub
and
js
and
mov
adc
jns
dec
addr16
fcmovu
pop
and
inc
inc
mov
mov
out
and
pushf
les
xlat
sbb
jns
pop
rcrl
es
pushf
fildl
in
pushf
out
test
cli
push
sub
dec
jmp
pop
and
jo
adc
push
dec
int
test
push
movsb
shrl
sbb
add
scas
jmp
xor
dec
jmp
cld
pop
lahf
cmp
pop
push
rcr
sub
and
push
aaa
and
clc
jae
repz
lret
ljmp
adcl
clc
cmp
rcrb
mov
push
adc
fidivrs
icebp
xlat
sub
testl
movsb
xchg
in
or
pop
cmp
adc
loope
bound
sbb
sub
xchg
clc
imul
out
xchg
lret
ret
mov
jns
bswap
cmp
jae
lea
cld
shrb
daa
shlb
add
jl
mov
fisttpl
sub
lret
movsb
lea
sub
sbb
psadbw
inc
shl
icebp
push
js
and
cli
aaa
pop
sbb
inc
or
adc
pop
push
sub
push
dec
xlat
or
xchg
negb
push
xchg
dec
mov
js
mov
dec
or
xchg
or
stc
rorb
push
push
mov
es
mov
shll
jp
subl
subb
xlat
fisubs
add
arpl
jns
mov
in
leave
pop
test
jo
imul
xlat
sbb
andb
cwtl
and
mov
mov
ja
scas
imul
je
sub
mov
sbb
jecxz
ja
bnd
jle
fstl
and
fsubrs
sarl
lds
push
xchg
mov
cmp
lea
mov
ret
jbe
out
pop
repz
into
mov
jne
inc
shll
mov
xor
fcmovnu
xor
test
adc
xlat
xchg
mov
sbbb
mov
mov
push
outsl
clc
test
jmp
ljmp
nop
pop
mov
bound
ficomps
cmp
mov
subb
bound
fisubrl
add
push
sub
hlt
std
cs
sub
jnp
jp
loope
pop
das
jl
xor
and
std
lds
stos
push
test
xor
add
add
dec
sbb
outsl
sbb
lret
in
push
cmp
xor
xchg
lcall
fwait
dec
ja
sti
cmp
xlat
fsubr
shlb
mov
nop
pop
scas
aad
jp
ds
loope
fnstcw
mov
jecxz
pop
loopne
orl
shrb
dec
dec
sbb
push
mov
cmp
call
fwait
push
mov
nop
push
out
fwait
add
push
xor
push
lret
fsubr
mov
mov
aaa
mov
pop
xlat
aaa
test
mov
add
push
mov
sbb
sar
aad
aam
stc
sub
mov
shl
dec
lcall
pop
mov
mov
xor
sbb
dec
push
jae
fwait
cmp
hlt
addr16
in
cmp
fnstenv
xlat
mov
rcrb
out
and
fcmovne
sbb
mov
sbb
loope
das
sbb
adc
xor
cs
inc
cmp
rorl
sub
xor
insl
mov
arpl
pop
loope
int3
test
or
inc
dec
jmp
repz
inc
rcll
cmp
dec
test
push
insl
cwtl
sub
sbb
pop
cmp
lock
or
cld
pop
xchg
cmc
xor
push
dec
adc
jg
cmp
mov
mov
push
pop
cmpsb
out
cwtl
dec
mov
adc
xchg
inc
call
and
xor
mov
or
xlat
insl
lahf
test
bound
sbb
jge
lods
push
lea
jns
push
xor
sbb
mov
fidivrs
pop
jno
add
push
add
jmp
dec
add
test
ret
sbb
mov
cmp
std
and
imul
xor
inc
lcall
adcl
shlb
stos
xchg
pop
outsb
fsts
gs
xchg
xchg
test
push
pop
stos
fwait
cwtl
mov
shll
xor
pop
hlt
xor
cmp
add
mov
add
sahf
fimuls
push
stc
mov
lea
imul
jo
dec
les
cwtl
mov
pusha
cmp
movsl
std
mov
popa
movsb
sarb
jge
lcall
movsl
mov
pop
sbb
dec
and
push
cmp
pop
bound
or
xchg
int3
dec
and
icebp
dec
and
sbb
inc
mov
xchg
pop
sbb
sbb
mov
dec
sbb
fstpt
mov
lahf
lea
out
pop
xlat
xor
mov
or
test
fcmovnu
imul
js
xlat
out
mov
mov
fidivrs
or
adc
int3
pop
pusha
scas
mov
dec
popf
or
and
mov
cmpsb
mov
pop
xchg
sbb
xor
cmpsb
mov
push
add
pop
mul
xor
lret
cli
fwait
daa
jnp
xor
mov
les
cld
sbb
push
fcomps
inc
pop
adc
jae
cmpl
movsl
push
data16
push
loop
shrb
mov
xchg
arpl
dec
sbb
push
pop
cmp
jbe
js
or
adc
cmp
jo
push
push
mov
inc
test
mov
ja
sub
xor
std
in
lret
lret
mov
sub
dec
fcmovnbe
xor
mov
jmp
sbb
sub
fldt
in
pop
lret
sahf
mov
fnstsw
pop
sub
in
xchg
mov
arpl
pop
scas
cmp
pop
sub
mov
push
jg
cs
inc
mov
loope
or
mov
icebp
lods
jno
pushf
push
mov
imul
clc
fisubl
lods
dec
add
mov
bound
xor
or
sbb
jecxz
cmp
arpl
sub
push
xlat
nop
dec
setnp
fsubrl
arpl
sub
cmp
sub
xchg
adc
pop
adc
and
xor
test
dec
sub
cld
cmp
clc
push
sbb
or
jne
cmpsl
xchg
arpl
out
imul
xlat
xchg
inc
clc
pop
or
mov
dec
ja
sbb
dec
and
pop
mov
dec
repz
lret
adc
pop
int3
add
pop
mov
adc
out
add
pusha
mov
sub
iret
sub
xchg
movsb
orb
arpl
or
dec
push
loop
jg
jae
xchg
iret
jmp
add
dec
and
inc
shll
add
mov
push
adc
js
cli
inc
mov
sub
in
dec
add
jecxz
mov
or
cmp
xor
push
and
pop
fsts
and
jg,pt
loopne
sbb
adc
sub
std
ljmp
fcmovnbe
mov
xchg
xchg
repnz
cmp
cmpsl
mov
rcrl
mov
sub
dec
mov
push
xor
mov
rcrb
popa
adc
test
sbb
fisttpl
xchg
mov
xor
call
push
sub
mov
push
cltd
imul
push
stc
mov
repnz
adc
push
int3
xlat
hlt
inc
std
fildl
cs
and
adc
ret
add
dec
mov
xchg
push
mov
cmpsl
faddl
push
sub
rcrb
shl
sbb
mov
jae
jecxz
iret
out
adc
out
mov
push
cmp
jmp
jne
fisubrl
setae
mov
sub
ja
push
addr16
sbb
sub
dec
cmp
xlat
scas
std
fcompl
pop
mov
mov
fldenv
mov
sub
adc
sbb
mov
mov
and
mov
jle
into
inc
xchg
pop
cmpl
adc
xchg
sub
mov
shrl
repnz
cltd
mov
pushf
cmpsl
inc
xlat
jmp
push
or
addb
and
icebp
xlat
jp
sub
ds
add
faddl
xchg
nop
bound
sub
fiaddl
push
add
in
and
fldt
repz
shr
jge
notb
outsl
lahf
xlat
and
xor
add
mul
cmp
pop
mov
bound
movsl
or
test
mov
cmpsb
jne
enter
adc
outsl
xchg
les
daa
push
sub
pop
nop
sahf
fs
fidivs
xchg
and
cmpb
into
cwtl
jns
out
aad
test
adc
inc
cmpl
cwtl
sub
bound
movsb
scas
push
mov
ja
fcmovnu
xchg
arpl
xchg
xor
insb
outsb
push
shrb
and
test
mov
or
mov
sub
mov
out
push
pushf
jo
xchg
jp
sbb
push
lahf
mov
push
mov
push
push
cmp
push
mov
shll
aaa
adc
insl
ds
addr16
nop
hlt
mov
mov
iret
repz
cli
rclb
enter
pop
and
fists
ja
mov
lret
mov
cmp
pop
pop
fstpt
pop
push
or
fcomps
cmpb
inc
std
jae
add
fwait
cmc
dec
adc
inc
scas
push
ret
scas
test
fcmovnbe
add
mov
sbb
mov
mov
and
mov
rorl
xor
nop
inc
mov
jmp
scas
in
lea
push
mov
loopne
out
scas
add
movsb
cmpsb
lock
push
xchg
call
and
stos
ret
in
or
ja
dec
xor
adc
ret
iret
out
cmp
lea
pushf
sarl
mov
stc
aam
or
mov
xchg
movsb
xlat
push
add
sbb
je
ficomps
xchg
lret
fwait
pop
iret
or
dec
flds
xchg
rclb
push
inc
sub
dec
shll
movsb
push
push
fisubs
fwait
and
xor
lret
pop
jns
iret
push
fdivl
or
into
pop
pop
lock
rorb
sahf
dec
imul
cmpsl
sbb
jle
xor
sbb
mov
sarb
ljmp
in
pop
jae
xlat
mov
dec
stc
or
push
cmp
jo
and
jge
pop
lahf
les
hlt
popf
stos
jmp
cmp
imul
sbb
dec
jmp
xchg
pop
mov
jl
xor
test
cwtl
stc
mov
pushf
jl
cmp
dec
pop
scas
fiaddl
dec
leave
jns
cmpsb
out
dec
pop
cmp
pop
mov
jge
call
xlat
xchg
ret
out
fsubrp
sti
stc
pop
cmp
sarb
fisubs
xchg
mov
adc
ret
jnp
lret
and
in
push
mov
test
mov
mov
pop
push
mov
cmp
mov
jae
pushf
cmpsb
gs
aad
dec
push
fsubl
movsb
mov
or
push
xchg
hlt
sbb
outsl
imul
pop
aad
sti
jbe
xor
pop
mov
pop
loope
mov
jp
shl
shll
mov
lock
push
cs
mov
dec
fistl
inc
or
jns
aad
stos
sbb
xor
fstpl
xchg
insb
out
fsubl
xchg
lods
dec
std
clc
xorb
jmp
lea
pop
shr
sub
fimull
aaa
lret
shll
xor
sub
xor
cmp
xlat
cs
adc
jmp
xor
nop
divl
xor
stc
mov
inc
ret
inc
icebp
test
stc
mov
jb
xor
adc
inc
stc
jp
lcall
xchg
roll
cld
cld
mov
jp
xlat
test
pop
and
ficoms
jae
fmull
add
mov
add
or
out
ror
mov
push
aas
mov
cld
pushf
xlat
fidivrs
pop
jnp
and
jmp
jl
mov
and
ds
out
cli
aad
and
pop
pop
lahf
mov
out
movq
xor
pop
ret
jmp
addr16
push
ret
xchg
nop
jle
hlt
imul
ss
dec
inc
xor
addr16
jno
pop
test
xor
jo
push
popa
ss
inc
mov
push
movsl
push
pop
pop
insb
and
inc
cwtl
lret
mov
or
arpl
ds
aas
es
mov
jg
cmp
jo
enter
dec
push
jge
push
pop
aam
mov
ffreep
incb
in
and
adc
dec
mov
push
fsubs
cmc
ret
stos
sub
nop
fisubrl
or
mov
icebp
fisttpl
and
imulb
pop
jbe
sti
mov
xchg
lahf
jle
xor
xorb
scas
enter
clc
xchg
jne
stos
pop
lahf
pop
cld
xor
xchg
and
sub
pop
push
mov
cld
cmp
lret
repnz
loop
and
stc
fnstenv
imul
pop
xchg
push
arpl
fimull
jl
pop
outsb
test
adc
mov
mov
cld
mov
cmp
dec
cmp
adc
adcb
mov
mov
rcrl
or
jmp
jns
movlps
jns
fistps
add
mov
xlat
mov
adc
loop
fwait
shlb
mov
mov
xchg
popf
and
inc
insb
stc
fcmovne
faddp
sub
jg
dec
jns
adc
into
test
pushf
sub
push
cld
push
mov
int3
push
add
sub
jo
adc
ljmp
movsl
mov
gs
repz
movsl
adc
sarl
jb
in
lahf
cmp
mov
mov
cwtl
jle
das
mov
js
int3
mov
xchg
out
xor
call
loopne
push
xlat
mov
movsl
jl
jb
dec
xchg
cmp
xorb
dec
addr16
mov
push
iret
pop
push
ror
leave
dec
cmp
add
movsl
iret
roll
cld
and
dec
lds
sbb
movsl
push
push
sbb
push
fcmovbe
out
and
dec
shrb
les
fwait
sub
ret
fdivp
ds
mov
sub
fnstcw
punpckhdq
mov
les
enter
sbb
or
aam
pop
and
fisubl
pushf
cmp
mov
sar
xor
ds
dec
pop
adc
and
fcompl
mov
inc
inc
stos
xchg
out
test
movsl
xchg
and
addr16
fst
mov
sbb
inc
cmpsl
mov
adc
inc
push
call
in
xor
test
inc
fsin
and
out
sbb
sub
cltd
xor
inc
mov
xor
outsl
fbstp
add
int
ret
mov
jp
cmp
loop
sbb
icebp
ljmp
fldt
fists
add
dec
jnp
cmc
xchg
mov
lods
shlb
push
iret
jmp
push
xlat
outsb
sbb
jno
push
inc
xlat
mov
adc
shr
into
jp
xlat
rolb
mov
and
dec
fistpl
loope
push
mov
fsts
addr16
inc
fnclex
popf
sbb
repz
cmp
mov
add
xchg
xor
add
push
pop
add
mov
stc
dec
fistpl
insl
sbbb
cmp
sbb
jb
fucomi
add
lock
loop
lds
pop
ret
push
add
repz
and
adc
or
mov
outsl
fwait
nop
cs
xor
lret
push
fucomi
in
pop
mov
jge
daa
pop
cwtl
lret
and
or
nop
faddl
pop
add
sbb
fdivrl
fldenv
xchg
dec
cmp
inc
dec
jge
push
jmp
arpl
push
mov
fstps
or
xlat
daa
add
xor
dec
jae
xorl
sbb
pop
sbbl
push
imul
stos
fcompl
jae
jb
mov
dec
cli
shrl
mov
fs
xor
enter
mov
pop
pushf
fmuls
enter
fs
mov
push
cmp
jp
sub
push
adcb
sub
add
ja
adc
and
cmp
pop
stc
fwait
adc
insl
shl
jle
pop
fneni(8087
out
std
arpl
pop
sti
mov
pop
arpl
aaa
push
add
sbb
xlat
aas
popf
mov
stos
pop
and
mov
test
dec
inc
jge
addl
or
insb
xor
pop
mov
jg
mov
xchg
xchg
insb
push
mov
lret
cwtl
xor
ret
jnp
ret
add
mov
loop
dec
mov
or
lods
lcall
mov
flds
pop
test
mov
jmp
iret
jmp
call
mov
mov
iret
movsb
test
les
into
outsb
mov
lret
add
rorb
xor
add
aam
into
jp
stc
and
xchg
push
mov
pusha
rclb
rorl
xlat
xchg
outsb
hlt
mov
stos
push
sbb
in
insl
fisubs
cs
xorl
xchg
jmp
xor
inc
cld
in
and
jecxz
pop
es
fdecstp
push
or
push
jne
pmulhw
xchg
cltd
and
icebp
push
imulb
movsl
sub
fsqrt
fidivl
inc
pop
pop
mov
icebp
push
pop
insb
out
daa
cmp
jmp
repnz
scas
ret
jmp
sbb
inc
and
xchg
inc
loope
std
sub
cli
jg
inc
and
ja
flds
hlt
movsb
cli
movsl
scas
and
pop
lock
mov
loope
in
insb
or
mov
xchg
and
sbb
pop
pop
xor
outsl
lock
cltd
ljmp
inc
push
dec
sub
ret
lcall
xlat
fiaddl
sub
imul
pop
inc
jl
orb
sub
jno
outsl
js
mov
push
cmp
inc
jb
push
push
xchg
out
xlat
sbb
jp
sbb
insb
adc
and
fistps
dec
push
mov
cmp
adc
lret
lock
addr16
jne
ret
sbb
jge
mov
xor
les
add
dec
cltd
sbb
les
aaa
fistpl
inc
mov
ss
cmp
xor
push
jne
outsb
loop
gs
jl
jae
or
cld
push
mov
rol
movsl
cmp
jmp
dec
insb
sub
out
inc
ljmp
mov
xor
shll
cmp
jns
js
xor
adc
movsl
bound
sbbl
xorb
adc
cmp
lahf
mov
pushf
shll
sti
sahf
cmp
or
mov
dec
dec
push
addr16
jns
addl
inc
mov
fldcw
mov
xchg
cmp
mov
bound
cmpsb
divl
mov
mov
pop
xor
xlat
dec
sub
add
pop
lods
fidivs
int3
in
movsb
inc
mov
pushf
xor
mov
ret
ficompl
inc
mov
jno
ljmp
test
mov
push
dec
cmp
jno
pop
mov
ljmp
mov
das
pop
lret
popa
mov
mov
inc
int3
stos
jne
mov
scas
pop
and
mov
popf
adc
scas
dec
mov
out
or
and
pop
cwtl
lret
xor
lods
das
xor
pop
pop
outsb
cs
popa
xor
xchg
lods
mov
in
imul
test
push
dec
xlat
or
sti
pop
inc
mov
imul
xchg
xchg
mov
or
ss
loop
fldl2t
fwait
je
mov
xchg
mov
pop
sbb
mov
jne
pop
inc
xlat
pop
mov
push
add
daa
and
imul
outsl
enter
xlat
movsb
cwtl
inc
mov
cltd
xor
fsubrs
fstpt
je
sub
imul
push
fistpl
mov
callw
dec
dec
lret
push
cmp
fstpt
dec
lea
adcl
cmp
xchg
pushf
add
movsb
mov
push
mov
xchg
or
jbe
mov
mov
orl
repz
add
jp
adc
jae
insl
cmp
pop
bnd
fisubl
pop
in
pop
xor
pop
js
jo
orl
call
xchg
inc
xchg
pop
scas
decl
fwait
in
or
xor
jae
lcall
mov
fwait
aam
sbb
xor
imul
sub
outsl
bound
add
outsb
lock
outsl
dec
push
xor
divl
cmp
mov
outsl
pop
inc
mov
stc
stc
pop
xor
push
ret
xor
subl
xlat
dec
push
fwait
jns
xchg
push
mov
sbb
pop
cmp
fsts
std
dec
xlat
jle
or
loope
adc
xlat
imul
push
pop
xlat
in
dec
inc
xor
das
cli
mov
sahf
jecxz
adc
cmp
repnz
test
or
lret
out
jb
cmp
jp
mov
jns
mov
nop
das
push
inc
inc
mov
notl
or
lret
mov
rolb
pop
jle
jo
hlt
lret
adc
cmp
movsb
push
pop
imul
push
fstpt
cs
mov
mov
dec
push
pop
xchg
adc
jge
or
xor
jp
push
inc
roll
loopne
adc
mov
jbe
movsl
dec
xor
sahf
and
or
imul
jl
inc
mov
jno
xor
sbb
rclb
adc
lret
adc
push
sarl
or
in
fwait
stc
or
in
inc
cmpb
stos
sub
mov
xchg
pop
cmp
sbb
mov
pop
test
or
xlat
inc
stos
psraw
ja
in
dec
ret
mov
and
push
xor
cmpsb
jo
rcll
imul
jp
sub
ret
jle
pop
js
popf
push
iret
pop
fimull
jo
jmp
push
cmpl
outsl
inc
lret
mov
jg
out
sub
xlat
imul
and
je
cld
and
push
loope
or
out
xor
movsl
cmp
push
in
jmp
dec
sbb
mov
aas
push
fildl
lahf
mov
scas
pop
xor
mov
les
arpl
insl
push
xor
ror
xor
sub
inc
cmp
out
adc
add
and
dec
lcall
out
inc
insb
jmp
mov
in
xor
mov
fcomi
add
xor
lret
push
jl
fnstenv
arpl
inc
push
test
xchg
inc
mov
aam
add
adc
fistpl
idivl
fwait
jno
inc
jne
pushf
in
mov
jl
jp
movsb
xchg
inc
fildll
xor
fsubl
or
push
pop
mov
or
or
inc
jmp
fldcw
xor
sbb
or
popf
xor
add
or
cmc
mov
test
sbb
jno
sbb
fnclex
adc
jp
je
jae
fsts
push
mov
push
xor
test
mov
mov
cmc
xlat
sbb
aad
test
pop
shlb
push
lock
test
xor
xor
popa
sahf
cld
outsl
cmp
repnz
pop
test
call
imul
mov
jne
movsl
movsb
ljmp
ljmp
pop
dec
add
int3
scas
push
push
lea
imul
mov
xchg
mov
mov
lahf
ds
mov
jne
movsb
jmp
lds
add
xchg
xchg
dec
ss
fstpl
pop
xchg
aaa
cmpsl
push
addr16
push
enter
cmpsl
scas
je
addr16
inc
arpl
dec
pop
and
rcrl
ja
mov
dec
push
mov
jae
sbb
outsb
xor
ja
enter
je
aaa
cmpsb
xor
rclb
fiaddl
out
jmp
xchg
leave
xchg
xchg
sub
dec
pushf
and
cmp
mov
dec
cli
and
dec
cmp
bound
dec
popa
mov
addr16
and
test
or
pop
or
sub
adc
mov
pop
arpl
popf
sbb
stc
in
lahf
xor
pop
ret
and
xor
pop
clc
mov
iret
loopne
adc
roll
add
and
cmp
jl
cmpsl
and
xor
push
xchg
pop
stc
int
jno
adc
out
jns
ret
lahf
cmp
fisttpl
sar
push
sarb
push
mov
or
jmp
inc
jns
xlat
mov
push
ja
xor
mov
sbb
cltd
arpl
push
or
pop
pop
mov
imul
das
scas
fdivrp
inc
sbb
fstpt
pushl
add
xchg
sysenter
or
insb
enter
stos
dec
push
stc
enter
stc
mov
ret
jmp
in
jl
mov
pop
dec
cmp
mov
cwtl
and
bound
xor
loope
fstpt
les
mov
or
pop
subb
cmpb
or
stos
adc
shrb
push
stos
fcmovnbe
movsl
std
out
xchg
std
and
pop
scas
jl
jo
enter
ret
jl
sbb
sub
ds
mov
xor
xor
and
dec
sbb
inc
nop
ret
dec
int3
mov
out
push
sbb
scas
rorl
inc
push
cld
mov
push
fnsave
adc
in
mov
mov
dec
xchg
ret
mulb
int
push
xor
xor
pop
scas
std
xchg
les
mov
lcall
fldcw
popf
inc
ja
ljmp
test
dec
rcrl
sub
dec
and
pop
pop
jle
lcall
rcrl
out
ja
dec
fadds
add
inc
loope
sub
pushf
dec
mov
int3
mov
cmp
inc
test
sti
sbb
fisubrs
data16
push
ds
xchg
push
mov
cmpsb
scas
test
js
mov
enter
ss
ljmp
push
pop
xchg
push
xchg
sbb
cli
cmp
and
dec
xor
or
xlat
in
adcb
stos
adc
vpaddusb
ljmp
jae
inc
shlb
dec
and
adc
jae
push
jns
xor
or
inc
dec
addr16
dec
bound
push
clc
push
jns
aam
push
daa
stc
sahf
icebp
jne
sub
mov
mov
push
xlat
mov
inc
push
gs
imul
pop
push
fcmovnu
mov
repnz
cs
adc
faddl
lock
fisttpl
sti
push
push
xor
hlt
cmp
aam
mov
sub
scas
push
adc
fld
cs
mov
nop
pusha
mov
mov
pop
scas
mov
sub
mov
mov
dec
mov
cmp
test
sub
xlat
xor
inc
sub
imul
stc
cli
sbb
xor
rcrb
sub
out
sub
imul
push
dec
lret
jp
ds
clc
jp
xchg
imul
pop
and
shll
jg
movb
repnz
adc
insb
pop
iret
push
and
test
rcrb
xlat
mov
lea
jo
shlb
push
ds
stos
icebp
test
fs
outsl
shll
jl
std
subb
sub
dec
mov
xlat
scas
loop
jae
ficomps
scas
xchg
in
jns
or
mov
enter
jmp
or
add
clc
pop
cli
inc
ftst
je
loope
fstpt
ljmp
add
adcl
cld
stos
xlat
sub
hlt
out
push
adcb
mov
lods
ret
hlt
imul
xchg
aaa
dec
in
push
adc
repz
iret
adc
pop
or
push
pop
sbb
sbb
and
inc
xlat
jecxz
movsb
subl
rcrb
adc
push
clc
sbbb
fsubp
lret
ljmp
xor
dec
and
test
mov
sbb
fadd
xchg
xorb
sbb
lcall
adc
fcmovnb
mov
and
call
pop
jp
sub
dec
testb
lahf
adc
pop
mov
xchg
inc
xchg
pop
imul
dec
sbb
sbb
push
add
sub
data16
or
test
pop
or
sub
vsubss
and
ja
rorl
popf
pop
scas
insb
add
push
subb
jb
pop
jl
cmp
fimull
xchg
and
xchg
int
sbb
push
add
adc
pop
cmp
mov
fs
jb
pop
adc
xor
dec
frstpm(287
bound
lahf
dec
xchg
je
sub
pop
lea
and
cwtl
loopne
xchg
mov
dec
jns
pop
imul
mov
jg
daa
xlat
out
xchg
jmp
jae
or
insl
cmpsl
dec
pop
xor
xor
aam
test
loop
push
pop
mov
mov
dec
cmp
dec
and
add
jo
push
cltd
adc
or
insb
cmp
test
adc
mov
jp
fcomps
jp
sbb
mov
scas
sbb
xor
iret
cmp
stos
cmp
ffreep
cmc
inc
lret
mov
mov
test
cli
adcb
sbb
pop
cmpsl
pushf
mov
popf
je
movsl
pop
dec
icebp
pop
adc
outsl
outsb
fs
out
sbb
xlat
mov
leave
push
test
ret
sbb
xlat
inc
inc
jp
xor
out
jmp
cld
add
int3
inc
jg
push
cli
cmp
mov
pushf
cli
adc
jb
xchg
repz
ret
xlat
sub
out
pop
or
push
popa
fldt
adc
loopne
cs
xor
fcmovbe
daa
inc
mov
aam
pop
stos
push
cwtl
xchg
xchg
jb
nop
pop
dec
mov
test
fsts
xchg
iret
mov
xor
sbb
imul
jg
xor
sbb
cmp
push
jo
repz
xor
fistl
je
nop
lcall
movb
pop
pop
jecxz
ja
xor
adc
mov
and
xor
divl
adc
cmc
xlat
push
adc
mov
mov
fcompl
adc
popf
sbb
scas
out
das
mov
lods
push
mov
jns,pt
aas
sti
and
lods
adc
sub
pushf
pop
sub
je
push
jmp
dec
pushl
mov
fildl
mov
jae
int
insb
add
mov
mov
xorb
iret
and
inc
inc
cmp
cmp
pop
pop
sbbl
and
jl
xlat
inc
out
push
ja
fcoms
sbb
mov
into
inc
push
cmpsl
or
cmpl
xchg
mov
dec
push
mov
inc
push
mov
xlat
call
imul
or
sub
ljmp
sub
js
daa
add
sub
or
movsl
push
test
imul
icebp
mov
fisubs
fs
out
jecxz
fdivl
nop
xor
mov
mov
jb
shr
cmc
fstpl
adc
test
test
and
stos
fsts
jno
adc
xor
cmpsl
in
sbb
and
xor
insb
xchg
jge
fdivrs
jle
xor
or
push
dec
daa
or
into
dec
pop
cmp
ret
std
cmp
inc
clc
decl
in
push
sbb
cwtl
int
mov
mov
xchg
ja
dec
test
ja
movsl
lock
idivl
mov
mov
ljmp
stc
push
ja
jns
stc
xor
and
mov
fimull
je
mov
repnz
pop
add
xor
mov
pop
dec
sub
ljmp
mov
jo
xchg
icebp
scas
imul
mov
xchg
fldt
jo
sbb
rcrb
cltd
ss
xlat
lret
subl
popl
jb
ds
stos
cmp
xor
cmp
cmp
and
data16
cli
sub
adc
sarl
pop
ret
pusha
xor
leave
pop
adc
cmp
hlt
jle
fldcw
sbb
adc
mov
out
lock
push
fs
test
imul
jge
outsl
sub
fnsave
iret
cmp
pop
adcl
int
xor
in
push
xlat
out
and
sub
dec
fwait
cmpsl
iret
es
stc
sbb
xor
xchg
jg
jo
fistpll
push
pushf
inc
push
arpl
imul
dec
scas
in
jle
push
xchg
xchg
mov
xor
dec
push
movsl
les
push
cmp
addr16
add
aam
cmp
insl
cli
inc
mov
insb
push
jmp
jns
xor
mov
and
insb
mov
rolb
xor
loope
fcmovne
pop
cmp
jns
push
mov
and
jmp
scas
xor
call
inc
sbb
in
mov
push
add
outsl
mov
cmp
fs
push
fsubs
in
jg
mov
fdivrs
fsubrs
imul
fldl
or
dec
dec
jmp
jg
cmpsb
or
aaa
push
cwtl
iret
cmc
xor
xchg
popa
stos
jo
dec
jae
jno
add
es
cmp
xor
or
cwtl
das
jp
fld
mov
sbb
sti
inc
nop
push
pop
ror
and
lahf
insb
dec
fistpl
es
mov
std
lret
adc
jmp
or
das
jbe
shlb
dec
cltd
test
jmp
call
or
dec
cmc
xlat
sbb
mov
sub
xchg
fiaddl
icebp
push
cmp
jae
in
fldt
in
pop
adc
push
fdivr
xchg
push
fidivs
mov
fwait
jl
fwait
xchg
push
lret
cmp
xchg
and
xchg
inc
stos
add
sub
sub
inc
dec
stc
mov
mov
cmp
mov
imul
hlt
pop
adc
enter
jno
cld
cmpsl
adc
mov
incl
sub
cmp
xchg
push
in
fisubs
arpl
jmp
movsb
push
xchg
andb
daa
ja
push
xor
push
mov
inc
cmp
bound
jle
fnstsw
fcmovne
dec
push
inc
push
sub
lods
test
in
jns
xor
fs
pop
inc
xlat
loopne
arpl
cld
xor
fstpt
jmp
scas
adc
sahf
hlt
sub
fstpt
dec
mov
sbb
mov
sbb
jo
enter
out
pop
cmp
push
sti
xchg
sub
pop
mov
leave
pop
sti
jae
and
pop
cwtl
ror
or
icebp
dec
pop
daa
jmp
sub
jmp
cmp
inc
cmc
push
and
inc
int3
cli
aam
ja
push
arpl
cli
pop
iret
or
pop
pop
push
das
shrl
add
jmp
subl
push
stc
fldt
leave
cmc
xlat
setns
xchg
fldl
mov
pop
andb
test
shll
negb
mov
rol
sub
fisubs
inc
in
pop
int
aam
xchg
jg
push
fldcw
pop
xchg
in
or
cmp
out
leave
gs
pop
int3
cmp
mov
pop
push
data16
fisttps
jbe
fisttpl
sbbl
xchg
sbb
xchg
dec
and
sub
insl
ret
lcall
cmp
inc
jne
xchg
mov
mov
jge
lock
push
add
fidivs
mov
dec
push
les
leave
fsubrp
adc
out
push
adc
or
fwait
jns
xlat
push
adc
inc
js
push
std
out
jno
cltd
xchg
outsl
clc
movsl
stos
pop
push
pop
push
push
pop
mov
inc
xchg
push
jbe
adcb
sbbl
sbb
push
add
or
js
leave
mov
jb
ret
nopl
mov
push
jg
sbb
add
jbe
pop
inc
into
imul
movsl
mov
negb
add
jp
xchg
shlb
xchg
lea
inc
les
jo
mov
into
jge
cmpsl
ret
imul
push
test
xlat
roll
in
in
dec
mov
dec
test
sbb
adc
mov
xchg
inc
mov
sub
sbb
jmp
sbb
dec
les
cmp
add
outsl
dec
cmp
cmpsb
sti
outsb
or
mov
mov
fmuls
sub
xor
mov
jae
xlat
ret
cltd
jle
or
dec
scas
loopne
fidivrl
cmpsl
ds
push
or
push
shlb
hlt
sbb
pop
iret
shrl
jno
sbb
xchg
shrl
push
addr16
rsm
mov
jns
seto
js
sub
jp
inc
push
outsl
enter
sbb
mov
aam
mov
pop
ret
sbb
stos
mov
lcall
add
or
and
in
sti
push
xlat
xor
int3
xor
dec
dec
sti
insb
lcall
nop
mov
xor
dec
pushf
lods
test
outsb
mov
pop
sub
push
andb
cld
dec
adc
mov
movsb
sbb
lret
in
push
stos
push
adc
push
xor
xchg
flds
inc
adc
pop
cs
push
je
pop
mov
push
sahf
imul
repnz
test
sub
adc
sbb
jmp
or
pop
test
xor
mov
repz
inc
shrl
jl
js
je
fwait
adc
jecxz
jo
fcoms
into
push
pop
or
imul
dec
mov
scas
mov
pop
sbb
add
fistl
mov
pop
std
add
jnp
mov
push
and
outsb
jmp
or
das
sub
jg
push
sub
xlat
push
pushf
mov
out
sbb
dec
and
scas
clc
cmp
jno
sbb
xor
shll
sub
fcomi
call
test
fwait
dec
and
dec
call
xchg
leave
jge
dec
push
outsb
iret
push
mov
or
sbb
jg,pn
cmp
negb
dec
aad
nop
mov
pop
pop
xor
pop
leave
in
sahf
js
lahf
jno
mov
repz
jne
mov
stc
and
ret
ret
jbe
jb
sbb
ljmp
dec
std
jnp
fldenv
lret
adc
mov
or
je
fldt
add
xlat
gs
cmp
addr16
and
sbb
addr16
cmp
popa
xlat
mov
scas
icebp
or
fwait
jne
ds
push
mov
shl
mov
mov
jl
popf
aaa
lea
adc
jnp
stc
loope
xor
sub
and
push
lret
ljmp
xor
xchg
push
mov
cld
inc
and
xlat
adc
fdivrs
xor
addb
jg
xor
or
and
push
out
jnp
inc
das
push
testl
mov
mov
lahf
xor
jl
sub
frstor
dec
jl,pt
inc
xor
idivl
rolb
rolb
push
gs
test
aam
inc
sub
mov
lret
xor
mov
jmp
ds
pop
sub
scas
xor
gs
pop
dec
mov
pop
dec
dec
arpl
sbb
rcll
jle
imul
xchg
icebp
sub
jecxz
cs
pushf
hlt
bound
or
xchg
push
push
xlat
mov
movsl
test
les
sbb
fsub
mov
fsubs
stos
arpl
push
or
rcl
neg
jmp
enter
fcmovnu
jmp
push
scas
mov
shl
xchg
mov
data16
imul
shll
dec
sub
mov
jecxz
fistl
insl
add
sub
aad
lret
std
sbb
push
and
dec
aam
cmp
add
cmp
jae
xor
add
jmp
sahf
lock
push
mov
xor
insb
int
sahf
testb
cmp
insb
jns
add
push
outsl
imul
cmpsl
or
jle
mov
cmp
pop
adc
mov
add
ljmp
cli
jg
add
popa
scas
mov
xlat
xchg
add
push
inc
xor
push
inc
or
xchg
jge
xor
xlat
fcoms
sarb
int3
cli
pop
jmp
test
lret
sbb
jmp
fiaddl
push
out
nop
incl
jno
jle
and
push
in
xor
int
outsl
arpl
mov
mov
es
cmp
and
cltd
js
mov
popf
sbb
ret
mov
cmp
jl
insb
insb
mov
out
dec
push
outsl
bound
jne,pt
pop
mov
cmp
popa
stos
stos
js
fcmovnu
xchg
ljmp
cmp
mov
mov
push
mov
lods
fcoml
dec
lods
in
pop
fimuls
imul
fistl
mov
dec
mov
xchg
cwtl
sub
cli
out
cwtl
arpl
and
pop
pop
adc
pop
push
nop
out
pop
push
lods
inc
sbb
ret
pop
xchg
iret
orl
mov
cmc
sub
movsb
mov
aaa
add
mov
fldcw
out
xlat
inc
mov
nop
fldcw
mov
cli
push
subb
jae
divl
pop
cmp
push
pop
sbb
cmp
dec
xor
xlat
jmp
daa
xor
shll
mov
xchg
mov
cmp
cs
mov
out
jb
xor
jbe
sahf
jae
cmpsl
dec
aaa
adc
out
call
std
fwait
jno
jbe
loopne
push
hlt
mov
movsl
jno
mov
lahf
xchg
mov
les
mov
add
xor
dec
jb
xlat
fimuls
or
inc
movsl
push
add
dec
jns
movsb
loop
test
xor
sub
call
adc
inc
push
mov
mov
dec
popa
adcl
push
stos
dec
int3
call
aam
jnp
or
das
jl
fisttpl
popf
mov
or
jecxz
hlt
rorb
into
outsl
jo
pusha
lret
lods
arpl
push
sub
jl
fldenv
pop
dec
rorb
fisttpl
loopne
imul
or
push
and
xlat
add
pop
mov
or
xchg
fildl
pop
pop
xchg
mov
shlb
leave
jmp
xor
cmp
sub
jg
inc
add
stc
xchg
sub
icebp
stc
cmpsb
cmp
and
sbb
or
xchg
jge
fcmovnb
iret
popa
or
add
push
jb
ja
testb
lret
mov
push
sbb
add
lods
adc
mov
sbb
imul
cmpl
test
inc
loopne
inc
and
fiadds
insl
xor
sti
mov
es
mov
sub
push
repnz
push
loop
stc
fldt
sbb
imul
xchg
sub
insb
mov
mov
jns
fsubl
daa
jnp
jmp
add
int3
sub
popl
cwtl
xchg
movsb
jbe
in
mov
push
xlat
xor
lret
test
adc
and
mov
cmp
pop
and
push
roll
pop
sub
test
jns
dec
xchg
jmp
pop
mov
jl
jb
int3
push
fsubr
push
cld
inc
adc
xorb
push
insl
fisttps
icebp
mov
adc
jl
pop
mov
rorb
cld
outsb
push
test
pop
xor
sub
scas
push
sub
or
cwtl
call
xchg
xchg
insb
push
pop
enter
lahf
loope
cld
jb
shrb
xlat
xorb
cmpsl
sbb
add
xchg
lods
mov
push
mov
jnp
sbb
loopne,pt
xchg
js
test
pop
ljmp
mov
adc
fldt
dec
fldt
dec
jns
sbb
sbb
shl
mov
sti
inc
jae
rorl
ret
dec
inc
fnstcw
mov
fimuls
push
pusha
or
repz
and
push
es
mov
fistpl
pushf
add
jns
xchg
popf
cmp
popf
fimull
outsb
jmp
fwait
into
aas
lds
push
and
lcall
mov
sahf
mov
orl
movsb
mov
fxch
sbb
or
xchg
jge
xor
lods
xchg
mov
pop
add
stc
cmp
or
lea
or
mov
push
sub
xchg
ret
mov
cld
popa
xor
mov
fldt
inc
popf
add
inc
lcall
imul
ror
xor
mov
flds
fstpt
int
xchg
lret
stos
arpl
das
and
adc
dec
add
fcmovne
sub
sub
repz
sbb
mov
add
clc
or
mov
scas
sbbb
add
xor
pop
cmp
fstpt
ja
test
sbb
mov
shrl
pop
jns
inc
les
cltd
and
test
jns
out
mov
mov
sbb
and
outsb
out
std
fildl
mov
push
cltd
out
jg
dec
test
fisttpl
sub
xor
adc
jmp
adc
xchg
pushf
cmp
dec
sbb
pop
push
addr16
xlat
jne
addr16
imul
into
mov
mov
dec
inc
and
mov
je
pop
sub
jbe
jae
push
testb
ret
in
mov
pop
cmpsl
repnz
pop
jl
ret
sub
in
xor
pop
rcrl
fldenv
in
push
cld
and
push
sbb
jg
pop
adc
ret
mov
or
sbb
imul
jmp
fstpt
in
mov
xchg
mov
mov
lea
mov
test
xor
jp
xchg
fsubrp
adc
xchg
fcoml
inc
frstor
test
xchg
outsl
push
xor
jg
mov
movsl
cltd
jbe
mov
xor
out
add
jno
cmp
push
ror
je
xchg
pop
aas
push
mov
xor
inc
cmc
push
in
repnz
mov
in
mov
and
shr
ja
add
cmp
inc
ja
das
xlat
or
ja
insl
notb
dec
std
xchg
cmp
nop
mov
push
in
jp
icebp
pop
jno
cmc
lcall
addb
pop
or
mov
mov
popa
mov
inc
pushf
mov
scas
sbb
mov
imul
xor
sbb
test
mov
or
pop
shll
cmpsl
insl
fucomi
orl
or
stc
jne
or
pop
sbb
jecxz
test
dec
std
mov
sbb
push
dec
aad
lods
inc
cmp
cmp
add
stos
and
cmp
dec
aad
sahf
mov
cmp
sub
cmp
fisttpl
pop
in
dec
notl
sbb
xchg
jb
das
iret
push
hlt
nop
mov
imul
iret
push
jns
jno
jmp
mov
mov
fldenv
cmp
jge
clc
fxch
xlat
std
xor
mov
push
adc
stos
dec
dec
mov
ja
xor
push
and
ds
icebp
mov
sub
and
fisubs
adc
inc
mov
jnp
dec
fcomps
mov
stc
mov
lret
xchg
hlt
pop
xor
sbb
mov
sub
pop
xchg
sbb
adcl
mov
pusha
out
mov
sbb
stos
sbb
pushf
mov
push
mov
js
mov
cmc
sub
adc
xor
ret
mov
jo
and
or
and
ret
inc
fistps
mov
aaa
scas
movhps
mov
insb
ftst
incb
hlt
imul
imul
and
jne
leave
sbb
add
mov
stos
fldt
sub
aaa
repz
test
inc
scas
lea
dec
mov
daa
jl
fistl
push
push
ret
or
imul
push
mov
sbb
dec
cltd
lcall
cmovno
inc
or
les
icebp
mov
stos
jl
pop
push
jnp
popf
mov
push
dec
sti
mov
cld
mov
repnz
push
movsl
imul
mov
xchg
outsb
pop
cmpsl
mov
lret
mov
fcompl
mov
int
xchg
xlat
std
push
enter
dec
iret
dec
std
icebp
mov
sbb
xchg
outsb
stos
inc
inc
fidivs
sbb
or
mov
sarl
dec
sub
js
scas
push
inc
mov
and
negb
sbb
sub
out
ret
mov
pop
mov
inc
fstpt
test
es
std
sub
subl
pop
adc
jecxz
imul
jg
inc
mov
imul
pop
lcall
fisttpl
int3
sub
fwait
rcrl
fadds
popa
lods
lret
xchg
in
mov
mov
push
ja
les
test
cmp
pop
aaa
or
int
addr16
adc
pop
inc
fwait
mov
arpl
or
xor
sub
hlt
roll
xchg
in
outsl
fnstcw
mov
movsl
out
sbb
adc
aad
adc
and
imul
inc
mov
fimuls
pop
push
add
sbb
fiaddl
mov
sub
repz
cmp
push
and
repz
pushf
test
divb
fisttpll
jnp
or
test
aas
pop
or
mov
daa
mov
cmp
pop
jl
pusha
push
mov
dec
sub
xorl
xlat
inc
pop
adc
lods
pop
popf
xlat
cmc
ds
and
sub
sbbb
lret
jns
fistl
mov
cwtl
sub
les
cmp
or
sahf
dec
movsl
or
jmp
jns
or
insb
fdivl
cmp
int3
pusha
and
jmp
gs
into
mov
and
imul
test
sub
clc
jg
icebp
push
lcall
je
ja
into
dec
cmpb
pop
sbb
and
or
xorps
into
lock
mov
call
xor
rcrl
std
jl
fnstenv
cmp
test
gs
flds
movsb
stc
jle
sub
clc
xchg
mov
ret
ja
pushf
cmp
dec
push
mov
jmp
mov
add
and
out
jns
sub
lret
mov
xchg
sub
cmp
jns
sub
inc
inc
loope
adc
andl
mov
add
adc
inc
loope
mov
icebp
in
xlat
mov
outsb
outsl
dec
jno
xchg
push
inc
jmp
xchg
pop
pop
in
cmp
sub
push
sub
cs
xchg
movsb
pop
cmp
stc
xchg
inc
adc
xor
pop
xor
stc
bound
imul
and
shll
mov
sbb
lods
pop
dec
sub
adc
sbb
pushf
mov
or
push
aam
cmp
adc
or
and
xchg
fisttpl
lcall
sub
mov
cs
mov
xchg
push
mov
lds
enter
fisubrl
xchg
mov
das
xor
xor
out
lret
xor
jbe
adcl
jne
fidivl
movsl
add
mov
pop
sbb
mov
sub
adc
mov
std
stos
and
fiaddl
icebp
cwtl
xchg
sbb
pop
lods
add
dec
out
mov
fdivrs
xor
cwtl
sub
pop
outsb
loopne
mov
push
mov
mov
mov
push
mov
xchg
sub
push
into
adc
mov
lods
inc
mov
xor
stos
dec
aad
inc
jo
popf
push
dec
outsb
push
faddl
in
mov
inc
mov
mov
ficompl
mov
xchg
jo
dec
mov
jb
roll
fwait
insb
push
test
jl
and
or
mov
shll
cmp
mov
jle
push
test
adc
sub
mov
cmp
test
call
std
push
push
sub
std
xchg
mov
cmp
mov
xchg
mov
or
adc
xor
xchg
jg
dec
mov
adc
sbb
in
jle
aaa
mov
sub
pop
mov
imul
jnp
fxch
xor
jecxz
dec
jae
call
xchg
xchg
push
and
jmp
out
shll
pop
jnp
xlat
je
into
fistpll
push
ds
addr16
or
push
imul
aam
xchg
outsb
je
shl
xor
mov
jp
sbbl
pop
imul
test
popa
imul
mov
imul
cmp
ds
and
push
add
jne
sbb
lret
sarb
jge
fld1
push
cmpsl
fldt
inc
xchg
sbb
int3
fs
scas
cmc
arpl
pusha
jle
cmp
inc
loope
dec
or
loop
mov
mov
leave
hlt
add
pusha
in
popf
mov
sub
cli
add
fldt
or
push
out
cmp
pop
dec
jae
test
sub
dec
or
notl
cmp
and
jne
cmp
jle
mov
movsl
pop
jle
xchg
divl
mov
cli
mov
call
in
jp
and
imul
popa
fnstenv
xchg
add
jne
dec
inc
add
push
and
insb
lea
nop
cmc
fdivrl
subl
daa
insl
fnstcw
cwtl
adc
jno
add
addr16
imul
mov
sbbb
pop
xor
or
aaa
add
sub
stc
gs
ret
insb
jne
lcall
jmp
jg
xchg
fisttpll
inc
int3
cmpsl
push
insb
icebp
shl
stos
dec
xlat
mov
lods
cmp
movq
add
adc
test
fistps
xchg
daa
leave
sbb
mov
icebp
das
pop
sbb
movsl
jmp
dec
mov
sbb
jecxz
adc
jo
call
pop
push
sbb
aaa
ret
shrl
add
lds
fdiv
jmp
mov
or
testl
add
lcall
repz
push
cwtl
add
shrl
adcb
scas
aam
aas
popf
lahf
je
scas
dec
sbb
cwtl
imul
cmp
sti
xor
loope
mov
jae
in
negb
cmpsb
push
gs
std
pop
or
hlt
inc
rcll
shrl
cs
stos
adc
pop
sbb
arpl
jb
and
call
dec
lods
sbb
fnstenv
cmp
or
xchg
call
xchg
fimuls
sub
dec
and
mov
es
mov
mov
hlt
cmp
and
xor
xor
pop
push
iret
mov
or
movsb
cs
jbe
inc
loop
aaa
add
sub
cwtl
ret
sbb
xchg
cmp
inc
jg
ljmp
cmp
and
call
cli
or
mov
rcrl
mov
mov
xchg
mov
js
test
xor
cmp
dec
sbb
dec
int
pop
cmpb
jmp
aam
mov
xchg
xlat
es
xchg
push
lods
gs
fnsetpm(287
jne
outsl
mov
nop
addl
sbb
dec
shl
jae
int
xchg
cli
mov
dec
popf
test
cmpsb
repz
push
mov
data16
cmp
pop
or
add
or
mov
pop
mov
jl
push
les
xchg
xchg
aad
xor
cwtl
popf
and
xchg
xlat
outsb
jb
movsl
pushf
xor
in
dec
mov
ljmp
inc
je
fcmovnu
aad
adc
pop
mov
inc
jmp
sbb
stos
xor
pop
sarl
push
jl
sub
shlb
ret
jne
fwait
loopne
pusha
cmpsb
cmp
pop
xchg
idivl
pop
lret
inc
push
mov
jnp
mov
adc
shlb
rolb
loopne
addr16
nop
cmp
mov
jmp
sbb
jae,pn
fsts
in
jae
add
sbb
out
pop
inc
jbe
cmpsb
fsubr
jno
jo
sbb
movsl
cmp
sbb
adc
std
sahf
nop
in
nop
je
imul
inc
and
fsts
scas
aaa
pop
dec
mov
mov
icebp
pop
inc
jne
push
inc
into
int3
add
dec
jno
stos
xor
add
push
mov
flds
out
add
xorb
cmpb
push
repnz
or
mov
sub
jbe
ja
je
and
adc
cmc
mov
ret
fistpl
lock
push
and
cmp
dec
int
and
and
jecxz
adc
sub
popf
dec
dec
ret
mov
sub
ja
aam
sub
out
fistl
mov
in
cmp
sbb
sbb
dec
add
out
outsb
movsl
mov
test
lret
fadds
popf
cmovg
jmp
addr16
pop
or
out
jg
outsb
outsl
pextrw
in
adc
lcall
aaa
mov
mov
addr16
inc
inc
or
sbb
mov
add
test
adc
mov
imul
and
jne
mov
inc
push
ret
shlb
sbb
sbb
insb
xlat
pop
mov
and
lods
dec
popf
imul
sbb
sub
movsl
outsl
and
inc
stos
pop
cmp
sbb
sti
sub
cs
mov
xor
pop
push
xchg
dec
rorl
pmaddwd
mov
addr16
aad
out
cmpsl
dec
cmp
jae
hlt
mov
xor
in
jl
dec
push
dec
leave
mov
pop
fldenv
inc
pop
mov
xchg
ficoms
fisubl
jge
xchg
add
mov
sub
mov
test
push
xlat
and
pop
mov
mov
cli
jns
cmpsl
cwtl
adc
cmc
xlat
jae
xchg
sub
dec
shlb
xlat
popf
adc
jne
xor
rcll
fistpl
xchg
out
mov
pop
sbb
addr16
or
mov
xor
push
enter
push
and
pop
and
pop
push
xchg
xchg
xor
pop
rcl
fucomp
push
sbb
pop
call
xchg
sbb
push
cmp
fisttpll
imul
jecxz
push
mov
mull
add
inc
or
pop
clc
inc
sbb
scas
push
out
shlb
and
dec
hlt
jl
je
mov
adc
fstpt
mov
icebp
les
cltd
movsb
pop
xor
fisttpl
xchg
mov
loope
movsl
sbb
inc
aad
cmp
sbb
inc
cld
sti
and
shrb
sub
adc
test
inc
out
cmp
push
jno
adc
lret
xchg
mov
xchg
aas
cmpl
cmpl
packssdw
or
bound
jbe
pop
jle
push
shll
cltd
addr16
inc
enter
pushf
aam
cmp
arpl
les
and
addb
xor
sub
and
test
push
out
dec
repnz
mov
dec
popa
mov
adc
stos
add
push
popa
jbe
mov
dec
out
xlat
ret
call
jg
push
inc
or
dec
int3
ljmp
shrb
out
mov
inc
mov
imul
fwait
mov
cmp
popf
pop
mov
ret
jae
lock
jb
stos
inc
mov
xlat
daa
mov
stos
fstps
rorl
ds
or
cmp
xchg
lret
ljmp
xor
sbb
das
dec
push
dec
pop
loope
mov
or
fs
lret
jae
push
push
popf
push
inc
dec
into
fdivs
cmp
mov
or
jbe
mov
fcmovnb
dec
sub
fdivs
sub
sub
sub
fwait
cld
mov
pop
dec
out
sbb
add
fnstcw
dec
daa
xchg
stos
and
add
sub
mov
sbb
jle
repz
frstpm(287
sub
std
orl
stos
mov
dec
ss
push
or
mov
insb
cmp
adc
adc
xlat
add
sub
inc
jecxz
jnp
cltd
gs
dec
xlat
je
aas
hlt
add
jle
fcomip
cs
movsl
bnd
push
ja
out
stc
jle
push
cwtl
jmp
std
sub
mov
xchg
aaa
lahf
cmp
sbbb
sbb
out
sar
inc
mov
arpl
xchg
pop
jne
icebp
leave
addr16
lods
movsl
push
jns
daa
pop
cmp
ret
and
fstpt
add
stos
icebp
imul
sbb
xorb
push
jl
mov
jg
lods
xlat
inc
ja
mov
iret
sub
push
js
test
fistpll
clc
add
sub
stos
ja
fisttpl
in
or
addl
ja
and
clc
in
xor
ljmp
std
loopne
pop
sub
int3
cmc
xchg
mov
mov
sub
pop
push
dec
and
fadd
pop
jo
sbb
test
dec
add
push
sbb
or
stos
cs
pop
adc
es
jecxz,pn
cld
pop
lea
insb
lahf
pop
and
jne
test
sub
mov
xor
add
inc
rol
cli
popf
fstps
jne
lcall
and
push
fdivrl
scas
lcall
and
sub
ljmp
pop
aaa
mov
pop
test
sbb
or
lods
out
aam
push
push
icebp
mov
lods
or
push
add
iret
cli
jp
push
push
insb
nop
loope
mov
pop
and
aam
aas
push
push
push
xchg
pop
lahf
ret
hlt
test
cs
sub
pushf
jae
outsb
sbb
mov
in
xor
pop
xor
imul
or
mov
jl
jns
push
imulb
addr16
adc
pushf
add
inc
jp
loope
add
pop
out
inc
das
cld
pop
or
cmpl
std
mov
and
mov
ja
xlat
in
shll
lods
dec
xor
fldenv
loop
aas
fcoms
push
fnstcw
int
add
xor
fisubl
jno
mov
push
mov
add
jne
or
pop
data16
push
sbb
sub
or
sti
test
mov
gs
xchg
xchg
cmp
mov
and
sub
rorl
jbe
les
sub
fwait
outsl
lods
cmpb
stc
imul
sti
pop
enter
pop
lret
imul
arpl
xorl
pop
jge
ret
lret
sub
cmp
les
cmpl
imul
fimuls
movswl
xor
push
xlat
insb
push
stc
xor
push
dec
or
imul
push
jge
mov
fwait
call
or
xlat
and
jne
fldcw
movb
out
dec
out
dec
cmpsl
adc
fs
fildl
stc
or
icebp
xlat
mov
shl
jnp
add
cmp
jmp
stc
mulb
jp
sbb
sub
nop
int3
mov
fstps
in
negl
inc
xlat
sub
iret
cmp
icebp
mov
fsubp
sub
dec
mov
push
xor
and
ss
jle
or
dec
xlat
lods
jae
ret
ret
aaa
test
cmpsb
cmp
lret
scas
inc
fistl
repnz
cmpsl
jne
xor
or
sbb
push
cmp
mov
loopne
xchg
stos
dec
lods
jns
and
in
push
xlat
xchg
jle
mov
and
mov
pop
cwtl
cmpsb
xor
out
add
inc
xorb
int3
lahf
sbb
cmp
or
popf
in
mov
push
sbb
loope
cmp
dec
imul
xor
shll
mov
imul
sub
xchg
adc
jo
out
sbb
ds
fcmovnu
mov
pop
push
dec
jb
inc
nop
dec
mov
pop
pushl
sbb
push
mov
daa
adc
arpl
ja
movsb
and
test
call
repz
pusha
mov
xchg
sbb
imul
cmp
pop
mov
cli
rcl
cmp
popf
jl
add
pop
pop
mov
push
insb
lret
sub
test
jecxz
pop
cli
rcrl
stos
and
jmp
jae
and
test
int3
ret
clc
push
mov
pop
push
xchg
jns
pushf
icebp
or
push
sub
iret
jne
pop
sbb
mov
add
dec
add
fbstp
dec
xor
fwait
mov
jno
adc
xlat
cmpsl
into
idiv
xor
je
pop
dec
cmp
fidivrl
das
imull
cmp
insb
sub
movsl
sub
pop
sbb
pop
std
dec
mov
sbb
pushf
fidivs
ret
out
repnz
push
iret
inc
push
sub
adc
addr16
cmpsl
xor
sub
mov
inc
pop
out
jl
test
xchg
test
outsl
and
dec
gs
mov
andl
clc
sarb
orb
push
fnstcw
fisubrs
stc
sbb
sahf
xor
mov
dec
pop
fldenv
mov
inc
xchg
cmp
adc
mov
xchg
xor
xchg
lret
aaa
push
sub
les
push
inc
in
stc
push
cmp
mov
xchg
lock
cmp
xchg
jp
inc
mov
pop
fcmovbe
outsl
imul
popa
xor
pop
cli
neg
test
dec
pop
sbb
mov
addr16
xchg
dec
fxch
imul
mov
in
rclb
jne
dec
inc
xchg
jb
mov
neg
sub
inc
mov
and
mov
pushf
fimuls
pop
xor
inc
add
dec
and
mov
mov
pop
push
and
cmp
sahf
cld
add
ret
jns
jg
pop
cli
jne
and
inc
pop
jmp
aas
push
push
xchg
jo
xor
mov
jae
dec
test
pop
int
and
adc
test
sbb
dec
cltd
es
sub
fsqrt
jae
mov
fildl
jb
push
add
jmp
mov
add
dec
add
cmp
enter
xchg
pop
imul
les
add
stos
jge
and
xchg
cmp
stc
std
cmp
pusha
int3
inc
cmp
fstps
cld
xchg
push
frstpm(287
les
and
push
push
dec
stos
cmp
jl
mov
xchg
fistpl
cmp
xchg
cmp
push
int
sbb
mov
mov
mov
pop
andb
pop
add
jl
or
movsl
jp
insb
adc
out
sbb
dec
cmp
mov
sbbb
out
sbb
mov
inc
outsl
movsb
and
cmp
das
mov
xlat
ljmp
fisttpl
mov
out
jo
inc
jae
flds
mov
cmp
imul
jl
inc
ja
inc
test
jno
mov
sbb
push
rcll
xlat
jae
pushl
cmpsl
fs
ds
add
lock
or
lcall
push
adc
data16
das
repnz
xlat
xor
stos
mov
imul
mov
mov
imul
mov
call
imul
jne
mov
cmp
push
xlat
pop
fsts
mov
stos
sub
dec
nop
mov
xor
mov
imul
or
xor
nop
push
fsubl
xchg
lods
rolb
mov
mov
smsw
fsubs
je
lds
rcr
cmp
sub
cmp
lea
aas
jne
mov
and
or
pop
pop
push
jmp
push
sub
and
gs
mov
push
mov
adc
adc
pop
add
jg
clc
mov
inc
out
pop
das
testl
imul
xorb
push
inc
push
out
stc
adcl
mov
mov
pushf
mov
lahf
cmp
repnz
lcall
jns
leave
or
pop
or
jns
pushf
or
jo
fnstenv
lret
insb
addr16
sbb
dec
pop
pop
dec
sub
int3
lods
lods
sahf
add
push
sub
imull
mov
scas
pop
xchg
js
jne
ds
jb
notl
into
iret
loope
gs
rcll
mov
xchg
lahf
jmp
xor
mov
icebp
and
fwait
add
jae
cmp
or
in
dec
fistpl
fiadds
xor
pop
lret
loope
inc
cmc
test
pop
and
sbb
push
inc
fwait
xchg
cmpsb
into
cld
scas
aas
inc
jp
cli
fstps
push
inc
imul
or
dec
sbbb
xchg
fs
les
lret
mov
sub
mov
pop
sub
sbb
ds
add
pusha
mov
pop
incl
stos
lods
mov
cmc
fsts
jg
mov
shrl
inc
cmp
pop
dec
push
inc
fwait
sub
pop
or
ret
decb
scas
ja
inc
ficomps
repnz
cli
ficompl
outsl
mov
push
test
cmp
les
dec
add
xchg
imul
dec
hlt
das
addr16
jecxz
push
xlat
int
dec
add
pop
pop
jecxz
movsb
xchg
in
rcrb
flds
or
repnz
pop
adc
sbb
pusha
jb
cwtl
jbe
push
mov
bound
dec
ror
pop
cmp
mov
xor
mov
out
sbb
test
xor
sbb
pushf
and
pop
sub
fucomi
xorb
mov
insb
call
gs
mov
xchg
mov
or
inc
push
repnz
into
mov
icebp
cmp
add
rcrl
aas
inc
mov
sbb
push
adc
pop
and
push
dec
clc
outsb
jnp
mov
push
adc
sbb
mov
test
and
scas
adc
xchg
xchg
jb
in
inc
addr16
fsts
scas
fldl
or
out
ret
lret
xlat
sbb
cld
cld
xor
mov
out
push
mov
cmp
in
movsl
cmp
dec
dec
jae
ljmp
jne
jecxz
mov
or
xchg
jo
fs
cmp
dec
mov
push
dec
xlat
int3
or
cmp
jmp
pop
arpl
jle
mov
xchg
inc
or
sbbb
cmpb
flds
jmp
dec
jl
movsb
fwait
das
push
mov
dec
lods
xchg
mov
fbld
insl
inc
pop
and
fmul
loop
enter
sub
stc
repz
imul
dec
mov
xor
push
pop
adc
cmp
adc
mov
pop
ret
fcmovnu
test
scas
aad
pop
lret
cmp
mov
mov
ja
iret
pushf
fldlg2
add
test
fisttpl
mov
add
lcall
dec
popl
sbb
ss
rcrl
lret
cmpsb
mov
xor
clc
jno
ja
lds
ss
mov
inc
pushf
in
fs
cmp
or
in
dec
cmp
test
aam
inc
enter
jae
popf
xlat
pop
enter
and
or
push
push
push
cmpsl
stos
xor
push
fisubrl
cmp
add
addr16
fstl
xchg
or
les
jmp
cs
and
pop
mov
or
push
mov
xchg
jno
add
pop
cmp
and
mov
cli
int3
fwait
mov
add
stc
fldcw
fucom
mov
popf
dec
pmaxub
adc
mov
rcpps
imul
sub
xchg
xor
xlat
pusha
les
mov
popa
in
dec
fisttpl
loope
negl
fdivs
jne
xor
mov
cmp
dec
faddp
lret
pop
je
xor
jmp
aas
cmp
std
pop
and
adc
aas
adc
dec
xlat
pushf
outsl
daa
mov
scas
out
insl
push
lret
xchg
xchg
mov
pop
adc
push
pop
stos
ja
push
or
mul
movsb
xchg
jne
aas
cmpb
aad
aaa
ljmp
fcmovu
pop
stos
sub
adc
shll
js
xchg
fiaddl
out
xchg
repz
adc
cld
cmp
or
sbb
lea
dec
std
xorb
or
sarb
sbb
psraw
cmp
sbb
mov
in
addr16
mov
push
add
mov
sti
push
sub
cmp
or
leave
addr16
pop
insb
jmp
ja
cltd
inc
push
xlat
cmp
jp
mov
mov
jae
cmp
lret
cmp
jg
dec
mov
test
mov
or
adc
jae
push
or
ds
pop
and
jecxz
add
shlb
int3
add
inc
aas
roll
xor
jmp
adc
sub
fadd
jg
call
pushf
sbb
in
jmp
test
xchg
xorl
mov
cmp
push
xor
jae
lret
jg
jle
mov
dec
popf
jecxz
js
addr16
pushf
repnz
inc
test
jl
pushf
jge
pushf
mov
push
push
idiv
dec
mov
add
imul
scas
push
sub
mov
cs
inc
shll
fwait
leave
xchg
inc
lret
xor
mov
xor
jne
std
popa
lods
jg
icebp
sub
dec
data16
mov
test
cli
ret
mov
loop
jne
mov
shrb
aam
and
dec
xlat
dec
pop
push
lret
dec
add
lcall
popa
xchg
mov
rorb
jmp
cmp
xchg
sub
push
inc
xlat
pusha
ss
dec
jae
push
shlb
adc
aaa
imul
mov
imul
faddl
pop
gs
sar
push
mov
test
enter
dec
rolb
add
jns
call
pop
sarl
or
sub
pop
divb
test
shll
iret
add
stos
mov
mov
sub
gs
rep
add
sbb
scas
out
cmp
and
out
or
out
data16
add
pushf
sarb
repz
push
mov
xchg
xchg
xlat
inc
pop
jmp
mov
dec
movsl
scas
clc
sbb
cmp
dec
imul
cmpsb
stos
shlb
test
aaa
push
cli
mov
inc
adcl
insl
mov
dec
movsl
push
imul
aaa
and
je
jae
push
mov
aad
pusha
inc
fnstcw
mov
jbe
in
pushf
call
aam
push
pop
sub
pushl
mov
hlt
outsb
pushf
mov
mov
push
pop
std
bound
dec
nop
out
shr
xchg
add
repz
inc
cli
cmc
sti
es
fldl
leave
and
push
pop
mov
push
xlat
enter
xor
nop
ja
and
test
add
stos
or
andb
aaa
mov
xchg
mov
cs
xlat
js
sti
lock
fs
mov
dec
imul
push
cmp
or
xor
ret
rcl
std
or
sub
inc
push
jbe
les
pop
pop
xlat
jl
add
fxch
sub
xchg
xor
in
addr16
lds
arpl
xor
mov
cli
mov
pop
mov
jl
dec
ret
jb
adc
fstp
fwait
pushf
js
xchg
cmp
outsl
mov
test
test
icebp
cld
inc
daa
xchg
sub
push
int
xor
xor
push
fsubl
xlat
movsl
pop
fidivl
das
faddl
nop
nop
sub
cmp
test
xlat
push
fwait
ret
dec
jp
scas
jbe
xor
lret
mov
jle
mov
mov
call
sub
pop
push
dec
inc
xor
int3
js
xorb
xorl
or
jbe
jge
mov
mov
cs
jecxz
inc
fmuls
and
cmpsl
jge
inc
xchg
stos
popf
ds
inc
enter
fistpl
dec
in
ljmp
pop
nop
dec
shll
jmp
cmp
sbb
icebp
imul
cltd
test
clc
lods
mov
test
dec
jg
mulb
sbb
stc
lods
imul
pop
jp
jmp
sub
mov
imul
scas
xor
sub
add
xor
pop
dec
pop
sbb
imul
repz
mov
and
scas
js
dec
inc
mov
sub
push
mov
imul
cwtl
jno
and
ja
sbb
test
cmp
int
push
mov
adc
and
sub
push
and
iret
push
packuswb
pop
push
bound
add
stc
cmp
push
flds
outsb
cmp
movsl
lret
dec
inc
mov
mov
cmp
or
hlt
xchg
mov
ds
test
shll
xor
cld
lods
out
das
testl
sub
test
adc
sub
test
or
int3
enter
add
pop
iret
imul
cmp
push
push
sub
mov
and
mov
or
mov
imul
pop
mov
cmp
inc
sub
mov
jnp
cltd
mov
push
mov
js
cmpb
jle
xchg
sub
push
sub
push
pop
jg
ret
clc
nop
xor
sti
arpl
arpl
fwait
jl
mov
pop
mov
mov
add
sbb
xor
cmovp
pop
fwait
mov
mov
push
popf
mov
mov
and
aam
addl
add
cmp
gs
loopne
nop
lock
das
arpl
pop
imul
jo
jns
repnz
popa
sbb
pop
push
and
xlat
test
xchg
divb
arpl
fcmove
mov
cli
addr16
ljmp
test
mov
sub
push
jecxz
cld
push
pop
loop
sti
xlat
icebp
dec
dec
xchg
in
ret
push
adc
mov
mov
xor
push
mov
jne
dec
aam
mov
or
lcall
pop
inc
daa
cmc
lea
shlb
in
pop
pop
jne
test
dec
jmp
jecxz
jae
stc
xlat
mov
jbe
adc
mov
out
mov
jne
lea
aas
inc
mov
fwait
subl
pop
movsl
mov
dec
leave
les
push
jecxz
add
mov
sub
xchg
push
pusha
les
or
xchg
dec
outsl
jb
inc
push
fcomps
jnp
int3
idiv
push
sub
int
dec
imul
dec
lret
iret
fidivrl
test
jae
hlt
into
mov
jmp
mov
xor
add
sbb
stc
sbb
bound
adc
push
jae
lods
shlb
sahf
adcb
imul
jmp
xchg
pop
sub
jae
mov
neg
mov
icebp
pop
mov
xor
sbb
out
lock
fiaddl
push
jg
es
jnp
vmaxps
jmp
out
cmp
dec
mov
lahf
pop
fnstenv
jp
ret
insb
rcrb
xchg
movsb
xor
cs
hlt
imul
and
ficoms
mov
js
into
and
js
xchg
dec
je
loope
or
or
mov
jnp
dec
subb
cs
push
movsl
xor
ss
cld
jecxz
pop
test
and
pop
andb
mov
mov
clc
imul
out
xchg
xlat
jae
mov
push
push
loop
jb
pop
xor
pop
fcompl
add
test
hlt
xlat
pop
lea
jbe
cli
xor
ja
jo
fldt
xor
imul
loop
push
xlat
sbb
arpl
jno
cmp
and
cmp
add
mov
loopne
jne
fldenv
js
cmpb
iret
movsl
mov
pop
mov
addr16
dec
notb
sbb
mov
loop
ss
jo
push
sub
in
xor
shlb
xlat
call
out
push
iret
and
and
fstl
std
adc
test
pop
or
pop
mov
mov
out
jg
int3
cld
dec
adc
add
sbb
sub
jg
and
sub
and
adc
xor
insb
jp
in
sbb
ss
cli
insl
andb
jp
out
gs
xor
push
sbb
pop
inc
shll
arpl
xor
hlt
mov
test
in
inc
inc
dec
mov
loope
jmp
rcl
and
xchg
imul
pushf
popa
testb
inc
mov
mov
iret
mulb
popf
leave
dec
dec
xor
repz
mov
sarb
and
rcrb
sub
mov
sub
movsb
addr16
test
jge
sbb
ljmp
push
push
jecxz
cmp
lret
lret
iret
xchg
sbb
icebp
sbb
xlat
jle
sub
sub
sub
xchg
mov
cltd
sbb
loope
push
pushf
arpl
clc
icebp
bound
shlb
dec
xor
jmp
xchg
jbe
mov
mov
scas
pop
push
stc
sub
sub
and
test
or
fimuls
scas
les
push
xlat
and
cmp
cmp
jecxz
enter
int
test
and
push
cmpl
sbb
out
das
andb
or
mov
dec
sbb
dec
fsubrs
out
int
xor
xchg
mov
arpl
shll
jnp
gs
and
mov
rolb
cmp
dec
mov
hlt
cmp
jns
fldenv
in
outsl
cld
push
pop
into
mov
imul
in
or
cmp
movsb
cmp
pop
fldenv
add
cwtl
add
add
adc
mov
imul
xlat
jns
adc
in
pop
jne
push
les
push
push
sbb
imul
or
inc
movsl
sbb
xchg
push
lods
fcmovnbe
jge
pop
daa
sub
mov
cmp
insb
mov
jge
aas
fisttpl
outsl
jl
cmp
into
adc
jg
xchg
jnp
cmp
scas
clc
fdivrl
push
lods
ret
jae
dec
jle
ds
xchg
push
loop
test
jnp
out
inc
stos
mull
adc
add
or
adc
and
mov
jg
mov
cs
orl
jb
jge
cwtl
sahf
inc
dec
xlat
xchg
pop
pop
cmp
cmp
dec
dec
xor
cld
repz
sti
mov
adc
cmpsb
and
fcompl
jnp
imul
mov
outsb
push
dec
sbb
aaa
add
sub
push
subl
cmpsl
xor
cwtl
mov
shll
jnp
and
or
popf
sbb
pop
mov
addr16
and
or
call
pop
in
fisubrl
sub
push
movsl
ficoms
nop
mov
add
inc
push
xchg
mov
mov
and
jb
and
dec
fstpt
lods
dec
ds
pop
adc
sub
xor
pop
std
inc
sub
and
orl
insb
sahf
enter
insb
fildl
mov
daa
mov
mov
push
outsb
dec
inc
xchg
pop
pop
repz
and
push
xor
lcall
std
cmpb
push
jno
stc
int
mov
add
mov
cmc
sub
push
lcall
push
repnz
lret
jp
mov
xor
inc
es
inc
pushl
push
sub
sbb
pop
out
mov
xor
insl
fidivs
gs
addl
inc
insl
out
mov
test
nop
hlt
cmp
xor
movsb
or
mov
ret
icebp
movl
fs
loope
or
and
dec
xor
loop
es
test
lods
jecxz
dec
adc
std
lret
xlat
in
std
stc
in
jmp
jns
xchg
sub
fadd
mov
icebp
cmpsb
std
or
imul
jns
orb
insb
sub
cli
xchg
scas
pop
dec
push
fbld
jno
scas
les
cmp
ret
popf
xor
andl
fstpt
jns
ja
iret
stos
and
shl
and
test
add
mov
add
sbb
mov
lret
pop
mov
loop
and
loop
push
jns
fidivrs
push
hlt
lcall
aas
jmp
scas
loopne
jl
cmp
ret
adc
imul
nop
stc
xchg
sub
inc
xchg
in
out
xor
xlat
sub
xor
add
push
xlat
pusha
adcb
mov
or
dec
sub
out
cmp
ljmp
dec
fisttps
sbb
jmp
pop
dec
pop
jmp
push
xchg
sub
add
ret
jne
stos
test
mov
mov
pop
or
shl
mov
stos
add
iret
sub
jg
lock
adc
roll
ret
mov
cs
add
negl
xlat
dec
mov
aaa
out
loop
gs
mov
pop
leave
xor
jg
or
pusha
fstpl
xchg
icebp
jp
dec
lock
scas
cmp
lcall
mov
lock
out
jp
fistpl
xlat
jno
call
push
popa
imul
cmp
bound
outsl
or
sub
lret
mov
stos
orb
lods
push
push
inc
and
mov
test
dec
movsb
fwait
jae
sub
pop
cwtl
fs
mov
sub
cmp
js
stos
dec
fcoml
outsb
sbb
les
xchg
sub
mov
sub
icebp
mov
or
dec
loopne
lret
and
jb
sbb
xor
xor
pop
dec
rcr
fsubrl
hlt
rol
mov
mov
push
or
fwait
lock
sbb
mov
fidivrs
imul
stos
ja
stos
pop
cmp
push
mov
sbb
call
add
sbb
out
xor
dec
imul
sbb
xchg
mov
push
outsb
les
sbb
adc
mov
das
sbb
lret
jg
jmp
push
pushf
lds
jae
dec
push
imul
xchg
or
test
dec
jae
mov
pop
cmp
pop
movsb
and
or
pop
shlb
fstpt
xor
jae
dec
xlat
add
pop
jecxz
test
nop
andb
imul
in
sub
pop
push
call
xor
mov
cmp
mov
xchg
ljmp
dec
shlb
pop
hlt
cmp
daa
xor
fimuls
xlat
nop
rcrl
push
insb
in
xchg
loopne
das
push
pop
dec
mov
or
push
popa
or
stc
iret
adc
gs
outsl
dec
icebp
adc
push
cmp
inc
and
test
cmpsb
pop
adc
sub
pop
jb
push
and
mulb
mov
or
arpl
or
jle
or
xor
xchg
aam
jne
fstps
cli
mov
rorb
popf
out
ss
outsb
adc
xor
and
hlt
iret
and
jb
sbb
push
imul
cmp
pop
sahf
or
fstp
pop
lret
lock
push
daa
fisttpll
decl
clc
xchg
mov
sub
cmp
insl
xor
addb
push
xchg
icebp
and
int
xchg
add
push
mov
movl
in
or
rorl
shll
jmp
jae
std
lret
movsl
or
les
cwtl
arpl
dec
imul
sub
dec
inc
pop
imull
call
in
daa
movsb
xchg
sub
sarb
insb
push
inc
nop
mov
out
fcoms
ds
push
ret
xchg
sub
outsl
cwtl
mov
mov
adc
push
cmp
dec
dec
sub
pop
pop
or
cld
adc
out
imul
popa
push
pop
jmp
or
jo
fnstenv
in
out
test
or
lret
xor
and
cwtl
cmp
je
add
push
dec
pop
loope
out
insl
push
mov
xlat
hlt
fisubl
sbb
pushf
je
lea
movsl
lock
or
test
aaa
push
push
mov
hlt
add
xchg
pop
loopne
dec
and
shll
sub
jge
jb
mov
xlat
sub
inc
ja
xchg
lods
mov
into
inc
shrb
out
jne
pop
arpl
mov
sub
pop
call
xor
movsl
cmp
lahf
in
and
call
push
shrb
outsb
jg
cli
bound
add
movsl
pmaxub
addr16
pop
pushf
cld
dec
pop
loop
mov
movsl
cmp
cmp
jmp
sbb
sub
fld
sti
xor
mov
cmpsl
outsb
jmp
insb
jmp
shlb
jmp
test
repz
pop
out
jae
fistl
fsub
stos
add
test
in
mov
jne
mov
push
fmuls
jmp
or
out
ror
lea
or
push
or
mov
inc
stos
and
xorb
sub
andb
fcompl
inc
xorb
dec
jg
cmc
repz
push
sbb
testl
repnz
and
clc
cmpl
dec
in
sahf
imul
dec
arpl
xchg
or
andl
icebp
test
and
fstps
fsubs
cmp
rorb
mov
enter
stos
xchg
nop
jns
cmpl
fsincos
mul
mov
cmp
es
mov
rcll
adc
dec
fsts
stos
imul
lret
bound
mov
sbb
cmpb
sbb
cwtl
addr16
xor
pop
repz
cmp
movsb
imul
jns
fnstcw
push
sbb
inc
push
push
fsubs
jae
push
and
mov
push
test
pop
xlat
pop
mov
ret
movsb
test
call
adc
inc
pop
out
aam
inc
fimull
mov
je
cmp
inc
jp
pop
mov
stc
and
mov
push
loopne
add
movsl
inc
out
aaa
sbb
ret
dec
xor
dec
cld
add
sub
daa
inc
fcmovnu
cli
cmpsl
cmp
out
inc
outsl
cmp
inc
shll
lock
dec
adc
cmpsl
mov
jb
dec
idivb
adc
cmc
mov
dec
sti
aam
xlat
jb
sbb
cmp
inc
aam
and
pop
out
inc
orb
mov
pop
sbb
icebp
xchg
xor
mov
negb
xor
ret
and
pushf
push
rcrl
mov
dec
push
mov
je
outsl
jae
adc
jle
aad
insb
arpl
or
xor
loope
push
ja
dec
cmp
cmp
out
loopne
pusha
repz
adc
ja
or
movsl
mov
inc
mov
inc
mov
xchg
fdivrl
cmp
jmp
sbb
inc
lea
cmp
add
pop
stc
stos
or
outsl
inc
inc
push
push
imul
imul
mov
or
mov
jae
rcll
imul
popf
scas
pop
adc
jne
xlat
or
sbb
or
icebp
mov
cmp
xor
neg
push
and
rcrb
sbb
jmp
nop
sub
out
ljmp
mov
xchg
in
push
repnz
fwait
dec
test
sub
out
or
imul
gs
mov
push
iret
push
outsl
and
int3
cmp
test
pop
sti
ljmp
cmp
jo
pop
sbbb
cmp
xor
mov
cli
faddl
cbtw
out
jle
jbe
or
mov
test
mov
adc
je
push
sub
leave
mov
jae
sub
insb
addl
cwtl
out
stos
mov
inc
sub
pop
jp
inc
sbb
or
push
lcall
jg
jb
dec
in
out
mov
stos
jg
sub
cmp
push
insb
add
jge
xchg
add
je
testb
out
push
imul
nopl
cltd
push
mov
sbb
push
xor
adc
jo
jnp
dec
popa
jne
jno
pushf
out
imul
sti
and
push
dec
inc
fnstcw
arpl
std
push
fcmovne
mov
leave
fidivrl
xor
push
mov
faddl
xor
notb
ret
xlat
nop
cmpsl
hlt
cmp
pop
cltd
fwait
inc
das
sub
out
mov
pop
lcall
add
xchg
repnz
jg
movsl
std
bound
inc
jge
pop
in
cs
xlat
out
pop
sbb
mov
fidivrs
dec
lock
xor
cli
mov
xchg
dec
mov
loope
jl
pop
xlat
adc
dec
push
repnz
out
lds
cmp
repnz
cmp
jg
movsb
push
push
shlb
jbe
xchg
mov
xor
mov
cmp
xor
inc
cmpsl
leave
pop
add
add
sub
add
sub
incl
hlt
outsl
movsb
push
cwtl
mov
inc
nop
cli
sbb
clc
fisubrs
jae
pop
sub
jp
mov
inc
sub
add
mov
xchg
xor
xor
mov
aaa
loope
scas
fisubl
dec
xchg
cwtl
cmp
jl
flds
in
dec
cld
jmp
loopne
leave
ja
pop
xlat
adc
jae
xor
sbb
jl
shr
pop
push
jp
sub
dec
cmp
dec
xlat
mov
mov
jmp
add
xchg
ds
cld
movsb
xchg
outsb
sub
sbb
gs
cmp
and
jl
or
mov
cli
mov
lcall
mov
std
mov
sbb
sti
stos
flds
aaa
cmp
jg
mov
fisttpll
or
cmp
and
lods
adc
fndisi(8087
sbb
push
fldl
pushf
in
push
and
jns
mov
xor
push
or
add
and
xor
cmp
lods
inc
push
rcr
pop
push
movsl
lods
cmp
jmp
cli
push
sub
out
xlat
iret
out
dec
out
add
sub
dec
leave
jecxz
jns
or
out
adc
sarl
mov
daa
ljmp
xor
imul
pop
mov
divl
xor
jmp
out
sbb
sbb
push
std
mov
cmp
inc
dec
lret
dec
push
mov
sti
push
movsb
mov
loopne
sub
xchg
mov
repnz
rorb
and
pop
imul
iret
fwait
gs
dec
sarl
mov
imul
inc
xlat
mov
lock
inc
sti
inc
pop
xchg
xor
sahf
sbb
push
lock
mov
aam
out
outsl
sbb
add
xlat
out
dec
icebp
mov
icebp
out
adc
iret
addr16
xchg
cmovs
stc
incb
rcll
icebp
dec
aaa
xchg
mov
dec
je
sbb
aad
cmp
mov
andb
xchg
sub
mov
insl
push
jae
jne
mov
push
daa
pushl
sub
insb
push
jg
inc
shrl
sbb
push
add
add
outsb
fistl
adc
lock
bound
xor
push
shrb
ds
jbe
fildl
xchg
stos
pushf
mov
sub
inc
fbstp
jno
imul
ljmp
adc
sbb
shr
pop
lret
mov
in
enter
in
inc
fdivs
leave
sub
mov
mov
and
mov
loop
pop
daa
push
and
mov
dec
jp
pop
lock
xchg
out
rcr
push
or
mov
lret
dec
scas
jb
xor
xchg
pop
xchg
lahf
dec
adc
mov
imul
in
mov
dec
movl
sbb
mov
pop
sub
repnz
movsl
lret
dec
push
mov
outsl
push
dec
inc
add
push
mov
push
mov
pop
cmpsb
clc
rol
adc
xor
aad
cmp
shll
push
push
dec
pop
outsl
mov
ja
shld
insb
jne
mov
jne
mov
mov
adc
outsl
test
or
mov
fstpt
nop
pop
and
pushl
lea
or
xor
dec
xlat
mov
dec
das
ds
cli
out
fstpt
sub
mov
loop
cmpb
add
dec
hlt
mov
mov
inc
xlat
mov
test
cld
dec
rcr
lret
incl
sbb
mov
mov
fwait
mov
mov
addr16
mov
cmc
and
movsl
sub
jbe
pop
or
daa
cmpsb
inc
test
cmp
jne
or
push
xchg
jmp
ja
inc
mov
repnz
leave
das
das
jg
shufps
addr16
xlat
int
enter
push
sub
push
shr
adc
mov
sub
push
xlat
mov
mov
or
ja
fldenv
jmp
lea
js
pop
adcb
rcrb
jecxz
mov
mov
je
cli
jge
xor
enter
pop
or
int3
cmp
dec
js
arpl
push
pop
xchg
repz
dec
xor
mov
adc
push
fcompl
inc
pushf
addr16
mov
jp
dec
mov
lods
shlb
fildl
ja
stc
xchg
mov
nop
and
fldt
push
mov
mov
push
cli
sbb
push
call
imul
pop
imul
clc
into
imul
xor
jnp
fldenv
in
or
out
cld
jge
xor
ds
sbb
push
sub
dec
loop
clc
mov
cmp
stc
popf
loope
and
xor
cli
jb
cmp
adc
xor
mov
pop
repnz
scas
std
push
dec
jp
lock
mov
add
push
outsl
addr16
fadds
jae
in
test
xor
push
sbb
push
xlat
push
xchg
or
inc
mov
adc
lods
aad
adc
sti
in
adc
stos
add
jno
mov
leave
or
int3
mov
fs
mov
lret
sub
aam
sub
mov
push
jne
scas
je
sbb
frstor
jecxz
sub
subl
outsb
scas
and
xor
push
sbb
push
ss
sbb
or
imul
push
mov
jb
xlat
push
push
mov
adc
mov
jle
lcall
pop
les
jae
or
out
ja
cmp
call
or
addr16
pushl
push
adc
pop
xlat
cs
xor
fscale
mov
push
dec
cli
xchg
popf
cmp
or
mov
aas
xor
jp
push
out
dec
and
in
mov
inc
incl
fstpt
pop
sbb
in
adc
and
xchg
jg
ret
movsb
fs
scas
and
jns
xchg
jns
push
jg
mov
stos
arpl
add
xchg
cmp
sahf
xor
cmp
jecxz
testl
cld
mov
ret
shrb
movsl
imul
testb
adc
sbb
and
push
imul
xchg
movsl
adc
out
outsl
jne
mov
adc
xorl
cmp
pop
xchg
add
cmpl
andw
les
sub
ret
hlt
dec
fmulp
std
jl
fcomi
mov
cmc
out
xchg
adc
pop
pusha
jnp
add
pop
jno
fdivl
test
mov
lret
repz
xlat
mov
lock
not
push
orb
int3
cs
pop
cmp
sbb
xor
sbb
movsb
jp
inc
mov
in
push
mov
lret
sub
loopne
shlb
dec
or
push
push
or
lahf
bound
push
sub
lods
mov
jne
xchg
push
mov
fsts
fcomi
addr16
sbb
inc
and
imul
mov
fwait
std
fwait
pop
inc
scas
xchg
xor
testl
push
pop
sub
push
jne
popf
call
sub
jle
or
cmp
pop
out
mov
mov
mov
xchg
pop
lods
inc
inc
cmp
push
xor
mov
cmp
mov
xor
movsb
cmp
inc
cmp
lods
scas
dec
cmp
and
sbb
out
sub
cld
mov
fcompl
or
jns
lods
inc
or
adc
jno
shrl
pusha
sarb
cmp
call
xchg
jl
nop
lret
insl
pop
addr16
sub
test
lahf
out
stc
test
mov
hlt
lock
push
fcoms
aad
jns
dec
pop
fs
dec
dec
mov
push
loopne
dec
sbb
cmp
jl
add
andb
nop
cmp
cwtl
sbb
sarb
addr16
js
pop
adc
xchg
sbb
adc
jg
mov
pop
pop
cmp
pop
pop
fisttpl
negb
sub
arpl
lahf
pop
insb
loop
cli
hlt
loop
in
jne
orl
xchg
pop
jae
push
dec
das
xchg
sbb
xor
lret
std
rcrl
imul
out
xchg
mov
cmp
loopne
dec
sbb
nop
inc
insl
add
shrl
pop
pop
xchg
xchg
bound
fnstenv
jp
mov
leave
les
sub
mov
rclb
mov
jg
mov
std
jae
push
fidivrl
dec
jae
fldcw
xlat
enter
or
jnp
mov
lret
pop
imul
jne
add
addr16
pop
movsl
xor
pop
pop
es
and
popa
shrl
add
jae
aas
rcrb
int
cs
lcall
ja
pop
xchg
cmp
mov
pop
lods
ficoml
aam
cs
pop
mov
outsl
cmp
pop
jnp
rorb
loopne
insb
add
dec
imul
iret
add
neg
inc
insb
pop
rcrb
ret
jae
and
fwait
adc
iret
sbb
mov
xchg
xor
inc
xchg
iret
mov
adc
xchg
push
adc
test
dec
jmp
push
testb
fstl
xchg
loopne
mov
repz
ret
out
stc
mov
xlat
gs
jge
or
clc
imul
jns
into
shlb
cmp
push
jae
fldt
sub
mov
addl
mov
lods
imul
rcl
sub
int3
xchg
ds
push
sarl
jns
push
xor
or
fstl
pop
imul
sbb
cs
xchg
pop
pop
cli
xlat
dec
sbb
in
jp
outsl
mov
in
dec
imul
pusha
mov
pop
adc
add
and
and
testl
push
ss
xor
jnp
inc
or
push
or
mov
test
fmul
test
sub
mov
xor
pop
mov
mov
cmp
lcall
push
ds
push
mov
loopne
xor
or
jb
dec
push
jnp
jne
in
sub
sub
cmp
stos
sbb
inc
mov
cmp
and
cmc
lret
dec
push
push
or
sbb
fidivs
jl
sub
mov
insl
lcall
jnp
ficoml
push
movsb
or
fbstp
xchg
xlat
xor
pushf
mov
movsl
xchg
push
mov
fwait
push
mov
push
pop
xchg
inc
orl
loop
pop
sbb
and
pop
dec
shll
mov
cld
daa
mov
stos
sub
adc
jno
or
xlat
push
cmp
mov
mov
sti
sbb
push
pop
xchg
je
cmp
mov
test
movsl
push
fildl
jb
gs
repz
cld
aam
js
in
pop
rcrb
mov
fs
xchg
xor
std
cs
sbb
push
cmpl
sbb
andl
pop
xor
stos
test
pop
imul
cli
xchg
mov
mov
pop
test
jns
addb
testl
dec
gs
mov
popa
xor
mov
cmp
or
test
stos
push
lcall
cli
xchg
js
mov
pop
dec
push
pop
aam
out
mov
cmp
gs
sub
ljmp
cs
fndisi(8087
sarb
cmp
dec
cwtl
jo
dec
aam
orl
pop
es
push
xchg
rcl
fidivl
and
cmpsl
and
stos
mov
daa
mov
mov
dec
imul
xor
and
shrb
fsub
jae
repz
cmp
xchg
clc
xor
lock
les
dec
xlat
lahf
adc
sbb
push
mov
insl
mov
lods
cwtl
stos
ds
cmpsl
mov
movsb
ret
cmp
and
add
dec
mov
push
xchg
fstl
push
iret
movsl
insb
mov
dec
pop
dec
lods
ljmp
push
cmc
negb
adc
in
stc
and
dec
lock
fnstcw
mov
in
sar
and
sub
cmp
fisttpl
fdivrl
mov
jmp
cmp
inc
dec
mov
push
push
lods
push
sbbb
iret
and
and
stc
adc
add
sub
mov
imul
pop
lret
iret
pop
mov
xchg
adc
icebp
pop
test
lea
lahf
adc
aam
in
fldenv
enter
std
push
sbb
inc
mov
pop
sti
inc
inc
sbb
cs
jb
ret
pop
sahf
pop
sbb
pop
xchg
mov
stos
daa
xor
imul
nop
ds
std
repz
xor
adc
xchg
je
adc
cmp
pushf
js
mov
ljmp
jns
enter
leave
fcomi
shl
pusha
push
lret
dec
and
imul
pushf
neg
sti
fldcw
fsubrl
adc
ljmp
dec
add
and
std
or
xor
xor
lock
scas
lock
lahf
cli
dec
sub
ss
or
ljmp
out
sub
rolb
pushf
sbb
xor
rclb
std
sbb
jmp
outsl
adc
xor
scas
les
dec
stc
xchg
xchg
fcmovne
loopne
add
dec
add
out
bound
sbb
push
call
push
sub
loop
inc
ret
mov
pusha
test
movsb
xor
add
add
test
cmp
fcmovnu
pop
sahf
jno
aam
dec
sub
pusha
mov
sbb
cmp
aam
rcll
xor
fprem
mov
add
pop
xchg
addr16
xlat
test
iret
ljmp
mov
fldenv
sbb
xor
or
mov
jge
daa
mov
sub
push
jae
xor
mov
or
xchg
push
popa
imul
mov
ret
fmul
js
pop
fisubrs
outsb
fcomps
add
or
or
ret
cmp
cli
fldt
adc
xchg
pop
mov
test
out
jb
movsl
pop
push
xchg
jae
sbb
insl
loope
jne
add
movsl
shll
cltd
scas
xchg
clc
pop
lret
xor
in
test
adc
inc
xor
les
pop
dec
sbb
jae
pop
xchg
or
sub
pushf
push
inc
dec
addb
fstpl
subl
or
mov
leave
call
xlat
out
push
pop
xor
jp
pop
fucomi
push
sbb
push
xor
jne
fstpl
sbb
loop
or
push
lcall
sub
outsl
lods
xchg
sbb
xlat
inc
movsl
and
pop
sub
rorb
mov
gs
and
fcmovb
icebp
lret
xchg
cmp
cmp
xchg
imul
xor
popf
jl
fnstenv
xchg
je
jp
int3
cmp
imul
pushf
push
test
cs
push
pop
sbb
adc
sbb
dec
xlat
out
imul
cli
sub
pop
jae
inc
adc
loop
fldt
xchg
push
mov
sahf
notb
pusha
xor
js
insl
xor
loop
pop
pcmpeqb
xor
scas
addr16
out
adc
repnz
or
cmc
test
js
test
daa
add
data16
xchg
fwait
imul
inc
fstps
sbbb
sbb
mov
adc
inc
mov
jns
test
push
push
icebp
cmc
sbb
push
outsl
movsl
mov
fisttpll
pop
and
add
xchg
or
inc
sub
scas
sbb
insl
ss
jle
aas
push
pushf
pop
xor
pop
xchg
lret
fldenv
loopne
inc
out
mov
mov
decl
dec
pushf
push
lods
sahf
lea
gs
jno
mov
or
into
push
ja
insb
and
fsubrp
inc
movsb
and
rorb
movsl
push
fisubs
mov
leave
js
pop
adcb
out
scas
xorb
jo
sub
xor
sub
push
jo
outsb
adc
in
sbb
popf
sub
or
adc
and
mov
scas
sti
aam
cmc
add
xor
pop
add
imul
and
push
add
push
pop
imul
cs
pop
scas
ss
outsl
push
jmp
pop
xchg
jle
test
test
lahf
xor
xor
movsl
dec
dec
fcmovnbe
mov
mov
daa
add
mov
xor
hlt
push
dec
jne
loop,pn
andb
jnp
rcrb
inc
sbb
adc
and
lods
pop
cli
dec
xor
cmp
jns
xor
pop
das
mov
cli
or
outsb
test
push
cltd
outsl
xorb
and
pop
movsl
bound
and
mov
sub
dec
iret
lods
loope
mov
clc
xor
push
sbb
addr16
fidivs
movsb
shll
pop
xor
and
pop
mov
push
mov
cmp
or
or
fnstenv
xor
mov
fcmovnbe
inc
test
stos
mov
jae
jns
xchg
dec
test
xlat
pop
jbe
adcb
jl
mov
dec
push
pop
test
push
add
lret
dec
cli
or
jp
cwtl
fs
or
into
push
cmpsl
lret
ja
loope
dec
mov
popf
loop
pusha
push
push
mov
and
out
push
std
jge
xor
movsl
ds
sahf
dec
xor
outsl
xchg
push
gs
jecxz
cld
pop
push
stc
sbb
xor
dec
repz
imul
pop
cmp
adc
addr16
stc
je
or
push
setp
jecxz
jp
and
fsub
inc
push
adc
lods
xor
lret
fldt
out
push
jns
xor
scas
adc
xchg
sub
fiadds
mov
cld
xchg
scas
xlat
pop
xor
jbe
outsb
subl
test
pop
iret
out
mov
daa
and
pop
aad
pop
push
xlat
stos
mov
adc
mov
cs
inc
mov
jp
push
jns
mov
add
into
mov
cltd
std
jmp
leave
mov
mov
mov
xchg
jae
xlat
adc
cli
adc
jmp
fstpl
push
cltd
std
les
sbb
jo
sub
in
ror
gs
popf
dec
lret
test
pop
out
cwtl
outsb
or
ds
imul
lret
or
or
cs
ja
push
adc
sub
mov
out
cli
roll
andb
sti
sub
jo
sbb
nop
outsl
movb
sbb
add
jl
sub
pop
jae,pn
fildl
add
jmp
jmp
mov
out
aam
sti
push
cwtl
xorb
or
xor
insb
inc
mov
xchg
add
jmp
add
in
xchg
lret
xor
ds
mov
aad
jg
inc
andb
shll
mov
adc
mov
stos
andl
sub
inc
inc
stos
test
dec
addr16
mov
cmpsl
cld
push
mov
out
scas
or
jae
adc
mov
out
jmp
dec
sbb
sub
pop
xor
mov
pop
mov
aaa
iret
rcrl
cmc
les
inc
mov
push
xchg
xor
jae
xor
xchg
mov
jbe
mov
mov
adc
dec
cltd
pop
jno
jl
jnp
dec
jne
dec
sbb
cmp
push
adc
stos
inc
add
shrb
sahf
mov
mov
scas
inc
aam
cmp
lahf
gs
and
imul
jnp
add
xlat
cmp
or
mov
sbb
dec
stos
pop
pop
push
fldl2t
les
cmp
cmpsb
mov
pop
push
int
rcrl
sbb
and
pop
pop
in
push
sub
mov
push
out
cmp
pop
mov
orb
and
mov
mov
mov
fcmovne
push
add
xor
sbb
mov
cld
fistl
cld
push
xor
mov
or
push
mov
pop
xchg
into
add
dec
sbb
adcb
out
jns
inc
mov
cld
sbb
hlt
aad
mov
inc
dec
loope
ja
xor
leave
sub
sub
dec
das
lea
subb
pop
lcall
xchg
jnp
pop
fs
cmp
dec
clc
aas
adc
dec
xlat
push
push
jl
fnstcw
ljmp
insl
dec
and
cmp
push
stos
and
push
bound
inc
nop
mov
fsts
pushf
adc
jmp
xchg
or
mov
push
push
insb
dec
and
out
mov
mov
outsb
fstpl
sbb
popf
pop
jne
pop
pushf
inc
subb
shll
push
pop
or
loop
xchg
jns
xchg
push
inc
idivl
xchg
movsb
dec
jns
fnstcw
clc
js
pop
adc
jns
xchg
cmp
int3
push
adc
test
lock
xor
sub
pop
push
bound
or
hlt
mov
fsts
and
jp
fs
jnp
fsts
clc
stc
addb
outsb
or
jmp
xchg
mov
fists
dec
jae
pop
aad
lret
cli
test
in
sub
pop
add
sbb
push
cmc
loopne
cwtl
jl
pushf
std
sbb
push
aam
iret
dec
xor
push
push
mov
pop
std
adc
dec
push
dec
les
movsb
pop
in
xchg
mov
xchg
in
and
inc
sub
sub
popl
mov
shrb
cmp
adc
out
mov
sti
lea
notb
hlt
inc
sub
jmp
pop
int3
or
je
ss
lret
add
inc
popa
outsl
xor
mov
imul
jne
jmp
jl
stos
call
movsl
ret
push
push
xlat
lret
pop
out
xchg
ret
and
iret
dec
test
push
out
xchg
sub
push
inc
add
ret
add
repnz
pop
ja
xchg
and
lods
insl
lret
scas
mov
loop
sub
lods
xchg
shl
std
jb
xlat
jge
jmp
scas
push
rcr
add
jg
or
test
dec
and
or
pushf
inc
sbb
cmpsb
fucomi
mov
sub
push
arpl
ja
fsts
mov
or
fldt
push
leave
test
mov
inc
push
mov
inc
inc
mov
scas
js
cmovbe
mov
cmpsb
jbe
mov
mov
pop
in
aas
mov
gs
into
adc
or
sbb
pop
outsl
jns
sbb
jp
push
jno
sub
lods
pushf
cmp
jecxz
add
int3
mov
push
sbb
fidivs
jl
or
lahf
lret
xor
fsubs
jns
push
or
push
je
and
je
xorb
lahf
fucomi
xor
jecxz
test
push
jge
mov
push
pop
ljmp
pop
imul
orb
push
push
mov
mov
shlb
jae
cmc
cmp
adc
ret
pusha
pop
xor
xchg
pushf
pop
das
pop
sahf
push
shlb
mov
arpl
mov
push
push
and
dec
adc
fbld
ss
jno
mov
xor
stos
lock
ret
add
cs
adcb
sub
cmp
mov
gs
or
xchg
pop
mov
dec
sbb
cld
mov
push
inc
dec
scas
cmp
add
push
daa
enter
mov
sti
pop
loop
test
scas
jb
sub
xchg
ret
add
popa
loop
adc
call
pop
insl
test
cs
dec
lock
push
cmp
or
dec
loopne
in
mov
enter
insl
test
mov
test
push
js
pop
mov
jge
test
xchg
popa
sub
push
and
nop
push
jge
xor
lret
xor
mov
notb
pusha
or
cli
mov
fnstenv
xor
out
mov
dec
add
sub
jb
in
pop
cli
mov
xchg
jno
inc
jb
int3
das
pop
std
lret
and
stc
arpl
mov
ja
sub
bound
bound
cmp
and
aas
pop
inc
xchg
test
or
rorb
add
sub
lods
shll
orl
leave
dec
negl
in
and
and
aam
push
push
xor
pop
sbb
xchg
mov
insb
orb
and
ret
sti
or
pop
cs
cmp
add
test
adc
add
sti
cli
mov
sub
mov
jno
xchg
sbb
ss
cld
ds
adc
xchg
adc
roll
lea
push
mov
sub
nop
aad
inc
xchg
dec
in
sub
cli
imul
ds
dec
xor
push
push
cmp
jno
mov
repz
cmp
imul
lea
fisubrl
orb
or
insl
inc
fabs
dec
insb
or
loopne
add
mov
in
mov
ds
sti
mov
lret
movsb
icebp
lock
mov
ds
xlat
mov
stos
out
fidivs
jmp
push
and
jnp
dec
sub
xor
stc
fs
cmpsb
mov
in
dec
dec
lea
push
cmp
push
addr16
jo
sbb
lret
sbb
idivl
pop
pop
sbb
xchg
push
rclb
push
aaa
pop
xchg
xor
cmpsl
cmp
push
out
sbb
push
push
add
imul
mov
imul
ss
push
enter
jne
addr16
sub
and
dec
leave
loopew
popl
mov
jg
xlat
cmp
stc
ss
insb
add
add
adcb
daa
jb
add
jbe
xchg
and
sub
mov
pop
aaa
dec
out
cmpsl
fs
js
sub
pop
jbe
iret
nop
mov
loopne
add
jnp
add
cmp
xchg
xorb
add
mov
xor
jl
and
pushf
test
insb
adc
pop
ret
aam
dec
mov
pusha
sbbl
fcmovnu
adc
inc
test
movsb
or
xchg
adc
xor
loop
adc
mov
mov
pop
fsts
add
jge
inc
inc
sub
leave
ljmp
movsb
addr16
add
dec
add
cmp
mov
cs
cmp
jmp
add
sub
loopne
movl
push
fsubrl
pop
test
push
cltd
push
cli
rolb
dec
gs
push
clc
add
cmp
loop
mov
test
lods
add
decb
fisttps
neg
mov
pop
std
and
clc
xlat
jle
mov
or
jp
cmp
frstor
mov
addl
hlt
ja
or
or
push
hlt
add
cli
jg
sbb
mov
repz
xchg
pop
aas
je
cmp
mov
lock
cmp
lret
push
dec
das
push
sbb
xchg
jns
add
sbb
out
cld
dec
lds
add
or
in
mov
ds
test
add
loope
push
jle
pop
xchg
xor
adc
stos
ja
jp
xlat
lret
cld
imul
jne
push
out
ja
ja
mov
mov
icebp
test
mov
xor
into
iret
outsb
adc
shll
imul
mov
dec
push
leave
shrb
jmp
add
test
cwtl
test
std
jbe
scas
push
arpl
inc
cmp
pop
and
dec
adc
lcall
cmp
lods
out
std
and
add
adc
add
pop
sub
push
xor
into
jp
xchg
cmp
mov
aaa
ret
mov
in
imul
cld
outsl
les
or
fiadds
sbb
rcll
icebp
push
sub
jns
lock
rcr
data16
push
test
sbb
xchg
sbb
jp
push
inc
insl
decb
push
push
pop
mov
and
fistpl
adc
jae
pop
cmpsl
adc
push
mov
ja
je
iret
addr16
hlt
and
loopne
xchg
dec
rorb
in
out
jae
xlat
movsl
cmp
fimull
divl
or
xchg
sbbb
imulb
xorb
cmp
xlat
popa
push
push
push
sub
mov
or
sub
xlat
sub
pop
sbb
xchg
sbb
ljmp
pop
push
inc
jmp
sub
xor
cmp
add
xor
lods
mov
push
outsb
test
fldenv
sarl
stc
cs
lret
xlat
std
loope
dec
adc
outsl
and
sbb
test
dec
cld
cmp
out
jae
jb
add
dec
dec
cmp
mov
pop
fisttpl
sbb
movsb
xlat
push
xchg
mov
mov
dec
ret
lock
iret
or
ja
mov
fstpt
cs
idiv
jl
dec
mov
push
sub
dec
int
in
test
sub
aad
push
sbb
mov
jne
mov
pop
push
nop
ljmp
cwtl
push
pop
cmp
lret
mov
sub
dec
mov
push
in
xor
adc
lret
test
popa
inc
xchg
lret
push
in
lds
and
insl
dec
test
dec
push
std
jmp
pusha
xchg
insl
or
dec
mov
xchg
cltd
ret
sub
and
ja
sub
fcomi
out
dec
in
dec
lds
add
sbb
faddl
mov
push
imul
sub
jge
ret
das
cmpsb
pop
in
jge
sbb
add
addr16
fadds
lock
push
fsubl
xchg
aaa
xchg
fidivl
lods
das
mov
cmpb
test
mov
push
and
idivb
test
or
inc
xor
mov
out
cmpsl
push
cmp
sahf
pop
rcrb
or
js
data16
xor
fisubs
push
jmp
mov
lret
adc
pop
mov
movsb
sub
dec
and
pusha
pop
jl
mov
cmc
jno
jp
xor
jns
xlat
jg
sub
push
mov
sbb
mov
mov
test
pop
shl
insl
fistl
insb
fnop
cmp
cmp
int
enter
xor
fs
or
pusha
out
inc
es
cmc
insb
pop
iret
cmpb
cmp
mov
inc
xlat
lock
repz
jmp
fs
ss
loope
ds
enter
aaa
scas
jns
fnstenv
or
repz
xor
cli
lcall
cltd
std
addr16
lods
into
add
jns
test
adc
mov
fnsave
adcl
jnp
mov
pop
cwtl
xor
cld
dec
and
xor
fstpt
xchg
stos
movsb
inc
test
insb
sub
cmp
scas
push
mov
pop
out
pop
mov
shrb
fidivrl
lock
pop
das
mov
inc
xchg
sbb
cmp
test
mov
test
push
mov
sbb
push
lea
xlat
jb
push
fs
sub
inc
je
adc
xor
outsl
jp
push
das
push
pop
cwtl
xor
popf
or
inc
test
inc
in
popf
cmp
js
cmp
mov
sbb
mov
outsb
dec
stc
fisttpl
int3
dec
sub
xor
xchg
call
int3
shl
inc
pop
in
cltd
and
cmpsb
or
loopne
scas
std
xor
xor
jae
cmp
push
push
std
xor
popf
cmpl
cmp
xlat
stos
lret
aaa
push
jns
test
xlat
cmpsl
mov
call
test
xor
cwtl
cmp
sti
out
add
das
dec
mov
cmp
ljmp
cli
mov
and
nop
push
cmpsb
adc
out
popa
clc
icebp
sahf
xlat
std
push
dec
scas
dec
cmp
xorl
test
dec
sbb
pop
pop
and
inc
or
jbe
xor
cmpl
scas
stos
cmp
fmulp
mov
pushf
dec
inc
pop
mov
pop
pop
xchg
push
push
jne
xchg
ror
push
mov
push
adc
test
push
imul
jge
inc
pop
loop
and
jp,pn
dec
push
mov
aas
jp
dec
popf
dec
or
add
push
jae
cltd
push
and
movsl
pop
mov
cmc
aam
dec
xchg
movsb
xchg
fsubl
andl
or
hlt
cmp
push
fdivl
ja
test
push
xchg
lods
imul
iret
fcomi
imul
xchg
pop
mov
cld
jge
hlt
push
movsl
addl
stos
enter
js
outsl
mov
arpl
fisubrs
pop
movsl
cmp
out
mov
js
mov
mov
xchg
jae
pop
aam
dec
jns
insb
pushf
out
mov
ds
push
mov
addr16
sarb
xlat
lcall
jge
or
into
or
mov
enter
mov
fs
shl
repnz
in
jp
movsb
jns
test
pop
mov
repnz
imul
add
gs
xor
dec
and
sub
xchg
jae
xor
pop
mov
fs
xchg
cli
push
push
mov
pop
or
dec
push
stc
sub
and
or
orb
fiaddl
jno
fimuls
sub
ds
fcmovnbe
iret
clc
je
xor
jno
mov
or
popa
adc
pop
pop
push
ja
mov
pop
movsl
and
rcr
add
cmp
les
shll
pop
shl
cmp
jb
icebp
add
adc
mov
push
out
push
jns,pt
cwtl
test
cltd
mov
popa
pop
divb
cli
lret
push
jnp
fnstenv
adc
pop
bound
les
pop
xchg
scas
and
mov
mov
daa
push
test
dec
fxch
test
mov
pop
add
ds
lods
fwait
bnd
jo
or
insl
or
sbb
mov
daa
xor
out
jle
test
mov
jno
xor
out
jno
imul
xlat
xchg
iret
push
or
sti
push
mov
mov
stc
push
dec
or
test
sub
push
stc
push
push
mov
std
stc
jne
and
mov
inc
mov
lahf
xchg
sbb
jl
fnstcw
dec
add
lahf
jle
pop
jne
iret
out
jp
and
pop
pop
push
ror
mov
push
mov
adc
mov
inc
cmpb
daa
fisubl
out
sub
pushf
jo,pt
loop
imul
sahf
mov
jae
push
lret
ja
fxch
cmc
jmp
outsb
jge
xor
lods
jae
push
adc
stc
push
test
loopne
fistpl
aam
neg
or
int
stos
icebp
lcall
xchg
dec
and
data16
jae
adc
mov
fldt
cltd
subl
fwait
cmpb
inc
jns
mov
push
in
mov
adc
fsts
int3
fwait
add
add
test
pushf
imul
call
test
sbb
sbb
jmp
push
fldt
cmp
add
insl
pushf
cwtl
into
popf
bound
loop
adc
xchg
mov
inc
jmp
or
sbb
sub
and
iret
gs
mov
stc
dec
push
cmc
rorb
xchg
fsubl
fistpl
and
addr16
dec
cmp
pop
fmul
xor
sub
mov
adc
push
mov
mov
fnsave
adc
daa
aam
pop
xor
jg
stc
mov
push
push
dec
in
insb
dec
mov
push
dec
xchg
mov
cmp
inc
push
adc
pop
mov
cmp
cmp
xor
into
add
xor
push
cmpsl
xor
mov
xor
and
repz
jae
mov
stos
jb
jbe
mov
jg
daa
sbb
rorb
dec
mov
dec
jnp
and
movsb
test
nop
icebp
outsb
stos
sbb
pop
fadds
iret
dec
push
inc
pop
cltd
xlat
aad
ljmp
cli
sbb
and
mov
js
clc
pop
insb
xchg
fsub
or
stos
dec
fs
cmpsl
inc
xor
scas
repz
push
sbb
cmp
inc
pop
out
das
inc
xor
push
inc
lods
push
lods
cmp
cmc
faddl
cmpsl
pop
or
dec
jmp
push
lcall
fstps
scas
cmpb
loope
xor
test
jle
push
push
mov
bound
mov
ss
or
je
pop
out
fsubs
dec
jmp
out
add
movl
push
out
add
push
xor
dec
xchg
ret
call
add
je
mov
push
imul
push
sub
call
mov
adc
cld
xchg
je
cmp
call
pop
das
jmp
xlat
sbb
or
loopne
call
push
jns
xchg
push
lahf
imul
sbb
inc
and
sub
adc
ja
sub
mov
push
mov
push
roll
shr
dec
out
data16
dec
andl
fldenv
lock
jne
jmp
mov
test
ja
mov
out
xlat
mov
lret
and
pop
dec
fstps
mov
push
cmp
cmpsb
inc
mov
push
into
addb
dec
and
fstl
cwtl
jne
sbbl
mov
fabs
clc
mov
pop
int
sbbb
cmp
dec
jg
jp
xchg
repnz
scas
and
sti
fistl
ret
loopne
dec
xlat
cmp
jns
sarb
je
lds
dec
leave
push
dec
rcll
fsubs
pop
cli
xor
sub
xor
mov
inc
test
xchg
jl
mov
cltd
shll
lods
xchg
adc
or
test
cltd
cli
gs
add
fwait
xchg
fidivl
hlt
pop
push
jo
sub
daa
xor
faddp
clc
test
out
lahf
xchg
lahf
adc
arpl
inc
sbb
and
leave
aad
jle
out
push
fists
cmp
pushf
int3
shll
in
push
test
aaa
sbb
cmp
push
fstpt
ljmp
repnz
add
pop
pop
popf
data16
sbb
fcompl
popf
pop
out
ret
cli
cs
fs
addr16
pusha
push
ficomps
xor
lea
dec
or
mov
jae
inc
stc
addr16
leave
sarl
movl
and
out
cmp
push
out
push
popf
inc
sti
mov
mov
pushf
mov
add
lcall
addb
xor
pop
fisubs
xchg
movb
mov
cmp
fnstsw
xchg
cld
dec
mov
in
orl
dec
mov
sbb
dec
cltd
inc
movsl
and
jns
inc
xlat
or
sub
mov
xor
mov
xor
xor
popf
jno
sbb
fstpt
fadds
dec
inc
mov
mov
mov
mov
add
push
rclb
inc
pop
cmp
cmp
inc
ficoms
sbb
mov
mov
jno
je
rcll
mov
outsl
into
insb
xchg
leave
mov
in
negb
in
adc
lret
pop
sub
iret
sub
inc
lret
and
fisttps
pop
out
cwtl
sahf
mov
cli
dec
mov
sbb
or
dec
pop
dec
inc
pop
jge
out
lds
sbb
and
jnp
adc
fmull
xlat
sbb
cld
lret
jns,pt
fsts
ja
push
adc
in
xchg
mov
ljmp
ja
cmp
mov
pop
push
idivb
xchg
ds
or
sbb
mov
push
dec
dec
nop
rorl
js
push
pop
scas
pop
in
mov
and
rorb
or
in
push
imul
and
mov
sti
and
dec
adc
or
push
shrl
call
mov
in
cld
out
cli
inc
mov
cmp
cmc
fisttpl
daa
ss
pop
mov
inc
leave
push
or
push
cmpb
pop
lds
rclb
shlb
inc
movsl
mov
or
mov
jae
flds
rcr
add
push
add
aam
or
sub
lock
scas
xor
push
ja
in
cmp
jmp
addr16
xlat
or
cmp
add
outsb
cmpsl
in
loop
outsl
inc
inc
jl
sti
jae
xchg
andb
push
fs
ret
shlb
test
shrb
sti
in
mov
mov
fwait
xchg
ds
mov
sbb
lock
xchg
out
jae
jbe
sbb
and
inc
mov
icebp
out
mov
xchg
testb
nop
aas
enter
add
push
push
cmp
mov
pop
pop
adc
loop
xorl
and
jmp
jg
push
scas
cs
pop
stos
test
add
jnp
aaa
push
mov
pop
fidivl
movsl
pop
test
in
sbb
fldl
add
addr16
add
mov
push
push
imul
mov
dec
xlat
ja
add
sbb
mov
pop
inc
iret
mov
ret
jbe
push
flds
insb
ret
jno
sub
cmp
sahf
bnd
mov
pushl
xor
cmp
mov
scas
je
cmp
mov
cmp
out
dec
ljmp
mov
pop
hlt
cmpsl
xchg
out
push
pop
leave
push
cmp
fnstcw
mov
xchg
sub
movsb
cli
and
div
iret
xor
push
mov
addb
cwtl
cmp
mov
addr16
ds
push
into
and
arpl
icebp
pop
mov
js
xchg
sub
push
js
jge
and
js
xlat
mov
ja
xchg
or
xor
jbe
jecxz
jo
push
lret
int
jb
and
push
add
cwtl
mov
xor
test
xchg
mov
pop
lret
xor
out
jge
mov
std
xchg
inc
call
pop
dec
movl
xchg
mov
cld
and
pop
enter
xchg
xchg
aaa
add
mov
cmp
sub
lret
out
mov
out
fucom
imul
popf
dec
subb
js
push
imul
divb
rcr
les
pop
push
mov
or
push
cmpsl
add
xlat
dec
sub
inc
inc
mov
mov
aaa
daa
pop
lret
in
stos
sbb
cmp
mov
adc
and
rorb
mov
mov
fbld
in
adc
stc
push
xor
sti
outsb
push
fld
jne
pop
stc
sub
sbb
mov
arpl
pop
cmc
xor
imul
xlat
xor
and
adc
mov
xor
out
leave
int3
mov
lahf
lea
test
cmp
sub
sub
sbb
dec
jnp
dec
xor
jp
xlat
mov
data16
lock
pushf
cmp
cmp
movl
icebp
add
sbb
iret
jge
push
push
xlat
insl
loopne
mov
mov
dec
mov
mov
sub
dec
inc
cmp
jecxz
jns
in
inc
pop
xor
push
adc
push
dec
shl
sbb
insb
or
inc
subl
cmpb
xlat
fs
mov
cli
fstpt
fninit
jne
xlat
ret
test
out
push
or
push
push
das
popa
xor
pop
std
xor
pop
push
sub
jmp
js
xlat
lret
pop
shrl
call
ror
or
fistpl
movsb
xlat
push
add
push
mov
or
pop
push
imul
mov
stos
subl
mov
xchg
jbe
test
shll
push
and
cmp
sub
or
pop
adcl
cwtl
dec
mov
faddl
cmp
and
mov
pop
pop
mov
mov
mov
daa
xlat
loopne
sbb
dec
outsl
sarl
push
fistpl
ret
repnz
pop
shrb
jg
push
xchg
lods
mov
ja
aad
clc
cmc
pop
jbe
dec
xchg
shr
jecxz
roll
imul
push
pop
loope
inc
popf
stc
push
pop
and
pop
les
sub
pop
pop
push
dec
bound
cmp
xor
or
xchg
sub
dec
bound
enter
mov
cmpsb
mov
leave
or
push
add
xchg
mov
lcall
push
rcrl
mov
add
xlat
lods
cld
outsl
add
mov
add
aam
jns
mov
stc
mov
push
sub
xlat
movb
out
daa
inc
lds
pushf
insl
jg
int3
mov
jne
outsl
fxtract
pop
mov
in
fwait
or
dec
loope
lcall
xor
rcll
inc
cmp
aam
daa
mov
cmp
sbb
and
fstpt
out
add
lret
idivb
add
rol
rcll
xchg
mov
inc
mov
clc
cmp
std
dec
jae
jge
test
int3
out
je
cmp
push
inc
cmp
sub
jns
cmc
inc
dec
sahf
arpl
inc
mov
dec
add
daa
outsl
inc
fiaddl
inc
pop
sbb
jae
mov
negb
mov
cli
movsb
inc
mov
sbb
mov
inc
arpl
mov
ja
sub
cmc
mov
lret
lods
xor
dec
shrl
jg
or
cmc
dec
add
dec
gs
xchg
cmp
sbb
pop
insl
or
lahf
cmp
mov
test
push
sbb
ds
sbb
pop
bound
jecxz
jnp
push
mov
xlat
inc
push
jmp
or
mov
adc
push
rcll
fcmovu
int3
je
sbbl
or
push
xchg
jb
xor
cltd
sbb
cmpsl
gs
and
pusha
add
imul
xor
call
pop
mov
adc
sbb
mov
and
xchg
push
out
push
xchg
popa
fstpt
cld
mov
dec
pop
pushf
or
lret
sub
mov
sbb
push
inc
out
dec
push
sar
xlat
lock
or
inc
nop
add
mov
fwait
pop
das
jo
roll
pop
call
iret
lret
sub
pop
jge
imul
sahf
daa
and
dec
fildl
or
add
xor
jg
dec
jge
push
or
lret
in
shlb
ret
xchg
push
sbb
rcrl
jge,pt
popa
or
inc
inc
loop
int3
neg
xchg
movsbl
sub
jmp
sub
fidivrs
pop
leave
imul
cld
xor
push
adc
dec
pop
andb
imul
daa
es
rclb
out
ret
ja
pop
cmp
xlat
or
mov
fstl
jns
mov
std
mov
xlat
aam
dec
sbb
sub
add
mov
cmp
cmpl
out
adc
push
add
pop
jae
and
cld
cmp
mov
push
nop
mov
lods
pusha
mov
shlb
sahf
dec
pop
xchg
mov
aas
push
cli
lahf
and
xor
mov
jb
xor
sar
fstps
fcmovb
aam
cmpsl
ficoml
sub
mov
pop
mov
repz
jl
scas
pop
imul
aad
cmp
mov
fidivrl
rorb
lods
jae
pinsrw
xchg
dec
daa
or
mov
lret
lret
xor
lahf
xchg
cmp
sub
mov
rorl
add
mov
cmpb
mov
or
jno
push
hlt
popf
sub
xor
scas
mov
cli
push
rcll
adc
cmc
push
inc
push
fwait
inc
test
popa
mov
shrb
imul
mov
imul
cld
ficoml
push
xor
xchg
mov
es
mov
xchg
and
cli
jg
hlt
mov
xlat
dec
sub
imul
cmp
pop
lods
push
mov
adc
test
fcomi
loopne
in
inc
leave
pop
xchg
pop
jnp
fstps
out
sbb
adc
ljmp
in
sbb
addl
test
pop
push
enter
jne
cmpsl
sub
ja
sub
lret
lds
cmp
or
lret
mov
mov
mov
aaa
cwtl
sbbl
jnp
lcall
and
in
imulb
insb
mov
scas
add
stc
pop
mov
add
xor
pusha
xor
or
xchg
and
pop
lds
cmp
push
lock
movsl
xchg
clc
aas
js
push
or
imul
jp
outsb
lahf
xchg
imul
mov
adcb
mov
fildl
aad
mov
in
mov
sbb
sbb
and
xchg
sbb
aam
fnstsw
xor
in
rcl
or
xor
cmpsl
jl
mov
dec
cwtl
xlat
mov
in
jmp
in
adc
pop
push
lahf
shll
adc
sub
adc
add
sbb
xor
and
mov
lock
fxch
add
aad
shll
push
sub
adc
mov
mov
sub
dec
sbb
adc
fcomps
imul
jmp
sub
pop
xor
cld
xor
push
test
mov
adc
dec
push
mov
rcrb
lods
int
movsl
icebp
lahf
cmpsb
mov
stos
mov
inc
or
push
mov
xchg
les
add
out
into
fcoml
ja
nop
test
jbe
ds
pop
iret
or
mov
pop
addl
mov
stos
mov
cli
stc
mov
fisubrs
cmpsb
lahf
pusha
aaa
fistl
xor
aas
test
mov
stc
xchg
xlat
lret
and
and
imul
outsb
dec
shlb
pop
mov
mov
sbb
sbb
jno,pt
pushl
sub
mov
sbbb
stos
in
mov
popf
or
mov
out
and
cli
sbb
sub
adc
imul
xchg
pop
xor
mov
inc
imul
jne
or
xchg
repz
mov
pop
test
ja
incl
inc
mov
adc
jo
daa
pop
int
or
xchg
xchg
push
clc
xchg
sub
pop
sbb
aad
mov
xor
clc
outsb
mov
add
pop
out
pop
ret
mov
les
in
pusha
fcomps
ljmp
and
fidivl
lock
in
fs
js
ljmp
shlb
or
sub
push
mov
and
xchg
jmp
lret
fdivrs
into
and
add
add
jl
push
mov
out
mov
adc
test
aad
dec
lcall
cltd
and
and
mov
add
xor
push
cmp
movsb
dec
test
movsb
lcall
adc
pop
or
mov
lds
xor
or
mov
mov
enter
addr16
add
loop
into
push
out
stc
ret
dec
sub
mov
int
scas
lret
sbb
cld
stos
loop
dec
fucomp
hlt
stos
mov
jnp
movsb
jecxz
loopne
cmp
add
push
mov
sbb
inc
push
sub
cs
aam
push
pop
insl
sub
insb
in
cwtl
nop
jmp
aas
and
enter
aad
fistl
out
jl
cmpsb
fidivrs
xlat
mov
push
pop
nop
stos
sub
pop
push
add
scas
push
sarb
xlat
and
cmp
movb
xchg
jbe
aaa
mov
fidivrl
inc
test
dec
push
and
outsb
pop
dec
xchg
in
test
sbb
mov
jge
pop
sbb
ret
push
pop
pop
hlt
push
fiaddl
cli
ja
mov
ret
inc
push
sub
mov
scas
insl
add
ljmp
shrl
inc
imul
sub
fisubrl
and
jl
ds
xor
repz
shr
and
and
dec
adc
ljmp
addr16
fistl
sub
cs
pop
lret
sbb
movsb
xchg
mov
mov
push
outsl
out
scas
jecxz
lcall
add
push
mov
ja
icebp
xchg
sbb
add
xchg
lcall
cmp
fwait
xor
dec
mov
jg
pop
popf
stos
mov
jno
xchg
cltd
cmpsl
xchg
std
push
mov
gs
xchg
mov
dec
test
out
std
xchg
sbb
dec
or
ja
inc
lds
xor
jno
int3
mov
and
lea
aad
push
lea
fdivrl
shll
sbb
shll
and
outsl
mov
orb
sbb
insl
insl
sub
mov
ljmp
xor
dec
jmp
clc
push
addr16
and
xlat
add
ret
sbb
cmp
push
xchg
jp
push
push
jecxz
push
xchg
xor
aaa
neg
in
mov
ja
xchg
push
inc
xor
jl
sbb
mov
dec
cli
pop
fidivs
andl
stc
xor
xlat
out
and
pushf
jl
pop
lcall
push
fdivr
aas
sub
cmp
xor
adc
sub
test
or
sub
push
xchg
mov
mov
jge
sub
arpl
cmc
push
leave
xlat
sbb
pop
pop
mov
push
cli
mov
pushf
cmpl
jecxz
ja
sbb
test
lds
movl
sarl
out
sub
and
add
in
push
xor
mov
inc
lods
fldcw
sarl
mov
jb
and
repz
cmc
dec
xlat
and
dec
mov
mov
mov
aad
cmp
addr16
cld
push
inc
mov
and
xchg
pop
inc
shlb
lock
pop
mov
insb
fs
pop
fildl
hlt
fnstcw
sahf
pop
push
dec
jg,pn
in
xchg
int3
or
push
shrb
test
lea
nop
and
xlat
in
pop
orb
push
xlat
add
lea
mov
cmp
mov
mov
xor
dec
push
scas
mov
sbb
loopne
mov
sub
add
pusha
add
ret
inc
arpl
mov
aaa
adc
push
fcmovnu
adc
clc
fdivrs
fidivrs
mov
sub
pusha
mov
pop
add
and
jl
pushf
dec
dec
inc
pop
sub
push
fcomps
jg
jae
inc
jle
insb
frndint
push
adc
cmp
notl
int3
or
xlat
mov
in
or
adc
mov
icebp
outsl
pop
scas
hlt
cmp
dec
jmp
iret
arpl
sbb
xchg
xor
movsb
cmp
and
sti
int
stc
sti
movsb
push
cwtl
cmp
push
jp
test
mov
call
flds
shl
and
hlt
ds
sbb
leave
mov
loope
aad
or
pop
sub
pop
mov
outsl
inc
fldcw
leave
push
jns
sbb
xchg
xor
imulb
dec
js
jmp
or
aaa
inc
fldenv
fimuls
xlat
ja
pop
fstps
das
xor
sbb
inc
jb
sarl
jbe
hlt
bound
adc
test
xchg
aaa
ljmp
mov
nop
or
xchg
xor
ljmp
ret
loop
fwait
mov
adc
ja
adc
or
mov
mov
or
push
xor
loope
xlat
ss
in
loope
adc
cmpsl
out
or
pop
in
cmp
lods
dec
and
sub
js
mov
inc
xor
jns
fnstcw
or
adc
divb
push
xor
scas
or
cld
dec
fwait
sti
or
mov
xchg
mul
lahf
ret
jge
cmpsb
xor
iret
popa
loop
gs
pop
jecxz
dec
andl
push
lcall
mov
xchg
mulb
fidivrl
mov
fdivrs
xchg
pushf
insl
dec
mov
aam
addb
pop
dec
sarb
sub
adc
lock
bound
stos
sbb
fcmovne
arpl
adc
sbb
dec
and
nop
xor
lahf
xor
test
xlat
aas
inc
mov
xchg
adc
hlt
stc
or
jne
fs
and
mov
cmp
sahf
fsts
test
adc
leave
nop
mov
xchg
mov
or
cmp
pop
lods
mov
imul
in
sarl
mov
add
clc
cmp
xor
aam
scas
mov
cmp
push
adc
sbb
mov
and
dec
sub
sub
and
shlb
jle
ja
iret
sbb
in
adc
es
sub
mov
mov
push
cmpsb
adc
sti
dec
sbb
dec
dec
je
mov
ja
xlat
negb
orl
lods
or
fnstsw
mov
cmp
stc
add
iret
cli
das
nop
adc
test
dec
xor
xchg
outsl
push
je
decl
cmp
fisubl
dec
fnstenv
ja
sbb
push
add
mov
jmp
xor
xchg
adc
or
jp
mov
mov
sub
or
sbb
mov
dec
rorb
test
xchg
pop
or
std
out
mov
inc
sti
testb
aam
cmpsb
push
pop
fwait
in
addr16
xor
push
push
mov
sti
test
inc
jnp
fnstcw
sub
sbb
adc
inc
leave
out
icebp
test
mov
fstpt
and
loope
mov
cmp
pop
adc
in
lea
mov
pushf
lcall
xor
jbe
and
sub
jp
sbb
clc
cmp
adc
ss
push
cmp
mov
xchg
cmp
adc
fisubrl
add
ds
jg
mov
push
aas
ja
sub
push
push
inc
inc
fidivrl
movsb
dec
pop
dec
dec
scas
pushf
sbb
cmpl
sub
pop
mov
cwtl
cltd
mov
in
js
dec
jl
push
shlb
out
mov
inc
push
fidivl
lods
popf
cli
push
and
popf
hlt
inc
push
out
cld
insl
in
loope
ficompl
add
push
push
pop
mov
aam
push
mov
push
enter
jne
stc
sub
mov
lea
or
in
xor
push
add
mov
cmp
inc
ret
jne
xchg
hlt
pop
lret
nop
push
dec
mov
xor
inc
arpl
loop
clc
add
lahf
shlb
int3
out
pop
sub
popa
fxch
xor
stos
dec
sub
xchg
imul
cmp
fstps
dec
xor
movsl
cmp
cmp
daa
imul
cmp
cmp
repz
add
out
xchg
mov
sub
xchg
sbb
mov
cs
ljmp
ficomps
sub
ljmp
ljmp
or
push
arpl
xor
cmp
shrb
mov
add
adc
ret
pop
sbb
fcomi
call
push
outsb
jne
mov
aaa
in
mov
shlb
adcb
push
daa
fadds
sbb
mov
loope
dec
push
jns
lds
cmp
leave
mov
shrl
fnstcw
sub
mov
fidivrs
and
rorl
mov
fcmovnbe
ja
xlat
mov
add
mov
mov
fs
arpl
fimull
add
pop
or
pushf
jno
cwtl
xchg
je
dec
pmuludq
and
adcl
sbb
jns,pt
inc
jp
sbb
adcl
imul
addr16
pop
cltd
jg
out
addr16
int3
lods
xor
aam
lock
xor
mov
adc
fidivs
xor
push
test
aam
jl
xlat
cld
adc
add
pop
jp
xor
fidivl
fwait
add
mov
jnp
test
adc
jne
add
in
repz
int3
stc
pop
jae
lret
daa
push
xor
dec
push
cmp
add
inc
sub
test
mov
arpl
lea
dec
daa
test
repz
sbb
xorb
stos
push
decl
js
insb
test
hlt
into
mov
xchg
and
jge
push
fnstcw
add
rcrb
imul
push
add
sbb
rol
sahf
pop
repz
sti
and
pop
pop
xor
jge
jae
shrb
or
and
out
cmp
mov
sub
sub
dec
addr16
mul
jns
movsl
cld
mov
xlat
scas
mov
sbb
lcall
mov
xor
inc
scas
pop
mov
xlat
push
call
cmp
jp
mov
in
jb
sbb
xor
and
xchg
jg
fbld
jmp
lds
cmp
lret
dec
ja
mov
add
mov
xlat
dec
fmuls
push
sbb
pop
insb
lods
xor
sti
iret
or
rcrl
enter
xor
inc
pop
pop
jns
or
cltd
dec
jge
dec
and
mov
or
jno
jne
push
jmp
punpcklbw
and
and
mov
in
cld
nop
pop
add
cwtl
push
insl
fistpl
je
iret
and
jp
mov
xchg
ds
fucomi
out
push
xlat
mov
push
test
adc
xlat
xchg
or
push
cmp
pop
mov
adc
cmp
add
enter
mov
fwait
add
sbb
loopne
mov
test
mov
inc
jae
sahf
pop
mov
imul
sub
pusha
std
pop
lock
xor
dec
cmp
xor
stc
xor
jmp
xor
insb
or
cmp
pop
and
je
iret
roll
and
mov
lds
insl
add
dec
xor
or
pop
push
or
fisubrl
cli
fiadds
movsl
or
xchg
es
mov
movsb
adc
filds
cmp
inc
iret
jg
and
xchg
pop
jmp
fisttps
mov
mov
icebp
xor
mov
mov
stc
xlat
mov
inc
pop
ss
fcompl
das
sub
xchg
or
cmpsb
pop
mov
mov
cmc
or
xorb
xchg
sub
les
fists
push
sbb
xor
jne
dec
dec
jmp
sub
ss
sub
cmp
sub
outsb
js
inc
or
jns
addb
mov
add
pop
enter
push
xor
test
loope
xchg
lods
ja
push
dec
out
testb
cmp
arpl
mov
mov
pop
loop
mov
xor
js
cltd
gs
leave
repnz
cmp
or
xor
sub
mov
ret
mov
enter
fimuls
add
addl
sub
xlat
sbb
in
dec
lock
test
sbb
sub
outsb
clc
je
add
sti
sub
dec
loop
sub
lds
inc
mov
mov
insl
test
fmuls
xchg
movl
and
aad
and
mov
cmp
dec
gs
into
inc
cmp
fisttpl
push
inc
inc
js
sarb
mov
push
xchg
mov
stc
dec
mov
mov
fistps
jne
sbb
mov
mov
mov
push
fsubr
xor
mov
shl
test
cld
and
pushf
adc
jae
xor
xchg
xor
mov
jo
loop
lcall
enter
push
ds
and
scas
dec
inc
jnp
xlat
dec
stc
adc
xchg
int3
aam
testl
rcrl
mov
xor
jno
nop
jmp
nop
xchg
ja
and
das
roll
pop
aam
adc
cmp
push
sub
test
divb
inc
push
pop
xlat
jns
hlt
xor
jg
cmp
das
sbb
lret
nop
cs
xor
add
popa
loope
pop
shrl
nop
inc
inc
test
fsubrp
xor
sub
push
jge
mov
fcomi
jbe
and
mov
xor
pop
test
and
and
adc
jecxz
pop
push
mov
call
js
stc
jle
add
daa
push
jno
shrl
push
xor
push
cmp
xor
add
ds
sbb
xchg
cs
popaw
mov
jge
rcr
bound
mov
or
push
inc
push
sbb
rcrl
ret
add
fdivrs
lds
pop
mov
je
mov
stc
jecxz
movsb
add
lret
add
adc
ja
adc
xor
mov
scas
lock
mov
mov
stc
cmpsl
jne
loop
or
mov
xor
fcmovnu
inc
xor
jg
sahf
fimull
loopne
xorps
mov
dec
iret
dec
mov
pusha
cmp
xor
xor
scas
xorl
fsubrl
gs
scas
mov
fninit
jle
mov
xor
fcompl
aaa
je
adc
pop
popa
test
stos
dec
imul
lahf
pop
loopne
pop
stc
xchg
out
and
pop
lret
in
dec
add
and
rcl
mov
stc
mov
push
dec
xor
int3
outsb
hlt
stc
and
xchg
mov
dec
call
dec
loopne
xor
sub
push
mov
popa
mov
aam
shl
stos
sbb
add
movsb
cmp
movq
mov
push
or
pop
inc
xlat
mov
icebp
addr16
add
xchg
notb
test
jae
inc
cmp
push
dec
stos
nop
mov
dec
fstps
mov
fwait
dec
out
in
fimuls
pop
xchg
cltd
lret
mov
out
mov
jmp
sub
imul
xlat
shrb
mov
sub
dec
or
dec
leave
jno
pop
xor
push
test
xor
aam
jge
sub
imul
cmpsl
pop
pop
xchg
mov
push
push
jp
out
pop
adc
ja
fstpt
adc
or
cli
mov
divl
mov
insb
mov
sti
xlat
mov
addr16
fs
cmp
ljmp
fistl
pop
insl
jecxz
mov
push
sbb
and
test
dec
xor
shrl
pop
mov
mov
inc
sbb
jae
cmp
mov
ret
sub
icebp
dec
pop
dec
in
pop
aas
test
push
cs
ja
xchg
nop
lahf
inc
sbb
and
fnstcw
mov
push
xor
aam
cmpsb
imul
cld
mov
cwtl
and
pop
in
imul
cmpsb
mov
dec
mov
in
test
movsl
mov
cmpl
jne
enter
loope
subb
bound
cmp
jns
js
das
push
or
mov
cli
rcr
imul
aad
rcr
xor
mov
xchg
std
xlat
inc
xorl
cmp
incb
and
or
jns
jl
loopne
inc
cmp
rcrl
push
cs
inc
test
test
fs
or
adc
adc
push
add
stc
push
call
push
inc
or
add
push
sarb
adc
push
movsl
push
fldcw
clc
sub
dec
or
add
jbe
daa
jmp
and
lcall
mov
int
push
ljmp
iret
xchg
xchg
xor
adc
or
popa
gs
pop
arpl
mov
fcoml
dec
jns
fcomi
je
out
ret
push
addr16
arpl
loopne
lahf
dec
lahf
pusha
lahf
ret
fists
lock
sub
push
adc
sbb
sbb
repz
and
cmp
ret
rorl
jp
push
sti
dec
into
outsl
push
cmpsl
outsl
shrl
mov
dec
and
test
pop
dec
pusha
mov
ret
in
out
out
or
imul
dec
adc
push
pop
xlat
enter
cmc
ds
mov
dec
mov
ficomps
gs
jg
aas
jne
mov
in
or
jl
cmp
xorl
inc
adc
and
xchg
sbb
inc
test
fs
xor
jae
xor
xlat
or
std
inc
sub
rcrb
adc
add
jp
test
and
dec
pop
insl
push
test
push
dec
mov
push
addb
adc
mov
dec
stc
cmpsl
mov
lea
jo
mov
mov
aas
into
push
cmc
sub
jnp
dec
lret
xor
sub
shll
sub
push
mov
aam
xchg
subb
mov
mov
pop
shr
sub
and
push
pushf
xchg
ret
pop
pop
popa
leave
xor
sti
cli
sti
dec
aas
add
xor
mov
imul
lcall
mov
push
cmp
sbb
ficompl
pop
ficomps
xchg
cs
lahf
add
stos
inc
sahf
xor
js
lcall
adc
jge
xchg
or
mov
aad
or
test
dec
fildl
jl
mov
out
dec
into
mov
push
ret
mov
pop
adc
cmp
push
mov
inc
shlb
rorb
popf
js
leave
xor
sbb
pushw
mov
in
pop
dec
pop
push
dec
mov
inc
fwait
imul
test
test
fnclex
jle
adc
add
test
sbb
rclb
lret
sbb
mov
dec
adc
loope
pop
dec
pop
cld
cli
call
out
inc
sub
sbb
mov
loop
std
pusha
mov
popf
dec
cs
frstor
jo
dec
adc
iret
imul
push
in
mov
mov
loop
fucomi
fnstcw
call
cmp
stc
mov
bound
add
loop
and
movsb
cld
fcmovnb
cmpsb
xor
sbb
inc
and
xchg
mov
inc
xchg
hlt
sub
jecxz
fstps
in
adc
test
jge
xchg
cmc
ja
xchg
mov
shr
push
fimull
fnstcw
push
mov
add
aaa
xor
adc
xor
pop
dec
cs
repz
scas
push
or
push
xchg
jne
sbb
lcall
mov
andl
test
mov
mov
add
fimull
lods
mov
int3
pop
push
cmp
xchg
cmp
arpl
movsb
popf
mov
shlb
or
jmp
and
shr
push
xlat
scas
ret
add
xorb
stos
adcl
sub
stc
into
sbb
icebp
das
addr16
je
and
xor
mov
flds
mov
cmpsl
xchg
lods
pop
ret
sbb
sbb
pushf
mov
mov
gs
insb
pop
pusha
sub
add
jo
das
aam
xor
es
mov
popf
icebp
sbbb
mov
test
leave
jbe
jle
pop
inc
cmc
arpl
mov
mov
fs
xor
nop
xchg
imul
pop
nop
dec
frstor
fucomip
mov
sahf
cmp
stc
sub
int
or
bound
jno
enter
pop
pusha
scas
arpl
jge
popf
inc
pop
sbb
pop
inc
add
into
fstpt
adc
fcompp
outsb
xchg
dec
xor
cmp
mov
mov
aas
xor
fadds
mov
ficomps
insb
and
ss
push
mov
xor
push
jp
sbb
sbb
push
call
mov
inc
cmp
mov
outsl
jno
fsubl
pinsrw
mov
enter
push
fstps
jno
sbb
les
lods
out
add
fdivs
mov
lret
pop
cmc
cmp
xchg
fidivl
std
xchg
arpl
lret
loope
mov
cmpsb
xchg
lret
fidivrs
test
xchg
fcmove
div
and
lea
pop
xor
or
int3
xchg
adc
sub
xchg
cs
mov
rorl
lret
xor
adc
pop
mov
insb
clc
jp
xchg
test
jg
jmp
or
dec
adc
cmc
rol
ljmp
adc
xor
shll
push
mov
mov
in
std
ret
loop
imul
daa
mov
inc
jae
pop
out
add
pop
fists
jno
or
rcll
sub
inc
pop
adc
pop
nop
dec
fimull
adc
xchg
imul
fstp
jmp
or
add
fnstcw
push
es
addr16
sbb
sbb
jp
push
dec
imul
loopne
add
jne
cld
sub
movsb
xchg
push
jle
adc
out
jg
mov
xlat
outsl
mov
push
mov
add
fdivrl
movsl
pop
push
dec
out
push
jne
rorl
dec
scas
jne
sbb
dec
sbb
cld
lret
push
mov
jmp
inc
pop
mov
test
fnstcw
std
adc
mov
popl
or
xchg
inc
xlat
jne
lahf
mov
dec
inc
popa
and
pop
and
ret
cld
push
xchg
sbb
cltd
ss
dec
lret
push
inc
xchg
xchg
repnz
repnz
dec
add
push
pop
adc
iret
inc
jmp
dec
dec
sbb
imul
fimuls
sbb
sbb
out
into
cmp
xchg
fnstenv
mov
sub
sbb
fabs
fstpt
inc
sub
popf
fsts
loopne
and
sbb
or
xchg
mov
sbb
pop
aas
jnp
es
movsl
mov
scas
or
fcmovnu
xor
jno
std
in
dec
cmp
mov
adc
xchg
test
push
test
xor
mov
mov
fimull
xchg
jno
test
aad
or
scas
dec
mov
test
jle
cmc
cmp
out
enter
dec
scas
ja
inc
and
cmc
jbe
shlb
and
adc
mov
sbb
sar
stos
test
lret
sbb
pop
fsts
push
faddl
pop
ds
jg
xchg
mov
push
hlt
push
idiv
push
les
sbb
or
push
mov
pushw
filds
stos
mov
frstor
mov
testb
ljmp
or
and
ret
jp
sbb
jmp
xlat
lret
push
mov
pop
clc
jl
pop
lods
shlb
mov
cs
inc
outsl
inc
in
cmp
ja
mov
xor
mov
push
jecxz
mov
pop
sbb
popa
jmp
pop
sub
mov
leave
out
and
jp
and
repz
out
pop
push
pop
pop
out
and
cmc
dec
dec
and
in
xchg
xlat
ja
arpl
fcmovnu
adc
int
jno
and
add
insl
nop
pop
dec
imul
jae
adc
scas
lods
cmp
ds
push
xchg
inc
xor
or
mov
adc
pop
call
or
add
mov
mov
jae
inc
les
mov
push
inc
cwtl
sarb
enter
test
jae
and
ja
ja
pop
mov
xchg
fistpl
pop
orb
and
mov
push
movsb
add
xchg
jae
inc
xor
call
sub
call
inc
sahf
ficompl
add
jnp
jne
loope
into
jae
fidivrs
insb
mov
inc
mov
mov
pop
dec
push
mov
sub
or
inc
lea
adc
into
jae
sbb
ja
cmc
ret
das
arpl
and
pop
cmp
dec
in
cwtl
fstpt
adc
ja
or
ds
stc
lock
cwtl
or
adc
in
es
adc
push
push
xlat
test
fsubrs
fucompp
push
lock
pop
fninit
adc
xor
cmp
push
clc
imul
decl
scas
sub
filds
hlt
xor
or
lcall
pop
cltd
in
jecxz
subl
mov
int
sbb
mov
or
jns
add
dec
cld
mov
and
clc
add
mov
cmpb
fimuls
clc
pop
lahf
daa
and
mov
sbb
mov
push
jp
pop
inc
add
add
sub
pop
lock
jo
dec
push
imul
push
and
pop
out
pop
pop
mov
pop
pop
test
not
cmp
orb
dec
arpl
xor
jp
out
or
sti
cmc
inc
into
jae
cld
bound
ljmp
or
mov
and
out
cmp
jmp
call
and
ja
dec
loope
and
xlat
testb
sbb
or
stc
pop
je
dec
imul
adc
adc
adc
lret
outsl
sti
cs
stos
fisubrl
roll
dec
pop
int3
push
cmp
incb
push
jns
aam
movsb
nop
pop
and
js
stc
icebp
stc
add
dec
xor
sbbb
test
mov
sub
add
ds
xchg
imul
push
and
or
inc
in
leave
int
subl
push
fwait
jge
fptan
cmp
out
adc
mov
or
xchg
adcl
mov
imul
add
shll
aaa
dec
dec
cwtl
scas
out
shl
xor
jnp
jg
inc
mov
push
sub
and
mov
and
xor
andl
lods
sbb
adc
aas
push
adc
push
push
pushf
add
pop
cmp
jno
xor
shll
sbb
bound
cmp
test
xchg
mov
fisttpl
push
mov
push
fwait
add
test
and
fdivs
popf
cmpsl
imul
xchg
or
outsb
js
cld
jns
imul
lea
push
enter
jns
add
push
mov
and
ljmp
scas
popa
pop
add
adc
sub
or
lea
adc
jge
sti
jge
inc
sbbb
ret
cld
imul
cli
cmp
andb
not
enter
insl
clc
xor
sbb
adc
xchg
pop
andb
mov
cmp
pop
jg,pn
mov
js
xchg
jl
cmp
inc
ss
cs
idivb
xchg
ret
jb
xor
jne
cmp
mov
and
dec
dec
add
hlt
jmp
addr16
sub
add
fwait
ja
loopne
push
int
hlt
rep
mov
xor
out
mov
cmp
fldenv
add
sbb
std
dec
xor
jmp
inc
jmp
iret
std
aam
dec
lods
ret
mov
or
out
gs
jo
jo
mov
xor
repnz
add
aas
cmp
pop
std
mov
pop
lahf
adc
jb
cmpsl
inc
loopne
add
in
add
andl
mov
mov
sbbl
lds
mov
cmp
test
imul
pushf
scas
adc
lea
xlat
jno
aad
sub
dec
subb
pop
jne
test
adc
rorl
xlat
daa
dec
mov
repz
and
cld
sbb
add
push
sti
sub
push
in
pop
mov
jae
fnstcw
fwait
sub
js
jge
dec
sub
int3
lret
iret
testl
insl
xchg
dec
cmpsb
inc
mov
jmp
or
or
rcrl
lcall
mov
sub
dec
scas
std
hlt
mov
sub
stos
or
ss
inc
pop
in
mov
cmp
cmp
ljmp
xorb
fldt
mov
loopne
adc
pop
stc
lret
dec
jns
hlt
std
rcl
sti
fildll
test
scas
scas
xchg
nop
sahf
loopne
xlat
jmp
cmc
addr16
test
xchg
pop
xor
xor
pusha
mov
sbb
pop
dec
movsl
jbe
ret
or
sub
mov
add
sub
jb
ljmp
push
nop
pop
std
jmp
pop
leave
and
sarb
mov
add
ficoms
xor
fidivrs
xor
sub
inc
xor
jne
xchg
mov
cmovnp
pop
jne
rcr
hlt
pop
sbb
pushf
sarb
xchg
sbb
and
ret
xor
xor
xor
stc
cld
xlat
xchg
push
jnp
lds
sbb
fcmovnbe
lods
out
imul
ret
mov
lcall
mov
lret
xchg
sbb
flds
movswl
xor
pop
es
push
sbb
test
mov
and
sbb
mov
sbb
and
push
fcmovnb
shrl
mov
mov
dec
sub
and
fdivrp
rcl
cmpsl
mov
add
xchg
sub
scas
jo
dec
mov
jmp
adc
je
xor
jne
ds
filds
sbb
cli
xchg
ja
ret
jge
mov
je
dec
cli
pop
jb
cs
aaa
rorl
or
mov
pop
cmp
inc
popa
xor
add
jmp
std
arpl
and
push
cli
pushf
dec
test
xor
xlat
cwtl
stc
iret
lret
leave
jno
sub
jo
mov
cli
push
stos
sbb
fdivrs
pop
mov
gs
cmc
gs
mov
xlat
add
ficompl
mov
sub
fildll
pop
repz
xor
pushf
push
push
cmpsl
imul
or
pushf
imul
fnsave
xlat
mov
in
jmp
dec
add
cmp
andl
imul
cmpsl
mov
inc
fsubl
fwait
je
push
outsl
cld
mov
daa
lahf
sub
fildl
pop
sub
in
lahf
pushf
cmp
test
mov
mov
sub
int
jl
cmc
fiadds
jmp
cmp
fucomi
fidivl
cmp
pop
lods
sub
cwtl
adcl
inc
jmp
mov
pop
jmp
out
push
jge
scas
nop
pushf
mov
push
jae
iret
xor
push
pusha
push
xor
and
dec
and
test
inc
insb
jl
lahf
fiadds
xchg
cli
into
aaa
cmpsl
imul
sub
xlat
repz
xchg
sbb
and
mov
fsts
std
jb
and
and
mov
xlat
ficoms
stos
jp
lret
mov
jecxz
imul
icebp
lret
jns
ret
xchg
sbb
add
movsb
mov
cld
lcall
or
push
jns
cltd
inc
add
repnz
outsb
jns
lret
xor
adc
daa
cld
add
arpl
mov
or
mov
sub
push
dec
pop
repnz
mov
pop
pop
push
pop
pusha
sbb
push
pop
adcl
rclb
xor
adc
xor
cmpsb
es
xchg
inc
addr16
out
icebp
inc
mov
or
push
insl
sbb
dec
lock
pop
dec
loope
ja
xchg
push
enter
jge
aam
testl
insl
sub
jge
enter
dec
cld
xlat
cmc
cmc
rcr
push
in
aam
stos
jb
inc
lcall
nop
icebp
mov
dec
subl
mov
in
pop
adc
push
imul
addr16
ret
outsl
ja
stc
movsl
jmp
loop
loopne
mov
dec
je
mov
fistpl
fwait
ja
dec
jne
pop
sbb
mov
adc
and
nop
xlat
imul
lahf
mov
mov
mov
and
jae
out
nop
lcall
rorl
sub
rcr
orb
je
mov
inc
cli
aaa
cmp
or
add
popf
inc
pop
xor
sub
and
call
jle
or
pop
jnp
cld
clc
sub
or
mov
jmp
push
int3
push
add
lret
das
fidivrs
idiv
fiaddl
sarb
insb
outsl
sub
sahf
inc
stc
xlat
pop
imul
or
pop
sahf
ljmp
bound
cmp
ret
repz
mov
test
or
ror
and
inc
xor
cmp
pop
xor
mov
jns
rcr
mul
mov
mov
xlat
sti
mov
adc
mov
xchg
mov
or
sbb
jge
lret
sub
nop
fcmovnb
das
mov
loop
xor
inc
mov
lcall
dec
sub
addr16
sbb
mov
les
jg
mov
in
fistl
test
jl
add
addr16
push
sub
shlb
lret
sbb
hlt
push
pop
pop
push
cs
mov
jmp
hlt
in
pxor
sbb
xorl
dec
ficoms
add
sbb
pusha
dec
imul
push
lea
stos
sub
mov
hlt
pop
std
mov
jl
pushf
mov
xlat
push
xor
xchg
mov
jge
push
pop
or
xchg
inc
xor
pop
icebp
cmp
xorb
and
loope
data16
dec
pushf
pushf
mov
call
ds
and
test
ja
sub
sub
mov
lods
outsl
jno
aaa
push
scas
dec
stos
mov
pushf
cmc
xchg
mov
mov
rcr
xor
jl
pop
movb
xlat
push
cmpsb
adc
inc
fidivs
sbb
fcoml
sub
js
xchg
mov
fistl
jmp
push
pop
xlat
dec
inc
cmp
jp
fstps
xchg
mov
pop
jmp
imul
jle
es
xor
xchg
in
xor
aam
out
jmp
mov
fucomi
cmp
fnstcw
adc
lret
cmp
fstps
xlat
inc
hlt
imul
aam
cmc
cmp
fisubrs
into
js
push
jo
rolb
adc
sub
ja
insl
lods
jl
dec
addr16
xor
sbb
inc
lret
adc
mov
call
cltd
xlat
dec
test
dec
les
inc
call
xor
dec
imul
or
mov
jns
mov
inc
mov
sbb
mov
je
xlat
xchg
cmp
mov
ficomps
icebp
and
rolb
cld
and
clc
mov
push
lods
dec
jae
or
stos
mov
in
jmp
mov
pop
fs
frndint
push
popf
fs
pop
dec
stos
cltd
out
arpl
mov
jb
test
push
out
cmpsl
out
sub
bound
dec
fs
stc
int
lock
out
nop
pop
daa
sub
jnp
dec
sarl
push
add
arpl
repnz
mov
add
inc
xlat
mov
cli
std
iret
xchg
mov
ljmp
inc
mov
ljmp
test
negl
mov
or
in
sarl
into
cmpsl
leave
lret
push
dec
mov
stc
pop
imul
je
jae
cmp
jae
push
movsl
xlat
cwtl
jg
mov
pop
fstps
or
sbb
push
push
dec
test
inc
out
push
andb
cwtl
add
jne
stc
ret
out
stos
and
jl
sbb
push
je
cmpsb
fldcw
loop
mov
popl
cmc
sbb
sub
xchg
pusha
ror
outsl
addr16
shrb
sub
stos
mov
stos
adc
ficoms
popf
and
cmp
cmpb
add
arpl
fstps
and
mov
test
repnz
mov
nop
mov
cmpsb
xor
lock
mov
mov
mov
fidivs
sbb
cwtl
cmpsl
sti
pop
inc
shll
push
xlat
or
fwait
mov
pop
pushf
push
push
pop
jns
nop
mull
inc
push
xor
jmp
cld
clc
jno
jae
cmp
xor
cmp
cli
xlat
pop
mov
xchg
fnstenv
sbb
int3
or
out
repz
daa
int3
dec
sub
shl
add
cmp
rorl
mov
push
data16
pop
push
or
or
and
pop
xchg
in
jp
das
jle
call
movsl
or
scas
xchg
arpl
cli
and
imul
js
pop
or
adc
inc
js
ss
push
loop
mov
dec
jg
iret
sbb
pop
add
test
xlat
das
mov
arpl
xchg
fildl
test
push
insb
xchg
jo
int
jg
pop
adc
test
int3
inc
out
push
out
adc
and
pop
js
mov
ljmp
xor
add
data16
mov
mov
out
lds
pop
pop
push
push
dec
loope
push
xchg
and
cmp
js
dec
pop
popa
movzbl
fdiv
insl
das
dec
pop
aaa
rcl
out
mov
fs
add
cmpsl
enter
dec
xlat
cmpsl
fiaddl
mov
sbb
std
es
test
lds
xchg
addb
push
add
test
fstps
xor
jb
cmp
cmpsl
and
push
lahf
jmp
mov
add
jae
stos
mov
ljmp
addl
xlat
outsl
jo
xor
nop
and
lods
ja
mov
aaa
fimull
cmp
push
jecxz
add
cli
sbb
and
stos
cmpsl
jp
je
sbb
mov
not
dec
xchg
and
test
push
dec
ret
mov
fwait
mov
into
in
xor
jbe
sub
cmpb
ja
addr16
mov
push
or
imul
and
cmp
xor
cmp
and
pop
fistl
ret
push
andb
or
mov
cs
pop
fldt
ss
cld
cmc
sbb
popa
push
lds
sti
mov
rorb
imul
loop
lea
fisubs
and
dec
int
fiadds
outsl
test
xor
adc
sti
jp
cwtl
loop
add
rcrb
dec
mov
push
xor
mov
scas
sub
scas
cmpb
dec
xor
mov
add
int
pop
flds
and
push
mov
xor
jecxz
push
sbb
xor
les
xlat
jp
ss
cmp
inc
or
stc
std
and
add
je
out
out
mov
ss
pop
add
add
sub
fisubrs
jp
xlat
repnz
stc
std
push
int
add
jns
mov
adc
out
push
lret
and
in
jl
fxch
and
or
add
fsts
sbb
rorb
push
std
xchg
lcall
ret
nop
loope
jle
and
iret
inc
jecxz
or
jg
push
mov
or
cltd
xchg
std
lret
nop
cs
addr16
xor
js
cwtl
jmp
and
dec
stos
mov
aas
inc
inc
mov
xor
lea
push
push
sbb
hlt
ljmp
pop
adc
call
fisttps
cmp
lds
jo
push
xor
cmp
adc
cmp
inc
jp
sub
pop
dec
scas
jns
xlat
fs
mov
cmc
inc
sbb
xchg
out
outsl
fs
ffree
inc
cmp
or
mov
mov
dec
fdivrs
or
add
iret
repnz
mov
cltd
aad
jnp
sub
cs
push
hlt
hlt
bound
cmp
inc
mov
push
test
hlt
neg
ficompl
mov
std
mov
fidivs
mov
jmp
dec
mov
mov
int3
or
cmp
xchg
and
ja
shr
repnz
out
insb
dec
cltd
inc
dec
dec
jae
xor
icebp
adc
adc
mov
movsb
ljmp
cmp
mov
jmp
jge
mov
stc
loopne
outsb
inc
fistl
ja
jle
clc
xlat
xchg
enter
cmc
out
das
into
and
jg
push
in
rclb
and
cmp
adc
xor
daa
cmp
int3
sub
mov
movsb
jo
stc
push
inc
fcompl
jg
movsl
xchg
fstp
adc
xchg
jo
ffree
std
adc
or
int
pop
xor
pop
je
clc
xchg
and
xlat
test
jmp
cmp
push
ds
jecxz
andl
sti
and
ja
pop
das
inc
and
jo
xor
fistpl
inc
sub
shlb
leave
and
fldcw
hlt
das
insb
in
loopne
jmp
cli
test
mov
repnz
xor
stc
add
dec
es
mov
sub
mov
aad
mov
iret
sub
cwtl
pop
pushw
cmp
jl
sbb
add
mov
popf
jae
pusha
ret
and
int3
addr16
stc
nop
jmp
mov
aaa
push
jae
lods
jae
jecxz
xor
test
mov
and
iret
pop
rcl
out
divb
jns
mov
test
ror
push
sub
add
hlt
mov
cmp
xchg
and
nop
je
dec
test
cli
mov
out
pop
sub
pop
enter
cmpl
les
xlat
ds
pop
fnstenv
jg
jb
rcll
mov
jnp
and
and
xchg
sbb
pop
movsb
pop
and
dec
in
xlat
int3
mov
xor
hlt
loop
push
fwait
xor
ja
stos
mov
lods
shlb
dec
or
sub
mov
icebp
pop
pop
js
psrlw
fidivs
flds
repnz
xchg
jg
sbb
sub
sbb
imul
pusha
push
nop
stc
outsb
data16
imul
add
jb
das
insb
mov
xlat
inc
mov
pop
xchg
mov
rclb
jae
insl
pop
dec
sbb
ljmp
fidivs
sti
les
or
int
adc
xchg
les
imul
and
push
jmp
xlat
cld
hlt
aam
mov
fldt
push
lods
orb
mov
inc
adc
mov
pusha
cld
xor
test
aas
dec
jp
cwtl
xchg
out
xor
sbb
nop
addr16
insl
ret
cmp
mov
mov
lret
pop
inc
mov
test
xor
mov
xor
imul
hlt
mov
mov
ficoml
imul
mov
xor
das
xor
push
stos
pop
inc
outsl
adc
cmp
pushf
and
sub
mov
adc
jp
pavgb
and
xlat
pop
rorb
dec
mov
push
fwait
xor
dec
aad
sub
push
aam
mov
ret
js
ja
in
jle
mov
dec
jmp
dec
cs
lcall
xor
icebp
jl
rcll
jo
or
push
adc
movsl
xchg
mov
cli
outsl
pop
loop
lcall
xchg
fistl
out
sub
mov
imul
fldenv
outsb
pop
sub
imul
sbb
dec
sbb
out
out
inc
mov
leave
dec
arpl
pop
pop
cmp
mov
push
dec
jae
and
cltd
push
xor
fisubrl
je
orb
gs
ds
insb
icebp
stos
sub
xor
fsts
out
and
jl
jns
icebp
sub
in
popf
cmp
test
mov
dec
adc
sbb
rcrl
arpl
cld
and
pop
ds
cmp
cli
lods
loopne
daa
cld
das
sub
add
dec
out
test
fcmovnu
mov
out
adc
add
loop
leave
pusha
test
sub
adcl
dec
dec
pause
sbb
dec
outsl
int3
call
cmp
pop
rorb
rclb
sub
fdivl
out
push
pushf
jno
jl
xchg
adc
pop
push
les
icebp
test
pop
stos
add
jecxz
aaa
push
sub
fcomp
fstpt
adc
mov
aam
ljmp
push
lds
pop
fs
or
and
xor
jl
cmpsl
adc
adc
push
fdivrp
stos
popf
loope
and
xor
mov
ljmp
dec
xchg
sub
loope
or
pop
mov
pop
lds
ret
mov
xchg
pop
in
repnz
xor
push
lahf
pop
pop
fdecstp
cld
cmp
je
sbb
mov
movsb
fmulp
cmp
outsb
inc
mov
xor
imul
cmp
inc
leave
aam
loope
test
pop
pusha
push
iret
add
outsl
dec
mov
mov
mov
outsl
jmp
and
lahf
daa
pop
pushl
cmp
addr16
jns
cmc
out
push
sti
jmp
push
xlat
aad
fisubrl
xor
cwtl
incl
lods
fimull
flds
call
insb
push
stos
push
jbe
sub
ja
fld
inc
inc
mov
ficompl
sbb
push
adc
aaa
loopne
fstps
sbb
je
sbb
xchg
bnd
mov
add
lock
pop
ret
push
xor
popf
mov
and
stc
and
jle
fidivl
nop
mov
pop
push
das
add
sub
xchg
cmp
xor
jb
dec
fs
xor
pushf
or
fsubs
and
add
lret
push
sub
add
arpl
inc
lods
xor
imul
push
stc
or
call
jge
ret
xchg
mov
inc
lahf
sbb
out
dec
xchg
mov
cmp
fisubrs
pop
mov
push
pop
ficompl
inc
xor
jmp
pop
adc
dec
lds
pop
out
ret
pop
rorb
and
xlat
movsb
icebp
leave
stc
fnsetpm(287
cmpsl
pop
daa
dec
or
cli
or
dec
pop
out
hlt
xlat
jae
aad
mov
dec
or
enter
cmp
jle
cmpsl
andb
out
rol
inc
push
adc
jo
mov
inc
dec
lock
push
imul
ja
xor
pop
mov
push
dec
fnstcw
test
push
and
cmpsb
std
ror
cli
mov
shl
icebp
addr16
add
pop
popf
mov
pop
jns
lahf
das
mov
nop
sbb
dec
jb
jns
or
loop
inc
jge
cmp
fistl
pop
jl
xlat
mov
push
fistl
jmp
je
and
repnz
js
xor
decl
pop
push
stc
and
stc
xor
fidivl
fisttps
dec
push
dec
xorl
int3
xor
jb
jg
jae
pop
data16
inc
fimull
jno
test
shll
popa
and
inc
or
inc
jbe
arpl
xchg
pop
inc
xor
lods
pop
adc
push
xlat
fdivrs
xor
pop
iret
lcall
mov
es
mov
sbb
outsl
sti
ljmp
stc
subb
addr16
movsb
inc
add
mov
jae
xor
loopne
mov
pop
leave
cld
add
jnp
push
adc
dec
dec
movsb
xchg
dec
mov
pushf
mov
aaa
or
and
lret
insb
mov
mov
sub
inc
push
cmc
pop
jl
and
stos
sub
cmp
stos
sub
lods
xchg
sub
and
xchg
cli
fmul
std
orb
jp
out
sub
repz
xchg
cli
jmp
out
xchg
xor
pop
inc
fsubs
insb
lods
push
push
stos
push
insb
lret
and
dec
adc
adc
cmp
pushf
add
mov
rsqrtps
cltd
pop
fnstsw
ja
mov
adc
out
rcr
mov
or
dec
and
add
or
repz
xchg
movsb
outsl
shr
push
jge
stc
std
mov
jb
pop
lock
ret
lcall
test
lcall
dec
cmp
inc
add
pop
pop
sbb
sahf
jg
mov
mov
push
loop
lea
ljmp
imul
xor
ficoml
sub
xor
dec
dec
jge
ds
cwtl
xchg
std
dec
inc
jmp
stc
xchg
scas
imul
daa
fsqrt
in
aaa
or
ret
call
or
repz
mov
mov
push
call
add
add
sbb
or
cli
inc
shrl
sbb
out
mov
fnstenv
pop
bound
stc
inc
sub
push
fistpl
adc
out
mov
inc
inc
test
sub
ja
test
loopne
aaa
cmp
ja
mov
aam
pop
std
int
xchg
pop
push
lcall
sarl
xlat
pop
cmp
in
or
pop
lods
aam
mov
pop
xchg
sub
push
xchg
icebp
add
insb
loope
stc
enter
mov
or
out
or
test
dec
mov
mov
lock
stos
mov
int3
in
sbb
sbb
jmp
test
sub
xor
or
mov
rcll
mov
jmp
push
jns
cmp
insb
adc
sbb
push
daa
pushl
inc
xlat
xor
cmc
fcmovnu
dec
loopne
je
adc
mov
push
pop
movsb
data16
lock
mov
mov
js
les
clc
ljmp
pop
jno
push
fcmovnu
cmc
push
xchg
mov
jmp
jp
xlat
out
mov
inc
pop
inc
cmp
dec
fs
sbb
pop
dec
jne
add
mov
sub
loopne
adc
mov
inc
std
stos
xor
cmp
lret
jns
xchg
mov
xor
mov
daa
pop
inc
aaa
xlat
jns
cmp
lods
ljmp
fldenv
or
insl
cmp
mov
imul
rcr
push
cmp
fisubl
cli
pushf
jns
mov
pop
inc
xor
jge
and
aad
test
adc
sub
pop
push
xchg
mov
push
imulb
pop
jge
mov
sbb
fcmovnu
int
sbb
aam
xor
cmp
add
jbe
loope
mov
std
mov
hlt
add
out
stos
in
fwait
push
or
shr
cmp
push
pusha
jle
jnp
pop
push
jecxz
inc
cmp
out
sbb
stos
xor
jp
mov
cli
push
push
and
xchg
addr16
sub
adc
mov
inc
ja
pop
fsts
xchg
dec
into
mov
leave
and
sbb
fildl
cmpsl
js
xor
mov
and
imul
fadd
cltd
xchg
bound
pop
mov
shl
js
xor
negb
fnsave
xlat
sbb
pop
cmpsb
ds
jl
scas
std
or
and
scas
mov
cli
loope
push
insb
cmp
flds
push
xchg
popf
or
mov
xor
sub
push
mov
mov
jmp
sub
adc
sbb
xchg
arpl
cmp
mov
repz
pop
cli
jp
out
or
xor
dec
xchg
dec
js
add
rolb
sbb
push
jns
mov
mov
xchg
repnz
xor
xor
push
xor
fidivl
mov
dec
fadds
jae
rcr
into
filds
inc
stc
les
pop
inc
cmpsl
stos
outsl
inc
lock
test
movsl
pop
and
inc
push
outsb
cmp
push
rolb
sub
mov
sbb
pop
inc
loop
mov
xchg
adc
and
scas
in
jns
cmp
inc
mov
shrl
mov
sbb
cmp
je
popf
sti
fldt
lds
cmp
xchg
jo
xchg
icebp
jmp
lret
push
test
ficompl
add
sub
int3
orb
bound
pop
out
icebp
ljmp
pop
xor
cmp
movsb
jbe
sub
sar
sub
push
cmp
mov
cmc
in
fwait
cmp
mov
dec
int
sub
cmpsb
jge
in
gs
dec
js
pop
xor
xlat
mov
xchg
cmp
out
mov
pop
adc
addr16
pop
or
pop
rol
ror
dec
mov
imul
mov
and
push
xor
dec
imul
repnz
and
notl
jns
and
mov
push
xchg
dec
fsubs
sub
ja
pop
pushf
gs
xchg
sarb
pop
adcb
adc
outsl
fcmovnu
cmp
stos
aas
cmp
test
sub
fldcw
sbb
or
sbbb
fiaddl
mov
bound
stos
ret
push
cmp
push
mov
sub
xchg
lods
or
push
pop
fdivr
jge
jo
inc
push
mov
dec
mov
addr16
add
jle
imul
movsb
or
subb
xor
dec
dec
dec
xchg
push
pop
push
and
std
jnp
inc
jecxz
or
jp
popa
xlat
jbe
jmp
mov
sbb
fnstenv
ja
adc
popf
inc
adc
mov
cmp
fs
or
repnz
cmp
stos
push
mov
aam
sub
mov
insb
ret
xchg
sbb
cmp
imul
notl
cmp
fldenv
ljmp
fyl2xp1
pop
cwtl
pop
push
add
icebp
inc
and
jmp
xor
mov
stos
xor
mov
enter
pop
or
push
test
jno
test
pop
fsubs
test
and
cmp
jmp
adc
imul
cmp
dec
lret
cmp
push
mov
add
out
ja
orb
jl
mov
outsl
sub
rep
mov
daa
notl
adc
dec
mov
adc
pop
dec
cmp
sub
cs
inc
scas
ljmp
push
pop
jge
push
add
rorl
mov
jle,pn
dec
hlt
je
adc
mov
divl
movsb
xor
and
and
push
xlat
xchg
into
push
test
sub
cmc
iret
sub
shr
out
push
jns
out
push
mov
pop
jl
hlt
push
or
rorl
adc
fcomi
inc
dec
cld
mov
cld
pusha
sub
xlat
push
cmpsl
sbb
dec
mov
icebp
inc
sti
and
ret
cmpsb
mov
adcb
imul
xor
or
insb
or
xor
or
imulb
and
dec
orb
mov
mov
jp
insl
jnp
cmp
out
cmp
outsb
sbb
cli
push
jns
cmp
das
mov
jbe
fldenv
lods
add
push
and
inc
adc
xorl
xor
ror
addr16
sbb
fildl
mov
pop
fs
je
sub
cmp
jmp
or
xchg
mov
lret
inc
push
outsb
jne
push
cmpsl
aaa
fistps
in
stos
dec
js
xchg
jae
dec
or
fidivrl
inc
xlat
fsubr
xor
xor
push
sahf
arpl
std
pop
inc
push
pop
sbb
jp
dec
lods
xchg
ds
xor
or
lahf
ds
das
bound
cmp
mov
clc
dec
stos
and
icebp
ljmp
arpl
loope
push
dec
jnp
adc
mov
cmp
fsubp
pushf
jp
sub
inc
dec
inc
test
mov
ljmp
fistpl
dec
push
pop
add
mov
or
add
mov
sti
in
sbb
jns
mov
add
xchg
mov
and
mov
out
test
or
xor
pop
mov
inc
negb
cmp
shll
mov
cs
jo
ja
sbb
push
fidivrl
dec
fcmovnb
mov
xor
repnz
scas
jp
mov
add
dec
mov
adc
sbb
or
iret
in
imul
cmp
or
mov
xor
loope
ljmp
fmull
mov
dec
inc
aas
push
test
push
leave
xor
adc
rolb
sbb
pop
pop
adc
movl
ja
fchs
sub
mov
add
mov
xchg
fidivrl
inc
push
clc
push
enter
mov
stc
ja
pop
fisubl
outsl
lods
and
push
jns
leave
lret
or
xorb
fcoms
cmpsl
sbb
dec
add
mov
lea
jmp
pop
in
clc
lret
push
or
push
mov
push
lret
stos
xchg
push
jnp
adc
ss
push
out
xchg
cs
test
fisubrs
xchg
sti
loop
mov
pop
pcmpeqd
push
out
adc
and
jnp
cmp
push
fdivrs
xlat
jns
cmpl
sub
push
push
fisttpl
push
jmp
push
inc
in
aas
dec
add
icebp
subl
or
push
cmp
xlat
mov
fsts
pushf
cwtl
or
fiadds
inc
xor
jmp
adc
push
push
or
and
fwait
dec
addr16
cli
mov
test
and
test
data16
cmp
xchg
sbb
fcmovnb
adc
jns
and
or
dec
push
faddp
aaa
repz
bound
lahf
jnp
cmp
popf
jecxz
mov
cmc
add
sub
jnp
or
bound
pop
addr16
cwtl
ljmp
add
fxch
orl
mov
xor
adc
add
cmp
cwtl
jne
inc
ret
fldt
sbb
jae
xlat
icebp
sbb
ds
dec
insb
mov
inc
mov
mov
xor
mov
pop
and
mov
enter
icebp
aaa
das
mov
cmovl
mov
xor
enter
and
add
sub
ficoms
xchg
insl
test
mov
fwait
cmp
imul
nop
daa
sbb
dec
dec
lds
out
pop
xchg
xor
test
sub
xlat
aaa
fwait
mov
movsl
mov
insl
ja
rcr
mov
xor
and
emms
push
out
repnz
outsb
mov
shrl
rcrl
push
xor
cmp
stc
subl
orl
movsl
sub
in
dec
jg
jnp
xchg
inc
and
stc
subb
jle
pop
shll
hlt
out
daa
mov
insb
sahf
push
sbb
add
mov
pop
push
cld
test
les
cmp
mov
roll
into
dec
or
fidivl
repz
leave
sbb
adc
mov
cmp
fcmovne
out
mov
pop
xchg
pushf
negl
cs
cs
cmpsb
int3
mov
push
cmp
xchg
iret
or
sub
jae
xchg
mov
je
dec
dec
adc
ds
repz
arpl
in
shl
stc
xor
and
push
movsb
in
jne
mov
jge
or
xor
ja
scas
fldcw
pop
jp
mov
push
in
idivl
jae
mov
in
aas
ss
or
mov
daa
xor
pop
lahf
jg
cld
or
or
add
shlb
jne
or
pop
insb
adc
ja
addr16
lds
leave
fidivl
les
fsts
xchg
add
mov
push
test
dec
push
mov
sub
mov
push
flds
push
je
fstpt
and
push
test
mov
and
lret
std
cmp
aas
fwait
sbb
out
fdivrs
add
outsl
mov
sub
cwtl
and
add
mov
icebp
fsubrs
jae
add
dec
movsl
ja
mov
icebp
pop
cmp
gs
inc
call
push
push
dec
repz
fldt
fists
push
jge
fwait
gs
and
ficoml
sbb
cmc
dec
rcl
movsb
cmp
mov
repz
jns
cmpsl
lahf
sub
push
xchg
sbb
adc
popf
fnstenv
mov
dec
xchg
sub
outsl
lret
mov
xlat
jmp
pop
movsb
lahf
pop
ds
ret
in
push
push
push
out
sub
push
jg
xor
push
dec
cmpsb
pop
inc
mov
sub
cmc
sub
adcb
dec
inc
aad
pop
stc
daa
jecxz
lock
and
ret
jmp
dec
subl
sub
stos
adc
jp
out
cmp
push
jl
fsts
jmp
dec
xor
pushf
imul
mov
pop
adc
xchg
cmp
pop
xlat
or
in
adc
push
sbb
sti
push
sub
xor
fildl
push
sbbl
push
aad
jecxz
and
cmpsb
dec
push
dec
je
adc
inc
jp
bound
outsl
stos
or
dec
add
or
xor
cmp
cmp
jge
sbb
jno
dec
enter
aas
mov
jg
xchg
sub
cmp
fstps
mov
inc
jae
cwtl
mov
jo
or
jno
jo
fldt
jae
test
xor
ds
aad
pop
fisubs
daa
insb
push
fidivrs
ja
cmp
mov
cmpsb
dec
cmc
mov
in
sbb
add
mov
adc
fisubs
lcall
dec
push
jmp
fxch
mov
clc
leave
adc
inc
test
imul
mov
xchg
xchg
sbb
dec
in
push
pop
fisttpl
rcr
in
inc
xchg
das
xchg
mov
xor
and
mov
enter
cwtl
push
inc
fstpt
pushf
push
xor
movsb
shlb
xchg
xchg
xchg
xor
gs
loopne
adc
adc
and
cmp
pop
jge
or
lret
fldt
mov
test
push
lods
mov
es
lods
in
inc
jle
and
int3
leave
cmpsb
mov
flds
popa
cmp
lock
lods
push
mov
push
sbb
cli
mov
xchg
sub
jmp
and
push
mov
movsl
mov
and
ds
mov
and
adc
xchg
in
jge
mov
scas
std
addr16
cmc
ret
dec
push
pop
lahf
mov
fnstcw
push
cmp
fisttpl
jge
xor
clc
arpl
cs
lahf
scas
mov
test
mov
jecxz
jae
fwait
cmp
xlat
lret
jmp
xor
jb
pop
inc
pushf
xor
rcll
into
fwait
lods
insb
dec
movsb
insb
jp
iret
push
cmp
imul
das
outsb
cs
ficoms
bound
fcoml
fcoml
jge
add
mov
xor
mov
push
and
nop
cmpsb
fisubs
jge
jg
fldcw
xchg
enter
aam
mov
and
inc
or
pop
ficompl
lea
int3
adc
sub
sub
xchg
ljmp
call
fmuls
fs
test
popa
jp
adc
cmp
stc
clc
iret
mov
test
les
fildl
orl
sbb
fisttpll
mov
or
rorb
pop
adc
push
sbb
cmp
xchg
cmpsl
aam
jl
mov
ds
imul
int3
enter
dec
cmp
push
cli
dec
movsb
fldt
xor
enter
jecxz
pop
test
push
sub
add
sbb
add
dec
and
sub
or
cmp
call
decl
xchg
jb
iret
lahf
push
push
gs
pusha
cmp
mov
aas
inc
xlat
rol
int3
roll
leave
xchg
add
jne
fld
cmp
loop
jne
xor
movsl
cmp
je
fiadds
dec
lahf
or
and
icebp
dec
cs
incb
imul
insl
pop
pop
pop
insb
addr16
cmc
xchg
mov
cs
out
sbb
fwait
adc
dec
xor
les
and
or
adc
jecxz
dec
imul
xorb
outsl
adc
test
in
and
jge
aas
dec
or
jmp
ffreep
popa
fwait
outsl
cmp
push
cmp
les
adc
decb
and
bound
push
aam
js
cmp
iret
loop
push
mov
mov
flds
lret
test
or
dec
mov
pop
cmp
cmp
jae
ret
outsl
fmuls
xchg
enter
stos
sub
test
pop
xor
mov
and
xor
mov
cmp
mov
mov
fiadds
popf
mov
jae
xchg
mov
and
dec
addr16
int
add
bound
jnp
icebp
fstps
mov
subl
jmp
push
fimuls
insb
mov
nop
cmp
mov
inc
fildl
movsl
lcall
or
cwtl
shll
xchg
sub
and
or
dec
hlt
pop
jae
int
lret
out
stos
cmpsl
out
fidivrl
jns
adc
test
push
inc
icebp
mov
in
pop
inc
daa
pop
rolb
xlat
popa
addr16
sub
xchg
mov
pushf
mov
sub
adc
jp
aad
or
loop
xor
outsb
lahf
out
dec
push
adc
mov
xor
fnstcw
mov
xchg
or
fcoml
push
adc
insb
lods
dec
or
mov
cmp
sbb
insl
popa
sub
ja
cmp
cli
insl
add
cli
in
jns
jle
mov
jg
jecxz
sbb
push
cmp
arpl
or
loope
aam
mov
pop
pop
insl
lret
lcall
gs
sub
push
jmp
dec
fcmovne
and
xor
sti
mov
addr16
or
les
sbb
popa
add
scas
xor
sbb
dec
pop
mov
fmull
shrl
fcompl
mov
dec
inc
mov
aam
nop
pop
adc
pop
fsubr
push
fcomps
xor
dec
xor
pop
cmp
repz
push
jecxz
addr16
xor
stc
cmp
sbb
outsb
out
jle
sbb
test
movsb
jl
jge
xchg
ljmp
cld
rcrl
and
push
sub
and
sar
dec
imul
popf
shll
mov
nop
das
push
addr16
imul
jns
jbe
xchg
into
dec
in
xor
jg
jmp
imul
cwtl
sarl
and
xchg
sbb
iret
mov
dec
idivl
xchg
jnp
adc
push
shr
test
sub
iret
or
xor
js
fldl
xchg
js
js
add
cmpsl
cmc
mov
add
fdivp
shll
inc
xor
mov
aas
ret
dec
push
fstpt
shll
push
int3
stos
pop
jge
fldcw
add
push
inc
outsb
sbb
test
addr16
stc
and
add
aad
mov
push
aam
pop
insb
mov
fistpl
shlb
and
pop
mov
aam
push
jne
dec
cmp
out
shll
mov
sub
xchg
fisttpll
jecxz
add
and
jp,pt
mov
ret
sub
push
pop
movsl
out
hlt
mov
inc
push
dec
mov
das
cmp
cli
fcmovne
inc
divl
fwait
push
cld
dec
mov
out
pop
add
dec
xorb
push
test
push
clc
test
pop
daa
sbb
pop
cmp
xlat
test
cld
sub
subb
stc
jns
adc
into
sub
rorl
lcall
push
and
enter
inc
sbbl
xor
rcrb
mov
lods
mov
scas
mov
jecxz
test
out
sub
call
jno
fisttpll
xor
inc
jne
xlat
mov
cli
test
cmpsb
shrl
cmc
lret
imul
lods
jb
and
ret
cld
insl
clc
pop
pop
stc
fchs
scas
imul
ljmp
jl
clc
cwtl
mov
jg
dec
lret
je
jns
and
fstpt
cmc
call
inc
lods
cmc
mov
pop
inc
ja
adc
in
in
in
dec
sub
in
sub
arpl
cld
in
pop
imul
stos
xor
xchg
nop
aad
adc
jae
jp
bound
test
adc
pop
jnp
fldenv
pushf
pop
out
sbb
or
arpl
into
addr16
mov
pop
cmp
js
or
sahf
cltd
dec
jmp
xchg
dec
xlat
pop
pushf
repnz
cmpsb
hlt
push
push
and
cli
add
push
xor
mov
mov
fildl
push
pop
jmp
dec
pop
cmp
ret
stos
push
nop
fdivrs
imul
cmp
fs
add
repz
jbe,pn
in
daa
jno
les
add
rcrb
call
adc
stos
in
push
jno
shlb
in
enter
mov
outsl
call
mov
add
and
pop
push
jne
arpl
dec
mov
xchg
fs
jmp
jne
rcll
pushf
imul
rorb
push
test
pop
add
xor
push
js
sub
inc
push
jae
jp
test
xchg
inc
or
add
dec
sti
jcxz
add
aam
iret
aam
sub
cwtl
xchg
inc
push
into
and
jno
stos
mov
cmpsb
popa
push
jmp
cli
mov
push
cmp
jno
stc
sbb
fistl
xchg
xchg
jmp
stos
jae
pop
les
cmp
mov
jmp
push
mov
mov
les
and
jb
push
mov
cmc
outsb
fsts
push
repnz
sbb
jnp
cwtl
lods
mov
repnz
cmp
pop
outsb
mov
popf
xchg
xchg
dec
fucomi
push
sub
inc
jl
and
pusha
lret
lock
sub
ljmp
mov
iret
mov
mov
pushf
rclb
pop
lea
pop
shlb
fyl2xp1
mov
fwait
fs
xlat
int3
int
lret
rorb
or
xchg
jle
cmp
push
arpl
int3
sub
sbb
pop
push
xlat
imul
faddl
or
inc
mov
xor
shlb
fcompl
pop
xchg
cld
push
dec
jmp
out
jns
adc
xor
enter
adc
idivl
jae
and
mov
jle
cltd
and
stc
sub
jae
cwtl
pop
push
test
mov
ja
dec
gs
mov
ret
lcall
fisttpl
icebp
les
xchg
das
pop
and
pop
jp
test
and
add
and
lods
lods
test
fwait
out
out
or
cmp
repnz
pop
shll
fisttpl
jle
repz
push
jbe
push
test
das
sbb
adc
call
imul
fldpi
xlat
ret
outsb
push
or
and
cmp
loop
arpl
data16
jb
stc
or
push
fldt
jg
int3
push
sbb
sbb
sub
adc
incb
jle
test
pop
repz
sbb
je
push
sti
daa
enter
dec
aaa
into
loopne
fwait
push
mov
xchg
fsubrs
in
andb
addr16
sahf
push
inc
push
cli
pushf
xlat
push
jno
ja
mov
dec
jmp
add
inc
xor
mov
or
push
idivb
xor
cmc
addr16
and
dec
push
js
pop
imul
dec
mov
push
insl
leave
bound
jbe
push
pusha
push
adc
mov
dec
add
popa
dec
jno
adc
sub
mov
jne
lods
das
add
jp
data16
test
jp
pop
push
outsl
xor
stc
sbb
push
jno
adc
and
push
ror
jp
pop
mov
dec
adc
ss
roll
xchg
cltd
push
pop
sub
push
cmp
mov
lret
fildll
mov
cmp
inc
add
cmpsl
popf
jg
mov
pop
push
mov
mov
push
fidivl
sub
mov
pop
divl
mov
cld
mov
jp
jns
xchg
jmp
ret
dec
test
push
push
cs
pop
shlb
pop
sub
test
xchg
fistpl
jg
les
dec
imul
sbb
sub
xorl
mov
pushf
cs
mov
xorb
xchg
aad
xchg
repz
jnp
sub
insl
dec
or
fwait
imul
je
push
cltd
sbb
call
add
popa
gs
in
push
inc
xchg
jne
fnstcw
int
test
int3
inc
out
sbb
sarb
mov
add
pop
dec
iret
dec
sub
mov
pop
cmp
xlat
or
push
orb
or
gs
xchg
push
mov
jecxz
sbb
js,pt
vxorps
in
pop
and
sub
stc
subb
movb
andb
sbb
or
addr16
sub
xor
call
call
addr16
lahf
xlat
ja
mov
jns
fisttps
mov
cmpsb
or
hlt
cwtl
pop
jns
xlat
push
adc
ret
fcoml
cli
or
mov
test
adc
fistpl
mov
mov
cld
push
roll
je
movsl
pop
add
add
pusha
popa
pushf
out
mov
add
cmp
mov
arpl
shl
mov
dec
xchg
stos
stos
in
aad
shrl
push
sbb
cltd
sub
jecxz
sbb
sbb
and
fwait
pop
adc
push
pop
sub
out
adc
xchg
jns
fldenv
mov
jg
push
dec
push
bound
jae
js
jp
pop
lret
mov
lcall
mov
cmpsl
inc
sbb
cmp
addr16
dec
dec
lea
jmp
loope
cmp
sub
jbe
movsw
jge
sahf
aad
mov
dec
or
orl
adcl
mov
and
sub
sub
push
inc
divl
xorl
test
or
xchg
mov
lods
enter
cmp
popf
cmpsb
cmp
subb
shll
cs
shr
stc
sbb
mov
dec
pop
aad
mov
mov
ja
and
add
dec
popa
mov
jno
jno
xlat
inc
xchg
push
stos
adc
dec
sarb
mov
out
lret
dec
xlat
sbb
fidivs
xchg
in
cmp
inc
shr
inc
or
movsb
push
data16
insb
test
call
pop
rorb
sbb
addr16
mov
addb
jl
mov
cmp
xor
fxch
push
imul
lret
dec
mov
arpl
push
pop
frstor
xchg
enter
es
push
jmp
jnp
xlat
push
add
inc
lods
dec
xor
shl
dec
and
out
dec
or
cmp
xor
push
xlat
lock
or
cmpsl
int3
out
mov
cld
movsb
xchg
dec
dec
mov
insb
adc
or
adc
gs
sub
jg
icebp
rorl
add
stos
inc
lock
jae
xor
ret
xchg
andb
mov
cld
sub
lret
pushf
sarb
ss
rcr
imul
aad
inc
pop
sbb
daa
clc
nop
push
xchg
mov
add
test
sbb
inc
lret
addr16
mov
inc
sbb
cs
jno
nop
aaa
or
mov
icebp
inc
stos
adc
cmp
cmpsl
jl
mov
pop
imul
cmpb
pop
cmp
add
fsts
add
movsl
test
stc
adc
clc
cmp
or
push
xlat
and
notb
xchg
and
mov
or
mov
jecxz
push
std
adc
mov
movsl
push
jecxz
xor
cmp
xor
inc
mov
gs
add
rclb
imul
sub
nop
push
in
cmp
push
imul
fs
iret
sbb
lret
out
push
cmp
adc
dec
xor
leave
mov
jle
pushw
add
mov
push
ret
enter
mov
inc
push
add
mov
push
xor
inc
cwtl
cmp
or
jae
jmp
fld
sub
add
mov
js
mov
push
sub
xchg
push
imul
stc
and
out
jle
mov
call
in
pop
dec
fstpt
sub
rcr
jp
fldenv
idiv
or
xor
xchg
xor
push
aaa
lock
aam
out
gs
les
push
movsb
or
cmp
mov
xorb
hlt
sub
in
lods
and
jae
and
xor
jecxz
movsb
ds
push
jmp
push
mov
pushf
mov
out
rcrb
out
popf
push
sub
insb
push
add
icebp
inc
ret
or
fbld
out
xor
and
pop
add
dec
push
push
vmwrite
inc
push
mov
fnstenv
fisubl
stc
out
xor
cmp
call
fisttpl
cmp
dec
mov
shl
repz
dec
lock
pop
out
out
mov
test
jae
xchg
jno
stc
jmp
xor
mov
aad
je
jne
push
dec
jbe
push
bound
fwait
roll
incl
out
xor
clc
sub
pop
push
xor
or
insb
mov
jbe
pusha
pushf
pop
inc
add
sub
enter
cmc
adc
push
cli
lea
xchg
xor
roll
les
pop
std
outsl
js
dec
imul
mov
into
addb
sti
sbb
add
push
mov
push
arpl
lret
and
sbb
mov
or
pop
ds
sahf
inc
int
xlat
add
or
adc
inc
dec
aaa
mov
mov
lret
loop
out
flds
xlat
lea
cmp
jns
mov
orl
js
shlb
subb
adc
test
popa
rcrl
ss
and
xor
loopne
test
mov
jae
xor
stc
xchg
mov
and
cli
jle
xlat
imul
ja
pop
sub
fists
xor
les
pushf
rcrb
dec
push
mov
mov
xor
rcl
inc
mov
out
jp
clc
push
in
jg
aam
fistl
adc
inc
jge
sbb
repz
neg
sbb
jl
imull
mov
fcmovnu
sbb
jae
mov
es
or
xchg
mov
pop
or
pusha
ss
arpl
push
adc
push
jno
ss
xchg
and
cmp
push
stc
popa
dec
jp
dec
dec
jnp
dec
sub
in
daa
imul
inc
cmpl
push
loop
imul
jge
ret
cltd
dec
rorl
add
cmp
dec
sbb
imul
cmc
fbld
into
fiaddl
xlat
stos
scas
pushf
sbb
or
pushf
aaa
mov
adc
and
and
inc
jp
add
push
jae
jae
or
fisttpl
pop
mov
cmp
fidivrl
fcomi
fwait
popa
pop
dec
adc
stos
hlt
mov
out
push
sub
add
or
lahf
inc
aad
mov
js
mov
mov
cmp
push
fwait
jle
xor
and
mov
std
cmp
out
ja
fldz
jecxz
cli
mov
xchg
mov
add
out
imul
imul
cs
stos
xchg
iret
pop
sbb
sbb
adc
mov
jbe
pushf
daa
jns
out
add
popf
fbstp
stos
sub
mov
pushf
mov
dec
adc
sbb
jo
aam
mov
mov
shl
stos
daa
pop
fld
in
arpl
lock
dec
jg
xorl
iret
dec
cmp
cmp
xor
pop
ds
lods
pop
ss
jns
aaa
or
lock
push
cmp
and
jns
rcrb
and
adc
lret
fcoms
add
in
fnstenv
aad
push
jno
mov
shrb
and
or
xor
outsl
sub
sahf
lret
jmp
sbb
adc
jb
dec
out
es
push
loopne
pop
in
jnp
stc
and
xlat
push
or
je
or
out
or
dec
and
loop
stc
or
sub
call
popa
movsl
cmp
sub
jp
sub
pop
frstor
sbb
push
xlat
sub
xchg
xchg
jp
sbb
mov
sbb
out
jae
xchg
xor
sbb
lods
dec
nop
out
add
aas
jecxz
shrl
push
add
imul
fldcw
cltd
leave
and
push
or
lret
xor
int3
jne
fnstcw
xchg
mov
mov
dec
inc
std
int
and
test
ficomps
xchg
xlat
dec
xor
data16
lahf
testb
push
jge
jne
jmp
leave
xlat
dec
dec
pop
cmpl
mov
popf
jp
mov
repnz
xchg
imul
cmpsb
orl
xor
or
mov
mov
cld
and
and
mov
mov
fcmovne
push
xorl
sub
xlat
aad
loop
ss
pushf
int3
repnz
aam
iret
cmp
xchg
lret
movsb
or
insb
clc
inc
sub
pop
arpl
mov
xlat
int
lea
xor
fnstsw
sbb
xchg
xor
add
cmp
mov
cmp
xchg
mov
xorl
stc
icebp
sbb
cmp
xchg
dec
fildl
mov
outsl
out
fstpt
xor
stos
ljmp
sub
pop
ja
mov
ljmp
nop
loop
ljmp
mov
les
enter
sbb
xlat
addr16
arpl
sub
stc
push
dec
xchg
popa
ljmp
call
mov
inc
jns
xchg
outsl
mov
jbe
out
cmp
dec
fdivs
dec
cwtl
add
jg
jmp
mov
xchg
shrb
stos
xor
hlt
je
xlat
enter
mov
sbb
add
daa
rcrb
sbb
adc
xchg
scas
mov
test
cs
push
inc
and
mov
ja
jnp
stos
pop
dec
ret
jp
pushf
push
jne
jl
mov
or
jp
dec
out
lock
dec
stos
mov
pop
push
cli
jae
sbb
outsl
or
xchg
add
fimull
add
call
lock
fimuls
sub
mov
jge
gs
jg
pop
mov
fcomi
daa
mov
out
lcall
adc
xlat
out
test
ss
in
and
mov
xor
sbb
mov
jp
pop
or
push
testb
mov
ss
adcb
jbe
xchg
call
subl
and
pop
das
ds
rcrl
cmc
cmp
test
xchg
add
mov
mov
or
cmp
nop
pop
adc
xchg
pop
mov
lcall
repnz
adc
out
cmpsl
stos
aas
dec
pop
pop
sub
mov
jns
fstps
shrb
sub
and
ret
callw
pop
lret
fldenv
and
in
je
das
das
mov
std
movsl
jmp
fdivl
lcall
dec
imul
aaa
ja
sahf
push
lock
push
or
push
mov
andb
xor
idivb
pop
leave
rolb
mov
lahf
mov
pushf
in
adc
inc
sub
mov
es
test
xor
hlt
jnp
fldenv
jle
fcmovnb
lret
in
stc
int
mov
inc
sub
aaa
out
dec
jmp
and
repnz
in
cltd
push
jno
xlat
cltd
daa
fs
sub
mov
jp
aas
in
cmp
idivl
sub
jl
pop
mov
jmp
shlb
divl
add
subb
mov
enter
mov
push
ljmp
mov
xor
ret
in
xor
mov
jae
pop
mov
and
xchg
inc
mov
mov
or
and
inc
jnp
dec
lcall
pop
xchg
fwait
cmp
leave
mov
mov
orb
loop
pop
or
test
or
sub
sub
arpl
sub
ds
push
addr16
stc
movsl
push
xchg
cmpsb
or
testl
out
pop
jno
mov
outsb
clc
pop
jmp
adc
test
pop
and
jo
fcmovnb
cmp
pushf
xchg
out
mov
enter
insb
and
iret
mov
adc
sbb
xchg
iret
jns
stos
imul
rclb
xlat
ljmp
and
mov
mov
dec
jg
ljmp
xor
and
lret
sub
addr16
sbb
sarb
je
cmova
jmp
cmp
sahf
sbb
std
cli
jmp
adc
inc
add
add
test
lret
test
push
cmp
fldt
mov
jo
nop
push
sub
pop
repnz
ret
ds
aaa
pop
cmpsl
adc
enter
push
mov
and
jns
pop
aaa
aas
dec
fcmovne
push
sbb
mov
addb
pop
add
ja
scas
jmp
jmp
push
or
lret
outsl
mov
xchg
sub
pop
pop
lock
adc
pop
jp
fistpl
arpl
test
stc
lcall
mov
shlb
hlt
js
mov
add
dec
hlt
lods
imul
ret
push
iret
mov
ret
pop
cmp
mov
adc
ja
xor
pop
sbb
cmp
or
dec
cmpb
insb
adc
xor
jl
ja
push
lds
pop
mov
stos
sub
and
cmp
mov
cltd
dec
xchg
mov
cmp
aad
sub
into
jbe
nop
jb
inc
scas
or
icebp
mov
cmp
roll
rclb
lds
rep
adc
lahf
add
ret
or
xor
fsub
imul
popf
pop
xor
std
fisubrs
push
outsl
cmp
dec
addr16
out
subb
stos
insl
sbb
or
testb
jno
inc
sub
cmp
sub
rorl
std
xchg
push
add
and
mov
jno
and
stc
push
rcrl
pop
add
movsb
cwtl
cli
cltd
in
push
pop
pop
fldenv
cs
and
xor
add
lods
jbe
xadd
sbb
mov
jb
jge
loop
inc
jle
fidivrl
xor
add
mov
aad
fmul
fcmovnu
icebp
inc
imul
test
jl
or
push
xchg
fnstcw
negb
xchg
pop
rclb
ss
pop
pushf
dec
mov
dec
sub
idivl
jae
jmp
mov
in
sti
es
insb
inc
out
aaa
hlt
and
imul
lahf
shrl
stos
xchg
cld
fidivs
or
mov
jne
test
sti
inc
incb
je
sbb
sar
mov
mov
daa
aas
dec
subb
mov
add
iret
dec
mov
jne
xorl
jecxz
shlb
cmpsl
dec
sbb
fbstp
pop
pop
jl
inc
fildll
les
sti
jge
outsb
add
inc
xlat
in
out
cmp
pop
imul
mov
push
in
ja
insl
ds
cmp
cmp
scas
xchg
popf
sarl
fcompl
out
jo
push
jle
inc
out
mov
xlat
or
mov
fcomi
add
sbb
inc
pop
lret
sub
xchg
dec
sbb
jo
xlat
repz
aaa
sub
es
adc
lock
rcrb
jge
jne
xchg
and
push
movsb
xor
add
lock
lods
aad
push
ret
inc
addr16
inc
test
out
dec
subb
scas
jge
insb
incb
iret
adc
hlt
imul
call
jne
dec
sub
jecxz
movhps
cmp
sarl
je
dec
adc
or
call
dec
pop
and
imul
sub
in
xchg
mov
mov
sub
mov
in
out
inc
xchg
lcall
jmp
daa
bound
dec
cmp
jae
fldt
mov
jmp
sbb
jmp
mov
add
iret
cmp
jmp
add
sbb
xor
inc
cmpsl
and
cmp
subl
stc
or
popf
and
xor
xor
pop
add
mov
stc
out
out
scas
sub
aam
adc
pop
push
fxch
aas
cmp
jge
push
call
hlt
hlt
das
js
in
push
scas
cmp
fs
or
jecxz
test
cmpsb
cmp
sub
push
lea
push
in
jmp
inc
rol
sub
mov
push
xor
jle
shlb
movsl
mov
int3
jae
and
cmc
xorb
daa
sbbl
in
jne
push
xchg
bound
lods
xlat
into
add
push
popf
test
mov
sub
daa
mov
js
cmp
sub
mov
stos
movsb
sub
inc
mov
sbb
dec
sub
inc
xlat
arpl
dec
push
shll
jbe
fmull
mov
loopne
rcll
push
nop
repnz
xor
sub
lret
mov
cmpsl
bound
dec
stc
cmp
add
cmp
fldcw
out
mov
les
ds
popa
xlat
xchg
pop
pop
xchg
xchg
in
in
rcrl
cmp
xchg
sub
jecxz
push
mov
pop
out
fsubr
mov
and
mov
push
sbb
iret
pop
fisttps
or
add
sbb
mov
mov
xchg
mov
xor
stos
enter
mov
gs
pop
push
mov
lret
insl
mov
and
or
daa
mov
ss
insl
cli
mov
add
cltd
pop
dec
lret
fstpt
mov
xor
call
daa
add
imul
int3
cmp
stos
addr16
dec
shlb
data16
push
je
cld
mov
pop
cmpsl
scas
pop
pop
test
inc
and
xchg
inc
add
sbb
fistl
mov
pusha
dec
lock
add
rcrb
xor
jb
mov
inc
jmp
dec
shlb
repz
xor
cmp
sub
sarb
out
ret
sbb
add
mov
pop
pop
push
inc
push
cmp
push
mov
andb
pop
popa
hlt
dec
stos
daa
xchg
scas
cmc
xlat
movsb
jae
imul
xchg
mov
jge
les
dec
xchg
cld
push
mov
popf
das
mov
xor
fsub
and
pop
loop
push
cmp
push
pop
ja
addl
test
xor
std
push
test
int
pop
jnp
push
mov
fnstcw
push
mov
arpl
inc
inc
stos
enter
sbb
dec
sbb
push
popf
sbb
xlat
adc
roll
sbb
orl
mov
or
movsb
outsl
and
xchg
xchg
jo
xchg
daa
in
push
xchg
addb
mov
pop
mov
jns
and
inc
mov
fstpt
push
adc
dec
dec
call
fs
dec
test
mov
push
mov
and
dec
daa
push
nop
inc
out
mov
test
orl
sti
fldcw
fisubs
sbb
sbb
outsl
dec
pop
dec
jne
iret
out
pop
mov
jne
dec
push
jge
cmp
jmp
cmp
adc
or
movsb
xchg
xorb
jns
dec
arpl
fldt
cmp
jge
addl
dec
imul
adc
push
lret
hlt
mov
sbb
lods
stc
and
pop
outsb
pop
scas
add
pop
or
pushf
mov
out
mov
jno
xrelease
cmp
imul
shl
adc
sbb
mov
test
inc
add
stc
idivb
xlat
push
xor
add
hlt
mov
std
mov
test
xchg
xchg
out
or
sahf
inc
js
icebp
adc
xchg
subl
sahf
lcall
or
mov
arpl
xor
ja
cmpsl
int
xor
push
push
ja
fcomps
lcall
js
mov
add
sub
nop
js
test
jl
pop
insb
call
jmp
out
sub
jnp
ja
jl
int
xor
push
add
ljmp
push
sbb
add
push
out
movsl
xor
pushf
fiaddl
sub
and
sbb
push
cmpsl
xchg
bound
lods
jg
push
dec
mov
or
mov
std
pop
mov
lret
gs
cli
loope
push
mov
repnz
jno
fld
in
lahf
push
pop
inc
je
mov
insb
xor
push
or
and
push
pop
push
dec
push
fldenv
mov
mov
into
sub
lret
and
pop
pop
arpl
bound
mov
ficomps
outsl
add
inc
push
std
sarb
fstpt
xchg
scas
sbb
sub
jns
ds
xlat
cmp
pop
jmp
adc
inc
jnp
xor
lds
push
pop
out
movq
xor
dec
pop
add
test
stos
in
nop
stos
jmp
iret
mov
ret
mov
pop
call
jae
in
xor
adc
sbb
andb
dec
andb
mov
int
push
out
call
ja
adc
pop
pop
or
lods
subl
repz
xor
cmp
dec
inc
mov
lahf
xchg
enter
xchg
mov
stc
pop
and
inc
xor
cs
or
jmp
sub
and
push
jnp
shlb
jbe
adc
in
push
fldt
mov
nop
dec
sub
mov
inc
push
add
xchg
shll
cmp
movsl
ficoms
mov
out
sbb
pop
lret
fs
or
fcompl
sbb
xchg
ret
outsb
sub
xor
dec
pop
test
ljmp
pop
xchg
sbb
mov
enter
inc
ss
shrl
addr16
popf
push
mov
cwtl
xlat
lods
sbb
push
cltd
cmpsb
pusha
ret
pop
add
push
cmp
lret
sub
cmp
pop
cmc
jbe
xor
test
mov
or
bound
fsub
mov
cmc
imul
addr16
fistps
jbe
push
xchg
arpl
pushf
mov
mov
or
cmp
pop
xor
adc
add
cmc
cmp
xchg
mov
data16
test
int
xchg
jno
rorl
pop
or
jp
jmp
adc
ja
cwtl
insl
xor
jle
int
dec
arpl
or
pop
mov
test
std
bound
fildl
cmp
pop
and
push
inc
ljmp
mov
xchg
adc
sti
jb
sbbb
sub
test
fildl
gs
iret
clc
cli
mov
fwait
jge
xor
pop
std
rcll
mov
rcrb
jae
sub
push
lahf
adc
adc
out
push
in
sub
sbb
mov
pop
stc
mov
xchg
adc
mov
sub
sub
roll
hlt
xor
popa
push
xlat
loop
mov
data16
xor
xchg
fwait
sub
sbb
add
xor
addr16
push
sbb
cmp
cmp
mov
shl
push
insb
pushf
enter
adc
into
add
xlat
cmp
sub
dec
jns
dec
xchg
xchg
push
adc
push
es
enter
idivl
xlat
scas
and
out
and
or
out
fisubrl
insb
lcall
sbb
stos
test
outsb
lahf
and
loop
cmp
push
or
daa
std
push
xchg
cmp
and
fcmovnu
pop
lea
cwtl
mov
aam
ljmp
mov
jp
xlat
xor
aam
daa
ss
xor
pop
xchg
andl
add
mov
stos
and
mov
and
mov
aam
mov
adc
jae
dec
add
rorb
cmpsl
mov
aas
add
ljmp
dec
jns
xchg
jbe
sub
sub
jmp
or
punpckldq
fwait
push
ds
movsl
cmp
fcmovu
stos
mov
sbb
xlat
pop
add
cwtl
cmp
in
in
pop
pop
push
dec
jg
daa
int
inc
addr16
cmc
xor
test
pop
jns
jne
mov
mull
cli
divb
or
stos
fldenv
cmp
cmp
dec
xchg
and
loop
push
jmp
cmp
push
shll
xor
aad
stc
rcrl
cmpsl
arpl
pop
cmp
push
stos
ret
push
pop
leave
and
fldcw
pop
push
jnp
test
pop
cwtl
jp
cmp
xlat
inc
into
test
adc
iret
mov
cmc
shll
cs
fistl
enter
xlat
inc
pop
and
dec
jnp
sbb
dec
push
jmp
mov
add
rcrl
mov
pop
std
xor
jae
enter
add
sub
push
and
jb
push
push
pop
dec
xor
xchg
or
icebp
rcl
pop
sub
aam
jge
push
aad
jecxz
mov
mov
mov
xchg
cli
xlat
sub
cmp
cmp
das
ret
gs
adc
cmp
insb
sub
ret
ljmp
stos
jp
fists
repz
push
xchg
shrl
outsl
fildl
and
xchg
je
movsb
movsl
or
adc
or
adc
xor
sub
imulb
test
je
cmp
and
push
das
dec
and
mov
mov
movsl
pop
push
fisubrs
rclb
lea
mov
dec
inc
test
mov
inc
push
pop
mov
cmc
dec
pushf
push
lea
adcl
inc
pop
out
or
stos
iret
sbb
xlat
out
cmpsl
xchg
add
shll
jecxz
jmp
mov
dec
outsl
jno
cwtl
lods
iret
fs
das
stos
or
push
xlat
mov
test
pop
fldlg2
pop
mov
cmp
cmp
sub
adc
fcmovbe
add
mov
push
stc
ret
arpl
nop
movsl
dec
lret
push
out
aaa
cmp
imul
or
cs
and
add
mov
cmp
faddl
nop
and
mov
jae
xchg
lods
mov
jge
add
icebp
cmp
push
mov
mov
les
rcll
mov
push
stc
jge
iret
xchg
push
icebp
loop
jns
lahf
mov
in
daa
cmp
mov
shlb
mov
cs
mov
xchg
jmp
mov
and
fdivrl
mov
aad
jle
sub
pop
dec
push
pop
xor
enter
sti
out
lds
jl
sbb
or
jns
enter
push
movsb
popf
sub
mov
jmp
mov
out
leave
jecxz
test
dec
jmp
dec
mov
jmp
ret
inc
nop
mov
mov
mov
or
jnp
rorb
add
dec
pop
sbb
mov
loope
jns
filds
repz
push
outsl
pop
in
sbb
add
sarl
addr16
rclb
arpl
sub
push
xor
repnz
pop
clc
push
das
enter
fcoml
cld
and
shll
xlat
pop
xchg
xlat
out
xor
pop
jmp
dec
andl
or
mov
xchg
dec
pop
dec
lcall
xor
xlat
add
jnp
pop
cmp
sub
mov
cmp
hlt
push
shlb
cs
pop
mov
pop
and
adc
xlat
iret
cmpsb
cmp
xchg
imul
fisttpl
lods
xchg
inc
and
lret
jns
fldcw
dec
lret
ss
roll
pop
xlat
in
dec
xchg
jne
repz
xor
jns
mov
mov
or
mov
push
mov
cmp
xor
cmpsb
andb
cmc
test
aaa
dec
xchg
arpl
mov
adc
test
cli
inc
pushf
mov
sbb
adc
mov
xor
add
mov
pop
movsl
adc
and
addr16
test
imul
sbbl
arpl
jecxz
or
aad
lret
dec
outsl
pop
and
pop
std
loopne
int
repnz
cltd
in
aad
and
and
jne
sub
pop
lahf
out
mov
xchg
jmp
adc
xor
add
divl
pop
data16
cmpsl
sti
mov
cld
pop
and
out
jp
cwtl
popa
clc
jl
xor
cmp
popf
sbb
xor
or
loope
flds
xor
push
insb
shlb
xorb
xchg
push
outsb
fcomp
xchg
xchg
ljmp
sub
pop
enter
arpl
sbb
mov
icebp
push
push
cmp
dec
and
stos
ljmp
jns
xchg
xor
and
add
cmpsl
sub
push
push
aad
ss
loopne
cld
dec
or
test
icebp
stc
jo
push
sbb
sbb
lods
xchg
push
push
xchg
dec
jb
pop
pop
das
cmpsl
add
jmp
jmp
movsb
or
cltd
push
mov
dec
je
and
xchg
lds
adc
and
ficomps
adc
push
fcoml
mov
or
jns
sbb
ret
mov
sbb
stc
cmp
out
enter
sbbb
test
xchg
cwtl
addr16
out
loopne
or
loop
clc
call
mov
adc
pusha
and
cwtl
loop
cli
jns
cli
imul
or
xchg
jns
inc
or
mov
test
pop
cwtl
adc
rorb
cmp
push
mov
daa
push
lahf
mov
jno
fisubrl
push
and
sub
jae
or
sub
popf
sbb
or
fcomps
mov
fisubs
push
xchg
fadd
iret
rorb
or
xor
out
inc
lock
sbb
jl
inc
mov
rcr
xor
pusha
or
cmpsl
sub
inc
inc
adcb
pop
push
out
int
mov
jge
xchg
xor
loope
mov
xchg
and
testb
sbb
filds
cs
mov
dec
int
cli
jl
add
testb
out
mov
or
imul
cmpl
mov
adc
es
in
repz
or
stos
loope
adc
jecxz
pop
xor
mov
imul
std
mov
call
je
sub
mov
jae
push
or
xchg
outsl
fcmove
push
and
lcall
leave
arpl
stos
jmp
js
inc
cmpsb
pop
sub
mov
stos
mov
jl
mov
es
xor
pop
and
jg
xchg
xchg
lea
xor
adc
mov
jp
mov
adc
push
jae
and
in
cmp
mov
mov
push
bound
add
je
pop
xchg
cmp
pop
push
ljmp
lods
xchg
stos
das
fisubl
sti
mov
mov
xor
mov
sub
add
stc
xchg
aaa
mov
inc
dec
out
shlb
in
add
je
xchg
jp
cmp
es
mov
ret
xlat
mov
sbb
adc
fildl
mov
sarl
mov
cli
xor
jae
add
int3
pop
or
popw
mov
xchg
adc
push
or
push
cli
or
test
ljmp
outsl
notl
in
push
xor
pop
push
mov
jnp
sbb
push
fcmovne
mov
add
lock
mov
mov
adc
lret
lahf
popa
push
dec
fadd
inc
sub
jnp
out
and
adc
ds
out
xchg
jae
dec
jl
mov
jl
mov
aaa
lret
aad
add
sub
or
mov
and
aaa
inc
xlat
stos
or
jae
mov
xor
jns
push
sub
jns
stos
mov
cld
mov
repnz
int3
lods
fldt
sbb
fidivrl
sub
mov
xor
mov
dec
jecxz
adc
dec
dec
sub
pop
in
push
cmp
hlt
jl
pop
ret
cmp
pop
out
fs
fimuls
xchg
imul
faddl
xor
and
xor
fcmovnu
xchg
xor
movsl
repnz
xor
lret
test
fld
icebp
les
mov
loopne
rcrl
jl
push
xchg
iret
fcomps
imul
mov
ret
mov
push
or
dec
pushf
or
sub
inc
push
sbb
and
inc
gs
std
mov
nop
fsts
xchg
jmp
in
in
jns
aam
ja
mov
lret
std
cmp
jmp
lret
cld
inc
test
lahf
push
jbe
adc
sub
inc
jp
fistpl
add
aas
std
jno
push
jbe
or
pop
cmpsb
aas
das
mov
add
xchg
dec
popa
xlat
out
push
pop
jecxz
cmp
push
cmp
cli
lds
push
adc
jns
fcmovne
lods
push
sbb
cmpb
fsub
push
xor
les
cmpb
push
iret
pop
push
scas
add
sub
mov
mov
xchg
dec
cmpb
cmpsl
xchg
xchg
mov
movsl
or
ljmp
mov
fldt
or
sub
cmpl
ja
dec
mov
add
xor
dec
pop
mov
pop
sbbl
cmpsb
imul
in
fldt
insb
cld
ret
andl
dec
push
inc
and
dec
sub
jl
sub
out
push
xor
int3
insl
mov
test
fsubl
xchg
jmp
pop
mov
in
push
loopne
icebp
xchg
pop
loopne
mov
mov
adc
leave
negb
mov
fidivrs
nop
pop
fcoml
lcall
clc
test
sub
pop
add
and
call
imul
mov
fsubrs
mov
xchg
lret
fbstp
cmpsb
and
xor
fsubl
jl
in
push
sbb
insb
call
pushf
cmp
in
inc
mov
push
dec
push
stc
dec
sbb
cli
sub
cmp
cmpl
cmp
adc
xor
and
adc
mov
adc
pop
mov
sub
movsb
sub
jnp
mov
inc
jnp
push
out
loopne
loop
push
xlat
ret
sub
outsl
xor
push
pop
int3
xchg
or
xlat
fidivrs
and
jg
fstpl
popf
push
push
adc
adc
mov
fstps
int
sbb
arpl
pushw
lods
jbe
xchg
pop
jle
bound
jecxz
cmp
add
or
imul
mov
js
imul
mov
mov
or
fsubrs
popf
jmp
sbb
std
and
sub
xchg
stc
addr16
fs
sub
xchg
outsl
mov
movsb
pusha
in
nop
xlat
enter
dec
sub
out
loopne
insl
inc
push
inc
or
jle
sub
xchg
cld
mov
xchg
ljmp
xor
cli
cli
lret
ja
xor
xor
test
jae
xor
mov
pop
sub
cmp
or
ja
pop
sub
js
sub
out
cmp
inc
or
dec
negb
fwait
popa
inc
imul
inc
nop
sbb
pop
out
cmc
xlat
into
mov
aad
xchg
sub
or
adc
dec
mov
mov
jmp
fimull
andb
mov
out
mov
fiaddl
xchg
sub
je
sbb
int3
out
push
or
aas
cmp
and
int3
push
ja
cltd
or
outsb
add
dec
mov
ret
cmp
sarl
sbb
inc
push
or
ja
lods
pop
mov
stc
xlat
push
shlb
mov
test
xor
dec
cmp
push
test
pop
jne
xor
repnz
pop
mov
and
jg
sbb
and
cmp
push
pop
daa
out
mov
and
fs
sbbb
int
jecxz
das
cmp
movsl
sub
arpl
add
mov
dec
push
repnz
sarl
jmp
test
outsl
adc
sbb
imul
inc
sub
mov
jmp
xorb
push
fstpt
icebp
and
popf
push
xor
cmp
or
ljmp
cmp
dec
inc
mov
inc
xor
iret
push
out
rcrl
xchg
mov
xlat
push
int
lret
test
jbe
andb
shrb
js
mov
xor
loop
leave
mov
dec
jno,pt
pop
sbb
lret
xor
lret
push
mov
fldenv
push
push
hlt
mov
or
jne
sbb
cmp
xchg
jo
aam
add
insl
sbb
dec
xor
mov
sbb
pop
push
push
or
jbe
rcrl
adc
xor
inc
or
lock
xchg
pop
inc
mov
in
nop
push
fcomi
push
lret
dec
fidivrs
sarl
xchg
addr16
clc
dec
dec
cmp
shl
cld
sbb
lods
sub
and
imul
mov
adc
cmpl
lds
jne
push
pop
add
xchg
out
mov
popa
push
push
dec
pop
add
push
das
adc
roll
xchg
jge
mov
lcall
xor
jl
pop
das
insb
outsl
xchg
add
sub
ja
test
test
add
imul
push
push
mov
je
std
cmp
repz
inc
push
jno
mov
and
push
xor
xchg
pushf
fiadds
into
call
pop
ja
lods
sub
shlb
rol
lcall
add
fadds
je
in
out
rclb
test
push
inc
inc
sbb
movsl
sub
cmp
push
or
adc
pop
test
dec
cmp
mov
jge
push
cmpsl
jle
mov
add
mov
push
and
std
testb
pushf
ret
dec
inc
jno
sub
sbb
pop
ficomps
mov
and
cmc
subl
mov
and
cmpsb
sbb
scas
xor
daa
mov
ja
or
sbbl
push
stos
add
pop
mov
loop
inc
mov
shll
jg
push
je
aaa
push
daa
clc
adc
js
jmp
shr
pusha
or
stc
mov
daa
and
movsl
out
mov
mov
sub
or
xor
test
fnstenv
insl
ret
xor
dec
pop
push
call
pop
pop
and
fcompp
xor
sub
lods
cmp
xor
push
pop
js
add
xchg
dec
gs
jl
cmpsl
insb
cmpsb
rcrl
lret
xchg
push
loope
or
inc
enter
cld
outsl
cltd
idivl
imul
fsubs
fistl
mov
xor
jns
push
jne
mov
cmp
imul
mov
test
pop
pop
xor
cltd
pop
dec
jo
sbb
btr
push
xchg
xchg
js
cmp
shll
jb
mov
out
mov
dec
and
in
insb
sub
cmpsl
mov
push
adc
sub
jns
or
pop
sbb
cmp
add
sub
fdiv
sub
popa
mov
and
mov
icebp
movsl
add
xlat
xchg
push
push
test
jno
xchg
sub
aaa
dec
xchg
and
push
ja
xlat
dec
sub
push
sbb
mov
inc
push
or
cmpsb
xor
cmp
adc
cmp
stc
and
and
pop
mov
add
adc
pop
or
cmp
sbb
jg
lods
jge
jp
sbb
pop
mov
clc
js
stos
dec
loopne
and
std
xchg
sub
in
jg
fistpl
adc
xchg
int3
outsb
outsl
xor
cmp
jg
ret
xor
in
pop
sbb
xchg
mov
je
popf
jg
jg
sbb
addb
loopne
mov
scas
xor
adc
sbb
or
jbe
push
mov
in
aas
push
sub
jbe
out
imul
imul
int3
or
dec
cltd
mov
and
lds
xor
cmp
push
pop
std
pop
fdivr
push
popf
mov
pushf
push
lret
adc
out
mov
jl
cwtl
dec
movb
movsl
mov
ljmp
sbb
or
stc
je
adc
jecxz
pop
neg
in
out
mov
cmp
jae
sarl
xlat
pop
jmp
ljmp
xor
pop
inc
push
add
dec
fcompl
add
mov
popf
test
xor
movsl
arpl
ds
loopne
scas
insb
add
fnstsw
dec
in
shll
or
das
push
dec
je
or
cmp
mov
mov
mov
aad
or
xchg
cmc
test
push
dec
aam
pop
jmp
push
loop
push
out
dec
mov
fmuls
xlat
arpl
nop
xchg
inc
in
adc
mov
cmp
push
ja
test
jecxz
mov
jb
dec
jno
aaa
push
popf
xchg
pop
mov
arpl
and
imul
scas
xchg
loop
gs
inc
ljmp
xor
sub
jbe
fcmovnb
divl
mov
int
loop
push
xlat
cmp
pop
jge
and
adc
mov
cli
movsb
cs
pushf
cmp
inc
pop
jno
ds
sub
rcrl
div
mov
xor
pusha
jo
push
sbb
pop
and
xchg
call
dec
loope
test
repnz
js
orl
out
or
adc
outsb
xor
fsubs
pop
fdivrl
cmp
imul
ja
mov
or
mov
in
fs
pop
push
fdivrl
jne
or
jg
ja
pushf
mov
xor
fstpt
fimuls
lods
cmp
xchg
std
adcb
cmpsb
pop
jns
clc
adc
pop
fs
mov
gs
jmp
int3
jle
fisubrl
or
dec
xchg
inc
imul
ja
notb
add
fldt
adc
iret
cmpsb
lret
jns
push
aad
jne
into
sbb
es
xor
arpl
pop
pop
dec
stos
es
popa
mov
lret
lods
jp
adc
push
jne
jg
dec
adcb
std
sti
aam
cvtpi2ps
xchg
out
cmp
sub
sti
aad
inc
cld
xlat
ja
fistpl
addr16
cld
pop
in
testl
mov
ret
add
mov
test
add
push
push
ret
imul
aaa
fcmovne
lea
dec
jbe
cld
out
xchg
sbb
orb
push
pop
lahf
popa
lods
int3
sub
imul
ret
les
mov
mov
xchg
sub
mov
push
loopne
mov
lods
outsl
leave
sbb
jo
xchg
sbb
cli
je
popa
cmc
xlat
imul
sub
cmp
ss
out
jge
push
dec
mov
push
sahf
adc
push
ret
popa
xlat
and
lret
adc
outsb
pop
enter
insl
push
and
or
pop
daa
fs
mov
fnstenv
stc
pop
insl
xlat
xor
shll
hlt
lret
inc
cmp
mov
movsl
cwtl
aam
jle
pop
mov
sarb
push
pop
xor
and
adc
movsl
mov
pop
out
rorb
add
popa
jae
fimuls
test
sti
lods
cli
pusha
mov
inc
pop
mov
adc
js
mov
mov
xor
push
xchg
repz
flds
andb
pusha
or
ret
jbe
stos
addr16
ss
ret
add
dec
mov
cmpb
test
mov
cmp
shll
jecxz
out
mov
bound
cmp
repnz
cmp
jns
stos
adc
aas
in
divb
adc
push
jns
repnz
and
fxam
sbb
sub
xlat
mov
fwait
rcrl
xor
shr
jl
mov
leave
inc
add
pop
xor
and
nop
in
jnp
sub
gs
xchg
ja
or
dec
pop
fiaddl
sub
mov
iret
daa
xor
mov
sbb
push
lret
pop
jb
jmp
or
dec
add
int3
jae
jp
xor
jno
mov
outsl
xchg
jne
mulb
jb
xor
into
scas
jo
dec
and
idivl
push
mov
ljmp
mov
and
add
in
pop
push
jne
inc
jecxz
jb
push
flds
push
sbb
jle
jno
sbb
call
and
loop
cs
xchg
or
inc
lahf
ja
in
sub
push
xchg
xor
scas
imul
int
popf
scas
jb
dec
ficoml
mov
mov
or
push
add
sti
mov
std
sub
ret
and
pop
pop
test
mov
push
pop
xlat
or
shll
data16
int
xchg
xchg
loopne
pop
dec
lds
add
orb
fildl
xor
xchg
rcl
fimull
mov
lock
lret
faddp
or
fmulp
or
cmp
or
or
out
aam
dec
stos
or
dec
cmp
bound
hlt
leave
mov
repz
cmp
mov
icebp
adc
rcrb
mov
sbb
sbb
loop
mov
push
enter
aad
jnp
xchg
or
insb
and
mov
imul
out
inc
mov
insb
sbb
xchg
loopne
push
pop
arpl
or
ja
xor
testb
cmp
xor
bnd
add
loope
mov
xchg
lahf
fstl
dec
mov
mov
das
cmpsl
sbb
daa
lret
sub
repnz
cmpsb
and
iret
xor
fdiv
fsubs
jne
fcomi
adc
mov
pushf
pop
shr
nop
subb
popa
outsb
mov
fs
fcomi
shlb
mov
add
jp
pusha
mul
jnp
dec
pop
cmpsl
inc
repz
popa
sub
test
mov
xchg
nop
pop
dec
jecxz
xor
dec
adc
pop
ret
jp
enter
cltd
xlat
sub
out
popf
hlt
lea
sbb
pop
out
push
xlat
jge
fsts
popa
inc
cli
sbb
pop
add
pop
cmc
push
add
std
jg
lret
jno
out
cmovae
int
fcmove
xchg
out
lret
jns
xor
sub
mov
mov
sub
add
hlt
pushf
push
fcmovnbe
test
ljmp
xor
clc
adc
int
mov
cwtl
fbstp
movntq
out
in
fimull
addr16
xlat
xchg
push
pop
xlat
jp
xlat
xchg
sahf
adc
test
pop
mov
sbb
xchg
fcmovne
inc
xor
fidivrs
or
cmp
repz
in
and
cs
shrl
pop
xlat
into
sbb
repz
inc
sbbb
xorb
dec
mov
lods
hlt
shll
addb
fistps
inc
imul
push
mov
sbb
add
sarl
mov
scas
inc
jl
pop
push
lahf
xor
pop
movsb
sbb
mov
pop
jo
out
sbb
rcrl
sbb
push
inc
adc
push
es
xlat
xchg
cmp
mov
xor
or
jmp
mov
mov
lcall
adc
inc
dec
cli
xor
xlat
jbe
pop
pop
lea
and
inc
add
mov
adc
cli
pop
dec
out
imul
xor
adc
das
or
fxch
stos
jb
cmp
call
add
pop
pushf
push
or
mov
pop
dec
sti
sbb
js
mov
jns
pop
sti
test
or
shrl
sub
xlat
jno
test
out
in
and
mov
cmp
int3
ds
mov
test
outsl
and
shlb
xchg
or
push
inc
add
pop
and
and
or
ds
sub
and
insb
sub
movsl
push
in
loop
xchg
int3
mov
adc
fs
hlt
adcb
pop
push
mov
scas
push
xor
insl
inc
mov
dec
push
xlat
ds
stc
pop
and
sub
xchg
cmp
jne
jl
push
mov
popa
addl
sbb
xor
xor
bound
data16
enter
leave
adc
xlat
scas
jmp
jne
les
insb
cli
pusha
sub
out
imul
into
iret
xor
hlt
add
pop
xchg
jae
add
ljmp
xor
pop
ret
dec
fisttpl
adc
scas
jno
pop
mov
and
jne
lea
cmovle
imul
and
iret
stos
test
push
repz
and
add
sahf
arpl
jmp
cli
or
sbb
and
inc
inc
cmp
cld
dec
xchg
fdivs
mov
dec
imul
out
xchg
xchg
push
in
cmpsl
sbb
mov
cld
jo
pop
push
outsl
mov
and
push
xlat
push
cmp
push
stc
xchg
imul
cmp
xlat
bound
je
in
push
ljmp
cmpsl
jecxz
movsb
fdivl
ret
pop
dec
mov
fmul
mov
je
inc
mov
std
adc
adc
mov
ror
inc
xor
cmp
lret
mov
push
push
fcmovnbe
jnp
dec
les
hlt
push
test
rcrb
fimuls
sub
repnz
outsl
xor
mov
aad
loop
jmp
and
pushf
jno
ja
push
xchg
sub
jae
nop
jl
inc
add
jns
dec
hlt
lret
or
insl
pop
sbb
push
inc
pop
insb
inc
mov
add
or
fwait
adc
daa
mov
fisubrs
xchg
push
jle
out
mov
pushf
mov
cmp
fcompp
jg
mov
xor
mov
mov
cltd
call
mov
cmp
and
mov
cmpl
mov
jp
mov
cmp
mov
cli
rolb
icebp
and
xor
fwait
jbe
dec
jmp
into
sti
loopne
dec
pushf
gs
addr16
cmc
sub
mov
cmp
adc
inc
aad
jns
fcmovnbe
xor
or
loopne
mov
outsb
icebp
sub
push
sti
cwtl
jmp
mov
pop
mov
es
jl
jl
in
and
pusha
and
cmp
fidivrs
xor
stc
fdivs
lret
faddl
arpl
xchg
xchg
xor
mov
pop
imul
jmp
cmc
push
push
int3
dec
push
dec
push
cmp
ss
mov
lret
leave
aam
cmpsl
lret
ret
adc
sub
sbb
int
pusha
aad
inc
loopne
sbbb
pop
sbb
out
cmp
dec
pop
sub
add
pushf
and
insb
rcl
push
jp
cmpsl
insb
ja
scas
fnstcw
dec
inc
mov
push
pop
sti
or
inc
fldcw
out
mov
cmp
stos
jae
pusha
iret
fistl
xchg
daa
mov
and
pop
stos
mov
add
mov
inc
xchg
dec
mov
cmp
xlat
rcrl
sti
mov
cmp
add
jge
stos
pop
or
sbb
sub
jecxz
ja
orl
in
xlat
movl
mov
pop
in
js
cmp
addr16
pop
sbb
push
js
push
push
pop
sti
lcall
push
xor
hlt
imul
pushf
stos
in
pushf
adc
insl
jg
in
out
adc
popf
in
rdtsc
rcrb
lahf
push
mov
cld
loopne
inc
jne
frstor
lock
sub
pushf
lds
stos
shl
rclb
dec
push
jbe
fsubl
xlat
cs
jns
jbe
push
xchg
pop
xchg
xor
pop
sbb
sub
arpl
inc
test
cmp
addr16
mov
add
lret
notl
std
fadds
adc
xchg
mov
or
dec
popa
push
rcll
inc
mov
adc
stc
adc
add
stc
push
push
sbb
aad
jg
arpl
fsts
mov
dec
arpl
sar
jns
jmp
or
imul
mov
push
cmpsb
or
lds
stos
dec
pop
sbb
xchg
and
inc
jne
xor
fldt
jae
xlat
ret
pusha
test
pop
xacquire
js
dec
cwtl
adcl
cmp
mov
xchg
pop
movsl
jmp
and
cmc
inc
xchg
lahf
xchg
push
xchg
ret
pop
and
addr16
mov
jge
cld
jb
sbb
jno
hlt
mov
stc
cmp
hlt
fildl
xor
mov
shrl
lods
mov
jg
aaa
lds
or
pop
scas
jo
mov
jne
fldenv
pop
mov
fistl
push
stos
add
push
enter
jbe
testb
sbb
jo
fstps
xor
std
icebp
jmp
out
dec
fisubrs
sbb
out
xor
lock
insb
sbb
or
and
add
cmp
or
out
mov
icebp
cmp
jno
stos
dec
xor
lret
xor
push
push
stos
jae
fimuls
xchg
loop
rcrl
jle
push
and
test
cmp
xorl
into
xor
fisubrl
jns
jnp
mov
mov
push
inc
out
outsl
xor
mov
fistl
cmp
icebp
sbb
out
inc
leave
sbb
mov
cs
push
gs
mov
mov
jg
mov
xor
xchg
cmp
add
inc
push
push
call
jl
dec
sub
cmc
push
aaa
adc
mov
mov
mov
lds
or
fsts
and
sub
pop
pop
and
push
add
jge
fsts
cmpsb
jp
lret
cld
push
fcmovnu
jo
add
pop
sbb
pushf
out
arpl
pop
mov
mov
add
mov
push
shlb
dec
insb
pop
add
jp
mov
xchg
jg
and
push
into
jns
add
or
cmp
movsl
int
jl
insb
lods
mov
sub
es
xchg
mov
outsl
imul
inc
sub
and
movsb
test
int
xlat
les
jne
jmp
ret
sub
mov
repz
sub
and
call
xchg
xor
in
jo
pop
ja
loop
insb
push
loopne
fwait
shrb
clc
xlat
nop
out
les
mov
psubusw
aas
xorl
jecxz
adc
jae
addr16
push
sub
popl
imul
dec
jo
pop
and
movsb
inc
call
adc
fld
sub
imul
mov
xchg
jb
push
or
mov
push
jno
xchg
lods
or
jo
pop
pushf
jp
dec
jnp
mov
and
push
add
or
inc
sub
stc
lret
pop
mov
mov
dec
bound
es
divb
mov
inc
aaa
jmp
scas
fldcw
push
lock
std
int3
mov
fidivs
mov
jecxz
xor
push
push
out
lret
subl
imul
mov
sbb
sub
cwtl
mov
loopne
mov
push
in
or
and
pop
lds
sub
pop
mov
xor
xor
mov
movsb
add
jbe
sub
pop
or
push
cmp
insl
adc
sub
cltd
jo
mov
lcall
cmp
lds
add
mov
pop
push
mull
adc
ret
or
mov
das
add
mov
shrl
test
outsl
sbbb
push
mov
pushf
cmp
test
jg
insl
and
test
shlb
stc
dec
cs
popf
xlat
mov
aad
daa
rcll
pop
pop
lds
pop
mov
in
mov
fdivp
aam
cmp
int
clc
and
int3
popf
aad
outsl
dec
pop
sbb
lcall
ret
and
mov
mov
out
adc
push
dec
pop
and
jae
pop
sbb
adc
or
hlt
sbb
xorb
sbb
xchg
pop
dec
cwtl
mov
mov
mov
fdivrl
ds
adc
xchg
addr16
in
hlt
dec
push
das
stc
xor
call
dec
xlat
scas
sbb
add
adc
mov
xor
in
xor
aam
pusha
pop
cwtl
hlt
mov
push
push
pop
dec
shl
inc
adc
insb
sub
mov
pop
xchg
jne
sbb
iret
mov
nop
cld
insb
or
bound
bound
jae
daa
mov
inc
loop
in
xlat
setnp
sub
lock
fnstenv
add
push
pop
xchg
add
cli
inc
ret
pop
xchg
cmpsl
cs
aam
add
mov
and
addr16
xor
sarb
pop
push
insl
jg
xchg
hlt
adcl
dec
cmp
aad
imul
push
xchg
std
cmp
fwait
sub
fstps
loop
clc
sub
test
das
pop
push
int3
sti
pop
jns
adc
ret
cwtl
jno
mov
pusha
sbb
xor
insl
out
aaa
out
dec
cmp
mov
add
mov
xlat
imul
or
push
pop
push
add
xchg
insb
es
xchg
xchg
bnd
mov
roll
fimuls
stc
repz
pop
xlat
rcl
arpl
sbb
or
jl
aam
enter
or
ss
mov
xorl
mov
xor
fisttps
adc
int3
fwait
jb
mov
mov
jo
xor
stos
and
add
push
pop
lods
xorb
ss
sub
jae
and
mov
xchg
cmp
rorb
outsl
jns
addb
pop
pusha
sub
and
outsl
sbb
ret
and
sbb
sub
adc
push
rorb
cmp
mov
add
pop
sbb
push
mov
and
sbb
cmp
jnp
movsl
add
xlat
call
lret
mov
or
fucomi
push
movsl
imul
fimuls
push
insl
xchg
lahf
mov
or
mov
lcall
xor
lcall
sbb
shr
jns
sub
push
mov
pop
jl
insb
sbb
fwait
add
leave
pop
dec
fstpt
sahf
dec
xchg
shrb
inc
shlb
adc
and
pop
mov
out
pop
xorps
sub
decb
jmp
jg
lock
push
stc
cmp
fcmovu
jg
xchg
jb
xchg
fistpl
sub
mov
mov
add
xor
mov
stos
add
out
es
fdivrs
es
pop
dec
jg
push
inc
cltd
or
cmp
xor
dec
push
xchg
jge
push
fstpt
dec
mov
addr16
das
add
loope
adc
xchg
and
inc
std
mov
add
roll
sub
sub
repz
enter
ss
jmp
sbb
sub
popf
xor
sti
outsb
loop
out
mov
out
jecxz
fnstenv
fsubrs
mov
enter
jns
mov
or
in
jmp
arpl
cmp
sub
sub
test
fistl
imul
pop
add
insb
push
aad
or
sub
or
sti
jecxz
cmp
aaa
fsts
jecxz
icebp
pushl
adc
ficoml
jge
movsb
ja
fcmovnu
adc
xlat
dec
movsl
sub
shl
xchg
cs
insl
pushf
stos
push
aam
ret
mov
andb
cmp
mov
fistl
mov
dec
or
sub
shrb
pop
mov
daa
cmp
inc
jae
adc
outsl
stos
in
push
sarb
push
mov
mov
push
dec
lds
or
test
loopne
ljmp
dec
div
fcmovnbe
loop
fmull
cmp
mov
int3
cmp
pop
xchg
scas
inc
cwtl
inc
push
dec
cmp
dec
sub
sbb
aad
imul
loop
jb
andl
sub
dec
xor
js
hlt
cmp
outsl
mov
pop
sbb
ss
ja
inc
sbb
mov
sbbl
jno
sub
insb
xor
add
dec
dec
mov
fistl
jns
sarl
or
sarl
xchg
dec
out
iret
cwtl
pop
ja
xor
lcall
and
push
repz
cmpsb
add
xchg
inc
loopne
mov
out
jp
pop
pop
or
stos
push
sar
fldl
cmp
sarb
popa
inc
adc
push
clc
xor
pusha
sti
imul
mov
aad
loopne
sub
sarb
rolb
js
mov
sub
lret
lods
cmp
xchg
loopne
rorb
mov
pop
sub
dec
cmp
adc
pop
push
push
decl
sbb
aas
or
and
xor
sub
cmp
fisttpl
xor
xchg
idiv
adc
cmp
dec
pop
jle
sbb
jae
in
jne
imul
out
scas
dec
dec
sbb
add
dec
xchg
fisubrl
jb
push
dec
mov
jecxz
in
test
cld
cli
sbbl
cs
addb
mov
sub
jnp
call
sub
aaa
mov
jns
push
jl
fldl
sub
fwait
adc
incl
sbb
inc
mov
imul
push
pop
lock
rcrb
notl
jecxz
les
imul
aad
lret
mov
cmpsb
fidivrl
outsl
dec
mov
jp
pop
adc
jg
rorl
insb
cmp
mov
ret
and
stos
rolb
or
insl
cwtl
nop
rep
jecxz
lea
repnz
inc
shll
pop
xchg
push
les
xlat
cs
sbb
fsubp
aas
cmc
pushf
push
jo
xchg
and
in
pop
sbb
into
ja
outsb
cmp
aam
jne
xlat
test
repz
gs
mov
orb
jg
dec
dec
or
bound
repnz
movsl
stc
int
push
adc
data16
leave
subb
push
rclb
pop
adc
loop
sbb
dec
scas
pop
mov
or
jo
call
pop
fs
mov
icebp
shl
dec
xor
dec
rcrl
sbb
pop
adcb
and
icebp
xchg
loopne
cmp
jno
add
imul
pop
sbb
lret
jle
out
xchg
jno
dec
push
fstpt
dec
sbb
not
mov
neg
sarl
sbbl
pop
pop
fistpl
je
fisubrl
or
push
dec
xlat
loopne
hlt
test
into
push
mov
in
cmp
pusha
dec
or
sbb
fimuls
je
jp
mov
loopne
add
mov
test
xor
jg
pop
imul
lret
fsubrs
add
lcall
push
push
jno
xchg
sarl
addb
xor
dec
push
int
ret
sbb
mov
push
ja
fldt
daa
insb
out
mov
inc
mov
xchg
jne
xchg
and
mov
js
xor
je
notl
sub
adc
arpl
aad
dec
cs
int3
push
dec
ret
out
xlat
push
push
xchg
xor
adc
pop
and
scas
rol
adc
fwait
sbb
dec
imul
mov
add
xor
and
outsl
xchg
xchg
imul
call
jnp
pop
in
fiadds
mov
and
pop
jns
mov
dec
nop
pushf
inc
mov
jmp
fdivs
jb
xchg
stc
fucomi
inc
and
pop
or
lret
pop
rep
pop
inc
mov
sbb
sbb
bnd
mov
loopne
inc
dec
xchg
xor
jno
adc
aaa
pop
inc
jo
jae
test
pop
push
sub
sarb
test
sbb
mov
push
pop
mov
ss
lret
push
je
sbb
mov
mov
lcall
int
mov
cmpsb
pop
pop
xchg
pop
loop
sub
ds
jle
jb
sbb
nop
or
xlat
xor
jg
icebp
mov
rol
jp
mov
imul
push
mov
cli
dec
push
push
outsl
pop
call
push
clc
enter
scas
js
push
cmp
jno
je
lcall
inc
cli
fstps
dec
pop
sahf
pushl
test
stos
xor
insl
push
jo
cmc
fisttpl
jge
adc
lds
jns
scas
mov
pop
in
jge,pn
dec
mov
dec
jg
pop
or
and
xor
imul
add
adc
pop
fadds
cmp
enter
jns
aad
push
outsb
xlat
push
test
mov
andl
jno
jge
mov
mov
sbb
push
dec
dec
stos
mov
or
inc
ljmp
aad
dec
and
out
lahf
adc
std
test
imul
xor
xor
nop
sub
ret
mov
fdivrs
sub
shlb
dec
mov
and
leave
flds
in
add
mov
push
dec
sti
mov
push
xor
lret
jae
or
mov
leave
std
data16
cwtl
and
iret
sub
push
cmp
test
sub
adc
sub
mov
out
gs
fsub
jmp
fistpl
or
xchg
adc
push
sub
jno
mov
nop
test
outsl
test
gs
ficoml
cmp
dec
pushf
cli
mov
pop
push
subl
dec
pop
mov
and
xlat
inc
loope
bound
pushf
add
test
ds
out
popa
cmp
lret
lods
test
and
std
xor
stos
imul
mov
jae
mov
out
push
push
push
dec
jg
cltd
addl
lock
dec
lea
fbld
and
in
ficomps
scas
cli
push
inc
and
ja
roll
sbb
xchg
aam
daa
bound
cmp
pop
leave
lahf
and
addr16
mov
and
mov
and
xlat
jmp
test
ficomps
xchg
js
insb
popa
push
enter
push
lods
mov
stos
push
jns
imull
lahf
mov
jno
pop
jmp
xchg
pop
add
jb
xlat
cltd
pop
sbb
mov
xor
jp
adc
push
pop
dec
call
mov
dec
inc
cltd
inc
test
out
sbb
ljmp
jmp
pop
mov
pop
and
cmc
mov
cmpxchg
sub
in
rclb
hlt
and
les
cld
clc
flds
fisttpl
xchg
pop
dec
iret
pop
in
sub
xlat
adc
xlat
mov
loope
in
mov
cmpsl
les
cmp
pop
mov
cmc
or
fs
in
fs
dec
push
or
popl
dec
xor
mov
sarb
add
jb
cmp
test
mov
xor
dec
lock
pop
mov
mov
cmp
stos
cmc
sti
iret
in
lods
ret
jecxz
lcall
fildll
push
xor
lods
hlt
xchg
shll
pop
mov
jbe
sbbl
in
cmpsl
sbb
dec
mov
sbb
fwait
dec
xlat
scas
and
xchg
rolb
cli
jle
sbb
sub
sbbb
icebp
shrb
std
cmp
ds
fs
cs
adc
mov
push
lds
lret
or
test
stc
test
lock
inc
daa
mov
or
xchg
out
push
inc
cmpsb
cmp
xlat
mov
rcr
stc
mov
and
or
jl
inc
cmc
fldt
std
sbb
dec
adc
pop
pop
pop
sbb
push
pop
bound
sarb
xchg
lret
dec
add
subb
xor
mov
bound
inc
add
mov
push
push
rcrl
aas
outsl
es
mov
xor
vmovaps
push
mov
inc
dec
add
stos
or
stc
bswap
fsts
sarl
mov
lahf
add
sbb
pop
lock
aaa
ljmp
mov
push
add
sub
inc
push
imul
mov
adc
outsb
iret
and
shrl
jb
movsb
dec
add
and
sbb
lods
lods
imul
xchg
push
jg
sub
test
add
lods
mov
insb
shlb
pop
movsb
ret
nop
out
mov
xchg
xchg
add
jl
cmp
push
jmp
shlb
push
xchg
ret
ljmp
mov
xlat
mov
push
insb
jl
add
mov
addb
inc
lret
popa
fstpt
xchg
mov
ret
repnz
js
jo
jecxz
and
lret
jmp
xchg
jne
sti
or
in
xor
leave
mov
imul
or
pop
stc
sub
sahf
cmp
xlat
insb
sub
dec
test
in
imul
sbb
into
fidivl
or
fisttpl
jnp
sub
jge
and
cmp
rcll
and
pop
icebp
sub
cld
test
push
xlat
test
sbb
dec
pop
inc
mov
jle
out
nop
dec
jns
pushf
sub
mov
mov
js
fimuls
mov
cltd
clc
push
lods
imul
cld
and
xchg
xor
adc
cmp
cmp
shlb
in
insl
das
cltd
jns
mov
scas
or
lret
mov
movsl
mov
hlt
mov
loop
sub
pushf
dec
push
fcompl
rcll
in
shrl
out
push
roll
and
outsb
scas
mov
xor
xlat
push
ja
nop
int3
jno
fsincos
jno
jge
and
adc
sbb
or
icebp
xor
cmc
int
roll
xchg
dec
int3
push
adc
ljmp
push
push
aas
mov
cld
jmp
dec
addr16
jnp
inc
cmp
adc
mov
inc
mov
xor
lds
adc
sub
imul
push
mov
leave
out
outsb
mov
ljmp
sub
sbb
add
cmpsl
lods
notl
and
push
cwtl
add
andb
add
sub
dec
and
pop
or
lea
push
lahf
imul
xlat
insb
push
bound
iret
or
addl
cmpsl
in
stos
stc
dec
or
or
jb
ds
nop
add
jno
test
daa
loop
outsl
dec
sub
adc
xor
dec
sub
jae
fisttpll
xchg
jp
fstps
fisubl
pop
popa
cmp
fiaddl
pop
xlat
movsl
mov
pop
cmp
mov
fiaddl
and
xlat
cmc
pop
fldt
push
add
jg
mov
xchg
and
mov
sarl
mov
lret
daa
dec
sub
sbb
adc
test
into
jns
dec
mov
lret
fldt
sub
adc
addl
jmp
fdivrp
stc
std
dec
fcompl
or
arpl
cld
outsb
adc
dec
lods
xor
jg
jp
stos
pop
sbb
jge
ret
rcll
sbb
inc
out
insb
out
je
adc
or
dec
subb
mov
call
loopne
xlat
daa
stc
shl
insl
mov
aad
mov
sbb
push
fsts
mov
ds
mov
aam
movsl
loope
jo
mov
lret
daa
cld
jmp
and
sbb
pop
rcrb
mov
dec
call
push
loope
add
jl
sbb
jae
pop
cmp
aad
cmc
sbb
cli
xor
inc
cwtl
leave
fisubs
movsb
jnp
mov
sbb
pushf
jo
jae
repz
mov
scas
loop
arpl
fnstcw
and
sbb
sub
bound
mov
fidivrs
jae
lret
rcrl
subl
ja
mov
shr
adcl
insb
dec
scas
mov
je
pop
ret
push
inc
xchg
movsb
cmpsl
adc
jns
enter
movsb
xlat
add
mov
pop
add
stc
fimull
pushf
fidivrs
stc
aas
xor
push
cld
sub
rcrl
std
in
iret
pop
ret
mov
bound
out
pop
mov
mov
push
push
xlat
sub
insl
mov
dec
daa
adc
add
xor
sbb
jp
mov
imul
xchg
notl
cmp
mov
and
cltd
push
mov
push
stos
icebp
and
dec
not
dec
lahf
lds
pop
mov
add
jg
loope
mov
pop
inc
pop
add
push
loopne
push
call
roll
pop
push
mov
mov
stc
ss
test
cmp
popf
xchg
pop
sbb
push
rcll
push
add
ds
shlb
shlb
dec
dec
adc
xlat
mov
iret
mov
dec
and
add
or
sbb
or
sub
xchg
mov
push
dec
negl
andb
cmpl
fildl
pop
fisubl
or
jle
arpl
jbe
push
das
mov
add
add
pop
testb
rclb
add
pop
ret
dec
test
cwtl
sub
sti
adcb
les
xor
dec
mov
ljmp
test
out
sub
xor
cmp
call
sbb
sbb
movsb
pop
out
lret
bound
mov
pop
daa
jecxz
popf
nop
or
sbb
sbb
cmpsl
in
fcmovnu
pop
cmc
xor
dec
repz
xlat
stos
push
xor
arpl
mov
inc
push
or
mov
cs
test
jecxz
sbb
insl
lods
fsubrs
adc
fimull
fsubp
rcrl
adc
adc
std
cmp
cmp
ljmp
pop
in
or
scas
push
lret
negb
daa
outsl
xor
xor
pushf
mov
add
jae
iret
mov
adc
cmp
je
mov
aas
sbb
leave
dec
cmp
dec
enter
cmp
xchg
ja
dec
inc
cmpb
jae
dec
orl
or
ljmp
in
outsl
mov
xor
cmpsl
mov
bound
and
xchg
cmp
fildl
lcall
push
mov
fnstenv
sub
fisttpl
or
nop
mov
push
push
mov
icebp
dec
mov
incl
jmp
or
push
inc
pop
xor
xlat
lods
rorl
lret
popa
add
fcmovnb
sahf
pop
ja
xor
mov
fs
xor
or
aas
xor
push
mov
loopne
movsb
xchg
cmp
cmp
lea
test
hlt
push
sub
rorb
orb
pop
jbe
inc
shrl
cmp
cld
fdivl
push
push
ret
cmc
jg
fadds
jno
sahf
pop
mov
add
cmp
sub
push
rcrl
dec
cwtl
sbb
xor
pop
std
push
nop
lret
push
mov
dec
cwtl
jle
test
mov
ja
lea
test
mov
fstl
jecxz
push
xor
pop
sbb
mov
fstpt
hlt
or
inc
push
aad
sbb
jno
out
test
aas
xlat
inc
call
imul
mov
mov
jg
inc
xlat
xchg
mov
mov
shr
xchg
loopne
jl
and
adc
sbb
push
dec
xor
jbe
or
push
jl
je
movsl
jp
xor
xchg
sub
je
lods
mov
dec
orl
push
xor
push
mov
pushf
fildll
movsb
dec
cmp
inc
mov
shl
sbb
das
mov
cmpsl
fs
imul
dec
sbb
int3
rorl
push
jnp
insb
xor
in
mov
imul
mov
imul
or
mov
popf
lock
into
cmp
mov
loopne
sub
jge
outsb
mov
test
es
adc
inc
enter
jl
aas
jg
sbb
shl
cmpsb
sub
sub
mov
pop
or
push
stos
repz
ljmp
scas
dec
popa
pop
mov
outsb
inc
inc
ja
mov
imul
xor
ja
fcom
imul
inc
leave
pop
cli
cmp
add
sarb
mov
movsl
icebp
jecxz
pop
xchg
add
xchg
cmp
jbe
adc
out
jecxz
subl
nop
pop
jecxz
add
cli
inc
dec
shll
xchg
add
dec
fcompl
dec
mov
and
push
cmp
daa
bound
xlat
sahf
inc
divb
test
das
sub
mov
jbe
test
add
jnp
or
pop
xor
jae
add
subl
jo
out
mov
jl
add
or
sbb
xlat
adc
loope
nop
jb
loopne
push
push
push
adc
adc
cmp
fdivrl
adc
push
cwtl
int3
xchg
pop
jl
mov
xor
push
shl
cmp
icebp
xchg
mov
movsl
adc
int
es
lcall
jp
xchg
mov
xchg
cs
test
or
jns
jnp
psubw
pop
add
mov
cli
jge
xchg
and
push
les
nop
adc
pop
leave
and
jge
xor
mov
daa
xor
and
dec
pop
pop
cli
pop
test
jg
sar
test
push
and
mov
ret
jmp
mov
push
dec
push
xlat
cmp
xchg
inc
mov
loopne
xlat
pop
adc
xchg
ret
xchg
pushf
inc
pushf
cmp
pop
nop
les
js
call
jae
cwtl
out
jns
cmp
leave
xor
dec
imul
mov
outsl
fisubrs
pop
dec
fstpt
adc
leave
stos
or
add
jbe
pop
mov
aam
sbb
mov
loope
ljmp
or
pop
int
xor
jge
cli
loop
cmp
adc
xlat
dec
addr16
xlat
hlt
shll
pushf
cs
dec
pop
add
or
pop
push
les
loop
pop
sbb
push
pushf
stos
pop
xor
sbb
mov
dec
aas
aam
lcall
inc
mov
lret
stos
mov
iret
mov
cmp
dec
pop
or
push
arpl
rorb
pop
xor
inc
imulb
xor
dec
jge
and
daa
fisttpl
and
or
out
push
jno
mov
mov
and
inc
add
mov
sbb
sbbl
xor
cmp
pop
dec
stos
add
call
sarb
sarb
sbb
lea
test
cltd
shrb
out
sti
push
xorl
mov
xor
pop
mov
xor
push
xlat
xchg
jl
fnstenv
and
lret
mov
xchg
sub
in
xor
push
sub
fstpt
jbe
sti
push
arpl
or
loop
mov
or
mov
push
xchg
into
addr16
xor
mov
jae
jecxz
xlat
fdiv
ja
arpl
fistpl
and
imul
xor
scas
fwait
mov
inc
fiadds
push
xchg
and
xchg
or
dec
sub
xor
xlat
dec
push
pop
push
aas
aad
into
nop
push
shr
pop
mov
rcrb
jmp
fldenv
push
mov
jle
lret
mov
aaa
sbb
jmp
cmc
push
inc
sbb
pop
sub
xlat
jne
bound
std
cmpl
sbb
sub
inc
xor
call
jl
dec
mov
repz
dec
pop
outsl
add
pop
and
mov
int
mov
or
dec
sub
jnp
iret
mov
sub
mov
ss
inc
push
pop
sub
push
shll
int3
sti
pushf
sbb
sub
loop
mov
mov
nop
inc
shrl
mov
mov
add
dec
leave
stos
xor
scas
bound
addl
adc
cmp
xlat
pop
push
fneni(8087
mov
inc
xchg
test
insb
lcall
cmp
xor
repz
pop
orb
and
sbb
jae
addb
jae
dec
fcmovnbe
imul
cltd
jo,pt
sbbl
sbb
and
push
rorl
jge
cmc
ja
iret
xchg
add
fidivl
pusha
lahf
dec
cmpsb
lret
mov
fstpl
or
push
out
cld
fs
fistpll
xchg
xchg
mov
or
dec
add
sub
arpl
mov
mov
sbb
mov
mov
or
push
adc
cmp
sub
cs
scas
jge
jecxz
arpl
xchg
mov
mov
clc
xchg
cli
mov
sub
insl
arpl
outsb
clc
xchg
cmp
outsl
jle
pop
push
sub
mov
jnp
mov
out
aam
stc
pop
adcl
jbe
jae
push
and
fsts
mov
jl
ds
or
dec
js
test
sbb
arpl
sbb
sub
jl
nop
inc
mov
mov
test
sub
stos
add
xor
add
mov
or
repz
int3
xchg
or
shl
lock
and
mov
lea
cli
xchg
mov
mov
fldt
sub
stos
or
mov
add
cwtl
or
mov
mov
test
lods
loopne
cmp
in
push
dec
out
mov
scas
mov
push
mov
ljmp
mov
xchg
or
pop
sub
testl
xor
cmp
jo
xchg
cmp
outsl
into
sub
inc
stc
sbb
mov
add
loopne
in
inc
adc
mov
into
xlat
xchg
jae
out
mov
push
dec
ss
sub
dec
xchg
stc
popf
adc
int3
movsb
cmp
and
and
js
fs
pop
xchg
cltd
sbb
inc
lret
inc
jne
fldt
dec
je
and
cmp
xchg
cld
loope
jmp
sbb
inc
test
xor
xorb
scas
cmp
push
push
stc
add
movsb
mov
or
dec
jmp
push
pop
dec
mov
ret
mov
pop
pop
jae
jecxz
rcr
insb
leave
sub
lret
bound
and
mov
mov
int3
sbb
mov
sbb
mov
pop
fildl
push
int3
inc
int
mov
stc
scas
or
sub
negb
xlat
repz
pushf
pushf
repz
scas
inc
sub
inc
rorl
fistl
jbe
addr16
out
dec
inc
shlb
xchg
fwait
xor
jne
pop
out
mov
sbb
xor
push
inc
cmpsl
test
xchg
cmpl
in
cmpsl
push
dec
into
jbe
xchg
cmpsl
out
sub
and
jne
fcmovnbe
jge
xchg
cmp
or
lahf
shll
xchg
fscale
mov
mov
pop
in
and
jne
push
mov
test
ret
jo
xor
loop
sbb
mov
cmp
add
out
xchg
mov
test
push
lcall
jno
xor
sbb
call
push
hlt
pushl
jbe
mov
cmp
dec
cmp
or
std
stc
pop
imul
adc
les
test
dec
jbe
sub
cmp
xlat
shrb
fldt
xchg
push
cmp
inc
fdivr
je
jne
pop
ret
push
aas
out
fnstsw
sbb
enter
loope
mov
and
pusha
jmp
inc
xor
popf
jg
out
mov
push
rcl
icebp
pop
pushf
and
mov
sbb
lock
xor
mov
jns
mov
sarb
adc
add
pop
pop
test
rorb
mov
insb
scas
lea
imul
jmp
mov
mov
push
xlat
je
and
gs
pop
test
inc
sti
push
ss
xor
push
and
jmp
sub
ja
adc
mov
cmp
int3
aad
sub
mov
mov
fidivrs
cmc
stc
fldcw
enter
jp
xor
pop
loope
iret
xchg
xchg
xchg
jbe
inc
in
push
mov
push
cmp
jo
and
insl
hlt
orb
adc
xor
fisttpl
xchg
fidivrl
fstps
dec
ficomps
pop
or
popa
aam
inc
dec
ljmp
addr16
xor
sub
inc
stos
test
fwait
cmp
std
callw
dec
adc
pop
push
inc
mov
rcll
stc
mov
dec
cmp
pop
mov
jp
inc
pop
cmpsl
int
or
stc
aaa
sub
out
je
pop
pop
rolb
mov
subl
jnp
cld
cmp
cwtl
xor
rcl
test
xor
dec
fsubrs
pop
xchg
gs
lahf
pop
cmpsl
in
push
dec
and
push
pop
adc
ret
loop
push
mov
sbb
repz
ror
cmc
dec
pop
mov
xchg
cmp
inc
cmp
mov
push
push
or
or
cmp
xor
adc
shrl
jnp
cmp
pop
rcr
sahf
pop
loop
xor
cmp
jge
fs
xorl
xchg
popf
stc
inc
lock
lret
stc
fchs
and
and
add
lods
das
test
repz
in
adc
movsl
adc
std
in
jmp
sub
fstpt
lock
xor
nop
push
fsubl
add
jp
dec
mov
adc
add
add
xor
stos
rcll
lret
xchg
cmpsl
mov
mov
jae
fsubl
test
mov
sti
or
push
push
int3
mov
push
sbb
pop
inc
mov
add
shll
cld
imul
push
stos
jge
and
cs
rcl
cmpsl
push
fsubp
cmp
push
and
mov
cmp
pop
adc
dec
popa
in
or
movsl
pop
cld
mov
iret
cmpsb
cmp
lcall
xchg
cli
cmpsl
ds
mov
xchg
add
and
in
addr16
pushf
jle
fnstcw
adc
sub
adc
adc
mov
push
cwtl
test
mov
push
push
pop
sub
jl
enter
iret
xor
ret
xor
push
je
push
cli
pop
and
xor
jl
inc
dec
js
pushf
mov
dec
je
sub
mov
lea
cmc
sub
and
out
data16
add
outsb
mov
mov
ficompl
inc
mov
sbb
or
cmp
or
jb
cltd
cli
sbb
ret
xchg
pop
sbb
xor
fadds
je
int
movb
jns
aas
xor
rcrb
or
jecxz
cmp
mov
jl
jecxz
dec
dec
dec
sub
push
cld
stos
mov
mov
xor
out
xorb
jle
sarb
sub
sbb
lcall
loope
push
stos
sub
cld
mov
loopne
mov
cmp
push
sbb
mov
adc
mov
push
outsl
sbb
add
fcmovnbe
mov
mov
xlat
mov
imul
rcrb
push
pop
xchg
sub
in
dec
pop
sub
testb
xor
sub
aaa
cs
dec
mov
pop
dec
push
add
mov
repnz
jle
push
jns
imull
lock
je
sub
cmp
pop
in
or
movsl
or
xlat
and
mov
and
push
js
aas
movsb
jae
movsl
mov
into
nop
add
pop
arpl
push
insl
xlat
and
std
xor
cmpsb
jno
fcmovnbe
mov
pop
loopne
imul
cs
mov
or
sar
lret
or
ja
je
imul
test
iret
lds
push
cltd
push
or
push
sbb
inc
or
loop
movsl
cld
gs
ja
mov
jg
xchg
lahf
imul
jnp
fldlg2
jl
lret
and
cmpsl
shrl
fisttpl
push
rorb
fcmovnb
sahf
loopne,pt
inc
stos
adc
mov
int3
stc
jo
lret
sub
nop
push
and
xor
cli
or
mov
jecxz
addr16
mov
jo
adc
cmp
cmp
andb
fidivrs
push
mov
mov
add
sub
nop
mov
pop
fnstenv
sub
cmp
inc
fdivrl
mov
push
or
mov
outsl
sbb
or
fcomi
pop
mov
rcll
mov
out
adc
and
push
adc
loop
lock
popa
stos
mov
clc
in
stc
pop
add
add
fsubp
adc
psrlw
dec
nop
jno
rcrl
push
scas
jp
sarb
inc
cltd
push
mov
sbb
xchg
mov
push
test
flds
je
aam
cmpsb
in
and
dec
les
fildl
dec
dec
dec
ljmp
pop
xor
xchg
icebp
pushf
adc
add
inc
popf
cld
addb
add
pop
mov
cltd
insb
out
test
xchg
and
sbb
stos
in
iret
inc
rcrl
and
pop
add
jl
or
pop
rol
leave
inc
outsb
insb
push
dec
dec
adc
jne
cmp
pop
insl
jne
fnstenv
xor
push
sbb
fld
stos
stos
xchg
test
iret
add
mov
dec
push
dec
jmp
xor
pop
add
imul
lods
imulb
cmp
ja
imul
out
xlat
sub
dec
push
sbb
add
out
fisubrs
sub
cmp
mov
mov
push
movsb
lret
in
out
mov
or
dec
dec
out
push
cmpxchg
rcr
fsts
sub
sbb
sbb
push
fcoms
daa
jns
or
fsts
adc
jno
scas
dec
pop
push
imul
rcr
call
movsl
and
pop
lea
add
outsb
lods
dec
sub
cmpsb
dec
iret
mov
and
insb
mov
fdiv
pop
push
push
xchg
hlt
ss
xlat
imul
movsb
xor
sub
stc
xor
push
fisubl
es
cs
in
iret
mov
fisubrs
fadds
inc
add
and
sahf
sub
fisttpl
inc
pop
dec
push
sbb
mov
xchg
fldcw
sub
popf
jl
or
mov
jmp
push
jecxz
out
pushf
fidivrl
dec
int3
or
jno
pop
fcmovnu
lret
push
push
xchg
daa
jo
cmc
xor
fidivrl
shll
sbb
js
jbe
notb
rcrb
popa
imul
fldt
add
pop
ret
and
pop
jl
fldt
xchg
fcoms
add
aaa
sub
jg
hlt
repz
fcmovb
int3
or
lods
sarb
cmp
ds
negb
fistpl
adc
lret
rcrb
sti
dec
fadds
mov
shl
enter
pop
mov
jmp
rorl
xchg
and
pop
cli
mov
mov
cmp
adc
out
ds
cmp
orb
pop
jmp
and
imul
les
imul
imul
fnstcw
pop
nop
rcll
subl
flds
dec
leave
add
cmp
pop
icebp
cmp
cmp
and
and
nop
pop
out
movsb
pop
jae
js
mov
mov
pop
stc
xlat
mov
fidivl
jo
sti
push
pop
cmc
sub
imul
cmp
add
xor
icebp
jp
ret
mov
add
xlat
movsb
orl
jl
popa
les
imul
or
or
fcmovnu
xchg
mov
shll
sub
notl
xchg
mov
in
jne
jge
sbb
insl
pop
adc
adc
iret
addr16
cmp
fsts
shrl
insl
std
and
inc
push
imul
push
lret
sbbl
pop
dec
xlat
mov
jb
push
dec
dec
mov
xor
and
dec
rorb
inc
mov
dec
or
inc
sbb
call
lahf
xor
push
pop
out
shrb
fstpt
and
ljmp
push
or
and
xchg
inc
fcomi
pop
sub
mov
mov
sub
xlat
xchg
mov
fldcw
xorb
stos
xchg
aad
inc
mov
cli
jp
repnz
or
adc
xor
mov
sbb
add
pop
dec
pushf
daa
in
test
aam
and
lea
fisttpl
mov
fdivrp
or
dec
mov
push
into
push
cmpb
jns
or
pop
add
lods
in
inc
js
pushf
fbstp
mov
cmp
imul
and
sub
mov
cmp
inc
xor
cmpl
pop
mov
test
adc
cmp
stc
aaa
cmp
add
jne
xchg
mov
push
xchg
sahf
imul
xchg
movsb
xchg
adc
sbb
jns
loopne
lret
mov
fwait
sbb
out
sbbb
aaa
std
jle
daa
jl
data16
push
sub
pop
jp
dec
mov
mov
jne
std
and
cli
mov
ljmp
test
mov
dec
add
in
push
jl
arpl
mov
jp
hlt
pop
idivl
xchg
jl
dec
add
nop
or
pop
es
fisttpl
out
pop
hlt
xor
aam
or
cli
cld
cld
sub
add
int3
xor
repz
dec
out
adc
out
jp
insb
mov
data16
adc
fmull
fs
and
push
and
loope
fsts
mov
clc
jp
ret
imul
in
push
dec
pop
and
cmp
shr
leave
imul
mov
fwait
enter
mov
dec
push
sbb
xlat
arpl
and
loope
jae
sub
pop
mov
bound
mov
or
nop
pop
push
or
ljmp
out
cmp
pop
cld
xor
ret
and
pop
and
gs
dec
loope
fistps
stc
loopne
adc
jnp
js
fldenv
add
dec
lret
mov
ds
mov
shrb
dec
xchg
mov
cmp
mov
fcmovnb
sub
sub
cltd
pop
mov
in
jecxz
in
jle
add
fcoms
jae
subb
dec
jbe
and
jnp
cmp
jmp
jns
jno
add
stc
inc
fisttpl
cmpsl
test
and
test
inc
lds
int
pop
push
add
pop
cmpsb
ljmp
jbe
rcrl
loope
mov
mov
cs
pushf
shl
aaa
cmpb
stc
xchg
cwtl
jno
jae
sub
loope
enter
pop
dec
sub
idivl
pop
push
xchg
xor
mov
les
rorb
test
pop
jmp
cs
stc
ret
in
xlat
pop
scas
test
and
dec
push
scas
mov
xor
imul
call
scas
push
jns
sbb
sub
fldt
adcb
cmp
mov
pop
inc
lret
sbb
call
jmp
nop
add
xor
outsl
inc
cld
pushf
jecxz
and
aaa
add
add
ss
leave
mov
aaa
movd
xchg
and
jae
or
pop
repnz
repnz
daa
xor
xchg
add
inc
and
mov
push
dec
movsb
ficomps
adc
mov
add
add
dec
pop
mov
push
and
dec
dec
push
cs
out
fwait
pop
mov
iret
xor
and
mov
pop
sbb
shrb
dec
les
pushf
shll
inc
cmp
loopne
inc
adc
fistpl
sbb
mov
lock
stc
jg
in
arpl
xchg
lea
or
lcall
fbstp
add
pop
mov
mov
aam
outsl
mov
imul
push
out
test
or
iret
jecxz
sub
xor
or
in
or
fistl
imul
sub
xor
std
aas
hlt
je
les
pop
std
xchg
mov
sbb
sbb
mov
or
fdivr
push
lods
inc
push
enter
fldenv
fbld
ss
out
push
cmc
and
xchg
or
sub
rcrl
or
cwtl
test
aaa
pop
shlb
push
cmc
xchg
fistpl
sub
pop
aaa
pop
adc
icebp
imul
mov
mov
leave
sbb
orb
scas
sub
push
int3
and
mov
pusha
sbb
out
movsl
lret
jp
sbb
sub
test
pop
cmp
fdivl
and
fsubl
out
and
cmp
jne
out
movsl
das
pushf
loop
cmp
gs
xor
and
je
sub
jge
mov
pop
xchg
addr16
mov
xor
push
push
cs
pop
lds
dec
stc
pushf
sahf
fstpt
inc
fsubr
pop
push
mov
pop
std
cmp
jnp
sub
into
inc
jbe
inc
out
mov
mov
test
cmp
int
push
jge
outsb
inc
add
das
enter
or
enter
push
addl
adc
xor
clc
cmpsb
lcall
jb
subl
out
add
fwait
jne
dec
dec
daa
push
mov
add
dec
jae
cmpsl
pop
push
adc
push
test
icebp
jge
test
or
outsl
push
fstpl
inc
loope
cmp
sub
xchg
pop
arpl
inc
pop
pop
or
xchg
pop
xchg
cltd
jns
xchg
dec
inc
cmp
fimuls
jmp
inc
jno
sub
pop
jmp
nop
and
andl
jg
push
pop
jmp
fidivs
pop
jmp
sbb
cmpb
jae
and
pop
mov
cmpsb
inc
xorl
jno
cld
xchg
mov
lock
mov
lret
subl
fistps
or
dec
adc
xlat
jmp
pushf
icebp
add
inc
cmpsb
pop
fistpl
xor
or
jno
cltd
jbe
xchg
lock
int3
dec
test
ja
stos
aaa
je
lea
lock
dec
movsb
sbb
dec
lahf
jb
add
push
mov
addr16
add
mulb
or
inc
lret
test
imul
cmp
xor
movsb
cmp
sub
push
mov
hlt
scas
jbe
ss
test
ret
mov
dec
int3
dec
cmp
add
and
mov
xchg
inc
stos
cmc
jnp
sbb
mov
addr16
out
inc
js
addr16
xchg
out
outsb
dec
ds
jl
xchg
insb
mov
cld
jno
stc
in
sub
sti
and
jp
arpl
or
or
mov
and
or
xchg
or
movsl
adc
nop
jle
bound
jne
pop
inc
fadds
pop
xchg
scas
dec
mov
pop
shrd
out
mov
dec
pop
dec
rorl
sub
in
push
roll
xchg
and
jns
cwtl
pop
scas
outsb
and
ret
repnz
jbe
xor
cmc
enter
mov
mov
jp
fcmovu
add
mov
add
and
in
adcl
add
or
fstpt
rcll
sub
aas
dec
aam
fildl
arpl
pavgb
fsubrl
jns
loop
insl
xor
popa
push
push
inc
xlat
jl
decl
fsubp
jb
add
mov
aam
xor
mov
pop
xchg
fistl
pop
sub
popf
pushf
cmpsb
xlat
loop
push
inc
or
mov
mov
rcrb
sahf
and
stc
fistpl
imul
cmpsb
shl
shll
pop
aam
stos
stos
loopne
cltd
pop
cmpl
aaa
sbb
and
cld
dec
push
cmp
movb
pop
and
popf
jmp
pusha
scas
ret
cmp
iret
adc
or
mov
xchg
push
mov
jge
andl
jl
add
je
push
push
dec
out
stc
or
mov
mov
ret
lods
lahf
push
cli
pop
outsb
adc
addl
sbb
xlat
shrb
cltd
loopne
jl
adc
das
dec
dec
sbb
outsl
xor
jmp
adc
adc
jp
std
insb
mov
rorl
cmc
pusha
int
ljmp
mov
sahf
dec
ja
and
stc
sahf
bound
imul
dec
rolb
pop
cmp
std
mov
xchg
adc
mov
push
adc
clc
cmpsl
int
fisubl
pop
cwtl
dec
stc
sbb
test
call
jno
loop
pop
test
pop
push
je
ret
js
testl
jbe
fsubr
jle
mov
stc
jne
lods
mov
jle
mov
or
ja
push
sbb
fmull
lea
lods
sub
scas
insb
mov
xchg
jmp
cli
cmpsl
stc
mov
jns
jmp
mov
popl
or
imul
jns
idivl
out
movsl
jno
push
adc
stc
mov
test
insl
fstpt
aaa
out
adc
int
push
loope
pop
or
add
cmp
cmp
insb
cwtl
enter
mov
aaa
incb
and
mov
or
daa
mov
xchg
ja
sub
jmp
mov
popf
cmp
cli
sbb
ss
mov
mov
iret
jge
mov
out
cmpsb
or
bound
xchg
pushf
enter
jae
insb
mov
aas
xchg
imul
or
jbe
and
mov
pop
xor
shl
adc
sub
fadd
dec
and
jecxz
shll
outsl
pop
fs
sub
push
sbb
push
es
and
test
sbb
xor
dec
xor
lahf
pop
sub
cmp
push
fistl
adc
and
mov
xchg
pop
out
xor
dec
cmp
and
out
dec
adcb
dec
lods
xchg
and
hlt
mull
daa
test
aad
ljmp
ficomps
cld
lret
dec
insb
push
mov
push
pinsrw
sbbl
movsl
and
decl
sbb
sub
xorb
xchg
push
data16
gs
sti
xlat
ret
inc
add
mov
push
lret
push
stos
adc
fsubrl
es
and
mov
dec
andl
cwtl
ficoms
sub
addb
jmp
and
scas
in
icebp
movsl
add
push
mov
or
movl
arpl
iret
push
push
nop
jbe
cwtl
jl
test
add
dec
mov
pushl
xchg
and
sub
adc
pop
mov
dec
addr16
pop
fdivs
sbb
ret
test
nop
cli
or
icebp
dec
add
imul
out
jne
dec
xlat
stos
movb
push
mov
lcall
xrelease
std
int3
mov
imul
xchg
nop
imul
add
sub
ds
fsubl
popa
dec
aam
mov
test
cmp
jb
fisubl
cmpsl
ja
push
fldt
push
push
mov
imul
adc
call
xor
arpl
and
pop
xor
cmp
outsb
je
hlt
jle
orps
dec
ds
ja
lds
inc
lcall
ljmp
jg
gs
mov
xchg
pop
cmc
pop
add
jmp
lcall
stc
sub
in
jo
jg
loope
lcall
or
cltd
dec
fidivl
and
ja
sub
cmpsl
sbb
sub
mov
mov
leave
pop
cmp
hlt
mov
inc
ret
pop
fstpt
dec
inc
idiv
dec
mov
xor
dec
inc
mov
mov
das
sub
cmp
xchg
xlat
pop
pop
mov
movsb
cmp
inc
mov
push
or
push
hlt
or
fiaddl
jg
mov
call
mov
pushf
enter
sub
dec
insl
inc
adc
icebp
or
xchg
cmp
jecxz
or
ds
cmp
mov
push
xlat
das
push
jae
lahf
push
or
xchg
xchg
push
test
xchg
cwtl
mov
mov
cmp
cmpsb
arpl
test
insb
std
in
dec
dec
ja
pop
add
imul
push
loope
jmp
loop
cli
dec
ret
repnz
mov
in
or
push
push
add
and
dec
or
jge
mov
and
repz
and
fwait
lods
add
dec
dec
fistl
sti
sub
inc
push
lret
xorl
add
in
mov
push
sub
cld
push
jg
pop
jg
push
pushf
sar
xchg
adc
jp
add
fdivrs
xchg
sbb
pop
sub
mov
ret
jbe
cmp
mov
decb
mov
mov
push
or
mov
loopne
mov
fnstcw
jge
sub
inc
arpl
out
sbb
xor
es
push
jg
cmp
rorb
mov
pushf
sub
mov
push
xchg
pushf
pop
xchg
adc
nop
mov
xor
sarb
mov
push
push
in
cmpsl
scas
pop
mov
imul
jmp
cmp
add
fdivs
scas
fcmovnbe
sbb
sahf
sbb
cmpsl
pusha
jp
aam
xorb
int3
pop
jmp
inc
daa
jno
pop
cli
push
inc
pop
data16
add
mov
xor
pop
push
sbb
push
adc
lret
fstpt
dec
nop
sbb
mov
xlat
in
jge
rcll
mov
add
outsl
adc
cmp
shlb
pusha
insl
mov
dec
inc
loopne
push
out
out
subl
loopne
dec
pop
sbb
pop
enter
mov
dec
push
push
cmp
pop
daa
adc
jbe
and
sbb
or
dec
lret
or
lds
repz
imul
jns
scas
lcall
arpl
or
pop
hlt
pop
dec
iret
add
rcl
out
adc
pop
cmpl
xchg
imul
mov
push
xlat
pusha
daa
sub
dec
jno
lods
adcb
mov
xor
dec
addr16
jecxz
lods
test
aad
sub
aam
adc
add
dec
adc
out
das
std
ja
aaa
mov
xchg
mov
xchg
jo
sahf
cmc
aaa
jb
adc
leave
xchg
out
lds
xchg
fdivrl
xlat
sbbl
andl
add
jge
add
das
loop
jnp
mov
mov
adc
mov
jl
popf
into
xlat
add
stc
mov
cmp
fldenv
cltd
or
mov
jnp
mov
push
popa
cmp
xlat
push
adc
cmc
push
aam
ret
int
fcmovu
sbb
out
pop
repz
insb
test
xchg
inc
aad
sub
xchg
movsl
addr16
scas
xlat
out
repnz
jecxz
pop
test
mov
call
jno
outsb
addl
push
repz
pop
movsl
fsts
mov
sbb
cmovle
lods
cmpsb
ficoms
push
fdivr
cmp
push
aam
jle
pusha
ss
shll
xchg
loope
pop
fnstcw
adc
aam
std
jecxz
rorl
les
shr
call
cmp
clc
pop
je
andl
sub
ss
push
push
lahf
pop
and
subb
fldt
rcrb
lahf
mov
xchg
sbb
gs
dec
cmpsl
bswap
jge
and
or
rclb
shlb
adc
insb
jp
xchg
sbb
mov
dec
sbbb
dec
and
inc
lret
push
sbb
and
jmp
jo
stos
sti
shr
mov
outsb
xorl
fcmove
cmp
data16
jb
fistl
imul
sarb
test
hlt
sbb
arpl
mov
xchg
xlat
leave
ljmp
int3
test
push
and
xlat
clc
cs
pop
lds
jno
lods
push
jmp
cmp
sbbb
out
cltd
adc
sub
mov
cmp
jne
cld
jbe
xor
loop
push
adc
fs
lds
cmp
xchg
xor
and
sbb
xor
mov
fimull
mov
fadds
in
and
out
sbb
shlb
dec
push
cmpb
test
pop
insb
lret
pop
pop
dec
pop
sub
fstpt
fstl
loope
sub
pop
sbb
orb
xlat
push
dec
sbb
jb
add
xchg
push
in
ret
mov
mov
and
xlat
in
jg
and
xchg
push
aas
pushf
shrb
out
xor
mov
fistl
pop
mov
push
and
scas
insb
ljmp
bound
dec
es
cmc
ds
shrb
loope
loopne
and
ret
push
inc
inc
xchg
mov
mov
mov
cmp
iret
xlat
or
bound
lret
loop
pusha
cmpsb
or
stc
sbb
pop
in
xchg
fnstenv
mov
lods
pushf
addr16
test
call
aad
mov
fdivrl
xlat
mov
ljmp
cmpsl
push
subb
popa
ret
cltd
jg
dec
mov
lahf
inc
or
sub
add
cwtl
insb
add
dec
sub
add
mov
cmp
sahf
hlt
mov
xlat
cmp
shlb
cmp
popf
fstps
push
jb
mov
add
mov
sub
ret
mov
push
jp
std
dec
jnp
xor
push
outsl
adc
add
inc
mov
dec
es
mov
int3
xor
xor
pop
sub
dec
dec
dec
cli
fsts
xor
mov
fisubrs
dec
or
dec
pop
pop
xchg
dec
mov
cmp
notb
cmp
sub
push
push
out
ja
insb
mov
lcall
adc
aaa
mov
call
mov
test
mov
sbb
enter
inc
jno
mov
jno
cwtl
and
add
dec
and
cmpl
mov
pop
test
addr16
pusha
mov
lret
out
inc
shr
cmpsb
out
outsl
lahf
loope
sbb
push
dec
std
leave
or
cmpsb
dec
dec
dec
mov
in
sub
loop
jl
clc
std
test
pushf
icebp
push
sbb
les
hlt
fwait
call
insb
pop
push
stos
pop
mov
jge
push
mov
icebp
je
jl
add
jne
sahf
sbb
cmp
pop
ja
fistpll
fwait
les
test
xor
arpl
push
int3
cs
xor
and
push
test
pop
cltd
aas
xchg
add
mov
fcompl
testb
xor
adc
int
xor
fsub
or
adc
pop
lea
leave
rorl
add
or
out
pop
lret
fadd
jbe
mov
xor
xor
sub
sbb
mov
inc
cli
iret
sub
jne
pop
mov
shl
or
mov
push
fidivl
xlat
mov
mov
and
mov
mov
push
add
jl
cmpb
pop
mov
mov
push
iret
add
ja
test
stc
mov
pop
xor
imul
imul
mov
cmp
in
push
jns
iret
subl
rcrl
sbb
loop
pop
test
jb
cmp
mov
inc
es
cli
pop
and
jo
call
fwait
push
pop
or
mov
fildl
lods
dec
mov
pop
jno
cmp
rorb
mov
cs
inc
ss
mov
xchg
xor
stc
pop
mov
push
ret
inc
aaa
jno
stos
movsb
jbe
cmp
imul
test
gs
push
sbb
push
dec
inc
jae
roll
xchg
xor
outsl
and
nop
test
daa
leave
scas
jle
xor
daa
cmp
insb
xlat
fs
push
pushf
enter
lea
pop
popf
data16
mov
add
sub
dec
xchg
adc
jns
lahf
dec
jecxz
shlb
cs
lock
arpl
jp
jae
or
fisttpl
pop
fiaddl
sub
add
fcomps
pop
mov
mov
or
push
inc
sub
jp
fnstenv
xor
xchg
adc
js
fnsave
sbbl
xor
add
sub
or
int3
insb
arpl
out
push
dec
mov
or
fs
or
fidivl
jge
ljmp
sub
test
cs
shll
push
xor
pop
aaa
add
adc
jno
cld
add
scas
imul
cmp
pop
inc
xchg
jno
cmp
jmp
pop
call
pop
and
inc
and
cmp
push
xchg
jmp
ret
xrelease
pop
jmp
cltd
sub
mov
pop
mov
cmp
xor
cmpsb
call
repnz
pop
xchg
mov
cmp
sahf
jmp
lret
mov
xlat
jae
out
cmp
loopne
dec
cmp
and
into
ja
and
sub
jle
jns
and
movb
xchg
xchg
mov
outsl
aaa
and
cmp
in
adc
push
push
stos
xlat
lods
fwait
cmp
inc
xor
add
or
arpl
add
push
cmp
dec
aaa
sbb
xlat
aaa
jns
push
test
adc
cmp
nop
push
xlat
sti
pop
lock
pop
das
nop
cld
repnz
ss
adc
xchg
dec
nop
dec
xchg
sbb
pop
push
jo
fnstenv
dec
cmp
aas
fldt
cmp
inc
es
sub
and
sahf
pushl
popa
lcall
cwtl
jne
sub
sbb
stc
jmp
psraw
rorl
sub
addr16
ret
cmp
lods
cld
je
jmp
aas
push
lcall
sar
outsl
fists
push
pop
std
in
repz
icebp
xchg
dec
mov
lds
pusha
lret
loopne
mov
push
nop
mov
mov
fnclex
daa
aas
mov
sti
stos
inc
out
push
shll
test
fsubl
add
ficompl
fsubp
adc
and
xchg
ljmp
inc
aas
sti
out
and
cmp
or
mov
xchg
fcoms
add
scas
push
adc
jp
mov
sbb
cmpsb
not
or
and
insl
xchg
test
stc
pop
nop
cmp
popf
sbb
pop
into
lcall
mov
popa
fdivrp
push
ds
xlat
mov
cmp
push
add
iret
push
push
cli
mov
lods
mov
cmp
pop
stos
xchg
lea
mov
bound
pop
repz
adc
icebp
cltd
inc
pop
out
xor
dec
lods
popf
jns
fldenv
pop
fcoml
adcb
mov
out
add
dec
pop
test
jge
out
push
scas
clc
enter
pop
pusha
pop
loopw
je
push
push
mov
fidivs
sbb
mov
cmc
lds
mov
ja
or
mov
out
scas
imul
testb
out
cmp
aas
daa
data16
cs
outsl
es
push
and
call
iret
push
lahf
pop
mov
add
in
pop
das
out
cmp
xor
gs
in
arpl
rcrb
push
lods
add
xchg
sub
xchg
dec
inc
pop
test
adc
jo
fyl2xp1
or
fisubrs
out
outsl
scas
pop
push
or
xor
std
sub
adc
stc
out
out
adc
push
stos
mov
and
outsb
jecxz
dec
mov
or
lcall
data16
push
or
inc
mov
and
jp
sub
cmp
or
or
push
loop
popa
and
scas
pop
sbb
rcll
imul
fs
mov
out
scas
sahf
dec
lcall
mov
outsb
ficoml
pop
nop
dec
scas
dec
insl
filds
dec
pop
les
inc
pop
test
push
sbb
in
sbb
enter
repz
iret
imul
mov
outsl
or
pop
cmc
cwtl
loope
fisubrl
mov
stos
je
cld
xor
cwtl
cli
jae
or
movsb
ja
or
je
les
adc
popf
mov
jmp
lds
inc
js
fildl
cmp
jno
loop
leave
pop
bound
cmp
mov
and
mov
sti
inc
xchg
and
movsl
cmpl
jns
inc
pusha
ficoms
mov
repz
js
pop
pop
cmp
pop
loope
xor
sub
test
cs
xchg
xor
lcall
insb
pushf
sbb
xchg
lods
inc
xchg
stos
cmc
fcomi
out
xor
pushl
cmpsb
mov
cmp
xlat
pusha
adc
iret
nop
stc
sbb
fnstenv
jno
popf
push
pop
shll
push
imul
in
push
in
push
adc
xor
fcomi
insb
dec
adc
xor
les
jg
subb
xchg
sub
mov
lret
jp
xlat
mov
call
pop
addr16
jp
hlt
popf
xchg
mov
gs
mov
push
jns
xor
dec
aaa
fwait
lret
push
mov
cmp
mov
push
cmp
jl
sbb
cmp
outsl
std
or
ret
pop
movsl
or
call
sbb
test
xchg
sbb
repnz
xor
fnstcw
mov
pop
jb
cmpsl
pop
jb
pop
push
jge
lcall
cmp
roll
ljmp
mov
push
push
xchg
stos
dec
add
adc
xor
or
push
imul
loop
fcoms
or
sub
cltd
dec
xlat
adc
stos
mov
mov
push
inc
nop
fbstp
shl
lock
sti
cmc
lock
test
mov
mov
fwait
cld
add
imul
pop
int
push
ja
or
or
cmp
popa
js
test
test
imul
popa
inc
lds
sub
fldt
mov
loop
sbb
ja
jl
adc
es
cs
dec
arpl
out
mov
aaa
cli
shll
pop
jmp
loopne
icebp
or
jnp
cwtl
inc
ds
and
fsubs
xor
movb
jmp
rcll
jbe
fwait
lds
dec
je
js
inc
mov
jmp
int
cmpsl
add
push
and
add
jp
cmp
dec
lahf
pop
ljmp
xlat
hlt
dec
jae
fs
adc
out
adcb
jmp
std
push
xlat
jge
pop
add
or
out
shlb
dec
icebp
mov
int3
aaa
push
lret
cmpsl
cmc
xorb
cwtl
jnp
cmp
mov
std
sub
test
add
test
cmpsb
push
inc
add
clc
adc
mov
push
or
jbe
dec
andl
xlat
push
popf
jle
or
shll
xor
fstpl
int3
in
daa
xor
jb
sub
mov
or
xor
pop
push
loop
in
sub
mov
xchg
sbb
push
bnd
imul
test
cmp
loopne
or
xor
xlat
dec
jns
sbb
or
jle
lods
sbb
stos
xor
jg
mov
aad
cmc
cmp
pop
pop
add
xor
int
sub
jbe
add
pop
mov
sub
ljmp
pop
fs
or
arpl
xlat
fmul
dec
pop
cmp
fistl
push
cli
iret
lahf
fldt
fwait
stos
insb
push
jo
mov
push
sti
sbb
adcb
ror
cltd
adc
jp
fistpll
in
cld
sbb
sub
cwtl
mov
mov
add
mov
cmpsb
cwtl
orl
sub
fs
hlt
xlat
inc
movb
cmp
iret
sbb
js
cld
cmp
mov
mov
push
xlat
dec
fwait
add
adc
rcll
or
fsubrp
imul
cmpsb
fidivs
and
mov
jne
inc
cwtl
rcrl
mov
push
mov
inc
pop
xchg
dec
push
cmp
and
std
fbstp
cmp
jle
enter
shlb
and
cmp
test
jnp
pop
data16
dec
pushf
mov
inc
lahf
jp
imul
sub
fld
or
inc
fistl
push
fdivl
addb
push
xlat
sub
mov
imul
push
imul
jmp
cmp
push
xor
icebp
movsb
roll
icebp
out
sbb
shrl
mov
jne
cmp
pop
stos
dec
ja
sbb
jle,pn
pop
xor
inc
sub
add
push
dec
sub
lcall
pop
insb
loop
mov
bound
jl
idivl
xchg
imul
pop
push
push
cmp
mov
pop
add
and
mov
ja
add
pop
shll
iret
mov
xor
and
fld1
mov
pop
ficompl
jae
xlat
aaa
inc
sub
adc
test
and
jno
cmp
testb
pop
inc
imul
loop
outsl
pop
jno
cmpsl
lock
sbb
and
xchg
push
mov
aad
addr16
sub
cmp
call
out
jae
fnstenv
rclb
lret
mov
jl
or
cwtl
adcl
outsb
cmc
xchg
jno
imul
xchg
aad
mov
push
test
mov
mov
jnp
push
sub
pop
dec
adc
jge
fidivrs
pop
clc
xor
mov
subb
cli
mov
les
and
jp
fcompl
js,pn
cmp
inc
mov
push
test
jno
mov
pop
inc
imul
je
cmp
ror
stos
mov
jge
pop
nop
cmp
loop
shrb
jne
out
cmp
pop
ja
jb
xor
aaa
sub
lret
mov
aas
pop
pop
sbb
mov
imul
add
das
or
in
ret
sub
out
fs
jp
sbb
imul
daa
mov
gs
cmp
mov
fisttpl
or
mov
xchg
sub
pop
pusha
and
push
repz
sub
add
xor
lret
fs
test
lret
pop
fbld
adc
lahf
add
loope
bnd
push
pop
jae
cs
in
xchg
mov
outsl
pop
mov
add
cmpsb
ret
xchg
sbb
and
pop
ret
pushf
es
and
int3
adc
mov
sbbl
xchg
or
xlat
inc
hlt
pop
lcall
mov
pop
sbb
cmp
inc
sub
lret
lret
push
sbb
push
inc
jmp
pop
or
iret
aas
clc
push
fdivp
outsl
add
dec
sbb
xchg
shrb
lea
or
les
pop
roll
cmp
cli
mov
mov
add
xlat
pop
xchg
xlat
mov
or
xor
jecxz
repz
pop
in
mov
xchg
call
mov
dec
add
xlat
ja
dec
xchg
xlat
stos
jecxz
shll
inc
call
jo
sbb
stos
mov
dec
inc
lds
es
cmp
imul
cs
dec
inc
sub
jae
movsl
cld
sbb
push
sbbl
mov
mov
popa
leave
mov
dec
push
add
dec
das
test
out
enter
cmp
xlat
xchg
add
push
leave
sub
mov
mov
mov
insb
dec
repz
or
fistpl
jecxz
mov
lret
or
sub
scas
jo
fs
xor
jmp
sbb
mov
inc
lods
add
pop
outsb
fsts
pushf
je
xchg
cmp
lret
push
push
mov
shlb
hlt
mov
dec
fildl
daa
lock
push
enter
pop
inc
xlat
outsl
cmp
and
aaa
push
cs
and
xchg
pop
vxorpd
test
adc
shrl
xorb
cmp
jecxz
xchg
cmp
lods
fcmovu
mov
cmp
xchg
fists
jmp
aaa
movb
jp
into
cli
sarb
cli
push
xchg
xlat
sbb
adc
vcomisd
add
pop
into
push
shl
dec
jmp
pop
sti
pmovmskb
pushf
ja
xor
dec
into
sub
cmp
iret
dec
enter
mov
xor
inc
lahf
push
xor
jecxz
shr
xchg
mov
bound
jne
popa
mov
mov
and
adc
rol
add
aad
add
and
ljmp
add
stc
clc
repz
add
movsb
adc
jo
sbb
dec
fnstenv
arpl
clc
push
adc
dec
addr16
cli
xor
mov
and
pop
add
mov
cli
fdiv
js
cld
jg
push
test
bound
movsb
outsb
test
popa
sub
and
xchg
lea
xchg
add
sub
mov
mov
fmull
mov
pop
sbb
mov
mov
cmc
nop
aam
into
mov
imul
xor
push
and
fxch
dec
enter
cmpsl
add
fisubl
mov
pop
jbe
adc
xlat
fsubl
dec
ficoml
ja
test
aas
fs
pop
inc
mov
inc
fcompl
pop
dec
push
sbb
cli
ds
or
cmp
push
xor
rorb
adc
sbb
pshufw
dec
popa
pop
adc
xchg
das
inc
pop
addr16
cld
cmp
jle
insl
pop
sbb
mov
cmc
jb
insl
fistl
stc
clc
mov
addl
xor
xor
fstps
std
and
xchg
mov
test
test
lahf
xlat
xchg
inc
xchg
pop
or
add
ret
imul
push
fnstcw
and
push
stc
int3
in
xlat
rcrl
cltd
push
and
in
daa
pop
mov
jmp
pushf
pop
jecxz
lret
mov
push
dec
nop
inc
sub
fldt
jl
cwtl
or
addr16
out
fs
popa
sub
loop
cmp
or
or
fidivrs
loope
ljmp
jbe
xlat
loopne
jae
pop
jecxz
mov
and
test
xor
imul
stos
dec
jge
lar
pop
dec
xchg
or
out
mov
xlat
push
stc
pusha
jl
sbb
dec
fcomps
xor
mov
loope
mov
cmc
xor
mov
sahf
cmp
scas
xchg
cmp
adc
xchg
adc
dec
jnp
pop
jns
mov
lret
jmp
xlat
lods
into
in
out
sar
outsb
jae
add
jno
or
std
adc
cmp
mov
rcrl
jbe
movsl
sbb
jns
repnz
ret
popa
divb
dec
aam
mov
and
mov
aad
mov
xlat
cmpsl
mulb
aam
and
xor
dec
arpl
insb
insb
mov
or
mov
outsl
dec
inc
pusha
jns
fsts
cwtd
nop
shrl
push
jns
dec
cld
aas
fldcw
cltd
sti
and
mov
cmc
or
push
arpl
xor
cmp
pop
mov
stos
mov
lods
dec
daa
mov
inc
cmpsl
pop
mov
or
or
int
out
xchg
out
mov
loope
pop
add
xlat
ljmp
popa
mov
jae
add
sbb
jl
xlat
mov
mov
inc
adcb
or
and
rolb
or
push
mov
jns
jb
jnp
push
xchg
ss
call
add
les
int3
mov
inc
gs
mov
rclb
push
leave
adc
sub
movsl
xchg
adc
jl
jbe
xlat
mov
rclb
enter
insb
dec
popa
repz
mov
cmc
jb
jns
sbbb
jg
fidivrs
push
js
xor
stos
sub
and
push
xor
xchg
pop
in
dec
insl
jge,pn
mov
jg
dec
imul
jo
push
test
jl
jmp
outsb
pop
push
xlat
dec
add
push
xor
dec
out
notb
pop
sub
pop
fucomi
or
stc
aas
fsubl
push
cld
movsb
jmp
jbe
xor
mov
pop
sbb
int3
test
stos
inc
ret
lock
push
leave
dec
loope
fsubrl
dec
js
loopne
cmpsb
mov
rolb
roll
adc
mov
push
cli
ss
int
xlat
adc
cs
stc
add
dec
jp
cli
adcb
aaa
lahf
je
out
cmp
cltd
imul
scas
lods
cld
stc
add
sub
mov
xor
into
in
or
jmp
mov
push
outsb
fs
xor
push
xchg
mov
iret
lret
and
cli
jl
push
fwait
inc
call
xchg
pop
stc
out
cmp
inc
pushf
push
push
mov
push
pop
mov
dec
ret
dec
popl
push
fcmovb
dec
fmul
sbb
dec
fs
cmp
ljmp
mov
mov
popa
or
in
or
mov
int
fistps
iret
sub
or
cmc
sbb
fldcw
push
xor
fadds
inc
jge
ljmp
insb
outsl
xchg
pop
mov
pusha
mov
or
or
or
or
sub
jl
imul
fs
fistps
js
mov
outsl
xchg
xor
pop
ffreep
insb
pop
ss
sub
and
addr16
rcl
nop
pop
daa
jge
adcl
xchg
cmpsb
int3
xor
and
cmp
mov
ss
xor
andl
movsl
add
cmp
push
xor
and
xor
push
mov
and
push
aam
repz
pop
je
xor
cmp
in
gs
and
fcompl
or
cwtl
and
mov
pop
mov
jg
subl
jae
xor
fsubl
add
cmp
xor
push
popa
inc
xor
subb
rcrl
dec
jne
cmp
xchg
mov
aaa
ja
dec
push
stc
sub
faddl
jle
aaa
outsb
rol
lods
hlt
ljmp
mov
fistpl
and
jnp
test
add
stc
push
in
daa
jecxz
dec
fcmovu
and
jbe
cmp
scas
out
dec
xlat
sub
sub
add
inc
push
enter
sub
sub
push
sbb
push
lea
insb
and
and
push
les
lcall
imul
andb
inc
aad
jae
enter
fidivs
jge
outsl
lcall
arpl
xor
push
fimull
jmp
cmp
movsb
and
outsb
add
imul
mov
mov
sub
dec
mov
push
xor
dec
daa
jns
lea
cmp
cmp
jg
mov
and
pop
cmp
mov
xchg
pop
sbb
add
or
lods
lods
movsb
cmpsb
push
daa
sbb
mov
ljmp
loopne
cmp
dec
add
aam
inc
xlat
sub
loop
xchg
test
bound
std
xor
xor
popf
or
daa
sub
mov
pop
xor
pop
cli
mov
mov
loop
dec
das
or
or
sub
shr
push
pushf
add
sbb
and
mov
lret
jae
mov
dec
testb
xlat
xchg
push
data16
pop
jmp
push
xorb
shll
xchg
fisubl
and
push
lcall
push
jnp
fistl
enter
sbb
push
and
cmp
adc
arpl
loopne
insb
mov
stc
imul
cld
icebp
fnstenv
mov
fisttpl
repz
in
add
jg
outsb
dec
imul
lret
or
out
stc
cld
sbb
cwtl
cli
push
pop
hlt
xorb
ds
in
inc
or
movsb
mov
xor
dec
pop
test
mov
das
or
mov
test
jnp
les
mulb
jns
push
adcb
ret
pop
dec
std
dec
nop
cmc
gs
mov
pop
jo
xor
imull
fmull
sarb
mov
sbb
and
lahf
pop
add
mov
fidivrs
jns
shlb
lret
xorl
test
inc
pop
hlt
lock
or
imul
movsl
dec
in
cli
into
movsb
and
std
jp
pop
popf
scas
add
xchg
or
inc
jecxz
jp
loop
arpl
pop
add
inc
jo
push
jbe
push
sbb
pop
divb
sub
jb
pop
push
dec
pop
push
cs
sub
cld
xchg
sbb
push
repnz
fsubrl
push
pop
xchg
ja
addr16
addb
in
ret
lret
xchg
hlt
sbb
ds
or
test
fcmovnb
in
xchg
insl
push
inc
stc
jg
lcall
dec
and
pop
cld
clc
pop
add
popf
imul
out
mov
jae
fwait
seta
pop
fdivs
inc
cmp
loope
mov
and
in
fildl
dec
movb
jbe
jae
shl
fwait
dec
popa
mov
dec
iret
mov
out
fwait
mov
mov
jb
das
dec
pop
xchg
xlat
xchg
xor
or
test
inc
inc
sbb
imul
iret
in
pop
mov
mov
xchg
imul
lea
pop
decl
or
xlat
push
test
xchg
sbb
pop
mov
leave
shll
pop
and
push
arpl
xchg
push
movsl
push
daa
lcall
je
stc
pushf
mov
mov
push
jnp
cmp
mov
mov
insl
fwait
sti
xor
int3
insb
ret
adc
adc
or
nop
push
cli
add
add
dec
outsl
ret
jecxz
adc
or
adcb
xor
clc
and
movsb
inc
mov
dec
xchg
pop
or
orl
pop
test
repz
xchg
lahf
stos
xchg
sub
push
movsb
and
fstps
mov
es
inc
ret
push
add
or
push
mov
fadds
data16
pop
inc
or
mov
lods
mov
dec
or
jmp
cmp
push
xchg
fcomps
fstps
ficompl
mov
sahf
inc
arpl
pop
sbb
cmp
adc
cmp
fistpl
fisubrs
push
mov
add
jge
inc
lock
xchg
and
fldcw
pop
sbbl
test
push
xor
xor
or
jb
bound
dec
cmp
jne
fistpl
and
xchg
cmpsb
sbb
nop
xchg
push
rcl
and
inc
pop
cmp
addb
popa
dec
mov
pop
mov
pop
lcall
adc
xlat
in
jg
inc
or
movsb
aam
cmpsb
enter
dec
sbb
fs
dec
sub
divb
std
sub
mov
or
repnz
pop
mov
cmp
mov
sbb
dec
jl
add
jae
xchg
add
push
jecxz
push
dec
ficoms
dec
push
je
cmc
mov
addr16
aad
or
test
add
outsl
and
ja
xor
and
das
push
adcb
sti
cmp
push
cli
popa
mov
push
and
call
test
add
push
aam
mov
movsb
iret
test
mov
mov
lret
xorl
out
or
mov
mov
out
bound
dec
mov
mov
in
lods
xor
or
and
std
inc
scas
mov
pop
mov
rcll
jp
inc
push
mov
mov
adc
ficomps
bound
addr16
and
repz
fmull
xlat
jno
sub
inc
jp
fistpl
test
cwtl
sbbb
das
jg
sub
popa
aas
or
fiadds
lret
dec
add
sbb
jp
cmp
iret
popa
xchg
jae
mov
test
fwait
sbb
fstp
xor
fisttpl
popa
imul
faddp
pop
jp
es
mov
hlt
jp
xor
scas
rorb
xor
dec
cli
arpl
sub
push
pop
leave
imul
xor
push
test
or
scas
les
jp
out
sub
ss
push
push
std
mov
pop
imul
int3
mov
jo
adc
ret
nop
mov
je
rcrl
test
sub
mov
repz
pushl
subb
sbbb
dec
dec
inc
jg
test
addr16
cwtl
movsb
mov
dec
lahf
cmc
pop
jmp
nop
cli
addr16
push
movsl
fidivs
out
mov
jl
mov
arpl
mov
sti
inc
add
sbb
outsl
andb
push
xchg
inc
adc
out
loope
dec
cli
xor
mov
dec
sub
xlat
jmp
rorb
fistpll
adc
cmp
xlat
sub
jl
scas
jbe
pushf
pop
ret
dec
mov
je
call
sub
cmpsl
fabs
jge
std
sbb
repnz
mov
insb
dec
adc
jecxz
jp
xlat
sbb
pop
mov
xchg
fnstsw
adc
mov
sub
or
mov
adc
cmc
es
xchg
xorb
xchg
pop
ja
adcl
push
mov
js
mov
mov
icebp
outsb
fldenv
adc
push
dec
addl
out
mov
pusha
push
xor
loop
dec
fdivr
lcall
shrl
push
out
out
fs
xor
or
data16
fdivs
cmp
pusha
cmp
fnstcw
jae
outsl
xlat
jge
jae
shll
adc
rcll
cmpsl
imul
clc
stos
mov
lcall
scas
lret
push
inc
pop
outsl
xchg
pop
pop
rcrb
arpl
jle
adc
adcl
or
push
shl
adc
xor
dec
jae
jecxz
aad
in
adc
movsl
shrl
test
jg
push
jb
xor
mov
mov
inc
dec
xor
enter
add
fnstenv
add
mov
mov
cmp
lock
xlat
bound
mov
mov
loope
popf
into
xor
mov
pop
jbe
xlat
repz
fwait
dec
or
aam
xchg
sahf
shrb
test
lods
jno
cmp
insb
add
jns
cwtl
fldcw
mov
imul
fstpt
into
pop
mov
push
push
mov
scas
aam
jle
mov
mov
out
mov
imul
add
push
pushf
inc
xchg
sub
fimuls
jb
movsl
mov
lds
pushf
dec
mov
daa
mov
sub
jl
xchg
mov
dec
sub
cmp
lret
stc
loop
fiaddl
mov
xor
lret
mov
push
js
lahf
stos
lea
or
push
push
pop
ljmp
aaa
jl
sbb
xchg
mov
add
sub
mov
fwait
orl
xchg
adc
inc
les
adc
cli
stos
dec
add
inc
enter
dec
and
fld
sub
int3
cmc
and
add
and
addr16
loopne
call
pop
and
sbb
push
push
adc
les
xlat
pop
pop
push
mov
xchg
jp
iret
rorl
rolb
popf
scas
arpl
clc
sub
lods
adc
push
aam
push
aaa
negl
cmp
or
shr
fldt
xor
aad
and
scas
js
inc
nop
movsl
sub
dec
mov
adc
out
xor
and
scas
push
mov
cmp
cs
into
nop
ljmp
mov
add
inc
cs
sahf
xchg
stos
fldcw
mov
fs
mov
iret
mov
lods
aas
ret
mov
push
fidivs
lea
fcmovnu
cmp
adc
enter
mov
cmp
fnstenv
pushf
xlat
js
mov
pop
pop
roll
jae
xor
dec
enter
cmp
fldt
pop
sub
push
xor
push
jno
mov
mov
insb
pop
arpl
out
lock
imul
cmp
dec
inc
cmp
and
jne
push
ljmp
or
xchg
or
xchg
mov
inc
xor
inc
mov
into
rclb
pop
mov
imul
and
int3
mov
pop
in
mov
popa
pushf
xlat
adc
nop
push
pop
xchg
dec
test
jg
lods
xlat
sub
inc
sbbb
notb
mov
cmp
movsb
scas
hlt
inc
sbb
jl
inc
sub
push
mov
sbb
mov
pushf
in
sub
flds
pop
insl
mov
out
cmp
movsb
sbb
and
mov
xor
pop
dec
cmc
mov
add
xor
or
call
mov
add
sub
inc
fwait
or
inc
bound
ret
fdivl
jmp
loop
mov
das
xlat
cli
subl
sbb
push
test
bound
xchg
mov
add
xorb
adc
mov
in
inc
sti
stc
fnstenv
into
test
pop
mov
push
out
mov
mov
xlat
fadds
mov
addr16
leave
ja
insb
adc
aad
dec
fldt
dec
stos
repz
pop
mov
sub
ret
jge
leave
jl
fwait
clc
hlt
xchg
jae
cmp
mov
test
sub
test
roll
lahf
and
dec
imul
add
into
jg
shufps
xchg
push
sub
push
jne
int3
add
xor
sbb
stos
imul
sub
arpl
mov
cmc
mov
adc
mov
dec
and
pop
mov
xchg
sbb
mov
jbe
out
xlat
sub
stos
ja
je
add
add
nop
sarb
insb
xlat
lods
mov
ja
and
je
data16
shrb
lock
addl
ljmp
in
mov
ja
aas
addl
dec
add
or
pop
dec
imul
push
xor
dec
lret
xchg
or
aam
clc
cmpl
rcr
rorb
fcmovnu
xor
dec
gs
in
or
addl
std
test
and
dec
test
xor
aam
mov
andps
pushf
jge
out
call
mov
lret
int
mov
sub
rorb
fldt
mov
jo
mov
cmp
inc
sbb
negb
push
mov
jns
push
scas
dec
or
push
jno
lods
pop
jo
jmp
or
pop
and
setp
test
pop
cmp
sti
add
insb
xchg
jmp
push
push
cli
jne
flds
mov
psllw
loope
sbb
cs
push
test
push
imul
jmp
cmp
fiadds
repnz
push
jmp
xor
dec
push
or
sub
mov
sub
cmp
jae
pop
jne
ret
pop
dec
or
sub
add
dec
mov
test
xchg
ret
and
mov
mov
sub
fistl
jp
push
fnstcw
bound
aam
sarb
dec
xlat
pop
loopne
or
cmpsl
stc
ja
dec
or
repz
inc
lcall
cmp
push
imul
out
jns
out
jae
mov
movsl
xchg
mov
hlt
xlat
add
and
xor
pop
sub
adc
ds
sub
xor
out
cli
cmp
cmp
add
dec
fwait
push
cli
sub
ljmp
jmp
xor
adc
ljmp
xor
xchg
and
xchg
jp
roll
add
or
out
adc
ret
lods
xor
idivl
jne
ss
mov
jmp
jne
insl
into
dec
pop
push
leave
and
adc
xor
test
mov
sbb
in
mov
pop
xlat
cltd
adc
mov
ljmp
enter
pop
xor
xor
mov
sub
or
xchg
sub
fnstcw
in
push
add
and
pushf
imul
addr16
sbb
dec
ret
pop
mov
xor
adc
mov
orb
xor
mov
mov
in
fdivrs
push
add
mov
xor
dec
push
adc
das
cli
imul
daa
dec
out
or
push
shll
xchg
fisubl
pop
les
cmp
std
repnz
mov
cli
aaa
add
xor
fildl
in
gs
push
xchg
fmuls
cmpsb
testl
movsb
xchg
fdivrp
insb
rorb
or
xor
fldt
or
fiadds
jne
out
rcr
mov
or
stos
orl
popl
and
mov
and
fmull
xlat
das
jg
outsb
xorl
and
jge
aad
cltd
arpl
negb
add
and
ds
out
enter
cli
push
in
dec
sbb
pusha
mov
cmpsb
push
out
cmp
mov
push
enter
sbb
sbb
cmp
jo
insl
sarl
adc
inc
xchg
inc
and
repz
sub
jo
pop
test
xchg
jbe
shl
sbb
inc
jns
ljmp
imulb
je
push
pushf
daa
cmp
sbb
movsb
stos
addr16
add
jl
cmp
fimull
lods
or
sub
inc
jnp
pusha
cmpsl
dec
mov
fdivrl
jns
insl
jle,pt
movsl
push
mov
pop
sbb
adc
sahf
stos
sbb
mov
push
mov
aaa
lods
adc
fdivs
daa
sub
dec
or
fs
and
ret
xor
mov
sbb
fldenv
xlat
loopne
xor
push
cwtl
adc
jp
push
rcrl
mov
fldenv
sbb
les
shlb
add
addr16
mov
imul
xor
push
mov
xlat
lret
aaa
add
shlb
and
lahf
xor
sbb
sub
sub
cs
dec
mov
outsb
into
ret
out
pop
jecxz
adc
sbb
mov
cmp
dec
dec
test
and
out
sbb
fisttpl
gs
clc
xor
xchg
addl
je
test
in
inc
pop
push
popl
cmc
rcr
ffree
insb
cli
xor
pop
jmp
aas
xor
cmp
dec
lahf
mov
mov
aas
loope
or
cmpb
cmp
popf
mov
cmpsb
rcrl
imul
jae
mov
icebp
test
cmp
addr16
cwtl
test
add
xor
or
cs
or
dec
sub
aad
stc
sbb
sub
push
push
push
test
push
sub
gs
fdivs
imul
or
add
popa
jo
mov
mov
fmulp
mov
mov
pop
lret
std
test
clc
int3
mov
mov
or
jb
aam
xlat
cmpsb
push
das
inc
rcrb
or
jb
test
fwait
mov
adc
push
mov
je
xor
sbb
cwtl
mov
jle
dec
fidivl
xor
or
test
ret
xor
add
dec
addr16
push
pop
push
stos
pop
jae
dec
ret
and
mov
out
negl
mov
add
imul
iret
icebp
or
dec
out
inc
es
je
mov
popa
stc
subl
inc
xor
sub
or
fdivrl
mov
cmp
sbb
ss
jmp
inc
mov
add
or
dec
inc
and
push
mov
js
test
das
inc
push
sub
add
cmpb
sbb
push
popf
dec
pop
mov
cs
xchg
xchg
add
cmpsb
mov
xor
adc
mov
les
xchg
and
sbb
mov
arpl
icebp
add
fildl
dec
lea
das
xor
inc
adc
cwtl
lret
rcrl
cwtl
push
add
std
fstl
push
test
xor
leave
dec
fisttpl
andl
or
pop
stc
pusha
pop
push
popf
bound
push
rclb
xlat
xor
xlat
lret
movsb
subb
jge
dec
rol
add
sbb
pop
testb
xor
das
xlat
xchg
mov
sar
ret
cmpsb
in
cld
add
movsb
sbbb
pop
out
loope
jnp
test
mov
jo
jo
mov
fldenv
xor
fwait
jae
sub
arpl
sub
mov
mov
push
and
mov
cmpsl
dec
daa
dec
pusha
jno
stos
bound
ds
pop
ljmp
jp
mov
test
fs
push
cmc
push
inc
pop
mov
jae
xchg
xchg
call
subl
clc
mov
leave
into
je
bound
cmovg
pop
dec
xchg
cmpsl
jp
icebp
int
subb
orb
jmp
jne
mov
imul
das
fsub
jae
scas
icebp
xor
pop
xchg
lea
jnp
flds
dec
jns
js
pop
pusha
push
out
or
daa
xor
mov
mov
xchg
fstl
outsb
insb
xor
xchg
cmp
cmp
push
jnp
jp
shll
fldt
cld
xchg
pop
mov
jg
sub
inc
hlt
sbb
jbe
cs
scas
cmp
mov
xlat
ljmp
js
int
add
pusha
mov
pop
push
aam
pop
cmc
mov
scas
dec
mov
popf
out
stc
call
push
out
jl
cmpsl
cltd
pop
pop
fdivrl
fcomi
push
fst
mov
aam
cmpsl
sbb
inc
adc
xchg
sub
adc
cs
xor
mov
pop
xor
cmp
push
mov
sahf
arpl
xor
and
mov
push
mov
insb
int3
dec
movsb
mov
stos
aaa
push
test
adc
rclb
sub
xchg
outsl
scas
cmp
sub
mov
pop
mov
push
xlat
mov
xor
cmp
or
adc
inc
push
cmp
stos
xlat
sbb
lods
ja
mov
sbb
outsl
pop
pop
pop
xlat
int3
inc
push
fcmovu
sub
mov
jmp
in
cmp
sub
arpl
sahf
cmp
les
push
iret
mov
outsl
movsb
mov
movsl
sbb
rorb
jle
mov
mov
imul
sub
lret
xchg
add
mov
fld
and
cmp
fistl
dec
sbb
pop
lods
cmp
in
xlat
movsl
mov
stos
sub
bound
repnz
pop
ficompl
add
jns
cmp
js
xor
cs
jle
mov
push
cmp
adc
pushl
mov
or
xchg
stos
add
sub
sbb
and
push
jmp
outsb
int3
mov
and
or
enter
jmp
push
mov
pop
enter
andb
push
std
pop
lds
inc
mov
and
mov
fcom
mov
adc
fs
dec
js
jmp
sbb
mov
call
rcrl
add
fiaddl
mov
or
pop
dec
sbb
xchg
or
aaa
inc
mov
cmp
cmpsb
xlat
push
loop
xor
in
fistl
push
dec
xchg
pop
call
ja
andb
xor
vmwrite
fucomi
lods
movsb
clc
ljmp
subb
add
mov
add
xlat
outsl
popa
push
mov
add
cmp
mov
push
test
popf
adc
pop
adcb
xor
mov
pop
push
jbe
jne
xchg
mov
push
dec
cwtl
cmp
shl
inc
test
jns
cmp
jo
push
pop
xchg
or
fildll
std
arpl
or
sub
subl
push
js
xlat
mov
xor
jl
lock
fs
mov
jl
xor
stc
pop
in
fsubr
lahf
push
xor
ljmp
push
jb
nop
add
les
push
movsl
lret
enter
mov
pop
insl
mov
mov
cmp
pop
sub
mov
jbe
pop
dec
stos
icebp
fsubp
insl
mov
push
sub
fs
xorl
xor
lret
inc
fimuls
lret
xor
cmp
shll
insb
or
cmp
fsubrs
imul
outsb
jnp
dec
mov
mov
sub
push
xor
dec
nopl
xor
in
shlb
and
xchg
inc
xchg
ud2
into
lock
inc
cmp
imul
inc
sub
mov
std
mov
out
lcall
xchg
leave
ja
pop
js
sub
addr16
jne
add
mov
in
cli
mov
xor
aad
fidivs
mov
fs
test
pop
and
jp
lahf
cmp
pusha
fildl
dec
fs
cli
leave
or
xchg
repz
mov
mov
mov
push
sbbb
inc
xchg
cli
pop
outsl
cld
push
adc
jg
pop
push
pop
and
mov
int
sbb
ja
sbb
xorl
dec
arpl
lods
or
mov
or
or
ja
cmp
mov
add
dec
ja
rorl
sbb
pop
sbb
mov
mov
xlat
push
fidivrl
leave
jbe
sbb
xor
loopne
adc
js
insb
xor
mov
jl
jp
cmpsb
lret
inc
jmp
push
stos
call
ds
ret
test
mov
dec
push
cli
xor
sub
mov
xor
and
jns
fnstcw
outsl
mov
mov
imul
and
push
sub
fcmovbe
and
je
std
fdivrs
popa
aam
and
movsl
mov
jle
sbbb
in
xor
adc
jge
mov
loopne
pop
dec
mov
cmpsl
orl
insl
mov
test
push
cltd
out
popf
fstpt
jg
mov
rcrl
bnd
mov
mov
and
cmp
inc
sbbl
sub
jl
fsts
xor
in
lods
fcmovne
shrb
dec
aad
mov
fldenv
sti
dec
add
push
xor
mov
fnstcw
jle
sub
push
xor
jb
pop
mov
mov
imul
mov
jle
dec
sub
push
xor
fisttpl
je
lcall
cli
push
cmp
push
mov
insl
fidivrl
push
xlat
sti
mov
sub
pop
cmp
mov
pop
inc
cmp
cmp
cli
cmp
loopne
jae
xlat
jno
clc
cmc
sbb
push
or
in
jae
iret
repnz
fcomi
ret
cmp
rcrb
jmp
sbb
call
stc
negl
sub
leave
mov
pop
sbb
popa
daa
cmpsb
pop
repnz
repz
dec
sbb
dec
push
pop
or
xchg
add
mov
or
sti
mov
pop
fsubl
orb
pop
inc
js
orb
shll
stos
cli
stos
sbb
mov
cmc
bound
or
mov
mov
std
sbb
stc
aaa
inc
ds
jne
jle
pop
gs
in
sub
incb
inc
jno
bnd
or
mov
cmc
pop
cmp
mov
sub
mov
sub
fs
faddp
push
add
cs
fmul
inc
and
ficoml
bound
pop
mov
and
xorl
dec
push
adc
add
pop
mov
jno
pop
leave
cld
and
fcmovne
data16
xor
int3
stc
cmp
dec
fisubrl
or
std
push
not
lret
mov
cmp
xchg
pop
ljmp
mov
icebp
push
add
pop
sbb
mov
xor
sbb
cmp
out
sub
xchg
pusha
jne
cwtl
cmp
mov
cmc
push
fmuls
push
cmpl
push
jp
pop
std
xlat
lods
mov
aaa
test
cmpsl
jb
or
imul
rclb
ret
sbb
and
cmp
sahf
pop
dec
or
iret
loopne
jp
das
cltd
xchg
ljmp
lcall
add
xor
inc
sbb
cs
sbbb
push
arpl
or
inc
stc
or
jge
stc
jecxz
xchg
movsb
xchg
scas
sub
dec
or
mov
cmpsl
xchg
stc
movsl
les
mov
dec
xor
mov
cs
loope
pop
add
lcall
jl
outsb
push
jmp
js
ficoms
fs
mov
test
addr16
mov
sbb
cltd
push
push
testb
pop
call
nop
jmp
dec
and
dec
xlat
lods
iret
outsl
xchg
movsl
and
js
xchg
scas
inc
xor
inc
pop
shlb
lret
cmp
mov
bound
lock
ljmp
push
push
xor
mov
pop
imul
clc
or
mov
mov
js
mov
test
test
ljmp
daa
xor
xor
aaa
fsubrs
pop
jnp
stos
loope
add
xlat
or
jno
addr16
or
xchg
ja
rcl
out
lret
addr16
fistl
and
mov
adc
mov
sbb
mov
xorb
mov
and
or
lcall
adc
stc
mull
out
or
test
out
mov
dec
lret
xor
cmc
rorl
dec
out
imul
shll
fwait
sti
dec
mov
test
cmp
sti
dec
pop
gs
popf
xlat
jb
stos
jo
pusha
mov
xchg
push
test
rolb
and
lret
enter
xor
shlb
xchg
jb
jns
xchg
pop
and
js
pop
xor
in
xchg
cmc
jecxz
mov
call
fidivs
cmp
fidivs
push
xor
jns
ret
mov
mov
addr16
sub
test
xlat
loope
xchg
xchg
jl
cmp
mov
push
pop
shlb
dec
jmp
xor
std
push
lds
xor
jge
xlat
ja
push
sub
in
mov
test
adc
mov
mov
pop
mov
cmp
and
enter
dec
fwait
outsl
test
pop
sub
xchg
add
fadds
mov
jnp
mov
xchg
or
jp
out
jnp
sub
dec
sub
cmp
dec
mov
xchg
movsl
jmp
loop
adc
push
ret
xchg
cwtl
lock
out
cltd
stos
shlb
pushf
js
push
jo
sbb
rcrb
stos
add
or
mov
mov
lds
dec
cmpsl
inc
sahf
sub
ja
xor
pusha
mov
jo
lcall
fs
pop
add
jns
iret
pushf
stos
push
lahf
arpl
cmp
fdivr
and
jae
fidivrs
push
movsl
push
enter
push
lcall
or
pop
leave
cld
aad
xlat
add
icebp
and
clc
xlat
add
pusha
jp
pop
ds
cmp
mov
out
mov
dec
xor
mov
adc
pushl
les
inc
pop
orb
pop
sar
fildll
pushf
mov
lods
sbb
and
fnstcw
jg
dec
push
subb
out
cmp
add
mov
adc
xchg
lret
lea
daa
mov
push
sub
pop
mov
mov
xchg
inc
out
mov
arpl
daa
stos
jp
out
fdivr
cmp
and
xor
pop
push
xor
flds
xchg
jle
cmp
sub
xor
mov
pop
nop
xor
xchg
inc
inc
jne
xchg
divb
fneni(8087
std
sub
out
mov
das
xor
push
leave
or
lret
jmp
dec
gs
jecxz
push
movb
insl
cwtl
outsb
pop
dec
imul
adc
out
jae
movb
insb
int
repz
jb
push
mov
jb
dec
inc
jne
xchg
ja
pop
outsb
push
ja
inc
ljmp
ss
mov
dec
arpl
cmp
mov
xlat
mov
xchg
push
fs
fisubs
into
stc
fcmovu
adc
xchg
cwtl
lcall
mov
cmp
inc
dec
sahf
mov
mov
bound
push
lret
pop
cwtl
xchg
loopne
add
cli
imul
stos
or
cmp
enter
lock
jae
fildll
jb
add
call
fs
cmpsb
jg
and
dec
mov
fs
push
lcall
push
mov
pop
adc
je
lret
pushf
ljmp
dec
jp
pop
fwait
sub
jo
inc
xlat
push
rol
sub
jl
push
cltd
mov
pop
pop
sbb
aaa
adc
cmpb
iret
mov
lret
dec
test
outsl
and
xor
xchg
pusha
dec
vpshufb
and
cmp
test
sub
std
aas
push
and
cmpsl
xor
push
pop
fs
dec
push
ss
cmp
enter
xchg
in
push
mov
sbb
out
cmp
pop
test
sub
push
stc
mov
cwtl
push
mov
mov
push
jno
mov
fmuls
cmp
add
cwtl
and
pop
pop
and
arpl
aam
mov
add
sub
test
fsubrs
jns
popa
cmp
sub
dec
movsb
outsl
xchg
into
xchg
xchg
mov
shlb
jb
xlat
test
xchg
repnz
les
aas
sub
daa
stos
dec
sbbb
pusha
faddp
push
bound
mov
adc
gs
cltd
mov
xchg
aam
inc
popf
jmp
xor
xlat
outsl
ret
std
insl
adc
testl
data16
fsts
xor
mov
mov
dec
add
fdivrl
je
out
adc
mov
cmp
test
mov
insl
sbb
insb
push
adc
xchg
stos
gs
lret
adc
jae
sub
adc
cmc
lret
inc
rcrb
leave
js
inc
pushf
imul
testl
ds
push
mov
arpl
sbb
dec
fildl
pop
loope
jle
jg
cli
aaa
push
dec
xchg
mov
jl
vpaddusb
fs
rcr
ret
add
std
test
fcomp
jmp
shrb
aas
inc
iret
xchg
inc
cmp
in
xor
rclb
test
test
add
add
inc
inc
mov
xor
lcall
jl
loope
arpl
clc
add
mov
jae
fisttpl
cmp
xchg
mov
sti
or
xor
sub
shl
mov
xor
pop
iret
repnz
std
add
mov
pop
adc
mov
push
xlat
mov
mov
lretw
into
iret
test
imul
lcall
shll
pop
test
in
or
orl
jle
dec
cli
repnz
scas
pop
rorl
dec
inc
dec
mov
jnp
or
fdiv
push
mov
addr16
fcmovu
sub
popa
xchg
out
stc
nop
mov
orb
push
sbb
leave
cmp
xor
scas
nop
fcmovnbe
ret
cmp
push
aam
dec
imul
mov
arpl
and
es
pop
adc
cld
sub
mov
fiaddl
mov
and
sti
pop
add
fistl
imul
inc
cmp
flds
inc
add
aas
hlt
jmp
push
popf
sbb
rcrl
jns
into
pop
adc
shll
sbb
std
dec
repnz
mov
popa
push
sti
out
dec
mov
xlat
fcompl
incb
and
sbb
fs
adc
mov
mov
sbb
adc
ljmp
in
cmp
loop
test
fsubl
and
push
adc
mov
repz
dec
bound
adcb
daa
pop
xor
mov
in
xchg
shlb
xlat
scas
leave
test
mov
pop
dec
jns
outsl
mov
cmp
loope
and
cwtl
xchg
mov
mov
stc
push
jbe
lret
insl
push
inc
test
popa
enter
cld
mov
lcall
or
mov
xchg
and
lods
mov
xor
jbe
xchg
and
jb
jp
add
and
or
cmp
fwait
std
xlat
cs
into
jae
lods
lret
pop
pop
fdivrs
mov
test
jl
les
adcb
fildl
fninit
dec
stc
enter
in
mov
imul
pusha
cmpsl
negl
ja
sub
fld
pop
push
mov
in
ljmp
cwtl
push
ds
sub
dec
push
mov
aas
xchg
push
xor
fcoms
push
pop
gs
fcoml
jl
mov
js
xchg
pop
mov
sub
std
cwtl
cmp
pop
adc
cmp
cwtl
lcall
xor
mov
gs
es
testl
cmp
or
inc
sbb
jae
cmc
arpl
pop
popa
fistpl
dec
push
outsb
out
push
add
xchg
add
push
adc
add
and
xchg
jo
inc
pop
lcall
dec
stc
sub
cmp
pop
sbb
and
out
sub
and
enter
imul
mov
fildl
and
ljmp
cmp
sub
fistl
shl
dec
xor
push
mov
push
mov
iret
push
xor
mov
scas
sbb
imul
xchg
add
pop
jp
fistl
icebp
dec
pop
std
xchg
xor
sbbb
and
stc
xlat
into
or
ficoms
cmp
adc
cmp
inc
stos
xor
pop
mov
leave
dec
mov
xor
movsb
cmp
pushf
and
sub
mov
push
lahf
out
je
test
inc
dec
icebp
cld
sbbb
cwtl
xchg
inc
add
xchg
cmp
cmp
jns
scas
add
fcompp
cmpsb
pop
pop
cmp
push
cmp
pop
test
mov
or
add
fnstcw
mov
cltd
aas
cmp
mov
loopne
insl
stos
movsl
sub
cmp
cmc
cmp
add
mov
mov
dec
dec
add
fldl
sub
add
jl
mov
pop
cld
cmp
pop
lods
adc
fldt
adc
stos
shll
xor
sti
cmp
dec
xchg
mov
sbb
fiadds
fsubs
jb
daa
das
jns
roll
mov
lods
cs
and
sti
push
jae
cmp
addl
dec
inc
in
repz
mov
push
out
xlat
gs
out
loopne
push
xor
popa
fildl
popf
out
sbb
pop
je
imul
xchg
ret
cwtl
out
mov
insl
and
sub
cmpsb
adc
in
fwait
sbb
and
push
fwait
loop
mov
sub
outsl
je
divb
or
pop
cmp
fstps
mov
xor
mov
je
repz
sub
aam
xlat
iret
sub
imul
fstpt
rclb
pop
scas
push
outsl
lret
movsl
lds
xlat
and
imul
mov
mov
out
mov
dec
lret
add
arpl
adc
lds
insl
sbb
adc
dec
push
inc
dec
dec
push
test
push
ja
jno
insb
sub
pop
push
pushf
jo
mov
jae
popa
pop
in
js
xchg
pop
jge
icebp
xchg
testl
add
movsl
jp
dec
mov
call
sub
cmp
dec
mov
pop
cmp
iret
fisttpl
cwtl
icebp
and
aam
popa
push
xchg
inc
dec
test
fstps
out
cmp
ja
xor
bound
cli
sti
cmp
fstpt
iret
in
inc
xor
push
or
test
xchg
leave
push
fstps
sbb
jge
jae
popa
cmp
mov
and
push
sbb
int
pusha
pop
pop
popf
cmp
lcall
fildl
sub
dec
xchg
mov
and
stos
push
jbe
adc
dec
inc
mov
fisttpl
sti
lcall
pop
push
adc
cmp
gs
shr
inc
test
or
xor
ja
xlat
pop
xchg
ljmp
push
and
mov
mov
or
mov
hlt
mov
xlat
mov
push
loop
pop
aad
test
mov
test
add
xlat
lea
or
call
fisubrs
sar
xchg
xlat
mov
mov
loop
bound
out
aad
daa
xor
mov
xor
pusha
mov
imul
lock
pop
xor
fisubrl
sub
pusha
sbb
xor
in
cmp
inc
sub
in
push
test
jo
aaa
in
inc
push
mov
out
and
pop
jnp
aas
into
ds
sbb
xor
imul
lods
cld
dec
cmpsb
adc
dec
xchg
cs
mov
in
test
adc
sbb
shll
mov
andb
cs
popa
int3
cmpsl
shl
les
mov
js
repz
and
pop
pop
lods
xor
xor
sub
cmpb
popf
pop
and
int
dec
pop
daa
add
push
dec
iret
xor
pushf
push
dec
jecxz
xor
sbb
jae
push
inc
xlat
add
aad
lcall
out
mov
insb
dec
or
mov
cwtl
dec
pop
sbb
incb
pop
adc
jns
js
lcall
push
daa
push
fildl
cld
popf
lock
ss
push
xlat
adc
ds
xchg
pop
cmc
sbb
push
mov
and
fwait
jmp
add
lock
adc
and
push
adc
lret
ljmp
jg
pusha
stc
scas
jmp
mov
subl
outsb
lods
dec
xlat
cwtl
in
pop
inc
addr16
push
stos
add
jbe
insb
push
shl
sbb
hlt
adc
fisttpl
jecxz
fwait
jnp
pop
repnz
mov
scas
sub
int
pop
cmp
or
lahf
mov
mov
vpcomud
cmp
testb
or
loop
xor
icebp
sbb
cmp
loope
sbb
leave
hlt
ret
fcmovb
add
dec
sub
inc
and
stc
push
xor
aaa
in
ss
sub
dec
insl
leave
dec
mov
cs
push
and
push
jns
test
xor
cmpb
inc
dec
push
lods
jg
xor
inc
jbe
xor
cwtl
out
sbb
mov
leave
cmpsl
adc
sbb
add
add
mov
fsubs
xlat
scas
aam
mov
sbb
push
mov
or
leave
fisubs
jl
mov
xchg
push
mov
test
jb
movsl
stos
sahf
lret
or
adc
xor
testb
es
sahf
jp
fcoms
cmpb
xor
sub
jns
mov
inc
and
push
mov
out
lods
movsl
jecxz
mov
jo
loopne
jb
pop
or
cmc
pop
mov
es
pop
popa
mov
lock
pop
dec
sub
pop
ja
cmp
mov
icebp
cmp
sub
xchg
jb
pop
xor
cli
rcll
lods
fstl
pop
stc
push
jg
xor
lea
cmc
mov
add
sub
lock
mov
stc
jbe
push
jns
cld
add
scas
xchg
xor
int
or
push
mov
outsl
sub
ret
frstor
sbb
rolb
jl
int3
push
xor
and
scas
test
in
ja
lcall
jp
xchg
aad
jge
dec
push
mov
or
xor
push
sub
fidivs
push
add
push
imul
out
jl
and
mov
push
mov
loopne
cmp
fisttpl
cmc
pop
sbb
in
orl
cmp
movsb
aaa
xchg
cmpl
data16
js
cs
test
mov
lods
aaa
aaa
dec
aad
dec
stc
stos
dec
mov
sub
or
pop
loopne
dec
aam
outsl
pop
dec
adc
dec
fstpt
push
add
aas
cmp
add
add
pusha
cmp
xchg
jno
mov
cs
cli
out
fsubl
int3
and
sub
sbb
test
jl
mov
and
in
add
rclb
mov
jns
fstps
jb
nop
mov
cld
xchg
push
ja
pop
add
and
push
xchg
sbb
jae
mov
cmp
hlt
sahf
sarl
push
sub
loope
pop
pop
mov
mov
js
dec
out
lret
dec
mov
jge
adc
jle
popf
jns
imul
in
lret
cld
and
in
add
js
insl
scas
mov
mov
sub
or
cmp
ja
in
xor
mov
dec
jp
fsts
dec
push
sbb
dec
inc
adc
or
dec
pop
xchg
push
fisubl
dec
push
roll
int
arpl
mov
jle
fdivrp
dec
popa
imul
sbb
mov
adc
inc
movsl
sub
jg
cli
or
dec
sub
xchg
nop
or
fisttpl
mov
or
mov
icebp
xchg
jne
sub
es
rcrl
movsl
jge
jp
stc
mov
mov
or
addr16
sbb
xlat
add
inc
mov
cmp
xor
push
fmulp
cmp
mov
sub
shrl
dec
das
int
cs
pop
mov
fwait
push
mov
xchg
enter
pop
xor
lret
and
mov
push
out
mov
mov
dec
ret
push
mov
or
xor
xor
mov
icebp
imul
adcb
aam
sbb
mov
jns
dec
cmp
mov
insb
inc
adc
aam
mov
fnstenv
jecxz
or
stc
pop
and
xor
dec
shrb
movsl
adc
mov
xor
push
fcoms
daa
mov
inc
adcl
pop
add
cld
test
adc
je
fiadds
addr16
mov
push
jge
addr16
jmp
fs
add
imul
clc
adc
jbe
sti
push
dec
mov
jae
dec
xchg
outsb
jo
out
icebp
pushf
cwtl
push
dec
das
xor
jbe
mov
out
and
stc
push
lods
push
iret
ficoms
loope
push
xlat
adc
push
stc
cmpsl
sub
repnz
mov
clc
testl
imul
outsl
insb
ss
add
push
das
cmp
call
sbbl
call
outsb
cwtl
inc
movsb
daa
outsb
xlat
decl
mov
push
arpl
in
pop
jl
cmp
rcrb
xor
sbb
fwait
push
xchg
push
std
jae
mov
sbb
cmpb
sbb
outsl
sub
andl
nop
repz
sbb
cmp
js
cmp
mov
dec
and
shll
adc
loop
pop
int
gs
pop
shr
add
add
outsl
adc
movsl
mov
inc
out
test
cwtl
mov
pushf
jl
test
adc
je
dec
dec
lahf
jmp
and
jbe
test
lods
decb
enter
jg
add
cmc
cmp
fcmovnb
inc
sub
mov
lods
outsb
pushf
sub
imul
jno
rcr
stos
inc
xor
cld
jno,pt
jg
test
cli
fidivrl
dec
sbb
fildl
notb
into
mov
sbb
in
addr16
int3
sbb
xor
imul
pop
pop
mov
fnstcw
inc
fs
popf
lcall
mov
andb
mov
jmp
cmp
push
adcb
outsb
cs
repz
ljmp
pop
pushf
fiadds
sbb
mov
push
xor
pop
sbb
push
dec
cmp
ja
mov
dec
fstl
ret
std
rorb
lret
xchg
pop
xchg
push
notl
nop
or
cmp
orl
inc
test
push
sub
cmp
jmp
orb
mov
out
test
sub
fnclex
mov
les
ret
or
xor
push
xlat
sbb
cmp
mov
data16
jle
mov
dec
and
mov
and
and
dec
data16
or
push
pop
mov
cmc
cltd
push
ljmp
rcll
arpl
sbb
pop
ret
out
arpl
sub
jmp
stc
xchg
cs
mov
jbe
push
out
fcomi
add
je
data16
stos
movq
cmp
out
mov
imul
xrelease
mov
push
js
int
dec
xlat
sbb
fcmovu
add
addr16
mov
mov
cli
push
mov
mov
mov
dec
loop
test
mov
stc
push
push
movsl
jno
mov
pop
mov
or
dec
push
add
dec
xchg
mov
das
jp
xor
add
imul
xchg
mov
scas
jecxz
out
jl
lcall
sbb
add
mov
mov
sbb
mov
outsl
imul
rol
dec
or
sub
sub
xchg
cwtl
jno
mov
aas
mov
cltd
mov
cmpsl
mov
xor
cmc
push
bsr
stos
dec
mov
je
aas
loope
lret
mov
hlt
or
ret
mov
push
add
push
std
adc
sbb
xchg
repz
dec
cli
xor
jecxz
test
pop
cmp
push
add
cmp
sti
sub
in
dec
addr16
push
and
out
xor
dec
dec
cmpsl
repz
pusha
push
cwtl
outsl
fsqrt
xor
push
pop
xlat
in
lea
xor
lahf
adc
dec
push
jmp
arpl
add
adc
or
stc
movsl
add
mov
sub
pop
xor
in
out
add
fimuls
cmp
xor
and
movsb
add
cmp
std
shrl
dec
sbb
cmp
cld
lcall
dec
ja
lahf
cwtl
cld
or
lret
es
mov
adc
mov
sub
rcrb
std
and
xchg
cmp
pop
mov
jae
fcmovnu
stos
fnstenv
rorl
loop
jge
mov
mov
je
lods
sar
repz
je
cmp
jecxz
ja
mov
cmc
imul
lcall
xchg
lret
and
and
sub
inc
push
imull
movsl
cs
stos
push
sub
inc
or
aas
mov
es
leave
lock
sbb
push
rcr
imul
imul
shlb
xor
sbb
mov
rcrl
push
mov
pop
push
sub
rorb
xlat
out
scas
pop
shll
or
int3
icebp
imul
std
aaa
mov
daa
loop
xor
fs
mov
or
cli
adc
sbb
xor
repz
pop
icebp
mov
enter
mov
mov
and
lods
mov
inc
mov
stc
ja
loopne
nop
mov
mov
xchg
adc
iret
dec
cmpsl
movsl
ficoms
fistpll
mov
sbb
iret
data16
adcb
mov
xor
and
push
xchg
jge
dec
push
ret
movsl
and
push
cltd
xlat
and
lods
dec
insb
lods
test
repz
cmp
in
bswap
inc
aaa
pop
cltd
cmp
cld
adc
dec
jno
mov
xlat
lods
sub
inc
or
push
xor
and
orl
cli
ret
sub
test
mov
mov
push
xlat
outsb
lea
fldcw
iret
sub
cmp
lahf
cwtl
imull
and
repnz
jg
call
mov
xchg
insl
add
xlat
sbb
mov
jmp
fs
xor
and
jg
imul
mov
pushf
out
lret
xor
icebp
std
push
jns
dec
add
lods
jnp
xchg
ja
mov
pop
adc
push
jge
loope
fsubl
cmp
mov
dec
mov
push
xlat
mov
lds
stc
movsb
dec
cli
sbb
adc
int
sbb
divl
nop
sub
cmc
lods
push
sarl
cs
push
mov
dec
mov
add
mov
lea
test
stos
mov
fcompl
push
dec
iret
aaa
mov
cltd
mov
inc
xchg
push
add
repz
addr16
imul
nop
mov
xor
pop
jp
js
inc
andl
out
xor
jp
cmp
repz
jmp
aam
je
dec
fs
and
pop
les
push
and
shr
dec
fsubrs
jno
cmp
lea
adc
push
mov
popa
xchg
cmp
lock
or
jmpw
push
stc
pop
xor
popf
shll
cmp
inc
xor
adc
cmc
lcall
jnp
incl
mov
movsb
lods
and
mov
cltd
or
push
call
mov
fistl
or
movsl
pushl
add
imul
lret
imul
jmp
push
and
gs
and
mov
cwtl
sbb
jp
xlat
subl
pop
incl
xchg
and
mov
cmp
xchg
cmc
mov
packssdw
dec
mov
dec
dec
outsb
test
mov
jecxz
dec
and
popa
mov
rcrb
jno
mov
jns
stos
sub
jae
imul
push
popf
sbb
gs
jb
pop
clc
inc
insb
pop
std
shrl
scas
sbb
stos
popa
cmpsl
data16
add
sub
js
mov
je
xchg
rcrb
push
stc
ljmp
or
orb
dec
stos
test
mov
jle
fs
cltd
and
rcl
enter
sar
imul
fdivp
icebp
mov
dec
in
lahf
and
push
cs
lret
out
shl
nop
lea
lods
lea
push
stos
out
mov
and
sub
dec
jge
ja
xchg
xchg
dec
pushf
jge
pop
fs
push
fldenv
loop
cld
mov
shl
movsb
sub
cmp
sbb
rol
jl
xor
push
mov
pop
jbe
xlat
cmp
push
imul
and
scas
inc
and
ret
shll
push
xor
jl
ljmp
mov
xchg
jo
jae
xlat
neg
and
and
cli
cmp
xlat
lock
sub
jne
jp
lea
mov
xor
imul
pop
repnz
test
xlat
push
ljmp
mov
cli
xchg
pop
pop
in
loop
adc
nop
mov
daa
and
mov
inc
inc
call
and
ret
in
mov
mov
pop
and
xor
popf
lods
sbb
dec
xlat
aad
icebp
std
push
lods
jb
std
leave
jne
pop
inc
insb
rolb
rclb
lret
mov
aas
cmp
push
jg
pusha
mov
rcl
mov
sub
xchg
in
dec
inc
sub
inc
fimuls
fldenv
jmp
bound
cwtl
and
sarb
push
js
test
movq
pop
aaa
mov
repz
leave
test
jge
mov
jge
sub
loop
mov
xor
insb
cs
gs
mov
inc
cmp
aaa
imul
push
sbb
pop
jge
and
and
inc
fcoml
ljmp
cmp
xchg
aad
mov
aam
fdivrl
jno
fstpt
push
push
pop
jmp
les
sbb
out
mov
out
insb
fiadds
fildl
push
sub
jae
nop
lahf
bound
push
lds
mov
jbe
jae
jb
mov
pop
xor
jge
shlb
sub
in
mov
jmp
mov
push
sub
add
push
fcoms
dec
nop
cmp
movsb
popa
mov
mov
int3
xor
xorb
daa
lods
xchg
xchg
jl
ds
mov
bound
sub
pop
xchg
int3
and
pushf
cwtl
xor
jae
jns
inc
movsl
pop
sahf
fnclex
sbb
pop
sub
cmpsl
dec
inc
and
popa
cmpsl
cmp
lret
outsl
mov
mov
jecxz
mov
jno
inc
ja
movsb
fcmovnbe
mov
pop
fwait
push
push
cmpsl
sbb
scas
xlat
push
andb
call
and
jcxz
mov
addr16
and
jae
pushf
adcb
and
popa
addr16
xor
fistpl
imul
xor
fwait
xor
add
cmp
aam
xor
jnp
mov
sub
xlat
les
lcall
mov
cmp
mov
and
push
dec
aam
sub
sbb
dec
adc
add
aad
push
leave
cmp
lock
ja
mov
ret
pop
xchg
mov
mov
lods
roll
repz
icebp
out
pop
jge
pop
inc
sti
cmp
mov
pushf
mov
jl
jne
mov
xor
xchg
mov
jecxz
sbb
stc
cmpsl
scas
fisubs
cmp
mov
mov
test
jb
mov
xchg
mov
shrb
sub
cmpsl
jae
int3
arpl
lret
xchg
mov
push
test
fdivrl
cmpsl
push
sub
xor
mov
adc
and
or
aas
dec
out
xchg
dec
pop
mov
jne
negl
gs
cli
jp
outsb
cmpsl
scas
and
sub
dec
fsts
xor
sub
leave
ret
pop
fs
fldt
outsl
fldenv
loopne
aam
ds
sbb
xor
icebp
xchg
xorb
sbb
ljmp
mov
push
and
mov
int
push
dec
ds
mov
xlat
imul
sbb
sbbb
xlat
pusha
fmuls
mov
or
push
adc
and
jne
in
fwait
pop
and
sar
hlt
dec
flds
mov
rcl
sahf
int
mov
test
dec
outsb
jns
push
mov
movsl
sbb
lock
iret
mov
add
adc
add
cmp
xchg
push
pop
ret
cli
sub
pushf
cli
ret
pushf
addr16
decb
rcrb
jns
jns
dec
arpl
rcrb
movsl
js,pn
pushf
inc
outsb
inc
sarb
shr
mov
aaa
add
leave
addl
popf
cmpsl
jns
rcrb
dec
mov
loope
mov
ret
or
je
fucomi
mov
stc
xchg
cmp
lds
inc
cmpsb
faddl
mov
adc
test
dec
sti
and
sub
leave
sbb
jb
stc
sbb
push
cwtl
jle
jbe
out
repnz
cmp
addr16
fistpl
jl
cmp
mov
rorb
int
out
adc
outsb
jns
mov
cmp
jnp
sbb
xor
push
testb
xchg
cmpsl
pop
jbe
xor
push
hlt
andl
lcall
sub
mov
mov
push
add
das
xchg
xchg
lods
pop
or
iret
lods
daa
shll
mov
sub
jnp
fchs
pusha
in
xlat
mov
cmpsl
loop
cmp
ficomps
das
lcall
gs
cld
jecxz
sbb
push
cltd
cmp
jmp
cmp
sbb
fwait
adc
psubsb
lcall
push
stos
frstor
out
lock
and
or
lods
movsl
push
and
jl
flds
jle
das
out
dec
ds
or
imul
xor
fwait
mov
lret
jg
rcrb
ss
xchg
jae
sub
cmp
imul
mov
xchg
mov
jb
adc
aaa
andb
orl
add
sbb
mov
movsb
es
test
cmp
xchg
push
inc
aad
xorb
out
lret
push
add
daa
push
sbb
add
es
jae
xlat
jp
push
add
dec
lahf
dec
xor
mov
test
inc
xlat
cmp
xchg
out
lret
in
and
mov
mov
jns
enter
dec
ret
xlat
ficomps
sti
jo
or
dec
xor
pop
insb
or
sarl
add
call
mov
sub
imul
mov
std
sbb
gs
fsubs
dec
cwtl
fldt
stos
pop
rcl
lret
ds
mov
mov
and
repnz
fcomi
fnstcw
xorl
mov
fwait
pusha
jno
js
mov
and
jge
fwait
repnz
cmp
aas
subb
sub
mov
push
lea
dec
mov
xor
or
sub
mov
mov
push
xor
pop
mulb
aam
push
push
cmpsl
push
movsb
lret
mov
push
insb
adc
push
xlat
lods
jo
ljmp
cmp
movsl
inc
xor
outsl
mov
sub
cmpsl
inc
data16
test
or
cltd
popf
add
mov
orl
imul
xlat
repnz
sbb
aad
in
loopne
mov
in
std
jmp
and
inc
mov
cmp
xor
cmp
in
hlt
rcr
mov
outsb
sub
fwait
arpl
out
lods
push
mov
pop
pop
mov
xor
lods
mov
pop
dec
add
mov
or
mov
nop
das
dec
mov
push
adc
xorb
push
jns
mov
jnp
jbe
push
add
jne
in
stos
and
lahf
push
and
rorl
fs
test
xor
jb
jae
mov
cmc
lret
test
js
fisubrs
sub
cltd
jp
pushf
sbbb
inc
test
nop
sub
push
mov
jb
call
jle
inc
push
xchg
rorl
and
jbe
mov
dec
scas
jecxz
sbb
imul
sbb
sub
jb
icebp
add
mov
es
pop
xlat
jp
ds
je
xchg
gs
and
mov
sbb
imul
sbb
jb
aas
cwtl
in
mov
mov
insl
sbb
shlb
jp
flds
cmpsb
inc
dec
jg
lock
and
cmpsl
dec
int
imul
mov
stc
test
and
dec
dec
test
or
cmp
fildl
hlt
cld
loopne
sub
sub
movsb
pop
adc
mov
hlt
mov
fistl
inc
mov
icebp
insl
cmpsl
jmp
cmp
je
and
sbb
push
cwtl
push
or
decl
mov
mov
push
mov
sub
or
push
inc
ja
scas
std
mov
shll
mov
mov
inc
movsb
mov
test
sub
mov
sbb
push
stc
xchg
cmp
cmp
les
add
fisubrl
std
push
outsb
js
lcall
in
loope
idiv
cli
pop
ljmp
sbb
fistps
mov
cmp
mov
mov
push
cmp
inc
inc
test
arpl
js
iret
pop
mov
cmp
jo
dec
adc
xor
les
cmp
or
js
mov
jae
movsl
xchg
push
push
les
insl
stos
pop
push
jae
xor
rcrb
pushf
call
xchg
in
in
inc
dec
xacquire
fwait
jns
fs
adc
mov
frndint
xorl
dec
and
fstpt
xor
pop
stc
push
cmpsl
mov
les
stc
popf
leave
rcrb
in
insl
sbb
fbstp
bound
subb
adc
mov
jg
mov
shrb
test
jmp
loop
jne
das
add
test
dec
sub
ret
adc
fbld
push
mov
jl
not
push
cmpsb
cld
rcrb
xor
std
mov
sub
jp
jg
in
and
push
jbe
nop
jnp
add
jmp
je
aaa
test
imul
ds
popa
xor
iret
fildl
and
cmp
adc
mov
jmp
and
mov
push
mov
sbb
and
cmp
push
imul
jecxz
fimuls
movsl
rclb
out
sub
push
and
pop
fisttpl
sub
dec
xor
daa
sub
xchg
adcl
out
adc
mov
fisubs
jle
test
dec
mov
inc
jns
fimuls
push
push
mov
xchg
jge
pop
mov
push
es
idivb
mov
push
sub
mov
cmc
cmp
mov
pop
iret
dec
je
sbb
ret
jge
sahf
add
outsl
jg
mov
fisubrs
out
sbb
mov
mov
pusha
jae
cmp
sar
test
xor
movsb
mov
dec
jne
leave
lret
cli
sbb
pop
mov
and
sbb
pop
mov
out
dec
sbb
fscale
xor
mov
clc
pop
push
jl
sbb
inc
jmp
aam
jg
adc
adc
aad
es
sub
lods
adc
inc
and
out
enter
pop
add
add
cwtl
rolb
sbb
lcall
add
mov
lcall
fbld
cmp
pop
mov
ficomps
mov
pop
insb
cmp
pop
les
mov
insl
mov
rcrl
xchg
mov
stos
stos
cmp
addr16
imul
adcl
xchg
roll
pushf
dec
in
dec
and
pop
dec
jecxz
fmuls
pop
mov
sbb
aad
push
pop
test
leave
xchg
fwait
lret
cwtl
sub
arpl
je
fwait
mov
decl
out
jp
iret
cmpsb
pop
nop
mov
das
cmpl
loope
and
mov
xor
cld
xor
push
xor
dec
sub
and
loopne
mov
push
push
jp
arpl
jg
xor
xchg
xor
jnp
jns
sbb
andl
fcmovnb
mov
mov
sub
repnz
dec
idiv
mov
push
lods
ja
inc
push
filds
lret
insl
jmp
addr16
jno
iret
ljmp
loop
inc
inc
data16
loopne
cmp
lahf
cld
dec
xlat
in
inc
lahf
insb
imul
cmp
cmpsl
cltd
sarb
aam
or
pop
add
jl
int3
aaa
jns
aad
jne
enter
repnz
stc
sti
jae
xchg
jne
fldenv
mov
int
test
jno
jb
add
stos
sbb
mov
xchg
inc
test
dec
dec
inc
adc
inc
adc
mov
add
and
or
mov
test
adc
jg
xor
xchg
js
xor
push
test
jae
cs
cwtl
and
leave
out
jae
cmp
cmp
stos
push
add
ficompl
ret
cmp
repz
jmp
ds
lret
push
insl
xlat
loop
pop
add
mov
gs
idiv
test
dec
xchg
imul
xchg
and
lea
add
pop
bound
xor
stc
push
xor
xchg
jae
fldz
shll
add
xor
aaa
xchg
aam
test
and
int
outsb
ljmp
pop
leave
mov
cmp
ds
and
dec
outsl
ja
dec
mov
mov
mov
fnstsw
lds
xor
jae
adc
jnp
sbb
dec
lods
imul
adc
and
das
loope
mov
cmc
or
jmp
pop
adc
xchg
dec
push
jno
sub
adcl
fmulp
aaa
mov
cmp
mov
into
shrl
arpl
mov
sub
cs
gs
or
outsl
jns
into
adc
sbb
rcrb
push
cmp
cmp
insl
stc
punpckhwd
cli
mov
fnstenv
mov
enter
xor
sub
sbb
movsl
int
fiadds
cmpl
or
push
sbbb
shlb
jae
xchg
jg
ds
or
jno
dec
jo
dec
subl
inc
add
sub
xchg
jbe
xlat
fstpl
mov
sti
rcrb
fimuls
std
push
push
jb
sub
push
push
out
fdiv
mov
js
fisttpl
push
inc
jge
add
sbb
pushf
and
shlb
mov
cs
ret
mov
cmp
cmp
cmp
mov
dec
dec
dec
and
sub
cmp
popa
jecxz
dec
xlat
fisubs
fwait
jp
and
movsl
xor
mov
subl
ja
nop
iret
xchg
outsb
imul
cli
loope
lret
insl
inc
out
out
and
jbe
push
in
pop
insb
xlat
stc
pushf
add
std
push
mov
ja
in
pop
imul
adc
in
push
daa
dec
ja
pushf
es
push
aaa
mov
cli
cmp
fisubrl
add
jbe
jge
xorb
filds
jecxz
xlat
cmp
or
push
jmp
stc
or
xchg
icebp
mov
jae
or
mov
xor
mov
xor
cmp
cmp
lods
shll
sub
repnz
xchg
pop
shlb
lods
add
lret
xchg
xor
ss
dec
repz
and
inc
addr16
cmc
dec
add
cli
mov
js
pushf
cwtl
stos
push
pop
xchg
jns
fwait
imul
mov
cmp
sbb
imul
cli
and
or
popa
orb
imul
inc
mov
mov
xchg
pop
or
loop
and
ss
lret
dec
and
mov
test
cmpsb
lods
mov
ja
mov
add
inc
mov
into
xor
mov
inc
das
in
push
loope
gs
cmp
push
xchg
mov
xor
sbb
jp
pop
ror
mov
and
push
into
insl
push
inc
shl
out
cwtl
xchg
imul
and
add
push
mov
pop
lods
pop
xchg
das
gs
push
mov
sbb
icebp
adc
or
out
push
jae
rclb
dec
es
out
and
pop
ljmp
test
xlat
hlt
mov
ja
int3
add
fistl
cmp
add
popf
mov
sub
cmpb
test
xchg
in
sub
inc
push
fistpl
jecxz
dec
mov
inc
pop
jbe
sbbb
rcl
xor
mov
mov
and
aad
movsl
rcr
mov
adc
dec
lret
adc
xchg
mov
and
mov
xchg
leave
xor
fistl
sub
push
pop
dec
popa
mov
xor
aas
push
mov
mov
push
jno
rcrb
jge
xlat
push
and
cmp
inc
fisttpl
arpl
mov
xchg
sub
movsl
xchg
jb
dec
fildl
je
sub
xchg
movsb
cld
fs
bound
push
std
xor
daa
adc
icebp
mov
push
into
daa
loope
mov
push
jmp
mov
and
iret
movsl
sbb
pop
jno
xlat
inc
adc
cs
pop
or
jg
cmpl
add
test
jb
cltd
fwait
inc
sbb
xlat
lock
xor
jmp
testb
cmp
loopne
and
les
cli
ja
les
mov
aaa
mov
mul
cld
push
ss
stos
hlt
les
pop
or
add
push
pop
cmpsb
xchg
fildl
and
test
mov
out
xchg
test
outsl
das
adc
mov
push
pop
jle
jb
pop
mov
aam
push
mov
dec
pop
movsb
push
das
fcmovnu
jb
cs
xor
and
xlat
mov
xchg
std
cmp
fcmovne
rcll
and
add
inc
sub
sbb
push
je
hlt
xchg
lcall
or
fcmovb
pop
push
fldt
xor
push
insb
pushf
sqrtps
and
fildll
dec
fildl
int
cmpsl
inc
insb
xchg
push
cli
mov
add
xchg
jge
cmp
and
aad
jle
jne
mov
addl
or
dec
dec
inc
xchg
jae
mov
cmc
and
fisubs
cmp
jae
dec
mov
out
cmp
mov
lret
icebp
mov
jne
or
xchg
mov
rcll
stos
sub
xor
fcmovu
in
pop
adc
add
aam
jmp
sbb
xor
stos
pop
xlat
ljmp
cmc
test
ret
mov
mov
push
xchg
mov
mov
pop
fnstenv
xlat
inc
cld
gs
loopne
nop
sub
jge
fisubrl
mov
sub
movsb
fsts
clc
jno
aaa
xor
mov
lods
lret
mov
mov
pop
ret
dec
inc
or
mov
test
xchg
cs
jae
fsts
mov
xlat
mov
pop
dec
fidivs
pop
jge
mov
pop
gs
addr16
sbb
data16
faddl
pop
sbb
fsts
dec
popa
movsb
or
pop
popf
addb
jae
pop
push
push
mov
and
int3
jmp
in
sub
push
inc
mov
push
xlat
push
inc
push
sub
jge
int
add
xor
cmp
xlat
scas
add
xchg
int
push
test
imul
pusha
das
out
pop
ja,pt
arpl
mov
push
cwtl
add
xchg
sbbl
adc
dec
jle
jmp
inc
xor
inc
sbb
push
stos
jns
xor
pcmpeqb
loope
mov
andl
aam
mov
mov
in
push
cli
sbb
enter
adc
lahf
idiv
jmp
pop
adc
roll
cmp
pop
xlat
mov
jbe
mov
jo
sbb
xchg
jmp
call
and
adc
cld
jns
ret
cmp
out
push
pop
mov
add
bound
sbb
mov
cmp
add
xchg
dec
jmp
add
jb
push
pop
in
outsb
lret
loopne
fldt
cmpsb
iret
and
mov
add
mov
ja
inc
push
cmpl
mov
pushf
dec
lret
mov
ds
jne
add
push
jp
pusha
jns
testb
and
stos
in
stc
xor
xor
adcb
mov
xor
sbbb
es
lock
cmpsl
push
test
mov
and
subb
repnz
cmp
stc
cld
fidivrs
ds
fcmovne
mov
cmc
push
dec
std
xor
or
pushf
mov
insl
pop
imul
mov
or
mov
xor
and
movsl
fmuls
ja
xlat
push
dec
jae
ds
push
aad
push
popa
dec
lea
xor
jae
xchg
mov
es
sbb
jns
xor
cmp
mov
adc
sti
or
jg
in
mov
gs
and
jo
inc
dec
add
mov
mov
sahf
jo
stos
sub
loop
add
inc
xchg
xor
mov
test
imul
inc
push
gs
xlat
push
jle
or
pop
sbb
mov
sbb
fxch
sbb
or
dec
xchg
push
inc
sbb
or
and
stc
in
or
mov
aad
mulb
xor
test
lahf
enter
lods
aam
push
push
sbb
test
mov
adc
pop
adc
sub
daa
xlat
rcll
push
jl
pushf
lods
dec
fwait
mov
pop
sub
cs
fadd
mov
je
sub
xchg
sbb
jne
or
or
mov
fists
andb
add
mov
xchg
inc
loopne
jae
scas
mov
stc
fldt
mov
aam
je
gs
xchg
inc
test
stc
aad
loopne
imul
pushf
in
xchg
loope
and
cmp
addr16
inc
testb
imulb
out
dec
mov
imul
adcb
cld
jne
inc
sar
dec
sbbl
sub
out
jo
push
inc
add
gs
mov
mov
ljmp
icebp
dec
cmc
dec
xchg
mov
mov
mov
jno
sbb
jge
insb
out
popf
adc
or
bound
test
dec
fimuls
cmp
push
stos
sub
aad
mov
cmp
and
outsl
adc
cmp
pop
call
inc
pop
das
dec
cli
shll
sbb
and
pop
dec
repz
jno
jl
repz
pop
pop
xlat
mov
aad
incb
and
fwait
std
dec
mov
outsl
imul
xor
out
popf
je
cmp
adc
pushf
repnz
fistpl
je
pushf
jle
aaa
dec
xlat
xor
cld
popf
sub
mov
imul
mov
imul
cmp
cli
pop
xlat
mov
test
cs
push
decb
scas
xor
imull
mov
jb
mov
test
fnstcw
iret
out
repnz
cmp
in
sub
fdivr
addr16
nop
outsl
aad
rcl
fldl
scas
cmp
test
xchg
out
addr16
sarb
ret
ja
dec
insl
into
xor
add
add
ret
test
data16
sbb
loopne
xor
xor
xchg
fistpl
shll
je
push
subb
xchg
lods
push
add
push
imul
iret
aam
xchg
push
fstpt
pop
nop
out
pop
pop
mov
push
push
mov
ret
das
cs
jge
test
adc
testb
xchg
cmp
adc
bound
jp
cmp
mov
test
dec
pop
sub
adc
xor
icebp
lock
or
not
cmp
dec
imul
pop
push
xchg
fcmovnb
mov
jae
xlat
push
and
imul
xchg
dec
in
push
xor
dec
jmp
sub
daa
adc
pop
int3
lahf
cmpsl
jmp
cmp
or
loope
jnp
add
gs
sbb
push
movsb
add
mov
mov
adc
pushf
xchg
aad
adc
test
and
pop
aas
sbb
ljmp
gs
cmp
cmp
push
jo
pop
lahf
push
stos
int3
jp
icebp
sbb
xor
aad
adc
dec
aad
pop
push
sbb
jae
jmp
mov
jae
or
sbb
jnp
and
add
push
out
or
int3
xchg
sbbb
stos
aad
pop
sbb
xor
and
xlat
cmp
outsl
shlb
addr16
push
jne
ljmp
in
dec
ss
sbb
pop
sbb
mov
pushf
iret
adc
repz
xchg
fimull
cmp
sbb
xor
sbb
xor
jecxz
scas
dec
sahf
aam
mov
mov
pop
dec
fistl
or
xlat
sbb
inc
sub
fwait
lret
or
mov
or
sub
jecxz
pushf
mov
dec
sahf
push
or
lcall
push
xlat
xchg
das
and
repnz
ljmp
test
fstps
addr16
pop
clc
cmpl
test
xor
outsb
sbb
jae,pn
fprem
mov
xchg
sbb
push
xchg
xchg
stos
xchg
stos
push
mov
xchg
sahf
mov
push
xlat
test
cmp
jae
sbb
ret
stos
jb
stc
repnz
sbb
adc
mov
jne
ds
dec
mov
call
in
xchg
or
mov
pusha
adc
int
pop
pop
shll
xchg
cmp
call
mov
decl
cmp
jb
push
push
jne
pop
cmp
addr16
mov
insb
push
in
or
xlat
sub
arpl
mov
fiadds
add
lret
rcrl
sbb
mov
rcrb
imul
adcl
dec
dec
cld
fsin
push
cmp
mov
xor
aad
jg
cwtl
pop
sbb
adc
mov
add
jno
imul
adc
cmp
pop
inc
xchg
cmp
cmp
fldt
sbbb
shl
lds
ja
mov
int3
es
or
rorl
shl
inc
addr16
dec
leave
cs
sub
movsb
outsl
stos
xor
cli
mov
decb
pop
in
xlat
fisubrs
inc
faddl
xchg
into
enter
arpl
pop
fcompl
mov
fs
and
cs
imul
test
push
mov
enter
fdivr
xor
out
xlat
imul
jp
xchg
or
xlat
mov
fsubrl
pop
stos
push
jb
stc
mov
or
int
sub
xchg
mov
push
add
outsb
lahf
lock
dec
fsubs
fwait
mov
jle
cmp
cld
cld
jb
repnz
xchg
testb
rolb
test
cmc
aaa
mov
mov
push
push
pop
pop
test
fnstsw
into
fsubr
gs
jmp
lds
shll
push
fprem1
fwait
xorb
mov
in
das
jae
push
add
inc
and
int3
cmc
arpl
popa
in
pushf
xorb
stc
shrb
push
in
and
loop
imul
adc
ja
jne
std
jle
and
dec
mov
sub
inc
cmpsb
lahf
test
pop
ret
repz
cmp
dec
push
or
push
adc
sahf
test
pop
push
loopne
subl
sbb
sub
dec
cwtl
dec
imul
icebp
jp
xlat
mov
cmpl
add
pop
cli
sub
push
mov
and
inc
push
lock
js
xchg
test
mov
fists
pop
jg
sub
lea
into
jg
notb
mov
add
insb
enter
mov
jno
lods
iret
fcmovnb
or
jbe
lret
cmc
sbb
pop
fldcw
xchg
sbb
ret
fldl
sbb
sbb
sub
into
xor
sbb
mov
nop
pop
xchg
cmp
pop
xor
xchg
js
cmp
mov
xor
and
cmp
dec
dec
sbb
rcrb
sbb
and
and
xlat
push
adc
xchg
lret
lcall
movsl
cmp
jl
rep
aad
out
call
mov
mov
inc
xor
dec
aaa
adc
dec
cmp
inc
cwtl
mov
sbb
nop
jb
fmuls
or
stc
ja
inc
push
adc
shl
xor
dec
push
xlat
test
sub
push
cs
dec
and
push
subb
mov
jmp
pop
insb
cmpsl
dec
shr
fidivl
je
cmp
add
notl
out
cmp
inc
xchg
je
xor
pop
aad
push
hlt
test
imul
sub
jl
cmpsl
arpl
out
add
imul
xor
test
or
sbb
and
mov
ss
fbld
pop
or
jnp
adc
add
leave
and
adc
movsb
aad
jmp
lret
pop
jl
xlat
repz
pop
mov
push
pop
fstl
xchg
jns
out
jmp
insl
ds
sub
add
xchg
rclb
xor
mov
xchg
pushf
xchg
pop
mov
or
xor
xlat
and
pushf
test
or
clc
jl
mov
mov
outsl
add
adc
mov
jne
fsts
test
dec
adc
dec
xchg
test
dec
fs
rcr
mov
inc
jbe
lret
mov
int
mov
jne
push
cmpsl
cmpb
pop
mov
xor
dec
jae
jl
ljmp
mov
jp
mov
das
aam
dec
pop
xlat
sub
mov
sub
pop
sub
and
sahf
xlat
xchg
cmp
and
mov
iret
notb
cmp
sti
ja
data16
out
jmp
cs
xlat
sbbb
cmp
scas
fldt
icebp
loopne
or
inc
repz
stos
fisttpl
popf
fiaddl
out
add
sbb
cwtl
xor
mov
jae
out
jge
push
pop
call
xor
xor
imul
push
nop
pop
push
cmpsb
popf
xchg
mov
rclb
cltd
idivl
shl
fistpl
in
mov
xor
sbbl
bound
or
jbe
mov
stc
xor
mov
pushf
and
pop
cmc
sbb
add
cmpsl
test
dec
enter
mov
fisubl
pop
xchg
push
sbb
mov
loopne
mov
and
cs
lret
aas
xor
nop
sub
xor
cli
sub
loope
test
in
daa
ja
dec
adc
clc
in
cmp
sbb
sti
negl
mov
mov
mov
push
pop
inc
push
push
repz
jno
sahf
addr16
push
sub
cld
jmp
cmpsb
pop
xchg
fwait
addb
fcmovnb
lret
orl
sub
jle
mov
mov
xor
jnp
test
lds
and
test
push
mov
sbb
pushf
sbb
cmp
jle
dec
pop
or
lock
out
cmp
fidivrl
insb
pushf
decw
fstpl
and
das
arpl
cld
xor
rolb
lock
fcmovu
mov
or
cltd
in
je
mov
push
fxch
call
cmp
mov
xor
mov
jne
fnstenv
lods
xchg
pop
xlat
pop
push
test
jmp
fldt
sub
sub
and
sbbl
sub
or
or
jns
fldenv
nop
sub
jae
pop
jae
push
xor
mov
mov
outsl
fnstcw
data16
mov
mov
mov
push
jae
out
sti
add
sbb
stc
mov
test
rcr
add
arpl
int
push
cli
mov
inc
lods
ds
ror
rcrb
cli
cs
pop
xor
mov
mov
daa
jno
push
fiadds
add
flds
ljmp
inc
sbb
xchg
shlb
cmpl
push
je
xchg
sbb
inc
add
pop
cmp
mov
or
loopne
xchg
lods
aad
mov
out
ss
jp
xchg
gs
ljmp
fcomps
fcomi
push
sub
mov
push
xlat
mov
mov
movsb
notb
jns
or
std
mov
jle
call
xor
vprotb
xchg
popa
pop
mov
pop
xor
mov
in
add
jno
aas
add
and
mov
fnstcw
cmp
sbb
jo
push
stos
fcmovne
mov
imul
sbb
ret
cmp
shlb
insl
mov
loope
or
jo
popa
xchg
cmp
sbb
mov
mov
xor
movsl
jg
jne
push
or
mov
add
xchg
lret
adcb
jo
jp
mov
cmpsb
cmp
mov
inc
cmp
xor
add
out
enter
mov
int
test
add
les
popa
mov
adc
mov
js
xor
cltd
jp
mov
sub
push
imul
or
shll
xlat
adc
dec
cmpsb
add
out
js
call
int
jge
adc
jnp
mov
cmp
dec
orb
lret
test
fnstenv
fcmovnbe
and
sbb
loope
les
add
fchs
xor
push
pop
sbb
fstps
movl
cmp
cmp
movsb
dec
mov
push
cmp
jne
leave
inc
ja
push
sarb
bound
cwtl
andb
add
out
lret
test
cmp
adc
push
std
sbb
add
mov
addr16
mov
test
adc
jmp
stc
outsl
xchg
das
dec
cmp
mov
xor
cmpsl
std
sti
addr16
pop
mov
dec
push
movsb
bound
jl
push
jb
gs
push
ljmp
dec
inc
mov
adc
xchg
mov
js
bound
mov
mov
push
faddl
xorl
iret
xchg
sub
adcb
movsl
or
sub
fidivl
addr16
mov
or
enter
pop
in
sarl
cmpsb
ja
shlb
adc
adc
lahf
mov
ja
jno
fildl
push
inc
aad
daa
xor
jno
pop
or
mov
xlat
push
adc
fldenv
lods
mov
loop
pop
cmp
sbb
mov
rcrb
shll
js
sub
pop
imul
andnps
scas
negl
cmp
mov
ret
xchg
dec
cltd
push
dec
lgdtl
sti
sbb
jecxz
jge
loop
push
dec
dec
fdivl
shl
cwtl
cs
int
cmp
hlt
test
dec
adc
mov
scas
popa
mov
stc
addr16
fimuls
inc
mov
push
les
xlat
in
jae
lcall
mov
sbb
xlat
jns
lret
pushf
xlat
lods
dec
test
in
mov
ror
push
jp
push
or
mov
mov
add
pop
pusha
lret
xlat
inc
sti
pop
add
outsb
lcall
test
out
outsb
popl
and
xlat
nop
mov
je
addb
outsl
dec
les
out
push
xchg
cmp
cli
insl
xlat
mov
jae
mov
std
push
xlat
mov
cwtl
add
inc
sbbl
insl
cmp
adc
addr16
sub
pusha
dec
xor
and
out
in
stos
or
in
mov
icebp
dec
push
mov
jbe
bound
jl
xlat
mov
adc
test
fcmovnbe
push
cli
mov
imul
push
adc
lods
popf
and
in
mov
jns
imul
je
cmp
or
xlat
add
adcl
cmp
xor
sti
push
rorb
push
in
bound
adc
and
leave
mov
mov
flds
into
test
dec
mov
jle
clc
push
fldcw
repz
jmp
test
mov
test
xor
jno
xlat
ret
in
sbb
out
scas
dec
jns
push
add
imul
sbb
xor
bound
push
fstpt
fnstcw
or
cmpsl
and
mov
rcrl
in
out
xchg
or
and
sbb
push
or
xor
shll
and
dec
push
mov
xor
inc
jbe
test
sbb
insb
jecxz
ljmp
push
stc
sub
out
adc
dec
test
jge
inc
xchg
adc
dec
cwtl
sub
xor
dec
les
imul
mov
dec
push
cmp
out
xchg
jecxz
or
imul
mov
push
xrelease
ja
data16
shll
adcl
xchg
fstpt
xor
scas
stos
mov
jno
pop
lret
and
jae
in
dec
je
sub
jge
ret
je
add
mov
and
insb
and
fdiv
imul
sar
push
cli
fistpl
mov
dec
nop
dec
adc
and
incl
pop
dec
sub
sub
pop
idivl
sbb
inc
les
add
xchg
cli
imul
sub
mov
push
test
jns
in
fwait
stos
ret
cmp
in
adc
jmp
call
sbb
cmp
out
aam
fsubs
sbb
lock
add
xor
movsl
rcr
pop
dec
adc
pop
pop
pop
in
andl
and
sbb
sub
repnz
sti
ret
push
pop
cld
mov
aad
push
and
sbb
rol
insb
and
cmp
test
rcr
out
jl
xor
cmpsl
mov
mov
nop
mov
dec
lds
aam
mov
adc
jl
lret
pop
or
cmpsl
inc
inc
pop
mov
xor
gs
xorb
sbb
popa
mov
xor
jl,pn
test
pop
pop
aas
sbb
mov
push
xor
xchg
out
sbb
pop
and
movsl
sub
and
stc
cmpsb
out
or
cmp
fmuls
imul
fdivrs
push
ret
imul
mov
cmp
jns
sbb
in
test
inc
cmp
mov
cmp
sub
jns
add
js
scas
cwtl
ljmp
jle
icebp
xor
jbe
pop
xchg
movsl
cmpsb
xchg
stos
pop
sub
sub
push
xchg
je
lcall
cmp
loope
pop
mov
daa
js
out
lcall
ja
dec
xor
dec
sbb
test
add
push
add
aaa
dec
pop
repnz
loop
xor
rcrl
and
push
push
arpl
push
aaa
push
add
std
push
and
dec
add
mov
jb
test
or
std
adc
movsb
mov
add
int3
push
or
dec
or
fisubrl
xchg
xor
mov
and
xchg
nop
xchg
and
push
jnp
hlt
dec
ret
mov
cmpsb
ds
in
out
outsl
in
xchg
lret
add
ja
xchg
fmul
test
das
popf
adc
push
cwtl
xor
inc
pop
sub
outsl
cmpsl
mov
call
sbb
cmpsb
mov
push
push
mov
pop
setp
sub
js
inc
lea
aam
cmpsl
cld
inc
cmp
pushf
adc
dec
lods
jmp
shlb
lahf
pop
test
xchg
pop
push
xchg
loopw
mov
and
pop
mov
adcb
roll
jp
fyl2xp1
xchg
mov
jnp
mov
cmp
adc
xor
loopne
or
xor
mov
cs
and
jno
sbb
fdivs
idivb
inc
sub
cmpl
aam
or
mov
mull
jno
xchg
ljmp
lret
xchg
pop
add
adc
out
xchg
mov
mov
mov
mov
sbb
jo
rorb
cltd
loop
mov
mov
xlat
jae
ja
inc
ds
jl
mov
divl
push
mov
stc
leave
mov
mov
xchg
stc
sahf
pop
cmp
lods
js
and
cmpsl
sub
push
pop
stc
mov
ret
lret
push
lret
mov
pop
mov
movsb
aas
and
pop
insl
jle
outsb
ja
jmp
push
push
jbe
xchg
inc
push
rorl
jbe
dec
or
mov
jmp
js
or
mov
insb
push
mov
mov
cmp
or
ja
xlat
xor
mov
xor
or
test
in
push
push
mov
jns
xchg
loope
cmpsl
mov
xchg
ljmp
jno
rcr
pop
shrb
pop
sub
mov
push
stos
xchg
hlt
mov
xchg
sub
orb
mov
xchg
sub
push
or
xlat
mov
xchg
and
fdiv
loope
shl
ficomps
mov
push
in
daa
and
ljmp
xor
xlat
fidivrs
cmp
sub
jg
sbb
xchg
add
add
adc
xchg
imul
cmp
inc
dec
insl
lock
lret
repz
xor
sbb
fnstcw
imul
aad
imulb
jne
cmp
js
lea
lcall
lea
call
addr16
mov
push
cmp
mov
xor
stos
push
imul
ds
shlb
ret
dec
and
add
pushf
pop
xchg
or
movsl
and
push
mov
ljmp
jae
push
ret
push
dec
xor
daa
sbb
imul
xchg
loopne
sub
jae
pop
mov
xor
xchg
out
mov
ja
dec
fidivrl
mov
cmp
adc
lods
xor
sub
imul
add
cmp
enter
leave
dec
xor
in
push
xlat
outsl
scas
sti
mov
push
dec
sub
or
and
push
sbbl
jnp
xor
cmp
ret
movsl
bound
and
sub
notb
ret
cli
mov
je
in
push
sahf
push
xlat
outsb
jge
or
xchg
stc
inc
fistpl
fldpi
pop
cmp
inc
adc
inc
insb
pop
jno
add
int3
ss
in
jae
xchg
xlat
stos
in
and
imul
in
cmp
mov
push
sbbb
xor
and
dec
inc
in
xlat
mov
xor
adc
outsb
push
dec
iret
in
fwait
mov
dec
xlat
lock
mov
adc
enter
cmp
orl
scas
les
xchg
dec
ret
push
loop
xchg
arpl
push
aam
cmp
push
andb
dec
cmp
lcall
flds
out
xor
rolb
or
hlt
sbb
mov
jecxz
xor
fdivs
adc
and
sub
or
lcall
sub
xor
mov
test
je
sahf
fs
or
xor
jb
xchg
and
outsb
dec
mov
fcmovnu
adcb
rol
out
pop
or
sub
cli
or
pop
addr16
push
cmp
dec
dec
test
pop
pushf
and
movsb
push
inc
pop
stos
inc
dec
jns
adc
ret
push
iret
and
stc
or
leave
jae
xor
sbb
and
fldt
sub
push
xor
inc
add
pop
int3
push
lret
aas
cmpl
push
lds
push
fisttpl
popf
cmp
jbe
or
sub
cli
imul
ret
push
add
icebp
testb
lret
sbb
push
push
dec
ret
aad
rorb
fyl2x
cs
daa
sar
or
cld
lea
xchg
xchg
pushf
jo
dec
add
scas
mulb
push
ret
pushf
adc
ljmp
push
in
sarb
enter
pushl
out
fldcw
in
push
ret
pop
pop
pop
mov
in
inc
or
cmp
in
adc
cmp
and
mov
mov
out
jno
and
jle
icebp
add
scas
and
mov
pop
incb
or
mov
cli
inc
dec
dec
es
mov
pushl
cwtl
lods
call
int
push
sbb
inc
out
and
imul
dec
push
jle
les
out
pop
cmp
xor
cltd
add
repz
add
inc
jl
add
jae
sub
xchg
fldt
cmp
or
aas
push
sub
fs
test
mov
insb
jno
stos
lock
cmpsl
xor
sbb
adc
daa
or
pop
hlt
daa
lcall
repnz
fiaddl
mov
lods
sbb
pop
ljmp
nop
jae
fstpt
fisttpll
arpl
daa
mov
outsb
dec
jp
repnz
pop
test
cld
sub
push
cmpsl
adc
mov
lock
jecxz
ljmp
aad
fldcw
std
dec
out
sub
nop
inc
lret
mov
mov
sub
jge
fidivrs
outsl
sub
cmpsb
jp
shrb
xchg
stc
and
test
mov
mov
mov
lds
lods
and
lahf
lret
pop
xlat
js
mov
mov
push
pop
into
jae
and
movb
test
cs
xor
enter
imul
mov
lret
stos
xlat
fnstcw
movsl
cmp
lret
and
xchg
fsqrt
rorb
ljmp
push
push
cli
mov
jecxz
push
push
mov
insb
sti
jl
dec
cwtl
stos
xor
bound
push
pop
mov
xlat
pusha
dec
xor
cmp
sbb
sbb
test
push
and
movsl
into
dec
stc
subb
xor
push
xor
or
sub
sbb
sub
and
sub
orl
and
jb
xor
shll
and
std
adc
test
mov
add
aas
fistl
xor
adc
rclb
popa
test
xor
pop
xor
mov
push
in
jnp
push
stc
nop
mov
mov
push
mov
and
cmp
cmp
and
push
fldenv
push
adc
ret
xor
jl
xor
je
xlat
loop
add
cs
add
out
xchg
insb
ret
xor
aaa
and
xlat
and
les
icebp
ja
addr16
or
fistpl
ja
fnstenv
inc
push
mov
jb
sub
or
fucomp
inc
ret
cmc
pushf
rol
lret
imul
adc
fidivs
jg
fwait
mov
sbb
gs
xchg
andb
sub
cs
sub
or
jp
and
nop
inc
jae
movsb
push
push
jg
test
pop
sub
out
std
popf
hlt
sbb
stos
jne
xlat
cld
popa
jge
inc
jge
push
pushf
popf
aad
dec
jb
pop
mov
fistpll
cmp
mov
test
stc
movsb
pop
cmc
ss
xor
movsl
pop
pop
test
sahf
and
add
mov
jle
fnstenv
push
and
or
es
cmpsl
fldz
popf
dec
or
dec
mov
jne
imul
jge
faddl
or
mov
mov
push
push
xchg
out
xorl
jp
arpl
sbb
and
xchg
xchg
sbb
pop
loope
mov
imul
movsb
fwait
testb
adc
lret
stc
fstpl
movsl
xchg
movsb
xor
lcall
stos
jge
inc
cwtl
cs
sbb
call
cmp
sub
pop
call
mov
cmp
out
fcompl
jae
dec
add
fadd
push
ja
clc
fldenv
stos
sub
shl
inc
push
lea
mov
test
or
leave
sub
sbb
pop
outsl
add
mov
and
dec
shrb
dec
cmc
sub
ljmp
fs
stos
dec
cmp
rcll
xor
jnp
dec
or
shlb
add
pop
mov
fsubrp
fcmovbe
dec
pop
inc
sub
xchg
pusha
pop
sbb
pop
loop
pop
xor
xchg
and
dec
dec
push
test
fldenv
daa
sbb
pop
mov
dec
jp
popa
ret
into
cmp
into
or
pushf
cmpsl
add
icebp
or
lds
push
or
add
xlat
cli
data16
outsl
aam
daa
sbb
add
push
xor
cmpl
into
lock
mov
das
xor
xchg
dec
mov
rorb
jns
sub
xor
aam
xor
in
xchg
xor
lds
cs
dec
imul
push
lret
pushf
loopne
lods
mov
daa
sarb
jp
imul
outsl
nop
mov
jmp
addr16
jae
mov
iret
mov
fsubrl
fucom
call
imul
xchg
call
dec
enter
push
mov
sbb
gs
push
jnp
sbb
mov
dec
testl
jnp
xchg
sub
cmc
push
out
push
cli
popl
xchg
sub
popf
out
ss
xchg
add
sbb
dec
jne
pop
sbb
xchg
mov
test
sub
mov
sarl
imul
push
std
jne
inc
ret
and
pop
dec
cmp
sahf
mov
jge
and
das
jl
test
rol
jne
inc
ret
jno
or
mov
dec
fistl
ret
fnstsw
in
stos
cmp
and
jae
stos
sub
enter
push
lret
mov
insb
push
pushl
inc
insl
std
enter
fisttpl
push
mov
or
lahf
pop
aas
roll
out
sbb
jge
cld
jb
shrb
xchg
movsl
adc
lret
jecxz
or
xchg
stos
int
mov
ja
movsl
ret
stc
jge
movsl
mov
xchg
test
bound
or
dec
je
test
std
add
cli
cmp
pop
sbb
and
dec
sbb
xchg
xchg
out
test
xor
cmp
aas
addr16
sbb
pop
cltd
fisubl
inc
lea
cmp
nop
stc
dec
pop
fsubrl
mov
sub
aaa
inc
cmp
jge
push
popa
inc
cmpl
lea
mov
sbb
andb
or
lea
xor
repz
fnstcw
sahf
mov
fistpl
add
ja
cmp
jae
lret
out
or
inc
push
imul
cmc
jmp
xlat
ss
xchg
jae
ffreep
cmp
mov
idivb
jbe
pop
mov
xchg
xchg
adc
mov
sub
das
pushf
outsl
mov
push
xor
int3
or
sub
lret
mov
mov
xlat
das
mov
movb
scas
mov
jns
popf
inc
jl
sub
adc
imul
test
cmp
ja
sbb
fisubl
adc
std
mov
ja
ja
jo
push
xor
jne
mov
aam
jnp
dec
imul
sbb
push
cmp
rolb
and
insb
push
and
pop
sub
push
xor
cmp
repz
dec
jno
mov
pushf
pop
ret
cwtl
mov
sub
cmc
push
lods
sbb
imul
std
cltd
mov
pop
imul
shlb
pop
stos
xchg
ret
and
gs
adc
pop
mov
add
nop
aam
dec
shll
pop
clc
cmp
test
outsl
sub
test
fsts
and
adc
cmc
push
shll
xor
pop
test
mov
xlat
dec
inc
stos
leave
and
add
jg
or
jge
dec
and
aaa
cli
cli
mov
ss
xlat
daa
outsl
jecxz
mov
sbb
cli
jo
sub
or
out
jp
sbb
xor
and
adc
out
inc
ret
add
int
mov
outsb
pop
and
sahf
xchg
into
sbb
push
pop
adc
fwait
push
dec
mov
mov
cmp
mov
pop
pop
jae
jae
cmp
fsts
movsl
push
adc
lret
and
jbe
or
ds
fdivrl
jae
cmp
loop
push
sbbb
push
enter
in
push
leave
lahf
pop
cs
and
in
or
mov
loop
mov
push
test
icebp
jl
fstpt
enter
and
add
mov
fldt
dec
insb
xlat
out
sysenter
jl
fadds
push
push
or
pop
mov
inc
pop
and
aam
add
jmp
out
in
out
mov
or
in
fidivl
cmp
fcmovnb
xorl
dec
dec
fadd
adc
pop
xchg
decl
xor
xor
sub
xchg
std
dec
or
xchg
cmpsb
push
sti
sbb
xor
push
shrb
in
sbb
insl
xchg
icebp
shrl
jmp
xor
shlb
adc
xchg
in
test
cld
jmp
xchg
mov
mov
test
jnp
pop
xlat
xor
rcrb
adcb
xchg
sub
sbb
test
sub
nop
fdivrp
xor
xor
pushf
adc
sub
jnp
ret
mov
cmp
pop
dec
mov
pop
cwtl
std
jmp
sub
jg
out
jno
xlat
mov
cmp
mov
scas
cmp
lcall
dec
fsubs
ss
repnz
adc
jg
inc
xchg
mov
arpl
jo
jae
fidivs
push
dec
fiaddl
cmp
jmp
push
or
stos
or
xchg
outsl
push
data16
jp
ss
fimull
pushf
mov
or
aam
stc
rcl
or
xchg
push
cwtl
out
sbbl
cmp
ljmp
aam
add
pop
fsubl
or
adc
jp
rolb
cs
faddl
mov
pop
in
rcll
bswap
sbbl
fwait
subb
subl
adc
in
add
jb
mov
dec
push
dec
shufps
pop
inc
adc
lcall
insl
lahf
inc
push
pop
xor
push
stc
adcb
cmp
jae
cmp
leave
fdivrl
xchg
movsl
adc
push
dec
scas
out
daa
xchg
lods
adc
pop
pop
push
sub
fists
pop
mov
or
or
clc
outsl
out
popl
ss
rorl
popa
mov
add
jmp
fstps
xor
filds
repnz
sub
xor
mov
push
jp
stos
ret
sub
and
push
push
scas
cs
je
pop
out
out
or
sti
ds
xor
iret
push
dec
dec
cwtl
pop
jle
inc
repnz
and
dec
fildl
pop
xor
fbld
mov
adc
sbbl
mov
adc
inc
pop
mov
xchg
outsb
xor
add
mov
lea
cs
xchg
in
std
cli
fdivrp
or
imul
xor
nop
ja
mov
jmp
scas
mov
jge
mov
movsb
xchg
mov
testl
loopne
cmpsl
pop
mov
test
popa
inc
aam
cmp
xlat
cmp
mov
fisubs
cmp
push
test
and
std
sub
xchg
push
mov
push
xchg
pop
loopne
sub
rorl
insl
fidivrl
jg
xor
popf
push
mov
push
jge
in
xlat
aam
popf
and
ja
or
jp
cmp
adc
mov
iret
sarl
lods
dec
lods
push
jbe
jnp
mov
fistl
inc
xlat
inc
inc
ret
out
push
gs
mov
scas
fidivl
rcrb
pop
jbe
xlat
aaa
dec
jae
fnstenv
jg
scas
jb
imul
and
inc
call
xor
movsb
int
dec
jecxz
sbb
jbe
xor
cli
out
xor
dec
pop
lea
pusha
int3
js
or
sbb
fcoml
jmp
xor
rclb
mov
add
jno
adc
jne
das
stos
push
jo
fsubs
jb
lods
jns
and
inc
or
fs
and
push
jae
jns
pop
je
sbb
out
lret
jno
loope
adc
cmp
xor
repnz
inc
mov
push
pop
out
pop
jbe
inc
or
outsl
sar
fcmovne
pop
test
push
cmp
scas
imul
xlat
adc
push
rclb
ret
dec
lock
xchg
fisubl
daa
xor
or
pop
out
out
xlat
and
dec
and
gs
push
push
movsb
jl
imulb
pop
jmp
pop
xor
pop
inc
aam
jbe
jo
xlat
iret
jmp
or
fstps
mov
lds
push
test
pop
cmp
sbb
mov
push
push
xchg
push
js
js
sarl
arpl
jge
push
lret
or
lret
push
xor
js
jl
lret
add
sub
arpl
adc
xlat
lret
push
orl
cmp
xor
xor
cmp
push
jnp
mov
jl
mov
pop
add
push
jne
cmp
cmp
add
fcmove
mov
fnstcw
je
xor
sbb
cs
vpcmpeqd
dec
xchg
adc
xchg
ret
loop
sbb
cmp
jb
mov
cmpsl
and
mov
dec
push
iret
ret
fs
jp
ret
daa
dec
jmp
adc
lock
std
adc
ljmp
mov
lret
push
fxch
jns
adc
push
jae
int
sbb
sbb
mov
jno
test
jge
cli
lcall
cmp
dec
insl
dec
inc
push
flds
mov
push
loopne
xor
subb
adc
addr16
movsb
pop
outsl
aam
xchg
addr16
add
xchg
xor
jno
cld
dec
xchg
mov
fcoms
fxam
mov
outsb
jmp
cmp
mov
cmp
fucomip
mov
scas
mov
sbb
dec
inc
add
mov
xor
pusha
das
lahf
mov
jbe
jp
dec
bound
int3
decb
jb
jns
xchg
mov
das
cmp
xchg
arpl
jnp
in
jne
push
idivl
or
rcr
fisttpl
xchg
nop
jo
insl
test
mov
jge
or
out
push
movsb
aas
cltd
mov
out
jge
clc
out
dec
pop
fcmovne
push
je
cli
fiadds
call
stos
fsubrp
mov
add
inc
push
jmp
in
imul
jbe
mov
mov
arpl
and
push
roll
aas
jl
mov
inc
or
stc
sub
sti
push
pop
mov
mov
jno
daa
ja
cmpl
jg
mov
xlat
ret
xchg
sbbl
xlat
pusha
cmpsl
subb
int3
stos
sbb
cld
xor
sbb
ret
fcmovb
dec
movsb
stc
sub
push
jp
scas
dec
mov
fiaddl
std
rorb
loopne
sbb
das
add
sbb
stos
xchg
mov
pop
aad
mov
enter
push
xlat
repz
jge
or
insl
cmp
shlb
sahf
push
fwait
into
lods
add
add
or
inc
test
inc
aaa
xor
or
fistpll
inc
stos
cmp
ficompl
aad
cmp
scas
cmpsw
pop
pop
xchg
mov
daa
lods
stos
push
pop
sbb
iret
mov
imul
or
lret
arpl
daa
out
pop
aam
pop
sub
mov
push
add
in
sub
out
ss
jbe
jg
sub
add
xor
mov
aaa
xor
les
stos
lods
rcll
js
ror
stos
movsl
jnp
aam
clc
sub
jp
ret
jl
mov
push
or
out
pop
bound
xor
cmpsb
xor
rorl
bnd
mov
lahf
cmp
cmp
inc
adc
push
arpl
mov
mov
aad
pop
lds
pop
xor
in
cmp
mov
mov
test
jb
andb
adc
bnd
mov
popa
enter
stos
cmp
add
xor
flds
lret
test
cld
cmp
cmp
idivb
fnstenv
xchg
shl
rol
fisubl
xchg
xchg
cmp
cli
mov
daa
dec
test
outsb
testl
scas
mov
adc
pop
stc
in
int3
ss
mov
imul
mov
test
cmp
xor
pop
ja
sub
or
loope
inc
inc
xor
mov
pop
jo
pop
mov
push
test
loopne
pop
int3
pop
xor
insl
dec
mov
sub
mov
movsl
ret
std
sbb
pop
icebp
and
clc
push
sarl
pop
lahf
rcrl
pop
xchg
mov
in
paddb
dec
pop
std
push
add
dec
add
xchg
mov
sbb
sbb
popa
add
fstpt
ret
insb
imul
arpl
mov
stos
icebp
jl
mov
fiadds
outsb
dec
adc
and
jne
aaa
mov
xor
imul
or
and
inc
fisubs
ret
push
xchg
aas
jecxz
xor
adc
adcb
test
jge
dec
mov
push
and
xor
in
push
push
sub
push
add
into
rcll
test
and
xchg
pop
and
push
je
xchg
pusha
rcrl
frstor
push
jno
loopne
rorl
jns
subb
repz
or
fnstsw
push
mov
and
push
mov
out
lods
cmp
mov
push
pop
aaa
sbb
add
pushf
lcall
negl
cmp
fidivs
js
fstpt
push
shlb
jbe
repz
inc
mov
or
adc
lock
pop
mov
add
outsl
insl
pop
aad
push
dec
jle
js
cwtl
add
popa
xchg
or
orl
stc
scas
xlat
repz
rcrb
mov
sub
dec
jae
dec
sbb
daa
cwtl
xchg
push
data16
xchg
push
push
lods
add
adc
fstpt
inc
cmp
dec
pop
jl
jp
add
rcll
sbb
sub
repz
xlat
shll
outsl
mov
insl
cmpsl
jns
mov
jae
or
adc
push
and
aam
mov
jnp
xor
inc
bound
cmp
aas
or
gs
mov
cmp
sti
mov
outsb
ss
sub
jns
cmp
xorb
cmc
cmp
pushf
sbb
hlt
mov
shll
cmp
inc
xor
lcall
pop
pop
dec
push
test
jbe
js
cwtl
xor
sub
jno
or
xchg
lret
lock
dec
dec
aas
out
cltd
push
xor
ljmp
sub
push
std
add
stc
je
mov
mov
fldt
sti
pop
clc
dec
leave
insl
push
jae
jge
aas
flds
pop
mov
push
je
cld
cwtl
jbe
sub
cmp
mov
cmp
cwtl
sbbl
xchg
cs
adc
pop
adc
repnz
pop
add
fstpt
mov
movsl
jae
pop
in
out
flds
or
or
in
and
nop
pop
cmp
cmp
sbb
mov
mov
jg
mov
or
or
pop
fidivrl
cltd
mov
mov
jg
and
dec
mov
in
ljmp
arpl
fdivrs
pop
add
adc
out
mov
out
cmp
add
or
daa
or
fdivrs
decl
mov
pop
ret
xchg
std
dec
and
push
pushf
shll
jne
sbb
fcomps
sti
repz
inc
and
jl
add
push
je
pushf
cmp
loopne
adc
pop
lods
inc
lea
inc
fimull
jge
outsl
call
add
aam
movsl
adc
sub
mov
popf
mov
out
adc
sub
int3
or
adc
cli
add
icebp
in
test
int
cmp
inc
push
std
or
mov
movsl
sub
cltd
out
ja
pop
sbb
ret
cmp
in
jne
push
xor
dec
cwtl
nop
and
sti
shlb
push
mov
xchg
pop
add
push
jl,pn
jl
neg
stos
test
pop
shl
stc
and
flds
ljmp
fldl
jp
xor
push
xorb
push
mov
add
xor
cli
test
pop
outsl
insl
fnclex
aam
fsubs
sar
popa
pop
jbe
testb
and
jp
dec
or
sub
ja
adc
xchg
dec
sarl
pop
iret
imul
and
dec
out
repnz
ds
sbb
fisubl
jno
imul
and
mov
jmp
ret
lret
gs
outsb
jg
mov
fisubs
adc
ja
and
sbb
push
adc
xor
pop
jne
push
add
jge
popa
adc
cli
out
xor
sbb
xlat
dec
cmpl
sbb
and
mov
loop
call
flds
or
clc
js
es
mov
hlt
xchg
jp
xchg
pop
imul
jp
cld
dec
mov
add
leave
andb
hlt
sti
out
fwait
cmpsl
mov
fisubrs
push
sub
or
movsl
adc
pop
and
aam
insl
jne
inc
je
mov
ja
subb
bound
or
xchg
jno
stos
cmpsl
jno
xlat
ss
xchg
sbb
mov
push
dec
aas
inc
inc
pop
sbb
xchg
icebp
ds
push
and
cmp
xor
test
cli
je
dec
cld
and
jae
add
dec
popf
xlat
or
mov
adc
sub
pop
dec
movsl
mov
push
xlat
sub
push
push
mov
push
jnp
imul
push
xor
mov
sub
or
jb
xor
lods
das
pop
add
sbb
adcb
stos
mov
popa
fstpl
xor
test
sbb
jecxz
mov
and
jl
jecxz
pop
xchg
lcall
std
je
add
cmp
pop
cmc
out
shl
test
jno
mov
imul
ljmp
and
push
cmp
fidivrl
cmp
pop
pop
mov
xor
sub
push
call
mov
sbb
mov
push
xchg
adc
xchg
xor
dec
mov
ror
nop
xor
cmp
mov
pop
hlt
inc
pop
in
pop
jl
pop
sbb
insb
pushf
push
mov
mov
mov
arpl
xor
cltd
add
das
test
push
mov
mov
out
jp
xlat
rol
lret
call
push
sbbb
aas
pop
jp
cmp
xchg
arpl
sbbl
cs
and
cmp
fwait
in
push
or
pushf
jg
arpl
mov
imul
xor
je
push
xlat
lds
scas
sub
push
push
fwait
xor
cs
mov
shr
in
xorb
dec
pop
sbbb
hlt
sub
mov
cmp
insb
push
stos
sub
loop
pop
push
ret
stos
ucomiss
fimuls
mov
xchg
bound
in
sbb
fwait
pop
adc
xchg
sar
jp
test
fdivrl
cmp
jp
addr16
sbb
xchg
lods
sbb
sbb
insl
jl
movsb
cmp
xlat
push
cwtl
mov
out
jp
imul
lahf
fdivrs
rcrl
icebp
addr16
xchg
stos
push
or
jae
jle
sbb
aaa
jne
xor
jle
sbb
push
cmp
mov
sub
stc
and
leave
mov
fs
in
jae
in
fcmovnb
out
pop
inc
iret
add
imul
ss
gs
outsl
mov
mov
jl
add
and
pop
shll
xchg
das
std
xchg
sub
or
adc
jecxz
je
dec
mov
inc
arpl
sarb
and
mov
imul
mov
add
mov
mov
inc
addr16
push
dec
test
xor
xchg
pop
mov
dec
test
xor
dec
dec
fcmove
push
pop
xor
adc
xchg
lret
lret
sub
mov
bound
push
pop
fisttpl
outsl
push
jge
mov
adc
in
pop
in
jno
je
mov
lret
stc
adc
push
cltd
pop
or
and
sbb
test
jno
lret
mov
imul
mov
adc
aam
xor
fstps
pop
repnz
mov
scas
aad
out
push
cmp
or
jo
fistpl
movsl
pop
pop
cmpb
add
inc
ja
sub
adc
insb
and
aaa
jne
adcb
pusha
jle
push
cwtl
loopne
ret
cli
mov
repnz
mov
dec
jno
jle
mov
push
fidivs
dec
adc
adc
icebp
fsubrs
dec
ffreep
lahf
jno
inc
mov
addr16
cwtl
mov
sbbl
adc
or
push
rcrb
sub
xor
push
ffreep
mov
scas
and
test
out
push
stos
test
jnp
cs
add
jno
xlat
adc
jecxz
std
loope
inc
cli
sbbb
push
bound
scas
lret
je
push
jmp
and
das
lock
out
bnd
cmp
loope
xlat
divb
pop
inc
ljmp
in
jno
je
pop
mov
or
sahf
sbb
lods
add
insb
mov
jge
push
xor
push
push
sbb
and
jmp
add
inc
xchg
lds
xchg
dec
data16
cmp
arpl
inc
inc
adcl
stc
cwtl
jne
pushf
andb
jno
pop
jl
mov
mov
pop
shr
fsincos
add
mov
pop
sub
inc
outsl
fldcw
xorb
popf
sub
inc
sub
fwait
lods
aas
loopne
sub
nop
fldt
clc
adc
aaa
ljmp
cmp
push
sarl
cltd
or
out
jecxz
dec
leave
shrb
sbb
jns
popf
pushf
add
mov
addr16
in
push
pop
dec
mov
push
xchg
adc
push
xlat
and
adc
ret
cmp
out
pushf
cmp
leave
push
stos
fst
pop
jmp
cmpsl
mov
aam
sub
frstpm(287
xor
and
movsb
test
xor
xor
push
add
sub
inc
cmpl
gs
push
or
add
aam
ret
xchg
push
xlat
mov
fisttpl
xchg
ja
push
xchg
out
sbbb
mov
jns
int
jp
xlat
mov
xor
fwait
test
pop
adc
pop
fwait
xlat
das
inc
imul
xor
sbb
pop
fadds
adc
out
pop
mov
fnstcw
stos
int3
sub
arpl
inc
pushf
cmpsb
jg
sbb
sub
dec
or
or
jb
xlat
lea
out
fists
xor
lea
push
je
jbe
into
jg
jae
in
addr16
sub
sub
mov
fisttpl
pushfw
fdivs
imul
addr16
lahf
addr16
sub
cmpsl
lret
adcl
xlat
and
fcmovnbe
mov
jnp
test
ret
jecxz
push
popa
pop
mov
and
cltd
cmp
pop
jge
cmp
push
loop
pop
mov
xorb
das
das
cli
scas
mov
push
add
andb
and
dec
cwtl
cmp
nop
sbb
in
out
dec
dec
inc
ljmp
arpl
int3
mov
mov
popa
int
add
pop
dec
mov
add
lret
push
ja
dec
jno
out
cmp
xor
es
cmp
xchg
test
aad
stos
xchg
inc
cmc
imul
xlat
or
pop
js
stos
add
out
mov
cmp
ds
sbb
dec
and
jmp
and
fninit
jmp
push
int
leave
pop
popa
aam
into
and
cltd
xor
ret
enter
sbb
xchg
outsl
fsts
aam
add
nop
xchg
mov
fildl
mov
push
outsl
data16
cld
sbb
jg
cwtl
sarb
inc
les
or
cmpsb
push
pop
xlat
jp
sbbb
stc
mov
bound
bound
or
cmpsl
mov
data16
mov
mov
and
push
inc
and
pop
in
pop
aad
dec
mov
insb
iret
fsts
rorl
jp
and
dec
cmpsb
or
pop
dec
add
loop
out
loopne
rcrb
mov
inc
add
sbb
mov
mov
rcrb
add
mov
xchg
rcrb
mov
or
test
adc
add
ret
es
pop
repz
stos
cmpsl
jbe
pop
mov
xor
inc
pushf
loope
mov
and
cli
fidivrs
xchg
jae
test
xor
push
mov
sub
bound
enter
movsb
hlt
repz
lock
pop
cmp
mov
fists
jb
push
add
cmpsb
cmp
xor
inc
xchg
sbb
out
jo
cmp
pushl
xor
repz
cmp
imul
sahf
push
fcmovnb
sar
xor
dec
test
and
outsb
push
or
nop
out
aad
das
adc
adc
mov
xchg
inc
sbb
mov
popf
jno
rcr
std
mov
imul
pop
mov
push
and
sbb
adc
or
stc
loopne
sbb
fwait
push
pushf
mov
jns
sub
inc
ret
fildl
ljmp
xchg
push
mov
sub
lods
lods
add
and
sbb
sub
mov
popa
in
pop
lret
xchg
leave
mov
mov
movsb
clc
loope
mov
mov
xlat
add
mov
dec
add
sbb
add
sub
mov
stc
sub
mov
jge
call
sbb
out
hlt
pop
sbb
push
xor
pop
xor
pop
sbb
mov
mov
xor
rcr
adc
push
aaa
gs
scas
push
sub
aad
testl
test
test
jl
in
push
mov
cli
sub
fs
dec
sub
xor
arpl
roll
hlt
out
outsl
xorl
cmpsl
ret
or
jg
push
popf
sbb
pop
in
push
pop
and
or
rcrb
popf
shlb
dec
push
sbbb
cli
jae
and
jne
mov
pop
pop
jmp
pop
xchg
jae
and
data16
or
mov
nop
xor
imul
cmp
cmp
mov
in
dec
sbb
push
mov
mov
fwait
cmc
jbe
mov
mov
jo
xlat
mov
lret
shrb
cmp
jo
dec
or
movsb
outsl
jne
lock
in
push
jne
dec
fcmovnb
movsl
add
stos
inc
cmp
call
push
and
jg
jl
cmp
das
xchg
inc
mov
out
in
aam
mov
sub
mov
xor
push
int
scas
ret
or
jg
leave
loopne
push
and
stc
std
or
dec
xor
int3
cli
mov
sub
xor
pushf
xor
adc
popa
stc
jge
jl
add
push
cwtl
inc
push
cmp
pop
xor
and
jp
mov
jns
push
and
dec
add
pop
cmp
dec
mov
out
push
addb
xchg
mov
les
popf
sbb
dec
mov
jnp
jae
rorl
mov
iret
jle
les
mov
jbe
in
or
lods
pusha
inc
pop
imul
mov
leave
xor
jnp
bound
mov
mov
mov
sbb
out
out
push
cli
and
out
jmp
pop
jae
sbb
ficompl
jmp
lret
xor
mov
cltd
out
dec
fnstenv
lret
mov
mov
aaa
fstpt
and
mov
mov
loop
lcall
cmpsb
mov
or
gs
jp
cwtl
push
cmp
icebp
adcl
and
mov
int3
mov
outsb
jnp
gs
lods
insl
mov
sti
and
out
lcall
insl
mov
in
xchg
dec
mov
dec
pushf
lret
or
pop
and
fs
cmpsb
fwait
sub
adc
mov
mov
adc
sbb
insl
mov
push
pushf
cs
inc
lret
mov
xor
movsl
ds
cmp
jmp
ljmp
test
sahf
xor
hlt
stos
jb
test
sbb
or
sub
sahf
ret
paddusb
popf
gs
pop
jg
into
dec
stos
loope
sub
push
imul
jp
es
xor
imul
fidivs
add
xlat
mov
fmul
call
lods
xchg
leave
popl
pushf
sbb
or
cltd
xlat
sub
imul
stos
ds
cld
inc
imul
mov
repz
xor
cmp
divl
mov
jge
sbb
push
xor
stos
ds
in
mov
popl
xor
ficompl
xlat
xchg
mov
imul
inc
mov
mov
rcl
xor
and
dec
mov
jnp
flds
pop
fsubrl
mov
mov
insb
and
fcomi
cmp
jnp
inc
movsl
insb
fcompp
xor
cmpsb
mov
test
lock
xchg
or
addr16
add
jl
add
enter
push
in
shll
fistl
test
sub
jbe
pop
aam
push
jp
test
repz
stos
cmpl
inc
jae
fldenv
sbb
add
lcall
push
and
inc
incb
and
js
sbb
mov
sub
or
fldt
mov
cli
sbb
pop
mov
arpl
sahf
dec
lahf
loope
inc
adc
rorb
dec
cmp
jbe
pop
fcomp
cmp
mov
jp
scas
mov
mov
dec
out
je
xchg
std
xchg
push
call
pop
sahf
lods
inc
and
fucomi
sub
and
outsb
fidivrl
adc
adc
mov
dec
mov
jns
inc
inc
repz
pop
cli
stos
add
pop
sub
push
mov
cmp
mov
xor
dec
aad
and
lea
fwait
mov
test
add
paddusw
adc
or
pop
and
je
gs
movsb
ret
sub
adc
ficomps
xchg
xor
mov
loop
negl
stos
sti
gs
cwtl
mov
out
jle
mov
jnp
stc
stc
sub
mov
pop
ljmp
aad
ret
pop
push
stos
xor
fimuls
repz
push
adc
in
mov
ljmp
mov
inc
jae
fldt
into
sub
movsb
int3
in
es
sbb
mulb
pop
dec
mov
cmpsb
xchg
push
call
cld
jbe
pushf
movsl
dec
loop
rorb
sub
push
push
or
cmpl
add
cmp
and
xor
sub
aas
gs
lods
arpl
xlat
or
xor
xlat
std
clc
dec
scas
test
les
movsb
inc
mov
repz
adc
sub
add
fisttpll
pop
adc
dec
lcall
repnz
and
cmc
popa
stc
iret
shlb
fucomi
fwait
test
loopne
inc
rcrb
xchg
decb
out
xor
addr16
mov
mov
lret
add
cs
test
lret
xchg
xor
stc
hlt
insl
daa
ret
test
mov
aam
and
sti
xlat
sub
mov
decl
pop
pop
outsb
aaa
cmp
scas
push
divb
jecxz
push
jle
jbe
xchg
mov
cld
push
scas
pop
arpl
mov
in
iret
loop
fadd
mov
in
pop
push
xchg
out
into
daa
stc
mov
dec
dec
or
sub
dec
fwait
sbbb
out
arpl
popf
cmc
cmp
add
movsl
jns
fsts
stos
xchg
mov
insl
fstpt
test
xlat
inc
mov
mov
ftst
cwtl
sub
flds
data16
push
mov
fstps
call
adc
flds
dec
clc
jae
sbb
sti
cltd
fistl
sar
or
add
lds
sub
mov
inc
outsb
and
gs
shll
inc
or
xchg
fidivrs
and
addr16
mov
pop
repz
inc
data16
test
hlt
jb
pop
mov
fwait
push
dec
ret
sti
dec
push
pop
sbb
add
ret
lcall
jle
mov
push
mov
xchg
mov
cmp
in
jle
test
xor
or
mov
cltd
push
mov
xchg
push
ja
pop
repz
daa
dec
push
mov
test
test
imul
rcll
dec
jl
mov
pop
jno
or
ss
jnp
lcall
ret
xor
jp
addr16
stc
xchg
sbb
mov
xor
or
stos
orb
lahf
xor
sbb
xchg
cmp
push
imul
fildl
test
mov
xor
out
jmp
sub
pop
push
add
stos
push
jae
sbb
adc
mov
mov
and
jle
xor
std
xorl
aas
outsl
mov
loopne
in
push
dec
test
xchg
loop
loope
std
xchg
dec
xlat
or
out
and
out
lock
imul
mov
jmp
lret
add
loop
mov
xchg
push
xlat
enter
cmp
mov
lea
xchg
sarb
jge
rclb
add
sahf
out
aaa
mov
inc
sub
dec
add
ljmp
lea
outsb
adc
stos
sti
cmpb
mov
push
cmpsl
jp
xchg
je,pt
adc
fcoml
ds
inc
jmp
repnz
outsb
pop
jae
loope
pop
dec
icebp
mov
out
add
icebp
test
rorl
lods
pop
dec
jp
xchg
push
les
xlat
mov
lahf
adcb
in
sbb
imul
dec
mov
and
mov
xlat
rclb
cs
and
fsubp
mov
sbb
in
ficompl
stc
fs
mov
lds
pop
cwtl
xchg
jne
daa
sbb
shll
push
pushf
stc
mov
sti
test
out
lret
jns
jb
inc
mov
mov
imul
fiadds
push
fwait
xor
push
lret
mov
adc
inc
loope
fwait
hlt
dec
mov
mull
clc
insb
aas
or
mov
fldcw
fwait
leave
jg
and
xchg
int
fdiv
xchg
mov
or
xchg
mov
std
mov
imul
push
faddl
pop
or
sub
lret
mov
ljmp
jnp
mov
or
jle
or
in
daa
aaa
pop
ja
mov
pop
push
mov
mov
add
enter
mov
xchg
cmp
fcmovnu
in
aaa
popf
shlb
stos
dec
and
pop
xchg
dec
andl
jne
pushf
sub
shll
xor
mov
loop
pop
aad
or
inc
jl
arpl
mov
adc
push
icebp
shl
jge
mov
fdivs
shll
or
cmp
movsb
and
xorb
add
sub
cmp
pop
push
push
popa
out
insl
or
push
xor
xor
dec
pop
addr16
loopne
test
sarl
jecxz
inc
xlat
movsb
sbb
dec
dec
cmp
mov
dec
xchg
jp
hlt
sarb
mov
addr16
movl
fmuls
int
insl
cmp
lret
ds
pushf
jo
mov
push
and
dec
xor
fildl
mov
pop
cmp
push
mov
js
sbb
sbb
stc
frstor
arpl
sbb
in
ds
push
adc
mov
scas
inc
insl
mov
pop
sbb
lods
and
and
call
sti
lock
std
js
and
mov
cmp
adc
dec
jg
leave
xchg
test
sbb
in
cwtl
xor
scas
pop
jge
fldcw
mov
out
jno
inc
cwtl
jne
mov
pushf
test
cmp
adc
lret
idivl
ja
push
xor
movsl
pop
and
jne
pop
add
test
dec
pop
sub
mov
push
add
fnstenv
mov
fidivrl
into
int3
push
mov
mov
aam
push
mov
ja
cmp
jnp
dec
or
and
pop
cmpsb
pop
outsl
push
cmp
add
ja
jecxz
pop
movsb
ret
insb
cmpsb
push
xor
out
fildl
cmpsl
mov
ljmp
mov
adc
pop
fcmovnu
cwtl
jmp
xor
or
mov
sti
in
outsl
fimuls
xor
cmp
sub
sub
or
xor
jnp
out
imul
or
dec
aam
push
aaa
pop
cltd
push
push
xor
cmp
pop
cli
in
mov
sub
sub
stc
jnp
dec
fdivs
adc
push
xchg
xorl
sbb
subl
pop
rcrb
cmp
push
testl
mov
or
popf
lcall
cmp
stos
inc
mov
mov
sbb
mov
sbb
pushf
out
jp
pop
xor
xlat
fidivs
popf
jb
bound
add
lahf
repz
mov
hlt
jae
cld
fistps
adc
fmuls
xchg
pop
add
lahf
fisubrs
pushf
cmc
enter
cmp
add
sub
out
pop
imul
dec
dec
test
mov
jbe
clc
lahf
sarb
push
loop
inc
dec
pop
sub
jp
sbbb
cmpsb
sub
pop
xor
sub
sub
push
rcll
xor
xor
sub
push
in
hlt
cmp
leave
cmp
mov
dec
jns
mov
jnp
popf
xchg
outsl
jne
clc
xor
push
xor
xor
fs
out
aad
das
imul
loope
rcr
popf
and
sub
fisttps
and
pop
push
xor
repnz
or
cmc
data16
in
aas
fstps
imul
sub
in
jp
cmp
cmp
fwait
xor
icebp
xor
mov
ja
jmp
mov
and
xor
or
dec
std
sub
push
test
cld
out
faddp
and
xor
or
orb
sbb
imul
out
cmp
mov
cmp
xor
fldt
lds
or
dec
xchg
dec
adc
inc
and
or
pop
pop
cmpb
stc
pop
std
ret
mov
imul
mov
ja
push
xlat
test
scas
mov
inc
jb
ficomps
pop
jmp
adc
cmpl
or
fisttpll
pop
stos
inc
push
out
imul
rclb
xlat
inc
fsts
aam
jb
xchg
or
mov
xlat
mov
es
add
push
jae
testb
inc
inc
mov
out
cmp
js
push
fldl
subl
loopne
dec
imul
pop
aad
shlb
arpl
fwait
pushf
jns
dec
and
dec
dec
jne
or
or
jge
ds
pop
inc
fsubl
and
inc
std
xor
adc
mov
out
addr16
mov
xchg
mov
in
repz
inc
enter
test
sub
hlt
js
sahf
int3
data16
dec
ljmp
out
inc
mov
sub
mov
xor
and
and
adc
sar
push
inc
jns
std
add
adc
andb
jae
jbe
xchg
daa
or
cmp
jae
xchg
es
jnp
and
and
loop
lds
sub
mov
xor
cwtl
fs
js
add
sahf
pop
dec
jg
sbb
mov
fldt
mov
push
and
dec
outsl
pop
pop
dec
pop
pop
repnz
add
in
xchg
push
popf
stos
jne
test
fld
and
cltd
jl
fsts
pop
pop
sub
sub
frstor
mov
or
sub
or
loopne
cwtl
sub
fistl
and
jp
dec
stos
test
dec
nop
negb
jbe
fidivs
test
mov
dec
mov
lahf
test
out
mov
jns
cli
out
repnz
xor
dec
lret
out
pop
sub
xor
cmpsb
out
iret
jb
jmp
and
dec
add
fwait
or
pushf
sbb
pushf
out
imul
pop
lret
inc
dec
xchg
xor
cs
xlat
xor
rcrb
jae
mov
xlat
jge
lds
fs
mov
push
aaa
test
scas
je
pop
add
cli
mov
pop
push
fxch
and
lock
dec
lds
fstpt
push
push
adc
jnp
adc
pop
fs
pop
cld
rorl
jnp
les
or
scas
push
ret
test
sub
xlat
jp
daa
sbb
into
scas
mov
lds
jns
cmp
pop
loopne
data16
xor
test
movsb
adc
insb
mov
xlat
pushf
je
add
scas
sub
pop
dec
scas
fdivs
test
daa
jg
icebp
fidivrs
aas
in
or
jl
or
aam
imul
and
mov
push
imul
add
lcall
cmp
mov
mov
negl
jno
movsl
mov
xchg
ds
stos
push
push
inc
lcall
and
fstenv
jae
xlat
jecxz
ja
push
fildl
bound
hlt
push
stos
pop
cmp
cmp
adc
jne
inc
pop
rclb
dec
xor
jbe
enter
movsl
add
insl
lahf
jmp
popf
and
insl
push
ror
int
dec
jb
lods
cmp
pop
imul
mov
mov
sbb
fucomi
sbb
lcall
andl
ds
fldt
data16
addr16
ljmp
or
jle
lods
test
aaa
cli
insl
shl
and
xor
xchg
cmp
sub
lret
mov
fldt
xor
xor
push
push
cmp
pop
pop
lea
cmp
nop
pop
rclb
test
push
push
push
in
in
and
jge
in
fisttpl
xchg
test
inc
mov
jae
mov
adc
js
sub
pop
xchg
shr
jl,pn
das
imul
sarl
call
or
les
das
loope
xor
bound
mov
push
sub
pop
scas
mov
les
cmp
jae
cltd
call
popf
test
cmp
cltd
nop
sahf
dec
lea
dec
cmpsl
sbb
ja
rcll
lcall
adc
fdivs
cmp
ljmp
packsswb
xlat
daa
push
into
shrl
xchg
add
insb
push
xor
fildl
in
push
leave
mov
jo
subl
daa
cmp
jb
dec
cltd
mov
cli
clc
pop
and
mulb
call
mov
pop
push
pusha
xor
adc
lds
in
out
mov
jmp
andb
fs
jl
cmpsl
sti
jp
mov
sub
iret
jnp
sub
int3
fldcw
in
arpl
mov
rorl
repz
sahf
mov
loop
hlt
pop
lea
in
inc
imul
pushf
movsl
out
test
lock
and
pop
mov
fldt
sahf
and
repnz
jne
rcr
inc
fwait
test
inc
shr
cmpsl
push
sbb
dec
mov
in
stos
adc
jl
sti
jo
push
cmc
or
add
xor
cmp
jmp
cmp
xor
and
aaa
dec
into
xor
popa
icebp
and
mov
and
rolb
pop
fdivrl
inc
or
cmp
mov
and
cmp
out
push
jmp
pop
aam
movb
push
sub
daa
inc
outsb
aam
mov
or
orb
jae
jbe
repnz
lods
adc
inc
push
iret
js
aaa
pop
mov
jo
insb
and
and
xchg
sub
pop
frstor
fildl
mov
imulb
fisttpl
jb
mov
int3
jno
repnz
jg
imul
and
xchg
or
or
xchg
aam
pop
iret
aam
adc
or
inc
std
mov
sub
test
cmp
insl
mov
les
add
push
popa
cli
pop
out
lahf
popf
sarl
xchg
aas
xor
mov
sub
out
cmpb
xchg
ja
cltd
sbbb
clc
sub
xor
sub
out
rol
and
std
inc
xorl
fcmovu
jne
adc
mov
cmp
mov
xchg
outsl
xor
repz
fstps
jp
shlb
outsb
sub
pusha
sub
push
dec
fst
xchg
add
pop
clc
in
mov
loopne
fldl
mov
mov
cwtl
addl
ret
out
push
xor
push
add
push
xor
outsl
out
pop
imul
cmp
and
pop
mov
aaa
or
ss
fwait
clc
decl
std
adc
mov
dec
xchg
loopne
mov
insl
shrb
fnstenv
jl
cmpsb
or
inc
and
add
lahf
jno
mov
adc
push
xlat
push
test
aad
cs
and
add
jae
lcall
and
inc
jg
or
or
jg
sti
std
pop
orb
test
and
cli
push
mov
mov
cwtl
mov
push
xor
ja
pushf
ds
fisttpl
cltd
ljmp
add
sub
cmp
movsl
sub
test
movsl
pop
or
jle
xchg
add
mov
xor
sub
fistl
ljmp
jg
jae
out
xor
jne
xlat
cmp
push
js
adc
sub
sbb
sbb
mov
mov
divb
sti
mov
insl
scas
rorl
pop
mov
pop
and
ret
addr16
addr16
aam
rcll
add
and
sbb
js
leave
xchg
mov
rclb
xchg
addr16
mov
jo
es
dec
into
pop
sub
icebp
or
movsb
adc
and
dec
test
rclb
jge
jge
test
or
aad
jle
repz
or
into
sub
idivb
adc
xor
cmpsl
insb
cmp
mov
dec
fsubp
inc
pop
ds
fldln2
mov
and
and
sbb
std
shlb
loope
adc
fdivr
sub
shl
flds
sbb
das
into
mov
mov
inc
inc
xlat
int
sbb
cmp
fld
mov
in
bound
imul
xorb
push
flds
cli
imul
or
insb
xchg
dec
pushf
stc
inc
dec
sti
rclb
iret
cli
push
cli
xlat
aam
push
cmp
and
xor
daa
mov
add
flds
ret
fld1
inc
cmp
out
cmp
cltd
adc
in
push
xlat
pusha
push
cs
scas
mov
dec
cs
xlat
mov
insl
inc
fadd
push
push
mov
cld
or
addl
mov
inc
add
stos
sbbb
xchg
or
dec
fwait
rcrl
ja
shrl
xor
sub
add
stc
mov
ljmp
dec
shl
lcall
mov
lret
daa
sbb
sub
xor
cltd
jge
out
inc
repnz
mov
push
cmp
and
or
aaa
push
jbe
scas
ljmp
lds
cmp
dec
sub
divb
pop
mov
mov
fidivl
lods
addl
fnsave
ret
cmp
inc
inc
fistpl
mov
mov
pop
xor
jno
mov
decb
sbbl
jp
stos
inc
sbb
std
bound
enter
xlat
sub
shll
xor
lods
shlb
mov
pop
sub
xchg
sub
cmp
scas
cld
jae
jmp
mov
jb
push
inc
notb
cmpl
pop
insb
pop
hlt
sub
or
cmp
dec
pop
imul
mov
jg
stos
out
adc
popa
outsl
divl
dec
cwtl
imul
enter
lods
loopne
in
push
push
adc
insl
sub
jne
lods
or
pop
test
push
xlat
in
cmp
loope
cmc
sub
nop
sub
add
lods
addr16
lret
lds
jb
sub
fs
rcr
scas
sti
fcmovnu
xor
or
mov
sarb
push
xchg
dec
jbe
fsubp
clc
aaa
movsb
mov
cwtl
sahf
sub
mov
je
insl
cmpsl
lret
xchg
cmp
and
cltd
leave
push
mov
clc
nop
in
fsubrp
nop
cmp
mov
nop
mov
jbe
sub
sbb
pushf
sbb
inc
xor
jp
rclb
or
test
enter
daa
shlb
sub
pop
cmp
out
fdivs
mov
movsl
xorl
xor
andl
loop
and
in
xor
xchg
jmp
inc
leave
fsts
aam
mov
dec
pop
movl
xor
sti
inc
loop
inc
sbb
iret
rcl
mov
mov
push
and
lret
jg
leave
into
mov
cmp
out
sbb
fdiv
xor
jp
rcrl
lcall
fldenv
mov
movsl
sbbl
imul
shrl
pop
lret
push
pop
das
dec
dec
jecxz
sbb
shl
and
loopne
mov
cmp
mov
jnp
add
push
dec
aam
adc
cmp
jge
sti
fmul
sbb
fwait
ret
and
sub
dec
pop
jae
lret
mov
jae
mov
jmp
cmpsl
adc
sub
lock
jae
rcll
movsl
jmp
dec
inc
pop
dec
push
sub
dec
test
or
pop
lret
adc
jns,pn
cmp
jg
xor
jmp
arpl
pop
and
fistpl
arpl
dec
cs
movsl
fninit
sbb
repnz
inc
cltd
pop
push
or
jno
fistpl
and
cwtl
rcrl
push
jno
sbb
shl
xchg
add
addr16
stos
mov
lret
and
add
mov
int
pop
dec
xchg
repz
ds
loope
jnp
enter
es
aaa
shll
repnz
jb
adc
aaa
shll
mov
and
xlat
pop
arpl
pop
sbbb
mov
fsubrp
push
or
pcmpgtw
or
das
lods
push
or
and
xor
mov
repz
cmp
sub
test
inc
pop
mov
insb
mov
cmp
fisttpl
movl
outsb
repnz
add
mov
jecxz
test
xchg
sti
aam
out
pop
sbb
jnp
mov
jle
cmp
xor
fdivp
add
mov
cltd
pop
jmp
lock
icebp
call
mov
aam
mov
pop
iret
pop
adc
fs
sbb
xor
push
xchg
lahf
cltd
mov
call
sbb
dec
pop
jne
ficoml
ja
out
shrl
popa
push
mov
mov
jbe
lret
xor
xorl
mov
clc
mov
icebp
movsl
sbb
mov
nop
cld
subb
cs
insb
inc
and
in
rolb
enter
and
cmp
dec
pop
cs
push
out
cmp
dec
stc
pushf
gs
jno
cmp
mov
xchg
les
jle
enter
adc
stc
out
mov
xchg
test
jbe
dec
sbb
cltd
sub
ds
push
jg
add
jbe
sbb
xor
repnz
insl
daa
xor
lret
out
jle
adc
aaa
dec
lods
gs
sub
mov
add
outsl
pop
negl
je
fcmovnbe
cmc
pop
fnstenv
dec
insl
pop
inc
sarl
shrl
fld1
push
hlt
and
or
lret
sbb
jae
out
xor
arpl
sahf
xchg
push
add
xchg
pop
jmp
cld
sbb
push
xchg
std
pop
push
push
xchg
push
xchg
jae
mov
jl
lcall
lea
dec
sub
cli
inc
sbbb
rcr
out
xchg
push
fcomps
pushf
inc
inc
xlat
inc
dec
fisttpl
pusha
push
xor
xor
scas
adcl
sbb
lcall
lret
mov
jo
add
aaa
cmp
shl
jnp
dec
mov
pop
push
fistpll
push
imul
dec
imul
pop
or
leave
lret
jbe
jp
fildl
jae
mov
mov
push
fcomps
push
lret
das
ds
mov
or
mov
adc
sbb
cs
cmp
in
xchg
add
dec
jg
jl
call
jp
pop
jl
push
icebp
pushf
mov
stos
hlt
pop
mov
add
push
movsb
fists
adc
lcall
lret
jno
add
aas
jne
jae
jns
pushf
popf
cmp
popa
push
pop
int
sbb
adc
mov
xor
cmp
aad
addr16
cmp
pop
dec
mov
jae
enter
sub
pop
fbstp
jg
out
daa
bound
dec
filds
popf
jne
xchg
jmp
test
jb
mov
ljmp
xor
notb
mov
jge
sbb
jg
mov
hlt
data16
jl
shrb
mov
sahf
mov
mov
shrb
xchg
in
push
cmp
pop
inc
mul
shll
je
sbb
shlb
cmp
repz
mov
jb
sub
jge
cs
imul
xchg
xor
pop
inc
scas
cmp
cmc
subl
rclb
pop
dec
mov
and
cs
mov
xchg
jecxz
outsb
adc
jb
xor
or
inc
fisttps
pushf
lahf
mov
ud0
xor
mov
enter
pop
cmp
or
out
sub
les
cmp
xlat
cmpsb
lea
cmp
ficompl
jns
sub
or
xchg
jne
xlat
xchg
mov
loope
lcall
jae
lret
dec
inc
jecxz
mov
push
outsb
pop
andl
in
cmpsb
in
mov
push
xchg
fimuls
loope
ljmp
in
inc
imul
or
ret
and
sarb
aam
mov
scas
pop
push
and
sbb
icebp
out
inc
pop
sub
mov
lret
mov
push
scas
stos
icebp
mov
sub
jle
test
scas
add
add
mov
stos
gs
stos
mov
xor
cmp
mov
ret
add
rcrb
and
sbb
pop
or
jl
adc
jbe
mov
fstp
jge
push
sbb
add
mov
imul
adc
jl
adc
and
imul
pop
xor
xorb
adc
ret
popf
test
pop
aad
iret
das
cmpb
lss
jae
mov
mov
sub
jp
scas
jmp
lret
dec
xor
dec
shll
jmp
lret
adc
sbb
fimuls
fucomp
sub
lret
outsb
xor
mov
daa
sub
jno
or
xlat
and
jne
mov
jg
pop
pop
and
ret
dec
lahf
sbbl
dec
mov
jp
inc
xor
xchg
push
sti
inc
fdivl
sub
cs
mov
xchg
mov
in
outsl
pop
mov
pushf
push
sub
cld
sahf
push
movsl
mov
and
lock
and
xor
mov
dec
add
out
jle
inc
ja
popl
xchg
in
dec
jae
sub
mov
nop
imul
imul
xlat
out
cmpl
lcall
pop
sbb
mov
xchg
xlat
out
lock
lcall
mov
xlat
in
shl
cmpsb
cmp
jae
in
outsl
jmp
fildll
mov
adc
mov
sub
call
lock
mov
imul
adc
nop
loop
jge
cmp
lods
push
xchg
addr16
cmp
out
mov
into
jg
rcll
dec
jae
mov
lahf
add
jno
push
cli
add
cli
xchg
xchg
fprem1
sbb
dec
test
and
fcmovnb
dec
js
dec
push
orl
jae
and
lahf
pop
sbb
push
cwtl
mov
mov
jl
testl
push
cs
popa
ja
ja
or
dec
fldt
sti
sub
push
xchg
pop
int3
sbb
rcr
outsl
fsubrl
into
lret
inc
pop
cli
bound
flds
loope
sti
sub
cltd
or
imul
sub
and
push
sbb
inc
stos
mov
hlt
xchg
jecxz
sub
repz
and
and
xchg
mov
xlat
jmp
test
xchg
pop
or
test
aaa
cmp
into
movsl
xchg
dec
mov
mov
in
inc
out
icebp
add
push
cmpsl
call
sbb
and
fimuls
xchg
inc
roll
aas
or
sahf
add
into
lret
loope
cmpsb
shr
xor
mov
imul
imul
inc
iret
sbbl
dec
push
xchg
nop
adc
imul
mov
mov
adc
cmp
sti
test
mov
les
inc
cmp
mov
ret
and
add
lret
aaa
arpl
pusha
jecxz
hlt
sub
or
faddl
sub
jbe
aad
shll
xchg
mov
imul
inc
imul
mov
mov
push
xor
sub
lret
test
adc
xchg
push
xlat
jae
jno
jns
dec
pop
jae
mov
aaa
cld
loopne
sbb
inc
in
mov
imul
mov
je
and
movsl
xor
and
mov
imul
pop
insb
and
mov
xlat
and
fisttpl
mov
imul
fildll
xchg
bound
sahf
in
push
rcr
aam
imul
ljmp
cmpsl
or
cmp
sub
cld
cmpl
shll
out
cmc
sub
repz
xor
xlat
out
cmp
mov
pop
mov
mov
dec
mov
cmp
sub
push
or
sub
jp
jg
mov
sub
push
mov
xchg
inc
hlt
mov
aaa
fldenv
sub
xor
arpl
adc
cmp
xchg
or
cltd
push
loop
int
stos
xchg
cmpsl
pop
mov
push
lock
sbb
dec
xor
sub
repnz
inc
jne
and
in
std
inc
sub
aam
xchg
into
xor
cmc
jb
sub
sub
cmp
stos
mov
hlt
inc
inc
mov
and
in
pop
flds
in
sbb
dec
push
add
mov
sub
fcomi
shrb
pop
icebp
fldt
push
push
cwtl
cmpsb
lea
dec
pop
jp
sbb
or
test
pop
inc
sub
cmp
int3
lahf
and
stc
test
add
jae
inc
push
push
outsl
add
cmp
jno
or
mov
pop
ljmp
insb
jae
pop
pop
pop
jb
xlat
mov
movsl
insb
adc
imul
mov
mov
add
orb
jae
mov
hlt
mov
inc
pop
cwtl
xorb
cwtl
xor
mov
in
in
imul
std
mov
int3
or
fwait
mov
push
ljmp
enter
xlat
int3
jo
rcrb
pushf
in
lods
mov
lcall
or
xor
pop
and
sbb
adc
rorl
cli
jns
rorl
mov
shlb
xor
adc
ds
cs
cmp
jae
jo
add
je
arpl
cmp
cmp
aas
lret
or
mov
mov
lds
divb
and
jns
andb
mov
ja
lret
fstpt
sbb
xlat
cs
xchg
aaa
movsl
sub
pop
stc
cld
pop
jge
mov
popa
lahf
xchg
push
pop
rcr
lahf
jno
mov
cwtl
ljmp
inc
push
or
jg
out
data16
or
pushf
ret
jbe
jns
je
mov
jnp
js
fwait
inc
idiv
cmp
mov
cltd
das
addr16
sahf
add
sub
in
lcall
fwait
mov
jns
fisttpl
in
push
inc
stos
test
aad
jl
or
inc
sub
sub
add
cwtl
cli
fmul
gs
popf
xchg
cmp
ss
push
pushf
sub
stc
test
adc
push
sub
push
pop
mov
jp
xlat
mov
push
pop
fs
in
sub
inc
pop
jb
add
mov
inc
add
ljmp
jae
fxam
add
sti
pop
cld
and
pop
gs
jle
mov
ss
repnz
fcmovnb
xchg
movsl
and
jp
je
leave
and
das
arpl
loop
jae
add
popf
push
cmpsb
pop
cmc
scas
shr
push
xchg
sub
xor
jb
fistl
jl
out
ret
fs
mov
outsl
xchg
xchg
js
std
in
jmp
lock
lahf
aaa
push
push
jecxz
out
dec
add
ja
cmpsl
shl
sarb
inc
fs
fistps
lcall
jne
lock
adc
jns
arpl
scas
lret
jnp
jb
rcrb
mov
out
push
sbb
movsl
stos
test
jle
cmp
xor
mov
ja
cmp
pop
jle
dec
mov
xchg
mov
jg
pop
pop
pop
stos
lock
nop
int3
out
cs
xor
stc
sub
gs
test
hlt
mov
add
xchg
pop
dec
sub
sbbl
test
clc
insb
imul
je
fistpl
aam
adc
jle
dec
lcall
daa
adc
jg
mov
std
dec
mov
xchg
enter
mov
mov
cmpb
jo
adcb
imul
push
arpl
cmp
sbb
push
sbb
stos
test
sbb
bound
push
adc
mov
cmp
fnstenv
push
data16
lock
sub
enter
lret
dec
sub
dec
add
test
outsl
test
mov
sbb
sub
push
or
jne
enter
imulb
iret
jae
stc
aad
xorb
das
xor
or
mov
imulb
inc
inc
mov
jbe
imul
and
mov
sbb
inc
pop
or
mov
push
lods
ljmp
stc
jae
push
inc
iret
ja
fs
fnstenv
xchg
outsl
push
mov
jb
adc
cs
mov
xchg
icebp
sub
xor
pop
ficompl
movsl
or
mov
dec
dec
addr16
adc
mov
pop
flds
fimull
mov
rol
les
dec
add
lahf
repnz
push
loopew
or
push
shll
sahf
ja
and
sub
scas
aad
jb
sbb
push
jecxz
mov
pushf
xchg
sarl
fistl
cmp
cmc
std
sti
pop
data16
stos
adc
scas
or
xor
add
fucomi
pop
pop
sbb
sub
rcpps
xchg
dec
mov
push
fnstcw
pop
add
mov
mov
sbb
push
test
jb
mov
and
jle
xor
in
xor
insl
pop
jp
mov
or
fstpt
pop
push
dec
pusha
sbb
mov
push
adc
mov
push
jge
sub
fisttpl
sub
outsl
fcmovbe
mov
jae
fnstcw
xor
clc
mov
add
sbb
mov
out
jns
xor
stos
push
adc
pop
cmp
push
xchg
stos
add
xchg
xor
inc
push
mov
insl
push
in
fmull
inc
sbb
adc
sbb
sub
mov
dec
hlt
daa
popf
ds
adc
sub
pop
sbb
ror
xchg
inc
popf
xchg
mov
cwtl
imul
jo
fistpl
dec
mov
cmp
cmpsb
outsl
lret
movsl
sbb
out
add
dec
popf
push
sub
pop
hlt
push
fstpt
mov
cmp
xchg
leave
mov
cli
scas
andl
mov
pushf
hlt
loop
dec
pushl
lret
jne
arpl
cmp
push
pop
pop
xchg
mov
cmpsl
addr16
pop
cmp
out
ret
lods
nop
dec
dec
adc
in
pop
mov
repnz
adc
shrl
pop
int3
xor
push
adc
lock
jbe,pn
sub
adc
aaa
fwait
loop
repnz
cmp
jmp
inc
shll
add
inc
dec
hlt
sub
lcall
pop
and
mov
cmp
pop
jns
push
in
push
clc
nop
and
push
fcoml
cmp
insb
sub
or
test
shlb
bound
cmp
insl
or
or
pop
jbe
movsb
sahf
xchg
arpl
scas
push
push
jne
xchg
jmp
lods
cmp
call
fs
and
add
xlat
es
rcll
fsubrl
cmp
out
dec
call
adc
xchg
sbb
xlat
jle
mov
lods
aam
sub
andl
addr16
sub
push
push
and
data16
shl
xchg
adc
jmp
cmp
sub
or
lret
mul
jg
sub
int
aad
sbb
fisttpl
fwait
push
inc
xchg
add
mov
mov
popa
push
xlat
sub
pop
cmpsl
sub
add
cmp
loopne
jb
stos
ret
fcmovnb
or
inc
fldt
test
sbb
es
or
mov
mov
pop
cmp
xlat
loope
in
repnz
mov
scas
insb
xor
xchg
and
test
std
xlat
fildl
push
icebp
cmp
cmp
adc
lods
rolb
stos
dec
xor
jge
addr16
mov
js
sbb
inc
and
add
ss
xchg
repz
inc
fcmovnb
daa
popa
lret
sub
les
daa
push
and
mov
and
inc
cmp
add
or
enter
mov
push
dec
rol
sahf
sub
or
dec
mov
cmp
lea
aaa
es
sub
jb
je
pushf
bound
aam
fistps
nop
or
jne
jb
xor
pop
cmp
je
es
pushf
pop
xor
aam
pop
enter
dec
mov
fstl
push
mov
push
xor
xchg
xlat
jno
push
lock
loopne
lods
cmp
xor
jno
sbb
in
mov
or
adc
mov
lcall
jecxz
call
ret
mov
xchg
jnp
dec
xor
pop
test
lods
gs
rorb
cli
mov
jne
xlat
testl
mov
mov
and
cmp
xchg
std
clc
fsubl
stc
arpl
xor
or
addr16
dec
insl
mov
cmp
sub
add
sbb
mov
inc
dec
enter
mov
sbb
jae
insl
fdivrl
outsl
or
lret
mov
pushf
arpl
jns
mov
add
cmpsl
rorl
inc
out
inc
jnp
xlat
setb
or
out
in
push
push
xchg
pop
imul
ficoml
or
mov
xchg
pusha
add
imul
pop
out
sahf
jns
sbb
mov
shll
pop
or
in
jb
shll
test
lods
test
cmp
sub
cmp
push
fildl
shll
hlt
dec
sbb
pop
jo
push
sbb
fnstcw
xchg
mov
mov
cmp
lods
mov
inc
inc
and
xor
cmp
pop
push
xor
int
add
icebp
mov
jmp
or
aas
mov
xor
cli
fldcw
xor
insl
and
adc
aas
repz
push
jne
mov
loop
mov
fildll
jbe
push
jno
fistpl
shlb
ret
ror
in
xlat
out
jg
sbbl
xor
mov
outsb
outsb
dec
or
ret
rcrl
cmp
fcmovnbe
in
cbtw
fidivl
adc
pop
fwait
xchg
gs
xchg
mov
mov
pop
loope
mov
xor
and
fimull
xor
fildl
daa
lea
pop
adc
shl
gs
dec
mov
xchg
cmp
pop
icebp
jns
not
sbb
scas
fisubs
ja
stc
and
add
mov
cmp
mov
xchg
mov
stc
aam
and
notl
xchg
mov
cld
loopne
fmuls
jne
adc
test
fidivrl
cltd
push
and
andl
stos
xor
push
sbb
cmp
pop
xor
add
cmp
mov
mov
lahf
sti
cld
xor
cmp
subl
in
fdivs
fldenv
xor
pop
add
rorb
aam
mov
mov
cmp
stc
jmp
mov
aam
cld
pushf
fs
pop
sti
in
sbb
test
gs
mov
lea
outsb
das
test
adc
cmp
mov
cmpl
or
shrl
jecxz
and
or
push
mov
cmp
outsb
sbb
cwtl
dec
enter
jl
movsl
shrl
cmp
cli
jge
aad
add
sub
jns
mov
andl
nop
mov
test
out
sub
xor
int3
ds
push
lcall
hlt
sub
loopne
xor
and
mov
iret
fisttpl
push
fmul
add
mov
lea
imul
and
ret
scas
loop
int3
mov
lods
loopne
dec
andl
test
pop
orb
jp
cmp
sbb
xchg
fcmovu
pop
movsb
cmp
les
divb
jno
or
mov
cmpsl
sar
ds
pushf
jo
test
inc
mov
inc
adcb
fstpt
jmp
rorl
test
sbb
lret
out
xor
outsb
aam
in
mov
add
ficomps
ficoms
fcmovnu
nop
inc
enter
push
add
push
add
hlt
cmpsb
pop
jecxz
mov
arpl
das
cmpsb
enter
dec
jg
ds
and
dec
cmpsl
scas
dec
dec
popf
cmc
push
lret
test
repnz
pop
fstpt
or
cmpb
xchg
pop
sub
sbb
imul
xchg
out
push
push
fucomi
cld
insl
pop
dec
add
xlat
pop
popa
mov
xor
fstpt
push
jl
movsl
and
xlat
mov
subb
jns
push
adc
adc
and
pop
fmul
gs
mov
cmp
cmp
lods
dec
pop
sub
ret
iret
dec
leave
and
cmpsl
loopne
fldcw
test
jmp
lea
mov
jge
sbb
inc
dec
mov
cmpl
dec
push
movsb
js
outsl
sbb
ficoms
sbb
fisubs
ret
mov
xor
stos
dec
aad
outsl
add
inc
sbb
push
ja
sbb
xor
cmp
sbb
stc
mov
fcomi
shrl
cmp
inc
jge
dec
cmpsl
xchg
sbb
fmulp
pop
mov
stc
pop
test
jl
push
popa
and
data16
repnz
pop
jnp
dec
sbb
and
add
or
int
bound
push
mov
xchg
push
push
mov
ja
out
xorb
jbe
push
inc
cmp
lret
xor
imul
loop
stos
xor
nop
cs
aad
xchg
rcrb
dec
and
push
cs
fisubrs
dec
out
and
shrl
and
push
fcmovnbe
push
or
lods
jae
dec
mov
pop
push
aaa
or
sub
sbb
xor
xlat
mov
insb
jno
out
jns
sub
mov
inc
sub
gs
outsl
mov
dec
movsb
mov
or
inc
ficomps
aam
xlat
loop
xchg
sbb
sbb
xor
lret
lcall
push
insb
dec
test
jp
cld
xor
ret
jmp
cmp
jge
push
stc
jl
inc
add
push
sub
jbe
and
icebp
pop
xor
lret
inc
cmp
mov
cmp
sub
or
fwait
add
jno
and
sar
jno
stc
sub
loop
xor
fstpt
mov
in
xor
or
out
test
js
fmul
movsb
aas
cs
push
out
arpl
or
out
pop
ds
or
xor
mov
stos
mov
addps
cmp
fcmovu
cmp
mov
mov
fistl
stos
adc
stos
aam
lret
mov
loopne
cltd
or
pop
fwait
std
cmp
mov
xor
in
mov
mov
lret
sub
cltd
pop
or
sub
sub
addr16
mov
fnstcw
cmp
shll
mov
and
or
fidivrl
cmp
dec
popa
sbb
stc
mov
andl
or
jecxz
cmpsb
pop
pop
inc
sub
cwtl
mov
xchg
mov
loopne
sub
cli
rcrb
xor
mov
fstpl
addr16
xchg
pop
pop
jp
dec
int
inc
mov
cltd
or
fcmovnbe
inc
lcall
cmp
mov
mov
and
cmpsl
out
push
mov
pop
std
jmp
ficoms
fwait
or
mov
xchg
dec
push
pushl
cli
xor
js
sub
bound
pop
or
push
int
inc
or
sbb
or
mov
cmp
out
xchg
pop
mov
cmp
sbb
cmp
push
shlb
push
add
pusha
rorw
into
sbb
clc
jmp
jnp
dec
fmul
sbb
shr
ret
loope
xlat
jns
stc
sahf
fcmovnu
push
xchg
xchg
std
fsubrs
movsb
push
cld
pop
and
loop
mov
mov
jb
stc
or
enter
xchg
cmpb
mov
pop
std
push
cld
jno
loopne
add
sub
insl
xchg
xor
dec
pop
ja
mov
inc
add
adc
fucomi
pop
rcl
in
adc
jo
rorb
aad
pop
fistpl
mov
filds
out
jmp
adc
gs
xchg
in
push
cld
les
dec
cmp
xor
adc
jae
and
aaa
pop
pop
int3
mov
sub
and
jno
jmp
xchg
out
ja
lock
negl
ja
cmc
mov
sarl
loopne
jns
aas
std
imul
xor
lret
out
ficoml
out
xor
cmp
pop
xchg
mov
sti
mov
fistpl
lcall
adc
add
xor
sub
and
push
fcoml
dec
adc
push
xor
sbbb
stc
stc
mov
add
jp
dec
inc
sbb
arpl
callw
in
xchg
xor
push
jne
fyl2xp1
sub
pop
imul
ret
add
jle
shll
hlt
movsl
stc
scas
call
mov
jg
push
loope
or
dec
xchg
pop
cmp
push
popa
adc
addr16
stc
leave
movsb
jle
mov
cs
jnp
fsts
and
sbb
sbb
mov
lds
fnstenv
imul
dec
mov
mov
mov
pop
rorb
jno
add
mov
push
jp
dec
int3
lods
jne
xlat
pop
sbb
fisttpl
lcall
push
hlt
xlat
jge
xchg
lods
jb
out
outsl
ss
ret
fisubrs
pop
cmpsl
dec
xor
mov
fisttpl
in
fsubs
sub
imul
scas
test
xchg
rcl
out
jb
mov
xlat
mov
iret
dec
lock
loop
pop
imul
arpl
xlat
repnz
pop
ret
push
push
adc
pop
push
sbb
jae
mov
inc
inc
xor
movsl
clc
jle
dec
insb
lea
fstpt
lds
xlat
adc
lock
mov
sbb
pushf
arpl
pop
fwait
lahf
jp
jns
test
faddp
mov
in
mov
xorb
insb
xchg
pop
mov
ss
in
ljmp
cltd
dec
lods
xor
lods
dec
loopne
pop
or
sarb
fistpll
xchg
xchg
jp
xlat
and
ja
fwait
ds
cmpsb
fdivl
dec
mov
push
cmp
dec
add
jae
xlat
pushf
les
adc
push
jne
jo
daa
hlt
mov
lds
fistpll
fscale
ss
popa
and
cmp
adc
cmpsl
sarb
scas
xor
sarb
les
std
sarl
cwtl
sti
stos
into
sub
out
lahf
repnz
jo
adc
adc
xor
cwtl
dec
or
dec
cs
sub
imul
nop
sahf
lret
jl
adc
pop
hlt
int
xchg
jns
lock
sahf
cmpsl
sub
or
xor
mov
adc
pop
aad
push
mov
sub
or
sbb
insl
daa
jp
xor
cltd
out
subb
mov
mov
mov
notb
and
ja
les
ret
cmp
inc
push
adc
mov
xor
add
cmp
push
stos
xlat
inc
movsl
hlt
xchg
ficompl
or
sub
jp
mov
out
jb
sub
dec
cmp
mov
outsl
pop
xchg
add
adc
add
sbb
lods
frstor
imul
lahf
sbb
fisttpl
mov
jns
test
xchg
pop
dec
out
sbb
push
les
ds
cmp
pop
das
cs
insl
repz
clc
push
xor
inc
cmp
push
shll
xchg
lcall
test
ja
clc
jp
pop
loopne
and
dec
lods
add
cmp
dec
rcr
hlt
movsb
xlat
pusha
xchg
imul
jbe
mov
mov
inc
jns
sahf
dec
jmp
xchg
or
xchg
inc
sub
dec
add
ret
pop
ja
jp
pop
cmp
daa
pop
fsts
push
jns
sub
sti
sahf
cmp
lock
fs
loopne
lcall
arpl
test
push
imul
and
push
stos
dec
fldt
cmp
sub
pop
incl
xchg
or
sub
sub
cmp
mov
int3
xlat
or
ss
repz
mov
inc
pop
arpl
outsl
negl
stc
mov
or
mov
xor
pop
mov
cltd
adcb
sub
mov
mov
pop
cltd
inc
test
push
jbe
jae
fs
lcall
rorb
and
mov
push
fbstp
js
jb
aaa
or
xorl
and
cmc
js
pop
push
and
cmpl
xor
push
adc
add
les
mov
xorl
mov
ficomps
shrb
pop
push
fs
repz
in
call
fmull
sbb
cs
or
jmp
mov
mov
xchg
sub
mov
sahf
or
sub
mov
inc
fucomi
orb
cmp
xor
repz
cld
repz
fstl
shll
fwait
iret
stc
add
pushf
cmc
dec
mov
ja
cwtl
cli
sub
pop
int
lret
addb
or
push
ja
scas
mov
shl
mov
test
and
push
pop
outsl
nop
ja
inc
pop
and
jl
ret
jp
cmp
iret
inc
push
cmp
or
scas
add
dec
xor
inc
push
cmp
mov
xchg
sub
push
adc
push
test
scas
lret
pop
push
inc
jo
sti
jae
inc
andb
jae
dec
push
push
mov
aad
cmp
mov
je
and
inc
pop
xor
fwait
lahf
dec
add
xchg
insl
movsl
sub
addr16
jns
aam
out
and
aas
fdivrl
cmp
push
ret
and
les
movsl
mov
push
int
sbb
jno
xorl
jno
push
aaa
leave
push
imul
mov
das
in
nop
adc
dec
fcompl
mul
popa
dec
mov
dec
mov
flds
xor
adc
scas
pop
fstps
mov
lock
movsb
aaa
jg
pushf
jne
popf
mov
imul
addr16
pop
negb
sbbb
xlat
jp
push
pop
sbb
push
popa
leave
scas
jb
dec
mov
mov
or
cmp
ljmp
lahf
sbb
fidivl
jecxz
arpl
jl
out
mov
cmp
cmp
stos
cs
pop
pop
pop
dec
push
test
mov
ret
rcrb
out
xchg
jae
repz
movsl
xor
pop
dec
xlat
xor
pop
mov
inc
lods
cmp
js
imul
cli
or
insl
mov
sti
jmp
sub
mov
daa
sbb
imul
adc
nop
inc
jne
rcrb
fs
mov
dec
loopne
xchg
fisubl
lea
mov
gs
jb
and
jg
clc
ficomps
and
fstps
mov
mov
test
or
xlat
mov
pop
mov
push
jo
pushf
pushf
lret
add
mov
cmpl
fistpll
xorb
add
inc
int
lret
cld
andb
mov
sub
test
in
fyl2xp1
das
pop
enter
int
fucom
cmp
dec
xor
mov
lcall
adc
outsl
ret
enter
bound
sbb
push
pop
mov
gs
mov
iret
xor
pop
faddl
mov
cmp
in
rcrl
or
adc
movsb
cmpsl
stc
mov
push
and
adc
sbb
xor
adc
and
cmp
or
f2xm1
mov
cli
xlat
adc
fstpt
addr16
jmp
push
push
imul
xlat
inc
push
jecxz
fisubs
xchg
inc
push
push
fldt
cmp
test
test
xor
pushf
leave
je
jle
std
stc
int3
jecxz
mov
ret
fldt
mov
jae
xlat
pop
push
sbb
incl
and
test
in
jmp
push
sub
cmp
insb
cmpsl
add
shl
jb
dec
notb
movsb
aaa
pop
xchg
mov
insl
or
out
pop
xchg
fcmovnb
inc
stc
mov
or
xchg
dec
jg
xor
movsl
sub
or
inc
xlat
out
xchg
add
cmp
dec
sub
cmp
dec
cwtl
sub
dec
pop
bound
lds
daa
repz
dec
cmp
mov
arpl
aad
xor
in
pop
lahf
shlb
adc
or
imul
sbb
sbb
sarb
adcl
sub
cmp
in
inc
sbb
jg
test
xchg
fwait
inc
out
jg
xor
pop
stos
and
sbb
scas
jae
lods
dec
sub
lock
pop
gs
repnz
call
aam
pushw
push
stos
add
xlat
jno
out
pop
adc
pop
mov
imul
jle
mov
cmp
xlat
out
jns
xor
je
cmp
mov
mov
xor
loop
push
or
push
push
add
and
xor
xor
xchg
pop
mov
xchg
loop
mov
sbb
pop
sub
dec
jmp
xlat
cs
outsl
push
jg
pop
stc
and
cld
and
push
ja
repnz
push
jo
xor
sbb
xchg
xchg
xchg
ja
test
movsl
popf
mov
aaa
jbe
orl
mov
mov
and
xlat
int
sbb
push
iret
cmpsl
add
inc
mov
lret
mov
cmp
lods
ljmp
lock
cmp
lret
ficompl
push
nop
inc
cmp
pop
mov
and
jge
mov
adc
jnp
fsts
mov
inc
out
adc
icebp
pop
xchg
mov
test
pop
arpl
cld
out
nop
mov
inc
pop
fs
jns
addr16
sub
cli
adc
or
push
inc
pop
pop
pop
int
lcall
push
mov
fidivs
nop
repnz
or
sub
add
test
rcrb
int
add
or
lea
xchg
lock
dec
xchg
mov
cs
cmpsb
pop
nop
cmp
pushf
xchg
xchg
jae
pop
sbbb
adc
lcall
xor
dec
addr16
jo
jno
and
pop
movsl
inc
call
xorb
pushf
mov
fstps
out
hlt
mov
mov
ja
sub
xchg
mov
ja
ficoms
push
movsl
mov
sub
or
sbb
mov
mov
pop
push
sub
cwtl
ss
aad
fdivs
cmp
das
sbb
push
fisttpl
xlat
pop
cs
xor
das
sarl
xor
int3
sbb
aam
lea
sbb
mov
fwait
and
cmp
mov
jg
dec
dec
push
xlat
or
cmp
test
mov
les
shl
addr16
pop
xchg
jl
aad
es
sahf
and
cmc
rcrl
cmp
sti
jno
push
push
popf
mov
cmp
out
pop
jno
jno
cmp
addr16
stc
imul
lods
and
sbb
aaa
pop
rolb
add
daa
adc
and
dec
dec
icebp
jle
mov
pop
add
sbbl
jns
and
add
jnp
dec
test
leave
imul
lahf
mov
xchg
inc
jnp
aas
dec
stos
and
scas
xchg
pop
jle
mov
fiadds
sbb
jmp
xlat
dec
mov
pop
dec
mov
cli
mov
xchg
stos
sub
jne
test
xor
outsl
and
enter
mov
push
inc
cld
push
cmp
ss
sub
pushf
sub
data16
test
arpl
and
subb
dec
jne
test
push
mov
std
push
push
push
loop
pop
pop
push
xchg
std
adcb
pop
dec
push
sbb
cmpsl
xchg
dec
push
and
jge
jo
sbb
imul
test
cmp
lds
and
outsl
std
ss
shll
mov
fnstcw
addr16
add
notl
aad
stc
hlt
ret
bound
add
push
rcrb
pop
sbb
rcll
popf
roll
add
jle
mov
cmpsb
push
imul
andb
sarl
imul
lcall
sbb
pushf
jp
add
mov
push
add
fcoms
loop
jb
dec
loope
and
xlat
and
pop
push
xchg
int
pop
addl
imul
xlat
mov
and
fstpt
add
imul
jecxz
push
incb
xlat
pop
jp
out
cmp
nop
in
repz
jae
imul
or
inc
dec
ljmp
test
xor
xor
add
xchg
cli
out
and
pop
or
dec
cmp
jne
outsb
addr16
pop
in
xlat
xchg
iret
lods
dec
aaa
push
ss
cli
push
cmp
xchg
cmpsl
fs
das
inc
add
sbb
adc
fstpl
jmp
int3
jl
in
push
and
xchg
push
jbe
jb
scas
stos
inc
jle
enter
jne
xor
jl
lahf
push
std
ja
push
dec
xlat
jns
add
add
ss
out
stc
call
fisttpl
push
fs
push
fildl
ja
jmp
cwtl
ljmp
aam
nop
mov
and
push
ror
push
sub
add
lcall
and
xor
cmp
incb
inc
sar
rcr
xor
adc
jne
pusha
sti
mov
or
movb
push
and
mov
cltd
in
shrb
aad
fwait
ret
ret
and
int3
hlt
push
cwtl
and
inc
ja
dec
test
pop
mov
cmp
movsb
pop
mov
inc
cs
xchg
data16
movsl
out
xor
gs
jl
push
mov
xchg
jmp
imul
push
jno
cmp
mov
jb
movsb
outsl
pop
cmpsl
fs
or
xor
fdivl
cwtl
or
sub
imul
mov
mov
std
or
xchg
outsl
or
stc
nop
in
jle
push
bound
outsl
xor
xchg
outsb
inc
bnd
dec
jmp
add
cmpsb
lret
icebp
in
mov
mov
outsl
cmp
xor
daa
cs
mov
or
stc
adc
fldt
pop
test
mov
repnz
cmp
pop
sbbl
lret
in
and
shrb
dec
jns
or
jne
mov
jbe
add
dec
jp
pop
mov
and
in
sub
mov
aam
cmp
cmp
dec
repnz
test
adc
mov
loop
adc
and
aam
mov
fldt
paddw
outsl
jge
pop
popf
jae
sarb
adc
jnp
ret
fstpt
xchg
cwtl
pop
arpl
mov
dec
push
clc
jl
mov
stc
xor
jnp
jle
xor
test
adc
add
data16
jne
stc
stos
popf
adc
add
lds
push
pop
dec
jecxz
jp
jb
js
add
mov
fs
mov
and
cli
lahf
popf
xor
mov
xor
ficompl
shlb
into
mov
js
cmp
push
out
sbb
inc
stos
xchg
jecxz
sub
stos
push
mov
or
pop
jae
mov
call
sub
and
je
jp
aaa
subb
testb
cmp
dec
mov
inc
lods
int3
mov
ds
inc
lret
out
cmp
mov
inc
add
add
sub
jp
jae
out
jns
or
mov
lret
mov
lret
hlt
dec
mov
dec
js
shr
cmp
out
push
xchg
mov
or
scas
inc
jne
xlat
test
test
adc
adc
cli
pop
mov
push
test
mov
dec
or
pop
inc
jnp
jl
fwait
mov
das
pushf
inc
adc
idivb
xor
mov
dec
dec
and
lahf
lcall
mov
inc
push
arpl
push
cmp
xlat
dec
mov
jge
cmp
xor
fsts
and
adc
jo
outsl
je
lret
lods
mov
xor
cmp
iret
fstl
fisubl
jmp
xlat
mov
movsb
or
iret
and
cli
lret
test
jl
je
jp
push
sbbl
add
jns
cmp
test
and
fcom
xchg
mov
stos
or
push
dec
or
ret
testb
ror
stos
sub
pop
push
adc
sbb
jbe
xlat
xor
sbb
lcall
mov
pop
mov
and
xchg
mov
cwtl
mov
ficoms
inc
add
mov
out
xchg
jb
xor
xor
nop
mov
fsts
xchg
push
xor
daa
pop
dec
or
ds
mov
cmp
outsb
pop
mov
xlat
popa
push
data16
jne
cmpsb
ret
jp
jg
or
jb
andl
addr16
mov
push
mov
push
sbbl
sbb
int3
cmp
stc
lods
movsb
mov
pop
pop
in
mov
xor
jns
pop
sbb
shl
rcrb
xchg
jns
pushf
jno
cmp
cmp
pop
adc
or
pop
xor
out
mov
pop
sub
add
inc
aam
or
mov
sbb
adc
xlat
imul
dec
jl
fldcw
lcall
xchg
shrb
pop
in
jne
xlat
sbb
mov
and
dec
jp
sbb
pop
pop
sbb
sahf
sti
inc
add
or
adc
popa
movsb
stc
push
sbb
cmp
dec
sub
lcall
std
frstor
pop
xlat
int3
testl
ret
mov
adc
jmp
mov
xchg
insb
sahf
xchg
ss
lea
daa
jge
inc
and
lahf
int3
pop
cwtl
sahf
or
cmp
mov
enter
in
jl
cmc
orb
sbb
ret
inc
push
mov
mov
les
sbb
fcmovnbe
stos
les
repz
cmp
cmp
sti
pop
adc
sbb
inc
popa
push
mov
call
and
faddl
shlb
and
xor
sbb
int
rolb
pop
cmc
in
and
leave
cmp
push
cmp
shl
fldl
xchg
xor
mov
pop
ficoml
xchg
call
or
in
pop
lret
fisubs
jge
jl
fildl
jge
cmc
scas
jmp
hlt
and
shlb
jmp
or
pushl
nop
aaa
ds
idivl
gs
rcrb
icebp
pop
xor
test
ss
rcll
leave
sti
adc
pop
ds
pop
dec
fisttpl
insb
sbb
pop
jb
loop
push
std
das
mov
les
test
dec
insl
push
push
mov
inc
insl
pop
pushf
mov
leave
push
sub
loopne
mov
out
cmpsl
fimuls
dec
sub
add
xchg
cmpb
jl
stos
rorb
repnz
mov
repz
gs
pop
xlat
mov
xor
mov
push
leave
orl
add
dec
sub
cmp
fistpl
dec
xor
fsubs
gs
ds
addr16
mov
stc
inc
les
insl
movsl
insb
es
inc
insb
jmp
cmc
adc
cmp
add
dec
in
fistpl
cmp
data16
sub
push
mov
push
sub
stos
pop
add
out
gs
dec
fucom
xor
subl
pushf
adc
jbe
out
addr16
cmpsb
mov
mov
jle
jne
imul
push
pop
sbb
out
sbb
daa
jecxz
xlat
sbb
mov
sbb
movsb
jns
inc
loopne
xchg
or
fidivs
ljmp
ds
fwait
mov
jle
jmp
cli
sbb
cmc
jbe
aaa
push
jb
add
dec
ficoml
sti
pop
mov
fsubs
subb
fdivrp
jae
imul
and
jmp
sbb
je
mov
dec
pop
pop
jmp
jg
and
popf
xor
sbb
dec
das
push
aaa
lahf
mov
sub
cmp
shr
ss
std
mov
pop
adc
rcll
xchg
ds
lods
mov
dec
rorb
daa
fiadds
ljmp
loopne
bound
adc
out
mov
mov
dec
sbb
lahf
jns
fldenv
rcl
lret
pop
push
jg
xchg
mov
shrl
jmp
pop
mov
mov
inc
mov
imul
jmp
push
int
add
imul
arpl
ljmp
sbb
xlat
sbb
hlt
or
jnp
cmp
sbb
mov
call
cmp
hlt
loope
xor
mov
mov
inc
out
pop
inc
mov
test
adc
cmpsb
xlat
mov
sbb
ljmp
cmp
add
cld
or
xlat
ficoml
pop
test
mov
jl
mov
dec
fwait
loop
loope
dec
and
test
ret
push
jge
in
dec
fwait
cmp
inc
in
mov
stos
testl
sbb
lods
dec
notl
xor
and
sub
sbb
sbb
pop
xor
es
jmp
or
das
push
push
xor
adc
jno
dec
int3
scas
push
mov
in
sahf
fcoms
data16
enter
cmp
push
shrl
push
ja
in
les
ljmp
xchg
xor
push
mov
popf
mov
push
jp
xor
cmp
sub
adc
add
mov
adc
xlat
inc
jmp
dec
or
and
scas
jb
mov
stc
inc
lcall
aas
adc
jo
sub
inc
jb
xlat
out
jg
das
sbb
lods
lcall
sahf
es
stc
dec
xlat
lcall
aas
out
lods
scas
jb
sub
mov
sub
xlat
and
shlb
out
ljmp
mov
dec
dec
cli
and
pop
cmp
dec
lret
jecxz
gs
cmpsl
jecxz
and
jns
addb
lret
lock
xchg
clc
push
lcall
adc
adc
sbb
xor
gs
dec
pop
cmp
frndint
xor
out
loopne
inc
dec
xor
loop
jno
popa
dec
sbb
and
inc
mov
mov
push
xchg
rcll
or
add
and
add
pop
cmpsb
lea
add
jb
mov
mov
addr16
xchg
cmp
pop
push
daa
rcll
jne
xlat
aaa
ja
ficomps
mov
xlat
fs
out
xor
stc
and
pushf
sub
jmp
test
and
fsubrl
sarb
movsb
jno
cltd
inc
cmp
cmp
test
outsb
rcrl
rcrb
int3
xlat
daa
sbbb
shrl
cmp
dec
lcall
daa
ror
jae
inc
aaa
clc
add
xchg
sti
stc
inc
xchg
in
or
iret
pop
dec
jns
sbb
ja
sub
sbb
dec
sbb
adc
lret
filds
loop
jg
push
cwtl
in
outsb
mov
lret
sub
push
pop
addb
stos
cs
add
sahf
mov
cmp
les
jae
pop
mov
add
add
jmp
ljmp
cmpb
filds
cli
outsl
test
popa
xlat
cld
sbb
shll
cld
sahf
decb
push
out
jl
jmp
insl
push
adc
mov
xor
add
sub
pop
mov
dec
fiaddl
stc
shll
cld
cmp
xlat
dec
das
mov
inc
pushf
jecxz
cmp
and
jns
xor
mov
dec
daa
xor
repnz
int3
jg
sahf
mov
jge
shll
movsl
or
cmp
jecxz
imul
mov
xor
push
int3
or
or
pop
and
inc
jbe
mov
outsb
mov
rorb
stc
test
sub
pop
scas
sahf
arpl
popf
adc
mov
inc
int3
mov
cwtl
les
orl
push
pushf
into
les
sub
xlat
mov
xor
mov
in
decl
cmc
dec
sbbb
dec
mov
cmp
mov
cld
mov
mov
test
push
jl
inc
push
and
int3
cmp
fildl
iret
mov
pop
fwait
cs
stc
in
cmp
push
sub
jae,pt
insb
pushf
dec
mov
and
mov
sbb
and
dec
push
pop
fildl
insb
in
sbb
mul
or
cmpsl
cmp
jns
pushf
pop
out
jge
fnstsw
xchg
ss
imul
xchg
sarb
xlat
add
sub
addr16
cmp
rorb
xor
sbb
ret
xchg
test
and
mov
dec
pop
add
xlat
sbb
mov
add
sar
ficomps
pop
push
lret
jmp
flds
testb
divl
int3
push
popf
cs
pushl
daa
ljmp
dec
lret
jno
push
shl
pop
outsl
and
adc
cmp
lds
push
outsl
data16
mov
mov
cmp
cmp
xor
orb
stos
xor
fdivrp
push
mov
lods
std
pop
fildl
sar
pop
mov
push
cmp
insl
loopne
in
ret
inc
mov
sbb
jns
and
and
add
das
cmp
cmpsb
jne
or
adc
push
jnp
sub
xor
cmp
xchg
jnp
fsin
inc
mov
jecxz
mov
adc
mov
sahf
das
and
and
or
jmp
xlat
mov
jp
insl
cmp
xor
add
pop
data16
fdivr
and
cmp
xor
lcall
in
aam
repnz
cmp
into
pop
push
sub
and
outsl
xor
sbb
cmpb
stc
sti
flds
mov
je
cld
in
add
jmp
adc
sbb
imul
mov
mov
sbb
xor
icebp
mov
adc
js
pop
push
daa
sbb
movsb
jo
push
ds
mov
je
jb
jg
adc
xchg
cmp
and
or
nop
fisttpl
inc
sub
shl
mov
lahf
adc
add
mov
push
fxch
test
js
inc
jbe
lahf
mov
or
dec
leave
inc
xor
cmp
sti
xor
xchg
adc
mov
cmp
add
push
mov
inc
fsubrl
xor
pop
and
cmc
roll
adc
movsl
hlt
and
imul
sbb
and
in
ds
ret
repz
and
sahf
mov
xchg
sbb
dec
nop
dec
aam
data16
shlb
mov
and
test
testl
enter
mov
cltd
jp
dec
push
dec
psubw
sub
enter
nop
and
cmp
push
mov
sbb
out
xchg
imull
inc
sub
jge
sbb
pop
or
das
popa
push
and
insb
xchg
std
pinsrw
stos
scas
test
add
or
insb
jb
mov
xor
adc
push
push
out
pop
pop
jg
or
push
cltd
movsb
mov
out
sbb
xchg
iret
mov
push
jae
adc
sub
xor
loop
ret
add
loope
cmp
push
mov
cmp
xchg
pushf
mov
popf
das
arpl
call
lret
fs
repz
clc
cmpps
sahf
movb
stc
jmp
das
sub
clc
ret
xor
pop
push
fcmovnu
in
sub
mov
mov
push
ret
sbb
pop
test
inc
repz
cmp
adc
dec
outsl
std
in
sub
gs
aam
outsl
fnstenv
mov
mov
cld
push
xor
icebp
pop
xchg
jo
imulb
out
mov
ficoml
mov
pushf
inc
mov
sub
lods
cs
sbb
adc
shrb
test
xchg
dec
or
sbb
fcom
into
mov
dec
or
and
ds
adc
in
xchg
xor
test
into
jmp
and
iret
jne
dec
push
fsubl
push
jbe
jge
dec
lea
dec
jns
repz
adc
xchg
int
sti
lret
mov
shl
call
pop
xlat
mov
dec
lods
insb
roll
mov
xor
iret
cmp
sbb
xchg
mov
mov
jge
mov
xlat
mov
outsl
call
jnp
jae
adc
push
mov
loope
test
flds
add
daa
mov
mov
mov
pop
lcall
or
sub
ja
repz
jae
adc
stc
aam
jge
fidivrl
or
dec
mov
mov
cmp
cmp
ds
dec
add
jae
jo
cli
inc
lock
popa
dec
test
mov
mov
push
sbb
jae
data16
xor
out
and
dec
enter
inc
or
pop
test
sbb
or
push
jl
add
mov
fcmovnb
inc
mov
push
aaa
pop
dec
add
xor
cwtl
imul
push
cmp
dec
cwtl
jne
add
push
mov
xor
push
clc
filds
mov
mov
out
or
adc
and
xor
mov
hlt
cwtl
push
inc
cld
cmc
mov
int
imul
int3
cld
cmp
inc
into
pop
data16
outsb
aas
push
or
pop
data16
int3
cs
stos
sub
flds
daa
fistps
aaa
lret
dec
mov
nop
ljmp
std
jmp
loopne
mov
sarb
aaa
outsb
add
ss
push
shll
stos
mov
fyl2xp1
pop
pusha
ss
cwtl
js
pop
jge
aas
sbb
adc
movsb
fisubl
arpl
into
aam
or
xor
fdivrl
and
mov
inc
daa
add
cmc
sbb
lcall
cmp
xchg
or
inc
and
cmp
iret
mov
repz
imul
cmp
xlat
jl
data16
push
popf
mov
imul
imul
mov
jle
mov
fcompp
mov
push
std
mov
insl
std
sbb
and
gs
inc
movsb
repz
jp
sub
pusha
mov
or
inc
xor
and
rcll
jae
cmp
lret
mov
testl
test
cmpsb
jns
pop
leave
sbb
add
enter
and
insb
jmp
sbb
das
push
or
out
loopne
test
stc
push
pop
mov
inc
and
cli
call
insb
adc
stc
fsts
fwait
loopne
mov
or
add
mul
cmpsl
ret
dec
mov
nop
mov
addr16
mov
lods
jae
aas
mov
test
jge
cmp
fnstenv
dec
sub
jp
adc
mov
imul
ss
inc
jb
xchg
pop
xchg
xchg
lret
pop
mov
pop
mov
insb
sub
mov
pop
sub
lcall
int
jge
dec
xor
test
sub
and
pop
movsb
mov
push
addr16
pushf
shl
pop
mov
mov
sub
shrb
in
in
daa
out
outsl
notb
jle
lds
cmp
std
mov
inc
out
xchg
inc
mov
push
fistpl
nop
sub
mov
mov
inc
mov
cmp
enter
fildl
cs
leave
imul
add
outsl
dec
and
in
add
xlat
and
sahf
mov
sub
mov
sbb
pop
cmc
fiaddl
repz
jl
mov
lock
and
xor
sarb
mov
sbb
clc
xchg
jle
out
std
ret
jnp
stc
into
or
or
aaa
int
jae,pn
mov
outsl
mov
stc
dec
pushf
xchg
or
in
aam
pop
lahf
adc
add
call
rorb
xchg
jne
inc
mov
pushf
adc
out
jge
mov
sbb
int3
popa
gs
mov
and
xchg
xor
loopne
push
adc
fisubs
ja
mov
and
mov
push
lret
sub
aad
jae
scas
insl
jge
out
int3
lret
aas
mov
popf
sbb
ficoml
mov
mov
mov
or
and
push
add
add
sbb
les
inc
sub
pop
and
dec
dec
popf
xlat
xchg
inc
les
rcll
je
mov
cwtl
fcoms
fistl
data16
call
lcall
mov
testl
je
loope
fistl
add
push
mov
repz
cmp
jp
xlat
xchg
adc
filds
cwtl
and
mov
adc
fldt
dec
lret
dec
dec
ficompl
and
jmp
ljmp
jge
js
xlat
push
xor
les
insb
xor
ja
enter
add
shrl
outsl
outsb
push
cmp
jns
aaa
xor
add
add
jmp
test
mov
dec
int3
sbb
and
mov
push
pushf
xor
hlt
sub
mov
mov
pushf
add
pop
imul
adc
cwtl
dec
mov
xchg
lahf
mov
push
push
cld
sarb
shll
fidivrl
cwtl
in
in
jecxz
sarl
aas
jnp
inc
sarl
lahf
ljmp
xor
js
xchg
sbbl
pop
pop
jno
cmp
repnz
push
pop
in
push
stos
sbb
xchg
xor
push
dec
fsts
or
sti
mov
dec
xlat
shrb
xor
std
mov
stos
shll
in
jecxz
xor
jp
xchg
iret
mov
fistpl
cmp
lahf
jmp
mov
fadd
or
xchg
cmpsl
fs
or
jmp
sbb
inc
loope
jecxz
xchg
jg
cli
and
daa
sbb
and
cld
js
push
cs
repnz
scas
adc
cmp
fidivrl
lahf
adc
les
add
pop
adc
and
push
in
dec
xlat
mov
cmp
loope
gs
adc
ficoml
inc
xlat
out
mov
lcall
rorl
cmovns
flds
mov
dec
arpl
scas
sbb
push
cmp
cwtl
mov
xlat
scas
mov
cmpsb
out
int
mov
jno
imul
xlat
xchg
mov
jae
dec
xchg
inc
ja
mov
and
lahf
neg
mov
sub
dec
js
xlat
pop
fstps
adc
cmp
insl
push
sbb
cs
add
xchg
inc
push
mov
dec
js
mov
jns
dec
fstpt
adc
ds
and
movsb
mov
inc
xchg
ja
push
mov
mov
push
aad
arpl
mov
xor
bound
cmp
mov
push
push
or
and
xor
imul
pop
dec
xchg
icebp
and
test
popf
fwait
jmp
jo
dec
sub
add
and
fcoms
mov
movsb
mov
bound
fildl
mov
jmp
dec
cmp
hlt
icebp
or
jp
or
sahf
inc
bound
dec
hlt
int
adc
shl
lods
jecxz
lods
fldenv
fiadds
cmp
decb
xchg
dec
jb
pop
movsl
pop
xor
cmp
js
jno
sub
xor
jg
mov
test
mov
leave
out
pusha
imul
das
pop
scas
fdivl
add
dec
adc
pop
std
adcl
jp
andb
jecxz
and
test
inc
push
or
aam
fsubrs
data16
movsb
sbb
sbb
iret
test
rcrl
jae
imul
inc
js
cld
test
xchg
push
pop
test
mov
and
jl
mov
pop
in
test
fstpt
sbbl
mov
xor
imul
fidivrs
mov
stos
cwtl
imul
adc
std
and
xchg
cmpl
mov
dec
mov
jb
push
inc
mov
std
xchg
aam
mov
test
out
dec
testb
mov
aaa
xor
jecxz
jns
mov
jns
mov
xor
imul
orl
pop
sbb
clc
and
ror
repz
and
test
movsb
sbb
outsb
sbb
inc
je
fs
mov
mov
dec
data16
jp
bound
xlat
fwait
inc
pop
in
mov
cmp
mov
and
mov
inc
and
jns
adc
mov
popa
movb
sub
jne
pop
int3
stos
pop
and
sbb
sbbb
cmp
jmp
outsb
xor
dec
sub
fs
xlat
adc
cmp
sub
jbe
fmuls
dec
mov
mov
std
rorb
mov
or
in
mov
dec
fcmovne
push
adc
std
push
fdivl
pop
scas
xor
xchg
idiv
lret
jae
and
cli
add
outsl
sbb
cs
or
and
lods
fs
cwtl
xor
push
adc
mov
or
mov
dec
cmpsl
push
jle
loopne
mov
sub
aad
lret
test
and
shrl
imul
sub
push
clc
push
jae
shl
outsb
sbb
push
dec
add
loop
push
into
cmp
cmp
xchg
movl
adc
sub
imul
fisubrl
xlat
jne
pop
and
jbe
xor
xor
pop
or
mov
imul
jbe
sti
mov
push
pop
les
mov
movsl
xor
jl
sub
jns
add
in
sub
ret
insb
jp
xor
cmp
lea
jno
call
insl
push
mov
jmp
test
mov
sbb
mov
jae
insb
pushf
ret
scas
rorb
shll
jmp
ret
les
xchg
mov
mov
daa
dec
push
aam
out
add
add
sub
pop
mov
and
data16
sub
xlat
inc
stos
pop
nop
xchg
lods
lret
popa
jno
call
xor
mov
sub
lds
jbe
and
sub
test
xlat
or
orl
test
das
push
aam
mov
test
lahf
sbb
inc
fisubl
mov
fs
jp
add
out
pop
icebp
loopne
xchg
or
fidivrl
xor
push
in
adc
and
fs
je
cmp
mov
fnstenv
mov
xchg
rcll
in
addr16
adc
mull
and
or
pop
mov
sub
and
or
outsb
mov
cmp
icebp
stc
loope
pop
xchg
sbb
dec
leave
loope
subb
clc
ret
je
push
pop
cmp
aaa
fstpt
pop
ret
daa
mov
xchg
sti
js
lods
fwait
sahf
aas
sub
ja
dec
jl
jo
fisttpl
pop
sub
adc
movsb
sbb
xchg
jno
pop
pop
xchg
sbb
ret
cmp
int
decl
cld
add
mov
and
xchg
stos
lods
cmpb
push
loope
es
inc
dec
in
ljmp
dec
cmp
fsubr
imul
popf
mov
sbb
stc
adc
adc
shlb
pop
je
jno
jns
lods
and
mov
insb
test
scas
std
mov
loopne
jecxz
or
lock
push
jge
mov
cmp
sub
rolb
xchg
cmp
jg
push
or
hlt
pop
jp
shrl
xchg
mov
sbb
lret
xchg
dec
adc
arpl
repnz
lcall
ds
cmp
or
cmpb
push
jae
mulb
cli
sub
addl
in
push
mov
jno
rcll
mov
pop
mov
es
es
add
cmpsb
or
loope
or
xor
or
jmp
push
dec
in
sbb
filds
dec
xchg
mov
ficoml
bound
xlat
add
pop
pusha
or
ljmp
xchg
inc
test
cmpsl
and
dec
fcmovnbe
cmc
and
repnz
or
push
mov
or
jno
outsl
sub
loop
xchg
aad
sbb
movsl
aad
xchg
cli
adc
xchg
cmp
shlb
mov
push
iret
jp
mov
dec
sahf
push
daa
or
hlt
sbbl
sub
xlat
push
cmpsl
adc
mov
jo
dec
arpl
xchg
sbb
imul
stos
add
js
inc
loop
sub
xor
sbb
cmp
xor
in
popa
test
xor
jnp
fmuls
mov
loope
testl
test
sbb
jb
out
mov
cmpsl
into
xor
loope
inc
mov
mov
mov
fnstsw
ja
cmp
dec
push
les
sub
inc
cmp
fistl
insl
cmp
adc
mov
ss
add
adc
jl
push
shr
lock
fdiv
jl
mov
arpl
test
in
xlat
out
xchg
mov
sub
rcll
push
or
movsl
repz
mov
dec
mov
mov
shl
ret
lcall
xchg
fs
imul
cmc
or
xchg
mov
notw
subl
enter
xor
push
push
repz
push
push
cli
inc
sub
push
inc
jae
orl
test
xchg
pop
fwait
pop
scas
mov
movb
sbb
mov
movsb
mov
inc
jns
scas
sti
cmp
hlt
inc
ja
fistpl
mov
psrlw
fwait
dec
push
repnz
insb
adc
lret
lret
dec
fimuls
push
adc
xor
dec
or
or
adc
jg
inc
jecxz
std
jae
rcrl
call
lcall
scas
repnz
pop
cwtl
cmp
or
gs
mov
ss
xlat
inc
scas
jne
jmp
les
dec
push
mov
lahf
lods
aad
sbb
xlat
adc
cmc
cmp
stos
xchg
jg
add
pop
dec
mov
cs
push
stos
or
sbb
mov
sti
cmp
rolb
and
shl
adc
mov
gs
mov
push
and
test
ss
dec
rcrb
xlat
aaa
or
fcmovnu
lods
fsubrl
fistl
call
int
mov
rcr
cld
ja
sub
mov
push
outsb
dec
mov
sbb
xor
cmp
xor
hlt
aas
sbb
sbb
dec
loope
and
push
push
jno
push
ljmp
mov
ja
mov
mov
cli
aam
fadd
sub
fidivrl
adc
mov
addr16
mov
sub
push
xorb
push
push
jecxz
jecxz
xor
in
add
sbb
xor
mov
xchg
mov
pop
mov
test
jp
test
sub
mov
loope
cmp
movsb
dec
arpl
movsl
ss
imul
inc
adc
cmp
in
xlat
ficomps
frndint
bound
xor
das
test
pop
mov
add
iret
sbb
arpl
dec
scas
int
pop
xor
cmp
xchg
jbe
into
mov
sarb
repnz
lahf
jecxz
mov
xchg
not
mov
icebp
shr
adcl
push
mov
sub
les
add
es
or
xchg
mov
jnp
js
pushf
xlat
loop
mov
jp
jp
ds
in
pop
push
int3
fstps
je
pop
jne
mov
inc
jge
add
mov
xor
push
ljmp
sti
sahf
cmp
pop
jne
and
jmp
repz
cs
push
cltd
xor
push
stos
push
iret
xchg
outsl
in
pop
sub
sub
in
push
std
or
mov
negb
dec
in
clc
mov
cwtl
xchg
aam
jne
xor
sarl
adc
xchg
mov
lret
sbb
dec
cmp
xor
dec
cmp
jne
je
xchg
sub
ja
fcoml
nop
ret
pop
push
xor
imul
lcall
adcb
and
pop
fldt
sub
iret
inc
jno
subb
sbb
ljmp
in
andl
sub
cs
or
je
add
jecxz
mov
aad
cli
popf
loop
xchg
cmc
mov
subl
jae
flds
or
push
cmp
and
in
les
sub
stos
sbb
outsb
shlb
subl
lret
inc
xor
jmp
in
push
jbe
xchg
or
ja
rorb
mov
fnstcw
inc
fwait
outsl
jge
pop
push
aad
xchg
dec
pop
fstpt
jns
stc
xlat
push
incb
or
push
push
cld
test
hlt
cmp
gs
insl
push
push
lret
inc
dec
dec
xchg
je
jae
daa
cltd
or
bswap
aam
inc
sbb
push
int3
xlat
movsl
cmpsl
shll
dec
test
aad
cmpsb
cmp
fmuls
insl
push
pop
in
hlt
push
push
movsb
pop
jecxz
jmp
ret
jne
pop
outsb
outsl
ds
sbb
push
or
daa
cltd
imul
sub
mov
outsl
mov
pop
push
lret
jne
lcall
call
cmp
jle
dec
jns
jmp
fsubs
inc
push
in
xchg
xor
cli
push
repz
xchg
daa
test
jge
jle
cmp
and
jmp
jge
jbe
pop
adc
or
test
das
fsts
inc
pop
xchg
popl
movsl
sub
std
cmpsl
nop
data16
xor
mov
jbe
rorl
mov
jmp
rol
movsl
popfw
imul
dec
mov
sbb
jbe
fld
shll
fcmovnb
or
imul
push
aad
jae
mov
jb
sbb
jbe
fldcw
fists
and
les
xor
dec
test
pop
pop
jle
fisubl
push
stos
mov
mov
cwtl
mov
dec
out
pop
das
orb
outsl
adc
push
je
movsl
bound
ja
ret
sarl
ret
ss
stos
lock
push
pop
es
ret
pop
jge
jno
inc
jp
jns
cwtl
sub
or
add
repnz
cmp
rorl
fcmovnbe
cli
or
cli
repnz
xchg
xor
jbe
pop
push
loop
call
cmp
adc
sub
xchg
or
std
sbb
cmp
out
cli
pop
sub
dec
sar
fbld
pop
mov
fildll
cmp
je
xor
and
in
pop
cmp
lret
stc
sti
add
xchg
inc
pop
mov
mov
sahf
jae
mov
sbb
repz
pushf
popa
sub
imul
addr16
push
pop
test
xor
ret
push
fcmovnb
ss
bound
jae
and
jno
ficomps
xchg
sub
mov
lcall
jbe
sbb
imul
xchg
fimull
cltd
cs
jae
shl
lea
mov
sarl
dec
ret
jmp
in
mov
sbb
fisttpl
int
push
js
cmp
inc
xor
mov
and
jno
push
dec
or
pushf
stc
jecxz
out
xchg
sbb
loopne
jmp
xor
dec
xor
inc
or
fstl
jge
imul
inc
scas
dec
scas
pop
and
shl
push
cmp
xlat
mov
fstps
and
test
in
icebp
inc
repnz
sbb
scas
mov
xchg
fdivs
dec
das
xor
inc
pop
and
lods
inc
jle
daa
and
sahf
inc
shlb
mov
inc
pop
cmp
sbb
lods
arpl
cmp
imul
iret
mov
mull
or
xchg
mov
mov
pop
inc
arpl
cli
nop
jmp
and
dec
stc
pop
pop
loope
ja
stos
sbb
mov
shr
cltd
jp
shlb
xchg
mov
popf
push
lahf
rorb
pop
movsl
loopne
adc
sub
push
mov
arpl
sbb
cmp
jae
xor
fs
mov
pop
fistl
dec
scas
adc
ds
push
xlat
or
cmp
cmc
add
sbb
andl
test
mov
mov
inc
pushf
aam
outsb
mov
mov
data16
ljmp
out
mov
or
sbb
and
jg
pop
fs
fldenv
pop
sub
pop
jmp
inc
movb
mov
or
or
cmp
pop
mov
cmp
jle
sbb
push
and
call
popf
in
push
pushf
xlat
test
mov
cwtl
fs
pop
lcall
pop
or
scas
ljmp
and
aaa
add
cli
jae
mov
or
leave
and
enter
outsl
incb
scas
cmp
adcb
xchg
pop
jbe
push
pop
clc
test
add
sbb
xchg
dec
mov
cli
mov
lock
cmpsb
sub
xor
imul
stos
pop
ljmp
repz
lock
ss
or
in
dec
push
lcall
pop
push
jg
hlt
rclb
addl
xor
push
cld
inc
leave
sarb
aas
fmull
xor
jbe
fcmovnu
and
dec
out
mov
je
loop
das
mov
push
and
loopne
fmuls
daa
out
iret
out
adc
add
shrl
xor
or
push
call
mov
jmp
fimuls
and
jns
push
adc
lret
stos
or
xchg
repz
loopne
stos
imul
insb
test
jge
adc
test
cltd
or
mov
dec
sbb
stc
cmp
cld
enter
xor
subb
dec
cmpsb
or
xor
out
dec
add
xchg
or
xlat
das
popl
dec
cmc
jne
fcoml
inc
rolb
jmp
jb
jge
je
push
loop
fwait
add
mov
inc
test
es
bnd
jge
jl
dec
pop
pop
xlat
fisubl
mov
sub
xchg
mov
insb
dec
cmp
addr16
mov
xor
repnz
sbb
dec
mov
fwait
lods
pop
dec
jmp
push
adc
xor
fucomi
xchg
mov
div
loope
jl
mov
subb
jae
popaw
adc
push
or
js
cmp
cmp
mov
out
fstpt
sbb
and
sbb
jge
mov
jnp
or
jmp
cld
mov
enter
adc
dec
jp
mov
not
pop
jecxz
mov
sbb
cs
sti
rcll
xor
xor
sbbl
jb
xlat
pop
mov
add
jo
dec
pusha
pop
cmp
fcmovnbe
adc
sub
lret
push
mov
push
pusha
inc
dec
or
cmp
in
xchg
sahf
shl
push
pop
stos
int
push
and
adc
les
jmp
xchg
or
push
arpl
test
xor
icebp
add
fisttpl
and
shrl
cli
lret
adc
and
mov
sti
adc
rolb
adc
xlat
pop
push
or
pop
testl
adc
test
inc
fneni(8087
dec
jg
adc
jge
mov
xor
jmp
stc
adc
pop
scas
out
and
lea
in
or
dec
dec
adc
imul
xorb
stc
jle
xchg
mov
mov
popa
ja
and
mov
cmp
jb
mov
mov
xor
ss
movsl
push
jae
ljmp
xlat
adc
jmp
cli
xchg
cwtl
jmp
push
inc
jp
jmp
xchg
push
in
repz
and
sub
mov
pop
pop
jo
adc
push
pop
repz
xlat
icebp
je
std
loope
sbb
roll
out
int
outsb
lmsw
mov
notl
movsl
xchg
lea
cs
jg
push
addb
and
sub
outsl
xor
and
fstps
nop
or
push
mov
jne
aad
fnstcw
and
inc
mov
and
xchg
xor
mov
cmp
push
aaa
aas
ret
mov
mov
and
push
daa
dec
lds
jl
nop
xor
inc
pop
mov
and
mov
ljmp
clc
push
sbb
leave
sbb
lcall
ja
mov
xchg
dec
lret
shl
gs
cmp
insb
inc
cmp
and
cld
cmpsl
or
mov
push
leave
inc
and
in
push
lret
ror
sub
sti
imul
xor
sbb
jp
mov
sbb
fisubs
mov
enter
add
pop
cmp
pop
xor
incl
push
or
decb
sti
or
inc
pop
lock
ja
inc
aaa
mov
xlat
mov
push
lods
xchg
dec
mov
hlt
push
test
loopne
sbb
add
lret
mov
sub
mov
jns
jbe
push
fmulp
inc
adc
push
xor
mov
mov
sbb
ja
pop
out
cli
adc
push
mov
jmp
mov
dec
imul
jns
xchg
jno
cmp
or
in
sub
lea
adc
inc
imul
jae
mov
and
add
xchg
jae
cmc
aaa
sub
and
jp
mov
jle
sbb
jb
call
or
orl
xor
mov
cmp
bound
sbb
pop
ja
movsb
stc
adc
cli
jno
sub
and
iret
push
ljmp
and
dec
sub
adc
orb
pop
sub
add
lods
mov
jae
xor
shrl
lret
push
push
clc
andb
or
mov
das
mov
push
jle
mov
testb
imul
jns
sub
jle
out
sbb
pop
dec
je
imul
sarl
mov
ror
jmp
fisttpl
push
fists
sub
dec
sarb
subl
jno
or
insb
cmp
cwtl
stc
fisubrs
movsb
mov
ficoml
stc
push
jae
in
out
xchg
sbb
cmp
sub
adc
divb
push
in
cld
orl
or
gs
adcb
lods
movsb
push
popa
adcb
out
ret
sub
inc
sbbb
push
out
xchg
popf
ret
dec
out
out
ja
fnstenv
sub
mov
pop
fisubrl
push
lods
pop
pop
sbb
loope
fs
jmp
mov
loop
pop
jecxz
test
mov
jns
jno
rolb
mov
mov
sbb
xchg
mov
lock
lahf
test
dec
fldenv
push
dec
mov
scas
push
es
fldl2t
cmp
cwtl
dec
dec
and
mov
lds
cmp
aad
cmp
int3
movsb
jae
xor
das
push
push
orb
fldenv
lods
push
in
popf
repz
data16
pop
mov
sub
rol
lret
xchg
std
imul
inc
pusha
fwait
mov
mov
push
push
pop
cmp
cltd
cld
popf
stos
xor
mov
sbb
dec
cmc
pop
inc
xlat
xor
addl
ret
lods
and
and
test
fdivrl
and
sbb
add
addr16
fldenv
ds
mov
pop
fists
lret
insb
dec
jb
outsb
cli
push
fsts
cs
ds
je
dec
jae
xchg
jno
mov
data16
neg
cltd
scas
gs
orps
ds
jae
sahf
lods
sbb
sub
inc
popf
in
cmp
inc
movsl
jg
cmp
mov
pushf
aam
fwait
xor
in
jb
in
arpl
mov
mov
inc
and
jae
xlat
subl
cld
xchg
mov
enter
xor
stc
mov
cld
mov
gs
shrb
inc
sub
bound
data16
addr16
mov
ljmp
sbb
imul
cmc
stc
bound
jl
jns
mov
jno
xchg
or
or
xor
call
push
sbb
mov
xchg
mov
mov
sub
cmpsb
movsb
cmp
push
xor
mov
test
mov
fwait
xchg
fcmovnb
push
mov
xchg
xchg
and
fs
jmp
loope
test
shr
mov
push
xchg
cmp
sub
adc
or
mov
sub
scas
cmp
scas
bound
mov
mov
jg
sub
adc
or
loopne
loopne
test
xchg
add
mov
xchg
mov
adcb
pop
jge
mov
cs
ret
icebp
loopne
daa
in
mov
cld
xchg
add
sarb
or
mov
cltd
mov
mov
jnp
fprem
out
movsl
addr16
push
scas
inc
jbe
jne
sub
mov
adc
add
int3
xorb
mov
ret
nop
jp
mov
adc
pushf
pop
nop
push
test
sbbl
lea
pop
js
aaa
fisubrl
ss
std
insl
cmp
or
out
movsl
cmp
insl
jbe
push
adc
push
cld
outsb
mov
icebp
inc
xchg
data16
in
popa
sub
inc
lods
jae
repnz
xor
xlat
lahf
jl
add
daa
addl
les
ds
insb
clc
addr16
mov
jae
pop
mov
loope
or
adc
cmp
cmpsl
cmp
xor
loopne
sahf
mov
call
xor
mov
xchg
subl
lods
inc
xlat
adc
xor
jno
add
xchg
cmpsb
ja
in
lret
sbb
pop
mov
add
mov
out
stc
movsl
push
ljmp
add
and
inc
cmp
jns
mov
pop
xor
lret
nopl
adc
repz
sub
pop
inc
out
mov
cmpb
subl
cmpsl
cmp
pop
test
cs
pop
repz
mov
in
mov
ficoms
pop
fldenv
dec
xor
enter
xlat
rol
and
lods
int
mov
dec
rcrl
arpl
test
ret
and
xchg
pushf
sub
pop
mov
call
push
jae
loopne
test
cmpsb
jae
pop
and
pand
sub
aas
dec
in
inc
dec
call
push
popf
lret
xor
rcll
mov
jp
gs
imul
out
loopne
inc
and
xchg
jmp
and
and
test
fwait
inc
out
outsl
testl
sub
loop
mov
xor
out
jmp
lea
jle
popf
fwait
push
pop
stos
jno
and
stc
test
mov
lock
push
push
jno
push
lods
push
pushl
sbb
test
orb
adc
push
stos
cwtl
imul
arpl
dec
ja
add
and
std
xchg
test
out
das
imul
out
dec
cmp
lods
add
pop
test
sbb
jl
dec
insl
mov
fistl
pop
add
and
dec
jnp
out
jb
add
pop
fiaddl
imul
jecxz
call
out
stos
dec
popl
mov
mov
imul
lea
pop
nop
inc
xorl
jnp
lahf
repz
imul
clc
and
push
cmp
or
adc
rclb
repnz
xlat
mov
das
add
pop
aad
sti
pushf
call
pop
push
sub
leave
pop
popf
sbb
pop
stos
aam
xor
shr
jae
stc
loope
pop
cmpb
cltd
jns
push
xchg
sub
imul
xchg
or
adc
cmpb
push
jbe
jecxz
jmp
xor
cmp
mov
jo
leave
sbb
pop
ljmp
inc
mov
aaa
test
sub
roll
mov
repnz
scas
test
lahf
jae
outsb
and
push
fwait
cmc
mov
ja
test
dec
bound
pop
mov
lods
into
orl
dec
sbb
pop
xchg
clc
push
fisttpl
movsl
mov
and
out
ret
fldenv
xchg
mov
jno
pop
xor
and
xor
mov
je
scas
jns
loope
sbb
mov
and
add
aad
js
jp
adc
cld
adc
mov
lock
fisttpl
incl
or
xchg
pop
adc
inc
xor
mov
loope
test
sub
fyl2xp1
sub
cwtl
mov
mov
jno
std
pop
leave
je
add
mov
negb
out
mov
push
orl
rcrl
pop
mov
add
mov
std
lea
mov
ja
int
jg
sbb
cld
in
xchg
pop
ret
mov
addr16
insb
test
fildl
pop
shlb
pop
lret
or
nop
dec
dec
inc
push
mov
cmp
mov
push
stos
add
mov
lret
sub
call
int
jle
ret
pop
xchg
cli
out
or
pop
push
jmp
pop
arpl
pop
enter
pushf
jae
inc
jno
pusha
xchg
push
jg
inc
int
jp
or
add
test
or
mov
incl
cmp
inc
jo
cwtl
mov
pop
orl
xchg
xlat
out
imull
in
mov
shll
fcmovnu
das
fwait
push
push
sub
jp
inc
mov
gs
jne
push
and
ret
imul
test
push
pop
scas
sub
xchg
out
mov
cs
ja
insb
cmpsb
shlb
enter
pusha
push
fisttpl
lret
adc
dec
xor
bound
and
jae
popf
push
jns
outsb
inc
inc
or
jae
sarl
test
mov
pusha
inc
addr16
sbb
jg
sub
nop
ret
ja
pusha
outsb
jno
jg
pop
mov
xchg
inc
sbb
arpl
push
mov
jne
daa
sub
fildl
sub
icebp
out
loope
or
lret
cmp
out
andl
fisttpl
xchg
andl
jge
xchg
jae
es
add
cmp
xorl
hlt
fcmovnbe
fdivrp
aaa
jge
enter
mov
ret
adc
cltd
cli
setge
movsb
popf
shlb
filds
iret
mov
ret
push
mov
js
xor
outsl
mov
pushf
popa
ret
pop
insb
ja
lret
aas
outsl
cwtl
cli
or
daa
xchg
and
mov
and
adc
in
push
lea
call
sti
or
cmp
andb
andb
ret
test
jne
xor
add
dec
xlat
sbb
cld
nop
or
ds
es
fdivrs
mov
in
mov
xchg
xchg
or
mov
das
subl
xor
pop
test
rcrl
cmp
movsl
inc
shrb
or
lock
dec
dec
testl
push
sar
mov
mov
xlat
lcall
cmp
jl
xchg
dec
pushf
sbb
pushf
sbb
clc
test
ja
push
dec
mov
sub
xor
and
loope
push
in
dec
sub
sbb
cli
push
sbb
fistl
cltd
and
fidivs
inc
adcb
fcomp
cmpsl
cmp
shl
and
or
mov
popf
in
pop
inc
mov
inc
in
pop
pop
sbb
push
mov
and
jmp
lahf
aaa
repnz
stos
and
mov
add
dec
and
dec
lret
sti
xor
push
enter
cs
aam
movsb
push
and
mov
sbb
test
and
jae
adcl
push
cmp
push
and
hlt
dec
gs
pop
push
dec
mov
push
ficompl
mov
push
sub
dec
in
mov
es
mov
xor
inc
push
addr16
movl
xlat
shr
jo
add
dec
and
rcrb
imul
rorl
cmp
inc
icebp
lock
hlt
xor
dec
and
ds
shlb
mov
pop
mov
cmp
xlat
sub
mov
jmp
sbb
sbb
mov
mov
and
in
push
fs
sbb
cmp
inc
xor
fidivl
sbb
jmp
push
jg
out
mov
test
popa
xchg
adc
mov
jg
fmuls
mov
adc
ljmp
mov
out
mov
icebp
lret
lret
and
stos
cld
xor
jg
pop
lret
shl
scas
fs
xchg
jge
jae
arpl
mov
sub
icebp
mov
push
pop
cmp
jp
sti
cmpl
sub
stc
jbe
cmp
mov
inc
xchg
dec
adcl
test
popf
cld
mov
les
ja
cmpb
int3
add
int3
jmp
das
lcall
sbb
hlt
jae
or
pop
lods
jae
mov
adc
stc
stos
or
add
stos
movsl
push
or
sbb
xor
arpl
shll
iret
js
cld
mov
jnp
dec
pop
xchg
jg
sbb
cwtl
inc
ret
data16
jbe
sub
aad
sub
test
push
pop
outsl
sahf
push
pushf
add
fistpl
xchg
jge
xorl
xchg
cmp
or
stos
pop
jo
or
and
xor
mov
jge
push
mov
pop
or
in
lret
mov
rorl
addl
lret
test
fadds
adc
out
push
cmp
lret
jge
inc
and
dec
aad
push
jmp
jle
jno
cmp
insl
push
call
mov
ret
mov
add
dec
enter
sub
push
mov
out
cs
fs
xchg
cmp
push
out
jae
movsb
add
mov
imul
repnz
pop
xor
jae
aaa
cwtl
stos
jmp
and
cmp
imul
outsl
cmp
mov
cmpl
sbb
xlat
clc
shll
lahf
cmp
pop
adc
jge
push
mov
jns
and
add
stos
xchg
hlt
sbb
jbe
sbb
test
in
daa
cmp
push
mov
push
cli
xor
cmp
mov
pop
bound
sbb
jp
subb
push
and
add
push
mov
push
pop
lods
sbb
stc
jno
fdivs
pop
pop
dec
jo
xchg
shrb
mov
sbb
and
mov
into
push
in
push
pop
or
sub
hlt
push
cld
iret
and
dec
mov
mov
add
sub
cs
stos
and
mov
rolb
mov
pop
es
testl
lods
idivl
cmp
pop
jp
stos
mov
enter
xor
insb
sub
or
adc
repnz
cmp
mov
push
inc
ljmp
sti
mov
cmp
adc
and
cmp
jae
pusha
pop
cmp
mov
cli
ja
fldt
stos
push
and
xlat
jae
sbbl
mov
loop
jno
fadd
and
cmp
daa
sub
mov
mov
adc
dec
pop
and
addr16
mov
loopne
xor
inc
mov
jno
add
sti
adc
pop
out
xchg
xor
aad
and
jbe
jnp
and
popa
or
mov
xor
sub
inc
into
xlat
push
xchg
js
xlat
push
mov
imul
pop
popl
mov
inc
daa
subb
ret
cli
mov
push
jns
dec
fisubrs
in
fistl
lahf
push
das
push
mov
ret
mov
sub
dec
xor
das
fwait
and
jl
lahf
sbb
mov
push
mov
pop
andb
pop
xor
mov
add
cltd
or
or
test
daa
adc
aas
sub
mov
lahf
xchg
pop
dec
aam
int3
push
enter
daa
ret
jb
popa
lds
into
dec
or
xor
or
pop
pop
ret
sub
sbb
add
out
lcall
mov
adc
cmp
out
andl
xor
pusha
jnp
sbb
mov
cmp
or
mov
js
xchg
das
sahf
mov
mov
shll
push
inc
cwtl
pop
xchg
movsl
pop
lret
jg
cmp
adc
cmp
stc
cltd
fstpt
rcl
in
dec
push
nop
pushf
ss
pop
cmp
mov
inc
inc
push
mov
mov
xor
or
fisttpl
sti
mov
cmp
out
sbb
ja
and
hlt
xor
pop
xchg
push
and
icebp
into
and
mov
add
pop
lods
aad
fistpl
test
inc
stos
test
loopne
xor
or
xlat
cmpsb
cmp
xor
and
dec
daa
imul
int3
ja
push
jle
hlt
inc
cmp
outsb
xor
ret
mov
sbb
and
cmp
sarb
mov
addr16
jp
push
loop
clc
push
icebp
imul
mov
jg
mov
mov
and
xor
xlat
sub
push
add
jg
sti
dec
aas
out
cmp
dec
cmp
inc
pop
or
pop
fnstcw
mov
push
fisttpl
and
inc
ja
or
fs
jle
pushl
mov
test
fsts
fimuls
adc
mov
ror
mov
cmp
sub
adc
adc
dec
ror
jge
xlat
je
arpl
xor
mov
repnz
pop
cmpsb
movsb
js
dec
or
and
jmp
lea
insb
jmp
movsb
or
push
inc
in
push
xor
mov
arpl
leave
mov
dec
cmp
sahf
xor
data16
lock
xor
mov
cmp
xor
push
mov
fwait
mov
xchg
cmp
call
insb
ljmp
mov
pop
xchg
incb
insb
xchg
mov
lods
orl
mov
dec
ljmpw
les
add
cmpsl
cmp
mov
out
jmp
sbb
inc
add
mov
into
test
iret
lods
mov
daa
dec
lock
lock
push
jne
inc
and
imul
dec
lret
bound
jl
or
and
cmp
repz
lods
fisubs
sub
sub
and
inc
sbb
movsl
add
cs
sbb
cmp
stos
xchg
mov
mov
inc
cmp
pop
ret
aam
rcll
mov
enter
jb
andb
cmp
push
fistl
mov
fisubrs
fwait
adc
je
pop
push
pop
lods
stos
andb
hlt
inc
daa
xlat
pop
mov
rorb
sbb
push
pop
dec
js
je
bound
fistpll
adc
push
sbb
and
lods
rcrb
nop
jno
xor
sbb
push
sbb
repnz
jp
rcr
xor
xor
jno
jbe
fbstp
stc
xlat
cmp
mov
loopne,pt
jecxz
pop
or
mov
push
adc
xor
dec
xor
js
jo
adc
add
notl
cs
pushf
inc
mov
sbb
sarl
cmp
out
loope
mov
lahf
nop
mov
ljmp
add
ja
nop
sbb
std
mov
push
imul
jo
mov
inc
imul
mov
push
jno
pop
or
iret
adc
or
iret
test
lret
ja
sub
ljmp
push
mov
cmp
stc
dec
sub
or
xchg
imul
popf
jo
mov
dec
sbb
mov
mov
jg
fcomps
mov
aam
xchg
repnz
nop
movsb
mov
gs
gs
add
and
xchg
or
jne
xchg
push
sub
test
fucomi
push
fists
jae
hlt
clc
mov
push
bound
jb
xchg
mov
pop
dec
fisttps
xor
and
push
icebp
and
cmp
scas
ljmp
jns
cmc
bound
xor
or
xchg
iret
push
stos
lods
sbb
mov
arpl
sbb
cmpsl
or
push
leave
icebp
sub
mov
sar
xchg
out
sub
movsl
push
sbb
test
insl
sub
sbb
xor
arpl
test
les
xlat
int3
xorb
sahf
iret
pop
js
repnz
pop
xchg
shll
dec
cmp
decl
dec
mov
mov
pop
adc
sbb
stc
sub
imul
out
fbstp
stos
ror
jae
or
bound
xchg
aam
xor
ljmp
leave
xor
cli
adc
rol
movb
out
pop
mov
and
rcrb
test
repz
sub
movsl
das
call
cmp
js
pop
and
xchg
add
push
xor
push
mov
sub
lock
ret
sub
jne
push
pop
movsl
int
mov
test
jmp
popf
mov
lret
fcomps
and
xor
nop
hlt
and
mov
adc
daa
push
xlat
lods
adc
sub
dec
fistl
inc
stc
inc
push
out
mov
insl
das
addr16
aam
aam
push
inc
xor
mov
neg
out
ss
xor
mov
push
imul
rcr
jmp
xor
movsl
scas
rcrl
aaa
sbb
mov
subb
in
dec
xchg
sbbb
mov
imull
or
pop
es
jo
xchg
test
sbb
iret
jmp
pop
push
pop
inc
pop
sbb
jge
fst
and
mov
pushf
push
sub
nop
out
mov
in
add
or
fs
sub
jo
cmp
mov
jmp
nop
pop
mov
ret
jo
mov
int3
cmp
xlat
mov
shlb
jae
test
sub
and
and
fcmovnu
adc
mov
std
bound
pop
push
movsb
push
inc
jbe
mov
jbe
test
mov
jne
sti
clc
rcll
daa
or
push
scas
xchg
in
xor
adc
mov
xlat
mov
or
sub
int
and
cmp
dec
xlat
pushf
imul
je
stc
pusha
or
jg
mov
out
cmp
pop
cwtl
andl
pop
addb
inc
dec
ja
sbb
sub
sub
sbb
adc
push
sbb
pop
sbb
jle
xor
mov
pop
push
push
or
inc
xchg
std
inc
mov
and
leave
cli
fnsave
fcomi
xor
mov
fs
sub
sub
popf
icebp
sub
ret
orb
cmp
add
imul
xchg
mov
xor
and
add
aaa
aad
rcrb
fstps
cmpl
mov
int
xor
jl
cwtl
add
sub
cli
insb
scas
inc
cmp
je
inc
test
dec
cmc
pop
adc
fstl
xchg
jbe
mov
mov
pop
jnp
dec
loopne
adc
ja
push
xor
testl
jbe
pop
push
addr16
cmpsl
ljmp
hlt
sbb
mov
fimull
jae
cltd
fs
pop
add
sbb
xchg
add
test
inc
sbb
es
sbb
scas
mov
lea
std
addb
repz
push
mov
mov
add
and
outsl
cmp
xor
jb
cmpl
dec
xchg
xchg
jne
mov
psllw
sub
mov
sbbb
cld
sbb
movsl
xorb
sub
lretw
je
or
icebp
int
lods
push
sbb
pop
add
jns
adc
mov
sub
push
pusha
xor
adc
mov
jle
jne
in
gs
inc
fwait
push
inc
xlat
sbb
jg
aam
push
mov
push
cmp
pop
shlb
fistl
inc
sti
loopne
fbstp
and
sbb
jmp
cmp
iret
repz
pop
jae
test
pop
push
sbb
cmp
mov
add
xlat
out
cmp
pop
jb
movsb
rclb
xchg
cs
dec
xchg
xor
push
ret
mov
push
outsb
addr16
inc
aaa
fmul
or
jmp
inc
xchg
pop
sahf
dec
push
gs
mov
cmp
xlat
add
xchg
fnstcw
or
out
int3
mov
mov
push
test
xor
inc
and
es
xchg
and
fs
mov
int
cs
pop
and
sbb
cs
pop
sahf
sti
cmp
in
daa
adc
and
leave
or
test
sub
add
cli
cli
fmul
jno
cmp
fwait
sbb
add
and
adc
fistpl
dec
in
inc
pop
xor
insb
and
loopne
mov
push
push
and
xlat
insb
cld
sti
les
orb
mov
out
mov
jp
out
flds
clc
and
mov
xchg
cmp
fimuls
fstpt
mov
mov
test
or
mov
adc
imul
out
dec
or
jp
mov
dec
cwtl
scas
gs
push
xchg
leave
cmp
mov
inc
repz
dec
xlat
cmp
fnstcw
iret
dec
lcall
rolb
daa
and
mov
dec
in
jne
jbe
fwait
xchg
and
fadds
ret
loope
inc
js
sbb
nop
in
xchg
sti
mov
xlat
addr16
cmp
fidivl
std
jmp
nop
sub
xchg
int
stc
data16
cmp
adc
fs
dec
in
lcall
repz
test
stos
fadd
out
imul
cmp
popf
pop
je
inc
jg
dec
mov
hlt
pop
add
ds
mov
sbb
dec
mov
mov
mov
mov
pop
mov
lcall
mov
rol
test
loop
dec
push
fistl
imul
inc
jae
in
mov
loop
dec
pop
insb
lret
test
sub
fcmovnbe
shl
fisubs
stos
dec
test
jne
lock
popf
xlat
stos
aad
addr16
sub
sti
fldenv
and
ljmp
nop
add
dec
mov
mov
sahf
push
into
aam
xor
and
movsb
rcrb
std
das
jno
xor
sahf
bound
xor
mov
call
mov
std
mov
mov
jl
pop
rcrl
push
pop
in
shl
or
jmp
jae
in
and
pop
pop
add
sbb
cmp
fs
mov
aam
lret
fisttpl
add
jns
pop
ret
cmp
shrb
pop
jle
fadds
mov
rorb
out
push
add
mov
xchg
sub
nop
pop
lea
inc
fadd
adc
push
sbb
ret
mov
jg
fcmovnbe
call
loop
pop
mov
lods
and
jmp
out
push
jnp
jl
test
xchg
jbe
add
rcr
or
mov
and
push
dec
or
inc
enter
pop
mov
fstl
adc
lods
fwait
mov
ljmp
pop
into
cmpb
push
loope
or
push
mov
push
mov
mov
pop
xor
fimuls
push
xchg
pop
shr
pop
cld
in
nop
xchg
aad
stos
sbb
fsts
sub
out
leave
test
cs
fisubl
loope
cmp
and
scas
dec
mov
stos
add
jo
lret
andb
sub
fcmovnu
int
fmuls
sub
xchg
mov
mov
loopne
clc
and
cli
sbb
xchg
xor
sub
mov
or
das
sub
sub
fwait
xchg
mov
jecxz
and
pop
ds
mov
popf
lea
sbb
inc
xchg
pop
testb
sbb
bound
hlt
push
dec
lds
rclb
push
mov
or
ficomps
les
lods
jno
mov
jbe
enter
fcmovu
cmp
imul
popf
or
pop
cmpsl
inc
add
in
ror
out
sub
push
std
xchg
xor
stc
xchg
xor
jp
addr16
push
sbb
inc
mov
ja
mov
cmp
xlat
pop
ja
push
xor
xchg
mov
xor
cmp
scas
pop
aam
mov
inc
xor
scas
jecxz
popf
cli
xor
mov
adc
neg
iret
sbb
ljmp
and
push
push
int
fcoml
subb
out
jb
mov
leave
add
lret
imull
push
inc
pop
in
jno
or
jbe
mov
orb
js
imul
enter
mov
sbb
imul
jae
mov
leave
mov
xor
jno
fsts
xchg
sbb
inc
sub
mov
add
pusha
adc
xchg
push
call
movsl
sbb
loop
insl
push
test
jg
pmaxub
sub
pop
lret
cltd
scas
ljmp
mov
in
aaa
xor
mov
push
push
gs
mov
adc
cmp
or
ja
insb
fnsave
inc
pushf
mov
pop
imul
add
in
adc
xchg
or
xchg
cmc
repnz
mov
dec
xlat
pop
imul
push
hlt
jl
sbb
and
sbb
pushf
xchg
push
fimuls
cmp
adc
inc
les
cmp
outsl
movsl
shr
sbb
add
pop
adc
and
and
in
aas
arpl
xlat
sub
in
push
outsl
push
mov
testl
push
aad
rorl
xchg
jbe
cmpsl
ljmp
sub
loopne
sub
or
jnp
fstps
pop
mov
push
stos
dec
cmp
sbb
aam
add
jae
fldcw
push
dec
insb
xchg
xor
mov
pusha
and
jmp
test
pop
dec
lahf
xchg
scas
xor
sub
push
pop
cmpsl
mov
imul
sbb
stos
adc
mov
lcall
adc
cs
je
jbe
pop
in
sub
lahf
or
sub
shr
fsts
pop
sbb
jno
push
imul
les
cmpsb
test
mov
pushf
dec
and
popf
or
inc
dec
sub
insb
dec
mov
fucomip
adc
xlat
or
sbb
lock
jge
cltd
or
outsl
fisttpll
in
mov
mov
cld
into
push
mov
stc
adc
jl
jmp
or
mov
cld
call
adc
aam
xchg
and
dec
pushf
cli
xchg
fadd
shrl
cs
fadds
int3
xlat
push
fs
das
arpl
shl
lods
dec
and
test
or
mov
cmp
xchg
ds
sbb
cs
mov
xchg
movsl
cmp
mov
das
nop
push
or
sub
jae
decb
jns
imul
push
orl
lret
xchg
cmp
jmp
js
sbb
arpl
fistpl
mov
and
add
addl
movb
jp
mov
cltd
add
std
and
scas
mov
sub
ja
xlat
fwait
ret
fs
mov
sub
mov
or
data16
lods
or
ror
xor
xor
pop
xor
popa
test
sbb
mov
dec
and
popf
mov
and
lcall
movsl
lea
dec
pop
lret
sub
push
into
jmp
jecxz
cmp
idivl
imul
and
mov
in
push
lcall
push
xchg
inc
xor
fstpt
push
dec
push
sbb
jo
packssdw
insb
js
adc
cmp
or
cli
dec
jg
cmpsb
pop
pop
sahf
pop
xlat
mov
push
in
or
mov
jp
sub
sub
nop
ss
mov
mov
push
cmp
or
fidivl
lret
mov
ret
fwait
xchg
push
pop
sbb
fld
outsl
lods
mov
mov
fwait
or
mov
pop
add
add
imul
xor
pop
in
pop
fisttpl
out
cmpsb
cmp
enter
xchg
sbb
aaa
out
cmp
jecxz
sbb
cmp
xchg
ror
pop
push
andl
fstpt
daa
int3
add
hlt
std
mov
rcrl
add
sub
mov
sub
add
cmp
xchg
ret
lahf
mov
fsts
ja
and
imul
jp
loopne
xchg
push
sbb
cmp
xor
inc
pop
sbbl
jecxz
add
adc
or
inc
imul
je
lahf
out
out
cmp
lret
sub
aaa
data16
fmuls
mov
lds
int3
sub
jmp
sbb
inc
pop
imul
sub
pop
std
fists
out
je
sub
pop
shl
out
xchg
or
mov
mov
and
mov
sub
mov
xchg
jne
pop
dec
push
inc
cli
xchg
js
adc
out
test
xchg
sbb
ds
mov
std
rorb
leave
mov
fnstcw
mov
adcb
sub
mov
test
pop
and
fldt
ljmp
pop
pushf
loopne
lret
idivl
aam
stos
rorl
imul
cmp
xlat
jns
jns
flds
jno
dec
xor
flds
sub
and
sub
jmp
les
les
and
pop
sti
arpl
jp
mov
pop
cmp
xchg
jge
in
hlt
ds
xor
pushf
das
pop
dec
dec
dec
add
and
xchg
fisttpll
push
dec
inc
or
stc
fcos
icebp
je
and
sti
mov
jle
es
mov
push
in
lcall
and
xor
mov
adc
jmp
push
jae
xor
push
add
xor
pop
cld
sub
mul
pop
fidivrs
imul
xchg
mov
xlat
sub
push
or
xor
lcall
jmp
mov
mov
mov
xchg
inc
cli
or
jecxz
test
pop
sub
inc
jae
pop
mov
push
roll
mov
add
pop
jecxz
and
jl
fnstenv
cmp
stos
jecxz
lea
leave
test
jae
insl
test
int
lods
cld
enter
adc
fnsave
and
sub
call
sbb
pop
mov
sti
pushaw
dec
fdiv
test
or
jp
aam
push
test
shll
dec
rclb
sti
jge
out
outsb
pushf
xlat
out
xchg
aam
xor
dec
scas
pop
cwtl
add
xlat
movsb
push
ja
lret
xor
test
or
push
add
lods
dec
outsl
adc
cmc
andl
fidivl
insl
cltd
xlat
out
push
pop
sti
dec
test
or
or
orb
mov
push
mov
es
in
fimull
mov
lahf
lret
pop
add
popf
jmp
fsubrl
scas
mov
fstpt
and
bound
in
jecxz
js
adc
insl
adc
inc
or
stos
pushf
push
and
fstpl
xor
stos
roll
lds
jno
daa
and
mov
or
lods
out
push
or
pushf
jge
mov
stos
and
mov
rcrb
cmp
dec
aam
int
dec
lcall
std
gs
fistl
push
stos
data16
ja
cli
imulb
enter
std
fmulp
dec
stos
or
les
and
push
push
add
jno
je
outsb
loope
and
repz
mov
icebp
int3
shl
mov
inc
sbbb
jl
mov
mov
ret
test
in
fistps
mov
lret
push
pop
jecxz
pusha
pop
push
jnp
pop
dec
arpl
cmp
mov
cld
test
and
push
lods
pop
mov
adc
adc
xor
clc
icebp
adc
cwtl
outsl
jne
mov
gs
push
addr16
cmp
out
scas
shrl
clc
test
xchg
outsb
into
imul
pop
test
cmc
stc
push
mov
test
cwtl
movsl
sahf
pop
cmpsl
iret
bound
sbb
jecxz
fwait
or
imull
pop
hlt
push
pop
roll
popf
leave
shll
in
pop
popf
mov
mov
xor
xchg
dec
mov
movsb
je
sub
sarb
incb
in
xlat
inc
xchg
arpl
lret
and
and
lret
dec
sub
pushf
pop
fisubs
mov
and
stos
jbe
gs
pop
mov
sbb
pushf
sbb
bound
fistl
stos
mov
cmpsl
popa
lcall
mov
jle
dec
outsl
imul
ljmp
test
jecxz
cmpsb
mov
add
pop
shrb
hlt
int
out
add
sahf
outsl
ljmp
cltd
and
push
scas
cmp
push
outsl
testb
mov
or
dec
jle
jmp
xor
mov
cmp
xor
addr16
push
dec
in
cltd
and
sub
stc
mov
adc
adc
add
cmc
imul
sub
call
mov
call
cltd
push
mov
sub
std
xlat
pushf
mov
dec
rcrl
dec
jp
adc
jo
daa
adc
add
fsts
ja
cld
adc
ljmp
mov
push
cmp
mov
fpatan
cmp
jl
fsts
xlat
mov
es
pop
hlt
dec
pop
pop
sub
sarb
testl
sub
and
cmpb
mov
cmp
test
lds
and
dec
fstpt
jg
iret
cld
std
inc
mov
ljmp
dec
mov
loopne
imul
mov
mov
xchg
in
loopne
cs
and
xchg
push
subl
ret
std
lret
pushfw
or
jnp
mov
or
xchg
mov
loop
adc
inc
flds
loop
inc
mov
mov
fiadds
push
loop
mov
ret
cli
push
sub
out
mov
cmp
aas
pop
aas
sub
push
sarb
cmpsl
pop
fildl
pusha
nop
xor
rorb
add
xor
lahf
out
ret
xchg
pop
shrl
mov
add
xor
dec
mov
cltd
and
add
xchg
inc
lds
movsb
outsl
and
cli
sub
pop
pop
call
daa
insl
xlat
insb
out
outsl
cmp
mov
cmp
adc
movsl
push
sti
cmp
fimuls
and
stc
iret
ds
ret
ja
pop
pop
or
and
pushf
cmp
notl
jne
jae
xchg
push
sbbb
std
xchg
xor
iret
test
xchg
or
aam
push
leave
mov
add
mov
mov
outsb
jno
xor
inc
fadds
cmpsl
insb
mov
cli
bound
and
xchg
adc
push
loope
orl
and
inc
jp
fld
into
loopne
lock
mov
dec
not
pushf
insb
clc
or
shll
mov
lret
push
aas
cmc
lahf
stos
sti
rol
xchg
cmpsb
inc
imul
mov
sbb
test
or
clc
popl
imul
xlat
jl
xor
xchg
dec
mov
sbb
mov
dec
js
ljmp
jge
popf
out
add
jecxz
rcrb
fstpl
jmp
inc
add
cli
xor
jb
rclb
subl
cmp
mov
test
js
cmpsb
ja
test
jne
fisubrl
imul
cmp
cmc
adc
lods
imul
pop
ja
sub
adc
dec
pop
les
inc
or
les
out
jg
fwait
jo
cli
sbb
mov
loopne
xchg
cmp
inc
out
pusha
mov
popl
push
jne
xchg
in
subb
ret
into
inc
pop
subl
dec
mov
stc
movsb
cmp
loope
sub
push
jns
pop
fisttpl
cmp
repz
out
daa
xor
nop
clc
or
mov
or
and
cmp
stc
jae
fsts
adc
out
pushf
cmpsb
mov
xchg
fimuls
mov
enter
test
inc
sbb
xor
inc
out
into
dec
cmp
and
mov
int
int3
mov
out
add
imul
movsl
addr16
in
pop
ret
sarb
sbb
cmp
pop
xchg
jmp
loop
pop
shlb
ret
and
shr
fldt
cmp
xor
pop
dec
pushl
push
and
pop
jb
dec
imul
add
repz
xchg
pop
ljmp
xor
lea
xor
pop
mov
pop
jae
push
pop
mov
lret
aam
in
jns
and
cmp
xchg
mov
imul
jns
rorb
pop
xlat
dec
divb
pop
sahf
out
lds
fmuls
sub
jbe
push
ljmp
out
push
test
sbb
fs
sub
mov
adc
das
and
dec
movsl
imul
dec
js
xor
xlat
cs
shl
ficompl
xchg
stos
mov
mov
push
or
in
pop
jae
and
push
xchg
jne
push
jle
shll
cmp
adc
lcall
out
test
xor
dec
stc
inc
outsl
inc
ret
inc
xchg
xchg
adc
jle
adcb
cmp
push
fisttpll
jb
into
sbb
fldt
and
xlat
jmp
dec
sbb
pushl
and
fldcw
daa
roll
ret
fisubrl
xchg
xchg
sbb
cmp
imul
ret
idivb
loop
pop
test
mov
dec
out
cld
mov
imul
aaa
cld
lods
inc
aad
push
xor
das
jno
push
shrb
jl
pop
jmp
popf
fisttpl
mov
dec
cld
stc
test
jo
pop
out
iret
adc
loop
jl
pop
sub
cmp
test
inc
bnd
js
push
mov
rorb
and
xchg
and
das
nop
shr
cld
mov
pusha
xchg
repnz
push
test
xchg
or
out
xor
mov
push
outsb
in
pop
dec
mov
rclb
repnz
push
jae
cld
out
push
adc
dec
or
adc
loop
push
fidivs
xlat
mov
test
stos
jno
shr
push
inc
cld
gs
xor
js
inc
xor
add
and
or
lods
sar
and
push
icebp
shl
adc
jb
xor
sbb
jnp
fnstenv
xchg
add
xlat
aam
pop
inc
imul
or
int
sbb
les
out
fistl
adc
in
dec
test
add
dec
mov
jge
repz
add
js
sub
cmc
adc
dec
lds
push
cmp
push
xlat
out
pop
adc
mov
loope
add
movsb
shlb
jge
pop
scas
arpl
xchg
and
mov
rcrb
nop
lret
divb
iret
fcmovne
mov
sti
aas
nop
dec
mov
dec
fidivs
pop
lods
cs
mov
push
cmp
dec
inc
bound
cmp
les
outsl
pop
dec
push
rorl
jle
pop
popf
repnz
movsb
cmp
std
ret
hlt
mov
sbb
jno
fisttpl
test
or
adc
add
xlat
cli
mov
nop
ret
mov
js
out
iret
adc
insb
xor
add
sub
insl
push
push
jae
insb
stc
fnstenv
dec
pop
dec
xlat
push
xchg
xchg
jge
dec
sti
xchg
std
pop
pushf
mov
scas
clc
ror
sub
in
push
push
iret
push
xlat
ja
jp
daa
dec
divl
int
ret
inc
mov
mov
pop
and
sub
xor
enter
fistpl
inc
cmpsl
in
nop
push
mov
ret
int3
stos
or
inc
push
xchg
lret
fldenv
mov
lcall
fidivrs
pop
rol
fisubl
push
ror
adc
adc
or
movsl
mov
sbb
divb
xor
fldenv
shll
mov
mov
clc
add
dec
cmc
fdivrp
aad
cmc
sub
fimuls
clc
cwtl
xchg
repz
jns
insl
jae
jge
or
or
xlat
mov
bnd
xlat
loop
mov
cs
outsl
mov
xchg
push
adc
push
jge
sti
cmp
out
mov
adc
js
inc
fucomi
jno
add
pop
fidivrs
mov
sbb
mov
cmp
jno
dec
scas
or
xchg
push
dec
pop
fildl
xor
xchg
mov
test
sbb
sahf
cs
add
push
dec
dec
ret
cmpsb
xchg
dec
popf
xchg
xor
lret
fistl
adc
mov
daa
cmp
sub
jae
xlat
mov
cmp
push
jp
cltd
popa
cmc
cmp
test
and
loop
xlat
dec
cmc
xor
fcom
sbb
mov
cmp
lods
outsb
mov
insb
dec
cmpsb
sarb
ss
cmp
out
xchg
cmpsl
jb
and
adc
popf
push
push
js
and
dec
add
leave
adc
stc
out
xchg
clc
or
sbbl
sub
cmpsl
inc
fnstenv
js
mov
scas
dec
stc
lahf
cmp
xor
xchg
repz
mov
fcmovnbe
cwtl
sub
jg
ret
sub
test
nop
pop
sub
mov
test
popa
adc
pop
imul
test
stc
lahf
std
push
out
cmp
rcrl
xor
test
sub
loope
out
mov
dec
pop
outsl
and
and
das
stc
add
xchg
xor
pop
orl
fsts
in
push
sarl
push
std
xchg
fdivr
xor
jg
aaa
mov
les
adc
inc
add
pop
lahf
test
in
stc
xchg
imul
fimull
cld
int3
repz
adc
cli
jb
add
cmp
xchg
insb
add
and
dec
in
cwtd
rcr
xor
dec
jp
hlt
fs
jne
out
outsl
test
xor
xorb
sbb
in
cmp
flds
xlat
xchg
jae
pop
add
arpl
sub
cmp
cmp
sbb
or
add
mov
push
push
mov
addr16
aam
lods
test
cmp
aas
shlb
pushf
cmp
jnp
add
fcomi
out
jae
frstpm(287
mov
mov
cmpsl
clc
test
faddl
jl
fcmovnu
xchg
xchg
sarb
push
iret
xchg
lret
cmp
adc
mov
pop
xchg
xchg
call
insl
in
pop
xlat
pop
pop
imul
jle
dec
push
push
sbb
xor
sub
pop
test
pusha
jp
fwait
loopne
dec
and
in
or
lret
mov
call
xor
xchg
sub
fwait
ficomps
sbb
or
xor
xchg
mov
add
pop
hlt
cltd
push
mov
daa
fistl
fildl
sahf
pusha
ret
incb
sarl
dec
jb
divl
das
int3
xor
sbbl
jae
pop
xorb
push
xchg
mov
inc
xchg
mov
ret
mov
or
jae
xor
ljmp
sar
imul
pushf
pop
sbb
add
adc
add
out
decb
add
pop
subb
stc
jmp
lahf
xor
in
mov
or
add
in
cs
dec
mov
loope
dec
leave
dec
mov
in
mov
cmp
out
fwait
sbb
ds
pop
mov
inc
inc
cli
add
out
cmp
push
pop
test
adc
push
mov
and
jno
mov
sbb
mov
mov
call
adc
mov
dec
xor
cwtl
add
fldenv
aaa
mov
cwtl
push
pushf
pop
pusha
out
inc
insb
jmp
or
iret
filds
jb
xor
dec
sbb
or
pop
sub
shr
mov
pop
lret
add
adc
and
xchg
dec
fwait
addr16
or
jp
xor
call
xchg
lret
xlat
push
mov
mov
dec
adcb
push
pop
imul
repz
push
xor
int3
xchg
cmp
mov
push
fldcw
stos
mov
out
imul
or
imul
jnp
flds
xchg
in
and
xlat
jecxz
inc
andb
flds
xor
or
popf
lret
ret
sub
or
inc
mov
jg
push
or
clc
sbb
sub
dec
lea
push
lcall
lea
jnp
fsts
daa
dec
pop
imul
dec
mov
xchg
jno
adc
adc
into
es
jp
outsl
cli
dec
mov
rcrb
push
adc
push
jp
imul
cs
push
movsb
pop
or
or
js
push
xchg
ror
push
xlat
pop
imulb
std
ss
add
les
imul
pop
lods
loop
stos
sbb
add
insl
fistl
insl
sbb
rolb
xchg
aaa
popf
out
jmp
js
pop
leave
pushl
sbb
out
out
or
insl
fsubs
aam
jb
cmp
paddsb
test
pop
xor
ss
dec
adc
pop
dec
pop
js
mov
ja
fiaddl
sbb
lret
xor
and
push
pop
inc
shl
subb
cmpsl
mov
test
cs
out
pop
cmp
mov
cmp
popa
sbb
cltd
cltd
push
testl
lods
or
adc
mov
divl
push
sbb
icebp
roll
dec
jl
xlat
sbb
outsl
mov
cmp
mov
jo
xchg
xchg
mov
out
jbe
fs
pop
add
leave
lret
orb
int3
out
push
cmp
xor
jl
adc
jl
jo
mov
mov
xchg
int3
dec
inc
test
push
inc
cli
nop
sbb
lret
in
insb
stc
xlat
push
sti
push
inc
jmp
test
outsl
je
push
pushf
jne
inc
into
mov
sbb
mov
and
cs
xchg
mov
add
xor
add
imul
cmc
scas
xor
mov
add
bound
lods
cmp
clc
sbb
push
subb
sbb
jb
in
cmp
fcompl
dec
cmpsw
and
fildl
jle
mov
jbe
xor
js
inc
xchg
xchg
repnz
sbb
jl
adcb
mov
lret
jno
lahf
pop
rclb
mov
ja
jl
aas
sbbb
xchg
sub
shlb
cmp
xlat
cs
mov
xchg
test
sbb
sub
test
fstps
jg
sub
fldenv
add
dec
adc
mov
or
pop
mov
fisttpl
adc
aad
xor
iret
sbb
push
mov
xlat
inc
xchg
cmp
sub
add
call
jno
cld
or
pushf
mov
jle
mov
mov
data16
mov
push
out
mov
push
mov
aas
push
xor
or
add
adc
mov
mov
sbb
pop
push
call
sub
movsl
shrb
cmp
xor
add
xchg
xchg
in
repz
jae
imul
loop
loop
push
jae
mov
jae
mov
jecxz
sbb
xchg
dec
fucomp
dec
sbb
aam
test
or
xchg
and
dec
les
out
mov
fldcw
pop
add
cltd
push
dec
sbb
ficompl
out
cmp
jp
dec
cld
and
dec
adc
out
arpl
test
mov
clc
jae
push
sub
clc
or
xlat
std
xchg
imul
ja
pop
into
inc
xlat
pop
xchg
lcall
sub
outsb
lret
mov
je
fstpt
inc
mov
mov
mov
mov
pushw
cld
outsb
cli
xlat
pop
sbb
repz
xchg
xchg
outsl
pop
dec
sbb
pop
jg
sbb
mov
pop
nop
adc
test
push
pop
hlt
lods
inc
popf
adc
movsl
cmpsb
push
imul
and
cwtl
mov
and
fstpt
jle
dec
lahf
push
in
movl
cs
lods
adc
fildl
test
leave
push
imul
push
adc
mov
mov
inc
bound
sbb
or
push
xchg
push
inc
and
cs
pop
pop
mov
stc
push
jae
sub
std
mov
jae
fsubrl
pop
stc
add
fisubs
nop
ficompl
adc
outsl
sti
sahf
subl
daa
inc
mov
dec
hlt
jns
filds
sbb
sbb
add
push
int3
push
cld
fcmovne
fdivrs
dec
fmuls
or
xchg
test
xor
stc
lock
aaa
in
sub
mov
or
sahf
test
fxch
lcall
out
test
dec
dec
aas
push
mov
cmc
outsb
inc
jae
icebp
jecxz
std
je
std
adc
xchg
sbb
shll
add
test
dec
out
int
aaa
jl
and
pcmpeqb
scas
testl
sbb
and
je
inc
push
mov
fldt
shlb
add
popf
xchg
cli
or
jbe
xlat
das
xor
faddl
mov
jp
sub
dec
pushf
pop
lea
scas
pop
cmp
mov
jp
cmc
pop
je
fmuls
mov
fisttpl
jbe
outsl
mov
repnz
enter
inc
nop
fucomp
fisttpl
cs
sbb
or
clc
stc
adc
lcall
cmp
mov
shll
or
xor
jno
lret
adc
fildl
pop
xchg
repz
pushf
sbb
mov
mov
shr
adc
daa
xor
jge
scas
inc
and
mov
jge
rorl
in
push
hlt
push
jne
pop
out
push
push
lea
stc
fldt
push
stos
sub
int
push
jge
mov
jge
nop
pop
adc
orl
jp
adc
daa
cmp
inc
mov
mov
mov
push
mov
cs
push
bound
repnz
out
pop
and
cmp
std
or
jp
xchg
jb
lods
xlat
je,pn
xlat
dec
lahf
push
pop
aaa
in
and
cmp
or
in
pop
mov
push
inc
stc
popf
and
insb
mov
and
xchg
xchg
sbb
daa
jbe
sub
sbb
inc
inc
push
cmc
mov
cltd
push
lea
dec
and
pop
loopne
stos
sub
push
xor
mul
inc
jmp
push
dec
xorl
aas
and
sub
cmp
mov
rcrl
dec
pop
mov
and
sbb
stc
dec
sub
movsb
adc
sub
inc
mov
and
and
push
xchg
cmp
cs
out
adc
push
arpl
pop
xor
rorb
repz
loopne
addr16
mov
push
jne
mov
cmpsl
imul
loope
lods
cmp
xchg
cmp
or
jb
xlat
lea
cld
js
divl
add
or
je
dec
add
push
inc
cmp
jnp
dec
testl
mov
int3
movsb
mov
add
push
xor
test
add
ss
mov
stos
push
cmc
loop
ja
push
shrb
jo
xlat
dec
pop
push
cmpsl
add
jp
cmp
testl
mov
inc
fsubrl
xchg
lcall
adc
je
pop
ds
lods
and
mov
mov
sub
push
fiadds
fsub
push
mov
cli
and
mov
cmp
or
xchg
push
popl
sub
nop
mov
xor
daa
mov
pop
cmp
dec
jecxz
cltd
push
or
sub
xlat
mov
sub
in
jg
sub
fwait
subl
push
ret
mov
jecxz
adc
jne
jns
mov
je
mov
jne
cli
push
aaa
push
push
fistpl
test
lcall
ret
mov
sub
shl
fildl
xor
xchg
dec
mov
fimull
adc
ret
dec
sub
push
xchg
sub
mov
cmpsl
jae
pop
sub
mov
fs
and
fwait
push
and
test
inc
xlat
stc
dec
xchg
arpl
jmp
sahf
mov
pop
or
fucomi
dec
loop
mov
mov
inc
xor
mov
xlat
imul
test
mov
adc
cmp
jge
jne
mov
pushf
xlat
adc
xor
cmp
bnd
insb
stc
pop
fs
lret
gs
fcomps
jns
add
xor
pop
mov
int
movl
imul
out
test
xorb
in
std
adc
xchg
aaa
int
sub
xchg
push
pop
and
cmpsl
sbb
jae
dec
xchg
dec
mov
stos
loop
mov
sarb
imul
add
sbb
mov
cwtl
lahf
push
inc
cmp
stos
xor
ja
and
jae
pop
mov
outsb
test
mov
cmp
push
dec
or
or
xchg
shlb
pop
cmp
out
jg
aaa
ficomps
mov
jbe
fwait
nop
push
xchg
pop
mov
mov
mov
mov
and
out
test
xchg
xlat
ret
gs
mov
push
mov
sub
insb
cltd
cmp
sub
xor
nop
fisttpl
in
mov
cmp
mov
out
ljmp
xor
mov
jno
push
loope
jl
dec
mov
shlb
sub
sbb
sbb
or
hlt
cmp
test
or
xor
stos
je
inc
idivl
sub
insb
mov
dec
flds
mov
jle
out
jo
pop
loopne
or
enter
jno
jb
cmpsl
fistl
dec
adc
xchg
cltd
xchg
iret
jbe
xor
daa
scas
orb
and
mov
addr16
jbe
push
call
xchg
fiadds
hlt
and
cmpsl
and
push
sub
loopne
mov
cmp
inc
or
adc
fwait
mov
cmp
movsl
fdivp
pop
sbb
sub
out
jne
mov
stc
cmpsl
push
cld
pop
xor
fdivl
or
jmp
iret
lcall
push
adc
push
xlat
std
dec
fistpl
es
push
loopne
decl
out
scas
adcl
xchg
popa
lahf
dec
mov
xchg
push
fbstp
iret
scas
fiadds
sbb
out
jg
push
cmpsb
mov
sbb
sub
je
mov
out
pop
call
dec
mov
fwait
std
push
fisubl
rcll
addr16
rcr
aas
and
inc
jmp
push
clc
shlb
pop
mov
fadds
mov
push
add
push
sbb
sub
xchg
pop
dec
outsb
xlat
and
mov
or
outsl
aad
mov
stc
xlat
xor
xchg
pop
cs
push
or
xlat
lcall
pop
or
fdivl
pop
add
lods
lods
adc
mov
movsl
xchg
xor
roll
sub
movl
sbb
and
jae
fstps
pmaxub
mov
jae
mov
xlat
mov
cmp
imul
fidivrl
es
aas
push
fcmovnbe
jmp
lahf
cli
sbb
lret
fisttpl
stos
rcrl
daa
add
push
lock
jb
daa
adc
xor
and
out
icebp
xchg
xor
aas
sbb
adc
in
cmp
fcomps
dec
fcmovnbe
aas
repnz
xchg
inc
sub
push
dec
pop
push
loop
movsl
adc
imul
mov
cmp
outsb
push
jns
cmp
push
jg
push
push
xchg
stc
and
sbb
xor
sbb
fwait
lds
pop
js
sub
call
mov
outsb
std
xor
fldt
sbb
push
pop
cmp
aas
cmp
loopne
pop
jo
add
xor
out
sub
push
dec
hlt
sarb
mov
inc
test
imul
mov
jae
add
icebp
pop
adc
fldcw
gs
xchg
dec
int3
xor
and
cmp
pop
pusha
xchg
nop
pushf
stos
scas
cli
xlat
push
push
push
jg
xor
dec
sbb
jno
push
xor
icebp
dec
xchg
jns
xor
cwtl
mov
push
adc
push
push
jnp
shrl
cmp
add
negl
daa
mov
xor
imulb
sub
xchg
cmp
cmp
or
mov
push
jns
push
mov
push
push
mov
call
out
cli
outsl
ficomps
jno
shll
call
mov
inc
in
and
movl
cmp
xchg
div
xorb
fsubrs
jne
push
sub
jns
lcall
out
jae
ret
ds
stc
ret
dec
pop
mov
mov
mov
sub
insb
and
xchg
jno
cmc
mov
fldcw
and
sti
sbb
sbb
xchg
dec
cmp
xchg
xor
loope
cmp
add
dec
cmp
rorb
sbb
call
jae
add
lahf
mov
jg
sar
cmp
popf
jno
adc
cmp
hlt
dec
or
mov
mov
sub
push
and
sbb
es
and
stos
inc
les
mov
push
mov
or
push
push
mov
insl
sub
nop
jae
scas
cmp
and
add
stos
lea
loop
lret
gs
pop
pusha
sbbl
out
jp
cltd
pop
push
dec
pop
fwait
pop
je
inc
sbb
stos
mov
push
sti
cltd
push
arpl
addr16
sbb
cmp
popf
fdivrs
adc
mov
out
jne
jge
mov
rcl
stc
adc
enter
mov
in
sub
inc
push
push
iret
sbb
xlat
or
stc
xchg
dec
roll
inc
push
add
sub
mov
repnz
js
sub
adc
pop
fdivrs
data16
hlt
push
jbe
cmp
out
sbb
into
xchg
dec
xchg
add
mov
add
inc
inc
cli
pusha
out
dec
dec
dec
scas
or
mov
ja
mov
xor
cmp
mov
stc
pop
rcrl
fcomps
ret
pop
imul
leave
je
sub
xchg
pop
in
lods
xchg
xchg
jecxz
js
inc
inc
je
mov
jnp
insb
xchg
lea
sbb
ss
ss
xchg
and
and
scas
add
xor
xchg
mov
cli
fwait
loop
repnz
ret
mov
mov
mov
pop
or
jp
loop
xor
std
push
into
jle
loop
or
inc
and
or
cs
push
xchg
fwait
add
cmc
mov
clc
dec
fxch
sbb
xchg
fstpt
sbbb
stos
idivb
push
pop
ds
loope
jnp
inc
sbb
xchg
fistpl
clc
sbb
add
xchg
sbb
mov
out
sbb
cmpsl
nop
inc
ret
mov
jl
ljmp
jbe
xlat
jno,pn
nop
xchg
clc
add
fcoml
movsl
mov
add
mov
jmp
sbb
inc
jae
movsl
mov
push
dec
loope
fcoms
popf
mov
loop
std
sbb
push
push
dec
scas
or
inc
cmp
pop
sbb
sub
inc
icebp
gs
cmpsl
adc
pop
or
or
cmpsb
pop
jnp
out
dec
outsb
sti
dec
lods
fdivrp
adc
jb
sub
aas
stc
sbb
rclb
sbb
push
sbbl
jg
lea
push
sub
xchg
hlt
aam
mov
adc
sbb
sub
int3
dec
les
jmp
mov
xor
push
push
dec
mov
fstps
dec
dec
aas
mov
xor
push
subl
xlat
mov
mov
ds
xor
push
inc
rorl
decl
arpl
iret
in
mov
pop
mov
es
mov
push
stc
int3
sbb
rcrb
xor
sub
dec
jge
dec
pop
loop
push
sbb
xor
pushf
xlat
jmp
sub
mov
scas
daa
jns
xor
jno
mov
enter
jg
es
popa
ret
mov
sbb
push
frstpm(287
lods
or
lds
fs
cmp
movsb
in
and
cwtl
test
or
shlb
movsl
cmp
mov
rcll
push
test
jmp
fsts
subb
outsl
bound
sub
stos
ret
adc
clc
rorb
xchg
mov
into
in
inc
and
cmpsl
dec
xlat
xor
sbb
mov
sbbb
mov
pusha
pushf
and
cmp
pushf
cmp
daa
test
ret
cmpsl
ja
pop
lret
test
and
pop
sub
push
and
cmpsb
push
fldenv
int3
sub
std
into
xor
hlt
es
cld
call
outsl
movsb
adc
int
push
imul
add
loop
lret
lds
jmp
aad
das
test
cmp
cmp
iret
out
add
and
test
push
dec
cmpl
fildl
repnz
mov
mov
add
xchg
sub
mov
je
clc
xor
dec
aad
movsl
stos
subb
dec
pop
mov
cli
jns
cmp
lret
cmp
dec
xchg
dec
adc
mov
fcomps
rorb
inc
and
xchg
adc
lock
xor
inc
xchg
clc
adc
dec
xor
cmp
xchg
add
adc
andl
aaa
fisubrl
sbb
and
and
loop
pop
stc
fldt
xchg
aaa
nop
inc
int
orl
adc
mov
dec
sbb
mov
jl
pushf
add
cmp
sbb
push
movups
sbb
xlat
mov
mov
jns
out
sbb
loopne
dec
mov
repnz
lret
xor
and
imul
test
cli
xor
jns
stos
and
sub
cmp
jae
push
movsb
push
stos
sub
arpl
outsl
pop
dec
in
sbb
cmpsl
mov
push
loop
push
dec
outsl
push
push
js,pt
nop
inc
cmp
lret
or
leave
out
fucomp
cmp
sbb
iret
jno
and
add
mov
inc
inc
shll
and
mov
mov
rep
mov
cwtl
cmc
dec
repnz
fnsave
je
fstpt
jno
xchg
movsl
jp
ljmp
xor
jle
dec
push
aam
xlat
divl
add
lcall
movsl
sub
std
mov
push
subb
popa
sahf
cmc
mov
mov
cmpl
notb
push
inc
imul
idivb
test
fstpt
in
sahf
jle
lahf
std
in
xor
jns
cmpb
pop
and
or
mov
mov
addr16
xlat
push
ja
mov
and
cs
jecxz
push
mov
ret
push
and
imul
jmp
gs
call
dec
imul
imul
mov
xchg
and
std
dec
push
xor
cltd
test
jno
in
pop
je
push
pop
xor
sub
sub
ljmp
fadds
hlt
test
sbb
repnz
ljmp
lods
mov
loopne
jns
data16
testl
out
in
and
pop
mov
scas
movsl
jmp
jbe
int3
jne
iret
add
xor
xchg
daa
test
jo
lahf
jns
pusha
sarl
test
mov
int
leave
rorb
das
add
js
adc
cmp
rclb
mov
inc
dec
and
arpl
pop
pop
xor
adc
lock
insb
jb
das
je
lret
and
xchg
jmp
pop
or
inc
dec
dec
movsb
ljmp
dec
xchg
mov
nop
add
out
xor
push
aaa
or
pop
int
mov
shlb
daa
sub
pop
fstpt
enter
rcrb
mov
or
test
pop
xor
cmpsl
sub
loop
frndint
in
inc
jge
xor
imul
mov
jp
fcmovnu
imul
es
fnstsw
inc
jle
cli
ja
lcall
pop
push
xor
lods
jmp
hlt
imul
out
fsubl
lret
pop
aaa
mov
jg
xor
dec
mov
stc
cltd
and
dec
sub
sub
mov
jecxz
add
repnz
movsl
xchg
lcall
out
sbb
adc
pushf
int
lahf
push
je
cmp
lret
cwtl
xor
shll
aas
lds
fsub
or
mov
or
cld
jb
gs
nop
cmp
push
fdivp
jl
dec
push
sbb
jp
lock
cmp
fistl
jno
inc
cli
test
mov
xor
xor
mov
adc
das
or
and
iret
xor
cmp
dec
sub
sub
or
adcb
mov
dec
fldcw
cwtl
inc
sbb
cmc
cwtl
mov
cmc
out
and
sbb
jnp
imul
inc
imul
jmp
xchg
add
mov
ljmp
push
js,pt
jns
test
push
push
fwait
sbb
leave
mov
mov
xchg
insb
into
push
lahf
and
pop
sbb
fisubs
jne
push
jns
fsts
icebp
sbb
ljmp
pop
hlt
jnp
subl
xorb
pop
xchg
mov
xlat
sbb
cmp
movb
aaa
jae
lds
fnstcw
mov
push
push
cld
incb
cmc
stos
test
mov
pop
fisubl
cmp
out
xor
movl
mov
lret
pop
jmp
mov
mov
imul
aas
int
rcr
sub
mov
jb
mov
jbe
mov
push
sub
xchg
jae
xchg
pop
clc
jge
cwtl
pusha
dec
cmp
sub
dec
aaa
stc
outsb
or
xor
cmpsl
pop
es
inc
mov
pop
cmp
pop
or
jmp
test
scas
cmp
shlb
push
mov
lds
das
mov
out
in
lret
cld
dec
and
inc
scas
out
xor
loope
cmp
and
or
ror
and
lret
rcrb
and
pcmpeqb
cmpsl
data16
push
cmp
idivl
fcmovne
mov
xor
dec
cmp
adc
cli
push
fxch
mov
fstpl
dec
mov
aad
adc
out
fstps
jno
and
pop
ret
pop
add
popf
pop
cmpsb
stos
imul
mull
repnz
xorb
outsl
jge
or
xor
aas
fs
cmp
cmp
mov
mov
fidivrl
test
mov
jns
dec
pop
dec
aaa
out
iret
and
jg
inc
cld
push
sbb
sub
dec
aaa
or
xorl
aad
sbb
and
inc
jns,pt
cli
jle
cmp
xchg
cmp
sbb
cltd
cmp
sbb
jbe
push
mov
fprem
cld
dec
jmp
lcall
call
sbb
mov
data16
fcmovne
fidivrl
cld
in
inc
push
xorb
mov
xchg
fwait
stc
dec
or
popa
inc
rorl
cli
addr16
popa
pop
shlb
cmpsb
mov
sbb
fldenv
jae
movsb
repnz
pop
and
jb
movsl
leave
out
dec
xlat
js
imul
js
cmc
jmp
std
sbb
and
or
jle
pop
cld
stos
std
sbb
push
fxch
lahf
in
add
jae
xor
out
out
clc
lahf
xlat
rcl
pushf
insl
gs
aas
push
cli
cmp
sahf
jecxz
adc
pop
sub
daa
int
jl
dec
fsubr
loop
or
rcl
imul
iret
std
dec
je
add
mov
pop
pop
mov
push
std
out
movsl
scas
dec
cmp
and
xor
cli
aam
mov
out
push
mov
cmp
mov
subl
mov
and
out
xchg
adc
std
mov
or
lret
int
hlt
push
or
xor
pop
es
pop
imul
mov
fadds
jp
pushf
jns
les
xchg
push
mov
and
addb
enter
fcomps
outsb
insl
mov
js
jb
jle
push
ja
push
into
push
inc
xchg
imul
arpl
mov
push
push
jge
or
outsl
adc
lcall
mov
sti
loop
sub
dec
jno
std
daa
pushf
mov
pop
dec
pop
lcall
in
loopne
out
lahf
jg
add
push
cmpl
shll
xchg
pop
inc
pushf
dec
inc
mov
mov
add
dec
pusha
dec
out
pop
test
popa
test
xchg
push
pop
into
and
jbe
jl
lock
adc
dec
push
or
mov
mov
cld
xor
cmc
std
mov
inc
std
xor
inc
xor
out
and
pop
lahf
mov
sbb
lds
push
inc
ret
dec
and
pop
stc
xlat
lock
aam
jmp
mov
xchg
jbe
lcall
sub
jae
xlat
dec
mov
or
adc
stos
cmp
mov
dec
dec
mov
push
pop
xchg
push
pushf
inc
fucomi
cmc
bound
pop
push
dec
pushf
mov
rclb
int
and
xor
loopne
cmp
js
aam
xor
fwait
int3
xor
lret
or
fstl
ror
andb
nop
ljmp
dec
dec
orb
push
pop
imul
sbbb
shlb
cmp
inc
pop
dec
lods
xor
test
dec
mov
lods
mov
pop
movb
mov
lret
repnz
jbe
dec
cmp
adc
mov
sbb
lods
mov
rol
cmp
divl
ret
jmp
sub
xor
ja
insb
cmpsl
clc
sti
xlat
xchg
popa
and
cmp
push
jbe
jge
fdecstp
in
or
test
mov
inc
pop
test
loop
loop
pop
int
mov
xchg
daa
cld
sbb
fisttpl
jl
sub
divb
lock
pushf
sbb
scas
movb
sub
les
mov
stos
in
push
jnp
mov
or
in
out
rorl
jp
xlat
rolb
mov
xlat
add
iret
inc
aad
push
push
push
sub
mov
daa
jno
adc
inc
inc
xchg
stos
pop
push
stc
scas
sarl
adc
xchg
ret
lret
mov
fcompl
xchg
jbe
dec
adc
mov
jae
rcrl
aaa
mov
rorl
test
mov
stc
mov
adc
not
test
popa
xor
jae
dec
xchg
std
jmp
mov
out
pop
loop
pop
mov
dec
push
push
icebp
xrelease
sbb
xchg
mov
xor
inc
loopne
add
int3
repz
mov
pop
stc
lret
stc
fldenv
sahf
sub
or
xchg
sub
and
cld
push
scas
inc
mov
shrb
fidivs
jns
mov
bound
lea
lcall
sbb
mov
cmc
mov
pop
adc
jle
repz
cmpb
inc
xor
pop
outsb
push
sbb
in
dec
mov
add
lods
or
jnp
das
sbb
fistl
arpl
int3
mov
dec
scas
jge
popa
xor
ret
xor
pop
xor
inc
sub
and
xchg
fildll
notl
pop
adc
jl
push
into
mov
xchg
movsl
jno
cltd
mov
mov
lret
add
iret
xor
inc
cmpsl
aad
pop
and
repnz
push
mov
cmc
pop
sub
fildl
sbb
sub
ds
cmp
sub
adc
fldt
es
flds
jns
stos
dec
sub
pop
push
mov
lock
xchg
mov
jb
shlb
cmpsb
shl
repnz
js
cmp
mov
imulb
push
xchg
mov
push
pop
mov
jne
jmp
mov
mov
cmp
mov
ja
cwtl
clc
push
inc
stos
jecxz
push
movsb
loop
fpatan
dec
sub
imul
sbb
pop
rolb
adc
sub
jmp
insl
mov
dec
lock
out
xchg
mov
mov
mov
cmp
sub
scas
or
mov
lcall
jmp
shlb
add
sub
inc
dec
pushf
stos
stos
pop
mov
cli
je
cld
push
mov
sub
mov
addr16
call
rclb
enter
xor
fsubl
repz
cmp
sub
dec
out
push
or
push
fdivl
std
inc
cmp
jnp
and
sbb
xorb
push
fwait
jg
push
pop
xor
hlt
icebp
into
mov
push
cli
xor
stos
xor
cmp
not
sbb
fstpt
lds
xorb
int3
scas
or
xor
dec
mov
in
adcl
mov
mov
jae
icebp
sub
mov
popa
cmp
pusha
test
das
lds
or
mov
pop
sbb
bound
cs
or
ja
daa
adc
fldt
lods
or
xchg
jns
xor
pop
or
fidivs
add
sub
fldt
cwtl
lret
xchg
dec
xchg
aad
aas
popa
add
loopne
jmp
push
or
lock
push
cmp
push
aam
test
jmp
and
xchg
dec
inc
pop
nop
push
stos
mov
jg
arpl
xlat
stos
movsl
jno
xor
fiaddl
jp
lea
inc
jp
fcom
mov
add
arpl
or
push
int
sub
xor
rcrl
in
sub
push
gs
mov
xor
pop
add
pop
std
add
jge
shr
lcall
out
and
lods
dec
popf
xor
insl
gs
push
mov
jge
push
mov
cmp
aad
pop
jge
daa
lds
scas
push
xchg
mov
jmp
sbb
jae
and
popa
lahf
lock
std
sbb
push
and
aam
mov
xchg
xchg
cli
push
mov
pop
cs
mov
inc
lods
cld
es
sbbb
rcrl
ja
std
mov
icebp
mov
cmp
or
lret
add
pop
mov
pop
loope
push
mov
xlat
test
or
pop
dec
cmc
cs
pminub
fstps
out
push
xlat
and
pushf
call
xor
pop
jae
push
or
imul
cmc
push
ja
mov
fmulp
fs
sub
or
add
sub
popa
cmp
je,pt
lds
and
ljmp
jno
cmp
scas
adc
ja
jmp
dec
icebp
pusha
movsl
sub
pop
mov
xorl
xor
movsb
or
push
icebp
cmp
pop
dec
mov
xor
ss
pop
jbe
fnstcw
jle
enter
lods
cwtl
cmp
adc
subb
or
jge
iret
add
adc
shll
bound
inc
loope
ljmp
out
iret
mov
and
cli
cltd
insb
fistpl
jg
shlb
fidivl
jae
and
repz
mov
mov
inc
xchg
mov
mov
or
mov
aad
movsb
jecxz
jne,pn
aam
jmp
ret
stos
mov
mov
add
bnd
mov
nop
icebp
fistpl
stc
pop
cmp
mov
and
xor
outsl
jns
lock
and
and
loopne
inc
or
mov
push
pop
out
pop
repnz
push
fwait
adc
jg
cmp
xchg
imul
mov
sbb
push
and
or
and
jge
ret
popa
mov
lock
cli
mov
fldcw
ss
rcrl
sub
push
xor
mov
jle
xlat
outsl
adc
sbb
mov
sar
pop
out
dec
mov
sbb
adcl
into
gs
call
icebp
in
shlb
sub
jnp
fldenv
adc
je
dec
cltd
mov
out
xchg
push
jbe
and
xlat
clc
sub
stos
cmpb
into
dec
add
push
add
jecxz
pop
dec
mov
inc
aam
cmp
lcall
jb
jmp
dec
imul
fld
xor
int3
movsl
mov
mov
repz
pop
mov
fcmovnbe
test
xor
jae
lahf
mov
mov
lcall
filds
cmp
push
xchg
rcll
ret
sub
mov
andb
lret
andb
ljmp
xchg
cli
lods
imul
out
fs
sub
call
outsl
iret
je
cmp
sub
xchg
cmp
lret
out
xor
lods
dec
sub
xchg
push
mov
stc
adcb
test
aaa
pop
inc
and
sub
shlb
out
xor
xchg
shll
in
fstl
fs
int
outsl
int
jne
mov
pusha
add
inc
cli
das
aaa
xlat
sbb
imul
and
inc
cmp
jns
push
es
in
dec
or
scas
inc
xlat
cmp
xor
movsl
lods
test
or
push
jne
ds
inc
or
or
pop
loop
inc
out
imulb
pop
inc
hlt
xchg
or
in
mov
push
cmp
cmp
inc
dec
mov
push
fimuls
jns
movsl
clc
gs
dec
xor
shll
cltd
xor
dec
jns
dec
and
jbe
and
lcall
cmp
xchg
sub
in
int3
pop
push
fcompl
cmp
aaa
adc
jne
cltd
mov
sbb
gs
xchg
shll
notb
sub
pop
sbb
mov
push
xchg
fsin
pusha
subl
xchg
ds
mov
xchg
adc
outsl
xorb
inc
mov
push
cmpsl
cmp
imul
je
mov
cmp
mov
jecxz
lcall
fsincos
lahf
fidivs
je
dec
cmp
repz
lret
fcmovnb
movsb
add
nop
and
push
adc
fidivl
push
jne
inc
dec
xor
popf
cmp
mov
jl
movsl
add
stc
add
cmp
out
scas
sbb
mov
cwtl
std
pushf
mov
repnz
popf
stc
mov
xor
test
xlat
add
test
mov
push
mov
cli
stc
dec
fldt
dec
iret
jae
jge
movsl
cs
int3
test
iret
add
sub
hlt
movsb
and
shrb
scas
push
in
push
push
mov
data16
mov
test
jmp
lcall
xor
mov
mov
dec
mov
sub
jae
ds
mov
jnp
xor
add
push
jmp
xor
and
not
pop
pusha
fimull
lods
fnstcw
ret
xchg
ljmp
pop
mov
push
push
ret
and
out
mov
cmp
std
out
int3
xor
inc
addr16
test
push
add
lret
in
and
lods
stc
mulb
cltd
xchg
leave
push
cs
lret
leave
xchg
push
adc
fcmovnu
or
gs
mov
mov
inc
je
roll
andb
pop
mov
mov
xchg
and
in
push
adc
ret
ljmp
jns
add
xchg
mov
sbb
cmc
lods
mov
xor
dec
xchg
cmp
dec
test
push
pop
inc
std
adc
jne
movsb
pop
pop
enter
arpl
aas
test
divb
jg
cmp
scas
dec
xor
repnz
iret
mov
out
je
xor
je
inc
cli
mov
add
outsl
shr
xor
call
lods
and
mov
push
xchg
add
imul
push
movsb
iret
pop
fidivrl
mov
push
shr
nop
jmp
sub
or
movsb
push
xor
mov
push
insl
in
stos
cli
cmp
jb
test
scas
xor
jg
mov
in
inc
hlt
push
ljmp
push
lcall
mov
insb
sbb
and
loope
pop
call
rcrl
adc
jnp
mov
pop
jecxz
dec
lds
sub
xchg
je
fsts
xchg
popl
nop
insl
mov
jno
or
inc
mov
loop
xchg
test
add
int
enter
in
push
in
or
or
hlt
xor
or
icebp
mov
cmpsl
insb
sub
sahf
and
mov
cmp
sbb
cs
hlt
outsl
insl
and
int3
nop
arpl
aad
jae
push
push
pop
pop
sub
stos
or
dec
hlt
mov
insb
dec
lret
insb
call
push
repz
cmc
fprem
ds
js
out
test
xchg
mov
sbb
dec
ficompl
aam
xchg
out
subb
push
sub
jb
pop
or
jecxz
ds
and
ret
loopne
popf
and
and
aad
and
std
dec
mov
lahf
cmp
aas
lahf
or
pushf
data16
inc
xor
test
icebp
popa
or
mov
or
hlt
mov
add
int3
out
push
les
sbb
xchg
push
cmp
pop
je
pusha
test
test
nop
andl
adc
xchg
jnp
jbe
jae
inc
hlt
dec
sbb
sub
cmpsl
lret
icebp
cmp
and
aad
fimull
jns
mov
cwtl
inc
test
mov
xchg
sti
cltd
mov
mov
mov
mov
mov
enter
inc
add
pop
adc
ficoms
push
pop
jb
movsl
mov
je
jge
xchg
stos
test
jmp
mov
push
call
push
je
sub
mov
lret
stc
sub
outsl
xlat
push
pop
fwait
jp
ret
repnz
cmpsl
mov
out
push
ficoms
cltd
push
cs
inc
inc
addr16
popf
sahf
xchg
cmp
pushf
fmull
ret
pop
mov
push
jg
mov
cmp
inc
jb
in
repz
inc
xor
je
pop
mov
and
notb
in
shll
repz
scas
or
daa
aam
je
xlat
loopne
pop
dec
lods
inc
repnz
or
dec
in
repnz
in
cs
sbb
jp
je
jl
orl
pusha
add
and
inc
push
add
xchg
fsubrp
dec
xchg
jp
fxch
jge
mov
mov
pop
add
cltd
xor
test
mov
bound
push
push
std
pop
mov
adc
fidivrs
push
xor
sub
xor
add
or
inc
ljmp
pop
leave
mov
and
cld
jne
xor
cmc
dec
lds
imul
or
dec
stos
inc
mov
sub
dec
imul
xchg
mov
inc
ss
pop
mov
dec
jae
psubw
sub
int
and
and
out
lret
and
in
add
lods
mov
sahf
or
cmp
pop
cmp
lcall
mov
shll
sub
jns
push
ret
outsl
mov
pop
gs
cli
sbb
jno
add
in
cs
out
cld
and
add
push
jbe
dec
push
add
cmp
add
xchg
nop
ljmp
mov
jl
imul
jp
xorb
inc
push
mov
xchg
icebp
xor
pop
jae
mov
inc
pop
fs
or
fwait
inc
mov
sbbl
xorb
clc
int3
daa
adc
or
pop
loopne
add
fstl
bound
jnp
cmpsb
cmp
mov
ret
testl
xor
xchg
mov
sbb
dec
mov
mov
xlat
jbe
sub
int3
xchg
lret
xor
xchg
mov
mov
adc
push
xchg
jno
adcb
xor
add
test
test
insl
inc
ret
aam
push
leave
mov
and
mov
and
repz
fcmovu
shrl
or
leave
xor
test
pop
push
add
xchg
xchg
xor
cli
shrb
cmp
stos
lahf
mov
jno
rcrl
rep
pushf
cmp
dec
movsl
lret
lahf
mov
dec
fcmovu
imul
or
imul
xchg
cmpsb
cmp
adc
sub
out
xor
or
ds
jne
and
outsl
out
js
cmc
pop
fistl
mov
jb
out
xor
sub
fdivs
ficoms
arpl
fmuls
xlat
in
in
in
dec
dec
scas
loopne
mov
dec
insb
jno
test
popf
addr16
jg
ljmp
lss
dec
fwait
mov
push
fldenv
in
andb
repz
fxam
imul
mov
adc
xchg
add
inc
cmp
pushf
xchg
fsubrl
or
sarb
frstor
mov
xchg
icebp
jle
pushl
mov
repz
xchg
ret
dec
add
fld
xchg
lahf
xor
cmp
call
jbe
sub
jb
sbb
sti
test
mov
dec
and
cmp
jp
jle
adc
mov
and
int3
xor
les
loopne
std
stos
inc
pop
xor
inc
enter
jmp
out
pusha
jnp
mov
sahf
mov
dec
push
add
xchg
push
inc
nop
add
jo
mov
pop
cmp
mov
les
inc
mov
jae
xlat
loop
or
cmp
outsl
pop
cmpsb
negl
cwtl
cmp
adc
pop
add
test
pop
inc
ja
xor
lods
jbe
adc
outsb
sbb
scas
add
dec
jl
shll
iret
loope
imul
sbb
cmp
std
mov
cbtw
dec
xchg
add
push
xchg
les
cmp
sub
jp
fisttpl
push
addr16
xor
or
jge
mov
cs
push
mov
out
xchg
hlt
jle
cmpsb
aam
inc
inc
jb
xchg
pop
xchg
stos
sbb
movsb
mov
lea
add
sbb
stc
or
fnstcw
pop
push
test
xlat
fwait
jle
sti
or
inc
dec
fsubrp
iret
mov
dec
jo
lods
adc
mov
push
rcrb
add
cmpb
xor
pushf
fstl
mov
mov
inc
sar
sti
sub
or
fwait
cmpsb
dec
mov
mov
daa
adc
pushf
ds
adc
xorb
enter
adc
bound
pop
cmp
jns
lret
jno
push
sub
fildl
xchg
jns
test
popa
mov
out
arpl
mov
lods
xchg
cmpsl
mov
push
pop
cld
daa
jecxz
mov
mov
aaa
xchg
sbb
mov
jmp
repz
dec
leave
fs
jae
mov
cld
stc
or
push
fldenv
pop
or
sub
aad
jmp
popa
negl
xchg
pushf
fwait
lods
or
stos
xor
lahf
jbe
jmp
aas
fidivs
sub
pusha
enter
add
inc
std
stos
imul
dec
std
xchg
bound
std
repnz
add
jl
scas
enter
sbb
mov
movsl
sbb
lret
cmp
ss
xor
xchg
std
outsl
in
lds
mov
xlat
fdiv
pop
aam
jae
hlt
fimuls
mov
pop
mov
fiaddl
pop
scas
push
mov
lea
movsl
jae
ljmp
xlat
icebp
sbb
inc
inc
or
mov
leave
stos
lahf
cmp
sbb
outsl
shlb
mov
into
xchg
movsl
les
into
lock
mov
push
xor
or
ljmp
enter
add
and
fmuls
cmpsb
in
jl
in
sub
pop
or
push
insl
or
les
idivl
xlat
in
and
or
fstpt
cmp
mov
mov
fildl
mov
enter
lcall
add
bts
jl
call
jb
adc
or
dec
pop
mov
add
dec
mulb
fmull
lcall
arpl
mov
nop
or
stos
add
icebp
aaa
leave
or
insb
daa
or
pop
aas
mov
ds
sbb
jg
in
hlt
cmp
and
scas
sbb
lret
repz
push
sub
fimull
push
loop
and
pop
js
lds
cmpl
call
mov
xchg
andb
popf
pop
jne
movsb
sub
pop
mov
fsubr
pusha
mov
adc
adc
jne
mov
fcoml
or
mov
imul
icebp
mov
test
dec
pop
mov
jae
mov
or
pop
ret
nop
in
push
mov
xchg
sub
inc
push
mov
mov
sbb
jbe
adc
inc
dec
cli
out
cmp
data16
xchg
test
or
int3
sar
cmp
dec
xor
arpl
dec
mov
jae
fisttpl
inc
insl
pushf
in
cmc
dec
push
xor
inc
js
subb
arpl
mov
popf
call
stc
aad
cmp
mov
jo
int
pop
test
cmpb
popa
cs
inc
and
xchg
dec
icebp
push
addr16
dec
mov
scas
in
jno
mov
mov
mov
mov
cmp
repz
int3
fsubrs
arpl
inc
and
cmp
mov
xchg
in
sub
hlt
sub
mov
loopne
sbb
fimull
xlat
xor
pop
lods
leave
daa
and
pop
jecxz
adc
sbb
mov
inc
xchg
push
jge
jae
xor
rcrb
jmp
pop
test
adc
add
icebp
xchg
jmp
fldcw
pop
pushf
hlt
data16
mov
pop
stc
dec
mov
sub
rcll
or
loopne
in
test
xor
jns
push
push
push
cmp
je
mov
rcrb
cmp
ret
jb
movsl
and
jbe
xlat
inc
mov
or
aam
cmp
mov
jmp
sbb
push
xor
jae
and
adc
jge
std
inc
jns
fldcw
xor
cmp
imul
call
and
push
or
cmp
lea
hlt
pop
shll
pop
xchg
push
and
fiaddl
jns
adc
gs
dec
sub
enter
inc
push
xor
mov
jae
fldenv
enter
xor
in
cmp
fstps
xlat
loop
pop
push
imul
sbb
sub
inc
divl
adc
xchg
sbb
inc
rcrb
out
test
sbb
or
push
imul
mov
in
fdivrs
mov
loop
inc
insb
negb
outsl
jns
xchg
das
shrl
enter
pop
lret
lahf
clc
push
xlat
insb
sbb
rclb
pop
add
fildl
and
xlat
jmp
jge
int3
ja
jns
push
pop
cmp
enter
cmp
xchg
lret
mov
fs
test
test
mov
cwtl
fwait
or
dec
idivl
sub
push
cwtl
je
ljmp
stc
jg
sub
out
sbb
sub
repz
negl
cmc
push
mov
arpl
enter
push
or
cmp
shrb
mov
sbb
inc
repz
scas
xor
aaa
pop
xor
xlat
iret
mov
pop
xchg
fidivrl
out
fs
fs
leave
test
cmp
stos
add
xlat
ficoms
mov
dec
pop
xchg
fiaddl
push
fdivr
push
out
jmp
testl
fcmovnbe
sub
daa
and
or
js
mov
mov
enter
ficompl
bound
xlat
pusha
push
popf
cmp
dec
cmp
mov
xchg
xchg
pop
mov
out
xor
or
ret
out
cmpsl
testl
mov
or
fcomps
fdiv
imul
nop
sbb
out
lock
bnd
xor
or
pop
adc
push
popf
xchg
push
repnz
mov
xlat
movhps
stc
sti
adc
mov
dec
push
pop
out
js
inc
lock
shll
ds
insb
mov
ja
mov
negb
movsl
mov
mov
cmc
cmp
dec
cwtl
inc
mov
lds
lret
jl
fcmovnbe
or
sbb
fcmovnbe
mov
cmp
pusha
add
add
loop
fs
add
mov
pop
pushf
cmp
jnp
xlat
hlt
test
xchg
add
push
jp
in
dec
ja
cli
xor
jmp
imul
stos
xchg
cmpsb
xor
pop
pop
jns
into
lcall
mov
and
xlat
jne
testl
pushf
dec
cmpsl
push
cltd
and
or
cmp
or
fistpl
out
pushf
cmc
pop
mov
adc
jg
adcb
xchg
insb
push
adc
in
inc
push
mov
add
xor
dec
pop
jg
push
cmp
mov
icebp
cmp
sbb
pushf
pop
mov
fidivrl
pop
out
bound
cmp
push
mov
fld
push
ja
push
in
cli
stc
or
aad
cli
cmp
cmp
mov
sarl
data16
adc
cmpsb
ja
in
push
adc
arpl
push
mov
sub
dec
je
push
pop
iret
and
outsb
jbe
jo
jecxz
mov
cmpl
jp
and
dec
repz
xlat
ja
push
in
dec
lcall
iret
and
into
cmp
imul
push
jbe
sbb
add
call
or
add
xchg
dec
rorb
ret
fiaddl
cs
ljmp
push
adc
xlat
push
jg
nop
dec
cmp
cmp
dec
in
iret
dec
sub
ds
mov
clc
movsl
and
stos
pusha
pop
mov
sbbl
sub
pop
mov
addr16
sub
or
push
adc
test
dec
mov
mov
inc
xor
hlt
pop
dec
shrb
sbb
xor
test
pop
lret
neg
mov
adc
nop
out
xchg
sub
js
clc
outsl
adc
jne
ja
iret
repnz
mov
add
or
xlat
push
mov
jne
push
cmpsl
adcb
outsb
cmpsb
inc
xchg
and
inc
xchg
stc
mov
jo
pop
add
and
fld
jns
and
xor
inc
jbe
movsb
scas
pop
push
cli
jl
es
sub
in
cmpsb
mov
fstpt
xlat
ror
adc
sbb
mov
out
test
popf
fnstcw
sar
enter
jne
loope
arpl
in
fmulp
jae
dec
aam
xor
or
test
les
dec
xlat
mov
or
pop
xor
je
popf
mov
add
mov
shrl
push
or
mov
sbb
cmp
mov
je
pushf
inc
lret
popf
jmp
dec
dec
xor
jae
in
test
std
and
dec
imul
jae
jge
ds
mov
push
jb
fs
fcomps
ds
ficoml
aad
fldcw
es
movsl
dec
pushf
mov
jb
or
out
cs
dec
mov
stc
dec
sub
fsubrp
enter
imul
mov
mov
xchg
push
push
dec
cli
dec
loope
sti
cmp
mov
inc
je
lret
and
mov
imul
int3
in
mov
xchg
outsl
mov
jmp
jge
imul
mov
ss
ret
mov
popa
aas
pop
and
loop
jne
mov
test
fldcw
pop
jns
mov
cltd
rcrb
mov
cwtl
cmp
test
adc
or
std
cs
popa
cs
nop
push
arpl
mov
inc
rolb
dec
and
or
popa
xlat
lret
pushf
jns
bound
mov
std
cmpsl
fstpt
mov
enter
inc
imul
pop
xchg
adc
test
cmpsl
cmp
and
xor
mov
fdiv
and
jae
or
or
out
nop
push
insb
mov
adc
jo
stc
into
cmpl
loop
nop
push
or
dec
insb
scas
loop
popf
jne
std
int3
pop
lock
int3
insb
cmp
imul
rcrb
stos
and
cmpsl
scas
fdivrp
aad
cmp
popa
adc
jp
xor
fidivs
ss
inc
ss
cmp
pop
inc
roll
push
arpl
ret
jbe
aad
push
jb
mov
inc
clc
mov
outsl
xor
push
xor
mov
aas
sub
sbb
jne
mov
mov
sub
fmull
jo
xorb
mov
xchg
push
subl
xor
je
xchg
sub
and
mov
xchg
hlt
inc
fidivs
in
in
add
push
xchg
sub
dec
test
xchg
stc
fsts
jns
lods
add
lds
pop
imul
xchg
mov
popf
inc
mov
xor
mov
mov
mov
xor
inc
frndint
mov
gs
cli
xlat
leave
inc
mov
xor
or
gs
cmp
push
add
pushf
lahf
mov
fists
or
and
nop
xor
scas
ret
jno
mov
jmp
push
jbe
nop
cmp
jp
scas
add
jns
cs
dec
xor
test
jnp
movsb
push
dec
mov
rcrb
scas
xorb
cs
sbb
xor
fstpt
pop
mov
imul
inc
cmc
icebp
pop
jmp
sarb
xor
inc
imul
stc
mov
push
fistl
push
test
jo
rcrl
and
fldz
dec
and
test
xchg
xlat
mov
pop
jae
js
inc
pop
shll
clc
js
jo
rclb
jns
lods
mov
icebp
and
xor
cld
xor
adc
sbb
jno
xchg
adc
cmc
jb
xchg
enter
jecxz
xor
in
or
scas
test
fldenv
jle
adc
ds
pop
and
adc
jo
xlat
mov
cli
and
xchg
cmp
fs
mov
xor
fidivl
dec
jl
dec
add
xchg
je
xor
ljmp
xor
push
cmpb
ss
int
cld
outsb
xchg
dec
cwtl
adc
leave
mov
f2xm1
int3
ret
cmp
sbb
jne
mov
mov
pop
data16
xchg
xchg
hlt
test
pop
jns
and
jo
mov
dec
nop
pop
pushf
push
xor
mov
add
add
cmp
imul
push
hlt
imul
inc
outsl
mov
jl
pushf
sbb
mov
imul
add
cli
pop
inc
in
ret
lock
mov
sbb
daa
push
xor
lcall
dec
ficomps
or
sub
sbb
jl
fpatan
push
pop
test
cmp
std
out
test
dec
std
leave
clc
adc
addr16
aam
mov
jo
pop
dec
dec
clc
push
fistpl
cmpsb
pushf
jmp
lcall
not
pop
and
and
je
pop
mov
or
jl
push
sbb
pushf
push
push
andl
es
shll
subl
xchg
mov
sub
push
lahf
cs
jnp
flds
adc
sbb
jns
xor
int3
outsl
imul
jns
insb
fucomi
inc
mov
out
movsb
dec
rcrl
mov
mov
repz
mov
adc
sub
xchg
in
iret
pop
cwtl
ja
adc
hlt
push
mov
ljmp
cmp
pop
insb
sub
pop
and
or
enter
pop
mov
jmp
fwait
stos
dec
scas
daa
dec
pop
dec
sbb
lock
or
stos
push
repz
ds
and
pop
xchg
cmp
mov
add
loop
les
mov
fsubrp
dec
fcmovnbe
sub
sbb
push
push
jge
pop
and
jae
aam
jg
popa
mov
adc
fnstcw
add
cmp
jp
xor
mov
push
lods
ja
xor
sbb
dec
sbb
cmp
xor
xchg
mov
addr16
xor
jno
or
inc
and
ja
push
inc
pusha
cmpsb
movsb
push
in
xor
sub
fldt
clc
shlb
adc
addr16
add
dec
movsl
rcrb
xlat
rcll
fmul
cmpsl
shlb
pop
jno
push
pop
pop
sti
stos
cmpsl
add
aad
jp
loope
dec
test
je
pop
das
movsb
insl
sahf
push
fistpl
sub
scas
push
pop
xchg
jne
mov
adc
fisttpl
cld
pop
fldcw
pop
lret
cmc
and
push
pop
or
lret
ljmp
loopne
adc
pusha
jnp
fs
push
sysret
push
iret
pop
ret
je
push
mov
aad
mov
jae
nop
test
ds
adc
push
inc
push
inc
jb
xlat
add
push
movsl
add
jp
mov
imul
mov
mov
outsl
in
daa
ficomps
imul
pop
les
dec
cmpsl
sbb
sub
in
mov
sbb
mov
fnstenv
mov
inc
nop
xchg
and
jle
lcall
pop
and
jecxz
jb
mov
aad
imul
mov
jno,pn
gs
xor
fsubrs
std
mov
lret
sub
pop
aad
pusha
popf
out
enter
js
fsts
neg
and
cli
mov
sub
cmp
mov
push
fldenv
addl
stc
mov
mov
push
movsb
push
cmp
sti
pop
cmp
repnz
or
jae
push
das
mov
int3
or
mov
adc
subb
mov
sub
xlat
xor
cmpsb
or
adc
mov
xor
fsubs
and
dec
ret
rorb
int
push
scas
sbb
mov
mov
in
lret
ja
push
jae,pn
int
adc
push
mov
movsb
rcrl
bndldx
mov
idiv
in
ret
out
stc
push
xor
ja
fcmovne
dec
call
out
jns
ret
mov
add
add
test
inc
and
push
jle
ds
arpl
mov
cwtl
mov
test
movsb
or
sub
aad
fwait
popa
mov
mov
outsb
xor
popa
test
lahf
sbb
xor
push
aam
inc
insb
iret
cld
dec
fildl
push
std
xor
mov
add
and
add
out
cmp
mov
rcr
les
ret
inc
call
ret
and
enter
push
test
out
fsts
aas
xor
lods
pop
std
or
mov
push
insl
cmp
in
lahf
negb
push
push
sahf
jecxz
out
jp
in
out
jg
ret
adc
cmp
scas
repnz
pop
cmp
shrb
xchg
push
int
dec
pop
mov
loopne
cs
mov
cs
stc
or
sbb
int
mov
push
xchg
pop
dec
jb
dec
mov
pop
fnstcw
sbb
pop
gs
sbb
or
xlat
add
mov
sbb
push
pop
movsl
pop
cmp
sbb
mov
cmpsl
push
orb
jns
aas
fucomi
test
sub
fs
inc
mov
test
inc
fistl
repnz
jge
fiaddl
fisubl
pusha
cmpsl
lods
mov
jnp
dec
pop
lahf
xchg
mov
fcmovne
xchg
xor
mov
sbb
lock
mov
bound
pop
xchg
shl
jp
ds
in
push
lcall
inc
pop
cmpsl
jmp
push
out
xor
mov
add
jmp
mov
ljmp
mov
mov
jae
stos
aas
jge
sbb
and
fimuls
shll
int3
pop
in
dec
dec
stos
movsb
daa
mov
jnp
or
jns
addr16
enter
mov
dec
mov
testl
jp
xchg
jg
and
gs
hlt
mov
dec
jne
sbb
mov
std
into
pop
bound
stc
fnstcw
hlt
inc
and
pop
adc
and
sub
stc
xlat
clc
pop
stc
push
cmp
ds
add
mov
xchg
or
cmpb
push
inc
es
dec
ja
push
xor
jge
ret
push
jbe
xchg
jecxz
movsb
mov
test
pop
stos
xlat
sar
addr16
pop
cs
pop
lea
push
xlat
jae
aas
jmp
inc
fwait
xchg
dec
pop
mov
xchg
mov
std
lods
pop
mov
xor
out
and
mov
imul
das
cmp
jno
sbb
icebp
cmp
mov
stc
mov
popf
and
loope
ret
xlat
stos
mov
js
icebp
addl
pushf
ret
lret
jae
pop
cmp
xchg
add
push
std
ds
les
cmpb
jae
dec
push
pusha
outsl
dec
adc
fdivrl
and
mov
das
pop
adc
sbb
or
xchg
mov
test
mov
sub
sbb
add
or
xchg
bnd
or
xchg
pop
imul
pop
cmc
mov
sbb
dec
inc
std
mov
fs
xor
mov
js
fldt
into
sub
dec
mov
add
add
mov
push
lcall
or
repnz
add
into
fwait
xchg
jl
jne
xor
cld
dec
mov
or
and
ficoms
push
mov
cmp
fidivl
ljmp
sbb
xlat
add
xchg
push
jno
cmp
cmp
movsb
lret
xchg
cli
ja
fistpl
dec
mov
or
sbb
popf
dec
fistpll
cmp
sub
ja
fldenv
add
fnstsw
push
ret
icebp
push
pop
lretw
shl
xor
dec
sti
jne
jae
push
jmp
xchg
insb
jle
push
xchg
loop
cmpsl
push
test
push
iret
add
push
mov
sbb
jae
repnz
push
sbb
into
outsb
rcll
jecxz
dec
xchg
mov
mov
test
int
out
xor
movsb
addr16
adc
cli
mov
xlat
out
xchg
insb
cmp
cli
fdivrs
jge
and
push
in
and
in
or
adc
cs
xchg
mov
mov
loope
push
insb
jl
xchg
fldt
sbb
adc
cwtl
sub
aad
cli
xor
fcmovnb
jno
fwait
jnp
push
fldenv
xchg
fmuls
fildl
rorl
movsl
cmp
mov
dec
iret
fadds
jl
mov
push
xchg
movsl
lahf
clc
icebp
mov
sbbb
ljmp
insl
movsb
popf
stos
dec
lock
jno
fistpl
jns
jae
fnstenv
sbb
jb
std
stc
inc
rcr
xchg
jge
cwtl
shrb
cmp
inc
jg
icebp
inc
roll
aad
mov
xchg
ds
xchg
test
mov
leave
in
fsubrs
dec
cmp
cld
fldt
dec
sub
adc
fwait
pop
cld
bound
fiaddl
adc
inc
enter
outsb
jno
sbb
cmp
jp
repz
inc
xchg
pop
into
pushf
push
jnp
add
add
stos
jnp
cltd
cmp
repnz
out
stos
das
or
mov
xor
fistl
xchg
imul
jge
inc
je
or
fisubrs
cmp
sub
shrl
inc
enter
and
jmp
xchg
lods
pop
outsl
pop
in
call
cmp
jns
push
mov
push
mov
push
sub
gs
pop
scas
and
jo
add
jmp
xorl
fstpt
cmp
pop
and
dec
scas
repnz
xchg
mov
push
call
jbe
int
sub
sbb
or
mov
cmc
orb
loop
stc
call
lret
mov
and
ja
pop
sub
sub
mov
cmpl
push
push
sbb
add
decb
jo
out
call
jge
jb
cs
cmpsl
xor
aad
or
push
gs
xor
faddl
mov
out
jg
loop
push
ds
fwait
mov
or
insb
aad
push
cmp
add
jge
ss
sub
dec
nop
mov
test
mov
pop
xorb
push
push
insb
int
aam
jge
pop
pusha
sbb
and
in
fistl
lret
add
jge
incb
add
popf
mov
imul
fcmovnu
sbb
negb
dec
or
bound
movsb
or
and
dec
fstl
hlt
js
cmpsl
cmpsl
dec
xlat
fs
adc
mov
outsb
cmp
pop
jl
scas
aam
push
push
sbb
sbb
pop
stos
pop
cs
sbbb
xlat
loop
adc
or
nop
hlt
mov
and
out
aaa
sti
push
sub
adcb
and
sbb
ja
lock
xchg
pop
dec
lea
stos
cmp
ror
push
dec
push
push
in
stos
fsts
xchg
xor
mov
mov
mov
iret
int
rorb
fidivs
mov
mov
icebp
pop
les
mov
ja
xor
cmp
push
inc
subb
movsl
aam
test
mov
movsb
add
aad
popf
fstl
arpl
aam
das
cmp
movsl
and
xor
or
jae
adc
sbb
outsb
ja
pop
jecxz
pop
jl
addr16
jge
out
xor
jbe
inc
add
pop
mov
push
pusha
dec
mov
loop
inc
jp
pop
addl
cmc
push
mov
or
jnp
xor
sub
or
sahf
fstps
xchg
gs
dec
or
dec
testb
adc
inc
pop
dec
mov
cmp
or
divl
inc
jmp
jae
fnstenv
fs
arpl
dec
jge
xchg
xchg
pushf
and
sub
cmp
jae
add
shrl
push
flds
pop
bound
xchg
push
fs
cmp
xchg
int
jecxz
ret
mov
and
daa
bound
cmp
cltd
mov
pop
fiaddl
insb
js
jo
negl
xor
cli
aam
inc
mov
jl
imul
in
pop
push
not
hlt
pop
push
lock
loopne
xchg
into
pop
loop
jl
lret
shl
inc
in
loope
cmp
pop
and
sub
add
rcll
xchg
leave
sbb
enter
int3
adc
lea
leave
lcall
imul
pusha
or
mov
adc
movsl
jecxz
std
mov
jo
cmp
hlt
jno
cmp
test
mov
mov
dec
add
push
ja
sub
sbb
mov
sub
in
mov
nop
mov
pop
pop
pop
mov
addl
push
popa
sub
out
ss
leave
out
sbb
mov
xlat
cmpsb
jmp
xorl
add
xchg
pop
rorb
insb
mov
test
push
nop
cwtl
push
jb
mov
fistl
ret
fnstsw
ret
add
push
pop
cmp
mov
repnz
mov
adc
pop
xchg
xchg
sahf
mov
jae
add
dec
lcall
jns
jle
dec
inc
sub
or
lock
mov
into
call
mov
pop
adc
movsb
sub
or
push
dec
repnz
imul
dec
push
add
addb
cmp
nop
fucomi
call
lcall
xchg
mov
cld
lea
stc
add
call
xchg
xor
outsl
and
jb
mov
and
cmc
xlat
or
insb
lods
xor
and
fwait
data16
es
jg
lds
dec
xor
cmp
imul
rcrb
xchg
fwait
movsb
mov
ficoml
inc
add
cmpsl
imul
dec
iret
test
pop
hlt
sub
pop
insl
and
cmpb
addr16
xor
mov
push
cmp
sti
aaa
subl
inc
imul
jnp
and
mov
xchg
aaa
cmp
addb
mov
cmc
aas
pop
testl
sbb
add
ret
xchg
nop
cli
in
xor
idiv
sbb
jne
adc
lea
iret
jnp
adc
dec
mov
aaa
adc
mov
lahf
push
pop
bound
push
je
xor
fildll
dec
in
hlt
inc
push
xchg
adc
cmp
push
mov
mov
cs
or
lock
outsb
into
mov
into
outsl
mov
add
std
lret
push
and
mov
js
sub
xor
fimuls
lods
sbb
ficoms
imul
jne
testb
xchg
cmp
mov
inc
movsl
clc
and
sub
sarl
pop
xor
loopne
cmpl
push
xchg
mov
andl
mov
fidivl
mov
add
and
fnsave
stc
imul
arpl
negl
jnp
xor
in
xchg
insb
xor
mov
xor
lret
sbb
test
gs
les
stos
nop
adc
push
aam
push
cmp
rorl
insb
mov
pop
push
fxch
dec
movsl
sub
addb
sbb
test
out
hlt
mov
sbb
dec
dec
fidivrs
loop
cmp
jp
rcl
mov
bound
sbb
gs
xlat
cmpsb
fisttpl
adc
mov
hlt
pop
pushl
sub
jle
sub
xchg
inc
fsts
aas
pushf
sbb
sub
addr16
fists
dec
push
lods
and
int
test
sub
push
jae
ds
decb
sbbl
and
sbb
push
std
iret
pop
je
cmpl
xor
stc
aaa
xor
pop
insb
push
cld
ja
test
ds
cmp
mov
fidivl
lcall
clc
lret
jno
bswap
mov
fmul
scas
jnp
pushf
cli
push
sbb
xor
xlat
mov
jle
push
pop
jge
inc
data16
and
mov
pop
pop
xchg
in
int3
xlat
sbb
scas
mov
add
adc
fistl
dec
shll
addr16
hlt
lock
subl
push
mov
pop
jp
leave
jge
and
pushl
pop
out
in
push
and
dec
add
xlat
mov
fdivl
popa
aaa
pop
or
push
mov
bnd
and
es
nop
push
ret
addr16
push
or
mov
mov
fiadds
mov
or
cmp
push
sub
add
pop
and
ret
pop
stos
subb
movsb
stos
inc
jp
lcall
outsl
ds
sbb
loopew
lods
xor
xor
int3
cli
jl
jne
xchg
fdivl
call
sbb
mov
push
ficoml
push
stc
jge
pop
fwait
aam
xor
xlat
into
pushf
cli
add
fisubs
jge
jg
lds
pop
lret
dec
dec
dec
out
push
dec
push
jbe
cltd
in
out
mov
xorl
mov
idiv
cmp
mov
mov
dec
pop
subl
xor
add
ret
mov
inc
inc
aam
sbb
lahf
xchg
sbb
inc
jb
mov
add
and
iret
imul
cmp
out
push
pop
test
das
mov
xchg
es
and
aam
iret
pop
pop
mov
sub
and
cmp
cmp
dec
mov
jae
in
jle
pop
rol
pop
test
cmp
gs
rolb
mov
fwait
mov
in
jecxz
loop
lret
test
imul
xchg
lods
jns
jl
sbb
lds
repz
sahf
enter
aad
ja
ds
popa
pop
mov
addr16
pop
loopne
ror
jge
fdivrs
mov
mov
jp
jmp
call
push
incb
push
test
push
fdivrl
mov
mov
fisttpll
repnz
fistpl
mov
xchg
rcrl
stos
arpl
add
pushf
cs
loopne
mov
or
fiaddl
sbb
xor
cli
lods
scas
xor
mov
cwtl
push
jb
jg
jmp
push
iret
pop
jbe
cmp
mov
pop
sub
mov
and
arpl
push
xchg
add
xor
push
mov
xchg
test
jne
arpl
jns
fistps
test
loop
popa
inc
adc
cltd
into
cmp
lea
out
ss
jmp
fadds
sbb
cltd
cmp
sub
mov
ret
xchg
movsb
and
jmp
jmp
pop
lods
xor
sbb
inc
pop
movsb
hlt
cmpsb
push
imul
and
push
clc
hlt
or
push
add
shrl
cmp
adc
in
sarl
pop
push
cld
or
int3
push
cmpsl
mov
cmp
adc
and
dec
das
sti
inc
dec
das
sti
lret
add
nop
and
mov
sub
push
lea
xchg
rorl
out
jae
dec
jg
xor
sub
inc
dec
xor
sbb
cli
dec
adc
orl
out
pusha
cmpsb
mov
movsl
popf
add
inc
mov
fnstsw
inc
fwait
pop
jno
in
cltd
push
cld
push
ds
mov
or
cmp
mov
mov
rcrb
ljmp
cmp
lahf
cmp
adc
sub
fimull
or
andb
xchg
iret
push
mov
and
push
stc
in
lret
xchg
in
mov
loopne
fs
cmp
ljmp
and
jae
in
fisubrs
fildl
jl
sub
pop
push
push
cs
mov
add
inc
pop
addl
mov
arpl
xchg
adc
dec
insb
jno
dec
out
lcall
cmp
push
add
adc
sub
mov
adc
add
cmp
push
xlat
sbb
sub
rcrl
clc
stc
mov
inc
bnd
out
aad
xor
lea
mov
push
jmpw
mov
bnd
push
or
push
pop
insb
adc
pop
sub
cmp
shrl
enter
add
mov
push
xor
rclb
repz
adc
adc
push
xor
aam
lds
jbe
jl
cmp
mov
ret
ret
mov
add
leave
cmp
or
and
and
lock
sub
xchg
int3
xchg
mov
sarl
pop
xchg
and
loop
dec
mov
sbb
fldenv
pop
clc
lret
cwtl
into
push
mov
pop
cmp
in
cld
push
cmpsl
fnstcw
aad
push
or
mov
jns
faddl
sub
push
mov
testb
mov
mov
fidivs
xor
repz
enter
push
xlat
shl
addr16
js
xor
fnstcw
fs
addr16
lock
ljmp
ds
aaa
adc
sub
cld
roll
xor
aam
jecxz
xlat
mov
adc
mov
insb
jb
pop
inc
stos
jb
lahf
mov
xchg
in
imul
mov
push
sbb
inc
je
jae
pop
inc
fcomi
out
aad
stc
or
cmp
es
jno
and
jmp
cmp
or
jnp
fnstenv
xchg
arpl
cmp
cmp
xchg
jo
arpl
pop
jae
or
roll
mov
cmp
movq
sbb
movsb
mov
inc
jno
cmpl
push
ss
jb
cmp
dec
in
xchg
and
out
inc
mov
pop
cld
jmp
imul
mov
pop
ljmp
lock
add
ja
cmpsl
or
and
lret
mov
aaa
adc
jmp
mov
daa
sbb
adc
jae
fmuls
adc
or
inc
les
repz
mov
dec
push
mov
mov
fsubs
cli
add
or
fdivrs
dec
test
imul
adc
and
enter
push
lret
or
adc
mov
iret
add
mov
sbbb
test
mov
and
mov
cmp
xlat
arpl
test
out
mov
jg
push
stc
outsl
cmpb
inc
push
roll
pop
pop
lret
pop
mov
sarl
sub
pop
addl
mov
cmp
ds
in
xchg
or
push
sbb
fsubrs
add
enter
mov
test
cs
mov
subl
rclb
fld
frstor
jns
xor
cmp
stos
or
mov
xrelease
xchg
int3
subb
fistpl
pop
cwtl
test
dec
je
push
loop
sbb
aad
cmp
xchg
jp
dec
jecxz
jp
sub
ljmp
push
or
std
push
cmp
pop
inc
test
dec
stc
pop
pushf
rcll
or
arpl
fxch
mov
fists
sbb
les
xchg
jle
nop
stos
sbb
stos
pop
jno
xor
pop
cmp
xor
out
pop
cli
std
iret
cmp
pop
out
push
js
fistl
jmp
jo
stos
lods
xor
push
pusha
pop
pop
scas
sub
outsb
sub
pop
mov
jmp
ja
mov
xlat
pop
je
mov
jp
mov
insb
rolb
stc
and
cli
loop
clc
outsl
fisubs
lret
shlb
push
push
fists
mov
les
call
lcall
xlat
mov
cmp
pop
jne
jae
adc
sar
hlt
cmp
mov
xorb
or
add
mov
cmp
test
fistpll
push
lods
and
outsl
and
pop
inc
push
xor
sub
cmp
mov
jnp
mov
jge
mov
or
lret
cmp
fcmovbe
mov
xchg
inc
sbb
jnp
fnstcw
clc
inc
mov
cmp
inc
cmp
enter
sbb
ficompl
xorb
psubd
jbe
insl
fstpt
adc
movsb
mov
push
lahf
mov
xor
add
xchg
leave
ret
aaa
das
jno
rol
jae
and
xor
sbb
or
cli
jg
xor
test
insl
cld
pop
xlat
sar
std
cmp
mov
sbb
aas
fwait
loop
fildll
sbb
cltd
cmc
push
dec
xlat
clc
inc
and
pushf
dec
or
mov
rolb
stc
push
aaa
xchg
pop
adc
iret
lock
sbb
in
sub
fsts
jbe
and
arpl
and
clc
push
shlb
in
xchg
push
pop
cld
imul
adc
xor
lcall
mov
test
int3
aam
hlt
je
mov
nop
sub
xchg
aam
mov
js
mov
ljmp
push
in
popf
mov
and
pop
ret
mov
pop
xchg
jae
fsubrs
sti
test
and
imul
inc
rolb
jne
jge
cmp
add
dec
mov
out
fdivrp
and
fxch
je
jbe
pop
lcall
jae
stc
mov
mov
cmp
and
mov
js
jo
cmpsb
jl
sub
psubsb
xchg
sub
stos
xor
mov
inc
addr16
sub
and
push
sub
adc
scas
in
ds
andb
xor
and
xor
cli
mov
xor
mov
out
scas
mov
xchg
call
mov
pushf
cmpb
cwtl
scas
jne
jne
test
push
shll
jno
pusha
pop
lcall
fucomi
fidivl
lret
push
mov
imul
inc
mov
sbb
fcomp
test
movsb
fisubrl
inc
sbb
shlb
fldt
in
nop
inc
sti
jecxz
xchg
adc
pop
ss
dec
mov
and
cmp
xlat
cmpsb
cmp
and
pop
inc
arpl
push
mov
test
jle
ret
push
sbbb
cmp
pop
hlt
xchg
xchg
mov
or
push
lods
cmpsl
loope
sbb
test
adc
mov
pop
sbb
lods
mov
stos
xchg
gs
mov
fisubs
jecxz
sbbl
pop
and
adc
dec
test
insb
xor
fcmovnbe
mov
ficomps
movsb
sub
incb
addr16
mov
pop
loopne
ss
call
sti
cmp
ja
clc
inc
popf
sbb
std
dec
cmp
repnz
push
cmp
scas
mov
aad
mov
xor
jle
les
dec
es
les
mov
adc
pop
gs
dec
xor
mov
dec
js
add
fildll
rcll
repnz
mov
dec
gs
xor
jg
mov
cmp
xor
shlb
ja
fistl
cmpsl
cmp
jle
sbb
outsl
jns
cmpsl
div
mov
lret
pop
lcall
in
xor
loop
bound
or
flds
fwait
dec
xlat
mov
inc
adc
jl
clc
ljmp
sub
fnstenv
mov
xor
push
mov
pop
nop
dec
xchg
dec
and
mov
dec
test
jmp
push
jae
ja
cmp
jge
lret
sub
insb
xor
jns
mov
push
jg
xor
test
xchg
sbb
push
mov
mov
fsub
pop
fwait
test
dec
ljmp
stc
mov
cmp
jg
dec
dec
push
lcall
or
sti
push
sub
js
imul
or
and
insl
std
push
jmp
jecxz
add
sbb
jl
mov
pop
or
dec
cmp
insb
adc
insb
xchg
dec
lret
nop
lods
aam
cmp
xor
in
fsubrl
mov
in
jmp
and
cmpsl
aad
mov
jns
pop
fnstenv
or
inc
mov
ds
inc
mov
sub
sub
lods
aad
pop
fisttpl
jmp
mov
cmp
movsb
mov
loope
add
loop
cmpsl
in
cwtl
out
popf
xor
and
jno
test
pop
js
into
pop
outsb
sub
or
add
and
and
je
ja
pop
dec
and
fld1
xchg
jo
pop
xor
sub
mov
lea
mov
pop
and
in
in
mov
les
je
mov
shr
mov
xchg
loope
push
push
mov
cli
sahf
std
or
dec
fildl
pop
adc
sub
inc
lds
sub
test
pop
xchg
out
hlt
int3
lret
push
dec
jmp
xchg
sub
cli
rcr
adc
fucompp
int
jnp
or
ds
cwtl
mov
push
cmp
mov
sbb
sbb
pop
cmpb
mov
jp
insb
sbb
in
enter
mov
loop
bound
jle
pop
lds
adc
fimuls
das
dec
jne
je
jae
shl
dec
out
cmp
insb
mov
add
fcmovnb
nop
jg,pn
test
push
dec
push
mov
xlat
lcall
mov
movsl
adc
fwait
jmp
mov
pushf
lods
and
rcrb
stos
xchg
nop
fwait
push
jl
mov
sub
aad
fstl
push
or
xlat
daa
mov
push
lods
push
pop
sti
and
sub
or
popf
lret
jge
pop
cwtl
insb
gs
add
movsb
inc
xchg
fadds
xchg
cmp
fldt
stc
repnz
inc
cs
cmpsb
mov
ds
repz
js
out
pop
daa
adc
xchg
or
inc
imul
mov
ljmp
push
xor
lret
cmp
xchg
jl
cmp
or
inc
repnz
or
sbb
xlat
inc
adc
pop
cmp
bound
push
add
popa
fdivs
pop
aas
mov
cli
push
push
test
leave
inc
sbb
fnstcw
cmpsl
or
jb
ds
jg
fsqrt
push
dec
pop
mov
std
mov
jo
test
movb
jnp
xor
jno
jp
sub
mov
fisttpl
std
cmp
mov
mov
push
bound
pop
sarl
clc
sub
ja
xor
push
jno
pushf
push
push
test
je
xlat
inc
mov
data16
pop
sti
fistl
nop
mov
cmp
add
rcr
push
sub
nop
out
js
or
fsts
sti
call
fptan
enter
jle
dec
push
into
les
push
sbb
mov
dec
mov
and
int
cmp
in
pop
xor
leave
pop
das
mov
imul
pop
push
repz
or
fs
dec
sub
clc
dec
jno
jae
mov
cmp
inc
xor
nop
mov
xor
push
jle
cmp
pop
mov
loopne
stc
xchg
add
xchg
js
xchg
cmp
scas
shlb
xchg
rorb
add
xlat
mov
or
js
push
stc
sub
shll
xor
xor
arpl
stc
sub
mov
or
rclb
cwtl
sbb
xchg
adc
ss
imul
and
sbb
jmp
dec
and
inc
in
insb
push
or
imul
sbb
bound
jl
and
pushf
add
shlb
xor
lret
dec
pushf
push
mov
imul
in
push
push
das
cli
arpl
loop
stc
iret
add
push
and
sbb
xor
fidivs
push
mov
push
out
pop
xchg
adc
ret
dec
mov
fcmovnu
or
inc
jle
xor
mov
divl
loop
ficomps
sbb
fildl
mov
pop
mov
adc
in
stos
push
dec
je
inc
dec
sahf
bound
mov
sub
or
and
das
push
fldt
dec
lea
dec
jo
test
arpl
sub
stos
ja
mov
lcall
jmp
sbb
sbb
out
cs
lret
imul
dec
ss
mov
cmp
adc
sub
jnp
fcomps
flds
stc
pop
ljmp
fisttpl
jge
ss
popa
mov
pop
push
mov
out
mov
dec
jns
pop
rol
test
popf
push
test
outsb
das
xchg
out
push
sub
inc
inc
inc
mov
mov
enter
add
jge
mov
xlat
or
xorb
or
divl
or
fisttpl
cmp
imul
push
rcrb
and
or
in
out
fldcw
add
dec
fstpt
xor
and
xlat
jle
jae
stos
test
cli
cwtl
sbb
and
pop
nop
bound
push
mov
cwtl
cmpsb
mov
in
sbb
cmp
pop
scas
sub
push
dec
pop
cmp
orl
cmp
push
cs
mov
vcomiss
sbb
jbe
cli
lret
iret
inc
dec
jg
mov
imul
xchg
jge
notb
pop
jge
int
add
push
stos
mov
ja
xchg
enter
cwtl
std
mov
pop
mov
cmp
pop
leave
dec
mov
sbb
imul
es
xchg
cli
fsubrl
and
js
adc
jne
jno
outsl
dec
addr16
jecxz
push
pushf
fbstp
rolb
xchg
es
or
icebp
sbb
outsl
add
enter
and
ret
repnz
jno
inc
std
cmp
xchg
mov
mov
mov
push
or
lret
sahf
mov
lea
je
adc
jbe
jmp
fiaddl
shl
pop
xchg
xor
fdivs
xor
mov
enter
sub
jns
add
pushf
cmp
adc
xlat
pop
or
ret
jne
sbb
or
push
push
mov
xor
rcll
dec
or
cmp
add
xchg
cmp
jne
xor
adc
leave
ja
prefetch
mov
or
pop
fistps
mov
xchg
sbb
sub
movsl
sar
inc
xlat
mov
xor
fldenv
stc
pop
jns
adcb
fistpll
aad
sti
mov
imul
push
int3
xchg
push
sbb
push
xlat
push
cmp
dec
aaa
jl
shl
jnp
leave
jg
sub
sbb
outsl
push
call
loope
test
cmp
jno
add
lods
sbbb
sub
adc
mov
lock
push
inc
outsb
sub
enter
xlat
pop
fidivrs
fstpt
push
or
jae
mov
inc
call
mov
pushf
das
imul
in
call
add
mov
xchg
aad
or
data16
ljmp
mov
cmp
adc
fucomi
mov
mov
xor
jmp
add
jp
mov
pop
js
lea
mov
and
or
or
js
adc
nop
mov
out
pop
cli
mov
shll
aas
inc
and
outsl
ret
lea
xchg
outsb
sahf
das
mov
sbb
pop
out
daa
in
ljmp
aaa
ficoml
insl
cmp
push
adc
lahf
add
push
lods
es
adc
into
cmp
add
fs
cmpl
jnp
sbb
add
fisubrs
stc
movsl
aam
add
pop
mov
push
push
test
cmpsb
xchg
insl
lcall
pop
push
inc
cmp
fcmovne
repnz
roll
jmp
std
push
sbb
cs
test
movl
hlt
inc
or
adc
mov
lret
and
jbe
popa
pop
add
je
push
lret
enter
mull
mov
adc
mov
jae
inc
cmp
loope
pop
mov
pop
sub
push
ja
or
jae
lret
pop
addb
lahf
pop
add
rcll
mov
sbb
sbb
addr16
pushf
adc
mov
dec
push
push
cmc
hlt
mov
sbb
or
push
mov
jnp
and
arpl
mov
sarb
cs
pop
testl
xlat
lret
shl
jge
sub
pop
fwait
ret
pop
sub
and
insb
push
cltd
jmp
or
mov
sti
push
push
call
sbb
fucomip
push
xchg
and
int3
push
cmc
push
fnstcw
shlb
subl
mov
popf
sub
jb
sbb
ljmp
loope
daa
mov
xor
inc
arpl
cmp
fisttpl
inc
mov
addb
loopne
lock
sbb
cs
xorb
or
mov
insl
cli
adcb
or
lahf
lret
inc
imul
fbstp
push
mov
xchg
xor
push
js
and
mov
scas
inc
or
or
stos
shrb
xor
dec
xor
fistl
add
cmp
sbb
xchg
imul
push
ja
pop
xor
mov
repnz
mov
xchg
outsl
js
push
test
bswap
mov
arpl
mov
addb
aas
lods
fistps
and
cmpsl
inc
imul
dec
jge
and
push
and
shrb
cs
daa
imulb
lret
jmp
scas
imul
xlat
shrb
movsb
aas
pop
sub
sub
loopne
mov
rol
inc
aas
sub
addr16
ljmp
pop
adc
cmp
push
hlt
je
mov
jge
lods
fld
add
insb
pop
xchg
repnz
mov
aad
lods
sub
fiadds
clc
cmp
dec
call
imul
sub
mov
push
arpl
mov
adc
gs
stos
mov
loopne
clc
sub
mov
in
push
cwtl
inc
cli
cmc
add
pop
into
daa
mov
repz
fistpll
cmp
out
and
out
stc
mov
push
sar
add
sub
addb
loopne
and
push
jae
dec
fcoml
xor
std
mov
and
lcall
push
mov
pop
cmpsb
jge
inc
shrl
dec
jecxz
lods
rcr
out
xchg
jno
pop
jbe
cmp
jp
cmpb
mov
xlat
in
subl
stc
pop
xchg
test
inc
insl
pop
lcall
mov
pop
testb
loopne
lret
push
fstps
ret
mov
roll
sub
cmp
add
cmpl
pop
or
inc
adc
shll
mov
pop
mov
cmp
mov
arpl
push
cmc
les
sub
jae
mov
push
imul
and
mov
mov
pop
idivl
pop
or
mov
dec
test
mov
mov
mov
push
jg
pop
pop
shrb
movsb
std
sbb
cmc
pop
pop
push
xor
fistpl
mov
add
sbb
sub
cli
push
jae
sahf
fs
mov
mov
or
sbb
popf
test
rclb
push
cmc
mov
jle
mov
dec
fdivrl
push
arpl
sub
jb
imul
push
pop
shrb
jae
mov
sub
lock
mov
push
int3
jae
dec
stos
adc
xor
cli
cmp
push
inc
inc
int3
cs
pop
jbe
and
rcll
js
je
shlb
arpl
sbb
and
cmpsl
into
movsb
mov
pop
push
inc
or
pop
mov
fwait
jecxz
lcall
add
aam
gs
sbb
lret
mov
fidivs
xchg
std
sbb
mov
xchg
hlt
ret
imul
and
sbb
mov
cmp
andb
scas
cltd
mov
or
push
add
insb
dec
jl
adc
pushf
and
cmc
sbb
jae
jns
outsb
fistl
xorl
add
sbb
dec
jecxz
ljmp
push
push
out
decl
adc
imul
adc
mov
outsb
pop
test
mov
out
scas
leave
jl
cmc
loope
stos
arpl
jnp
jo
xchg
add
into
pushf
arpl
push
fwait
or
js
jne
fcmovne
pop
mov
inc
push
iret
pop
sti
sub
sarb
lret
cmp
das
enter
fnstcw
fildl
js
shll
pop
xor
pop
cmp
out
sbbl
inc
sbbl
outsb
xchg
fdivr
ret
xchg
aad
sub
cmp
test
jmp
xor
push
stc
xchg
subl
and
push
adc
lds
pop
xor
mov
sub
cmp
xchg
or
push
lret
cltd
adc
mov
pop
pop
and
pop
test
sarl
fbstp
inc
stos
cwtl
mov
ret
jns
push
xchg
stc
xlat
mov
mov
xor
xor
push
mov
shl
mov
les
nop
jns
stos
dec
mov
stc
movsb
clc
xlat
sbb
sbb
notb
inc
rcr
movsb
outsb
push
jns
pop
dec
shr
stos
sbb
xlat
aas
push
movsb
pop
out
imul
dec
jp
outsl
idivl
fwait
xchg
dec
cmp
pop
rcrl
jmp
sbbb
lret
fnstcw
dec
aaa
fidivs
pop
mov
sbb
aad
out
into
sub
dec
fcom
mov
push
sub
fimuls
stc
imulb
in
shll
jno
iret
push
or
push
adc
jns
sub
stc
xchg
adc
adc
pop
push
in
jmp
das
push
outsb
cmp
pop
mov
dec
and
pop
push
push
push
adc
out
sub
test
jnp
jns
hlt
push
nop
fs
and
out
sbb
inc
adc
std
dec
jb
jmp
cmp
jmp
add
cld
data16
fidivrs
mul
or
out
and
dec
in
mov
ja
movsl
mov
xlat
test
sbbb
cld
mov
adc
and
dec
dec
pop
xor
sub
inc
push
sub
xchg
push
mov
xchg
in
imul
mov
and
imul
cld
out
pusha
repnz
adc
loopne
lret
push
sbb
inc
lock
jecxz
mov
pushf
adc
inc
mov
and
pop
dec
stos
test
das
lock
and
jb
in
sub
ret
adc
ds
arpl
xchg
cmp
xor
leave
xchg
sub
shlb
imul
xchg
sarl
mov
xchg
jo
imul
popf
rorb
sarb
xchg
and
lret
mov
mov
fisubs
bound
les
cmp
xor
cmp
mov
or
and
jmp
mov
call
rcrb
repnz
mov
arpl
lock
imul
push
not
das
add
jbe
and
mov
js
insl
xchg
int
jo
testb
cwtl
xchg
pop
nop
fwait
jno
xchg
xchg
nop
das
mov
add
leave
xchg
dec
sub
mov
adc
sub
sbb
loope
or
addr16
enter
or
movsl
xlat
push
js
mov
and
jnp
jne
cmp
mov
mov
mov
aad
mov
add
int3
int
popa
push
mov
xchg
pop
push
mov
repz
pop
xchg
outsl
ret
fcmovnb
jbe
test
xchg
adc
pop
insl
pop
ret
adc
test
fnstenv
movl
std
ret
sub
xor
repz
xor
jno
jbe
jb
xor
xor
jg
or
out
xor
sbb
mov
lea
mov
insl
pop
dec
ss
stc
ljmp
pop
icebp
mov
fldcw
inc
mov
leave
dec
cs
outsl
mov
sarl
adc
inc
cld
int3
rcrl
mov
pop
mov
xchg
sbb
cmp
pop
sbb
dec
adc
sbb
ljmp
push
or
and
xorl
xlat
roll
mov
mov
hlt
mov
sbb
cwtl
lods
xchg
jp
fxch
sub
sub
pop
sub
dec
cmp
xlat
jno
out
cmpb
stc
stos
in
lcall
cmovp
push
pop
jmp
jp
int
cmp
pop
fnstenv
lret
and
cmp
pop
sahf
mov
jecxz
and
sub
xor
insb
arpl
sub
fisubl
insb
sub
pop
hlt
sahf
jmp
jbe
add
mov
pop
insl
fs
mov
or
mov
adc
pop
imul
inc
outsl
rclb
ljmp
xchg
lock
ds
inc
ljmp
iret
cmc
cmc
or
std
push
inc
andb
sbb
mov
sbb
pop
pop
outsl
or
dec
sub
push
mov
cmp
adc
fstpt
push
enter
mov
jmp
pop
sub
imul
jno
ds
xor
lret
mov
cld
mov
in
inc
leave
inc
mov
fiadds
mov
dec
jo
push
push
inc
xlat
push
not
push
mov
cmp
dec
xor
fdivrp
xor
adc
test
or
rcl
push
jno
in
or
in
aam
movsl
nop
cld
xlat
cmc
jae
cld
mov
pop
xchg
and
add
jbe
xchg
addl
das
arpl
icebp
xchg
daa
cmp
mov
sub
sahf
sbb
pop
test
dec
movb
or
inc
icebp
lock
insb
mov
scas
sbb
dec
inc
pop
xorl
movsb
and
sub
fdivrl
imul
dec
xor
call
push
mov
xor
add
adc
cmp
fcoml
jae
clc
ja
out
repnz
rcrb
pop
dec
mov
shrb
mov
negb
data16
nop
add
mov
xlat
aas
lret
repz
xchg
push
jecxz
sub
lahf
daa
cmp
fsub
popf
imul
ja
mov
adc
inc
xor
cmc
jnp
xchg
movsb
es
add
mov
dec
mov
sar
xchg
inc
enter
mov
lcall
pop
push
pop
inc
out
pop
jns
cmpsb
cmp
das
mov
test
sarl
cwtl
add
inc
and
pop
stos
and
mov
jmp
cmpsb
repz
std
sbb
xchg
jae,pt
mov
jg
mov
data16
outsl
ficoml
es
xchg
jae
push
mov
adcl
sarb
cmp
ljmp
insl
and
cmpsl
stos
arpl
mov
rcrb
sub
and
fnstenv
dec
inc
sub
clc
cmp
cmc
lret
pop
nop
sbb
stos
lcall
sub
dec
bnd
dec
mov
sbb
or
xlat
in
xchg
rclb
inc
add
addr16
xor
inc
xlat
xchg
pop
imul
jmp
push
push
test
cmp
sbb
out
cld
fstps
adc
leave
and
mov
pop
cli
cmp
call
ficoms
xorl
mov
add
sbb
fidivrl
mov
ds
insl
ss
add
iret
and
jecxz
pop
ret
mov
mov
jb
mov
cmpsl
repz
and
insb
test
dec
sbbb
mov
add
jp
sbb
jmp
or
popf
fdivs
test
xchg
cmpsl
mov
dec
cld
push
test
sbb
aam
jecxz
jecxz
andl
mov
movsl
xlat
scas
jo
adc
setae
push
jb
dec
es
fimuls
pushf
outsb
fcoms
cmp
std
stc
mov
fwait
jge
mov
ret
icebp
push
movsl
xor
ja
mov
jns
mov
fldcw
jne
sbb
fwait
jb
inc
fcoms
test
roll
rorl
sbb
movsl
lock
inc
arpl
fisubl
or
sub
and
inc
push
sarl
adc
insb
dec
inc
xchg
cmc
into
jle
int
sti
jnp
or
jp
sub
push
rolb
push
shll
mov
jl
lahf
and
out
xchg
dec
imul
mov
mov
sub
xchg
jl
add
fldt
lock
sub
inc
loope
cmp
mov
notl
cmp
fwait
incl
xor
in
rcrb
fbstp
stos
ret
cmp
mov
jmp
int3
orb
or
and
dec
xchg
scas
push
out
mov
cmp
push
xchg
mov
stos
push
xor
sti
cs
sub
inc
das
sbb
push
rcll
jno
imul
test
sub
mov
ss
jbe
xor
pop
in
dec
jle
add
enter
or
pop
loop
push
shr
sahf
lret
data16
sti
sbb
xor
fiadds
lcall
arpl
outsl
or
push
in
pop
outsb
mov
or
adc
mov
push
insb
scas
pusha
xchg
mov
mov
in
mov
jp
int3
stos
andb
add
jge
push
xorb
js
xlat
mov
je
xor
sub
inc
sub
jnp
out
je
dec
sbb
mov
jo,pn
push
imul
push
sbb
lret
xchg
mov
lcall
sub
cli
sbb
add
cwtl
movsl
fiadds
add
and
cs
iret
lahf
movsl
dec
xlat
sbb
mov
andb
in
aaa
mov
mov
and
push
ss
mov
jmp
fisubl
out
mov
pop
mov
in
daa
loope
sub
imul
inc
rcr
imul
mov
lods
je
xacquire
pop
cmp
sbb
and
mov
icebp
xlat
sub
pop
aam
dec
push
mov
aad
mov
mov
fwait
cmc
mov
outsl
into
mov
jns
pop
mov
mov
adc
adcb
ja
xor
testb
cmp
js
add
repz
adc
pop
outsl
sbb
pop
mov
ror
sub
sbb
adc
and
fadds
bound
lcall
stc
test
fs
std
sub
movsb
lret
cld
imul
jmp
jo
xor
add
mov
inc
ficoml
addr16
movsb
sbbl
lcall
xor
pop
icebp
jne
fisttpl
je
mov
push
leave
clts
jl
pop
stos
fisubl
mov
mov
shll
rorl
insl
das
scas
push
inc
or
pop
jecxz
mov
enter
insl
mov
pop
loopne
xor
lahf
imul
rorl
in
pop
nop
mov
sub
hlt
arpl
sarb
mov
adc
push
adc
cli
sub
bnd
sub
push
mov
mov
jns
dec
lret
dec
or
icebp
or
data16
inc
jecxz
mov
mov
subl
fistl
fwait
mull
loopne
push
pop
pusha
jl
dec
jns
pop
push
andb
cmp
dec
lea
pop
inc
inc
add
outsl
es
es
gs
sbb
jmp
dec
cmpsb
testb
dec
lds
ja
and
stc
dec
test
lcall
orl
push
pop
std
xchg
ficoms
inc
lds
sub
outsl
loope
int
cmp
daa
push
sti
arpl
enter
inc
cmp
sbb
sbb
gs
xchg
pop
cwtl
mov
sti
nopl
jecxz
addr16
xor
sub
mov
mov
pop
dec
sub
fadds
jnp
sub
mov
mov
fstl
jns
inc
jae
fistpl
inc
jle
ja
mov
enter
and
sbb
test
cli
jo
fmull
jg
adc
mov
mov
xor
dec
cwtl
les
insb
mov
jne
or
lock
popf
xchg
inc
addl
imul
mov
pop
cmp
and
jns
sbb
inc
arpl
mov
popl
add
dec
push
pop
fdivrs
sbb
add
test
xor
jno
movsl
mov
dec
fcmovb
push
and
sahf
mov
loope
sbb
jnp
pop
ret
mov
out
cmp
pop
jl
aaa
cmp
out
push
xor
addr16
cli
imul
adc
fbld
shll
cmp
pop
aaa
popf
pop
popf
daa
pop
dec
dec
pop
les
into
loopne
xchg
inc
fldt
nop
pop
insb
push
jns
mov
mov
loop
pop
inc
pop
filds
pop
xchg
pushf
xor
or
push
sub
cmp
cltd
sub
fs
xchg
xor
pop
cli
hlt
sub
push
hlt
pusha
test
sbb
and
push
hlt
mov
subb
testb
jo
xlat
adc
push
dec
into
jmp
ret
imul
ja
out
push
jp
push
inc
dec
lret
add
sarb
sahf
dec
nop
sbb
decl
jp
and
fcoml
js
sbb
push
dec
cmpb
fsubrl
sbbl
gs
push
xlat
xchg
add
push
sub
fs
pop
addr16
int3
leave
incl
pop
mov
or
inc
and
mov
jbe
mov
imull
fsts
jl
xchg
pop
mov
test
add
gs
fildl
xor
imul
sub
pop
mov
jmp
imul
mov
aaa
push
pop
shll
cwtl
das
pushf
jp
xlat
push
filds
inc
push
imul
ss
mov
mov
pusha
cltd
mov
xor
ror
push
popa
mov
outsb
add
or
jp
lods
mov
mov
scas
add
jae
insb
jb
pop
xchg
pop
inc
ljmp
nop
sub
mov
fnstenv
mov
xor
xor
mov
add
imul
xchg
cmp
ljmp
dec
pop
cmp
mov
popf
aad
cmp
cld
mov
xor
add
outsb
push
sahf
fists
jbe
mov
iret
mov
out
stc
clc
stc
loope
mov
push
std
aad
cmpsl
cmp
mov
pop
ret
and
or
icebp
cmp
pop
or
sub
pop
cli
or
mov
imul
movsb
mul
mov
insl
push
pushf
adc
clc
adc
add
push
mov
sbb
insb
in
xor
mov
dec
mov
ret
repnz
lock
cli
push
pop
sub
ds
push
or
imull
adc
xchg
xchg
iret
and
fs
insl
in
cmp
stc
fisttpl
or
sub
ficoms
dec
cld
test
pushf
pop
adc
inc
sub
icebp
push
sub
out
pop
mov
sub
orl
nop
fs
or
lret
mov
int
cltd
jb
mov
inc
int
push
shrl
xchg
xchg
pop
sub
xor
lcall
xor
adc
cli
mov
or
sub
push
jp
add
mov
or
sbb
or
and
nop
test
lret
xor
mov
stc
dec
fldenv
mov
mov
pop
in
pop
cmpsl
cmp
jge
jge
inc
xlat
cs
pop
xchg
jbe
adc
insl
subb
cmp
jl
mov
mov
loope
dec
jp
push
enter
mov
cmp
insl
es
aad
and
xchg
rorl
jo
add
push
stos
addr16
fxch
btc
inc
and
mov
shlb
inc
push
mov
push
test
inc
cmpl
lcall
push
outsb
loope
addr16
push
xchg
cmp
nop
push
int3
or
and
ret
xchg
jo
shll
jg
xchg
sbb
lea
repnz
xrelease
mov
fisubs
loop
pop
mov
pop
xor
xchg
shl
movsl
ljmp
mov
cli
push
sub
mov
inc
pop
popa
call
in
dec
sbb
mov
inc
cmp
decb
loopne
cld
sbb
mov
jp
aas
or
xor
andb
int3
imul
pop
xchg
cmp
add
lock
mov
dec
inc
testb
xchg
loop
hlt
mov
and
fistpl
ret
aam
int
mov
mov
fdivp
test
and
pop
jae
cmpsl
add
fstpt
sbb
mov
fwait
jle
cmp
sub
add
test
cmp
push
jmp
imul
ret
imul
and
pusha
fsts
sbbb
fldcw
popa
fs
stc
rorl
add
and
sub
ret
mov
push
push
cmp
or
add
pop
adc
and
enter
sub
add
inc
mov
repnz
inc
pop
and
dec
xor
inc
adc
sub
xchg
dec
mov
sbb
mov
push
xchg
aad
lcall
jmp
in
rcr
sbb
push
sub
sbb
push
cmpsl
inc
std
cmp
aas
jbe
xor
mov
dec
js
sahf
cmp
push
addr16
pop
or
in
sub
mov
jecxz
sbb
dec
lods
fsubs
dec
add
addb
dec
test
jmp
jae
fnstenv
push
adc
cli
imul
xor
test
pop
mov
jmp
sub
and
pop
cltd
cmpsb
add
test
aaa
inc
pop
ret
sahf
nop
ror
add
adc
mov
add
lcall
and
stc
dec
pop
jb
mov
or
sbb
ret
or
cli
dec
jle
mov
push
mov
or
sub
mov
sub
fistl
sbb
adc
lret
data16
xchg
xor
fadd
inc
jp
rol
cwtl
subl
fisttpl
add
sub
mov
cmpl
and
cli
fsubs
fiaddl
add
into
pop
or
xor
repnz
dec
adc
imul
cmpl
loope
push
in
enter
dec
xor
jae
fisttpl
mov
push
and
pop
push
sbb
dec
out
push
jns
jno
popa
xchg
outsl
and
xchg
push
jbe
repz
sarb
inc
or
pop
xor
xlat
jno
js
add
je
sub
sti
out
mov
sbb
test
and
xor
addr16
scas
in
call
hlt
mov
mov
movsl
popf
mov
lock
int3
repz
xor
sti
xor
bound
xchg
sbb
cmp
xchg
int
lods
orl
add
adc
mov
cld
inc
mov
jo
dec
mov
mov
test
sti
iret
loopne
push
cmp
faddl
insb
fsts
mov
adc
xchg
cmp
arpl
jb
mov
mov
subl
cs
in
push
mov
xchg
dec
jae
push
xor
sbb
xchg
test
stos
sub
add
arpl
aaa
lds
into
mov
xor
jg
pop
movsl
push
lahf
lea
xor
push
mov
ffreep
cld
jge
sub
lods
aad
mov
jb
cmp
push
adc
sub
mov
out
xchg
in
sbb
lea
loopne
xchg
aad
dec
pop
insl
mov
push
sbb
xchg
addb
lret
outsl
sub
xor
mov
or
std
jbe
int
mov
push
mov
std
loope
fiadds
fists
xorb
hlt
ja
cmp
push
xor
ret
pushf
sub
lret
xchg
dec
mov
arpl
ficomps
out
aad
nop
mov
scas
jne
jge
cmp
cmovno
mov
in
mov
jle
shrl
enter
add
cltd
push
xor
or
inc
push
sahf
dec
inc
push
movsl
repz
fadd
xlat
fsts
and
enter
ja
jae
mov
mov
xor
jmp
xor
test
aas
push
jecxz
xor
and
dec
sub
aam
dec
xchg
and
stos
push
aam
push
push
cmc
jge
pop
rorl
or
mov
int3
cli
jg
jns
cmp
bound
mov
orl
xchg
ret
xor
pop
popf
and
push
in
push
xlat
pop
adc
add
cltd
jns
das
out
xor
ja
cmp
or
sbb
add
xchg
aam
fwait
jns
xor
cltd
sbb
mov
call
mov
pop
inc
xlat
imul
cmp
push
cli
xor
mov
shrl
test
aad
and
fstps
and
dec
lret
out
test
nop
add
inc
jg
stos
sbb
lea
es
les
sub
in
pop
fldcw
mov
cmp
faddl
or
inc
out
push
jns
cmp
push
cmp
dec
ljmpw
sbb
fwait
mov
repz
cs
mov
push
xchg
mov
push
lahf
movsl
arpl
popf
fistl
shl
out
test
imul
dec
adc
pop
inc
in
stc
sbb
xor
cmp
push
dec
test
jecxz
xor
movnti
cmp
dec
pop
insb
add
sbb
lea
lock
jl
xorb
popf
bound
push
jne
stc
pusha
pop
popf
dec
addr16
int3
xor
mov
repz
adc
adc
rcrb
subl
push
mov
sub
ds
fucomi
xor
jge
jl
imul
add
data16
and
shr
jo
adcb
imul
js
addr16
shl
jp
push
mov
sbb
push
stc
popf
jl
fldenv
sub
jae
ret
jl
cmpsb
push
sbb
outsl
lahf
and
sbb
dec
insl
into
out
jg
test
icebp
loopne
sbb
and
or
adc
gs
repz
lahf
into
push
loopne
cmp
mov
fdivrl
push
ret
pop
sub
mov
mov
enter
xchg
xchg
inc
inc
stos
subb
pop
push
adc
mov
je
imul
push
stc
sub
fwait
mov
leave
fisttpl
bound
jle
pop
push
sbb
or
push
push
push
movsl
sub
sti
call
dec
jno
add
pop
in
aam
cmp
stc
or
test
sbb
std
or
xor
in
mov
mov
pop
orl
stc
inc
cmp
cmc
push
rorl
arpl
push
add
data16
sahf
setns
cmp
mov
adc
leave
lcall
xchg
mov
sbb
jmp
sbb
es
stos
push
jmp
xchg
mov
cmp
mov
mov
xor
xchg
test
fs
pop
aam
add
orl
cld
mov
popa
mov
inc
push
pop
popf
add
pop
test
orb
data16
cmp
pop
shlb
add
push
cmp
sti
sbb
mov
daa
push
out
cld
stos
ss
jle
fistpl
sub
pushf
jno
movsb
push
or
imul
in
data16
call
push
ljmp
mov
imul
out
xchg
mov
subl
xor
xor
mov
int3
jg
sbb
andl
sarl
movups
push
out
mov
loope
mov
aaa
jbe
aad
sub
inc
je
insb
in
stos
pop
and
adc
sbb
dec
pop
push
sub
dec
push
imul
fistpl
insb
jp
mov
aas
xchg
xor
jne
xchg
shlb
sub
lods
rcl
mov
idivl
out
int
repnz
cmp
jl
jno
sbb
xor
or
pop
into
cmp
fidivrs
sbb
mov
mov
add
imul
mov
mov
push
xor
adc
inc
ret
in
cmc
jecxz
jl
mov
lods
mov
pushf
dec
loop
dec
mov
or
and
jno
pop
test
pop
mov
nop
or
rorb
out
xor
mov
jae
dec
xchg
ret
cmp
ret
cltd
fsubrl
mov
lret
add
lods
hlt
jle
mov
nop
mov
fldenv
push
sbbb
imul
jmp
dec
add
sub
dec
cli
adc
lock
adc
dec
aad
imul
nop
iret
dec
dec
aas
and
sbb
xchg
cmp
jno
ds
xchg
and
add
repz
pushf
cmpsl
movsl
mov
sbb
hlt
or
jbe
addr16
je
xor
repz
inc
lret
test
cmpsl
std
jae
xor
cld
add
adc
lock
xchg
popf
xor
dec
push
icebp
inc
cmp
es
mov
mov
int
sbb
mov
out
pop
addr16
mov
cmp
sbb
cmp
fildl
aaa
jb
mov
sbbl
jg
ja
jae
outsl
stos
ja
sbb
jnp
testl
stc
sbb
insb
pushf
xor
loopne
repnz
or
shrl
sbb
mov
sbb
loopne
mov
jmp
and
dec
movsl
jmp
xor
insb
mov
sub
mov
xlat
xchg
rcr
add
hlt
jb
pop
xlat
push
popa
sbb
std
adc
fucomi
xor
and
into
addr16
mov
leave
cli
fcmovne
adc
shlb
cmpsb
push
inc
icebp
xlat
jge
cmpsb
dec
xchg
pop
xor
xchg
inc
xchg
fildll
cs
push
and
sahf
push
psubq
jb
xor
and
inc
xchg
ljmp
pop
xor
push
jne
cld
cwtl
in
xchg
push
movsl
xchg
cs
stc
enter
adc
sub
cmp
or
inc
rcr
inc
inc
and
inc
jne
jg
add
xchg
popf
repnz
jb
pop
sarl
aaa
popa
or
jnp
push
jbe
fstpt
mov
add
std
mov
xchg
mov
sti
stos
sub
adc
js
xor
mov
pop
loopne
mov
adc
mov
ret
xlat
shll
xor
push
xchg
mov
pop
pop
jne
and
jg
mov
rcrb
cmp
fidivs
fildl
int3
inc
insb
pop
mov
sub
testb
lea
or
cwtl
mov
daa
in
sub
movsl
in
mov
imul
mov
hlt
movb
add
pop
and
jl
fldenv
outsl
rcrl
imul
add
stos
test
jb
leave
lods
jno
ds
imul
shrb
jae
pop
xchg
stos
xchg
sti
cld
push
push
adc
jno
dec
aas
pop
cmpsl
mov
movsb
adc
lret
and
daa
or
xchg
push
hlt
lret
dec
mov
sub
out
push
imulb
test
shlb
cmpsl
test
cli
xchg
mov
push
icebp
mov
mov
jns
cld
jecxz
or
fwait
arpl
xchg
push
add
pop
fisubrl
or
lret
scas
or
or
push
aaa
push
loopne
lcall
popa
loopne
fwait
nop
mov
cmc
fcomps
pop
repz
xlat
push
imul
dec
cmp
jg
adcl
enter
or
stos
fstpt
or
int
test
mov
cld
mov
and
and
cmp
mov
cmp
pushf
or
lcall
xchg
mov
inc
sahf
fdivrl
das
scas
xlat
jnp
fldcw
sbb
cmpsb
xlat
mov
mov
pushf
sbbl
mov
xchg
mov
sahf
fwait
xor
jg
jp
out
mov
ds
mov
pop
outsl
dec
cmp
aaa
dec
ds
xlat
hlt
call
pop
dec
into
fbstp
insb
lea
and
jae
sub
into
imul
add
lahf
pop
dec
dec
dec
push
jmp
push
jae
xchg
jecxz
enter
push
inc
mov
push
xchg
ret
pop
adcl
push
mov
jg
push
add
stos
sbb
sbb
adcb
jae
inc
mov
mov
loop
lock
inc
push
pusha
lods
sub
inc
mov
or
outsl
cmp
mov
aas
ljmp
in
xchg
pop
mov
cmp
test
addl
mov
into
pop
pop
dec
dec
mov
inc
jl
in
leave
jb
test
xor
push
xor
inc
add
mov
fwait
jne
pop
dec
out
adc
scas
mov
push
in
orl
add
xlat
push
test
push
addr16
mov
mov
pop
mov
xor
fs
nop
sub
sub
pop
dec
pop
jge
das
cmp
lret
xor
jl
jbe
cmpsl
aad
jne
adc
inc
fdivl
dec
jmp
sub
repnz
adc
dec
xchg
push
fcmovne
mov
jbe
nop
sbb
xchg
fsts
xchg
adc
test
jge
outsl
pop
pop
xlat
shll
sbbl
fs
fxtract
ret
push
xor
fisttpll
jns
sbb
mov
fstpl
jp
mov
orl
js
and
js
or
jmp
imul
xchg
mov
les
jno
pop
rcrl
mov
out
scas
xor
adc
fbstp
movb
shrb
daa
sbb
mov
jno
xor
push
xchg
ret
imul
and
cwtl
and
cmp
xlat
jle
repnz
pop
std
pop
mov
push
add
sbb
push
insb
stos
and
aad
xchg
std
cltd
pop
cmpsb
nop
inc
icebp
rcrl
mov
imul
jbe
outsl
lcall
mov
inc
pop
sahf
jno
jmp
pop
imul
cmp
push
mov
adc
scas
lret
or
mov
lock
sub
sbb
rcrl
fnstenv
movsb
xor
subl
xchg
ret
inc
sub
xchg
sub
add
ja
int
test
and
cwtl
cmp
adc
push
push
test
mov
xchg
mov
insb
or
sub
stc
xor
test
ret
mov
mov
aad
test
sti
ret
subb
lret
fwait
add
and
sbb
xchg
fimull
xchg
js
inc
adc
insl
hlt
mov
and
mov
cs
arpl
stos
mov
int
sub
imul
jmp
mov
fistl
lret
add
fstpt
test
gs
mov
and
or
xor
pushl
jb
in
push
dec
pushl
pop
jae
pushf
push
mov
mov
sub
test
xlat
std
jp
dec
fdivs
fldcw
sbb
testl
das
inc
and
call
sbb
faddl
add
je
jmp
test
pop
sub
cli
jg
mov
mov
scas
movsl
fstps
inc
popf
jp
cli
aad
aam
inc
push
jecxz
imul
outsl
push
xor
mov
push
mov
dec
imul
push
stc
mov
sbb
mov
inc
cmp
ja
mov
or
mov
push
add
pop
jno
pop
lret
and
aam
push
xor
popa
pop
xor
ja
test
mov
add
mov
mov
pop
xor
test
in
mov
xor
sbb
pop
movsl
xchg
int3
jmp
push
pop
xchg
and
cmp
pop
or
stc
cmp
push
jns
and
dec
incb
jbe
jg
sub
vmovmskps
xchg
pushf
push
fsubrs
cmp
mov
xlat
push
dec
push
mov
sahf
cmp
jg
aaa
xlat
subl
or
jne
push
add
sub
mov
insl
sub
data16
xchg
xchg
xor
xchg
stos
xor
add
push
sub
adc
jg
mov
fnstenv
loop
aad
in
add
pop
xchg
cld
lahf
xchg
scas
mov
insl
add
dec
dec
sub
mov
into
cmp
add
stc
es
xorl
pop
xchg
fldt
pop
sub
sub
out
jae
insb
fnsave
and
test
mov
cmc
xor
xchg
pop
lcall
inc
pop
jns
xlat
cwtl
sub
jmp
xor
pop
dec
mov
add
test
and
mov
sbb
pop
lods
cmp
mov
ja
inc
push
std
jae
jae
and
lds
cmp
pushf
test
or
jle
inc
and
repz
add
lahf
addr16
aaa
stc
push
and
jg
cli
or
mov
sub
stos
out
pop
dec
dec
daa
dec
imul
sbb
mov
dec
in
pop
pop
scas
hlt
enter
jns
cmp
mov
lcall
je
xchg
xchg
lcall
clc
jge
jne
add
adc
outsb
mov
sub
cmpsl
push
outsl
or
js
xchg
push
pop
xchg
sub
bound
mov
pop
ja
fstps
mov
imul
pop
push
cwtl
lret
push
outsb
lcall
jb
ja
lret
push
xor
cmp
pop
sub
addr16
push
outsb
cmp
jl
insl
add
dec
mov
mov
ss
sub
call
and
jne
xlat
lea
in
faddl
call
jecxz
cmp
lahf
jnp
test
fstpt
sub
imul
mov
sbb
cs
push
push
iret
ret
cmpsb
test
mov
fistpl
adc
mov
sub
mov
fcmovnb
daa
dec
aaa
jg
aaa
addl
andl
inc
add
mov
adc
out
aam
cmp
iret
mov
flds
sbb
mov
idiv
cmp
jecxz
loop
jl
fcompl
in
mov
lds
stc
inc
pop
mov
fistl
into
lods
mov
lret
or
mov
jb
inc
pop
ret
sbb
adc
xor
xchg
ja
lea
xor
sbb
fwait
pop
adc
sbb
xlat
lret
dec
std
leave
xor
push
aam
jg
clc
pop
pop
mov
stos
pop
sub
ds
ret
mov
sub
fxch
xor
or
gs
sbbl
in
add
sub
lret
icebp
push
in
cli
pop
pop
sub
decb
inc
adcl
push
xorb
sbb
fwait
ds
sub
mov
jmp
test
add
mov
mov
xor
sbbl
cmp
mov
mov
push
icebp
and
pop
test
inc
mov
jae
test
lea
xchg
cmpsb
shll
scas
pop
loope
xchg
aad
xor
cltd
cmp
sub
mov
and
pushf
jbe
push
sub
and
test
or
dec
in
cmpsl
hlt
cmp
sub
fstpt
cltd
jg
xlat
test
adc
or
sbbb
popf
adc
icebp
xchg
pop
out
outsl
dec
xlat
bound
popa
pop
mov
ret
jmp
pop
push
fildl
add
sbbb
pop
fisubrl
mov
dec
push
xlat
cmp
fiadds
add
sbb
pop
loop
lret
les
insl
jl
flds
loopne
inc
andb
cmp
test
mov
fisttpl
addr16
lret
outsb
jl
xor
popa
in
std
aaa
call
push
std
xlat
jmp
jae
fs
ljmp
cmp
nop
adc
cmp
out
movaps
lods
pop
outsl
sbb
dec
xor
insb
fistpll
add
gs
cmpsb
inc
xchg
cmp
imul
shrb
xlat
pop
push
iret
sbb
adc
lret
lcall
movsl
cmp
clc
xlat
stos
mov
xchg
jae
mov
push
ja
inc
mov
adc
jnp
mov
xor
sahf
divl
mov
sarb
orb
fsubrl
sbb
lods
out
push
popf
outsl
dec
ret
stos
stos
je
jmp
pop
push
add
pushf
testl
lds
out
jbe
add
into
push
orb
das
dec
jns
out
lahf
pop
sahf
pop
xor
push
sbb
pop
lret
pop
push
sbb
fstpt
out
arpl
dec
popf
cmp
outsl
sub
inc
movsb
fimuls
mov
mov
and
outsl
push
add
pop
rorb
testl
aas
addr16
orb
cmp
sbb
mov
mov
and
xor
roll
orb
and
ljmp
movsl
xor
cmp
inc
int3
adc
cmp
imul
mov
sub
addr16
arpl
inc
or
add
inc
xchg
mov
je
jp
push
sbb
fisttpl
cld
fmull
cwtl
xor
or
mov
and
or
xor
rorl
cmc
dec
jns
lahf
mov
cmpb
stc
mov
dec
ret
nop
insb
and
es
sbb
or
sbb
push
push
xchg
stos
sti
xlat
cmp
les
xor
stc
mov
popl
and
sti
add
daa
xchg
sub
stc
out
xchg
add
jp
jecxz
cltd
xlat
xor
ds
or
adc
push
fsts
jmp
ss
xchg
loope
sbb
or
out
lahf
jp
dec
ja
scas
pop
fwait
adc
repnz
cmp
jno
stos
dec
jns
mov
inc
jp
cmp
fdivrp
xor
dec
mov
vpaddusb
loop
mov
jg
fdivp
cmp
sub
mov
or
loope
test
push
test
push
jae
sub
xchg
sub
xor
or
mov
je
mov
sub
jl
lods
jp
xlat
aas
lret
fcmovnb
jno
add
sbb
andb
push
xorb
addr16
adc
mov
xor
xchg
test
push
sub
cmp
adc
push
fadds
addr16
or
fcmovnb
sbbl
lret
push
mov
xchg
test
xlat
clc
inc
cli
jg
cld
inc
cwtl
xor
fstpt
push
out
pop
sbb
mov
cld
dec
mov
sti
mov
nop
sub
popf
dec
cmp
das
sti
jae
leave
outsb
cmpsl
push
jae
adc
jge
mov
mov
negl
cwtl
pop
jnp
and
jp
sub
scas
ss
jmp
daa
sti
sbb
loope
xor
or
fldt
cmp
out
and
fsubl
xor
or
shrb
jae
xor
jg
push
cli
test
mov
push
xlat
add
xchg
test
mov
lahf
sub
xchg
pusha
or
push
or
pop
mov
ficoml
out
mov
add
mov
xor
rol
or
push
dec
fistpl
repnz
and
repz
ss
xchg
ret
jno
pop
inc
mov
sbb
loope
cltd
dec
arpl
sub
jne
push
jb
cmp
aad
xchg
mov
adc
adc
mov
jp
inc
inc
ret
popf
mov
or
sbb
sub
loope
dec
adc
fadds
mov
sub
testb
pop
push
mov
imul
movsb
cmp
xor
outsl
jo
adcb
dec
fnstenv
insb
int
ja
xlat
in
aam
dec
std
mov
inc
popl
mov
push
or
out
lret
xchg
jmp
xor
cmp
cmc
pop
rcr
push
dec
aaa
mov
adc
adc
xorb
popa
call
xchg
jnp
and
in
pop
lcall
pop
ss
stc
xchg
xlat
mov
push
dec
movsb
fsubrs
fildl
sti
or
add
lods
mov
rorb
inc
dec
repnz
insb
pop
mov
sub
jae
imul
mov
rol
loop
hlt
cmpsb
jp
lret
rcrb
sbb
push
jbe
sbbl
pop
stos
inc
dec
shl
lock
sbb
jne
stc
fistpl
sbb
or
push
xlat
js
adc
shlb
call
pop
lock
push
pop
pop
bound
aaa
mov
sub
cmpsb
andb
cmp
loope
popl
xchg
dec
sub
and
lcall
push
rcll
xchg
cmc
lret
jno
fldcw
decb
sub
stc
jge
jnp
aad
pop
xchg
mov
xor
inc
dec
out
sub
xlat
push
and
iret
cmc
dec
lret
stos
push
xchg
push
sbb
mov
and
cwtl
add
ss
popa
mov
fnstenv
adcl
das
mov
push
aaa
xor
lahf
aad
xor
and
xlat
dec
in
outsl
dec
and
dec
idivb
mov
jno
mov
pop
mov
cld
xlat
add
clc
adc
lea
xchg
imul
aaa
xor
sbb
xchg
push
sub
aas
inc
rolb
into
lret
sub
test
popa
jno
mov
add
int3
xorb
aam
push
adc
pop
shll
str
jae
aas
popf
cmp
dec
mov
sbb
call
pop
cmp
jge
xor
les
inc
mov
jns
leave
pushw
jns
push
cmp
iret
mov
inc
mov
enter
ror
mov
mov
xor
mov
stos
pushf
inc
jnp
cmpsl
or
cwtl
dec
ss
sub
imul
sahf
ret
adc
pop
xor
test
stos
ret
dec
dec
add
mov
and
sbb
cmp
pusha
and
push
fistl
jne
lret
mov
roll
xor
and
xor
xchg
dec
and
shll
sub
mov
fstp
inc
mov
mov
sub
cmp
mov
or
daa
mov
imul
mov
pop
fisubl
sub
out
jb
sarb
mov
add
fsin
cmp
sbb
jl
icebp
dec
mov
mul
cmp
out
adc
and
ds
or
push
sub
ret
pop
ret
leave
xchg
jbe
ret
fwait
leave
call
enter
mov
push
fwait
loope
sub
inc
cld
scas
shr
jl
arpl
sahf
or
add
xchg
push
in
push
push
clc
mov
dec
stc
pop
jecxz
out
sti
in
test
push
into
jb
fldt
pop
and
mov
adcb
cmc
imul
cltd
push
adc
mov
lret
loop
sub
xchg
lcall
xor
add
jecxz
out
mov
cld
enter
jecxz
cmp
shll
and
fnstcw
push
dec
sbb
xchg
cmc
fimull
sub
xor
dec
jae
pop
movsl
push
mov
into
inc
mov
xor
ficomps
ss
out
and
stc
fdivrp
stos
movsl
jmp
dec
insb
push
mov
addl
dec
in
cmp
sbb
pop
cmp
jmp
sub
fwait
adc
fs
test
pop
lcall
jns
out
pop
lods
ds
inc
xchg
push
ret
adc
gs
sbb
push
test
imul
bound
mov
xorb
sti
inc
fsts
roll
jo
mov
add
fbld
mov
lret
xor
sbb
stc
pop
dec
sub
hlt
add
or
ss
xchg
and
mov
mov
repz
pop
int
jg
sti
cs
scas
stc
cmp
push
inc
cmp
xor
inc
imul
mov
or
sbb
out
push
sbb
cli
into
lds
push
clc
fdivrs
mov
addr16
je
pop
int
inc
stos
jmp
lds
cmp
and
fdivl
xlat
pop
rcrb
repz
xorl
lahf
lret
scas
and
data16
arpl
xlat
int3
sti
not
into
js
btsl
mov
mov
outsl
mov
test
and
pop
add
mov
xchg
icebp
dec
fcomi
movb
lea
dec
jecxz
xchg
test
cli
add
imul
dec
adc
add
inc
arpl
fbld
pop
mov
fldcw
jmp
lods
int
xlat
mov
or
insb
inc
fidivrs
adc
cmp
sbb
cld
cmp
push
idiv
ret
je
mov
or
sub
sub
sub
nop
fisubrs
aam
hlt
inc
xchg
add
sub
ds
stc
call
cmp
lahf
call
cmpsl
xchg
jmp
pushf
xchg
aad
mov
jns
mov
mov
push
push
imul
xor
jae
fstps
mov
jne
cmp
int
idivb
imul
pop
mov
subb
cmpsl
fcmovnu
or
xchg
mov
flds
jne
fbstp
dec
and
or
imul
dec
das
xlat
mov
ljmp
sbb
mov
mov
das
cltd
xor
testl
popa
push
dec
ds
or
scas
cmp
pop
and
pop
into
cli
inc
inc
lret
stc
or
cs
cmp
test
jle
cmpsb
pop
movsl
repz
xchg
cli
inc
add
jae
push
lret
and
sub
popl
sbb
add
xchg
mov
fsubrp
test
sbb
or
rcr
cmpsl
sbb
cmp
imul
inc
sar
pop
jmp
sub
flds
cmp
jmp
ds
fs
nop
and
push
mov
and
stos
icebp
push
dec
adc
dec
or
sub
fsts
and
shll
and
mov
push
mov
push
jp
out
mov
out
lret
sub
push
inc
lock
mov
lods
lock
and
fwait
adc
arpl
int
jge
sahf
test
pop
sbb
mov
fs
and
inc
sub
in
jb
lret
pop
rcll
add
fisubrl
daa
mov
int3
ss
cli
pop
mov
or
and
adc
scas
fsubrs
fninit
xchg
inc
enter
dec
stc
gs
sbb
or
jb
js
outsl
dec
mov
aam
add
sbb
scas
cmp
adc
stos
shlb
pop
cmp
inc
stc
sarl
sub
test
push
jecxz
es
jb
push
aam
and
jp
pop
mov
or
push
mov
leave
test
dec
cs
ds
dec
pop
pop
jno
push
mov
mov
enter
ret
mov
dec
jae
sub
push
pop
mov
shll
mov
push
mov
sbb
sbb
and
imul
js
cmp
sub
ds
stc
pop
sbb
dec
adc
pushf
out
xor
sbb
fs
push
xlat
rcll
xor
push
call
sbb
orl
lods
fldt
test
ljmp
add
mov
mov
sub
or
xchg
pop
and
mov
sbb
add
sahf
lds
dec
cwtl
out
mov
pop
xlat
jge
or
dec
dec
adc
sub
xchg
aaa
push
mov
push
cmp
and
add
je
jmp
outsl
xor
ja
sti
cs
fldt
ds
jbe
jg
sti
sbb
lods
jns
dec
imul
jo
mov
inc
add
mov
ret
push
pop
xchg
addr16
scas
test
dec
fcoml
push
push
cmpb
push
xor
xchg
jl
xlat
icebp
iret
adc
pop
lea
pop
fldt
stos
ret
fldenv
mov
push
or
push
enter
mov
sub
outsb
mov
sub
rorb
fwait
bound
cwtl
push
iret
or
sbbb
pop
clc
jo
cmp
iret
mov
inc
jae
pushf
and
test
and
pusha
stc
mov
dec
outsl
lret
jb
push
cmp
push
sub
xor
les
sbb
test
lods
mov
or
repz
test
xor
jne
lcall
cli
add
faddl
jp
insb
imul
push
pop
dec
int
dec
sbb
push
lock
rcll
xor
cmpsb
daa
icebp
push
cmp
and
jnp
dec
sbb
fcoml
jp
cli
flds
xor
and
fsubr
cs
js
cmp
xlat
push
aam
mov
jns
inc
insl
ja
mov
and
xchg
cs
shl
movsl
add
push
jae
js
adc
pop
test
xchg
push
jns
cli
sbb
mov
jno
stos
lcall
xchg
adc
jge
repnz
rcrb
cwtl
dec
shlb
repz
shlb
repnz
sub
jno
lea
pop
and
and
and
shll
pop
xchg
fistpl
test
test
or
inc
gs
push
js
lds
aad
sub
dec
sub
js
je
mov
out
data16
fdivrp
sbb
incb
jp
shl
fdivrl
je
cmp
xor
loop
sti
sbb
push
fwait
bound
pop
sbb
cmc
pop
rorb
lcall
sbb
ja
test
xchg
cmp
and
xor
fnsetpm(287
cwtl
mov
cli
lahf
sbb
cmp
cs
add
push
out
push
xor
incb
aaa
out
xorb
mov
lahf
shll
mov
out
cmpl
jl
jl
or
fldt
xlat
adc
xor
cmc
mov
mov
ret
adc
push
add
pushf
inc
cld
mov
inc
pop
xchg
in
cmp
adc
lahf
js
pop
int
ret
mov
lcall
fnstcw
pop
jp
add
pop
lea
cmp
xchg
int3
mov
test
pop
lret
pop
push
lods
xor
sub
pop
cmp
xlat
sti
icebp
jle
addr16
sbb
push
jae
mov
xchg
xor
dec
add
fnstenv
sbb
add
lcall
dec
and
scas
push
stc
xor
and
add
mov
cmp
or
mov
es
xchg
xor
into
cs
or
mov
pop
ljmp
jnp
jmp
nop
loop
push
add
jp
pushf
in
lret
lods
addr16
ret
push
and
mov
mov
movsl
push
lea
jl
scas
jne
dec
mov
sub
fs
test
ds
dec
in
push
jo
fldenv
sbb
iret
addr16
movsb
fwait
inc
addr16
jbe
jns
xchg
pop
filds
testb
shll
pop
std
and
inc
mov
insb
xchg
stos
frstor
je
in
pop
dec
or
pop
sub
dec
rcll
jg
mov
adcl
dec
cld
shll
jge
push
imul
out
stos
fdivrl
dec
stc
cmp
movsl
aad
xor
sub
cmc
push
dec
and
jmp
mov
loope
stos
test
add
rcrl
dec
jns
fxch
ret
fildl
nop
ja
xchg
aaa
inc
add
nop
inc
sbbb
jge
adc
adc
andl
outsl
test
popf
mov
mov
dec
adc
mov
or
mov
dec
push
lods
loop
adc
addl
cmp
mov
adc
stc
pop
sarb
out
pop
xlat
mov
aaa
mov
cli
or
out
mov
sub
lret
sahf
loope
xor
scas
inc
push
stc
mov
xchg
movsl
imul
xchg
fcoml
out
notl
sub
arpl
in
xchg
adc
repnz
sbb
repz
push
in
and
insl
dec
aaa
call
cltd
jno
jecxz
ljmp
in
jmp
pop
mov
mov
cwtl
xlat
psubb
shll
outsl
arpl
pushf
xor
jns
cmpb
shlb
xchg
add
sbb
mov
pusha
pop
push
adc
movsb
xchg
add
test
sub
xchg
sub
pop
xor
test
mov
or
mov
outsl
scas
movsl
mov
mov
sub
call
loope
fwait
jl
fnstenv
insl
aad
sbb
push
xchg
imul
sub
mov
sbb
repnz
sbb
dec
jmp
and
scas
fldt
push
stos
inc
add
sti
jne
js
pop
scas
mov
stc
mov
add
or
aaa
cli
cmpb
cmc
cwtl
popa
daa
and
int3
push
je
push
push
cmpsb
push
mov
dec
or
imul
cs
jno
fsincos
stos
daa
insb
repz
jg
mov
std
cmp
jb
mull
outsl
adc
fisubs
xlat
pop
inc
mov
xchg
adc
mov
xchg
mov
nop
aaa
cld
out
pop
bound
mov
and
jp
xchg
sarl
fxch
insl
jns
pushf
jl
cmpsl
mov
pop
pop
dec
xor
cld
loopne
lcall
xor
in
ds
xor
pop
push
into
dec
sub
jae
xor
xchg
ja
loope
add
mov
lods
xor
subl
fwait
aaa
imul
mov
nopl
mov
shrl
xchg
out
xlat
repz
push
shl
mov
fsubrp
jae
mov
jae
icebp
repz
repz
jmp
jbe
adc
hlt
sub
mov
mov
jne
into
insl
mov
xor
subb
adc
jns
xor
adc
cli
add
sti
cmp
push
xor
xchg
dec
loopne
push
loope
dec
or
sbb
je
nop
mov
test
cli
and
sbb
fwait
xor
bound
test
push
adc
sub
in
rorb
mov
lret
ss
js
sub
dec
loope
jge
ljmp
sbb
ficoms
or
push
jg
xlat
dec
imul
cmp
jno
je
or
cmpsb
pushf
fsubl
jmp
sub
push
paddusw
cmpsl
andb
xchg
sti
repz
ret
mov
jae
xor
xlat
shl
dec
aaa
imul
arpl
movsb
push
ja
ret
enter
inc
in
shlb
lea
and
outsl
mov
jne
mov
sbb
add
xchg
in
int
or
jecxz
andl
push
lods
ss
ret
int
out
and
enter
pop
jne
xchg
fidivs
pop
popf
xchg
pop
jns
sbb
lods
jne
lret
rcr
stos
push
xchg
repnz
xor
in
or
adc
push
and
inc
push
add
lds
mov
and
pushf
sbb
xor
mov
gs
pop
push
icebp
adcb
mov
push
sarl
inc
dec
ja
pop
sarl
jl
mov
and
jbe
mov
fistl
sub
fwait
out
and
mov
aas
lret
and
jmp
xlat
mov
add
dec
shl
cli
push
push
sub
xor
mov
dec
jae
xchg
mov
lret
push
sahf
push
nop
movb
scas
mov
data16
sub
mov
in
xchg
imul
and
in
orb
stos
fldenv
pop
and
mov
pop
or
sbb
and
push
subl
jns
pop
pushf
cmp
shlb
fidivs
cltd
int
notb
inc
iret
loope
xchg
out
lret
fbstp
jmp
jne
outsl
arpl
dec
mov
mov
fimull
scas
imul
pop
cmp
out
mov
fildl
out
popf
dec
pusha
mov
xlat
or
in
faddl
dec
xchg
or
xor
rcll
lcall
fnsave
cmp
jo
mov
ror
sbb
push
sbb
imul
pop
iret
mov
mov
int3
fists
xor
out
jb
lea
fdivr
inc
subb
push
stos
inc
testl
ja
jmp
bound
lea
test
mov
and
pop
in
test
inc
iret
stc
subb
xchg
popa
xor
or
push
scas
pop
call
jle
repz
xlat
testb
in
movsl
pop
sbb
into
iret
xor
push
das
add
xlat
sub
fcmovu
xor
aam
sub
js
sub
jae
aad
ja
fstps
add
stc
aam
pop
mov
dec
jns
mov
and
adc
pop
sub
xor
push
shlb
or
inc
repz
cld
xchg
xchg
add
mov
push
movsb
or
ss
sbb
or
inc
push
fisttpl
or
subb
jb
cmp
mov
das
mov
jmp
out
loope
push
sub
push
fistpl
hlt
mov
xor
rcl
or
cli
scas
fdivrs
mov
adc
fptan
mov
sbb
push
lret
xchg
xchg
mov
loopne
sub
add
dec
imul
xlat
mov
fldcw
iret
inc
pop
sub
out
lods
xlat
out
push
pop
addr16
pop
jecxz
push
push
icebp
pop
icebp
xchg
test
dec
sbb
stos
xlat
stos
les
stos
addb
sbb
stc
xor
inc
out
push
jae
stc
or
xor
cld
data16
sbb
push
mov
lods
imul
loope
pop
out
dec
or
dec
cs
je
jns
test
and
inc
inc
dec
mov
ljmp
mov
out
xlat
dec
les
stc
adc
out
pop
fsubrp
roll
int
in
xor
pop
loop
xchg
cmc
aaa
inc
push
add
add
or
xchg
pop
int
or
dec
xchg
mov
ret
cmp
mov
hlt
dec
mov
xor
push
sbb
inc
daa
push
mov
icebp
sbb
inc
add
pop
sbb
aam
int3
cmc
out
mov
enter
fwait
aam
shl
and
ljmp
cmp
sbb
pop
jp
mov
inc
les
fisubl
stos
dec
adc
movsb
dec
gs
ret
mov
imul
mov
std
repnz
mov
lea
inc
cmpsl
sbb
jae
push
stc
push
xor
pop
lods
adc
mov
adc
xchg
aam
imul
sub
push
inc
mov
loope
xchg
add
ficompl
add
imul
sti
push
mov
mov
mov
push
add
jg
fcmovnu
inc
test
dec
and
push
cli
mov
das
xchg
pop
fbstp
xor
xor
aam
pushf
mov
aas
std
in
and
mov
jg
jp
dec
pop
sub
xor
and
jge
push
out
or
dec
sbb
imul
cmp
ljmp
stos
lds
shll
out
negb
xor
and
push
push
jge
jg
mov
xchg
xchg
mov
push
or
arpl
inc
xchg
mov
or
shrb
push
xlat
cmp
pop
pop
mov
mov
mov
add
and
popf
push
xchg
dec
ja
inc
mov
cld
ret
jb
mov
mov
mov
lret
jge
mov
fs
mov
mov
shll
and
inc
ds
jl
imul
jb
pushf
lahf
je
sub
add
jb
push
arpl
scas
jge
push
push
scas
ja
or
mov
lahf
and
xor
add
aad
mov
cmp
sub
sub
pop
push
pop
cli
cmp
add
je
jecxz
sbb
push
xchg
call
sub
mov
push
imul
movsl
xchg
repz
ljmp
shlb
sti
jbe
cmp
and
xor
and
sub
pop
sub
iret
push
xchg
popw
push
sub
popa
pop
aas
sti
rorb
test
pop
subb
mov
push
cs
mov
arpl
test
xchg
sub
out
aam
cld
outsb
ss
jp
pop
mov
das
int3
dec
cmp
jge
cmp
pop
mov
ljmp
movsb
pop
jbe
mov
jp
or
push
lea
mov
lahf
pop
adc
add
js
lret
fwait
and
sub
ret
jno
or
sub
inc
fistps
pop
sbb
inc
fld
out
pop
pop
pop
cld
fsub
adc
pop
mov
aam
mov
cmc
sbb
mov
test
cmp
jne
in
addr16
mov
and
cmp
cmp
adc
sbb
add
lock
or
jmp
fmull
xor
aad
cmp
jge
pop
test
push
mov
pop
fwait
xor
mov
repz
mov
lret
dec
dec
mov
repz
cs
mov
out
mov
test
jbe
dec
inc
mov
inc
add
leave
ret
aam
gs
fistpl
icebp
es
fwait
into
mov
mov
xlat
hlt
scas
mov
test
ret
aad
xor
cmp
leave
lea
or
cltd
xor
xor
jb
hlt
imul
ret
fsts
mov
mov
mov
fstpl
pushf
ret
insl
xlat
lds
movsl
hlt
lods
sbb
mov
lret
cmpsl
test
push
jne
cli
push
imul
sub
dec
loop
stc
mov
add
xor
jmp
movsb
das
stc
rolb
jae
lret
jno
dec
mov
shll
xor
test
jl
fnstcw
sub
jb
xchg
in
ds
dec
dec
jnp
das
mov
int
inc
mov
fxch
mov
jns
push
push
mov
dec
je
jecxz
lea
mov
sub
iret
idivb
icebp
lret
and
add
jle
fidivl
jne,pn
lahf
mov
sbb
xchg
cli
mov
out
mov
aaa
push
test
adc
push
ja
imul
lret
adc
lods
push
push
xchg
les
push
pop
lahf
mov
mov
pushf
xchg
imulb
fwait
mov
xor
push
enter
jecxz
xlat
lcall
dec
adc
push
js
jge
or
sbb
xor
jp
mov
mov
imul
jmp
pop
jecxz
add
jle
mov
pop
sbb
fdivs
or
and
aas
xor
lock
mov
es
and
jno
jle
dec
mov
out
push
xor
fadd
jne
dec
aam
or
aaa
sub
inc
nop
pop
fimuls
xchg
out
psrlq
xor
push
cmp
sbb
jno
mov
sub
sahf
fwait
aas
xor
icebp
test
mov
orl
inc
ficomps
push
test
mov
push
jl
mov
sub
js
hlt
xor
pop
fildl
cmp
nop
xchg
xlat
imul
mov
xor
enter
jecxz
adc
mov
popf
fisubrs
push
adc
sub
mov
dec
hlt
fucomi
xor
xor
test
mov
add
test
dec
dec
jmp
in
mov
sbb
jl
sbb
mov
mov
rcrl
imul
xor
inc
inc
sbb
imul
into
fcmovnb
mov
dec
ret
lret
sbb
rcr
loopne
add
sbb
and
out
push
fisubrs
mov
pop
xlat
mov
mov
je
jno
xor
test
lcall
sub
mov
ljmp
or
jp
fsts
add
push
ja
jge
mov
mov
dec
and
shrb
call
mov
jmp
sbb
clc
std
arpl
addr16
push
arpl
push
shlb
xor
adc
mov
and
je
jo
dec
add
loope
cmp
fisttpl
fwait
es
pop
cmp
xlat
fdivrs
in
mov
insl
imul
xorb
xlat
xchg
and
jno
fldl
ljmp
jecxz
lcall
fstps
xchg
filds
fcomi
xlat
ret
xchg
int3
imul
out
in
aam
scas
and
adc
cwtl
cmp
aaa
call
xlat
lea
jae
fprem
imul
add
es
ljmp
or
mov
sub
mov
es
pop
ss
push
jge
push
xchg
dec
sub
fisubrl
mov
fcmovne
imul
sbb
jnp
jns
cmpsl
mov
test
fs
cmp
mov
push
dec
imul
sub
adc
mov
and
dec
jae
fld
repnz
xlat
jp
adc
shr
aam
andb
std
mov
insb
lret
mov
scas
mov
dec
and
pop
arpl
popl
out
sub
insl
adc
into
call
xor
fsts
sti
and
fwait
mov
mov
call
data16
adc
sar
dec
or
jae
cli
xor
sarb
sub
andl
cmp
jno
dec
add
xchg
push
inc
popa
imul
adc
out
push
dec
hlt
outsl
lret
mov
xor
adc
pop
cmpsl
and
xlat
repnz
lcall
jb
push
pop
mov
fstps
iret
repnz
push
fwait
push
or
dec
jge
hlt
sub
fwait
sbb
enter
xchg
jecxz
push
push
fidivs
pushf
rcrb
andl
sahf
lret
jae
das
push
jns
sub
or
mov
dec
cmp
stos
pop
imul
sub
add
in
fidivl
mov
cmp
popf
add
nop
xchg
stc
and
mov
jns
adc
test
jns
pop
mov
cmp
scas
sub
addr16
jo
fildl
inc
bnd
xchg
loopne
dec
mov
inc
popf
in
xor
add
enter
sbb
sbb
out
mov
or
data16
pop
std
dec
orl
dec
and
cmc
lcall
icebp
lds
pop
or
mov
mov
cld
add
flds
lret
fstpt
pop
mov
adc
push
adc
lret
lock
fildl
movsl
bound
imul
scas
outsl
mov
cli
adc
aad
pop
outsl
lods
orb
add
and
int3
mov
mov
jo
fistl
cmc
cmp
mov
sbb
adc
push
push
xor
stc
sarl
ja
scas
movsl
or
fisttpl
add
mov
outsl
mov
ljmp
enter
fcoms
pushf
mov
jl
jmp
pushf
jo
outsb
jmp
xor
sbb
xlat
ss
rcr
push
cmp
insl
sti
leave
xchg
hlt
mov
int3
repz
push
ret
push
enter
lock
test
jnp
int3
fsts
adc
cmp
ds
xlat
aaa
addr16
add
daa
int
or
push
fdivr
mov
imul
rclb
pushf
mov
xchg
jge
out
dec
add
inc
jb
mov
mov
xlat
clc
dec
movsb
das
js
fistpll
fldenv
pop
dec
adc
cmp
or
xor
or
je
fs
insb
incl
lret
add
test
shr
mov
jns
maskmovq
idivl
loopne
popf
push
fbld
cli
cld
or
or
inc
xor
popf
mov
imul
or
arpl
test
fistl
cld
inc
fucomi
mov
mov
xor
int3
add
clc
mov
adc
out
cmp
jp
jbe
mov
push
fisubl
or
mov
adcb
cmp
jnp
flds
sti
fcomps
pop
mov
xor
inc
sbb
pop
lock
iret
mov
cmp
mov
or
pop
push
mulb
push
sbb
mov
fneni(8087
incl
ret
xor
cmpsb
sbbb
in
push
xchg
mov
stos
mov
in
cltd
mov
iret
jno
xor
cmp
mov
jne
in
fs
inc
add
shll
sub
adcb
fldcw
push
leave
jg
xor
xlat
or
mov
mov
cmp
push
jmp
xchg
lcall
data16
add
orl
dec
cmp
test
push
leave
iret
xchg
mov
xor
fstpt
fs
mov
push
mov
aad
cmp
mov
orb
popf
xor
jge
icebp
xchg
ljmp
sub
icebp
mov
add
or
xor
sub
xchg
inc
fucomip
call
inc
shl
lcall
mov
outsl
enter
pop
push
cltd
xlat
xchg
mov
cmp
repz
cmp
dec
cltd
aad
xchg
repz
imul
push
mov
mov
insb
sub
xor
cwtl
jae
fsubrl
dec
ret
push
push
and
or
jae
add
sub
pop
test
mov
pop
sub
fisttpl
dec
xor
jno
fisubs
cli
int
jle
jb
lahf
sub
inc
jno
into
jnp
fsts
xchg
std
xchg
stos
sbb
xor
dec
mov
cmp
shrl
push
xor
push
imul
cltd
sbb
fwait
sub
push
iret
mov
shrl
or
hlt
push
dec
pop
jmp
adc
mov
inc
lock
sbb
xlat
int
or
mov
xlat
dec
mov
insb
jp
ret
stos
fnstcw
sub
xchg
xchg
js
aad
or
add
fs
xor
in
sbb
mov
and
inc
xor
mov
cld
push
aam
fdivr
mov
scas
push
adc
daa
aaa
mov
jnp
aas
mov
test
sbb
clc
pop
mov
stos
fiadds
enter
test
pop
pusha
push
or
icebp
mov
and
pop
mov
and
mov
je
cmp
out
xchg
push
out
out
sbb
xchg
ljmp
fsubs
xchg
pop
icebp
pop
pushf
psubq
or
cld
outsb
mov
xor
push
cmp
cmp
aam
pop
sbb
int
and
fdivrs
and
and
insb
mov
add
lds
sub
jb
xchg
popf
loope
jg
repnz
fists
fildl
dec
sub
imul
pop
ret
je
std
sbb
lcall
adc
push
pop
and
mov
mov
push
enter
sub
jp
add
into
push
dec
jecxz
jae
out
cli
fistl
insb
cmpsb
imul
mov
xchg
mov
or
dec
adc
andb
mov
test
push
mov
add
mov
mov
mov
std
or
insb
push
cmp
mov
push
test
pusha
pop
or
and
push
add
pop
push
pusha
xor
outsl
mov
mov
das
xchg
fnsave
inc
dec
cmp
out
pop
sub
jg
int3
cli
pop
insb
dec
mov
xor
clc
cmp
inc
ret
test
lock
pop
xchg
and
ret
dec
shr
and
out
aad
xor
push
ficoms
lds
jns
mov
xor
inc
cmp
sub
jo
in
cmp
add
test
bound
cmp
in
and
cmp
or
jl
jbe
sub
je
push
cmp
xlat
cltd
imul
xor
xor
icebp
lret
pop
addr16
test
ficomps
fistps
sub
leave
or
dec
add
push
jne
loope
jne
add
pop
ja
aam
imul
and
sbb
xor
and
lret
aas
scas
push
push
mov
mov
push
push
pop
dec
arpl
push
fdivr
add
pop
ss
test
or
sub
mov
pop
push
jmp
adc
jne
movsb
lcall
jne
mov
movsl
and
sti
insb
inc
xor
cs
stos
cmpsl
into
xchg
imul
adc
xlat
ret
nop
and
mov
jns
flds
arpl
int3
push
adc
int3
sub
ds
inc
pop
out
sub
pop
test
out
dec
cmp
dec
mov
mov
mov
mov
adc
mov
adc
out
add
xchg
fidivs
pop
add
das
xor
cmp
xlat
dec
mov
lods
js
imul
adc
stc
repz
jg
sbb
push
inc
sub
push
in
fisubrl
push
and
dec
xor
push
shll
in
xlat
retw
xor
jo
jno
cmp
mov
sub
xlat
imul
stc
jae
out
sub
and
jno
addr16
negb
pop
lods
xchg
popf
je
and
ds
flds
mov
cmpsb
xchg
inc
push
mov
hlt
sub
hlt
xor
cmp
outsb
js
orb
stos
mov
mov
mov
cmp
popf
call
mov
pop
lret
subb
jg
sub
fimuls
shlb
in
enter
and
stos
fistpl
push
js
push
rclb
sub
sbb
mov
dec
cs
sbb
and
arpl
addr16
addr16
cmpsb
lcall
cmpsb
hlt
int3
insl
adc
add
mov
or
into
aas
popf
xor
mov
cmc
outsl
add
dec
or
aaa
out
ret
fldt
ficomps
push
xor
inc
inc
mov
mov
outsb
sbb
jne
push
cmp
pop
fnstenv
sub
dec
mov
xor
mov
mov
ja
pushf
jecxz
cli
jne
lock
cmp
or
sbb
add
std
cld
mov
scas
in
or
outsb
stos
fwait
es
movb
cmp
fstpt
lcall
inc
rcl
mov
dec
imul
cli
adc
cs
cltd
pop
nop
pop
inc
jp
bound
and
sarl
addr16
xchg
push
xor
pop
adc
push
ds
sbb
xchg
push
dec
outsl
and
mov
cmp
fsts
sbb
cmp
mov
xor
pop
xchg
jge
ret
push
ret
xchg
add
mov
cmc
repnz
cli
fwait
xchg
ret
pushf
xchg
into
xorb
and
push
lds
sub
dec
xchg
imul
push
mov
lcall
lahf
adc
sahf
shll
jge
add
mov
andl
idiv
pop
fistpl
or
and
xchg
sbb
jbe
mov
addb
jns
fstpt
int
jb
mov
xor
fimuls
mov
jns
aad
mov
mov
jp
xchg
mov
test
ss
sarl
pop
sbb
pushf
fwait
sub
cmpsb
ja
and
cmp
clc
jo
into
movl
imul
fstpt
push
daa
xor
xchg
mov
xorb
adc
mov
outsl
xchg
mov
flds
pop
and
push
in
repz
push
push
cmc
jno
adc
ljmp
mov
out
mov
pop
stos
push
cmp
or
push
in
fstl
pop
cmp
cmpsl
loope
push
xlat
nop
lea
jns
sub
data16
fstpl
int3
lea
pop
ss
stos
mov
cmpsb
xlat
std
sub
pop
pop
xor
sub
stos
stc
rorl
stos
cmp
or
imulb
rcrb
fldenv
adc
add
inc
sbb
lea
hlt
fnstenv
cmp
inc
cld
stc
sbb
out
adc
jno
push
cmpsb
sbb
clc
jge
fwait
dec
jge
rolb
aaa
and
ss
cmp
inc
test
aam
leave
add
push
ret
fcmovnb
lea
and
cmpsb
ja
pop
enter
or
xchg
cmp
testb
dec
cmp
jno
xchg
jl,pt
pop
or
sbb
push
pop
in
pop
subb
cmp
or
test
dec
adc
pop
fsubs
imul
xchg
xor
xor
mov
sub
or
sbb
cmc
and
jl
stos
pushf
cmp
or
push
ror
fcmovnb
cmp
push
jne
jl
fldcw
jecxz
adc
iret
add
and
push
add
decb
xorb
pushf
cli
lret
inc
jp
fistl
push
in
dec
stos
mov
xchg
xchg
mov
das
pop
push
mov
pop
aad
shl
jmp
jecxz
xlat
das
push
adc
inc
push
xlat
push
cmp
enter
or
xorl
movsl
dec
xlat
jmp
dec
sbbl
inc
and
pusha
nop
xor
mov
push
add
repz
movsb
add
shll
add
test
jne
cmc
mov
popl
mov
jae
je
js
jge
fwait
xchg
gs
adc
jmp
xor
and
jecxz
cs
adc
fdivrp
in
pop
xchg
fdivrp
push
pop
and
lcall
dec
dec
shll
cmc
arpl
mov
sub
daa
lea
push
jcxz
shrb
sub
das
imul
pop
sub
xchg
add
nop
sub
jb
sbb
xor
mov
cli
cmp
mov
sbb
dec
jmp
add
lret
mull
and
fsubrl
aad
cmp
outsl
xchg
or
push
mov
jae
cmp
popf
stos
lods
icebp
mov
pop
inc
jp
jae
add
jp
mov
sbb
jmp
bound
pop
xchg
adc
xchg
xor
push
aaa
mov
dec
jo
xlat
loopne
arpl
jmp
jnp
cmp
pop
ds
push
sub
mov
pop
shl
adc
sub
loop
stos
loope
movsb
jp
push
push
sbb
fs
add
aaa
pushf
lahf
dec
cmp
push
packuswb
or
or
cli
inc
pop
cmp
bound
sub
and
sbb
inc
dec
hlt
xor
daa
xchg
mov
pop
dec
push
lods
enter
fisttpl
cmpsl
dec
xor
mov
hlt
mov
popf
push
test
push
das
pop
mov
xchg
and
imul
imul
xor
or
xchg
repnz
test
movsb
xchg
mov
das
lcall
jno
jp
loop
ja
dec
push
imul
ja
ss
or
jae
mov
jae
push
movsl
xchg
dec
int3
lahf
jnp
je
addps
and
xor
rcr
mov
sub
mov
int3
jecxz
sbb
and
cmp
sbb
cmp
xchg
pusha
push
aas
jbe
xor
pop
dec
inc
inc
mov
pushf
cmp
je
les
mov
pop
fnstcw
lcall
je
data16
repnz
sbb
mov
lea
call
outsl
fidivrs
push
gs
or
push
adc
mov
in
dec
add
js
sti
inc
mov
mov
int3
xchg
pop
outsl
jmp
fidivs
das
dec
shlb
sbb
cmp
shll
sbb
dec
pop
mov
push
push
sbb
push
mov
ja
rclb
shrb
mov
div
scas
fadds
xchg
dec
cmp
or
ss
dec
xchg
sbb
bound
jmp
ja
mov
pop
into
inc
sub
dec
dec
sub
sbb
les
cli
mov
sub
xchg
sub
pusha
push
cwtl
mov
dec
inc
add
and
xor
jns
ljmp
sbb
and
mov
or
adc
sub
mov
pop
inc
push
sbb
add
enter
rorl
and
std
push
xor
nop
sarb
repnz
push
lret
stc
mov
mov
push
aad
jle
icebp
mov
xchg
sub
addb
sub
mov
and
cvtps2pi
sbb
and
aaa
rol
outsl
stos
mov
xchg
dec
fcmovnb
mov
mov
mov
pop
mov
imul
sahf
cmp
jae
inc
loopne
pop
daa
leave
or
jl
mov
jnp
lret
jbe
sahf
push
dec
or
push
xchg
jae
lret
outsl
rcll
in
rorb
push
aas
mov
add
and
flds
or
jmp
xor
imul
mov
jl
ljmp
les
add
xlat
outsl
dec
fwait
repnz
dec
out
out
or
dec
xor
sbb
push
and
daa
or
aas
and
jnp
cmp
jl
add
push
pop
out
push
xchg
nop
add
lret
shrb
fistpl
xor
jecxz
mov
cs
dec
mov
clc
out
rclb
das
aaa
inc
mov
adc
adc
pushf
fistl
sub
ret
add
mov
daa
mov
mov
or
jae
or
xor
add
and
sbb
addr16
xchg
js
and
lret
fidivl
fdiv
cmp
orb
xor
cmp
jno
dec
xchg
arpl
js
mov
and
insb
mov
ds
std
dec
push
and
mov
jl
ret
xchg
es
cld
loopne
or
call
fadds
je
pop
sub
mov
push
xchg
ss
jle
gs
fstps
push
test
pop
pop
add
icebp
push
rcrb
push
sbb
push
mov
dec
icebp
push
lods
hlt
negl
push
dec
jae
jno
mov
imul
lahf
dec
in
ds
or
out
shrl
aas
outsl
push
mov
fcmovnbe
movsl
movsl
fdivrl
lret
sub
xchg
cmp
add
xor
push
sub
fidivrs
sbb
sub
pop
sbb
shlb
sub
mov
push
lea
lds
outsb
test
cld
fidivl
test
and
mov
jns
stc
xorb
clc
in
adc
or
scas
cmp
je
cwtl
push
dec
and
sub
mov
push
es
xchg
shrb
pop
mov
xchg
and
or
aam
imul
cmp
xlat
push
fsubrl
mov
mov
std
out
mov
cltd
jne
fcmovu
test
in
xchg
inc
imul
cmp
xlat
push
xchg
test
sub
rcr
out
xchg
sti
imul
lods
lds
hlt
js
movsl
add
jns
adc
arpl
jle
push
mov
mov
cmp
jp
mov
xchg
adc
outsl
sub
cmc
pop
popa
sbb
cmp
or
push
jbe
nop
add
aas
xchg
or
xchg
dec
add
mov
xchg
push
push
mov
jl
jge
imul
imul
movb
movsl
xorl
in
or
mov
mov
xor
adc
dec
cli
fsubrs
les
cli
cmc
roll
out
outsl
pop
loope
mov
stos
stos
sub
xchg
cmp
and
cmp
cmp
fstpt
daa
dec
pop
or
push
adc
aad
xchg
dec
stc
daa
inc
mov
nop
mov
jo
jns
in
add
dec
rcl
sbb
divb
pop
mov
adc
push
fistl
pmaxub
out
push
mov
add
pop
sbb
pop
into
iret
repnz
mov
push
xchg
dec
sub
xor
jnp
out
lcall
cmp
pushf
dec
fisubrs
xchg
das
cmp
cmp
mov
lods
jnp
fnstenv
add
dec
dec
jl
mov
pop
aaa
mov
std
insb
cmpsl
and
jl
xchg
adc
cmp
adc
jge
bound
jne
popf
cmpb
jo
fwait
ds
cmp
cmp
adc
or
add
push
jns
push
adc
pop
movsb
inc
mov
cmp
cmp
xor
std
rolb
loopne
lea
dec
sbbl
sub
add
pushf
ljmp
cmp
xchg
xor
lahf
stos
jp
movsb
fildl
sbb
cli
test
push
and
scas
in
imul
test
movsb
das
pop
cmpl
mov
or
xor
or
sbbl
addb
add
pop
xchg
and
dec
sub
cmp
popa
pop
mov
xor
jle
add
lds
mov
out
jecxz
inc
lret
adc
mov
in
into
mov
mov
inc
pop
insb
les
gs
mov
pop
fbld
push
popf
leave
mov
popf
mov
cs
fwait
pop
xor
and
and
xlat
fisubrs
sbb
and
sbb
in
in
pop
pop
xor
gs
pop
das
je
fstpt
push
pop
dec
push
push
jmp
movsb
push
cmp
call
arpl
jmp
push
dec
stos
dec
in
pop
push
ret
imul
into
notb
imul
sub
fs
movsb
outsl
push
mov
xor
inc
push
mov
cmp
fcmovbe
push
mov
push
scas
wrmsr
stos
fs
and
ja
xchg
xor
or
and
inc
dec
dec
push
stc
lds
cmp
cmp
pop
fwait
rcrb
data16
push
push
movsb
sub
dec
call
or
neg
inc
dec
shl
fsubrs
in
orl
sub
cltd
clc
or
cli
mov
ds
sbb
dec
fnsave
mov
stos
sub
fld
js
and
ret
ds
xchg
adc
scas
adcl
push
dec
rcrl
cwtl
data16
cmp
sub
iret
out
or
mov
inc
clc
jecxz
ret
sbb
mov
pushf
add
cmp
push
mov
add
fldt
xchg
lret
or
iret
xor
cmp
mov
jno
pop
addl
lahf
mov
and
call
stc
xor
lods
and
aaa
jno
cltd
into
xchg
popf
cmovo
inc
inc
shlb
xchg
sahf
imul
xlat
xchg
ret
scas
std
scas
adc
mov
fistl
lods
lock
int
fisttpl
clc
push
out
mov
mov
addr16
fcomi
jns
inc
fistpll
fxch
popa
mov
fistl
aaa
sbb
add
mov
cltd
inc
jbe
mov
shrb
fldenv
loop
pop
mov
loope
push
adc
mov
pop
bound
mov
stos
mov
xchg
mov
and
push
loop
stos
mov
dec
daa
scas
sub
mov
fs
xor
sub
fsubp
daa
into
dec
jae
adc
add
pop
xchg
sub
jp
fnstsw
mov
mov
fsubs
and
adc
testl
inc
scas
jb
mov
add
cs
insb
mov
sti
pop
pusha
data16
int3
xchg
add
mov
push
cmp
loop
cs
sarl
pushf
ret
lahf
xor
enter
movsl
cmp
xorl
xor
xchg
mov
out
aam
jbe
cld
insl
rorb
fisubs
add
mov
push
insl
iret
sbb
rorl
or
lahf
and
inc
inc
outsl
pop
jno
test
bound
fsts
xor
cmpsb
insb
flds
jne
cltd
and
cwtl
add
mov
sahf
ficoms
mov
jnp
fldenv
xor
and
lret
pop
lret
xor
ficoml
bound
sbb
test
xchg
jle
dec
negl
adc
jb
cmp
clc
pop
mov
mov
js
xorl
daa
ss
fists
daa
mov
sub
inc
addl
andb
cmp
dec
dec
jnp
mov
ret
mov
aaa
fcompl
push
jno
push
xor
es
std
push
fndisi(8087
xchg
cmp
bound
or
cmc
xchg
leave
xchg
ss
dec
pop
xor
iret
out
fisubrl
inc
pop
push
insl
push
mov
push
roll
cmp
mov
sbb
pushf
stos
sbb
lcall
testl
test
and
ljmp
push
xchg
movsl
xor
sub
imul
pop
pop
jp
pop
jno
test
push
xor
fsubs
inc
add
push
xor
lock
xchg
sub
mov
cmp
test
outsb
mov
mov
push
or
push
out
mov
sub
pop
add
sbb
mov
jo
insb
ljmp
xchg
xchg
or
pop
jns
push
das
sub
movsb
mov
dec
je
imul
and
lret
inc
jecxz
mov
sub
pop
add
and
outsl
xlat
fnstsw
pushf
fidivrs
mov
mov
add
sub
xorl
cmp
ljmp
cmp
sbb
ljmp
xor
inc
jp
xor
push
dec
xor
sub
inc
cmp
pop
fwait
dec
jns
fld
jle
or
jo
lea
es
andl
xor
stos
jns
xchg
dec
push
dec
add
std
mov
popa
xor
cmp
xor
sarb
xor
insl
mov
xchg
jle
test
enter
mov
lret
dec
inc
js
xor
jge
rorb
xorb
test
insb
xor
dec
lret
nop
xor
push
das
mov
sbb
decl
push
test
roll
inc
mov
js
jnp
mov
movsb
cmp
push
xlat
sbb
mov
mov
cmp
sub
and
std
sub
add
sub
xor
lock
int
xchg
push
pop
cmp
mov
ljmp
imul
stos
outsl
notl
in
shlb
push
mov
dec
gs
or
mov
cmp
sub
xlat
mov
xchg
movsl
mov
xlat
sbb
cmp
push
pop
lods
leave
push
mov
xorb
and
mov
btr
fdivrp
push
aad
inc
movsb
dec
adc
test
cmp
div
stc
sbb
daa
jns
leave
xchg
push
test
stc
popl
xlat
pop
movsl
or
cmp
jbe
add
jl
dec
enter
lods
mov
cmp
cmc
ret
inc
lcall
in
outsb
pop
out
divb
xchg
jmp
dec
xchg
mov
sub
xlat
bound
add
insb
mov
pop
daa
xlat
int
ljmp
fs
int3
xor
jmp
movsl
ficoml
add
aaa
inc
lcall
int3
pop
pop
and
insb
cli
add
fstpt
rcll
push
jge
hlt
push
push
xlat
js
movsb
rorb
inc
sti
sbb
pop
xor
xor
cmc
xchg
rorl
dec
lea
or
cmp
shll
or
push
or
sbb
xor
ja
add
test
or
popl
inc
scas
movb
sbb
inc
xor
jp
stc
xchg
subb
stos
enter
jnp
xlat
outsb
xchg
sets
pop
cmp
dec
ss
insb
insl
shlb
cld
cld
push
in
ds
mov
xlat
dec
jno
and
neg
sub
rcl
js
shlb
xchg
pop
jae
inc
ds
andb
add
sub
aas
jg
testl
pop
sub
push
stc
pop
test
adc
push
adc
push
cmp
inc
cli
in
nop
adcl
cmp
icebp
jo
fstps
jp
and
adc
popf
fs
fisubs
pop
xor
push
xlat
sbb
push
sbb
popa
iret
test
ret
xor
and
stos
push
pop
or
lret
jmp
inc
cmp
pop
leave
push
fnstenv
fcompl
pop
xlat
sub
jbe
pop
lahf
adc
movsl
add
cltd
xor
xor
mov
aas
xor
hlt
addr16
xor
test
outsb
cmp
inc
in
jle
arpl
cmpsl
jecxz
or
stos
add
imul
xor
ret
rcrb
test
mov
sbb
and
sahf
mov
jo
mov
cmc
add
cli
add
mov
pop
addr16
cwtl
xlat
adc
mov
ret
insb
inc
mov
insl
push
cltd
lret
adc
sarb
popf
add
cmc
or
orb
or
cmp
xor
in
pop
sub
mov
jae
in
cwtl
mov
dec
ja
and
in
jae
rorb
inc
int3
cmc
cmp
push
inc
push
sbb
inc
xchg
mov
bound
dec
ja
repz
mov
sub
stos
add
iret
pop
iret
xor
imul
negb
pop
mov
jmp
or
cmc
add
inc
sbb
movsl
in
leave
mov
adc
sti
shr
xor
xchg
mov
movsl
int
add
adc
pushf
pop
mov
movl
mov
xchg
cmp
pop
stc
stos
je
sbb
jmp
push
les
xchg
fstpt
mov
xchg
pop
push
pand
cwtl
sbb
or
mov
xchg
or
push
es
jns
mov
ss
ja
fnsave
mov
sbb
pop
sbb
sub
xchg
pop
sahf
mov
sub
mov
imul
and
or
test
jge
mov
xor
in
test
adc
ljmp
mov
xor
lahf
cltd
cmp
dec
outsb
imul
jae
lcall
fistl
or
ja
pop
sub
fsubs
mov
pushf
orl
shrb
cmp
adc
adc
push
xor
ret
cli
xchg
push
cmp
mov
pop
test
pop
out
pop
imul
rolb
fld
jno
jp
fstps
stc
and
add
cs
fdivl
lahf
and
out
pop
inc
fldenv
leave
cli
movsb
mov
xlat
mov
cwtl
push
push
cli
xor
ljmp
lahf
adc
mov
into
aam
push
iret
cwtl
and
clc
fucomi
mov
push
add
fnstcw
lret
mov
and
lods
fprem
int3
movsb
xor
daa
and
xor
mov
mov
punpcklbw
popa
or
pop
sub
mov
add
repnz
xchg
imul
shr
stos
sti
pop
out
std
and
or
push
pop
push
inc
pop
cs
cmc
testw
out
test
mov
popa
ss
ja
lock
shlb
addr16
sub
out
add
pusha
and
hlt
lea
fsts
xchg
idivl
je
jae
fstps
push
mull
clc
mov
fsubl
adc
fscale
gs
mov
mov
xchg
and
xor
fldl
pop
cmp
pop
push
cmpsl
dec
jle
aad
mov
or
outsl
arpl
jo
ret
dec
test
pop
jp
add
dec
call
ja
inc
loop
adc
jno
leave
jb
cmp
lret
das
mov
sbb
and
jae
out
jns
fldenv
stos
mov
sahf
imul
and
dec
sub
jle
idivb
loopne
ljmp
lock
das
pop
and
xor
ret
pushf
dec
sbb
cmp
imul
fwait
and
jmp
fldcw
xor
pop
addr16
outsl
pop
xor
clc
imul
cli
xchg
jo
call
sarl
xlat
adc
fisubrl
xor
stos
lods
lods
xchg
lcall
inc
int3
ja
sbb
push
and
leave
push
pop
movntq
mov
loopne
jae
xlat
jns
pop
stos
cltd
dec
test
or
out
mov
push
sbb
inc
imul
ljmp
ficomps
aaa
sub
cmp
movsl
cmp
nop
mov
push
pop
fmuls
mov
sbb
pop
cmp
push
imul
pop
cld
add
mov
ds
outsb
shrb
inc
rcr
shl
fisubrl
cmc
inc
stc
enter
mov
xchg
mov
andl
pop
xchg
jmp
dec
jmp
xchg
test
mov
testl
xor
and
repnz
lahf
dec
nop
push
sbb
movsl
and
jg
push
lods
mov
push
xchg
repnz
push
mov
dec
cmc
and
pop
or
cmp
xor
leave
cmp
mov
dec
push
mov
sub
add
fmull
lods
mov
imul
xor
jmp
adc
add
lret
jo
and
push
cld
inc
dec
xor
iret
mov
dec
and
sub
or
xlat
lcall
jecxz
pop
pop
rolb
push
imul
push
jl
adc
out
inc
add
mov
push
negb
xchg
nop
insb
and
sarb
cli
cltd
ss
movsb
scas
push
fidivrs
cmpsb
push
or
or
lret
pop
rcl
loop
loop
popa
sub
arpl
mov
xor
adc
add
jb
sbb
bndldx
fdivs
pop
ficoml
out
inc
push
mov
mov
fimull
or
sub
and
inc
mov
insb
sti
fistl
adc
add
sahf
pushf
shlb
repz
push
std
repz
jl
push
sub
pop
lock
push
pop
int3
cmp
pop
sbb
sub
sub
int
in
pop
jno
mov
rcrl
je
dec
cmp
call
and
sub
inc
jae
mov
fidivl
jl
mov
and
xor
fcomps
stos
dec
xchg
sbb
cmc
add
add
bound
jle
cld
jns
dec
xchg
scas
push
mov
xor
arpl
outsl
push
ds
stc
fldcw
add
cmp
jnp
imul
pop
inc
mov
cmpsl
dec
pop
cmp
sbb
test
sbb
adc
jl
cmp
pop
iret
push
add
cmp
inc
sbbl
jb
enter
cwtl
adc
pop
xor
pop
negb
push
inc
ss
lcall
inc
aad
add
imul
cs
popl
lahf
popa
out
xchg
jl
adc
fisttpl
xchg
pop
mov
out
add
js
lods
mov
imul
rcrb
or
and
call
cs
pop
scas
repz
iret
test
stos
shrb
pop
jno
or
xlat
and
arpl
bound
jmp
aad
push
sbb
cmp
adc
fisttpl
ja
inc
test
int3
clc
jno
fwait
in
loopne
adc
loope
push
les
push
flds
fcmove
in
loop
pop
jno
imul
cli
rorb
pop
push
xlat
sarb
stos
imul
dec
pop
lret
mov
mov
jno
sti
ret
jae
xlat
pop
lods
xchg
mov
movsl
jmp
in
sub
pop
jne
aas
mov
test
sub
pop
cmpl
xor
xchg
dec
add
xor
jmp
xchg
xchg
clc
jne
sbb
pop
or
inc
addb
pop
popf
xorl
xchg
sub
dec
cmp
adc
push
jbe
adc
dec
ss
jnp
pop
pushf
movsb
push
mov
testb
les
stc
je
add
ror
mov
data16
jno
cmp
push
addr16
sbb
push
loope
push
push
mull
popf
adc
out
lock
cmp
mov
push
test
gs
jg
xor
jp
and
ja
and
lock
xlat
dec
dec
xchg
ljmp
rcl
jno
cmc
mov
cmpsb
pop
inc
mov
mov
popa
lds
xor
cmp
repz
push
jl
adc
mov
mov
iret
mov
lret
jb
pop
sbb
imul
aam
and
jae
jecxz
mov
repnz
jo
repnz
xchg
cmpl
jne
mov
sbb
jno
mov
jb
enter
inc
movsl
std
xchg
out
xorb
inc
jae
sbb
xlat
mov
mov
shr
pop
jnp
pop
xor
mov
repnz
cmp
dec
push
inc
jno
jecxz
cmp
mov
pcmpgtd
xlat
repz
mov
stos
bnd
fildl
lret
push
test
pop
icebp
cwtl
jp
xorl
dec
dec
and
outsl
mov
jb
adc
mov
lahf
jnp
or
addr16
cwtl
xchg
pop
test
rcl
aam
flds
sahf
jmp
int3
mov
imull
dec
push
lods
sbb
sub
cmpsb
sti
sub
push
xchg
push
dec
outsl
add
dec
pop
mov
aad
cld
popf
mov
sbb
mov
mov
sbbb
out
call
mov
leave
loopne
jo
mov
jnp
jp
push
jns
sub
xor
leave
or
loope
je
xchg
leave
mov
cmp
push
pusha
lret
nop
sti
xor
lahf
sbb
cmp
sub
dec
movsl
cmc
pop
push
fucomip
xchg
imul
cmp
movsl
leave
mov
lahf
ljmp
push
test
mov
add
xor
dec
dec
shrl
xor
out
jle
out
pop
out
sbb
fwait
or
imul
stos
cmpsb
int
aas
xchg
sub
repz
sbb
les
insb
cwtl
xchg
int3
stc
dec
or
add
ljmp
sub
cmp
stos
addb
add
dec
pop
fs
mov
mov
nop
xor
mov
pop
out
mov
loopne
dec
or
mov
push
fldt
pop
shlb
idivb
repnz
cli
and
push
lock
or
xor
shrb
int3
es
stos
jae
nop
pop
jp
xlat
std
add
cmp
dec
loop
sahf
pop
sti
test
push
dec
adc
xchg
stos
pushf
mov
xor
daa
nop
aam
sub
rclb
imul
hlt
xchg
mov
ds
dec
mov
cmp
loope
jg
mov
pop
ds
pop
sub
lahf
add
stos
adc
test
push
icebp
movsl
dec
icebp
andb
call
dec
or
in
push
out
push
and
pusha
enter
dec
or
shll
in
lods
fsts
add
rorb
js
fs
xchg
add
inc
push
clc
xor
pop
mov
push
or
fcmovb
testb
pop
ljmp
sbb
sahf
bound
in
xchg
jg
orl
pop
jb
or
push
dec
das
inc
jae
push
xchg
stc
mov
sarl
test
sbb
outsb
js
sar
pop
out
cmp
fcmovb
xor
pop
aad
fsubl
popa
pop
lret
mov
mov
sub
into
adc
or
fsubrs
push
and
push
sub
mov
sub
push
mov
and
mov
in
add
push
movsb
out
adc
aam
pop
ss
test
mov
fs
mov
dec
and
lret
mov
fmull
push
mov
pop
test
and
outsl
lods
or
sub
frstor
mov
fninit
lret
outsb
in
mov
add
dec
jg
pop
xchg
and
inc
fwait
lea
sub
inc
cmpsl
or
cwtl
enter
push
adc
inc
mov
dec
sub
push
mov
sbb
jnp
vhaddpd
loope
xchg
xchg
into
outsl
push
fadds
daa
cmp
xlat
popf
cwtl
mov
jb
and
and
addl
fisubl
nop
xor
sbb
imul
ds
lret
cmp
or
imul
cmc
add
cmpsl
xchg
adc
repnz
cmovle
pop
xor
fistpl
js
add
xchg
aad
adc
cmpsl
cmp
and
pop
xor
cmc
test
pop
mov
cs
enter
jmp
jg
cmpsb
pop
aas
mov
sbb
cmp
inc
test
xchg
adc
push
adc
xchg
hlt
int
ds
mov
out
insl
and
jae
andb
popa
int3
sub
adc
push
and
hlt
and
cmp
xor
fdivl
ljmp
out
sbb
bnd
std
mov
xor
inc
mov
push
mov
xor
sub
outsl
dec
std
insb
cmpb
jge
sbb
clc
or
jne
adc
inc
cmp
sub
xorl
push
enter
icebp
es
or
shll
leave
pop
mov
or
pushf
cmp
and
xchg
gs
outsb
jp
dec
hlt
dec
jae
xor
inc
jmp
adc
sbb
sbb
and
xor
jge
mov
cli
dec
rcll
mov
pop
inc
xlat
ljmp
mov
cmp
sbb
dec
add
cmpsl
lretw
mov
jp
cwtl
mov
loop
aas
xor
out
clc
jge
push
aam
mov
jo
in
test
add
xlat
sbb
ds
adcb
push
add
movsb
pop
lcall
xchg
lret
jp
testb
daa
pop
pop
push
jmp
xchg
and
mov
cmp
pop
je
adcb
in
mov
push
fwait
adc
mov
dec
test
jp
cmp
jne
fnstenv
add
cs
xchg
push
testl
pusha
pop
movsl
pop
jp
push
sbb
push
int3
xchg
std
push
mov
jge
les
mov
jp
pop
ret
and
cmp
adc
push
stc
cmp
dec
mov
cwtl
or
fsubs
push
and
pop
pop
lret
out
sbb
mov
sub
jp
jmp
or
jp
jns,pt
in
sub
shlb
test
jp
les
add
jns
fldcw
rolb
leave
outsb
js
xlat
pop
mov
add
scas
mov
pushf
xor
mov
mov
insl
add
sti
dec
stc
cs
push
addr16
rcrb
fildl
fsubrp
lret
dec
mov
fstpt
lods
sub
in
ds
add
push
jno
push
test
lea
cmpsl
pop
or
jge
adc
push
cmpsb
jl
nop
mov
jne
hlt
shlb
enter
cld
lahf
movsl
and
pushf
loopne
or
insl
push
mov
and
jl
xchg
ja
push
adc
push
mov
dec
lods
lret
or
or
pop
in
outsl
fabs
inc
inc
jmp
movsl
int3
and
pusha
cli
fistpl
cmp
fs
jne
pop
and
mov
test
jnp
jbe
push
dec
mov
ss
xor
jb
pop
fwait
mov
ror
cmp
dec
inc
jne
mov
fildl
add
stc
decb
jmp
xlat
rcll
xchg
out
push
out
rclb
imul
jmp
jne
bound
fcmovbe
daa
cmp
out
aaa
ja
mov
out
push
or
sub
inc
shll
push
jb
fcmovnu
insl
shlb
out
jae
cmp
pop
fwait
xor
not
aas
or
jb
mov
gs
cld
test
ds
pop
dec
push
pop
and
mov
and
cmp
jo
adc
ja
adc
fcompl
fdivp
sbb
jne
int
mov
cli
lret
add
imul
repz
test
sub
enter
fnstcw
fisttpl
xchg
das
pop
xor
outsl
test
push
xor
ss
mov
push
pop
fcmovu
cwtl
pop
fld
cmpsb
jl
fcomip
cmp
xlat
adc
push
fld
ret
insl
sti
cmpsl
pop
xchg
or
jg
inc
dec
cwtl
lds
xchg
test
addl
jno
pushf
mov
or
pop
and
mov
xor
jecxz
mov
sbb
out
and
xchg
gs
xor
jae
cmp
pop
sbb
test
fstps
or
dec
jo
mov
loop
cmp
in
popf
arpl
pushf
pop
add
inc
imul
clc
jmp
fisubrs
push
mov
sub
stc
movsb
jb
pop
loopne
dec
push
andb
fdivl
cmpl
mov
push
jne
adc
xlat
jmp
jae
pop
cmc
jge
rcr
es
cmpsb
xor
jnp
fistpl
push
sub
jmp
inc
fsubs
addr16
jb
aas
dec
test
inc
pop
ja
or
fistl
lea
push
jne
dec
push
lcall
nop
loop
fcomps
nop
and
mov
nop
inc
das
push
push
fistpl
mov
mov
xchg
mull
jecxz
sub
pop
es
sbb
push
pop
out
cmp
mov
out
add
xchg
gs
sub
in
xchg
pop
or
sbb
movsl
push
test
js
inc
mov
adc
xor
jns
stos
in
addb
insl
pop
xlat
jmp
aam
rcl
cmp
mov
ja
fiadds
sahf
hlt
loope
lret
nop
xchg
jne
add
cmp
or
mov
out
int
ja
mov
test
xchg
ljmp
xlat
fcoms
loop
andb
sub
push
jae
fnstenv
and
cmp
adc
bound
hlt
jno
push
enter
push
or
or
fisttpll
jo
ds
pop
fwait
lock
pop
jbe
cmp
fsts
xlat
and
mov
sub
loope
leave
ret
insb
push
jg
dec
or
mov
pop
xlat
jle
adcl
mov
imul
push
mov
mov
push
in
push
pop
out
inc
imul
push
out
mov
ja
and
lods
push
ret
push
enter
out
hlt
call
aaa
cmpsl
inc
and
xchg
sbb
cmp
pop
psubw
xchg
push
mov
minps
add
ret
rorl
xor
adc
std
cmp
or
je
out
ret
dec
and
stc
sub
sub
xchg
mov
pop
jp
xor
or
imul
add
dec
adc
jae
sbb
testl
xchg
mov
std
adcb
fildll
pop
and
lahf
in
dec
scas
nopl
cmp
or
push
xlat
lcall
xor
aam
cmpb
mov
mov
push
push
fisubs
xor
rclb
push
xchg
jg
loop
lods
gs
lahf
jne
add
jns
xor
mov
repz
cmp
cmp
pop
add
jle
sti
cmp
stc
xchg
jmp
and
push
ja
stc
pop
rcll
mov
jp
cmp
pop
xor
cmp
add
jnp
push
insb
inc
dec
mov
imul
pop
sti
in
add
xchg
xor
sub
es
xor
inc
cmp
xchg
movsb
andl
and
jp
out
xchg
mov
insb
push
imul
cltd
fwait
pop
imul
lcall
mov
add
cmpsl
dec
cltd
pop
or
test
fstpl
into
push
ret
pushf
addr16
jno
adcl
adc
inc
clc
cmp
decl
fdivp
add
movsb
mov
lods
cmpsb
shlb
outsb
cmp
fistl
movl
and
imul
push
pop
sbb
in
or
pop
outsl
mov
add
out
aad
cmc
scas
mov
dec
sbb
or
sbb
pop
lret
jg
cmp
pushf
rcll
jg
fwait
out
dec
jne
outsb
jl
fsts
cltd
xchg
and
int
nop
inc
es
in
mov
lock
pop
ret
fisubrs
sbb
in
out
mov
aam
js
fmul
push
imul
xor
jne
jns,pt
xor
mov
adcl
mov
fmulp
cmpsl
sub
cli
xor
pop
pop
xlat
cltd
stos
imul
shlb
dec
pop
dec
and
testl
cmp
lea
sub
inc
mov
cltd
pop
les
and
pop
jns
jae
clc
pop
sub
push
add
lcall
push
adc
xchg
cmp
jle
lock
cmpsl
fstpt
inc
icebp
pop
and
or
xor
cwtl
insl
repz
xlat
inc
insl
push
popa
scas
dec
popa
es
jle
pushf
rolb
jmp
mov
push
cli
mov
mov
repz
xlat
rorl
pop
adc
dec
or
push
add
imul
jbe
das
push
add
mov
aaa
or
push
pop
push
jle
mov
call
and
outsl
fwait
sarb
ficoml
pusha
cmp
ljmp
or
lahf
mov
sbb
pop
sub
cmpsb
stos
adc
jp
mov
pop
fnstcw
aas
sub
adc
add
std
jmp
inc
sub
cmp
iret
cmp
dec
fidivrs
das
cmp
inc
jle
addr16
mov
xchg
andl
lahf
mov
push
stc
jecxz
inc
or
repnz
add
ret
aad
fisubrl
mov
mov
sti
sub
xchg
push
sub
mov
js
and
out
cmp
ret
add
ds
inc
inc
rcll
jge
push
xlat
push
and
mov
stos
xchg
fldt
test
movsb
lret
mov
in
outsl
mov
aaa
xlat
adc
aaa
lods
cwtl
or
pop
arpl
ja
push
test
add
ds
or
fidivrl
enter
pop
xchg
lret
cmpsl
test
outsl
cmc
jns
xchg
jne
flds
xchg
mov
jns
and
dec
ljmp
or
jmp
inc
jo
sub
mov
and
or
ljmp
loop
xlat
sbb
fbstp
testb
addl
nop
xor
xchg
xchg
inc
insl
jecxz
je
stc
mov
aam
fdivrs
cmp
scas
loopne
cmp
push
jno
adc
mov
adc
mov
mov
mov
leave
cmpsl
pop
fwait
xor
push
je
pop
mov
test
jno
fildl
or
adc
cs
imul
pushf
test
fcoml
pushf
or
add
fisubs
stc
cmp
and
mov
imul
lock
ss
inc
stos
pop
mov
shll
out
mov
out
das
cmp
int
and
sub
push
scas
test
push
dec
pushf
rcll
lods
add
fld
mov
push
lret
pop
push
scas
mov
jp
add
mov
push
test
ret
enter
xlat
mov
mov
pop
and
jnp
push
cwtl
mov
icebp
jp
fcmovnu
add
pop
scas
mov
imul
xchg
xor
ret
insb
and
fsubs
repz
jl
inc
stc
test
lods
add
mov
lods
and
sbb
xor
add
sub
xchg
push
mov
mov
xchg
cmp
mov
out
movsb
inc
in
subb
or
bound
fcomi
stc
sti
push
in
cmp
and
aaa
jb
out
sbb
frndint
test
jns
imul
clc
add
mov
jbe
lret
pop
or
roll
insl
mov
or
out
pop
jne
mov
mov
mov
loop
jecxz
or
aas
xor
lahf
add
addr16
mov
sbb
push
push
icebp
adc
jae
rcl
pop
jmp
dec
adc
lahf
into
aam
mov
int3
mov
sub
xchg
lods
rol
divl
cwtl
xor
dec
gs
mov
ficoms
fisubrs
pop
mov
std
jl
jmp
mov
call
cmp
fisttpll
into
nop
cmc
add
aam
mov
mov
sub
or
scas
sbb
adc
imul
and
out
push
jg
popa
sti
stc
mov
sub
aaa
or
and
ret
sub
jecxz
mov
sub
ret
sbb
add
inc
lcall
imul
insl
popa
add
iret
jae
pushf
cmp
jne
frstpm(287
or
inc
fnstcw
xchg
insb
sti
lahf
dec
sarb
mov
outsl
aam
jbe
sti
aaa
sub
add
rcrb
mov
sahf
mov
mov
or
mov
or
jb
sbb
push
sub
cmp
jp
push
sub
aam
sar
divl
stos
arpl
cli
pop
mov
loope
mov
ljmp
sbb
ja
pop
data16
sbb
lea
cmp
dec
repnz
sbb
in
jae
popa
pop
lods
push
cmpsl
repnz
popf
push
std
pop
arpl
mov
std
push
decl
adc
and
gs
outsl
jg
popf
mov
sub
nop
mov
psubsw
push
xchg
mov
mov
cli
icebp
sbb
xlat
push
fidivrs
fstps
mov
les
mov
test
iret
mov
loope
cmc
xchg
hlt
xlat
adc
jmp
xchg
jno
cli
je
out
xlat
pusha
lods
jno
fldt
ja
mov
mov
sbb
nop
clc
pop
cs
push
scas
dec
cld
and
adc
fldt
adc
outsl
cmpsb
adc
jmp
std
shlb
ss
stc
cltd
jne
fwait
or
out
in
ljmp
shlb
addr16
cmp
add
sbb
enter
cmpsl
xchg
sub
rorb
mov
scas
mov
cmpsl
ret
jl
mov
pop
std
mov
and
test
mov
enter
dec
outsb
insb
fistl
cmp
dec
or
std
imul
test
xchg
adc
jb
arpl
call
mov
sub
push
jne
lret
imul
inc
stos
jmp
sar
fcmovu
xchg
addr16
or
ret
lcall
nop
dec
pop
test
sbb
stos
push
inc
fcmovne
test
mov
adc
je
js
popa
jbe
insb
or
jg
sbb
ljmp
out
jb
mov
arpl
dec
ds
imul
pop
fldcw
fstps
lods
dec
sbb
ds
xor
ss
dec
adc
scas
rclb
dec
shr
in
mov
push
sbb
jge
imul
xchg
sub
add
lret
fldcw
in
jb
xor
and
notb
or
imul
bound
int3
mov
lds
push
aaa
jno
pop
lcall
test
dec
jns
add
push
imul
xor
std
xor
push
xor
fiadds
mov
fildl
add
outsl
xor
movsl
add
cmp
mov
ja
test
scas
adc
or
sbb
pop
inc
aad
dec
mov
jnp
pushf
out
arpl
push
push
push
dec
jge
push
je
orb
sbb
dec
dec
or
mov
jge
ret
ret
sub
fcomip
ja,pn
adc
into
out
out
adc
cmp
inc
movsl
imul
push
pop
cld
xchg
fistpl
fcomi
add
mov
rcll
jae
rolb
aad
in
mov
jns
xchg
cmpsb
inc
xlat
jl
arpl
test
shrb
push
subb
push
jnp
sub
add
insl
mov
shll
cmp
push
add
out
mov
mov
repnz
or
jne
out
ret
mov
lret
and
dec
mov
add
daa
std
jo
call
cmp
adc
std
mov
xor
loop
sub
arpl
push
cli
pop
mov
pop
cmp
or
ja
clc
es
cmp
cli
sbb
shlb
jl
dec
mov
mov
lahf
sbb
push
add
mov
add
push
push
xor
jge
and
aas
xor
addr16
leave
repz
push
aaa
aam
pop
xlat
and
fcompl
fcmovnu
arpl
imul
jle
sahf
in
pop
jb
and
nop
in
out
outsl
xor
lahf
fistl
push
push
xor
cmp
or
add
incl
jg
or
cmp
jns
fistl
mov
fsts
stos
mov
adc
nop
mov
xorb
adc
cs
dec
sbb
and
lea
xor
mov
cmp
lcall
popa
cmp
and
or
sbb
rcrb
pmuludq
xor
sub
mov
cld
pop
adc
fisttpll
inc
push
add
xlat
sarb
pop
jb
mov
push
sti
ss
dec
jg
push
cmp
adc
jecxz
xor
imul
fidivs
jge
mov
push
push
test
pop
int
pop
shll
repz
jae
ss
ljmp
int
mov
mov
jg
push
push
lods
loopne
sub
fstpt
ljmp
std
jae
cmc
das
sub
mov
push
and
xor
ret
push
jge
and
les
in
mov
xchg
mov
mov
ljmp
in
das
aaa
push
in
imul
cmp
out
out
cmpsb
jg
sti
addr16
mov
jae
adc
imul
in
xchg
arpl
xchg
dec
repnz
outsl
stos
add
aas
pop
ficoms
jg
jg
repnz
lcall
sub
fisttpl
jno
sarb
test
pop
mov
mov
and
and
xor
dec
imul
repnz
jne
pop
out
out
cmp
push
popa
and
pop
adc
pop
cmp
and
cmp
cmp
dec
pop
or
mov
jp
pop
mov
pop
jp
push
sub
imul
je
repz
pushf
inc
into
out
cld
push
xchg
mov
loope
push
lock
xlat
mov
cltd
stc
ret
std
insl
dec
or
mov
imul
add
in
sbb
push
fwait
inc
imul
xlat
stos
xor
mov
fidivrs
rol
testl
call
lea
cli
lods
push
sarb
lahf
xchg
nop
insb
imul
scas
or
mov
jge
pop
sbb
pushf
and
push
adc
push
orb
pushf
shlb
add
fistpl
pop
fmuls
xlat
sub
push
cmpsb
sub
vcvtpd2dqx
mov
mov
aaa
hlt
ja
xchg
enter
xchg
lcall
jg
mov
mov
add
cmp
xor
mov
mov
cmp
mov
movsb
incb
fisttpl
mov
pop
stos
sbb
stc
fwait
stc
xchg
adc
fs
xor
addr16
sub
jp
test
xchg
jno
xor
or
push
sahf
insb
mov
adc
fs
add
mov
sbb
add
frndint
aad
movsl
xchg
into
jb
in
jae
add
or
add
inc
jbe
pop
imul
shlb
pop
add
jae
js
xor
xor
cltd
lret
jl
xlat
cmc
shl
daa
ret
cmpsl
xchg
or
and
mov
jns
xor
loop
out
mov
adcb
stos
fstps
mov
fcomp
cltd
mov
add
inc
out
rcrb
testl
push
ja
dec
stc
adc
and
movsl
call
jno
add
nop
add
pop
mov
movsb
and
mov
orl
push
lea
mov
mov
test
jp
fists
arpl
pop
ds
repnz
cmp
enter
push
add
aad
jge
cwtl
sub
push
dec
adc
push
pop
stos
push
and
jg
or
loope
push
dec
test
add
insb
cld
push
xlat
or
xchg
daa
loope
jl
jecxz
jno
inc
add
inc
into
ja
mov
jg
shlb
dec
call
inc
and
test
out
sbb
dec
or
js
pop
add
sti
popf
add
xorb
jg
sub
repz
popf
adc
xor
push
fildl
addr16
mov
popa
insl
xlat
outsb
scas
popa
dec
movsb
das
mov
data16
cs
stc
hlt
outsl
cltd
pop
dec
dec
pop
cli
mov
push
xchg
push
add
call
xchg
nop
mov
fmul
out
lds
pop
cmp
sbb
inc
or
mov
mov
add
xor
insl
mov
or
sub
lret
push
stc
adc
sbb
insl
mov
or
mov
dec
add
ficompl
lock
ljmp
and
ja
mov
sub
xchg
mov
lock
outsb
je
push
mov
test
mov
sbbb
dec
cs
mov
sub
testb
imul
mov
jns
sub
cld
cli
dec
xchg
cmpsl
aaa
cmc
fidivl
test
stc
xor
js
push
gs
test
movsl
pop
and
inc
jb
or
xor
add
cmp
xor
cmc
add
inc
mulb
mov
xchg
xorl
loop
cmc
inc
or
jl
adc
outsl
push
mov
popa
mov
add
cmp
leave
pop
dec
push
arpl
sahf
mov
push
sub
or
xchg
sub
aad
es
mov
xor
cli
mov
mov
adc
mov
or
dec
xlat
cmp
ret
aam
mov
out
arpl
jbe
insb
add
or
inc
pop
cmp
jns
jb
pushf
loopne
cwtl
dec
arpl
sub
cltd
subb
rclb
stos
notb
xor
dec
icebp
mov
in
xchg
imul
stos
nop
sbb
out
jmp
outsl
sub
imul
mov
xor
push
lahf
int3
outsb
dec
mov
jne
inc
pusha
xchg
mov
imul
jle
insl
cli
jg,pt
ja
fildl
push
imul
push
xchg
mov
sbb
jecxz
jnp
or
and
add
lret
jae
fcmovnu
aaa
imul
shll
negl
lcall
in
cmp
cmp
xlat
mov
inc
xchg
clc
pop
xchg
mov
xor
cmp
sub
mov
inc
and
sbb
cmp
mov
orb
adc
jl
inc
push
pop
mov
test
dec
sbb
xlat
sbb
test
ret
fld
jae
jle
stc
sbb
fcmovu
jl
ret
inc
mov
lods
hlt
add
add
sbb
and
mov
push
or
sti
sub
push
push
mov
mov
push
xchg
aad
pop
in
pop
pop
incl
cmp
mov
fisubl
pop
or
xchg
fprem
push
inc
and
cmp
push
cwtl
mov
mov
xchg
js
dec
mov
push
ljmp
pop
mov
dec
jb
pushf
cmp
leave
adc
pop
push
adc
cltd
push
addr16
xchg
nop
out
push
adc
xchg
cmc
xchg
int3
xchg
ret
inc
rclb
icebp
test
enter
stos
push
mov
fwait
or
inc
cmpsb
inc
push
je
jp
imul
dec
insl
sub
outsl
mov
sub
mov
mov
cmp
psrlq
popf
nop
fcmove
ss
jno
dec
jne
or
fistl
mov
sub
cmp
fldt
push
mov
das
cmp
out
pushf
jno
sahf
xchg
sbb
out
add
pop
pop
in
mov
mov
sarb
int3
out
cld
rcr
jo
fdivl
inc
mov
aam
xor
and
push
imul
fdivs
or
inc
or
fxch
out
lds
dec
push
les
dec
cmpsb
jp
stos
ret
dec
xchg
lcall
jp
dec
test
xor
hlt
lcall
jp
jno
popa
jle
sbb
mov
std
bound
pop
xlat
rorb
ljmp
dec
popa
jg
push
in
mov
mov
aam
xor
test
cli
dec
add
jne
sbb
jp
negl
pop
ret
test
cmp
and
adc
mov
jns
fmull
lods
fnstsw
ret
xchg
sub
sub
push
dec
dec
lcall
push
imul
or
push
inc
pusha
pop
mov
xchg
jle
pop
pop
pop
add
out
dec
pop
jae
ficoms
mov
add
pop
and
adcb
test
je
and
add
mov
insl
jns
stos
xlat
adc
mov
jae
in
sbb
test
jne
jp
xlat
lret
loope
xchg
mov
fwait
xor
popa
aaa
es
sbb
scas
lock
cmp
xchg
aad
jno
xchg
mov
add
mov
xor
pop
add
mov
bound
stc
pop
sbb
xor
or
xchg
enter
fiadds
int
or
cmp
stos
outsb
mov
mov
jno
xlat
jl
dec
into
mov
sub
pop
popl
push
pop
or
sbbb
or
inc
add
jne
push
lret
ljmp
out
dec
sbb
cmc
pop
and
pop
jno
rol
cmp
mov
enter
and
pusha
xchg
jns
or
int
adc
xchg
mov
xor
mov
and
lahf
mov
mov
xor
icebp
in
fcmovnbe
out
jg
sbb
xor
jae
popa
push
pop
mov
jae
flds
and
add
popf
dec
fsubs
fldt
cmp
add
outsb
mov
std
sbb
shr
jno
dec
pop
sub
int
repz
int
stos
mov
mov
jle
add
lret
mov
push
push
mov
bound
push
pop
jge,pn
repz
push
xchg
and
sbb
addr16
jp
pop
inc
xchg
neg
mov
sbb
in
jb
pop
pop
fcompl
imul
pushl
inc
rcll
imul
add
orb
fldenv
dec
repnz
xor
insb
inc
cmp
ret
pop
cwtl
out
xor
ret
sahf
mov
jno
int3
into
pop
dec
push
cwtl
sarl
or
mov
test
xchg
aam
xchg
ds
hlt
add
xchg
popf
xorl
fincstp
mov
lods
bound
test
repnz
mov
test
imul
repnz
push
outsb
sub
mov
mov
rcl
mov
xlat
sbb
ljmp
push
js
fcomps
hlt
decb
xlat
das
inc
mov
addr16
xor
sub
movsl
mov
lods
xlat
in
push
push
cmp
incl
mov
std
lret
fnstenv
mov
xor
mov
call
std
out
and
sbb
mov
sub
sub
and
jo
mov
ficoms
arpl
pop
push
xchg
jns
xlat
pop
mov
sbb
mov
push
push
pop
sbb
cld
cmp
fcomps
mov
push
jns
aas
and
mov
stc
add
dec
pop
push
sti
adc
loopne
jae
xchg
dec
ret
aad
jmp
stc
pop
push
and
push
repnz
xlat
or
sub
mov
faddp
ja
mov
in
mov
xlat
shrl
sub
push
pop
mov
add
test
adc
mov
jae
mov
xchg
mov
iret
xor
sbb
shr
es
ret
mov
fistpll
cs
int
inc
cmpsl
push
pop
jle
ja
pop
aam
push
stc
sub
aam
stos
cmpl
and
push
ret
fbstp
push
fwait
xchg
sbb
push
jae
scas
iret
movsl
jno
icebp
enter
cld
pop
sub
adc
scas
and
scas
jecxz
inc
dec
mov
in
push
in
loope
popf
inc
or
int
ror
insb
in
cmp
test
test
ljmp
jmp
xchg
and
movsl
leave
and
mov
cmp
ja
cs
ja,pn
outsl
in
pop
mov
adc
mov
and
xchg
fisubl
mov
and
and
pop
mov
mov
inc
int3
sbb
push
test
pop
xor
add
pop
cmp
dec
into
movsbl
pop
lcall
dec
ret
loopne
jmp
pop
loop
pop
gs
lods
sbb
gs
pop
push
pushf
idivl
outsl
mov
loop
cli
icebp
jno
jecxz
addr16
fs
bound
add
pushf
stos
andl
arpl
adc
mov
mov
loope
enter
dec
sub
int3
xlat
test
xor
xor
jns
jne
cltd
pusha
test
adc
lds
mov
loop
pop
xlat
cltd
jl
ret
popf
xchg
xchg
xor
aam
js
loop
xchg
movsl
dec
test
and
popa
in
sbb
xchg
hlt
loop
cli
mov
aam
cmpb
into
jmp
test
gs
cld
pop
popf
imul
imul
out
loope
jge
cmpsb
sub
push
fcompl
mov
out
dec
mov
inc
fwait
jl
xchg
cmp
mov
arpl
mov
dec
add
xlat
frstor
stos
inc
fcmove
pop
icebp
or
xorl
call
cltd
out
jne
rcl
fwait
lahf
cli
push
mov
movsl
mov
loop
push
fidivrs
jmp
popa
out
xchg
adc
imul
add
aad
int
dec
stos
inc
ds
sub
fldenv
lods
push
jbe
sub
mov
lcall
test
std
clc
icebp
pop
sub
pop
mov
in
sbb
pop
mov
jo
add
std
sbb
mov
stc
int3
and
or
xchg
dec
mov
cmp
repz
mov
sahf
inc
mov
add
xor
hlt
mov
cmpsb
sahf
xlat
test
outsl
xchg
fcom
packssdw
lret
fistpll
xchg
xchg
popf
mov
sbb
dec
loopne
lret
inc
adc
fidivl
or
pop
fisttpl
add
xor
stos
iret
xlat
xor
xor
lock
test
push
aam
test
jle
mov
dec
rcrb
arpl
orl
jne
jns,pt
insb
lea
fstps
pop
xor
jge
cld
std
jp
repz
jns
loope
je
add
xor
shlb
push
sub
dec
pop
stos
test
sub
mov
dec
aaa
push
push
loope
mov
sbbl
lahf
xchg
sbb
jno
or
sar
mov
pop
sbb
lahf
mov
and
movsl
dec
push
std
stc
mov
test
stc
xor
int
mov
popa
and
and
xchg
clc
lret
add
push
std
mov
scas
xor
cli
dec
fdivrs
xlat
xlat
cmc
dec
out
jne
data16
xor
mov
dec
and
sub
rcrb
lock
fimull
out
mov
and
stos
outsb
jp
xchg
push
push
fsubs
lret
test
mov
push
inc
in
inc
rorb
jb
fldt
xchg
sbb
xchg
insl
lret
shr
div
je
push
mov
adc
jp
fistpl
mov
shlb
pushl
mov
int
loope
cmp
fdivrs
das
mov
dec
data16
mov
xorl
pop
and
sub
adc
test
xchg
pop
les
fcomp
mov
push
imul
data16
add
cs
aam
add
bound
pop
push
orl
cltd
imul
cs
mov
or
dec
dec
xor
loop
arpl
xlat
dec
daa
xchg
sub
ret
mov
repz
sub
pop
fstpt
in
cli
pop
adc
pop
adc
xlat
mov
inc
movsb
pushf
fsubrs
xchg
out
das
add
xchg
xlat
addr16
call
leave
sub
and
shll
cmp
mov
sbbl
mull
lea
daa
and
pop
pop
dec
adc
stc
aaa
push
xlat
mov
fistl
xchg
rolb
pop
mov
push
push
sub
mov
xchg
pop
sub
dec
adc
jne
or
repnz
adc
and
xchg
jne
test
stos
stc
mov
jno
int
movsl
dec
sbb
lcall
mov
mov
test
and
or
sub
push
pop
mov
ficomps
push
mov
jl
aam
jbe
lods
outsl
pop
xchg
and
movsl
daa
and
dec
jb
pushf
sbb
sub
gs
call
fldenv
out
xor
fiadds
cmpsb
outsl
icebp
or
fs
xor
and
push
fcmovnu
movsl
rcrb
insb
fsubp
mov
lea
inc
jbe
ja
or
cmp
loop
mov
or
dec
sahf
cmp
push
aam
shlb
cmp
or
fs
and
push
cs
insl
xor
adc
dec
ficoms
cmp
jge
fsub
add
mov
out
mov
push
hlt
lret
inc
sub
xor
mov
imul
mov
push
ret
in
rorl
dec
mov
fldt
mov
sahf
stos
mov
pop
std
cmp
cmc
fnstenv
bound
lahf
push
pop
icebp
inc
inc
sbb
sbb
adc
inc
repnz
daa
push
pop
jg
push
out
adc
jne
mov
cmp
fnstenv
mov
cld
sbb
aas
pop
cs
push
sahf
dec
jne
fsts
mov
push
add
xor
iret
xor
aad
dec
fstpl
xlat
stc
gs
stos
data16
inc
jb
jae
daa
call
in
cmp
or
jge
jne
dec
push
jbe
ret
in
push
push
pop
inc
push
and
imul
adc
rorb
jl
fisubl
pop
sbb
and
jb
or
sbb
push
sub
cmp
scas
xor
or
xchg
lcall
xlat
movsb
push
push
inc
mov
or
and
mov
addr16
ja
mov
dec
test
or
dec
gs
fcomps
sbb
dec
push
pop
mov
repz
imul
in
mov
push
jge
mov
and
sbb
icebp
out
scas
jb
pop
dec
popf
sub
cmp
inc
push
lds
xor
xchg
cmp
lahf
inc
jae
fistpl
and
faddl
faddl
jne
sub
dec
fidivrl
pop
push
pop
mov
lock
pop
test
mov
imul
pop
sub
push
test
xchg
mov
push
jge
mov
xchg
mov
imul
popa
out
or
mov
sub
cli
clc
and
dec
cmp
jecxz
push
xor
repz
push
popf
insb
push
dec
push
push
xor
cmp
sub
mov
fwait
xlat
or
mov
stc
cmp
cli
sbb
movsl
sub
sub
pop
push
inc
pop
mov
imul
fstpt
in
sarl
mov
cwtl
pop
push
xchg
fs
mov
movsb
jle
mov
int
xlat
lret
mov
inc
jmp
pop
fimuls
cmp
out
sbb
cld
sbb
sbb
cmp
cli
sbb
sarl
mov
cltd
fldenv
push
xchg
call
nop
clc
aaa
ffreep
cs
out
pop
cli
rcrl
xchg
push
call
xchg
mov
sbb
call
pushf
mov
jg
mov
inc
jmp
popa
mov
test
jb
sbb
mov
push
xlat
xor
popl
jp
in
ja
cmpsb
sbb
jl
and
icebp
sub
dec
sub
les
inc
inc
xlat
jae
outsl
cmp
lret
fisttpl
push
lret
mov
or
sbb
xor
hlt
pop
or
mov
daa
addr16
cmp
lods
rcrb
push
pop
mov
jnp
cmp
flds
dec
jge
mov
fstpt
cmp
jns
into
dec
adc
loop
xchg
jge
xlat
scas
add
sbb
push
mov
jns
mov
test
mov
jmp
cmc
xchg
call
inc
jno
mov
add
lahf
loope
std
mov
fdivrs
sub
loop
mov
cmpb
mov
loopne
sbb
xchg
or
cwtl
js
int3
jae
sarl
cmp
in
test
mov
add
jns
lods
iret
cmp
mov
test
lods
and
mov
xor
xor
fdivl
imul
pushf
cwtl
and
repz
xchg
in
sub
dec
addr16
cmp
or
pop
pop
das
fwait
push
push
ss
ja
scas
cmp
jmp
or
sbb
shrl
imul
jle
bound
cmp
lret
sub
out
lods
imul
cltd
mov
and
mov
jmp
subb
sub
sub
subb
adc
ds
mov
pop
push
lcall
jno
adc
sbb
clc
mov
jns
sub
imul
fistpl
pop
xor
dec
sub
xor
cmp
push
stos
pop
bound
xorl
sbb
jae
dec
cltd
loope
fisubl
hlt
in
jbe
popf
pop
mov
sub
nop
mov
rorb
bound
pop
mov
inc
pop
loope
xor
test
adc
pop
enter
sub
or
jmp
or
in
fsub
in
cmp
sbb
fnstenv
xor
push
rorb
push
subb
adc
fs
xlat
imul
stc
sub
je
sub
add
or
loop
xchg
sub
fildl
dec
imul
jne
pop
ds
push
test
andb
sub
pop
ficoms
xchg
xchg
loope
or
xchg
lret
lahf
cmc
inc
enter
jge
cmp
dec
add
push
xorb
fisubrs
in
fsubrs
xor
cs
and
sar
mov
jne
lret
and
mov
lods
and
lret
adc
push
dec
xchg
push
shl
mov
leave
xlat
outsb
ret
addr16
idiv
sbb
in
jno
lods
pusha
sub
sti
xor
hlt
mov
shrl
in
xor
jmp
sub
xchg
add
fstps
cli
mov
aam
cli
hlt
sub
cli
dec
sahf
add
mov
sahf
inc
fcomi
cmpsl
cmp
out
stc
push
xchg
subb
and
loop
out
je
cmp
mov
fstps
dec
test
icebp
xchg
xchg
pop
stos
dec
push
fdivl
rcr
jp
cmpsl
xorl
pop
add
xlat
sbb
lods
fisttpl
xor
inc
pop
or
dec
jae
imulb
sub
or
scas
inc
adc
jb
adc
jbe
or
sub
mov
popl
jmp
insl
push
ficompl
mov
cmp
adcl
mov
jbe
fsubrl
fdivp
arpl
mov
jb
adc
mov
fcmove
sbb
sbb
fnstsw
push
xor
xchg
dec
ret
xchg
fsubp
push
andb
adc
aad
xlat
daa
cltd
mov
lea
sbb
xchg
sbb
push
adc
jge
test
xor
movsb
cmpsl
imul
jne
imul
in
ljmp
popf
or
cmp
loop
inc
sbb
sar
lock
dec
xor
cmp
push
sub
and
pop
out
and
sbb
pushf
inc
cmp
das
or
gs
std
orl
jge
repz
fxch
outsb
and
and
add
fists
imulb
f2xm1
push
add
sbb
jnp
std
xor
add
jl
mov
dec
test
pop
stos
dec
cmc
pop
fcmovb
jge
repnz
mov
in
iret
sahf
xchg
movhps
sbb
repz
pop
pop
jl
add
adc
imul
mov
sti
push
fninit
xor
adc
out
jle
lods
imul
out
xor
mov
cmc
pop
fcomi
jmp
inc
pop
popf
repz
je
dec
fld
fsubrs
add
jge
and
pop
sub
pushf
push
outsb
cmp
adc
pop
xchg
xor
aad
adc
daa
inc
add
ja
jl
xor
xchg
pop
jno
push
cmp
rorb
fidivl
mov
mov
bound
xlat
dec
mov
cmp
cmp
push
jle
les
jp
out
mov
fst
loop
or
sarl
xabort
jmp
jbe
mov
int3
outsl
pop
aas
mov
out
addl
dec
mov
pop
xor
sbb
fldenv
shll
push
xchg
jecxz
roll
mov
je
repnz
icebp
aas
pop
xchg
loop
test
mov
sub
cmp
ja
cltd
xlat
push
jns
push
loopne
xor
xchg
into
imul
adc
inc
cld
pop
mov
jne
cmp
and
and
lods
shr
xlat
inc
js
sub
divl
or
addl
mov
lods
jae
xor
adc
xor
int
arpl
fimuls
or
adc
test
and
push
cmp
mov
stos
outsl
sub
jb
push
loope
out
jnp
ljmp
mov
mov
pop
cmp
imul
cmp
mov
int3
jg
or
dec
addr16
daa
and
popa
notb
mov
mov
xchg
pushf
xor
mov
mov
fildll
rol
mov
arpl
push
enter
addr16
push
sti
adc
pop
sbb
lret
clc
loop
stc
add
push
stc
mov
jp
sub
add
movsl
je
mov
xchg
lahf
popf
xor
and
sbb
xchg
or
shll
xor
inc
add
mov
cmp
fs
cli
dec
jmp
mov
shlb
cmp
add
or
add
popf
js
push
xorl
inc
outsl
adc
mov
push
cwtl
push
and
jecxz
mov
mov
jp
jle
das
scas
cmp
pop
sub
xchg
xor
nop
mov
addr16
mov
push
xlat
fsubrp
or
cld
xor
xchg
repnz
cmp
or
push
sub
lea
mov
aaa
sub
sub
sti
push
sbb
mov
icebp
test
stc
mov
push
add
roll
cmc
mov
mov
jb
and
lcall
sbb
cmp
popf
add
or
xor
popf
adc
and
icebp
sub
push
xor
mov
stc
scas
aaa
push
je
fldt
shlb
pop
jmp
xchg
jno
push
sub
mov
mov
and
cld
inc
aaa
dec
mov
mov
and
hlt
sbb
push
cmpl
mov
dec
sbb
push
or
adcb
imul
adc
scas
test
das
jle
xor
es
daa
jbe
mov
xlat
push
xor
xchg
xlat
pushf
push
andl
leave
xor
push
shlb
sti
sbbl
mov
ja
repz
ret
insl
std
arpl
mov
cmc
or
xor
adc
add
fistl
push
ja
jle
add
mov
push
mov
subl
loope
xor
inc
rcll
idivl
jno
mov
dec
xchg
fwait
test
rolb
cmp
mov
xlat
lods
or
and
xchg
mov
ss
push
cmp
push
mov
pop
push
jnp
js
outsb
dec
or
jne
pop
sbb
icebp
or
lretw
out
mov
pop
xchg
rcrb
insl
enter
jbe
xor
mov
jmp
adc
and
mov
je
into
mov
or
sub
pop
sub
push
add
arpl
adc
test
fsts
push
imul
cmpsb
in
cmpsl
xor
loop
dec
test
enter
or
mov
negl
inc
out
sbb
je
xor
cmp
ja
leave
lods
pop
xlat
dec
fs
insb
jl
dec
pop
stos
dec
jne
stos
xchg
dec
adcb
std
add
jl
stos
sbbb
stc
cmp
mov
xor
adc
or
add
add
icebp
jg
cmp
sbb
cmp
mov
nop
push
jo
xchg
add
cmc
jno,pn
fsubrl
sbb
fcmovne
xchg
fisttpl
push
or
cmp
and
stos
pushf
sbb
sbb
or
int
push
aad
push
sbb
adcl
or
ret
sub
jp
dec
imul
pushf
or
fs
adc
mov
testb
shlb
ja
fstps
or
dec
xor
out
cmc
iret
out
lret
mov
sbb
aaa
cs
stos
push
repnz
mov
jo
insb
jnp
sbbl
jmp
scas
and
cmp
dec
pushl
push
cltd
pop
test
xchg
mov
cmp
mov
fsubrl
pop
shll
sarl
and
push
xchg
subb
mov
orb
jb
jp
repz
arpl
sti
jge
sub
cmp
push
out
in
mov
sub
outsb
jne
or
xchg
iret
movsl
mul
and
mov
add
dec
xchg
psubw
add
mov
out
xor
fstl
and
inc
and
daa
and
pop
outsb
nop
xor
clc
mov
push
jl
sbb
and
sbb
mov
cmp
sbb
inc
jae
inc
or
scas
sub
fcmovnb
pop
and
cmp
sti
mov
test
and
lea
ja
and
leave
pop
fidivs
and
xlat
cmpl
inc
sbb
std
and
sbb
clc
iret
sbb
inc
into
cwtl
mov
test
push
in
fcmovnbe
jl
mov
xchg
sbb
jg
in
daa
aaa
cld
outsl
dec
fsts
lret
stc
xchg
mov
movsb
cwtl
sbb
push
sbb
fdiv
cmp
adc
sub
pop
sub
and
cs
cmp
out
sub
aaa
mov
sbb
stc
ja
aad
mov
xlat
xor
mov
push
xlat
mov
pop
mov
jecxz
in
movsb
test
cmp
push
cltd
inc
out
mov
dec
rcrl
fs
pop
pop
push
dec
and
pop
adc
mov
sbb
pushf
inc
or
insl
and
mov
iret
fnstenv
repnz
xchg
stc
std
add
jecxz
jmp
movsb
jae
das
in
pushf
cwtl
int3
mov
shll
cmp
mov
mov
sbb
ret
add
pop
aam
pop
into
fsubrl
mov
xor
std
xlat
dec
cs
pop
js
popa
cmpsl
stc
push
xor
inc
mov
ret
push
sar
outsl
in
dec
pop
jbe
adc
add
shr
arpl
and
xor
enter
sub
adc
das
mov
dec
xlat
push
mov
or
imul
leave
or
xchg
xor
cmpsl
sti
andl
addr16
xor
test
xor
fiaddl
sub
out
push
cli
pop
fisubl
je
iret
mov
lea
mov
jg
das
lea
sub
not
inc
std
jle
mov
fnstcw
fcmovnb
fldl
gs
jae
pushf
and
shlb
xor
enter
inc
mov
inc
fldt
leave
cmp
rcr
negb
xlat
cmp
cmp
fimull
push
xchg
sbb
aad
jecxz
fadds
or
sub
call
popf
ja
fistpll
xor
dec
fisttpll
lods
add
mov
add
pop
out
std
xchg
jl
movsl
jns
sub
push
adc
ror
outsb
addl
inc
pusha
push
ror
sub
xlat
rcrl
sbb
jno
mov
xor
retw
xor
sbb
lods
and
aaa
adc
shll
dec
pusha
clc
movsl
push
stos
jb
inc
pop
aad
imul
jne
lcall
testl
fs
push
call
push
clc
shll
jmp
stc
nop
int
inc
and
stos
jge
out
fwait
cmp
out
sub
jae
fiaddl
insb
mov
cltd
or
sub
or
or
inc
jge
fisubl
loop
sarl
movsb
out
and
out
xchg
nop
add
out
mov
subl
test
jle
pop
adc
in
out
jmp
sub
mov
xchg
lcall
dec
data16
jg
cwtl
mov
or
hlt
andb
subl
pop
push
pop
push
xor
xor
mov
jecxz
dec
jno
xor
inc
push
shl
outsb
xor
int3
cmc
push
xor
sbb
xchg
ljmp
mov
movsl
cmpsb
jno
jecxz
jecxz
ds
adc
push
in
xor
cmp
aas
imul
pop
adc
insb
notl
imul
pop
fldenv
adc
adc
mov
mov
jl
rorl
xlat
push
xchg
fdivl
push
test
jno
lock
push
imul
outsb
xchg
pushf
popa
fwait
or
xchg
rclb
dec
push
je
mov
std
dec
popa
cmp
xlat
xor
mov
test
out
mov
pop
testb
pop
adc
mov
dec
xor
ljmp
fbstp
xchg
clc
mov
add
push
ret
daa
dec
dec
daa
rcll
aam
dec
cmp
jmp
xchg
jno
stos
cmc
pop
xchg
pop
fimull
sbb
or
aaa
lock
xor
leave
sub
stc
fsts
sbb
cmp
stc
and
mov
dec
push
sub
push
std
fwait
inc
and
xor
mov
cmc
mov
mov
ljmp
sbb
xlat
push
jno
out
and
sub
iret
hlt
inc
push
add
or
ja,pn
inc
stos
mov
imul
fidivrl
pop
adc
adc
cmpb
xor
stos
adc
sub
fistl
push
or
and
jno
xlat
rolb
cmp
test
xlat
fnstcw
add
cmp
fidivs
icebp
daa
push
sbb
push
imul
sbb
push
popa
or
mov
lods
add
icebp
cs
ja
call
fidivrl
sbb
jae
push
pop
add
stos
jg
xchg
stc
cld
xlat
cmp
stc
fnstenv
sub
add
cmp
dec
fdiv
insl
flds
mov
fistpll
adc
sarb
xchg
pop
mov
add
iret
adc
pop
dec
les
fimull
imul
push
adcl
jo
mov
or
sub
dec
xlat
addb
cmp
xorb
stc
rcrl
in
bswap
mov
lock
imul
pop
mov
mov
js
pop
or
enter
xor
xorl
gs
lahf
jecxz
addr16
movsb
jle
int3
enter
jne
popf
add
stos
shrl
imul
and
les
test
test
sbb
push
xor
movsl
xchg
imul
pop
fwait
mov
dec
popl
and
fdivl
fldlg2
out
rcrl
sbb
mov
inc
xlat
cmp
ds
xor
lcall
je
bound
jno
fst
test
adc
sub
jmp
lcall
xor
pop
cld
imul
pushf
aaa
push
pop
pop
adc
pushf
xlat
lcall
ret
sarl
cwtl
in
call
shlb
sub
xor
and
andb
or
idivl
repz
stc
out
fldt
adc
mov
aam
aaa
mov
push
inc
xlat
in
out
push
push
std
loopne
push
xor
cmp
lea
inc
test
imul
push
add
sbb
push
imul
in
sub
dec
cli
jo
or
cwtl
pop
cmpl
ds
bound
mov
and
out
int
fstps
data16
inc
scas
fisubrl
push
xchg
xor
daa
test
mov
cmc
test
mov
out
outsl
std
lret
xchg
jno
push
imul
dec
xchg
cmp
pop
imul
mov
pop
or
sub
dec
push
dec
rep
mov
sbb
xchg
in
pushl
push
lahf
lock
push
pop
repnz
stos
sub
imul
jl
push
addr16
or
add
and
scas
imul
jmp
sbb
xchg
sbb
mov
jmp
out
inc
mov
test
xchg
cld
adc
inc
test
mov
dec
xchg
cld
aaa
fxch
cmp
mov
pop
mov
jge
or
push
cmpsb
fistl
adc
lods
sti
pop
movsl
mov
xlat
jge
and
jmp
outsl
lods
aad
imul
or
roll
sub
mov
mov
gs
pushf
data16
ds
call
test
xchg
inc
ds
out
cmc
mov
dec
dec
or
in
pop
push
push
lret
cmp
xor
test
sub
rclb
push
sub
or
push
sbb
dec
pop
int
cli
pop
shll
xchg
mull
lahf
xchg
xchg
jge
loope
and
xchg
add
insl
jl
popa
xor
movsl
dec
push
add
add
stc
dec
adc
adc
mov
es
out
lret
push
cmp
jmp
fnstenv
mov
push
das
mov
scas
pop
cli
xchg
mov
mov
xor
ja
inc
sub
jnp
mov
mov
adcl
jb
bound
cmpl
adc
inc
fidivrl
mov
sbb
add
adc
xlat
insb
and
pause
add
fistl
push
push
add
pop
jl
mov
sub
outsb
scas
cmp
xchg
jne
push
sub
movsb
fimull
xor
arpl
lods
out
xchg
mov
loopne
add
outsl
test
dec
jnp
lods
ljmp
loop
popf
xchg
insb
ja
xlat
jmp
sub
add
cmpsb
add
in
shll
dec
adc
add
pop
in
sbbb
inc
movsl
jl
stos
inc
lret
mov
mov
dec
xorb
sbb
cmp
stos
jge
add
dec
dec
jmp
shlb
and
bound
pop
stos
mov
mov
xorb
fldt
imul
js
mov
dec
sbb
add
addr16
fwait
ret
or
shll
stos
jle
sub
mov
cli
fnstenv
aaa
sub
dec
pushf
int3
cmpsl
ret
pop
jl
inc
mov
repnz
daa
adc
outsb
inc
stc
imul
addb
mov
lret
push
arpl
mov
es
pop
loop
adc
push
jb
cmpl
sbbb
decb
push
pop
pop
jno
xor
sub
scas
dec
sbb
fstpt
std
sbb
pop
pop
push
dec
pushf
sub
jl
ficomps
sub
xchg
cmp
xlat
arpl
lods
push
stos
insl
in
xchg
jo
in
enter
jnp
dec
lret
ficompl
or
xchg
sbbl
bound
std
iret
lods
mov
movsb
or
push
dec
xor
clc
sub
push
into
dec
push
sub
jbe
xor
xlat
dec
xor
shrl
test
push
push
out
testb
dec
lods
push
sahf
mov
cmp
std
jle
xorb
into
cmp
dec
push
push
adcb
mov
stc
xchg
xor
fdivrl
and
inc
mov
sbb
aas
dec
mov
mov
ficoml
out
inc
popf
push
arpl
js
mov
mov
sbb
mov
sar
mov
add
pop
adc
mov
lret
insl
dec
mov
mov
jns
sbb
jbe
xlat
inc
dec
xchg
pop
aad
into
icebp
xchg
inc
int3
lahf
jae
rcrb
jecxz
popa
lds
lret
xlat
pusha
dec
mov
stc
adc
or
cwtl
sub
stos
jno
and
mov
enter
mov
dec
mov
ja
sub
mov
pop
dec
add
aas
inc
mov
loop
popf
sbb
xchg
jg
in
xchg
mov
imul
dec
les
sbb
dec
cs
idivl
jle
daa
mov
lods
mov
cmc
subl
mov
add
addr16
ja
push
sbbl
ja
jge
pushf
push
and
and
orb
and
and
sub
lret
cmp
xchg
arpl
or
fstps
inc
popf
lret
arpl
loope
pop
cmp
daa
add
pop
xor
xchg
lcall
add
jge
and
sbb
stos
cli
mov
and
jb
repnz
mov
iret
or
sub
fwait
xchg
or
inc
xor
or
stos
mov
push
mov
jle
mov
dec
data16
inc
shlb
mov
xchg
add
shll
sarb
jae
dec
daa
push
xor
js
pop
pop
cmp
push
lea
pop
xor
cli
pop
fwait
push
ficomps
imul
pop
push
cmc
out
sub
scas
xchg
dec
add
mov
and
out
jno
lock
rcr
push
adc
pop
mov
fimull
pop
xor
push
jno
rorb
xor
jae
sbb
add
out
push
and
js
stc
xorl
lods
xlat
clc
int
cmp
js
add
js
xchg
jp
mov
insb
cmp
inc
mov
jle
std
xlat
push
cmp
ljmp
or
or
imul
ret
std
mov
dec
xlat
push
popl
mov
loopne
push
push
imul
cs
jb
addr16
dec
popf
xor
jnp
fnstcw
lret
popa
stos
jns
dec
int3
cltd
mov
fdivrp
test
adc
sub
cmp
fcmovne
enter
imul
stos
xchg
nop
mov
xor
or
notb
stos
jb
sbb
pushf
lods
xor
push
push
shll
add
lahf
and
icebp
js
sahf
pushf
jecxz
or
movsb
push
push
mov
fwait
mov
xor
inc
push
add
data16
sub
out
movsl
jbe
push
jecxz
sub
test
sarl
ficompl
inc
popa
push
test
gs
lret
or
cs
mov
jae
adc
cmpsl
mov
jae
and
sub
stos
in
aam
dec
imul
movsl
adc
xchg
add
shlb
xor
jbe
stc
sarl
cmp
inc
addl
imull
pop
in
or
mov
je
jp
imul
dec
cmp
jg
into
stos
test
adcb
jle
cli
and
push
cmc
and
adc
sbb
dec
insl
sub
pushf
imul
imul
sub
jg
xor
xlat
das
pop
xchg
rorl
mov
adc
addr16
mov
pop
mov
sti
jo
pop
xlat
xchg
dec
test
adcb
push
fistl
fwait
xchg
fistpl
mov
or
sub
dec
fxch
std
and
mov
ret
mov
cmp
hlt
mov
jl
adc
inc
bound
mov
and
or
push
add
repnz
std
mov
xchg
mov
cwtl
sub
sub
or
out
jb
cli
jp
xlat
lods
js
jae
lea
fnstenv
dec
sub
lods
dec
lods
stos
fsubs
shrl
inc
sbb
sbb
push
fistpl
cmp
jbe
orb
push
js
ja
inc
xlat
les
mov
sub
lahf
fs
pop
xchg
fcmovnb
push
gs
pop
arpl
dec
mov
in
pop
loopne
in
cmpsl
adc
std
cmpl
mov
jg
cmpsl
xchg
flds
or
cmc
jle
js
and
pop
mov
mov
fidivrs
jns
outsb
cmp
add
dec
pop
push
daa
add
add
mov
imul
out
sbb
or
shlb
jns
jecxz
push
nop
pop
fwait
rcrl
aaa
andl
fistpl
add
cmp
mov
loope
imul
leave
xchg
mov
pop
xor
sbb
cmp
out
cltd
adc
insl
out
push
add
std
jg
or
mov
std
fdivr
pop
lret
and
cmpb
sbb
pop
inc
lcall
mov
push
push
dec
xor
popf
and
dec
and
pop
andl
push
jns
or
ja
cs
and
xchg
add
pop
jl
push
lret
hlt
push
mov
mov
fidivrs
mov
ja
mov
dec
jle
pop
jl
cwtl
jl
stos
movsl
ds
inc
cmpsl
shll
add
and
imul
cmp
repnz
test
bound
dec
lods
js
test
ret
push
mov
cmp
sbb
cmpsl
das
loop
and
lret
lds
xor
movsl
sti
and
icebp
dec
leave
pop
lock
xchg
pop
mov
or
and
cwtl
movsl
sub
dec
fstpt
dec
mov
repz
jno
movsb
pop
dec
mov
push
xchg
lret
jge
stos
lret
add
pop
repz
and
and
lods
and
inc
fdivrs
ret
add
js
or
movsb
adc
ljmp
sahf
in
jne
shlb
sti
cli
in
xlat
mov
jae
push
sti
jns
xchg
test
or
push
stos
mov
inc
xor
cld
enter
fiaddl
sbb
mov
push
clc
inc
add
jge
addr16
pop
xchg
xor
and
std
sub
xchg
adc
pop
cltd
movsl
xchg
mov
fchs
jne
ss
jno
fwait
loop
sbb
jbe
jno
sub
mov
push
hlt
add
adc
movsl
mov
push
sbb
sub
cmp
push
movsb
mov
xor
in
das
pop
or
mov
sbb
fldcw
cmp
sub
fchs
lahf
push
imull
adc
fcompl
push
imul
inc
dec
shr
mov
roll
jno
nop
and
jb
dec
lahf
cmpsb
and
hlt
xor
aad
js
fcompl
sti
jae
fstps
sub
push
jae
fdivrs
nop
push
lock
adc
imul
imul
out
dec
idivb
je
mov
fisttpl
lea
jo
jno
stc
adc
fldl2t
add
stc
or
xlat
jge
fwait
and
mov
jg
mov
mov
rorl
and
les
enter
cmp
mov
aad
mov
pop
hlt
das
sub
jae
cs
adc
sub
lods
lcall
lret
xchg
mov
xchg
push
or
mov
iret
cmp
cwtl
lret
fs
cld
mov
scas
xor
iret
cmpsb
jecxz
insl
cli
jae
ret
push
nop
push
je
std
negb
xlat
fcom
cltd
mov
aaa
push
cld
fcmovu
xchg
pushf
lock
sbb
sbb
adc
mov
and
test
leave
bound
or
outsb
stc
add
das
cmc
ds
mov
aas
lea
into
call
adcl
hlt
sarb
ja
push
aas
arpl
jle
jo
mov
stc
js
xor
cmp
ds
lock
gs
jne
inc
jae
cmc
cmpsl
cmp
dec
leave
adc
jns
shl
push
in
or
jge
jo
pop
adc
cmp
inc
lret
out
and
inc
add
dec
and
jp
adc
mov
outsl
sub
xlat
inc
xchg
dec
rcr
adc
and
sub
lcall
ret
loopne
and
aam
mov
in
push
jne
sub
jmp
aam
out
xor
xchg
iret
mov
sub
push
lcall
adc
in
cmpsb
push
dec
jne
sub
or
jecxz
stc
cmp
jb
pop
or
cli
stos
test
ret
clc
jns
iret
call
cwtl
xor
ret
ljmp
cmp
out
and
scas
ja
or
outsb
sub
jae
or
rcrl
sub
cltd
dec
lahf
rol
movsl
cli
xchg
mov
adcl
lock
pmaxub
push
jnp
sbb
ret
and
test
jae
sub
push
stos
pushl
imul
add
jno
ret
hlt
lock
stos
sub
out
loopne
fistpl
jg
dec
mov
out
xchg
sub
lcall
pusha
inc
test
imul
adc
xchg
push
and
shlb
dec
arpl
xchg
icebp
and
pushf
push
cwtl
mov
xchg
stc
push
add
sub
test
push
shl
int3
and
loop
clc
fistpl
dec
mov
dec
dec
mov
mov
xchg
pop
dec
jno
add
addr16
push
cmp
fldt
jne
sbb
mov
insl
mov
jl
pop
lds
sub
pop
es
xchg
pop
cld
mov
mov
xchg
push
fcmovne
out
mov
les
addr16
xchg
fnstcw
push
int3
outsl
into
mov
dec
mov
addl
imul
mov
out
enterw
cmp
cmc
push
mov
xchg
adc
xor
sbb
cmp
sub
imul
and
dec
std
cli
xlat
sti
xor
sbb
rcrb
out
sub
xor
adcb
nop
mov
sbb
dec
cmp
dec
lret
lods
ljmp
mov
fistpl
and
pushf
cltd
lods
push
sbb
and
out
mov
pusha
pop
push
dec
icebp
sbb
decl
rolb
mov
fldl
jae
movsb
daa
push
fcmovne
jp
adc
imul
xlat
je
cld
cmp
cmp
fiaddl
inc
jp
test
cmp
emms
outsl
in
xlat
xchg
mov
and
mov
sarb
and
add
subb
inc
xor
dec
dec
aam
fdivrl
or
adcb
dec
sub
cmp
hlt
xchg
lea
xchg
xchg
ret
out
ret
push
idivl
sub
je
xchg
mov
jne
lods
xchg
mov
sbb
mov
dec
cmp
dec
sub
xor
mov
icebp
jo
xchg
ficomps
scas
pop
leave
dec
push
sti
popf
push
mov
lcall
clc
xadd
sub
jae
fwait
cmp
sub
repnz
test
xor
xchg
or
popf
lret
dec
adc
xorb
push
fildl
dec
sub
pop
or
aad
roll
inc
mov
sbb
sbb
mov
mov
push
mov
cmp
push
test
cmp
dec
inc
xchg
repz
in
xor
sub
movsl
stos
xchg
mov
loope
or
int
xchg
popf
sub
aaa
insb
jae
xlat
lods
jno
mov
push
clc
fs
clc
cmpb
sub
mov
dec
stos
fbld
jle
mov
std
mov
cld
mov
jl
pop
add
sbb
add
sti
dec
cwtl
add
rep
fnstcw
aas
test
outsl
fldt
sbb
dec
shrb
int3
or
xor
ret
gs
xor
pushf
mov
loop
dec
lret
jmp
insl
lods
xor
stos
fs
bound
std
popa
xchg
cmp
mov
loop
cmp
divb
inc
mov
stos
mov
adc
insb
pushf
mov
out
outsl
test
xor
push
out
pop
mov
out
jno
in
pop
and
and
je
test
in
scas
xorl
ret
sub
or
and
sbb
mov
push
movsl
mov
pop
or
dec
sub
xor
jl
faddl
mov
int3
cwtl
mov
push
mov
ja
insb
lcall
pop
sub
jae
mov
adc
into
inc
cmp
xlat
mov
dec
fwait
ret
jbe
sbb
je
jns
aas
add
pushf
pushf
jae
xlat
adc
gs
xor
push
cmp
xchg
call
orl
sbb
ret
pop
xchg
sub
popa
mov
loopne
or
pop
jo
xor
arpl
inc
add
dec
jne
push
pop
arpl
jecxz
cmp
jmp
xor
fldt
mov
pop
sbb
cmp
mov
cmp
inc
cmp
aad
leave
lret
and
add
arpl
loope
mov
pop
or
lods
inc
cltd
pop
mov
adc
or
aam
test
jae
imul
cmp
lret
pushf
ja
sbb
shll
mov
mov
out
jmp
ret
dec
cld
adc
mov
inc
fwait
mov
std
mov
inc
xchg
sbb
add
test
inc
sub
sbb
pusha
leave
pop
xlat
inc
rolb
iret
pop
jmp
pushf
adc
je
cmc
fnstcw
pop
pop
fs
xlat
sub
lret
cmp
add
pop
stc
jg
push
sahf
xor
cmp
adc
sub
and
dec
sub
jno
out
jae
aas
outsb
sub
push
lret
insb
popf
xlat
and
inc
add
inc
hlt
fcomp
adc
dec
mov
xchg
arpl
jecxz
in
push
xchg
gs
mov
movsl
mov
out
mov
inc
pop
clc
or
call
dec
push
jg
adc
cmp
in
mov
push
mov
xor
cltd
std
cwtl
push
cmc
out
xor
inc
mov
ficomps
icebp
jge
xor
mov
or
push
fisubrs
pop
inc
mov
pop
popf
stc
cmpsl
lret
or
fistpll
test
or
sub
cmp
ficoml
jns
cmp
lret
popf
xorb
out
into
rorb
mov
push
cmpb
jp
xchg
cli
mov
clc
jo
ljmp
gs
mov
dec
cmp
stos
mov
test
adc
movb
mov
subl
jns
and
mov
imul
sbb
adc
mov
jae
push
pop
push
pusha
and
bound
scas
sbb
sbb
sbb
xor
xor
pushf
stos
shl
inc
cmp
xchg
repz
xor
dec
xor
sbb
fnstcw
sbb
mov
mov
cwtl
int
add
cmpsb
mov
inc
inc
fcom
cmpsl
movsl
mov
jb
xor
add
jp
xlat
mov
mov
pop
sub
ja
icebp
jbe
lock
stos
mov
inc
inc
jle
cld
and
dec
xlat
js
sbb
cmpsb
or
push
dec
inc
adcl
mov
icebp
jbe
inc
pusha
mov
lcall
shll
or
xor
ja
push
mul
xchg
imull
rcl
adc
add
daa
pop
mov
clc
jo
fs
push
daa
bound
mov
jae
push
sbb
movsb
shll
fcmovnbe
jg
popf
lods
inc
xor
das
loopne
movsl
ret
mov
xlat
dec
mov
jmp
jp
xor
and
jae
adc
xchg
data16
into
add
pop
andl
sbb
and
mov
jecxz
sbb
pop
dec
lock
xchg
sub
pop
xchg
adc
lahf
and
mov
stos
cmp
mov
imul
jnp
mov
insl
fidivs
jne
push
inc
xchg
cmp
pand
nop
and
push
out
jge
leave
mov
out
mov
movsb
mov
or
push
pop
jmp
inc
jmp
xor
jnp
aam
push
jae
flds
cmp
jo
push
inc
out
les
ja
shll
or
scas
test
sub
loop
push
adc
lcall
mov
xchg
dec
mov
adc
insl
adc
jecxz
jne
jbe
aaa
inc
and
xor
addb
outsl
rep
orl
je
loopne
mov
xor
out
in
xlat
pushf
cmp
ret
std
orb
mov
jge
jnp
xlat
mov
pop
test
inc
and
int3
arpl
mov
xor
sub
imul
les
mov
dec
push
movsb
or
sub
and
outsl
sbb
push
mov
mov
insl
in
inc
inc
outsl
xor
ret
inc
cmc
dec
mov
roll
inc
das
or
enter
mov
add
mov
dec
or
xor
outsl
stc
add
sarb
push
sub
loope
mov
mov
sub
stos
sub
sub
fldenv
adc
testb
movsl
insl
outsb
cld
dec
sbb
push
fsts
or
push
pop
push
jae
pop
mov
ds
cld
push
lods
js
std
addr16
enter
pop
enter
popf
sbb
out
dec
xor
lock
add
aas
mov
mov
in
pusha
lcall
lea
mov
jp
inc
pushf
dec
cmp
pushf
mov
push
jns
ss
pop
adcb
sub
test
pop
mov
ret
xorb
loopne
push
xchg
repz
jne
push
les
xor
rorb
adc
add
dec
or
sub
pop
pop
push
sub
in
cs
fst
repz
nop
dec
push
lret
ja
push
in
adc
stos
xor
mov
jl
arpl
mov
cmp
mov
cwtl
cmp
push
sbb
pushl
or
or
dec
in
fs
mov
arpl
inc
ret
pop
sbb
dec
pop
xchg
dec
into
ret
add
int3
imul
mov
fldt
addb
shll
out
push
cmp
pushf
mov
jle
add
int3
cmp
xor
inc
scas
dec
or
jne
pop
enter
xor
xorb
push
push
stos
cmp
int
push
mov
imul
scas
jmp
jns
shrl
stc
or
ja
outsl
fcomps
hlt
or
sub
and
add
cmp
and
jbe
adc
xchg
mov
jae
cmp
xchg
add
inc
je
add
icebp
movsl
mov
sub
mov
shr
sbb
push
cmp
ja
dec
adc
sub
xchg
icebp
pop
ljmp
cmp
aam
jge
sbbl
rcrl
fnstcw
mov
pop
mov
repnz
cmpsl
jmp
stc
fcmovb
xor
rorl
repnz
mov
pop
add
mov
or
push
andb
cmpsb
divb
and
mov
enter
push
shl
cmp
ficoms
cmp
cmc
inc
mov
int3
push
push
ret
imul
jg
or
jg
mov
mov
leave
sub
push
imul
imul
jg
lods
scas
jae
pop
xor
test
hlt
or
mov
sahf
inc
mov
and
mov
std
and
mov
ret
mov
cld
fcoms
ds
jl
mov
mov
outsl
push
push
jp
pop
mov
sub
stc
ss
push
and
fldt
add
addr16
dec
cpuid
push
mov
sbb
sbb
imul
add
imul
cmpsl
and
ljmp
xor
aad
and
arpl
test
jno
imul
jne
sbb
fdiv
add
fstpt
cmp
xor
cmpl
out
jo
sub
push
cmp
loop
jae
dec
push
lret
inc
dec
jge
rcll
sbb
std
and
add
out
stc
call
outsl
add
adc
push
mov
cmp
xor
ds
lods
ja
mov
sarb
js
push
add
cmp
dec
push
jge
nop
inc
sbb
lea
std
sbb
mov
loopne
aam
fidivs
mov
mov
ljmp
ror
inc
std
scas
iret
adc
dec
xorb
cmp
enter
push
dec
push
sbb
cmp
test
inc
push
lahf
daa
mov
mov
xor
sbb
push
icebp
call
imul
out
rorb
ljmp
ret
pushf
rcrb
cmp
xlat
iret
xor
mov
jp
or
mov
loope
lods
mov
js
fildl
xchg
std
push
mov
lods
ljmp
xlat
pop
dec
mov
lds
xor
lahf
addb
jge
cld
imul
insb
xchg
fprem
xchg
pop
loope
pop
inc
es
mov
sbb
fcoml
test
dec
data16
insb
stc
dec
cltd
cmp
aas
jae
inc
lahf
sbb
jne
inc
stc
mov
sub
fimuls
int
loop
adc
js
mov
hlt
gs
adc
fstpl
mov
je
popa
or
shrl
repnz
pop
jae
xor
insl
lds
lahf
jns
pop
cmpb
pop
cmp
mov
or
lahf
ja
sahf
mov
das
cld
fstpt
imul
sbb
gs
add
addr16
je
push
xlat
test
outsb
ja
add
test
shl
or
fnsetpm(287
pop
outsl
add
push
cld
pop
and
add
pop
xor
ret
dec
adc
jmp
ss
ret
scas
jnp
mov
dec
sbb
ret
ja
xchg
dec
xchg
inc
dec
xchg
adc
pop
cmp
push
adc
fidivl
loop
jbe
fistl
mov
and
fwait
js
insb
inc
xorb
test
sbb
or
cmp
xlat
dec
pop
cmp
push
xchg
sub
inc
pop
jp
adc
cmp
cmp
cld
inc
or
mov
das
adc
sahf
push
jno
jae
movb
popf
shrb
fs
mov
or
pop
lahf
or
dec
mov
push
xlat
pop
push
fiaddl
fidivrl
or
xor
decl
es
nop
sub
cmpl
or
ret
xchg
pop
mov
js
inc
stos
and
push
testl
and
push
sbb
mov
dec
not
or
bound
sub
popa
rcrb
and
bound
jp
fldl2e
addr16
rorl
pop
mov
pop
sbb
xchg
mov
lock
cmp
or
ja
xchg
ds
subl
lods
and
cld
mov
mov
fisubrs
sbb
loope
lea
je,pn
mov
sbb
ja
add
loopne
push
dec
fwait
jno
xor
dec
sub
jb
and
dec
push
aas
outsl
sbb
jne
jmp
pushf
jb
int
lods
dec
adc
or
jno
sub
dec
cmp
jle
cltd
mov
bts
dec
xor
mull
jnp
adc
push
jp
fcmovnu
mov
push
xor
test
cmp
out
sarl
jo
into
cmp
dec
mov
pushf
and
push
stc
std
mov
outsl
mov
icebp
shlb
sub
jne
add
xor
dec
cmp
notl
dec
mov
sbb
lods
xor
leave
sti
imul
push
test
cmpsb
xor
pop
or
fcoml
ds
cltd
mov
xor
jecxz
jns
fldenv
stos
iret
enter
adc
cwtl
ja
push
xchg
sti
pop
or
adc
adc
pop
fstpt
iret
cmp
test
push
jecxz
sbb
cmp
lock
inc
sub
rolb
ja
movsl
mov
mov
fnstenv
xchg
xor
fadds
add
jae
sub
dec
aad
je
add
adc
push
in
xlat
push
mov
or
cwtl
or
mov
addr16
and
subb
xlat
sarl
or
add
ja
test
data16
nop
sub
fcmovnb
pop
pusha
loopne
add
cmp
movsb
xlat
sub
push
lret
xor
repnz
jge
sub
aam
aam
and
pusha
in
pop
bound
gs
add
lcall
icebp
adc
xchg
ret
mov
xchg
or
mov
jp
inc
lods
dec
jl
outsl
mov
and
fwait
lahf
sbb
cmp
inc
pop
xor
xlat
mov
loope
and
jae
fcmovnb
cld
fwait
jge
sbb
jge
das
fs
js
xchg
xor
push
lods
jp
and
sbb
lods
sub
fldenv
movsl
lcall
mov
jnp
cmp
jecxz
mov
pop
mov
xlat
xorb
sbbl
fldt
imul
jnp
flds
cmp
xor
inc
pop
iret
push
mov
test
pop
jne
mov
cmp
jp
jns
add
jp
xlat
shlb
ret
adc
dec
gs
mov
cmc
je
mov
cmp
mov
pop
js
je
cwtl
xlat
cltd
int
daa
outsl
adc
inc
fcoms
dec
imul
scas
imul
jno
outsl
adc
and
adc
xor
sbb
fucomi
test
fnstcw
xchg
cmp
sbb
pushf
lods
rcl
and
mov
in
cs
dec
add
jecxz
jp
daa
data16
pop
add
adcb
mov
adc
cltd
in
mov
mov
xor
cwtl
mov
add
fwait
cwtl
setne
lret
xchg
pop
cli
xchg
xchg
push
scas
xchg
stos
xchg
xchg
pop
imul
stc
popf
sub
pop
or
sbb
clc
mov
jo
adc
xchg
add
push
das
add
jns
ret
jne
nop
xchg
fimull
test
mov
and
adc
jns
lds
xchg
pop
push
outsl
ss
adc
mov
xor
aam
mov
aam
sub
stc
pop
xor
xchg
lock
mov
hlt
xor
inc
imul
andl
lret
jl
sbb
or
dec
into
pop
leave
sbb
pop
fnstenv
out
xchg
jp
pop
jmp
das
lcall
jns
fnstcw
das
repz
add
icebp
fistpl
insl
mov
pop
and
add
jecxz
std
imul
push
lahf
daa
pop
cmp
xlat
adc
popf
push
xchg
movsb
dec
jle
push
cmpb
jo
pop
inc
jnp,pt
dec
shlb
les
out
cwtl
stc
jge
jp
xor
nop
add
fmuls
outsl
mov
lock
sbb
mov
or
sbb
and
cmp
add
stos
pop
sub
jns
inc
fdivrl
sbb
or
fsubp
or
pop
and
add
fstpt
jb
ret
sbb
jno
or
test
xchg
push
mov
dec
fcmovnbe
push
xlat
hlt
in
xchg
aam
pop
or
mov
pop
dec
ret
jae
test
jg
loope
lret
jb
popa
and
dec
jno
lock
fcos
loop
jmp
xchg
sbb
fiaddl
fwait
int
mov
sub
out
test
iret
in
int3
in
scas
rcrl
mov
dec
jle
xchg
pop
jmp
dec
repz
ja
in
push
sbb
mov
xlat
add
jge
push
mov
aas
dec
xlat
gs
cmp
push
call
jp
aaa
popa
shlb
mov
adc
imull
imul
jl,pt
in
xchg
push
enter
insb
js
push
jnp
insb
pop
xchg
dec
sbb
xor
dec
aaa
pop
or
jae
test
sbbb
std
jecxz
jle
inc
addr16
inc
and
js
int3
stos
dec
int
lock
inc
js
sub
imul
ret
test
fcomi
jb
pop
dec
xor
pushf
and
pop
cltd
lods
jnp
dec
push
mov
aas
fcmovnu
jbe
cmp
insb
mov
insl
ljmp
repnz
xor
sub
fistpl
push
jae
popa
enter
loop
xor
fildl
fistl
out
xchg
shl
mov
into
les
cmp
fldcw
add
lahf
adc
adc
cwtl
push
mov
push
jns
insl
shll
jbe
pop
pop
pop
dec
pop
in
cmp
jno
push
xor
pop
test
jg
sti
pop
push
and
outsb
out
jp
mov
xlat
fisubs
push
iret
sbb
push
int3
mov
leave
add
inc
dec
fucomi
or
dec
sahf
popa
and
jge
fcomps
mov
adcl
hlt
jmp
xor
mov
pop
lret
jae
xlat
fnstsw
inc
jb
ljmp
fdivrl
push
out
ret
xchg
pop
cmp
fildl
xchg
jae
xor
andb
jnp
int
or
out
dec
jb
mov
scas
sub
pop
xor
pop
add
arpl
or
add
adc
js
jns
aam
mov
inc
and
jae
idiv
mov
cmc
cmp
in
pop
mov
fsub
push
ds
sbb
popa
es
pop
out
prefetch
or
rcll
mov
pop
popa
nop
pop
pop
clc
xchg
lahf
aaa
cwtl
ficoms
notb
jmp
scas
nop
in
push
rcll
aad
pop
or
push
sub
push
mov
rcrb
rcl
in
aad
xor
sar
sbb
sbb
xlat
cld
cmp
jbe
push
cmpsl
sub
cwtl
xlat
sub
sbb
pushf
or
aad
ficoms
jp
stos
lea
push
inc
inc
scas
jmp
cli
jmp
ret
fwait
or
mov
push
mov
lret
push
in
jns
inc
frstor
ret
mov
sub
loopne
jae
je
add
sub
in
movsb
xlat
pop
sbb
out
sub
shll
jg
out
daa
mov
in
testb
sbb
movsl
and
movsb
out
ret
pop
repz
stc
xchg
push
add
xchg
daa
inc
nop
mov
xor
stos
add
mov
das
sbb
mov
dec
mov
dec
in
push
subl
mov
flds
in
xor
cs
mov
jo
dec
outsw
pop
cmc
dec
dec
leave
mov
dec
cmpl
lret
fcomps
das
mov
inc
push
shlb
clc
cmp
xchg
scas
mov
mov
xchg
repz
fimuls
mov
push
jae
xchg
mov
bound
fwait
sarb
mov
jno
xchg
cltd
fidivs
xlat
and
hlt
orb
inc
rcrb
mov
lods
sbb
jl
fstpt
aas
jmp
addl
jl
push
mov
xor
cmp
lcall
xchg
dec
sahf
sbb
mov
xchg
pop
fisubl
mov
jbe
loope
cli
movsl
cmp
cmp
mov
sbbl
addr16
jg
dec
imulb
ljmp
xchg
mov
flds
xorl
lahf
xlat
adc
insb
fistpl
mov
pop
mov
jno
fdivl
das
lret
insb
pushf
and
mov
movsl
push
mov
jne
outsl
xchg
mov
je
pop
movsl
sub
xchg
xor
dec
shll
out
mov
mov
lahf
xor
lcall
jae
push
aam
sub
sub
cltd
xor
out
adc
and
aaa
fsubr
mov
mov
mov
out
mov
dec
int
imul
and
stos
pop
cmp
push
pop
aad
dec
xchg
test
mov
add
and
mov
les
fsub
pop
and
clc
test
in
imul
les
icebp
leave
pop
pop
or
or
popa
xlat
jbe
int3
push
das
fsubrl
pop
popa
in
movsl
dec
push
aam
mov
add
pop
pop
add
dec
push
mov
lahf
fcoms
cwtl
mov
xor
arpl
mov
add
arpl
fwait
aad
adc
nop
sub
sub
int3
std
jmp
loope
imul
test
insb
iret
inc
clc
xor
xchg
jge
stc
pushf
lret
ljmp
ja
cmp
aam
int3
push
dec
jl
mov
push
clc
cli
lock
mov
jecxz
scas
daa
jp
fnstcw
out
lret
test
je
stos
xlat
sbbb
nopl
insb
shrl
pop
xor
xchg
xor
xor
jns
add
inc
xlat
jg
push
inc
mov
add
jb
pop
js
jnp
xor
add
fmul
xchg
inc
mov
sub
xchg
scas
addr16
or
stc
dec
mov
cmp
aam
ja
and
push
sbb
push
cmp
push
test
or
jp
sub
add
xor
nop
insl
jae
shll
lods
jae
adc
ds
in
out
cmp
mov
push
cmpb
in
xor
mov
sbb
dec
imul
push
jb
sub
decb
xchg
testl
pop
xor
repz
ljmp
hlt
adc
xchg
pop
out
out
jbe
addr16
or
mov
out
orl
pop
push
mov
adc
imul
add
cmpb
dec
cmp
ja
add
insb
xorb
je
pop
cmpsl
pop
ret
adc
jne
stc
jmp
jecxz
jge
jne
ljmp
jno
xlat
or
or
mov
dec
movsl
lods
into
fcmovnu
or
or
int
pop
push
lcall
jno
inc
bound
lret
mov
clc
mov
stc
insl
xlat
dec
iret
pop
jnp
int3
sbb
cs
scas
out
dec
mov
push
in
sbb
and
pop
in
jae
fldenv
orb
stc
movsb
jne
and
dec
repz
dec
pop
push
repnz
fisubrl
test
js
and
andb
xchg
cmpsl
imul
test
fcmovnb
sbb
mov
mov
bound
sub
mov
adcb
or
call
cli
aam
sub
push
test
cmpsb
mov
cld
ljmp
jl
pushf
add
mov
sbb
mov
fiaddl
fwait
lret
pop
lds
xor
add
jl
pop
mov
icebp
aad
pop
and
and
jmp
push
dec
jae
add
popf
shll
test
sub
test
xlat
imul
push
js
cmp
jmp
mov
mov
sbb
daa
clc
cmpsl
fs
ja
or
test
iret
sti
sub
xor
adc
add
dec
lret
mov
sbb
xchg
lahf
jae
mov
push
inc
or
mov
test
inc
stc
and
cmp
rorl
pop
inc
lcall
xlat
xorb
cmp
xchg
dec
sub
add
add
or
imul
test
pop
lea
test
int3
pop
xor
in
dec
push
add
xlat
lods
pop
cmp
mov
mov
popf
insb
adc
movsb
cmp
push
stos
xchg
mov
and
enter
cld
nop
sbb
mov
xchg
ficoms
imul
sub
or
std
mov
or
add
xchg
loopne
sub
pop
pop
iret
inc
xor
jno
jb
and
mov
mov
out
pop
ds
in
and
dec
xlat
dec
adc
cmp
jnp
inc
dec
movsl
pop
sub
mov
pop
repnz
jns
dec
mov
add
mov
push
mov
cmp
fcomi
mov
xchg
arpl
mov
jb
xchg
and
jg
stos
fwait
sbb
push
jg
mov
xchg
jge
insl
inc
pop
repnz
sub
insb
dec
out
cli
in
jae
into
adc
and
sub
sub
adc
mov
add
push
int
cmp
sbb
pushf
pop
add
lahf
inc
jne
fistpl
jo
shrb
ljmp
clc
das
jns
iret
lea
rcrl
inc
mov
out
xchg
mov
jmp
iret
cwtl
push
pop
jecxz
mov
mov
sbb
push
push
or
insb
stos
fistl
adcl
out
sub
sbb
xor
pop
pop
imul
pop
cmpl
lahf
xchg
hlt
rolb
pop
xchg
lret
add
std
cltd
scas
pcmpeqd
fisubrs
push
sbb
jns
mov
out
mov
mov
call
dec
addr16
fistpl
cmp
nop
lcall
popf
int3
mov
cmpsb
stos
shll
mov
push
pop
or
push
std
in
fildll
mov
arpl
xchg
cmp
lret
mov
arpl
xchg
sbb
enter
mov
sub
outsb
mov
xor
js
test
fadds
int3
adc
sti
popf
mov
or
xor
add
fwait
ljmp
sub
mov
mov
or
jl
dec
insl
lahf
add
pushf
jns
jl
sbb
jno
mov
jmp
jecxz
add
xchg
pop
mov
dec
cld
pusha
push
xor
adcl
test
inc
movsb
cli
or
fdivrs
jns
in
rorl
mov
dec
xchg
lock
out
fisubrs
cld
cmp
dec
dec
and
test
or
fldt
xorl
fwait
xlat
sub
mov
ja
fcmovnbe
fldenv
push
cmp
stc
or
xchg
out
sarb
dec
push
nop
lcall
cmp
test
fldcw
or
push
sub
pop
dec
xlat
cs
adcb
out
inc
stos
in
pop
adc
xchg
ja
cli
imul
fwait
dec
dec
push
sbb
arpl
adc
scas
clc
jae
xlat
pop
ss
dec
dec
dec
cli
divl
xchg
adc
xor
mov
or
cmp
fnstenv
xchg
inc
fsts
push
andl
xor
push
imul
push
jg
loop
stc
int
pop
sub
iret
and
xlat
xchg
jmp
lcall
inc
add
out
cmc
imul
outsl
xchg
out
fs
out
stc
push
cmp
or
add
fcmovnb
out
pop
and
pop
mov
pop
test
and
mov
jl
xor
xchg
dec
cmp
jns
inc
sbb
xchg
cmp
dec
and
testl
pop
in
mov
je
push
inc
loopne
dec
push
rcr
in
jg
cltd
pop
lahf
push
mov
jo
push
repnz
push
arpl
clc
fwait
xchg
addr16
jle
inc
das
mov
mov
add
repnz
or
pop
enter
stc
int
push
nop
inc
mov
dec
pop
jecxz
pop
mov
jle
sar
pop
mov
ret
xchg
pushf
sbb
lock
and
stos
mov
xor
mov
movsb
push
aam
xchg
xor
call
jae
enter
sub
mov
pop
aas
mov
repnz
mov
or
popa
or
xor
ljmp
pop
mov
jae
push
adc
xorl
aad
mov
fcmovnbe
fisubs
test
fildl
pushf
pop
add
dec
or
push
push
and
xlat
mov
push
test
jp
adc
inc
imul
xchg
ret
or
dec
rcl
mov
cmc
xor
test
jg
sub
fcmovnbe
or
fidivrl
and
fimuls
sub
inc
lret
movsl
jle
clc
xchg
mov
ret
cmp
jns
add
mov
mov
push
sbb
js
insl
xchg
jns
sbb
mov
mov
inc
imul
enter
and
mov
dec
inc
mov
arpl
jo
mov
lea
sub
enter
inc
push
push
in
stos
jge
ret
lret
sbbl
cmc
mov
mov
les
and
lds
pop
popa
jne
jg
jmp
in
jmp
xchg
pop
add
dec
mov
or
xchg
in
xchg
std
clc
xchg
addb
mov
cmpsl
xchg
xchg
adc
lods
mov
jp
jecxz
cmp
or
push
jg
pop
mov
xlat
pop
jno
mov
fimuls
mov
xchg
push
jp
push
mov
out
xchg
jbe
fcoms
jno
xlat
xor
xchg
ljmp
mov
stc
sbb
adc
sbb
repnz
shr
jmp
hlt
fstpt
mov
xchg
out
jmp
cmp
jmp
cld
std
cwtl
or
sbb
xchg
cmp
lret
mov
jo
jl
rcrb
fdivrs
adc
push
jno
mov
repnz
test
popf
cmp
sarl
sub
pop
push
orb
jecxz
in
push
pop
mov
aaa
jb
mov
imul
scas
in
inc
and
dec
xor
sbb
das
cmp
cmp
mov
jp
stos
data16
add
std
push
pop
jecxz
js
jno
mov
jns
push
dec
movsb
mov
jp
pop
out
xchg
fldcw
push
scas
test
ljmp
out
into
jg
and
dec
add
push
and
xor
mov
cltd
movsl
je
pop
jge
xchg
dec
ja
js
in
andb
cmp
jnp
pushf
mov
inc
insb
loope
clc
sub
je
or
pop
cmp
mov
adc
push
icebp
pushf
xlat
dec
inc
add
jb
and
jnp
cs
xchg
mov
adc
stos
adc
outsb
push
or
rcr
dec
lods
xchg
cmp
or
sarl
movsb
sub
cmp
xor
push
push
sub
sbb
and
aaa
pop
jne
jge
in
jmp
sbb
dec
jle
dec
and
push
sti
sbb
dec
movsb
mov
jl
fimull
in
inc
lcall
add
scas
outsb
pop
test
stos
pop
push
aam
test
pop
dec
pop
inc
sub
xchg
or
xor
rcrb
inc
add
mov
add
decl
sub
mov
mov
and
sub
fistl
push
div
fldenv
jmp
mov
shlb
push
sub
lcall
add
lods
push
lds
adc
mov
and
addl
cmp
sbb
hlt
jae
dec
rolb
sbb
lea
xor
push
mov
xchg
jbe
icebp
mov
adc
notl
xor
pop
xbegin
cmpsl
mov
fdivrp
xchg
test
ss
cmp
or
loop
inc
and
pop
dec
je
cli
jns
mov
subl
and
mov
lods
test
cltd
imul
xchg
xlat
xchg
jo
push
inc
loop
pop
dec
sub
ds
push
sbbb
or
push
pusha
xchg
mov
mov
mov
imul
mov
dec
push
insl
dec
cli
nop
xor
aas
cmp
pop
fidivrl
in
or
cld
inc
lock
aad
repnz
ds
sub
rcr
and
fisttpl
sarb
jno
adc
repnz
xlat
popf
fwait
xorb
or
and
fcmovnbe
fldcw
adc
pop
mov
cmp
cmpsb
loopne
xor
es
fwait
jno
fstl
adc
mov
pop
xlat
fmuls
sbbb
cld
sbb
outsl
pop
sub
mov
xor
or
insb
mov
fsubp
push
dec
stos
mov
and
jb
fmull
insl
xor
mov
and
pop
xlat
stos
and
cmp
jbe
daa
xor
std
xor
movsl
sbb
pop
mov
mov
mov
xor
mov
or
jnp
in
movsb
pushf
call
rcll
or
movsl
add
mov
xlat
add
xchg
jmp
dec
sub
xchg
mov
std
or
mov
or
or
push
or
gs
repnz
xchg
fwait
cmpsl
pop
std
lea
inc
inc
fiaddl
testl
mov
fsts
fwait
push
mov
in
mov
and
mov
gs
cmp
leave
xchg
rorl
movswl
xchg
aad
daa
cmp
xlat
add
xor
movb
cmp
pop
test
xor
pop
inc
addr16
xlat
inc
mov
and
mov
int
pop
xor
jae
xchg
sub
lahf
mov
push
fnsave
cmpsl
add
nop
push
dec
and
pop
dec
or
jp
sbb
inc
clc
mov
es
dec
mov
lret
mov
sub
cmp
scas
ljmp
push
imul
add
jg
daa
scas
lea
mov
inc
pop
jp
test
cmpb
mov
dec
pop
sti
xchg
aam
fcoms
pop
jmp
sbbl
jg
or
mov
mov
dec
sub
xor
cmp
and
mov
insb
test
out
fs
imul
pop
div
jno
rcll
mov
stos
or
imul
jl
cmp
jno
mov
cmpsb
rclb
adc
cmp
leave
orb
pop
dec
lahf
inc
das
push
stc
pop
scas
mov
sbb
xchg
ljmp
out
mov
gs
cmp
xor
sarl
push
jne
push
dec
mov
push
sbb
call
mov
jp
movsl
sub
xchg
xor
mov
jbe
jns
jae
je
sbb
or
leave
push
mov
ss
gs
ja
lods
stos
sub
popf
orl
ss
and
fnstenv
or
stos
mov
cmp
xor
and
jp
jge
pop
dec
incl
mov
mov
jns
dec
dec
loopne
xor
mov
stc
push
adc
mov
leave
dec
push
cmp
adcb
dec
cmp
adc
dec
xor
xchg
sbb
xor
hlt
xlat
std
push
dec
test
aaa
mov
enter
cld
fldl
in
outsl
sbb
cmp
mov
call
sbbb
jecxz
xchg
in
jns
rol
enter
test
fcomi
adc
pop
push
mov
out
outsl
xor
test
mov
out
lret
iret
dec
aam
sbb
add
push
int
push
test
ds
sub
and
cs
pushf
xor
xlat
inc
mov
test
inc
xchg
stos
push
and
push
cmp
je
cmp
icebp
fs
xchg
jmp
push
ds
xor
cmp
adc
pop
int3
xor
loopne
sahf
cltd
sbb
out
sarb
ret
xor
lods
imul
sub
mov
std
push
pop
xchg
sbb
jge
push
fisttpl
push
fnstcw
mov
nop
aaa
jbe
sbb
mov
mov
mov
sbb
pushf
sub
jecxz
cmc
imul
jne
fiaddl
pushf
pop
pop
ret
jmp
xchg
shr
xor
cmp
fwait
push
fwait
jae
push
xor
jmp
dec
loope
cmc
in
into
mov
xlat
divb
push
lea
cld
stos
pop
inc
lods
imul
popa
sbb
andl
xchg
sub
push
sub
jo
stos
fnstcw
lock
pop
add
test
addr16
rcl
es
dec
push
xlat
sub
adc
lods
int3
sub
adc
add
testb
sub
jg
pop
and
fwait
clc
sub
push
xchg
mov
add
lods
hlt
sub
notl
shll
fwait
add
cmpsl
jl
inc
dec
loopne
loop
int3
ljmp
mov
arpl
inc
jnp
aas
sub
inc
sbb
push
xorb
adc
cmp
jp
xor
fstpt
aam
fsubl
mov
lods
int3
inc
int
and
xor
add
stos
pushf
lea
mov
jbe
imul
imul
ret
jno
xchg
lds
bnd
push
fsts
xchg
mov
test
out
adc
pop
inc
stos
fsubrl
fwait
push
push
and
sub
pop
mov
sub
popa
or
jg
add
ljmp
mov
cs
mov
iret
pop
sub
out
test
sbb
fisttpl
inc
mov
push
call
mov
jmp
mov
hlt
pusha
adc
xchg
add
iret
movsl
test
push
out
pop
inc
push
pop
fistpl
divb
jp
cltd
aaa
out
or
cwtl
rclb
lret
jbe
xchg
lahf
xor
pop
rcl
inc
push
cmp
push
scas
cmp
fdivrl
add
xchg
jmp
mov
in
or
in
sti
dec
nop
pop
dec
loop
pusha
call
or
or
adc
mov
jnp
cltd
mov
fidivs
mov
push
xchg
mov
sub
mov
xlat
push
into
sbb
negl
pop
mov
insb
out
mov
dec
cmp
mov
jmp
add
adc
stc
test
stc
mov
scas
in
cmp
adcl
mov
cmp
adc
jg
mov
xchg
sub
jle
loop
or
sub
xlat
pop
arpl
push
mov
rcll
jl
and
mov
in
xchg
lahf
jg
jl
int
adc
xchg
cmp
xor
xchg
movsl
cmp
jp
jnp
les
cwtl
push
ss
sbbb
adc
cmp
dec
in
cmp
xlat
add
jnp
jne
movsl
xchg
jae
push
jnp
fldenv
inc
adc
push
outsb
sbb
ja
repz
inc
lcall
orb
jae
jne
jmp
pop
jl
fxch
dec
jmp
je
mov
xor
sahf
cld
divl
cmp
sbb
push
sub
jbe
sub
inc
xlat
filds
jno
lods
sub
mov
adc
push
add
out
das
call
adc
imul
pushf
or
sub
mov
ljmp
inc
dec
xlat
or
imul
rcrl
push
mov
jg
icebp
jmp
or
dec
pushf
push
out
xor
pop
fmuls
popa
popa
xor
cli
stos
fisubrs
mov
outsb
inc
xor
xlat
aad
sbb
gs
or
dec
pop
mov
pop
flds
pusha
cmp
sbb
and
jp
mov
mov
lds
aaa
data16
xchg
fwait
mov
fmuls
push
gs
in
fldenv
adc
imul
lret
dec
andb
fldenv
mov
adcb
outsl
mov
scas
and
add
in
add
pop
sbb
test
int
xchg
into
shr
loopne
and
sub
call
push
repnz
adc
cs
adc
pop
mov
ja
sbb
xor
adc
xchg
xchg
lods
jle
cs
or
popl
ja
imul
cli
xchg
xlat
aas
push
mov
inc
sbb
add
repz
xchg
adc
push
xor
cmpsb
dec
jno
adc
xchg
xlat
mov
pop
sbb
push
mov
xchg
enter
outsl
addl
pop
push
jns
push
inc
push
jmp
dec
popa
imull
mov
add
mov
bt
stc
and
daa
jnp
fldenv
stc
fcmovne
out
xor
stos
inc
pop
lret
ja
clc
or
shlb
push
xchg
sub
stc
jp
pop
cmp
cmp
imul
sub
xor
and
loopne
push
iret
push
rcl
jmp
fadd
std
dec
sbb
fsubrs
or
pop
fnsave
add
les
sbb
push
mov
dec
jo
inc
push
ret
and
push
mov
jbe
sub
jne
cmp
nop
jge
pop
icebp
add
popf
mov
or
fsubr
inc
jb
in
js
pushl
ja
stos
fldenv
mov
jle
fldln2
addr16
aam
mov
hlt
ss
divl
inc
xor
arpl
xchg
mov
mov
stos
daa
jecxz
and
int3
pop
les
rcrl
ror
mov
sbb
sbbl
pop
mov
loopne
or
test
jo
ljmp
pop
outsl
xor
jno
dec
pop
movsl
stos
jecxz
xlat
out
and
sbb
stc
or
xor
in
es
stos
leave
mov
sbb
fcmovnb
inc
jp
or
sarb
xlat
adc
and
jne
push
jb
push
test
fidivl
mov
mov
movb
xor
add
repnz
addr16
shlb
xlat
mov
aaa
xchg
imul
pop
dec
sub
xlat
nop
js
or
sub
repnz
sbb
dec
shl
pop
out
sbb
or
mov
in
cwtl
pop
iret
nop
mov
mov
pop
adc
pushw
pushf
mov
sub
addb
add
decl
push
mov
sbb
mov
dec
push
push
mov
sub
stos
roll
mov
mov
cmp
xchg
xchg
xor
mov
jae
enter
stc
shl
cmp
lea
lods
fimull
push
adc
or
mov
dec
jae
adc
bound
sub
adc
lcall
mov
and
push
mov
sbb
cli
sbb
jle
loop
mov
sub
js
adc
inc
jnp
loope
mov
sahf
and
ja
mov
jns
insb
cli
dec
push
jl
fucom
mov
xlat
ljmp
cmp
push
lret
ljmp
insb
sub
add
mov
insl
mov
xchg
xor
sbb
sbb
pop
mov
xor
sub
cmpsb
pop
mov
xor
lret
shrb
or
out
mov
push
jp
sub
scas
decb
inc
mov
push
mov
mov
sub
adc
lcall
adc
inc
pop
jp
adc
and
out
ljmp
push
cmp
sbb
jmp
sbb
inc
or
lcall
jg
add
add
aas
imul
and
roll
and
jo
ss
cwtl
shrb
jae
xlat
or
sbb
xor
jle
and
ds
cmp
aad
xorb
and
and
xchg
subl
jmp
cmp
lcall
ds
sub
cmp
xor
push
mov
xlat
add
aam
jno
pop
add
and
out
adcl
jns
fsubrs
lahf
pop
pop
pusha
sbb
mov
movsb
xchg
out
addr16
rcrb
xchg
sub
cmp
daa
mov
add
mov
ret
daa
xor
inc
xchg
push
fildl
mov
fistl
ja,pt
dec
inc
cmp
out
mov
cmp
jecxz
and
and
popa
imul
cmp
test
out
mov
je
lods
jge
in
nop
iret
push
inc
out
jmp
dec
mov
mov
ja
lcall
jle
pop
xchg
xchg
jp
push
and
fldt
cmp
sub
outsl
lea
jecxz
jns
cmpb
gs
lahf
int
cs
jns
push
adc
imul
add
stos
mov
sbb
out
xchg
cltd
ja
addb
inc
pop
lahf
pushf
push
test
jecxz
ficompl
cmpsb
pop
pop
scas
dec
mov
cld
scas
add
ds
or
mov
add
pushf
jl
fldcw
test
sbb
lcall
dec
ret
mov
or
ljmp
imul
jae
mov
cltd
jg
cmp
dec
loope
push
rcl
jne
negl
sbb
fisubs
sub
cmp
mov
xchg
enter
push
xor
add
gs
movsb
icebp
or
es
rcr
xchg
lods
into
shl
xlat
cld
and
out
insb
jg
jge,pn
sub
js
and
gs
push
xor
sbb
xchg
dec
jae
gs
add
push
lahf
cmp
xlat
xor
lret
shlb
push
fcmovnb
inc
ds
test
adc
ja
cs
call
cmp
dec
xchg
xchg
jp
std
fcomip
in
dec
enter
or
aad
loope
fsts
cmp
xlat
ficoms
bnd
dec
push
dec
lret
xchg
pop
and
push
and
pop
mov
outsb
notl
enter
das
pop
and
or
dec
sub
imul
and
mov
test
push
push
aam
movsl
cmc
sbb
in
mov
aam
jge
pop
mov
and
mov
or
test
xchg
fdivrl
ds
fstp
adc
sub
outsl
push
and
xchg
mov
lods
lods
roll
push
xchg
sahf
pop
xor
dec
push
xor
cwtl
xchg
mov
cmpsl
dec
imul
dec
sbb
sahf
lcall
sub
les
std
shlb
pushf
jp
sub
xor
cmc
xor
sbb
xor
je
fwait
ja
sub
and
in
push
push
or
insb
xchg
je
push
jae
cwtl
mov
push
shlb
std
xor
rol
sbb
cmpsb
cltd
fstpl
andl
jns
frstor
push
shlb
fidivrs
adc
shlb
fwait
ljmp
jmp
fcmove
and
xor
rep
sub
cmp
xor
out
fidivrs
into
enter
push
rolb
jae
pop
jecxz
std
bound
sbbb
stc
fstp
cld
mov
loopne
mov
inc
jbe
and
adc
mov
xlat
pusha
sbbl
fisttpl
call
fisttpl
andb
sahf
xchg
mov
fwait
lods
mov
test
stc
cmp
lods
arpl
cmp
ja
fmull
dec
xlat
push
cmp
mov
sub
fwait
pop
ja
clc
dec
loopne
mov
mov
inc
xor
orb
jp
arpl
mov
add
pushf
dec
imul
fwait
jecxz
adc
bound
jle
dec
cld
push
inc
adc
nop
sub
sbbb
and
adc
mov
sbb
stc
push
int
test
mov
ja
shll
mov
stos
push
sub
xchg
sub
in
sbbb
test
es
lock
aas
xchg
jecxz
push
and
fsts
arpl
push
lahf
mov
pop
pop
popf
loope
and
or
out
sbb
pop
sbb
adc
cmpsl
mov
inc
imul
cs
pop
aad
mov
inc
inc
mov
lods
cmp
push
ds
lahf
add
data16
or
and
xlat
test
jecxz
cmp
lret
clc
push
loope
xor
dec
mov
lcall
cli
lret
jns
push
pop
mov
cmpsl
lock
pop
push
pop
ret
inc
ret
das
ret
dec
ret
and
mov
jno
jge
or
xor
mov
mov
fbstp
in
and
jle
sub
dec
jmp
ja
loop
adc
stos
les
adcl
xchg
fwait
dec
mov
cmp
xor
daa
cmpsl
push
push
and
cmp
jns
and
shlb
cmp
fmull
pop
addr16
jg
repnz
and
test
scas
mov
dec
jne
fnstenv
xor
mov
push
sahf
sti
cltd
or
fwait
xor
cmp
data16
aam
in
pop
jnp
addb
in
sbb
mov
addr16
xchg
fcomi
outsb
jae
ds
mov
aad
cmp
jecxz
out
clc
mov
xor
ret
cli
out
xlat
scas
cmp
je
test
test
dec
ret
lret
push
stos
sar
push
cwtl
loop
inc
jge
insb
movsl
int
aam
jae
mov
stos
dec
mov
addr16
ja
sub
cmp
mov
adc
loop
sarl
andb
into
cltd
addr16
pop
in
cld
int3
insb
adc
inc
push
ja
out
xchg
lret
push
xor
mov
pop
movsl
or
xlat
das
sarl
test
arpl
std
mov
ret
and
scas
xor
in
imul
mov
push
insl
aaa
call
out
subps
aam
lock
xlat
push
xchg
add
and
mov
repz
paddsb
outsl
add
fsts
and
jge
aas
xor
cmp
pop
popf
orb
xchg
subb
and
orb
test
xlat
mov
sub
add
sub
in
xchg
imulb
cmc
cltd
adcl
xchg
inc
pslld
ror
sbb
jge
inc
cli
pop
jl
iret
mov
mov
arpl
shll
push
outsl
cmp
and
stos
mov
or
cli
mov
mov
arpl
fistpll
mov
lcall
sti
stc
mov
push
add
imul
mov
mull
jl
cltd
pop
shlb
fnstcw
rcll
fidivrl
or
xchg
dec
faddp
jae
lret
add
mov
loope
nop
sti
and
popf
loop
cmp
test
sub
push
add
push
std
push
xchg
and
sub
mov
mov
fistl
cmc
cmpsl
movsb
xlat
cwtl
cmp
aam
sbb
cmpsb
std
xor
sub
scas
jge
and
pop
dec
ja
mov
out
and
js
or
xor
pop
cmpsl
cld
cmpsl
mov
inc
fldcw
push
aaa
out
std
pusha
cmp
ret
aam
sub
and
mov
jle
jl
add
and
jae
cmp
pop
adc
pop
nop
mov
or
xchg
lods
jge
imul
roll
mov
lock
mov
dec
jae
jae
mov
sbb
add
xorb
out
das
and
fidivrl
in
push
fucomi
and
fcoms
movb
pop
orl
pop
pushf
adc
push
pusha
and
add
scas
insl
adc
xchg
movsl
pop
push
dec
fisttpl
sub
push
bound
jno
cltd
daa
ljmp
xor
cs
sbb
test
fmull
jns
imul
subl
out
call
jns
pop
pop
jmp
xor
sahf
test
mov
mov
cmp
or
movsb
and
add
clc
fmuls
outsl
je
lods
shr
sub
push
test
ss
jno
mov
cmpsl
in
shl
bnd
sbb
push
into
pop
lret
adc
sub
jl
fdivrp
cmpsl
mov
cmp
and
fsubrl
aam
xchg
sar
cs
sub
out
lahf
cmpsl
roll
sbb
jle
pop
jl
cmp
jl
jp
mov
xchg
sub
mov
cli
push
add
jae
fs
push
test
enter
jle
inc
and
imul
sub
sti
fistl
add
sbb
ja
mov
in
and
jl
ds
xlat
out
orb
lods
sbb
movsl
add
pop
jae
mov
movsb
ja
inc
xchg
adcb
add
xlat
dec
sub
jp
pop
jne
mov
push
aas
adc
mov
cmp
or
pop
lahf
sbb
pop
arpl
inc
dec
cmp
jl
xchg
sub
sbb
out
repz
stos
aas
jne
sub
mov
stos
stc
negb
fiadds
and
or
lock
push
lahf
push
xchg
pop
inc
repnz
mov
sbb
pusha
jae
push
sub
fistps
mov
test
sbb
cmp
mov
fwait
data16
cmp
xor
gs
arpl
test
jle
mov
flds
fstpl
stos
je
pop
and
dec
cli
in
clc
sbbb
mov
ja
mov
outsl
jge
push
mov
cli
lods
fnstenv
clc
mov
cmp
xlat
mov
jb
ja
fstps
hlt
adc
sub
jns
shll
sub
ss
fcmovbe
jae
les
sbb
frstpm(287
adc
addl
sbb
into
dec
cmp
xchg
cltd
xlat
cmpb
lret
pop
sbb
outsl
jne
xor
pop
lret
enter
pop
test
in
jl
mov
outsb
xchg
stos
jge
idivl
addr16
mov
adc
or
mov
loopne
push
xlat
sbb
out
adc
in
sub
and
outsl
mov
inc
xchg
insb
loopne
jg
je
xchg
inc
push
outsb
push
sub
push
mov
orl
mov
cmp
ss
jae
mov
mov
imul
sbb
rcrl
in
xchg
cs
pop
stos
mov
jae
mov
in
xorb
daa
jp
fcomps
push
iret
out
pusha
shll
fwait
add
hlt
call
daa
js
and
mov
or
sbb
std
mov
ja
or
adc
fwait
out
xor
movsl
xor
push
xlat
mov
sbb
dec
and
xchg
jbe
jge
je
fsts
mov
mov
mov
xchg
cmp
xlat
popa
mov
int
xchg
pop
iret
xchg
out
cli
cmp
xor
jns
dec
js
out
jmp
push
jns
and
adc
shll
loopne
aaa
pop
mov
dec
jae
fidivs
xlat
cmpsl
cmp
sti
inc
or
test
sbb
xlat
sub
or
dec
xchg
fsub
mov
or
in
or
jp
mov
scas
scas
in
sbb
sub
push
cli
int
dec
bound
jg
mov
fcmovbe
inc
cli
stc
xchg
pop
test
mov
enter
push
mov
std
and
sub
fimuls
rcr
sub
pop
jge
addr16
mov
pop
fildl
sbb
pop
stos
mov
cmp
lods
mulb
cmp
sbb
dec
mov
rorl
jb
dec
in
xlat
call
fidivrl
fs
cmpsl
test
aaa
push
int3
pushf
push
mov
push
scas
sub
lret
and
or
sbb
fists
jnp
fdivl
arpl
jg
popf
cmpsl
lret
mov
pop
insb
mov
int3
loope
mov
pop
inc
xor
cmp
je
and
inc
aad
sub
fnstcw
call
pop
dec
fnstenv
daa
test
push
jae
in
std
cmp
jnp
mov
pop
pop
pop
fsubp
ljmp
pop
js
mov
out
imul
cmp
addr16
jae
lcall
dec
or
pop
leave
xchg
insb
aaa
mov
mov
xchg
js
inc
repz
mov
jbe
fisttpl
cmp
daa
sub
scas
insl
mov
movsl
jo
test
addr16
scas
jae
jecxz
in
movsl
cmpsl
xchg
movsb
test
ficompl
xchg
mov
into
add
push
lods
repnz
jnp
xor
xor
cmp
sub
jmp
std
inc
push
or
lods
mov
xor
or
stc
mov
and
add
lret
pusha
xor
xor
into
imul
push
cld
push
sbb
mov
std
xor
addr16
mov
pop
pop
pushf
or
rep
xlat
dec
aaa
cmp
stos
mov
mov
cmp
sub
stos
mov
add
push
mov
mov
sub
add
test
push
mov
push
aad
sub
std
push
sbb
out
add
mov
and
jg
fsin
sbb
cmp
adc
and
pop
jbe
mov
cmc
mov
jno
jmp
mov
cli
or
cltd
fistl
push
xor
jns
scas
popa
outsb
fcoms
push
cs
out
inc
inc
bound
sub
mov
jle
cmpsl
mov
in
and
shlb
pusha
xchg
repnz
adc
scas
jl
test
push
mov
rorb
sub
push
mov
mov
enter
lea
out
xor
pmaxub
mov
insb
sbb
int
mov
js
jg
xchg
xchg
call
iret
int
push
addr16
scas
iret
push
lret
shrb
add
cwtl
xlat
lret
call
fsubl
jp
or
jl
cmp
sbb
fldl
sub
dec
pop
stc
sbbb
scas
fcmovnu
cmpb
mov
arpl
pushf
fsts
sub
jnp
xchg
or
cmp
pop
scas
mov
sbb
adc
mov
mov
clc
and
inc
xor
and
xchg
fldenv
mov
dec
xlat
jl
in
addr16
imul
sbb
jmp
sbb
insl
pop
cmp
sarb
call
cmp
pusha
jnp
ja
mov
ficoms
sbb
notl
mov
jl
add
loope
mov
test
ret
xor
mov
mov
sbb
test
in
and
fsubrl
xlat
push
pop
sub
push
sbb
inc
ret
mov
ds
std
xor
loopne
jge
out
cli
and
sbb
std
pop
cmp
mov
pop
adcl
andb
cmp
out
pop
in
jecxz
cli
or
iret
and
add
jp
nop
bndstx
pop
pop
pop
xchg
and
jns
test
mov
xlat
sar
xchg
jecxz
out
icebp
icebp
bnd
aad
cwtl
stc
call
or
xlat
push
std
mov
sub
sbbl
xor
push
stos
cwtl
jg
mov
xor
hlt
fwait
data16
mov
cs
in
andl
out
call
adc
jae
js
xor
push
and
jae
mov
jl
add
data16
dec
in
imul
ljmp
gs
test
fisttpl
sub
outsl
imul
enter
or
xchg
lock
sub
loopne
fiaddl
xlat
ret
jle
xor
dec
add
cmp
nop
inc
xor
cmp
fstl
sahf
scas
pop
gs
es
repnz
aaa
int3
shlb
mov
data16
jecxz
mov
xchg
test
adc
add
ret
aaa
sbb
cs
xchg
test
xlat
push
mov
stos
and
jl
test
test
and
cmpsl
faddp
mov
xchg
cltd
adc
shl
dec
xlat
test
lock
pop
xchg
stc
hlt
inc
daa
stc
lock
sbb
sbb
xor
inc
push
fprem
arpl
in
mov
jb
sbb
and
add
add
in
mov
cld
fstpt
fcoml
dec
icebp
ret
cmp
std
pop
lcall
repz
in
inc
iret
add
ret
stos
dec
pop
push
cli
stc
insl
out
lcall
sarb
fsts
loop
lods
fcomps
popf
jg
std
or
jl
pop
adc
flds
and
fildl
sti
xchg
shlb
sbb
xchg
xor
or
mov
add
and
cwtl
orb
call
inc
xlat
call
js
daa
cmp
lcall
xor
sbb
insl
jae
loopne
data16
arpl
dec
jl,pt
jmp
dec
xrelease
scas
js
gs
fistpl
sbb
lea
inc
loop
fidivrs
cli
push
stc
loop
mov
pop
xor
dec
nop
add
xlat
cmp
movsbl
mov
dec
push
psrlw
xchg
xlat
ret
lock
sbb
fsubs
jae
jmp
lds
mov
sbb
sbb
mov
sbb
in
iret
sbb
push
jmp
sahf
sub
inc
aas
jp
outsb
dec
and
xor
les
and
insl
mov
leave
imul
and
adc
inc
test
jne
mov
fsqrt
out
xlat
push
cmp
xor
xor
jns
and
pop
dec
popa
out
jl
pushf
xchg
xchg
sub
xlat
or
xchg
jle
jb
fisubl
xor
sbb
adcl
das
jae
fld
lods
push
roll
jnp
stc
test
addr16
adc
pop
mov
rcrl
mov
adc
adc
mov
pop
int
stc
mov
scas
xor
dec
mov
push
fildl
xchg
ret
call
push
jne
es
push
mov
cmp
cmp
pop
test
fldenv
scas
add
test
mov
test
sarb
jno
sub
and
cli
xor
xor
xlat
stos
add
ja
pop
pop
xchg
lret
xchg
pop
dec
bt
jno
mov
test
lcall
ds
jae
push
or
pop
sbb
mov
dec
outsb
lds
test
dec
fisttpl
loop
and
adc
sbb
fildl
lock
push
jge
data16
cmp
and
das
pop
jae
jl
aas
xchg
dec
push
les
sub
cmp
hlt
dec
mov
rclb
cmp
lret
ret
mov
mov
cwtl
sub
je
cmp
adc
inc
add
jle
lea
in
insb
jl
cmp
cmp
jl
mov
cwtl
xor
pop
dec
movsb
lods
adc
hlt
jo
test
fildl
pop
mov
jle
outsb
xlat
sub
ja
and
testl
mov
ljmp
adc
dec
sti
lds
cs
ds
push
cltd
cmp
and
ficomps
sbb
fisubrs
pop
ljmp
lahf
movb
test
pop
push
add
sbb
or
fcmovne
in
jecxz
int3
imull
sbb
lods
jns
xchg
and
sub
mov
xlat
stos
sub
inc
xorl
add
popa
xlat
loope
sbb
aaa
push
mov
shr
jmp
cmp
add
insb
sbb
and
repz
mov
rcrl
stc
pop
mov
pushl
fcmovnb
xchg
sub
xor
outsl
mov
xlat
lds
pop
cmp
pusha
jp
clc
test
or
push
icebp
popa
fiadds
jb
jg
daa
cmpsl
or
movsl
fwait
adc
sub
test
call
xor
or
int3
subl
cmp
or
jp
fsubrl
sbb
test
clc
dec
pushf
add
cltd
jbe
mov
push
fsubs
xor
fidivs
cli
mov
mov
fidivrl
or
dec
insb
call
cs
js
das
add
stos
mov
lret
pop
pop
inc
call
cld
shll
mov
repnz
test
or
push
popa
push
fwait
arpl
outsb
pop
mov
pop
push
and
pusha
lahf
sbb
push
std
jmp
mov
popf
jno
std
stc
std
sub
ficomps
pop
movsl
ret
lods
or
xor
fldcw
and
xor
mov
sub
mov
pop
or
mov
gs
pop
cmp
fisubs
jo
sbbb
andb
jne
pushf
fwait
insb
jecxz
xor
stc
cmc
add
xlat
push
push
loope
out
push
cltd
fstpt
iret
xor
aam
aas
inc
cmp
inc
fsubs
imul
mov
cmpsb
test
or
mov
pop
loopne
push
loope
shlb
in
test
dec
iret
imul
jge
pushf
mov
lods
inc
sbb
jnp
sbb
adc
sbb
adc
mov
int
xchg
addr16
xlat
repz
arpl
mov
clc
ds
fisubrl
dec
mov
or
fnstenv
ret
and
mov
imul
fildll
enter
lcall
pushf
repz
lea
inc
cmp
inc
hlt
gs
sbb
dec
xor
mov
add
nop
xchg
inc
int3
push
mov
dec
je
loopne
int3
or
jg
lret
mov
in
add
test
icebp
cli
fwait
sbb
fs
stos
pop
incb
test
stos
pop
sti
push
cli
mov
pop
jmp
xchg
ljmp
fcomps
jb
mov
or
test
xchg
outsb
xor
mov
pop
mov
test
daa
loopne
repz
gs
or
jge
arpl
jns
test
out
mov
jecxz
push
insb
and
add
mov
add
push
sub
ljmp
jle,pn
fdivrl
push
and
sar
iret
jmp
repz
xchg
das
decb
subb
adc
pop
je
aaa
mov
push
mov
popf
test
add
in
mov
jmp
mov
je
test
xchg
cmp
jnp
fstps
test
test
adc
mov
mov
call
xchg
xor
fldenv
mov
pop
popa
mov
mov
adc
push
movsb
add
jge
xlat
data16
fstps
int
mov
lds
mov
out
add
out
xchg
mov
jns
jae
and
bound
cli
dec
sub
sbb
jns
pop
and
jge
sub
add
test
add
adc
and
push
xor
adc
xlat
pop
cld
mov
imul
adc
imul
jl
cmp
xor
popf
dec
xlat
add
sub
hlt
add
push
stos
addr16
xor
add
xchg
sub
pop
mov
jp
aad
mov
jmp
fwait
mov
dec
ds
js
insb
cmp
cmp
add
enter
mov
dec
mov
sbb
jns
mov
rcr
pushl
test
orl
jne
lret
xlat
into
mov
addl
call
push
mov
test
mov
or
ja
sbb
jbe
cmp
outsl
adc
mov
push
jnp
fstpt
cli
int3
iret
lock
xchg
dec
mov
aad
out
adc
cmp
inc
orb
fdivl
jbe
lahf
ljmp
into
jg
xor
rorb
iret
das
push
sub
cwtl
shll
push
lea
or
incl
pop
mov
bound
dec
cmp
shll
cmp
sub
push
jns
add
jns
adc
cld
inc
cmp
add
xchg
lret
cmpsb
stc
xchg
scas
and
ret
cld
adc
ljmp
xchg
and
mov
dec
add
xor
lods
scas
aaa
scas
out
dec
imul
push
popa
mov
das
shl
ds
fidivl
mov
je
xlat
cli
jo
jns
les
xchg
pop
pushl
add
xchg
call
nop
inc
add
hlt
fisubrs
fsubrs
enter
mov
sub
cld
adc
std
adc
push
test
inc
cmc
dec
int
shll
cld
sbb
cmp
sbb
cs
jge
repz
sub
iret
int
and
pop
sub
cmp
jno
xchg
neg
mov
sbbl
mov
inc
test
lret
pop
ja
mov
inc
mov
cmpl
sbb
jecxz
ja
mov
jg
sub
movsl
pop
idivl
lret
repz
lcall
gs
mov
sahf
enter
mov
pop
xor
inc
jns
lods
ret
xchg
shr
les
das
dec
and
push
rcl
popf
add
clc
jbe
dec
xchg
jnp
jne
ljmp
pop
mov
loopne
cs
movsl
les
xor
ret
xor
jae
lods
sub
cmp
cmpsb
out
xor
pop
mov
push
mov
xchg
cmp
pushf
xor
iret
data16
or
jg
or
out
lea
movsb
xchg
pop
les
lret
call
loop
cmp
mov
adc
xor
inc
mov
jae
sub
repnz
pusha
leave
test
fistl
jp
iret
push
push
into
dec
test
add
divb
pop
std
push
popa
sub
push
gs
adc
adc
add
clc
andl
lds
pop
cmp
xchg
dec
decl
and
and
mov
pop
inc
insl
iret
dec
push
cmc
outsb
mov
dec
ss
sbb
mov
fbstp
loope
mov
and
sub
daa
aam
stos
enter
popf
xlat
and
xlat
sbb
push
xor
inc
ss
push
pop
inc
fcmovnu
dec
repz
out
mov
pushf
lret
add
push
fistpl
cmc
rclb
popa
jnp
fsts
or
adc
bound
jnp
movsb
mov
inc
or
jb
mov
xchg
imul
sbb
jp
shlb
sbbb
push
ss
mov
fstps
cmpsb
movsb
jl
pop
push
xchg
fwait
adc
and
sbb
data16
inc
add
outsl
push
rcr
fidivrs
pushl
cmp
dec
mov
dec
testb
fistps
push
xlat
rorl
mov
sub
cmp
insl
lods
pop
lods
xchg
ljmp
popf
stos
outsl
xor
sub
push
jmp
scas
popa
mov
movsb
pushf
cs
iret
lds
add
aaa
xor
ds
stos
mov
out
xor
and
int3
in
shl
mov
mov
pop
lahf
xchg
push
gs
xlat
cmpsl
push
test
pop
xchg
sbb
cmp
sbb
push
insl
cltd
lahf
or
jl
jl
cmp
push
in
pop
jnp
xchg
rcrl
pop
add
hlt
mov
jno
pop
xor
clc
jmp
sbb
xchg
xchg
movsl
movhps
shrb
push
add
cmp
fcmovnb
das
xchg
mov
mov
xor
jbe
mov
dec
xlat
sbb
loop
adc
push
pop
stc
xchg
imul
cmp
fidivrs
out
and
lods
sub
sbb
fsubrl
pop
lock
in
ret
add
pop
cmpsb
sub
lahf
fsub
fs
sub
shrl
mov
mov
fnstenv
int3
sub
out
repz
adc
push
push
movsl
mov
or
adc
andl
cmp
scas
imulb
pushf
jl
xlat
rcrb
cmp
and
jae
mov
sbb
jae
xchg
jno
mov
fcmovnb
mov
insl
enter
and
and
or
mov
outsb
ljmp
imul
aaa
arpl
das
or
inc
cmp
pushf
adc
jmp
dec
adc
mov
mov
dec
pushf
jae
ret
push
ljmp
scas
sti
scas
cltd
inc
push
xchg
and
aaa
push
push
sub
mov
push
fcmovnbe
into
lahf
divb
xlat
repz
stos
outsb
hlt
pop
inc
incb
pushf
inc
dec
dec
xchg
jb
mov
in
push
jecxz
imul
es
aad
cltd
lahf
imul
mov
xchg
imul
pop
jl
xlat
mov
mov
decb
jb
adc
stc
movsl
xchg
inc
and
mov
xor
ret
stc
mov
outsl
mov
dec
push
movl
movsb
cli
adc
jl
push
in
imul
cmp
fxch
xlat
xchg
adc
inc
push
icebp
sub
jno
jbe
mov
adcb
cmpsl
lret
repz
xlat
jp
jge
xor
and
stos
mov
adc
popa
mov
xor
push
dec
jo
out
xchg
cmp
jns
fldenv
loopne
into
xlat
loop
es
jns
inc
imul
mov
push
sbb
mov
mov
rcrb
cld
notb
sbb
lods
enter
jae
ds
xlat
xor
movsl
add
shrb
xor
fcmovnbe
fmuls
pop
push
test
or
xor
xchg
jae
mov
addr16
pop
mov
movsl
sub
flds
pop
call
push
sbb
popf
loopne
imul
outsb
dec
push
or
in
or
movsl
test
jbe
int3
mov
mov
xor
outsb
je
sbb
sub
lock
jl
sub
in
fstpt
add
daa
xlat
sub
lods
sbb
cmp
xor
nop
sub
pop
push
pop
and
scas
add
fs
sbb
cmp
xchg
adc
stc
add
adc
lretw
lods
out
jl
ficompl
movsl
call
outsl
cmp
push
call
jb
xchg
mov
in
mov
xchg
cmp
mov
lcall
stos
dec
lods
sub
sti
jp
lea
cmp
fs
mov
or
jecxz
ja
mov
xchg
dec
and
out
mov
idivl
shlb
jmp
push
cwtl
in
daa
lcall
jecxz
fsts
fcomps
jno
loope
sub
xchg
and
repnz
aaa
mov
pop
sbb
mulb
in
and
aas
lcall
xor
flds
in
imul
lock
imul
pop
jnp
flds
mov
xchg
push
or
dec
mov
aam
cmp
push
dec
pop
mov
sbb
lret
into
cmp
jne
stos
ds
mov
and
adcb
dec
pop
repnz
xor
movsl
fstpt
js
push
rcrb
ror
jae
es
mov
push
fisubrl
inc
test
test
push
sub
mov
std
shll
cmp
lcall
out
sub
jae
aaa
sub
sub
and
lods
outsb
fisubl
mov
add
ret
cmpsl
push
sti
jecxz
int3
xor
adc
test
push
cmp
je
pop
dec
xchg
dec
mov
inc
mov
bound
pop
sub
cwtl
test
push
jmp
sbb
fldenv
fistps
xor
mov
jg
incl
and
sbb
stc
mov
push
add
insb
push
js
push
cs
cmp
iret
out
push
mov
cmp
lods
je
test
movsl
cli
fnsave
pusha
pop
push
xor
rorb
add
mov
adc
test
iret
popa
xor
sub
into
and
fsubrp
add
popf
add
xchg
dec
dec
movsl
in
mov
les
jg
mov
add
xchg
push
pop
or
ljmp
repz
call
lods
out
stc
jp
cmp
mov
push
into
cltd
inc
addr16
jo
cmp
mov
adc
imul
add
ja
dec
mov
adc
subb
out
cld
sti
push
out
sub
aam
xlat
or
or
add
fstpt
sti
loop
movsl
xchg
pop
jae
xor
adc
push
test
push
mov
das
aaa
add
xor
nop
push
inc
mov
jle
xor
jl
les
jbe
fildl
lock
mov
xor
push
out
shr
loopne
imul
or
lock
or
mov
pop
loopne
aaa
pop
dec
push
xchg
pop
and
outsb
iret
imul
push
push
test
loopne
arpl
rclb
fstps
js
cli
sbb
icebp
fwait
inc
push
leave
mov
jle
scas
into
push
test
jmp
mov
sub
pop
mov
dec
push
mov
inc
data16
cmc
xchg
in
sub
jbe
jl
cmc
pop
inc
data16
lock
jo
push
sahf
stos
sub
vshufpd
or
xchg
fisubs
sub
xchg
ljmpw
test
les
or
push
mov
dec
mov
mov
pop
sbbb
test
outsl
pop
inc
shlb
ds
mov
and
cld
cmpb
pushf
jne
mov
fwait
mov
dec
nop
mov
cwtl
mov
int3
jno
pop
test
test
mov
xlat
dec
push
push
sahf
pop
jb
shlb
out
dec
sbb
aaa
push
mov
jnp
dec
xor
cmp
fwait
cmp
dec
jae
jo
cmp
xchg
xlat
sbb
lret
out
add
mov
jno
xlat
lea
aas
ja
jnp
fldcw
mov
mov
dec
stc
fldt
lock
mov
pop
fdivrs
pop
rcl
lea
sbb
out
aam
subb
or
mov
jne
cs
out
aaa
jae
out
jmp
ljmp
dec
xchg
cmp
pop
sub
push
lret
cwtl
or
out
test
test
push
or
mov
out
cld
push
and
push
arpl
push
mov
je
pop
lcall
sbb
scas
popf
hlt
pop
or
je
push
add
notl
adc
repnz
add
xchg
and
imul
xor
jmp
sub
jp
leave
pusha
push
jae
std
andb
loope
add
jb
and
mov
mov
xchg
stc
das
gs
loope
xchg
mov
cltd
cli
je
xor
jno
sbb
test
out
sbb
jb
adc
test
movsb
sbb
decb
dec
scas
dec
push
mov
out
pop
jl
jns
mov
mov
dec
add
adc
lcall
inc
cmp
push
fcmovnb
lds
loope
and
mov
xlat
pop
jmp
cltd
ret
jns
adc
fyl2xp1
push
loope
push
push
inc
mov
call
xlat
je
fsubl
cmp
jo
rcll
adc
subl
sub
sbb
dec
movsb
cmp
mov
or
jmp
or
insb
ret
mov
arpl
pop
inc
xchg
dec
jo
cmp
sub
sub
fcoms
js
xchg
fistps
enter
scas
popa
popa
shlb
push
daa
sbb
pop
mov
sbb
nop
out
ret
in
inc
and
mov
push
dec
aas
std
lods
fidivl
data16
jg
stos
sbb
jnp
pushf
adc
xor
adcl
cmpb
and
ret
push
adc
jb
xor
mov
out
imul
and
fnsave
rorb
imul
cwtl
or
pop
orb
ret
add
outsb
sarb
outsb
or
rcll
test
lods
xor
adc
lahf
xchg
test
inc
pop
fistpll
inc
xlat
mov
adc
cmp
je
jp
and
mov
push
push
xlat
ret
loope
xor
cmp
mov
adc
or
jns
fdivl
xor
xor
cmp
cmp
ds
addr16
hlt
rcrb
lret
scas
imul
pop
lret
das
cmpsl
out
daa
pop
lock
subb
fisubs
xor
xchg
jg
stos
jl
stos
jns
push
insl
lret
lahf
popw
xchg
pop
imul
in
vmovhps
adcl
pop
mov
dec
mov
and
jbe
or
imul
stc
ds
sbb
and
clc
jge
jb
mov
jno
fimuls
mov
mov
pop
leave
mov
jl
mov
mov
out
leave
mov
ja
fld
ds
fisubrl
fcmovnb
shlb
test
insl
dec
pop
int3
into
je
or
int
adc
lahf
cmpsb
cmpsl
rorl
xchg
jns
xor
inc
xlat
cli
pop
cmp
andb
sarl
fisubl
or
cld
push
cmc
arpl
mov
jmp
cmpsb
mov
fld
and
jns
fidivl
iret
ja
sbb
mov
add
movsl
jecxz
mov
mov
ret
fistpl
addr16
sbb
sbb
and
dec
pushf
xor
fldcw
adcl
es
call
out
cmp
cmp
test
out
xlat
or
xchg
imul
push
imul
mov
xchg
xor
dec
pop
lcall
cmpsb
jmp
or
fstps
insb
xor
xlat
into
pop
sar
out
icebp
cmp
xchg
mov
xor
cwtl
dec
jbe
mov
mov
lea
sahf
cli
ret
loop
notb
mov
push
xchg
mov
adc
fistpl
mov
stos
hlt
push
add
pop
inc
mov
mov
and
inc
jmp
or
in
pushf
xor
aad
jno
dec
mov
adc
data16
push
and
rolb
dec
xlat
ret
mov
fimuls
mov
gs
ror
arpl
hlt
aaa
push
lahf
idivb
fisttps
mov
lock
pop
sub
push
xchg
stos
imul
fwait
call
mov
add
fstpt
mov
dec
adc
sti
std
int
sub
xor
mov
push
xchg
ljmp
cmp
xor
sub
nop
cmp
add
xor
cmpsb
rcl
stos
xor
cli
test
jp
gs
cltd
fwait
out
xchg
mov
jno
sub
mov
jle
xlat
dec
pushf
testb
push
scas
gs
inc
shl
sti
popf
jns
push
aam
cmp
loop
cld
or
ds
lcall
dec
jnp
cmc
sbb
push
mov
inc
push
bound
push
out
and
out
shll
xchg
adc
mov
sub
lock
dec
or
imul
insl
addr16
andl
adc
fwait
mov
ja
sbb
enter
push
jns
sub
es
int
push
jae
out
call
insl
lds
jp
cmp
jecxz
pop
xlat
stc
adc
fisttpl
call
xchg
lcall
ret
fistpl
insb
pop
pop
pop
pop
push
icebp
es
test
or
xchg
dec
shr
fstpt
xlat
stos
inc
pop
dec
pop
loop
aaa
shl
dec
dec
sbb
mov
push
dec
std
dec
pushf
inc
sbb
mov
and
pop
sub
jne
and
in
pop
mov
add
inc
fidivl
clc
or
adc
fcmovnbe
push
pop
adc
scas
insl
das
mov
xchg
not
cmp
lods
shrb
dec
pop
call
dec
fnstenv
das
mov
cmp
add
lds
pop
adc
sub
cmpsb
daa
dec
pop
mov
adc
adc
daa
das
mov
xor
imul
enter
xor
jg
enter
out
push
mov
xor
xorl
je
repnz
mov
stos
pop
push
dec
adc
clc
xor
jae
int3
das
xlat
shrl
repnz
fsubr
push
cltd
pop
dec
shlb
popl
sbb
ret
mov
push
jns
jle
add
std
adc
sub
cmp
std
sbb
mov
or
push
ret
and
or
lods
ja
push
jae
or
ljmp
cmp
mov
sub
xchg
inc
push
pop
orb
in
mov
std
movsb
stos
jge
cmpl
and
test
stos
cmp
sub
test
add
xor
rclb
push
sub
or
or
jp
rorl
mov
ljmp
or
xchg
inc
dec
xor
pop
repz
cmp
sti
mov
lock
jmp
push
push
sahf
pop
jge
jge
imulb
enter
cs
stos
arpl
jno
inc
in
ret
repnz
out
pop
xorl
cmpb
xorb
movsb
mov
loop
inc
mov
sti
sbb
mov
stc
mov
xor
mov
dec
dec
in
pop
pop
dec
sar
rcrl
jl
fnstcw
imul
add
push
icebp
inc
add
xor
push
mov
addr16
jb
jb
pop
movsl
mov
add
pop
outsb
stc
jb
in
inc
mov
sub
aaa
cltd
sub
mov
cwtl
cmp
lret
out
inc
add
xor
lret
add
je
dec
adc
pushf
js
in
xchg
into
push
cmp
xchg
in
mov
lods
insl
cwtl
push
mov
push
push
lods
stos
jg
insb
sub
mov
and
mov
and
xchg
xor
push
dec
imul
lcall
nop
sbb
fsts
mov
add
push
ror
add
push
jno
add
dec
addl
stos
ja
sbb
xchg
pop
xchg
call
sub
xor
dec
inc
lcall
dec
mov
inc
xchg
jo
xchg
jle
mov
and
mov
mov
or
mov
sub
loopne
test
hlt
pop
adc
repnz
push
jae
mov
dec
in
push
arpl
sbb
fbld
daa
pop
pop
popf
xchg
mov
fistl
cli
dec
xlat
mov
adc
loopne
cli
pop
xor
jbe
add
mov
inc
aad
jg
jnp
pop
popf
jb
mov
dec
or
cwtl
das
shl
test
sbb
jo
daa
xor
test
movsb
out
xor
in
pop
dec
pop
sbb
adc
jecxz
jnp
mov
mov
stc
add
cmpsl
xor
mov
sbb
sub
imulb
popl
ret
dec
js
jp
push
jbe
and
xor
mov
ror
jbe
gs
fsubrs
sub
jge
mov
sub
cmp
xchg
inc
jne
adc
rcrb
fcmovne
jp
fldt
leave
fwait
shl
movsb
mov
adc
inc
mull
lea
repz
mov
out
sar
fstps
dec
jb
xchg
xor
jl
mov
sub
imul
lods
or
jbe
mov
fcos
in
dec
insl
out
stos
mull
lcall
stos
loope
jp
inc
and
sub
ss
stos
pop
dec
imul
iret
sub
enter
es
fnstcw
or
shr
xchg
xor
inc
sbb
sbb
imul
les
test
and
jb
stos
xchg
fcoml
pop
push
mov
fwait
iret
pop
pop
cs
add
stc
adc
push
inc
fs
xor
mov
sbb
sbb
add
push
mov
cmc
xchg
stos
mov
ds
dec
cs
imul
lret
pop
push
dec
test
jns
ds
aas
stos
adc
or
nop
out
and
dec
inc
daa
pop
into
mov
aas
into
push
stos
and
cs
jbe
lahf
arpl
ljmp
or
fcomip
fimull
xor
xchg
xor
mov
mov
dec
cmp
mov
out
rorl
ret
enter
jmp
andl
aam
mov
scas
jns
jns
xor
xor
xchg
sahf
dec
pop
orl
imul
sbb
or
xor
xchg
sbb
cmp
pushf
repz
dec
data16
std
pop
cmpsl
xchg
fadd
push
jp
or
push
sbb
arpl
sub
aaa
in
xor
inc
fcmovbe
add
sbb
mov
cmp
movsb
lods
pop
ds
adc
ljmp
fldt
lea
fwait
inc
inc
pop
push
dec
and
movsl
pop
sub
xor
xor
mov
pop
fwait
in
sub
jmp
movsl
stc
jmp
sbb
inc
lahf
ret
fimuls
int3
dec
jae
jecxz
je
xor
ds
ds
sub
daa
cmp
jg
fnstsw
ds
rol
scas
sub
iret
jae
mov
insl
lods
lahf
xor
cmp
push
and
sbb
fstpt
ret
or
xor
dec
fisubrs
add
mov
push
fwait
mov
and
fsts
shll
xchg
sar
das
pop
adc
jle
mov
mov
or
div
push
jnp
ss
add
jmp
push
int3
mov
jp
push
cmp
lcall
call
pop
and
scas
test
mov
mov
adc
scas
neg
sbb
cwtl
shl
xor
add
push
fistpl
dec
lret
das
ds
out
fstpt
push
movsl
mov
push
push
sbb
jae
ret
gs
call
mov
js
adc
or
sub
lahf
fistl
test
cmp
xor
cmp
xlat
inc
dec
mov
add
and
mov
sti
loop
dec
out
sub
xor
jl
test
clc
mov
in
out
xchg
repnz
jp
mov
pusha
jnp
dec
adc
sarl
aaa
cmp
sub
ja
divl
lock
stc
dec
mov
pop
out
jmp
imul
ja
insb
popa
jne
lds
sub
outsb
adc
fcmovb
or
in
in
stos
ret
and
pop
jb
adc
push
mov
daa
xor
mov
lds
addl
xor
mov
std
push
aaa
mov
jnp
fsts
dec
addr16
push
or
dec
jp
cmpsb
push
lods
cmc
xor
aaa
adc
xor
adc
jmp
cmp
inc
adcl
add
sarb
jne
xlat
xchg
orb
dec
test
out
or
and
jne
out
cld
sub
mov
mov
cmp
leave
cwtl
iret
inc
pop
lahf
rcr
mov
out
fsubrl
dec
sbb
ja
fistl
mov
dec
lret
or
mov
bound
insb
mov
ret
ja
ret
sbb
pushf
push
inc
rcrl
pusha
fsts
push
add
nop
jae
mov
pop
jne
fstps
insl
xor
cltd
scas
or
cmp
lcall
pop
xchg
xor
test
mov
lret
imul
cwtl
inc
jae
mov
out
or
sbb
leave
dec
shl
and
mov
clc
gs
fcmovnbe
mov
shrl
call
pop
mov
lahf
cmp
push
cmpsl
inc
andb
ret
mov
cmpsl
xlat
dec
fnstsw
stc
arpl
lret
decl
adcl
pop
stos
lea
arpl
and
test
and
cmp
in
out
call
push
or
or
fucomi
loop
sti
and
and
mov
imul
jo
das
pop
add
or
ja
add
sti
adcl
cmp
js
outsl
sub
pop
add
sbb
nop
dec
pop
sti
sbb
insb
dec
add
repz
imul
or
aam
pop
push
and
sbb
test
jmp
dec
dec
xchg
and
mov
xlat
into
push
cmpsl
push
jl
cmp
insb
mov
stos
or
test
cmp
sub
fmul
insb
inc
test
rolb
adc
cli
push
cs
fnstcw
into
mov
inc
neg
aad
mov
addr16
pop
lret
scas
cmp
jnp
fldenv
and
mov
mov
mov
lret
push
or
enter
aad
jge
sub
sahf
pop
xchg
das
dec
inc
cld
cmpsl
popf
lock
sub
xchg
shl
xchg
or
adc
movsl
out
arpl
icebp
pop
in
in
cmpsl
sti
mov
pop
jp
mov
orb
popf
add
mov
imul
sub
ja
sbbl
xchg
or
insl
out
stos
add
cmp
xor
stos
mov
xchg
push
mov
int3
out
loope
out
add
xchg
sbb
mov
sub
add
cmpsb
mov
add
cmp
xor
sub
mov
lsl
fisttpl
jp
cmp
je
mov
fdivl
sbb
mov
shl
push
mov
push
pop
mov
sub
fimull
insb
pusha
xchg
int
cmpsl
adc
sbb
jge
jbe
jle
push
stos
call
mov
mov
sbb
pop
mov
adcb
sub
aaa
xchg
xchg
aas
aas
sub
addl
sbb
inc
imul
arpl
mov
mov
and
push
push
xchg
and
stc
add
in
push
and
enter
sbb
sbb
sti
sbb
fisttpll
test
mov
dec
jmp
fildl
mov
int
mov
pop
mov
imul
call
mov
adc
sahf
fwait
std
imul
lret
movb
pop
ljmp
pushl
or
mov
mov
jl
dec
std
inc
std
inc
cmp
xor
ja
dec
mov
out
gs
out
pop
je
inc
adc
into
leave
stc
sub
xchg
add
mov
or
adc
fs
and
mov
mov
js
mov
dec
jp
cli
scas
jg
stc
sbb
and
jge
iret
fisubrl
or
sbb
pop
loope
pop
rorl
or
enter
add
scas
fistl
jg
adc
dec
push
xlat
pop
mov
nop
cmp
insl
cwtl
inc
jno
pushf
repnz
cmp
lods
mov
ret
fadds
sub
add
dec
fnstsw
push
ret
dec
in
xlat
sub
stc
sbb
sti
ja
nop
inc
jl
cltd
or
vlddqu
stc
fldz
xchg
ljmp
pop
pop
dec
movsb
dec
pop
xor
pop
les
mov
and
or
fadd
fnstsw
or
push
push
dec
mov
or
test
and
pop
lret
jmp
stc
pop
inc
call
es
popf
loop
pop
repnz
pop
or
js
repz
xor
mov
jle
jmp
dec
xchg
mov
dec
pop
cmp
xchg
fdivrp
icebp
mov
outsb
xorl
test
stc
pushf
repz
imull
xor
jno
loopne
cmp
test
push
aaa
sbb
cmp
adc
ret
adc
imul
fidivs
fisubs
lret
fwait
xchg
inc
mov
mov
ljmp
ret
je
pop
repz
mov
sbb
xor
add
mov
and
and
inc
sub
add
dec
jb
aam
ret
daa
std
pop
dec
cmp
pop
insl
das
arpl
enter
addl
push
or
dec
mov
mov
sbbb
jmp
aam
inc
fcmovb
or
sti
icebp
adc
push
test
pop
and
xlat
adc
or
arpl
and
call
pop
movsl
mov
inc
cmp
imul
pop
mov
jno
mov
sub
or
mov
mov
xor
imul
lock
stos
jnp
mov
push
sbbl
xchg
sub
mov
mov
fisubs
pop
iret
add
sbb
or
mov
push
ss
pop
jl
out
mov
scas
lcall
pop
lret
push
arpl
jae
mov
xlat
enter
mov
lods
dec
cmp
or
cmp
cmp
lret
inc
and
xor
rorl
xchg
pop
cmp
mov
mov
out
jns
add
fistpl
mov
xor
stc
test
cmp
hlt
inc
jbe
dec
jp
ds
pusha
in
xor
or
inc
jg
and
bound
add
mov
arpl
jb
fldenv
cmp
test
jp
jae
jno
xor
imul
das
sbbb
pop
es
xor
test
sbb
xlat
dec
lret
adc
dec
lcall
xchg
cmp
cmp
jle
push
push
iret
jne,pn
lods
imul
leave
cmp
cwtl
test
pop
mov
pop
pop
stos
push
stos
xchg
into
push
insb
push
fwait
orl
and
dec
mov
imul
les
jbe
cmc
xor
and
jae
mov
push
jecxz
insb
inc
cwtl
push
sub
cmp
movsb
movsl
sahf
fs
dec
mov
inc
fldenv
pop
xor
and
fcmovnu
or
inc
jl
fwait
insl
in
push
adc
rcr
into
or
test
stc
inc
decb
loopne
jmp
movsl
push
jns
or
xorl
pop
aas
scas
pop
pop
push
add
push
frstor
aam
pop
rcll
les
cmp
inc
push
inc
int3
and
arpl
cli
mul
mov
fwait
or
push
nop
sub
jne
mov
shr
int
cmpsw
sub
adc
xlat
sarb
mov
das
std
outsl
pusha
fldt
dec
or
movsb
add
stc
sub
xor
popa
and
push
xchg
mov
inc
mov
adc
adc
jns
push
loopne
test
int3
jo
sbbb
mov
es
cmpsl
fsts
imul
lret
cmp
adc
cltd
adc
xchg
gs
dec
jnp
lods
leave
lahf
pushf
test
mov
fadds
imul
and
adc
loopne
push
pop
xchg
sbb
dec
pop
sbb
xor
xlat
sti
jle
xchg
je
fwait
add
inc
mov
cltd
cmp
xlat
sub
or
pop
mov
push
dec
cmc
push
sahf
leave
ret
sbb
mov
push
ja
call
insl
adc
pop
add
aaa
mov
addr16
sbb
std
dec
mov
adc
rorb
fwait
add
mov
ss
test
js
jo
out
jmp
mov
insl
xchg
xchg
aad
loope
mov
clc
shl
jge,pn
mov
int
xlat
scas
fstpt
cmp
xor
rcll
shr
sbb
xchg
into
mov
dec
mov
es
add
sbb
sbb
mov
ljmp
adc
adc
mov
out
nop
test
xchg
xlat
jp
cltd
mov
mov
adc
lods
cmpb
ds
flds
jae
pop
and
pop
mov
xor
dec
das
push
pop
jbe
shlb
pop
or
lods
sbb
ds
subb
xor
out
dec
sar
addr16
xlat
not
mov
outsb
lds
lahf
pusha
roll
cmpsl
inc
pop
mov
pop
or
call
and
nop
pop
bound
mov
popa
fwait
xor
notb
fisubs
cmp
in
inc
jmp
lret
in
out
out
inc
test
sbb
sbb
fldcw
xchg
cmp
xlat
cmp
xchg
adc
aad
add
mov
push
xlat
rorb
subl
sbb
or
repnz
push
stc
dec
add
test
dec
xlat
cmp
pop
mov
jo
call
push
dec
and
call
push
sahf
xorb
xchg
inc
addr16
test
sub
push
sbb
mov
add
insl
jae
cld
mov
idivl
fldt
fsubrl
jns
pop
aas
lahf
adc
and
faddl
imul
jae
fbld
or
jge
dec
sbb
aas
cmp
mov
stos
iret
sbb
repz
arpl
add
push
lret
sub
dec
jae
jns
sti
iret
inc
aas
dec
or
cmp
mov
xor
sbb
inc
mov
mov
pushf
cld
fcmovbe
xor
outsl
fxch
lcall
mov
mov
fldcw
lods
test
into
push
xchg
add
aad
lcall
sub
sbb
adc
test
adc
pop
jp
sub
or
movsl
lahf
dec
test
fld
lahf
daa
cmpsb
loope
adc
xor
mov
pop
loope
cmpsb
cs
jns
mov
xchg
stos
andb
iret
imul
push
xchg
movsl
in
push
addr16
pushf
mov
fs
cld
jmp
mov
jle
mov
aas
sbb
scas
or
pushf
cmp
mov
inc
pop
mov
stc
es
bound
jmp
aad
ret
xlat
sbb
xor
pop
pusha
adc
sub
dec
lahf
cmc
int
lock
and
cltd
pop
stos
gs
dec
adc
lcall
or
add
xor
in
fnstenv
mov
daa
sub
out
and
loop
mov
adc
dec
xor
jmp
mov
insb
test
or
xor
test
push
inc
sbb
fisttps
movsl
fs
jge
add
mov
sub
scas
jo
clc
loope
hlt
and
loopne
sbb
testb
inc
cmp
xorb
insl
aad
fldenv
cli
mov
mov
sarl
push
pop
adc
cmp
cltd
nop
mov
xor
mov
sbb
out
push
xchg
jg
test
pusha
mov
sbb
in
dec
inc
mov
mov
xchg
stc
arpl
xor
push
iret
xchg
std
push
fcmovnb
and
jbe
push
mov
and
fstps
sub
test
or
cmp
faddl
push
mov
dec
push
pop
pop
cmp
fsts
sti
scas
sbb
fisttpl
push
addr16
ret
loope
add
inc
mov
pop
call
aad
popa
fnstcw
jp
dec
nop
ss
repnz
pushf
dec
daa
push
lea
lods
outsl
sub
je
jge
aam
mov
push
dec
popf
push
jmp
or
stc
insl
lcall
and
in
adc
xor
mov
aad
cmpb
stos
inc
xorl
repnz
stos
stc
mov
pop
dec
pop
jg
iret
ja
pop
lcall
dec
mov
jae
or
inc
cmpb
sahf
dec
inc
cmp
push
stc
xlat
sub
mov
maxps
cmpsl
cmp
push
xchg
xchg
pop
les
shrl
js
insb
xchg
sbb
pop
adcb
cwtl
cmp
push
jns,pn
jl
sahf
pop
nop
int3
sbb
push
loop
inc
jb
mov
push
sbb
in
imul
cmp
lahf
push
dec
mov
sbb
cmp
andb
in
hlt
push
out
loopne
in
or
mov
jne
rorl
dec
cmp
pop
or
pop
mov
cmpsb
cmp
jp
dec
add
mov
lret
popa
push
cmp
sub
jp
cmp
dec
cmc
fildl
call
and
pop
mov
jbe
movsl
mov
cmc
sahf
nop
jle
int3
mov
jmp
out
mull
imul
mov
push
mov
out
and
xchg
subb
inc
imul
dec
inc
pop
xor
lret
and
stc
ja
add
sub
test
dec
xor
outsl
xor
pop
je
addr16
outsb
fwait
test
popf
sub
push
ljmp
and
jne
cmp
daa
mov
xor
dec
mov
imul
mov
addb
mov
inc
pop
mov
mov
adc
popa
or
xor
fcompl
clc
testl
push
add
push
mov
jae
fsts
or
js
sarl
xlat
pop
push
imul
ljmp
shll
int3
sbb
lret
mov
jbe
mov
sub
aam
pop
das
into
push
rcll
fisubl
cmc
cmp
lahf
mov
add
mov
fs
ljmp
push
dec
cmpsl
je
std
subl
data16
insb
or
aam
push
imul
xchg
push
arpl
cmp
movsb
ljmp
mov
das
icebp
jno
rcl
adc
dec
insb
or
sbb
arpl
cmpsb
out
pop
pop
xlat
mov
inc
or
push
dec
cmp
frstor
mov
int3
and
int
xchg
mov
xchg
fcoms
cld
adc
mov
xchg
ficompl
in
mov
gs
push
pushf
dec
push
push
xor
mov
mov
pushf
stc
xchg
or
push
push
pushf
dec
cli
xor
cmp
adc
pusha
xchg
or
jecxz
ret
repnz
mov
imul
mov
popf
mov
jmp
xchg
or
nop
fistl
push
mov
dec
cmp
and
mov
and
xor
fnstsw
test
sub
or
das
push
ficoms
push
repnz
xor
push
adc
ret
mov
adc
leave
fstpt
xchg
outsl
imul
dec
xor
movsl
stos
xor
cmpsl
mov
nopl
out
mov
dec
inc
or
fsts
sti
dec
movsb
jns
sbb
jmp
and
je
xor
push
xchg
jp
sub
out
loopne
test
xchg
cmp
jle
add
jp
push
mov
or
arpl
mov
rorl
and
call
cmpl
xchg
add
pop
or
and
or
push
push
imul
sub
xor
dec
sub
push
or
or
fwait
orb
lds
push
sbb
xor
dec
dec
stc
push
cld
repz
mov
and
add
mov
push
das
cmp
arpl
jle
sub
pop
dec
jbe
cmp
push
dec
insb
dec
mov
inc
fildl
dec
xor
dec
jnp
adc
stc
adc
mov
xor
insl
and
test
out
xchg
mov
or
movsb
into
mov
sub
push
push
jno
sbb
mov
sbb
popf
cli
faddl
add
push
test
inc
cmp
sbb
shlb
out
or
sti
sbb
data16
xor
sub
lock
xorb
pop
repz
xor
xchg
cmp
dec
outsl
sub
mov
addr16
and
dec
pop
adc
jb
bound
jae
repz
xor
outsb
jp
push
jmp
dec
push
xchg
push
push
inc
mov
or
adc
jae
pushf
and
enter
cltd
das
inc
pop
ljmp
mov
push
add
mov
jle
addb
fs
lahf
ljmp
shll
nop
xchg
mov
test
mov
and
shr
mov
mov
and
xor
sbb
and
hlt
fnsave
push
repnz
movsb
xlat
mov
pop
les
stos
jmp
xlat
das
cmp
pop
push
jg
imul
add
or
adcb
cld
cwtl
xchg
mov
xor
outsl
sti
inc
stc
clc
mov
push
sub
mov
cmp
mov
daa
mov
in
xchg
test
sti
lret
fsubl
ja
cmp
inc
icebp
into
mov
xor
ss
push
movsl
mov
jg
nop
ret
cld
sbb
test
outsl
cmp
stc
xchg
xchg
test
icebp
in
mov
jb
rcr
cmp
je
jecxz
mov
movsb
xor
addr16
pop
inc
sbb
adc
xchg
icebp
por
jge
les
pop
rcrl
insl
inc
fcomp
test
fdivl
test
jge
xlat
lret
jo
jmp
movsl
adc
mov
inc
lds
adc
mov
add
fs
mov
jae
or
jae
jns
jmp
out
cmp
fucomp
sub
imul
push
mov
lret
pop
jp
pop
push
out
and
or
fsts
outsl
and
out
imul
jp
mov
dec
pop
fstpt
outsb
or
or
xlat
rclb
out
jns
dec
insl
frstor
or
sbb
lret
add
adc
sti
push
ja
pop
jae
bnd
lret
push
loopne
stos
shl
sub
mov
shrl
pop
inc
lret
jle
push
es
mov
std
push
pop
push
fiadds
mov
std
xlat
pop
push
and
out
daa
jne
adc
pop
xchg
imul
fisubrl
stos
pop
loope
mov
xchg
popf
adc
jne,pt
scas
push
xor
xor
xlat
movsb
ret
pop
test
xchg
mull
pushf
jae
mov
aam
xlat
sbb
cmp
sub
pop
je
mov
insb
pop
nop
out
add
sub
inc
xlat
and
roll
in
xor
out
xchg
jecxz
sub
stc
cmp
fistpl
jp
mov
fstps
cmp
mov
js
xlat
loop
mov
call
jae
shll
sub
bnd
push
dec
roll
xchg
movb
mov
and
inc
mov
repz
ja
fisttps
cmpl
jno
fisttpl
and
sub
addl
lds
outsl
push
js
pmovmskb
fsubrp
fdivrl
cmp
je
fildl
jge
jg
inc
push
sbb
pop
mov
shll
pop
imul
adc
out
cmp
pop
dec
sarb
jle
mov
cli
inc
pop
push
lcall
fadd
inc
push
insl
jl
push
hlt
lahf
jg
cmc
jnp
daa
cmp
movsb
iret
adc
hlt
popa
mov
cmp
scas
and
les
mov
out
ds
sub
jl
stc
fnstcw
push
repz
notb
pop
xlat
jle
loope
xchg
jns
test
movsl
cmc
fistpl
mov
cmp
mov
and
lds
dec
mov
ficomps
mov
movsb
push
jno
bound
ljmp
push
jno
mov
ja
xor
sub
mov
cmp
jl
cmpsl
daa
das
scas
ret
loopne
je
mov
mov
out
popf
mov
je
add
cmc
imul
rcrl
shrb
sub
iret
inc
popa
pop
popa
inc
mov
add
xor
shll
repz
mov
xor
jg
dec
jbe
dec
mov
movb
or
rcll
or
fcoms
xorb
test
cmp
fs
xchg
mov
push
jge
jmp
inc
dec
es
loope
push
repnz
xchg
ficompl
pop
cmpsb
gs
lods
shl
leave
pop
shr
mov
iret
mov
adc
pop
jae
push
adc
sahf
testb
xchg
nop
xor
scas
bound
cli
jae
dec
adc
movsb
gs
dec
in
call
scas
xor
pushf
add
dec
sub
loop
aad
and
std
fsubs
cltd
fwait
mov
jl
cwtl
outsb
cmp
pop
pop
inc
fimull
pop
incl
xchg
je
sbb
daa
imul
mov
push
mov
inc
clc
mov
jae
xor
and
adc
jne
xchg
stc
flds
sub
lods
and
test
inc
sub
fstp
cmpsb
imul
jo
and
je
lods
xchg
push
iret
jbe
jp
xchg
pop
imul
lret
addr16
arpl
mov
nop
mov
xor
aam
mov
pop
ds
adc
popf
xor
pusha
adc
sti
push
leave
repz
insb
sub
out
js
lret
pop
cmp
sbb
xor
gs
sub
bound
lcall
xor
xchg
in
shl
or
mov
mov
fbld
xor
movsb
mov
sbbb
enter
jge
jl
xchg
push
add
shll
add
loopne
fmull
cmp
adc
movb
adc
shlb
dec
out
test
jmp
orl
cmp
cmp
lcall
xchg
or
sbb
sub
insl
sbb
or
je
push
pop
dec
pop
xor
xlat
or
sub
icebp
adc
jl
into
test
or
imul
dec
mov
mov
lock
addr16
mov
sub
je
xchg
xlat
into
stc
inc
sub
lret
push
push
cli
jae
in
call
dec
push
add
push
push
xchg
jae
imul
insl
pop
mov
clc
or
dec
imul
or
mov
mov
mov
xor
xchg
stos
rcrl
or
enter
xchg
rclb
sub
dec
shll
inc
ret
lahf
aam
lea
mov
cmp
xor
loop
fxam
mov
mov
push
pop
xor
xchg
lret
xlat
xor
xorb
je
xchg
xorb
and
jmp
xor
push
stos
adc
jo
cmp
xchg
lret
and
push
cmp
push
shll
daa
lods
mov
fucomi
or
movsb
adc
lahf
call
andb
jmp
push
mov
push
aam
and
sbbl
fidivrs
xlat
loope
mov
pop
aam
mov
in
jne
or
ret
and
xchg
int3
lcall
xor
jno
push
xlat
push
pop
sbb
sub
aaa
jae
stc
pushf
pop
adc
sbb
sbb
add
dec
ds
mov
and
cwtl
jp
jl
pop
stc
fwait
adc
ja
das
mov
sub
pop
or
pop
push
push
enter
aam
pop
cli
xor
adc
stos
push
xchg
push
gs
jmp
lods
out
cmp
data16
test
fistl
ljmp
imul
push
outsb
xlat
fucomi
cmp
sbb
cmp
pop
cltd
aas
adcb
cs
sbb
push
cmp
mov
xlat
daa
xchg
jbe
test
mov
js
mov
and
lret
adc
mov
adc
bound
add
mov
sub
ja
sbb
pop
or
repnz
cmp
out
mov
stos
sub
lcall
mov
shr
fwait
or
mov
std
aam
jae
mov
jns
stc
fldt
pop
jb
out
sbb
inc
inc
sbbb
sti
or
cs
inc
add
imul
xlat
and
mov
and
cmp
test
enter
push
xlat
push
addl
cli
repz
mov
xor
stc
adc
push
and
jno
jns
dec
insl
fcomps
xchg
and
xchg
loope
push
push
push
stc
in
pushf
fsts
sbb
pop
popf
adc
sbb
lahf
jnp
and
push
mov
or
lods
jge
pop
jb
sub
loop
cmp
fwait
pusha
std
negb
sub
pop
jmp
lret
sub
nop
sahf
dec
mov
nop
outsl
stc
sub
cmp
adc
adc
inc
and
inc
add
popa
test
inc
pop
sub
or
sbb
lds
and
sbb
push
fsts
mov
aam
cmpl
jns
mov
push
stc
ret
stc
ja
fwait
hlt
inc
sub
fimull
cld
push
fsin
jge
and
dec
mov
ljmp
jnp
fnstenv
pop
daa
cwtl
adc
pop
jle
cld
xlat
push
lahf
xchg
imul
dec
inc
add
mov
arpl
lcall
or
test
lret
sub
dec
jae
inc
xor
shlb
cwtl
fs
sub
xor
dec
add
sub
stos
dec
scas
sbb
jae
xor
fistl
gs
test
movsb
mov
repnz
loope
sbb
adc
test
js
xchg
push
sub
mov
add
push
adc
dec
mov
lcall
pop
xchg
push
inc
mov
sbb
imul
cwtl
fsubrs
out
mov
jle
sbb
inc
push
add
inc
pop
cmp
pushf
jge
push
cvtps2pd
sbb
push
mov
bound
ret
aad
xor
mov
mov
and
mov
add
aaa
sub
or
nop
push
sahf
outsb
push
dec
sub
daa
aad
dec
mov
push
add
cmpsl
fnstsw
cmp
push
pop
cmp
push
xor
stc
mov
lock
fisttpll
cmp
xor
movsb
aaa
test
mov
dec
in
pushf
out
inc
xchg
stc
lcall
pop
negl
xchg
push
test
sti
xchg
mov
out
das
push
push
loop
aaa
data16
jecxz
inc
add
xor
xor
and
mov
or
fs
out
or
add
jnp
inc
mov
shll
mov
test
add
fadds
push
aam
out
jle
jge
cmp
push
sarl
imul
cmp
lea
jle
pop
dec
xor
int3
xchg
ljmp
sbb
adc
xor
int
pop
xor
sub
jecxz
inc
shlb
xchg
call
clc
mov
jo
adc
out
inc
xor
or
shrl
lret
xorb
fwait
adc
out
hlt
lds
xlat
push
cmp
cmp
or
mov
dec
jns
pushf
xor
test
and
addr16
fmulp
or
push
xlat
and
add
dec
xchg
out
nop
ficomps
mov
jne
in
ljmp
pop
dec
jb
mov
jge
push
push
and
lcall
mov
dec
push
sbb
inc
jne
adc
xchg
adc
mov
pop
mov
mov
cmp
push
movsb
cs
cmpsl
ds
cli
mov
stos
cmpsb
lcall
mov
out
jb
mov
lock
jo
insl
cmc
lods
push
mov
out
ja
jecxz
mov
pop
stos
cmpsl
push
jo
int
mov
pop
xchg
nop
fs
or
xor
popa
repnz
clc
ja
cmpsl
jecxz
rcr
int
rcrb
push
cli
fsubr
fcoms
mov
call
enter
push
pop
lret
imul
imul
sbb
xlat
add
sti
psubw
jp
mov
sysexit
sbb
les
xlat
subl
dec
fimuls
sbb
mov
dec
jno
mov
sub
push
shl
flds
mov
push
adc
sub
insl
lods
js
or
sbb
stc
out
cmp
in
mov
jl
stos
xor
xchg
btc
and
mov
aaa
imul
shll
mov
out
xchg
push
push
cltd
add
add
cli
sbb
es
mov
leave
push
addr16
mov
in
or
imul
clc
jl
mov
ret
pop
cmp
xchg
cmp
aaa
popa
inc
mov
js
xlat
push
sbb
out
pop
or
in
les
jns
dec
inc
fwait
xor
lods
sub
xlat
mov
push
jl
dec
pop
xchg
adc
jno
insl
enter
cld
xchg
add
push
xor
adc
xchg
or
or
sub
dec
imul
out
pop
shl
mov
adc
nop
pop
inc
call
test
fcmovnb
pusha
loop
dec
fstpt
int
shlb
cmp
adc
pusha
inc
inc
data16
mov
or
fsubrl
pop
ret
mov
mov
repnz
insb
pushf
push
lcall
and
lods
aad
sbbl
mov
mov
call
movsb
pop
mov
inc
pop
add
insl
xlat
mov
imul
or
and
ds
addr16
add
clc
sbb
repz
pop
out
xor
cmp
xlat
outsl
std
jg
push
lret
mov
mov
pop
fimuls
push
xchg
push
insl
mov
mov
pop
push
sti
pop
mov
dec
mov
mov
lret
cmp
cmp
adc
mov
insl
dec
or
stos
movb
nop
rorb
dec
cli
aas
xor
sbb
loop
dec
jno
add
add
je
mov
push
xchg
std
mov
cmp
sub
cmp
jns
xlat
pop
repnz
pop
inc
add
fldpi
dec
mov
inc
mov
push
mov
push
hlt
icebp
add
pop
push
cmpl
dec
outsb
and
lret
stc
mov
dec
mov
sbb
mov
inc
jae
jae
jno
rcl
inc
xor
sahf
xchg
xchg
jmp
insb
dec
jae
fldenv
pop
add
sub
pop
stos
dec
jmp
mov
jne
cmpsb
dec
xor
xor
push
sbb
mov
pop
int3
nop
and
test
dec
in
jno
clc
pushf
lcall
frstor
jl
add
cld
pop
xchg
jecxz
negl
xor
xor
add
adc
int
imul
inc
cmp
cmpsl
sbbb
push
idivl
call
jo
jno
or
pop
mov
push
jl
flds
mov
mov
or
dec
push
or
pop
mov
cwtl
sbbb
xlat
sarl
ss
nop
incl
mov
insb
shrl
mov
or
cmp
xor
sbb
cli
inc
or
int
mov
bound
addr16
outsl
xchg
and
in
mov
inc
insb
fld
daa
cmp
out
shll
inc
addr16
jne
sbb
rcrl
inc
xor
push
fisubrs
out
cmpb
xor
mov
cs
imul
int3
xlat
jns
and
pop
sub
jns
in
out
xchg
pop
jo
jns
mov
and
cmp
movsl
add
push
mov
and
pop
aad
jae
fcomi
jecxz
cmp
daa
push
jb
bswap
mov
adc
jnp
int3
lods
lock
xlat
clc
int
loop
rolb
les
mov
adc
mov
and
stos
enter
js
dec
add
cmc
xchg
jecxz
sti
inc
sub
and
aam
sbb
addr16
fadds
in
clc
mov
or
stc
int
fldenv
sub
fisttpl
push
sbb
cli
flds
sub
fcmovu
sahf
xchg
pushf
shlb
mov
popa
xor
aas
and
outsl
lds
dec
push
pop
sbb
outsb
push
popl
dec
mov
stos
sub
push
cltd
in
in
movsl
or
xor
adc
fwait
adc
push
lahf
push
mov
xor
and
mov
xchg
outsl
push
popf
jmp
pop
insl
movsb
aaa
adc
sub
add
inc
inc
cs
xchg
js
shll
shl
lahf
xor
fnstcw
fsubs
fistl
not
xchg
dec
xchg
dec
xlat
fimull
push
sbb
add
lcall
xor
test
xchg
fnsave
aas
fdivr
lock
sub
sub
mov
out
sar
jmp
mov
addr16
es
pop
arpl
sub
push
and
xlat
add
nop
mov
xlat
push
cltd
adc
pop
subb
movsl
inc
pop
lea
adc
cwtl
xchg
mov
push
sbb
jo
stos
jg
and
or
iret
xchg
inc
aas
sti
cmp
add
scas
cmp
mov
or
outsl
stos
pop
push
xchg
mov
mov
add
shrl
dec
cltd
cmp
mov
inc
pop
jns
xor
jmp
push
mov
mov
push
cmp
sbb
test
xor
and
sub
daa
adc
jge
std
mov
adc
sub
push
jg
mov
jae
jo
xlat
scas
bound
repnz
mov
js
inc
jp
sahf
shlb
and
dec
mov
pop
call
ret
or
mov
arpl
popf
mov
imul
push
idivb
fldlg2
xchg
ljmp
jno
add
xor
ja
nop
dec
std
jbe
xchg
jne
mov
subb
cmp
xchg
testb
sbb
jp
add
in
lret
loop
iret
ret
jle
ds
sbb
loope
pop
push
pop
in
or
cli
push
pop
sub
lret
mov
jns
cmp
icebp
push
xchg
mov
xchg
mov
lea
cmpsl
fstpt
and
div
outsb
pusha
xchg
pcmpgtb
stc
cld
sbb
cmp
sti
mov
sub
mov
fwait
xorb
mov
daa
int
adc
in
rclb
xor
sbb
in
jg
out
or
orb
xor
add
or
xlat
cmp
lods
filds
stc
sub
add
xchg
and
xor
sbb
sti
movsl
mov
xchg
xor
pop
cmc
pushf
adc
fistps
sti
daa
stc
add
stc
xor
or
mov
hlt
jp
repnz
inc
sbb
pop
or
cmp
aam
mov
sub
fldenv
inc
push
jp
popa
xchg
negl
sbb
xchg
shll
test
sub
sub
mov
cmp
dec
xor
call
xchg
jp
jg
and
lods
arpl
jp
fldenv
push
pop
add
adc
mov
and
push
lods
or
fmull
rcrb
int3
call
dec
into
jmp
lea
pop
shlb
rolb
subl
daa
cld
rcr
sub
test
insb
rcrb
test
fistpl
and
push
xor
aaa
mov
sub
ret
shrb
sbb
and
das
les
in
ljmp
jbe
mov
push
imul
mov
jp
movsl
xchg
xchg
cli
jmp
js
cli
xlat
dec
mov
xchg
sbb
dec
or
cmpsl
sub
popa
xor
roll
arpl
into
dec
mov
jp
jmp
dec
add
and
xlat
mov
stos
sub
push
jl
jns
pushf
repnz
fs
mov
dec
clc
lods
mov
int3
test
dec
xor
sub
jnp
cld
cmpsb
mov
shlb
cmp
lock
daa
outsl
stos
fnstenv
das
add
insb
adc
mov
xchg
les
pop
adc
xlat
loopne
mov
mov
loopne
int
aad
flds
pop
icebp
pop
stc
daa
jecxz
sub
push
sub
dec
ret
pop
inc
mov
icebp
testb
std
clc
iret
fistl
xor
pop
mov
cmp
dec
shlb
pop
xchg
mov
inc
lcall
xor
mov
das
cli
loopne
sub
fistpl
adc
icebp
fsts
add
or
inc
pop
jbe
mov
arpl
cmp
clc
mov
sbb
mov
test
lcall
mov
aad
stos
ret
push
push
pop
or
fdivrs
cmp
out
xor
add
push
xor
lahf
fcmovnu
lods
xor
push
or
xor
jg
rdmsr
fstpt
xchg
mov
sub
jae
ret
lods
cmpb
pop
addr16
cli
xor
add
jns
or
xchg
add
mov
add
ficompl
aad
fldt
in
mov
cmp
jae
daa
xlat
stos
leave
std
mov
add
fs
int
js
shl
push
mov
stc
mov
push
mov
ja
shlb
push
fdivrl
lods
outsl
andb
pop
ret
flds
mov
cmc
and
cmpsb
cs
outsl
push
adc
and
add
repz
xor
inc
jge
dec
and
imul
sub
adc
aam
pushf
in
jne
loop
add
inc
xchg
jg
rorb
jb
push
repnz
mov
and
lds
into
mov
cmp
sbb
cmp
jmp
stc
dec
shll
insl
iret
lock
sub
pop
xlat
add
loope
or
mov
addr16
cmc
cmp
mov
loop
xlat
push
and
add
cmpl
push
sub
push
outsb
dec
mov
add
add
fwait
xor
dec
mov
pop
fcoms
push
xlat
sub
outsb
stos
mov
rcr
mov
std
mov
pop
pop
enter
and
dec
jmp
outsl
push
repz
xchg
aaa
fistpl
icebp
mov
pop
outsl
sarl
mov
sbb
insl
or
in
push
lret
mov
pop
adc
clc
mov
inc
fsubs
mov
cmpsb
xchg
fiadds
or
fs
jae
push
in
xchg
sub
ret
lret
clc
aas
xlat
jg
add
fnstcw
fistpl
sub
cmp
inc
inc
cmp
add
push
jmp
push
sub
xchg
insb
mov
sarb
push
mov
sbb
sub
fidivs
or
sub
out
cmp
cli
fstl
jbe
frstpm(287
sbb
in
loop
xchg
out
jp
pop
add
dec
outsb
adc
fcmovne
cmpsl
pop
adc
sbb
jmp
pop
xor
lds
push
xor
icebp
lock
int
fimull
jae
jb
pop
xlat
movsl
in
xchg
jno
movsl
xor
outsl
cmp
cmp
test
scas
push
pop
mov
imulb
cwtl
sub
shlb
adc
loopne
popf
xlat
push
or
test
gs
add
or
gs
jecxz
dec
in
mov
lods
jo
sbbb
sub
push
out
cli
mov
sub
pushf
xor
test
arpl
cld
adc
xor
test
arpl
js
adc
js
fnstenv
adc
xlat
imul
movsb
aad
pop
fimuls
sbbl
outsb
add
jnp
dec
sub
negb
dec
nop
push
sbb
jge
fistpl
push
stc
pop
testb
dec
pop
push
icebp
fldt
jmp
mov
cmp
sub
jns
add
or
aam
nop
sbb
xor
fsts
int
push
out
test
andl
stos
repnz
cmp
lods
xor
jge
hlt
push
sahf
imul
push
cld
push
xchg
xor
fcmovnu
test
nop
pop
lahf
sti
roll
jge
add
push
mov
xorb
in
mov
dec
cmp
int3
sbb
adc
ficompl
push
nop
fdivl
iret
das
cmp
mov
sti
insb
mov
adc
xor
loopne
and
scas
cmp
ret
into
pop
mov
insb
je
fwait
inc
dec
xlat
sti
or
rorb
es
int3
mov
fs
xor
or
imul
pop
inc
mov
and
dec
push
mov
pop
aam
fildl
inc
jp
cs
out
call
xchg
movsl
jbe
stos
out
sub
mov
or
xchg
cmp
mov
fnstenv
in
dec
pop
pop
test
out
xchg
add
pop
outsb
dec
sub
add
mov
aad
xchg
jle
and
xchg
xchg
push
popf
or
clc
adc
ja
push
mov
ret
jns
enter
cld
push
fs
xchg
mov
and
rol
mov
xchg
pop
jp
mov
out
fsubl
icebp
lods
or
and
movsb
int3
xlat
test
lret
jne
lahf
jno
push
adc
cmp
adc
outsb
leave
pop
xlat
jmp
cmp
je
xchg
rcrl
jo
pop
xlat
loop
popf
dec
scas
cmp
mov
add
cmpsl
stos
pop
mov
in
mov
lds
mov
push
fs
shl
pause
mov
and
repnz
mov
ja
fisttpl
pop
push
pop
fwait
nop
push
xchg
push
pop
mov
in
push
xchg
aaa
int3
cmp
insb
loope
or
inc
push
mov
lcall
ret
adc
aam
repz
movsl
arpl
insb
insb
nop
mov
xor
shll
mov
xchg
test
popl
mov
in
lret
movsb
sbb
sub
stos
cmp
ljmp
pop
nop
mov
jle
and
mov
in
sub
mov
jb
sbb
push
add
and
mov
pop
dec
test
mov
dec
movsb
inc
pop
pop
mov
cmp
and
mov
add
or
fwait
mov
stos
sti
cltd
add
mov
fdivrl
add
fiadds
stos
xchg
and
aas
pop
mov
push
or
js
in
in
or
loop
xchg
push
pop
orb
sbb
filds
and
movsl
repnz
lcall
cmc
pop
pop
mov
jg
je
fcmovnu
mov
sub
jecxz
xorb
dec
mov
inc
flds
push
push
jns
mov
sub
loop
inc
dec
lds
and
and
mov
adc
jae
or
aad
xor
pushf
cs
jbe
movsb
arpl
mov
cmpb
mov
and
jns
in
jle
jb
push
scas
sub
lahf
aaa
jecxz
push
xchg
loop
call
test
inc
jl
in
cwtl
mov
xor
hlt
mov
sbb
xchg
into
pop
and
cmpsb
in
push
rcrl
ror
mov
ret
hlt
and
xlat
xchg
jns
aam
xchg
push
fwait
ljmp
flds
cmp
sar
daa
leave
cmp
fld
insb
gs
cmpsl
movsl
lea
sub
lock
dec
loope
dec
faddl
js
fwait
shrl
jb
ficomps
jmp
xor
insb
sbb
xlat
lea
sahf
int3
mov
push
arpl
pop
cwtl
xchg
out
push
out
adc
test
jp
mov
mov
jp
xor
daa
xor
or
mov
mov
mov
pop
or
pop
or
cwtl
dec
cli
in
add
jb
fsubl
std
leave
sti
or
icebp
xchg
ds
pop
fimuls
adc
push
mov
xchg
sub
adc
subb
sub
loop
std
les
or
mov
dec
test
dec
push
fisttpll
shlb
mov
lock
lock
aad
fisubrs
cmp
push
add
in
push
sbb
je
popf
mov
jl
fstps
mov
vmread
xchg
cmp
cs
and
pop
pop
adc
jl
jno
jns
ja
fnstenv
loopne
cmc
mov
mov
inc
push
jnp
fwait
add
sub
sbb
cli
aaa
pop
fstpt
cmp
adc
pop
inc
fwait
adc
push
and
push
je
jg
sub
mov
or
pop
pop
jp
xchg
xor
push
sbb
jae
mov
dec
or
adc
outsl
dec
push
shll
jl
jae
test
dec
xchg
adcl
dec
lahf
lcall
or
imul
mov
mov
jnp
xor
cwtl
andl
push
test
jp
jo,pn
push
add
cmp
add
jnp
dec
cmpsl
mov
fadds
jae
dec
xor
inc
cmpl
adc
lock
cmp
mov
ret
out
mov
test
decb
jae
ret
jecxz
mov
sub
or
testl
ret
jge
adc
mov
pop
addb
push
enter
cs
sbbw
shlb
xor
push
add
addr16
pop
data16
mov
xchg
adc
aam
xor
sbb
imul
testb
int
insl
pop
hlt
test
pop
fwait
mov
movsb
jle
add
daa
cmp
xabort
sub
and
movsl
dec
mov
fisubrl
sub
cmp
mov
outsb
arpl
fiaddl
test
jge
mov
and
push
int
ficoml
mov
dec
in
mov
adc
into
in
jle
dec
test
pop
push
mov
cmp
jnp
pop
stc
pop
mov
xlat
imul
xor
ss
sbb
add
hlt
mov
jno
lds
xor
std
jmp
imul
jg
and
mov
inc
mov
imulb
rclb
cmpsb
sub
cmp
sbb
inc
push
add
xor
mov
in
push
cltd
jns
aam
lds
push
mov
push
xor
push
cmp
jae
iret
pop
jg
mov
xlat
cmpsl
mov
jmp
imul
xor
aas
inc
cmp
xor
ss
dec
push
dec
sbb
jp
mov
pushf
in
jl
jns,pt
out
jae
loope
ja
or
xor
xor
cmp
pop
push
sub
dec
adc
cltd
sub
cmpsb
jns
ds
mov
and
fdivrs
bnd
in
xlat
pop
xchg
fldt
push
dec
mov
cmp
ja
mov
xchg
jbe
mov
ficoml
loope
sbb
or
data16
and
icebp
or
pushl
sub
mov
fmulp
push
cmp
fcmovnbe
stc
ds
outsl
addr16
in
mov
or
mov
ljmp
cmp
sbbl
scas
lock
stc
fcoml
call
xor
sbb
xlat
fsts
jmp
jne
adc
dec
ret
mov
cs
or
cmc
addr16
xor
in
in
stos
xlat
push
jle
lea
iret
push
xor
or
int
jg
and
sub
add
mov
cmp
cmp
push
and
scas
outsb
cld
jo
or
sbb
push
imul
mov
inc
lahf
jg
mov
add
mov
mov
xor
mov
inc
fwait
imul
pop
xor
popf
lea
xor
subb
aam
mov
pop
xchg
inc
es
inc
adc
cmp
flds
or
sbb
out
mov
or
jp
sbb
inc
push
aas
adc
nop
pop
aam
push
lahf
fs
cmp
sub
xor
inc
cs
addl
pop
clc
push
aad
fcmovnu
cltd
push
xor
inc
shrb
adc
aam
scas
pop
push
inc
stos
dec
repz
pusha
cmp
adc
xor
ljmp
xor
fildl
cld
mov
mov
xchg
cmc
cmpsb
scas
mov
dec
fsubs
lret
cmp
fisubl
pop
aas
les
incl
adc
sbb
jns
or
js
jno
jnp
arpl
mov
and
xor
enter
rcl
mov
pop
mov
pop
test
sub
insl
stc
and
mov
jg
or
xor
rcll
pushf
add
test
mov
daa
stc
in
or
notb
xchg
xchg
lahf
inc
dec
repnz
in
push
jl
mov
sbb
fst
leave
sbb
aas
dec
out
sbb
insl
dec
inc
jae
stc
test
sub
add
mov
test
lods
dec
les
sub
orl
push
jno
sbb
push
ja
call
pop
scas
aam
xor
sbb
insb
mov
sbb
sbb
ror
outsl
and
dec
popf
push
dec
in
mov
dec
adc
aas
mov
cmc
sbb
fsts
popa
ds
cwtl
insb
and
or
fcmovne
cmc
repz
xor
jmp
or
out
lcall
add
stc
jle
cmp
pop
mov
mov
mov
loop
mov
shlb
mov
call
inc
cli
jecxz
nop
add
dec
cli
push
loop
fistl
jae
dec
enter
movsl
fildl
and
push
fidivrs
cmp
aad
pop
sub
lret
mov
jno
scas
aas
pmulhuw
std
dec
lahf
dec
pop
ss
mov
pop
test
sbbb
xchg
jo
cmp
push
fisubrl
stc
test
xchg
leave
jge
mov
mov
imul
push
stos
jecxz
mov
out
or
cmpsb
cmp
push
xchg
cmp
pusha
imul
lahf
mov
int
out
movsl
sbb
xlat
xor
push
push
xchg
js
xor
out
loope
lret
jecxz
cli
insl
mov
icebp
out
test
pop
enter
loop
outsl
and
mov
push
add
subl
loope
fidivrs
daa
mov
mov
dec
xchg
adc
mov
xchg
dec
ja
ds
cmp
out
cmp
mov
test
jge
lea
les
jb
jp
cmp
dec
popa
or
pop
cmc
int
xchg
pop
pop
xor
leave
xor
sub
lcall
pop
mov
inc
xor
or
xchg
dec
pop
pushf
int3
das
scas
mov
lods
sbbb
repz
nop
xchg
mov
jmp
jl
mov
out
dec
nop
cmp
loope
ja
push
rolb
shll
mov
xchg
sub
or
push
add
ret
aad
and
add
dec
pop
xchg
jo
outsb
fs
xor
setne
aas
dec
sbb
jo
insl
arpl
sbb
xchg
sarb
cmpsl
fwait
das
lea
pop
dec
pop
pop
aaa
push
pop
lahf
sub
jge
or
inc
fsubs
stos
and
mov
cmp
cmp
mov
imul
jp
out
pop
push
loop
sbb
mov
outsl
cmpsb
fcmovbe
mov
inc
push
dec
add
lods
clc
test
cltd
dec
stc
push
fcmovnbe
jecxz
dec
cld
pushw
lods
push
cmp
jp
fldcw
push
cmp
or
mov
out
cmp
sub
ja
addb
std
js
enter
imul
ret
mov
and
mov
lock
sbbl
js
pop
sbbl
iret
xchg
cli
push
xor
pop
pop
leave
jge
lods
and
cwtl
pop
mov
mov
mov
icebp
or
or
add
push
test
mov
pop
rclb
push
dec
xlat
xchg
fsub
mov
loopne
or
mov
dec
andb
out
imul
and
cld
push
nop
mov
sub
shll
pushl
pop
push
sub
addr16
aam
pop
xchg
xchg
adc
out
sbb
addr16
pop
repz
dec
imul
pusha
xchg
sbb
fistl
fisubrs
and
inc
lahf
aaa
mov
lds
cli
cmp
test
ja
xchg
adc
cmp
data16
jae
cmc
lret
jl
jno
mov
sub
test
and
les
fidivl
icebp
test
pop
dec
sbb
mov
fstps
stos
addr16
mov
sub
or
add
or
decb
std
adc
fstpt
mov
je
sub
daa
in
js
shll
and
cmc
cmp
lock
cmp
and
in
xchg
sbb
mov
fildl
das
mov
jmp
xchg
pop
adc
dec
push
and
pop
push
jb
push
sub
out
push
or
or
cmp
add
cmp
pop
xor
jl
lds
aam
cwtl
xlat
mov
punpckhdq
scas
push
lret
ret
iret
xchg
push
ficoml
gs
enter
inc
xchg
pop
inc
cmp
xor
incb
lret
ficomps
stos
mov
mov
sbbb
inc
sub
mov
dec
dec
xchg
xor
add
xchg
jl
or
cmc
xor
stc
pop
xchg
dec
adc
test
add
enter
hlt
int
pop
loope
or
sbb
pop
ljmp
das
pop
jne
divw
xor
jae
sub
pop
bound
sbbl
mov
xor
mov
xor
pop
jno,pt
or
stc
faddl
xchg
push
push
lods
daa
subb
in
lret
sub
fistpl
push
insb
xlat
mov
fwait
lock
adcl
push
adc
pop
add
movsl
cmp
add
sbb
imul
xor
pop
in
mov
bound
sub
jb
cmp
pop
sbb
stos
mov
add
cmpsl
test
ja
pushf
stc
je
out
jge
movsb
shlb
dec
sub
popa
fwait
pop
lret
fsubrl
inc
push
imul
roll
push
dec
sbb
sbb
push
and
mov
jg
fst
sbb
mov
fs
cmp
imul
xchg
xchg
je
loopne
fmulp
mov
lret
pop
test
into
and
mov
add
imul
testb
lea
sub
xchg
mov
mov
adc
xor
add
adc
nop
fldt
mov
and
xor
xor
aas
add
jno
sub
fdivs
pop
rcr
push
std
sbb
cld
movsl
sub
inc
xor
aam
ss
xor
stc
int3
enter
test
or
xchg
xchg
mov
push
pushl
dec
call
dec
dec
pushl
clc
xor
pop
mov
fidivrs
or
adc
xor
lods
push
dec
and
and
xor
nop
aaa
mov
popa
pop
movsl
imul
or
sub
arpl
and
inc
loopne
xlat
and
jae
adc
scas
addl
ss
mov
adc
movsl
sbb
leave
movsl
and
std
mov
jno
mov
gs
and
pusha
and
scas
mov
push
mov
clc
mov
mov
shr
dec
lock
int3
or
sub
addb
dec
loop
dec
ret
dec
dec
xlat
fisubs
imul
push
xor
pop
pop
movsb
xlat
jg
cmpl
cmp
subb
cmp
xor
shl
sbb
inc
sub
adc
loopne
stos
je
xlat
add
outsl
test
shlb
addr16
mov
bound
fiadds
pop
enter
jg
jb
js
cmpsl
xor
xor
fdivrl
sbb
adcl
ljmp
sub
push
shrb
xor
jae
xchg
xchg
and
mov
or
xlat
cli
pop
add
lcall
fldt
sub
pop
xor
pop
pop
dec
pop
cmpsb
sti
cmp
jno
and
and
mov
mov
mov
or
adc
stos
gs
adc
dec
int
je
cmp
xchg
lds
inc
js
sub
fildl
out
out
fiaddl
enter
jno
adc
xor
xchg
xchg
pop
or
mov
jp
fldenv
test
test
pop
cmp
xlat
mov
adc
cmp
outsl
clc
sub
push
pop
fistl
dec
or
inc
rcr
or
sahf
push
lods
inc
jbe
mov
dec
fdivrs
cmp
push
icebp
aas
xor
xor
and
xchg
imul
pop
xchg
sbb
sub
fsqrt
iret
jp
nop
jbe
stc
fwait
sbb
cmp
gs
popa
cli
es
mov
rorb
aas
pop
xchg
ret
in
das
push
xor
xlat
jno
out
push
cmp
xchg
cwtl
dec
dec
leave
dec
xlat
fisubrs
stc
insb
sub
adc
lods
je
pop
out
shlb
les
fcoml
imul
das
add
dec
xor
pop
movsl
jecxz
dec
call
mov
cmp
mov
jg
outsl
cld
dec
sbb
mov
cltd
mov
push
xor
scas
mov
fldz
adc
mov
dec
stc
xor
pop
xchg
dec
jle
and
mov
iret
je
addr16
jno
out
lods
jmp
rolb
or
jp
iret
in
jno
lea
cmp
test
mov
dec
insl
jbe
and
mov
dec
rcr
dec
push
jnp
xorl
sub
jnp
notb
fwait
and
jp
cmp
inc
inc
mov
inc
mov
cmp
lods
mov
rcrb
hlt
mov
pop
or
dec
test
jae
std
lcall
cmp
jno
sahf
mov
add
mov
xchg
lahf
dec
shrb
call
imul
cmp
xor
icebp
pop
push
std
repnz
sarb
jmp
cld
mov
push
mov
or
arpl
jg
and
daa
fs
rep
popf
or
pop
out
int
xchg
dec
pop
ret
in
sbbl
sub
lret
std
into
imul
sti
lcall
clc
dec
cmpsb
or
icebp
rolb
out
mov
hlt
sbb
lock
push
insl
pop
lret
in
xor
push
aad
xchg
out
cmc
adc
call
gs
jno
repz
pushf
adc
call
and
xlat
scas
arpl
dec
xlat
push
adc
pop
cmp
mov
cmp
push
adc
sub
sbb
xchg
filds
lea
cmp
jp
xchg
push
mov
push
mov
jp
iret
jle
cmpsb
jb
int
mov
xor
sub
ficoml
sub
xchg
jae
pop
ja
fwait
add
scas
shl
xchg
sbb
cmp
sub
sbb
pop
shlb
roll
adc
scas
xchg
push
clc
ret
or
xor
or
cmpsb
xchg
dec
stc
adcb
xchg
cltd
sar
js
outsb
rcrb
or
test
fdivs
sub
push
iret
push
rclb
pop
xorb
cmpsb
dec
jnp
push
clc
mov
insl
mov
jg
fisttpl
stc
or
fnstenv
pushf
enter
lahf
dec
xor
sbb
adc
mov
mov
jge
mov
sbb
adc
js
pop
mov
dec
lret
loop
xor
push
mov
add
push
adc
sarl
xchg
andb
push
and
das
js
mov
imul
cmpsb
insl
imul
pop
push
mov
xor
cwtl
scas
push
dec
cmp
xor
xor
mov
mov
xlat
nop
adc
cmpsl
inc
enter
mov
stc
les
sub
movsl
enter
sti
shll
push
pop
mov
push
jl
fidivl
dec
sub
sub
xchg
jno
inc
mov
xchg
ljmp
dec
dec
fsts
push
insb
fdivl
loopne
mov
push
push
and
dec
jns
lcall
xor
mov
xor
cltd
inc
mov
add
std
shll
xor
and
mov
mov
jno
xchg
test
inc
vpsllw
push
and
or
dec
mov
cli
outsb
xchg
adc
test
pop
mov
xor
out
lcall
mov
and
push
jecxz
fwait
femms
mov
iret
mov
aam
cmp
sub
cmp
stc
push
rcr
xchg
cmp
js
sub
stos
dec
or
repz
dec
mov
xchg
xchg
out
sub
and
fcmovnu
outsl
or
and
mov
and
mov
aam
bound
push
cwtl
cmc
mov
dec
mov
push
sbb
or
dec
leave
aam
jg
or
mov
fs
repz
ljmp
xchg
sbb
mov
hlt
rcrl
fildl
add
inc
iret
imul
je
hlt
push
add
mov
sbb
pop
fdivp
bound
sub
pop
xchg
ret
in
adc
fwait
and
pusha
cmp
sub
mov
mov
fs
adc
outsb
fnstcw
mov
mov
sub
lods
fstps
pop
pop
xlat
aad
mov
rcr
ljmp
or
mov
push
sub
mov
sahf
inc
sub
sbb
jo
xchg
stos
and
xchg
js
loope
lds
addr16
imul
push
pop
add
data16
dec
rcl
loope
and
fcoms
rorl
adc
cmc
mov
lods
jb
sar
dec
in
std
sbb
xchg
inc
push
xchg
stos
aam
or
out
push
loopne
pop
inc
xor
jge
mov
pushf
push
lods
xor
jno
dec
inc
test
test
scas
fsts
jmp
decl
jg
psubb
es
cli
int3
or
push
sbb
cmp
fisubrs
or
test
push
pop
ret
pop
sub
dec
jns,pt
sbb
adc
fcomi
pop
mov
popf
xchg
mov
pushf
dec
and
mov
pop
inc
jnp
fistpl
lret
jmp
addb
jae
fsubrs
mov
clc
push
fdivrl
jl
sbb
lods
dec
es
or
mov
arpl
test
stc
stc
xchg
sub
add
lret
cmp
and
das
call
inc
int3
in
and
insl
xlat
fwait
addl
adcl
mov
mov
mov
xor
inc
mov
xor
cmp
pop
cmp
adc
mov
pop
out
pushf
or
outsb
cmp
stc
mov
pop
jae
insb
je
rcrb
loop
cld
inc
dec
mov
xchg
pop
push
xchg
sbb
pop
rorl
insb
mov
sbb
out
and
test
stos
push
adc
cs
cmp
ljmp
jl
mov
jae
sub
ja
aaa
cltd
mov
cmp
iret
mov
fnstenv
lret
xchg
adc
xchg
add
xchg
out
mov
sub
adc
sub
pop
mov
enter
fldenv
stos
ret
pop
dec
fisttpl
movsl
test
in
xor
inc
mov
lcall
out
incb
lret
pushf
xor
jmp
fnstcw
sbb
jle
jnp
enter
add
jns
flds
addl
pop
pop
iret
cs
xlat
subl
sub
jbe
fidivrs
fnstenv
movsl
jno
repnz
stos
std
je
test
mov
movsb
fwait
pushf
inc
adc
in
fnstenv
sub
dec
fbld
call
and
jle
xchg
imul
push
inc
jne
sbb
fwait
dec
xlat
mov
lahf
mov
call
fidivrs
dec
jno
mov
pop
mov
and
shrl
xchg
rorl
inc
data16
cmp
mov
dec
sbb
stc
dec
jmp
xor
call
sbb
fwait
in
or
loope
pop
cld
pop
test
and
orl
mov
adc
mov
outsl
add
hlt
dec
ja
or
outsl
adc
pop
stc
fprem1
cld
mov
dec
add
or
test
add
lcall
push
or
cmp
cmp
divl
inc
imul
and
jp
rcrl
outsl
cmp
sbb
xchg
pop
je
xlat
dec
mov
xor
jg
inc
mov
aad
pop
sarb
dec
cmpsl
testl
fidivl
inc
sbb
or
hlt
clc
idiv
aam
xlat
push
add
outsl
pop
push
fwait
cld
mov
cmpsl
lahf
rcll
xchg
cwtl
xchg
imul
andb
jmp
mov
int
jns
push
jg
ss
lret
fimuls
xchg
and
sbb
pop
pop
pop
dec
lret
pop
cmp
stc
stos
ja
xchg
cmp
ja
lods
and
xchg
fisttps
xor
out
and
aam
jecxz
xlat
cmp
lahf
imul
movsb
lret
stos
ror
jns
inc
out
fstps
jb
and
push
ss
cmp
jecxz
or
sub
int
push
mov
sarl
mov
sub
addr16
mov
sti
jae
call
cli
jg
xlat
aaa
scas
rcr
and
xchg
ret
not
mov
addb
add
mov
sub
in
xchg
sbb
fisttpl
adc
jmp
push
xchg
dec
in
and
les
inc
test
push
jp
sub
pop
jne
addr16
loop
mov
cld
jno
in
xorb
dec
aas
mov
or
aad
or
jnp
icebp
outsl
leave
std
sbb
cmc
stc
and
mov
dec
movsl
or
fnstcw
lahf
imul
pop
jno
jecxz
iret
stc
xchg
out
push
icebp
rcrl
mov
lods
mov
insl
cmpsl
jno
and
movsl
sub
stc
or
mov
and
sbb
adc
mov
jecxz
insb
je
sbb
lcall
int
push
dec
cwtl
inc
or
imul
aaa
jle
mov
push
lods
sbb
adcl
and
aaa
mov
lahf
ret
into
inc
popf
adc
xor
gs
cmp
adc
mov
lret
jge
inc
cmp
loopne
loope
mov
mov
and
dec
and
imul
je
sub
pusha
mov
mov
pop
into
push
call
mov
mov
dec
mov
hlt
mov
add
bound
push
cmp
jns
lock
jp
pop
and
ret
js
jp
stos
push
mov
js
call
mov
scas
cmp
cmp
xchg
inc
inc
mov
int3
cmp
lea
loopne
jmp
rcrb
dec
adc
or
popf
adc
icebp
mov
mov
sub
adc
jno
shlb
cld
ss
or
stos
popa
and
ret
mov
push
sub
mov
ds
pop
jns
sub
stos
mul
mov
sub
adc
ret
cmp
lret
popa
addr16
fxch
dec
call
or
jmp
pop
xchg
mov
aas
push
cwtl
shrl
mov
mov
and
test
out
out
pop
xchg
rolb
popf
xchg
cmc
cltd
pop
jae
xchg
sbb
inc
frstor
xor
and
xchg
dec
jnp
push
int
xchg
out
test
mov
stc
cmp
xlat
lret
lcall
sbb
sbb
shrl
sti
and
push
ja
scas
enter
cmpsl
arpl
sub
adc
mov
dec
xorb
jnp
xchg
fchs
aam
sub
push
dec
mov
imul
mov
cmpsb
lret
sbb
stc
sbb
push
subb
inc
insb
aam
mov
and
mov
jo
and
jl
flds
or
sti
sub
push
mov
mov
jmp
sbb
jae
nop
testl
cmp
fisttpl
ljmp
adcb
pop
xor
xchg
jnp
mov
dec
cmc
jae
cmp
push
jnp
pop
xor
xlat
xchg
sbb
iret
out
jns
jne
popa
jae
mov
mov
lcall
test
push
daa
jns
inc
rcrb
and
std
andb
add
dec
add
sar
jb
scas
push
mov
xor
mov
jne
mov
das
shrl
or
cmpsb
sbb
mov
rol
jmp
and
mov
push
test
dec
sbb
addl
xchg
jmp
inc
dec
mov
or
test
dec
or
aad
fidivs
out
jg
fidivrs
dec
loopne
das
imul
sbb
das
push
inc
sub
lahf
mov
sub
fadds
jne
sbb
aaa
ja
add
push
mov
adc
inc
inc
inc
lcall
outsb
jge
sbb
mov
cmpsl
fisubl
cwtl
das
mov
out
add
negl
sub
cmpsb
and
mov
jns
add
jae
add
outsb
lods
fcmovnb
xlat
test
mov
adc
push
mov
dec
das
int
inc
fwait
inc
stc
aad
xlat
shlb
je
fnsave
push
xor
jns
nop
pop
sub
adc
sub
in
icebp
mov
lret
push
imul
add
out
add
pop
xor
cs
shl
push
loop
bound
gs
cli
push
mov
lahf
sub
and
in
out
xor
sub
jo
sub
hlt
movsl
inc
push
jb
jb
xlat
sbb
mov
push
dec
add
ja
cmp
scas
push
dec
xchg
fildl
ja
cmpb
jge
mov
lock
imul
xor
fnstcw
not
ja
int
pop
pop
shrl
cmpb
seto
mov
mul
mov
dec
nop
dec
cmpb
test
sarb
xor
cwtl
jp
pushf
test
pushf
repnz
cmp
je
popa
enter
out
les
lock
fidivrl
jmp
lahf
jbe
inc
jae
sar
mov
cwtl
pushf
dec
xchg
jbe
in
cmpl
xlat
fcmovbe
dec
add
cmp
fsts
jb
add
sbb
insb
cltd
cltd
fcmovnu
or
pushf
xchg
xlat
push
sub
loopne
aas
add
cmc
xlat
out
adc
pop
xor
dec
sbb
xor
xchg
mov
or
js
aaa
push
xor
mov
clc
mov
mov
dec
mov
cmpsl
out
lea
outsb
jg
lock
mov
mov
cli
cmp
dec
addb
bound
add
cmp
sbb
pusha
cli
ds
scas
scas
mov
movsb
fstpl
movsb
xor
test
inc
inc
enter
int3
bound
jno
push
out
or
repnz
or
adc
mov
cmp
sbb
fidivrs
test
stos
stc
jp
sahf
and
dec
in
cmp
jle
addr16
flds
dec
sbb
or
fnstsw
mov
test
js
jg
jp
sbb
clc
xchg
stc
xor
dec
sbb
adc
dec
cli
cwtl
jp
pop
cmp
inc
add
addr16
sbb
imul
outsl
push
sub
repz
xor
push
into
jl
jo
test
cli
sub
fildl
fmull
sbb
push
cmp
mov
jmp
mov
and
nop
fmulp
jg
mov
xor
adc
xlat
in
int
push
loope,pt
jg
arpl
jnp
out
jae
xchg
lcall
sarl
incb
shll
lahf
scas
jns
and
pushf
out
jge
adc
add
and
test
pop
imul
and
jns
lcall
add
and
xor
daa
bound
lods
lahf
loopne
addb
push
sbb
leave
cli
jne
cmp
test
jle
sbb
cmpsb
fucomi
cmpsb
int
dec
jg
xchg
dec
ljmp
sahf
mov
jne
leave
int
ret
fld
sti
jp
fiadds
mov
jne
adc
sbbb
roll
imul
lcall
mov
andl
sbb
adc
adc
les
pop
cs
pusha
cmp
out
jae
fdivrl
jecxz
push
xor
and
jae
lret
notl
lcall
sbb
shrb
gs
cmpsb
in
jg
rcll
in
xchg
xchg
xchg
loop
pop
dec
and
daa
movl
mov
xchg
mov
jl
ds
rcrb
lret
or
fwait
and
fisttpl
mov
dec
xor
data16
sub
enter
jg
mov
push
hlt
mov
add
nop
mov
cmpsb
or
push
and
push
pusha
insb
rcrb
ds
js
xor
or
pop
add
pusha
dec
cmp
test
jae
subl
push
sub
loop
insb
sub
leave
lods
mov
add
les
lcall
mov
dec
popf
push
xor
daa
sbb
fsin
or
fnstcw
mov
clc
in
movsl
mov
sbb
into
mov
outsb
push
xchg
and
nop
pop
ret
sbb
mov
jg
cmp
neg
out
mov
push
dec
sarb
pop
jge
sub
repz
outsb
loope
shrb
jns
adc
push
and
mov
nop
sbb
mov
xor
loope
mov
les
mov
mov
pop
ret
mov
cmpsl
cmpsb
fwait
daa
fstpt
fwait
push
xchg
rorb
scas
pop
in
stc
dec
xorb
fmulp
loopne
pop
xor
add
repz
fsts
stc
xlat
adc
mov
pop
add
sbb
lods
stc
sub
stos
in
jecxz
mov
mov
xor
into
stc
lret
or
insl
aam
cmpsl
sti
les
cwtl
dec
rolb
cmpl
iret
mov
jne
xlat
sbb
xorl
cwtl
push
sbb
repz
int
xor
push
xor
xor
add
call
test
add
pop
sbb
cmp
dec
push
insb
mov
rol
add
enter
sub
ja
push
fnstenv
push
aaa
pop
sub
jl
jg
xchg
pop
in
or
cmc
pop
movsb
fcmovne
cld
outsl
andb
jbe
in
ret
gs
xlat
pop
mov
mov
ror
or
or
mov
xchg
sbb
jne
aas
xchg
push
pop
subl
dec
jnp
js
cwtl
fcomps
mov
leave
xlat
je
and
pop
flds
fwait
je
push
outsb
push
pop
loope
dec
xchg
or
jbe
ja
stc
dec
sub
clc
pop
lcall
push
xchg
xchg
xchg
loope
mov
in
cltd
cmp
pop
push
lahf
xor
push
sbb
daa
frstor
mov
push
arpl
jecxz
sbb
test
in
jns
stos
jbe
jg
jecxz
xor
jle
xchg
mov
fcmovbe
cli
inc
mov
aaa
pushf
ret
cmc
rcrl
sub
inc
cmp
add
ficompl
loope
negb
xor
nop
mov
daa
xor
mov
sbb
push
xchg
mov
fisubrs
arpl
or
adc
mov
aas
lret
push
loope
pop
cli
adc
sbb
jbe
inc
icebp
leave
dec
cmp
inc
in
adc
push
sub
rcll
sbb
pop
add
icebp
adc
add
loop
std
stos
jne
ja
loope
mov
or
inc
dec
cs
sub
imul
sbb
arpl
xchg
ficomps
outsl
dec
jo
scas
lahf
aaa
xor
mov
movsb
outsb
test
cmp
nop
iret
or
push
xchg
jno
adc
dec
out
shll
cmp
cmp
lock
cmp
jnp
push
enter
xor
std
xchg
nop
out
jbe
sar
scas
in
and
ja
mov
sbb
int
mov
cmp
or
into
pushf
fnstcw
int
rcrl
and
push
jae
sbb
xor
addr16
arpl
sub
jecxz
adc
sbb
inc
dec
push
push
cmpb
ret
test
xchg
popa
fwait
je
xlat
push
lret
cmpsl
fldcw
subb
jns
push
lret
cli
mov
jg
pusha
xlat
push
xchg
scas
clc
cmp
mov
mov
cs
notl
lahf
ret
sbb
mov
xlat
cld
push
xlat
jo
and
pop
stos
adc
fdivl
xor
add
inc
push
out
std
and
test
daa
ficomps
rorb
sub
dec
ljmp
xor
sbb
mov
xchg
dec
adc
mov
cs
add
push
lock
push
dec
and
fdivrs
xlat
ret
fiaddl
xchg
jmp
sub
je
or
pop
xor
test
loope
jp
fisttpll
add
bound
and
arpl
arpl
fildl
out
lret
lret
test
cmp
push
loope
dec
push
xchg
mov
sbb
push
subb
negl
lods
xchg
dec
mov
dec
push
xchg
out
and
xor
add
xchg
inc
push
jb
add
jns,pn
pop
lret
jle
outsb
or
addr16
and
and
fwait
je
mov
sub
rolb
fdivrl
sub
inc
push
or
push
and
stc
dec
daa
xlat
clc
xor
pop
push
xchg
jbe
sbb
or
std
sub
pop
mov
aad
lahf
in
mov
int
cmp
jmp
or
jnp
mov
lret
cmp
xor
sub
inc
mov
push
ljmp
jmp
scas
sbb
cld
dec
push
or
xchg
mov
mov
lock
insb
mov
push
mov
rcrl
pop
dec
jge
sbb
out
pop
mov
sub
pop
imul
mov
and
add
push
adcl
orl
xor
or
pop
stos
adc
xchg
cmp
mov
dec
cs
lahf
cs
cld
cmpb
icebp
cmp
xor
jle
sbb
stos
mov
ss
push
push
stos
fcompl
sbb
into
int3
or
mov
and
sub
cltd
pop
xorl
sbbb
cmp
ss
jmp
xchg
push
shl
das
inc
push
adc
and
aam
out
data16
or
jns,pt
add
cwtl
sbb
decl
inc
and
mov
pop
ds
lods
or
scas
retw
shl
pushf
les
scas
jb
cltd
repnz
xor
pop
cmp
gs
pop
mov
pop
out
or
dec
cmc
xlat
pop
inc
stos
icebp
mov
jb
xchg
adc
xchg
mov
jp
xor
xor
imul
fcomps
je
add
sbb
sbb
addr16
push
sub
jb
cli
ficomps
sbb
dec
cmpsb
lods
sarl
mov
insb
fsts
cmpsb
test
repz
push
xchg
cmp
sbb
add
shl
pop
leave
inc
inc
or
fisubl
fisubs
imul
movsb
cmp
out
mov
inc
xchg
fildl
out
mov
cs
inc
jbe
hlt
xorl
xchg
adc
adc
sbb
jecxz
or
xor
inc
add
fcom
sbb
add
arpl
stos
sub
xchg
fwait
push
shll
dec
stos
cmpb
or
lods
ret
repz
shll
ja
js
push
aam
mov
dec
out
sub
xchg
mov
push
dec
mov
leave
arpl
xor
addr16
imul
xchg
sahf
jle
or
mov
jno
fstpt
inc
or
sub
cmpl
ficompl
cli
repz
je
xchg
mov
insb
sub
shr
or
das
pop
xchg
ljmp
jae
mov
jae
adc
xor
mov
aaa
push
fs
jmp
mov
dec
xlat
cmp
stos
mov
and
sub
into
sahf
lret
addb
inc
into
mov
sar
and
movsl
inc
pop
mov
iret
jno
and
lods
sub
or
aam
in
mulb
ret
jns
xor
or
mov
fistl
adcl
push
push
dec
sbb
sahf
cli
mov
cwtl
outsl
sub
fidivrs
push
push
xor
mov
add
repz
add
xchg
iret
dec
jae
ds
pop
and
inc
sbb
xor
cs
jl
fildl
xchg
std
insb
pop
push
inc
xor
mov
insl
imul
lret
mov
popa
mov
ret
add
sub
cmpsl
in
es
les
mov
ja
push
das
mov
xor
imul
push
push
and
mov
xchg
ss
stc
out
add
or
stc
fstps
pushf
pop
add
push
jecxz
shrl
ja
daa
adc
rorl
jg
sbb
xor
popf
ljmp
xor
sahf
pop
mov
das
cmp
mov
stos
imul
lret
sbb
imul
outsl
mov
lcall
or
mov
fldenv
mov
and
xchg
lock
imul
insb
xor
mov
xor
pop
xchg
fldpi
popl
mov
xchg
and
int3
icebp
xor
sub
jne
fistpl
sbb
call
mov
dec
adc
pop
adc
or
shll
test
jae
fildl
test
jl
push
cmpsb
dec
mov
rorl
shrl
lret
jns
add
xlat
xor
xchg
test
xlat
sbb
data16
and
cmp
fldenv
fwait
les
and
push
pusha
ss
inc
sub
pop
in
stc
and
cld
scas
fcmovne
inc
mov
je
sarb
sub
add
outsl
cwtl
dec
in
iret
xor
aaa
jnp
bound
jp
inc
movsl
sub
push
ds
nop
sub
mov
shrb
fisttpl
push
lahf
test
scas
inc
lahf
pop
mov
cli
fdivr
xlat
inc
xor
xor
push
in
das
int3
or
mov
adc
mov
xor
movsb
stos
push
mov
std
int
sti
scas
pushf
addr16
jb
arpl
hlt
iret
jmp
dec
das
push
push
mov
add
in
and
sub
ret
push
sub
sahf
sub
xlat
mov
jmp
fisttps
daa
pop
dec
push
pop
or
cmp
inc
ret
dec
mov
xchg
cli
cmpsl
fistl
jns
addr16
lcall
fwait
test
addr16
cmp
xor
inc
clc
or
enter
sbb
addr16
or
movsb
inc
inc
pop
adc
aaa
addr16
popa
fistpl
outsl
dec
outsb
pop
xchg
push
cmp
push
dec
mov
xchg
and
cld
lret
push
xor
std
sub
lods
xlat
pop
and
ja
or
repz
cmpsb
cmp
xor
cli
cli
fildl
test
push
imul
jae
jo
dec
add
stos
adc
or
rcrb
cmp
loopne
dec
mov
sub
xor
push
lret
cmpl
out
pushf
test
dec
xor
sbb
stos
repz
mov
pop
negb
lret
gs
push
fisubs
cwtl
cmp
aas
dec
xchg
jmp
ss
cs
loope
shrb
fcmovu
jno
out
sti
or
adc
repnz
adc
out
inc
and
pop
mov
xchg
dec
mov
fsub
and
ficoml
ljmp
fldcw
ret
out
mov
dec
xor
fxch
aas
and
fnsave
mov
push
fcomps
loopne
sbb
subb
mov
push
xlat
ficoms
pop
das
xchg
jp
mov
pushf
dec
sbb
test
ds
mov
call
jne
jo
push
jmp
jmp
mov
xor
std
or
sbb
and
insb
adc
stc
dec
sub
push
rcrb
xchg
pop
and
es
loope
cs
repz
movsl
sub
bound
ficompl
loop
push
mov
sti
pushf
mov
and
xor
jp
loop
es
fsts
fnstenv
sbb
std
add
pop
push
and
inc
xchg
xchg
or
push
mov
fs
jp
mov
add
pop
pop
fnstenv
mov
jmp
cmp
mov
stos
mov
shll
cmp
push
lea
daa
insb
fdivrl
in
cmp
fstpt
addr16
fldcw
arpl
xchg
add
dec
daa
cmp
dec
ja
adcl
mov
sarb
enter
mov
jno
imull
sub
and
and
mov
outsb
imul
fldenv
aas
repz
push
mov
fbld
xor
jecxz
push
inc
push
cmpl
out
sbb
rcr
xchg
push
pop
bound
popa
mov
aaa
ret
cli
mov
stos
mov
adc
jne
add
dec
and
ret
xchg
xor
jg
mov
inc
cmp
and
mov
mov
dec
xchg
ret
scas
mov
stos
or
inc
icebp
iret
jb
cmp
ja
inc
or
adc
mov
dec
jg
dec
fxch
adc
loopne
push
out
jp
and
jae
xchg
fcompl
sub
push
icebp
fwait
xor
pop
mov
out
or
jns
insb
or
lods
rcr
push
lea
clc
cmc
scas
jo
add
or
sub
data16
push
add
test
addr16
mov
xchg
call
pop
repz
popa
push
mov
popw
cs
xchg
sub
inc
repz
dec
sbb
xchg
les
fisttpl
push
adc
js
ljmp
ja
xlat
cwtl
xor
cmp
push
sub
loope
fiaddl
cmp
iret
and
cli
add
adc
js
sub
fsub
stc
fwait
hlt
outsl
xchg
sbb
dec
fld
mov
push
lret
dec
pop
sub
mov
xlat
dec
shr
mov
or
and
nop
adc
or
push
stc
cmp
xor
sub
pop
into
jg
sti
dec
mov
imul
or
std
out
dec
out
out
cld
stc
pop
xchg
lods
cmc
push
adc
adcl
out
test
push
push
js
add
test
pop
pop
cltd
sub
out
push
aas
jp
stc
push
fs
inc
mov
mov
sbb
adc
mov
arpl
sbb
data16
add
cwtl
push
add
cs
cli
cmp
addr16
pop
xlat
insb
inc
sti
sbb
and
lds
push
mov
jbe
push
daa
sbb
fstpt
ret
or
adc
addr16
repz
stos
mov
pop
adc
ret
test
jle
cmp
mov
pop
dec
popa
or
lcall
aam
adc
fistpl
fs
dec
stos
sbb
pop
and
dec
jno
jge
add
movsl
shrl
stos
cmp
or
add
shll
sbb
aad
sub
jb
aas
out
push
outsl
xchg
xlat
stc
cltd
movsl
xchg
jmp
add
dec
sbb
aaa
fldenv
lret
xor
and
cmp
jl
popa
xor
int3
arpl
rcrl
dec
push
negb
fistl
rcl
mov
and
aam
lds
addr16
push
enter
push
sbb
js
or
movsl
lahf
leave
cmp
scas
and
xor
xlat
mov
mov
push
faddl
and
dec
xlat
jmp
sub
cmp
aaa
rclb
adc
lods
popf
inc
ja
pushf
sbb
xorl
mov
push
adc
movsl
loop
sbb
inc
fs
pop
xlat
jg
loop
lret
fucomi
arpl
aaa
adc
jae
xor
sbb
cmp
jmp
pushf
inc
sub
mov
icebp
sub
push
mov
fldenv
pop
lods
xor
mov
roll
jo
xorb
pop
iret
pop
arpl
out
sar
xor
mov
aaa
movsl
jno
scas
adc
sbb
adc
lea
stos
jl
adc
lret
inc
cmp
xor
in
bound
sub
xchg
fistl
imul
add
cmp
inc
testl
xor
and
cmc
lret
mov
test
test
dec
lds
sti
je
faddp
lret
push
mov
jge
xor
cmp
dec
sub
push
clc
es
dec
push
and
fwait
shrl
imul
iret
cmpsb
adc
jmp
or
xor
jge
or
adcb
jnp
imul
pop
mov
xchg
dec
call
movsb
fwait
and
inc
mov
and
flds
mov
sahf
mov
dec
cmp
aas
aam
out
xor
std
enter
clc
jp
insl
ficomps
test
test
outsb
clc
icebp
std
pop
sahf
sbb
pop
cmpsb
dec
dec
jne
pop
cmpsb
call
dec
and
xchg
fstl
add
xchg
jb
jl
sub
sbb
add
in
mov
test
push
or
ja
andl
jge
mov
jp
ret
cmc
sub
fistpl
and
pop
test
divl
flds
dec
xchg
lahf
lret
mov
fwait
jae
adc
adc
addb
loopne
push
dec
cmp
cmpsb
push
les
jno
movsl
and
shrl
fdivl
sbb
or
push
pop
loopne
into
and
hlt
jns
nop
jae
push
dec
loopne
mov
clc
cmp
outsl
mov
sub
xor
sahf
jmp
sub
testl
repz
ret
fisttpll
jne
ljmp
or
push
aas
xchg
addb
sub
movsl
cmp
dec
movsl
bound
mov
dec
in
sbb
and
sub
mov
mov
addr16
mov
sub
aad
hlt
add
lret
mov
repz
dec
lret
dec
cmpsl
jle
je
mov
push
push
xchg
cmp
mov
cs
lods
push
push
jle
dec
cmp
mov
subps
xchg
fbld
je
cmpsl
xchg
mov
jns
fnstcw
cmp
push
sbbl
xor
cmc
hlt
ljmp
sub
push
jns
push
out
mov
stc
sbb
cli
fxam
out
jb
mov
jmp
sbb
cmp
lahf
adc
mov
cmp
jns
fucomi
mov
sbb
leave
and
jno
cs
jge
repz
xchg
jge
je
jl
xor
ds
xchg
and
mov
jns
divl
ret
push
inc
push
stc
out
pop
xor
push
lods
jns
flds
dec
mov
js
mov
dec
je
sub
stc
ret
or
mov
push
into
or
divb
nop
cmpsb
sbb
cmp
imul
js
xlat
aam
lea
pop
jge
insb
rcrb
cmp
cmp
enter
adc
dec
iret
loop
insb
cmpsb
adc
and
hlt
or
push
xchg
sub
test
popa
leave
push
dec
jg
dec
push
and
cmp
jle
adc
dec
fistl
mov
lret
lods
cmp
dec
and
sbb
mov
xor
mov
pop
sub
imul
jbe
dec
stc
es
cmc
inc
jo
cmc
pushf
sub
andl
cwtl
es
or
inc
addr16
imul
cmp
std
xchg
mov
or
popf
xor
jle
les
pop
pusha
push
jmp
ljmp
das
jnp
aaa
mov
inc
mov
out
xchg
pop
inc
lret
outsb
dec
xor
xorb
jmp
pop
dec
sub
mov
xor
sub
lret
enter
xchg
fisttpl
xor
xor
push
mov
fnstcw
xorl
sub
stc
std
xchg
nop
and
adc
cli
adc
add
cmp
fcmovu
shl
xchg
xor
decb
inc
add
aam
fisubs
mov
jecxz
mov
idivb
hlt
cltd
push
and
pushf
movsl
xchg
jg
gs
xchg
pop
test
xchg
jns
jno
enter
lcall
jo
push
push
fadd
jecxz
jae
sbb
icebp
mulb
mov
xchg
test
push
gs
xor
mov
jp
in
or
nop
or
cwtl
push
dec
repz
mov
push
idivb
jns
lea
inc
push
ret
daa
cmp
pop
and
fimuls
or
dec
and
sbb
inc
call
stos
repz
pop
movsb
jae
bound
popa
and
hlt
ljmp
pop
mov
xor
mov
dec
sbb
imul
dec
dec
xor
cmp
in
dec
and
xor
jl
aaa
adc
adc
jnp
fldenv
inc
and
jle
les
scas
cmp
dec
stos
sbb
sub
or
cwtl
xorb
rcll
xchg
pop
cld
lods
sbbl
lret
mov
cli
fnstsw
fstps
sbb
jae
pop
and
andb
sub
push
mov
push
mov
imul
flds
mov
mov
fimuls
pop
sbb
xor
test
push
loop
xor
and
push
ss
xlat
rolb
popa
and
fwait
loope
jo
dec
pop
notl
jno
push
mov
jg
scas
mov
rorb
addr16
daa
fldt
jle
jg
fnstcw
dec
and
xor
inc
jg
clc
in
fwait
lahf
das
sbb
cltd
dec
dec
fistpl
mov
pop
pusha
mov
imul
fisubrs
mov
fimuls
add
pushf
dec
add
call
mul
xlat
jp
leave
xor
mov
push
ds
mov
test
cs
shll
loope
mov
mov
mov
pusha
cmp
pusha
inc
fnstenv
mov
orl
jae
bound
lret
push
in
imul
insl
inc
push
sbb
mov
out
xlat
lahf
dec
outsl
icebp
sarl
fisubrl
adc
fucomp
dec
sbb
stc
outsl
dec
adc
lcall
cmp
outsb
cmp
mov
aaa
mov
loope
add
xchg
mov
dec
sarl
pop
lods
vcvtpd2dq
ficoml
aam
pop
pop
sbb
dec
nop
stos
addl
pop
mov
fcmovne
lahf
mov
sbb
jbe
mov
add
cli
inc
sub
in
cmp
xlat
cmpsl
loope
inc
xlat
out
data16
test
xchg
into
repnz
out
int3
fisubrl
cmp
sbb
out
lcall
movsb
dec
gs
jp
adc
icebp
stc
push
pushf
out
outsl
jae
sub
sub
xchg
shll
pop
dec
fisttpll
pushf
pop
pop
pop
shll
push
fstpt
enter
cmp
add
xchg
dec
xchg
fidivrs
jno
and
mov
push
mov
cmp
xor
in
in
add
jp
mov
nop
mov
add
lods
mov
cmp
mov
add
outsl
repnz
pushf
test
pop
nop
shl
jne
inc
add
das
mov
add
xchg
xchg
or
xchg
shlb
pusha
je
push
daa
xor
push
xor
lret
adc
inc
iret
push
sbb
cmp
xchg
mov
add
cmp
imul
movsl
stc
fnstenv
mov
dec
push
es
xor
xchg
sbb
pop
sub
insb
fisttpl
cld
outsb
loope
lcall
dec
xlat
mov
test
adc
inc
int
xor
ds
ret
xor
cmp
jecxz
rclb
push
imul
push
xchg
fidivs
loop
add
cmp
fsts
push
push
adc
lods
jno
push
mov
iret
cmp
loopne
dec
movsl
popf
jecxz
cmp
rcll
push
fidivrl
out
push
pop
fsin
push
sahf
push
data16
pop
adc
xchg
dec
int
add
push
in
popf
bound
lcall
pop
push
xlat
pop
sbb
ror
add
in
aam
xchg
sbb
pop
sbb
or
arpl
repnz
sbb
inc
or
in
hlt
cli
xchg
mov
rorb
or
gs
xchg
testl
inc
nop
jbe
test
aaa
ret
push
cwtl
stos
test
adc
ficomps
pop
mov
xor
ucomiss
inc
addr16
popf
mov
sbb
jl
stos
loop
call
or
lods
in
fbstp
fnstsw
addr16
imul
adcl
bound
push
xor
pop
fcmovbe
mov
imull
dec
sub
mov
imul
or
inc
sti
mov
fmull
xlat
bound
arpl
sbb
mov
mov
ljmp
or
cwtl
xchg
out
cmp
jge
lds
dec
sub
xlat
sbb
aam
and
mov
xchg
int3
xchg
dec
flds
sarb
dec
and
jo
fadd
add
cwtl
fwait
inc
or
outsb
and
imul
adcl
sbb
pop
dec
fs
xlat
xchg
repnz
call
mov
cmpsl
jns
rolb
adc
xor
scas
clc
xchg
fsubrs
push
orb
xor
js
mov
stos
imul
pop
scas
inc
loop
subb
dec
loopne
mov
dec
test
fldt
pop
or
xor
mov
fidivl
leave
das
pop
push
xor
lods
cmp
cmp
cmpsb
mov
hlt
or
mov
imul
psllq
dec
mov
pop
mov
lcall
pop
xchg
push
jno
cs
shl
loope
cmp
mov
loop
adc
stos
je
jo
imul
push
inc
add
mov
xlat
nop
adc
js
push
dec
sti
shlb
dec
xor
jmp
ds
gs
in
xor
ja
xchg
jbe
lret
adc
xchg
sub
aam
jnp
xor
xor
jbe
mov
cmp
dec
dec
or
push
dec
sub
mov
cmpsl
add
adc
test
stos
and
js
sub
cmp
push
jp
push
adc
jle
in
orl
stos
test
roll
pop
std
cs
cmpsb
out
mov
out
adc
ljmp
cmp
inc
lahf
cwtl
pushf
fwait
shlb
stc
movsb
roll
adc
dec
lock
jne
sub
sbb
dec
adc
jns,pt
mov
jmp
out
xlat
jae
lea
repz
mov
sbbl
fistl
cmp
or
or
mov
add
test
jl
pop
pop
addr16
ficoms
sbb
push
jno
jne
pop
leave
xlat
sub
mov
mov
sbb
and
dec
out
popf
sbb
xor
and
mul
pop
sti
mov
inc
call
mov
ficomps
std
dec
fwait
cmp
jl
fs
cmp
stc
sbb
jp
pushf
jle
movb
enter
ds
lret
imul
mov
in
pop
scas
mov
int
xchg
dec
and
push
pushl
push
inc
jp
daa
js
scas
and
cmp
fcmovnu
sti
je
xlat
fnstcw
mov
shll
mov
xchg
pop
dec
pushf
pop
jmp
and
or
lock
fidivl
mov
addr16
test
lea
push
fsubrp
cmp
addb
in
push
pop
out
scas
subl
xor
dec
cmp
pushf
mov
push
nop
icebp
popa
aas
pushl
sbb
add
and
fisubrl
pop
sub
pusha
into
negl
lret
nop
jmp
dec
mov
mov
jnp
popf
xchg
test
loope
stos
std
loop
dec
jb
lods
nop
fcomps
je
adcl
cmp
rcll
push
in
and
inc
xchg
dec
xchg
push
testl
dec
jns
lahf
pusha
cmp
les
inc
filds
inc
imul
push
push
push
push
cmp
cmp
int
pop
js
ficoml
sbb
mov
fwait
pop
ss
out
inc
pop
xchg
xor
dec
subb
cmp
push
arpl
enter
xor
sbb
xor
mov
adc
lock
addr16
push
or
fcmovne
xchg
push
and
push
je
sti
jnp
fistpl
test
xchg
js
int3
loop
nop
out
ja
inc
out
stc
and
out
add
dec
push
and
aad
leave
ljmp
adc
mov
cmp
jno,pn
sub
jl
mov
lahf
jne
imull
cs
push
adc
jecxz
mov
loopne
cmp
fcmovnbe
xchg
es
adc
xor
sub
fs
pop
sti
dec
dec
push
mov
adc
in
xlat
sub
xchg
dec
je
fcmovnu
inc
or
dec
jne
insb
in
cmc
psrlq
add
push
inc
xor
push
sub
pop
lea
andb
ja
loop
ja
call
aas
cwtl
and
out
enter
stc
fldt
sub
or
inc
out
pusha
xchg
mov
add
repz
movsb
inc
lahf
mov
mov
dec
rcrl
dec
stos
test
jo
mov
push
addr16
mov
and
sub
int3
mov
std
insb
shlb
cmp
in
fstpt
xor
add
sub
dec
jno
dec
jae
sub
ret
nop
mov
or
sub
inc
mov
ffreep
mov
jp
cmc
add
and
xor
addr16
fildll
jnp
popf
adc
sbb
mov
scas
loope
mov
fisttpl
gs
cmpsb
ret
pop
mov
cmp
cmp
jp
cmp
add
aas
mov
cld
jae
mov
xchg
sbb
loop
call
out
cwtl
xor
xor
mov
daa
xchg
sub
push
and
fmulp
ja
data16
mov
in
or
sub
movsb
hlt
add
mov
test
outsl
xor
mov
fildl
es
xor
cmp
das
sbb
lahf
cli
dec
xor
data16
cld
inc
and
mov
jp
mov
clc
xchg
cld
xchg
mov
xor
aam
push
add
jb
add
jmp
and
int3
jg
push
cmp
adc
sub
push
fistl
jne
hlt
pop
in
in
mov
movsb
gs
and
push
lret
or
ss
pop
repnz
imul
mov
movsb
cld
ja
ds
jg
mov
dec
dec
rorb
cmpb
popa
and
pushf
std
pusha
dec
or
mov
jecxz
push
test
cld
dec
scas
std
test
ljmp
sbb
popa
jmp
inc
mov
and
pop
inc
xchg
sarl
sbb
sub
pop
loope
xorb
xorl
pusha
je
mov
dec
mov
divl
pop
fisubs
mov
mov
aam
add
sub
mov
std
cli
mov
movsb
aas
insb
jg
jne
popf
xlat
fbld
push
xor
inc
mov
repnz
inc
test
int
mov
fcomp
mov
stos
jp
jmp
pop
dec
lahf
out
imul
cli
shrl
fs
test
icebp
xor
data16
stos
or
pop
call
repnz
je
and
jge
or
arpl
into
jmp
idivl
adc
stos
mov
in
xchg
mov
xlat
inc
lods
sub
xchg
push
test
xorb
mov
mov
cmc
push
adc
cmc
pop
xlat
inc
mov
xor
pusha
lahf
popa
fldl
rcr
jae
xchg
xchg
sub
in
jae
mov
sub
pop
pop
enter
inc
mov
shll
inc
sub
out
cmp
imul
cmp
xchg
popf
out
jbe
and
mov
out
pushf
and
addb
arpl
cmp
push
xor
nop
inc
fs
das
or
test
xor
sbb
jl
mov
testl
sbb
jecxz
shl
mov
push
xchg
mov
pusha
es
outsl
jmp
or
mov
pop
ret
mov
jae
mov
mov
test
lea
xlat
push
pop
sbb
insb
arpl
mov
push
das
aam
cld
jl
fisttpl
movsb
lret
dec
insl
fxch
jns
mov
push
sub
mov
ja
js
pop
xchg
cltd
add
xchg
inc
in
cmpsl
xor
sbb
xor
idivl
xor
imulb
cmp
xchg
mov
cli
xor
cmc
jae
fcmovbe
pop
xchg
mov
pop
movsl
iret
push
mov
sbb
pop
dec
fstps
cmp
lods
jl
repnz
popf
ret
call
cmp
insb
lahf
push
lret
push
mov
push
xlat
mov
mov
jecxz
stos
mov
jns
cmp
js
fcmovnbe
and
stc
jns
rcrl
mov
lret
flds
and
push
cmpsl
jecxz
push
fwait
clc
mov
sub
mov
out
sub
mov
in
cld
mov
and
xor
outsb
adc
iret
lcall
mov
lcall
repz
inc
repz
fsts
loope
stos
push
fsubrs
test
and
jmp
sub
and
dec
xlat
out
and
pop
xchg
dec
mov
int
cltd
mov
dec
in
int
clc
mov
sub
or
mov
mov
mov
push
fldenv
fs
stos
sarb
xchg
push
dec
fisttpl
sub
lea
or
mov
pop
popa
addr16
add
sbb
and
fldt
sbb
es
inc
divl
cltd
pop
xchg
fsubrl
roll
xchg
or
sub
es
or
push
jns
aas
xlat
mov
das
jb
and
les
inc
movsl
ret
jbe
loop
rcl
or
mov
lock
cld
fcoms
jecxz
sbb
sub
jg
jo
enter
sbb
lcall
add
gs
ja
sti
call
hlt
stos
jns
push
or
fildl
xor
pop
jae
pop
mov
cld
rolb
pop
adc
xor
jp
inc
fldpi
sub
ret
and
movsb
imul
fwait
mov
adc
xlat
daa
cli
xorb
sbb
dec
jae
addr16
and
mov
add
and
sbb
js
int3
pop
xchg
jle
lods
dec
fnsetpm(287
je
dec
test
aas
xlat
fiaddl
imull
push
int3
push
jns
fmull
fabs
std
pop
out
mov
adc
pop
mov
in
xchg
jecxz
loop
in
dec
or
jo
lret
loope
sbb
xor
icebp
or
pop
cmp
adc
pop
ja
push
pop
movsl
mov
outsl
sbb
enter
packuswb
push
dec
stos
cmp
add
xor
mov
dec
sub
jg
push
lock
or
push
mov
ficomps
stc
ja
push
mov
ja
xchg
sbb
jl
mov
stc
movsb
xchg
addr16
xchg
movsb
mov
pop
mov
xor
addr16
cli
and
stc
or
xlat
mov
lret
lret
inc
push
xchg
jne
pop
add
ror
mov
pop
cmp
jno
imul
xchg
test
push
and
mov
xor
das
push
dec
hlt
outsw
mov
add
dec
into
add
cmp
sub
fiaddl
nop
sarl
xor
mov
test
pop
dec
daa
push
pop
popfw
fcmovnbe
cmp
fnstenv
sti
fisubrl
adc
jbe
enter
pop
jno
xor
push
push
and
sbb
insl
or
inc
addb
mov
int3
imul
out
test
mov
rolb
sbb
push
mov
and
clc
testl
out
ret
gs
xor
shll
js
and
or
cmp
xlat
mov
xchg
or
negb
inc
jle
fdivl
aad
mov
test
repnz
test
arpl
and
jmp
into
mov
mov
add
pop
fisttpl
testb
xchg
push
loopne
data16
shl
int
mov
call
pushl
pop
and
mov
imulb
or
mov
lcall
cmp
jmp
cmp
dec
daa
out
jecxz
es
adc
sub
mov
mov
mov
leave
or
out
test
dec
or
cmp
out
cmpb
xor
adc
imul
or
jns
add
jmp
cmp
jp
lahf
out
fsincos
xlat
sbb
xchg
dec
mov
jle
inc
cmp
mov
jecxz
dec
mov
icebp
jecxz
add
stos
cmp
inc
filds
jae
jmp
out
rorl
icebp
movsb
push
std
mov
mov
inc
imul
xchg
xor
push
dec
mov
mov
dec
fistpl
mov
jle
mov
and
sbb
aad
dec
jno
inc
mov
inc
sub
xor
lret
ja
inc
cmpsb
sbb
or
into
aam
jbe
dec
sub
sarl
cld
cmp
mov
dec
xchg
divb
test
mov
adc
push
ret
add
out
push
mov
neg
repnz
addr16
push
lret
jg
dec
mov
sub
daa
or
mov
adc
outsl
dec
push
rorl
jp
xor
aas
pop
xor
cmpsl
adcb
lock
dec
movsb
jns
add
stos
sbb
xor
insb
js
cmp
lods
or
addr16
lret
arpl
pushf
idivb
jae
repnz
fcomp
fldt
xor
mov
xchg
sub
pop
icebp
pop
mov
cmp
sbb
stos
xchg
bound
je
imul
inc
iret
aaa
jp
mov
xchg
out
std
iret
push
cmp
and
push
dec
xorl
add
call
sbb
jns
test
int3
or
into
jns
mov
out
inc
cld
and
jae
not
fucomi
andl
lret
xchg
mov
jae
push
daa
ds
out
jmp
pop
jp
mov
push
jecxz,pt
scas
mov
push
jno
mov
jecxz
pop
adc
jg
cmp
int
in
add
jecxz
xor
out
dec
pushf
cmp
pop
xchg
jl
cmp
fcmovne
bound
inc
mov
adc
inc
add
push
pop
stos
rcl
sbb
mov
ja
add
fcom
out
and
jae
imul
scas
xor
stc
and
adc
xlat
sub
rcr
xchg
or
mov
jmp
jno
pop
enter
sahf
imul
in
pop
cs
addr16
stc
test
and
ja
adc
call
xlat
rol
loope
leave
test
xchg
push
inc
mov
cmp
jae
icebp
into
pop
jno
rcrb
subb
repnz
fiaddl
cs
xchg
mov
shl
rclb
ds
and
lret
mov
cmpsl
mov
inc
xlat
mov
xor
loope
inc
sub
mov
pop
outsb
inc
test
adc
xlat
xor
xor
mov
push
mov
xlat
cld
rcll
push
movsl
inc
jl
adc
out
shlb
sarl
and
push
loope
adc
rorl
fidivrs
leave
push
lcall
out
jmp
or
out
cmp
push
shrb
ret
inc
jecxz
cmp
xor
test
xchg
out
dec
adc
and
xorl
popf
mov
dec
sbb
and
inc
nop
sbb
fwait
ds
xor
arpl
lahf
jae
jg
pop
dec
add
dec
sar
dec
loope
xor
jle
adcb
push
pop
add
test
imul
or
mov
pop
ret
rcrl
mov
ss
clc
bound
int3
addr16
push
sbb
mov
popf
cld
push
sub
mov
mov
orl
cmp
mov
cs
xchg
call
add
das
mov
aas
popa
andb
push
std
stc
xchg
push
cli
sbb
bound
or
ljmp
repz
inc
enter
and
cmp
int
mov
push
jb
daa
clts
ljmp
aaa
push
ljmp
cmpsb
cmp
dec
sti
push
jbe
mov
push
and
cwtl
daa
sti
ret
sarb
es
push
xchg
lcall
push
sub
jmp
push
bound
adc
test
jno
loop
push
fwait
dec
lcall
xchg
push
stc
movsb
lock
insb
sbb
repz
mov
scas
in
pop
cmc
lods
mov
adc
jae
cwtl
add
xchg
pop
mov
push
hlt
jmp
js
mov
lcall
out
enter
xor
push
mov
and
mov
mov
popa
jmp
push
pop
sub
xchg
adc
rol
xchg
insl
or
lock
lret
xchg
lret
fadd
cmp
add
andb
pop
cld
ljmp
push
sbb
jle
lea
nop
mov
je
sahf
repnz
fbld
push
enter
fwait
iret
push
xlat
cli
fwait
mov
lock
cmp
dec
and
jno
xor
cmp
gs
add
adcb
arpl
push
add
adc
mov
mov
jp
cmovp
int3
frstor
fninit
shrl
add
bnd
jbe
push
fs
pushl
or
xor
mov
xlat
hlt
mov
xchg
mov
js
ja
xlat
sub
fwait
push
xor
sub
ja
outsl
xchg
rcr
and
pop
ja
adc
or
cwtl
xchg
dec
stc
cmp
or
lret
sub
adc
lahf
mov
imul
aam
movsl
add
adc
sub
mov
nop
add
jl
shrl
or
daa
insb
or
sub
in
and
and
outsb
inc
hlt
jns
insl
fwait
adc
mov
mov
sbb
pushf
stc
dec
loop
or
xor
mov
pop
test
stos
pop
add
enter
mov
cmp
jmp
subb
in
push
outsl
stos
loope
cmp
xorl
sti
andl
movsl
adc
mov
repz
in
aad
xor
mov
imul
int3
sub
push
jecxz
je
or
xchg
and
out
adc
adc
divl
push
mov
adc
jecxz
mov
pop
inc
mov
enter
push
ficomps
jmp
mov
jl
xor
ret
dec
or
mov
movsb
fdivrs
addr16
mov
and
int
dec
and
pop
xchg
sub
xchg
sub
test
shr
in
imul
cmp
push
xchg
ds
scas
cmpsb
roll
pop
popf
push
test
loop
jl
xchg
fstl
xor
xor
loop
ds
cmp
iret
lret
popa
add
ret
jne
inc
ret
das
imul
jmp
sbb
dec
sbb
das
f2xm1
push
test
lret
fs
out
mov
aaa
pop
push
subb
fisttpl
or
mov
mov
push
mov
push
push
and
and
sub
mov
jmp
loop
adc
cs
jns
xor
xchg
jb
push
cltd
arpl
and
cmp
jl
popf
push
pushf
inc
adc
xchg
cmc
arpl
mov
stos
cld
adc
adc
fidivs
push
fwait
imul
stc
push
xlat
add
cld
mov
inc
arpl
lret
and
or
in
sbb
add
fsts
loopne,pt
jnp
sbb
xlat
sahf
ret
add
jae
jle
outsl
mov
ds
lahf
cmp
rcr
and
dec
cmpsl
sub
push
imul
out
adc
les
lcall
pop
test
ljmp
xor
or
sbb
or
xor
xchg
mov
stos
fmuls
jmp
xlat
fisubs
mov
cwtl
inc
sbb
in
jle
in
fadd
aam
aaa
shlb
xchg
mov
adc
shr
push
jmp
movsl
xchg
inc
xor
mov
pop
popa
mov
pop
pop
mov
movzbl
cmc
mov
ljmp
icebp
out
imul
into
jge
imul
aas
push
xlat
std
ret
aaa
leave
push
xchg
out
fistpl
mov
popa
cli
fidivl
cmp
lret
arpl
sbb
push
push
xlat
cmp
faddp
adc
lock
ljmp
in
shl
inc
dec
add
ret
outsl
dec
mov
xor
mov
push
pop
dec
xchg
in
int3
in
pop
push
testl
and
fidivrl
inc
out
add
pop
and
outsl
cmp
ficoms
jb
fistpl
movsb
push
cmp
test
ja
xlat
jecxz
into
pop
lods
bound
dec
push
pop
jge
push
add
insb
pop
stc
incl
pusha
mov
in
mov
push
xlat
xor
mov
push
mov
lock
push
xchg
lret
pop
insl
fildl
pop
pop
imul
or
loope
mov
std
test
arpl
scas
sbb
subb
out
cmp
sub
jne
outsb
jecxz
stc
mov
and
stc
inc
int3
xor
sub
sub
movsl
dec
jbe
or
cmc
insb
int
sti
imul
sbb
inc
fnstsw
mov
and
fcoms
jp
xor
js
lret
mov
insb
int3
dec
cmp
inc
sub
cld
push
sarl
mov
pop
jp
nop
test
or
mov
xor
dec
stos
and
cmp
xor
xor
adc
cltd
stos
dec
mov
aam
test
pop
fstl
push
cmp
imul
jo
cs
push
sub
insl
push
sub
dec
in
mov
jae
out
imull
cmp
pop
push
add
cmc
sub
pop
adc
loopne
mov
pushf
pop
jl
push
xchg
cmpl
imulb
lds
inc
add
xor
lock
push
clc
cmpl
pusha
cmp
push
ja
jmp
fadds
jno
push
iret
cmc
inc
mov
inc
mov
or
jg
lods
adc
cld
fldl
mov
dec
jge
stos
outsl
add
inc
mov
movsb
or
xor
push
inc
sbbb
pop
jbe
pushw
pop
xchg
mov
cmp
and
arpl
push
insl
rorl
ja
xor
inc
sbb
insl
pop
mov
pop
jb
sub
add
jb
cmp
add
cmpb
pop
shr
dec
shrl
sbb
dec
mov
cld
cli
roll
xchg
xor
xchg
sbb
pop
add
sbb
xor
shl
sub
and
sbb
ljmp
sarb
jg
mov
cmp
fcmove
es
rol
sbb
lcall
out
popf
icebp
or
shlb
add
mov
sbb
cmp
push
invd
mov
adc
sbb
xchg
or
icebp
mov
fwait
das
fwait
test
sbbl
inc
xchg
call
ljmp
jnp
lahf
and
js
test
sub
into
enter
adc
inc
imul
sahf
idivl
and
dec
fcoms
mov
out
and
imul
daa
js
sbb
xor
cs
jmp
and
push
xlat
popf
aam
or
or
pop
fcomip
dec
test
push
dec
pop
push
lret
dec
sub
test
sub
jle
adc
and
sbb
and
dec
sbb
call
mov
iret
rcl
outsl
push
cwtl
gs
inc
cs
fdivs
pop
test
push
dec
adc
cmp
or
shl
inc
xchg
test
cmp
test
orl
sbb
add
int3
movsb
ret
xchg
jnp
xor
push
jne
mov
adc
dec
addr16
dec
pop
mov
out
imul
cs
lret
add
pop
and
jge
xlat
out
enter
xchg
cld
ret
nop
addr16
mov
data16
jg
enter
jnp
dec
sub
mov
mov
cmp
ds
cwtl
sbb
mov
stc
add
mov
or
push
jg
cltd
stc
pop
cmp
ss
fstps
int3
inc
hlt
and
andb
cli
jnp
or
add
outsb
mov
pop
dec
dec
xchg
push
pop
push
jge
clc
mov
and
stos
fcoml
inc
ror
repnz
push
arpl
mov
loop
stc
jno
add
icebp
mov
stos
idivb
lds
shlb
dec
push
pop
pop
push
dec
mov
fidivrs
mov
mov
shlb
mov
aad
loope
sub
shl
pushf
sub
lcall
push
cmp
mov
pop
sbb
pop
jl
addr16
mov
fwait
nop
enter
dec
in
sbb
xlat
pop
pushf
pushf
insb
test
imul
cs
jns
mov
gs
push
icebp
and
arpl
imul
xchg
aam
adcl
jae
mov
jb
mov
sbb
adc
loopne
xorb
enter
mov
mov
push
xor
das
adc
aas
inc
sbb
xlat
jle
jmp
sbb
fwait
stos
insb
out
pop
mov
xchg
outsl
pop
insb
mov
mov
mov
into
movsl
hlt
mov
repz
mov
or
jb
xchg
mov
xor
adc
jge
jl
out
outsl
js
enter
popa
pop
out
fbld
mov
or
or
pop
notb
jbe
rcll
or
cmp
fsts
mov
movsb
dec
cmpb
cmpsb
rorl
add
js
mov
xchg
lcall
pop
cltd
enter
mov
movsb
scas
jae
xor
stos
sbb
pushf
bound
repz
int
aad
dec
popa
dec
push
and
addr16
std
inc
je
movsl
mov
int3
lret
mov
and
xchg
lods
sbb
fistpl
mov
sub
adc
into
add
mov
or
inc
or
xchg
jb
outsb
cld
adcb
in
scas
jae
or
hlt
pushf
cld
xchg
push
and
loope
and
in
or
sbb
push
pop
xlat
les
fnstsw
fisubrs
sarl
or
int
scas
mov
imul
sub
shrb
xorb
and
jp
fcomi
push
push
and
and
and
sbb
pop
jo
out
mov
xchg
pop
les
aaa
or
aad
sbb
in
mov
mov
xor
out
mov
mov
dec
sub
cmpb
xor
jbe
mov
outsb
adc
imul
dec
cmp
cmp
xlat
push
push
cmpsb
test
xchg
dec
cmp
mov
mov
adc
mov
mov
cmovb
mov
std
adc
adc
adc
insl
push
std
xchg
xchg
xor
shlb
cmp
test
fisttpl
daa
dec
fdivl
arpl
mov
out
hlt
xchg
pop
pop
pop
popa
cmovp
sbb
fldenv
lret
dec
xor
push
negb
mov
dec
sub
mov
nop
fsubrl
addr16
rcrb
push
pop
fsts
xor
xchg
cli
lcall
scas
mov
add
fisttpl
dec
push
and
enter
lret
xor
mov
pop
dec
mov
inc
xlat
fisubrs
pushl
sub
out
fstps
aam
aam
inc
or
inc
fwait
or
in
shlb
jecxz
xchg
jg
addr16
push
mov
pop
push
ja
in
popl
aaa
sbb
int3
pusha
dec
push
sub
or
push
fmulp
mov
add
adc
mov
pop
cmp
push
inc
out
sbb
push
repz
rcrb
call
sub
inc
pop
cmp
stc
add
adc
inc
rorb
loopne
imull
sbbl
cltd
add
mov
adc
mov
mov
adc
std
lahf
dec
mov
ljmp
xchg
jns
les
jge
aad
add
jecxz
mov
rolb
addr16
jb
das
add
cli
xor
fadd
inc
cs
mov
add
xor
ljmp
fsubrs
or
jae
nop
sbbb
js
shrb
in
stc
mov
inc
fisubs
lea
cmp
aas
xlat
push
outsb
sbb
sbb
fidivs
addb
int3
jne
pop
out
cmp
add
aas
insl
sbb
inc
test
cltd
mov
mov
iret
repz
inc
bnd
mov
ja
cmp
and
data16
mov
lods
cmc
dec
jnp
aad
shll
arpl
cmp
stos
or
les
xchg
repz
mov
imul
out
adc
adc
repnz
stos
cmp
andl
sarl
enter
out
jb
pop
cs
outsb
in
sbbb
sub
fsubr
xor
dec
xor
pop
cld
xchg
and
cmp
xlat
mov
clc
or
lahf
daa
xchg
ss
in
xor
ljmp
iret
xchg
or
stos
sti
and
lahf
stc
mov
sarl
mov
das
mov
dec
jae
and
outsl
fsincos
mov
xchg
aaa
test
jo
mov
rcl
and
flds
xchg
add
xor
pop
xlat
pop
pop
sub
push
push
sbb
pusha
jnp
or
daa
mov
lret
lret
fdivrl
sub
xchg
lea
fldcw
imul
movsl
fcoml
sub
adc
xor
jg
mov
dec
stos
lea
outsl
js
jne
jge
fimull
inc
mov
lods
out
mov
pop
push
xchg
insb
jmp
shl
mov
pop
or
or
fwait
dec
stos
js
gs
cmc
fldcw
sbb
mov
pop
and
sbb
repz
call
xchg
mov
out
scas
push
inc
test
fstpt
orl
iret
xlat
loopne
inc
add
push
rcrb
aas
adc
sub
int
loope
fld1
add
inc
jno
sbb
push
jae
mov
add
and
int
js
dec
stos
push
mov
jl
nop
decl
fcoms
xchg
lods
cmp
mov
fstpt
xchg
daa
mov
call
dec
sbb
jb
jnp
and
cmp
andl
fstps
cwtl
mov
cmp
insb
lahf
dec
test
or
xchg
ficoms
pop
or
xlat
pop
pop
xor
fdivrp
shll
ficomps
jno
push
mov
movsl
jns
mov
lcall
jno
add
xchg
sub
fwait
test
jecxz
dec
imul
pop
out
sbb
imul
adc
add
xor
jg
mov
dec
mov
pop
cmp
lods
dec
addr16
int3
imul
fldt
xor
jae
cmp
fwait
sti
mov
cmpl
rep
fmull
mov
iret
jnp
pop
mov
inc
jmp
and
sub
pop
insb
call
ljmp
xlat
std
adc
or
daa
imul
test
mov
xchg
mov
jnp
or
lss
adc
repz
gs
stos
dec
clc
inc
out
ja
sub
add
cwtl
adc
stc
push
cmp
es
shll
mov
aad
and
test
cli
and
mov
mov
mov
sbb
pop
mov
xchg
insl
mov
mov
fnstenv
rolb
int3
mov
lea
jns
mov
xchg
mov
fnstsw
test
or
imul
inc
and
jno
fcompl
hlt
arpl
shlb
and
js
add
sub
rcrb
loopne
sub
sahf
dec
mov
xor
xchg
mov
sbb
mov
mov
sub
sbb
pushf
fsubs
mov
hlt
addb
adc
dec
fimull
add
push
fadds
push
xchg
cmp
ja
das
and
inc
dec
jae
pop
loop
ja
inc
fwait
xchg
mov
test
cmp
pop
sbb
fnstenv
sbb
mov
addr16
addr16
outsl
sub
rolb
test
sbb
add
lahf
jbe
loop
je
and
and
xor
jae
push
pusha
mov
adc
jb
adc
cmp
xchg
lret
outsl
in
mov
adc
add
addr16
bound
cs
shll
cmp
xor
rorl
sbb
subb
and
pop
push
or
outsl
xor
and
pop
fistl
test
ja
and
push
pop
pop
je
push
cwtl
out
test
lds
add
cmpsl
imul
lods
scas
sub
daa
sub
xlat
lret
mov
ficompl
sub
xor
addr16
xlat
mov
xor
push
fisttpl
cs
iret
adc
push
ja
mov
outsl
je
xor
sbb
stc
jb
loop
or
and
push
imul
jge
outsb
jl
nop
int
mov
cmp
xlat
lods
jbe
pop
pop
inc
and
cmpsl
jnp
fnstenv
mov
jl
push
or
mov
movsb
push
dec
jno
fcmovnbe
lods
std
ja
ljmp
sub
inc
out
jl
dec
cmp
push
add
mov
add
cmpsl
mov
lea
scas
and
insl
aaa
sub
leave
fcomps
add
inc
stos
nop
out
sub
or
cli
lods
mov
frstor
add
sbb
cli
mov
mov
mov
lea
inc
xor
repnz
les
cmc
pop
mov
andl
xor
and
in
fidivrl
pop
rclb
nop
jbe
xlat
ret
fucomip
push
loop
lahf
and
xchg
lea
jmp
lcall
mov
push
mov
dec
insb
jge
mov
pop
mov
cli
mov
jp
stc
sub
xor
jp
leave
fsubr
pop
pushf
std
jae
push
lcall
xchg
fmull
add
sub
fwait
je
jmp
mov
lods
gs
xor
shl
or
cmp
pop
jl
or
sub
push
xor
push
ror
xor
outsl
push
xor
dec
jae
les
xlat
shlb
adcb
stc
addr16
sahf
ja
add
rcrl
dec
inc
sahf
std
xchg
cs
test
leave
inc
cwtl
daa
mov
or
or
loope
outsb
std
add
arpl
mov
push
imul
cmpsl
fadd
mov
lods
xchg
inc
add
fcomps
cmp
lods
xchg
stos
imul
popa
sub
test
jg
iret
xchg
mov
faddl
xor
inc
jnp
mov
pop
daa
add
mov
fnstenv
into
aam
jle
sbb
xlat
out
or
rolb
xor
and
pusha
nop
movb
cs
sbb
push
and
add
adc
jns
fwait
js
out
jle
cmp
cmpsl
pop
or
sbb
mov
ljmp
mov
sbb
jge
inc
pop
enter
cltd
notl
movsb
add
mov
je
test
daa
cmp
and
cmpsb
jne
cmp
mov
inc
xchg
jl
xlat
pushf
mov
into
repnz
scas
leave
in
sbb
mov
add
sti
fs
comiss
pop
dec
orl
ja
testb
mov
mov
iret
xlat
dec
xor
aaa
sbb
xlat
mov
cs
das
daa
xchg
das
sub
cmp
adc
cld
mov
cmp
push
mov
pop
adc
call
push
pop
cmpsl
sub
cmpsl
cmp
fprem
push
ret
out
xor
pusha
sbb
add
insl
mov
lret
xchg
pushf
bound
lods
cmp
and
pop
dec
mov
mov
jl
mov
sahf
ficomps
nop
js
aam
mov
xchg
push
jbe
stos
and
xor
push
sbb
dec
out
outsb
jl
and
insl
test
or
and
pop
dec
lea
std
and
sub
mov
repnz
in
lods
sub
and
and
scas
mov
dec
stos
out
pop
mov
sbb
imul
sbb
hlt
dec
xor
sarb
loopne
and
fwait
xlat
scas
cmp
and
pop
add
dec
mov
arpl
sahf
imul
flds
sahf
xor
push
cmpsb
and
add
cmp
shll
mov
sbb
loop
rclb
mov
stos
jae
push
int3
dec
cld
fldcw
ljmp
leave
mov
lret
xchg
push
inc
iret
xchg
ja
jbe
xchg
mov
subb
adc
insb
enter
icebp
dec
sub
adc
sbb
mov
dec
lahf
enter
xchg
outsb
push
movsl
int
jge
sub
and
iret
xchg
jae
cwtl
sbb
or
mull
dec
nop
test
xchg
imulb
cmp
in
fsubr
scas
stos
push
cli
pop
std
jnp
cmp
and
out
fistl
fcomps
into
push
popa
and
test
scas
cmpsl
cmp
int
jns
cld
ljmp
fs
out
inc
sub
addr16
leave
lods
mov
imul
dec
xchg
jb
xorl
repz
inc
jno
push
into
shlb
mov
hlt
je
imul
xchg
pusha
and
nop
gs
jbe
push
dec
fwait
inc
imul
dec
jp
jl
movsl
mov
stos
and
add
adc
js
or
push
push
or
pusha
pop
dec
and
sbb
popa
push
xchg
mov
add
insb
inc
jl
fsts
sbb
xor
sti
out
mov
dec
ljmp
andl
xor
pop
lret
adc
nop
push
pop
cmp
imul
imul
add
mov
test
xor
cltd
enter
cmc
or
in
jae
mov
stc
mov
es
xor
fisttpll
lods
push
lods
xchg
xor
jmp
flds
int3
xlat
in
ja
mov
push
mov
rorb
jge
jae
or
std
aaa
outsb
lret
xor
and
inc
test
inc
inc
cltd
lea
push
cmp
cmp
dec
mov
pop
pop
xlat
mov
inc
xor
fistpll
lea
testb
cli
inc
mov
pushf
mov
inc
jns
rcrb
sbb
cmp
cmp
cld
andb
fadds
adc
pop
cmp
mov
les
ret
jg
int
xlat
or
iret
or
fcmovnbe
jbe
fmul
scas
cmp
ficoml
cmpb
and
sub
or
testb
fwait
leave
cwtl
mov
mov
mov
fdivrs
mov
lea
xchg
not
js
test
push
rcrl
dec
int
lret
pop
loopne
dec
mov
mov
dec
dec
daa
popa
std
lret
and
movsl
pop
pop
or
out
xchg
dec
pop
test
pop
push
sarb
jno
jge
repz
pop
cmpsl
mov
mov
das
cmp
xor
mov
fimuls
lock
jp
enter
jns
lahf
push
nop
pop
xchg
jg
test
dec
push
and
ja
aaa
fldt
gs
jg
in
mov
add
aam
push
mov
in
sub
jbe
test
jbe
andl
sti
xchg
fstpl
cmp
mov
mov
int
cmp
in
ficomps
lods
jmp
jg
sti
gs
cld
addr16
mov
das
mov
pop
loop
fcompl
pop
movsb
in
ss
adc
xor
ss
inc
mov
pop
push
fists
fwait
cmp
mov
mov
jns
gs
mov
inc
sub
out
mov
adc
sub
or
cmp
pop
sub
and
ret
and
fwait
mov
add
les
lods
cmpsb
jecxz
std
cli
mov
iret
fmulp
mov
xor
iret
dec
adc
push
push
xchg
orb
mov
jb
insb
addr16
mov
fsts
lret
arpl
ror
sub
icebp
dec
ss
cmpsl
adc
xchg
dec
push
test
lahf
add
mov
and
dec
or
outsb
jge
repz
or
gs
cmp
inc
scas
push
aam
sub
push
push
mov
aaa
test
dec
jmp
mov
fcomi
mov
lcall
ss
stc
fcmovu
scas
adc
cli
cli
dec
add
sub
movsb
test
enter
cmpsl
mov
nop
test
jecxz
dec
xlat
inc
push
hlt
test
outsl
in
push
adc
iret
sub
cli
stos
jns
and
sub
jnp
mov
mov
and
sub
jnp
sub
outsb
xchg
sti
cmp
and
ret
mov
jp
mov
xlat
repnz
and
xchg
cs
pusha
mov
std
sbb
movsb
jle
stc
fldt
bound
add
cmp
mov
dec
push
fwait
les
mov
fwait
roll
pop
test
sbb
xor
jl
cmp
mov
rorl
mov
stc
pop
movsl
push
cld
into
nop
sbb
imul
xlat
inc
fimull
daa
add
test
repnz
incl
jns
push
outsb
je
mov
movsl
cli
std
pop
mov
mov
jno
cmp
scas
int3
jno
mov
insl
fidivs
push
xlat
jp
xchg
stc
into
fstpt
imul
or
call
xor
sub
aad
sub
or
mov
lret
jnp,pn
sbb
cs
xchg
push
and
dec
jnp
mov
adc
fcmovnb
adc
fdivs
mov
mov
popa
sbb
sbb
loope
xchg
in
push
cmovns
fst
test
jno
shl
lea
in
movsb
insl
cmp
dec
dec
call
icebp
aam
mov
test
or
stc
call
xlat
mov
add
pop
mov
ljmp
dec
repnz
pop
pushf
dec
popf
push
pusha
imul
cmp
adcb
pop
cmp
jge
mov
rorb
cld
jbe
ja
pushf
mov
lretw
loop
repz
lods
mov
addl
fwait
inc
imul
jno
lret
cmp
and
pop
icebp
cmpsl
add
push
sbb
out
popf
xor
ficoms
outsl
aam
out
jae
sub
pop
xor
xor
mov
jge
cwtl
push
insb
cmc
jbe
pop
xchg
out
lcall
pop
mov
adc
cmpb
mov
adc
sub
lock
cmp
and
adc
mov
repnz
in
icebp
push
dec
lret
and
cmp
dec
lds
mov
jl
addb
push
pop
mov
cmp
out
push
cli
pop
pop
icebp
mov
addr16
rcll
pop
addr16
aaa
pop
cmp
push
xlat
scas
inc
aas
pop
loopne
hlt
cmp
out
lods
sbb
dec
sbb
adc
sub
in
xor
push
or
stos
std
mov
ss
sahf
or
ss
push
or
xchg
pop
in
xchg
out
dec
mov
in
xlat
mov
rcrl
fstpt
fdivl
arpl
sub
cli
addb
ror
adc
push
cmp
outsl
icebp
cltd
fistl
jae
pop
shlb
mov
push
cld
cli
add
dec
pop
in
test
push
cmc
adc
jne
pop
subl
pop
mov
pop
push
xor
outsl
pusha
sahf
mov
icebp
add
rep
ja
fstl
lods
xorb
pop
ret
jg
push
stc
dec
xchg
dec
stos
xor
sbb
mov
adc
xor
lcall
lahf
and
xor
or
and
or
movsb
sbb
dec
push
imul
lods
mov
out
sub
imul
data16
xchg
jae
scas
aas
jg
in
imul
mov
push
aas
or
pop
pop
jno
adc
addr16
mov
push
pop
and
mov
push
aaa
dec
gs
xchg
add
push
xorl
push
shlb
sub
jl
ret
mov
mov
sub
cmp
add
mov
clc
cmp
cmp
sti
or
sbb
lods
into
sub
jnp
jae
sub
xor
sub
ss
sbb
add
dec
add
xor
cli
fmull
mov
cli
or
test
xchg
add
pusha
lcall
icebp
inc
imull
fidivl
jp
ja
outsl
cs
dec
pop
pop
jns
pop
jno,pt
andl
into
call
push
bound
xchg
orl
mov
push
jns
pop
lahf
loop
jae
jb
push
popf
xchg
mov
xchg
pop
mov
sub
rcrb
aaa
jbe
cmpsl
into
pop
and
icebp
or
jp
sbbl
repnz
sub
push
popf
in
dec
sahf
in
rclb
rcrl
and
push
xlat
leave
jg
movsb
jbe
mov
add
cld
and
loope
push
cmp
rcrl
dec
fwait
dec
sbb
pop
jg
bsr
or
add
lcall
test
cs
div
orb
jne
add
in
out
sub
pop
push
hlt
add
jmp
dec
fisubrs
dec
sbb
call
cmp
xchg
xchg
mov
insl
pop
lcall
xchg
enter
adc
jp
sbb
or
into
scas
test
dec
iret
imul
pop
jne
xchg
dec
and
pop
jg
into
add
dec
sbb
sbb
out
lods
jp
pop
jecxz
xor
lahf
mov
pop
inc
jae
adc
mov
nop
fmull
jmp
or
ds
insb
and
fidivs
test
in
ja
lahf
mov
lret
data16
js
test
or
push
push
fistl
mov
dec
jp
dec
div
ljmp
jecxz
adc
out
aaa
cmp
jge
lods
out
icebp
cmp
adc
jno
mov
incl
gs
sbb
cmpsb
dec
xor
ret
fadds
adc
pop
iret
pop
sub
or
jle
xlat
icebp
nop
int
or
cmp
in
stos
jb
jecxz
testb
xlat
into
popa
cmp
mov
lds
fldcw
sub
or
mov
mov
mov
test
lret
lds
jg
in
sub
add
sbb
sbb
push
xchg
pop
jg
push
push
negb
dec
xchg
pop
push
pop
outsl
jb
enter
stc
sbb
xchg
in
push
sbbb
andb
xor
dec
jnp
das
sub
cmpsl
xchg
mov
mov
jg
xor
and
xchg
insb
push
fsub
xchg
push
movsb
pop
fdivl
jae
pop
push
lcall
sbb
xchg
mov
data16
xor
lds
and
push
mov
mov
movsb
nop
repnz
stos
or
rol
dec
ds
jns
iret
sub
scas
lret
add
ja
clc
lret
push
outsl
add
push
ret
ja
pop
fwait
or
test
xchg
add
dec
fstl
into
test
jnp
imul
mov
repnz
das
std
test
das
xor
sub
imull
or
stc
jne,pt
xor
mov
pop
cld
gs
jecxz
sbb
pop
ret
push
push
je
xchg
mov
out
ja
rcrl
rclb
jge
cli
push
mov
into
jno
mov
test
cmp
xchg
push
ljmp
dec
insl
sbb
sub
xchg
cli
pop
lcall
into
imul
jl
xlat
mov
sbb
pop
fiadds
out
xchg
or
mov
test
dec
jne
xchg
jo
nop
pop
cwtl
xorl
cmp
movsb
xchg
cmp
lcall
jle
fcompl
jno
and
stc
adc
jge
mov
test
fwait
sbb
mov
push
cmp
fcmovnb
stos
jle
dec
insb
loope
lret
into
mov
jb
xchg
idivl
cmp
push
jl
xor
or
popf
push
push
sub
pop
mov
aad
lahf
out
lcall
or
jne
cmp
leave
pusha
or
pop
data16
adc
and
jbe
iret
cli
les
subb
xchg
jg
inc
lcall
push
je
cmp
xor
cs
clc
std
jns
test
jns
mov
cmp
xor
xchg
js
push
and
mov
mov
mov
xor
jp
or
cmpsl
and
ljmp
inc
test
std
inc
mov
loop
sbb
xchg
nop
mov
mov
scas
test
mov
fimuls
xchg
xlat
outsb
clc
outsl
xchg
sbb
fsts
out
lock
xor
mov
jl
dec
lcall
negb
divl
out
jae
pop
pop
imul
dec
push
cmp
pop
dec
sub
flds
or
push
push
jge
inc
dec
and
dec
out
jle
daa
repz
jns
fs
xlat
mov
adc
fstpt
nop
sub
in
clc
lods
mov
loope
push
lods
mov
fidivs
fdivrp
sbb
sub
mov
sub
stc
cmp
pminsw
in
hlt
imul
xchg
jmp
mov
ds
mov
pop
cmp
loopne
out
pop
mov
fidivl
roll
xorb
xlat
sbb
mov
cli
repz
xor
cmc
movsl
mov
pop
adc
test
loopne
or
in
std
lock
mov
dec
or
pop
fildl
sbb
imul
fisttpl
daa
in
push
xchg
cld
xor
push
rolb
scas
xor
hlt
sub
push
mov
jae
bound
imul
jge
fdivrs
sti
sbb
ja
or
stc
imul
hlt
sub
mov
stos
aam
cmp
leave
stc
and
or
outsl
pop
mov
std
xlat
out
lcall
es
sub
inc
bound
push
inc
pop
add
adcb
and
jnp
out
dec
jge
movsb
jl
gs
mov
lds
in
and
test
mov
test
shl
out
pop
inc
add
sub
icebp
xor
and
pop
cmp
mov
fldcw
xor
in
pushf
mov
push
adc
xor
cld
xor
arpl
jns
adcl
mov
xor
adc
cs
addr16
dec
mov
adc
inc
jbe
outsl
fs
push
fldcw
mov
in
and
mov
push
adc
pop
mov
inc
jno
or
insb
test
push
pop
xchg
sarl
dec
jae
cmp
stc
sub
pop
adcb
jbe
cmp
jecxz
pop
clc
faddp
jnp
sbb
loope
popf
pop
or
sbb
and
je
add
jns
orb
fsts
int3
sbb
pop
decl
mov
xlat
sbb
xchg
std
cli
jns
pop
sub
inc
cmp
push
dec
popf
xchg
and
cmp
adc
jae
mov
mov
mov
out
lock
push
popa
jg
leave
mov
int
insl
push
cli
push
mov
sbbb
inc
addr16
mov
adc
adc
mov
stos
xor
sarl
es
xchg
stc
mov
lret
pop
scas
push
lea
fisttpl
dec
sbb
adc
daa
ja
mov
imul
push
divb
sbb
mov
dec
lods
jns
je
outsl
test
xor
imul
sti
xor
jg
leave
outsl
cwtl
stos
xor
addr16
jge
lock
pop
popa
jp
test
mov
mov
dec
cmp
cmp
call
push
aam
dec
fcmovnb
data16
sub
int3
cmp
test
and
xchg
cmc
in
sbb
nop
mov
cmp
enter
jns
or
das
cmc
and
push
adc
sbb
and
dec
jnp
fstps
outsl
dec
sub
in
sub
xchg
mov
jmp
imul
divl
pushf
jne
jne
std
aam
stc
fcmovnu
adc
stos
inc
test
in
stos
xlat
int
dec
ds
nop
mov
inc
dec
lret
loop
xor
ds
or
xchg
inc
inc
adcb
jbe
cmp
ss
inc
xchg
rclb
sub
pop
divb
es
cli
push
sub
test
mov
xchg
mov
mov
inc
sarb
test
insl
sub
fcomi
out
popa
xchg
call
pop
mov
fcomp
stos
mov
xor
fmull
inc
sbb
jle
xchg
adc
cmpb
and
dec
cltd
lcall
or
and
shlb
flds
std
lea
in
fisttpl
stos
ljmp
ret
pop
dec
jecxz
add
jmp
movsl
adc
testl
dec
push
pusha
xlat
push
cmpsl
push
push
cli
jp
cld
dec
or
push
xor
mov
jecxz
push
sbb
mov
jns
fs
fcoml
xlat
sbb
imul
sbb
sbb
jne
xor
or
jo
xlat
jp
jp
fcmovnu
lcall
jbe
xchg
ret
xchg
fcmovnu
dec
jge
mov
mov
test
jae
fldcw
mov
movsl
fcomps
push
pop
lret
lods
cmc
push
cmp
popf
adc
xchg
mov
hlt
pop
shrl
xchg
lret
testb
jp
pushf
push
xor
rcrl
popf
cmp
xor
adc
cmp
cmp
inc
fldt
pop
adc
repnz
addr16
xchg
and
imul
ficoml
jbe
stos
adc
hlt
mov
mov
ljmp
cmp
push
rclb
mov
push
add
in
xchg
mov
sti
dec
das
mov
dec
sti
stos
mov
sub
out
pusha
ret
mov
js
fnstcw
or
xor
jle
sbb
inc
xchg
fstpl
push
dec
and
std
pop
loope
add
push
lcall
push
push
js
mov
movl
push
cltd
sbb
aaa
push
iret
je
xchg
jg,pn
or
and
xorb
fs
ret
sbb
jns
xlat
mov
addr16
jne
rolb
js
fistpl
ficoml
mov
icebp
adc
sbb
xor
stos
test
xorb
adc
add
dec
cmpl
out
or
mov
fwait
add
out
loopne
add
dec
adcl
aas
and
xor
fwait
imul
xchg
jo
sbb
or
cli
daa
xchg
mov
jl
xor
jp
sub
dec
arpl
out
or
xchg
ret
or
movb
test
aaa
fnstcw
cmp
jg
mov
and
out
sub
xor
call
jp
addr16
ljmp
mov
and
xchg
xchg
fdivs
test
jp
sub
out
ficoml
xchg
movl
xor
xor
cmc
je
add
pop
sbb
push
push
and
jns
or
and
mov
js
sbb
inc
stc
arpl
adc
or
mov
pop
add
inc
insb
mov
or
push
and
jl
das
pop
data16
cs
mov
stos
and
lock
repnz
xchg
or
pop
out
loopne
pop
xchg
dec
dec
fnstenv
mov
xor
add
adc
fistpl
in
jg
in
inc
das
or
lock
inc
mov
adcl
add
pushf
jae
inc
fs
cmp
lods
push
add
add
nop
repz
and
mov
in
gs
fidivl
mov
jns
fndisi(8087
sbb
xchg
mov
addl
fxtract
add
scas
int
cmp
dec
dec
push
out
push
rcl
int
sbb
out
int3
mov
push
jmp
outsl
lahf
insb
dec
cmp
dec
ret
and
lret
filds
sbb
sbb
sub
nop
insl
pushf
fs
insb
xor
mov
sub
pop
adc
inc
sbb
inc
push
dec
jp
enter
and
add
push
addr16
pushw
cmp
sti
jecxz
int3
ficoms
test
scas
push
jo
add
xlat
clc
push
cwtl
dec
or
fdivp
movsl
jns
out
adc
xchg
sub
in
aam
or
mov
test
add
mov
movsl
out
pop
cmp
les
aam
aas
test
mov
xor
in
mov
jle
push
adc
jns
inc
outsb
and
ja
jo
rcr
sbb
mov
enter
add
push
ja
xlat
roll
mov
xor
mov
mov
adc
xchg
mov
dec
fsubl
and
lret
stos
rol
or
ret
orb
mov
std
fwait
addr16
sub
ficoml
std
sbb
pop
mov
out
adc
push
repz
mov
out
xchg
and
sbb
pop
pop
mov
jmp
lock
test
imul
js
in
xlat
cs
sbb
xchg
add
jecxz
mov
cmpsb
lret
and
mov
je
adc
loop
imul
pop
nop
repz
jp
out
lods
and
inc
shl
pop
dec
pop
fldln2
clc
mov
int3
push
dec
xchg
ficoml
cmp
jl
fnstcw
add
fcomps
cmpb
mov
je
iret
xor
sbb
mov
pop
push
dec
pop
sahf
xorb
xchg
fwait
push
stos
mov
mov
mov
push
dec
sbb
in
lahf
lods
rcr
mov
loope
rcrl
and
cmc
xor
sub
out
rclb
arpl
cmp
sub
xor
ds
aad
adc
pop
cmp
or
mov
pop
mov
add
xchg
mov
aam
dec
cli
xchg
add
fiadds
adc
sub
pop
jno
mov
iret
and
mov
lret
test
push
pop
and
push
dec
mov
fildl
rcrb
mov
inc
fwait
mov
cli
inc
push
flds
or
sub
insl
jne
pop
out
adc
sbb
sbb
cmc
xor
sub
jo
cmpsb
pop
add
jg
push
loopne
adc
repnz
mov
test
xor
pop
mov
shll
ficoms
lock
fbld
dec
cmp
add
or
mov
and
repz
adc
inc
cwtl
push
pop
or
xor
push
stos
jecxz
or
int3
jbe
pop
jp
and
sbb
push
push
and
mov
pop
repnz
sbb
inc
or
xor
jb
cli
adc
jne
xor
shl
ret
and
mov
cmc
fsubrl
fisubrs
sbb
fmuls
sbb
mov
mov
mov
add
popf
lret
lea
popa
and
jo
or
add
dec
aad
jmp
mov
lods
or
pop
imul
mov
roll
rcr
dec
subl
rolb
cmp
and
jp
fildl
mov
xor
xlat
jp
adc
ja
and
nop
aad
sub
and
jns
fisttps
xor
cld
push
pop
pop
inc
push
adc
pop
xchg
cmpsl
in
fimull
out
sub
push
in
jmp
xlat
lcall
dec
push
sbb
sbb
in
out
xor
rorb
sub
fcoml
fisubs
jmp
cmp
xor
cltd
adc
and
push
stos
and
mov
push
mov
cmpsl
scas
adcl
jp
movsl
mov
aas
adc
xchg
sbb
push
pop
inc
test
stc
fwait
inc
clc
popa
int3
mov
test
pop
cmp
xchg
out
inc
jg
nop
stos
mov
push
mov
sbb
pop
out
mov
repnz
cli
or
mov
sbb
in
jle
add
or
std
dec
lds
js
or
into
cmp
mull
std
fistpl
xor
inc
xchg
mov
xchg
inc
pop
loop
cltd
sbb
xchg
mov
call
hlt
push
sub
sbb
insw
shl
xor
mov
gs
pop
rcr
cwtl
sti
mov
sub
xor
xor
push
sbb
int3
lock
fwait
ds
jg
cwtl
mov
xchg
mov
dec
and
jae
fistl
in
arpl
push
negl
xchg
into
repz
mov
xlat
dec
stos
ja
pop
popf
ljmp
mov
jae
mov
xchg
lcall
popf
test
in
sub
push
push
in
and
pop
lea
dec
in
pop
xor
lcall
pop
sub
sbb
push
and
bound
fcmovne
addr16
nop
mov
jae
je
sub
pop
add
mov
inc
jno
fisubl
jp
ds
pusha
sahf
punpckhdq
hlt
lret
daa
xor
xlat
popf
mov
adc
mov
cmp
mov
outsl
sbbl
lea
xchg
mov
dec
cmp
sub
pop
sti
add
push
push
fisubrs
aam
rolb
rorl
sub
test
sub
rcrb
cmp
xlat
sahf
mov
and
xor
or
xchg
leave
dec
fs
js
cmp
pop
in
cmp
nop
or
imul
rol
inc
mov
mov
cmp
and
jbe
sbb
add
cmp
cmp
and
dec
dec
je
xchg
dec
add
bound
push
ficoml
test
les
inc
and
mov
fisubl
jmp
stc
cmp
xchg
sbb
push
outsb
jg
cmc
adc
shrb
inc
xchg
xlat
sbb
sub
test
or
mov
cmp
xlat
mov
jns
inc
cmp
aam
loopne
call
pop
pop
ret
xchg
arpl
pop
pop
js
mov
dec
bound
fwait
pop
mov
fnstenv
stc
pop
into
pop
or
addr16
sub
repnz
movsb
and
jmp
out
adc
mov
mov
or
andl
fnstsw
mov
cmc
stos
push
xchg
xchg
je
stos
mov
mov
out
or
insb
es
icebp
pop
into
mov
out
nop
and
clc
or
jne
push
pop
sbbb
push
lcall
cmp
sbb
fcmovnu
popa
fildl
cmp
mov
pop
jmp
das
cmc
mov
push
inc
xor
jne
xchg
dec
mov
repz
add
fistl
xor
lcall
push
lret
neg
xlat
jecxz
sub
inc
pop
mov
xorb
xorl
ljmp
jns
pushf
mov
pop
xchg
dec
mov
xchg
cmp
sub
adc
movsb
dec
cltd
aas
shrl
lds
aaa
rcll
imul
shlb
add
outsl
vpunpckhwd
int3
jae,pn
push
xlat
testb
sub
int
loop
cs
fdivrp
sub
sbb
cli
push
mov
push
pop
mov
cmp
aas
movsl
mov
movsb
pop
mov
xchg
insw
pop
jmp
dec
dec
pop
sub
repz
dec
jno
adc
lods
imul
pop
sub
enter
sub
jg
xchg
stos
imul
or
cltd
jae
cwtl
jo
push
dec
sbb
and
imul
push
xchg
and
push
aad
xor
or
jg
mov
imul
xchg
popf
xchg
data16
mov
clc
pop
mov
lea
mov
push
fidivrl
mov
mov
mov
jge
lock
stos
cmpsb
verw
cmpl
sbb
stos
fninit
daa
cltd
repz
or
mov
pop
pop
lret
xchg
lcall
jle
xor
fistl
stos
outsl
repnz
inc
push
sbb
xchg
les
fmuls
mov
fisttps
ret
rcr
cmc
push
test
into
aas
cmp
pop
leave
jno
mov
mov
ret
enter
pop
rcrl
js
jge
lret
jno
dec
pop
int
ret
sbb
cmpsb
add
cmp
push
sub
lret
dec
in
imul
adc
dec
stc
and
jbe
lret
push
xchg
push
jae
scas
dec
lods
fsubl
popf
loope
cmp
js
mov
push
pop
sti
pop
xor
shll
dec
pop
cmp
adc
pop
imul
push
iret
cmp
mov
dec
push
int3
out
push
sub
addr16
sub
inc
enter
pushf
dec
xchg
sti
adc
mov
xor
and
leave
or
cmp
sbb
cmp
test
cmc
shrb
mov
out
jae
int3
shrl
jae
popf
outsb
adc
push
pop
cmp
out
dec
jp
push
cmc
sbb
in
ja
repnz
imul
sub
and
xor
sbb
adc
lods
or
scas
mov
out
and
ljmp
pusha
jns
jbe
xchg
lods
test
push
cs
and
jp
dec
rcrb
lea
test
and
sbb
jl
pop
xor
xorl
insb
or
sub
xlat
and
jne,pt
stos
outsb
cwtl
mov
or
cld
mov
cltd
adc
lret
mov
fwait
enter
add
cmpsl
xchg
xchg
and
mov
add
jo
arpl
sub
add
mov
pop
aas
add
mov
loopne
ss
cmp
cmp
cs
and
jnp
jmp
xlat
scas
ret
fistl
mov
out
into
jle
out
jnp
or
xlat
insl
cmp
sub
xor
cmp
dec
dec
inc
ror
adc
inc
dec
pushl
inc
cmp
mov
in
ds
dec
js
mov
in
jp
mov
int3
inc
sbb
jbe
pop
lret
adc
inc
cltd
pushf
addr16
dec
jb
mov
mov
lock
fwait
sbb
xorl
rcr
sub
sahf
test
arpl
jmp
mov
jns
std
arpl
mov
jne
xchg
lcall
jno
lods
es
pop
jecxz
mov
xchg
stos
xlat
ficoml
mov
bound
sub
add
jg
in
mov
je
add
dec
jle
into
push
call
sbb
xor
push
fsubs
shrb
data16
xchg
jne
fs
and
ret
sbb
xlat
jp
inc
push
pop
xchg
dec
pop
clc
icebp
cmp
jno
dec
outsl
test
test
jae
into
sti
insb
dec
adc
mov
xor
stc
and
pushf
iret
jo
in
lea
add
pop
mov
std
jbe
out
xchg
stos
sbb
mov
push
lahf
pop
ja
out
out
jge
dec
mov
push
incb
cltd
push
or
imul
mov
lods
pop
jg
inc
xchg
in
lea
and
push
jbe
or
aaa
shll
sbb
xchg
sub
fs
mov
call
pop
lret
fldcw
lahf
bound
stos
call
xchg
imul
cwtl
inc
xlat
jo
sub
es
mov
sub
mov
sub
pop
outsl
fmull
fstpt
dec
aaa
push
and
sbb
push
pop
mov
sbb
jmp
fcmovnu
pop
dec
sbb
fsubs
std
mov
jb
and
sbb
sub
imul
pop
lock
scas
mov
enter
ret
cwtl
cmpb
mov
rcr
in
outsl
sti
adc
aaa
cmp
or
sbb
and
sub
xchg
mov
rorl
cld
dec
mov
divl
jo
lds
sub
and
mov
push
stos
in
mov
aam
stos
xorb
mov
fdiv
cmp
pop
stc
setg
cmp
icebp
in
or
notl
aas
aad
clc
stc
jbe
dec
outsl
push
push
sub
push
out
xor
sbb
or
push
ja
add
dec
push
daa
pop
fidivs
cli
push
imul
nop
mov
inc
push
in
pop
mov
into
mov
push
les
cmp
mov
jb
cmp
stos
sbb
xor
add
inc
fcmovbe
sub
xor
data16
xchg
pop
cltd
inc
fdivrp
xor
fwait
mov
sahf
scas
es
xor
cmpsl
dec
mov
adc
mov
mov
adc
add
daa
dec
xchg
cli
pop
lods
xor
sbb
dec
int3
push
stos
int
test
cmpsb
cs
lods
adc
aam
lods
sbb
push
arpl
and
xchg
xor
push
aad
ret
mov
mov
outsl
faddl
imul
pop
jo
fcom
inc
outsl
loop
fstpt
dec
out
popf
lock
jne
movsb
test
mov
xlat
fmuls
outsl
mov
sbb
push
dec
bound
adcb
lock
xor
mov
roll
mov
inc
adcl
and
or
xor
or
ret
sar
xor
jecxz
out
jmp
cmp
addr16
scas
daa
pusha
push
std
sub
cmp
xchg
dec
xor
add
jbe
or
mov
pop
int3
out
call
jmp
adc
pop
mov
xchg
in
in
lcall
and
stos
pushf
arpl
fstl
or
xchg
subb
aaa
xor
loop
pop
nop
cmpsb
loopne
jae
test
mov
and
xchg
sub
in
push
push
ret
loop
sbb
out
xor
mov
stc
lret
dec
sub
adc
xchg
lods
lcall
fistl
test
dec
out
mov
stos
mov
cmp
cmp
out
cmp
fistl
jnp
daa
std
mov
pop
lret
lea
imul
int3
imul
test
cmp
mov
pop
dec
rolb
or
xchg
pop
xchg
cli
cmpsb
sbb
xchg
xor
push
xlat
dec
jne
xchg
jns
mov
jae
xlat
lret
loope
out
ds
outsb
xchg
jno
icebp
loope
jmp
sti
sbb
lahf
pop
push
adc
mov
sbb
and
fabs
cs
in
cmp
dec
rclb
inc
je
inc
mov
lods
xor
andb
xchg
cmp
push
out
xor
push
jle
and
out
jge
movsb
jns
fcos
mov
inc
jbe
dec
jns
pop
sbb
mov
stc
cltd
out
sbb
mov
imul
fisubl
call
sub
stos
xor
pop
ret
and
xor
aas
cmp
cld
push
test
test
pop
call
mov
adc
lahf
aaa
jmp
in
xlat
fisttpl
repnz
jae
jp
sub
ss
pop
repnz
scas
test
mov
pop
or
mov
xchg
sbb
cmp
xlat
test
repnz
xchg
push
sub
sbb
imul
lods
adc
imul
mov
and
hlt
ret
xchg
and
pop
ja
xchg
and
mov
dec
add
pop
mov
xor
xchg
mov
add
dec
sub
dec
clc
leave
jmp
repz
insl
mov
das
pop
ja
or
mov
or
cwtl
lss
add
mov
ret
stos
dec
cmp
jecxz
xor
into
imul
mov
cmpsb
add
pop
fs
and
idiv
pushf
or
mov
in
jnp
fnstenv
int3
mov
pop
cmpsl
das
loopne
fdivrp
sub
pop
insb
dec
rorb
cwtl
pushf
inc
movsb
xchg
mov
inc
outsb
add
je
adcl
pop
jns
or
std
cmc
xchg
add
int
xchg
or
sbbl
movsl
cld
rcl
add
fwait
inc
jg
mov
fsts
and
aad
and
jp
sti
push
cmp
shrb
jp
pop
adc
hlt
jl
xlat
xchg
mov
inc
add
jg
shll
fwait
jmp
adc
jg
sarb
rclb
shrl
sub
in
std
or
test
jl
cld
add
sub
add
or
adc
inc
and
add
mov
dec
and
out
mov
rep
pop
jae
xor
adc
and
out
movsl
nop
jmp
dec
outsl
xlat
nop
pop
jne
push
repnz
mov
pop
cld
stc
sbb
shrb
push
gs
out
pop
jbe
test
sub
adc
jnp
cmpsl
jp
aaa
mov
sbb
movsl
mov
cltd
cli
add
gs
jbe
adc
xlat
mov
pop
jns
jmp
mov
insl
imul
mov
add
sahf
aad
in
add
and
orb
xchg
adc
cmp
mov
cmp
aad
jg
addb
mov
out
xchg
push
adcb
push
lret
pop
cmc
imul
pop
cltd
push
push
pop
pop
and
iret
mov
mov
and
inc
mov
or
stos
add
addb
jg
fxrstor
lds
pop
sarb
push
in
nop
ljmp
jle
mov
fneni(8087
into
pop
inc
hlt
push
cmpsl
cmp
dec
jbe
sub
movsb
mov
mov
and
push
inc
sbb
inc
aas
xor
imul
rcrl
push
xor
hlt
mov
mov
xor
dec
cmpsl
jne
mov
repnz
test
or
sbb
fildl
insb
jge
dec
fnstcw
mov
dec
dec
mov
imul
adc
push
xchg
in
ljmp
pop
cmp
add
mov
and
mov
stos
xchg
cs
aas
push
jp
sub
pop
xor
jns
sub
cmc
addr16
dec
rol
and
dec
cmp
rcrb
or
ret
mov
fistl
int3
lahf
jns
push
xchg
jp
mov
sub
dec
dec
cld
xor
push
lcall
pop
std
adc
roll
and
ljmp
fcoms
mov
jns
push
cmp
popa
rcll
pushl
std
subl
jae
xor
xlat
stos
inc
sub
mov
xor
std
inc
cmp
flds
fsubr
pop
out
repz
add
jl
ret
cmp
pop
stc
scas
fdivrl
popf
fwait
loop
out
xor
pop
cmp
cmp
push
xor
bound
xchg
lods
ljmp
jecxz
mov
push
and
or
add
inc
testl
lcall
out
xlat
xchg
cmc
mov
or
data16
popf
aam
fidivs
xor
xor
xor
pop
mov
leave
lods
cmp
jb
add
pop
movsl
roll
mov
pop
sbb
es
fsubs
test
jnp
imul
add
adc
adcl
mov
aas
std
into
mov
push
into
and
jne
fildl
shll
dec
xchg
mov
mov
dec
cmpsb
in
pop
daa
xchg
push
imul
jne
pushf
out
xchg
arpl
cmp
push
fidivs
hlt
mov
pop
pop
and
dec
cmpb
inc
push
jmp
jmp
jmp
pushf
xchg
push
mov
xlat
mov
mov
and
orl
fistl
pop
out
lahf
ss
xor
ds
push
test
sub
out
addr16
fistl
xchg
out
movsl
loop
into
pusha
fnstenv
aam
int
cmp
int
adc
scas
loopne
dec
xlat
xor
add
dec
test
sbb
cmpl
and
xor
push
es
pop
loop
xor
mov
fisttpll
lahf
lea
xchg
mov
in
std
pop
push
cmc
loopne
cmp
cmp
aad
push
jge
les
loope
sub
inc
popf
push
bound
loope
xorb
cmp
push
jmp
sbb
xchg
cli
sub
stc
mov
sbb
ja
adc
fcompl
pop
lahf
jo
insb
and
fstl
add
fstpt
dec
fidivs
jb
mov
lahf
mov
pop
sub
ret
pop
ja
or
aad
aaa
repz
mov
xlat
xor
call
add
lods
icebp
pop
rcrb
ljmp
mov
add
push
lods
in
fdivrl
jae
inc
pop
xlat
jbe
cmpl
stc
and
js
add
cwtl
or
and
cmp
fidivs
sti
scas
inc
int3
push
and
dec
nop
mov
inc
in
clc
xlat
cmp
add
xor
clc
idivb
jnp
fldenv
mov
mov
adc
dec
xor
pushf
cmp
and
inc
fsub
add
mov
or
sar
movsl
mov
cs
lock
cmpsl
mov
fldcw
push
sahf
scas
xchg
xchg
lahf
popf
cmp
pop
rolb
icebp
add
push
cld
sub
xchg
sarl
mov
and
jb
loop
inc
inc
or
repz
push
dec
add
and
sbbl
push
jge
jle
not
and
inc
lods
jae
inc
add
pop
sarb
daa
loopne
outsl
decb
or
dec
sub
jns
mov
insb
insb
mov
jl
cmp
cmp
lret
icebp
add
mov
adc
sahf
cmp
mov
and
das
push
sub
jle
aad
push
mov
lret
lret
lahf
add
test
and
lahf
pop
mov
nop
sub
rcrl
shll
addl
pushf
xlat
push
test
fsts
idivl
mov
insb
enter
and
mov
or
test
scas
idiv
dec
push
sbb
and
mov
jnp
stos
inc
sub
repnz
push
sbb
int
push
dec
bound
or
add
inc
btr
mov
sbb
adc
inc
push
sbb
iret
dec
mov
push
jmp
ret
sub
adc
cmc
jno
jmp
jne
popf
das
inc
jge
xor
sbb
fucomi
sub
cmp
sbb
and
and
jno
scas
lret
dec
and
cs
shrl
jge
adc
dec
mov
dec
fcompl
ret
inc
inc
mov
dec
jle
dec
jae
mov
fwait
jae
and
out
xchg
xlat
dec
out
sub
inc
shl
jae
inc
inc
iret
adc
sahf
fwait
mov
loopne
lret
int3
imul
jmp
xchg
enter
pop
pop
dec
mov
xor
cmpsl
mov
xor
rcr
outsl
xor
jecxz
or
inc
sub
scas
jp
mov
daa
call
jae
test
sbb
mov
pop
imul
pop
pop
jae
add
mov
hlt
popf
out
inc
push
pop
loope
mov
stos
xor
xor
lds
loope
aam
iret
lods
push
pop
ja
js,pt
fistl
pusha
jns
jb
push
mov
mov
dec
and
je
cli
push
push
lea
mov
iret
push
and
cmp
repz
sarb
jne
sbb
sbb
lea
sbb
mov
pop
sbb
fwait
jmp
jmp
popa
xor
jp
cli
or
ret
xor
fcomps
xor
push
sbb
addb
adc
cs
dec
icebp
xchg
fbstp
mov
cmpsl
aaa
mov
sbb
stc
mov
int3
push
clc
sahf
stos
cli
int
test
lock
dec
or
cmp
nop
cld
sub
in
insb
jne
fistl
sub
enter
mov
inc
jmp
rorb
out
jle
mov
jbe
iret
mov
nop
push
ljmp
sbbl
data16
jp
je
je
add
faddl
fisubrs
das
into
xchg
jl
in
popf
mov
pop
mov
mov
push
lcall
sub
cli
xor
jg
dec
jne
mov
stc
and
jne
add
pop
das
add
mov
repnz
aam
cmpsb
xchg
jbe
or
push
movsb
in
push
je
sti
dec
mov
ficoms
in
and
fwait
int
cmp
jge
ret
je
outsb
sbb
gs
test
fiaddl
xchg
push
cmc
inc
sbb
jmp
aas
insl
ja
inc
mov
dec
arpl
add
fisubrs
enter
movsl
fwait
ss
mov
or
mov
shlb
sub
and
cld
mov
sbb
cmp
dec
dec
fwait
lds
xor
cmp
fldenv
scas
add
cmp
mov
repz
mov
inc
imul
andb
scas
pop
fwait
fwait
add
ret
dec
xor
cmp
loopne
int3
cmp
push
push
cmpsl
das
adcl
mov
xchg
and
mov
dec
jbe
jmp
sub
pushl
jbe
fxtract
insb
jbe
sbb
das
stc
push
outsb
sub
mov
test
and
leave
loop
jne
lahf
daa
mov
fsubrp
mull
lret
cmp
sub
push
aad
add
xor
je
cmc
mov
sub
and
mov
xchg
cmp
and
push
lret
rcrl
fwait
dec
stos
push
add
add
lea
and
xlat
cmc
push
daa
fistl
shr
insb
ret
ljmp
or
add
stc
jmp
cwtl
xchg
mov
push
repnz
dec
ret
test
inc
xchg
das
cmp
pop
mov
mov
mov
dec
xor
icebp
ss
add
ljmp
dec
ljmp
xor
xchg
xlat
pop
xor
cld
fs
mov
xchg
adc
cmp
repz
pop
push
xor
inc
jg
jo
scas
push
add
insb
push
push
adc
cld
mov
inc
push
movsl
mov
shlb
push
or
movsb
inc
mov
fwait
cmp
lods
and
sub
roll
adc
push
xchg
push
ficomps
pop
push
adc
push
mov
and
shrl
out
jbe
sub
jns
flds
cmpsb
out
xor
jle
sbb
sub
jecxz
mov
fiaddl
shll
lods
dec
xchg
outsl
jo
mov
inc
mov
js
fistl
lahf
cltd
jle
jbe
rclb
out
jne
daa
push
stos
add
sbb
call
fsubl
jb
aam
dec
enter
inc
jb
mov
jl
mov
out
or
fsts
mov
mov
cmp
cld
pop
repz
dec
mov
xchg
stc
adc
jg
into
or
xor
pop
push
jmp
xor
stos
data16
loop
dec
pushf
xchg
jno
out
jb
jl
pop
push
adc
movsl
xor
imul
mov
stos
mov
insl
movsl
mov
aam
sahf
xor
pop
xor
and
js
cmp
pop
je
push
idivl
popf
orl
ftst
push
lcall
popf
imul
adc
repnz
movsl
and
cmp
xlat
icebp
adc
push
dec
pop
mov
rorl
pop
bnd
pop
sbb
pop
adc
imul
xor
mov
outsl
sub
push
push
dec
xchg
ljmp
xchg
scas
movl
sbb
inc
out
mov
push
and
insb
je
cmp
pop
stos
lahf
pop
and
jl
mov
xlat
cmp
xor
mov
add
lock
jnp
call
or
mov
or
pop
fidivrs
adc
sub
addr16
mov
dec
push
jle
adcb
scas
fidivl
pusha
jp
adc
stc
push
push
pop
mov
mov
jnp
es
movsb
sbb
push
ret
dec
xor
cltd
cmp
adc
pushl
fistpl
inc
xchg
ret
push
xlat
sub
jno
fnstenv
stc
ret
loop
push
in
icebp
into
or
jae
xor
xchg
cld
mov
pop
sub
xlat
fs
cmp
mov
ds
mov
sub
mov
xlat
mov
dec
push
or
mov
sbb
dec
push
mov
repz
cwtl
sub
push
subb
sbb
sbb
jbe
pop
pushf
shrb
test
push
xchg
int3
mov
push
or
mov
add
xchg
mov
dec
imul
dec
fldt
and
ja
out
repz
jle
cs
push
cmp
mov
andl
sub
jb
mov
fdivrl
je
cmovle
cmp
loop
xchg
pop
inc
in
pop
je
pop
push
lahf
jecxz
pop
imul
cld
mov
int3
je
mov
jge
push
rcll
outsl
pop
pop
shlb
cwtl
mov
or
cmp
insl
insl
fstpt
pop
dec
cmp
dec
mov
jno
in
jbe
pop
pop
jle
xchg
sbb
lods
xor
cs
mov
jbe
std
xlat
dec
jb
sbb
cs
ss
js
mov
lret
dec
cmc
out
xchg
xchg
fldl
lret
ds
test
and
mov
sbbl
mov
lock
push
arpl
pop
repnz
and
fs
dec
and
xchg
inc
or
rcl
push
pop
cmpsl
adc
imul
xchg
ficomps
test
pop
inc
mov
mov
sbb
imul
ja
cltd
jae
push
add
outsl
add
imul
sbb
jno
sbb
jmp
out
dec
mov
mov
andl
pop
repz
xlat
mov
int3
movsb
inc
cmp
lock
fmull
fnstsw
inc
dec
lret
stc
push
or
sti
sub
mov
mov
fs
dec
adc
adc
mov
mov
mov
imul
cli
out
aaa
sbb
fwait
mov
add
fldenv
lock
push
pop
sbb
mov
imul
pop
jnp
clc
dec
rol
adc
rorb
lock
cmp
jg
sub
jnp
adc
add
ret
lock
inc
test
push
pop
push
fldcw
dec
outsb
dec
and
jl
movsl
test
iret
add
xchg
push
xor
sbb
in
and
mul
xorb
pop
leave
mov
fmuls
dec
shrb
cmp
or
arpl
sbb
insb
es
mov
fstpt
clc
pop
in
jne
test
dec
int3
xchg
sbb
mov
inc
inc
jae
fldcw
fs
pop
jmp
jno
inc
sbb
movsl
pusha
mov
or
lcall
add
shll
test
cmp
jne,pt
arpl
pushf
ds
insb
cmp
scas
mov
adc
addb
mov
hlt
mov
dec
insb
inc
ret
lock
cmp
add
dec
xchg
lret
aaa
xor
dec
cmp
shl
jl
or
or
sbb
sbb
jae
jge
dec
xor
pop
push
sub
lret
lret
imul
jge
aam
movsl
dec
mov
inc
sbb
sub
xchg
jae
les
movsl
dec
add
sbbb
lds
out
lock
outsb
ret
xor
imul
dec
imul
je
loop
sub
test
stc
jae
add
ja
lea
sbb
mov
ljmp
mov
push
mov
pop
loope
or
adc
dec
test
int
sub
sti
fcoms
pop
mov
mov
cmp
pop
or
imul
mov
jnp
inc
adc
xchg
icebp
pop
cmp
xor
push
xchg
push
les
mov
cmp
cltd
cmp
sahf
cmp
jge
leave
faddp
sub
xor
or
mov
cmpl
or
test
and
jno
sub
xor
lcall
cmp
push
scas
push
mov
add
mov
jp
and
je
push
aas
jp
andl
jl
jbe
adc
sbb
mov
mov
shlb
pop
push
shll
xchg
push
and
enter
dec
stos
jmp
jo
xor
test
sub
cs
rcrl
inc
cwtl
add
mov
cmpsl
jp
lret
xor
xchg
cmc
aam
divb
add
sbb
stos
dec
xor
in
push
fistpl
xor
mov
adc
sbbb
dec
jecxz
pop
out
sbb
in
jnp
cwtl
in
ss
adcb
vhsubps
xor
packssdw
mov
stos
xlat
fmul
xchg
mov
mov
fldenv
fldt
cmp
xchg
enter
jle
push
movsb
in
insb
cld
lea
mov
or
cwtl
repz
adc
in
fsqrt
mov
fimull
outsb
cmp
xchg
mov
imul
imul
sub
aad
fisttps
imul
sbb
cmp
jp
out
pop
or
adc
add
aas
imul
rorb
scas
inc
and
jo
nop
jmp
aam
adc
push
jle
xchg
jbe
jmp
ret
jmp
pop
jno
in
sbbl
xchg
xchg
int3
dec
sti
mov
stc
xor
mov
push
je
and
out
sub
mov
or
xchg
pop
cs
lret
popa
xor
sahf
aad
lret
sub
dec
xchg
and
gs
mov
push
dec
and
je
push
imul
in
push
imul
cltd
jmp
inc
xchg
pushf
outsl
xlat
cmp
arpl
xchg
add
jp
repnz
mov
test
dec
cmpsl
jp
test
xlat
jb
fcomps
outsl
out
dec
pushf
xor
stc
lret
xor
mov
xchg
cmpsl
push
pop
mov
jno
xor
xor
push
cld
lahf
and
add
jae
fsubl
psubd
sbb
aad
mov
xor
je
sbb
push
in
jbe
rolb
cmp
cs
shl
sbb
xlat
cmp
jae
mov
xchg
popf
inc
xchg
in
mov
test
sbb
dec
ljmp
ds
addr16
lods
xchg
out
cmp
dec
test
ja
mov
test
cmc
cmp
call
movsl
ss
or
les
fstp
lods
adc
repnz
lahf
aaa
fsubrl
sbb
stc
xlat
je
inc
jae
and
jl
or
push
rcl
mov
stc
mov
sub
sbb
cmp
dec
mov
imul
sbb
push
mov
dec
xchg
pop
xchg
xor
insl
shll
push
sub
adc
adc
std
les
xchg
sub
xor
push
popa
stc
jo
cwtl
mov
pop
hlt
jns
adcb
icebp
inc
sub
push
add
jno
pop
stos
sti
cmp
xor
dec
cmp
mov
mov
push
je
cli
fsubrs
pop
push
stos
sbb
inc
add
xchg
push
jnp
fstps
lret
ret
xor
mov
popa
fimull
lret
sub
cmp
push
jb
sbb
mov
add
mov
mov
lock
cli
and
dec
push
cmp
sbb
and
sub
pop
pushf
xchg
dec
or
cwtl
fstpt
inc
sbb
inc
adc
and
cld
pop
pop
add
sub
mov
and
je
sub
adc
aaa
push
push
push
ljmp
fnsave
sub
mov
nop
xchg
cmp
int
cmp
jmp
sbb
mov
ss
push
jne
hlt
sahf
xchg
insl
xor
mov
pop
iret
sub
shll
in
repz
fisttpl
test
adcb
ljmp
bound
aam
sbb
pushf
lahf
xchg
pop
adc
fwait
mov
cs
out
xor
or
xor
es
xchg
mov
pop
push
xor
and
stc
mov
xlat
lods
fists
xchg
and
bound
pushf
cmp
push
ret
jmp
mov
xchg
cmp
inc
test
dec
repz
push
das
xor
and
frstor
cld
imul
or
leave
ja
stos
jno
mov
xor
add
lret
push
inc
adc
les
mov
xor
push
icebp
sub
sbb
xor
ret
rcll
popa
xchg
popa
jne
xlat
inc
js
pop
pushf
sbb
or
xor
jb
pop
inc
jae
pusha
hlt
das
pop
jmp
scas
xor
sbb
add
stc
add
das
adc
aam
subl
loop
and
push
aaa
xchg
fstpt
pop
stc
popa
dec
fldl2e
mov
push
daa
hlt
jns
repnz
pop
mov
or
mov
rclb
push
nop
mov
cmp
jbe
rorl
movsl
inc
mov
sbb
xor
fisubrs
mov
rorb
pop
pop
cmp
fadd
dec
sbb
cwtl
xchg
pop
ss
adc
cmp
dec
mov
dec
inc
mov
test
test
push
xorb
jne
filds
push
mov
sarl
dec
stos
loopne
lcall
nop
call
adc
mov
stc
mov
xor
movsb
dec
dec
inc
jmp
cmp
jns
add
mov
adc
insl
in
sbb
mov
push
push
jmp
jmp
xchg
mov
push
adcb
icebp
shrl
fwait
or
xlat
mov
jge
jmp
shll
sub
xlat
mov
push
pop
sti
lcall
data16
and
lods
push
jb
inc
jg
out
add
push
dec
lock
cmp
cmp
pop
pop
fnstcw
or
loope
inc
mov
xor
sbb
xor
outsl
fmuls
or
mov
repnz
movsl
add
jl
imul
push
sbb
xchg
inc
mov
mov
sub
cmp
xor
mov
adcb
popf
pop
imul
ljmp
xchg
mov
adc
push
mov
pop
fs
and
push
mov
adc
cs
cmp
pop
ret
dec
es
pop
push
lret
jbe
ret
jmp
arpl
pusha
lods
sbb
xor
mov
add
into
xchg
dec
mov
and
icebp
scas
pop
loop
cmp
notb
repnz
add
adc
ret
fwait
and
pop
sbb
xor
cmp
push
push
aaa
add
sub
jne
xchg
das
xchg
sbb
pop
inc
orl
jge
and
mov
lds
and
test
sub
or
rep
xor
mov
push
mov
ds
inc
pop
les
test
test
ret
pop
cmp
hlt
inc
ljmp
movsb
push
cmp
adc
mov
call
pop
rcrb
loopne
sbb
jno
int
shll
cmp
pop
imulb
cmp
js
ret
push
lds
sbb
and
arpl
sub
insb
push
sub
popf
addr16
cmp
cmp
pop
adc
scas
xchg
shr
repz
lret
mov
sarl
dec
mov
sub
test
xchg
aaa
mov
sub
sub
aaa
ja
fisubl
or
stc
lret
pop
pop
js
imul
imul
push
hlt
sbbl
push
dec
fdivr
jno
imul
xchg
push
jno
push
aam
jae
call
gs
fstpt
adc
les
test
and
xor
sub
fxch
jae
jg
fistl
pop
into
and
popa
lahf
sbb
xchg
sbb
mov
dec
push
jne
push
rcrl
gs
or
mov
imul
mov
lret
pop
sbb
arpl
or
stc
fst
fildl
xchg
jl
fld
arpl
std
or
test
dec
divb
pop
rcrl
insl
and
das
jno
mov
fwait
push
sub
test
mov
aam
bound
loopne
push
xchg
sub
mov
or
cmc
pop
jnp
dec
mov
cmp
and
shll
cli
add
push
mov
jge
pop
mov
pop
fidivrl
pop
xchg
cmpsl
push
cmpb
and
aad
inc
adc
sbb
or
ja
mov
pushf
xorl
rcl
adcl
daa
fisubs
xchg
cmp
icebp
jp
jecxz
fisubs
mov
sbb
mov
test
std
xor
add
mov
mov
push
outsl
push
xor
std
inc
dec
fs
icebp
popa
xor
fisubrl
and
lret
je
lods
or
test
pop
push
icebp
cmp
lock
xchg
adc
or
and
add
movsl
mov
call
or
xor
lret
enter
xor
shlb
dec
aas
dec
and
imul
push
shr
mov
icebp
fimull
mov
aad
das
call
pop
inc
adc
and
mov
mov
jge
pop
mov
fwait
mov
push
test
inc
aaa
ficoml
cmpsb
sbb
sub
popa
sbb
stc
dec
mov
dec
dec
pop
sahf
ror
and
stos
xchg
sub
jmp
das
out
xor
jns
bound
bound
push
jne
fistpl
repnz
mov
xor
mov
push
std
subb
sarl
cld
sbb
jns
cmpb
in
notl
push
movsb
das
mov
hlt
xchg
adc
int
xchg
jns
push
mov
rolb
mov
mov
jb
jns
aas
xchg
jmp
and
js
aad
ret
and
xchg
or
addr16
and
push
cli
xlat
cmp
sbb
call
adc
in
or
inc
andb
imul
pop
gs
xchg
stos
cmp
cmp
in
inc
inc
movsb
jnp
pop
cmp
jl
sbb
jno
adc
push
and
push
repnz
xchg
cwtl
out
stc
adc
lret
cli
jle
mov
cmp
xchg
jmp
xchg
insb
scas
sub
sti
push
ja
mov
mov
push
int3
xor
ficomps
mov
push
ficoms
jb
adc
scas
jo
add
mov
xor
push
mov
jge
lahf
add
cmpsb
js
sbb
stc
jno
test
xlat
cli
popf
and
pushf
cmp
repz
xlat
mov
lcall
lret
in
int
cmovs
loop
jmp
add
jnp
popf
xchg
xlat
mov
mov
dec
cmp
sbb
push
aas
popf
sub
jae
and
std
fs
inc
sub
lods
je
cmp
sub
stos
jo
cld
xor
std
imul
pop
jp
push
adc
cmp
jb,pn
dec
xor
mov
repnz
pop
setl
and
shrl
js
xlat
jge
jno
leave
pop
nop
mov
sbbl
dec
loopne
aad
and
add
cltd
jp
jle
jmp
xchg
push
xor
push
mov
test
mov
mov
push
mov
xlat
xor
pop
lock
and
push
fildl
push
inc
into
fstps
aad
ja
rcrb
test
cmp
add
push
out
movsb
lret
outsl
insl
inc
fildl
cmp
mov
sub
cmp
cld
sub
arpl
lods
pusha
shlb
testl
mov
pop
popa
fcmovu
push
fisubs
pop
xchg
mov
xlat
xor
ret
out
mov
aam
lods
repnz
bound
icebp
dec
pop
test
jns
or
adc
mov
shrl
ret
scas
push
jp
lea
xchg
stos
pop
setl
in
push
and
sbb
or
pusha
sbb
aam
cmp
insl
mov
jnp
movsb
nop
dec
testl
std
xor
pop
ss
pop
mov
fstpt
pop
inc
xchg
test
pop
mov
mov
xchg
cmp
addr16
lahf
mov
or
pop
test
mov
dec
xchg
jl
aad
sub
pushf
iret
jne
cmp
dec
cltd
mov
scas
lret
out
aad
pop
mov
ss
test
ja
out
call
push
push
xor
sub
push
stos
bound
repnz
sti
outsb
xor
mov
or
mov
xchg
inc
in
xorl
mov
pop
sub
daa
loopne
int3
cld
mov
mov
int
xchg
inc
incb
mov
movups
push
filds
dec
xlat
push
or
into
cmpsl
cmp
outsl
je
xor
fcom
and
fldenv
push
xchg
shl
lahf
leave
push
dec
xchg
rorl
mov
hlt
sbb
xchg
outsb
lret
sub
cld
mov
fimull
push
stc
loope
nop
adc
sub
js
shrb
call
sbb
push
xchg
sbb
sub
inc
orb
stc
mov
mov
sbb
add
cmp
push
ljmp
ucomiss
stc
shlb
push
mov
test
lahf
dec
jae
aad
stc
or
inc
addr16
movsb
jno
jo
sbb
or
pusha
ficompl
movsl
xor
sbb
stc
xor
sub
lahf
cmp
pop
dec
pushf
adc
mov
out
jne
cmp
pushf
jge
mov
stos
imul
push
mov
cs
imul
dec
push
xchg
lea
fldpi
push
xor
sub
xor
test
test
xor
and
push
pop
movsb
xor
pop
movsl
adc
push
ds
mov
imul
lret
shl
jp
mov
outsb
adc
test
mov
popa
std
mov
pop
mov
pop
loope
add
fstpt
adc
imul
jo
vmovss
adc
xchg
jae
fldenv
movsb
mov
in
jp
push
aas
mov
mov
sbb
lret
mov
jb
push
and
inc
dec
or
negb
fnclex
xchg
pop
loope
mov
fnstenv
das
xchg
and
dec
repnz
xchg
and
mov
push
lods
pop
loop
test
pop
mov
mov
mov
mov
xor
outsb
test
out
cmpsl
fiadds
mov
xlat
jle
mov
lret
call
jo
hlt
pop
dec
repnz
cmpsb
xchg
xchg
daa
jge
in
stos
sbb
push
and
fdivrp
repnz
add
in
xlat
loopne
xchg
shr
fimull
or
stos
pop
enter
jmp
loop
sub
xchg
pusha
dec
mov
pushl
adc
mov
cmp
movups
fwait
sti
movsb
jp
stos
ljmp
loope
loopne
ret
xlat
sub
fidivs
mov
xor
xchg
push
push
xchg
ficompl
jp
pushf
inc
dec
dec
js
pop
adc
pop
lods
aad
ja
mov
lods
enter
mov
cmpsl
jae
cs
dec
enter
push
or
sbb
jle
sbb
sub
jne
push
mov
pushf
inc
add
scas
pop
mov
inc
cmp
and
outsb
loop
cmp
movsl
pop
out
jae
mov
int3
jns
mov
jg
into
fistpl
fmuls
xlat
xchg
jmp
nop
movsb
out
lea
push
or
lods
dec
push
imul
sub
sbb
js
pop
cmp
cmp
xchg
nop
push
test
mov
add
stc
dec
dec
pop
push
ja
cmc
push
cwtl
mov
pop
fidivrs
dec
jmp
orb
lcall
js
insl
cmpl
xchg
sbb
fldenv
ja
add
cwtl
xchg
sbb
lret
in
sbb
adc
or
mov
cmp
sbb
or
cli
sahf
mov
popf
cmp
lret
sub
sbb
int3
hlt
push
sbb
xchg
cld
sbb
and
rcrb
xlat
adcl
push
ficoms
adc
sub
popf
mov
int3
or
pop
sub
mov
aas
xchg
aam
jge
fldcw
xchg
xor
dec
test
jmp
faddl
xor
inc
lds
je
or
cmp
cmpsl
push
jmp
lock
mov
mov
in
push
arpl
xlat
scas
jo
cmp
ret
loop
leave
xchg
pop
push
fwait
push
jns
pusha
nop
inc
enter
sti
iret
lcall
imul
lods
test
mov
outsl
lds
pop
test
sbb
repz
hlt
xor
cmpsb
popa
out
push
jns
dec
pop
jae
jl
aad
inc
mov
imul
pop
addr16
fsubl
sbb
movsl
cmpsl
ret
sub
inc
jl
fisubrl
fildl
daa
stc
inc
push
jbe
xor
pop
outsb
fcmovnb
out
ja
inc
xor
fldenv
push
jmp
xchg
xor
lahf
out
mov
xor
sub
inc
xlat
popa
sub
sub
arpl
leave
jg
xor
movsl
cwtl
dec
fidivrl
xchg
nop
frstor
ljmp
int
shlb
pop
xor
mov
dec
fstpt
das
ja
xlat
add
daa
imul
push
and
dec
addr16
mov
and
mov
dec
fimuls
pop
sub
jne
test
cmpl
lcall
push
cmpb
adc
mov
cld
xchg
ret
add
imul
lcall
into
mov
sbb
pop
jmp
mov
dec
sbb
jp
sti
pop
mov
xchg
push
out
fisttpl
xlat
dec
pop
repnz
dec
add
mov
hlt
fwait
popf
cmp
xchg
lret
inc
in
pop
mov
mov
mov
nop
into
clc
jo
pop
pop
scas
addr16
xorl
jnp
jbe
in
fildl
lea
xchg
xorb
js
test
jg
fwait
and
jge
or
negb
scas
sbb
mov
fwait
cmpsl
sbb
loope
out
dec
shrb
mov
pop
movsb
fsts
sbb
movsl
sbb
loop
test
inc
leave
add
out
xor
xor
imul
jno
mov
jp
or
orb
sbb
pop
lret
fst
push
stos
imul
push
jg
or
ljmp
xor
fisubrl
xchg
cmp
andb
out
sarl
adc
push
sbb
ret
mov
pop
insb
or
adc
and
je
push
std
mov
push
jp
and
mov
adc
xor
xor
dec
push
iret
insb
adc
aad
rclb
or
jo
mov
call
pop
xor
xchg
jmp
lret
or
sub
add
xorb
lcall
popa
push
xor
jns
gs
and
add
mov
sbb
out
adc
js
pop
cmp
adc
outsb
scas
fcmovu
sub
std
test
int
imul
or
pop
dec
xorb
fstpl
or
ja
fistl
iret
jg
pop
or
call
pop
push
xchg
mov
sbb
xor
sbb
cmp
xlat
push
mov
imul
rcl
xchg
int3
es
int3
das
mov
test
cmp
ret
inc
pusha
ja
cli
push
or
xor
popf
mov
mov
xor
mov
cli
lret
xlat
hlt
in
push
jbe
cmp
mov
pop
notl
pushf
pop
pop
or
shl
sub
fdiv
les
sbb
xchg
cmpsb
std
jbe
jns
fstpl
scas
iret
ret
sbb
ds
scas
xor
and
cmp
pop
xor
cmp
mov
xor
test
jnp
xlat
js
adc
dec
xchg
jns
mov
xchg
cli
in
xor
xlat
test
mov
mov
test
cmp
hlt
aas
jae
mov
in
popf
ret
add
jb
mov
or
cmp
xor
or
mov
sti
cmp
mov
mov
addb
mov
mov
push
scas
xor
sti
enter
mov
mov
pop
pop
ret
and
xchg
or
xlat
push
bound
push
mov
les
sub
pop
divb
les
sub
jns
add
jne
xchg
enter
arpl
or
or
cmpsl
pop
mov
and
xor
xchg
push
lcall
mov
jp
mov
imul
shrb
jl
pop
out
mov
inc
fadds
hlt
jae
mov
cmp
push
sarb
dec
addr16
mov
pop
pop
adc
test
mov
push
sbb
pusha
mov
add
add
es
stos
mov
sti
out
sub
pop
loop
push
jns
jl
jmp
cld
adc
push
aaa
pop
mov
and
out
sub
insl
pop
leave
pop
add
repnz
jp
pushf
loopne
inc
sub
ja
xchg
movsl
inc
cld
xor
pop
mov
jle
pop
lret
jnp
dec
push
int3
adcb
pop
sbb
out
andb
test
push
lods
mov
xchg
mov
imul
jns
dec
sbb
add
int3
and
ja
lock
adc
push
sahf
sub
add
out
iret
stos
jo
add
mov
movsl
adc
sbb
sub
or
mov
or
sub
adc
xchg
jmp
adc
ret
dec
fstpt
les
pop
bndldx
or
push
sub
mov
sbb
outsl
and
adc
xlat
mov
xor
mov
sbb
cmp
mov
cmpb
jne
mov
xchg
repz
jnp
fnstcw
insb
xchg
pushf
inc
cwtl
mov
mov
pushf
popf
rcrl
push
mov
adc
fnstenv
cmp
in
mov
rolb
stc
mov
and
ret
mov
imul
mov
dec
roll
js
sub
jge
xor
xor
mov
xchg
das
sbb
xor
inc
test
pop
jmp
stos
insb
pop
pop
rolb
fdivrp
sti
pop
pop
loop
pop
push
mov
jg
pop
adc
add
push
xor
test
fwait
cmp
movsb
and
fxch
inc
jb
dec
sub
ret
adc
andl
test
jno
pop
cltd
test
jnp
push
ja
mov
fistpl
popa
xchg
je
add
in
cmp
out
mov
ret
lea
sub
cmp
cmp
sbb
imul
and
ds
lret
xor
jae
fisubrl
lret
push
push
dec
mov
fisttpll
mov
cmpsb
test
ljmp
data16
xlat
push
in
sbb
cld
mov
cmp
pop
or
pushf
add
loop
data16
in
mov
xor
movsb
jnp
cmp
scas
pop
sub
cmp
mov
cmpsl
aaa
call
outsl
das
xor
xor
xchg
sub
cmp
lea
xor
xchg
mov
sbb
test
sub
cli
sbb
icebp
jae
cs
outsb
pop
jae
ljmp
cli
or
sarl
rcrl
in
push
push
ret
jb
js
jae
out
pop
pushf
repz
fstps
js
push
out
out
pop
hlt
shll
push
push
pop
gs
out
hlt
add
mov
inc
sbb
and
ret
sbb
aas
rolb
pop
bound
and
std
stc
sbb
dec
gs
arpl
cmp
sbb
cli
loop
or
dec
aam
add
and
pop
jmp
add
pushf
or
jb
lea
cmp
sbb
mov
dec
jp
pop
mov
and
repnz
fisttpl
popf
repz
xor
xor
pop
sub
mov
clc
mov
xorl
xchg
xorb
aam
lcall
popf
call
imul
fidivrs
test
xor
jle
xlat
cmpsl
xchg
inc
cld
pop
stc
mov
jbe
cmpl
push
and
fldt
faddp
imul
jl
std
lods
enter
stc
cmp
sbb
aad
jg
les
lea
cwtl
andl
mov
ficoms
dec
and
pop
cmp
inc
push
pop
repz
iret
xor
shl
bound
push
push
mov
and
push
adc
xchg
fsubrl
or
mov
push
fisubrl
xlat
inc
add
sbb
jge
ja
cmp
mov
jns
push
repnz
pop
jmp
inc
enter
add
jg
sbb
jl
mov
pop
mov
jne
xchg
mov
ds
sbb
sub
push
call
and
add
mov
and
outsb
dec
addb
orb
bnd
imul
push
int
dec
mov
add
inc
mov
lea
xor
xor
leave
sub
jg
push
jmp
mov
les
lret
xchg
pusha
movsb
imul
jp
inc
and
mov
and
out
pop
inc
mov
shll
stc
icebp
inc
mov
sti
xchg
cmp
fcmovb
cmp
push
jno
stos
data16
mov
sbb
jb
or
lods
out
imul
add
cmpsb
mov
leave
fcomi
jnp
mov
add
xor
dec
outsl
hlt
stos
gs
call
xor
mov
ret
lods
mov
iret
aaa
mov
fldt
add
add
cmc
jnp
cmp
push
fildl
das
mov
dec
adc
mov
dec
mov
inc
xor
lcall
ja
xor
pop
loope
xlat
aam
mov
mov
mov
insl
xlat
xchg
dec
pop
sbb
ss
stc
push
or
in
lahf
add
cmc
fisttpl
push
sub
das
mov
movsl
test
icebp
sub
fldcw
insl
imul
lock
jae
xlat
stc
mov
aam
push
int
lock
data16
sar
stc
pop
xchg
sub
xchg
fwait
xchg
ljmp
or
push
push
xor
dec
pushf
dec
inc
cmpsb
daa
nop
insl
push
xchg
ds
cmp
dec
sbb
xor
mov
cld
leave
movsb
push
push
ja
fisttpl
mov
fistl
sbb
in
aaa
pushf
push
iret
cmovne
loopne
jns
arpl
jp
fsubr
mov
mov
gs
and
iret
stos
mov
mov
test
movl
stos
cmp
loopne
lret
add
add
xchg
mov
int
add
mov
jmp
adc
imul
push
or
sub
test
xchg
mov
push
add
lods
das
mov
test
cmpsb
jle
push
les
cmp
hlt
in
xor
mov
out
rorb
pop
aad
sub
pop
int
sbbl
sbb
mov
ljmp
cmpsl
lret
xor
sbb
or
push
jae
cmpsl
mov
fcomps
pop
popf
imul
iret
push
int3
mov
out
lahf
cmpsl
sbb
stc
xor
jno
movsb
ficoms
or
enter
push
push
pop
jns
push
adc
in
and
push
repnz
cmpl
test
mov
mov
add
in
or
aad
sub
xchg
inc
lods
sbb
leave
data16
jb
adc
lea
and
arpl
imul
xchg
xchg
or
sahf
mov
push
icebp
addr16
into
mov
jno
imul
jb
adc
into
js
xlat
shlb
cmpsb
pop
xor
sbb
pop
cmc
addb
sub
test
cmp
jmp
cmpb
jl
gs
or
add
fadd
test
scas
add
mov
mov
or
scas
ret
cld
push
cmc
dec
push
adc
lcall
fistl
adc
fcomi
push
pop
mov
ficomps
fcomps
imul
xchg
test
pop
lcall
mov
std
shlb
aas
cli
cs
repnz
cli
or
fisttpll
cmp
inc
daa
test
outsl
fdivrl
ja
sub
dec
xchg
in
lea
jecxz
xchg
jae
dec
jp
sbb
push
push
and
sti
xlat
out
inc
cmp
dec
jb
sub
sub
ret
sbb
hlt
arpl
pop
push
mov
mov
stc
jns
fsubs
pop
xlat
lret
lea
jns
iret
jmp
lret
loopne
xor
fcmovnbe
pop
jns
fwait
std
push
cmp
push
popf
adc
sahf
shr
adc
cwtl
adc
mov
sub
sbb
notl
aaa
popa
sbb
pop
shlb
cli
arpl
and
dec
imul
lds
xchg
ficoms
sti
aad
dec
cmp
inc
mov
jecxz
mov
mov
loop
jnp
sahf
dec
fsts
int
sti
andb
sub
into
insb
dec
cmp
jge
xlat
push
daa
pop
addr16
and
jo
push
mov
pushf
sar
sar
pop
repz
push
push
in
cmpl
jne
jg
xchg
fwait
rcrb
mov
cmp
sub
ret
jne
flds
sub
fisttps
sub
push
fcomp
jo
lcall
push
sub
aaa
cmp
push
sbb
imul
adc
pop
das
mov
psrad
mov
jge
or
aam
int
lods
flds
icebp
insb
jmp
xor
fistl
loop
fisubs
jb
rolb
cmpsl
cmp
out
in
xchg
and
xchg
xor
cmp
sub
test
lock
jb
fstpt
insb
jl
or
mov
sar
dec
outsb
mov
stc
jg
addb
xchg
xchg
adc
cs
xchg
sub
loopne
jecxz
dec
add
or
sbb
fcmovnb
sbb
xlat
cs
sub
xor
adc
insl
outsl
sahf
sbb
xchg
std
xchg
imul
xchg
jl
jb
stos
cwtl
inc
fidivrs
pushf
arpl
dec
aam
sti
mov
shlb
lea
shl
cld
and
xor
cmp
lret
sbb
jo
cmp
jbe
jb
enter
cli
and
add
js
movsl
mov
fidivrs
sub
leave
cmp
popf
jl
xchg
ret
in
call
jno
out
sbbb
jle
xor
xor
sbbb
dec
and
mov
mov
insb
xchg
int3
and
leave
js
iret
fisubl
ret
lock
cli
mov
sub
push
popa
jae
mov
sbb
xor
mov
mov
shrb
push
stos
imul
pop
adc
jl
sbb
jp
movsb
rorl
addr16
daa
pop
cmpb
sub
hlt
movsl
xor
pop
jp
cwtl
sbb
ret
pop
repz
add
repz
push
mov
icebp
jae
jl
in
shrl
outsl
je
sbbb
jnp
lret
dec
call
xor
push
push
std
data16
jg
hlt
aam
test
xchg
pop
arpl
sbb
les
inc
in
orl
loope
std
ficomps
pop
and
and
push
nop
push
mov
iret
jmp
pushaw
mov
out
popf
adc
call
pop
mov
sbb
sahf
inc
lock
sahf
fcmovnu
push
cmp
or
cmpsl
cld
jecxz
rorl
xchg
inc
aaa
mov
adc
sub
out
test
int
mov
mov
pop
jbe
xchg
hlt
xchg
jae
stc
mov
dec
bound
mov
cmp
xlat
push
adc
mov
xor
into
lods
loope
dec
aam
sbb
rclb
jbe
shl
sbb
mov
je
mov
and
mov
cmc
icebp
rorl
jae
and
test
jecxz
lea
test
sbb
bound
sub
jo
pop
add
cs
popf
fldcw
fidivl
ret
inc
jmp
and
ret
pop
aad
fwait
sahf
mov
mov
movsl
xor
jg
fildl
xlat
test
stos
or
das
mov
ret
inc
push
push
inc
xchg
push
jns
out
xor
js
in
dec
and
xchg
std
sarb
rol
cmp
rcrb
pushf
sub
mov
stos
sbb
dec
mov
fildl
lods
sarl
pusha
out
rcrl
pop
xchg
xlat
out
movsl
mov
ds
mulb
adc
pop
stc
xchg
pop
sbb
cmp
imul
out
hlt
idiv
leave
in
pop
xor
and
push
rclb
and
adc
mov
iret
pop
jg
shl
mov
or
mov
push
and
push
nop
lahf
mov
jge
std
mov
sbb
mov
out
test
and
out
xor
subl
jbe
pop
mov
stc
js
outsb
shll
arpl
lret
adc
cs
stc
xchg
daa
cmpsl
mov
shl
xor
cmp
and
push
cmp
sbb
sub
gs
cmpsb
xor
in
lahf
imul
adc
lahf
pop
lea
loope
mov
dec
xchg
aaa
pop
sbb
stos
mov
imul
push
fldt
push
nop
fnstenv
lret
movsl
cld
ret
aaa
aad
xlat
mov
or
adc
or
out
xchg
or
cmp
push
lods
jno
xlat
std
cmc
inc
sub
adc
mov
push
ret
jbe
push
jge
subl
pop
push
jno
push
std
pop
pop
flds
mov
push
test
mov
outsl
loop
sbb
xor
or
and
daa
sbb
scas
popf
xorb
push
popf
pop
mov
outsb
mov
pushf
mov
ja
popf
shrd
xor
cmp
fsts
sbb
fs
xchg
and
ret
xchg
test
imul
daa
mov
mov
lcall
cmc
jae
sbb
mov
cmp
imul
leave
mov
in
adc
cltd
push
xor
dec
jae
dec
outsl
mov
pop
movb
dec
sbb
mov
loop
lods
sbb
add
data16
or
mov
push
je
hlt
fwait
push
or
out
dec
push
xchg
shll
hlt
xchg
movsl
mov
pop
mov
pop
repz
lahf
fdiv
or
jne
adc
stc
lret
mov
push
xor
clc
or
testb
push
add
cmp
pop
sub
xchg
xor
xchg
mov
cld
mov
aad
pop
imul
jmp
imul
movsl
mov
xor
test
or
and
cmp
gs
add
xor
pop
push
cmp
scas
repz
adc
test
cmp
out
xchg
ljmp
jns
int
pop
sbb
int3
add
and
add
sbb
sbb
imul
and
into
add
sub
xor
xlat
or
loop
jg
and
out
loopne
loope
ja
popf
xor
mov
addr16
test
out
pop
sahf
fwait
icebp
push
pop
les
xor
bound
dec
aad
fsubl
shrb
push
and
or
cmp
mov
jae
mov
mov
or
fcmovnb
jmp
lods
xchg
or
pop
add
jmp
orl
pop
jp
push
fwait
clc
push
jp
jmp
ficompl
out
nop
popf
scas
in
push
sbb
xor
xor
imul
inc
imul
xchg
pop
jae
mov
xchg
data16
mov
cmpsb
mov
mov
cmp
xchg
outsl
fistps
inc
mov
icebp
xchg
mov
pop
xor
pop
mov
je
ror
imul
or
dec
push
fsubrl
imul
mov
daa
cli
dec
imul
xchg
and
cmp
popa
inc
or
call
nop
test
imul
xchg
aad
mov
or
push
sahf
outsl
addr16
int3
shlb
pop
int
sahf
or
xchg
jo
xchg
mov
or
push
inc
stos
mov
fmull
sbbl
xlat
pop
add
xlat
add
xor
scas
cmp
pop
inc
lock
mov
adcl
popa
fisttps
fnstenv
lcall
add
ja
cwtl
push
test
ret
js
enter
dec
cld
inc
xchg
insl
push
js
dec
das
push
std
iret
cmc
xchg
push
mov
fnstcw
fnstsw
and
xorl
or
sbb
xchg
cli
jg
cli
test
xor
push
xor
imul
idiv
mov
jb
fstpt
sbb
add
jnp
or
addb
mov
jge
scas
fimuls
aas
pop
xchg
stc
shrb
hlt
or
popa
sub
xlat
lcall
jp
fisubrl
fdivl
inc
cmp
push
flds
push
shl
push
pop
aaa
icebp
or
ja
hlt
pusha
imul
fnstcw
icebp
cwtl
std
mov
xor
insb
cmp
int
fnstcw
inc
xchg
js
xlat
in
subl
cmp
stc
mov
jb
jno
rorl
scas
jae
pushf
pop
fdivr
push
mov
sub
fadds
out
xor
mov
mov
mov
lret
imul
pop
cmp
imul
jb
dec
scas
adc
repnz
xlat
arpl
cltd
xchg
stos
xchg
mov
ja
pop
mov
sahf
stc
test
cltd
pop
fmuls
out
jne
decl
mov
fsts
add
mov
sarb
sti
mov
adc
test
push
jno
jge
fs
push
scas
pop
push
sub
test
mov
jnp
fldt
lret
dec
sbb
out
iret
adc
mov
mov
clc
mov
xorb
andb
and
jl
jne
test
adc
test
js
clc
xor
in
or
shlb
dec
insb
stos
push
xorb
dec
and
pop
mov
push
scas
jl
insl
or
xchg
adc
shl
lret
cmp
std
push
cld
imul
jg
or
or
cli
xchg
pop
sub
inc
movsl
dec
pop
cmpsb
cmpsb
leave
in
jecxz
xor
mov
lock
adc
xchg
and
icebp
mov
shll
jae
add
jg
jo
jmp
adc
in
jns
and
mov
jnp
mov
add
outsl
decl
mov
stos
daa
shr
je
xor
pop
mov
in
push
iret
shrb
out
xor
aas
add
xor
mov
lods
mov
pop
lock
xorl
scas
into
mov
popf
fnop
jne
jp
mov
pushf
sub
lret
scas
fs
repz
cmp
and
push
sbb
adc
shl
push
sbb
flds
in
rorb
xlat
add
lfs
imul
jp
daa
or
xor
push
lret
or
mov
dec
add
pop
daa
lret
cmpsl
xlat
inc
rolb
cmp
stc
out
fldcw
clc
sub
fcoml
in
and
aas
mov
jnp
mov
push
inc
daa
test
in
push
dec
and
mov
xchg
out
test
mov
lret
adc
cmp
cmp
xchg
xlat
mov
imul
stos
sbb
cmp
cmp
xor
in
stc
arpl
jmp
xor
push
mov
mov
mov
xchg
test
nop
div
mov
sub
icebp
mov
push
mov
cmp
or
fwait
jl
imul
jae
scas
or
inc
xor
loop
pop
hlt
ror
rcll
in
dec
xchg
pop
fcmovnbe
out
stc
mov
fiaddl
ljmp
stc
je
ss
idivb
nop
xlat
jae
ds
mov
lahf
cmpsl
jno
scas
or
hlt
js
arpl
fldlg2
in
sbb
mov
hlt
js
imul
inc
pushf
jae
nop
inc
gs
mov
dec
test
js
cmp
push
fsts
inc
sub
jle
xchg
pop
pop
outsb
mov
xlat
adc
stos
dec
nop
mov
cmp
push
movsl
iret
jnp
fldenv
shrb
mov
lea
js
aam
jno
xlat
lea
and
lret
sahf
add
mov
fcompl
out
lret
mov
sbb
cwtl
inc
sbb
jge,pt
xor
xor
mov
mov
jp
xchg
movsb
push
std
sbb
in
iret
dec
jnp
aas
aad
sub
add
xor
mov
jae
and
ja
aaa
sbb
fistl
cmpsb
cmp
ret
js
sbb
enter
add
loop
jecxz
adc
push
sbb
sub
sbb
and
and
mov
stc
sbb
jecxz
or
sbb
sahf
in
xlat
dec
inc
xchg
mov
xor
mov
fistl
rclb
addr16
push
xor
in
mov
add
dec
dec
enter
movsl
mov
mov
push
lahf
xor
adc
xchg
stos
movsl
stc
inc
xchg
xor
pop
dec
jmp
and
mov
mov
push
jl
fstps
push
ficoml
mov
ds
pop
lea
popf
bound
add
and
stc
jb
fistpl
test
loope
or
lcall
pushf
bound
mov
mov
xchg
and
rcll
push
add
loopne
dec
enter
insl
fnstenv
clc
mov
lock
or
ja
ret
sub
popf
sbbw
popf
sbb
test
xorl
arpl
fldl
push
das
jnp
xor
xchg
adcl
mov
jno
or
jp
pop
pop
inc
test
add
sbb
ljmp
mov
addr16
pop
mov
scas
adc
iret
clc
daa
jle
sbb
aas
mov
jge
mov
ficoml
push
sub
stos
mov
sbb
adc
inc
inc
push
xchg
mov
mov
cs
mov
cwtl
dec
sub
notl
std
gs
or
mov
sti
fadd
mov
iret
jae
cmp
popf
sar
or
outsl
inc
jge
xor
adc
or
fildl
sub
cli
mov
hlt
push
mov
xchg
dec
fwait
cmp
and
cwtl
mov
in
rolb
add
daa
dec
jge
repz
cld
ret
in
push
out
mov
sbb
push
dec
fstps
popa
nop
adc
xchg
push
xchg
mov
and
dec
loop
lods
outsl
sub
jmp
fdivrs
sub
movsl
push
jbe
addr16
sbb
nop
inc
cmp
xchg
push
pop
jp,pt
addl
push
mov
loope
adc
lods
aas
leave
jge
aam
pushf
or
dec
gs
sti
jae
aad
ja
in
out
xchg
addr16
xlat
aam
lahf
imul
pop
fs
push
mov
insl
xlat
inc
inc
out
subb
adc
add
dec
popa
sahf
bound
sarb
sub
xor
stos
sub
lahf
fidivrs
fwait
int3
repz
aas
pop
pushf
push
sbb
fsts
repz
mov
rorb
lods
negl
fcomi
outsb
jne
movsb
dec
mov
fcoms
jle
mov
adc
inc
sub
and
repz
and
add
jp
cmp
and
in
test
je
popa
pop
les
and
loope
dec
outsl
dec
adc
pop
xchg
dec
xorl
xchg
mov
sub
je
adc
dec
jge
jbe
aam
aam
xlat
repnz
or
sti
stc
insb
mov
or
aaa
insb
stos
xor
sti
lds
out
jns
cli
stos
adc
sub
push
and
je
sub
and
lcall
adc
cld
aas
fistl
lahf
imul
jg
imul
push
sbb
call
stc
cwtl
inc
push
test
rcll
xlat
push
mov
enter
sti
rorl
add
out
sbb
xor
push
cltd
mov
dec
out
dec
dec
stc
xchg
jb
jno
jo
and
psubd
mov
ret
and
pop
hlt
mov
pop
xor
mov
xlat
push
cmp
and
xchg
int3
adc
or
loopne
jecxz
inc
pushf
pop
adc
aad
xor
sub
and
adcb
cld
pushw
cmp
mov
pop
cwtl
xchg
es
imul
aad
out
stc
ret
cmc
push
lods
xor
adc
and
xor
mov
dec
fs
dec
stos
ja
mov
in
shl
fldenv
sbb
pop
scas
sub
movsl
mov
mov
mov
xchg
test
or
lods
mov
xor
aam
push
fisttps
js
and
popa
ret
pushf
test
hlt
sub
add
dec
stos
dec
int3
popf
or
int
sub
cmpb
and
sub
fistl
pop
jno
inc
push
jge
arpl
shrl
adc
xor
cwtl
sub
mov
jae
cwtl
mov
push
out
cmp
aam
xchg
fwait
loop
daa
sub
mov
dec
icebp
call
jle
je
in
xlat
fsubrp
dec
jae
cmp
pop
jmp
rolb
clc
push
mov
test
pop
test
js
push
xchg
std
movsb
cmp
push
xlat
out
aam
cmp
das
xor
cld
mov
sar
lret
scas
cld
dec
ljmp
adc
stos
mov
jbe
and
sub
push
insl
cli
loope
pop
mov
cld
xchg
fiaddl
std
push
dec
roll
mov
fadd
flds
pop
lock
enter
push
loop
push
fidivrl
addr16
loope
sub
fwait
shl
ja
and
and
xor
stos
and
rolb
imul
rclb
adc
jns
dec
mov
push
sub
adcb
pop
add
xorb
fcmovnb
or
div
push
cmc
loopne
adc
or
add
push
test
and
pop
stc
jge
daa
mov
mov
int
jmp
mov
xor
cli
or
xlat
mov
sahf
xor
xor
jno
ficompl
imul
dec
callw
popf
fs
dec
inc
test
adc
xlat
mov
mov
push
add
mov
fwait
dec
adc
stos
add
lea
dec
sarb
inc
or
xchg
or
pop
or
repnz
fs
mov
test
fdivrp
fisttpl
or
arpl
mov
insb
in
int3
jae
lcall
pop
push
inc
or
daa
jnp
dec
or
mov
mov
cmc
popf
and
mov
flds
stos
and
xchg
fnstsw
leave
cltd
jg
fmuls
sub
bound
xor
adc
sub
inc
fildl
lret
sub
mov
imul
outsb
iret
mov
xchg
imul
js
dec
out
xchg
std
push
add
aam
pushw
push
xchg
in
data16
fsubrl
loop
add
mov
adc
aam
shrl
jmp
add
and
repz
addl
inc
test
cmp
pushf
mov
test
mov
jae
in
inc
lock
inc
test
xchg
fisubrs
test
les
mov
fucomi
and
movsl
int3
aas
push
stc
mov
fsubp
or
hlt
call
pop
loope
adc
sub
and
and
jb
xor
mov
out
js
pop
gs
sub
xor
gs
aaa
jae
adc
jmp
loop
fildll
cs
dec
xchg
repnz
fldcw
js
fstpl
jnp
fs
pop
fildl
mov
lcall
cmpb
sbb
test
sbb
shll
xchg
lcall
aad
push
jecxz
xchg
mov
xor
test
push
js
xchg
mov
add
pop
fwait
and
pop
adcb
lods
mov
inc
xor
pop
push
jns
adc
mov
lods
mov
cmp
adc
ja
add
insb
jne
fldt
cmpl
jp
fisubs
lahf
neg
fninit
dec
cltd
push
dec
stos
push
push
cmp
test
jo
sarb
lcall
bound
adcb
pusha
pop
push
jecxz
divb
fsts
out
decb
clc
xchg
fcom
popa
xchg
fistps
dec
push
pop
popf
enter
jle
addl
jl
insb
dec
out
jl
mov
sbbl
insl
iret
and
cld
jp
sub
jo
adc
cmp
nop
call
fidivrl
loope
inc
or
cmpl
arpl
mov
xor
xor
jns
dec
js
jle,pn
push
lret
fwait
decl
in
nop
out
xchg
test
mov
ficoms
sbb
cmp
jge
jns
fldenv
mov
or
xor
call
xlat
push
mov
outsb
or
scas
mov
xorb
cmpsl
dec
cmp
push
adc
shl
into
adc
jmp
sarb
pop
cmp
dec
fnstenv
and
mov
dec
inc
loop
insb
loop
dec
sbb
cli
stos
xchg
push
push
push
jae
xchg
mov
mov
inc
movsl
xchg
sub
jo
stos
addr16
test
hlt
jge
and
insb
cmc
pop
xor
xor
jge
cmp
fldt
mov
xlat
push
cmpl
ds
jno
insl
xchg
push
jbe
addr16
sti
xor
aad
jbe
gs
out
add
xabort
lods
mov
pop
movsb
cmp
ja
inc
and
xchg
bound
pushf
aaa
fadds
mov
adc
shl
insb
xchg
in
jp
fldcw
int3
aas
test
mov
push
jecxz
popf
fadds
xorb
jg
inc
fldt
movsl
xor
cmp
rclb
mov
mov
lahf
in
aaa
mov
mov
lret
mov
inc
outsl
fcmovu
inc
xor
fwait
movsl
fsubrp
outsb
or
xlat
divl
cmpb
mov
xchg
push
ja
test
and
xlat
cli
les
out
ficompl
cs
das
aam
mov
nop
pop
xor
xlat
mov
or
imul
push
cmp
mov
loop
out
cli
xchg
repz
xlat
cmp
and
gs
nop
xor
xor
fimuls
jg
lret
mov
data16
lea
data16
out
fcomps
xor
add
stos
or
fprem
pop
and
andl
jae
pop
mov
inc
xchg
rolb
dec
add
mov
dec
mov
lcall
sahf
pop
orb
push
mov
and
out
mov
inc
sbb
jbe
int
call
xor
lcall
dec
mov
cltd
ret
pop
xchg
inc
sub
dec
sbb
lea
or
insl
cld
jo
cmp
xor
mov
in
mov
xor
dec
es
lods
pop
xor
scas
inc
dec
xlat
out
arpl
sub
fdivrl
std
loope
dec
dec
mov
pop
ret
push
xor
sbb
faddl
push
stos
fwait
push
push
test
cmp
sub
cmp
mov
stos
xchg
ljmp
xlat
sbb
test
sub
xchg
jbe
test
jle
adc
adc
or
and
lret
mov
jmp
jge
nop
jg
cld
out
cmc
or
or
aad
cld
jns
pop
mov
scas
add
sbb
insl
mov
dec
xlat
lea
mov
pushf
push
mov
push
adc
and
push
push
xlat
call
test
iret
dec
stc
mov
sahf
push
or
mov
cmp
sub
mov
cmp
mov
out
cmp
fsubr
dec
fmulp
pusha
pop
dec
leave
mov
pushf
cld
addr16
sbbb
push
xor
ret
and
push
xor
mov
adc
pushf
imul
jecxz
mov
jae
movsl
mov
adc
push
loop
jg
loop
movsb
xchg
push
push
or
cmpsb
xchg
out
jl
cmp
flds
imull
jmp
dec
inc
lea
aad
cltd
xor
scas
jbe
cmp
sbb
sub
pop
jecxz
lea
loop
cs
cmp
add
cmp
ficoms
cmp
add
cmp
test
subb
sub
jmp
dec
stos
sub
pushf
sti
cli
cli
pop
cmp
and
fldt
mov
push
mov
imul
pushf
cld
push
fidivl
sub
bound
sbb
mov
mov
shl
test
imul
aaa
inc
pop
mov
mov
cmp
cmp
stc
xchg
mov
imul
xlat
out
xchg
stos
loopne
arpl
adc
and
push
fimuls
mov
mov
adc
fsts
fs
xchg
dec
push
dec
scas
out
sub
mov
xor
cmc
pop
xchg
notb
nop
xchg
shrl
pop
scas
or
lods
pop
lret
jp
dec
inc
ss
data16
cmp
jmp
pop
test
push
xchg
dec
aas
cmpsl
jmp
movsl
and
inc
in
daa
mov
xlat
lcall
dec
cmp
test
pop
cmp
cmp
xchg
lret
mov
lret
mov
ljmp
icebp
pop
or
lcall
sub
in
mov
imul
push
inc
xchg
xor
inc
add
aaa
xor
dec
leave
fnstenv
in
push
dec
xor
xchg
inc
in
and
fbstp
mov
jns
adc
sub
fwait
sub
push
leave
cltd
inc
test
sub
pop
das
gs
mull
inc
or
sbb
cs
sbb
stos
test
out
call
sbb
xlat
and
sub
jl
jae
inc
pop
sbb
and
es
cmp
sbb
add
or
sub
dec
jl
mov
rorl
fists
sub
loope
ret
jno
xor
and
es
dec
test
nop
sbb
mov
int3
and
or
and
xor
xchg
roll
daa
or
daa
xlat
cmc
outsl
subl
xchg
xor
adc
pop
dec
daa
call
inc
les
aas
inc
sub
je
jns
iret
ljmp
lock
and
dec
fs
test
gs
fstps
nop
mov
adc
stc
jno
loope
xchg
dec
cmp
ljmp
pop
loope
pop
cli
inc
imul
push
xlat
hlt
sbb
clc
imul
js
cmp
jns
mov
lret
adc
jmp
stc
inc
xlat
jne
in
and
inc
addr16
jb
inc
repz
and
div
sbb
rcrl
xchg
inc
sbb
add
pusha
fcmovnb
mov
xor
pop
mov
ljmp
rcrl
out
and
xlat
jo
les
add
outsl
push
push
repz
in
xor
sti
lock
mov
cld
insl
mov
jmp
jecxz
jb
jae
repz
mov
cs
mov
xchg
ret
push
lret
out
in
out
pop
xor
stc
jae
push
sub
fadds
mov
leave
flds
mov
repz
lret
divb
adcl
pop
std
lea
test
inc
mov
jg
scas
pop
sahf
or
sub
xchg
or
sbb
xor
cmp
enter
mov
imul
aas
mov
cmp
jne
pop
dec
sub
cmp
stos
ss
push
loop,pn
outsl
xlat
xor
adcl
xor
in
stos
je
stos
pop
hlt
jo
fstps
cmpsl
push
mov
hlt
pop
insl
xchg
mov
jecxz
popl
jmp
bound
sbb
test
out
ret
fs
sbb
lds
or
cmp
dec
mov
clc
adc
xor
jo
orb
cmp
dec
stc
jmp
push
bound
pop
in
sbb
or
sub
sbb
mov
or
cmovns
sub
dec
pop
stc
lahf
rcll
or
mov
or
cwtl
mov
sti
adc
movb
mov
cmpsb
add
stos
sar
aam
push
sbb
gs
imul
jecxz
je
ficoms
enter
popf
push
mov
xor
hlt
imul
mov
mov
ret
test
cmp
push
inc
xchg
iret
dec
adc
jmp
std
cmp
fsub
je
pusha
xor
fwait
cmp
repnz
push
mov
fisttpl
aaa
mov
scas
push
fwait
xor
mov
es
rorb
jb
cmp
popf
jle
js
cmpsl
mov
imul
stos
lret
sbb
push
jle
or
js
push
add
jge
aaa
cmpsb
jmp
pop
mov
fmull
jno
xlat
sub
cld
out
or
cmp
and
ret
or
jbe
mov
mov
fwait
lea
in
fstpt
cs
les
or
mov
pushl
insb
rolb
sub
shl
nop
and
sub
nop
and
mov
lcall
cmp
test
sub
fidivs
loopne
add
dec
xlat
movb
inc
push
jp
stc
nop
outsl
cmp
or
mov
enter
cmpsb
fwait
mov
call
and
and
cmc
fistl
icebp
adc
jne
add
nop
xlat
adc
push
xor
mov
or
jno
fwait
sub
scas
cmpl
or
orl
subl
cs
jns
add
ljmp
push
push
popa
mov
lahf
sar
xchg
xchg
xchg
shl
dec
sbb
cmp
pop
mov
fmul
adc
loop
jnp
xlat
dec
push
mov
fnstenv
cwtl
test
mov
xchg
mov
mov
xlat
ret
mov
push
xchg
inc
lahf
dec
push
sub
ret
cmc
mov
loope
jbe
rcrl
sbb
dec
ret
sbb
pop
and
sub
jae
imul
and
stc
xor
cmp
cmp
int
and
je
xchg
dec
jmp
mov
pop
sub
hlt
pop
cmc
and
jl
xor
add
popa
adc
cmp
add
fnstenv
pop
lods
mov
neg
fcmovu
push
shll
adc
addl
repnz
je
pop
push
push
xor
xorb
into
mov
sahf
mov
jns
adc
mov
imul
jae
jl
nop
xor
shl
ja
sub
insl
test
cmp
xchg
stc
xor
js
jns
orl
dec
cmc
sti
int3
xlat
jbe
sub
popf
cli
and
aam
decl
pop
push
push
les
mov
imul
lret
cltd
dec
push
cltd
or
inc
add
mov
xor
fs
ss
xor
push
inc
dec
les
enter
out
test
xchg
outsb
int3
or
cmp
les
inc
xor
push
or
into
mov
and
mov
cmpb
and
lods
or
xchg
fimuls
int3
cmpsb
adc
pop
dec
aaa
xor
repnz
xlat
or
pop
cld
ror
xchg
cmc
mov
aam
sub
jg
in
dec
inc
outsl
aad
add
loopne
xchg
jle
xor
cltd
std
sub
imul
lock
in
fwait
sbb
jne
xor
dec
addr16
ret
add
in
cltd
sbb
mov
leave
out
push
gs
addr16
fwait
bnd
addr16
sub
push
dec
mov
mov
fnstenv
and
int
shll
mov
mov
repz
pushf
fildl
imul
fnstenv
pop
andl
pop
js
jno
les
bound
xchg
or
inc
cmp
scas
and
jge
sarl
xchg
mov
jno
push
cwtl
nop
jge
cmp
jecxz
lcall
cs
mov
jae
jmp
call
fwait
add
xchg
push
jl
inc
cs
jle
test
push
add
stc
fcomip
jns
addb
push
aam
fwait
inc
and
test
mov
sub
in
enter
xchg
sub
hlt
aas
addr16
dec
push
jae
push
ret
xor
jnp
data16
adc
stc
xchg
out
cmpsb
xchg
jnp
int3
pop
fnstenv
test
and
inc
pop
xor
cmp
lds
cmp
rolb
dec
xchg
dec
xchg
sbb
and
ljmp
cmp
cmp
jbe
inc
push
pop
mov
insb
or
and
mov
jnp
dec
aam
inc
imul
fisttpl
outsl
fisttpl
xor
int3
adc
adc
bound
adc
jmp
inc
add
popf
mov
push
xlat
lret
xchg
in
cmp
inc
pushf
adc
dec
dec
outsl
je
imul
insl
sbbb
sub
fldt
xchg
fisubrs
sbb
out
out
pop
nop
xlat
adc
hlt
insl
inc
clc
cmpsl
popa
loopne
mov
xchg
mov
fidivl
das
adc
mov
cli
clc
mov
and
push
push
popf
outsl
push
adc
xchg
adc
andl
fnstcw
insb
stc
mov
cmp
insl
mov
fstps
rorb
cwtl
mov
shr
mov
sub
jns
or
lea
fs
imul
in
jmp
sbb
fidivl
sub
repnz
push
xchg
arpl
mov
jmp
enter
add
sbb
out
inc
call
addl
xchg
add
add
ja
enter
pop
je
push
js
inc
iret
or
sub
dec
in
mov
mov
pop
test
cmc
cmpsb
and
xor
mov
jl
fnstenv
adc
mov
cwtl
enter
push
push
cmovg
or
jp
movsb
mov
hlt
add
add
pop
push
push
cmp
in
xlat
and
xchg
scas
scas
mov
push
sti
int
push
sub
mov
and
pop
or
xchg
lock
dec
in
test
jno
sbb
into
dec
mov
and
push
mov
rorl
sbb
loopne
dec
int
adc
pop
add
dec
ret
js
add
gs
push
stos
test
push
insl
out
stos
inc
mov
loop
add
xlat
lock
inc
inc
jae
mov
dec
xlat
xor
imul
jne
stc
inc
mov
xchg
and
enter
or
lahf
aad
push
rorl
add
xor
js
or
dec
sub
inc
dec
xor
addr16
jge
negl
and
fld
test
xchg
stc
arpl
mov
stos
jmp
adc
or
adc
test
and
pop
xor
jns
mov
mov
test
jbe
mov
dec
xor
ret
std
push
dec
or
fst
imul
mov
jle
mov
mov
ret
push
push
xor
adc
or
sbb
out
pop
add
test
xorl
mov
jmp
inc
cltd
imul
icebp
mov
inc
hlt
fstps
cmp
les
pushf
cwtl
dec
cmp
lea
cmp
or
lret
je
int3
pop
aaa
sahf
sub
cmpsb
push
sub
pop
lcall
mov
adc
mov
out
dec
dec
cmpb
stc
and
fisubs
push
mov
push
mov
xchg
push
xchg
popf
push
std
cli
cmc
dec
cmp
push
dec
daa
pop
outsb
mov
cmp
fmuls
inc
jnp
ds
or
cwtl
test
mov
outsl
lret
mov
shll
mov
stc
dec
imul
cmp
sbb
data16
dec
in
adc
pop
jmp
pop
push
jb
adc
dec
or
xchg
ret
sarb
xchg
jns
jbe
ret
xor
add
cli
insb
lret
xchg
enter
cmp
push
or
or
lds
pop
leave
xchg
sahf
pop
or
sbb
sbb
adc
jge
repz
loop
jbe
insb
sbb
cmp
or
lock
mov
imul
sub
pop
pop
cmp
hlt
in
cmp
dec
rcrb
pop
sub
js
xchg
jmp
outsl
mov
fistpl
sbb
call
das
adc
mov
ds
mov
mov
jge
mov
jne
movsl
sub
pop
add
mov
popf
sbb
cmp
jo
fstpt
mov
mov
pop
cmp
out
cmp
inc
fxch
movsb
cmp
fists
push
xlat
cmovb
out
mov
inc
dec
mov
insb
xchg
les
mov
xlat
aas
dec
bound
cmp
mov
mov
dec
push
xor
xor
pop
fnsaves
pop
xor
and
push
pop
int3
adc
jg
addr16
test
movl
dec
jbe
sub
das
out
nop
ljmp
orb
xabort
fwait
in
cld
xchg
xacquire
test
outsb
shrl
int3
imull
fld
or
cmp
sarl
adc
mov
sub
addr16
fcomi
xlat
mov
and
leave
std
xchg
sub
ficomps
stos
scas
inc
or
ljmp
push
mov
sbb
test
or
sbb
xor
test
jno
mov
jae
or
std
lods
sbb
pop
jge
inc
xlat
xor
sub
xor
int3
sti
pop
je
inc
rcrl
xchg
xchg
push
pop
decl
iret
fildll
ja
inc
pop
rcr
jnp
ss
testb
shrb
out
cmp
daa
adcb
stos
aad
xchg
push
movsl
cmp
in
lret
jbe
fcomps
fisubl
dec
lcall
mov
xchg
xor
mov
in
or
mov
and
push
ss
out
dec
xchg
push
js
stc
xchg
add
cmp
sbb
dec
and
xor
add
push
imul
cmp
lods
sub
addr16
mov
cmp
test
lcall
mov
adc
cld
call
push
je
std
fiadds
movsb
and
mov
into
aam
pop
sbb
sub
insb
pushf
and
xor
mov
fcmovnb
pop
inc
into
dec
pop
push
pop
sub
xor
mov
or
sbb
push
push
or
cmp
or
insl
test
rcrl
pushf
mov
push
insb
mov
rclb
lods
out
sbb
mov
xor
sub
sbb
cmp
push
cmp
dec
sub
jp
xlat
adc
mov
enter
mov
jns
filds
push
lret
repz
pop
pop
adc
cmp
stc
add
sbb
xlat
arpl
push
lock
repz
mov
dec
aas
sbb
jne
insb
adc
sbbl
mov
test
add
jbe
pop
fists
das
les
mov
fistl
add
fidivs
enter
mov
pop
cs
lahf
and
lahf
iret
int3
sbb
test
xchg
push
cmp
ds
push
cwtl
lds
jb
inc
call
hlt
fs
test
jns
jle
dec
inc
pop
or
and
dec
add
pslld
push
bound
lahf
cwtl
cmp
outsb
or
dec
fistpl
xor
cmp
loope
mov
inc
push
lahf
aaa
mov
mov
insb
push
sti
mov
mov
cwtl
mov
data16
into
fs
js
pop
mov
jl
arpl
or
xlat
push
insb
pop
aad
and
ret
bnd
jo
fiadds
ljmp
lret
ficoms
xlat
xchg
push
push
daa
jge
in
popa
push
mov
or
xor
out
xchg
jg
test
fs
jge
sbb
aas
ljmp
xor
inc
mov
lret
hlt
add
mov
dec
xlat
push
xchg
lret
test
mov
imul
cmp
sbb
mov
adc
xor
mov
outsl
or
lret
jae
cmp
inc
xlat
andb
outsb
sub
dec
pop
arpl
ss
std
bnd
inc
mov
lahf
aam
cmp
cmpb
sti
xchg
mov
fldt
cwtl
mov
and
mov
mov
lret
xchg
into
xchg
daa
mov
lods
jg,pn
sub
jbe
aaa
mov
xchg
gs
mov
push
das
dec
jae
das
jg
mov
dec
lods
xchg
out
mov
sub
lds
pop
push
mov
std
push
sub
jge
or
fisttpl
push
mov
testb
jae
xor
icebp
pop
fildl
cltd
incb
gs
jp
lret
stos
mov
repz
adcb
gs
jecxz
imul
cld
dec
mov
data16
out
lret
fildl
hlt
jb
pop
leave
mov
ret
sub
lret
xor
jecxz
pop
xlat
in
xor
jb
lret
adc
cli
fnclex
lds
je
or
mov
mov
sbbb
cmp
push
ljmp
push
stc
in
jnp
or
jl
fistpl
jge
movsl
sbb
xchg
jnp
je
popa
cmp
stc
sbb
jp
jmp
mov
sbb
ss
cmp
sbb
pusha
sbb
outsl
push
pusha
jle
repz
push
lret
call
sub
stc
sub
cmp
imul
push
jno
out
in
and
jae
out
das
orl
ret
mov
mov
das
sub
jae
or
insb
cld
mov
arpl
mov
or
rorb
mov
push
loope
cltd
insl
fbstp
jg
into
xchg
sub
xor
mov
push
xchg
mov
insl
mov
xchg
into
xor
shl
iret
imul
xor
xchg
clc
cmp
dec
cli
pop
push
push
jge
aaa
mov
xor
jo
in
les
sbb
jno
sahf
pop
cwtl
xorb
stos
daa
jp
push
mov
adc
test
into
push
push
add
lock
pop
in
xor
lock
aam
rclb
sbb
cmpsb
and
or
push
cli
mov
jp
arpl
ds
jmp
outsl
std
shrb
daa
sbb
movb
test
fbld
rcrl
sbb
int
jbe
xchg
mov
ret
jae
sub
add
je
xor
and
xor
jp
cmc
adc
imul
cltd
rcrl
fldt
out
push
push
sbb
add
cmp
test
test
add
data16
or
popl
adc
mov
pop
inc
mov
xlat
push
mov
xchg
pop
mov
and
cmc
dec
stc
xlat
call
aad
mov
ficomps
js
flds
xchg
or
push
push
sbb
sbb
inc
jae
mov
xor
mov
sub
xor
jbe
add
pushf
push
cmp
fistps
mov
imull
aaa
popf
stc
cld
xchg
mov
rorl
jmp
int3
xor
push
mov
xchg
mov
stos
xchg
dec
jns
lock
adc
push
out
xlat
imul
test
sub
mov
out
push
je
lods
lock
xchg
add
mov
or
push
test
shll
ljmp
aaa
aas
sub
xlat
sub
xchg
cmp
in
cmp
aam
push
xor
mov
imul
aam
sub
add
inc
out
cmp
int
dec
leave
mov
jp
test
std
outsl
sahf
xor
push
cli
imul
std
mov
hlt
pop
cmp
lret
push
push
addb
pop
rclb
mov
dec
pop
or
sub
xor
dec
push
cmp
push
in
mov
sub
xorb
movsb
nop
xchg
stc
pop
inc
or
ss
xchg
jge
cli
pusha
mov
test
mov
sub
pushf
lahf
into
hlt
popa
jns
xlat
jp
addr16
jbe
roll
mov
cmp
out
dec
mov
movaps
in
rorl
and
add
cmp
push
fstl
sti
ds
popf
xor
dec
fcmovbe
mov
sbbl
adc
push
cmpsl
sub
cmp
faddp
xchg
in
adc
arpl
test
ret
and
lods
and
mov
ret
xlat
cmp
sti
inc
jno
addr16
outsl
ds
cwtl
test
dec
jbe
adc
and
fwait
gs
push
fstpt
push
adc
cmpsl
test
mulb
push
xchg
in
addr16
iret
loope
sbb
pushf
dec
pop
addr16
orb
test
test
pop
sbb
dec
std
xorb
fwait
dec
mov
push
xlat
fistpll
or
cltd
adcl
mov
sbb
add
xlat
mov
dec
repz
and
and
ss
jno
in
and
xor
mov
push
mov
push
pushf
xchg
mov
jno
in
cmp
xlat
stos
xor
shr
xor
xor
ja
lret
pop
push
jno
aas
sbbl
xor
dec
outsl
add
call
in
and
sub
xchg
push
nop
cld
or
adc
in
mov
sbb
adc
mov
cs
or
insb
jmp
xchg
push
jecxz
mov
xchg
mov
pop
dec
adc
and
dec
mov
xor
xchg
pushf
idiv
xchg
aaa
leave
ljmp
insb
gs
xchg
dec
add
xchg
ja
adc
mov
jmp
dec
xor
ja
mov
stc
add
mov
shrb
das
test
aam
add
xlat
stos
insb
xchg
jbe
sbbb
xchg
dec
mov
in
cltd
arpl
clc
mov
dec
pop
andl
cwtl
push
lods
fwait
outsl
adc
pop
add
leave
mov
jge
aaa
lea
dec
bound
mov
sbb
fstpt
js
dec
inc
cmp
loope
jmp
outsl
lcall
push
and
push
aam
enter
dec
cli
les
dec
mov
add
jno
cmp
test
jmp
roll
pop
adc
xchg
dec
cmp
cli
fcomi
push
pop
nop
mov
xor
jbe
icebp
pop
roll
je
dec
xor
push
mov
ljmp
aas
and
js
xlat
hlt
subb
xchg
fisttpll
jns
fwait
mov
call
mov
movsl
or
push
es
pop
popf
rcll
dec
testb
outsl
stc
jo
push
jno
adc
sub
add
sbb
push
xlat
insb
imul
jnp
dec
imul
pop
stos
dec
sub
sub
fsubrs
pushf
inc
adc
dec
clc
mov
mov
lret
scas
push
and
aas
outsb
adc
push
pop
pop
pop
inc
inc
data16
cmp
or
inc
push
inc
sbbl
lahf
mul
fwait
ds
es
sub
xchg
int
push
lret
and
les
sbb
push
shrl
sbb
xchg
xchg
sub
pop
xlat
xchg
pop
jp
push
mov
leave
dec
adc
test
shlb
jnp
jl
push
iret
ds
mov
jae
xchg
xor
subl
andl
xor
lcall
jae
les
in
andl
je
pop
lahf
loope
in
push
mov
sbb
adc
mov
pop
jno
scas
xor
aam
fsubrs
mov
and
xor
shrl
xchg
test
lods
jp
adc
leave
xor
popa
aaa
sbb
jl
or
cwtl
insl
sub
mov
repz
stos
lds
lahf
jno
mov
ljmp
mov
imul
xchg
orl
insb
testl
adc
dec
loop
and
and
jb
fs
add
pop
add
mov
and
jmp
mov
fisubl
andl
jbe
xchg
add
mov
cmp
imul
sbb
rorl
movsb
xchg
je
ja
jl
pushf
pop
xor
mov
push
mov
popf
sbb
add
es
out
shrb
lea
mov
inc
adc
add
mov
and
push
mov
mov
pop
sbb
push
enter
and
push
xor
rcrl
das
xchg
pop
mov
fstpt
js
int
mov
dec
xlat
pop
ficomps
fcompl
fsubr
push
pop
mov
jge
jns
adc
cmp
cmp
ljmp
lock
dec
int
jmp
sub
jo
sub
pop
add
push
fmuls
xchg
popa
mov
adc
push
sub
int3
push
test
orl
out
loope
stos
test
bound
aam
imul
xchg
adc
lods
es
mov
out
and
cli
and
nop
ret
outsb
scas
stc
mov
push
adc
sub
stos
mov
jns
mov
mov
jno
stc
and
ficoms
out
push
cmp
xlat
into
dec
lret
fldenv
xor
pop
xchg
fisttpl
xor
lcall
leave
cmpsl
xchg
xchg
orb
xor
cltd
in
xor
mov
add
movsb
mov
fldcw
dec
ljmp
or
pop
pop
jno
add
sbb
cmp
cmp
hlt
and
inc
cli
xor
or
cmp
adc
mov
mov
call
mov
dec
dec
int
sbb
mov
inc
popl
fistl
mov
xchg
xchg
lret
push
and
mov
popf
or
mov
nop
sahf
aaa
movsl
xor
sub
jns
imul
int
ret
int
or
jmp
push
mov
mov
enter
inc
pusha
and
xor
sub
mov
es
cld
cli
add
and
pop
push
dec
ds
jnp
lret
shrb
inc
pop
dec
xor
imul
imul
mov
push
rcr
mov
jne
and
stc
dec
outsl
xor
jmp
and
rcrl
lcall
in
ja
mov
pop
iret
and
push
fisubl
andl
data16
mov
shrl
pop
xlat
stos
daa
xchg
icebp
sbb
imul
shll
fidivrs
stos
sub
and
fbld
pop
popf
ret
sarl
shlb
subl
jecxz
call
lahf
daa
mov
int
leave
push
mov
or
inc
and
push
mov
xchg
push
sub
outsb
mov
sub
ja
stos
pop
xor
jg
ror
leave
xchg
add
scas
xor
jns
lret
dec
fisubrl
xchg
into
dec
push
into
imul
mov
fcmovnbe
lods
clc
cmp
add
add
dec
sbb
cmp
dec
ret
test
addb
or
stc
icebp
mov
add
inc
loopne
repnz
aas
std
outsb
adc
pusha
push
fnstenv
and
xchg
lcall
mov
imul
pop
mov
xlat
or
cmp
jmp
outsl
xlat
mov
jns
gs
pop
mov
xchg
sub
inc
das
push
aam
and
out
std
sbb
fwait
sbb
mov
jl
xlat
dec
xchg
add
xchg
sbb
fcmove
mov
fsts
adc
pop
das
in
and
insb
data16
adc
add
addr16
xor
mov
or
stos
sbb
fucomp
lret
jb
cmp
mov
pop
sub
push
xor
fistpl
mov
push
sub
daa
xchg
adc
jge
in
sbb
nop
mov
jmp
jg
fcmovbe
sub
stc
ja
ds
xlat
cmp
jnp
cmp
pop
xchg
cltd
arpl
cwtl
scas
imul
icebp
imul
xor
rorb
divl
sbb
call
in
int3
stos
addr16
xor
jns
xlat
js
inc
mov
insl
test
mov
cld
iret
jb
sbb
stc
dec
pushf
test
or
lea
and
jae
rclb
daa
adc
and
mov
jg
cmp
sti
imul
and
pop
or
and
or
fidivrl
cmp
and
add
shl
lret
adc
in
push
or
or
test
pop
inc
and
xchg
push
fnstcw
int3
xchg
ja
jge
adc
mov
inc
insl
sbb
fs
mov
pop
add
cmp
inc
cld
fimuls
arpl
cmpb
dec
push
xor
fdivrp
sub
push
cld
jno
xor
mov
mov
lea
popf
clc
pop
mov
xchg
xorb
mov
push
inc
mov
sbb
inc
ret
cmp
mov
fisttpl
insl
mov
fwait
xchg
je
sub
loopne
cli
sub
add
movsb
lahf
js
xchg
data16
push
addb
mov
nop
jmp
orb
xlat
mov
into
shr
ret
lods
dec
mov
inc
and
ret
enter
mov
push
xchg
xlat
test
notb
ret
cmpsl
add
mov
pmulhuw
std
xor
jg
jbe
fcmovne
movsb
pushf
out
imul
fwait
pop
push
pop
insl
cmp
mov
cbtw
jns
push
mov
xchg
ficompl
inc
fimuls
push
adc
push
xor
sbb
pop
stc
mov
leave
jno
rcrl
xor
mov
cmpb
pop
dec
xlat
int
stc
fnstcw
jno
adc
inc
cmpsb
mov
push
pop
xlat
and
fwait
sub
gs
xchg
or
dec
sub
or
dec
dec
sub
dec
test
adc
xchg
call
loope
jae
popa
xor
fdiv
xchg
fidivl
pushf
push
jl
adc
movsb
sbb
clc
xchg
push
int
scas
cmp
test
test
push
pop
cmp
in
push
scas
xlat
push
and
and
cs
and
xor
xor
stos
cmp
mov
cmp
ds
fnstcw
add
jmp
and
nop
in
jmp
movsb
add
sarl
popf
rcrb
fstps
cs
mov
das
cli
fcmovbe
sbb
outsl
loope
pop
or
ds
mov
loopne
jle
add
jle
pop
mov
daa
jmp
stos
iret
adc
add
inc
mov
fs
movsl
cli
jns
das
sbb
pop
mov
mov
inc
decl
lret
mov
cmp
jecxz
mov
out
jmp
cmp
mov
xor
movsl
dec
mov
fcmovne
inc
lds
mov
incb
daa
dec
out
rolb
rclb
sbb
daa
add
jl
xor
mov
and
int
sbb
addw
and
push
and
xor
out
or
dec
adc
inc
cmp
or
pushf
mov
xlat
cmpsl
clc
in
lret
arpl
add
push
adc
ja
and
xchg
add
cs
out
sub
lods
jp
mov
pop
push
mov
cmp
mov
cwtl
scas
and
sbb
jl
aas
mov
divl
pop
cmp
enter
add
mov
ja
inc
test
mov
fs
inc
xor
lds
clc
lods
sub
inc
popf
pop
adc
or
cmp
addr16
add
stc
adc
loope
hlt
pop
jg
dec
xor
je
and
xchg
push
mov
ljmp
mov
cmp
mov
sub
sbb
or
pop
push
cmpsl
repz
mov
iret
or
stos
add
xchg
insl
test
ss
mov
cwtl
sahf
imul
and
lret
inc
sbb
pushf
ret
sub
add
and
mov
test
and
add
popl
shl
hlt
push
add
jb
jge
das
imul
icebp
add
adc
and
repnz
cs
adc
mov
mov
imul
pop
xlat
pop
sahf
or
stc
sti
push
fsts
add
fdivs
dec
inc
pop
lahf
bound
andb
sbb
and
or
sbb
add
fnstenv
xchg
sbb
pop
sahf
and
xchg
aam
mov
sti
aaa
sub
jns
xor
lret
mov
cli
sub
hlt
mov
vmwrite
cmp
scas
push
and
daa
icebp
fcmovne
in
mov
push
dec
dec
jmp
sbb
add
call
inc
or
insb
cmp
int3
arpl
push
dec
pop
mov
pop
inc
and
push
mov
test
push
scas
testb
inc
dec
lods
js
andl
mov
mov
cmp
mov
fs
leave
rclb
cltd
jne
in
xor
fnstenv
lock
test
cmp
inc
fsubrp
test
stc
rcl
pushf
xchg
ss
es
dec
xchg
insl
inc
call
pushf
int3
mov
movsl
mov
stc
sbb
aad
push
dec
cwtl
pop
cmpl
sbb
call
push
ds
decl
fldl
jg
lret
and
xadd
sbb
sub
mov
xor
fstps
dec
repnz
adcb
loopne
lret
hlt
xchg
push
and
arpl
fstpt
sbb
mov
fwait
es
mov
pop
pop
jge
movsb
jbe
dec
jl
and
sbb
or
fwait
lods
push
or
daa
jns
movsb
xchg
ret
xlat
scas
and
outsb
pop
cmp
dec
cld
mov
jo
mov
test
loope
and
xorl
jae
fldt
outsl
mov
icebp
ds
dec
es
lret
sbb
mov
jmp
addl
cwtl
js
mov
jne
add
mov
inc
cld
cmpsl
and
mov
test
aad
mov
jle
pop
dec
jle
fcom
push
push
pushf
push
pop
cld
js
cs
jg
sbb
or
fldln2
lahf
mov
int
xor
pop
add
aam
fdivrp
pop
sbb
push
push
dec
and
pop
aas
imulb
fidivrs
xchg
ficoms
pop
stc
insb
daa
or
mov
or
jnp
stos
inc
fs
sub
ljmp
cli
shrb
ds
jp
pop
popf
xor
js
adc
dec
or
fdivrs
push
addb
pushl
imul
mov
xchg
xlat
in
jae
aam
push
jge
mov
mov
sti
insb
sahf
pushf
leave
fcmovb
jb
jns
stc
in
icebp
or
mov
and
out
mov
pop
cmp
sbb
pop
lcall
pop
inc
adc
mov
imul
lret
pop
imul
add
cltd
fdivrl
jle,pt
push
out
sti
xlat
shrb
pop
loope
pop
and
sub
xchg
popa
xor
mov
sbb
sbb
push
xchg
out
fwait
and
xor
xchg
or
mov
dec
data16
cmp
add
movsl
xor
test
fs
pop
mov
pop
mov
fcoms
repz
adc
xchg
pop
cs
push
lret
outsb
mov
push
int3
loope
lahf
cld
dec
nop
int3
jae
and
pop
sbbl
xchg
mov
sbb
xchg
das
dec
sub
and
sub
lcall
push
dec
into
jne
push
jne
dec
add
jns
dec
or
adc
and
aam
pop
adc
jne
xlat
in
jo
pusha
xchg
sahf
inc
mov
les
fldenv
in
push
aaa
or
mull
iret
jns
fstps
jge
jecxz
mov
sbbb
inc
add
xchg
cmp
or
and
and
out
shl
loopne
nop
dec
testb
enter
mov
xchg
loopne
mov
test
je
fdivrs
mov
clc
cmp
cmp
sbb
inc
jge
inc
jno
fmulp
push
pusha
xor
sbb
imul
pop
dec
insb
jnp
cmpsl
inc
xchg
jae
fs
sub
and
xorl
sbb
cmp
mov
pushf
adc
cmp
in
add
test
mov
adc
cmpsb
xor
mov
ja
mov
adc
pop
pop
popf
cmp
das
in
imul
sub
sbb
jmp
daa
xchg
icebp
js
test
xor
mov
jb
jae
or
jmp
or
adcb
xchg
mov
cmpsb
sbb
shll
iret
inc
xlat
icebp
fwait
mov
repz
push
shlb
sub
popf
mov
push
xchg
addr16
pop
cmpl
xlat
push
sub
bound
je
xchg
aam
or
in
xor
movsb
rorl
mov
xor
mov
push
xlat
fildl
xor
call
jmp
push
jns
sbb
mov
add
popa
lods
pop
mov
lea
lret
xlat
xor
inc
add
xchg
jmp
shlb
cs
inc
or
fld
push
jmp
loopne
imul
mov
mov
sbb
lahf
sbb
mov
mov
xchg
testl
cmp
adc
mov
imul
cld
dec
fwait
jo
movsl
mov
lcall
insb
insb
ljmp
push
or
mov
int3
enter
aaa
pop
jb
loopne
add
lret
data16
pop
mov
xor
mov
jne
lea
insb
xor
fistl
mov
xor
adc
inc
cli
mov
dec
ret
cmp
add
lret
mov
mov
sub
adc
dec
or
int3
mov
xlat
inc
or
icebp
das
arpl
lock
iret
push
adc
fxch
fdivrl
in
sbb
imul
cmp
cmpsb
mov
jns
fbld
jp
movsb
jnp
dec
dec
inc
out
in
mov
push
movsl
mov
insb
test
pop
or
addr16
addr16
inc
mov
mov
xor
mov
jmp
jnp
and
ja
sub
pop
push
mov
mov
mov
jp
stos
cwtl
xchg
mov
add
inc
lock
ret
sbb
or
cli
jo
cmp
jnp
scas
cmp
nop
sub
add
mov
or
pop
mov
sub
fistpll
dec
or
cmp
lock
cmp
dec
fcomi
xor
fcompl
std
pop
sub
mov
cmp
stos
inc
xor
fists
jp
xchg
cmp
xor
pop
cltd
aam
sub
out
dec
rcr
sbb
ds
stc
and
inc
int3
lret
test
imul
cmpb
add
fnstcw
enter
jae
in
xchg
lods
add
rcr
sti
jb
mov
je
push
mov
cmp
add
out
ljmp
shll
add
mov
aaa
adc
scas
jns
adc
push
dec
xor
adc
popa
jl
ds
pop
jns
inc
addr16
xorb
or
mov
and
test
dec
adc
ljmp
iret
outsl
xor
movb
fimuls
pop
mov
loope
xorl
add
cmp
add
movl
xchg
sub
es
jne
das
mov
jno
cmpsl
int3
adc
mov
mov
andb
fstpt
pop
jae
jno
xlat
idivl
xchg
jno
jecxz
sbb
mov
jae
enter
xor
sbb
sbb
and
xchg
shll
xor
adc
sarl
cmc
rcrl
test
mov
popf
aad
jecxz
add
sub
testb
and
out
sub
ror
pop
inc
and
pusha
movsb
lea
dec
push
popa
push
cmp
ljmp
dec
insb
test
add
mov
xlat
cmp
sub
enter
mov
jg
and
orb
add
jae
lret
rcll
imul
je
je
data16
lcall
pop
mov
add
out
sbb
lcall
loope
loopne
push
out
popf
shrl
std
pushf
sbb
repz
ja
hlt
mov
dec
test
cmp
xchg
fnstenv
ss
mov
imul
imul
or
pop
sub
mov
ja
fnstenv
mov
mov
xor
cld
mov
outsl
dec
push
mov
dec
or
inc
dec
sub
dec
js
mov
ss
je
xlat
and
add
bound
lahf
or
push
idivl
add
cs
leave
push
adc
xchg
ja
out
sub
fsubrl
jne
imul
xor
pop
sub
pop
xor
sbb
push
sub
sub
sbb
xlat
sbb
sub
sub
rcrl
jae
fnstenv
and
sub
mulb
mov
ss
jns
sub
add
filds
xor
das
cmp
and
imul
and
dec
stos
nop
mov
je
mov
rolb
in
and
mov
or
xor
dec
push
mov
mov
jbe
adc
js
adc
movsb
pop
push
jb
push
jge
mov
add
xchg
pop
sbb
and
mov
cmp
xchg
fisubs
and
or
sub
stc
xor
shrb
das
pop
adc
cmpsl
xor
dec
xchg
bound
cmpsb
mov
adc
push
test
cmp
push
cmpsl
dec
dec
fiadds
pop
xor
cmpsl
imul
hlt
daa
leave
int3
add
fcoml
fwait
add
mov
mov
mov
adc
rclb
fldt
sub
jmp
repnz
sbb
add
cmp
cmpb
dec
jae
xor
dec
xchg
lahf
insb
xchg
sbb
sub
cltd
mov
lock
imul
dec
ret
xor
xchg
stos
out
xchg
push
enter
cli
ja
xor
cwtl
dec
xor
lret
incl
dec
test
sbb
jecxz
pushl
je
pop
jo
jge
sub
call
sarb
pop
cmp
xlat
inc
push
repnz
cmp
repnz
jbe
mov
daa
popf
aaa
mov
jo
ficompl
dec
sub
dec
pop
scas
test
or
fiadds
sub
adc
sub
lods
iret
sahf
pusha
xchg
test
mov
cmp
idivl
rorb
andb
pop
lret
xlat
cmp
xchg
inc
icebp
push
in
xlat
push
fdivrl
cmc
mov
xchg
shrb
add
cmpsb
dec
mov
push
mov
jl
aaa
cmpb
xrelease
push
xor
dec
xchg
int3
es
or
sub
jo
or
jae
fidivrl
pop
sarl
insl
ficoml
fwait
xchg
cmp
sub
push
pushf
and
push
aaa
leave
repnz
cmp
frstpm(287
jae
mov
jae
lahf
fldenv
or
icebp
or
popf
jmp
and
xor
loope
paddw
fwait
push
jns
fldlg2
int3
test
cmp
scas
xchg
fistl
or
mov
push
test
insb
or
jbe
mov
imul
xor
push
out
sub
iret
mov
pop
ret
stos
cmp
andb
insl
sbb
fildl
data16
xchg
or
and
pushl
inc
insb
or
xlat
out
daa
push
or
std
xchg
icebp
sub
jge
cmpsb
mov
fsubrs
mov
jae
or
faddl
pop
and
push
and
cli
cltd
jecxz
fnstenv
insb
aad
xlat
mov
or
in
sbbb
icebp
cmpsl
jae
cmpsl
xchg
subb
jmp
or
lock
adc
dec
lds
jmp
push
mov
fs
fisttpl
jbe
pop
lcall
das
loop
mov
or
dec
cs
int3
inc
sub
aas
mov
dec
push
mov
jle
scas
not
sub
mov
idivl
mov
fsts
cmp
mov
aad
xor
xchg
xlat
loopne
icebp
dec
fwait
or
sbb
cmp
xchg
dec
out
aad
xor
sbb
and
adc
mov
sub
mov
test
lahf
fwait
leave
shlb
jle
pop
pop
fdivs
xchg
mov
jb
sti
lods
pop
enter
dec
adc
mov
inc
aaa
mov
mov
add
arpl
inc
loop
mov
cmp
ja
jl
jb
stc
ror
stos
xor
and
popf
lret
test
push
aad
inc
test
push
jns
fildl
mulb
sbb
push
scas
and
add
jl
movsl
add
jne
cmpl
inc
jl
push
mov
test
mov
subl
fldenv
nop
cmp
push
aas
into
lahf
mov
test
cld
fisubrs
mov
ljmp
dec
xchg
ja
dec
loopne
and
pop
inc
jo
ret
outsl
mov
adc
cmp
in
bound
add
push
sbb
cmp
je
and
stos
jae
inc
das
adcl
aas
pusha
mov
or
xor
cwtl
sub
add
dec
mov
outsl
jae
divb
mov
stos
lock
xchg
xchg
cmp
jno
aas
jno
rorb
dec
or
fdivl
fisttpl
repz
aaa
inc
sbb
pop
adc
or
adc
jne
mov
fwait
or
pop
jge
sbb
inc
movsl
pop
addr16
fwait
outsb
psrlw
scas
sbb
or
dec
cmpsb
add
xor
mov
push
and
jns
imul
fstpl
mov
jo
xor
xlat
jae
insb
fsubl
rorl
mov
aas
mov
or
stc
mov
push
sbbb
xlat
xchg
add
sub
rorb
rcr
inc
push
nop
or
fistpl
cs
outsl
fadd
jne
xchg
sarb
fcompl
xor
mov
inc
les
jp
push
int
xchg
sbbb
pushf
pop
dec
xchg
repz
and
int
dec
jnp
or
sti
or
dec
pop
jae
push
nop
bound
sbbl
xor
aam
pop
pop
pushf
xor
add
or
fsubl
and
mov
xchg
push
data16
mov
addr16
xchg
inc
int
push
xchg
xor
jno
and
js
cmp
pop
push
mov
jnp
and
xchg
or
pop
xlat
aas
movsb
hlt
mov
lret
pop
data16
ljmp
jb
jb
sbb
arpl
cmp
mov
mov
dec
or
ljmp
push
ret
pop
insl
fcmovbe
cmp
rcl
jns
mov
pop
jl
je
mov
adc
pop
adc
cmpsb
pop
push
lods
dec
repnz
inc
cmp
iret
arpl
aas
cli
jecxz
aad
test
sbb
fwait
loope
sub
mov
mov
stos
imul
insl
push
lea
adc
mov
xlat
sub
and
pop
lcall
add
ret
cmp
xchg
adc
adc
pushf
xor
jmp
js
pop
inc
pop
xor
test
mov
inc
mov
addl
cmp
cmpsl
fsub
mov
jae
xor
add
push
fldt
mov
inc
mov
mov
pushf
cmp
inc
sbb
jno
out
mov
fcmovb
cmp
mov
xlat
or
in
sbb
orl
iret
pop
pop
and
test
cli
sub
aaa
or
mov
cmpsb
add
pop
stc
incl
and
pop
push
leave
or
int3
and
rclb
pop
add
and
mov
push
sarb
xchg
addr16
subb
pop
cmpsl
hlt
fdivl
sbb
loop
fidivrs
aam
ljmp
dec
jmp
sarl
mov
cmpsb
fldcw
dec
xchg
mov
fidivs
jge
and
bound
in
push
and
imul
aad
or
mov
aaa
or
push
stos
movsl
pop
out
xchg
xchg
fistps
xlat
inc
xchg
stc
jae
xchg
mov
lock
cmp
pop
or
ret
out
sbb
xor
lret
addr16
loopne
jns
scas
int3
imulb
adcl
pop
adc
xchg
xchg
mov
inc
and
popa
call
cwtl
mov
negl
push
adc
jge
shll
jns
xor
popf
enter
cmp
mov
xchg
jg
pop
cmp
and
inc
popf
or
cli
jl
jno
xchg
xor
and
les
scas
fisttpl
test
aas
fnstenv
mov
loop
sub
mov
cmp
nop
mov
stc
subb
xchg
fistps
adc
loop
insb
stos
filds
mov
inc
movsl
push
mov
popf
pop
mov
or
cltd
fnstcw
test
mov
cmp
ficoml
hlt
pop
add
ja
add
or
pop
mov
stc
mov
push
jne
test
xor
push
outsl
xchg
in
xorb
xor
xor
pushf
sbb
add
pop
out
fnstcw
repz
pop
mov
xor
or
cmp
and
add
out
add
push
pop
add
mov
sbb
jae
fcomi
nop
sub
mov
test
clc
lods
fisttpl
sub
and
cmp
addr16
cwtl
and
mov
iret
or
orb
pop
dec
jnp
or
arpl
inc
call
xor
aam
xor
push
lcall
sub
add
xchg
jg
xchg
fxch
cs
mulb
add
dec
cmp
cltd
push
cld
popa
mov
or
lock
js
call
push
rorl
dec
movsl
imul
ja
pushf
inc
lret
lret
fwait
sbb
or
adc
mov
jae
stos
ljmp
daa
and
push
frstpm(287
jl
out
dec
vmovhps
bound
cmpsb
sbb
inc
cmp
pop
add
lret
sub
imul
sbbl
adcb
pop
jae
dec
xor
add
je
aaa
fistl
shrl
jno
call
fistpll
xchg
pop
stos
sbb
fcos
outsl
sbb
xor
jmp
cwtl
lret
pop
fsts
iret
inc
xchg
xlat
scas
cmc
shll
jmp
and
adcb
shll
stos
dec
cmp
cli
in
ror
ss
mov
mov
mov
out
and
xor
fmulp
jno
push
adc
test
mov
aam
pop
fistl
add
mov
jl
daa
icebp
dec
sbb
push
dec
cmp
xchg
push
sub
negl
insl
sub
xchg
and
mov
repnz
out
out
adc
dec
rorl
jg
mov
dec
xor
mov
jbe
xchg
jns
iret
sub
pop
pop
push
cli
lahf
test
and
test
jnp
and
imul
movsb
sub
mov
ja
xlat
pop
test
or
sbb
cli
incb
outsl
push
test
pop
xchg
or
or
dec
jne
int
insb
cs
ss
adc
repz
in
stc
ror
dec
fdivl
push
sti
xorb
int
dec
jg
insl
mov
pop
movsl
in
mov
cwtl
sbbl
pop
or
mov
fucomp
dec
mov
or
lret
jo
sub
les
jmp
fstpt
push
je
ret
cltd
lea
add
pop
sbb
in
pop
not
cli
sbb
jne
dec
fcomps
pop
cli
add
inc
inc
enter
add
cmp
test
xchg
sar
xchg
cs
pop
movntps
nop
pop
inc
mov
sarb
movsl
les
cmpsb
je
fildl
and
out
out
pop
in
and
and
loope
mov
cmp
mov
loope
outsb
stc
push
aad
pop
mov
ljmp
inc
xchg
lock
aaa
dec
sub
dec
aas
xchg
ljmp
cltd
jle
cltd
dec
sbb
nop
std
lret
insb
sub
hlt
movsl
add
mov
fistpl
movsl
fiadds
jne
jmp
add
mov
stos
and
jp
fsts
and
pop
imulb
inc
rcrb
sub
xchg
cwtl
dec
jo
je
sbb
cmc
mov
push
xchg
inc
mov
sbb
push
ds
popf
stc
flds
sub
imul
and
sbb
mov
ja
jecxz
pop
ljmp
jo
fs
jae
or
mov
movsb
or
sub
mov
idivl
stc
mov
call
mov
mov
xor
stos
push
out
pmaxub
mov
fcoms
sbb
dec
xchg
or
dec
pop
add
sbb
and
std
adc
xchg
cwtl
jae
hlt
nop
js
push
jl
xchg
mov
sub
pushf
sub
test
fstp
xor
xor
test
mov
sbb
sti
loopne
and
or
xlat
cltd
insb
pushf
enter
add
push
fcomps
xor
out
mov
and
xchg
xchg
repz
add
loope
fidivl
stc
inc
leave
mov
add
cmc
lods
xchg
addr16
hlt
pop
out
movsl
ljmp
fnstcw
arpl
jge
sbbl
jmp
cli
mov
inc
jns
pushl
loopne
cmp
inc
sub
insl
cmp
inc
pop
jb
lods
js
pop
xchg
cmp
repnz
mov
mov
mov
gs
fisttpl
inc
xor
sbb
inc
xor
sub
shlb
and
dec
das
sub
sbb
mov
lock
fisubrs
stos
fisubrl
sbb
jbe
jns
sarl
pushf
push
jno
das
lahf
jmp
fstps
or
clc
mov
inc
in
mov
rcl
outsl
inc
cmp
xor
das
lock
ficompl
aam
fnstcw
inc
cmp
pop
cld
mov
fwait
idivb
mov
cld
sub
repnz
jge
dec
adc
mov
loopne
and
xor
or
jecxz
dec
pop
sahf
jae
sub
hlt
push
sbb
ror
in
test
scas
mov
mov
xchg
lock
or
jl
fs
add
push
stc
sbb
hlt
jge
dec
scas
push
mov
lcall
mov
mov
jae
decl
jbe
fcmovu
call
jge
cld
sbb
xlat
dec
stc
adc
cwtl
fmuls
fcomi
daa
repz
push
ficompl
fadds
lahf
test
add
xor
scas
jb
dec
subl
push
movsl
bound
into
jb
adc
movsl
xchg
and
push
jg
out
xchg
fdivs
ret
pop
or
mov
in
xchg
movsb
jo
shrb
in
pushf
bound
mov
test
sbb
addr16
mov
out
sub
or
xchg
orb
sub
and
xchg
jo
xlat
aaa
jb
push
sub
lea
mov
hlt
ja
xchg
jne
call
into
cmp
inc
int
and
lcall
dec
pop
repz
pop
push
ljmp
pusha
inc
movsb
scas
and
retw
jae
fisubrs
push
jne
mov
iret
jg
in
mov
cmp
fistl
xor
add
popa
inc
mov
jns
outsb
shr
jge
stc
add
cmp
xor
in
fisttpl
pop
cwtl
aaa
mov
rcrl
rcrl
cld
out
mov
jne
cs
dec
and
push
lock
pop
xlat
sti
insl
push
mov
sbb
jae
sub
mov
xchg
mov
cmpsb
push
int3
cwtl
xchg
pop
inc
dec
std
scas
push
shrb
lahf
stc
adc
and
pop
orb
pop
lret
ljmp
push
enter
ss
dec
fnstenv
movsl
arpl
roll
jbe
mov
in
dec
fmull
inc
sbb
std
or
pop
insb
jne
cmp
out
rorb
push
dec
mov
pop
flds
lods
sbbb
inc
inc
decl
cwtl
outsl
subl
push
inc
sarl
pop
adc
vpmadcsswd
or
sub
lahf
ss
shl
mov
dec
cmp
inc
stc
mov
insb
jge
mov
test
clc
mov
out
mov
fld
xor
rcr
cmp
pop
std
xchg
ds
mov
or
or
jb
push
pop
mov
popf
add
subb
sti
in
icebp
mov
mov
mov
cmp
mov
mov
mov
fadd
out
and
dec
or
cld
test
mov
rcll
add
inc
sub
inc
xchg
adc
rolb
fldt
jmp
xchg
es
sbb
inc
pop
test
xlat
push
cmpsb
inc
lods
jne
mov
sbb
cmp
push
test
mov
scas
int3
cs
loop
fimuls
mov
out
and
lret
pop
dec
cmp
and
in
sahf
fcmovnu
pop
fsts
lods
push
cmp
repz
cwtl
mov
jp
jl
and
shrl
mov
shrb
shlb
push
push
stc
jg
mov
or
mov
pop
lods
jg
push
mov
jl
cmp
cwtl
mov
jp
jb
xchg
clc
ror
and
fnstsw
mov
int3
pop
orb
jb
fsts
jmp
or
cmp
inc
xchg
cmc
test
insb
call
cmp
repz
cmp
jne
cmp
cwtl
stc
fcoml
loopne
adc
call
mov
dec
mov
scas
ret
insl
cltd
sbb
sbb
mov
hlt
icebp
fisubrs
stc
fcmovnb
xlat
outsl
sbb
stos
les
arpl
or
ds
mov
fmul
xlat
cmpsl
push
sub
mov
addr16
les
jne
nop
xor
dec
aaa
and
jmp
add
add
and
or
pushf
jb
shrl
xlat
int
cmp
cwtl
jae
jle
pop
and
dec
sub
jns
sub
mov
lahf
xchg
pop
out
sbb
fs
sbb
jns
lret
out
insb
dec
mov
push
fdivrp
push
mov
mov
imul
outsl
test
xchg
pusha
sub
orb
push
addr16
cld
insl
not
mov
adc
xchg
inc
xchg
push
dec
rcr
mov
pop
ret
push
ljmp
dec
or
jns
lret
lahf
imul
xor
dec
cmp
xchg
rcrb
enter
or
scas
mov
push
cmc
gs
sub
push
jmp
rorl
pop
jnp
dec
fbld
nop
push
xchg
mov
mulb
dec
cmp
test
xchg
es
ret
and
inc
mov
imul
lock
jecxz
adc
fsubl
imul
adc
xor
add
mov
jns
xor
adc
mov
icebp
adc
sub
dec
pop
inc
pop
push
and
test
add
insl
xchg
push
aas
mov
pop
mov
or
adc
scas
pop
scas
shl
lock
push
xlat
pop
add
mov
and
xchg
repnz
push
mov
mov
outsl
hlt
mov
inc
dec
or
fxch
cmp
inc
shlb
or
sub
psubd
or
leave
xor
push
inc
push
insl
mov
pop
push
decb
test
mull
add
jae
adcb
flds
inc
cmp
mov
xchg
mov
in
repnz
jb
add
pop
xor
repz
jb
mov
xor
enter
xchg
into
mov
imul
mov
scas
dec
in
daa
jne
push
into
mov
popf
pop
in
pop
cmp
loop
lret
pop
mov
push
sub
lahf
dec
or
jns
out
sti
pop
aam
sub
mov
xchg
les
orb
leave
jle
push
mov
stos
cmp
movb
std
jae
pop
insl
dec
and
adc
out
xchg
iret
push
push
clc
insl
lods
adcb
mov
pop
cltd
fnstcw
or
outsb
sub
into
imul
mov
testb
xor
xchg
in
cmp
xchg
repz
je
sub
push
hlt
into
cmpsl
pop
sub
cmp
push
fwait
int3
xchg
out
in
out
pop
ret
pop
not
sarb
out
lds
xor
cmp
repz
xor
and
mov
sub
iret
fsts
int
insb
jne
xlat
push
sbb
lcall
in
jmp
lret
fnstcw
ds
daa
insb
bswap
ret
mov
add
dec
pop
sbb
arpl
in
sub
sti
pop
push
push
jge
dec
mov
call
xorl
push
push
fdiv
push
frstor
sub
sbb
mov
aas
adc
dec
jne
sbb
sarl
push
push
ja
sub
outsl
dec
cmp
aas
cmp
fsubs
movsl
mov
fstps
pop
add
pop
hlt
mov
pop
ret
push
jp
sbb
cmp
inc
xor
and
pop
ret
in
adc
mov
and
lock
bound
pop
leave
push
jne
ret
add
test
xchg
and
adc
imul
sti
ja
add
mov
xor
xchg
pop
mov
dec
fistl
push
mov
mov
xor
push
mov
or
sub
int3
test
popfw
jecxz
pop
push
test
in
repz
inc
and
pop
testl
jns
call
or
or
dec
mov
push
jmp
fisubrl
ljmp
mov
push
lock
add
push
outsl
xor
push
imul
mov
dec
in
xchg
in
es
jns
jae
test
int3
mov
test
test
sub
dec
mov
cmp
xor
pop
ljmp
xchg
pop
push
push
xchg
daa
mov
jae
dec
aam
cmp
or
xchg
jae
cld
cmp
cmp
push
outsl
fxtract
cmp
fistl
daa
inc
push
fisubs
cld
loop
xchg
pop
add
shll
stc
movsb
mov
ja
nop
mov
xor
sahf
jae
fildl
jg
sub
mov
push
pop
loope
stos
popa
push
xor
in
insl
and
xchg
cmpsb
sbb
test
mov
jb
cmc
lock
call
nop
inc
outsb
push
enter
rorb
cmc
xor
mov
mov
sbb
daa
fmuls
enter
jg
mov
cli
nop
pop
rcll
mov
xor
popa
add
add
mov
pop
jbe
pop
xrelease
subb
scas
fsts
cwtl
out
fidivrs
mov
jnp
fstps
cmc
and
sbb
fdiv
and
repnz
jbe
mov
push
and
int3
jne
add
jb
mov
sub
cs
jmp
mov
fs
pop
orl
jns
mov
imul
ret
fwait
andl
sbb
mov
sbb
jno
cmc
mov
ljmp
sub
xchg
jge
jb
es
sub
test
stos
leave
hlt
xchg
aad
call
data16
les
inc
sub
arpl
imul
std
sbb
out
xor
fsts
and
jp
movsb
fdivl
xchg
mov
xor
enter
and
sub
aaa
mov
lcall
fsubp
xor
or
inc
xlat
dec
loope
xor
mov
dec
mov
inc
jle
gs
and
jmp
stc
and
icebp
dec
push
lock
xor
lahf
mov
aas
insb
sub
ljmp
bound
stos
sbb
hlt
shll
cmp
fistpl
inc
je
pop
sbb
or
loop
sbb
fldcw
add
fcoms
incl
xor
sub
outsb
mov
test
or
out
dec
sbb
pop
pop
xor
xlat
cmp
sbb
cld
in
out
movsl
lods
aam
xchg
mov
sub
or
mov
adc
repnz
sbb
push
fmulp
xchg
mov
push
andl
fs
sbb
roll
add
pop
movsb
fidivrl
mov
push
mov
mov
cli
addr16
ja
nop
add
mov
stos
add
outsl
fwait
ds
fisttpl
test
inc
jmp
mov
push
inc
aad
dec
clc
adc
jmp
xor
pusha
out
cmpsl
mov
jmp
xor
scas
notl
sbb
faddl
add
sysret
imul
fstpt
add
and
cmp
xor
shlb
pop
xchg
inc
push
test
pop
scas
jne
xor
jmp
jne
xlat
inc
push
jp
fldcw
loopne
lret
fadds
xor
and
fnstcw
and
push
jae
nop
xchg
rep
xor
push
xor
adc
xor
rorb
mov
jnp
fldenv
pop
xchg
lahf
xor
into
mov
dec
xchg
sbb
scas
fld
jecxz
lahf
pop
xchg
insl
xlat
aas
movq
fyl2xp1
cmp
jp
jge
in
jg
or
xchg
cmpsb
pop
inc
pop
int3
xchg
dec
mov
popf
jmp
push
inc
les
aam
jae
cmp
popa
mov
call
adc
clc
cwtl
leave
shrb
adcl
test
dec
pop
jle
push
mov
add
fistpl
jle
daa
push
mov
push
sub
lock
xlat
mov
jle
jge
sub
lahf
sbb
in
imul
in
pop
inc
jno
pop
jo
adc
lahf
mov
lret
add
loope
inc
sbb
or
sbbl
mov
roll
negb
mov
sbb
lret
xchg
dec
fldcw
test
or
dec
scas
and
mov
jg
push
xlat
sbb
add
loope
dec
out
cmp
jnp
dec
adc
ficomps
out
jmp
dec
xchg
shrb
and
addr16
loopne
cmp
mov
dec
jge
push
fistpl
aad
imul
movsb
xchg
call
incb
insl
pop
pop
adc
int
add
imul
xor
insb
js
sbb
push
dec
push
jecxz
mov
lcall
enter
ja
dec
push
ret
repz
push
fwait
test
les
iret
mov
into
dec
sub
xor
stc
sbb
cmc
lock
dec
pop
xorl
imul
int3
jbe
int3
mov
inc
sub
xchg
sub
loop
repz
movsl
xchg
pushf
ljmp
xchg
shlb
jge
fyl2x
push
and
fisubs
pusha
mov
aaa
les
adc
ljmp
sub
mov
xor
frstor
stc
xchg
mov
repz
daa
adc
std
or
xor
loopne
push
jg
cmc
daa
aaa
out
xchg
fcomip
jbe
sti
dec
nop
stos
sahf
push
xor
and
sti
xor
xchg
mov
xlat
jle
jp
fwait
lods
adc
jne
mov
cltd
les
out
clc
sahf
in
mov
clc
sub
jg
daa
outsb
mov
sub
sbb
pop
cmpsb
ret
sub
push
imull
mov
push
lcall
lcall
sbb
adc
test
mov
inc
add
enter
test
aaa
inc
cs
cld
dec
adc
or
jp
fisubs
out
aad
inc
test
sub
and
mov
test
aas
inc
sub
mov
cmp
add
and
jp
outsl
dec
cmp
inc
adc
inc
mov
and
mov
jp
cmp
mov
inc
not
call
cmpsl
xchg
mov
imul
sbb
cmp
jl
pop
mov
push
jmp
or
aad
jecxz
cli
and
mov
jnp
dec
popa
call
add
jmp
or
stos
push
or
jae
test
cltd
jecxz
mov
out
loopne
dec
sub
xchg
pushf
pop
xchg
pop
jae
dec
push
push
shll
add
mov
dec
and
xlat
enter
xchg
cmpsb
rol
push
and
mov
xor
fimull
push
inc
jp
cmp
xor
data16
fisttps
or
add
dec
or
je
fldt
cmpsl
leave
mov
pop
and
lcall
ret
idivb
jmp
outsl
scas
cs
ret
hlt
pushl
test
inc
repnz
mov
pop
ret
adc
es
jb
adc
mov
pop
push
and
rcrb
dec
xlat
fidivs
cmp
in
cli
mov
cwtl
ror
mov
and
aas
xlat
push
jmp
xchg
imul
xchg
aam
jne
pop
fcmovne
push
in
insb
out
jne
xchg
xchg
test
ret
stc
pop
lods
jae
faddp
mov
adc
rcrb
leave
xlat
mov
sti
iret
sub
push
fdivrl
fsts
pop
fwait
xchg
and
sub
std
in
leave
mov
mov
jns
fadd
loop
hlt
loope
addl
daa
adc
pop
xchg
jne
mov
out
jmp
or
shll
repnz
push
or
jg
mov
out
hlt
or
sub
or
pushf
push
cld
sbb
sbb
les
imul
add
sbb
loopne
dec
cmp
add
aad
dec
jne
pop
call
or
sbb
out
mov
addr16
pop
int
fidivl
rclb
xchg
xor
inc
sbb
stos
xlat
mov
jl
push
push
jbe
test
or
ret
cmp
cs
cmp
dec
arpl
je
cli
xchg
mov
lret
or
mov
dec
add
fldcw
xchg
mov
mov
push
clc
dec
loopne
mov
jae
sbb
pop
movsl
lcall
stc
or
lret
xchg
sub
pop
ret
fsts
xlat
cmp
cmp
adc
mov
push
je
xor
mov
outsb
and
and
in
sbb
pop
cmp
xlat
out
mov
mov
loopne
mov
or
sub
dec
loop
sub
insl
xor
out
and
ret
xlat
aaa
push
xor
mov
mov
or
ds
inc
out
out
outsb
xchg
fwait
ljmp
or
mov
stos
test
mov
push
mov
sub
das
mov
and
jecxz
stos
push
fmuls
pop
cli
or
jmp
push
or
out
or
loop
int3
scas
clc
std
sub
jmp
mov
int
imul
dec
lods
enter
dec
fdivp
pop
xlat
pop
fwait
and
sub
cltd
push
cmp
out
push
dec
lahf
mov
and
fcompl
mov
push
xlat
mov
jle
jmp
lcall
aaa
sbb
jle
xor
mov
outsl
sub
dec
push
dec
loop
lret
lret
pop
jnp
lret
push
cs
add
in
rclb
rclb
mov
mov
stos
push
jmp
cmp
xchg
xor
cwtl
jmp
dec
gs
cwtl
pop
scas
lods
mov
pop
mov
adc
dec
adc
loopne
fidivl
lret
push
mov
push
imul
fistpl
jae
pushl
clc
mov
cwtl
xor
mov
rcrb
pop
shrl
std
call
push
pop
xlat
xchg
sub
ror
mov
fisubrl
pop
rcrl
cmpsl
jmp
mov
loop
xor
and
add
dec
sbb
dec
mov
fstpt
jmp
stc
cmp
inc
sbb
insb
sbb
iret
mov
xor
dec
outsb
subb
jg
jg
inc
adc
xchg
mov
inc
pop
cwtl
add
sub
fxch
xor
mov
mov
sbb
je
js
lcall
push
rcrl
jnp
pop
int3
sti
mov
cltd
and
cwtl
les
int3
sbb
xchg
cmc
jp
push
in
rcrl
sub
hlt
xor
dec
cmp
mov
loop
pushf
stos
xor
orb
dec
jno,pt
leave
mov
pop
jne
xor
mov
das
pop
xor
in
pop
xor
or
loop
push
mov
push
mov
aaa
cmpsl
xor
shll
mov
subb
fnstenv
sbb
lcall
addr16
clc
jne
or
cmpsl
lock
cli
mov
or
sub
add
ret
fisubs
sub
inc
addr16
xlat
fsubrs
popa
add
inc
xchg
inc
mov
sbb
add
xor
jno
sbb
mov
and
or
lahf
orl
test
sub
fildl
lret
hlt
add
add
push
fiaddl
pop
orb
jno
lea
sbb
push
or
xor
sti
jne
inc
andl
sub
sarb
push
xchg
dec
xchg
stos
mov
xor
popa
mov
mov
rcll
out
mov
inc
mov
or
pop
mov
or
mov
xlat
dec
adc
xor
enter
imul
push
jecxz
imul
push
jo
mov
and
lock
inc
imul
dec
in
add
sbb
jns
xchg
jae
xor
xlat
pop
dec
popf
push
add
stc
and
nop
cltd
pop
dec
cmp
push
mov
sbb
rcr
cmp
fildl
fcmovnu
cmp
or
mov
pop
xor
pop
daa
pop
ret
cs
push
xor
push
jecxz
out
xor
cli
mov
cmp
xchg
sbb
xor
push
fldt
jnp
and
lea
cmp
mov
xchg
dec
call
pop
pop
add
xchg
fsin
pushf
jo
push
xchg
lcall
inc
push
cmpsl
and
sub
out
add
jg
sub
nop
jl
fcmovnbe
sbb
fimuls
fwait
les
repnz
mov
das
mov
xchg
pop
popf
gs
enter
xchg
jo
pushf
movsb
dec
roll
popf
adc
sbb
xchg
fdivl
sub
into
or
sub
xor
inc
mov
jno
mov
insb
or
pushf
dec
dec
leave
inc
xor
andps
pop
mov
aam
test
jb
mov
ds
mov
and
hlt
test
adc
pop
push
sbbl
pop
mov
adc
nop
pop
movsb
ja
outsb
mov
xor
pop
fdivrs
cmp
aas
xor
movsl
jmp
push
loopne
aad
mov
fisttpl
push
nop
cmpsb
test
fistl
test
jge
fcom
and
ret
sub
jmp
sbb
add
jp
cwtl
mov
inc
adc
pop
call
pop
cmpsb
mov
call
pop
ds
mov
call
or
iret
xor
pop
leave
incl
jmp
sbb
jno
pop
mov
pushf
enter
xchg
shll
fcomi
lock
mov
jp
into
or
cmp
je
or
sub
or
sti
push
enter
or
jg
mov
mov
lcall
cmp
or
test
dec
gs
mov
pop
sub
mov
adc
inc
sbb
inc
cmp
mov
mov
jp
pushf
mov
sbbb
sub
mov
cmp
xor
and
add
sub
pop
shll
xchg
xchg
outsl
clc
sbb
ds
scas
push
lock
sub
push
aas
add
aam
or
mov
jl
addr16
sub
pop
push
xor
sub
jno
sub
hlt
sbb
jns
cs
inc
ret
idiv
mov
ret
push
notl
xor
test
pop
add
sub
inc
outsl
lret
pop
in
test
jae
shrb
mov
xchg
adc
push
pusha
mov
das
rcll
scas
jg
neg
or
mov
fisttpl
sbb
xchg
sti
sub
xchg
in
mov
mov
and
movb
or
push
mov
loope
add
das
int3
ljmp
sub
xor
stc
xchg
push
push
inc
xlat
ret
sbb
ds
inc
sub
adc
mov
ret
repz
push
pop
out
rcrb
mov
xchg
cmp
cmpsb
aad
shll
xlat
add
sbb
loope
cmp
out
std
fists
jno
outsl
fmuls
jl
aas
sbbb
insb
push
sbb
lret
adc
push
aam
mov
fisubrl
inc
pop
mov
cld
pop
pop
arpl
fwait
xchg
jae
stos
xor
mov
cmp
pusha
nop
adc
imulb
fildl
pushl
jle
dec
xor
bound
sbb
mov
pop
dec
cmp
pop
in
subl
push
push
insb
inc
imul
sahf
in
stos
xlat
mov
stc
ficompl
pushf
lods
out
inc
cli
repnz
cwtl
nop
arpl
xlat
movl
cmpsl
add
iret
icebp
les
mov
xchg
inc
cwtl
xlat
or
ljmp
jbe
jl
repz
push
pop
push
mov
mov
dec
push
ret
or
in
pop
xlat
or
je
hlt
std
ja
fldenv
push
out
rcll
cmp
add
std
ret
stos
sti
cmpsl
test
xchg
pop
aaa
roll
pop
aaa
hlt
push
ret
xchg
lea
adc
adc
jne
or
andb
xor
repz
pop
fcmovnb
push
mov
fisubs
push
push
or
je
iret
cmp
xor
mov
cmp
mov
fimuls
sbb
ljmp
imul
pop
mov
mov
add
mov
mov
push
rorl
fwait
and
mov
mov
stc
cmp
push
ds
shll
ds
inc
mov
pop
cli
cmp
inc
loopne
or
sub
out
fwait
orl
cwtl
int
pop
dec
aam
pop
insb
dec
push
imul
push
dec
inc
or
jg
movsl
jns
cmc
mov
or
call
lock
mov
push
dec
mov
cwtl
sbb
jbe
aad
or
jne
lcall
cmp
dec
sub
mov
xor
and
daa
ret
push
cmp
add
dec
int3
add
test
pop
push
push
xlat
ret
jge
jl
cmp
pop
aas
adc
fmuls
dec
inc
push
fcmovnb
pushf
cmp
mov
in
popa
mov
xor
sub
cmc
sti
call
xchg
aam
ret
mov
scas
cmpsb
jno
popa
push
cld
dec
jae
pop
jle
shlb
xlat
cmpsb
js
cmp
sbb
xchg
les
notl
sub
mov
hlt
mov
bound
push
aad
fnsave
lahf
pop
push
sub
sbb
push
imul
rclb
sar
mov
pop
cmp
fcmovu
gs
scas
jp
jb
daa
sub
mov
xor
add
mov
and
cmpsb
mov
lods
jno
xchg
inc
lahf
sbb
xor
xor
int3
sub
sbb
fnstenv
mov
test
sub
push
cmp
jo
stc
icebp
dec
addb
ljmp
dec
adc
dec
hlt
ja
popa
je
push
or
mov
adc
push
pop
pop
jge
rorb
or
mov
mov
rorl
pop
cli
cmp
push
adc
adcl
push
inc
sbbb
sbb
mov
dec
sub
xor
xchg
in
xchg
dec
pop
push
loopne
ja
test
and
pop
push
retw
add
movsb
mov
add
sahf
pop
and
repnz
dec
mov
xor
xchg
mov
mov
imul
xlat
mov
ljmp
sub
cmp
pop
cmpsb
and
cmp
add
jl
xor
call
mov
stos
ficomps
or
stc
cs
lock
or
xor
stos
shrb
scas
aam
iret
sub
fisttpl
pop
loopne
rcl
in
jbe
lods
mov
shl
xchg
xchg
or
add
mov
aaa
xlat
movsl
xchg
mov
ret
jmp
sub
dec
fcomp
or
sub
imul
xlat
mov
and
jo
push
push
mov
fwait
sbb
pop
ret
mov
fstpt
ss
inc
out
add
fcoml
outsl
flds
sarb
stos
sub
adc
lcall
or
out
push
sub
mov
pushf
cs
jnp
fsts
pop
aaa
jnp
mov
xor
iret
mov
adc
int
shll
stc
or
adc
mov
jle
inc
outsl
and
xor
cmp
push
sahf
add
fnstcw
push
pop
mov
sbb
xor
jl
or
push
fcomi
nop
daa
mov
and
add
cmp
push
xlat
adc
cmpsl
in
clc
mov
xor
sub
xchg
out
xor
std
add
adc
xor
inc
push
add
sub
mov
mov
dec
jmp
pushl
sarl
push
rclb
pop
inc
xor
mov
movsb
and
divb
sbb
pop
fildll
jmp
pop
and
mov
test
int3
inc
stc
add
xlat
xchg
sub
in
iret
jge
mov
sub
cmpsl
cmp
xor
dec
or
push
divl
out
jo
and
jp
fsts
push
mov
and
popf
push
sbb
adc
lret
adc
mov
fimull
cli
jnp
in
jne
adc
std
cmp
xchg
scas
sub
xor
les
test
jbe
stc
dec
pop
ret
test
mov
xchg
lret
push
mov
xor
push
ljmp
pop
dec
pop
lret
es
sub
jge
aad
dec
dec
mov
dec
pop
push
int3
pop
lcall
inc
fsqrt
xor
xlat
sti
shl
in
dec
xor
loop
push
inc
ucomiss
dec
sbb
pop
cmp
xchg
div
xchg
pop
and
lret
data16
xchg
bound
ficoml
dec
ret
jle
fcompl
or
pop
scas
aaa
rcrl
ds
nop
xor
and
inc
mov
inc
in
mov
jnp
dec
mov
push
test
iret
in
xlat
mov
inc
push
and
jge
mov
jnp
mov
pushf
dec
sub
mov
fstpl
add
ds
test
lahf
adc
ja
iret
xlat
or
ficomps
push
fcompl
fnstenv
xchg
fldcw
and
mov
push
dec
jno
push
lahf
push
cli
or
cs
in
mov
lret
jmp
push
xchg
cmc
daa
imul
jnp
lods
ljmp
test
loopne
jmp
das
loop
push
in
outsl
sub
cmpsb
sub
daa
sbb
fldt
test
dec
add
lods
iret
or
idivl
lods
push
jno
cld
push
lahf
pop
push
popf
mov
mov
inc
sub
shrl
inc
xchg
and
xlat
aam
bound
xchg
pop
mov
adc
cli
popa
imul
roll
shrb
fcmovnb
sbb
nop
pop
inc
ret
push
pop
inc
mov
in
mov
push
testb
movsb
imul
mov
jecxz
xor
jl
mov
enter
cmc
stos
lds
push
ret
dec
sarb
loope
push
jecxz
xor
push
imul
xchg
cmpsl
xchg
push
mov
jb
mov
jg
repnz
enter
adc
and
dec
mov
xchg
xlat
mov
sbb
xlat
sbb
jbe
insb
and
add
icebp
int
dec
xor
loop
adc
lret
mov
les
jne
sub
sub
nop
xchg
stos
gs
xor
ds
push
pop
es
xchg
xchg
mov
cld
clc
adcb
xor
addr16
arpl
hlt
xor
fwait
in
pop
cmp
xlat
inc
mov
iret
jp
mov
sub
inc
and
push
fwait
sbb
xchg
sub
pusha
jnp
sub
ds
int3
dec
sbb
add
jmp
lret
test
lret
rcr
inc
pop
out
pop
gs
add
sbb
push
aas
dec
or
movsl
dec
xchg
mov
jp
pop
lock
xchg
cmp
or
push
xchg
imul
stc
xchg
cli
mov
imul
dec
and
lods
bound
fstps
adc
repnz
scas
jp
rcll
pop
xor
popa
xor
jp
cmp
or
dec
cmpsb
sub
add
sbb
push
dec
xchg
insb
adc
push
pusha
and
xor
mov
cmp
mov
loopne
jp
add
lcall
rorb
and
dec
or
or
sbb
add
add
dec
xor
or
xor
loopne
xlat
cmp
sub
addb
lods
test
cmp
cmpsb
sar
and
shlb
daa
jle
xchg
adc
jno
in
test
dec
sub
lcall
nop
ljmp
dec
pop
pop
out
jns
xlat
rcrl
mov
imul
jo
mov
and
cwtl
xorb
loop
arpl
xlat
xchg
cmp
jno
loope
add
test
dec
xchg
sbb
cmp
fneni(8087
aam
popf
mov
xlat
pop
jb
mov
repnz
stos
cmp
mov
js
xor
fisubrl
xor
xor
pop
loopne
cmp
push
jno
xor
icebp
cli
mov
fldenv
mov
icebp
add
dec
adc
nop
push
test
sub
lcall
int3
fcmovnb
mov
dec
sub
js
in
xorb
cmpl
aaa
adc
repnz
jecxz
push
push
dec
rcll
rcl
fisubl
xchg
sub
in
lret
cs
jns
jge
iret
ja
cmp
outsl
rcll
stos
dec
inc
pop
repz
nop
xchg
jge
jae
lods
shll
mov
mov
jb
loopne
test
rorl
out
loop
pop
xchg
or
int
cmp
cmp
mov
xorb
sti
in
je
pushf
and
jmp
aad
ret
jne
mov
or
xor
pop
inc
inc
aad
xlat
aas
pop
and
sub
outsb
dec
mov
and
mov
mov
in
arpl
mov
cmc
inc
lret
cld
or
push
addb
loop
inc
pop
mov
imul
test
fs
inc
or
jne
inc
dec
sub
int3
cmp
pushf
lcall
gs
push
int
mov
stc
jae
inc
outsl
mov
loopne
sub
mov
xor
jbe
dec
adc
sarb
loop
sbb
jb
imul
incl
popa
insl
fsubs
cwtl
shrl
stos
bound
xchg
xchg
ja
adc
pop
adc
fsts
and
call
mov
arpl
adc
mov
sbb
ret
pop
xchg
loop
shl
adc
mov
aam
mov
mov
mov
mov
movsb
cld
inc
push
cmp
pop
fnstenv
xchg
push
sti
xlat
cmp
xor
cmp
mov
mov
xorb
cmp
scas
jo
add
xor
pop
pop
push
loop
xorl
stos
mov
and
dec
and
jg
jae
enter
mov
loopne
and
add
xchg
xchg
movsl
mov
dec
xchg
jmp
std
and
bound
mov
jg
pop
andb
jne
test
enter
out
mov
inc
sub
sub
pop
sarb
movsb
push
jo
xlat
call
fistl
mov
xchg
pop
xor
out
push
pop
mov
cmp
sbb
nop
mov
cmp
test
or
fsubrs
pop
hlt
or
fwait
mov
ret
subb
push
out
out
lret
lret
and
pusha
stc
dec
or
cltd
mov
sbb
in
fidivl
in
sbb
stos
test
cmp
adc
imulb
xor
icebp
mov
mov
insb
int3
jnp
stc
or
sbb
loop
in
fisttpl
inc
cmp
cs
jl
fstps
push
cmc
sbb
sub
push
test
mov
iret
gs
mov
adc
aad
xchg
ljmp
fstps
loop
inc
sbb
or
orb
add
xchg
sbb
jp
push
pop
mov
push
repz
xchg
or
mov
out
xchg
adc
icebp
std
repz
add
imul
inc
xor
pop
imul
and
jae
shl
xor
pop
stos
int
pop
push
insl
pop
insb
std
sub
inc
sub
testl
xor
xor
test
xchg
jns
push
sbb
lahf
ret
mov
fimuls
pop
insb
cmp
in
inc
lahf
xchg
icebp
cli
xchg
lock
push
fwait
cmpsb
iret
pop
outsb
inc
cmpb
push
adc
movsb
addr16
pop
dec
ficoms
js
aam
xor
out
mov
xlat
mov
push
fstps
adc
mov
jp
xor
push
movsb
inc
fs
test
out
adc
divl
sub
sub
cs
jmp
std
pop
imul
jbe
rol
cs
out
int
xchg
aad
pop
aaa
leave
int
je
test
jl
xchg
fsts
loopne
or
stos
mov
and
jae
lret
sahf
mov
mov
mov
aas
pop
mov
sbb
jbe
call
scas
cmp
out
stc
add
adc
xchg
popa
sub
sbb
adc
mov
push
pop
aaa
jns
and
inc
xchg
push
pop
push
ss
iret
js
adc
repnz
push
inc
outsl
mov
push
mov
add
cmpsb
pop
pop
xchg
lock
inc
leave
mov
orb
adc
xor
pop
or
mov
push
cli
jg
imul
jl
add
mov
pop
cmp
jb
mov
xchg
jo
loope
push
adc
lret
mov
fbld
add
or
lea
dec
or
add
mov
cli
sbb
xlat
mov
xor
cmc
and
ja
or
pop
mov
jns
xlat
jns
pop
mov
pop
cmpsb
jns
push
out
or
int3
int
lods
leave
add
jecxz
mulb
rclb
jne
iret
sarl
xchg
icebp
daa
adc
dec
pop
mov
cmp
fisttpl
faddl
add
sbb
jp
sub
cmp
mov
xorb
or
hlt
shll
stos
mov
mov
xor
jno
jmp
sub
mov
xchg
cmp
dec
mov
cwtl
nop
outsl
push
sbbb
hlt
inc
push
test
jae
push
jge
jno
cmp
loop
xor
mov
std
and
mov
insb
lds
imul
push
sbb
xor
std
xchg
das
fadd
outsl
pop
mov
add
cmc
mov
inc
ret
sbb
or
fldcw
cwtl
pusha
inc
lahf
inc
inc
push
mov
mov
pop
jns
aad
xor
call
dec
sub
fsubrl
ret
xchg
jmp
fistl
xchg
je
mov
mov
es
adc
push
sub
insb
and
jb
xor
add
nop
cmp
lock
jmp
xor
popf
xor
xor
cmpsl
push
mov
mov
aam
pop
cmp
or
jl
add
pushf
mov
bound
and
inc
addb
mov
xchg
and
scas
shll
sbb
data16
aam
lahf
mov
and
pmulhw
lret
aas
cmp
lods
test
sub
idiv
mov
push
or
mov
push
mov
insb
sbb
push
stc
and
mov
mov
jnp
mov
ja
sti
add
in
cmp
inc
and
jnp
dec
lods
out
xlat
or
or
inc
les
dec
ljmp
int3
iret
xor
mov
jbe
fildl
and
std
dec
fs
flds
inc
mov
outsl
fdivrs
sbb
mov
outsl
sub
jmp
out
arpl
fsubrs
fcmovnu
sub
clc
push
cmp
insb
stos
aam
cld
inc
cli
sbb
flds
sub
xchg
mov
pop
or
jmp
cmp
lods
pushf
mov
xor
outsb
pushf
cmp
pop
xchg
fnsave
pop
cmp
pop
mov
sti
cmp
pushf
or
push
ss
pop
leave
sarl
push
add
cltd
int3
sbb
jno
jne
xchg
arpl
push
mov
pop
dec
cmp
fldz
jmp
clc
push
sub
cmp
leave
test
sti
inc
or
mov
mov
cld
int
jecxz
arpl
push
xchg
jmp
push
int
add
jmp
test
lahf
jnp
dec
stos
sub
insb
rolb
xlat
cmpsl
push
lock
push
lret
pop
pushf
daa
popa
inc
push
enter
cmpsl
xor
or
lahf
sub
insb
cmc
adc
int3
stc
push
nop
lret
mov
xchg
mov
pop
je
xchg
pop
or
inc
aam
fisubrl
push
xchg
jns
fstps
dec
mov
xor
adc
jg
fisubrs
dec
in
add
shll
fs
mov
imul
cmp
rcr
fstl
fimull
push
pop
xchg
mov
outsl
cmpsl
sub
stos
and
pushf
out
sahf
jo
aad
xor
jbe
xchg
push
sbb
fistpl
stc
std
sbb
jmp
xchg
int3
cwtl
push
mov
inc
testb
jle
lea
jp
xor
mov
xor
xlat
pop
aad
xchg
jae
push
or
loope
sbb
icebp
mov
xchg
xchg
fbstp
fucomi
pop
dec
xlat
mov
inc
dec
test
mov
rcrb
jns
lcall
cmp
les
sub
testl
fisttpl
mov
cmpb
imul
int
xchg
and
dec
push
and
sbb
imul
test
sbb
add
push
pop
add
sar
lods
mov
xchg
add
inc
cmp
jmp
cmp
push
inc
or
or
add
mov
in
xchg
cmp
outsl
hlt
ret
mov
out
mov
cltd
dec
out
outsb
xor
adc
push
lret
cmp
into
inc
xor
es
xchg
jge
sbb
stos
xchg
sub
sbb
push
add
fistl
inc
pop
cmc
stos
jp
aaa
and
in
ficomps
ret
mov
xchg
xor
loope
add
fnstsw
inc
dec
cwtl
jns
sub
aad
or
add
cli
adc
adc
add
cwtl
jo
xor
sti
mov
and
push
pop
jecxz
imul
and
test
push
out
sbb
clc
data16
pop
jnp
fldenv
cmp
and
inc
jae
loop
std
jae
test
fsts
mov
stos
je
ficoml
std
in
repnz
popf
test
fisubrs
movsl
fs
add
sub
cli
ret
sti
xlat
cltd
neg
outsl
fidivl
mov
pop
xor
jae
mov
insb
mov
push
ljmp
xchg
sbb
ss
fcmovnu
sahf
cs
shrb
jge
rorb
xchg
push
in
cs
test
jno
jae
sti
or
hlt
push
loope
mov
xchg
jle
stos
pop
stos
mov
aas
add
fsubrl
scas
cmp
adc
add
popfw
std
cmp
push
imul
mov
xchg
cmpb
cmp
xlat
push
sbb
pop
sub
jl
mov
imul
sub
cwtl
imul
add
lea
scas
push
jg
lea
adc
jb
outsl
pop
or
cmp
xchg
and
jno
dec
lcall
jle
sub
lcall
aaa
fstpt
jb
xor
cmc
dec
ret
call
and
js
arpl
cmp
mov
test
and
cmpsl
ss
cli
push
dec
fisubs
cmp
push
es
cmp
icebp
out
mov
stc
cmp
inc
pop
pop
mov
push
mov
jae
ficoml
inc
sarb
popf
mov
mov
out
xchg
push
aam
and
mov
cmp
cli
mov
xor
xor
js
mov
xor
sub
lods
scas
bound
sub
stc
and
pop
push
mov
xchg
ljmp
cmp
out
cmp
adc
stos
sub
sets
je
jbe
pop
test
insb
cmp
jo
add
push
sub
add
xor
cmp
dec
pop
fstpt
stc
add
xor
xorl
int3
dec
lods
dec
fcmovbe
es
imul
dec
scas
push
xchg
out
sarb
mov
shll
and
sbb
mov
dec
dec
cmp
mov
movsl
push
call
stc
xor
mov
mov
nop
push
adc
mov
mov
or
jp
pushf
mov
add
js
jmp
sahf
adc
jbe
sbb
xor
jg
push
ret
iret
movsb
aaa
out
into
fiadds
lret
loop
lret
fs
add
push
cmpsl
stos
xor
inc
enter
clc
pop
sbb
into
adc
mov
dec
sti
cld
and
push
pop
xlat
jle
out
adc
lock
jp
mov
aad
sub
xchg
lods
pop
sub
pushf
dec
pop
adc
push
sub
pop
movzwl
int
dec
or
flds
imul
mov
xor
xlat
jmp
cmp
cmp
std
sub
lcall
test
pop
cmp
test
mov
or
push
movsb
pop
sbb
out
stos
mov
mov
into
cltd
inc
mov
xor
stc
xor
sti
test
jo
lret
or
xchg
pop
or
loope
jns
push
pop
mov
and
rolb
cmp
aaa
xlat
repnz
nop
jmp
xor
pushf
xor
pop
dec
pop
popf
inc
adcb
scas
call
into
ret
push
mov
stc
lret
dec
ret
mov
lods
inc
fmul
or
mov
push
or
sbb
subb
jp
xor
xchg
test
jp
fsubs
int
fistpl
js
dec
int3
xchg
std
adcl
sti
cmp
push
push
arpl
lret
cmp
or
bnd
xlat
in
inc
scas
push
ret
cmp
push
xor
xorb
push
ficompl
inc
cmc
out
xor
loopne
sbb
in
test
es
and
sub
lcall
xor
push
fdivs
jbe
inc
testb
mov
push
xlat
jp
popa
mov
or
nop
call
pop
dec
fisubrs
clc
fstps
adc
scas
stc
jns
in
pop
notl
jae
sbb
sbb
sbb
sbb
lahf
cmp
add
pop
push
fcmovne
inc
mov
das
xlat
ds
insb
test
cli
arpl
pushf
inc
mov
xlat
daa
xor
pusha
fisttpl
lock
push
stos
cli
jp
push
enter
dec
hlt
enter
movsl
fs
hlt
sbb
leave
mov
scas
jbe
mov
jno
mov
fstps
popf
inc
and
xchg
mov
mov
daa
stc
xchg
xlat
mov
add
cmp
out
adc
xchg
xlat
incb
repz
imul
gs
aaa
push
sub
add
inc
dec
xchg
push
pop
mov
outsl
loop
and
sti
sti
aam
lret
dec
ds
stos
test
pusha
cmp
mov
fadds
imul
rclb
scas
movsb
inc
xor
xlat
add
xor
adc
sbb
mov
add
pop
movsl
xor
cmc
or
dec
push
aam
add
push
push
iret
outsl
fxam
and
lret
sbb
and
xchg
in
and
lock
cmp
ds
in
xchg
xchg
dec
cmp
dec
sbb
xlat
cltd
inc
stos
popf
popf
jbe
mov
outsb
call
sbb
popf
mov
sbbl
mov
inc
sarw
subb
dec
pop
jl
aas
aad
jp
xor
bound
lcall
xor
and
gs
add
iret
push
insb
stc
cmp
outsb
pop
xor
cmp
mov
repz
mov
jae
sub
jl
jg
jbe
ret
xor
pop
dec
mov
out
rcrb
xor
inc
test
xor
sub
mov
cmp
jl
xor
mov
jns
push
mov
ja
insb
sbb
rcrl
pop
xlat
sub
test
sbb
fimull
xchg
xchg
mull
or
cmp
aam
jp
or
cld
mov
imul
mov
jge
imul
std
dec
ret
jp
pop
pop
add
ficomps
sub
in
shll
cmc
jl
mov
inc
and
cmp
fnop
daa
inc
insl
pop
out
dec
std
or
sub
mov
stos
pop
cmp
pop
lock
fs
mov
push
insb
hlt
mov
pop
jmp
lcall
sub
lods
cli
cmp
and
xchg
nop
sbb
aas
mov
cltd
xchg
lret
cmp
or
ret
mov
clc
add
xor
pop
push
stc
popf
fwait
shlb
jg
mov
and
jae
inc
push
adc
pop
ss
sbb
lea
leave
xorb
inc
or
jmp
fdivrl
fldl2t
jne
inc
out
add
fcomi
xor
inc
imul
jp
imul
pop
jns
flds
sti
adc
push
faddp
lret
or
fstps
ds
xlat
imul
int3
xchg
push
pop
sub
sbb
scas
cmc
fisubs
sbb
dec
flds
movsl
mov
out
inc
xchg
mov
cltd
in
sub
dec
mov
cmp
mov
xchg
mov
lcall
loope
push
xlat
xchg
sbb
pop
imul
sbb
mov
xchg
jae
xor
cmp
jmp
lret
loop
sub
movb
jnp
das
xlat
std
out
mov
cli
and
scas
add
sbb
sbb
dec
cmp
cmp
mov
add
xor
repz
cli
ficomps
loope
outsl
mov
push
push
mov
cmpsb
and
cmp
push
arpl
xchg
aaa
lahf
cmc
pop
xchg
cli
add
sbb
adc
xlat
mov
sbb
cmp
arpl
and
jbe
scas
lods
push
repz
cmpsl
sub
subl
adc
pop
popa
cmpl
mov
push
and
jecxz
dec
push
cltd
in
lret
insl
lods
mov
xchg
call
testl
gs
or
sub
dec
inc
loop
stos
daa
xchg
xor
xchg
in
mov
mov
imul
push
imul
shlb
adc
fldenv
and
dec
int
or
aas
ljmp
popa
loop
cmpl
andb
test
mov
mov
xchg
push
xor
std
aad
imull
hlt
repnz
dec
ds
mov
mov
xor
fstpt
ss
cmp
ret
inc
pop
xchg
mov
stc
dec
repnz
mov
adc
repz
fidivrs
fwait
mov
stc
xchg
imul
cmpsl
push
xor
fcmovb
or
pop
push
not
cmp
stos
out
or
test
repz
push
cmp
ficoms
sti
out
sbb
outsl
lds
xor
cld
popa
fwait
lret
notl
jno
jg
loope
sbb
jl
add
push
push
loope
mov
and
pop
dec
cmp
adc
and
push
and
jno
xlat
shlb
xchg
fistl
inc
xchg
xor
sbb
rcrl
mov
lret
dec
jp
pop
stos
cmp
ja
sbb
xor
push
xchg
jb
and
cmp
test
sub
push
xlat
and
stos
jmp
iret
arpl
dec
cmc
jmp
dec
fs
cmc
pushf
adc
ss
jae
roll
pop
mov
cmp
stos
and
imul
hlt
mov
dec
jb
adc
mov
jbe
pop
xor
test
and
ds
out
sbb
xchg
and
cmp
stc
xchg
xchg
mov
or
sbb
xor
jp
push
ret
pop
addl
mov
ffree
xlat
mov
jae
imul
insb
inc
movsb
cmp
xchg
jae
and
test
xchg
imul
scas
jp
mov
xchg
add
sub
xlat
in
movsl
fs
sub
xchg
frstpm(287
push
ret
mov
jno
xor
aas
cwtl
mov
jns
fucom
jge
in
or
sbb
or
adc
sarl
dec
pop
lret
jge
mov
out
dec
fisttpl
fwait
jno
or
mov
lea
cmc
and
fs
xchg
pusha
jno
pop
sbb
cmp
inc
mov
mov
ljmp
cmp
mov
divl
push
jb
sbb
and
rclb
add
xchg
imul
stos
pop
jbe
adc
fsubs
push
add
call
jae
mov
adcb
loopne
ss
and
shl
xor
test
push
push
movsb
sbb
push
xchg
jl
mov
mov
lea
mov
aad
pop
or
jp
pushf
pop
jmp
push
sbb
jns
dec
cmp
jae
lea
xor
jl
add
and
jae
mov
push
add
push
cmp
mov
add
push
mov
adc
fsub
push
adc
aaa
push
xchg
sbb
jae
mov
jno
jge
out
test
jne
lods
mov
sub
add
xlat
hlt
fdivrp
jg
mov
adcb
pop
icebp
jne
mov
xchg
mov
stc
sbb
das
pushf
or
mov
popa
in
xchg
fistpl
jb
or
iret
lock
mov
push
fbstp
addr16
pop
les
mov
cmp
andl
hlt
jne
pop
xchg
fisubrl
imul
movsb
sub
fidivrs
inc
dec
out
daa
sti
fstpt
sbb
imul
pop
or
popf
inc
add
iret
cmp
mov
ja
add
xchg
mov
test
pusha
sub
cmpsb
jl
xorb
cli
pushf
pop
xor
inc
xchg
sbb
jno
inc
movsb
or
fisubrs
loope
dec
insl
push
sbb
mov
mov
fistpl
or
dec
and
cwtl
jbe
das
xor
cmp
fs
sbb
xchg
push
fsts
mov
jg
xor
ret
sahf
add
sub
fidivrl
addr16
sbb
push
lret
jecxz
ja
jns
adc
cmp
sbb
stos
and
or
sbb
ss
mov
ficompl
dec
je
add
jp
dec
aam
pop
mov
notb
cmpsl
imul
pop
jo
xor
sub
sbb
push
cmpsb
loope
cmp
in
push
shlb
cli
fstpt
add
pop
stc
flds
or
pop
xchg
pusha
imul
aaa
pop
add
loopne
scas
out
cwtl
shrb
xor
xlat
add
enter
ss
gs
xlat
cmp
lods
pop
icebp
xchg
and
lahf
clc
mov
pop
es
push
mov
movsl
jmp
add
dec
inc
jno
cmp
or
outsb
mov
aas
cwtl
pop
jmp
push
push
icebp
sub
mov
stos
xor
out
and
xchg
adcl
paddd
je
std
mov
rcrl
inc
or
cmp
sbb
imul
jae
pushf
mov
fdivr
sbb
or
imul
push
jle
int3
ja
pushf
cmc
add
repnz
fimull
and
push
fistpl
lods
push
insb
out
push
cs
in
push
mov
dec
shl
push
test
cld
and
icebp
mulb
xor
in
stc
call
dec
pop
negl
pop
inc
jecxz
cmp
xchg
xchg
cmp
sub
es
xor
fbstp
push
dec
in
and
dec
xchg
pop
lods
sbb
and
insb
shrl
incb
out
jno
add
mov
fs
jns
xor
pop
je
scas
mov
pushf
lock
cmpb
dec
jno
test
mov
pushf
cmp
addr16
aam
mov
xor
pop
adc
out
cli
out
push
fcmovnu
cmp
test
jno
fcmovbe
jno
mov
pop
insl
jae
cli
nop
shrl
lahf
push
push
mov
cmp
jnp
jp
xchg
mov
jns
sbb
jns
xor
mov
popa
jno
das
cmpl
xchg
xor
fmuls
mov
push
cmpsb
pop
mov
dec
not
mov
imul
add
out
outsl
jns
stc
push
mov
mov
movsl
std
xchg
clc
shl
mov
mov
rcrb
sti
xor
sbb
ja
jb
pop
ret
fadds
add
xor
xor
nop
stos
fwait
cmp
xor
cwtl
sarl
inc
into
dec
stc
cmp
push
cmp
and
imul
arpl
enter
sti
xchg
repnz
andl
adc
xorb
fists
fldenv
daa
dec
stos
sub
jo
pushf
or
cld
and
lret
fistpl
dec
addr16
push
lret
jno
loope
jmp
je
inc
push
push
aad
push
pop
or
fnstcw
hlt
xorb
adc
mov
sbb
or
outsl
fcmovnbe
insb
xchg
sbb
addl
mov
imul
rorl
push
sub
stc
pop
fscale
loop
mov
xchg
test
cmp
mov
jae
shl
inc
jne
test
xor
sub
mov
scas
cmp
or
xchg
jle
xchg
loopne
lret
in
or
ficompl
dec
dec
addr16
push
xlat
add
xor
imul
add
out
fwait
or
fs
mov
fdivrp
sbb
and
cld
les
push
adcb
and
add
shll
adc
imul
mov
testb
jo
pop
dec
adcl
inc
jae
jmp
cli
out
dec
into
xchg
mov
ljmp
jecxz
add
add
sbb
jl
out
mov
and
jp
adc
cmpsl
jne
cmpsl
add
daa
pop
sub
and
cli
dec
ftst
insb
or
inc
sub
outsb
sub
mov
dec
das
into
sub
insb
push
mov
mov
gs
mov
lahf
push
adc
add
imul
jns
test
std
pop
popa
xchg
inc
ja
pushf
outsb
cmp
subl
inc
jnp
ss
dec
cmpb
push
and
sbb
and
and
push
and
pop
sbb
lods
pop
sub
sub
gs
dec
or
xchg
jnp
cmp
hlt
push
and
xlat
ret
or
push
cmp
scas
test
cltd
pushf
or
psubsb
cs
or
xchg
mov
mov
pop
xor
imul
pop
aam
mulb
data16
subl
and
jle
inc
and
or
mov
sbb
push
jo
xchg
arpl
out
loope
xlat
jns
ds
lcall
add
divl
push
loop
arpl
adc
mov
pop
outsb
xlat
sbb
and
or
xor
orb
xchg
iret
and
xor
pop
sub
hlt
cmc
jae
dec
sub
lahf
push
xchg
fucompp
std
and
push
or
mov
mov
enter
bound
adc
fcmovne
pminsw
shl
imul
pushl
movsl
and
repnz
xor
repnz
pop
sub
mov
pop
scas
xor
and
or
sbb
push
inc
sub
adc
mov
mov
fadd
sbb
mov
xor
add
jbe
movsb
inc
sbb
je
mov
call
daa
fstps
pop
and
mov
dec
cwtl
in
sbb
xchg
dec
and
cs
mov
fcmovu
ror
sbb
mov
popa
mov
and
xchg
add
lds
pop
mov
sti
sub
xlat
add
pushf
mov
fimull
fs
xor
dec
pop
fidivrs
pop
jmp
repnz
inc
lret
ja
mov
add
sbbb
xchg
mov
mov
jg
xchg
cld
sub
xchg
pop
adc
mov
push
sbb
call
or
popf
and
cmp
mov
movsl
pop
mov
dec
add
arpl
pop
pop
mov
ret
xor
add
dec
into
test
mov
mov
mov
or
sub
pop
dec
inc
jae
fidivrs
xlat
add
loopne
std
shlb
push
add
bound
push
xor
stos
cmc
dec
aaa
sbb
mov
push
mov
cmp
fcmovnbe
out
lock
fsts
adc
idiv
cmp
push
dec
out
cwtl
dec
fidivrs
scas
sbbl
test
mov
mov
pop
add
jecxz
add
call
popl
and
lcall
cmc
pusha
add
mov
ret
ds
dec
lahf
xlat
or
inc
fbstp
sub
xor
sub
pop
jbe
add
scas
mov
mov
movsb
inc
fwait
cmp
sbbl
xchg
jno
push
in
insb
in
cmp
jge
jp
dec
mov
pop
xor
out
dec
or
shlb
dec
outsl
jge
or
adc
dec
ljmp
cwtl
push
jle
in
jecxz
mov
nop
repnz
ret
cmp
stc
icebp
lds
mov
mov
push
stc
sub
push
xor
cltd
add
inc
xor
xor
sub
xor
out
cld
pop
and
pop
lods
mov
fstpl
cmp
xchg
icebp
push
imul
mov
imul
cmp
nop
aam
dec
or
mov
cmp
inc
xor
dec
mov
jbe
fstpt
ds
mov
mov
sub
aaa
mov
jle
loopne
jns
mov
mov
mov
mov
clc
push
sub
or
lcall
mov
enter
mov
jbe
pushf
testb
push
mov
cltd
dec
add
scas
fcompl
cmpsl
push
jge
das
or
sbb
add
adc
xchg
aaa
mov
mov
ja
std
add
xlat
xchg
cmp
pop
xchg
mov
mov
or
push
aas
add
sub
out
addr16
sub
jbe
sbbl
xchg
dec
data16
push
mov
inc
fisubs
fcmovne
mov
daa
test
cmpsb
dec
rcll
ficomps
jmp
xchg
cmp
jge
mov
stc
xor
cmp
or
mov
lahf
xor
adc
xchg
pop
xor
rcrl
imul
add
push
cmp
jg
insb
jge
adc
jno
fistpl
and
push
inc
or
stos
mov
cmp
mov
mov
jle
lcall
daa
add
push
scas
or
cmp
test
out
jecxz
mov
dec
or
pop
mov
cmp
fdiv
pop
sub
cmp
mov
jp
xor
push
lret
xor
out
inc
pop
jns
push
icebp
push
dec
and
cltd
insb
jbe
pop
out
mov
xor
jmp
sub
icebp
sbb
add
sub
mov
jne
sub
call
cwtl
sbb
lea
fsubrl
fisubrs
imul
mov
fwait
and
shr
jno
push
inc
or
bound
fidivl
hlt
stos
jbe
ret
in
sarb
pop
nop
push
and
ljmp
std
jecxz
fimuls
sub
mov
loopne
test
lret
jg
xor
mov
pop
aam
mov
and
jg
cs
pcmpeqd
fxch
cs
push
dec
pop
mov
stc
jp
inc
mov
mov
push
test
in
add
dec
pop
mov
lds
cmp
mov
jl
lods
cwtl
sbb
enter
cmp
xchg
rorl
clc
pop
mov
xor
es
jo
push
adc
cs
xchg
in
lcall
pusha
sbb
or
push
stc
movsb
sbb
mov
fnstcw
mov
sbb
dec
insl
shll
pop
mov
xor
test
cwtl
shlb
lea
adc
sub
xchg
and
lret
push
lods
sti
xlat
test
fcomi
aad
jb
mov
movsl
cli
or
cmpsl
pusha
push
dec
pop
jp
xor
mov
lods
xorl
jno
addr16
and
mov
inc
enter
fcomps
inc
test
shl
jno,pn
push
ror
jns
sub
sti
add
dec
pusha
enter
inc
mov
push
dec
insb
jbe
lods
divl
scas
lahf
jno
mov
push
adc
jae
mov
adc
mov
test
lret
and
xor
xlat
scas
shl
cmp
adc
roll
jne
jno
dec
mov
fwait
add
adc
sbb
shl
sbb
jl
cmpsl
call
leave
sar
inc
jb
ja
sbb
mov
push
dec
sbb
lret
mov
jnp
fld1
lods
adc
dec
push
enter
jmp
push
push
jns
add
idivl
and
pop
inc
fcmovnu
dec
outsl
add
int3
mov
and
jb
insl
addr16
mov
fldenv
and
push
lods
out
inc
iret
rolb
xor
iret
loopne
push
cli
mov
sub
stc
xlat
cs
xchg
bnd
sbb
xor
jbe
sti
dec
pop
jbe
inc
pop
test
stos
int3
jae
pop
fiaddl
dec
ja
dec
adc
jae
andl
pushf
or
jecxz
ret
bswap
cli
cmpsb
adc
iret
and
cmp
pop
andb
push
call
int
add
icebp
stos
inc
in
cli
mov
cmc
inc
jl
adc
jno
xchg
jmp
jno
push
faddl
sub
ja
mov
pop
adc
rcrb
push
popa
ror
aad
adc
pop
cmp
enter
cs
xchg
xor
cmc
jp
lahf
xchg
adc
aas
fistpl
add
push
add
xor
push
mov
mov
out
jmp
cld
xor
jmp
inc
xor
xlat
sub
rcl
sub
fmull
sbb
dec
stc
sbbb
push
or
jne
nop
cmpsb
fxch
cld
gs
mov
xchg
push
shlb
sub
daa
dec
xorb
js
push
xor
push
aam
pop
int
inc
dec
pop
cmp
bound
mov
andl
lret
inc
push
dec
jbe
cli
jge
dec
nop
jg
repnz
insl
sub
dec
aam
jne
inc
mov
ljmp
push
outsl
jle
bound
sti
pop
adc
pop
das
mov
ret
xor
fisubs
xchg
fisubrl
fisttpl
es
stc
pushf
mov
imul
jle
movsl
test
adc
dec
xlat
cmp
dec
cli
fldt
or
lret
mov
out
test
dec
stc
sub
mov
sub
sti
push
jl
sbb
fcompl
xor
mov
shl
sub
add
movsl
out
dec
outsb
ret
pop
packssdw
sar
fsts
mov
movsl
ficoms
pop
push
xor
and
repz
jl
in
aad
fs
mov
mov
dec
xchg
stc
cltd
xlat
xchg
shrb
addr16
xchg
stos
mov
rcr
ss
sub
fistpl
movsb
xorb
or
cmp
sub
lahf
xor
out
pusha
jae
adc
pop
dec
or
int3
sub
test
jecxz
out
iret
movsl
dec
insb
and
pop
cmp
psubw
out
lods
jo
cmc
mov
cmp
adc
jge
frstor
int
and
mov
xlat
shlb
push
fcmovne
loop
pop
xor
rcrb
dec
cli
sar
push
push
ret
sub
rorl
rorb
cmp
ljmp
lret
and
cli
pushl
enter
push
int3
lret
das
mov
iret
adc
or
or
pop
and
fmull
aaa
shll
data16
mov
push
insl
and
add
pop
imul
jne
jecxz
jg
sub
dec
jge
mov
insb
aaa
sti
cmp
loopne
mov
es
fisttpll
jp
add
sub
pop
in
sbb
push
xchg
iret
add
pop
lea
jne
adc
and
imul
scas
orl
xor
lret
fsubs
and
push
xor
dec
inc
lock
std
cmp
lds
or
test
insb
mov
cs
cmpl
lcall
jne
mov
cmc
cmp
cwtl
mov
inc
jno
fbstp
pushf
pop
mov
daa
sbb
jo
cmp
dec
cmp
and
dec
adc
pop
sub
xor
push
fildl
dec
data16
out
sti
add
imul
xchg
push
gs
fstpt
jge
mov
inc
dec
push
adc
add
sub
jp
sub
fs
ficoml
jae
fidivrs
mov
adc
dec
push
movsl
inc
subb
fldlg2
out
push
rcrl
pop
xchg
sbb
outsb
loope,pn
enter
mov
push
lods
scas
adc
xlat
jns
mov
fcmovnu
sub
add
xlat
pop
test
scas
dec
push
inc
lret
push
xor
cmp
fdivrs
cld
xlat
insl
cmc
or
pop
push
aam
adc
dec
dec
xor
fisubrs
and
dec
and
mov
cwtl
pop
jnp
fnstcw
inc
push
test
mov
lea
sbbb
sub
xor
out
pop
jbe
shl
out
and
mov
pop
daa
imul
out
out
iret
mov
push
stc
orb
dec
mov
cli
add
das
cmpsl
sbb
imul
push
jp
add
and
xor
cmp
cmp
push
pop
leave
sbb
jns
insl
or
addb
pop
fwait
cmp
xlat
jmp
xor
jb
call
popf
fwait
fwait
xor
ljmp
call
jp
fstps
out
cs
call
imul
fcmovnb
mov
aad
jns
push
arpl
mov
sbb
fisttpl
and
or
pop
stc
stos
dec
lahf
int3
es
fnstsw
push
sbb
out
mov
movsl
mov
inc
hlt
loopne
cmp
stc
cmpsl
pop
nop
addr16
cmp
cmpsb
inc
ja
pop
int3
xchg
repnz
push
jl
jp
adcb
orl
int
ret
sub
xchg
cmp
mov
nop
fnstenv
aaa
push
cmp
insl
jns
mov
push
lock
sub
mov
mov
aad
in
cmpsl
imul
add
inc
jmp
and
dec
stc
das
fldt
stc
mov
fldenv
or
push
das
bound
pop
sbbl
fisubrs
sbb
mov
xor
lret
mov
popf
push
xchg
stos
pop
adcl
scas
sub
aas
test
pop
sbb
mov
push
icebp
movb
jecxz
cli
les
jns
js
mov
loop
jb
mov
popf
js
xor
mov
or
add
hlt
aas
cmp
xchg
sar
fcomps
xchg
mov
jle
test
nop
imul
out
pusha
pop
mov
aas
and
adc
adc
jecxz
gs
dec
dec
aas
orb
jp
dec
clc
test
repz
and
fildl
pop
pop
int3
add
ret
es
inc
lcall
cmpsl
jmp
adc
mov
add
mov
aaa
stc
fsubrl
sub
data16
repz
out
loop
push
and
dec
subb
les
gs
test
push
shlb
mov
pop
xor
xchg
inc
push
fidivl
cli
and
imul
or
sub
xchg
icebp
add
icebp
fwait
inc
cmp
sub
loop
mov
inc
shrb
lcall
push
push
stc
jbe
out
lock
xorl
add
cltd
jl
cmp
test
and
jno
arpl
xor
jge
insl
jg
xchg
mov
mov
ss
test
scas
sbb
sbb
cmp
xlat
inc
or
push
test
jbe
iret
movsl
pop
add
mov
pop
inc
cli
icebp
sub
xor
add
fldenv
cld
jle
in
test
cmpl
stos
inc
addr16
andw
test
cli
push
push
inc
imul
out
lock
imul
lods
fwait
shrb
mov
das
inc
ror
mov
xchg
cmp
or
ret
std
sti
or
dec
test
mov
outsl
mov
jae
dec
xor
movsl
jl
andb
inc
mov
jns
cmpsb
jmp
cmp
xlat
stos
aas
sbb
push
or
mov
xchg
push
sbb
xor
into
ret
mov
mov
das
xor
mov
jne
aaa
lds
jmp
push
push
xor
xor
roll
int
shll
je
xorb
test
outsb
test
inc
pop
cs
int3
dec
adc
js
jl
repnz
or
push
fdivrl
pop
in
fildl
pop
adc
xor
fcmovnbe
test
stc
jbe
or
mov
scas
jg
mov
xor
inc
inc
subb
scas
cmpsb
lods
push
jno
inc
ljmp
repnz
jne
fldenv
call
dec
icebp
pop
adc
movsl
lods
call
xchg
jae
jmp
mov
sbb
stc
pusha
adc
daa
cli
mov
mov
lret
loope
aam
jp
clc
push
jae
ja
mov
sbb
addr16
gs
arpl
sub
add
js
push
and
mov
cli
inc
and
cwtl
fs
movsl
xchg
test
push
mov
jbe
cld
mov
pop
orl
pop
xor
out
fisubs
mov
xor
mov
cmp
in
push
movb
xchg
jbe
hlt
push
pop
sbb
bnd
lret
bound
push
lcall
and
fstpt
jmp
xchg
push
cmp
decl
mov
push
mov
pushf
outsl
pop
push
push
inc
jge
shl
mov
jle
out
xchg
sbb
add
loop
dec
stos
std
pop
cwtl
repnz
mov
dec
push
dec
sbb
mov
cli
call
pusha
mov
sub
jbe
fwait
mov
sbb
jne
fisttpl
mov
clc
add
daa
mov
cmpl
fistpl
push
mov
das
call
push
mov
sbb
stc
in
jae
push
scas
mov
jns
std
jmp
push
and
gs
call
fildl
fldcw
les
push
adc
mov
cmc
mov
jne
js
ja
mov
lret
sub
movsb
xchg
cmpsb
fnstcw
add
subb
scas
jns
jp
or
xor
jno
jmp
mov
aad
movsb
mov
lods
mov
pop
cmc
push
call
inc
das
nop
adc
ja
pusha
inc
xchg
jl
cld
fwait
cwtl
repz
je
gs
lret
lea
into
xchg
hlt
jmp
lcall
pop
push
jg
xlat
xor
mov
cld
mov
mov
push
fisttpl
mov
lods
enter
stc
int
in
int
push
and
sbb
mov
jae
cwtl
xor
cmp
out
inc
cli
dec
inc
jo
cmp
mov
daa
cmp
ljmp
ficompl
dec
arpl
jno
test
push
xor
mov
and
inc
adcb
mov
ror
outsb
jne
pop
popf
jg
cmpsb
scas
addr16
adc
xchg
inc
dec
xlat
fwait
mov
xorl
mov
insl
lea
jl
xchg
push
mov
pop
mov
cmp
jb
dec
pop
pop
mov
cmpsb
or
fdivrl
mov
jne
adc
and
pop
fldenv
scas
roll
stos
mov
loope
or
and
sub
xlat
mov
in
cmp
mov
in
push
js
ficoml
inc
mov
dec
fadds
divb
xchg
movsl
test
test
sub
movsb
les
xchg
ja
cmp
xor
mov
inc
and
adc
sbb
dec
push
dec
sub
add
je
insl
mov
sub
dec
mov
push
xor
leave
cmp
lret
lcall
addr16
add
movsb
mov
xor
js
or
cmpsl
push
jne
jae
xchg
jne
cmp
arpl
sti
adc
mov
sbb
sbb
jae
or
jno
jb
fnsetpm(287
add
adc
or
cmp
in
fstpt
daa
xor
ss
push
test
into
mov
and
ds
dec
pop
notb
aam
pusha
pop
iret
dec
aam
shr
lock
imul
xchg
inc
dec
popa
hlt
sub
lods
mov
xlat
int
jne
jl
pop
jns
push
and
outsb
sbb
sub
cli
xchg
dec
mov
jle
aas
pusha
fistl
and
mov
mov
inc
pushf
jne
xchg
std
fisttpl
xlat
jge
fs
inc
adc
adc
aaa
adc
imul
dec
mov
fiadds
repnz
xchg
addr16
outsl
int
jne
jno
jbe
movl
sub
push
mov
mov
fsubrs
jg
jp
mov
out
ljmp
xor
stos
xlat
ljmp
jp
cs
mov
mov
pop
push
pop
test
xlat
xchg
cwtl
fs
fsts
fistpl
mov
fsubr
cmp
in
out
ja
shr
cmpsl
push
or
push
or
pop
xor
shrl
xlat
in
outsb
rclb
push
jge
jg
jo
xor
cmpsb
adc
imul
imul
imul
push
push
lcall
test
nop
addr16
leave
mov
mov
xchg
lea
and
mov
in
imul
mov
xor
pop
xchg
pop
loop
lea
mov
movb
pop
lret
jl
test
fistl
cmp
push
xor
adc
sub
rcrb
mov
cmp
mov
and
sbb
push
das
jle
dec
call
cmp
aam
inc
scas
and
push
sub
cmc
movsl
insl
add
insl
xchg
add
int3
adc
nop
fiaddl
sbb
fldt
mov
dec
xor
cmpsl
pop
ljmp
dec
stos
pop
pop
jmp
dec
mov
mov
rcll
iret
rcrl
push
mov
sbb
imul
fistpl
push
out
sub
mov
dec
bnd
and
insl
fdivs
cwtl
mov
pop
sub
js
sbb
test
jb
es
cmp
adc
add
popa
out
xchg
mov
and
nop
jns
pushf
jmp
in
std
seta
inc
popa
xor
je
ljmp
push
aam
adc
cmc
outsb
fstpt
or
fsubrl
xor
repnz
and
leave
popf
jp
push
push
xor
xlat
dec
mov
out
imul
pop
insl
stos
push
xor
jae
dec
mov
jae
mov
dec
push
and
fs
cli
adc
mov
or
add
addb
aam
nop
out
adc
push
sub
imul
mov
adc
stos
ret
jo
pop
loop
mov
imul
lret
mov
inc
and
adc
dec
sbb
mov
xor
mov
jmp
jns
into
xchg
pop
xchg
mov
pop
dec
movsl
in
and
ja
xchg
mov
xor
lock
imul
jns
push
and
lret
imul
mov
jle
cmp
sbb
add
and
mov
inc
xor
arpl
test
jb
sub
fdivrl
push
pop
add
shll
dec
loop
xchg
into
mov
pop
ja
inc
xor
jp
fsts
add
xchg
jp
fisttpl
iret
enter
cmp
sbb
lods
leave
and
cs
sti
cvtps2pi
pop
sub
jns
cld
sarl
imul
lret
jae
sub
mov
pop
mov
add
aaa
and
xor
xchg
dec
push
imul
fisubrl
pushf
cld
dec
mov
jp
imul
or
pop
or
add
stos
xor
sbb
in
cmp
jo
jae
stc
xlat
dec
outsl
ja
enter
or
jecxz
jmp
test
xchg
fsincos
xchg
in
mov
aaa
aaa
jg
cmp
ror
fnsave
daa
bound
pop
dec
mov
add
mov
jmp
and
pop
subl
add
and
mov
outsl
out
hlt
pushf
push
sub
fcomp
dec
fidivs
mov
out
xlat
inc
loope
pushf
call
popa
movsl
in
call
call
lret
aaa
int
mov
jge
or
and
pop
xchg
xor
iret
inc
dec
jbe
aaa
lods
andb
mov
insl
aam
fistpl
mov
mov
xor
pop
sbbb
push
mov
mov
cmpsl
and
stos
imul
jbe
imull
xlat
adc
jns
icebp
jmp
inc
xor
or
jbe
xlat
adc
imul
dec
fiaddl
aam
loopne
shrl
stos
rorl
add
jb
xchg
sbb
addr16
or
movsb
les
movsl
push
sbb
dec
jecxz
repnz
clc
inc
mov
and
pop
rorb
ja
xchg
xchg
icebp
test
sbb
subb
mov
or
dec
mov
arpl
mov
ss
fildl
pop
xor
adc
jle
popf
pop
adc
repz
mov
imul
loop
mov
fs
mov
orb
orl
sub
outsb
out
xor
and
jge
aad
sub
or
and
cmp
mov
and
inc
add
xlat
test
stos
nop
lcall
andb
out
jbe
popf
shl
push
sarl
cmp
xchg
cmpsl
mov
pop
sbb
sub
xor
jno
sub
bound
mov
fadd
sbb
push
rcll
cmpsl
sub
flds
addr16
xlat
adc
inc
cwtl
mov
xor
inc
gs
or
stos
inc
inc
js
and
pop
mov
jp
fnstcw
fsub
mov
jb
mov
dec
std
or
lcall
stos
dec
xlat
lcall
lcall
xor
mulb
push
je
pop
jae
push
xor
int
jecxz
mov
push
push
add
and
and
xor
push
pop
inc
xchg
jbe
stos
es
imul
test
jl
or
mov
ret
int3
cwtl
jl
xor
mov
jmp
sbb
mov
mov
out
pop
fnstcw
ret
sbb
xor
jns
flds
sub
pop
mov
or
mov
test
test
jae
or
ret
jg
cmp
sbb
xor
jmp
das
pop
xchg
movsb
psrad
cmp
mov
or
push
pop
sbb
dec
mov
jle
out
adc
pop
sti
or
lods
inc
loop
les
jl
mov
mov
imul
xlat
daa
jmp
lret
sbb
cmc
pushf
cmp
test
insl
adc
loop
arpl
mov
sbb
pop
xlat
push
adc
sub
or
cmpsl
jo
sub
cmp
in
xorl
das
out
dec
fstps
fidivl
lods
and
sbbb
scas
sub
js
rorl
xlat
dec
inc
cmp
popa
mov
sbb
out
cmp
sbb
cmp
and
inc
xlat
fwait
push
cld
mov
lret
push
inc
add
je
inc
sub
dec
xlat
ret
cltd
jmp
mov
and
xor
sbb
mov
pop
dec
ja
push
adc
fldl
mov
ret
idiv
xorl
xor
push
test
fwait
inc
add
add
insb
mov
or
cwtl
push
add
adc
notb
out
pop
sysret
std
ret
je
sbb
jecxz
ds
jbe
lods
rcrb
std
push
sbb
fsts
ljmp
test
popf
cmp
test
insl
jo
jecxz
lods
or
and
ja
fstpt
cli
push
imul
in
enter
test
jl
fisttpl
lahf
jne
fnstcw
gs
push
fwait
ja
clc
or
sbb
sbb
insb
imul
out
js
mov
xchg
cli
dec
fsts
mov
lods
jae
xchg
arpl
xor
push
cmpsb
insb
ret
pop
aas
pusha
push
xchg
mov
cs
test
mov
and
orl
or
push
loop
mov
fisubrs
popf
ss
inc
fmul
mov
jno
pop
insb
in
cmp
shrl
inc
hlt
jbe
sbb
xor
imul
ljmp
scas
addr16
mov
xchg
push
mov
imul
xchg
aad
enter
imul
frstor
pop
cmp
fmuls
mov
cmp
stc
add
iret
lds
adcl
push
or
std
or
xchg
mov
and
adc
nop
out
xchg
xchg
ficomps
loop
or
xor
nop
mov
mov
jg
shll
or
sub
pop
addr16
cmp
imul
lods
sub
jl
sbb
icebp
fcmovnb
roll
push
sbb
test
mov
nop
mov
xor
mov
repz
or
mov
incl
inc
enter
pop
mov
adc
xor
int3
ret
fldcw
xchg
lcall
pop
std
jmp
pop
and
mov
mov
outsl
sub
mov
imul
add
test
sbb
jbe
sbb
jl
mov
inc
pop
inc
test
popa
cli
adc
in
sub
mov
pop
xor
cmpsl
mov
dec
ds
pop
std
mov
rolb
test
and
sti
lret
xor
fidivrs
movsl
push
out
popa
dec
sub
stos
push
pop
xchg
fwait
jno
and
repnz
sbb
mov
dec
mov
and
mov
add
test
adc
pushf
lret
xlat
sbb
stc
dec
pushf
mov
ret
into
jp
ss
xchg
and
shlb
cmp
cmpsl
out
pop
je
jmp
sub
fldt
jl
cwtl
push
cwtl
mov
lahf
mov
xor
push
xlat
aas
push
das
and
sub
fisubrs
inc
mov
xor
icebp
adc
xorb
arpl
js
push
cmpl
outsb
push
push
out
dec
or
mov
rcrl
mov
xor
jne
sti
rcrl
pop
clc
insl
lea
jl
fwait
nop
mov
dec
cltd
xor
repz
rsqrtps
sub
mov
ja
outsl
lds
subb
inc
push
sti
or
scas
and
inc
dec
mov
mov
and
xor
stc
andb
iret
test
out
jne
cmp
loope
push
stos
pop
jo
gs
call
mov
in
push
and
insb
lcall
mov
fiadds
jae
fld
inc
jne
insl
bound
or
fdivl
out
inc
push
aam
and
or
bound
js
add
and
das
sub
in
enter
pushf
or
lods
mov
loope
xor
inc
divb
mov
mov
mov
inc
mov
cmp
xor
cmc
insl
push
cld
cs
pushf
push
fiaddl
and
jmp
xchg
aad
xchg
pminub
or
mov
add
cmp
repnz
adc
cs
ja
test
outsl
outsb
stos
imul
stos
int
cmpsl
gs
out
mov
cmpsb
ds
cmp
loopne
test
pop
push
test
cwtl
add
mov
ja
fcomi
mov
mov
test
mov
test
int3
inc
ss
and
dec
xchg
enter
iret
mov
xor
data16
xlat
mov
pop
add
push
pop
or
xlat
out
cld
jmp
std
cmp
jg
cmpsb
pop
ret
popf
cltd
outsl
repnz
inc
das
xlat
mov
imul
sbb
stc
hlt
fnstenv
cli
and
movsb
push
mov
jp
repnz
subl
lea
adc
cs
in
ret
mov
popa
pop
mov
fsubrl
fstps
aaa
imul
sbb
xchg
and
test
sub
xchg
and
mov
adc
jmp
int3
jl
adc
ljmp
sbb
sub
and
ja
lret
mov
addr16
fstl
mov
cmp
ficompl
mov
dec
inc
sub
sbb
scas
xchg
and
cmp
pop
loop
dec
shrb
adc
lahf
ret
out
push
add
cmp
adc
inc
mov
stos
imul
adc
jl
fnop
rcrl
fldt
and
shl
cmp
clc
arpl
sub
mov
pop
cmp
fnstenv
addl
add
iret
lahf
sbb
loop
std
outsl
scas
stc
jnp
das
or
pop
jmp
push
xor
imul
in
push
mov
sub
movsl
adc
fwait
mov
add
add
xor
mov
rcrl
cs
xor
cmp
out
sbb
mov
dec
cld
sbb
sbb
nop
stos
inc
gs
loopne
mov
xchg
and
mov
mov
mov
insl
fistpl
in
cmp
jns
insb
pushf
in
lret
adc
ss
stc
or
push
xlat
lods
std
and
fldt
aam
and
add
test
ja
xlat
add
xchg
jns
inc
addr16
mov
dec
sub
imul
push
mov
sbb
lahf
xor
add
sub
add
jg
fs
icebp
lret
js
sub
or
outsb
sub
sbb
in
fildll
and
and
fnstenv
cmp
pop
xlat
cmp
imul
fldenv
pop
adc
cmp
mov
out
mov
sbb
xchg
in
jp
push
mov
lea
fidivs
sahf
test
inc
or
or
fldt
pushf
mov
dec
lcall
dec
fldenv
inc
cltd
xlat
push
aad
loopne
adc
sub
jp
mov
orb
shll
scas
out
std
xchg
mov
xchg
cmp
push
cs
cmp
adcb
std
dec
or
adc
test
insl
test
cmpsb
fmul
shll
scas
jns
xchg
shl
mov
xchg
mov
jne
adc
les
add
subb
mov
test
hlt
fldt
shrl
xchg
stc
jno
push
xchg
xchg
or
dec
stc
inc
cwtl
shll
sub
sbb
cli
cld
push
push
cmpl
pop
clc
lds
es
stc
cmp
aas
aas
mov
cmp
mov
dec
sahf
fadds
cmp
xlat
loop
fwait
shlb
pushf
pusha
int3
cmp
mov
jne
in
xchg
cmp
pop
mov
push
gs
mov
cmc
sbb
divb
pop
rep
push
pop
lods
jmp
cmpl
in
mov
pop
fcmovne
and
add
sarb
fstps
mov
push
jl
lcall
push
sbb
stc
and
notb
xlat
or
fistpl
xchg
xor
xchg
adc
lea
adc
pop
push
out
or
leave
ret
mov
lds
dec
inc
scas
mov
mov
lods
xchg
call
pusha
mov
xor
xor
mov
shl
fisttps
loopne
xchg
cmpsb
pop
inc
imul
inc
dec
sbb
jne
or
pop
fiaddl
test
jb
int
xor
popf
orl
out
mov
arpl
jle
sub
dec
sub
test
aam
insb
aam
and
lea
xchg
jb
pop
pop
sbb
mov
cli
sub
inc
push
aam
and
push
pop
out
gs
jp
xlat
add
jl
lahf
aad
or
stc
push
push
sub
int
mov
stc
stos
xlat
fcmovnb
mov
push
xor
addr16
in
add
aad
pop
xor
sub
adc
inc
icebp
mov
test
mov
and
and
mov
mov
outsl
cli
cmc
loope
addr16
jbe
sbbl
jl
mov
cmp
and
cmp
lahf
stc
rorb
add
xlat
sbb
mov
cmp
sbb
loope
push
decb
fwait
mov
pop
dec
or
icebp
je
test
mov
cmp
cmp
into
cmp
insb
push
out
sub
pop
lahf
jne
das
gs
xchg
xor
repz
fcoml
pop
stos
sub
loop
mov
xor
cmp
mov
push
outsb
xor
sub
xor
jb
mov
and
add
das
call
rcrb
cmp
dec
shl
lahf
imul
push
push
and
push
inc
jp
fnstcw
loope
and
icebp
imul
push
push
pushf
cld
loop
filds
jns
sub
cld
push
rclb
and
cmpsl
mov
test
popf
clc
cli
pop
adc
push
jl
pop
mov
das
test
enter
jp
mov
adc
hlt
dec
stc
add
nop
jae
sub
test
xchg
pop
or
cs
add
jb
mov
push
fwait
cwtl
mov
xor
in
mov
movsb
sbb
pop
ret
dec
or
add
mov
push
movsl
sti
aas
push
jecxz
dec
fistpl
inc
add
mov
stc
ljmp
sarl
jmp
cmpsl
jg
jge
jecxz
lret
adc
xchg
ret
out
into
into
push
sub
xor
std
dec
popa
add
xlat
out
jp
jnp
sub
into
or
xchg
ret
mov
mov
cwtl
sti
mov
int
jp
lock
test
cmp
das
shll
xchg
mov
xlat
scas
sub
repnz
mov
das
pop
jg
sub
sbb
scas
add
mov
or
pop
jp
add
gs
negl
nop
add
mov
mov
cmpb
jno,pn
mov
lcall
inc
repz
in
mov
xor
and
lcall
mov
sbb
cmpsl
add
pop
or
sbb
inc
dec
imul
stc
jnp
loop
mov
ljmp
jae
jg
cmpsl
fdivl
xlat
nop
pop
test
dec
cwtl
mov
aam
fisttpl
insb
mov
push
adc
xor
loop
lahf
ja
sbb
dec
pop
pop
lahf
lea
cld
movsl
push
xor
and
add
test
shrb
dec
jl
fisubs
xchg
insl
pop
pop
dec
popa
cld
push
inc
inc
sbb
pop
cli
push
cwtl
dec
dec
dec
pop
or
aas
sbb
xlat
fildl
stos
lret
loop
pop
dec
fisttpl
jns
and
jle
mov
jb
xchg
aam
push
sub
mov
xchg
add
in
fidivrl
cmpsl
movsb
push
shlb
sub
xlat
jecxz
mov
mov
jp
inc
lods
sub
and
cwtl
or
jne
mov
dec
xlat
loopne
jnp
fstps
or
ret
sub
xchg
cmp
add
push
cli
jp
icebp
repnz
ljmp
xor
loope
mov
push
cmp
jmp
ljmp
loope
sahf
adc
push
push
xchg
neg
insl
stos
and
adc
cmp
dec
pop
cmpsl
insb
push
xchg
sub
mov
jp
cmp
or
test
mov
jle
outsb
insb
icebp
lahf
dec
xchg
int
dec
loopne
cmp
xchg
lcall
sahf
mov
xor
pop
add
pop
scas
mov
ds
in
xchg
xchg
xor
jae
sub
cld
aas
sub
mov
add
sarb
mov
addl
pop
out
mov
call
xchg
js
mov
add
xchg
add
es
lahf
ud2
into
stc
dec
imul
xchg
adc
jb
jle
dec
addr16
les
lds
pop
sub
jb
mov
mov
lock
arpl
and
shl
jmp
in
fisubrs
jmp
xlat
lcall
cmp
ret
sbb
sub
sub
test
sub
scas
xlat
add
jo
mov
push
iret
repnz
cmp
and
enter
dec
pop
adc
lret
cmpb
jge
addr16
das
or
cmc
mov
ja
jmp
mov
pop
repz
rclb
fnstcw
cmp
jl
mov
dec
cmc
cs
arpl
shlb
sti
call
mov
push
jp
stos
add
cmp
push
push
fs
jge
jo
in
lahf
sbb
or
mov
add
fwait
imul
mov
pop
dec
jecxz
push
xlat
fldt
push
mov
dec
inc
ret
pop
ret
push
shl
push
stc
cmpsl
cwtd
pop
jp
and
mov
outsl
or
dec
and
jae
fnstcw
repz
mov
push
imul
adc
cwtl
cmp
lock
iret
mov
les
jg
aaa
dec
addr16
pop
xlat
in
shlb
shlb
enter
jae
pop
push
in
pop
jns
adc
jmp
not
dec
hlt
dec
or
iret
shl
ss
ja
cwtl
insb
dec
adc
xor
aad
add
and
mov
mov
cmp
nop
hlt
fimuls
sub
and
aam
enter
inc
movsl
lcall
ljmp
sbbb
add
sarl
outsl
lahf
cmpsl
pop
fistpl
daa
jno
inc
xor
jmp
xchg
out
dec
jle
iret
int
lock
call
in
int3
mov
ret
lcall
push
sbb
push
pop
sbb
outsl
sbb
push
cmp
aad
jmp
and
std
push
ds
in
idivw
jno
cli
out
xlat
lcall
pop
stos
cmp
cmp
cmp
icebp
xor
push
add
inc
stos
cmc
xchg
in
jns
xor
pop
je
sub
xchg
xor
fs
call
mov
add
inc
movsl
mov
movzbl
pop
sbb
xchg
scas
movsl
xchg
sahf
std
dec
shl
mov
or
sub
mov
std
icebp
addr16
lret
sbb
mov
cmp
hlt
mov
or
xlat
enter
xor
add
and
je
test
xchg
add
sub
jecxz
push
lret
mull
hlt
aaa
imul
push
movsl
cmc
pop
pop
adc
cmp
mov
jp
fisttpll
cmp
test
xlat
ja
cld
rclb
or
xchg
xchg
sbb
dec
push
cli
or
or
push
dec
mov
lock
mov
adc
imul
stc
dec
iret
fistpl
mov
stc
jg
adc
dec
push
mov
jae
andl
arpl
ret
movsl
mov
andb
ljmp
and
mov
push
stc
pushf
push
push
jne
shl
push
xlat
mov
shlb
xchg
xchg
aaa
xchg
jg
mov
push
cmp
mov
shrb
lods
or
out
dec
jecxz
es
stos
shlb
dec
sbb
mov
push
or
dec
fcompl
inc
fnsave
aas
std
bound
push
ficomps
test
ja
aad
inc
repnz
dec
dec
mov
mov
pop
mov
sbb
sub
xchg
in
jl
fstpt
pushf
in
mov
mov
cmpsl
fwait
outsl
jns
test
divl
rcrl
push
cmp
jecxz
sbb
mov
sti
jmp
std
pop
push
xor
cmpsl
mov
movsl
subl
xlat
sub
js
dec
push
jmp
xlat
arpl
fldt
pop
sub
and
fisubl
push
inc
jg
out
mov
loopne
jnp
pop
orl
out
mov
sbb
mov
or
mov
stos
jns
fildl
fadds
jbe
movsb
xchg
lcall
aas
cmp
jp
fldcw
cs
add
or
and
testb
ljmp
jae
les
add
icebp
pushf
and
push
xlat
sahf
cwtl
lret
outsl
pushf
in
mov
gs
les
sub
or
pop
xor
sub
xchg
push
les
mov
push
sub
mov
fistl
dec
popf
shrb
add
dec
dec
sbb
xlat
or
addb
or
in
mov
sbbb
addr16
pop
movl
mov
enter
xor
in
xchg
xchg
pop
xchg
clc
cwtl
and
jb
nop
jns
mov
jge
rep
sub
insb
es
push
fists
push
shlb
arpl
cmp
pop
es
add
jno
and
call
jae
or
inc
jl
xor
push
iret
dec
cmp
out
xchg
movsb
jg
sub
sbb
sub
xlat
inc
xlat
nop
call
cmp
jo
push
ljmp
sti
popa
sub
mov
adc
mov
inc
cmpsl
pop
aaa
and
repz
imul
fwait
cmp
loope
xchg
cli
push
mov
sub
mov
xor
adc
cltd
test
movsl
std
aaa
pop
cli
out
jl
xchg
sbb
std
and
aad
push
xor
xlat
in
loope
fcmovu
mov
js
pushl
and
test
mov
mov
mov
outsl
je
xorl
addr16
out
add
out
fwait
xchg
and
test
lods
dec
push
cmp
and
cmc
mov
shlb
fld
adcl
mov
and
push
dec
xor
cltd
popa
add
mov
aad
daa
pop
flds
dec
mov
adc
inc
push
out
das
mov
test
xor
fsubrp
fdivrs
imul
push
sbb
inc
int3
cli
sbb
rclb
xchg
sub
cmpsl
sbb
lds
sbbb
fwait
lret
repz
xchg
filds
xor
popf
fstps
into
roll
or
aad
add
jns
leave
inc
add
stos
mov
push
and
call
imul
jmp
cltd
jne,pn
call
popf
mov
lahf
xor
xchg
sbb
xchg
daa
inc
outsb
inc
test
xlat
add
inc
popa
pop
inc
cmp
xchg
jns
dec
inc
imul
jl
xor
add
cli
dec
xor
mov
into
pop
adc
std
jae
imul
dec
shr
sub
xor
jge
imul
inc
xor
or
fcomp
cld
jl
addr16
data16
pop
jns
push
test
sbb
xor
stos
add
xor
cld
outsb
mov
hlt
jmp
aas
cmp
movsl
enter
add
add
les
aad
out
inc
mov
js
popf
arpl
xchg
sub
mov
jne
sub
shlb
inc
xchg
mov
movsl
aad
cmpb
adc
fs
imul
pop
mov
les
stos
pop
inc
jno
xor
jmp
pop
repnz
add
in
out
sbb
cmp
insb
xor
and
mov
je
mov
movsl
jecxz
or
pop
sbb
sub
out
fisttpll
movsl
push
push
repz
xor
xor
cltd
fidivs
aaa
adc
add
pop
xlat
js
rol
cmp
lahf
mov
test
pusha
ss
call
mov
mov
rolb
push
pop
pop
int3
imul
dec
cmp
and
arpl
jmp
xor
pop
cli
jmp
pop
rolb
pop
or
pop
insb
mov
adc
cmp
jo
mov
call
shr
mov
sbb
imul
mov
mov
adc
iret
call
andl
std
inc
aaa
jmp
and
jnp
pop
sti
out
adc
xchg
out
jno
mov
clc
mov
mov
jg
mov
scas
or
jmp
sub
and
fadds
lock
imul
dec
in
dec
clc
xchg
dec
mov
lods
rorb
push
sbb
adc
loop
jg
dec
push
xor
mov
pop
rep
stc
cmpsl
or
sub
adc
movsl
xlat
rcrb
ret
cwtl
loopne
in
and
cmpsb
jecxz
andl
loope
pop
imul
mov
pushf
nop
stos
sub
sbb
xlat
sarb
jno
mov
icebp
mov
fwait
jg
pop
je
add
fisttpl
lock
outsl
fwait
add
aam
pandn
in
fdivrl
sub
xchg
movsl
or
jno
imul
sub
and
dec
dec
push
mov
repz
push
or
xor
into
xchg
xor
xor
push
dec
inc
cmp
repnz
sub
cmp
dec
mov
push
pop
ds
imul
cwtl
or
popa
pop
lret
and
aad
test
pop
ror
xchg
daa
pushf
stos
adc
hlt
or
flds
pop
xchg
add
leave
leave
mov
popf
data16
mov
xchg
cmpsb
cmp
fisubl
int3
and
inc
inc
cld
outsl
push
add
push
push
or
test
ljmp
lock
sti
imul
xor
xlat
mov
movsl
adc
xor
push
shrl
add
xor
neg
xchg
inc
stos
dec
cmp
pop
pop
xchg
mov
inc
fnstenv
std
insb
inc
or
int3
popf
pop
mov
add
je
test
dec
jae
pop
xlat
mov
adc
xchg
and
sbb
xchg
out
xchg
aaa
ss
mov
sti
fdiv
inc
mov
popf
sbb
stc
and
scas
pop
in
cmp
pop
ret
adc
shrl
mov
cs
sbb
cmpsl
in
xor
fwait
sarb
dec
jns
outsb
bound
out
stc
push
lret
addb
mov
and
mov
push
fidivrl
mov
fstl
or
cs
dec
adc
cmc
insb
and
pop
mov
pop
les
pop
mov
mov
adc
pop
push
mov
pop
pop
jmp
test
addr16
xchg
jg
lahf
arpl
mov
xadd
cmp
in
scas
lea
xorl
jp
cwtl
out
pusha
gs
mov
pop
dec
pop
outsl
out
xchg
sub
dec
cs
xchg
divb
outsl
dec
xlat
aaa
mov
add
stos
pop
loop
pop
jl
xchg
pop
clc
jmp
out
hlt
xor
rcrb
push
xchg
test
and
push
or
pop
stos
lret
aas
push
xlat
xchg
mov
mov
hlt
xor
push
fdivrl
movsb
or
repz
lcall
xchg
pop
test
sti
loopne
jge
clc
add
cmp
cld
nop
ffreep
cmp
fdivrp
xchg
dec
and
adc
mov
mov
add
rcl
sbb
dec
push
add
xor
call
fwait
mov
lahf
jg
push
pop
or
lods
xchg
dec
add
push
sub
jno
cmp
mov
call
xlat
movsb
jmp
out
test
lahf
add
lret
sbb
lcall
xchg
andb
mov
int3
push
mov
shlb
push
mov
jbe
fsts
cmpsl
mov
push
xor
daa
xlat
cmp
std
cmp
fneni(8087
or
xor
dec
xor
arpl
jbe
push
cmp
addr16
xchg
adc
adc
mov
push
cmp
inc
fldcw
stc
shl
outsl
cli
daa
push
enter
ficomps
insb
jno
cs
fildll
xor
dec
xor
xchg
sbb
xor
cmp
ficoml
into
push
outsb
pop
imulb
insb
cli
sarl
pop
push
pop
fldt
cmp
sub
sbb
or
scas
ret
gs
push
mov
not
cmp
scas
adc
ja
pop
push
outsb
insb
xor
xor
push
add
leave
add
mov
xor
sbb
inc
mov
mov
and
push
cli
push
sti
jmp
fcoms
imul
test
imul
int3
fildl
sahf
cltd
dec
call
fildll
jne
xchg
sub
fwait
mov
xor
sub
fsts
inc
sti
or
jl
movsb
adc
push
pop
mov
inc
sub
rorl
inc
cmp
jbe
addr16
and
inc
pop
cmpsl
inc
jbe
fildl
test
int3
jne
push
inc
cli
push
pushf
xchg
add
imul
sub
cmp
xorb
cmp
shlb
mov
fistpl
dec
adc
pop
dec
loopne
std
sbb
or
subb
add
int3
fsubrs
nop
pop
adc
dec
xorl
sub
imull
scas
mov
std
mov
pop
shlb
outsl
mov
or
cli
xchg
in
pop
lods
and
or
stc
xchg
stos
mov
lcall
sbbb
pop
pushf
mov
push
push
adc
push
stos
jecxz
sti
fisubrl
aam
cmp
pop
jo
dec
jmp
mov
fs
inc
jns
xchg
and
inc
and
enter
cmc
pop
add
jb
and
mov
dec
xchg
mov
mov
jp
nop
dec
or
push
pop
xchg
dec
imul
lret
cs
es
call
sbb
pop
mov
outsb
out
xchg
repnz
test
ret
movsl
sti
xlat
adc
outsb
imul
fcmovne
aam
adc
mov
ret
lret
hlt
cld
or
movsl
push
xchg
mov
mov
cmp
lret
dec
pop
mov
xor
mov
or
mov
xchg
roll
int3
xor
pop
daa
xchg
xcrypt-cbc
cmpsl
or
cmp
fisubrl
fwait
mov
lods
fistl
pushf
adc
nop
or
inc
xlat
jge
test
daa
adcb
jnp
std
cmp
cmp
fldl
inc
int3
pop
xor
xor
loop
jns
xchg
int3
insl
popl
insb
stos
cmp
cmp
fs
xchg
inc
fxch
jb
push
cltd
ror
push
jl
shlb
and
push
imul
cli
test
cltd
sub
sbb
sub
jae
xor
int3
test
jl
mov
sbb
mov
push
outsl
rcll
das
push
adc
add
fstpt
ss
xor
fmull
test
cmp
mov
loope
add
popa
insl
mov
mov
mov
adc
inc
and
loope
xor
push
pop
jns
and
ficomps
xchg
fidivrl
xchg
push
pop
jae
pop
cmp
pop
aad
mov
xchg
sbb
int3
sbb
sysenter
fs
dec
inc
ljmp
xor
and
or
jmp
xor
sub
les
ss
sbb
sub
movsb
out
popw
xchg
divl
mov
jno
or
adc
lret
cs
imul
bnd
stc
add
push
mov
addr16
and
add
push
inc
mov
mov
xchg
adc
jmp
imul
or
dec
pop
scas
mov
sbb
push
mov
mov
ret
dec
imul
shlb
xchg
cmp
out
mulb
stc
nop
fidivrl
adc
testl
cmp
in
stos
and
cmp
jl
fwait
dec
dec
ja
testb
lret
jmp
outsl
push
pop
andl
fdivl
add
aad
les
repnz
sbbb
ja
sub
hlt
fistl
mov
stos
sub
jae
pop
fnsave
add
or
sbb
lret
xchg
lods
sbb
adc
mov
adc
sub
push
sbb
lods
push
or
cmp
add
or
cli
cmp
inc
mov
inc
je
ficomps
movb
cmp
or
fnstenv
inc
rclb
push
xchg
test
mov
jbe
cli
pushf
adc
ret
mov
dec
xchg
or
stos
es
cli
ret
outsl
add
cmp
inc
mov
push
shll
mov
mov
pop
push
shrb
iret
addr16
lret
cmpsl
rcpps
add
cli
lea
dec
je
ret
outsb
dec
inc
cli
or
lret
jle
mov
int3
fdivp
dec
jae
aad
xor
inc
cwtl
mov
xor
std
sbb
stc
xor
sub
clc
js
mov
mov
jle
xor
jmp
pop
insb
lret
decl
jns
pop
nop
shl
cmpb
ds
and
in
dec
std
fstpt
dec
xor
mov
hlt
push
jae
add
pop
add
xor
xor
inc
mov
xor
jnp
pusha
jbe
or
pop
test
mov
push
enter
pop
cmp
sbb
and
loope
pop
jae
data16
xchg
fcompl
int
inc
fldcw
push
sbb
xlat
stc
inc
movsl
mov
out
aaa
sti
jle
sub
adc
xorb
pop
cmp
daa
in
cmp
cs
fidivrl
xlat
mov
pop
xor
adc
pop
mov
adc
cmp
dec
inc
jne
pop
orl
js
jecxz
stos
cmp
jp
fnstenv
frstpm(287
jb
mov
stc
pop
pop
insl
fwait
cmpsl
jge
mov
jae
pop
mov
lcall
and
lods
and
pop
xor
xlat
mov
fstpt
data16
int3
mov
icebp
xchg
popf
sbb
fcmovnbe
mov
mov
jno
or
aas
orb
hlt
inc
jmp
ja
in
or
xchg
ret
xor
fsubs
rcrb
and
notw
rcrl
pop
cmp
pop
fs
cmp
imul
cmp
sar
mov
mov
pop
fcoms
lret
gs
mov
popf
sub
or
add
adc
inc
scas
inc
subl
stos
xchg
sbb
das
cmp
lods
mov
cmp
cli
or
jmp
and
push
sbb
scas
pop
or
mov
jne
inc
mov
and
sub
add
inc
or
cmp
mov
out
pusha
and
das
mov
xlat
xchg
insl
movsl
push
or
imul
rcll
xlat
xchg
mov
mov
repnz
push
sbb
dec
mov
lahf
dec
xor
cld
add
fidivs
push
testl
add
fwait
jmp
stos
xchg
mov
ret
outsl
loopne
cltd
mov
repnz
cs
fidivrs
jp
xlat
and
dec
flds
cmp
inc
jl
cmp
adc
xchg
fstpt
mov
sbbl
push
xchg
divl
pop
aad
dec
jp
inc
adcb
test
xor
mov
or
lret
jb
xlat
mov
fs
addb
push
nop
mov
sbb
scas
mov
push
mov
add
repz
sub
dec
sbb
popa
insb
and
pop
and
pop
int3
out
push
sbb
jne
xchg
mov
in
pop
jl
flds
test
mov
push
sub
mov
bound
push
adc
shrl
aaa
rcr
pop
and
fxam
and
mov
cmp
xlat
push
push
mov
insl
pop
sub
mov
lods
dec
test
sub
dec
mov
adc
sti
repnz
insl
pop
pop
dec
test
imul
push
rorl
stos
add
push
xor
inc
jnp
lods
push
movsb
mov
ficomps
idiv
imul
mov
imul
cmpsl
xchg
addr16
lcall
and
dec
call
and
fsubl
xor
clc
or
xlat
fsubl
jno
test
std
xchg
repz
insb
dec
cmpsb
les
cmp
pusha
inc
inc
mov
cld
dec
sbb
jbe
and
jmp
inc
xchg
test
ficoms
imul
js
subl
add
fildll
xchg
push
mov
jl
cld
fstps
sbb
add
fnstenv
int3
loope
out
push
iret
xor
cwtl
pop
push
adc
dec
sub
std
pop
mov
dec
jg
les
xor
test
inc
lock
sahf
jo
pusha
sarl
mov
push
movsl
mov
movsb
icebp
or
subb
cmp
scas
or
cmpsb
inc
mov
fidivrs
pop
dec
cli
ss
out
sarl
dec
cmp
push
in
fs
fldt
sub
cld
or
out
and
mov
testl
jno
movsl
insb
test
cld
les
push
fcompl
ljmp
mov
jg
jp
ret
dec
js
sbb
push
xchg
xor
cmpsl
sub
inc
xchg
mov
cmp
iret
add
ret
cmp
pop
xorl
daa
push
or
dec
out
cltd
loop
pop
lret
rcrb
add
movl
loopne
loop
ficoml
cmpb
lret
iret
lcall
lds
popf
ss
cli
mov
sub
int3
outsl
popa
jecxz
mov
stc
sbb
loop
in
add
xor
dec
shlb
inc
dec
ljmp
hlt
flds
sahf
sbb
pop
push
js
ret
jbe
xchg
mov
outsb
adc
lods
sbb
iret
xchg
jmp
mov
dec
ja
in
pop
jp
loope
shlb
add
inc
xchg
je
pop
push
hlt
inc
inc
in
jg
daa
and
fstp
adc
rcr
insb
pop
imul
inc
imul
idiv
subl
leave
xchg
daa
xchg
fsubrl
jp
subl
pop
push
shll
push
fcomps
jns,pn
dec
jg
xor
insl
mov
icebp
into
fildl
bound
xor
sub
mov
fistpl
lahf
push
orl
jmp
adc
mov
fnstenv
or
cmp
sbb
stos
or
in
mov
ja
push
push
inc
xlat
cmp
jmp
lahf
and
call
inc
cwtl
mov
mov
mov
adc
sbb
ja
xchg
fsts
sarb
pop
fldl
call
mov
dec
adc
sub
fsubr
xchg
data16
cli
jmp
imul
xchg
add
nop
and
das
loop
push
ja
dec
js
sub
jl
out
cli
jb
sbb
xor
xor
sub
inc
push
imul
lods
dec
fwait
push
cmpsl
shrl
cwtl
push
inc
dec
sub
scas
test
pop
call
push
xchg
xor
int
inc
add
push
ja
and
pop
out
jns
dec
mov
nop
mov
imul
xor
pop
jmp
cmp
jl
imul
ret
mov
dec
imul
dec
mov
cmp
add
push
inc
xlat
jnp
mov
add
scas
sbb
push
sbb
ret
sub
jp
dec
mov
push
or
lret
shlb
cmp
data16
sub
add
jp
xor
adc
fistpll
or
push
and
fistl
lcall
jmp
mov
ficoms
cmp
cmp
push
stc
orl
int3
dec
add
aad
out
xchg
sbbb
out
shl
xor
mov
jbe
mov
fisttpl
mov
jns
arpl
sub
adc
and
push
mov
cmp
xorb
dec
inc
jno
sbbl
push
mov
xor
adc
and
fucomi
fidivrs
sub
bnd
inc
movsl
les
mov
fucomip
dec
fisttpll
mov
fiadds
test
jl
ret
dec
push
sub
mov
cmp
pop
xlat
push
dec
sbb
pop
pop
ds
ja
movsb
out
repnz
ficompl
loopne
std
push
ret
dec
js
mov
xchg
divb
out
fs
cmp
dec
xor
cli
ljmp
icebp
sbb
daa
sbb
fisubs
add
out
loope
mov
mov
xchg
stc
addb
repnz
ret
test
and
lea
jne
lret
and
jno
ja
es
mov
xlat
lock
nop
mov
mov
pop
sbb
fisttpl
xor
dec
cmp
stc
sbb
or
xchg
mov
or
fisubrl
and
addb
outsb
icebp
inc
add
pop
mov
lock
push
leave
out
push
jne
push
fstps
dec
pop
push
push
or
mov
sbb
in
pusha
in
js
nop
or
jne
mov
sub
subl
das
push
cs
xchg
jns
sub
add
pushf
repz
test
mov
sarb
sbb
mov
insb
ljmp
shlb
or
fdivr
add
or
cmp
jg
and
dec
leave
sub
cmp
leave
das
jne
popf
xor
xlat
mov
adc
dec
das
out
test
dec
mov
mov
inc
arpl
xor
fldenv
push
sbb
jmp
xor
mov
dec
fisubs
and
addr16
inc
xchg
lods
jle
pushf
sub
xchg
xor
xchg
rcr
mov
xor
lcall
push
push
push
xchg
test
cli
orl
pop
imul
aad
push
call
packuswb
xlat
pop
loopne
mov
ret
imul
pop
push
mov
pop
inc
in
stos
mov
adc
pop
push
fisttpl
xor
cmp
push
sbb
inc
xchg
nop
sbb
mov
xchg
push
dec
sbb
stc
fildl
push
pop
dec
test
out
lret
jg
dec
rcll
stc
out
xchg
mov
pop
adc
jo
mov
inc
lahf
ja
fdivrs
leave
xor
jge
fwait
imul
int3
dec
mov
pop
mov
jmp
pop
pop
push
xor
and
sbb
mov
pop
stc
jg
sar
pop
adc
mov
mov
xor
sub
jmp
and
mov
or
lret
mov
sbb
rcr
nop
test
adc
es
cmpsl
stc
mov
mov
lret
push
stc
rcl
pop
mov
jl
mov
sahf
cmpsb
xor
out
or
mov
sub
aad
into
cmpsl
iret
adcl
mov
in
mov
lock
pop
iret
scas
adc
stos
js
cmp
inc
outsl
inc
jno
cld
clc
push
addb
pushf
pop
sti
jl
fneni(8087
inc
in
or
ja
fnstcw
call
pop
icebp
lods
and
ret
push
push
dec
enter
adc
cwtl
add
pop
jo
inc
xor
sbb
mov
arpl
jno
mov
loopne
pop
sbb
xor
movsl
leave
xchg
lcall
fstps
or
dec
pop
sub
sub
sub
sar
fsub
fs
sti
lods
mov
sub
pop
das
sub
shrl
mov
sbb
xchg
dec
scas
lret
or
push
pop
sub
pushf
ja
mulb
insb
xlat
test
imul
pop
mov
dec
dec
lahf
pop
inc
std
in
daa
clc
xchg
mov
adc
pop
push
test
or
jle
adcb
pop
mov
sbb
fildll
xchg
in
inc
mov
enter
mov
and
sbb
sub
adc
hlt
push
and
aad
ret
movsl
adc
add
test
dec
outsb
rep
mov
mov
ret
mov
pavgw
dec
pushf
mov
jns
dec
and
pop
xchg
or
imul
fstpl
jmp
adc
imul
pop
shll
iret
nop
je
mov
xchg
adc
movsb
inc
outsl
movsb
hlt
jno
xchg
test
mov
les
scas
and
fcomp
push
insl
or
fdivrl
xor
daa
int3
hlt
cmp
xchg
or
adc
fimuls
ret
leave
movsl
push
stos
fdivr
pop
jo
and
daa
push
cs
xor
pop
sub
lds
outsb
popa
sahf
fstps
cmp
adc
jno
ds
jp
xlat
in
into
push
adc
or
ljmp
ficomps
inc
into
stc
test
movsl
xor
cmpsl
jl
fnstenv
jb
xor
pop
rclb
stc
imul
jns
and
xor
int3
xchg
insl
xlat
dec
pop
movsl
add
add
lahf
outsb
fldenv
sub
xchg
lock
mulb
adc
ret
dec
push
mov
inc
cmp
aas
lret
lret
or
je
lret
xchg
pop
in
fdivrp
mov
int3
and
cmpsl
or
out
iret
push
mov
sub
push
and
ss
mov
mov
imul
pushf
xor
imul
and
xor
adc
and
rcrb
out
lret
ficoms
xor
ds
stc
and
xorb
test
outsl
xchg
jmp
sbb
push
and
jle
subb
fldcw
and
xor
or
fcmovnu
imul
push
fmull
cmp
pop
jbe
adcb
dec
leave
mov
mov
inc
sub
push
xlat
mov
xchg
popf
sub
push
fstl
test
sub
cmp
xchg
jno
push
in
shll
and
loopne
repz
inc
dec
lcall
mov
and
cli
in
cmp
les
xlat
jbe
out
fadds
icebp
or
pop
or
stc
xor
mov
mov
in
sahf
adc
cmp
and
pop
xlat
xor
stc
les
movsl
pop
and
mov
ficoms
push
ljmp
inc
sbb
mov
mov
inc
pop
mov
pop
icebp
jns
mov
nop
jp
fimull
push
mov
xchg
sbb
xchg
mov
pop
test
add
sub
testl
inc
pop
sub
xorb
out
dec
or
fcoms
stos
dec
add
int
xchg
lods
mov
daa
jnp
mov
push
adc
cmp
cmp
fldt
sub
push
movsl
fdivrs
not
xlat
addr16
jb
jno
push
imul
aaa
ja
jne
xchg
inc
faddl
ljmp
movsb
repz
mov
mov
sbbl
in
je
mov
je
dec
in
iret
xlat
fucomip
and
stos
imul
xchg
inc
pop
sub
cld
push
jle
jns
rorl
rcrb
jae
ret
add
or
pop
sub
dec
imul
imul
xchg
pop
test
test
lods
mov
cmpsl
or
sbb
xor
xchg
push
xchg
and
fidivrl
push
xor
pushf
add
mov
push
and
xlat
ret
cmp
js
and
repnz
push
sbb
ret
mov
dec
mov
clc
push
negl
lds
xor
mov
out
dec
mov
sbb
jecxz
sbb
inc
mov
mov
and
push
xchg
xor
lea
or
into
imul
dec
mov
stos
popa
cmc
nop
orl
jae
data16
mov
cmovno
aam
mov
sbb
adc
pop
push
jae
sbb
mov
idivb
mov
mov
jmp
and
pop
dec
pop
xchg
sbb
jmp
fldenv
mov
andl
dec
and
cli
mov
stos
add
add
mov
cmp
test
pop
sub
cld
popl
jae
inc
dec
mov
or
imul
cmp
out
xorb
out
in
into
movsl
int3
out
add
cwtl
pop
ljmp
iret
mov
mov
mov
push
rcr
out
cmp
fisttpl
jns
mov
mov
sbb
xlat
insb
fisubrs
sub
pushf
imul
and
mov
movsb
js
jp
add
sbb
add
mov
cli
clc
xlat
push
cltd
les
xlat
sub
cld
sub
and
or
out
int
lcall
es
js
stos
pop
sahf
test
fisttpll
xchg
fwait
pusha
push
pop
push
inc
and
jg
mov
jnp
mov
and
jb
and
outsl
push
in
in
ret
in
outsb
xlat
out
ja
xor
fcmovnbe
addl
mov
sub
pop
rcrl
rorb
gs
ds
lcall
inc
push
xchg
aad
or
fisttpl
jp
and
push
cmpsl
push
sub
daa
ret
xor
dec
pop
xor
xchg
jne
fistl
filds
fldcw
lcall
shrb
in
sbb
cmp
les
xchg
int3
repnz
stc
mov
pop
fcoml
scas
lahf
out
pushf
cs
push
dec
or
mov
xchg
test
pop
out
jp
mov
jno
inc
jge
leave
cmp
test
xor
fstpt
inc
dec
add
popa
inc
shl
sbb
imul
out
push
xchg
repnz
pop
and
mov
xor
dec
adc
jmp
pop
out
pop
xor
fisubs
push
jg
xchg
mov
and
rcl
cs
cmp
in
dec
sbb
push
sub
aam
or
dec
mov
in
adc
fimuls
cmp
sub
lods
xchg
test
mov
or
lret
scas
sbb
add
xlat
push
gs
cli
daa
jmp
xchg
call
fs
mov
add
jno
inc
popl
sti
mov
sbb
and
mov
dec
je
push
movsl
xchg
xor
or
arpl
add
inc
add
xorb
xor
mov
ja
fldt
xor
aam
les
cmpsb
push
mov
fwait
mov
push
daa
or
out
incl
enter
test
push
xor
xchg
das
jl
fcomps
sub
icebp
test
jnp
xlat
popf
lock
movsb
das
mov
lods
add
mov
dec
push
repnz
aam
push
sub
inc
aaa
jno
mov
fs
cmp
fldcw
fisttps
mov
mov
mov
or
dec
mov
rclb
and
pop
fmull
jbe
sub
jns
mov
jge
adc
jp
inc
call
shll
out
xlat
mov
mov
cwtl
xor
cmp
adc
scas
xor
std
fsts
cli
push
push
xchg
xor
dec
xchg
rorl
out
cs
adc
adc
popf
aam
jne
push
cld
sbb
cs
ret
rcrb
out
adc
add
dec
cwtl
cmp
repnz
addr16
popf
cli
outsl
fsubs
jge
pop
std
pop
mov
push
adc
lds
lret
pop
popf
mov
les
xor
and
push
cwtl
stos
ret
mov
mov
popf
lcall
stos
cs
cmp
cmpb
cmp
sub
fsubr
cmp
enter
mov
sub
pop
mov
adc
pop
jmp
xor
xchg
mov
xchg
mov
das
fisubrl
fisttpl
insl
xor
sbb
xlat
insb
jge
mov
xor
dec
test
int
push
outsl
xchg
orb
push
xchg
shll
xchg
jle
dec
aam
push
in
mov
dec
or
dec
loope
or
jp
fldenv
int3
jl,pt
or
leave
inc
fwait
cli
pushf
int
call
fldenv
mov
mov
fidivs
outsb
pop
cmp
dec
xlat
or
cmp
push
dec
addr16
jmp
stos
adc
jmp
sub
push
insl
addr16
sbb
cmp
sub
int
cmp
cltd
ss
sub
mov
int3
fsubr
mov
cmp
sub
xchg
mov
mov
fs
rol
testl
cmp
xor
mov
ds
jle
stos
daa
andl
and
idiv
mov
loop
mov
cmp
imul
cmp
dec
into
loop
mov
in
mov
mov
fs
push
sbb
cmpsl
push
xor
cmp
cs
jno
cmp
aad
arpl
pop
xor
mov
inc
std
mulb
leave
cmp
test
dec
xchg
inc
pop
repnz
pop
or
xor
das
pop
pushl
out
arpl
lret
inc
mov
xor
or
subb
ljmp
inc
xor
push
or
popf
stc
jecxz
gs
fwait
pop
push
adc
xchg
and
stc
mov
jp
test
and
jb
inc
xor
push
mov
push
pop
les
imul
ror
pushf
stos
movsb
inc
dec
ficoml
imul
mov
lock
in
ljmp
aam
or
imul
hlt
cmp
jmp
jg
inc
repnz
mov
stos
cli
sbb
out
out
pop
fs
xlat
sbb
fisubrl
push
repz
push
xchg
jle
sbb
enter
lret
inc
pop
add
js
or
add
movsl
ss
cmp
xchg
fldt
mov
push
fildl
pop
cs
enter
pop
cltd
cmp
mov
test
sbb
mov
sub
pop
fcmovnb
mov
fcoms
add
jae
dec
sub
pop
das
aas
xor
and
dec
xchg
xlat
idivl
mov
insl
sbb
mov
rorb
movsb
cmc
xor
xlat
jo
int
scas
shlb
into
sub
out
xorl
lea
dec
in
xlat
mov
fldt
xorl
cmc
out
pop
stc
sbb
ds
cmp
cmp
push
push
jge
jae
fnop
adc
xlat
cmc
pop
bound
imul
xlat
aaa
and
scas
pusha
pop
mov
inc
xchg
push
push
lcall
cmp
ret
dec
int3
or
fndisi(8087
push
cmpsb
inc
ret
sbb
xlat
xchg
inc
sbb
ljmp
addr16
sub
pop
fidivs
nop
sti
dec
rcr
mov
mov
stc
std
inc
sub
aam
dec
out
mov
ret
stc
test
aaa
add
lret
ret
push
icebp
sbb
lret
jae
loopne
test
clc
sub
sub
rep
ret
and
or
push
xchg
cmp
xor
dec
xor
push
es
cmpsl
jge
cli
or
cmc
and
mov
mov
test
adc
adc
sbb
into
fmuls
cmc
adc
jecxz
jns
lret
jnp
mov
dec
adc
sub
shl
jmp
adc
cmc
lret
rclb
mov
sub
int
in
pop
aam
sbb
cmp
push
test
push
lret
xlat
cmp
inc
add
outsl
and
ja
pop
adc
cs
xor
push
jne
leave
xchg
leave
xor
cwtl
pop
mov
sbb
clc
mov
or
xlat
mov
lcall
xor
dec
fisubs
out
pop
jno
pop
jb
sub
fildl
adc
xor
mov
add
sarb
das
stos
lret
test
mov
push
dec
push
xchg
das
in
loop
enter
pop
xchg
xor
in
sbb
out
mov
jg
arpl
mov
or
pop
pop
sbb
xchg
xor
arpl
sbb
cmpsb
out
test
push
add
shl
jge
sbb
imul
push
push
lcall
jp
data16
dec
dec
adc
dec
jb
shrb
popa
mov
fdivrp
lea
fbstp
lock
push
nop
fistl
sti
add
add
repz
sub
or
jmp
pop
pop
jnp
bound
fidivrl
xor
jns
cli
push
push
xor
or
jecxz
test
xor
in
cmp
mov
bnd
mov
dec
cmpsb
rcrb
pop
sbb
addr16
in
xlat
xchg
shrb
pop
xor
pop
jae
rcrl
outsl
pop
jg
decb
mov
xchg
add
push
mov
stc
in
loop
popa
jl
lret
pop
test
fldt
mov
sbb
lret
push
cmpsl
push
xlat
xor
xor
nop
test
rcrl
mov
cmp
xor
jae
push
std
repnz
xlat
and
xchg
cli
test
cli
addr16
popa
dec
ds
sbb
ljmp
cmp
testl
test
lock
mov
push
jno
lods
addr16
fisttpl
push
lret
pop
imul
fs
cmpl
mov
mov
sub
test
or
stos
pop
nop
aad
mov
js
and
xor
sub
nop
push
add
inc
icebp
daa
ficompl
xlat
cli
int
mov
pop
cmp
jne
js
jmp
in
xchg
in
cmp
ss
cli
enter
cld
test
mov
xlat
iret
rolb
mov
mov
xor
adc
int3
decl
imul
out
test
mov
mov
sbb
fcmovne
ret
mov
lods
adc
sub
mov
mov
sbb
add
xor
fidivrs
pop
aas
jae
sbb
xor
hlt
ljmp
push
out
daa
leave
int3
xlat
push
jmp
or
adc
sbb
or
sbb
add
lret
mov
mov
lcall
push
mov
lcall
cli
aam
sarb
push
fadds
sbb
push
mov
call
jge
scas
mov
adc
and
jp
shlb
xlat
pop
incb
pop
sub
pop
and
dec
sbb
push
cwtl
and
sbb
mov
sub
xorl
jno
jge
mov
imul
repz
stc
mov
pop
mov
cmpsl
sub
outsl
lds
fldcw
scas
mov
mov
iret
shl
cld
cmovne
mov
icebp
andl
jecxz
push
mov
popa
jne
int
pop
sbb
inc
stos
in
inc
mov
push
add
add
sub
push
test
mov
xlat
xor
cmpsl
or
stc
sub
push
pop
push
jae
inc
testl
push
dec
cs
flds
int3
cwtl
bound
lahf
sbb
xchg
sub
xchg
dec
out
inc
hlt
jg
out
sub
mov
mov
jmp
mov
and
imul
adcb
adc
bound
ss
jecxz
repz
push
push
mov
or
ljmp
sti
pop
fs
push
push
xchg
sbb
insl
fmul
ret
data16
mov
imul
jg
mov
dec
aaa
sbb
notl
sub
call
inc
pop
inc
mov
js,pn
fistps
dec
sub
sub
dec
xor
pop
lds
or
arpl
sub
inc
insb
jno
insl
clc
cmp
push
xlat
pop
pop
mov
lret
inc
mov
fildl
sbb
jnp
dec
arpl
enter
popa
movl
inc
ret
mov
clc
dec
or
sub
push
fisubs
push
out
sahf
mov
push
imul
cmp
mov
cmpsl
jns
dec
addb
and
mov
cmp
and
sbb
dec
test
lahf
and
sub
cs
mov
jno
adc
pop
jp
mov
arpl
aad
test
mov
div
aas
fldenv
and
pop
ret
nop
and
dec
test
mov
mov
and
sub
jae
sti
pop
or
adc
adc
into
out
jge
cmp
aam
and
xchg
lret
push
call
leave
sbb
pushl
pop
fstcw
inc
ja
sbb
xchg
push
pop
enter
clc
pop
dec
xor
lahf
rorb
xlat
cmpsb
xor
inc
repz
sbb
fldenv
popa
in
mov
xor
orl
or
aad
shrb
jnp
js
imul
dec
mov
inc
insl
push
sub
sbb
mov
out
sti
movb
mov
or
fstpt
or
icebp
ficomps
jle
cmp
out
iret
lret
mov
mov
popa
notb
inc
and
jmp
cmp
and
test
negb
jmp
mov
inc
movsl
jecxz
xor
outsl
push
ds
pop
push
adcl
and
mov
jnp
xchg
pop
pand
add
out
es
jns
mov
mul
xchg
mov
or
aam
or
pushf
in
pop
lret
push
testl
mov
push
sbb
mov
fadd
push
and
mov
pusha
push
push
add
push
aad
adc
mov
imul
push
fcmovnu
repnz
jge
ja
xchg
mov
loopne
dec
jp
in
inc
push
push
pusha
daa
mov
add
jae
add
pop
add
mov
push
or
add
add
and
mov
xlat
adc
roll
js
lret
movsb
jl
imull
js
xlat
dec
adc
into
je
cmpsl
in
cmpl
cmc
fldt
data16
mov
mov
shrb
jl
sahf
jo
xorb
hlt
aad
pop
imul
flds
adc
or
jg
xor
std
movsl
jae
aam
daa
add
dec
cmp
xlat
lret
add
cmp
or
adc
stos
in
fsubrl
xor
add
loop
mov
lret
pop
mov
insb
sbb
push
sbb
cld
mov
jmp
gs
loop
sub
addr16
rcrl
daa
in
lcall
fildl
mov
sub
cli
ja
std
push
sbb
jno
xor
mov
rcl
and
xlat
jae
xor
out
jge
rolb
mov
push
neg
dec
dec
imul
aad
adc
or
out
in
xchg
sahf
and
inc
jecxz
stc
imul
movsb
je
jo
lahf
mov
in
push
cs
sarl
mov
lods
mov
push
insb
imul
or
sbb
sub
sub
cmc
aad
dec
nop
push
jae
dec
fistpl
fildll
sub
push
xlat
and
lahf
mov
into
hlt
dec
mov
sbb
hlt
imul
cmp
pop
scas
rolb
jae
mov
movsl
jnp
sti
sbb
cld
cmp
cmpsl
stc
mov
pop
jno
push
inc
push
xor
ret
xchg
cwtl
jno
bound
lahf
inc
cltd
jmp
and
add
stc
int3
pop
test
addb
mov
jge
push
data16
push
push
xchg
sub
ja
fldt
movsl
xchg
lods
call
lret
dec
aas
push
adc
and
pop
imul
dec
cwtl
xor
sub
sbb
xor
lea
mov
and
jbe
loope
hlt
mov
lcall
push
xlat
add
mov
sub
sbb
pop
arpl
and
subl
push
inc
test
nop
dec
push
cmp
shll
xchg
jl
add
bound
pop
jl
xchg
and
out
jns
jo
jno
data16
push
imul
bnd
add
or
out
subb
mov
xor
jno
test
adc
sbb
test
aas
cmp
push
adc
insb
bound
mov
adc
push
ficoms
jmp
jmp
pop
int3
xor
divl
rol
mov
in
adc
inc
sbb
cmp
mov
stos
xor
cs
ss
out
dec
jbe
xlat
cld
sbb
jb
sbb
out
lock
stc
mov
push
jbe
xor
jnp
mov
imul
cmp
xor
jmp
push
jbe
scas
inc
add
dec
imul
lods
pushf
call
movsl
adc
sbb
xchg
mov
lea
xor
lcall
aam
pop
push
pop
pushf
out
rorl
fs
or
sbb
add
in
ljmp
test
aaa
mov
inc
sahf
jb
sub
xlat
out
mov
mov
xchg
mov
arpl
scas
add
inc
fstpt
dec
cmp
cmpsl
pop
mov
shl
pop
flds
jb
inc
sub
mov
and
jns
shrb
push
addr16
call
cltd
or
sub
add
out
xor
test
cmpb
sub
stc
es
ficoms
fwait
inc
std
and
push
push
push
aad
or
add
data16
imul
mov
lret
xchg
shlb
out
pop
dec
stos
inc
lock
cmc
push
aam
imulb
cltd
aam
ds
dec
mov
cwtl
sbb
fsubl
xchg
iret
jne
mov
cmp
push
sbb
mov
in
sub
je
test
ja
and
call
outsb
daa
push
mov
shl
call
xchg
xor
call
lret
mov
subl
adc
hlt
sub
cli
xchg
stos
jbe
sub
lcall
mov
mov
out
jl
and
pop
jo
push
adc
ja
pop
or
loop
sbb
add
inc
push
sub
push
inc
add
push
lahf
mov
xor
sbb
into
pop
inc
enter
push
cmp
js
loope
fildl
lret
mov
mov
cmpsl
das
push
push
pop
out
scas
js
cmp
ja
or
fiaddl
mov
adc
insl
ss
pop
xchg
pop
and
jp
mov
je
fisttpl
pushf
sarl
pushf
push
std
addr16
sbb
sbb
push
xlat
adc
xchg
mov
xor
push
aas
insl
pop
bound
xchg
and
mov
jge
inc
jg
or
xchg
enter
mov
mov
jae
push
push
cld
jl
adc
xchg
mov
xor
push
xchg
mov
ds
mov
mov
stc
xlat
clc
mov
inc
cmp
cltd
add
and
inc
xor
stos
jb
arpl
xlat
scas
lock
xchg
imul
xor
xor
ss
cwtl
notb
jns
fs
fistl
jle
lcall
cld
mov
push
stos
jae
xor
lea
jp
xlat
fmulp
iret
mov
jnp
push
aad
cmpb
pop
aas
adc
push
sub
xor
mov
pop
clc
mov
sbb
dec
sbb
sbb
fsubr
or
pop
stos
cmp
xor
jbe
mov
rcrl
dec
repz
movsb
mov
add
push
in
xor
xor
push
jo
rolb
sub
pop
js
mov
into
test
push
dec
jp
add
jne
xchg
bound
orl
icebp
add
mov
pop
push
jp
out
mov
movsl
fwait
or
lds
mov
pushf
sbb
mov
imul
test
into
cmp
mov
jp
fildll
addr16
stc
dec
or
lea
xor
sti
mov
xchg
mov
ljmp
sub
xchg
lret
dec
lret
or
iret
jecxz
jnp
cmp
arpl
xor
fimuls
mov
push
lea
mov
and
fnstcw
fwait
jne
nop
test
fistpll
xor
arpl
mov
dec
and
arpl
in
rcrb
xchg
insw
and
cmp
adc
xchg
imul
or
jae
mov
xor
jmp
lcall
ja
jne
sbb
adc
jne
mov
cmp
mov
std
cli
push
fildl
push
add
push
lahf
mov
fildl
dec
call
sub
fucomi
and
mov
or
sarb
xchg
sub
mov
gs
cmp
pushf
js
xchg
and
jge
hlt
leave
pop
insl
jp
pushf
popf
push
push
jae
cmp
mov
adc
dec
sub
jge
pop
cmp
push
arpl
out
sub
out
jne
cltd
pop
enter
mov
fs
cli
mov
int
sub
shl
adc
fs
and
or
pop
sub
sbb
add
test
xchg
jge
mov
pop
rorl
or
js
xchg
xor
jmp
fidivrs
mov
out
out
adc
fidivrs
les
push
cli
mov
mov
ficompl
hlt
mov
pushw
cmc
mov
mov
shrl
push
ret
cmpsb
cmp
mov
ret
push
sub
and
lret
addr16
sub
outsl
fstps
push
rol
mov
lcall
mov
inc
sbb
dec
sub
mov
xchg
mov
dec
mov
inc
test
inc
add
jnp
push
test
xlat
inc
cmp
pop
mov
scas
or
je
mov
xchg
mov
pop
pop
xor
sbb
cmp
test
sbb
mov
push
xlat
mov
rorl
or
pop
stc
arpl
inc
push
sbb
push
cmpsl
mov
loop
scas
int3
shrb
cmpsl
add
push
xor
and
ret
mov
mov
test
xor
push
sbb
pop
movsb
xchg
jge
dec
aas
xlat
lret
test
xor
loopne
push
xor
das
cs
out
adc
jae
in
xor
push
imul
cmp
popf
mov
adc
hlt
mov
dec
mov
inc
fwait
jnp
test
inc
inc
dec
push
push
aam
int3
cld
dec
lods
or
xor
pop
les
push
sub
repz
add
das
adc
cmp
xlat
add
dec
pushf
cmp
add
and
aam
jns
and
movsb
adc
fs
sub
fbld
mov
movsb
adc
push
and
ss
dec
ret
xchg
mov
js
pand
xchg
dec
push
push
and
test
sbb
ja
sbb
ret
pop
push
pushf
xchg
and
sub
pop
pop
dec
cmp
negl
hlt
jbe
jbe
xchg
rol
pop
cmp
xchg
dec
scas
xlat
inc
int
push
sar
lahf
adc
add
insl
sub
inc
push
mov
pop
loop
roll
xchg
add
fs
jns
sarl
or
fcmovnbe
push
xchg
aad
idivl
sub
les
scas
test
outsl
stc
bound
and
xor
push
xchg
and
jl
mov
int
xor
cmpsl
iret
mov
sbb
test
dec
sahf
pop
addr16
mov
scas
dec
push
aas
dec
fstpt
xlat
mov
in
or
xorl
shlb
push
cld
ret
test
mov
sbbl
int
in
icebp
mov
das
mov
xchg
push
pop
stos
out
scas
xchg
mov
sub
mov
push
roll
mov
cwtl
test
xchg
cld
xchg
push
xor
xor
mov
sbb
xchg
loope
aam
je
jae
sbb
imul
cs
push
sub
repz
jmp
lods
sahf
mov
ficompl
mov
imul
dec
xchg
xchg
insb
add
inc
scas
pop
xor
lods
push
push
cli
fsts
xchg
enter
arpl
inc
lcall
dec
or
and
sbb
mov
stc
mov
cmp
cltd
dec
in
xlat
fimuls
cmpsl
out
loope
add
fnstenv
dec
inc
adc
imul
and
ret
pop
js
jge
pusha
repnz
loop
pop
popf
mov
sub
inc
cmpb
icebp
jmp
jp
rorb
cmp
fwait
std
add
scas
sbb
push
bound
shl
ja
jae
orb
jnp
fsts
mov
inc
xor
add
pop
out
xor
jl
or
jp
mov
mov
mov
test
outsb
pop
or
nop
and
adc
jl
ja
push
mov
clc
or
aas
jns
sbb
push
gs
sbb
sbb
sarb
xor
mov
in
and
popl
lea
mov
cli
pusha
cmp
sbb
mov
out
mov
mov
pop
insb
flds
push
lock
push
shll
test
mov
notb
pop
xchg
push
sub
ret
cmp
repnz
pop
xor
and
jbe
into
mov
int3
dec
popl
or
lds
sbb
popf
jbe
xchg
pop
xor
lods
pop
xchg
push
and
nop
insl
push
xor
fidivrl
xor
out
loop
mov
xor
addr16
pushf
fisubrs
mull
adc
das
addr16
jge
adc
lahf
stc
ret
out
into
and
mov
jg
fsubs
mov
xchg
mov
dec
fdivl
repnz
imul
mov
rorl
sbb
or
sbb
ss
rcrb
inc
pop
inc
sub
inc
cmp
outsl
add
sub
test
pop
scas
sbb
or
inc
inc
dec
aaa
scas
aas
mov
fstps
or
dec
neg
xlat
sysenter
lea
add
push
push
cmp
cltd
sub
xchg
rcrl
xchg
out
shr
dec
mov
mov
push
movsb
lcall
hlt
mov
jmp
sbb
xchg
stos
loopne
mov
push
rorb
out
in
dec
xchg
popf
clc
andl
xlat
xchg
pop
pop
fwait
push
pop
leave
leave
xlat
adc
xor
test
mov
and
cmpsl
cmp
sub
cmpsl
xor
rorb
sbb
fmuls
imul
xchg
sti
jle
sbb
push
mov
sub
adc
jne
out
and
jg
jae
sbb
mov
cli
cmp
cs
dec
sbb
mov
push
leave
pop
and
jae
or
cmpb
pop
pop
xlat
test
fidivrl
mov
adc
jle
xlat
outsl
xlat
jecxz
and
jmp
xor
stos
sub
add
push
adc
dec
dec
addl
sub
shl
clc
jne
push
or
dec
testb
fsubrl
inc
test
sub
jno
jmp
mov
ja
xchg
jmp
ret
pop
pop
out
pop
jmp
push
decb
fldcw
adc
testl
cmp
add
add
iret
jne
imul
and
cmp
xlat
inc
xor
push
lods
repnz
mov
lcall
push
fnsetpm(287
test
push
push
xor
testb
cmpl
inc
jae
dec
mov
seto
mov
outsl
shl
push
repnz
jge
fimull
mov
outsl
sbb
add
sub
idivb
or
cld
fucomi
fisubrs
add
sbb
jb
cld
push
scas
adc
outsl
push
aaa
test
dec
pop
fsts
xlat
push
adc
adc
adc
push
adcb
out
jne
in
cli
sbb
pop
fidivs
sub
pushf
incb
jecxz
push
cs
addr16
loopne
and
in
das
cs
stc
xchg
loop
in
cmpl
sbb
push
pop
rcrl
lahf
decl
sub
xchg
add
mov
and
addps
and
int
mov
inc
fisubl
pop
jg
jo
add
nop
lret
add
fistpl
insb
cmp
in
xchg
fnstsw
ror
hlt
pop
orb
cmp
nop
sbb
iret
outsb
inc
adc
scas
xchg
dec
lret
mov
dec
mov
std
sbb
rolb
xor
aas
fwait
xchg
fisubs
int
fwait
and
or
cli
lock
xchg
ret
pusha
std
or
mov
pushf
and
add
or
adc
or
inc
std
inc
xorl
jl
lahf
pop
or
out
inc
imul
movsb
adc
jae
or
dec
pop
pop
push
cmp
mov
jle
mov
les
add
push
pushf
or
negl
insl
mov
sbb
jmp
fstpt
notl
nop
push
je
shl
xlat
aam
dec
fbstp
sbb
push
sub
imul
or
add
adc
xor
stc
sub
out
sbb
sahf
in
sub
ret
xchg
jmp
mov
add
push
rcrb
in
sbb
xchg
ja
leave
lds
mov
sub
adc
outsl
cmp
push
sub
jbe
fdivl
pop
insl
push
push
mov
mov
lods
stc
outsb
jp
cmp
out
jl
push
pop
iret
push
cmp
nop
dec
add
das
mov
jp
out
jno
xchg
imul
sbb
lret
dec
mov
nop
pop
sub
cli
test
fcoms
xor
iret
stc
mov
cmpsb
fs
add
dec
or
sahf
decb
fldt
insl
jl
cli
sbb
xor
adc
pop
cmc
xchg
test
jnp
fld
ds
add
jb
call
and
jg
cmp
int
dec
xor
jmp
mov
pop
sbbb
pop
mov
fwait
mov
and
ret
shrb
cmp
jmp
test
xchg
mov
cs
adcb
xlat
pop
dec
mov
inc
mov
out
mov
imul
es
gs
lods
fwait
jge
dec
test
fisttpl
cwtl
mov
pop
lds
mov
jb
push
push
push
cmpb
popa
test
leave
dec
stc
sbb
inc
cmp
mov
adc
je
cmp
fldcw
sahf
call
push
jno
divb
cld
or
push
addl
pop
inc
push
mov
sbb
jae
inc
mov
jnp
testl
dec
enter
pop
jl
cli
xlat
mov
fwait
jp
dec
js
xchg
aas
ret
loope
jp
xlat
into
push
xor
sub
das
in
out
jne
cmp
push
xlat
rorl
push
mov
xchg
pop
call
or
fldcw
xor
or
and
and
jne
ja
dec
gs
inc
test
xchg
idivl
std
std
out
cmpsl
dec
jno
push
mov
das
jns
scas
arpl
stc
imul
xchg
repnz
dec
xlat
jp
or
out
xchg
mov
mov
imul
xor
pop
ror
je
lcall
xor
sbb
in
push
imul
daa
inc
ret
push
jl
push
xorb
cli
dec
fsts
add
xorl
insl
add
lea
ja
push
jno
loope
cli
xor
inc
int
sbb
dec
or
pop
ret
fisttpl
fcomps
mov
insl
test
fadd
sbb
add
or
rorl
repnz
lret
shrl
iret
jecxz
test
xchg
mov
outsl
lret
clc
cld
dec
lret
cmp
std
stc
outsb
or
cmp
fs
cmpsl
mov
fldenv
adc
daa
roll
jnp
fists
adc
cmp
sbb
or
dec
inc
xchg
jp
dec
aad
int3
pusha
cmp
popw
es
lods
stc
add
dec
mov
js
iret
sub
sbb
mov
dec
pop
dec
push
push
addb
mov
in
add
int3
rclb
addb
arpl
xchg
in
mov
cmpl
xlat
decl
fwait
jp
dec
push
int3
jbe
loopne
sahf
scas
add
stc
movsb
test
in
cli
sbb
mov
cmc
cmpsb
xchg
imul
jbe
rorl
in
mov
dec
lea
pushf
lods
movsl
fisubrl
hlt
adc
lods
rcrl
fsqrt
test
xchg
iret
fists
jns
add
outsl
loope
adc
fnstcw
inc
and
fidivrs
push
out
mov
lods
mov
addr16
sti
mov
inc
and
xchg
inc
and
jge
push
dec
shll
dec
add
dec
pusha
in
xor
out
mov
xor
dec
cmpsb
es
jae
das
enter
adc
std
xchg
mov
jae
adc
push
push
xchg
push
fwait
inc
lahf
je
xlat
cmp
aam
jmp
jns
xlat
imulb
iret
mov
dec
fildl
adc
xlat
int3
jg
mov
sbb
pop
sahf
push
loop
lea
lcall
push
xchg
and
rol
cmpsl
push
and
jbe
fdivrl
mov
out
xor
arpl
std
lock
add
mov
stc
push
inc
xchg
test
push
pop
mov
xlat
loop
fwait
test
das
inc
cmc
pop
out
lcall
clc
and
jne
inc
mov
movsl
mov
subb
jno
or
sbb
mov
add
mov
xor
mov
aaa
test
in
std
nop
dec
aas
mov
jecxz,pt
fcompl
roll
sti
add
stc
jle
adc
adc
cmpsb
loopne
imul
xor
in
add
dec
insl
scas
mov
xchg
sbb
add
jp
flds
and
push
out
dec
cmp
mov
mov
jp
fnstenv
sbb
xchg
push
mov
pop
ds
hlt
cmp
das
jge
pop
shrb
mov
xor
push
or
orl
mov
movsb
dec
std
mov
icebp
pop
stc
add
mov
mov
mov
and
cmp
lahf
outsl
xchg
nop
insl
mov
push
push
les
xor
daa
xchg
das
movsl
lret
into
xor
xchg
fildl
stc
dec
xlat
xchg
mov
fsts
mov
sbb
xor
sub
xchg
cmp
ret
cmpsb
mov
mov
xlat
sub
out
scas
inc
cld
mov
mov
fstpt
das
xchg
push
repnz
pop
push
je
out
pop
sti
in
and
cltd
xor
mov
and
or
push
jo
daa
leave
fcoml
pop
xor
mov
cmp
sub
insb
xlat
addl
imul
movb
xorl
push
mov
push
fistl
scas
jne
sub
mov
lahf
cwtl
sub
jbe
stc
pushf
sarl
lea
dec
in
pop
or
jecxz
push
adc
jae
in
cli
mov
fldenv
jb
dec
out
test
outsb
sub
in
dec
insl
push
jge
insl
fsts
dec
mov
hlt
aaa
fildll
jo
dec
call
mov
cmpsb
push
mov
sti
loop
mov
movsl
into
fldenv
loop
out
pop
repz
movsb
stc
hlt
insl
sbb
cmp
hlt
loope
fwait
out
test
push
xor
pushf
imul
shrl
add
and
movsl
out
cli
dec
shrl
xlat
icebp
ret
mov
inc
ret
sbb
and
sbb
cwtl
out
ret
xor
push
ja
cmpb
jnp
out
daa
outsl
icebp
imul
xor
sarl
sub
das
rcll
sbb
insl
add
int
loop
sbb
adc
pop
xchg
orl
and
jl
pop
jmp
dec
scas
jge
in
mov
icebp
xchg
cmpsl
dec
lret
xor
sub
in
xor
sbb
mov
jge
neg
push
loop
cli
jp
adc
adc
adc
out
mov
in
add
add
lock
lret
jno
fistl
sahf
int3
pop
data16
dec
fldcw
hlt
push
test
jl
addr16
xor
jg
xchg
push
addl
xlat
je
push
xlat
enter
mov
xchg
dec
xor
xchg
xlat
mov
fimuls
stc
inc
mov
mov
or
fwait
or
mov
aam
cltd
repnz
or
cmp
dec
or
dec
out
shr
sub
sub
sbb
xchg
sbb
lea
sbb
mov
fstl
add
xor
jbe
fldln2
mov
inc
or
imul
mov
xor
and
dec
pop
xchg
aas
adc
push
jne
js
sbb
push
ljmp
jno
dec
test
jp
leave
xchg
fiadds
mov
ficoms
xlat
insb
daa
cmp
ss
outsl
adc
push
notb
outsl
mov
xchg
push
dec
xchg
loopne
movsb
sub
out
out
into
and
inc
mov
add
fisubl
and
in
xor
enter
imul
out
sbb
push
lds
ret
fldln2
ds
push
mov
cmp
and
cmp
insb
dec
pushf
ret
pop
imul
xor
sub
dec
mov
cmpsl
or
mov
xchg
and
dec
cwtl
into
sti
sbb
mov
and
and
jae
sub
jge
dec
sbb
es
addl
cs
fisubrl
test
mov
adc
pushf
iret
cs
out
outsl
pop
add
test
jecxz
nop
mov
and
xchg
dec
pusha
addr16
xor
cmpsl
xchg
inc
ljmp
xor
push
xchg
out
mov
test
mov
dec
fidivs
mov
insl
subb
adc
cmp
mov
mov
inc
dec
stc
add
dec
add
inc
push
sub
cmp
sub
in
stos
pop
shl
mov
clc
sbb
cmp
stos
mov
push
mov
lcall
stos
and
je
pop
test
ficoms
jp
cmc
repz
mov
and
lcallw
adc
cmp
js
and
dec
mov
cmpb
inc
mov
fildl
cmp
mov
cmpsb
enter
xor
mov
movl
test
lret
dec
mov
sub
and
jns
fidivrl
pusha
inc
out
fsubrl
outsl
cwtl
mov
xor
or
add
mov
xor
xchg
push
or
push
sub
inc
ret
mov
stc
or
outsb
lods
or
xchg
xor
pop
arpl
jbe
bound
rolb
pop
push
nop
or
lds
xchg
rcr
push
sar
add
xchg
mov
aam
and
jg
add
pop
push
add
das
sbb
adc
sti
imul
push
fimull
adc
out
hlt
data16
cs
out
loopne
xor
push
inc
mov
fistps
outsl
in
mov
fwait
xchg
imul
jle
sti
out
pop
cmp
xlat
jne
add
pop
movsb
movsb
and
loopne
fnstsw
fnsetpm(287
jg
dec
pop
pop
xlat
dec
rorb
fldenv
scas
rcrl
adc
popf
adc
in
fldcw
xchg
loopne
pop
sbbl
roll
jmp
cmpsb
leave
jae
sbb
or
lret
jl
jno
jmp
and
lcall
xlat
imul
cvttps2pi
rcrb
int3
cwtl
ss
imul
or
sub
xchg
call
xor
xchg
mov
dec
cmpsl
std
xor
ds
jle
xor
in
lods
mov
jg
mov
jp
ret
mov
aaa
popa
cmpsl
stos
jecxz
stc
test
push
mov
movsb
xor
je
stos
add
pop
pop
test
and
stos
mov
cmp
aam
stos
std
cmp
idivb
jl
adc
mov
lcall
adc
xchg
push
fnstsw
fnstcw
in
and
xlat
push
ljmp
out
inc
sub
xor
sbb
or
sbb
imul
fsts
cli
je
jge
imul
sub
sbb
jnp
pop
push
cmp
rcrb
cmp
lcall
or
ds
sbb
sbb
ret
gs
jmp
pushf
lcall
std
jns
ljmp
mov
lret
fisubs
xchg
fwait
jg
cld
cmp
test
fsubr
daa
xchg
sti
repnz
aam
add
add
mov
and
dec
add
pop
jp
sub
stc
test
pop
loopne
mov
adcl
std
jl
imul
or
dec
ss
cmpsl
xor
push
popf
fwait
jg
jbe
fstps
sbb
inc
pop
xchg
xchg
and
test
dec
arpl
sbb
xor
or
cmp
in
jo
movsl
inc
xor
pop
add
add
fstpl
aam
leave
hlt
and
jnp
fstps
sti
rcll
inc
push
lcall
xchg
push
pushf
popf
add
pushf
push
or
mov
jno
lods
or
dec
stos
mov
mov
loope
xchg
dec
mov
and
out
xchg
mov
jmp
push
divb
fidivs
and
test
dec
shr
add
mov
rcrb
jb
rcl
cmc
and
sbb
xor
xor
inc
mov
repnz
sahf
pop
and
add
outsl
ja
cmp
sarl
push
cmp
or
cmp
gs
add
repz
cmp
mov
hlt
pop
mov
dec
ss
jge
xor
xchg
gs
cmc
mov
sbb
push
stc
xor
add
jns
daa
xlat
adc
xor
ficomps
cmpsl
cli
and
sti
jle
sbb
fcmovnb
ret
mov
push
fiadds
adc
mov
sbb
nop
iret
push
mov
cli
cld
pushf
and
aad
fwait
aad
imul
lea
in
pop
or
mov
and
inc
pop
jg
cmp
cmp
test
imul
int3
fiadds
xchg
dec
xor
mov
cmp
mov
andl
jae
mov
mov
and
add
mov
mov
data16
jmp
repz
mov
mov
popf
xchg
inc
fwait
cwtl
jne
xchg
mov
sub
push
ljmp
js
fildl
jg
enter
or
cmp
frndint
dec
roll
jbe
ret
fstpt
fwait
lea
js
sub
int3
jns
imul
loopne
cmpsl
pop
test
adc
daa
leave
inc
pop
adc
int3
lcall
xor
ds
fistpl
pop
mulb
xlat
mov
lret
shrl
jmp
and
and
xchg
cmp
rcr
test
imul
nop
push
out
fcmovnb
sub
lcall
fnstcw
sub
ret
cmp
xchg
cmp
fnstenv
push
or
fsubrl
std
mov
adc
call
xchg
shrb
call
xor
dec
cld
bound
fs
xchg
cmp
jl
push
lret
xor
xchg
gs
add
lret
std
pop
lret
xchg
mov
xchg
jl
mov
inc
push
addl
jns
xchg
cmovle
dec
xchg
pop
or
sbb
arpl
mov
cmp
daa
ja
fs
mov
scas
daa
pop
pop
cmp
adc
aaa
add
ja
adc
shl
jle
push
mov
fistl
dec
dec
mov
repnz
insb
and
mov
sbb
movsb
sbb
mov
cmp
and
mov
in
fisttpll
and
pop
adc
outsl
mov
mov
outsb
xchg
rep
sbb
xchg
push
shlb
subb
sbb
rcrl
push
cmpsb
mov
push
roll
stc
pop
das
push
sub
jl
fidivs
sbb
sub
int3
xorb
and
stos
add
lods
dec
xor
dec
xlat
inc
call
sbb
jge
insb
inc
mov
shrl
iret
lea
addr16
inc
fisttpl
subl
repnz
cmp
lahf
mov
push
js
push
jae
xlat
dec
xor
xchg
and
jb
pop
scas
add
ret
mov
jae
xlat
adc
adc
in
cmpsl
adc
rep
mov
jmp
aaa
enter
xlat
cmp
out
pop
loop
ret
aas
aaa
iret
fnstcw
push
sahf
or
sub
adc
cli
xlat
jne
xchg
xor
dec
adc
int3
inc
push
cli
shl
xor
shll
loopne
out
je
imul
sub
cwtl
out
or
mov
cmp
cli
jp
iret
ds
lret
bound
or
pop
mov
cltd
sub
mov
aaa
dec
cmp
or
mov
pop
mov
mov
xchg
scas
cld
mov
or
movsl
cmpsl
bound
lahf
ficomps
xor
push
xor
imul
in
jbe
jmp
sbb
jmp
lret
std
cmc
inc
test
into
xor
sbb
imul
lcall
and
pop
pop
and
add
and
lahf
mov
in
or
and
movsb
idiv
imul
scas
rcrb
push
nop
mov
lret
subb
inc
push
pop
push
push
std
sub
orl
dec
jns
mov
lods
bound
mov
cmp
xlat
fdivs
mov
mov
sbb
mov
repz
sbb
push
push
jae
into
xlat
mov
lahf
sbbl
push
mov
jge
inc
dec
and
out
pop
jno
sub
sbb
xor
adc
lret
sub
fldpi
or
xor
fiadds
enter
sbb
in
insl
and
mov
ljmp
int
lret
xchg
mov
or
xchg
mov
lahf
push
mov
jns
lds
enter
push
lret
sbb
mov
aas
aad
fstpt
subb
mov
cmp
popa
movsl
rcll
div
notl
lahf
mov
lahf
call
jns
sbb
out
pop
push
mov
fisubrs
scas
push
sub
pop
jmp
xor
stc
loope
add
cmp
rcrb
imul
incb
mov
fisttpll
jmp
inc
stc
int3
scas
dec
mov
icebp
xor
or
xor
pop
pushf
leave
cs
fmul
jg
sbb
cli
jmp
sbb
jb
rclb
ror
in
in
xchg
out
inc
pop
pop
clc
fnstcw
rorb
iret
faddl
push
push
fimull
push
adc
aaa
repz
push
ljmp
xchg
movsb
jb
jmp
mov
sti
xchg
mov
jno
test
sub
fimuls
lock
ja
in
sbb
and
sbb
jno
test
ficomps
pop
xlat
aam
lods
aaa
adc
popa
jmp
test
pushf
sbb
enter
jne
jns
lret
inc
jae
out
mov
or
movsl
xor
cmpsb
es
jecxz
sub
les
lea
scas
mov
push
cli
insb
mov
jle
cli
push
adc
push
cmp
loopne
or
hlt
leave
sbb
stos
add
js
mov
push
ret
in
inc
push
jae
mov
push
ja
jbe
and
mov
mov
jo
xlat
aaa
or
fcoml
jb
mov
shr
ljmp
add
dec
push
loope
out
clc
les
mov
jbe
jb,pn
or
sub
jne
popa
jne
enter
cmp
mov
arpl
pop
sub
xchg
cmp
scas
fnstenv
imul
insb
jge
aaa
xchg
xchg
pop
and
fdivr
jmp
dec
mov
imul
lea
enter
add
loopne
jb
lahf
or
push
addr16
test
dec
loop
mov
adc
pop
popf
test
push
inc
cmp
xlat
mov
hlt
imul
mov
push
in
and
movsb
stc
xlat
dec
sub
adc
das
stos
sub
adc
xor
mov
ret
jno
rcrb
lcall
int
adc
mov
dec
loop
imul
dec
ja
into
fistpl
push
imul
push
sub
mov
mov
jo
fldlg2
inc
subl
addl
adc
sarb
inc
sbb
xlat
and
sub
xchg
lcall
cmpsl
je
inc
adc
sbb
lods
or
out
xchg
or
cmc
insb
mov
mov
cmpsl
jle
sub
nop
cltd
hlt
stc
and
mov
and
xlat
test
cmp
int
or
sub
xchg
hlt
dec
cbtw
ljmp
iret
dec
mov
cwtl
mov
fwait
test
cmpsl
sbb
xlat
mov
in
inc
fnstenv
std
out
loop
adc
xchg
popf
mov
lea
int
dec
js
sub
xor
outsl
imul
mov
mov
into
fbld
fincstp
les
test
rcrb
jge
jmp
adc
adc
sahf
insb
xor
aam
repz
dec
out
loop
in
push
sbb
and
cwtl
sbb
testb
std
jecxz
jle
push
fildl
pop
xor
xor
subl
aas
add
xchg
push
and
cmp
pop
clc
rol
dec
cmp
gs
xlat
adc
rorb
fwait
cwtl
inc
mov
lods
mov
mov
mov
popf
fildl
imul
mov
inc
lcall
mov
mov
fwait
int
in
and
pusha
ret
je
test
xor
mov
sub
out
dec
sub
pop
lock
push
pop
jns
popf
jne
in
movsb
add
pop
lcall
xchg
sahf
lods
movsb
stc
adc
mov
dec
push
add
jg
or
add
out
and
jmp
add
arpl
jbe
jns
mov
mov
pop
and
dec
out
and
icebp
dec
pop
mov
jmp
aam
push
pop
add
cmc
ret
jnp
movsb
cmp
mov
ds
mov
stc
sub
xchg
cmpsl
or
mov
xchg
fs
cmp
mov
sbb
bound
dec
dec
add
mov
push
js
shld
leave
inc
mov
xchg
xlat
jne
xchg
iret
cmp
mov
ss
or
fstps
in
push
mov
sbb
ret
xchg
add
xorl
in
xchg
cmp
push
cmp
ja
pushf
and
dec
leave
push
push
xchg
mov
and
mov
insl
fsubl
push
pop
fwait
sub
fisttpll
ret
jp
and
sbb
inc
jg
sbb
add
add
pushf
xlat
sub
add
mov
pop
fstpt
lahf
iret
daa
sbb
fsts
pushf
enter
fucomi
std
std
jl
ds
pop
cwtl
scas
mov
fcoml
insb
inc
xchg
js
leave
mov
add
inc
pop
adc
cld
adc
imul
cmpl
jp
fsqrt
mov
pushf
ljmp
adc
mov
adc
insb
mov
pop
xchg
adc
and
je
addr16
adc
and
pop
into
out
xchg
imul
xchg
sti
mov
cmc
bound
dec
jno
pop
imul
std
mov
jg
daa
fisubrl
repz
sub
xlat
pusha
xlat
es
mov
test
mov
cmp
cmp
cmp
fildl
xor
mov
push
pop
push
and
jp
in
shl
pop
xchg
sbb
rcrb
jne
push
xor
mov
je
xor
xlat
outsl
xchg
cmpsl
jg
loop
and
call
add
adc
lahf
in
fptan
pop
sbb
int
jp
adc
fstpt
lods
pop
fs
call
arpl
aaa
imul
xchg
inc
cmp
and
movsl
cmpsl
jae
dec
and
push
lahf
sub
dec
pop
jno
loopne
dec
jmp
aam
lret
hlt
mov
sbb
dec
mov
call
daa
mov
subb
xor
push
mov
cmpsb
cs
jmp
ds
fisubl
cmp
pusha
push
mov
dec
push
lret
and
mov
push
iret
xlat
imul
xor
mov
jb
mov
xor
push
add
xor
xor
jg
jne
jns
xor
push
inc
push
loope
fdivrp
movsl
sub
adc
xchg
mov
mov
addb
xchg
jns
incb
rol
fsubrl
fimuls
in
sub
adc
stc
and
sbb
jbe
jmp
fsubl
ja
xlat
push
mov
mov
fdivr
loop
pop
stos
and
adc
ficoms
push
popf
xlat
mov
dec
je
or
imul
jp
out
xchg
mov
inc
in
lods
movsl
adc
test
cmp
jns
and
xor
test
pop
jge
push
ds
popf
out
stc
subl
dec
cmpsl
call
fistpl
sbb
jg
int3
mov
pop
adc
adc
sarb
xor
cmp
out
jb
sar
lret
insl
inc
xor
cmp
divb
mov
jecxz
jge
mov
xlat
adc
jne
push
xchg
mov
fsubrs
icebp
xchg
inc
js
in
sbb
push
mov
push
mov
pop
pop
popa
je
stc
rorl
mov
push
dec
add
xlat
adc
mov
hlt
in
inc
fldl
arpl
stos
or
or
inc
fs
pop
push
sub
xor
xlat
sub
mov
inc
pop
push
popa
jp
xor
cmp
jne
popf
jmp
scas
rcll
arpl
out
or
cwtl
sub
jb
es
je
fistpl
cmp
sarl
scas
xchg
ret
arpl
sbb
adc
dec
xor
out
mov
out
sti
popa
leave
lock
imul
cmp
mov
mov
jmp
mov
or
shl
lds
cmpsl
pop
stc
je
dec
xchg
xor
jno
xor
push
outsl
xor
hlt
cs
ss
xchg
aam
mov
imul
xlat
imul
stos
je
lcall
jns
int
fnstcw
and
outsl
mov
jg
sbb
push
or
sbb
mov
loope
js
jecxz
add
jnp
xor
jne
xlat
push
adc
add
loope
sbb
push
imul
adc
sub
adc
or
shlb
dec
adcl
rorb
add
jno
cmpsl
popf
add
push
jmp
xlat
addr16
mov
xor
test
pop
je
xchg
jl
mov
push
ss
and
cli
sub
jns
cmp
sub
fnstcw
fs
cli
inc
adc
lcall
es
dec
dec
aam
mov
sub
mov
outsl
subl
cmp
or
pop
dec
pop
nop
out
call
sbb
add
ss
mov
mov
test
lods
mov
push
stc
mov
cmpsb
cwtl
pop
test
cld
cs
jbe
mov
stc
fsts
aam
loop
dec
movsl
sahf
or
pop
cmpsl
loopne
push
rdtsc
mov
imul
add
ja
jbe
push
jns
mov
jp
jbe
sub
mov
fldt
aaa
or
xor
xlat
jae
insl
jnp
lret
and
test
into
in
dec
lret
pop
ds
cwtl
xchg
xchg
stc
sub
out
or
div
movsl
rcll
dec
jb
dec
cmpsl
enter
movsl
fsubs
xor
lret
dec
imul
mov
fidivs
pop
inc
xor
dec
stos
lret
xchg
push
sbb
cmp
pop
or
mov
add
mov
dec
sbb
or
dec
or
sub
and
fistpl
lock
js
stos
imul
dec
test
inc
sti
test
xchg
js
test
jns
mov
cli
repnz
xorl
out
loop
cld
faddl
inc
add
cmp
jo
mov
shlb
adc
xchg
fcompl
mov
test
xor
jnp
dec
pop
arpl
out
inc
cmpsl
insb
mov
movsb
inc
std
xchg
mov
std
mov
sbb
add
mov
or
inc
fisttpll
iret
xchg
jno
dec
mov
cmp
fcmovnu
mov
jp
push
jns
xor
inc
lret
imul
lret
xchg
lret
lahf
mov
dec
cmp
or
or
dec
fnsave
ja
dec
lea
dec
push
insl
inc
sbb
xchg
stc
and
pop
imul
and
jae
movsl
ss
pop
xor
jle
fdivs
stc
adc
dec
push
mov
pop
jp
fildl
sbb
mov
sub
fadd
inc
pop
repz
hlt
icebp
mov
dec
xchg
arpl
and
icebp
fadds
aaa
test
mov
jno
outsb
jl
mov
sub
out
loope
es
ss
sbb
mov
notb
nop
out
jns
fldenv
xchg
push
push
cmpsl
push
jo
sub
cmc
fistl
test
lds
fimuls
outsl
outsb
movb
xchg
shrl
data16
mov
push
fs
loope
fdivp
sub
xor
mov
stc
xlat
jp
and
adc
hlt
inc
or
andl
andb
sti
jp
fldcw
add
mov
sbb
adc
fnstcw
adc
push
pop
dec
roll
in
cmp
sub
hlt
addr16
xlat
inc
icebp
fmul
xchg
lret
pushf
icebp
dec
xchg
xchg
mov
in
jle
cmp
popf
xchg
fidivl
mov
popf
mov
jnp
stos
mov
lcall
xlat
cmp
daa
dec
fcomps
xor
dec
push
js
push
push
mov
mov
mov
inc
neg
add
out
and
mov
xlat
mov
sahf
inc
insb
sub
jne
test
push
pop
mov
pop
fisubrl
inc
mov
sahf
imul
sub
mov
xor
movsl
cltd
insl
adc
xorb
into
xchg
push
aam
or
fstps
mov
xchg
push
scas
push
and
cmpsb
push
call
das
adc
jp
xlat
lret
push
pop
rclb
int3
repnz
mov
outsl
hlt
dec
ljmp
jmp
mov
ja
sub
xor
mov
push
inc
imul
jb
jle
sbb
push
sbbb
mov
xor
out
pop
pop
pop
and
jns
lcall
int3
cmp
data16
cmp
mov
push
mov
imul
push
cmpsl
dec
inc
mov
or
xchg
je
sbb
or
call
xchg
std
mov
push
popf
data16
jp
imul
xor
movsl
jmp
in
sbb
push
das
and
mov
xor
cmpb
cmpsl
xchg
addb
fwait
xchg
adc
lds
dec
dec
pop
dec
popf
push
push
pop
push
mov
xchg
sbb
test
iret
cld
loopne
or
scas
sub
xor
sub
cmp
sbb
movsb
rorb
inc
or
pop
out
nop
je
push
dec
jns
fisubrl
ds
cmp
aaa
insb
and
cwtl
sbb
lcall
mov
ja
push
leave
hlt
leave
ficomps
dec
pop
fiadds
jae
xor
shll
jge
andl
cmc
xchg
jae
xchg
sbb
and
daa
cmpl
push
lock
stc
or
mov
ja
or
mov
lahf
movsb
adc
ret
cmpsb
cmp
xchg
std
adc
test
loope
push
inc
jg
repnz
add
imul
pop
fisubrs
mov
call
xchg
orl
sbb
mov
xchg
arpl
dec
sub
jbe
pushf
xor
pop
ficoml
cltd
or
addr16
push
mov
mov
outsl
in
cmp
loop
out
sbb
adc
dec
inc
and
push
xor
imul
fiaddl
pop
push
js
mov
or
stos
jno
sub
mov
add
mov
dec
cmpsl
mov
dec
or
jb
stc
les
and
cli
or
xlat
negl
test
xor
fcom
or
cmp
dec
xor
jp
jne
mov
out
and
sbb
xchg
jmp
pop
movsl
fdivrp
sti
clc
dec
sub
faddp
sbb
mov
and
cld
les
dec
mov
add
insl
pushf
in
bound
icebp
fldenv
test
push
inc
repz
jge
sub
in
sub
test
jo
je
and
cli
das
push
ror
xchg
call
dec
je
xor
dec
insb
scas
push
sbbl
jbe
enter
fdivrp
mov
and
dec
xor
dec
xor
pop
sub
and
sub
xor
pop
adc
in
pop
jae
popf
mov
cmp
hlt
sub
jnp
lret
sub
aam
fdivr
loop
xor
sahf
push
pop
jl
or
mov
adc
xchg
addr16
rcrl
mov
push
test
jmp
cmp
dec
mov
jo
scas
loopne
bound
outsl
cmp
pushf
fisttpl
add
dec
scas
xchg
lahf
adc
cmp
and
pop
inc
out
ret
out
jge
mov
fs
ret
pop
push
stos
mov
out
mov
sbb
jmp
or
push
in
fsts
lret
mov
fldl
mov
xchg
dec
icebp
mov
mov
fbld
out
int
jbe
dec
xchg
int3
es
fisttpl
sub
repz
sub
dec
and
imul
mov
push
scas
dec
hlt
inc
cmp
movsl
push
push
inc
nop
pop
iret
dec
xchg
mov
adc
daa
xor
insb
insb
xor
push
inc
sbb
inc
nop
lret
ret
jb
fcmovnu
xchg
add
call
jno
fnstcw
outsl
loopne
clc
dec
jo
mov
sbb
lcall
sub
cwtl
repz
xor
dec
jne
lahf
xor
push
mov
stc
fnstenv
push
sbb
mov
repnz
jno
mov
mov
in
rolb
xlat
xchg
pushf
aaa
xor
jmp
hlt
cmp
jl
andb
icebp
adc
cmc
push
add
std
dec
inc
jb
push
xchg
push
xlat
shll
out
cmc
jb
decl
jg
dec
sbb
dec
imul
adc
fld
repz
mov
cmp
add
xor
mov
jl
dec
int
adcl
notb
push
leave
dec
sti
out
jae
mov
pushf
add
xor
outsb
out
push
sub
loop
test
mov
cmp
xchg
icebp
sbb
sbb
pop
mov
or
insl
sbb
mov
jno
sub
push
mov
or
mov
jl
inc
xchg
dec
xlat
and
jmp
mov
adc
jae
push
push
popa
mov
lock
int3
mov
mov
out
cmpsl
pop
lcall
scas
xchg
mov
add
imul
sbb
sbb
fldt
loop
xchg
mov
cltd
mov
sbb
xchg
xor
out
or
fildl
and
dec
xor
scas
in
shll
and
jl
cld
test
popf
mov
mov
shl
cltd
test
fcompl
arpl
sbb
push
jns
add
sbb
inc
pop
mov
jecxz
push
mov
push
cmp
push
pop
inc
dec
push
andl
jne
or
nop
mov
mov
test
cs
fsubr
push
jns
shll
xor
lret
pop
dec
and
mov
int
in
das
iret
pop
sub
xchg
in
add
inc
ds
cmp
addr16
cmp
cmp
mov
ja
mov
pop
or
je
and
inc
dec
add
arpl
mov
push
stc
jno
enter
cmp
mov
loope
or
add
or
dec
sbb
cmp
fwait
or
sti
fucomi
les
hlt
lret
push
dec
adc
jl
mov
popw
mov
push
out
outsb
xchg
add
daa
cmp
sbb
mov
pop
nop
push
pop
cltd
jbe
pop
hlt
cmp
loopne
cmp
stos
jbe
fdivr
out
sub
call
jae
ret
dec
cmp
imul
cwtl
xchg
jl
in
add
xor
imul
fwait
rorb
mov
outsl
and
jmp
dec
mov
nop
out
fsts
push
or
push
xchg
popf
call
push
jmp
mov
jecxz
lret
jmp
ja
sub
adc
sbb
mov
cli
jne
shll
inc
push
test
mov
jge
push
sub
adc
add
jb
adc
and
arpl
and
pop
imul
mov
sbb
pop
sarb
popf
ss
pushf
mov
or
jae
lcall
adc
out
cmp
sub
mov
into
sub
sbb
add
dec
arpl
add
fsts
je
mov
push
jbe
stc
add
lods
idivl
das
jge
or
mov
sub
ficompl
pop
repz
fnstcw
push
inc
cmp
mov
out
dec
mov
out
shll
iret
ret
test
and
fadd
pop
pop
fcmovne
add
enter
xor
cli
jnp
dec
add
sub
xlat
xchg
and
xor
lock
pop
mov
dec
push
jae
mov
jge
fucomi
xchg
cmp
sbb
test
mov
insl
or
xor
es
sbb
push
mov
subb
mov
lahf
cmp
pushf
mov
xor
inc
push
outsl
mov
inc
dec
sbb
push
popf
lcall
fisubl
jmp
clc
mov
jnp
stc
dec
push
mov
or
pmullw
movsl
or
fists
jle
sti
and
pushf
repz
push
stos
jp
stos
jmp
sub
adc
jl
pushf
sub
mov
inc
inc
push
mov
loopne
adc
mov
cwtl
or
or
out
push
dec
outsl
popf
push
inc
mov
pop
mov
pop
ja
sub
jns
adc
add
xchg
push
jbe
int3
lock
xor
xchg
jl
sbb
jecxz
dec
call
loopne
fdivrp
int3
pop
jo
push
insb
fistpl
lcall
xor
jp
mov
jae
cmp
push
sub
das
idivl
xlat
jle
mov
sbb
xchg
stc
inc
adc
outsl
pop
mov
xchg
icebp
call
jge
and
inc
add
add
fbstp
xor
sbb
mov
push
jbe
xchg
clc
out
push
xchg
sbb
or
sbb
insb
cmp
mov
mov
int3
test
loopne
cmp
mov
push
insb
inc
push
dec
fldcw
sub
mov
or
dec
jbe
les
test
cltd
loop
movsl
fwait
test
jae
das
add
aam
add
out
out
mov
jbe
cmp
jmp
call
adc
and
jbe
inc
in
or
push
test
clc
mov
je
mov
mov
jae
cmp
jp
or
stos
aaa
sbb
imul
mov
out
jae
and
dec
in
cmp
or
and
movsb
xlat
inc
xchg
pop
adcl
cmpsb
push
into
leave
sub
jmp
add
shrb
scas
xor
jae
popf
jmp
ljmp
pop
sub
push
mov
cmp
mov
notl
out
xor
mov
lock
or
xor
add
sub
jno
and
out
inc
pop
fs
mov
out
mov
repz
inc
jmp
push
movsb
ljmp
mov
lcall
cmp
ss
mov
scas
jno
imul
dec
icebp
inc
pop
add
mov
pushf
push
mov
enter
cmc
gs
outsb
movsb
mov
or
mov
add
mov
aam
and
jle
jne
roll
adc
dec
dec
aaa
inc
mov
clc
cmp
xor
test
loope
pushf
fs
shll
dec
mov
inc
jae
popf
push
test
aaa
add
cmp
imul
scas
subl
inc
mov
nop
push
cli
ja
bound
shrl
test
xchg
xlat
and
dec
mov
in
and
and
pop
add
aaa
xor
jns
leave
push
repnz
push
xor
sbb
fs
pop
xorl
sbb
or
stc
mov
outsb
adc
je
sub
daa
imul
sub
pop
adc
inc
les
leave
imul
push
rcrl
jae
mov
test
cmpb
in
in
xchg
lea
fistl
movsb
sub
fwait
lds
jo
sub
iret
mov
cmp
mov
fldt
in
mov
sbb
loop
movsl
jl
mov
sub
cmpsl
push
aam
mov
stos
pushf
cmp
sbb
sbb
xor
jno
in
xorl
mov
movsb
cmp
test
cmpsl
and
pushf
fdiv
emms
push
fldl2t
imul
or
dec
mov
cs
and
mov
test
sub
or
or
inc
enter
test
cmp
jbe
addr16
pop
decb
mov
call
pop
imul
testl
and
cmpb
aam
int
xorb
xlat
ror
les
std
iret
cli
jmp
fldenv
mov
nop
lret
or
stos
call
cmp
aaa
ret
ljmp
std
push
sbb
imul
jle
pop
std
xchg
and
movsl
mov
cld
dec
pop
lret
cmp
push
pop
mov
pop
sub
dec
fwait
adc
or
in
jno
jb
test
adc
loopne
fldl
dec
or
into
cmp
inc
cmp
lock
std
mov
loop
out
or
ja
jo
mov
or
xchg
das
mov
icebp
sub
jae
idiv
push
push
and
pop
and
es
cwtl
adc
mov
xor
push
test
out
add
and
dec
sbb
mov
and
sub
mov
and
jno
dec
mov
xor
subl
mov
xlat
inc
xor
bound
jp
xor
hlt
sub
jo
shll
loope
movsb
ds
insl
jbe
xchg
pushf
mov
fcmovbe
cmpsb
and
insb
dec
lret
js
into
mov
xor
dec
sbb
ds
les
loopne
mov
pop
loope
addr16
insl
jno
mov
fyl2xp1
popa
shll
and
and
xchg
test
pop
push
mov
push
aad
lcall
jle
xor
and
jne
sbb
pop
lods
ja
adc
scas
js
push
pop
jge
xchg
pop
xchg
sub
test
mov
call
pop
cli
inc
jns
clc
push
jns
mov
sbb
insb
xlat
jae
fs
pop
sub
inc
inc
ret
lret
push
loope
jle
scas
icebp
fimuls
int
fcmovbe
jmp
sti
aaa
push
jl
jns
dec
jp
sub
sub
xchg
add
push
cmp
cmp
and
sub
incb
or
xchg
dec
mov
gs
or
outsl
movsb
dec
out
iret
mov
jae
fildl
jnp
xor
push
ds
adc
mov
xchg
fdivs
std
cmpsl
jmp
jp
insl
out
jp
addr16
test
cmc
shl
push
xlat
lea
mov
jp
xchg
bound
mov
sbbl
and
out
int
jne
mov
cmp
and
mov
or
nop
negl
scas
out
aam
shlb
push
aad
scas
fs
cmpsl
sarl
dec
xlat
enter
jmp
cmc
scas
hlt
xlat
xlat
out
add
lock
inc
imul
sub
mov
lods
push
cmc
lret
ljmp
sarb
mov
icebp
sub
fcomi
push
mov
sub
pop
cmp
fistpl
xorb
mov
outsl
ror
ficomps
lahf
out
sub
sub
les
lret
sub
in
movsl
xor
xchg
and
or
dec
mov
ret
inc
filds
insb
jmp
or
cmpsl
das
pop
addr16
mov
insl
lcall
bound
sbb
scas
jae
pop
andb
and
push
push
sub
jbe
arpl
inc
fcmovbe
ja
std
hlt
mov
add
lods
xor
sti
push
test
insl
fistl
xchg
sarb
jecxz
bound
jnp
or
fld
xor
rorb
mov
stos
mov
icebp
das
adc
hlt
jge
and
fldenv
out
in
xor
xchg
or
xor
jb
xlat
stos
dec
pop
jecxz
fimuls
jge
aam
pop
add
clc
pop
pushf
je
fstps
add
out
out
mov
adc
ja
mov
xlat
jno
sarl
pusha
xchg
cwtl
insl
jns
fstps
hlt
cmp
test
imul
out
sub
int3
test
cmp
inc
pop
out
iret
inc
lahf
cld
add
ja
push
movsb
call
jae
les
fcmovnbe
or
push
out
mov
jmp
sbb
or
mov
or
sbb
push
jae
pop
or
inc
xchg
dec
mov
push
leave
jo
mov
outsl
xor
or
orl
and
test
cmpsl
or
mov
or
fildl
ljmp
cmp
mov
xchg
shlb
rolb
jge
ja
sub
dec
cmpsb
mov
jge
xor
pop
xchg
stos
loope
movsl
lret
cmc
mov
push
push
adc
push
fisubs
or
add
aas
xor
insb
push
mov
sub
loope
test
push
dec
repz
imul
xchg
push
mov
imul
fcmovbe
inc
flds
test
icebp
or
fwait
loope
repz
mov
dec
mov
mov
sbb
sub
mov
adc
ja
adc
jmp
dec
cmp
pop
imul
pop
test
pop
cmp
in
or
mov
leave
mov
and
push
sbb
mov
mov
xchg
repnz
pop
loop
xchg
mov
xchg
and
fisttpl
xchg
push
outsb
or
adc
cmpsb
xor
ret
lcall
andl
jb
xchg
jmp
test
shlb
enter
inc
cmpsl
xchg
sub
xor
mov
fnstenv
fistl
cmp
jmp
bound
aam
jns
fldcw
jne,pt
outsb
scas
lahf
lock
push
add
xchg
cmp
inc
loop
mov
and
fldcw
insl
movsl
jecxz
out
outsb
push
push
cmp
stc
or
daa
or
fstl
xchg
pop
inc
addl
adc
mov
fwait
and
fwait
les
iret
je
or
lea
loopne
pop
push
test
jne
xlat
adc
mov
mov
sbb
pop
adc
pop
jb
fs
in
xchg
out
mov
std
imul
addb
mov
jae
jge
inc
add
mov
sub
cmp
dec
mov
xor
shlb
inc
xlat
ds
push
or
mov
sbbb
or
cmp
and
daa
and
mov
inc
and
jl
inc
fcoms
das
pop
insb
movsl
sti
cmpsb
push
sub
sbb
xchg
cli
pop
pushf
push
jmp
adc
enter
and
xlat
dec
fbstp
adc
movsl
mov
lods
inc
push
xor
movb
sub
push
loope
mov
cmc
sub
into
les
sub
movsb
out
int
fldl
in
es
inc
jle
popa
cmp
and
lcall
dec
jne
daa
mov
jns
ja
jae
movsl
adc
test
mov
out
inc
jnp
xor
call
mov
pop
test
daa
dec
push
shlb
inc
cwtl
xor
push
push
push
pop
cs
rcr
mov
mov
pop
mov
scas
inc
jecxz
add
clc
and
stos
xlat
lea
mov
je
ss
mov
jb
leave
mov
mov
std
push
call
sub
addr16
cmp
and
in
lcall
mov
xlat
cmp
jne
jmp
std
scas
in
in
iret
cmpsl
ret
shlb
mov
lods
sub
jle
das
outsl
fnstenv
cltd
xchg
mov
imul
sbb
and
js
in
das
mov
dec
int3
mov
dec
mov
add
push
push
data16
or
xchg
and
rorb
or
mov
ss
in
cmp
cmp
ljmp
imul
fimull
cmp
and
or
sbb
jae
push
jae
xor
outsl
lahf
aaa
pop
shlb
pop
inc
incl
dec
jb
push
jae
fsts
mov
mov
or
outsl
xchg
pop
repz
cwtl
mov
xor
mov
mov
cs
cmp
iret
test
sub
ret
je
test
mov
mov
dec
adc
decl
xchg
dec
mov
jns
xchg
bnd
gs
jne
outsl
xor
xlat
popa
dec
fwait
sbb
sbb
jl
pop
jno
add
and
js
mov
mov
lea
jae
pop
and
xchg
push
cmp
shlb
test
jle
dec
jb
jno
xchg
mov
xor
mov
sbb
xchg
cmp
lret
pop
stc
xchg
outsb
cmp
mov
mov
ja
mov
out
sub
or
xchg
pop
lret
or
xlat
sti
fstl
sub
mov
mov
loopne
outsb
movl
push
pusha
pop
xchg
mov
ss
xchg
jmp
cmp
test
or
or
dec
mov
jl
mov
adc
or
mov
xor
out
repz
mov
push
dec
pop
inc
repz
adc
mov
in
je
pushf
daa
adc
movsb
xlat
sub
xchg
push
cltd
sub
outsb
hlt
cmp
je
mov
fstp
push
out
daa
sbb
test
rorl
in
stos
pop
pop
in
sub
ja
dec
or
test
imul
cmpb
dec
mov
shll
fldt
cltd
ja
ja
cmp
icebp
movsb
sbb
subl
xor
dec
lock
add
imul
push
jg
push
mov
push
cmp
fstpt
mov
adc
sbb
in
push
sub
sahf
or
mov
enter
inc
pop
cs
pop
cmpsl
push
fdivr
jns
pop
ret
xlat
jo
mov
sbb
xor
icebp
cmpsb
pop
dec
dec
in
or
xor
in
mov
lcall
inc
nop
stos
sub
ljmp
ja
stc
dec
into
or
adc
fcomi
into
sbb
test
sbb
inc
mov
cmp
cmpb
or
inc
dec
insb
nop
or
jns
adc
adc
iret
and
ret
icebp
cmpsl
cmp
pop
dec
loope
addr16
cli
out
clc
lods
or
mov
ds
dec
aaa
push
and
gs
mov
leave
mov
jae
fcomps
xorl
ja
int
std
xchg
fistpl
xor
mov
jp
sbb
pushf
cmp
jmp
test
cmp
daa
or
sbb
sub
add
cmp
or
fiadds
fldcw
mov
pop
test
cmp
sbb
sbb
sub
iret
mov
dec
rcrb
pop
fdivl
in
enter
xor
jnp
stc
jecxz
inc
cmpsl
mov
pop
fcmovu
fbstp
test
inc
xchg
out
imul
dec
sbb
push
mov
sahf
mov
cmp
call
push
nop
in
rcr
cli
push
cmp
js
dec
pop
xor
into
mov
adc
dec
inc
and
rcrb
add
movsl
mov
inc
mov
ja
xor
cmp
popf
ja
fistl
push
imul
xor
xor
mov
push
movsb
loopne
sbb
xor
rcrl
cmp
out
scas
fwait
in
inc
xor
ljmp
mov
jb
test
push
clc
push
fisttpl
mov
jbe
inc
lea
xor
and
sbb
push
cmp
movb
pop
mov
push
fstps
out
sarl
stc
divl
fldenv
push
pop
fisttpl
xchg
pop
shll
jbe
cmp
pop
cli
call
add
sub
leave
dec
cmp
and
aaa
mov
nop
sub
rcr
aad
test
stc
dec
jg
imul
jmp
xor
push
call
ss
push
pushf
sbb
push
mov
sub
addr16
loopne
pop
mov
insl
and
push
sbb
lret
and
in
xchg
pop
lret
push
adc
std
js
add
out
cld
pop
cmp
mov
out
xchg
jg
push
nop
mov
mov
rclb
arpl
push
lock
sub
inc
mov
mov
sbb
insl
dec
js
cld
xlat
btr
jb
test
negb
cmpsl
xor
jg
push
push
sbb
repz
roll
mov
lods
gs
nop
sub
fstpt
arpl
inc
stos
rcrl
mov
test
cli
xchg
pop
push
cmp
jmp
subl
jl
push
push
fldt
jno
test
pop
add
jle
lahf
mov
or
add
aam
jb
mov
cmpsb
iret
lcall
add
fcmovne
xor
and
lcall
mov
mov
lods
mov
push
mov
xor
sub
pushf
xor
les
test
inc
jle
out
in
lock
addb
xchg
je
pop
dec
hlt
jp
cwtl
push
fxtract
pop
movsb
pushf
push
daa
or
pusha
jmp
aaa
lods
sub
sbb
push
enter
mov
add
fidivrl
inc
dec
xorl
test
jbe
inc
shl
dec
cmp
xor
shlb
jg
push
jge
cmp
xor
cmpsl
aad
mov
orb
jg
test
sahf
cmp
aas
aaa
arpl
xlat
push
adc
sarl
inc
xchg
cmp
cmpsl
andl
bound
xor
and
adc
mov
mov
mov
stos
out
fnstsw
jp
push
das
pushf
adc
nop
jb
push
leave
cmp
add
lea
mov
stc
xlat
popf
stos
or
addr16
repz
pop
cmp
dec
pop
fnstcw
cmpsl
lock
addr16
xor
std
dec
ja
adc
fcomi
fnstcw
sub
mov
mov
push
sbb
test
mov
cmp
mov
addr16
sbb
imul
test
xchg
test
orb
enter
inc
jns
into
sbbb
and
iret
lahf
pop
sub
std
add
dec
and
dec
sti
and
xchg
loopne
mov
stc
xorb
lods
pushf
jnp
fisttps
rorb
lret
fsts
sub
pop
lret
jbe
jns
mov
pop
xchg
sbb
out
xor
inc
je
push
lds
popa
imul
cld
jno
mov
fsts
cmp
mov
lcall
jbe
inc
jge
mov
mov
xor
sbb
std
mov
push
sbb
push
pop
iret
push
leave
xor
cmp
pushf
dec
pop
cmp
dec
ja
mov
inc
jae
pop
dec
lock
fcompl
stc
dec
add
xchg
out
jp
stc
fldt
mov
jp
fdivr
shlb
test
das
push
xor
push
push
mov
xchg
cmp
jb
pop
xchg
loopne
sub
loope
cmp
fcompl
lods
lods
lret
inc
add
cli
sub
out
dec
adc
xchg
sahf
movsb
pop
or
test
rcrb
adc
fstpt
int3
fdivrl
jp
inc
out
push
jmp
xlat
or
pop
iret
mov
ljmp
mov
popl
lock
inc
mov
sbb
outsl
xchg
stc
lret
jns
jne
std
cmp
int
shlb
repnz
leave
lock
xchg
pop
sub
mov
xor
fwait
repnz
scas
jl
push
pusha
in
pop
mov
mov
ret
pop
imul
and
sti
dec
test
loop
push
pop
movsl
leave
mov
xor
cmc
or
push
les
jge
rol
and
ja
lret
xlat
sarb
jo
pop
fldt
mov
adc
xor
jno,pn
jae
in
and
mov
jp
mov
jne
jg
lods
ret
dec
popa
push
pop
lods
fsts
xor
out
andb
std
cwtl
leave
addr16
dec
xor
xchg
or
and
pop
push
jb
dec
dec
shlb
mov
sbb
cs
out
or
dec
sbb
xor
push
xchg
and
push
pop
imul
das
es
cs
sbb
xor
lcall
xchg
fs
xchg
cwtl
dec
xor
pop
or
add
stc
pop
lcall
je
mulb
sbb
repz
xor
inc
lcall
fistpl
adc
mov
inc
mov
or
out
lahf
push
ret
pushf
fstps
cs
subl
push
test
mov
imul
sbb
cmpl
clc
frndint
or
rolb
pop
cli
les
cwtl
imul
dec
add
sbb
xchg
pop
mov
push
fistpl
xor
sbb
inc
into
jae
loope
mov
xor
outsb
inc
dec
outsb
fninit
xchg
xor
sbb
xchg
subb
mov
int
stc
sub
xlat
popf
xchg
sbb
leave
xor
ja
pop
inc
in
and
mov
and
rclb
out
addr16
xor
hlt
jge
addr16
push
jecxz
or
cmpsb
repz
jge
dec
stc
imul
mov
mov
sub
imul
fwait
sub
lahf
mov
adcb
fsts
add
stc
rcll
cmpb
stos
add
adc
lahf
aaa
fadds
shr
fistpl
popa
or
and
pushf
add
stc
cmpsb
jp
xchg
scas
mov
test
push
inc
cli
ret
cmc
jecxz
outsl
ljmp
jne
sub
fucom
leave
fistl
mov
push
sub
mov
popf
mov
add
add
popf
imul
mov
mov
xor
jecxz
rcrb
jle
aam
mov
ljmp
lea
fsubs
add
push
ss
mov
xchg
cmpsb
in
testl
pop
jp
test
jae
flds
stos
sub
cmc
push
in
imul
sbb
out
xor
bnd
repz
xor
and
sarw
pop
push
dec
xor
and
ss
shl
pop
loop
ret
jmp
daa
cwtl
clc
jns
sbb
jle
push
sbb
ljmp
mov
xor
push
jnp
sub
and
mov
mov
insl
xor
cmp
xchg
dec
fsin
das
pop
ficoml
addl
xor
and
stos
out
stc
mov
cltd
sbb
mov
das
sbb
popa
xor
xchg
stos
dec
xor
xor
mov
lea
dec
jg
fistpl
ss
mov
push
push
xlat
fcmovne
dec
or
pop
clc
int
jle
movsl
mov
imul
jecxz
push
notb
pop
jp
ret
jmp
lahf
insb
cmp
mov
out
sbb
jle
pushf
and
cmp
int3
jmp
dec
sub
mov
and
and
fsts
cmpsb
pop
inc
sbb
hlt
xor
sub
test
adc
orb
imul
xor
insl
test
xor
jmp
daa
pop
addr16
lods
test
sub
enter
pop
mov
xor
mov
and
out
daa
and
jo
addr16
subl
add
fwait
scas
or
inc
or
mov
xchg
inc
ret
push
pushf
fisubl
mov
push
dec
aam
jno
ss
xchg
pop
jne
mov
insl
ret
xchg
adc
lods
stos
push
lods
ss
test
adcl
xor
pop
outsl
xor
xchg
push
int
lods
popa
in
adc
push
mov
pop
push
hlt
push
and
fidivs
imul
fwait
cmpsl
hlt
push
dec
lcall
mov
pop
inc
movups
sarl
stc
mov
mov
sub
xchg
imul
dec
jbe
mov
addl
nop
add
out
inc
or
lods
mov
mov
js
xor
loopne
xlat
stos
push
pop
addr16
stc
sub
jns
jne
xor
cmp
cmp
jle
cmp
movsb
pop
sub
cltd
outsb
imul
cmp
sbb
sub
push
mov
push
in
cmp
mov
push
jb
nop
pusha
mov
orb
xor
cmp
stos
sub
sbb
les
adc
icebp
mov
lcall
mov
or
fnclex
cmp
inc
xor
pusha
push
pop
sub
xchg
imul
dec
add
mov
cwtl
enter
fcomi
sub
and
sti
int
sub
push
dec
icebp
ret
lahf
mov
or
lret
jne
pusha
or
mov
nop
xlat
or
cmpsb
jbe
adc
mov
xchg
shrl
lret
dec
aad
loopne
adc
sub
adc
sti
loop
mov
inc
pusha
mov
iret
xchg
repnz
and
and
stos
dec
pop
cli
std
jg
repz
fdivl
scas
lds
imul
jns
pop
rcrl
inc
je
jnp
jmp
inc
add
xor
movsb
addr16
lods
pop
sbb
xor
push
in
jp
cmpl
xchg
sub
std
imul
xchg
adc
inc
cli
data16
add
fwait
cmp
xchg
fcmove
inc
push
iret
sbb
fcompl
inc
cld
pop
fnstenv
sub
adc
mov
cmp
xchg
or
mov
mov
aam
pop
add
int
dec
mov
mov
adc
cs
inc
mov
mov
cmp
sbb
xlat
fisubrs
mov
stos
arpl
stos
and
rclb
pop
fiadds
xchg
ret
fsubrp
popf
sbb
test
sub
stos
sar
fistpl
das
fs
mov
ja
jp
lahf
add
or
in
push
ds
cmp
shrl
cmpsb
xchg
sub
cmp
jp
adcb
mov
int3
xchg
repz
mov
ljmp
popf
pushf
cmp
les
push
push
sbb
movb
pop
dec
xlat
ljmp
testb
test
jecxz
cltd
xchg
js
andb
pushf
cld
test
test
lret
xorl
mov
imul
call
movsb
sbb
pop
jl
int3
add
push
sbb
sbb
sub
gs
jb
and
xor
je
sbb
fimull
push
cmp
std
iret
jae
fistpl
jbe
cmp
repz
add
scas
outsb
sub
or
sub
push
push
scas
push
dec
adc
mov
addr16
mov
ficoms
pushl
daa
xchg
xor
mov
push
cmp
jns
rcr
lock
push
aas
mov
cltd
dec
popf
pop
mov
xchg
dec
fs
ret
das
enter
xchg
jo
imul
adc
nop
cli
pop
dec
xlat
loopne
fistpll
or
cltd
stc
push
pop
push
enter
jns,pt
insb
sub
inc
lahf
pop
pop
and
std
stos
xor
dec
lods
popa
sbb
push
add
jbe
insl
lret
int3
scas
xor
loop
iret
and
in
test
adcb
lahf
cmp
jno
mov
jl
adc
and
out
push
push
xchg
fldlg2
dec
in
es
cltd
stos
xchg
mov
cmp
sbb
sbb
in
xlat
mov
pushf
ret
push
xor
xorl
sub
mov
pop
jbe
in
inc
int3
add
fcmovnbe
mov
xor
fistpll
sub
cli
mov
insb
or
jecxz
cmpl
and
out
and
push
in
jmp
cmpsb
cmp
dec
xor
cs
adcl
subl
jbe
iret
pop
mov
adc
inc
cmp
jns
and
repz
inc
dec
add
xlat
movsl
std
xchg
outsl
aam
ret
cmp
outsb
lods
adc
push
flds
and
mov
mov
das
push
leave
jg
or
adc
pop
fisubrs
sbb
lock
xchg
xchg
adc
ucomiss
pop
test
sub
sti
stos
subb
cmp
test
out
pop
xchg
or
push
mov
movsb
sub
icebp
pop
clc
push
cmp
dec
push
repnz
pop
repnz
test
push
xor
fsubp
mov
cmc
add
mov
sbb
mov
sub
scas
ja
push
sbb
out
adc
sti
in
shlb
xchg
cld
mov
cmp
ficompl
clc
lock
fcoms
orb
and
and
push
mov
xor
addb
dec
xor
sub
mov
sbb
xor
xchg
cmp
xor
pop
jne
jg
adc
xlat
xor
xchg
pop
inc
mov
jmp
push
ret
mov
inc
sub
ret
movsl
out
rorl
push
sarl
xor
cwtl
sti
jl
std
ret
lods
cmp
xor
cs
inc
inc
testb
sbb
and
push
outsl
sbbb
lea
pop
call
rcrl
sbbl
mov
fwait
xor
repz
data16
lahf
ret
add
pop
rolb
push
stos
imul
sbb
std
jle
imul
jae
test
ds
iret
jae
rcrb
call
icebp
outsb
andl
xor
div
stc
into
aam
jbe
mov
cmpl
jo
loopne
xchg
xchg
sti
adc
movsl
inc
pushf
push
cs
stc
insl
add
sub
and
xlat
xchg
incb
fucomi
insl
pop
in
test
push
xor
cmp
shrb
fistpl
icebp
mov
inc
out
lcall
mov
aas
or
rorb
and
jl
fisttpl
sub
dec
mov
test
mov
push
pushf
xchg
aad
shll
push
adc
subl
sub
arpl
stc
or
sub
sahf
cmp
outsb
push
push
pop
xor
loopne
loop
aaa
jge
ret
xchg
jns
or
mov
scas
iret
dec
lock
mov
sbb
fisubl
dec
nop
sub
mov
ja
popf
dec
shr
pop
orl
xor
add
fimull
adc
loopne
push
imul
pop
push
push
mov
xor
mov
sbb
mov
sub
jl
out
xor
add
push
mov
pop
or
xor
addr16
rolb
jge
mov
or
and
popf
jnp,pn
out
or
shl
add
add
ljmp
fstpl
sub
pop
add
sarb
pop
jecxz
sub
ljmp
cs
and
cmp
repnz
dec
fnstenv
ljmp
fcmovne
repz
jmp
dec
cld
mov
cmp
sub
push
shlb
pop
mov
outsl
fstps
daa
mov
sbbb
fimull
addb
mov
cwtl
xchg
dec
xchg
cmpsl
xor
sub
dec
mov
in
dec
repz
imul
cmp
pop
cmpsl
sbbl
push
inc
cmp
fistpl
std
fldenv
and
daa
xchg
inc
movsb
mov
or
jnp
lods
adc
mov
xchg
test
gs
pop
dec
bound
inc
fldl2t
sub
fs
repz
subb
sub
ds
pop
mov
test
mov
pop
xlat
sbb
or
stos
outsl
cmpsl
ficoml
aas
call
push
test
cmp
fld
gs
mov
jg
sub
sbb
imul
cmp
add
frstor
xor
aaa
push
js
inc
bound
xchg
aas
mov
add
mov
jl
lcall
jb
push
jmp
push
cmp
jp
jle
insb
std
push
cmpsl
dec
jno
lds
std
jl
out
shll
pop
fwait
and
or
mov
aad
add
stc
sarb
dec
pop
push
add
mov
loope
adc
pop
xchg
stos
and
out
jecxz
cmp
bound
cmp
and
cmpsl
test
mov
cwtl
stos
fiaddl
js
lock
flds
mov
test
imul
xlat
movsl
push
sub
cltd
gs
pop
test
dec
push
pop
mov
stos
scas
add
xchg
test
push
adc
leave
mov
sbb
or
xor
cmp
xor
int3
cmp
sar
mov
les
xor
sub
mov
lret
adc
jns
out
jnp
push
mov
dec
call
lret
ret
jns
rcl
dec
dec
xchg
lods
mov
sbb
sub
add
sub
mov
add
nop
xlat
pop
jns
fldpi
scas
sbb
mov
jno
xlat
mov
dec
push
or
xchg
push
mov
or
es
outsb
cs
out
xchg
sub
xchg
fistpl
pop
xchg
fldenv
pop
mov
pop
mov
pop
xchg
inc
fstpt
pop
mov
fwait
push
mov
lods
push
xchg
out
ljmp
cmp
ljmp
popf
int
mul
push
jle
insl
xlat
fistpl
fldenv
sub
pop
or
sub
dec
lcall
je
mov
in
int3
mov
daa
ljmp
jp
jp
rorb
fstpt
pushf
fstp
addr16
pop
cmc
xor
repz
lcall
ja
sbb
jmp
mov
or
cmp
dec
mov
push
cmp
rolb
lea
fld
ja
sbb
sub
cli
imul
cltd
movsb
push
adc
ss
stos
mov
stos
or
fcompl
push
sub
push
cmp
mov
movsb
into
push
out
std
sub
out
out
push
and
mov
jg
mov
sbb
push
adc
jmp
dec
rclb
shr
sahf
les
rep
xor
xchg
aaa
dec
push
outsl
rol
pop
cli
mov
dec
into
scas
sbb
test
xor
test
dec
dec
sahf
xlat
insl
or
rclb
mov
mov
or
cmc
test
test
stos
xlat
cmpsb
popf
xor
jge
sub
push
mov
xorl
nop
jne
and
test
pop
aaa
jp
jp
jne
pop
xchg
mov
insl
ds
in
jle
loop
cmp
test
sbb
sub
jb
es
ja
jecxz
or
jmp
lods
and
or
pop
imul
mov
divl
pop
lea
push
icebp
cmpsb
push
shlb
and
or
and
xchg
cmpsl
fwait
and
or
stc
aam
aam
push
or
dec
insl
rolb
sbb
stos
pop
out
fiadds
sbb
ljmp
xchg
jecxz
jge
mov
dec
clc
cs
pop
repz
dec
inc
std
cwtl
sti
push
mov
loop
push
add
jl
fnstenv
je
adc
sbb
xlat
mov
dec
mov
inc
and
std
sub
imul
push
jle
sub
jne
xlat
jmp
mov
sbb
sbb
jb
rcll
daa
adc
add
movsb
cmpl
int
dec
ficoms
adc
mov
outsl
cmp
cli
lcall
nop
mov
imul
out
fstps
mov
gs
sub
jl
ljmp
and
fisttpl
jl
popa
ljmp
fsts
scas
hlt
loope
jmp
arpl
sbb
int
mov
daa
outsl
xor
add
xchg
mov
inc
add
ror
mov
or
fldt
cmp
cmp
sbb
jo
out
ja
std
rorb
mov
or
ljmp
cmpb
movsb
add
hlt
pop
imul
xor
jmp
xchg
add
xchg
imul
push
lock
cltd
fiadds
add
shlb
xchg
fnstcw
or
fisubl
sbb
cmp
out
icebp
jmp
jge
sbb
or
add
xchg
jae
cwtl
mov
jp
pop
push
pop
pop
xor
sub
push
adc
jge
mov
inc
dec
fldcw
mov
fs
add
daa
adc
adc
fisubl
insb
outsb
dec
sub
xor
in
lret
mov
inc
and
js
data16
sti
mov
cmc
sbbb
int3
lahf
pop
push
insb
inc
popf
mov
dec
cld
cmp
and
pushf
adc
cmp
pop
bnd
orb
lock
adc
arpl
scas
jmp
mov
mov
inc
gs
mov
mov
nop
testb
stc
and
add
push
add
mov
ds
xchg
inc
test
sub
sub
jle
jae
cmp
inc
sub
cmp
sbb
enter
xlat
sbb
bound
stc
cmpsl
data16
push
adc
outsb
fstps
movb
mov
jp
push
inc
push
dec
sbb
addb
push
and
repz
mov
push
adc
bound
cli
enter
movl
sub
inc
sub
jle
popa
out
sbb
cli
ret
pop
flds
and
and
jns
js
dec
push
push
pop
call
add
test
or
push
addr16
dec
or
ss
cs
fwait
xor
jno
inc
inc
xchg
inc
sub
adc
dec
push
jne
cmpsl
daa
lods
mov
and
pop
inc
adc
add
or
inc
sbb
or
in
push
or
xorl
test
push
pusha
ret
dec
aaa
sti
add
lea
or
sbb
jno
mov
movsl
les
push
cmp
push
repz
sub
and
dec
adc
sub
and
ljmp
xchg
in
xor
repz
fs
or
push
leave
jns
fistl
and
dec
xor
outsl
and
fsubrl
xchg
sarb
fucomi
stos
daa
xchg
mov
dec
cmp
test
fnstenv
fdivs
push
push
ret
cwtl
pop
mov
jge
push
jno
fwait
xor
pushf
ret
cs
lea
and
mov
push
movsl
adc
fisubs
rcrb
mov
jnp
xchg
push
mov
adc
sbb
push
cld
push
outsb
sahf
mov
sti
lcall
push
dec
cmp
xchg
orl
sub
xlat
testl
fadds
jae
gs
addr16
or
push
inc
imul
and
and
jae
addb
push
mov
pusha
sbb
mov
mov
outsb
xor
ret
imul
fmull
std
adc
int
inc
xchg
add
cwtl
aaa
andb
mov
inc
pop
shl
mov
stc
aaa
xor
and
and
lret
push
std
sbb
orb
sbb
dec
mov
cwtl
xor
in
or
ja
push
mov
mov
ret
xchg
cmpsl
inc
nop
inc
xchg
lret
loop
stc
xor
dec
adc
or
sbb
fidivs
cmp
into
cwtl
mov
push
andb
add
jmp
mov
xchg
icebp
adc
dec
pop
hlt
fisubs
shll
adc
js
loopne
and
mov
imul
lods
xchg
out
mov
push
clc
lods
rol
out
xchg
andl
sahf
daa
ss
push
xchg
subl
loope
sub
xlat
popf
fwait
cmpsb
jg
xor
int
jo
sahf
sbb
test
pop
xchg
add
aam
sbb
mov
xchg
adc
xor
jno
xchg
mov
test
leave
or
or
push
ljmp
or
push
lcall
sbb
xor
or
lret
push
into
fdivl
dec
cmp
fidivrl
push
and
push
lret
fstps
enter
ficompl
jmp
inc
stos
clc
sbb
xchg
fld
mov
mov
leave
sub
push
cmp
int3
dec
stos
fstl
push
in
push
xlat
call
cmpsb
fs
pause
sbb
mov
pop
xchg
cmp
mov
out
xor
stos
mov
cmp
and
cmp
inc
ret
minps
test
lret
fidivl
lret
iret
fimull
sbb
xchg
xlat
out
js
icebp
adc
mov
fcoms
jo
pop
mov
sar
rolb
xchg
jge
lret
jne
pushf
in
push
leave
mov
nop
outsl
cmp
and
jb
push
jns
xlat
shrb
pop
dec
and
pushf
cmpsl
mov
cmpsb
sub
add
or
and
cmp
jnp
fcmovnb
mov
jmp
sbb
shlb
inc
pop
fucomi
sub
out
cmc
cmc
les
test
repz
and
xor
repnz
sub
nop
mov
and
rorb
xchg
les
add
mov
xor
nop
cmp
ret
pop
jp
outsl
test
sub
mov
add
adc
daa
xchg
jp
loopne
das
mov
fstpt
inc
mov
sbb
jecxz
xchg
pop
xor
dec
pop
push
into
mov
xor
push
mov
ds
pop
xor
pop
sti
popa
fwait
inc
test
les
jmp
mov
jae
xlat
fldl
fs
sbb
mov
addl
jae
lahf
icebp
fildl
cmp
push
jne
sub
and
into
xchg
cmc
movsb
faddl
shlb
dec
and
xchg
aaa
movsb
cwtl
test
out
cli
clc
stc
jae
flds
roll
adcb
inc
mov
pop
jmp
dec
inc
jecxz
sub
xchg
mov
iret
aaa
je
fistl
cld
sub
outsb
and
push
cmp
adc
cmpsb
call
rcr
lret
cmp
push
pop
mov
idivb
or
lods
repnz
dec
arpl
xchg
lcall
fbstp
jbe
push
out
sub
adc
adcb
in
jae
in
aaa
xchg
sub
fnstenv
pushf
add
mov
sbb
sub
subl
fnsetpm(287
stos
xchg
imul
jle
pop
push
fcomi
clc
or
leave
add
iret
sub
pusha
or
aad
xchg
sbb
fistl
enter
mov
adc
cld
ret
nop
mov
or
rcrb
stos
mov
xor
bound
lods
dec
and
not
dec
and
jns
dec
cmp
fsubrl
sub
push
mov
pop
xor
mov
xor
lds
fisubs
sub
dec
std
roll
gs
pop
xchg
jns
sbb
pushf
push
inc
fistps
push
xlat
and
or
mov
mov
inc
pop
mov
mov
or
sub
push
test
cmc
imul
dec
imul
scas
dec
test
ret
xor
sahf
lcall
fcmovnu
add
scas
dec
jmp
dec
push
or
cli
mov
movsb
pusha
nop
xor
ds
fcmovnu
test
and
outsl
pop
cli
sarb
out
in
fcom
mov
inc
mov
sbb
xchg
test
int3
fwait
pusha
lret
jge
or
sbb
mov
sub
or
adc
jg
stc
nop
fwait
test
fcmovu
in
sbb
inc
pop
xor
insl
and
rclb
sahf
out
cmp
ja
nop
dec
push
sbb
or
sub
xorl
fs
mov
aam
jbe
int3
rclb
sub
and
ja
in
mov
mov
idivb
mov
xchg
test
sbb
pop
mov
js
das
adc
sbb
daa
adc
add
fldenv
cs
divb
add
sti
xchg
sbb
pop
cmp
cmp
test
xor
faddl
imul
andl
fildl
inc
lods
stos
fdivrs
fistpll
push
nop
jne
pushf
aaa
push
fsubs
shll
adc
or
sub
into
mov
inc
imul
inc
adc
and
mov
cld
or
dec
mov
aaa
mov
xor
in
mov
dec
bound
and
dec
jne
std
or
mov
movsb
sbb
lods
add
repnz
sub
cmpsl
ljmp
test
jne
testb
movsb
fisubl
jg
xlat
inc
leave
idivb
sbb
fwait
mov
out
or
data16
fdivrl
lcall
ljmp
cmp
xchg
mov
clc
lods
mov
addr16
add
aas
fimuls
push
jae
add
jge
jge
jg
aam
mov
xchg
out
out
stos
or
adc
insb
push
int
fbld
js
jb
divb
mov
pop
ljmp
pop
xchg
getsec
adc
mov
sbb
test
leave
jns
push
or
cs
mov
sti
dec
add
push
and
popa
mov
aaa
aas
leave
ljmp
pop
jg
mov
stos
jb
fs
mov
push
out
imul
es
cmp
dec
mov
clc
push
pushf
dec
mov
jl
daa
xor
fwait
xlat
mov
push
sbb
push
lret
mov
fsts
or
rorl
push
jb
xor
popf
sub
dec
jnp
mov
mov
negb
mov
dec
sub
adc
fsts
stos
mov
fidivrs
sub
or
inc
xlat
jne
outsb
jg
or
inc
imul
sbb
dec
sbb
add
sub
mov
sbb
add
aam
fwait
cli
xor
rolb
movsl
or
xor
xor
dec
hlt
out
xchg
mov
lods
mov
sahf
or
aad
adc
pop
hlt
push
pop
pop
dec
xor
fdivrp
xor
push
or
cmp
cmp
inc
xor
push
lods
dec
nop
hlt
pop
cmpsb
test
loope
mov
jp
inc
cmp
mov
arpl
add
push
into
pop
ja
inc
mov
mov
pop
fsts
dec
movups
mov
mov
and
push
ret
cmp
xlat
and
test
jp
mov
pop
mov
inc
xlat
add
stos
enter
popa
fwait
pop
xchg
scas
pop
and
xchg
movsl
test
mov
pop
mov
mov
dec
jb
decl
imul
xor
ja
loop
rolb
ja
add
mov
xchg
cwtl
and
push
or
pop
lret
lret
xor
inc
xchg
cmp
jg
jo
jmp
xchg
fsubl
das
stos
xchg
int3
les
push
or
fiaddl
es
mov
enter
pop
add
xchg
out
lret
movsl
mov
loop
clc
outsl
mov
or
movsl
orb
pop
jg
jp
fcmovne
pop
or
cmpsl
xor
and
pusha
xor
pop
pop
cmp
lcall
int
xchg
pop
fnstcw
xlat
pop
icebp
sbb
xor
mov
shl
push
jbe
jp
pop
add
jp
lret
ss
add
sbb
out
stos
adc
sub
inc
sbb
mov
mov
inc
lock
sahf
cmc
sub
dec
and
lods
sub
inc
or
and
jnp
cmpsb
stos
out
daa
sbb
add
jl
pop
ds
and
popf
lods
sahf
pop
or
xlat
add
jg
jno
add
cmpsl
sbb
xchg
pop
cmp
cwtl
xor
jmp
stc
xchg
xor
int
jmp
inc
testl
movsl
subl
cs
in
ljmp
xchg
jnp
lahf
cmp
scas
push
push
or
adc
cmp
inc
lret
rcrb
subl
pop
hlt
sbb
push
push
fldt
ret
or
jno
cmp
push
enter
xor
push
popa
pop
cmp
cli
mov
jmp
push
inc
sub
pop
xchg
or
add
or
jmp
mov
andb
pop
cmpsl
and
lcall
xor
jae
add
xchg
dec
sbb
repnz
fs
sub
loopne
and
andb
mov
xchg
pop
add
pop
fnstenv
fwait
out
cwtl
jmp
popf
hlt
push
stos
cmp
push
cmpsb
cmp
xor
inc
mov
arpl
push
xor
in
cwtl
bound
fcompl
sub
rcrb
mov
fisubs
std
push
out
mov
sub
cmp
xchg
lahf
add
lock
mov
jo
pop
dec
adc
fs
pop
pop
cmp
or
jno
jo
sub
movsl
pop
insb
dec
fildl
clts
sbb
dec
flds
icebp
pop
dec
cli
xlat
cmp
repz
xor
dec
xor
or
loope
jns
xorb
movsb
repz
ja
xor
rclb
fcmovb
dec
lods
xchg
dec
and
js
xor
stos
shlb
lret
mov
icebp
cmp
xchg
or
cmp
dec
pop
xlat
rolb
popa
enter
lock
sbb
sub
xchg
pop
push
outsl
mov
loop
movsl
repz
and
jb
cmp
mov
ljmp
push
nop
mov
dec
jg
sub
ja
add
adc
pop
xor
mov
cltd
push
push
sarl
xchg
pop
pop
and
jb
loop
jl
mov
mov
xlat
movsl
or
ret
sub
aas
xor
jae
lea
cmpsl
pop
scas
fdiv
mov
iret
push
movsl
fcomi
cmp
or
in
xchg
mov
pop
clc
roll
pop
xor
inc
add
cld
jns
popa
cmpsb
cmc
das
jno
dec
pop
repz
sbbb
xlat
jp
jb
movsl
or
or
pop
fisttpl
imul
std
and
sbb
dec
lods
int3
stos
test
gs
sti
nop
jbe
jle
cmc
sub
xchg
mov
mov
jnp
data16
cmp
jecxz
das
movsl
xlat
cmp
xor
push
out
test
gs
xor
xor
sub
test
adc
inc
roll
cmp
push
jnp
into
xchg
movsl
test
adc
cmp
not
mov
lea
hlt
sarb
mov
mov
lcall
out
jns
fsts
out
adc
jae
xchg
int
pop
pop
xchg
cmp
fs
shll
or
fnclex
cmc
push
xchg
push
add
stc
inc
fistpll
jnp
dec
mov
pop
or
and
pop
pushf
insb
push
jle
lret
test
and
xlat
mov
jl
jg
in
mov
test
cltd
mov
mov
hlt
insb
cmp
into
add
inc
pop
jp
mov
scas
daa
xor
mov
mov
mov
aam
subl
mov
xor
cmp
aam
cmp
dec
jae
and
pop
sub
xor
pop
dec
jl
add
pop
jp
std
push
pop
adc
iret
cli
adc
test
dec
dec
mov
jp
xor
and
insb
sbb
es
lret
je
cmpsb
xor
iret
aas
sub
push
or
pop
pop
cli
fs
xor
pop
sbb
outsb
aas
mov
cmc
inc
popf
add
mov
jmp
mov
jb
lahf
clc
andb
inc
notb
rcrb
sarl
or
addr16
or
sub
out
pop
cs
xchg
imul
adc
sub
jo
dec
pop
in
jle
push
clc
mov
mov
lret
je
outsb
enter
add
shr
insb
loop
loop
mov
jge
into
stc
fucomi
pop
fwait
daa
inc
sub
clc
pop
les
in
stos
iret
ret
pop
pop
adc
cmp
insl
and
out
mov
xor
inc
jg
sub
stos
cmpsl
mov
lcall
pop
sbb
cmp
jb
fistps
cmc
cmp
aaa
cmc
dec
pop
lods
dec
mov
jmp
popf
mov
mov
lcall
push
mov
ret
adc
inc
jg
pop
mov
and
xchg
mov
outsb
imul
mov
sbb
sbbb
flds
mov
pop
or
stc
add
adc
leave
mov
xor
ja
pop
clc
jno
in
sub
push
dec
bound
mov
outsl
repz
ljmp
loope
out
lds
cmp
stc
rcr
ficoms
imul
test
mov
or
sahf
adcb
and
xor
mov
mov
shl
arpl
xchg
in
fcmovbe
cwtl
xor
out
and
int
mov
mov
mov
loopne
xchg
inc
push
sub
pop
aad
or
pushf
subl
push
pop
fdivrs
insb
jb
mov
cmp
out
and
and
fcmovnbe
das
fwait
jg
mov
lea
outsb
jae
imul
test
mov
out
fwait
ds
pop
adc
ljmp
icebp
mov
jns
pop
test
mov
ja
data16
movsb
iret
xor
mov
mov
pop
fcomi
add
push
std
idivb
out
inc
and
ds
mov
pop
xchg
pushf
jne,pn
fcmovnu
pop
xchg
repnz
popa
sub
xchg
mov
enter
insb
jg
iret
push
cmp
xor
xchg
hlt
dec
mov
xlat
rorb
scas
mov
cli
js
xchg
fs
popf
arpl
add
addl
mov
sub
jns
xor
sub
and
jne
or
out
ja
xlat
xchg
dec
into
mov
mov
int
sbb
xchg
aam
cli
loope
loop
jbe
and
jne
filds
dec
pushl
sbb
xchg
mov
cltd
or
stos
lret
test
mov
sub
xor
xor
movhlps
xchg
mov
hlt
pop
xor
cmc
ret
or
inc
lods
divb
cltd
mov
mov
mov
adc
push
imul
sub
sbb
jns
mov
out
repnz
pop
xlat
sub
daa
inc
xchg
mov
mov
ljmp
and
shrb
ja
mov
and
xor
mov
fidivrs
popf
xor
cmp
mov
pushl
sbb
add
iret
adc
jne
out
sbb
xchg
lahf
cmp
sbb
mov
cmp
sarl
mov
sub
mov
in
mov
inc
inc
push
sbb
jp
fcomi
mov
std
ja
and
cmp
ret
and
stos
loop
mov
lods
inc
lea
cwtl
cmpsl
inc
mov
cli
push
pop
fbld
daa
roll
out
lahf
or
or
pop
pop
sub
andl
mov
or
pushf
pop
cmp
mov
sub
pop
xchg
pop
lret
mov
out
mul
fndisi(8087
and
and
jp
sti
mov
lahf
fs
xor
jmp
test
cmp
imul
mov
pop
jae
adc
mov
push
test
iret
cli
jmp
fldt
hlt
fisttps
cmp
jae
mov
scas
sbb
fistl
pop
outsl
pop
cmp
stos
shrb
stc
sahf
pop
cltd
cs
aam
inc
add
fld
adc
inc
out
notl
pop
mov
popa
out
cltd
sar
lods
sub
insl
push
fldt
mov
mov
cwtl
fwait
mov
inc
push
aaa
or
dec
cmpsl
pushf
add
xchg
and
mov
sub
dec
in
lahf
pop
xor
push
xor
mov
or
pop
repnz
mov
addr16
dec
stos
adc
and
add
and
stc
xchg
mov
push
jo
aaa
dec
mov
dec
int3
mov
sarb
int
push
mov
je
sub
popa
std
fimuls
and
add
hlt
jno
int
jae
pop
out
aad
and
xor
xor
rolb
sub
adcl
nop
mov
mov
jns
sub
icebp
shlb
xlat
inc
push
fdivrl
cmp
je
mov
cs
ret
dec
dec
inc
push
sbb
cmp
cmpl
push
cmp
push
push
sbb
sbb
cmpsl
xor
add
inc
lock
out
rcll
pop
mov
aaa
adcl
push
push
pop
ljmp
pop
or
and
pushf
fistl
subl
nop
cltd
mov
cli
or
xlat
aam
test
mov
xchg
pop
adc
outsl
pop
pop
push
shll
jns
js
iret
pop
jg
or
gs
add
test
and
xchg
stos
es
cltd
mov
les
adc
add
mov
popf
jae
fildl
cmc
ljmp
mov
push
sbb
divl
sub
rorb
loop
lahf
insb
sbbl
popf
xchg
jno
mov
flds
or
jg
mov
fucomi
bound
jns
jle
jb
mov
ja
lods
lcall
out
imul
mov
sub
cwtl
sahf
pop
call
repz
pop
rcrl
data16
sub
jp
adc
repz
cmp
dec
cwtl
fs
repz
mov
icebp
and
jne
or
push
shl
adc
xor
add
xchg
imul
push
popa
fisubrl
ja
push
mov
lret
dec
out
data16
sbbb
dec
fistpl
push
out
jp
jae
ds
and
jbe
push
xchg
ret
jmp
popa
pop
mov
add
std
shrl
fildl
and
add
fcmovnb
imull
mov
lret
fsubl
xlat
push
dec
iret
imul
shlb
and
pop
pusha
out
jmp
xlat
adc
inc
dec
pushf
jge
or
inc
enter
jno
or
mov
mov
divb
fcompl
test
sub
sub
mov
nop
std
and
inc
je
movsl
sub
mov
mov
jne
movsl
xor
push
and
std
xchg
cwtl
shlb
dec
dec
outsl
jbe
inc
or
fstpt
xor
add
rolb
inc
nop
and
cmpsl
inc
mov
and
cmp
mov
mov
loope
adc
cwtl
shrb
stc
sub
ljmp
adc
fs
fiaddl
lahf
mov
cmp
pop
mov
xchg
adc
repnz
sub
imul
jae
push
xchg
imul
cltd
inc
es
xchg
cmp
and
ficomps
mov
popa
pushf
ljmp
cmpsb
inc
jl
pop
or
jge
push
cmp
mov
mov
pop
fdivl
jae
lahf
pop
mov
cli
mov
dec
shll
std
cmp
xor
jmp
adc
inc
test
push
cmc
or
cmpsl
dec
mov
mov
mov
xchg
cmp
and
cmp
mov
ss
cmp
xor
fbstp
inc
jp
cmpsl
adc
jmp
dec
cmp
adc
out
sub
push
push
jmp
mov
ljmp
dec
pop
lret
adc
sbb
call
aas
ds
inc
cmpsl
adc
mov
mov
ja
or
addr16
cwtl
cmp
mov
cmpb
jecxz
iret
mov
push
and
icebp
dec
sub
mov
pop
imul
sahf
repz
daa
mov
adc
fldt
mov
pop
out
push
cmovbe
shlb
fildll
mov
je
imul
pop
gs
push
dec
adc
sbb
mov
mov
xlat
outsb
sbb
lret
test
xor
pop
jp
repnz
pop
roll
dec
imul
cs
js
shrb
cli
fsts
mov
xlat
push
add
or
cmp
dec
fisubrl
imul
cltd
mov
jb
cmp
insb
pop
or
loopne
inc
jno
xlat
push
fistl
ret
lods
push
popa
jp
and
stos
aas
rcrl
outsb
lods
inc
ja
ret
icebp
cmp
or
cmp
xlat
pop
cmp
jo
cmp
test
repnz
imul
outsb
popa
jns
fwait
stos
das
cwtl
faddl
call
lret
addr16
pushf
adc
mov
sar
mov
adc
xor
cmp
cmpsb
or
pop
push
fstl
jmp
xchg
jnp
xor
pop
xor
jmp
subb
ficomps
inc
mov
cmpsl
push
inc
sub
fs
out
stc
mov
pop
adc
push
adcb
pushw
or
jg
xchg
cmpsb
stos
gs
nop
jb
ret
lock
jmp
push
push
adc
iret
fidivs
test
arpl
cmp
daa
sbb
call
cmp
ds
cmpsl
aaa
jne
mov
xchg
fnstsw
je
mov
inc
repz
data16
dec
cmc
inc
xchg
imul
xchg
push
fdivrs
adc
sbb
adc
pop
adc
fbstp
rcrl
adc
movsl
inc
int3
push
inc
jnp
or
test
pop
movsb
das
mov
add
and
sub
and
cmp
cli
imul
xchg
repz
fnstenv
sub
repz
sub
in
rcr
push
and
xchg
xchg
mov
push
push
out
xor
movsb
popf
mov
inc
xor
in
or
cli
push
dec
in
int3
je
ss
pop
jge
stos
or
mov
pop
xlat
in
mov
dec
enter
xchg
ret
xor
mov
stc
sbb
fnstenv
push
decl
jecxz
addb
mov
xor
xor
pop
lods
daa
jmp
sbb
lret
mov
fisubrs
stos
stc
inc
and
push
jno
mov
sbb
dec
adc
push
mov
outsb
pop
cmpsl
rdmsr
ljmp
ret
roll
pushf
pop
xor
rcl
jl
fsts
cli
decl
inc
inc
hlt
int3
xor
push
pop
inc
mov
test
and
ds
sub
movsl
sbb
popa
pop
inc
addr16
lds
mov
jmp
sub
rorb
or
inc
jp
and
push
ljmp
jae
loope
ss
je
aas
fiaddl
adc
fisubrl
adc
movsb
and
jnp
dec
push
movsl
xlat
repz
test
pop
pop
xchg
mov
insl
cwtl
xor
imul
loopne
inc
xor
push
pop
scas
sti
xor
cmp
icebp
mov
jno
outsl
and
dec
push
bound
add
add
ss
icebp
addr16
pop
dec
flds
ds
push
jae
adc
outsl
push
and
fisttps
sub
data16
push
mov
cmp
jb
mov
add
sbb
ficoms
popa
jge
insl
and
test
sbb
sbb
xchg
ficoms
jno
roll
shrl
add
xor
jno
lock
inc
push
cmp
jecxz
lods
mov
aaa
popf
xor
xlat
adc
sbb
xchg
cmp
outsl
and
fdivl
cli
test
mov
and
mov
ljmp
sbb
or
lahf
nop
dec
pop
sub
shr
pop
xchg
lret
je
inc
or
push
adcb
jno
mov
lahf
jmp
push
lcall
rorb
adc
sub
out
sub
movsb
rorb
jecxz
mov
fldcw
movsb
xchg
pop
xor
push
sub
mull
mov
jns
shrl
jmp
or
adc
pushf
mov
xchg
std
jp
jns
or
lahf
sbb
repnz
inc
hlt
insb
pop
rorb
int3
adc
cmpsl
jle
jbe
daa
cmp
fwait
imul
cmp
push
xlat
js
cwtl
or
push
jno
or
pushf
shll
jle,pn
xchg
paddusw
pop
test
xor
lea
out
loope
push
pop
fstpt
mov
xchg
addl
lock
jno
xor
insb
faddp
pusha
xchg
xchg
and
ret
aaa
aaa
nop
popa
stc
test
or
push
xlat
fadds
xchg
or
mov
cmp
pop
data16
sbb
std
clc
lahf
pop
add
cmp
lds
arpl
das
mov
fwait
xchg
dec
add
xlat
stos
inc
xor
rclb
inc
rcr
xor
xchg
mov
mov
push
lcall
ret
loope
adc
jge
pop
js
sbb
and
push
in
dec
fstpt
adc
sti
test
shlb
fs
jge
xchg
sahf
inc
stc
mov
add
push
aas
hlt
xor
sbb
cvtpi2ps
data16
xchg
addr16
ja
sub
mov
outsl
orl
insb
insb
add
push
push
das
cli
add
push
or
sub
pop
mov
imul
mov
sbb
insb
push
xlat
mov
sbb
ja
pop
pop
push
mov
mov
sbb
cmp
mov
ja
test
sbb
arpl
mov
push
enter
add
fstpt
aas
in
jmp
loope
mov
mov
mov
loop
cs
sarb
cmp
aam
xchg
cmp
lock
pushl
sbb
cmp
in
jl
inc
test
push
cmp
lahf
jp
cs
sub
jp
push
orb
xor
xchg
push
xlat
lea
lahf
push
das
sbb
test
adc
dec
in
cmp
mov
sub
and
mov
inc
mov
dec
xchg
icebp
ret
fistpl
aad
aas
ds
xor
inc
xchg
xorb
leave
add
fptan
inc
and
sub
or
test
push
mov
cwtl
inc
ds
out
gs
int
jnp
pop
sub
icebp
sub
cwtl
cmpsl
gs
gs
out
dec
xchg
popf
fld
dec
movsb
add
daa
sub
icebp
ja
mov
xlat
test
movsl
mov
inc
pop
push
xor
cmp
xor
in
inc
lahf
lds
sub
jle
cmpb
enter
shrl
sbb
pop
fldcw
fcmovnb
into
cmp
inc
cltd
inc
jp
enter
sbb
push
add
and
pop
inc
jl
adc
dec
cmp
mov
fdivrl
ja
fld
push
arpl
lea
outsl
inc
movsb
jecxz
imul
mov
ja
out
push
or
lods
arpl
aam
popa
int3
or
fcmovnb
repz
and
out
add
cmp
push
cmc
outsl
or
lret
push
xor
movsb
cwtl
sub
xchg
int3
in
xchg
in
imulb
repz
fisubrs
outsb
jmp
inc
sub
mov
lods
lcall
jne
push
xchg
in
stc
test
cmp
jae
dec
jb
aad
int
jp
inc
pop
adc
pop
mov
adc
push
dec
ret
fsts
outsb
jge
ljmp
movsl
push
mov
lea
cltd
nop
out
add
lret
lcall
sbb
mov
sbb
and
fmul
js
xchg
ret
or
lret
xchg
gs
mov
jb
jae
adc
cmp
std
fidivrs
addl
inc
xchg
cmpsl
jmp
push
imul
jne
jne
jmp
ljmp
dec
jmp
fs
xor
adc
sub
sbb
mov
fnsave
bound
js
xlat
leave
inc
xchg
adc
pop
push
fisttpll
jge
call
fldt
js
mov
push
dec
mov
mov
adcb
and
dec
and
and
aas
adc
jne
pop
mov
add
fs
call
cmpsb
pop
xchg
dec
add
fcmovb
xlat
or
lret
dec
pop
movsb
aaa
cmp
mov
adc
lods
popa
xchg
lret
mov
sbb
fisttpl
lock
sub
dec
fs
xchg
movsl
jecxz
loop
push
sbb
cmpsb
adc
xchg
and
fsub
dec
lock
popf
cmp
xchg
push
inc
test
dec
pusha
pop
dec
scas
lods
mov
jne
lods
ljmp
sub
bound
lret
into
push
xlat
addr16
cmp
jno
js
add
aas
aad
inc
std
fs
mov
nop
pushf
sub
push
jge
xorb
mov
jge
jmp
out
inc
loope
sub
push
stos
and
xlat
sbb
mov
sbb
push
stos
enter
out
xchg
mov
rorl
dec
adc
stos
mov
aam
xchg
test
pop
movsl
fsub
lahf
rcll
insb
add
sub
sbb
out
jo
dec
adc
pop
subl
sti
mov
cs
in
fwait
lods
add
xchg
add
pop
pop
je
gs
addr16
pop
ret
cmp
lret
xchg
push
movl
xlat
call
jg
mov
movb
inc
pushf
pushl
ret
shlb
enter
sbb
add
stos
push
notb
xchg
dec
stos
imul
das
stos
lock
jg
pop
rorl
clc
rorb
jp
xor
or
jecxz
fisttpl
cmpsl
cs
lcall
jne
ret
xor
sbb
mov
mov
xor
xlat
mov
sub
cli
into
xchg
outsb
jnp
sub
mov
and
hlt
cmp
inc
xchg
lret
pop
sub
jnp
or
fildl
xor
add
fildl
dec
xlat
dec
jno
xor
outsb
popf
andb
jle
xlat
cmp
stos
fcoms
leave
jno
fisttpl
cld
inc
leave
in
xchg
or
lahf
mov
pop
fucomi
rcrb
test
bound
jns
in
pop
jns
sbb
aaa
push
adc
loop
shrl
add
pushf
xor
xor
push
jg
pop
or
ret
imul
cld
stc
add
ds
jle
cmp
push
push
dec
jno
and
sbb
pop
sbb
arpl
dec
daa
push
sarl
fstps
jp
xchg
xchg
dec
ficoms
and
movl
dec
aam
pop
or
stos
jns
add
faddl
jbe
dec
pushf
movsl
je
cs
or
inc
mov
repz
push
loopne
lea
jno
cmpsl
xchg
ss
add
mov
std
rcrl
cmp
jns
jg
lcall
popf
fldcw
test
push
aam
xor
sbb
and
lea
out
inc
out
mov
xor
je
adc
cli
push
shll
rcrl
sub
outsl
fmull
jne
mov
xchg
xlat
imul
mov
insl
pop
lret
pop
xchg
xor
sarl
cmp
fdivs
ret
push
insl
enter
xor
and
testb
test
rolb
pop
xlat
pop
push
xchg
cwtl
xor
pop
aam
pop
dec
std
ja
lods
aaa
bound
icebp
or
pop
popa
add
cld
out
scas
pop
pop
xlat
adc
jae
mov
stos
leave
jmp
jae
inc
xlat
lcall
stc
pop
xor
cmp
ljmp
mov
cmp
in
or
movsl
add
stc
aad
dec
jg,pt
xor
cs
pop
xor
ror
cmp
fistpl
test
dec
push
xchg
movsb
xlat
push
iret
ret
fisubl
jns
or
dec
push
cmpsl
inc
test
xor
xchg
pushf
rcrl
mov
xchg
scas
fucomp
fxch
push
inc
jp
xor
imul
pop
std
and
mov
cmp
mov
dec
icebp
xlat
push
jp
rcrl
add
push
pop
outsl
vmovhpd
rorl
dec
subl
outsl
jl
pop
in
stos
mov
popa
mov
mov
jne
jge
push
and
fildl
cmp
test
jmp
adc
ja
push
nop
add
pop
mov
fidivrs
mov
pusha
sub
push
in
add
cld
mov
lahf
jns
daa
fidivrl
fimuls
sub
mov
adc
lcall
ficompl
fwait
rcrb
dec
and
subb
adcb
pushw
push
lret
adcb
push
enter
jae
xlat
mov
js
push
xor
les
lcall
dec
fucomi
cmp
in
imul
xchg
pop
lea
enter
jo
lods
repz
add
jmp
shlb
fistl
mov
mov
dec
pushf
arpl
pop
rcll
dec
repz
xchg
jmp
or
insl
or
arpl
andl
movsb
or
pop
addr16
repnz
lcall
xchg
cmp
daa
and
add
and
jecxz
fbstp
aaa
xchg
imul
lret
cmp
dec
jb,pn
mov
insl
mov
or
pop
lcall
cmp
rclb
push
dec
mov
enter
dec
inc
or
mov
push
ja
addl
repnz
lret
je
mov
sub
fwait
push
imul
xorb
pop
xlat
inc
sbb
ret
sbb
mov
and
pop
bound
push
mov
sbb
pop
inc
aam
xor
jnp
pop
std
jl
xchg
cmp
std
add
lcall
inc
testb
jno
dec
ljmp
hlt
cmp
push
cmp
or
jns
outsb
xchg
and
jns
cmp
int
adc
leave
nop
out
lretw
stos
push
xchg
subl
out
mov
arpl
cmpsl
scas
push
mov
inc
cmp
repz
or
ret
add
mov
sub
test
fistpl
cli
out
adc
pop
xor
push
out
mov
cmp
fnstenv
jg
popf
push
cmp
adc
mov
push
mov
xor
shll
idivb
adc
cmp
dec
and
scas
push
ja
pop
mov
ficomps
inc
cmpb
bound
pop
fdivrl
mov
and
pop
xor
sbb
ss
jae
fld
dec
push
stc
daa
push
scas
mov
je
inc
ret
dec
imul
push
dec
cmp
inc
out
ja
and
cmp
mov
imul
xlat
fnstsw
sbb
in
jbe
adc
cld
test
and
cmp
fxtract
dec
std
inc
inc
ret
push
dec
sbb
gs
data16
negl
scas
stc
jns
iret
in
insb
stos
popf
cmp
enter
mov
inc
and
cli
push
sub
pop
mov
roll
cs
jmp
popf
nop
sub
or
sbb
xchg
test
clc
pop
push
inc
loop
in
xor
insl
fsub
filds
xlat
shrb
js
adc
js
fcoml
scas
jnp
or
ljmp
fmuls
xor
cmp
cmpsb
and
fsubrs
mov
push
ss
push
xor
call
and
andb
xor
jbe,pn
sbb
scas
adc
jl
pop
scas
add
and
mov
pushf
mov
cli
outsb
jbe
addr16
lret
fsincos
or
mov
mov
out
adc
add
push
movsb
out
mov
cmp
jmp
test
ficoms
jns
cwtl
xchg
push
call
and
and
and
mov
and
xor
pop
dec
jl
pop
test
jbe
fs
xchg
repnz
sub
ja
lods
xchg
and
push
shr
cmp
stos
or
mov
push
xlat
dec
xchg
and
pop
xor
out
jne
mov
jle
insl
add
inc
cmp
jns
sbb
push
and
leave
nop
jb
xlat
xchg
arpl
mov
xor
into
pushf
xor
sarb
inc
aam
xchg
sub
insl
jne
gs
xor
repz
dec
fstps
pushl
mov
test
divb
cmp
xchg
cs
or
jb
sub
sbbl
cli
adc
cmp
push
sub
cmp
repz
push
in
outsb
xchg
psadbw
test
fxch
daa
sbb
push
pushf
aam
lcall
in
mov
into
xor
cmp
testl
add
sbb
sbb
dec
and
mov
pop
mov
add
dec
mov
mull
mov
insl
fwait
jns
lahf
cmp
fldenv
fld
push
xchg
pop
ficompl
xchg
adc
movsb
aaa
and
sbb
fcompl
mov
ret
movsl
test
jne
bound
xchg
and
adc
int
jae
push
fnstcw
fsubp
cmp
add
pop
test
inc
orl
cmp
push
aam
fldcw
adc
aaa
call
xorl
int
inc
add
mov
cmp
stos
addr16
xor
dec
pop
cli
insl
sti
loope
rol
push
pop
sub
call
jns
enter
out
std
cmp
call
cmp
mov
push
mov
sbb
pop
inc
jae
xlat
cmp
popf
fldcw
fwait
loop
test
sub
pushf
and
dec
pusha
dec
and
push
or
sbb
xor
xchg
sti
das
mov
cmp
sub
sbb
clc
movsl
into
jne
std
stc
xorb
nop
ss
loop
jmp
mov
push
mov
cmpsl
push
aam
mov
push
xlat
bound
fsts
lock
cmc
push
imul
xchg
aas
and
outsb
and
sti
dec
and
inc
cli
orl
jns
js
inc
jecxz
int
mov
cmc
or
aad
repz
arpl
xchg
hlt
dec
mov
sub
out
and
add
or
leave
sub
push
adc
xchg
mov
pusha
dec
xchg
pushf
xchg
xlat
nop
sub
shr
hlt
push
fsts
dec
add
push
outsl
sbb
dec
xchg
push
fbld
popf
pop
mov
adc
std
cmp
jp
mov
in
sub
jle
cmpsb
jns
xchg
mov
pop
jge
cld
mov
mov
mov
les
lcall
fldcw
jno
mov
shrb
sbb
jle
rcll
iret
ret
frstor
mov
out
addr16
inc
pusha
aad
and
mov
inc
mov
out
call
mov
mov
ljmp
xor
pop
mov
sub
cli
push
adc
dec
inc
and
inc
cmpb
jo
push
loopne
rorl
push
adc
jae
and
jl
mov
lods
out
pop
and
mov
and
push
sbbl
mov
outsl
fisttpl
ret
xchg
andl
test
add
xor
test
sbb
std
lods
mov
imul
scas
jno
dec
stos
pop
iret
popf
xchg
fisubrs
dec
xchg
test
dec
decb
push
sbb
xor
and
mov
lahf
jecxz
xchg
jbe
xor
mov
push
push
mov
xlat
daa
ja
mov
mov
inc
adc
xchg
xor
jmp
xchg
push
loop
add
push
mov
jns
imul
dec
imul
pop
mov
xor
outsb
movsb
mov
mov
pop
imul
rol
xchg
enter
pop
cmp
mov
ret
pop
adc
pop
cwtl
mov
xorl
fidivrs
push
lods
xchg
cmpl
jp
pop
mov
sbbb
cmp
imul
or
xor
push
mov
outsb
aad
pop
movsl
hlt
and
fistpl
push
or
or
adc
cld
test
xlat
ja
dec
cmp
js
arpl
in
cmp
test
xchg
lahf
or
aad
or
xor
dec
jno
inc
push
idivl
push
sti
pop
lahf
xchg
fdiv
imul
sbb
xlat
ficoms
sub
dec
imul
push
jo
mov
dec
xor
lods
add
andb
jecxz
pop
sbb
cld
push
aam
add
in
aam
aaa
mov
stc
mov
fld
out
sbb
jno
fcmovnb
sbb
jnp
pop
push
lret
bound
fwait
push
sbb
stos
cs
xchg
xchg
mov
jae
lods
mov
xor
daa
jae
jge
and
pop
into
xor
jns
das
ret
push
lods
xchg
in
jp
repz
fildl
fdivrp
std
shlb
imul
lret
pop
lock
stos
xchg
push
repnz
rcr
aaa
jbe
add
fnsave
int3
cmpsb
outsb
adcb
cmp
shrb
iret
lods
aaa
push
push
jne
enter
inc
jl
pop
test
scas
xchg
aam
sti
popa
jp
fistl
pop
lcall
fnstsw
xlat
push
imul
popa
jnp
sbbl
dec
rorb
xor
mov
rclb
out
jecxz
test
push
lret
inc
fists
cmp
cmp
adcb
push
xchg
xchg
mov
sbb
sub
fchs
pop
jbe
cmp
xlat
rolb
out
int3
cli
lcall
test
push
inc
inc
jne
xchg
jb
mov
xor
int3
push
xchg
ficompl
xchg
push
addr16
imul
lods
mov
popf
jl
loope
dec
cmp
add
movsb
and
mov
imul
jbe
xchg
or
js
xchg
xchg
dec
pop
cwtl
adcb
jg
cmpsl
mov
test
jg
jecxz
mov
and
mov
push
push
lods
xor
adc
int3
mov
push
pushf
sbbl
push
pop
xchg
sbbl
mov
test
les
sbb
and
nop
dec
dec
sbb
jecxz
mov
stc
iret
hlt
repnz
or
cs
xchg
mov
mov
fldenv
inc
mov
xlat
pop
pop
test
daa
cmp
push
fcomi
cmp
in
imul
scas
add
push
cmp
jne
pop
sub
push
pop
and
sub
sub
mov
mov
mov
xor
lea
push
fistpll
incl
xchg
mov
das
mov
dec
jo
add
pushf
xor
jne
insb
inc
cmpsl
loope
inc
pop
aaa
xor
fldenv
xor
jbe
jp
xor
mov
imul
or
mov
sbb
movsb
and
adc
xorl
mov
scas
pop
shrb
out
push
cmp
popf
xor
mov
fistpl
inc
icebp
mov
inc
mov
icebp
lret
orl
and
imul
stc
xchg
push
dec
fdivs
flds
inc
push
add
stos
std
or
push
cmp
clc
repnz
dec
stos
fldt
and
mov
dec
and
sbb
jae
adc
mov
hlt
sub
inc
mov
cld
dec
push
adc
sbb
ja
xlat
repnz
xchg
lods
jmp
xchg
pop
imul
ja
imul
pop
cmpsl
subl
test
and
mov
call
xchg
adc
notl
pop
test
js
pop
mov
mov
push
mov
pop
scas
sbb
push
inc
in
shll
add
and
push
xchg
cmp
imul
adcb
jno
cmpsl
out
mov
push
imul
pushf
pop
push
pop
test
mov
sub
jle
adc
pop
sti
inc
insb
mov
jno
loopne
xor
gs
les
pop
add
test
scas
mov
mov
dec
movsl
test
mov
push
outsb
or
push
and
xor
pop
fwait
popf
sub
inc
jns
fldcw
out
mov
les
xchg
fsts
aas
push
bound
push
sti
add
mov
ss
scas
mov
aad
pop
mov
xor
icebp
push
pop
mov
das
jne
shl
mov
cmpsl
adc
lods
mov
cmc
lea
mov
je
lea
lcall
andb
xor
pop
inc
pop
sahf
mov
cmp
push
inc
xorl
stos
and
xchg
enter
adc
das
or
ds
pop
add
dec
je
movsl
stos
mov
mov
sti
add
mov
sub
fstps
inc
test
pop
sarl
orl
js
insb
mov
stos
ror
jp
sbb
dec
jns
add
lcall
leave
sub
xchg
fmuls
dec
push
dec
mov
cs
sub
loop
sub
jp
pop
repz
ljmp
sub
mov
dec
jns
pop
test
inc
faddp
sub
dec
movsl
aad
call
fstpt
or
mov
nop
mov
dec
or
sbb
mov
clc
mov
inc
pop
std
and
push
ficoms
ljmp
popa
fwait
xor
sbb
aam
mov
push
sbb
mov
mov
and
out
jno
sub
dec
pop
inc
cmp
sbb
movsl
jl
dec
inc
dec
pushf
inc
int
and
dec
mov
mov
pop
xlat
mov
pop
addl
mov
fwait
or
fdivl
into
add
jo
movsb
sub
fwait
push
movsb
sahf
lret
shlb
xor
ljmp
cmpsb
incl
outsb
adc
mov
push
imul
pop
pop
jb
mov
mov
cld
dec
dec
cmp
xor
mov
cmp
stos
divl
stc
enter
aad
scas
adc
cs
mov
cmp
iret
xor
pushf
jne
out
jbe
cmc
jecxz
lcall
jle
js
and
and
in
nop
inc
pop
ljmp
xchg
jns
fisttpl
xor
mov
mov
je
nop
adc
out
lret
cmp
fldt
xor
jbe
xor
push
cmp
out
and
icebp
pop
push
push
sbb
lds
or
mov
int3
cmp
adc
sti
pop
xchg
adc
jne
mov
ret
jns
cmp
and
push
ljmp
sbb
adc
popf
or
mov
sbb
scas
roll
dec
inc
stc
ret
dec
mov
outsb
xchg
sbb
pop
fldenv
imul
mov
adc
mov
dec
jns
and
xor
and
subb
mov
imul
js
or
cli
mov
pop
xor
clc
mov
dec
and
stos
xchg
dec
test
lret
mov
stc
xor
movsl
ret
es
lods
mov
lds
or
push
and
fcmovnb
sbb
jp
ja
xor
adc
dec
adc
mov
pop
inc
icebp
bnd
push
push
add
subb
lahf
cmp
dec
dec
and
xlat
fidivrl
pop
imul
push
jecxz
or
clc
mov
xchg
hlt
roll
xor
mov
mov
cmp
push
xlat
adc
hlt
decl
bound
pushf
add
fstp
cmc
icebp
xchg
aam
mov
and
ret
jmp
sbb
fcmovu
or
pushf
push
xor
enter
fldcw
cs
sub
or
mov
mov
push
fildl
and
adc
shll
in
fs
fcmovnu
inc
cmp
xlat
push
insl
jno
push
sub
shll
mov
fs
lds
cmp
pop
scas
jae
dec
mov
push
es
adc
mov
xlat
or
call
sti
sahf
mov
mov
mov
mov
call
jge
xor
mov
stc
dec
cmp
outsl
push
push
cli
lahf
das
or
imul
jl
sub
enter
movsb
andb
pop
or
testb
lcall
xor
ljmp
cld
inc
ret
into
cmp
flds
xor
jg
aaa
mov
jno
sub
xchg
fidivrl
mov
xchg
and
dec
pand
insl
push
or
jae
ret
data16
or
mov
mov
ror
pop
call
add
cmpb
lret
fidivl
pop
ficoml
movsl
jmp
push
pop
stc
mov
jecxz
fsubr
call
push
jle
xlat
sbbl
mov
jge
xchg
push
mov
or
fsubl
push
icebp
out
sbb
cmp
gs
lahf
xor
insb
add
adc
fidivl
mov
arpl
andl
push
es
or
cwtl
xchg
pushf
jp
xchg
sub
cmp
fistpl
cmp
mov
add
sbb
pop
inc
cmpsb
mov
in
cmpsl
ss
test
xor
out
loopne
pop
scas
into
in
mov
mov
daa
cs
stc
xchg
mov
cmp
add
xchg
cmpsb
mov
xor
pop
rcr
inc
push
les
dec
adc
sub
xor
inc
aaa
sbb
mov
pop
xchg
mov
lret
push
lock
inc
xchg
mov
movsb
xlat
loop
fstpl
stc
sbb
mov
cmp
jp
or
jg
lret
ljmp
cmpsl
shl
lock
dec
mov
jbe
and
call
mov
xchg
mov
add
pop
int3
adc
pop
daa
sub
or
outsl
cwtl
flds
add
sub
mov
mov
cmp
cmp
jnp
stc
cld
js
scas
fcoms
cmp
pop
cmp
imul
imul
pushf
mov
iret
js
mov
stc
fsubr
cmp
inc
push
dec
sbb
mov
cmp
out
cmpsl
jle
jl
enter
les
mov
jae
and
sahf
lahf
add
test
mov
loope
mov
jp
jno
dec
call
stos
xlat
cwtl
add
xchg
sub
and
lahf
adc
add
icebp
es
pop
xor
gs
mov
mov
test
cmp
nop
daa
cwtl
imul
push
sbb
lods
iret
sub
bound
sbb
arpl
sub
xor
and
lea
aad
mov
add
fcomi
xchg
lods
xor
pop
lcall
inc
sub
scas
xchg
inc
test
mov
mov
jae
pop
and
pop
or
or
into
pop
fidivrl
inc
jno
out
sbb
ljmp
js
jmp
inc
lahf
sbb
sub
mov
inc
add
adcb
pushf
pop
jae
enter
incl
aam
decb
stc
pushf
inc
int3
cmp
cmp
mov
out
fs
mov
call
dec
adc
xor
iret
cld
pop
xor
clc
fsub
int
and
out
push
dec
push
sub
test
jp,pn
sbb
jo
mov
cld
call
pop
fstps
xor
xor
test
push
ljmp
mov
jb
and
scas
jecxz
cmp
xchg
push
jns
rol
and
call
stos
es
filds
inc
enter
or
test
fdivrl
lds
sbb
leave
pop
push
jmp
adc
jns
xlat
push
adc
dec
sub
repnz
icebp
adc
leave
mov
in
ret
lret
xchg
mov
stos
popf
addr16
pop
and
inc
jno
adc
popf
orl
add
into
dec
or
testb
sub
xor
or
or
cmp
fnstcw
mov
xlat
pushf
ret
ja
push
les
pop
enter
stc
mov
sub
lret
xor
mov
ja
sbb
mov
add
fsubs
mov
lods
notl
or
and
iret
or
js
xor
mov
ret
push
fistpl
cmc
mov
fsts
jae
clc
push
movsb
pushf
cmp
ljmp
jmp
or
cmp
inc
fnstenv
and
outsl
jns
mov
and
ret
jo
mov
ficoms
shlb
das
mov
sbb
add
stos
ret
or
int
je
std
repz
enter
xchg
fistpll
popf
mov
and
mov
sbb
inc
cmp
jno
push
xor
jbe
mov
and
push
std
jp
fsts
xlat
es
mov
cmp
imul
pop
push
xor
xchg
aad
mov
xor
ret
add
add
aad
sbb
fwait
pop
js
dec
jg
outsb
shlb
iret
dec
movsb
fdivrl
mov
xchg
out
icebp
stos
jns
push
xlat
cmpl
pop
ret
pushf
je
inc
jo
mov
sub
stc
jp
adc
jecxz
jne
mov
xchg
mov
cltd
ret
and
push
sti
pop
out
test
and
and
sub
idivb
neg
cs
cmp
fcoms
and
rorb
xlat
cwtl
stos
mov
adc
add
sub
xor
pop
xchg
hlt
movsb
mov
insl
movsl
out
xchg
or
sub
sbb
dec
pop
orb
push
jge
mov
push
roll
pop
sbb
out
or
or
xor
push
je
roll
jge
call
push
mov
xlat
lock
xchg
out
xor
cmpl
pushf
mov
js
fldt
dec
xlat
enter
mov
xchg
dec
lds
test
jns
dec
es
sbb
les
test
or
negb
ficompl
pop
pop
pop
push
andl
fldcw
lea
iret
lahf
enter
ficoml
sahf
mov
cmpsb
sub
pop
out
test
or
mov
enter
sub
xor
ljmp
mov
xchg
xchg
stos
stos
sub
pop
xor
pop
ljmp
push
testl
mov
dec
ja
pusha
cmp
subl
cmp
into
pusha
pop
mov
cwtl
or
or
sahf
mov
inc
test
push
pusha
fstpt
push
cwtl
add
push
mov
jp
inc
incb
add
cmc
decb
sub
mov
cmpsb
pop
dec
ret
fcmovne
or
fmulp
sbb
out
cmp
push
nop
dec
jg
insl
test
sub
sub
cmpl
arpl
jae,pn
mov
add
jb
jl
jne
sti
mov
jge
sub
add
hlt
dec
faddl
mov
out
xor
in
inc
outsl
fimuls
xchg
push
scas
lods
xchg
fldt
clc
cmpsl
xor
fsubs
scas
adcl
mov
sub
sbb
int3
mov
or
gs
lahf
dec
pushf
sub
xor
cmp
sub
fstps
cmp
leave
jp
ds
adc
sub
jmp
mov
and
dec
cmpsl
insb
add
nop
stos
int
shl
mov
aam
mov
roll
cmp
gs
or
aad
imul
cmc
in
loopne
jno
sysret
adc
push
call
xor
cmp
mov
cmp
gs
push
prefetchwt1
or
xlat
loop
test
fcoms
cltd
enter
test
divl
pop
in
shrl
mov
leave
dec
loop
add
cmc
int3
cmp
ja
pushf
enter
add
add
sub
data16
arpl
sbb
push
aam
cmp
add
jne
mov
lret
rolb
call
inc
mov
cmpsl
daa
mov
mov
pop
or
jb
cmp
imul
and
lcall
push
js
sbb
cmp
divl
imulb
inc
roll
mov
idivb
inc
cmp
fsincos
aaa
jae
insb
stc
nop
xchg
jo
shrl
sbb
mov
push
lret
jmp
mov
and
in
mov
add
scas
dec
mov
jl
mov
jl
mov
and
push
pop
les
xor
xor
cli
dec
xor
sti
orb
jp
leave
jb
xor
and
jns
jnp
mul
sahf
or
test
cmp
mov
sbb
or
mov
imul
adc
pop
stc
xlat
out
sub
mov
loope
jae
rcrl
fimuls
movsl
rclb
xchg
inc
imul
clc
jnp
repnz
and
mov
mov
sub
push
loop
xchg
aaa
and
mov
mov
cmpsb
icebp
subb
xchg
repz
stc
xchg
sub
test
repz
inc
es
jmp
fucomi
jmp
pop
jb
fisubs
mov
push
sbbb
leave
in
aam
out
add
jnp
pop
xchg
add
cmp
cmp
fisttps
dec
in
lock
pop
sub
stos
fwait
mov
inc
cmp
add
imul
stos
or
mov
rcll
int
xchg
pop
stos
or
dec
test
add
cmp
bound
jae
mov
cli
sbb
mov
sub
gs
jl
mov
xchg
xchg
push
imul
enter
xchg
jo
mov
icebp
and
pop
xor
dec
sbb
push
ret
out
mov
std
shll
mov
addr16
loop
pop
mov
shlb
mov
dec
subb
popa
xchg
hlt
dec
add
jle
xor
ficoml
pop
sarl
mov
sbb
mov
jbe
sbb
fnstcw
fdivrl
pop
jp
pop
cld
fchs
push
arpl
pop
xor
sti
and
pop
jns
pushf
mov
pop
test
cmp
fisttpl
push
cmp
inc
in
rorl
and
mov
xchg
push
inc
stos
cmp
mov
scas
sub
jbe
outsb
mov
and
es
out
mov
fcmovnbe
outsl
fdivp
fwait
pop
lret
pop
cmp
pop
cld
lret
repz
push
cmpb
xor
pop
push
dec
push
xchg
pop
xchg
cli
fstp
jge
rcll
fisubrs
mov
cli
xchg
xchg
mov
cld
push
cmp
cli
out
pushf
fiadds
mov
cs
xchg
shl
push
negl
cmp
cmpsl
adc
push
pop
and
and
movb
cmp
dec
addr16
imul
jae
mov
stc
xchg
es
xchg
dec
ljmp
jl
inc
and
fdivrs
mov
xlat
jbe
jno
or
pop
sbb
inc
imul
jmp
out
and
xor
pusha
and
cmp
push
xor
fists
pop
xor
and
nop
popf
xchg
lods
push
out
movsb
movsl
push
adc
nop
pop
sbb
sub
jbe
ja
orl
fildll
and
test
cmpsb
and
mov
mov
mov
fcmovnb
mov
movsl
mov
xchg
into
scas
dec
jp
test
std
fwait
or
jbe
dec
cli
js
push
fsts
mov
int3
dec
sbbb
xlat
stos
jns
cmp
push
add
xchg
ja
flds
adc
cmp
orl
ljmp
inc
in
jmp
mov
stos
dec
sbb
xlat
xchg
je
or
int
sbb
cld
fdiv
push
dec
inc
lods
push
idivb
add
cmp
ret
leave
add
push
outsl
cmp
sub
ret
jmp
sbb
cmp
popa
sub
mov
imul
push
cmpl
pop
jbe
jae
popa
or
addl
enter
lret
iret
das
stos
pop
addr16
movsl
insl
mov
jle
or
adc
orb
jb
adc
or
ret
dec
push
fisubrs
jae
adc
or
jl
pop
mov
xchg
rorb
das
imul
in
call
add
pop
mov
and
fstpt
in
jae
icebp
cmpsw
xor
stos
push
cmp
xor
push
dec
dec
lods
mov
mov
das
repz
outsl
stos
dec
pop
cmc
cld
push
enter
nop
lea
sbb
int3
shlb
fisttpl
add
sub
push
add
movsb
scas
dec
dec
stos
push
push
mov
cmp
sub
mov
hlt
loop
push
mov
cs
aad
popa
fs
sub
xchg
sub
jae
or
and
xor
mulb
das
or
mov
jp
xlat
sub
cmp
pop
or
pop
cs
pushf
or
inc
push
sub
jae
stos
insb
jp
jne
xchg
cmpsl
add
sub
pop
jbe
jbe
inc
outsl
jle
mov
or
xlat
push
cwtl
shlb
mov
push
pop
adc
test
cmp
into
movsl
jae
das
adc
jbe
int3
push
ror
ds
and
xchg
movsl
leave
push
mov
jmp
and
adcb
add
cs
dec
mov
adc
mov
mov
stc
xchg
dec
inc
ja
push
pop
icebp
adc
fcmovnb
cmp
push
xlat
lods
mov
push
dec
pop
int
nopl
mov
shl
in
aaa
pop
cld
xlat
pop
es
icebp
jl
lahf
dec
cmp
xchg
sbbl
in
aas
sbb
addr16
orb
add
and
add
stos
dec
add
mov
rol
movsl
xchg
rolb
mov
and
mov
movsb
pop
int
cmp
mov
jb
jle
and
xor
cltd
jns
ds
adc
icebp
inc
dec
lods
lcall
push
sbb
sbb
movsb
es
jp
pop
push
ja
ret
jnp
das
dec
adc
jnp
sub
add
mov
inc
test
hlt
mov
ret
sti
fistpl
add
out
jp
push
mov
pop
outsb
mov
push
pop
je
xorl
cld
dec
cmp
jge
add
add
xor
std
xor
cs
mov
or
fs
pop
dec
flds
shlb
xlat
push
sbb
repz
pop
adc
and
mov
lock
fwait
orb
cmp
ljmp
push
fiaddl
mov
dec
mov
subb
push
dec
test
incl
sub
roll
cli
ljmp
fisubrl
mov
jmp
push
loop
xchg
ret
xor
pop
je
ja
test
ds
inc
pop
sbb
shl
mov
mov
and
pushf
lret
aas
imul
push
jne
lds
xchg
sbb
aad
sbb
push
hlt
pop
das
dec
jecxz
dec
add
fsts
rorl
jp
lea
pushf
xchg
pop
lods
lods
jb
sub
or
or
ror
negb
and
inc
jp
cli
sub
addr16
insb
inc
inc
sbb
add
inc
jp
mov
push
ret
lds
cmp
mov
mov
inc
push
dec
sub
test
dec
dec
imul
loope
fnsetpm(287
les
sub
mov
xor
out
aam
mov
test
or
nop
ds
outsb
sub
jns
dec
pushf
mov
out
fcoml
mov
fstpt
push
push
mov
subl
insb
lcall
or
dec
push
in
cwtl
pop
adc
outsl
shlb
xchg
jmp
or
xlat
in
lahf
xchg
pop
outsl
lcall
arpl
and
daa
mov
lock
aad
sub
sub
jmp
pop
das
pop
in
fisubrl
and
xchg
xchg
dec
add
inc
jp
inc
fldcw
add
je
pop
pop
mov
push
js
jbe
pop
pop
jns
scas
outsl
inc
xchg
sbb
pop
cmp
mov
sub
push
cmp
call
je
rorl
insb
cmpsl
repnz
mov
out
dec
rcll
std
pop
mov
dec
xchg
movsb
gs
push
int
pop
jns
jno
pop
pop
fucomp
pop
fisubs
add
mov
inc
aaa
sbb
xor
cmp
pop
xchg
fnstcw
divl
sbb
jae
dec
rcr
jge
test
out
fs
out
sub
ret
or
fisubl
jmp
fs
roll
outsl
daa
push
inc
mov
jnp
or
fisttpl
int
movsl
shrl
xlat
cmp
sub
mov
push
dec
jmp
dec
pop
sub
and
dec
cli
pop
mov
sbb
xor
push
push
subb
fidivrl
inc
mov
icebp
in
ficompl
lret
call
dec
sub
insb
and
inc
mov
test
cmp
add
pop
xchg
pop
aaa
mov
cltd
das
cmp
dec
subl
add
lock
icebp
pop
outsb
ja
xchg
fcmovu
mov
add
mov
and
sbb
in
jne
xchg
add
lods
movsb
add
mov
push
je
adc
outsl
incb
jno
mov
jmp
stos
pop
mov
insl
dec
cs
aaa
or
sbb
ret
rcrb
lret
mov
mov
jmp
jo
mov
lods
xchg
add
cmp
das
inc
xchg
lock
pop
popf
and
test
xchg
cs
mov
jns
cmc
sub
imul
out
mov
push
mov
mov
fiaddl
test
js
sbb
stos
mov
lcall
cwtl
stos
notl
sub
dec
jl
cmp
and
xor
push
fistl
mov
xchg
xchg
imul
sbb
dec
cmp
daa
jl
fcmovnu
xor
adc
add
sbb
sbbl
mov
int3
in
jno
xlat
mov
jns
pushf
dec
jb
subb
rorb
stos
ret
xchg
push
out
push
jno
xor
outsb
das
jno
sbb
fildl
and
and
ss
jl
sbb
fsts
mov
stc
jecxz
push
add
push
idiv
cmp
pop
nop
adc
and
xchg
or
mov
notl
jns
std
mov
sub
cwtl
fwait
jmp
jmp
pop
cmp
jge
insb
lret
lock
xlat
scas
add
sub
mov
jne
pop
fwait
fs
das
or
or
js
and
shll
mov
adc
aad
data16
fistps
xor
pop
push
mov
sub
push
cmp
out
and
cmp
mov
inc
jge
fstps
xlat
sub
jmp
scas
mov
jne,pn
pusha
popf
pop
aas
fcomi
xor
jnp
sub
adc
fldcw
lods
mov
sbb
add
stc
daa
xor
xor
fsubl
sub
push
sbb
insl
or
xlat
pop
push
lahf
jge
sub
push
test
xor
ss
xor
pop
hlt
fisubrs
cltd
hlt
pop
or
lcall
xlat
cmp
mov
sub
and
sti
add
cmp
cmp
imul
push
nop
js
arpl
out
aam
fcoml
dec
int3
jmp
adc
cmpsl
ss
sti
cs
insb
idivl
lret
mov
inc
mov
add
push
lock
in
std
dec
loope
outsb
jns
or
or
jl
xchg
fdiv
icebp
cmc
jmp
jns
aaa
mov
cli
out
sub
in
popf
jbe,pt
mov
shld
push
ja
xchg
cmpsl
mov
xlat
jb
jge
int
add
xor
push
fucomp
push
jmp
lea
dec
test
inc
shll
sbb
push
sub
mov
cmpsl
lods
insb
popa
int
imul
xchg
pushf
insb
inc
imul
dec
movsb
dec
pop
mov
inc
sub
in
fwait
shrl
fs
bound
pop
nop
or
int
enter
data16
js
mov
mov
shlb
stos
movsl
xor
pop
inc
xor
and
jecxz
es
xchg
xchg
out
dec
aaa
test
pop
xlat
nop
xor
fistpl
imul
ds
adcb
mov
push
sub
cltd
in
outsl
mul
xchg
icebp
or
jmp
in
mov
jbe
push
sub
jp
push
adc
lea
jno
pop
xchg
sbb
rclb
xor
nop
xor
jbe
dec
pop
jge
xchg
sbb
add
nop
pop
xchg
jmp
inc
cmp
cmp
cld
cltd
xor
lods
aad
mov
int
mov
dec
sub
sahf
popa
mov
data16
stc
loope
dec
jns
mov
fisubrs
jmp
or
xchg
je
pop
aam
sbb
push
lds
dec
cwtl
movsl
jns
mov
pop
mov
int
add
xchg
std
cli
cltd
aas
adc
daa
fistpl
xchg
pop
mov
mov
jl
pop
mov
inc
jbe
mov
sarb
xchg
xor
jp
mov
cmpsb
dec
pop
dec
fsubrl
popf
mov
jne
inc
or
xchg
iret
lock
push
fisttpll
sub
mov
jbe
xor
clc
sub
out
xchg
dec
std
ljmp
mov
xor
jnp
sbb
sbb
mov
adc
pop
pusha
mov
mov
push
push
ja
out
add
jmp
inc
add
cmp
xlat
xchg
jp
cmp
jbe
adc
jecxz
and
fsubrl
mov
fdivrl
mov
and
push
idivb
pop
or
dec
adc
inc
ficomps
test
arpl
fstps
popf
cmp
addb
outsl
add
dec
mov
adc
xlat
sub
cld
inc
cmp
push
xchg
movswl
sub
mov
xchg
pop
xor
fldt
inc
popf
jb
mov
and
and
call
or
sbb
enter
aad
xchg
mov
push
jmp
ret
xchg
pop
and
sbb
adc
fisttpl
in
pop
rclb
push
mov
scas
mov
or
es
dec
rcrl
mov
push
nop
dec
mov
icebp
aaa
cltd
stos
hlt
xchg
and
and
inc
xor
inc
repnz
xor
dec
cmpsb
rorl
dec
hlt
xchg
clc
nop
std
insb
test
imul
sub
lcall
xor
pop
mov
xor
sbb
cmp
cmp
xor
inc
out
insb
adc
ret
fists
sub
and
ja
xlat
and
loopne
and
fiaddl
xlat
sbb
push
xchg
dec
add
loop
mov
jno
pop
mov
popa
sbb
je
sbb
jne
sbb
test
xchg
in
mov
cli
mov
lret
insw
xchg
loopne
pop
jno
sbb
jne
mov
fwait
mov
pop
and
push
add
jno
test
jns
fistpl
imull
xlat
mov
push
and
or
outsl
jns
sub
mov
mov
ljmp
out
mov
popa
mov
push
sti
push
mov
jbe
mov
sub
andb
inc
imul
add
push
cmc
bound
pop
testl
fucomi
mov
xor
dec
dec
cmp
icebp
shlb
scas
daa
inc
or
push
lods
and
sbbb
cltd
inc
cs
xlat
imul
inc
rolb
sub
psllq
xor
rcrl
stos
arpl
test
sub
pop
xchg
jnp
imul
call
adc
mov
cmp
cmp
inc
insb
shll
jno
pushl
inc
out
scas
sbb
cs
std
xor
in
call
pop
hlt
out
pop
std
call
add
data16
jecxz
pop
xchg
dec
mov
dec
subb
inc
rcrl
lea
hlt
jbe
xchg
pop
insl
mov
adc
mov
stos
addr16
jl
test
mov
pop
xor
add
push
ljmp
lret
jae
lea
jle
ljmp
add
jge
aaa
call
jb
fs
pop
nop
xor
xchg
pop
and
and
dec
add
push
or
xchg
cmp
cmp
js
test
rcr
and
jl
adc
nop
jge
mov
outsl
jmp
nop
outsl
rcl
idiv
mov
fimuls
iret
lahf
shl
stos
jge
test
lcall
add
je
insb
push
outsb
jl
lock
arpl
jne
or
mov
lret
xlat
pop
mov
or
push
enter
out
pop
loope
push
jo
xchg
jae
jb
popl
sbb
sbb
ret
nop
cltd
push
addr16
loope
or
mov
dec
fisttpl
cmp
cld
inc
push
push
mov
xchg
cmp
enter
mov
pop
sbb
xor
mov
pop
sub
sub
sbb
cmpsl
adc
jno
xorb
inc
cmpsl
xor
xorb
jbe
incb
in
push
add
dec
and
dec
xor
fisubrl
add
pop
jp
xor
dec
int
les
xlat
gs
mov
fildl
iret
pop
cmpsl
pop
outsl
std
or
xor
xor
cmp
push
inc
sub
push
and
mov
rcll
lods
and
cmp
sub
sub
daa
jae
jae
xchg
test
loope
jle
mov
and
push
cmp
mov
mov
sti
hlt
jecxz
jbe
add
mov
orb
push
dec
jmp
mov
pushf
and
mov
or
mov
xor
sbb
fsts
mov
das
cld
rolb
mov
lods
ret
sub
nop
sub
mov
mov
jns,pt
lds
std
mov
adc
flds
shll
outsb
stos
andb
xchg
nop
mov
push
test
xchg
divl
jo
cmp
dec
adc
cmp
xchg
adc
pop
jae
lahf
and
sub
cs
push
jae
int3
aas
sbb
sahf
fisubs
lods
fdivrs
mov
jge
jmp
inc
inc
pop
xchg
cmp
andl
mov
pop
sub
and
call
mov
cmp
push
pop
and
fsubr
jmp
out
mov
imul
dec
jg
inc
cmp
mov
mov
stc
nop
andb
jno
pushf
fisubs
inc
iret
mov
rcrb
jmp
fisttpl
hlt
jne
mov
jle
insb
mov
push
adc
mov
jno
mov
xor
movsl
and
push
jne
xlat
test
popf
ljmp
jmp
push
and
push
jae
jecxz
lcall
imul
adc
pop
test
jg
adc
dec
or
lret
push
mov
cmpsl
iret
mov
xor
lods
sbb
inc
push
jmp
and
repnz
jmp
jmp
sub
cmp
daa
add
ljmp
pop
add
stc
fnstenv
sar
jge
add
xlat
mov
pop
iret
js
mov
dec
jne
jmp
pop
mov
cmp
in
std
in
call
es
gs
sub
inc
enter
xor
fsts
mov
sub
ret
and
out
jmp
mov
push
loope
cmc
jl
aas
in
inc
push
test
push
xchg
ret
cmpsb
mov
scas
gs
sub
inc
dec
pop
or
cmp
cmp
repz
pushf
and
fldenv
push
xchg
cmpsl
stc
shl
push
push
sub
dec
repnz
adc
xchg
shl
dec
push
jmp
cmp
stc
stc
xlat
cmp
jbe
pop
iret
push
push
nop
fadds
mov
or
test
mov
mov
jmp
cmp
insl
mov
mov
lahf
add
mov
add
dec
mov
cli
jge
mov
inc
fistps
ds
movsb
test
out
xchg
push
scas
sbb
lahf
sbb
mov
lret
leave
jp
enter
or
movsl
fisttpll
xor
mov
loop
sbb
inc
cmp
lods
push
push
mov
insb
xlat
ret
fs
mov
inc
xlat
add
into
mov
hlt
lret
cmp
leave
ss
test
mov
cld
inc
mov
xchg
jmp
push
sbb
xor
jecxz
mov
push
int3
xchg
push
fistpl
mov
movsb
xchg
jmp
mov
mov
and
ds
fidivrl
cmp
push
lret
sub
mov
lret
dec
or
out
add
cmp
fcomps
push
or
andb
and
jno
sbb
mov
bound
stc
mov
movsb
scas
and
sbb
push
pop
push
jne
in
inc
xchg
lret
mov
and
push
adc
jnp
inc
adc
das
cmp
sahf
stc
add
fisubrl
sub
scas
pop
into
stc
mov
out
sbb
dec
push
sbb
pop
test
add
cmp
imul
xchg
clc
mov
aas
jp
sbb
pop
push
jmp
push
sbb
lcall
fisubl
lods
ret
adc
jns
insb
cmp
addr16
mov
jmp
ret
aam
cmp
mov
jl
outsl
daa
mov
std
andb
stos
jbe
movsb
rcrb
into
cmp
push
inc
incb
pop
push
adc
sub
xchg
int3
shl
pause
js
fldt
mov
xchg
je
xor
imul
mov
push
or
lock
lret
gs
lret
xchg
and
dec
and
jns
in
stos
jge
arpl
sbb
fcmovnbe
mov
dec
hlt
xor
arpl
in
in
push
sbb
or
jbe
cmp
inc
les
mov
mov
out
pop
push
int
jl
sbb
out
jb
out
cmpsb
mov
mov
and
and
pop
cli
push
cli
sub
push
fldt
push
mov
xor
jae
fbld
insl
or
cmpl
push
xlat
repnz
pop
push
ljmp
lea
pushf
ret
dec
out
int3
outsb
xor
hlt
aam
ret
in
push
push
ficoms
sub
sbb
cmpb
jge
fldt
push
jne
dec
and
sub
push
out
daa
cmp
mov
fildl
pop
test
ljmp
jmp
add
inc
mov
test
les
int3
xchg
jns
or
mov
and
xchg
fnstcw
lea
adc
mov
imulb
mov
push
fwait
pushf
xchg
adc
dec
xor
lret
sbb
jne
outsb
in
gs
fninit
dec
add
dec
test
or
xchg
ds
subb
idivb
xlat
or
push
push
push
xorl
ficoms
push
mov
push
stos
push
push
shlb
and
roll
ljmp
fldt
iret
nop
xchg
hlt
jae
lea
push
shll
aaa
test
jmp
cmp
or
fs
or
imulb
cmc
pop
cmp
xor
out
test
lret
stc
or
aaa
stos
and
sub
rcr
cli
xor
push
outsl
dec
cli
push
popf
fcoms
aaa
mov
je
sub
pop
sub
xchg
cld
les
mov
adc
loope
std
jae
ljmp
lcall
jp
sahf
aaa
in
or
dec
pop
imul
mov
shrb
pop
or
pop
fcom
fwait
std
ss
mov
mov
pop
pushf
inc
lods
ret
cwtl
push
das
les
or
jae
add
cmpsl
bound
int
mov
in
mov
jle
jno
lds
mov
repz
js
sub
cmc
dec
dec
pusha
in
test
arpl
fwait
pop
add
addr16
arpl
and
cmc
sbb
pop
rcl
movsb
stos
pushf
xchg
push
mov
mov
jbe
xlat
sub
add
mov
fdivrl
fsts
sbb
sbb
push
aaa
adcb
xlat
or
sti
sub
test
and
fistl
mov
pop
jmp
fwait
cs
fcmovnb
in
mov
adc
mov
ret
pop
daa
in
lea
fldt
dec
cmpsl
jns
pop
fstps
mov
imul
cmpsl
test
and
cmp
push
cli
dec
jnp
cs
pop
mov
inc
and
inc
xor
ret
xchg
hlt
cmp
mov
jbe
cmpl
nop
or
or
add
pop
out
and
or
xchg
jno
pop
xor
inc
cmp
push
jae
pop
sbb
mov
ror
xchg
push
jno
fstps
push
mov
pop
adc
adc
stc
shrb
lock
jl
insb
mov
sub
cmp
jge
subb
test
lret
inc
xor
imul
out
or
imul
mov
arpl
xchg
out
leave
sarl
out
lahf
jmp
or
xchg
rclb
push
movl
mov
sar
mov
inc
jnp
sub
scas
lods
outsl
pop
inc
cmp
xor
sub
fstpt
mov
in
mov
repz
sbb
mov
mov
out
or
xchg
in
retw
dec
jmp
fstpt
jle
push
cld
xchg
xchg
lret
pop
sbb
cwtl
scas
jno
lds
fincstp
and
pop
je
int
imul
hlt
push
or
jns
xor
sub
nop
movsb
daa
jp
shl
call
push
pop
sahf
inc
dec
add
lahf
aad
cmp
push
nop
mov
sub
fisubs
into
out
cmp
sub
xchg
scas
dec
stos
fcmovnbe
loope
and
add
scas
cmp
cmp
movsl
fbld
fcomi
mov
repz
js
jp
pop
call
xchg
cld
inc
mov
pushf
hlt
lret
insl
int3
xor
fldcw
cwtl
push
dec
cmp
aam
adc
push
shll
and
loop
or
jbe
jno
ret
fwait
push
rorb
push
xor
adc
mov
dec
lods
movsb
mov
cmp
test
fcompl
daa
aaa
adc
sub
fisttpl
lret
repz
sub
cwtl
dec
push
fcmovnu
jns
fstps
repz
fwait
push
adc
sbb
adc
jmp
arpl
in
mov
push
cmp
cmp
je
scas
mov
int
fmuls
and
sbb
fists
xchg
xor
in
fucomi
imul
cmp
mov
dec
xor
push
pop
or
mov
sub
fistl
aaa
cmp
mov
push
xor
mov
jne
push
add
scas
dec
int
pop
sbbl
repz
jg
jg
cwtl
mov
pushf
nop
lock
fs
cmpsb
out
in
mov
inc
fildl
rcl
add
jl
pop
aas
jns
movsb
xchg
mov
dec
add
sbb
xlat
fisttpl
dec
pop
and
hlt
shrb
nop
ja
push
add
push
call
int
dec
ret
mov
jp
and
enter
fldt
push
dec
cmpsl
out
dec
push
jae
hlt
xchg
dec
enter
sbb
divb
lea
add
aam
jmp
mov
mov
jno
es
sbb
js
inc
mov
sbb
jno
dec
loope
cmc
aaa
jl
arpl
xor
adc
sbb
cmp
jbe
stos
cmp
mov
sub
daa
and
hlt
orb
imul
and
push
sbb
mov
scas
mov
in
mov
add
cmp
mov
outsl
xchg
movb
stc
nop
xor
xchg
push
dec
mov
mov
push
cmp
xlat
pusha
mov
push
pop
cli
enter
or
push
push
jae
fildl
daa
cmp
xor
movsb
pusha
in
loop
sub
shlb
stos
push
xlat
out
icebp
jae
pop
aas
pop
aad
lcall
inc
or
pop
pop
jg
fistl
add
imul
add
fmulp
das
mov
pop
xchg
enter
sbb
cld
pop
imul
jae
lea
push
js
out
ja
xlat
xor
repnz
ljmp
btr
jnp
cmp
xor
pop
lret
jo
xor
sbb
inc
push
clc
lret
mov
xchg
pop
inc
js
aas
std
rolb
out
push
mov
xlat
stos
lock
out
faddp
out
xor
dec
shlb
dec
pop
and
decb
movsl
mov
inc
out
std
inc
push
lahf
test
loopne
xor
lea
cmp
scas
push
lahf
xchg
cmc
cmpsb
stos
push
adc
out
and
inc
pop
fsts
mov
mov
add
std
mov
leave
daa
push
out
add
sub
cmp
rep
add
jg
in
mov
fdivl
pop
adc
and
dec
xlat
lods
bound
mov
push
cltd
dec
cmp
sbb
jae
or
xlat
mov
fxam
push
lock
cmp
fisubrs
and
cli
fidivl
pop
dec
mov
out
mov
jge
inc
ja
call
xchg
ds
jne
dec
test
cltd
push
std
testb
pushf
jno
push
imul
mov
out
popf
pushl
mov
mov
cmp
sub
pop
xchg
addr16
test
mov
jns
add
push
add
adc
xchg
cmp
ret
xor
xor
add
stc
movsl
xor
or
mov
ret
outsl
jg
fistpl
mov
add
xor
lahf
cmp
sub
test
dec
dec
pop
pop
rcr
or
in
sarl
push
xor
dec
jg
pop
jmp
and
xchg
lahf
outsl
jnp
cmp
call
aas
ljmp
and
push
sub
lahf
std
pop
push
movsb
mov
sahf
and
lcall
popf
clc
jns
imul
insb
xchg
jnp
lret
cmovs
cmp
sub
bound
sub
xchg
pusha
xlat
jmp
std
sub
dec
test
movsl
pop
add
add
fisttpl
cwtl
pushf
ja
insb
jge
rcrb
lcall
imul
sub
adc
fwait
in
test
jno
dec
dec
add
pop
xor
test
out
aaa
cmp
mov
push
mov
ret
fld
addr16
stos
loope
add
sbb
fcmovb
jns
or
int
inc
ds
es
std
pop
aad
mov
imul
inc
dec
xchg
or
dec
xlat
fsts
push
inc
inc
sbb
jns
rorl
imul
and
dec
add
inc
push
adc
mov
jne
loope
stos
into
pushf
cmp
jo
cld
adcl
xchg
mov
jno
jp
je
scas
add
leave
loopne
mov
je
enter
in
or
xchg
jne
cmp
lods
pop
sub
aad
ja
jb
xlat
dec
xchg
dec
and
push
les
pop
mov
dec
or
imul
xchg
cwtl
sbb
and
rcrl
jnp
fxch
mov
int3
fsubrl
les
cmp
sub
rcll
xor
sti
mov
aaa
mov
stos
dec
jbe
push
dec
mov
sub
and
and
xlat
pop
pop
or
sub
cmp
shll
mov
cmpsl
sbb
add
and
in
mov
mov
cmpsl
adc
adc
xchg
lods
jmp
mov
xor
push
jo
pop
or
adc
and
aam
mov
fs
mov
pop
stc
lahf
insb
out
xlat
imul
jae
jne
movsb
jle
ret
push
dec
popa
ljmp
sub
arpl
and
movsl
imul
and
dec
xor
xor
xlat
jnp
imul
sub
repnz
sub
aaa
inc
fmul
enter
push
aaa
out
fisubs
adc
push
arpl
cmp
sbb
clc
mov
stos
fildl
aad
lds
add
mov
jne
dec
inc
mov
cwtl
mov
dec
cli
out
int3
bound
add
xchg
cmp
addr16
outsb
clc
mov
js
std
xlat
fldcw
movsl
fildl
iret
nop
cli
jmp
enter
es
xor
xchg
mov
and
lahf
fldt
cli
mov
xchg
mov
stc
imul
xor
movsb
mov
ficomps
dec
flds
fistpl
mov
vpcmpgtw
mov
imul
stos
sti
fdivs
jge
cld
in
add
jp
sti
mov
movsb
pop
cltd
lret
push
mov
cmp
popa
xchg
pop
add
push
xorb
ljmp
or
add
jecxz
mov
bound
or
scas
sbb
mov
enter
bnd
jns
into
scas
mov
fnstsw
xlat
pop
cmp
push
int
dec
pop
mov
inc
pushl
nop
mov
xchg
scas
adc
vcvttss2si
fwait
loopne
and
cmp
cmpsl
decl
lahf
jecxz
cmp
stos
push
pushf
adc
add
lcall
and
mov
and
icebp
sti
xor
data16
insb
inc
jbe
fnstenv
sbb
sar
jae
popf
mov
push
jmp
ss
push
xorb
jecxz
loop
dec
xor
mov
int
cmpsl
pop
cmp
dec
add
ss
mov
pop
dec
push
pushf
int
xchg
loop
and
xorb
outsb
cmc
add
iret
mov
jb
std
push
out
jno
dec
mov
test
stos
dec
adc
or
fstpt
adc
jne
xor
sub
jge
insl
mov
ja
pop
sub
xlat
xchg
fistl
ja
fwait
pushf
sub
aam
mov
testb
sbb
rcrb
or
xchg
push
les
js
insl
std
xchg
into
test
arpl
adc
or
lret
sub
lea
mov
in
fidivs
adc
int3
ja
or
sbb
add
xchg
jg
addr16
call
arpl
sub
cwtl
or
jae
jmp
lcall
mov
and
push
testl
add
les
insb
adc
das
adc
mov
and
dec
pushf
push
mov
add
hlt
add
pop
cmp
mov
mov
leave
xor
aad
mov
nop
dec
bound
cmp
inc
test
sbb
jle
push
mov
push
jne
shlb
jne
fnstenv
mov
sbb
ret
fidivrs
cld
nop
add
icebp
daa
sbb
mov
fwait
cmc
popa
sub
cli
pop
add
xchg
or
mov
loop
push
cmp
inc
xor
cmpsl
mov
or
lahf
test
data16
lea
push
cwtl
jns
inc
push
jns
stos
sbb
ljmp
ret
pop
adc
movsl
jae
movsb
xor
shrb
ret
sbb
xchg
and
or
jl
mov
xor
lock
stos
pcmpeqw
dec
adc
clc
jge
iret
imul
ret
out
call
mov
loop
push
rcr
push
pop
cmp
inc
fwait
push
pop
pop
loop
adc
rcrl
xor
int
ret
mov
jg
or
ds
ljmp
inc
xchg
daa
mov
or
mov
and
adc
xchg
ret
je
mov
xor
mov
adc
push
pop
xchg
mov
stc
mov
jl
fwait
shrl
mov
add
dec
or
sbb
out
ja
sbb
lcall
adc
xor
mov
sub
outsl
xchg
std
xlat
cwtl
leave
adc
cmp
push
inc
popf
faddl
cs
mov
jnp
fstps
jle
ds
dec
push
lods
xchg
andb
pop
imul
xchg
imul
jmp
adc
es
cmp
sub
popf
arpl
mov
dec
pop
mov
pop
ror
push
push
das
clc
jecxz
push
stos
test
add
pop
sbb
test
mov
fstps
test
lcall
pop
and
sub
xlat
adc
mov
push
fists
outsl
outsb
sbb
pop
jecxz
adc
jp
jmp
cmp
push
aaa
sbb
xchg
addr16
repnz
xchg
xlat
std
into
aam
fcmovbe
in
xor
roll
sti
dec
or
movsl
or
and
xchg
sub
xchg
push
cmp
xorl
add
push
dec
test
xor
std
mov
cwtl
lret
outsl
fldenv
fdivrl
pop
arpl
ljmp
stc
push
inc
cwtl
inc
jae
stc
adc
sub
aaa
push
test
mov
cs
add
jg
scas
iret
les
xchg
pop
and
push
jecxz
pop
pushf
and
add
cli
in
cmp
push
add
mov
push
leave
fsubrl
and
aaa
nop
sahf
fsubs
lods
xchg
sbb
sub
aas
or
xor
mov
jns
jl
sbb
mov
lea
repnz
pop
adc
sahf
out
and
test
int3
mov
imul
adc
inc
xor
jp
xor
jg
xchg
jmp
inc
stos
rolb
lea
xchg
cmp
sbb
popf
xor
sub
cmp
mov
aad
in
pop
lret
stc
movsl
pop
stos
lock
stos
cmp
aam
std
popf
test
insl
nop
mov
xor
mov
test
or
ds
lcall
je
sbb
out
push
movsl
push
jle
dec
mov
test
cmp
pop
dec
fldt
lock
xor
cmpsl
jl
adc
jo
jg
inc
add
xchg
adc
mov
add
scas
sub
or
xchg
push
jne
inc
shll
aam
test
es
or
sub
js
nop
mov
pop
je
add
xlat
adc
jnp
fldcw
xchg
cmp
cmp
dec
xlat
mov
sub
jne
inc
ljmp
in
lods
mov
pop
dec
pop
push
jb
push
pop
fsubr
sub
test
adc
or
aad
mov
and
mov
pop
std
fldt
push
mov
sbb
xchg
mov
xchg
mov
mov
pop
xchg
mov
xlat
das
cmp
pushf
repnz
jns
in
push
jns
inc
jp
aas
hlt
mov
and
pop
aam
mov
nop
push
add
xor
inc
ja
push
jne
xchg
sub
std
lgs
add
cs
sbb
sub
scas
cmp
sub
jp
test
mov
das
mov
sbb
lcall
jb
or
mov
sahf
cmpsl
jne
fisttpl
call
mov
repz
add
cs
aam
in
and
or
rorl
popa
mov
test
int3
or
adc
movsb
shl
aas
jge
aas
ljmp
mov
pop
adc
movsb
lret
mov
cld
sbb
idivb
add
iret
push
pop
push
hlt
pusha
movsl
lret
out
shl
cmp
daa
mov
push
mov
jnp
jmp
push
jecxz
je
popf
jae
cmp
pop
sbb
inc
and
push
add
mov
push
jmp
sbb
frstor
cmpb
fildl
cmp
ds
shll
jl
push
sub
cwtl
unpckhps
add
sbb
ret
stos
in
mov
dec
dec
mov
rolb
mov
pop
aas
lahf
jmp
xor
clc
push
mov
adcl
jmp
pop
or
fstpt
pop
fwait
adc
sub
dec
push
shll
ror
mov
aam
cmpsl
xchg
stos
dec
mov
pop
cld
popf
xchg
es
push
ja
jne
nop
cmp
lret
and
xor
fidivrl
push
and
push
mov
sub
lret
add
loop
arpl
inc
and
jae
pushf
lea
push
loop
sbb
fcmovnb
sbb
in
add
push
movsl
hlt
mov
stos
add
out
jecxz
lret
push
int
iret
out
scas
pop
mov
scas
in
das
push
mulb
stos
orb
push
inc
in
int
stos
hlt
push
jne
dec
in
dec
push
addl
imul
add
in
xchg
out
mov
jmp
stc
andl
push
jnp
xor
movsl
mov
jl
push
std
jae
dec
xchg
arpl
xor
and
pop
jns
mov
pop
add
rol
jmp
lret
or
sub
pop
jb
push
or
mov
sbbl
mov
lret
xchg
ljmp
test
mov
mov
sub
mov
cmp
or
imul
lea
bound
mov
enter
lea
lret
cwtl
push
mov
xor
lds
push
and
xlat
mov
bnd
cmpsb
sub
lds
fldt
enter
add
movsb
adc
add
test
adc
imul
insb
jns
or
cmp
add
inc
cmp
fsincos
and
push
sbb
cmpl
sbb
pop
and
leave
loop
cs
repnz
repz
fistpl
pop
lods
adc
cli
jo
fsubp
test
push
fwait
or
mov
push
jmp
neg
inc
push
rcr
mov
cltd
enter
cmp
dec
fcmovnu
sub
dec
or
push
mulb
shrl
dec
push
xlat
sbb
jg
sub
jnp
push
cltd
into
mov
push
jae
flds
mov
jbe
adcb
cltd
jmp
daa
cmp
out
mov
mov
jl
into
adc
or
loop
mov
aam
xlat
icebp
xchg
dec
shrb
iret
pop
punpcklbw
mov
out
push
jg
aad
ror
mov
inc
inc
or
lcall
lods
in
fs
clc
and
add
test
stos
cmpl
pushf
xor
je
fcmovnb
aad
pop
ja
std
sbb
ds
outsl
sbb
xor
xchg
xor
cmp
adc
pop
ja
repz
xchg
sbb
sbb
inc
xchg
xchg
fcmovb
mov
test
pop
mov
add
pop
pop
mov
xor
fildll
push
inc
push
inc
mov
sub
cmp
xchg
mov
out
ds
dec
pop
jle
call
dec
add
int3
ret
mov
jg
roll
mov
dec
cwtl
mov
pushf
andb
scas
jecxz
rorb
aad
enter
mov
aaa
int
insb
scas
es
out
xlat
std
cmp
mov
dec
lock
and
loop
sub
sub
sete
cmp
orl
insb
notl
pop
insl
fistpl
outsl
outsl
ret
xchg
sub
jno
jae
dec
cwtl
pop
pop
sub
pushf
sbb
outsb
cmp
add
mov
fidivrs
sti
cld
push
mov
xlat
push
mov
cmp
fcmovbe
cmpsl
ret
jne
fldenv
dec
cmp
rorb
add
adc
xchg
cltd
xchg
xor
inc
movsl
mov
call
adc
push
arpl
pop
mov
mov
loope
mov
stc
lahf
sub
sub
popf
inc
or
fists
adcl
dec
data16
add
and
stos
mov
jg
je
test
add
add
gs
dec
xor
lods
dec
xchg
filds
or
daa
dec
jns
push
xchg
scas
mov
icebp
mov
popf
lods
std
jle
xchg
mov
and
jg
jnp
cli
je
sbb
xchg
call
mov
leave
and
test
loopne
fsts
nop
xchg
push
cld
lahf
dec
jmp
push
jns
lods
mov
jbe
test
jmp
out
mov
push
inc
fisttpl
mov
mov
push
push
mov
imul
push
jae
pop
std
fldt
push
arpl
hlt
jge
xlat
mov
hlt
test
jae
cmp
inc
jge
shll
jo
fildl
xor
sbb
jmp
cwtl
idivb
mov
adc
ror
repz
adc
adc
lret
ret
mov
out
imul
xlat
ds
int3
pop
jmp
and
push
jno
xor
push
daa
fldt
cmp
fstps
jp
jne
imul
xlat
jne
mov
or
cmp
sti
sub
clc
pop
xor
popl
subl
xchg
arpl
cli
push
sahf
jns
das
mov
loopne
sub
inc
xchg
jns
and
sbb
sub
adc
test
mov
pop
jp
ds
adc
jne
mov
push
xchg
sbb
loopne
xlat
push
ljmp
stc
mov
fcomi
sub
dec
sbbb
out
imul
add
dec
rolb
xchg
xchg
xor
push
pop
iret
xor
pop
ja
sbb
cmpl
test
lret
mov
test
dec
or
xor
inc
cmpsb
out
xlat
jg
mov
jno
sahf
rorl
inc
and
pop
stos
sbb
in
xlat
popf
mov
inc
push
insb
insb
push
popa
fstpt
outsb
stos
mov
mov
jp
fnstcw
mov
dec
cli
jne
fidivrs
in
or
int
into
lret
or
mov
lock
xchg
add
imul
push
sub
in
iret
out
inc
and
add
fsts
mov
xchg
xlat
rcr
dec
js
push
lods
sarl
xor
repz
sub
pop
xchg
pop
imul
adc
fmull
inc
mov
test
pop
sti
fldenv
push
pop
pop
int3
mov
cs
pop
adc
push
jbe
push
jmp
ljmp
subb
out
xor
movsb
add
hlt
pop
and
pop
fdivl
fs
jl
sbb
mov
mov
mov
fldl
and
bound
xchg
and
xchg
mov
sysenter
mov
jae
popa
data16
lahf
inc
ljmp
fwait
xchg
repnz
in
inc
int3
int
jg
cld
fucomi
dec
ds
push
push
sbb
clc
fwait
inc
pop
cmp
mov
nop
ljmp
or
and
xchg
xor
sub
fwait
dec
fcmovb
sbb
rep
ret
mov
sbb
inc
movsb
mov
xchg
popf
bound
push
pop
mov
fs
mov
and
je
fst
sub
xlat
out
sti
push
fwait
movsl
rorb
popa
mov
fisubl
jb
scas
dec
xchg
sub
mov
loop
lret
inc
jne
daa
mov
insb
aas
push
push
jge
mov
loop
xchg
cwtl
dec
sbb
popa
cmpsl
add
dec
test
dec
push
sub
inc
mov
ffree
pushf
sti
and
popa
cltd
mov
mov
inc
ds
arpl
fdivrs
testb
les
add
jp
pop
out
push
int
and
fnsave
sbb
cltd
mov
dec
rclb
lret
xor
lods
ret
push
xor
mov
inc
cwtl
xor
fiaddl
stc
cwtl
jg
push
bound
sbb
sbb
add
sti
call
xchg
jp
mov
sbb
and
ljmp
hlt
jns
xlat
popf
sbb
cmpsb
int3
mov
stos
out
adc
push
mov
jno
xor
push
bnd
adc
mov
dec
test
and
push
xchg
cmc
fidivrs
xor
push
outsl
push
lret
dec
sub
filds
sbb
xlat
inc
cmp
bound
mov
xor
cmp
inc
jp
aam
cwtl
dec
sbb
addr16
mov
outsl
push
fistl
jae
push
dec
or
scas
sti
push
stc
mov
cltd
fsts
push
mov
arpl
xlat
xor
popa
mov
nop
xor
aad
loopne
xorl
lahf
dec
movsb
push
data16
xchg
or
xlat
fiadds
inc
insl
stc
push
or
and
xchg
cli
iret
lret
xor
jne
cmp
fisttpl
or
jne
jb
xor
sub
adc
inc
adc
sbb
mov
jmp
je
lea
cmpsb
push
push
in
and
sbb
popf
pushf
xchg
cmp
sbb
push
ret
push
add
sub
jb
xchg
push
pop
or
cwtl
ret
mov
cmp
xlat
cmpsb
inc
xorl
mov
sbb
les
test
push
cltd
push
jno
sub
push
inc
pushf
ds
scas
cltd
xchg
add
insb
cmpb
inc
ret
cmpsl
xor
test
lcall
dec
mov
xchg
or
jo
adc
cwtl
mov
lret
and
fistpl
std
and
sub
cmpb
jle
dec
pop
out
xchg
stc
daa
adc
daa
jne
daa
adc
inc
loop
jae
cmp
test
cmpsb
lock
push
fwait
cmp
add
inc
jae
pop
lock
push
fidivrl
pop
xchg
fisubrs
jb
inc
fisttps
addl
dec
cmp
xchg
loope
sub
lods
orb
pushf
stc
or
jb
ljmp
xor
pop
and
stc
je
xlat
sbb
sbb
mov
and
pop
add
filds
scas
cmp
scas
mov
jns
pop
jmp
push
orb
inc
cltd
loop
cwtl
push
lock
jns
sub
ljmp
and
dec
jo
repz
or
mov
xor
outsl
push
pop
pop
mov
push
shll
jmp
cs
sbbb
inc
es
jns
insb
out
loop
dec
fldcw
or
shll
in
dec
xor
je
mov
dec
sahf
icebp
pop
stos
inc
fstl
insb
test
xor
add
or
inc
mov
in
hlt
mov
xlat
movsb
pop
lods
and
in
imul
and
pop
jno
fldt
pop
sar
dec
sub
mov
xchg
pop
ljmp
jecxz
idiv
adc
js
mov
loopne
sbb
and
ljmp
cltd
mov
stc
fldcw
test
sub
les
in
jo
iret
jae
and
jecxz
ljmp
sub
jns
jmp
adc
fs
cmp
sti
xchg
jecxz
jle
add
push
pop
xchg
imul
sbb
dec
or
std
mov
xchg
clc
add
insl
xchg
and
outsb
xor
pop
fwait
mov
movsb
out
sub
int
and
sub
pop
in
xchg
stc
sbb
mov
fistps
dec
cmp
pop
jecxz
daa
pop
jbe
stc
into
sub
adc
adc
rolb
arpl
imul
mov
sub
inc
pop
test
sbbl
push
in
push
mov
into
dec
push
inc
xchg
sbb
push
mov
dec
fisttpll
pop
rorl
xchg
wrmsr
lods
jecxz
loop
cmp
add
push
xor
jo
ds
mov
xor
popa
js
stc
int3
ret
outsb
fidivs
mov
stc
mov
shll
sub
dec
xor
shlb
outsb
out
dec
cs
sbb
fs
outsl
loop
sub
mov
test
xor
push
ds
lahf
fiadds
dec
xlat
lret
out
push
outsl
cmpsb
fdivs
movsb
or
pop
gs
dec
mov
repz
sbb
sbb
sub
inc
js
pusha
imul
sarl
mov
dec
insb
or
aaa
xor
sbb
loop
push
xor
pushl
push
lcall
fsubrs
stc
lods
xchg
fcmovbe
xor
jp
or
sub
jmp
xor
pop
mov
lcall
pop
add
shl
shl
lcall
xor
je
sub
aaa
pop
ficompl
int3
out
sub
decl
popa
pushf
dec
sbb
dec
adc
roll
push
cli
lds
mov
sub
repz
pop
stc
dec
xchg
xor
ja
push
in
xlat
xor
mov
leave
cmc
outsl
stc
push
add
mov
fwait
outsb
dec
cmp
jnp
sub
pop
dec
lods
fxch
sbb
pop
imul
sub
push
mov
ficomps
jo
sti
repnz
mov
pop
push
seta
and
cmp
daa
xchg
inc
and
xor
xor
jl
jns
fld
filds
xor
pop
fucomp
dec
inc
sbb
fistl
icebp
sub
int3
xchg
vmovaps
cwtl
fsts
adcb
lods
lds
sub
fldenv
push
mov
mov
and
test
and
push
icebp
push
in
cld
je
mov
sbb
cs
jno
pushf
ja
inc
sbb
sub
and
adc
call
into
fcoml
jg
cmc
add
sub
sbb
dec
xor
pop
aad
lret
mov
push
mov
sarb
sbb
xor
dec
repnz
stc
sti
mov
pop
mov
xor
imul
fistl
in
dec
outsl
enter
rolb
imul
aam
out
and
insb
ret
dec
cs
repz
sbb
jb
dec
ja
pop
cmp
sbb
leave
xor
cmp
popf
sahf
sbb
add
lret
mov
pop
pop
cmp
or
insl
mov
adc
adc
cld
jne
stc
add
jl
and
imul
fnsetpm(287
push
orl
inc
cmp
cmpsl
adc
mov
ret
dec
ja
subps
aas
cli
xchg
and
lret
outsb
iret
add
jae
cmpsl
in
nop
ljmp
inc
add
push
sbb
dec
sub
cmp
xlat
sbb
xchg
dec
fisttpl
dec
push
cmpsl
loopne
or
pop
sahf
push
mov
std
push
enter
push
movsb
fwait
dec
dec
fcmovne
leave
test
ds
xchg
je
test
sub
fsubl
mov
pop
nop
mov
aad
push
jmp
add
mov
fisubrl
js
shrl
iret
and
je
dec
lahf
aaa
cmp
push
or
xor
outsl
lahf
mov
stos
dec
cmpsb
xchg
push
adc
jp
fsts
sbbl
jg
push
push
push
nop
fisubrl
jmp
ja
pop
out
nop
movsl
push
pop
lea
cld
pop
nop
dec
jo
jae
push
stos
les
and
addr16
jns
je
jns
pushf
or
pop
push
movsb
out
ds
lock
loopne
jnp
mov
add
int3
dec
sarl
or
cmpsl
adc
inc
andb
cs
hlt
pop
xlat
pushf
mov
or
xor
loop
popa
icebp
test
mov
lods
mov
test
pushf
mov
lret
inc
mov
jecxz
xor
dec
sbb
fistl
xorl
xchg
loop
shlb
dec
and
xchg
and
sarl
lret
pop
fsubp
idivb
sarb
push
insl
push
cli
cmpl
ftst
xchg
incb
inc
inc
test
out
aam
mov
pop
push
cmpsb
xorb
das
lahf
xchg
shlb
fnstenv
or
jle
pop
fsubp
xchg
pop
je
shlb
pop
and
imul
ljmp
mov
cwtl
adc
fistpl
lock
add
out
pop
jno
testl
push
repnz
or
or
and
push
ret
xchg
loope
data16
xchg
daa
inc
xorl
cmp
fs
xchg
jg
jbe
mov
andb
lods
fstpt
mov
pop
out
mov
xor
push
jo
push
and
pop
mov
sbb
xlat
cs
xor
and
xor
lcall
xlat
jno
xchg
test
mov
xchg
faddl
lock
add
jae
or
add
push
or
sbb
jns
in
insb
inc
xor
movzbl
sarl
add
es
rcl
mov
jno
sahf
stos
dec
push
xchg
out
arpl
push
pop
ljmp
dec
mov
jp
pop
fwait
cmp
mov
pop
push
mov
push
add
lahf
and
pushf
fadds
push
pop
mov
push
jns
xchg
in
cmp
push
mov
mov
push
das
push
cmpsl
xor
mov
gs
push
add
or
push
inc
popa
inc
fimuls
and
fstps
or
inc
push
mov
dec
pop
inc
push
out
dec
std
shll
ljmp
mov
sbb
jno
dec
repz
push
or
dec
mov
sahf
push
push
inc
fnstenv
mov
fcmovne
add
insl
add
sub
xor
jl
pop
mov
push
and
pushf
or
xor
sub
out
dec
imul
mov
dec
stos
insb
adc
mov
jno
jp
add
pop
int3
fsubrs
pop
push
lret
ss
or
hlt
push
push
xlat
inc
mov
sbb
mov
fildl
out
jge
pop
and
or
push
pop
out
sub
icebp
into
pop
jno
cmp
adc
stos
jmp
sub
lret
push
stc
stc
mov
sub
fnstcw
std
xor
push
mov
add
pop
inc
or
jmp
divl
jns
push
xor
fimull
sub
inc
mov
repnz
imul
sub
clc
xchg
mov
ss
enter
loope
mov
sahf
aad
jae
repnz
out
subl
dec
jnp
xchg
subb
popa
pushf
jg
adc
cmp
cltd
loope
imul
mov
lods
imul
cli
xlat
scas
adc
pop
sub
pop
into
js
xchg
pop
movsb
inc
push
sub
push
and
push
sbb
jne
cmp
adcb
xor
mov
std
and
xor
idivb
mov
mov
fimuls
xchg
and
nop
lock
mov
es
out
and
lahf
sub
test
push
sub
xor
gs
loopne
xchg
cli
jp
cmp
int
mov
dec
stos
mov
shlb
test
add
lret
stos
jle
dec
cmp
ja
test
movsb
sub
xor
outsl
jmp
mov
sahf
sub
add
jne
bnd
jmp
lahf
aaa
xor
lret
push
cmp
push
pop
or
cmp
xlat
andb
int
decb
jno,pt
push
and
adc
fnstcw
cmc
test
jge
pop
inc
xorb
xor
sub
or
add
aaa
mov
xor
xor
jae
inc
sbb
ja
or
sti
adc
popf
xor
lods
add
aad
push
sub
rcll
add
data16
fcmovnb
les
inc
insl
cmp
mov
pop
imul
icebp
xlat
push
sbb
add
movsl
sub
push
push
movsb
xchg
mov
xchg
cmp
pop
push
mov
inc
pop
mov
and
jge
insl
gs
jg
or
fnstcw
and
scas
insb
jg
mov
stos
bnd
fcomp
iret
inc
xchg
nop
push
call
xlat
sbb
ficoms
adc
or
das
sub
gs
mov
and
adc
mov
div
jp
or
dec
fwait
stc
dec
sub
sbb
fidivrl
popf
loope
adc
sbb
mov
jp
repz
or
sub
push
push
int
cld
out
inc
icebp
xchg
in
and
sbbb
in
dec
fwait
outsb
and
fwait
sbb
mov
pop
sub
xchg
mov
or
loopne
movsl
push
stos
fwait
jg
inc
in
pop
cmp
push
mov
mov
pop
adc
sbb
or
shll
mov
jp
pusha
jl
pand
sub
dec
mov
pop
in
rorb
mov
sbb
xlat
mov
ss
adc
int3
jp
loopne
insl
mov
dec
jb
and
xor
cmp
cmp
out
or
pop
aas
pushf
es
fidivrs
test
jmp
inc
jl
flds
xchg
mov
xchg
pop
sub
xlat
lods
sbb
jg
rorl
dec
dec
je
imul
mov
sbb
inc
dec
loop
lea
cwtl
test
xchg
in
xor
add
jns
jp
cmpl
not
rolb
orl
cmpsl
mov
adc
xlat
incb
sbb
test
fildl
adcl
dec
adc
ret
jg
addl
jns
adc
adc
cmp
lahf
dec
test
adc
cmp
stos
mov
enter
add
xor
pop
ret
shr
mov
push
loope
mov
xchg
push
cli
je
data16
call
scas
adc
pop
and
fidivrs
adc
sahf
push
mov
das
mov
shr
xchg
mov
neg
loop
jmp
mov
xchg
and
jmp
andl
mull
xor
repnz
movsb
add
and
nop
sahf
sahf
test
fnstcw
dec
push
sbb
push
or
test
sbb
lahf
call
xlat
shr
xchg
test
aam
inc
cmp
cmp
cmp
xchg
or
jbe
das
inc
fwait
addr16
xlat
dec
xchg
daa
rcrl
or
divb
pop
adc
fimuls
push
push
mov
pop
fs
push
es
lcall
or
push
sub
lods
and
jmp
push
push
inc
and
dec
test
scas
fistpl
jne
xor
movsl
cmp
cli
mov
cmp
lds
jne
sub
je
loope
adc
push
cwtl
into
push
neg
cmp
les
aas
xor
mov
or
insb
jbe
xor
jnp
jae
push
aad
pusha
clc
jne
test
subl
sti
in
std
out
jo
xchg
lahf
in
std
or
cmp
xor
sarl
dec
mov
out
adc
mov
fldt
pop
cmc
push
stos
inc
xor
fsubl
cs
cs
ret
mov
or
xchg
pop
jp
sub
into
sahf
test
clc
loopne
cs
mov
inc
ret
jns
mov
ja
xor
xor
stc
std
je
xchg
decb
adc
push
cmp
jbe
sbb
mov
fstps
mov
adcb
shlb
lock
stos
and
cmp
xor
mov
cltd
mov
stc
or
test
add
out
sub
sbb
xor
lahf
pop
dec
fisttpl
stos
push
out
mov
rorl
mov
cmp
jmp
movl
shrl
add
dec
stc
pop
and
jg
sbb
xorb
faddl
jge,pn
add
imul
imul
xchg
mov
lahf
mov
jmp
nop
adc
inc
cs
mov
pop
mov
sahf
dec
sub
push
cli
sub
mov
das
mov
pop
mov
jmp
fs
mov
lahf
out
sahf
leave
int
inc
movb
fld
mov
pusha
jne
sbbl
ds
in
out
cmp
xchg
cmpsl
and
insb
mov
pop
xor
loop
push
cmpl
xor
pop
into
sbb
cmp
sub
cmp
ja
add
cwtl
shlb
bound
add
jns
lock
fldt
std
push
movsl
pushf
jge
ds
jmp
jnp
xchg
bound
jmp
stos
sub
sbb
sub
mov
inc
sbb
inc
pop
adc
daa
sub
jae
cmp
scas
mov
sub
adc
std
sti
dec
cmp
or
xlat
icebp
popa
adc
ficoml
mov
pop
mov
mov
xchg
jns
pushf
pop
push
xor
dec
add
adc
addr16
dec
xor
ljmp
push
ja
sub
xchg
pusha
xor
cmpsb
cmp
xchg
sbb
jg
mov
dec
stos
cmp
push
std
jmp
das
mov
cmp
pop
sbb
push
push
add
cmp
fwait
xchg
mov
aaa
icebp
call
and
cmp
fs
jae
jne
mov
insb
push
pop
stc
iret
test
add
jbe
aam
outsb
inc
cmp
mov
into
divb
jg
cwtl
shrb
sub
pop
xor
insl
dec
xchg
cli
ret
pushf
sbb
mov
jae
mov
push
xor
jns
leave
dec
stos
mov
cs
negb
add
fimull
imul
mov
mov
adc
push
out
cmpsl
stc
push
sbb
xor
dec
sbb
int3
or
jne
subb
inc
int
sahf
out
jns
dec
lret
fbstp
and
stc
jae
test
loopne
roll
jno
dec
mov
negb
mov
into
nop
jbe
repz
lcall
and
flds
fcomi
js
sub
jno
dec
push
mov
push
data16
popf
adc
jo
mov
addr16
cmp
sub
mov
rorl
fiadds
cmp
in
negl
and
arpl
mov
ret
stos
loopne
mov
adc
cmp
sbb
stc
in
scas
and
lods
int
pop
iret
dec
adc
pop
lret
loope
jecxz
or
cmc
jmp
sti
xchg
jae
mov
mov
jg
out
push
call
cmp
xchg
mov
push
fstps
in
cld
shll
js
dec
ret
int3
mov
scas
lds
xor
movb
outsl
std
pop
jb
hlt
ja
das
xlat
inc
lds
sbb
in
xor
js
xor
sahf
jmp
push
les
jno
aaa
dec
ss
cmp
jo
sti
mov
lret
cli
pop
fcoms
clc
repnz
push
jmp
fcoms
push
aaa
cli
push
cwtl
int
outsl
or
push
inc
nop
push
xchg
jg
es
jg
cltd
or
jbe
jg
popf
and
aad
adc
cld
and
or
dec
jge
sbb
mov
sub
jl
xor
xchg
loop
imul
mov
jns
dec
inc
adc
daa
and
rcrb
sti
jp
mov
jb
cmp
mov
jnp
mov
push
cld
stos
mov
inc
cmp
lret
jecxz
es
fcmovnu
cmc
sbb
mov
cmp
fldenv
or
push
push
ror
and
mov
and
xchg
pop
mov
and
test
sbb
loop,pt
pop
ds
int
cmovne
inc
fisubrl
mov
mov
push
adc
lahf
test
pop
inc
xor
cwtl
push
push
pop
test
bound
dec
mov
imull
ret
xorb
or
sub
ss
jo
fsts
dec
notl
push
movsb
dec
xchg
dec
cmp
and
ret
mov
scas
xorl
shl
xor
sub
pushf
add
int3
sbb
lea
dec
sbb
mov
sbb
aam
lret
sti
lea
cmp
pop
jo
mov
jl
sbb
and
mov
push
sbb
enter
add
inc
movsb
in
push
movsb
xchg
out
in
jnp
fcoms
adc
jo
cmp
or
or
iret
daa
fldenv
test
adc
cs
mov
xchg
scas
lahf
mov
test
popf
mov
ja
xchg
adc
data16
adc
mov
jb
jb
and
repnz
cld
int3
shll
dec
xor
or
push
ja
cmp
test
lret
sub
fldenv
pop
lret
xchg
sarl
push
sbb
cmp
icebp
aaa
sub
and
sub
outsb
subl
lret
in
pop
dec
add
sbb
sub
mov
push
test
jge
add
cmp
or
sbb
rolb
pop
mov
and
out
loope
push
push
push
fcmovnu
mov
adc
adc
sbb
movsl
mov
and
xlat
pop
out
adc
scas
xchg
mov
mov
jno
xchg
test
lods
ja
popf
xor
or
xor
leave
xor
jne
lret
cmpsb
ret
stc
jmp
xchg
mov
aaa
push
push
pop
push
ja
jns
pop
mull
xor
std
jnp
inc
xlat
adc
fisttpl
inc
fimuls
outsl
je
popf
xchg
mov
xor
fidivrl
jecxz
mov
xor
push
xchg
pop
hlt
xor
aad
call
cmp
pop
jbe
ret
cmp
negb
and
sbb
add
jl
pushf
bound
cmp
sarb
mov
jp
pop
ror
hlt
negb
lahf
adc
icebp
cmp
push
gs
push
mov
dec
dec
and
and
dec
fld1
nop
pop
leave
push
adc
js
adc
sbb
jo
ja
xor
cmp
push
pop
imul
mov
push
sbb
incl
int
sub
inc
mov
or
loope
sub
imul
sbb
cmp
dec
add
std
ficoml
xorb
cmp
cld
pop
les
insl
push
lahf
clc
xor
cmp
idiv
mov
nop
ja
push
dec
or
xor
dec
cs
mov
faddl
mov
testb
cmp
adc
ss
cwtl
or
mov
cmp
loop
add
mov
dec
repz
pop
xorl
ret
or
xor
dec
cmpb
dec
test
or
sbb
inc
or
push
outsb
jbe
fisubrl
lods
data16
jecxz
mov
sub
sbb
fistpll
ret
mov
loop
loope
jns
inc
mov
std
mov
mov
xchg
pop
std
sbb
cwtl
daa
sub
mov
or
mov
lock
sti
adc
jno
add
sarb
xchg
cli
push
iretw
cmpsl
mov
push
adc
mov
daa
mov
movsl
mov
mov
mov
in
add
mov
pop
fcmovnb
add
sub
mov
sbb
cmp
jnp
and
scas
xlat
inc
fwait
inc
jae
js
inc
xchg
imul
ret
cwtl
sbb
or
xor
outsb
fdivrl
pop
xchg
int3
orl
jno
add
xchg
pushf
add
cltd
jns
fldl
sbb
pushl
pop
push
mov
pop
mov
std
push
xchg
sub
mov
push
sub
xchg
xor
out
jp
scas
outsb
in
addr16
jne
push
adc
mov
jo
pop
addr16
pop
xchg
test
push
dec
pop
cmp
jnp
jo
xchg
rolb
test
sbb
imul
daa
push
sbb
dec
cmc
adc
fs
fiaddl
dec
iret
push
push
pop
outsl
sbb
mov
insb
and
xor
push
xorl
dec
push
adc
xlat
push
inc
pop
push
push
adc
or
js
push
sub
mov
cmp
jo
sbb
popf
and
inc
nop
jl
test
fisubrs
negb
push
enter
decb
dec
dec
stos
iret
xor
mov
mov
adc
push
pop
pop
movsl
cmp
push
sarl
repnz
push
xor
jne
push
adc
jmp
fimuls
mov
stos
mov
addr16
push
jae
push
mov
fnsave
pop
mov
sub
and
aad
add
pushf
mov
mov
sarb
sbb
fstpt
cld
add
and
adc
xor
sbb
mov
jnp
or
and
in
xor
mov
std
push
and
mov
adc
sub
lcall
aaa
cltd
testl
push
xchg
shl
sbb
push
push
adc
test
mov
cmp
cmp
sub
enter
xchg
cli
adc
nop
std
cltd
fildl
or
leave
cmp
fistl
push
cmpsl
xor
xchg
dec
sub
sbb
ja
sbbl
push
test
mov
ret
xchg
repz
xlat
jge
in
xor
mov
mov
sub
xor
out
ss
xchg
xorb
and
lods
mov
jo
pop
ss
and
cs
xchg
fisubl
add
sbb
mull
lret
adc
in
cmp
fidivrs
adc
inc
cmpsl
js
or
js
imul
xchg
leave
pop
or
and
jp
cmp
push
nop
xor
sbb
mov
fisttpl
popf
lcall
pop
jl
jl
pushf
xchg
addb
pop
jns
loopne
push
add
les
jbe
mov
div
jo
dec
jne
cs
scas
lahf
jg
push
xchg
xchg
cli
xor
cli
inc
fcmovu
adc
pushf
fwait
sbb
add
and
int3
out
adc
mov
lcall
cmpsl
out
sub
test
jbe
adc
push
stos
jae
cmp
fildl
and
lcall
jp
or
jb
cmp
jle
xor
sub
je
xchg
movsb
xor
dec
xchg
push
scas
mov
add
jns
aam
fsubrs
push
mov
cli
mov
cli
ds
clc
push
pop
rclb
sbb
js
loopne
insl
push
push
outsb
clc
popf
popa
sbb
jl
mov
sub
fisubrs
pop
adc
inc
mov
dec
push
icebp
mov
imul
pusha
rclb
stc
ds
rorb
ret
loopne
scas
or
push
xor
cli
xor
ss
arpl
or
stos
jns
mov
nop
lahf
pop
push
insl
test
outsl
cmc
and
mov
fucomip
pop
jp
push
stos
testl
sbb
mov
mulps
dec
jg
cmp
mov
adc
pop
xorb
loopne
sahf
mov
xor
pop
in
std
fcompl
jnp
xchg
mov
push
cmp
js
lds
cli
xchg
push
xchg
pop
jl
xchg
sbb
inc
jl
fdivrs
jne
fsubrl
sbb
stos
fwait
cmp
pop
mov
sub
pop
inc
or
insb
out
push
mov
cmc
inc
rcrl
push
cmp
std
push
jae
and
adc
xchg
pop
ss
jl
loop
sub
cltd
pop
fdivs
push
cmp
and
ja
mov
xchg
cmpl
bound
aas
xor
ds
sbb
mov
adc
stc
bound
imulb
icebp
cs
in
cli
out
js
in
sarb
insb
mov
rolb
mov
cmc
sbb
dec
lods
arpl
mov
jns
fucompp
xchg
ds
push
pop
frstor
fidivrl
ss
lcall
jp
xor
in
movsb
fdivl
arpl
xchg
push
cmp
mov
ljmp
imul
aam
cmc
mov
cmp
jno
cmp
ja
daa
outsl
add
fnstenv
pop
sub
inc
repz
cmp
aaa
mov
repnz
inc
jbe
xor
sub
mov
dec
cmp
dec
cmp
mov
jp
pop
dec
push
addr16
sbb
dec
lods
push
pop
imul
fwait
fwait
inc
out
arpl
sti
pop
repnz
push
xchg
out
insb
jl
jmp
out
push
add
jp
lcall
in
aas
push
sub
in
outsl
imul
sbb
ficoml
or
stos
pop
lods
stos
xor
or
mov
sub
shl
stc
fimuls
ljmp
repnz
mov
xchg
movsl
xor
in
and
out
or
jbe
addr16
mov
data16
popa
sbbl
fbld
mov
arpl
fwait
and
sbb
mov
out
outsl
cmp
cmp
dec
sbb
fldl
pushf
in
dec
jl
inc
outsl
mov
lds
sub
mov
adc
pop
or
jns
icebp
inc
cld
fsubl
jl
out
xor
leave
ja
mov
cmp
jp
mov
xor
addb
jns
aaa
stos
daa
and
or
push
mov
cli
hlt
mov
jle
out
push
mov
lcall
sbb
inc
cmp
mov
mov
cmp
sbb
jmp
ja
mov
xchg
add
dec
js
cmp
mov
mov
jp
inc
bound
mov
mov
jne
mov
dec
sbb
outsb
mov
dec
dec
aam
xor
xor
dec
mov
cmp
in
imul
das
cmp
push
int
in
or
outsb
ret
nop
pminsw
sbb
cli
cmp
dec
push
imul
sub
push
mov
aad
lcall
jb
push
jb
jmp
arpl
mov
sub
inc
out
cld
fsubl
pop
popf
and
push
mov
xchg
aaa
mov
xor
push
out
shlb
in
or
lcall
aad
jp
cmp
push
adc
pop
outsl
ret
dec
sbb
jo
push
inc
es
mov
mov
mov
stc
sahf
mov
loop
pop
pop
lahf
lret
jnp
cs
scas
mov
dec
sub
add
aaa
pop
dec
test
aam
fcompl
sbb
cmp
jns
mov
pop
adc
dec
jp
xor
ret
sub
mov
fcoms
mov
xchg
pop
fdivl
pusha
sbb
push
ss
jle
sub
cs
jns
mov
gs
mov
mov
fwait
out
insb
or
cmp
sarb
xchg
popf
dec
lret
pop
dec
jnp
xchg
sub
push
stos
pop
repnz
fsincos
pushf
or
jmp
outsl
push
popf
jl
xchg
xor
inc
and
dec
mov
xor
call
jg
inc
roll
pop
push
and
dec
leave
jae
arpl
out
jp
dec
cmp
push
xchg
cmp
cmp
testb
push
pop
pop
fwait
mov
mov
fcoml
jne
and
jmp
mov
mov
jl
mov
mov
mov
les
mov
sbb
out
pop
aaa
inc
jbe
inc
out
scas
or
sub
sbb
push
pop
ljmp
pop
cli
sub
sbb
cli
xchg
sahf
push
addr16
pinsrw
dec
sbb
cmp
xchg
xchg
sub
push
or
jmp
jle
pop
or
outsl
cli
lock
outsl
mov
cld
sbb
dec
xchg
mov
stos
mov
sbb
jno
cld
sub
and
jmp
dec
sbb
stc
push
cmp
popf
sbb
ret
or
fisubl
lcall
dec
sbb
jae
jbe
pushf
imul
shrl
mov
outsl
stc
xlat
xchg
loop
push
mov
idivl
push
inc
jmp
std
insl
or
mov
dec
gs
fdivrs
xor
ss
sub
lcall
icebp
mov
fisttpll
sbb
jns
lahf
das
mov
pop
out
or
fisttps
push
leave
dec
cs
roll
adc
incb
stc
fs
cmp
das
les
in
jecxz
mov
hlt
adc
fisubl
aaa
rcrb
or
cmp
pop
and
sahf
push
pop
dec
cmp
ficomps
cmp
xchg
imul
in
call
xlat
jnp
out
inc
aad
insb
sbb
jp
mov
sub
cli
push
lea
add
cltd
xlat
push
xchg
ja
push
mov
outsl
mov
cmp
ljmp
in
movsl
jo
enter
ds
sbb
sbb
jecxz
idivb
push
outsb
push
sbbl
mov
mov
sbb
pusha
sahf
gs
dec
push
roll
std
push
sbbb
mov
push
loopne
bnd
aad
xchg
xchg
add
xor
andl
in
mov
push
xchg
repnz
test
and
lods
and
hlt
sbb
inc
xor
adc
and
pop
jge
insb
cwtl
into
and
jo
push
adc
xor
lock
fisubs
mov
cmp
lahf
jg
xchg
or
pop
call
mov
xor
pop
inc
pop
rcrb
pop
lds
imul
push
fmull
inc
cmp
sub
push
mov
xchg
jae
mov
adc
test
push
and
mov
cmp
sbb
imul
jmp
jo
xchg
test
dec
arpl
xor
ja
xchg
xchg
cli
repz
and
jo
in
enter
cli
pop
test
dec
imul
negl
jmp
or
sub
jns
js
js
pop
mov
cmp
stos
mov
int
push
xor
or
adc
insl
loope
pop
imul
mov
cmp
dec
cmpsl
xchg
ss
cmpsl
ja
mov
sub
mov
gs
xchg
popf
cli
inc
xor
imul
andl
mov
push
sbb
or
push
mov
lock
xchg
cltd
and
std
ret
xchg
mov
movsl
mov
push
mov
lock
fdivl
lcall
cmp
adc
inc
xchg
pop
stc
sbb
out
stos
int
dec
push
jnp
fstps
in
dec
ficoms
dec
inc
mov
outsl
mov
xchg
fildl
xor
sub
std
cmp
adc
orl
movsb
jl
mov
pop
aam
push
jecxz
or
dec
inc
jge
iret
add
add
jo
push
adc
std
xchg
push
push
xor
sub
jbe
add
cmp
adc
xlat
jne
or
call
fnstsw
int
loopne
sbbb
scas
orb
dec
popf
stc
and
dec
stos
cltd
xchg
xchg
fstpl
mov
and
xchg
push
xchg
imul
push
sub
inc
fistps
rcr
xlat
push
mov
jge
dec
lock
pop
push
out
pop
dec
xchg
or
int
shll
out
push
jnp
ds
cwtl
mov
add
imul
mov
push
xor
stc
iret
cli
icebp
xchg
add
push
mov
test
mov
sbbl
hlt
sti
jne
dec
stc
sub
cmp
movsl
leave
loopne
in
mov
fisubrl
addr16
out
pop
test
mov
cmp
es
ljmp
sub
sbb
decl
dec
jne
mov
shl
lds
and
or
pop
andb
xorl
pop
loope
mov
mov
sbb
out
dec
mov
bound
imul
or
dec
and
out
sar
mov
lahf
cmp
cmp
pop
sub
jl
xor
sbb
imul
mov
xor
pop
out
test
adc
push
mov
sbb
xlat
dec
in
or
cmpsl
sub
mov
push
jg
dec
daa
fbstp
jae
scas
xor
sti
inc
cmp
and
pop
movsb
fs
fsts
xor
jmp
pop
adc
xchg
xlat
fwait
jge
enter
push
mov
mov
sbb
adc
lcall
sbb
leave
or
cmp
lret
repnz
push
cli
xor
push
sbb
mov
imul
mov
leave
int3
decb
xchg
push
cwtl
jp
fisubl
inc
jnp
sbb
xlat
repz
rcll
lret
test
icebp
imul
jne,pt
cmp
fcoms
dec
cmp
sbb
icebp
pop
and
repz
imul
cmp
insb
cmp
in
or
imul
and
mov
mov
push
or
mov
xlat
addr16
lods
bound
xchg
xor
imul
jecxz
incl
rolb
pop
sbb
sbb
lret
stc
jns
and
mov
mov
orb
cmp
mov
mov
adc
jae
push
and
jg
mov
adc
outsl
faddl
fdivrl
loop
data16
adc
push
pushf
ficomps
dec
push
add
pop
lret
insb
pop
out
lret
pusha
cmp
shll
cmp
push
mov
pop
push
and
pop
dec
cmc
in
jns
xlat
push
dec
or
pop
sbb
mov
in
orb
mov
stos
xorl
shrl
arpl
pushf
lock
mov
xchg
or
push
mov
data16
xor
sub
bnd
repz
sbb
mov
cmpb
sbb
insl
xlat
pop
test
mov
jge
mov
and
pop
mov
xchg
cmc
out
inc
jmp
imul
into
popf
xor
sbb
ljmp
xchg
aad
cmp
sbb
push
mov
and
xchg
lahf
mov
divl
mov
imul
mov
aam
lret
imul
add
andb
cmp
lcall
rcr
xor
or
add
mov
jo
and
xchg
mov
xlat
sahf
loope
fldt
cld
jle
xor
ffree
stos
loop
je
and
pop
jno
xlat
imul
clc
lcall
fwait
out
popa
mov
and
or
push
out
xor
xor
das
into
sub
inc
inc
xchg
mov
and
jp
aad
push
insb
dec
mov
lret
lods
mov
je
cli
pop
push
add
gs
cmp
add
test
mov
sti
push
mov
jnp
inc
pushf
pop
push
add
and
stos
stos
or
sub
dec
mov
mov
fcomi
inc
faddl
sub
add
mov
fildll
xchg
sub
jns
push
push
pop
adc
arpl
incb
popf
push
aam
rorb
mov
test
sbbl
imul
adc
dec
movsl
bound
faddp
std
inc
js
mov
lcall
aam
call
xlat
mov
bound
fisttps
push
movsb
outsl
and
aam
rol
lods
xchg
mov
icebp
push
mov
push
xchg
xchg
push
mul
mov
xlat
ds
jl
push
or
push
cmp
mov
mov
mov
sbb
imul
jno
sarl
xor
lcall
bound
imul
arpl
jp
stos
push
cs
ficoms
ret
in
and
inc
jp
js
ljmp
and
inc
inc
mov
xchg
test
in
insb
addr16
fucomip
mov
dec
pop
fcompl
das
notb
cmp
stc
jp
xor
sbb
jle
nop
xchg
mov
stc
add
and
fwait
push
out
mov
inc
shll
jmp
pop
push
jns
and
es
in
andb
fstpt
leave
cmp
jns
dec
es
sub
stos
es
out
add
xor
bound
pop
fxch
in
xor
cmc
add
sub
rcl
or
cmp
hlt
clc
and
call
pop
push
jae
inc
daa
xchg
push
std
imul
pop
xor
pop
aam
lcall
mov
or
push
mov
xlat
lahf
mov
xor
xor
dec
cmpsb
std
push
push
sbb
xor
or
mov
fldcw
icebp
adcl
inc
gs
mov
out
sti
dec
idivl
stos
mov
mov
pop
lret
shll
pop
adcl
ss
push
jge
outsl
into
cmp
fildl
jno
int3
imul
insb
sub
mov
pusha
and
jmp
xlat
dec
xor
sbb
sbb
into
pop
mov
repnz
hlt
cmp
out
enter
mov
cmp
jmp
std
pop
dec
or
dec
push
fldt
cmpb
jno
sbb
xchg
pushf
inc
inc
hlt
jmp
dec
mov
cmp
cmc
cmpsl
int
fisubrs
ret
fisttpl
jg
jne
aaa
in
jbe
xlat
shl
mov
pop
orb
mov
dec
es
sub
sbb
mov
int3
aam
jns
push
lods
mov
ja
cmp
aam
ficoms
xchg
jmp
stc
fcmovbe
pop
out
stos
hlt
and
nop
mov
mov
aas
mov
mov
nop
and
xchg
fstpl
rcl
sbb
cmp
xor
outsl
shlb
or
pushf
aam
lahf
cmp
addl
es
stc
inc
in
cmpsl
mov
sub
fstps
popf
push
xor
mov
mov
sub
rorl
mov
fnsave
sub
push
jne
stos
clc
mov
divl
imul
sbbb
mov
sbb
adc
jl
sbbl
fldt
sub
xchg
inc
push
mov
insl
sti
jle
jno
repz
notb
push
rclb
addl
and
or
test
cli
dec
xlat
jle
xchg
int
mov
fldcw
xchg
out
into
stos
and
xlat
push
inc
and
outsl
adc
ds
std
mov
stc
dec
sbb
arpl
pushf
mov
pop
dec
imul
lcall
jl
push
or
pop
and
mov
cmp
into
xor
jmp
xlat
and
adc
outsl
lock
push
sbb
mov
stos
sub
outsl
test
push
jecxz
testb
mov
js
mov
cmp
rolb
mov
cmp
cmc
cltd
movl
gs
adc
add
jb
in
cs
stc
fnstenv
int
adcb
dec
rol
and
cmpsl
inc
lret
lcall
jns
js
lock
fstpl
xor
dec
cltd
cmp
test
addr16
aam
sbb
adc
repz
jg
repnz
xor
cli
ret
sbb
mov
test
in
mov
sub
lahf
jno
pushf
or
stos
lods
sbbl
dec
push
add
imul
mov
ds
jl
xlat
xchg
lcall
hlt
mov
pop
mov
jbe
xlat
movb
rorl
dec
arpl
jnp
push
int
ret
je
cmp
sub
dec
mov
mov
enter
fsts
and
inc
mov
shl
xor
mov
sub
push
sbbb
or
dec
cmpsl
insl
into
dec
in
mov
mov
addr16
call
std
adc
outsb
jg
cli
lret
fcoml
daa
outsb
loop
insb
xchg
out
cld
jecxz
pop
inc
adc
cmp
xlat
cmpsb
daa
subl
pop
mov
or
mov
icebp
js
ret
or
movsl
cmp
loop
loop
push
pop
sbb
ret
jmp
addl
movsl
sbb
test
dec
cmp
test
es
test
jns
xor
dec
pushl
daa
xchg
aaa
dec
pop
iret
inc
push
in
xlat
popa
out
in
xor
lret
sbb
cmp
cmp
xor
lcall
negl
rorb
jbe
sbb
sbb
jg
lret
mov
test
mov
subl
mov
adc
in
jl
iret
cmp
ret
xor
and
lods
loopne
push
xor
mov
adc
ficoml
mov
push
pop
mov
loop
push
or
xlat
adc
mov
dec
test
aaa
dec
roll
sbb
std
ss
jp
pop
sahf
inc
push
xchg
mov
shrb
rcrb
add
fcmovbe
stc
mov
adc
mov
push
sub
fwait
out
xor
pop
popa
testb
xor
xlat
xor
dec
sub
movl
mov
out
pop
pop
pop
rorb
lahf
nop
cmp
clc
lods
xor
orl
push
ja
dec
xlat
xor
daa
mov
lds
outsb
cltd
ret
push
cmpb
cmc
fwait
outsl
stos
mov
cmpsb
xchg
call
or
stos
mov
std
mov
loop
jb
outsb
xlat
push
notb
jecxz
and
rcrb
outsb
fdivp
lds
daa
outsl
fcmovnbe
scas
cmpsl
or
pop
push
xchg
xlat
mov
add
mov
stc
dec
fmul
dec
jno
pushf
pop
or
cmp
jae
mov
xchg
add
jmp
flds
add
or
pop
mov
arpl
mov
sbb
arpl
jo
push
pushf
dec
lea
ss
shll
dec
insl
or
xor
ret
cmpsl
rorl
pushf
push
inc
xchg
stc
mov
sub
sub
in
mov
xor
decl
inc
sbb
mov
mov
and
scas
jg
xchg
stos
adc
pushf
mov
mov
mov
fidivrs
test
lahf
xchg
dec
aas
fsubs
pushf
mov
pushl
pusha
jbe
stc
or
dec
filds
jb
or
and
mov
orb
outsl
sahf
cmc
fidivrl
xor
cmp
mov
daa
pop
test
hlt
and
cli
push
cmp
or
add
lcall
or
push
xlat
sbb
movsl
shlb
test
xchg
orb
cli
xorl
xchg
jg
and
repz
sbb
mov
iret
dec
testl
xchg
or
pushf
pusha
sbb
jb
pop
std
scas
out
xor
repz
and
iret
icebp
xchg
repz
outsb
cmp
sub
or
push
jns
push
xlat
xchg
inc
test
sbb
rorl
inc
addr16
push
fcompl
dec
jo
mov
pop
pop
fwait
daa
pop
mov
call
xchg
rclb
je
in
xchg
cwtl
mov
mov
and
ds
stc
dec
in
fisttpl
push
push
xor
mov
xor
jl
stc
nop
outsl
mov
mov
cmpsl
rcll
call
add
flds
cmc
sub
xlat
and
xor
mov
jae
pushf
cmp
jge
addl
and
in
xor
decb
mov
push
ja
sub
push
mov
xchg
mov
xlat
mov
mov
sub
lret
xlat
dec
mov
testl
gs
lock
cmpsb
imul
ss
pop
mov
mov
insb
loop
xor
jg
mov
adc
icebp
lret
outsl
ret
pop
jge
repnz
fdivrl
ds
pop
pop
and
ja
sbb
loopne
cmp
std
mov
std
push
popf
push
adc
fstpt
mov
push
psubusw
mov
jno
jns
xchg
jmp
jp
dec
push
dec
std
out
fwait
mov
mov
jg
mov
stos
loopne
lret
sub
xlat
ret
cmp
mov
push
jg
cmp
arpl
shll
fldt
hlt
stos
add
insb
add
mov
xor
fcmovne
inc
adc
pop
xor
adcb
xchg
dec
loope
aad
dec
add
mov
sbb
jne
ja
fnsave
xor
mov
dec
xchg
sub
or
ljmp
xlat
cld
adc
fildl
pop
loopne
pop
xchg
cld
jp
and
lods
adcb
out
sahf
mov
sbb
inc
sbb
mov
pop
stos
data16
cmp
or
js
ss
pop
nop
in
sub
add
pop
rclb
sub
jae
stos
insl
push
test
jno
lret
aaa
jmp
pop
fisubrl
xor
inc
aad
imul
push
and
and
or
nop
sbb
mov
fildll
cmpb
and
scas
fcmovne
inc
adc
cmp
ret
es
mov
mov
in
scas
mov
mov
push
std
orb
mov
push
cmp
pop
cmpsl
jge
push
push
inc
lods
xor
push
iret
and
jp
nop
push
inc
pop
nop/reserved
fwait
leave
xor
cmp
and
cmp
mov
cmpsb
adc
je
mov
daa
adc
je
xlat
mov
pop
movsb
das
out
sbb
mov
sub
inc
rorl
test
enter
mov
call
sub
lret
push
out
sbb
pushf
jl
scas
or
ds
mov
xchg
mov
test
repz
stc
adc
push
xchg
imul
jo
loopne
shl
xor
icebp
jnp
jmp
xor
xchg
out
and
outsb
aad
ljmp
jae
cmp
cltd
jmp
xchg
fmull
mov
decb
xor
dec
dec
xchg
nop
std
subl
jge
cmp
popf
test
or
lret
nop
int3
jns
cs
aas
push
int3
jmp
hlt
imul
push
fstpt
fs
and
lods
test
lcall
xor
mov
fldt
push
dec
xlat
loope
rcr
sbb
sub
movb
mov
xchg
xor
cmpsl
mov
ret
mov
mov
pop
nop
lods
cmc
push
pop
stc
dec
test
lods
aam
adc
fcmovnu
popa
jmp
inc
jns
jns
subl
and
ret
sbb
andb
aad
sub
add
cmp
dec
add
cmp
addr16
mov
add
sbb
js
push
cmpsl
xchg
fldl2e
lret
jne
mov
pop
xor
xchg
xchg
imul
xor
pop
outsb
or
jo
fcomi
shl
test
lea
lock
cmovne
icebp
push
sbb
stc
lahf
das
loopne
sub
inc
or
jb
mov
xchg
cmp
jb
mov
test
sub
cmc
jle
int
and
aas
xchg
dec
xor
lahf
xchg
pop
enter
repz
pop
pop
gs
rcrl
cli
imul
sbb
push
xchg
or
mov
pop
enter
mov
repnz
mov
lret
int3
xchg
xor
int
lcall
push
cmp
xchg
mov
push
adc
stos
jnp
pushf
rorb
push
dec
pop
mov
sbb
hlt
and
push
jns
mov
mov
addr16
sub
fiaddl
and
out
pop
cli
test
xor
mov
push
fnstenv
das
fcomp
inc
sub
mov
dec
pop
cmp
imul
push
adc
xor
mov
cmp
mov
inc
push
inc
mov
imul
pop
add
xor
stc
stos
into
dec
xchg
movsb
and
addr16
jge
dec
dec
sub
and
es
mov
mov
push
cmp
lret
pop
imul
pop
in
and
nop
ret
jle
adc
pop
adc
cmp
call
mov
sbb
pop
xchg
cwtl
inc
push
jl
add
add
inc
mov
cmp
push
ficoms
mov
jmp
adc
mov
and
xlat
sbb
fistl
ret
pop
cli
sbb
xchg
fldt
dec
xlat
mov
filds
dec
mov
movsl
fbstp
aaa
ficomps
sub
sbb
lods
cmp
mov
add
xlat
mov
lcall
add
push
or
jnp
xor
push
enter
fisttpl
xchg
aas
cmp
sub
push
xor
popa
aad
sbb
mov
mov
jmp
xlat
insl
pop
test
and
les
xchg
pop
test
xor
or
add
icebp
add
xor
cmp
cmp
sti
fdivrp
sbb
adc
xlat
mov
sbb
popa
push
dec
roll
das
jp
push
mov
xlat
mov
sbb
cli
inc
mov
push
xchg
dec
stos
jmp
xor
pop
ret
sbb
dec
ljmp
mov
jp
adc
or
sub
xchg
ja
addb
pop
push
sub
popf
das
xor
cmp
movb
xchg
out
out
mov
cmp
xor
rorl
sbb
jg
test
and
addr16
jge
cmp
jp
inc
cmp
movsl
mov
test
add
loopne
xchg
push
push
mov
jmp
mov
out
fdivr
xchg
push
rorb
es
mov
mov
mov
hlt
or
stc
ret
dec
lahf
pop
and
push
nop
xor
in
or
pop
test
push
mov
mov
cli
test
fldcw
adc
nop
ja
or
ss
int
add
arpl
adc
cmp
fiaddl
mov
sub
xor
xchg
add
rcrl
sub
jecxz
jo
jnp
stc
fprem
dec
cmp
push
notl
cmp
ss
nop
dec
fnstenv
out
mov
shl
aad
and
xlat
lods
dec
orl
out
imul
mov
mov
imul
jae
push
add
aad
cmp
push
jg
insl
jp
cmp
pop
cmp
cs
mov
enter
mov
mov
arpl
imul
dec
ret
pop
ja
push
insb
out
mov
int
mov
mov
mov
arpl
out
dec
es
push
fbld
pop
or
pop
int
cltd
or
or
data16
cli
aam
fmulp
stc
imul
jno
sbb
sbb
xlat
test
ds
cmp
mov
xchg
mov
xchg
scas
push
jae
push
enter
mov
dec
sti
leave
aaa
loop
push
push
fisttpl
sti
inc
mov
std
ret
rcr
push
and
sbb
sbb
ljmp
mov
jnp
xlat
sbb
ss
cmp
data16
repnz
pop
nop
sub
je
loop
add
mov
sbb
nop
adc
clc
mov
xlat
sub
shrl
push
inc
sbb
cmp
jmp
push
aad
icebp
jnp
jge
nop
sti
and
sbb
or
or
pushf
add
add
iret
scas
adc
adc
loopne
in
push
call
push
cmp
fsin
mov
inc
mov
out
add
mov
xchg
test
adc
add
popa
xchg
cs
pop
das
rorb
in
and
shlb
inc
push
mov
cmp
repnz
push
ret
mov
imul
push
rcrb
imul
movsl
pop
repz
adc
lahf
cmp
sar
dec
mov
mov
push
xchg
ret
lods
popf
jns
sub
inc
stc
dec
mov
adc
pusha
ja
sub
dec
push
jmp
inc
jae
leave
cmp
mov
stos
ret
ficomps
icebp
sbb
cmpsl
xchg
jbe
cmp
dec
loop
shr
jge
in
icebp
loop
pop
cmp
or
push
fnstenv
adc
sarl
fwait
and
and
jle
sbb
xor
pop
mov
fistps
pop
loopne
jmp
test
negl
xor
sbb
je
add
mov
lock
in
push
fisttpl
inc
dec
shrl
jecxz
xor
jno
jo
mov
mov
inc
loop
incb
xchg
and
jne
cwtl
mov
xchg
cmpsb
mov
push
sub
aad
mov
cmp
outsl
mov
adc
jl
adcb
dec
nop
pop
jecxz,pt
push
inc
lret
jmp
add
push
mov
fwait
and
sbb
stos
xchg
orb
adcb
loopne
mov
mov
scas
jl
adc
jae
mov
lds
push
cmp
jmp
jge
sub
int3
outsl
jno
bound
ja
inc
jmp
jns
daa
lcall
lock
fistpl
inc
mov
loop
cli
push
adcb
push
push
sbb
xor
mov
test
sub
movsl
or
sbb
push
stos
test
orb
cli
lahf
jns
jae
jge
loope
sbb
inc
arpl
dec
mov
mov
ljmp
inc
jle
imul
jne
mov
adc
lcall
and
xchg
shlb
add
cmp
insb
xor
and
movsl
aam
mov
imul
ds
aam
jno
sbb
cmpl
push
sbb
cmp
add
ret
in
jl
pop
xchg
in
dec
sub
jl
nop
adc
iret
pop
pop
ja
xchg
jns
cli
or
ret
xlat
fstpt
dec
fmull
inc
pusha
ret
and
cli
subb
insl
loope
jbe
jo
sti
mov
lea
push
in
mov
outsl
fstpt
jb
mov
sub
fistl
in
and
fs
and
jb
jo
loope
push
cwtl
add
or
mov
add
sarl
adc
js
in
into
das
cmp
insl
push
popa
xchg
ret
pop
add
scas
lret
pusha
fldt
movsl
leave
push
xlat
mov
outsl
sbb
cwtl
fnstenv
stc
jg
fldcw
inc
adcl
xor
stos
in
jg
imul
mov
jo
loop
fwait
inc
add
mov
cmp
jp
sti
das
lods
xchg
decb
in
out
fistl
jp
movsb
xlat
mov
mov
mov
cli
mov
mov
ja
fimull
push
test
shr
cmp
cmp
xchg
xchg
adcb
imul
push
das
flds
je
daa
addr16
cmp
fs
adc
leave
daa
fs
xor
mov
or
popa
mov
cmp
xor
dec
push
pop
push
mov
movsl
and
push
sbb
jg
jae
mov
push
popf
cmpsl
sbb
and
xor
mov
fs
pop
mov
loopne
jns
sbbb
sub
fisubrl
fcompl
pcmpeqd
push
dec
imul
mov
jbe
jecxz
imul
out
rcl
popf
sub
mov
cmc
fnsetpm(287
push
xchg
hlt
jmp
mov
mov
xor
loope
in
out
pop
jb
push
xor
repnz
or
sub
xlat
loope
subl
pop
pop
jns
fistpl
outsl
sbbl
mov
shl
in
sub
cmp
fidivrs
adc
xor
es
imul
pop
test
cmp
fptan
dec
cld
hlt
xlat
mov
fs
add
hlt
dec
lock
andnps
jle
cs
in
jbe
and
jmp
repnz
sub
pusha
fimull
out
out
nop
stc
test
sbb
xlat
adc
dec
lahf
jb
push
lret
aas
in
imul
pop
and
add
fwait
dec
cwtl
push
cmpsl
dec
xchg
adc
mov
jg
or
aad
sbb
jecxz
xor
les
dec
lds
sbb
leave
cmpsl
nop
test
dec
leave
mov
fistl
sbb
ret
mov
lods
movsl
jg
mov
xchg
cwtl
cmc
es
pop
inc
cmp
xchg
xchg
mov
gs
and
rcrb
dec
jge
fstpt
cmp
push
imul
mov
mov
fsts
add
ja
sbbl
icebp
cmp
xor
lods
mov
mov
je
lahf
mov
fwait
gs
in
int
lock
stc
fldcw
dec
adc
xchg
jmp
mov
call
xor
cmpsl
jo
cmp
test
loope
adc
mov
dec
fcoml
xor
int
fdivs
fstpt
jnp
imul
flds
sbb
loopne
sub
stos
add
and
repz
xlat
or
mov
inc
jae
or
rorl
icebp
mov
lret
xchg
cmpsb
cmp
inc
xor
aam
testl
mov
ficoms
aas
mov
les
pop
xchg
fiadds
std
jno
daa
push
jl
lcall
jge
push
push
add
jno
push
xor
out
fs
dec
and
mov
stc
pop
xor
sbb
adc
cmpsl
out
jl
xlat
cwtl
push
pop
stc
std
data16
outsl
imul
enter
mov
mov
jae
jl
lret
stc
jb
notb
ds
xor
in
subb
lret
mov
or
enter
fisubs
loope
push
ja
mov
jns
jge
jno
sbb
push
dec
mov
in
sahf
cmp
popl
push
sar
dec
or
in
mov
mov
movsl
mov
jle,pt
popf
sub
stc
and
cmpsb
mov
dec
call
cmp
mov
adcb
or
hlt
mov
ljmp
sbb
pop
dec
pop
fstpt
pusha
cli
cmpsl
dec
imul
fsubrs
mov
in
inc
into
pop
push
fildl
mov
jo
stc
cmc
out
pop
mov
sbb
pop
xor
and
cmp
jp
aaa
cmp
adc
adc
push
cwtl
sub
xor
fisubrl
cwtl
jns
pushf
enter
bound
es
icebp
divl
rorl
push
xor
inc
push
cld
mov
jge
and
test
iret
jnp
pop
push
es
push
lret
xchg
stos
mov
jae
pop
mov
clc
jg
jg
cmp
push
mov
pop
cmp
shl
or
jg
movsb
xlat
inc
or
xchg
mov
andb
adc
and
bound
mov
ljmp
inc
mov
add
insl
pusha
sub
fsubrl
aam
xor
les
addr16
fs
and
push
insl
jo
lahf
movsl
sbb
xlat
int
mov
or
ret
daa
mov
pop
xlat
push
fistpl
movl
fsts
pop
sti
out
insl
sarl
push
incb
call
push
jmp
jp
xor
fisttpl
test
lds
sub
rorl
mov
mov
xor
leave
movsl
fisttpl
and
xor
xchg
pop
inc
neg
aad
rcpps
xchg
pop
fcoml
xor
inc
mov
jbe
and
fstpt
ja
dec
insl
push
into
ret
xor
adc
shrb
jecxz
popf
out
fwait
pop
sahf
loop
jp
fchs
xchg
ficoms
jge
mov
xlat
and
ja
cmpsl
push
nop
push
jp
pushf
pop
outsb
mov
std
dec
push
mov
sbb
arpl
jmp
andl
pop
shrl
pop
mov
fsub
je
roll
pop
mov
outsb
insl
mov
xor
jne
mov
lret
or
cld
stos
int3
xchg
adc
lock
fnstcw
fisttpll
les
cs
push
dec
push
movsl
cli
out
xor
lcall
dec
idivl
sub
cmp
jmp
mov
and
jp
fdivrs
fcomi
pushf
ja
test
cmp
adc
popa
and
pop
xlat
push
add
inc
and
sti
inc
or
pop
xchg
push
bound
dec
pop
and
xlat
cs
fsubl
add
mov
nop
hlt
mov
and
push
lock
stos
cmp
mov
mov
mov
ljmp
dec
mov
fsubrl
add
insb
mov
aam
xchg
int3
cmp
mov
dec
cmpsl
shl
repz
int
fs
scas
lods
fucomip
out
std
cmpsl
xor
outsl
dec
shufps
xor
movsl
mov
fdivp
aas
fs
mov
mov
adc
fwait
add
cs
cmp
jecxz
inc
cli
fldt
push
xlat
adcb
cmpsb
pop
cmp
dec
mov
mov
divl
or
into
dec
and
mov
xchg
mov
andl
aaa
cmpsb
pop
pop
fildl
push
lock
push
jae
shll
scas
dec
mov
das
push
lret
pop
and
mov
and
mov
mov
inc
pop
and
int3
sahf
push
fildl
stos
adc
adc
sahf
aam
lds
push
mov
fildl
adc
push
int3
aaa
push
test
hlt
jbe
pop
jns
sbb
pusha
stc
in
ja
push
pop
outsl
cli
daa
xchg
sub
sbb
dec
movsl
sbb
lahf
int
jae
pop
cs
jp
and
fildl
xor
jnp
pop
mov
sub
out
movsl
or
add
dec
jbe
cltd
xabort
cmp
ds
dec
jne
popw
xchg
or
ljmp
xchg
repnz
sub
xchg
adc
inc
adc
push
jns
scas
inc
gs
repz
enter
adc
cld
cmpsl
rcl
pop
xor
imul
xchg
lcall
adc
push
jge
lahf
xchg
inc
sbb
push
sbb
pusha
jle
andb
xlat
jle
push
test
cmp
out
imul
xor
in
mov
push
sbb
jns
sbb
lahf
push
icebp
dec
sub
std
mov
jp
fldcw
aam
xchg
jae
push
mov
push
pop
fdivrs
pop
into
jmp
test
adc
and
icebp
fistpll
mov
push
mov
inc
in
push
popf
pushf
out
push
xlat
clc
testl
adc
stc
inc
in
outsl
hlt
inc
mov
jmp
and
rorb
rclb
movsl
jae
pop
out
pop
stos
cwtl
icebp
cli
mov
std
subl
andb
mov
adc
push
imul
lcall
mov
jns
nop
push
mov
loope
imul
pop
push
mov
cmp
pop
popf
mov
push
xchg
xlat
iret
adcb
outsb
outsl
sub
pusha
or
dec
dec
adc
iret
push
mov
adc
jl
lret
pop
xchg
ret
scas
pop
push
cmovle
movsl
push
pop
movsl
popa
fdivrp
xor
or
and
xchg
sub
or
adc
push
sub
fistl
in
pop
xor
mov
pop
adc
mov
loop
cmp
dec
cli
xor
es
nop
decb
or
sbb
push
sti
flds
mov
pop
movsl
fldt
xlat
adc
jg
pop
out
xchg
sbb
jbe
mov
movsl
jecxz
sahf
shrb
jmp
inc
add
sti
pop
xor
out
mov
jae
xchg
jbe
sub
and
rcrb
int3
cli
imul
and
outsl
loop
sub
inc
xchg
call
pushf
pusha
sbb
mov
sub
cs
movsl
movsb
cmp
and
add
or
mov
or
push
fidivl
xlat
dec
dec
mov
adc
push
out
xor
sub
add
sub
xchg
xorb
sbb
mov
jg
je
mov
push
call
mov
jae
gs
addb
dec
adc
cmp
dec
push
orb
jl
add
add
stc
cmpsl
sbb
lret
and
fistl
je
fdivrp
mov
sub
dec
sub
adc
testl
jno
xorl
add
push
dec
sub
xor
pushf
push
and
mov
gs
mov
idivl
pop
ljmp
lods
mov
dec
cmp
mov
sti
add
int
fwait
pop
outsl
pop
dec
ret
push
push
fistpl
jno
adc
cmp
inc
push
insb
xor
or
shr
pop
pop
jbe
aaa
dec
imul
xchg
or
xchg
repz
nop
imull
xchg
out
or
pusha
test
enter
push
dec
fildl
repz
and
shll
cmp
sbbl
mov
jo
xchg
mov
xchg
js
xlat
mov
call
and
mov
bound
dec
addr16
repz
adc
mov
ret
enter
mov
pop
and
mov
push
jge
and
mov
fcmovnbe
pusha
dec
je
nopl
stc
je
je
ja
push
aad
jns
ret
cmc
sub
and
push
movsl
jecxz
xlat
loope
iret
mov
mov
cs
pop
or
cmc
jo
fildll
inc
fsub
push
xlat
ds
cld
fsubl
dec
add
sub
lret
out
ss
jmp
testb
mov
cmp
and
inc
fwait
lahf
and
mov
xor
popf
adc
daa
xchg
aam
or
sbb
pop
push
adc
gs
pop
iret
mov
pop
xlat
jo
jae
lret
jmp
dec
jmp
fldt
fs
cmp
inc
int
pop
stos
or
xor
addr16
dec
push
xor
jmp
add
jp
sbb
push
bnd
fisubs
cmp
sbb
insb
dec
out
pop
or
jmp
and
xchg
iret
pop
and
xor
data16
pushf
dec
pcmpeqd
in
push
jne
mov
icebp
inc
cmp
aas
js
or
arpl
je
into
dec
dec
mov
push
sbbb
jbe
iret
ja
adc
jne
cltd
pop
adc
in
adc
imul
shl
int
test
ds
jl
sub
jo
sub
jbe
mov
ret
loop
or
jns
addl
xor
enter
call
inc
cmp
shl
sti
lock
call
mov
or
dec
xchg
mov
data16
mov
add
in
addr16
cmp
movsb
jl
xlat
xchg
and
xor
jno
stc
xchg
data16
jb
ljmp
testb
push
xlat
dec
addr16
jmp
cwtl
and
sub
mov
and
xor
pop
jno
test
in
mov
add
inc
jl
in
ja
and
mov
lds
pushf
pop
sub
push
push
push
pop
scas
pop
adc
mov
imul
dec
addr16
leave
mov
jmp
fiadds
mov
mov
movsl
inc
xor
pop
mov
push
hlt
add
push
aam
subl
test
push
jp
jne
mov
mov
push
cmp
aas
stos
lahf
xor
jo
xlat
sub
mov
mov
mov
push
jg
push
dec
adc
push
test
mov
ljmp
lods
test
loopne
jmp
adc
adc
jl
ds
mov
mov
test
inc
dec
jp
lcall
push
pop
divb
rcrl
int3
sub
or
inc
daa
imul
les
out
pop
shl
daa
push
fstpt
add
mov
cli
loopne
pop
ret
movsb
lea
decb
mov
sbb
sub
movsl
or
sbb
xlat
outsb
add
ja
or
ret
or
loop
jp
std
dec
inc
xor
fsincos
sbb
sbb
jae
iret
adc
xchg
push
pushf
add
add
xchg
imul
push
in
mov
pop
imul
xor
arpl
fs
aam
lea
sub
jle
and
mov
mov
push
xlat
pop
cwtl
shrb
das
aaa
xchg
jge
inc
sub
mov
adc
sub
xchg
push
cwtl
or
out
xchg
jbe
stc
cltd
mov
pop
test
imul
sub
adc
int3
loop
popf
pop
adc
cmpsb
fimuls
add
in
iret
stc
scas
xlat
rep
and
push
jmp
jnp
xchg
das
out
sbb
mov
icebp
dec
and
jl
cmp
ds
test
or
mov
xchg
stc
in
fs
jge
dec
add
imul
mov
lods
loopne
and
stos
fimuls
or
flds
fstl
jp
insl
inc
icebp
mov
jl
mov
sub
je
cmpsb
jnp
pop
out
dec
mov
cmp
les
int3
mov
adc
xchg
add
cmc
mov
xor
mov
call
mov
mov
enter
xor
imul
andb
aas
gs
cmpsl
mov
cmp
div
dec
xlat
or
add
leave
and
stos
pop
and
xchg
jg
pop
das
xor
push
xor
mov
mov
je
sub
insb
rcll
int
sub
lods
sbb
leave
mov
cmc
jns
stc
mov
nop
iret
pop
xor
lret
xchg
dec
sub
jnp
mov
mov
fstpt
out
adc
dec
outsl
stos
fchs
adc
loopne
jb
loope
ja
cwtl
fsts
sbb
icebp
lods
out
mov
jecxz
xor
imul
loope
std
adc
dec
jbe
adc
pop
cmp
mov
movl
fxch
fcmovnbe
or
push
mov
rep
hlt
iret
push
fwait
dec
addr16
add
insl
jge
cmp
ret
mov
cmp
addr16
ret
nop
nop
imul
mov
cmc
xorl
cmpsl
data16
test
stc
test
mov
or
mov
push
jmp
mov
xlat
mov
cmpsb
into
cmpsl
cmp
sub
pop
cld
repnz
fsubrl
ja
scas
and
fldcw
sbb
in
mov
cs
xor
pushf
in
test
mov
push
and
pop
xlat
cmpsb
push
cltd
mov
and
iret
push
push
adcl
jnp
or
ja
fnstcw
jbe
dec
dec
jo
and
jae
or
sub
mov
sbbl
xlat
mov
loope
cmpsl
push
jg
les
cs
imul
ret
pop
stos
or
xlat
pop
fst
or
xchg
or
xor
cmpsl
add
cmp
push
stc
std
push
xchg
sbb
jmp
scas
jo
push
and
std
iret
cmp
neg
add
lcall
inc
sbb
sbb
push
jns
inc
xor
hlt
sub
les
mov
xor
inc
jo
sub
imul
mov
cld
adc
or
les
cmp
xor
in
or
mov
test
push
cmp
pop
fwait
in
loop
jle
loopne
mov
jae
leave
pop
test
add
sti
xor
rcrl
sbb
lcall
push
push
add
sbb
cmp
add
jnp
test
jne
ja
out
sbb
cmp
scas
lret
inc
add
pop
xchg
mov
push
movsl
cmp
popa
test
aas
pop
sbb
rol
movsl
sbb
shrb
cmp
mov
xor
mov
test
fcmovnbe
fisubrl
mov
cmp
sahf
test
std
push
or
mov
mov
mov
stos
lahf
les
fistpl
or
jle
test
fdivr
fwait
push
dec
cli
andl
mov
icebp
pop
jo
cld
push
bnd
inc
sbbb
js
sbb
cmp
dec
insb
xor
sbb
fmull
pop
ret
mov
dec
mov
mov
push
jne
pushf
test
cmpl
cli
push
sar
jno
xor
test
cmp
xlat
sub
or
test
lock
call
and
jmp
push
xlat
aas
and
lods
rcl
jae
mov
mov
in
lea
push
mov
aam
adc
dec
lret
aaa
les
sub
out
iret
sub
in
cmp
xchg
out
inc
push
mov
flds
cmp
pop
shlb
cmp
jne
push
and
add
sbb
lcall
aam
jecxz
subb
pop
mov
pop
sub
flds
int3
sub
iret
jmp
pushf
sbb
ret
xor
mov
cld
push
cwtl
fdivl
iret
xchg
arpl
dec
xor
clc
xchg
jle
cs
nop
mov
xor
xor
xor
pop
mov
inc
cmpsb
xchg
in
jno
sbb
mov
sub
xlat
popa
mov
lahf
adc
rclb
dec
not
pop
sub
test
cmp
fildl
or
adc
inc
pop
xchg
xchg
fwait
sub
xlat
pop
sub
sbb
inc
popf
icebp
insb
adc
das
adc
cmp
jae
and
cld
js
test
fwait
push
test
pushf
stos
add
mov
pop
lcall
jg
fdivr
jo
std
mov
xor
add
lds
sbb
push
sub
xchg
fcoms
mov
xchg
sub
lahf
loope
add
inc
ja
jno
lcall
xchg
cli
sub
mov
inc
jne
pusha
lret
and
outsb
pop
into
lock
clc
pop
test
xor
xchg
subl
into
sbb
xchg
cli
xor
jg
dec
test
jmp
sub
add
mov
dec
imul
ret
xchg
mov
fldt
in
imul
xchg
inc
add
mov
push
xchg
data16
jl
xor
inc
push
xorb
or
jae
es
fs
ja
sub
ja
mov
mov
and
jle
or
and
mov
lcall
push
or
shll
popf
xchg
xor
sbb
add
les
adc
sub
insl
lret
arpl
mov
roll
pop
xchg
fs
js
insb
popa
and
pop
icebp
mov
jo
pop
loope
mov
push
sbb
sbb
mov
xor
in
jo
testb
push
int
jb
lahf
mov
mov
cli
data16
loopne
mov
dec
outsb
jmp
je
add
jo
xor
jno
mov
cmp
mov
mov
pusha
or
mov
dec
adc
mov
std
nop
cmp
repz
dec
jo
pusha
dec
shrl
stc
imul
shl
je
inc
and
dec
cmp
int
pop
mov
jno
jle
jne
js
mov
xor
dec
loope
lret
lcall
or
fisubs
sbb
sbb
fstpt
mov
sarl
aas
jmp
sbb
cli
push
enter
and
imul
inc
movsb
loop,pn
sbbl
mov
jae
cwtl
outsb
mov
jnp
dec
sahf
or
fwait
mov
sarb
rorb
jns
scas
sahf
sub
or
inc
cltd
ljmp
repnz
lret
mov
mov
sbb
int
push
movsl
imul
pusha
push
je
cmp
mov
ret
xchg
cmpl
pop
push
cmp
and
je
out
test
cmp
push
out
leave
jge
enter
mov
push
xchg
fisttpl
les
pop
pop
cmpps
bndstx
inc
adc
rcl
push
mov
mov
mov
inc
pop
xchg
jle
inc
jl
dec
mov
enter
xor
sub
push
nop
dec
adc
fcmovnb
or
enter
lret
xor
shl
sbb
pusha
test
mov
pop
mov
add
lret
add
add
ret
pop
test
test
call
adc
rcrl
sub
add
add
rolb
add
xor
or
cmp
ret
cli
jno
xor
loopne
nop
push
xor
add
xor
lret
and
xlat
mov
jl
mov
fiaddl
pop
mov
in
push
push
int
sbb
lret
push
jns
outsl
popf
negl
mov
cs
xchg
adcb
adc
dec
movsb
xchg
in
pop
pop
ret
enter
sbb
mov
leave
cmp
lds
xor
sbb
lret
mov
inc
push
movsb
ljmp
loop
dec
cmp
mov
pop
lds
cmpsl
or
xor
mov
ja
xchg
mov
mov
imul
sub
out
add
mov
sub
jp
dec
push
aam
cmpsl
test
nop
js
enter
sub
test
sarl
mov
cltd
mov
mov
push
cmp
std
mov
fldl
mov
leave
imul
outsl
flds
push
out
push
sbb
cld
scas
lock
aam
xor
fidivrs
pop
pop
xlat
fcmovnu
insb
pop
sbb
jae
nop
outsl
add
pop
iret
test
sbb
mov
outsl
jge
adc
xor
icebp
fistl
push
sahf
inc
cmpsb
jmp
test
push
out
push
inc
cmp
mov
stc
pop
mov
jns
lea
dec
add
mov
cmp
ljmp
cmc
fsubrl
xchg
ljmp
repnz
icebp
sub
pop
orl
dec
add
sub
sbb
inc
push
mov
lds
xchg
and
and
pusha
xchg
imul
jae
stos
dec
pop
add
mov
pop
mov
nop
dec
lods
jmp
push
fninit
repnz
adc
popa
sbb
jg
int
mov
mov
imul
subb
ja
adc
cli
insb
cmp
cmp
out
bound
pop
jne
sub
jecxz
push
addl
xchg
shl
push
popf
mov
push
cmpsl
mov
push
dec
stc
incl
and
pop
push
data16
test
outsl
cld
shrb
cmp
mov
jnp
fimull
mov
fistpl
inc
push
fwait
jae
js
lahf
rorl
or
pop
fwait
jecxz
aaa
push
and
xor
cwtl
or
inc
cld
orl
sub
stos
lahf
pop
mov
pop
lock
add
cmp
adc
add
xchg
mov
jg
imul
jg
add
adcl
or
mov
mov
gs
add
sub
addr16
iret
out
push
pop
adc
fisubl
sbbb
outsl
add
in
mov
mov
xchg
out
jns
and
push
mov
add
std
outsb
je
cld
popa
cmp
add
les
mov
cmp
xchg
cli
or
gs
mull
daa
mov
mov
pop
or
pop
sub
mov
pop
cmpsb
adc
xchg
movsl
xor
mov
shll
mov
pop
ret
mov
mov
dec
cmp
dec
xchg
andl
stos
add
aas
mov
clc
icebp
fistl
pop
pop
outsb
in
pushf
lcall
aas
and
call
jne
je
outsl
sub
dec
scas
adc
or
fildl
mov
xlat
dec
or
jbe
add
xor
ja
daa
push
stos
xor
mov
nop
arpl
or
push
rorb
sbb
sbb
push
jns
cs
pop
push
into
add
cmc
xlat
outsl
xchg
out
xchg
std
jmp
popf
sar
sub
test
push
push
xor
add
dec
jnp
test
pop
jmp
fcmovnb
imul
out
push
cmpsl
cli
add
shll
fstpt
pop
dec
adc
or
xor
repz
pop
movb
jmp
ret
pop
andl
movl
int
stos
jne
xor
repnz
xor
ficomps
mov
in
insw
lahf
and
jo
subl
dec
pop
shlb
lods
repz
jns
jg
je
dec
mov
mov
xchg
jbe
xor
xchg
addr16
cmc
pop
cwtl
xchg
push
mov
fs
in
push
mov
dec
es
arpl
mov
sbb
mov
std
cmp
ds
or
fsubl
dec
loope
iret
test
jo
add
rcrl
inc
fcoml
mov
pop
mov
add
xchg
cmpsl
fwait
les
cmp
movsl
sarl
aad
push
xchg
sub
fisttpl
mov
xchg
mov
xlat
jb
je
test
not
cs
sahf
jecxz
scas
adc
fsubl
repz
pop
ja,pn
cmpsl
xchg
lcall
imul
jae
popa
orb
jp
dec
inc
push
xor
ret
enter
xlat
aaa
push
jmp
inc
push
loop
mov
push
adc
fdivrp
adc
negb
xchg
dec
dec
inc
or
xchg
xchg
sub
test
ss
std
xor
xlat
hlt
std
fwait
cwtl
xchg
lcall
in
es
pop
mov
or
or
pop
push
inc
imul
les
xchg
cmp
outsl
test
mov
dec
fistl
imulb
pop
push
jb
xchg
cmpsb
in
mov
fcomi
dec
mov
imul
and
negl
mov
fldcw
sbb
test
pop
push
fcomi
dec
ja
dec
into
jo
cmpsl
cmc
jae
xor
push
sbb
test
stos
inc
loope
sbb
or
mov
fs
or
movsl
int
mov
sub
popa
fistpl
adc
xor
adcl
shl
loope
jmp
push
ja
push
fstl
push
lods
stos
stos
xchg
into
enter
jne
shll
mov
hlt
jno
adc
mov
push
mov
push
or
inc
mov
or
jmp
pop
iret
xor
xchg
sub
jb
nop
outsl
xchg
sbb
jae
cmp
pop
push
dec
mov
gs
inc
jp
or
test
and
mov
mov
scas
pop
icebp
or
jmp
jnp
ds
cwtl
es
mov
inc
mov
sub
call
xchg
repz
mov
cli
sub
js
cmpsl
popf
xor
test
pushf
cwtl
xchg
adc
int
push
mov
jbe
add
mov
sbb
je
fimuls
xchg
and
insl
jp
sbb
mov
mov
cmc
call
xor
jmp
jp
xchg
mov
pop
pop
fcompl
or
lds
dec
mov
loopne
insl
mov
les
mov
leave
push
pop
imul
xchg
pop
jp
or
clc
xchg
ds
xchg
pop
orl
jo
pop
test
mov
popa
and
mov
xlat
fmuls
or
shlb
xorb
movsb
jo
sbbl
std
leave
stos
fwait
and
pop
cmp
and
imul
pop
jge
notb
cs
push
lock
addl
imul
sub
mov
xchg
and
mov
mov
xor
dec
push
iret
jecxz
fstps
fsubs
mov
out
push
ja
subl
lret
xchg
xor
or
pushf
sbb
push
les
mov
xlat
int
push
scas
lock
aam
jne
aam
sbb
ret
subb
fwait
imul
test
jp
xlat
dec
shl
out
xor
push
xor
cmp
fwait
xchg
pop
push
adc
add
pop
sbb
cmp
scas
bound
out
jb
lods
popf
sub
ja
push
push
rcrl
add
stos
jp
lods
inc
call
pop
enter
and
push
cld
cmp
add
jne
lcall
orb
jae
xchg
fs
and
pop
subl
xchg
push
xor
sbb
test
mov
cmp
scas
xchg
or
lods
sbb
fldenv
lret
test
mov
aaa
mov
xlat
push
mov
push
adc
test
jmp
jnp
fcos
ss
sbb
fs
sub
shlb
into
xor
inc
adcb
mov
add
mov
xchg
push
mov
dec
sbb
repnz
xchg
pop
sarl
popa
leave
fwait
adc
repnz
jo
mov
inc
andb
xor
fcmovnbe
and
pop
pusha
sarl
hlt
lock
into
jle
jns
jge
or
push
and
mov
xchg
jbe
loopnew
fisttpl
mov
xorb
js
or
xchg
cmp
xchg
sub
jecxz
mov
pop
mov
enter
or
je
jge
scas
mov
pop
mov
inc
shlb
xchg
insb
or
fstl
push
add
scas
aas
lcall
fucompp
pop
mov
fcomi
xor
out
lret
fdivp
xchg
pop
inc
ret
adc
fsubl
xorl
sub
or
or
jp
cmp
jae
das
shr
ja
jne
out
xor
xor
cs
and
jbe
imul
lods
cmp
orb
jno
aaa
add
mov
icebp
dec
dec
sub
movsb
adc
xlat
mov
cmp
cld
fimull
cli
push
incb
sub
icebp
inc
lcall
xor
mov
mov
xchg
sub
pop
ljmp
adc
jne
pop
sub
sub
mov
dec
test
push
shr
pop
fwait
sub
xchg
aad
out
push
mov
fsub
xchg
gs
rcl
fsubrl
xlat
test
cmpsl
push
sbb
xor
xorl
daa
sub
movsl
in
negl
negl
push
mov
stos
fadd
das
and
xor
inc
mov
mov
cmp
sub
outsb
imul
xchg
and
or
std
adc
fneni(8087
mov
push
and
stos
mov
jmp
mov
and
mov
and
jae
sbb
cs
or
mov
jmp
lcall
cs
inc
lret
cmp
jp
xlat
ret
cmp
or
dec
sar
jecxz
add
and
adcb
dec
dec
insl
xor
and
cs
std
dec
jg
rcr
ds
arpl
jae
imul
pop
push
xor
adc
add
lods
test
jecxz
lods
xchg
jb
mov
cmp
dec
cmpb
test
rol
mov
dec
rorl
pop
lods
cs
mov
and
xor
jne
jp
pop
pop
cli
ja
mul
push
mov
xchg
dec
jg
push
test
sbbb
fsubl
mov
test
cmp
cmp
xchg
xchg
ret
subl
clc
fildl
sub
std
lea
xor
jecxz
lock
sub
xchg
dec
pop
pop
fmuls
sbb
mov
aad
stos
pop
pusha
or
scas
in
xlat
and
ja
pop
jno
and
and
in
imul
sbb
jo
imul
js
stc
loop
jb
mov
jp
movsb
cmp
pop
xor
inc
inc
fcmovnb
sahf
adcb
je
insl
cmp
adc
cld
adc
outsl
hlt
das
es
inc
jae
add
std
or
mov
sub
into
fstps
fadds
dec
into
cmpsl
ror
je
xlat
xlat
push
push
cld
shrb
shl
js
add
and
mov
cmpsb
mov
mov
push
inc
rolb
push
adc
ficoml
xor
mov
mov
mov
repnz
dec
jno
dec
divb
into
or
out
inc
and
sub
pop
fdivs
lcall
jecxz
jnp
push
or
cwtl
mov
jbe
jns
jne
and
cmp
das
stos
lahf
jno
adc
lret
inc
in
jp
inc
rcll
lahf
rol
and
or
dec
shll
mov
sub
cmp
jae
and
push
les
mov
mov
rcrl
cmpsl
and
mov
inc
push
and
add
mov
stos
mov
jnp
mov
xchg
mov
or
std
fstpt
sbb
rcr
or
cmp
adc
pusha
mov
stc
jg
mov
out
inc
mov
push
mov
stc
lahf
pop
ret
mov
sbb
or
pop
push
js
dec
pop
cmp
test
adc
aaa
pop
or
fcmovu
adc
jb
jae
sbb
push
dec
stos
or
cld
iret
hlt
inc
jae
jo
mov
nop
clc
rorl
out
sbb
cmp
or
xchg
ja
data16
shl
repnz
movsl
and
imul
lret
mov
jb
cmp
out
aaa
addb
or
cld
mov
xor
fsts
xlat
xor
std
enter
ret
inc
xlat
scas
mov
inc
dec
adc
hlt
mov
popf
mov
mov
mov
les
pushf
cs
xor
push
addr16
sahf
mov
call
or
xlat
pop
test
shll
push
enter
imul
xchg
cld
lock
jp
xlat
pop
cltd
js
fldcw
ret
sbb
dec
fldt
dec
xchg
cmp
and
movl
lret
popa
dec
movsl
and
dec
dec
mov
dec
push
repnz
cmp
pop
jmp
shll
sub
hlt
fistps
sbb
insb
mov
dec
cmp
cmpsb
outsb
cmp
ja
std
xchg
cmc
scas
lret
xor
stos
xor
jno
add
xchg
test
jmp
inc
jo
push
cwtl
jl
cld
dec
xlat
loopne
sub
dec
add
xor
ljmp
adc
call
ds
jl
jl
sbb
add
sbb
mov
add
in
repnz
inc
fdivrl
add
pusha
jge
loop
movsb
in
test
jmp
cwtl
sarl
stc
mov
addr16
pushf
cmp
mov
lret
sub
hlt
imul
inc
adc
sbb
xlat
cmp
icebp
dec
sub
out
push
popa
mov
icebp
fwait
inc
inc
imul
gs
and
jl
aaa
jbe
pop
outsb
adc
pop
push
xlat
mov
int3
mov
and
jl
flds
fisubrs
sub
ficoml
xor
dec
cmpsl
mov
hlt
and
inc
xchg
xchg
adc
cmp
xlat
enter
cli
scas
and
fs
dec
aaa
jne
movsb
imul
adc
ret
and
or
lock
push
mov
add
pop
adcl
jbe
lcall
push
sbb
mov
lret
xchg
and
add
aaa
test
fwait
shll
inc
fstps
inc
mov
mov
cs
mov
test
movsl
push
xchg
leave
mov
push
test
cmpsw
push
loope
pop
xchg
fistl
jmp
mov
in
mov
stc
add
and
ljmp
iret
hlt
push
sub
mov
jmp
xor
stc
js
inc
shlb
and
das
xorl
cmp
xor
testl
imul
pushf
lret
jg
add
addl
or
lea
xchg
aaa
pushf
inc
pop
dec
faddl
repz
pop
add
xor
adc
dec
push
xlat
jnp
pusha
fldcw
dec
rclb
mov
or
cld
imul
mov
cmp
and
push
int
xlat
inc
jl
inc
mov
fisttpll
ret
stc
inc
flds
fimuls
jmp
dec
jne
jge
lret
orb
aam
mov
push
xlat
xchg
xchg
xor
lret
push
mov
lock
repnz
jecxz
cmpsl
ret
ficomps
enter
jp
out
cwtl
repz
imul
push
repnz
sarl
sbb
mov
inc
jno
cmp
aad
mov
popa
xlat
mov
cmp
aas
imul
jnp
cmp
dec
mov
fsubr
outsl
imul
xchg
out
mov
xlat
and
mov
adc
xchg
xor
cmp
inc
cli
mov
xor
push
mov
push
cld
fldt
daa
je
std
dec
xchg
mov
xchg
inc
lds
adc
fisubl
lcall
pop
fnsetpm(287
jno
xchg
nop
cmpsb
xlat
shl
adc
ja
in
jg
dec
xlat
fdivrp
in
pop
push
ljmp
std
mov
jns
cwtl
mov
inc
jp
push
xor
cli
jnp
int3
add
sub
jae
fnstcw
adc
ret
dec
cmp
cmpsb
jl
xor
sbb
xchg
mov
xor
xchg
mov
pop
inc
and
or
adc
outsb
inc
int
sbb
jge
out
dec
xchg
aaa
add
sbb
scas
mulb
fidivl
insl
ret
fdivrl
repz
xlat
ret
cmp
and
fwait
cmp
cwtl
lahf
scas
and
cmp
insb
cmp
xchg
imul
lea
xchg
inc
mov
movsl
ja
bound
or
cld
data16
scas
mov
mov
ficompl
sub
cmp
shl
cli
adcb
push
test
je
leave
pop
mov
ja
dec
jae
inc
and
les
sar
adc
iret
jae
xor
cmp
cs
cmp
repnz
inc
test
mov
test
mov
cld
pop
aam
dec
pop
dec
xor
sbb
mov
and
ja
mov
icebp
or
or
fmull
dec
xchg
cmp
push
testb
mov
cmp
cltd
dec
xor
fidivs
repnz
popa
repz
jle
fisubrs
jns
pushf
enter
sbb
sbb
je
fildl
jb
test
or
ja
sub
sub
push
rcll
fdivrl
cmc
insb
inc
push
out
movsl
pop
inc
mov
into
mov
push
pop
mov
lret
pop
sbb
js
add
dec
ficomps
je
sahf
or
fsts
fistpl
and
lahf
leave
dec
cmp
and
adc
push
mov
inc
nop
gs
mov
aam
fstps
inc
xchg
jbe
out
repnz
jp
loope
cmp
push
dec
push
push
pop
add
enter
or
out
movsb
add
xor
mov
sub
sbbb
insb
fcmovu
ret
test
addl
add
sbb
mov
fwait
mov
add
js
and
or
mov
insl
shlb
xchg
mov
ret
xchg
cli
andb
sub
scas
inc
ficoms
test
repz
jp
arpl
push
pop
xchg
sub
or
ret
mov
fstl
jmp
sarb
or
and
sub
push
xchg
fstps
mov
clc
pop
xor
les
inc
xchg
push
push
loop
adc
aam
jl
scas
dec
inc
test
adc
and
push
mov
lcall
dec
cmp
xchg
jno
cmp
pmullw
js
xor
loop
lahf
sbb
or
cmpsl
xor
xchg
dec
and
loope
repnz
xchg
lahf
cmp
cltd
pushf
cs
movsb
pop
aam
adc
xchg
cld
jmp
add
and
pop
push
and
bound
arpl
cmc
jecxz
cmp
sub
push
les
mov
das
push
or
mov
fs
mov
popf
xor
cmp
mov
das
dec
ja
fst
sbb
xor
stc
push
ja
adc
pop
je
add
add
jmp
pop
xor
nop
pop
jp
hlt
fstps
xor
ret
xchg
iret
and
xor
mov
or
js
sbb
sub
imul
nop
jg
sbb
aaa
xorb
pop
sbb
mov
fdivrp
dec
pop
dec
add
inc
sub
dec
lahf
mov
iret
lret
ret
loopne
xchg
std
add
sbb
fs
push
testb
jne
xchg
mov
outsl
andb
pop
sbb
mov
push
ja
insl
sub
stc
shrl
js
sbb
inc
mov
sbb
out
mov
bound
ss
ja
inc
jp
pop
sub
mov
push
es
xlat
je
cmc
imul
xor
pop
inc
cli
sarl
push
xlat
rorl
jne
push
outsl
sahf
adc
imul
in
jae
jle
push
xorl
fistl
add
jecxz
pop
jo
ret
fisubrl
cmp
sub
mov
dec
mov
xchg
or
xchg
je
adc
pop
cltd
jb
mov
stc
clc
xchg
enter
imul
aas
das
sahf
lret
add
xor
push
add
shll
in
popf
xor
or
lods
stos
popa
out
rol
lock
dec
sub
xor
mov
int3
dec
push
imul
jbe
and
mov
sbbb
sti
jl
xor
cmp
mov
daa
jecxz
fcoml
xchg
mov
cmp
outsl
lods
fld
je
xlat
and
jmp
dec
aaa
enter
and
out
inc
mov
scas
insb
dec
das
cld
int3
dec
in
js
jb
outsb
xor
shrb
adc
push
mov
jge
sbb
sub
or
inc
jne
nop
mov
movsl
ss
xor
lahf
out
xor
ljmp
cmpsl
or
xor
sub
push
fstpt
mov
lahf
mov
fs
pop
pop
sbb
xchg
adc
dec
ret
push
insl
test
inc
inc
dec
cmp
sahf
xchg
je
ret
ret
xchg
sub
shl
fldenv
mov
cs
mov
insl
fisttpl
cmp
pusha
insl
fcmovne
lock
mov
xchg
sbb
and
mov
es
pop
in
pop
outsl
pop
cs
rcll
mov
xor
sbb
stos
ds
addr16
xor
xor
sbb
sub
ficoms
or
xorb
add
push
jl
adc
cwtl
and
nop
xor
stc
push
fs
mov
loope
hlt
lods
jge
sahf
push
push
cmp
jns
fldenv
add
sbb
push
or
inc
fdivp
inc
add
fisubl
or
mov
js
pop
xor
lahf
mov
loop
mov
enter
dec
dec
pop
push
xchg
dec
orb
inc
das
fdivrl
pop
inc
jno
popf
and
mov
loope
mov
cli
es
mov
dec
jb
rcrb
arpl
push
pop
mov
and
add
lea
fcomps
fwait
xor
inc
and
fsub
jl
leave
inc
jns
or
or
loopne
mov
jge
jp
cld
mov
outsl
test
fwait
pop
hlt
or
push
mov
push
jg
sub
psllq
leave
cld
ret
add
sub
sahf
test
sub
jns
into
push
cmp
jns
leave
test
mov
js
fildl
mov
imul
mov
jl
fldcw
dec
xor
cltd
or
mov
dec
adc
adcb
xlat
sbb
data16
dec
mov
sti
xor
cmc
xor
lcall
pop
repnz
xchg
imul
fmul
jns
mov
or
out
lret
mov
mov
loope
push
jge
addr16
outsl
or
fdiv
mov
pushf
adc
and
sbb
stc
nop
dec
push
repnz
mov
mov
push
and
xchg
inc
sbb
ftst
ds
fdivp
sbb
test
into
cmp
xor
jb
inc
jg
and
iret
jmp
sub
insb
pop
cmp
lret
and
ret
inc
or
push
mov
dec
push
pop
and
sbb
adc
hlt
aas
xor
inc
lret
inc
ja
pushf
shl
xlat
loopne
mov
fldt
lcall
add
loope
mov
leave
fwait
cli
cmp
mov
jno
movsb
pop
xchg
push
mov
mov
imul
push
lahf
push
mov
cmp
out
ret
lods
mov
push
rorb
mov
fisubs
shrl
jmp
out
test
adc
push
pop
dec
mov
xchg
cmp
std
ljmp
jge
mov
popl
movsb
cmpsb
shll
xchg
pop
mov
loopne
addl
pusha
stos
fwait
sarl
nop
mov
xor
mov
cmp
ret
sbbb
mov
sub
dec
fdivl
mov
out
jne
xlat
andl
dec
mov
mov
dec
mov
aaa
test
test
scas
out
push
loope
mov
mov
sbb
xlat
mov
mov
push
adc
cmpsl
mov
fimull
idivb
sub
icebp
xor
sbb
daa
xchg
xchg
inc
mov
xchg
hlt
xlat
push
xchg
pop
inc
jp
sub
test
addr16
mov
add
xor
or
cltd
add
pop
push
adc
cmc
leave
lcall
and
pop
pop
mov
cmc
imul
int3
into
scas
push
fbld
pop
ja
add
jbe
or
xlat
sub
fsubl
mov
lcall
xor
add
scas
fucomp
scas
repnz
cltd
pop
push
sub
cmp
pop
sub
test
jecxz
movb
sahf
xchg
out
push
aad
push
adc
sbb
or
fwait
cmp
js
or
icebp
pushf
mov
cmp
add
je
ljmp
mov
add
gs
push
sarb
ja
out
int
dec
fstpt
push
imul
jl
xchg
xor
cmp
stos
xlat
fidivrs
shrl
movsl
adc
jns
adc
xchg
sub
bound
pop
cmp
sub
jnp
fildll
out
mov
adc
scas
mov
mov
push
cld
lret
dec
cmc
mov
xchg
push
mov
mov
adc
dec
adcl
shll
add
push
ss
inc
addr16
fs
xchg
or
mov
pop
addr16
imul
push
and
out
mov
push
xchg
ret
popf
or
cli
shrb
rorb
pop
mov
pop
sbbb
fbstp
mov
div
ret
scas
sbb
push
cmc
jo
sub
fninit
and
mul
cwtl
mov
adc
fidivrs
cmp
sbb
xor
fdivrp
test
inc
add
or
sti
lock
cmp
aam
add
out
hlt
pop
je
xlat
int3
add
cmp
ret
push
out
lods
sbb
xchg
fldt
js
xchg
mov
mov
orl
push
jb
lret
xorl
shrb
loop
scas
fcoml
sub
sti
dec
sbb
ja
sub
test
rcr
loope
stos
fnstenv
inc
jae
pop
mov
leave
sbbb
pop
push
addr16
fnstcw
addr16
mov
out
cmp
fcomi
stos
pop
fistpl
test
push
jl
xchg
push
imul
addr16
add
add
and
inc
loop
movb
loope
imul
xchg
imul
xlat
sbbl
cmpb
mov
out
and
ficomps
dec
aas
pop
repnz
mov
dec
inc
jns
in
adc
adc
jecxz
sbbl
sub
xchg
je
cmp
les
cmp
test
movsb
int
in
xor
repz
shl
mov
push
xlat
inc
cmc
fstcw
or
lret
sahf
mov
stos
add
cmp
ss
enter
jae
imul
in
loope
cs
bound
mov
dec
out
add
push
sahf
js
push
enter
out
ja
aaa
mov
push
add
aas
cmpl
pop
mov
mov
sbb
pop
std
pop
sbb
lret
into
mov
add
subl
xor
add
lea
inc
cmp
jno
add
idivb
pop
push
push
popa
and
sub
stos
or
inc
xchg
mov
loop
adc
push
mov
mov
push
dec
mov
dec
xor
repnz
fstpt
sub
push
lahf
ss
inc
and
sbb
pop
sbb
and
stc
loope
shrl
push
sbb
push
lcall
adcl
imul
cmp
xor
adc
insb
je
stos
popa
iret
rcll
stos
adc
andb
fistpl
adc
sub
and
add
mov
and
in
xor
clc
repz
lods
sub
mov
fbld
loop
and
cmp
xor
mov
scas
mov
enter
rcrl
outsl
push
fdivp
cs
dec
adc
movsl
fcmovu
int3
push
insb
fcompl
cmp
movl
mov
jmp
andl
cli
inc
lcall
stc
and
imul
or
imul
lret
cmp
push
sti
mov
stos
loop
jae
xor
jge
rclb
outsl
mov
jnp
dec
add
xlat
loope
lods
pop
push
aad
pop
cmp
dec
pop
mov
and
add
inc
and
or
sub
push
mov
sbb
dec
jbe
out
jp
or
test
nop
stc
or
add
pop
sub
ljmp
jns
sub
jae
xchg
or
jae
in
std
and
or
sub
fldt
mov
sub
fs
pop
xchg
cli
dec
test
or
and
inc
fstps
dec
sbb
push
lds
mov
mov
mov
test
xchg
sub
pop
mov
in
leave
xor
sub
ja
mov
stos
js
mov
jge
in
and
data16
jge
push
push
lahf
mov
imul
sbb
faddl
inc
cmp
pop
sub
cmpsb
mov
gs
ja
mov
mov
adc
iret
xchg
pop
rorl
fnstenv
xor
pop
add
lahf
add
jl
lock
test
pop
stc
dec
xchg
xor
lock
std
push
int3
push
push
add
addr16
sub
push
push
xlat
dec
mov
push
and
cmp
fsts
lahf
roll
jmp
jl
lds
dec
ja
testl
popa
dec
or
mov
fsubr
outsb
mov
stc
jl
mov
lret
subb
insb
sbbl
cmpsb
mov
dec
or
outsl
outsl
ds
scas
fxam
jecxz
enter
mov
imul
in
stc
push
adc
outsb
or
mov
adcb
andl
repnz
pop
mov
pop
jp
xchg
flds
mov
mov
das
pop
fcmovne
out
lahf
mov
pop
push
cmp
push
fwait
aad
and
imul
sbb
add
fwait
sti
xchg
sti
pop
mov
xor
lret
repz
sbb
stc
negl
rolb
fnstenv
pop
inc
dec
cs
repz
fstpt
xlat
mov
daa
adc
push
mov
pop
rorl
cli
and
jge
test
pop
mov
add
dec
pusha
sub
inc
inc
push
add
cmc
pop
adc
mov
cld
mov
or
pusha
dec
test
inc
xor
fmulp
int
xchg
call
pushf
mov
mov
in
cmp
inc
les
mov
or
imul
sbb
ja
test
pop
jo
cltd
in
xor
add
push
daa
ljmp
fidivrl
pop
cmpsb
add
jne
cmpsb
aad
inc
test
outsb
add
loope
and
jae
jmp
or
movsb
call
pop
sbb
dec
andb
in
ja
cwtl
scas
and
jp
dec
push
pop
test
lods
cmp
dec
add
mov
aam
les
dec
xchg
and
repnz
or
sbb
push
enter
mov
xor
int3
jmp
push
popa
dec
push
cmp
dec
jmp
nop
test
adc
hlt
aas
jp
dec
movsb
xor
add
xor
jb
dec
dec
mov
pop
rcrb
repz
dec
enter
lahf
mov
sub
outsl
xor
sub
gs
les
cli
push
xchg
jbe
fsts
xchg
xor
or
pop
pop
jb
ljmp
insb
xor
sahf
movsb
js
cli
pushf
or
sub
cmp
cli
ret
jno
dec
jns
mov
es
neg
lcall
popa
fsubl
xor
sti
cmp
add
aas
imul
dec
mov
sub
inc
xor
cs
fldt
jb
aaa
push
push
lahf
rcr
lret
aas
jae
iret
nop
mov
inc
xchg
xlat
add
insb
pusha
sub
fwait
push
rcrl
jmp
in
inc
sub
addb
push
lods
stos
xlat
xchg
mov
std
pop
jne
popf
imul
aas
ljmp
or
mov
push
xlat
mov
xchg
sbb
in
jno,pn
fcomi
sub
mov
lcall
xchg
add
pushf
shrl
mov
fwait
cmpsl
call
mov
outsl
xor
sub
xor
mov
pop
push
cmp
movsl
cmp
mov
jbe
sbb
adc
ss
cmp
sub
fmul
dec
stos
pop
mov
adc
cmp
xor
imul
add
mov
inc
daa
mov
fimull
jnp
fldt
movsl
add
cli
aam
adc
std
xchg
movsb
cmc
in
dec
mov
out
inc
sbb
fisttpl
int3
jnp
stos
push
sbb
out
jo
and
mov
inc
je
jo
out
divl
stos
mov
xchg
push
movsl
add
mov
add
stos
les
mov
push
in
push
push
add
sbb
fwait
jmp
xchg
mov
mov
adc
insb
fxch
mov
mov
sub
jnp
mov
out
pop
dec
mov
pop
add
out
shl
xor
xor
pop
mov
stc
xchg
cwtl
subl
push
inc
js
pop
test
int
repz
stc
adcl
pop
xchg
sbb
sarl
inc
or
std
cltd
sub
dec
jle
cmp
pop
enter
cltd
shl
inc
imul
cmp
adc
ret
enter
lret
fists
mov
fs
dec
out
rcrb
pop
fildl
or
mov
xchg
sub
in
ja
insl
ja
fisubs
jmp
loop
sbb
jb
sbb
mov
pop
mov
mov
adc
popf
jmp
inc
mov
push
cmp
or
xor
and
lods
sbb
push
pop
jmp
xlat
in
loop
aad
cs
or
mov
cmpl
dec
mov
fdivr
pushf
test
cmp
jecxz
fs
pop
inc
pushf
sub
out
xlat
rol
int3
or
adc
mov
push
fs
push
pop
inc
adc
pop
mov
inc
and
in
jl
add
stc
cs
xlat
xor
mov
repnz
jp
pushf
daa
push
dec
xor
je
jecxz
mov
mov
call
cmp
test
push
jecxz
loopne
inc
test
shl
mov
mov
and
sub
and
xlat
jno
jmp
lods
cli
cmp
and
shl
in
cs
sub
loopne
fldcw
xchg
add
ljmp
sub
pop
ret
adc
aam
mov
sbb
int
pop
add
push
outsl
xor
roll
ret
das
inc
mov
and
popf
mov
test
enter
in
mov
sar
fimuls
xor
dec
jns
sub
lea
jnp
adc
mov
inc
sub
aam
and
js
or
out
add
lock
add
xchg
sub
xlat
jge
pop
lea
cmp
andb
mov
or
out
push
sbb
inc
adc
mov
pop
dec
addr16
out
push
aaa
ficompl
stc
fs
test
fidivrs
fcmovne
cwtl
pusha
xor
jl
dec
cltd
mov
mov
test
sti
adc
std
dec
out
movsb
lret
xor
sahf
mov
jecxz
sub
shlb
pop
fs
gs
inc
mov
movb
repz
sub
or
mov
push
add
pushl
add
and
xor
jno
dec
lods
pop
mov
mov
outsb
jae
xor
fistpl
negb
xor
jns
fldcw
cmp
sub
aas
bound
pop
repnz
orb
jno
pusha
clc
lahf
and
and
mov
iret
or
leave
repnz
sbb
das
dec
jae
pop
pmaxsw
sahf
sbb
jno
cmpsb
std
mov
inc
adcl
ljmp
or
aad
xor
push
dec
ret
in
into
mov
mov
aam
movsb
iret
jbe
sti
mov
inc
mov
add
add
adc
jae
inc
movsb
xlat
jg
mov
pop
sub
pushf
adc
leave
cmpsl
loop
mov
fcmovne
jecxz
mov
mov
push
in
stc
dec
js
mov
loopne
jg
cmp
cs
mov
inc
adc
pextrw
jne
cmp
gs
stos
je
add
cmpsl
fidivl
aas
fs
mov
repnz
mov
sbb
arpl
jg
loope
test
push
js
mov
mov
xor
xor
sbbl
rolb
shrb
sub
daa
xchg
int
aam
cmp
xchg
push
jno
xchg
enter
dec
mov
fiadds
push
jo
xor
ja
mov
pop
dec
fcomps
mov
and
repz
push
sbb
pop
xor
cmp
fnstsw
xor
jnp
clc
imul
fldt
mov
negb
pop
pop
or
loope
test
push
mov
cs
sub
fcmovnu
adc
jecxz
mov
adc
cmp
or
fiadds
xchg
int3
test
xchg
cmp
push
in
and
jl
jmp
sahf
xor
push
fnstenv
push
push
and
fcmovnbe
mov
mov
stos
andb
data16
iret
dec
xchg
jno
fcmovne
push
add
mov
js
sub
rcll
add
ret
or
mov
mov
xor
enter
in
sub
cmp
test
mov
mov
mov
xor
lret
jecxz
xor
push
mov
xchg
ret
fimuls
xlat
jae
outsb
xchg
or
mov
mov
test
xor
sbbl
xchg
mov
dec
jp
mov
andb
cmpl
sub
push
pop
mov
and
popa
mov
cmp
jno
imul
pusha
fsubl
dec
mov
aas
xlat
lea
adc
push
dec
stos
rorb
pushf
sub
in
dec
sbbb
cmp
push
dec
jnp
inc
stos
xchg
lea
dec
xchg
and
push
adc
cs
xchg
imul
outsb
sbbb
loopne
xchg
pop
roll
mov
dec
divb
cmp
push
nop
dec
mov
jbe
jp
lcall
sub
mov
and
xchg
push
mov
pop
data16
sbb
xchg
and
mov
mov
fwait
loope
lret
xor
movsl
mov
insl
insl
cmpsl
dec
push
sbb
lret
dec
adcl
cli
in
out
ja
gs
jg
inc
xchg
xlat
icebp
das
xchg
sub
cmpsb
and
and
or
nop
loop
mov
inc
cmp
lret
mov
popa
mov
ret
fldcw
pop
xchg
cmp
fidivl
outsb
mov
cmp
jle
into
xchg
jae
sbb
ficomps
mov
xor
xchg
repnz
out
mov
iret
fcomps
test
xchg
fst
fcoml
cmp
and
and
stc
xchg
jbe
jnp
or
lcall
dec
add
dec
mov
fdivl
enter
xlat
jbe
sub
inc
lcall
in
sbb
rcrl
ficomps
leave
inc
pop
movsl
jnp
and
xor
pop
sbbb
xchg
icebp
into
mov
jbe
pop
fs
pop
rcr
ja
push
inc
rcr
pushf
sti
mov
pop
jg
aam
cmp
pop
out
jno
mov
pop
and
mov
xchg
mov
mov
mov
cmp
fcmovne
sub
dec
push
cwtl
insb
pop
jo
cmp
imul
dec
cmp
ja
jo
jl
mov
xlat
aaa
inc
ja
xchg
mov
mov
inc
jmp
rolb
icebp
outsb
enter
out
sbb
std
or
cmp
dec
dec
jnp
repz
jae
dec
les
test
and
sahf
sub
addr16
mov
jmp
jo
mov
cli
pop
repz
out
adc
jmp
mov
fistl
mov
std
out
incb
dec
mov
jbe
fsubl
adc
jl
inc
dec
push
and
add
add
mov
and
popf
lret
ss
fcmovnu
std
shll
push
add
mov
adc
push
xchg
xor
hlt
sub
pop
test
push
push
add
jne
add
scas
pop
xchg
xchg
filds
pop
add
pop
push
mov
fimull
testb
pop
cmp
mov
leave
out
gs
lods
ficoms
aas
jne
mov
and
push
lods
scas
push
cmpsb
mov
cmpb
and
mov
orb
cmpsl
cmp
outsl
jo
rcl
sbbb
fimuls
mov
jns
sahf
jl
xchg
fisttpl
cmpsl
jecxz
or
cli
mov
fdivs
push
push
decl
sub
adc
or
add
cmp
fimull
jp
cmp
out
int
std
mov
std
out
mov
inc
push
jno
mov
jbe
mov
stos
bswap
out
cmp
xor
sahf
inc
in
push
sbb
ror
shl
or
jmp
mov
repnz
adc
or
fidivs
lods
in
addr16
or
sub
add
imul
and
fldl
xlat
stc
mov
mov
subl
shl
jb
outsl
pop
movsl
shrb
inc
call
fcmovnbe
mov
mov
xor
ljmp
icebp
inc
dec
orb
jns
aam
xor
sub
ja
xchg
dec
or
mov
dec
fistpl
push
cmp
add
out
xchg
movsl
push
je
loope
dec
jg
push
js
or
and
cli
rcrb
lret
or
pushf
sub
outsl
iret
lret
loope
scas
sub
mull
jp
cli
xorb
xlat
popa
mov
movsb
je
idivb
push
mov
adc
imul
movsl
dec
es
add
adcb
push
xlat
cs
jmp
aaa
outsb
push
jbe
sub
inc
movsb
icebp
lret
mov
arpl
imul
dec
and
xor
data16
pop
js
rcl
test
arpl
mov
aaa
mov
das
movswl
dec
sub
xchg
xchg
subl
dec
adc
jmp
push
icebp
bound
xor
sbb
iret
jmp
hlt
mov
mov
fwait
in
pop
lahf
lret
push
out
jp,pn
and
or
adc
pop
sub
dec
fdivr
mov
xor
jbe
lods
cltd
imul
mov
mov
push
adc
fistps
je
popa
push
lahf
std
sub
orl
adc
or
inc
mov
jns
repz
aaa
test
ret
into
imul
or
mov
movsl
cmp
imul
fmul
xlat
cmpsl
adc
jno
xchg
or
push
pushf
pop
xor
std
cmc
subb
mov
sti
push
das
mov
pop
dec
cwtl
pop
pop
mov
xor
add
dec
and
xchg
stc
jp
and
jns
dec
xchg
call
inc
std
mov
lahf
pop
jns
insb
test
add
hlt
jb
pop
jp
cmp
stc
cmp
mov
and
push
fwait
ja
inc
cmc
ss
push
icebp
lea
xchg
xlat
and
ret
notb
mov
lret
and
into
arpl
xor
adc
ljmp
notl
rcr
pop
xlat
fidivrs
push
or
xchg
clc
push
lea
push
pushf
popa
lret
mov
dec
push
inc
jns
xor
mov
push
xor
in
pop
jns
enter
xchg
popf
out
sub
xorl
lcall
jne
stc
lock
pop
flds
xchg
xchg
lret
push
xlat
add
lahf
dec
fiadds
mov
repz
xorl
rcrb
movsl
xchg
in
inc
sub
dec
shl
pusha
push
push
mov
push
cvttps2pi
lcall
pop
test
loop
jb
push
testl
adc
or
adc
les
imul
stos
ret
in
push
xorb
sarl
aad
pop
xor
or
and
jns
xor
cmp
sub
stc
aas
popa
into
mov
dec
mov
leave
xchg
aas
mov
cli
push
std
test
add
aaa
in
aam
mov
and
in
adc
or
pop
add
xor
dec
sbb
pop
std
sub
mov
jp
cmp
mov
inc
mov
fldt
rorb
cmp
or
xchg
mov
cmc
push
and
xchg
std
sbb
test
jns
push
push
movsb
jmp
dec
jmp
cs
mov
cli
and
dec
pop
adc
orb
jp
sbb
sub
mov
pushf
mov
fdivp
adc
adc
sbbl
xor
pop
icebp
and
cmpsl
mov
xlat
dec
jge
cmp
stc
gs
push
test
add
xchg
and
push
das
fndisi(8087
dec
jnp
mov
xorb
mov
cmp
cmp
or
pushf
int3
js
stc
pop
dec
in
pop
loopne
jmp
and
cli
lret
pop
mov
fcmovnb
pusha
push
lods
pop
jne
xor
lods
jns
jl
fwait
or
out
sarl
pushl
imul
sub
dec
cmp
sahf
jb
sti
sub
bound
push
in
cmc
mov
mov
mov
mov
lods
or
icebp
jecxz
stc
pop
and
mov
mov
mov
push
mov
sbb
stos
add
dec
in
rcr
jecxz
jb
jp
int
push
mov
xchg
std
popa
xor
clc
popa
sbbb
outsb
psubsw
adc
dec
scas
fisubl
loopne
push
xlat
push
sub
add
das
adc
cmp
sub
lock
mov
mov
or
int3
cmp
push
sti
cmp
xchg
imul
outsl
out
push
push
pop
adcl
mov
lock
sub
jne
sti
ret
movsb
mov
lcall
stos
inc
outsb
dec
mov
xorb
outsl
push
mov
flds
jae
fcomi
push
push
adc
sub
out
adcl
loop
lahf
ja
push
cmp
sub
int
outsb
add
leave
jb
push
sbb
xor
pop
in
in
cmp
xchg
enter
fidivrl
and
das
push
xchg
shrb
xor
mov
or
xor
les
mov
lret
jb
sysret
adc
es
lods
and
jo
push
loope
cwtl
push
imul
push
mov
lds
fnstenv
mov
pop
cmp
fwait
addl
in
mov
ret
loopne
mov
aaa
add
push
push
ljmp
sub
cmpsb
xchg
sbb
xor
inc
stc
adc
or
loop
jmp
ficoml
pop
jb
mov
mov
rdmsr
test
mov
inc
lcall
jnp
dec
test
pop
mov
call
mov
addr16
shl
fsubrl
cltd
xchg
cli
cmpsl
push
sbb
sbbl
and
dec
xlat
std
push
int3
cld
inc
out
xor
fidivl
aaa
xchg
fadds
jno
fsub
and
mov
lods
int
std
rolb
xor
iret
mov
add
sub
push
xor
xor
pop
and
push
and
mov
jb
pop
and
shr
cmp
dec
xlat
cwtl
insl
xchg
lea
andb
fcoml
xor
lret
jae
pop
push
cmp
xlat
sub
rorl
insb
pop
sub
sub
inc
notb
mov
in
and
adc
repnz
mov
ljmp
mov
lock
or
in
jmp
add
ja
mulb
lea
or
pop
cmp
xor
iret
mov
dec
stos
fnstenv
and
pop
test
fsubrs
sbb
int3
pop
dec
pop
or
and
add
mov
mov
addr16
inc
jmp
arpl
imul
addr16
cmp
mov
test
dec
pop
xor
les
and
xor
sbb
sahf
lret
scas
out
mov
and
arpl
adc
imul
push
mov
sbb
pop
and
and
js
inc
in
imul
fldpi
mov
sub
or
mov
dec
fistpll
fdivrs
push
xor
movsl
sub
dec
pop
or
shlb
add
mov
xchg
test
test
andb
inc
mov
sbb
dec
xor
out
push
push
test
cli
sbb
inc
std
stos
sbb
fsubs
lcall
js
sbb
icebp
sbb
xchg
pop
mov
pop
jns
outsb
sub
repz
fistps
imul
lea
mov
mov
and
lret
push
scas
cmpsl
pop
outsl
stc
dec
xchg
mov
inc
add
jb
aam
sbb
pop
aaa
jecxz
mov
pop
sub
add
jl
adc
sub
mov
cmp
mov
jnp
jno
sbb
bound
notl
cmp
mov
jns
mov
repnz
fldcw
push
cmc
aam
inc
pop
mov
leave
fwait
in
push
test
push
and
xchg
and
pusha
ss
test
push
adc
sub
mov
cmpsl
pop
inc
sub
push
out
inc
ret
or
or
sbb
inc
push
popa
inc
lahf
mov
aaa
out
in
mov
lret
push
imul
jb
pop
adcl
insl
mov
and
stos
sarl
or
sbb
fsts
adc
stc
fs
or
sti
adc
shrl
push
mov
sahf
icebp
fwait
sub
adc
sbb
xor
out
movb
cmp
inc
pop
cmp
xchg
cltd
into
and
pop
cmp
neg
shlb
lods
insl
imulb
jb
test
mov
mov
dec
add
test
jmp
xchg
push
out
cmp
add
jns
xlat
add
or
out
or
or
push
or
sub
and
mov
dec
ret
into
out
push
xchg
stc
and
fcmovnu
adc
popa
adcb
and
lock
insl
xchg
lret
pop
cmp
stos
or
or
test
xor
mov
mov
sub
cwtl
cmpsl
and
mov
jbe
js
mov
cmp
ljmp
or
pop
std
adcb
call
and
arpl
stc
ljmp
xchg
jae
xlat
jbe
in
dec
push
mov
inc
addr16
cwtl
test
xchg
push
or
or
test
or
and
mov
fiadds
dec
lea
pop
xchg
loopne
and
cmp
push
and
sbb
cmpsb
subb
or
push
jge
out
mov
dec
and
loope
into
fstps
xor
jno
cld
imul
pop
add
pushf
and
pop
jl
stc
or
jb
fldt
jae
xchg
xchg
stos
cmp
push
jg
gs
sahf
int3
jo
test
dec
or
cmp
sub
adc
cmpsb
xor
popa
cltd
fadd
push
xchg
sub
mov
nop
std
mov
jg
and
stc
inc
rcll
mov
dec
push
sti
divb
shll
sub
lret
xchg
add
adc
mov
stc
mov
fsts
inc
lahf
xchg
int3
sub
xchg
in
std
xchg
popa
out
fdivrs
or
loop
fnstcw
xchg
mov
fcmovnbe
pop
scas
cld
adc
mov
jmp
scas
pcmpeqd
add
mov
lea
daa
js
and
push
mov
sbb
adc
daa
and
incl
and
mov
sbb
pop
jb
adc
pop
fwait
push
incl
mov
xor
cli
pop
pop
sbb
or
aad
sti
dec
aas
xorb
add
push
movsb
pop
iret
cmp
and
xchg
xchg
xchg
cmp
cld
das
out
sub
out
orl
xchg
pop
pop
sar
and
or
or
fisubl
jbe
cmc
shrl
inc
dec
in
pop
testl
cli
addl
xor
jo
jae
pop
push
dec
out
cmp
fidivrs
xor
xor
std
or
repz
dec
test
pop
and
xlat
inc
cld
xchg
movsb
repnz
xchg
fisttps
inc
sbb
je
dec
lods
imul
jae
les
shl
jbe
pop
xlat
cmp
in
test
mov
jne
add
and
cmp
jl
sbb
stos
cmp
sbb
iret
sub
test
jle
xor
out
insb
xchg
push
push
adc
dec
sub
inc
add
cmp
and
jbe
xor
insb
adc
mov
insb
out
jns
jmp
hlt
adc
xchg
movsl
sub
xchg
and
std
adc
xchg
xor
ud1
pusha
addr16
pop
dec
stos
adc
xlat
sbb
dec
into
mov
js
imul
mov
fstpl
sbb
cmp
movsb
in
lahf
adc
xchg
mov
mov
mov
mov
out
int
lahf
fiaddl
mov
dec
ret
jmp
pusha
arpl
jle
jae
adc
xor
sub
or
outsb
cmpsl
stos
loopne
mov
lea
dec
push
xchg
stos
fildl
sub
mov
loop
mov
ja
sbb
push
test
cmpsb
sar
jmp
lret
mov
add
cmp
add
jbe
xlat
xchg
sarb
cli
mov
xor
ret
pop
imul
xlat
aaa
mov
adc
mov
mov
outsl
call
lods
xor
mov
arpl
leave
jb
shl
mov
dec
mov
cld
fs
cmp
dec
jae
or
xchg
pop
xchg
sbb
js
pop
movsb
int3
sahf
sahf
dec
fistl
jge
push
into
cmpsl
mov
dec
movsb
out
addr16
cmp
pop
mov
int
std
incb
cmc
aaa
inc
adc
xor
loopne
or
pop
test
dec
and
push
adc
sbb
rol
xchg
pop
mov
cmpsl
cld
test
adc
sahf
test
fidivl
or
fnstcw
xor
stos
xor
mov
pop
pop
jno
aam
add
push
xor
xchg
test
mov
std
enter
or
pop
xchg
jp
or
js
push
ljmp
sbb
orl
test
mov
or
xchg
mov
orl
xor
adc
fwait
pop
shll
xor
jge
push
push
sub
mov
lahf
mov
and
call
les
dec
andb
dec
addr16
mov
out
jno
sub
out
mov
shl
stos
xor
lods
ss
js
push
and
icebp
push
adc
stc
and
mov
cmp
mov
ljmp
mov
and
inc
movsb
fcmovnu
or
cmp
mov
sub
repz
inc
cmp
loope
jno
subb
into
fmull
stc
mov
jp
js
adc
or
imul
push
mov
dec
pop
iret
pop
push
jge
incl
add
adc
test
push
or
rcrl
pop
jne
mov
push
mov
dec
jae
mov
inc
ja
mov
pcmpeqd
mov
imul
xchg
cmc
mov
adcb
mov
scas
movsl
push
addl
fistpl
scas
jg
gs
push
add
ret
mov
sub
jae
cmp
test
mov
dec
jge
xchg
pop
mov
repz
cmp
data16
or
dec
push
insl
cmpsb
pop
xor
pop
pop
pop
mov
xchg
dec
popa
in
imul
pop
pop
int3
mov
dec
icebp
mov
cmp
and
or
jae
jbe
jno,pn
cmp
jne
sbb
in
pushf
clc
add
pop
add
xchg
xor
ja
xchg
sti
mov
xchg
jecxz
cmp
mov
dec
or
xchg
or
dec
out
int
arpl
and
nop
add
inc
push
ret
sub
and
fisttpl
cs
fcmovne
adc
mov
jae
xlat
testl
mov
stc
lahf
mov
mov
mov
mov
sub
mov
push
xchg
xor
gs
pop
pop
in
clc
lock
jno
call
inc
push
mov
push
or
sbb
xchg
fistpl
loopne
jae
mov
sub
or
mov
icebp
test
inc
dec
inc
rcr
dec
mov
push
adc
pop
js
cmpsb
iret
adc
pop
aas
jb
ja
loope
movsl
shl
pop
adc
pop
dec
jmp
or
int3
ljmp
xorl
mov
imul
pushf
or
sub
pop
xor
push
pop
dec
movsb
jl
je
mov
loop
stc
imul
mov
sub
sbb
daa
rclb
jg
cmpsl
xlat
and
push
fcompl
pop
and
outsl
jae
xchg
add
jecxz
js
xchg
js
dec
in
push
fdivrs
fucomip
sbb
adc
cmp
push
sbb
test
out
push
es
loopne
sbb
dec
and
sub
notb
fsubrs
into
sar
or
inc
jp
lods
jbe
sbb
fxch
pop
jae
loopne
add
xchg
imul
pop
push
fdivs
add
adc
fsubrs
xlat
out
jl
jge
mov
lock
sub
adc
clc
imul
mov
dec
mov
cmp
mov
mov
and
jb
cmpsb
sbb
icebp
mov
sti
loopne
mov
andl
adc
mov
and
pop
int3
adc
movsb
sbb
cmp
icebp
jmp
adc
nop
and
hlt
int
push
or
fwait
arpl
int
mov
push
inc
sbb
mov
in
jns,pt
cmp
push
imul
loop
lret
mov
mov
sbb
push
add
xor
shll
iret
pop
test
pusha
or
cmp
out
mov
sti
inc
ds
jns
xor
pop
filds
add
mov
call
lods
and
dec
mov
out
std
mov
push
fidivrs
pop
or
sub
iret
icebp
mov
imul
out
dec
cmp
ljmp
xor
pop
push
stc
sarl
lret
cmp
or
insl
das
das
cmp
stc
or
xchg
stos
and
outsb
lods
xchg
xlat
add
iret
aas
cld
pop
ja
cld
testl
pop
xchg
dec
push
movb
test
push
neg
mov
mov
or
mov
dec
inc
gs
ficomps
bound
test
xor
push
mov
loope
in
xchg
call
xor
aaa
in
fistpl
cmc
cltd
sub
push
push
jp
lret
push
in
xor
mov
inc
push
sbb
dec
enter
mov
int3
imul
insb
sbb
cwtl
out
ret
fsts
cmpsl
jae
fnsave
inc
je
jno
pop
fdivr
insb
mov
dec
rcr
imul
incl
push
shll
mov
ss
cmp
movsb
inc
adcb
mov
jge
les
stc
mov
mov
in
mov
insb
jmp
mov
int
fnstsw
iret
pop
pop
imul
scas
push
jmp
jno
lahf
xor
jb
fs
hlt
shrl
stos
mov
sahf
mov
outsl
and
and
pop
cmp
mov
sbb
mov
repnz
cld
and
lods
scas
aas
or
xor
repz
fldenv
jmp
std
pushf
push
pop
movsb
xorb
lret
and
js
test
and
inc
add
fwait
movsb
xor
repnz
adc
sub
mov
mov
scas
pop
xchg
push
call
jns
and
inc
dec
mov
jmp
xlat
arpl
int3
aad
pop
jnp
sub
xchg
mov
std
lods
jne
fs
xchg
mov
daa
cmc
dec
or
mov
lods
xchg
push
stos
and
out
sub
push
xor
push
test
mov
dec
xor
shrb
nop
imul
fisubrs
lds
aaa
fld
xchg
in
lds
enter
adc
push
dec
cs
insl
inc
insb
sbb
sbb
or
cwtl
popf
orl
loop
dec
push
je
sub
dec
in
fwait
and
cmp
int3
ja
xchg
cmp
fldcw
mov
lods
xor
adc
rorl
add
jp
fcoms
pushf
clc
cld
pop
dec
xchg
shll
fisubl
out
dec
fildl
push
js
push
mov
jno
sub
inc
xchg
xchg
subl
icebp
push
xchg
mov
ds
fcmovnb
ss
pop
stc
dec
cs
jecxz
test
mov
mov
or
cmp
stos
jg
push
pushf
add
cld
sub
leave
mov
shlb
test
test
clc
add
aad
icebp
pop
arpl
xor
lock
xlat
rorl
popa
js
adc
daa
lods
xor
mov
loopne
xchg
jecxz
dec
xchg
mov
push
nop
jecxz
mov
inc
cli
lea
xor
ss
push
in
mov
gs
sub
mov
je
loope
sbb
insb
or
jp
xor
lcall
aaa
lock
test
movsl
push
mov
shrl
flds
imul
fidivrl
push
cmc
push
dec
pop
or
mov
out
or
ds
add
lea
sbb
mov
inc
mov
push
cmpsl
mov
jbe
mov
fidivs
stos
mov
push
add
sub
mov
fisubrs
imul
imul
ret
and
movsb
andl
and
faddp
sysret
pop
ret
mov
imul
jnp
mov
or
movsb
fbstp
and
loope
and
mov
pop
fwait
sbb
cld
sub
sbb
and
pop
and
fildl
nop
inc
mov
stc
jp
jne
jbe
stc
and
fisubrl
aaa
and
pop
test
sub
cmp
fbld
mov
jge
subl
rcrb
and
je
xchg
lcall
shll
lcall
mov
jne
gs
ja
cmp
repnz
add
sbb
or
shlb
enter
ds
imul
in
push
pushf
cmpsl
push
sbb
insb
inc
or
push
cmpl
into
test
mov
js
cmpsl
xchg
cli
jg
pop
pushf
mov
je
shll
imul
and
jp
cmp
adc
mov
push
rcrb
mov
clc
xlat
jg
ja
enter
mov
loope
enter
sbb
das
dec
xor
mov
sbb
in
nop
sub
call
push
hlt
imul
or
jmp
repz
outsl
scas
jg
sub
cmp
ret
jnp
push
adc
fldl
rol
scas
xor
xchg
ljmp
xchg
jmp
mov
xlat
xor
sahf
fnstenv
add
jb
pop
cltd
cmpsl
push
and
fistl
iret
cwtd
repz
push
out
call
dec
cs
subl
cmp
cmp
loop
rcrl
push
sub
shl
lcall
pop
pop
cmp
dec
jge
and
imul
stc
push
and
cs
test
xlat
stc
sub
push
sub
push
mov
dec
mov
fnstenv
cmpsb
cmpsl
mov
jae
fs
mov
add
push
mov
mov
cwtl
popa
sbb
mov
movsb
out
sbb
jl
std
hlt
movsl
and
adc
jo
jle
cli
add
or
jle
jecxz
pop
mov
mov
test
adc
imul
in
es
sub
lods
cmp
mov
in
xchg
andb
dec
mov
ret
inc
ret
xor
movsl
mov
scas
test
popf
cs
stc
sub
gs
stc
cmp
arpl
inc
mov
fstpt
mov
fldl
mov
jae
cmp
into
sub
dec
push
cmp
pusha
pop
add
dec
or
and
bound
xlat
push
mov
and
dec
stos
xchg
jg
icebp
push
jne,pt
xlat
sbb
int
test
pushf
test
mov
std
jp
mov
xor
xchg
xor
insb
xor
mov
cmp
mov
jno
fcmovnb
pop
cmp
scas
and
pop
nop
mov
or
and
flds
std
jle
mov
test
test
ret
sub
inc
inc
test
fisttps
fistpl
pop
test
dec
adcb
fildl
push
int
jg
cmp
stos
and
insl
sbb
or
das
dec
push
cs
fcmovnu
loop
hlt
or
mov
pop
ljmp
hlt
movsl
dec
push
mov
std
imul
or
jbe
xchg
sub
aam
movsb
cmp
lods
push
jo
dec
pop
cmpsl
imul
mov
mov
cmpl
insb
lahf
test
xor
jle
loope
add
pop
loopne
sarl
notb
push
repz
lret
xchg
sub
mov
or
and
mov
pop
mov
adc
hlt
shrl
pop
push
cmc
sti
fcmovnb
sahf
xchg
pop
ficomps
mov
fisubrs
jg
dec
lahf
rol
push
popa
cmp
mov
xchg
jb
scas
mov
fs
pop
mov
mov
pop
data16
leave
dec
stc
mov
cs
js
adc
sbb
mov
ret
pop
sbb
push
fbstp
xlat
lahf
xor
addr16
out
push
pop
xchg
pop
popa
inc
out
pop
outsl
xchg
insl
dec
sbb
xchg
sbb
fsts
stos
inc
ret
fistpl
add
cs
inc
cmpsl
test
stos
cmp
insl
loop
das
loope
movb
cwtl
in
mov
adc
jae
adc
xlat
int
rorl
jmp
in
inc
out
xchg
insb
ljmp
subb
pop
data16
add
rcr
xchg
add
out
adc
sbbl
ja
aam
xchg
flds
jmp
add
outsl
push
adc
aaa
ljmp
dec
sub
sub
stos
push
inc
cmp
cs
or
sub
pop
pop
pop
pop
push
orb
ja
pop
mov
arpl
pop
stos
push
ret
sbb
inc
xor
pop
movsb
div
pop
dec
mov
sbb
inc
mov
stc
lret
sbb
xor
mov
mov
gs
sbb
push
xchg
or
sub
subb
xchg
mov
mov
stos
pop
stos
cmp
int
adc
sub
mov
cmp
aad
push
jne
mov
test
into
mov
inc
pushf
or
pop
pop
mov
xor
add
test
call
mov
nop
dec
rcrb
or
lret
imul
mov
mov
stc
rcrl
std
cmpsl
mov
inc
pop
cmpsl
mov
xchg
or
fldcw
jmp
xor
dec
cmp
push
rep
fsts
dec
sbb
mulb
sahf
pop
push
out
lahf
dec
fs
fyl2xp1
cmp
aaa
jg
in
mov
jmp
dec
cltd
dec
hlt
inc
out
sbb
sub
nop
push
test
lods
repnz
lods
aas
repz
dec
cmp
mov
add
sbb
mov
repz
mov
cmc
mov
xchg
faddl
xlat
dec
pusha
std
into
jne
cmp
pop
std
adc
fldcw
lret
fldl
and
dec
and
sbb
or
xchg
out
arpl
and
dec
fnstcw
cmc
je
sbb
or
and
cmp
mov
je
aam
adc
cmp
xchg
xchg
out
outsl
lea
stc
mov
and
dec
fwait
add
test
xor
nop
pop
pop
repz
shlb
jl
out
sbb
pop
fnstenv
push
push
pop
cmc
scas
add
sbb
lock
dec
pop
push
fstp
lods
inc
sbb
dec
js
jne
lret
xchg
push
adc
sub
dec
sbb
xlat
cmp
jne
pop
xor
jbe
out
xchg
jae
xor
repz
dec
and
cmp
or
push
stos
or
int3
mov
cmc
stos
jbe
sub
les
inc
push
test
andb
cmpsb
clc
mov
arpl
jl
cmc
or
jns
mov
mov
ja
xor
push
mov
cmpsl
mov
cli
cltd
mov
into
jnp
dec
popa
cmc
mov
ret
into
imul
pop
int3
enter
ds
cmpb
xor
pop
dec
fmull
push
and
xchg
pop
ljmp
dec
or
fld
pop
cmp
add
leave
clc
or
mov
xor
mov
inc
push
je
bound
scas
jl
inc
xor
jbe
jmp
mov
jae
jae
lcall
and
mov
cmp
mov
push
iret
push
adc
or
xlat
dec
push
lahf
jae
pop
std
and
fimuls
lcall
je
adc
imul
dec
fildl
mov
xchg
inc
push
shrb
movsb
adc
jae
mov
mov
stos
cmp
hlt
sub
out
cmpl
push
or
jno
out
and
mov
mov
test
or
push
cmc
pop
sbb
stos
add
pop
cmp
pop
jae
sub
sbbl
arpl
loop
frstor
pushf
xor
js
fwait
dec
pop
pusha
mov
jge
xorl
adc
lret
dec
sbb
jmp
adc
mov
push
pop
lcall
cmp
lret
cli
sub
pop
and
and
adc
lods
dec
cmp
push
pushf
loopne
sti
cli
xchg
aaa
fimull
cmc
or
stos
out
ljmp
pop
inc
mov
push
clc
xlat
jle,pt
xor
decb
fisubs
insb
sbb
lock
xor
aam
in
inc
add
mov
mov
in
cmp
xchg
adc
cmp
inc
sbb
sub
dec
insb
push
loope
pop
and
jbe
nop
inc
xor
or
adc
dec
shrb
popl
leave
push
loope
adc
stos
mov
jnp
adc
jno
stos
push
jbe
pop
jl
xor
stos
jnp
data16
orl
mov
fdivp
stc
or
inc
cmpsb
pop
ja
mov
popa
inc
xchg
mov
orl
enter
add
lahf
sbb
mov
aaa
ja
rclb
inc
into
shrb
je
jle
loope
inc
xor
push
dec
call
mov
fs
mov
enter
adc
mov
pusha
push
mov
jnp
pop
or
je
push
clc
pop
sbb
and
sub
and
jno
jmp
fsts
lock
fsubs
xor
lahf
ds
and
hlt
mov
jp
jmp
xlat
std
add
inc
push
imul
add
cmp
fistl
enter
gs
sbb
cmp
cs
fwait
inc
dec
adc
loop
push
test
jno
les
sbb
jns
leave
test
cmp
pop
fwait
je
das
addl
bound
scas
dec
fisttpl
int
sbb
xlat
insl
shll
and
push
cmpsl
jno
sbb
aam
add
scas
lahf
jle
sti
sub
push
sub
pop
jp
push
aas
aad
adc
push
test
test
outsl
jns
xlat
jne
cld
repnz
mov
jns
mov
sub
aaa
xor
xchg
lock
popa
mov
push
lods
std
xchg
add
mov
push
jmp
jmp
loope
iret
mov
ret
ret
push
add
outsl
xchg
cmpsl
xor
pop
push
jecxz
mov
mov
xor
loope
xchg
repz
repz
lret
mov
imul
dec
or
xor
lahf
jmp
xchg
fwait
loop
hlt
and
mov
subl
jns
xor
push
es
inc
xlat
sub
in
cmpsl
pop
cli
test
daa
arpl
sbb
or
inc
add
dec
push
xor
xor
mov
pop
xor
mov
push
push
mov
dec
lds
or
or
jae
push
add
mov
fld
jns
test
sub
pop
test
xor
mov
push
sub
cwtl
sbb
and
xorb
das
shll
sar
xchg
repz
jecxz
push
xorl
pop
and
popa
and
decl
test
or
out
ficomps
cmpsb
data16
xchg
call
rol
testb
inc
push
out
loope
xor
enter
xlat
int3
aas
push
mov
push
or
and
test
movsl
pop
ljmp
xchg
and
fstpt
addl
lahf
jmp
or
mov
fisubrs
repz
call
repnz
in
jne
rorb
cmp
aas
mov
xchg
cli
aam
dec
movsb
pop
movsl
iret
fsubrp
adc
test
loopne
sbb
mov
iret
jb
pop
pop
shlb
aad
and
cmp
mov
mov
push
pusha
fistl
or
jbe
imul
rol
sub
lods
stos
cmp
sbb
sbb
and
xor
icebp
ja
dec
ret
or
out
les
xor
or
adc
jb
cld
cmp
cmp
sbb
dec
dec
movsl
shll
inc
aam
out
je
test
fists
in
lods
inc
pop
pop
dec
int
pop
mov
iret
and
push
lahf
jl
flds
sub
xor
sub
inc
dec
mov
divl
sub
add
loop
jae
sub
and
in
cmp
xchg
cmpl
xor
or
mov
lcall
pop
cmpsl
mov
movb
test
je
int
lret
dec
mov
xlat
loop
ret
dec
pop
and
aaa
pop
or
ljmp
cmc
and
popa
shr
das
popa
fisubrs
test
adc
leave
cli
faddl
or
add
cmp
pusha
out
in
pop
arpl
pop
cmpsl
xchg
pop
sbb
mov
jbe
and
cwtl
scas
scas
or
xor
and
mov
in
clc
sbb
pop
jno
sbb
mov
push
mov
gs
xchg
push
dec
ds
test
lahf
dec
inc
lock
fisttps
xor
push
popf
mov
pop
xchg
lret
pop
inc
add
filds
adc
and
daa
jecxz
out
lret
aad
dec
into
mov
fcoml
jp
mov
mov
jne
add
dec
xor
pusha
std
cmp
inc
xlat
dec
mov
aaa
xchg
movsl
cmp
xor
push
pop
or
out
mov
leave
jg
mov
xchg
andb
std
sti
outsb
pushf
jl
or
xchg
inc
mov
int3
add
pop
rcrb
jle
sub
adc
sbb
inc
pushl
sbbb
xchg
push
push
cmp
sbb
bound
sub
jmp
std
mov
pushf
les
jl
test
lds
aad
pop
shrl
iret
mov
inc
ja
test
test
fxch
shll
dec
mov
mov
fisubrs
lods
test
xor
mov
xor
push
stos
pop
int
shll
lds
fs
adc
jnp
pop
push
add
xor
daa
adc
jns
jne
arpl
clc
mov
mov
imul
fsubrl
push
test
pop
pushf
lcall
aas
jb
add
ja
imul
stos
scas
jp
loope
push
sbb
pop
dec
cmp
cli
fsubs
insl
idivl
movsl
das
lods
inc
fdivrl
testl
mov
cmp
ret
aam
cmp
inc
out
jns
mov
pop
or
and
xchg
dec
movsl
xor
xchg
dec
clc
subl
out
into
add
pop
notl
xor
iret
push
popf
adc
movsl
push
fcmovb
pop
lret
imul
scas
ja
adc
fcomp
sbb
push
cwtl
repz
mov
std
mov
stos
push
mov
in
cmp
mov
in
pop
jae
push
cmp
or
mov
scas
push
stc
pop
dec
fld
jge
fwait
out
sbb
nop
add
sub
shlb
sbb
pop
inc
adc
sub
or
mov
out
roll
mov
aaa
inc
repnz
push
mov
jb
or
mov
ss
mov
repz
inc
setae
jle
sbb
push
imul
hlt
outsb
pop
mov
repnz
sub
and
mov
stos
xchg
cld
push
xorb
inc
or
dec
jl
mov
mov
dec
sub
dec
xchg
ljmp
cmp
ret
add
dec
xchg
sbb
xchg
repz
jp
loop
xor
in
pop
ja
mov
adc
push
pop
ret
or
sbb
std
jb
xchg
pop
repnz
cli
cmp
mov
add
and
pushf
add
rolb
idivl
cli
std
xlat
mov
or
popa
popf
lcall
jl
aas
dec
mov
or
jp
mov
pushf
pop
xor
adc
out
mov
bound
shll
mov
loopne
jnp
pop
test
and
lcall
jmp
ljmp
andl
dec
push
addr16
xchg
jl
popf
dec
in
or
cmp
dec
insb
push
scas
loop
cld
jnp
icebp
jmp
sbb
cmp
js
inc
mov
push
xor
popf
imul
lcall
in
jg
lods
cmp
ror
cwtl
or
sub
faddp
sti
xor
loope
movsl
inc
mov
scas
push
call
xor
fcmovb
pop
and
xor
sbb
lds
out
scas
dec
stos
xchg
aaa
dec
call
cmp
mov
push
fcmovbe
mov
test
mov
lahf
jnp
mov
cmp
mov
jnp
add
rorb
jne
out
push
mov
jle
add
or
insb
popf
xchg
push
jbe
leave
cmc
mov
add
es
sbb
pop
cmp
data16
jno
fistl
jns
pop
ja
add
in
sbb
stos
xor
lods
mov
rorb
stos
shrl
jae
jnp
push
pop
cmpsl
repnz
enter
jb
rorl
stos
xchg
in
or
cmpsb
movsb
stos
loopne
je
std
scas
mov
xlat
orb
add
fldcw
hlt
pop
into
test
mov
mov
pop
mov
jecxz
lahf
cltd
xor
rolb
or
jp
mov
xchg
and
aad
push
in
add
mov
popf
repnz
adc
lods
imul
pop
bound
iret
cmp
jmp
and
cmpsl
xor
mov
aas
movsb
adcl
fs
xchg
and
test
sahf
xchg
std
flds
xchg
push
xchg
mov
imul
adc
and
xlat
mov
cmp
and
push
cmp
int3
arpl
fwait
je
fisubs
jae
outsb
sub
jne
mulb
xor
jg
fwait
mov
add
cmpsl
decl
daa
cmp
imul
insl
gs
jge
dec
incl
negb
movsl
fdivl
stc
or
int3
test
sub
fsubl
call
js
jmp
movsl
icebp
jl
stc
and
add
jne
fldenv
test
hlt
mov
dec
push
or
les
dec
inc
aaa
push
mov
push
pop
mov
adc
jecxz
xlat
pop
xor
addb
mov
scas
aaa
or
arpl
mov
cmp
insl
xchg
mov
cli
xorb
sub
dec
fistl
sub
cmc
adc
sti
dec
lret
pushf
adc
jae
subl
test
jp
test
nop
xor
dec
inc
sub
mov
xchg
cli
pop
sbb
shll
cmpsl
xorl
jp
push
add
mov
pop
sub
aaa
fwait
mov
mov
sbb
cmp
cltd
lahf
cmp
lret
cmp
and
push
push
sub
sbb
adc
shll
jle
stos
mov
repz
dec
std
rclb
lcall
loop
lea
gs
pop
push
insl
cmpsl
mov
adc
sub
pusha
and
ret
xchg
push
jp
mov
sub
nop
sbb
idiv
pop
adc
or
cltd
testl
and
cld
rcrl
xchg
mov
ja
pop
repz
push
pushl
push
add
leave
or
fisubs
xor
test
or
mov
adc
fwait
dec
pop
push
mov
mov
cmp
pop
sub
mov
lock
scas
mov
push
jmp
movsb
mov
rcrl
mov
push
cmp
ss
mov
sahf
cli
mov
add
push
test
dec
cli
xor
jno
out
inc
mov
xor
fwait
repnz
inc
mov
dec
adc
xchg
out
dec
fdiv
sbb
fidivl
inc
rorl
push
pop
dec
xchg
mov
adc
out
or
mov
mov
xor
xor
lock
mov
sbb
sahf
and
scas
jae
adc
xor
sahf
xchg
mov
and
and
pop
out
clc
je,pn
rcrb
nop
mov
fildl
mov
lret
sbb
cmpsl
frstor
or
decb
nop
inc
sub
dec
fmul
jecxz
push
inc
mov
xchg
int
je
stc
sbb
sub
andl
push
mov
sbb
xor
xor
test
xor
aam
cli
mov
mov
dec
cmp
std
xor
nop
mov
inc
out
shlb
aad
pop
inc
dec
xlat
dec
aad
imul
in
pop
push
out
xchg
fisubl
xor
or
imul
cmp
fs
out
sti
cmp
xchg
mov
dec
lahf
ja
jmp
imul
mov
push
dec
jecxz
cmp
inc
subb
mov
test
mov
test
dec
pop
in
xchg
sbb
popf
xor
xlat
push
xorl
pop
stc
scas
fsubl
xorb
pop
std
leave
outsl
inc
sub
or
mov
dec
cwtl
dec
cmp
dec
mov
push
je
lahf
lods
xor
repz
dec
std
scas
sbb
dec
cmpsb
testl
gs
dec
aam
pop
pop
daa
cmp
xlat
adc
xor
lock
mov
loopne
mov
jecxz
mov
insl
or
jae,pt
fcmovbe
or
push
lret
push
xchg
jb
push
mov
and
ror
popa
in
jns
mov
lcall
movsl
xlat
and
rcl
dec
mov
mov
jno
sbb
ror
pop
imul
xchg
sbb
xchg
sbb
and
sarb
cmpsl
notl
xchg
xchg
dec
xchg
dec
loop
add
loopne
push
sbb
mov
mov
mov
pop
or
mov
lahf
jmp
sbb
pusha
fcmovbe
loope
imul
into
lret
mov
pop
xor
out
or
pushf
push
aam
xor
adc
test
sbb
jle
mov
sbb
xchg
add
cld
xlat
pop
dec
mov
dec
sarb
adc
notb
push
jno
fcomi
pop
mov
sbb
jle
push
push
mov
dec
or
test
cmp
aaa
or
jge
cmpsl
xchg
imul
int
push
cmpsl
xchg
add
data16
out
cmp
or
pop
jbe
or
push
insb
and
jo
pop
jo
pushf
xor
inc
fcmovnbe
cwtl
mov
les
xor
insb
pmaxub
iret
jge
testb
jle
mov
mov
xchg
enter
mov
ret
or
mov
mov
sbb
aam
rclb
out
gs
out
ds
loope
ret
jg
sbb
imul
or
jecxz
lea
jp
dec
inc
push
xlat
stos
pop
nop
in
jle
mov
adc
sbb
xor
ret
add
jmp
cli
mov
jp
inc
dec
xchg
or
sbb
mov
stos
jge
pop
ds
mov
daa
inc
and
hlt
add
dec
xchg
imul
xor
fsub
cmp
stos
push
fcmovb
jl
int
sbb
movsl
sahf
fcompl
jno
vmulps
xor
cmp
bound
lcall
in
jno
mov
xchg
push
mov
mov
sbb
sub
sbb
sahf
cmp
and
or
lds
divb
lret
aam
inc
xor
lock
mov
sbb
cmpb
mov
cmpsl
xor
loop
stos
sub
mov
lret
sbb
jmp
xor
inc
int
stos
push
out
mov
cmp
movsl
cld
int
mov
pushf
jns
push
dec
or
fwait
add
mov
adc
js
repnz
test
jae,pt
je
aam
pop
aad
mov
cltd
mov
insb
ficoms
fsubrl
cmp
and
and
jnp
mov
cmp
stos
add
pop
clc
xchg
adc
mov
push
mov
pextrw
jl
andb
ficomps
jge
jp
or
dec
fchs
cltd
nop
xchg
test
cmp
or
push
mov
cmp
dec
xor
inc
in
adc
mov
movsb
inc
mov
xor
loop
mov
push
jo
lock
arpl
into
sub
cmc
add
imul
cmp
xchg
push
jae
and
sub
shlb
scas
dec
std
aam
scas
jae
adc
push
jmp
insb
xchg
mov
std
inc
or
sub
xor
push
ljmp
pushf
lret
je
mov
ss
jmp
push
cmp
fidivl
fildl
cmp
mov
cmp
pop
sbb
daa
sub
mov
push
jp
pop
jecxz
movsl
push
mov
jne
jbe
imul
lds
movsl
or
inc
fistl
sbb
imul
bound
sbb
sub
inc
stos
in
loope
lret
add
scas
mov
push
sbb
pushf
lahf
std
popf
rorl
js
mov
sarl
mov
adcl
fsts
inc
aaa
xchg
and
push
insb
xchg
xor
mov
movsl
and
movsl
xchg
cli
push
std
neg
mov
push
add
je
loop
aas
pop
mov
and
add
cs
imul
ret
mov
iret
mov
int3
in
jne
sub
and
cmpb
sub
or
pop
pop
sub
cmp
sub
inc
dec
cmp
pop
enter
xlat
or
and
test
jp
lret
into
adc
inc
arpl
adc
push
push
loop
nop
and
fistl
enter
xor
pop
sbb
add
test
push
jb
clc
mov
sub
gs
mov
nop
cmp
fldcw
adc
xor
add
sub
imul
push
test
and
addr16
mov
out
mov
jmp
sub
pop
lods
mov
mov
mov
loop
or
sbb
xor
cmp
loop
mov
stc
imul
pop
lahf
fcompl
fcompl
cmp
shlb
xor
fs
popf
fimuls
aaa
cmp
dec
sub
push
fwait
inc
daa
ret
mov
mov
adc
push
test
fdivs
iret
addr16
cmpsl
rcrl
les
and
push
cmpb
push
movsl
or
fcoml
popa
xor
aaa
fmuls
in
dec
arpl
xor
fwait
xor
mov
mov
cmp
out
sub
dec
sbb
rcrl
xchg
add
insl
repz
mov
push
push
mov
sub
mov
std
xchg
fdivrp
sub
iret
roll
mov
jae
mov
idivl
rcrb
mov
testl
push
mov
and
into
sbb
mov
xchg
int3
sbb
dec
xor
shrb
push
sbb
ret
jns
lods
xchg
mov
inc
xchg
mov
jne
mov
insb
cltd
cmp
xchg
push
pop
adc
test
mov
dec
icebp
jns
mov
jmp
pop
add
cli
or
mov
jns
or
sbb
push
push
jb
or
rcrb
add
sbbb
lock
out
xorb
inc
push
sub
xchg
dec
pop
fistps
fisubrs
jle
repnz
cld
test
push
fildll
cmp
xor
dec
sbb
dec
xchg
push
push
movsl
mov
std
xchg
xchg
shl
xor
icebp
jg
adc
jns
fsts
test
xlat
dec
dec
je
pop
sbb
mov
dec
or
adc
into
ficomps
xor
inc
push
rol
jp
movsl
icebp
or
enter
das
xlat
xchg
mulb
cmp
or
stc
xlat
insb
jl
jmp
inc
or
jno
pop
nop
jge
sbb
cli
je
addr16
cs
jns
test
xchg
or
xor
iret
cmp
lods
fidivrl
mov
hlt
sbb
leave
mov
stos
pop
mov
jmp
stos
jb
std
leave
fsubrp
imul
daa
push
or
mov
xchg
sub
dec
jge
jo
pop
push
xlat
adc
inc
aad
pop
ds
and
repz
add
mov
sbb
in
stos
push
test
ret
std
mov
cli
xchg
inc
cmp
clc
push
lret
loop
push
loopne
shrl
xor
mov
push
dec
and
and
jl
repz
insb
pop
mov
cmc
fimuls
int
jbe
sub
pop
ret
fidivrs
out
add
dec
jb
mov
pop
fstps
mov
sbb
mov
xchg
lahf
imul
sbb
test
adc
mov
jbe
push
mov
xor
shr
push
sbb
dec
rclb
push
pushf
jecxz
pop
icebp
xor
fwait
popf
repz
pushf
imul
sbb
sbb
cmp
jno
je
mov
es
cmp
je
cld
and
mov
or
sbbb
mov
jne
mov
mov
or
fidivrs
pop
jne
push
cli
xorl
push
incl
clc
ljmpw
dec
pop
clc
or
fwait
xlat
xchg
loop
imul
aas
je
ret
repz
fmuls
rcl
addr16
fisubs
das
stos
push
mov
jg
pop
pop
fimull
or
jae
dec
aad
pop
inc
movsb
dec
mov
pop
mov
out
std
sub
xchg
sti
mov
aad
mov
imul
aaa
aas
push
jg
dec
sbb
addr16
fstpt
rcl
cmpsl
rorl
test
sub
insb
add
shl
fadds
lds
loop
fdivs
gs
and
mov
xorb
in
adc
xchg
dec
repz
filds
mov
jg
imul
int
imul
pop
jnp
loop
sbb
or
loope
arpl
fstpt
mov
repnz
movsb
adcl
popf
sub
je
or
sbb
push
lods
pop
xchg
in
xor
repnz
pop
pop
lods
fwait
nop
rcr
jp
jbe
lods
sbb
popf
or
dec
mov
xor
or
mov
sub
imul
and
cwtl
cmc
mov
or
xlat
fs
dec
or
jmp
pop
movsl
xchg
adc
pop
idivb
leave
fsubrl
fldt
push
ret
ret
pop
lea
stc
das
xor
mov
and
aas
sbb
mov
gs
sub
stos
mov
jbe
xchg
mov
inc
push
xchg
jp
add
iret
jge
out
jns
insb
jno
sbb
dec
out
leave
add
xor
adc
sbbl
jp
pushf
add
fldcw
push
icebp
loopne
cmp
addr16
pop
std
sarb
mov
or
jbe
insl
pop
lret
loop
in
xchg
sbb
and
jle
adc
mov
pop
fldt
imul
jne
mov
fldcw
std
out
mov
scas
movsl
imul
sub
dec
mov
sarb
bound
jae
xchg
mov
push
and
scas
mov
push
hlt
in
jns
xchg
sbb
add
lds
push
add
push
fcoms
jno
cli
cmp
sets
pop
loop
jl
add
movsb
inc
lods
push
mov
int
xlat
adc
pop
xlat
push
lahf
and
lcall
call
mov
dec
repz
inc
jns
je
xchg
jno
inc
mov
jmp
movsb
loop
lret
and
and
lahf
in
stc
adc
imul
and
xlat
fidivrs
sub
push
bnd
pop
jae
or
or
jb
push
sbb
mov
pop
in
mov
shr
and
pop
jge
aaa
or
xlat
push
and
ja
push
rcr
int3
push
fldt
jbe
mov
xor
fldt
add
pop
pop
jl
xchg
test
sub
fisttpl
mov
test
cmc
inc
insb
ficoml
xlat
cld
mov
pop
test
mov
mov
movsb
iret
cs
les
bound
push
dec
xor
add
testb
jg
lods
sbb
cmp
ret
push
mov
xorl
mov
mov
lods
jno
jmp
push
push
jae
pop
roll
fdiv
lahf
sub
scas
mov
pop
mov
pop
cmp
mov
jbe
jae
cmp
adc
sbb
and
mov
push
mov
sbb
cmp
or
mov
xchg
cmpl
jbe
sub
push
sub
cli
xlat
fcomi
in
sbbl
cmp
inc
xchg
repz
pop
or
inc
cmp
adc
xor
call
fimull
hlt
add
fcomp
jg
fistps
xlat
inc
aam
outsb
imul
outsl
xor
cmp
addr16
lret
jbe
pop
pop
dec
add
js
add
dec
imul
cwtl
enter
sub
int3
mov
ljmp
adc
inc
dec
rcll
inc
push
jne
fucomi
xlat
hlt
shlb
cmp
jnp
or
xchg
cmp
loope
push
imul
mov
xor
ret
lcall
mov
dec
and
das
and
push
push
outsl
adc
or
scas
or
cmp
lock
and
or
fildll
adcb
mov
iret
jmp
icebp
jb
push
dec
fsts
jno
lock
jnp
jne
test
les
add
pushf
push
cmp
dec
and
sub
add
mov
push
fldenv
xchg
sbb
sub
stc
pushf
or
push
int
lret
cli
roll
jmp
mov
add
xlat
int
mov
out
mov
mov
hlt
ss
ds
mov
and
xor
and
cmp
add
ss
clc
lock
into
sarl
and
popl
jp
fnstcw
xchg
mov
lahf
xchg
mov
clc
mov
pop
clc
or
data16
push
cmpsl
jmp
adc
jbe
sbb
mov
aam
xchg
mov
fcmovnu
jo
mov
cld
stc
fsts
cs
int3
sbb
sbb
into
ss
mov
cli
jae
mov
mov
sub
mov
cli
dec
jns
mov
fisubrs
imul
sti
addr16
cmp
dec
aam
imul
cld
cwtl
inc
and
jmp
xchg
out
or
hlt
xor
icebp
mov
xlat
push
adc
ficoms
add
sbbl
mov
mov
je
push
icebp
jns
and
jae
ds
mov
mov
mov
cmp
fsts
xchg
jne
and
push
enter
jbe
mov
xor
test
in
cmp
cltd
iret
ljmp
sbb
stc
jmp
adc
mov
xchg
push
inc
and
imul
pusha
mov
pslld
jecxz
xchg
popa
jp
adc
add
sbb
push
fcomip
xchg
cmp
jnp
dec
sub
cmpsl
push
cwtl
xlat
add
imul
add
xlat
pop
test
lock
cmp
pop
sbb
push
push
in
inc
xlat
jb
test
adc
jl
push
cwtl
dec
sub
cld
fistl
cmp
cmpsl
jmp
mov
into
sbb
pop
mov
add
xchg
outsb
dec
push
mov
dec
fistl
jae
rcr
clc
ds
xchg
cmpsl
mov
xor
cmpsl
xor
pop
arpl
pushf
mov
sbb
mov
adc
jb
adc
pop
loope
lahf
or
xchg
sbb
and
mov
push
pushf
js
fmuls
sbb
fidivrs
jbe
arpl
add
pop
dec
ret
xor
pop
mov
cmpsl
pop
cmp
ljmp
push
sti
pop
sub
mov
push
iret
ss
pop
nop
imul
jae
fwait
cmp
mov
xor
xor
jmp
cltd
xchg
push
ret
outsl
pop
gs
add
xchg
mov
decl
addr16
push
scas
in
imul
jns
fldcw
mov
sbb
xlat
xor
sarb
pusha
out
fsts
push
mov
rcrb
sub
jns
enter
push
push
mov
push
test
mov
jnp
mov
rclb
jnp
pop
sbb
sub
scas
pop
xlat
out
jle
fcmovnu
lcall
push
push
fcmovu
mov
mov
scas
in
inc
mov
insl
push
mov
mov
popa
std
insl
mov
loop
xchg
jns
jle
test
xchg
stc
imul
xchg
ret
mov
pop
pop
lock
orl
or
push
js
inc
push
stc
mov
out
movsl
in
or
or
das
push
cmp
sbb
or
fsts
push
adc
push
pop
int3
mov
ret
fwait
adc
mov
xor
ljmp
mov
in
ja
xor
enter
fnstenv
and
or
or
fcmovnu
fistl
and
push
jp
fldenv
rcr
or
int3
hlt
adc
jl
scas
outsl
sub
out
pmuludq
add
ljmp
dec
rcll
push
icebp
dec
les
bnd
test
push
stc
gs
add
and
xor
fnop
cmc
add
xchg
mov
leave
cwtl
mov
mov
lcall
mov
mov
arpl
inc
in
pop
mov
sbb
icebp
int
shll
shlb
mov
aas
xchg
push
push
sbb
mov
push
jo
stos
pop
jmp
stos
pop
test
test
or
js
fiaddl
fs
xor
inc
sbb
xlat
jae
jne
xor
and
lods
out
ret
push
mov
fucomp
dec
imul
std
cmp
sarb
adc
and
repnz
imul
cmp
cwtl
pop
push
insb
xlat
je
xchg
mov
pop
pop
push
mov
sbb
mov
jnp
xchg
inc
mov
sbbb
nop
jno
sub
pop
xor
repz
inc
fstps
subb
bound
or
xchg
mov
jne
xchg
mov
imul
ret
out
sub
iret
pop
test
xor
test
and
sub
push
vmread
xor
fidivrl
in
and
jmp
mov
lods
sahf
mov
aad
aaa
imul
mov
jne
sub
xchg
mov
and
push
sub
ja
jnp
jne
sbb
das
jae
pop
stos
test
or
add
jns
sub
mov
jp
dec
gs
jecxz
cmp
cmp
pop
mov
jle
adc
loopne
out
shrb
lods
xchg
sbb
inc
insb
push
and
cmp
add
dec
mov
cmp
jmp
push
mov
cmc
xor
xchg
add
stc
stc
mov
mov
add
loope
sbb
test
insb
cs
sbb
pop
inc
adc
add
stos
push
rorb
pop
das
mulb
sub
push
mov
jle
movsb
push
fdivrl
jmp
fs
dec
sbb
push
shrb
lret
cmpl
sti
sbb
gs
iret
cs
cmp
xor
jnp
add
add
outsb
icebp
pop
sti
mov
cwtl
lods
pop
pop
mov
gs
cmpsb
push
sub
popf
or
sub
xor
and
fdivrl
lea
sbb
mov
add
push
arpl
pop
sbb
push
fistl
sahf
jae
xor
sbb
pop
jnp
push
or
mov
jb
push
test
enter
pushf
lock
or
hlt
fsubrl
xchg
pop
jns
mov
mov
test
inc
ror
dec
xchg
pop
test
mov
cli
cli
push
mov
jbe
pop
in
and
nop
sbb
ret
dec
adc
add
and
int
push
cmp
movsb
stc
lds
sar
loope
movsb
cli
mov
add
xor
push
ret
or
xchg
ds
loop
mov
rorl
xchg
test
dec
mov
add
mov
dec
fimuls
mov
fisttps
or
sar
push
xlat
paddd
adc
xchg
adcl
xor
scas
lcall
lods
push
in
pop
icebp
xor
fsubrs
jl
popa
xlat
cmp
js
mov
in
jmp
jp
adc
fsubl
je
jl
jo
test
enter
pop
dec
xchg
and
loop
inc
add
lods
push
jne
or
bound
adcl
or
test
mov
insl
pop
out
jge
jge
sbb
cmp
mov
shl
pop
add
adc
jae
xchg
mov
sahf
mov
pop
sub
cmpsl
mov
lods
mov
lods
mov
and
jp
test
addr16
gs
out
and
mov
daa
cmp
sub
mov
jl
cmp
xor
add
mov
ret
movsl
or
mov
add
ficomps
mov
pop
inc
adc
xlat
ret
push
or
pop
mov
fidivs
adc
pop
shlb
stos
xchg
jae
inc
add
and
cltd
in
and
js
xor
andl
or
cmp
cmpsl
rcr
ss
push
and
xchg
cmc
loope
mov
int
and
push
fwait
out
mov
fistpl
dec
cmpsl
das
ret
mov
stc
and
shll
out
out
xchg
cmp
jl
sbb
fadd
jno
or
sub
imul
jns
mov
inc
frstor
cs
decl
jmp
ficomps
pop
cmp
jae
jo
fwait
out
rcrl
mov
jnp
shlb
sbb
add
jno
xchg
sbb
xchg
xchg
addr16
and
out
outsb
cmp
mov
adc
and
repz
inc
mov
dec
in
dec
loope
inc
movsb
in
adc
inc
pop
outsl
leave
mov
movsl
loope
ss
pop
mov
dec
cmpl
sub
rcrb
movsb
cmp
dec
xlat
pop
lahf
sub
mov
roll
mov
add
repnz
push
pop
sub
movsl
dec
imul
rolb
ja
or
icebp
jno
ja
xchg
dec
xor
roll
or
adc
sbb
fs
push
pop
mov
xor
lea
xlat
enter
and
dec
popf
dec
push
xor
mov
rorl
add
shll
push
xlat
push
jns
mov
out
xorb
pop
subps
or
and
int
fimuls
mov
xchg
mov
dec
dec
xor
pop
add
sar
jp
pushf
xor
mov
or
cmp
and
xor
ds
jne
mov
fisttpll
fwait
cmp
les
sub
neg
mov
mov
test
push
scas
mov
push
jl
ret
bound
adc
sbb
jns
dec
jmp
movsb
loope
inc
aaa
push
imul
cmpsl
cmp
movsl
xlat
pop
add
adc
or
ds
pop
fstps
sbb
mov
jae,pn
mov
add
mov
cmp
jns
loope
add
inc
aaa
aad
ret
repnz
std
mov
out
xlat
and
jg
xchg
sbb
adc
jns
stc
sub
in
fs
cmp
ja
xchg
mov
and
mov
or
or
out
in
xchg
sti
fcmovne
arpl
mov
das
ficomps
cmp
hlt
orb
iret
mov
je
and
sbb
mov
xor
dec
push
pop
daa
dec
lret
int3
sbb
cmp
xchg
inc
gs
aam
repnz
jp
outsb
fdivs
adc
and
js
sbb
cmp
lock
inc
and
inc
ret
std
mov
stos
insb
stc
pop
addps
fldt
orb
push
jo
pop
mov
stos
imul
lret
scas
sbbb
in
xchg
dec
das
out
ret
push
sbb
jp
fxch
cmpsb
inc
imul
adc
inc
xorb
adc
xchg
rol
mov
mov
insl
pop
pusha
push
sbb
ja
lods
out
mov
cs
inc
orb
packssdw
repz
jne
sub
xchg
daa
push
lods
repz
pop
jp
cmp
mov
adc
mov
and
lahf
ss
push
into
fsubr
dec
add
xor
dec
rorb
insb
sbb
hlt
lds
push
cmp
sub
outsl
xchg
add
outsl
shrl
pop
mov
inc
jl
xor
xor
mov
punpcklbw
fistpl
sbb
jo
clc
mov
pop
std
cmp
pop
add
mov
loope
and
xlat
je
ret
in
cmp
movsl
add
sub
mov
mov
sti
xor
push
mov
out
sbb
sub
mov
jns
adc
pop
mov
nop
insl
adc
xlat
dec
movsb
mov
ret
shrb
xchg
test
aaa
push
imul
movsl
sub
in
test
mov
or
clc
jb
enter
aaa
jnp
dec
mov
cmp
jecxz
mov
mov
inc
adc
cs
test
outsb
rcll
cs
push
xor
add
adc
sbb
adc
stc
lods
dec
push
mov
addr16
ss
mov
lcall
test
fs
adc
fld
jp
dec
pusha
sbb
inc
or
cld
jae
cmp
faddl
or
xchg
movsl
dec
push
xlat
clc
in
fsts
and
adc
mov
xchg
cmp
dec
ret
xchg
mov
lea
popf
stc
pop
jge
add
mov
and
mov
xchg
dec
cmp
int3
sub
rolb
adcl
ljmp
add
jp
or
repz
pop
ss
or
sub
adc
and
mov
pop
pop
pop
lock
lcall
push
jl
fadds
addl
stc
xlat
cmp
and
xchg
subl
jns
imul
movsl
sbb
cmp
or
arpl
cmp
imul
adc
sti
ss
fildl
sbb
push
xchg
dec
jge
sbb
sbb
or
sub
in
cmp
sbb
ds
jle
sbb
out
dec
js
push
pop
adc
cmp
push
dec
imul
decb
sub
test
cld
movb
ret
scas
sub
mov
push
mov
pop
push
mov
cmp
mov
stos
jbe
imul
sbb
cmpsl
rolb
stc
outsl
addr16
mov
add
push
dec
mov
push
xchg
or
sbb
jg
ret
stos
lods
fcmovnbe
or
mov
lahf
lret
xlat
hlt
sarb
jbe
aas
in
cli
roll
addr16
out
and
add
ja
fldenv
pop
or
out
xchg
imul
mov
xchg
xlat
mov
pop
dec
add
add
cmpsl
lea
xor
or
fcoms
xor
data16
scas
xor
mov
ljmpw
fwait
shlb
inc
fidivs
jp
movsl
ss
cmp
std
cmp
lea
mov
mov
push
adc
push
cmp
sarl
repz
pop
push
dec
jb
cli
pop
popa
jbe
add
jbe
call
aas
std
and
movsb
dec
or
xchg
adc
jmp
mov
in
fdivs
lods
or
jg
mov
fsubrl
in
sbb
bound
xor
mov
arpl
jp
rorb
sub
push
adc
repnz
push
daa
jae
or
mov
lcall
mov
jb
xor
icebp
ret
jns
arpl
sub
push
inc
and
add
mov
sqrtps
sbb
cmp
sub
cmp
ja
testb
rcll
mov
dec
in
and
adc
jmp
cld
add
push
cmp
mov
notb
sbb
adc
pushf
sub
push
outsl
and
xchg
pop
insl
sub
les
fisttpll
push
movsb
mov
or
incl
adc
mov
or
insl
mov
jge
ja
inc
mov
cltd
cmpsb
pop
dec
fwait
pop
push
inc
cmp
jl
inc
mov
inc
lea
xlat
xchg
cli
cmpsl
xchg
or
sbb
or
mov
sub
and
sbb
dec
cmp
xlat
xchg
dec
in
int3
mov
adc
lods
in
clc
fldt
mov
mov
dec
or
shrl
lods
jne
mov
sub
enter
stos
push
bound
push
lcall
nop
sbb
dec
sbb
imul
jbe
mov
push
pop
push
and
or
ret
in
imul
call
xchg
xchg
aaa
dec
push
fists
outsb
sub
mov
faddl
sbb
adc
cmpb
inc
lret
pop
mov
xor
push
xlat
lea
and
jle
stos
fstpt
ja
adc
iret
push
xchg
dec
pop
mov
nop
in
inc
subb
pop
pushf
dec
xor
cmpsl
push
ret
jg
insl
in
cmp
loopne
sbb
data16
js
mov
mov
popf
mov
push
xchg
pop
aas
mov
inc
fistl
repnz
xchg
mov
sub
mov
sti
enter
imul
lahf
push
xchg
inc
dec
xor
and
inc
aaa
push
pushf
in
mov
mov
data16
fnstenv
push
cmpsl
lock
inc
pop
aam
xor
jl
insb
dec
orb
mov
in
test
mov
ja
dec
jne
lahf
sti
popf
xlat
mov
jecxz
stc
fcomps
add
out
sub
pop
or
mov
in
jne
andl
push
sbb
enter
mov
xchg
test
dec
insb
loop
fwait
sbb
bound
fnstenv
pop
in
jge
mov
pushf
sub
mov
test
jecxz
out
mov
nop
outsb
sub
js
out
add
lods
roll
insl
mov
jae
in
std
ja
popa
and
add
and
hlt
cwtl
es
xlat
test
push
sbb
mov
sub
insl
xlat
jns
cmp
and
mov
push
mov
sbb
cli
cmp
call
mov
jmp
xchg
xchg
rorl
test
mov
repnz
dec
fisubl
cli
imul
xor
jl
js
mov
rcll
push
xchg
adc
jcxz
jmp
xor
roll
jle
std
sbb
in
test
dec
pop
hlt
lea
scas
enter
sub
lret
sub
fisttpll
cli
push
jp
nop
sbbb
pop
sbb
fnsave
mov
and
lahf
test
popf
mov
imul
rolb
mov
xchg
xor
das
inc
push
mov
jg
rol
out
arpl
pusha
into
mov
dec
mov
ja
and
mov
ljmp
fs
stos
pop
mov
sarl
imul
mov
push
outsb
sarl
xchg
es
or
cmpb
push
lods
shlb
pop
mov
mov
mov
insb
je
aas
jb
sbb
fldl
pop
jae
pop
fwait
mov
jl
add
loope
dec
xor
xor
or
sub
cmp
sbb
jp
xor
pushf
aaa
jbe
xor
pop
out
mov
enter
in
push
fsubrs
sti
cmp
mov
into
bound
daa
and
test
inc
int3
sbb
cmp
mov
push
loope
inc
xchg
sbb
pop
pop
inc
pop
xchg
xor
pushf
fdivrp
fwait
sti
jbe
mov
cmp
fnstcw
iret
pop
cmpsb
orb
rorb
inc
mov
or
or
add
lods
push
fadds
xor
cmp
xchg
adc
dec
fimull
mov
fiaddl
sahf
xor
jnp
add
std
push
xchg
pop
or
add
fldt
lret
test
fstps
incb
pop
xlat
xor
les
mov
add
fimull
sub
dec
jg
and
pop
xchg
stos
xchg
dec
lods
push
aaa
lret
popf
out
pop
fs
inc
rcrl
fisubl
divb
mov
cwtl
pop
data16
pop
inc
sbb
push
and
lods
mov
arpl
stc
cli
lahf
rorb
outsl
repz
xchg
divl
pop
mov
inc
sub
or
stos
mov
push
cmp
dec
cmpsl
mov
scas
mov
iret
repz
pop
stos
sub
insl
fcmovnu
cmp
js
cmp
jle
adc
xchg
pop
std
adc
adc
insl
adc
mov
mov
imul
jns
and
lahf
test
sbb
rorl
icebp
lret
xchg
mov
cmp
or
xchg
xor
mov
adc
pop
or
fldt
int3
repz
pop
mov
sub
cmp
cwtl
ficoml
mov
xchg
cmp
dec
fisttpl
add
icebp
pop
sub
dec
pop
xchg
sub
and
dec
mov
imul
cli
sbb
cmp
shld
jecxz
pop
pop
ja
adc
xor
jle
loope
shr
daa
add
push
dec
dec
lret
mov
mov
push
out
pop
push
shrl
mov
sub
add
lea
cmp
cli
jno
dec
popa
movsl
arpl
sub
js
inc
mov
lea
cmc
iret
in
test
scas
cli
dec
pop
orl
cli
add
sub
jb
insb
test
test
imul
jns
fiadds
jg
and
dec
adc
fisubl
inc
xor
incb
mov
movsl
dec
rclb
fwait
push
clc
push
enter
cld
xchg
scas
movsb
and
aaa
mov
cmpsl
cli
imul
cmp
jecxz
push
push
sub
add
adc
movsl
mov
movsb
sti
xchg
sahf
jecxz
test
sbb
sbb
mov
xor
mov
test
movsl
pushf
std
pop
inc
jae
fstpt
fldln2
mull
xor
out
fs
ss
pop
fs
sti
aad
mov
scas
repz
mov
mov
arpl
in
xor
pop
in
out
test
out
das
xchg
mov
xor
jo,pn
lahf
xchg
sbb
and
out
pushf
std
xor
shrl
sbb
lods
lret
cmc
push
jp
shll
sbb
adc
pop
jecxz
cmpsb
xlat
mov
cli
and
sub
mov
test
sti
bound
add
addr16
iret
mov
into
ja
xor
cmp
jnp
jbe
xor
dec
mov
out
sbb
cmp
mov
dec
insl
test
xchg
gs
xor
stos
sub
cmp
pop
xor
mov
cmp
imul
outsb
mov
push
push
dec
loope
pop
mov
sub
dec
shr
js
sub
jmp
push
add
push
jb
xor
and
lretw
sarb
in
popa
sbb
cld
pushf
mov
xchg
and
mov
sub
into
int3
in
je
mov
sbb
andl
xor
aas
outsl
shll
scas
iret
or
dec
outsl
aam
mov
out
or
xor
mov
xchg
out
pop
add
stc
test
dec
and
std
cmc
mov
sbb
jb
or
sbb
cmc
inc
insb
mov
pushf
jmp
neg
pop
or
mov
pop
mov
adc
mov
in
xorb
add
mov
xchg
or
imul
mov
xchg
shrb
jbe
jno
mov
adc
and
icebp
or
sub
adc
addr16
or
mov
imul
cli
rorb
insb
cwtl
xor
nop
mov
pop
lahf
ds
fstps
cwtl
push
rsm
hlt
mov
mov
cmpsb
popa
leave
dec
aam
lcall
cmpsb
loop
std
adc
jb
movsl
xorl
jno
jmp
push
out
test
lods
and
push
cltd
imul
sbb
cmp
cli
fidivs
xor
fistps
lret
ss
loop
fnstenv
or
xchg
mov
cmp
cmp
insl
imul
jecxz
testb
cmp
pop
and
insb
enter
push
inc
and
add
pop
mov
stos
push
pushf
dec
testb
cmpb
fildl
test
sub
dec
ret
lock
mov
in
sahf
fstpl
adc
std
xchg
sbb
inc
add
or
and
xor
jns
in
neg
pop
jmp
dec
mov
push
xlat
mov
inc
push
or
fcmovne
mov
xchg
out
movsl
mov
enter
lods
mov
or
lret
add
test
mov
pop
mov
or
push
ja
jae
fldcw
aam
fs
stc
arpl
jbe
mov
sub
push
and
mov
adc
cltd
movsb
test
sbb
shl
dec
xor
mov
loopne
out
cmp
xlat
pop
insl
mov
adc
xchg
jo
cmp
pop
xlat
xchg
ljmp
xor
cmp
ss
mov
sahf
pop
inc
push
mov
xor
cmpsb
fidivrs
movsl
mov
dec
out
and
test
cld
push
pusha
notl
rolb
xor
in
neg
pop
xchg
jae
stc
xlat
fcom
mov
data16
clc
pop
fwait
dec
test
dec
or
fcoml
lods
xchg
and
and
fldenv
push
jae
mov
lods
or
cmpsl
mov
aam
mov
push
pop
stos
rclb
inc
jnp
dec
sarl
pop
js
mov
data16
jp
fildl
sub
stc
push
loopne
cmp
pop
cmp
test
leave
imul
call
pop
cmp
mov
loop
or
movsb
lahf
icebp
jb
sbb
adcl
rcll
mov
fistpll
and
and
sarl
adcl
xchg
inc
les
cwtl
and
sti
scas
add
xchg
test
xchg
cli
xlat
mov
dec
dec
int3
xor
mov
sbb
push
imul
push
xor
mov
enter
mov
push
sbbb
lcall
fs
lret
fs
cltd
mov
jo
std
notb
in
enter
mov
out
cmpsl
stos
or
inc
test
dec
flds
cmc
mov
stc
pop
and
add
adc
mov
sbb
mov
scas
rorl
fwait
inc
addl
aaa
fistpl
mov
cmpsl
test
incl
pop
pop
out
out
cmp
mov
lods
loopne
push
cmp
sbb
bound
or
xchg
leave
lock
mov
imul
dec
int
xchg
mov
aas
xchg
push
jl
flds
xlat
adc
sub
push
or
cli
imul
and
fxch
jne
xlat
and
xchg
cmp
fs
inc
mov
shrb
ror
mov
dec
add
pop
and
or
lods
or
pop
lock
jl,pn
mov
cmp
ror
mov
xor
imul
scas
jne
push
enter
jbe
clc
sub
popf
nop
fiadds
popf
into
scas
xchg
insb
cs
mov
jbe
pop
int3
lahf
fsubr
xchg
mov
dec
xlat
or
ret
xor
mov
dec
mov
xlat
sub
or
xor
cmp
add
fld
insb
fstl
mov
sub
shrl
enter
aad
xor
mov
jp
add
sbb
inc
pop
dec
jg
jne
imul
paddq
pop
fcom
pop
xchg
dec
cmpsl
cmc
sbb
and
pop
jp
pop
clc
cltd
enter
fldt
mov
jp
fcmovbe
adc
push
inc
push
filds
aad
movsl
sbb
add
add
cmp
scas
xchg
push
cmp
fiadds
cmp
add
pop
push
mov
je
adc
jmp
sbb
xchg
jo
sbb
sub
xchg
push
adc
in
mov
pusha
cmp
xor
xchg
and
jecxz
out
sub
inc
adc
sub
or
pushf
xchg
add
add
adc
lods
js
adcb
mov
push
out
mov
mov
sub
xor
dec
lahf
and
fcmovbe
out
add
sbb
mov
lea
mov
loope
std
lcall
iret
sub
add
stos
jg
jg
imul
ficomps
push
jno
jecxz
test
data16
test
add
xor
fdivl
hlt
fsincos
imul
cwtl
sahf
mov
ja
repnz
je
pop
dec
push
std
pop
pop
mov
mov
jecxz
xorb
mov
addl
fcomp
push
lcall
jecxz
pop
repnz
push
aam
lcall
and
adc
add
stc
popf
test
dec
imul
cmp
cmp
jne
or
movsb
int3
and
ret
lods
gs
cmp
call
mov
loop
push
in
push
into
addr16
movsl
inc
int3
xor
ret
std
jmp
or
xchg
cmp
push
cmp
jb
imul
imul
ljmp
push
js
cwtl
mov
xlat
jae
sbb
stos
push
mov
push
loopne
sub
stos
arpl
dec
nop
jns
or
iret
push
sbb
jl
out
and
cmp
fildl
fildl
mov
cld
jno
or
loop,pt
inc
outsb
sub
cs
fnstcw
mov
fidivrs
or
cmp
xchg
and
in
dec
dec
sbb
ljmp
cwtl
cmpsl
mov
jp
in
scas
sub
test
sub
xorb
jnp
in
mov
fwait
mov
dec
push
adc
mov
add
sbb
loopne
mov
push
xor
lods
xor
and
popf
int3
cmp
pusha
imul
movsb
into
loopne
or
das
fcompl
cmp
ja
stos
cwtl
sahf
pop
scas
pop
inc
cmpsb
cmp
cmp
rcl
jecxz
pop
imul
dec
scas
xor
adc
aaa
jns
jp
push
hlt
mov
popa
pop
xchg
mov
mov
jns
hlt
add
sbb
or
pop
adc
fwait
testb
lret
mull
shl
and
jnp
test
shlb
push
stos
and
popa
inc
cmp
jmp
repz
pop
stos
stc
adcb
aam
mov
pop
iret
sbb
adc
pop
test
push
jns
fptan
push
int
cmp
pop
out
fstps
pop
scas
idivb
and
mov
mov
cwtl
ja
nop
fisttpl
mov
mov
push
or
cmp
inc
jbe
fwait
ja
divl
push
lcall
xor
outsl
xchg
dec
fldt
cmp
call
sub
in
jl
sub
rcr
xchg
inc
dec
xchg
xchg
rcll
daa
jp
aad
mov
pop
fisttpl
push
sbb
sbb
inc
add
push
lret
aam
movups
shll
mov
mov
cs
repnz
cmp
mov
scas
pushf
pop
jmp
inc
xor
pop
inc
lret
in
pop
push
daa
xchg
add
cmp
xlat
cmc
fldt
push
stos
dec
movsb
push
mov
pop
sbb
int3
pop
pop
dec
into
sbb
stos
loop
aas
and
mov
out
ficoms
xchg
jae
push
fistl
test
push
daa
js
pusha
imul
lahf
sti
sbb
jg
cmp
stos
pop
rcrl
mov
jle
push
add
invlpg
xchg
and
adc
sub
mov
adc
dec
push
test
ja
add
xor
pop
outsl
pop
fsts
mov
aam
sbb
or
and
insb
sbb
xor
aad
cwtl
imulb
pop
jl
add
mov
xor
and
mov
mov
and
imull
shrb
fdivrl
mov
test
jl
in
inc
int
ret
xchg
cmp
lods
jmp
shll
jns
xlat
cmp
fs
add
fcmovne
xchg
jge
pop
sbb
cmpsl
jmp
cmp
ret
pop
sbb
sub
or
adc
add
sbb
mov
push
add
mov
sarb
sub
adc
stos
or
xchg
sub
fcoms
mov
cltd
push
or
nop
fisubl
and
outsb
shrl
sub
sbb
pop
pop
cli
inc
pop
fsts
test
and
pop
enterw
and
out
pusha
dec
hlt
mov
push
stos
iret
mov
sbb
lahf
dec
icebp
and
mov
xchg
mov
jns,pn
mov
inc
push
xor
push
cmp
sbb
je
imul
in
lret
iret
cmpsl
in
xor
mov
xchg
roll
dec
scas
roll
cmp
loope
jmp
sub
xchg
mov
jbe
lahf
pop
lcall
push
jae,pt
push
aam
popf
xor
jno
mov
pop
adc
ficomps
mov
fnstenv
push
test
iret
mov
fidivl
popf
jp
sbb
mov
jle
inc
lret
sbb
in
insb
dec
adc
or
adcl
or
xchg
inc
sub
scas
scas
jle
add
jg
stos
xchg
xchg
jp
stc
dec
jbe
fmull
ret
je
pushf
lods
sub
popf
jb
and
in
sbb
and
fucom
daa
mov
and
pop
sarb
fsubl
jle
add
stc
xchg
fistps
out
fs
subb
inc
fildl
or
dec
test
mov
pop
enter
jae
sub
xor
dec
jae
pop
filds
lds
ja
add
pop
pop
lret
xchg
stc
loope
pop
dec
pop
repz
es
mov
ds
xchg
lea
daa
das
inc
cmp
mov
adc
int
pop
lods
jmp
popa
rcl
lret
fs
mov
ja
or
daa
add
mov
cmpsl
lret
mov
aad
lret
inc
sbb
cmp
cmp
jns
lods
fs
inc
cmpsb
js
in
cmp
je
shlb
adc
push
pop
fidivrl
shrb
cmp
xor
lcall
dec
movsl
pop
inc
in
mov
and
mov
xor
lcall
and
rcll
sahf
mov
lods
xchg
push
call
and
jne
fsubl
push
mov
sbb
lds
aam
decl
inc
stc
push
mov
and
mov
loope
xchg
aad
pop
jge
jp
testl
xchg
cvtpi2ps
cmp
push
xchg
gs
daa
into
cmp
xor
imul
jmp
ret
mov
and
dec
jns
dec
pushf
pop
mov
popl
lds
cmp
mov
mov
sub
in
sub
sub
cmp
jg
mov
sti
into
scas
inc
lea
lret
jae
sbb
pop
inc
push
imul
ja
pop
mov
test
test
movsb
sbb
dec
sbb
cmp
adc
jne
lcall
sub
xchg
arpl
mov
gs
and
mov
pushf
repnz
aas
push
mov
imul
mov
test
push
jno
inc
mov
hlt
add
int3
add
inc
aas
xchg
xor
aad
xchg
xlat
pop
pop
mov
inc
xchg
dec
leave
fsubl
adc
push
add
ret
pop
mov
je
push
mov
fimuls
jns
mov
je
adc
or
xchg
ss
mov
push
push
jmp
xchg
dec
lods
push
mov
lcall
mov
dec
inc
jbe
sub
rclb
cld
popa
js
dec
and
test
gs
jne
dec
cmpsl
jno
ja
mov
xor
subl
fcoml
dec
and
popl
mov
jecxz
xchg
out
add
and
adc
xchg
dec
sar
daa
pop
cs
push
lret
js
ds
add
push
aam
push
aad
pop
pop
pushf
arpl
mov
pushf
xlat
dec
pop
shrl
adc
jge
jge
jl
push
pop
enter
leave
imulb
dec
cwtl
adc
mov
jle
ret
fsts
orl
mov
sbb
pop
mov
imul
dec
rorl
das
mov
xchg
popf
pop
or
popf
adc
push
lahf
jne
cmpl
fildl
and
xlat
add
lcall
je
and
xchg
fstl
sbb
push
inc
or
pop
mov
cltd
lods
cmpsl
sbb
pushf
jle
cltd
mov
xlat
mov
cmp
subl
xor
xor
iret
dec
in
aaa
add
rcl
lock
jp
pushf
mov
jno
add
cmp
cmp
push
cmp
xor
mov
or
inc
and
cmp
jne
mov
fstpt
clc
popa
xchg
pop
xorb
push
mov
ftst
mov
add
ljmp
rclb
fidivrl
xor
and
jnp
and
in
adc
leave
fstpl
int3
rolb
mov
aad
movsb
call
mov
pop
mov
adc
mov
push
jne
test
or
movsl
and
xchg
push
sbb
out
sbb
scas
mov
jae
lret
fistl
push
sub
pop
or
cmp
lds
subl
lret
xor
out
pushf
daa
ja
mov
inc
xchg
pop
pop
imul
mov
fcos
xchg
mov
mov
adc
leave
jnp
xlat
aas
and
mov
add
mov
loop
jo
jne
nop
inc
xchg
dec
cltd
mov
sub
jb
mov
or
mov
mov
xor
decl
jecxz
adc
sub
xchg
push
lahf
push
inc
repz
imul
push
out
ret
adc
fisubs
enter
push
push
test
mov
mov
fwait
mov
add
mov
dec
shl
jecxz
shll
pusha
and
jno
jo
mov
ljmp
data16
nop
aad
aaa
addb
pusha
jae
pop
dec
in
sub
xor
push
adc
daa
cs
sbb
pop
hlt
test
fptan
jge
mov
ds
xlat
aam
into
out
and
popa
mov
out
sbb
das
add
outsb
mov
adc
and
cmp
xlat
lahf
mov
ret
dec
cmc
jno
or
xchg
rcrb
pop
adc
in
sub
add
jb
xor
jp
rcrb
add
fwait
xchg
into
inc
popl
pop
pop
adc
test
ljmp
push
mov
cmpsl
movsb
sub
sub
sar
cmpsl
jmp
push
xlat
cld
adc
sbb
fisttps
lock
addr16
cld
idivl
push
add
cmc
xlat
mov
fwait
mov
ret
sbb
into
std
scas
shlb
test
jp
cmp
and
xor
in
xor
jns
mov
xchg
bound
sbb
inc
mov
mov
cli
lcall
push
fisubrs
jo
jno
cmpsl
fs
sub
xor
mov
and
mov
jns
cmp
adcl
arpl
int
or
fstpt
xor
xor
pop
mov
mov
and
in
pop
repnz
negl
mov
dec
flds
add
scas
hlt
xor
sbb
pushf
xchg
push
cmp
jge
fldenv
lcall
data16
push
adc
loope
fwait
cld
repnz
xor
mov
sbb
jl
sbb
leave
nop
fcmovu
fadds
sub
loopne
stos
xorl
loope
pop
filds
inc
jp
stos
sub
int3
dec
jns
xchg
lret
fnstcw
div
outsl
pop
sbb
insb
xor
roll
push
push
out
sbb
and
cs
xlat
inc
fwait
pop
mov
test
mov
mov
jle
and
dec
mov
inc
sbb
lret
sbb
lahf
mov
ljmp
cld
inc
and
insb
testb
aaa
std
mov
ljmp
jecxz
push
push
daa
mov
in
divl
or
mov
pushf
arpl
inc
scas
dec
push
clc
xchg
jnp
add
in
jp
xchg
fwait
in
dec
jmp
mov
adcb
addl
jmp
out
sbb
lcall
jg
push
mov
push
movsb
mov
jl,pt
js
push
mov
push
lds
xlat
and
mov
cmpsb
rorl
imul
fcoml
shll
pushf
inc
hlt
bound
push
cs
sbb
pop
pop
stos
fchs
das
mov
or
mov
ljmpw
inc
sbb
push
cmpsl
je
or
cmp
add
pop
mov
orb
rcrb
out
fcompl
jmp
jne
andb
neg
lret
sbb
cmpb
sahf
or
xor
mov
test
mov
dec
stos
pop
pop
imul
es
pop
xlat
and
fcoml
loopne
in
popa
cs
mov
fidivrs
jns
xor
jge
cmp
rorb
test
push
pop
mov
cli
push
xlat
gs
xor
xor
sbb
add
sub
xchg
cmp
xlat
popf
xor
mov
cwtl
rorb
lret
in
sub
cmp
pop
mov
mov
shll
and
dec
cld
push
leave
pop
jns
push
inc
add
jnp
sbb
jno,pt
mov
jns
cmpsl
flds
mov
inc
sbb
loopne
loope
xchg
scas
push
add
out
filds
fstpt
cmp
out
scas
call
test
cltd
rorl
add
dec
in
mov
dec
in
loop
loopne
sbb
mov
in
xor
push
jl
dec
pushf
jl
sub
dec
fwait
out
or
mov
addr16
lcall
lock
xor
cmpsl
bound
jge
push
xorb
xchg
mov
cmp
xchg
push
push
xchg
mov
mov
cmp
lods
sub
aas
mov
sub
dec
push
xchg
cmpl
and
iret
leave
ja
adc
xor
xlat
or
fstpt
cmpsb
add
pop
pop
xlat
sub
fldenv
mov
pop
or
inc
cmpsl
icebp
fldenv
jno
stc
daa
sub
addb
jge
loope
int3
push
jmp
and
xor
pop
dec
push
stos
aas
scas
adc
stc
mov
add
cwtl
rclb
push
arpl
rcrl
std
push
mov
test
stc
mov
cmp
cmp
subl
loopne
mov
xlat
test
lods
xlat
xchg
adc
sbb
cmp
and
xor
adc
pop
sub
outsl
icebp
inc
arpl
xchg
or
dec
popf
sbb
fdivrs
daa
cmp
sbb
dec
pop
rolb
bound
push
in
push
add
cwtl
fwait
sbb
pop
sti
xlat
xchg
fiadds
mov
xchg
lcall
xor
aas
fsubs
xchg
jmp
call
xlat
pop
or
inc
lret
fsubrs
pop
insb
pop
mov
xor
push
sbb
cmpl
jmp
fnstsw
xchg
gs
push
and
test
dec
push
push
jne
je
xchg
jb
mov
lea
in
pop
push
aam
mov
dec
aas
cli
rorb
jae
andb
jne
inc
cld
cli
in
fldt
push
push
lret
push
lahf
leave
jge
xlat
dec
mov
and
pop
lret
sbbl
cmp
jge
es
dec
mov
xor
call
add
push
jl
or
adc
rorl
and
inc
into
jecxz
in
pusha
shl
dec
jbe
mov
in
push
enter
or
push
hlt
repnz
mov
jnp
gs
ds
imul
lds
xchg
pop
dec
add
lahf
and
mov
adc
jb
xlat
repz
aaa
cld
pop
hlt
mov
mov
sub
adc
xchg
das
xor
mov
imul
mov
faddp
cmp
outsl
fnstcw
hlt
sub
in
xchg
dec
jbe
sbb
xor
fistl
pushf
xor
out
cmc
rclb
xor
jno
icebp
lock
adc
mov
jae
fdivrs
mov
jg
lods
loope
xchg
cmp
sbb
inc
cs
subb
fcmovnb
or
imul
inc
or
addb
push
xchg
push
add
cmpsl
sbb
ja
cmpsb
jnp
cmp
bound
sbb
mov
push
dec
cmpsl
mov
movsb
xlat
daa
and
sbb
xor
pop
mov
cld
js
clc
adc
mov
xor
dec
cmp
jns
cmp
pop
pop
sbb
and
cmpsb
mov
pop
popa
leave
push
adc
cld
and
mov
out
lods
jp
add
mov
popf
mov
test
inc
outsb
out
inc
stos
push
push
xor
xor
pop
push
stos
ret
cmc
cmpsb
loopne
sbbl
inc
or
jns
adc
pop
and
jp
sbb
cmpsl
imul
stc
xor
mov
insb
pushf
or
mov
lods
xor
insb
lcall
jl
fidivs
nop
jmp
and
clc
gs
pop
popf
mov
jno
and
lret
loop
addb
add
into
push
inc
push
js
jl
and
inc
inc
fstpt
push
scas
mov
incb
mov
shll
mov
add
pop
and
sub
pop
push
cmp
cs
notl
mov
gs
stos
or
xor
mov
xlat
shrl
mov
in
std
subl
cmpl
mov
mov
sub
lods
xorb
inc
in
push
jl
jb
adc
mov
mov
jp
sbb
sahf
das
aas
ds
push
ja
xchg
vmwrite
xchg
pusha
roll
jp
out
xor
sti
xchg
inc
mov
mov
xchg
xchg
fcmovne
push
into
xchg
stos
push
push
jno
add
rclb
bound
pop
inc
adc
outsl
imul
addr16
ret
divl
jbe
mov
mov
sbb
xor
outsl
jmp
fistl
mov
push
fidivrl
jp
ds
pusha
stc
fyl2x
addr16
pop
ljmp
jge
add
out
scas
test
lcall
cmc
inc
test
in
cwtl
push
dec
mov
movsl
sbb
sub
outsl
jno
test
sbb
rclb
xor
leave
mov
out
jne
dec
lds
cmp
popf
and
fidivrs
fs
leave
call
sub
xlat
pop
push
out
cltd
add
ret
ja
mov
push
leave
ret
ljmp
adc
dec
or
imul
adc
adc
test
rorl
aaa
and
pop
dec
or
popl
dec
insl
dec
loop
das
stos
pop
push
insb
pop
mov
repnz
imul
inc
mov
and
and
adc
bound
scas
mov
mov
mov
sub
scas
cltd
mov
jecxz
fisubrl
ret
aas
scas
mov
push
sub
dec
push
decb
call
and
inc
jge
cmp
fstpt
aam
ja
or
test
mov
add
int3
fcmovnbe
push
repnz
pop
out
xchg
mov
lret
loopne
jle
ficoms
call
lret
outsl
sub
stos
cmp
pop
jae
nop
push
mov
sbbl
ficomps
shl
sar
cwtl
xor
sub
mov
iret
sub
push
dec
or
fdiv
daa
push
mov
bound
mov
stc
jl
push
pushf
mov
cli
sbb
push
daa
adc
xchg
push
sub
add
dec
jae
push
push
xchg
popf
jg
jle
stos
insl
fsubrs
inc
mov
mov
mov
xor
dec
pop
or
je
jb
push
lods
jb
or
lahf
rep
jmp
dec
xchg
ss
test
lcall
push
movsl
aam
loopne
movsl
jno
stc
mov
loopne
mov
xor
out
pop
mov
xor
mov
xchg
shr
popf
rorb
or
dec
fdivl
out
sahf
mov
xor
pop
addl
mov
jp
out
mov
xor
mov
iret
xchg
sub
sahf
mov
jecxz
lods
shlb
push
pop
jmp
arpl
sub
pushf
xchg
ja
dec
or
and
cs
sub
inc
sbb
sub
loop
movb
and
or
out
sbb
mov
mov
mov
icebp
sbb
inc
popf
mov
xorb
push
mov
roll
pushl
pop
in
or
or
inc
push
xorb
test
cmpl
icebp
nop
add
sbb
sub
xchg
enter
repz
cmp
mov
jl
jg
inc
push
xchg
fidivl
dec
xchg
xchg
jnp
call
ret
jp
stc
inc
xchg
testb
sub
fdivr
cs
test
inc
lods
jecxz
sbb
scas
testb
out
cli
or
dec
ret
add
pop
imulb
fldt
fcmovnu
push
sbb
sub
pop
xchg
js
cli
aas
xor
xchg
jmp
and
pop
pop
or
xlat
into
popf
jno
dec
mov
or
scas
mov
filds
nop
dec
sbb
fbstp
in
ljmp
dec
shll
sbb
mov
and
sti
adc
xchg
mov
xor
sub
stos
or
mull
movb
jbe
push
or
fidivl
inc
jge
cmpb
add
add
movsb
insl
jg
stos
jns
fidivs
xor
fisttpl
jae
mov
mov
ret
or
xchg
mov
lret
mov
inc
jge
push
push
aad
lahf
pop
mov
ljmp
sub
pop
daa
add
pushf
hlt
inc
fsubl
inc
mov
in
mov
dec
sti
test
pushf
out
jae
dec
mov
movsb
cmp
xor
scas
mov
rol
cwtl
addb
rcrl
lcall
and
cmc
adc
arpl
sub
and
sahf
sub
push
mull
aaa
aad
in
sti
adc
jns
mov
pop
nop
lret
mov
push
dec
fcomi
popf
andl
int3
je
dec
mov
pop
nop
jmp
inc
xorb
cmp
stc
adc
in
popf
pop
or
inc
and
and
push
jnp
repnz
push
and
push
daa
push
ret
hlt
xor
daa
xchg
shll
andl
test
out
jecxz
fistl
xchg
outsl
sub
pop
stos
jg
mov
daa
xchg
jae
xor
imul
fdivr
add
and
or
repz
fnstcw
or
mov
js
add
sbb
jmp
arpl
xor
dec
scas
sahf
orb
push
cmp
push
enter
cmp
ds
js
subb
dec
inc
imul
jmp
lock
imul
and
push
test
push
mov
jmp
push
cmp
lock
aas
shll
or
repnz
imul
test
mov
sbb
stos
pop
cmp
adc
and
in
sub
cmpsb
ja
sbb
inc
mov
pop
andb
cmc
sub
sbb
in
cmp
xchg
pop
out
pop
insl
mov
int
push
popf
negl
and
jns
pop
sbb
out
cwtl
sub
cmp
popf
cmp
add
mov
cmp
and
popf
ljmp
jle
loope
les
cwtl
xor
dec
int3
xlat
sahf
inc
adc
cmp
faddl
push
and
xlat
imul
xor
mov
push
adc
es
push
sub
mov
push
push
xorb
cs
das
call
ret
out
pushf
std
push
push
mov
shll
sahf
pop
cmc
jp
orb
jno
dec
outsb
jns
mov
dec
push
pop
jnp
in
mov
in
test
leave
scas
js
fwait
jae
rcl
dec
fcomip
inc
or
repz
mov
das
jnp
mov
sub
cli
xchg
mov
dec
ror
dec
dec
incb
int
push
insb
xchg
popf
lahf
dec
das
and
sub
aaa
cmp
cmp
mov
sar
sub
mov
jp
sbb
xor
fldl2t
jp
mov
inc
in
cmpsl
mov
dec
fistpl
sbb
add
push
daa
dec
jnp
dec
idiv
addr16
sub
xor
push
xorb
xchg
lret
ja
xlat
pop
mov
orl
into
xchg
sbb
jnp
adc
gs
mov
push
cmp
fwait
push
adcl
inc
xor
jno
dec
mov
ja
fists
ret
push
inc
lahf
addr16
or
adc
push
jnp
adc
jge
push
lret
and
push
movsl
stc
arpl
in
add
clc
outsl
repz
jns
out
in
arpl
nop
sbb
test
dec
cwtl
mov
shrb
or
pop
daa
sub
pop
shr
push
cmpsl
sbb
adc
push
mov
mov
dec
fs
and
mov
out
mov
data16
xchg
mov
fnstenv
lahf
xor
pop
js
stc
stc
pusha
cmpsl
fdecstp
pop
rolb
test
orb
std
stc
adc
push
ror
sti
rcrl
lcall
push
fisubl
les
fcmovne
aas
sub
mov
mov
out
mov
mov
dec
xlat
mov
stc
xchg
enter
icebp
mov
sti
popf
imul
adc
mov
pushf
imul
push
rcr
xchg
stos
imul
ret
enter
in
push
test
outsb
xchg
jle
pop
push
xor
push
cmp
jp
xchg
xor
pop
cmp
mov
fldcw
cwtl
push
xor
or
pop
in
cld
test
cli
dec
insb
shr
mov
and
and
jmp
and
sub
sbb
testl
ss
aaa
aad
jmp
fstpt
hlt
std
xorl
dec
pop
pushl
pop
cmpl
sti
lret
mov
out
lods
pop
dec
sarb
mov
xor
or
hlt
in
lcall
mov
les
data16
xor
mov
leave
test
into
les
or
pop
pop
pusha
cmp
xchg
aad
xchg
sub
push
sarl
fstl
adc
dec
pop
and
fwait
std
jecxz
add
hlt
or
sbb
adc
mov
or
addb
jmp
mov
sbb
jnp
jne
jge
rolb
js
imul
cmp
or
add
pop
cld
xor
imul
popa
push
lret
xor
aaa
xchg
movsb
insb
or
call
cmp
push
pop
enter
sub
mov
out
hlt
jecxz
ror
xchg
and
pusha
dec
sarb
sbb
pop
push
test
add
and
push
pushf
mov
stos
and
test
sub
sbb
fmuls
ror
sbb
inc
cmp
xchg
dec
dec
jbe
sub
cmp
xor
cmp
fildl
xchg
jmp
cmc
inc
mov
ljmp
imul
ja
jmp
mov
xbegin
sbb
into
out
mov
jmp
adc
xor
lods
pop
lret
or
xor
dec
addr16
test
orb
push
sub
lods
cmp
xor
loopne
lret
jno
dec
jecxz
shll
test
cmpsb
outsl
push
popa
adc
push
pop
push
inc
aam
out
xorb
ficomps
jmp
scas
cmp
ss
dec
mov
push
adc
fstps
xchg
in
adc
pushf
test
leave
fyl2x
hlt
outsb
inc
and
shrb
cmpsb
jp
sbb
scas
jp
jge
jno
mov
repz
mov
sahf
or
gs
add
jle
je
pushf
dec
test
addr16
jg
jne
fdivrs
nop
test
pop
mov
and
and
sbb
stc
flds
in
cmp
ret
pop
xor
jnp
shl
xor
mov
call
stc
ficomps
xchg
test
pop
inc
jbe
test
jp
cwtl
and
pop
mov
xor
push
push
cld
dec
mov
inc
add
mov
pop
cmp
es
aaa
xchg
aas
subb
ja
jns
push
enter
push
repnz
sub
pop
push
cmp
daa
lahf
add
in
mov
sub
or
jp
test
xor
dec
lret
pop
add
sti
cmp
push
jae
in
lods
mov
inc
adc
lret
mov
mov
dec
insb
mov
xchg
sbb
scas
mov
xlat
cld
mov
push
cmp
in
pop
dec
in
in
dec
jne
pop
dec
dec
or
lods
xchg
mov
push
adc
push
jg
imul
mov
cmp
shrb
js
ss
in
jne
lods
inc
andl
mov
addl
js
fistpl
xorl
subl
les
mov
mov
fildl
and
mov
lods
xchg
pop
cmp
out
dec
and
mov
mov
lahf
rclb
xlat
fstps
mov
dec
or
mov
jge
push
dec
test
fwait
mov
hlt
les
fwait
dec
stc
rolb
lock
sub
mov
rcll
aad
push
adc
je
push
jp
std
ret
xorb
mov
and
jmp
xchg
fdiv
in
adc
and
or
sbb
dec
dec
jbe
cwtl
out
xchg
jp
mov
mov
inc
cs
imulb
xchg
das
repz
int3
out
addr16
mov
and
movsl
mov
sti
jg
dec
cmp
mov
push
cwtl
sbb
outsb
jmp
cmp
ficoml
pop
mov
lcall
cmpsl
es
sbbl
fldt
push
jno
shll
mov
xor
adc
cmpsl
in
outsl
sbb
xor
bound
xor
jp
call
and
xor
test
subb
cmp
fstpt
and
adc
cld
fnstenv
cmp
sub
push
les
out
mov
test
push
out
ror
inc
movsb
push
cmp
push
cli
and
iret
mov
adc
aas
imul
sbb
into
and
sub
call
icebp
imul
mov
fwait
std
addb
mov
push
pop
mov
xor
and
push
int
cld
xchg
xchg
cmp
add
repz
movsl
insb
lcall
pop
sbb
dec
std
sub
xor
int
xor
push
xchg
pop
int3
jle
movsl
pop
add
jae
jb
xchg
loope
lret
sbb
or
pop
fbld
shrl
shrb
fistps
roll
popf
das
repnz
mov
mov
push
xor
cmp
fldcw
and
mov
loopne
add
push
mov
adc
outsl
add
test
mov
jnp
fs
mov
and
or
dec
leave
mov
sub
out
adc
jno
cmpsb
ss
xor
fists
push
xorb
mov
jae
xlat
bound
popf
add
or
popf
and
push
sub
dec
jbe
lea
hlt
fdivr
cmp
push
pop
jmp
mov
push
jge
or
bound
and
sub
out
push
xlat
xor
or
xor
imul
in
out
jle
iret
dec
dec
cmpsb
xchg
or
fistpl
jae
cmpsl
ret
xor
xchg
mov
add
xchg
jno
out
inc
jno
in
inc
mov
inc
mov
inc
push
mov
xor
dec
jns
nop
pop
invd
jae
daa
scas
daa
sbb
dec
jns
stos
xlat
pop
mov
ret
fistpl
pop
cmp
ret
push
mov
fsubl
jmp
pop
cmp
insb
mov
fsub
fstps
orl
xor
sub
lock
add
xor
adc
enter
fnstcw
in
movsl
std
mov
loop
sub
cmp
mov
push
add
sbb
incl
jne
pop
pusha
in
jmp
stc
rolb
data16
sbbb
mov
or
enter
sbb
inc
loopne
mov
add
push
into
leave
xor
lcall
jmp
sbb
repz
das
frstor
cli
scas
push
and
jae
xchg
sahf
lahf
jmp
aaa
push
or
dec
shl
xor
js
and
fwait
sbb
fists
gs
arpl
pop
dec
push
sbb
flds
cs
mov
addr16
sbb
jp
shl
ficoml
out
mov
xchg
pop
jb
pop
push
stc
push
pop
movsb
dec
or
jae,pn
pop
js
xor
imul
mov
and
pop
ror
sbb
popf
andl
insl
lcall
sub
push
sarb
and
outsl
fnop
pop
outsl
in
mov
flds
push
inc
push
cld
push
lret
jecxz
jmp
out
or
mov
add
pushf
les
jl
xlat
push
cmp
nop
loop
pop
jnp
cwtl
daa
adc
sub
dec
pusha
push
push
jge
and
fwait
or
and
cmpsl
jb
or
scas
fstps
mov
shlb
xchg
pop
into
push
dec
or
cmp
push
sahf
sbb
adcb
lret
jl
fisubrl
arpl
xlat
or
jns
sbb
sub
xlat
and
jg
aad
daa
std
fwait
jle
or
xlat
inc
jne
ljmp
push
and
dec
insb
xchg
call
push
mov
xchg
aam
sti
pusha
int3
pop
mov
sub
dec
and
pop
pop
or
mov
mov
mov
fnstcw
fstpt
and
mov
cltd
add
mov
cmp
fsts
add
mov
jl
pop
fidivrl
ljmp
sti
leave
xor
jp
fnstenv
movl
jae
retw
mov
fucomp
test
or
pop
sub
xorb
and
mov
imul
mov
sub
mov
adc
dec
cmp
mov
js
add
inc
sub
pop
mov
sbb
adc
mov
xor
test
icebp
adcb
dec
xlat
arpl
jae
xchg
sbb
repz
and
sti
push
cwtl
dec
cmp
fcmovbe
ret
pushf
inc
ja
push
pop
into
pop
mov
xchg
pusha
cltd
xor
push
movsl
or
jb
push
mov
push
inc
data16
fildl
fcmovnu
sub
pop
jbe
fwait
and
jge
test
sahf
cmp
daa
adc
add
gs
addl
mov
dec
dec
inc
cmp
mov
xchg
xor
mov
sub
jne
push
lret
dec
les
and
aam
movsl
sub
cmp
stos
pop
pop
mov
cmp
loopne
lret
std
adcb
ficoms
arpl
cli
mov
adc
stos
and
sub
jns
fstps
loope
or
jno
and
inc
lahf
xchg
fnstenv
lods
push
loop
xchg
adc
mov
dec
mov
pop
and
int
sub
cs
loopne
jno
in
jecxz
xchg
mov
xor
jp
data16
lock
cmp
std
xchg
add
pop
adc
and
fistl
xlat
sbb
sub
les
xchg
adcl
movsb
mov
add
outsb
scas
pop
xchg
push
popa
fcmovne
sbb
sbbb
sub
mov
jle
jns
fsin
inc
hlt
add
mov
loopne
cld
imul
fcmovne
addr16
loopne
sub
sub
jmp
xchg
je
pushf
jmp
mov
btr
mov
inc
adc
mov
push
enter
or
leave
cld
push
inc
je
shl
sbbb
sbb
loopne
xor
add
stos
sub
push
sti
imul
dec
jne
loop
jnp
inc
and
adc
and
icebp
insb
fidivrs
iret
mov
out
loope
push
fildl
test
clc
mov
sahf
mov
push
subb
adc
adc
fadds
add
xor
test
subl
daa
xchg
enter
aaa
pushl
inc
aas
dec
ja
sbb
pop
lret
adc
sub
in
cld
rcr
dec
ret
push
imul
xor
imul
pop
inc
out
xlat
scas
and
jbe
std
or
sbb
cld
cld
pop
mov
add
outsl
mov
mov
lret
xchg
enter
pop
dec
push
mov
add
push
xor
and
data16
push
lock
int3
lret
or
out
xchg
mov
push
pop
pop
loope
subl
movsb
mov
data16
std
pushf
dec
dec
mov
lahf
insb
call
arpl
sti
jl
xchg
aad
mov
or
in
jnp
dec
pop
mov
xlat
xor
dec
sub
xlat
adc
mov
dec
jnp
mov
fcom
dec
mov
lock
call
fstpt
mov
jne
mov
add
push
arpl
cmp
sbb
ja
dec
les
js
jno
xchg
push
cs
lods
xchg
test
xchg
cmp
adc
cmpsl
sbb
dec
or
dec
dec
sub
enter
insb
jg
pushf
mov
into
xor
mov
loopne
test
cmpsl
and
cmp
xchg
icebp
jbe
stos
xchg
mov
or
ds
xor
sub
data16
jne
xlat
pop
mov
test
cmp
mov
xchg
arpl
xchg
enter
xor
popa
pop
mov
sahf
add
and
push
data16
mov
addr16
push
nop
in
fisubrs
cli
ja
adc
xchg
pop
add
pop
outsb
mov
imul
cmp
test
cmp
flds
in
stos
push
xor
je
fistpl
xor
mov
mov
cs
shl
or
and
sub
xchg
imul
cmp
out
and
fcomi
cmpsl
cmp
out
loopne
jno
dec
std
icebp
insl
add
or
cmp
sbb
push
push
ja
sbb
add
jne
mov
cs
xchg
mov
sbb
enter
adc
inc
mov
fsts
fildl
xor
and
lock
push
cmpsb
lahf
or
aaa
mov
jp
gs
lock
addb
movsb
xlat
aam
jmp
jp
or
fnstsw
and
cs
inc
xlat
dec
out
movb
pop
mov
adc
push
mov
addl
sti
fs
popf
pop
add
push
outsb
and
into
pop
movsl
sbb
and
cli
std
stc
ret
movsl
xchg
jno
push
sbb
iret
sbb
stos
pop
sub
cmp
xlat
mov
test
je
stos
pop
push
jb
imul
jmp
cmp
add
sub
jo
add
imul
fsubs
jb
xor
mov
dec
aad
imul
pusha
push
scas
sbb
loopne
adc
inc
into
repnz
xor
imul
and
iretw
loopne
push
pop
or
jo
mov
stc
xchg
mov
dec
fiadds
scas
lods
and
pop
xor
jns
mov
in
in
jns
push
fldt
pop
adcb
inc
inc
cmp
rcr
mov
lcall
lcall
cmp
add
xor
fnsave
jae
adc
xchg
mov
cmpl
scas
shr
je
sbb
dec
add
shll
call
or
aas
xlat
loop
pop
lock
cmp
sbb
mov
pop
cmc
icebp
test
pop
xlat
cmp
mov
add
jecxz
mov
pop
or
jbe
test
or
sbb
test
stc
dec
seto
in
jne
sub
mov
mov
nop
pop
sbb
sbb
ss
jmp
aas
push
je
xchg
mov
test
jo
out
push
mov
sub
out
stos
mov
das
mov
sub
neg
xchg
test
mov
dec
pop
hlt
daa
xor
shl
ficompl
sub
push
out
ja
xor
call
inc
imul
addr16
add
and
adc
dec
pop
lret
and
mov
sub
sahf
fistps
xor
fstpt
stc
or
jns
pop
and
fstpt
jno
fisubl
cmp
xlat
call
insb
xchg
sbb
ljmp
and
ret
movb
cmp
cmp
out
lahf
mov
test
mov
pop
mov
xor
shlb
fsts
or
ja
xor
call
loope
arpl
pop
js
mov
adc
cli
cwtl
inc
cwtl
or
or
loope
push
imul
inc
sub
adc
iret
push
js
pop
and
jp
outsl
imul
xchg
pop
pop
dec
addr16
dec
xor
dec
lods
cmp
mov
inc
cmp
hlt
mov
test
cmp
out
xchg
es
scas
push
mov
aam
xor
and
cld
mov
cmp
jne
clc
dec
repz
xor
xchg
push
jp
es
sbb
adcl
xchg
in
sub
pop
push
push
push
cmpb
or
adc
cmp
inc
xchg
mov
sahf
cmpsl
cmp
addl
lcall
rcrl
xchg
dec
push
pusha
movsb
cli
cmp
push
adc
lods
sub
mov
aaa
sbb
pop
lock
addr16
adc
mov
pop
or
jg
cwtl
jae
add
mov
sbb
imul
aas
pop
jne
and
enter
stos
xor
fs
push
enter
stos
mov
adc
jns
sub
pop
scas
jg
mov
fistl
xor
cmp
mov
les
pop
icebp
adc
std
ss
shrb
and
and
push
inc
stos
cli
std
fbld
call
jp
iret
sub
lock
imul
sbb
jb
jle
jp
sbb
push
pop
or
add
mov
add
imul
xchg
ss
mov
aad
xor
add
loop
push
imul
or
sbb
xchg
imulb
lods
testb
fwait
adc
mov
movsb
in
stos
sbb
mov
repz
movsb
sbb
jle
addr16
add
fists
jo
dec
mov
push
push
std
or
or
hlt
outsb
push
gs
jmp
cli
push
testl
sbb
inc
sub
insb
pop
sar
mov
and
pop
lcall
enter
dec
rorl
sarl
sti
enter
pop
es
sahf
jl
cmp
push
das
xor
test
loopne
out
mov
sbb
in
and
mov
shll
push
stc
xor
jmp
adc
sbb
push
addb
inc
lahf
mov
roll
pop
and
cmp
xlat
jno
pop
in
jae
xchg
pushf
jo
sub
outsb
leave
xchg
mov
dec
sub
imul
scas
int
fisttps
or
mov
xor
bound
xchg
test
push
sbb
jbe
fnstenv
mov
sub
test
ljmp
mov
sahf
fsubs
dec
push
and
jae
nop
scas
dec
fistps
inc
push
ja
mov
mov
rorl
xlat
mov
outsl
xchg
cli
jp
sbb
jae
ret
scas
xchg
xchg
rcrl
jecxz
mov
inc
sti
pop
test
js
sub
and
dec
insl
test
xor
pop
or
pop
cmp
aas
dec
and
fstps
fcomi
movb
ss
inc
push
stos
xor
in
jmp
push
inc
pop
out
xchg
or
and
push
pop
xlat
mov
cmp
push
aas
out
inc
insb
jp
mov
adc
repz
pop
ds
cmp
pushf
insl
pop
sub
mov
jl
data16
not
test
xor
mov
ffreep
out
xor
add
divl
sub
cli
and
mov
into
dec
xchg
sbb
lods
mov
xor
lea
sbb
dec
lahf
cli
pop
dec
fldpi
sbb
repz
popf
fimull
sbb
inc
xor
push
das
cwtl
jnp
pop
daa
fstpt
mov
xchg
sahf
js
test
xchg
fldenv
jns
gs
ficoms
loope
xchg
out
in
cmp
sub
mov
lret
hlt
add
mov
xor
add
mov
jbe
mov
cmp
jp
push
pop
jbe
cmc
imul
push
inc
push
lea
xor
fidivs
popf
and
cmp
add
data16
jne
daa
mov
fwait
mov
or
sub
fs
dec
movsl
leave
popa
cmpsl
mov
jmp
sbb
hlt
cmp
das
or
test
out
mov
lods
mov
pop
pop
iret
jge
mov
sub
cli
stc
incl
or
repnz
pop
push
stc
pop
or
xlat
jne
xor
add
cmp
xor
ds
mov
xor
xchg
jp
data16
and
movsl
mov
cmp
mov
lret
and
aaa
xchg
loopne
pop
cmp
stc
xor
push
arpl
fnsave
jno
xchg
rorb
xchg
into
add
pop
dec
pop
stc
imul
rcr
leave
lcall
out
xchg
mov
mov
subb
pusha
fildll
push
test
and
mov
xlat
aas
xchg
popf
jl
sbb
idiv
into
sbb
xchg
mov
movsl
adc
fwait
andl
cmp
push
cmp
mov
ljmp
push
xor
loope
add
scas
lcall
sub
jns
out
stos
outsl
repnz
inc
sub
adc
pusha
jnp
stos
bound
mov
popf
scas
pop
mov
inc
or
xchg
fs
xor
xchg
daa
sbb
xchg
xlat
add
loop
pop
nop
int3
and
push
pslld
cmp
hlt
stos
jge
inc
dec
fcomps
adc
sarb
push
das
and
daa
aam
jp
xchg
add
pop
cmpsl
jno
movsl
cs
jmp
jl
mov
cmpb
dec
and
cs
ja
ret
dec
mov
rcr
inc
pop
scas
pop
push
mov
xchg
or
ss
repz
xchg
adc
popa
pop
test
cld
lahf
ret
ds
jl
inc
sbb
xlat
mov
push
push
jl
mov
cmp
push
imul
jp
insl
push
cs
ret
fstpt
sub
imul
sbb
inc
xor
cmp
pushw
mov
lret
stc
sbb
push
xor
shlb
push
inc
push
fisttps
in
push
pop
cwtl
cmp
mov
xor
ljmp
mov
dec
test
jns
in
push
mov
stc
inc
sbb
jnp
or
xor
imul
pop
adc
jae
sti
aam
inc
mov
cmp
pop
nop
cmp
push
ret
aam
scas
xchg
push
and
pop
mov
push
mov
test
cmp
int3
xchg
das
test
sahf
cmp
daa
push
dec
sub
stc
pop
pushf
cs
jbe
dec
pop
dec
mov
jp
fnstenv
xor
jmp
xchg
or
insl
orb
dec
and
mov
or
fldcw
cs
es
outsb
pop
ds
mov
cmc
icebp
ds
jmp
nop
inc
inc
stos
cwtl
pop
into
aaa
lahf
shll
ret
push
insb
lret
mov
mov
and
inc
and
addr16
push
sub
ss
addr16
testl
dec
pop
outsb
fld1
mov
mov
imul
cmpsl
pushf
sbb
push
iret
lcall
test
hlt
mov
fstpt
pop
mov
sbb
insb
add
repz
dec
nop
push
sub
inc
jae
jns
xchg
sub
jnp
xchg
jmp
mov
ffree
sbb
sub
push
xchg
flds
xor
divb
cmpsb
mov
mov
icebp
jle
ret
call
xchg
pop
popl
inc
mov
movsl
sbb
cwtl
mov
xor
out
xchg
sbb
jns
stc
aam
lods
je
fstpt
xchg
sbb
pushf
xchg
lcallw
scas
movsl
adc
cmpsl
je
pop
fwait
mov
push
mov
cmp
xchg
lret
adc
xlat
clc
mov
in
pop
movsl
sub
xor
add
mov
xchg
add
shll
btrl
jns
lret
outsb
cwtl
outsl
imul
xor
and
call
mov
test
cltd
popa
mov
and
in
push
fdivrs
and
xorb
cmp
out
xchg
cld
xchg
fcmovu
push
outsb
jp
jae
mov
sbb
loop
xorl
mov
sbb
mov
out
fdivrp
jae
pop
xor
loop
jne
ret
pop
cmp
ficoml
and
rorb
or
mov
pop
jl
ret
scas
mov
xchg
test
adc
arpl
loope
das
xor
pop
leave
fimull
xlat
ret
cmc
jge
jnp
enter
jae
rcr
mov
jp
stos
lret
int
push
stos
xor
sub
jb,pn
scas
pop
xor
mov
ds
and
cmpsl
gs
pop
sbbb
sbb
xchg
test
pop
cmp
xlat
mov
mov
fidivrs
fadd
leave
out
sti
je
daa
mov
xlat
movsl
je
adc
dec
xor
dec
fstps
xor
sub
inc
imul
dec
mov
stc
cld
sub
aas
subb
rcl
pop
adc
push
jno
inc
shrb
ficoms
sbb
or
inc
lcall
sbb
out
push
xchg
mov
push
movsl
hlt
push
icebp
sahf
jecxz
dec
xlat
sub
int3
cmpsl
mov
test
cwtl
test
and
mov
mov
repz
aaa
add
fcomip
lahf
loopne
aad
rorl
push
mov
cmpsl
sbb
xlat
ljmp
in
fistpl
mov
clc
cmp
pushf
xor
jno
push
or
mov
mov
mov
lds
das
sub
jne
movsb
aaa
xchg
orl
ficoml
xchg
fidivs
add
cmp
test
jns
cmp
dec
pop
and
inc
out
jne
sub
into
aam
lock
adc
jp
sub
mov
popf
fidivrl
rorb
xchg
adc
xchg
fwait
data16
xor
popf
lret
dec
add
cmp
and
pop
lahf
stc
std
out
lock
xchg
and
cmp
jbe
addr16
mov
xor
jns
loop
push
mov
pop
test
inc
pop
js
lods
mov
jg
fistl
mov
xor
jl
and
mov
enter
insl
sbb
push
imul
jno
nop
outsb
rorl
jmp
jbe
pop
repz
xchg
insb
imul
xlat
xchg
or
mov
sti
loopne
mov
mov
xchg
xchg
sub
fucomi
lods
mov
int3
inc
dec
and
xlat
testl
cli
clc
ss
std
and
cmp
int3
xchg
add
mov
cmc
scas
or
pop
add
push
pop
push
insb
or
movsb
mov
sbb
push
out
addb
not
dec
out
pop
xchg
push
or
add
movsl
jecxz
sub
xor
jno
cmp
cli
jae
xchg
mov
sub
orl
repz
adc
fucomi
xor
and
sbbl
dec
mov
fldt
xchg
lds
into
mov
mov
inc
mov
clc
aas
ds
xor
aam
mov
addb
adc
loope
decl
push
nop
insl
cli
ds
push
dec
sub
mov
pop
push
mov
cmpb
sub
mov
popa
or
sub
pop
and
imul
inc
inc
mov
sub
add
lcall
push
or
mov
jno
inc
mov
out
movsb
rcr
scas
push
pushf
jl,pt
stc
mov
fisubl
imul
inc
fiadds
xlat
and
std
in
jp
sbb
mov
ret
jmp
and
xchg
inc
or
outsb
in
jne
sbb
sarl
cmc
rol
jb
pop
rorl
add
in
fcmovnb
dec
shlb
add
push
push
xlat
repnz
mov
ljmp
mov
repnz
mov
cmp
fdivrl
dec
fidivrl
test
iret
cli
xor
jle
cmp
fincstp
xchg
cmp
or
mov
jbe
sbb
call
jae
fwait
or
and
js
or
mov
hlt
rcrl
or
je
sub
in
cmp
mov
xchg
mov
rolb
ljmp
push
out
scas
sbb
pop
leave
inc
jno
out
mov
jp
sahf
add
pop
mov
and
imul
ret
add
and
pop
pop
jns
test
inc
jp
dec
ljmp
cltd
out
out
pop
pop
dec
clc
aad
in
mov
add
aad
cmp
mov
sub
push
mov
fildll
adcb
out
dec
cwtl
imul
leave
adc
jno
push
test
scas
call
orl
and
cli
xchg
adc
mov
cmc
divl
xchg
test
in
cld
sbb
nop
dec
loopne
cmpsl
mov
jp
nop
inc
xor
aad
rcl
cs
nop
dec
inc
dec
scas
rcrl
fscale
fs
xorb
mov
lcall
mov
fldcw
sbb
adc
pop
mov
push
fwait
mov
fisttps
or
dec
dec
cld
je
ret
insb
sub
sub
dec
xlat
mov
sbb
and
bound
scas
adcb
into
int
iret
pop
dec
fsts
or
ret
dec
mov
adc
js
cmpsl
test
jge
xor
icebp
jnp
mov
out
cwtl
stos
lret
or
dec
cltd
fmuls
cli
cmc
rcr
add
pop
fcmovne
pop
sub
push
mov
pop
push
sbb
scas
call
bound
mov
and
fldcw
ret
and
jg
stc
lret
test
js
push
pop
sbb
fldt
cltd
pop
pop
pop
xlat
mov
dec
filds
push
or
xor
mov
mov
jg
jns
or
cmp
and
ds
xchg
mov
jp
xlat
test
and
jge
cmpsl
and
and
and
cs
add
sub
add
subb
mov
pop
ret
push
jl
loopne
sahf
inc
jns
cmp
pop
mov
pusha
stos
push
and
cmp
out
fxch
inc
les
inc
mov
fcom
test
movsb
cmp
jne
out
and
ficomps
jbe
xor
fcmove
pop
cmp
js
mov
push
pop
jbe
xor
jecxz
pop
imul
adc
shll
mov
icebp
imul
aad
adc
sbb
jns
int3
jb
sbb
data16
sub
pushf
add
daa
imul
jbe
mov
hlt
dec
xlat
outsl
repnz
xor
shrl
outsb
imul
dec
adc
incb
les
add
je
and
sbb
sub
cltd
icebp
int
das
sarl
pop
xchg
fs
mov
jnp
xlat
fsubr
cld
or
mov
hlt
mov
mov
data16
xor
lods
mov
pop
xchg
insl
mov
and
imul
stc
mov
das
mov
cmp
jp
icebp
sarb
xor
and
lds
mov
je
stc
cli
test
fcmovb
inc
hlt
mov
or
adc
faddl
push
xor
adc
hlt
inc
or
into
xor
sbb
dec
iret
xor
inc
xchg
into
imul
mov
mov
out
test
jmp
stc
test
pop
push
pop
push
test
sbb
mov
cs
test
add
add
xor
or
mov
fistl
aaa
dec
xchg
push
popa
lret
xlat
mov
push
and
xor
rorl
cmp
dec
cs
sbb
fnstenv
shll
in
or
out
or
add
cmp
fcmove
inc
lods
lcall
cmp
hlt
sbb
cmp
out
inc
sub
fisttpll
xchg
stc
pop
fnstenv
push
pushf
loop
add
imul
xlat
mov
xchg
loop
jp
add
xchg
ljmp
and
jns
sbb
jmp
adc
in
pop
mov
sub
or
xchg
mov
jnp
clc
fisubrl
cmc
aaa
sub
mov
dec
imul
stos
mov
xlat
lahf
cmp
daa
test
inc
ret
or
or
mov
std
xor
mov
rcrl
out
xchg
push
inc
dec
pushl
cmpb
js
rcr
xor
cmp
cmc
lods
inc
mov
fdivs
iret
push
jmp
jmp
das
imul
fistl
int3
imul
dec
mov
out
aad
call
fcmovne
cmp
scas
push
sbb
pop
into
and
lret
jb
je
jno
test
cwtl
js
rep
or
lret
mov
dec
mov
in
push
dec
stc
ds
test
imul
mov
push
xlat
sbb
scas
iret
test
mov
or
ror
in
lcall
repz
jnp
or
repnz
jmp
xor
add
pop
xorl
add
dec
scas
and
test
lock
outsb
out
dec
xchg
mov
mov
ja
xchg
jp
xor
push
add
xor
mov
inc
add
nop
xchg
test
xlat
mov
icebp
test
dec
and
mov
sub
dec
cmpb
call
loopne
jle
repz
int
mov
jp
cmp
add
push
pop
int3
fdivl
mov
or
out
xchg
aad
es
mov
stos
imul
test
mov
xor
xlat
jno
push
and
adc
mov
mov
and
jle
dec
mov
xlat
inc
pop
das
xchg
xor
adc
sub
int3
mov
sbb
ljmp
dec
mov
dec
add
cmpb
pop
hlt
out
add
push
test
sub
adc
movsl
jp
nop
jmp
jae
inc
pop
repz
xchg
mov
movsb
cli
std
lret
xchg
xor
lcall
push
adc
clc
dec
dec
int3
mov
mov
xor
mov
add
push
fistpl
jbe
cmc
add
dec
outsl
fwait
das
and
xlat
outsl
xchg
jb
jne
xchg
insb
pop
test
scas
jbe
cltd
xchg
les
insb
mov
xchg
fcmovnbe
and
stos
or
push
inc
jp
xchg
test
rcr
sub
sub
into
mov
js
in
scas
ret
xor
xchg
mov
sbbb
pop
and
dec
jbe
mov
adc
or
stos
xlat
jbe
fwait
or
inc
orb
cmp
add
cltd
push
mov
and
test
cmp
popa
filds
call
andl
in
mov
divb
xchg
mov
dec
add
aam
movsl
xor
adc
test
mov
jmp
xor
dec
test
cmp
sub
ljmp
add
xor
xchg
pushf
mov
stc
decl
pop
jae
xlat
scas
push
jmp
fidivl
dec
repnz
movsl
inc
lock
jge
pop
dec
and
cli
lods
xchg
mov
push
mov
sahf
add
fldcw
cmpsb
aam
push
imul
sarb
and
lahf
dec
rcrb
pop
out
fwait
mov
or
imul
loope
rcrb
vpmacssdqh
xlat
idiv
stos
mov
stc
mov
mov
inc
int
cmp
sbb
jle
mov
gs
or
sub
out
pop
test
lret
and
inc
mov
mov
cmp
icebp
fmulp
xor
imul
or
mov
mov
mov
adc
jne
cmpsb
mov
inc
sub
stos
push
shll
fldcw
test
stc
dec
mov
add
dec
out
shl
cmp
fistpl
fcompl
xor
fs
xlat
inc
xor
push
cmp
push
add
inc
pop
sahf
lret
push
shlb
aaa
mov
dec
mov
out
mov
andl
stc
andl
or
sub
out
inc
mov
dec
dec
and
int3
inc
and
mov
pop
lret
movsl
jp
and
sti
mov
shl
add
sbb
arpl
ljmp
sub
xchg
out
pop
fsubrl
lahf
pop
jne
popf
cmp
sub
or
jne
dec
add
js
enter
mov
fistpl
inc
push
pop
in
std
mov
jl
fsts
or
inc
movsl
mov
dec
in
push
jbe
mov
push
icebp
ja
adc
mov
imul
mov
push
jae
orps
imul
xchg
pop
add
clc
mov
out
stos
lahf
jl
mov
insl
into
push
jb
repz
cmp
sub
cld
and
add
add
in
pop
fdivrl
cs
cmpsl
adc
fwait
pop
fscale
jge
sti
outsb
dec
bound
jg
inc
pop
and
sbb
std
sbb
fdivp
popa
les
adc
jbe
cli
or
jae
mov
loopne
adc
mov
fldl
stos
dec
dec
stc
clc
cld
pop
add
sub
xlat
test
inc
fwait
jae
and
xchg
mov
push
xor
insb
das
cmc
fcomps
lods
add
xchg
push
xorb
inc
loopne
fisubrs
pop
inc
dec
mov
mov
jns
push
xchg
lcall
rorb
sub
xlat
pop
mov
pop
cmp
dec
and
mov
in
xor
in
sub
leave
dec
or
lret
xor
sbb
js
fildll
pop
out
mov
adc
fisttpll
ror
xchg
and
int
cmp
xlat
or
xor
xor
push
xchg
fwait
ret
push
and
nop
pop
and
outsb
outsb
mov
jp
pushf
add
push
xor
push
sbb
pop
cltd
out
sub
jge
or
push
mov
adc
das
shlb
lret
mov
xor
push
jnp
fisttpl
pop
ret
or
ja
pushf
and
ds
aaa
loope
or
inc
ffree
daa
cmp
cmp
imul
ja
aaa
std
ret
pop
fucomip
pop
or
sub
daa
jge
fiadds
inc
cmpw
aaa
lcall
xor
iret
xor
dec
test
iret
dec
lcall
jmp
inc
and
repnz
ljmp
aaa
loope
dec
mov
jae
out
lods
sub
jns
insl
adc
xchg
arpl
imul
je
pop
pop
mov
jmp
subl
outsl
cmp
jb
out
movsl
or
mov
mov
lock
sti
cld
lret
cmp
test
sarl
mov
movb
sarb
xlat
clc
sahf
popf
repnz
push
in
pop
aaa
sahf
jae
pop
lret
xor
push
iret
sub
cmpsb
sti
mov
das
int
xchg
fistps
imul
mov
pop
pop
and
rorb
repz
stc
push
xlat
test
adc
clc
dec
mov
je
xchg
popf
out
fwait
jbe
icebp
jp
pop
in
adc
fisttpll
xor
jmp
popa
and
into
add
sub
repz
pop
push
or
push
ja
pushf
adc
jb
repnz
insb
jg
add
sbb
jbe
aad
int
lods
insl
imul
and
fnstenv
xor
addr16
cmpsb
mov
rolb
popf
dec
les
fs
cli
xor
fstpt
std
pushf
jno
pusha
rcl
andl
add
nop
dec
fcmovnb
jmp
and
stos
push
movsl
out
jp
ja
fucomi
aad
xchg
add
in
jb
adc
aaa
loop
or
push
mov
mov
and
scas
scas
push
imul
sahf
js
insb
sbb
enter
cli
push
imul
fidivs
orl
in
adc
add
test
xlat
movsb
sub
mov
sub
mov
fsubs
insb
sti
das
mov
loope
adc
cmp
dec
imul
cld
in
in
and
stc
pop
mov
jle
xlat
push
mov
add
mov
scas
clc
outsb
sbb
out
jno
pop
test
pop
add
mov
mov
and
or
pop
insb
insb
adc
xor
inc
pop
rcrl
push
sub
cmpsl
pop
mov
in
cwtl
mov
mov
movsl
push
cmpsl
add
rclb
test
xchg
pop
and
test
popa
insl
inc
mov
dec
sti
mov
jno
mov
in
insl
inc
cmp
fdivs
jmp
loopne
dec
mov
in
mov
inc
xlat
cmpsb
mov
and
stos
scas
cmp
dec
pop
sub
out
xchg
andl
nop
cli
mov
inc
mov
mov
jae
and
and
pop
mov
popa
sbb
iret
jnp
pop
jge
jb
or
mov
stc
sub
out
lods
imul
scas
iret
stos
or
fimuls
jge
fisubrl
mov
xor
shr
sub
add
push
dec
pop
or
mov
xor
imul
aam
jb
or
and
xor
push
popf
cmp
dec
jmp
js
push
or
rcll
or
push
int
inc
xor
or
fistpl
xchg
lret
adc
divl
ja
mov
outsl
inc
sub
rclb
dec
test
roll
stc
fisubs
fdivr
packssdw
shll
fdivrs
sbb
fiadds
aaa
sub
pop
insl
mov
negb
mov
shlb
orl
mov
xor
jmp
cmp
daa
xchg
iret
or
pop
pop
sbb
push
xlat
xor
jnp
sbb
loopne
mov
xor
call
std
and
jp
sub
jecxz
jp
leave
push
in
jg
mov
cmp
pop
push
adc
cmpsl
add
mov
test
movaps
dec
addr16
movsb
mov
or
mov
insb
pop
xchg
mov
int3
dec
jo
and
pop
cli
mov
or
dec
scas
fdivl
mov
push
jb
stos
movsl
mov
sbb
lods
lea
dec
add
cmp
mov
jmp
xor
mov
pusha
or
cli
aad
inc
or
cltd
jo
insl
cmp
nop
add
bound
ljmp
pushf
mov
jmp
loope
imul
ret
fs
imul
into
jl
ret
stc
add
and
out
cmpb
inc
inc
stc
in
fnstcw
enter
dec
xor
imul
test
mov
nop
xchg
mov
shrb
mov
xor
jae
pushf
dec
jo
mov
cmp
push
stc
add
movb
jbe,pn
pop
sub
xor
xchg
pop
imul
xchg
imul
pop
xchg
pop
in
inc
adc
or
mov
add
fstps
and
sub
push
popa
add
inc
sbb
clc
pop
xchg
gs
push
shll
mov
ficompl
cli
pushf
pop
push
enter
lea
fs
xor
xor
jae
sbb
add
addr16
push
scas
sub
adcb
sub
out
cmp
xchg
sub
imul
pop
lahf
ret
gs
ja
mull
and
sbb
inc
rorb
sbb
stos
lcall
xor
out
or
sub
ja
mov
dec
mov
arpl
xchg
mov
mov
popa
fwait
xchg
mov
orl
sub
outsb
outsl
mov
lods
out
pop
pop
in
sub
fcmovu
ds
or
mov
aaa
leave
xlat
add
in
in
ljmp
mov
clc
jae
roll
push
xor
mov
stos
or
arpl
mov
cmp
out
in
pop
and
or
cmpsl
stos
push
sub
inc
gs
push
fwait
lahf
lcall
xor
stc
cmp
mov
lret
mov
jne
xlat
imul
scas
mov
and
jp
jns
orb
dec
es
pop
addr16
in
push
mov
jbe
stos
adc
pop
aam
mov
mov
je
jae
cmp
xor
lods
push
dec
push
push
ret
popf
orl
imul
iret
enter
inc
dec
mov
pop
lcall
mov
es
sbb
out
cmp
mov
cmp
pop
rorl
xchg
jns
mov
adc
cli
mov
dec
or
cmp
mov
sub
mov
cmp
cld
div
pop
cli
and
xchg
lahf
mov
divb
add
mov
sub
shl
xchg
push
xor
shll
fdivl
jp
fbld
jbe
mov
cmp
fxch
fcmovnb
ss
pop
adc
mov
xchg
push
inc
aas
sub
lahf
cmp
mov
daa
in
or
andb
fdivrs
add
dec
idivl
jg
js
sub
sbb
andb
mov
pop
cvttps2pi
iret
push
xor
aaa
jl
out
shll
cmp
test
mov
aaa
daa
popa
sbb
ss
lcall
aaa
cmp
mov
pushf
lret
or
fcomi
in
jmp
sbb
fcos
sub
mov
xor
aas
xchg
cli
adc
mov
xor
mov
and
adc
or
call
mov
orb
xchg
pop
fnstenv
push
ret
std
fisttpl
push
popa
int3
push
dec
dec
adc
and
dec
pusha
dec
or
pop
sbb
and
push
add
jb
xlat
push
aas
mov
or
cld
push
mov
jmp
jl
addb
int3
fnstenv
push
and
pop
xlat
lock
jae
sub
ja
les
push
insb
pop
fdivrl
test
dec
lods
pop
js
jge
mov
call
lret
dec
push
add
mov
aas
imul
xchg
mov
xor
adc
inc
stos
imul
repnz
sub
mov
jg
add
pushf
das
call
add
in
test
add
scas
test
les
subb
adc
jge
sbb
inc
cmp
test
stc
nop
mov
ja
ja
sbb
test
mov
xchg
push
stos
dec
cmp
dec
pop
test
push
or
mov
sahf
cmp
inc
clc
sbbl
inc
mov
lods
pushl
test
test
mov
push
xor
push
jg
fwait
xor
mov
sbb
orl
push
cli
stc
fildl
inc
in
dec
movsb
rdmsr
pop
sbb
add
enter
push
scas
jnp
ret
dec
adc
fildl
stc
cld
mov
cltd
lods
out
push
subl
in
pop
or
mov
sarl
jnp
mov
sbb
mov
cli
push
mov
aad
mov
push
xchg
add
sub
pop
mov
out
shl
dec
cmp
xchg
pop
cmc
jge
fwait
push
cmp
xor
pushf
push
push
cmp
faddl
cli
data16
dec
mov
dec
adc
pop
pusha
dec
jno
iret
jecxz
add
dec
mov
arpl
jmp
add
xchg
aas
cmp
fldcw
out
mov
repnz
add
mov
xor
in
je
adc
and
popa
xor
xchg
daa
xor
pop
hlt
push
sbb
mov
jle
mov
jae
jl
or
push
pop
movsl
ss
jmp
cmpsb
add
adc
jb
cmp
stos
lods
sbb
jp
adc
fisttpll
insb
pop
push
leave
or
xor
pop
stos
jno
test
mov
movsb
cmp
push
cmp
and
stc
jg
pop
dec
mov
mov
jp
dec
repz
push
jp
xlat
aaa
mov
ds
jg
add
inc
in
sbbl
push
jp
test
xor
sbb
mov
cmp
pushf
dec
into
fwait
ljmp
xlat
mov
jno
fsubs
dec
xorb
xchg
push
push
adc
mov
adc
cs
pop
inc
xlat
add
lcall
sbb
jo
outsl
loope
push
sbb
sbb
lret
fisubrs
push
xchg
clc
lahf
or
push
jns
mov
std
or
xchg
mov
sbb
jae
rcr
inc
mov
and
lods
xchg
leave
xor
cmp
ret
out
in
cli
xchg
sub
movsl
rcll
fwait
mov
cmp
leave
sub
fistl
sti
imul
push
mov
sbb
fcmovnu
xchg
ljmp
mov
mov
push
inc
mov
sbb
sub
ljmp
xchg
jge
in
add
sbb
mov
jns
test
mov
subl
rcrb
mov
cmp
cmp
mov
outsl
bound
cltd
subb
filds
movsb
repz
ja
jp
rorb
and
inc
in
xlat
mov
inc
enter
das
push
lret
cmp
xchg
adc
dec
lahf
pop
xchg
ljmp
mov
or
xor
or
jb
daa
loope
mov
mov
mov
cli
lods
and
mov
mov
lcall
jmp
sub
dec
mov
jns
xor
pusha
push
movsb
repnz
ret
jnp
sbb
or
jmp
cs
push
loope
mov
ficomps
dec
xor
dec
fiadds
inc
loope
push
fdivl
mov
sbb
xlat
jne
push
sub
xchg
rorl
orl
push
adc
mov
ret
jmp
inc
call
test
les
xor
nop
in
xchg
mov
shrl
and
mov
shlb
iret
icebp
ret
cmp
dec
sbb
pop
iret
inc
jne
lcall
jno
ret
jnp
flds
mov
cmp
popf
fwait
imul
adc
add
sub
incl
xor
popa
shrl
aad
sbb
or
jmp
mull
xlat
mov
sub
add
ja
aaa
cmp
je
mov
cmp
repz
repz
mov
test
hlt
fidivs
mov
repnz
insl
inc
loopne
xchg
push
rcr
movw
inc
lret
pop
adc
dec
test
xor
xor
dec
sti
mov
mov
mov
mov
push
inc
and
xor
aam
cmp
jecxz
sub
inc
std
int
mov
cmp
les
jb
sbb
js
push
int3
or
popf
enter
add
lods
movsl
mov
je
in
jbe
and
pop
sub
mov
adc
int3
outsb
xlat
cwtl
pop
test
sbb
xchg
mov
jno
push
pop
inc
out
mov
jmp
mov
xor
into
dec
xchg
test
xlat
jbe
sbb
int
in
add
bound
mov
and
repz
jae
add
or
das
ljmp
pop
repnz
test
pop
cmp
repz
aam
and
int
cwtl
mov
add
or
scas
sub
adc
lcall
sub
fildl
cmp
pop
test
push
cmpsb
pop
push
push
add
cmpsl
or
test
mov
es
repnz
and
xor
popa
xor
mov
mov
lods
ret
pop
xchg
xor
push
xchg
into
movsl
dec
add
jno
sub
hlt
jns
jb
pushf
push
fistl
jp
jae
mov
xchg
push
mov
aaa
or
cwtl
xorb
out
mov
sub
sub
dec
sub
push
mov
and
data16
jae
mov
push
mov
ss
fadd
data16
cli
jnp
repz
adc
subl
mov
cld
fmul
cmp
aam
cmpsl
xorb
cmpl
iret
outsl
pop
or
xchg
fistl
cltd
ret
cmp
jae
pop
aad
xor
push
xchg
shlb
jno
fs
cmpl
arpl
pop
cmp
and
cltd
sahf
cmpb
dec
js
jns
push
lods
cli
mov
inc
xor
dec
or
arpl
int
dec
lods
sbb
mov
pop
pop
xor
xchg
mov
aas
ret
jmp
dec
stos
push
dec
mov
lret
sbb
sub
ja
lahf
xor
out
mov
mov
add
xor
mov
dec
pushf
push
icebp
dec
and
xor
rclb
or
cmpsb
push
add
arpl
cli
test
dec
cmp
pushf
test
dec
jno
loop
call
imul
arpl
mov
xchg
fidivrl
clc
or
pop
mov
test
or
pop
and
push
adc
inc
ss
mov
pushf
push
push
jmp
xlat
fistpl
scas
xchg
or
mov
push
ja
jb
les
test
adc
mov
inc
nop
and
mov
rorb
mov
jp
pop
fidivrs
lods
lahf
pop
out
sub
dec
lahf
jmp
iret
mov
jnp
or
adc
sub
sbb
mov
or
lret
nop
xor
sbb
xlat
in
cwtl
or
dec
cld
jns
dec
xor
and
xchg
xchg
push
dec
sbb
jb
xlat
scas
xchg
mov
hlt
xor
mov
dec
iret
adc
das
push
pop
stos
test
jns
or
loopne
das
push
cs
inc
test
fwait
xchg
loopne
fmul
fsub
jge
pop
pop
repz
pop
js,pn
dec
sbb
lock
dec
xor
xchg
mov
mov
inc
aad
xor
addl
out
inc
js
shlb
loopne
sbb
repnz
hlt
fs
adc
mov
xchg
jl
outsb
mov
jmp
jmp
push
mov
fldenv
div
jge
and
or
or
pushf
test
fildl
adc
push
xlat
inc
cmp
ficompl
cmp
inc
hlt
vmovapd
and
cmp
and
add
adc
jno
stos
mov
inc
push
lret
push
mov
cs
aam
imul
sbb
push
pop
popf
das
enter
inc
jo
sub
adc
imul
sbb
mov
sub
add
add
xchg
cmp
fdivs
loope
xchg
or
mov
mov
or
xchg
aad
xlat
fnstenv
stc
xor
fs
push
sbb
jae
and
pop
cmpsl
sub
pop
lock
xchg
fcmovu
flds
jp
int
mov
xchg
add
inc
outsl
push
mov
std
xorl
dec
movb
imul
mov
sub
xchg
aaa
jno
dec
ja
push
stos
push
push
add
push
or
sub
dec
jg
add
jp
xor
decl
sbb
cmp
int
add
sbbb
xor
sar
push
mov
ret
mov
shlb
lock
out
inc
jmp
es
in
addr16
and
xlat
pusha
cwtl
stc
ror
xor
and
jae
cwtl
aad
js
xchg
into
mov
ret
fstps
inc
enter
mov
andb
jl
aam
sbb
pop
cwtl
sti
lret
push
stc
dec
push
rcrl
rcrl
test
dec
mov
mov
movsb
cmp
push
cmc
pop
and
test
stos
mov
cmc
dec
es
stos
jge
add
adc
fs
arpl
cmp
jns
arpl
mov
inc
mov
jl
fisttpl
add
add
dec
mov
lahf
sub
fstps
in
mov
sub
leave
mov
addr16
ja
or
call
dec
idiv
into
mov
cmp
sbb
std
pop
jb
sub
xor
cs
xchg
and
jo
ret
out
jae
jbe
mov
cmpb
incl
ljmp
xchg
mov
repz
mov
ret
mov
addr16
push
jecxz
popa
in
dec
mov
and
mov
xchg
fmull
push
call
imul
mov
or
aas
sbb
call
mov
aaa
addr16
cmp
arpl
jns
jl
mov
dec
inc
addb
jns
or
faddp
es
lea
lock
inc
inc
or
jl
das
cld
scas
sbb
push
clc
jmp
cmpsb
add
js
rcl
aad
sub
testb
xor
cwtl
ret
fcmovu
cmpsl
jp
test
cwtl
pop
pop
inc
mov
add
insb
cwtl
loope
sub
cmpsl
movl
in
daa
addr16
pop
adc
and
sub
xchg
mov
jno
and
fmuls
xchg
mov
fldt
cmc
xor
fnstcw
inc
push
xchg
das
dec
sarl
or
add
insb
pop
cmp
sub
call
pop
leave
mov
imul
mov
xchg
dec
fisubrs
stc
inc
test
dec
xchg
pusha
fcoms
dec
jbe
sub
and
cwtl
jp
std
mov
mov
add
dec
test
or
mov
stos
fadd
and
outsl
and
pop
mov
mov
dec
mov
push
imul
decl
push
nop
mov
aas
inc
int3
stc
cli
test
mov
push
stos
sbb
jne
adc
daa
xor
aad
add
pop
mov
pushf
ss
aam
jo
adc
ror
xor
xlat
mov
or
cmp
fiadds
addr16
cmp
mov
fsts
loope
shrl
and
ds
int3
pusha
cmpsb
lret
iret
outsb
sbb
and
and
xchg
and
mov
mov
adc
nop
test
pop
mov
ja
and
nop
fidivs
jne
xorb
pop
and
test
dec
js
cs
insl
lahf
shr
mov
mov
sub
sbb
pop
scas
or
jecxz
dec
aam
mov
leave
push
dec
push
lock
add
cmp
xchg
and
out
cli
stc
sbb
shl
adc
add
mov
or
push
fimull
adcl
stc
dec
jae
fcmovne
fst
cmp
xor
aaa
sub
mov
dec
xlat
aas
je
fsts
scas
pop
push
ja
imul
lahf
sub
cli
cmp
insl
out
incl
fcmovnb
xor
enter
and
push
mov
cmpb
loop
insl
popa
jno
lret
pop
xchg
pop
cmp
push
stos
sbb
cltd
jb
xor
xor
addr16
cmp
xor
bound
adc
hlt
jbe
aaa
lcall
and
cmp
or
mov
sbb
push
pushf
jae
inc
shlb
xlat
inc
je
or
sbb
lret
or
movsb
das
jge
dec
sub
or
jp
fstps
test
and
inc
pop
cs
sbb
pop
inc
fsts
xchg
jge
in
enter
mov
icebp
cld
dec
xchg
ret
push
enter
cmp
and
push
mov
fistps
dec
xchg
pop
bound
sub
mov
ds
or
mov
xchg
ret
shrb
lret
sbb
mov
imul
cs
jmp
stos
popf
xor
dec
je
inc
dec
jb
mov
mov
and
dec
jge
call
call
or
aam
cs
sub
cmp
push
mov
cmc
xlat
cmpsl
add
cli
or
push
jg
xlat
arpl
sbb
pop
aas
pop
stc
sub
jne
into
fcmovbe
push
sti
adc
adc
xlat
dec
scas
mov
lret
jb
jno
lods
imul
inc
fistpll
std
xor
and
mov
xchg
dec
pop
jb
outsl
shrl
mov
mov
cmp
das
push
rcr
stc
das
daa
movsl
hlt
mov
pop
fs
cwtl
out
enter
add
inc
cmp
dec
xor
push
sub
mov
mov
into
mov
or
rol
push
test
js
and
cs
xchg
ret
push
pusha
fdivrs
dec
push
push
call
jmp
dec
aas
mov
adc
sub
pop
or
xor
dec
xchg
xor
mov
xor
mov
mov
outsl
xlat
mov
clc
adc
mov
ret
lret
cmp
push
push
shll
fcmovnu
and
mov
pop
pop
xor
mov
das
jl
adc
dec
jb
xchg
rcrl
push
sbb
xor
cmpb
mov
xor
ja,pt
cwtl
xchg
xchg
sbb
jne
and
sbb
test
mov
dec
incb
mov
icebp
stc
dec
dec
xchg
xor
mov
push
test
pop
or
enter
inc
ficoms
or
pop
push
lods
imul
fistl
add
scas
and
xor
popa
and
shrb
xlat
xchg
sbb
inc
mov
insl
cli
adc
inc
jbe
cmp
xchg
sub
daa
xchg
or
and
inc
jbe
lret
dec
sahf
xlat
hlt
or
aad
dec
xchg
xchg
bound
push
push
andl
xor
xlat
popf
js
aam
test
jae
pop
mov
jmp
push
orl
in
push
je
aam
and
imul
mov
sbb
sub
cmp
vcvtpd2dqx
mov
or
inc
jp
push
icebp
jno
xlat
imul
mov
std
out
jns
cmp
mov
sub
jnp
push
pop
mov
mov
into
and
cmp
out
pop
fwait
pushf
std
sub
sub
xchg
ds
xorl
in
jns
add
mov
das
mov
sarl
or
out
or
jae
push
push
movsb
in
mov
push
adc
xlat
sub
lds
pop
outsl
cld
addr16
loope
cmpsl
sub
jo
fstpt
aas
fwait
xorb
loope
fisubrl
pop
adc
inc
stc
repz
lahf
cmp
lret
cmp
adcb
pop
nop
adc
xor
pushf
movsl
cld
pop
neg
dec
dec
inc
lock
pop
push
jns
lods
push
inc
fstpt
jmp
mov
pop
or
xor
sarl
sub
mov
add
pop
adc
scas
aam
xchg
xlat
pop
jmp
jl
lret
cmp
fs
out
in
jae
xlat
test
sub
out
in
push
fsts
shrb
lcall
mov
push
xchg
xchg
mov
xchg
or
dec
mov
adc
or
xchg
int3
fwait
or
mov
cmp
les
call
mov
movsb
adcl
xchg
cmp
fstpl
stc
icebp
jp
pop
xchg
out
mov
jb
xchg
and
jp
cmp
sbb
andb
rcrl
cwtl
push
fisubrs
std
dec
arpl
stc
and
addr16
out
outsl
lret
pop
gs
sti
pusha
xor
or
dec
jae
fldcw
jmp
mov
sub
out
adc
jmp
xlat
das
mov
out
inc
mov
test
dec
in
adc
or
fisubrl
pop
xchg
fnstenv
call
pop
inc
les
iret
idivb
pmullw
jb
lahf
out
imul
pop
aas
addl
push
push
inc
cmp
jns
test
push
enter
xlat
and
pop
or
jae
faddl
pop
or
dec
dec
sbb
stc
sbbb
out
mov
stos
adcl
xchg
out
das
sbb
xor
mov
popf
out
xlat
cs
inc
push
lock
pop
jae
inc
inc
fs
sub
divl
add
jb
scas
mov
jle
int
stos
pop
stc
cli
add
add
addr16
cs
add
dec
mov
imul
pop
and
inc
js
ret
mov
bound
and
jne
jle
stos
jp
stc
sti
lret
shll
addl
jae
sbb
mov
adc
lret
add
xchg
push
mov
cld
pop
imul
outsb
jmp
mov
shll
clc
add
aad
cmp
pop
add
insl
push
nop
ror
jno
jne
pop
movsl
push
outsb
pop
stos
in
xor
pop
and
out
sub
icebp
jmp
dec
in
mov
out
mov
adcl
mov
fists
nop
and
iret
icebp
or
jb
in
sbb
jne
fstpt
push
and
jmp
and
fnstenv
inc
cmp
push
fdivs
stos
mov
or
lahf
jno
pop
or
call
sub
aaa
mov
dec
xchg
cmp
jae
fldcw
dec
adc
dec
rcll
push
adc
jns
xorb
in
dec
out
lret
subb
mov
fdivl
insl
xor
fstps
dec
std
fistl
push
adc
dec
sub
pop
xor
xchg
pop
in
inc
xor
roll
mov
fwait
xor
xchg
jp
xor
xchg
outsl
adc
ret
jb
ss
shlb
sbb
jns
sub
cmpsl
inc
das
mov
jp
and
jg
add
imul
add
or
aas
jnp
xchg
add
out
icebp
dec
add
pop
out
push
dec
add
pushf
loopne
mov
xchg
jns
xchg
sub
xor
fsubl
loopne
adc
rorb
and
or
jae
xlat
pop
add
pop
fwait
sub
xlat
mov
test
lds
adc
xchg
subl
dec
es
movsb
mov
and
jbe
cmpsb
in
lds
out
fistpl
jmp
scas
cmp
sub
das
dec
movsb
ds
inc
mov
scas
pushf
es
dec
aad
mov
sbb
mov
in
mov
dec
in
jmp
or
push
pop
ja
xchg
cmp
out
shrl
repz
stos
mov
out
in
sub
popl
jno
and
and
lret
add
cli
xchg
shrl
fs
pusha
scas
mov
sub
js
mov
sbb
xor
das
cs
add
dec
fsubs
sbb
mov
and
and
adc
cmp
pop
cmpsl
dec
arpl
insb
repnz
nop
mov
jnp
or
add
xlat
test
sub
scas
or
or
rcrb
pop
cmpsb
pop
ret
dec
sub
mov
and
imul
je
mov
cmp
pop
push
addr16
dec
enter
sbb
leave
dec
lahf
push
add
mov
scas
call
push
js
and
xchg
xchg
mov
gs
jp
cmp
cmpsl
scas
dec
xchg
imul
imul
stos
add
hlt
sub
lods
xlat
add
out
xor
test
jb
cmp
scas
jbe
fldt
and
std
jp
flds
insl
enter
sbb
xchg
add
xchg
adcb
and
rorl
js
cmp
flds
das
pop
cld
mul
shrb
or
mov
out
cmp
mov
aaa
cmp
sahf
add
add
pop
mov
mov
jmp
aam
pop
fcmovnb
mov
add
mov
pop
sub
xor
jg
xchg
or
add
into
bound
mov
push
sbb
sub
test
mov
jmp
stos
mov
push
aam
enter
sbb
stos
dec
xchg
push
ds
jmp
cs
imul
stc
push
pop
and
leave
rcll
add
xchg
and
mov
mov
jle
pop
sub
pop
cmp
cmp
scas
negl
xlat
sbb
xchg
mov
outsl
mov
fs
clc
cmp
sbb
xchg
xor
sub
mov
cmp
pop
in
xchg
inc
add
add
mov
loopne
fscale
inc
sbb
add
scas
gs
sub
inc
rorl
dec
aad
insb
std
and
xor
ja
mov
popf
dec
int3
inc
popl
jmp
cmp
out
xor
dec
loop
dec
arpl
push
sbb
pop
gs
cmp
pushf
mov
jge
mov
mov
int
sbb
xor
pop
mov
xor
aas
mov
add
dec
cs
test
rcrl
gs
mov
fldenv
mov
shll
test
outsl
cmp
mov
int
dec
pop
mov
roll
pop
sarl
mov
neg
mov
out
enter
sub
fiadds
lahf
mov
imul
sub
cmc
cmc
inc
dec
leave
cli
mov
dec
stos
test
sbb
ljmp
popa
xchg
mov
add
and
lcall
rorl
bound
or
int
push
movsb
xor
cmp
testl
and
mov
mov
fidivl
rolb
les
push
or
cwtl
mov
push
mov
push
ret
repz
stos
or
imul
test
dec
pop
adc
stc
jmp
xlat
pop
fiadds
mov
cli
mov
sarb
std
jmp
lret
orb
les
js
cli
fistpll
shlb
and
in
xor
fcomi
lahf
insb
icebp
lahf
mov
and
dec
ljmp
in
xor
xor
mov
into
fsubl
or
mov
mov
push
and
out
and
pushf
mov
sub
mov
and
lods
jno
sub
or
xchg
fcompl
push
fs
jge
imul
popf
iret
mov
cmpsl
sbb
ret
movsl
mov
sbb
xlat
dec
pop
mov
out
jmp
sub
cmp
je
xor
xchg
stos
stc
sub
xlat
mov
or
xchg
ret
mov
lret
mov
jmp
pop
fiadds
ror
das
jns
pop
fsts
push
in
stos
dec
push
add
pop
or
movsb
sbb
cli
mov
cmc
lret
jno
and
bndstx
and
xchg
std
inc
jbe
jns
inc
dec
rorb
nop
das
stos
data16
adc
push
ret
lret
ss
ret
add
sbb
imul
sub
into
stc
test
cwtl
jg
and
jecxz
andl
xlat
or
js
inc
ja
mov
out
into
mov
xchg
adc
ja
cwtl
nop
adc
jno
cmp
in
stc
std
ljmp
mov
std
adc
in
push
sbb
repz
or
xor
add
adc
adc
jg
fldcw
lcall
or
sub
push
fistpll
push
add
xlat
cmpsl
lods
mov
mov
xchg
hlt
fdivs
cmp
mov
mov
jp
xor
adc
imul
pop
or
scas
cli
sub
mov
dec
repz
movsl
jnp
cwtl
aaa
fs
hlt
xchg
ret
fisttpll
pop
sub
pop
sbb
mov
jae
inc
mov
jge
lods
and
xlat
xchg
jbe
sub
out
mov
push
fldenv
outsl
test
mov
cmp
jg
stc
mov
sub
sbb
cwtl
mov
dec
mov
jmp
clc
push
cmp
or
fmuls
mov
negl
sbb
je
sub
lret
or
xlat
cli
cpuid
rorl
mov
push
pop
adc
xlat
mov
pop
sbbl
lock
cmp
out
fadds
imul
add
jno
dec
cwtl
insl
push
mov
pop
pop
movsl
rorb
and
or
sbb
in
or
jb
dec
jne
aad
adc
popf
xchg
leave
mov
stos
insb
push
into
mov
xor
aaa
xchg
popw
jns
dec
cmp
clc
xchg
push
add
adc
pop
insb
cwtl
mov
adc
rcrb
test
push
fisttpl
push
push
or
xlat
imul
mov
dec
mov
repnz
rol
mov
repnz
test
jmp
inc
hlt
cld
xchg
and
nop
hlt
lcall
into
lea
jbe
xchg
stc
push
xlat
sahf
mov
dec
mov
sbb
sbb
xlat
out
rcrl
sbb
nop
daa
push
jne
shl
imul
les
sbb
push
xlat
jl
fwait
cmpsl
xchg
jns
test
cmpsb
or
sbb
fcmovne
add
mov
push
lret
adc
cltd
ljmp
push
popa
andl
jge
fstpt
mov
fcoms
pop
arpl
jns
dec
inc
pushf
mov
sub
and
inc
sub
pop
fstpt
pop
cmp
add
repnz
pop
out
int3
fs
nop
xor
mov
shlb
lods
sub
push
sub
pop
add
jno
pop
in
mov
adc
stos
cmpsl
xor
sub
cmc
imul
in
dec
ret
mov
mul
sub
fnsave
ficomps
jae
fistpl
cltd
lea
sbb
mov
bound
pop
mov
push
jge
sbb
push
fldt
aaa
dec
cs
lcall
and
add
stos
data16
cld
js
xchg
sbb
xor
sbb
cmp
out
adc
cmp
jnp
sub
in
xor
js
add
test
outsl
cs
pop
and
out
dec
pop
sbb
push
push
or
and
jne
imul
add
loopne
sahf
push
imul
cs
xor
shrl
xchg
pop
int
addr16
aas
and
aaa
in
mov
mov
es
leave
mov
cmp
pop
roll
stc
ret
or
lahf
adc
scas
out
mov
popa
call
jne
cmp
flds
inc
add
pop
dec
cmp
and
jnp
or
pop
mov
mov
insb
mov
outsb
mov
jge
dec
fucomi
faddl
aaa
cltd
pushf
fisttpl
add
xchg
insl
mov
pop
ret
inc
or
pop
sub
cmp
mov
mov
cmp
push
int
mov
inc
mov
pop
test
push
in
loop
pop
std
sbb
lret
fisubrs
lods
mov
sbb
ficompl
add
inc
pop
fildl
and
lcall
cmp
jp
fstps
mov
js
pop
push
sbb
sub
add
jns
xchg
dec
lcall
imul
test
mov
and
add
out
scas
in
out
pop
sarb
jl
lcall
data16
not
lahf
xchg
call
push
add
fidivl
xor
jae
adc
pop
ds
inc
fdivr
lcall
add
fldcw
jo
mov
mov
pop
inc
movsl
cli
cld
fwait
xor
fpatan
popf
clc
addr16
rolb
inc
add
mov
and
cld
pop
lret
das
std
xchg
fwait
sti
jbe
jae
inc
fistl
xchg
daa
push
cmp
or
jg
dec
frstpm(287
roll
or
xor
jmp
xlat
arpl
sbb
push
jle
cmp
dec
daa
jbe
ljmp
push
push
or
pop
les
sbb
or
push
dec
push
mov
cmpsl
inc
mov
xchg
data16
fisubrl
cmpsb
iret
icebp
fsubl
jle
and
or
in
push
sub
imul
in
xor
pop
jne
or
and
add
push
or
lods
int3
push
sbb
dec
into
btr
xor
push
mov
and
push
jecxz
push
jne
xlat
push
dec
mov
imul
mov
cli
jne
pop
shll
or
push
test
out
jb
std
aad
mov
orb
cld
int3
pop
fdivrs
andl
imul
add
ja
in
in
les
adc
jno
rclb
xlat
ss
mov
aam
scas
ret
sub
jp
mov
sbb
or
dec
sbb
jae
pushf
pop
mov
fmull
sbb
add
xchg
xlat
and
push
prefetchnta
stc
scas
xcrypt-cbc
cmpsl
push
dec
xchg
pop
es
jmp
push
ret
and
js
pop
inc
lea
js
dec
scas
jmp
xor
es
adc
jb
mov
adc
and
sub
sbb
pop
dec
insb
cs
jae
add
jge
lock
mov
fistps
sub
inc
ret
xor
in
xor
std
subl
xor
push
mov
mov
movsl
cmp
xchg
xor
loop
sub
or
or
cmp
mov
xor
pop
xchg
subl
jae
adc
add
lahf
iret
nop
je
pop
mov
data16
pop
or
pop
sti
js
xchg
and
mov
out
mov
fistl
dec
icebp
mov
and
add
loope
ret
sahf
pop
lret
jb
or
addr16
add
dec
in
icebp
mov
mov
push
cmc
cmp
stc
leave
pop
pushf
xchg
dec
and
insl
cmp
fcmovnb
push
mov
das
jb
jmp
push
insl
lret
pop
cmc
mov
sbb
inc
ljmp
loope
rol
imul
and
add
pop
mov
rcrb
and
mov
sahf
cmp
inc
mov
test
stos
sub
mov
and
xlat
jae
sub
xor
pop
mov
fidivl
fcmovnu
aad
jl
arpl
xor
xchg
dec
inc
ja
mov
sarb
pushf
mov
mov
mov
jns
fisubrl
ja
addl
scas
std
jmp
cmp
scas
sbb
jl
or
mov
fcom
add
aam
hlt
in
jno
insl
in
jbe
push
sbb
out
cmpsl
xchg
sbb
imul
cmpsl
int
xor
xchg
sarb
mov
shll
rclb
xchg
mov
dec
jnp
flds
icebp
mov
push
outsb
mov
push
pop
xchg
pop
xchg
xor
sub
mov
sub
into
imul
cmp
mov
inc
add
data16
inc
arpl
sahf
inc
mov
sub
jns
adc
push
cld
or
cmp
pushf
or
mov
dec
insb
ljmp
gs
cmp
xor
cmpsl
push
cmp
adc
jmp
xor
xor
pop
lds
mov
sub
dec
cmp
imul
ret
push
fwait
cmp
fs
add
pusha
and
cmp
mov
dec
adc
aad
and
fisttps
repz
lret
dec
jnp
jge
xchg
or
cwtl
iret
add
sub
cmp
cld
dec
add
sbb
mov
test
dec
push
jmp
popl
lret
pop
mov
movsl
dec
sub
sbbl
aaa
mov
js
adcb
pop
sarb
orb
or
fwait
add
cmp
xchg
xor
inc
jp
push
xor
pop
ljmp
pop
or
xlat
mov
push
pop
pop
scas
dec
add
fildl
or
sar
test
pop
jo
mov
daa
add
adc
shlb
sub
dec
mov
mov
sub
iret
sub
jae
cmpsb
dec
icebp
movsl
scas
fldenv
jmp
ret
ljmp
movsl
jne
fldt
jns
fstps
sub
sub
aad
dec
fisubrs
mov
cmp
test
test
test
mov
jno,pt
adc
dec
sub
jne
mov
adc
stos
lcall
das
je
sub
mov
mov
cli
ret
add
cmp
and
scas
mov
dec
out
cmp
pcmpeqw
or
loopne
xchg
negl
adc
jae
sbb
jl
cmp
bound
imul
xchg
fsubr
daa
mov
test
xor
test
xor
xlat
inc
push
push
addb
in
das
xlat
stos
sub
push
movsb
or
push
push
inc
xor
inc
ret
mov
scas
flds
mov
mov
stos
bound
mov
mov
inc
int
mov
mov
xlat
add
lock
xchg
cmp
ja
fstps
inc
popf
in
sub
stos
out
sub
jmp
in
sub
dec
jl
dec
jno
jp
popf
jmp
pop
jmp
cmc
sub
push
mov
cmp
cmp
dec
repnz
fwait
or
sbb
xor
add
dec
pop
jle
add
test
xor
aam
addr16
sarb
push
and
lea
mov
inc
out
es
xchg
push
aad
dec
pop
push
cmp
pop
xor
cmp
movsb
cmp
jecxz
shrw
mov
mov
mov
stos
out
and
mov
mov
sub
sub
jb
cmp
mov
mov
xlat
dec
dec
xorl
mov
adc
mov
lahf
das
mov
stos
fcomi
les
mov
fs
bnd
adc
push
xlat
icebp
mov
rcrl
rclb
in
jp
jecxz
sti
out
shlb
xchg
ret
dec
pop
pop
jg
shlb
out
push
addl
pop
js
mov
lea
xchg
daa
mov
out
jp
jae
gs
xor
stc
cs
ret
xor
mov
aaa
xchg
leave
call
jbe
sti
push
or
jbe
sarl
stc
mov
mov
add
lahf
dec
sub
pop
jns
and
dec
xchg
flds
and
imul
lock
xor
dec
out
jle
dec
data16
negb
cmpsb
mov
adc
sub
outsl
std
push
add
pop
adc
xbegin
fstpt
or
gs
subl
xchg
sub
dec
and
sbb
out
adc
rcll
xlat
ficompl
sets
push
inc
mov
xor
fsubl
xor
add
and
enter
decb
cmp
inc
mov
lcall
push
out
pop
push
push
mov
std
add
cmp
dec
push
jp
add
bound
ja
cmc
mov
mov
push
ds
jge
icebp
or
arpl
mov
pop
in
dec
aas
es
mov
loop
scas
shrb
cwtl
add
jno
rcr
or
sub
xor
cli
jge
jecxz
sub
or
lret
aaa
lods
mov
xchg
cmp
test
notl
ret
lret
mov
cmp
adc
adc
xchg
mov
mov
sub
mov
or
dec
xchg
add
adc
ficompl
add
cmp
bnd
mov
mov
add
psubq
lods
jle
jno
fwait
push
out
push
outsl
imul
sub
sub
daa
pushf
pop
sbb
sub
pop
aaa
ja
test
mov
aam
cld
imul
scas
jns
cli
inc
pop
jo
out
fwait
nop
sub
add
xlat
enter
sbb
fistpl
imul
jne
stos
xchg
cltd
xor
je
push
xchg
jecxz
mov
lods
push
mov
or
mov
scas
dec
jno
cmpsl
sbb
test
jno
dec
add
nop
add
push
dec
mov
cmpsl
xor
sbb
lds
sbb
cmp
sub
out
mov
xchg
push
ja
bound
jae
dec
mov
scas
or
pop
pop
movb
add
mov
or
cmp
imul
fucomi
jbe
sbb
push
negl
popf
pushf
jp
inc
fidivrl
cmp
scas
or
jne
sub
cmp
ret
into
push
pop
add
sub
sbb
sub
xchg
adc
sarb
cmpb
pop
mov
push
xor
sbb
arpl
mov
stc
cli
mov
xor
stc
add
popa
pop
mov
daa
sub
cmp
or
outsl
fsts
lea
imul
jmp
out
push
jno
not
jbe
and
mov
idivl
mov
and
in
insb
cltd
push
fwait
hlt
outsl
jnp
dec
enter
mov
aad
sub
cli
dec
fldenv
scas
push
mov
push
mov
cs
ret
lret
cmp
fwait
dec
pop
rcrl
fsts
hlt
sub
xor
cmc
cltd
repnz
push
push
cmpsl
cmp
jno
cmp
arpl
in
mov
cmp
cmp
pop
xlat
sbb
mov
dec
jnp
nop
inc
jl
pop
add
mov
push
cmp
ss
mov
rclb
inc
or
in
fcomps
movsb
loop
repz
gs
cs
lods
out
xchg
xor
testl
cmp
das
pop
push
repz
into
in
clc
adc
push
adc
xlat
mov
and
mov
in
cmpsb
cmc
testl
xchg
cmp
mov
ja
fldenv
addb
and
jp
xchg
xor
sbb
cmp
rcl
dec
xor
stos
lret
sub
mov
cmp
inc
cmp
mov
loopne
pop
int
div
sub
fisttpll
xor
dec
fsubr
pop
stos
and
jno
mov
mov
loopne
jne
pop
push
in
xor
lret
icebp
mov
lcall
adc
fsts
fs
cmp
and
mov
xor
mov
xor
jmp
loop
mov
and
mov
fidivs
add
sub
repz
mov
ret
sti
fdivrp
push
mov
jns
xor
add
leave
adc
test
ret
imul
lret
mov
lret
rclb
sbb
shll
lock
cmc
jno
lea
and
and
jg
xchg
mov
loop
out
orb
or
push
andl
iret
ljmp
aad
xor
sub
jge
fidivrl
fbstp
into
stc
mov
ds
xchg
pop
out
rcrb
fidivrl
outsl
ds
fldt
jae
fsts
xor
fdivrp
sub
test
stos
push
outsb
lret
cmp
rep
cmpsl
mov
int
int3
out
xor
imul
cmp
jmp
mov
cmp
and
out
js
and
mov
or
adc
sub
out
fwait
je
jp
insb
push
addr16
imul
pop
jo
mov
fsub
rorb
jns
dec
mov
ds
cmp
jmp
xchg
test
pop
xor
repnz
inc
xchg
testl
pop
imul
in
lret
adc
jp
xor
test
sub
add
das
push
fmulp
in
clc
add
mov
sbb
cmp
xlat
fnsave
or
mov
fsubs
cmp
inc
xchg
pop
inc
cli
mov
jecxz
ficompl
add
rcll
jnp
mov
fidivs
mov
mov
push
cmp
push
fmulp
sbb
and
lock
test
stos
movsb
fsts
dec
push
shrb
dec
les
scas
sbb
adc
dec
aam
push
pop
mov
xchg
out
and
mov
or
xchg
in
icebp
xchg
bound
cmpsl
insb
and
and
mov
adc
aam
ja
repnz
sub
jecxz
push
aam
and
cld
call
in
jns
fldcw
dec
ret
cmc
sbb
js
subb
mov
arpl
cmp
and
std
icebp
sbb
jmp
sub
mov
push
sbb
xor
or
push
addb
lea
jb
push
jge
mov
sar
mov
insb
mov
pusha
inc
or
cli
mov
cltd
push
xlat
and
cltd
xor
outsl
xchg
adc
lret
aam
test
pop
gs
mov
std
xor
cmp
or
ja
fisttpl
hlt
mov
xchg
xchg
push
and
push
add
stc
or
xor
xor
pop
add
pop
xor
push
pushf
imul
mov
mov
inc
cltd
je
xchg
cmp
cwtl
cld
jg
or
jle
loope
test
pushf
js
mov
jno
push
imul
scas
enter
cmp
jecxz
pushf
sarb
inc
adc
ret
into
sti
sbb
hlt
jecxz
ret
mov
repnz
dec
cmp
stos
mov
inc
loope
push
push
or
ret
pop
enter
subl
repz
sbb
insl
inc
roll
sbb
imul
mov
inc
push
push
pop
jns
fstps
out
insb
mov
push
fadd
out
sub
lret
push
jge
cmp
fistpl
lret
fiadds
sub
jns
fsubl
inc
out
fwait
cmpsb
xlat
rolb
jo
std
pop
xlat
mov
push
stc
push
add
push
and
shl
mov
ja
sbb
repz
and
mov
mov
clc
cmpsl
mov
cld
xlat
sub
xor
cmovno
push
jecxz
test
cmp
pushf
scas
lret
cmp
mulb
repnz
add
cmpsl
shl
sbb
sbb
mov
fcompl
imul
cmpl
xor
xor
jne
int
ljmp
ljmp
sbb
imul
in
push
out
or
pop
inc
lea
push
mov
xchg
inc
dec
cmpsl
xor
mov
xchg
fucomi
cmp
ret
mov
and
cs
gs
shrl
loopne
rcrl
jp
xor
sti
mov
add
dec
incb
cmp
or
mov
stos
push
outsl
sub
ret
xchg
adc
jne
add
bound
mov
jbe
pushf
fcmove
testl
es
add
outsb
push
xlat
pop
mov
stc
sbb
jecxz
jns
add
inc
add
mov
popa
or
mov
push
fldt
cmc
xchg
cli
add
sbb
jns
mov
mov
inc
xor
test
sub
cmp
enter
adc
push
push
inc
andl
outsb
ja
xlat
scas
sub
fcmovne
jle
pop
insl
push
lahf
or
xchg
and
sbb
jns
sbb
adc
call
aaa
xlat
xchg
pop
dec
add
pop
pop
jns
mov
add
dec
popf
add
mov
mov
sbb
test
mov
sbb
fcomps
mov
pop
aaa
jl
shrb
dec
jnp
addr16
movsl
ficompl
add
push
mov
pop
sub
rcrb
mov
cmp
mov
push
cmp
cli
sbb
shrl
sbb
jae
ss
pop
dec
mov
sbb
cld
pop
out
nop
sbb
xchg
push
leave
xlat
lds
int
fldt
xchg
lods
out
jl
sub
mov
imul
add
adc
test
mov
and
dec
xlat
in
stos
push
pop
imul
inc
ficompl
sbb
aad
xor
addr16
scas
shl
add
jno
pop
ja
pushf
mov
mov
pop
pop
dec
pop
pop
cmp
mov
cmp
pop
lret
cmpsl
in
sbbl
add
push
popf
stos
stc
lock
xor
inc
sbb
fstpt
mov
enter
and
sub
out
jg
mov
push
pop
mov
push
xor
pop
sbb
mov
mov
mov
jne
pushf
dec
cmp
stos
push
arpl
movsl
loope
popa
shlb
jle
add
mov
pop
jmp
adc
sbb
ficomps
or
into
not
pop
fs
adc
cmp
pop
int
xlat
mov
mov
mov
mov
adc
mov
sbb
xchg
push
xor
pop
push
stos
dec
jge
mov
lret
add
and
adc
jecxz
jmp
jb
jl
or
jns
jb
notb
pop
icebp
stc
inc
xor
popf
je
pushl
jecxz
in
lret
lcall
or
lahf
xor
fildl
xor
cli
movsb
jge
imul
or
jg
adc
sbb
adc
inc
xchg
in
aas
mov
add
repnz
xor
push
xor
mov
dec
mov
mov
dec
sbb
jecxz
xor
icebp
pop
pop
lcall
sbb
xchg
dec
sbb
xlat
lods
stos
enter
sbb
jle
lea
mov
sbb
rorl
in
jl
inc
test
push
add
mov
loopne
daa
cmp
push
or
sarb
xor
fwait
push
pushl
pop
cmp
imul
pop
pop
insl
mov
pop
roll
jle
pop
xor
out
into
aaa
daa
iret
mov
inc
jns
sub
xchg
rorb
pop
xchg
jne
mov
sbb
cld
inc
mov
xor
add
jbe
loop
ret
fildl
mov
mov
mov
push
sarb
dec
sbb
dec
jns
fnstenv
dec
cmpsl
pop
lahf
mov
mov
call
scas
sub
xlat
addb
push
iret
sub
scas
loop
and
jmp
xlat
adc
sbb
aad
pop
ret
ror
mov
mov
cmpsl
clc
mov
or
jnp
xor
pop
inc
imul
daa
cmp
cs
xorl
sbb
pop
dec
aaa
aad
pop
push
jae
push
jg
btc
das
sub
addr16
incl
ljmp
mov
push
pop
in
in
sahf
shr
add
push
lret
or
mov
push
sub
push
cmp
dec
mov
or
lds
jnp
nop
mov
and
pop
daa
xchg
std
push
adc
bnd
sub
mov
dec
or
lods
cmpb
popa
xor
repz
sub
mov
in
sarb
xlat
inc
push
push
addl
std
mov
xchg
fwait
ljmp
mov
out
test
cli
daa
inc
push
push
and
dec
std
fcmovnu
hlt
clc
jge
pop
push
lods
mov
sbb
jmp
inc
pushf
mov
and
jne
mov
dec
call
fwait
loopne
xchg
mov
sub
call
cmp
push
sahf
fisttpll
aam
cs
shr
and
rorb
pushf
insl
mov
dec
sub
inc
mov
cmp
xor
mov
aam
or
or
pusha
scas
dec
test
dec
mov
leave
mov
sti
sbb
rorl
xorl
inc
pop
lea
xorb
loopne
xor
jnp
pushf
test
jmp
cmpb
je
ror
xlat
sub
push
in
mov
es
decb
aas
sub
mov
icebp
and
mov
xchg
pop
test
adc
aam
jmp
mov
iret
out
jg
mov
test
pop
nop
adc
fwait
pop
dec
xchg
cmpsl
pop
xlat
add
inc
orl
sub
and
loopne
stc
push
mov
xchg
ret
mov
leave
sub
sbbl
and
imul
fldcw
add
pop
sbb
aad
fldcw
add
jle
ret
push
insl
push
popa
xor
or
add
jecxz
test
jnp
adc
nop
or
mov
lcall
mov
dec
cmpsl
sbb
ljmp
outsl
xlat
shrl
jl
ftst
jbe
jmp
mov
pop
imul
fldenv
lret
inc
mov
mov
mov
nop
push
or
cmpb
mov
popa
andb
pop
int
ss
jp
cmp
insl
and
test
gs
sub
pop
sbb
push
popl
jae
pushf
aam
stc
cmp
das
dec
jno
cli
rorb
lret
test
stc
xchg
lret
dec
pop
popf
xor
jne,pt
or
jnp
and
adc
rol
push
xchg
call
fildl
add
cmp
dec
roll
imul
cld
mov
inc
dec
cmp
mov
call
decl
jo
xor
or
mov
mov
mull
lods
or
jae
xchg
cwtl
add
add
jns
int
jecxz
andl
dec
fistpl
jp
leave
jne
xchg
std
dec
inc
ja
insb
jns
sub
ret
dec
test
sarl
pop
mov
pop
jb
in
mov
jmp
add
cmp
mov
sub
and
stos
repz
add
std
and
push
push
and
sahf
js
je
dec
sbb
sbb
jp,pt
cmp
sub
add
xor
xorb
jns
mov
sub
pushf
mov
pop
call
or
loopne
fisubrl
push
adc
xchg
fdivrp
das
fnstenv
incb
cli
fsubrl
adc
shlb
adcl
outsb
es
xchg
push
dec
and
jecxz
or
mov
mov
inc
push
adc
das
sub
xor
les
stos
test
pop
out
outsl
inc
mov
xchg
fcmovnb
fnsave
cmp
cli
dec
mov
cmpsb
stc
mov
sahf
dec
jne
pop
xor
popf
adc
bnd
jp
jmp
sub
jb
ss
dec
ds
pop
dec
iret
and
stos
sahf
cmp
enter
pushl
js
xchg
add
repz
cmp
pop
repnz
pop
lods
jae
xchg
fldln2
mov
fbld
or
cmp
cmp
lods
inc
rcrl
jl
jp
xlat
mov
pop
mov
fs
orb
ficoms
pushf
and
int
xchg
stc
aaa
test
scas
jns
adcl
cmp
or
mov
rol
xchg
adc
xchg
stc
and
push
loopne
mov
add
js
sbb
fistl
lea
xrelease
xchg
aas
add
jo
dec
jae
lods
and
sub
or
dec
push
ficomps
pushf
aam
mov
jnp
out
add
rol
std
push
xor
and
insb
insb
std
push
fdiv
jae
imulb
popf
sbb
je
pop
push
fisttpl
sub
rcrl
add
jno
adc
jnp
daa
or
shlb
mov
sub
sbb
cmp
mov
add
push
stc
cmp
dec
std
mov
sbb
mov
sub
mulb
lods
dec
inc
push
xor
jno
or
das
lea
stos
mov
inc
fpatan
ficoms
pop
inc
mov
jnp
sbb
sbb
hlt
or
xchg
fs
insl
sub
insl
nop
lock
arpl
out
dec
ja
adc
mov
test
xor
addr16
sub
repnz
ja
pop
scas
fcmovne
shll
pop
xchg
push
push
cli
mov
imul
je,pt
je
push
js
out
loop
jne
xlat
inc
mov
mov
xor
xchg
jo
pop
adc
lahf
lods
push
adc
cli
jg
mov
dec
dec
flds
out
dec
imulb
sub
jnp
inc
bound
xor
repnz
cmp
fisttpl
xlat
shrl
aaa
sbb
pushf
sti
std
mov
cmp
test
and
ja
sarl
ds
xor
mov
mov
mov
sbb
cmp
das
push
nop
xor
ja
cmp
xchg
sub
shlb
inc
and
lcall
jae
jne
fistl
sbb
cmpsl
in
jmp
dec
imul
mov
or
cmp
mov
mov
stc
insb
xor
xlat
jecxz
icebp
xorb
xor
hlt
or
cmp
pop
mov
fcmovne
jno
mov
cmpsb
sub
sbb
int3
and
mov
push
std
push
sbb
and
js
pop
push
and
popl
or
notb
pop
dec
and
push
jne
mov
lcall
jg
enter
lods
test
cli
je
out
jp
sub
xlat
popf
xorl
hlt
movsl
cmp
xchg
fsts
and
mov
or
jmp
xchg
mov
insb
dec
movsl
xor
jo
xchg
popf
enter
xchg
test
out
popl
and
adc
pop
mov
jg
xor
fistpl
jle
mov
cs
cli
sub
xlat
gs
mov
jge
xchg
and
imul
cs
pop
add
les
adc
cmpsb
lret
stos
stc
mov
in
mov
xor
insb
pop
testl
jae
mov
jg
mov
mov
js
outsl
popf
cli
sub
pop
icebp
in
stos
push
mov
and
ret
lret
sub
mov
sub
xor
lods
push
sbb
jne
inc
jnp
inc
jns
xlat
je
fstpt
and
mov
add
xchg
mov
nop
dec
int
jecxz
jecxz
repz
sbb
daa
add
cli
pop
imul
adc
test
in
cmp
clc
mov
ljmp
aam
shrb
stos
popa
sbb
xor
std
sub
jmp
push
mov
neg
jae
div
data16
push
aaa
insl
mov
lcall
pop
fwait
pushf
fistpll
fldt
xchg
aam
mov
xlat
rcrb
stc
pop
jns
dec
sarl
lods
sbb
call
xchg
sub
fld
jmp
jmp
cmc
push
pop
xor
xlat
sbb
inc
cltd
nop
mov
inc
adc
inc
mov
xorb
adc
fnstenv
push
inc
mov
aad
xchg
outsl
inc
aas
or
inc
jg
xor
add
mov
push
mov
mov
mov
add
fbld
cmp
shlb
push
mov
mov
mov
inc
les
test
mov
in
sbb
inc
dec
add
fimull
cld
fstps
jg
into
push
adc
push
test
xchg
test
and
and
push
sub
add
loop
dec
inc
xchg
faddp
and
movsb
jle
fdivr
push
or
jns
stc
add
push
jg
mov
daa
js
sub
inc
pop
repnz
pop
dec
jl
pop
les
sarl
scas
imul
je,pt
mov
das
in
pop
test
xchg
and
ja
or
xchg
repnz
mov
rcl
push
cwtl
sbb
push
dec
xor
xchg
sub
jp
dec
out
push
mov
repnz
adc
ja
pop
js
xlat
loopne
cmp
and
pop
mov
lock
pop
fstpt
insb
adc
stos
lods
dec
cmp
cmpl
and
je
mov
rcrb
sbb
add
pop
sub
frstor
clc
in
cmc
mov
jl
push
jns
mov
sub
cmp
adc
pop
dec
inc
jb
arpl
sub
or
jge
mov
inc
push
arpl
push
test
inc
adc
xchg
cmpsl
mov
arpl
test
lods
cli
pop
mov
xlat
fbld
push
cmp
imul
pop
cmpsl
push
mov
inc
xor
testb
test
icebp
pop
sub
jns
movsb
push
pop
es
push
test
mov
stos
push
xchg
lods
adc
xor
stos
pop
or
enter
ret
nop
sarb
sub
jae
imul
mov
icebp
xor
out
sbb
mov
test
sub
and
cli
sbb
push
cmp
xchg
rclb
push
shrb
sarb
xorl
sub
mov
bound
and
test
or
ret
sarb
stos
pop
aas
test
call
pop
pushf
mov
inc
and
rcll
mov
push
jns
scas
pop
xchg
jns
lcall
icebp
pop
mov
inc
sub
xchg
push
mov
jns
mov
js
mul
pop
roll
hlt
push
addr16
jns
push
adc
cmp
lret
call
aam
leave
lret
dec
sbb
rorb
dec
popa
sti
sbb
fcmovnu
dec
in
pop
outsl
xchg
ss
lods
mov
xor
sbb
jbe
jns
push
test
mov
cmp
adc
jb
or
imul
jmp
test
dec
fcmovnbe
xor
shll
insl
gs
leave
ds
aas
dec
jl
push
or
sbb
je
dec
push
icebp
pop
mov
jp
test
lea
movsb
mov
insb
pushf
and
test
xlat
mov
inc
ss
and
mov
jg
ret
add
daa
mov
ljmp
fistpl
mov
lret
xor
adc
inc
fldcw
icebp
les
or
jp
rclb
push
cltd
mov
out
pop
test
int
mov
sub
std
pop
jae
lahf
stos
adc
loope
xor
lock
mov
jl
cmp
gs
pop
jle
stos
out
imul
movb
sbb
movsb
dec
xor
clc
cmp
add
adc
sub
pop
dec
stos
addr16
inc
bound
lahf
aam
repnz
les
inc
fsts
push
mov
xchg
push
enter
jnp
mov
cs
std
xchg
xchg
inc
sbb
pop
jle
fnstenv
add
and
mov
mov
sbb
mov
enter
std
adc
scas
inc
mov
xchg
cli
cmp
test
ljmp
cltd
pop
mov
mov
in
fcmove
sbb
adc
mov
xlat
pop
jno
test
cmpsl
mov
fs
push
xor
in
pop
fprem1
dec
push
mov
addl
fldenv
mov
fstpt
scas
push
mov
add
jb
or
xor
push
sub
scas
xchg
cmc
pop
out
cmpsb
cmp
mov
jp
mov
mov
js
in
inc
jmp
jl
push
sub
outsl
inc
out
outsb
push
ret
lds
push
mull
add
push
stc
xlat
retw
test
pop
jae
ds
mov
mov
nop
xor
mov
mov
or
aam
cmp
sub
sbb
aad
ror
rorb
js
fildl
sbb
mov
inc
stc
mov
iret
mov
inc
push
ljmp
xor
inc
dec
xchg
sbb
icebp
xor
in
pop
nop
fdivrp
repz
idivl
lahf
rorl
cmp
or
mov
pop
movsb
mov
pop
sti
mov
mov
push
cmpsl
out
or
in
sti
add
push
nop
sarb
enter
sbb
insb
xor
mov
call
test
test
leave
or
and
out
mov
leave
addl
add
mov
jecxz
jnp
xor
pop
xor
push
cmp
pop
add
adc
sub
nop
pop
xchg
fsts
sti
mov
xchg
imul
subl
xor
cmp
mov
xchg
mov
or
xchg
std
pop
jmp
xor
in
mov
cs
sub
mov
add
call
pushf
fstps
jae
dec
pop
jecxz
mov
pop
add
jae
sbb
inc
or
xchg
xlat
adc
in
popf
fwait
insb
jbe
dec
cmp
mov
xor
cmpsb
xor
push
pusha
add
fcmovnu
mov
stos
jmp
xchg
rep
xchg
cmp
rorl
decl
cmp
sub
sub
push
cmp
and
lret
sbb
rclb
xor
pop
jae
out
test
mov
inc
dec
pop
mov
flds
test
fnstcw
ret
dec
mov
xor
sub
stc
insb
stos
sar
push
jne
sub
jno
enter
xchg
dec
push
aas
shl
fstpt
out
rcrl
xchg
std
dec
fcmovne
in
xchg
adc
js
xor
popf
stc
add
aad
push
jp
push
xchg
pushl
push
lahf
xchg
stc
mov
add
pushf
xchg
mov
xlat
dec
sar
dec
cmp
pusha
jl
fnstenv
addr16
mov
aad
jno
inc
int
stos
fsubrp
push
jp
pushf
mov
jecxz
mov
jb
cwtl
pop
mov
outsl
and
push
jo
pop
jmp
stos
xor
sbb
lret
addb
pop
jb
pop
inc
lcall
mov
std
cmpl
repnz
shrb
cmp
sub
pop
add
push
xchg
stos
mov
sub
push
xchg
loope
cmc
cmp
jne
arpl
mov
fisubl
xchg
push
cmpsl
mov
and
add
int
adcl
mov
sbb
push
fisttpl
fdiv
ficomps
sub
inc
fld1
dec
aad
imul
scas
rorl
out
push
push
push
inc
movsl
loope
push
lcall
js
mov
fs
sahf
mov
js
gs
add
int
xor
jg
adcl
cwtl
xor
xchg
jg
pop
test
xchg
sub
and
pop
and
push
test
roll
pop
mov
adc
mov
or
xlat
sbb
pop
or
xor
mov
xchg
subl
imul
imul
cmp
pop
divl
ret
xchg
lret
repz
rorb
or
cmp
jns
pop
push
sub
cmpl
cmc
pop
cs
xchg
shrb
bnd
test
mov
jns
lods
mov
lods
sbb
mov
jne
jecxz
repz
je
rclb
testl
test
sub
mov
imul
mov
testb
and
sti
or
mov
enter
mov
pushf
pop
xlat
ret
mov
inc
and
outsl
mov
pop
jmp
push
cld
xchg
mov
inc
push
mov
sub
outsb
roll
cld
sbb
cld
cmp
addr16
in
jbe
push
int3
dec
dec
dec
scas
sub
test
push
stos
test
add
sbb
dec
mov
inc
jb
cmpsl
insb
cmpsb
repz
adc
push
fidivrl
jl
xchg
sarl
adcb
push
push
dec
xlat
add
cmp
fidivs
lahf
sbb
xchg
scas
inc
scas
xchg
pop
inc
add
cmc
dec
out
xlat
fsubs
lods
pusha
inc
jbe
mov
and
pop
dec
popf
fs
cld
jne
in
lret
loopne
or
aad
sub
mov
popa
rcr
cmp
cmp
dec
push
daa
mov
aad
ret
es
fimuls
adc
jp
rcrb
add
hlt
ss
adc
cmpsl
pop
push
cmpsl
seto
jbe
loop
aam
mov
ja
push
adc
push
mov
inc
out
pop
clc
inc
out
add
data16
outsl
jno
scas
or
and
inc
cmp
hlt
sbb
and
and
cmpl
jno
lods
sub
je
jg
addr16
fwait
and
adc
adc
sub
xchg
jne
adc
iret
xchg
stos
jmp
sub
and
ret
xchg
or
flds
pop
test
pusha
jmp
sbb
aaa
jl
jmp
sbb
outsl
mov
adc
inc
in
jne
push
ja,pn
repnz
mov
mov
out
fwait
sbb
cld
mov
jbe
mov
insl
cmp
test
lret
ficomps
out
xchg
push
dec
xchg
jg
sbb
daa
xchg
insb
add
push
repnz
pop
sub
mov
movsl
fmull
pop
sbb
mov
xchg
aad
rcll
mov
sub
jmp
ljmp
jnp
xchg
fsubp
stc
sub
and
out
arpl
xor
lock
fisubrs
and
sbb
pop
push
sbb
fcom
jbe
sbb
repz
mov
dec
imul
sbb
or
nop
mov
cmp
cs
enter
shll
out
fucomi
dec
cs
xchg
cltd
adc
les
fcmovnb
cmpl
int
add
mov
or
mov
fldenv
test
cld
push
fisubrl
or
pop
xchg
and
sarl
sbb
push
or
addr16
jns
add
xor
pop
fcompl
in
dec
std
mov
pop
sbb
sbb
mov
pop
std
les
jg
cmp
xor
lret
mov
jno
jecxz
bound
push
and
push
jl
setg
cmpsl
cwtl
mov
out
inc
loop
shrl
sbb
bound
push
push
insb
adc
or
xor
movsl
push
js
adc
movsb
ss
sbb
sbb
jp
mov
shlb
xchg
cmp
pushf
aam
test
stc
js
mov
and
mov
dec
jl
and
stos
cmpsl
xchg
pop
add
and
addb
neg
sbb
aas
fldt
out
bound
push
fstpt
add
outsl
dec
jb
ds
lret
nop
pop
shlb
sbb
mov
test
lcall
jmp
iret
fsub
pop
mov
insb
lcall
sub
test
stc
sti
sub
cmp
mov
jae
lret
pop
mov
xor
add
jnp
js
jnp
and
in
mov
sbb
xor
mov
fsts
jle
jle
push
scas
cltd
pushf
inc
rol
fidivrs
les
ficoms
xor
add
adc
add
dec
cmp
jne
ret
mov
arpl
loope
jle
sub
sbb
stos
jns
and
sub
fldt
inc
pushf
lret
inc
pop
andb
pushf
dec
das
stos
test
mov
add
lea
mov
cmp
test
and
and
mov
shr
adc
je
imul
add
pop
pop
dec
inc
jae
popf
sahf
mov
stos
push
dec
cmpsb
pop
hlt
das
jb
sbb
orb
and
mov
push
push
jbe
sbb
pop
mov
call
ljmp
jb
xlat
ljmp
xor
loopne
lret
dec
loopne
xor
andl
pop
jle
sahf
loop
inc
inc
jb
mov
cmpsl
sbb
fistpl
mov
in
add
std
push
idiv
mov
jge
clc
and
jecxz
push
push
outsl
mov
xor
dec
sub
inc
stos
or
add
xor
add
cmc
dec
pushf
push
es
mov
xlat
push
stos
out
xchg
das
ljmp
in
jmp
mov
push
sub
andl
xor
adc
dec
xor
fisttps
in
sub
or
push
fwait
std
and
and
dec
test
mov
mov
sarb
inc
push
or
sbb
inc
pushf
or
jg
dec
imulb
cwtl
ljmp
cmp
xlat
mov
test
addr16
xchg
add
dec
mov
adc
pop
fstpt
or
cmpsl
xor
or
push
mov
jnp
out
test
sbb
test
ds
out
mov
sub
inc
fstpt
dec
xchg
sub
or
mov
test
lods
mov
cwtl
sub
orl
in
icebp
xlat
lcall
flds
pop
push
rcrl
das
aaa
and
and
adcb
cmp
or
dec
dec
xchg
jle
xchg
push
dec
jne
jecxz
adc
mov
sub
xchg
mov
icebp
adc
das
repnz
imulb
jno
mov
pop
add
fcompl
stc
rcl
push
lahf
daa
int3
inc
xor
dec
adc
icebp
aad
jmp
scas
lcall
and
jbe
fyl2x
cmpl
stos
mov
pop
adc
jns
jbe
sub
jnp
mov
lcall
cmpsb
iret
insb
pop
mov
cmc
fwait
xchg
push
stos
add
rcr
fdivrl
add
inc
mov
ret
inc
test
das
adc
sub
jp
fisttpl
jno
or
jmp
inc
iret
push
ds
xchg
sbb
divb
jle
jae
dec
xchg
pop
xchg
pop
adc
daa
mov
adc
push
mov
xor
push
sbbl
fsubl
push
es
xchg
clc
mov
add
sub
push
jb
dec
pop
imul
jge
push
jne
cmpsb
ret
dec
cmpsl
fwait
stos
cmp
ficompl
sbb
je
pop
and
cld
and
dec
cli
rcrb
xor
ja
cmpsb
int3
or
mov
adc
dec
jnp
in
int
xlat
aad
pop
xor
jl
xchg
pop
sbb
or
sbb
cmp
mov
dec
or
ja
scas
dec
add
fadd
mov
add
outsb
loop
stos
pop
cwtl
mov
dec
aas
mov
ja
cmp
gs
jo
movsb
push
addl
jmp
and
dec
mov
dec
cld
mov
and
sahf
ret
push
ficomps
lea
add
xchg
lds
push
mov
sub
xor
inc
push
dec
orb
mov
mov
outsb
lret
ds
sbb
inc
aad
pushf
nop
dec
jns
fldcw
pop
mov
pushf
sbb
adc
xchg
mov
outsb
call
lret
xchg
pop
std
pop
lods
rol
push
jl
lahf
repnz
cmpsl
sbb
loop
or
fstps
arpl
cmp
adcb
das
cmpl
jo
cs
push
inc
pusha
and
sti
push
pop
lds
sub
jle
cmp
dec
push
push
cmp
outsb
adc
addr16
loop
sub
arpl
mov
or
inc
mov
imul
jl
mov
stos
fadd
fdivl
adc
add
dec
call
not
imul
xchg
nop
and
pop
mov
fwait
mov
dec
das
adc
mov
mov
ljmp
dec
je
add
lret
jmp
and
std
subb
and
sub
sub
stos
xchg
dec
pop
mov
aaa
mov
xchg
xor
pop
imul
inc
jl
addr16
repz
popa
popf
and
mov
sbb
ret
inc
jae
adc
mov
test
xchg
mov
jp
cmp
xchg
fucomi
xchg
test
lret
gs
cld
lea
jp
mov
mov
lock
sub
fs
sub
mov
insb
rcl
fildll
int3
cmp
push
pop
loope
mov
jns
dec
mov
fstpt
jp
sbb
pop
cmpsl
xchg
xlat
inc
jo
outsb
adc
add
out
xor
push
adc
xor
jp
or
pushw
xor
enter
push
cltd
and
and
std
jbe
sub
mov
and
push
mov
cs
mov
and
pop
cmp
or
jmp
inc
adc
fsts
xchg
jbe
mov
pushf
in
outsb
adc
inc
adc
lods
xorb
mov
imul
dec
cmpsb
cmp
pop
adc
stos
out
jmp
lds
lea
xor
in
cwtl
push
nop
lret
cs
call
cmc
sbb
mov
fcmovnb
je
lahf
repnz
xorl
adcl
stos
movsb
xchg
stos
or
adc
push
dec
sub
cli
cmp
ja
jl
inc
lock
xor
dec
ror
dec
inc
repz
pop
mov
std
fidivs
mov
shld
cwtl
rcll
lahf
mov
dec
sub
sub
loopne
jle
and
mov
sub
push
andb
fcomip
stos
imul
xor
inc
cmpsl
test
test
loopne
aad
sbb
mov
fldcw
sbb
ljmp
sti
fsts
outsb
fstpt
jl
in
adc
or
stos
fnclex
adcb
mov
jl
leave
insb
iret
jae
lahf
outsb
xchg
cmp
or
lods
lea
mov
sbb
xchg
scas
sub
or
out
sub
cmp
mov
cmp
adc
outsl
add
mov
cmpsl
fs
stc
sub
fistl
inc
and
call
pop
or
fwait
sarl
add
xor
pop
arpl
push
movsl
jne
nop
add
jne
leave
push
mov
je
pop
cmp
cmp
jns
inc
jecxz
lods
adc
pop
roll
fcmovnu
sbb
dec
dec
sti
sbb
push
pop
xorl
outsb
jae
das
fildl
sbb
rcr
mov
lahf
ret
das
mov
xlat
mov
mov
stc
add
cmp
and
and
lcall
les
mov
out
das
sti
jmp
testb
bound
or
lods
add
stos
mov
les
and
or
loop
xor
repz
les
out
ja
lahf
xlat
cmp
fistpl
mov
lret
test
mov
cmpb
fld
popa
test
jne
jmp
pop
js
rolb
mov
aas
inc
jbe
outsb
mov
ja
push
cltd
pop
or
inc
xchg
out
rolb
stc
aas
inc
cld
mov
addr16
pop
jo
inc
add
xor
dec
or
jnp
and
or
or
xor
push
push
setne
cli
insb
cs
shlb
jp
jbe
arpl
jg
sub
lret
fmull
mov
ljmp
test
div
inc
rol
sti
xor
adc
xchg
aas
push
syscall
xor
sbb
fisttpl
xorl
mov
pop
push
or
mov
inc
push
dec
push
dec
add
test
fnstenv
jae
jo
xlat
js
mov
fiaddl
or
dec
jge
xchg
pop
int3
xchg
dec
inc
aaa
mov
and
fstpt
sti
inc
or
or
sbb
pop
aas
sub
fisttpl
xchg
cmp
cmp
fwait
mov
dec
or
imul
popf
inc
xor
cmp
xlat
xchg
pushf
mov
jecxz
jb
xor
aam
xchg
mov
xor
and
imul
ljmp
fcoms
sub
mov
fisubs
rorl
pop
not
inc
mov
and
int3
adc
lret
movsl
push
mov
jne
adc
inc
iret
sbb
pop
adc
jbe
rorl
push
mov
stos
dec
in
into
or
pop
lods
sbb
nop
repz
pop
lret
fxch
and
pop
or
and
les
popf
sub
stos
insb
ds
or
loopne
ror
push
imulb
mov
mov
repz
adc
outsl
daa
dec
jns
sbb
adc
mov
out
ret
out
mov
xor
mov
jge
xor
pop
out
add
jecxz
add
cld
push
in
loopne
mov
subb
popl
movsl
mov
push
adc
lahf
jmp
pushf
inc
popf
xor
inc
scas
cltd
adc
out
icebp
inc
daa
lret
roll
dec
repz
mov
in
pop
pop
jg
and
leave
fstps
loop
les
or
mov
mov
stos
hlt
hlt
sub
std
fldt
cmp
icebp
cmp
and
mov
jno
rorb
sub
jge
jmp
stc
sub
mov
mov
push
scas
push
mov
mov
mov
popa
cmpb
cwtl
xchg
push
aaa
xchg
pop
test
stc
rorl
test
stos
fidivrl
adc
ja
mov
jb
dec
je
pop
jae
dec
imul
pop
mov
sarl
mov
lcall
xor
jg
mov
push
and
adc
jp
pop
push
movsl
dec
cmpb
repz
mov
push
pop
aas
or
pop
xor
mov
add
xchg
out
xchg
in
arpl
inc
push
pop
icebp
cmp
xor
pop
push
imul
inc
inc
icebp
mov
mov
popf
sub
or
test
mov
adc
xchg
jb
xlat
sbb
test
jae
sub
sti
testl
lea
imul
jno
in
in
mov
push
sub
cmp
xor
movl
mov
movl
out
mov
push
stos
adc
xor
jge
mov
jns
jl
movsb
push
sub
xchg
fisubl
pop
fstpt
dec
or
xor
xlat
mov
icebp
pop
inc
js
jl
fsts
movsb
sbb
ret
insl
inc
or
ret
hlt
mov
add
and
sub
cmp
mov
xlat
scas
ja
sbb
bound
pop
jle
push
lods
arpl
cmpb
ss
test
xor
jns
mov
adcl
cmp
lret
jmp
mov
lahf
std
xchg
inc
sub
xlat
sbb
repz
aaa
add
leave
icebp
cmp
jge
pop
sub
mov
mov
mov
pop
pop
xchg
xlat
push
jle
sbb
xor
push
adc
cwtl
ja
enter
mov
loopne
pop
or
lret
jle
dec
js
movsb
decl
les
btc
sbb
mov
mov
imul
add
sbb
rcll
xor
rcr
cltd
push
loopne
sub
xchg
subl
cwtl
ficomps
jno
std
xchg
dec
sub
sbb
les
and
jne
pop
and
fcompl
xor
push
mov
xchg
and
inc
xor
repz
adc
dec
sahf
fimuls
cmpsb
loopne
jecxz
sub
xlat
out
jg
mov
rclb
in
imul
js
sbb
jnp
xor
jno
cmpl
sbb
fidivrs
cmp
test
jl
stc
imul
push
outsb
ja
mov
xlat
lahf
ret
shl
roll
in
cs
lea
sub
pushf
mov
mov
pushf
push
push
sub
or
je
xchg
roll
imul
bound
push
stc
push
inc
imull
clc
loopne
xlat
push
push
sub
sub
jge
ficoml
push
jmp
xor
addr16
pop
jp
f2xm1
or
test
adcl
push
jae
mov
push
adc
fmuls
lock
std
js
stos
sahf
test
jmp
xor
and
fisttpl
and
fwait
xor
test
mov
insb
fmulp
pop
xchg
test
xor
jo
scas
and
add
push
xchg
cs
repnz
jno
adc
adc
out
cmp
sbb
fsubs
jp
mov
lahf
mov
mov
xor
and
or
xchg
gs
add
jb
out
pop
add
jae
push
mov
in
mov
stos
push
rorb
pop
pop
fwait
aam
fdivrs
push
jp
mov
jno
out
sub
lock
mov
fiadds
xchg
push
nop
sahf
outsb
stc
insb
xor
imul
shlb
ds
sub
xlat
cmpb
sbb
daa
xor
jp
inc
sbb
aaa
add
xor
jns
imul
adc
jae
insb
xchg
aaa
or
shrl
push
lcall
lahf
or
mov
ja
dec
mov
mov
xchg
pop
mov
dec
fwait
and
mov
stos
test
aaa
xor
sub
dec
push
lcall
nop
adc
lcall
sbb
ret
sub
gs
leave
hlt
xchg
push
push
stc
iret
push
jle
cld
add
gs
lret
orb
or
ljmp
cmp
xlat
cmp
add
pop
cmp
xchg
jnp
movsb
fiaddl
jns
xor
cli
js
or
pop
push
cmp
clc
not
mov
inc
xchg
mov
push
jl
or
push
xchg
and
jno
cmp
xor
mov
imul
movsl
lods
xor
xchg
mov
mov
push
dec
jbe
jmp
xor
scas
mov
out
dec
jb
mov
push
stos
cld
addr16
jl
sub
js
outsl
xchg
jle
mov
push
mov
testl
bound
nop
enter
add
ret
push
in
lcall
push
popa
jbe
mov
mov
push
popf
xor
pop
push
pop
dec
cmp
mov
out
push
jge
xchg
sub
jg
pop
fxam
add
sub
push
popa
orb
ss
loope
das
xor
xchg
jno
dec
push
xchg
fisttpl
jo
ja
pop
popf
sti
fldt
cli
mov
add
push
dec
mov
cmpsl
clc
fidivl
ja
test
push
jno
fucomi
fimull
fldenv
jno
xlat
jl
movsl
lods
jge
or
xor
test
mov
hlt
push
xor
push
stos
stc
movsl
mov
data16
dec
push
xor
add
cltd
fxch
and
imul
mov
jo
cmpl
inc
and
cmc
jge
mov
or
mov
or
stc
test
sub
push
xchg
js
cld
ret
outsb
inc
pop
mov
pop
pushf
xlat
out
mov
insb
arpl
addr16
xchg
filds
test
mov
das
cmp
push
jmp
push
scas
aaa
test
loopne
mov
je
xlat
mov
add
lea
mov
mov
add
push
sbb
mov
out
cmp
pop
flds
das
stos
xor
cmp
syscall
xchg
ja
dec
jnp
pop
imul
sub
cld
pop
mov
lcall
fs
push
shl
cs
mov
add
push
mov
push
shlb
jp
vpperm
fucom
mov
lahf
xor
jp
loopne
sub
roll
cld
sub
push
xchg
ss
mov
int
sbb
ret
mulb
rclb
pop
stc
cs
stos
imul
jp
stos
lock
dec
lret
and
aas
push
xchg
cwtl
adc
pop
or
in
xorb
pop
push
cmp
cmp
mov
nop
fstps
push
lret
xor
cmp
imul
lds
std
sub
push
lahf
jl
xchg
adcb
dec
jns
fwait
sub
inc
inc
cmp
push
xchg
sub
clc
ss
call
xchg
les
adc
mov
in
ljmp
xchg
sbb
add
loopne
jge
and
movsl
sub
icebp
mov
dec
jl
jmp
xlat
loop
mov
xor
xchg
push
decl
xlat
loop
lret
cmp
pop
int
push
mov
ds
sahf
cmpsb
test
jmp
mov
out
jbe
push
out
xlat
add
aad
mov
aaa
sbb
pop
fnstcw
mov
lahf
fcmovu
dec
and
lea
cwtl
xor
jg
popa
shl
daa
pop
xor
push
fwait
xchg
lahf
fstl
fildl
out
popa
outsb
mov
nop
insb
nop
sbb
xchg
adc
into
idivb
add
ret
lahf
das
outsl
or
movsl
push
sub
ffreep
scas
mov
dec
dec
add
pop
ljmp
ds
dec
mov
sti
xchg
movsb
xchg
xchg
push
pop
sbb
in
inc
orb
ljmp
mov
mov
dec
mov
xchg
jge
adc
aam
jbe
xlat
push
pop
scas
sbbl
ficomps
add
mov
xchg
dec
add
movsl
insb
add
shlb
adc
and
lret
mov
xchg
mov
mov
enter
and
push
js
fdivrl
jne
sub
push
cmp
cmp
xchg
mov
test
dec
roll
repz
fidivrl
pop
fcmovnbe
js
dec
fnstsw
jg
sbb
xlat
push
mov
subb
mov
loop
or
cmpsl
pushl
icebp
lock
push
icebp
mov
lea
cmpsl
and
outsl
addr16
test
jg
out
outsb
lcall
out
push
lds
push
lcall
dec
repnz
mov
cmp
in
test
lods
dec
pop
dec
cs
cld
jg
xor
xchg
bound
cmp
lret
subb
xchg
out
in
loop
xor
lcall
movsb
mov
push
push
mov
aam
iret
pop
cmpl
xlat
adc
and
mov
jnp
adc
stos
rcr
inc
gs
mov
pop
jl
and
add
push
adc
xchg
push
test
dec
pop
sbb
das
and
sahf
jmp
xchg
imul
xlat
pushw
xor
sub
cli
cmp
xor
popa
movsl
adc
rorl
ret
sub
jecxz
shr
mov
mov
fcmovnb
or
orb
outsb
mov
lea
or
in
clc
push
nop
ret
pop
xlat
js
mov
dec
orb
and
ret
mov
mov
fstpl
push
enter
rorl
dec
inc
cld
repz
cmpsl
pop
fistpl
push
and
scas
mov
inc
sub
sbb
push
loopne
mov
or
push
mov
popf
clc
xlat
dec
mov
out
mov
stc
pop
push
lods
rcrb
jp
pop
or
aam
and
sbb
mov
jmp
pushf
sub
pop
cmp
cld
pop
pop
and
mov
aas
push
mov
xlat
push
testb
inc
jle
pop
in
xor
dec
inc
mov
dec
test
push
loop
mov
fwait
push
dec
es
fwait
test
dec
adc
and
addr16
nop
and
mov
stc
fldt
and
mov
adc
dec
cltd
dec
stos
inc
push
insl
mov
out
pop
inc
clc
adc
xor
mov
or
in
push
pop
mov
hlt
stc
data16
test
scas
sbb
mov
lret
mov
add
cmp
and
mov
out
shrl
iret
jmp
pop
adc
and
rorb
sbb
sub
xor
inc
add
sbb
xor
cmpb
in
dec
iret
rcl
add
inc
clc
inc
inc
fmull
movsb
dec
lods
mov
xor
mov
cmp
xchg
jns
jle
dec
fwait
lahf
sub
cs
jb
mov
push
fildl
ljmp
xchg
scas
and
je
jno
cld
aad
loope
xor
inc
test
jl
adc
xchg
movsb
shrb
inc
and
int
inc
sub
out
fs
popf
push
daa
add
or
cmp
inc
add
fldt
mov
cwtl
jo
push
stc
mov
xor
stos
in
mov
sub
test
fildl
xchg
pushf
cmp
imul
in
dec
in
cmp
xlat
mov
add
rolb
mov
adc
fndisi(8087
bound
pop
mov
inc
mull
les
lods
out
in
or
cmpsl
inc
sub
add
stos
mov
sub
je
mov
shlb
xor
stos
sbb
popf
dec
sbb
sarb
ds
pop
addr16
pushf
inc
cmp
fistpll
popw
lcall
cwtl
dec
out
stc
or
push
rcrb
xor
xor
iret
fdivl
js
fucomi
fs
pop
sub
flds
sbb
pop
xor
or
push
jecxz
mov
fcompl
xor
lcall
xlat
lock
and
dec
sub
push
pop
mov
nop
pop
sub
addl
cmpsl
push
xchg
dec
insb
aas
jmp
stc
mov
data16
mov
js
stos
jmp
fnstenv
jno
xlat
or
call
cpuid
push
ret
rolb
adc
xchg
push
cmp
bound
mov
add
cld
mov
jb
outsb
stos
fidivrl
movsb
sbb
pop
test
aad
stc
xchg
mov
mov
outsl
dec
xchg
mov
add
call
push
jmp
xorl
sub
sbb
xchg
push
mov
xchg
mov
or
sbb
inc
jp
stc
sbb
movsl
cmp
and
xchg
jl
jnp
xchg
mov
lret
dec
scas
xor
sub
mov
lcall
push
sub
adc
bound
leave
adc
daa
mov
xor
cmp
cmpb
xlat
xchg
xor
std
jne
sbb
scas
jns
ja
rorl
cmp
repnz
shrl
adc
ficoms
data16
test
sbb
sbb
push
neg
jns,pn
out
test
fs
pop
mov
mov
movsl
or
stc
dec
mov
xlat
jo
jg
lcall
cmp
inc
loop
cmpsl
aad
cmp
cmc
push
dec
inc
cmp
out
cmp
out
ja
loope
adc
or
push
pop
pop
out
imul
xchg
cmc
sub
aam
repnz
loope
sbb
pop
cmp
pop
pop
sub
dec
xor
xchg
mov
idiv
clc
cmp
push
fisubl
xor
movsb
push
mov
imul
sahf
test
inc
cmp
mov
dec
cmp
pushf
movsl
fidivrs
dec
pop
adc
icebp
addr16
lea
adc
xchg
ljmp
scas
cmp
pop
in
bnd
movb
xlat
stc
mov
stos
scas
popa
popf
jle
push
and
stc
cmp
repnz
sbb
add
aas
or
mov
jne
ret
mov
sub
lock
lea
sub
cs
cmpsb
adc
ret
movsl
test
xor
rcl
in
jmp
fisubrs
std
sub
fistpl
shlb
pop
xor
pop
and
das
add
mov
cmp
xlat
nop
dec
lahf
shr
mov
jge
out
inc
jge
push
loopne
or
push
scas
int
push
add
inc
inc
jl
add
inc
pop
sub
mov
jnp
lcall
or
out
mov
std
leave
jns
sar
adc
add
xlat
sbb
mov
das
mov
xchg
dec
mov
xchg
mov
mov
add
jne
mov
xor
sbb
out
dec
adc
test
xor
enter
push
fs
push
xchg
cmp
inc
mov
sbb
and
dec
stos
pop
adc
jno
mov
cmpl
mov
neg
jb
cmp
aad
pop
mov
fisubs
pop
fistpl
aad
loop
jge,pn
xor
xchg
lret
aaa
push
or
pop
adc
mov
mov
or
lahf
jno
xchg
mov
add
mov
mov
push
je
mov
mov
mov
jno
movsb
es
ja
mov
das
jbe
sub
data16
aam
adc
imul
pop
stos
popl
imul
add
inc
addr16
xlat
sahf
cs
dec
sbb
js
out
cmp
ljmp
jle
push
mov
mov
aad
xchg
xor
pop
insl
jp
daa
test
dec
ret
push
orb
mov
popf
cmp
data16
sbb
pop
nop
sbb
sarb
add
ss
loop
scas
cli
xor
fstpt
inc
add
in
mov
jnp
xor
and
lea
popa
and
clc
dec
jae
push
popa
testl
sub
dec
std
ja
scas
es
jg
push
pop
or
std
add
or
xor
stc
xchg
fldt
sub
test
push
test
push
push
stos
pop
adc
xchg
mov
jp
mov
mov
cmp
xchg
repnz
xor
flds
cmp
imul
mov
jae
loope
pop
jp
push
push
sbb
xchg
or
dec
inc
xchg
dec
mov
pop
and
xlat
call
jl
mov
scas
pop
jle
cmp
lahf
cs
stos
xor
ds
pop
jmp
sbb
sub
push
pop
sti
mov
xor
mov
stc
cmp
jns
cwtl
test
sbb
lods
rolb
dec
mov
outsl
rcl
fs
sbb
xor
in
mov
jns
mov
pop
bound
dec
mov
inc
mov
scas
bound
stos
fistpll
test
stc
xchg
jb
or
add
test
sub
orl
dec
lret
jb
into
inc
sub
dec
and
xor
imul
mov
xor
insb
ret
insb
jl
stos
loop
fwait
sbb
clc
push
mov
cwtl
push
flds
popa
fsubr
push
mov
xchg
adc
out
xchg
cld
lcall
jbe
lods
push
cmp
mov
pop
mov
test
add
jmp
in
dec
xchg
xor
and
mov
aaa
mov
cld
dec
in
or
inc
xchg
lods
cmc
sub
insb
xchg
pop
and
jmp
sti
or
in
lahf
lods
int3
cmp
jae
sub
xchg
pop
pop
fwait
add
xor
add
call
pop
sarb
cmp
adc
sub
int
xchg
mov
outsl
dec
add
int3
negl
sbb
cli
pop
cmpsl
aas
adcl
outsb
addr16
xchg
sub
mov
stos
rcrb
lret
sarb
nop
push
xlat
adc
dec
clc
test
jmp
push
mov
rcr
xor
mov
or
push
in
cmp
dec
push
jne
lock
sub
mov
hlt
jno
or
mov
dec
mov
cs
and
pop
imul
jmp
xor
aad
push
test
mov
fistpl
xchg
lds
cli
dec
pop
sub
movsb
aam
std
mov
test
imul
test
jns
bound
xor
xchg
nop
adc
test
push
sub
pushf
mov
in
xchg
enter
not
in
mov
clc
push
mov
inc
adc
xchg
scas
out
xor
jno
pop
adcb
sub
and
rcl
inc
dec
or
enter
mov
es
mov
fwait
jno
js
mov
push
push
jg
sbb
lret
or
iret
xchg
fsts
gs
pop
lret
push
xor
jecxz
mov
sbb
out
stc
or
int
out
mov
movsb
jecxz
inc
in
cld
stc
pop
mov
sbb
pop
dec
mov
out
cmp
mov
mov
pop
cmp
lea
sub
mov
pop
ljmp
test
or
xor
les
enter
mov
adc
fcmovne
fwait
adc
push
mov
jecxz
cs
stos
mov
lods
aas
mov
daa
jmp
clc
scas
test
test
call
repz
mov
cli
push
xchg
and
mov
notl
daa
push
pop
lcall
cmp
imul
out
mov
out
pop
cmp
jns
mov
test
jae
jle
xchg
mov
pop
sbb
aaa
daa
jge
adc
inc
imul
repnz
movsb
sub
mov
addr16
test
xor
sbb
xor
adc
sbb
jo
je
sub
stos
aam
pop
push
mov
jnp
stos
mov
xor
fildl
ljmp
push
sbb
ret
jg
mov
das
repz
arpl
gs
fs
mov
push
test
shlb
mov
mov
loop
jnp
mov
aaa
out
and
lods
jle
js
lcall
outsl
ljmp
mov
push
fistpl
pop
popf
and
repnz
cmpb
push
lock
sarl
movl
xchg
xlat
dec
ljmp
and
pop
nop
cmc
lds
lret
jae
aad
dec
mov
xchg
imul
in
ja
cmpsb
sbb
push
stc
js
add
insb
or
imul
stc
add
loope
jae
in
lea
fisttpl
je
std
and
add
call
xor
pop
push
sbb
jmp
add
std
sbb
in
repnz
and
test
jne
stc
add
out
and
push
insb
and
fcmovnbe
cmp
mov
arpl
jb
inc
rcl
out
mov
fwait
jnp
dec
or
xchg
sub
xlat
lret
mov
inc
sbb
and
mov
jl
hlt
lock
int
dec
pop
scas
cmp
pop
xchg
mov
cmp
mov
adc
mov
fs
fistpl
std
xchg
mov
cmp
or
ficomps
iret
jge
out
mov
sbb
fcomi
test
mov
out
stos
enter
lock
dec
ja
pop
clc
xchg
fmull
fwait
mov
ss
xchg
aad
adc
aas
mov
incb
subb
and
xor
xor
push
dec
out
cmp
pop
jl
stc
cmp
test
sub
pushl
stos
lret
fstpl
jb
ficomps
daa
jae
fsts
mov
test
mov
sarl
lods
fistl
popf
jmp
mov
fisttpl
dec
orb
xor
movsl
inc
stos
and
pop
xlat
inc
cmp
cwtl
popf
mov
push
add
rorl
mov
pop
inc
stc
xlat
rcrb
inc
les
std
cmp
xlat
sahf
adc
pop
fcomip
push
jle
push
dec
fidivl
mov
fldcw
dec
jle
stos
jb
orb
stos
imul
icebp
xor
imul
hlt
sbbb
fcmovnb
into
cmp
jecxz
xchg
sbb
sub
jns
stc
inc
test
cmp
ds
mov
mov
pop
and
push
jne
adc
test
cmp
jge
or
int
pop
push
dec
and
cmp
sub
aam
xlat
insb
sbb
xchg
jb
insl
pop
mov
sub
call
stos
shlb
sbb
sbb
gs
ret
cs
and
aaa
add
pop
add
movsl
fldenv
stc
dec
cmp
mov
push
push
mov
loop
pop
push
jns
and
mov
lret
jb
aam
lret
dec
jno
call
inc
sub
je
stos
xchg
setns
mov
mov
cmp
out
push
adc
icebp
popf
in
insl
fldlg2
fiadds
cmp
inc
rolb
xchg
adcl
add
inc
or
push
loopne
nop
or
jge
jmp
dec
test
jmp
js
inc
jbe
push
adc
inc
adc
test
mov
js
sbb
imul
movsl
sbb
jge
jmp
adc
lcall
adc
test
test
sbb
loop
outsb
in
mov
xlat
pop
push
mov
inc
dec
ds
dec
in
push
insl
punpckhbw
fldenv
xor
xor
and
adc
mov
and
pop
ds
test
lods
mov
fiadds
mov
and
xorb
jle
insl
cld
out
or
xlat
jae
popl
out
cmp
fstps
cmp
jbe
sbb
xlat
pop
jmp
jg
in
or
pop
sbb
fs
ljmp
jo
dec
aas
clc
dec
ja
aad
xchg
mulb
jb
mov
sarl
scas
xor
and
sub
cltd
fnstenv
and
push
iret
ficoml
push
jo
inc
xor
sti
data16
and
cs
test
icebp
jne
lds
xor
call
test
mov
aam
js
pop
fcompl
dec
iret
sti
xchg
sub
popf
mov
cmp
ljmp
xor
cltd
adc
sbb
test
add
add
jae
pop
and
jp
notb
sbb
pop
ds
fsubrp
mov
cs
xor
push
and
mov
insl
xor
shl
jo
daa
lret
leave
outsl
adc
fstps
xor
shr
lock
jg
std
mov
jbe
int3
cld
fld
dec
mov
insb
xlat
je
and
cmp
cld
std
movsl
pop
sub
or
out
addb
in
arpl
movsl
and
xor
push
imul
mov
mov
jp
xor
push
ret
xchg
stc
push
push
mov
in
xchg
lret
lds
popl
xchg
dec
jns
fcmovb
sbb
sub
cs
mov
adc
sbb
push
mov
mov
ja
xor
cmpsb
cwtl
out
or
sbbb
cltd
out
pop
or
jno
push
lret
in
lcall
xchg
into
dec
push
xlat
sub
pop
lods
dec
xor
push
test
mov
cli
pusha
xor
in
sub
pop
stos
mov
cmp
adc
mov
add
pop
enter
mov
cmp
mov
add
out
lods
pop
push
dec
test
jge
insl
aad
inc
push
cld
sbb
movsb
jg
pop
push
ret
push
xlat
pop
hlt
dec
scas
dec
pop
aaa
jecxz
add
mov
loope
xlat
jmp
clc
add
cmpsb
sbb
in
and
orl
shl
xor
lret
fistpl
and
mov
mov
nop
push
cmp
jo
push
push
pop
orl
sub
test
cld
xchg
xchg
sbb
ljmp
xchg
cmp
mov
enter
insl
stc
mov
xor
repz
jno
flds
into
int3
mov
test
fwait
lods
push
sub
bound
fs
iret
pushf
aaa
inc
ljmp
pop
lcall
pushf
pop
mov
fwait
outsb
fcmovnbe
mov
dec
push
jns
lret
enter
mov
sarb
sar
scas
add
outsl
je
or
lcall
data16
jb
imul
cmp
xchg
dec
jns
ds
into
pop
sbb
jg
push
ja
adc
mov
jg
mov
xor
or
cmp
daa
js
cli
sub
cmp
add
imul
cs
and
mov
cltd
roll
mov
test
in
cli
rcr
outsb
and
sbb
pop
fisubl
jno
adc
cmp
mov
fdivp
mov
aas
fcoml
in
mov
sub
ret
pop
sub
sbb
xchg
xchg
inc
sbb
movsl
inc
mov
or
test
inc
mov
lret
adc
mov
sbb
cmp
test
stc
imul
cmpsl
jp
mov
sbbb
xor
pop
test
test
mov
mov
mov
add
xor
pop
scas
lahf
fs
imulb
dec
fcompl
or
adc
mov
mov
push
pop
xlat
fs
push
cmc
cs
not
stc
mov
inc
mov
sbb
or
testb
sbb
loope
mov
daa
push
pushf
xor
jbe
or
repnz
push
shlb
stos
fildl
push
in
jg
lock
xlat
push
push
lock
cmp
gs
mov
jmp
inc
pop
mov
dec
cli
mov
enter
int
or
xchg
jo
data16
mov
xor
mov
jnp
cmpsl
imul
incl
into
pop
out
dec
cmp
or
sub
outsb
aaa
jecxz
or
or
mov
lcall
lock
hlt
fwait
pop
pushf
sbb
call
test
jne
mov
jb
jae
div
into
xlat
dec
lods
iret
repz
fcom
je
lds
sbb
cli
or
dec
add
iret
stos
push
mov
jg
fs
mov
cmp
lret
test
add
pushf
sub
push
lods
shr
std
cmp
jns
stc
xchg
je
mov
xchg
cmpsb
pop
mov
jl
pop
rcrb
ds
fistpl
lods
add
push
cmp
inc
jmp
adc
shlb
push
sbb
test
icebp
repz
daa
int
mov
gs
sub
daa
mov
faddl
in
fwait
mov
cmpsb
mov
jmp
xor
or
push
sub
adc
push
pop
cmp
mov
sbb
jnp
dec
shr
or
andl
fwait
lahf
stc
lock
cli
mov
jo
jg
mov
xor
sbb
jmp
inc
repnz
or
adc
je
xor
outsl
fildl
pop
outsl
js
sub
add
xchg
pop
imul
fcmovne
js
or
sbb
subb
out
jmp
mov
lret
cmpl
shrb
sahf
rorb
out
insl
cld
pop
and
jg
mov
mov
mov
icebp
adc
pusha
call
rcrb
loopne
movsl
adc
fisubrl
in
jge
pop
dec
sub
sbb
popf
mov
dec
pushf
in
or
iret
xchg
inc
daa
out
sbb
test
stc
xlat
out
jmp
or
js
pop
scas
fldt
fsub
pop
xchg
cld
gs
cmp
popw
cld
mov
fnsave
insb
mov
fwait
xor
mov
mov
push
fistpl
stos
shr
mov
mov
pop
lret
data16
push
mov
inc
push
insb
inc
rorl
and
xchg
out
jp
and
mov
lock
push
adc
test
daa
ss
dec
mov
cmp
or
pop
add
xor
inc
jae
sbb
add
xchg
jno
mov
lods
pop
pop
bound
dec
sbb
addr16
pushf
scas
out
lret
sbb
arpl
lahf
out
shll
dec
js
aas
aad
mov
imul
enter
xchg
pop
mov
push
and
push
push
jo
jnp
mov
aaa
rcl
sub
push
aas
std
mov
enter
jge
addr16
pusha
iret
sbb
int3
fimuls
mov
xor
cmp
fsubp
jb
cmp
sti
mov
and
imul
cmpsl
sbb
pushf
je
fwait
dec
xor
imull
movsb
shll
stos
pop
xlat
mov
cwtl
dec
lcall
push
mov
ljmp
xor
outsl
outsl
lcall
sub
push
push
mov
adc
out
jns
sbb
xchg
aas
cwtl
cmp
fwait
or
pop
mov
cmp
xor
and
shrl
sbb
cmp
dec
mov
push
testb
sub
stc
ds
and
cmp
dec
mov
cmp
jns
lret
adc
and
inc
shl
aad
imul
mov
jl
mov
xor
adc
aam
cmp
jno
dec
pop
jmp
stc
jns
push
fwait
or
and
pop
jmp
xor
inc
pop
ficompl
mov
sub
jge
push
pop
push
lcall
add
jge
cmp
in
std
jae
cltd
push
lahf
xchg
into
out
mov
test
cmpb
jb
mov
outsb
xor
push
pop
inc
xchg
add
add
and
and
push
mov
hlt
xchg
test
scas
or
adc
mov
push
xlat
sub
xlat
add
cs
xchg
test
xchg
cmc
mov
clc
cmp
xlat
sub
jbe
stos
int
fsts
xlat
cmp
flds
sub
pop
or
hlt
cmp
cmp
push
push
imul
in
lods
add
sbb
push
jp
outsl
jns
test
aaa
xchg
mov
mov
pop
jl
mov
dec
jg
jge
lret
pop
scas
into
and
ret
or
cmpsl
mov
loopne
pop
mov
test
add
xlat
lahf
fsubrl
gs
xchg
mov
in
repz
push
jns
xor
movsl
xor
jo
in
add
xchg
pop
rcrb
loopne
push
cmp
fld
jne
or
cwtl
xchg
inc
xor
iret
mov
addr16
and
jg
js
test
add
insl
sbb
dec
cld
fcmovne
fisubrs
xor
pop
cmc
jg
lret
xor
lods
mov
pushf
insb
popf
adc
mov
jle
fpatan
mov
add
dec
lcall
xchg
fidivrl
pop
mov
insl
cli
mov
and
iret
mov
xor
push
les
and
push
nop
subb
dec
fcmovnu
lret
sbb
xorb
mov
loopne
push
enter
cld
inc
pushf
dec
pop
push
in
and
dec
repnz
rcrb
xchg
xchg
push
mov
fldl
sub
movsl
cmp
aad
xlat
cmpsl
js
lahf
push
or
adc
mov
jb
sub
sar
sub
push
and
sub
addr16
pop
pushf
jns
push
fstps
cmp
sbb
faddl
cmpsl
xchg
adc
out
pop
push
jns
cmp
mov
ret
push
stc
sub
mov
mov
lret
lcall
cmpsl
cwtl
out
dec
push
out
sbb
adc
push
hlt
nop
jge
xor
lret
stc
jl
pop
pop
or
lods
xor
sub
lahf
into
jg
mov
test
adc
sarb
js
cmp
clc
imul
mov
xchg
sbb
add
mov
ljmp
inc
mov
pop
loop
mov
clc
add
dec
in
and
mov
lret
xor
cwtl
nop
push
sti
scas
fdivr
mov
adc
sti
orl
fsts
mov
fisttpl
scas
mov
adcl
mov
sarl
loope
scas
int
add
inc
mov
in
mov
outsb
call
or
mulb
clc
fsubrs
adc
rorb
pop
flds
xchg
jne
pop
push
sbb
sahf
jmp
shrl
xchg
fistl
pop
mov
xchg
sub
cmpsl
xchg
test
inc
addb
push
xor
outsb
in
imul
pop
add
jp
fisttps
pushf
cmp
inc
mov
sbb
xlat
xor
mov
dec
xchg
cmc
and
jae
ficoml
dec
sbb
imul
repz
cmpsl
push
xchg
dec
fadd
lcall
aaa
pop
xor
stos
nop
aaa
mov
push
ret
add
js
or
jge
or
sbb
sarl
adc
cmp
outsl
stos
jno
dec
ficoml
dec
inc
xor
sbb
mov
and
stc
in
mov
jg
cs
lock
es
fimuls
sub
jg
jge
pop
in
push
or
add
mov
fildl
mov
xchg
mov
pop
and
fldcw
sub
stos
jmp
stos
cmp
jno
xchg
cmp
inc
cmp
movb
movsl
mov
dec
mov
into
mov
jge
xchg
or
dec
sbb
push
mov
add
mov
inc
mov
jg
push
xor
imul
stos
sub
dec
or
inc
xchg
add
ficoms
cmp
mov
push
roll
les
sub
jge
jge
dec
lret
sarb
and
xchg
xchg
fcomps
jecxz
lea
out
ret
xor
or
xlat
cmp
mov
aad
ljmp
ftst
mov
cwtl
rcll
test
mov
pop
loopne
fs
xchg
mov
sub
imulb
andl
and
andl
xchg
xchg
aas
jno
repz
popf
xchg
stos
and
pop
mov
jmp
lret
hlt
stos
push
daa
jns
sbb
jle
or
cli
mov
js
cmp
add
in
or
stos
inc
dec
xchg
repz
mov
fistpl
cli
push
nop
inc
mov
lahf
rorb
jmp
ret
and
sub
dec
jnp
push
jo
adc
out
mov
jl
lret
adc
fcmovnbe
inc
ret
into
push
fsub
in
push
popf
jmp
push
test
mov
dec
jbe
das
xchg
inc
push
arpl
pop
repnz
out
in
mov
hlt
pop
xchg
jge
jmp
pop
out
daa
inc
pop
push
insl
jae
addb
inc
cli
mov
sub
rcrb
dec
add
push
dec
aas
xchg
and
outsl
cmc
call
popa
mov
fdivl
sbb
int
sti
push
ret
mov
pusha
mov
or
pop
fadds
sub
xchg
pop
fildl
repz
bound
xlat
sbb
dec
lret
lds
sub
je
loope
sbb
adc
jg
fdivrl
xor
sbb
in
push
pop
adc
push
popf
and
cmp
and
jae
sub
and
mov
les
adc
adc
add
inc
cmp
push
gs
rolb
sti
lret
int3
in
push
push
xor
mov
inc
test
xchg
mov
xor
int3
adc
mov
jae
nop
pop
mov
imul
pop
jecxz
add
jno
into
adc
add
xor
add
sbb
mov
pop
cmp
push
or
and
pop
shl
inc
fidivrs
inc
nop
and
fstpt
mov
dec
mov
inc
inc
sbb
std
outsl
dec
adc
test
mov
sbb
xchg
sbb
inc
test
xchg
sub
movsb
pop
and
jne
add
clc
pop
aam
push
lods
test
jo
fsts
dec
sti
or
imul
inc
cmp
stos
add
popf
jle
cmpsb
push
bound
and
push
jb
test
adc
out
sub
xchg
gs
fwait
jb
int3
sub
in
cmp
push
in
cltd
repnz
cwtl
fstps
mov
repnz
jecxz
jae
sub
sub
mov
ficomps
push
jle
popa
fdivl
into
sbb
adc
ljmp
arpl
sbb
imul
inc
dec
mov
lret
cli
push
lret
sbb
cwtl
dec
add
jns
mov
mov
sbb
jns
fldenv
scas
push
and
lahf
push
dec
jne
popa
bound
and
lret
out
dec
sbb
les
outsl
popa
or
fcomps
ldmxcsr
jo
aaa
cli
stc
aas
sub
add
test
loop
push
mov
cmp
shrb
jns
sbb
xor
xchg
sbb
inc
sbb
imul
mov
push
xchg
pop
fwait
orps
push
push
push
mov
adc
lahf
fstps
cmpsl
cmp
xchg
repnz
insl
cmc
orl
fistl
test
push
jp
imul
in
or
outsl
xlat
cmpb
adc
cmpsb
mov
scas
lahf
push
lret
leave
ja
cmp
lret
and
gs
inc
pop
xor
pop
inc
out
cli
dec
lea
into
pop
push
sub
jns
andb
je
insb
mov
cmp
push
pop
stc
sub
xor
xor
or
xchg
ss
sbbl
inc
dec
xor
pop
or
call
jecxz
mov
test
jl
idivb
cli
adc
adc
and
push
fwait
adc
enter
xor
sbb
or
xor
push
fwait
jmp
cmpsl
xor
cmp
jbe
xchg
mov
fcmovnu
sbb
fwait
sbb
cmp
cld
ret
sbb
popa
mov
adc
test
popf
push
div
or
scas
fnstenv
int
mov
sbb
sarl
mov
jns
mov
xlat
loop
mov
enter
sub
and
or
test
rorl
push
fucomi
mov
push
inc
jg
xchg
and
lods
testb
int3
jnp
sub
call
xchg
mov
and
push
adc
leave
sub
dec
ret
loop
mov
out
scas
fwait
cmp
add
je
in
push
pop
jae
cwtl
test
sahf
xchg
jne
outsb
mov
popf
aas
test
shll
dec
es
mov
lods
push
mov
lahf
loopne
mov
jbe
jnp
adc
ds
out
clc
ja
es
xor
lahf
outsb
mov
fwait
loopne
xchg
lcall
sub
add
cmp
add
xchg
fld
ja
cmpsl
xchg
aas
mov
les
sub
fiadds
sub
cltd
fcmovu
or
mov
mov
sti
sub
jge
insb
add
cmp
and
add
xor
arpl
or
stc
dec
bound
or
popf
insb
cmp
leave
mov
stos
rcrb
outsb
bound
test
mov
dec
push
stos
push
adc
jmp
cmp
add
pop
hlt
popa
sbb
cld
mov
das
mov
mov
in
scas
loop
ja
ficomps
xor
nop
in
sar
cld
fcmovnbe
aad
add
xor
dec
movsl
scas
jno
sub
lods
loopne
scas
dec
rcrl
pop
mov
cmp
mov
outsl
outsl
xchg
sbb
ds
imul
scas
pop
jl
sub
or
scas
jns
subl
jl
mov
or
dec
mov
fldcw
dec
rorl
or
and
mov
es
mov
inc
bound
adc
push
ficoml
push
xor
call
ss
push
xlat
pop
ror
ja
xor
test
sahf
push
aas
ds
xor
shll
pop
add
jne
push
mov
cwtl
outsb
sarl
and
xchg
or
xor
mov
jne
iret
jmp
and
jns
stc
sbb
std
dec
dec
mov
ret
sti
adc
std
and
fistpl
mov
add
push
pop
int3
xchg
mov
dec
bnd
jmp
out
popa
decb
in
lret
fiadds
scas
pushf
pushf
pop
out
arpl
decb
push
stc
and
daa
xchg
decl
dec
and
ss
xor
out
push
fwait
iret
dec
xor
cmpsl
push
out
pop
inc
sbbb
inc
sub
addr16
jb
jae
xchg
popf
xchg
lock
js
adc
cmpsl
int3
pop
adc
lods
jae
mov
push
gs
shrl
hlt
sub
add
pop
insb
cmp
call
cmpsl
xor
sub
stos
or
jb
adc
push
mov
jecxz
outsb
fwait
or
repnz
in
adc
dec
cmp
fdivs
movsl
mov
dec
push
xlat
mov
popf
stc
jnp
fwait
dec
scas
sub
mov
and
xlat
fnstcw
push
lret
cwtl
outsb
lahf
pop
loope
adc
dec
orb
xor
mov
rolb
push
popa
mov
inc
out
data16
lea
iret
xor
cmpsl
loope
lret
outsl
jno
stos
sub
mov
dec
push
push
call
cmp
dec
std
xorl
stos
mov
cli
pop
dec
dec
mov
fucomp
int3
lahf
lea
ljmp
fcmovnbe
div
aad
aad
ss
jae
lahf
and
lret
stos
mov
jns
jecxz
push
setl
into
xchg
cmp
sahf
nop
add
adc
bound
cmp
pop
fldcw
iret
xchg
cmp
pop
scas
fldt
jle
sbb
jnp
inc
dec
mov
fninit
test
cltd
out
dec
mov
dec
push
pop
push
dec
dec
xor
std
cwtl
and
and
lds
add
xorb
fcmovnbe
sub
mov
cmp
stc
dec
cltd
xor
cld
xor
pop
adc
sub
dec
fdiv
jo
and
xor
ja
movl
daa
adc
lahf
jmp
lcall
rep
jne
sti
pop
seto
fsubp
dec
xor
mov
fcmovne
sarl
push
and
mov
xchg
ljmp
push
sbb
cli
mov
xor
mov
ja
xor
testl
jl
pop
je
sbb
mov
rcrb
aam
mov
pop
inc
pop
fimuls
cmp
pop
push
push
neg
xor
and
cmp
sbb
arpl
cmp
mov
rcrl
mov
mov
incl
xchg
inc
add
push
mov
fprem
fcomi
adc
and
fmull
jae
add
pop
pop
adcb
daa
loop
mov
sahf
mov
and
jmp
xor
xchg
xchg
jno
mov
or
fcomps
mov
sti
xchg
push
xor
movsl
inc
andl
xlat
cwtl
jae
cwtl
xor
sbb
frndint
pop
cs
sub
lahf
cmp
pop
and
sbb
cmpsb
aam
dec
ja
data16
in
or
push
fidivs
test
xchg
mov
lret
adc
cmpsb
and
sbb
js
dec
stc
into
fildll
xchg
sub
push
xor
js
mov
fwait
xor
lahf
pushf
push
xlat
js
imul
adc
sbb
lds
lret
jnp
test
pop
imul
xor
fists
adc
and
insb
cld
ret
cmpb
pop
fxch
and
xchg
mov
ffreep
cld
repz
stc
fsts
scas
ret
fmul
jbe
add
pop
imul
mov
xlat
mov
outsl
test
push
rcrl
dec
stos
test
stc
push
pop
inc
stc
jecxz
adc
fnsave
cli
test
cmp
xor
ret
jg
loope
shlb
sub
push
jl
xor
pushf
cmp
xor
and
cmp
repz
push
cli
sbb
lahf
ljmp
cmc
repnz
cs
cli
leave
imul
xlat
test
pop
fs
dec
cmpsl
sti
fsubs
xlat
loop
outsl
push
popa
jb
xchg
jns,pn
movsb
fildl
imul
call
lds
cmc
addr16
subl
mov
outsl
adc
jae
inc
jp
sub
aam
mov
mov
cmc
dec
mov
pop
inc
out
jbe
xchg
pop
mov
stos
out
dec
cmp
jno
inc
dec
mov
jl
jmp
mov
mov
and
lret
cli
xchg
ljmp
sub
inc
dec
inc
cltd
invlpga
mov
cmp
mov
xor
push
stc
aam
out
nop
out
jns
fnstcw
jb
rorb
ficoml
mov
jecxz
imul
dec
mov
xor
lahf
stc
test
jl
adc
xlat
push
ret
mov
inc
jge
cwtl
push
or
push
in
dec
scas
icebp
subl
cmp
mov
in
inc
fildl
fcoms
cwtl
outsb
xor
test
mov
pop
jbe
inc
repz
addr16
add
inc
enter
inc
and
pusha
pushf
outsb
and
mov
mov
or
lea
push
adc
out
bound
lods
lret
fstl
jns,pt
shrb
pshufw
repz
mov
xchg
push
mov
jne
cmp
lcall
scas
mov
xlat
or
mov
out
shrb
ljmp
outsb
mov
push
jb
mov
enter
push
xchg
push
adc
lock
push
addr16
cmpl
jecxz
dec
sbbb
cmc
data16
jmp
xchg
pop
loopne
jecxz
rcrl
pop
or
or
mov
mov
je
lcall
mov
frstor
or
and
imul
into
inc
sti
aad
test
mov
pushf
fidivl
fildl
lahf
pop
or
outsl
lret
fildl
or
jno
push
sub
popa
or
jne
aas
lret
xorb
cmp
and
sarb
mov
popa
fisubs
lahf
ja
pop
mov
pop
push
loopne
adc
sbb
popa
ljmp
popf
mov
cli
adc
sub
and
dec
mov
ja
movsb
fcmovnu
inc
xchg
sub
lcall
xorb
jle
cltd
std
aam
or
cltd
cli
ror
icebp
lret
cmp
sub
cmc
sub
dec
imul
jnp
hlt
pop
adc
mov
push
xchg
push
ficoms
dec
lcall
sbb
mov
jnp,pt
stos
out
pop
inc
or
test
push
jl
mov
cli
pop
mov
xlat
push
jg
subb
mov
imulb
pop
mov
mov
jae
lods
fs
jmp
adc
push
dec
cld
mov
mov
cmp
xchg
imul
dec
fwait
enter
cmpsl
jp
adc
sti
mov
mov
pop
mov
repz
or
fisubrl
and
mov
ss
pop
ds
and
sub
inc
aam
inc
xchg
int
mull
popa
sbb
stos
fiaddl
mov
loop
movsl
or
xchg
jb
clc
jmp
pop
out
cmp
sbb
cmpsb
aaa
adc
xor
movsb
cli
imul
cmp
inc
adc
pop
data16
jmp
mov
cmp
push
cmp
iret
sub
pop
imul
pop
call
mov
out
and
mov
xlat
sub
mov
repz
jae
adc
enter
push
pushf
push
mov
dec
pusha
popf
push
xchg
mov
andl
or
xor
es
iret
jecxz
jp
ja
pop
cmp
push
mov
cli
out
clc
push
add
push
jg
inc
stc
xlat
mov
sub
cli
aad
pop
pop
or
and
pop
imulb
sub
mov
fistl
jbe
xor
ret
cli
push
pop
mov
repnz
xchg
adc
sarb
data16
loopne
push
jns
mov
sbb
xlat
loopne
outsb
cmp
fisttpl
mov
pop
jl
pop
mov
pop
pop
addr16
fcomps
fisubrl
dec
jnp
xchg
pop
pop
push
addr16
adcb
cli
lds
cld
pop
add
movsb
insl
mov
fists
lahf
lcall
lds
xor
dec
adc
ret
pop
icebp
mov
mov
or
insl
out
fildl
inc
push
pushf
xchg
inc
cltd
jnp
jne
mov
sub
out
add
push
out
mov
xchg
mov
lret
and
outsb
imul
or
jno
into
les
and
iret
ret
push
jmp
jb
push
out
jg
test
loope
mov
jmp
ja
shll
sbb
flds
insl
push
or
das
test
fdivr
mov
push
push
imul
mov
cli
das
push
fscale
call
cmpsb
add
addr16
xor
stc
jo
mov
mov
clc
lret
jns
iret
mov
nop
out
dec
push
mov
mov
cmp
aas
rolb
sahf
shl
sub
ljmp
pop
xchg
addb
scas
stos
push
push
aaa
adc
mov
dec
clc
shlb
cwtl
andl
dec
pop
scas
or
loope
or
gs
and
fldln2
mov
addr16
lcall
sub
movl
dec
pushf
mov
mov
sbb
cmp
lods
lcall
push
pop
adc
cltd
fmuls
add
addr16
outsl
test
out
xor
add
flds
mov
filds
cwtl
ljmp
out
ja
jecxz
sbb
push
imul
inc
add
iret
mov
call
or
adc
push
out
mov
mov
fwait
jb
addr16
cmp
xor
fimull
pop
push
mov
push
xchg
mov
xchg
dec
xor
jne
pop
push
pop
roll
and
or
cmpsl
inc
cli
push
out
repz
dec
fcmovnu
xor
int3
push
mov
rorb
cs
xchg
popf
das
cmp
fs
orb
dec
xchg
imul
pop
pop
or
fildl
jb
pop
jge
nop
or
add
dec
mov
ret
subl
data16
mov
xchg
sub
mov
js
mov
std
pop
lret
adc
scas
adc
pop
fs
test
or
jns
and
xchg
dec
pushf
mov
push
jno
cmp
cmp
inc
lahf
aam
sysexit
and
push
jbe
call
and
mov
in
clc
and
push
data16
or
sub
je
mov
lret
adc
nop
mov
push
xor
dec
push
sub
lahf
jno
stc
movsl
dec
push
out
jno
fmuls
mov
jl
jo
stc
push
and
out
fimuls
jno
lret
sbb
fisubrs
ss
mov
xor
call
dec
push
xor
repz
cwtl
pop
xor
sbb
into
sub
out
pop
xchg
lods
add
sub
xchg
dec
gs
mov
dec
cmp
and
adc
and
pop
cmp
sub
cmp
xchg
movl
or
jb
lret
xor
push
in
and
pop
lods
out
shlb
dec
enter
mov
mov
xchg
je
mov
jno
in
or
iret
xor
push
movsb
sub
push
lret
sbb
shlb
add
lcall
je
cmpsl
xchg
lret
cmp
gs
adc
hlt
arpl
fcmovnb
cmp
jle
pop
ret
cli
pop
sub
mov
sub
lcall
repnz
jae
adc
push
or
push
sub
fildl
and
movsl
adc
out
xchg
std
xchg
adc
lcall
push
inc
jnp
or
jl
push
mov
or
movsb
mov
cli
lods
inc
loope
pushf
jno
std
cs
inc
xor
sub
push
mov
fdivl
cltd
pop
jg
adc
fnsave
scas
pop
ret
out
es
pop
icebp
test
inc
dec
adc
inc
repz
and
cmp
xor
ss
das
lock
aam
mov
xchg
mov
clc
fld
jecxz
inc
sbb
mov
insl
xlat
divb
iret
pop
sahf
imul
and
add
sbb
cli
in
mov
mov
in
jae
loop
iret
pop
mov
push
aaa
dec
outsl
sub
outsb
gs
out
fidivl
out
scas
xor
or
or
lods
jl
pop
fsts
fisttpl
imul
cmp
adcb
inc
jne
jns
aas
mov
out
adc
sub
mov
or
into
push
cmp
aam
mov
pop
push
nop
ret
out
mov
lds
popf
iret
cmp
push
inc
adc
inc
and
in
arpl
pop
data16
or
icebp
cmp
xor
or
push
jg
xor
jae
adc
enter
ljmp
loope
push
sub
xlat
test
dec
xor
push
lahf
daa
inc
push
fidivrs
push
push
add
repz
cmp
cmpsb
mov
ficompl
adc
pop
jb
jbe
jp
lahf
in
xor
jns
and
adc
sbb
sbb
pop
mov
data16
sarb
sti
out
mov
or
loope
cmc
fildl
lods
xchg
xchg
jmp
js
stos
imul
dec
pop
push
iret
xchg
pop
inc
sti
xor
in
lret
adc
xchg
ret
xlat
inc
xchg
and
add
out
repnz
mov
gs
lods
mov
imul
mov
int
or
jns
adc
lret
xlat
xchg
sti
adc
mov
jae
inc
push
push
and
dec
dec
repnz
ret
push
dec
jge
add
push
arpl
add
dec
dec
fidivrl
stos
cld
add
sub
subl
dec
lahf
push
fnstcw
inc
xchg
dec
mov
lea
and
jmp
jp
add
lahf
cmp
push
or
dec
mov
pop
fcomip
imul
movsl
stos
xor
fdivl
test
enter
movsb
xchg
cli
push
push
push
jns
pushf
mov
aam
lock
fwait
aad
popf
and
pushl
scas
mov
ficoml
jne
xor
cmp
push
icebp
fistpll
adc
pop
das
push
ja
addr16
or
xlat
pop
jae
movsb
pusha
mov
pop
cmp
popf
adc
icebp
mov
mov
push
inc
dec
out
dec
fdivp
mov
decb
sti
cmpl
frstor
sbb
aad
insb
jno
cmp
in
cmp
inc
push
fisubrs
sbb
fdivr
xor
rol
fsubrl
enter
std
jbe
cwtl
lock
push
cmpl
pop
push
or
xchg
xlat
out
cmp
jecxz
inc
lods
js
mov
rorl
out
fists
sbb
fcmovu
sub
add
nop
stc
xor
adcl
sub
mov
sub
push
packssdw
mov
adc
aad
ja
sti
mov
cwtl
data16
lahf
inc
mov
rorl
mov
xchg
add
ret
in
lods
icebp
shlb
cmp
addl
pop
std
jl
or
popa
or
add
pop
mov
popa
sub
test
mov
out
insl
cli
or
aad
dec
or
insb
pop
dec
jns
mov
fbstp
outsb
xlat
cli
jle
rcll
popf
cmp
popf
nop
cmp
push
adc
rcr
dec
jnp
mov
adc
add
iret
cli
stos
lahf
pop
std
push
xlat
fsubrs
fstpt
jnp
xchg
mov
pop
and
push
rcll
aaa
mov
inc
cmp
mov
scas
repz
push
jne
negb
out
ds
cltd
mov
fs
adc
call
les
pop
push
stc
mov
mov
cmc
ss
xlat
mov
test
jl
push
enter
idivl
add
lret
dec
xor
pop
andb
call
fwait
clc
or
add
xor
push
dec
inc
pop
call
loope
mov
fwait
and
adc
test
iret
scas
push
js
cmp
lock
jb
or
mov
sub
xor
mov
add
js
xor
lret
lock
push
cmp
mov
mov
aaa
pop
cmc
flds
out
dec
insl
add
xchg
repz
dec
lahf
pushf
int3
sbb
or
dec
fmuls
shlb
loop
push
test
das
imul
add
sub
mov
xlat
popf
int
fsubr
data16
in
arpl
idivb
scas
add
fidivrs
jg
xor
fsubs
mov
xchg
pop
mov
mov
daa
cmc
jp
int
sub
cmp
mov
cmpsl
xor
mov
add
xchg
xchg
lcall
jecxz
mov
cmp
cmp
inc
xlat
fiadds
jno
fstp
aaa
sbbl
int3
inc
mov
mov
daa
ss
sbb
inc
jecxz
mov
or
jo
fdivp
mov
roll
nop
sbb
and
xchg
js
mov
call
gs
fisubl
add
mov
push
movsb
mov
jno
les
jns
xchg
roll
cmp
xor
imul
cld
xchg
fwait
mov
sbb
cmp
loopne
jmp
xor
mov
inc
dec
insb
lock
test
sbb
mov
add
lahf
sbb
stc
es
mov
push
lahf
aaa
je
cwtl
add
in
stc
repnz
xlat
clc
fidivrl
mov
sub
int3
imul
mov
xchg
jmp
ror
aas
xor
push
xor
out
add
sbb
cld
lea
imull
mov
call
in
adcb
nop
in
mov
lcall
mov
mov
sar
std
out
stc
push
test
pop
outsl
mov
int
call
jg
pop
push
adc
fs
pop
dec
inc
into
rcr
fucomi
push
in
out
insb
ficoml
aad
jnp
arpl
mov
mov
sti
push
cmp
stc
inc
xlat
int
add
and
sub
dec
dec
or
xor
push
push
std
add
test
fldl
push
and
imul
and
pop
push
xchg
out
push
out
movsl
xchg
sub
add
mov
push
ficompl
loop
inc
inc
sbb
jno
push
fisubrs
in
xor
push
nop
jge
inc
xlat
es
sbb
addr16
cmpb
seto
popf
lock
mov
or
popa
xlat
cmp
xor
das
mov
movsb
mov
outsl
dec
cwtl
rorl
dec
lds
pop
inc
imul
test
pop
mov
pushf
flds
mov
ja
int
mov
sub
lahf
jecxz
jbe
jne
imul
mov
enter
push
xor
mov
mov
pop
iret
adc
push
add
xchg
lcall
push
xchg
int3
push
inc
sub
in
pop
daa
getsec
jle
sbbb
sub
dec
cmp
or
jl
out
cmp
lods
xor
dec
push
test
add
or
jmp
mov
push
dec
xchg
cmp
pop
test
lods
test
test
inc
push
lahf
jmp
das
push
shr
imul
test
lahf
xor
push
addr16
into
inc
pop
fistpl
shl
jg
jp
es
sub
call
jb
outsb
fsubs
jne
adc
pop
or
out
pop
mov
bnd
pop
push
stos
sub
cmp
xchg
mov
std
imul
xchg
lret
arpl
sub
sbb
je
daa
pop
pop
in
enter
jp
aaa
aam
pop
inc
pop
lret
dec
clc
fisubrs
idivb
movsl
cmc
fucomi
clc
jmp
rclb
out
push
or
pop
cmp
pushf
or
loop
push
lods
imul
mov
mov
stos
aaa
stc
pop
xor
xchg
divb
sbb
adc
push
mov
into
or
fldcw
ljmp
addr16
dec
mov
pushf
pop
xchg
mov
adc
addr16
mov
sub
int3
pop
dec
sub
mov
inc
jns
cmp
sbb
cs
xlat
dec
cmp
jae
jne
or
push
aas
imul
lcall
or
ret
push
or
daa
mov
jbe
test
mov
sbbb
ret
shr
cmp
fisubs
jecxz
or
or
sbb
pop
lock
fisubs
fcomi
fistpl
sbb
pop
add
mov
dec
jecxz
je
xchg
in
sub
jmp
xor
inc
adc
mov
mov
or
sarb
in
fwait
mov
jne
scas
hlt
add
cld
out
cld
pusha
movsb
fwait
dec
ljmp
push
insl
cwtl
sbb
sbb
push
sub
add
mov
fadds
sbb
jg
int3
out
and
jbe
sbb
xchg
cld
xchg
test
cmp
jns
adc
fidivrs
add
sub
add
in
pop
scas
fwait
in
push
add
repz
dec
add
aaa
push
xlat
jle
filds
xchg
add
xchg
orl
pop
repz
sub
fildl
push
mov
cmp
pop
xlat
popf
mov
popa
jmp
nop
mov
xor
loope,pn
push
xor
xorl
popa
pop
mov
hlt
call
das
and
scas
mov
insb
jne
test
push
pop
sbb
xlat
loop
xchg
dec
repz
call
dec
mov
scas
rcrb
xchg
daa
xor
insl
sub
add
mov
fldl
cmpl
ds
aam
lcall
xor
sub
icebp
js
mov
sub
sbb
scas
push
add
xchg
push
int3
xor
repnz
movb
fsubrs
jge
or
icebp
ljmp
inc
xchg
jbe
testl
cmp
and
pushf
jp
add
sub
test
rcl
sub
pop
add
adc
jge
mov
pop
popf
mov
and
dec
sub
add
jno
sti
aad
inc
and
or
fidivl
add
lret
mov
sub
ret
cmp
mov
ret
push
dec
push
push
shl
jp
dec
lcall
jae
pushf
or
fdivr
xchg
mov
push
imul
dec
mov
cmp
cltd
push
std
and
lcall
fistpll
sub
xchg
inc
rorb
add
ret
movsb
pop
bound
ss
add
movsl
je
stc
sarb
mov
arpl
jle
movsl
fcmovne
lea
add
add
mov
jae
xlat
addb
dec
mov
push
mov
inc
pop
mov
nop
in
call
pop
dec
arpl
cmp
xor
pop
sub
ljmp
andl
lret
int3
pop
adc
push
cmp
pop
sbb
lock
dec
dec
and
inc
call
push
sbb
xchg
flds
jmp
mov
test
insb
jle
add
iret
js
push
mov
int3
test
pushf
pop
mov
push
mov
shlb
idivl
stos
repnz
lret
fdivl
sub
cmpsb
cwtl
repnz
push
testl
xlat
cmpb
testl
jne
loope
outsl
stc
and
or
xchg
cmp
icebp
lret
dec
add
fildl
mov
ljmp
mov
adc
aad
or
stos
fldcw
dec
mov
xor
mov
push
dec
jg
mov
xchg
fwait
mov
jno
ftst
and
push
jnp
mov
pop
push
jae
inc
mov
fwait
pop
jae
adc
or
aam
sbb
dec
xor
pop
sub
mov
loopne
sub
sub
iret
cli
lret
arpl
testb
insl
incl
and
push
cmp
pushf
pop
adc
push
cmp
sbb
mov
jmp
scas
sbb
jmp
testb
shlb
lcall
sub
lahf
cmp
test
sbb
stos
cli
cmp
xorl
fisubs
and
fidivrl
lds
movsb
sub
fstpt
or
sbb
fsts
mov
xchg
insl
mov
pop
mov
lcall
or
pop
loopne
stos
xor
ja
sub
xor
pushf
pop
and
mov
imul
sub
mov
stos
sahf
and
lret
outsb
sahf
dec
arpl
stos
add
push
mov
sub
mov
pop
push
cmpsb
les
push
cmp
push
and
sbb
lcall
shr
xor
xor
xor
mov
ret
gs
fadds
xchg
push
cmp
dec
push
adc
dec
pusha
jns
loopne
xor
add
stc
and
xlat
in
sub
cmpl
inc
popa
pop
aas
fwait
dec
xchg
jb
add
flds
sub
mov
fisubrs
dec
mov
pushf
aad
or
xor
dec
push
pushf
test
cmp
jns
fsts
jnp
cmp
lret
jne
dec
dec
mov
mov
loop
jbe
sub
or
sti
add
enter
divb
or
test
sbb
xor
xchg
sbb
xchg
out
mov
adc
imul
or
xor
mov
pushf
xor
sub
pop
mov
mov
call
cmp
adc
jl
flds
dec
and
sub
and
mov
cmp
daa
sbb
icebp
inc
jno
repz
xchg
push
jge
sub
int3
jge
mov
cld
xlat
loopne
push
mov
fwait
das
and
scas
and
ret
setbe
repz
ss
imul
imul
add
xor
stc
std
cmp
jle
lock
and
xchg
jno
push
pusha
pop
xor
jp
nop
or
lret
sbb
pop
mov
test
push
dec
test
aam
popf
add
sub
test
xchg
pop
movsb
ljmp
jb
add
pushf
push
inc
call
xlat
jae
sbb
sahf
xor
mov
rclb
pusha
fisubs
jbe
or
movsb
or
repz
shr
push
cmpl
imul
add
aaa
mov
shlb
rcrb
mov
rorb
xchg
sub
fistl
xchg
les
repnz
jp
push
test
mov
fs
imul
mov
lock
leave
call
rcrl
call
ret
iret
mov
and
fcmovnb
aad
std
shlb
jp
push
or
rorb
fimull
cwtl
jmp
jmp
pop
adc
inc
pop
cs
jg
test
fs
insl
lea
sbb
sub
push
stc
xlat
add
cltd
cld
sahf
inc
xor
popf
and
sbb
insl
push
popa
mov
pushf
xor
gs
push
repnz
ja
test
cmp
into
jnp
flds
mov
mov
push
shl
lcall
jno
sbb
sti
push
roll
add
push
ret
dec
push
adc
popa
and
ja
jle
add
jns
xchg
loopne
pop
sub
mov
push
lahf
dec
les
add
xor
bound
mov
into
lcall
xor
jnp
xor
mov
les
dec
nop
ja
jge
stc
fistl
xchg
xor
int
jl
clc
mov
push
outsl
insb
popa
add
addr16
int
jp
repz
out
pop
sub
lea
out
std
sbb
imul
dec
mov
ret
inc
hlt
rcr
hlt
xorb
cmpsl
inc
xchg
push
pop
sbb
push
push
jl
xor
or
popa
mov
adcb
sbb
cli
dec
fwait
inc
outsb
cli
pushf
add
or
sahf
xlat
cmp
mov
stc
sub
inc
es
jbe
push
fisttps
mov
test
pop
out
add
ljmp
inc
int
je
mov
sbbl
jmp
out
lahf
pop
dec
adcl
orl
ja
adc
xchg
out
clc
pop
xlat
shll
push
push
fnstsw
subl
cmp
into
xchg
sub
or
inc
sub
dec
daa
lcall
movsl
sub
jge
mov
rcrb
arpl
ljmp
push
mov
rcrl
call
mov
dec
lahf
shl
sysenter
outsl
mov
loopne
sub
xor
mov
fldenv
in
mov
dec
insl
lock
dec
pop
xorl
lcall
aaa
dec
cmp
lds
cwtl
outsb
je
decl
dec
xor
lahf
dec
daa
push
xlat
cmp
jb
sub
cwtl
sub
sub
cmp
inc
xchg
cmp
mov
mov
movsl
pop
dec
adc
inc
jb
fadds
fistpll
fcomi
decl
jge
fs
cmp
pop
enter
sbb
ret
aam
sbb
dec
ds
adc
cmp
inc
rorb
dec
insl
cmp
cltd
dec
and
aam
add
shlb
dec
mov
mov
xchg
lahf
insb
push
imul
loop
shl
jns
loopne
addl
push
je
sbb
mov
pop
lcall
xchg
push
push
mov
inc
mov
lret
mov
xor
dec
in
dec
and
movsb
sub
dec
add
sarb
xor
rcll
xchg
dec
test
shrl
jbe
inc
cli
int
cmp
xlat
mov
add
mov
pop
adc
lds
mov
push
push
xchg
xor
imul
xor
push
pop
iret
pop
push
jge
mov
and
and
ja
inc
cmp
mov
stos
add
add
daa
dec
and
std
sbbl
dec
xchg
jp
mov
arpl
add
pop
hlt
in
outsb
dec
stc
mov
and
sub
nop
xor
and
aaa
andb
sbb
sbb
test
out
push
push
or
mov
mov
cmp
fimuls
ficoms
lea
lea
roll
addr16
jae
xchg
sahf
aaa
dec
dec
dec
sub
int3
dec
mov
jp
lret
or
repnz
sbb
pop
xor
push
arpl
jmp
pop
fwait
nop
out
xchg
pop
mov
test
fdivl
jnp
adc
mov
stc
js
fisttpl
repnz
or
sub
jle
pop
fcmovu
pop
in
xchg
push
or
repnz
test
push
insl
pop
lret
insl
and
sbb
xlat
adc
mov
orb
testl
lret
into
outsl
iret
mov
ret
repz
adc
lahf
mov
pop
movsl
sti
sub
jns
add
scas
push
fisubs
add
ss
xlat
fldenv
inc
out
jg
repnz
pop
pop
add
iret
cmc
sub
xor
jle
jns
stos
movsl
cmp
cli
jmp
fwait
test
mov
or
pop
xor
test
jns
push
pop
addps
pop
xlat
xchg
pop
pop
jmp
push
call
and
inc
fildl
mov
or
sbb
sub
sub
xchg
and
xor
fiadds
pop
shlb
ds
jns
mov
sub
jmp
rcrb
mov
jb
fsubs
xor
in
mov
mov
lcall
ja
in
inc
add
mov
loope
and
dec
pushf
shlb
and
pop
dec
ret
cwtl
push
pop
inc
sub
outsb
xlat
imul
ljmp
jle
mov
sbb
mov
outsl
cli
shll
sub
xor
push
in
push
push
stos
adc
xlat
outsb
dec
sti
ja
add
jl
test
call
out
dec
sbb
sti
sub
std
mov
icebp
adc
xchg
vrsqrtss
push
jecxz
cwtl
loopne
sbbb
cmp
mov
jo
dec
pop
cwtl
jge
test
mov
pop
xlat
cmpsl
mov
out
add
sub
je
repnz
dec
movb
repz
xchg
mov
or
ljmp
dec
adc
adc
gs
jb
in
nop
sub
push
xor
enter
sub
sti
hlt
cmp
xor
pop
or
scas
cmp
cli
cmc
inc
and
sbb
ret
or
push
dec
xor
cltd
lret
cmpsl
sbb
lcall
fisubl
fistpl
add
pop
mov
mov
cmp
test
fdivs
test
sbb
xchg
sub
push
mul
xchg
and
imul
fldenv
int3
mov
push
inc
cmp
jnp
mov
pop
add
xchg
std
insb
aam
js
add
fnstenv
lret
sub
stos
je
jae
out
test
mov
stc
divl
pop
scas
jmp
xchg
mov
ja
sub
in
push
jmp
sarl
xor
jl
jl
ss
jno
sbb
sub
adc
ret
movsl
mov
repnz
xchg
xor
nop
adc
pop
jle
jb
or
imul
lret
ja
and
and
pushf
movsb
xchg
xchg
mov
and
sbb
pop
xor
int3
mov
mov
jnp
dec
sbb
ja
xchg
in
fistpl
repz
dec
push
imul
iret
dec
pop
sub
dec
mov
hlt
mov
or
push
and
adc
and
addb
lock
push
cmp
scas
jo
mov
push
mov
sbb
out
lahf
repnz
xor
loope
dec
mov
testl
sub
pushf
jno
or
je
addb
leave
jecxz
and
xchg
dec
fwait
rclb
test
and
and
test
test
idivl
xor
pop
xor
lods
aaa
fldcw
sbb
out
mov
test
cmp
pop
add
cltd
add
bound
in
and
push
dec
mov
sub
and
dec
mov
psubw
imul
xor
sbb
lret
jl
adc
movsl
xor
arpl
test
jb
mov
in
fnstenv
shrl
imul
mov
push
inc
sub
push
jg
pushf
push
sub
xchg
test
movsb
push
xor
and
pushf
xor
fnsave
dec
pop
mov
out
adc
outsl
das
out
fidivl
inc
sub
subb
aad
cs
xlat
add
dec
test
mov
push
or
fadd
jg
add
je
popf
sub
jb
cmpsl
jae
mov
out
fwait
mov
cmpsl
dec
sbb
dec
xchg
shll
mov
xorl
aam
ret
addb
scas
or
fstpt
cmp
cmp
inc
popa
adc
pop
xor
push
xor
mov
xlat
fs
hlt
mov
pop
sbb
jecxz
mov
xlat
dec
daa
mov
sti
aas
xlat
or
test
loope
bnd
and
and
xorb
cld
jp
inc
sbb
outsl
mov
push
push
adc
and
iret
cmpsb
aad
adc
hlt
stc
lret
fildl
inc
adc
xor
or
lret
push
inc
mov
and
xor
mov
jp
cmp
jnp
push
or
cmp
pop
fs
push
xchg
sbb
jne
push
pop
orl
mov
ja
sbb
mov
enter
xor
dec
fcmovnu
jg
xchg
sub
insb
pushf
stos
mov
fnsave
mov
and
movsb
cmp
or
xchg
out
sub
mov
dec
and
call
ror
imul
insl
mov
inc
jmp
fdivr
xor
lret
ret
lods
leave
sub
push
pop
dec
adc
je
sub
nop
fldl2e
fiaddl
push
pushf
mov
sarb
sub
pop
scas
jb
mov
mov
out
shrl
mov
pop
movsb
cmc
orl
aam
pop
lret
testl
xchg
pop
stos
mov
pop
push
into
inc
sbb
mov
mov
pop
xchg
pop
inc
and
mov
adc
add
fwait
sub
js
cmp
fcomip
mov
mov
int3
pop
mov
jecxz
or
push
mov
pop
insl
jbe
cld
inc
adcb
jae
fistpl
loopne
into
pushf
add
push
push
ficoms
dec
lahf
mul
add
xchg
into
stc
fildl
stc
sbb
pop
or
jp
rcr
inc
aad
pop
es
pop
shll
int3
jne
sub
lock
loope
push
repnz
outsl
aas
andb
jge
bound
add
dec
fidivrl
addr16
les
xchg
jnp
dec
lret
sub
fisttpl
out
shl
daa
pop
jae
or
mov
iret
xor
bound
cli
in
and
mov
scas
divb
cwtl
ret
idiv
data16
or
fidivl
ret
mov
repz
insb
divb
mov
cwtl
push
dec
in
sub
lock
cmp
jb
and
repz
jge
dec
mov
repnz
hlt
jo
stc
xchg
inc
fiadds
cmp
jp
mov
dec
inc
xor
cwtl
push
insl
idivb
push
xor
jno
inc
xchg
ret
mov
test
mov
mov
push
push
pop
cmp
stc
cs
push
jp
mov
fcmovu
or
icebp
mov
pop
dec
sub
cmp
je
clc
std
xor
xor
or
or
sub
fisubrl
pop
cmp
push
xchg
adc
orb
xor
mov
mov
dec
push
xlat
fcompl
test
data16
leave
std
sub
or
repz
xor
xchg
xor
in
daa
or
sub
hlt
xchg
xor
out
leave
cmp
clc
sahf
xor
aaa
jnp
sub
lret
scas
loope
lock
lahf
stos
cmp
xchg
mov
imul
pop
push
lock
mov
stos
shll
xor
sbb
adc
sbb
mov
sub
dec
dec
scas
pop
xchg
insb
addl
jae
mov
inc
xor
lret
or
adc
jp
or
mov
insl
push
push
cmp
imul
sbb
or
test
and
xlat
out
cld
mov
or
adc
outsb
hlt
movsl
cmp
pop
data16
lret
int3
or
or
lea
xchg
sahf
or
inc
xlat
dec
push
cmpsl
sbbl
push
scas
mov
jmp
mov
sbb
std
rcl
or
mov
test
adc
mov
push
imul
mov
inc
js
repnz
sub
out
cli
rcr
fs
jg
jle
inc
into
repz
pushf
aad
cmpsl
cmp
dec
loop
cmpsl
sub
inc
xchg
jp
dec
cwtl
addl
adc
pop
ret
popa
mov
jl
fwait
addl
xchg
cmp
push
or
or
cmc
das
mov
xchg
int3
dec
dec
push
mov
stc
js
mov
jnp
clc
ss
je
mov
lds
sbb
lds
pop
xchg
lret
scas
and
jp
clc
cli
int
shrb
fistl
aam
aam
lret
testl
mov
bound
xor
lret
lods
aas
popa
imul
test
xor
enter
fcmovnbe
sbb
jne
and
cmp
cmp
xor
xchg
and
dec
iret
pop
movsl
pushf
adc
jge
pushf
push
lea
sbb
xchg
ljmp
imul
movsb
test
cli
fidivs
fldenv
fcomi
int
pushf
js
in
ds
mov
cwtl
mov
pop
sbbb
pop
stos
cmpsl
mov
jl
pop
test
in
and
push
inc
imul
jmp
ret
lea
push
out
stos
sub
dec
ret
imul
adc
insb
jb
cli
and
mov
fwait
mov
fiaddl
xlat
out
dec
push
lock
rcll
mov
xchg
add
cwtl
lock
and
rcl
loopne
ds
adc
jns
xlat
cmp
out
shrl
cmp
test
stc
dec
push
stc
sub
cmpb
jbe
xlat
clc
repz
xor
xchg
popa
push
jp
mov
add
jae
fildl
and
adc
and
dec
cltd
dec
out
jo
mov
loop
jb
push
jae
push
stc
sbb
mov
cmp
inc
enter
scas
sub
js
dec
aam
ja
inc
push
xlat
jb
lahf
mov
out
mov
sbb
mov
test
addr16
fisubrs
mov
jge
xchg
and
imul
mov
mov
cli
jns
out
jp
je
pop
sbb
sub
test
in
ret
mov
je
repz
xorb
cmpsb
imul
arpl
mov
bound
sbb
mov
mov
mov
lcall
repz
jp
outsb
std
mov
fildl
repnz
sub
xchg
and
stos
je
in
fisubrs
mov
stos
movb
pop
xorl
mov
imul
cmp
mov
and
adc
dec
push
cmp
nop
cmc
pop
cld
dec
jge
mov
mov
leave
sarl
loop
push
fcomps
jnp
inc
push
or
fisubrs
and
mov
fcmovnu
push
cwtl
jmp
dec
dec
cmp
cmp
sub
jge
mov
ds
add
push
xor
ja
mov
lret
nop
cli
push
hlt
fisttpll
add
aam
int
rcrl
push
mov
mov
cld
aam
xchg
pushf
lret
pushf
jne
xor
mov
push
stos
and
xor
sub
jne
sbb
add
lcall
add
int
movsl
loope
mov
and
daa
fstpt
jl
cmp
pop
or
dec
pop
xlat
mov
adc
lcall
pop
mov
int3
sbb
and
push
hlt
or
and
outsb
dec
jmp
addr16
movsb
pop
dec
push
lret
dec
push
addr16
out
testb
ror
push
test
gs
cmp
imul
mov
nop
xor
sbb
testb
cmpsl
mov
mov
adc
or
leave
mov
insb
icebp
xchg
jge
movsl
ja
xchg
xlat
cmp
jno
add
cmp
loopne
inc
pop
pop
mov
push
adc
and
cmp
jnp
mov
mov
fcoms
add
push
xlat
cld
repz
mov
add
lahf
dec
mov
or
sbb
cwtl
imull
sahf
sub
call
or
fstpt
stos
mov
shrb
xlat
add
mov
mov
stos
mov
imul
and
fwait
xchg
cmp
mov
stos
fldenv
sbb
fdivrl
adc
subb
jp
pushf
push
imul
std
addr16
push
popf
scas
mov
sub
xchg
dec
mov
mov
mov
insb
lret
xchg
fidivs
cmc
mov
nop
into
scas
xchg
mov
add
std
jl
mov
es
add
mov
subb
sbb
mov
mov
mov
insl
fwait
or
jb
sub
sbb
pop
pop
sbb
pop
rcrl
jae
in
inc
clc
mov
rcll
add
inc
xor
xchg
je,pn
cmp
fwait
mov
and
mov
sub
push
lahf
sbb
dec
imull
push
insb
bound
sub
inc
decb
and
pop
fcom
dec
pop
ja
xchg
das
inc
jp
xlat
mov
cmp
pop
leave
xor
xchg
add
out
imul
lahf
out
aas
dec
shlb
mov
es
mull
arpl
dec
jno
inc
cmpsb
mov
sub
or
roll
xor
ja
ret
les
js
xor
andb
call
shlb
mov
mov
add
test
addr16
mov
cwtl
js
cmp
dec
jge
dec
mov
into
jb
fistl
cmc
stc
and
jle
lcall
add
pop
adc
add
jp
cmp
pop
loop
iret
out
cmpsl
lahf
test
cmc
sahf
iret
fucomp
pop
lret
sbb
or
push
push
fdivrl
out
sarb
andl
das
mov
adcb
mov
xlat
jge
lahf
fwait
insb
mov
sub
sbb
and
inc
je
sahf
mov
jnp
cmp
test
cltd
pop
dec
pusha
push
sub
pop
push
out
cmp
testl
fwait
sbb
inc
lock
dec
rcl
push
mov
sub
shr
pop
sar
cmpsb
cmpl
idivl
fsts
sbb
dec
xchg
dec
xchg
or
inc
shlb
pop
cltd
das
es
pop
jbe
pop
mov
ret
xor
fidivl
aam
add
aas
out
out
stos
inc
hlt
loop
adc
dec
and
mov
mov
nop
xor
sub
add
and
and
shl
or
orb
push
mov
popa
pushf
inc
test
push
insb
rcrb
ljmp
int
add
mov
insb
movsl
das
mov
lcall
mov
lret
shrl
cmpsl
jmp
dec
scas
jns
fisttpl
mov
std
cmpl
pop
std
leave
inc
in
std
dec
push
sub
pusha
sub
jmp
pop
xlat
lret
push
inc
arpl
test
sub
add
and
mov
push
je
lahf
lcall
outsl
ds
fcoms
cwtl
inc
sarl
lahf
std
cmp
xlat
mov
xchg
leave
ret
xchg
and
call
popf
mov
fdivrl
sbb
fstpt
fsts
or
mov
xor
loopne
dec
pushf
mov
or
xlat
insb
pop
fsubrl
outsl
dec
movsb
mov
xchg
flds
arpl
rcr
clc
out
or
inc
mov
cld
movsl
push
je
fsts
add
bound
flds
xchg
add
cmp
sbb
inc
rcr
cmp
daa
lea
lret
jb
lods
mov
jl
cmp
mov
cs
daa
jmp
cmpsl
std
scas
imul
mov
xlat
xor
js
iret
icebp
repz
loop
jnp
sbb
ftst
push
or
dec
aas
aaa
cmp
sub
xor
dec
rcll
imul
mov
out
cmpsb
iret
dec
jae
js
dec
addr16
xchg
sti
shrb
adc
scas
xchg
jmp
les
push
mov
sub
xlat
aad
xchg
int
cli
xchg
lods
insl
add
pop
dec
xor
cmp
pushf
jle
iret
in
jl
jp
cmp
and
push
mov
add
mov
dec
lret
lea
sti
sbb
jg
aas
xchg
shlb
mov
or
jae
jp
dec
jae
fildl
lods
pop
sbb
hlt
push
push
std
or
mov
xor
int3
xor
mov
adc
insl
out
xor
mov
in
adc
or
imul
inc
into
cmp
fcmovnbe
gs
call
sub
mov
insb
ret
jmp
jg
iretw
movl
push
in
fstps
xchg
pop
or
push
adc
sbb
xor
jmp
or
int3
xchg
pop
daa
sub
and
jg
stc
test
adc
jg
dec
and
cmpsb
mov
jge
adc
cmp
repz
xor
nop
xchg
mov
fnstcw
lods
xor
jae
fwait
popf
in
and
std
mov
movsb
pop
je
xchg
dec
fsubrl
sbb
push
push
fistpl
je
cmp
fmull
xor
iret
sbb
mov
stos
popf
stos
and
pushf
stc
xlat
push
dec
push
test
mov
xor
fldcw
dec
cmp
inc
fsts
add
sub
les
xlat
ja
sbb
popf
or
jae
inc
repnz
rcrl
fstps
ret
fcomi
fs
xor
push
out
mov
std
loope
pop
sbb
enter
into
mov
call
lcall
and
cmp
scas
test
dec
jp
lret
adc
mov
pop
jg
mov
pop
test
cmpb
inc
xchg
shrl
jno
push
inc
pop
pop
insb
cmpsl
test
aas
cli
fwait
cld
xchg
mov
scas
push
mov
jno
push
mov
addr16
mov
mov
sub
push
cmp
push
ljmp
jo
insb
arpl
dec
loopne
xlat
push
mov
adc
stos
inc
outsl
push
or
or
mov
sbb
push
test
xlat
rorb
cld
or
jne
test
or
cmp
xchg
sarb
pop
mov
dec
or
push
std
out
add
cmp
aam
sbb
mov
loope
clc
xor
dec
pop
es
in
push
dec
xor
stos
xchg
jl
pop
adc
add
cmc
xor
mov
jb
xchg
sub
icebp
lahf
popf
sub
js
mov
pop
cmp
imul
mov
fpatan
adc
or
jae
mov
xchg
cltd
push
sbb
sub
xchg
pop
ret
sbb
sub
cmp
dec
jl
aaa
push
ja
adc
and
add
dec
cmp
jns
and
mov
lock
test
xlat
mov
pop
and
jnp
sbb
sbb
jb
xor
pushf
sub
bound
jl
dec
xchg
pushf
fldcw
ss
shlb
adc
cmc
lods
jbe
into
push
jg
stc
sub
push
fidivl
lods
dec
mov
push
mov
pop
jno
or
cmp
das
dec
xor
xchg
scas
iret
bound
xchg
push
and
insb
lods
and
mov
jmp
pop
fisubs
out
mov
xchg
lds
mov
cmp
cmp
jae
je
mov
mov
cmp
out
ret
fstpl
push
and
sbb
shll
lahf
shl
and
ja
xor
hlt
sub
add
pop
push
mov
mov
daa
hlt
push
sbb
mov
mov
add
or
xlat
loop
sub
jmp
push
lahf
sbb
xor
in
shrl
test
sbb
fwait
mov
push
cli
or
ret
popa
imul
jg
mov
jmp
ret
jno
cmp
fnop
adc
jno
xchg
mov
push
imul
xor
js
loopne
add
xlat
loopne
jno
repz
fcmovnbe
mov
sbb
stos
and
pop
hlt
dec
and
sbb
mov
xchg
loop
ja
daa
mov
inc
mov
cs
pop
enter
jno
movsl
mov
test
outsb
push
sub
fsts
inc
jno
sub
dec
xlat
mov
mov
xor
mov
fsubrp
lods
pop
jmp
enter
out
stos
outsl
imul
shrb
dec
scas
mov
mov
or
imul
cmp
push
loop
xchg
leave
out
aaa
xor
scas
cli
imul
sbb
or
push
dec
push
std
lea
jbe
pusha
sbb
out
xor
sbb
add
adcl
dec
xlat
mov
cmpsl
xchg
cmp
sub
cwtl
inc
add
jae
cltd
mov
xor
aam
icebp
cmp
cmp
push
std
or
xchg
mov
adc
sub
bound
cmpb
aad
mov
outsb
pop
xlat
push
dec
cs
sbb
fldcw
aad
ja
fstpt
xor
and
sub
es
ljmp
das
fstps
push
int3
xchg
xchg
push
pop
mov
out
aam
pushf
adc
push
int
mov
sub
xor
xorb
out
adc
iret
cmpsl
push
ds
mov
punpcklwd
push
push
xor
in
lods
push
push
mov
cld
xor
stc
adc
repnz
sbb
pop
jnp
jp
mov
shl
cmovns
jne
rcll
repz
and
add
cmp
int
jbe
mov
scas
adc
pop
out
ljmp
bound
fidivrs
das
inc
dec
loope
cmp
lods
dec
xchg
in
jb
mov
cmp
add
jno
mov
cmp
popf
jne
sub
mov
std
into
sbb
add
arpl
movsl
jae
pop
xchg
add
cmpsl
jecxz
fsubl
xor
inc
adc
movsl
or
push
inc
add
shll
movsl
xchg
fcom
add
ret
lea
sbb
nop
mov
out
adc
leave
int
jle
add
xchg
test
cmpsl
cli
ljmp
xchg
sub
and
jbe
push
loope
add
fildl
xchg
pop
notl
out
js
addr16
xlat
sbb
add
shl
add
movsl
xor
add
sub
xlat
mov
lods
fisubs
and
cmp
das
or
sub
bound
cltd
push
adc
je
jno
mov
clc
fcomps
pusha
cmp
sti
xlat
or
mov
nop
cmp
jns
xchg
adc
cli
stos
pop
cltd
adc
daa
loop
test
lret
sub
test
or
insb
mov
leave
fmul
gs
mov
jno
push
fdivl
inc
xchg
imul
xchg
xchg
insb
adc
in
mov
pop
dec
fidivl
sub
mov
mov
or
mov
mov
cs
xorl
xlat
xor
sahf
mov
jecxz
test
jge
pop
xor
stc
jne
insb
xchg
mov
xlat
dec
push
add
push
aas
xor
lahf
sar
mov
push
adc
je
mov
lcall
nop
cltd
mov
jno
adc
mov
inc
ret
sub
lret
xlat
mov
xlat
ss
not
jp
fisubs
sbb
or
cmp
mov
int3
shr
mov
sub
mov
stos
fstpt
xlat
imul
inc
pop
lret
and
jmp
xchg
popf
cmp
lret
call
scas
fidivl
or
and
or
pop
in
inc
mov
pop
fwait
aam
lcall
cmp
mov
adc
sbbb
pop
lcall
dec
fldt
bound
and
mov
loop
iret
push
mov
cmc
jo
mov
mov
les
addr16
cwtl
inc
popa
loope
jp
mov
cmp
popa
or
mov
rcl
sbb
jno
inc
test
push
push
mov
or
add
std
hlt
xor
lret
test
jbe
pop
xchg
lea
cmpsb
xchg
dec
jo
lahf
shll
call
add
stos
fistl
sbb
repnz
daa
cltd
lahf
int
xchg
jp
add
add
iret
inc
mov
stc
ds
or
insb
push
inc
outsl
xlat
es
lahf
push
daa
mov
mov
mov
addr16
cli
jg
xor
xor
adc
aad
int3
adc
xchg
out
aam
jmp
add
mov
int3
iret
sbbl
xor
stos
icebp
add
lds
xchg
ss
je
call
inc
inc
fldt
lahf
xchg
imul
aam
mov
xchg
sti
mov
test
inc
shll
adc
arpl
clc
js
nop
jp
pop
fld
xor
push
jecxz
mov
pushf
sub
jae
mov
mov
sahf
gs
pushf
xor
loope
out
jge
push
outsb
mov
and
cmp
loop
add
enter
lret
jns
aam
cmp
mov
dec
cmp
lret
inc
mov
xor
pushf
lock
cli
xchg
addr16
cmp
mov
xor
add
test
lods
inc
stc
push
mov
adc
push
fdecstp
push
mov
dec
pop
pop
sahf
jge
mov
mov
dec
pop
lea
popa
cmp
out
add
ljmp
inc
sub
nop
pop
cs
ret
push
jne
mov
jg
sub
subl
repnz
aam
inc
pandn
loope
aaa
or
mov
nop
xlat
mov
ret
push
jp
fldenv
sub
int3
cs
test
and
mov
andb
test
jae
mov
loop
fistpl
and
mov
into
subl
and
mov
sbb
mov
xchg
dec
fwait
cmp
jns
push
mov
add
std
push
fstl
adc
add
in
add
push
mov
cld
ss
or
adc
js
fldcw
adc
jmp
push
clc
xor
and
sub
push
mov
in
mov
aaa
outsl
push
sbb
aad
adc
xchg
jns
xlat
jae
lods
push
sub
jne
jmp
inc
pop
cmpsl
cmp
sbb
jnp
dec
imul
push
mov
mov
faddp
inc
hlt
cmp
add
outsl
fsts
or
xor
jmp
ret
mov
aam
xor
mov
mov
mov
xchg
adc
mov
stc
mov
orb
ss
icebp
mov
sub
imul
push
pop
jmp
repz
xor
leave
push
sbb
mov
mov
jl
pop
xchg
lock
add
xchg
jge
popf
dec
in
sbb
sbbl
fldenv
xchg
jo
enter
mov
das
add
jg
xchg
xor
cmp
and
mov
ret
or
sub
int3
mov
cmp
stc
mov
and
sbb
dec
inc
notb
sub
mov
add
in
sub
jns
xchg
cmp
loop
jns
test
insb
mov
movsb
clc
inc
xlat
hlt
add
pop
push
sarb
adc
jmp
lret
sub
vorps
scas
sarb
fwait
jnp
nop
clc
sub
or
sbb
pushl
and
fdivs
daa
add
mov
addr16
rorl
loopne
pop
mov
stos
imul
cmp
push
sbb
xor
lcall
xorb
ljmp
jo
xchg
cmpxchg
lret
sub
cwtl
adc
lcall
shll
subl
pusha
mov
mov
mov
js
or
mov
xchg
sub
in
fdivl
movsl
xchg
cli
jno
and
sbb
and
jle
pop
jp
scas
btcl
xlat
mov
dec
adc
aaa
add
add
or
add
enter
popa
cs
lea
xor
imul
rorl
fistps
pop
jecxz
lahf
mov
adc
pop
mov
loopne
cmpsb
jge
idivl
adc
movsl
ret
cmp
in
xchg
sahf
mov
sysenter
pop
jp
mov
sarl
or
sub
xlat
call
xor
leave
enter
mov
std
int
das
jno
jmp
outsb
shlb
xor
inc
sbb
xchg
iret
cs
iret
or
mov
mov
sbb
sub
mov
add
xor
lock
jns
popf
jne
fcmovne
cltd
shrl
shll
pop
cmp
cmp
shlb
mov
lods
jne
mov
jb
fildl
jb
mov
inc
xlat
fs
xchg
call
jae
jb
les
xchg
xchg
stc
outsb
xlat
push
push
cmp
fistl
iret
and
ja
into
gs
fisttpl
jmp
push
fucom
add
popf
insl
xlat
adc
or
movsl
mov
movb
into
fxch
lahf
mov
mov
push
rcll
mov
mov
cmp
add
nop
xor
ds
xor
in
mov
scas
shll
popf
sub
loop
add
jno
pop
inc
inc
jb
and
leave
lret
lret
repz
std
std
push
xchg
pop
out
into
cmc
imul
sbb
ret
jns
cmp
cmpsl
and
inc
push
hlt
push
jmp
bound
or
pop
flds
loopne
push
or
std
nop
fimuls
cmp
stos
xor
add
pop
pop
imul
nop
jns
ror
mov
add
ja
or
xlat
pop
xchg
hlt
jg
frstpm(287
push
xchg
inc
movsl
fcomps
ljmp
lret
mov
adc
out
insb
ds
sbb
jle
in
ss
jp
adc
xchg
pop
xlat
mov
lods
stc
cld
push
sbb
out
aad
dec
and
push
out
out
popa
cwtl
sti
mov
cmp
push
jns
inc
test
xchg
pop
je
outsb
mov
pop
mov
pop
sbb
mov
add
lcall
imul
jbe
add
dec
pop
xchg
and
fistpll
inc
stos
repnz
int3
inc
out
add
xor
jp
lock
push
sub
cmp
sbb
imul
jbe
mov
cmp
shrl
push
inc
inc
fcmovnu
adc
xor
int
xor
jnp
inc
popa
scas
push
dec
or
mov
das
ljmp
mov
fldl
scas
xor
dec
jns
jne
adc
aad
dec
xor
push
js
mov
dec
pop
fistl
idivl
pop
int
popf
xchg
mov
jns
sbb
sbb
xchg
idiv
push
iret
sub
test
lahf
aaa
xchg
leave
test
mov
jo
mov
push
mov
addr16
dec
sub
inc
out
sbb
dec
mov
faddl
incl
repz
jle
or
pop
pop
dec
in
push
pop
or
mov
inc
jno
mov
xor
dec
test
mov
rorb
pop
loope
mov
xlat
mov
mov
mov
stc
and
adc
pop
pop
icebp
loop
enter
mov
or
mov
je
test
dec
xlat
push
cmp
aas
test
sub
adc
xchg
mov
mov
hlt
mov
push
fstpt
mov
push
xchg
jo
add
mov
sbb
lods
cmp
ret
dec
dec
enter
ret
hlt
adc
sub
lods
mov
lahf
mov
addr16
pop
ds
dec
sub
cmp
imul
jb
add
mov
adc
hlt
popa
repz
push
mov
iret
mov
subps
dec
fwait
cli
hlt
dec
mov
sbb
jnp
inc
mov
stos
mov
repnz
dec
cmp
fsubrs
cwtl
aad
jp
fnop
std
stos
jp
add
lock
push
adc
lret
repnz
adc
and
mov
test
sbb
mov
lret
mov
cwtl
pop
mov
adc
fsubrs
imul
imul
inc
mov
pop
xchg
lock
xor
jp
fimull
orb
test
iret
nop
push
shrb
js
lods
and
test
fnstcw
insl
xor
cmc
mov
pushf
std
fmuls
sti
jg
or
fdivl
mov
rcrb
adc
cwtl
lret
and
mov
aaa
cs
jmp
push
je
js
fcmovnu
inc
sti
jmp
or
xlat
aas
xchg
dec
popf
jp
fstps
clc
movsl
push
mov
mov
sarb
and
push
adcb
mov
rcrb
xchg
jecxz
test
mov
mov
xor
xorl
loope
jbe
cwtl
sahf
push
jo
push
and
jo
sbb
push
ret
inc
cmc
sub
imul
xor
sbb
int
dec
adc
adc
mov
jle
js
les
lcall
pop
mov
mov
shr
outsl
ret
imul
push
sub
in
add
test
fisttpl
lahf
add
add
and
out
movsb
add
cmp
fisubl
pop
push
lret
sti
push
pushf
fidivrs
testl
mov
and
push
sbb
shll
ss
sahf
arpl
and
sbb
jmp
jecxz
loope
pusha
push
int3
stos
push
mov
dec
add
popa
iret
dec
mov
cmp
jmp
or
dec
frstor
test
subl
xchg
test
add
or
mov
push
ds
dec
sub
nop
cmc
push
push
cli
inc
pop
push
scas
mov
sbb
mov
sti
aas
add
mov
push
in
xor
jnp
or
icebp
mov
emms
shrl
rcrb
adc
or
lret
orl
test
dec
fcoml
add
sub
sub
mov
push
lods
jmp
jns
loope
cmp
stc
add
adc
jns
idiv
mov
xchg
flds
cwtl
xchg
jno
xchg
xor
stos
mov
xor
xchg
push
and
pop
data16
rol
mov
mov
andb
sbb
mov
std
xor
test
jp
fidivrl
cmp
outsl
inc
sub
les
pusha
xor
push
add
stc
mov
imul
xor
iret
stc
lahf
ret
roll
cmpl
iret
lahf
xor
test
addr16
cmp
bound
loop
xchg
pusha
in
in
cmp
les
mov
cmpb
movsb
push
cmc
add
lahf
leave
inc
or
inc
cmp
aam
pop
test
xor
mov
sbb
and
mov
pop
imul
and
dec
mov
gs
test
adc
sub
add
call
mov
mov
cltd
andl
xchg
repnz
push
call
js
mov
xchg
out
test
pop
xchg
aam
into
xchg
and
push
aas
loopne
ljmp
lea
push
push
cld
addr16
inc
mov
adc
cmc
cwtl
mov
data16
cwtl
lret
jno
out
loope
push
imul
fcoml
xchg
mov
fldenv
mov
push
jl
subb
addb
movsl
leave
jmp
pop
sbb
cs
add
mov
fidivl
in
arpl
pop
sub
sub
adc
cmp
push
jp
lret
out
imul
xor
jmp
sbb
mov
icebp
scas
add
pcmpeqd
rorb
or
mov
push
insl
pop
mov
std
mov
adc
ret
dec
ljmp
repz
sbb
push
xorb
push
dec
xlat
sbbb
fs
addr16
dec
cmp
push
cmp
xchg
stos
mov
clc
cmp
addr16
add
mov
sahf
jae
xchg
ja
and
mov
xchg
out
add
dec
pop
in
cmp
push
bound
sbb
mov
cmp
popa
and
jecxz
or
cmp
adc
std
nop
sub
xchg
sti
test
inc
and
bound
loop
sbbb
loop
leave
scas
mov
inc
dec
and
out
inc
push
xchg
xor
and
in
addb
shl
xor
xchg
push
aas
fisubl
pop
push
pop
ret
xchg
jmp
inc
dec
mov
clc
pop
cmp
addr16
xor
dec
stc
adcb
arpl
xor
sbb
pop
xchg
xchg
movsb
es
daa
std
cmpsl
sub
mov
stc
or
pop
inc
jne
dec
mov
arpl
sbb
xor
inc
lcall
sbb
dec
pop
movsb
lahf
lahf
pop
dec
nop
sub
fxch
std
push
test
and
adc
push
bnd
and
sub
sub
push
mov
fwait
or
in
pop
int3
jg
sbb
push
sbb
cs
out
push
cli
neg
push
sbb
jno
cmp
cmp
lea
dec
mov
lret
cmp
cmp
stos
lret
lret
je
mov
cmp
xchg
inc
cld
jmp
sbb
add
imul
mov
aaa
mov
mov
cmp
ljmp
mov
insb
test
lret
fldlg2
pusha
sbb
dec
lahf
pop
mov
mov
shrl
mov
inc
add
scas
out
or
push
ljmp
test
dec
popa
adc
les
xor
std
daa
mov
sbb
push
icebp
xchg
scas
xchg
cmp
mov
xor
push
out
adcl
mov
mov
sub
stos
loope
js
sbb
outsb
loopne
lret
cmpsl
test
pop
jns
sbb
fistpl
xchg
test
push
lret
dec
xor
imul
aam
adc
dec
stos
and
shrl
cltd
out
fwait
cmpb
test
xchg
pop
ja
imul
pop
mov
fldl
sub
mov
sahf
pop
rclb
cmpb
je
pop
push
add
pop
shll
ds
inc
push
sbb
les
out
scas
xchg
mov
jo
mov
and
or
fdivr
pop
push
das
or
repz
cs
lea
movsb
or
sbb
mov
sub
xchg
or
push
dec
dec
push
pop
mov
addr16
dec
ja
pop
ret
gs
ljmp
mov
push
cmp
pop
mov
dec
sub
dec
or
cmp
iret
xor
push
inc
lcall
push
fidivl
jns
mov
mov
ljmp
popa
std
pop
add
enter
jle
nop
mov
data16
sub
and
and
xlat
cmp
movsb
xchg
dec
scas
shrb
scas
in
and
pop
xor
cmp
int3
xlat
stos
and
fsts
or
ja
cli
add
mov
repnz
cmp
push
jae
rclb
adc
sbb
mov
jns
mov
sbb
sbb
dec
sbb
mov
test
or
lret
pusha
sbb
sahf
out
xorl
add
pushf
movsb
sub
fdivrs
jae
and
pop
mov
cmp
xlat
and
mov
sbb
repnz
ljmp
and
std
faddl
and
fldenv
sub
pop
out
enter
outsl
adcb
sub
and
cli
mov
adc
int
add
cmp
fildl
jbe
mov
int
test
jg
mov
push
shrl
lret
and
mov
mov
ljmp
or
lock
xchg
dec
mov
leave
sbb
mov
push
xor
jns
mov
sbb
aam
jp
sbb
mov
add
test
call
cld
and
aas
shrb
mov
pop
imul
jo
stos
xchg
fisttpl
int3
stos
add
nop
xchg
mov
cmpsl
aaa
pop
adcb
xchg
xchg
pop
mov
stos
imul
xor
mov
pop
push
stos
jnp
movsl
push
cmp
nop
push
jl
out
sahf
mov
aad
out
xchg
lahf
ds
inc
sbb
inc
xlat
jno
jp
pushf
addr16
dec
neg
dec
xor
xchg
ss
sti
mov
mov
or
dec
mov
mov
dec
fidivrl
xlat
shrb
hlt
lret
pop
iret
lea
jnp
cmpsl
test
js,pn
pushf
add
js
cld
adc
ds
nop
mov
push
data16
repnz
mov
xchg
push
and
push
nop
mov
addr16
mov
ss
pop
ret
cmp
xchg
fwait
inc
adc
and
inc
pop
sbb
sub
mov
fcmovne
shlb
xor
std
sti
ficomps
cmp
scas
jnp
fnstcw
mov
mov
neg
andb
pop
pop
and
mov
rcl
inc
les
call
and
mov
es
cmpsl
jecxz
xor
sbb
mov
lods
and
push
mov
push
jae
pop
mov
ret
mov
sub
push
xlat
std
daa
jns
fcomps
add
and
sub
push
cld
fldlg2
sbb
and
sub
stos
cwtl
mov
out
cmp
push
sub
les
inc
lret
xchg
jno
fstl
cmc
push
mov
xchg
lahf
into
mov
imul
leave
jns
and
xchg
mov
pop
ljmp
iret
jb
push
cld
mov
cmp
dec
xchg
xor
cmpsl
jne
mov
int
stos
lock
xchg
push
jns
flds
scas
in
add
push
ret
pop
stos
xchg
adc
and
mov
pop
push
push
jle
scas
cmpsb
sub
jmp
fsubrs
aad
dec
mov
pop
inc
push
cmp
jl
mov
cli
or
js
jp
push
shl
pusha
adc
cmpsb
mov
jae
or
cli
fsubs
repnz
xor
mov
jmp
les
out
mov
ja
jns,pt
hlt
xchg
sub
popa
mov
jecxz
daa
inc
arpl
ja
xlat
imul
sub
out
push
mov
mov
mov
das
xorb
ret
pop
push
mov
xchg
push
pop
adc
jge
fiaddl
je
fimull
mov
cmpsl
std
stc
fdivp
call
cmp
sub
xor
rcr
ja
dec
adc
push
sbb
sbb
out
data16
xor
repnz
shlb
notl
sti
jge
div
pop
push
fldt
sarl
stos
cli
jnp
fptan
xor
and
jge
pop
mov
inc
or
fidivl
jle
fistpl
mov
popf
fpatan
xor
mov
jmp
jp
fsts
xor
out
mov
sahf
std
int
or
sbb
xlat
jae
nop
dec
stos
outsb
cld
mov
test
mov
loop
and
xlat
jmp
pop
mov
mov
and
in
dec
imul
jbe
add
dec
fldcw
and
pop
sub
cli
fmuls
xchg
dec
mov
or
loopne
out
jge
sub
stos
xlat
mov
out
fcmovnb
add
mov
xor
imul
xchg
inc
insb
enter
addl
leave
push
imul
cmpl
dec
jb
xlat
sbb
test
mov
xchg
pop
jp
cmp
dec
mov
dec
xchg
or
xlat
in
fdivrs
jne
fnstenv
xchg
je
ret
cltd
sti
cmpsl
jge
pop
enter
pushf
sub
imul
push
sub
cwtl
in
jnp
cmp
sub
stc
pop
lret
xlat
in
mov
ret
push
inc
jns
dec
and
add
add
add
out
lea
jns
call
jl
mov
js
mov
dec
mov
cli
mov
push
sub
xlat
in
jns
test
dec
push
bound
cmpsb
push
pop
out
jnp
call
push
cld
sbb
mov
call
pop
cltd
ds
pusha
pushf
lock
pop
loopne
or
pop
or
cmp
mov
dec
jge
pop
mov
xor
mov
stc
hlt
inc
idivl
lods
fists
jb
sbb
xor
add
or
jne
mov
mov
xlat
add
adcb
dec
nop
mov
arpl
jae
mov
adcl
cmpsl
jmp
sbb
xchg
pop
dec
int
inc
mov
sub
cli
in
cmp
aaa
inc
jnp
push
ficoml
dec
mov
cmpsl
xchg
pop
push
push
rcl
dec
pop
mov
pop
adc
andl
lock
dec
cmpsl
mov
dec
call
xchg
dec
fwait
rorl
aaa
das
adc
jno
xchg
sahf
pop
xor
ja
inc
xor
out
cli
xchg
popf
cmp
ficoml
cwtl
lea
sahf
or
mov
imul
add
adc
ret
jb
clc
repnz
cmp
sub
jne
call
popa
add
ja
and
decb
aam
iret
xchg
xlat
fwait
or
mov
rcrl
sbb
ja
pushf
xor
push
fld
mov
add
enter
je
popf
inc
pop
and
xlat
idivb
fldenv
mull
imul
insl
fistpl
and
ds
hlt
mov
jae
xor
xchg
out
xlat
inc
xor
das
lea
push
cltd
cmpb
das
mov
mov
mov
cmp
std
sub
cmp
push
mov
and
pop
push
xor
sub
xchg
pop
sub
cmpsb
inc
pop
mov
shlb
xchg
std
cmp
test
aaa
push
jae
mov
mov
sub
shll
jbe
call
outsb
sbb
xchg
adc
movsb
sar
lret
cmp
sbb
push
adc
jne
pop
aad
andl
xchg
pushl
sbb
movsb
mov
sahf
stc
dec
ror
sub
cmpsl
sub
pop
cmpl
sbb
push
mov
cld
shlb
or
jg
inc
mov
add
push
clc
push
mov
xorl
cs
adc
cmp
dec
push
in
sub
add
ljmp
sbb
test
lahf
sbb
call
jp
fildl
imul
mov
adc
loope,pt
hlt
pop
scas
xchg
imul
mov
xchg
sbb
jae
rcll
imul
push
lret
xchg
mov
sub
and
sbb
sub
dec
cmpsl
repnz
ljmp
int3
sbb
or
fiadds
push
ficomps
and
imul
testb
call
adc
ds
fs
push
std
cmp
adc
loope
repz
lock
pop
pop
xlat
inc
in
adcb
adc
jns
xchg
add
scas
xchg
adc
fisttpl
mov
xor
push
mov
lret
dec
jb
dec
push
shlb
pop
gs
sub
aas
daa
aad
and
jg
in
xor
mov
call
and
ficoml
xor
clc
stos
xor
xor
popf
lret
dec
jnp
outsb
dec
lcall
imul
dec
or
stos
int3
loopne
dec
jne
adc
push
rorl
mov
cltd
xchg
enter
aas
and
lcall
shll
or
jg
jo
movsb
mov
push
stc
push
or
xlat
or
nop
fldl
out
mov
dec
inc
and
pop
mov
cmpsb
insb
in
in
jnp
rorl
mov
sbbl
and
sbb
push
pop
stos
popf
pop
inc
in
cwtl
aaa
sub
xchg
push
jo
shll
loop
popa
dec
lret
and
mov
xor
mov
mov
divl
icebp
pop
aas
mov
shl
test
and
test
mov
cmc
add
xchg
enter
fwait
addl
jb
cltd
jg
dec
inc
mov
push
lods
ret
cmp
ret
push
or
imul
data16
sub
adc
cmpsb
cmp
mov
bound
inc
stc
stc
adc
enter
jmp
pop
inc
mov
sti
sarl
xlat
mov
mov
out
mov
imul
mov
cmp
cld
test
mov
inc
xor
lahf
pop
out
mov
jecxz
fs
sub
stos
loope
pop
inc
in
fsub
jmp
adc
push
repz
mov
add
cltd
in
ror
and
xor
repz
stc
dec
loope
cmp
pop
lods
mov
pmovmskb
and
cs
xor
xlat
push
mov
mov
ja
inc
out
mov
push
mov
xchg
stc
aam
stc
cmp
daa
cmc
push
sti
imul
mov
cli
mov
mov
icebp
inc
adc
add
rclb
add
sub
enter
das
push
int3
cwtl
roll
mov
das
add
push
mov
call
xlat
add
inc
imul
xor
repnz
inc
loope
push
xor
stos
inc
lcall
pop
sbb
sbb
xchg
xlat
clc
outsl
add
pop
sub
fcmovnb
xchg
pop
mov
mov
jmp
sahf
pushf
push
and
jl
jae
dec
fwait
cmp
pushl
fcomps
cwtl
test
sbb
pop
rorb
and
xor
and
fstl
stc
xchg
movsb
fidivs
sub
fdivs
cli
insb
dec
jnp
lods
rorb
push
xlat
outsb
dec
and
xchg
aad
stc
and
or
push
test
mov
xchg
cli
cmp
mov
sbb
pop
stos
jmp
dec
jmp
or
imul
or
stos
loopne
push
cmpsl
cmp
fsts
sub
jl
pusha
lods
icebp
fldt
pushf
and
and
and
inc
mov
sbb
ja
push
adcl
sub
sbb
xchg
lods
cmp
or
or
mov
cmc
xchg
dec
and
fwait
ja
fnstsw
xorb
shl
lret
pop
lea
push
aam
pop
cmpl
mov
push
xor
jge
stos
scas
ljmp
jg
sub
add
jb
pop
jge
cmp
je
scas
xchg
stos
push
mov
mov
xor
repnz
and
push
jb
sahf
adc
cvttps2pi
or
xchg
imul
cmp
mov
ja
inc
adc
xlat
negl
adc
push
enter
dec
add
mov
adcl
dec
pusha
or
cld
inc
pop
sahf
jle
inc
dec
push
dec
adcl
xor
popf
jmp
ja
pop
fldl2t
xchg
mov
insb
je
add
jmp
es
pop
cmp
pop
lcall
jne
jge
dec
and
addr16
mov
lds
mov
mov
xor
adc
std
pop
inc
and
mov
jecxz
stos
sbb
daa
daa
out
and
repz
enter
sbb
add
xor
insb
xchg
mov
mov
cmp
xor
push
xlat
repz
cmp
or
cmp
stos
xchg
and
leave
add
xor
mov
jae
mov
iret
popf
jmp
fcoms
cmp
imul
and
addr16
mov
dec
ds
imul
loop
test
fldt
xor
movsl
fsubrs
cmpsl
jae
les
pop
push
shrb
xor
xchg
xlat
jb
ret
xor
shrb
sub
cmc
js
xor
outsb
sub
push
cmp
mov
jp
xlat
and
int
xorl
sbb
ljmp
cmpb
cltd
mov
ret
add
daa
sbb
adc
cwtl
dec
fmuls
cmp
mov
xor
xor
outsb
push
jno
and
icebp
sahf
les
test
jno
outsl
sbbl
push
and
lcall
dec
jp
into
sub
insb
pop
leave
ret
repnz
es
fdiv
movsl
pusha
test
outsb
xchg
shl
cmp
testl
test
out
cmp
mov
cmc
xlat
xchg
pop
rcr
sub
adc
shrb
inc
cwtl
js
push
pop
sub
stc
cli
fsts
cmp
fcoms
sbb
pop
jns
lahf
mov
jg
das
test
lret
jnp
fldcw
xchg
in
sbb
adc
pop
stos
jnp
pop
aam
testl
roll
in
adcl
popl
popf
xchg
xchg
lods
push
outsl
int3
lret
imul
je
scas
mov
das
sbb
fdivp
aad
jns
sub
mov
movsb
jmp
push
xchg
cmp
lea
scas
cmp
es
cltd
pop
lea
sbbl
shll
shll
mov
ficoml
and
psubd
cs
dec
xor
out
psubsw
jbe
rep
xchg
xchg
stc
out
fwait
in
dec
les
fsubp
or
addr16
inc
jae
dec
cli
push
fxtract
mov
cmp
xchg
mov
ficoms
cmp
inc
imul
fidivrs
push
das
hlt
xchg
hlt
push
ljmp
xlat
gs
push
mov
sbb
fwait
andb
dec
push
sub
or
test
jnp
cmp
and
mov
lods
out
cltd
or
adc
fldenv
in
mov
cmp
cmpsl
dec
fbstp
pop
push
js
and
scas
stc
push
lods
pop
cmc
jp
push
push
mov
fs
call
xchg
xor
shlb
lock
xor
jnp
jle
add
xchg
mov
mov
xor
push
jb
test
xchg
mov
orl
jae
clc
aam
in
xlat
cmp
fcmovnbe
pop
or
mov
iret
adc
jb
pop
xchg
xor
add
mov
sub
fsts
ljmp
ja,pt
dec
or
mov
sbb
pop
mov
and
mov
adc
data16
ficoms
mov
dec
inc
dec
jp
xlat
mov
cli
js
call
rcll
movb
add
mov
mov
fstl
mov
lcall
cmp
xchg
jmp
mov
pop
cmp
adc
test
xchg
test
nop
sahf
mov
push
cmp
dec
dec
pop
insb
mov
jns
lock
and
mov
lea
lcall
clc
sub
insb
and
and
ds
xor
addr16
cwtl
movsl
daa
sti
pop
es
daa
push
adc
ja
cwtl
cmpsl
jno
jle
repnz
inc
dec
fwait
mov
jne
into
aam
scas
cmp
les
xchg
xchg
pop
call
lcallw
mov
jne
sbb
xchg
push
add
and
arpl
fs
popf
push
notb
fcoms
and
pop
les
mov
loop
mov
xchg
dec
mov
xor
out
add
cmpsl
int
js,pn
push
fisttpl
test
sub
xlat
xchg
lcall
lret
jge
inc
inc
sub
xor
call
pop
sbb
stc
bound
sbb
test
jp
pop
mov
ja
pushf
sub
aas
xor
out
pop
push
mov
icebp
cli
pop
and
dec
scas
popf
imul
sub
sahf
push
and
cmp
addl
and
loopne
dec
mov
and
pop
daa
and
adc
das
jae
fsts
pop
jecxz
sub
jbe
push
mov
jnp
in
xor
lock
jo
dec
stos
sbb
push
rorb
cmpsl
bound
jnp
dec
jge
fldenv
icebp
sarl
jae
mov
mov
movsl
ficompl
ds
and
mov
scas
sti
cmc
mov
push
push
std
sub
or
enter
or
fs
and
outsl
adc
mov
xlat
mov
mov
push
push
in
jg
bound
jne
mov
xchg
nop
dec
push
in
ja
pushf
scas
test
cltd
push
push
sbb
ret
inc
stos
gs
sbb
mov
or
mov
std
mov
inc
pop
or
xor
adc
push
hlt
movsb
sbb
dec
push
jp
js
push
cli
add
mov
fs
out
mov
nop
lods
pusha
cli
inc
mov
sub
test
xlat
dec
push
fcmovnu
inc
jb
jmp
cld
or
aam
fnclex
enter
notl
dec
or
ret
and
outsl
cli
xlat
mov
lret
pop
sub
xor
xlat
sbb
mov
push
lods
xor
pop
sti
jp
scas
ss
out
sub
cwtl
sbb
sbb
mov
iret
lret
sub
sbb
inc
pushf
jmp
pop
push
fistps
cld
imul
cmc
imul
std
and
stc
test
dec
cmp
cmpsl
out
jmp
sbb
fisttpl
aad
cmp
cs
and
je
negl
outsl
xor
dec
push
icebp
sub
xchg
mov
pop
mov
pop
inc
xor
dec
add
andl
gs
addr16
cmp
mov
sub
imul
sub
dec
addr16
push
jb
xor
jecxz
sub
js
les
cmp
push
addr16
or
cmc
outsl
mov
sbb
pop
and
fwait
inc
cmp
out
xor
mov
test
cwtl
outsb
xlat
gs
ja
mov
mov
dec
in
push
mov
cwtl
add
jmp
lahf
sub
add
das
inc
fsubs
mov
in
push
scas
pop
pop
pushf
push
pop
fsubrp
xor
fiaddl
imulb
and
arpl
cmp
nop
and
daa
shll
cmc
jge
jno
jl
inc
movsb
adc
or
mov
ficoms
stc
insb
mov
adc
cmovge
xor
fisubs
int
out
popf
cwtl
inc
lret
rcrb
mov
push
sbb
or
jbe
and
or
call
mov
mov
add
aas
in
xchg
pop
push
jp
add
ds
push
loope
jae
dec
and
test
lret
push
mov
adc
ja
xchg
jo
jb
jmp
or
shlb
aaa
imul
add
sbb
xor
dec
mov
inc
fwait
popa
push
sbb
dec
nop
inc
jmp
mov
jmp
pushl
fwait
iret
ljmp
fmulp
les
int
fcoms
inc
mov
popaw
ret
cmp
push
cmp
push
pop
and
ljmp
adc
or
ljmp
fistpl
jle
cld
arpl
cmpsl
in
jne
test
mov
xor
les
push
iret
mov
push
mov
xchg
repz
shl
push
and
mov
push
iret
or
cld
or
mov
and
out
or
and
fildl
cwtl
ficomps
jmp
mov
scas
out
cmp
xor
or
dec
int3
jb
add
loopne
lods
pop
adc
sbb
fwait
nop
sbb
pop
cmp
and
ljmp
pop
xlat
fisubrl
and
mov
lret
xchg
mov
xchg
mov
cmp
cmp
inc
sahf
into
push
lds
push
and
bound
testb
jl
std
flds
xlat
dec
iret
mov
mov
pop
lret
sub
imul
adc
adc
mov
test
mov
xor
jl
dec
inc
fwait
sub
insl
inc
leave
fdiv
ret
mov
rcr
cli
in
imul
sahf
movsl
xor
sbb
push
mov
idiv
xor
jns
jns
fstps
fistl
sbb
daa
push
cmpsl
mov
sub
pop
jo
nop
sub
cmp
cmp
jns
sub
stc
push
cmpsl
adc
mov
mov
dec
lcall
jle
adc
fwait
ret
adc
jbe
mov
cmp
out
xor
in
jnp
ftst
xor
and
push
push
fcmove
mov
outsb
in
sub
adc
stc
adc
add
mov
cmp
fnstcw
aad
jne
push
jae
dec
pusha
cli
fsubrs
add
xchg
cmc
mov
test
push
xchg
fsts
shlw
rcrl
pop
xchg
sbb
cwtl
imul
xor
sub
mov
gs
out
orl
stos
fcmovnu
fiadds
ljmp
push
mov
fdivp
inc
xchg
lods
jne
sbb
ficomps
stc
test
stc
pop
pop
jo
loope
add
lret
pop
sub
mov
push
sub
fimuls
cmpsl
sbb
inc
or
xchg
mov
pop
movsl
movl
cmpsb
int
popf
and
sub
xor
dec
dec
lods
cltd
test
and
icebp
mov
push
out
enter
daa
jno
dec
cmp
je
lods
jp
test
inc
jbe
sbb
jmp
in
fimuls
or
ljmp
push
adc
add
addr16
loope
pop
add
sarb
cmpsl
stos
inc
push
mov
add
lret
xchg
or
cmp
or
pop
lret
in
jo
and
insb
mov
cmp
stos
xor
les
sbb
sub
sar
jl
xchg
insb
subb
lods
fcmovnb
ja
sbb
pop
fnstenv
ja
jl
pushf
cmpsl
mov
bound
cmp
repz
dec
jg
les
int3
sbb
sti
scas
fistl
icebp
fisttpl
das
or
rorb
mov
and
pop
lea
mov
jno
je
lret
sub
xlat
shrl
push
sete
rclb
dec
movb
jp
nop
lock
icebp
push
test
push
inc
adc
xchg
sub
mov
inc
or
stc
les
or
adc
enter
fwait
mov
jns
fldpi
scas
ljmp
jl
stc
fstps
add
mov
fstpt
lret
adc
mov
scas
mov
xor
fcmovnu
cmp
xchg
aam
push
push
daa
lea
call
sbb
out
pop
jae
iret
xor
and
fnstcw
scas
mov
cmp
fistl
mov
mov
gs
add
or
sub
jno
out
in
jnp
in
push
movsb
loop
hlt
adc
hlt
aaa
pop
xlat
xor
inc
ja
call
cli
repz
ds
jne
test
or
pop
out
call
adc
mov
xchg
dec
jno
fisttpl
mov
xlat
xchg
clc
jg
rorb
fwait
scas
in
xor
iret
aaa
jecxz
sbb
shll
cli
jp
popa
or
sub
into
jecxz
push
xor
mov
cli
jmp
add
and
iret
mov
fistpl
jo
add
and
imul
mov
pop
std
lock
xor
daa
cmc
clc
mov
jp
stc
movsb
xlat
push
mov
fwait
stc
hlt
fnstcw
mov
ret
sbb
es
jmp
fistl
int3
and
xor
popa
jno
stc
lods
lret
push
xor
xlat
cmp
addl
int3
mov
cmpsl
cmp
pop
pop
aaa
cmpb
dec
mov
mov
adc
rcll
out
popa
pushf
cmpsb
jno
mov
xchg
sub
jle
insl
fistpll
test
jecxz
insb
leave
xlat
or
fistpl
stos
cmp
fldt
xor
movsb
and
mov
mov
lods
sbb
dec
mov
notl
scas
lret
fisubrl
ret
outsb
mov
mov
adc
shrl
pushf
xlat
dec
jb
fistl
sbb
adc
xor
jl
jns
out
shlb
jmp
pop
lret
xlat
sbb
cld
pop
nop
out
jns
aaa
dec
in
pop
xor
addr16
std
mov
out
dec
add
ret
insb
sti
jns
sbb
adc
pop
fyl2xp1
in
xlat
ror
repz
fimuls
mov
loopne
std
cmp
test
or
adc
or
imul
mov
adc
arpl
notb
mov
sbb
or
push
fidivrs
xchg
and
cmpl
and
xchg
pushf
mov
arpl
dec
dec
jae
iret
cmp
cmp
pop
cld
imul
mov
enter
jl
out
in
xchg
sti
mov
std
pop
mov
mov
cwtl
jge
sbb
xor
sbb
dec
adc
push
in
jb
pop
and
outsl
repz
jno
nop
or
adc
jno
cmp
nop
fisubrs
int3
jne
sbb
jnp
pop
xchg
xor
mov
arpl
mov
jne
imul
cmp
sar
and
jns
jo
das
out
and
jle
imul
ror
cwtl
loop
mov
jne
push
mov
xchg
out
out
stc
fldl
adc
insl
xor
fadds
sub
pop
stc
and
sbb
cmp
cmp
out
popf
inc
repnz
push
adc
dec
xchg
push
cwtl
int3
sbbb
mov
pop
inc
push
es
rol
adc
sahf
jns
aas
inc
adc
sub
or
push
or
xchg
fdiv
adc
mov
fcomi
into
stos
in
pop
std
or
push
and
cmovne
xchg
and
pop
test
dec
mov
mov
mov
iret
ja
dec
mov
pop
in
sarl
xchg
addr16
jbe
dec
clc
lahf
mov
repnz
push
add
or
pop
push
push
cwtl
xor
adc
pop
arpl
imul
scas
cli
or
push
push
subb
push
jae
pop
movsl
mov
lods
js
addr16
sbb
push
fisttpl
lahf
xchg
pop
jne
adcl
mov
xor
rcl
scas
rcrb
push
out
iret
inc
sbb
xchg
in
xchg
insb
inc
mov
cmpsl
call
mov
jnp
jmp
ja
cmp
xlat
push
out
xchg
or
in
pop
dec
std
mov
fstpl
dec
mov
mov
adc
jno
adc
mov
sbb
pop
push
movsl
pushf
rolb
mov
mov
xor
xor
pop
mov
dec
push
aam
push
push
sub
add
clc
cmpsb
fdivrp
int
das
dec
jns
nop
mov
data16
lret
in
lods
cmp
pop
xchg
stos
inc
sub
loopne
sbb
fiadds
adc
popa
cmpsb
imul
pushf
test
cmpsl
dec
xchg
push
lea
ja
pop
xor
sbb
push
jp
xchg
mov
mov
mov
cmp
fstps
imul
add
arpl
shll
push
sbb
xchg
push
insb
xor
fnstenv
xor
dec
fcoms
lahf
mov
and
insl
adc
sbb
adc
loopne
loopnew
out
pusha
stos
xchg
push
test
cmp
mov
pusha
sbb
dec
movsb
xor
mov
mov
shl
stc
sarb
pop
int3
lahf
jne
popf
pop
outsb
sarl
es
xchg
cli
je
sub
incb
stos
test
int3
mov
enter
add
stos
fstpt
shlb
insb
sub
xor
and
pop
dec
cmp
ja
cmp
jge
ret
jl
push
leave
ljmp
lcall
pop
stc
andb
aad
idiv
mov
mov
cmpsb
mov
xor
cmp
movsl
icebp
pop
pop
inc
mov
mov
jnp
cmp
test
shl
loopne
sub
mov
pop
pop
mov
lcall
notl
jb
mov
sub
mov
inc
ret
jbe
lret
jns
orb
mov
fadds
add
into
testb
push
xor
out
mov
data16
in
mov
je
add
cmp
jg
jno
lds
sbbl
mov
mov
and
fsts
mov
pop
sarb
cmp
xlat
daa
out
xchg
cld
mov
hlt
pop
jb
jmp
sub
loop
aam
cmp
sbb
lock
push
cmpb
xchg
call
pop
test
xchg
sub
jb
xlat
popa
xor
cmp
xor
test
cld
mov
xlat
std
dec
adc
inc
lahf
push
add
dec
xor
mov
dec
test
ds
mov
sbb
adc
pop
rclb
sahf
insl
xlat
mov
add
nop
jo
sbb
insl
xlat
repz
subl
movsb
sbb
mov
cs
rcr
xlat
inc
push
mov
ficomps
xchg
jbe
add
mov
fstpt
mov
popa
sbb
mov
or
pop
push
add
push
divb
xor
push
xchg
pop
jecxz
push
fsts
in
popl
insb
and
ljmp
inc
xlat
std
cli
jl
fwait
xlat
mov
xor
jl
mov
in
add
xlat
inc
pop
mov
test
xlat
nop
or
add
jge
pop
inc
mov
mov
mov
mov
xchg
pop
mov
xor
mov
or
mov
sub
add
movsl
mov
scas
out
or
push
add
mov
xor
xlat
stc
pop
pushf
and
push
std
jne
enter
orb
jne
flds
movsl
je
and
ds
push
pop
or
mov
dec
int3
cmp
out
xchg
xchg
sarb
scas
icebp
test
outsb
lock
int
cmpsl
lods
int3
and
mov
enter
sub
scas
push
jmp
adc
mov
imul
add
xchg
dec
push
stc
and
add
pop
jle
mov
out
or
jmp
fwait
ss
movsl
jns
pusha
jge
mov
jbe
mov
pop
inc
pop
in
or
popf
jge
mov
jmp
and
jp,pn
mov
xchg
xor
mov
shrl
adc
xor
imul
push
das
test
pop
pop
lret
fwait
jo
adc
movsl
lcall
add
xor
imul
mov
xchg
loope
sbb
and
call
xor
movsb
icebp
pop
add
aaa
fs
mov
imul
mov
or
imul
push
pop
jno
stc
push
loope
rolb
jb
fmuls
push
mov
add
pop
mov
in
push
or
mov
xlat
icebp
outsb
ljmp
or
test
jbe
push
es
dec
jne
lods
sahf
mov
or
out
out
rcr
xchg
sti
enter
and
in
push
mov
lcall
int
sub
roll
test
repz
jp
rclb
lret
test
add
xchg
ret
jno
pusha
push
cmpsl
push
jnp
fldenv
imul
and
popa
adc
aaa
and
repnz
aad
fldcw
sbb
mov
adc
fldenv
push
push
and
lods
sbb
sub
ljmp
jne
scas
mov
mov
pop
jns
pushf
mov
inc
das
adcb
mov
aad
sti
push
in
mov
cli
lods
mov
mov
dec
mov
mov
fnstsw
test
xor
xchg
dec
mov
clc
xchg
mov
cld
icebp
aas
and
imulb
in
shrl
cmp
loope
cmp
fisttpl
push
mov
jp
pop
xchg
cmp
outsb
subl
shrb
cmp
xlat
lods
in
sub
or
cmp
xlat
sbb
pop
and
xlat
bound
aad
lret
movsb
xor
jae
mov
stos
pop
adc
test
mov
nop
cld
mov
pusha
loope
mov
jnp
int
lods
fistl
mov
loopne
cltd
imul
js
bound
loope
shrb
cmpsl
xor
jae
jo
mov
push
les
int3
fisubrl
jo
fninit
rol
clc
or
sbb
xlat
push
mov
add
adc
adc
sahf
imulb
sbbl
idiv
push
adc
dec
jle
rorl
cmp
aaa
jp
out
jbe
data16
ret
out
push
mov
ret
mov
fldt
dec
and
repz
dec
add
add
mov
jmp
inc
in
cltd
pop
adc
cmpsb
sbbl
xor
call
nop
pop
shr
or
mov
push
mov
lahf
push
iret
pop
xchg
dec
aad
mov
mov
xor
mov
mov
add
lods
or
pop
or
clc
jle
add
lods
mov
xlat
pop
xor
inc
les
sbb
mov
cmpsb
enter
sub
imul
neg
push
sub
test
or
imul
dec
inc
rol
and
push
mov
or
sub
fcomi
out
cmpsl
pop
dec
push
std
or
push
andl
out
cmpb
cmovle
pop
xchg
sub
cs
cmpsl
sbb
mov
xor
xor
shr
and
or
adc
insl
insb
pop
fs
cwtl
pop
lods
int3
icebp
adc
sbb
xchg
xchg
scas
push
aad
mov
fwait
outsb
mov
test
cmp
cmp
dec
int
xchg
sbb
repnz
adc
imul
xor
imul
sarl
inc
es
cs
mov
or
add
xchg
mov
cli
daa
or
and
dec
sbb
dec
xchg
divb
sbb
dec
fcmovnu
mov
sub
scas
test
ret
out
sbb
addr16
cs
xor
push
xchg
adc
lea
sub
pop
dec
js
into
dec
cmpsl
push
cld
inc
lret
dec
xchg
mov
pop
jne
or
adc
mov
stos
std
lods
dec
ljmp
sbb
mov
pop
dec
shl
test
fwait
xchg
push
andb
mov
jae
insb
push
xchg
sbb
xchg
lcall
pop
sub
test
xlat
into
iret
mov
mov
and
xchg
stos
leave
iret
rorl
jno
mov
imul
push
das
lods
icebp
lahf
mov
push
adc
mov
fyl2x
repz
imul
jnp
andl
push
xor
imul
ds
cld
outsb
iret
add
loopne
sbbb
cld
push
pop
mov
out
sbb
xor
lods
add
push
mov
xchg
mov
rclb
mov
mov
xlat
cmpsb
inc
jp
in
adc
int
and
mov
js
outsl
mov
and
jb
push
xlat
orb
and
imul
iret
aas
xlat
movsb
sbbl
mov
andl
push
out
jbe
loope
decl
mov
add
out
out
ja
aas
rolb
mov
sub
cli
mov
inc
jne
std
mov
push
out
addr16
mov
stc
push
push
repnz
movsl
cmp
pusha
stos
into
mov
mov
adc
cmc
and
cmp
cwtl
into
sbb
fs
push
inc
dec
mov
pop
push
cmp
imul
shrl
enter
mov
xlat
dec
and
adc
or
dec
push
mov
fimull
negl
cmp
mov
rcrl
push
xchg
pop
inc
jno
sti
mov
dec
push
cmc
jns
xlat
ror
xchg
decl
or
js
mov
std
sub
lds
test
gs
jo
mov
xchg
mov
inc
scas
addb
enter
fisttpl
cmpsb
jnp
mov
fisubrs
mov
adc
enter
jecxz
jp
insb
xchg
stos
jne
pop
push
pop
pop
test
sarl
adc
xor
sarb
sbb
lret
ror
cmp
mov
rolb
mov
jne
mov
dec
add
cmp
push
mov
scas
jecxz
imul
iret
test
push
pop
add
out
or
pop
pop
pop
sarb
xlat
xchg
jns
lret
mov
js
shll
imul
mov
mov
int
adc
dec
and
mov
psllw
pop
or
sbb
adc
addb
jb
add
aad
jp
mov
xor
movsl
loope
mov
and
cli
not
mov
adc
inc
and
repnz
lret
add
sbb
das
in
scas
mov
mov
cmc
cwtl
pop
stos
mov
adc
jge
or
in
arpl
repnz
test
push
movzbl
push
dec
and
mov
push
sub
stos
mov
dec
fcompl
arpl
out
nop
notb
jecxz
pushf
pop
pop
mov
out
mov
dec
pushf
fdivl
shl
jecxz
fistl
push
jl
xor
xchg
int
cmp
and
jp
push
movb
jmp
jae
fildll
mov
les
cmp
or
xlat
ficoml
and
sti
push
adc
dec
and
sbb
repz
mov
mov
arpl
aas
push
push
cwtl
test
push
dec
mov
andb
pop
sub
mov
aas
xor
mov
add
mov
sti
flds
test
cmp
push
xlat
dec
jge
clc
shrb
dec
push
pop
fldt
aam
xlat
es
pop
outsl
jbe
fcmovnb
mov
dec
flds
sbb
push
push
cld
cmp
xlat
fistpl
sub
aaa
push
mov
rcrb
mov
loopne
push
push
inc
scas
push
inc
jmp
pop
dec
xlat
sbb
js
xchg
xchg
iret
mov
sub
je
xlat
roll
sub
fld1
sbb
push
mov
xlat
sub
pop
inc
mov
enter
xchg
dec
inc
pop
mov
fldenv
pop
fwait
push
jge
adc
lret
jmp
leave
js
add
add
lcall
add
je
inc
lret
and
xchg
mov
aaa
mov
xchg
dec
fisubrl
arpl
mov
imul
push
jle
push
xor
lea
jno
fildl
mov
add
sbb
cltd
push
and
cmc
fcmovnbe
paddsw
stos
std
jnp
daa
js
notl
cltd
ja
mov
jnp
sub
pop
add
fadd
pop
push
rclb
dec
in
lret
out
or
loope
inc
dec
add
in
neg
sub
jbe
test
lea
push
jo
addr16
cmp
xchg
jno
hlt
pop
xchg
push
cld
imul
mov
sbb
fistpl
jne
iret
jne
ret
cmp
cmc
cmp
std
negb
cmp
ret
sub
pusha
add
pop
enter
mov
lahf
mov
fcmovnbe
jb
jg
shll
imul
mov
dec
inc
sub
add
ret
mov
push
jo
fadd
xchg
int3
mov
les
imul
test
cmc
xchg
rclb
jnp
sub
sbb
or
sub
xlat
sahf
flds
lahf
jle
fsubrl
jge
mov
pop
fldl2t
pop
dec
pop
cmp
adc
jl
mov
add
sub
test
and
jle
xchg
fdivl
stos
jnp
sub
out
and
scas
or
ljmp
cmp
and
ficompl
jo
mov
mov
inc
sub
adc
cwtl
flds
mov
stc
mov
jns
lods
shrl
push
lea
sbbl
push
je
pop
xchg
movsb
mov
sub
rorl
outsb
mov
paddusw
cmpsl
insb
test
mov
fnstcw
bound
dec
push
and
mov
and
add
aam
out
jns
out
pop
lret
dec
in
dec
add
mov
mov
fildl
fpatan
jne
repnz
push
sbbb
es
imul
mov
xor
push
cmp
mov
std
dec
or
gs
xor
icebp
lret
and
xlat
movb
sbb
popa
cltd
cmp
jle
fwait
into
fsubrs
aad
and
sub
jns
jle
adc
cmp
fsts
push
fisubrs
add
andl
mov
and
aam
cmp
mov
aad
pop
stos
pop
subl
test
jg
sub
ret
xor
mov
inc
or
mov
loopne
out
lret
mov
jbe
mov
mov
insb
orb
adc
xchg
int3
cmp
nop
mov
sbb
test
icebp
adc
jne
push
and
daa
sbb
and
or
dec
xchg
jo
mov
jno
clc
mov
push
xor
inc
cmc
enter
imul
mov
add
test
ljmp
jg
test
cli
out
fisubrl
fadd
adc
and
jle
add
js
insb
fists
rcr
notb
or
and
adc
sub
cli
ss
das
cmpsb
mov
cmp
xlat
jae
cmpsl
mov
repz
mov
and
pop
pop
cli
or
jp
test
and
mov
into
stos
clc
fwait
outsl
mov
inc
gs
mov
inc
xchg
jns
jo
sti
push
in
jl
sbb
sbb
sub
xlat
imul
psubw
movsb
inc
pop
lcall
jp
xchg
adc
lret
outsl
inc
and
mov
adc
movsb
xor
adc
sub
stos
xlat
mov
stc
or
sub
dec
xor
hlt
xchg
dec
rclb
cmp
ja
xchg
out
jecxz
mov
add
test
aas
push
cli
cmp
add
jae
fistps
inc
int3
cltd
ret
les
cmpsl
and
pop
addr16
jns
call
push
pop
sbb
inc
mov
fcomip
nop
pop
fistl
popf
les
add
dec
adc
test
and
cmp
lahf
jns
xlat
mov
adc
add
xlat
xchg
stos
sti
push
enter
sbb
xor
mov
lds
xchg
jge
jbe
out
popa
in
divb
insb
add
mov
daa
aas
jns
and
push
xor
and
and
add
mov
xor
adc
ja
push
sar
aam
movsl
jmp
xlat
fdivs
mov
imul
insl
mov
dec
dec
inc
sbb
add
insl
adc
and
add
daa
sbb
push
jno
cmp
orb
jle
dec
lret
testl
xor
cmp
mov
push
out
dec
pop
jnp
pop
and
or
mov
mov
dec
adc
and
jbe
ds
xchg
jmp
sbb
mov
and
or
jl
ror
mov
mov
xorl
leave
repz
fisubrs
scas
xchg
fistpll
xor
jns
or
arpl
popa
jae
fnstcw
pushf
aad
xchg
add
cmp
stos
mov
nop
popf
xlat
add
push
dec
and
adc
out
dec
xor
cmp
and
fnstsw
aaa
in
push
ss
ret
adc
scas
sbb
loop
cmpsl
mov
js
mov
pop
dec
mov
scas
jbe
sub
pop
int
dec
xor
and
add
arpl
jp
xchg
rcll
dec
cmpsl
pop
mov
xor
inc
mov
jle
mov
jno
pop
orb
ret
jae
sbb
push
inc
push
lahf
int
mov
pop
mov
adc
and
cmp
sbb
dec
jae
sub
leave
out
je
jb
mov
es
scas
scas
icebp
dec
xchg
dec
aam
xor
stc
adc
mov
sub
xlat
xor
addb
push
push
imul
adc
dec
push
pop
les
adc
fildl
stos
add
and
outsb
jno
das
mov
cmpsl
xchg
fldt
nop
neg
mov
imul
xchg
push
repz
int3
inc
pop
mov
xor
ret
dec
leave
lods
loop
mov
lea
sbb
sub
lock
in
out
mov
push
mov
repnz
ret
std
push
cmp
and
daa
mov
mov
fistpl
xchg
fisttpl
dec
repnz
xor
shrl
dec
jnp
fninit
icebp
dec
mov
in
mov
aam
jne
rorb
sub
mov
mov
cmp
mov
cli
sbbb
cli
popa
fdivl
jnp
dec
add
xlat
lods
jl
mov
int
fstp
pop
pop
sbb
add
pushf
push
enter
mov
stos
scas
cmc
and
out
ret
mov
das
xchg
lahf
mov
xchg
pushfw
sbb
or
insl
mov
stos
pop
lret
pop
cli
xchg
dec
rcrl
pop
sbb
pop
addr16
and
mov
push
add
and
push
repnz
mov
imul
lds
xchg
mov
cmp
mov
xor
xchg
popf
aad
sub
stos
xor
pop
gs
mov
cld
push
sub
aad
add
lret
mov
sub
rcrl
push
push
popf
aaa
dec
out
std
xor
push
mov
pushf
sahf
mov
fimuls
and
and
sub
push
or
sub
out
fwait
pop
push
and
lods
mov
xchg
cld
es
or
mov
jno
cli
sarb
and
sbb
fdivp
and
fwait
ret
cmp
pushf
and
rcr
jge
loop
adc
dec
xchg
cmpsl
pop
inc
outsb
dec
imul
or
outsl
cmp
inc
mov
pop
mov
mov
lcall
imul
dec
je
fildl
jge
fbld
jnp
fnstcw
subb
or
and
mov
push
ljmp
aad
or
int3
add
jns
fprem
aas
js
push
fldt
mov
or
fsubl
les
imul
xor
cwtl
mov
sub
jno
dec
sbb
jp
fdivs
sbb
jp
xlat
push
or
cs
pop
int3
js
dec
jno
insb
hlt
mov
add
mov
clc
sub
jg
mov
gs
lods
repnz
jns
pop
stc
pushf
add
dec
testl
fstpt
fcomi
and
gs
xchg
xor
js
xlat
cmpsl
andb
sub
dec
lahf
sbbb
movl
xchg
fisubrl
xchg
xchg
xchg
repnz
xor
push
js
dec
int
andl
xor
sub
mov
fwait
lock
xlat
mov
mov
mov
jbe
stos
jp
sarb
scas
xor
mov
mov
mov
jne,pn
pop
ds
nop
mov
add
imul
fidivl
push
lods
aaa
bound
lret
cmp
and
xor
inc
sti
sbb
rcr
add
dec
dec
add
mov
cmp
jno
sbb
pop
ret
loope
and
and
jno
jl
cmp
pushf
shrl
mov
jl
cmp
das
lahf
and
jb
push
test
xor
jge
imul
lds
imul
jno
sub
cmp
and
xchg
inc
adc
ljmp
dec
mov
dec
xchg
push
pushf
loop
mov
xchg
xlat
inc
jb
adc
or
xchg
jge
sbb
les
jno
adc
lahf
clc
mov
cwtl
outsl
dec
repnz
xor
and
xor
decl
inc
jge
mov
dec
roll
mov
lea
call
cmp
ds
mov
sub
or
shll
and
add
mov
dec
shlb
dec
rcrb
inc
xchg
mov
xchg
sub
mov
mov
sbb
push
push
or
push
insl
aas
jae
call
je
jns
jl
jno
jp
adc
aad
xchg
hlt
and
lret
mov
push
stos
xlat
fisubs
lods
cs
fists
mov
test
les
movsb
pushf
pop
or
xor
repnz
xor
xchg
fstpt
adc
aaa
sbb
pushl
outsb
repnz
pop
pop
add
inc
fidivs
or
pop
sahf
fdivrl
sub
pop
ds
xor
fsts
adc
sub
or
dec
lock
mov
sbb
mov
jecxz
inc
loope
sbb
imul
addr16
stos
mov
ja
cmp
mov
outsl
pop
cwtl
notb
lea
fstps
ret
mov
push
imulb
loop
mov
sbb
pop
icebp
xchg
aad
bnd
add
pop
jp
test
repnz
jo
xchg
inc
insb
jae
fistpl
push
pop
adc
dec
pusha
xchg
jb
je
sbb
fldt
dec
insb
mov
enter
lret
scas
cmp
cmp
idiv
mov
pusha
lret
cld
jl
pop
andb
adc
ja
fs
cmp
jae
fnstenv
add
jns
in
rcrb
add
mov
push
add
or
jae
mov
push
fnsetpm(287
out
daa
fsub
mov
cmp
sub
xchg
cmpsl
scas
pop
enter
fs
aaa
xchg
daa
ljmp
mov
call
adc
mov
and
dec
outsb
or
lret
bnd
mov
jge
fldt
ret
roll
cmpsb
sub
rcll
push
inc
sbb
sub
pushf
push
outsl
stc
or
out
test
faddp
jno
and
test
lcall
rcrl
icebp
pushf
pop
mov
divb
sbb
push
push
shll
pop
push
xor
xorb
push
cmpsl
pop
or
in
js
pusha
xchg
inc
cwtl
shl
xor
jnp
imul
enter
scas
out
pop
cmp
in
jp
addr16
xchg
mov
mov
aaa
cwtl
lret
or
push
pop
mov
ja
cltd
nop
add
scas
or
ds
repz
bound
loope
call
or
js
mov
mov
push
xor
cmc
sub
pop
std
cwtl
aaa
pop
ss
inc
ret
push
cwtl
push
cmp
cld
dec
popf
loope
out
daa
cmp
pop
sbb
dec
fcomi
adc
adc
pop
inc
movsb
push
test
mov
xchg
mov
or
pop
jg
popf
dec
sub
mov
jmp
andb
fcmovnb
xchg
lret
sub
xor
cwtl
test
ja
clc
sbbl
popl
mov
les
jo,pn
jg
push
shlb
andb
lods
int
xor
pop
or
lea
jl
and
mov
xlat
fisubrl
xchg
mov
fidivrs
sub
cmc
sbb
shlb
insb
cmp
clc
jae
int3
stc
shll
mov
sbb
jns
daa
int
xchg
mov
int3
mov
inc
arpl
imul
subb
dec
loopne
lds
adc
xor
push
sbb
cmp
pop
cmpsb
sbbb
and
sub
fbld
imul
mov
push
pop
insb
fimuls
gs
lret
cmp
adc
fstpt
jle
hlt
adc
lock
cmp
add
cmc
fdivs
xlat
add
sbbl
inc
or
sarl
aaa
xchg
out
sbb
fidivl
sub
and
and
mov
ja
das
push
in
rolb
aam
movsb
call
fs
sbb
add
cwtl
hlt
js
neg
das
sub
daa
test
cmp
mov
jmp
sub
fs
sub
jns
mov
sub
cmpb
scas
std
loope
fldcw
jp
bound
jecxz
sub
loop
or
subl
repz
pop
dec
xchg
stos
divl
or
cmp
iret
jae
movsb
mov
into
mov
inc
jae
subl
push
test
jmp
xorb
dec
into
xchg
push
push
push
adc
adc
movsl
mov
lahf
sub
fstpt
and
aad
sub
fistl
add
leave
sarb
dec
cmp
push
ficomps
loopnew
sub
cmp
inc
loopw
xlat
mov
pusha
aam
lods
xchg
lods
jae
loopne
inc
in
enter
or
cwtl
cmp
stos
jb
ret
or
mov
adc
cs
dec
lods
ljmp
adcl
dec
xlat
call
xchg
cmc
daa
and
dec
test
scas
orb
out
stos
out
push
sub
adc
fsubs
push
or
aam
shrb
ret
mov
dec
sbb
pop
adc
call
sub
lds
subl
arpl
mov
jae
outsl
push
mov
stc
push
fistl
adc
test
inc
dec
dec
or
push
daa
ret
mov
outsb
adc
mov
adc
jg
sbb
cmp
dec
xor
inc
push
add
push
mov
jo
mov
push
fnstsw
sub
ret
or
stc
sbb
sbb
push
movsb
ret
mov
and
mov
adc
xlat
push
gs
movsl
xchg
push
hlt
ret
cmc
rol
repnz
mov
and
es
cld
das
jns
cmp
aaa
lahf
mov
stos
jns
jmp
inc
xchg
pushf
jp
jb
pop
dec
les
stc
xchg
sbb
xchg
rorb
pop
cmc
pop
test
mov
jb
add
mov
xchg
std
push
ficoml
scas
mov
rcrb
jge
jg
inc
aaa
push
dec
or
xchg
in
xlat
dec
scas
stos
stc
ja
fcoml
into
lret
or
cmp
cltd
jnp
jne
insl
scas
popa
inc
outsl
sbb
je
xor
test
fwait
mov
push
pusha
cmovo
push
cmp
scas
cmpsl
pop
pop
imul
dec
cwtl
sbb
push
dec
inc
mov
clc
out
xor
adc
or
sbb
pushf
and
icebp
outsb
les
cmp
mov
mov
pop
jnp
jmp
cs
loopne
cmpsl
cmp
mov
dec
addr16
cmp
mov
lahf
mov
mov
push
adc
dec
call
and
adc
test
fcompl
xchg
repz
pop
in
mov
jp
pop
push
test
pop
xor
mov
add
ljmp
inc
rcrl
jmp
jmp
lret
push
mov
outsl
aas
cmp
xchg
test
int3
xorl
stos
enter
and
sbb
jno
sub
sbb
out
pushf
push
mov
dec
jecxz
xchg
loop
test
orl
cli
shlb
lods
push
dec
nop
std
aaa
cld
loop
jb
and
push
push
inc
cmc
xor
dec
ds
call
xlat
leave
fwait
sahf
pop
inc
rcrl
and
push
sbb
and
imul
mov
mov
jge
sub
jae
and
inc
xor
fnstcw
lock
push
sub
xchg
xor
loope
cmp
xchg
fcoms
out
cli
jne
xlat
push
add
add
adcl
adc
or
jb
mov
and
popaw
pop
pop
testl
cmp
out
sub
mov
push
push
ds
lods
subl
xlat
mov
push
scas
sbb
cmp
push
pop
xchg
loopne
shl
fs
test
lahf
fdivs
rol
dec
jno
lds
adc
xchg
pushf
call
or
sbb
loopne
lcall
or
adc
fistl
jno
ss
adc
add
testl
lock
push
push
call
mov
and
data16
dec
jb
ja
shll
mov
movsl
dec
ds
loop
sahf
sub
mov
stos
shrb
jp
pop
dec
fisttpll
fnstcw
fidivrs
ss
mov
dec
test
xchg
fsubl
popa
pusha
push
jno
stos
in
cmp
scas
fidivs
jmp
pop
stc
test
clc
xor
outsl
movsb
les
insb
outsl
fchs
scas
dec
clc
mov
mov
cmpsb
ret
rclb
push
xchg
add
in
ja
rcrb
call
and
mov
inc
clc
adc
mov
scas
insb
jecxz
gs
cmp
dec
jp,pn
xor
test
icebp
pop
mov
mov
rorb
js
jnp
fldcw
and
pop
xchg
jge
shrl
xchg
and
dec
stc
adc
push
jb
sbb
sbb
loop
ss
cmpsl
mov
fs
daa
cs
fildl
dec
lods
cmc
rcrb
aas
dec
nop
jmp
addb
sub
jne
out
dec
fimuls
mov
push
xchg
dec
add
enter
nop
enter
and
xor
push
xchg
jmp
mov
adc
in
mov
mov
das
and
xor
movsl
mov
das
mov
add
add
jp
mov
dec
and
popf
pop
orb
adc
ret
cmp
lods
aaa
lret
rcrb
jmp
aaa
cmp
mov
adc
andl
pop
rcrb
lods
jnp
pushl
xor
enter
rcll
outsb
xchg
adc
inc
jae
fistpl
xlat
push
add
sub
push
sti
ret
outsb
aaa
dec
lret
xor
xchg
in
clc
jne
outsl
inc
sbb
mov
and
and
mov
sbbb
xlat
sahf
mov
mov
sbb
mov
mov
adc
xor
push
fldt
jbe
movsl
sbb
sub
cli
cli
mov
rorb
or
in
repz
inc
daa
and
arpl
sbb
cmp
or
pop
dec
cmp
movsl
mov
aad
xor
mov
inc
push
xchg
mov
mov
sub
push
sbb
stos
inc
pop
and
cltd
mov
push
neg
daa
push
push
test
mov
xor
push
adc
mov
push
inc
shll
lock
xor
xchg
cmp
ljmp
subb
dec
or
gs
mov
div
xchg
das
mov
push
push
fcmovnb
mov
jg
sbb
movsb
sbb
sarl
es
pop
testb
jae
cmpsl
dec
sahf
and
ja
ss
xor
cmp
outsb
sbb
int3
loop
popf
add
cli
iret
or
pop
addr16
mov
subb
test
cmpl
cli
lahf
sub
push
pop
insb
outsb
xchg
ret
daa
jecxz
xor
cmpl
icebp
loope
outsl
dec
sub
andl
inc
add
xor
in
jns
js
pmovmskb
push
adc
pop
sbb
pop
mov
scas
and
mov
jae
xlat
jl
fwait
aad
xchg
or
jg
mov
call
pop
xorl
xor
out
lea
ja
or
xor
pushl
jae
xor
push
sub
divb
lock
loopne
inc
lahf
fimull
xor
lret
sub
ret
jle
pop
xchg
mov
adc
jne
fisttpl
adc
popa
adc
pop
push
ss
les
add
pop
and
add
pop
imulb
pop
sbb
or
adc
je
sbb
xchg
popf
push
stos
in
inc
mov
andl
repz
jnp
ja
mov
push
and
xchg
mov
test
bnd
imul
adc
cmp
xchg
lcall
fdivs
jge
cmp
or
adc
lret
dec
lock
push
or
cltd
push
or
jno
out
test
jp
xor
dec
pop
in
arpl
and
add
ss
shrb
mov
sbb
and
leave
pop
sahf
cli
clc
in
mov
in
decb
lret
aas
ljmp
pushf
jae
jmp
push
mov
fidivs
psraw
cmp
test
pop
stc
addr16
add
cli
scas
loopne
cmc
fisubrs
daa
jecxz
xor
nop
xor
imul
gs
cld
or
dec
jnp
movsl
or
xchg
sbbl
aas
jnp
sbb
sub
jl
fxch
add
push
xchg
popf
aaa
insb
shrb
jno
fstpt
sub
xor
mov
std
imul
ja
xor
gs
adc
inc
xchg
and
jmp
sub
pop
inc
in
lcall
out
add
in
imul
inc
das
adcl
push
jae
xor
jmp
xor
clc
jnp
cld
lock
xlat
xor
jne
fwait
aaa
and
out
sbbb
stc
flds
xorb
stc
pop
pop
mov
sbb
mov
icebp
push
fdivl
in
dec
stc
aaa
xor
mov
inc
push
repz
inc
fsts
xchg
push
add
lea
sub
sbb
xorb
push
mov
push
jnp
sub
inc
inc
fdivl
fistpl
mov
xor
imul
aaa
lds
gs
xor
insl
jns
fcos
fdivp
jae
pushf
shl
pop
xchg
jo
inc
mov
push
adc
sub
les
sbb
cli
scas
cwtl
mov
push
inc
mov
push
cld
cmpsl
inc
sti
pop
clc
repnz
xchg
sbb
shrl
stos
add
stc
add
push
shl
leave
xchg
imul
add
sbb
xor
inc
imulb
xlat
mov
mov
cmp
xor
test
push
aam
xchg
push
adc
shll
and
inc
mov
rcr
push
adc
inc
dec
stc
xor
out
test
jge
popa
or
bound
xor
xor
mov
imul
mov
or
mov
stos
add
btl
jg
sbb
das
ror
int3
inc
push
push
jg
std
stos
sahf
lahf
jae
cmp
xlat
je
and
loope
test
jmp
pop
xor
ja
cwtl
repz
je
jle
mov
push
sbb
push
xlat
test
rolb
dec
xlat
push
dec
jns
insb
or
xor
fildl
movsb
push
mov
cli
imul
jl
test
call
popa
push
aaa
pop
jp
pop
fs
dec
mov
gs
popa
les
imul
enter
dec
fistl
cs
xchg
sub
cs
and
and
test
inc
divb
cmpsl
ja
and
push
or
or
sti
pop
pop
xchg
push
xlat
in
sub
xchg
jl
or
xlat
pushf
js
cmc
test
xor
testl
sub
pop
mov
mov
out
cli
insl
movsb
lret
mov
loope
jb
ret
and
or
add
dec
int
data16
dec
or
scas
inc
dec
mov
sbb
cmpsl
inc
xchg
lret
sub
sti
cmp
jae
aam
xchg
ljmp
popa
xlat
ret
test
add
adc
jo
cmp
out
int
aad
int
out
pop
fsts
xor
ret
js
mov
mov
pop
cmp
fldt
sub
mov
rol
movsb
loop
sub
iret
loope,pn
xchg
scas
jp
sbb
test
push
rcrl
xchg
fs
call
clc
sbb
push
lahf
jbe
dec
mov
cmp
jno
cli
xchg
add
mov
testb
movsl
jb
hlt
mov
ror
lods
lret
imul
mov
fstpt
jb
xchg
ficoms
mov
xchg
rcr
and
mov
sub
pop
xchg
add
hlt
pop
sub
and
sbb
mov
das
pop
cmp
dec
insb
cmp
adc
sarb
test
jns
mov
fnstcw
hlt
sarb
or
xchg
adc
cmc
outsb
icebp
cmpsb
jle
ja
push
push
leave
push
add
or
stc
xor
pop
out
daa
lcall
mov
movsl
test
or
and
insl
aas
mov
sub
xor
hlt
inc
aaa
ljmp
cmp
fsubs
insl
pop
and
data16
mov
xchg
push
andl
pop
or
daa
mov
sbb
xchg
dec
lret
lds
and
jne
sbb
fildl
inc
in
push
mov
jns
sarl
fwait
lret
int
data16
addr16
push
ds
xchg
sbb
sarl
mov
jmp
mov
aaa
ds
mov
je
cld
repnz
idivl
mov
ret
adc
xor
das
repnz
pop
fldenv
push
roll
xlat
test
lret
xlat
jae
sub
mov
sbb
imul
push
add
push
std
inc
mov
xor
out
push
fistpl
xorb
jge
jnp
stc
std
out
aaa
jbe
mov
adc
dec
or
fwait
test
data16
adc
pop
in
mov
cmpsb
pop
or
addl
daa
sbb
mov
sti
flds
push
sbb
nop
xchg
xlat
xor
adc
add
push
pop
stc
std
dec
xchg
mov
xlat
mov
rorl
fstpl
icebp
sub
xor
das
fwait
push
fdivs
stc
xlat
mov
mov
push
jb
or
js
mov
stc
fisttpl
sbb
jmp
loopne
push
ret
mov
mov
cmpsb
movl
dec
outsl
mov
ret
fiaddl
push
xchg
inc
stos
sub
adc
jbe
jmp
xorb
xchg
ret
xor
push
jns
xor
dec
cmp
xor
les
inc
lods
dec
ljmp
loop
test
and
xor
sar
cmpsl
lret
frstor
xlat
adcb
rcr
push
inc
inc
xor
pop
mov
ficompl
lods
push
insl
aaa
xchg
adc
adc
stos
into
mov
lahf
nop
ljmp
shlb
cmp
sbb
adc
frstpm(287
cmp
cmp
add
int
sbb
push
inc
pop
scas
daa
leave
push
jp
scas
sub
movsl
test
rcrl
jns
pushf
jle
push
jo
xchg
ficoms
pusha
jno
dec
lds
ja,pn
mov
mov
daa
insb
aam
hlt
iret
sbb
jne
mov
repnz
iret
subl
insl
jns
push
cs
xor
insb
das
mov
out
aam
out
repz
fidivl
fmull
ret
xchg
inc
imul
xor
movsl
dec
jp
icebp
movsl
mov
fildl
repz
jle
add
sub
cmp
or
insb
mov
and
cli
inc
cmp
lcall
mov
sub
pushf
adc
adc
pushf
push
loopne
or
test
adc
pusha
mov
jns,pn
jne
ja
ret
xchg
cmp
fs
insb
jp
cmpsb
mov
mov
push
out
rcll
pop
xlat
and
stc
inc
imul
iret
test
lock
addr16
insl
pop
push
sahf
inc
dec
push
cmp
sbb
mov
mov
mov
in
sub
dec
ja
and
jmp
lret
cmpsl
cs
and
dec
jg
leave
shrl
into
sub
xlat
jge
xor
and
inc
je
sub
mov
or
loop
gs
push
push
iret
bound
cmp
das
mov
addb
xor
in
loope
push
fistpl
fdivrl
pop
mov
dec
or
sub
push
inc
out
mov
loope
cli
js
test
mov
fwait
add
sbb
fwait
lods
jp
test
cmpsl
cwtl
call
out
imul
pop
lock
mov
movsl
mov
mov
sbb
mov
cmp
scas
mov
in
pop
addr16
jb
sbb
insl
sbb
jl
fistl
cmpsl
add
mov
lds
push
dec
sar
scas
push
jbe
adcb
insl
xor
or
adcl
xchg
dec
jne
push
sbb
mov
fsubp
dec
push
push
push
lret
xchg
fidivrs
scas
in
sbb
cs
js
xlat
push
repnz
and
dec
mov
mov
push
lods
push
push
push
lahf
shlb
loope
dec
insl
jbe
mov
add
cmp
dec
ljmp
push
enter
jns
mov
jmp
cmp
loopne
dec
test
and
sub
insw
xchg
lret
outsl
cltd
ss
push
xchg
inc
jae
xor
cmc
sub
cs
mov
jno
pusha
xchg
add
inc
jg
pop
out
jge
divl
sub
fidivs
lock
pop
rcll
sbb
jmp
cmp
mov
cmp
push
loopne,pt
jmp
xchg
mov
push
aad
insl
jns
adc
cmc
or
fwait
scas
push
rolb
aas
ja
sbb
mov
jl
sub
push
jge
or
es
shll
or
hlt
aaa
sbb
push
pop
mov
enter
mov
ds
movsl
push
or
cli
jnp
cld
xchg
xlat
in
incl
inc
sbb
xlat
fldenv
push
aas
inc
dec
cwtl
sbb
inc
push
and
cmp
xchg
aam
sub
fcmovne
cmp
stc
andl
push
call
push
shrl
stc
nop
dec
scas
or
imul
mov
push
std
cmp
fistl
stc
jg
pop
mov
mov
jae
cmc
sbb
and
mov
add
xor
sub
cmp
jae
inc
in
inc
cmp
neg
jbe
jl
mov
cmp
mov
movb
dec
fwait
dec
xchg
shlb
daa
xchg
xchg
push
or
jg
jb
xor
or
mov
mov
insl
test
je
sti
and
fisubrs
xchg
call
push
lret
js
aam
pop
fistl
mov
pop
xchg
and
sarb
add
mov
mov
cli
mov
pop
mov
jge
inc
icebp
push
scas
les
jle
add
sbb
aad
jge
shlb
fcomp
aas
cmpsb
jg
fadd
inc
aaa
mov
js
shll
addr16
jg
push
sub
cmp
xchg
scas
or
es
gs
test
lret
mov
inc
xor
aad
imul
rorb
push
imul
mov
repz
jne
or
jae
lret
xlat
and
xchg
cmp
fisttpl
adc
enter
stos
or
jb
das
xchg
cwtl
ret
jmp
and
nop
jmp
scas
jne
jp
in
mov
adc
pop
add
movsl
decb
mov
es
add
movsb
cmpsb
cli
inc
js
in
lcall
inc
pop
sar
pusha
sbb
in
std
dec
cli
pop
fstpt
add
xchg
mov
ds
xchg
pusha
je
jno
mov
out
divl
cli
test
jle
lock
or
xchg
test
xor
mov
aad
cmp
xlat
and
in
pop
dec
imul
pop
cli
mov
inc
inc
lahf
jne
xlat
xor
xchg
fwait
sbb
ret
movsb
sbb
xchg
imul
ja
ret
das
adc
sbb
leave
adc
jl
xchg
mov
dec
xchg
jl
or
lcall
leave
cltd
push
and
aas
in
ret
std
fs
adc
xchg
ljmp
or
inc
sub
mov
push
dec
shrl
out
faddl
xor
out
fcoms
fildll
push
xlat
cmp
jnp,pt
mov
cmp
dec
cmp
jne
std
stos
test
mov
fistl
dec
xlat
inc
sub
stc
sbb
push
push
imul
nop
data16
stos
enter
mov
and
xchg
mov
adc
xchg
mov
in
push
inc
mov
fs
add
ds
icebp
arpl
jb
lcall
jb
loop
xchg
jp
inc
in
jne
lds
hlt
and
jge
dec
push
cmp
aaa
pop
mov
xor
pop
dec
xchg
xor
push
mov
jp
shlb
fmulp
or
dec
pop
scas
pop
loop
test
mov
adc
pop
and
xor
scas
mov
addr16
sbb
out
lahf
push
hlt
sbb
xchg
and
aam
sahf
or
cwtl
push
sub
push
cmp
nop
bnd
movsl
lcall
push
mov
cmp
outsl
sbb
or
jns
std
cmpb
addr16
jnp
jns
in
iret
cmp
sub
repnz
push
xor
aam
jg
sbb
or
push
sbb
or
inc
int
data16
or
icebp
mov
popl
mov
xor
mov
jo
lea
pop
sbbl
xor
sbb
test
mov
aam
mov
outsb
xchg
push
add
cmp
fstps
insb
dec
add
sar
add
fcomps
and
mov
pop
ficoml
mov
or
fisttpll
sar
add
adc
inc
mov
fstpl
sbb
adc
dec
cmp
outsl
lods
orl
cmp
mov
mov
push
fsubl
xor
pushf
dec
push
es
stos
inc
mov
sar
in
lods
clc
fistpl
xchg
mov
decl
pusha
inc
std
jmp
push
test
leave
imul
xchg
add
adcl
jl
xlat
bsr
test
xor
mov
mov
decb
mov
cltd
xor
test
nop
stos
sbb
loope
nop
jo
or
jge
xlat
in
loopne
loop
adc
sub
xor
jle
mov
imul
mov
mov
cmc
push
movsb
jns
jp
mov
xlat
pop
add
test
push
push
in
push
and
add
xorl
lcall
or
sbb
iret
fldt
pop
jp
pop
sbb
sub
mov
rcr
inc
or
pop
test
mov
fcomps
xlat
lcall
test
ror
dec
in
xor
sub
mov
xlat
pop
gs
dec
adc
xchg
mov
ja
mov
fildl
push
mov
mov
jecxz
xchg
xor
daa
arpl
xchg
aad
sub
jae
jg
rorb
fildll
mov
shlb
push
enter
es
rcrl
in
adc
xchg
aaa
jmp
dec
xlat
pop
push
push
push
mov
dec
popa
adc
bound
lret
lods
imul
sahf
jg
and
mov
arpl
cli
lods
inc
push
mov
jg
sub
inc
shrl
push
lods
jge
inc
mov
push
lahf
lahf
lcall
xchg
enter
push
push
rcl
lods
iret
jmp
and
in
fldcw
push
mov
mov
fsubrs
jnp
jmp
inc
stc
aam
aad
xor
sub
addl
sub
jmp
hlt
stc
test
mov
sub
imul
stc
mov
xlat
cs
and
sbb
out
js
sub
xchg
add
roll
fistl
popf
cmp
fwait
and
cmp
mov
out
ret
imull
test
sarb
push
dec
lret
sahf
cmp
or
test
add
daa
outsl
dec
sbb
stos
shlb
sub
lods
fisttpl
xor
cmp
cmp
stos
int
in
roll
hlt
sbb
jle
jle
cmp
sar
sub
sub
movsl
das
xchg
lea
enter
push
bound
mov
cltd
pop
mov
mov
dec
push
js
inc
shlb
xor
repnz
leave
mov
stos
or
xlat
fs
or
and
rorb
enter
daa
insb
jl
imul
sbb
daa
xchg
cli
mov
jae
xlat
insl
fcomip
dec
pop
adc
sbb
fnstenv
call
imul
inc
lret
dec
xor
jp
stc
fistl
xchg
or
and
das
pop
pop
faddl
inc
stos
stos
cmp
sbb
sub
fnstenv
lret
lods
mov
std
leave
push
ds
jmp
xor
popaw
sahf
mov
out
mov
outsl
enter
frstor
xlat
xchg
push
xlat
fnstcw
insb
inc
sub
add
fiadds
jae
enter
loope
addl
xchg
push
adc
aas
test
orb
jle
mov
enter
aaa
mov
cmpl
clc
jns
dec
xlat
lock
xchg
aaa
cmp
sbb
es
mov
or
and
mov
jns
dec
fsubr
mov
inc
test
xchg
das
inc
xor
inc
scas
and
push
jns
sub
inc
test
lcall
mov
jmp
or
out
xor
addr16
xlat
pop
sbb
sub
addr16
mov
out
xor
xchg
call
inc
movsl
pop
fistl
aas
std
mov
push
jns
sub
mov
fcmovnbe
test
mov
ja
in
inc
pop
sarl
lret
cli
jb
sbb
sbb
mov
sti
rcr
ljmp
aaa
negl
and
jno
and
arpl
test
cmp
cli
and
ja
sub
pop
pop
jne
rcrl
lahf
cmp
fstl
jne
pusha
xchg
mov
xchg
icebp
imul
or
iret
scas
scas
popa
mov
in
testb
mov
addl
call
popf
mov
pop
mov
test
cmc
out
pop
pop
inc
jnp
stos
mov
icebp
mov
mov
aam
insb
sbb
mov
pop
jmp
add
sbb
xchg
sbb
cmpsl
rol
movsb
lods
add
lret
sahf
dec
jne
mov
push
sbb
test
pop
ljmp
stos
or
push
inc
lret
out
loopne
popf
sub
and
dec
cmpsl
outsb
fsubrs
xlat
jae
add
xorb
sbb
addr16
mov
movb
sahf
in
mov
js
mov
dec
cli
push
enter
adc
jp
leave
or
xor
vpmullw
sbbl
cs
stc
and
pop
mov
mov
xor
xlat
jle
shll
cli
js
test
push
in
sbb
jecxz
sbb
call
aas
fwait
push
xlat
insb
iret
sarb
fbstp
lds
xchg
xlat
sbb
mov
and
mov
aam
into
imul
lods
aam
pop
jg
xchg
push
gs
push
mov
call
inc
aam
lahf
inc
and
insb
test
and
jle
cwtl
dec
aad
push
insb
lret
dec
repnz
push
dec
xor
or
fwait
dec
add
cld
jp
adcb
in
and
mov
fmull
or
filds
stos
pushf
sbb
shlb
popf
clc
jb
lahf
aaa
mov
imul
pop
pop
dec
mull
clc
js
push
dec
and
mov
enter
mov
sub
or
jnp
jecxz
adc
mov
mov
sti
adc
ja
or
xchg
push
pop
mov
ss
xchg
xlat
mov
xchg
and
inc
out
out
sbb
lcallw
push
pop
mov
push
js
mov
xor
mov
mov
inc
hlt
fisubs
xlat
into
loopne
shll
adc
pop
dec
mov
and
addr16
push
sarb
mov
gs
enter
mov
cmp
in
sbb
rorb
enter
imul
lahf
ret
sbb
fstcw
and
leave
lds
test
cli
shlb
sbb
push
add
xor
das
fcmovnb
cmc
out
xlat
inc
dec
jge
inc
add
rcl
xchg
add
das
jecxz
fstps
idiv
iret
sub
jnp
sbb
dec
cmp
fisttpll
and
in
add
imul
cmp
rcrl
repz
cmp
popf
xchg
jg
repz
imul
inc
sbb
hlt
shll
enter
in
xchg
icebp
aam
loope
mov
and
popa
sub
mov
fstpt
add
gs
jge
jmp
dec
mov
adc
xor
mov
test
jns
out
jge
sarl
xchg
imul
mov
jnp
jno
mul
sbb
iret
pop
stc
lret
mov
loop
pop
aaa
loopne
fwait
jge
dec
cmp
ret
sub
iret
inc
into
jae
scas
sbb
mov
popa
sub
add
jbe
cli
xlat
sti
fldt
and
or
inc
arpl
subb
sub
mov
jge
bound
fisttpl
lcall
into
cmp
xchg
int
leave
hlt
test
cs
and
daa
loop
dec
or
imul
jge
fistpl
scas
mov
xor
inc
jmp
cwtl
mov
cmp
xlat
adc
scas
addr16
xchg
fcmovu
jbe
std
pop
mov
mov
sbb
mov
jno
fimull
lret
sub
mov
mov
mov
mov
mov
jmp
mov
add
xchg
add
pop
mov
gs
cmp
pop
mov
xlat
add
fwait
xchg
hlt
jo
sbbl
mov
lahf
dec
mov
pop
push
mov
lock
pop
xor
sub
pop
cmp
lcall
add
fistpl
pop
mov
outsl
mov
push
dec
jno
push
scas
jmp
sbb
and
jae
pushf
mov
add
pop
sti
pop
lods
hlt
fistl
mov
dec
lcall
jbe
iret
xor
or
jno
adcb
out
fdivl
sub
out
xchg
mov
inc
lret
push
push
mov
or
xchg
in
lret
xor
push
mov
bound
push
lahf
fwait
mov
cmpl
or
iret
sub
xchg
pop
fistpll
adc
repz
sahf
out
leave
fcomi
hlt
sub
mov
and
ds
in
inc
adc
stc
les
ret
jmp
pop
adc
fisubrl
hlt
and
sbb
lods
push
sub
cld
repz
fidivs
or
push
dec
dec
cmpsl
int3
push
sub
shll
pop
push
xchg
stc
and
add
jno
mov
xor
pop
push
push
jl
sbb
sbb
and
mov
ja
jae
subl
and
adc
jl
std
ss
mov
jns
mov
cmp
fstpt
js
push
inc
mov
or
rcrl
xor
dec
lahf
or
mov
dec
adc
cmp
fcmovnb
pop
mov
cs
popf
bound
pop
test
inc
pop
cli
mov
xchg
jno
fildl
xchg
lahf
test
adc
mov
cmp
in
pop
stc
into
adc
jl
dec
daa
dec
imul
adc
jb
push
movsb
clc
xor
mov
movb
inc
daa
xor
subb
lods
or
repnz
sub
sbb
and
pop
add
mov
mov
test
aam
and
popf
adc
xor
or
pushf
and
add
push
mov
adc
cmp
sub
mov
mov
sub
pop
call
mov
add
repz
ja
fneni(8087
cli
mov
shlb
popa
pop
and
pop
cmp
jecxz
cmp
popf
sub
aad
add
jge
mov
icebp
sub
cmpsl
xchg
mov
test
je
adc
test
or
inc
inc
outsl
aad
xlat
mov
jne
push
leave
std
mov
mov
adc
insl
add
fldenv
cwtl
adc
sub
fs
and
and
popf
clc
push
jle
sub
shr
jns
loope
mov
data16
dec
je
lcall
rolb
mov
xor
add
mov
push
enter
mov
ss
cwtl
out
xchg
scas
jge
jno
les
jg
dec
and
lcall
cwtl
xchg
enter
ret
pop
xchg
decb
push
jg
adcb
mov
lahf
sub
jae
and
imul
and
cs
jae
lret
jge
pop
mov
sub
sbb
fldt
dec
mov
movsl
dec
je
mov
es
ja
cltd
push
movsb
into
in
inc
jge
outsb
jmp
dec
sub
jecxz
push
xlat
xor
push
cli
arpl
add
cmp
xor
adc
jnp
fcoml
and
scas
mov
sub
add
sbb
jmp
test
enter
xor
adc
adc
or
hlt
push
lcall
lret
cmp
mov
cmp
push
mov
js
pushf
and
mov
idivb
inc
push
cmpsl
cmp
in
mov
and
outsb
xchg
daa
rcll
lret
sub
in
jns
cmp
addl
cmp
fsts
rcr
stos
add
mov
sub
xor
mov
xchg
push
lret
inc
xchg
pop
mov
cli
cltd
cwtl
out
jae
cli
test
movsb
cmp
mov
arpl
shlb
clc
stos
fimuls
sbb
and
mov
jae
ljmp
and
xchg
lcall
or
cmp
aaa
pop
je
cmp
movsb
xchg
icebp
inc
test
hlt
jp
sub
inc
dec
out
push
test
cwtl
scas
jmp
call
cmp
lods
push
fsubrl
test
xor
add
lds
xchg
dec
jl
sbb
xlat
cwtl
int3
and
fdivrp
xor
xor
stos
jb
in
inc
xor
adc
and
icebp
push
pop
push
cmp
popf
add
hlt
mov
mov
loop
jb
loope
mov
lret
out
adc
and
sbb
push
das
mov
jne
dec
xlat
cmpsl
xchg
mov
mov
insb
ror
fists
inc
pop
jge
test
jge
scas
mov
xor
es
icebp
push
das
pop
jne
ljmp
xor
push
addr16
stc
xor
add
mov
sbb
test
adc
lret
mov
nop
adc
mov
cmp
mov
das
fwait
rolb
xchg
es
std
lahf
jmp
das
stos
xor
fs
or
stos
xlat
rorb
jns
test
stos
jno
mov
movsb
cmpsl
mov
in
sbb
pop
adc
xor
cmp
mov
enter
add
fnstcw
fildll
sub
repz
push
fcoms
jae
adc
jl
cmc
out
mov
and
push
sbb
jmp
jae
lret
xchg
fsts
xchg
lahf
jb
pop
mov
xchg
and
int3
rol
call
cli
subl
std
mov
loopne
cs
pop
sahf
push
gs
fiadds
push
lcall
lret
adcb
push
pop
cli
inc
pop
out
or
test
or
cmp
fildl
pop
jbe
popa
leave
and
rcrl
pop
or
sub
fstpt
fldl
sbb
icebp
and
test
mov
fdivrl
xorl
jb
jle
inc
and
bound
insb
mov
inc
loop
pop
or
bound
dec
lock
xor
cmpl
push
mov
aam
sbb
loopne
out
sbb
aam
ja
lods
das
mov
repz
ss
sbb
lea
imul
jbe
ror
or
out
jecxz
jle
dec
sub
mov
arpl
push
std
in
cwtl
outsl
pop
xchg
dec
or
mov
fs
add
xchg
jb
ja
jecxz
addr16
pop
ljmp
mov
jb
mov
sbb
rolb
pushf
and
sbb
flds
push
sub
sbb
inc
xchg
cltd
repnz
jb
dec
addl
inc
inc
and
sbb
cmc
xchg
fildl
cld
xor
push
adc
add
add
lds
ss
leave
in
subb
or
cmp
jne
movsb
das
sbb
and
nop
inc
lds
ljmp
inc
mov
inc
mov
jbe
mov
and
or
out
pop
cmpsl
and
inc
hlt
bnd
xor
insl
cmp
push
ljmp
cmpsl
lds
xchg
lahf
inc
mov
pop
ret
jo
xor
pop
pop
push
pop
xlat
fstpt
mov
cmp
jae
movsl
sarb
fisttpl
cltd
xchg
add
push
jae
push
idivb
pop
and
jmp
cmp
nop
imul
pushf
lcall
test
fstpl
call
jge
sarb
sti
dec
or
pop
nop
and
pop
mov
in
ja
stc
test
mov
fistps
dec
mov
fildl
jns
nop
iret
xchg
outsb
sub
std
jae
push
hlt
push
inc
jp
pusha
loope
lahf
cs
out
mov
sbb
ret
push
cmp
insl
cli
into
cmc
lods
fwait
repz
dec
enter
sub
cmp
jp
add
sub
mov
mov
xchg
das
cmp
mov
add
dec
scas
gs
mov
cmc
in
push
xchg
mov
mov
xorb
ret
pop
mov
and
push
adcl
std
jp
mov
dec
xchg
cmp
mov
inc
mov
fadds
data16
fwait
outsb
adc
cld
push
sbb
call
cmp
imul
sbb
je
vpinsrw
std
inc
nop
cmp
ret
xlat
inc
adc
cli
sub
cmp
fisubrs
jle
dec
out
xchg
dec
mov
cmp
cmp
jp
test
addr16
sub
xor
mov
test
jnp
insl
mov
jb
or
cld
stc
fld
popf
xor
pop
out
jl
dec
sub
inc
or
movsl
jge
leave
or
out
in
lods
jmp
jbe
jmp
ret
add
xor
repnz
ljmp
dec
xchg
jo
xorb
add
dec
and
lret
int3
sub
inc
xor
int3
inc
std
insb
push
cld
inc
or
sarb
stos
mov
cli
xor
pushf
pop
mov
outsb
jl
sub
fnstenv
cld
loop
loope
add
xchg
adc
enter
xchg
dec
cmpsb
into
mov
fidivl
xorl
repz
fmulp
test
in
pop
push
mov
pop
add
jnp
xchg
shl
icebp
push
pop
fucomi
daa
notl
dec
push
js
andb
xchg
sbb
cmp
xor
mov
addr16
push
scas
rclb
mov
xor
or
or
pop
mov
sub
fimuls
lods
jmp
xlat
inc
incl
sub
sbb
stc
not
inc
sub
sub
sub
sub
daa
jae
and
cmp
or
sbb
pop
inc
sub
xor
mov
lret
adc
test
mov
mov
mov
fsubs
ror
cmp
xor
data16
stc
adc
xorl
andl
loopne
lods
add
or
push
rclb
dec
jge
adc
je
mov
popa
popf
or
lock
and
inc
sub
outsb
std
jne
fstps
mov
test
mov
scas
cli
in
pop
adc
loopne
ret
loope
out
sub
mov
mov
push
cli
fisttpl
fldt
into
arpl
lea
out
ret
ja
fcmovnbe
dec
out
jae
xchg
and
js
cld
add
mov
add
inc
xchg
cmp
or
mov
pusha
cs
push
imul
mov
scas
out
xchg
addr16
nop
xlat
mov
cmp
cltd
adc
das
xor
xchg
dec
jno
inc
mov
adc
js
xor
mov
fwait
cli
xchg
lahf
dec
jns
dec
mov
rcr
add
pop
test
jmp
test
mov
push
les
sub
adc
mov
jg
pop
decb
mov
push
imul
and
subb
addr16
pop
and
cmp
repz
fisubrl
dec
icebp
mov
push
dec
out
movsl
std
sbb
lds
mov
inc
imul
imul
sub
cmp
rdmsr
and
inc
jmp
cmpsb
add
adc
sub
xchg
sahf
mov
mov
addr16
dec
jo
out
sbb
shrb
int
pop
push
jne
shll
add
je
xlat
sti
xchg
stc
jg
ror
xor
gs
xor
mov
icebp
cmpsl
jge
jecxz
pop
xor
sub
jg
sti
out
stc
in
pop
xor
fstpt
mov
stos
fadd
mov
push
cmp
pop
js
xlat
fiadds
pop
je
xchg
xor
push
int
inc
jmp
cmp
mov
xor
daa
cmp
repnz
push
das
xchg
adcl
cmpsl
ljmp
test
push
jle
fisubrs
dec
fwait
repz
cld
loope
fiaddl
not
in
dec
out
stos
mov
icebp
cmp
fadds
loopne
out
mov
insb
mov
push
add
sbb
mov
mov
ret
xrelease
adc
std
jbe
cmp
add
cwtl
add
in
xor
xlat
dec
fs
test
adcb
mov
xor
fcmovnbe
push
xchg
xchg
test
mulb
jae
mov
pop
stc
jmp
hlt
or
idivb
mov
ret
and
out
stos
jae
stos
mov
subb
into
in
mov
cmp
push
ja
sub
jge
jge
pop
and
sbb
xor
fcomi
insb
push
push
ds
addr16
xor
aaa
gs
outsl
leave
out
adc
add
out
sub
pop
and
or
addr16
xchg
popf
ja
gs
imul
pop
pop
aaa
sub
dec
sub
xchg
lea
mov
leave
aam
fldenv
sub
ja
jp
lahf
or
jno
loope
jmp
lods
insb
cmpb
mov
testb
mov
sti
xchg
mov
nop
push
lcall
daa
stc
cmp
jne
sub
pop
cltd
xchg
jnp
pushf
roll
mov
mov
jecxz
dec
sbb
bnd
cltd
outsb
push
sbb
scas
and
inc
std
inc
popf
jp
cmp
jns
rorb
xor
ljmp
push
xlat
js
iret
sub
das
arpl
fs
mov
cmp
cmp
cmp
push
sbb
jno
and
cwtl
fldcw
xchg
popa
stc
subb
jbe
xor
fistl
push
out
mov
mov
or
ds
adc
icebp
dec
inc
mov
mov
jnp
loop
orl
lds
dec
pop
orl
fwait
push
pushf
push
ficomps
mov
mov
add
or
xchg
cmp
fisttpl
sub
sbb
xor
xor
std
xchg
out
aam
cs
ffree
push
sub
sbb
pop
xchg
mov
xlat
in
rcll
ficoms
mov
xchg
xor
xchg
mov
and
jle
mov
bound
in
jg
jns
shll
jno
test
cmp
in
mov
imul
push
xchg
lret
sbb
push
leave
stos
test
mov
inc
push
jno
xchg
jecxz
mulb
cmpsl
dec
int3
jmp
ret
lahf
fistl
imul
mov
pop
or
and
inc
stc
pusha
mov
push
test
stc
subl
ret
cmp
jnp
xlat
dec
int
lods
mov
adc
xor
jg
fimull
jp
test
inc
jb
jno
jecxz
push
fwait
daa
cmp
bound
jmp
popf
adc
ljmp
add
je
jge
mov
int3
mov
stc
fmuls
ljmp
sub
pop
fs
jmp
fidivl
push
push
add
lock
and
ljmp
leavew
pop
jne
pop
or
iret
xor
out
fdivrs
sbb
mov
fiadds
mov
je
cmp
mov
lea
mov
xor
or
out
ffreep
mov
das
iret
fnstsw
pop
jne
xor
cltd
jns
pop
pop
scas
dec
stos
in
sub
pushf
sysenter
mov
xchg
lcall
cld
arpl
loopne
aaa
or
jns
shl
or
pop
and
mov
push
dec
push
pop
sbb
cmpl
test
push
and
mov
insb
imul
pop
inc
mov
cmpsl
dec
xchg
add
test
mov
jp
adc
mov
mov
jo
and
test
cmpsb
test
and
mov
and
dec
std
scas
outsb
lcall
jno
adc
xlat
repnz
xor
std
cmp
jle
sub
mov
lods
push
popf
cmp
cmp
stos
insl
mull
xlat
dec
in
std
mov
and
call
rcrl
and
scas
and
push
adc
mov
fwait
mov
imul
push
movsb
cmp
sub
scas
addr16
add
js
add
imul
leave
and
fcoms
push
loopne
cmp
stos
xchg
insb
mov
lahf
pop
test
sar
pop
int3
xlat
sbb
add
into
push
mov
and
mov
ds
fidivrl
fwait
jb
xor
rorb
cmc
jo
jmp
xor
adc
lahf
ret
stos
cmp
mov
jne
subb
into
jne
roll
rcr
rorl
cmp
in
leave
xchg
sti
inc
dec
push
stos
pop
rclw
or
bound
mov
mov
fiadds
sbb
mov
jae
cmpsl
data16
xchg
ret
out
sub
xchg
pop
rorb
orl
pop
or
test
gs
xor
int3
pop
and
pop
or
cwtl
pop
push
ss
addps
mov
jmp
xchg
sub
sub
movsl
cmc
or
sub
xorl
shll
call
loope
mov
jl
pushf
cld
add
or
cmpsb
adc
pop
dec
jp,pn
push
pop
fistpll
test
dec
pusha
cmp
gs
add
cs
pop
sbb
out
stc
xor
inc
out
fs
cmp
dec
mov
cs
mov
jbe
jge
push
push
jge
sbb
xchg
push
or
fcomip
adc
scas
shr
mov
mov
hlt
stc
insl
mov
fiaddl
jbe
lret
outsb
pusha
xchg
cmp
dec
dec
cmp
adc
ds
inc
or
xorb
mov
sbb
out
loopne
ret
lock
jmp
dec
aas
sub
ficoml
push
test
pop
mov
outsl
and
lea
push
ret
add
lret
mov
and
nop
cmp
aam
mov
jmp
mov
push
mov
int3
addb
repz
or
stc
adc
jb
stc
repnz
ss
jmp
push
fistl
daa
clc
jecxz
xchg
jbe
xlat
xchg
das
cmp
fstpl
pop
xchg
jg
sbb
cli
pop
cld
adc
push
bound
lcall
aad
jp
pop
cmc
and
add
xchg
sub
jg
inc
aam
adc
xchg
scas
std
mov
insb
xor
or
xlat
out
aad
out
fistl
mov
adc
imul
pop
les
sbb
mov
mov
sbb
mov
out
ljmp
cwtl
add
aas
mov
xlat
inc
push
lahf
sbb
push
repz
dec
or
mov
bound
fistpl
adc
mov
cmp
lock
adc
movsl
aaa
int
jbe
mov
or
repz
jne
or
inc
call
ljmp
sahf
fiadds
mov
ror
push
inc
mov
mov
jge
inc
add
lcall
xchg
daa
dec
movaps
stc
cmp
dec
add
aam
shll
pop
jmp
test
cld
jnp
dec
rorl
inc
jmp
hlt
out
cmp
xlat
dec
add
adc
push
imul
push
dec
cmc
sub
mov
fsin
ret
sahf
dec
xchg
sub
rorb
xchg
or
adc
sbb
pop
adc
add
push
dec
stc
or
aaa
add
ficomps
pop
pop
fsubrl
xor
inc
jp
dec
lea
push
in
movsl
push
fs
cld
xor
push
jnp
je
cmp
std
pop
shl
movsl
fisubrs
dec
pop
out
add
jmp
mov
rorl
xchg
pop
mov
stc
xchg
mov
mov
pop
test
sti
or
rorl
aaa
push
xchg
mov
cltd
jp
xchg
test
sub
or
insb
jns
dec
or
mov
nop
imul
jns
adc
pop
xor
dec
ret
add
mov
sub
cmpsb
jge
cmp
sub
cmpsl
cli
mov
hlt
daa
fbstp
pop
cmp
mov
xlat
ss
mov
jne
mov
push
stos
aad
dec
movsb
or
adc
fldenv
mul
sbb
pop
fldcw
mov
fwait
xchg
leave
pop
lods
xchg
push
mov
sbb
out
lahf
loopne
sbb
in
test
sub
test
cmp
daa
mov
jb
sbb
stos
fs
lret
jl
sbb
pushf
out
inc
testl
pop
popa
adcl
dec
inc
data16
xor
mov
lahf
repz
fimuls
cmp
dec
shrl
pushf
rorl
cwtl
jl
xlat
cmpsl
pushf
mov
mov
xchg
movsl
push
cwtl
test
rclb
fistpl
loope
mov
into
mov
cmpsl
sbb
sti
mov
adc
and
jae
sub
fistpl
cmp
nop
mov
addr16
ja
and
lock
sbbl
jl
or
jns
mov
das
ss
fistpl
add
push
cmp
dec
or
inc
xlat
fwait
add
pop
lahf
push
sbb
pop
and
mov
in
fisttpl
sub
and
mov
enter
push
jo
shlb
aad
adc
into
stos
inc
jp
cmp
je
in
xor
xlat
int
mov
jecxz
mov
mov
nop
sub
xor
jb
xlat
jnp
mov
push
and
push
fimull
dec
mov
repz
and
and
inc
xor
inc
iret
clc
cmpsl
std
adc
pop
xchg
je
lret
or
push
xlat
pop
mov
lods
or
std
jp
mov
xor
xlat
aas
inc
fnstcw
loop
pushf
addr16
iret
adcl
sbb
iret
out
jg
dec
inc
push
adc
mov
insl
pop
mov
dec
sub
cwtl
into
inc
fsubs
sbb
stos
or
dec
gs
cmp
fsts
jne
std
push
mov
adc
dec
icebp
shrb
mov
cmp
std
and
arpl
fsts
xchg
mov
push
shll
mov
or
in
jns,pt
add
movsl
pop
cmp
cmp
rcll
lcall
jl
pusha
mov
inc
call
fwait
call
andl
jb
test
sub
negb
andl
cmp
cmp
aam
pop
int
cmpl
xor
addr16
stos
xchg
xchg
std
or
subb
out
testb
and
xlat
push
or
xor
out
add
fisubs
sub
sbb
or
adc
and
push
std
out
imul
pushf
sbbb
dec
xchg
or
cli
mov
movsl
iret
xchg
or
lahf
stc
out
out
push
lahf
das
popa
test
repnz
cmpsl
lret
mov
cmp
stos
ficoms
jle
and
cli
jbe
push
movsb
xchg
addr16
movsl
pop
mov
mov
cmp
xchg
add
jbe
xchg
xchg
dec
lret
mov
pop
call
adc
cmp
mov
pop
js
shlb
fnstenv
movsb
cmp
jle
lret
mov
lcall
sub
int
lea
insb
aad
and
enter
shll
push
mov
dec
dec
in
sbb
out
lods
cmp
xchg
lea
push
add
ljmp
shrb
jb
inc
iret
cmc
cld
test
adc
cs
daa
adc
test
and
xor
repnz
inc
mov
adc
push
mov
stos
or
addr16
cwtl
xor
mov
jbe
xor
fnsave
rcr
lods
clc
jp
pop
insl
fidivs
inc
adc
mov
and
jb
xlat
jmp
adc
outsl
sub
inc
imul
std
insb
int3
cmp
cmp
mov
xchg
sbb
dec
jl
xchg
add
imul
push
mov
inc
nop
repnz
cmpsl
push
je
and
jge
fs
xchg
int
jae
popf
ret
jge
jbe
fimull
or
dec
jbe
es
fidivrl
fsubp
sbb
push
push
cli
and
fsts
in
adc
jmp
pop
mov
jl
pop
xlat
inc
faddl
scas
repz
into
popf
pop
push
and
xor
xchg
cmp
dec
jno
xlat
or
loop
arpl
jnp
loopne
cli
sbb
xchg
xor
add
mov
lock
jmp
mov
sti
mov
or
xor
inc
movsl
cmp
push
mov
jl
mov
adc
adc
cltd
dec
mov
push
gs
mov
pop
or
jge
out
mov
sbb
dec
inc
mov
stos
stc
lods
lds
imul
cltd
jno
jge
inc
and
sub
xchg
sbb
xchg
mov
sub
push
cli
jmp
dec
and
xor
arpl
stc
xchg
cmp
les
push
lock
push
inc
or
cmp
sub
fisubrs
lea
leave
pop
outsl
push
jae
fsts
jle
test
pop
mov
and
popl
popa
push
std
loope
divl
mov
mull
insl
fdivl
sub
xor
dec
jae
rclb
repnz
or
inc
dec
sub
jno
add
mov
int3
les
fs
adc
sbb
jecxz
pop
jb
mov
sub
pusha
dec
sub
in
pop
inc
jbe
jle
sub
or
insb
repz
mov
xchg
add
movsb
mov
mov
push
mov
adcl
or
fcomps
sub
aas
arpl
sbb
cld
sbb
xchg
mov
addb
mov
gs
push
xchg
popf
mov
add
mov
negb
inc
inc
mov
xchg
mov
jp
ds
cmp
cltd
leave
stos
mov
jae
loope
jl
jecxz
or
xchg
xor
leave
call
inc
mov
pop
sub
cmp
add
add
pop
mov
sbb
or
dec
aad
fs
cmpsl
add
repz
rclb
movsb
push
inc
dec
pop
sbb
mov
sub
xchg
cli
adc
xchg
push
inc
push
add
dec
or
sbbb
jp
xlat
mov
push
lret
fsubrl
push
xlat
pop
mov
popa
in
mov
xchg
fildl
jo
xor
pop
xor
dec
gs
shll
jnp
scas
int3
mov
dec
in
js
jge
ficoms
mov
cld
fistl
push
xchg
js
mov
test
rcrb
mov
or
inc
lahf
sbb
jne
add
dec
jge
shll
add
out
call
jecxz
addr16
out
jns
repnz
sbb
sub
lods
xchg
stos
rcrb
stc
jl
cwtl
sub
andb
xor
lods
aas
xor
inc
push
add
aad
mov
pop
pop
xchg
out
xchg
sbb
sarb
lret
push
daa
push
aam
ja
xor
and
adc
sbb
inc
imul
cli
push
add
jmp
shl
shrl
mov
test
fidivrl
jecxz
mov
out
pop
or
or
sbb
scas
ds
pop
lods
xor
rclb
mov
jle
mov
inc
stc
adc
inc
test
jo
mov
lods
mov
mov
in
xorl
in
cltd
movsb
mov
outsl
leave
adc
nop
popf
mov
cld
mov
insl
js
test
fdiv
mov
mov
imul
sub
fxch
fidivl
inc
mov
inc
pop
mov
mov
inc
add
dec
and
arpl
push
insb
cmp
sbb
or
hlt
stc
fldt
cmpsl
fcompl
or
nop
or
loope
mov
cmpsl
inc
cmpsb
pop
icebp
jl
decl
jb
lea
mov
inc
jl
cmp
xlat
xor
faddp
mov
sub
adc
sarl
cld
cs
and
ljmp
lods
push
sub
lret
mov
repnz
sti
push
mov
insb
inc
dec
push
xchg
push
xor
mov
pop
pop
sbb
imul
push
sbb
mov
mov
mov
sbb
adc
out
inc
lret
jns
pushf
adc
stos
movsb
daa
clc
fwait
arpl
out
xchg
or
or
mov
add
fnstcw
gs
fcoml
fidivrl
inc
mov
pop
arpl
inc
fimull
push
dec
inc
fs
pop
or
push
mov
inc
mov
mov
test
and
pop
xor
aas
sub
lds
cli
popw
sbbb
inc
jmp
mov
mov
rcll
sbb
push
push
jmp
loope
sbb
jl
mov
int
fstps
sbb
rcrl
fcmovnb
test
jne
iret
js
jp
xlat
sbb
cld
das
mov
stos
lods
lahf
xchg
xor
jmp
jb,pn
sahf
xor
jmp
cmp
or
dec
test
out
rcrl
cmp
decl
lods
xchg
stos
adcl
out
cli
jg
fisubrs
scas
aas
jno
cmp
and
push
imul
mov
and
scas
push
lock
std
jmp
sub
shl
outsl
imul
fidivl
gs
jbe
movl
push
mov
sub
fmull
jnp
jmp
mov
in
outsl
push
into
pushf
fldt
insb
aam
push
sar
test
xchg
cmpsb
or
push
notl
outsb
mov
enter
lds
mov
or
lcall
lahf
mov
jb
mov
xor
or
mov
sbbl
lret
out
dec
sub
jmp
push
sub
mov
fld1
push
sub
repz
cltd
pusha
ja
mov
lea
aaa
jns
data16
test
add
testl
mov
stc
fwait
mov
jmp
xor
sbb
mov
jecxz
mov
pushf
jg
dec
call
pop
pop
push
sub
cs
aaa
rcrb
js
ljmp
lcall
popa
pop
jbe
mov
cwtl
mov
or
hlt
fdivl
gs
jl
jmp
xlat
mulb
and
lcall
lret
sti
gs
sarb
dec
adc
pop
std
jmp
or
xchg
jmp
mov
cs
sbb
popa
mov
lahf
mov
jne
les
or
inc
shlb
adc
mov
dec
pusha
iret
cli
mov
pop
sub
lahf
js
add
je
icebp
pushf
sbb
in
and
push
int3
adc
sahf
sbb
xlat
ljmp
mov
test
int
loop
dec
xlat
or
rolb
mov
rol
push
insl
ljmp
fwait
pop
mov
rol
icebp
jecxz
pop
clc
adc
dec
xchg
add
clc
push
fdivs
pop
imul
ljmp
push
aas
and
fnstsw
push
aaa
sti
inc
adc
repz
std
rolb
mov
dec
dec
jno,pn
nop
mov
or
test
pop
lods
jecxz
mov
add
jnp
cmpsl
xor
mov
jb
mov
and
movsb
jmp
lcall
out
hlt
imul
push
pop
idivl
cmp
pop
andb
pop
dec
orl
add
fwait
sbb
pop
push
or
xlat
pop
imul
fldenv
inc
mov
cmp
push
fisubrs
jle
fs
mov
inc
jns
mov
mov
repnz
mov
int
cltd
jmp
fnstenv
cmpsb
dec
xor
imul
loop
add
cltd
xor
or
or
test
sub
je
sbb
xorl
das
ret
roll
sbb
shr
xchg
int
pop
shrb
mov
xlat
iret
mov
pop
jge
int
mov
cwtl
stos
mov
ss
shll
out
and
inc
cmp
mov
or
test
xor
and
pop
push
lods
lds
bound
pop
lahf
mov
scas
shrl
ficomps
hlt
mov
ljmp
jns
shrb
mov
xchg
test
adc
cmp
dec
xlat
push
mov
arpl
jg
jae,pt
lahf
roll
fsin
mov
dec
fstpt
xor
sbb
fwait
repnz
lods
sub
ljmp
hlt
jge
pusha
jmp
or
add
jg
add
lds
mov
jmp
mov
shlb
nop
jge
js
subb
ljmp
push
imul
push
in
push
xchg
imul
mov
stos
mov
xchg
repz
add
andl
xchg
ds
iret
mov
dec
or
lcall
inc
sahf
inc
jae
mov
lahf
xorb
cmp
mov
xchg
aam
mov
ficomps
and
in
lahf
movsl
push
add
add
fldcw
gs
fiaddl
xchg
sarb
in
jbe
push
and
fidivl
es
cmp
jecxz
cld
and
push
jl
and
test
add
xchg
movsl
and
pop
xchg
or
xor
cmp
sub
xchg
popf
iret
adc
xchg
shlb
rolb
inc
les
dec
mov
inc
pop
or
test
jno
jnp
fstps
sub
ja
stos
movsl
xor
pop
into
into
xchg
sub
fldenv
pushf
push
push
xlat
mov
subl
xlat
pushf
ficomps
mov
jmp
xor
outsl
push
xor
mov
cmp
xchg
mov
movsb
fisttpll
pusha
cmpsb
sub
sar
les
xlat
mov
xchg
das
stc
fcoml
fwait
jle
pop
fwait
push
sub
ss
cmc
mov
add
aaa
mov
cmpsl
jae
sbb
out
call
jmp
aaa
cld
mov
in
rcrb
xor
outsl
test
out
and
inc
sbb
push
in
mov
sbbb
mov
cmp
push
cltd
dec
jp
fisttpl
fistl
pop
cmp
ja
rclb
jmp
pop
and
xchg
arpl
xchg
adc
jle
call
sbb
adc
or
test
push
imul
cmpsl
mov
outsl
xor
sub
das
jbe
int3
inc
dec
add
lret
cmp
push
xor
ja
popf
ljmp
jge
mov
dec
sub
data16
subb
dec
loopne
std
jecxz
movsl
mov
pop
xchg
pop
rol
rorl
sbbb
push
flds
add
cmp
xor
pop
nopl
imul
push
fdivrs
adc
fisubrl
sbb
cltd
outsl
dec
ret
or
fst
xchg
xor
adcb
pop
and
ret
sbb
popa
ret
adc
push
cmp
daa
push
je
icebp
mov
mov
dec
pop
cmp
push
dec
sub
je
and
add
jg
mov
stc
ret
mov
jge
in
bound
fcompl
mov
pop
mov
sti
aas
fstpt
cld
pop
inc
xchg
sbb
dec
dec
or
std
out
add
push
xlat
sarl
mov
inc
push
test
mov
cmp
inc
mov
lcall
inc
lret
jae
add
sar
fs
sarb
stc
dec
pushf
fsts
mov
push
test
lcall
cmp
sbb
add
gs
pushf
cmp
sub
push
push
jno
insb
ja
cmp
xchg
mov
ficoms
stos
in
scas
push
adc
mov
push
push
je
fcmovnbe
push
cmp
ret
scas
daa
cld
jb
fsts
mov
xor
cmp
inc
in
xchg
imul
xor
inc
adc
jp
dec
cmp
nop
pop
stos
cmp
or
sub
out
mov
pop
push
repz
sbb
pop
fsubl
mov
push
mov
or
andl
adc
or
mov
mov
or
imul
ds
jb
or
imul
push
jae
push
rorl
mov
xor
dec
pop
leave
push
sbb
stos
mov
cmpsl
jl
test
and
push
bound
mov
push
lahf
insb
cmpsl
sbb
pushf
out
icebp
bound
jne
jns
gs
pop
rorl
stos
xchg
mov
inc
out
jmp
jecxz
mov
outsl
aam
dec
push
push
add
rcr
pop
cs
jmp
aaa
mov
mov
scas
test
pop
push
mov
cmp
mov
jecxz
adc
cmc
xchg
push
cwtl
fsubl
inc
leave
mov
xlat
pop
cmp
mov
imul
lods
movsb
mov
mov
mov
fisubs
xor
adc
mov
sub
pop
pop
pop
out
pop
mov
mov
and
subb
xor
cmc
mov
out
xchg
cs
add
mov
pop
mov
adc
and
cmp
jecxz
jae
mov
and
cmp
pop
push
lahf
or
cmp
sarb
enter
xlat
pusha
sub
push
cmc
sbb
mov
xor
ret
test
repnz
pop
jmp
mov
stc
pushf
loope
das
cltd
inc
je
fstpt
fiaddl
push
lcall
ret
dec
rcr
xchg
xchg
lock
push
sub
js
lea
ljmp
stc
rcrl
fcomi
fdivl
pop
fnclex
ret
leave
sub
sbb
inc
xorb
cmpb
cmp
icebp
mov
aaa
ret
push
mov
jp
adc
push
mov
xchg
jne
dec
out
xor
sub
pop
jne
cli
movsb
adc
push
icebp
or
jg
pop
cli
fistl
orl
out
sbb
mov
out
aaa
push
data16
hlt
mov
popa
scas
data16
flds
pop
fimuls
fistl
adcl
je
adc
dec
xchg
cwtl
mov
push
test
stc
xor
mov
test
dec
arpl
stc
xlat
cmpsl
sub
cmpsl
dec
cmp
aad
repnz
enter
leave
pop
jl
fsts
pop
cli
inc
nop
mov
orb
jae
scas
jecxz
fcomps
std
into
adc
pop
mov
sub
pop
in
xchg
out
addr16
and
pop
int
push
mov
push
or
mov
daa
icebp
outsl
leave
cmp
shl
jecxz
xlat
mov
fcoml
stos
mov
scas
mov
jbe
pushf
or
ss
in
add
xchg
pop
ret
cli
scas
stos
or
mov
ss
loope
push
incb
mov
lahf
mov
les
sub
stos
ret
jle
std
jb
insb
movsl
mov
outsb
fidivrs
fistl
cmp
aad
mov
fbld
addr16
out
pop
in
dec
jns
mov
lahf
pop
repz
jmp
and
jne
inc
or
stc
push
dec
pop
pop
out
inc
rcll
add
out
mov
ds
out
and
dec
jae
fldenv
shrb
push
lret
int3
jo
and
cmp
xor
sbb
push
fwait
xor
dec
inc
mov
inc
mov
jns
and
jne
lods
test
mov
mov
ficoms
addr16
or
ds
mov
sub
fistpll
dec
or
push
cmp
inc
lods
sbb
fcomi
fisubs
cld
push
jae
xlat
frstor
dec
movsb
shrl
or
loop
push
cmpsl
cmc
cmc
pushf
jmp
push
sbb
pop
dec
fcompl
mov
shlb
and
jbe
adc
cli
and
ret
clc
pop
jmp
test
jg
test
cltd
inc
enter
mov
push
lea
out
cltd
mov
adc
cmp
je
or
divl
xchg
jmp
and
iret
jle
push
cmc
and
or
sbb
adc
hlt
push
xchg
sub
push
in
stc
sub
push
or
into
lret
scas
push
xchg
pop
sub
stc
push
cwtl
jae
cmpb
adc
xor
scas
pop
adc
sub
lea
push
add
test
sub
mov
and
flds
and
rcrl
jno
jns
fs
pushf
nop
out
test
push
sbb
mov
flds
xlat
mov
imulb
dec
pop
sti
pop
icebp
mov
push
enter
and
bswap
xor
and
in
imul
shrl
cmpsl
into
enter
les
dec
push
and
mov
lea
daa
js
repz
out
popl
ja
ret
sarl
sbb
jns
fnstenv
xor
mov
fldcw
cmpsb
mov
lret
fs
lahf
xlat
sub
cmp
sbb
insb
adc
lahf
outsl
and
dec
pushf
push
xchg
jne
aaa
out
cmpsl
rcr
cmp
dec
test
stc
jo
test
mov
lods
imul
fisubs
sub
add
lea
inc
pusha
mov
stc
in
arpl
test
insl
sub
repnz
ja
mov
pusha
or
dec
inc
arpl
and
and
mov
cmp
mov
jge
xor
xchg
cmp
lret
cmp
inc
add
or
inc
mov
pop
lahf
cmp
push
jl
pushf
mov
jne
arpl
and
pop
jae
or
daa
ljmp
cmpsl
jp
mov
jb
xor
lret
leave
loopne
cmp
push
stc
push
pop
cmp
sbb
mov
mov
imul
or
in
xchg
sahf
ja
jl
sub
sbb
lret
test
arpl
rclb
fwait
stc
arpl
int3
sub
xchg
call
cmp
aad
mov
and
dec
inc
or
test
adc
fdivl
clc
xchg
jp
mov
cmp
and
mov
insl
mov
jo
inc
dec
lcall
xchg
add
repnz
jle
lock
or
push
add
sti
ret
xor
pop
cmpl
mov
sarb
xchg
pusha
pop
pop
inc
stos
xchg
movsl
sub
fucomi
cmc
jp
xor
outsl
mov
lret
ds
int3
in
jmp
cmpsb
loop
xor
jecxz
daa
add
xlat
cmc
jmp
pop
aam
fisttpl
push
cmpsl
pop
pop
cmpb
shlb
mov
xchg
mov
aad
and
arpl
into
inc
mov
push
pop
mov
xlat
add
pop
test
jecxz
test
dec
sbb
fprem1
jae
xor
fcom
sbb
mov
fldenv
fisubrs
inc
iret
inc
xorb
les
sub
xchg
jbe
cmpsl
mov
cmp
mov
in
push
shr
jle
or
cmp
subl
fadds
dec
in
movsl
xchg
ror
add
pop
xchg
in
pop
xchg
addr16
jb
mov
int
ja
sub
cmp
and
cmp
xor
cmp
jne
pop
pop
les
xchg
mov
mov
mov
jle
sub
or
pop
je
jge
jp
jb
pop
leave
loope
stos
xor
test
mov
push
cwtl
test
int3
icebp
mov
movsl
add
mov
js
jl
addr16
mov
ret
or
out
addr16
mov
mov
pushf
sub
adcb
stos
pop
jb
and
dec
adc
sbb
jae
and
push
daa
push
sub
jb
mov
cmp
push
and
inc
pop
xchg
push
pop
call
jge
jo
ljmp
lahf
in
pop
jae
fldcw
je
testl
outsl
push
loop
and
fimull
pop
scas
adc
in
sbbb
cld
je
mov
sahf
or
jnp
cmp
cmpsb
fisubrs
mov
mov
inc
leave
rcrl
jae
fnstcw
jb
xchg
or
xchg
xor
dec
fwait
roll
push
or
fnstenv
roll
lret
xor
movsl
cmp
jmp
stos
mov
xchg
mov
xor
mov
test
cs
cmp
incb
subl
pop
jae
repz
je
in
cmpsl
push
out
movsl
sarl
mov
out
stc
jge
dec
xlat
js
mov
xchg
cmovl
test
mov
into
rol
xor
sbb
inc
cmp
fldt
push
cmp
fadd
cli
std
imul
or
push
cmp
mov
daa
test
dec
nop
fwait
dec
or
pop
dec
fwait
jle
mov
mov
sbbb
push
fnstcw
sub
sub
cmpsb
ret
push
cltd
insl
lds
or
mov
sbb
inc
out
and
aas
stc
mov
inc
push
test
push
vmwrite
sbb
shll
shll
int3
cmpsl
pop
ror
cli
pop
es
test
sbb
jb
xor
jbe
scas
std
cld
jne
mov
ficompl
push
dec
fwait
xchg
rolb
ja
adc
lcall
fiaddl
stos
push
mov
xchg
sbb
lret
stos
mov
jl
insl
and
addb
push
insb
sbb
lret
pop
jbe
mov
sbb
or
mov
cmpsl
cmp
mov
les
mov
mov
sub
ret
xor
clc
or
push
loope
xchg
jmp
std
pop
jp
mov
in
inc
cmp
cmp
add
js
cmp
xlat
in
popl
mov
xor
addl
xor
int
push
daa
ret
nop
and
pop
lods
add
fstl
cmp
mov
add
pushf
fsubrp
or
stc
sbb
xchg
dec
insb
int
outsl
lahf
lcall
or
add
sub
cld
icebp
lods
xchg
push
movsb
fisubs
cwtl
jnp
dec
jmp
xlat
lds
or
jo
lret
stos
nop
sbb
bound
add
out
sar
mov
inc
adc
dec
and
and
cwtl
or
mov
sub
sti
fildl
scas
sub
xor
add
push
scas
adc
jecxz
or
adc
push
loop
ja
xchg
inc
xlat
push
in
xchg
jp
push
jae
or
pop
aaa
lret
loop
sbb
xor
xor
and
dec
shll
out
pop
fidivrs
test
idivl
jmp
mov
scas
and
mov
mov
push
popf
xorb
and
mov
and
cmpsb
add
pop
imul
cmp
add
xor
andl
and
xor
out
jecxz
pop
adc
leave
ja
movsb
jb
add
cmpsl
push
cmp
aaa
enter
int
faddp
movsl
std
test
or
imul
shl
and
mov
cmp
fldt
xor
xor
sahf
or
in
loop
enter
sbb
icebp
out
loope
adc
push
fistpl
or
les
scas
dec
fisubs
cmpsl
shlb
iret
pushl
pop
insb
hlt
mov
and
dec
fldt
jb
xlat
pop
xor
xchg
push
sbb
addr16
fldt
or
cmp
mov
cmpsl
hlt
and
jmp
jmp
fdivr
xor
mov
mov
cmp
lods
dec
js
or
cmp
sbb
in
xchg
insb
dec
mov
xor
mov
fbstp
pop
push
xor
std
call
sub
push
jmp
inc
xchg
sub
popf
ja
mov
in
fistl
jg
daa
jns
push
jns
lock
push
pop
push
xor
cmp
xorb
dec
push
lock
xchg
push
adc
jmp
pop
or
inc
lret
pushf
iret
cmovne
xor
mov
jp
sub
sbb
adc
jae
xchg
sbb
cmp
adc
mov
mov
scas
pop
mov
cmp
aad
add
add
pop
fwait
mov
fcmovnbe
mov
sbb
out
in
push
cmp
movsl
cmpsl
or
lock
xchg
sub
dec
test
int3
icebp
arpl
dec
lahf
xchg
push
dec
lahf
cmpsl
adc
mov
sub
push
stc
jge
cwtl
mov
je
mov
inc
hlt
mov
xlat
filds
aam
lcall
pop
jns
xchg
cmp
out
jle
jns
lret
stos
aad
xchg
arpl
mov
test
xchg
bound
int
dec
fistpl
or
inc
outsb
mov
pop
or
pushf
dec
aas
imul
push
mov
sbb
xchg
fdivs
mov
in
xchg
mov
push
mov
sbb
sbb
in
jo
fsts
add
imul
sub
stc
inc
fnsetpm(287
das
dec
and
outsb
push
out
testb
out
test
sub
xlat
notb
popf
out
push
test
arpl
mov
add
sbb
xor
inc
lret
cmp
mov
clc
mov
pushf
fbstp
xchg
notb
mov
sahf
push
ja
sti
mov
cltd
push
jno
pop
addr16
xchg
jns
mov
insl
xchg
jns
popa
jbe
sbb
xor
sbb
cmp
sbb
mov
ret
repnz
pusha
push
iret
jge
std
and
add
test
aas
jb
scas
dec
jge
cmpsb
xchg
mov
sarl
cmp
data16
dec
aaa
shl
rep
fwait
pop
js
cmp
loopne
xor
or
movsl
dec
imul
push
shl
subb
jnp
push
enter
push
fisubrs
inc
std
mov
test
ss
inc
push
shr
sub
dec
std
repnz
cwtl
fildl
fisubl
cld
add
mov
add
sub
mov
add
fsubrl
stc
shrb
fwait
push
xor
mov
es
dec
sarl
xor
jns
jnp,pn
xchg
cli
jge
push
iret
jo
js
push
into
mov
and
and
cli
mov
test
out
fiaddl
mov
sbb
fistps
cli
es
jnp
fwait
inc
xchg
ss
rcrl
and
ss
in
add
aam
push
insl
inc
pusha
pop
cwtl
xor
xchg
cmp
js
sahf
xor
cli
inc
cmp
fwait
cmp
jo
xchg
cmp
bound
jp
jg
jnp
test
inc
jnp
xor
adc
mov
ficoml
in
imul
clc
andb
fldcw
and
cmp
xor
pop
dec
ret
cmp
sub
das
jbe
jno
xor
lea
jge
pop
sbb
imul
out
stc
mov
sbb
and
movsb
mov
insl
push
fisttpl
sub
sbb
sbb
jns
sub
and
enter
clc
ja
and
jmp
imul
sbb
dec
punpckhdq
pop
cli
adc
jnp
lods
cmc
je
cli
cltd
push
adc
pusha
jl
inc
or
pushf
js
jnp
cmp
mov
pop
push
push
inc
pop
inc
cld
ljmp
outsl
pop
out
es
add
outsl
or
push
and
pop
inc
mov
stos
bound
jo
and
imul
inc
push
fdivrs
mov
pop
inc
dec
inc
jnp
xor
pop
lods
cmpsl
je
pop
cli
movsl
bound
mov
add
aad
cmp
mov
jp
xlat
jnp
jne
inc
push
adc
and
lret
and
mov
cmp
fildl
sub
and
enter
and
imul
cmp
sub
push
dec
pop
ja
xor
adc
dec
je
cmp
jnp
cmp
jne
mov
idivb
xchg
mov
cmp
cli
mov
ja
ljmp
fidivrs
sbb
in
imul
cmc
mov
jg
test
dec
stos
bound
outsb
insl
fs
imul
je
jmp
sbb
push
pop
dec
jns
xor
sbb
mov
cwtl
xor
push
out
jmp
inc
or
cli
pop
mov
enter
loop
fldcw
sbb
xchg
sub
lret
jae
xor
pop
imul
ss
cmp
jo
loope
stos
rcll
inc
pop
dec
lcall
jns
inc
int3
mov
data16
js
inc
inc
jnp
aam
push
test
sub
mov
xchg
js
adc
fidivrs
and
cmp
mov
outsl
jnp
hlt
adc
loopne
in
push
jnp
shll
addb
add
dec
dec
cld
mov
sub
cmp
out
and
sbb
idivb
sub
or
jo
dec
sar
push
add
adc
lcall
mov
pop
inc
lods
push
add
and
jnp
ret
lret
mov
pop
push
or
imul
pop
xchg
add
jns
cmp
sbb
movsl
loopne
cli
fwait
jne
stc
jnp
add
or
sub
int
sbb
jle
fwait
and
pop
mov
mov
test
jnp
dec
xor
shl
dec
xor
sbb
push
inc
cmp
loopne
fsts
into
xor
jnp
scas
sahf
lock
out
or
cs
outsl
jecxz
xchg
arpl
scas
jnp
loopne
inc
fdivp
push
mov
adc
push
sbb
xor
inc
idivb
xor
xchg
xchg
lahf
out
jecxz
mov
jp
fxch
cmpb
inc
dec
out
daa
dec
adc
pop
ds
nop
jecxz
cmp
jnp
xor
rclb
inc
and
cs
test
mov
and
add
lcall
push
in
cld
sub
cmp
divl
jnp
idivb
pop
insb
shrb
sarb
pop
lret
sysenter
fildll
sbbb
push
fmull
xor
es
xor
mov
jnp
adc
push
ds
and
sub
sahf
jmp
jnp
mov
sub
xchg
push
sub
in
test
pop
imul
xor
cmp
jns
ds
bound
mov
pusha
xlat
jnp
out
leave
sbb
inc
dec
bnd
icebp
bound
add
jb
stos
push
pop
ja
repnz
mov
mov
test
push
mov
cmp
xor
jae
addr16
push
lds
mov
mov
jne
idiv
pop
xor
add
mov
jnp
xor
jp
repz
sbb
fldz
test
pop
es
loop
cmp
fisubl
lds
or
mov
add
popf
mov
in
ljmp
push
sbb
ds
inc
jnp
leave
scas
pop
jl
imul
mov
pop
jnp
psrad
or
pushf
pop
push
insb
lods
xchg
std
insl
ljmp
dec
lock
lret
xchg
mov
adc
cmp
pop
add
int
jns
fdivs
jnp
dec
xor
inc
fwait
es
cli
out
fldt
sub
and
fwait
jnp
sub
loope
jno
lahf
bound
sbb
dec
movb
mov
ja
dec
mov
iret
je
jnp
sbb
repnz
push
cmp
adc
dec
cld
add
jnp
dec
ret
shlb
dec
or
push
imul
sbb
jnp
xor
push
add
add
into
xlat
adc
in
ljmp
mov
push
jnp
cs
mov
inc
mov
pop
loope
lret
les
lea
outsw
and
xor
aaa
mov
mov
push
inc
fcoms
enter
sub
fisttpll
mov
ret
jl
in
jge
jp
cwtl
sub
sahf
aas
js
cmpsb
fwait
inc
ja
scas
lret
inc
stc
mov
push
hlt
xor
pushf
sbb
jecxz
ljmp
nop
xor
sahf
jnp
mov
or
aas
xchg
push
jnp
xor
mov
add
fwait
cli
xor
add
mov
out
mov
insb
repnz
pusha
cmp
cmp
jno
mov
jnp
insb
jl
xlat
les
scas
cmp
std
push
xor
pusha
cmpsl
fdivl
inc
jns
jnp
pop
jb
cmp
jnp
inc
pop
xorb
sahf
fidivl
cld
sarb
lret
adc
jecxz
loop
insb
ljmp
pop
xlat
or
cmp
clc
and
push
in
rcrl
sub
jnp
mov
dec
cmp
adc
cwtl
ds
xor
add
shll
lock
lret
xor
js
jnp
add
sti
xchg
scas
test
ret
pop
jae
sub
and
pop
in
clc
test
mov
out
ljmp
aam
or
dec
bswap
pop
test
pop
jl
dec
es
jnp
mov
mov
and
bound
daa
adc
cmp
loop
imul
loop
jnp
sbb
fs
add
pop
das
out
push
pop
cli
xor
mov
pop
pop
jnp
dec
fnstenv
jnp
movsb
dec
pop
fidivl
push
ss
lret
xchg
add
inc
pop
jnp
nop
mov
outsb
pusha
stos
jle
add
pop
cmp
mov
push
pop
scas
xor
add
or
cmc
push
imul
adc
push
dec
jae
aad
mov
dec
jne
sbb
push
inc
fildll
movsl
ljmp
xor
out
pop
xor
xlat
shlb
cmp
in
insl
shl
xlat
lds
loope
add
test
or
movsb
jp
mov
pop
push
xchg
lahf
testl
popf
jp
or
sbb
emms
out
xlat
jle
pop
inc
mov
popf
or
jp
rolb
imul
cmc
sub
cld
adc
jnp
push
jmp
imul
dec
clc
dec
jnp
xchg
push
jnp
mov
data16
pop
in
mov
jp
xor
cs
cmc
jno
scas
and
daa
pop
pop
jnp
imul
add
push
int
mov
lret
mov
dec
jo
mov
cmp
pop
sbb
ljmp
outsb
push
pop
add
pop
dec
sub
pop
dec
lods
jae
movsl
jnp
aaa
push
jnp
loopne
stc
scas
adc
pop
std
in
call
jecxz
dec
data16
imul
rcl
adc
lahf
push
push
leave
stc
mov
icebp
js
iret
test
or
mov
mov
cmp
jnp
repz
push
dec
lds
jnp
sbb
in
test
ds
xchg
js
mov
sarb
scas
out
xor
aad
sbb
cld
adc
clc
cmpxchg
jo
mov
lods
xchg
jge
sahf
dec
add
pop
xchg
jnp
hlt
sub
lret
jae
mov
jo
pop
clc
sub
roll
sub
inc
fstpt
and
gs
cmpl
cmp
ljmp
loop
ljmp
adc
sub
xchg
mov
stc
xchg
ret
sbb
jnp
push
fcoml
xor
xchg
add
stc
sbb
hlt
ja
ret
testb
and
xor
ljmp
dec
jns
fmulp
cmc
jge
aas
mov
mov
mov
aaa
in
shll
push
xchg
pop
stos
repz
jnp
sbb
fld
les
mov
adc
ficompl
mov
mov
xor
adc
push
iret
in
jnp
inc
icebp
mov
fadds
cmp
test
hlt
imul
fsubrl
add
lret
cmp
std
pop
clc
xchg
cmp
cmp
pop
xor
in
dec
test
lods
ja
add
jnp
fwait
inc
jnp
xchg
add
xchg
mov
ljmp
xchg
jb
add
push
mov
test
mov
jnp
or
sub
ss
imul
jp
aaa
repz
jnp
roll
add
insb
sub
iret
and
pop
dec
xor
push
xor
pusha
pop
lcall
pushf
add
xor
or
sbb
ret
icebp
jo
sbb
jae
push
adc
out
mov
xor
pop
cmp
popa
mov
aas
outsl
test
ja
fwait
cmp
dec
adc
cmp
dec
lcall
inc
aam
inc
pop
imul
gs
idivl
out
mov
lahf
imulb
insb
push
xchg
cmp
or
sahf
mov
cli
mov
test
addb
inc
jle,pt
mov
cld
repnz
je
sbb
fcmovne
mov
fwait
jnp
mov
data16
fistl
xchg
jb
in
or
cmpl
xchg
out
fidivrl
mov
dec
pop
cmp
mov
pop
jns
fdiv
shrb
insl
push
add
pusha
sbb
cmpsb
mov
or
mov
les
push
xchg
mov
or
or
xchg
or
dec
cli
jl
jp
inc
mov
out
sbb
scas
shrl
cmpsb
fstpl
movsl
loopne
iret
jp
mov
fcmovnbe
xchg
xchg
cmp
inc
xchg
push
fwait
jp
cmp
mov
mov
scas
scas
pop
inc
cmpsb
daa
outsb
hlt
mov
sub
test
xchg
lcall
pop
xchg
cmpsb
cmp
mov
xchg
andb
iret
jp
sti
repnz
loopne
out
pop
movsl
mov
fisubrs
pop
test
mov
stos
mov
sub
mov
mov
test
rcrb
sbb
cmp
xchg
fisttps
mov
pop
mov
lret
pop
adc
stos
enter
mov
add
jne
mov
mov
inc
inc
jno
scas
jmp
cld
out
int
fistl
xchg
mov
scas
xchg
cmp
daa
cld
inc
xchg
push
inc
mov
mov
xor
jle
fsubs
cmp
mov
mov
outsl
clc
scas
inc
stos
repz
cmpsb
add
cmp
mov
xchg
mov
sbb
xchg
testl
outsl
xchg
xor
cli
jns
push
or
insl
mov
jp
mov
scas
fsubrp
data16
stos
jge
or
cmpsb
mov
insl
xchg
mov
mov
pusha
xchg
jmp
mov
and
mov
xor
lock
mov
inc
mov
fdivrl
imul
jbe
sub
mov
xchg
mov
lahf
inc
mov
insl
stos
sub
cmpsb
or
pop
xor
jmp
outsl
lcall
sub
mov
xchg
jo
jg
xchg
xchg
mulps
ljmp
lcall
mov
xchg
xchg
push
scas
enter
jnp
mov
mov
push
xchg
xchg
imul
out
cmpsb
xchg
xchg
or
inc
loop
lea
dec
pusha
or
int3
jmp
or
aad
popf
pop
fstpl
sbb
mov
cmpsb
dec
mov
sahf
pop
sbb
stos
xchg
sbb
jecxz
imul
test
cli
cmp
xchg
mov
inc
ds
outsb
xor
cmpsb
pop
inc
mov
cwtl
jno
lcall
xchg
js
sub
mov
outsl
mov
xorb
jb
stc
dec
mov
or
insb
fnstsw
fldenv
sahf
enter
sub
xchg
mov
xchg
pop
inc
cmp
or
adc
pop
aaa
hlt
sbb
mov
or
mov
ffree
pop
pop
loope
mov
stos
mov
pop
push
cmpsb
mov
pmaddwd
lcall
les
push
divl
stos
dec
das
fcmovnb
lret
fidivrs
and
dec
jns
cmp
or
mov
imul
xor
cltd
cld
imul
pusha
dec
mov
push
pop
cmpsb
lcall
push
jle
mov
add
pop
out
cmp
mov
cmc
orb
nop
cmp
in
insl
mov
cwtl
xor
sbb
or
loope
adc
outsl
and
jno
inc
mov
sahf
inc
lcall
test
push
jno
xchg
mov
inc
pop
inc
pop
jo
jle
xor
jecxz
dec
sbb
or
mov
mov
aad
mov
sbb
jmp
mov
test
push
or
push
adc
sbb
fstpt
dec
xor
std
lret
fcmovnu
fcoml
mov
inc
pop
jae
mov
test
imul
fidivs
jbe
stos
stc
push
sbb
iret
sbb
lcall
clc
imul
dec
xchg
js
cmp
mov
jae
mov
loope
xor
jle
lods
leave
jb
inc
mov
mov
outsb
subl
jb
cmpsb
sub
jmp
sahf
inc
xchg
aaa
mov
inc
shll
xchg
outsb
push
leave
arpl
loope
sbb
mov
xchg
or
mov
xor
mov
jne
or
insb
fneni(8087
ljmp
les
loop
negb
push
push
stc
imul
leave
outsb
sbb
mov
ret
fisubrl
sbb
les
loop
in
inc
mov
dec
int
inc
fildll
ficompl
cmpsb
out
pop
mov
mov
lcall
inc
fdivrl
sbb
test
adc
mov
xchg
out
sub
mov
outsl
ret
sbb
out
adc
mov
push
mov
inc
mov
sahf
cmp
pop
addr16
lcall
inc
or
testb
ljmp
jmp
fldt
loop
sbb
pcmpeqd
mov
push
xor
xchg
sbb
mov
stos
or
ror
addr16
sahf
dec
and
fcoms
push
cld
arpl
jmp
fstpt
fucomi
ljmp
jle
xchg
rorb
jno
sbb
or
mov
scas
mov
pop
fsubrl
jae
mov
sahf
test
or
insl
bound
sarb
mov
jae
imulb
mov
lods
mov
sbb
dec
pop
xchg
push
pop
pop
clc
xchg
stos
sti
pop
sbb
mov
push
sahf
add
mov
pop
test
and
outsb
or
fimuls
and
pop
clc
ret
xchg
mov
add
cmc
mov
xor
hlt
pop
xlat
sbb
sub
ds
stos
mov
push
and
push
test
cmp
mull
mov
jae
mov
mov
loopne
sbb
mov
out
pop
call
stos
inc
mov
mov
out
xchg
xchg
mov
sti
xor
enter
cs
rcr
push
and
dec
lcall
sub
jnp
mov
push
xchg
sti
sbbb
jge
cmp
cwtl
cmp
mov
mov
stos
adc
mov
sub
mov
in
xchg
lcall
push
mov
xchg
out
pop
jns
idiv
jle
push
imull
jns
cmp
out
mov
sti
mov
jmp
push
stos
cmpsb
jo
stc
lock
inc
mov
pop
xchg
lcall
xor
push
lret
jmp
cmp
repz
addr16
pop
cmp
mov
mov
out
xchg
scas
push
xor
cwtl
mov
jl
stos
inc
pusha
fdivs
mov
sahf
cmp
lcall
pop
loope
stos
cli
mov
adc
addb
pop
fsub
fwait
out
sbb
loop
mov
sub
xor
xchg
fistpl
test
and
jnp
dec
mov
sub
or
js
stc
add
pmuludq
cmp
jae
negb
push
fwait
aaa
cmpsb
test
xchg
mov
xchg
outsl
cmpsb
push
inc
cmc
popa
xor
dec
data16
test
lcall
push
testb
pop
imul
cmp
sbb
or
push
sbb
lods
cld
sbb
dec
mov
push
or
dec
inc
cs
inc
andb
insl
inc
cmp
je
cltd
and
inc
mov
inc
negb
sbb
mov
mov
cwtl
xchg
test
inc
call
xor
sbb
fistpl
mov
inc
push
mov
sub
xor
outsb
lcall
aam
loop
sub
lcall
arpl
mov
mov
xchg
mov
das
dec
pop
lods
push
aad
insb
pop
xor
add
cmpsb
inc
inc
or
mov
cmp
mov
test
push
or
cli
inc
mov
xchg
insb
ljmp
cmp
push
jp
add
arpl
or
jb
jnp
stos
movsl
mov
pusha
and
xchg
jae
pushf
xchg
ret
jbe
leave
xchg
sarl
and
es
mov
jl
leave
inc
jmp
fcmovnb
adc
cld
or
scas
mov
push
pop
je
jp
sbb
mov
jmp
xchg
xchg
push
xchg
leave
mov
add
cwtl
inc
add
repnz
inc
xor
add
push
stc
les
cmp
mov
shrb
pop
inc
mov
cli
in
xchg
stos
ja
mov
lea
cwtl
jns
insl
ljmp
jle
mov
pop
push
mov
lret
dec
testl
mov
inc
test
mov
cmp
cmp
int
sub
ficoms
mov
xchg
clc
mov
fsubrl
push
orb
ds
push
test
or
ss
mov
test
inc
jmp
negl
pop
push
std
aaa
cltd
pop
mov
ficompl
pop
clc
mov
xchg
sahf
test
push
dec
popa
inc
mov
fidivl
mov
outsl
and
adc
sahf
and
sub
int
jns
inc
test
add
sub
arpl
xor
cmp
and
xchg
xor
push
popa
cmp
mov
or
pop
sub
push
mov
pop
cmp
fisubrs
dec
and
imul
ss
sbb
sub
pusha
lret
xchg
mov
stos
or
fstl
jae
cmp
int3
mov
mov
pop
xchg
mov
negb
cmp
stos
mov
and
mov
sbb
jbe
cmp
mov
outsb
and
mov
add
push
jl
mov
add
and
jmp
mov
loope
pop
lods
ljmp
lds
or
rolb
sahf
hlt
push
das
jbe
in
ja
in
fstpl
xchg
mov
push
mov
cmp
mov
xchg
fwait
bound
cwtl
jno
mov
push
xor
insl
inc
loopne
pop
mov
adc
jae
scas
dec
out
push
pop
sarl
cmpsb
dec
ljmp
aaa
mov
test
push
xchg
jp
mov
out
sub
pop
mov
jne
mov
scas
pop
dec
adc
jne
in
cmpsb
mov
pop
cmc
and
xchg
pop
es
pop
clc
lcall
pop
pop
xor
xchg
imul
adc
sub
mov
mov
jo
repnz
dec
pop
and
outsl
fwait
outsl
sahf
inc
xor
cltd
loope
mov
inc
adc
mov
ja
sub
repnz
mov
pop
imul
cwtl
mov
cmp
dec
xor
outsb
xorl
jns,pn
mov
lret
lcall
insb
adcl
mov
ljmp
pop
mov
in
push
xchg
mov
cld
dec
scas
mov
jmp
pushf
sub
xchg
push
mov
in
inc
fsts
cwtl
cmp
xchg
mov
inc
ljmp
adc
imul
mov
popa
xor
arpl
test
decb
stc
push
and
push
lods
out
mov
ficomps
xchg
push
inc
aaa
sbb
cltd
into
jl
pop
sarl
and
ja
scas
pop
stos
adc
pop
mov
rorb
sub
pusha
pop
dec
insl
cltd
xchg
mov
jmp
pushf
xchg
jmp
clc
push
loop
inc
dec
mov
inc
in
insl
cmp
dec
jmp
test
daa
xor
insl
ret
jns
jns
push
push
push
jns
mov
xchg
push
ret
xor
outsb
dec
sbb
dec
mov
mov
dec
sub
leave
ljmp
push
repz
scas
mov
dec
and
cmc
cmpsb
test
out
xchg
mov
inc
sahf
mov
cmc
mov
jne
test
jns
cmc
sbbb
push
sub
movaps
fiaddl
ds
push
lods
sbb
push
pop
push
cmpsb
mov
lret
xor
pop
rolb
inc
lahf
or
pushf
push
pop
jle
out
outsb
xor
cld
loop
sub
movsb
mov
push
jle
fdivrp
imul
sbb
mov
pop
mov
jo
imul
cmpsb
clc
xor
jno
out
cmpb
xor
ficoms
or
pop
pop
bound
xor
outsl
dec
xchg
orb
sarb
jmp
imul
mov
xchg
mov
ret
popa
jns
push
sub
fstpt
mov
out
sbb
sbb
jl
xchg
movsb
mov
cmp
mov
xor
jae
adc
cmp
or
aaa
or
negb
jae
cmpsb
mov
and
jb
pop
push
push
mov
xchg
popa
and
inc
cld
adcl
and
mov
jp
jmp
cmpb
pop
repnz
cltd
xor
cmp
pop
or
xor
inc
popa
lmsw
test
jns
out
mov
inc
test
aas
and
mov
mov
jno
testl
movsb
mov
dec
mov
ljmp
and
sti
mov
mov
or
xchg
sti
xor
jl
imul
orb
inc
jae
xor
imul
fcomp
xor
xor
or
stos
leave
loop
hlt
jb
mov
or
std
ret
adc
xchg
ja
les
sub
int3
sti
pop
int
pop
out
xor
push
pop
and
fdecstp
cmp
insl
je
aad
dec
idiv
cwtl
pop
push
scas
or
stos
hlt
sbb
mov
jge
out
hlt
add
les
imul
cmp
mov
stc
or
dec
sub
icebp
jbe
in
sub
cld
or
stos
mov
mov
cmp
adc
fldcw
add
mov
ljmp
lret
dec
jae
in
or
xchg
lds
ljmp
mov
loopne
loopne
sub
cwtl
inc
add
aad
and
jns
jns
sub
mov
jo
xchg
add
mov
pop
jb
mov
jnp
addr16
mov
in
je
aam
scas
mov
jle
cs
repnz
sub
sbb
or
scas
pop
jl
push
or
mov
nop
cld
mov
xchg
xchg
sahf
adc
scas
pop
mov
push
testl
adc
adc
orl
mov
sbb
fcompl
mov
fsubs
push
mov
mov
divl
push
pop
fyl2xp1
addr16
xchg
cmp
push
jmp
fisttpl
adcb
adc
mov
imul
es
mov
xchg
rcr
movd
xchg
scas
inc
stos
sub
stos
dec
ljmp
leave
jp
lcall
mov
fiadds
push
mov
adc
sub
pop
data16
jp
inc
push
dec
and
cld
dec
stos
jmp
xchg
cmpsb
iret
outsl
push
mov
in
hlt
enter
add
jl
sbb
xchg
mov
je
sub
outsb
fdivp
data16
sub
cld
dec
push
imul
sar
daa
out
adc
shll
out
or
xor
push
jmp
push
rclb
xchg
or
mov
ljmp
jle
cmp
pop
xor
or
pop
sub
xchg
xor
jb
mov
fistps
lret
jmp
xchg
xchg
cmp
mov
orb
add
and
stc
insb
push
mov
cmp
push
call
mov
addr16
xchg
cmp
mov
movsb
sbb
repz
mov
leave
cmp
xchg
stos
xchg
imul
add
test
sbb
outsb
mov
jno
xor
mov
xchg
push
stos
mov
dec
test
xchg
repz
xchg
lcall
movsl
inc
outsl
dec
fwait
xchg
cwtl
and
or
cmp
jno,pt
sub
leave
lods
sbb
dec
push
loop
fnstcw
movsb
mov
aas
adc
or
mov
sbb
imul
repnz
push
out
sub
sbb
mov
dec
jl
notl
orb
inc
cmp
jle
xor
imul
dec
jmp
scas
aam
xor
gs
xchg
cmp
pop
add
outsl
sbb
cld
ss
add
and
mov
pusha
cld
jp
xchg
subb
insb
or
push
dec
lret
xor
orl
xor
jne
shl
loop
sahf
and
insl
xchg
shrl
test
jne
mov
mov
test
idivb
mov
sahf
or
divb
bound
icebp
mov
cltd
pop
mov
loop
lcall
jmpw
add
ja
mov
pop
push
sarl
cmp
cmp
push
rorb
fldlg2
xor
pushf
pop
pop
repz
stos
fisubl
imul
sar
cwtl
repnz
ficoms
scas
jno
cmp
mov
jle
and
in
push
sbb
mov
dec
xchg
mov
mov
lods
and
jmp
sti
ret
or
lcall
and
mov
into
jbe
ja
sub
adc
cmp
mov
xor
hlt
addr16
mov
out
add
jmp
lcall
and
clc
js
and
jecxz
popf
stos
shlb
out
cld
mov
je
mov
pop
jp
xchg
xchg
xchg
jmp
fisttpll
in
jns
xchg
lret
xor
jns
cmp
imul
mov
mov
cmp
test
mov
and
xchg
and
mov
sbb
mov
hlt
inc
sbb
push
xchg
dec
mov
xchg
sbb
int3
mov
jge
daa
in
mov
dec
in
sarl
mov
push
push
mov
and
jo
mov
imul
cs
mov
push
lcall
outsb
test
notb
pushf
pop
and
cs
jb
mov
push
mov
and
xchg
mov
push
mov
loop,pn
dec
outsb
xchg
fnstenv
mov
addr16
mov
jmp
fcomi
pop
and
xchg
aam
aaa
mov
leave
cmc
push
lods
cmp
xchg
mov
pop
rcrl
xor
adc
push
pop
push
fwait
int3
jg
mov
pop
inc
lret
dec
mov
or
adc
mov
sti
cld
es
jmp
fucomi
lret
or
pop
leave
mov
pop
xchg
int
in
int3
add
mov
push
out
lods
sub
insb
sbb
and
pcmpeqd
xor
inc
cltd
sub
cmpsb
cld
xlat
loop
vmread
mov
fsubp
push
lret
xchg
loop
mov
pop
hlt
mov
pop
xchg
xor
flds
xchg
cmpps
mov
or
imul
fildl
pop
outsl
stos
cmp
ja
jb
pop
idivb
inc
subl
xor
test
jl
push
cmc
mov
ret
dec
jns
addb
jmp
lret
and
jge
inc
dec
das
outsb
mov
stos
icebp
xor
cmpsb
xor
mov
jns
mov
adc
mov
bound
sbb
cmc
mov
and
cs
stos
cwtl
cmp
mov
xchg
mov
xor
pop
xchg
scas
cmp
mov
sub
fwait
repz
int3
insb
and
push
insl
mov
xor
or
ljmp
xchg
mov
xchg
les
push
scas
loope
inc
or
jbe
dec
sahf
fs
cs
mov
cmc
and
movntq
rolb
bnd
fmull
mov
fmuls
jo
in
cmp
scas
or
stos
test
ljmp
int3
cmp
lcall
push
mov
addr16
outsb
mov
iret
lock
mov
sbb
ljmp
jbe
mov
xchg
fwait
dec
inc
stos
mov
out
mov
sarb
sub
xchg
lods
jmp
fimuls
push
in
dec
rorb
dec
fisubrs
loop
and
xor
mov
and
sbb
mov
ja
fs
sub
push
xchg
sbb
xchg
mov
jb
xchg
mov
jns
mov
mov
lcall
das
inc
adc
insb
mulb
jb
subl
pop
loope
fiaddl
xchg
ret
lock
fwait
or
in
or
ja
mov
stos
and
push
ljmp
pop
xor
in
inc
xor
sub
jns
imul
sti
or
jo
jb
cli
or
cld
stos
inc
pop
mov
sarb
mov
cmp
in
cmp
ficomps
mov
xorb
imul
int3
jbe
pop
shrl
sub
std
jmp
add
and
cld
and
cmp
insl
or
xor
mov
test
and
xchg
mulb
jle
or
push
fidivs
lret
iret
repz
nop
ds
aad
clc
fcoms
xchg
mov
fiadds
call
mov
scas
pushf
jp
inc
mov
int
adc
push
aaa
das
pop
cmp
push
stos
bnd
mov
cmp
cs
push
fsts
js
dec
cltd
repz
mov
xchg
in
jne
ljmp
mov
xor
or
mov
and
stos
fsubr
ret
xlat
adc
aaa
aaa
xchg
xchg
and
lods
cli
mov
or
pop
fwait
cmp
cld
push
dec
pop
or
mov
addr16
repz
scas
pop
jmp
stos
mov
mov
imul
and
sti
addr16
fcompl
fiadds
mov
xchg
add
mov
mov
add
in
sbb
adc
pop
xor
out
negl
jmp
mov
xchg
mov
or
adc
mov
dec
add
ficompl
cmp
daa
fldt
clc
mov
das
mov
mov
jns
repnz
aad
mov
addr16
or
xchg
sti
sbb
scas
test
and
fldt
mov
sbb
adc
inc
sahf
xor
cmc
and
cltd
push
cmp
or
ja
ss
testb
cs
cmp
or
pop
mov
sbb
ljmp
or
push
mov
pop
xchg
mov
adc
lret
add
imul
dec
or
xchg
cmc
inc
add
stos
out
cmp
adc
xchg
imul
ss
adc
inc
add
push
sub
xchg
adc
pop
push
mov
jp
ficompl
mov
push
ret
push
fcmovnu
xchg
scas
test
stos
mov
mov
pop
in
jmp
and
or
imulb
fstpt
fisubl
xchg
dec
mov
pop
arpl
or
xor
in
xchg
jg
sub
cmpsb
cmp
push
push
jbe
mov
sub
pushf
int3
xchg
test
mov
imul
out
repz
in
mov
jns
jno
and
mov
fnsave
or
cld
cmp
inc
mov
cmp
push
mov
repnz
xor
mov
xchg
js
push
lea
mov
mov
cmp
pop
inc
sbb
push
fs
jae
xchg
and
insl
cmp
xchg
jp
xchg
inc
sbb
xor
stos
je
or
imulb
pop
mov
add
fnstcw
xchg
mov
xchg
mov
push
clc
ljmp
sbb
cmp
jmp
mov
cs
jb
cmp
sub
pusha
push
add
in
mov
xor
icebp
rorl
cs
jmp
stc
xor
mov
xchg
outsl
jecxz
stos
lret
cmp
sahf
sub
add
pop
jb
jns
adc
inc
js
push
fisubrs
inc
imul
lods
or
jns
push
out
cld
mov
add
jne
lock
das
cmp
stos
inc
jmp
movsb
je
jbe
sub
in
and
mov
int3
xor
or
push
mov
leave
daa
not
adc
sahf
jle
sub
xchg
jns
jl
stc
mov
mov
subb
fwait
loope
scas
cmc
mov
cmpsb
popf
out
jno
lret
repz
std
xchg
push
in
and
jl
rolb
mov
cmc
stc
pop
push
test
xchg
ja
mov
mov
roll
jo
scas
adc
xor
cld
or
loop
test
xchg
cmp
mov
insl
ret
xor
mov
pop
sub
mov
jp
gs
or
inc
or
idivb
pop
jno
cmp
lea
out
adc
test
sub
in
or
imul
fimuls
inc
push
jmp
loop
icebp
cli
jle
jmp
fldlg2
push
mov
push
lret
dec
mull
rcll
mov
jnp
push
cmpsb
andl
stos
jb
mov
dec
inc
mov
inc
cmp
jp
jne
cmp
mov
mov
mov
jp
add
xchg
icebp
mov
push
mov
sub
sub
xor
cld
xor
or
mov
lcall
cld
notl
sub
sahf
cli
mov
lret
repz
inc
mov
xchg
shrb
decl
in
icebp
pop
push
lock
cmp
jns
mov
add
repz
xchg
aam
and
jp
pop
cltd
stos
cmp
adc
inc
fisubl
jecxz
inc
cmpsl
bound
xor
shrl
xor
inc
sub
inc
xchg
jno
jle
ss
mov
or
jl
lret
js
stos
cmpsb
not
insl
sbb
clc
add
push
pop
outsb
xchg
mov
xchg
cld
jmp
lods
mov
mov
hlt
aam
or
cmpsl
fnstenv
add
addr16
ficoms
neg
pop
cmp
inc
jae
sbbl
push
mov
rorb
xchg
push
jle
leave
insb
xor
jp
ds
aam
mov
mov
or
push
test
pop
dec
mov
mov
mov
or
push
fwait
add
sbb
sbb
imul
rcll
cmc
test
mov
mov
stos
rorb
xchg
fisttpl
out
sahf
mov
inc
mov
mov
or
jo
fdivrs
or
pop
push
xor
push
jo
cmp
mov
jmp
sbb
mov
pop
xor
cld
icebp
cmpsb
pop
jmp
mov
sbb
dec
cld
bound
xchg
push
sbb
mov
cli
add
je
sub
sbb
cmp
inc
dec
or
mov
clc
and
mov
cmc
cltd
leave
inc
cli
stos
jg
int
lret
test
lods
movl
ja
enter
cmpsb
int3
mov
sbbl
cmp
insb
in
cld
sub
fidivs
jge
fisubl
and
cltd
push
sahf
add
fcompl
push
pop
add
negb
mov
mov
xchg
andb
add
sub
jp
sub
and
pop
adc
flds
cmp
lahf
sbb
in
sub
cmpsl
cld
rcll
mov
xchg
cmpb
add
cs
mov
cmp
cld
loop
add
sub
je
sbb
test
fistpl
test
xchg
cmp
mov
jns
sbb
inc
or
ja
mov
mov
mov
jl
mov
mov
xchg
pop
out
xor
inc
cmp
lret
push
xchg
jbe
cmp
insl
xor
xor
lock
xchg
lds
cmp
nop
icebp
pop
cmp
push
aas
jmp
dec
dec
sbb
mov
dec
cmp
mov
popl
sbb
iret
and
inc
jne
movsb
or
mov
xchg
mov
icebp
cld
add
fidivrs
cmp
push
aaa
mov
shlb
inc
sahf
xchg
jno
sbb
movsb
inc
gs
inc
mov
mov
xchg
and
mov
push
sti
cmpsl
xor
mov
mov
jp
pop
pop
mov
cli
xor
insl
pushf
gs
sahf
sbb
nop
xchg
mov
lods
jno
pop
push
and
jl
dec
xchg
jmp
and
das
xorb
jl
int3
addr16
mov
fwait
sti
push
stos
push
mov
leave
sahf
je
imul
stos
outsb
adcl
pop
push
mov
push
dec
mov
pop
inc
les
rcll
jmp
fstpt
add
or
xchg
jno
jo
xor
adc
fldcw
cltd
xor
jbe
mov
push
pop
mov
and
xor
jnp
jne
imul
stos
pop
sti
add
stos
clc
or
ljmp
xchg
and
sub
xor
mov
mov
stos
mov
in
ret
or
orb
xchg
xorb
jle
mov
fdivl
or
inc
cltd
leave
add
stos
mov
jmp
or
imul
in
mov
das
jmp
sub
push
test
inc
jno
sbb
xchg
cmc
xchg
bound
xor
xor
push
and
push
push
roll
popa
cltd
mov
add
inc
aad
shrb
stos
aam
das
mov
repnz
inc
xchg
gs
xchg
ljmp
jno
dec
stos
jno
dec
push
je
cmp
xor
and
les
mov
hlt
bound
aad
popa
or
insl
sbb
xor
mov
lods
push
dec
add
cs
pop
inc
inc
pop
or
lods
jmp
cli
sub
cmc
mov
jae
pop
mov
add
test
push
mov
xchg
stos
fcoms
pushf
pop
in
mov
xor
fistl
ret
add
lret
and
xor
push
movsb
subl
push
xchg
mov
je
mov
cmp
or
pop
shll
add
lcall
mov
out
imul
push
cs
dec
sub
out
fnstsw
fsts
mov
scas
inc
xor
sbb
sbb
bound
mov
int3
xchg
mov
loope
pop
fmull
or
push
sti
and
xor
mov
cmp
pop
decb
jb
pop
xchg
in
rorb
pop
and
ret
jp
into
mov
jb
stc
ret
fcomip
push
xchg
jbe
xor
mov
or
imul
jp
add
test
jl
sbb
testb
pop
jae
mov
push
lock
sub
sub
dec
dec
xchg
pop
mov
sub
testl
and
mov
inc
or
pop
stos
and
jne
lret
push
aaa
lcall
jae
aam
aaa
xchg
fcmovbe
mov
popa
sbb
mov
orb
sub
cmp
mov
push
cmp
loop
scas
xchg
js,pn
sar
pop
dec
mov
cmp
pop
xchg
imul
push
insl
and
sub
ljmp
jae
test
nop
stos
loop
and
push
andl
lret
or
mov
push
sub
aad
test
addl
imul
lret
pushf
imul
add
cmp
push
cltd
jno
mov
mov
and
fsubrl
cmp
lahf
dec
inc
fcompp
hlt
push
xchg
inc
sbb
push
jb
lcall
cmp
sub
fldenv
fs
popa
fisubs
popa
jbe
dec
mov
and
cld
lret
sbb
sahf
dec
mov
jns
rcll
ljmp
push
mov
dec
push
xchg
cmc
stos
ret
xchg
and
cli
cmp
sub
push
pop
pop
xchg
ljmp
jmp
std
repz
and
cmp
dec
jg
mov
popa
xchg
push
rorb
daa
push
xchg
cmp
jnp
jecxz
call
push
rorl
jmp
pop
mov
pop
dec
stos
sbb
sub
fdivrl
cwtl
mov
sahf
imul
inc
dec
dec
popa
clc
divl
add
je
and
xchg
xchg
aaa
dec
test
mov
sti
cld
imul
divb
movsb
dec
mov
mov
repz
scas
sbb
push
inc
aam
aas
scas
jae
mov
dec
pop
xchg
xor
jb
icebp
cmp
dec
jae
arpl
cmp
mov
cmp
push
mov
addb
dec
inc
test
dec
cltd
xor
sub
cmpsb
pusha
jmp
mov
push
sahf
rcrl
mov
jae
enter
mov
xchg
jb
mov
fdivl
icebp
adcb
xchg
cwtl
push
push
push
cwtl
mov
cltd
and
inc
lcall
or
jmp
repz
cmp
cld
jmp
jns
cli
cwtl
lret
pushf
rol
sbb
stos
nop
xchg
cltd
mov
add
je
push
mov
imul
test
dec
mov
push
imul
hlt
fsubs
nop
insl
fs
sbb
adc
negl
push
insl
lcall
or
hlt
call
sahf
sbb
xchg
mov
mov
mov
hlt
pop
xorb
pop
jns
int3
ret
mov
je
stos
cmp
push
fidivrs
insb
repz
xchg
in
dec
aam
and
mov
mulb
bound
xchg
mov
fmuls
mov
ficomps
jbe
scas
in
aad
clc
xor
mov
mov
fcmovnu
xchg
adc
mov
pushf
jns
sbb
insb
and
mov
mov
xor
mov
test
pop
jmp
xchg
mov
cs
mov
fistl
sarl
dec
addr16
jbe
fldenv
imul
adc
es
sbb
inc
mov
mov
push
jmp
mov
mov
cltd
stos
cs
xchg
mov
jl
in
add
push
repz
pop
mov
hlt
jno
mov
dec
inc
jns
push
mov
test
mov
or
mov
jp
lahf
mov
mov
iret
xchg
jno
add
xchg
inc
repnz
cli
popa
pop
sarl
pop
dec
jmp
lret
sti
mov
stos
inc
xor
inc
dec
cmpsb
in
xor
cmp
fwait
pop
fsubrs
or
dec
imul
aam
nop
push
arpl
mov
or
cmp
sub
mov
cmpsb
mov
push
cmp
std
sub
push
imul
insl
clc
xor
mov
cmp
std
mov
pop
je
testl
popf
imul
and
mov
int3
cld
mov
test
aam
sbb
sub
movsb
cltd
int
mov
or
push
push
mov
mov
inc
test
sbb
mov
aaa
out
mov
or
dec
jnp
inc
arpl
sbb
mov
test
mov
je
fimuls
jno
sbb
dec
es
jle
lret
add
mov
stc
ficoml
mov
jg
cmp
jle
jecxz
adc
icebp
fldcw
mov
push
lret
mov
cmc
in
rorl
js
adc
adc
cmp
mov
sub
xchg
into
xchg
aad
imul
dec
adc
push
xchg
mov
lret
push
cmpl
js
mov
adc
cmc
jnp
pop
scas
jne
sub
dec
push
xchg
cmp
sahf
and
lcall
jecxz
adcl
fwait
les
inc
pop
pop
cli
jmp
mov
mov
xchg
xchg
stos
push
out
sub
orl
sahf
cld
sub
out
pop
jp
ljmp
inc
mov
xchg
mov
fdivl
leave
cld
sub
mov
mov
inc
lock
push
mov
jmp
mov
xor
add
fxch
icebp
mov
push
or
out
jne
cli
lcall
cmpsl
push
and
pushf
stos
xchg
fdivrs
mov
bnd
mov
imulb
lea
pop
std
addr16
dec
inc
jmp
dec
push
rolb
push
pop
sub
push
fisttpl
jns
and
xchg
jle
rorl
rolb
cmc
movsb
push
push
movsl
cltd
sarb
repnz
sti
cmp
lods
cmp
push
jp
xchg
fildl
movsb
and
dec
cs
popa
xchg
cmp
ljmp
cld
or
jmp
fistl
add
cmp
dec
jne
push
gs
ljmp
adc
ljmp
add
scas
cld
jp
stos
lods
cmpsb
push
xchg
mov
add
mov
xchg
or
fstpl
mov
out
xor
xlat
cltd
je
mov
sbbl
insb
mov
mov
pop
mov
cmp
or
mov
jae
lret
out
sbb
stc
xchg
xchg
fiaddl
cmp
mov
sub
jb
cmc
mov
sahf
stc
or
or
and
push
or
mov
sahf
push
pop
jno
scas
repz
push
mov
dec
mov
inc
or
lock
loope
push
cmp
aad
pop
cmp
mov
mov
inc
test
cltd
lods
mov
inc
in
jno
adc
sahf
ljmp
int3
sti
loop
and
fcmove
cmp
push
out
mov
mov
and
gs
adc
pop
bound
push
es
divb
adc
sub
iret
pushf
ljmp
inc
popa
cmpsl
jno
xchg
mov
fxtract
jb
adc
fdivp
cmp
mov
pop
imul
ficomps
mov
mov
imul
out
fwait
mov
fdivr
cmp
inc
push
test
push
shlb
movsl
mov
aad
sbb
iret
sbb
adc
sahf
adc
inc
in
xchg
or
push
mov
fwait
inc
ljmp
mov
sbb
imul
cmp
mov
mov
mov
lock
addr16
add
mov
xchg
mov
xchg
rolb
ficoml
push
jo
and
xchg
cmc
mov
cmp
repnz
push
inc
mov
sbb
add
lcall
mov
lods
stos
xor
lcall
ljmp
cmc
sub
lcall
popf
mov
cs
mov
xchg
dec
fidivrs
fwait
cld
fcmovnbe
cmpb
mov
mov
xchg
xchg
out
sbb
or
sub
adc
jle
fsubr
ss
stc
call
add
push
dec
mov
jo
gs
fcomps
call
sbb
fucom
repz
mov
cmp
push
dec
cmp
sbb
mov
pop
sub
adc
test
add
bound
popf
das
lods
testb
clc
sub
daa
mov
jmp
push
dec
test
stos
pop
push
push
mov
push
js
push
subb
sahf
mov
mov
loope
ja
outsb
xchg
leave
xor
cmpsb
fsubl
push
inc
fldcw
pop
inc
stos
fcmovne
stos
lret
mul
lret
xchg
inc
fimuls
in
ds
jl
and
mov
cmp
pop
add
ljmp
cs
jno
rcrl
jno
and
push
pop
mov
jno
icebp
and
or
mov
divb
adc
imul
cmp
cmp
dec
lods
dec
cs
or
jle
pop
out
dec
repnz
imul
jns
inc
fcompl
cltd
fimull
sbb
outsb
lcall
mov
je
jbe
jl
orb
mov
int3
xor
repnz
jl
outsl
mov
les
jge
repz
jmp
mov
sahf
aaa
fwait
es
push
add
cs
insb
out
js
call
imul
jmp
xor
pop
into
cli
imul
sbb
mov
sbb
cs
stos
in
insb
jno
sbbb
mov
or
xchg
lock
clc
dec
cli
jno
mov
pop
ljmp
sub
out
jp
je
jl
mov
push
jne
out
sbb
sbbl
xor
xor
jne
push
xchg
rcll
outsl
mov
xor
cltd
bound
in
jp
insb
stos
sti
call
cli
dec
insl
mov
inc
out
stos
xorl
xchg
call
dec
fdivl
rcrl
push
xor
push
jl
mov
xchg
subb
pop
cmp
fsubrl
sub
add
jmp
aad
mov
jp
lods
xchg
cs
push
es
push
cmp
push
in
mov
cmp
cltd
dec
jp
stc
outsb
repnz
jne
add
cld
sbb
mov
mov
xor
cmpsb
add
adc
lcall
xchg
xor
mov
xor
in
stos
xor
add
dec
or
sbb
jmp
jb
push
sti
jbe
shrb
scas
clc
inc
pop
shll
sub
lock
cli
in
push
sahf
ljmp
add
mov
roll
xchg
dec
lock
jno
push
pop
mov
cmp
sub
xchg
cmpsb
mov
ret
cld
sbb
test
pop
sbb
pop
mov
xchg
popf
xchg
in
jge
mov
cli
fidivrs
mov
jb
push
mov
movsb
movsb
xor
cld
stc
pop
sub
inc
or
repz
or
jo
jns
imul
sub
fimull
xor
inc
lret
xor
add
icebp
or
mov
fistl
xchg
jno
mov
sub
pop
movsb
jae
dec
dec
inc
cmpsb
cmp
cs
aam
jmp
sub
push
sub
fisttpl
mov
inc
shll
and
xchg
mov
lods
mov
bound
dec
or
jne
inc
push
test
adcb
orl
popa
sti
rcll
jns
inc
cmpsb
inc
jmp
and
push
out
and
mov
insl
jae
push
mov
jp
mov
xchg
or
sub
je
mov
rcrl
sti
pop
loope
dec
aam
test
push
mov
mov
inc
mov
push
mov
insl
pushf
jecxz
jns
dec
jle
add
dec
pop
sub
roll
test
sbb
cmp
stc
pusha
or
and
mov
sahf
inc
add
test
into
rclb
mov
push
mov
xchg
ret
or
and
xor
movsb
or
push
mov
ret
cwtl
jbe
push
test
or
push
shll
xchg
and
fwait
and
and
addr16
or
mov
std
imul
or
push
ss
and
xor
or
mov
sti
in
ljmp
je
mov
mov
idivb
push
xor
mov
in
std
cmp
in
xor
mov
lds
lret
inc
dec
xor
leave
test
add
adcb
lds
arpl
fsubrl
push
or
push
sub
iret
gs
cmp
xor
mov
mov
call
negb
inc
jl
xchg
sti
inc
xchg
dec
mov
push
clc
cmp
mov
repz
add
mov
ret
or
push
cmpsl
and
cld
cmp
fstpt
scas
cmp
enter
push
hlt
shl
int3
call
daa
inc
adc
out
sub
mov
enter
mov
and
sbb
test
shll
mov
push
jp
or
mov
pop
mov
or
sbb
iret
xchg
ljmp
adc
mov
je
inc
mov
jb
push
repnz
push
pop
jno
dec
cmp
inc
or
pop
int
mov
sub
out
jb
ja
sti
loop
outsb
mov
mov
mov
add
cmp
cmp
mov
mov
div
arpl
xchg
stc
dec
mov
xor
xchg
imul
lock
mov
test
dec
lret
cli
ficoms
sub
in
imul
addb
std
imul
jb
lcall
adc
outsl
fwait
inc
dec
xor
pushf
sbb
aaa
daa
sbb
sbb
imul
aam
adc
loope
jae
dec
xor
idivl
sub
cmc
push
xchg
pop
adc
jge
mov
movsl
dec
dec
sub
inc
cmc
sbb
dec
jb
js
out
xchg
add
stc
xor
scas
std
inc
jo
inc
hlt
in
mov
push
cmpsb
sub
mov
sahf
dec
das
je
imul
xchg
adc
jmp
out
adc
xorl
out
dec
mov
cld
popa
push
andb
sti
mov
xchg
stos
rcrb
xchg
sub
pop
fwait
xor
ljmp
mov
fadd
and
push
sti
les
dec
xor
sub
loop
adc
imul
adc
roll
xorl
pusha
cltd
xor
jae
mov
lret
cmpsl
gs
and
or
xchg
pop
add
xchg
pop
loop
jns
pop
mov
popa
imul
mov
int3
stc
mov
rcl
adc
and
jle
fnstenv
jge
pop
jae
mulb
and
decb
popa
shll
inc
mov
and
jl
or
sub
jp
sbb
or
or
or
aam
pop
mov
dec
push
and
jno
andb
shll
repnz
daa
jae
ret
fldpi
insb
in
mov
shll
push
jbe
test
mov
sbb
push
mov
xor
pushf
mov
mov
and
inc
shl
jl
call
push
push
mov
dec
or
jl
scas
xor
ljmp
notb
xchg
movsl
loop
xor
xchg
jno
ljmp
rcll
mov
sbb
adc
jg
fdivl
hlt
hlt
outsl
je
notl
lcall
mov
ret
jae
lods
mov
jmp
out
lret
xchg
out
mul
mov
imul
fidivrs
add
push
imul
js
test
jl
shrb
pop
mov
cmp
xchg
cmp
xchg
sbb
in
xor
pushf
jp
xor
fstpt
int
pop
mov
xor
cli
cmp
ljmp
int
fs
repnz
lods
push
test
stos
loopne
hlt
cmpsb
xorps
lret
mov
or
push
jno
cmpsl
sbb
int3
push
xchg
arpl
mov
adc
cld
lcall
icebp
andb
cmp
in
out
inc
mov
mov
ret
mov
xchg
or
out
cmp
mov
jmp
sbb
mov
sub
pop
out
pushf
and
imul
jg
adc
sti
adc
cltd
adc
leave
dec
or
push
fstpt
cmp
push
xchg
push
popf
enter
sub
add
ss
dec
std
adc
inc
daa
mov
ljmp
push
push
je
adc
dec
int
push
mov
mov
ja
push
cltd
test
mov
or
jle
dec
or
popa
std
in
inc
pop
sti
push
pop
notl
into
pop
sub
mov
stos
adc
jnp
test
sub
andl
sub
jg
or
out
xchg
pop
sti
xlat
es
adc
mov
shrb
shll
icebp
mov
or
adcb
xor
ja
jae
movsl
cmpl
or
push
sti
mov
cmpb
fldl2e
dec
cmpsb
fidivrs
mov
leave
icebp
fisubs
pop
xor
cmp
test
dec
addl
xor
sbb
jno
int3
sub
cmp
cli
addr16
pushf
loop
repnz
mov
xchg
mov
sbb
lea
push
inc
ret
je
lock
jnp
aam
xor
xchg
push
jno
mov
jae
int3
ret
or
imul
imul
mov
push
mov
mov
insl
jmp
jno
push
mov
dec
or
call
adc
aam
jmp
cmc
arpl
ret
xchg
sbb
orb
sub
insb
sbb
scas
mov
popa
xchg
rolb
mov
xchg
sbbl
adc
jmp
test
or
mov
pop
call
lods
pushf
sti
pop
jns
scas
outsl
sahf
jae
hlt
mov
xchg
or
loope
leave
arpl
out
imull
lcall
fstps
sub
inc
insl
loope
or
push
ficomps
inc
sbb
push
and
je
sahf
sub
mov
arpl
mov
push
and
pop
cs
jecxz
cmp
or
popa
jno
pop
xchg
pop
data16
fsubr
fidivrs
push
shrl
mov
xchg
in
cld
mov
sub
arpl
cmp
and
adc
fisubl
xor
xor
push
lods
adc
lahf
mov
inc
fistps
add
decl
cmp
push
mov
ret
xor
inc
jmp
and
xor
shll
out
int3
push
or
ljmp
inc
add
cmp
dec
xchg
cmp
rclb
inc
jp
add
mov
push
add
mov
movsb
pop
rolb
and
xchg
std
inc
pop
je
cs
cmp
jecxz
xchg
mov
and
cld
jns
out
cmpsb
push
js
test
xchg
mov
or
jmp
jns
xchg
dec
push
dec
ljmp
xor
into
dec
stc
cli
push
out
jnp
sbb
lcall
jno
sarb
and
xchg
cmpsb
mov
ds
push
lcall
int
and
mov
push
mov
xor
popa
shr
dec
mov
std
jb
stc
sub
scas
or
sbb
test
pop
rclb
or
cmpl
mov
sbb
xchg
pop
push
cmp
addb
cmp
pop
push
cltd
sub
and
hlt
and
push
xor
or
mov
inc
lcall
xchg
pop
std
dec
jae
mov
and
orb
loopne
mov
xchg
das
stc
cmp
sbb
or
fidivrs
stc
dec
xchg
js
or
loop
lret
dec
cmpsb
loopne
xor
jge
je
lret
aam
daa
mov
pop
addb
arpl
mov
cwtl
dec
xor
sbb
pop
test
fcoml
addr16
and
jmp
xchg
cmp
cmpsb
cmc
jmp
sbb
imul
jl
adc
negl
xchg
mov
jmp
cmp
mov
mov
inc
orb
test
jo
jmp
or
mov
mov
or
xor
mov
push
fnsave
xor
add
mov
inc
xor
hlt
xchg
jle
xor
jns
pop
imul
into
jl
mov
test
dec
in
xchg
dec
pop
je
in
jl
xor
je
add
adc
stos
rorl
xor
mov
in
pop
insb
ret
lcall
lea
sub
lret
push
mov
sbb
jmp
test
inc
bound
dec
shl
fcompl
fildll
xchg
jae
gs
jb
mov
cld
cmp
int
mov
lods
negl
icebp
push
sub
jb
cmp
sahf
into
and
push
jo
jns
mov
sbb
std
daa
jno
jle
ljmp
sbb
aas
xor
or
mov
mov
push
cmp
jae
sahf
in
lcall
rclb
aaa
dec
lret
sbbb
mov
xlat
cmp
jl
test
xchg
inc
sbb
lret
push
les
sbb
push
jp
mov
sbbl
test
add
xor
mov
inc
sbb
insl
ret
cmp
jmp
fisubs
les
jmp
mov
mov
shll
mov
dec
adc
fsubrs
pop
sti
out
test
inc
stc
and
scas
mov
push
inc
test
push
js
push
xorl
iret
dec
cmp
xchg
sahf
movsb
cld
mov
xchg
lcall
pop
into
mov
pop
push
xchg
sbbb
jle
js
sbb
or
out
dec
add
or
imul
cmpsb
pushl
cs
mov
jl
mov
mov
mov
imul
xor
jle
lret
shl
push
out
in
inc
mov
out
pop
gs
imul
dec
subb
jl
pop
sahf
xchg
xchg
mov
int
jbe
mov
xor
rcl
push
xor
xor
xlat
cltd
loop
pop
pop
push
outsb
or
dec
mov
bnd
sub
add
mov
jp
mov
push
test
and
imul
ret
adc
xchg
sub
cwtl
pop
mov
ljmp
pop
sbb
push
imul
addb
xor
int3
pushf
mov
sbb
ja
popf
leave
jnp
inc
push
dec
push
sete
jmp
into
outsl
inc
cmp
lods
pop
or
fisttpll
mov
mov
mov
add
jbe
int3
fcmovu
mov
or
enter
dec
mov
aam
jb
and
and
cmpsl
and
cmpsb
mov
cmpsb
cmp
aad
and
xlat
cmpsl
dec
xchg
pop
sub
js
in
mov
dec
outsb
mov
mov
mov
pop
and
add
bound
push
and
cmp
stos
adc
insl
pop
or
out
cmp
imulb
sbb
je
push
xchg
fs
inc
mov
jnp
lahf
dec
jge
dec
jb
loop
push
add
dec
sbb
push
sub
jnp
lahf
sti
loopne
ficompl
xchg
fdivl
pop
cmp
or
int3
inc
push
shl
out
fwait
jecxz
out
cltd
clc
jbe
fsubs
lahf
mov
int3
fisubrs
mov
cmp
idiv
push
popf
mov
inc
lock
jmp
bt
sub
pushf
cmp
mov
mov
mov
pusha
lea
ja
bt
cmc
jmp
add
add
jmp
js
xchg
mov
sub
sub
xchg
and
xor
and
fwait
mov
jle
xchg
jns
xor
sarb
arpl
cli
lods
adc
ss
inc
cmp
pop
nop
std
cmpsl
mov
jno
lret
push
enter
mov
adc
test
or
push
mov
lods
lods
or
add
inc
mov
test
xchg
dec
xchg
cmp
ror
int
gs
frstpm(287
xlat
mov
imul
inc
pop
imul
ret
sub
mov
leave
push
push
lea
jmp
hlt
add
cmp
fcmovb
jbe
pop
add
in
add
and
and
adc
clc
pop
push
cwtl
and
dec
or
aas
iret
mov
jl
out
iret
jp,pt
lret
repnz
and
cmp
shl
and
lods
rcrl
es
cltd
fnsave
cmp
out
push
sahf
dec
fsubrs
or
imul
fs
daa
xor
xchg
inc
cmp
js
cli
mov
lret
cmc
inc
mov
lock
inc
test
push
xchg
movsl
xchg
lds
pop
ss
flds
jae,pn
jmp
in
mov
add
mov
cltd
xchg
mov
mov
adc
aad
mov
dec
and
jp
dec
sub
inc
adc
mov
hlt
sbb
inc
cmp
ret
jo
or
ljmp
shr
add
mov
or
dec
xchg
in
xchg
dec
jae
out
ret
pushf
jbe
pop
mov
cmpsl
push
sbb
sub
decb
jg
sub
cli
ret
in
pop
sti
notl
add
adc
mov
jno
jae
and
cmpsl
and
faddl
dec
mov
loop
das
ja
scas
test
cmp
lret
mov
mov
mov
out
rcrl
dec
fsubl
out
rcl
data16
outsl
mov
xlat
int
setnp
push
jle
inc
and
xchg
mov
idivl
push
pop
mov
inc
outsl
add
lock
sar
xor
daa
or
iret
int
idivb
pop
enter
lods
xlat
movsl
xchg
xchg
call
test
fnstsw
dec
jne
icebp
mov
fmull
jmp
adc
cltd
in
pop
push
adc
dec
divb
cmp
sub
inc
rcll
mov
call
call
jbe
and
and
cmpsl
sbb
lcall
fs
dec
pop
ret
xor
push
jno
andl
test
push
xchg
xchg
pop
pop
push
lock
cs
xchg
les
fimuls
pop
add
jp
push
test
xlat
mov
mov
or
sub
xchg
das
jns
adc
and
sub
sbb
stc
movsb
pop
je
fwait
jmp
adc
or
test
pop
outsl
aas
lock
cs
sti
js
shlb
call
lret
mov
mov
lahf
jle
arpl
jmp
out
pop
icebp
adc
jns
xor
icebp
rorl
pop
mov
inc
or
lcall
orb
fwait
mov
mov
xorl
out
in
inc
mov
loop
into
jbe
testb
mov
push
lcall
movsb
inc
jp
pop
in
ss
dec
fsubl
add
popa
cwtl
lock
pop
mov
out
dec
test
pop
jmp
cwtl
or
add
xlat
and
mov
mov
icebp
popf
insl
mov
or
fimuls
into
fimull
rclb
adc
or
jg
loopne
aas
cmpsl
mov
fs
or
cli
mov
ud1
stos
sub
xor
fldt
lcall
mov
or
cld
mov
jl
xchg
cmp
mov
mov
and
sbb
pop
pop
dec
jge
popf
cltd
mov
pop
outsl
rcrl
lods
dec
add
push
test
mov
xchg
adc
outsb
and
xor
or
out
mov
mov
sub
adc
inc
push
stos
mov
cmp
pop
sub
gs
pushf
mov
sbb
push
xchg
pushf
cmpsb
fidivrs
dec
jle
xchg
lods
addr16
or
mov
das
filds
imul
push
jmp
leave
orb
inc
inc
or
xlat
xchg
in
ret
iret
and
dec
lods
lods
fadds
loop
cmp
inc
pop
inc
lahf
inc
lods
mov
xorl
dec
sbb
popa
mov
mov
aaa
out
icebp
cld
or
data16
test
jg
xchg
mov
xchg
or
out
out
aas
daa
jo
mov
cli
mov
mov
cwtl
adc
loopne
stc
cmp
xchg
icebp
fucomip
dec
jg
push
lods
and
push
in
and
rcl
insl
fdivrp
imul
push
pop
or
stos
fiadds
mov
fcom
loop
or
lahf
pop
xor
xor
inc
enter
adc
and
jns
in
mov
mov
clc
xchg
std
idivl
push
shrl
and
mov
stc
sub
adc
test
push
and
pusha
push
insl
rcrl
push
mov
xchg
imul
js
xlat
jae
aad
mov
xor
xchg
das
dec
cmpsl
push
aam
mov
jmp
das
insl
cmp
aas
cmpsl
xchg
cmpsl
mov
loop
stos
les
subb
mov
arpl
jns
dec
xchg
sub
inc
xchg
in
lret
enter
mov
xchg
loopne
cs
or
decb
sahf
lea
loop
adc
nop
pop
mov
inc
outsb
push
out
inc
aas
cli
scas
into
dec
jmp
decl
movsb
adcl
out
js
movsl
cmp
mov
pop
or
divps
fsubs
cmp
mov
popa
gs
dec
lods
jns
push
add
in
test
mov
jae
pop
test
jecxz
mov
adc
frstor
jae
hlt
in
cli
add
fisubrl
ss
adc
cli
cwtl
ss
outsb
cld
mov
inc
imul
push
jno
adc
pop
movsl
shrb
mov
push
pusha
outsb
and
or
jmp
cs
jp
mov
call
or
mov
sbb
and
mov
das
jnp
dec
inc
jbe
pop
mov
push
xchg
fs
lahf
sarb
enter
or
and
jp
adc
mov
bound
sbb
imul
movsl
insl
ds
jl
push
or
add
mov
cwtl
out
ficomps
xor
cmc
test
pushaw
cmpsl
in
popf
add
push
int3
sbb
xchg
pushf
in
dec
stos
mov
ficoml
pusha
scas
pusha
xchg
pop
xorb
jne
icebp
add
dec
push
es
jo
in
cmp
fmuls
daa
insl
push
or
push
pop
push
add
mov
fisttpl
aaa
jg
hlt
push
sahf
fcompl
push
stc
dec
arpl
cli
cmc
shl
mov
shrb
hlt
xlat
bound
aad
pop
inc
incb
push
cwtl
inc
mov
lds
dec
mov
scas
cld
les
in
mov
adc
loope
jmp
in
lahf
jecxz
movsl
sub
inc
data16
xchg
lret
sbb
outsl
inc
inc
pop
rcl
clc
fucom
pushf
loopne
push
adc
jge
rcrb
jns
adcl
negb
pop
fnsave
mov
leave
xor
sub
popa
sub
and
inc
outsb
xchg
rclb
cwtl
jmp
and
xchg
dec
jb
out
bnd
rcr
and
cmc
mov
sbb
dec
in
cmp
mov
inc
shll
lock
pop
xchg
sbb
push
xor
cld
pop
mov
jp
push
push
sub
sub
jbe
or
aam
inc
icebp
aas
jae
pop
adc
sub
pop
cmp
cmp
flds
mov
dec
inc
cmp
out
aam
cmp
xchg
call
js
adc
xor
sbb
out
inc
je
push
fsubl
test
and
js
sbb
mov
xchg
ljmp
imul
ret
bound
inc
jbe
shll
mov
pop
mov
loope
pop
add
mov
int3
mov
pop
inc
mov
adc
es
xchg
cmp
pop
inc
nop
pop
cmpsb
into
inc
xor
sbb
mov
fiaddl
daa
ficoml
fdivl
shlb
inc
adc
mov
bound
push
mov
lcall
mov
or
leave
repnz
aad
imulb
popf
inc
cli
sbb
flds
lods
cmp
pop
lret
mov
std
inc
es
cmpl
stc
xlat
mov
push
cmp
aam
testb
cmpsl
pop
push
mov
cld
cld
movsb
repnz
mov
cld
add
test
mov
dec
mov
test
mov
jge
pop
mov
scas
jge
popa
adc
call
sub
sub
add
sbb
add
jle,pn
cmp
lds
loope
mov
xchg
rcll
bound
mov
ds
pop
xchg
sbb
das
mov
add
fiadds
pop
jmp
xor
jno
in
fiaddl
in
cmp
andb
ret
out
adc
mov
add
stc
in
push
cwtl
mov
fwait
inc
mov
adc
sbb
arpl
sbb
xor
lret
pop
enter
pusha
xor
push
pop
xchg
jl
add
icebp
dec
popf
imul
popf
setge
adc
insl
xor
add
loopne
cld
inc
sub
stos
mov
mov
xlat
ja
popf
cmp
cmp
iret
push
or
jecxz
ret
sub
dec
jl
pop
push
cmpsb
ja
jecxz
les
xchg
test
mov
popa
and
jno
nop
xchg
dec
dec
xchg
fldenv
inc
push
jae
repz
in
and
ficomps
mov
fsubp
ss
adc
int
jecxz
enter
jecxz
sub
sbb
data16
cmp
fsubr
mov
jbe
dec
add
shrl
xchg
bound
jle
jle
dec
dec
cwtl
dec
imul
addb
xorl
xchg
mov
add
test
mov
and
mov
adc
jbe
jns
int3
xor
ffreep
dec
outsb
in
sub
addr16
push
bound
dec
loopne
xor
test
xchg
add
cli
sub
dec
iret
lods
pop
movsb
xor
lcall
popf
cld
sbb
inc
lods
fcomps
in
cmp
xchg
dec
jp
mov
xchg
dec
cld
es
or
pop
sbb
out
into
or
shl
fmull
es
mov
mov
andl
loope
pop
jb
js
jg
jns
je
shrl
inc
or
cmp
insl
mov
xchg
movsb
js
push
in
je
cld
jp
adc
xor
push
cmp
pop
test
ficoml
imul
push
loop
or
or
test
add
test
stc
push
mov
movsb
scas
bound
fisubs
ret
dec
stc
pop
pop
mov
mov
and
iret
add
sbb
clc
xchg
push
aaa
addr16
push
pop
iret
fidivrs
les
xchg
jo
sub
sub
movsb
insb
pop
iret
sbb
lods
add
sarb
pop
and
sub
xchg
inc
in
mov
jbe
js
or
xorb
pop
dec
dec
movsb
mov
push
cmp
insb
pop
inc
jno
push
xchg
jne
xchg
gs
xchg
imul
jge
mov
js
gs
dec
mov
data16
out
int3
repnz
mov
adc
movsb
mov
addl
inc
xor
xchg
pop
lods
in
es
int
inc
movb
add
arpl
jle
xchg
data16
scas
cmp
jp
int3
xchg
lret
addl
int
movsb
out
pop
dec
imul
and
cld
es
xchg
sbb
sub
lock
or
call
inc
cmp
iret
sub
push
popf
hlt
and
pop
jno
dec
cmp
cs
mov
ljmp
inc
daa
dec
sar
dec
rcrl
decb
push
int3
xor
and
cmp
shll
add
cmp
pop
aam
int3
push
jle
aad
dec
icebp
pop
rcrl
mov
or
mov
push
jl
imull
adc
repz
aad
ret
jo
dec
mov
out
push
test
push
test
repnz
rorb
cltd
into
mov
mov
popa
mov
and
sbb
jo
mov
fcomps
stos
das
mov
shll
and
inc
ret
sbb
cmp
inc
add
or
jne
lods
pop
add
loope
lcall
push
imul
outsb
mull
loope
jge
xor
cmpl
int
and
jae
int
dec
outsb
push
out
inc
or
cmpsl
pop
add
push
jle
adc
test
and
mov
inc
in
adc
adc
xor
inc
sti
fistpll
push
or
popf
scas
andb
lcall
jg
mov
adc
ds
ss
xor
roll
sahf
push
outsl
pop
cmpsl
loop
enter
dec
or
divl
cmc
sbb
inc
pop
out
shlb
int
add
mov
ljmp
fmull
push
enter
push
xor
push
sbb
or
add
addr16
add
mov
aas
daa
lea
lahf
decb
cwtl
call
test
cwtl
xor
pop
ret
ror
lcall
or
stc
dec
sub
pop
sahf
adc
es
rolb
xor
sbb
cmp
test
fmull
or
mov
or
dec
fisttpl
lock
stos
add
mov
in
adc
ds
inc
insb
into
pop
popf
rclb
mov
mov
cld
lea
cmpb
leave
push
pop
xor
in
xchg
arpl
mov
pop
sub
cmp
lock
xor
push
cmp
push
popa
das
pushf
xchg
sub
pop
mov
repz
sbb
fs
cmpsl
push
cmpsl
stc
mov
jl
or
xor
cmp
sbb
xchg
lods
fldcw
jne
negb
adc
lock
arpl
pop
fildll
xchg
jns
icebp
fiadds
pop
jmp
dec
mov
mov
xchg
or
movsl
mov
fwait
addr16
mov
cmpsb
add
jb
push
pusha
xchg
jbe
pop
push
mov
push
cmc
sbb
mov
sub
scas
cmp
insb
pushf
insl
leave
outsl
jmpw
mov
add
jl
lds
mov
cmp
adc
sbb
je
mov
pop
repz
outsb
test
inc
dec
cld
fs
aam
sub
enter
or
arpl
jno
imul
imul
pop
dec
movsb
daa
fadd
xor
xchg
je
xchg
iret
outsb
adc
subb
lcall
aad
xchg
mov
xchg
xor
cltd
dec
mov
fwait
lods
inc
sub
xchg
repnz
test
aaa
ret
gs
sub
cmpsl
test
and
cmc
dec
fistpll
mov
adc
imul
dec
jp
adc
negb
lods
insb
lea
mov
add
push
in
lock
pop
fwait
push
sarl
andl
mov
ret
outsb
aas
mov
sub
into
test
dec
int
add
lods
sbb
mov
mov
repnz
push
adc
inc
jns
adc
dec
add
inc
aad
mov
inc
jp
xchg
adcb
leave
stc
and
subl
mov
dec
jmp
jl
xor
dec
js
stos
je,pn
frstor
xchg
xlat
ret
pop
and
mov
sub
mov
pusha
nop
ja
je
lea
lock
mov
pushf
cmp
scas
aad
pop
dec
mov
mov
fs
cmp
and
ret
pop
ret
push
pop
int3
pushf
dec
mov
or
xor
cmp
fmuls
xchg
jmp
xor
dec
mov
ja
roll
sub
lea
or
loopne
fld
mov
lret
inc
jge
aaa
mov
dec
push
or
pop
mov
mov
sbb
jg
rcrb
jb
sub
lret
jmp
pop
pop
mov
xchg
and
clc
mov
push
or
add
int3
call
test
out
xchg
clc
ret
mov
jne
js
xchg
std
jp
rolb
mov
xlat
pop
fmuls
test
mov
adc
hlt
test
fmuls
lock
ror
pusha
clc
pusha
pushf
sub
cmc
neg
jmp
pushf
stc
cmc
xchg
and
mov
push
test
movb
test
sub
lea
jnp
pushf
rep
jmp
call
lods
xorps
js
into
sti
sub
push
dec
mov
dec
pop
jmp
adc
and
test
leave
mov
sbb
inc
pop
test
fadds
hlt
gs
cmp
pop
jo
ror
adc
arpl
mov
jmp
aaa
imul
ds
mov
mov
pop
jecxz
pop
mov
push
es
push
jbe
insb
jle
sbb
mov
adcb
xchg
mov
add
dec
outsl
popa
fs
imul
add
je
or
into
bswap
mov
movw
lea
jmp
andl
and
pusha
outsl
jmp
add
seta
adc
and
ja
in
pop
inc
cmp
xchg
add
daa
push
inc
adc
push
sbb
push
push
ret
sub
or
aas
ss
adc
jns
cld
pop
sbb
push
mov
dec
test
pop
pop
in
std
dec
fldcw
js
adc
nop
fisttpll
ja
shlb
js
adc
ret
test
jae
pop
bound
jmp
add
sbb
js
sbb
jo
sahf
je
mov
jecxz
scas
jbe
orl
mov
mov
sbb
mov
mov
push
int
mov
sbb
mov
pop
pop
cmpsb
adcl
pop
jne
dec
stos
push
mov
jae
xchg
mov
inc
addr16
dec
or
jns
jns
jle
cmc
sub
pusha
push
aaa
repnz
xchg
imul
insl
fsubrl
mov
fdiv
and
cmp
adc
adc
mov
mov
jle
xor
or
push
pushf
pusha
dec
shll
mov
pop
xchg
sub
lea
shl
cs
jmp
jo
jl
pop
mov
nop
jae
sbb
sbb
xchg
movsl
push
arpl
in
mov
aad
push
pop
xor
xchg
adc
jmp
movsb
ss
sbb
mov
movsb
mov
mov
inc
dec
jmp
and
pusha
mov
push
pushl
ret
fstpt
pop
cmp
push
test
jecxz
add
cmc
arpl
jmp
dec
xor
add
lret
mov
push
push
adc
xchg
shll
das
lods
mov
add
pop
mov
insl
lods
iret
fnstsw
xor
rcrl
pop
jbe
dec
cmp
jmp
or
in
mov
int3
adc
push
sbb
inc
gs
pop
cmp
insl
pop
popl
jb
or
sub
fsts
test
subl
test
xor
pop
dec
inc
xchg
dec
aam
cli
mov
nop
lcall
xchg
mov
cli
push
pusha
jecxz
or
dec
xchg
push
mov
shll
or
mov
push
lret
ret
inc
rolb
bsr
push
push
movsbw
rol
pusha
mov
inc
btc
bswap
mov
shl
mov
adc
bt
movzbl
call
cmp
add
cmc
clc
cmp
call
call
jmp
movb
lea
jne
and
sub
shl
shrd
ror
rol
mov
rcr
call
mov
pushl
sbb
xor
lea
pushf
jmp
imul
and
mov
in
fmuls
jnp
pop
or
das
mov
insb
arpl
fdivrp
dec
stc
push
hlt
in
sub
lea
iret
pop
pop
sti
push
lods
subb
push
sub
cmp
xchg
gs
and
js
xchg
and
rorl
jo
adc
lods
arpl
fcoms
outsb
pop
setnp
mov
xchg
add
push
push
lahf
outsb
nop
fidivrl
out
add
test
je
sub
sub
ret
adc
mov
add
out
mov
sub
mov
jge
push
cmc
pop
cmpsl
adc
mov
js
ret
fsubs
xor
xchg
sub
xor
js
push
sub
xchg
ja
cmp
subl
lds
test
pop
js
pop
cmp
loope
add
pusha
push
shl
xor
inc
inc
cs
xchg
ret
mov
or
subps
add
and
out
dec
push
aas
jbe
insb
mov
push
outsb
test
fbstp
pop
fmull
stc
inc
inc
sub
mov
sti
dec
sahf
int3
adc
push
ss
lret
xor
lahf
jmp
aaa
ljmp
add
and
ret
repz
nop
and
std
hlt
sub
outsb
xlat
pushf
xchg
mov
push
jmp
jp
aas
pop
cmp
sbb
leave
cmp
fwait
call
adc
push
add
and
fsts
daa
aas
in
fimull
mov
sarb
bound
fwait
push
cltd
inc
mov
in
insl
jle
mov
xchg
xor
pop
cmpsb
adc
bound
add
jmp
ret
jle
pop
sub
pop
fsubs
xchg
lea
mov
fiaddl
mov
into
push
add
clc
sub
mov
cmp
adc
add
push
shlb
mull
jb
inc
in
andb
je
inc
jmp
leave
jl
test
lods
test
ds
jb
sbb
daa
and
sahf
sbb
jecxz
arpl
sbbb
mov
adc
adc
cmp
jne
or
repz
movsb
ss
gs
cmc
push
icebp
dec
arpl
fwait
sub
js
xchg
lds
xchg
ret
pop
xor
mov
push
pop
fmull
dec
mov
or
mov
adc
adc
sbb
dec
pop
fcomi
or
lods
sarl
mov
lret
aad
mov
dec
or
dec
xor
fucomp
pop
xor
jbe
imul
cmp
fwait
gs
adc
mov
mov
jmp
mov
popf
pop
cmp
xorb
push
jg
sahf
dec
std
lret
shrb
sub
xor
sbb
iret
mov
sbb
xchg
es
out
inc
sbb
xchg
lret
dec
pusha
inc
pop
dec
mov
fisttpll
jle
mov
and
or
movsb
repnz
cld
push
add
out
xchg
fistpll
mov
cs
dec
cmp
dec
xchg
cmp
cli
int3
pop
call
hlt
inc
dec
mov
sbb
inc
shl
int3
test
js
repz
shll
lret
mov
std
popa
or
out
das
decl
jae
inc
mov
iret
test
aas
iret
xlat
outsl
or
cli
daa
mov
cmp
ret
jmp
add
add
adc
fdivs
sarl
sbb
daa
and
sub
cmp
mov
loope
or
sbb
jnp
dec
xchg
in
insb
xchg
cmpsl
negb
rorb
add
dec
fdiv
jmp
jo
pop
cmp
ja
cwtl
xchg
push
push
repnz
add
lret
mov
jecxz
dec
shlb
fs
push
pcmpgtd
push
jne
add
sahf
fisubl
sub
xchg
adc
rcl
push
sub
inc
jle
movb
mov
lahf
push
jns
imul
or
mov
test
push
fwait
loopne
dec
mov
inc
sbb
jb
adc
mov
rcrb
sub
and
clc
mov
outsl
imul
or
sub
mov
push
je
add
sahf
or
ja
ret
rcll
jo
outsl
mov
cmp
ja
scas
pusha
xlat
subb
jle
push
pop
lods
pop
pop
or
imul
fisttpl
pop
dec
cwtl
sbb
repz
cmc
ds
xchg
jg
jae
push
xor
pusha
or
xchg
mov
xlat
push
and
sub
lods
lods
pop
sbbl
stc
or
pop
dec
ljmp
lea
dec
jmp
divl
push
xchg
dec
mov
loope
ds
inc
pop
push
data16
pop
fwait
xchg
sti
lock
imul
mov
dec
mov
jo
xor
stos
sbb
cmp
adcl
pop
fcmovbe
jbe
fdiv
inc
cmp
ds
xchg
cmpsl
outsl
insl
dec
jns
xchg
mov
mov
jno
cwtl
jae
fstpt
jno
adc
dec
cld
and
jge
dec
pushf
or
xor
data16
dec
arpl
dec
jno
and
ljmp
pop
sarb
jne
shll
cmp
mov
xor
xor
mov
mov
xchg
shll
sbb
mov
stc
movsl
imul
jnp
iret
push
jo
sub
imul
fimull
lods
mov
pop
cmp
je
xchg
jge
cmp
cli
imul
push
in
fstpl
mov
test
dec
push
fldt
faddl
xchg
push
popa
jp
dec
packssdw
out
insl
cmp
pop
pop
push
mov
jae
dec
or
fnstcw
loop
adc
push
movups
and
enter
sarl
pop
sub
pop
pushf
cmp
pop
repnz
outsl
inc
cltd
stc
inc
sbb
xchg
testl
pop
xchg
and
mov
sbb
cs
or
ja
cmpl
sub
adc
dec
and
fcmovne
xorl
test
xor
cmc
sahf
mov
nop
push
ss
dec
daa
sbb
pop
pop
int
xlat
push
jb
jl
pop
bound
popf
sub
mov
cmp
xchg
sbb
sub
mov
push
cmp
js
xor
sub
cmp
cmp
jp
mov
inc
pop
sbb
es
ljmp
jae
ljmp
icebp
cmp
pop
mov
sbbl
sbb
fldl
fisubl
pop
outsl
sar
insb
scas
mov
ss
testb
js
push
call
dec
cltd
mov
cmp
lahf
filds
cmp
pop
pop
aad
push
out
ja
jbe
pop
inc
pop
ret
insb
jns
cltd
sti
dec
les
sbb
hlt
cmp
mov
mov
cmp
sbb
sub
in
adc
pop
lock
push
xchg
push
aam
imul
pushf
in
movsl
push
sbb
sbb
mov
jl
cwtl
imul
jl
sbb
bound
std
bound
ja
add
bound
mov
imul
fstpt
sbb
bound
xchg
sub
sbb
pop
dec
dec
push
sub
push
pop
mov
repz
dec
add
dec
out
push
sti
add
out
pop
mov
pusha
xchg
pop
je
repz
repz
cli
dec
out
jb
add
pop
enter
pop
je
push
stos
jne
cmp
jp
lds
mov
lahf
inc
mov
fwait
cmc
inc
xchg
sbb
mov
push
bound
cmp
test
xchg
jg
sub
mov
xchg
dec
dec
cmp
dec
pop
imul
mov
bound
xor
mov
ss
sub
mov
cmp
pop
es
cmp
mov
add
les
imul
cmc
push
mov
cmp
mov
xor
inc
lods
ss
mov
mov
lcall
xchg
mov
ss
mov
imul
cmc
xchg
jb
js
sbb
bound
xlat
bound
lds
test
inc
mov
in
or
cmc
xchg
imul
xchg
inc
inc
jns
imul
cmc
pop
sub
adc
push
cmp
int
jg
mov
mov
push
mov
mov
push
mov
ljmp
insb
pop
ja
into
test
pop
jmp
mov
mov
repz
dec
cmp
xchg
mov
bound
push
xchg
inc
cmp
sbb
cmc
enter
mov
bound
incw
imul
mov
cmp
mov
cmc
push
es
jae
and
jl
stos
cltd
in
cmp
xchg
cli
mov
inc
mov
push
in
cli
cltd
jae
cltd
gs
cmp
xchg
imul
xchg
in
jns
or
pop
push
pusha
stos
pop
je
dec
mov
repz
xchg
inc
add
out
pop
pop
ds
sti
pop
je
cs
repz
stos
dec
out
fsubs
add
or
je
adc
push
dec
cltd
cmp
out
ja
xchg
add
pusha
mov
mov
repz
sub
ljmp
pusha
pop
pop
je
fidivs
fs
jecxz
ja
nop
clc
pushf
cmp
add
cmp
add
ficompl
je
ret
repz
hlt
fiaddl
imul
cmc
adc
pop
cmp
bound
add
imul
cmc
xor
sbb
bound
xchg
xchg
imul
cmc
test
imul
dec
cltd
loopne
out
xchg
push
pop
cwtl
pop
pusha
jl
pusha
call
je
dec
mov
repz
cld
dec
out
ss
test
pusha
imul
mov
add
and
sbb
pusha
cld
pop
je
sbb
adc
out
xchg
or
sbb
pusha
lcall
add
std
dec
cltd
sti
dec
out
cltd
cmc
add
pop
jae
pusha
push
pop
je
jmp
sbb
dec
cltd
decb
fldl
enter
aad
cli
pop
je
shll
leave
dec
cltd
inc
dec
out
cwtl
lds
jl
pop
sbb
jb
movsl
in
imul
add
fs
ss
dec
fimull
sub
stc
xor
cmc
cld
cmp
sub
push
cltd
movups
out
pop
scas
aam
xchg
mov
jp
out
sub
add
ficompl
mov
out
mov
out
pop
push
fildl
dec
sbb
loope
cli
or
push
mov
ss
jae
ljmp
subb
sbb
imul
dec
fdivl
insb
mov
push
pop
pop
pop
mov
in
adc
sbb
sbb
bound
repnz
imul
pop
out
cmp
xlat
mov
inc
imul
cmc
jae
sbb
sbb
bound
pop
fidivl
fnstsw
pop
in
cwtl
insb
cmc
hlt
dec
sbb
mov
mov
ss
xchg
pop
mov
mov
pusha
cs
sub
dec
ss
notb
pop
fidivl
cmp
cmp
pop
divl
push
insl
pop
push
cmc
hlt
cli
push
push
jp
cmp
mulb
ss
repnz
push
jmp
dec
out
mov
ss
inc
push
pop
jmp
mov
out
pushl
mov
ss
inc
push
pop
jmp
mov
ficompl
in
mov
hlt
mov
bound
mov
inc
cwtl
imul
lret
mov
fldenv
mov
inc
jg
imul
scas
sbb
mov
fsubl
mov
bound
add
imul
mov
sahf
mov
inc
ljmp
test
bound
mov
inc
xchg
ss
jmp
mov
mov
in
mov
fisubl
mov
jmp
repz
xlat
insb
cmc
mov
sbb
jbe
lods
bound
add
imul
mov
push
test
inc
ljmp
test
imul
mov
inc
xchg
imul
xchg
imul
repz
or
sbb
dec
mov
out
mov
insb
insb
lds
test
sbb
mov
inc
inc
pop
sub
test
cmp
stos
insb
icebp
pop
xchg
jmp
repz
mov
inc
xchg
imul
xor
repnz
mov
bound
mov
inc
xchg
imul
xor
icebp
adc
aad
sbb
bound
jno
inc
pop
imul
mov
mov
std
mov
inc
push
imul
cmc
dec
icebp
sbb
sbb
out
cmp
in
insb
cmc
inc
in
sub
imul
enter
insb
add
cmc
fcmovnu
sbb
rorl
leave
mov
bound
sbb
inc
add
imul
cmc
pushf
mov
pop
bound
sbb
fldenv
fwait
mov
pop
bound
sbb
fmull
lcall
bound
sbb
std
ss
cmc
cltd
insl
sbb
push
push
sbb
mov
sbb
popa
mov
bound
ficompl
imul
mov
sbb
mov
bound
flds
imul
jg
cmc
sbb
sbb
mov
fsubl
mov
bound
lcall
and
aas
insb
cmc
sbb
sbb
mov
inc
bound
sub
mov
insb
insb
lds
in
test
sbb
mov
inc
inc
pop
sub
test
inc
imul
stos
insb
icebp
pop
xchg
jmp
dec
bound
mov
ss
inc
push
pop
jmp
mov
clc
sbb
mov
inc
hlt
mov
out
xchg
pusha
enter
mov
in
sbb
mov
inc
call
mov
insb
insb
test
sbb
mov
inc
inc
pop
sub
test
inc
imul
stos
insb
icebp
pop
xchg
jmp
dec
aam
sub
ss
inc
push
pop
jmp
mov
int3
sbb
mov
inc
enter
out
xchg
aas
sub
lods
insb
add
cmc
inc
mov
mov
lds
push
mov
ljmp
test
mov
ss
lods
inc
stos
ss
pop
jmp
mov
test
sub
sbb
out
cmp
in
insb
cmc
inc
pushf
sbb
mov
xchg
cwtl
add
out
lods
insb
add
cmc
inc
nop
sbb
mov
mov
lds
mov
ljmp
test
mov
movb
jmp
mov
jl
sub
sbb
out
cmp
in
insb
cmc
inc
jo
sub
imul
lods
insb
add
cmc
inc
sbb
mov
mov
lds
test
in
ljmp
test
mov
ss
push
inc
stos
ss
pop
jmp
mov
dec
sbb
sbb
out
cmp
in
insb
cmc
inc
inc
sbb
mov
xchg
aas
add
out
lods
insb
add
cmc
sbb
xor
das
inc
lods
imul
sub
insb
lds
inc
test
in
ljmp
test
mov
mov
adc
cmovo
ss
cmc
pushf
add
xorb
cmp
inc
pushl
imul
cmc
fwait
jmp
jg
sbb
mov
ss
inc
ss
cmc
lcall
lret
mov
bound
sbb
inc
std
ss
imul
ds
cmc
sbb
sbb
mov
fisubl
mov
inc
xorb
pop
xchg
in
cmp
sbb
mov
fldenv
mov
inc
jg
inc
pop
mov
inc
ss
ja
push
out
insb
mov
jae
shlb
jle
xchg
pop
cmpb
sbb
std
ss
cltd
push
in
jge
cmc
dec
sbb
pop
jmp
dec
dec
inc
sub
imul
or
bound
in
bound
inc
ds
sub
pop
xchg
imul
enter
or
bound
inc
xor
ss
mov
insb
mov
sbb
sub
cmp
insb
test
in
imul
sbb
inc
pop
jmp
dec
push
inc
sub
imul
or
bound
mov
bound
inc
adc
ss
xchg
imul
pop
or
dec
out
xor
add
out
pop
pusha
mov
mov
repz
adc
ljmp
pusha
xchg
pop
je
loop
pop
repz
sbb
ficoml
fdivs
or
dec
out
sarb
pop
sarl
std
inc
fwait
sub
ficoml
je
pop
dec
xor
daa
sbb
jge
mov
xorb
push
dec
xor
call
inc
pop
rolb
dec
es
ss
hlt
cmp
cli
es
dec
cmp
out
lcall
cmp
xchg
mov
cli
stos
jp
pop
pop
pop
ljmp
jb
aad
cli
xor
outsl
inc
inc
cmp
sub
insb
xchg
fwait
inc
pop
cmp
mov
and
lret
sbb
mov
ds
jbe
push
cli
imul
popa
adc
cli
test
cli
sub
pop
outsl
sbb
cs
ds
cmpsb
inc
jmp
cmpsl
test
jne
add
xor
xor
ljmp
cmp
repnz
cli
mov
jecxz
mov
pop
rcrl
ss
jmp
xlat
push
pop
scas
pop
out
dec
stos
ds
jns
or
ljmp
dec
sbb
cmp
cmp
mov
repnz
lahf
imul
ret
mov
push
xor
loop
aad
test
mov
xchg
pop
push
dec
push
mov
push
cwtl
push
cmp
cli
sub
sbb
dec
push
mov
sbb
add
in
call
ds
cli
cmpsb
test
inc
rcrl
xor
mov
lret
imul
in
lcall
mov
dec
cli
and
pop
ljmp
rcrb
pop
fidivrs
push
dec
leave
mov
dec
xor
fcompl
cmp
or
xor
mov
inc
cmp
repnz
push
xchg
pop
pop
xor
sbb
repnz
pop
insl
repnz
mov
sbb
stos
ja
cmpsb
clc
sbb
fdivp
xchg
mov
mov
lcall
clc
call
xchg
outsb
xor
pop
cmp
in
mov
imul
pop
inc
xor
pusha
push
mov
cmp
push
ljmp
lods
ljmp
pop
push
xorb
jge
jle
mov
lret
mov
sbb
jbe
jge
dec
fcompl
push
push
push
pop
lcall
data16
repnz
lods
pop
lahf
ss
outsb
jae
ljmp
cmp
repnz
push
fwait
pop
cmpsb
data16
xor
pop
lods
cmp
cmp
in
fistps
ss
pop
jae
ljmp
cmp
mov
push
repnz
mov
sarb
je
xchg
cmp
cmp
mov
xor
dec
push
out
mov
pop
sub
pop
cmp
dec
repnz
stos
inc
jne
xor
insb
pop
fistps
ss
repnz
push
out
jp
cmc
pop
insb
cs
cmp
xor
test
repnz
sub
ljmp
and
cmp
mov
mov
sbb
pop
cmp
and
push
pop
pop
jo
and
ljmp
ss
repnz
push
mov
arpl
jne
xor
jo
imul
out
cli
outsb
adc
add
jne
xor
dec
imul
out
cmp
xor
push
in
sub
pop
pushf
cs
roll
repnz
pop
jg
xchg
add
mov
mov
ss
jae
repnz
cmc
jae
icebp
jae
jmp
add
mov
cld
mov
lcall
imul
mov
cmp
cmp
cmp
repnz
arpl
pop
push
jns
mov
xchg
bound
jbe
push
add
shl
mov
cmpsl
ss
or
jae
lds
shll
mov
push
test
mov
push
lods
repnz
mov
mov
or
jp
mov
imul
cmc
sbb
mov
imul
pop
pop
ss
cltd
jae
ljmp
dec
mov
cmp
repnz
adc
xor
movsl
pop
pop
pop
rorb
cmpl
jns
sub
xor
lret
bnd
or
pushf
jecxz
mov
push
adc
fstpt
repnz
sub
call
lods
pop
pop
mov
ss
mov
cmp
dec
cmp
dec
cmp
cmp
cmp
repnz
push
mov
test
ss
sub
sbb
sub
add
stc
push
push
pop
mov
xchg
and
lcall
out
ret
pop
dec
and
sbb
insb
jg
sbb
jp
pop
jp
int3
pop
sub
jne
add
je
cld
imul
clc
pop
pop
pop
jle
ss
cmp
repnz
cli
sub
push
jp
jae
jp
dec
pop
stos
aam
push
sarb
int3
jne
xor
pop
in
mov
popa
pop
ret
mov
mov
mov
lods
jae
test
ja
jae
pushf
jae
xchg
jae
nop
jae
mov
push
cli
push
pop
inc
jl
lods
js
sbb
push
insb
imul
sub
rcrb
push
out
pop
jle
push
lret
repnz
out
xlat
or
mov
mov
repnz
daa
push
mov
sbb
ljmp
in
mov
arpl
jae
ljmp
ss
fistps
jne
xor
cmp
repnz
sub
sbb
aam
pushf
cmp
add
xor
das
pop
add
cli
repnz
jle
jge
push
sub
daa
pop
out
icebp
bnd
add
pop
inc
jp
push
pop
xor
cmp
repnz
push
adc
xor
mov
mov
ljmp
xchg
push
iret
pop
ss
sbb
ljmp
xchg
push
fcompl
xor
push
iret
pop
xchg
or
pop
adc
or
pop
push
or
cli
mov
lret
pushf
mov
xor
add
outsl
mov
and
xor
cmp
bnd
pushf
pop
xchg
jne
xor
inc
pop
std
cmp
or
push
imull
scas
pop
jbe
ljmp
lea
inc
pop
add
enter
jo
aaa
repnz
push
mov
stos
ss
ljmp
test
out
lods
pop
into
out
mov
dec
repnz
jecxz
pop
pop
fildll
in
mov
add
inc
mov
mov
xchg
bound
pop
adc
call
mov
ja
push
dec
pop
pop
xor
imul
jbe
cmp
sbb
xlat
cli
loop
push
aad
popf
xor
push
pop
sbb
in
shrb
pusha
pop
dec
xor
ljmp
arpl
ljmp
pop
push
xor
stc
cmp
pop
cli
and
and
jns
stos
jns
cmpsl
jns
mov
insl
lahf
arpl
xchg
ss
push
inc
pop
sub
add
sbb
cwtl
sbb
jbe
xchg
sbb
xor
imul
ljmp
outsl
jo
lcall
imul
jae
cmp
out
push
pop
lock
out
cld
cmp
lret
subl
pop
cmpsb
pop
shl
popa
push
sub
fsubr
repz
ficomps
cmp
repnz
mov
push
pop
pop
fs
jae
ljmp
mov
sub
call
cmp
pop
push
pop
xor
or
cmp
cmp
or
dec
into
jne
xor
out
dec
jl
push
dec
pop
or
int
pop
popf
pop
sbb
push
and
sbb
jbe
cli
in
inc
mov
loope
movsl
ljmp
mov
adc
addr16
adc
sbb
pop
ljmp
dec
mov
pop
mov
jp
inc
pop
or
add
leave
push
mov
xor
adc
fdivrl
movsb
repnz
push
sub
mov
cmpl
and
push
in
mov
rcr
push
sbb
sbb
jb
jbe
scas
push
pop
mov
popa
ljmp
ss
repnz
push
and
add
ljmp
push
mov
into
pop
mov
std
hlt
push
lds
xor
cmp
repnz
cwtl
pop
pusha
xor
pop
pop
out
negb
pop
push
lcall
lock
lods
cmp
xchg
repnz
pop
cmp
mov
xchg
notb
push
push
out
cmp
jp
inc
xlat
sbb
jp
mov
loop
push
cmpsb
repnz
xor
sbb
sbb
adc
pop
scas
jp
push
jne
jo
pop
sub
stos
pop
sub
and
sub
xor
es
lds
xor
push
push
cmpl
repnz
mov
cmpsl
out
dec
in
push
xchg
pop
jmp
test
dec
xchg
xchg
bound
pop
push
scas
in
ret
xor
push
loop
xchg
cmp
jp
loope
movsb
xor
dec
pop
pop
cmp
push
rcrb
dec
ljmp
mov
jg
jp
ds
push
xor
ljmp
dec
push
fstpl
xor
ljmp
push
mov
loope
mov
pop
outsl
push
mov
sbb
repnz
inc
arpl
pop
pop
xor
inc
pop
cltd
cmp
push
push
and
cmp
jae
ljmp
das
cmp
bnd
cmpsl
inc
outsb
xor
ja
cli
xor
in
sbb
dec
add
call
push
sub
mov
sub
pop
xchg
cmp
and
rcrb
stos
jnp
leave
or
inc
pop
aaa
sbb
data16
dec
pop
sbb
cmp
repnz
pop
leave
adc
pop
ss
adc
ljmp
or
sbb
mov
inc
popa
ja
jbe
stc
mov
push
in
pop
cmp
cmp
mov
test
je
mov
cli
in
test
jge
sbbl
pop
negb
dec
add
pop
ljmp
xor
pop
movsb
and
jno
je
adc
prefetcht0
cli
std
or
into
call
pusha
mov
cmp
jno
cli
jbe
sbb
insl
mov
stos
lea
xchg
jo
fwait
cmp
pusha
dec
ljmp
jmp
mov
jae
insb
cs
lret
repnz
pop
adc
sar
push
cmc
repnz
pop
pop
cld
xor
repnz
pusha
or
scas
pop
pushw
fcmovnbe
sub
or
pop
pop
sbb
sbb
push
out
push
stos
cmp
repnz
jp
dec
or
pop
repz
jns
push
jne
or
pop
mov
pop
sub
push
dec
mov
mov
cmp
mov
cs
xor
dec
dec
imul
mov
jae
xchg
inc
xor
ljmp
iret
cmp
sbb
loop
push
xchg
jne
xor
cmp
aaa
pop
mov
es
cmp
out
cmp
cmp
sub
mov
icebp
sbb
jae
jne
ja
sbb
push
jne
add
repnz
dec
or
pop
jae
add
push
sti
pop
in
cmp
imul
or
jecxz
jp
cmpsb
pop
xchg
jns
sarl
iret
jns
jne
ss
ret
ja
mov
pop
pop
test
lock
fdivl
cld
mov
mov
mov
adc
fists
int3
xchg
pop
pop
orl
fimull
or
clc
pop
enter
fsub
imul
aas
lret
ljmp
fimull
fldcw
or
push
sub
fsubrs
leave
addr16
into
arpl
pop
and
lahf
pop
cmp
repnz
cli
cmp
ljmp
dec
jns
inc
jns
inc
jne
ss
jae,pt
repnz
cmp
xor
push
imul
in
cmp
repnz
push
jp
sbb
push
clc
imul
sbb
ss
adc
jae
repnz
imul
inc
add
pop
scas
pop
mov
pop
xchg
repnz
push
iret
pop
dec
out
jne
xor
cmc
aas
lds
cli
push
jp
pop
bound
cmp
repnz
inc
out
es
ljmp
imul
cmp
cmp
and
aam
jp
mov
fs
mov
mov
mov
jno
jge
pop
pop
cmpsb
ss
into
lcall
xor
repnz
mov
mov
xorb
repnz
das
push
jbe
loopne
in
jb
nop
cmp
repnz
cli
dec
data16
sub
mov
jp
lcall
jne
xor
repnz
imul
fadds
cmovno
cmp
pop
and
mov
sub
inc
imul
gs
sub
call
cmp
ss
sub
sub
or
push
jl
push
cs
mov
sub
repnz
and
outsb
sbb
fistl
cmc
and
add
cmp
dec
bound
pop
inc
repnz
push
daa
push
push
cmpb
and
fwait
sub
mov
pop
ret
cmpsb
cmp
repnz
cli
int3
stc
jecxz
jns
icebp
jne
ss
in
jae
ljmp
cmp
out
cli
jo
push
mov
add
enter
jne
ss
shll
mov
repnz
jb
pop
outsb
lds
loope
int
adc
jae
ret
lock
dec
pop
cmpsl
xor
jl
push
push
lea
xor
cmp
out
stos
rcrl
int
test
cmp
dec
cli
movsl
push
imul
ret
test
movsl
ja
mov
add
xchg
push
test
cmp
insb
sub
mov
scas
cltd
add
bnd
and
cmp
push
pop
js
repnz
jne
movsl
pop
mov
push
fwait
pop
push
jno
push
xor
ljmp
lods
push
xor
xor
cmp
pop
rep
insl
imul
cmp
repnz
mov
pop
and
lock
or
add
repnz
cmpsb
push
adc
xor
pop
movsl
cmp
repnz
or
or
and
pop
sub
xor
push
and
ljmp
cmp
repnz
pop
mov
int3
mov
xor
push
push
imul
push
dec
repnz
adc
jne
xor
outsl
inc
imul
repz
dec
cmp
xor
mov
nop
and
and
sbb
ds
pop
mov
xchg
xchg
add
pushf
add
test
cli
lods
clc
cli
mov
cli
into
in
push
jecxz
call
loopne
std
fdivrl
fdivrs
adc
cmp
shlb
ja
enter
ja
rclb
ja
add
jnp
xlat
mov
lahf
rorb
inc
push
mov
push
xchg
mov
mov
mov
test
jp
xchg
jp
pushf
sub
cwtl
jne
xchg
adc
lcall
jns
je
dec
jo
daa
push
add
out
jmp
mov
inc
push
cwtl
loope
adc
mov
imul
cmp
pop
or
mov
out
into
pop
cli
xchg
adc
outsb
psubd
or
imul
dec
push
popf
jmp
out
cmp
insl
adcl
pop
mov
pop
xlat
mov
cmpsl
push
mov
ror
insb
push
jle
sub
pop
stos
pop
into
iret
ss
jg
out
lret
inc
adc
inc
scas
adcl
fcompl
pop
ds
jne
xor
sbbb
bnd
add
push
sbb
xor
push
mov
pop
cmpsl
imul
repnz
insl
add
pop
icebp
cltd
sub
jmp
aas
sbbl
jg,pt
mov
hlt
notl
ja
xor
pop
jg
cmc
outsl
pop
sbb
iret
cmp
repnz
cli
lret
jno
rcrl
mov
push
push
ja
dec
ja
inc
ja
inc
jae
ljmp
ljmp
xor
mov
lock
or
aad
sub
repz
imul
clc
xor
add
inc
cs
xlat
pop
xchg
ss
sub
ljmp
pop
es
cli
ds
push
cmpsb
inc
cli
sbb
push
pushf
jp
lcall
adc
repnz
ret
ljmp
jge
cmp
clc
push
je
movsb
push
jns
or
ja
cld
jp
sti
push
mov
and
cmpsl
pop
push
imul
fcomip
fwait
cli
push
add
loop
inc
cwtl
cmc
jmp
mov
repnz
dec
pop
sbb
fcoms
ficoml
movsb
pop
in
add
mov
out
stos
bnd
imul
out
imul
xor
pop
fcompl
ss
popf
pop
out
sarb
into
jns
lret
jne
ss
ret
jp
bnd
test
jne
and
cli
gs
mov
pop
lcall
les
mov
push
xchg
jns
xchg
jne
ss
jae
ljmp
xorb
xchg
push
add
mov
outsb
cmpsb
jp
push
pop
push
fdiv
sbb
jae
bound
pop
inc
repnz
in
jno
mov
xchg
lds
sbb
in
push
in
jp
cwtl
jp
adc
jns
dec
jns
inc
jns
inc
jne
ss
aad
in
mov
sub
and
pop
cmp
push
cmc
sbb
push
and
pop
rclb
nop
or
mov
or
push
cli
outsl
add
dec
std
cli
push
stc
cli
in
push
in
in
mov
test
popf
jmp
mov
cmp
fnstenv
dec
aad
mov
pop
movsl
int
pop
push
xlat
or
jp
je
lds
adc
cmp
add
sbb
add
sbb
push
lods
xor
pop
jecxz
mov
jae
pop
sbb
ljmp
cwtd
sub
sub
sti
push
cmp
nop
call
or
repz
int
adcl
idivb
js
test
xchg
ficompl
jg
mov
inc
xchg
cmp
mov
nop
je
out
adc
sub
mov
lock
je
and
cmp
mov
adc
arpl
imul
fistl
in
outsl
push
call
rcl
xlat
out
jnp
iret
cltd
fs
lret
mov
xor
clc
ret
test
movsb
mov
jb
mov
mov
push
jno
fstps
scas
push
jns
pop
fimull
jbe
repnz
insb
loope
xchg
fsts
cltd
mov
je
stos
pop
jl
push
scas
push
cmpsl
push
imul
pushf
push
lcall
mov
xor
ret
cmpsb
push
push
pop
add
out
jp
mov
sub
lcall
ljmp
clc
adc
pop
or
add
out
stos
pop
xchg
xor
cmp
mov
mov
pop
pop
adcb
fs
cmp
xorl
cmp
or
imul
insb
testb
ja
call
loope
pop
cli
loopne
push
sbb
xor
push
std
dec
pop
jb
dec
gs
outsb
pop
insb
notb
and
push
icebp
push
jae
sbb
jle
dec
out
mov
mov
sbb
clc
pop
fisttpll
xor
jno
imul
pop
mov
ss
ljmp
jae
loop
ds
sub
sub
mov
fiaddl
cmp
cmp
sbb
cld
idivb
pop
and
lods
jp
into
xlat
add
sbb
jp
pop
les
stc
jo
cmp
cmp
push
pop
movsl
push
jp
and
jnp
mov
xorl
ficompl
or
add
add
stc
xlat
subl
call
outsl
sub
xor
push
daa
pop
sbb
lock
push
scas
jp
and
xor
repnz
ds
repnz
cmp
iret
adc
jae
ljmp
cmp
cs
jmp
out
and
ja
sbb
inc
cli
jo
or
insl
loopne
orb
lcall
int
arpl
add
xchg
inc
mov
xor
movsl
sbb
adc
mov
lea
mov
scas
setns
sti
and
call
cltd
and
fistpl
arpl
sti
sbb
jns
rolb
mov
icebp
dec
jecxz
and
mov
fwait
mov
xchg
xchg
fwait
or
mov
iret
jo
nop
mov
pushf
mov
cli
mov
fs
shl
movsl
daa
clc
cmp
inc
and
stos
fmull
out
mov
cli
xchg
jg
sbb
jp
sub
sbb
fidivrl
or
mov
and
mov
arpl
ss
test
shl
push
jmp
cmp
cmp
out
push
pop
fcoml
lea
push
mov
imul
out
push
add
xchg
dec
sbbb
scas
insb
pop
aaa
pop
mov
push
push
xor
adc
insb
ljmp
sbb
nop
jl
ds
push
xchg
push
out
push
mov
and
lahf
adc
fnstenv
imul
mov
pop
push
cmpb
clc
sub
pop
dec
ljmp
mov
sbb
ljmp
js
adc
fs
repnz
jno
xchg
xor
cmp
aaa
daa
push
jns
xor
leave
dec
inc
mov
lret
repz
dec
mov
dec
push
stc
adc
jae
cmpsb
int3
jl
mov
dec
mov
or
cmc
dec
jmp
mov
clc
loop
out
inc
sub
sub
dec
and
cmc
mov
xchg
ljmp
sbb
in
notb
jge
ljmp
jo
aas
jno
loope
jecxz
icebp
dec
movd
adcb
scas
sarb
fcompl
jno
add
mov
inc
icebp
ljmp
xor
jp
dec
mov
repnz
shll
xchg
je
cmp
out
push
fists
orb
dec
mov
sbb
sub
out
popa
adc
js
repz
dec
cmc
or
cmp
stos
in
pop
outsl
les
mov
dec
mov
xchg
test
mov
pop
add
incl
add
pop
xor
je
test
test
arpl
fcompl
test
aaa
dec
sbb
xchg
movsl
jo
pushf
or
pop
bound
and
jo
or
ljmp
mov
out
add
xchg
sbb
inc
ss
out
xchg
into
cli
cmp
xchg
push
push
insb
xchg
and
pop
je
sbb
inc
insl
es
push
out
idivb
push
push
mov
push
mov
mov
add
pop
push
sub
sbb
sub
xor
in
mov
ljmp
mov
in
outsb
mov
jg
jae
jmp
stos
jnp
mul
xchg
jg
data16
add
xchg
jl
fucomp
and
ja
adc
or
cwtl
in
mov
popf
dec
lods
bound
dec
sbb
jnp
dec
xchg
inc
mov
mov
ja
or
mov
pop
jmp
icebp
outsl
lock
xchg
ret
mov
jnp
cmp
aas
lea
das
xor
ja
lock
push
outsl
inc
cmc
aad
jns
push
outsl
divl
testb
pop
mov
dec
push
repnz
ficompl
in
sbb
push
outsl
sub
mov
ja
jp
mov
cmc
jmp
pop
enter
cmc
pushl
test
cli
sub
add
push
testl
jae
push
lds
imul
xor
outsb
pop
cmc
or
jmp
jl
jno
cmc
aas
jae
mov
cli
arpl
ss
ljmp
jbe
or
jmp
cmp
insl
push
xchg
mov
nop
out
mov
push
cli
cwtl
jbe
mov
es
cmp
jge
test
jae
jp
xlat
inc
cmp
jae
jne
arpl
jae
jge,pn
inc
mov
mov
or
fstpl
push
dec
or
in
xchg
test
xor
or
sbb
out
or
push
rep
sbb
fildl
pop
je
mov
dec
mov
pop
xchg
mov
jmp
je
mov
dec
xchg
cs
jo
push
xor
add
add
test
pop
jecxz
out
fneni(8087
mov
inc
mov
adc
pusha
sub
pop
fs
lea
outsl
sahf
bnd
and
call
cmp
aad
ss
int
out
frstor
mov
push
add
jb
cmp
fldenv
bound
jns
in
push
ficompl
dec
les
or
cmp
out
and
divb
jp
jne
ja
inc
shrl
cmp
dec
imul
jns
fxch
pop
inc
imul
push
dec
mov
and
outsl
mov
jae
ficomps
mov
sbb
mov
fbstp
jg
pusha
adc
ret
lahf
jbe
mov
mov
pop
add
cmp
mov
jp
or
ss
in
xorl
ja,pt
pop
ja
outsl
dec
jmp
lret
daa
daa
test
jns
push
push
ja
leave
outsl
push
lcall
outsl
dec
inc
out
ljmp
mov
and
sti
inc
mov
lret
mov
dec
pop
sbb
inc
add
jp
adc
mov
dec
sbb
cmp
in
lcall
xchg
pop
in
addb
mov
loop
jp
ds
sti
xor
dec
pop
ss
sbb
jp
int3
jp
enter
mov
and
or
and
xor
inc
push
test
dec
mov
add
pushf
cmc
jns
in
mov
cmpb
mov
mov
jle
out
loope
lret
insl
xchg
inc
push
mov
test
pop
stos
nop
mov
mov
aaa
mov
mov
and
push
test
cltd
and
mov
sti
xchg
lret
rorb
lcall
cmp
imull
mov
cmp
inc
pop
bound
test
sti
sbb
sub
ficompl
add
lcall
pop
pusha
add
cmp
inc
mov
or
push
sbb
inc
outsl
out
dec
pop
mulb
or
das
adc
clc
scas
sbb
or
cld
jae
pop
call
cmp
in
fdivr
or
jns
add
insb
fdivr
mov
mov
repnz
shrb
int3
popa
fildl
cmp
sub
mov
aad
nopl
sbb
mov
jo
out
mov
sti
mov
pop
jnp
test
jo
push
pop
push
pop
dec
outsb
aas
fwait
bound
daa
int3
inc
cmc
cmp
xchg
je
mov
cmp
jne
pop
or
icebp
mov
jp
dec
fcoml
pop
outsb
mov
in
dec
ss
sbb
aaa
mov
xor
aas
fwait
adc
pop
sub
pop
fst
push
fsubrl
pop
sbb
xor
mov
pop
in
adc
lods
in
or
repz
arpl
mov
cmpb
mov
nop
pop
out
sbb
in
je
jmp
xlat
push
jbe
iret
inc
cli
pop
idivl
mov
mov
push
add
leave
dec
jne
mov
inc
pop
daa
in
dec
pop
mov
fsubrs
cli
dec
popa
pop
pop
dec
fmul
scas
pushl
fistps
cltd
cmp
cmp
jo
adc
or
fbld
or
jns
fistpl
adc
lret
jp
in
sub
ret
daa
or
iret
sbb
lcall
rcr
lcall
and
mov
mov
push
pop
pusha
cltd
push
pusha
lcall
inc
push
testl
das
lods
jns
add
mov
or
sti
or
mov
idiv
fs
fsubrl
push
rorl
mov
das
push
movntq
out
in
cmp
ds
push
dec
iret
jns
fs
sbb
pop
cli
add
push
pop
lret
out
sbb
mov
mov
jecxz
imul
jl
xchg
iret
inc
cmp
js
push
shl
arpl
movsl
xlat
out
inc
pusha
lret
cs
ss
mov
mov
dec
mov
jae
test
pop
xchg
mov
cmp
jae
aaa
ja
push
xchg
cmp
adc
imul
or
or
xchg
cmp
arpl
in
pop
xor
repnz
xorb
and
lahf
cmp
sub
push
or
icebp
test
fdivrl
pop
repnz
insb
xor
addb
outsb
push
jb
mov
mov
mov
lods
das
iret
jnp
adc
into
xchg
mov
inc
dec
std
cli
mov
subb
jl
iret
adc
fidivl
jnp
push
adc
pop
mov
cmpb
test
inc
push
adc
jp
outsb
jnp
sbb
add
or
mov
iret
loopne
inc
sub
add
fidivs
ja
sbb
pop
jnp
imul
sbb
push
cli
decb
sbb
cltd
xor
push
xor
cld
cmp
in
push
pop
cli
into
mov
jle
popf
shlb
iret
jne
ja
divb
daa
out
lret
stos
mov
cli
divl
data16
test
sub
fcom
repnz
mov
or
jns
orb
stos
mov
cmpsl
jae
mov
fwait
mov
xor
jp
test
mov
sbb
mov
pushf
add
xlat
ja
in
call
adc
and
pop
push
inc
stc
std
icebp
repnz
jp
gs
into
mov
xor
sbb
mov
pop
dec
lods
adc
std
lcall
stc
jbe
or
cmp
jne
pop
dec
inc
out
xor
xchg
enter
add
pop
cli
push
inc
dec
pop
repnz
add
cmp
cld
adc
lods
dec
jns
adc
out
jp
jno
cmpb
test
hlt
xlat
cmpb
lods
leave
hlt
jns
jp
jmp
clc
repz
dec
jp
stos
mov
xchg
out
dec
cld
je
mov
aas
mov
movsb
stos
jle
jbe
icebp
repnz
and
or
lcall
mov
fnstsw
pop
fwait
cmp
cmp
leave
ja
mov
mov
outsb
fwait
mov
jbe
lods
adc
out
fnstcw
xchg
fmul
inc
cmp
lcall
pop
jl
hlt
mov
push
jo
xor
pop
es
ja
pushf
lds
mov
in
push
stc
ficompl
js
arpl
nop
pop
cli
xor
cmp
push
daa
or
inc
inc
jl
xor
sbb
add
clc
ja
adc
lcall
pop
in
fdivrl
or
lock
mov
cmp
and
popa
mov
lcall
sti
dec
jbe
adc
ficompl
pop
jne
add
lds
sti
adc
js
and
stc
cmp
pop
rorl
outsl
xor
je
enter
clc
mov
jae
adc
sti
into
in
mov
pop
enter
mov
jecxz
inc
mov
add
dec
or
mov
repz
mov
pop
cwtl
or
dec
push
imul
stos
pop
jae
push
fnstsw
add
dec
jl
ficompl
jmp
js
cmp
das
fists
mov
sbb
out
sbb
mull
pop
sub
xlat
mov
push
inc
out
js
pop
push
mov
jae
repz
mov
in
xor
stos
mov
push
cmc
pop
jmp
cmpsl
js
pushf
jae
scas
fwait
lahf
add
or
sti
xchg
lcall
iret
in
out
faddl
adc
lods
fwait
add
jl
sbb
adc
ret
pop
sahf
mov
outsl
xor
or
mov
dec
addr16
pop
shlb
push
loop
fsubrl
jae
in
or
xchg
jp
stos
arpl
in
or
cmp
push
dec
das
fistps
sbb
pop
push
and
or
xchg
cmp
sub
mov
add
loop
insb
lretw
sub
sbb
fs
cli
mulb
mov
inc
fcmovu
cmp
mov
push
add
in
out
xor
cmp
test
push
sti
imul
jns
cmp
cmp
ror
mov
push
rcrb
xorb
mov
xor
test
mov
clc
addr16
mov
cmp
cmp
mov
cmp
cmp
jae
jnp
imul
in
jnp
imul
add
nop
pop
cmp
fwait
in
jae
mov
insb
push
cmp
mov
xchg
aas
pop
mov
test
jnp
jno
push
mov
jb
pop
aas
ljmp
mov
dec
mov
add
cmp
mov
add
aam
aas
mov
or
jnp
imul
cmp
mov
jo
mov
inc
mov
jnp
addr16
pop
inc
ljmp
sti
sub
xchg
fwait
out
jnp
outsl
ljmp
cli
rcl
or
data16
dec
xor
mov
jl
jnp
fisubrl
repz
dec
xor
fwait
jg
jmp
imul
int3
mov
and
fsts
adc
jae
imul
sbb
movsb
test
pop
mov
mov
inc
jp
jae
sbb
out
push
cmp
js
je
shll
mov
inc
imul
dec
jns
fwait
lahf
xchg
cli
fidivrl
int3
dec
cmpsl
jae
jnp
lcall
jae
jp
cli
orb
mov
mov
jnp
inc
pop
adc
or
sub
mov
jmp
insb
rcr
repz
lret
mov
fwait
scas
xor
jnp
mov
stos
adc
ja
jnp
cli
imul
or
mov
pushf
mov
jae
mov
cld
push
scas
xchg
dec
jnp
inc
lahf
push
jle
test
insl
add
push
fwait
dec
fildll
push
xor
mov
push
fwait
and
ret
pop
push
aas
mov
jnp
dec
imul
mov
lcall
jae
aad
jnp
mov
fbld
adc
les
shrb
mov
jnp
adc
push
icebp
cli
push
idiv
imul
dec
push
imul
jnp
test
dec
adc
fstpt
push
imul
add
jno
jnp
aam
pop
cmc
jno
xor
fildl
dec
enter
out
xchg
pop
iret
sub
mov
xor
mov
mov
inc
xor
test
mov
mov
mov
cmc
lcall
mov
sarl
pop
dec
shll
dec
hlt
addb
sbb
inc
fisubl
push
jae
mov
xor
jnp
mov
js
out
pop
int3
adc
cmc
loop
push
xor
jnp
sub
sub
int3
adc
adc
cli
mov
lret
dec
pusha
jae
fldt
mov
nop
and
ljmp
cmpb
add
imul
pop
enter
sub
push
jp
lret
or
add
iret
rcll
pop
ljmp
cmc
imul
dec
fdivrs
dec
push
dec
cmp
push
jae
nop
jbe
adc
int3
imull
mov
push
xchg
or
mov
cltd
movsb
mov
xlat
insb
stos
xor
sbb
push
lahf
stc
incb
xchg
imul
in
jnp
push
adc
jmp
jl
xchg
inc
jnp
outsb
push
dec
lcall
add
push
jns
lea
pop
dec
out
sti
mov
and
test
insb
mov
and
push
pop
lock
in
push
jnp
xchg
pop
mov
or
push
jnp
shlb
adc
and
xchg
jns
or
cmpsl
mov
mov
out
imul
fcoml
push
clc
cld
shlb
adc
pop
or
imul
mov
out
les
xchg
jnp
pop
mov
jmp
jae
cltd
xlat
inc
or
pop
and
cwtl
add
iret
push
mov
sub
in
xchg
push
cmp
aaa
xor
pop
das
sub
imul
imul
call
dec
loop
pop
jnp
mov
pop
test
xchg
mov
sarb
subl
into
icebp
insb
add
sbb
pushf
sub
repz
dec
push
fists
jno
leave
sbb
mov
pop
pop
or
aaa
stos
arpl
aas
dec
push
jbe
mov
scas
imul
and
or
push
imul
in
xchg
fsubr
pop
imul
dec
cmpsb
cvtps2pd
add
add
jnp
pop
dec
fcmovne
jmp
add
cmpsl
fwait
shll
jmp
jmp
out
sahf
jnp
stos
mov
mov
fwait
push
cmp
push
cmp
pop
cs
push
icebp
imul
divl
sub
and
cmp
add
push
clc
imul
cmp
adc
pop
jne
imul
xor
out
sahf
mov
dec
cmp
xchg
out
dec
fidivrs
ret
aam
inc
lahf
decl
adc
pop
and
push
push
mov
pusha
pop
fcomi
test
jnp
add
mov
fwait
push
mov
sbbl
dec
jno
cmp
cli
inc
pop
cli
inc
dec
repnz
inc
push
xor
and
sub
imul
push
pop
mov
notl
lock
pop
psubsb
cmp
rol
add
cmp
or
xlat
cmp
ljmp
mov
adc
or
jle
sarl
sti
mov
or
mov
cmp
push
bound
pusha
ret
adc
ja
sub
jno
dec
jp
push
je
cltd
pop
insb
xchg
jae
mov
jge
pop
jne
push
imul
jae
push
in
test
sub
imul
or
negb
adc
loopne
or
pop
sbb
push
cli
ljmp
mov
fs
ret
stos
lcall
fisubrl
cmpsl
out
sahf
jnp
bound
mov
testb
aam
pop
dec
mov
daa
fwait
pop
imul
jnp
fimull
dec
popa
fwait
cmp
or
pushf
arpl
test
cli
js
loop
mov
aad
cli
stos
imul
and
and
imul
xor
and
pop
or
add
imul
xor
mov
repnz
mov
cmp
cmp
push
out
fistl
rclb
jp
pop
jb
jns
push
mov
jnp
dec
imul
mov
mov
jnp
sar
enter
cli
cli
jge
sbb
dec
and
cs
pop
imul
je
push
jmp
mul
cmp
push
pop
dec
cmp
cmp
aas
test
cli
imul
jae
imul
cli
push
hlt
loop
in
jnp
insb
ficoml
push
loopne
pop
testb
or
sarb
mov
fwait
push
in
sbb
add
dec
aaa
jnp
mov
sub
adc
mov
lcall
cmp
cli
clc
add
xor
nop
shll
in
pop
ljmp
cmp
imul
imul
pop
lods
mov
fisubrl
ja
mov
jge
push
jne
imul
inc
xor
pop
push
and
sbb
outsb
cmp
inc
imul
sub
das
dec
mul
push
out
dec
xor
dec
pop
loop
ficoml
outsl
lret
ret
mov
mov
mov
sbb
xchg
sbb
jnp
or
cmp
hlt
mov
fmuls
and
pop
pop
mov
sub
cmp
add
movsb
cmc
cmp
cs
aad
imul
jo
movsl
loop
jo
inc
pop
fisubrs
pop
sbb
dec
popa
sbb
dec
sahf
jo
xor
pop
sub
pop
imul
or
dec
push
pop
push
cli
push
repnz
dec
ljmp
adc
pop
push
lret
test
mov
push
stos
cmp
mov
push
dec
push
or
mov
inc
mov
jge
mov
xchg
ds
fwait
mov
and
lret
lahf
jae
inc
pop
sarb
stc
jns
sub
and
mov
xor
cmp
in
xchg
dec
repz
loope
fwait
jl
mov
push
mov
loopne
sub
cmp
pop
dec
jbe
fstps
repnz
imul
sbb
xor
sub
daa
sbb
and
cmp
in
mov
push
cli
pop
repnz
out
pop
sbb
push
loop
in
mov
mov
arpl
sbb
cli
mov
scas
adc
cmpsb
xor
xchg
ljmp
cmp
cltd
loop
pop
pop
addr16
out
cli
xor
dec
cmpb
imul
jae
jb
sti
jl
pop
cmp
sbb
loopne
pop
fmuls
sarb
enter
imul
adc
add
sbb
dec
fwait
mov
mov
imul
xchg
dec
dec
imul
push
sub
pop
pop
inc
pop
dec
mov
idivb
das
mov
daa
and
loope
push
add
idivl
inc
cmp
xor
ljmp
repnz
mov
scas
mov
mov
mov
dec
lcall
mov
fildl
xor
push
and
push
adc
push
jne
cmpsl
out
sbb
inc
mov
shll
mov
mov
jnp
jmp
lret
push
sbb
cs
push
pop
call
imul
xor
cmp
jle
mov
cmp
jae
cmc
ljmp
cmp
add
je
xchg
inc
sbb
sub
pop
mov
imul
push
pop
cmp
push
scas
cmp
mov
or
lret
push
mulb
push
repnz
sbb
push
out
mov
ficomps
cs
pop
clc
push
jnp
dec
add
cli
push
mov
ljmp
xchg
xor
ljmp
cmp
scas
sbb
pop
adc
jl
xor
jo
rcll
fwait
stos
pop
sub
add
pop
gs
rclb
insb
xlat
xchg
sbb
mov
fdivl
xor
jbe
hlt
jb
lock
sahf
pop
pop
imul
fidivl
mov
adc
or
std
imul
cwtl
in
fsqrt
mov
cmp
jp
subb
pop
test
ljmp
push
xchg
dec
or
push
arpl
cli
xor
fstpt
dec
fidivrl
xor
ficoml
adc
test
cli
ljmp
jnp
ds
loop
repnz
pop
ret
mov
ss
scas
cmpsb
push
lcall
mov
jle
jbe
outsb
aad
pop
cs
fists
jnp
or
push
pop
rcrl
les
ror
cmp
movsb
fidivrl
sub
stos
test
xor
js
repnz
sti
xor
jle
clc
dec
jp
out
dec
in
imul
cmp
enter
shrb
in
ss
pop
pushf
in
push
mov
aad
add
cmp
cs
imul
mov
pop
test
inc
imul
or
push
cmc
sub
leave
cli
loop
dec
sbb
push
cli
int
push
xor
out
fwait
push
ljmp
fisubrs
lret
mov
mov
mov
ja
add
clc
add
hlt
mov
and
xchg
pop
dec
jp
jb
cmp
push
or
pop
push
jbe
fdivs
jnp
sub
cli
call
int
mov
repz
jnp
fcmovne
les
mov
push
xchg
cli
fwait
or
pop
div
jbe
pop
lock
call
cmp
cmp
mov
cmp
cli
imul
fisttpll
shll
pop
scas
imul
sub
icebp
push
jge
push
jne
imul
bound
cltd
push
or
sub
or
cli
cli
std
bnd
out
jmp
dec
out
ficomps
ficoml
push
mov
ljmp
mov
jle
jbe
in
inc
imul
dec
dec
repnz
test
push
cmp
jnp
jns
push
push
ljmp
jnp
out
xlat
lret
xor
lea
push
adc
cs
adc
mov
sbb
inc
jp
imul
cmp
fdivr
rorb
enter
xchg
lods
mov
repnz
repnz
cli
mov
sub
orb
je
test
repz
inc
push
dec
in
dec
inc
pop
inc
and
xlat
cmp
mov
loop
dec
cmp
repnz
mov
jns
cmp
xor
pop
loop
aaa
pop
sbb
push
ret
dec
test
scas
jns
das
jne
xor
cmp
jp
xchg
outsl
jb
ds
sbbb
adcb
pop
cmp
stos
sub
sarl
rcll
in
ljmp
fsubrl
sub
pop
mov
jnp
dec
aas
ja
cmp
pop
pop
sbb
pop
imul
cmp
pop
push
pop
pop
fcoms
rorb
int3
inc
jno
imul
out
cmp
xchg
jmp
mov
test
repnz
cmp
insb
dec
aas
popa
pusha
xchg
pop
cli
pop
mov
push
and
stos
mov
sbb
sbb
loopne
negb
cli
inc
ljmp
jo
jmp
sarb
or
push
mov
stc
dec
scas
aaa
jne
xor
pop
pop
xchg
xor
mov
cltd
jle
jbe
outsb
in
pop
pop
add
push
inc
pop
cmp
and
loop
jnp
call
and
sub
insb
pop
push
jnp
stos
sub
jecxz
mov
mov
scas
sbb
or
and
add
cmp
pop
imul
cwtl
cmp
test
xor
dec
enter
imul
mov
cli
xchg
out
imul
jp
mov
rcrl
es
insb
pop
push
pop
imul
or
mov
sbb
adc
or
mov
dec
repnz
ds
cs
pop
out
fimuls
inc
sub
dec
push
ret
xor
pop
sahf
das
dec
xchg
in
mov
addb
xlat
jae
ficomps
add
mov
inc
cs
andb
sbb
sub
imul
adc
cmp
and
push
test
jmp
ret
or
bnd
fisttpl
or
imul
mov
scas
inc
mov
bound
xchg
add
mov
mov
sahf
cmp
pop
sbb
xor
imul
mov
imul
pop
mov
test
and
adc
jmp
sbb
sub
push
add
daa
hlt
cmp
lock
repnz
fmull
in
add
stc
aaa
int3
mov
ret
cli
sbb
testb
jp
jp
loop
jae
ljmp
jmp
pop
scas
jecxz
inc
cmpsb
dec
repnz
xor
dec
jp
bnd
push
imul
ss
xchg
cmp
sub
imul
pop
aad
pop
enter
jae
jnp
pusha
pop
jae
hlt
mov
aas
pop
xor
jnp
imulb
xchg
push
xor
pop
sub
mov
sbb
mov
pop
add
hlt
bnd
call
push
jbe
push
call
inc
dec
push
ss
pop
sbb
movsb
dec
or
cmp
data16
incb
mov
cli
mov
out
aad
out
imul
ficoml
mov
dec
pop
xchg
ret
imul
inc
cmp
xor
pop
xor
sub
dec
cmp
jbe
outsb
pop
scas
pop
push
push
jmp
cmp
jmp
inc
push
cmp
test
sbb
jmp
add
or
jmp
aaa
dec
xorl
out
cli
fwait
cmp
rcrb
lret
ss
dec
imul
cmp
add
pop
in
cmp
push
imul
pop
int3
dec
jno
dec
repz
cmp
adc
pop
imul
jnp
pop
pusha
add
out
dec
push
ljmp
mov
popa
fwait
pop
jns
pop
insl
hlt
pop
jae
push
ds
dec
mov
dec
fwait
inc
jns
inc
insl
hlt
cmp
dec
xchg
jp
mov
push
jne
add
push
loop
cs
inc
dec
cmp
cmp
je
sbb
cltd
mov
adc
or
test
jnp
shlb
in
jnp
and
cmp
inc
ficomps
cmp
inc
pop
jmp
imul
cmp
scas
ret
pop
or
or
popa
clc
mov
lock
in
jp
dec
pop
loopne
fcompl
andb
cmp
mov
and
ja
xor
mov
idiv
imul
je
ds
jno
pop
imul
xor
inc
stos
cmp
sahf
mov
in
pop
jle
jbe
push
pop
xchg
jae
fimuls
add
sbb
imul
cmp
cmc
push
jmp
in
adc
inc
mov
in
fildll
cwtl
jnp
imulb
fstl
inc
loop
fisubrs
or
pop
sub
sub
jno
mov
dec
dec
testl
ss
xor
pop
call
fmul
push
mov
enter
idivb
pushf
dec
xor
push
or
push
in
push
cli
call
loop
dec
cmp
and
sub
fimull
repnz
jne
mov
mov
pop
scas
pop
cmpsb
xchg
lcall
push
push
xchg
dec
jp
ss
push
pop
pop
push
mov
dec
inc
cmp
xor
and
fwait
mov
and
add
jp
imul
jnp
cmp
inc
dec
ljmp
sub
mov
rcrb
lret
jmp
jp
sbb
push
mov
pop
insb
add
loop
data16
or
pop
in
pop
in
imul
notb
pop
xor
shr
ss
je
cs
push
add
negb
inc
dec
ljmp
repnz
xchg
outsl
ret
mov
mov
stos
push
xchg
xchg
ja
pop
outsl
mov
jle,pt
mov
push
outsb
push
mov
push
insb
imul
dec
cmp
cmp
pusha
out
adc
sbb
and
call
aad
pop
andb
loop
out
pop
mov
imul
push
push
dec
mov
adc
cli
imul
in
dec
fwait
loopne
pop
mov
int3
cmp
xchg
sub
xor
int
dec
or
or
add
push
repnz
ljmp
dec
push
lret
mov
jne
stos
pop
mov
scas
repz
adcb
xchg
repz
jb
push
insb
imul
pop
jecxz
cltd
push
sbb
mov
pop
inc
inc
dec
xchg
cmp
lahf
mov
xor
fwait
add
mov
call
xor
imul
xor
leave
dec
cli
dec
ljmp
pop
xor
pop
sahf
sbb
jo
mov
pop
dec
mov
dec
sbb
clc
nop
dec
adcb
xchg
dec
jmp
fsubrl
pop
push
cmp
mov
sbb
push
mov
test
jo
ljmp
ficomps
cli
fidivl
dec
xchg
imul
pop
mov
pop
mov
imull
stos
repz
push
mov
pop
xchg
push
dec
imul
pop
push
pop
push
push
stos
pop
dec
je
or
fsubrs
and
xor
jnp
testb
dec
xor
jnp
xchg
imul
movsb
outsl
dec
dec
pop
push
cmp
pop
pop
push
imul
sbb
jp
cmp
jb
cli
lret
pop
repnz
adc
push
or
add
clc
xchg
jns
mov
ss
jae
repnz
sar
dec
enter
adc
cmp
and
or
push
cli
mov
out
popf
pop
pop
out
pop
push
loop
popa
pop
ficoml
js
xor
dec
cmp
scas
xor
sub
cmc
dec
xchg
repz
insb
pop
mov
jle
sub
jbe
outsb
dec
cmp
push
jp
xchg
jnp
setl
cli
call
pusha
sub
inc
mov
cmp
jnp
repz
insb
pop
popa
or
adc
out
out
cmp
loop
pop
cmp
cli
sub
ret
cli
adc
pop
mov
lcall
pop
call
jne
fsubrs
sarb
and
dec
cmpl
push
js
or
sbb
cli
testb
ljmp
fiaddl
sarb
lret
sub
xor
dec
mov
stos
pop
cmpsb
xor
inc
xchg
cmp
mov
xchg
ja
jo
jb
pop
push
pop
cli
cltd
push
insl
pop
fistpl
shr
stos
inc
jnp
insb
mov
push
pop
xor
jnp
cmp
fistpl
fwait
push
mov
sbb
leave
pop
push
pop
push
push
dec
jb
push
pop
dec
ss
ljmp
ficoml
cmp
int3
pop
dec
test
adc
mov
xchg
ja
mov
loopne
out
dec
dec
imul
lret
cwtl
jbe
roll
adc
or
repz
imul
sbb
loop
fidivs
rorb
cli
push
mov
jae
aad
stos
xor
cmp
xchg
test
cmc
pop
jbe
dec
jb
push
imul
mov
pushl
pop
jnp
fisttps
and
es
and
push
jno
and
cmp
pop
cli
pop
jb
cli
repnz
out
pop
inc
aad
cmp
cmp
stos
pop
sub
and
adc
pop
or
mov
add
sahf
icebp
in
ds
call
jle
dec
xor
inc
push
je
sbb
or
push
cs
push
cld
mov
out
jne
mov
sub
nop
sbb
test
jne
xor
pop
ret
mov
jo
scas
jmp
cmpsb
xorb
in
ds
cmp
mov
jbe
imul
js
pop
pop
cs
int3
fildll
jae
mov
cmpsl
jnp
ja
xor
cmp
es
cmp
bnd
mov
pop
pop
xor
cmp
rorb
fisubrs
imul
adc
pop
push
dec
jb
pop
pop
add
jne
ss
lcall
xchg
pop
and
js
adc
or
test
idiv
imul
loop,pn
dec
fidivrs
rcrb
lret
ret
cli
mov
test
pop
sahf
pop
pop
lcall
mov
pushf
sub
and
jnp
mov
aas
push
addl
xor
dec
gs
divl
ljmp
fwait
ljmp
jmp
pop
pop
pop
pop
push
ss
repnz
push
inc
imul
and
lret
repnz
imul
ret
cli
lock
in
inc
xchg
jnp
inc
jno
push
out
mov
push
cmc
sub
jge
flds
call
out
fwait
imul
out
cmc
sbb
xor
pop
fisubrs
pop
lret
mov
sub
cs
inc
dec
cmpsb
cmp
sahf
push
xchg
pop
mov
cmp
adc
pushf
or
test
pop
fwait
jge
push
jnp
jns
imul
fwait
xorb
scas
jnp
imul
dec
cmp
cmp
pop
pop
imul
cmp
pop
cli
pop
or
mov
imul
xor
imul
sub
in
pop
pop
test
sbb
repnz
clc
jp
hlt
jno
ja
es
mov
aaa
and
fsubrl
mov
stos
dec
push
xlat
outsl
cli
insb
imul
inc
out
cmp
ljmp
fidivs
mov
insb
imul
inc
mov
or
push
lcall
mov
jle
jne
lods
notl
mov
xor
jnp
pop
cmp
fildll
sarb
jb
adc
xor
inc
sbb
jbe
push
jno
in
pop
and
cmp
pop
adc
push
repnz
mov
fwait
inc
jmp
pop
xor
sub
jne
ss
jae
repnz
imul
add
adc
cmp
jno
dec
push
push
mov
cmp
push
dec
xor
mov
std
imul
push
out
add
cld
ljmp
fidivs
pop
dec
cmp
mov
jp
xchg
jae
fidivs
pushf
pop
sahf
dec
jno
lcall
sbb
mov
mov
cwtl
mov
mov
fcomps
sarl
test
fwait
lahf
mov
pop
cmp
out
fldcw
sbb
fwait
pop
imul
inc
gs
add
pop
mov
repnz
pop
inc
sbb
pop
xor
jne
test
sbb
pop
dec
adc
pop
or
ret
fidivrs
sub
les
xchg
cli
inc
cli
sarb
and
mov
xor
iret
jae
divb
ljmp
sbbb
or
loop
push
lret
pop
pop
cs
scas
loop
stos
ret
sahf
mov
xchg
dec
xchg
mov
out
scas
and
push
push
jnp
cmpb
hlt
jp
orl
ljmp
dec
aaa
xor
sbb
or
pop
xchg
dec
and
and
sbb
cli
xlat
test
sarl
adc
cs
or
sti
cmp
test
sbb
pavgb
stos
cs
and
push
imul
sub
pop
scas
pop
add
xchg
stos
dec
mov
addr16
jnp
adcl
cmpsl
rcll
pop
jp,pn
add
test
loopne
lahf
pop
int3
add
sub
mov
ret
mov
dec
pop
scas
mov
cmpsb
lods
push
lcall
mov
xlat
jo
inc
cmp
xchg
jnp
ja
jmp
int3
sarb
test
rcrb
imul
fimuls
pop
cs
pop
stos
add
cli
or
divl
jae
stos
sub
jnp
orb
xchg
jae
jnp
jle
mov
les
ljmp
stc
dec
mov
sbb
test
pushf
sub
gs
clc
hlt
mov
pop
fwait
push
adc
add
fmuls
nop
insb
fmulp
xor
sub
cmp
les
mov
sub
stc
push
sahf
jnp
mov
bound
mov
imul
in
hlt
lods
jae
test
add
sti
add
insb
out
pop
aad
sti
rorl
int
jmp
rcl
mov
adcb
mov
jecxz
test
or
cmp
jg
inc
dec
push
cmpsb
clc
ja
mov
imul
mov
xor
imul
jnp
scas
test
shr
cmp
jns
movsl
push
cmpsl
push
mov
sarl
pop
pop
cmpsl
mov
sbb
dec
adc
add
clc
psubsw
leave
ret
loop
mov
add
jae
jnp
clc
in
cli
imul
cmc
cmp
mov
dec
out
sti
add
mov
fwait
sub
mov
mov
mov
cmp
cmp
sbb
imul
xchg
cli
mov
test
mov
fstps
sbb
movsb
sarl
jnp
adc
jno
pop
mov
aad
lcall
ljmp
loop
pop
push
fmulp
stos
push
rcrb
lods
test
or
xor
divl
pop
in
and
mov
adc
pop
sti
push
push
out
or
push
ficomps
dec
jne
adc
in
sarl
adc
adc
jnp
pop
jnp
enter
mov
imul
pop
scas
pop
adc
sahf
jno
dec
out
stc
pop
aad
add
shlb
cld
xor
std
decl
xchg
push
nop
ja
mov
mov
test
mov
jmp
js
je
out
jp
jecxz
push
sbbb
mov
fistps
fidivrs
pop
mov
lods
jecxz
insb
test
les
xchg
push
xchg
jp
lea
xor
jns
sbb
add
mov
mov
sbb
ret
mov
cli
cli
push
out
xlat
jae
fstps
nop
and
lock
into
xchg
jnp
push
sub
addb
mov
or
repz
push
mov
pop
daa
adc
or
and
jae
add
sbb
ljmp
jp
pop
jp
adc
pcmpgtd
jle
sub
insb
pop
or
jnp
fisubl
cmc
imul
push
lret
cmpb
scas
or
mov
xor
ret
inc
test
ss
call
or
lret
and
hlt
cmp
cli
xor
pop
pop
out
sbb
ljmp
push
in
les
imul
jnp
mov
xchg
dec
push
push
push
fwait
int3
sub
mov
mov
or
ret
addr16
pop
lret
divb
out
pop
dec
lahf
xchg
mov
jle
loopne
jnp
cmp
push
cmp
adc
jbe
aaa
shrb
dec
imul
jl
adc
or
out
xchg
movsl
push
jnp
sub
out
mov
mov
outsb
pusha
dec
mov
sti
xchg
cli
jp
out
cwtl
jbe
xchg
mov
fdivrl
enter
pop
jae
mov
scas
xor
push
xor
sti
imul
cli
cmp
dec
mov
fwait
aam
jnp
subb
xor
jnp
pop
and
push
push
mov
sbb
imul
or
xor
mov
test
test
push
jnp
mov
ror
sbb
daa
pop
sahf
mov
or
push
mov
adc
sub
mov
mov
aam
adc
fsubrl
jae
push
jnp
or
cmp
mov
mov
inc
inc
fwait
sahf
fmuls
je
rorl
lahf
jmp
cmp
test
mov
in
shlb
inc
jnp
mov
jg
xor
insb
test
sbb
lea
sbb
and
or
xlat
mov
push
jnp
iret
xor
jg
imul
jnp
adc
mov
jnp
movl
jnp
imul
ret
jle
pop
jnp
fdivr
push
setnp
les
aad
jnp
or
stos
ljmp
movsb
cltd
stos
mov
pusha
mov
cmpl
jnp
mov
stos
in
jnp
xorl
push
imul
cmpl
clc
stos
and
push
sahf
jnp
push
pop
lahf
ret
imul
pop
fwait
sbb
out
paddsb
jbe
imul
and
mov
sub
and
jnp
mov
pop
enter
rcrl
push
push
sti
add
lods
cli
sbb
push
cli
pop
push
idiv
sbb
xchg
out
pop
pop
loop
jnp
jbe
pop
mov
xchg
pop
shl
jnp
iret
mov
pop
stos
hlt
pop
stos
xchg
mov
jnp
jbe
cmp
add
dec
imul
iret
cmpsb
mov
mov
jle
stos
pop
jnp
xchg
test
rcrb
fwait
addl
std
pop
xlat
xchg
dec
imul
pop
stos
mov
xor
jnp
add
jnp
pop
jge
lret
loopne
stos
pop
jnp
fildl
and
test
imul
sar
dec
mov
cmp
push
mov
insb
mov
les
clc
imul
in
clc
imul
jnp
repz
xchg
jae
stos
jbe
aaa
and
jnp
mov
das
mov
fwait
jnp
xchg
jnp
shrb
hlt
imul
lret
fldt
xlat
fistl
sbb
lahf
mov
movsl
das
aaa
fistpll
jge
stos
lods
pop
jae
icebp
fwait
ret
mov
out
es
cmp
hlt
jnp
mov
jae
jmp
sub
je
add
cmp
xor
fcompl
hlt
cmp
xor
jnp
fdivrl
ljmp
sub
sbb
pop
cld
out
mov
cmp
jae
or
jnp
es
std
rcr
xchg
fdivrl
fcmovb
or
jnp
sub
fisttps
jnp
push
sub
popl
popf
rcrl
sbb
es
subl
and
cmc
sub
dec
shr
sbb
sub
xor
jnp
idivl
xchg
jnp
inc
clc
cli
ret
xor
push
mov
mov
imul
ret
test
jnp
pushf
jnp
repz
cld
ficompl
mov
fdivr
inc
pushf
cli
hlt
je
jl
ret
clc
jnp
test
pop
cwtl
testl
fistpl
test
jnp
mov
rcr
cltd
xchg
stos
xchg
lahf
lods
xor
daa
or
mov
push
jns
ljmp
cld
test
adc
jae
mov
call
mov
ficomps
fwait
sti
mov
or
jnp
loopne
mov
push
cs
jnp
sbb
fldt
fwait
push
xchg
jle
pusha
xlat
sub
shl
mov
aam
imul
cmp
cmpsl
pop
or
aas
sub
mov
xchg
cmp
dec
dec
jnp
mov
cmpl
jnp
fistps
push
lahf
mov
mov
call
mov
or
push
sub
imul
sub
sub
fwait
aad
push
jb
hlt
incl
aas
jnp
insb
and
sub
mov
pop
inc
pop
repnz
inc
inc
jnp
insb
xor
inc
fwait
lcall
and
sbb
push
or
ja
ret
das
addb
aas
jae
cmp
imul
pop
inc
call
sti
test
jnp
shl
xor
inc
mov
add
jae
je
jne
popa
lret
and
or
dec
pushf
jnp
inc
or
insb
dec
mov
lahf
sbb
cmpsl
aas
jnp
xor
std
pop
lcall
pop
rcr
jp
or
ljmp
aam
aaa
fcmovbe
cmp
cli
mov
adc
lahf
xchg
xchg
roll
add
ja
cmp
movsb
mov
xchg
aad
js
push
stos
mov
ss
sub
in
sub
and
xchg
jnp
mov
aam
ljmp
or
mov
std
push
pop
data16
add
cmp
jnp
add
add
xchg
mov
jmp
mov
aas
jmp
jg
cmp
test
push
out
data16
test
jnp
push
cmpsb
jnp
sbb
push
xchg
daa
ficomps
or
cmp
inc
xor
pop
mov
movsb
add
sub
xor
out
jnp
cmp
adc
pop
ret
dec
adc
and
jnp
inc
or
fwait
and
dec
mov
cmp
or
and
lea
lahf
xlat
push
pop
xchg
das
ljmp
jnp
pop
mull
int
out
pop
iret
pusha
lret
pop
aad
jae
jnp
jno
cmpl
out
pop
in
lods
stc
sub
jae
mov
cmp
inc
jae
dec
mov
or
imul
out
into
das
or
push
fbld
xor
and
dec
inc
pop
fwait
pop
adc
jmp
adc
lcall
je
data16
jae
fcompl
std
in
sbb
call
or
cltd
jo
jae
insb
incl
les
ficompl
push
sub
incl
pop
iret
dec
cltd
sub
cmp
cmp
sub
mov
roll
fldl2t
cli
adc
rorl
loopne
inc
sti
ds
jl
andl
ja
bound
mov
jge
cli
fwait
bound
mov
cli
dec
jne
jl
mov
adc
mov
subb
cmp
mov
cmp
std
lock
pop
xor
jle
cmp
clc
lock
f2xm1
add
add
and
pop
jle
insl
adc
insl
jle
outsb
insl
jle
insl
add
lods
inc
mov
cmp
pop
cmp
pop
cmp
cmp
xor
insb
ds
call
xor
insb
jle
xlat
adc
fsubr
cli
aam
mov
xor
and
jp
mov
fcoms
xor
cli
fiadds
dec
sub
ret
fwait
cmp
xor
xlat
cmp
in
hlt
cld
in
icebp
xor
or
outsl
jns
cmp
adc
and
rol
mov
daa
addr16
push
jae
or
lahf
int3
stos
push
jmp
jae
je
add
xchg
into
dec
stc
outsl
xorl
xor
add
sub
pushf
shr
addr16
jae
mov
int3
xor
sti
fiaddl
ja
clc
mov
push
push
jae
mov
xchg
push
ss
inc
gs
fwait
lahf
ret
hlt
sti
pop
jl
pop
mov
jno
xlat
stc
dec
pop
pop
gs
push
dec
jae
mov
cwtl
and
xchg
jl
mov
sbb
cmpsl
pop
ficomps
mov
dec
je
dec
xor
mov
out
jae
xor
add
idivb
mov
ficompl
hlt
sub
sar
push
scas
sarb
jae
imul
cmp
lret
mov
mov
mov
shlb
das
fwait
dec
cmp
iret
mov
jl
jmp
and
jo
mov
jae
stc
stc
or
jae
ret
push
dec
xlat
xor
adc
jns
or
jl
sub
lods
xlat
dec
mov
mov
or
jne
aaa
test
imul
out
inc
cwtl
pop
xchg
int3
push
repz
and
mov
push
mov
out
lods
push
mov
push
jae
mov
repz
jl
sti
fwait
mov
inc
dec
push
pop
int3
pop
add
push
repnz
mov
divl
insb
mov
mov
jl
dec
stc
sbbb
test
lret
jg
aas
pop
pushf
movsl
push
sbb
adc
addr16
mov
xchg
jns
lret
jae
dec
mov
mov
stos
lahf
sti
and
pushf
mov
mov
push
and
cltd
repnz
push
mov
mov
jns
cwtl
cmp
fwait
pop
and
in
or
or
jae
pop
mov
jmp
fimuls
push
ljmp
add
xor
decb
js
daa
or
sub
inc
pop
pop
add
cmp
hlt
lods
pop
jns
mov
xor
xchg
fldt
out
jne
mov
cmp
popf
adc
imul
ss
ljmp
xor
sbb
out
imul
ret
sub
add
aam
push
push
imul
and
and
dec
pop
in
sbb
aam
push
push
pop
testb
cli
cmpsb
bswap
inc
dec
lods
or
adc
mov
pusha
test
jl
repz
xchg
xor
shr
adc
sbb
mov
sbb
mov
push
jl
mov
dec
cmpxchg
es
arpl
insb
xchg
pop
cli
pusha
jns
dec
popa
cli
aas
dec
shlb
sub
in
adc
sbb
jmp
cmp
orb
and
or
sarb
mov
adc
pop
pop
jmp
pop
mov
pop
jl
pop
mov
or
decb
cmp
adc
fcompl
cmp
iret
cmp
jo
mov
mov
mov
test
xorb
sbbl
adc
testb
mov
cmp
add
pop
sub
pop
in
js
pop
in
ret
mov
jl
jno
adc
faddl
icebp
mov
insb
sbb
lock
loopne
adc
sahf
ret
sub
mov
imul
sub
insl
fmulp
and
xor
dec
fwait
cs
sarb
pop
shr
mov
movsb
icebp
arpl
mov
mov
insl
ja
pop
ja
cmp
pop
das
sbb
imul
sbb
imul
ja
lret
mov
lcall
sbb
jl
dec
push
dec
pop
cmp
and
js
or
jmp
cmp
lcall
aam
cltd
std
jno
jmp
and
pop
test
cmp
add
insb
in
push
lods
les
sbb
movsb
std
cli
xchg
loope
test
pop
js
pop
sbb
pop
push
jns
inc
repnz
cmp
sbb
ljmp
mov
sub
test
mov
jmp
sarb
addr16
sbb
iret
mov
cmp
push
mov
jge
rolb
and
je
sub
sahf
pop
add
xorl
jae
bound
aam
outsl
les
dec
test
cmp
aad
lods
jo
cld
lods
pusha
mov
push
jno
push
cmp
repnz
mov
dec
fsubrp
jg
leave
jg
jmp
stc
lcall
push
cmp
test
das
jne
aaa
call
jmp
shll
dec
xchg
cmp
sahf
fsubr
push
or
ljmp
pop
sbb
mov
pop
or
call
push
insb
pop
enter
sub
lods
adc
pushf
stc
pop
daa
scas
jecxz
stos
fistps
fucomi
mov
and
jmp
je
notb
push
out
ja
rorb
cmc
pop
aaa
dec
jae
stc
stc
mov
xor
jp
lods
push
pop
lret
inc
aas
or
push
jne
push
add
add
sbb
cmp
daa
lret
add
ret
jl
subl
fcoms
jbe
cmp
pop
pop
sub
sbbl
sub
cld
cmp
mov
sub
fsubl
dec
int3
dec
sbb
shlb
xchg
mov
out
addr16
insb
xchg
mov
imul
pusha
insl
sti
mov
popa
cmp
mov
xchg
xchg
dec
outsb
ficoms
pop
hlt
mov
dec
jne
mov
and
fadd
repz
cld
mov
imul
imul
jne
jno
dec
popf
fwait
sub
inc
loop
push
xor
pop
pop
and
pop
lret
lock
cmp
pop
sub
inc
jl
fistps
insb
inc
jg
int3
cmpb
popf
cli
imul
mov
push
xchg
ret
jle
jno
bound
dec
cmp
sub
mov
jmp
lods
lods
imul
jnp
out
sti
push
mov
decb
addr16
dec
out
arpl
pop
cli
and
dec
adc
cmp
test
in
ja
data16
ja
fsub
jne
adc
sbb
pop
decb
mov
dec
cmp
mov
mov
pop
mov
jb
jl
loope
pushf
int3
sbb
mov
jnp
ds
insb
push
and
fnstenv
outsb
psrlq
pop
push
in
inc
sub
pop
mov
or
dec
cli
jbe
cmp
cli
sub
jmp
sub
lods
test
in
mov
cmc
loopne
js
sbb
popf
cmp
sbb
ret
dec
pop
xchg
int
nop
mov
lods
xchg
mov
stos
orb
pushf
dec
jns
loopne
dec
in
jns
testl
insb
cmp
mov
in
lret
imul
pop
push
cwtl
ja
inc
xor
mov
clc
push
push
xchg
int3
mov
dec
and
imul
add
lret
pop
push
mov
sti
jmp
mov
add
test
js
movsb
loope
mov
cmpsb
pushf
lds
cwtl
jne
cld
sete
cltd
jle
das
sbb
cmp
lods
shlb
pop
stos
jp
insb
jne
pop
aam
imul
dec
push
lcall
mov
pop
sets
mov
cmp
jp
out
stos
sti
imul
push
add
jecxz
or
add
fld
mov
lods
mov
in
cmc
pop
test
stc
or
fs
ljmp
jns
cmpsl
ljmp
lea
mov
push
movsl
clc
cmp
lods
jle
jno
mov
std
mov
rclb
inc
fistpl
lods
jl
mov
fistps
dec
jmp
xchg
mov
cmp
sbb
dec
dec
daa
mov
jl
mov
cmc
or
ljmp
mov
mov
jae
pop
add
pop
jp
fistpll
js
xchg
mov
scas
aaa
fwait
mov
ja
mov
jmp
cmpsl
lahf
mov
cmp
inc
es
mov
sub
pop
idivl
mov
cli
jae
mov
xor
scas
jns
xor
into
add
adcl
fwait
mov
mov
sub
dec
pop
dec
iret
cltd
mov
lahf
hlt
imul
lahf
xor
lret
or
cmp
pop
idiv
aas
add
dec
push
adc
lods
notb
mov
xchg
and
cmp
jnp
sub
dec
and
or
sti
xor
jne
pop
clc
mov
leave
sbb
lret
pop
or
mov
scas
pop
mov
pushf
mov
popw
test
push
fldt
ds
nop
test
fsubl
sbb
popf
jns
xor
ja
jnp
out
bound
out
imul
push
jns
add
sub
sub
sbb
pop
cld
out
mov
aam
jns
les
xor
jg
jmp
pusha
jl
lret
pop
push
dec
pop
dec
ds
aas
adc
into
in
push
sti
inc
pusha
sub
jnp
mov
jae
imul
jl
jecxz
mov
cmp
xchg
push
cmp
jp
push
clc
jl
adcl
scas
aaa
xor
adc
mov
imul
xchg
sub
jp
mov
jns
fidivrs
push
xor
jl
jns
mov
dec
push
mov
pushf
cli
jl
pop
push
insl
push
pop
insb
int3
sub
jl
pop
mov
stos
pop
enter
jnp
les
js
sub
mov
out
mov
mov
jo
cltd
enter
fs
or
push
mov
jnp
iret
jnp
sub
cmp
adcl
pop
das
pop
mov
dec
jns
cli
jl
fbstp
xchg
push
ljmp
test
jl
jp
push
inc
inc
inc
jl
push
jmp
xchg
cmp
sbbb
dec
pop
pusha
cmp
jne
pause
inc
jl
test
cwtl
or
xchg
jns
push
xlat
push
jl
test
out
fdivr
push
pop
jp
loop
sub
push
pop
enter
sarb
data16
fidivs
jp
into
jl
ret
xor
jns
je
xchg
inc
sarl
pop
push
icebp
mov
call
sbb
lret
mov
and
push
enter
icebp
jns
jl
xor
mov
ds
insb
pop
mov
or
imul
fwait
fwait
mov
fisubs
ficomps
aas
lret
push
sbb
sbb
sahf
adc
aas
push
jb
lcall
lock
fwait
xchg
jl
jl
mov
fdivrs
lods
dec
call
sbb
dec
jmp
sti
out
scas
ret
add
add
pop
mov
push
sti
mov
add
cmpl
lret
jno
fstpt
jno
pop
hlt
cmp
push
mov
fisttps
xorl
add
aas
and
insb
xchg
jl
mov
dec
cmp
imul
pop
pop
jno
jne
loop
in
adc
call
dec
scas
lahf
cmpsl
adc
jp
pop
and
push
insb
out
mov
xchg
dec
cmp
sub
mov
cltd
xor
cmpsl
outsl
stos
jge
dec
out
or
sub
push
cmp
push
mov
dec
push
adc
mov
jmp
jb
add
jl
adc
xor
jmp
stos
aaa
dec
and
dec
cs
rclb
adc
lea
mov
pop
pop
fistpl
mov
fcompl
xchg
fwait
push
pop
decb
fwait
and
cmp
mov
dec
mov
lods
test
cmp
pop
jg
mov
jo
aaa
mov
lock
int
jns
sub
mov
sub
mov
cli
lods
sbb
std
inc
adc
pushf
lcall
xchg
pop
jl
sub
cld
or
lret
jmp
in
pop
push
mov
adc
cmp
push
sbb
cmp
xchg
or
lahf
mov
cmpl
jnp
mov
sbb
sti
jae
sti
or
xchg
sbb
insl
jmp
lods
pop
fdivl
jl
mov
mov
add
push
cmp
mov
xchg
push
jae
cmp
xchg
or
test
in
test
and
cmp
pop
decb
ds
jl
je
ja
adc
add
ss
jne
pop
jns
ja
pop
jle
fwait
jle
mov
jge
testb
pop
push
mov
xor
cwtl
repz
cli
jmp
sub
sbb
xchg
fsubrl
pop
inc
cmp
daa
leave
xor
mov
mov
jl
aam
jmp
imul
mov
test
jmp
or
stos
and
pushf
xor
jne
pop
or
jae
outsb
xchg
xchg
sub
jns
fucomip
sub
cld
adc
sbb
pop
mov
jmp
ljmp
fwait
cmc
adcl
or
dec
add
or
aam
ficomps
es
sub
mov
inc
cmp
mov
xor
push
jns
fistpll
sbb
xor
out
nop
mov
imul
mov
lods
push
shrl
imul
cmp
lret
xor
cmp
pop
sub
andb
shll
mov
test
push
mov
jmp
sub
mov
shrl
lret
aam
jl
sbb
das
rep
cmp
cld
repz
xchg
sbb
push
xchg
out
jp
fnsave
jne
lret
mov
mov
pushf
flds
jae
pop
insb
pop
in
or
lret
sbb
orl
cltd
sub
mov
and
pop
stos
inc
jp
xor
sub
and
pop
call
into
pop
int3
push
adc
mov
sub
iret
mov
mov
lods
aas
sub
rcrl
popa
cs
out
imul
inc
jno
enter
xchg
push
test
xchg
pop
insb
js
mov
add
cmp
xlat
jl
divb
fisubl
clc
mov
xchg
sbb
xor
dec
pop
push
in
adc
rorb
dec
mov
jns
loop
mov
add
mov
pop
jge
leave
hlt
jb
cmp
les
xchg
in
cmpb
jno
cmp
mov
sar
imul
das
mov
fidivrl
dec
cli
push
daa
test
pushf
pop
xor
or
or
jnp
sub
sbb
push
add
rcr
popf
pop
jmp
andb
jno
mov
call
int3
adc
je
std
js
adc
sti
cwtl
imul
inc
jns
xchg
inc
sub
and
inc
cmp
aaa
addr16
out
ljmp
adc
and
cmp
das
aam
sub
xor
nop
hlt
jmp
pop
push
jp
mov
push
fs
insb
jmp
ds
outsl
sub
push
mov
mov
aaa
or
std
or
mov
test
fwait
push
fisubrl
lcall
sbb
mov
pop
in
jns
ds
enter
ret
pop
js
mov
cli
imul
mov
xchg
pop
xchg
je
js
jo
mov
jns
push
mov
xor
jnp
icebp
pop
jae
dec
dec
ljmp
sbb
rol
negb
dec
daa
sbb
jp
out
sbb
dec
xchg
leave
stos
nop
mov
sub
jo
rorl
push
imul
mov
je
mov
dec
arpl
push
inc
jns
fimull
das
outsl
cmp
lock
pop
daa
in
sbb
outsl
pop
movsb
flds
adc
push
jns
lret
mov
inc
loopne
push
dec
mov
shlb
mov
jns
test
pop
lret
out
add
mov
fdiv
lock
mov
test
mov
jns
mov
mov
sbb
pop
xor
push
dec
ljmp
decb
imul
in
jns
imul
jl
ljmp
sub
jns
int
mov
add
notb
das
ja
loope
nop
inc
pop
out
test
out
push
jge
fsubl
xchg
mov
mov
push
orl
stc
cmp
aam
xor
dec
mov
jnp
pop
jns
jbe
add
mov
pop
pop
add
and
jns
push
mov
lret
js
xadd
jnp
outsb
sbb
jnp
nop
dec
imul
rol
lods
lret
stos
xchg
dec
je
ds
or
testb
mov
adc
repz
mov
sbb
cmp
jns
lods
adc
sub
push
jns
iret
jno
pop
sub
gs
pop
lea
insl
lret
outsl
sbb
sub
gs
mov
dec
jns
sbbl
cltd
cmp
into
jnp
daa
pop
jnp
sti
sbb
add
pop
and
or
cli
es
mov
iret
sti
xor
sbb
jns
pop
fistpl
rcl
sarb
shll
clc
out
xchg
jnp
out
add
and
inc
inc
jnp
stos
cli
lods
and
lods
jle
fstpt
add
mov
sbb
jns
mov
pushf
addl
or
lret
mov
cltd
adc
cmp
mov
ds
mov
mov
lods
jnp
insb
jns
mov
lret
je
push
mov
mov
je
cwtl
popf
dec
fsubl
fidivrs
stos
mov
sbb
fwait
jmp
pop
notl
pop
ret
jp
jne
pusha
imul
mov
aaa
sub
mov
fwait
mov
xor
das
sub
cmp
ljmp
testl
aas
lods
inc
pop
pop
subb
ljmp
lret
stos
xor
imul
aad
sbb
xchg
sub
jnp
jns
ret
jnp
push
cli
push
lret
inc
xor
push
imul
cmp
lahf
shrl
jl
pusha
jae
pop
int3
loop
mov
xchg
jbe
push
mov
cmp
sub
or
movsl
mov
mov
fidivrs
inc
or
sti
imul
mov
cwtl
xchg
nop
xchg
sbb
jbe
imul
loopne
jl
rcll
dec
add
call
imul
aas
and
nop
ljmp
outsl
je
mov
sbb
insb
ds
rorl
lds
stos
add
xlat
push
pop
or
dec
ja
stc
repz
lods
int3
js
pop
fistpl
pop
push
adc
mov
inc
lret
xor
pop
call
jle
dec
and
push
cmc
fs
pop
sti
pusha
jbe
jle
sub
pop
stc
fwait
ret
fmul
dec
jno
jmp
jl
cmp
stos
sub
jl
or
shl
ss
jbe
sbb
cwtl
in
lock
xchg
sub
loopne
push
mov
cld
pop
pushl
nop
jp
jp
or
nop
pop
jg
jb
popf
sbb
rcrb
imul
lret
sbbb
jo
jp
fs
repz
stos
ljmp
or
in
push
cld
int3
fsubs
mov
push
stos
lahf
mov
jns
jle
popa
inc
jmp
das
out
or
jmp
jl
and
and
xlat
inc
inc
mov
stc
lret
in
cld
lret
shll
push
mov
and
mov
negl
lret
mov
ret
mov
fcomi
push
mov
inc
clc
lcall
shl
mov
pop
ja
push
adc
xor
add
icebp
push
mov
cmp
cltd
jmp
xor
adc
cmp
lds
mov
mov
rep
jp
stos
push
in
inc
xor
imul
jns
stos
popf
cvtps2pi
dec
sbb
lret
out
cmp
or
jne
stc
pop
mov
cld
es
int3
jp
fnstcw
jmp
sbb
cmp
jbe
push
ljmp
cmpsl
mov
ret
push
cmp
mov
movsl
mov
cmc
pop
xchg
push
jmp
out
imul
fs
cmp
and
in
push
xor
lcall
fisubs
lret
xor
loopne
pop
jns
fistl
jns
ljmp
ja
mov
loop
cmpsb
jbe
nop
pop
push
pop
xlat
and
popa
mov
ja
xchg
in
jecxz
arpl
push
mov
vpunpckhqdq
addr16
ja
stc
in
arpl
scas
sbb
stc
cmc
scas
dec
cmc
icebp
in
leave
mov
ja
mov
mov
cli
pop
xchg
xchg
scas
nop
negl
sub
push
fwait
xor
sahf
push
and
jns
pop
lahf
clc
int
imul
fldl
push
outsl
lcall
fsubs
jmp
mov
or
out
std
pop
jb
scas
mov
jg
outsl
or
pop
sbb
stos
sbb
leave
dec
jle
pop
jae
cmpsb
and
sbbl
cmpsb
mov
sbb
imul
push
push
imul
insb
aad
jnp
dec
cmp
mul
inc
cmp
dec
repnz
addr16
mov
sahf
ficompl
xchg
and
jecxz
cmp
pop
out
js
je
pop
arpl
mov
aas
bound
dec
dec
cs
jbe
lock
aad
cmp
cmp
ljmp
pop
jmp
aaa
pop
aam
lods
mov
aam
test
jo
mov
das
fs
cli
fcmovb
call
push
inc
insb
ljmp
clc
pop
fwait
je
clc
inc
outsb
imul
std
cmpsl
ljmp
mov
pop
mov
sbb
nop
xchg
pop
je
lock
mov
push
dec
arpl
aaa
insl
sbb
push
rclb
test
je
jp
jae
fs
leave
test
pop
push
bound
ljmp
mov
popf
mov
push
jl
outsl
or
in
mov
repz
mov
int
pushf
jge
sahf
aam
arpl
jne
cwtl
xchg
jl
icebp
sti
lods
mov
and
cli
pop
pusha
jp
inc
jne
jae
imul
mov
jae
imul
mov
jp
out
xor
pop
lcall
out
jae
imul
inc
cmp
and
mov
out
push
cmp
imul
xchg
jae
imul
xchg
jbe
cmp
cs
pop
push
inc
cmp
pop
das
mov
cmp
cmp
mov
and
lods
jae
es
clc
adc
push
pop
fidivrs
mov
pop
and
lods
imul
jge
or
imul
cmp
enter
mov
dec
or
out
arpl
mov
sub
jne
jae
imul
pop
cmp
mov
mov
jp
out
imul
shlb
jae
imul
sub
cmp
jp
out
sarl
adc
into
pop
mov
pop
adc
inc
cli
je
movsb
aam
add
xor
popa
pop
xchg
cmp
cli
icebp
jp
push
jne
jae
imul
adc
inc
pop
jg
mov
push
call
sub
jbe
xchg
imul
cli
and
pop
mov
or
mov
repnz
jnp
jo
cmp
push
or
test
pop
fmuls
lahf
sarb
inc
cli
outsb
push
or
mov
xchg
movsl
repz
in
jge
push
pop
int
mov
insb
out
xchg
ja
loopne
add
jg
stos
adc
or
mov
jnp
and
scas
jnp
dec
mov
pop
add
roll
xchg
and
cmp
pop
ret
loope
add
out
fs
push
and
jmp
sarl
inc
out
mov
mov
jmp
fwait
jnp
idivl
xchg
inc
or
cltd
mov
sahf
add
test
loope
or
scas
in
sub
fs
push
lods
jecxz
adc
pop
jnp
or
fdivrp
jo
jbe
mov
push
nop
movsb
lds
add
mov
jnp
add
xor
out
pop
lcall
lcall
mov
push
jmp
lahf
mov
or
or
xchg
fwait
push
add
jae
out
test
pop
filds
mov
dec
jnp
sub
mov
fisttpll
imul
in
in
cmp
ret
lret
cwtl
or
andb
es
dec
in
or
ja
movsl
lret
jb
jnp
add
mov
mov
push
test
jns
mov
rolb
incl
dec
jnp
mov
into
subl
mov
jl
dec
push
pop
push
sbb
insl
add
lret
scas
cmc
fcoml
ja
ret
push
ds
mov
aas
sti
inc
mov
mov
mov
cmp
push
xchg
cmp
mov
cmp
pushf
ss
mov
lret
inc
jnp
imul
pushf
lods
jnp
dec
jne
adc
xlat
jnp
fiadds
outsl
dec
xchg
sub
test
mov
cli
mov
add
daa
push
es
sub
jb
rorb
mov
js
push
pusha
jnp
enter
adc
dec
sbb
call
push
outsl
dec
mov
cs
mov
jns
in
imul
test
jmp
cmc
popl
inc
lret
mov
jge
jnp
pop
mov
lea
add
std
jg
pop
adc
lds
in
dec
jnp
movsb
out
mov
dec
ds
mov
sub
cwtl
lods
fistpll
icebp
push
das
lcall
xor
nop
jns
pop
push
aad
jnp
mov
jae
cmp
dec
hlt
ret
cmp
mov
jb
mov
idivb
push
xor
sub
pop
ja
jo
fsubl
testb
clc
push
xor
sub
fcoml
pop
jmp
es
push
xchg
jnp
or
ja
dec
and
pminsw
dec
or
imul
add
mov
inc
push
dec
dec
hlt
mov
bound
pop
xor
or
test
fwait
arpl
push
fsubrs
mov
lods
cs
in
rol
jnp
fisubl
arpl
jae
sti
sub
negb
imul
je
jae
cmp
fstpt
lcall
cmpb
mov
mov
addr16
jge
aas
xor
hlt
daa
or
add
mov
pop
idivb
xor
inc
cli
cmpsb
in
jae
addr16
imul
cs
or
int
cmp
and
movsb
loopne
jle
movb
imul
lods
and
sub
ljmp
cs
pusha
mov
insb
or
jl
mov
mov
ja
jnp
fdivl
xchg
xor
fdivrl
ljmp
xchg
jo
fcoms
and
jae
es
jae
mov
mov
outsl
cmp
lcall
loope
cld
pop
xor
sti
ja
ljmp
or
arpl
pop
shlb
cli
push
and
inc
loopne
cmp
les
dec
fwait
mov
push
ljmp
out
pop
mov
cmp
cmp
scas
sub
sbb
dec
leave
mov
fisubl
fwait
pop
mov
aaa
mov
ss
sbb
je
movsb
pop
addl
ja
outsl
outsl
decl
mov
cmc
pop
andl
das
popa
testb
ret
cmpsb
bnd
popf
jns
cmp
push
out
and
nopl
mov
bound
in
imul
and
dec
push
pop
repz
dec
pop
ret
inc
xor
or
mov
out
sub
pop
jae
ds
sbb
mov
xor
cmpsl
arpl
outsl
aad
imul
sub
stc
ja
lret
xchg
and
sbb
sub
repnz
lea
cld
arpl
aam
pop
int3
addr16
ja
pop
xor
pop
pop
xor
test
jae
sbb
sahf
xchg
xchg
xor
mov
arpl
xor
sub
pop
out
jb
js
xor
mov
in
xchg
and
push
adc
loop
push
fcmovbe
sarb
mov
jnp
push
bound
push
push
jnp
sub
adc
jmp
aad
pushf
jnp
movsl
mov
insl
imul
push
xor
jnp
sub
sbb
adc
jnp
in
call
aam
mov
lods
test
xorb
and
loop
pop
sub
das
sub
and
jnp
pop
adc
repz
jmp
jnp
xlat
shll
cmpsl
mov
push
sbb
adc
jae
adc
cmp
jbe
pop
pop
cmpsb
pop
loop
and
popf
divb
cmp
jnp
xor
pop
cmc
mov
repnz
jb
jp
push
imul
xor
ja
stos
mul
mov
cmovbe
dec
pop
repz
adc
pop
adc
sbb
sub
jnp
rolb
loope
adc
popf
test
mov
ja
out
cmp
sarb
jae
adc
add
in
sub
rcll
ds
pop
cli
push
mov
lea
jp
js
ljmp
daa
stc
push
add
movsb
bound
xchg
mov
jl
dec
sarb
mov
sub
xchg
pop
sub
das
or
fisubl
dec
mov
fistpl
in
lcall
cmp
cli
cwtl
ljmp
adc
mov
arpl
aam
cmp
repnz
adc
mov
cltd
xor
jle
aaa
jnp
aad
push
rcrb
xchg
jae
or
aam
jns
sub
adc
mov
jge
mov
xorb
mov
iret
jnp
push
movsl
int
sbb
roll
loop
mov
jae
in
les
or
mov
fdiv
mov
jnp
sbb
ljmp
mov
or
add
pushf
jns
int
popf
mov
shll
xor
sbb
xor
repz
data16
pop
ja
pop
fwait
neg
inc
dec
jnp
cmp
int3
mov
shlb
in
xchg
inc
data16
movsb
mov
xchg
lds
push
mov
mov
ljmp
jge
mov
testl
xchg
xchg
lahf
jnp
xor
fnstsw
adc
shll
adc
fld
xor
xor
jmp
pop
dec
mov
or
or
sbb
push
shrb
outsb
inc
push
in
jnp
sub
movl
cmp
sbb
ret
jnp
cmp
out
cmpb
cmp
ret
inc
and
adc
pop
jae
fnstenv
ds
imul
dec
jns,pn
push
vpaddusw
in
mov
adc
push
mov
int3
or
push
pop
sbb
repz
int
into
clc
sti
push
pop
fadds
pushf
inc
pop
stc
jge
scas
rorl
mov
add
sti
cmpb
test
sbb
jge
sub
dec
insl
mov
push
dec
push
xchg
cmp
sbb
fistpll
jno
jnp
xor
push
sub
sub
and
adc
pusha
aad
daa
adc
mov
jnp
mov
das
jecxz
jnp
mov
pop
hlt
jnp
dec
mov
sti
pop
fs
shld
add
iret
pop
outsb
pop
jl
pop
sti
mov
jnp
add
les
dec
mov
push
dec
ret
mov
pop
cld
xchg
mov
stos
or
repz
shlb
dec
cltd
xor
xchg
imul
mulb
mov
nop
popf
dec
std
jns
adc
clc
in
ja
ljmp
dec
idivb
and
add
push
iret
mov
sub
orb
xchg
fisttpl
out
lret
stc
lret
pop
push
mov
pop
in
or
aad
insb
sahf
jp
adc
fwait
mov
das
cmp
and
pop
sub
cmp
sti
lods
push
pusha
add
jne
jo
pop
pop
cmp
or
repnz
outsb
repz
jns
js
arpl
fiaddl
sarl
adc
arpl
xchg
sub
mov
dec
ret
movsb
mov
xchg
adc
xorl
pop
ss
jmp
xor
mov
jmp
mov
inc
data16
sbb
dec
mov
ja
stos
das
jo
cwtl
sbb
nop
in
xor
dec
inc
mov
jle
pop
dec
jp
bound
push
stc
fsqrt
insb
pop
adc
rcrb
je
in
sub
xor
push
rclb
or
out
push
pop
dec
pop
mov
adc
adc
mov
dec
imul
and
pop
clc
mov
adc
pop
pop
dec
cmpsb
and
cmp
cli
add
sbb
cmp
sub
out
movsl
xchg
insl
sbb
add
outsl
adc
shr
mov
cmpsb
in
les
mov
push
sub
dec
clc
imul
dec
xchg
mov
das
loopne
inc
out
jbe
fisubs
repz
aad
push
cmpsb
add
mov
adc
vpcomq
icebp
mov
sbb
mov
add
or
adcb
jns
enter
jecxz
mov
pop
cs
loop
pushf
sbb
jmp
outsl
push
call
xor
stos
pop
jnp
jb
cld
jbe
ja
int3
cwtl
lods
aad
ja
adc
dec
push
inc
imul
adc
std
sbb
es
aad
or
mov
stc
dec
outsl
mov
sub
xor
std
mov
add
jnp
ficoms
pop
repnz
data16
sbb
andl
jle
pop
dec
cmp
cmp
mov
xor
mov
cmp
jns
roll
inc
dec
inc
pop
and
cmp
dec
repz
cmc
pop
jp
mov
inc
mov
xchg
push
repz
aad
pop
cmp
in
push
mov
jae
cmc
cli
or
mov
lea
je
and
repnz
notl
mov
repnz
sbb
scas
mov
imul
xor
pop
jg
sub
roll
push
je
stos
jns
pop
outsl
cmpsb
pop
dec
or
vpaddb
jne
jl
push
test
dec
sub
inc
mov
and
cmp
imul
outsb
addr16
pop
inc
jmp
jmp
dec
xor
push
adc
in
sub
cmp
cwtl
ja
lock
jp
push
inc
mov
inc
cmp
idivb
cmp
push
ja
pop
mov
divl
mov
test
shlb
jge
sti
movsb
sub
adc
inc
cmp
inc
mov
movl
jo
lea
insb
push
lea
cmc
pop
cli
inc
jmp
cmp
mov
or
adc
fidivl
pop
mov
adc
push
lds
dec
xor
cmp
ja
push
jl
add
mov
fimuls
shrl
fistpll
fwait
and
pop
add
push
jb
pop
mov
add
test
pop
cli
pop
add
or
push
jnp
fwait
and
dec
in
cs
orb
push
mov
mov
jp
adc
test
test
fs
lock
sbb
xor
pop
divb
outsl
cmp
mov
cli
in
repnz
mov
mov
daa
pushf
pop
mov
xchg
cli
mov
adc
sbb
cmp
outsb
pop
repnz
mov
insb
adc
pop
fcoms
scas
cmc
ror
jne
xchg
pusha
sahf
cmp
hlt
mov
pusha
jl
cmp
dec
add
fs
out
push
loopne
pop
add
pop
addr16
xchg
jae
es
push
ljmp
mov
xlat
mov
mov
cmc
test
je
ja,pn
ret
fldcw
cmp
fwait
cld
cmp
out
loop
xchg
stc
and
je
cwtl
shrl
jl
jmp
cmp
sub
addr16
lods
and
loop
cmp
into
pop
ficoml
mov
cmp
stos
imul
adc
and
lret
sub
jl
fstp
or
or
ret
dec
rol
call
rcr
shl
mov
sahf
popa
pop
jo
mov
dec
mov
ror
xchg
scas
sbb
aaa
aam
jmp
pushf
call
scas
stos
imul
push
ja
mov
inc
repnz
mov
mov
pop
xor
jmp
loop
pop
xchg
push
cmc
data16
lret
inc
and
les
loope
sub
cmp
test
out
mov
jae
out
cmc
jae
outsl
in
call
mov
bound
xlat
loope
cmp
pop
mov
mov
negl
movsb
push
cli
or
jmp
lock
pop
repnz
outsl
xor
inc
jp
insb
in
jb
pop
sahf
in
aad
mov
push
cmpsb
add
xorl
in
bound
or
out
or
bound
test
mov
jno
push
jnp
and
movsl
dec
inc
dec
sub
repz
mov
mov
push
pop
aam
sahf
imul
in
or
jnp
fstp
xlat
xchg
xor
fwait
lods
jbe
outsb
add
xchg
mov
and
or
pop
shll
jnp
rolb
add
mulb
mov
dec
lds
je
into
sti
ret
cmc
fs
mov
pop
add
mov
jnp
push
pop
stos
mov
ja
mov
adc
pop
xchg
ret
lret
jnp
cmp
and
dec
and
mov
push
inc
lock
stc
test
jecxz
mov
movl
idivb
xchg
fwait
lea
cmp
aad
ljmp
call
out
daa
cwtl
adc
inc
mov
jnp
or
popf
mov
xchg
and
add
mov
loopne
popf
dec
cmp
ret
jnp
push
and
cmp
pushf
or
pop
xor
inc
cmp
pop
mov
inc
mov
sbb
ljmp
insb
xchg
jae
add
arpl
test
into
lds
adc
cvtps2pi
pop
dec
cld
jo
push
lods
jae
or
jp
mov
jnp
out
imul
add
inc
test
adc
xor
sahf
jbe
mov
cli
mov
lret
int3
ret
mov
xor
cmp
or
inc
test
scas
dec
test
or
nop
cmpl
pop
add
aam
outsb
jnp
les
loop
mov
jnp
and
lods
std
outsl
xor
adc
nop
in
push
inc
sbb
jnp
and
pop
mov
dec
jbe
sbb
mov
bound
pop
jnp
mov
mov
xor
adc
jnp
mov
repnz
pop
push
adc
xor
out
inc
cmc
or
and
push
cmpl
stc
xchg
pusha
imul
cmpsb
jnp
adc
lret
sahf
mov
punpckhdq
jnp
xchg
or
sub
push
pop
xor
mov
mov
jnp
sub
mov
adc
pop
aad
xchg
aam
xchg
ja
es
or
inc
xor
test
mov
jnp
aas
or
jecxz
lcall
pop
lods
outsb
push
es
add
movsl
ja
loop
repz
or
jnp
pop
test
jnp
icebp
and
stc
jnp
lods
shll
cmp
das
pop
test
mov
test
into
jnp
and
ret
xor
mov
or
imull
or
jl
mov
loopne
xorb
push
iret
jnp
leave
ret
ja
daa
push
pop
mov
sti
lret
xchg
loopne
sarl
push
sbb
xor
mov
and
cli
xchg
add
sarb
mov
daa
mov
sub
imull
adc
pop
outsl
stos
or
sub
pop
out
cld
jnp
sbb
dec
xor
lock
mov
into
jl
in
test
push
mov
xchg
lds
jnp
xor
rclb
cwtl
and
inc
insl
gs
push
fwait
dec
mov
mov
or
inc
mov
jnp
sbb
cmc
mov
lret
lods
popl
fs
inc
jbe
jp
sbb
or
jnp
out
pop
cltd
ret
lock
jae
ret
lcall
xchg
xchg
mov
jno
rolb
hlt
push
add
cs
cmpsb
cmp
jge
std
jo
cli
fwait
out
push
addr16
outsl
mov
jle
push
cmp
out
sarb
inc
pop
and
daa
cmpsb
jnp
int
cmc
test
xor
mov
je
enter
test
dec
into
scas
mov
testb
jl
mov
insl
je
jns
adc
imul
mov
pop
ja
sub
push
xchg
cmpl
rorb
sbb
in
xlat
xchg
add
movsb
jns
dec
mov
push
sbb
pop
mov
jnp
mov
inc
out
mov
icebp
jnp
lock
xchg
lds
addr16
lret
jns
add
iret
ja
orl
ret
add
mov
out
scas
js
shl
sbb
mov
jnp
adc
jne
or
jnp
jp
push
xchg
xor
lret
and
xchg
mov
repz
pop
mov
movsl
jnp
fwait
inc
pusha
xor
dec
mov
xor
xlat
gs
push
dec
mov
out
sahf
add
push
arpl
popf
test
cmp
mov
cmp
jmp
hlt
mov
shr
stc
int3
pop
in
pop
dec
mov
jae
cld
and
add
lds
pop
test
imul
jnp
jge
mov
push
sub
jnp
repz
adc
jnp
xchg
jmp
mov
icebp
movsb
sbb
pop
popa
test
cltd
int
mov
push
jnp
je
mov
jnp
push
push
lea
xchg
and
jnp
and
loop
jnp
aaa
leave
add
or
and
fisttpl
lcall
xchg
popf
push
movsl
sub
sub
stos
add
mov
jnp
xlat
es
gs
mov
jnp
sete
xchg
mov
pop
pusha
add
fwait
sbb
movsl
sbb
imul
lock
dec
fprem1
jnp
push
nop
popa
xor
sub
scas
call
push
cmp
in
pop
dec
xchg
dec
fisttpl
jle
jns
xor
into
cmpb
cmpsl
pushf
or
mov
jnp
mov
mov
add
movsb
dec
jecxz
vpcmpgtb
mov
mov
jnp
push
sbb
shr
aad
sbb
lods
xor
sub
js
adcb
inc
mov
movsl
inc
icebp
mov
adc
adc
shll
ja
jnp
lcall
insl
std
mov
je
xchg
outsl
add
dec
sbb
repz
jge
cltd
lea
cmpsl
int
jnp
popa
jecxz
sub
add
movsb
xor
insb
mov
psubq
iret
outsl
sbbl
cmpsl
dec
dec
xchg
sub
setp
loope
jnp
test
jp
cs
jnp
push
shlb
xor
cmpsb
out
jnp
fidivl
call
dec
mov
int3
leave
mov
pop
dec
nop
add
or
jae
imul
les
jno
stc
inc
negl
cmpsl
mov
test
mov
sbb
jnp
aad
and
sbb
lea
cmpb
or
in
mov
or
loop
ficomps
sbb
mov
daa
push
stc
dec
nop
stc
inc
shlb
fwait
jbe
push
loope
idivl
imul
fdiv
jns
sub
mov
dec
add
ja
roll
test
sbb
outsb
jo
push
jp
movsl
out
test
inc
xor
mov
pushf
xchg
push
mov
repnz
add
fwait
mov
mov
inc
icebp
pop
fnstsw
mov
or
jns
xor
push
lahf
sbb
loop
imul
int3
mov
sahf
addr16
stc
sbbb
push
push
sub
pop
jl
aad
lea
fsubrl
insb
scas
sahf
jnp
pushf
dec
push
dec
or
insl
scas
jne
mov
gs
leave
pop
xchg
je
mov
stos
sub
stos
mov
add
arpl
dec
xor
movsb
daa
mov
push
dec
fbld
cld
hlt
lcall
popf
lods
mov
imulb
lods
js
sbb
jne
dec
push
je
pop
sub
repnz
mov
lods
mov
shl
cmpsl
pop
sbb
jnp
je
sbb
inc
mov
push
add
pusha
xchg
cmp
outsl
dec
push
pop
aad
push
fwait
sub
jnp
cmp
mov
cmc
fxtract
cmp
dec
or
fnstenv
jbe
lods
leave
jns
aam
xor
insl
jns
icebp
es
test
inc
pop
add
dec
aas
fwait
mov
scas
adc
adc
xor
inc
repnz
mov
xchg
or
into
jne
push
push
mov
aaa
es
rep
cld
mov
popa
jb
out
jae
divb
jbe
cmp
imul
dec
lret
pop
dec
pop
mov
fs
inc
fcoml
lea
xor
test
xorl
adc
sti
subb
fs
mov
icebp
jg,pn
xor
rcrl
xor
mov
pop
popa
jnp
push
mov
loop
push
mov
pushf
cmp
mov
inc
jbe
leave
cltd
aas
or
fisubrl
mov
pusha
insl
ret
jnp
fwait
xor
mov
dec
aad
or
mov
rolb
pop
bound
add
mov
xchg
push
and
mov
inc
push
loopne
jmp
jnp
shll
enter
adc
aad
mov
or
cmpsl
shll
test
ficomps
mov
aam
jecxz
jnp
xchg
or
pop
fldl
mov
xchg
xchg
lret
jb
insl
outsl
push
sub
cmp
mov
push
fwait
mov
push
jae
cs
push
xchg
sar
xor
sahf
adc
mov
cwtl
outsl
pop
out
je
xchg
jne
inc
adc
or
dec
jge
mov
pop
xor
std
inc
mov
scas
fistpll
lock
jle
or
jns
imul
addr16
stos
jbe
jae
sti
mov
out
fdivl
outsb
js
testb
dec
movsl
xchg
mov
into
pushf
aaa
pop
cmc
pop
pop
ds
push
xor
add
ja
or
add
and
push
testb
in
and
sbbb
jmp
jnp
sub
loopne
inc
pusha
call
or
int3
xchg
mov
cmp
push
mov
or
mov
and
std
adcb
jae
negl
in
ja
leave
or
and
and
pop
adc
adc
sbb
stos
shrb
rcrl
jnp
jle
mov
sbb
cmp
lahf
cmp
ds
push
pushf
adc
mov
push
dec
jnp
lcall
jnp
nop
xor
pop
out
pop
es
icebp
or
mov
mov
inc
ja
xchg
cmpsl
iret
das
outsl
jae
jb
cld
addr16
sbb
imul
mov
xchg
adc
mov
repz
imul
ret
dec
jnp
aam
xchg
cmp
mov
xor
jecxz
jne
pop
popa
insb
push
mov
jp
jae
faddp
jnp
pop
adc
jnp
in
push
and
adc
jnp
mov
or
mov
xchg
sub
les
jns
aad
lock
lcall
clc
lret
sbb
stos
je
jnp
popf
in
mov
addr16
jnp
shlb
fs
jnp
sub
push
repz
or
and
pusha
adc
jo
mov
jno
fwait
ss
sub
fwait
mov
mov
mov
jnp
fisttps
sub
xchg
xor
push
test
add
movsb
movsl
push
xchg
and
jnp
leave
cwtl
xor
xchg
mov
out
test
sbb
push
movsl
add
push
mov
fs
push
cmp
das
sar
jle
cli
cwtl
sbb
shr
ss
pop
mov
and
daa
ss
mov
loop
jns
or
xor
mov
mov
dec
imul
sbb
in
ret
cld
sub
aaa
sub
lods
mov
bnd
adc
out
shrl
jnp
inc
loopne
cmp
cmpsl
push
jnp
jecxz
or
pusha
and
into
sbb
sbb
xor
jnp
mov
in
push
xor
or
or
jnp
ret
sbb
jnp
mov
sub
test
ds
pop
mov
loop
xor
cmc
xchg
and
loope
push
jnp
jl
sahf
lods
ret
jnp
es
insl
hlt
jo
dec
dec
mov
push
jnp
sub
xchg
iret
inc
pop
in
jnp
xor
pop
and
mov
outsb
cmpsb
je
dec
xchg
mov
lret
test
mov
jle
push
pop
mov
mov
dec
sbb
pop
xorl
pop
outsb
repz
test
repnz
lret
xchg
cmp
mov
les
pop
inc
cmp
mov
popf
jno
xor
jmp
xchg
pop
push
dec
test
sbb
xchg
inc
pop
or
pop
sub
test
and
in
push
xor
mov
xor
push
jne
mov
push
out
out
test
jg
adc
sub
scas
mov
scas
cld
sbb
movsl
cwtl
dec
jb
mov
scas
ljmp
xchg
aad
or
pop
scas
dec
pop
lret
sbb
push
aas
out
mov
push
insb
adc
imull
sub
outsb
pop
pop
cli
push
mov
inc
mov
push
or
out
mov
add
push
adc
pop
and
jp
mov
cmp
mov
cmp
ja
mov
out
mov
pop
dec
mov
cmp
lods
imul
les
testb
data16
pop
add
dec
ss
pop
dec
xor
scas
dec
pop
pop
ljmp
mov
jmp
lcall
pop
inc
je
mov
inc
pop
push
movsl
imul
cmovae
dec
push
jae
sbb
addr16
pushf
push
xor
push
fidivrs
sub
scas
mov
pop
jmp
into
ss
lcall
adc
aaa
jb
ficompl
or
sub
js
mov
xchg
push
add
lock
jmp
std
xor
sbb
xor
fmull
je
jl
cmp
sbb
mov
es
xor
arpl
push
dec
out
sub
xchg
lret
pop
adc
pop
and
sahf
adc
inc
sar
lcall
fnstsw
push
xorb
repz
sub
jl
outsb
adc
aam
lock
xchg
and
or
xchg
test
pop
les
jnp
in
movsl
fistpl
or
pop
xchg
jmp
adc
into
cmpl
push
add
ja
inc
mov
cmp
inc
jmp
mov
mull
fstl
pop
sbb
in
jnp
push
cs
or
mov
cmp
mov
stos
cmc
jnp
jne
frstor
mov
jmp
jo
dec
fwait
ja
cmc
dec
shlb
leave
enter
daa
jecxz
outsl
pop
xor
int3
mov
mov
cmp
add
or
mov
cmpsl
imul
ficomps
test
push
mov
lcall
jmp
mov
xchg
sti
mov
cwtl
push
jmp
fisubrl
dec
pop
cmp
hlt
scas
jle
jb
arpl
pop
mov
addr16
jo
mov
jge
out
sbb
push
pop
mov
scas
xchg
pop
jnp,pt
ja
cmp
jbe
and
ja
stos
xchg
insb
mov
fsubrl
pop
or
add
outsb
pop
adc
xchg
arpl
mov
lock
dec
jbe
mov
shll
sub
sbb
sub
lods
cmp
in
popf
xor
dec
lcall
outsb
stos
mov
pop
ss
outsl
pop
imul
xor
pop
test
or
ja
or
divb
mov
xchg
mov
push
cmp
sub
ja
loop
add
outsl
inc
pop
bnd
xor
out
int3
or
push
xor
repz
inc
repz
sub
xor
test
cmpsb
outsl
mov
mov
jne
arpl
in
jnp
addr16
push
das
dec
xchg
mov
insb
cs
sbb
divb
push
jg
adc
pop
mov
cli
iret
push
pop
xor
outsb
rcrb
add
sub
outsl
mov
xor
jge
inc
push
jns
outsl
outsb
push
cmp
stc
or
cmp
push
lods
addr16
xor
or
adc
cmc
addr16
dec
hlt
out
fisubrl
jns
mov
ss
mov
adc
icebp
repnz
mov
ret
cli
xor
lock
push
xor
push
in
mov
scas
sbb
ds
mov
pop
dec
mov
or
jmp
rcll
add
mov
loope
in
stos
mov
mov
mov
sub
push
xor
push
loope
sbb
rorb
int
fidivs
ljmp
aad
inc
mov
xchg
jae
pushl
mov
cs
divl
mov
mov
inc
adc
push
gs
pushf
int3
jecxz
xor
dec
sub
inc
pop
stos
icebp
cmp
sbb
repnz
das
rcrl
icebp
stos
ja
rcll
adc
insb
int
mov
lret
push
cmp
sahf
mov
lret
lea
dec
lods
outsl
insb
int3
pop
aas
xor
jl
jo
sbb
jmp
lds
adc
dec
xchg
adc
push
sbb
shll
fdivrs
add
rcl
pop
sbb
adcb
dec
sub
negb
cltd
outsl
xorl
push
add
es
pop
sarb
repnz
jae
cs
push
sub
movsb
dec
repnz
lret
repnz
mov
dec
jp
sub
adc
addr16
sbb
jae
pushf
out
movsb
fdiv
les
shl
stos
out
mov
stos
inc
add
or
sub
stos
jno
inc
xor
cmc
sti
int3
jmp
ja
mov
test
jnp
dec
fnsave
push
cmp
cmp
lods
test
inc
cmp
push
rclb
inc
sub
je
sahf
cli
xchg
sbb
dec
pop
mov
xor
pop
lock
mov
fs
fistpl
mov
leave
xor
pop
mov
cs
xchg
push
push
xor
jmp
cmp
cmp
inc
jg
movsl
pop
fsubr
jmp
mov
xchg
ss
mov
cli
xchg
mov
jb
sbb
xor
repnz
fimull
xor
in
or
orl
outsl
add
push
jge
or
and
jae
push
xor
xor
or
ss
and
push
fisubl
jle
mov
inc
adc
jg
arpl
cwtl
dec
in
bound
sahf
pop
fs
push
pop
lds
sbb
lock
xchg
jno
ficomps
push
imul
mov
mov
movsl
ds
test
std
loopne
fisttpll
js
mov
jp
in
sub
es
stc
add
addr16
out
test
repnz
push
dec
fisubl
sub
out
mov
jae
cmp
adc
lret
out
cmp
mov
push
pop
xor
sub
scas
cmpsb
out
mov
std
push
push
mov
xor
sbb
xor
pop
ficompl
in
xor
stos
pusha
adc
xchg
cmpsb
int3
jg
jns
jno
mov
mov
jecxz
cmp
jne
pop
jmp
out
lea
jp
jp
cmp
xor
jno
lods
out
jmp
push
loopne
cmp
mov
or
add
and
dec
sbb
ficomps
push
gs
mov
dec
ficoms
xor
push
push
sub
inc
push
mov
xor
nop
mov
ffreep
add
push
mov
jge
mov
aam
hlt
jp
movsl
test
daa
daa
or
ss
mov
ds
adc
cmc
outsb
outsl
lods
pop
cmp
mov
inc
jae
jbe
lods
fnstcw
pop
sbb
cmp
outsb
and
jns
or
mov
pop
out
divb
xchg
fnstsw
iret
jnp
mov
ret
ds
xchg
add
stc
inc
inc
fidivl
jnp
test
loopne
jnp
nop
lea
pushf
jae
jne
stc
pop
jnp
popf
inc
inc
add
jnp
fs
push
movsb
jnp
das
jae
pop
mov
inc
jle
ficompl
lahf
rcrl
pop
sti
cmp
sub
cwtl
mov
jg
daa
fdivs
test
iret
mov
xchg
dec
pop
mov
shrl
ja
push
pop
xchg
stos
inc
or
cmp
mov
stos
movsl
xlat
xor
scas
add
hlt
imul
cli
inc
sbb
jl
jg
pop
sbb
pop
aas
push
cwtl
ret
outsl
pusha
stos
pop
xor
cmpsb
push
aaa
push
jnp
mov
out
ret
sahf
jnp
cwtl
shll
push
jae
pop
xor
jnp
ljmp
mov
cmp
aas
or
jle
addr16
jb
push
mov
hlt
push
fistps
mov
ret
ret
mov
jge
jnp
dec
mov
inc
add
mov
xchg
or
pop
insl
out
cmp
ret
stos
ja
mov
lods
or
dec
jnp
fstpl
jae
adc
andl
ds
adc
jl
xor
ljmp
jno
xchg
or
sub
jnp
in
lret
sub
fwait
jnp
je
filds
out
pop
jle
stos
jns
fsubrl
outsb
pusha
xchg
xchg
dec
add
nop
movsb
inc
dec
and
testb
stos
mov
dec
leave
or
add
fs
jmp
inc
jb
jne
dec
push
arpl
mov
imul
push
popa
and
add
or
push
hlt
loope
outsb
enter
and
fadds
cmpsb
pop
inc
imul
sub
sbb
xor
ss
nop
mov
cld
test
sub
jg,pt
or
jge
in
and
mov
jnp
pop
jp
cli
push
push
or
push
scas
fldcw
movsb
jns
loopne
cmp
jmp
scas
pushf
ret
push
lock
cmp
push
test
cmp
dec
jnp
stos
ret
daa
fbld
mov
adc
cmpsb
andb
mov
jnp
push
cmpsl
shrb
iret
inc
mov
cltd
scas
roll
mov
add
jnp
cmp
mov
daa
push
out
pusha
mov
jecxz
jnp
mov
jmp
dec
jnp
add
sbb
inc
push
arpl
adc
in
addr16
cmp
xlat
das
hlt
ds
mov
leave
pop
sub
jnp
lds
sbb
outsb
movb
sarb
std
jnp
or
mov
inc
lock
xor
sbb
mov
ljmp
mov
les
mov
ret
jle
pop
addb
aas
sbbb
push
outsl
shlb
fnstcw
adc
push
mov
cltd
movsl
jne
mov
pop
stos
cmp
pop
inc
jmp
add
pop
pop
loop
xchg
test
pushf
sub
or
add
addr16
mov
fcoms
push
dec
rol
imul
les
jl
fisubl
cmp
and
mov
mov
jns
mov
sahf
dec
cld
mov
repnz
les
mov
adc
fs
sbb
mov
jnp
int3
lods
rcrl
pop
jnp
inc
dec
xchg
movsl
jmp
outsb
and
lss
jnp
or
sahf
outsl
bound
xor
pop
incb
or
pusha
mov
lret
arpl
mov
sbb
jnp
std
aas
add
lcall
push
sbb
and
loope
jns
jle
mov
sti
jns
and
or
cmpsl
shlb
xchg
rolb
pop
and
out
std
mov
dec
sbb
or
add
fiadds
fiaddl
mov
and
ds
imul
stos
and
mov
arpl
loope
and
loop
in
add
fbld
mov
xor
push
outsl
pop
mov
jae
adc
lock
xorl
out
inc
cltd
daa
mov
out
sub
cmp
jae
push
add
dec
dec
push
inc
mov
fstl
mov
sub
or
dec
adc
js
pushf
mov
shlb
jp
js
lahf
jp
dec
cmp
imul
ja
pop
aas
out
pop
add
mov
ja
call
add
sub
nop
jo
mov
push
lods
mov
push
cmp
pushf
xchg
in
xchg
outsl
cmp
pop
jle
jns
xor
les
cli
lock
in
mov
inc
adcb
das
jo
scas
pop
or
mov
inc
ror
imul
jp
mov
xor
lods
bound
aas
outsl
in
jb
mov
imul
or
ja
addr16
shlb
mov
xchg
or
mov
inc
out
cltd
fs
xchg
dec
cmp
cltd
sub
ljmp
int3
lods
lret
add
cmp
pusha
iret
aaa
stos
sub
shll
inc
sbb
cmp
hlt
inc
push
dec
movsb
outsb
subl
lcall
cmp
xor
scas
bound
push
sub
sub
jp
push
inc
jb
bound
sub
pop
push
mov
testb
int
sbb
ds
xchg
cmpb
dec
imul
cmp
stc
pop
mov
xchg
cmp
in
pop
dec
cmpb
ljmp
je
cli
or
aas
arpl
pop
enter
cmp
icebp
pop
js
jae
pushl
dec
jae
push
and
insl
arpl
arpl
or
stc
arpl
jmp
xor
addr16
repnz
sti
repnz
dec
inc
out
cmp
fisubrl
lods
or
inc
cmp
arpl
lods
sbb
pop
icebp
pop
test
adc
mov
xor
inc
and
repz
cltd
and
dec
out
rcrl
js
cmp
xchg
lock
mov
and
mov
call
mov
rclb
push
cmpsl
divb
imulb
adcl
into
sbb
pop
mov
jnp
jmp
adcl
shl
fwait
repnz
sbb
scas
lcall
inc
push
repnz
xchg
inc
nop
mov
mov
lret
aam
dec
test
cmp
mov
push
xor
add
insb
adc
mov
xor
aaa
nop
lcall
xor
mov
xor
inc
or
ljmp
mov
loope
into
or
mov
xor
push
xchg
cli
outsl
cli
aaa
pop
sbb
mov
cwtl
or
mov
adc
rcrb
push
jnp
xchg
cwtd
aad
inc
sub
inc
sub
xor
push
sbb
mov
outsl
dec
insb
inc
pop
xor
ja
mov
push
pop
adc
dec
jae
out
mov
inc
pushf
dec
mov
jbe,pt
adc
add
or
ljmp
jo
ficompl
stos
jl
ficoms
mov
scas
or
shlw
sarl
inc
pusha
sbb
testb
xor
ja
test
jns
dec
mov
into
jnp
shlb
ret
jecxz
push
fidivrs
gs
push
xor
dec
sti
sbb
mov
cmovb
fsubs
loope
adc
xor
jnp
ljmp
jl
movsl
jecxz
test
push
inc
cmp
jnp
and
inc
jnp
test
in
jnp
pop
jmp
popf
ljmp
ja
insl
ja
jo
jbe
push
sbbl
cld
jne
mov
js
insl
jb
xor
jge
pop
lock
mov
pop
movsb
jnp
addr16
pusha
xor
push
or
add
pop
mov
mov
mov
jnp
popa
notb
lock
outsl
faddl
into
es
and
cmp
mov
imul
stos
int
insb
cmpl
ret
lds
fimuls
sub
stc
inc
test
xchg
mov
repnz
mov
push
mov
popf
push
cmp
mov
pushf
add
fisubrl
lock
fnstcw
vpermt2d
or
add
and
xor
push
jl
jnp
lds
adc
jnp
test
popa
mov
pop
fisttpll
cli
push
sbb
jnp
cmp
insb
je
dec
bound
jmpw
push
dec
rorl
idivl
out
xchg
int3
jnp
cli
movsb
pop
ret
ljmp
ja
mov
push
mov
dec
mov
jo
lcall
lds
xor
dec
jnp
mov
enter
jnp
adc
push
repnz
xor
jo
sbb
scas
mov
jnp
les
push
pusha
dec
popa
jnp
paddusb
das
lret
adc
or
and
jnp
push
sub
mov
pop
int
jnp
adc
jle
inc
jnp
xlat
fildll
jl
dec
jnp
mov
or
sub
jns
mov
loop
sbb
dec
mov
jnp
out
pop
out
or
jnp
lods
sbb
push
inc
cwtl
ja
cld
sti
jae
sub
jle
push
jnp
ret
add
int
ljmp
rcrl
nop
adc
lcall
sbb
jnp
lods
xlat
adc
repz
xor
jnp
sub
ja
clc
out
dec
pop
xor
jns
pop
push
jnp
arpl
xor
mov
jnp
daa
mulb
shll
jnp
push
sub
in
pushf
sub
in
cmp
sbb
jnp
in
or
jae
fadd
pop
sub
insl
jmp
fdivrp
sbb
or
rol
jae
mov
repnz
mov
jle
loopne
aaa
add
stos
adc
ja
scas
repnz
cmp
bound
ret
lock
push
shll
mov
divb
xor
jle
aad
pushf
pop
stos
jp
ret
bnd
sub
inc
arpl
cmpsb
sbb
pause
add
movsb
add
outsl
xchg
sti
sub
cmp
push
xor
jnp
jl
push
sar
imul
jae
fsubrl
test
fwait
cmp
and
sub
lahf
mov
pop
rorl
fs
push
xor
ljmp
mov
mov
xchg
jnp
sarl
adc
mov
jnp
push
divb
mov
jbe
xchg
or
xchg
jnp
mov
imul
mov
cmp
pop
lea
xor
adc
ret
jnp
xchg
cmp
jge
ja
pop
fimuls
mov
sbb
pusha
ret
ret
jne
xchg
out
xchg
pop
dec
push
in
jnp
pop
sbb
test
dec
jmp
cwtl
jnp
jns
push
or
or
rcrl
and
and
popa
jecxz
lea
cmc
fdivrs
sbb
push
pop
xchg
imul
imul
sbbl
aaa
rol
pop
bnd
movsb
fxtract
cmp
xchg
sbb
pop
fcmovbe
pop
and
outsl
cmp
pop
and
scas
cmpsl
in
js
jns
jge
jmp
cmc
mov
addl
cmp
in
mov
ljmp
mov
push
test
mov
xor
inc
jle
pop
fwait
push
in
cmp
mov
popa
xor
shll
mov
sub
loope
inc
aas
daa
inc
push
xorl
pusha
mov
dec
xor
mov
shll
jnp
pop
push
ljmp
jnp
push
cmc
mov
fimull
stc
jnp
jl
data16
cmp
aas
insl
ds
inc
pop
dec
add
add
jno
mov
jae
push
mov
add
mov
es
add
movsb
pop
mov
enter
rcll
insb
lahf
movsl
mov
popf
mov
and
outsb
sub
sbbb
icebp
imul
sbb
mov
cmp
xor
push
jmp
outsl
jecxz
cmpsb
fadds
dec
jnp
sub
mov
ret
fadds
mov
mov
ds
loopne
and
jae
add
ss
jmp
in
out
lcall
jp
jnp
add
mov
xor
push
fdivrs
ds
add
cld
pop
js
add
or
lods
sbb
sub
mov
in
sahf
ret
pop
pop
and
out
xor
in
stos
loope
jge
jnp
mov
cmpb
sahf
fdivs
add
ret
out
xchg
jns
mov
ja
mov
arpl
mov
push
jbe
pop
sbbl
pop
mov
and
int
cmp
lock
xor
cmc
insw
inc
lea
jnp
loope
jo
cwtl
inc
mov
adc
adc
insl
aaa
push
stos
jmp
pop
ret
hlt
fwait
lods
out
pop
jns
outsl
inc
mov
pop
inc
push
inc
jnp
lock
jge
rcrl
adc
test
jp
jnp
xchg
mov
xchg
jnp
adc
fwait
xlat
sti
push
ja
fucomi
add
lods
xchg
add
add
fwait
dec
sbbb
and
and
and
push
into
sarl
dec
stc
mov
pop
stos
ja
inc
scas
mov
call
xchg
sub
test
pop
cmc
test
inc
add
jnp
cs
sub
cmp
out
mov
bound
or
negb
test
push
pop
jnp
repz
xchg
ret
fs
jnp
int
add
adc
es
jge
inc
cmp
inc
sbb
loope
mov
outsl
in
mov
add
pop
cmpb
lds
jecxz
add
mov
movl
enter
xchg
jnp
jmp
mov
outsl
and
and
mov
fsts
std
iret
movsb
xchg
rorl
ljmp
roll
push
adc
jl
lret
inc
into
aas
cmpsb
xchg
ror
sti
pop
mov
repnz
add
jnp
dec
mov
std
or
jnp
push
mov
shr
aad
jnp
mov
ficomps
ja
push
add
mov
mov
leave
adc
lret
cmp
cmpsl
inc
jb
jp
cli
test
pop
jo
dec
dec
shr
inc
stc
ret
jns
cmc
sbb
mov
dec
fs
or
mov
sub
mov
jnp
lods
loop
repnz
mov
mov
jbe
inc
mov
or
cwtl
xchg
jnp
ljmp
ret
inc
aas
repnz
mov
mov
mov
jnp
cwtl
mov
ljmp
nop
mov
jnp
inc
out
fmull
jnp
lock
pop
jnp
push
mov
mov
inc
pop
push
movsl
mov
fwait
pop
lods
sbb
inc
dec
pop
lds
adc
fprem1
test
mov
in
aaa
jnp
xchg
lea
dec
icebp
mov
jnp
push
sub
ret
xchg
dec
pusha
lods
enter
and
test
xchg
mov
adc
pusha
jnp
inc
call
jno
inc
pop
icebp
inc
sbb
jnp
mov
dec
cmp
test
or
adc
mov
jnp
aaa
stos
ret
into
mov
mov
aad
imul
movsl
mov
cwtl
jnp
jmp
test
add
push
inc
push
xchg
ljmp
daa
sbb
test
xchg
mov
xchg
idivl
and
mov
push
xchg
lret
jnp
test
push
cs
cmpsb
jnp
add
pushf
adc
subl
jmp
and
xor
mov
add
mov
jnp
adc
sbb
xlat
mov
xor
and
pop
ret
add
xchg
repz
insb
xor
cmp
cmp
sti
jnp
inc
pop
cmpsb
gs
jnp
or
adc
or
xchg
mov
mov
mov
jnp
push
pop
add
data16
ror
mov
outsb
cmp
mov
jle
xchg
jns
cmpsl
incb
sti
jnp
addr16
cmp
push
or
adc
lcall
movsl
or
inc
jnp
in
cmp
xor
add
and
pop
fwait
iret
cmp
jle
adc
pop
jp
imull
jmp
jnp
push
or
dec
add
add
cmp
mov
xchg
mov
arpl
mov
jle
lret
jnp
stos
cmp
add
lahf
pop
xor
mov
jnp
fistps
enter
jnp
sti
test
fdivrl
xchg
stos
aad
pop
xor
jnp
pop
push
adc
push
pop
pop
jnp
js
pushf
loope
lret
mov
sub
mov
xor
les
sbb
sub
jle
std
mov
cmp
pop
lcall
jns
and
testl
sbb
test
sbb
mov
pop
xchg
loope
ljmp
rcrl
incl
icebp
ljmp
mov
xor
push
or
into
inc
mov
ja
ds
xchg
in
stos
insb
and
mov
jnp
out
fiadds
imul
lret
jmp
gs
push
outsb
cli
mov
fldl
aaa
data16
mov
fcmovnb
daa
bound
jmp
jle
or
cmp
mov
and
jns
test
mov
push
add
jnp
das
jle
inc
inc
push
fwait
sbb
sarl
jo
in
arpl
and
repz
sti
lods
xchg
aas
subb
es
sbbb
aad
inc
mov
sub
je
cwtl
push
xchg
clc
nop
cmp
jl
scas
push
cmp
loopne
add
lods
ljmp
into
fdivs
mov
ss
jns
cmp
or
jnp
enter
lds
dec
cmp
or
sbb
aas
ljmp
mov
fidivrs
lret
cli
pop
mov
imul
mov
jae
pop
cmp
and
add
pop
xor
int
adc
pop
imul
aam
das
pop
mov
dec
jbe
cs
jb
add
jns
sub
mov
sahf
cmc
inc
lret
sti
lea
inc
roll
dec
cmp
sbb
fisttps
cmp
cwtl
sub
fstps
aaa
inc
ret
sub
lods
fdivs
add
xchg
inc
int
shlb
mov
les
dec
daa
shlb
cmp
jnp
test
jge
jnp
pushf
mov
pusha
mov
shlb
pop
sub
mov
jnp
dec
push
mov
rclb
sahf
outsl
cmpsl
iret
adc
enter
xchg
shl
inc
dec
dec
or
cmc
push
loopne
and
jns
mov
cmp
add
add
rclb
je
pop
mov
mov
cmp
aas
out
jl
ljmp
mov
xor
cld
pop
jns
lcall
out
pop
mov
lods
lods
bound
int
adcl
cmc
je
xchg
pop
in
insb
jnp
fcmovne
dec
sub
or
jnp
mov
push
cltd
jnp
ja
outsw
out
xor
and
repnz
test
mov
ja
jne
jecxz
stc
and
mov
jnp
and
iret
xor
pop
andb
sti
mov
jnp
pop
jbe
sarb
divb
sub
or
fildl
mov
pusha
xor
jnp
cs
fnstsw
pop
push
mov
and
mov
pop
pop
mov
popa
pop
jo
daa
fistps
lret
cmp
push
or
into
add
mov
add
and
jnp
mov
adcb
and
maskmovq
fdiv
cmp
mov
bound
ror
call
jnp
fst
dec
jmp
test
fwait
jp
out
or
mov
ljmp
out
fistpl
jnp
shll
fidivl
inc
out
jo
adc
jnp
ljmp
jnp
ret
sti
dec
push
pop
cmovae
leave
divb
push
aad
mov
jnp
dec
mov
rcrb
das
xor
dec
ja
loope
sbb
les
pushf
xchg
mov
add
int
adc
xor
ja
and
cmp
push
add
mov
faddl
out
jnp
mov
push
jnp
pushf
int
mov
in
or
inc
or
hlt
add
ret
jae
and
push
fsts
xchg
out
push
lret
jnp
outsl
arpl
faddl
mov
outsl
insb
movsb
mov
jnp
fcompl
rcrl
popf
addr16
push
lcall
jae
adc
jnp
stos
loop
ljmp
lds
insl
movsl
jg
pop
in
or
mov
add
into
fcmove
push
mov
cmp
mov
imul
notl
imul
scas
mov
outsl
jl
jge
test
push
roll
xchg
jnp
or
or
xor
rcrl
and
push
dec
mov
sahf
subb
icebp
xor
sbb
mov
mov
stos
popf
ja
mov
std
mov
fcoml
or
sahf
and
in
loope
rcr
repnz
mov
mov
jnp
push
sub
and
mov
outsl
push
jle
stos
pop
cmp
mov
push
and
hlt
jne
movsl
jnp
out
flds
mov
cmp
and
hlt
cmp
pop
mov
fdivp
loopne
sbb
inc
call
lret
jecxz
ljmp
push
adc
push
scas
mov
jo
out
push
fildl
jne
jnp
sbbb
add
dec
jnp
mov
adc
lds
out
push
fisubs
rcrb
jecxz
inc
in
adc
aad
dec
outsl
mov
sub
sub
cmp
mov
aas
add
shrl
addb
lods
mov
cmpb
and
sub
mov
push
dec
dec
sahf
sar
mov
sti
lcall
mov
arpl
aad
stos
iret
jnp
mov
cmp
jnp
sar
sahf
push
dec
sbb
jnp
sbb
int3
pop
fisttpl
js
data16
aam
cmpsl
imul
popa
add
hlt
cmc
jnp
ss
in
inc
dec
push
push
int3
pop
jl
ficompl
out
dec
jnp
negl
jnp
lods
mov
fwait
pusha
jo
pop
int
jecxz
mov
cmp
push
cwtl
push
scas
enter
cs
lock
dec
sbb
movsl
inc
jnp
mov
shlb
jo
xor
push
lret
add
pop
ljmp
mov
jnp
idiv
and
push
movsl
outsl
add
adcl
leave
fidivrl
xor
ja
negl
dec
jbe
jnp
xchg
xorb
mov
xor
xchg
dec
jnp
shll
adc
jno
mov
jns
inc
pop
mov
xchg
jae
push
mov
sub
clc
aam
fstps
out
out
jno
mov
mov
leave
mov
outsb
movsl
insb
push
negb
or
and
ja
lock
mov
push
sub
inc
gs
sbb
dec
xchg
ljmp
dec
aam
stc
cmp
clc
push
cwtl
inc
push
repz
mov
outsl
lods
mov
nop
leave
pop
sbb
add
xchg
inc
dec
xor
push
add
pushf
jo
ds
outsb
loop
cmpsb
sarb
push
idivb
mov
mov
push
inc
scas
jnp
cwtl
lods
fistps
arpl
or
jnp
fsubrl
test
flds
in
addb
jnp
rorl
adc
outsl
nop
lods
leave
clc
mov
add
std
jp
mov
stos
inc
sub
stos
loopne
dec
insl
iret
cmpb
ret
cwtl
xchg
int
pop
dec
mov
mov
xchg
jecxz
repz
add
cmpb
fwait
scas
incl
sub
outsl
arpl
add
sarl
out
cli
jne
movsl
stos
cmp
jmp
movsl
idivb
pushf
lods
sti
gs
fadd
cmc
cmp
pop
fs
mov
push
jns
pop
inc
dec
into
hlt
scas
inc
iret
sbb
or
adc
jnp
imul
sub
cmp
jb
pusha
cmp
cld
outsb
jnp
push
stos
popf
cmp
pop
out
orb
cmp
sub
dec
push
mov
jmp
xor
sbb
out
jnp
dec
pop
xor
pop
pop
repnz
mov
icebp
fisttpl
jnp
cs
mov
jnp
and
fdivl
into
mov
jp
mov
lahf
mov
ja
mov
xchg
mov
fdivrs
cmpsb
cltd
mov
jnp
pop
xchg
push
ret
aam
loopne
lds
sbb
xor
inc
call
pop
mov
pop
and
push
push
sub
sub
push
leave
cmp
mov
xor
and
movsl
leave
jnp
in
add
gs
data16
sbb
jo
and
mov
and
ror
cwtl
fwait
orb
jnp
int
iret
loope
jb
ret
adc
xor
sbb
ret
jmp
add
xor
repz
push
jge
mov
dec
and
jns
mov
imul
test
add
in
mov
cmc
jbe
pop
push
loopne
add
cvtdq2ps
sbb
popa
test
jnp
mov
pop
and
ds
outsb
test
xchg
inc
jnp
addb
pusha
or
sbb
fistpl
data16
sub
xor
cmp
call
in
jnp
or
fcoms
adc
dec
es
jle
inc
inc
pusha
mov
js
cmovl
adc
lret
test
jnp
cmpsb
fstps
pop
movsl
fistpll
sti
ja
sahf
lret
adc
rolb
jnp
jne
push
arpl
inc
jnp
int3
dec
jo
or
test
adc
dec
ds
mov
lods
ret
jmp
icebp
cmp
cmpsl
jnp
and
dec
pusha
les
or
jg
clc
lock
jnp
fdivr
push
dec
daa
xchg
inc
jae
sub
lds
add
mov
add
mov
cmpsl
cmp
cmp
or
mov
sbb
sti
insl
cmp
data16
mov
jne
loop
cli
add
push
icebp
sbb
in
cmpsl
jecxz
jp
jae
lea
mov
push
shlb
jbe
addr16
fs
xchg
test
push
repnz
inc
fidivrs
mov
fisubrl
fsubl
pop
scas
jne
jb
pop
jp
and
sub
loop
sub
fcomps
cli
xchg
jno
mov
xor
shrb
pop
ret
and
jnp
pop
adc
xchg
mov
pop
iret
push
bound
sahf
pusha
jnp
add
cmp
jnp
mov
sub
sbb
int
mov
push
jnp
xchg
lods
xlat
aaa
mov
jnp
loop
adc
in
addb
lods
inc
mov
xchg
movsl
aad
sbb
sub
pushf
mov
add
push
std
testb
push
stos
inc
jnp
fwait
in
test
mov
stos
xlat
das
shlb
nop
cltd
mov
outsl
arpl
jnp
out
dec
add
addl
jae
pop
arpl
repz
push
stc
insl
sub
dec
lock
cmp
insb
jae
dec
dec
subb
jge
pop
mov
pop
cli
popa
lcall
push
loopne
xor
call
mov
ja
stc
sbb
jo
imul
int3
aam
sbb
mov
mov
insb
bnd
xchg
fildll
push
cltd
xlat
int
fwait
mov
cs
outsb
aam
push
aam
sbb
out
xor
xorb
sbb
das
fimull
lret
and
clc
jnp
insb
loopne
jecxz
rcrb
idivb
aaa
aam
nop
xor
pop
cwtl
sub
push
mov
xorb
test
mov
mov
cwtl
rcr
pop
test
mov
cmp
sbb
push
lcall
ljmp
enter
push
xchg
and
cmp
sub
mov
sub
subb
pop
or
insb
inc
sti
cwtl
repz
lahf
nop
mov
sti
inc
and
stos
outsl
xor
cmp
notb
test
xchg
xchg
test
dec
dec
loopne
cmp
inc
pop
add
and
aaa
orl
fwait
mov
cmp
jns
cmp
pop
arpl
cwtl
cli
add
outsl
repz
xor
rorb
inc
mov
cwtl
xchg
fisubrl
scas
sub
ficompl
pusha
scas
sbb
mov
or
es
sbb
mov
jmp
sarb
mov
mov
mov
pop
xor
fsubrl
xor
das
xchg
mov
adc
int3
in
stc
mov
add
dec
push
xor
cmpsb
ljmp
out
mov
cmp
ss
adc
ja
les
jns
dec
push
inc
pop
in
ja
repnz
jb
pop
shrb
mov
dec
sbb
mov
mov
jp
push
aaa
ror
hlt
and
mov
out
and
or
mov
in
mov
mov
jecxz
ss
mov
imul
mov
mov
sub
fwait
xor
lret
dec
repnz
stos
add
push
ljmp
add
loop
movsb
sbb
cmpsb
dec
xchg
iret
imul
fisubrs
cli
mov
xchg
data16
cs
std
cmp
and
jmp
xchg
sbb
sub
inc
inc
mov
in
cmp
sahf
push
sbb
cmp
sbb
or
pushf
xchg
pop
mov
dec
ret
jnp
pusha
mov
insb
xchg
xor
xor
push
insb
inc
roll
lahf
sub
mov
mov
or
cld
jg
or
xorl
jb
mov
mov
psubw
jl
mov
hlt
cwtl
stc
lods
and
lods
mov
lods
scas
xchg
test
ss
xchg
adc
xchg
repz
mov
pop
cmp
mov
cmc
pusha
jne
decb
popa
or
pop
lahf
jns
or
inc
jnp
mov
push
jnp
repnz
fistpll
push
out
push
push
push
shrb
jnp
pushf
and
ja
loope
jne
or
aam
push
out
sub
sub
jp
xor
xorb
js
divb
add
int
sarb
pusha
aad
xchg
cmpsb
xlat
cmp
mov
dec
mov
fistpl
fdecstp
test
xor
sbb
loop
leave
pop
shll
xchg
mov
pop
push
pusha
bnd
sbb
pop
cmpl
out
and
sbb
into
add
mov
jnp
add
xchg
test
push
pop
mov
sbb
jge
jnp
or
xchg
lcall
aas
lock
and
mov
clc
jnp
and
test
cmpxchg
pop
jo
jnp
push
test
shrl
repz
mov
pop
jns
insl
adc
std
mov
lret
addr16
outsl
ret
popf
push
mov
sub
xor
xchg
add
jg
je
or
fcompl
fcomps
jb
packsswb
mov
jno
xor
ljmp
ss
lcall
outsb
popa
mov
add
jnp
cmc
push
push
out
stc
stos
push
or
cmp
je
fcmove
popa
xchg
dec
jnp
out
xchg
test
jnp
inc
loope
pop
cmp
sub
jmp
adc
ss
xchg
mov
inc
jnp
inc
aas
cmp
cld
mov
jnp
es
xor
jbe
add
clc
shr
adc
outsb
dec
dec
mov
scas
inc
sub
es
cmpsb
les
outsl
outsl
daa
and
xor
adc
xchg
pop
jnp
fwait
sub
jnp
loop
or
shll
or
fwait
jecxz
jnp
adc
mov
lcall
sbb
add
fwait
and
jnp
ficoms
gs
mov
jo
xchg
inc
imul
cmpl
pop
push
les
pop
or
xchg
inc
and
jp
mov
out
jg
dec
cmp
xchg
rorl
out
dec
lock
jno
cmpsb
movsl
jmp
cs
and
jg
mov
lcall
es
cmp
cli
pop
cmp
inc
dec
mov
push
mov
mov
inc
jnp
jbe
dec
and
xor
jb
mov
lods
les
rolb
roll
inc
insl
data16
xchg
or
jnp
shl
stos
sbb
pop
in
push
lods
outsb
and
cwtl
mov
inc
in
shll
mov
jnp
into
add
jnp,pn
xor
pop
loopne
adc
adc
in
pop
add
jnp
dec
iret
mov
jnp
xor
push
shr
insb
jnp
dec
or
out
jnp
sbb
shlb
test
sub
jb
comiss
sti
movsb
adc
cltd
icebp
aad
scas
sub
fwait
mov
sbb
lea
iret
fldt
mov
out
data16
push
pop
sub
ja
push
cmpsb
mov
dec
lret
sub
pop
pop
mov
fcos
or
scas
movsb
xchg
sbb
mov
jnp
push
addb
or
insl
ds
cmp
mov
cmp
inc
jmp
jnp
add
insl
mov
sub
fstps
cmp
sub
pop
inc
pop
lods
pop
mov
pop
inc
cmp
sub
lock
sub
lock
jno
mov
push
jnp
jmp
jne
xor
sub
mov
sti
in
push
pop
mov
inc
insl
lahf
inc
jne
push
lods
loopne
mov
jnp
add
mov
cmp
jnp
push
in
jnp
repnz
adc
shl
or
cld
addr16
add
fsubrs
stc
das
xchg
or
es
fcompl
pusha
inc
test
cli
lret
dec
outsl
ss
push
mov
aaa
arpl
enter
or
adc
add
jp
stc
out
add
jnp
leave
gs
push
and
inc
loopne
pop
int
dec
jnp
fistps
ljmp
mov
mov
push
xchg
push
jle
mov
cmp
test
call
jnp
mov
je
addr16
push
sbb
mov
jnp
push
dec
nop
jnp
sti
mov
xor
add
inc
fiaddl
ds
test
stos
pop
jnp
jmp
push
xor
add
jmp
faddp
dec
jnp
test
adc
fbld
push
pop
add
xor
xor
pushf
xor
test
loop
pop
dec
sbb
movsb
in
mov
aad
mov
inc
icebp
xor
mov
and
lcall
add
sahf
call
adc
xchg
xor
add
jnp
xor
sbb
ljmp
lret
push
das
sti
aad
push
mov
push
cmp
aas
fsubr
popf
jnp
sub
test
je,pt
sahf
or
js
cmp
es
sub
xchg
inc
movsl
and
mov
push
andb
loop,pt
adc
jae
aad
fdivrl
xor
lahf
mov
mov
push
push
mov
or
pop
test
or
xchg
incb
pushl
mov
lds
divl
jnp
dec
mov
pop
popf
in
add
xchg
loop
pop
addr16
inc
mov
loope
xlat
je
ss
aaa
cld
xchg
sbb
add
lret
jp
mov
lods
and
push
pushf
nop
jmp
je
and
into
cmc
push
leave
inc
and
ret
stc
lahf
addr16
xor
push
or
mov
mov
imul
fdivp
arpl
loope
xchg
mov
sbb
xchg
cmpb
jg
lret
sub
cs
dec
push
inc
mov
jo
jl
cmp
pusha
mov
out
lods
push
lds
sbb
sub
out
hlt
insb
jnp
mov
cwtl
mov
dec
xchg
dec
jne
xchg
xchg
sub
xchg
mov
add
fistpll
adc
jnp
push
mov
aad
jb
fisubrl
jnp
imul
pusha
es
or
shlb
in
jo
pop
pop
sbb
cmp
mov
mov
call
fwait
sahf
ja
lret
mov
call
inc
push
xor
xchg
sbb
inc
mov
mov
insb
adc
jnp
dec
xor
inc
adc
xchg
mov
lds
or
cmp
jb
ret
lods
sub
mov
pop
inc
jns
add
cmp
stos
pop
lcall
aam
dec
mov
in
stc
cmp
push
lock
int3
fisttpll
mov
pop
mov
ss
cmp
mov
mov
adc
jge
into
lea
pop
pop
mov
push
popa
test
mov
jnp
mulps
jmp
lds
mov
loop
jne
xchg
push
pop
les
mov
add
fdivrl
subb
outsl
pop
and
mov
xor
mov
cmp
cmp
xchg
xchg
cmc
and
mov
inc
or
shl
loopne
jnp
and
jnp
xchg
pushf
mov
dec
cmp
lds
jns
aad
xchg
cmpl
iret
inc
insl
outsb
pop
mov
or
hlt
popf
aaa
jnp
mov
mov
dec
jge
dec
lret
dec
sti
push
push
pop
data16
jnp
aad
dec
cmpsl
repz
dec
mov
dec
test
pushf
lds
jnp
call
inc
add
pop
loopne
jmp
push
out
rol
jnp
out
mov
xchg
inc
mov
push
aas
add
fcomps
or
mov
add
frstor
into
pop
hlt
cmovo
sbb
out
cmp
mov
sahf
cmp
aas
je
push
inc
bound
xchg
mov
dec
sti
and
fs
xchg
sbb
pop
inc
inc
sahf
mov
fwait
cmp
cli
push
and
inc
or
inc
loop
add
jne
jnp
xchg
sub
cmp
pop
jno
bound
ficomps
imul
jp
xlat
xor
insb
jnp
sbb
test
xor
and
shlb
shlb
ljmp
push
fdivl
mov
sti
sub
push
jnp
in
pushf
mov
daa
cwtl
jnp
mov
add
popf
xlat
lcall
int3
movsl
mov
mov
ret
and
xchg
mov
cld
jnp
jno
es
inc
xchg
das
ja
add
or
daa
jno
cld
mov
push
mov
push
pusha
scas
push
xor
mov
push
rcrb
mov
pop
pop
xor
or
hlt
add
xor
out
xchg
mov
ret
sbb
sbb
outsl
pushf
mov
pusha
gs
fildll
mov
mov
mov
cmp
js
mov
cwtl
testl
xchg
jnp
sti
xor
cmpsb
orb
scas
ficoms
mov
flds
xchg
lea
dec
shrb
out
push
sub
add
pop
or
call
mov
dec
fstpt
test
jnp
pop
daa
lds
cwtl
push
pusha
jnp
ljmp
jnp
orl
mov
push
ds
shrb
loopne
in
in
lcall
fiadds
xchg
lods
fstpt
jnp
mov
mov
jns
vmwrite
adc
ja
popf
mov
movsb
or
ret
jnp
data16
push
mov
sub
add
lret
xor
jmp
xchg
jnp
hlt
lahf
mov
pushf
add
lahf
sub
rcll
add
add
push
test
ret
cmpsb
push
shr
jnp
dec
inc
and
in
adc
stc
insl
sbbb
inc
xor
shl
inc
orb
cli
adc
movsl
imul
or
fcomps
and
pop
and
dec
jae
mov
addr16
pop
shl
fcomps
test
mov
fnstsw
pop
jns
imul
mov
lret
popa
xor
loopne
stos
repz
sub
add
and
test
and
outsb
scas
call
imul
cmpsb
bnd
add
outsb
inc
ljmp
xchg
mov
leave
inc
fwait
lods
pop
xlat
in
pop
je
mov
out
cli
pop
xor
aaa
cmp
dec
jb
js
in
fnstsw
shl
cmpb
mov
dec
lds
shlb
fdivrs
cmc
cmp
fwait
test
sub
inc
cmpsl
ss
outsl
hlt
stos
inc
cmp
xchg
clc
dec
push
xchg
sub
das
adc
jg
or
or
jg
sub
es
or
cld
sbb
push
mov
mov
stos
jmp
iret
pop
or
pop
mov
jl
outsl
jnp
sub
cmp
mov
inc
dec
jbe
int
sbbl
jp
ljmp
stos
fidivl
mov
ret
add
aaa
dec
xchg
das
stc
mov
inc
dec
push
les
clc
pop
sbb
sub
push
test
push
jnp
push
or
jnp
and
sbb
adc
sub
sub
int3
inc
jnp
xchg
stos
xchg
sub
pop
jge
jno
jo
popf
mov
sub
push
mov
push
mov
sbb
jnp
and
jnp
mov
pop
mov
lret
shrl
sbb
mov
jae
mov
jg
xchg
cs
dec
jl
jnp
ret
mov
test
sahf
stos
mov
xchg
and
mov
xchg
xor
mov
lea
sub
movsl
gs
jg
or
fs
push
adc
and
xor
loop
pusha
mov
pop
inc
stos
dec
mov
cmp
pop
sbb
mov
jp
dec
mov
js
mov
sbb
push
pminsw
xchg
icebp
sbb
dec
decl
adc
dec
pop
mov
mov
or
xor
lret
sub
hlt
mov
das
aaa
stos
pop
sub
xchg
hlt
and
je
mov
cmp
and
lock
cmpsb
imul
sahf
out
mov
je
push
inc
std
bound
xchg
adc
mov
sub
sbb
jns
xor
test
js
aaa
mov
adc
add
cmp
sub
popf
fldenv
push
cli
gs
test
xorb
xchg
inc
pusha
mov
lods
mov
aas
push
enter
sub
call
dec
jl
sub
scas
iret
cmp
pushf
xchg
aas
popa
cli
or
stos
faddl
int
std
dec
or
jp
and
sbb
sub
clc
stos
and
jmp
fwait
adc
sub
push
dec
cmp
pop
jbe
subb
lock
or
pop
inc
cmp
aad
cs
add
xchg
adc
fstpt
pop
mov
ljmp
je
adc
pop
arpl
mov
out
jl
or
xor
cmp
jnp
jecxz
adc
aam
jmp
enterw
push
pusha
out
xor
stos
cli
lret
push
xorb
add
mov
sub
and
mov
push
div
stos
jbe
arpl
jns
movsb
sti
and
push
bound
lds
jp
ljmp
lahf
jb
inc
adc
call
lcall
inc
xchg
or
test
mov
pop
nop
paddw
jmp
dec
or
test
or
sarb
push
sahf
mov
adc
mov
inc
inc
pop
add
in
xchg
imul
sub
ljmp
fsubr
stos
test
dec
jnp
loopne
rcrl
dec
dec
int3
inc
or
pop
clc
aas
mov
out
test
and
pusha
push
or
test
js
mov
pop
fwait
negb
dec
add
sub
inc
divb
int
cmp
xchg
lods
shl
mov
in
push
fistps
iret
fsts
xor
sbb
pop
dec
ljmp
mov
and
and
dec
xchg
js
aad
pop
cmpsb
lods
mov
jg
cli
test
repz
inc
data16
dec
jo
push
adc
xor
xchg
mov
mov
add
les
xchg
mov
cmp
scas
rorl
fidivrl
or
bound
aam
mov
dec
xor
mov
jnp
jo
lcall
or
stc
push
lods
fnstcw
jge
jns
inc
push
cmp
cmp
inc
sub
cmp
and
bnd
xor
and
dec
enter
adc
dec
xor
adc
aam
fdivrl
ficoml
call
sub
jge
mov
aad
or
ja
stc
cmpsl
test
idivb
out
push
sbb
fldl
pop
jp
filds
xchg
lea
or
lods
loope
loopne
outsl
add
adc
jo
inc
xchg
mov
mov
notl
stos
push
jnp
mov
jnp
inc
ret
adc
xor
dec
inc
int
loopne
jle
fisttpl
xchg
pop
outsb
cmp
xlat
insb
enter
fs
or
sbb
stos
pop
movsb
clc
add
jecxz
mov
cwtl
lea
xlat
add
cld
cli
int
pop
cmp
jns
fwait
ljmp
jnp
dec
push
jge
xchg
repz
jns
pop
ss
mov
stos
push
dec
movsb
fcmovnu
adc
cli
into
imul
fcmovbe
sahf
pop
jns
cltd
and
push
jae
fwait
rorb
add
jbe
idivb
cmp
aaa
shlb
jnp
and
int3
imul
or
jnp
aam
test
jnp
xlat
test
js
in
push
popf
clc
adc
imul
out
xchg
push
sti
push
or
mov
hlt
push
scas
js
int3
xchg
mov
pop
jmp
mov
or
in
outsb
loopne
inc
jnp
cmpsl
shll
fsubs
and
mov
adc
int
mov
nop
jnp
mov
pushf
or
fisttpll
adc
mov
mov
and
stos
das
sti
inc
and
xchg
mov
minps
movsb
addr16
xchg
loope
nop
out
mov
andl
ret
imul
pop
daa
imul
or
mov
out
and
mov
mov
push
xor
fistpll
xchg
popf
mov
inc
sti
or
jo
je
xor
push
push
sub
insb
roll
pusha
test
aas
add
jae
sub
jmp
jnp
cmp
lcall
cmpsl
fiaddl
dec
lea
dec
push
lods
sarb
sub
xor
or
andb
mov
jnp
adc
imul
mov
jge
adc
pop
sbb
into
ret
mov
insb
jnp
push
outsb
and
xchg
mov
push
scas
lcall
mov
cld
mov
dec
adc
jnp
mov
pop
mov
or
test
add
or
roll
jns
scas
mov
mov
add
ja
nopl
jge
jmp
mov
out
dec
cwtl
jp
decl
and
jg
and
stos
jns
cmp
pushf
mov
in
daa
jns
xor
bnd
mov
lods
imul
inc
insb
cli
inc
test
adc
daa
cwtl
push
push
pop
mov
mov
xor
jl
jp
xchg
insl
mov
push
inc
sti
pop
gs
es
add
fdivrl
enter
fsubrs
add
loopne
push
lea
data16
jmp
adc
push
mov
add
or
mov
ja
and
push
stos
clc
pop
fwait
out
xor
inc
or
es
push
orl
test
mov
outsb
xor
sbb
mov
xchg
sahf
inc
xchg
pop
js
lock
jmp
movsb
outsl
inc
push
push
mov
dec
or
rcr
jle
or
mov
ljmp
mov
nop
xlat
stos
ja
mov
jg
inc
test
mov
jo
xchg
ja,pn
xchg
jle
jl
xchg
fwait
or
jbe
push
dec
repz
arpl
inc
inc
fistpl
fmull
ret
fwait
cmp
sub
sub
or
repz
pop
icebp
and
add
mov
ljmp
pop
cmp
mov
es
lods
sti
jbe
rcrl
fisubrs
outsb
mov
sahf
ret
add
inc
sbb
push
pop
orl
jge
outsb
cli
int
xor
pushf
jnp
mov
mov
add
or
mov
inc
or
mov
xchg
jnp
or
stos
xchg
cmp
aam
jb
sub
cmpsl
mov
push
shl
aas
rorb
adc
andb
push
lods
in
jl
addr16
and
mov
mov
jae
dec
add
and
push
pusha
int3
and
cmp
mov
dec
ja
lret
fistpl
clc
jo
sti
pop
xor
lods
push
cmpb
sbb
ljmp
jmp
ficompl
xor
sbb
insl
cmp
addb
iret
jnp
pop
push
sub
or
inc
in
push
and
mov
gs
add
mov
pop
enter
jecxz
pop
cmpsl
int
mov
pushf
and
adc
jnp
and
insl
jnp
iret
adc
push
test
pop
aaa
adc
xchg
lods
or
cli
test
jmp
jnp
push
mov
pop
sub
xchg
lods
in
or
mov
xlat
das
ret
cmpsb
jnp
xchg
cmpsb
iret
movsb
les
mov
xchg
mov
test
popf
jnp
mov
mov
jnp
sub
pop
fbld
mov
addl
push
iret
aas
jno
mov
out
and
lea
mov
sbb
movsb
jnp
in
fldl
test
dec
rolb
andl
cli
jne
mov
inc
lock
mov
jle
inc
pop
jns
jmp
mov
in
fwait
adc
icebp
insb
inc
popa
sbb
repz
cltd
cmp
xchg
test
pop
jge
mov
jp
lock
subl
std
mov
mov
loop
push
cmpsl
stos
pop
inc
jnp
xchg
test
jnp
shl
push
and
sub
jnp
pop
adc
jnp
rol
sub
daa
fsubrs
sub
mov
out
add
inc
mov
cs
test
adc
jns
add
cwtl
mov
in
push
xchg
sub
fistpll
xchg
adc
xchg
stos
ds
in
jnp
push
xchg
stos
aas
mov
dec
jno
and
mov
jnp
inc
inc
adc
test
inc
inc
mov
lods
loopne
add
popf
cs
ret
rcl
test
jge
pop
cmpsl
mov
xor
xchg
mov
sahf
jle
add
ret
and
test
pop
jmp
pop
test
das
imul
cmp
jbe
lcall
cwtl
dec
mov
inc
cli
mov
shlb
addl
pop
add
imul
insb
shlb
cmp
mov
mov
xchg
jno
mov
pop
xchg
jns
test
int3
ss
sbb
lock
add
cmp
pop
mov
fsub
nop
shl
ret
ja
mov
mov
mov
adc
push
imul
call
jns
cmp
xlat
int
pop
jle
and
jne
dec
xchg
push
push
push
std
mov
jb
aas
push
cmpsl
cld
insb
xorb
push
fdivp
adc
push
ret
or
cvtps2pd
inc
cwtl
xchg
add
out
or
pop
fcmovb
mov
inc
add
mov
std
fwait
push
xchg
mov
sub
sbb
insb
out
push
add
jp
lcall
jl
pushf
jnp
pusha
add
pop
mov
ja
call
sarb
out
or
ret
adc
mov
pop
insl
sub
or
ficoms
jnp
aam
lods
push
in
test
fyl2xp1
add
pop
pop
mov
pop
lret
sub
outsb
jp
lcall
lret
leave
or
enter
sarb
fldl
push
or
jnp
cltd
je
sub
out
mov
inc
cmpl
enter
sub
mov
or
je
call
lret
jmp
sub
arpl
pushf
adc
mov
ja
bound
in
mov
int3
fnstcw
xchg
test
cltd
das
cmp
ret
push
adc
pop
in
outsl
scas
pop
out
dec
loopne
cwtl
lods
nop
stos
ret
arpl
fdivrl
jmp
outsl
mov
test
jnp
jmp
aas
or
ja
test
fsts
jnp
sbb
mov
dec
xchg
test
movsl
and
adc
sub
aad
mov
ss
jnp
xor
push
mull
xor
or
lret
in
mov
jnp
mov
xor
imul
jns
push
inc
das
jnp
adc
add
sub
jnp
pcmpgtb
pop
out
sub
push
sbb
out
test
jnp
insb
add
movsb
mov
shr
rcll
mov
add
xchg
or
sbb
ja
jbe
stos
lods
pop
iret
stos
in
jnp
ja
jae
outsb
insb
jnp
xor
xlat
mov
jle
stos
add
push
mov
and
das
movsb
outsl
fwait
and
loop
lret
mulb
mov
fistpl
outsl
pop
dec
adc
popf
test
or
sbb
ja
xor
sbb
jns
shlb
in
pop
outsb
mov
stc
or
or
test
popf
dec
mov
testb
jle
imul
prefetchw
jmp
xchg
push
sti
cmp
imul
mov
sub
cmp
mov
test
mov
andl
dec
pop
sarl
cmpsl
mov
xchg
pop
jnp
jge
ret
mov
mov
insb
jae
test
orl
lahf
enter
xchg
test
mov
out
jp
jnp
mov
add
iret
xor
in
in
sbb
fdivrl
cmpsl
and
lock
mov
jnp
icebp
sub
ljmp
std
fs
imul
jnp
sbb
jnp
push
test
jnp
cmp
jmp
outsl
lret
sahf
es
sbb
stos
cltd
or
push
sbb
subb
mov
daa
test
sub
jp
jecxz
cmpl
arpl
popf
or
pop
xorb
inc
jnp
ljmp
or
mov
fimuls
pop
int3
jbe
pop
adc
pop
xchg
inc
jnp
insb
dec
lret
inc
add
push
or
faddl
out
sarb
push
repnz
cmpsl
xor
dec
push
je
ret
ja
sub
sbb
jnp
sahf
add
adc
sarl
sbb
ljmp
decb
sbb
mov
in
jnp
data16
jo
and
jnp
xchg
mov
repz
icebp
je
jbe
jnp
fs
xor
jmp
shrl
sub
pusha
mov
movsl
ficomps
test
or
out
or
mov
pop
shr
pop
das
subl
inc
jecxz
adc
gs
mov
inc
mov
lods
leave
in
pop
popa
aas
jnp
and
or
pop
mov
rcl
jnp
inc
cmpsl
imul
ds
mul
enter
sbb
inc
jnp
in
sub
jnp
lret
test
ds
test
popf
xchg
movsl
cmp
and
ret
sarb
push
push
and
add
jnp
pushf
gs
fwait
pop
xor
sub
mov
sub
jno
shlb
inc
mov
stos
pop
jg
int
nop
jnp
mov
xchg
mul
test
dec
jnp
or
stos
sbb
repnz
mov
adc
mov
std
aad
dec
cmp
push
add
jnp
mov
inc
dec
lds
ljmp
xchg
mov
cltd
ds
dec
cli
and
adc
shrb
cmc
push
mov
push
das
jo
and
mov
frstor
lds
mov
jnp
mov
int
sub
jnp
xchg
movsb
mov
jnp
jecxz
adc
xor
in
mov
mov
rcrb
cltd
rolb
pusha
lods
or
adc
or
cli
sti
mov
sub
or
cmpsl
lods
cld
jno
or
mov
mov
mov
jnp
fwait
mov
lods
pop
cwtl
mov
fidivs
cmp
xor
push
cli
jnp
cltd
fstl
dec
xor
mov
stc
mov
lds
push
lahf
inc
jle
jl
movsl
xor
popa
gs
lods
cmc
clc
push
aas
test
jns
rclb
nop
push
xchg
mov
mov
int
push
jnp
mov
jmp
out
adcl
in
outsb
xor
pop
add
lods
testl
pop
int3
inc
jnp
movsb
xor
pop
imul
push
ret
cld
sub
mov
jno
sbb
cmp
repz
aas
inc
ja
jmp
outsl
adc
xchg
add
mov
call
push
mov
lea
fcmovnbe
xchg
add
push
je
fists
addr16
jge
arpl
sbb
sbb
cmp
and
push
mov
mov
ss
scas
xor
ret
sbb
or
or
ss
rcrb
fildl
aam
pop
clc
jo
pop
mov
inc
or
xchg
inc
cli
mov
mov
jnp
push
out
imulb
xchg
cmp
call
mov
lcall
dec
jnp
movsl
push
out
sub
adc
jmp
jnp
inc
movsl
repnz
xchg
lods
xlat
jnp
loopne
mov
xchg
jnp
dec
mov
js
mov
leave
adc
add
lcall
ret
nop
test
jmp
jnp
mov
adc
dec
lahf
ret
jl
test
mov
sti
xchg
test
jnp
mov
sahf
add
dec
pop
mov
or
mov
cwtl
sar
jns
xchg
test
xor
inc
adc
enter
mov
pusha
jnp
or
sti
pop
xor
xor
repnz
add
sti
push
inc
mov
sub
cs
jae
fildll
imul
stos
mov
loope
rcrb
sub
jg
in
faddp
pop
subb
cmc
test
fdivl
inc
jnp
jg
daa
mov
and
repnz
cmp
lcall
xlat
cmp
outsl
movsl
pop
cwtl
daa
cli
aam
jnp
inc
scas
xchg
mov
aaa
jnp
add
mov
xchg
repz
ret
outsl
or
jecxz
mov
je
dec
sbb
stos
mov
jg
xchg
or
pop
fs
out
lahf
or
ds
fucomi
mov
mov
ret
stos
stc
enter
jnp
int3
in
dec
inc
mov
push
lcall
mov
lds
cs
dec
loopne
lea
out
data16
inc
inc
mov
sub
repnz
out
stos
outsl
add
out
add
push
ja
fs
sbb
call
insl
mov
jnp
std
nop
adc
cs
jnp
rcr
add
sbb
fidivrs
call
jnp
lods
or
rclb
aam
mov
jle
pop
push
dec
mov
cli
hlt
out
or
sar
xor
jnp
lds
cwtl
test
int
or
cwtl
jge
jg
lea
iret
dec
mov
outsl
lahf
inc
jge
loop
cmp
outsb
rorl
sbb
push
adc
inc
out
jnp
hlt
cld
cs
lret
ret
mov
jns
inc
inc
xchg
test
pop
dec
outsl
fldt
sbb
es
sti
repnz
out
imul
ficoms
test
jp
cmp
je
mov
lea
testl
in
add
inc
jnp
pusha
das
fldcw
arpl
jne
jnp
inc
sete
or
inc
push
mov
fldcw
fs
dec
movsb
lods
adc
sysenter
adc
ret
pop
in
push
or
stos
int3
jnp
lods
mov
push
movl
jecxz
fwait
les
pusha
lds
gs
sbb
mov
mov
mov
xchg
ret
xlat
lcall
or
pop
sarb
jmp
jae
mov
cmp
lods
cwtl
loop
mov
imul
scas
pop
xor
push
pop
pop
sbb
inc
addr16
mov
adc
mov
cmp
loopne
and
sub
inc
in
bound
stc
jnp
clc
xchg
jnp
and
push
push
jnp
leave
pop
mov
das
aam
ja
and
push
cmp
ds
out
xor
pop
sbb
pop
addr16
jnp
mov
adc
pushf
push
jnp
cmc
fs
mov
es
ds
lcall
cmp
bound
pop
mov
dec
ficoms
inc
mov
push
into
add
imul
sbbb
sub
cmp
push
sub
scas
lret
sbb
arpl
aam
cmp
jp
jnp
jg
mov
lods
in
jnp
mov
flds
dec
add
std
cmpl
jecxz
or
add
cwtl
daa
clc
sahf
pusha
jnp
push
push
inc
lret
pushf
mov
jnp
hlt
dec
mov
repz
push
or
ret
xchg
lods
out
enter
or
jns
xchg
test
and
incl
jns
ret
dec
pusha
xorl
sar
cltd
fidivrs
and
adc
lret
mov
cmpsb
sti
lcall
mov
push
mov
jge
addr16
fsubrs
jae
mov
mov
lods
test
sbb
jnp
sub
xor
ljmp
mov
mov
xor
sbb
je
dec
jnp
inc
aad
mov
push
pop
mov
push
ja,pt
pop
xchg
mov
push
or
addb
xchg
mov
push
inc
mov
push
jnp
and
insb
xor
pop
inc
lret
jecxz
imul
sub
inc
cmp
loope
jmp
or
push
mov
movsl
sub
pop
scas
add
cltd
bound
loop
mov
cmpsb
cmp
in
test
lea
fdivrs
push
jge
or
jmp
and
loop
push
mov
pop
jnp
sub
out
jnp
roll
dec
popf
or
sbbb
fs
shlb
mov
fists
rolb
xor
orb
mov
mov
mov
jnp
dec
sbb
aas
or
xchg
scas
cmp
dec
lds
mov
inc
int3
sub
xchg
mov
pusha
mov
adc
pushf
addb
xchg
mov
movb
test
and
adcl
pushf
sti
jo
cli
push
inc
inc
loopne
inc
jnp
insb
aam
dec
xor
xchg
pop
push
sbb
cmpsl
imul
and
inc
sub
repnz
dec
out
push
jmp
push
imul
insb
fcmovbe
sti
push
dec
add
shrl
inc
dec
adc
dec
jmp
lods
push
cwtl
aam
mov
mov
pop
sbb
aad
shrl
cmc
addr16
jnp
pop
lods
fistl
mov
jnp
shrl
sti
xor
inc
sbb
fstpt
loopne
mov
cmp
sub
bound
sar
push
lods
jnp
mov
aaa
inc
push
jnp
and
adc
ja
or
das
fsubl
flds
jnp
cmpsw
mov
push
push
in
cmc
je
pop
mov
mov
bnd
iret
daa
rcrb
push
xor
js
mov
xchg
inc
jnp
fsubp
add
ds
xor
jns
inc
pushf
lods
out
jecxz,pn
shrl
inc
lea
mov
push
add
pop
mov
mov
ret
or
xor
push
inc
or
or
push
iret
jl
imul
cmp
adc
addr16
sub
jae
xor
ljmp
push
dec
movsl
xchg
fwait
push
lret
fimuls
je
repz
push
sarl
cmp
jnp
fldcw
cmp
lret
aad
sti
xor
mov
fdivs
inc
push
dec
and
sbb
jbe
lds
movsb
pop
shlb
jnp
xchg
mov
sbb
jl
cmpsl
shrb
xorl
rorl
inc
into
sbb
jnp
int
int3
pushf
mov
test
cld
notb
or
out
dec
jnp
out
cmova
xchg
mov
xchg
sub
push
ret
int3
scas
jnp
jns
ds
popl
cli
lcall
push
fwait
jecxz
jnp
ficoms
inc
mov
push
push
pop
xchg
push
iret
mov
and
inc
push
push
int3
or
jmp
mov
xchg
sub
pop
mov
cmpsl
xor
xchg
jae
sbb
rorb
bound
mov
or
fistps
mov
add
sub
fstpt
test
aas
jmp
sbb
aaa
popf
lahf
sbb
inc
es
loop
js
sub
sub
adc
das
or
mov
dec
mov
pop
lahf
lea
adc
jmp
jnp
iret
adc
shlb
into
int3
shll
or
adc
lret
pusha
pop
dec
xchg
popa
jmp
repnz
addr16
out
jo
xor
lret
push
sti
and
sbb
cmp
lea
iret
jnp
sbb
aad
sub
mov
sub
out
mov
call
ja
jecxz
cmp
pop
xchg
jp
ljmp
push
cmc
jns
iret
sub
daa
xchg
jle
pop
jecxz
in
das
test
lret
cmc
mov
xchg
or
cmpsb
inc
clc
icebp
adc
xchg
test
and
sub
std
cmpsb
in
mov
dec
je
inc
jp
pop
adc
popa
bound
push
cltd
add
das
mov
mov
add
or
jo
shlb
je
lea
jnp
movsb
cwtl
mov
lods
pop
jnp
sahf
popf
fidivl
sbb
loop
stc
insb
pop
push
mov
ja
xchg
mov
fucomi
mov
fidivs
daa
test
jnp
in
pop
xchg
hlt
rcll
jnp
inc
mov
pop
jae
sub
cmp
hlt
adcb
divb
sti
adc
push
jae
or
xor
cmp
iret
jnp
shrb
test
pop
adc
jnp
add
mov
xchg
pop
or
icebp
cld
push
mov
mov
add
mov
jns
push
push
xlat
xchg
add
loopne
mov
cmp
movsl
outsl
mov
lret
fistpl
int3
xor
out
cwtl
push
and
sbb
fwait
outsb
jnp
mov
xchg
mov
es
enter
lods
push
push
aaa
jnp
and
pop
cmp
jnp
xor
jnp
dec
fisubrl
or
shll
mov
xchg
lret
mov
icebp
jnp
and
mov
repnz
mov
jns
ljmp
mov
sbb
mov
adc
jns
rcll
dec
ja
add
out
xorl
xchg
dec
adc
fsts
popa
shl
imul
call
fisubrl
popf
stos
jnp
xchg
fisttpl
out
push
in
or
mov
imul
insb
add
gs
jge
jnp
mov
aad
scas
jnp
adc
loopne
dec
repnz
pop
icebp
jl
sub
js
leave
shrl
jecxz
imul
mov
jp
dec
scas
cwtl
jnp
or
fwait
cltd
add
rep
pusha
sub
mov
mov
jns
sub
xchg
fnsave
mov
insb
test
mov
stc
pop
bswap
adc
mov
js
ja
mov
aas
je
mov
aad
mov
jnp
cmpsl
lcall
ret
dec
cmp
xlat
and
ds
mov
jns
mov
mov
lret
out
inc
jnp
cltd
push
pop
sub
fs
ja
lret
cmpsb
xchg
mov
adc
out
add
icebp
cld
ss
lret
das
pop
dec
test
jnp
loope
ljmp
ds
test
call
push
jnp
sahf
push
shlb
jnp
jecxz
pop
push
shl
dec
and
adc
shlb
add
cmp
stos
push
sbb
jo
f2xm1
xor
movsb
push
xchg
lcall
xor
cmp
lcall
cmp
push
cwtl
jbe
data16
addr16
push
ficoml
add
cs
repnz
xlat
movsb
inc
out
ret
mov
nop
xchg
adc
jae
jb
sbb
inc
ja
loop
es
mov
fisubs
sbb
push
push
lcall
pop
push
mov
mov
dec
addr16
fisttpll
fisubrl
cmpsl
lcall
dec
imul
pop
sub
sbb
push
test
dec
lret
lret
mov
jp
sti
sti
jg
notl
cmp
xchg
pop
dec
mov
cmpsl
repz
sub
lcall
fistpll
sub
sub
leave
jae
mov
sar
dec
lcall
test
je
xchg
outsl
inc
push
mov
cmp
mov
dec
sub
mov
dec
lcall
jmp
sti
sbb
and
push
pop
jmp
lcall
lcall
mov
sbb
inc
mov
push
cmp
push
cltd
mov
cmp
push
push
lcall
pop
xlat
sub
mov
pop
inc
mov
std
pusha
or
xor
mov
or
sti
in
sub
ljmp
negb
jmp
jg
arpl
mov
stos
ja
enter
jb
pop
mulb
in
fldcw
cmp
mov
imul
inc
xchg
mov
mov
xlat
in
pushf
jp
sub
xchg
jp
cltd
jge
inc
push
cmp
ja
sahf
or
jnp
xor
mov
cmp
scas
insl
mov
in
mov
insb
mov
mov
das
jb
xchg
inc
jnp
loopne
data16
imul
push
mov
mov
cltd
sub
dec
repnz
jns
scas
inc
jnp
into
lret
mov
inc
cmp
aam
sub
jns
add
mov
sbb
or
pop
arpl
adc
cli
jmp
push
xchg
jmp
cmp
lcall
mov
jle
addr16
sub
xchg
mov
xor
lds
dec
rcll
dec
popa
xchg
cmc
es
ss
dec
sub
cmp
pop
pop
scas
fidivl
in
xor
mov
cmp
pusha
aam
ss
pop
and
pop
cmp
scas
loop
das
push
fcoml
dec
add
cmpsl
mov
pop
push
mov
adc
mov
mov
insl
imul
push
dec
aaa
jnp
clc
jg
xor
das
cmc
adc
sub
out
jnp
lods
mov
add
repz
dec
sbb
outsl
aaa
imul
or
sub
jb
jns
ss
cmp
push
mov
and
cmp
mov
out
pop
arpl
push
ja
sub
cmp
xchg
loope
addr16
cwtl
jecxz
jae
outsb
push
pop
sbb
cmp
arpl
in
cmp
jl
pop
ss
xchg
mov
or
imul
or
dec
pop
test
out
pop
mov
lcall
sub
sub
icebp
mov
repnz
or
pop
pop
imul
push
mov
or
sub
aaa
or
pop
mov
cmp
jns
lcall
sbb
cmp
test
ds
imul
inc
pop
jbe
or
add
jbe
add
pop
dec
cmp
sar
jle
sti
mov
lret
jbe
lcall
jae
ficomps
imul
pop
push
fucompp
fdivl
dec
cmp
cmp
sbb
or
cmp
lcall
mov
sbb
imul
outsl
push
ljmp
sbb
imul
cwtl
les
jp
loope
test
jl
pop
push
int3
push
cmp
dec
sbb
notb
xor
dec
pop
adc
loopne
lods
push
inc
pop
rdmsr
fucomi
cmpsl
push
push
pop
cmp
repnz
data16
add
push
cmp
xor
ljmp
ljmp
xchg
pop
arpl
cs
ljmp
sub
rcrl
pop
ljmp
mov
and
xor
dec
pop
push
cmp
repnz
addb
mov
jge
dec
sbb
xor
cmp
repnz
ja
dec
inc
pop
push
xor
ljmp
or
mov
ljmp
insb
push
add
xor
xor
cmp
repnz
push
sub
ljmp
clc
push
nop
pop
pop
xor
ljmp
push
inc
repnz
mov
ljmp
subl
mov
sbbb
pop
repnz
scas
arpl
pop
push
adc
xor
cmp
jno
inc
xor
fcomps
cmp
cmp
rcrl
imul
ss
pushw
std
pop
leave
xor
cmp
repnz
pop
sub
imul
ret
pop
pop
pop
xor
push
mov
xor
ljmp
push
push
in
pop
mov
pop
sbb
out
mov
jg
jp
push
pop
loop
scas
ljmp
jne
inc
xor
ljmp
aas
push
xlat
pop
mov
cmp
push
pop
sarb
sahf
repnz
xor
cltd
ljmp
int3
push
fs
das
xor
ljmp
ss
imulb
mov
xor
cmp
lock
mov
pop
pop
cmp
repnz
orl
sbb
xor
cmp
jns
dec
xor
loopne
lods
cmp
inc
push
fistpl
ss
jae
ljmp
nop
mov
cmp
cltd
jmp
lods
push
xchg
fidivl
jne
ljmp
push
pop
sub
div
dec
repz
add
sbb
repz
das
add
test
repz
add
imul
cvtdq2ps
cmp
or
scas
pop
xchg
and
cmp
ds
xorb
add
push
add
dec
out
repz
out
divb
jecxz
sub
add
pop
pop
adc
xchg
xchg
cmp
lret
mov
ds
jecxz
pop
ret
add
lret
aas
fnstenv
mov
sbb
pop
nop
cmp
clc
jmp
ds
mov
cmp
fwait
mov
stos
imulb
add
imul
div
mov
call
sbb
fsts
negb
stos
ja
bound
imul
in
add
mulb
jmp
fxch
outsb
arpl
mov
mov
push
cmp
cmp
mov
inc
cmp
mov
cmp
cmp
mov
xor
cmp
cs
sub
cmp
es
and
cmp
push
mov
stos
mul
sbb
adc
inc
adc
or
lahf
push
add
xchg
repz
add
jns
fildll
cltd
popa
out
pop
push
ficomps
rcrb
es
cltd
sbb
pop
pop
push
mov
pop
imulb
pop
fisubs
pop
xchg
cltd
mov
mov
xchg
jle
mov
pop
jle
cltd
je
pop
or
cmc
repz
bound
testb
inc
push
add
xor
and
insb
xchg
inc
mov
dec
pop
jns
cltd
out
cmp
aad
cmp
mov
stos
mov
pop
cmp
cmp
mov
pop
nop
clc
and
pusha
outsb
sbb
mov
xchg
mov
mov
or
jno
add
out
jmp
fxch
outsb
add
mov
xchg
lahf
adc
adc
mov
icebp
ds
sti
jb
in
add
loop
jmp
aad
in
cmp
loope
mov
mulb
adc
insb
adc
testl
int
cmp
lds
cmp
and
add
imul
mov
pop
fidivl
shrl
lods
jb
movsl
add
imul
popf
pop
out
cmp
pop
pop
xchg
xchg
dec
adc
mov
ds
test
sbb
add
mov
subl
aas
sarl
mov
jno
out
mov
bound
mov
pop
cmp
pop
pop
pop
out
cltd
fsts
iret
push
cltd
rorl
mov
cltd
test
cmp
xchg
jns
pop
pop
outsl
sbb
popa
sbb
push
adc
ds
xor
pop
pop
es
cltd
sbb
pop
pop
push
in
cltd
add
pop
pop
mul
cltd
in
fcompl
repz
test
repz
pop
pop
movsb
mov
pop
mov
repz
mov
mov
stos
test
repz
add
imul
jp
pop
cmp
clc
popa
test
cmp
xorb
repz
bound
jo
jbe
pop
cmp
clc
pop
push
mov
pop
cmp
mov
dec
cmp
ds
aas
mov
cmp
cmp
fldt
fiadds
lret
jo
dec
lea
sbb
and
mov
imul
orb
sti
mov
leave
sbb
sbb
mov
mov
inc
push
jp
es
lcall
cli
sub
push
pop
sti
sbb
jp
adc
push
mov
dec
cli
out
fidivrl
or
repnz
fidivl
xchg
ljmp
cmp
ss
cmc
dec
jns
outsl
in
pop
pop
imul
repz
icebp
mov
inc
sbb
cmp
mov
mov
divb
fisubrl
jl
in
inc
sbb
cmp
in
push
int3
sbb
fidivl
sub
clc
jmp
mov
adc
imul
mov
add
insb
sbb
ficompl
negb
repz
jmp
jae
stc
xchg
push
ds
sub
sbb
jmp
xchg
jmp
sbb
fsts
sub
sbb
leave
cmp
mov
in
mov
sbb
mov
imul
fisubrl
cmp
cmp
mov
cltd
pop
sub
mov
pop
fldpi
ljmp
add
repnz
cmp
lahf
imul
lcall
mov
push
mov
sahf
jmp
mov
ljmp
out
jmp
cmp
or
sub
negb
insb
lcall
pop
xchg
mov
sbb
pop
jmp
mov
add
mov
xor
cmpsb
pop
pop
sub
insb
leave
pop
cmpsb
jmp
mov
add
repnz
cmp
mov
xchg
mov
and
cmp
pop
mov
rcrl
dec
pop
adc
lods
inc
outsb
stos
pop
cmp
sbb
stos
jmp
mov
add
repnz
pop
scas
out
mov
mov
int
in
pop
push
or
ds
test
cmp
xchg
jl
mov
dec
xor
pop
mov
testb
push
sbb
sbb
dec
or
pop
or
in
ss
repnz
cmp
xchg
pushf
or
pop
xchg
dec
cltd
sub
insb
imul
stos
sbb
jp
in
push
mov
inc
in
dec
jmp
inc
in
sbb
or
push
pop
pop
fwait
lds
or
sti
inc
outsb
mov
cmp
dec
cli
xor
idivb
ljmp
out
or
lret
cmp
pop
cltd
fidivrl
inc
pop
mov
mov
ljmp
out
jl
push
lret
pop
lea
xchg
mov
into
pop
cmp
pop
sub
into
or
ja
imul
in
mov
ljmp
out
mov
scas
ja
imul
mov
in
push
cltd
push
testb
out
stos
sbb
cmp
bound
sub
mov
mov
cld
pop
rorb
sbb
pop
dec
jmp
pop
xor
or
repnz
pop
ss
cli
cmp
mov
lods
sbb
outsb
ficomps
jmp
dec
ficomps
outsb
pop
insb
mov
xchg
lret
pop
pop
or
scas
imul
push
pushf
pop
push
pop
lret
cmp
cs
je
or
and
mov
dec
leave
int3
or
dec
and
imul
rcrl
and
ljmp
pop
test
mov
push
xchg
lret
dec
mov
jb
ret
testb
dec
add
or
cltd
imul
or
mov
mov
dec
ret
push
cltd
or
mov
sub
pop
mov
dec
or
stos
add
mov
int3
mov
pop
xor
mov
dec
and
ljmp
or
dec
add
inc
mov
test
repz
mov
mov
add
add
mov
push
xchg
std
dec
mov
sub
leave
dec
sbb
pushf
mov
and
dec
dec
mov
stc
popf
cmp
pop
leave
add
sarb
sub
stc
cmp
mov
call
cmp
pop
cmp
and
testb
repz
mov
je
outsb
xor
adc
ja
xchg
sub
ss
push
ficoms
pop
jae
insb
pusha
mul
lock
cld
inc
pop
in
dec
cmp
int
call
and
cmp
lret
sub
jne
ja
test
mov
lods
ss
dec
cmp
lret
cli
mov
jae
movsb
push
insl
loope
jns
cmp
test
std
push
das
jmp
pop
pop
jmp
or
push
dec
fmuls
lcall
or
int3
xor
sbb
mov
insb
pop
add
stos
cmpsl
addr16
sahf
ficompl
cmp
clc
cmp
cltd
sub
mov
repnz
in
mulb
pushf
in
mov
sub
out
dec
cmp
mov
cld
sbb
pop
xor
cmp
sub
inc
fidivl
stos
sbb
sub
dec
sti
pop
xor
and
pop
sbb
cltd
lret
and
or
mov
clc
sbb
or
sub
sub
cli
neg
fisttpl
mov
stos
sbb
pop
jmp
insb
cltd
hlt
in
lcall
pop
call
push
call
pop
push
imulb
cmp
jne
sub
sbb
cmp
mov
mov
xor
test
cmp
icebp
fsts
ficompl
movb
mov
inc
sub
mov
pop
out
jns
shlb
pop
rorb
imul
push
lret
jmp
jmp
push
cmp
jmp
sbb
icebp
sbb
sbb
lcall
adc
jae
adc
ss
sub
repnz
pop
sub
insb
pushf
push
repnz
sbb
testb
test
mov
imul
sub
gs
and
or
cld
cld
ficomps
mov
inc
sbb
in
sbb
fcompl
pushf
ficompl
jmp
mov
fdiv
sti
adc
jmp
mov
fdivs
mov
cmp
sub
cltd
push
lods
pop
jmp
mov
sbb
pushf
ss
pop
imul
pop
mov
mov
fs
out
leave
cmp
ljmp
mov
or
pop
mov
out
push
sub
xchg
test
ss
test
push
cmp
or
dec
stos
xor
outsb
cli
insb
mov
cmc
mov
ret
cmp
or
dec
push
jne
pop
or
xchg
pop
les
sub
ds
xor
or
jmp
outsb
test
sub
test
loope
ss
rcrb
pop
lret
jmp
mov
push
lds
notb
repz
sub
sbb
mov
ljmp
add
cmp
add
sub
or
fimull
imul
test
lret
pop
in
push
push
sub
sub
sub
fisubrl
push
inc
pop
cli
mov
test
sub
xchg
jmp
cmp
div
jmp
lods
mov
clc
repz
divl
pop
not
inc
sub
sti
pop
cmp
pop
dec
xor
int3
sub
pop
xchg
or
sub
call
inc
sub
add
fistpl
xor
int3
sub
pop
fimull
cltd
stos
lods
dec
and
fisubrl
pop
jns
in
clc
inc
pop
sbb
icebp
addl
jmp
xorl
pop
int3
sub
ficompl
jmp
mov
push
or
testb
cmp
mov
movsb
xor
sub
push
xchg
jmp
mov
ljmp
lods
inc
insb
push
sbb
ficompl
insb
loopne
js
sbb
loopne
cmp
outsb
and
sub
and
sub
out
insb
cmp
out
sub
pushf
mov
xor
xchg
sbb
cmp
or
cmp
pop
or
cmp
faddl
cmp
pop
stc
mulb
stos
mov
ljmp
ss
popa
imul
popa
fnstenv
aas
stos
pop
dec
cwtl
je
sbb
sub
cmp
pop
sub
cmp
mov
xchg
sbb
pop
or
mov
cmp
or
pop
inc
or
pop
nop
icebp
stos
ljmp
out
sub
mov
sbb
pop
pop
cld
nop
je
sbb
imul
test
aaa
mov
push
jae
adc
imul
or
jnp
ds
fnstcw
leave
out
jecxz
sub
and
and
sbb
outsb
out
mov
out
or
aaa
mov
push
aaa
inc
pop
cld
negb
jmp
mov
ljmp
out
jmp
sub
pop
cmp
pop
sub
or
xor
int3
xor
xchg
mov
dec
mov
dec
cmp
pop
cmp
pop
in
cmp
push
lods
xchg
sti
out
ds
ficompl
jmp
mov
lods
inc
pop
mov
jl
ret
pop
jl
insb
loopne
push
sbb
fdivrl
xor
sbb
pop
or
pop
cmp
pop
dec
jmp
mov
js
fcompl
cld
ficompl
imul
jmp
mov
adc
imul
mov
add
mov
cld
ficompl
neg
repz
cmp
push
cltd
mov
inc
sub
inc
jp
mov
jmp
mov
cmp
lret
pop
xor
insl
add
repnz
pop
insl
repnz
fimuls
mov
outsl
dec
add
popa
fisubrl
repz
xor
jmp
mov
bound
xor
fwait
imul
repz
mov
cmp
rorl
roll
dec
outsb
aad
cltd
jmp
pop
aad
imul
mov
test
pop
mov
dec
fsubr
dec
jae
mov
dec
push
mov
jnp
jae
fstpt
sub
fistl
fucompp
xor
dec
int3
mov
mov
bound
sub
cmp
mov
pusha
sbb
pop
mov
cli
inc
outsb
lods
pop
dec
jmp
dec
lods
sarl
dec
pop
ja
sub
or
cmovp
ss
pop
test
lret
es
and
cld
mov
xchg
push
mov
push
xor
pop
jns
xor
in
fdivl
jae
sub
ss
pop
or
sub
jnp
or
ds
in
xor
xchg
pop
xchg
ds
pop
int3
sub
in
cld
or
lods
xor
mov
add
cltd
dec
ss
sbb
out
mov
mov
cltd
push
and
ficompl
imulb
jmp
mov
out
mov
cld
mov
inc
push
shll
cld
xchg
sbb
sbbb
and
stos
out
subb
pop
mov
dec
mov
pop
pop
ljmp
jmp
or
pop
mov
flds
pop
mov
add
cmp
leave
fucompp
dec
mov
aas
adc
in
dec
inc
sub
jmp
mov
ljmp
out
cld
cmp
cmp
or
pop
test
mov
insb
lcall
jns
jmp
imul
imul
sti
xor
cmp
pop
pop
pop
aaa
push
mov
pop
pop
sub
insb
fisttpl
xchg
cli
cmp
push
pop
pop
stos
aaa
insb
mov
pop
xchg
cltd
sbb
dec
push
xchg
movsb
jnp
cwtl
jl
ds
or
adc
cmp
mov
das
push
pusha
out
xor
jb
cmp
fstpl
in
cmp
mov
das
sbb
dec
xor
cmp
insb
cli
sub
pop
xor
jnp
jae
dec
hlt
sub
pop
mov
inc
push
push
xor
lods
pop
mov
lcall
xchg
lcall
lcall
and
jl
mov
cmp
mov
mov
bound
repnz
out
pop
cmp
mov
xchg
stc
xor
jnp
jae
fcomi
lock
and
pop
lock
cmp
cmp
mov
xchg
mov
pop
sub
push
repz
mov
xor
sbb
sbb
and
out
pop
ss
or
cltd
jmp
shl
pop
sti
test
or
jmp
mov
adc
pop
pop
xor
cmp
add
dec
adc
cmp
les
ficompl
lea
int3
cwtl
mov
pop
mov
insb
cld
push
jmp
push
repz
or
pop
fwait
jmp
mov
push
in
cld
pop
mov
icebp
repz
mov
xor
adc
pop
cltd
insb
adc
stc
bound
test
inc
outsb
adc
jmp
pop
adc
cmp
dec
push
adc
out
cmp
pop
add
sbb
dec
cmp
inc
outsb
cltd
insb
stos
push
sti
out
mov
sub
cmp
out
popf
cwtl
pop
idiv
repz
fstps
shlb
pop
rol
jnp
cmp
lea
scas
insl
push
outsb
mov
out
ljmp
push
lea
pop
pop
mov
or
cmp
out
or
ss
sbb
jnp
pop
inc
ds
dec
cli
xor
stos
testb
out
mov
xor
ficompl
mov
cltd
pop
mov
aas
mov
jmp
lcall
insb
dec
jmp
jp
pusha
popf
fsubr
dec
mov
out
pop
pop
dec
mov
insb
mov
icebp
cmp
push
mov
xchg
mov
mov
mov
sbb
cmp
arpl
sbb
aas
ss
arpl
cmp
pop
addr16
mov
stc
pop
addr16
push
pop
cltd
jle
and
rcr
fcmovnu
jne
xor
mov
cltd
stc
fisttps
push
sub
fisubrl
add
int3
fists
mov
jmp
pop
fcomip
fwait
push
push
sbb
pop
jnp
mov
ds
xor
es
jmp
scas
jmp
popf
sbb
scas
mov
mov
pop
xlat
mov
cmp
leave
cmp
sahf
cltd
cmp
xlat
andb
jo
pop
mov
stos
mov
clc
stos
xchg
jns
cwtl
fdecstp
mov
lahf
call
popf
dec
outsb
fldcw
in
clc
fldcw
cltd
pop
out
mov
out
mov
repz
mov
xor
cmc
pop
pop
mov
sbb
sub
jge
fcoml
pop
sbb
lods
mov
mov
xor
or
insb
cmp
jmp
mov
add
pop
jno
in
cmp
mov
ret
sbb
pop
mov
lock
std
xor
clc
int3
ret
push
sbb
int3
ficomps
mov
sub
pop
cltd
pop
mov
bound
pop
jnp
cmp
pop
pushf
out
mov
nop
jnp
icebp
in
out
stc
mov
or
jmp
push
stc
jnp
cld
cmp
mov
mov
sub
into
or
outsb
sub
dec
sub
outsb
add
icebp
in
ljmp
mov
mov
xor
ficomps
notb
stos
mov
mov
push
sbb
sub
je
pop
sub
cld
jmp
mov
add
lods
scas
ss
out
aam
or
cltd
lret
sub
dec
test
push
xchg
cmp
sub
ret
pop
ss
cmpsl
jae
ljmp
push
push
in
pop
mov
pop
and
in
repnz
sbb
out
mov
jg
dec
mov
push
jp
inc
xor
ljmp
inc
push
fcompl
xor
pop
or
xlat
jge
outsl
lahf
jne
xor
ljmp
xor
cltd
xor
xor
add
int3
repnz
push
das
pop
sti
xor
ljmp
cmp
bnd
pop
pop
and
pop
mov
pop
repnz
lock
ljmp
cmp
xchg
push
out
mov
jle
dec
pop
adc
push
dec
pop
adc
loopne
lods
pop
js
inc
repnz
xor
ljmp
pop
add
pop
imul
rcrb
lcall
cmp
cs
pop
xchg
xor
sub
cmp
repnz
sub
xor
ljmp
out
push
xchg
jne
xor
ljmp
sbb
mov
jge
dec
ljmp
jl
inc
adc
xor
inc
pop
push
cmp
repnz
push
cmp
ljmp
or
mov
ljmp
addr16
push
lret
xor
sub
movsl
xchg
aaa
std
mov
cltd
xchg
sbb
mov
sahf
xchg
jns
leave
je
stos
outsb
push
adc
cmp
fdivr
cmp
outsb
and
cli
popf
insb
popf
sub
subl
cmp
leave
lods
in
lea
jl
cltd
pop
fstpt
cltd
xor
jg
stc
jg
pop
jge
mov
jno
inc
cltd
or
fcmove
iret
idivb
popf
sub
pushf
jg
cld
stc
jge
pop
xchg
sub
cltd
subl
jle
hlt
jp
xchg
fnstcw
xchg
cmp
jmp
pushf
pushf
loopne
and
xchg
jl
je
lea
mov
dec
add
sub
adcl
pop
out
jle
mov
add
sbb
mov
stos
into
stc
pop
es
outsb
pop
pop
push
testb
adc
mov
and
mov
pop
lcall
ljmp
dec
int3
mov
dec
mov
dec
hlt
pop
push
sub
imul
mov
movsb
lcall
pop
sbb
pop
cld
pop
xor
sarb
add
xchg
mov
gs
mov
push
negb
mov
shrb
imulb
sbb
cltd
push
sub
add
and
mov
subb
gs
pop
dec
pop
rcll
jmp
mov
not
add
sbb
or
inc
push
inc
divb
into
or
and
divb
sbb
ja
push
cmp
and
ret
pop
sbb
inc
pop
dec
js
lods
xlat
push
dec
hlt
sti
push
cmp
into
insb
pop
jns
push
dec
orl
mov
sub
mov
negb
xchg
jns
cmp
jmp
jns
bound
fcompl
mov
idivb
insb
jmp
mov
sbbl
fcompl
out
negb
sbb
pop
cli
jne
sbb
notb
sbb
pop
push
dec
pop
mov
jmp
mov
pop
and
and
cmp
mov
jb
mov
cmpsl
add
sbb
xor
dec
mov
test
sub
pop
into
sbb
cmp
out
stos
jmp
pop
adc
pop
shrb
test
sbb
stc
push
pop
xchg
xchg
mov
or
sti
es
pop
dec
and
pop
fs
shl
cltd
loopne
inc
push
adc
dec
icebp
push
sbb
jno
jg
insl
stc
sub
xchg
icebp
sti
fisubrl
or
test
sub
cmp
dec
out
add
xor
cltd
mov
inc
cmp
divb
jb
mov
subb
gs
pop
dec
pop
cmp
push
repz
mov
idivb
dec
and
sbb
je
repnz
fmull
inc
pop
jne
mov
push
loopne
in
xor
stc
sub
notb
int3
add
jg
sti
stc
xchg
jge
mov
and
mulb
mov
or
jns
mov
push
testb
xchg
fcoml
push
push
imul
xchg
in
or
push
sub
fwait
mov
xchg
out
enter
cli
popa
gs
fwait
mov
jp
scas
push
mov
jle
jmp
stc
mov
xchg
das
cmp
pop
jmp
pop
dec
jno
cmpsl
outsb
push
pop
lcall
stc
and
sub
jp
sub
cmp
mov
sbb
or
inc
cmpsl
dec
jb
stos
shll
cmp
cltd
xor
mov
and
mov
cmp
cltd
nop
out
mov
mov
jl
es
insb
mov
jmp
sub
xor
inc
mov
add
pop
push
cltd
and
push
jns
lahf
jmp
imul
fwait
mov
mov
dec
clc
pop
xchg
repz
push
cmp
xor
xchg
hlt
push
mov
push
cmp
xor
xchg
mov
mov
push
cmp
cmpb
dec
pushf
ljmp
out
mov
and
jmp
mov
push
orl
mov
sub
cmp
dec
jg
cmp
ljmp
push
cld
cltd
add
pop
test
mov
fwait
sbb
popf
sub
int3
sbb
pushf
xchg
fsts
mov
jmp
lods
insb
out
cltd
pop
pop
pop
inc
lahf
insb
mov
xchg
jns
mov
gs
movsb
mov
push
xchg
mov
and
aam
pop
sbb
add
pop
jl
out
pop
cmp
daa
push
stc
cmpsb
xchg
pop
adc
cltd
lahf
jmp
xor
repz
mov
cld
sub
sbb
push
hlt
jp
xchg
flds
jmp
cmp
add
sti
cltd
pop
pop
pop
sub
je
sub
mov
stos
rcrl
xchg
cmp
dec
mov
cltd
mov
jge
pop
repz
test
cltd
cli
sub
jmp
push
jecxz
jnp
mov
dec
or
sbb
cmp
mov
push
cmp
pop
nop
cmp
xchg
pop
stc
jge
pop
jle
mov
fwait
sbb
xchg
mov
ficoml
adc
push
leave
int3
cltd
dec
add
mov
mov
sbb
repz
stc
jmp
or
push
ss
int
jns
scas
fistpll
fnstcw
jmp
nop
into
cmp
pushf
add
sbb
mov
lods
mov
sbb
jge
jns
lcall
cmp
fwait
stc
xchg
adc
in
mov
adc
mov
xlat
dec
push
outsl
xor
cmp
pop
mov
pop
pop
test
pop
sbb
pop
xchg
lahf
insb
or
adc
cli
xchg
stos
mov
sbb
out
jae
and
ja
dec
pop
mov
jb
ss
imul
shlb
jo
inc
jbe,pt
dec
insb
sbb
cld
inc
add
dec
xor
dec
inc
cmp
sbb
imul
aaa
add
mov
out
outsl
and
scas
mov
cmp
pop
cmp
sub
lcall
test
mov
cmp
iret
mov
lret
ds
push
outsb
mov
shll
fisubrl
enter
cli
imul
iret
sbb
imul
push
out
inc
arpl
push
icebp
cmp
pop
pop
dec
push
cltd
rcrl
jb
cmp
mov
add
aas
ja
adc
ss
outsl
xchg
add
mov
mov
pop
lret
outsb
jle
std
jbe
je
jb
adc
cmpsl
outsb
pop
add
pop
mov
pop
int
dec
fidivrl
inc
icebp
js
add
xor
cmp
ds
and
mov
or
rclb
cmp
movsl
mov
mov
icebp
cltd
repz
xchg
add
lcall
inc
test
mov
insb
add
push
cmp
sbb
imul
sub
pop
in
cltd
push
fistpl
mov
cmp
jle
mov
insb
out
icebp
push
cmp
outsl
outsb
arpl
jb
aas
les
pop
xor
push
add
in
push
repz
dec
mov
pop
xchg
outsb
ds
enter
xor
popf
imul
sub
out
push
and
int
lret
cmp
je
pop
lods
jb
add
negb
cli
repz
divb
repnz
xor
sbb
imul
add
or
outsb
outsb
insb
in
icebp
sbb
pop
mov
jb
cmp
mov
push
cmpsb
pop
sub
outsb
mov
dec
cmp
xchg
pop
pop
sbb
dec
jb
cmp
jle
cmp
ds
jbe
jge
movsb
push
not
scas
pop
cmp
dec
mov
bound
sahf
pop
pop
cmp
pop
add
sub
mov
and
imul
adc
cmp
imul
add
push
cmp
pop
pop
icebp
cltd
jno
dec
jb
cmp
in
sbb
ds
fstpl
inc
aad
divb
int
test
sub
mov
insb
mov
jns
inc
mov
and
stos
sub
mov
mov
pop
bound
push
nop
pop
inc
jmp
sbb
cmp
imul
xor
ss
and
aam
mov
pop
xchg
imulb
popf
divb
iret
sbb
cmp
adc
mov
inc
subl
inc
jb
pop
in
adc
repnz
mov
faddl
ja
cld
mov
sbb
mulb
loop
mov
je
push
shlb
test
push
sti
fdivs
xchg
add
dec
pop
roll
dec
ja
lcall
mov
aam
pop
or
push
mov
lods
les
idivb
ja
pop
cmc
insb
inc
or
cmp
repz
pop
sbb
xchg
add
addr16
sbb
sarb
mov
add
lods
lcall
cmp
sbb
mov
add
mov
sub
push
mov
sub
push
sub
mov
xor
push
cmp
mov
xchg
stos
xor
push
pop
or
mov
dec
push
ljmp
dec
cmp
cli
pop
pop
cwtl
jp
cmp
imul
jmp
pop
out
out
mov
mov
es
ljmp
cltd
mov
mov
sbbl
pop
mov
mov
sarb
push
jb
mov
xchg
add
stos
cmp
cmp
ss
imul
sbb
stc
lock
mov
sbb
pop
push
in
push
mov
pop
sbb
sti
repnz
jns
jbe
jp
fwait
or
jle
dec
pop
push
or
stos
push
or
jne
pop
adc
ret
jne
xor
cmp
fcoml
ljmp
fldt
cmp
pop
push
ljmp
pop
or
jmp
imul
pop
pushf
cmp
push
or
xor
bound
cmp
jmp
ljmp
sub
or
pop
pushf
xor
sti
pop
stos
pop
pop
pop
ss
mov
pop
xor
ljmp
es
push
lcall
repnz
sti
pop
mov
sbb
fstpt
stc
repnz
lods
pop
cmp
lret
repnz
push
imul
jp
or
cltd
push
mov
repnz
pop
mov
sbb
test
jl
sbb
mov
pop
push
lcall
sbb
mov
sub
lret
push
inc
pop
or
stos
jge
jmp
pop
int3
cmp
push
stos
push
jno
imul
cmp
repnz
sub
mov
cli
cltd
pop
loope
test
xchg
xor
cmp
or
fdiv
lods
push
dec
pop
sbb
jmp
mov
cmp
push
lcall
repnz
jns
dec
xor
in
pop
mov
push
sti
pop
lret
xor
cmp
cmp
repnz
push
dec
pop
sbb
stc
ljmp
sub
cld
int3
pop
pushf
xor
pop
lret
pop
pop
xor
push
cltd
pop
sub
mov
pop
imul
cli
repnz
test
ljmp
push
lcall
pop
fdivrl
insb
repnz
push
sbb
stos
pop
cmp
sbb
stc
pop
fnstcw
mov
pop
pop
cmp
fsubr
jl
sbb
mov
cli
push
cmp
xor
sbb
mov
push
cmp
and
push
lret
xor
ljmp
sub
js
mov
or
cli
pop
es
lret
xchg
imul
and
cli
inc
cmc
aad
shrl
lods
jbe
lret
ds
cmc
mov
fisttpll
fnstcw
nop
in
test
mov
movsl
lods
jno
vpaddb
mov
fisubl
and
jns
fs
mov
movsb
sbbl
jnp
dec
cmp
mov
jp
test
mov
insl
outsb
jbe
dec
jnp
mov
jecxz
sub
sub
sbb
mov
mov
pushf
fwait
imul
sbb
or
insb
sbb
dec
sti
pop
call
xor
lahf
or
jl
mov
ja
fdivrs
cli
mov
bound
mov
adc
and
mov
mov
scas
push
sbb
or
push
call
jl
dec
lret
hlt
and
dec
xor
loope
mov
cs
xor
mov
ret
mov
loopne
mov
test
xchg
or
or
aad
clc
lods
mov
outsb
jbe
cli
jmp
sbb
cmc
popf
leave
xchg
sub
orl
dec
mov
mov
aad
dec
arpl
pop
fwait
pop
idivb
sub
or
cmc
push
xor
int3
mov
jmp
cmp
ljmp
mov
lods
mov
lret
aaa
cmp
es
lcall
daa
in
stos
outsl
rcr
jle
push
cmc
and
movsl
test
popf
movb
pop
jnp
mov
das
inc
aas
mov
pop
sbb
aas
sub
push
test
fiadds
inc
scas
js
mov
and
in
stos
inc
ss
push
pop
stc
outsl
js
mov
xchg
mov
pop
imul
xlat
movsl
mov
repnz
aaa
aam
js
push
shlb
in
pop
push
lret
push
mov
add
mov
ds
mov
xchg
out
dec
outsl
mov
pop
shrb
in
push
adc
sbb
movsb
push
faddl
pop
dec
test
or
bound
mov
loopne
dec
lods
scas
ficoml
lcall
sbb
test
sub
mov
jno
pop
dec
imul
pop
jmp
cmp
movsb
rcrb
lret
cmp
mov
mov
jnp
lods
mov
xor
mov
ljmp
mov
lahf
dec
jecxz
mov
pop
and
test
mov
in
mov
cmp
or
add
inc
repz
mov
ret
cmp
mov
adc
adc
sbb
jne
in
shl
in
sarb
shr
pcmpeqw
ds
push
sbb
push
dec
jl
jae
jmp
mov
std
jp
out
cmp
or
in
test
leave
loope
movsb
mov
mov
pushf
outsb
sub
xchg
jmp
test
imul
adc
je
xchg
test
mov
dec
andb
inc
fcmovbe
cmp
imul
mov
in
and
add
ss
push
mov
mov
stos
dec
fs
sub
std
jbe
stos
cmp
mov
pop
outsb
and
mov
cmp
or
mov
or
pushf
subb
pop
in
outsb
movsl
mov
xor
sbb
push
jmp
cli
dec
cmp
imull
add
pop
dec
movsl
and
mov
repnz
popf
dec
fistps
fnsave
mov
cmc
pop
sub
lret
or
cmp
sub
dec
cmp
cld
andb
outsl
ficoml
cmp
push
icebp
movsl
cli
or
in
sub
xchg
dec
cmp
stos
subb
cmp
sub
enter
lret
jp
stos
cmp
hlt
sbb
out
lcall
inc
cmc
mov
fldcw
cwtd
pop
xchg
mov
jmp
ds
loop
fidivrl
outsb
ljmp
pushf
pop
cmp
hlt
mov
inc
adc
imul
fucom
push
shrl
jno
mov
adc
mov
in
jl
sub
inc
inc
ret
mov
test
icebp
xchg
cmc
jmp
pop
aad
mov
jns
outsb
pop
or
jmp
mov
pop
repnz
jmp
mov
jmp
fldcw
scas
sub
test
icebp
fmull
fisubrs
or
sub
mov
jno
sar
jb
sub
insb
push
or
lds
dec
mov
mov
dec
mov
inc
mov
lds
xchg
cwtl
stc
insb
dec
pop
mov
insb
repz
xchg
insb
cmp
mov
int
add
rcl
cmp
leave
daa
xchg
mov
sub
fwait
adc
lods
aam
cmc
pop
addr16
fincstp
xchg
dec
sti
mov
pop
jnp
xlat
icebp
lock
xchg
ret
cltd
mov
fwait
sbb
and
scas
stos
push
mov
pushf
clc
xchg
daa
jnp
jle
inc
xor
scas
xlat
push
mov
inc
xchg
es
mov
dec
scas
xor
nop
sub
mov
adc
ret
scas
mov
mov
rclb
push
cmp
cmp
in
xchg
andb
fucompp
imul
mov
pop
jmp
cmpsb
or
push
lcall
lods
ret
fdivrs
mov
insb
cmp
out
sub
stc
push
cmpsb
sbb
scas
dec
sub
sahf
fisubl
repnz
cltd
repz
xchg
stos
jecxz
or
inc
mov
push
mov
mov
scas
pop
cli
stos
sub
mov
scas
inc
dec
cli
pop
cmpsb
out
mov
fbstp
pop
jne
mov
mov
add
sahf
add
cmpsb
pop
lcall
cmp
push
xchg
sbb
mov
mov
scas
push
imull
lods
leave
dec
cli
rclb
pop
repz
jbe
mov
fistpl
cltd
les
mov
scas
cltd
inc
mov
jns
adc
data16
or
add
mov
sbb
fnstcw
jmp
mov
fs
push
cs
lret
outsb
cli
into
xchg
fldcw
pop
pop
cmp
mov
leave
mov
rclb
mov
mov
cli
mov
in
jl
cmpsb
rorl
scas
dec
cmp
xor
pop
pop
lcall
xchg
leave
xchg
mov
or
mov
mov
cmovbe
push
in
ss
xchg
xor
insb
repnz
push
stos
mov
cmpsb
scas
bound
lock
cmpsb
in
push
mov
mov
cltd
mov
pop
mov
mov
sub
inc
dec
out
mov
xor
lcall
stos
cmp
mov
stos
cmpsb
pop
mov
inc
fsubrl
subb
push
mov
mov
sbb
je
mov
stos
jecxz
sbb
sbb
js
shl
sbb
xchg
test
iret
scas
jae
jnp
push
push
icebp
jge
mov
dec
out
sbb
push
inc
xchg
push
mov
and
lds
pop
lds
fdivrl
sbb
jne
push
ret
loopne
scas
cmp
mov
and
in
lods
xor
lret
sahf
je
mov
sti
and
sarl
mov
fidivrl
popa
pop
inc
scas
ret
cmp
lahf
lret
mov
dec
mov
sahf
out
adc
push
leave
adc
cld
call
sub
mov
nop
mov
bound
rcrl
cltd
jbe
sti
sti
or
pop
sub
int
xchg
icebp
xchg
jmp
xchg
push
fiaddl
insb
sbb
sti
pop
dec
stos
push
in
stc
inc
cmc
mov
insl
inc
leave
dec
or
or
pop
cmp
hlt
lret
or
cmp
outsl
ficoml
test
int3
cmp
xchg
xchg
testl
cmp
icebp
xchg
inc
mov
inc
sub
jg
or
mov
pop
or
icebp
in
cmp
adc
jb
mov
mov
pop
mov
lcall
fcompp
ds
addr16
cs
mov
cmp
adc
push
jbe
in
mov
es
insl
shl
push
test
aad
pop
inc
cmp
aaa
xorl
sbb
dec
lds
inc
xchg
sarl
push
in
fstl
aad
sub
sbb
sub
shl
sub
loop
or
pop
aaa
or
dec
ljmp
in
cmpsb
mulb
adc
push
pop
in
cmp
inc
int3
jae
imul
add
cli
repnz
dec
stos
sub
pop
test
push
mov
in
mov
mov
fidivrs
mov
add
repnz
push
pop
mov
ljmp
xlat
aad
out
add
xchg
or
lret
mov
loop
cmp
mov
movsl
pop
ret
jae
data16
stos
cmp
cmp
jae
cwtl
pop
leave
inc
cmp
push
add
mov
mov
sub
enter
cli
lods
xchg
cmc
sub
xor
mov
jmp
shr
aad
sub
pop
es
mov
adc
in
sbb
outsb
lds
mov
pop
cli
lods
movsl
inc
leave
test
int
ficompl
mov
inc
in
ret
data16
lods
pop
int3
jmp
sbbb
adc
mov
shll
rolb
stos
and
lods
xchg
sbb
sbb
add
push
test
sub
sub
repnz
jns
mov
xor
lret
stos
xchg
or
jl
sbb
cwtl
arpl
adc
mov
adc
mov
mov
out
sbb
jbe
insb
fwait
div
mov
imul
imul
mov
cmp
ss
mov
xchg
ja
pop
pop
push
push
aaa
lcall
inc
push
sub
icebp
pop
ja
outsb
cmp
xor
xor
sub
dec
cmp
repz
mov
sub
inc
cli
out
aas
ss
fimull
out
out
in
int
xchg
into
cwtd
sub
sub
stos
lcall
and
pop
lods
xchg
lcall
inc
pop
cmp
xor
jmp
push
bound
dec
cmp
sub
add
arpl
sub
or
ljmp
mov
repnz
dec
popf
push
lcall
in
test
loopne
mov
dec
cmc
or
sub
pop
jmp
ds
adc
sti
mov
fldcw
xchg
dec
cmp
movsl
xor
push
fisubrs
test
imull
jne
aad
shrl
jmp
das
in
jecxz
dec
cmp
pop
jns
pop
inc
lea
push
xchg
cld
inc
and
sbb
dec
fldcw
sub
sbb
out
or
pop
bound
ss
pop
sbb
cld
inc
ss
loop
addr16
jp
dec
cmp
fistps
xchg
loop,pn
add
xchg
dec
mov
cmc
cmp
dec
int3
inc
bound
push
add
lahf
sbb
out
sub
movsb
push
ja
sbb
sbb
gs
and
push
pop
aaa
cmp
or
arpl
dec
jae
cmp
xchg
ret
jp
lods
mov
sub
jmp
xchg
sub
push
lcall
and
sbb
adc
push
inc
leave
imul
xor
xor
call
outsb
stos
pop
or
lods
push
shlb
mov
fstps
ja
inc
stos
ljmp
inc
mov
in
push
aad
dec
ret
cltd
aad
shr
lret
mov
push
xchg
sub
int
shrb
add
loop
dec
xor
cmp
movsl
dec
cmp
push
jnp
mov
push
insb
cmp
cmp
xor
mov
push
sbb
in
jp
xchg
in
jne
jmp
stos
xchg
hlt
enter
ds
popa
mov
in
in
shld
mov
push
imul
imul
cmpsl
lcall
or
jmp
pop
stos
push
inc
loope
and
ret
cltd
icebp
pop
inc
xchg
mov
push
fst
jno
inc
scas
dec
ss
push
stc
cmp
mov
cmp
popf
jae
ret
repz
inc
movsl
inc
scas
fdivrl
imul
mov
jbe
idivl
xchg
jno
pop
dec
sbb
out
fiadds
test
mov
lcall
js
ljmp
imul
scas
pop
jp
and
push
cmc
test
push
sbb
lret
js
clc
mov
rclb
mov
fxch
add
sub
in
mov
test
pop
xor
repz
push
and
clc
cmp
mov
xchg
xchg
sbb
sub
movsl
movsb
ljmp
fsubp
cmp
leave
sbb
cltd
xchg
out
sub
inc
jne
ficompl
imul
lea
cmp
push
fldt
loope
push
cmpsl
push
mov
xchg
mov
sbb
and
aad
jecxz
adc
sub
fcompl
ljmp
mov
es
add
sbb
add
jmp
enter
int
movsl
sahf
icebp
inc
add
or
or
sub
add
push
bound
jmp
pop
sti
push
rclb
jns
jnp
or
mov
pop
stos
mov
push
not
into
dec
push
mov
xor
lcall
and
push
inc
insb
mov
sub
lcall
pop
xor
leave
fimull
in
hlt
ljmp
dec
pop
sar
or
mov
clc
lret
test
sub
sbb
shl
xor
or
xor
fldl
icebp
in
stc
cmp
arpl
cmp
cli
push
mov
sub
imul
loope
xor
jp
xor
loop
cli
lret
adc
mov
addr16
not
ds
imul
inc
push
push
in
adc
mov
mov
push
xor
in
in
xchg
xchg
ja
jae
mov
insl
clc
std
xchg
inc
pop
out
cli
lcall
stos
stos
dec
imul
xor
fs
mov
pop
sbb
bnd
leave
dec
icebp
fdivl
push
test
jge
fisubrl
xchg
or
stos
fldenv
mov
in
inc
cmp
shll
sbb
out
lods
clc
stos
pop
dec
sti
dec
fld
xchg
push
lcall
mov
je
mov
sub
push
cld
or
jl
mov
loopne
cmp
js
in
adc
mov
mov
or
adcb
in
dec
mov
xor
mov
xor
mov
sbb
stc
push
mov
pushf
les
out
imul
insb
mov
jp
mov
bound
repnz
inc
mov
xchg
call
xor
inc
dec
jp
xchg
pop
lret
xchg
sub
and
inc
das
push
fs
mov
cmp
pop
mov
xorb
popa
jae
lds
dec
jmp
and
shll
or
adc
jbe
ror
cmp
les
ret
int3
jno
xchg
xor
jnp
lods
or
call
pop
or
out
or
push
mov
hlt
push
cs
jbe
jl
xor
cmp
xchg
jns
xchg
loope
pop
stos
out
cmp
xchg
or
imulb
sub
xchg
push
cmp
adc
xor
in
loop
jmp
cltd
jmp
aam
shrb
push
addb
inc
sub
dec
cli
ljmp
cmp
mov
dec
pusha
mov
xor
mov
cmp
xchg
fmuls
ja
movl
pusha
cmp
test
sti
cli
cmp
pop
dec
push
or
add
stos
mov
xor
or
xor
xor
pop
jle
mov
or
and
or
inc
ljmp
fwait
pop
push
pop
pop
push
dec
sub
dec
xchg
mov
leave
adc
dec
pop
dec
jp
call
aad
dec
xchg
fxch
in
cwtl
repz
sub
sub
lock
out
push
jmp
bnd
jp
push
cmp
dec
lods
test
es
scas
dec
jmp
jmp
pop
les
fadd
mov
rcrl
mov
mov
jae
mov
dec
in
call
cmp
flds
pop
dec
push
sti
dec
xchg
push
sub
adc
jecxz
cli
jp
adc
adc
xchg
sub
leave
fidivl
or
pop
or
push
loopne
loop
dec
xchg
inc
fldenv
sbb
push
and
and
dec
cmp
xchg
mov
imul
mov
sub
fidivrl
sti
in
push
xchg
mov
int
mov
or
imulb
pop
ficoml
fsin
loope
sbb
sub
jmp
fnstenv
mov
loopne
int
cld
hlt
pushf
cmp
data16
jnp
stc
cmp
push
and
add
pop
call
sub
dec
fdivr
inc
inc
push
test
xor
xchg
push
mov
les
dec
xor
jb
adc
xor
mov
mov
iret
pop
nop
or
mov
stc
cs
into
add
stos
or
rorl
es
push
push
mov
testb
into
ss
mov
call
addr16
mov
gs
mov
aas
jp
cmc
and
lods
cmp
inc
xchg
push
or
mov
sub
test
cmp
stos
je
pop
imul
mov
sub
add
lahf
mov
add
mov
push
mov
sub
push
lea
pop
push
jbe
cmpsl
loopne
sbb
imul
sarl
inc
aad
data16
fistpl
inc
mov
add
and
fwait
mov
cmp
inc
mov
dec
xchg
xor
pusha
pop
enter
ficompl
adc
jae
outsb
dec
pop
fistl
mov
cmp
mov
cmp
sbb
push
iret
sbb
jmp
ljmp
jns
mov
push
mov
cmp
xor
in
pop
fsubr
fisubrl
xchg
adc
scas
mov
into
cmp
mov
jbe
or
push
inc
lahf
sub
xor
or
xchg
out
sub
dec
jbe
lret
inc
push
xor
dec
dec
dec
scas
dec
stos
in
imul
or
sbb
mov
add
inc
fnstsw
fldenv
add
call
dec
and
icebp
pop
mov
ljmp
popa
gs
sub
dec
lcall
icebp
popa
sub
xchg
cmp
and
daa
cmp
or
dec
push
lret
jnp
in
addb
pushf
mov
xor
cmp
shrl
mov
or
rcrl
xor
inc
add
sub
xchg
sub
cwtl
fisubrl
arpl
fildll
movsl
xlat
sub
mov
shl
push
rcr
mov
push
xchg
in
lret
daa
cwtl
mov
cli
cwtl
ret
and
sbb
or
pushf
test
xchg
adc
xchg
lret
call
in
enter
hlt
cmpsl
dec
xchg
adc
adc
mov
mov
cmpsb
cmpsb
movsb
test
dec
lcall
inc
imul
push
int
es
jb
call
shll
pop
push
or
rorb
ficompl
or
sbb
mov
lcall
mov
repz
aas
fldenv
test
dec
cltd
sbb
inc
rolb
inc
cmp
imul
mov
sbb
xor
into
or
in
mov
int
xchg
dec
rcrb
adc
loop
dec
outsb
xor
xor
lock
xor
sarl
jmp
stos
fcomps
pop
sbb
mov
cmp
dec
hlt
stos
lcall
lods
test
fcmovnu
hlt
outsb
push
and
or
mov
push
outsb
mov
xor
test
fldenv
inc
dec
mov
cli
in
les
jb
jb
dec
cmp
push
or
xor
or
gs
mov
push
rcl
push
jmp
push
pushf
cli
jb
jae
sti
jbe
lods
push
aad
jnp
rcrb
push
sbb
push
push
jb
sub
inc
hlt
jl
stc
mov
out
popf
lock
clc
int3
push
or
pop
xor
lock
push
pushf
push
cmp
add
aaa
cmp
adc
push
lcall
dec
in
aad
movsb
test
leave
into
rcrb
repnz
sbb
imul
add
cli
jns
sbb
xchg
outsb
cmp
stos
fldcw
ss
lret
outsb
leave
cmc
mov
push
sub
pop
aaa
ss
aad
or
xlat
roll
push
mov
scas
jnp
jb
and
sbb
hlt
cmp
mov
adc
push
cmp
cmpsb
jae
cmp
xor
shlb
loopne
cmp
negl
outsb
rcll
sbb
insl
pop
sub
in
call
mov
sub
xchg
sbb
xor
dec
inc
outsb
lock
mov
fldenv
bound
push
cmp
hlt
or
and
push
fisubl
lods
fnstenv
sub
xor
test
inc
std
inc
dec
aad
sbb
sub
sub
fsubrs
push
xchg
cmp
push
out
sbb
sbb
cmp
mov
or
fdecstp
dec
cmp
fsts
push
mov
or
push
push
xor
xchg
dec
cmp
xchg
out
sub
lds
mov
cmp
in
fcoml
cmp
outsb
lret
cmp
jmp
repnz
jb
outsb
outsb
pop
push
lds
gs
cmp
jb
fmul
imul
test
push
pop
dec
sub
lods
leave
sub
jmp
mov
inc
and
test
lock
or
push
sub
ss
pushf
bound
cmp
fdivl
mov
sub
lea
jmp
lds
or
lock
jb
rep
or
mov
sbb
push
incb
sub
cmp
cwtl
pushf
jmp
or
pusha
hlt
push
sahf
push
jb
mov
jb
mov
jmp
mov
gs
int
enter
add
out
mov
outsb
push
push
outsb
sti
add
bound
outsb
sahf
cmp
push
jmp
mov
push
push
lea
popf
in
cmp
xor
xor
push
cmpsb
cmp
dec
sub
ljmp
into
mov
cmpsb
test
movsb
decb
jnp
inc
mov
or
inc
jmp
or
xor
xor
push
cmpsb
fwait
ret
fiaddl
or
pop
push
in
lcall
jns
dec
dec
xchg
jbe
pop
outsb
xchg
mov
outsb
dec
mov
out
cmp
mov
mov
mov
test
push
lcall
mov
xchg
sub
inc
dec
negb
insb
outsb
mov
inc
jbe
pop
dec
adc
add
outsb
push
mov
pop
cli
clc
sbb
lods
jmp
mov
or
push
dec
pop
cmp
jmp
imul
outsb
aaa
dec
test
pop
cltd
mov
adc
nop
mov
jb
dec
pop
push
jb
mov
sub
pop
imul
xchg
adc
adc
lods
lods
sub
aad
jp
xchg
xchg
cmp
loopne
test
repnz
jb
mov
test
sub
mov
jb
fmull
lcall
jmp
mov
mov
push
pop
outsb
add
mov
sahf
cmp
push
jmp
mov
mov
aas
push
mov
pop
jb
outsb
cmp
sub
push
scas
push
insb
push
jp
inc
test
subl
jb
mov
cmp
mov
jmp
jle
outsb
xchg
outsb
ds
outsb
sbbl
push
sub
repnz
movsb
ljmp
push
jns
imul
dec
xchg
mov
outsb
test
pop
stos
pop
stc
xor
rsm
or
mov
cmp
stos
inc
test
aam
mov
or
jb
scas
fwait
scas
sub
ret
into
insb
cmp
fildll
cmc
fstpl
loop
pop
fidivrl
cli
cli
jne
xchg
rcr
mov
mov
xor
sbb
stos
push
mov
cmp
cli
mov
push
lcall
jmp
push
pop
mov
imul
pop
cmp
hlt
mov
xchg
pop
dec
adc
mov
enter
mov
andb
bound
je
mov
mov
mov
pop
cmp
sahf
push
into
mov
leave
cli
mov
ljmp
mov
movsb
test
mov
xchg
and
imul
notb
arpl
mov
cmp
push
cmp
mov
lcall
cli
xchg
fnstcw
dec
mov
divb
pop
xor
lds
rorb
cmp
scas
jmp
mov
mov
add
lcall
mov
add
pop
outsb
xchg
push
ljmp
ljmp
mov
lret
mov
movsb
cmp
lods
xchg
or
lods
cld
cmp
daa
push
mov
mov
mov
add
pop
mov
in
mov
stos
enter
sbb
fisubrl
ljmp
push
cmp
stos
std
mov
dec
lahf
push
cmp
push
test
pop
cmpsb
xchg
cmpsb
out
mov
or
cmp
xchg
push
dec
cli
jmp
push
pop
inc
xchg
pop
outsb
and
cmp
pop
shrl
mov
and
out
jbe
jbe
bound
bound
pop
xchg
data16
pop
lock
das
mov
outsb
gs
mov
pop
xchg
xchg
xchg
out
jbe
jbe
bound
bound
pop
xchg
data16
out
mov
gs
mov
mov
mov
pop
mov
sahf
xchg
sahf
mov
cmp
mov
push
push
fsubl
xchg
out
jbe
bound
xchg
mov
cmp
mov
push
mov
mov
cmp
outsb
push
sub
stos
push
pop
or
cmp
pop
scas
or
jmp
mov
mov
stos
gs
cmpsb
cmp
sahf
xchg
mov
out
mov
jo
lds
adc
xchg
jbe
out
out
mov
enter
pop
out
jmp
mov
cmp
sarb
cmpsb
or
mov
sahf
inc
cmp
stos
cmp
into
cmpsb
cmp
scas
mov
mov
mov
pop
xchg
data16
out
data16
mov
mov
lahf
cmp
data16
sarl
xchg
sbbb
lock
fmull
repz
dec
or
mov
mov
push
and
mov
mov
scas
imulb
add
pop
and
mov
xor
jmp
mov
mov
pop
mov
movsb
mov
xor
cmp
push
lock
cmp
push
push
jmp
mov
cmp
push
pop
push
push
push
out
push
push
mov
xchg
out
push
push
jp
in
pop
inc
push
jb
mov
push
cmp
jb
cli
pop
xchg
pop
xchg
xchg
jbe
out
jbe
bound
pop
out
jmp
mov
stos
jmp
mov
mov
out
scas
jmp
mov
mov
andb
cli
pop
sahf
sub
cmpsb
inc
cmp
lcall
cmp
mov
add
pop
bound
xchg
jmp
push
adc
jmp
mov
cmp
scas
sbbb
out
ret
cmp
mov
and
pop
jbe
test
outsb
push
bound
repnz
add
xor
jb
mov
sub
enter
xor
jnp
test
lods
jmp
jp
das
sbb
repz
ss
and
sarl
and
int
bound
inc
push
je
jge
or
mov
jg
jno
jb
cmp
jae
in
aad
leave
mov
dec
cmp
stos
fisubl
mov
cmp
adc
jne
popa
push
lods
inc
cmp
cmp
sub
sub
adc
mov
pop
or
test
leave
xlat
adc
lcall
xor
sahf
addr16
sarb
add
push
hlt
fidivl
xor
sbb
mov
cmpsb
fisubrl
mov
mov
cltd
pop
scas
inc
pop
cmpsb
movsl
sub
jp
mov
pop
sahf
movsl
cmp
lret
lcall
cmp
add
sub
pop
add
cmp
mov
stc
cmp
bound
stos
push
mov
sahf
jmp
into
repnz
xchg
dec
jl
popa
xor
cmp
lcall
cld
xor
sbb
std
call
mov
bound
shlb
dec
shr
fld
cmp
mov
pop
fldt
leave
scas
and
mov
xchg
fcoml
jnp
xor
cmp
inc
lret
push
jno
adc
scas
lret
jbe
pushf
stos
shr
mov
sbb
sbb
insb
lcall
dec
dec
push
cmp
add
rclb
xor
cmp
jp
add
inc
push
or
mov
sbb
movsl
sub
xor
xor
int
mov
stc
pop
jns
stc
push
xchg
cmp
jbe
pop
test
in
mov
mov
mov
cmp
cwtl
ljmp
jge
outsb
nop
mov
call
cmp
rorb
jno
cmp
stos
mov
shrl
int3
xor
jns
cmp
jno
int
in
enter
sbb
jae
add
or
insb
push
and
scas
popa
push
xor
icebp
pop
in
sub
hlt
dec
rorb
xchg
sbb
sub
xor
jmp
dec
sbb
js
jge
leave
push
mov
icebp
daa
leave
fucomip
bnd
imul
pop
add
cltd
push
rol
leave
leave
leave
push
fsubrl
inc
mov
orb
aam
pusha
stos
leave
mov
and
xor
cli
xor
xor
pop
cmp
fnstenv
xchg
sub
push
push
cmp
sar
sbb
pop
xchg
mov
je
lret
mov
xorl
dec
scas
adc
test
cmp
gs
cli
fcmovbe
fnsave
imul
out
nop
sub
aad
mov
sbb
cltd
mov
push
loope
inc
mov
sub
cmp
mov
jae
jbe
mov
pop
leave
sti
addr16
fnstenv
push
sbb
enter
xor
sbb
xchg
jnp
inc
call
cmp
xor
shll
push
mov
pop
dec
popf
es
lret
mov
xor
adc
data16
jmp
push
mov
sahf
lock
pop
arpl
shr
sbb
or
jp
mov
jbe
sbb
and
mov
cli
adc
icebp
inc
test
mov
pushf
mov
sub
idivb
or
mov
dec
negl
push
lods
xor
repnz
cli
test
lcall
add
in
xchg
es
mov
insb
add
inc
idivb
sbb
loopne
in
jne
inc
jge
cmp
inc
into
test
icebp
sbb
adc
mov
xchg
in
in
or
xchg
rorl
jno
or
insl
cmp
repz
inc
out
cmp
arpl
push
stos
rcr
or
dec
mov
dec
push
mov
xor
pop
dec
xchg
push
ds
dec
aam
fldcw
jbe
sbb
in
pop
jge
bound
xor
push
shll
sub
je
cli
or
icebp
shlb
sub
dec
cmp
cmp
mov
lods
stc
iret
mov
or
ljmp
sub
mov
add
leave
pop
sub
rclb
push
cld
xor
stc
jae
cmp
sub
aaa
mov
cwtl
cmp
or
popf
ljmp
jmp
ljmp
push
lea
imul
cmp
or
lods
pop
loop
lods
mov
or
out
mov
mov
cmp
inc
mov
sbb
movsb
ljmp
sub
imul
sbb
call
pop
in
jb
push
arpl
mov
stos
ljmp
dec
outsb
inc
pop
dec
xchg
push
sub
sbb
inc
sub
cmc
xchg
push
inc
addr16
imul
mov
mov
mov
rorb
push
sub
mov
dec
lods
jb
push
movsl
mov
js
neg
dec
outsb
pop
inc
or
sbb
cli
gs
ds
stc
dec
pop
lcall
testb
mov
pop
mov
outsl
bound
pop
dec
xchg
push
bound
inc
repnz
adc
or
xor
out
mov
mov
mul
push
sti
jbe
push
jl
dec
jg
dec
stos
jmp
pop
imul
lret
dec
push
addr16
xchg
test
pop
sbb
stos
sbb
pop
ficoml
adc
push
adc
lcall
or
sbb
popf
mov
fstpt
xchg
inc
mov
cmp
jbe
push
inc
xchg
stos
in
ja
jg
cmp
lods
dec
xor
fstps
dec
out
shrl
addr16
bound
cmp
sbb
mov
xor
push
mov
ljmp
imulb
fnstsw
sbb
sbb
stc
leave
and
dec
push
lods
fidivrl
sub
inc
lcall
inc
cmp
imul
repz
mov
pop
mov
mov
dec
mov
cmp
mov
add
pop
mov
lcall
sub
xchg
push
sbbb
scas
xchg
stos
out
cmpsb
jmp
mov
xchg
mov
cmp
incb
lret
std
cmp
adc
pop
pop
imul
leave
pop
sarl
aaa
dec
out
push
repz
mov
xor
and
cli
pop
add
lods
iret
std
add
clc
or
mov
xlat
sub
jb
imulb
fidivs
fisubl
stos
mov
cwtl
int3
cmp
out
cli
testb
fucom
popf
loopne
push
movb
dec
xchg
mov
ret
call
fsqrt
mov
repz
outsl
adc
jno
adc
inc
jb
mov
pop
ret
xchg
sbb
or
add
adc
stc
push
lahf
and
sbb
in
mov
test
or
pop
cmp
push
imul
add
mov
jns
cli
cs
lods
push
leave
inc
cwtl
stos
sub
dec
mov
cld
into
sub
imul
or
lret
mov
scas
adc
jae
fcoml
jb
xor
stos
mov
popa
and
jb
je
pop
and
ja
xor
sbb
mov
mov
ficoms
icebp
jb
sbb
sub
movsb
sti
loopne
pop
jae
xor
xor
push
dec
inc
out
cmp
imulb
lds
cwtl
inc
jns
jl
add
insl
adc
xor
jmp
jmp
mov
adc
lods
sub
dec
fldenv
in
or
mov
or
mov
gs
xor
push
fstpl
outsb
mov
imul
icebp
inc
sbb
movsl
mov
mov
jge
cwtl
pop
adc
dec
pop
sbb
movsb
inc
mov
push
cli
cltd
mov
push
pop
cmpl
stos
ljmp
mov
sub
fisubl
jg
aaa
or
inc
sub
testb
pop
sub
sub
and
sub
pop
arpl
cmp
and
das
cmp
sub
xchg
mov
and
mov
fsubrs
sbb
sub
xchg
fisubl
ljmp
mov
sub
mov
lret
lock
ret
push
and
pop
test
fisubrs
pop
xchg
bound
or
cltd
stos
sub
or
rcr
push
mov
pop
inc
push
cs
push
scas
leave
xor
insb
mov
xor
pop
sbb
leave
cmp
mov
pop
sub
adc
lcall
sbb
sub
mov
in
cs
imul
addl
stos
sub
cmp
mov
cmp
push
xchg
or
and
ror
cmp
shll
fwait
xchg
pop
mov
lcall
cmc
cmp
inc
lcall
sub
ja
sub
scas
or
nop
sub
mov
mov
cli
fiaddl
jmp
call
es
jmp
inc
mov
out
mov
adc
popf
fsqrt
ja
sub
adc
mov
push
xchg
sbb
test
sbb
dec
push
sub
ljmp
adc
cli
int
fmull
ror
lods
cmp
mov
sbb
dec
mov
sub
out
test
addb
pop
sub
pop
mov
sub
test
cli
imul
sub
or
pop
mov
lods
movsb
or
ljmp
test
sbb
inc
inc
sti
fst
ficoms
pop
ljmp
or
pop
test
jp
mov
sarl
sub
mov
jns
cld
xor
or
sub
icebp
ficompl
mov
ja
stc
sub
inc
push
ret
mov
mov
mov
jnp
lret
push
mov
cmp
xor
or
sbb
mov
sbb
pop
sub
cltd
pop
insb
loop
and
jp
lds
sub
dec
sub
jp
mov
jb
push
addr16
sbb
pop
fimull
dec
cld
xor
xor
mov
cmp
imul
inc
dec
jmp
lcall
push
pop
sub
mov
or
sub
xchg
aas
repz
sbb
ljmp
xchg
jl
mov
sub
push
mov
inc
sub
sub
dec
mov
mov
test
cmpsb
lcall
xor
adc
jb
in
aad
jno
and
and
or
mov
mov
dec
stos
lea
cmp
push
pop
shl
sbbb
push
xchg
xchg
push
cmp
outsb
in
ret
ret
xor
cmp
rcll
mov
lahf
push
scas
pop
das
jmp
sbb
mov
in
xchg
cmp
test
sti
xchg
movsl
pop
pop
mov
loope
loop
mov
cmp
test
jae
jmp
add
xchg
jns
inc
xchg
hlt
lods
sbb
sub
adc
clc
sbb
xchg
sub
fimuls
and
inc
rcrb
mov
mov
pop
mov
inc
vfrczpd
mov
lods
rcrl
push
icebp
push
pop
test
xor
xchg
mov
jbe
or
sub
dec
push
outsb
add
lcall
or
fwait
and
cwtl
sub
mov
ret
cmp
cmp
mov
cmp
in
mov
push
or
push
js
arpl
es
push
test
bound
or
fmulp
aad
add
or
xchg
in
enter
repnz
fmulp
les
mov
sbb
sub
push
stos
mov
cmp
mov
mov
in
popa
mov
orb
jmp
xchg
sub
mov
subb
mov
xchg
ljmp
test
cmp
mov
movsl
mov
adc
xchg
in
mov
cli
jmp
sub
mov
cltd
sbb
dec
imul
cmpsb
xchg
in
push
cmp
push
test
into
fsubrp
or
rorl
out
xor
cs
subl
jmp
dec
adc
pop
inc
cmp
movsl
dec
cmp
mov
gs
add
xor
int3
ficomps
add
leave
pop
adc
xchg
aad
push
mov
roll
or
es
mov
push
stos
inc
sub
fnstsw
pop
aad
xor
and
cmp
sbb
pop
mov
xor
ljmp
mov
outsb
aad
stos
loopne
adc
fstps
or
mov
sub
in
mov
and
dec
sub
icebp
or
or
lcall
push
cltd
lock
fldl
sub
out
mov
xchg
sbb
aad
or
mov
xchg
xchg
and
aaa
sbb
bound
push
rcll
push
movsl
sbb
mov
pop
mov
mov
sub
cmp
aad
pop
rcll
dec
mov
jmp
jmp
and
xchg
sahf
jp
jmp
inc
cmp
aaa
or
mov
or
mov
xchg
idivb
pop
stos
cmp
jb
divb
mov
cli
mov
stc
test
out
lret
cli
mov
aas
and
test
lahf
pop
jmp
roll
xchg
or
dec
outsb
aad
jp
push
movsb
int3
push
sub
add
fcomps
shr
lock
test
pushf
in
inc
xor
aad
jmp
jmp
fstps
outsb
push
mov
fsin
neg
mov
jmp
flds
fnstenv
mov
sarl
aad
push
inc
leave
cmp
or
roll
sbb
rorl
sbb
mov
pop
sub
fwait
test
sbb
stc
push
cld
stos
pop
int
lahf
pop
jmp
mov
or
push
pop
test
lcall
int
idivb
int
out
int
int
mov
xchg
ds
leave
stos
mov
jmp
clc
idivb
in
mov
pop
inc
dec
loope
sbb
aad
ficompl
fistps
leave
out
leave
jmp
xchg
jmp
cli
movsl
and
jecxz
cmpsl
cmp
test
leave
mov
add
push
mov
lds
mov
push
jp
add
or
lds
insb
lds
cmp
push
inc
sub
dec
lods
out
jp
and
loopne
sub
fwait
lahf
push
and
gs
flds
mov
jmp
mov
xchg
mov
dec
mov
sarl
pop
lods
push
test
out
pop
add
fstpt
imul
cmp
fmull
out
mov
pop
push
mov
push
idivb
lret
lahf
pop
jmp
mov
mov
pop
test
sub
adc
sub
mov
lahf
pop
jmp
mov
cmp
mov
mov
divb
xchg
mov
mov
mov
insb
mov
cmp
stos
test
mov
movsb
cmp
jmp
pop
xchg
mov
sti
fists
adc
cmp
xchg
idivb
dec
stos
shlb
out
lods
jmp
mov
pop
xchg
lods
out
lods
lock
pop
pop
subb
xor
test
mov
lods
inc
cmp
mov
lods
subb
mov
mov
jmp
xchg
test
jmp
test
or
pop
xchg
test
cmp
repnz
gs
lock
insb
test
negb
jmp
sub
in
mov
push
cli
mov
ret
jmp
mov
pop
cltd
pop
cltd
xchg
cltd
mov
pop
pop
cltd
xchg
cltd
mov
pop
pop
cltd
out
mov
inc
fimull
cli
mov
ss
aad
ljmp
pop
xchg
pop
dec
lock
mov
xchg
insb
lahf
pop
xchg
xchg
mov
fwait
mov
xchg
cmp
sbb
mov
lret
lods
jmp
xchg
inc
cmp
xchg
push
fstpt
inc
mov
add
jmp
mov
mov
cmp
aad
push
stos
notb
xchg
jmp
mov
test
fwait
mov
pop
dec
xchg
add
or
sub
mov
call
out
in
adc
enter
out
pop
roll
or
mov
or
ljmp
pop
shlb
xor
nop
out
lret
mov
push
cmp
dec
mov
xchg
mov
gs
xchg
rorb
fbstp
test
imul
outsl
jg
jae
push
ja
jmp
js
adcb
ljmp
cmpsb
add
insl
add
sub
outsl
addr16
mov
jge
push
push
bound
sbb
call
aam
xchg
sub
or
push
mov
repz
fs
pushf
pop
mov
out
arpl
xor
cwtl
jae
and
jbe
push
js
dec
and
pop
pusha
jne
jae
imul
push
jp
mov
stos
pop
push
cmp
cli
mov
pop
outsl
out
subl
imull
pushf
pop
push
jne
jae
imul
sub
push
imul
push
jp
rep
mov
cmp
imul
mov
pop
sbb
jge
sbb
out
ficoml
pop
xlat
subl
cwtl
cmp
lods
outsb
cmp
fwait
cmp
cli
cwtl
jp
lods
jne
push
sti
adc
test
cwtl
pop
and
lods
idivb
das
mov
cmp
cmp
mov
stc
out
pop
sbb
add
jp
pushf
in
call
mov
jp
out
imul
inc
jne
jae
imul
notb
rcrb
cmp
sarl
sub
inc
jne
jae
imul
mov
pop
or
jecxz
adc
je
movsb
imul
add
xor
popa
jp
shll
and
pop
cmpb
cli
loop
adc
jg
lcall
and
push
push
mov
fcomps
lret
xor
in
in
mov
or
cld
js
insl
jnp
rorb
lcall
out
push
or
mov
sbb
mov
fidivrs
jg
push
or
in
push
ds
sub
or
push
or
scas
sti
cmpb
insb
test
sbb
popa
jg
xlat
jmp
mov
data16
fildl
pop
mov
dec
xchg
jns
and
dec
ja
test
cmp
push
cwtl
pop
push
and
repz
lods
mov
xchg
mov
jns
std
add
cwtl
jnp
mov
jecxz
pushf
jo
ds
outsb
or
sbb
jnp
push
idivb
mov
mov
in
push
inc
scas
push
out
pusha
cwtl
jnp
fistps
inc
jnp
or
das
fsubrl
sbb
cmpb
xchg
mov
jnp
and
nop
lods
leave
clc
mov
or
push
fistl
mov
sub
stos
jns
dec
insl
iret
xorb
jp
pop
dec
mov
jnp
fildl
cmp
xchg
jecxz
repz
add
cmpb
fwait
scas
incl
sub
outsl
arpl
add
sarl
out
cli
jne
movsl
stos
cmp
jmp
movsl
idivb
pushf
lods
sti
gs
fmull
cmc
cmp
jg
add
xor
xor
nop
pushf
jl
ss
pop
mov
push
jae
mov
imul
jl
push
addl
dec
cs
push
enter
cli
sub
arpl
addr16
ss
jae
imul
add
dec
pop
mov
js
pushf
mov
pusha
mov
ja
xchg
jg
or
outsl
cmp
push
sub
fsubrs
maxps
outsl
jae
outsl
scas
outsl
imul
addr16
cwtl
fwait
pusha
dec
push
pop
push
arpl
dec
rorl
dec
cwtl
lods
dec
inc
inc
xor
pop
ss
nop
sub
es
sbbb
xchg
jecxz
lcall
fsubl
ja
aad
rcll
sub
xlat
cmp
jb
pop
and
into
outsl
ja
pop
pushf
stos
mov
arpl
jno
push
xchg
sbb
jae
jno
pop
pop
push
dec
sbb
test
jmp
cmp
jbe
xorl
jbe
cs
mov
mov
cmp
jnp
out
jb
js
xor
outsl
mov
jno
xchg
and
loop
fcmovbe
sarb
jnp
sahf
lcall
bound
push
push
sub
sbb
jmp
sarl
mov
xchg
insl
imul
push
xor
sub
and
sbb
sbb
lock
call
fcom
mov
lods
test
jnp
pushf
cwtl
xchg
je
insb
push
push
push
xor
sub
and
sbb
adc
repz
jmp
jecxz
fcmovnbe
sarl
mov
stos
cmpsl
mov
xchg
sbb
aas
insl
adc
sbb
pop
jecxz
in
sbb
popf
notb
ss
pop
arpl
jbe
imul
bnd
sub
adc
jnp
out
scas
xor
and
stos
not
out
psadbw
clc
pop
mov
jno
dec
pop
outsb
sbb
pop
imul
insl
jle
rolb
xor
and
xchg
popf
test
call
ja
test
sarb
fcompl
dec
add
inc
in
sub
movsb
outsl
pop
out
pop
pop
push
mov
pop
lea
popa
js
ljmp
daa
sbb
and
movsb
jnp
imul
mov
sub
xchg
jnp
sub
or
fisubl
jnp
mov
lahf
and
mov
add
aam
push
cmp
pop
cwtl
ljmp
adc
mov
arpl
aam
sub
xacquire
loope
les
pushf
cltd
xor
and
aad
push
sarb
xchg
xor
and
aam
cld
adc
jne
repz
jnp
push
push
xchg
jge
mov
xorb
mov
iret
adc
int
sbb
adc
mov
jae
in
jnp
les
mulb
imul
mov
sbb
add
sub
ret
shl
pop
mov
stc
dec
int
popf
jnp
in
or
lods
xor
sbb
xor
or
data16
pop
jns
pop
fwait
xchg
idivb
dec
jb
enter
jnp
out
shlb
in
lret
insb
movsb
mov
jae
lds
push
mov
jnp
mov
loope
or
jnp
cmp
lds
idivl
in
xchg
pop
insb
xchg
jnp
lahf
fs
fnstsw
adc
shll
movsl
ret
imul
xor
jnp
jmp
dec
mov
mov
call
lock
shlb
inc
push
xchg
add
and
inc
and
insl
fnstcw
fs
sahf
sbb
and
mov
mov
sbbb
cmp
ret
xchg
and
adc
jg
outsl
lret
dec
gs
fnstsw
pop
ja
out
jae
xchg
xor
pop
sbb
or
pop
fmul
std
xchg
adc
jns
pop
mov
ja
push
cli
add
cmp
sbb
lcall
fwait
jge
stos
roll
jnp
mov
push
sub
xorl
add
ljmp
sub
popf
stc
pmulhuw
xlat
cmp
mov
addr16
add
adc
sbb
mov
and
scas
xchg
into
dec
test
xchg
jnp
pusha
mov
jns
dec
das
jnp
xor
mov
mov
icebp
adc
pusha
xor
scas
jbe
add
scas
mov
dec
add
dec
jnp
mov
xchg
ds
mov
cmp
call
push
es
fld1
ficompl
mov
lods
test
mov
repz
loopne
jl
test
xchg
imul
in
add
xchg
mov
mov
jle
es
add
xor
xchg
std
jno
lock
adc
mov
lret
dec
fwait
stc
jb
push
cmpl
roll
or
lods
insl
pop
mov
arpl
ficomps
sub
jge
lahf
addr16
mov
js
add
daa
les
or
mov
popf
jnp
jl
fcomp
or
nop
jnp
push
stc
icebp
cmpsb
push
gs
add
jl
xor
jnp
inc
sub
push
or
or
sar
dec
push
jnp
mov
decb
lock
or
mov
movsl
int3
outsl
shrl
test
pop
mov
jae
ja
mov
vmulss
mov
orb
sti
inc
pop
je
imul
enter
daa
cmpsl
iret
pushf
mov
xchg
jl
xchg
jne
test
pop
loope
jnp
push
aas
popf
xchg
fisubrs
xchg
or
and
jnp
inc
mov
bound
push
int3
mov
mov
mov
ljmp
std
cmpsb
in
mov
dec
je
inc
jp
lret
adc
popa
xchg
bound
shr
push
cltd
add
das
fwait
mov
or
jnp
daa
ret
or
xor
mov
movsb
cwtl
mov
lods
pop
and
sahf
popf
fidivl
sbb
loop
jnp
insb
pop
push
mov
sbb
mov
cmp
mov
jnp
daa
test
xchg
jnp
sbbl
rcll
dec
jnp
mov
jae
sub
add
cld
mov
jnp
adc
testb
add
ja
mov
adc
das
test
pop
adc
push
add
mov
outsl
cmp
jnp
xor
out
adc
shr
sbb
add
jecxz
mov
cmp
movsl
mov
test
jns
fistpl
int3
xor
out
mov
mov
or
fwait
outsb
jnp
mov
xchg
mov
es
int3
mov
jnp
push
push
aaa
jnp
and
pop
cmp
jnp
xor
jnp
dec
fisubrl
or
sarl
adc
mov
jnp
lret
add
icebp
mov
push
inc
aaa
repnz
mov
sti
mov
ljmp
sbb
mov
mov
sarl
dec
pop
add
out
xorl
xchg
dec
jnp
jo
adc
cmc
idivl
call
push
jnp
stos
mov
aam
or
out
push
in
or
mov
imul
insb
add
jnp
fdivrs
std
mov
aad
scas
pusha
adc
loopne
rorb
icebp
jl
sub
rorl
imul
mov
and
push
jl
cwtl
push
or
inc
jne
std
rep
lret
sub
andl
jns
xor
in
xchg
fnsave
les
test
push
mov
stc
add
jl
mov
shlb
jnp
js
ja
sbb
fwait
aas
je
ds
mov
pop
cmpsl
lcall
ret
dec
cmp
jnp
and
test
mov
fwait
std
jnp
lcall
jnp
out
inc
cmp
add
lret
cmpsb
xchg
xor
adc
hlt
add
xor
jnp
pop
lret
pop
dec
ja
test
cmp
and
cld
pop
jnp
xchg
push
outsl
loopne
sub
sahf
push
jnp
xor
mov
xor
shl
dec
and
adc
hlt
rcrb
inc
pop
inc
movsb
pushf
inc
push
jecxz
push
adc
jmp
xor
ds
mov
outsl
sahf
xor
loop
testl
hlt
test
imul
push
xchg
ja
cld
addr16
imul
je
idivl
xchg
out
push
pop
mov
mov
das
or
xor
cld
mov
dec
jnp
scas
pop
lahf
lea
adc
inc
jmp
jl
adc
shlb
into
int3
shll
scas
adc
lret
outsl
pusha
dec
xchg
popa
jmp
lods
repnz
dec
out
pop
push
xor
push
jnp
and
sbb
ja
pushf
pop
jmp
ja
jnp
jae
lcall
mov
add
mov
int
jns
aad
je
ficoml
fstps
xchg
sti
jnp
data16
adc
jp
push
cmc
jnp
iret
sub
pusha
xchg
jle
cmp
or
das
imul
xchg
aas
fdivrp
mov
mov
les
es
cmp
stos
push
sbb
jo
f2xm1
xor
movsb
push
xchg
lcall
xor
cmp
lcall
cmp
push
cwtl
jbe
data16
addr16
push
ficompl
ja
adc
addr16
jae
jmp
repz
mov
jg
pop
pusha
es
sarl
lock
mov
aaa
mov
fildll
scas
rcll
fwait
cmp
add
fidivrl
outsl
lcall
adc
push
test
repz
jnp
repnz
stos
xchg
std
push
in
pushf
lea
push
xchg
testb
mov
mov
xchg
mov
imul
xor
js,pt
pop
xor
dec
mov
outsb
cmc
adc
adc
loop
mov
adc
xor
jnp
fcomi
and
cld
test
xchg
aad
adc
loop
push
mov
insb
mov
xchg
pop
stc
rcrl
adc
lods
jnp
push
int3
fwait
std
je
rcl
and
adc
or
jnp
loopne
repz
inc
mov
push
imul
shlb
shlb
mov
or
imul
cld
das
insl
mov
mov
cmp
in
jnp
or
sbb
jnp
loop
sbb
into
in
mov
mov
cli
aas
popa
mov
fwait
jnp
sub
ret
leave
cmpsl
dec
pop
mov
adc
pop
mov
data16
push
xchg
aaa
clc
dec
inc
adc
xor
pusha
jmp
pop
fwait
rcrb
add
jno
add
xlat
mov
jae
sub
mov
out
fwait
hlt
testl
mov
mov
dec
popa
adc
cmp
cmp
fldt
and
out
gs
jnp
fs
adc
rcl
mov
insb
pop
mov
push
stc
pop
aaa
pop
push
add
jmp
jnp
ds
mov
imul
adc
jle
xchg
repz
iret
outsl
xchg
sbb
mov
sbb
cwtl
pop
and
mov
in
ds
in
pop
stos
dec
cmp
cmc
mov
jno
fldl
or
jne
flds
jecxz
mov
dec
adc
xchg
fisubrl
jnp
int3
adcb
inc
push
add
xor
insl
adcl
dec
pop
scas
lcall
pop
jmp
std
fwait
in
mov
cs
and
mov
mov
xchg
pop
and
aaa
inc
loope
dec
ja
pop
test
sbb
call
bswap
loop
jmp
sub
test
mov
pop
out
push
jnp
hlt
cwtl
shll
fadds
pop
pop
bound
xchg
imul
sub
cmp
dec
jae
push
sbb
ljmp
mov
pop
jnp
js
xor
ja
jnp
fists
and
and
mov
imul
mov
jns
mov
jnp
add
lea
dec
aam
sarl
loop
add
ret
js
and
outsl
test
cwtl
int
mov
in
fnstenv
inc
or
jnp
xchg
and
jnp
sbbb
ds
cmp
jge
loop
pusha
aas
mov
mov
mov
push
sti
jns
mov
jns
pop
and
inc
or
dec
jl
inc
icebp
jle
xor
xor
sbbb
mov
jb
jns
or
xor
inc
daa
jnp
mov
das
and
lcall
sbb
in
out
jnp
mov
sub
xchg
sub
xor
rolb
les
mov
adc
repz
xchg
outsb
cwtl
xchg
daa
stos
jnp
push
enter
insb
xor
xor
xchg
jnp
push
pop
mov
mov
jp
push
jle
mov
jnp
xchg
xchg
and
add
outsl
mov
xlat
jl
adcb
inc
cltd
jecxz
movsb
jns
subb
stos
mov
sub
les
shll
jnp
call
movsl
enter
inc
into
add
dec
add
in
shl
xlat
std
push
jnp
or
es
jnp
call
scas
jecxz
dec
popf
in
xor
and
xchg
and
mov
mov
jnp
push
push
add
cmpsl
test
pop
lret
aaa
pop
jnp
fcompl
popa
addr16
push
cmp
dec
loopne
shr
sub
lcall
mov
mov
pop
add
pop
lods
addr16
cwtl
fwait
int
cltd
mov
push
decl
outsl
add
je
lds
jnp
aad
push
out
jp
mov
stos
lods
fwait
test
push
enter
lea
out
mov
jnp
lret
mov
es
stos
shrl
inc
or
mov
jnp
movsl
int
push
mov
rorb
popf
leave
hlt
jns
sub
xor
jle
insb
adc
leave
jnp
divb
outsl
cmp
dec
je
insl
sbbl
cli
dec
sti
data16
push
aas
iret
fwait
add
loope
adcb
push
xchg
jo
gs
pop
dec
inc
dec
jnp
jl
mov
ja
fnstcw
lods
mov
lret
imul
lock
sbb
ds
lods
or
mov
fwait
out
jnp
xlat
adc
and
popf
enter
movhps
jno
add
dec
jl
out
push
adc
jbe
push
lcall
es
and
mov
adc
rcrl
jno
xchg
fstpt
xor
cmp
imul
mov
or
jnp
je
inc
add
mov
jnp
fwait
push
xchg
mov
sub
jnp
mov
out
push
add
jnp
lcall
idivl
pusha
add
pop
mov
xchg
jnp
inc
sbb
xchg
rorb
jnp
mov
vmovdqu
adc
mov
pop
insl
sub
cmp
lret
test
fyl2xp1
add
pop
add
pop
mov
js
outsb
insb
xchg
lcall
lret
leave
or
inc
enter
shrb
push
or
xor
and
mov
inc
sti
jge
enter
and
cmp
inc
lods
push
or
out
pop
call
lret
sub
sub
imul
jno
cmpb
jge
cmpsl
fisubs
xor
sub
xchg
jnp
adc
cltd
das
cmp
jnp
adc
pop
in
scas
pop
inc
out
dec
loopne
fildll
arpl
in
fdivrl
jmp
mov
sub
std
jmp
adc
pushf
inc
jae
fsts
loopne
jnp
mov
xchg
jb
or
cmp
rcl
mov
xchg
test
lods
xor
inc
push
mull
xor
or
lret
jnp
addr16
push
mov
xor
pop
icebp
pop
dec
pop
jnp
inc
das
jo
test
int
fxch
cld
sub
cmp
pcmpgtb
pop
pop
out
movsb
sbb
sbb
shrb
sti
xchg
movsb
mov
in
rcll
inc
push
mov
mov
lahf
sbb
pop
xor
lods
pop
iret
jp
ljmp
outsb
insb
xchg
xor
xlat
ja
lock
dec
jle
stos
xlat
jno
outsb
push
pop
inc
and
fisubrl
movsb
fwait
and
add
jl
int3
mulb
movl
pop
mov
dec
adc
xchg
sbb
ja
adc
cmc
push
clc
nop
sbb
jns
fstpt
hlt
jns
fwait
jl
jle
sahf
roll
or
in
mov
incb
mov
shll
mov
stc
dec
push
jmp
xchg
insl
aaa
adc
xor
xchg
or
dec
mov
pop
jnp
jle
imul
or
jmp
cmp
stos
mov
mov
arpl
dec
or
or
add
jo
xor
sub
pusha
dec
rcrb
jns
and
test
pop
xor
sbb
pop
mov
or
ss
iret
int3
rolb
negl
imul
mov
out
repnz
es
lret
cs
sti
mov
adcl
data16
aad
inc
pop
enter
or
jge
lret
ss
pushf
paddq
and
or
movsb
pop
and
test
jnp
daa
cmp
xor
lds
jnp
mov
scas
push
jl
jnp
fimuls
lds
shl
cwtl
and
add
andb
mov
mov
hlt
cmp
mov
pop
addb
dec
out
jmp
jnp
out
push
bound
sub
shlb
ret
mov
mov
mov
dec
inc
out
ljmp
jp
adc
xchg
and
jnp
sub
imul
mov
pop
movsl
jge
jnp
mov
cs
and
mov
loope
inc
push
add
cmp
cld
or
xchg
cli
lods
lahf
pop
mov
shrl
xchg
fisttps
sbb
int3
mov
jno
scas
xor
dec
jnp
pop
and
bound
jns
dec
popa
scas
sub
xor
pop
inc
int
jnp
xchg
test
cmp
cs
xor
dec
pop
pop
jnp
movb
jl
mov
push
sub
popa
ja
jno
dec
inc
xor
jnp
insb
aaa
dec
adc
test
jnp
cmp
fwait
jge
call
mov
gs
jnp
pcmpgtd
jnp
enter
scas
pusha
movsb
mov
es
mov
sbb
cmpb
inc
js
jnp
lret
adc
and
shll
inc
sbb
jnp
imul
xrelease
mov
or
push
jnp
cli
xor
jnp
adc
icebp
test
sub
and
test
xor
pusha
inc
add
into
ficomps
lods
mov
cmp
outsl
sub
ljmp
jnp
ds
hlt
sbb
dec
cmp
rcrl
cmpsb
pop
lods
in
xchg
mov
sar
jns
frstor
push
push
sbb
inc
ljmp
and
ficompl
ljmp
adc
xor
or
push
les
lret
ss
add
sbb
pusha
jnp
dec
pop
xor
adc
test
inc
test
ljmp
cli
addl
scas
mov
pop
lcall
or
movsb
cwtl
lods
add
rcl
mov
addb
push
daa
or
fidivs
jl
cmp
imul
mov
lret
mov
sub
push
jnp
sbbb
dec
mov
cmp
pusha
lock
stos
and
mov
fisttpll
and
pop
dec
jnp
es
or
jle
incb
mov
testb
jnp
insl
lods
dec
ljmp
fnstcw
bound
adc
shl
rcll
int3
std
xchg
outsl
and
fsubrl
mov
lcall
jae
hlt
fcompl
mov
mov
cmp
add
or
adc
loop
adc
mov
mov
or
inc
lret
enter
ds
in
call
sbb
inc
lods
popf
adc
jp
inc
ljmp
cli
cmp
sub
scas
std
pop
sub
xchg
imul
mov
out
pop
leave
dec
jnp
and
mov
xchg
or
fidivrl
jns
jge
decb
inc
sub
inc
push
js
add
mov
pop
mov
xchg
xor
add
ret
int
popa
leave
mov
xchg
adc
jmp
std
jnp
loope
xor
mov
jnp
cmp
jle
jnp
add
fwait
mov
mov
xchg
pop
mov
pop
cltd
dec
stc
pop
dec
pop
repz
mov
adc
xor
scas
xchg
sub
jbe
int
scas
fcompl
ja
cltd
xchg
iret
insb
xchg
and
test
mov
lea
vcvttps2dq
insl
ljmp
jl
ds
xchg
or
sbb
adcb
cmp
pop
jno
push
adc
cld
sub
push
adc
imul
add
out
aas
mov
idivb
jae
push
idiv
imul
mov
repz
jo
fcom
or
mov
mov
jae
xlat
andl
fwait
jnp
rcrb
cltd
std
jle
sarl
and
setae
dec
mov
dec
mov
jnp
ret
sahf
out
jecxz
aam
jnp
movsb
sbb
mov
and
negl
sti
dec
addr16
mov
mov
out
jnp
nop
mov
inc
jnp
sub
aas
arpl
ja
stc
pop
movsb
enter
mov
rol
imul
pop
leave
xchg
pop
daa
jns
or
xor
in
loopne
fildl
sub
test
jbe
fwait
std
loopne
mov
jo
loop
mov
hlt
jl
and
mov
stc
pushf
add
and
mov
xor
dec
dec
jnp
adc
test
fwait
inc
push
lcall
scas
xchg
mov
jnp
xor
cmp
outsl
insl
in
sahf
mov
push
jno
jnp
add
and
test
jnp
fldenv
ds
lods
jnp
pop
test
je
andl
add
jp
mov
mov
leave
mov
icebp
stos
dec
jnp
or
out
jnp
std
pop
mov
push
push
insl
xchg
das
lods
div
sub
mov
jns
rcr
or
imul
mov
jnp
fldenv
mov
test
popf
jge
jnp
lea
push
std
jecxz
cmp
jnp
das
mov
fisubrl
pusha
adc
push
push
int3
call
xor
and
test
xor
dec
movl
bound
imul
insb
cmp
push
cmc
cmp
and
xor
lea
int3
add
and
fldpi
push
jnp
fiadds
mov
or
rorl
mov
sbb
adc
sbb
aad
jp
adc
jnp
sbb
gs
call
sub
jnp
push
aam
mov
jne
xchg
dec
lahf
add
jnp
mov
jge
push
mov
fadd
and
lock
call
xor
xchg
int3
aaa
ljmp
jge
mov
std
sbb
lock
xor
fs
addl
jge
fwait
sub
dec
clc
ds
adc
popa
fcomp
jnp
test
test
xchg
add
adc
pop
test
icebp
and
or
aaa
aam
jnp
mov
out
and
sub
adc
gs
cmpsl
inc
ds
mov
inc
addr16
jp
fnsave
xchg
in
stc
push
xchg
jns
mov
jbe
imul
jle
test
mov
mov
pop
and
mov
and
ss
jnp
mov
into
mov
dec
push
jnp
dec
pop
rorl
sti
test
je
mov
mov
sbb
or
loopne
jle
rol
jne
adc
push
fdivrs
sub
outsl
cmp
test
in
cwtl
jnp
sti
sbbb
mov
add
sub
jo
jnp
rcll
push
jnp
arpl
mov
xor
test
jmp
negb
jnp
or
lea
inc
and
pushf
fadds
sti
mov
jnp
hlt
cwtl
mov
inc
mov
adc
xchg
sub
push
movsb
cld
in
sub
jnp
lods
add
test
jl
xchg
fwait
fs
sbb
and
dec
scas
jnp
out
nop
insb
dec
cmp
ja
fimuls
inc
cmp
jle
jnp
hlt
push
add
sbbb
and
push
lods
dec
jmp
add
fs
adcb
jge
inc
sbb
out
xchg
jmp
sbb
pop
sbb
sub
jge
sub
jnp
into
inc
add
fwait
mov
loopne
ljmp
cmp
das
sbbl
hlt
inc
fwait
sub
jo
clc
mov
jnp
imul
data16
adc
in
mov
dec
cmp
gs
jmp
cmpl
jge
mov
test
sub
and
ja
int3
sahf
xchg
gs
mov
in
cmp
pop
xchg
cmpsb
lcall
cwtl
lods
dec
xorl
ss
ja
movsb
push
jae
mov
mov
or
cwtl
jecxz
popl
jo
jns
pop
xor
add
jae
rol
nop
mov
jl
mov
mov
fistps
and
inc
pop
std
pop
pop
loopne
test
lods
mov
jno
stos
push
frstor
sub
sub
sub
mov
mov
push
cs
aam
jnp
lock
inc
fwait
jnp
rorb
mov
in
xlat
xchg
add
xor
fists
add
mov
xor
mov
icebp
aam
rorl
jns
mov
test
cltd
jnp
out
addr16
lret
movsb
fdivrs
iret
push
orl
ret
addb
mov
push
jno
js
shl
sbb
mov
jo
jnp
jne
or
pop
jp
les
xchg
xor
and
fstl
repz
pop
mov
movsl
cld
fwait
jnp
pusha
xor
jnp
ljmp
jl
xlat
gs
push
dec
mov
jnp
add
push
arpl
jnp
neg
test
cmp
mov
cmp
jnp
cmp
mov
ljmp
inc
dec
cli
mov
jnp
xor
and
add
lds
test
imul
add
imul
jnp
repz
adc
stc
xchg
jnp
mov
insb
scas
push
icebp
movsb
jnp
retw
popa
test
cmp
push
and
mov
mov
fwait
ret
scas
xchg
jnp
sbb
mulb
out
loop
lret
leave
add
imulb
mov
cld
mov
repz
inc
fwait
push
insb
cmp
and
popf
push
movsl
sub
sub
stos
add
mov
jnp
xlat
es
gs
mov
jnp
sete
xchg
mov
pop
pusha
mov
mov
test
pop
push
mov
jnp
movsl
mov
aad
addb
inc
out
adc
xor
mov
or
push
push
push
sbbb
sbb
movsl
sbb
imul
lock
dec
fnstcw
inc
push
nop
popa
xor
pop
sub
scas
call
push
jnp
adc
pop
dec
xchg
dec
jnp
cmp
aas
xchg
mov
jnp
sub
mov
adc
pop
aad
xchg
aam
xchg
ja
es
or
inc
xor
test
mov
jnp
aas
or
jecxz
xor
jnp
orb
jnp
cmp
sbb
cmpsb
dec
add
movsb
mov
ret
lds
fs
mov
jnp
push
int
sbb
shr
inc
aad
mov
adc
sbb
lods
xor
sub
jle
adcb
scas
mov
movsl
inc
icebp
mov
jecxz
adc
adc
shll
pop
lret
jnp
push
lcall
insl
std
mov
add
add
dec
sbb
data16
cltd
lea
cmpsl
jnp
mov
sub
lahf
loop
movsb
xor
out
mov
setl
jnp
sbbl
cmpsl
dec
dec
inc
sub
setp
loope
jnp
decb
jnp
sub
push
shlb
xchg
and
aaa
call
dec
mov
int3
jnp
mov
pop
dec
or
xlat
shlb
pop
movsb
push
inc
dec
scas
cmp
data16
outsl
outsl
stc
negl
cmpsl
mov
test
mov
lock
jnp
aad
and
jnp
mov
lds
aas
or
in
mov
dec
or
aad
sbb
mov
daa
push
sbb
nop
stc
jae
sarb
jbe
sub
push
sti
and
ja
cmp
fdivrs
imul
stc
mov
and
xchg
fwait
add
sub
shrl
outsb
jo
push
cmp
movsl
out
daa
test
xor
mov
lods
xchg
jae
mov
fyl2xp1
repnz
add
dec
outsb
icebp
pop
fnstsw
add
mov
les
call
pop
jns
jae
cmpsl
lods
add
mov
pushf
pusha
cmp
adc
lods
mov
je
loopne
jnp
fadds
jnp
and
push
add
mov
mov
test
jnp
mov
fs
out
dec
addr16
jo
cmp
dec
ds
movsb
mov
jnp
mov
outsl
xlat
add
jnp
fwait
pop
rcrb
aaa
pusha
addr16
xchg
loope
popa
js
inc
mov
sub
stos
jnp,pn
out
xchg
and
xchg
jmp
ret
xchg
ja
sub
mov
jecxz
ja
pop
lea
cltd
jnp
push
pusha
das
mov
adc
scas
push
inc
fs
push
dec
loope
and
repz
mov
dec
ss
jb
jl
lcall
push
mov
int
jo
add
fwait
mov
jnp
push
enter
clc
in
inc
push
mov
xchg
call
cwtl
jnp
jp
mov
jnp
mov
or
scas
jb
mov
jge
shll
lock
aad
mov
jnp
das
lret
enter
popa
push
jae
dec
push
pop
jp
lock
inc
jnp
xor
testl
mov
or
mov
out
pop
dec
dec
mov
cmp
jnp
push
dec
lea
faddp
outsl
je
fucom
dec
inc
pushf
lret
ret
movsl
ds
loope
jp
roll
outsl
aaa
mov
sbb
orb
jb
mov
add
out
int3
sbb
and
inc
pop
ret
out
push
cmp
jnp
jns
in
pusha
sti
xchg
jle
insb
movsl
jnp
pop
sahf
lods
xchg
in
test
aam
sbb
jb
popf
jno
sti
mov
addb
ret
jp
dec
cmp
dec
mov
jnp
add
xor
das
leave
vpunpckldq
mov
jg
sub
push
or
in
addr16
lock
cmp
sbb
cld
pushf
adc
scas
push
xchg
mov
les
push
in
testl
mov
push
mov
addb
jge
jnp
aad
and
push
cmc
jnp
ljmp
jnp
cmp
stos
mov
xchg
cmp
pop
outsl
sub
xchg
sub
jb
movsb
jnp
test
mov
jnp
dec
xor
clc
into
xchg
fidivrl
and
mov
dec
pop
fsin
dec
test
outsl
shll
xchg
jl
lds
hlt
stos
pusha
jnp
add
sbb
push
fwait
push
outsl
int
out
shlb
jns
repz
sub
lds
push
lea
sbb
xchg
mov
test
xchg
inc
jnp
out
pop
out
pop
adcl
dec
rorb
add
mov
das
jl
adc
xchg
jnp
in
gs
sbb
push
jnp
lods
mov
jnp
pop
sbb
mov
sti
fnstsw
enter
shl
sahf
xchg
rcrb
test
fwait
aaa
jnp
dec
ds
cmpsb
enter
sub
sbb
sar
mov
inc
jb
ds
fstl
mov
outsl
push
insb
std
dec
push
jnp
mov
dec
add
nop
xor
hlt
mov
sahf
mov
mov
sub
pop
jnp
and
push
mov
lods
xlat
mov
stos
in
cmp
add
and
jp
jne
filds
lret
loope
mov
pop
loope
lods
enter
xchg
add
add
sub
dec
jle
adc
cmp
outsb
inc
or
jno
notl
mov
adc
in
popf
dec
push
outsl
pop
orb
cmp
mov
push
out
sub
sub
in
jle
mov
sbb
subb
dec
push
mov
pop
jnp
aad
fwait
cli
xor
xor
hlt
inc
shl
int3
insl
sub
ljmp
sti
jae
movsl
pop
pop
jnp
mov
lret
inc
jnp
imul
std
in
fidivrl
data16
push
dec
mov
sbb
mov
add
push
and
mov
cmp
jnp
xlat
xor
inc
out
mov
shl
push
out
cmp
cs
and
pop
scas
mov
out
fdivl
cmpb
mov
in
jne
mov
repz
fwait
jnp
jbe
outsb
add
popf
push
mov
and
mov
push
and
test
adc
inc
pop
fwait
test
dec
lds
sbb
shrl
stc
sbb
mov
adc
inc
jnp
inc
andb
adc
rol
mov
nop
jmp
xchg
pop
arpl
or
mov
sbb
addr16
and
jne
jns
mov
lcall
in
int3
nop
xchg
jnp
into
jns
aaa
shrb
push
or
sub
jnp
and
rolb
push
fnstcw
mov
decl
shll
push
dec
call
out
lea
cld
pop
outsl
fisttps
push
push
dec
jnp
inc
and
jne
xchg
xchg
mov
loopne
popf
mov
jnp
out
std
lret
nop
aad
pop
outsl
or
cltd
mov
movsb
inc
negl
pop
mov
sti
out
mov
jno
sti
in
dec
stos
test
add
sub
lret
lds
outsb
bound
sub
das
cmp
pop
jnp
or
xor
dec
xor
adc
push
add
fnsave
push
mov
daa
sub
add
popa
pusha
inc
add
icebp
inc
jp
rcrl
push
jnp
nop
into
mov
adc
jnp
popf
ja
sub
pop
jnp
scas
pop
push
add
mov
sbb
mov
jbe
mov
xor
scas
pop
movsl
cmp
push
mov
inc
and
and
loope
add
mov
push
pop
mov
mov
lret
xchg
shll
jmp
sti
xor
jnp
pushl
int
enter
out
mov
cmp
xor
sbb
pusha
jnp
pop
mov
cmp
jmp
pop
push
pop
mov
cmp
mov
jnp
ret
mov
out
xor
pushf
push
inc
sti
loop
dec
popf
mov
imul
sarl
sub
jnp
or
stos
mov
add
stc
stos
cs
cld
jnp
adc
inc
xchg
shll
add
mov
outsb
and
push
scas
mov
cmp
daa
mov
jnp
jge
fsubl
adcl
push
mov
sti
mov
push
mov
idivl
push
fldenv
adc
push
clc
les
push
das
pop
shl
pushf
test
jns
out
adc
outsl
mov
loop
insb
cld
sub
jnp
and
and
mov
dec
add
push
push
xor
push
dec
jns
xor
js
and
scas
inc
cmp
dec
jnp
or
adc
fwait
adc
or
adc
push
in
les
jno
xor
ret
lock
add
ret
lahf
push
rclb
and
mov
pop
dec
test
lods
mov
out
xchg
arpl
adc
mov
jnp
sub
xor
out
jno
pop
out
sti
shl
or
mov
xchg
add
fwait
adc
dec
or
sub
jns
nop
xor
push
pop
out
lcall
add
or
jns
mov
mov
add
fs
lcall
jnp
xchg
xor
xor
sbb
mov
pusha
je
cmpsl
mov
jnp
sbb
stos
in
in
mov
mov
mov
xlat
cmp
add
xchg
push
jnp
cltd
xchg
mov
popf
push
jnp
in
sbb
es
xor
cmp
data16
enter
jae
mov
add
mov
mov
xchg
jp
fwait
out
jl
ret
push
jle
xor
pusha
sbbl
mov
jl
lahf
data16
pop
sub
jns
sub
mov
and
loopne
push
pop
adc
dec
or
pop
mov
insl
shlb
jne
sbb
fwait
in
loop
pushf
sub
leave
iret
xchg
in
stc
mov
jnp
dec
std
mov
sub
jnp
add
ljmp
stos
fdivrl
daa
rclb
pop
ret
gs
ljmp
cmp
adc
enter
dec
sti
lds
bound
push
arpl
out
inc
cmp
in
arpl
xor
dec
mov
mov
push
inc
push
sti
pop
fstl
xlat
xchg
xor
mov
pusha
xchg
mov
and
or
pop
shll
jnp
rolb
add
mulb
mov
je
jae
sti
ret
fs
sbb
ss
mov
push
jle
stos
jnp
jb
mov
xor
pop
ret
lret
jp
cmp
and
xchg
dec
and
push
inc
lock
stc
test
jnp
cmp
movl
cmpsb
imulb
dec
push
je
cmp
outsb
ljmp
push
imul
jp
or
popf
mov
outsl
xchg
and
cld
iret
mov
add
jnp
pop
adc
add
repz
or
xchg
xor
inc
cmp
pop
mov
inc
mov
sbb
push
ljmp
dec
xchg
mov
cvtps2pi
pop
dec
cmp
push
ja
scas
or
cli
pop
mov
fsub
popf
imul
add
test
adc
xor
sahf
jbe
mov
daa
aam
dec
mov
nop
ret
mov
xor
cmp
jnp
fldl
mov
dec
test
or
nop
addl
aam
outsb
mov
inc
mov
das
jnp
cwtl
test
pop
lods
std
xor
adc
nop
in
push
inc
mov
hlt
cltd
mov
and
pop
mov
dec
jbe
sbb
cmpl
jns
pusha
imul
cmpsb
int3
adc
fcmovne
jge
sahf
mov
push
cmp
jnp
or
sub
inc
jnp
mov
pop
xor
jl
lcall
pop
lods
outsb
push
xor
movsl
outsl
loop
repz
pushf
test
push
cltd
pop
andb
xchg
xor
loopne
scas
lods
sarl
cmc
dec
push
cwtl
cmp
das
out
test
gs
sub
and
fld
lds
jnp
mov
imull
jno
lods
jnp
mov
loopne
cmpb
iret
jnp
ret
movl
lret
loopne
jp
add
outsl
sbb
xor
sbb
push
fimuls
add
sarb
mov
fwait
std
outsl
pop
daa
mov
cmp
negl
xorl
jnp
fcomps
out
cld
xlat
sbb
dec
xor
lock
mov
cmp
push
mov
xchg
lds
dec
lret
rclb
cwtl
and
inc
insl
gs
push
mov
mov
mov
stc
or
aam
mov
loopne
sbb
cmc
mov
lret
lods
popl
fs
pop
jbe
cli
stos
sbb
or
add
pop
cltd
ret
lock
cld
ret
lcall
jns
mov
sub
rolb
cs
adc
jns
jge
std
jo
cli
fwait
out
jae
jmp
outsl
test
and
fildl
ds
sarb
pop
and
daa
jnp
dec
int
cmc
test
xor
adc
je
enter
test
dec
into
scas
mov
negb
xchg
lcall
push
pop
aam
cmp
mov
push
push
pusha
iret
xchg
jne
clc
enter
mov
lcall
pop
outsl
insb
mov
pop
dec
push
imul
xor
sbb
or
ss
int3
jge
sti
pusha
jl
call
cmp
insl
or
push
mov
das
inc
fimuls
inc
inc
sbb
push
push
fists
repz
js
push
leave
ret
in
pushl
dec
movsl
mov
call
push
scas
sub
das
icebp
xor
xor
sbb
jns
inc
andl
xor
pushf
stos
movsb
xchg
outsl
pop
mov
insb
xor
sbb
jo
mov
inc
push
xchg
popa
mov
xor
jb
adc
cmpl
out
std
scas
mov
mov
outsl
je
mov
inc
add
pop
mov
rolb
jge
std
add
lock
sbb
jo
fisttpl
cli
xor
jbe
add
mov
and
testl
pop
test
fiaddl
dec
sub
pop
pusha
fwait
push
xchg
gs
push
mov
pop
sbbb
decb
in
jb
xlat
repz
mov
repnz
cmc
pop
mov
lret
jnp
xchg
xor
push
cmp
jne
repnz
idivl
sahf
imul
in
sbb
jle
or
pop
mov
push
mov
fimull
movsb
dec
cmpl
xchg
ja
fistps
mov
jnp
mov
test
sarb
sbb
orb
cwtl
adc
inc
pop
push
jo
ja
or
lret
lcall
pop
inc
mov
push
cmc
pop
sub
add
test
js
inc
pop
stc
push
hlt
mov
sub
mov
push
jnp
adc
pop
mov
pop
imul
mov
jnp
add
aas
ret
insb
ja
mov
pop
int3
insl
sub
in
mov
mov
pusha
push
jp
lods
lods
cs
stos
cld
stc
in
mov
jge
and
mov
cmc
or
add
jle
fwait
push
out
sbb
cwtl
and
sbbl
stc
mov
pop
xor
popf
push
mov
cmp
out
repz
push
rorl
cmp
inc
xor
xor
mov
pop
xchg
test
adc
pop
cmp
cmp
xchg
push
jnp
test
inc
fstpl
repz
sbb
mov
xchg
arpl
leave
dec
dec
xchg
sbb
mov
daa
inc
arpl
lea
stos
lcall
test
pop
dec
mov
mov
lods
addb
pop
lahf
add
xor
add
xchg
pop
xorb
ljmp
lock
sub
cmp
movsl
ss
mov
out
insl
ljmp
pop
gs
mov
std
jbe
mov
jae
ss
jne
xchg
mov
jns
cmpsl
ss
mov
addl
push
mov
outsl
pop
int
rcll
in
aam
lds
cmpsb
pushf
sub
dec
xchg
cmp
inc
push
push
sub
subb
out
cli
fnstsw
mov
cmpsb
mov
mov
push
mov
popa
dec
loope
cmpsl
sub
jae
sarb
xchg
addr16
or
add
pop
xchg
divb
xor
pop
jo
push
sarl
clc
fcomps
movsl
into
xchg
pop
xor
cli
and
cmp
lods
jmp
dec
xor
cld
movsl
pusha
stc
jl
stos
out
lods
fs
and
mov
jl
daa
cmpl
iret
jnp
ss
inc
pop
xor
jl
das
lods
andl
jo,pn
lea
enter
and
lahf
add
ret
scas
outsl
mov
mov
sbb
mov
sbb
dec
arpl
decb
subb
stos
ret
xchg
addr16
incl
sbb
pop
pop
xor
cltd
roll
mov
push
sub
mov
and
mov
inc
iret
jl
xchg
popa
stos
jnp
push
mov
xor
jnp
lods
int
xchg
xchg
les
jo
data16
loopne
test
xor
popa
shrl
jnp
xchg
mov
lds
mov
shrl
jge
jnp
add
sbb
sub
jnp
mov
adc
stos
pop
out
sti
iret
jnp
mov
add
jnp
ds
inc
test
pop
jnp
int
das
notl
movsb
pop
aaa
adc
cltd
and
pop
mov
aaa
out
push
psubd
and
pop
sbb
mov
dec
cld
aaa
adc
andl
or
lods
aas
cli
push
call
pop
xchg
push
xor
mov
js
je
pushf
push
clc
mov
stos
sbb
push
outsb
cli
rol
jns
fnstsw
pop
movsl
jle
mov
mov
cwtl
enter
pop
stos
mov
cmp
jae
les
lds
push
push
xchg
mov
add
push
mov
dec
inc
daa
pop
andl
enter
xor
cmp
lds
test
cwtl
xchg
test
jns
sub
repnz
shrl
ret
xor
xchg
pop
stos
sbb
mov
xchg
fs
cmp
mov
mov
loope
jb
mov
inc
jb
sbbl
je
dec
fwait
jl
jnp
pop
mov
pop
int3
int
xchg
dec
jge
cwtl
nop
xchg
out
or
xchg
stos
mov
mov
xchg
and
add
adc
int3
outsl
test
negl
movsb
daa
xchg
mov
lahf
lea
incl
int3
inc
mov
pop
jb
push
mov
outsl
out
mov
movsb
cmp
push
lods
outsl
lock
lcall
fwait
lods
jge
mov
popf
and
cmp
mov
int
lahf
jl
dec
test
stos
dec
inc
xchg
push
subb
mov
popf
mov
lahf
outsl
scas
xchg
lret
dec
mov
add
jmp
inc
jbe
add
pop
test
addr16
add
cmp
sbb
mov
jo
xchg
es
add
add
mov
mov
add
mov
outsl
pusha
adcb
mov
pop
mov
scas
mov
orl
fildll
fbld
sahf
mov
in
pop
push
push
xchg
add
ja
or
mov
cmp
ds
xchg
mov
mull
cmp
sub
pop
fld1
cmpsb
sub
out
ret
mov
pop
jne
mov
or
jb
sbb
sahf
xchg
push
or
dec
scas
xor
xchg
or
jp
ror
push
aas
movsb
xchg
mov
dec
cmp
jle
fisttps
adc
cwtl
inc
mov
enter
ret
mov
mov
adc
jnp
xchg
out
sub
mov
sbbl
aad
jo
shrl
sub
xlat
cmp
stos
lea
in
sub
fcmovnb
fwait
jnp
jne
push
push
stos
stos
xchg
movsb
pushf
mov
sti
push
jnp
xor
movq
mov
mov
pop
into
jns
jae
decl
ds
pop
mov
cmp
cli
fcomip
add
out
sub
int3
test
fisttps
dec
std
ja
sbbb
imul
inc
jle
lock
pop
test
orb
jnp
dec
jge
and
movsb
ja
sub
jbe
jb
push
stc
leave
repnz
xor
adc
push
xchg
or
and
pop
xchg
outsl
and
fwait
mulb
jge
cmp
mov
sbb
lds
js
pop
iret
stos
sub
jmp
imul
cmc
xor
cli
push
clc
inc
cld
push
mov
test
lds
fisubrl
sub
add
pop
popa
jnp
scas
adcl
mov
jnp
gs
mov
jnp
mov
outsb
and
roll
xor
sbb
push
out
ja
outsl
add
rcrb
mov
mov
jnp
gs
adc
ret
bswap
sub
pusha
pop
sti
cmp
addr16
push
outsl
inc
jae
aad
pop
xchg
push
pop
pop
pop
outsl
push
je
push
push
mov
mov
sahf
shlb
or
jnp
rolb
mov
popa
outsl
mov
add
daa
sbb
repnz
pop
mov
jmp
addb
pop
daa
jns
add
xchg
out
jnp
push
jbe
push
xchg
jnp
push
add
ds
push
test
stc
mov
movsb
std
sub
mov
int
dec
jnp
cmpsb
mov
sub
sub
popf
icebp
inc
jo
gs
pop
shlb
cltd
push
jl
mov
enter
lahf
and
int3
and
mov
jl
pop
adc
mov
sub
testb
xchg
in
xchg
outsb
out
cltd
mov
add
fwait
test
in
mov
xchg
jnp
push
adc
and
out
jnp
sbb
adc
jnp
dec
add
fistl
mov
or
inc
push
mov
outsl
pop
xor
mov
adc
push
inc
mov
in
pushf
adc
mov
or
jnp
inc
mov
dec
ja
mov
out
mov
enter
mov
xchg
stos
add
inc
add
add
lock
int
pop
add
jnp
cmp
adc
jnp
dec
pop
sbb
jbe
jnp
mov
add
ds
stos
dec
xchg
jp
xor
and
and
lcall
inc
or
adc
cwtl
test
daa
jbe
outsl
aas
mov
clc
testl
mov
inc
dec
inc
jecxz
xor
xlat
xchg
arpl
xchg
in
cmc
adc
outsl
mov
lret
pushf
jo
jo
fsubrs
insl
jmp
aad
mov
jnp
sbbb
rcll
mov
je
sarl
shl
or
push
add
sbb
jmp
jnp
mov
inc
paddsw
mov
mov
fs
pop
pop
ret
jl
mov
out
inc
add
add
jo
jl
pop
shll
pop
pop
dec
movsb
and
jns
jnp
nop
mov
push
jnp
loopne
xor
cmp
push
inc
nop
das
cmc
imul
jl
les
jnp
mov
outsb
rcrl
jnp
mov
dec
lret
jnp
push
pop
shl
fwait
xor
repz
rcll
mov
test
push
mov
ja
insb
call
mov
jnp
sbb
std
sahf
icebp
xorb
les
outsb
fdivs
mov
or
cmc
jnp
popf
insb
adc
sub
lods
inc
and
imul
aaa
sbb
icebp
mov
div
fmul
std
and
lds
ds
cltd
cmp
cmpl
and
out
ret
lea
jae
cmp
cmp
repnz
push
mov
xchg
xor
jnp
scas
cmp
lds
daa
and
add
clc
popf
testl
jnp
pop
sub
and
jmp
jnp
and
cmovb
leave
pop
jnp
pushf
rorb
ja
xchg
sbb
jmp
into
mov
roll
int
jl
js
xor
mov
xor
ss
jge
or
cmpsl
mov
movsb
and
xchg
and
aaa
stos
jnp
repnz
daa
adc
push
add
cltd
jns
mov
mov
fsubrl
inc
mov
cld
xor
cld
fistpl
or
ja
pusha
repz
negb
jns
add
lods
ret
push
and
aad
push
lods
mov
jnp
add
jnp
sub
loopne
outsl
cmp
rcrl
dec
jnp
iret
nop
into
dec
jle
add
mov
mov
cmp
mov
ja
hlt
push
divb
sbb
jmp
ja
dec
xor
clc
insb
fdivr
xor
sub
out
jnp,pt
adc
mov
jnp
pop
cwtl
and
call
aad
mov
xor
adc
lea
test
into
jns
out
dec
out
xorl
mov
dec
cld
popf
in
cmp
jnp
xchg
loope
lods
cli
mov
ljmp
jmp
test
fdivs
mov
lcall
dec
xor
fisubrs
pop
aam
jnp
test
enter
add
push
mov
jnp
andb
or
push
out
enter
mov
cs
adc
stc
xchg
es
mov
cmp
sti
push
ljmp
ret
pop
or
jp
mov
cmpsl
fdivrl
dec
je
adc
gs
jnp
insl
sbb
cmpsl
or
hlt
ds
ja
fs
mov
mov
cmp
inc
pop
add
cmp
ret
dec
cs
mov
jnp
ljmp
jnp
pop
xchg
aam
lret
iret
jno
gs
into
jnp
ficoml
rclb
jecxz
fs
idivl
stos
sub
jae
ret
scas
je
fs
sahf
sub
negb
stos
xchg
test
push
icebp
int
frstor
imul
out
and
jnp
mov
adc
cltd
xor
jnp
cmp
scas
or
xchg
lcall
cwtl
xlat
jl
out
add
leave
jge
lds
push
into
cmp
out
adc
dec
das
ljmp
cmp
or
test
clc
jns
int3
aas
and
jmp
mov
lock
pop
test
je
jge
jo
outsl
xor
sbb
push
mov
add
scas
call
mov
out
mov
push
cmp
gs
popa
int
in
adc
sub
cmpsl
int
xchg
add
cmp
jge
mov
inc
pop
mov
orl
mov
inc
push
jge
fwait
jnp
push
jbe
inc
adc
aad
stc
out
loop
sbb
das
push
add
jl
ljmp
inc
mov
insb
and
movl
or
or
fs
push
add
mov
pop
pop
push
divb
jb
sbb
adc
xor
adc
repz
int
mov
xorb
xchg
sub
fsubrs
in
test
xchg
or
jnp
push
sub
mulb
enter
mov
mov
jmp
js
icebp
or
push
dec
mov
out
jae
mov
jnp
mov
nop
jnp
pusha
cmp
lods
outsl
xor
in
popa
repz
mul
mov
ljmp
mov
push
or
daa
and
xchg
jnp
test
dec
sub
in
jnp
shll
std
ret
sti
xchg
mov
and
mov
sbb
adc
movsl
enter
dec
popf
out
jnp
inc
or
sub
jnp
xsavec
push
add
jnp
inc
shr
mov
xor
paddusw
jbe
adc
jnp
hlt
mov
jnp
dec
int3
cltd
mov
xchg
test
inc
cmc
incb
cs
and
cmp
es
sbb
push
adc
stos
mov
test
cltd
icebp
mov
lret
push
ds
cs
insb
lods
roll
inc
add
ss
movsl
test
mov
and
lret
jl
inc
mov
mov
sbb
pop
insb
add
add
addb
pop
movsl
es
push
and
loope
in
pop
das
pop
movsb
pop
jmp
test
mov
dec
call
sbb
mov
jns
mov
fwait
jecxz
and
mov
popf
jnp
in
and
lods
and
jnp
mov
xor
cli
sbb
sub
arpl
loop
int3
mov
fwait
icebp
push
push
push
mov
mov
into
dec
inc
inc
mov
and
dec
cmp
lds
dec
push
faddl
mov
inc
mov
fildl
rorb
and
mov
push
stc
les
mov
imul
xchg
jnp
imul
adc
cwtl
sub
jecxz
sbb
and
iret
xchg
inc
nop
mov
repz
jge
pop
lods
xchg
push
pop
sub
sub
mov
xor
jnp
imul
and
inc
jae
add
or
jnp
roll
jbe
xchg
popa
lret
sbb
jnp
jge
loopne
jle
fwait
jnp
bound
add
xchg
test
add
jnp
jns
xchg
mov
out
pop
in
pop
mov
jnp
negl
lret
rcrb
add
das
in
subl
daa
or
cmp
iret
popf
popa
jp
cmp
lret
stos
shll
jnp
dec
cmp
icebp
sbb
inc
outsb
mov
ja
les
mov
dec
mov
pushf
jnp
mov
xor
jnp
dec
mov
mov
ljmp
repnz
mov
mov
sti
nop
sarl
shll
adc
add
inc
test
push
sbb
fisubl
cltd
popf
dec
out
into
sub
or
bnd
lret
repz
mov
mov
out
jl
rcrl
dec
or
and
lods
mov
adc
hlt
add
jns
sub
mov
dec
jnp
clc
and
dec
rorb
sub
xchg
push
sbb
jae
jo
and
cmc
andl
mov
aaa
movb
mov
jnp
lahf
and
ficompl
xor
xor
bound
mov
mov
push
pop
pop
cmp
ds
inc
ds
jp
jne
fwait
lock
movsb
mov
xor
sub
popa
adc
mov
test
outsl
mov
rclb
js
movsl
push
aad
inc
outsl
inc
es
into
sbb
inc
dec
cmp
cltd
jno
sbb
push
jo
mov
test
sub
adcb
les
mov
sbb
jl
data16
js
sbb
dec
aaa
xor
fwait
sbb
adc
jge
inc
inc
jge
mov
jp
and
sbb
jnp
and
push
in
fistps
fcmovnb
xor
es
lcall
mov
jmp
test
adc
sarl
in
mov
dec
dec
fs
pop
out
jns
sbb
mov
jnp
mov
sbb
imul
or
ja
adc
push
mov
lds
cmc
cmp
fisubl
out
pop
mov
or
icebp
inc
addr16
add
inc
push
popf
jnp
pop
jo
testb
testl
fdiv
arpl
pop
pop
mov
cmp
ret
movsl
jnp
setl
ss
mov
inc
fstpt
dec
shl
jnp
in
jge
fdivrl
nopl
lods
cmp
jno
nop
sbb
mov
pop
sbb
add
or
push
nop
jns
movsb
pushf
int
xchg
jnp
bound
test
test
fdivp
or
jmp
mov
adc
cmpsl
sbb
add
push
mov
aad
outsl
fisttpll
jp
sub
jbe
jmp
pop
fisubs
inc
pop
cltd
repz
jp
and
inc
lock
aad
and
adc
pushf
out
or
xchg
enter
jle
ljmp
outsb
imul
jnp
inc
stos
arpl
iret
outsl
jnp
movsl
xchg
movb
cmp
jnp
imul
jns
int3
xchg
mov
and
cmp
push
add
sub
cmpsb
xor
rclb
mov
lods
add
outsl
pop
jo
outsb
sbb
inc
or
shll
adc
imul
fmull
push
xchg
cli
cmp
pop
outsl
push
call
ja
mov
ds
xor
dec
lret
xchg
repz
jnp
add
or
xor
mov
jnp
add
es
enter
mov
cltd
mov
fadd
stos
outsl
jle
pusha
cmc
call
jns
orl
inc
jno
sbb
mov
add
inc
xchg
fs
pop
adcl
mov
push
mov
sbbl
dec
push
ret
jne
cmpsl
mov
xchg
and
jo
xchg
rorb
push
inc
cmpsl
outsl
rcrl
shll
repnz
loop
in
iret
adc
lea
je,pt
ret
mov
jnp
idivb
xchg
sarb
mov
and
aam
mov
sbb
jmp
inc
dec
andb
es
push
mov
adc
movsb
add
jno
sbb
mov
mov
cltd
loopne
fcomip
jnp
cwtd
aad
loope
push
sub
aam
xchg
outsl
inc
bound
jg
jae
shrb
mov
inc
pop
xor
and
test
arpl
or
push
sbbl
dec
add
xor
fildl
adc
pop
cli
ljmp
out
sub
sahf
popf
sbb
fidivs
xchg
scas
enter
mov
inc
pusha
sbb
testb
xor
ja
cmp
dec
mov
jnp
inc
shlb
ret
jecxz
push
jnp
pushf
gs
push
xor
mov
int3
jnp
mov
pop
jne
fsubs
jnp
adc
xor
pusha
mov
xchg
icebp
outsb
inc
add
fadds
lods
test
push
inc
cmp
hlt
and
adc
mov
push
into
inc
jnp
pop
jmp
popf
jnp
sub
ja
jo
popf
jbe
push
or
jnp
mov
out
insl
jb
jnp
mov
cwtl
jge
jnp
lock
mov
jnp
movsb
fisubs
mull
xchg
mov
jnp
push
or
inc
add
mov
mov
pushf
lea
popa
notb
lock
outsl
faddl
into
es
and
cmp
mov
imul
stos
int
insb
cmpl
ret
lds
fimuls
sub
stc
inc
test
xchg
mov
repnz
mov
push
mov
popf
push
cmp
mov
mov
cmpsl
jnp
lods
pop
icebp
repz
lock
push
cwtl
and
adc
or
or
add
xor
push
jl
mov
adc
stos
test
imul
xchg
fimuls
pop
push
sbb
repnz
jnp
je
dec
std
lret
shll
testl
xchg
int3
ds
movsb
jnp
ret
ljmp
ja
mov
push
mov
es
mov
jo
add
mov
sub
pop
xor
nop
fistl
sub
test
repnz
xor
or
dec
scas
outsl
xchg
jl
push
les
and
and
fdivrl
ljmp
mov
jnp
push
sub
mov
int
popa
ret
mov
push
adc
cmova
das
jl
dec
xor
lea
hlt
jmp
stos
xchg
mov
cmp
jnp
js
ret
out
pop
jnp
xor
dec
inc
adc
lods
jnp
adc
inc
cwtl
inc
jae
clc
push
adc
sbb
jnp
rolb
enter
mov
cld
and
lds
adc
lcall
sbb
or
mov
xrelease
xor
inc
sub
inc
ja
clc
out
pop
xor
jns
pop
push
or
jnp
xor
mov
cmp
idivb
lods
hlt
shll
ss
sub
fsts
dec
pop
in
pushf
sub
sub
cmp
sbb
outsl
in
outsl
or
mov
sub
jmp
lret
sbb
or
rol
jae
stc
mov
jp
imul
add
sub
mov
loopne
aaa
add
jbe
adc
ja
scas
repnz
jmp
jnp
bound
push
jnp
movsb
or
push
add
pop
xor
adc
cwtl
pushf
jbe
jp
ret
inc
repnz
xor
ds
cmpsb
sbb
nop
add
movsb
jnp
mov
sti
sub
cmp
push
jnp
or
scas
push
shll
imul
push
sbb
subb
dec
dec
jnp
mov
rorl
fs
jnp
xor
js
outsl
or
std
adc
inc
mov
rcll
dec
test
int3
cmp
divb
sub
jnp
mov
add
xchg
adc
imul
movsl
cmp
pop
lea
xor
adc
ret
jnp
xchg
cmp
jge
ja
pop
fimuls
mov
sbb
pusha
ret
ret
jne
xchg
out
xchg
pop
dec
push
in
jnp
pop
sbb
test
dec
jmp
cwtl
jnp
jns
push
or
or
rcrl
and
and
popa
jecxz
lea
cmc
fdivrs
sbb
push
pop
xchg
push
mov
call
lahf
fwait
cli
fdivs
aaa
jnp
negl
mov
xchg
je
sbb
jp
and
pop
outsl
jno
push
call
cmp
cmp
and
mov
addl
cmp
in
or
mov
add
push
fisubl
push
sub
dec
xor
jle
and
fwait
push
fidivrs
add
aaa
jb
mov
pusha
push
inc
ja
adc
sub
loope
inc
aas
daa
inc
fiadds
ret
lret
mov
sbb
cmpsl
loopne
sub
in
pop
push
ljmp
jnp
push
cmc
mov
outsb
fimull
stc
jne
jl
jle
sbb
dec
push
or
or
lret
and
jb
push
mov
repz
fistpll
std
cmp
jo
push
movsb
mov
enter
pop
rcll
insb
lahf
mov
popf
mov
and
jnp
sub
mov
icebp
imul
sbb
mov
cmp
xor
push
jmp
outsl
jecxz
cmpsb
fadds
dec
test
ja
lcall
fadds
mov
sbb
pop
pop
out
loopne
and
mov
jae
jnp
push
ss
jmp
in
out
mov
addr16
sbb
pop
jp
cmp
fildl
jnp
fdivrs
cwtd
add
xchg
pop
ja
and
repnz
shll
shlb
sahf
fs
inc
and
xor
xor
pop
and
mov
jne
sbb
fmuls
mov
sbb
and
imul
out
mov
fistpll
jbe
pop
cwtl
xorl
mov
jmp
inc
int
movsb
xchg
stos
jnp
dec
lock
lcall
insw
inc
sub
lods
cwtl
inc
mov
lods
xor
adc
ljmp
jnp
pop
pop
ret
fwait
lods
jnp
pop
jns
inc
mov
test
inc
push
inc
clc
lock
mov
rcrl
add
sub
dec
out
pushl
xchg
lock
adc
jnp
xlat
sti
push
mov
call
popl
roll
ficomps
in
xor
and
and
or
adc
shr
stc
mov
popf
pop
stos
cmova
jp,pt
jge
movb
sbb
test
rolb
int3
cs
jnp
push
cmp
jnp
mov
bound
or
xor
subl
mov
pop
data16
xchg
ret
fs
push
int
add
daa
int3
xor
mov
xor
dec
es
and
sbb
loope
mov
in
mov
jns
cmpsb
xor
cmp
add
jnp
add
xrelease
cltd
enter
xchg
call
dec
xorb
mov
mov
cmp
and
aam
iret
movsb
xchg
jae
or
out
add
mov
mov
cld
mov
into
aas
cmpsb
xchg
ror
pushf
pop
jnp
int
mov
and
add
call
or
cs
in
jnp
dec
and
outsl
lea
mov
mov
leave
adc
les
cmp
cmpsl
inc
jb
cmp
cli
ja
mov
jo
dec
dec
outsl
shr
stc
ret
jns
sbb
add
hlt
or
into
mov
js
mov
jnp
pop
inc
lods
loop
repnz
or
jb
jbe
inc
pop
mov
addr16
cwtl
inc
jns
ljmp
ret
inc
aas
repnz
push
xor
jnp
push
out
cwtl
mov
movsb
ljmp
jnp
push
xor
fmull
jp
lock
jp
sahf
push
mov
ja
inc
pop
push
movsl
add
decl
pop
lds
adc
jnp
test
mov
in
aaa
outsb
jnp
lea
dec
icebp
mov
push
push
sub
ret
xchg
dec
inc
lods
enter
and
test
xchg
mov
adc
pusha
push
jnp
call
jno
jnp
icebp
inc
sbb
lods
jnp
xchg
dec
cmp
test
or
adc
xlat
jmp
jnp
stos
ret
into
mov
mov
aad
push
push
and
mov
jmp
test
add
push
inc
xchg
mov
pushf
sbb
jns
sbb
test
xchg
mov
xchg
mul
jnp
rorb
repz
stos
adc
int3
push
cs
cmpsb
push
jnp
aas
pushf
adc
subl
jmp
and
dec
test
ds
jnp
pop
mov
adc
sbb
inc
mov
xor
and
pop
ret
add
fisttpl
jmp
insb
xor
cmp
cmpl
jge
inc
pop
cmpsb
gs
sbb
iret
adc
or
xchg
mov
mov
mov
mov
add
data16
ror
mov
outsb
cmp
push
jmp
jge
jnp
cmpsl
incb
sti
sarb
ror
cmp
or
pop
fcoms
out
jnp
ljmp
mov
jnp
in
cmp
xor
add
mov
adc
pop
fwait
iret
cmp
jle
adc
jp
js
scas
out
push
inc
jmp
jae
push
or
dec
add
mov
cmp
mov
xchg
stc
lods
das
les
pop
mov
fwait
mov
stos
cmp
add
lahf
xor
jp
ret
xchg
pop
stos
enter
xchg
jnp
test
fmull
xchg
stos
aad
pop
xor
xor
push
adc
push
pop
pop
inc
jnp
movsb
pushf
loope
lret
push
dec
sub
mov
xor
les
mov
cli
test
sub
pop
ss
mov
cmp
lcall
mov
mov
mov
cmpsl
insb
mov
dec
inc
jl
fistps
mov
xchg
loope
sub
pop
hlt
sbb
popa
xor
in
stc
inc
icebp
ljmp
mov
aaa
push
pop
or
into
inc
mov
or
mov
insb
and
sub
xor
xchg
pop
out
fidivrs
imul
jp
sbb
or
mov
push
outsb
mov
aaa
mov
cmp
mov
jo
cmp
rcrb
sti
and
jnp
test
ja
push
add
jae
dec
jle
inc
inc
std
mov
sbb
cmp
push
repz
filds
insb
outsb
mov
mov
xchg
cmpb
data16
jge
sarb
outsl
jmp
rcrl
adc
into
fdivs
mov
ss
jl
cmp
or
int
xor
dec
xlat
dec
hlt
leave
cltd
pop
jb
outsb
fucomp
cld
cmp
mov
xchg
lcall
push
imul
cmp
push
mov
lds
fistpl
lahf
icebp
add
jnp
clc
aam
rcll
mov
out
sarb
mov
xchg
lret
hlt
pop
imul
mov
lods
xor
ljmp
addl
cltd
mov
jo
lock
ljmp
leave
jnp
dec
inc
rcll
repz
jnp
xchg
sub
ljmp
lods
in
loop
out
jnp
sti
cmp
inc
cmp
insl
dec
jne
in
sbb
out
out
rorb
add
incl
gs
sub
sbb
pop
decl
add
mov
adc
in
test
shlb
mov
cmc
jnp
pmullw
cltd
mov
mov
test
inc
sarl
add
nop
pop
in
inc
imul
les
pop
or
jnp
ror
cmp
ss
jnp
xor
or
cwtl
out
adc
movb
lock
dec
call
xor
rclb
ret
jnp
movsb
enter
xor
jnp
dec
push
mov
or
xchg
and
adc
mov
enter
sti
jns,pt
push
pop
mov
repz
jnp
xor
fldenv
je
enter
insb
adc
lret
frstor
mov
and
faddl
push
aam
adc
push
and
mov
pop
cld
xchg
push
fidivs
lds
sbbl
sub
ret
and
addr16
setl
mov
cmpb
outsb
cmp
std
insb
push
jnp
call
cltd
ret
sbb
das
loopne
into
imul
in
push
cmp
pop
mov
mov
mov
jnp
leave
stos
cmp
fildl
mov
add
xor
int3
mov
pop
lds
test
and
push
insb
aam
pop
push
pop
jnp
scas
jae
in
mov
mov
and
dec
mov
jnp
js
in
add
mov
mov
nop
sub
add
into
lea
sub
mov
dec
pop
and
ja
mov
cmp
jnp
shll
xchg
cmpsl
les
loopne
or
mov
xchg
jnp
xchg
mov
call
jmp
and
jnp
lea
enter
ror
mov
movsb
or
inc
vcvttps2dq
cmp
mov
insb
jns
add
pop
jnp
adc
mov
mov
cmpsl
mov
xchg
lret
movsb
pop
jnp
sub
jno
xchg
add
add
mov
xchg
jae
nop
icebp
addl
scas
jnp
dec
mov
outsl
adc
pop
add
movsb
xchg
sahf
mov
cmp
jecxz
and
mov
stos
out
mov
leave
sbbl
push
xor
lret
pop
fnstsw
stos
dec
in
mov
cwtl
jnp
pop
hlt
dec
push
cli
or
jl
cmpl
push
movsl
mov
ja
int3
bndldx
into
test
push
cmp
add
in
add
push
pop
xor
cmc
mov
jnp
aad
xlat
push
mov
repz
mov
mov
mov
mov
insb
jnp
sub
mov
or
pop
fwait
adc
add
repz
pop
jl
pop
int3
test
test
shrl
stos
cmp
jnp
pop
mov
sbb
push
xchg
iret
jp
stc
aaa
sti
xrelease
cmp
repz
pop
inc
and
out
in
test
add
adc
mov
sub
cmp
ljmpw
jne
or
lret
mov
sbb
cmpsb
shlb
fcomps
mov
test
and
jnp
pop
inc
sbb
sub
ljmp
mov
jnp
cmovge
mov
pushf
pop
inc
or
mov
xchg
pop
xchg
jnp
jo
paddusb
popf
push
push
mov
fidivl
xor
cmp
iret
add
sarb
daa
xor
pusha
adc
sbb
xchg
adc
jecxz
loopne
enter
cmp
shlb
inc
popf
idiv
cmp
jmp
jmp
adc
push
mov
mov
lock
loopne
inc
and
or
movsb
data16
jle
dec
movsl
shl
mov
pop
out
jb
inc
inc
mov
test
mov
sub
mov
cmp
adc
jnp
mov
mov
jae
pop
cmp
imul
pop
stc
jnp
or
mov
call
push
inc
sahf
rorb
popa
adc
sti
lds
addl
and
in
fiadds
cmp
aaa
xor
jns
xchg
pop
inc
xchg
adc
jnp
andb
movsl
pushl
outsl
int
mov
inc
mov
les
cmp
add
jnp
lcall
and
inc
inc
aaa
mov
jbe
fbld
je
and
xorl
add
ds
jmp
adc
jle
or
jnp
jmp
inc
pop
jnp
add
dec
in
mov
cwtl
fidivrs
cmp
cmp
aas
jno
bound
mov
sti
sub
or
btr
pop
sub
mov
pop
std
mov
rol
sbb
in
cltd
xor
and
fidivrl
pop
adc
mov
hlt
inc
cmp
ds
cmp
mov
sub
mov
xchg
cmpsl
test
or
pop
fdivr
sarl
sbb
xchg
test
imul
jge
js
cmp
xor
int3
lock
scas
pop
sbb
int
and
xor
xor
ds
jnp
dec
xor
or
mov
int
dec
pop
xor
stc
push
mov
call
sti
cmpsb
pop
mov
xchg
jnp
push
in
xlat
and
cmp
mov
jae
inc
insb
and
sti
pop
ja
push
into
outsb
or
inc
fdivs
sbb
adc
jmp
mov
or
push
xor
jg
fsubr
test
iret
add
add
fwait
jnp
test
enter
add
repnz
inc
add
sbb
jno
popa
push
stos
sbb
js
rol
inc
mov
push
ljmp
fdivp
push
dec
jae
call
jns
mov
pushf
mov
adc
sbb
shll
fimuls
dec
iret
sbb
aam
xor
adc
mov
jnp
push
mov
in
inc
dec
push
jl
sbb
inc
cmp
outsl
add
and
push
jae
fs
jmp
and
or
sar
sahf
sbb
push
push
les
insb
iret
sti
lcall
pop
xchg
loope
call
lret
add
pop
mov
insb
scas
movsb
sub
frstor
jecxz
xchg
shrl
mov
push
add
xor
jle
leave
add
out
add
imul
inc
popa
jp
stc
jnp
test
push
pop
lret
mov
jle
mov
inc
mov
mov
jb
cmpsl
push
or
pop
pushf
cmp
add
add
lcall
rcrl
add
int
and
rcrl
adc
in
xchg
add
pop
jnp
das
movsl
shr
mov
add
decl
inc
xchg
mov
std
jnp
rclb
sbb
lock
das
es
xchg
jnp
out
int
mov
cltd
lock
jecxz
negl
outsl
mov
push
inc
cmp
sti
stos
and
jnp
sub
pushf
js
adc
dec
fs
scas
mov
jns
sub
cltd
sarb
xlat
add
sub
jnp
adc
imul
sahf
and
mov
lods
or
jae
adcb
pop
out
sub
and
lods
adc
pushf
test
negl
and
inc
jl
pop
test
aaa
jnp
test
in
jl,pn
and
dec
lret
cmp
daa
in
xchg
cmp
into
leave
test
out
std
pop
ja
add
cmp
rorl
inc
movsb
dec
and
jnp
cltd
and
mov
xchg
ret
in
pop
aam
push
sbb
mov
lock
mov
pop
pcmpgtb
sub
rorb
insb
fmuls
js
push
jnp
leave
popa
or
dec
jnp
sbb
sbb
cmp
push
add
lods
pop
inc
inc
lahf
jnp
sbb
imul
imul
and
and
add
cmpsb
jle
fucomi
jnp
mov
or
stos
pop
jnp
or
push
daa
fwait
ljmp
mov
fbstp
jnp
pop
sahf
push
clc
add
lds
jnp
test
adc
and
add
fisttpl
jge
mov
rcr
pop
jnp
fs
pop
out
cmp
mov
cltd
movsb
outsl
imul
jmp
repnz
cmpsb
inc
je,pn
outsl
std
dec
enter
faddl
stc
push
jnp
xchg
jecxz
inc
fisubrs
mov
leave
sub
sub
inc
outsl
cmpsb
mov
add
xor
jnp
mov
pop
jo
and
jmp
pop
jnp
push
dec
push
inc
pop
ljmp
outsb
cmp
jnp
jecxz,pn
ds
push
jnp
cmp
cmp
int
pmullw
mov
fwait
push
into
data16
dec
sbb
jae
jp
outsb
mov
cmpsl
push
adc
or
ljmp
or
adc
cmp
loope
lock
enter
xor
js
push
ljmp
notb
int
out
inc
fstl
push
jnp
pusha
addl
xor
add
cmp
xchg
lods
xor
add
push
xor
mov
int
xchg
xchg
nop
fwait
jge,pn
into
pop
jle
xchg
jl
daa
test
test
add
mov
cld
out
sarb
mov
push
mov
and
pop
call
xchg
jbe
loopne
jo
fistps
scas
sub
jp
dec
iret
mov
clc
movsb
or
adc
aas
push
push
out
aad
loop
hlt
cmp
inc
push
repz
or
loop
add
das
adc
adcb
pop
sbb
fsubs
adc
jns
popf
das
insb
cmp
repz
and
call
nop
jnp
mov
mov
nop
lods
lock
repz
cmpsb
inc
push
adc
xor
out
jnp
gs
fwait
pop
sbb
in
dec
negb
mov
mov
outsl
xchg
fbstp
mov
jns
cs
cmpl
iret
pop
mov
cs
mov
inc
cmp
xor
jnp
sub
add
inc
mov
xor
lds
test
adc
xchg
inc
or
mov
jnp
test
ds
in
scas
fstl
out
sub
test
push
jecxz
and
jnp
jle
xchg
pop
andl
arpl
pop
sub
mov
divb
push
add
xchg
mov
add
fstsw
push
sbb
gs
ja
movsl
lods
mov
sbb
rsqrtps
cmp
or
pop
mov
mov
sbb
lahf
mov
pop
xchg
add
pop
mov
mov
mov
pop
stc
dec
ds
jnp
mov
movsl
push
aaa
jno
outsl
ret
mov
fwait
ret
jnp
cmpsb
inc
pop
lock
cmpsl
lcall
or
sahf
mov
and
cmp
inc
gs
or
mov
imul
aaa
pop
mov
fwait
jp
mov
sbb
jnp
mov
pop
jnp
and
imul
popf
jmp
les
push
out
or
adc
outsl
xchg
fwait
push
addl
push
call
mov
inc
push
jle
mov
pushf
push
lea
clc
arpl
lahf
daa
scas
add
aaa
shlw
push
ret
lret
notl
dec
dec
lcall
insl
cmp
dec
ret
push
pop
in
push
movsl
and
jp
dec
scas
sub
cmp
sarl
pusha
hlt
ds
xor
mov
test
ja
xchg
or
sbb
mov
mov
add
pop
jge
push
fiaddl
fs
pop
sbb
stos
test
mov
jno
loope
popf
jnp
add
sub
fdivl
ja
pop
js
and
cli
pop
dec
rcr
xchg
lods
lea
mov
sbb
js
test
divb
xchg
mov
gs
jnp
inc
sub
mov
outsl
xor
pusha
inc
or
xor
cmp
rorb
je
outsl
ds
sub
pop
xchg
or
mov
outsb
rolb
cmpsl
and
insb
xchg
call
movsl
xchg
jnp
rolb
aad
cmp
outsb
jnp
mov
pop
push
push
adc
idivb
ss
xchg
les
sbbb
aad
sarl
jns
repnz
iret
popa
inc
repz
or
in
stc
fisttps
xchg
cmp
mov
das
mov
hlt
add
popf
sbb
or
mov
cli
stc
inc
shl
push
sti
ret
or
subb
mov
jnp
adcb
jnp
cmpsb
push
popa
jns
in
sahf
jnp
inc
stos
les
pusha
ret
jnp
pop
ficomps
push
rolb
decl
or
or
insb
sbb
cltd
inc
mov
sbb
mov
mov
pop
and
inc
sub
pop
mov
dec
loopne
cmp
aad
xor
repnz
jmp
out
movl
dec
jle
int
mov
rolb
mov
dec
xor
dec
adc
xor
sbb
les
jnp
in
mov
mov
xchg
test
fdiv
repz
outsl
mov
std
or
or
jp
aas
bnd
xor
xor
and
mov
arpl
test
sti
push
mov
and
mov
jl
mov
cmpsb
jnp
inc
daa
and
xor
mov
push
adc
nop
jp
mov
and
and
dec
dec
call
dec
cmp
mov
out
mov
jnp
inc
mov
xor
arpl
std
ds
and
or
mov
xchg
movsb
lea
arpl
push
loop
js
aam
mov
push
jnp
push
dec
scas
std
pop
jnp
and
pop
jnp
xchg
int
inc
stos
sar
imul
jp
bound
push
jno
jnp
mov
mov
cmp
pusha
bnd
mov
jnp
jge
andb
into
mov
and
adcl
test
loopne
xor
mov
ret
pop
jl
mov
push
add
ja
add
ds
lret
in
jnp
and
cmp
mov
lahf
jnp
pop
loop
inc
aaa
pop
movsl
or
inc
jns
daa
jns
jmp
jns
mov
out
jae
enter
idivl
mov
cmpsl
in
vmaxps
clc
push
lods
vmwrite
pop
enter
bound
mov
or
outsl
ds
mov
out
add
std
cmp
repz
xchg
jns
pop
data16
cld
int
or
pop
adc
mov
mov
insb
pop
mov
adc
out
fstps
jmp
mov
cmp
and
mov
mov
lea
adc
jnp
arpl
mov
mov
in
jnp
and
mov
jle
jne
lret
xor
cmp
in
popa
cmp
inc
push
sub
sbb
out
jnp
jecxz
loopne
sbb
jnp
adc
or
movb
fimuls
adc
rcrl
test
aas
jae
push
movsl
jo
inc
sub
dec
jae
out
lods
inc
iret
jl
cmpsl
inc
cltd
dec
sahf
repz
inc
adc
jnp
push
xchg
dec
out
add
daa
loopne
cmovns
popl
jo
es
xchg
add
sahf
xchg
scas
fidivrl
add
mov
ja
mov
mov
cmpsb
jnp
bound
out
xor
mov
arpl
push
cmp
pop
stos
out
enter
aas
lret
cmpsl
repz
sti
mov
xorl
in
test
pop
popa
rorl
imul
jge
xchg
jecxz
jnp
lock
push
js
jne
push
sub
xor
imul
and
push
mov
addr16
add
pop
loope
ljmp
push
jp
sub
or
sarb
and
mov
xchg
inc
jnp
dec
jmp
jmp
jno
sub
leave
push
fsubr
xchg
lcall
cli
jnp
dec
sti
es
test
popa
sub
push
andl
xor
jo
jne
or
xchg
jnp
insb
adc
int
sub
jnp
int3
fnstcw
jnp
cltd
push
ja
outsw
out
sbb
mov
lds
repz
push
cmp
mov
and
arpl
sub
popf
and
mov
adc
inc
iret
xor
loop
movsl
test
je
fwait
mov
jnp
pop
jbe
sarb
divb
sub
or
fistpl
lods
in
inc
shll
bnd
xrstor
push
insb
fnstsw
adcb
cmp
fisttps
mov
mov
pop
mov
cmp
daa
fisttps
repz
aas
into
add
cmp
and
mov
adcb
les
test
mov
mov
dec
loopne
xchg
iret
call
jge
aad
ja
mov
fwait
jmp
out
push
or
mov
cmp
mov
and
inc
out
jns
fmulp
cmp
and
fidivl
inc
out
jo
adc
mov
jnp
rclb
ret
jnp
dec
push
cmovae
dec
or
aad
mov
decl
mov
rcrb
fidivl
daa
dec
pop
xor
stc
lret
pushf
jnp
mov
add
int
nop
jnp
faddp
shlb
loope
jae
mov
adc
cld
inc
add
sub
push
add
mov
in
xlat
jnp
repnz
inc
or
hlt
add
ret
mull
jnp
push
fsts
fimull
push
jnp
adc
repz
mov
frstor
iret
jnp
sbb
sbb
jnp
out
push
lcall
jae
adc
loopne
stos
loop
ljmp
lds
push
movsl
lcall
in
mov
lret
mov
add
je
fcmove
push
jl
psadbw
imul
rorl
imul
notl
imul
mov
pop
outsl
jl
dec
test
add
cmpl
or
push
mov
jle
jo
adc
stc
and
andnps
mov
sahf
push
xchg
icebp
ret
mov
fistl
mov
cmp
adc
push
fcompl
or
sahf
and
fsub
mov
pop
das
rcr
repnz
cwtl
cmp
sbb
pop
and
pop
mov
mov
push
dec
pop
sub
and
mov
push
inc
jle
stos
pop
pop
pop
sarl
push
jnp
aad
jne
movsl
push
out
jnp
inc
shll
stos
andb
and
hlt
cmp
pop
jnp
test
push
mov
ja
inc
call
lret
inc
jecxz
ljmp
adc
or
mov
orb
push
jne
sbb
pop
cltd
jnp
add
dec
sub
adc
adc
jnp
xor
push
fidivrs
outsl
rcrb
add
pop
adc
aad
cld
mov
sub
xchg
sub
jnp
mov
add
mov
xchg
lods
mov
cmpb
and
xor
dec
dec
sahf
rorb
imul
xchg
cs
jnp
mov
cmp
shll
sahf
push
dec
sbb
fidivrs
mov
int3
fisttpl
js
data16
aam
jnp
xchg
xor
out
loope
xchg
add
ss
in
inc
dec
push
mov
pop
jns
ficompl
orl
pop
push
les
mov
fwait
pusha
jo
int
push
jecxz
mov
cmp
push
cwtl
scas
xchg
enter
cs
jnp
movsb
dec
sbb
movsl
inc
dec
jnp
xor
arpl
shlb
jle
cmp
ss
ljmp
sti
or
jnp
cli
and
push
movsl
outsl
les
lcall
ficoml
fmull
mov
sti
mov
adc
jnp
xorb
movsl
mov
dec
mov
out
jnp
xor
ljmp
inc
pop
mov
mov
leave
repz
pop
imul
imul
mov
pop
iret
out
sbb
add
add
dec
xchg
or
jnp
or
adc
mov
stos
inc
pop
out
pusha
outsl
jnp
add
add
out
std
inc
lret
add
int
xchg
sbb
ficoml
lods
mov
decl
push
loope
add
and
aad
add
xchg
xor
call
push
jmp
dec
jnp
dec
cltd
into
cmp
jnp
jne
mov
inc
das
fistl
jp
lret
and
and
icebp
sbb
mov
cs
jb
cmp
inc
sbb
jo
aad
lahf
add
sbbl
rcrl
lret
mov
ja
and
out
push
ljmp
adc
iret
lock
popf
int
pusha
mov
fidivl
cld
sub
lret
pop
lahf
xchg
sbb
pushf
adc
mov
iret
jl
pop
lcall
clc
mov
mov
stos
push
inc
mov
push
mov
sbb
mov
push
pop
mov
jnp
lock
push
xchg
or
sub
xor
push
rcrb
mov
sbb
into
jnp
adc
adc
jecxz
pop
inc
lds
fprem
mov
ret
and
and
xchg
ja
push
data16
mov
aas
mov
fwait
jnp
fimull
aaa
jnp
sahf
push
mov
insb
jnp
pusha
dec
sub
push
cmpl
jnp
mov
inc
test
out
ret
rcrl
and
fwait
jnp
mov
mov
jnp
iret
adc
lea
cltd
out
and
fmuls
push
jnp
sub
or
icebp
int3
sahf
mov
add
xor
out
mov
insb
emms
rol
test
add
fwait
test
ja
inc
stos
adc
gs
pop
movsb
push
push
pop
xchg
shl
dec
or
jnp
out
dec
aas
push
xchg
bound
add
and
in
mov
fwait
jl
add
cmpsb
cld
pop
pop
mov
outsl
in
fcmovu
sbb
mov
or
jnp
add
rcll
mov
sti
jecxz
std
pushf
aaa
jnp
insb
adc
sbb
and
xchg
inc
jnp
push
push
and
jle
jns
add
fnstenv
mov
jnp
and
test
fstl
cltd
iret
repz
xchg
jmp
add
shll
dec
push
icebp
xor
data16
test
pop
ficomps
call
in
lret
jg
push
mov
mov
mov
scas
fistl
dec
fistps
jnp
unpckhps
sti
xor
cs
mov
call
aad
popa
movsl
sub
sti
ds
sbb
call
leave
in
cmpb
cmp
movl
mov
jb
sarl
jge
push
dec
and
add
insl
adc
mov
std
test
cltd
lods
add
popa
loopne
mov
push
cld
ret
outsl
mov
mov
and
das
xor
jnp
popa
rorb
fs
addb
fwait
and
push
and
mov
ja
xchg
xchg
pop
pop
or
jnp
pop
dec
sbb
jae
mov
push
xor
imul
mov
data16
xchg
insb
out
sbb
xchg
inc
jns
scas
dec
mov
popf
sti
inc
pop
adc
and
add
cwtl
movsb
or
jnp
cmc
adc
inc
test
into
pushf
js
xor
cmpsb
xor
popa
add
jle
xor
xor
jb
xlat
clc
ret
ja
adc
bound
mov
lahf
js
movsb
int
pop
lret
cmp
lret
mov
aaa
push
std
xchg
or
test
ss
shl
fwait
push
loopne
cli
mov
data16
lds
xchg
adc
clc
popa
pop
sub
jl
xor
out
fnstsw
cwtl
jl
sbb
mov
mov
cmp
mov
push
mov
shlb
into
pop
mov
pop
mov
inc
add
aam
mov
pop
jbe
aad
dec
jmp
idivl
insb
xchg
std
jo
lods
sbb
pop
mov
mov
gs
or
mov
lcall
test
mov
lahf
jecxz
xchg
jo
lea
add
dec
sbb
push
in
negb
outsl
inc
mov
insl
mov
stos
es
or
insb
jno
xor
push
adc
pop
les
fldt
sbbb
cs
xor
xchg
jb
mov
jne
jge
ljmp
cmpb
repz
fld
jnp
sbb
push
loopne
push
or
mov
stos
xor
or
ja
pushf
push
hlt
add
push
cmc
xlat
js
loopne
jnp
inc
into
sbb
mov
jnp
idivl
adc
pop
ja
into
shr
jno
fstps
xchg
iret
ljmp
push
cmpsl
push
std
and
stc
xor
sbb
jmp
push
pushf
repz
pop
sti
loope
pop
jnp
inc
inc
bound
lds
pop
popf
xchg
mov
int
jnp
icebp
shrb
rcrb
fldenv
arpl
mov
shrb
in
stos
mov
push
fnsave
mov
enter
cld
andb
add
add
test
sub
jno
arpl
push
fstpl
mov
mov
jnp
sbb
ret
test
ret
dec
add
aad
fsincos
movsb
adc
outsl
and
ljmp
and
inc
push
push
ffreep
jnp
mov
add
xchg
jl
mov
add
pop
mov
jl
lret
out
gs
mov
jns
mov
jnp
xor
stos
xor
mov
pop
insl
jmp
xchg
mov
cltd
movsl
lods
fmull
mov
push
jl
insb
jl
ljmp
push
mov
in
xor
outsl
mov
push
mov
imul
loopne
pop
xchg
dec
add
jnp
test
mov
adc
pop
push
add
pop
add
mov
lods
mov
inc
test
ror
sub
jnp
das
cmpsb
mov
xor
lea
mov
in
jae
cld
adc
cmpsl
insl
scas
sub
mov
in
mov
cltd
lahf
sub
in
xchg
loopne
into
inc
sbb
mov
andl
jl
call
jnp
stos
adc
out
popf
pushf
pop
push
cmp
jb
movsb
bound
push
add
pop
sub
jnp
shrd
iret
xchg
pop
dec
jnp
xorl
pop
jnp
push
insl
callw
clc
jnp
test
add
aaa
dec
or
mull
test
cmp
ja
mov
jecxz
ret
and
andnps
and
lock
xchg
sbb
inc
inc
jnp
cmpsb
clc
fwait
in
jb
or
pop
and
sbb
leave
add
jnp
pop
or
mov
sahf
jb
out
ret
mov
and
fdivr
adc
pop
sbb
jnp
push
lods
dec
add
and
in
jnp
sar
es
aas
aad
jnp
sub
pushf
push
or
dec
lcall
sbb
mov
mov
pop
adc
call
out
dec
cmp
push
add
pushf
mov
insl
inc
dec
lds
sahf
jnp
mov
js
sbb
mov
jno
std
adc
mov
push
cmpb
adc
mov
push
mov
frstor
lds
sahf
mov
or
xchg
adc
outsb
ja
repz
shl
scas
jae
xor
jle
in
jnp
and
pop
dec
jle
stc
nop
orb
popa
divl
mov
out
xlat
sbb
fwait
jne
dec
jnp
popf
or
jmp
pop
add
xchg
les
subl
mov
rorl
fwait
push
jae
add
stc
mov
mov
jae
push
and
xchg
jnp
sub
dec
cmpl
movsb
popa
movsl
add
lret
fwait
mov
and
push
pop
arpl
dec
add
jle
stc
push
dec
imul
adc
orb
sub
sbb
add
jnp
mov
fistpll
adc
popa
pop
adc
ret
xor
inc
ja
out
ljmp
ja
lcall
cmpsl
shrl
mov
jnp
dec
mov
mov
movsb
loope
pop
pop
ret
cmpsl
jnp
mov
jb
outsl
rcll
pop
or
jae
push
dec
das
mov
js
loopne
lret
in
xor
movsl
sti
push
jnp
push
int3
or
jnp
int
jmp
ja
repnz
fwait
dec
lret
stos
pop
arpl
mov
in
cwtl
inc
jnp
xor
jnp
pop
dec
mov
push
rorb
mov
lods
nopw
sbb
nop
ljmp
lock
shl
cwtl
xchg
scas
outsb
repz
xor
cmpl
sbb
scas
pop
push
jle
xchg
rclb
fisttps
mov
mov
shl
cmp
fwait
cmp
daa
out
mov
adc
fldenv
shll
jle,pn
mov
test
popl
push
adc
cltd
pop
hlt
pop
inc
les
mov
arpl
insl
popl
imul
ljmp
addl
push
ret
jnp
int
std
mov
aas
cmc
inc
int3
and
xchg
dec
ret
or
push
mov
xor
loopne
sub
and
mov
cmc
arpl
xchg
test
cltd
add
pusha
dec
mov
xor
aad
sub
jnp
dec
int
les
cmp
out
out
loop
ss
je
divl
arpl
inc
cmp
pop
sbb
movb
test
jo
pop
insb
jae
test
orl
lahf
enter
xchg
test
mov
out
jp
push
cmpb
jae
iret
xor
in
jnp
aas
fdivrl
pop
and
lock
mov
ja
icebp
sub
ljmp
std
fs
imul
xchg
mov
mov
jnp
adc
addr16
jmp
lret
sahf
lods
dec
ds
stos
or
push
sbb
dec
subb
das
sub
ja
daa
test
jo
mov
xlat
outsl
cmpl
pushf
in
popf
pop
or
pop
xor
pop
inc
jp
ljmp
or
mov
fimuls
pop
int3
jbe
pop
adc
pop
xchg
inc
jnp
insb
dec
lret
inc
add
push
or
faddl
out
sarb
push
repnz
cmpsl
xor
jnp
je
ret
dec
xchg
dec
lahf
mov
mov
sahf
add
adc
jnp
mov
cmp
xor
push
mov
jnp
xor
decb
sbb
mov
in
std
jnp
mov
jo
and
sarl
mov
repz
jnp
je
jbe
push
jnp
sahf
xor
jmp
shrl
sub
pusha
mov
movsl
fisubrs
test
or
out
mov
cmpsl
mov
pop
sub
das
cmp
push
outsb
mov
inc
jecxz
adc
jnp
mov
mov
inc
mov
jnp
in
pop
popa
aas
std
jnp
mov
lea
pop
mov
rcl
add
imul
ds
jo
enter
sbb
inc
push
sbb
add
js
lret
test
incb
push
test
popf
xchg
movsl
cli
test
adc
jnp
insb
mov
push
push
and
add
int3
out
pushf
gs
fwait
pop
xor
pusha
lahf
pop
sub
mov
sub
jno
jnp
jle
mov
stos
pop
jg
int
jnp
cwtl
mov
xchg
mul
test
or
xchg
pop
xchg
stos
mulb
pop
cmp
aas
mov
sbb
mov
int
sub
inc
repnz
movsb
mov
ret
mov
jnp
mov
mov
rcrb
lock
rolb
out
lods
or
sti
mov
int
push
cli
jns
cmp
mov
cmp
jnp
call
cmpsl
lods
cld
jno
jbe
mov
movsl
jl
les
sarb
in
jl
clc
loopne
mov
outsl
lods
cwtl
mov
fidivs
fcmovnbe
xor
push
jnp
cltd
fstl
dec
xor
mov
stc
mov
lds
push
loop
jle
sti
or
popa
fwait
push
jecxz
cmc
clc
push
aas
test
jns
rolb
dec
lret
pop
sarl
push
jnp
mov
jmp
out
adcl
in
outsb
xor
pop
add
lods
testl
pop
int3
inc
jnp
movsb
xor
pop
imul
push
ret
cld
sub
mov
jno
sbb
cmp
repz
aas
inc
xor
jmp
xchg
js,pt
jp
push
add
mov
mov
dec
lea
mov
into
xchg
pushf
enter
aad
mov
push
insl
test
mov
addr16
cwtl
mov
adc
sbb
sbb
cmp
addr16
mov
or
jae
mov
imul
repz
mov
adc
hlt
jb
jl
call
fbstp
add
inc
cli
outsb
mov
aad
test
repnz
inc
adc
ljmp
push
inc
xchg
jnp
fcomip
outsl
outsb
xor
push
mov
jnp
xor
mov
fs
adc
dec
adc
pop
mov
jnp
xchg
push
push
mov
cmp
test
aad
jnp
pop
or
ret
add
mov
push
inc
rolb
mov
and
push
sahf
mov
cs
sar
lea
imul
pusha
dec
ja
loop
sbb
mov
push
xchg
mov
pusha
hlt
jle
mov
iret
pop
mov
xchg
mov
lea
mov
insl
arpl
inc
xchg
add
fs
std
ret
aas
jnp
dec
lock
mov
fstpl
mov
aad
das
cld
mov
clc
xchg
aas
jge
lahf
daa
push
cmpsb
ds
xchg
cmpsl
out
or
gs
iret
jns
inc
bnd
es
xchg
push
lods
out
cmp
jns
cmpsb
inc
rcrb
imul
gs
lcall
ret
cli
push
ljmp
pop
lods
or
jmp
int
inc
mov
sbb
les
mov
jnp
fiaddl
repz
pop
inc
cmp
jbe
lcall
sbb
jno
arpl
push
stos
cld
sbb
rol
add
cltd
jnp
ss
lds
sti
aaa
pop
in
jle
inc
cmp
jo
add
enter
jnp
adc
jo
xchg
jnp
aam
movsb
outsb
inc
jnp
int
cli
add
pop
jnp
in
pop
inc
aaa
rolb
pop
mov
jp
sub
jnp
cwtl
mov
push
popf
clc
add
cmpb
outsb
cmp
fnstenv
sub
jns
xor
mov
mov
pusha
mov
jo
lds
mov
adc
sbb
pushf
loopne
rcrl
fistpll
sahf
cmp
pop
cltd
mov
jp
nop
lahf
mov
cmp
and
mov
add
and
pop
jnp
or
dec
pop
scas
fstpt
jnp
test
sti
jns
and
ret
or
xchg
dec
dec
notb
mov
int
je
divl
xchg
jb
mov
sbbl
scas
jp
bound
loop
mov
clc
cmpsb
cmp
mov
sub
and
lret
jmp
or
cmp
and
loop
push
mov
pop
shrb
jnp
mov
mov
jnp
dec
popf
or
cmpb
fs
sarb
filds
sarb
or
pusha
cmp
jle
outsl
or
pop
frstor
aas
or
add
dec
lds
mov
flds
sub
mov
pusha
mov
adc
ds
sti
mov
jnp
les
jnp
add
xchg
cmpsl
iret
sbb
push
in
sti
xchg
cli
push
pushf
mov
inc
loopne
inc
out
insb
aam
outsl
dec
xor
xchg
pop
push
pop
popf
add
cmp
cmpsl
ja
scas
iret
std
scas
cli
lods
leave
xchg
imul
ss
ja
inc
aam
mov
bound
dec
inc
lea
adc
xchg
sub
and
pushf
in
rcrb
pop
dec
xchg
jl
dec
mov
jnp
roll
sarb
aas
push
stos
adc
lds
jnp
fildl
nop
sbb
jge
roll
stc
jo
pop
fiadds
or
fldl
push
int3
pushf
jnp
idivl
sbb
jecxz
jge
dec
cmpb
mov
popf
pop
orl
dec
pusha
arpl
xchg
stos
filds
xor
or
inc
mov
mov
pop
ja
jl
adc
cmpl
lock
inc
jnp
push
stos
shrl
outsb
loopne,pt
pop
xchg
cli
mov
rcll
lret
jp
std
aas
add
add
jge
cld
xor
ja
incw
xchg
sbb
add
jne
xchg
loop
insl
jno
mov
fstpt
dec
lea
in
idivl
or
pushf
inc
cmp
and
outsl
icebp
mov
js
push
xchg
movsb
xlat
repnz
outsl
dec
stos
and
fmull
arpl
or
insb
xchg
subl
xchg
sub
inc
push
cmp
adc
aas
jnp
pop
add
fsubl
inc
js
push
fisubl
push
mov
sarb
fsubr
out
xchg
es
mov
mov
movsb
jns
mov
cmp
add
sub
sbbb
xor
dec
sbb
lret
std
loopne
xchg
lods
out
sbb
pusha
ret
lea
aaa
jmp
loopne
xchg
inc
jnp
sarl
rorb
leave
jnp
mov
iret
and
mov
outsl
sbb
mov
mov
cmp
in
mov
movb
aad
lea
mov
xor
xchg
faddp
dec
fldenv
outsb
movhps
pop
add
into
aas
cmp
out
jl
fimuls
dec
imul
pushf
jnp
cmp
insl
cmp
fwait
cld
repnz
cmp
jnp
es
pop
cli
popa
fimull
repz
addr16
mov
mov
mov
ror
outsl
xchg
sub
and
insl
fsts
js
out
mov
adc
xchg
mov
jno
stos
jnp
imul
sub
cmp
jb
pusha
cmp
cld
outsb
inc
scas
push
stos
popf
jnp
ja
pop
out
pop
orb
cmp
sub
jnp
push
mov
outsb
sub
adc
mov
sbb
mov
jmp
cmp
cmp
mov
lods
jnp
and
ja
lret
dec
adc
xchg
pop
popf
adc
jnp
cld
or
inc
sub
enter
lods
jnp
test
push
int3
rcr
rcrl
ret
xchg
cmp
popf
aas
jns
pushf
jbe
add
adc
xor
cmp
jns
aam
into
mov
roll
js
jnp
mov
mov
outsl
sbb
int
aam
fldt
cmp
sbbl
mov
xchg
test
sarl
pop
inc
cmp
add
fdivl
hlt
pusha
jne
mov
pop
movsl
dec
rcrl
jns
dec
popa
jns
jnp
es
mov
lcall
outsl
pop
mov
hlt
jg
pushf
ds
sbbb
jl
fdivs
mov
adc
jnp
std
sti
jne
shll
lods
add
and
mov
bound
or
xor
and
mov
mov
inc
bound
fstpt
sbb
out
add
xor
pop
pop
repnz
mov
jns
subl
mov
jp
and
push
mov
shll
je
rcrb
add
xchg
mov
fdivs
xlat
pushf
mov
imul
jnp
ret
aam
loopne
jnp
push
sbb
xor
inc
call
mov
xchg
les
sub
xchg
cld
pushf
xchg
imul
mov
add
stc
mov
xor
mov
jmp
hlt
lea
mov
adc
jnp
out
mov
push
or
ror
cwtl
jl
or
int
jnp
loope
jb
dec
pop
stos
jnp
je
mov
sub
ret
jmp
add
test
repz
negb
pop
loop
or
subl
aam
dec
add
mov
pop
pop
cmp
jbe
pop
inc
cmp
mov
mov
jnp
xor
cs
cs
lods
out
sbb
mov
sti
pop
and
mov
jnp
test
xchg
inc
or
or
sbb
data16
sub
jnp
das
in
cmp
jp
or
ja
mov
ret
jmp
xchg
jnp
add
push
xor
pop
adc
dec
jne
dec
es
jle
pusha
pusha
out
mov
sti
add
dec
sbb
jnp
ljmp
jnp
xor
movsl
jnp
sub
ja
sahf
lret
adc
rolb
std
loopne
pop
push
arpl
inc
jnp
mov
dec
jo
or
test
adc
pop
dec
cmp
mov
lods
push
ret
jns
cmp
jnp
adc
pusha
jnp
inc
or
jg
clc
lock
push
fdivr
push
dec
daa
xchg
ja
adc
cltd
je
jle
lds
add
mov
outsl
add
add
cmpsl
fsubr
cmp
or
mov
sbb
sti
insl
fcoml
dec
filds
fidivl
cli
pushf
das
js
into
lcall
outsb
xor
das
xlat
loope
nop
lret
lahf
pop
sub
mov
or
or
jnp
xor
jl
mov
pop
cmp
inc
sbb
dec
jnp
imul
jnp
xchg
adc
mov
shrl
cmp
sti
adc
mov
pop
sub
jns
scas
xchg
push
pop
push
scas
loop
mov
push
repnz
test
sbb
fisubs
inc
or
inc
jnp
movsl
shll
mov
pop
inc
test
lods
ja
in
xchg
xchg
xlat
mov
lea
cltd
mov
jnp
in
pop
xor
pop
inc
fnstcw
mov
adc
cmp
mov
jl
fistps
push
stos
mov
divl
jp
jnp
dec
push
inc
into
repz
sahf
xlat
in
pop
in
push
outsl
and
push
mov
loope
cmc
ss
mov
or
jnp
ret
mov
arpl
or
xor
mov
mov
das
lcall
das
push
xor
leave
cmp
push
mov
cmpsl
loope
test
dec
or
mov
jno
cmpsb
movsl
fnstsw
ss
jecxz
mov
ds
adc
fdivp
outsb
cmp
jae
push
jbe
lods
rep
and
jecxz
ljmp
inc
mov
pop
out
divb
xchg
lcall
inc
inc
fidivl
jbe
jnp
cmp
cwtl
loopne
dec
nop
outsl
lea
out
aam
jne
pop
mov
inc
add
dec
fs
push
movsb
loope
jnp
rcrl
add
pushf
inc
jnp
repz
mov
in
sub
cwtl
jnp
jg
daa
fdivs
test
iret
mov
int3
jl
fistpll
jns
shrl
ja
push
pop
xchg
stos
inc
or
cmp
mov
stos
movsl
xlat
ret
pop
mov
ds
inc
dec
idivb
cmp
or
inc
cmp
subl
cmp
mov
das
mov
jbe
dec
out
push
mov
jns
cwtl
shll
push
jp
pop
xor
jle
sub
add
sub
push
push
jle
or
jne
ja
stos
fstpt
mov
pop
ret
jnp
or
insl
push
xchg
mov
cld
jb
popa
or
jnp
inc
mov
lret
pop
mov
fisubrs
add
push
fldenv
cli
and
jg
sbb
dec
mov
push
movl
int
jnp
adc
cs
cmp
sub
adc
bound
das
out
or
loope
cmp
cmc
or
adc
aaa
jle
pusha
jnp
lea
int
sarb
dec
add
nop
movsb
pushf
fdivs
shl
movsl
pop
jg
sub
push
sahf
ss
shl
aaa
cmp
jne
outsb
jb
and
popa
add
lret
stc
push
add
sbb
jmp
imul
lahf
shl
mov
jnp
push
dec
sbb
loop
pop
adcl
ficompl
ret
subb
jnp
rep
add
lea
imul
fcomi
or
out
gs
xchg
mov
or
jge
or
sbb
cmp
int3
lea
jns
notl
sbb
xchg
lods
push
mov
inc
ja
sbb
icebp
scas
cli
cli
add
subl
out
jnp
fcoml
sub
pop
pop
jnp
and
pop
inc
loope
in
out
roll
sti
add
imul
sub
sti
imul
aas
push
gs
adc
cmpsb
push
aaa
push
imul
add
mov
or
gs
jle
ljmp
mov
cmp
aas
or
jle
addr16
jb
push
mov
hlt
push
fistps
mov
jnp
cmp
mov
push
das
out
jl
dec
mov
inc
inc
cli
mov
xchg
push
out
cmp
mov
mov
popf
lods
jnp
dec
and
pop
movsb
jae
jle
sub
in
pop
enter
pop
adc
mov
fs
loopne
jnp
add
or
or
inc
jnp
lret
sub
fwait
jnp
je
filds
out
pop
jle
stos
jns
fsubrl
outsb
pusha
xchg
xchg
sub
adc
decb
cwtl
add
or
xor
test
xor
in
dec
addl
clc
jo
mov
inc
dec
jnp
aaa
cmc
push
push
out
and
insl
jnp
push
or
cmp
je
ds
popa
dec
repnz
jl
cld
outsl
sub
scas
fmul
pushf
scas
jnp
inc
and
cmp
ja
pop
out
mov
dec
or
and
mov
ret
call
inc
mov
loop
mov
fisubl
pop
sbb
mov
pop
inc
inc
xchg
in
adc
stc
mov
lods
sarl
fdivrs
fdivrl
in
jge
divl
call
jnp
sub
jnp
movsb
adc
filds
shrb
add
lret
lea
fwait
pop
jnp
sahf
ret
nop
xchg
movsl
mov
subl
push
or
adc
jmp
pop
pop
xchg
lret
jnp
dec
adc
fisubrl
out
sar
aam
add
and
lods
cmp
sub
repz
cld
sbb
and
inc
lcall
je
or
or
daa
pop
cmp
pop
xchg
sub
outsb
popa
mov
cltd
or
jnp
test
sbb
jnp
dec
sbb
cli
cmp
mov
jnp
adc
loope
xchg
addr16
inc
in
cmp
fucom
shr
cld
mov
jnp
es
xor
jbe
add
clc
shr
adc
outsb
jl
mov
pop
inc
sub
in
push
and
montmul
cmpsb
les
lods
outsl
daa
and
jnp
subb
adc
xchg
pop
jl
fwait
sub
inc
iret
loop
or
sarl
int
mov
jecxz
xor
adc
es
sbb
movsb
xchg
jmp
sarl
sbb
lods
jnp
rorb
adc
mov
lahf
jo
js
pushf
pop
mov
mov
rorl
push
jle
and
cmp
mov
repnz
and
jmp
bound
les
pop
sub
ret
dec
jns
jecxz
lea
cmp
mov
xchg
mov
cmp
ljmp
stos
fidivl
mov
xchg
cmp
dec
xchg
das
stc
lret
pop
scas
mov
dec
push
fstpt
jnp
sub
sub
jnp
add
ds
or
nop
sbb
sbb
fsubp
out
test
cmp
int3
inc
mov
sub
pop
jge
ja
jo
mov
sub
fisubs
push
mov
sbb
jnp
and
mov
mov
pop
jnp
or
jnp
cmp
inc
push
ja
inc
mov
xchg
outsl
cmc
sti
cs
sbb
mov
push
xchg
idivb
test
ja
sahf
stos
mov
and
xchg
xor
stos
out
jno
jnp
mov
dec
push
jmp
sbb
add
cmp
rol
out
add
or
lahf
cmp
js
ja
push
popa
test
adc
jnp
cmp
dec
xchg
imul
out
inc
adc
out
or
cmp
mov
outsl
out
and
adc
jg
mov
jnp
lcall
dec
es
stos
call
rol
or
push
pushaw
sub
in
in
inc
xlat
cmp
or
adc
std
out
mov
lea
enter
mov
in
sbb
jb
into
sub
adc
push
test
jnp
mov
mov
fdivrl
mov
push
cmc
sub
ja
in
inc
push
out
mov
and
call
push
cmp
repz
jnp
jbe
enter
lret
ds
hlt
rcrb
incl
cmc
add
jns
roll
jno
adc
push
ret
dec
inc
loopne
cmc
lods
scas
xchg
lret
mov
pop
mov
sti
xor
adc
push
mov
jnp
mov
popf
mov
pop
popa
leave
lcall
out
add
les
call
sub
fnstcw
out
xlat
or
add
xchg
sarl
xor
outsb
push
mov
add
dec
sarb
cmp
repz
and
cmp
pop
ret
jnp
pop
sub
shlb
jnp
or
gs
shlb
js
fwait
pop
sbb
stos
sub
jnp
test
test
aam
jo
inc
add
popf
or
jnp
fldt
jnp
push
je
aaa
repnz
xchg
jnp
fsubp
jno
inc
mov
ret
inc
outsl
push
nop
lock
and
aas
adc
and
mov
mov
mov
jnp
adc
add
dec
mov
pop
test
dec
mov
loope
jnp
std
outsl
and
ljmp
push
sub
or
fisttpl
jnp
addb
push
leave
pop
les
xchg
mov
jnp
inc
xchg
xor
mov
scas
dec
sub
mov
and
clc
test
or
cmp
fsts
pop
jge
jmp
cs
lods
sti
les
je
in
sub
cmp
inc
jmp
test
mov
pop
adc
roll
mov
aas
cmc
pusha
jnp
decb
popa
or
pop
lahf
jl
or
jnp
fisubrs
mov
jnp
sbb
push
jnp
inc
push
out
push
push
push
sarb
or
and
push
scas
loope
jne
or
aam
cs
sub
fldcw
xor
mov
xchg
fdivrs
loopne
inc
divb
push
int
fs
pusha
jnp
xchg
cmpsb
xlat
cmp
mov
dec
mov
cld
sbb
idivb
push
mov
inc
leave
out
shll
mov
sar
xchg
pop
pusha
repnz
stc
in
pop
andl
mov
ss
add
mov
push
add
adc
push
push
pop
mov
sbb
jge
in
or
in
test
jg
repz
int
lock
and
mov
clc
je
ja
test
cmpxchg
jo
xchg
std
outsl
push
test
shrl
pop
xchg
int3
pop
or
out
std
mov
addr16
xchg
stos
adc
mov
das
jo
rcll
and
sbb
add
sbb
jmp
jl
cli
outsb
popa
sub
inc
stc
push
pop
jno
xchg
mov
cmp
insb
sub
inc
mov
lcall
inc
subl
jge
hlt
inc
jne
mov
loopne
or
pop
faddp
jns
and
cmp
or
xchg
cmp
jns
push
icebp
pop
push
jnp
imulb
sbb
pop
inc
add
and
movsl
xlat
and
inc
jnp
inc
lcall
pop
add
ret
sbb
adc
int
shl
xor
xchg
mov
ja
fnstsw
mov
aaa
test
mov
push
mov
and
jnp
sbb
enter
inc
add
jge
ja
adc
dec
inc
test
repnz
jl
mov
scas
sbb
jnp
mov
loop
jnp
xchg
mov
mov
mov
pop
push
sub
push
lds
sub
push
and
jnp
test
popf
mov
and
dec
imul
sti
cltd
fldt
dec
jle
test
jnp
jae
imul
sub
das
mov
jge
xchg
push
in
xchg
lcall
sub
sbb
adc
icebp
in
xchg
out
jge
push
mov
xchg
mov
or
pop
dec
inc
enter
dec
add
inc
mov
dec
lcall
es
cmp
cli
pop
cmp
inc
dec
mov
push
mov
imul
and
dec
and
fidivs
sub
sub
idivl
mov
xor
inc
roll
or
insl
insw
xchg
or
out
sarb
stos
sbb
jnp
push
lods
outsb
and
mov
cmp
mov
pop
addr16
mov
jns
add
inc
mov
lret
pop
loopne
mov
sub
pop
jnp
imul
jnp
xchg
imul
push
jnp
in
insb
xchg
dec
or
mov
jo
bound
test
daa
jb
orl
adc
cltd
icebp
aad
scas
jnp
pusha
add
sbb
enter
push
iret
fstpt
mov
sbb
xchg
push
pop
jns
scas
ret
push
cmpsb
mov
jnp
lret
popf
in
fistpll
mov
fnstcw
or
movsb
xchg
sbb
mov
dec
push
addb
orl
jl
ds
cmp
mov
cmp
inc
or
cmpsb
adc
add
sar
stc
daa
sub
inc
push
outsb
pop
push
stc
and
bound
repnz
repz
cmp
cmp
xchg
sub
xchg
pop
mov
stos
ror
pop
leave
mov
in
shl
push
cli
dec
adc
imul
push
and
jnp
dec
and
pop
lods
in
sub
aad
outsl
or
push
pop
cmp
in
je
sbb
stc
inc
sbb
adc
add
xor
cmp
inc
fsubrl
adc
scas
rolb
icebp
pusha
jecxz
fldcw
ljmp
cmp
adc
data16
lret
add
push
cmp
fwait
jnp
shlw
jnp
and
mulb
test
add
dec
pushf
mov
and
mov
iret
sub
jl
sbb
int
pushf
jnp
adc
xchg
stos
inc
mov
scas
push
dec
push
les
or
pop
mov
and
dec
sub
imul
cmpsl
test
repz
jnp
aad
cmp
iret
mov
hlt
int
jnp
or
cmp
mov
mov
cwtl
fistpll
or
mov
sbb
sub
insb
ja
cmpsl
or
push
push
fidivrl
xchg
add
pusha
cmp
clc
out
notb
sbb
pop
in
daa
inc
leave
in
cmp
scas
jno
push
sub
cltd
cs
add
mov
dec
daa
sbb
int3
imul
pusha
jno
std
jnp
push
mov
mov
jnp
aam
cwtl
mov
ret
push
mov
inc
mov
mov
xorps
inc
add
cwtl
mov
cmp
mov
push
xor
or
imul
shl
outsl
or
fsubrs
stc
add
hlt
or
es
outsl
fsub
pusha
inc
test
cmp
jo
ja
ss
push
mov
outsl
aaa
in
xchg
and
fists
mov
out
add
jnp
leave
gs
push
jnp
mov
int
jnp
sbb
pop
jno
out
lret
sbb
push
sbb
pop
cmp
test
test
jnp
pusha
add
fs
push
inc
mov
xor
and
dec
nop
stos
sti
mov
xor
adc
inc
fiaddl
js
test
andl
jnp
xor
and
cmp
push
jnp
ret
test
adc
pop
fbld
pop
add
mov
mov
in
push
xchg
repnz
or
mov
sub
mov
and
pop
sub
xor
push
xor
pop
dec
hlt
sub
outsl
pusha
sbb
sbb
outsb
lcall
push
jle
jae
add
push
stc
clc
push
add
cs
jnp
les
mov
mov
mov
cmp
insl
adc
ds
stos
aam
inc
jp
xchg
call
cli
jbe
adc
lock
sub
and
mov
mov
call
lret
mov
cmp
cld
add
imul
in
and
mov
pushf
mov
cmp
rcrl
and
cmp
fdivrl
fs
and
or
and
in
insb
or
mov
flds
or
ja
clc
mov
xchg
mov
inc
add
test
sbb
adc
push
adc
mov
push
xchg
lods
jnp
jmp
inc
cli
or
and
xchg
sbb
es
xor
stos
out
roll
popa
add
clc
out
sbb
mov
mov
and
and
ss
or
insl
sub
ficompl
fsts
add
fsubl
repnz
push
mov
or
fdivrl
gs
rol
out
aad
xor
stos
jnp
cmc
pusha
jno
push
popa
jnp
lcall
sub
idivb
lahf
insl
adc
jl
xor
jnp
xor
inc
add
fisubrs
sti
shrl
mov
jnp
cmp
aas
fsubr
popf
ret
jnp
shrl
je
adc
sahf
xchg
jns
cld
cmp
es
sub
xchg
inc
and
dec
mov
push
andb
loop
push
adc
jae
aad
fdivr
dec
xor
lahf
jns
cmpsl
out
mov
mov
push
inc
adc
test
add
xchg
xchg
mov
aaa
jns
xchg
dec
lds
divl
aas
add
sti
add
in
pusha
sete
cmp
addr16
jnp
mov
loope
je
add
mov
sbb
lret
jnp
mov
and
add
mov
mov
lret
adc
jnp
cmc
push
leave
and
ret
jnp
lahf
addr16
subl
fwait
mov
or
mov
lds
fwait
hlt
add
shr
pop
test
jmp
xchg
jl
mov
dec
pop
testb
sbb
and
pop
lret
sub
or
mov
jbe
dec
pop
push
mov
jo
int
pop
cmp
out
lds
sbb
sub
out
hlt
insb
push
mov
xchg
jnp
jne
xchg
xchg
sub
jns
add
fbstp
scas
push
mov
xchg
aad
jnp
daa
sub
imul
pusha
pop
es
or
stc
xor
shlb
cs
jo
mov
popf
xor
mov
xor
daa
jp
test
pop
adc
scas
cmovne
xor
xchg
sbb
mov
jns
pusha
insb
adc
adc
jnp
xor
adc
enter
les
lret
xchg
jne
pushf
pop
jnp
or
lods
sub
mov
pop
inc
hlt
jnp
xor
push
stos
pop
jnp
lahf
test
jmp
dec
mov
in
cmp
push
lock
test
decl
outsl
jae
xlat
mov
ss
cli
push
mov
sarl
idivb
push
shr
cltd
and
add
jp
pop
inc
pop
jle
cmp
pop
mov
or
mov
jl
repnz
adc
jle
aaa
jns
push
out
push
xlat
or
jnp
or
and
add
dec
hlt
jbe
loop
sahf
jnp
call
sub
push
pop
stos
in
pop
ljmp
fdivs
inc
sbb
movsl
into
push
adc
push
mov
aam
gs
adc
mov
cmc
popa
jnp
adc
rclb
lret
roll
push
into
xor
jnp
xchg
inc
sti
push
js
inc
jnp
jmp
mov
sbb
fucomip
fld
in
inc
pop
pop
shlb
loope
sahf
cwtl
jns
dec
adc
aaa
jnp
ret
adc
in
test
and
jnp
or
xor
jnp
hlt
mov
ds
shlb
cwtl
scas
ja
pop
cmp
out
jns
add
mov
mov
out
aad
mov
xor
jle
repnz
pop
mov
push
popa
pop
rcll
jnp
pop
cmp
push
imul
sbb
jae
xchg
das
jbe
mov
push
add
fdivrl
subb
sub
rcrl
ljmp
cmp
mov
cmp
addr16
cmp
push
xchg
cmc
and
mov
or
shl
jnp
add
and
push
roll
adc
xchg
xorl
iret
inc
insl
outsb
pop
lea
jnp
mov
mov
ja
mov
lret
dec
fwait
push
push
xchg
pop
data16
mov
inc
dec
cmpsl
repz
dec
cmp
dec
mov
jnp
test
lds
or
imul
inc
pop
loopne
jmp
xchg
push
out
jns
mov
pop
add
int3
jmp
daa
mov
outsl
les
mov
add
ret
push
ja
cmovo
jecxz
stos
aaa
cltd
dec
sub
push
jne
sbb
fistps
scas
pop
into
pop
jg
and
lods
notl
cli
jle
jnp
pop
or
negb
test
xchg
lret
ljmp
jmp
jnp
or
jecxz
insb
mov
jne
xchg
lret
loop
ja
out
sub
lods
outsb
daa
mov
stc
push
mov
xor
leave
jns
rorb
sbb
inc
cmpsl
loope
shrb
gs
cmp
sub
dec
mov
ds
test
push
pop
push
jl
lret
push
jnp
dec
sbb
add
mov
pop
movsl
or
pop
push
and
or
cli
xor
in
mov
push
mov
mov
call
orl
jp
test
mov
push
add
dec
jnp
mov
mov
ja
xor
insb
mull
jae
sbb
jecxz
push
xorl
fwait
out
adc
inc
dec
pop
push
aas
je
insb
xchg
mov
sahf
add
mov
mov
cwtl
mov
scas
push
scas
divb
fstl
aaa
aas
mov
xchg
ja
sti
inc
adc
sub
xor
jno
testb
inc
fldt
popf
movsl
cld
pop
xor
or
cmp
je
loopne
inc
xchg
or
jnp
ficomps
cmp
push
inc
pop
xchg
mov
sbb
push
pop
call
xchg
xor
or
jnp
mov
ficomps
jge
jnp
or
pop
aam
jnp
lcall
ss
daa
xchg
jl
imul
arpl
lret
nop
mov
push
and
sbb
and
int
test
fcmovne
rcrl
sbb
sbb
dec
push
negl
push
out
ds
jns
inc
sahf
mov
mov
out
xor
or
jnp,pt
inc
or
inc
loop
mov
out
rorl
cmp
dec
jne
jnp
xchg
sub
cmp
pop
jno
bound
push
pop
sti
call
push
dec
xlat
xor
insb
inc
jnp
in
adc
loopne,pt
fsubs
jl
xor
fs
ds
push
fsubrl
push
xor
cmp
jnp
test
or
cmpsb
mov
add
popf
xlat
jnp
jno
xchg
inc
int3
movsl
ja
pop
mov
bound
scas
ret
jnp
pop
xchg
mov
jnp
divl
es
inc
xchg
jae
mov
out
aam
inc
frstor
push
jno
jp
pop
and
bound
scas
push
jnp
mov
faddp
pop
xorl
inc
pop
cwtl
lods
pop
add
je
es
xor
cmp
out
insb
or
in
add
xor
popa
sub
jmp
push
mov
imul
pop
mov
jae
jle
test
inc
in
inc
cmpsb
stc
adc
xchg
lods
shlb
aam
lea
fldenv
jp
mov
sbb
bnd
jno
mov
jnp
add
push
sub
pop
pop
xor
inc
jnp
sub
popf
outsl
inc
jae
xchg
stos
mov
repz
cmpsl
cli
add
xor
push
sub
mov
jg
movsl
mov
mov
daa
mov
andl
mov
shlb
ret
jnp
nop
mov
shll
jae
jnp
sbb
in
pmuludq
lods
sub
push
enter
jae
mov
xor
mov
inc
add
jnp
xor
mov
mov
iret
mov
ret
shrb
push
and
fistpl
stos
lcall
xchg
pushf
jns
cs
push
cli
imul
std
stos
dec
ds
aaa
jns
scas
sbb
jmp
data16
stc
aas
in
mov
jnp
cmc
loop
cmp
js
cmp
mov
xchg
cmp
jno
inc
jns
dec
jnp
xchg
lds
sub
jnp
sbb
cmpsb
orb
imul
sub
mov
jp
flds
xchg
lea
dec
shrb
out
push
sub
add
pop
or
call
mov
dec
fstpt
test
jnp
pop
daa
lds
cwtl
push
pusha
jnp
ljmp
jnp
orl
mov
push
ds
shrb
loopne
in
in
lcall
fiadds
xchg
lods
fstpt
jnp
mov
mov
jns
vmwrite
adc
ret
pushf
pop
adc
f2xm1
movsb
or
data16
mov
mov
sub
add
xor
jmp
and
lahf
mov
rcrb
outsl
je
lahf
mov
lret
cs
push
imulb
adc
stos
dec
lret
pop
dec
dec
pop
data16
xchg
ret
pop
popa
mov
push
xor
xlat
mov
ffree
add
pop
push
mov
xor
aad
sar
and
out
pop
inc
jecxz
jp
xchg
sarl
lods
loope
jnp
arpl
cmp
mov
push
xor
sub
cmp
add
out
push
jecxz
fldcw
push
gs
and
das
pop
push
std
or
pop
mov
nop
movsl
repz
mov
in
movsb
mov
sub
push
mov
or
setl
leave
dec
cmp
ficomps
test
test
outsb
push
xor
xlat
js
xchg
or
pop
stos
ljmp
adc
out
inc
pop
sub
lcall
scas
pop
inc
fstl
or
mov
or
clc
jnp
mov
les
push
push
incb
test
aas
mov
xchg
andl
div
popf
int
cli
pop
push
out
cs
and
push
cmp
mov
xchg
hlt
push
xor
sub
in
insl
ret
imul
testl
pop
repnz
inc
fidivrl
pop
bound
add
mov
fs
jnp
and
mov
inc
push
loopne
push
push
sarb
repnz
mov
aad
mov
fadd
cmpsl
roll
ficomps
mov
xchg
aam
jns
mov
fnsave
mov
xchg
xchg
lret
jb
je
push
sub
jmp
jnp
gs
push
fwait
mov
jnp
jae
dec
push
xchg
sarb
xor
adc
mov
cwtl
pop
outsl
xlat
je
xchg
jne
inc
adc
or
dec
jge
mov
dec
and
jmp
cmp
jl
xor
lds
jnp
fwait
movsb
faddl
pop
bound
out
pop
cmp
cli
push
ja
pop
pop
out
mov
in
push
xor
add
push
inc
lock
adc
inc
ljmp
addr16
fsts
adc
inc
call
mov
cmpsl
jnp
jb
mov
ljmp
aad
mov
xor
mov
out
cltd
ja
cwtl
mov
pop
scas
jae
or
inc
std
lcall
in
aam
and
aad
fstpt
iret
insb
clc
in
jnp
sub
pop
adc
pushf
mov
pusha
repz
mov
fsubs
das
ljmp
repz
mov
ja
mov
enter
mov
daa
push
lods
push
movsl
ret
jae
out
xchg
cmp
cmp
ss
movsl
ljmp
inc
mov
push
cmpb
enter
lods
int3
xchg
scas
mov
or
xchg
insb
push
pop
nop
cmc
inc
sub
jle
push
mov
mov
fs
pushf
outsl
aaa
cmc
pop
pop
ds
push
push
xor
jmp
sti
outsb
mov
push
jnp,pn
inc
xor
in
mov
sbbb
jmp
ja
sub
loopne
sub
sub
ret
jnp
pop
popa
int3
xchg
mov
idivb
out
push
mov
xchg
mov
outsl
and
std
adc
inc
rcl
push
in
cmpsl
leave
pop
or
and
dec
mov
inc
jmp
mov
sti
lds
mov
aas
mov
sbb
stos
shrb
jnp
pushf
cld
push
push
pop
jle
inc
jnp
js
loope
push
xor
push
push
lock
les
mov
xlat
jnp
inc
push
inc
in
xor
jnp
out
pop
es
or
mov
pusha
push
out
sbb
out
pop
lods
ja
dec
jl
mov
mov
sbb
cwtl
lret
sbb
push
jbe
fcoms
ljmp
imul
in
insl
jns
jecxz
xchg
pop
scas
jmp
cmp
sub
cmp
xor
lret
push
push
adc
push
xchg
mov
stc
fistl
imul
aaa
test
sub
shlb
iret
jnp
shll
ljmp
xlat
ss
push
sub
and
call
scas
xchg
orl
lret
and
adc
or
cmc
ss
or
insl
cmp
jae
cs
roll
push
int
lods
fldenv
lds
jns
xor
mov
outsl
aad
mov
push
in
xchg
movsb
mov
out
jnp
push
sbb
jmp
inc
add
jnp
adc
stc
jne
fidivs
mov
jnp
pop
dec
ficomps
filds
jnp
loopne
leave
pushf
or
and
xchg
incl
mov
in
push
ss
lret
sbb
stc
dec
push
fldenv
repnz
lahf
pop
ss
push
adc
mov
repz
imul
xor
xor
jl
mov
push
xor
pusha
jne
pop
popa
jnp
push
mov
insl
jnp
cmpsb
faddp
in
adc
shrb
in
push
and
int
or
scas
mov
jns
les
mov
aad
lods
lock
fsubs
sub
sbb
xchg
popf
in
mov
cmp
and
fs
stc
mov
jnp
mov
sub
jnp
pusha
adc
jmp
stc
jno
jnp
sub
fwait
mov
ret
sub
mov
iret
fisttps
sub
xchg
xor
mov
jnp
scas
jecxz
or
dec
movsb
movsl
push
and
cmp
leave
jnp
xor
xchg
mov
push
test
lret
sbb
push
movsl
add
jnp
mov
inc
mov
fs
push
or
cli
out
add
jl
cmp
mov
or
jge
adc
pop
into
cld
cmovp
mov
sub
les
bound
icebp
orl
xor
in
jnp
xchg
mov
fs
into
pop
lods
or
mov
push
sub
jle
bnd
lods
loopne
or
push
sub
mov
jnp
and
pop
int3
mov
sub
je
jecxz
add
ja
xchg
mov
pop
inc
scas
outsl
rol
push
shlb
cmc
cmp
xchg
xchg
ja
mov
mov
repz
add
jnp
dec
sbb
xchg
hlt
sub
out
jnp
or
into
jnp
mov
mov
loopne
loope
leave
xchg
or
and
adc
cmp
jnp
mov
out
inc
jecxz
jnp
mov
ljmp
clc
lock
pop
adc
dec
scas
cmp
pop
rcrl
xchg
rorl
jnp
mov
xchg
inc
jmp
xor
jnp
mov
or
mov
adc
into
mov
mov
stos
divl
xchg
ret
cmpsl
fistl
popa
jge
rorl
xor
mov
mov
dec
imul
sbb
in
ret
jp
ret
in
aaa
sub
lods
lcall
jmp
fidivs
in
cmp
out
sarl
fiaddl
inc
cmp
cmpsl
jnp
mov
aaa
or
pusha
and
into
sbb
dec
push
xor
sub
in
push
jnp
aam
pushf
jns
rorl
int
ret
sbb
push
pop
mov
sub
test
sub
pop
mov
pop
shl
cltd
jnp
mov
xchg
and
loope
jnp
push
jl
sahf
lods
jnp
cwtl
es
insl
hlt
jnp
dec
dec
mov
jnp
fisubrs
lret
inc
pop
jnp
xor
pop
and
jnp
outsb
cmpsb
je
dec
xchg
mov
push
ja
add
jmp
sbb
jle
pop
mov
mov
xchg
pop
cmp
pmaddwd
mov
movsl
cld
jge
pop
jl
or
xchg
jl
jae
ret
ret
out
subb
xor
fwait
inc
sahf
jnp,pn
addps
fldl
addr16
and
dec
jp
in
xor
jnp
bound
cs
daa
or
xchg
fnsave
pop
sub
push
jnp
jno
test
pop
sub
jnp
pop
bnd
mov
adc
out
mov
mov
nop
xchg
pop
jp
dec
pop
sub
xor
xor
jp
xchg
mov
xor
xchg
daa
push
addr16
out
leave
jl
sub
pop
and
sub
fsts
lds
orl
mov
ds
adc
cmp
fstps
subb
ret
outsb
enter
jl
mov
inc
jnp
fnstcw
andb
xchg
mov
fs
outsl
sbb
cs
std
cltd
mov
fistpl
lods
jns
cmp
inc
pop
std
cmp
and
les
jnp
pop
mov
dec
js
pop
cmp
jp
arpl
shrl
mov
cmc
inc
lret
cmp
dec
cmp
jnp
fisttps
cmp
cwtl
sub
test
or
jnp
ret
sub
lods
fdivrs
loopne
add
pop
jmp
shll
jnp
in
daa
shlb
xchg
orl
sub
inc
push
pushf
mov
pusha
jnp
mov
mov
jnp
jo
sub
mov
xor
dec
push
mov
dec
rclb
outsl
cmpsl
iret
adc
enter
xchg
mov
fs
inc
dec
jnp
or
push
loopne,pt
and
fnsave
dec
stos
jnp
cmp
sub
jnp
rclb
or
mov
cmp
rorb
out
stc
push
cmp
or
mov
jb
imul
imul
mov
pop
or
mov
push
ds
dec
gs
lahf
insb
enter
jo
pushf
sub
shlb
jecxz
hlt
pop
jnp
add
adc
jnp
add
ror
xchg
xor
cmp
std
or
rcrl
push
xor
je
stc
jnp
push
or
cli
aaa
int3
fiadds
clc
pushf
pop
and
jnp
xchg
sahf
fdiv
nop
gs
int3
or
xchg
cs
mov
adc
xchg
or
push
mov
aam
cld
inc
jnp
iret
inc
repz
sbb
jnp
sbb
push
and
inc
pop
push
xlat
aad
insl
pop
test
push
mov
jo
inc
jnp
xchg
movsb
int
outsl
mov
inc
stc
mov
addr16
and
push
in
repz
jnp
pop
xchg
addb
jnp
mov
out
adc
or
pushf
sbb
test
jnp
xchg
xchg
aas
cmpsb
add
imul
cmp
fildll
inc
pop
jmp
insb
fldl
push
xchg
dec
je
jb
xchg
cmpsb
jg
and
rorl
adc
push
mov
cmp
cmp
dec
imul
lods
jp
ljmp
fidivrs
test
lcall
jno
jo
sub
xchg
popf
xor
in
xor
xor
cmp
imul
lea
pusha
mov
adc
jb
mov
adc
xor
inc
sub
sub
xchg
pinsrw
xor
cmpsl
add
xor
cld
jnp
mov
nop
test
adc
cmp
mov
out
jg
shr
enter
jne
push
push
sbb
cmpb
and
mov
push
fs
mov
scas
movsl
dec
push
mov
jnp
leave
in
dec
dec
les
jge
mov
daa
add
mov
pop
rcrl
push
arpl
jl
scas
push
adc
sbb
xchg
es
sbb
xchg
aam
std
mov
push
jge
sub
out
dec
dec
push
fisubrs
mov
clc
sbb
and
inc
mov
dec
add
stos
jnp
push
mov
jnp
cmc
xchg
gs
fisubrl
jnp
pop
dec
repnz
sub
jnp
and
push
es
sbb
mov
xor
sbb
pusha
nop
sahf
mov
sarb
sbb
into
and
aaa
add
fistps
inc
int3
ljmp
add
pushf
mov
ljmp
cltd
mov
jo
jne
jne
lret
cwtl
mov
pusha
fwait
dec
and
movsb
or
mov
mov
dec
adc
jno
jge
or
push
jnp
filds
jle
jnp
test
sbb
mov
pop
fmul
add
test
add
pop
test
lods
out
sti
inc
inc
add
stos
push
sub
adc
cmpb
jg
xchg
jge
ja
jne
sbb
jnp
loopne
xor
outsb
jecxz
and
mov
test
mov
pop
ljmp
jp
lret
mov
xchg
mov
xchg
lock
push
test
pop
mov
scas
pop
fmulp
mov
mov
jmp
int
and
add
mov
lahf
jl
sub
jnp
cltd
pop
cmp
adc
jnp
jo
pop
addr16
xor
jnp
fdivl
in
and
daa
jnp
and
lock
jnp
adc
sbb
icebp
xchg
test
push
push
sub
jns
adc
shld
jmp
adc
or
adc
pop
mov
add
mov
xchg
jb
leave
mov
push
push
mov
aaa
jns
inc
inc
adc
movsl
fnstcw
clc
in
loopne
inc
or
mov
xchg
movsl
aad
les
in
mov
sbb
jnp
mov
add
add
and
push
pop
jnp
popf
out
push
fisttpll
cltd
fmuls
mov
mov
xchg
movb
sbb
push
cmp
dec
gs
dec
mov
mov
lcall
fcomi
rorl
jne
sub
fdiv
mov
pop
scas
imul
and
adc
mov
jbe
addr16
push
stc
sbb
push
jae
fwait
rorb
ds
push
jl
shlb
int
and
int3
jle
call
fcomps
aam
push
test
test
test
jmp
popf
clc
push
adc
jl
xchg
mov
pop
out
xchg
sahf
pusha
add
cmp
dec
push
mov
pop
hlt
push
scas
mov
mov
jmp
xor
xchg
fstpt
das
in
outsb
loopne
loop
sub
stos
jnp
dec
and
or
mov
std
jl
add
jnp
or
fisttpll
cmpsl
ret
jnp
je
mov
pop
mov
cld
test
jns
or
stos
ja
sti
inc
and
mov
mov
ret
xchg
add
mov
add
pop
aas
lret
mov
imul
sbb
insl
sub
dec
ret
fmull
cmp
pop
imul
sbb
fidivl
dec
and
in
pop
fidivl
dec
aas
sub
std
jns
sub
movsl
flds
bound
inc
sub
test
dec
loopne
jo
mov
ja
lret
xor
sbb
jnp
sbb
add
xchg
movsl
int
lods
bound
pop
enter
clc
lret
imul
dec
pop
cli
cs
and
sbb
out
setne
fdivrp
sbb
scas
movsb
or
mov
xor
mov
jnp
and
xor
into
cmp
fwait
mov
int
jns
xchg
mov
mov
xor
mov
movsl
gs
mov
loopne
jnp
mov
pop
sbb
jns
inc
pop
stc
jno
fdivrl
jo
fistpl
js
inc
int
jns
bound
insb
in
pop
scas
mov
jmp
enter
inc
gs
cld
mov
sub
das
jnp
dec
inc
loope
rol
fidivrl
shrb
or
mov
xchg
jnp
fstps
daa
leave
adc
notb
jnp
repz
cmp
lsl
pop
fcompl
ja
sub
imul
jnp
ja
in
cmp
adc
div
adc
sbb
inc
outsl
popa
inc
lea
test
rcrb
mov
jmp
cmp
mov
out
and
test
imul
ret
cmp
iret
les
popf
mov
outsb
ds
out
fsubs
jb
xor
dec
jnp
sub
divl
mov
div
lcall
fnsave
pop
arpl
xchg
gs
loopne
cld
push
je
divl
xchg
lods
into
mov
repnz
inc
xchg
aas
jns
cmp
fisubrl
fdivl
jb
pop
cmp
and
sub
loop
push
or
insl
xchg
jno
mov
mov
rcl
sub
pop
ret
and
jb
jnp
int3
aas
pushf
pop
iret
push
movsl
bound
movsb
sarb
fs
dec
cwtl
mov
push
inc
mov
xchg
loop
ja
add
mov
sub
jns
mov
in
std
mov
cltd
int
inc
adc
fwait
in
cwtl
test
mov
jnp
das
shlb
jnp
mov
arpl
jmp
fwait
sub
addl
xchg
int3
outsl
mov
enter
fstpt
push
sbb
outsl
sub
xchg
push
nop
ficoml
or
arpl
dec
imul
mov
xor
push
les
ja
mov
insb
scas
add
clc
sti
xor
and
mov
mov
or
shrb
aad
xchg
loopne
inc
mov
sbb
mov
push
sbb
mov
jo
mov
pop
pop
movsb
out
sbb
idivl
jne
adc
or
sbb
jnp
sahf
mov
insb
dec
push
into
test
jmp
cmp
mov
cmp
popf
jnp
or
jnp
cmpsl
or
enter
jnp
mov
xchg
jl
outsl
inc
pop
pop
pushf
mov
repz
cmp
push
add
aad
lods
jecxz
pop
outsb
jo
mov
aaa
ljmp
xchg
sbb
jnp
add
add
pop
xchg
cmp
mov
sbb
cmpl
mov
cmpsl
jnp
xorl
jnp
sbb
fsubr
sub
out
mov
faddl
lods
movb
cmp
ljmp
jns
pop
sbb
aam
add
in
pop
ret
cli
sbb
adc
xchg
lea
ja
test
inc
fistl
imul
pop
js
aad
hlt
data16
push
mov
pop
fidivrs
clc
jnp
sbb
gs
sub
sub
loope
aam
stos
daa
add
inc
mov
push
mov
shll
push
and
jnp
rcl
add
lds
mov
or
cmpl
and
std
mov
dec
mov
pop
in
insb
mov
cmp
idivl
inc
xchg
or
inc
mov
jnp
shll
in
pop
adc
xchg
mov
jnp
outsb
test
addb
jnp
iret
pop
shlb
cltd
shll
inc
adc
lret
fbstp
push
mov
out
fdivs
or
lods
adc
mov
inc
push
xchg
lret
sbb
fdivrs
decb
pop
xchg
aaa
out
jp
add
int
mov
jae
stc
cmc
es
out
mov
out
mov
mov
inc
outsb
push
movsl
fsts
movsl
xor
insb
pop
les
ja
cmp
pop
add
ss
fdivs
les
mov
out
ret
dec
jnp
lcall
aam
std
mov
mov
pushf
mov
xor
pop
inc
arpl
xchg
jnp
clc
sub
out
push
and
sub
jp
mov
xlat
inc
fldenv
jnp
sub
daa
fdiv
sub
mov
out
add
jnp
pop
cs
test
mov
pop
testb
jnp
sbb
fldl
fistpll
jns
xor
sahf
xchg
stos
aad
fs
jnp
push
xchg
stos
aas
aaa
xchg
dec
outsl
dec
and
mov
xor
inc
adc
jnp
movsb
inc
inc
mov
lods
loopne
add
jnp
sahf
ret
rcl
jnp
mov
pop
cmpsl
rcrl
jae
fdivs
fstpt
sahf
jle
add
ret
and
aas
ja
aaa
outsb
test
das
not
sbb
jbe
mov
push
shrb
inc
mov
add
xor
ja
jg
test
sub
dec
enter
cmp
rorb
mov
jnp
fcomps
fdiv
mov
fistpl
jnp
std
loopne
into
cs
ja
faddl
les
jnp
mov
arpl
leave
fnstsw
jg
inc
dec
fwait
jnp
repz
mov
adc
jmp
and
cltd
mov
cmp
stos
jecxz
sbb
jnp
add
fwait
lds
cmp
or
out
pop
stos
fbld
sbb
jnp
test
movsl
icebp
inc
hlt
jnp
out
push
lcall
cmp
inc
clc
push
pop
rcll
mov
mov
ja
decl
mov
subl
jnp
add
or
mov
add
out
ljmp
push
jns
push
fistl
rcrl
xor
jne
sbb
insl
mov
cmc
cmc
cmp
add
repnz
xor
std
loope
pop
sub
mov
out
daa
jmp
inc
cmpsb
lret
pop
out
sbb
fmuls
xchg
rep
fsubrs
jg
pushf
sub
xor
pop
orb
pop
in
in
jnp
out
stos
into
sub
outsl
bound
in
int3
imul
sub
jnp
mov
test
out
test
ret
pop
jnp
cmp
movsb
test
es
mov
iret
jmp
pop
idivb
pusha
and
jnp
addr16
jbe
gs
xor
inc
xchg
stos
cmp
inc
mov
outsl
cmc
adc
psubb
pop
mov
and
lea
jnp
lahf
inc
mov
pop
mov
adc
out
jmp
stos
jnp
cmp
sub
popf
mov
jnp
orl
xchg
inc
and
cwtl
and
andb
ret
add
add
lret
push
add
mov
and
insb
loop
mov
add
loopne
cmpsl
pop
mov
andl
mov
js
gs
es
mov
jnp
and
xchg
cmp
das
add
and
sub
mov
lds
call
lret
fwait
mov
add
into
mov
and
push
stos
jle
pop
jnp
xor
inc
or
jnp
pop
orl
push
test
fdivp
mov
xor
sahf
inc
xchg
add
inc
jp
movsb
inc
push
push
mov
int
shl
test
mov
pusha
ljmp
cmc
sbbb
jnp
xlat
stos
sub
test
dec
xor
sbb
mov
sahf
xchg
pop
pushf
or
fwait
xchg
lock
repz
xchg
push
cltd
stos
cmp
fsubrl
ret
scas
neg
lret
sub
inc
outsb
pop
push
xchg
sub
cld
int3
pop
into
jae
addr16
inc
cmp
dec
pop
push
inc
bound
jecxz
ja
addr16
jl
xor
pushf
xchg
pop
aam
movsl
fdivs
les
xchg
cmpsl
in
rorb
test
imul
mov
sarb
les
nop
movsl
out
jnp
test
sbb
mov
mov
sbbl
mov
subb
and
mov
push
into
jnp
adc
shr
insl
inc
xchg
pop
jnp
sbb
testl
push
adc
jg
addb
mov
lea
stos
add
fiaddl
mov
inc
addr16
push
pushf
shl
add
cmp
lahf
addb
ret
sub
int
test
xchg
scas
add
call
xchg
adcb
loopne
test
mov
mov
movsl
cli
inc
cltd
stos
and
cld
xchg
jge
jmp
lods
push
jns
rcrl
out
jns
aaa
pop
jnp
and
das
xchg
dec
pop
imul
push
cmp
xor
cmp
ljmp
hlt
push
add
mov
or
sub
sub
cmp
lods
xor
in
fldt
pop
outsl
in
sub
inc
aad
jae
add
or
shrb
adc
adc
inc
loop
aam
jp
in
fldcw
sarl
lods
fdivl
push
and
xor
repz
jp
iret
jbe
cmc
fdivrs
cmpsb
dec
and
and
lea
and
inc
pop
shrl
fdivrs
stos
adcl
xor
aas
jmp
pop
add
inc
fistl
push
jns
adc
mov
enter
das
mov
mov
in
outsl
mov
and
mov
and
jg
or
jns
outsl
mov
jnp
dec
inc
push
scas
lahf
inc
add
popf
xchg
mov
aas
addl
divb
jmp
dec
iret
into
and
mov
je
mov
xor
dec
or
jae
xchg
icebp
sarb
mov
cltd
jns
cmp
lcall
cmpsl
fiaddl
jnp
lea
push
lods
sarb
loopne
mov
divb
or
or
cmp
test
pop
jnp
push
mov
shl
xor
jge
adc
pop
sbb
into
ret
mov
insb
jnp
push
outsb
and
xchg
mov
push
scas
lcall
mov
cld
mov
dec
adc
jnp
mov
pop
mov
or
test
add
or
roll
push
xchg
scas
jns
or
inc
lahf
add
pop
gs
jge
cmp
mov
dec
jae
jp
decl
and
faddl
dec
mov
cld
repz
jp
dec
in
daa
jns
std
xor
pop
call
adc
sbb
jecxz
xchg
rorl
push
dec
mov
jno
and
mov
or
inc
and
stos
cmp
sub
call
jmp
cmpsb
jae
and
sti
lods
into
jnp
mov
push
sub
adc
iret
jnp
inc
incl
jnp
sbb
jo
cs
and
stc
mov
jnp
lods
fistps
jnp
dec
sbb
divl
outsl
jnp
and
cltd
mov
test
push
fdivrs
mov
pusha
cmp
andb
adc
out
add
iret
popa
rorb
test
ret
xchg
inc
cmp
out
fs
jnp
inc
mov
outsl
jle
inc
sahf
xchg
test
sbb
pushf
mov
movsl
insl
pop
addb
mov
fildll
dec
jg
mov
mov
inc
pop
mov
jle
test
repz
aaa
cli
jns
mov
pushf
sub
adc
in
notb
movsl
lcall
fldl2e
push
test
pop
pop
xor
addr16
mov
or
pop
lcall
sbb
std
xchg
sbb
into
or
enter
jo
inc
adc
call
add
lock
out
pop
jnp
loopne
mov
daa
xchg
subb
jns
dec
mov
fisubrl
jnp
aas
cld
arpl
mov
divl
leave
and
xchg
inc
dec
xor
outsl
mov
xchg
add
pop
fsincos
movsb
pop
cmp
cmp
or
sahf
lret
in
jnp
adc
adc
mov
or
xlat
das
in
xor
mov
test
cmp
adc
add
jnp
pop
popf
rcrl
mov
add
fwait
and
aam
outsl
fbld
mov
in
nop
movsb
movsl
cmpl
orb
sti
stc
out
movb
test
shlb
jnp
pushf
leave
test
in
fldl
outsb
comiss
sub
andb
sub
cmp
cmp
push
shlb
inc
stos
ljmp
sub
icebp
inc
mov
inc
adc
lcall
shl
lock
dec
sbbb
mov
pop
pop
push
sub
or
inc
in
push
and
mov
gs
add
mov
pop
enter
jecxz
pop
cmpsl
int
mov
pushf
and
adc
jnp
and
insl
jnp
iret
adc
push
test
pop
aaa
adc
xchg
lods
or
cli
test
jmp
jnp
push
mov
pop
sub
xchg
lods
in
or
dec
mov
inc
cmp
test
bound
daa
or
ja
sti
cmp
incl
mov
aas
addr16
mov
out
and
lea
ret
les
movsb
jle
xor
xor
test
inc
test
gs
jne
js
inc
rorl
das
repz
inc
pop
je
sbb
jmp
push
imul
imul
and
rorb
xchg
or
loopne
int
jae
dec
push
movsb
js
clc
adc
inc
cs
and
call
push
mov
insb
add
jl
fidivrs
sbb
pop
test
xchg
sbb
pop
aam
fdivs
or
push
mov
inc
lods
mov
push
data16
jl
push
in
jnp
loope
sub
cmp
dec
mov
hlt
xchg
adc
lods
xlat
push
jl
rol
imul
dec
int
pop
mov
jo
dec
lret
sub
sbb
inc
mov
data16
lds
movsb
cmc
sbb
mov
stc
pop
push
test
sbb
jnp
cld
mov
pop
jnp
mov
jmp
sub
stc
sahf
ljmp
jle
out
jl
fcomp
xor
push
pop
add
in
daa
jnp
outsb
inc
arpl
xchg
mov
adc
dec
adc
jle
lock
and
popa
add
xchg
mov
addr16
cmp
dec
adc
xchg
mov
les
orl
sub
jge
xor
out
add
pop
dec
addb
sbb
fnsave
popf
ja
sbb
mov
int3
or
loop
sbb
fdivrl
pushf
ret
pop
imul
xor
mov
or
fdivrl
jecxz
ja
mov
imulb
insb
xor
fwait
clc
inc
out
imul
xor
inc
outsl
add
mov
adc
jnp
dec
fs
mov
and
jnp
stc
xor
sub
pop
and
scas
fsubs
pop
push
mulb
int3
stc
outsl
rolb
push
mov
cmp
in
pushf
jo
es
or
jns
fnsave
dec
and
push
mov
cli
sub
scas
adc
fwait
mov
outsl
sahf
loope
sbb
sti
outsl
mov
inc
push
orl
or
scas
pop
dec
lcall
lods
and
xchg
mov
ja
loop
adc
in
ret
dec
nop
sahf
rcll
insl
imul
mov
cltd
outsl
lret
dec
lock
pop
xorl
mov
pop
fcomps
hlt
pushf
gs
jns
and
fsubrl
dec
mov
cmp
imul
loop
sti
aam
pop
les
inc
or
xchg
dec
jle
sub
dec
push
mov
mov
pop
enter
std
cmp
mov
sarl
fldcw
loopne
cltd
addr16
xor
fistl
mov
ds
shrl
sti
xor
inc
sbb
mov
cmp
sub
bound
rorl
push
inc
jnp
frstor
adc
jnp
or
xlat
sub
fnstcw
mov
mov
push
push
jnp
cmc
je
pop
mov
mov
bnd
iret
daa
outsl
sar
push
xor
and
scas
xchg
jnp
xchg
loop
sbb
fistps
dec
xor
jl
inc
pushf
lods
jae
jecxz
les
pop
incb
jns
insb
mov
mov
cmc
jnp
mov
push
push
jnp
or
icebp
push
iret
sti
push
jo
push
mov
sub
ret
xchg
lods
push
jecxz
sub
bound
mov
push
xor
data16
xor
sub
sub
aam
stc
add
gs
and
or
dec
mov
sarl
enter
incl
std
mov
popl
xchg
mov
ja
mov
and
jnp
lea
aad
int3
xchg
ds
call
mov
loope
sub
adc
lock
push
or
lds
in
add
jge
into
stos
or
insl
jns
and
mov
mov
stos
iret
sbb
sub
popf
lret
stos
stc
outsl
push
movsb
or
data16
imul
and
cmp
pop
add
leave
ret
in
cmp
or
sarb
stc
mov
cmpsb
push
sub
addr16
add
lcall
or
in
sub
sub
jnp
popf
and
cmpsl
sarb
pop
pop
shll
mov
fdivrs
data16
dec
mov
jnp
xor
loopne
mov
xchg
addl
cmp
ja
fldenv
pop
or
xchg
push
pop
jae
dec
sbb
mov
bound
dec
cltd
dec
jl
lret
pop
mov
jnp
loop
cwtl
stos
stc
call
add
mov
sar
jnp
bound
add
mov
test
mov
push
std
inc
jp
dec
sbb
loope
jnp
inc
push
in
repnz
repz
cli
data16
std
addr16
aam
mov
gs
ret
fistps
out
pop
push
pop
sbb
xchg
pop
fidivs
cmp
sarl
imul
fsubrl
jecxz
sbb
mov
jnp
add
in
inc
push
dec
and
sbb
jmp
lds
movsb
pop
push
and
jecxz
lea
jns
add
cmc
je
ja
sub
or
xchg
mov
int
int3
pushf
outsl
mov
test
notb
or
mov
cmova
inc
xchg
mov
sub
jbe
lods
iret
ret
int3
jmp
mov
push
popl
jmp
and
mov
or
ficoms
inc
and
push
or
dec
or
gs
mov
fs
jb
inc
sbb
daa
daa
in
shrb
nop
fwait
icebp
imull
imul
popf
lahf
jb
lcall
inc
push
ret
xor
cs
icebp
jne
rorl
push
jmp
aas
ja
out
xor
pop
xor
shlb
xchg
shrl
dec
sbb
xchg
inc
scas
jns
fdivr
out
aaa
dec
pusha
test
shlb
adc
popf
addl
jnp
mov
fistps
stc
enter
adc
stc
mov
jnp
mov
scas
mov
pop
xchg
daa
ret
xchg
mov
into
add
add
mov
push
out
and
dec
and
sbb
scas
repz
lea
add
jnp
dec
sub
lock
cltd
mov
das
in
es
jnp
adc
test
jnp
roll
cs
mov
or
pusha
out
add
cwtl
scas
out
and
popf
and
out
sbb
ljmp
mov
fistpll
mov
sahf
jnp
orl
nop
mov
stos
ffreep
and
add
clc
andb
test
mov
sti
add
cld
jne
ret
sub
adc
pushf
cmc
mov
jno
clc
pop
jnp
aad
icebp
testb
loop
jno
stc
fwait
repz
mov
lcall
sub
cmp
pop
and
aaa
xor
jnp
dec
mov
xchg
loope
jne
or
pop
add
jae
inc
push
fisubl
ljmp
ret
daa
push
inc
int3
fistpl
popf
ja
jno
push
repnz
jnp
fidivl
cmp
push
adc
push
pop
push
shl
ljmp
ja
fiadds
divb
jnp
push
sub
pop
adc
sbb
sub
into
sbb
push
lea
daa
fidivrl
aam
js
stos
shll
shll
sub
sbb
adc
jnp
loop
int
movb
jnp
jg
test
lcall
cmp
jnp
fs
into
and
lcall
pop
add
xchg
test
loopne
jnp
adc
adc
xchg
lds
test
xchg
stos
mov
pusha
orl
jnp
mov
lods
mov
outsl
std
inc
mov
jnp
pusha
ret
nop
mov
andb
cltd
mov
call
cli
mov
fiadds
cltd
or
aaa
pop
pop
inc
xchg
add
and
addr16
add
xchg
push
testb
es
hlt
pushf
test
sub
xor
pop
hlt
in
pop
pop
mov
insb
aaa
mov
jae
data16
daa
mov
orb
adc
shrb
imul
jae
xchg
mov
or
outsb
pop
insb
dec
xor
mov
shr
bnd
and
add
js
jmp
push
ret
pushf
jne
cmp
inc
sub
shlb
bnd
xor
and
dec
ja
xchg
xchg
stos
rolb
jbe
mov
jnp
and
pushf
fdivrl
fldt
jnp
call
and
push
shlb
shlb
sbb
cmpsl
test
idivb
out
ret
pusha
popfw
pop
cmp
filds
jnp
lea
cmp
sub
test
mov
inc
xchg
mov
mov
notl
stos
push
jnp
mov
jnp
inc
ret
adc
xor
dec
inc
int
loopne
jle
fisttpl
xchg
pop
outsb
cmp
xlat
insb
enter
fs
or
mov
mov
clc
add
cli
add
jecxz
mov
cwtl
mov
test
lea
cli
int
jle
lock
jns
fwait
ljmp
jp
dec
push
cmp
pop
ss
mov
xchg
xchg
or
int3
hlt
push
ljmp
icebp
out
fwait
outsl
add
aam
mov
push
inc
or
mov
and
mov
hlt
popf
jae
cwtl
nop
jb
dec
sub
cmp
sarl
data16
aam
xchg
inc
jmp
outsl
jnp
in
push
xchg
sti
xor
pusha
or
add
jp
add
xchg
mov
cmp
inc
add
xlat
xchg
mov
jnp
mov
outsl
rorl
inc
clc
and
push
bound
xchg
test
sbb
jnp
cmp
decb
outsb
dec
jnp
clc
cltd
popf
mov
xchg
test
insl
ret
push
lea
pop
jnp
pop
test
out
iret
jnp
add
testl
cmp
xchg
jmp
inc
cld
pusha
scas
mov
mov
jnp
push
lret
test
daa
and
dec
andb
in
mov
add
stos
push
pop
ja
cmp
mov
add
pop
sbb
and
adc
jo
mov
jmp
out
push
hlt
nop
std
jnp
sub
mov
dec
push
jns
cmp
data16
mov
dec
and
sbb
cmc
shrl
jnp
lods
fnsave
hlt
repz
jnp
aad
fstpt
outsb
xchg
pop
push
movsl
push
sub
xor
mov
int3
jbe
test
xchg
test
push
iret
adc
movsb
out
cmpsl
int
sbb
mov
ret
roll
mov
in
dec
movsb
mov
dec
add
cli
mull
or
sbb
mov
scas
jns
sub
clc
jb
cld
test
xchg
lods
aad
pop
sub
push
lock
testb
nop
push
cmp
shl
stc
rcrl
test
pop
outsb
mov
sub
mov
mov
orl
pusha
xchg
or
jge
outsb
jp
fnsave
call
in
aam
xchg
mov
mov
or
call
mov
lods
xlat
mov
jnp
mov
int3
stos
loopne
cmp
lea
aam
inc
mov
or
cmpsl
mov
push
shl
aas
rorb
adc
andb
push
lods
in
jl
addr16
and
mov
mov
jae
dec
add
ja
inc
repz
into
mov
mov
dec
ror
sbb
jo
dec
ja
xor
push
mov
icebp
jg
inc
imul
mov
cwtl
insb
lds
sbb
xchg
mov
jno
es
nop
cltd
adc
gs
pushf
faddl
xchg
jbe
jns
aad
outsb
mov
lods
xchg
ja
shrb
pop
ret
add
xor
dec
push
jnp
aam
rorb
xchg
cmpsl
jnp
movsl
aad
sar
push
jnp
push
test
sarb
daa
xchg
stos
loopne
mov
gs
mov
lods
and
lock
push
jnp
inc
add
or
mov
and
dec
mov
push
subb
xchg
mov
dec
imul
in
rcr
sbb
bound
mov
mov
jnp
mov
inc
mov
jne
inc
orl
test
add
cltd
scas
sbb
cli
mov
xchg
dec
out
xchg
dec
jg
xorb
outsb
push
sbb
ja
xchg
movsl
lds
mov
orl
aas
mov
pusha
inc
cmp
imul
insl
aam
push
pop
cmp
fadds
xor
xor
jge
pop
inc
notb
pop
adc
sub
fnsave
mov
icebp
gs
and
jmp
popaw
imul
mov
xchg
sub
mov
cmp
cmp
xchg
xor
jp
push
jl
test
pop
clc
sub
aam
fstps
jbe
dec
inc
mov
jnp
std
cs
inc
or
int3
sar
in
dec
es
pop
in
jne
cmp
jge
jnp
insl
lods
fadds
xor
cmp
dec
orl
push
and
or
mov
pop
dec
pop
adcl
lea
test
cmp
push
fsubrs
xchg
stos
jns
test
pusha
addl
popa
push
xchg
add
sbb
aad
add
into
cs
or
cmpb
stos
iret
aas
fsubp
mov
pop
mov
int
mov
pop
inc
push
cmp
xchg
push
sbb
jge
mov
in
sbb
sti
jne
add
sbb
mov
movsl
sub
mov
add
xor
aad
lcall
mov
cmpsb
cmp
fdivrl
cltd
cmp
bound
fdivrs
es
daa
fbld
jnp
adc
addb
or
into
jbe
pop
inc
push
jnp
shrb
iret
inc
mov
scas
jns
ret
std
mov
xchg
jecxz
push
ret
and
daa
push
jl
pushf
mov
cmp
mov
jmp
dec
jnp
add
sbb
inc
push
arpl
adc
in
addr16
cmp
xlat
das
hlt
ds
mov
leave
pop
sub
jnp
lds
sbb
outsb
movb
sarb
cmpl
notb
jge
les
mov
inc
xchg
sarb
popf
mov
pop
xchg
or
ret
dec
add
lret
pause
aam
es
xor
dec
push
mov
jae
xor
push
mov
xchg
out
cltd
cmp
push
frstor
sbb
cli
sbb
add
pop
int3
xor
pop
loopne
push
mov
jb
and
cltd
mov
mov
mov
xchg
push
or
jnp
cmp
test
pop
cltd
mov
cmpsb
dec
xor
jmp
cmp
mov
mov
mov
cwtl
or
adc
out
mov
sbb
add
lods
outsl
mov
fidivrs
ja
bt
pop
dec
popa
les
cmp
jle
or
and
xchg
mov
cmp
pop
mov
xlat
jl
inc
jnp
fldl
adc
les
xchg
sarl
clc
mov
lods
inc
lret
imul
call
movsl
pop
in
repnz
cmp
mov
outsb
ss
aam
pop
push
subl
mov
mov
push
or
jp
mov
push
inc
popa
push
sarb
pop
imul
lock
stos
xchg
stos
aam
popa
in
outsl
mov
adc
cmc
or
or
jne
xchg
cmp
popf
mov
jge
cltd
and
xchg
jbe
push
add
mov
jnp
test
loope
or
outsb
sub
xlat
inc
or
jnp
int3
pop
test
inc
cwtl
inc
dec
adc
mov
fcmovnb
dec
movsb
lds
lahf
inc
sarb
xchg
mov
push
sub
lds
jnp
sbb
pop
jnp
sub
xchg
xchg
sbb
adc
adc
faddl
cmp
push
mov
push
fsubl
sbb
jmp
iret
repz
push
arpl
inc
push
mov
mov
pushf
jp
inc
push
inc
adc
scas
xchg
push
stc
sti
mov
push
loop
push
push
sbb
inc
push
inc
pushf
inc
sub
daa
add
addr16
mov
fcoms
push
dec
shlb
sarb
les
stc
popa
fisubl
cmp
mov
or
cmovg
jns
mov
sahf
jmp
inc
ja
xchg
test
pop
les
cmp
dec
lods
mov
mov
mov
adc
int3
inc
jle
or
sbb
add
mov
rcrl
pop
push
inc
dec
xchg
jnp
jmp
and
or
adc
xchg
mov
push
or
xor
xchg
cmp
mov
pop
incb
or
rsqrtps
lret
sbb
mov
jnp
mov
into
jnp
sbb
and
aas
jne
bound
cmp
pop
std
xchg
out
and
mov
mov
scas
push
imul
imul
sti
push
dec
add
xor
adc
push
mov
cmp
jnp
or
push
push
test
or
lret
jl
cwtl
jp
dec
adc
cmp
pop
loopne,pn
and
inc
inc
fs
rcr
out
mov
pop
pop
or
ja
fsubrl
hlt
pop
cmp
aam
mov
mov
fcoms
iret
and
inc
mov
jns
adc
rclb
mov
int3
and
pop
jnp
cli
add
addb
inc
jecxz
jb
cs
pop
mov
stc
push
es
mov
ja
arpl
xchg
mov
pop
inc
jnp
das
sub
outsl
gs
in
xchg
pop
aad
lock
pop
jnp
cmp
and
int
iret
jnp
lea
xchg
pop
jl
rolb
and
mov
int
mov
jp
adc
push
ss
ja
repnz
cs
nop
xchg
jae
int3
sub
lods
out
sbb
cmp
jnp
cltd
mov
insb
movsl
out
popa
push
gs
enter
cmp
jnp
mov
pop
call
frstor
leave
xchg
xor
stc
mov
repz
adc
sub
fdivrl
mov
in
outsl
sub
inc
in
xor
cmp
shrb
adc
pusha
rclb
push
add
jnp
mov
movsb
ret
inc
sete
cmp
je
cmpsl
iret
push
mov
mov
mov
push
das
mov
mov
filds
push
lret
sbb
bswap
pop
xchg
mov
std
addr16
jnp
loop
push
mov
mov
ret
adc
sbb
add
cmp
or
dec
outsl
nop
add
in
add
arpl
int
mov
or
pop
mov
xchg
movsl
jae
sbb
add
jge
sub
adc
mov
mov
dec
mov
sbb
jnp
jno
fnsave
lret
or
jnp
in
mov
and
adc
fisubs
daa
adc
mov
inc
and
jnp
das
jecxz
push
mov
mov
jnp
movb
add
movsb
mov
and
iret
xchg
pop
ds
jl
pop
gs
mov
insb
imul
jl
pusha
sbb
xchg
dec
ret
mov
cld
xchg
jnp
inc
inc
xchg
stos
or
repz
push
shlb
dec
xor
mov
ss
imul
pop
aaa
inc
addr16
nop
popf
dec
jns
out
stos
bound
repnz
xchg
lea
dec
mov
push
xchg
xchg
xchg
mov
test
jp
mov
xor
xor
in
add
pop
shrb
jns
jb
push
and
adc
mov
and
lret
das
jnp
out
js
cli
popf
cs
xchg
xor
nop
sahf
add
jb
jnp
xor
test
jae
sbb
aam
push
jnp
dec
sbb
rcrb
cmc
jge
hlt
push
movsl
in
sub
xor
ds
mov
lods
iret
add
cmp
push
hlt
and
stos
and
ljmp
adc
mov
xchg
mov
jns
fimuls
mov
sbb
mov
adc
xchg
sub
cmp
dec
bound
pop
cmpl
sub
out
lods
out
and
fs
dec
ror
les
push
sti
int
lret
inc
lods
jnp
dec
mov
dec
inc
lds
jnp
std
mov
test
rol
adc
sbb
sti
mov
orb
cmc
fs
dec
push
add
aam
in
inc
jbe
xchg
dec
pop
pop
mov
sub
xor
sbb
testb
and
xor
int3
push
push
arpl
push
scas
add
dec
cli
stos
mov
sti
mov
push
rcrb
cmpsb
in
les
jnp
popf
mov
push
sub
dec
jnp
imul
xchg
mov
jnp
loopne
out
jbe
fisubs
repz
aad
push
jnp
add
or
lods
push
icebp
inc
mov
arpl
in
cmpl
test
scas
adc
daa
cld
dec
mov
mov
or
ja
push
loop
pushf
mov
pop
repnz
sbb
mov
ljmp
cld
jbe
iret
outsl
int3
cwtl
lods
aad
ja
inc
dec
xchg
pop
pop
xor
aam
movsb
sbb
or
ss
rolb
std
mulps
jb
out
pop
bound
xchg
mov
add
cmpsb
adc
jbe
sbb
fnstcw
xor
cltd
xchg
sub
cmp
push
hlt
loop
inc
lret
lods
mov
outsb
lock
xor
jp
sbb
cs
jmp
out
int3
or
cwtl
ds
movsb
test
sbb
sar
mov
arpl
dec
fwait
mov
mov
xchg
mov
repz
and
mov
jmp
stos
mov
push
add
mov
jns
cld
into
in
in
xchg
outsl
mov
pusha
or
fcoms
insb
sti
int3
clc
cltd
jnp
cmc
jo
pop
xchg
mov
adc
cmpsl
int
outsl
aad
mov
sbb
adc
add
cmpsb
add
cmpsl
hlt
mov
or
repnz
arpl
pop
push
add
pop
pop
and
lret
mulb
movsl
inc
bound
xchg
mov
pop
loopne
jle
mov
testb
xor
mov
push
and
aam
rcrb
lea
push
shl
or
pop
sub
pop
push
mov
outsl
cmp
mov
inc
fsubl
jnp
and
sub
jnp
rcrb
sub
inc
and
ds
jp
loope
xchg
jl
sahf
add
jnp
mov
push
xlat
push
add
lahf
mov
pop
ja
or
mov
add
push
mov
scas
cld
dec
lret
jnp
js
cmp
mov
aas
cmp
or
iret
std
cmp
ficoms
in
dec
stc
jnp,pn
mov
sub
out
cmp
loop
subb
dec
xchg
xchg
bound
imulb
pop
cs
dec
add
inc
cmp
cld
out
imulb
pop
xchg
cmp
js
jns
pop
int
xchg
mov
jnp
or
jnp
movsl
push
out
sub
adc
jmp
mov
inc
movsl
repnz
xchg
lods
xlat
sub
roll
dec
mov
js
cs
jnp
adc
add
lcall
mov
mov
jns
lcall
dec
lahf
ret
addl
test
mov
xchg
push
sahf
add
test
pop
ja
or
lds
inc
xchg
test
outsl
xor
adc
enter
mov
sbb
or
sti
pop
sub
push
mov
mov
inc
mov
lret
cs
mov
pop
pushf
ss
dec
out
js
sbb
jnp,pt
inc
sub
addr16
xchg
ja
jecxz
outsl
stos
adc
mov
push
in
add
or
aad
call
push
push
lods
aam
lods
pop
inc
push
or
jp
xchg
and
aas
sbb
sysenter
nop
pop
mov
sub
test
xchg
dec
sbb
or
add
jmp
pop
mov
rclb
movsl
gs
inc
push
jns
iret
and
adc
lea
aas
rcll
clc
adc
mov
jnp
add
pop
bnd
cmp
push
adc
inc
cld
lods
pop
sbb
int3
add
test
outsl
popf
subb
push
or
ret
test
cmp
out
xor
test
sub
mov
out
sub
sbb
dec
fs
pushf
xor
jl
or
xor
jmp
outsl
mov
es
lock
dec
and
pop
pop
sub
inc
or
mov
test
test
pop
clc
mov
jns
xchg
stos
lret
push
xchg
addr16
lea
or
nop
inc
mov
add
sahf
mov
mov
mov
iret
inc
mov
jnp
daa
je
fisubs
xchg
lahf
xchg
cmc
jnp
repnz
and
push
fidivrl
mov
pop
cmpl
jnp
jmp
jo
jnp
scas
js
cmp
insl
lea
jmp
repz
subb
push
push
dec
mov
scas
jl
mov
mov
imul
push
cmpsb
daa
out
scas
jl
arpl
sub
jg
in
faddp
pop
cmpb
cmc
test
fdivl
jnp
jne
adc
mov
and
repnz
cmp
lcall
xlat
cmp
outsl
movsl
jmp
cwtl
cmp
aam
jnp
inc
scas
xchg
mov
jnp
push
add
mov
jmp
fs
sbb
das
into
sahf
ja
or
jecxz
mov
dec
je
dec
sbb
data16
jg
add
fs
out
lahf
or
pop
fucomi
mov
mov
or
pop
jl
addr16
push
mov
jl
inc
mov
in
dec
out
jns
and
popa
cs
dec
loopne
lea
mov
scas
iret
inc
test
testb
out
cmp
pop
shr
or
mov
push
cltd
scas
std
jecxz
test
movsl
push
and
pop
add
xorb
push
lods
ja
dec
in
mov
xor
jg
fiadds
ds
flds
cli
daa
inc
mov
stc
jnp
shll
dec
test
dec
lods
mov
jnp
inc
xchg
mov
jnp
loop
dec
mov
scas
mov
inc
jno
add
lea
push
cmc
fimull
jo
popa
jns,pt
push
cs
push
and
pop
mov
movsl
arpl
int
or
jle
and
frstor
sub
mov
jnp
pushf
in
rcr
cmp
insb
jl
mov
pop
sub
add
clc
cmp
pop
inc
lods
or
out
pop
xchg
outsl
pop
sbb
sub
movsl
cmp
jmp
pushf
movsl
jnp
imul
mov
jb
sbbb
fidivl
pop
and
adc
fcoms
or
inc
daa
rolb
out
xchg
test
pushf
and
jbe
outsb
xor
or
stc
mov
jnp
movb
fcomip
out
loopne
rolb
and
fwait
mov
jnp
popa
or
mov
jae
fdivr
mov
scas
sti
mov
cwtl
rcr
ja
ljmp
sbb
push
mov
adc
mov
push
push
icebp
push
add
add
inc
lea
outsl
dec
cltd
lret
dec
movsl
mov
ds
out
sbb
call
insl
mov
mov
sahf
cs
sarl
add
inc
xor
cmp
jp
mov
or
rclb
in
loopne
push
pop
push
arpl
add
mov
push
hlt
out
jns
adc
push
cwtl
test
int
or
cwtl
jge
sub
lea
pop
dec
mov
outsl
lahf
xchg
jge
sarb
jnp
rorl
jnp
push
adc
inc
out
lcall
pop
sbb
insb
jle
fdivl
inc
fdivl
outsl
into
jae
and
dec
lods
or
jmp
int
dec
mov
mov
push
xchg
pop
lods
aaa
ja,pt
mov
cli
inc
xchg
mov
cmp
insb
fsubrs
jmp
mov
ret
stos
mov
daa
insl
fidivs
fs
fwait
rcrb
push
cmpsl
adc
outsl
mov
aam
lods
in
das
push
dec
jp
int
and
and
mov
ja
mov
dec
std
jmp
mov
mov
and
mov
jle
aaa
outsl
mov
jb
xchg
cwtl
cmpsl
or
stos
fstpt
in
ror
push
xchg
mov
pop
jnp
cmc
inc
mov
jmp
add
pop
xchg
cltd
dec
incb
jnp
xor
sar
jle
mov
je
fxch
orl
ret
popf
jb
notb
mov
cmpsb
daa
push
imul
and
out
xlat
sbb
lods
cli
aas
add
fsubl
jl
imul
test
sbb
jbe
clc
push
jb
pop
stos
xlat
add
rolb
sbb
fidivrs
mov
imul
loopne
and
or
or
xchg
jne
mov
dec
or
pushf
pop
incl
mov
adc
add
cmp
jnp
gs
jecxz
pop
mov
sti
push
cld
outsb
push
test
stos
aad
ljmp
jnp
adc
leave
jno
inc
je
test
insl
mov
rclb
xchg
sbb
xchg
rcrl
xchg
cmp
je
dec
pop
shlb
inc
dec
mov
jnp
int
dec
fidivrl
in
jnp
jp
inc
es
das
fnstcw
lock
push
sub
sub
aad
sete
loope
add
pusha
xchg
push
mov
das
fs
dec
dec
movsb
adc
push
push
sbb
mov
or
stos
int3
jnp
lods
mov
push
movl
jecxz
fwait
les
pusha
lds
gs
sbb
mov
mov
sub
xchg
ret
xlat
add
push
or
pop
rcrb
jmp
jnp
cmpsb
mov
fidivrs
pop
pop
xchg
movsb
lea
adc
sub
mov
int
sub
jnp
ds
imul
fdivrl
push
or
jnp
dec
in
clc
xchg
pop
es
rclb
mov
pop
push
jnp
aas
inc
adc
jnp
nop
mov
in
pop
add
dec
movsb
les
cltd
pusha
mov
xchg
cs
jp
sbb
loop
fildll
movsl
ja
push
lahf
sbb
jmp
cmp
std
inc
popa
dec
pop
mov
pusha
or
push
fs
sbb
lock
iret
and
add
shlb
pop
jmp
mov
or
xchg
dec
ss
shll
xchg
push
mov
jae
xchg
ss
mov
xchg
call
push
xor
mov
add
xchg
stc
or
dec
fidivrs
loopne
add
mov
cmp
adc
push
scas
call
jnp
xchg
sub
outsb
inc
xchg
push
sti
sub
and
ret
movsb
leave
cmp
std
mov
add
sub
insl
mov
pop
mov
scas
rorl
repz
andl
mov
pop
ds
jns
sbb
ljmp
jnp
fbld
mov
inc
es
lcall
scas
lods
pop
in
xchg
mov
cmp
fcoms
rorb
in
jo
dec
mov
lret
jae
pushf
std
das
lods
sbb
pop
jl
ja
mov
shl
out
lret
mulb
out
dec
pop
pop
mov
or
pop
or
scas
imul
mov
xchg
pushf
fistps
inc
imul
mov
rclb
xor
cmp
loopne
sti
and
sub
inc
in
bound
stc
cmp
xchg
idivl
adc
je
push
push
cmp
in
das
aam
xchg
cmp
mov
dec
pop
mov
cld
popf
out
xor
fwait
sbb
mov
cltd
mov
cmpsl
adc
dec
sbb
cmc
jnp
mov
fwait
mov
dec
and
sbbb
or
mov
adc
cld
xor
add
cmovp
push
incb
mov
mov
int
stos
inc
js
cmp
aam
add
adc
lahf
mov
push
mov
mov
dec
pop
and
outsl
int3
push
das
jmp
xor
xor
sub
aaa
or
pop
cmp
cwtl
stos
loope
sub
repz
push
cmp
aam
jnp
cmc
out
sub
aas
sbb
adc
inc
dec
movsb
mov
mov
jne
cmpb
xchg
lret
stc
mov
dec
ds
test
push
jmp
or
mov
push
and
xchg
lods
fldcw
mov
cltd
fidivs
cmpsb
lret
sbb
xchg
jmp
movsb
or
in
mov
xchg
add
mov
nop
dec
jnp
dec
mov
fbstp
mov
pop
flds
imul
mov
push
stos
push
or
jge
or
movsl
xchg
sarl
mov
mov
mov
push
jg
shll
sbb
imul
aad
and
pop
mov
xor
mov
inc
stos
push
jns
cli
sub
test
data16
shlb
daa
xchg
jnp
int
mov
adc
or
xchg
aas
cld
push
inc
ret
jnp
out
enter
or
popa
mov
test
and
jnp
test
dec
ret
outsl
loope
cmpb
mov
test
cli
inc
mov
mov
jnp
insl
orl
sbb
rolb
test
push
and
ret
jmp
push
mov
jnp
data16
or
mov
insb
push
push
test
adc
and
les
sahf
test
pop
stos
nop
lret
les
jnp
cmp
jp
addr16
test
pop
lods
in
sbb
jnp
xchg
stos
fisubrl
dec
add
pop
mov
push
or
inc
lret
mov
clc
sahf
pusha
pop
push
pushf
out
lret
pushf
mov
push
mov
pop
mov
xchg
ds
out
fwait
ret
dec
pusha
addl
cltd
ficomps
and
adc
lret
mov
cmpsb
sti
or
pop
inc
test
cmpsb
fisttps
sti
pop
out
negb
shl
cltd
lret
dec
sub
mov
scas
out
inc
clc
test
jnp
fldl
inc
pop
jb
jb
jnp
shrl
int
add
mov
mov
mov
cmpsb
mov
ret
stc
lods
mov
test
mov
jns
ja
dec
ficomps
jge
or
dec
xchg
outsl
aad
and
cld
popa
mov
sbb
and
add
push
fadds
and
shr
ja
xchg
lea
pop
xchg
dec
inc
jnp
mov
shrb
iret
stc
and
add
mov
cs
ror
aas
push
nop
popf
movsl
jecxz
mov
lods
or
fsubrl
pushf
mov
fsubrp
fsubrs
push
ds
jne
std
xchg
xchg
mov
es
add
inc
cmpl
lods
ret
mov
aas
sbb
sub
jno
jge
rclb
pop
daa
in
sbb
mov
mov
rcrb
hlt
outsb
xchg
dec
jnp
adc
or
nop
inc
push
lret
pop
jnp
incl
loop
push
jl
ss
add
add
popa
inc
lahf
lds
jnp
mov
and
ja
pop
mov
inc
pop
addr16
dec
xchg
xchg
jnp
cmp
pop
inc
rcr
push
or
scas
jns
adc
push
cmp
jnp
das
loope
or
insl
dec
ficomps
xor
pop
sbb
and
imul
pop
pop
xchg
addr16
push
mov
push
mov
test
sbb
cltd
pop
jnp
call
mov
jnp
test
movsl
mov
jne
imul
out
jnp
dec
sahf
inc
aad
jae
fstl
push
pop
pop
test
stos
adc
push
jnp,pt
pop
xchg
mov
jnp
or
test
mov
jg
inc
mov
push
jl
and
jnp
xor
pop
inc
lret
ja
js
sahf
fldl
shl
stos
pop
mov
push
mov
nop
std
pop
sahf
pop
test
pusha
je
pop
sub
lret
and
adc
mov
mov
testl
push
pop
outsb
outsl
shrl
adc
mov
or
mov
push
jmp
jnp
xchg
adc
stos
dec
jnp
stos
add
lock
sub
ja
jb
jnp
xchg
lods
rorl
mov
add
and
shrl
push
das
inc
pop
xchg
mov
jns
inc
dec
mov
mov
stc
enter
sbb
sarl
jns
add
cltd
jnp
add
dec
jnp
enter
outsl
scas
inc
addr16
stos
add
dec
cmpl
rclb
push
push
test
shlb
andb
jns
shrl
in
inc
jo
jnp
xchg
scas
fists
add
inc
cs
mov
inc
jnp
stos
cltd
xor
imul
cwtl
scas
jp
adc
shlb
jns
sub
gs
into
or
or
jp
cli
mov
mov
pop
sahf
repz
xchg
test
dec
mov
repz
imul
ljmp
ss
cmp
sub
rcr
add
jp
xchg
or
loopne
jbe
sub
test
jmp
and
push
sub
inc
or
jb
jnp
test
mov
sub
aaa
in
cmc
dec
mov
pop
rcr
adc
sbb
fidivs
faddl
sbb
jnp
cmp
jnp
sahf
sbb
jnp
add
add
jp
mov
jnp
daa
mov
mov
dec
jne
and
xchg
xchg
jnp
ret
mov
clc
insl
outsl
xor
adc
jl
mov
addr16
mov
jnp
mov
xchg
sbb
inc
mov
and
inc
sti
dec
jo
lods
loope
pop
iret
cmp
pop
jns
sub
inc
inc
cmp
push
jmp
call
jno
pusha
les
sub
pop
fmuls
lahf
rorb
or
mov
pop
mov
or
mov
out
xchg
ja
loopne
add
jg
stos
adc
or
mov
jnp
and
scas
pushf
pop
ja
jb
add
shrl
xchg
and
pushf
jnp
aam
mov
loope
add
add
ret
shll
mov
xchg
jnp
fwait
loop
js
xchg
inc
jnp
or
mov
add
jmp
xor
loope
and
sbb
jnp
fs
push
lods
jecxz
adc
pop
test
and
stc
jo
lock
es
nop
movsb
lds
clc
dec
xlat
mov
int3
sub
xor
mov
dec
pusha
sbb
adc
jnp
mov
push
push
jmp
cmp
fimuls
mov
push
lcall
scas
lock
push
cmp
xor
jnp
push
lock
cmp
sub
and
sbb
mov
cmp
lock
es
or
aam
jnp
pop
adc
push
jnp
add
or
mov
xor
sarb
rclb
jnp
pop
icebp
jo
ss
addr16
and
cwtl
test
testl
loop
xchg
test
jge
test
mov
aas
pop
pop
popa
inc
ja
xchg
mov
fwait
test
xor
fisttpll
loop
lea
xor
jnp
aaa
out
cld
dec
mov
mov
xchg
mov
xchg
inc
movsl
jns
push
pusha
test
mov
loopne
sub
xchg
push
pushf
jge
dec
mov
and
cmp
in
shlb
out
int
test
mov
scas
add
pop
sub
dec
pop
xor
xchg
mov
cmp
xchg
bnd
inc
call
xlat
sub
sarl
imul
rcrb
das
int3
in
adc
mov
cwtl
jne
xchg
cmpsl
fnstenv
mov
jnp
dec
stos
sbb
repz
ds
fiadds
cli
fucomp
pusha
dec
jnp,pt
and
pop
mov
push
cmp
inc
popf
add
push
or
jnp
loope
scas
mov
fs
or
in
aaa
mov
push
jns
int3
xchg
or
daa
adc
scas
iret
and
aas
jnp
lea
sbbl
hlt
jnp
imul
dec
loop
push
mov
ja
push
mov
jnp
mov
add
imul
lcall
jmp
fcoms
nop
xor
jnp
jecxz
pushf
lods
loopne
dec
fldt
mov
inc
add
outsl
dec
xchg
sub
test
repz
mov
in
add
daa
push
es
sub
jb
rorb
mov
js
push
pusha
jnp
enter
adc
dec
sbb
call
inc
push
cmpb
dec
mov
pop
cs
inc
dec
pop
in
fs
push
mov
jmp
cmc
jnp
add
sbb
jge,pt
mov
mov
push
lea
mov
stos
shr
sbb
jnp
push
pop
adc
cmpsb
dec
add
movsb
out
int
lds
add
shrb
pop
sti
stc
lods
fistpll
icebp
push
das
lcall
xor
cmp
inc
pop
push
adc
repnz
jle
jae
and
xchg
imul
xchg
cmpsb
push
xchg
cld
lahf
xor
outsl
dec
lock
mov
cmp
or
sub
das
adc
popf
adc
xchg
xor
xor
and
pop
mov
movsb
int3
pop
cmp
adc
adc
orl
leave
scas
xchg
lds
mov
mov
xchg
popf
mov
outsl
and
sbb
setb
jns
out
sbb
dec
inc
orl
or
ds
aaa
add
loopne
pop
dec
xchg
lods
xlat
adc
jnp
stos
leave
pop
in
jne
into
adc
mov
sbbl
ja
pop
dec
fsubrs
or
push
xchg
mov
jnp
inc
pop
pop
leave
mov
mov
ss
mov
out
add
std
stc
push
push
mov
add
adc
xchg
int
and
es
cmp
jbe
push
repz
or
dec
inc
adc
repnz
into
xchg
sub
jnp
jae
addb
jnp
xlat
cmp
pop
rclb
push
mov
loopne
jnp
mov
roll
addr16
das
inc
or
fs
adc
inc
adc
jmp
movsb
jnp
lcall
out
dec
pushf
mov
mov
push
int3
jnp
mov
aas
push
test
add
cwtl
or
dec
gs
mov
jns
xlat
das
cld
xchg
in
mov
movsl
and
add
cs
mov
pop
hlt
lret
scas
dec
adc
xor
pop
test
imul
aad
and
adc
pushf
inc
mov
jnp
sahf
dec
jecxz
mov
jge
loope
lods
fsubrs
fisttpll
inc
jo
rcrb
in
in
mov
jnp
lret
cwtl
stos
fiaddl
mov
andb
es
cmp
loope
nop
movsl
lret
jb
fdivrs
dec
mov
negl
ret
js
mov
sarb
jnp
movsl
mov
into
ja
mov
out
jmp
sbb
in
push
lret
scas
cmc
fcoml
ja
ret
pop
push
xchg
mov
aas
mov
jle
mov
mov
movsb
push
rol
cmp
ret
imul
imul
xor
fisubs
cltd
jae
cmp
and
jnp
sbb
push
movsl
pop
shll
mov
rorl
inc
rcrb
insl
inc
add
les
pop
mov
mov
cltd
daa
orl
test
ljmp
mov
popf
push
fidivrs
nop
sbb
out
dec
shlb
into
push
fildl
arpl
inc
cmp
das
in
loopne
loop
adc
push
addb
inc
jnp
test
adc
nop
cmpsl
mov
addl
xchg
add
pop
clc
jle
pop
ret
cwtl
add
push
mov
jae
fldt
jge
fldl
stc
adc
test
out
out
pop
ljmp
lahf
xchg
fadds
xor
sub
sbb
sbb
pop
nop
push
pop
das
adc
iret
mov
fildll
iret
mov
pusha
inc
push
or
shlb
out
xor
cmpl
mov
dec
jecxz
cwtl
lods
ljmp
ret
pop
hlt
mov
mov
lock
push
gs
add
inc
xchg
test
rorb
push
cmpsb
into
adc
addr16
jnp
lds
mov
mov
daa
in
ror
mov
mov
js
push
push
jnp
cmpsb
pop
push
mov
push
loop
mov
jmp
pop
mov
sub
jnp
lret
adc
jnp
pop
add
mov
xor
in
xor
xchg
cmpsb
jnp
push
std
filds
test
mov
arpl
or
mov
sbbb
pop
popf
sar
in
ret
inc
dec
dec
mov
shll
push
mov
test
ds
stc
sbb
outsb
inc
or
inc
rclb
std
pop
cwtl
sub
cmp
push
mov
jnp
pop
inc
repz
jnp
call
ret
adc
xor
xchg
and
or
insl
xchg
test
pop
les
loopne
in
movsl
fistpl
or
mov
adc
into
fwait
mov
pop
push
add
mov
cmp
inc
cmp
mov
pusha
ds
fstl
cli
sbb
in
dec
push
jnp
mov
or
mov
inc
mov
adc
jnp
and
jmp
cmp
dec
fwait
jl
dec
shlb
popf
leave
enter
push
bound
and
mov
mov
sbb
sarb
jns
mov
dec
addr16
mov
pusha
xchg
ficomps
imul
out
mov
dec
cmc
icebp
or
leave
scas
push
ja
cmp
lcall
movb
mov
stos
push
or
lret
arpl
xchg
pushf
clc
jae
shrb
ja
dec
adc
push
pop
jg
fdivrp
ja
push
bound
arpl
addr16
fimull
inc
outsb
or
ja
mulw
nop
or
loope
outsl
std
repnz
cltd
arpl
arpl
lock
testl
imul
pop
push
push
dec
outsb
test
adc
sbb
stos
iret
adc
ss
xor
mov
jnp
cs
sub
jne
clc
pop
out
jb
jnp
xor
mov
mov
xchg
and
sbb
adc
loop
fcmovbe
sarb
cmpsb
mov
outsb
jnp
bound
push
push
sub
sbb
jnp
in
fstp
aad
lods
jnp
movsl
mov
insl
jnp
gs
pop
pop
pop
push
xor
xor
and
sbb
adc
hlt
lock
call
jnp
mov
lods
test
mov
je
insb
push
push
push
xor
sub
and
sbb
adc
repz
jmp
out
xlat
shll
cmpsl
mov
in
sbb
inc
adc
pop
ss
and
adc
xor
fisubl
popf
neg
ss
jnp
xor
pop
cmc
sbb
fisubrl
jb
jns
push
out
pop
scas
xor
jae
stos
mul
mov
movlps
push
pop
push
pop
lods
xchg
sbb
mov
dec
leave
ss
jle
ret
jnp
push
fwait
scas
je
mov
pusha
jp
das
mov
aad
xchg
enter
mov
lods
mov
push
jnp
insb
xor
jnp
mov
sbb
test
jnp
sbb
push
mov
bound
mov
jnp
pop
test
add
les
addb
fnstenv
add
jo
xor
jecxz
lods
jnp
lcall
outsl
dec
cmp
es
cmp
push
sbb
lds
and
clc
aas
sarb
pop
out
push
sbb
sbb
mov
push
pop
sbb
jo
gs
jle
sub
fisubl
inc
sti
dec
xor
ljmp
in
pop
mov
inc
loopne
insb
pop
jns
daa
shrl
mov
pop
sub
xchg
jnp
xchg
out
movsb
add
std
negl
jnp
insl
nop
adc
pop
das
jnp
fists
mov
fdivl
dec
push
cmpb
cmp
or
jmp
pop
jl
shll
mov
inc
stc
xchg
sti
scas
or
push
xchg
mov
outsl
test
push
add
or
mov
mov
ljmp
mov
mov
cmp
xlat
pusha
mov
mov
movb
or
xor
leave
out
jnp
add
add
jnp
test
aaa
lcall
leave
jge
jmp
adc
or
inc
adc
or
aad
lcall
xchg
push
call
scas
or
negl
imul
nop
jns
jmp
cmp
and
out
fidivs
jnp,pt
out
int3
rcll
pop
add
push
jnp
dec
into
fs
jae
test
out
dec
scas
lcall
xchg
jmp
jnp
lret
aas
scas
pop
mov
dec
sbb
and
add
xchg
add
cmp
xor
xor
mov
pop
outsl
dec
aad
pop
out
sbb
mov
test
adcb
cmp
lret
fldl
ss
jnp
sub
adc
jge
cmp
cwtl
jnp
adc
sbb
xchg
stos
jo
in
in
inc
mov
inc
push
jo
incl
jl
push
sub
ds
inc
inc
jbe
ja
test
fwait
hlt
xlat
jnp
scas
cmp
inc
decb
cmp
aas
leave
jnp
ds
repz
rorb
adc
fnstsw
adcl
aaa
cmpsl
jnp
inc
test
shlb
jnp
ret
or
push
inc
test
mov
xor
stos
mov
sbb
sbb
xlat
jno
sbb
cmp
mov
jne
mov
cld
pop
jno
jnp
fs
jns
sti
popf
imul
dec
lods
pop
pop
arpl
pop
cli
out
mov
mov
push
rcl
jnp
sbb
jns
rolb
jnp
cmp
dec
jnp
and
xor
nop
inc
or
sub
jnp
mov
std
data16
leave
xor
add
add
inc
dec
dec
add
jp
jo
movhps
mov
aaa
add
xlat
popf
lea
inc
mov
pusha
jnp
rcrb
pop
or
add
jnp
test
xchg
adc
cmpl
push
es
mov
mov
mov
inc
add
stos
ficomps
push
fwait
pop
mov
jle
negb
out
lret
mov
jnp
dec
cmpb
lcall
mov
mov
ja
adc
push
cltd
and
cmc
ror
inc
popf
ds
jmp
shr
adc
jne
js
or
mov
movsb
dec
cmpsl
jnp
scas
add
mov
or
int
mov
push
ja
addl
sbb
rcll
add
mov
jns
movsl
enter
sbb
cld
xchg
pop
pop
mov
fs
sub
mov
ja
rclb
in
popa
dec
xchg
loopne
mul
dec
adc
pop
jge
dec
dec
jne
fwait
push
and
in
jns
arpl
push
into
xlat
lods
or
sub
mov
test
lock
test
addr16
insb
and
push
rep
loopne
lods
mov
imul
jnp
mov
mov
jnp
js
mov
or
adc
push
aaa
loopne
cmp
mov
jnp
int
roll
jnp
mov
test
sti
mov
enter
pop
cmpsl
adc
push
jnp
sbb
add
iret
test
push
jo
sar
insl
push
bound
or
orl
out
fistpl
pop
jle
add
out
or
push
cmp
mov
ja
adc
lods
in
inc
jle
jo
fistps
and
mov
in
jmp
add
int3
into
aaa
and
jnp
pop
imul
lcall
xorl
jge
jnp
cmpsl
fbld
cs
pop
rcl
cltd
sbb
cli
pop
popa
jnp
mov
xchg
lcall
call
jnp
add
mov
dec
je
jns
push
lock
fstpt
xchg
daa
out
in
hlt
sub
pop
data16
ja
add
clc
jl
mov
dec
inc
test
cld
adc
test
or
mov
xchg
pop
push
push
outsl
lret
mov
sbb
cltd
dec
jnp
or
lods
add
mov
sti
jle
jp
or
subl
repz
pusha
add
mov
jns
sub
add
inc
mov
in
mov
mov
xchg
add
xchg
jnp
sub
sub
test
push
jnp
add
in
adc
cmp
out
xor
addr16
out
cmpsl
or
cmp
dec
inc
imul
cmpsl
movntps
fildl
or
xorl
fwait
dec
mov
jnp
mov
jle
inc
xchg
out
mov
orl
adc
out
fistl
mov
repz
xchg
popa
add
js
xor
sbb
rorb
jnp
mov
add
or
xchg
jmp
call
lret
sbbb
adc
into
xchg
fimuls
mov
mov
subb
mov
fdivrl
fistl
ja
push
lahf
push
insb
jecxz
add
shr
les
in
jnp
xor
jp
ret
insb
test
mov
lods
xorb
jnp
insl
sbb
inc
cs
ds
cmp
mov
sbb
adc
sbb
jns
xchg
push
sar
imul
lock
inc
jnp
iret
aaa
sub
lea
xlat
int
cmp
jae
lock
mov
sti
bound
aas
add
cli
insl
stos
add
push
stos
xchg
sahf
add
jnp
adc
lret
pop
in
add
jnp
aas
add
mov
mov
xor
mov
xchg
and
mov
repz
lods
scas
mov
ret
lods
jnp
xchg
sbb
fwait
out
jnp
stos
adc
movsb
sbb
into
nop
shl
in
pop
call
fidivrl
mov
scas
or
adc
lock
xchg
subl
mov
int3
xchg
outsl
ja
cmpsl
js
les
jnp
jae
mov
cwtl
mov
and
inc
pushf
jmp
jecxz
std
pop
mov
cmpsb
push
gs
outsb
push
cmc
jnp
out
jle
pop
outsb
mov
or
call
mov
aaa
lcall
cld
pop
jnp
jo
repz
mov
inc
test
movsl
mov
and
ja
mov
and
jge
push
cli
clc
test
mov
mov
pop
lock
outsl
sahf
insb
mov
push
jnp
sbb
sbb
add
addb
jnp
add
cltd
xchg
mov
arpl
cli
mov
loopne
xor
outsl
inc
inc
enter
cmp
adc
jnp
fnstsw
das
cld
mov
jb
idiv
out
or
cmp
call
jnp
test
mov
insl
mov
jno
xchg
fwait
repz
jae
add
data16
dec
outsb
pop
add
shlb
or
je
daa
sub
inc
lret
shlb
jnp
andl
outsl
lods
std
imul
ja
push
shlb
fs
test
pop
daa
xor
dec
sti
or
into
dec
aaa
stos
xor
push
fwait
push
imul
pop
or
jg
negb
imul
lret
movhps
pop
push
pop
ja
shr
insb
and
sbb
ja
jae
ljmp
push
cmp
jo
mov
leave
and
sub
pop
push
cmp
lret
lds
sub
jmp
dec
outsb
mov
pop
jmp
test
xor
mov
inc
ljmp
pop
dec
mov
cmp
lret
add
fcoml
add
mov
cmp
lret
cmp
xor
xchg
adc
cmp
mov
out
mov
sbb
add
aaa
adc
inc
pop
inc
adc
inc
cmp
lds
cmp
mov
out
mov
divb
mov
sub
pop
mov
cli
pop
jbe
repnz
pop
push
lret
gs
mov
xchg
dec
repnz
cmp
jns
xchg
dec
repnz
imul
sbb
jne
repnz
mov
and
or
pop
jmp
lret
sub
pop
push
lret
mov
pop
adc
mov
mov
out
inc
mov
and
cmpb
in
mov
cmp
sbb
dec
pop
adc
push
sbb
pop
int3
fwait
lret
mulb
jne
jp
pop
sub
add
mov
cwtl
ljmp
push
mov
repnz
and
cmp
mov
out
mov
subl
jmp
jb
pop
test
mov
clc
gs
lret
pop
xchg
inc
dec
repnz
mov
and
mov
push
lret
lret
fcoms
inc
pop
addr16
cmp
mov
ljmp
imulb
in
lret
cwtl
ljmp
test
loope
mov
push
and
pop
dec
mov
cmp
lret
mov
cmp
stos
test
test
jb
pop
lods
cmp
lret
out
cmp
mull
mov
lret
sbb
inc
jae
ss
idiv
lea
scas
cmp
lret
aaa
les
enter
pop
out
pop
mov
stos
inc
cmp
daa
adc
fxam
divl
sbb
cmp
mov
out
mov
dec
ljmp
push
cmp
mov
ljmp
pop
pushf
mov
sub
mov
pop
out
repnz
aaa
or
pop
lods
dec
leave
push
cmp
insl
cmp
pop
inc
adc
cmp
mov
ljmp
pop
in
mov
cmp
lret
push
or
xchg
cmpsl
dec
repnz
xor
mov
cwtl
pop
xor
cmp
mov
ljmp
ljmp
mov
notb
jmp
add
pop
sarl
inc
gs
testb
dec
repnz
dec
mov
and
mov
js
aad
leave
in
dec
mov
and
leave
sub
sub
ljmp
cmp
sbb
es
pop
pop
and
lret
mov
or
test
cmp
mov
neg
ljmp
loop
jp
jb
pop
cli
and
sbbb
pop
bnd
jp
sbb
push
push
jmp
lcall
mov
cmp
mov
ljmp
pop
stos
mov
cmp
lret
dec
cmp
test
dec
repnz
outsb
cli
mov
and
ljmp
sbb
gs
or
cmpsb
mov
repnz
mov
lret
sub
pop
push
sub
cli
cmp
hlt
or
ficompl
jb
pop
pop
cmp
lret
jne
cmp
imulb
pop
jbe
repnz
sub
cwtl
pop
sbb
dec
pusha
fsub
data16
push
ret
xchg
cmp
cmp
sbb
push
cmp
fwait
and
movsl
cmp
cmp
adc
inc
cmp
mov
outsb
imul
jmp
stos
inc
sbb
adc
cmp
mov
out
mov
aas
pop
sbb
xor
mov
jmp
cmp
mov
repnz
sbb
cmp
mov
ljmp
sbb
lods
pop
pop
repnz
mov
jb
sub
mov
push
stos
adc
jb
pop
add
mov
test
cmp
lret
mulb
jbe
imul
outsb
jmp
sbb
push
leave
pop
jmp
or
push
adc
cmp
mov
ljmp
pop
sub
cmp
lret
push
cmp
in
pop
jne
repnz
outsb
mov
and
pop
gs
cmp
mov
repnz
ljmp
pop
lret
mov
sub
pop
mov
out
xacquire
mov
and
or
in
lret
pop
or
sub
cmp
mov
ljmp
pop
dec
mov
cmp
lret
or
sti
imulb
push
dec
repnz
mov
and
mov
mov
sbb
push
lret
test
xchg
imul
pop
fcoms
cmp
mov
ljmp
push
adc
mov
cmp
mov
or
cwtl
dec
repnz
pop
mov
and
sub
pop
filds
in
and
pop
cwtl
adc
sub
cmp
fadd
cmp
mov
fcomi
push
xchg
dec
repnz
xor
mov
and
mov
js
cmp
pop
fwait
and
push
inc
pop
cmpsl
adc
pop
cmp
mov
ljmp
aam
mov
lret
cmp
lret
mov
cmp
dec
repnz
outsb
imul
jmp
stos
adc
push
lret
lret
inc
pop
pop
adc
pop
sub
cmp
mov
mov
pop
mov
mov
and
push
insb
lods
cmp
jb
pop
mov
pop
lret
add
lods
pop
xchg
out
repnz
jl
pop
sbb
xor
xlat
cwtl
pop
scas
xor
ljmp
pop
mov
inc
cmp
lret
mov
cmp
dec
repnz
outsb
int3
mov
and
cld
cmp
pop
push
dec
repnz
imulb
sbb
xchg
dec
repnz
outsb
sbb
data16
or
jmp
cmp
pop
jbe
push
xor
pushf
scas
gs
negb
dec
repnz
outsb
dec
mov
cwtl
pop
xchg
xor
cmp
mov
ljmp
pop
cltd
mov
cmp
lret
inc
cmp
jae
ss
fsubl
cmp
ja
mov
cmp
or
push
push
leave
sbb
lods
cld
pop
jmp
pop
pop
or
jae
and
mov
jmp
test
sbb
jb
add
jb
pop
outsl
cmp
lret
out
cmp
or
xchg
pushf
outsb
jns
and
sbb
out
jae
mov
jmp
cmp
fwait
sbb
data16
pop
addr16
testb
dec
repnz
mov
add
idivb
pop
cmp
mov
jmp
leave
pop
pop
mov
mov
cwtl
call
dec
pop
jns
jbe
pop
push
out
mov
mov
sub
cltd
outsb
and
cbtw
pop
push
xor
loop
test
push
pop
cmp
leave
or
xchg
cmp
mov
inc
mov
mov
sub
and
sub
cli
pop
push
dec
repnz
outsb
fnstenv
pop
jmp
jmp
and
test
mov
mov
add
adc
jb
jb
mov
and
sub
cmp
ss
sbb
in
xor
pop
inc
call
or
ss
cmp
fistl
push
leave
lret
imul
and
mov
and
imul
jae
stc
push
cmp
stc
cld
xchg
jge
data16
jl
sub
movsl
jp
push
sbb
dec
mov
lods
xor
sbb
xor
imul
push
imul
jg
jg
mov
dec
imul
ja
mov
fisttpl
xchg
inc
in
fdivrl
pop
stc
hlt
pop
cli
fildl
lcall
dec
jb
es
sarb
dec
push
cmp
dec
pop
stc
jae
sub
jmp
push
ftst
dec
cli
pop
inc
pop
leave
repnz
cmp
popf
cmp
mov
lds
outsb
insb
outsb
mov
mov
push
mov
pop
cli
and
imul
inc
push
dec
in
cli
dec
sbb
mov
push
sub
imul
push
and
push
icebp
or
lret
jbe
test
pop
push
test
sbb
mov
push
xchg
aad
cmp
movsl
in
dec
inc
aad
cltd
pop
xchg
je
ja
data16
das
imul
jns
cli
mov
jp
pop
pop
jp
fwait
nop
jae
ljmp
ss
pop
divl
pushf
cwtl
ja
mov
shrb
cmp
pop
cmp
cltd
sahf
cld
enter
push
pop
int3
mov
push
lcall
pop
jo
leave
je
push
sbb
js
push
cltd
jmp
repnz
fadd
cmp
xchg
repz
add
jne
pop
mov
dec
push
pop
test
pop
push
fsubrl
push
fwait
mov
push
push
sbb
jl
mov
xchg
clc
arpl
stos
fwait
cld
jne
mov
push
sbb
pop
cmp
sbb
jmp
sti
or
pop
lcall
push
mov
ljmp
testb
lcall
in
jne
xor
ljmp
sbb
pop
int3
aam
pop
cmp
bnd
leave
fmuls
ss
fsub
sub
dec
fwait
lret
pop
jmp
aad
push
or
sub
dec
dec
insb
clc
mov
stos
adc
pop
adcl
sub
sbb
jo
sub
mov
xor
or
jl
pop
leave
xchg
jmp
ss
test
mov
dec
push
sub
sbb
stos
cmp
dec
push
lods
xchg
mov
push
mov
mov
sbb
or
jmp
mov
cmp
cli
mov
notl
mov
xchg
push
stc
lods
jne
ss
ja
movsb
jae
repnz
cmp
mov
push
imul
dec
ljmp
pop
sbb
test
push
repnz
fstpl
jl
jne
push
cmp
je
fdivrs
imul
push
lret
pop
stos
enter
insb
out
dec
int3
sub
pop
jmp
lret
test
mov
repnz
ljmp
mov
push
jmp
or
sbb
push
int3
xor
imul
or
push
in
push
stos
fsubrs
rorb
jmp
jmp
lret
test
mov
cmp
cmp
xchg
repnz
push
mov
jne
xor
repnz
stos
cmp
dec
sub
or
xor
repnz
subb
insb
pop
dec
jl
sub
or
jmp
jp
test
je
dec
ljmp
clc
dec
ja
push
jmp
and
jne
fldenv
add
pop
icebp
movsl
mov
sub
out
imul
ja
sub
fwait
pusha
dec
push
mov
mov
jg
fs
test
arpl
sti
jne
jae
imul
cmp
jne
jae
imul
out
cltd
clc
jnp
dec
fstps
jmp
fimull
popa
outsb
pop
cmp
sbb
fcompl
xor
dec
movsl
mov
cmp
or
pop
cmp
dec
and
sarl
jns
mov
push
push
add
jo
dec
inc
or
lret
fwait
and
jnp
psllq
shrl
lods
scas
push
and
test
jp
mov
ficoml
stos
or
xchg
fisubl
stos
hlt
cmp
mov
xor
cmp
call
mov
mov
fnstcw
out
add
mov
mov
mov
mov
xor
pop
xor
mov
add
pop
add
dec
sahf
jl
or
fisttpl
lods
ss
cmp
mov
aas
push
xor
ss
add
fistl
dec
int3
and
sub
lock
xor
pop
insb
dec
sbb
cli
cmp
jbe
mov
push
fnstenv
xor
sbbb
xor
mov
pushf
jp
mov
hlt
ficompl
mov
cmpsb
in
pop
lods
pop
ljmp
rcll
imul
sbb
gs
fsubrs
pop
je
fwait
sbbl
mov
pop
sahf
lods
push
dec
or
scas
xor
push
stos
jmp
iret
nop
xor
shlb
sbb
inc
rcll
fcomi
jmp
push
insl
mov
insb
xor
pop
sub
inc
es
xchg
inc
scas
mov
xchg
shll
and
repnz
cmp
xor
xor
stos
fisttpll
mov
lahf
cld
arpl
outsl
dec
pop
mov
test
jecxz
cli
sti
out
pop
fildl
rolb
int
jb
sub
jp
pop
lock
movsl
cmpsb
call
fwait
inc
sti
sub
flds
sbb
sub
subl
cwtl
jae
sub
testb
push
push
pusha
jle
in
push
imul
pushf
xor
gs
pop
xchg
jns
ja
dec
stos
pop
xor
push
xchg
pushw
add
call
out
jno
loope
jmp
insl
xor
mov
cmp
pop
cmovbe
imul
movsb
les
test
les
inc
test
mov
out
jns
push
in
sbb
xlat
pop
mov
sbb
sbb
ss
xchg
inc
adc
adc
mov
lcall
sub
in
fstpt
cmc
arpl
or
and
xlat
mov
dec
cwtl
push
inc
pushf
mov
fwait
cwtl
xchg
mov
fsts
add
stc
xor
push
sub
sbb
sbb
ficomps
cmpsb
xlat
push
sub
pop
ljmp
hlt
cmp
aam
jp
movsl
add
add
mov
xor
push
in
sbb
or
jge
data16
inc
push
mov
sub
mov
lret
out
insb
sub
and
int
dec
outsb
sub
gs
sbb
mov
mov
mov
ds
dec
add
or
push
arpl
jo
xchg
add
add
idiv
cmp
pop
pop
inc
sub
cmp
jb
jl
addr16
pushf
lods
pop
mov
xor
mov
pop
inc
xlat
inc
or
jo
ja
mov
pushf
pop
jp
fildl
pop
fwait
jg
stos
cmp
in
mov
sbb
mov
sbb
outsl
push
jno
dec
jg
dec
mov
imul
jb
xchg
sub
movsl
dec
or
fdivs
cld
and
dec
push
add
pop
add
inc
cmp
aad
lods
xor
cmp
pop
jl
fs
xor
inc
pop
scas
dec
pop
mov
cmp
sbb
loop
xor
popf
xor
cli
shll
push
pop
ss
in
lods
imul
sub
sub
inc
pop
and
pop
cld
push
mov
xor
arpl
sub
pop
cmp
lret
sbb
sub
jmp
arpl
test
xchg
scas
pop
cmp
jns
fcmovnb
lret
and
or
push
sub
inc
jmp
repz
insb
cmp
push
cld
aam
push
cmc
pop
fnsave
bound
add
stc
add
and
inc
in
mov
pop
lea
dec
subl
sub
pop
jle
ljmp
adc
popf
dec
xor
sub
dec
shrb
xlat
lock
clc
xorl
cwtl
mov
in
jp
mov
mov
inc
lret
imul
aad
xor
dec
pushf
cmc
cmp
fistpl
mov
push
mov
cmpsl
in
rcrb
dec
mov
gs
xor
cmp
xchg
dec
xor
outsl
inc
cmp
arpl
xor
mov
mov
cli
add
jb
loopne
in
xor
mov
xor
ljmp
push
arpl
cmp
and
dec
cmp
push
dec
jl
call
sub
sbb
push
aam
jle
sub
dec
imul
adc
push
cs
pop
mov
push
clc
or
xor
mov
mov
or
fcmovne
xchg
ds
daa
imul
arpl
cmpb
xor
lods
xor
mov
gs
test
or
fcmovnu
sub
loop
xchg
push
inc
fistpl
cmp
dec
insb
ja
pop
int
fldcw
or
imul
sbbb
pop
cli
or
je
or
push
into
mov
sbb
push
add
adc
ds
sbb
xor
push
cli
pushf
push
fmull
cltd
inc
shr
fldt
into
pop
packuswb
lret
xor
or
push
loop
lods
dec
lcall
mov
fsts
jns
jae
jl
lds
loopne
push
cmpl
pop
push
fistpl
pop
xchg
inc
ljmp
repnz
mov
push
lock
adc
imul
test
push
and
ljmp
pop
fadds
cmp
dec
sbb
push
stos
jae
out
mov
pop
aad
int
dec
jp
jmp
inc
or
dec
push
xchg
sub
lahf
adc
xor
ds
ret
in
ud1
mov
test
stos
mov
js
xor
outsl
adc
jmp
stos
jns
mov
ja
insl
ja
inc
mov
cmpl
push
stc
inc
xor
das
sub
addr16
gs
nop
fldt
xor
push
ret
pop
loope
xor
bound
mov
mov
mov
xlat
pop
and
jno
addl
sbb
mov
mov
pop
xor
pop
inc
xchg
inc
fildl
sahf
fiadds
imul
cs
inc
cmp
daa
mov
add
sub
lods
and
lret
mov
jl
sub
jp
test
in
filds
insb
stc
add
sbb
adc
arpl
sti
jne
jae
jnp
jg
fdivl
cmp
and
sub
idivl
ds
cmp
mov
popl
push
mov
inc
push
sbb
loopne
mov
cld
je
sbb
adc
adc
imul
jbe
jb
push
lret
pop
dec
addr16
cmp
aad
mov
jne,pt
push
jb
sti
hlt
inc
in
outsb
int3
add
xor
and
flds
cld
xchg
fimuls
sub
ss
xor
lahf
xor
sar
fnstcw
sti
cmpsb
xor
and
inc
lcall
mov
insb
sbb
or
xor
rorl
mov
dec
mov
jmp
ss
sti
mov
cmp
xchg
push
push
push
sub
pop
imul
and
mov
bound
bound
jns
ja
pop
cmp
bound
rorb
mov
push
cld
cli
push
in
lods
xchg
add
testb
xor
imul
push
sbb
adc
pop
jo
sub
push
sarl
aam
sbb
sub
lea
mov
addr16
and
jnp
stos
cmp
pop
or
out
mov
push
mov
mul
jp
push
pop
cmp
arpl
jp
sbb
mov
xchg
or
inc
mov
jle
mov
mov
stos
sub
hlt
cmp
leave
dec
sub
cmp
cli
clc
jae
orb
out
lret
mov
inc
mov
jmp
mov
pop
pop
cmp
cmp
pop
int
mov
and
and
cs
dec
cmp
cmp
lds
stos
arpl
xchg
dec
mov
bound
sar
jae
sub
push
cmp
ljmp
insl
insb
sbb
jp
add
dec
out
popf
mov
loopne
leave
insb
or
jmp
adc
pop
or
dec
repz
pop
or
ds
cmp
fninit
inc
inc
or
jae
dec
test
xor
pop
imul
pop
enter
xorb
push
jmp
mov
mov
sub
repnz
clc
arpl
dec
sbb
dec
inc
xchg
and
inc
sub
lcall
lahf
dec
into
sahf
mov
stc
lret
pop
push
add
fldt
mov
jl
xchg
and
xor
shll
xor
sbb
push
and
xlat
sbb
rcrl
dec
cmp
fsub
cmp
push
lcall
sbb
stc
mov
pmaddwd
sub
sub
xlat
scas
mov
mov
dec
push
and
ret
push
ja
icebp
and
loop
push
cmp
loopne
addr16
iret
arpl
and
fmulp
loop
gs
jmp
jmp
addr16
das
inc
and
dec
cmpsb
push
pop
fstpt
mov
scas
mov
sub
jle
pushf
xor
xchg
jl
push
ret
fcmovne
int
into
sub
jg
sub
push
fcmovnbe
push
mov
jnp
in
adc
mov
sbb
sub
sbb
cmp
sbb
insb
push
cmp
int3
jg
fdiv
jmp
sbb
lret
gs
mov
and
and
cvtps2pd
int
pop
int3
adc
mov
pop
ds
xor
sti
fnstcw
leave
fisubrs
cmp
movsb
jns
pop
fistl
and
imul
insb
push
fsub
add
sbb
sub
xlat
scas
sub
repz
sbb
sub
ficompl
dec
negl
inc
sub
sbb
jmp
pop
popa
sbb
clc
jmp
cmp
xchg
sti
dec
adc
push
cmp
lods
or
cli
mov
push
sti
daa
xor
or
jo
mov
mull
hlt
imul
xor
push
test
mov
clc
mov
imul
fstps
push
sub
dec
je
cmp
int3
and
cmp
fsts
mov
jg
jbe
jb
repz
or
rclb
jae
xor
es
jbe
push
add
add
dec
lock
pusha
arpl
enter
movsl
pop
and
cmp
sub
je,pn
test
jmp
push
jb
push
fstl
jae
or
mov
fldl
xor
lcall
pushf
xor
pop
jne
repnz
lods
cmpsl
dec
loop
or
xor
xor
ja
cli
rorb
adc
jmp
jp
fnstcw
rorb
je
fildl
out
movsb
mov
movsl
mov
xor
insb
jp
arpl
stc
dec
xor
push
sub
int3
int3
xchg
dec
pop
fcmovne
fcomps
imul
cmpsl
test
test
dec
push
mov
jl
insb
and
js
into
fidivrs
dec
rcrb
loop
test
ljmp
stos
jo
xor
sti
add
xchg
jle
xlat
sbb
ret
popf
xchg
sub
idivb
movsl
fs
and
inc
push
mov
scas
repnz
test
push
repz
insl
test
ja
adc
or
aas
aas
fldcw
adc
movsl
cmp
mov
test
ja
mov
mov
mov
pop
cmp
sbb
sub
adc
cmp
lock
int3
aaa
test
pop
je
push
clc
pop
call
mov
cmp
xchg
mov
push
sbb
push
rcr
or
iret
or
cmp
dec
jp
insb
jne
jae
imul
sbb
xchg
jp
cmp
leave
cmp
inc
fstpt
pop
xor
sbb
stc
sbb
mov
loop
fimuls
sub
cmp
add
stos
sti
rorl
pop
inc
mov
shll
dec
push
enter
pop
int
push
pop
fldcw
negb
jmp
repnz
imul
cmp
mov
imul
inc
jae
sub
int3
sbb
cmp
pop
mov
sbb
jmp
jbe
movsl
arpl
and
jns
faddl
gs
fcomi
jmp
fs
fsubrl
sbb
mov
test
mov
sti
dec
ss
scas
cmp
push
xor
push
and
dec
idivb
int3
cmc
pop
mov
push
cmp
les
movsl
pop
nop
jecxz
lfs
add
add
xchg
adc
adc
fstpl
or
out
subb
jb
out
int3
add
insl
imul
or
rclb
outsb
lret
jb
sbb
ja
sub
mov
push
fcmovnbe
cmpsl
inc
fcmovbe
xor
sbb
cli
insb
jmp
imulb
lea
sub
and
dec
syscall
icebp
mov
xor
cmpsb
and
and
mov
pop
cmp
in
into
xor
xor
flds
sbb
xor
sarl
dec
pop
xor
pop
cmp
outsb
xor
imul
mov
or
and
cmp
mov
or
pop
sti
lret
sub
cmp
repnz
mov
pushf
xor
dec
ficoml
mov
dec
outsl
pop
jmp
pop
xchg
lods
lahf
ljmp
notb
and
dec
mov
movsb
mov
mov
cmp
and
outsb
sbb
insb
cltd
popf
pop
test
pop
insb
add
dec
xchg
push
sbb
and
inc
scas
aas
imul
inc
pushf
xor
sub
das
loope
fstpl
outsb
xlat
pop
sti
aaa
mov
fs
inc
pop
idivb
cwtl
div
popa
cmp
jl
push
mov
or
add
stos
push
fcom
fbld
dec
and
js
mov
insb
sub
sbb
sarl
or
mov
xchg
jecxz
stos
out
dec
outsl
add
mov
scas
cmp
jne
cmp
aam
cmp
bound
fdivrl
dec
xor
push
cmp
mov
movsb
mov
jns
out
jns
cmp
pop
mov
test
loopne,pt
outsb
js
imul
imul
push
stos
bound
fisttpl
dec
and
add
push
inc
div
ds
cmp
addr16
outsb
mov
mov
pop
jmp
mov
lcall
fmul
dec
pop
mov
mov
push
push
mov
pop
sbb
cmpsl
lcall
pop
add
fpatan
leave
and
mov
mov
add
iret
idiv
mov
push
idivb
pop
ljmp
sub
fmull
pop
jmp
les
mov
sbb
out
sbb
rcrl
jb
mov
les
in
jb
add
das
loopne
loop
push
je
sub
lret
ljmp
pop
ljmp
dec
or
mov
cli
rcrl
ss
aam
cli
sub
fcompl
jmp
shrb
inc
imul
hlt
cli
cmpsb
push
mov
jp
lock
sbb
pusha
or
loopne
mov
sbb
cltd
push
cmp
lret
cli
dec
aaa
or
out
cli
test
lcall
idivb
pop
or
ss
out
or
bound
fsubrl
cmp
loopne
jo
mov
dec
pusha
mov
or
lret
lret
or
popf
fistpl
stos
xchg
fstpt
push
lret
mov
or
rcrl
ljmp
insl
je
jp
pusha
pop
imul
imulb
xor
arpl
cli
inc
pop
cli
add
or
imul
or
ss
imul
sbb
test
inc
test
pop
cs
pop
pusha
sbb
mov
cmp
pop
cmp
sarl
cmp
fidivrl
xor
cmpsb
push
rcrl
cmp
dec
gs
add
popa
mov
sti
nop
imul
jns
imul
mov
jl
cltd
incb
lock
imul
sbb
nop
pop
imul
pop
add
pop
mov
sbb
hlt
mov
mov
ss
out
mov
negb
gs
or
and
jb
mov
mov
stos
mov
bound
clc
mov
adc
imull
jno
bound
jg
bound
cs
pusha
testb
mov
mov
inc
mov
mov
and
notl
sub
fcompl
hlt
cltd
cmpsb
cmp
pop
jmp
insb
pop
sbb
cmp
sub
sti
loopne
aaa
cltd
adc
or
cmp
mov
jl
push
and
aas
and
pop
or
pop
jmp
test
push
sbb
push
push
cltd
sub
adc
mov
aam
test
test
clc
cmp
ret
sub
jno
ss
es
mov
test
xchg
cmp
pushf
xchg
jp
xor
and
pop
pop
mov
dec
subl
cmp
test
mov
ret
testb
jl
fcompl
imul
dec
xor
daa
ss
outsb
mov
cmp
fistl
ss
pushf
push
pop
pushf
aaa
mov
cmp
mov
into
cmp
xchg
fstpt
inc
jns
es
nop
pop
lods
mov
pushf
subl
mov
and
sub
fwait
mov
shl
mov
fwait
lcall
jmp
jmp
push
mov
fcompl
es
in
xor
sub
mov
push
pop
int
pop
repnz
xorb
jno,pt
imul
in
gs
lret
jmp
mov
aaa
sub
enter
xchg
mov
pop
ds
cmpsb
push
rcrl
ss
aam
leave
sub
mov
push
pop
into
pop
fidivl
pop
or
es
leave
cmpsb
push
mov
dec
cltd
in
pop
jno
data16
movl
and
addr16
dec
cltd
cmp
cmp
lret
leave
dec
das
cmpsl
cmpb
aaa
xchg
insb
imul
cmp
mov
addr16
addr16
addr16
addr16
push
cmp
mov
out
jae
ret
fs
jb
hlt
mov
outsb
cltd
mov
push
pop
pop
imul
mov
xor
cltd
cltd
mov
jns
pop
bound
jl
xchg
addr16
cmp
mov
mov
cmp
icebp
fldcw
mov
imulb
subl
mov
jmp
mov
leave
cltd
or
fistl
xchg
pusha
push
shr
fnstcw
jmp
and
pop
js
jae
mov
stos
or
sbb
cmpb
fnstenv
pop
cmp
cmp
outsl
adc
dec
xchg
pop
mov
fistpl
outsl
daa
outsl
aam
outsl
sub
fsubrl
lret
mov
sbb
push
lcall
fsubrl
dec
cmp
jg
pop
jmp
pop
pop
test
push
filds
mov
aaa
in
push
out
pusha
imulb
jmp
test
leave
pop
ss
xchg
pop
pop
or
popa
idivb
icebp
sbb
mov
clc
imul
imul
mov
pop
xchg
fidivl
pop
and
fstps
outsb
imul
sub
jno
pop
sub
or
repnz
gs
imul
subb
lret
stos
mov
jmp
imul
sub
cmp
imul
imul
imul
pop
mov
outsb
imul
cmp
imul
inc
pop
fiaddl
bnd
cli
pushf
dec
outsb
mov
aas
lcall
test
mov
pop
adc
cli
mov
mov
je
in
ss
cltd
dec
sub
sub
cmp
mov
mov
gs
fnstcw
dec
xor
add
xchg
mov
fcmovnb
xchg
pop
sahf
test
xchg
add
push
sub
negb
jmp
movsl
jmp
mov
jmp
addr16
sbb
push
rcrl
ss
aam
dec
sub
mov
push
pop
xchg
shrl
pop
es
cltd
pusha
pop
imul
imul
outsb
mov
roll
mov
sti
movsb
xchg
sub
mov
pop
clc
xor
or
imul
negb
and
cmp
daa
ss
aam
pop
sub
fcompl
cmp
push
pop
scas
rcrl
or
pop
in
mov
jmp
shrl
xchg
cmp
pushf
leave
in
pop
ret
inc
add
clc
js
cli
xlat
sahf
sbb
jle
je
stos
cmp
pop
dec
aaa
sti
dec
xchg
out
pop
test
jmp
cmp
xchg
or
and
cmp
addr16
addr16
addr16
addr16
addr16
push
mov
lret
jns
lahf
bound
mov
testb
repz
repz
mov
sarl
pop
ret
pop
sbb
xchg
sti
pop
pop
pop
loop
pop
cmp
cmp
dec
enter
lcall
insb
lcall
insb
lcall
dec
mov
in
ja
fstpt
negl
gs
fstps
pop
sarl
add
cli
data16
fisubs
pop
push
pop
inc
imul
push
xchg
hlt
lcall
repz
cmpsl
inc
fbstp
icebp
pusha
add
imul
imul
imul
imul
imul
pop
pushf
dec
insb
add
ja
insb
out
js
pop
lods
gs
fnstcw
outsb
imul
push
or
inc
jno
mov
pusha
mov
sarl
insb
lods
lret
jmp
hlt
cmp
mov
fmull
xchg
call
dec
aam
dec
sub
fmull
xor
popl
in
pop
ss
or
pop
lret
jb
popl
dec
shrl
xchg
cmp
pushf
cmp
pop
or
add
and
fs
imul
gs
lret
dec
or
jg
sub
sub
es
lods
icebp
enter
sti
call
sub
or
addr16
cmpsb
xor
divb
das
into
fildll
sub
xchg
pop
test
and
sub
inc
data16
inc
jmp
outsl
gs
shrl
mov
mov
cmp
cmp
insb
loope
jmp
aas
repnz
es
push
sub
fsubrs
dec
ss
cmp
adc
push
cmp
mov
adc
imulb
xchg
push
add
mov
dec
cmp
sub
sbb
or
jmp
aam
rorl
fistl
or
sub
shll
stos
push
shl
dec
jmp
dec
enter
jmp
jae
sti
stos
bound
jmp
or
mov
pop
inc
dec
shll
xchg
dec
negb
xchg
imul
scas
dec
iret
cmp
fistps
jmp
sarl
sub
in
es
and
cmc
sbb
sti
jae
cmpsb
int3
out
cmpsl
cmp
iret
pop
ja
insb
ja
repz
push
mov
mov
leave
repnz
add
fcomps
out
insb
ja
data16
and
test
sbb
jp
and
fneni(8087
xchg
jbe
inc
sbb
push
popf
pmaxsw
cld
dec
scas
mov
stc
call
xchg
pop
mov
fimull
xor
sbb
repnz
mov
mov
jle
outsl
es
loopne
jno
push
dec
icebp
inc
sti
add
mov
std
test
lahf
jmp
jb
and
jmp
sub
outsb
hlt
outsl
sub
popa
cwtl
sbb
lods
roll
pop
subl
jg
mov
inc
push
sarb
cwtl
imul
mov
loopne
pushf
adc
in
xlat
cs
cmp
lods
bound
jno
sbb
int3
sub
inc
in
out
lret
dec
fsubl
subb
lret
xchg
mov
shrl
pop
dec
imul
pop
add
rclb
push
push
push
mov
mov
push
xchg
hlt
inc
or
sbb
stos
mov
cmp
and
dec
add
negl
fsubrl
jb
sbbl
sahf
jge
or
sar
jbe
fdivl
dec
cmp
jg
outsb
outsl
xchg
outsl
ds
lods
outsl
jle
cmp
test
sbb
sbb
imul
clc
push
ds
pop
mov
cld
pop
xor
scas
or
xchg
sbb
cmp
bound
sbb
xchg
push
mov
mov
out
xchg
jno
into
push
xchg
imul
sbb
imul
mov
pop
or
bound
jp
inc
pop
jecxz
out
jp
repz
add
pop
jb
push
xor
fildl
inc
pusha
mov
or
xchg
mov
jp
outsb
push
imul
out
dec
imulb
push
dec
pop
adc
pusha
imulb
addr16
addr16
addr16
subl
mov
jp
pushl
mov
cltd
stos
addr16
xor
or
push
jb
mov
pop
sbb
pusha
popl
dec
cmp
ss
lret
mov
xor
cmp
push
xchg
cmpsl
inc
lods
jae
sbbl
and
repz
addr16
repz
addr16
jmp
mov
or
ret
sub
std
cmp
fcompl
dec
pop
mov
lret
sub
insb
cmpb
inc
ss
std
pop
aaa
and
jl
mov
negb
jmp
addr16
jge
mov
shll
mov
hlt
les
fsubs
cmpsb
push
rcrl
xchg
jo
pop
outsb
clc
pop
dec
imul
xchg
and
imul
arpl
cmp
cld
ljmp
cli
cwtl
mov
pushf
out
xor
cmp
cmp
xor
int3
int
pushf
pop
icebp
fwait
xchg
sub
inc
test
pop
xchg
cmp
arpl
sub
repz
repz
fildll
sbb
stos
xchg
test
mov
push
jb
ss
cmp
arpl
lret
xchg
fcmovne
jb
repz
scas
js
cltd
and
sbb
xor
fnstsw
push
and
shll
gs
jmp
fcompl
and
push
pusha
out
cmp
out
adc
cmp
push
rorl
pop
add
mov
cmp
pop
cmp
cmp
mov
addr16
dec
sahf
les
jno
loop
icebp
lock
imul
arpl
pop
mov
pop
cmp
pusha
cltd
ds
cmp
sbb
pusha
hlt
dec
cmpsb
push
rcrl
ss
aam
dec
sub
mov
push
pop
mov
mov
or
adc
cmpsb
push
mov
imul
xchg
jno
out
pusha
sbb
ret
insb
inc
cmp
dec
push
cmp
int3
jge
dec
rcrl
mov
roll
idiv
add
js
push
out
mov
bound
mov
hlt
mov
pushf
cltd
fxch
jns
imul
lods
fsubrl
mov
test
shlb
cmp
out
mov
pop
jmp
std
aaa
mov
hlt
lods
sahf
adc
cltd
fs
daa
andb
cmp
xor
add
clc
fidivrl
and
ret
aas
or
cmp
fdivr
dec
ss
testb
dec
insb
adc
jb
cmp
or
jge
scas
test
imul
imul
pop
sbb
hlt
fcompl
stos
bound
fcmovnu
dec
and
add
add
sti
or
rcrl
ss
out
or
bound
fdivrl
adc
jae
fistpl
push
pop
dec
aaa
or
hlt
pop
push
cmp
mov
idivl
popa
icebp
xor
jae
xchg
mov
cmp
cmp
arpl
or
xchg
xchg
or
dec
and
jns
inc
sub
scas
sti
mov
daa
xchg
fsubl
xor
jge
mov
mov
fisttpl
adc
push
negb
xchg
fwait
cltd
xchg
dec
cmp
cmp
xchg
testl
cmpsl
pop
sbb
mov
inc
cmp
pop
xchg
imul
jge
pop
rcrl
leave
roll
pusha
and
mov
dec
sub
fmull
xor
cmpsb
cmp
repz
push
jnp
test
ss
dec
adc
stc
push
cmp
mov
or
ja
jle
shl
jb
repnz
xchg
mov
fprem
cmp
dec
xchg
cld
dec
xchg
xchg
dec
fs
dec
and
sbb
sti
in
xchg
and
bound
sub
xor
cmpsb
push
rcrl
jb
lahf
sub
ja
push
pop
cmp
sub
hlt
dec
push
cmp
mov
rep
into
xchg
out
shrl
inc
je
dec
aas
pusha
cmp
mov
push
cmp
idivb
sub
pop
jl
jmp
repz
mov
dec
fimull
xor
cmpsb
push
rcrl
cmp
jp
repz
jnp
fisttpl
mov
sub
mov
push
sub
adc
sub
lock
mov
mov
jp
inc
pop
or
ficoms
sbb
sbb
pop
mov
add
lds
lret
imul
ss
push
imul
ficoml
xchg
cmp
xchg
fucomi
jb
repz
dec
pop
lahf
add
aad
xchg
mov
jg
mov
fisubl
mov
pop
lds
sbb
sbb
xchg
xchg
pusha
mov
es
pusha
idivb
andl
pop
fwait
jp
pop
xchg
jp
jmp
mov
sbb
test
lahf
sbb
sub
fwait
cmp
push
push
fdivr
mov
lcall
mov
mov
mov
sbb
int
sub
aaa
jp
cmpsb
jmp
sarl
or
negl
mov
cmp
addr16
mov
cmp
pop
imul
push
jnp
fcmovne
rcll
notl
es
mov
pushf
repz
fstpt
push
inc
repnz
imul
addr16
jmp
fisttpl
sahf
sbb
pop
mov
add
fisubl
rcrl
ss
movsl
pop
fwait
mov
xchg
push
pop
hlt
arpl
push
push
imul
xchg
ss
xchg
hlt
arpl
repz
or
push
pop
jge
adc
xchg
sbb
popf
bound
mov
arpl
testb
cmp
iret
sub
and
fldenv
xchg
mov
clc
arpl
or
or
pop
xor
fs
pop
inc
pop
xchg
fwait
sbb
popf
pop
and
fisubs
popa
mov
std
mov
rorb
adc
or
xchg
mov
test
pop
sbb
mov
lcall
nop
in
aad
int
ljmp
rclb
push
mov
das
lret
cwtl
repz
es
mov
movsl
ljmp
pop
sub
and
mov
and
and
mov
sub
inc
test
sahf
mov
nop
jmp
jb
pop
scas
pop
or
mov
inc
and
mov
adc
fsts
pop
jbe
mov
jp
addb
or
ds
jo
push
sub
ja
xchg
mov
jns
negb
mov
sbb
inc
sbb
jns
lcall
jmp
xchg
repz
or
sbb
or
adc
adc
pop
adc
enter
xor
xor
repz
daa
sub
inc
or
popf
popa
aad
test
inc
outsb
ds
pop
das
mov
das
cmp
mov
and
sub
inc
ret
ljmp
xchg
or
test
test
mov
imul
jl
lret
daa
notl
enter
pop
push
jns
and
jo
mov
jmp
adc
sahf
sbb
cmpsl
sbb
jo
sbb
inc
out
push
add
mov
mov
jne
cmp
repnz
or
cmp
hlt
mov
fwait
bnd
ds
xor
mov
shl
sub
and
insl
sti
je
add
fsubr
notb
mov
test
xor
sub
cmpsl
sbbl
push
jno
pop
xchg
dec
jl
jg
imul
cmp
push
sbb
adc
test
test
enter
xor
test
ja
sbb
xchg
test
lret
cmpsl
gs
ja
mulb
pop
paddq
hlt
pop
jle
addr16
inc
popf
ss
mov
or
enter
repnz
mov
test
jp
popa
jne
sub
cmp
sti
xchg
lock
pop
imul
inc
sbb
pusha
lock
pop
test
jmp
cmp
dec
jge
sbb
imul
das
fnclex
push
dec
sub
pop
and
adcl
jmp
data16
fdivl
or
dec
mov
scas
aam
cmpsl
scas
dec
xor
dec
test
cmp
mov
pop
mov
inc
cmpsb
cltd
xchg
hlt
ss
sti
or
mov
xchg
ret
lret
mov
je
cmp
cmp
aad
xor
frstpm(287
fldl
sti
xlat
cmc
je
xchg
fwait
push
mov
inc
pushf
test
xor
push
ljmp
popf
in
sbb
mov
rorb
pop
jne
lcall
insb
jmp
xor
sub
pop
ja
imul
test
cmp
jo
sub
jno
fxch
rorb
sti
fldt
mov
loop
or
push
xor
and
ds
loopne
ds
rcl
loope
lods
pop
fistpl
rcrb
outsl
or
rcrl
cmp
enter
je
fcmovbe
fsubl
sub
fistpll
cmpsb
pop
xchg
hlt
sub
jb
cli
jb
and
imul
adc
push
insl
es
jno
mov
nop
and
in
in
pusha
enter
jmp
adc
jbe
jp
cmpsb
jns
fwait
xchg
xchg
or
mov
sbb
scas
push
lret
in
sahf
repz
jmp
ret
cmpsb
or
outsl
loope
clc
ret
mov
xchg
addr16
mov
xor
dec
shrb
add
add
adc
minps
cmc
pop
sbb
jns,pt
add
sub
ss
cmp
dec
outsl
popf
mov
mov
pushf
sar
mov
addr16
sub
dec
fstps
pop
jge
imul
sub
xor
cmp
add
ret
pop
push
lock
inc
push
sbb
or
mov
cs
dec
xchg
hlt
jp
test
push
sbb
fstps
jle
sub
or
imul
jae
fists
iret
pop
cmp
sbb
cmp
fdivrs
int
mov
pop
addr16
fwait
adcl
into
xor
scas
or
in
mov
fimuls
inc
sbb
pop
jae
fistl
in
imull
jae
xor
xor
mov
dec
cmp
loop
push
cmp
and
in
push
xor
jp
ds
lahf
pop
xorl
call
jo
pop
inc
gs
sub
mov
je
in
mov
int
loop
ljmp
fcmove
sbb
into
movsb
js
xchg
pop
js
jb
mov
mov
xor
xlat
or
test
ja
insb
test
testl
mov
pusha
mov
daa
ss
pushf
sub
aad
mov
cs
xchg
jo
add
cld
push
mov
mov
out
mov
call
add
aad
dec
cmc
inc
or
rclb
insb
sti
cmp
out
popa
hlt
das
dec
std
lcall
cmp
mov
stc
loop
jae
fcmovne
xchg
inc
adcb
fcompl
or
cs
andb
jae
xor
pop
cmp
add
lock
inc
lock
insl
adc
movsl
shlb
cmpl
dec
sbb
js
sub
sub
loop
mov
mov
and
sub
mov
test
lods
fmull
stos
or
loop,pt
in
push
daa
cltd
enter
ja
dec
mov
adc
cmpsl
mov
xlat
pop
sarl
sbb
outsb
push
sub
in
sbb
mov
je
arpl
sbb
jb,pt
je
mov
mov
insb
jmp
add
cli
jge
or
dec
in
pop
or
cli
repz
cmp
jns
shll
out
stc
mov
push
pushf
stc
arpl
loope
sbb
es
mov
inc
add
sub
adc
push
inc
sti
shr
hlt
cmp
add
test
sahf
jae
and
dec
cmp
jns
jno
xlat
lds
push
jno
shll
insl
mov
pop
push
sbb
clc
test
mov
jmp
xchg
ja
and
cmc
sub
inc
mov
mov
cmp
adc
fldt
test
cmp
dec
push
rcl
xor
pop
cmp
ljmp
mov
call
icebp
add
out
xchg
mov
and
sub
mov
sbb
sub
ss
xchg
inc
insl
mov
push
fdivs
rorb
cmp
ss
lret
xchg
sbb
adc
jae
pop
pusha
ds
inc
cmp
pop
pop
jo
lods
cmp
and
mov
push
fisttpl
xorb
pop
pop
sti
push
or
jae
jnp
imul
aam
adcl
xlat
push
das
int
int3
sub
and
mov
fiaddl
pop
out
sbb
movsb
test
dec
hlt
lock
daa
cmc
add
cmp
sahf
xchg
int
mov
sub
mov
fidivrl
dec
ret
mov
subb
mov
and
repnz
ds
ss
pusha
shlb
imul
fmull
fstl
divb
scas
lea
data16
jae
jo
push
and
enter
imul
xchg
sub
sahf
loopne
je
xor
push
xchg
imul
mov
out
pop
imul
sub
mov
jmp
roll
shrb
imul
sbb
mov
cld
xchg
inc
scas
xor
insl
pop
jmp
pusha
popa
aaa
pop
and
xchg
test
jl
push
outsl
adc
addr16
mov
mov
sbb
lods
repz
jb
dec
dec
hlt
popf
cmp
imul
jns
addr16
faddl
sub
dec
add
pop
pop
roll
pop
sbb
jmp
aaa
dec
push
cli
mov
cmp
icebp
sti
or
push
test
aaa
jno
stos
inc
data16
lret
fcompl
into
loop
dec
xchg
icebp
sti
fstps
mov
lea
xchg
std
fsubrl
cmpb
stos
in
sti
loope
inc
dec
rcrb
add
adc
imul
pop
or
mov
jo
icebp
and
and
lret
mov
and
dec
mov
dec
stos
sub
mov
inc
mov
stos
cltd
rcrb
and
loopne
xor
and
jecxz
loope
or
ja
je
fstps
xor
movsl
aam
jne
cmpsb
es
je
pop
int
sbb
and
jb
jge
xor
push
sbb
movsl
mov
gs
and
inc
mov
and
mov
xorl
lret
sub
xor
je
and
lcall
pushf
rolb
adc
repnz
out
insb
mov
or
stc
pop
push
fmul
cmpb
les
cmpsl
cmp
adc
sbb
mov
negl
popf
add
mov
mov
jae
or
addr16
popa
or
sub
sub
jmp
jbe
movsl
repz
pop
ljmp
lods
xor
enter
push
aam
imul
fwait
addr16
iret
jmp
xor
pop
shrd
dec
stos
jmp
add
cmp
fstps
aad
xor
repz
mov
iret
rolb
ljmp
je
push
sti
frstor
push
xchg
add
daa
data16
sub
lods
lods
pop
jb
negb
cmp
xchg
cmp
push
cwtl
pop
jmp
cli
sub
es
icebp
pop
mov
andl
xor
dec
stos
inc
push
dec
push
push
xchg
pop
mov
or
pop
setno
sub
stos
pop
xchg
daa
test
add
push
mov
rcl
sub
jge
rorb
outsl
or
sbb
jnp
test
stc
pop
mov
lods
add
xchg
pop
mov
dec
jne
jae
imul
imul
push
mov
scas
mov
sbb
dec
fisubl
orl
push
sbb
xor
jmp
loope
mov
loop
sbb
adc
fsts
sbb
sbb
jno
shll
pop
movsl
imul
cltd
inc
sbb
pop
cmp
test
mov
jmp
lds
aaa
outsb
cmc
fstps
sub
gs
inc
push
or
jae
push
pop
pusha
xchg
clc
insb
shlb
inc
iret
xchg
pop
pop
jge
lcall
cmpsl
push
lcall
inc
push
xor
andb
sub
add
int
pop
mov
push
jno
mov
pop
xor
insb
mov
out
in
scas
outsl
pop
ss
das
psubsw
in
das
pop
cmp
jecxz
cmp
cli
jg
xchg
enter
xorl
adc
lods
cmp
pop
jp
cli
icebp
adcb
jne
imul
fcoms
ja
in
pop
aam
repnz
imul
push
ffree
jmp
faddl
stc
popf
scas
lcall
cmp
test
inc
cmp
cmc
stc
in
add
mov
xchg
rcll
pop
aaa
xor
cmp
cli
ljmp
repz
ds
xchg
jp
bound
cltd
outsb
addr16
stos
cmpsl
ljmp
lret
cmp
push
shlb
cmp
or
xchg
repz
sbb
fldt
fwait
addr16
mov
mov
ret
ja
mov
testb
repz
addb
out
jbe
cmp
push
sbb
add
mov
dec
mov
cmp
aaa
or
mov
mov
push
xor
add
dec
pop
stc
xchg
cmp
ss
cmp
testb
icebp
pop
xchg
jbe
fidivrs
cmp
clc
add
imul
pop
sub
mov
fistl
dec
fnsave
rcll
adc
dec
push
lea
std
dec
inc
jbe
lret
sub
jne
xor
sti
mov
fldt
pop
jb
jmp
mov
or
pop
push
rcrb
je
fistpll
xchg
dec
push
mov
test
lret
pop
pop
push
or
testb
sbb
jge
dec
nop
xchg
gs
and
add
lret
jbe
sahf
pop
cmp
fsubs
int3
fidivl
lret
dec
gs
out
cmp
xchg
cli
dec
pop
or
inc
pop
add
clc
repz
jecxz
xchg
inc
lock
pop
sbb
cli
pop
cmp
xchg
mov
xchg
xor
pop
insb
adc
jne
ljmp
fnsave
sub
in
cmp
imul
dec
jmp
mov
push
ljmp
stos
sbbl
mov
push
lods
dec
in
popa
outsb
sub
imul
mov
push
stos
dec
ljmp
mov
pop
pop
mov
or
std
lea
mov
mov
negl
iret
sbb
mov
sub
out
stos
popf
cwtl
ret
mov
mov
jge
lock
insl
pusha
fucomi
lock
in
sbb
sub
sub
imul
test
and
and
or
or
xchg
fnsave
sub
mov
sub
push
lret
test
jae
push
pop
movsb
push
or
jb
imul
movsb
mov
inc
andl
jb
or
add
or
movl
insb
gs
stos
sub
adcl
popf
shl
lahf
sbb
push
stos
jg
clc
mov
sub
lea
out
stos
add
jnp
sub
xchg
lods
movsl
or
shl
scas
xor
es
jmp
adc
mov
and
and
jno
aad
aas
popf
xor
pop
outsl
rcll
dec
sbb
push
sub
addr16
dec
push
imul
xchg
dec
sub
inc
push
test
cmpsl
movsb
jg
int3
cmc
sub
fildl
mov
mov
testb
pop
repz
jmp
gs
inc
jg
sbb
jno
addl
mov
xor
or
imul
fldcw
dec
stos
xchg
fs
lret
lds
and
or
cld
in
sub
push
ret
loop
mov
mov
loop
mov
andb
stos
jmp
xor
mov
imulb
out
cltd
mov
pushf
repnz
add
push
pop
pop
inc
cmp
je
cmp
imulb
or
out
inc
out
lea
loop
rep
mov
fdivl
fwait
xchg
fwait
xchg
cs
push
aaa
imul
or
push
insl
adc
sbb
out
lcall
lret
jmp
in
push
jl
push
into
idivb
push
or
imul
xor
jae
dec
fs
dec
test
cmpl
stos
cwtl
mov
and
popa
imulb
push
sub
jb
ljmp
test
push
cli
in
add
out
xor
xor
push
jnp
pop
fcmovne
es
adc
pop
out
imul
push
mov
into
jmp
bound
out
stos
imul
ljmp
pop
push
fcmovnb
popf
je
sub
adc
mov
test
push
push
gs
cs
mov
cwtl
adc
mov
push
xchg
out
fldt
xor
jno
mov
movsb
mov
ss
lret
jnp
jg
gs
and
push
add
leave
lods
call
mov
push
mov
jbe
lcall
push
sbb
leave
pop
pop
sub
jmp
ja
xchg
mov
dec
ret
fisttpl
mov
ret
insb
dec
mov
pop
push
divb
cmp
inc
dec
cmp
test
ds
ss
fisttpll
cld
gs
imul
jno
aad
jl
insl
inc
shll
insb
pop
pop
test
mov
xor
sbb
pop
fistl
fcoml
repnz
cmp
adc
popa
gs
sub
sub
aaa
xor
sbb
imul
repnz
imul
jmp
imul
fldt
cs
insb
enter
xchg
jae
addb
rcl
inc
cmp
mov
and
mov
rcrl
push
sbb
nop
sbb
push
sub
bound
imul
mov
addr16
jno
or
pop
jne
insb
jg
sub
in
lods
ljmp
std
out
jp
fld
jle
pop
or
cmp
xchg
mov
jae
or
mov
hlt
dec
jb
jl
cltd
dec
xor
push
and
mov
mov
ss
loop
mov
dec
add
insb
pop
lret
sub
popl
jge
mov
cmc
sub
sti
pop
cmp
stc
bound
lcall
aaa
pop
cmpsl
xchg
or
cmp
cld
bound
lcall
out
lret
fwait
ljmp
and
sahf
and
rep
in
push
sub
mov
repz
sbb
dec
loope
popa
ds
shll
sub
cmp
pushf
cmp
enter
icebp
adc
and
xchg
shlb
js
push
pop
dec
ds
or
loop
jmp
cmp
test
and
pop
xchg
jae
iret
mov
push
add
xchg
inc
lahf
loop
std
and
imul
add
aaa
sbb
rorl
popf
insb
cmp
imul
add
inc
jno
xchg
idivb
adc
pop
and
cmp
outsb
add
inc
adc
cs
pop
xor
cmp
mov
jae
fneni(8087
lahf
push
push
lods
sti
fcmovnu
scas
mov
fucomi
xor
or
insb
ret
dec
pop
mov
pop
sarl
xchg
and
out
cmp
xor
cmp
cmpsb
enter
xor
notl
aaa
adc
subl
sbb
or
cmp
cs
lods
cmp
rorb
xor
sarl
mov
xlat
pop
je
cmp
lret
fisttpl
jb
es
rcl
imul
in
scas
in
lret
mov
or
sti
add
out
adc
cmc
in
lods
adc
mov
notl
int
mov
outsl
ja
and
movsb
inc
sti
daa
ds
adc
xchg
gs
inc
dec
out
adc
jl
fisttpl
xor
out
pop
pop
es
xor
es
movsb
inc
add
decl
leave
jne
popf
dec
test
add
mov
sub
jp
adc
loop
jbe
mov
push
mov
pop
stc
addr16
jae
ret
int3
cmp
lods
lret
iret
pop
lods
sbb
sub
push
dec
sbb
sbb
insb
jmp
es
add
jmp
pushf
cmp
leave
addr16
test
pop
sbb
adc
inc
push
and
xor
nop
mov
bound
lret
fidivrl
iret
pop
push
mov
imul
lret
and
and
arpl
sarb
sti
and
daa
jns
cmp
ljmp
fcoml
xchg
outsl
add
lahf
out
popf
and
cmp
sti
and
dec
cld
cs
and
inc
dec
hlt
push
push
adc
fwait
sti
pop
mov
enter
lahf
movsb
and
or
mov
xchg
pop
cmp
pop
push
dec
insb
jne
js
je
or
mov
xor
push
sub
pop
dec
iret
or
ss
mulb
arpl
pop
test
sti
jae
mov
popf
cli
les
fdivl
dec
rorl
cld
fistl
das
mov
and
int3
dec
hlt
and
push
out
cs
cmp
fisubl
out
imul
sbb
pushf
mov
divl
mov
inc
aad
jp
mov
sub
sti
sbb
cmpsb
lock
shrb
pop
mov
jmp
mov
pop
mov
adc
pop
or
ja
cmp
jp
lods
sarl
jp
or
arpl
sbbl
or
ficoml
and
and
in
push
test
inc
and
sub
jmp
sbb
call
mov
lret
sub
lahf
cmp
mov
movsl
into
dec
dec
divb
lret
faddl
insb
ss
push
idivb
inc
stc
fimuls
and
shlb
fldcw
pop
xchg
sbb
mov
push
jns
sbbb
jno
outsl
jne
mov
cmc
aad
dec
out
in
pop
mov
mov
out
cmp
ficoml
lahf
adc
bound
sbb
push
fistpl
mov
lcall
andl
jg
fisttpl
jle
adc
shll
dec
xor
cmc
fcmovnu
or
cmp
mov
xor
cli
cs
test
mov
xchg
les
js
jle
mov
sub
out
addr16
sub
stc
mov
out
xchg
std
scas
ss
sub
fnstsw
std
imul
sub
pop
pop
lahf
femms
ret
sub
imul
and
sbb
pop
mov
enter
sub
pushf
add
sub
push
and
adc
push
stos
pop
sub
and
mov
jmp
xchg
adc
int3
push
imul
rcrb
jno
sub
cld
xor
repz
in
jmp
hlt
push
jb
xchg
jecxz
push
into
hlt
loope
gs
sbb
push
cmc
mov
dec
dec
jmp
or
test
jbe
sbb
call
data16
int
jmp
rcll
cmp
cmp
push
jge
sbb
popf
push
das
xor
pop
test
movq
xchg
adc
and
data16
jno
dec
lahf
push
loope
push
sarb
jecxz
xlat
xor
das
jb
sub
cmpsb
sub
xorb
pop
addr16
scas
sub
add
push
shlb
adc
js
outsb
add
jle
out
push
repnz
cs
jns
sarb
jae
cmc
sub
xor
add
dec
repnz
and
mov
mov
pop
sub
cmp
cld
pusha
icebp
push
sti
xchg
imul
sbb
cwtl
push
je
test
add
sub
out
jb
call
inc
and
outsb
jl
int
jno
out
shl
ret
cmp
mov
outsb
das
idivb
dec
mov
lret
dec
sub
das
jmp
xor
push
xorb
aam
xchg
inc
pop
out
cmp
inc
imul
pop
inc
lcall
xchg
jne
pop
or
jb
fstpt
cmp
push
push
xlat
pop
dec
cmp
add
scas
mov
pop
pop
rep
jns
mov
loopne,pn
cmp
sub
movsl
test
outsl
sbb
fnsave
or
cmp
hlt
jb
push
test
and
cltd
je
xor
test
mov
daa
hlt
outsb
pop
sub
jg
out
jecxz
cli
arpl
lods
xor
mov
mov
fnstcw
ja
fistl
into
inc
js
loopne
mov
sub
adc
mov
jecxz
or
push
inc
or
jmp
push
mov
out
mov
imul
dec
das
cmp
nop
leave
jb
das
inc
pushl
add
mov
fcmovne
loope
cmp
sbb
jno
neg
cmp
cli
fucomp
hlt
jle
lea
and
sarl
sbb
mov
lret
imul
out
in
mov
push
ss
loopne
daa
fidivl
mov
xlat
jp
filds
push
test
pushf
pop
fdivs
xor
das
lea
mov
push
cltd
fcoml
sbb
and
incb
jl
pop
push
mov
xchg
and
orb
in
popa
outsb
fcompl
inc
cmp
cmp
repnz
lods
mov
cmp
imul
sbb
add
lods
push
pop
mov
jp
cmp
out
mov
dec
lods
adc
pusha
das
pop
push
xchg
addr16
loopne
nop
out
data16
mov
test
out
insb
cmp
xchg
jmp
push
pop
lcall
aaa
add
mov
adc
xor
loopne
and
shll
jmp
ss
push
adc
sub
sbb
insl
lds
cmp
subl
data16
dec
pop
inc
fnstenv
js
inc
loopne
inc
adc
mov
dec
imul
pop
add
dec
dec
inc
imul
pop
xchg
or
movsl
lret
mov
inc
pop
xor
add
adc
addr16
dec
jo
dec
ficomps
dec
cmp
xchg
pop
jb
roll
push
jmp
push
and
movsb
jo
imul
push
push
loope
shrl
push
std
popf
or
test
mov
ficompl
cs
push
xchg
loop
mov
test
cmpsb
jecxz
mov
push
xchg
push
cmp
push
gs
divl
iret
and
push
shlb
cli
cmpb
mov
addr16
fcmovnb
dec
aas
cmpsl
cmp
ja
sti
xor
pop
dec
and
or
xchg
shll
jae
xlat
pop
add
inc
jmp
hlt
mov
dec
mov
jge
mov
cmp
jno
pop
sub
scas
int
das
cs
mov
and
pop
jmp
mov
flds
mov
faddl
repz
mov
push
xchg
push
jno
xchg
aad
mov
xor
ret
inc
shr
sbb
pusha
rorb
shrl
or
jge
cmc
cmp
addr16
test
je
and
repz
arpl
sub
mov
jnp
ret
add
popf
je
and
repz
arpl
jnp
dec
aaa
push
mov
lock
cmp
std
out
sub
mov
arpl
jge
movsl
enter
inc
cmp
push
test
into
cs
addr16
sub
iret
lret
fldt
lock
push
lret
imul
fcoms
cmp
jns
cmp
mov
das
jmp
int3
loope
inc
repz
cltd
daa
mov
insb
sbb
lods
cmp
addr16
stos
add
xor
xor
mov
aam
sub
xor
sub
pop
insb
or
jmpw
dec
pop
fwait
and
sbb
bound
push
add
push
test
lods
xchg
adc
push
subb
xor
fstps
jae
in
rcll
inc
mov
shlb
xchg
xchg
shll
sti
sbb
cmp
les
push
jb
push
add
shll
inc
adc
lret
fsub
mov
jns,pt
or
mov
lock
in
xchg
stc
sahf
add
inc
mov
repnz
test
loopne
imul
dec
int3
in
mov
aad
negb
ds
sub
cmp
gs
shll
mov
fdivrl
cmp
sub
rorb
aam
cmp
out
lods
fsubl
sti
jae
mov
bound
sub
daa
pop
inc
xchg
push
imul
xchg
push
xor
inc
inc
rclb
and
fdivrl
gs
dec
or
call
leave
mov
addr16
mov
push
sub
movb
jb
add
and
test
mov
out
aam
js
xchg
or
pop
lods
cld
jle
div
add
ss
add
je
aad
and
addr16
and
add
push
or
sti
sahf
gs
push
jle
push
mov
js
inc
roll
imul
rol
mov
pop
pop
test
ds
stc
xor
xor
lret
sub
push
xlat
sub
push
cmp
or
xor
sub
mov
aaa
pop
dec
aam
addb
es
pop
sbb
add
xor
pop
dec
inc
loopne
mov
push
push
mov
js
lea
and
movsl
insb
mov
imul
cvtdq2ps
sti
or
inc
gs
clc
fwait
mov
fcmovnu
lcall
dec
aaa
imul
pop
add
cmpsl
xchg
pop
ja
repz
cmpsl
inc
xlat
clc
adc
fs
adc
sbb
xlat
mov
adc
sbb
cmp
jge
pop
addr16
cmp
loopne
insb
test
pop
adc
pop
mov
pop
sahf
jmp
dec
adc
mov
repz
out
sub
ljmp
inc
mov
lods
rcrb
fwait
cmp
push
push
mov
imul
xchg
data16
mov
push
push
adc
push
daa
mov
xlat
cmpsl
push
fisubrs
pop
adc
push
movsl
pop
loopne
test
pop
jp
jge
or
pop
cmp
cmc
je
lods
cmp
out
shrl
pushl
cmp
ss
xchg
testb
pop
psllq
inc
sahf
mov
out
xorl
stc
push
pop
jo
out
subl
outsb
cs
mov
push
jg
in
mov
inc
fimuls
in
xor
mov
xchg
pop
mov
push
pop
xchg
jp
mov
jbe
sbb
sbb
inc
cmp
aam
fdivrs
imul
sbb
pushf
add
mov
sbb
add
sti
sbb
xchg
sub
les
daa
fnsave
test
aaa
sub
and
sub
pop
mov
aas
pop
pop
sub
xchg
lahf
sbbl
je
pop
jmp
xchg
ret
icebp
repnz
xor
add
or
out
jb
popf
dec
cmp
mov
out
aaa
mov
sub
jb
shll
cmpl
pop
add
sub
adc
mov
cmpsb
push
rorl
mov
push
fidivl
push
jo
mov
cmc
jne
sbb
push
ret
enter
or
sub
arpl
or
xor
push
dec
cmp
stos
cmp
shl
hlt
pop
outsl
dec
in
sub
mov
jae
mov
xchg
and
jg
jne
xchg
cmp
rclb
lea
aas
hlt
mov
int3
aaa
fnstcw
repz
pop
sti
push
add
int3
lods
das
push
lock
xchg
or
insb
fldt
nop
cmp
dec
fs
lock
gs
jg
push
imul
insl
fistl
and
pop
push
jge
and
pop
int3
adc
xor
mov
pop
sub
test
js
into
mov
jge
lea
dec
cmp
mov
int3
mov
sub
ror
xor
dec
mov
imul
dec
in
fwait
in
dec
addr16
ss
adc
adc
fstpt
sbbl
xor
and
fidivrs
out
cmp
imul
add
jle
jg
mov
rolb
and
push
in
leave
jb
addr16
ret
cmpsb
sub
rorl
arpl
and
inc
popa
jbe
add
loope
push
cmpsl
int3
mov
hlt
je
sti
imul
pop
sbb
imul
xor
ret
cmpsb
movsl
jge
lods
xor
mov
ret
cmp
cld
ds
jp
xlat
aad
dec
adc
fsubrl
cmp
cli
pop
into
mov
stc
sahf
mov
pop
ds
dec
arpl
test
into
clc
in
mov
mov
es
cwtl
addr16
hlt
and
pop
push
test
cmc
neg
in
flds
jne
pop
scas
xor
aam
mov
clc
sub
adc
pop
mov
fldt
inc
gs
jmp
in
pop
inc
cmp
pop
add
sti
dec
ret
fdiv
sbb
jp
xor
or
clc
pop
outsl
cs
lods
popa
cmp
and
sub
stos
push
push
iret
repnz
testb
pop
stos
repnz
push
gs
std
push
push
cs
push
mov
inc
fcoml
cli
jns
je
sti
lret
sub
repz
dec
xchg
cli
pop
mov
outsb
cld
sbb
dec
stc
and
inc
pop
pop
fdivl
and
sub
dec
filds
out
lock
cld
add
jp
xor
adc
push
and
lods
mov
pop
cmp
cmp
pop
cmpl
daa
repz
js
popf
mov
fdivrp
mov
mov
adc
inc
leave
es
push
pusha
addr16
xchg
outsl
je
sbb
cmp
and
push
and
jae
inc
jns
fwait
repnz
imul
lods
xor
test
and
dec
xchg
sub
dec
sbb
add
mov
push
xchg
dec
jmp
arpl
ss
data16
stc
stc
and
push
adc
or
jge
fldt
or
and
push
push
mov
das
xor
fnsave
xor
test
insl
cmp
xchg
aad
push
loopne
std
cmpb
push
push
mov
xor
and
rcrl
sarb
rcrl
stos
int3
test
fwait
aad
icebp
out
xlat
sbb
xor
add
mov
fstps
shr
les
mov
xor
add
mov
add
mov
add
call
sbb
adc
insl
inc
inc
jno
inc
mov
jae
push
pop
jmp
xchg
std
dec
mov
pop
stos
call
mov
repz
in
sub
jmp
pop
cmp
jo
sub
fcompl
push
mov
cmp
xchg
inc
imul
adc
hlt
jle
push
dec
std
imul
lahf
clc
or
and
insb
and
pop
push
push
xchg
loop
pop
gs
push
or
outsb
sbbb
in
cli
dec
xlat
mov
insl
fwait
ja
ret
lret
addb
clc
lahf
fldl
mov
test
mov
cmp
daa
or
push
in
nop
xchg
std
xor
inc
xor
fiaddl
in
imulb
sbb
sub
jo
sub
loopne
pop
mov
sub
xchg
aad
mov
mov
or
pop
or
lods
in
xchg
dec
cmp
adc
mov
jo
inc
movsb
test
add
sub
aad
dec
sbb
dec
insl
fs
or
stc
and
mov
pop
dec
jns
scas
and
out
outsb
push
ja
sub
xor
iret
cmp
addr16
roll
imul
pushf
sbb
pop
inc
fisttpll
jle
jns
xor
std
out
add
out
push
inc
cmp
mov
cmp
cli
or
jae
pop
push
sbb
add
popf
fs
sbbl
mov
mov
fcmovnbe
pop
xchg
outsl
xor
add
sti
cli
sub
imul
sti
fcmovnu
xchg
adc
es
leave
int
xor
jge
popa
xlat
sahf
add
shrb
sbb
movsl
or
mov
lcall
stos
in
dec
pushf
lcall
lock
pop
sub
mov
test
cld
xchg
dec
push
mov
push
and
mov
call
pop
ret
popf
insb
mov
cmp
xchg
loopne
lods
notl
xchg
fistpll
mov
ret
jns
testb
jl
mov
lcall
enter
rorb
fwait
enter
out
test
dec
inc
movsb
aam
and
cld
pop
and
mov
pop
arpl
inc
jbe
data16
and
inc
xchg
fwait
xchg
call
jb
ds
push
xchg
jg
dec
add
sbb
cmp
dec
jp
aas
mov
dec
cli
mov
cld
xor
push
sub
cs
mov
rcll
pop
pop
cmp
aam
pop
mov
jns
mov
sbb
js
lods
out
sbb
sub
dec
mov
fisttpl
pop
std
fwait
mov
jg
or
cmp
jno
add
mov
popf
je
sbb
jmp
rcrl
xor
add
negb
mov
movsl
or
lds
pusha
mov
movsl
mov
xor
insb
fildl
mov
imul
or
popf
xchg
out
ficoml
in
jmp
rcrl
or
push
in
cmp
shll
or
add
sub
lret
fsubl
xchg
test
repz
sahf
xchg
mov
into
aas
fisubrs
push
mov
cmc
dec
mov
pushf
cmp
mov
shlb
stos
inc
dec
xor
add
out
daa
mov
rolb
stc
pop
stc
adc
mov
gs
addl
mov
dec
push
adc
sub
stos
add
cmp
dec
and
lret
mov
xchg
jo
push
xor
pop
fwait
xor
sub
and
xor
cli
out
fld
stc
scas
sub
xchg
ror
cmpb
sbb
mov
pop
ret
pop
addl
test
mov
int
test
test
lock
fimull
aam
add
sbb
sbb
lds
sub
mov
fwait
shrl
rclb
fs
dec
and
xchg
lret
imul
pop
jg
fldt
popl
mov
ds
pusha
pop
push
dec
push
push
test
mov
mov
out
sbb
mov
lock
fcomp
std
jae
jg
or
clc
mov
push
inc
cmp
mov
or
mov
int3
push
out
dec
mov
sbb
and
adc
add
pop
add
adc
xchg
shrb
mov
push
push
inc
mov
aad
ljmp
std
dec
lds
idivb
mulb
jmp
inc
sub
jg
push
push
shl
push
fmull
jne
ret
jmp
fwait
das
dec
lcall
lcall
cltd
sub
jae
sahf
loopne
repz
movsl
sub
xor
mov
and
jl
mov
rorl
imul
or
xchg
sbb
xor
xchg
dec
mov
or
push
imul
xorl
xor
shll
ret
mov
clc
add
mov
mov
negb
pop
in
add
lret
sbbb
rcrl
sub
adc
leave
xchg
xorl
ds
sub
pop
cmp
inc
jno
pop
idivb
push
fucomi
add
mov
xor
pop
push
sti
xchg
dec
jae
inc
mov
sbb
imul
inc
cmp
hlt
test
leave
sbb
push
push
pop
xchg
push
test
test
jecxz
je
lret
push
mov
sbb
sbbb
or
ret
pop
push
adc
out
test
jge
add
cld
fdivp
mov
fwait
sbb
add
repnz
icebp
mov
add
js
sbb
in
cli
or
pop
fwait
cmp
test
adc
roll
negb
lahf
jge
sbb
pop
les
sbb
mov
out
mov
pop
cld
shl
sub
stos
jge
dec
ret
dec
xor
js
xchg
xor
cltd
or
mov
and
pop
cmpb
insb
cld
jecxz
out
out
adc
or
or
movsb
sub
push
icebp
adc
popf
icebp
and
icebp
pop
push
mov
sub
mov
test
leave
sarb
xchg
push
iret
ds
xchg
jb
lret
add
lret
test
iret
ficomps
js
sarb
add
xchg
sbb
xchg
test
add
ds
mov
stos
push
and
sub
insb
gs
inc
cltd
popf
jmp
nop
repnz
mov
jno
jmp
xorl
mov
stos
jns
icebp
mov
jge
mov
out
js
out
add
idiv
lcall
cmpsb
pop
cs
jge
sbb
pop
in
popa
mov
or
mov
inc
xor
or
xchg
gs
mov
cmp
push
stc
fildl
notb
sti
sbb
andl
xchg
cmpsb
push
jp
fisttpl
sub
test
add
and
mov
inc
sub
repnz
and
imul
jg
adc
pop
sbb
iret
cmp
xchg
jae
sbb
fbld
pop
cmp
imul
adcl
jb
cmp
or
testl
paddd
dec
cmp
sbb
jb
cmp
sub
lds
push
nop
hlt
cli
push
rcrb
adc
pop
cs
pop
cmpsl
pop
sub
push
mov
pusha
aaa
pop
pop
cli
mov
sbb
imul
mov
push
in
mov
or
popf
rorl
and
jmp
push
jo
sub
add
xchg
add
pop
pop
dec
jge
cltd
dec
mov
sahf
mov
xchg
loope
idivb
enter
sub
sbb
fstpl
data16
mov
mov
in
sti
xchg
scas
je
mov
lods
push
or
sub
cmp
out
sarb
jb
fistpl
push
pop
push
pop
cmp
insb
push
stc
sub
inc
and
mov
jge
sti
dec
mov
arpl
icebp
pop
ja
xchg
and
pop
jmp
hlt
jmp
movsl
imul
add
pop
xchg
and
xchg
es
mov
shlb
fwait
jmp
das
out
shlb
jg
js,pn
sub
aam
inc
ret
imul
adc
xlat
popf
add
out
inc
xchg
pop
stos
push
mov
mov
imul
pop
ljmp
je
cmp
push
jge
mov
sarl
push
iret
ss
dec
sahf
dec
call
xor
xor
pop
stc
jb
push
mov
lods
sub
insb
ljmp
ss
xchg
ds
out
push
jg
sti
scas
and
out
jae
setg
fsubrl
cwtl
jle
pushf
gs
adc
lock
adc
dec
setnp
jge
inc
pop
insb
mov
cmpsb
mov
gs
inc
sub
and
cs
mov
movsl
dec
sahf
lret
test
pop
inc
sub
xor
aam
das
dec
les
xchg
xchg
out
leave
xor
ja
inc
jg
shlb
dec
movsl
movsb
inc
pop
lcall
cmpsl
push
fwait
mov
ss
jge
pop
add
repnz
mov
insb
loopne
push
xor
add
dec
push
add
test
sbb
sub
lock
dec
das
mov
mov
inc
fldt
fcomps
pop
jne
pop
xlat
clc
dec
and
or
xor
xor
or
subl
insb
mov
loope
jno
pop
add
cmp
int3
imul
outsb
dec
pop
imul
sbb
push
adcl
ja
mov
or
push
adc
sbb
xchg
daa
cli
jne
xlat
mov
or
cld
xor
cmpsl
dec
or
imul
addr16
inc
jae
mov
and
add
sahf
add
push
sbb
fmul
repz
mov
lcall
jecxz
cmp
jl
aaa
daa
and
mov
inc
fdivrl
lods
push
sti
je
or
cld
xor
or
arpl
fisttpl
icebp
add
cli
push
sbb
xor
dec
lods
inc
push
repz
cmpl
jne
stos
push
gs
sub
aam
arpl
shrb
inc
decb
in
jmp
rcrb
mov
in
lahf
pop
mov
mov
sbb
ficompl
rcrl
jp
lods
add
sub
inc
jbe,pn
test
sub
fisubrl
in
adc
sub
and
sbb
test
out
and
dec
std
cmp
dec
rcrl
sbb
jb
jbe
filds
push
test
pop
cli
mov
bound
gs
xchg
xor
adc
jns
popf
lret
jnp
repz
test
mov
xchg
cmp
cld
ljmp
sbb
jae
imul
arpl
cltd
xchg
push
pop
dec
fldl2t
push
shrb
aas
push
idivb
out
fs
stos
gs
rcrb
dec
hlt
xor
mulb
iret
mov
pop
cmp
outsl
sub
inc
push
push
jg
stc
cmpsl
inc
fdivs
out
add
shll
sub
xlat
cmp
mov
mov
push
mov
mov
sti
roll
jge
out
mov
imul
sub
cmp
lahf
push
sbb
mov
pop
lock
xchg
test
pop
jle
icebp
pop
into
sbb
mov
insb
insb
in
mov
insl
mov
pop
xchg
dec
sub
push
mov
test
jmp
jb,pn
pop
faddl
ja
scas
push
dec
and
dec
lahf
pop
mov
cmp
pop
mov
xchg
push
push
imul
pop
dec
xor
fisttpl
xchg
dec
rcrb
cmp
mov
sub
xor
pop
outsl
cmp
sub
jne
jle
mov
aas
sbb
testl
mov
fucomi
xchg
adc
pop
sub
sbb
test
and
sub
mov
mov
jb
dec
jmp
dec
rcrl
imul
rol
in
pop
cwtl
rorb
adc
mov
push
movb
jg,pn
xchg
ja
cmpsl
sahf
and
adc
or
dec
nop
fildl
stos
xchg
mov
enter
popf
pop
add
lcall
mov
xor
out
jge
fiaddl
les
sub
aad
dec
mov
jns
push
fildl
in
pop
pop
push
dec
xchg
inc
pop
add
xchg
sbb
push
xorb
in
push
cld
rorb
jb
arpl
pop
pop
arpl
sbb
mov
xchg
negb
lcall
daa
pop
sbb
pop
insb
clc
imul
xchg
mov
in
in
and
jne
xlat
xor
xchg
sub
outsl
push
mov
jb
adc
pop
cmpsb
insb
pop
jbe
pop
gs
out
popl
dec
and
sbb
pop
mov
popf
cld
sbb
and
mov
jns
shr
test
repnz
imul
bound
push
js
mov
jle
jmp
fcomps
pop
inc
sub
xchg
or
sub
rorb
aad
jmp
insb
adc
ret
shrl
mov
or
push
repnz
inc
dec
ror
rclb
es
pop
fsubr
call
sub
imul
lock
pop
popf
arpl
xor
test
sub
and
sbb
inc
sub
add
jmp
js
mov
pop
cmp
pop
test
dec
push
xchg
sub
mov
and
cmc
sub
pop
sub
jle
pop
cmp
cmp
xchg
in
jl
pop
push
mov
jnp
stos
rorl
ret
cmp
cld
push
sti
add
rcll
into
mulb
ret
dec
jno
xchg
arpl
test
and
jge
push
add
sbb
inc
and
dec
in
fcmove
pop
pushf
test
add
notl
and
add
xor
ljmp
les
mov
or
push
cld
stos
adcb
and
addr16
push
pop
sub
pop
inc
fimuls
icebp
dec
ss
jge
shll
xor
sbbb
mov
cmpsb
arpl
and
pop
jbe
adc
or
imul
gs
dec
pop
test
subb
or
jecxz
jb
cwtl
in
ret
and
cmp
notl
xchg
jmp
outsl
mov
mov
cmp
std
adc
or
add
sub
sbb
cmp
imul
sti
imul
inc
cmp
add
inc
in
sbb
jb
add
xchg
sbb
mov
xlat
imul
sub
loopne
pop
int3
sbb
push
idivb
out
and
xchg
es
outsl
mov
aaa
repnz
int3
mov
xchg
adcb
insb
movsb
pop
push
xlat
lock
push
call
loop
jb
adcb
push
out
pusha
lcall
sti
ja
xlat
mov
lods
test
pop
jb
adc
or
sti
gs
movsl
lods
leave
fs
xor
ficomps
clc
or
int3
fisubl
xlat
push
test
sahf
fildl
mov
fwait
stos
rol
push
or
and
xor
and
and
les
cmp
jp
je
loop
fiaddl
dec
xor
cs
cs
mov
out
xor
lret
pushf
gs
andb
pop
call
pop
adc
sub
or
fisubs
pop
fcomip
imul
and
loopne
cs
push
cmp
xchg
mov
scas
xor
mov
dec
ds
xchg
sub
jge
arpl
ror
std
xor
mov
mov
cmpb
dec
sub
int3
int
or
fiadds
adc
gs
push
gs
pushf
pop
int
sti
fldt
push
daa
iret
and
das
and
jo
roll
sbb
mov
cmpsb
push
movsl
das
cwtl
loop
iret
adc
je
outsl
data16
and
add
std
jl
sub
inc
pushf
fdivrl
add
pop
testb
or
jae
or
add
cs
hlt
out
adc
lock
gs
call
pop
les
push
push
inc
inc
aam
mov
mov
sbb
xor
push
inc
jns
cmp
jae
testb
inc
sbb
mov
push
ds
cmpsb
mov
test
lods
jmp
out
scas
jnp
addr16
or
pop
test
jns
mov
pop
or
and
movsb
cltd
bound
cs
and
sbb
data16
jb
hlt
sti
lcall
outsb
int
mov
int
scas
xlat
pop
dec
jbe
jmp
adc
orl
push
adc
push
adc
cmpb
sarb
mov
dec
roll
push
xor
xchg
xor
stc
xlat
dec
mulb
in
or
stc
dec
jg
leave
fwait
mov
and
xor
xor
and
ret
pop
stos
dec
hlt
jmp
lcall
fstpl
inc
popf
lret
xor
aas
mov
hlt
mov
movsb
adc
and
sbb
fnstsw
sub
mov
push
mov
mov
sub
add
clc
stc
push
rcr
jl
or
movb
mov
sbb
inc
xchg
sub
dec
xchg
cvtdq2ps
mov
rcll
daa
ljmp
pop
stos
pop
cmp
xchg
loopne
insb
add
leave
bound
add
sbb
mov
stos
rcrl
sub
dec
je
ja
inc
jbe
jecxz
sti
jne
or
pop
stc
pop
cmp
decl
andl
dec
dec
push
adc
adc
sbb
mov
and
mov
mov
dec
imul
jns
sub
sub
fcmovnb
cmc
push
pop
fmuls
mov
dec
mov
sbb
and
cli
cmp
cmp
fildl
in
and
mov
fimull
outsl
lcall
push
rcrl
and
roll
test
das
into
push
sub
adc
jg
lahf
cmp
test
mov
and
lcall
fcompl
or
jle
ret
in
add
adc
imul
add
cwtl
popa
xor
sti
daa
xchg
adc
je
test
pop
subb
mov
xlat
adc
sahf
mov
out
arpl
in
arpl
pop
test
or
int3
sarl
std
cmp
dec
inc
fistl
xchg
rcrl
lret
lahf
or
fldt
xchg
loop
add
clc
mov
out
dec
std
push
add
fisttpl
int
mov
ljmp
push
cmp
cs
mov
cmp
jno
sbb
outsl
and
daa
pop
push
gs
mov
push
cld
dec
xor
mov
fistpll
xchg
cld
lret
ss
imul
iret
bound
add
inc
or
cmp
ret
pop
mov
pop
cmp
mov
and
fmull
and
lock
icebp
jno,pt
jle
push
jl
mov
pop
pop
lods
sub
aas
scas
imul
shlb
pop
movsl
mov
movsl
push
push
jmp
ror
add
mov
outsl
mov
sub
mov
push
inc
xchg
pushf
push
std
add
inc
xchg
andl
dec
adc
test
xchg
jmp
subl
or
xchg
mov
mov
loopne
movsl
fidivl
dec
dec
inc
ret
jno
jge
push
movsl
push
lods
mov
insb
or
lret
inc
fstpt
cs
bnd
lret
imul
sbb
testb
in
pop
jns
data16
loopne
lret
lcall
imul
insb
xchg
loopne
mov
js
mov
adc
icebp
dec
jle
or
popf
icebp
sti
push
out
psubq
dec
and
int
mov
mov
dec
or
ret
sbb
push
lret
sti
pop
fistl
push
adc
lods
lods
mov
lret
and
xchg
sbb
inc
dec
cli
cmp
mov
inc
inc
call
dec
cltd
jno
sub
out
ljmp
and
imul
nop
mov
cmp
dec
pop
sub
or
inc
testb
cmp
jge
cmp
mov
gs
ret
stc
ljmp
fdivrl
push
jp
cli
adc
cmp
shr
js
pop
mov
cmp
xor
jp
xor
inc
dec
lret
mov
dec
std
pop
ljmp
out
filds
loope
adc
mov
dec
adc
adc
mov
imul
and
adc
mov
stos
jb
mov
cmpsb
sub
and
add
outsb
jg
ret
stc
cmpsb
jb
addr16
push
ret
lret
fucomp
add
jb
ficomps
sbb
popf
jmp
rcrl
sub
adc
dec
dec
xor
cmp
jb
adc
xchg
negl
mov
inc
stc
std
mov
clc
cmpsb
into
push
or
pop
mov
jmp
daa
scas
fsub
dec
push
sti
sti
inc
out
mov
push
push
notl
fmull
scas
mov
pop
andb
mov
cs
lcall
rclb
shrb
jle
pop
imul
movsl
ljmp
jnp
ret
jns
vpmacssdd
adc
cmpsl
xor
cmp
idivb
or
ret
cmp
cmp
aam
cmp
add
dec
mov
add
out
addr16
sub
inc
test
fldt
cmp
fdivrp
cmpl
pop
inc
push
imul
pop
or
cld
mov
cmp
mov
ret
imul
mov
pop
pop
jne
xorl
cmp
fbld
fstl
int3
push
xchg
test
xchg
mov
xor
and
popa
jp
stos
jb
sbb
mov
pushf
int3
jne
jae
push
push
lahf
xor
popf
sub
jmp
mov
pushf
and
lret
dec
add
mov
pop
pop
ja
nop
orb
pop
inc
add
rolb
subl
push
addb
adc
adcb
dec
rorl
fistpll
pop
add
mov
lods
mov
cs
lea
in
mov
jecxz
popf
test
mov
jns
pop
outsb
push
mov
test
mov
mov
sahf
sahf
xor
or
mov
dec
jle
cmp
jp
ljmp
xchg
cwtl
imul
xchg
insb
fimull
xchg
insb
lret
clc
lret
imul
add
jle
cmp
pop
xchg
or
jp
imul
dec
sub
add
orl
jmp
js
lods
stc
nop
out
pop
sub
sub
sti
fwait
in
lcall
xchg
mov
jnp
sub
insb
sbb
rcl
cmp
into
out
cli
fwait
or
test
cltd
pop
and
jmp
mov
and
rcrb
gs
fisubl
pop
ret
cmp
test
cmp
push
divb
xchg
test
in
push
fdivrl
das
adc
stos
lds
jnp
mov
mov
xor
cmp
or
outsl
jno
sub
sub
and
movl
lahf
mov
leave
jge
fisubs
fs
mov
cmc
sbb
scas
lret
scas
sbb
fcmovnb
fwait
cmp
cltd
ret
cmp
jp
mov
lcall
cmp
aam
mov
leave
xor
lcall
or
pop
xchg
sbb
jl
mov
pop
call
fstpl
mov
fcompl
sub
daa
adc
fwait
pop
sbb
cwtl
sub
mov
jl
pop
pop
mov
xor
xor
xchg
loopne
add
fildl
hlt
andb
pop
idivb
mov
iret
dec
imul
and
dec
neg
xchg
xchg
fistps
inc
leave
das
sub
mov
adc
lods
xor
das
pop
pop
jmp
insb
xor
or
add
lds
enter
adc
mov
push
jo
ucomiss
and
out
jmp
subb
xchg
jp
mov
push
mov
sbb
pop
xchg
test
jl
pop
leave
and
cmp
pop
dec
inc
dec
sti
hlt
cmp
popf
jmp
outsl
rol
das
mov
negl
mov
stos
and
cmp
insb
or
or
fistl
inc
push
mov
xor
add
add
repz
outsl
cmpsb
mov
negb
test
dec
or
sbb
mov
sbb
jg
leave
outsl
shlb
js
or
inc
fbstp
mov
fldt
int3
sbb
jb
mov
cmpsb
xor
ds
or
cmp
sub
or
orb
daa
cmp
andl
adc
call
dec
push
es
negl
ds
arpl
loopne
add
inc
pop
xor
or
aam
mov
xchg
enter
ja
sbb
arpl
loope
arpl
sbb
cld
mov
dec
std
push
cld
sub
dec
push
popa
sti
shr
aaa
cmp
iret
std
sub
insl
cmpsl
add
dec
in
or
push
jns,pt
or
mov
out
jno
out
insl
lahf
faddl
push
dec
mov
sub
stc
ds
mov
arpl
sbb
stos
ficompl
sub
and
jle
push
mov
aaa
cmp
adc
mov
es
aam
int
cmp
push
and
and
sbb
loope
fmuls
fdivl
inc
mov
xchg
lcall
and
mov
mov
cld
movsl
cmp
subb
nop
cld
sub
outsl
sub
imul
es
leave
sub
lret
cmp
mov
es
inc
xchg
scas
mov
pop
rcll
xor
jg
cld
hlt
fldenv
inc
jle
loopne
cwtl
or
je
cmc
or
ret
cld
add
push
out
mov
arpl
filds
sub
mov
imul
inc
dec
push
cmp
pop
dec
cld
int3
cltd
sbbl
ficoms
ss
insb
push
add
cmp
test
rcrl
cmp
inc
lock
cmp
lcall
add
add
pop
cmpsl
push
and
xchg
cld
fwait
dec
lcall
cmc
mov
sti
andb
xor
lret
pushf
and
sub
jg
xchg
ljmp
xchg
push
mov
ret
cld
movsl
jmp
sbb
inc
jo
jle
imul
sub
jg
fisttpl
repz
js
ds
push
adc
mov
sti
stos
pop
loope
fcmovnb
ljmp
je
nop
push
jmp
cmp
cmp
sbb
clc
inc
fstp
cld
fsts
mov
or
pop
addr16
sbb
push
ss
cwtl
das
mov
or
pop
push
xchg
mov
push
popa
dec
mov
loope
test
sub
into
inc
push
adc
jae
cmp
xlat
inc
leave
pop
sbb
les
fs
nop
out
xlat
aad
fisttpll
mov
insb
xchg
or
pop
movsb
cmp
stos
lcall
sbb
add
sub
push
cwtl
cld
movsl
cmp
pop
ja
inc
lock
jno,pt
add
ror
fadds
iret
and
pop
mov
ds
es
jge
sti
and
clc
test
pushf
sbb
int3
lcall
cmc
rcrl
xor
jb
pop
inc
imul
pop
mov
inc
push
push
ret
aaa
dec
xor
fdivr
aam
jne
leave
pushl
cmp
lock
scas
mov
jp
jl
mov
imul
fcoml
in
arpl
jae
imul
cmp
dec
jp
imul
sub
jmp
loopne
jmp
push
sub
jb
repnz
adcb
ljmp
enter
daa
mov
lahf
fnsave
imul
into
xchg
mov
retw
jns
push
repnz
cwtl
xorl
sub
dec
cmp
pushf
test
push
push
daa
call
mov
cs
imul
sub
jl
pop
aaa
dec
enter
mov
cld
fidivrl
and
ds
push
sti
xor
dec
jp
das
in
repz
pop
outsb
xchg
or
sarb
rorb
or
pop
mov
movsl
cmp
push
or
mov
ret
fisttpll
outsb
add
sub
daa
dec
sahf
repnz
jne
pop
ja
cmp
in
arpl
jbe
cli
xor
dec
and
jae
cltd
mov
test
xchg
or
mov
ss
les
rcll
out
inc
and
rcrb
sahf
pop
adc
and
pop
imul
subl
xor
out
fwait
cmp
push
dec
add
outsl
or
jae
or
mov
xchg
push
mov
dec
out
loop
les
gs
add
xlat
sbb
xor
std
test
in
push
mov
mov
fnstcw
push
cli
xor
sub
sbb
addl
sbb
xor
jp
xor
fbstp
pop
sbb
mov
cmp
sti
faddl
sub
enter
loop
sub
mov
cld
and
add
push
hlt
pop
or
xchg
push
hlt
xor
es
xlat
jb
sub
cltd
gs
std
mov
pop
or
les
mov
xor
jmp
fidivrs
dec
pop
stos
inc
adc
push
pusha
fdivrl
shll
sbb
fistl
dec
insl
cmp
enter
xor
cmc
sub
xor
fistpl
or
lock
push
sub
sub
and
in
cmp
push
test
sub
xchg
test
jns
pop
mov
adc
fistps
xchg
mov
xchg
pop
sbb
push
dec
loop
cmp
cwtl
xor
sahf
xor
cmpl
jae
jb
inc
je
clc
scas
ficoms
ja
fcmovnb
nop
jp
loope
pop
fistps
sahf
stos
ss
aaa
int
pop
cmp
sarl
sub
sti
lret
orb
push
shrb
fimull
arpl
pop
or
call
pop
ss
push
roll
fistl
cmp
jl
rcrb
dec
jns
or
lods
aaa
fucomi
into
xchg
push
pop
cmp
mov
push
ljmp
mov
xchg
or
jne
fadd
jg
add
movsb
push
and
shll
and
pop
dec
cmc
fdivrs
cld
xchg
repz
in
cmp
lahf
test
xchg
add
pop
stos
sbb
push
jp
or
push
and
popf
rorl
jl
pushl
sbb
pop
insb
orl
push
xor
das
jl
ds
sti
cmp
int3
in
vrsqrtps
pop
daa
and
ljmp
dec
lods
imul
jae
push
ljmp
cli
sub
xor
call
sub
aad
mov
xlat
subl
push
andb
xchg
sub
fmulp
movsl
dec
ficompl
pop
fcmovne
sbb
imul
pop
xor
ss
scas
sub
push
xor
and
mov
push
ljmp
mov
and
mov
sti
mov
mov
xor
xchg
fimull
jge
pop
dec
sti
sbb
bound
cmp
iret
in
sub
rcll
sbb
inc
cmpsl
jp
in
repnz
xor
ljmp
xchg
cmpsl
mov
jg
sub
jecxz
adc
inc
popa
cli
push
and
pop
and
push
mov
push
ss
pop
sbb
repnz
push
fidivl
and
movl
xchg
adc
inc
cld
decl
mov
add
add
fisttpl
push
cs
call
dec
nop
dec
cmpsl
pcmpgtd
mov
cs
hlt
ljmp
test
mov
cmp
mov
ljmp
in
clc
out
cmp
fimull
notb
clc
dec
push
mov
fs
sub
mov
in
lods
in
mov
rorb
and
sarl
imul
lret
fistl
in
in
xchg
cwtl
adc
cmp
mov
scas
mov
inc
js
fwait
je
scas
adc
xor
push
xchg
lcall
and
lds
repz
xchg
dec
sub
js
pop
dec
stos
in
push
test
mov
cmc
fisttpl
call
mov
add
xor
lock
fdivr
cmp
or
jecxz
cli
cmp
lahf
push
mov
sbb
pop
cld
lea
fidivrl
and
pop
or
inc
in
inc
jl
in
xchg
sbb
popa
nop
lods
sub
frstor
push
mov
mov
daa
mov
orb
inc
sub
hlt
cmp
shll
cmc
xchg
and
pop
ds
fs
push
and
push
fadds
pop
xor
jnp
bound
push
mov
fcmovu
cmp
into
fidivrs
repnz
test
sti
push
sbb
mov
push
and
push
je
das
outsb
in
inc
add
stos
das
idivb
into
je
xchg
fimull
xor
lods
ss
and
int3
sub
pop
out
mov
das
mov
imul
add
test
cmp
cmp
nop
das
insl
xor
or
push
sbb
pop
cmp
adc
sarl
mov
into
fistpl
push
inc
and
ds
mov
lcall
lret
data16
lret
or
push
fstpt
push
push
out
out
enter
dec
loopne
popf
jmp
mov
inc
jmp
and
imul
loope
jbe
movsl
push
xor
and
dec
testl
pop
daa
aaa
sarl
icebp
pop
insb
outsb
and
imul
mov
inc
xor
aaa
pop
mov
lret
or
jecxz
lds
push
sbbl
lock
pop
aam
addr16
repnz
arpl
sub
adc
xchg
add
mov
test
fwait
mov
gs
and
push
cmpsb
mov
push
negb
sbb
cltd
push
and
cltd
ss
push
jge
js
sub
sti
xor
jae
mov
movb
or
stos
mov
dec
test
pop
cld
fistpll
or
lahf
mov
jecxz
hlt
pusha
jg
lret
push
and
test
and
je
cmpsb
mov
mov
std
adc
xchg
aam
int3
sub
dec
mov
push
jo
imul
mov
cli
dec
outsb
test
jmp
je
stos
cs
bound
inc
inc
sub
or
sbb
dec
divb
ds
jp
insb
fcmovnu
loopne
mov
dec
pop
inc
lret
xchg
dec
mov
xor
cmp
int3
sbb
arpl
stos
andl
mov
xor
and
repz
test
fisubrs
jge
jg
in
and
pop
addr16
cmp
dec
fiadds
inc
push
add
sub
test
imul
aad
push
ljmp
dec
push
aam
std
adc
and
inc
dec
push
sbb
mov
pop
fwait
add
inc
cmp
dec
xor
jno
fstpt
loopne
and
test
and
test
xor
cli
pop
fninit
fidivrl
mov
mov
sbb
cmpsb
add
and
jb
fistps
imul
push
pop
add
mov
xor
ljmp
jnp
pop
sub
push
sub
jmp
mov
fistl
lcall
sbb
repnz
or
popa
sub
mov
addr16
rclb
out
call
fdiv
in
sbb
xlat
clc
and
pop
push
xor
in
insb
jns
aas
cs
mov
cwtl
loope
sbb
test
daa
cmp
insb
mov
fscale
push
inc
out
xchg
mov
or
outsb
stc
cli
cld
jp
cmp
fstps
sub
dec
mov
pop
pop
push
mov
fisttpll
xor
push
sbb
sarb
movsb
sbbl
outsl
divl
sbb
mov
or
rorl
push
jl
call
daa
push
xor
xor
cmp
in
stos
out
fldt
xchg
mov
popf
mov
mov
orl
in
popf
xor
push
mov
pop
sbb
push
in
xlat
mov
stos
push
insb
adc
and
leave
mov
in
mov
rcll
fwait
jne
mov
mov
pop
push
cmpsb
sub
sub
push
inc
bound
bound
shlb
or
mov
xor
adc
test
push
pusha
ja
pop
fwait
push
test
pop
pop
adc
and
lcall
dec
cld
jno
jp
jbe
stos
ljmp
aad
and
dec
xchg
pop
xor
cmp
cmp
lcall
data16
cli
int3
clc
push
dec
rorl
cmp
jg
pop
pop
sub
imul
cmp
out
and
xlat
sub
ret
and
cs
lds
movsb
pop
adc
jb
cmp
in
nop
dec
adc
bound
scas
lcall
xchg
test
lret
sbb
imul
cmp
dec
js
les
push
xchg
adc
xchg
lahf
inc
jg
mov
call
sar
out
fsubrs
mov
out
lret
add
out
ss
fimuls
xchg
cmc
int
mov
in
je
int3
inc
insl
cs
sbb
ret
and
cmp
push
ret
and
mov
mov
mov
fcomi
mov
xor
stos
les
pop
pushf
adc
arpl
sub
sub
and
push
test
pop
loopne
xchg
fsts
add
pushf
clc
sbbb
adc
icebp
cmp
mov
sub
arpl
inc
int3
shrl
push
xchg
cmp
pop
jns
jae
data16
and
xor
lret
or
jl
in
call
sbb
int3
mov
push
jb
in
gs
mov
cmp
fnstcw
push
sbb
js
or
iret
into
mov
test
jp
pushf
mov
mov
mov
sub
add
push
cs
dec
or
stos
cli
ss
addr16
mov
daa
adc
sub
jb
dec
sbb
jae
cmpsb
jle
pop
sub
adc
jge
movb
pop
das
lahf
jmp
or
int3
lock
fdivp
dec
out
sbb
dec
mov
pop
xor
cmp
mov
jno
fstps
mov
jb
imul
sub
sbb
and
mov
inc
or
fiadds
lcall
xor
data16
dec
es
jmp
xor
enter
out
int
sbb
or
dec
cmp
pop
iret
sub
xor
xor
push
mov
movsl
insb
sub
xor
sar
in
push
push
jle
hlt
in
imul
mov
cld
testb
lret
loop
jp
push
lds
mov
insb
leave
arpl
or
mulb
xor
mov
jl
add
jp
mov
and
dec
and
sarl
or
or
lret
pushf
lret
fstps
jle
dec
xor
repnz
fxch
in
sub
pop
test
or
ror
fimull
repz
imul
rclb
lahf
sbb
inc
cli
inc
jmp
ret
ds
outsl
and
lods
add
add
xor
sbb
xlat
push
jg
dec
dec
ret
cs
aam
push
jo
imul
cs
jle
fstps
jle
cmp
jnp
jnp
sbb
shl
test
push
push
jne
aam
dec
or
mov
mov
jl
inc
fcmovnb
enter
add
clc
clc
fwait
nop
sub
pop
mov
fstpt
and
cmp
jp
mov
aaa
cmp
rorl
mov
pop
imul
insb
jae
xor
push
ret
pop
cmp
cmp
dec
sbb
movsl
sub
testb
or
push
leave
sub
sbb
int
lcall
jl
push
cmp
loopne
jb
pop
dec
mov
cmp
or
adc
pushf
sbb
mov
nop
sub
aaa
loope
mov
add
lods
repz
mov
enter
and
dec
pop
jae
sub
scas
pop
insb
adc
sbb
stc
mov
sub
test
pop
fisttpl
cmp
fcmovne
and
xchg
mov
out
cmp
imul
xor
pop
repz
sbb
push
lret
sbb
pop
ss
imul
ficompl
pop
jns
pop
ss
sbbb
repz
imul
dec
stos
sbb
cs
dec
or
insl
test
ret
repnz
nop
and
pop
ss
jge
rep
mov
cltd
mov
push
mov
enter
and
push
fcoml
cltd
fisttpl
in
stos
lods
test
pop
aas
loop
add
es
out
fstl
fwait
enter
sarl
push
test
repnz
sbbl
sub
sub
sbb
xchg
or
cmp
fcompl
push
shrl
xor
push
pop
mov
dec
int
xchg
xchg
cmpsb
lods
nop
fdivrs
out
bound
add
and
sbb
sub
inc
cmc
and
pop
xor
push
lea
in
pop
cmc
pop
xor
test
js
jl
mov
cmp
cmp
and
fwait
mov
idiv
xor
popa
lcall
mov
sti
pop
dec
jno
iret
repnz
dec
dec
pop
add
pop
jge
les
hlt
sub
pop
sti
fstpt
jmp
jge
jecxz
outsb
fldt
jp
cmp
mov
ss
or
xor
lods
inc
cmpb
sub
fcmovnu
or
inc
mov
ret
orl
push
outsb
aaa
cmp
cli
dec
ret
orl
pop
jmp
sub
nop
xor
shrb
inc
mov
mov
jae
outsl
fisttpl
adc
imul
xor
lock
adc
jbe
sub
cld
push
push
insl
jmp
cmp
cs
sbb
rolb
call
jns
test
es
jp
and
mov
jl
int
into
mov
jnp
mov
inc
mov
addl
es
nop
je
add
and
popa
pop
pop
loope
add
inc
jns
inc
jns
cmc
ret
push
sub
cmc
into
inc
test
dec
dec
cs
or
subl
pop
mov
sti
adc
loop
popf
or
sbb
loopne
sub
cli
jp
xlat
mov
or
sub
loopne
push
xlat
add
scas
fwait
imulb
jae
cmp
jb
imul
mov
fildl
insl
xchg
js
inc
cmp
mov
or
imul
aad
imul
jg
shll
pushf
fisttpl
dec
push
ds
test
je
jbe
sbb
imul
pusha
lds
stos
ja
movsl
pop
mov
into
adc
add
fwait
cltd
insb
imull
xchg
dec
ss
fsubp
xchg
test
mov
pop
cmp
inc
sbb
dec
push
pop
pop
sbb
pushf
xchg
pusha
inc
fsts
xchg
fdiv
popa
andb
push
sub
mov
rol
xchg
fimull
xor
fildl
inc
and
out
push
ret
inc
or
xchg
push
out
pop
jno
push
mov
cmc
push
dec
sub
xchg
pop
push
and
ss
push
fistpl
sub
in
lds
sub
push
pop
mov
push
hlt
inc
push
aas
push
sbb
addr16
sbb
repz
adc
sub
fstps
push
jmp
push
inc
inc
lds
jbe,pt
fistpl
stc
jbe
sbb
push
shll
fwait
xor
int3
je
pushf
cmp
or
testb
dec
int
out
ljmp
ss
lea
scas
push
lock
jp
mov
jns
pop
pop
scas
push
loopne
sbb
push
mull
iret
push
lods
fisttpl
and
mov
pop
cs
xchg
aam
insb
jle
shll
sub
ret
adc
pop
dec
xor
xchg
gs
cli
dec
setp
cmp
imul
ljmp
lret
jmp
mov
popa
outsb
push
pop
cmp
pop
cmp
or
fldenv
leave
idivb
jmp
imul
sub
sti
ja,pt
shrb
fidivrs
int3
mov
cmp
mov
push
out
pop
cld
jb,pt
outsl
test
dec
add
push
daa
int
aaa
bound
or
addr16
lods
call
mov
dec
mov
test
or
cmp
or
push
sub
ret
cmpsb
nop
enter
mov
loope
scas
xchg
nop
mov
or
fidivl
push
or
cmpsl
jno
rcr
cltd
mov
pushf
add
lock
testl
cmpsl
xorb
hlt
mov
cltd
pop
pop
push
and
or
sti
fildl
in
sbb
push
adc
mov
bound
fldt
fiadds
hlt
xor
sub
add
data16
mov
std
adc
out
or
imul
push
pop
leave
adc
mov
add
xor
imul
mov
xchg
mov
or
xchg
lcall
lret
add
xchg
adc
repz
mov
lret
dec
addr16
cmpsb
pop
cmp
ds
popa
cmp
xor
and
das
push
pop
inc
mov
mov
out
inc
cmpsl
or
pop
fdiv
int3
xorb
mov
packuswb
jl
inc
inc
daa
sbb
cmp
fildl
int3
push
sbb
xchg
insl
js
push
ds
into
pop
jp
pcmpgtd
dec
and
insb
jbe
pop
test
fdivrp
sub
loop
adc
or
sbb
jp
cld
scas
push
pop
sbb
out
ljmp
out
pop
loopne
or
lret
lcall
push
dec
imul
ds
mov
out
mov
and
cmp
and
ss
pop
movsb
xchg
fldcw
mov
fdivrp
add
movsl
sub
add
dec
xchg
sti
std
or
fdiv
ret
ja
and
dec
ds
pop
into
xlat
sub
outsl
mov
je
xchg
ja
xchg
xchg
xor
subb
outsl
iret
pop
mov
mov
je
int3
inc
mov
xchg
add
add
std
pop
xchg
shlb
sub
addr16
push
or
xlat
add
sbbb
pop
inc
sti
shr
jl
clc
icebp
aas
cmp
or
jae
inc
or
js
pop
inc
xchg
jl
mov
add
ss
cmp
cmc
in
jbe
mov
mov
cmpsl
pop
mov
cmp
pop
or
pop
xor
popa
inc
popl
push
loop
loopne
out
ret
mov
outsb
cmp
jmp
push
out
les
cmp
loop
inc
into
or
push
mov
push
inc
repz
dec
lock
sbb
js
mov
xchg
mov
imul
inc
lret
mov
add
cmp
sbb
fcmovnb
mov
lret
jb
aad
push
daa
mov
sbb
dec
mov
cs
fmul
mov
cmp
data16
jae,pt
jns
fildl
outsl
push
cwtl
loop
imul
sbb
adc
pop
sub
pop
lods
je
pop
xor
mov
addr16
xor
addr16
in
arpl
push
jo
jo
insl
je
dec
rorb
add
xor
aas
mov
iret
jo
outsl
es
jmp
sub
push
test
fs
test
or
pop
or
stos
mov
dec
push
orl
dec
cmp
lock
mov
push
ja
xor
cmp
cmp
inc
dec
adc
mov
fadd
orl
xor
ret
test
push
sub
sbb
pop
stos
gs
lock
lea
pop
pop
popf
mov
test
scas
scas
dec
pop
or
or
mov
sub
or
xor
or
loop
xor
jmp
xor
sbb
push
test
imul
pop
dec
cmpb
dec
xchg
outsl
out
mov
outsb
sbb
idivb
outsb
imul
cmp
push
fistpl
jmp
lock
sub
std
fidivrl
fsubl
xor
push
data16
notb
xor
lea
fidivl
jmp
mov
cld
mov
call
out
mov
xor
sub
cmp
call
inc
cmpsb
pop
push
cmp
pop
push
call
mov
xchg
sub
sti
cltd
dec
xor
push
push
insb
idiv
pop
test
stos
jae
scas
movsb
data16
xor
cli
imul
cmp
mov
mov
cmpsb
pushf
loope
inc
xor
inc
incl
xorb
xchg
fildl
cmp
insl
mov
arpl
hlt
out
ret
lret
sub
xlat
and
inc
mov
leave
hlt
lcall
sub
icebp
inc
mov
sub
int3
cmp
xor
adc
push
pop
push
movsl
push
xor
mov
inc
adc
bound
mov
jmp
dec
adc
ficoms
or
lahf
ss
mov
idivb
imul
inc
mov
pushf
cmc
xchg
mov
jmp
push
push
inc
imul
jne
inc
pop
repnz
out
mov
ret
push
adc
ja
std
in
cltd
lcall
push
mov
ja
std
mov
pop
cmp
add
cmp
sub
data16
out
xchg
xor
insl
jl
imul
dec
add
js
loopne
sbb
cmp
repnz
xchg
out
push
pushl
lock
stos
sahf
fstpt
mov
xchg
aaa
movsl
inc
imulb
cmp
push
aad
xor
int3
popf
enter
movsb
cltd
test
cmp
cmp
fyl2xp1
jmp
jo
push
mov
imul
push
mov
pushf
mov
mov
mull
aaa
pop
pop
mov
fcomps
sub
lock
pop
shr
mov
aaa
int
cmpsl
addr16
rolb
lret
hlt
dec
xchg
dec
sti
mov
loop
addr16
js
pop
rcrl
or
aam
sbb
cmp
dec
cmpsb
inc
xchg
xor
mov
push
xor
imul
out
je
jle
into
enter
jnp
mov
push
enter
cs
adcb
imul
int3
inc
dec
sub
and
hlt
dec
scas
sub
jo
lods
push
sub
sbb
xchg
mov
push
adc
xor
cmp
lds
ja
pop
ja
push
jge
sub
dec
xchg
negl
jmp
mov
neg
xchg
adcb
mov
and
ja
pop
lahf
cmp
in
cmp
popl
mov
fdivl
sub
mov
cmp
sbb
mov
push
aam
movsb
cmp
lds
pop
sub
mov
or
aas
int3
inc
cs
xor
outsb
inc
mov
jb
sbb
outsl
xor
inc
xchg
or
dec
cld
subb
inc
xchg
vmulps
pop
mov
pop
push
stos
cmp
jle
outsl
xor
xor
enter
sub
mov
fsubl
adc
lock
add
int
jp
pop
repnz
or
pop
js
xorl
adc
insb
mov
mov
jno
js
mov
adc
sbb
sbb
add
sbb
dec
push
stc
mov
or
xchg
add
dec
pushf
xchg
stos
orb
pop
cmp
das
scas
fldcw
mov
or
or
or
push
sbb
fistl
push
mov
xor
insb
repnz
cmpsl
outsl
std
cmp
push
or
pushf
inc
pop
and
inc
mov
js
addr16
mov
loop
adc
jmp
jb
adc
into
je
pop
xor
jl
mov
dec
cmpsl
mov
bound
les
pop
in
or
adc
std
cmp
repnz
adc
inc
jg
lret
out
and
or
push
pusha
addr16
bound
and
adcb
int
adcb
mov
lret
inc
pushf
imul
sbb
inc
dec
into
cmp
ret
stc
movsl
jmp
jle
jmp
lcall
loopne
xor
mov
bound
sub
mov
imul
add
outsl
push
dec
mov
cmpsl
sub
addb
inc
pop
out
adc
mov
stos
adc
jl
fistl
testl
mov
fwait
packuswb
mov
mov
rolb
dec
fadds
dec
ja
xchg
push
sbb
xchg
mov
mov
sub
or
jmp
xchg
pop
ja
pusha
sbb
inc
inc
mov
or
pop
imul
outsb
idivb
cmp
jg
fscale
push
ja
jle
cmp
aaa
neg
dec
add
xor
lods
dec
mov
jle
cmpsb
mov
fstps
mov
and
mov
ja
repz
mov
out
ss
jl
sti
lea
dec
inc
int3
cmp
add
stos
outsl
xchg
test
fstpt
mov
out
sti
pop
std
fisttpl
jb
stos
notl
cltd
cmp
in
ret
rep
outsl
sahf
push
into
fcompl
xor
sub
cmpsl
sub
test
pushf
dec
sub
inc
cmpsl
jmp
mov
jp
pop
mov
adc
mov
cld
xorl
out
cli
insb
adc
sub
movsl
jno
xor
jge
cmp
pop
out
xchg
pop
sbb
or
int3
std
sbb
cmc
daa
test
sub
and
sub
pusha
jecxz
or
sub
icebp
das
ss
sbb
push
mov
dec
push
inc
mov
sub
sti
xchg
orb
and
jae
imul
loop
cmpsb
ficoms
jb
fsubrl
add
iret
add
mov
lret
push
pop
js
add
mov
negl
pop
cs
xchg
push
cld
mov
sub
sub
cwtl
jmp
addr16
cltd
call
sbb
mov
push
cmp
inc
shlb
pushf
xor
and
notl
xor
fildl
push
adc
mov
inc
fstps
pop
iret
push
xchg
adc
inc
adcb
jae
xlat
cwtl
sub
ja
cmc
dec
popf
push
inc
mov
rorl
out
lahf
mov
fistps
in
dec
mov
jmp
xlat
shr
js
and
xchg
cli
xchg
arpl
or
push
dec
leave
pop
insb
jp
pop
add
sti
je
test
pop
xchg
mov
mov
fisubl
pop
dec
std
outsb
fildl
insl
sbb
mov
mov
xchg
lcall
adc
cmp
sti
ja
out
fisubl
jb
xchg
add
fcoml
into
lret
fistps
mov
jno
scas
jno
mov
xadd
lods
xchg
push
xchg
jno
scas
push
inc
sti
xor
fsubrl
imulb
pop
jns
or
xchg
lcall
loop
cli
data16
add
add
jmp
jle
stc
push
cmp
pop
stc
cmp
iret
or
cs
cmp
cmp
add
dec
fisubrs
cmp
stc
push
rorl
adc
cmp
xchg
pop
ja
inc
lock
mov
jno
and
lods
jnp
xlat
mov
adc
shl
and
jnp
jmp
xchg
lahf
imul
pop
dec
pop
sbb
jae
unpcklps
mov
dec
pop
adc
mov
leave
add
push
jno
push
or
ja
repz
dec
cmpsl
cmp
cmp
fildll
or
lods
add
mov
addr16
test
xchg
mov
inc
push
and
aam
pop
lods
fwait
jo
dec
sbb
sbb
test
xchg
stos
cs
mov
sti
pusha
mov
ja
xchg
ja
pop
inc
push
cmpsl
mov
shll
and
mov
sbbl
mov
push
jle
jns
sti
test
lret
xor
dec
cmp
sbb
mov
mov
sub
fsubrl
aaa
jns
iret
cmp
negb
cmp
mov
ja
andb
aad
mov
xchg
mov
push
pop
ss
cmp
ret
pop
incb
inc
cmpb
fisttpl
je
cmp
das
test
fs
dec
faddl
mov
sti
pop
gs
inc
lock
sub
es
or
jle
test
sub
sub
ds
sti
ret
mov
pusha
mov
push
pop
pop
pop
dec
cmp
xchg
imul
scas
or
cmp
fisttpl
or
cwtl
scas
mov
xchg
mov
cmp
aas
sti
out
es
xor
sub
ret
mov
jg
imul
int
sti
mov
inc
adc
scas
imul
jl
jo
stc
jae
xchg
adc
jno
std
add
call
cmp
leave
lret
inc
idiv
jg
je
ljmp
jno
push
inc
add
dec
pop
ss
dec
inc
cmp
cmp
out
jl
lods
es
cmpsl
sbb
inc
mov
fwait
dec
bound
sbb
dec
nop
cmp
xlat
shl
lods
iret
out
ja
xchg
push
jb
and
lods
jge
xchg
xor
add
out
and
out
pop
cmpsb
push
xchg
inc
xchg
arpl
pop
and
xchg
movsl
je
addr16
pop
or
cmp
js
jp
push
jb
xchg
mov
mov
push
xor
cmp
cld
mov
or
jb
xchg
insb
pop
jne
sbb
xchg
and
mov
enter
ja
orl
cwtl
test
cld
mov
dec
aad
mov
fcomps
js,pt
icebp
mov
jp
mov
arpl
lret
sbb
jns
push
iret
dec
cs
and
jns
xchg
stos
cmp
sbb
sti
sbb
dec
adc
xor
idivl
dec
outsb
sub
std
pusha
mov
mov
test
fistpll
aaa
push
jge
lods
and
ljmp
cmp
fnstcw
jns
bound
filds
pop
adc
dec
cmpsb
mov
mov
fmulp
sbb
jns
stc
jno
adc
pop
stos
imul
dec
add
xchg
mov
into
dec
jae
imul
or
cli
adc
jl
mov
dec
push
packsswb
or
ficomps
jge
sbb
incb
testb
lea
test
hlt
pop
scas
ja
rol
push
push
dec
adc
xchg
enter
inc
rclb
test
loop
call
xchg
lahf
repnz
inc
inc
fs
xchg
xchg
int
jae
jns
add
jmp
cmp
cmp
jns
imul
mov
or
jmp
lods
fcmovnu
cmpsb
dec
cmp
test
ja
and
sub
pop
jns
or
mov
xorb
outsb
insl
js
mov
dec
fsubs
adc
clc
in
push
jecxz
cli
orb
jno
int3
pop
imul
shl
imul
sub
outsl
fs
stos
push
push
cltd
push
inc
xlat
loop
in
movsl
es
fistpl
std
or
mov
test
pop
push
sub
add
fucomi
dec
push
js
cld
jle
test
clc
xor
xchg
je,pn
inc
push
dec
outsl
pop
cmp
lds
pop
inc
pop
sbb
outsl
imul
jb
je
sub
inc
sbb
flds
mov
or
test
std
insb
test
mov
inc
lcall
aam
cli
jo
xchg
xorb
or
xor
lock
dec
imul
test
push
pop
ja
mov
js
jle
mov
xor
iret
stos
cltd
mov
pop
mov
or
push
xchg
fwait
mov
mov
dec
push
std
push
jb
testl
lods
cmc
dec
arpl
jne
stc
mov
dec
jb
mov
fs
testb
xorb
fwait
jne
push
imul
adc
sub
jb
outsb
pop
jmp
push
push
and
push
xor
outsb
add
mov
mov
lret
add
mov
or
sub
je
arpl
adc
ja
mov
dec
in
or
rorb
repnz
mov
loop
neg
mov
push
je
push
data16
jno
xchg
sub
out
xor
cmc
repz
inc
mov
pop
out
jp
cmp
cmp
and
mov
je
add
cmp
dec
dec
cmp
dec
jne
mov
sbb
or
and
sub
stc
inc
pop
lods
dec
lret
and
push
test
je
addr16
je
jg
cmp
adc
js
and
or
ss
fildl
push
gs
mov
ss
outsl
cmp
jl
add
add
add
jge
js
inc
fadds
imul
les
imul
jb
pop
dec
xchg
cmp
dec
sbb
lods
clc
dec
pop
pushf
jne
push
pop
jecxz
xor
inc
into
and
fwait
sub
jb
sbb
scas
mov
and
jae
xchg
cmp
lds
icebp
stos
jae
push
fldcw
mov
and
imul
sbb
fwait
mov
dec
in
xor
int3
sar
insb
iret
mulb
lock
outsl
or
push
push
inc
jg
out
and
pop
jae
lods
sbb
xlat
cld
dec
bound
fcomi
out
adc
mov
mov
test
jle
shll
fwait
ja
bound
out
pop
dec
sbb
xor
or
cmp
and
pop
sbb
push
rclb
je
jns
sbb
and
mov
sbb
fisttpl
inc
xchg
cs
xchg
insl
pop
in
enter
mov
sbb
out
xchg
int
subb
mov
mov
hlt
dec
sbbb
jns
notb
mov
inc
fiadds
and
movsl
outsl
adcb
xor
xchg
cmc
jns
scas
sbb
push
push
leave
jns
fldt
pop
int3
jo
push
jns
sbb
push
int
cli
outsb
push
icebp
frstor
loope
xchg
mov
or
ret
aad
jnp
jb
jns
jno
ficoml
jp
aam
adc
jb
popf
adcl
push
pushf
push
imulb
std
pop
push
arpl
dec
mov
mov
push
sbb
jns
js
clc
or
jns
insb
adc
jnp
mov
push
inc
mov
negl
test
lret
cmp
pop
mov
fcompl
mov
in
lret
jle
jns
fstpt
xchg
jns
cld
jle
push
xchg
xor
push
jmp
or
imul
js
or
shlb
and
in
insb
dec
xchg
out
inc
mov
test
mov
cmp
int3
lret
jecxz
stos
aas
sub
dec
mov
push
dec
jmp
les
xlat
and
ljmp
popf
adc
mov
mov
rcrb
fstpt
mov
push
pop
cmp
sub
cvtps2pi
xchg
stc
sarl
ss
xor
ja
lret
in
cli
arpl
sbb
in
rcll
pop
and
xor
cli
xor
jmp
fistps
inc
mov
aam
imul
cs
js
push
insl
bound
mulb
push
jl
movsb
xchg
push
notl
pop
int3
adcb
add
loope
addb
pop
cmp
mov
xlat
dec
jno
inc
jmp
lcall
repnz
notb
add
pop
cmp
dec
movsb
mov
add
lods
movsl
fists
popf
jmp
int
xchg
test
pop
cmp
insl
lods
fs
or
shll
dec
pop
fildl
or
push
fdivrs
sbb
jle
repnz
hlt
jmp
adc
mov
test
into
cmp
mov
adc
mov
sbb
je
out
cmpsb
pop
mov
sub
xlat
int
cmp
repz
cli
cmpsb
ss
jmp
mov
or
xchg
lods
dec
fs
add
xchg
imul
mov
mov
sti
gs
jb
inc
or
bound
mov
mov
scas
adc
add
negb
out
daa
lods
jl
dec
fdivs
fisttpll
cmp
jne
jae
aas
fmuls
repz
cmpsb
cmp
fistl
stc
dec
into
ret
add
loop
into
mov
stc
faddl
idivb
pop
in
int
out
jl
fstpt
cli
stc
jo
mov
mov
cmp
push
test
mov
mov
gs
xchg
mov
inc
xor
sbb
mov
xchg
or
fldenv
dec
push
jge
jbe
das
sub
mov
or
jno
movsl
mov
pop
dec
test
xor
or
rolb
jmp
xchg
inc
fisttpll
cmp
xor
push
pop
mov
lods
cs
mov
inc
fistpl
jb
rcrb
sbbb
pop
sub
push
sbb
sbb
pushl
lods
adc
es
inc
cmp
into
ret
in
out
cmp
push
jbe
adc
cmp
mov
mov
pop
mov
add
into
loop
cmp
xchg
pop
cld
pop
add
dec
push
lock
insl
jg
jl
or
add
fnsave
and
or
dec
push
je
sbb
insb
jns
and
out
jae
jo
or
pop
jb
sbb
mov
and
push
dec
std
adc
pop
and
xor
mov
push
data16
cmc
push
cli
sahf
jp
scas
xchg
sti
cld
cltd
lods
and
ljmp
jg
xor
cmpsb
cmpsl
dec
sbb
stos
repz
dec
cmp
mov
cld
fucomi
mov
les
into
and
mov
cmp
loop
dec
push
push
icebp
sbb
dec
pop
in
cmp
pop
jl
dec
push
cli
mov
ds
xchg
out
dec
cld
movsb
jne
sti
outsl
inc
inc
sub
xchg
popa
cmp
fdivl
popf
shll
cmp
cmp
jb
fwait
and
and
cmp
cltd
xor
cli
das
jae
sbb
es
ret
mov
cmp
pop
sti
cmpsl
push
mov
lret
imul
insb
or
pop
sub
cmp
pop
ljmp
inc
cmp
test
dec
mov
int3
sbb
shlb
fidivrs
div
mov
fnstenv
mov
imul
mov
fldt
inc
out
aas
std
ss
int3
or
dec
int3
push
inc
mov
pop
mov
movsl
test
lcall
out
ja
cld
ss
cmp
rcrb
mov
jo
push
pop
mov
bound
dec
adc
push
imul
jle
xchg
adc
fstpt
or
test
sub
cmpb
xor
ljmp
adc
lret
sbb
jnp
mov
mov
mov
movsl
fstpt
mov
mov
popa
sbb
mov
xlat
ja
pop
adc
aad
fisttpl
pop
subb
push
jns
mov
adc
add
mov
int
mov
fistpll
pop
xor
push
xor
xchg
jae
add
inc
xor
cs
rolb
pushf
pop
sbb
mov
dec
pop
xor
or
xor
jmp
fistpl
jbe
pop
mov
inc
fcmovnb
cmp
mov
pop
repnz
adc
inc
aaa
outsb
adc
and
mov
dec
mov
mov
jle
fisttpl
mov
cltd
jge
sub
cmp
aam
mov
mov
int
out
fistl
nop
sub
jnp
data16
mov
jle
xor
add
out
inc
bound
xchg
fnstsw
pop
pop
jle
sub
shl
jae
jb
fcmovnbe
sub
pusha
sar
cmp
loope
es
xor
and
pushf
ret
xor
xchg
insb
lret
pusha
xor
xor
adcb
je
push
push
fidivrs
mov
push
inc
fnstsw
sub
cmp
cmp
and
jb
add
cmp
push
cmpsb
jns
cld
adc
mov
xchg
jae
push
xchg
jnp
mov
out
sub
adc
ss
and
sti
fcmovnbe
fnstsw
decb
mov
leave
fwait
and
jl
sbb
repz
cmpsb
mov
adc
mov
inc
movsl
sub
mov
shll
imul
inc
int
mov
cmpsb
xor
push
pop
pop
mov
adc
mov
lcall
cmp
out
lods
fwait
mov
imul
xor
jno
mov
cmp
add
test
ret
inc
movsb
xor
add
sub
icebp
jae
push
outsl
fistl
and
aaa
mov
test
sti
ret
test
gs
jne
mov
je
sub
cmp
cmpb
loop
inc
cwtl
pop
sub
mov
fsubrs
cmpb
sbb
mov
push
test
js
icebp
mov
push
loop
pop
or
mov
imul
dec
aas
and
jp
insl
cld
push
mov
and
sbb
idivl
fdivrl
xchg
ja
mov
cli
inc
imul
xor
pop
cmp
lahf
cmp
pop
or
xor
cmp
daa
dec
icebp
icebp
sbb
outsl
fcmovne
out
jno
xor
gs
cmc
lcall
cmp
or
insb
mov
inc
cli
jno
mov
ds
mov
jp
fildl
lock
sbb
gs
push
stos
aaa
jns
cmp
xchg
pop
ret
jp
imul
test
cli
movsl
testb
pop
xor
or
fildl
push
cmc
idiv
cmp
push
jp
push
inc
mov
imul
mov
and
ret
loop
cli
std
imul
ds
ljmp
add
clc
lods
test
ljmp
sub
cmp
mov
add
dec
cmp
adc
gs
cmp
mov
imul
sbb
test
sub
dec
gs
jge
cmp
jno
pushf
je
mov
jb
repz
xchg
jns
adc
sti
push
sub
mov
push
cmp
lret
xchg
sbb
jp
repz
mov
dec
sbb
sub
or
jp
ljmp
push
stc
push
les
mov
xor
fildll
ds
cmp
cmpsb
cmp
fwait
xor
clc
ret
mov
pop
mov
fldt
pushf
jmp
bsf
jmp
xor
adcb
out
std
in
cmp
js
add
ficomps
imul
ds
nop
out
cld
adc
or
movsb
push
jnp
loope
xchg
adc
ficoms
jl
mov
ljmp
and
je
pop
push
es
fistl
and
roll
sbb
dec
pop
jb
sti
mov
stc
out
ljmp
repnz
ret
push
lods
adc
iret
push
aas
sbb
pushf
fcmovnu
sbb
clc
add
out
stc
out
ljmp
cmp
jmp
pop
stos
es
fcmovne
jecxz
lock
dec
jns
fildl
pushf
mov
lret
cmp
add
jno
mov
in
imul
lds
xchg
imul
cltd
inc
xchg
lahf
imul
mov
push
jp
xchg
and
mov
dec
cli
nop
cmp
repnz
test
mov
sbb
pop
mov
in
ljmp
hlt
or
push
ja
sub
xor
cmp
test
ljmp
jp
pop
add
pusha
cli
jbe
lods
dec
inc
mov
xchg
mov
gs
dec
add
pop
adc
insb
add
sbb
push
xor
mov
out
mov
jb
mov
ljmp
cmp
lret
sub
cs
mov
adc
fwait
lods
cwtl
jp
scas
rolb
pop
cmp
pop
mov
sbb
jl
push
lret
xor
sti
cmp
fistl
ss
xor
pop
movsl
push
imul
inc
xchg
mov
xchg
sbb
pop
mov
aam
add
neg
pop
jge
cmp
cmp
enter
add
stc
out
mov
add
pop
fsubs
cmp
sub
pusha
mov
jl
and
jb
cltd
push
mov
adc
xchg
push
mov
imulb
fsubl
jl
ret
cmp
lcall
push
mov
push
cmp
jns
fsubrl
and
sub
cmp
std
mov
fndisi(8087
lret
mov
lea
in
movsl
insb
cmp
hlt
jmp
js
sti
ss
fwait
stos
sbb
cmp
xchg
push
es
mov
mov
imul
xchg
imul
cmp
cmp
sbb
imul
adc
cmp
mov
insl
xor
cmp
add
subb
cmp
mov
das
xchg
fucomi
inc
ds
xchg
mov
cmc
in
xor
push
inc
movsl
fiaddl
repnz
cltd
jns
jns
jno
movsl
jmp
xchg
clc
push
push
mov
or
fistpll
pop
sub
test
add
std
and
jb
jno
imul
push
xchg
mov
xchg
jae
popa
dec
std
cmp
cmp
jbe
in
pop
sbb
lret
mov
pop
add
aam
dec
test
push
ss
repz
push
add
pop
das
mov
stc
stos
mov
jnp
dec
jne
int
inc
js
inc
mov
dec
xor
add
xor
dec
ja
repnz
pop
int
scas
nop
mov
jnp
dec
jno
mov
jbe
mov
sahf
xchg
dec
lcall
xchg
or
and
dec
dec
add
jp
popa
mov
or
stos
idivb
ss
pop
cmp
jmp
ret
loope
cmc
xorl
fisttpl
mov
or
adc
cmp
sbb
movsl
mov
std
into
ljmp
sub
ror
testl
adc
in
dec
stos
and
push
hlt
stc
mov
add
mov
std
sbb
dec
dec
push
cmp
mov
jbe
jecxz
out
cmp
sub
fwait
dec
dec
xor
das
lret
cmp
insb
jp
mov
stos
jns
xchg
popa
push
cmp
loop
jp
xor
xchg
cmp
je
or
sbb
cld
imul
cmp
push
mov
jb
lret
mov
pop
jns
add
mov
out
push
pop
fnsave
cmp
outsl
fisttpl
push
mov
add
sub
xor
dec
push
cwtl
mov
jp
in
dec
inc
int3
mov
mov
cmp
fistpl
popf
mov
or
jg
lods
cli
std
cmpb
rcrb
or
fnstsw
jb
rclb
inc
xor
ss
popf
movsl
jmp
mov
mov
inc
jb
nop
cmp
std
xchg
push
push
mov
fidivrs
inc
mov
pop
test
pop
sub
jns
or
out
cmp
pop
stos
std
add
or
push
cmp
imul
xor
push
mov
cmp
and
arpl
ljmp
mov
push
mov
pop
stc
cmp
dec
push
dec
in
cmp
jmp
or
dec
and
xchg
je
mov
add
lret
iret
pop
mov
sbb
push
push
push
fwait
push
stc
mov
or
ss
cmp
sarb
mov
sub
sub
mov
outsb
punpckhwd
adc
adc
adc
sub
sub
bound
test
sti
adc
add
test
cmp
jge
mov
pop
pop
sti
sub
imul
mov
cwtl
jo
lcall
aas
xor
sbb
ds
inc
or
mov
cmpsb
cmp
shrb
int
mov
sar
mov
inc
push
mov
int
or
dec
mov
mov
cmpsb
cmp
fisttpl
push
push
dec
cmp
lret
stc
dec
rorl
cli
pop
not
das
mov
mov
cmp
std
mov
mov
cmpsb
cmp
fcmovnb
add
cli
cmp
std
hlt
adc
cmp
in
jge
inc
add
and
mov
cld
mov
jle
movsl
inc
imul
mov
mov
push
in
pop
in
pop
pop
mov
and
push
testb
repz
call
pop
test
leave
jno
mov
dec
mov
mov
jle
fstpt
stos
sub
or
jge
add
inc
out
fs
mov
loopne
out
fidivl
sub
sbb
or
test
jl
daa
movsb
ds
pop
inc
fcompl
in
int
out
pop
mov
stc
mov
jle
int
mov
fisttpl
scas
inc
push
cmp
repz
push
lret
cmp
inc
ds
les
mov
aam
or
cltd
cmp
stc
mov
fcmovnu
lea
imul
mov
sbb
cmp
dec
cmp
jns
icebp
lret
pop
xchg
adc
std
enter
adc
jge
cmp
or
les
inc
jl
fcomi
inc
mov
insb
mov
fisttpl
pop
pop
mov
int
leave
xchg
std
repz
adc
jnp
mov
and
popa
inc
add
aas
mov
dec
jns
mov
out
or
fisttpl
sti
rcrl
mov
sub
mov
xchg
pop
ss
add
adc
add
fldl
inc
mov
pop
cli
adc
test
jle
dec
mov
jle
xor
jne
imul
lret
jle
fisttpl
or
add
mov
stc
sub
lods
xchg
jb
movsb
cmpsb
pop
stc
adc
in
jge
add
rcrb
or
fstpt
jl
ret
movsl
pusha
jnp
mov
add
neg
ss
pushf
cmpsb
pop
cmp
insb
mov
addl
mov
cld
mov
fwait
mov
or
repz
fucomi
loope
stc
cmp
idivl
dec
jmp
rorl
jnp
nop
rcrb
mov
jge
mov
repz
cmpsb
cmp
or
idivl
adc
mov
fdivp
cmp
add
lcall
lods
jge
inc
movsb
jae
pop
xor
cmpsb
cmp
pop
pop
inc
test
jmp
fwait
mov
push
and
clc
jle
adc
mov
lahf
sbb
add
lcall
lods
loopne
mov
pop
add
cmp
mov
dec
ret
cmp
dec
icebp
dec
jmp
push
outsb
push
pop
iret
mov
or
fildl
and
inc
jnp
je
ss
mov
ds
int
shlb
mov
imul
cmpsb
cmp
popf
dec
jecxz
mov
insb
test
rclb
jle
mov
mov
cmp
push
jl
and
sti
out
fs
cmp
xchg
mov
mov
aas
rcrb
dec
sti
cmp
sbb
aas
jns
jge
les
mov
fcmovnu
orl
pusha
jnp
pop
rcrb
mov
imul
adc
mov
fcmovnb
stos
sbb
inc
push
dec
mov
jle
ss
push
add
or
addl
mov
out
lret
mov
idivb
dec
cmpsb
pop
cmp
insb
dec
icebp
addl
mov
stc
mov
in
cmp
outsb
ss
iret
mov
dec
pop
in
and
dec
idivb
cmpsb
pop
jns
pop
or
pusha
push
aaa
inc
jnp
inc
std
out
mov
inc
sbb
out
ds
add
inc
jo
fisttpl
mov
mov
adc
and
mov
les
mov
sub
push
xchg
push
and
or
loopne
pop
xor
ljmp
xchg
jnp
into
lahf
pop
cli
sub
test
int
dec
fistpll
lock
notb
das
jge
cmp
aaa
cli
cmpsl
pop
sti
into
sub
pop
cld
test
enter
adc
mov
or
aaa
sub
sub
or
mov
test
sarb
int3
faddl
dec
dec
push
call
mov
lods
inc
push
jno
adc
jge
dec
mov
jl
jbe
cmpsb
inc
ds
and
cmp
mov
sbb
jg
mov
mov
lret
jmp
ljmp
sti
mov
test
jnp
inc
sub
js,pn
pop
fidivl
jecxz
out
test
stc
movsl
repz
loope
cmp
xor
cmp
loope
dec
std
sti
scas
xor
mov
jbe
jns
cmp
pushf
sets
fldt
negb
pop
cmp
pop
ljmp
repz
test
push
sbb
ss
jmp
in
icebp
fwait
cmp
cld
cmp
cmp
jge
push
add
shlb
cmp
sub
or
and
jno
fs
idivl
sti
fistl
mov
out
cld
daa
cmp
xchg
jge
fildl
cs
pop
test
stos
imul
jo
js
jno
cs
sti
pusha
cli
jbe
and
mov
jecxz
repnz
jp
xor
cmp
push
imul
sbb
or
fstpt
cmp
out
jl
pop
imul
push
imul
mov
jns
test
cmp
mov
pop
out
mov
dec
ss
pop
ss
push
int3
and
fwait
mov
fistpl
mov
in
sub
pop
sbb
sti
fildl
lcall
sti
add
dec
gs
mov
sub
addl
push
mov
push
jecxz
jp
add
cs
mov
loope
add
dec
adc
cmp
nop
pop
pop
es
sub
lret
stc
ljmp
cmp
sarl
or
movb
mov
mov
ljmp
push
test
dec
divb
add
shrb
push
iret
pop
cmp
xor
sub
push
cld
fstpt
mov
mov
iret
dec
xor
mov
roll
mov
push
mov
jb
mov
jecxz
push
cmp
sti
jp
sub
cli
mov
push
lret
push
pop
jle,pn
imul
test
dec
mov
imul
cmpl
cmp
gs
ret
inc
cli
jno
das
push
push
xchg
jp
fsubrl
pop
cmp
lcall
fcmovnu
mov
lcall
mov
mov
imulb
pop
ss
pop
lods
add
orl
mov
fldt
loope
xchg
cmp
or
fstpt
add
stos
xchg
cmp
stc
xchg
pop
cwtl
mov
ret
pop
je
out
daa
lods
mov
dec
fidivl
jmp
mov
ds
lock
out
jge
mov
cmp
clc
xchg
xchg
into
jnp
fiaddl
or
push
push
out
hlt
jnp
stos
mov
inc
imulb
push
ficompl
cmp
jb
jbe
shl
cmp
negb
push
mov
loope
sub
push
lret
mov
cmp
inc
pop
cmp
jp
test
inc
int3
stc
rolb
icebp
sti
mov
dec
imul
mov
jnp
lods
mov
pop
add
aam
cmp
cmp
cltd
add
jno
mov
cwtl
scas
push
xchg
push
fcmovb
sbb
jnp
jg
pop
jb
cli
adcl
sbb
cmp
or
inc
ss
sti
sub
push
pop
fwait
xchg
add
stos
jnp
insb
mov
fwait
adc
mov
fcmovnu
xchg
into
mov
insl
es
cmp
cmp
sub
push
mov
jnp
out
jge
pop
clc
add
into
jl
sbb
insl
mov
mov
fistl
mov
jnp
gs
jbe
bound
je,pn
xchg
push
mov
lods
stc
add
jp
push
cmp
fwait
or
add
shrb
push
mov
je,pn
jnp
jg
fisttpl
pop
sub
mov
pop
push
pop
aad
neg
je
mov
xor
mov
sbb
cs
xchg
ds
cmp
inc
mov
lcall
mov
ret
mov
jno
out
es
xchg
aad
cli
pop
js
push
inc
loope
dec
mov
jnp
jae
or
adc
out
ret
not
add
stc
aad
clc
aam
cli
inc
int3
xor
imul
sbb
dec
insl
mov
inc
jno
push
lods
xor
sahf
fwait
mov
xchg
push
js
push
lret
dec
cmp
ljmp
cli
inc
lcall
gs
jb
imul
movsl
repz
aad
cmp
outsl
cmp
pop
int3
add
mov
push
mov
cmp
pop
mov
hlt
add
push
mov
in
cmp
mov
jbe
inc
and
negb
dec
or
fildl
cmp
fmull
gs
mov
jns
mulb
pop
aad
and
or
sbb
dec
pushf
push
jp
push
mov
cli
daa
pop
stc
ret
mov
adc
inc
outsl
daa
pusha
mov
int
mov
rcll
stc
outsl
daa
out
mov
mov
pop
sub
pop
stc
fldenv
dec
mov
jle
fistl
data16
and
out
cmp
int3
lret
xor
push
outsb
sbb
std
ss
fstpt
rolb
jl
dec
push
aam
dec
inc
cltd
std
ds
mov
cmp
lahf
outsb
sub
cmp
mov
cmpsb
cmp
fstpt
and
cmpb
jle
inc
xchg
jb
mov
ss
js
adc
imul
dec
adc
shrl
xchg
pop
aas
pop
insb
cli
int
or
mov
mov
jge
int
mov
and
fstpt
mov
push
jp
and
sti
dec
cmpsl
js
inc
out
std
ss
dec
inc
push
sbb
add
stc
mov
jle
fistpl
je
imul
int
out
lret
fwait
divl
js
inc
out
mov
mov
ret
lds
js
inc
add
les
and
dec
int
outsb
jae
cmp
imul
mov
pop
inc
mov
pop
mov
cmp
dec
sti
xor
pop
jmp
fwait
out
mov
std
adc
mov
cmpsb
mov
and
mov
outsb
push
mov
ljmp
ret
mov
sbb
movsb
pop
cs
wbinvd
stc
fwait
mov
outsb
push
fmull
repz
mov
add
mov
jb
int
sti
sub
xor
aam
xorb
notb
push
inc
jle
cmp
in
lock
mov
and
cwtl
jp
pop
int
orb
mov
fmul
es
sti
mov
jp
int
sbb
hlt
imul
mov
mov
mov
sub
jae
movsl
in
data16
mov
sub
dec
xor
pop
pop
xor
xchg
xchg
jge
ja
add
fiaddl
rcl
jmp
stc
xchg
cmp
in
shrl
scas
sub
mov
push
rcrb
aam
or
addr16
and
add
adc
out
xor
inc
inc
iret
leave
jb
incl
das
sub
cmp
pop
jnp
enter
xorb
mov
xor
test
mov
repnz
jo
mov
cmp
cli
dec
idivb
lods
hlt
xor
or
jge
test
lahf
insb
imul
fstp
mov
mov
xchg
ret
jle
sub
sbb
xor
mov
mov
icebp
pop
ljmp
push
mov
mov
lret
mov
repz
lods
int3
insl
rcrl
out
jmp
mov
sti
sbbl
inc
ret
fsts
testl
dec
adc
fs
ret
cmp
leave
es
xor
sbb
cmpsl
mov
xchg
mov
neg
mov
es
cmpsl
imul
push
push
cmp
pop
arpl
jbe
je
repnz
jne
pop
xor
xorl
jns
mov
pop
sbb
cli
push
and
shll
jg
pop
insb
jo
mov
push
adc
gs
push
jae
jbe
es
fwait
jbe
jg
mov
lret
jbe
xor
les
imul
daa
ret
sub
mov
fchs
xchg
cmp
dec
mov
jge
cmp
xor
loop
cmpsb
and
sub
or
lcall
jae
cli
xchg
xchg
jae
rclb
push
or
sbb
inc
adc
out
test
ret
jmp
push
jae
sbb
pop
divl
or
inc
sub
cmp
aam
out
daa
mov
jl
arpl
sub
xorl
xor
or
aam
jp
xchg
rol
aam
jp
ss
into
mov
xor
call
lahf
jo
lret
loope
dec
scas
xor
mov
mov
shll
add
lret
xor
cmp
mov
pusha
fdivp
adc
sub
call
fmuls
fildl
add
mov
xor
fldt
adc
ds
out
or
insb
scas
int
and
lahf
pop
inc
push
mov
adc
fisttpl
push
stc
adc
dec
jle
imul
stos
into
pusha
cmpsl
jge
cli
cmp
imul
xor
xchg
mov
sbb
xchg
sar
pop
out
mov
aad
pop
pushfw
mov
push
adc
add
inc
jl
imul
xor
jg
inc
lret
imul
stos
push
sahf
ret
das
leave
push
jp
jge
cltd
push
sbb
sub
into
jg
adc
jmp
data16
lods
fcoms
ss
inc
cmp
lea
jo
push
gs
jl
cmpsl
ja
cmp
cs
sbb
cld
cmc
imul
arpl
in
sti
dec
fnstenv
dec
and
ja
jns,pt
lock
xlat
movsl
in
and
sub
push
push
xor
idiv
fimuls
dec
int3
xor
push
xlat
es
test
push
dec
sbb
dec
icebp
insb
sti
fisttpl
adc
dec
and
fildl
adc
mov
inc
out
adc
adc
cwtl
xchg
sbb
cmp
sbb
pushf
xor
inc
or
pop
inc
mov
dec
sub
pop
imul
or
nop
cmp
cmpb
mov
enter
xlat
or
ja
xor
cli
fsubs
call
and
mov
pop
lcall
jo
sbb
push
mov
pop
push
xchg
cmp
jg
xchg
sub
sub
sbb
mov
faddl
or
sbb
sub
cmp
jne
jae
imul
xchg
sbb
dec
test
leave
cmp
pop
jmp
push
sbb
popa
outsb
cmp
dec
cmp
pop
lcall
dec
fwait
jb
neg
cmp
pop
lods
jmp
fmull
push
cmp
fdivrl
sub
xchg
mov
je
push
shll
pusha
out
xor
pop
inc
ss
push
dec
dec
cmpsb
xchg
cmp
cmp
push
gs
xor
fxch
ja
repnz
inc
mov
jmp
jl
pushf
ror
std
fwait
jmp
clc
pop
push
arpl
insb
and
fisubl
pop
sub
sti
jp
rorl
mov
jo
dec
add
sub
or
ds
inc
imul
test
stc
movsl
jne
adc
stc
adc
push
mov
jbe
into
lds
sub
pop
cmp
inc
cmp
lods
cmpsb
movsb
push
push
mov
es
ljmp
sbb
sti
cld
je
mov
cmp
or
jl
lahf
add
mov
jl
mov
sbb
add
pop
inc
imul
mov
mov
xorb
jae
and
sub
jae
or
add
andb
or
push
fistl
jl
imul
repnz
fisttpl
dec
lret
sub
push
sarb
sub
sbb
or
outsl
xchg
outsl
xlat
inc
mov
push
sbb
sti
mov
pop
cwtl
pop
mov
push
ficompl
lcall
test
stc
outsb
sti
insb
lcall
jl
lcall
lahf
pop
push
mov
pop
jmp
loop
arpl
outsb
cs
cmp
jg
fsubl
push
sub
mov
xlat
mov
push
out
dec
xchg
sub
adc
jge
cmp
pop
inc
inc
je
sbb
stc
test
test
dec
inc
and
insb
repz
mov
das
nop
cmp
cmpsl
je
es
in
inc
mov
stc
mov
and
mov
dec
call
arpl
push
addr16
mov
mov
lret
mov
pusha
adc
es
out
movsl
xor
inc
push
ljmp
xor
mov
cmp
faddl
loop
xor
pushf
and
cmpsb
lcall
into
and
adc
and
adc
icebp
and
sub
xlat
aad
je
xchg
push
data16
gs
aad
xchg
mov
jns
xchg
push
xor
lahf
out
pop
data16
xchg
addr16
lea
mov
adcl
testb
pop
in
addr16
notb
mov
popf
pop
jp
xchg
cmp
push
xor
xchg
int3
fwait
mov
and
inc
cmp
and
adc
adc
cmp
mov
fisttpl
mov
add
test
pop
adc
xchg
lcall
mov
lahf
shld
cs
push
jl
ljmp
rol
ficomps
loop
out
outsb
and
inc
call
dec
push
pop
nopl
push
xchg
or
sub
aaa
or
bound
jg
sarb
stos
push
cld
jmp
inc
cmp
pop
sar
shlb
and
mov
push
es
inc
mov
inc
iret
addr16
jp
or
xlat
outsb
and
sysret
xor
dec
dec
divl
mov
mov
pop
scas
push
mov
sub
jg
movsl
rcr
mov
adc
xor
pop
cs
xchg
inc
bswap
lret
dec
and
mov
push
sub
jns
or
es
xchg
clc
stos
push
mov
test
pop
arpl
dec
ljmp
adc
push
pop
jbe
loopne
rcrl
mov
dec
pop
les
imul
push
mov
idivb
xchg
cmp
imul
sahf
and
dec
fstpt
aam
pop
movsl
rorb
mov
addr16
pop
pop
cmp
xchg
lret
sahf
cmpsl
pop
xor
mov
in
sbb
cmp
nop
lret
mov
push
mov
sbb
cmp
mov
pop
std
loop
mov
mov
and
sub
repnz
and
push
fsubl
or
std
pop
jl
fistpl
ljmp
dec
imul
mov
inc
sbb
jg
push
mov
jmp
and
xchg
loop
fwait
pop
repz
scas
push
repz
pushf
or
pop
popf
aad
outsw
push
ds
leave
out
mov
enter
pop
xor
mov
adc
sub
ja
scas
jb
inc
adc
push
pop
mov
fisttpl
dec
push
int
cwtl
mov
out
jno
xchg
mov
js
mov
repz
inc
push
sti
popf
mov
mov
test
lock
sti
sti
push
sub
test
roll
arpl
xor
popf
cld
cmp
aaa
repz
lods
rclb
fstpt
decl
mov
xchg
push
clc
pop
lds
mov
mov
push
add
and
xor
ret
and
outsb
xlat
outsb
js
xchg
sub
mov
add
mov
mov
mov
lds
mov
fstpt
xchg
mov
pop
and
in
sub
mov
lods
adc
ret
xlat
icebp
fs
clc
lods
sbb
das
cld
sbb
cmp
add
pop
dec
sbb
sub
cmp
pop
rorl
mov
lret
xchg
scas
pop
pop
jp
push
jb
cmp
test
cwtl
cmp
sbb
pop
pop
mov
cmp
orb
addr16
cmp
and
leave
testb
cltd
push
jle
xchg
pushf
pop
clc
push
stos
cltd
inc
fildll
mov
cmova
imul
and
pushf
dec
pop
jo
insl
aaa
ret
popa
int
rorb
adc
sahf
sbb
cmpsb
pop
xchg
js
aaa
out
pop
dec
pop
int
sub
out
ret
fiadds
mov
inc
pop
pop
cmpsb
repnz
or
sub
negl
ja
xchg
adc
fcoms
mov
cmpsb
inc
pop
repz
gs
xchg
and
scas
sub
shll
mov
cmp
jecxz
pop
mov
mov
ja
adc
shrl
lahf
pop
sbb
lds
or
pop
test
fstpt
jl
cwtl
add
jns
sbb
add
jbe
or
fs
and
pop
sbbb
adc
out
and
gs
arpl
sbb
repnz
add
xor
pushf
push
das
mov
rcrb
cmp
pop
fildl
lods
mov
cmp
cmp
mov
fistl
push
rclb
lret
sbb
sbb
dec
gs
cs
lcall
sbb
outsl
stos
xchg
pop
insl
fadds
jecxz
insb
popf
lret
push
ret
std
xchg
mov
in
pop
push
pop
cld
cld
sub
sub
mov
cmpb
cld
jne
xor
push
jle
dec
imul
out
mov
pop
dec
pop
lcall
sbb
inc
xorb
lods
cmpsl
xor
jns
call
jmp
jne
mov
in
loopne
loope
lahf
sbb
and
clc
enter
cmp
test
outsl
pop
xlat
test
fidivs
dec
cltd
cwtl
sahf
enter
mull
or
fisttpl
mov
mov
es
xor
inc
jae
stos
aad
sub
lret
jbe
sub
in
je
xlat
sbb
sub
sub
enter
push
pop
jb
iret
outsb
call
outsl
cs
in
mov
or
stos
imul
pop
push
sub
sub
test
xor
mov
cmc
push
ss
cs
cmp
mov
cmp
mov
inc
mov
outsl
jnp
repnz
sahf
mov
in
xor
rcrl
sbb
inc
push
and
jne
ja
cld
xor
aam
push
sahf
pop
jns
jge
cmp
sub
mov
mov
lret
cmp
es
orb
insl
mov
jae
fldt
es
iret
enter
xchg
int3
jb
adc
sub
pop
out
dec
push
push
xchg
mov
stos
adc
test
inc
fsubrl
inc
and
sub
lods
ret
int3
dec
hlt
stos
pop
pop
jmp
lods
cld
subb
inc
test
call
shll
cmp
data16
xor
fs
jecxz
popf
inc
jne
mov
sbb
popa
adc
xor
jns
pop
pop
nop
mov
push
xor
rorl
adc
lret
data16
push
notl
sbb
xchg
jns
lds
or
iret
pop
xchg
cmpb
or
bound
test
lahf
mov
es
loope
imul
xchg
push
jecxz
jge
jl
jns
imul
mov
push
cmp
sub
sbb
cld
repnz
add
fisttpl
movsl
inc
sbb
dec
mov
fistpl
mov
sub
jp
or
add
fisttpll
je
sbb
sub
xor
jb
and
in
or
negb
xlat
or
int3
mov
insb
and
xor
xchg
cmp
mov
pushf
xchg
jl
out
push
lods
insl
push
imul
or
adcl
adc
push
imul
fstps
fwait
shrb
pop
into
or
sbb
or
mov
jbe,pt
mulb
jne
or
shrl
or
data16
shrl
loop
or
push
aam
dec
iret
dec
add
popa
aam
scas
mov
dec
jae
ss
fisttpl
cmp
imul
xor
cmp
addr16
pushf
xor
inc
nop
aad
mov
cmc
xlat
or
call
sub
and
jmp
push
adc
xor
test
jmp
data16
jne
cld
xor
and
push
push
push
mov
sbb
outsl
outsb
sub
lcall
jno
pop
sahf
xor
push
loop
es
ja
cmp
xchg
sub
ss
sahf
lret
jp
test
pop
stc
jge
jp
mov
movsl
mov
mov
sahf
mov
rcrl
mov
mov
ja
sub
shll
test
lcall
je
insl
push
cmp
int3
mov
das
xor
cmp
idivb
in
add
outsl
lock
sahf
jge
or
jno
jmp
mov
xorb
cs
js
pop
mov
cld
sbb
ss
fsts
pop
xor
mov
jno
pop
push
inc
sahf
subb
cmp
dec
lahf
es
sahf
lcall
jns
negb
push
outsl
fcmovne
add
jno
sahf
mov
inc
cli
cmp
jge
sbb
and
sahf
mov
out
adcl
xchg
xchg
icebp
mov
sub
mov
jmp
lret
mov
sar
and
sbb
cmc
insb
or
js
push
fildll
sbb
popf
pop
icebp
or
sahf
rcll
jbe
xchg
jl
and
cmp
test
aad
pop
movsl
cmp
mov
sbb
push
hlt
test
xor
pop
shll
movsb
in
pop
add
mov
movsl
in
or
fnstsw
mov
mov
jns
push
imul
mov
rdmsr
frstor
je
je
xchg
cmp
in
or
cmp
sti
loop
mov
pop
pop
add
nop
and
dec
bound
mov
dec
sarb
test
push
mov
jne
cmp
aas
outsb
dec
adc
icebp
mov
cltd
pop
jmp
mov
fistpl
aas
mov
outsb
mov
lods
dec
pop
dec
add
sub
sahf
repz
outsb
mov
jns
add
mov
ds
js
dec
xor
int3
push
xchg
ss
sahf
je
movsl
push
pop
sbb
cmp
mov
mov
mov
int
sahf
daa
dec
test
sahf
cmc
imul
mov
clc
rcr
ljmp
mov
mov
daa
fcmovu
lcall
int
jbe
outsb
lods
mov
lds
sub
sbb
xlat
imul
inc
and
dec
dec
or
or
cmpb
mov
sbb
clc
scas
leave
inc
sbb
filds
or
inc
popf
jecxz
rclb
out
sub
outsl
imul
jne
data16
outsl
mov
push
icebp
das
and
movsb
outsl
repz
xor
addb
icebp
mov
adc
enter
fdivrp
scas
aaa
sub
or
mov
add
inc
sbb
xchg
xchg
rcrl
leave
fnstsw
mov
aas
pop
mov
xchg
popf
test
dec
xchg
aaa
add
gs
ret
sub
aas
imul
mov
int3
inc
jnp
movb
push
lock
out
cmc
xchg
mov
or
or
push
xor
jp,pn
mov
add
insl
lock
nop
aas
addr16
inc
pop
idiv
xchg
or
inc
cmp
ret
divb
or
negb
pushf
mov
cs
imul
fmulp
jbe
mov
fdivl
imul
xlat
dec
mov
adc
fcom
enter
test
pushf
pushf
shrb
pop
or
fwait
sbb
bound
mov
not
xor
nop
shl
jge
imul
inc
sub
adc
fisubl
sahf
xor
idivb
xchg
mov
cs
dec
mov
mov
pop
xchg
mov
mov
jo
andb
out
mov
into
pop
sbbl
insl
sub
xchg
icebp
insl
lods
push
push
jno
sahf
je
in
pop
or
jb
lods
push
je
dec
add
pop
ds
xchg
ja
xlat
lock
sub
aam
fidivs
sbb
sub
inc
sarl
fidivrl
lcall
icebp
add
cmp
lods
ret
adc
icebp
sti
sub
push
mov
and
add
roll
into
in
xchg
jne
out
test
push
xor
std
dec
rep
lods
es
loop
sub
and
cmp
lahf
into
or
xor
clc
sub
inc
sti
push
fildl
pop
cmc
add
mov
add
icebp
fwait
lods
push
aad
inc
mov
ja
mov
hlt
fldl2e
scas
add
push
mov
test
repnz
test
mov
popf
jne
imul
stc
sbb
and
lret
jp
test
outsb
push
sub
repz
lock
mov
push
sti
lods
int3
mov
rorb
arpl
popa
cwtl
sti
movsl
jge
sbb
ss
jg
mov
daa
inc
fstpt
daa
scas
jp
faddl
gs
clc
push
sbb
dec
fists
fwait
nop
pop
cli
pop
call
jge
or
mov
pop
mov
pop
dec
in
fwait
mov
jbe
imulb
and
jns
js
pop
mov
test
ds
ret
pop
cmpsl
push
push
cltd
and
xchg
mov
or
push
cmp
test
je
pop
and
addr16
sub
cmp
cmp
clc
sbb
pop
mov
sub
js
push
mov
imul
incb
mov
cmp
neg
outsl
push
sub
cltd
and
jb
sub
or
psubd
mov
stc
sbb
mov
in
pop
mov
dec
jb
out
xor
cmpsl
repz
test
test
fwait
push
adc
test
clc
fstps
jno
fistpl
push
or
dec
sub
in
pop
xlat
inc
notl
cwtl
lods
push
nop
outsb
mov
jae
or
mov
shlb
inc
jno
clc
add
lret
lret
push
push
pop
shlb
pop
aaa
in
xor
gs
push
xchg
cmc
dec
inc
xlat
stos
jae
xor
or
pop
int3
pop
icebp
dec
mov
daa
nop
push
test
cli
push
or
mov
gs
push
outsb
clc
dec
movsl
ss
ja
lret
or
movsl
xor
leave
imul
xchg
dec
xor
mov
inc
jge
push
into
push
fcomps
cld
mov
cmp
std
fisubrs
out
lcall
and
cmp
cmp
xchg
or
fbld
fldcw
xorb
out
stc
insb
cmp
mov
xorb
out
sbb
mov
cwtl
rorl
dec
dec
add
pop
mov
sub
cltd
xchg
and
fisubrs
aas
popa
cmp
pop
sub
jg
jns
jp
add
and
daa
bound
cmp
push
fisubs
sub
inc
pop
push
jmp
cmp
jp
leave
bound
mov
jb
mov
imul
out
in
cmp
test
test
sub
jg
fstpl
dec
fildl
mov
aad
xor
xor
gs
sub
push
push
sbb
push
icebp
stc
mov
sbb
dec
leave
std
movsb
in
dec
and
jb
test
das
push
pusha
addr16
neg
pop
xlat
mov
imul
nop
mov
push
sbb
ret
imul
pop
out
sub
fildl
cmp
add
fsubp
ja
cltd
mov
andl
rolb
test
stos
insl
mov
ljmp
mov
dec
scas
mov
cmp
andl
inc
xorb
sub
clc
or
sbb
cmp
inc
jno
sbb
xchg
push
js
sbb
push
rclb
sub
xorb
das
imul
inc
fs
pop
testb
pushf
addr16
pop
out
out
sbb
xor
into
mov
ja
adc
sbbl
inc
pop
mov
jp
dec
jb
loopne
fistl
jb
imul
jp
sarb
push
inc
cwtl
mov
mov
ljmp
out
pop
push
insb
fcoms
push
jp
cld
gs
xor
insb
sub
nop
jb
xor
dec
fwait
cli
outsb
mov
fistl
aaa
mov
jge
xor
dec
gs
xlat
bound
or
lcall
les
addb
sub
cmp
sub
int3
lds
sub
xchg
inc
adc
jns
cmp
out
fninit
inc
imul
inc
cmc
sub
repz
outsl
fcmovne
xchg
inc
jno
daa
pusha
dec
adc
pop
call
gs
aas
and
and
sub
rcl
and
ret
cld
inc
xor
xchg
mov
mov
fcomps
cmpsl
sub
and
leave
and
pop
push
pop
xchg
xor
push
ret
cmp
push
xor
and
push
pop
or
mov
jne
cmp
mov
adc
in
and
xor
dec
pop
gs
dec
ds
ret
jp
in
and
mov
jb
adc
leave
jbe
and
fcmovnbe
loope
and
mov
sbb
repz
imul
lcall
inc
mov
int3
sbb
out
addl
inc
mov
fisttpl
test
push
inc
mov
int
imul
push
repnz
mov
loope
sbb
and
mov
cmp
inc
or
sbb
mov
jns
dec
jge
or
cmp
mov
dec
imul
jae
or
ljmp
ljmp
repnz
imul
ja
cmp
insl
test
jbe
testb
sti
pop
xor
fisubrs
dec
jmp
push
sbb
push
or
adc
cmp
lcall
lret
ja
lcall
mov
stos
lods
shlb
outsl
jp
jns,pt
imul
dec
add
mov
das
aad
mov
mov
add
mov
xchg
cmp
pop
ja
in
pop
cld
call
movsl
rcll
cwtl
int
ret
out
aaa
loope
andb
xor
mov
push
dec
push
pop
fcomi
push
outsl
fistl
jp
cli
xlat
out
push
mov
imul
cmpsb
sub
jb
test
cmpsb
cvtpi2ps
cmp
jb
push
cmp
xchg
xor
inc
scas
jne
or
xor
ja
push
daa
adc
add
mov
mov
xor
pop
adc
mov
lcall
mov
or
jae
mov
mov
cmc
adc
imul
push
xchg
and
cmpsb
jbe
enter
int
jne
push
subl
mov
xchg
xchg
fstpt
fwait
jbe
iret
inc
imul
xor
mov
aad
xlat
and
inc
mov
pop
icebp
xchg
add
insb
mov
pop
cmp
sahf
cmp
imul
dec
mov
rcrb
mov
out
in
arpl
insb
ret
sbb
addr16
jmp
cmpsb
push
pop
mov
pop
mov
sub
stos
mov
cmp
sub
lea
mov
ss
add
xchg
mov
cltd
pop
icebp
bound
imulb
imulb
int3
mov
mov
mov
aas
xchg
pop
je
sbb
inc
cmp
bound
xor
and
push
data16
xchg
cmp
or
aaa
xor
lods
adc
pop
jb
lret
ds
ja
mov
das
mov
lods
add
mov
mov
dec
ja
lds
negb
add
into
mov
or
mov
clc
pop
cs
or
mov
and
mov
not
mov
xadd
into
imul
inc
xor
ret
cwtl
mov
mov
je
bound
mov
bnd
mov
inc
and
sub
mov
adc
enter
mov
xchg
or
pop
and
insl
and
xchg
jge
xor
fcomps
pop
or
mov
outsb
arpl
inc
ret
push
sub
jmp
hlt
arpl
jns
xor
cld
dec
int
sti
cmp
test
jmp
mov
and
add
jg
push
jg
sbb
int3
clc
enter
push
push
shr
inc
or
imul
popa
fdivr
outsb
fimuls
repnz
lret
jmp
inc
cmc
sti
fistl
pop
jl
push
or
mov
mov
cmp
jg
inc
mov
xchg
inc
dec
mov
arpl
leave
andl
mov
lds
push
pop
sbb
test
sbb
push
and
cli
inc
pop
sub
jne
sarl
mov
adc
cmp
movsl
mov
add
movb
jo
pop
sarl
aas
add
sub
andb
cltd
inc
scas
xlat
imul
push
sub
push
test
stos
insl
cmc
loop
pop
xlat
sti
dec
inc
lahf
jnp
or
xchg
js
outsl
xor
jno
jo
push
ja
push
imul
iret
cmp
ja
in
adc
je
outsb
mov
add
popf
fnstsw
sbbl
fdivrl
cli
inc
mov
jmp
push
sub
adc
adc
sbb
packsswb
pop
or
ds
int3
lcall
mov
xchg
sub
sub
dec
sub
push
loope
mov
stos
add
mov
shll
pushf
inc
fwait
pop
sbb
rorl
inc
loope
xchg
insb
stos
cltd
mov
sbb
cmpsl
pop
jmp
pop
iret
cmpsl
mov
es
insb
cli
nop
inc
cld
xor
fs
ss
xchg
pop
sub
aaa
pop
dec
in
test
sahf
sub
xor
dec
in
sbb
lods
movsb
jge
jae
shl
stos
mov
btr
push
sub
or
in
mov
je
pop
push
scas
sub
shr
mov
cmp
icebp
xor
movsl
cmp
pop
sbb
test
js
xlat
aas
ljmp
shlb
xchg
divb
add
sahf
mov
add
insb
cs
xor
jle
jmp
cmpsb
mov
das
adc
cmp
pop
fistl
add
adc
call
stos
xchg
pop
dec
fistl
mov
push
das
mov
xorb
pop
das
scas
andb
lock
addr16
fcmovne
lods
mov
idiv
ljmp
int3
insb
pop
aaa
fisttps
fdivrs
ss
lcall
mov
mov
mov
push
fcmovu
aad
or
loop
jge
icebp
ljmp
repnz
call
xor
les
std
mov
es
shufps
test
fistl
fisubrl
inc
sub
insb
cmpsb
or
fwait
jae
and
insb
int3
rclb
inc
nop
jns
dec
lods
add
and
imul
pop
mov
call
movsl
and
in
inc
pop
cmp
xchg
ss
push
shrl
xchg
les
insb
test
fisttpl
lcall
es
pop
gs
xchg
idivb
and
imul
pusha
aaa
pop
call
sbb
dec
lds
xchg
pop
pushf
iret
out
fdivr
mov
and
mov
shrl
ss
arpl
ret
gs
test
sub
mov
lods
jne
xchg
sub
cmpsb
and
xor
int
cmp
ret
push
lret
outsb
fsubrl
jge
mov
cmc
ret
cmp
xchg
gs
pop
mov
movsl
mov
inc
and
call
orl
add
into
insl
mov
fnstcw
aam
jl
adc
adc
mov
ds
mov
fucomi
out
push
cli
inc
push
test
fisttps
dec
cmp
xor
sbb
test
adc
sti
insb
dec
pop
fnstenv
jae
jb
ror
jmp
push
push
and
jmp
daa
push
sbb
sub
push
cs
push
xor
or
xor
xchg
sbb
dec
ss
ja
rcpps
mov
stos
out
dec
cmp
xor
rcll
mov
xor
into
push
sub
push
push
mov
jecxz
popa
push
jbe
or
imulb
popf
adc
fimuls
stos
rcll
fnstcw
pop
pusha
aad
jp
rcl
in
out
sbb
adc
mov
aad
ret
cmp
inc
les
divb
ret
neg
mov
dec
push
jl
fcmovne
aad
mull
push
stos
aam
or
or
jmp
inc
cwtl
jp
fldlg2
cltd
or
fnsave
jbe
sbb
cli
inc
sub
lods
or
pushf
je
pushf
push
loop
fdivrs
daa
dec
not
mov
nop
add
push
mov
push
push
jg
inc
push
dec
pop
lcall
inc
notl
inc
int
fucomip
mov
fsqrt
cli
xchg
arpl
adc
fidivrs
pop
ja
insb
add
call
push
test
or
mov
imulb
out
ret
rcll
rep
inc
pop
mov
bound
add
je
and
into
fldcw
psllq
bound
mov
adc
cmp
xchg
clc
pop
mov
iret
arpl
xor
lret
loopne
fistpl
sti
push
inc
pop
push
mov
ds
cs
push
or
xchg
xlat
clc
out
ss
imul
pusha
fistpl
je
mov
outsb
and
in
dec
push
lods
fwait
popf
test
mov
leave
in
daa
or
stc
popf
int
sbb
repnz
jns
and
push
jb
push
adc
pop
add
fwait
mov
dec
jg
pop
fcomi
repnz
pop
sub
fldt
jno
pop
and
cltd
jp
lahf
fs
add
pop
cmp
xchg
pop
mov
in
sarl
mov
push
clc
ret
mov
add
jge
sbb
cltd
and
sbb
divl
popf
xlat
mov
test
mov
adc
arpl
fcmovnbe
cmpsb
adc
hlt
lods
hlt
or
mov
movsl
push
inc
scas
xchg
je
xchg
cmc
cmpb
xlat
lret
pushf
loop
cli
cmp
xlat
inc
xchg
stos
sbbb
xchg
xchg
jns
cmpsl
cmp
and
mov
rep
sub
xor
mov
mov
push
ja
incl
outsb
xchg
pop
push
pop
mov
hlt
push
adc
aas
fistpll
xor
mov
fwait
sub
mov
fstpl
jmp
sbbl
pop
fcoms
jae
inc
xchg
add
push
add
pushf
int3
gs
nop
xchg
adc
mov
xchg
mov
sahf
popf
pop
aam
dec
orl
mov
lcall
cmp
nop
pop
or
imul
inc
int
pop
lahf
mov
or
out
mov
fwait
out
aaa
mov
bound
pop
jecxz
push
lds
ret
test
gs
fcmovnu
mov
andb
sbb
movsb
pop
dec
mov
push
ds
orb
dec
test
bound
testb
fisubrl
xchg
out
cmc
jp
sub
xor
ss
imul
xor
js
xor
and
pop
sti
daa
fisttpl
jno
xor
jl
sbb
fwait
shrb
and
mov
popf
in
repz
fisubs
std
push
dec
out
mov
pop
cmp
xor
sub
or
push
imul
js
pop
push
add
test
mov
push
jno
ret
and
mov
dec
push
pushf
lcall
jb
mov
sbb
jb
hlt
and
sub
adc
dec
loopne
cwtl
loop
pop
clc
and
pop
push
jmp
push
pop
mov
jecxz
imul
gs
icebp
add
outsl
cmp
cmp
xchg
add
cmp
insb
dec
ds
add
sub
cmp
pop
outsb
jae
cmp
mov
idiv
lcall
ret
lahf
mov
cltd
push
xor
nop
mov
and
or
mov
inc
daa
sbb
enter
sub
fdivr
sbb
sbb
cmp
jp
lds
cltd
loope
ljmp
pop
dec
dec
imul
gs
insb
lods
or
inc
rcr
pop
imul
lds
and
mov
dec
push
jno
cmpsb
jb
lret
js
inc
jge
fldt
imul
rolb
fldt
cmp
adc
fdivr
pop
cltd
testb
and
cs
out
jns,pn
dec
int3
inc
imul
cli
or
fistl
es
jb
shlb
inc
movlps
out
inc
cmp
mov
ret
and
cmp
adc
cmp
fldt
cmp
es
lret
jmp
cltd
mov
imul
fwait
loop
add
pop
jb
cmp
ret
idiv
push
jae
jno
pop
adc
jb
add
sbb
dec
cmp
in
es
andb
xor
mov
in
push
mov
inc
pop
mul
mov
dec
imulb
sub
bound
mull
test
pop
mov
and
xchg
inc
mov
js
dec
jno
mov
sahf
push
xor
test
rolb
repz
jae
repz
pop
in
mov
inc
mov
sbb
outsl
nop
int
xor
fstpt
nop
testb
bound
fucomi
sbb
in
xor
mov
cmpsl
lret
mov
pop
mov
mov
shlb
cmp
mov
insb
loopne
loop
cmpb
mov
fistpl
jno
jle
aaa
adc
jns
fwait
bound
xchg
ret
pop
add
lcall
cmp
test
pop
and
pop
shrl
out
repz
lock
jbe
and
out
mov
mov
pop
cs
test
push
repnz
push
cmp
pop
adc
or
jns
cmpb
call
cmp
and
adc
ret
or
icebp
jmp
jmp
sbb
dec
and
xchg
dec
cmp
movsl
imull
inc
sbb
mov
jb
int3
imul
daa
arpl
add
cmp
ljmp
adcb
adc
aas
pop
xchg
rcrl
mov
push
pop
icebp
xchg
setp
cmp
xlat
jle
pop
aas
ds
aam
loope
rcll
leave
hlt
fldt
push
mov
or
outsl
std
fwait
and
or
movsb
lcall
loopne
add
add
pop
es
mov
das
pop
mov
adc
adc
loopne
push
xor
je
mov
dec
cmp
and
add
repz
out
cmp
or
and
jge
rorl
test
dec
mov
adc
outsl
gs
imul
xor
push
push
jb
imul
mov
adc
enter
fsts
cli
and
gs
xlat
push
fwait
shlb
xchg
or
aas
mov
or
xor
lret
or
xor
mov
or
js
gs
and
mov
adc
sbb
add
test
jg
xchg
sub
inc
jbe
sub
and
and
sub
jge,pn
mov
int
jne
or
js
adc
xchg
clc
sbb
fxam
jbe
mov
scas
pop
imul
adc
ret
lahf
bound
jg
mov
ss
clc
inc
jo
xor
movsb
inc
js
jmp
push
das
int
lods
jg
mov
sahf
mov
cli
adc
xchg
xlat
cmp
loopne
fadd
int
imul
loopne
xorb
test
pop
clc
stos
or
and
adc
shlb
sti
adc
lods
loop
inc
fistpl
enter
fdivs
jp
mov
ds
push
xlat
lahf
inc
sahf
add
mov
mov
push
lds
and
jno
fisttps
std
les
mov
xadd
add
aad
mov
sub
mov
pop
adc
push
loop
and
inc
pop
faddl
sub
xlat
aad
shll
sbb
rcr
or
cli
xchg
andb
jg
bound
xlat
leave
aas
aaa
icebp
adcb
pushf
stos
bound
popf
test
xchg
push
faddp
popa
cmp
stos
popf
sbb
sbb
repz
pop
test
fcmovne
sti
inc
decl
inc
mov
dec
xor
fmull
mov
fistpl
repz
sbb
push
mov
arpl
or
mov
cmp
inc
sbb
hlt
push
pop
stos
ja
dec
sbb
loope
mov
cmpsb
in
fildl
leave
je
xchg
sbb
notb
sub
push
in
arpl
mov
xlat
mov
cmp
dec
pop
loopne
xchg
mov
sbb
push
xchg
jp
fildl
test
fwait
loopne
fyl2x
jmp
jnp
icebp
fistpll
sti
rorb
inc
insb
sti
test
sbb
cwtl
cmc
pop
cmp
xlat
gs
sub
pop
jmp
addb
pop
nop
shll
and
ret
das
add
dec
flds
sub
hlt
xchg
push
dec
mov
push
push
xor
inc
fdivl
add
dec
sub
xor
repz
cmpsb
mov
mov
pop
lret
push
or
dec
lahf
mov
push
xchg
mov
and
sbb
xor
push
cmp
sbb
pop
cld
ds
out
imul
push
adc
lret
dec
xor
pop
add
push
pop
ljmp
aaa
sbb
cmp
cs
mov
pusha
jbe
pop
xchg
push
mov
push
rolb
cld
jb,pt
popa
ja
je
or
xchg
inc
xchg
lahf
leave
jno
movsb
arpl
mov
out
pop
out
pop
push
je
ja
icebp
mov
bound
xlat
rcr
or
dec
arpl
push
insl
xchg
pop
dec
jle
jmp
inc
push
imul
push
and
icebp
lret
fcmovne
mov
rcrb
imul
ljmp
pop
add
fidivl
mov
push
mov
cmc
sti
test
sub
pop
pop
out
leave
cli
xchg
or
xlat
jns
mov
mov
mov
mov
sub
loope
mov
popf
push
jmp
out
es
adc
inc
ljmp
mov
mov
and
xor
je
imul
jmp
pop
pop
mov
lcall
popf
rolb
jl
xor
xlat
dec
aam
add
cmp
cmp
mov
outsl
rcrb
in
xchg
sbb
fs
dec
mov
sub
mov
rorb
mov
mov
or
jo
pusha
sbb
imul
rclb
xor
ret
outsb
inc
int3
adc
fdivl
rcrb
out
jnp
cmp
sar
pop
stc
rol
ret
jne
push
popf
rol
mov
fisttpl
insb
jne
jae
imul
shrl
test
lods
xor
add
stc
inc
imul
mov
mov
sbb
push
jl
and
aam
and
test
insb
push
je
xchg
mov
cmpsl
imull
and
push
xchg
addr16
jae
pop
test
imul
sbb
cmpsb
xor
pushf
fsubrs
lods
sub
pop
jns
dec
clc
cmp
mov
or
pop
gs
mov
aad
dec
loope
test
and
imul
fistl
and
addr16
imul
cmp
arpl
es
pop
outsl
push
addr16
mov
adcl
inc
popa
pop
loope
test
inc
adc
popa
fninit
les
cmp
jo
pop
ja
xor
fistl
xor
xor
sbb
in
or
jmp
mov
ds
sub
xor
mov
cmp
jp
sbb
das
out
insb
cmp
or
ss
and
repz
jl
cmp
lcall
repz
hlt
es
insb
adc
cli
pop
fcoms
fnsave
mov
add
or
in
push
dec
sbb
pop
sub
cmc
xchg
sub
addr16
aam
addr16
push
cwtl
std
cld
xchg
push
push
outsl
je
push
cmp
lahf
xchg
into
push
push
stos
loopew
cli
sub
pop
sub
cmp
pop
and
inc
aad
pop
test
sahf
test
mov
mov
ss
imul
jmp
hlt
sbb
lock
push
filds
jle
inc
dec
iret
arpl
pop
add
mov
adc
fsin
or
test
mov
push
push
rorb
and
sub
dec
sbb
insb
fstps
addb
inc
pop
mov
or
sub
fdivs
loope
sbb
dec
pusha
lret
xlat
add
and
call
or
insb
sub
or
jle
mov
and
fldenv
lea
jle
ljmp
jne
inc
mov
fwait
xchg
ja
dec
lret
cmc
hlt
xor
out
hlt
push
cmpsb
xchg
or
fstpl
iret
sbb
push
movsl
jae
call
popa
push
ds
je
in
jmp
pop
cli
jbe
dec
in
mov
stos
int3
mov
insb
mov
cmc
aad
inc
and
in
imul
mov
and
pop
fistl
and
shr
test
sbb
arpl
pop
ljmp
into
pusha
dec
jmp
fwait
gs
test
push
std
cmpsb
mov
loop
lret
push
pop
jp
lret
pop
ljmp
sub
fptan
dec
xor
sbb
jp
sub
lret
test
mov
mov
das
xchg
sbb
push
sub
cmp
push
and
pop
sub
push
and
sub
pop
jb
lret
push
mov
jo
aaa
inc
ret
xchg
push
jl
dec
pop
pop
mov
jp
dec
imul
psubusw
test
ror
icebp
jl
imul
cmp
cmp
int3
pop
dec
push
in
jns
scas
xchg
push
jns
je,pn
xor
test
add
sti
dec
dec
cmp
cmp
add
mov
rcll
mov
mov
adcb
movsl
ror
mov
dec
push
push
pushf
push
or
xchg
inc
loop
aad
subl
daa
sbb
jl
out
cmp
scas
je
rep
aad
xor
pusha
push
inc
mov
and
mov
mov
out
mov
popa
push
jp
add
sub
lods
pusha
dec
mov
xor
imul
fcom
pop
mov
cli
push
mov
mov
push
idivb
cltd
inc
and
push
mov
mov
aas
adc
inc
sub
fsubl
jp
es
push
lret
rolb
sub
sarb
lods
stos
std
fcoml
ficoml
xor
push
aam
add
cmc
jcxz
xor
xor
cmp
aas
mov
stc
fldenv
add
leave
insl
xor
mov
mov
xor
jb
pop
sub
dec
jnp
xor
aaa
clc
mov
clc
inc
in
push
jmp
lea
sarl
mov
and
cmp
mov
imul
adc
mov
shll
addr16
jae
adc
in
pop
pop
pop
mov
cs
cs
loopnew
fisttpl
or
out
mov
inc
imul
jmp
mov
push
addr16
cli
dec
mov
pop
push
pop
add
inc
cmc
or
jg
inc
cmc
scas
int3
sub
les
cmc
cmpsl
cmp
fisttpl
jb
cld
sbb
dec
pop
sti
fistpl
xor
cmp
fnstcw
js
pop
leave
mov
pop
insl
jl
insb
stos
pop
push
add
in
push
sub
xor
int3
pop
xor
cmp
xor
rcr
mov
push
push
push
lcall
cmp
push
xor
sub
sbb
stc
into
shlb
add
je
jl
sub
fcoml
xor
or
sbb
std
in
imul
int3
inc
pop
xchg
jg
pop
test
mov
outsb
aaa
pop
popf
lods
mov
jae
sti
rcrb
xor
fstpl
std
in
jg
es
pop
into
sub
push
jp
and
lcall
test
jmp
push
andl
jg
ret
cs
adc
ljmp
lods
mov
xor
mov
ljmp
sub
mov
sub
mov
sbb
add
shll
ret
dec
fmull
push
test
int3
stos
adc
ret
xchg
cmp
mov
cmp
cmpsl
pushf
aaa
push
sub
pop
lea
iret
mov
outsb
testb
int3
test
xchg
xor
int3
xor
mov
lret
repz
ja
sub
push
jmp
xor
cld
sti
fsts
enter
dec
cs
aaa
or
lret
sbb
call
adc
in
in
xor
or
or
fistl
and
lret
imul
and
loope
dec
jb
idivb
rcrb
xor
stos
cmp
repz
bound
gs
sbb
sbb
notl
js
add
cmp
inc
ljmp
cmp
dec
dec
gs
cmp
int3
ret
jbe
mov
xor
insb
jmp
sbb
daa
push
push
or
aaa
push
cmpsl
es
daa
rolb
mov
dec
cmp
int3
xchg
push
sub
sub
imul
jmp
stos
xlat
adc
add
jb
ja
and
lahf
adc
xchg
test
mov
aam
xor
out
popf
mov
imul
add
fs
sti
in
test
cwtl
in
sub
pop
xor
daa
aad
dec
xor
aad
or
popf
test
dec
sub
mov
push
inc
pop
inc
repnz
jl
xor
sti
test
rcrb
sbb
sahf
ljmp
adc
inc
and
fmuls
xchg
jae
aas
jbe
mov
pusha
gs
movsl
or
push
fldt
in
dec
mov
mov
mov
sub
jae
xlat
dec
cs
arpl
pop
cli
dec
scas
shlb
jg
xchg
fldl
sub
mov
pushf
xor
pop
rcr
mov
cmc
and
dec
xor
and
sub
fimull
lret
ds
inc
cs
gs
test
xchg
ja
mulb
cmp
jnp
scas
into
mov
mov
imul
dec
imul
jp
es
sahf
sub
cmp
lcall
sbb
rcr
jmp
inc
test
pusha
cmpxchg
push
mov
push
and
fdivl
into
xchg
mov
sub
pop
mov
lock
ret
pop
push
adc
les
cmp
imul
mov
inc
cltd
mov
mov
fadds
insb
dec
aam
xor
mov
rolb
push
dec
dec
or
in
adc
stc
mov
mov
loope
sub
dec
mov
mov
push
mov
or
mov
ljmp
add
cmp
out
sub
sub
jo
div
add
gs
addr16
xchg
clc
sub
xor
fldcw
dec
xchg
ror
popf
push
adc
loopne
aaa
jno
rcrl
push
push
je
popa
cmc
inc
ljmp
sub
js,pt
adc
inc
iret
mov
test
inc
xchg
push
mov
sbb
negb
jae
pop
sub
adc
dec
or
xor
mov
les
ret
adcb
movsb
inc
push
inc
shrb
xor
test
insb
cwtl
aam
mov
lcall
flds
and
mov
inc
das
or
xor
addr16
xor
sbb
jnp
and
mov
xor
rcrb
mov
into
mov
fcmovnbe
ss
push
sarl
jae
repnz
mov
mov
aaa
cmp
sahf
testb
and
js
mov
pop
adcb
mov
ljmp
or
mov
cs
jle
or
mov
dec
iret
push
jb,pt
pop
xor
xchg
adc
daa
je
cmp
movsl
inc
stc
pop
cmp
rorl
cmpsl
or
das
jl
fcmovnb
dec
out
jo
dec
push
fstp
xchg
and
xor
rcr
pop
jge
dec
cmp
cs
pop
repz
loopne
test
pop
mov
int3
xor
dec
movsb
test
aad
insb
cmpsb
jbe
xchg
jo
jp
roll
mov
xor
sub
and
lods
daa
movsl
dec
xchg
sub
into
in
jb,pn
out
push
and
cmp
call
jmp
inc
enter
jns
dec
inc
mov
test
out
into
stos
daa
add
ss
jnp
mov
pop
fmulp
adc
xor
rcll
mov
and
sbb
outsl
sub
mov
int
cmpsb
insb
jmp
subb
dec
or
mov
sti
push
jns
add
js
rcl
mov
jmp
popa
daa
inc
cmp
je
mov
cmp
stc
shrl
inc
xor
aam
and
shlb
xlat
mov
nop
aas
test
fs
fnstcw
std
dec
dec
ljmp
repz
outsb
pop
fistpl
lods
and
mov
inc
test
sub
imul
jp
mov
fcoml
imul
test
mov
push
push
into
mov
and
sub
xor
lcall
jbe
sub
icebp
cmp
adc
xor
jle
cs
mov
pushf
mov
pop
lahf
cli
dec
rolb
std
and
jg
test
or
pop
push
sbb
mov
fidivs
mov
mov
jae
loop
mov
imul
xlat
adc
adc
pop
ja
es
jae
dec
add
inc
lret
xor
imul
and
push
dec
pop
inc
cltd
ret
mov
xor
inc
mov
xor
add
inc
repnz
cmp
outsb
and
push
push
jl
js
pop
jl
and
out
mov
addr16
pushf
pop
iret
fldenv
or
jg
pushf
aas
mov
imul
lods
xchg
mov
out
mov
repnz
sahf
xchg
int3
add
pushf
pop
or
pushf
pop
pop
lret
pop
mov
mov
mov
out
cld
aas
lahf
cmc
mov
fwait
or
mov
or
out
sbb
inc
mov
mov
jle
mov
jmp
xchg
or
and
jg
dec
aas
lahf
icebp
mov
pop
add
mov
pop
imul
jns
pop
pushf
push
push
jle
sub
test
cmp
dec
push
xor
fdivrl
mov
cltd
and
ss
and
jecxz
push
lods
sbbb
xor
fnstcw
mov
gs
push
xor
xchg
fsts
fldcw
ficomps
es
int3
jmp
mov
ljmp
loop
movsb
or
or
movsb
jmp
imulb
or
jb
sbb
movsb
sub
and
movsb
mov
ret
es
xor
in
mov
cmp
pop
arpl
lods
sahf
mov
push
pop
pop
push
repnz
push
pop
repnz
jp
push
repnz
sahf
xchg
mov
mov
gs
cmpsb
adcl
jge
jae
data16
mov
fisttps
cmp
aam
iret
xor
arpl
lahf
out
stos
sbb
add
mov
insb
inc
dec
xor
pop
mov
xlat
jmp
cmp
and
movsl
cmp
sub
mov
dec
mov
fdivr
pushf
pop
cmp
xchg
and
sti
mov
repnz
inc
bound
and
rorl
xchg
in
push
sar
push
push
les
adc
imul
outsb
ja
sbb
xorl
mov
sbb
xchg
sub
cmp
dec
mov
jl
mov
pushf
repz
cli
mov
insb
mov
cld
or
arpl
sub
inc
push
leave
arpl
pop
sbb
sti
xchg
add
jb
out
mov
aad
sbb
xor
bound
andl
int3
in
pop
pusha
xchg
fimull
adc
out
movsl
rorb
push
or
xchg
mov
lods
in
in
mov
nop
ret
or
leave
xchg
daa
ret
sti
fisttps
xor
popf
ror
out
cld
fs
insb
outsb
push
das
test
popf
dec
outsl
fdivrl
insl
data16
xor
xchg
cmpsb
roll
fwait
add
fwait
iret
sub
push
lahf
push
subl
mov
pop
xor
mov
pop
push
pop
mov
jmp
cmp
fs
sbb
pop
add
cld
data16
sbb
mov
inc
mov
sbbb
dec
repnz
jno
sub
pop
hlt
movb
pop
push
jbe
repnz
mov
imul
insb
stos
mov
xor
pushf
mov
mov
inc
pop
mov
jmp
push
cli
stos
es
stos
mov
cmp
push
fcmovne
and
cmc
sub
mov
mov
mov
pop
aam
cmp
outsl
pop
int3
mov
and
js
nop
sub
and
inc
bound
adcb
jp
and
add
sti
adc
jp
xchg
or
pop
sub
shlb
gs
add
inc
xor
pop
aas
sub
sti
cs
lcall
pop
mov
in
popa
sub
scas
cmpsb
inc
dec
xchg
xchg
sbb
int3
dec
iret
push
idivl
push
adc
jg
shrb
lea
push
adc
test
xor
lds
iret
and
inc
mov
les
xor
imul
mov
rorl
mov
in
xchg
xchg
jecxz
xor
sbb
int3
xor
cmp
add
stos
dec
mov
imul
cmp
fucomi
dec
cmp
mov
scas
or
jb
mov
outsl
fcmovnbe
lods
je
test
in
sub
mov
repnz
inc
test
jle
inc
ss
loopne
daa
pop
lret
push
and
in
cs
mov
inc
icebp
imul
sbb
rcrl
fwait
dec
fdivrs
fstpt
fisubrs
jo
mov
gs
adc
lret
add
and
xor
sbb
in
lcall
pop
mov
dec
pop
imul
insb
add
inc
xor
jmp
outsl
into
outsb
sbb
out
push
lret
dec
pop
ficoml
neg
xor
cmpsl
mov
inc
es
jne
fmull
mov
inc
rep
daa
mov
ss
push
inc
cmpl
pop
mov
cmp
mov
cmp
fcompl
and
lea
mov
fwait
mov
ja
inc
stos
sbb
jmp
shl
cld
addl
jle
hlt
in
imul
lcall
jb
idivb
cmp
pop
dec
dec
inc
pop
insb
pop
lods
push
icebp
sub
pushf
mov
fnstcw
push
out
and
sti
aam
hlt
dec
push
gs
std
jb
push
outsb
dec
in
rclb
cmp
pop
push
fistl
sbb
or
sbb
divb
mov
aas
mov
pop
ret
stos
xchg
push
pop
xor
and
sbb
dec
ret
or
out
clc
dec
mov
pop
jl
jge
adc
filds
push
into
inc
jg
push
push
repz
cmp
dec
jmp
push
jno
lods
aaa
jno
imul
xor
popf
xor
in
jle
into
inc
dec
pop
lret
pop
mov
adc
sbb
inc
jmp
sub
push
push
pop
mov
sub
jle
fsubrs
pop
mov
lret
daa
fmull
mov
xor
call
mov
or
mov
psrlw
nop
xchg
pop
enter
scas
je
cmp
gs
xor
add
outsb
cld
jmp
xor
subl
pop
mov
dec
inc
sbb
push
push
std
and
insb
sbb
imulb
inc
add
jl
xor
ds
aam
cltd
mov
insb
xchg
mov
cmp
push
dec
or
add
or
pop
sbb
inc
dec
cmp
jne
cmp
pop
jmp
mov
xor
push
lds
out
pop
out
fs
xchg
mov
in
xchg
dec
pop
lcall
cmp
test
jmp
or
jb
rcrb
cmp
cmp
xor
mov
xchg
mov
insb
addr16
jg
outsb
aas
mov
sarb
es
pop
and
pop
cli
ds
push
push
xchg
aas
cmp
fbld
cmp
add
fildl
mov
sbb
sub
add
cli
fcoml
rclb
ss
mov
push
jg
jmp
scas
jb
rclb
pop
imul
add
push
mov
sbb
std
dec
jb
pop
sub
mov
cmpb
jmp
sub
shlb
int
mov
xor
xlat
sti
test
sub
std
pop
imul
mov
fcmovnu
aas
push
adc
xor
out
jmp
pop
push
add
xorb
sub
lea
icebp
jne
add
es
pop
in
cmp
pop
iret
mov
orl
or
insb
lcall
sbb
and
push
mov
mov
lcall
fldt
inc
es
iret
inc
xchg
repz
inc
xchg
imul
xchg
jecxz
xor
push
mov
xchg
neg
sub
xor
stos
xchg
xchg
gs
cmpsl
gs
js
add
mov
imul
xchg
stos
movsl
or
insl
add
ss
xchg
cmp
or
jmp
xchg
cmp
les
or
dec
sub
ss
mov
pusha
stos
jge
or
push
and
fstpt
es
inc
inc
addb
lahf
sbb
jl
xchg
mov
idivb
dec
outsb
les
jl
cmp
out
lock
inc
cmpb
in
push
test
mov
imul
pop
scas
sbb
pop
imul
pop
xchg
mov
cmp
rcrl
push
sub
imul
push
xchg
jp
or
push
inc
push
xor
iret
inc
sub
insb
sbbl
mov
mov
out
mov
sub
cwtl
mov
lret
jmp
sub
imul
idivb
popf
jecxz
xor
imul
jg
repz
jge
sbbl
push
stos
ss
sub
dec
test
mov
xchg
sbb
lods
std
jbe
sub
sub
jl
insb
fldl
inc
xlat
add
iret
push
pop
push
xor
push
mov
out
add
cmpsb
mov
pop
test
dec
pop
data16
iret
leave
hlt
sbb
in
mov
popf
pop
fldlg2
rcrb
loopne
jb
and
push
cli
xor
in
pop
test
push
dec
sub
and
insb
sub
or
call
stc
pop
or
pushf
fnstsw
mov
mov
sbb
sti
fistl
movsl
sar
cmp
xor
push
adc
pop
sub
popa
pop
pop
jo
jno
xor
or
fimuls
sub
jnp
addr16
sbb
cltd
fldl
sub
mov
mov
push
mov
cmp
and
and
mov
sub
orl
mov
add
outsl
iret
cmp
xchg
stos
push
call
pusha
mov
dec
leave
jg
lock
aad
pop
insb
mov
or
ret
pusha
xchg
pop
cmpsb
ret
scas
int3
xchg
dec
hlt
addr16
and
mov
xor
push
roll
pop
in
dec
mov
je
cmp
scas
xlat
sub
cmpsl
ja
fistpl
push
sub
cmp
fcmovnb
mov
mov
push
push
gs
ja
sub
fstpt
jno
out
enter
xchg
je
faddl
push
dec
sub
loop
and
push
mov
lret
out
xchg
mov
xchg
push
cmpsl
push
push
ret
cli
cmp
cli
mov
pop
cmp
xchg
push
sub
mov
jmp
sub
sub
and
cmc
mov
enter
cmp
clc
mov
lods
inc
sub
jbe
inc
cmp
adc
rcrl
jns
mov
mov
sub
xchg
cmp
pop
add
mov
add
call
cmp
cmp
iret
jno
lahf
mov
mov
sub
das
outsl
mov
xorb
es
testl
pop
and
cmp
jp
loopne
sub
mov
push
jge
mov
divb
stc
sub
adc
add
addr16
ja,pn
ret
cli
cmp
in
add
fildl
test
ret
ret
or
xor
and
clc
mov
gs
inc
or
dec
mov
stos
push
pop
adc
cmpsl
gs
fwait
lcall
cmc
cmp
out
es
add
push
mov
pop
repz
cwtl
ss
pop
mov
cmp
push
xchg
dec
movsb
jl
fiaddl
je
sub
fcoml
popa
adcl
imul
cmp
add
loopne
or
mov
push
fists
int3
leave
outsb
jge
stc
cmp
sarb
pop
jb
jecxz
push
mov
sub
repz
adc
and
test
arpl
xor
inc
jno
xlat
dec
push
jmp
mov
outsb
xchg
push
sub
ret
sbb
cmpsb
push
sti
add
sbb
mov
cmpsl
or
cmc
xchg
mulb
and
dec
or
cmpsl
inc
dec
jle
jae
iret
cmp
jge
scas
into
add
mov
cs
jge
cmpsb
add
pop
jl
jp
sti
js
out
jp
xor
lret
shrb
pop
xor
pop
fstpt
adc
imul
imul
stc
sub
push
jne
push
jmp
stc
stos
pop
dec
sub
xchg
imul
xchg
sub
mov
cwtl
idivb
mov
xchg
repnz
imul
xchg
inc
xchg
es
xlat
pop
ret
fsubrs
test
dec
xor
fmulp
dec
je
andb
xchg
mov
pop
imul
sbb
sub
jecxz
fs
rorl
das
hlt
xchg
std
jle
mov
pop
jge
mov
xchg
cmp
mov
push
popa
sbb
dec
rclb
mov
inc
imul
adc
test
lock
repnz
fwait
ja
fwait
jmp
jge
adc
mov
or
sti
fcmovnb
xchg
fwait
sbb
jge
stos
xchg
cmp
pop
les
push
xor
mov
fildl
mov
outsl
wbinvd
sbb
out
pop
scas
pop
mov
fcomi
nop
push
dec
jl
out
push
gs
push
outsl
cmpsb
jge
dec
xchg
ret
outsb
shlb
jns
dec
imul
fcmovne
or
movsb
xchg
divb
adc
jp
cld
push
or
sti
popa
gs
jne
mov
push
jle
imul
cmp
andb
sbb
mov
out
lret
sub
mov
xorl
cs
out
jo
test
hlt
ja
cmpsl
cmp
xlat
xchg
xchg
push
ss
or
ss
int
aaa
jae
xchg
pop
pop
test
pop
stc
fs
imul
xor
imul
cmpsb
push
fstpt
and
pop
lods
cld
fistpl
adc
dec
lret
imul
stc
mov
pop
test
fs
les
xchg
pop
sub
inc
fisttpl
xchg
addr16
leave
pop
jb
mov
cmp
pop
pushf
or
sti
fisttpl
in
mov
arpl
negb
test
jb
jecxz
mov
insb
push
pop
or
adcb
imul
jne
inc
sub
js
adc
in
out
lods
mov
mov
sahf
aam
pop
mov
jns
cs
dec
sub
iret
xor
imul
xor
mov
outsl
addl
je
jge
sbb
xchg
mov
xor
xor
cmp
insb
jno
adc
cmp
push
shll
mov
push
add
call
inc
cmp
arpl
pop
cmp
loop
mov
adc
mov
pop
lret
stos
sbb
iret
cs
xchg
sbb
xor
mov
jg
fsubl
xchg
sub
pop
shlb
imul
mov
xor
fistpl
fs
push
pop
dec
jns
ret
and
rcrb
fsub
adc
cmpsl
gs
cmp
insb
ret
dec
pop
inc
dec
test
mov
push
lret
addr16
pop
mov
pop
imul
and
pop
add
pusha
arpl
jmp
lret
femms
daa
bound
jl
loopne
insb
addr16
add
adcb
test
in
aaa
jmp
fsubl
lret
push
fistpl
arpl
jmp
inc
aaa
fadd
sbb
adc
ja
jl
inc
enter
fwait
adc
ror
inc
push
repnz
jb
pop
fstpl
fdivrs
ljmp
pusha
adc
pop
jp
jbe
scas
xchg
adc
inc
cmpsl
xor
push
and
or
sbb
or
loopne
hlt
fsubrs
mulb
push
and
scas
or
cmp
ja
xchg
jns
addr16
adc
sub
imul
jge
mov
jbe
xor
fcomi
push
das
sub
inc
sbb
cld
out
sahf
push
sti
jne,pt
mov
popf
sbb
push
push
daa
shrl
mov
iret
pop
sub
repnz
ficomps
sub
inc
clc
shlb
cs
iret
stos
lea
aad
je
iret
cmp
adc
mov
and
lahf
clc
fists
je
xchg
inc
cmp
das
imul
sbb
cld
xor
nop
lcall
loop
xchg
xchg
sti
dec
insb
fwait
out
cmp
xor
adc
pushl
or
mov
sub
add
arpl
loopne
mov
mov
pop
pop
ss
pop
fistps
mov
cltd
mov
pop
popf
jmp
mov
mov
imul
in
xor
cmp
sbb
pushf
inc
and
loope
mov
in
ljmp
movsb
shll
jnp
sbb
mov
pop
out
push
xchg
repz
bound
xor
daa
aaa
mov
jno
xchg
xchg
cmp
pop
dec
dec
out
xchg
jns
sub
add
mov
add
cmp
test
jle
daa
aaa
leave
pop
or
test
mov
cmp
dec
test
arpl
jns
or
dec
dec
popa
outsb
mov
lret
xor
lcall
sub
stos
or
push
xor
popf
jecxz
or
lock
pop
es
dec
cmp
into
xchg
mov
jge
ss
pushf
lods
inc
xor
daa
icebp
stos
mov
xlat
pop
inc
fsubrl
jnp
ss
sbb
in
and
cmp
add
or
xor
fwait
dec
adc
ss
scas
jno
or
pop
xchg
jg
sbb
jbe
ficompl
cmp
ret
mov
loop
nop
int
insb
lahf
and
imul
mov
inc
es
cmp
in
or
cltd
pop
ds
or
fsubrs
repz
pop
mov
pop
xor
movsb
xor
xor
mov
push
aad
xor
out
mov
andl
ss
or
ja
ret
mov
xchg
sbb
movsl
push
inc
shlb
cmp
aad
jb
sbb
ds
sarb
add
xor
loopne
pop
scas
jl
aaa
adc
lret
mov
inc
and
xor
outsl
jp
pop
dec
mov
les
jb
sbb
rcr
or
in
rorl
pushf
jbe
lret
xor
xchg
or
jne
push
or
and
mov
loope
mov
lock
jns
imul
bound
xor
or
push
clc
inc
dec
sub
sub
mov
sbbb
mov
scas
pop
rcrl
add
aas
xor
cmpsb
pop
xchg
jle
sub
repnz
pop
loope
ljmp
stos
push
jge
push
fistl
xor
mov
adc
push
or
xchg
test
aad
jb
push
lods
lods
fnstsw
dec
sub
arpl
rcrl
xlat
data16
sub
xor
sub
fwait
cmpl
xchg
xor
iret
or
mov
je
sub
mov
push
jbe,pt
xchg
loop
push
xor
loopne
sbb
outsb
lods
jg
in
mov
fisttps
ljmp
sbb
outsb
push
test
add
jbe
addr16
test
adc
pop
push
add
add
jnp
cmp
ja
mov
cwtl
push
add
sbb
push
and
add
and
mov
aaa
cmp
test
xor
iret
push
rcr
mov
ret
jbe
leave
and
add
cs
in
leave
xlat
bt
cmp
je
dec
imul
add
pop
stos
jb
cmp
sbb
outsb
xor
xchg
pop
pmulhw
sub
xor
adc
push
mov
cmp
sarb
or
and
xchg
ret
cmc
pop
and
xor
push
mov
adc
inc
js
push
push
aam
jb
cmp
sbb
jb
test
push
mov
jge
cmpsl
sbb
push
mov
gs
jp
cmp
out
dec
mov
push
fstpt
xorb
aas
mov
sub
out
andb
ret
pop
repz
add
mov
cmpsl
pop
rcl
jmp
xchg
cmp
sti
mov
or
test
adc
dec
adc
popa
push
mov
jne
fistpl
je
and
dec
xor
jae
or
cmp
cs
sahf
cltd
hlt
sarb
loopne
std
or
push
pop
orl
cwtl
inc
cmp
xchg
jp
xchg
int3
inc
test
dec
mov
push
repz
xchg
stc
lret
jno
mull
push
fsubrl
gs
outsl
sub
or
sub
pop
pop
int
popf
cmp
xchg
insb
out
mov
mov
hlt
sub
mov
dec
andb
idiv
pusha
ja
je
lds
push
stc
fisttpl
pop
and
mov
mov
jne
xor
shlb
fildl
incb
push
dec
imul
sbb
inc
cmp
adcb
add
or
xchg
jnp
sbb
pop
and
add
fistl
repz
sbb
bound
enter
inc
xor
gs
imul
fildll
push
pop
enter
mov
gs
pop
jecxz
popf
pop
lret
jb
or
cmp
imul
lret
ss
xchg
xor
inc
and
in
inc
or
mov
gs
stos
test
ficompl
je
pushf
daa
outsb
clc
xlat
jp
std
xchg
add
inc
je
lods
adc
gs
push
ret
scas
in
fmull
pop
sub
pop
jp
test
xchg
mov
xor
pop
inc
sub
repnz
and
cmp
cs
xor
loope
inc
inc
fstpt
inc
push
dec
fldl
frstpm(287
add
andb
push
mov
jne
pop
inc
push
js
adc
std
les
pop
rcrb
or
out
mov
das
cmp
in
jns
xor
push
sub
sarl
enter
lret
cmp
push
mov
les
lret
add
loop
push
add
stos
inc
pop
test
test
shl
and
loop
aam
xabort
xor
or
out
dec
sub
jae
xor
divb
jb
cmc
out
test
or
add
adc
lods
lcall
mov
inc
clc
clc
data16
mov
data16
mov
inc
fistpl
sub
xor
add
lods
pop
xchg
cs
mov
mov
es
sub
adc
or
dec
lods
or
sub
idivb
cmp
dec
lcall
pop
xor
call
loope
push
add
xor
mov
lods
in
rcl
xchg
hlt
lods
shr
pop
push
ret
or
sub
sbb
andl
fucom
lods
pop
das
mov
outsb
daa
jno
test
andl
int3
cld
lahf
data16
popa
xchg
icebp
cmpsl
loop
lret
out
mov
ljmp
das
scas
add
fwait
into
vfnmsub132ss
pop
sub
fucomi
inc
dec
movsb
fists
imul
bound
stos
jns
adc
push
adc
out
or
push
jns
lods
test
outsl
fiadds
jge
scas
clc
jb
cli
hlt
lcall
mov
push
dec
and
cs
mov
push
leave
int3
shlb
cld
clc
and
xor
adc
clc
or
mov
push
push
ret
cmp
loop
dec
xchg
pop
mov
loop
adcb
shlb
in
fnstsw
pusha
mov
mov
xchg
mov
inc
imul
jg
mov
gs
lds
xor
out
test
sub
jbe
sub
sti
test
add
movsl
repnz
cmp
cmpsb
fiadds
xlat
cs
es
xchg
out
jb
addr16
xchg
add
mov
nop
sbb
ja
scas
pop
cmp
xchg
sub
mov
xchg
negl
mov
ds
push
adc
xor
in
xor
xchg
xchg
addl
fistpl
stos
jns
call
or
inc
inc
xchg
cmc
jno
mov
xchg
xor
dec
pop
cmp
ljmp
adc
cmpsl
xchg
jno
or
js
ja
dec
lret
ss
cmp
fstpt
or
push
sti
xchg
inc
out
fwait
cmp
mov
jle
adc
cmp
out
sbb
inc
mov
test
jmp
insb
or
lods
sti
sahf
jns
dec
inc
adc
push
sahf
mov
xchg
cmp
lret
ss
outsl
mov
sub
test
pop
or
dec
xchg
inc
mov
fldt
adcb
inc
addr16
xchg
or
cmp
mov
push
mov
inc
inc
mov
andb
xchg
xchg
shll
mov
mov
je
add
pop
jmp
sti
or
in
xor
and
mov
or
lods
fcmove
cld
gs
xor
adc
or
shl
repz
imulw
pop
and
lds
cltd
pop
fscale
sub
xchg
pop
out
sub
adc
imull
js
rcll
or
xlat
cli
xor
shll
rorb
ljmp
xor
adc
inc
jl
xor
xchg
or
pop
xlat
and
mov
xchg
or
jmp
push
clc
call
cmpl
and
jmp
aas
je
mov
lcall
addr16
inc
lods
movsl
pushf
out
imul
pop
cld
fildl
lret
mov
cs
cmp
mov
ret
notb
cld
cmp
dec
push
cmp
jmp
and
shrl
add
xchg
xor
xor
and
xchg
lock
mov
add
scas
aas
int3
stos
pop
outsl
mov
push
dec
mov
push
imul
jns
inc
jae
mov
call
fcomp
add
mov
dec
cwtl
adc
mov
fidivrs
inc
imul
add
dec
imul
ds
mov
popa
and
repnz
mov
add
cmp
pop
leave
data16
mov
mov
sbb
pushf
punpckhwd
sbb
test
xchg
add
arpl
inc
xor
pop
or
ret
or
xor
mov
test
inc
fisttpll
ss
cmp
test
cs
mov
xor
jb
mov
cmp
dec
icebp
or
out
sub
fstp
xor
ret
in
xor
int3
push
nop
inc
lret
mov
cs
cmp
jmp
loopne
es
jne
sbb
cmp
adc
mov
js
rolb
sub
lock
mov
add
pop
dec
push
js
fildl
mov
and
sbb
cmp
push
in
adc
pop
in
addl
movsb
dec
add
cmp
rorb
or
dec
fldt
inc
dec
mov
fdivl
cld
imul
scas
sub
sbb
stos
es
ret
insb
pop
test
fnstsw
mov
inc
sar
sub
loop
ss
andb
and
fisttpll
clc
ficomps
pop
icebp
push
fcompl
lcall
test
notb
sbb
mov
mov
jno
rol
cs
mov
mov
mov
lret
push
add
in
ffree
pop
jmp
imul
daa
cmp
push
testb
pop
xchg
je
daa
jbe
loope
dec
mov
addr16
xchg
pop
sbbb
cmp
ss
dec
mov
cmp
std
adcl
inc
lock
mov
addl
or
inc
sbb
mov
add
idivb
mov
and
mov
add
cmp
mov
in
inc
fldl
cmp
fcomps
sbb
pop
and
inc
test
pusha
and
push
insb
mov
outsb
and
repnz
dec
cmp
lcall
push
push
sti
mov
cltd
jno
mov
arpl
jns
mov
fwait
mov
jns
test
dec
fstl
sub
push
pop
cmp
fildl
icebp
inc
pop
das
dec
pop
push
imul
in
imul
mov
jle
push
xor
mov
cmp
ficompl
jb
in
jns
cmp
push
add
les
mov
std
pop
ljmp
orb
lret
outsb
cs
fnsave
nop
movsl
dec
sbb
cld
fistl
sbb
inc
add
cmpsb
pop
fisubl
daa
addr16
addl
fcmovnu
les
or
pop
ss
fs
clc
push
jo
inc
sti
sbb
pop
lea
add
fistps
sahf
cmp
mov
fwait
sub
mov
pop
imul
out
js
cmc
or
js
lcall
lea
movsl
gs
popf
inc
aam
imul
cs
jmp
push
roll
cs
mov
cmp
clc
mov
pusha
popf
outsl
fildl
icebp
dec
jno
or
fucomi
out
sub
std
push
jns
or
imul
jns
jge
rcr
ljmp
push
aad
sbb
aad
jae
xor
test
jge
push
sbb
inc
or
mov
sti
cmpsl
nop
push
xchg
shlb
jg
ds
lock
xlat
inc
dec
dec
imul
lds
xor
and
push
pop
movsl
aad
sbb
mov
dec
testb
iret
jo
ds
shlb
xor
or
out
imulb
xor
lea
pop
pushf
cmpsb
repz
jmp
push
jl
push
sub
sti
cmp
fsubr
dec
xchg
mov
add
bound
inc
mov
sub
inc
imul
ficoml
jle
sti
fcmovne
push
test
out
mov
sub
je
cmp
xchg
ret
or
nop
mov
mov
test
inc
testb
jae
fisubs
mov
sbb
xchg
popa
movb
rcrb
int
dec
cmp
and
movsl
pop
mov
cmp
push
iret
and
clc
inc
fldcw
div
xchg
je
mov
int3
and
je
shl
push
xchg
fistpl
sti
mov
imul
lods
dec
icebp
mov
lea
mov
lcall
int
arpl
mov
imul
bound
sti
jmp
push
les
fildl
xor
ret
cmp
mov
fistpl
ret
lods
mov
imul
pop
cmp
pop
pop
sub
pop
mov
movsb
shlb
sbb
and
cmc
xor
and
fimull
sbb
sbb
xchg
mov
pop
mov
pop
sub
add
into
stos
clc
cmp
and
mov
xchg
inc
test
sub
pop
inc
std
test
es
cld
fisttpl
hlt
cmp
dec
lcall
aas
dec
imul
ja
add
xor
mov
movsl
fistpl
mov
cmp
test
lret
test
mov
stos
ret
pop
fisttpl
imul
out
inc
jle
push
int
inc
gs
or
in
mov
fwait
sbb
clc
loop
clc
std
test
test
out
jno
in
cmpsl
or
repz
or
inc
out
cmp
negb
add
pop
jmp
ss
lret
sbb
shll
sub
jmp
push
jbe
aam
mov
stos
mov
jb,pt
pop
sbb
mov
mov
mov
xchg
mov
sbb
sub
dec
ss
shll
sbb
fldcw
jne
push
repz
xchg
inc
test
xor
iret
out
fldt
jne
sti
shll
imul
divb
addl
aaa
mov
xor
dec
inc
adc
cmp
add
xchg
mov
or
lea
sti
imul
pop
lock
or
ds
dec
fcomip
popa
or
and
int3
addr16
inc
jmp
mov
ds
dec
inc
dec
pop
ret
pop
leave
xchg
stc
push
cmp
adc
and
mov
pop
mov
scas
pop
mov
sbb
mov
xchg
cmp
aaa
in
push
xor
xor
jmp
adc
fisubrs
cmp
nop
inc
adc
std
test
jbe
sbb
fidivrl
test
dec
scas
sub
sar
fmul
sti
cmp
ret
xchg
ja
clc
xor
enter
and
xor
push
adc
jmp
sub
fcmovnb
lods
mov
and
fcmovne
jne
dec
icebp
jno
push
test
jge
test
sub
fisubl
outsb
dec
nop
insl
inc
pushf
jno,pt
push
insb
lret
fists
pop
subl
pusha
ret
lret
test
xlat
fs
int
mov
mov
push
xchg
movsl
jmp
fistpl
aaa
es
or
pushf
jb
insl
jo
push
jno
in
hlt
sub
push
in
cmc
roll
sub
test
test
cmp
idivb
push
icebp
mov
mov
inc
push
rcrb
cmp
das
add
pop
jns
and
ds
test
dec
mov
shll
shlb
fistpl
scas
adc
notl
lret
or
lret
push
dec
mov
sarl
lcall
mov
or
sub
sub
cmp
mov
insb
push
pop
into
inc
sbb
imul
jns
lods
xchg
mov
push
divb
and
je
jmp
mov
pop
mov
scas
ficompl
outsl
test
push
int3
mov
fiaddl
pop
leave
gs
fisttpl
movsl
push
sub
push
xor
mov
inc
pmaxub
js
mov
enter
test
std
or
out
or
loop
push
enter
andl
dec
mov
mov
xor
fdivrs
rolb
mov
sbb
fildll
pop
cltd
cmpsl
cmp
js
fcomi
add
inc
enter
dec
sti
sbb
or
js
xor
or
cmp
adc
jno
add
lods
pusha
lahf
pop
ljmp
stos
test
push
and
dec
scas
mov
sbb
mov
cli
cmc
mov
es
cmpsl
push
pop
fwait
inc
inc
gs
xchg
push
mov
insb
ja
ret
or
sbb
fisttpl
cmp
js
mov
lods
test
sbb
imul
jecxz
sahf
mov
sti
imul
imulb
adcb
dec
clc
mov
fdiv
cmp
or
or
sbb
sub
push
enter
stc
inc
mov
enter
lea
add
cmc
sbb
js
outsb
push
mov
lcall
mov
js
dec
cmc
fs
movsl
push
sahf
enter
test
and
jp
and
icebp
loop
movl
mov
xor
add
cmp
pop
add
lock
mov
jno
xchg
icebp
push
stos
jbe
xchg
repnz
lcall
addr16
fwait
cmp
mov
jns
xchg
test
std
lods
pop
cmpsl
and
jno
stc
mov
test
or
js
xor
lret
cmpsb
nop
xchg
add
sbb
sbb
sub
sub
outsb
cmp
dec
mov
cmp
push
inc
clc
test
outsb
push
pop
lea
in
outsb
dec
decl
fiadds
pop
adc
stos
bound
addr16
sbbb
add
nop
cs
jmp
clc
pop
cmp
fildl
jb
cld
sub
dec
add
cli
inc
test
mov
bound
jp
cmp
and
stc
and
int
mov
jns
aad
dec
or
std
test
int
xor
cmc
xor
aas
clc
sti
clc
insl
and
clc
cs
pop
outsl
daa
mull
fldt
mov
fdivl
mov
test
mov
ret
es
fs
pop
adc
inc
jno
or
fldt
clc
test
lret
xor
sbb
pop
shrl
ss
mov
fdivrl
jns
lret
jne
pop
in
cmp
in
jb
in
xchg
lods
sub
mov
dec
mov
and
lret
in
xor
int
imul
mov
mov
push
mov
js
lds
cli
iret
int3
test
enter
mov
pop
xchg
out
add
push
xchg
pop
mov
dec
shll
sub
push
dec
adc
stos
pop
cmp
into
daa
pop
push
mov
popf
insl
stos
cmp
dec
xor
xor
sbb
adc
out
popf
stos
movsl
gs
mov
stos
or
int3
ficomps
push
dec
ret
and
js
adc
dec
mov
and
lock
stos
ret
pop
pop
test
dec
fidivl
push
mov
sbbl
out
cltd
inc
mov
and
imul
dec
mov
nop
pop
jae
test
cmp
jo
or
pop
lahf
push
fidivrs
push
popf
hlt
xor
jb
or
imul
scas
jno
pop
fildll
outsb
ret
jno
xchg
outsb
cmc
js
popf
stos
fldt
add
loopne
and
xchg
outsl
les
fisttpll
pushf
outsl
pop
xor
aad
mov
pop
aaa
cld
imul
jno
xchg
xchg
push
data16
xchg
push
in
out
jl
mov
hlt
stc
add
fiaddl
lret
stos
cs
sub
pop
push
adc
pop
inc
cmp
imul
fstpt
aaa
imul
pop
fstpt
sub
jae
jmp
ljmp
stos
jne
fstpt
mov
idivl
stos
lahf
push
xchg
push
pop
sub
scas
sub
negl
inc
dec
dec
sub
stos
hlt
cmpsb
cmp
or
movsl
add
sbbb
rcrl
cli
mov
jmp
subl
addr16
in
jns
sahf
or
or
repz
cmp
test
cltd
pop
jb
cmp
xchg
push
inc
mov
inc
xchg
ret
xchg
lcall
fcomi
ja
push
pop
subl
cmp
outsb
arpl
fistl
popf
sarb
test
mov
sbb
stos
add
pusha
add
jg
dec
xchg
mov
sti
mov
test
ja
sub
add
mov
pop
int
push
mov
jge
lahf
or
icebp
sbb
xchg
cmp
leave
xor
out
inc
call
cs
imulb
fisttpl
xor
xor
adc
out
adc
imul
sbb
fwait
cmp
xor
mov
adc
dec
les
cwtl
fdivrs
jle
jbe
loopne
lahf
mov
jge
mov
es
sub
das
cmp
lods
xchg
push
in
mov
push
or
fcoml
dec
dec
loope
pop
fs
lret
jge
in
add
xchg
add
int3
shl
jmp
js
repnz
pop
mov
xchg
cmp
dec
mov
cmp
dec
sarb
insb
xchg
or
cmp
dec
mov
cmp
int3
pop
push
aad
leave
pop
sub
daa
aam
movsl
or
or
scas
mov
pop
outsl
into
mov
push
pop
inc
mov
cli
jae
sbb
cmp
adc
nop
jp
mov
mov
xor
mov
lods
ret
ss
xor
out
fimull
stos
push
pop
out
mov
outsb
jns
test
sahf
mov
push
hlt
sbb
or
dec
jge
pop
out
cmp
jmp
push
rcrl
fimuls
cmp
arpl
lea
inc
adc
fadd
cli
pusha
push
add
xor
or
jecxz
adc
aam
jmp
sti
cmp
inc
in
jns
jo
xor
int3
mov
popf
push
ficompl
sarb
out
add
jb
pop
fnstsw
imul
fildl
and
es
mov
sbbb
icebp
aaa
pop
xor
mov
add
jbe
pop
jns
cs
sbb
lock
es
clc
lea
addl
or
in
ret
out
sahf
sub
loop
or
and
sub
pop
jl
js
push
lret
addr16
and
scas
lea
js
sub
push
dec
lret
std
imul
into
fdivr
gs
subb
in
fistpl
incl
call
in
daa
cmp
int3
or
out
cmp
les
mov
out
jg
fdivrl
test
mov
in
fbld
imul
out
xchg
sahf
mov
cmp
jno
jecxz
out
cltd
sbb
push
stc
mov
add
dec
and
shr
mov
repz
fsts
ds
call
push
out
lret
arpl
jns
ret
sbb
arpl
hlt
jb
out
mov
jns
cld
lds
push
sti
mov
std
adc
sahf
add
les
std
cmp
mov
lcall
mov
and
into
out
mov
push
sbb
arpl
lret
pop
inc
sub
bound
jns
mov
mov
dec
stos
cwtl
fnstcw
rclb
cmp
imul
push
scas
sti
sti
sub
mov
imul
jne
data16
outsl
fcmovnu
cmp
jno
push
je
xchg
mov
sti
mov
ja
loopne
sub
gs
data16
aaa
stc
popf
push
mov
cmpsb
mov
jb
push
andb
aam
add
xlat
ja
iret
ljmp
fs
outsl
pushl
cmp
mov
sbb
pop
mov
mov
push
repz
cwtl
pop
dec
cmp
ss
mov
popf
push
push
xor
lret
pop
and
insb
cmp
push
mov
js
xchg
push
cmpsb
rolb
mov
xlat
and
ret
adc
or
shrb
mov
xor
in
sub
push
mov
dec
pop
sbb
fmul
cli
mov
cmp
outsl
lods
jns
push
addr16
xlat
mov
pushf
rcr
rcrb
jle
cmp
add
sub
jmp
leave
mov
movsb
pop
fwait
out
ljmp
jbe
push
and
lods
xor
enter
cmp
sub
fucomp
xor
pop
pop
outsl
fisttpl
and
aam
and
fisttps
mov
push
sub
lahf
and
pop
and
sarb
fsubrs
or
inc
lret
pop
mov
xchg
std
ss
scas
pop
rcr
dec
mov
pop
fsubl
cmpsb
lods
dec
jmp
xchg
mov
and
cs
mov
sti
and
scas
or
or
pop
and
mov
push
ljmp
cmp
cmp
pop
sbb
jns
mov
cmp
jne
out
into
dec
ljmp
rcrl
jecxz
push
lock
sub
and
inc
std
lods
test
outsl
mov
mov
daa
fnstsw
add
mov
fwait
mov
ja
jns
adc
out
xchg
inc
cs
lods
lea
mov
mov
js
adc
push
int3
aad
ret
xor
std
cmp
cli
imul
and
jge
and
or
xchg
cmp
pop
outsb
es
std
sub
mov
dec
mov
fldcw
cwtd
dec
add
jo
push
sub
sub
pop
fcmovnu
dec
arpl
lods
xor
icebp
lock
sub
in
jg
cmc
imulb
into
call
lret
sub
sbb
in
ror
loope
cmpsl
adc
add
pop
sbb
pop
xorl
jge
aas
jmp
sbb
mov
popf
ret
mov
je
sbb
les
xor
cmp
mov
sbb
mov
and
cmp
and
lahf
mov
adc
test
inc
xor
outsl
fcmovne
jns
scas
gs
orl
adc
je
out
stos
sbb
gs
jg
imul
je
arpl
outsb
sbb
ds
out
sbb
negb
ss
mov
lcall
adc
xor
push
mov
movsl
mov
push
xchg
ss
pop
inc
inc
mov
pop
and
aam
out
lret
xor
sub
mov
fcoml
dec
cmp
ret
xchg
dec
aaa
and
pop
and
push
daa
cmp
iret
push
dec
pop
cltd
test
loop
xor
and
push
dec
or
lret
pop
or
outsb
xlat
or
inc
mov
out
and
inc
jmp
fldl
ds
test
popf
stos
xlat
fs
mov
jne
inc
cs
outsl
cli
dec
or
cli
jb
outsb
js
das
fmulp
xchg
notb
ljmp
xchg
adc
pushf
mov
ffreep
in
test
xor
sub
push
mov
cmp
push
adc
fbld
mov
cwtl
jg
nop
xchg
test
jecxz
cmp
xchg
clc
mov
nop
dec
push
adc
mov
ja
inc
xchg
mov
outsb
fiaddl
in
dec
cltd
pop
inc
add
or
cmpsb
js
xor
pop
out
ds
sub
inc
xor
mov
add
mov
cwtl
and
push
mov
adc
sbb
leave
call
inc
mov
xlat
das
adc
add
mov
adc
hlt
and
mulb
cmc
dec
nop
push
js
push
arpl
inc
insb
mov
cld
add
das
add
imul
xor
mov
imulb
xor
ds
jb
stos
sub
sub
insb
test
xlat
and
sbb
js,pt
mov
lods
sub
or
xchg
aad
cltd
lods
stos
mov
lret
ljmp
add
loopne
xchg
add
add
push
je
std
enter
jle
sub
sbb
mov
pop
add
sbb
mov
push
jns
loope
or
push
shl
fwait
inc
movsl
cmp
pop
or
add
pop
cmp
mov
daa
test
das
sbb
rclb
data16
pop
and
cs
repz
inc
push
scas
jb
mov
lcall
mov
lock
data16
fimull
jne
add
mov
repnz
gs
jns
pop
sub
cmpsl
pop
jae
sub
mov
xor
mov
leave
mov
dec
or
mov
sub
jge
mov
pop
mov
and
jne,pn
dec
leave
test
xlat
and
sbb
push
imul
push
arpl
dec
sub
popf
push
mov
xchg
and
pop
jne
sarl
int3
jecxz
gs
sbb
xchg
cmp
lods
xchg
or
cmp
test
dec
test
push
test
xchg
mov
sub
jmp
push
inc
cmpsl
push
cmp
nop
cli
fcompl
sub
dec
sbb
or
inc
jbe
mov
and
jmp
popa
in
mov
lret
pop
cld
add
mov
fstpl
xorl
jle
mov
cmp
mov
or
mov
in
inc
movsl
lods
push
jge
lahf
and
in
mov
mov
orb
mov
inc
out
test
inc
ja
mov
dec
daa
imul
jno
mov
out
mov
fcoms
jbe
xor
cmp
enter
add
shrl
mov
inc
jno
test
add
leave
stc
outsb
add
imul
mov
mov
or
and
pop
pop
jmp
cmc
insb
cltd
push
out
pop
movsl
ss
aaa
or
mov
xchg
xchg
push
stc
ret
cmp
loopne
cmp
daa
push
jns
mov
sbb
push
fadds
xchg
push
push
pop
fimull
dec
dec
in
jg
cltd
adc
jge
test
mov
mov
leave
into
test
sub
fnstenv
pop
jmp
stc
gs
xorl
or
shrl
mov
mov
and
jg
sub
jge
je
cmp
bound
dec
dec
out
push
cmp
int3
pop
cmp
sbbb
jb
pop
jmp
idivb
test
cmp
mov
sahf
xchg
lcall
mov
in
dec
xorl
mov
test
lret
insb
jge
fcmove
fisubl
sub
inc
ds
xlat
xor
mov
dec
loopne
push
pushf
lods
dec
inc
dec
insb
ret
push
or
ret
pop
or
call
ljmp
mov
fdivr
xchg
out
cmp
fsubrl
sbb
dec
or
jle
xor
xchg
sub
out
sub
jle
dec
push
pop
dec
xchg
pop
into
out
pop
cmpsl
cmp
int3
imul
push
or
cmpsl
pop
mov
cmpsl
sub
cmp
sbbb
jb
pop
ljmp
jmp
and
pop
push
mov
cmp
sbbb
jb
pop
jmp
idiv
jmp
es
mov
sahf
xchg
sbb
sbb
gs
xchg
cmp
cmp
sarl
pop
pop
adc
add
cmp
insl
pushf
xlat
fisubl
add
jns
sub
cmp
and
dec
test
faddp
add
push
xchg
rcll
mov
dec
insb
push
je
dec
xchg
pop
push
lret
cmp
sarl
cltd
jb
sti
xlat
insb
aaa
sbb
push
inc
in
dec
and
lds
cmp
pop
or
mov
jb
cltd
sub
mov
sub
pushf
xorl
sahf
mov
push
dec
pop
lods
or
es
mov
int3
gs
mov
fmull
fstpt
in
int3
in
cmp
jb
insb
dec
popf
mov
or
ljmp
adc
gs
xorl
cmp
out
stos
insl
jge
dec
int3
dec
gs
imul
shr
in
sub
or
push
inc
es
jle
fldcw
iret
xor
lods
les
hlt
or
in
xchg
jge
pusha
mov
adc
and
fwait
int
dec
xlat
add
paddusb
dec
sub
cmpsl
sbb
xor
aam
insb
mov
test
test
or
cmpsl
mov
enter
test
je
std
int3
sbb
jb
outsl
cmp
jno
lds
mov
adcl
jmp
push
je
into
lea
lods
pop
cmp
lret
bound
fmull
cltd
dec
adc
jge
test
mov
mov
leave
into
test
sub
fnstenv
pop
jmp
stc
gs
xorl
or
push
pop
sbb
sub
jle
dec
push
pop
dec
xchg
pop
into
out
pop
cmpsl
cmp
int3
push
and
mov
jle
mov
mov
lcall
xlat
movsl
xor
stos
nop
movsl
mov
or
mov
rep
push
cmp
pop
lret
ficoml
gs
es
xchg
pop
or
pop
or
negb
adc
gs
and
iret
testb
dec
pop
gs
cmp
or
or
xchg
mov
dec
cmp
mov
sahf
xchg
stos
push
pop
stos
adc
gs
adc
pop
lret
adc
es
mov
test
fisubs
pop
sub
jbe
mov
jg
ljmp
pop
mov
loope
sbb
xchg
jmp
mov
testb
cmp
xchg
xor
dec
mov
and
jg
sub
xorl
cmp
bound
testb
lret
xorl
pop
and
jg
insb
adc
jge
jl
jl
cmp
jb
pop
adc
mov
sub
jb
mov
and
jg
mov
stos
jge
int3
int3
int3
test
xchg
into
out
fsubl
inc
and
mov
jle
or
pop
or
jmp
pop
loopne
sbb
in
insl
dec
mov
ljmp
xchg
nop
jmp
aam
dec
sahf
xchg
movsl
or
aas
pop
xor
cmp
jb
mov
sahf
xchg
dec
push
pop
dec
xchg
pop
into
out
pop
cmpsl
cmp
int3
imul
jle
mov
mov
cltd
cmpsl
cmp
int3
test
mov
jle
leave
push
pop
leave
xchg
fxch
out
fldenv
inc
and
mov
jle
or
or
sbb
inc
and
jmp
cmpsl
cmp
int3
pop
gs
cmp
dec
pop
popf
test
inc
push
xchg
and
mov
idivb
push
out
jp
cmp
int3
mov
jb
mov
jle
stos
push
pop
stos
xchg
mov
cmp
int3
lret
jb
mov
jle
ljmp
into
out
cli
cmpsl
cmp
int3
or
jb
mov
jle
sub
sub
inc
and
mov
jle
pop
push
pop
pop
xchg
imul
imul
fisttpll
inc
sub
fwait
dec
mov
and
inc
popf
pop
out
push
cmp
int
jg
jge
sbb
add
lcall
scas
mov
mov
dec
imul
mov
fisttpl
mov
jmp
cmp
sti
pop
pop
jmp
into
testb
sub
sbb
push
jmp
es
mov
sahf
xchg
dec
push
pop
cmc
int
incl
pop
and
jg
insb
adc
jge
jl
jl
cmp
jb
pop
push
jmp
into
negb
es
mov
sahf
xchg
mov
test
in
lahf
call
neg
adc
dec
in
gs
pop
cli
jge
lods
adc
lret
adc
or
cmpsl
mov
out
sbb
mov
cmp
insl
ss
popf
pop
lds
xchg
or
mov
push
push
arpl
dec
ss
pushf
sub
cmp
hlt
rcrb
icebp
push
pop
imul
fiaddl
rorb
stos
pop
pop
push
cmpsl
jb
scas
push
inc
lock
mov
xchg
repnz
sbb
sbb
sbb
sahf
add
adc
dec
add
negb
or
xchg
dec
add
mov
jle
cmp
pop
cmp
jmp
cmpsl
cmp
int3
pop
inc
and
mov
jle
jns
pop
jns
jmp
cmpsl
cmp
int3
cltd
inc
and
mov
jle
mov
jmp
cmpsl
cmp
int3
flds
jb
mov
jle
stc
push
pop
stc
xchg
or
out
or
inc
and
mov
jle
or
out
xchg
push
pop
jmp
adc
xchg
fstpt
jecxz
in
inc
jb
int3
test
xchg
jo
cmc
es
mov
iret
inc
pop
cmp
pop
mov
ss
xchg
push
jp
and
add
mov
lcall
iret
idivb
lret
lret
fisubl
cmp
xchg
pop
ljmp
adc
gs
cmp
xchg
pop
sub
pop
sub
mov
mov
cmp
pop
pop
and
iret
imulb
imul
je
pushf
pop
iret
cmpsl
aam
xchg
fdivrs
rcll
ja
pushf
and
mov
xchg
pop
dec
mov
mov
test
imul
mov
push
or
mov
mov
pop
ds
fldl
xorb
imul
pop
dec
xchg
cmp
insb
or
sbb
cwtl
xor
fists
sbb
fwait
fisttpll
popf
pop
stos
cmpsl
sub
cmp
dec
out
mov
jb
bound
imul
adc
jge
sti
int3
sti
mov
testb
or
lret
jge
sbb
sbb
fwait
sbbb
dec
inc
adc
cmp
dec
jmp
xorl
sbb
gs
xorl
insb
and
jg
jl
jl
out
sub
mov
mov
jmp
jb
pop
test
imulb
es
test
push
xor
dec
les
lahf
insb
inc
mov
popf
fwait
sbb
mov
dec
pop
push
fidivrs
adc
jecxz
mov
iret
inc
xchg
mov
sbb
pop
in
ds
call
out
or
or
sub
jb
insb
fisubrl
fmull
jb
mov
and
lcall
sub
sbbb
jb
pop
sbb
jmp
into
negb
mov
pop
sub
jb
pop
cltd
jmp
into
idivb
pop
mov
dec
mov
sahf
xchg
pop
push
pop
pop
adc
mov
shlb
out
fdivrs
imul
insb
popa
iret
push
sbb
lret
icebp
scas
and
testb
dec
jo
mov
jb
mov
mov
popf
movsl
jg
call
pop
movb
bound
jae
pop
inc
fistpl
outsl
pop
insl
xchg
sub
movsl
xor
lret
clc
pusha
gs
cmpb
xor
push
push
push
fmul
mov
cli
inc
xor
lods
xor
xchg
jns
pushf
xor
aaa
pop
cmpl
fiaddl
pop
jb
push
insl
mov
push
test
ret
push
int3
jb
mov
daa
cli
fidivrs
adc
imul
cmp
pop
call
in
or
mov
es
sub
in
sub
sub
popf
inc
mov
aad
xor
lock
imul
pushf
or
mov
mov
sub
and
and
mov
cmp
xor
cltd
xor
jo
xchg
addr16
adcl
call
std
mov
insb
jbe
cmp
imul
arpl
in
mov
sbb
jno
inc
je
orl
mov
dec
iret
sub
push
ja
sbbb
pop
mov
mov
mov
add
gs
sbb
xchg
repz
xor
dec
mov
mov
pushf
insl
shll
jns,pt
add
dec
cli
cmp
ljmp
cwtl
and
xor
outsl
orl
pop
pop
faddl
push
jecxz
cmp
sahf
ds
adc
call
stos
xchg
adc
data16
lret
lret
loop
loop
cmp
and
mov
pushw
in
cld
mov
cltd
dec
xor
cmp
test
push
fwait
pop
xor
imul
pop
sub
jns
sub
ss
rorb
fucom
pop
sub
ljmp
pop
dec
mov
xchg
mov
popa
jns
xor
lods
mov
ret
repnz
push
mov
imul
add
pop
out
dec
dec
adc
mov
xor
jp
xchg
jge
orb
push
mov
adc
cwtl
push
aas
stc
xorl
pop
mov
mov
mov
jnp
sti
mov
add
in
imul
mov
xor
imul
loopne
and
xor
ljmp
xchg
ja
cs
mov
mov
cmp
dec
push
fldcw
mov
inc
ljmp
pop
push
lret
push
jl
push
adc
pop
dec
fisubs
mov
in
mov
dec
add
ja
sub
bound
xor
sbb
std
push
add
cmp
out
dec
cmpsb
mov
inc
mov
mov
ss
pop
push
dec
ja
sub
es
jmp
inc
sbb
cli
push
pushl
cmp
jbe
mov
xor
mov
sub
test
sbb
negl
in
mov
ret
jmp
dec
int3
fldt
clc
pop
mov
mov
pop
sbb
cltd
mov
xchg
jb
sub
fyl2xp1
inc
inc
stos
stos
or
jbe
pop
rorb
adc
ror
xchg
hlt
push
mov
loope
jp
insl
je
pushf
aaa
cli
mov
xor
jb
icebp
sub
scas
dec
repnz
push
sbb
addr16
leave
imul
fldt
xorb
fcoms
out
insl
mov
cmp
adc
cmp
dec
jl
xchg
js
dec
adcb
scas
pop
push
sub
fnstenv
insl
fldt
and
xor
dec
or
out
or
aad
ret
arpl
jmp
test
xor
data16
pop
outsl
je
and
jecxz
stos
adc
repnz
cmp
jb
push
ds
scas
icebp
push
adc
pop
leave
fdivrl
imul
mov
inc
fcompl
or
mov
cmp
movsb
push
je
pop
int
ss
loopne
mov
inc
push
imul
dec
repz
iret
jns
fistpl
push
sub
xor
dec
pop
cmp
cli
dec
testb
ss
sub
mov
clc
ss
jmp
and
ljmp
aam
ja
addb
int3
lods
aam
es
sbb
rol
mov
into
adc
jge
add
and
cltd
cmp
and
or
xchg
out
into
cwtl
outsl
mov
xor
sub
cs
ja
outsb
fidivrs
and
fildl
sub
gs
andl
es
pop
cmp
pusha
in
pop
mov
inc
rclb
pusha
repnz
div
xorl
push
inc
ss
xchg
sub
and
jae
fiadds
sbb
pop
xor
dec
leave
stos
jns
divb
loop
in
popa
cmpsl
push
mov
lret
mov
lock
and
adc
cmpsb
add
push
xor
orl
insl
mov
and
and
enter
mov
pmuludq
fidivl
repz
ja
or
hlt
pop
imul
nop
cmp
pusha
sub
hlt
data16
xor
mov
pusha
cmp
ljmp
negb
fcoms
movsl
push
hlt
mov
test
loopne
jmp
push
pop
sti
mov
dec
cmpb
mov
inc
outsl
mov
fs
fldcw
out
out
mov
jo
insl
xor
sbb
iret
pop
sti
and
mov
mov
leave
push
xchg
xor
mov
adc
pop
sti
dec
das
outsl
pop
dec
jb
flds
idivb
or
fistl
sub
push
out
test
sahf
jle
push
aaa
jp
sbb
push
mov
ret
cmp
addr16
push
sahf
fnstcw
lods
ret
ss
fwait
cmp
movsl
dec
add
add
cmp
into
gs
pop
cld
dec
mov
lret
cmpsb
pop
add
sbb
flds
cli
inc
andb
rclb
xchg
dec
ds
int3
nop
jb
sbb
mov
or
dec
gs
mov
push
xor
dec
lret
ds
fdivl
mov
ds
fmull
outsb
push
cmp
inc
push
inc
cmp
int3
lret
ljmp
loopne
outsb
push
fstpt
pop
jmp
aad
pop
lret
pusha
cmp
stos
testb
repz
push
cmp
sahf
js
jbe
dec
inc
mov
mov
in
inc
bound
lock
clc
pusha
sahf
add
or
dec
out
sub
je
scas
lock
pop
inc
pop
nop
ficoms
jmp
pop
pop
int3
cmp
pop
pop
dec
stos
mov
jb
pop
sub
imul
pop
mov
or
mov
pop
testb
ljmp
arpl
cwtl
leave
pop
fsubs
and
imul
out
insl
lahf
sbb
or
cmp
sub
jge
cmpsb
test
test
imul
sbb
pop
jb
or
fnstcw
gs
adc
pop
fdivs
sbb
inc
mov
mov
imul
adc
pusha
push
leave
add
dec
add
mov
cmp
jbe
mov
jne
xor
jbe
mov
js
ja
sub
and
cmp
push
inc
push
sub
fldcw
shll
xchg
roll
push
xor
or
loopne
cmp
stos
mov
pop
lret
repz
mov
adc
push
lret
sub
std
in
imul
adc
insl
insb
inc
sub
add
and
fidivrl
xor
lcall
fmull
repz
xchg
push
xchg
popa
fists
sbb
mov
pop
mov
cmp
loop
inc
jns
xor
sbb
ljmp
dec
mov
call
xor
mov
push
pop
jmp
ss
dec
push
sub
xor
push
stc
stc
xlat
fcmovnb
push
xor
imul
fstps
fisttpl
jno
sub
cmp
fwait
sti
pop
test
sub
in
cltd
pop
fiadds
cmpsl
rolb
imul
push
mov
cmp
bound
jl
fcoml
cmp
pop
push
adc
inc
repnz
sub
jae
pushl
cmp
inc
xor
outsl
enter
cmp
add
clc
in
shlb
sbb
or
push
fldt
push
inc
imul
fsubrs
mov
cmpsl
push
repz
or
pop
cmc
sbb
pop
push
xchg
sub
repz
mov
es
pop
in
repnz
xlat
mov
pop
jb
jp
push
jb
xor
adcb
xchg
lds
inc
pop
xchg
adc
data16
stos
inc
leave
mov
mov
movsb
pop
ljmp
jecxz
mov
pop
pop
mov
ss
insl
pop
idivl
cli
dec
cmp
jmp
pushf
cmp
cli
in
jp
or
sub
cmp
dec
stos
mov
mov
push
jmp
outsl
into
jg
mov
xchg
shlb
into
les
sbb
sti
lods
test
dec
cmpsl
call
sub
or
loop
or
pusha
out
movsl
pop
shll
jg
shl
inc
mov
jae
cs
cmp
inc
mov
cmp
xor
cmp
xor
push
mov
push
test
rclb
test
sub
outsl
imul
sbbb
out
push
jbe
xor
fisttpl
push
cmpsb
fdivs
add
movsb
and
in
sbb
pop
scas
repnz
push
adc
sbb
mov
pop
loope
adc
push
outsl
je
scas
mov
scas
and
outsb
cmp
imul
pop
fs
push
sbb
in
push
xor
jae
pushf
and
loop
mov
add
jo
inc
pop
cwtl
push
aad
pop
bound
lret
int
pop
mov
pop
ds
insb
ret
int
imul
mov
pushf
mov
push
cmp
jb
mov
ljmp
pop
or
gs
mov
sub
ficoml
pop
imul
jg
fcmovnbe
pop
lods
push
xchg
xor
insl
fwait
out
popf
outsb
cld
inc
push
pop
sbb
in
sub
pushf
stc
out
test
jecxz
mov
jmp
cs
fwait
dec
imul
pop
cmp
fiaddl
jno
push
int
push
in
pop
pop
ljmp
pop
popa
pop
and
cmc
xchg
or
fsubl
gs
out
mov
inc
pop
push
inc
jmp
arpl
cli
pop
fistl
sbb
mov
cmpsb
sub
hlt
js
push
es
call
or
gs
lcall
leave
scas
pop
sub
pop
jp
and
mov
sub
rcl
dec
fildl
jb
int
sub
or
push
js
subb
sbb
cld
push
gs
jns
negl
outsb
jl
xlat
out
inc
cmp
stc
or
inc
pop
hlt
loope
pop
sub
popa
cmp
std
pop
ljmp
dec
das
repnz
pop
cmp
out
pop
add
test
loop
into
add
fwait
inc
mov
cmp
inc
sub
ja
test
xorl
icebp
add
push
dec
mov
inc
or
cmp
mov
cmp
dec
outsl
mov
push
fwait
xlat
ss
lcall
add
push
inc
ret
das
xlat
pop
jbe
inc
or
jo
aaa
jmp
cs
push
push
add
lcall
cmp
pop
adc
cltd
dec
adc
fildll
sahf
out
sbb
cltd
stos
inc
pusha
test
inc
push
repz
dec
out
sti
mov
adc
jae
mov
imulb
out
jecxz
adc
popa
jbe
mov
shlb
sahf
adc
and
in
inc
pop
imulb
jne
jns,pt
sti
leave
enter
sti
mov
cwtl
stc
mov
pop
xor
int3
scas
imul
test
lret
pop
pop
jp
xlat
stos
fwait
insb
inc
fnstcw
or
push
inc
fistps
sarb
mov
inc
jo
into
pop
xlat
mov
jl
cmp
inc
or
sbb
out
dec
push
sti
pop
out
sbb
push
cmpsl
pop
outsl
ja
sub
adc
fidivl
sub
pusha
outsl
pop
arpl
arpl
sub
jae
out
mov
cld
fldt
divl
jp
cmp
push
push
sarb
pop
in
mov
insb
cmp
in
cli
or
sbb
jne
addr16
dec
test
cld
lret
cltd
imul
sbb
pop
imulb
jp
rcrl
nop
int
fnstcw
jge
xor
out
lock
clc
imul
fisubrs
fs
mov
sub
xor
add
mov
push
and
scas
mov
pop
aaa
sahf
adc
pop
xchg
xchg
enter
push
es
push
pop
insb
inc
arpl
inc
dec
in
pop
mov
pop
xor
inc
pop
push
mov
popa
inc
insb
sub
push
cmp
pop
aaa
xor
int
pop
push
push
xchg
jecxz
sub
insb
ljmp
outsb
push
pop
out
fidivl
or
cmp
int
xor
jb
inc
insb
addr16
and
cld
arpl
or
adc
sbb
pop
dec
lds
xor
jns
cltd
xor
insl
sbb
cltd
inc
nop
mov
enter
inc
pop
cmp
xor
xchg
addr16
fbld
cwtl
fistpl
dec
sub
mov
pushf
clc
sub
xor
xor
pop
push
dec
and
aam
out
and
pop
or
xchg
out
sbb
push
jbe
clc
movsb
enter
pop
std
pop
inc
clc
add
and
push
adc
cmp
jb
imul
dec
mov
clc
add
dec
jmp
in
sub
or
sbb
jne
jns
in
or
ljmp
inc
and
add
outsb
pop
or
pushf
jle
push
or
mov
sbb
adc
stos
repz
outsb
sbb
data16
or
faddl
or
push
inc
shrl
push
test
xchg
gs
iret
call
cmp
adc
add
out
adc
push
sub
adc
fidivs
dec
push
std
sbb
in
movsl
out
ret
or
cmp
dec
fwait
rclb
inc
sub
dec
xor
int3
addr16
sbb
ja
xor
jecxz
adcl
ja
test
pop
mov
cli
jmp
mov
pop
nop
and
aam
adc
mov
xchg
mov
xor
adc
jno
mov
lcall
sti
pop
push
sub
mov
dec
pop
into
inc
jns
cmp
stos
adc
push
inc
fdivl
add
imul
imul
dec
dec
rsqrtps
insb
cmp
add
iret
cmp
add
dec
pop
dec
test
pop
outsl
sbb
fisttps
insb
mov
rcrl
jp
fs
xor
nop
jae
cmp
and
jo
jns
dec
dec
xor
pop
lds
xchg
ljmp
or
das
in
pop
mov
sbb
mov
ljmp
mov
arpl
pop
mov
pushf
cli
lods
jp
int3
jne
jae
imul
cmp
mov
lret
stc
fsubs
dec
jp
outsb
or
sbb
sub
cmp
push
push
inc
xor
mov
out
call
xchg
addr16
jmp
xchg
out
jo
cmp
dec
and
lret
data16
roll
mov
cs
fs
hlt
cld
fidivl
fwait
insl
jmp
cmp
pop
mov
xor
and
or
xchg
into
sbb
sbb
jbe
pop
dec
iret
imul
push
push
sbb
pop
push
lahf
sbb
cmp
shrl
fmul
lea
add
jno
leave
gs
imul
xchg
in
xchg
dec
sbb
mov
fstpt
test
adc
dec
and
das
xor
repz
cli
xor
xor
mov
xchg
dec
mov
pop
inc
pop
pop
ret
inc
mov
sbb
xchg
and
xor
repnz
cld
sbb
adc
mov
mov
jmp
inc
mov
fildl
out
insl
xchg
int3
add
fisubrl
icebp
add
sbb
jl
testb
push
stos
fwait
lock
and
cmp
fcmovnu
xor
adc
add
test
ljmp
outsl
xorb
fcmovnbe
mov
je
and
popa
mov
dec
dec
scas
stos
ret
addr16
mov
push
fwait
imul
test
sbb
add
pop
add
insb
mov
pop
mov
fldt
push
push
int3
imul
inc
xchg
pop
push
or
xor
out
jns
inc
insb
xor
xor
mov
pop
dec
scas
rorb
cli
or
and
sbbl
inc
xor
out
fiaddl
push
pop
out
xchg
scas
ret
dec
sub
push
xchg
fwait
mov
aaa
xchg
dec
jae
or
lea
pop
andl
bound
jmp
cmp
pop
sub
movsb
out
cmp
repnz
sub
cs
dec
shl
lahf
addb
xchg
sbb
stc
mov
push
mov
and
daa
in
in
dec
pusha
jge
das
shl
scas
xor
outsl
ja
jns,pt
inc
imul
cwtl
mov
mov
mov
inc
sub
jge
sbb
and
or
jns
outsb
or
ret
xor
faddl
notb
sbb
push
pop
aas
arpl
sub
lods
scas
nop
inc
push
ja
pop
pop
dec
sub
mov
mov
addl
loope
dec
faddl
pop
mov
cmp
mov
mov
std
and
movsl
cmp
pop
insb
into
cmp
mov
push
insb
je
sub
lret
iret
cmpsb
imulb
push
cmpsl
data16
xchg
pushf
cmpsl
inc
lahf
ljmp
sub
dec
cs
stos
fwait
push
pusha
js
cmp
mov
fidivl
cmpsl
in
nop
push
jge
xor
divb
mov
shlb
cmp
xor
pop
fstps
fadd
inc
mov
mov
push
movsl
out
iret
stos
mov
lods
dec
cmp
mov
push
stos
add
leave
or
mov
xor
mov
imul
mov
jp
andb
call
push
sbb
ljmp
int3
lods
jae
stc
xor
addr16
xor
sub
pop
addl
pop
cmp
jb
fistl
mov
xchg
adc
pop
lret
push
fists
lods
outsb
test
cltd
jmp
sub
jecxz
mov
repz
js
lds
push
imul
cmpsl
lcall
xlat
sub
cltd
mov
xor
loopne
popa
add
mov
imul
cmp
nop
mov
push
inc
fcmovnu
imul
inc
fildl
and
mov
adc
jmp
fildl
adc
fistl
inc
pop
or
or
loopne
out
aas
pop
sub
clc
stc
arpl
lahf
pop
add
jb
je
addr16
add
push
mov
lret
jns
sub
sub
jno
fisubrs
or
inc
xor
out
imul
dec
addr16
insb
push
imul
xchg
lds
push
pop
ret
add
mov
aad
dec
call
inc
lods
divl
stc
dec
frstpm(287
popa
pop
sbb
push
jae
ret
fcoms
popf
sub
fcmovnb
shl
mov
je
mov
adc
orb
movl
inc
arpl
dec
js
loopew
js
repz
js
insl
sbb
and
jl
fcmovnu
imulb
fildl
pop
sub
or
inc
js
pushf
ret
add
clc
jne
inc
js
leave
lcall
scas
enter
push
pop
push
jecxz
jns
mov
test
insb
mov
jg
mov
imul
adc
iret
add
insb
and
ficompl
inc
ret
push
out
pop
gs
fidivrs
movsb
mov
sub
pop
sti
mov
mov
jmp
cmp
xchg
cltd
xlat
mov
or
cmp
dec
and
and
pop
pop
fldcw
push
dec
cs
cmc
idivl
mov
adc
add
or
fcmovu
stos
jb
mov
mov
pop
jmp
loopne
movsb
xchg
fildl
mov
sub
inc
jp
inc
movsb
or
cltd
mov
rorb
pop
push
add
or
add
pop
sahf
stos
aaa
test
sbb
scas
ret
test
mov
data16
inc
jb
js
gs
rorl
enter
xchg
push
bound
stc
push
mov
decl
add
or
mov
xor
je
test
push
enter
xor
jno
ds
hlt
xchg
xor
ret
cmpsb
adc
inc
aaa
dec
fsubr
hlt
fdivrl
iret
xor
or
outsl
and
cmp
sbb
inc
inc
add
mov
pop
insb
push
ret
stos
outsl
daa
mov
shll
ss
hlt
dec
mov
not
pop
add
in
mov
jno
mov
cmpsl
movsb
sti
dec
jmp
jg
add
out
ficompl
repnz
xor
rcrb
lahf
mov
push
cmp
cmp
insb
or
xlat
and
mov
cmp
pop
dec
push
icebp
and
jb
sub
push
insb
fyl2x
adc
iret
mov
dec
mov
push
jle
iret
sbb
decb
xor
add
cli
out
aam
mov
out
jmp
push
out
pop
loop
add
push
ficoml
sbb
in
outsl
aad
imul
pop
mov
mov
cmp
sub
xchg
ljmp
es
in
sbb
jmp
adc
pop
sub
mov
cmpsl
cwtl
test
test
imul
sub
ficompl
or
push
sarl
imul
mov
sbb
imul
imul
push
push
jnp
pushf
cltd
outsl
loopne
leave
xor
in
ss
cmp
and
out
cli
dec
xchg
scas
jmp
iret
sub
inc
cmp
xor
test
aas
xor
lds
and
rcrb
stc
inc
or
leave
sbb
addr16
outsb
pop
testb
int3
sub
and
lods
sub
pop
imul
push
pop
cmp
sub
ja
ret
mov
mov
dec
shr
mov
lock
hlt
js
inc
int3
fisubrl
xchg
mov
sbbb
mov
add
in
mov
or
sub
fs
loope
cli
push
add
js,pt
pop
das
aam
mov
out
add
jbe
jmp
xor
fidivrs
xlat
jl
scas
scas
repnz
jb
jp
ds
mov
cmp
jb
sub
cmpsb
out
stos
cmp
jmp
jb
mov
mov
mov
gs
lret
outsl
das
push
add
pop
lret
repz
mov
stos
push
mov
push
pop
dec
fcoms
outsb
arpl
sub
adc
pop
mov
inc
scas
pop
imul
and
sub
pop
push
xor
leave
ljmp
push
imul
pop
pop
cmp
iret
mov
or
mov
test
mov
sub
ret
mov
call
xlat
xor
cmpl
push
mov
repnz
xlat
sti
sbb
and
mov
mov
dec
dec
ss
inc
sbb
push
push
ret
ret
lret
sbbl
jnp
cmp
subb
stos
sarl
popa
pop
mov
and
repz
jo
test
jno
push
xchg
inc
sbb
pop
stc
call
cmpsl
jecxz
pop
or
aaa
call
mov
dec
mov
jmp
xchg
pushf
jb
jmp
sub
jae
pop
adc
fisubl
jb
add
push
sbb
fstps
jle
repz
in
mov
cmp
ljmp
jae
rolb
jb
mov
mov
ja
arpl
push
push
cmp
lea
int
inc
mov
xlat
stos
dec
dec
sub
icebp
mov
mov
push
outsl
add
or
pop
insb
pop
push
arpl
repnz
lods
xor
fdivrl
dec
stos
mov
arpl
repz
cvtdq2ps
push
fcoml
es
stos
xor
lock
arpl
gs
and
loopne
push
sbb
mov
ret
xor
negb
outsl
inc
ret
imul
pop
sub
push
lods
push
mov
pop
fwait
xorb
sbb
mov
inc
fidivrs
in
cmpsl
pop
out
cs
jmp
mov
jno
scas
cs
inc
ss
jns
sub
icebp
pop
dec
push
sub
inc
and
call
fistpll
dec
idivl
das
cmp
fistpl
mov
sub
inc
adc
ljmp
ljmp
mov
xor
jo
and
lds
fst
or
push
ljmp
in
mov
stos
loopne
xor
out
lock
popf
or
pop
pop
pop
ss
iret
movsb
jmp
add
jmp
stos
pop
mov
cmp
insb
adc
cmc
call
mov
in
cltd
test
mov
pop
stc
push
enter
xor
outsb
lock
imul
jl
je
mov
aam
pop
dec
pusha
mov
push
fiadds
mov
dec
sub
mov
push
and
mov
xchg
repz
xchg
dec
xchg
inc
mov
jb
sub
mov
pop
leave
adc
ss
xchg
leave
pop
mov
cltd
push
jmp
ja
lret
pop
ja
sbb
cli
pop
xlat
ret
stos
or
test
inc
in
in
dec
and
add
jno
cmp
mov
mov
and
cltd
cli
cmpsb
gs
sti
xor
and
andb
add
inc
repz
xchg
xor
repnz
sbb
js
arpl
mul
loope
push
sti
scas
ljmp
sub
pop
pop
adc
jmp
adc
jmp
lds
inc
ljmp
test
rep
cmp
pop
mov
incl
out
cltd
push
imul
mov
outsb
ss
push
mov
push
and
add
outsb
lret
cmpb
fidivl
or
repnz
cmc
xor
cld
mov
bound
inc
popa
push
dec
dec
sub
repz
adc
cmp
jmp
shlb
jne
je
repnz
sub
mov
dec
push
adcb
push
mov
addr16
pop
push
jbe
cmp
outsb
insb
sub
lahf
adc
addr16
leave
fistpl
xor
lcall
fcmovnu
sbb
jge
test
inc
sbb
mov
lock
sub
push
imul
mov
cmp
xor
addb
mulb
pop
jns
fcomi
mov
rorb
mov
cmpb
mov
into
sbb
fsubrl
fisubrl
add
xor
aad
ds
mov
int
jmp
enter
push
les
dec
mov
imul
sbb
pusha
jmp
shrb
jns
in
pop
imul
push
pop
dec
sub
pusha
pop
loope
je
pop
push
cmc
mov
rorb
push
call
adc
xchg
or
packsswb
or
push
adc
pop
and
rcr
cs
repz
repz
jecxz
mov
call
dec
jae
sub
aad
mov
inc
mov
pop
jl
add
idiv
pmovmskb
test
imul
in
test
fcomi
leave
jae
testb
add
mov
gs
mov
mov
test
inc
jp
cltd
pop
mov
fucom
push
pushf
fwait
insb
jmp
pop
ja
fidivrs
cli
sub
movsl
sub
movsb
pop
inc
stos
dec
cmp
in
lahf
sub
mov
negb
cmp
inc
in
fcmovne
inc
cmp
push
sub
fstps
outsb
inc
stos
cmc
outsl
sub
or
jmp
cmpsl
mov
jl
movhps
xor
outsb
cmp
nop
ss
cmp
pop
lock
cmpsl
jae
pop
inc
mov
iret
dec
inc
mov
sbb
cmp
push
xlat
cmp
fldcw
mov
scas
imul
jo
imul
aaa
mov
push
sbbl
pop
mov
insb
cltd
cmp
pop
leave
push
mov
dec
ret
jl
loope
addr16
or
or
xor
add
dec
nop
push
mov
cs
aas
sti
and
push
les
sub
mov
mov
imul
repz
mov
ljmp
cs
and
add
sti
insb
in
mov
dec
and
insl
outsb
push
in
pop
mov
cmp
sti
insb
xchg
or
cli
inc
pop
cli
icebp
es
or
add
imul
imul
xor
daa
mov
in
jmp
sahf
dec
pop
inc
aaa
jb
jmp
sti
imul
rorb
pop
inc
jb,pn
add
scas
push
or
sub
pop
cmpb
jns
aaa
xor
out
arpl
or
je
ja
arpl
cmp
sub
jns
into
cli
push
add
in
xchg
xchg
ret
icebp
loop
cmc
sub
mov
popa
fs
sub
and
imul
mov
dec
pop
and
ds
mov
mov
xchg
cli
and
push
imul
repnz
orl
jb
xor
mov
push
fistpl
mov
leave
xchg
push
cwtl
repz
and
inc
fidivs
into
ja
roll
mov
lods
mulb
or
pop
out
and
stc
loop
mov
cs
ret
mov
inc
dec
scas
sbb
push
das
pop
ret
pop
pop
lods
imul
test
cmp
add
subb
lea
mov
cli
inc
pop
xor
mov
idivb
imul
xor
sub
outsl
mov
ja
add
ficomps
sub
test
adc
jb
js
cld
xchg
adc
jp
inc
in
outsl
jg
sub
icebp
imull
mov
in
dec
mov
jmp
jmp
or
jmp
inc
jno
pop
jmp
inc
push
xchg
push
ja
flds
iret
pop
scas
push
repz
mov
stos
in
cmp
fcmovne
sar
mov
jle
cmp
jae
mov
lea
sub
shll
ficompl
into
jmp
dec
fidivrs
cld
call
and
sub
ljmp
mov
rep
out
pop
fldt
jmp
lock
pop
xor
mov
pop
or
xchg
movzbl
imul
cmp
and
inc
dec
or
lret
cwtl
cmpsl
mov
add
push
repz
out
sti
xchg
out
lods
je
jb
mov
subb
outsb
ljmp
das
int3
and
pushl
pop
adc
or
stos
and
or
jae
mov
jae
jge
shll
inc
pop
jmp
cmp
test
jge
and
sub
clc
xor
fisubl
cmpb
repnz
xlat
jp
aaa
dec
movaps
in
test
xchg
or
or
sub
fs
test
out
icebp
in
addr16
mov
sti
push
ret
lds
enter
fwait
mov
cmp
mov
inc
xchg
stc
push
cmp
cli
mov
pop
in
xlat
daa
fcom
in
je
inc
scas
fidivrs
sahf
xchg
ja
and
sbb
adc
shll
and
cli
ljmp
mov
cltd
hlt
sbb
arpl
mov
jno
insb
insl
xlat
ret
dec
mov
xchg
and
push
subl
gs
addr16
push
jmp
ret
inc
dec
xlat
and
pop
or
test
andb
ss
xor
cltd
dec
lcall
sbb
and
cmp
xor
sti
push
dec
repz
sub
test
xchg
inc
sbb
push
roll
mov
xchg
clc
repz
es
cmp
mov
mov
jmp
popf
ficomps
cmp
outsb
xor
and
fistl
dec
pop
sub
loop
mov
repz
outsb
push
xchg
shll
xchg
and
push
addb
and
hlt
dec
repz
dec
dec
inc
pop
sub
push
mov
enter
xchg
pop
imul
xor
fsubp
inc
insb
inc
jb
dec
or
dec
or
mov
jl
jb
enter
out
ds
push
fldcw
out
stc
fildll
lds
in
in
push
jae
and
xor
test
repz
loopne
push
subb
pop
inc
movsb
aaa
push
mov
ficompl
xor
mov
pop
pop
xlat
pusha
xchg
push
ds
or
out
cmp
add
jmp
pusha
xchg
imul
jl
insl
or
mov
cli
fiadds
in
xor
push
iret
imul
ss
mov
std
jge
mov
dec
push
sub
arpl
mov
mov
loop
xchg
pop
ficomps
add
xchg
dec
ja
imul
mov
cli
inc
mov
or
insl
sahf
mov
lods
inc
push
dec
adc
ja
mov
sub
std
sub
or
je
ja
jb
xchg
insb
loope
xor
rorb
mov
rolb
mov
push
sub
aad
repz
aad
adc
fxch
clc
or
mov
addr16
mov
test
hlt
sub
scas
arpl
cmp
pop
es
hlt
sbb
pushf
adc
and
into
negb
stos
bound
pop
dec
sbb
mov
dec
mov
es
data16
jmp
sub
add
pop
inc
and
pop
popa
mov
data16
clc
leave
nop
sti
and
push
les
popf
cmp
xor
imul
mov
dec
test
incl
mov
inc
nop
mov
lea
sti
pop
data16
adc
cltd
mov
mov
mov
inc
dec
imul
xor
sub
jg
into
stos
pop
rcr
xor
pop
mov
push
xchg
dec
mov
push
insb
packuswb
mov
sub
mov
scas
mov
or
iret
dec
jg
cmp
jl
mov
or
lcall
pop
add
mov
rcll
pop
or
imul
push
fnstcw
dec
pop
pop
fimuls
push
inc
sti
out
inc
mov
push
xchg
dec
mov
push
push
clc
xor
fwait
andb
pop
cltd
push
ja
xchg
in
inc
loop
lret
push
pop
je
mov
push
jns
fistl
ds
lretw
cltd
scas
inc
mov
out
insb
lret
xchg
xchg
test
jmp
ret
mov
jae
pop
or
int3
ret
push
mov
inc
mov
mov
imul
jmp
stc
popf
out
adc
outsb
cmp
cli
mov
mov
repz
cli
test
cs
add
push
or
mov
dec
push
mov
cmp
cmp
insb
in
repnz
push
lods
lea
mov
inc
cmp
pop
or
outsb
mov
mov
push
stos
idivb
xchg
ficoms
or
pop
lret
mov
cld
adc
jle
in
jbe
je
dec
xchg
out
call
xlat
mov
sbb
adc
jo
jmp
mov
sbb
testb
inc
xchg
mov
fmul
jns
sarb
and
adcl
push
jns
xchg
xchg
aaa
or
orl
jge
fildl
sub
rclb
dec
das
push
xlat
mov
mov
loopnew
and
push
mov
cmp
mov
clc
mov
nop
pop
pop
mov
dec
cmp
insl
js
or
jns
inc
scas
pop
imul
fucomip
lods
xchg
xlat
ja
testl
fadds
and
jns
inc
pop
push
jo
xchg
leave
xor
movsb
cmp
sub
inc
cltd
popa
xchg
subb
mulb
into
movsb
mov
xchg
jge
in
jb
mov
ljmp
lea
add
and
push
inc
pop
sub
jp
push
mov
push
clc
fiaddl
xorb
dec
jp
inc
ret
arpl
jmp
dec
sbb
ss
pop
adc
mov
hlt
or
arpl
gs
leave
or
inc
repz
cwtl
or
sbb
sub
shlb
add
fmulp
pushf
cmp
push
fwait
sub
jb
insb
jp
imul
xor
outsb
cmp
mov
fisttpl
pushf
xchg
xor
push
pop
cmp
jno
addr16
jle
dec
add
jmp
orb
sbb
data16
mov
add
das
mov
idivb
out
rcrl
inc
pushf
outsl
nop
xor
jb
mov
pusha
int3
pop
push
dec
sbb
xchg
pop
fcmovne
das
imul
xchg
nop
pop
ljmp
test
arpl
call
sbb
divb
popa
pop
int
das
cmp
and
push
popa
jle
into
loope
pop
adc
sbb
dec
add
inc
cmp
pop
sbb
push
pop
jmp
cmp
jmp
ret
mov
jmp
popf
pop
jecxz
int3
add
add
pop
daa
popf
dec
nop
das
pusha
jmp
bound
out
dec
dec
sub
or
pushf
pop
cwtl
in
adc
and
and
in
aam
add
pop
in
and
adc
js
ss
shlb
jb
iret
push
pop
cmpsl
rcll
lcall
addr16
dec
adc
cmp
cmc
inc
mov
flds
pop
mov
sbb
inc
lods
dec
inc
cmp
adc
lret
pop
lret
and
sub
cmp
and
xor
xchg
cmp
int3
mov
fnstenv
pop
test
out
mov
aad
pop
pop
cmp
aam
out
lret
stos
bound
xlat
xor
and
test
out
and
and
sbb
and
aam
rorl
mov
push
sbb
mov
aam
cwtl
je
dec
pop
lahf
sbb
cwtl
int
mov
xchg
pop
stos
outsl
jmp
pop
in
jno
daa
xchg
outsl
and
add
mov
adc
mov
inc
mov
imul
pop
push
or
add
fwait
loope
rolb
mov
dec
imul
aaa
sub
jmp
mov
push
dec
lds
ljmp
sbb
mov
outsl
push
jae
jbe
xchg
scas
in
fsubr
or
iret
repnz
inc
fistpll
out
xor
mov
pushf
mov
pop
lret
push
sbb
arpl
loope
cmp
mov
lahf
sbb
and
test
fcomps
dec
adc
cwtl
dec
scas
push
add
push
or
pop
xor
cmp
js
add
mov
sbb
std
jno
or
jge
jns
aam
xor
fldt
fmulp
loopne
push
sbb
jae
xor
xor
outsl
cwtl
xor
and
inc
enter
xchg
dec
aas
xchg
sbb
cmp
xchg
or
inc
mov
add
adc
insb
movsl
add
cs
out
and
xchg
pop
pop
cmpsl
loopne
fidivl
xor
dec
int3
pop
sub
cmpl
xor
xor
fcompl
inc
push
add
xchg
gs
lahf
addl
pop
repnz
jns
mov
sub
mov
fwait
pop
outsb
inc
add
aam
cmp
inc
mov
aam
testl
aam
mulb
test
cltd
dec
fcomps
sbbb
pop
and
pop
or
or
xchg
faddl
rcr
mov
mov
insb
int
mov
ss
cmp
dec
mov
loopne
mov
cmp
ret
pop
jbe
dec
add
mov
leave
cmp
inc
jns
imul
arpl
shr
cmp
sub
jns
fcoml
loopne
inc
out
jns
pop
inc
sti
popf
ss
sbb
lcall
data16
inc
outsb
or
dec
dec
inc
in
stos
cwtl
or
test
in
mov
push
jle
dec
push
in
hlt
and
addr16
fwait
cmp
gs
pop
out
pop
call
clc
xor
mov
dec
and
not
lods
in
xchg
pop
not
lods
in
subl
push
or
xlat
out
in
lods
in
outsb
data16
xchg
add
add
ret
aad
lods
in
push
imul
shlb
jbe
je
inc
sbb
dec
out
leave
ljmp
dec
adc
push
cs
stos
adc
cmp
xchg
outsb
dec
mov
mov
in
xchg
gs
jl
test
mov
or
mov
hlt
adc
neg
jb
outsl
orl
and
add
fsubp
mov
in
loopne
int
sub
call
mov
sahf
cmpb
pop
or
dec
mov
xorb
adc
xchg
pop
test
shlb
testb
clc
inc
cmpsb
loop
xor
pop
imul
in
cmpsb
movsb
jmp
push
ret
iret
sbb
scas
mov
jae
inc
pop
mov
mov
sbb
mov
sub
sub
rclb
rcrb
int3
lret
push
dec
imul
leave
nop
inc
int3
mov
hlt
rorl
loopne
aas
add
push
fstpt
cmp
sub
inc
idivb
lahf
ss
stos
jmp
rorl
imul
mov
arpl
call
sub
arpl
and
xor
int
xor
aas
push
pop
xorb
outsl
addb
sbbb
test
aas
cmp
sbbb
addl
mov
outsb
data16
outsb
stos
in
or
sub
and
sbb
jp
je
adc
push
add
cmp
int3
sbb
notb
imul
nop
dec
or
xchg
loopne
aad
cmpsl
mov
xchg
sbb
sub
mov
gs
ja
fadd
test
fmul
fcoms
dec
fstpt
and
int3
xor
iret
scas
fwait
xlat
rcll
rcr
testb
jae
inc
adcb
into
add
fbstp
xchg
mov
mov
outsl
aam
mov
xor
and
lahf
sub
jno
cld
push
ficompl
mov
mov
xchg
push
push
shr
sbb
sub
xorb
fidivs
fidivrl
mov
arpl
sbb
push
add
add
int3
pop
mov
mov
mov
or
jb
adc
add
ljmp
in
pop
mov
lods
jecxz
call
mov
push
inc
inc
int3
pop
fsubrl
cmp
insb
outsl
addr16
loopne
ss
hlt
cs
cmp
hlt
ljmp
sub
add
dec
adcl
push
pop
hlt
stc
sbb
cmp
mov
aaa
pop
jb
mov
es
xlat
dec
jle
outsb
les
fcoms
push
and
scas
and
bound
ss
test
mov
repz
ljmp
dec
mov
adc
cmp
movsb
mov
mov
xor
fcmove
sbbb
sarl
mov
and
addl
push
jmp
jp
push
and
out
cmp
hlt
or
cwtl
cmp
mov
inc
pop
mov
inc
push
sarb
jp
movsl
mov
int3
imul
sub
pushw
or
pop
adc
stos
pop
push
adc
in
xor
add
scas
outsb
dec
pop
movq
sub
in
xchg
push
sbb
fnstcw
jg
out
movsl
std
mov
pop
pop
in
xor
test
xor
dec
mov
xchg
loopne
jp
lock
jb
cmc
stos
xor
xchg
ds
ja
sub
mov
negb
fmuls
sti
mov
dec
insb
int3
lret
shrb
test
sti
orl
pop
shll
fdivrs
imul
pop
pop
push
sub
dec
bound
leave
xchg
adc
or
pop
aam
arpl
pushf
into
out
lods
gs
popa
mov
mov
pop
in
push
fimull
pop
inc
mov
call
aaa
pop
pushf
cmp
les
ret
xor
movsl
sbb
in
movsb
pop
mov
fiadds
insb
xchg
clc
repz
push
cmp
pop
dec
xorl
xlat
popa
lea
cmp
insl
pusha
sub
pop
dec
adc
add
je
and
xchg
push
cmp
pushf
cltd
mov
stc
mov
push
and
pop
pushf
xor
jns
add
sti
inc
xor
shll
imul
sbb
inc
insb
mov
mov
dec
dec
jb
daa
push
fsubl
cmp
scas
inc
dec
mov
fwait
sub
mov
scas
scas
sub
divb
nop
xor
cwtl
xchg
sub
cwtl
push
popf
pop
xor
outsb
xchg
sub
mov
mov
mov
mov
jo
into
jle
lods
lahf
pop
or
pop
int3
je
insl
fstpt
xchg
mov
cmp
cs
lret
xchg
out
mov
mov
pop
cltd
dec
cltd
idivb
adc
scas
pusha
inc
into
mov
faddl
out
mov
bound
push
movsb
or
rcrl
pop
mov
in
mov
pop
cltd
dec
cltd
and
inc
pop
flds
push
out
cld
lret
cld
inc
mov
insl
js
jno,pt
mov
mov
out
mov
or
mov
pop
cltd
dec
cltd
dec
test
xor
and
and
cld
mov
mov
sub
mov
mulb
lret
pop
scas
mov
push
mov
out
jne
mov
mov
jns
pop
cmp
ss
xchg
lcall
inc
push
stos
push
testb
jmp
rorl
xchg
cmpl
not
jp
pop
pop
mov
adc
cli
dec
in
push
cld
testb
pop
imul
cwtl
cmpl
and
inc
mov
das
jae
mov
pop
sub
lcall
pop
mov
insb
int
mull
nop
pop
sub
cltd
push
repz
pop
xchg
test
imul
push
outsb
push
notb
mov
mov
dec
cltd
and
std
pop
ljmp
cld
test
pop
and
jecxz
adc
pop
dec
mov
out
xchg
mov
dec
cltd
dec
lods
inc
mov
pop
cli
mov
lods
jns
mov
je
addr16
xorb
jle
jmp
inc
mov
mov
mov
mov
push
mov
stc
inc
mov
ljmp
mov
rcrb
and
jne
cmp
jae
lret
inc
insb
or
repz
repz
jle
ja
mov
dec
bnd
insb
pop
add
cltd
dec
aad
mov
jne
cmp
outsb
xor
scas
mov
mov
repz
jle
sbb
jae
sbb
mov
inc
mov
jl
fildl
fnstenv
bound
lds
jmp
rorl
les
imul
inc
mov
js
dec
subb
dec
adc
fsts
insb
push
mov
cmpsl
push
repz
mov
out
ror
xor
and
es
dec
into
add
pop
mov
call
insb
mov
lods
cmpl
imull
mov
dec
scas
cltd
shr
je
int3
pop
sbb
cltd
or
imul
dec
jno
inc
loop
push
popf
pop
mov
sub
cltd
xor
aaa
dec
pop
stos
jmp
sub
je
outsl
push
fsub
add
not
mov
outsb
dec
scas
dec
loop
jne
jae
imul
ds
fs
xchg
dec
fldenv
xor
lret
gs
sub
add
or
or
sub
repz
fsubs
mov
jns
jmp
and
lods
das
dec
push
mov
fiaddl
xrelease
xchg
dec
xchg
inc
mov
imulb
jbe
fmull
pop
xor
sub
cli
push
repz
push
imul
gs
mov
fisttpl
ret
ss
repz
jae
lret
jmp
out
loop
pop
or
fdivrl
lret
pop
xlat
insb
inc
xor
sub
or
repz
in
lods
shll
insl
pop
xor
pop
sub
rolb
mov
mov
out
mov
xlat
sub
mov
inc
push
sub
test
sub
adc
dec
push
insb
dec
xchg
test
repz
inc
mov
mov
jge
repz
and
xchg
or
jmp
popf
pop
es
int3
xchg
fdivrs
ret
or
imul
fldt
sub
mov
push
lock
xor
pop
es
mov
out
int3
enter
ss
dec
out
mov
mov
cmpsl
mov
enter
hlt
mov
inc
enter
dec
mov
add
cmpsb
enter
sbb
cs
xchg
fs
shll
vmread
add
mov
inc
add
push
arpl
xchg
loope
outsb
loope
subb
mov
imul
iret
sub
cmp
add
fcompl
cmp
xchg
pop
jmp
aas
add
xchg
sub
imul
iret
sub
inc
cmp
out
add
and
jnp
xchg
add
xchg
push
out
insb
mov
test
pop
pushf
push
ds
les
imul
aas
les
pop
or
jb
or
aad
jae
lods
push
ffree
add
cltd
inc
push
xor
fdivrl
or
pusha
push
outsl
sbb
jmp
popf
pop
stos
outsb
adc
inc
enter
pop
pop
pop
fcmovnu
sbb
mov
out
or
mov
gs
cld
pop
sbb
jg
shr
mov
or
jl
pop
or
jb
adc
cmc
sbb
pop
mov
out
aaa
add
xlat
adc
je
fld1
push
jle
cmp
sub
fwait
cmp
adc
jb
adc
popl
add
or
test
pop
jp
push
pop
dec
add
les
sbb
dec
mov
and
jo
add
cmp
cli
or
pop
or
push
popf
cmc
push
jge
mov
xor
pusha
pushf
in
outsb
dec
fstpt
or
xor
lds
jae
sub
hlt
mov
inc
inc
jae
adc
dec
outsl
push
cmp
cmp
push
mov
xchg
ljmp
bound
clc
dec
cmpsl
or
jne
int3
out
adc
cmpsl
js,pt
pop
leave
movsl
cs
lret
xchg
jne
les
push
cmp
jmp
clc
in
dec
icebp
cmp
outsl
pop
jge
scas
mov
jl
jecxz
rorl
push
pop
fstpt
dec
pusha
sbb
pop
dec
xor
cmp
dec
mov
fisubrl
cmp
fstpl
pop
cmp
push
ja
dec
cmp
test
inc
xchg
mov
outsl
je
add
adc
mov
push
jns
mov
ret
push
loop
mov
pushf
cmp
sbb
xorb
add
mov
add
inc
mov
fiadds
loope
mov
outsb
imul
add
xor
adc
xchg
sub
sahf
out
jae
sub
pop
pusha
and
inc
mov
in
das
mov
pop
ret
ja
int3
dec
cmp
outsl
cmp
jle
jbe
cmpsl
stos
push
xlat
lret
jb
cwtl
pop
sub
dec
fsubrs
repz
je
outsl
fimuls
dec
xor
in
aas
cli
pop
fsts
lahf
out
jg
test
sbb
jl
mov
ja
mov
rcrl
imul
mov
pusha
fmull
js
pop
imul
insb
push
push
push
adc
imul
mov
pop
add
insb
jae
push
es
adc
pop
ret
jmp
sbb
insb
push
sbb
mov
icebp
gs
cwtl
outsl
inc
outsb
fsubrl
cltd
xor
je
cmc
sbb
cmp
pushf
in
outsl
lret
cmp
ds
notl
push
dec
jbe
in
cmp
idivb
add
jmp
fcmovb
sub
les
push
stos
decb
adc
int3
mov
push
cwtl
pop
adc
mov
mov
pop
jl
cmp
sbb
pop
inc
sub
mov
jne
in
jg
adc
mov
sbb
dec
or
dec
loopne
xor
jo
dec
and
sbb
cmp
gs
cs
iret
fldt
dec
mov
xor
dec
dec
pop
inc
sub
cmp
jo
lods
sub
in
cmp
ret
sub
sbb
add
and
or
sub
or
cmpsl
xor
xchg
out
inc
in
pop
jbe
pop
iret
lcall
or
imul
push
dec
push
mov
xor
dec
inc
iret
sub
ds
fists
xlat
cmp
fwait
lcall
jo
dec
pop
negb
aam
notb
mov
cmpsb
sbb
int3
pop
pop
inc
mov
pop
sub
dec
push
cld
lret
xchg
push
sahf
mov
sbb
out
jle
cmp
xor
jl
mov
jo
out
xor
pop
push
mov
sbb
xor
jge
stos
fisttpl
inc
cmp
or
fwait
mov
push
mov
imulb
idivb
dec
shl
cmp
das
out
lods
jge
cld
xchg
xor
mov
outsb
arpl
insb
insb
pop
mov
or
cmp
cltd
inc
rclb
clc
int3
jg
and
mov
pushf
mov
rol
mov
cmp
jp
out
roll
dec
sub
sub
sub
lret
rcr
jge
repz
or
or
sub
outsb
add
ficomps
movsl
lea
inc
adc
mov
dec
aam
push
cmp
enter
mov
and
bound
xor
xchg
lods
add
loopne
mov
push
daa
out
inc
pushf
dec
cmpsb
mov
mov
pop
pop
sub
cmp
mov
sti
outsb
mov
sub
cmp
or
sub
or
ja
pushf
mov
ljmp
je
imul
mov
ljmp
xchg
std
inc
and
add
push
inc
imul
loopne
xor
stc
dec
int3
inc
push
dec
arpl
jb
outsl
out
ds
inc
ja
xchg
sbb
ror
nop
cmp
pop
dec
dec
xlat
int
stos
mov
pop
stc
jo
jg
mov
sbb
stc
adc
ret
loop
xchg
xor
adc
bound
cli
jmp
pop
in
out
jmp
bound
loop
dec
icebp
fimuls
fmulp
cmc
add
leave
icebp
rolb
add
jecxz
imul
sti
cmp
mov
pushl
mulb
popa
sub
lret
sub
outsl
xchg
jbe
ljmp
mov
and
xchg
ret
fcoml
pop
xor
outsl
sub
outsl
sahf
xor
xchg
sub
sbb
push
pop
sub
shl
into
movsl
push
push
dec
jle
int
ret
popf
into
aas
add
lret
push
and
adc
inc
imul
je
sbbl
mov
inc
call
sub
out
imul
push
xchg
rorb
sbb
sbb
mov
push
pop
stos
roll
sbbl
jecxz
jae
mov
and
jne
xor
sub
mov
and
mov
mov
lcall
js
ds
fidivl
push
les
cs
or
jbe
mov
or
push
rcl
ja
aas
imul
pop
mov
imul
movl
jecxz
adc
fwait
pop
es
ds
mov
mov
mov
xlat
mov
insl
mov
cmpsb
push
clc
cltd
addb
push
das
insb
mov
xor
shlb
fadds
jg
xchg
push
ja
mov
jp
jp
cld
lock
bnd
pop
add
in
cmp
jmp
ja
push
xchg
jb
idivb
jmp
pusha
or
ds
sbbb
in
imul
pop
fdivr
ss
loopne
mov
cmp
bound
push
aam
push
pop
bnd
fistpl
sbb
in
push
into
cmp
sub
cmp
sub
dec
das
inc
and
dec
sub
inc
ss
stos
pushf
xor
sub
shl
xchg
inc
dec
add
cmp
stc
push
sub
push
push
lods
mov
sbb
xchg
mov
mov
pop
jl
mov
cmp
repz
cmp
push
negb
nop
pop
or
repnz
dec
pop
jbe
sbb
iret
test
pop
outsb
xor
xor
cmp
hlt
sbb
jle
cmc
or
pop
out
cmp
and
or
movsl
jmp
add
pushf
mov
out
movsl
out
fstpl
cld
sub
mov
flds
pop
lock
mov
xor
cld
imul
repnz
scas
push
mov
jp
stos
push
js
inc
imul
sbb
lahf
lods
mov
cwtl
fwait
jns
outsl
push
mov
mov
fstps
test
ds
xor
lods
or
call
pop
test
push
pop
movsb
std
dec
mov
lahf
pop
test
adc
inc
divb
fsubrs
in
and
aam
arpl
fsubr
xor
or
mov
imul
ja
xor
cmp
cmp
mov
popa
test
inc
cmp
push
and
mov
cmp
or
push
cmp
imul
or
sbb
mov
shl
outsb
lcall
fcom
mov
mov
push
ret
loop
sub
ret
movsl
data16
mov
push
mov
push
inc
jp
loope
ljmp
mov
inc
inc
daa
or
fisubs
sub
imul
cmp
ljmp
jno
iret
xchg
or
push
jno
orb
lahf
adc
mov
lods
pop
xchg
push
mov
add
ljmp
jg
cli
das
std
and
cs
into
jp
mov
cmp
mov
xchg
into
mov
jno
and
mov
ljmp
pop
fldt
imulb
inc
out
cmpsl
inc
cmp
ror
mov
lcall
push
es
out
xchg
cmp
xor
cmpsl
clc
inc
push
and
rcl
sbbb
imul
push
mov
insb
pop
test
sub
je
outsb
sbb
or
or
cmp
sub
sub
mov
lret
outsb
push
pop
fidivrl
cmp
addr16
sbb
jb
arpl
cmpsl
in
adc
out
sub
jb
sub
jmp
sub
add
shlb
add
sahf
fldl2t
dec
sahf
fldcw
lret
mov
xlat
dec
mov
fistpl
jb
repz
cmp
pushf
or
push
ret
xor
sub
pop
out
pop
loop
fisubrl
pop
pop
into
sub
push
ret
out
cmpsl
pop
daa
arpl
mov
sub
sub
cltd
mov
stos
mov
inc
cmpsl
mov
xchg
ljmp
mov
push
ret
cmc
jmp
scas
mov
mov
cmp
cmpsl
cmp
pop
cmp
lcall
jg
lahf
pop
or
inc
jmp
movsl
jg
mov
mov
and
insb
rcl
jecxz
das
rcrb
shll
pop
insb
mov
adc
xchg
call
ljmp
stos
inc
adc
mov
cmpsl
xchg
mov
sub
add
xchg
mov
inc
add
fisubl
ds
or
out
int3
add
imul
mov
stos
gs
not
scas
push
outsl
fcmovnb
rorb
enter
or
ja
xor
cmpsl
call
or
fistl
mov
mov
sahf
hlt
stos
cmp
ja
xchg
xor
frstor
sub
popf
cmp
xor
test
cmp
and
or
outsl
sbb
imul
adc
icebp
xchg
sub
xlat
sbb
neg
xchg
lahf
int3
pop
adc
sub
sti
inc
sti
lods
mov
mov
ret
push
fs
insb
inc
testl
xor
ljmp
push
lahf
jo
mov
movsl
mov
jb
mov
lcall
fistpl
sub
les
xorl
lahf
inc
pop
cmp
ficompl
xchg
shrl
shlb
adc
jg
add
and
dec
aaa
push
fldt
push
sub
jge
jmp
pop
fsubrs
loopne
jmp
arpl
cld
notl
push
pop
mov
and
push
pop
add
push
nop
mov
dec
loop
pop
xchg
pop
insl
js
pop
into
ss
andl
ret
or
cmp
mov
lea
les
enter
fcoml
cmp
push
push
mov
cmp
xchg
pop
mov
push
sbb
or
ficomps
bound
ljmp
sub
push
out
fcompl
xchg
ret
dec
in
inc
test
outsb
out
dec
cmp
mov
insb
sti
stos
fcomps
jecxz
dec
pop
test
fimuls
inc
jle
pop
loopne
xor
mov
xor
daa
xor
lock
push
and
xchg
push
mov
lods
out
jmp
or
xor
mul
flds
fidivrs
pop
pop
add
adc
repnz
sub
mov
ror
cmp
or
shrb
mov
xchg
sub
cmp
inc
jns
popf
and
insb
not
scas
ds
pop
notb
inc
out
xchg
xchg
cmp
jecxz
or
mov
ret
mov
insl
mov
hlt
jb
subl
cltd
inc
lcall
testl
sub
jae
inc
or
insl
mov
ds
flds
adc
cmpsb
push
inc
test
sarb
std
pop
sbbb
jb
pop
leave
mov
push
cmpsl
lret
pop
push
fildl
ds
mov
clc
pop
mov
repnz
jae
mov
mov
sub
dec
cmpsl
loop
divb
ficomps
adc
inc
lret
mov
insb
mov
cltd
mov
cs
dec
orb
cmp
nop
clc
std
push
inc
leave
lcall
xor
adc
mov
xor
ljmp
ret
and
jle
gs
in
sbb
nop
jmp
enter
dec
das
pop
inc
pop
dec
fisubrl
mov
mov
add
test
int3
mov
dec
mov
outsb
lret
mov
jle
addl
aad
ds
scas
aam
or
sti
mov
rcrb
daa
pushf
dec
adc
out
adc
pop
cmp
mov
mov
jae
xor
sub
ja
adc
pushl
cmp
and
xor
ss
fwait
pushf
pop
test
sub
aam
mov
sub
push
aad
aam
pop
jmp
movsl
push
sahf
out
cmp
sub
cli
cwtl
fildl
enter
inc
fcoms
push
jg
xor
dec
mov
dec
push
popf
pop
es
insb
sahf
push
pop
fcoml
inc
int3
mov
idivb
and
xor
rcrb
mov
lock
lcall
mov
push
sub
shlb
dec
lcall
xchg
sbb
leave
stos
stos
mov
jne
dec
mov
or
dec
rcll
sub
enter
xchg
sub
stos
push
sub
sbb
sub
xor
fistpl
mov
popf
push
cmpsl
es
jmp
daa
sub
add
adc
lret
imul
or
push
jo
cmp
pop
xor
mov
adc
ljmp
push
les
insb
mov
pop
hlt
sub
insb
mov
xor
lahf
ret
scas
or
out
cltd
mov
ss
lods
push
data16
data16
jg
sbb
jp
xchg
mov
testl
inc
imul
ret
pop
xor
lret
fimull
cs
mov
xlat
das
jle
ror
push
outsl
mov
add
push
push
xor
stc
jmp
pop
dec
mov
addb
or
inc
clc
push
divb
jmp
rorl
pop
mov
repz
pop
jge
iret
inc
or
xchg
outsb
movsl
xchg
shr
add
fldt
and
je
add
inc
fistpl
aad
shr
mov
and
rcrl
push
push
xchg
pop
mov
push
push
shlb
shl
loop
test
in
jne
orl
pop
mov
cmp
jle
stc
stc
scas
jg
sbbl
lret
arpl
pop
mov
fildl
xor
pop
adc
rolb
call
scas
sub
mov
outsb
pusha
stos
bound
xchg
test
cld
movsb
sub
pusha
mov
data16
mov
and
jo
out
cld
mov
adc
leave
fnstenv
push
sub
bound
mov
and
shl
dec
xorl
or
pop
push
or
push
jmp
lret
and
mov
mov
dec
xorl
or
adc
inc
push
jmp
lret
mov
add
leave
pop
push
repz
dec
sarl
cmp
bound
cmp
test
xor
or
jmp
lret
and
mov
pop
mov
cwtl
jb
ss
jmp
adc
gs
and
cs
sbb
pop
push
jmp
lret
and
mov
je
imul
rclb
push
lret
movsl
pop
adc
push
movsl
pop
cmp
scas
cmp
cltd
dec
repnz
xchg
stc
ss
scas
rdpmc
test
imul
arpl
test
inc
pop
jo
test
pop
pop
mov
sbb
dec
test
dec
popa
outsb
jae
add
outsl
lretw
rorb
mov
cli
mov
jae
ja
fistps
dec
insw
push
fcmovne
cmpsl
cld
pushf
insl
jl
ljmp
imul
cmp
or
in
mov
pushf
jg
xor
mov
cmp
jg
cmp
pop
and
in
dec
xlat
or
aas
adc
pop
sbb
push
cmp
sub
or
inc
jp
inc
xchg
push
pusha
cmp
adc
insl
sub
dec
daa
es
push
or
in
xchg
outsw
adc
push
and
or
adc
outsl
pop
cmp
nop
xor
shr
movsb
pop
pop
sahf
xchg
stos
jp
push
in
add
insb
ljmp
out
cmp
fstpl
push
adc
mov
add
dec
shll
bound
xchg
mov
xor
dec
and
orl
int3
cmpsb
je
rolb
data16
sub
js
clc
pop
mov
fidivl
cmp
push
xor
xor
inc
dec
ljmp
xor
adc
into
xlat
cmc
cmpl
lret
and
mov
imul
xchg
jp
insb
and
xchg
pop
cvtdq2ps
insl
cmpl
and
sbb
dec
lret
pop
push
mov
addr16
push
jp
mov
push
repz
and
inc
sub
sub
xchg
gs
jge
stos
jb
insb
sbb
sub
out
xchg
xchg
sub
cs
pop
fsubrl
add
cs
andl
sti
dec
gs
sbb
test
mov
pop
adc
jp
mov
pop
adc
xor
lret
jp
and
adc
or
es
xor
push
das
xor
pushf
jmp
imul
iret
sub
jp
jne
lret
subl
outsb
xor
data16
xor
pop
sub
imul
dec
pop
in
mov
xlat
mov
xchg
dec
cmpsl
out
std
pusha
mov
inc
in
add
cmp
outsl
pop
jns
int3
lods
jae
int3
idivb
mov
cmp
fsubrp
xor
loopne
sub
and
inc
pop
insb
data16
in
insb
ret
mov
lock
push
and
pop
fs
loopne
divl
loope
cmp
mov
idivb
jns
cli
jns
lds
in
pop
xor
xchg
out
dec
jns
pop
xorb
dec
out
mov
jge
dec
dec
jmp
lods
xchg
mov
pusha
fistpl
test
test
inc
fstpt
ret
lret
lods
lret
nop
pusha
jl
in
dec
fildl
inc
ffreep
add
sbb
dec
loopne
aad
sub
lret
cmp
cmp
sub
adc
pop
jno
inc
adc
imul
popa
mov
sbb
fcomi
or
fsubl
out
mov
fsub
and
pop
movsl
hlt
xchg
loope
xchg
test
shrb
and
and
test
sub
test
sbb
mov
mov
add
or
popf
dec
test
cmp
in
cmp
dec
aaa
outsb
xor
lret
sub
mov
lret
cmc
pop
out
pop
mov
or
stos
xchg
and
add
rclb
insb
movsl
xor
jp
fists
mov
enter
test
mov
stc
or
lods
mov
mov
ficompl
lret
pop
mov
lock
mov
push
sbb
in
cmp
ror
aas
xlat
or
inc
lret
cltd
fsubs
dec
sbb
pop
negb
out
jne
repz
push
mov
sbb
movsb
add
insb
mov
ror
push
aam
je
pop
push
rcll
push
add
mov
dec
stos
push
push
cwtl
and
mov
sub
sub
sbb
push
dec
jecxz
inc
cwtl
scas
mov
stos
repnz
mov
cmpsl
cmp
or
popa
data16
and
mov
push
mov
cs
push
and
xor
add
shll
sbb
fsubrl
int3
std
add
xor
loop
xor
or
int
sub
cmp
cld
jne
int3
negl
imulb
in
cmp
testb
cli
xor
pop
shll
insb
dec
inc
pop
cli
pop
int3
push
ficoms
dec
sbb
sub
dec
and
scas
adc
push
jo
push
dec
xor
jnp,pn
shll
pop
jp
sti
arpl
andb
stos
shlb
push
fcmovnb
cmp
or
jne
cmp
lds
dec
psubd
sub
jmp
sbbl
sub
insl
cmp
sbbl
push
dec
jmp
pop
lods
fcmovnu
adc
cmc
mov
ljmp
cmp
fisttpl
lret
push
aaa
repnz
in
aas
filds
ret
mov
cld
out
sbb
pushf
call
pop
dec
sbb
inc
cmp
rclb
negl
sub
xor
jae
mov
sbb
pop
mov
pusha
rolb
add
fwait
push
mov
gs
or
dec
and
mov
orb
addr16
cmp
pop
fildl
cmp
adc
cmc
das
push
sbb
outsl
xchg
lret
mov
sub
or
stc
cmp
dec
mov
xchg
lret
or
xor
cmp
hlt
sbb
inc
cli
or
sub
dec
and
es
xor
dec
pop
loope
mov
pop
faddp
int3
leave
test
xchg
push
imul
pop
push
shr
test
dec
imul
dec
and
sti
lret
sbb
or
cld
jno
rcll
or
push
dec
xor
fistl
xchg
cmp
fmull
ret
push
stos
out
out
lds
push
cmp
inc
push
cmc
cli
in
mov
dec
imul
mov
sub
sbb
or
cld
clc
push
jns
xor
dec
sub
out
int3
pop
andb
imul
push
push
mov
inc
jmp
inc
lods
dec
pop
adc
cmpsl
je
and
fidivs
push
sub
add
stc
mov
xchg
test
mov
ds
insl
mov
sti
sub
pop
xchg
mov
inc
std
or
repnz
xor
popf
pop
xchg
in
mov
mov
cmp
cmp
jbe
push
movsl
xor
test
leave
push
sub
xchg
jmp
int
cmp
pop
jmp
push
add
in
out
xor
sub
pop
dec
addr16
push
jmp
cmp
pop
inc
int
jmp
dec
repnz
pop
lcall
xchg
sub
negb
cmp
hlt
pop
sbbb
gs
adc
fs
sti
movsl
dec
jmp
popa
out
push
imul
pop
sahf
fsubrl
imul
cmp
and
xor
jb
negb
cmp
mov
xchg
and
mov
jmp
aam
pop
out
sbb
jbe
jmp
ret
inc
lock
das
ja
cltd
in
inc
js
fiaddl
xchg
jmp
rclb
div
push
fdiv
packssdw
mov
das
popa
repnz
dec
mov
dec
gs
or
xor
bts
push
mov
movntq
negb
jb
stos
lret
pop
call
mov
lret
cmp
push
into
xchg
sahf
data16
daa
mov
sbbl
shlb
mov
mov
les
inc
mov
pop
test
push
imul
fneni(8087
add
addr16
ja
ret
js
ja
sub
mov
push
mov
mov
inc
js
imul
cli
lea
mov
sahf
das
add
mulb
imul
sbb
sbb
inc
adc
scas
les
je
out
or
dec
cmp
lahf
loope
jns
leave
add
mov
mov
jnp
testb
fisubrl
pop
cmp
sub
ss
js
stos
mov
pop
cld
jecxz
pop
sti
push
cld
out
lcall
xchg
lock
or
inc
sub
and
pop
add
imul
push
out
fdivr
out
mov
add
call
es
mov
test
adc
out
or
out
pusha
adc
or
jg
in
jbe
lods
mov
mov
popf
rorl
and
icebp
addr16
mov
sbb
push
ret
movsl
mov
leave
loop
push
pusha
mov
jg
pop
out
push
or
das
dec
sbb
cmp
jecxz
mov
xor
pop
js
mov
adc
jae
and
mov
adc
push
dec
pop
adc
jno
xorl
xorl
push
testb
xor
icebp
push
xchg
and
push
movsl
adc
pop
xchg
imul
push
test
cmpsl
cmp
int
pop
xor
ja
cmp
lret
dec
mov
insl
je
insb
mov
adc
cmpsb
fsts
es
pop
and
pop
fiadds
loop
ja
aaa
sbbb
loop
lretw
and
int3
imul
je
js
into
fdivrl
jl
jl
test
insb
pop
jp
jns
fildl
push
testl
arpl
xchg
cltd
ss
mov
dec
or
sub
mov
pop
sub
push
rcrb
addr16
testl
nop
inc
shrb
addr16
xchg
adcl
icebp
fstps
push
popf
add
notb
xchg
vsubps
addr16
cmpsl
cmp
xchg
push
fldt
pop
jp
bound
pop
mov
cmp
dec
clc
fwait
mov
jecxz
xor
mov
rep
dec
dec
enter
and
subl
add
xchg
add
test
jp
inc
add
pop
clc
cmp
pop
lock
xor
lret
push
ret
xor
sub
repz
cmp
pushf
or
push
mov
gs
mov
gs
mov
gs
leave
fidivl
daa
xor
jae
fstps
jp
call
stos
pop
sub
push
push
fldt
jl
call
outsl
popf
or
bound
inc
jae
xchg
xor
fildll
or
mov
sub
ja
sub
mov
push
cs
and
pop
pop
adcb
loopne
push
jg
popf
mov
sbb
jle
rorb
sbb
test
test
add
cmp
lahf
pop
icebp
push
jge
mov
movb
jle
mov
jae
cmp
mov
subb
xchg
in
push
pop
push
mov
into
mov
out
lods
ss
bound
pop
pop
lahf
mov
or
sub
mov
dec
nop
pop
and
movsl
dec
xchg
int
push
mov
xchg
ljmp
add
bnd
in
cltd
and
cmp
ds
sti
pop
or
or
or
repz
adcl
aad
loop
sti
neg
imul
call
jb
cmpsl
adc
xchg
inc
sub
outsb
imul
and
xor
icebp
dec
stos
adc
call
mov
and
sub
jmp
mov
inc
adc
sarl
imul
lret
mov
outsb
pop
jge
or
jmp
call
xor
fidivrl
inc
sub
xchg
scas
push
sub
pop
in
mov
xor
mov
scas
sub
push
dec
sub
out
pop
arpl
push
dec
xchg
xchg
test
pop
mov
out
mov
dec
sbb
outsb
cmp
or
mov
cs
sub
sbb
cmp
sub
idivl
lcall
outsb
inc
or
out
fldl
inc
cmp
divb
mov
divl
ljmp
inc
arpl
sbb
and
ja
dec
xor
loopne
mov
shrl
outsb
push
mov
pop
gs
push
push
in
aam
xor
jo
ja
lcall
ret
inc
nop
push
mov
jmp
loop
lcall
sub
inc
pop
and
jo
mov
push
cmpsl
imulb
dec
imul
rcrl
fsubs
xchg
bound
imul
cwtl
mov
ret
push
out
cmpsl
xchg
xchg
mov
jae
push
xlat
lods
shrl
mov
stos
push
xchg
xor
mov
xor
fcoml
stos
mov
mov
mov
push
add
push
adc
pushf
mov
testb
rclb
jnp
into
insb
fidivl
pop
sub
xchg
sti
out
ss
mov
int
add
push
ss
and
in
mov
sbbb
mov
sbb
lcall
mov
dec
repz
lahf
imul
cltd
test
divb
jne
ret
mov
adc
pop
pop
add
popf
cmp
sbb
jb
jge
sbb
dec
sub
push
xchg
add
pop
cld
cmp
pop
gs
ds
mov
mov
pop
mov
or
cld
pop
cmp
jmp
xchg
xorb
inc
idiv
xchg
jne
insb
cmp
mov
fsubrl
sub
sub
pop
sub
outsb
sub
int3
push
jno
je
jae
arpl
push
out
push
mov
shlb
outsl
jmp
jnp
out
shrl
iret
mov
in
aam
add
ret
dec
sub
repz
fsts
fiaddl
dec
arpl
test
addr16
test
pop
push
movsl
stc
inc
adcl
jge
gs
test
cmpl
cmp
or
jne
add
test
loopne
lods
jae
xchg
loope
mov
fstl
sub
jb
sbb
mov
push
iret
les
inc
fmull
notb
std
in
xchg
push
push
test
push
push
or
dec
jg
lock
pushf
push
fcomps
xchg
pop
push
leave
insb
pop
cli
fcmovne
les
push
or
test
sub
push
outsb
xlat
xor
jmp
aas
cmp
shlb
xchg
fldl
jmp
add
sub
add
popf
rcrb
test
pop
sarb
test
push
nop
sbb
fstps
into
das
outsl
mov
or
scas
inc
xor
push
jno
ror
mov
mov
add
and
xchg
push
pop
test
dec
push
into
mov
mov
dec
sub
xor
imul
call
std
and
outsb
push
out
cltd
mov
movsl
call
inc
out
out
pop
pop
rcrb
incb
inc
imul
ds
sub
adc
mov
mov
push
cmp
insb
stc
lahf
add
mov
mov
out
aas
mov
fcmovnbe
lret
dec
and
mov
ret
cmpsb
outsl
ds
mov
pop
push
enter
cmp
adc
cmp
pop
cli
mov
sbb
push
movsb
jl
js
arpl
mov
iret
lahf
xchg
aaa
xchg
jg
lcall
jg
add
mov
adc
mov
aaa
std
sar
mulb
out
ret
out
add
cmpb
mov
out
sbb
jne
pop
jle
rolb
jg
es
daa
pop
ret
dec
jg
orb
add
push
loopne
pop
test
and
repz
and
cmpsl
addr16
jg
call
or
out
xor
jg
push
lret
add
outsb
gs
pusha
aaa
outsb
icebp
imul
outsb
mov
add
ret
xorb
pop
out
std
bound
or
xchg
jecxz
or
bound
int
jl
sbb
notl
cmpsl
mov
xor
add
add
push
xchg
jno
popf
xor
jecxz
adc
mov
testl
cmpsb
int3
fcmovnu
imul
or
je
lcall
in
add
inc
je
xchg
xor
jg
pushl
int3
fnclex
or
sbb
jecxz
orb
dec
pop
jl
inc
jle
mov
test
std
add
mov
iret
jg
incl
push
nop
push
call
pop
sarl
jp
sbb
add
xor
sbb
pop
pusha
mov
and
int
in
lds
rorl
addr16
cvtps2pd
mov
fistpl
jg
push
nop
inc
mov
pop
inc
jp
decb
fwait
push
pop
cmp
faddl
pop
std
xlat
mov
or
lcall
lcall
cmpb
iret
fdivp
cmp
fnstcw
pop
mov
pop
std
imul
pop
push
imulb
ljmp
push
pop
iret
jb
ret
sarb
cmp
push
pop
lock
pop
aaa
fidivs
xchg
test
xlat
jno
stos
push
dec
mov
movsl
in
push
sub
xor
mov
or
stc
push
aaa
ret
mov
mov
cmp
push
in
jns
fisttpl
adc
jnp
dec
push
ss
sbb
pop
je
addr16
mov
cmpps
cmp
addr16
cmovle
mov
outsb
imul
fstp
fwait
mov
int3
xor
adc
fsubrl
lahf
aas
fsubrl
cld
xchg
add
imul
mov
cld
mov
ljmp
sub
fs
push
sbb
sbb
or
pusha
outsl
mov
push
xor
dec
movsl
push
sbb
cld
mov
scas
nop
mov
idivb
jb
fdivrl
cmp
pop
cmp
cmp
cmp
xor
push
or
xchg
jge
jae
sbb
jp
cmp
sub
pop
pop
sbb
mov
dec
daa
mov
insb
gs
insb
in
mov
pop
mov
cmpsb
imul
int
adc
sahf
imul
ja
fcomi
push
je,pt
cmp
loopne
pop
lods
std
and
lods
fcmovnbe
cmp
std
sub
inc
adc
push
clc
sub
xor
ds
lock
das
enter
adc
fmull
and
stos
clc
or
push
inc
add
dec
xor
pop
imul
lcall
pop
loope
rclb
ds
testb
push
pop
in
cmp
ret
or
or
add
mov
test
orl
cmp
cmp
mov
cmpsb
sub
cmp
dec
daa
sarb
mov
pushf
xchg
pushf
outsb
imul
xchg
xor
cmpsl
les
outsl
inc
mov
repz
sub
cmp
and
lret
outsl
je
out
sub
cmp
push
pop
cmp
jbe
ds
mov
sub
testb
into
push
xchg
sub
push
addl
push
adc
cmp
loop
jb
sub
dec
sub
das
mov
hlt
insb
repnz
add
jmp
push
insb
jmp
repz
jmp
pop
cmp
jae
inc
xor
sbb
fcompl
jae
jae
jae
mulb
subb
fwait
pop
sbb
rcrl
test
inc
mov
and
orl
cli
stc
lods
call
adc
testb
jl
hlt
fistpl
cmp
je,pn
fstpt
lcall
lcall
test
popa
ficomps
pop
insb
lret
and
mov
or
cmp
xor
and
aas
sub
push
movsb
lret
dec
inc
int3
and
add
into
gs
js
rclb
ljmp
cmp
inc
fninit
loopne
lcall
shll
push
xchg
call
inc
or
ficoms
arpl
or
push
and
dec
jg
push
push
call
out
js
adc
mov
inc
jmp
cmp
push
ja
dec
pop
dec
call
pop
jl
xor
jle
jno
push
pop
and
pop
mov
push
sub
and
fidivl
inc
fidivrl
test
inc
dec
mov
es
and
ss
sub
bound
int
inc
or
xchg
sub
jno
mov
cltd
fs
gs
sahf
frstor
fstpl
dec
aas
gs
clc
mov
lcall
cmp
out
mov
xchg
jae
aas
ds
sub
loop
xor
inc
lret
mov
or
xor
dec
aas
inc
xor
and
cli
jno
jae
popf
mov
pop
cmpsb
xchg
mov
adc
mov
in
xchg
pop
mov
insb
xchg
ja
add
call
pop
cmp
sub
in
js
xor
inc
inc
xchg
fsubrs
cs
fwait
and
jmp
fcompl
mov
arpl
and
arpl
dec
nop
lret
adc
pop
inc
or
fimuls
push
mov
mov
ljmp
arpl
or
add
test
adc
rcl
in
gs
insl
and
fstp
push
scas
add
packsswb
fcompl
sahf
rcr
aaa
sub
mov
mov
sbb
dec
lds
or
dec
sub
outsb
cmp
enter
lahf
pop
iret
test
inc
dec
cli
jge
pop
push
leave
push
pop
sbb
pop
cld
ficoml
add
data16
jne
out
mov
xor
dec
bound
push
mov
pop
adc
bound
jp
pop
idiv
cmp
das
cmp
fwait
jge
rcrb
hlt
cmp
lcall
add
xchg
cmpsl
adc
cmp
inc
test
mov
inc
loope
divb
test
pop
icebp
sub
bound
pop
push
xor
movsb
cmp
bound
pop
push
test
inc
movsb
pop
aam
jno
fldenv
cmp
push
and
cmp
out
shll
pop
xor
mov
call
cmp
mov
bound
push
mov
in
mov
jno
mov
pop
sub
cld
sbb
pop
bound
jae
or
mov
mov
scas
jae
fistpl
inc
pop
loopne
cmp
xchg
int3
jno
stos
ja
adc
cmp
fimull
shll
ja
mov
es
dec
pop
fwait
arpl
xor
call
leave
test
shlb
or
jbe
rolb
imulb
jnp
and
pop
xor
notl
and
dec
dec
pop
popa
daa
pusha
jno
and
xchg
cmp
imul
mov
mov
fsub
mov
mov
xabort
loope
pop
sub
pop
and
pop
jbe
cs
sbb
ss
dec
xlat
and
lcall
cmpsl
push
inc
mov
pop
push
add
imul
xor
mov
dec
mov
mov
and
out
jp
fisttpl
cwtl
pushf
jae
imul
jge
xchg
mov
test
test
dec
out
lahf
jmp
xchg
std
test
mov
adc
jmp
mov
mov
xor
mov
push
mov
fs
loop
jnp
pop
scas
xor
xchg
in
mov
sub
dec
pop
sub
sbb
imul
push
xchg
fistl
dec
mov
jg
jl
xor
xor
fdivrl
jo
call
xchg
neg
gs
stc
inc
out
add
push
fcmovne
mov
cmp
sub
lds
je
daa
iret
lods
addb
cs
adc
movsl
sub
jbe
testl
jo
pop
dec
adc
and
out
jl
or
clc
push
push
paddusb
fidivrl
test
xor
lahf
jg
ret
fdivrl
sbb
clc
mov
mov
data16
xor
nop
in
xchg
push
test
jmp
add
sub
jl
dec
lret
sub
iret
sub
sub
push
bound
dec
jp
out
pop
dec
xor
data16
adc
push
dec
imul
jle
cmp
xchg
sbb
pop
jo
sub
cmp
insb
out
out
or
aad
sbb
dec
in
xorl
pushf
fstpt
in
add
jns
push
in
pop
and
or
cld
dec
test
fldl
ret
push
adc
mov
push
mov
fld
cmc
aad
stos
popa
mov
in
xlat
push
fistl
inc
mov
cmpsb
mov
dec
or
mov
pushf
int
ja
stos
push
push
xor
movsl
fbld
aam
inc
sbb
xorb
xor
test
mov
cmp
test
pop
fistl
cmpsl
push
sub
cwtl
push
subl
sti
dec
or
cmp
lret
push
jb
dec
sti
add
fldt
stos
mov
mov
cmp
add
pop
jae
ss
sbb
dec
outsb
dec
jge
jne
roll
aad
dec
jno
jmp
loope
in
cmp
les
cmp
imul
es
cmp
sbb
adc
loope
inc
fistl
and
fs
cli
gs
lret
mov
push
mov
pusha
pop
push
daa
cmp
fnstcw
jge
cmp
addr16
or
dec
das
and
add
mov
dec
inc
inc
pop
test
or
int
pop
adcl
mov
sahf
pop
insl
mov
imul
push
jmp
dec
stos
clc
fs
or
test
push
sub
cmp
mov
and
mov
in
cmp
pop
ljmp
push
dec
cmp
ds
lret
ret
sub
sub
push
jno
sub
outsl
pop
decl
xchg
xor
ja
sub
lods
xor
ja
lret
movsl
rcrb
and
xor
imul
add
sub
xor
push
xchg
mov
sbb
ljmp
cmp
lcall
xchg
inc
cs
xorb
mov
xchg
pop
sbbb
mov
cmp
imul
insb
adc
mov
pop
mov
outsl
lcall
sbb
repz
adc
mov
push
je
pop
fcompl
ss
scas
push
mov
dec
adc
lret
stos
cmp
fsubl
gs
xchg
or
mov
shlb
jno
add
rcrb
fstpt
mov
xor
dec
scas
rcr
test
ds
add
stc
loopne
pop
fdivrs
or
mov
xor
jle
pushf
addr16
jl
sti
mov
mov
and
in
xlat
gs
je
fdivrs
fisttpl
stos
fsubrl
cmp
fsubrl
push
movsl
fcmove
or
push
ss
pop
mov
sbb
adc
mov
aaa
arpl
mov
cmp
xchg
addr16
sub
jne
or
cmp
inc
shll
mov
cmp
addr16
cmp
dec
pop
pop
lahf
cmp
fcmovnb
add
mov
dec
mov
ret
pop
in
push
addr16
dec
aas
jns
or
test
jmp
jno
es
popf
cli
das
or
cmpb
mov
xor
jns
sbb
loope
sub
ret
sub
je
mov
cwtl
xchg
add
adc
lret
fistpll
mov
aas
jns
xchg
mov
pop
mulb
cmp
xchg
jns
cli
lahf
adc
push
mov
aad
pop
addr16
dec
jge
pop
push
jno
ss
mov
jns
jno
push
jno
sahf
in
fcmovnbe
add
iret
lods
jns
mov
and
cs
jo
fninit
xchg
cs
icebp
stos
mov
fistl
mov
insb
pop
dec
je
das
aaa
jnp
ss
sub
ss
mov
bnd
jl
jae
push
jbe
fs
jns
pop
mov
lea
mov
or
push
push
repz
pushf
push
dec
repz
cmc
mov
lods
jns
addr16
fdivrl
dec
jno
or
fstpt
test
sbb
push
gs
addr16
je
insl
dec
push
in
or
xchg
lret
test
sub
out
pop
cwtl
pop
sbb
pop
jnp
pop
insl
sub
dec
xor
jp
popa
xor
lods
ja
cmp
scas
xchg
cmpsl
lods
jns
jp
test
nop
imul
lret
lods
jnp
mov
push
aas
mov
or
push
ds
in
sub
jns
jl
mov
sub
or
mov
lret
mov
push
sti
dec
sub
jns
ret
cmpsl
cmp
orb
adc
mov
arpl
inc
ds
push
mov
aas
pop
sub
pop
dec
stos
movsl
leave
dec
add
mov
jnp
imul
dec
rclb
addr16
jmp
or
inc
mov
jns
pop
dec
or
xchg
xchg
inc
xchg
pop
sti
ret
jns
imul
xchg
xchg
push
out
inc
xchg
jecxz
mov
jnp
adc
ret
inc
jnp
push
inc
xchg
in
jns
add
lock
out
dec
je
pop
xlat
stc
fnstcw
cltd
movb
or
mov
mov
dec
lret
test
and
xchg
inc
scas
sbb
push
jno
cltd
scas
jb,pn
arpl
sbb
pop
mov
push
lods
push
jecxz
push
andl
and
iret
arpl
mov
xor
xchg
push
out
int
cmp
imulb
mov
call
repnz
jmp
dec
mov
cmp
mov
imul
xchg
push
lret
jmp
inc
inc
hlt
pop
lods
or
mov
pusha
setp
inc
pushf
mov
addr16
sub
sub
inc
jne
xchg
xor
cmp
shrb
imul
and
adc
in
outsl
cmp
dec
mov
loope
mov
mov
fisttpl
jp
pop
arpl
shll
iret
gs
sub
dec
and
mov
jno
ret
daa
mov
clc
outsb
fidivs
mov
bound
jmp
cmp
addr16
xor
cmp
cli
cmp
ret
imul
repz
xlat
cs
inc
pop
jnp
leave
push
cmp
popf
cmp
dec
xor
rorl
stos
pop
pop
push
pop
mov
push
dec
mov
mov
pop
or
fidivrl
mov
repnz
adc
rcrl
popf
call
xchg
cmp
and
cmp
dec
rcll
pop
pop
xor
jb
xor
xor
pop
pop
dec
fimull
pop
out
addr16
sub
cmp
pushf
and
test
or
lcall
gs
test
xlat
and
fnstsw
mov
adc
push
fwait
xchg
xor
xlat
cmp
lods
jns
pop
pop
xor
pop
cmp
stos
es
jecxz
xlat
jp
mov
mov
mov
mov
mov
cmp
jmp
jno
push
shrl
cmp
clc
sti
jmp
data16
mov
push
and
xchg
jl
dec
divb
push
jno
add
mov
sub
or
mov
xchg
cmp
rcr
mov
inc
pushl
xor
ss
xchg
push
jl
neg
sub
mov
sbb
ret
cmpsl
and
cmp
cli
test
cmp
cmp
add
mov
pop
int3
cmp
mov
iret
lds
loope
push
bound
adc
pop
int3
jno
cmp
cmpb
jb
xorb
ss
xchg
inc
mov
js,pn
mov
xchg
pop
jmp
pop
outsl
std
arpl
lcall
sti
sarl
imul
mov
pop
jmp
cmp
pop
or
dec
out
std
cs
jno
push
pop
add
fstpt
mov
test
movl
test
mov
jmp
sbb
sbb
push
imul
inc
and
sbb
fldcw
fwait
push
or
pop
and
cli
add
jp
rclb
out
sbb
cmp
test
jnp
jae
lret
repnz
xor
jns
imul
adc
jo
push
mov
mov
ret
cli
xor
add
or
jae
shll
mov
jl
into
insl
pusha
add
test
or
sbb
in
popa
ds
stos
jbe
xlat
negl
aam
pop
enter
push
pop
je
cmpsl
and
dec
pop
jp
jge
stos
lret
push
pusha
or
or
mulb
sub
mov
adc
dec
movsl
mov
mov
sbb
andl
das
out
movsl
jge
inc
leave
mov
push
fcmovnb
pop
dec
dec
push
and
daa
imul
cmp
outsl
cmp
jns
ljmp
or
xchg
and
pop
ret
popf
jecxz
lcall
push
sub
inc
xlat
rorb
int3
adc
cmp
xor
jns
sbb
cmp
jae
sbb
dec
arpl
ljmp
sub
loope
insl
in
cmpsl
mov
pop
ja
lret
ret
sbb
push
xchg
mov
mov
rorb
bound
pop
mov
clc
dec
cmp
jl
sbb
sub
inc
cs
mov
cwtl
sbb
aaa
mov
xchg
les
sbb
xor
xor
pop
imul
and
xor
fistps
cmp
mov
adc
mov
adc
xor
shr
lock
out
std
and
push
sti
popa
xor
cli
and
movsl
xchg
ret
jg
outsl
inc
cmp
lods
scas
adc
mov
scas
mov
push
cmp
lahf
scas
decl
sub
cmp
lock
repnz
push
mov
jmp
fmull
in
shrl
ss
xchg
cmp
or
leave
mov
pop
add
jae
stc
aad
jg
add
add
aad
cld
lods
add
or
mov
or
inc
cmp
xchg
insb
fnclex
outsl
xchg
movsb
out
jge
add
hlt
jbe
pop
cmp
sbb
or
shl
mull
xchg
mov
ficomps
add
mov
lret
adc
sub
out
pop
and
push
negb
cmp
adc
push
sbb
xor
xchg
sbb
add
mov
mov
je
xor
outsb
or
cli
or
add
aad
outsb
jbe
inc
and
inc
cmp
pop
add
push
push
xchg
fisubrs
sbb
xchg
adc
out
cmp
pop
push
cmc
icebp
cmpsb
inc
jbe
push
xchg
dec
insb
dec
add
dec
push
and
cmpsl
pop
test
into
sbb
ja
add
push
jae
fstl
lret
fldcw
push
adcb
jae
cmp
cmp
cmp
cmp
sub
arpl
fnstenv
in
push
add
arpl
daa
imul
or
mov
or
or
push
jmp
cmp
cmp
lcall
arpl
or
inc
inc
jnp
sub
loopne
mov
dec
add
test
dec
dec
add
adc
adc
scas
cmc
ret
cmc
fs
aad
xchg
popl
stc
nop
bound
aaa
insb
imul
cmc
add
jae
popf
mov
mov
dec
jo
lcall
lea
mov
lret
sub
cmc
negb
sbb
pop
fwait
mov
and
pop
or
in
lods
sbbb
push
fimuls
cld
xor
push
mov
aas
cmc
cwtl
cli
js
test
push
push
cmc
cltd
sbb
inc
jge
push
testb
pop
pop
shll
lock
rclb
ss
imul
loopne
aas
cmc
cwtl
int
andb
or
dec
cmc
push
jns
data16
push
or
fisttpl
dec
cmc
out
push
ja
rcrb
and
enter
mov
mov
inc
imul
dec
mov
lcall
repz
es
cmp
add
xchg
cmp
clc
int3
nop
add
mov
xchg
sub
mov
fstpt
je
shlb
xchg
mov
nop
rolb
and
mov
sti
pop
imul
popa
sbb
or
out
pmulhw
jp
movsl
and
test
pop
push
inc
push
pop
lock
fcmovb
lea
jp
xor
and
and
fisttpl
lret
jne
dec
or
mov
mov
jmp
mov
sub
mov
ja
jl
and
mov
cmp
adc
mov
bnd
test
sbb
mov
cmp
push
jae
xlat
or
xor
loopne
mov
add
adc
add
fdivl
movsb
imul
in
xlat
inc
xorb
sub
xchg
xchg
sti
repnz
scas
imul
dec
xchg
inc
xor
mov
inc
cmpsl
sbb
aad
mov
jp
insl
push
pusha
adc
addr16
sarb
and
es
pop
cmp
adc
aam
mov
mov
inc
loopne
mov
fs
pop
lcall
dec
xlat
mov
aam
call
out
dec
pop
pop
lods
in
xchg
cmp
jl
jne
jae
movsl
adc
mov
or
mov
insb
rolb
idivb
sbb
mov
jle
push
dec
xorb
inc
sub
cmp
xor
imul
cmp
jp
cld
sbb
dec
dec
mov
add
mov
sbb
or
cli
cs
aam
test
adc
aaa
pop
mov
or
push
or
xor
sub
pop
lret
mov
hlt
mov
outsl
mov
mov
jl
insb
rcrl
lods
xchg
jns
loop
insl
cmp
loopne
xor
test
jmp
sub
mov
arpl
push
pop
push
scas
jl
push
outsl
and
mov
xchg
dec
bound
into
daa
inc
bound
add
addl
cmp
popf
leave
arpl
pop
sub
stos
mov
stc
arpl
notl
mov
xchg
test
cmpb
int
test
in
mov
lcall
pop
in
out
mov
in
cmpsb
cmp
mov
lods
aad
inc
and
pop
xor
dec
fldenv
xor
pop
sub
aaa
sbb
mov
rclb
test
fcmovb
push
sarb
ss
neg
cld
arpl
xor
fdivr
lahf
xchg
sub
stc
cli
fcoml
dec
jno
sbb
cmp
arpl
data16
inc
dec
jae
jae
shl
and
lds
cmp
mov
pop
mov
mov
inc
aad
lret
fisubrl
add
jmp
lods
loope
lret
xchg
mov
cld
ljmp
pop
call
pop
and
jbe
jbe
aad
fidivs
pop
dec
cmp
sarl
xchg
in
aas
fsubr
mov
mov
mov
xor
add
cmp
mov
aas
int
out
jmp
inc
sbb
test
jmp
cld
xor
mov
and
mov
sbb
pop
aaa
fistl
lds
outsb
push
push
js
imul
mov
adc
sbb
rorb
push
je
imul
pop
mov
jl
jb
flds
out
or
fucomi
or
fs
imul
lds
xchg
je
int3
xchg
pop
xlat
arpl
cmp
dec
out
sub
imul
stos
fildl
nop
xor
push
imul
js
ds
or
call
cmp
jno
xchg
sbb
cwtl
jmp
pop
pop
mov
insl
or
cmp
xor
lret
mov
jmp
cmp
xchg
and
lcall
cmpsb
inc
gs
test
scas
sub
sub
lods
pop
push
mov
scas
mov
sahf
jecxz
out
loopne
push
insl
add
inc
loop
mov
ljmp
inc
adc
add
movsb
stos
ljmp
sbb
adc
fsubl
mov
fs
or
dec
arpl
fsts
imul
hlt
sbb
add
mov
fcmovnb
enter
sbb
pop
mov
cli
xchg
jne
add
pop
loopne
xor
sub
mov
mov
insl
xchg
xchg
in
jns
mov
push
lds
adcl
pop
pop
in
dec
mov
xor
cmpsb
mov
ret
jo
fsubl
fildl
jl
dec
mov
ja
mov
and
jae
movsl
sub
jge
fsub
cmpsl
scas
fldcw
jp
ss
mov
std
push
in
idivb
jb
insb
jmp
mov
sub
xchg
insl
test
push
adc
rorb
sbb
iret
je
dec
cmp
sbb
and
mov
pop
push
cmp
pop
dec
cmp
movsb
shll
shl
add
pushf
dec
lods
inc
scas
pop
xor
dec
hlt
cmp
int3
ljmp
mov
xor
cmp
jmp
push
scas
cltd
pop
dec
lods
mov
les
adc
popf
clc
pop
ss
rol
ljmp
popf
test
jae
andb
or
jb
jae
fs
jl
or
jns
ds
inc
sbb
orb
mov
adc
enter
push
repz
sub
and
das
mull
jmp
xchg
incl
andb
movsl
mov
jg
out
mov
stc
leave
mov
adcb
jl
mov
push
jge
movsl
jg
xor
mov
jge
cmp
cmp
pop
nop
outsb
scas
fstpt
xchg
rclb
repnz
adc
in
lea
loop
insb
cmp
mov
cmc
fcmovne
sbb
xor
movsl
add
jmp
mov
decl
sbb
aas
jge
fldcw
test
cli
dec
xchg
dec
int3
mov
scas
js
mov
mov
add
jl
xchg
imul
mov
imul
sub
mov
imul
addr16
loop
arpl
outsb
div
pop
dec
in
repnz
sbb
dec
and
pop
in
insb
cmp
xlat
insb
xchg
scas
dec
popf
add
xchg
pushf
adc
push
jl
jle
push
adc
adc
and
sbb
ficomps
in
dec
lret
pushf
sbb
scas
mov
sub
btr
sbb
arpl
sbb
sbb
pop
and
xor
add
jp
add
and
dec
jge,pt
and
sub
adc
inc
cld
sti
sub
in
mov
push
aam
mov
cmp
test
cwtl
adc
sub
mov
xchg
mov
push
cmp
mov
xchg
xor
lea
jae
and
subb
test
cmp
mov
pop
dec
stos
mov
and
cld
dec
push
lahf
sub
cli
notb
insb
adc
jl
test
cmp
fmull
das
pop
lds
in
pop
add
add
lods
inc
pop
lock
sub
imulb
jmp
cmp
insb
inc
mov
pop
ljmp
push
insb
fstps
mov
add
mov
xchg
out
scas
mov
or
movsb
adc
adc
cmp
add
pop
add
nop
xchg
fmull
pop
sbb
dec
scas
inc
mov
mov
sub
sub
pop
inc
into
add
jmp
dec
out
test
mov
push
cmc
add
cmp
jle
cli
pop
iret
adc
xor
jbe
shll
mov
dec
cmp
in
and
xor
daa
insl
cmp
inc
inc
jo
jae
and
imul
lret
or
jae
pop
stos
imul
rcr
add
push
movsb
shlb
sbbl
add
iret
dec
or
aas
dec
push
fsubr
xchg
push
mov
sbb
inc
push
fnstenv
dec
movsl
pop
ret
adc
lea
push
cs
fldt
mov
dec
cmp
sub
pop
push
cmp
ret
pop
jb
pushw
cltd
mov
dec
jle
lods
xlat
dec
test
fdivs
dec
jp
fcmovne
movsb
xchg
or
mov
lcall
dec
mov
jecxz
inc
add
seta
pop
lods
push
jl
sub
mov
mov
sub
cmp
jl
testl
jl
gs
mov
lds
mov
jmp
popf
mov
push
ljmp
inc
repnz
fcmovne
addr16
addb
inc
pushf
ljmp
cli
add
xlat
and
pop
push
jbe
call
inc
les
movsl
pop
adc
out
sbb
test
cmp
lahf
pop
or
in
in
loop
cli
dec
aad
pop
dec
jg
mov
add
mov
cmpsl
add
xor
add
sarl
xor
mov
popf
pop
iret
cmp
imul
fninit
jne
imul
cmp
sub
mov
jb
into
aaa
cmp
popf
sbb
xchg
pop
xor
lea
push
out
jmp
inc
xor
insb
testb
out
push
jle
outsl
ja
test
das
je
fisubrs
dec
sbb
repz
push
mov
loop
fcoms
fidivrs
jb
push
out
adc
cmp
jb
push
cmp
xchg
push
mov
or
mov
push
xchg
cmpl
fimuls
imul
out
ja
and
sub
arpl
cmp
pop
mov
add
loop
jbe
pop
mov
aad
mov
int
xchg
sub
xchg
bound
and
aaa
and
in
lret
daa
cmp
ds
jae
or
jbe
sub
sub
and
mov
cmpsb
jg
jae
scas
test
jmp
fld1
ret
idiv
push
mov
jbe
inc
inc
cmp
push
popa
sub
cmpsl
fwait
pop
push
adc
ret
pop
and
xor
into
or
mov
sub
push
inc
mov
shl
stos
mov
dec
leave
push
adc
negb
adcw
pop
pop
or
cmp
outsl
rolb
addr16
shlb
shlb
mov
das
ds
lods
cmpl
add
mov
inc
mov
clc
cli
nop
mov
push
in
sbb
xchg
jns
xor
xor
inc
pop
ds
bound
push
pop
add
xchg
lods
ja
cs
xor
test
xchg
sahf
sub
out
sbb
repz
repnz
xor
mov
rcll
push
push
xor
push
ret
enter
negb
popa
je
sbb
rorl
sbb
or
dec
xchg
sbbb
sbb
jae
inc
gs
pop
pop
push
and
dec
jno
xchg
mov
cmpsl
inc
lcall
pushf
daa
inc
shl
daa
dec
and
add
sbb
mov
mov
cwtl
xor
cltd
add
mov
pop
out
pop
dec
dec
push
cmpsl
jmp
xor
insb
or
inc
iret
sbb
and
sub
cmp
xchg
out
push
mov
mov
pop
ds
fs
cmpsl
out
adc
or
pop
pushf
pop
inc
cmp
movsl
ficomps
mov
neg
aad
push
mov
cmp
or
push
sub
mov
push
test
mov
push
sbb
or
movsl
lods
or
ljmp
ret
dec
mov
ret
and
clc
cmpxchg
dec
pop
fiaddl
push
mov
ret
push
or
inc
sub
sub
lcall
pop
mov
push
xchg
cmp
in
iret
mov
stos
ret
pushf
jle
pushf
or
push
adc
pop
mov
xchg
sub
sbbb
gs
negl
inc
sbb
sbb
sbb
sbb
leave
xchg
push
imul
ja
sbb
pop
sub
jg
std
xor
insl
sti
jmp
push
sbb
lods
xchg
xor
or
pushf
dec
xor
fildl
push
rcl
sbb
xor
jo
adcb
repnz
pusha
push
pop
shll
outsl
mulb
pop
dec
out
cmp
dec
leave
outsb
ja
in
les
pop
sub
xchg
pushf
inc
into
xchg
push
pop
nop
or
mov
cli
outsl
jp
pop
jmp
cmp
ret
xchg
dec
cmp
test
call
fs
jns
dec
repnz
dec
sbb
dec
xor
cmp
or
in
mov
xchg
call
sbb
dec
mov
lret
ja
out
lret
ja
test
fisubrl
shlb
mov
dec
push
mov
pop
movsl
pop
xchg
xchg
sub
movsb
out
insl
cld
adc
fbstp
movsb
out
fucomip
jg
out
lods
pop
xchg
xlat
shll
jecxz
cmp
mov
fnstcw
scas
sub
test
icebp
jmp
jmp
sub
insl
fisubrl
inc
push
or
movsl
out
xchg
add
popf
add
sub
aad
push
es
fdivrp
nop
mov
imul
out
fstps
dec
jbe
cmp
and
imulb
dec
mov
addl
cmp
sub
aas
or
dec
mov
cmpsb
std
imul
cmp
push
neg
lret
cmp
shl
jg
out
jp
lea
negl
xor
loop
xchg
in
sub
ret
frstpm(287
jg
dec
aam
mov
imul
xor
and
xor
out
rcrl
jle
inc
ret
add
cmp
fisubrl
fmull
or
push
sti
cltd
lods
jg
mov
jg
or
sbb
pop
mov
test
xor
and
test
pop
or
call
cmpl
add
fstps
mov
ja
push
call
fs
cs
xlat
add
or
subb
fldl
push
out
dec
es
push
inc
mov
mov
jl
hlt
or
idivb
lret
into
xchg
fwait
dec
popa
sarb
insb
lcall
mov
adc
fbstp
sub
mov
sub
je
popw
int
hlt
push
push
pop
rcrb
lea
sarl
inc
hlt
int3
int3
hlt
adc
pop
lret
pop
xor
repz
dec
push
add
dec
dec
dec
jp
pop
out
sub
ljmp
xchg
jmp
xor
mov
adc
out
retw
dec
es
dec
ffreep
dec
cmpsl
mov
fildl
jbe
cltd
xor
hlt
cmp
clc
icebp
or
or
push
fistl
aad
dec
fs
fcmovne
jl
imul
test
mov
cmp
aaa
iret
cltd
cmp
dec
hlt
filds
es
push
inc
mov
fistl
add
ja
adcb
pusha
leave
xchg
sub
fwait
cmp
ja
lods
les
iret
add
std
rorb
repz
lods
jge
cmpsl
aas
add
push
int3
jmp
mov
sti
fcmovnb
mov
inc
push
loope
mov
mov
lret
push
jle
sub
mov
lret
dec
mov
adc
mov
and
shll
dec
cmpsl
movsl
add
test
inc
xchg
adc
addb
or
ret
out
leave
mov
mov
inc
mov
int3
jmp
rcrl
push
pop
addr16
pop
lcall
push
fistpl
test
sbb
push
aad
mov
add
push
mov
pop
jmp
popf
pop
pop
jo
repnz
aaa
sub
imul
lahf
inc
ja
shlb
sub
dec
sbb
cwtl
push
and
addr16
cmp
push
sbb
insl
sar
add
push
inc
sub
ljmp
ljmp
jle
cmp
pop
pop
jmp
popf
pop
sbb
or
jmp
imul
mov
cs
mov
addr16
loop
xlat
mov
pop
cltd
dec
mov
cltd
gs
mov
pop
cltd
dec
add
cltd
pop
insl
sub
mov
mov
pop
lods
sbb
inc
sub
ljmp
and
ljmp
cs
movb
pop
orl
test
fisubs
out
or
jge
daa
xchg
xor
mov
jo
cltd
loopne
cltd
sbb
mov
push
pop
sub
mov
insb
mov
les
mov
mov
ss
das
aam
push
sub
and
roll
cmp
imul
pop
fucomip
icebp
out
push
inc
and
fstpl
pop
xchg
into
imul
inc
ss
imul
sub
mov
lds
jge
and
ljmp
mov
mov
push
lret
push
add
add
mov
in
mov
ljmp
jmp
int3
push
orb
fcoms
shr
hlt
mov
jmp
cmpsb
xlat
lds
daa
sub
push
mov
add
mov
inc
mov
mov
lock
js
idivb
inc
mov
sbb
je
std
pop
icebp
ss
mov
mov
cmp
jmp
mov
push
jg
adc
xchg
ljmp
neg
pop
cmp
jmp
jo
sub
jae
adc
push
jae
imul
pop
in
and
pop
fstps
sub
in
cmp
aaa
mov
mov
and
test
mov
ret
and
jno
es
je
ja
lds
add
cmp
mov
cld
pop
sbb
testb
mulb
insb
cli
cmpsb
lahf
pop
mov
ss
fstpt
jo
cld
insb
cmpsl
add
xchg
push
fwait
popf
cs
push
mov
enter
sti
mov
cld
sbb
fnclex
mov
dec
fidivs
push
test
les
push
je
and
js
adc
js
dec
xor
push
mov
add
sbb
add
pop
push
inc
xchg
jle
pop
mov
jae
enter
xor
pop
jmp
mov
fistl
push
xchg
push
jecxz
ret
xchg
mov
inc
fildll
fistl
and
inc
scas
cmp
mov
sahf
je
popf
test
sub
scas
jae
int3
test
je
sbb
sub
das
xchg
mov
cli
jo
and
adc
cmpl
add
cs
inc
scas
inc
hlt
sub
shr
fmul
xchg
xor
xchg
into
mov
aam
lahf
mov
lcall
mov
jb
pop
add
jns
test
fcomps
bound
sahf
lret
and
add
popf
nop
aaa
dec
ljmp
xor
out
fisttpl
push
xchg
insb
in
ret
push
cmp
repz
dec
movsb
insb
in
rcll
dec
or
cld
sub
dec
bound
loop
adc
pop
leave
lods
cmp
mov
stos
ds
sbb
lods
xchg
push
aas
cmp
arpl
mov
movsl
xor
mov
inc
push
fcmovnbe
push
in
mov
aam
test
in
aam
mov
call
aad
push
fwait
cli
imul
and
fidivl
jns
inc
div
pop
xlat
aad
push
test
popa
xor
rcll
rorl
ficomps
push
dec
mov
adc
cmpsb
add
ret
xlat
mov
stc
jmp
stos
and
test
add
gs
cwtl
inc
cmp
inc
gs
iret
jno
adc
push
sahf
daa
data16
xchg
push
imulb
aam
mov
xchg
xchg
xor
pop
cmpsl
hlt
xchg
out
lret
test
fistpl
cmpsb
push
pop
xor
fwait
jmp
and
xor
cmp
adc
lds
xor
call
bound
and
sub
mov
xor
pushf
adc
sub
repnz
imul
bound
cltd
cli
push
dec
jle
in
or
xor
stos
pop
and
or
repnz
sub
mov
xor
sub
xchg
mov
nop
fldt
mov
mov
or
std
sub
and
cwtl
test
loopne
jo
test
outsb
mov
sahf
sbb
lret
lcall
xor
sahf
xor
leave
test
xchg
jns
mov
scas
adcl
push
repnz
mov
xchg
and
sbb
inc
jo
xor
inc
imul
mov
fdivrs
jge
std
sub
fbstp
das
mov
xchg
xchg
repnz
mov
pop
insb
xor
push
dec
call
jecxz
push
les
mov
mov
dec
pushf
ljmp
mov
inc
sub
loop
imul
in
not
sbb
mov
es
or
cmp
pop
xchg
repz
daa
addr16
push
repz
push
pop
lods
adc
mov
jg
nop
leave
cmp
popa
dec
pop
stc
insb
or
cli
inc
mov
test
push
push
pop
sbb
cmp
dec
cmp
insb
or
ret
jmp
rorl
jmp
insb
xchg
add
neg
sarl
into
add
push
test
dec
mov
es
xchg
add
pop
cmp
mov
xor
sahf
bound
test
pusha
test
cmp
sub
arpl
pop
mov
xor
push
mov
fimull
ret
fsub
mov
popa
push
pop
insb
rcl
imulb
xor
xchg
cmp
call
inc
rcll
xor
aam
cmp
inc
rcll
stos
insb
and
xor
scas
sbb
sbbb
jns
cltd
jnp
sbb
inc
mov
js
push
cmp
cmp
aam
mov
push
div
fisubrs
mov
movsl
xchg
sub
xchg
cmp
into
mov
xor
mov
inc
add
ficompl
and
pop
mov
imul
cmp
inc
idivl
test
dec
or
popf
pushf
lret
outsb
ja
lret
ja
das
xchg
loopne
daa
cwtl
lret
push
pop
xlat
mov
adc
push
push
daa
aaa
lea
stos
and
or
push
jmp
add
idiv
adc
in
shrl
and
ficoml
test
mov
negl
dec
in
rorl
jg
sar
dec
lock
pop
sbb
cmp
mov
push
and
clc
aam
mov
rcrb
push
pop
xchg
xchg
xchg
adc
test
or
xchg
mov
push
lret
mov
inc
out
push
cmp
xor
xchg
add
sbb
push
pushf
ss
push
mov
pop
xchg
movsb
arpl
jecxz
push
mov
xor
ds
xlat
push
fcmovnu
loope
in
push
fistl
loopne
daa
sub
xorl
ret
je
scas
mov
sarl
pop
or
call
push
fdivs
pop
pop
push
repz
mov
mov
sub
scas
mov
adc
sbb
adc
pop
dec
dec
mov
out
jl
or
xchg
dec
movsb
add
dec
pop
mov
lahf
pop
addr16
adcl
pop
test
lock
mov
lods
mov
in
push
fucomi
mov
hlt
pushf
mov
xor
fadd
adc
xchg
das
sbb
outsb
add
aaa
or
push
inc
sub
roll
dec
dec
fildll
sbb
and
jmp
push
mov
jle
fnsave
js
call
fidivrs
arpl
nop
mov
fldenv
outsb
ss
movsl
cmp
mov
push
ret
outsl
sbb
mov
sub
data16
or
mov
pop
cltd
sub
pop
insb
sbb
pop
sbb
or
jmp
pop
sarb
xchg
inc
out
stc
fldt
cli
cs
and
xor
cmp
jmp
dec
jmp
rorl
outsl
es
push
repz
cmpsb
jmp
test
das
xor
mov
mov
dec
jle
jno
dec
pop
lcall
cmp
fdivrl
jns
mov
push
xchg
pop
fldcw
push
imulb
outsl
xlat
insl
imul
push
mov
cmp
fdivrl
std
ss
add
neg
lcall
outsl
mov
adcb
sub
sub
std
jmp
or
loop
xlat
es
push
dec
mov
ja
inc
scas
pop
pushf
lret
xor
ja
dec
out
out
push
outsl
jae
aam
ds
mov
push
pop
sub
nop
xor
in
ret
out
jb
lock
out
stc
mov
jp
aam
test
push
pop
pushf
adc
cmp
and
pop
mov
xchg
iret
movsl
add
testb
mov
mov
pop
cltd
and
repz
jle
call
dec
cmp
jmp
sarb
jo
idivb
cmp
add
or
push
mov
cmp
out
mov
mov
push
jae
lret
mov
pop
dec
je
into
pop
cwtl
inc
enter
lret
mov
sub
ljmp
inc
xchg
mov
subl
mov
mov
insb
mov
insb
mov
xor
mov
repz
jmp
rorl
mov
sub
dec
mov
push
jno
leave
cs
mov
pop
mov
testb
ljmp
popf
pop
or
push
shll
sub
cmp
lahf
pop
sub
mov
pop
insb
cli
popf
pop
sub
insb
or
and
aas
and
fs
sbb
cltd
orl
inc
pop
int
push
imul
mov
inc
adc
sub
jle
in
cmp
jb
sub
xchg
popf
xchg
pusha
test
aas
or
icebp
stos
adcb
sub
pop
pop
cltd
gs
mov
pop
cltd
dec
and
push
je
pusha
add
sbb
cmpsl
sbb
push
fldcw
lock
cmpsb
imul
xchg
xchg
push
es
loop
cmp
mov
dec
mov
add
dec
leave
add
mov
push
fildl
ret
jmp
fwait
push
cmc
rcll
push
jmp
lods
push
fcmovnu
jmp
push
push
xchg
add
outsb
xchg
out
adc
sub
and
ud2
int3
mov
or
and
add
pop
ljmp
loope
test
test
aas
xor
jnp
mov
outsl
sbb
xchg
test
je
outsl
push
mov
xchg
pop
jmp
jmp
rorl
add
pop
sti
add
inc
lods
inc
push
push
inc
and
incl
cld
imul
addr16
dec
mov
icebp
push
outsl
stc
outsb
imull
inc
dec
incl
xchg
or
fdivrl
std
sbb
fiadds
cs
xor
mov
das
inc
cmp
das
cmp
cmp
or
mov
leave
lret
stos
data16
jp
add
imulb
daa
ss
xor
cs
outsb
test
loop
cmp
cmp
cld
ficoml
cmpsb
lods
arpl
lds
imul
test
cld
icebp
lds
idiv
inc
and
xchg
enter
mov
and
xchg
call
popa
daa
inc
add
or
mov
cmp
aad
pop
insl
test
in
jecxz
jmp
loopne
xor
adc
xchg
jg
dec
pop
adcl
or
sub
lock
and
leave
push
in
pop
mov
push
ds
and
mov
jge,pn
or
mov
sbb
jb
cmp
or
xchg
adc
jg
div
fcmovnbe
jnp
add
loop
movsl
mov
mov
sbb
mov
push
iret
sarb
insb
lret
imul
mov
aaa
test
roll
sbb
pop
dec
pop
ja
mov
mov
mov
mov
xor
cs
push
jo
push
enter
aaa
ret
push
xchg
mov
pop
add
icebp
cmp
pop
mov
cli
addr16
or
xchg
outsb
push
mov
sub
mov
mov
mov
jg
nop
mov
icebp
jp
ljmp
lcall
pop
sub
pop
pop
jmp
fimuls
fbstp
xchg
decb
gs
scas
je
fisttps
sub
cld
pushf
sbb
dec
xchg
jo
and
jno
sbb
push
or
subl
pop
xlat
std
dec
push
xchg
jmp
stos
imull
daa
and
out
sbb
fldcw
scas
hlt
ficoms
push
ss
outsl
inc
pop
and
pop
jmp
cmp
sub
outsl
xchg
neg
or
cli
ret
ja
sub
fsts
in
or
popa
or
sub
xchg
sbb
or
insl
mov
jne
add
cmpl
rcl
pop
xor
mov
xor
lock
inc
lock
cmp
or
cs
ja
jmp
insl
ret
mov
push
fistl
sbbl
pop
arpl
pop
xor
out
mov
and
lret
ja
mov
stos
or
inc
cs
inc
push
pop
dec
rcll
std
fidivrs
and
imul
imulb
cmp
testb
cli
and
lret
imul
cmp
sbb
mulb
cld
add
add
sarb
fstps
adc
lret
ja
lret
pop
ja
mov
test
fdivs
sub
iret
aad
mov
inc
adc
ss
loope
mov
fstl
inc
xorb
cmp
pop
pop
pop
push
outsl
cltd
mov
xor
sub
jp
test
cmp
fdivrl
dec
xor
test
push
and
data16
out
ficoms
xor
fistps
hlt
mov
mov
dec
sub
xchg
adc
adc
imul
and
add
dec
rorb
pop
jmp
aas
push
bswap
out
stc
mov
sbb
movb
negb
pop
je
push
sbb
int
gs
subl
jecxz
test
inc
int
into
push
push
sbb
adc
xchg
xchg
pop
push
xchg
aaa
inc
inc
inc
fcmovbe
sbb
es
jno
in
mov
xlat
inc
dec
lret
xor
xor
xor
push
popf
pop
adc
dec
push
mov
pop
mov
faddl
sub
fsts
adc
or
stos
cmpsb
fidivrl
jge
jge
inc
imul
call
mov
rcrl
stc
mov
pop
mov
jg
je
inc
es
lds
xchg
cmp
adc
sub
sub
mov
mov
mov
xor
stos
mov
lret
pop
fucomi
mov
pop
cs
xchg
and
shld
call
paddw
and
mov
jl
xchg
rorl
xchg
push
lods
xor
adc
insl
pop
idivl
jno
imul
ss
mov
adc
or
insb
dec
lods
push
movsl
inc
insb
out
or
imul
cmp
fcmovne
mov
faddl
fwait
outsl
dec
xor
or
mov
test
mov
pushf
js
add
xchg
mov
jbe
arpl
xor
ret
aam
jno
cli
inc
or
push
cmpb
sbb
cmp
jae
ljmp
nop
jb
xchg
dec
rclb
lods
fmull
jb
cmp
vmovss
ret
movsl
xlat
popf
cmp
mov
imul
ret
dec
push
ret
push
mov
cmp
clc
pop
mov
loopne
insb
notb
arpl
inc
insb
stc
xchg
pop
ret
add
cltd
dec
ss
out
cmp
leave
stos
ficomps
jmp
test
sbb
add
cltd
dec
pop
mov
pop
pop
subl
mov
cmp
hlt
fsubl
cmp
mov
xchg
pop
cmp
pop
cltd
pop
mov
cltd
dec
ss
out
push
cmp
hlt
jae
into
sahf
das
out
mov
test
dec
ret
sti
dec
adc
imulb
test
xchg
cmp
pop
lret
daa
cmp
pop
push
pop
fs
in
sarb
xor
hlt
adc
dec
add
pop
repz
fsubrl
and
sub
cld
insb
stos
lret
mov
repz
hlt
pcmpeqw
lock
fcmovnu
ds
or
dec
add
sub
xchg
mov
mov
fcmovb
test
dec
sub
lret
adc
fistl
jae
lahf
or
addr16
bound
add
mov
dec
lahf
fnstsw
stos
mov
sbb
inc
or
or
sbbl
icebp
sbb
mov
pop
jbe
push
mov
pop
aad
js
mov
push
sbb
xlat
xorb
xlat
jne
and
sbb
mov
fiadds
repz
fidivs
or
xor
mov
jnp
and
xor
sbb
mov
ficoml
sbb
fwait
call
aam
mov
cmp
xor
jmp
cmp
test
mov
cli
outsb
pop
in
mov
fucomi
pop
out
js
loop
pop
push
daa
jnp
mov
jb
lock
dec
cmp
popa
rorb
push
pop
scas
imul
pop
push
pop
bound
packuswb
test
sub
and
push
cmpsl
sbb
sarb
add
data16
cmpsb
jbe
mov
xchg
mov
dec
add
das
in
xor
mov
cld
and
lcall
sub
test
mov
adc
or
es
dec
test
adc
sub
pop
cmp
fiadds
aas
test
lods
std
jmp
bound
mov
subb
push
test
jl
xchg
mov
cmp
or
mov
sub
dec
int3
repz
lcall
iret
popf
or
out
or
cld
addr16
test
dec
fstpt
inc
lds
ret
dec
aam
mov
xor
mov
jge
sub
cmp
add
cmp
fcoml
xchg
shl
mov
adc
stos
nop
jb
lcall
fsubr
lods
mov
loope
xor
cmp
cli
pop
pop
push
movb
popa
test
add
lds
imulb
rorb
pop
rolb
cltd
call
sbb
mov
mov
xor
mov
mov
and
fmuls
sbb
fcomps
in
jmp
das
or
adc
hlt
addr16
jns
sbb
sti
insb
push
mov
cmpsb
sbb
outsl
sub
or
push
aam
dec
adc
add
jle
mov
jae
pop
or
dec
jge
fisttpl
scas
xor
or
call
lahf
lret
scas
fistps
push
in
loop
add
ja
data16
xchg
push
inc
xchg
ficoms
xchg
in
push
outsl
fldt
dec
jno
add
stos
roll
cmpsb
not
push
jne
dec
in
and
mov
push
sub
jbe
cmpb
in
adc
fstpt
pop
dec
in
aam
cmp
cmp
in
push
cmp
xchg
ret
sub
mov
stos
in
push
inc
pop
in
cs
jmp
inc
loop
ss
push
xchg
adc
repz
int
insb
lcall
cmp
lods
sbbb
ljmp
out
mov
cmp
xor
sbb
mov
je
inc
mov
push
sub
int3
mov
or
add
push
lods
pop
dec
cmp
push
movb
gs
add
and
xor
pop
popf
addr16
push
inc
mov
popf
or
mov
xchg
xor
xchg
sbb
ret
or
insb
mov
mov
je
inc
dec
xchg
dec
ret
test
fdivrl
push
movsl
test
mov
cs
pusha
inc
inc
sbb
mov
mov
dec
clc
cmp
xchg
dec
push
mov
jae
sub
sbb
dec
in
addr16
xchg
faddl
jg
sub
dec
push
and
test
cmp
addr16
fcoml
mov
rcrl
mov
dec
lcall
push
lods
lahf
pop
dec
jmp
mov
or
xor
push
xchg
xchg
aas
dec
arpl
jns
call
stc
subl
test
xchg
mov
or
cmp
xor
xchg
push
and
shll
mov
jae
xchg
hlt
xchg
cwtl
shll
mov
fisubs
add
cli
sub
jp
pop
mov
cmp
sbb
fsubrs
xor
xor
xor
cli
push
mov
adc
cmp
push
push
xchg
pop
js
out
ss
sub
int3
mov
dec
les
stos
sar
and
jno
adc
dec
in
cli
mov
add
cli
bound
jbe
shl
and
dec
mov
in
xlat
xchg
sub
cli
enter
xor
lret
jg
inc
pusha
lret
imul
add
fistl
out
aad
sub
push
inc
enter
mov
mov
neg
or
jb
adc
sub
pop
jge
cli
cmp
dec
aaa
cs
xchg
mov
pop
or
ljmp
popf
sbb
xor
into
mov
inc
outsb
lcall
and
push
loopne
sub
das
div
ljmp
dec
lret
pop
sbb
clc
lret
push
negb
outsl
imul
aam
jl
shrl
sub
mov
and
popf
inc
xor
jns
std
sub
xor
data16
outsb
dec
inc
and
cli
dec
imulb
stos
inc
sbb
repz
or
xor
repz
dec
shrl
cmp
mov
inc
sbb
pop
int
ja
das
dec
div
xor
mov
mov
adcb
adc
xor
test
fs
cli
jae
insb
or
xchg
cmp
push
and
mov
cmp
sti
test
cmp
sub
cmp
das
nop
mov
arpl
mov
je
sbb
dec
sub
pop
out
js
es
lods
push
in
dec
push
push
add
bound
push
mov
cmp
popa
out
iret
orl
fisubs
repnz
or
jbe
hlt
or
or
jbe
hlt
add
sub
and
jbe
imul
jbe
mov
push
adc
inc
and
ja
dec
sar
cmp
jbe
mov
mov
test
sarl
imul
jle
xchg
jg
std
sub
adc
sub
in
jo
sub
insb
sub
jno
dec
sub
icebp
xchg
jb
pushf
cmp
or
push
and
fisttps
mov
mov
outsb
adc
xor
fwait
sti
aam
mov
mov
lods
mov
add
scas
fnstsw
add
pop
pop
clc
or
outsb
sahf
push
pop
cmpb
ja
or
fcomi
ds
xchg
push
pop
in
je
and
jne
lods
dec
cmpb
movsl
mov
rol
lods
sbb
in
leave
cmc
mov
data16
dec
adc
out
lea
loopne
cli
mov
pop
xlat
cmc
je
test
popa
pop
jle
imul
imul
mov
xor
xor
mov
pop
mov
lcall
inc
jno
lcall
pop
sub
lcall
cli
mov
ss
pop
add
xor
divb
insb
sti
adc
cmp
hlt
sub
xor
imul
rorl
hlt
pop
fisubs
dec
inc
mov
cmp
in
mov
call
loop
sbb
cmp
inc
adc
stos
rcl
mov
push
dec
repz
mov
add
lret
cmp
add
ss
sahf
bound
sbb
mov
dec
inc
pop
push
out
jle
outsb
loop
arpl
sub
mov
popa
xor
testb
jbe
push
mov
imulb
fiaddl
outsb
mov
xor
jp
inc
aaa
fcoms
mov
push
sbb
pop
and
xchg
jns
out
ss
loopne
add
pop
out
inc
out
fdiv
mov
sahf
xchg
push
imul
cs
sbb
xor
mov
lds
mov
sub
ss
movzwl
scas
inc
xchg
xchg
pop
addr16
ljmp
and
mov
jmp
jp
lea
out
shrb
idiv
push
pop
xchg
mov
imulb
xchg
sub
imulb
inc
sbb
jbe
pop
sub
pop
nop
cmp
mov
pop
lret
xchg
fld
dec
cmp
mov
in
jno
xchg
aaa
lds
negb
xchg
mov
insb
jbe
fwait
bnd
fsts
pop
jmp
ficompl
popa
bound
adc
fisubrl
dec
ss
push
push
push
icebp
pushf
sbb
jp
or
mov
cli
std
mov
pop
pop
fcmovnu
pop
dec
imul
and
cli
jno
stc
scas
imul
test
and
inc
ffree
push
bound
cmp
cmp
fsubrl
testb
jo
mov
or
sbb
push
sub
popa
int3
pop
dec
xor
out
pop
mov
jl
jnp
outsl
jmp
xor
inc
sub
sbbl
pop
xchg
dec
mov
popa
jb
sub
sbb
mov
and
push
add
push
or
adc
popa
add
xor
jl
mov
fwait
cmp
mov
mov
lret
jb
sub
add
outsl
dec
je
addr16
test
or
les
ss
or
faddl
aaa
mov
jp
faddl
mov
lock
fcmovnu
bound
xchg
iret
push
cmp
sbb
dec
outsl
cmp
cld
lretw
ds
pop
or
in
decb
push
jno
inc
and
fxch
and
sub
jae
shrl
fldcw
inc
popf
pop
xor
push
js
push
xchg
lahf
sbbb
mov
adcb
idiv
mov
mov
outsl
mov
and
lea
repnz
push
mov
stc
addr16
shl
push
cmp
xchg
mov
test
test
ja
and
fldenv
add
ffree
shrl
mov
mov
cmp
pop
add
cmp
mov
mov
add
mov
outsb
outsl
inc
xchg
adc
push
jg
mov
mov
cmp
mov
inc
adc
mov
repz
xchg
push
std
out
or
pop
xlat
cmpsb
lea
hlt
inc
xor
movsl
enter
xchg
inc
adc
or
cli
fcoml
insb
jmp
pop
and
fsubrl
subb
data16
sub
mov
sbb
repz
imul
in
sub
movsb
xchg
jmp
dec
push
cmp
test
test
in
ds
jmp
daa
mov
or
jg
cmpl
nop
mov
fstps
je
cmpsl
pop
into
push
xor
dec
addb
add
xlat
mov
lods
cmp
shrb
jo
fstpt
cmpl
mov
mov
sub
pop
jmp
sub
inc
and
movsl
dec
test
or
testb
test
add
xor
pop
out
hlt
jmp
jecxz
test
push
and
dec
fiadds
std
fisttps
and
cwtl
orl
add
mov
ss
push
fxch
xchg
out
iret
pop
push
cmp
mov
add
dec
adc
dec
jmp
xchg
mov
rorb
popa
and
mov
or
xchg
xchg
add
or
push
cld
cmp
in
xlat
pop
inc
pop
rcr
fimuls
cli
stos
sbb
aas
cwtl
rcll
mov
mov
addr16
pop
pop
or
dec
xor
inc
sbb
fidivl
inc
lret
subb
insb
fnstenv
cmp
cmp
out
cmp
imul
inc
sbb
cld
mov
cwtl
inc
cmp
std
pop
xlat
pcmpgtw
arpl
jl
fnstenv
jo
popa
pop
pop
sub
or
pop
xchg
pop
mov
test
xchg
stos
xchg
pop
sbb
negl
push
xor
ljmp
out
aas
inc
push
cmp
sub
xor
mov
cmc
loopne
insl
ljmp
lret
or
lcall
mov
shlb
inc
mov
daa
push
cwtl
xor
push
imul
or
data16
mov
ljmp
nop
test
dec
inc
inc
xlat
push
ss
xchg
mov
sub
xchg
xor
mov
sbb
add
out
sub
adcb
mov
orb
in
and
nop
andl
dec
jmp
ret
test
dec
rcll
sbb
sub
lcall
xor
jo
loop
iret
push
xchg
test
jp
nop
repz
rcll
push
xchg
xchg
sub
and
dec
aam
loopne
test
add
hlt
jo
loop
iret
push
xchg
test
push
test
mov
adcl
push
fwait
insb
push
nop
clc
pop
mov
cwtl
into
mov
adc
cltd
rclb
mov
insb
adc
mov
nop
lahf
cmp
subb
add
je
pop
push
cmpsb
xor
dec
xor
mov
hlt
lods
jae
mov
xor
dec
xor
es
lea
mov
notb
scas
sub
pop
aad
mov
mov
inc
push
add
aaa
fwait
cltd
cmp
push
mov
cmp
addr16
xchg
mov
add
add
sahf
nop
adc
fldl2e
stc
popf
nop
lahf
ss
xchg
into
mov
sub
xchg
sbb
mov
into
add
or
cmpsl
inc
push
jo
sahf
nop
adc
cmc
and
cmp
xor
rcl
sub
lahf
mov
nop
mull
lahf
out
mov
xor
pop
insb
test
pop
adc
xor
hlt
fwait
mov
nop
fmul
add
adc
adc
fadd
add
in
or
push
cmp
sbb
repnz
rcrb
stos
dec
pop
fwait
jp
loopne
jno
mov
into
pop
jg
pushf
int
bnd
push
shlb
loope
push
mov
ja
movl
insl
jg
adc
pop
jno
jmp
inc
sub
push
std
in
add
push
inc
cmp
dec
xor
push
add
sub
icebp
jl
ss
xchg
add
sub
pop
mov
lcall
aas
sahf
notl
xchg
inc
and
mov
insb
imul
xor
inc
pop
out
xchg
dec
call
pop
dec
aad
mov
xor
imul
andb
pop
pop
mov
movsl
and
into
cmc
stos
mov
xchg
sbb
mov
mov
mov
and
sbb
inc
mov
add
iret
es
push
orb
subl
addl
dec
addl
cmp
cmp
testl
pop
enter
dec
call
xchg
cmp
add
sub
mov
out
imul
or
cli
call
sysexit
sub
mov
pop
mov
xor
jl
cld
push
cmp
lods
pop
dec
call
cmp
cmp
mov
adc
enter
aaa
pop
pop
xor
test
enter
cmpb
in
add
out
pop
imul
xchg
in
push
gs
pop
xchg
andl
sbb
pop
sub
dec
pop
sbb
jp
sub
pop
or
sbbl
push
rclb
hlt
or
out
imul
inc
xchg
sub
push
jmp
cmp
cmp
dec
push
outsb
mov
cmp
xor
push
mov
ret
mov
in
mov
es
sub
xchg
icebp
adc
insl
pushl
ljmp
push
and
js
sbb
and
jmp
fisubrl
sbb
repz
cmp
mov
test
outsl
and
loop
add
inc
fwait
pusha
dec
outsl
daa
sub
insb
or
xchg
cltd
or
fisubrl
mov
hlt
sbb
jl
and
push
inc
jg
orl
call
xchg
cmpl
out
push
hlt
out
adc
and
sub
sub
scas
shrl
mov
mov
cs
sub
push
or
adc
jmp
icebp
aas
dec
movl
cmp
pop
xor
dec
pop
fucompp
imul
imul
test
cmp
into
in
xor
jae
lds
sarl
pop
dec
bound
mov
xchg
lods
fisttpll
repz
and
dec
int3
jne
mov
ja
jb
mov
stos
stos
enter
mov
adc
ret
out
pop
and
push
sbb
mov
jae
addr16
push
fstps
rcrl
pop
jp
fistl
sub
sub
sar
jne
imul
lret
push
cmp
xor
orb
test
sub
xor
push
mov
std
movsb
jno
jb
cltd
ljmp
adc
imul
mov
pop
pushf
lahf
rclb
mov
pop
and
xchg
sub
jmp
imul
loopne
pop
sarl
pop
dec
aad
mov
shl
pop
int3
cmp
and
jge
pop
sub
xchg
mov
cmc
sar
cld
jb
test
fdivrs
repz
in
cmp
mov
mov
movsl
and
out
icebp
std
sub
loopne
mov
orl
lret
or
lret
pop
pop
fwait
sub
push
mov
mov
in
xor
xchg
add
sti
fcmovnb
icebp
imul
popa
pop
scas
dec
das
outsl
call
mov
movsl
out
xor
xor
addl
mul
flds
or
mov
pop
in
push
scas
enter
and
lea
xchg
popa
push
insb
lret
lcall
test
and
int3
loop
je
aaa
pop
std
jmp
sub
and
xor
jmp
add
enter
cld
sahf
ds
lcall
and
out
lods
cmp
neg
xor
cmpsb
add
loop
xorl
shrl
adc
shr
mov
test
dec
in
test
cmp
daa
jge
loop
adc
into
lods
test
jmp
xlat
cmp
out
fsubl
mov
jmp
mov
cmpsl
dec
and
and
and
les
loope
cmp
inc
dec
pop
mov
jae
fwait
dec
imul
pop
sub
xlat
push
shlb
outsl
fldt
xchg
xchg
stc
sub
add
je
mov
and
dec
data16
cmp
push
fcoml
insl
dec
or
insb
xchg
sub
pop
insb
xchg
mov
into
push
mov
cmp
pop
shr
push
mov
mov
xchg
inc
mov
push
or
hlt
and
test
iret
call
mov
testl
out
jge
icebp
das
out
xor
out
lahf
pop
pop
dec
sti
in
adc
mov
or
lods
xchg
inc
xor
movsb
fwait
xchg
ss
xor
or
js
push
hlt
or
int3
xchg
fdivrl
add
test
aas
add
xchg
sub
test
in
pop
pop
pop
pushf
push
mov
in
xchg
mov
xchg
sub
jecxz
shlb
xchg
or
xor
ss
mov
faddl
inc
push
and
sbb
repz
or
cmc
and
push
add
sub
xchg
xorb
bound
bound
dec
add
xchg
push
xchg
push
jl
notb
and
out
call
fcomi
js
pop
shrb
arpl
cmp
int3
xor
lret
or
out
sub
icebp
and
cmp
fwait
imul
mov
mov
mov
and
xchg
push
int
mov
insb
xchg
ret
clc
mov
push
cltd
test
jmp
dec
cmpsl
cltd
adc
popl
clc
or
push
pop
sub
mov
cmp
int3
leave
les
mov
inc
mov
neg
stc
mov
and
vpmacsww
jmp
pop
cltd
dec
or
cltd
gs
xor
fdivrl
mov
testb
test
insb
mov
out
inc
aas
mov
popf
pop
lahf
cmp
lahf
pop
or
jmp
cmp
pop
or
jmp
popf
pop
jg
cmp
out
or
iret
dec
jns
fucomi
mov
aaa
sub
cmp
imul
xor
mov
pushf
mov
add
in
sub
notl
lcall
pop
test
sub
popf
fst
push
pop
popa
jp
ja
push
xchg
push
repz
sub
or
jmp
popf
pop
das
mov
dec
sbb
sti
or
cmp
jecxz
and
ljmp
xor
cld
cmc
mov
xchg
xchg
or
movsl
outsb
sbb
out
cld
cmp
lahf
adc
cmp
dec
movsl
repz
jge
mov
imul
jne
icebp
add
in
mov
mov
es
repz
cmpsl
shrl
ret
movsl
bound
cwtl
mov
negb
or
out
jmp
je
xchg
xchg
mov
cmpsl
shrl
pop
xchg
fcmovnb
xor
xchg
lret
imul
mov
aam
dec
cmp
imul
or
mov
add
mov
jg
adc
mov
aas
add
adc
sub
mov
cmp
mov
add
ljmp
jae
cs
sub
sub
popf
pop
xlat
aaa
pop
xchg
pop
adc
cmp
xchg
lret
mov
dec
in
outsl
inc
out
rcrl
mov
out
insb
rclb
test
jmp
sub
fiadds
sub
or
pop
mov
and
cmp
push
fwait
sub
push
or
push
mov
pop
sbb
inc
incb
aas
pop
pop
mov
aas
add
cmp
inc
adc
gs
cmp
xchg
insb
sub
cmp
daa
or
repz
pop
movsl
sub
add
or
push
pop
sub
mov
cmp
pop
int3
insb
les
pop
mov
mov
xchg
into
pop
pop
sti
inc
and
cwtl
pop
pop
das
mov
testl
insb
sarl
ret
mov
cmp
pop
cltd
pop
fiadds
and
mov
cmp
outsl
or
inc
insb
pushf
scas
movsl
dec
lcall
outsb
mov
xorb
bound
and
xchg
push
shrl
xchg
int
mov
mov
out
insb
rclb
mov
jmp
dec
cmpsl
int
notb
pop
movsl
es
add
loopne
pop
mov
aaa
pop
fsetpm(287
pop
sbb
ficoms
in
jp
shl
arpl
push
dec
outsb
stos
pop
cmpsb
jb
sub
lcall
dec
pop
sbb
fprem
mov
jno
movsl
std
out
or
outsb
push
or
cmp
inc
popf
pop
cs
std
dec
jge
cltd
decl
cmp
imul
adc
add
jp
fucomi
jecxz
pop
andb
lret
test
sbb
mov
clc
or
movsb
ds
sub
lock
jno
pop
jge
dec
insl
sub
push
jg
hlt
lahf
sub
pop
ds
cmp
pop
ss
dec
and
inc
stos
pop
pusha
sub
lcall
inc
xchg
outsl
es
sbb
pop
ja
or
lcall
dec
or
jae
imul
leave
clc
sub
or
insl
js
rorl
mov
insb
setle
test
push
xchg
dec
ja
mov
inc
xor
mov
mov
in
leave
mov
or
and
dec
mov
mov
stos
bound
out
lcall
ss
dec
dec
out
call
push
jno
fstpt
jbe
push
mov
fdivr
imul
into
imul
movsb
ja
push
mov
or
cmp
movsl
test
popa
mov
sarl
lods
adc
lahf
cmpsb
into
push
jb
mov
icebp
push
pop
imul
enter
jmp
je
mov
add
pop
cmpsb
push
and
sub
sbb
lods
or
outsl
addr16
fdivrs
mov
nop
push
insb
cmp
fcomps
rcll
aam
jp
fidivrl
stos
daa
es
out
lock
ss
stos
stos
int
cmc
mov
cmp
mov
hlt
pop
push
in
and
test
mov
push
jnp
jge
xchg
imul
aaa
fisttpl
push
stc
xorl
jg,pt
inc
call
movsl
fistl
ja,pn
mov
sbb
cmp
nop
xlat
fmulp
sbb
fsts
push
test
jle
push
mov
fadds
out
cmp
mov
mov
mov
cli
pop
icebp
or
out
aaa
cwtl
push
into
insl
jl
ss
adcb
push
dec
mov
jmp
mov
test
adc
jecxz
jb
negb
sub
or
jne
jae
imul
int3
test
stos
cs
js
fstps
subb
shlb
xchg
pop
ja
gs
outsl
push
scas
mov
dec
arpl
push
ret
fsubrl
hlt
das
ss
xor
xor
fldcw
sbb
cs
clc
cli
test
mov
push
daa
xor
or
jno
adc
inc
dec
xor
dec
mov
mov
bound
cmp
mov
jp
xchg
sub
in
mov
sarl
imul
jl
xor
aad
ljmp
mov
or
xor
cmc
and
push
mov
sub
mov
mov
mov
mov
jecxz
addr16
xor
mov
fisubs
cmpsb
xchg
push
ljmp
outsl
je
inc
jp
xchg
scas
push
in
push
flds
xchg
jae
std
add
lahf
es
shrb
pop
xor
mov
sub
ds
mov
xchg
xchg
and
sub
outsb
subb
in
dec
sub
imul
cmp
push
sar
into
imulb
push
push
cmpsb
ss
sti
dec
ljmp
not
hlt
sti
push
les
repz
ljmp
out
cs
mov
xchg
dec
push
loopne
and
inc
xlat
mov
sbb
add
sub
sahf
mov
movswl
fwait
push
iret
push
aaa
sbb
inc
popf
cmp
pop
sbb
daa
pop
inc
dec
stc
pusha
inc
push
pop
cmp
xor
dec
nop
jo
stos
sub
and
mov
jp
mov
dec
fcmovnb
push
xor
call
dec
xchg
adc
push
xor
add
adcb
enter
call
pop
mov
push
sbb
es
or
cmp
das
cmp
push
addr16
out
in
hlt
cmp
xchg
shl
mov
jp
or
inc
fcompl
fildl
jmp
imul
lcall
insb
fistl
sub
sti
xchg
imul
push
adc
arpl
xor
pop
mov
inc
movsl
loop
sub
pop
lahf
repnz
pusha
aad
and
fnsave
stc
mov
scas
inc
cmp
movsl
sahf
xchg
in
jbe
mov
dec
push
jmp
jne
add
adc
setg
jno
add
xor
in
add
addr16
aad
mov
mov
out
sti
fldt
sub
push
sbb
ja
movsl
xchg
mov
mov
mov
inc
fildl
push
ja
pushf
dec
testb
dec
mov
and
ljmp
add
out
adc
loope
scas
fstps
mov
jp
dec
movsl
ljmp
fxch
pop
jle
imul
pop
or
jbe
jbe
stos
mov
in
das
sbb
xor
mov
adc
inc
imul
cmp
jmp
add
push
jmp
dec
push
mov
push
ret
push
nop
push
insl
ret
ja
outsl
lret
jns,pt
xchg
cmp
call
mov
fs
adc
jge
dec
addb
xor
rcr
test
das
sub
out
and
in
cmc
jno
or
push
imul
imul
dec
jae
pop
sub
sbb
dec
sbbb
and
mov
lods
pop
lods
int
mov
sti
cli
shll
lcall
mov
add
stos
xor
aam
in
xor
sbb
cmpsl
mov
adc
jg
inc
ss
inc
ret
jmp
imul
leave
lock
imulb
imul
movsl
aaa
orl
sbb
and
dec
pop
cmpsb
lds
test
cmpsb
xor
dec
sar
mov
pop
orl
mov
fdivl
cmp
inc
jp
mov
and
loop
enter
mov
insl
sahf
pop
lret
jge
fcmovnbe
aaa
shlb
stos
mov
loope
data16
ret
xor
jle
insl
out
addr16
rcr
std
in
fiadds
push
jno
ja
cld
dec
mov
iret
mov
mov
pushf
cs
inc
pop
jno
fdivrl
push
dec
pop
sti
xlat
cli
push
orb
jl
inc
cmpsl
scas
shl
dec
mov
rclb
xchg
in
push
mov
sbb
xor
ss
push
fwait
movsl
or
push
xchg
push
lcall
add
cs
mov
dec
dec
jno
sbb
xor
pop
movsl
cmpl
ficoml
ljmp
mov
cli
cmp
sub
mov
arpl
sub
enter
cmpsl
dec
pop
mov
or
push
mov
sub
repz
aas
push
mov
cmp
or
pop
cmc
das
fldcw
dec
xchg
pop
sub
lahf
jnp
scas
xor
je
adc
sub
push
cmp
pop
jl
scas
cs
fisubrs
cli
cmc
push
or
dec
add
cmc
sbbb
xor
out
movb
sbb
les
jp
xor
rcr
dec
scas
fs
adc
add
and
mov
adc
insb
dec
fisubs
pop
xor
call
xlat
dec
lahf
and
pop
bound
pop
stos
jae
sbb
imul
cmp
push
daa
flds
call
pop
out
and
fstpt
push
jae
xor
xchg
imul
pop
cmpsb
pop
xchg
push
test
xor
aaa
decl
xchg
inc
xor
xor
stc
adc
add
pop
sub
lods
push
xchg
mov
loope
xchg
cmp
and
dec
dec
out
lods
aaa
fidivrs
ret
mov
xchg
lcall
and
movsb
dec
test
sahf
or
sub
imul
mov
inc
fcomps
cs
xor
and
test
dec
scas
xor
imul
fsubrs
das
rclb
shrl
ja
fcoml
repnz
xchg
mov
insb
push
gs
lock
mov
mov
andl
rcl
and
imul
mov
push
jae
jmp
pop
xchg
lods
into
add
dec
mov
dec
icebp
sahf
dec
es
xor
out
jecxz
pop
mov
rcrl
das
dec
mov
in
les
push
mov
dec
push
shlb
ret
mov
jb
movsl
push
jmp
enter
data16
mulb
add
mov
test
jge
mov
dec
pop
clc
pusha
loop
mov
outsl
testl
in
mov
mov
or
push
cmp
pop
addr16
add
cli
mov
leave
out
ss
sahf
addl
xor
mov
pop
rcrl
xorb
popf
mov
imul
lret
fldt
push
adc
add
out
mov
add
xchg
lods
dec
popa
mov
xchg
jg
dec
aam
mov
enter
adc
or
sub
mov
xchg
cmpsl
mov
data16
jmp
popf
xchg
sub
ljmp
fldt
add
push
popf
repz
cmp
adc
inc
hlt
push
insl
lds
sbb
and
aaa
cmpsb
out
push
test
pop
and
fildll
cmp
or
ss
lcall
inc
xchg
fwait
lods
imul
nop
cs
cmp
outsb
jmp
and
dec
xchg
jns
pop
or
out
cmp
rep
or
cmp
inc
mov
or
push
in
xor
or
push
push
mov
pop
mov
push
loope
or
outsb
ja
xorb
fwait
dec
enter
mov
sbb
xchg
arpl
adcb
fwait
or
cmpl
mov
jne
pop
push
mov
push
fldt
rorb
mov
adc
insb
and
xor
insb
call
pushf
imul
mov
dec
mov
repz
push
arpl
push
pop
add
jle
sahf
push
lcall
mov
sbb
outsl
into
jmp
mov
repz
cwtl
pop
lret
add
or
scas
push
pop
dec
xchg
outsl
add
jge
xchg
mov
push
call
imul
call
mov
lock
xor
jns
sbb
dec
mov
stos
sti
cmp
addl
xchg
clc
cmpsb
mov
pop
lcall
gs
push
insb
xor
sub
xor
imul
push
dec
cmp
lahf
push
adc
xor
sbb
movb
cmp
sbb
arpl
jb
dec
cli
outsb
fistpl
sub
cli
sbb
pushf
adc
popa
and
scas
pop
sub
into
cmc
push
fists
adcl
cwtl
mov
mov
pop
xor
lods
insb
out
les
push
jne
adc
mov
dec
or
fs
pop
mov
out
jle
or
test
sbb
data16
dec
mov
dec
pop
in
imul
cmp
push
fildl
outsl
cmpsl
sub
imul
pop
mov
push
mov
or
imul
lods
lret
xchg
jbe
pop
lret
or
imul
jae
mov
xor
adc
sgdtl
jg
and
mov
cltd
pop
stos
xchg
inc
shrb
scas
cltd
mov
ret
or
out
mov
dec
push
fcmovnu
subl
daa
inc
scas
outsb
test
dec
cmp
clc
mov
test
int
cmp
xchg
aam
mov
mov
jae
fwait
inc
dec
mov
repnz
dec
pop
mov
fimull
cmp
jmp
scas
jae
leave
out
test
les
or
dec
roll
das
push
sub
fnstenv
cmp
mov
sbb
mov
in
or
testl
sbb
cld
inc
in
fcoms
out
nop
cmp
sub
into
stc
push
push
xchg
es
loopne,pt
js
repnz
sbb
clc
sbb
stos
push
pop
xor
enter
sbb
cmp
jb
or
fisubrs
fwait
les
xlat
add
jg
adc
sub
pop
xchg
pop
mov
adc
jecxz
xor
jle
in
insb
shll
push
fimuls
push
and
subl
pop
stos
les
int
jle
sbb
mov
testb
shl
xor
sbb
ja
fldt
and
xlat
xchg
pop
pop
fstpl
cmp
pop
mov
cli
daa
push
sub
outsl
xor
push
jp
jno
sub
jbe
adc
repz
shl
repz
mov
xchg
sub
packuswb
mov
jno
inc
fnclex
mov
lods
inc
inc
or
jge
mov
pop
cmp
test
enter
inc
fisttpl
xor
pop
push
ljmp
ret
push
ljmp
pop
pop
xchg
mov
out
or
test
adc
ss
mov
subb
pop
or
arpl
adc
push
loope
hlt
sbbb
movsl
mov
dec
std
repz
repnz
test
pop
aaa
addr16
outsb
jge
xor
dec
push
mov
imul
ja
jb
and
out
xor
imul
cmp
pop
or
mov
pop
clc
mov
and
mov
jge,pn
cmp
aaa
sub
mov
sub
out
xor
jb
cmp
dec
push
test
nop
sbb
sbb
xchg
or
sub
popf
test
test
fmull
lret
sbb
nop
jb
sbb
imul
push
cmp
cli
cmp
shl
data16
add
cmc
ss
testb
dec
xchg
xchg
pop
push
idivb
dec
push
out
lods
cmp
xor
cmp
inc
loop
cmp
xor
and
xor
sub
cmpsb
pop
sub
adc
mov
xor
cmc
mulb
xor
fwait
mov
and
sbb
and
mov
adc
notb
notb
mov
or
ret
cmp
sub
dec
pushf
inc
rolb
lea
dec
dec
jle
inc
das
out
lret
sub
sub
movsb
inc
dec
pop
sub
push
and
insb
and
movsl
or
inc
pop
xor
inc
jp
fnstenv
cmp
out
sbb
notb
sbb
ret
xchg
dec
cmpsl
in
pop
fmull
mov
inc
cmp
and
not
bound
lret
dec
mov
mov
jno
sub
ror
mov
fildl
mov
out
pop
dec
shrb
into
lcall
push
jecxz
mov
pop
repz
stos
aam
aam
sub
xor
push
xchg
int
add
add
and
cmpsl
pop
imul
cmp
movsl
add
mov
and
xor
pop
sti
dec
mov
adc
loope
pop
repnz
ja
movb
add
sbb
dec
test
pop
xor
mov
test
sbb
sbb
repnz
fisttpl
push
xchg
mov
das
bound
in
pop
inc
push
xorl
pop
sbb
push
fiadds
cmp
xchg
jbe
pop
jg
inc
fimuls
out
cmp
lret
and
add
cmpb
movsb
test
fcoms
fsubrp
cmp
jecxz
dec
inc
add
jmp
push
test
enter
fmull
lcall
fidivrs
inc
dec
cld
es
mov
mov
dec
jle
jmp
gs
negb
dec
dec
ss
in
pop
push
cwtl
mov
mov
dec
push
inc
outsb
sbbb
push
test
insb
xor
lret
mov
call
popl
call
outsl
push
mov
pushf
into
stos
xchg
loopne
sub
ss
xor
pcmpgtw
pop
or
fucomi
lcall
rorb
pop
rclb
sub
dec
jno
sub
cmp
sub
out
mov
test
jmp
cmpsb
add
and
imulb
outsl
pop
mov
xor
and
sbb
inc
mov
push
xchg
fxch
pop
outsb
ljmp
lcall
pop
mov
jmp
adc
mov
ds
inc
ss
jne
es
leave
mov
ds
ret
cmp
test
sbb
sub
shlb
movsb
mov
inc
push
push
aad
mov
sbb
mov
fsubp
repz
pop
push
mov
add
jo
sbb
lock
scas
xlat
std
xor
lods
pop
scas
pop
or
xor
cmp
daa
sub
movsl
and
jg
outsb
and
outsl
or
hlt
ljmp
scas
push
push
lods
ret
xchg
fs
push
fsubrs
push
shrb
insb
lahf
fcomps
cmpsl
fmulp
sti
xchg
mov
ljmp
fwait
inc
je
mov
and
ffree
push
and
fildll
push
aaa
daa
xor
ja
pop
ja
sub
shr
lret
lds
lret
push
inc
pushf
ss
dec
rol
rcrb
xchg
dec
cltd
xor
and
out
out
mov
dec
lret
or
jo
pop
les
ljmp
pop
jl
mov
rorb
lea
mov
aaa
xchg
adc
add
xor
loop
ljmp
jp
dec
outsb
fidivl
xchg
jge
and
movsl
dec
push
dec
mov
sbb
rcrl
inc
imul
ss
xchg
sub
loop
dec
jae
fidivrs
push
imul
sbb
dec
cltd
aam
sbb
mov
jns
hlt
jns
dec
pop
inc
pushw
shlb
loop
push
mov
and
adcb
fiaddl
fmul
outsb
ja
lret
ja
xor
mov
addl
push
popf
testb
out
xchg
lods
ljmp
rorl
mov
fadd
pushf
pop
or
cmpb
push
jmp
cmp
or
in
jo
imul
scas
rorl
test
lods
sub
adc
lods
lods
lods
icebp
cmp
lods
mov
stc
mov
jo
js
stc
ret
sbb
iret
mov
loope
insl
sbb
xor
push
les
mov
add
fucomp
xor
pop
repz
std
and
daa
pushf
addr16
jae
fcmovnb
test
jbe
sub
and
daa
push
mov
outsl
test
push
sub
add
mov
sub
push
sub
mov
add
lds
pop
pushf
push
add
cmp
loopne
pop
push
mov
movsl
lea
ds
adc
mov
cmpsl
sub
inc
loop
sub
adc
sub
push
cwtl
scas
in
call
into
sarl
cmp
mov
mov
add
clc
shll
xchg
push
imul
outsl
mov
lock
shl
test
pushf
cmpsl
mov
xor
ret
fidivl
sbb
pop
clc
jmp
xor
test
and
fildl
hlt
fistpl
std
adc
out
xchg
push
mov
inc
jge
push
shrl
cmp
lret
sbbl
xchg
mov
std
out
push
mov
sub
xlat
stos
inc
mov
jo
ret
adc
int3
jp
push
jg
clc
insb
sti
outsl
mov
jg
addb
dec
adc
cmp
fidivrl
gs
pop
lcall
pop
stos
jg
add
inc
sar
xor
dec
scas
pop
dec
int
movsl
cmp
sti
add
or
adcb
fwait
inc
pushf
faddl
cmp
cli
mov
aas
cmp
lcall
out
add
sti
or
and
lret
movsl
push
dec
addr16
push
jg
and
push
pop
xor
jmp
sub
dec
cmc
shlb
mov
fbstp
dec
and
sub
movsl
xor
dec
rorb
in
xor
add
add
mov
mov
stos
xor
mov
xchg
and
enter
sub
popf
and
sbb
inc
loope
aad
ds
jbe
dec
or
mov
mov
pop
xorb
aad
cmp
jg
outsl
push
and
or
mov
xor
loopne
xor
cmp
cmp
adc
pop
fistl
cmc
push
imul
sub
not
cmpsb
and
adc
inc
sti
or
idiv
pop
cli
dec
in
dec
pop
or
push
sarb
jle
sahf
mov
lret
sub
insw
or
and
fwait
pop
pop
leave
jmp
fisubrl
sahf
mov
sbb
jns
and
pop
mov
mov
fisttpl
call
into
inc
jg
cs
push
adc
aad
sub
mov
lret
sub
imul
sub
and
and
outsl
into
jmp
mov
sub
adc
or
clc
daa
push
movsl
mov
sbb
adc
es
mov
xor
sub
sub
fstpt
fdivr
imul
lahf
mov
insl
mov
das
push
daa
push
ret
inc
sbb
popf
ficomps
pusha
je
roll
inc
sub
xor
nop
lods
adcb
test
rol
aad
sbb
sub
mov
ss
mov
pop
add
add
mov
aad
in
or
cmp
repz
rclb
into
shll
aam
cs
pusha
mov
fldl
xlat
pop
outsl
imul
adc
fcoms
pushf
sbb
sub
pop
ss
pop
lcall
jb
lahf
sbb
cmc
mov
rorb
mov
notl
push
dec
std
mov
sub
movsl
push
sub
or
adc
test
add
aad
and
dec
jo
shl
dec
sbbl
mov
popa
push
mov
sbb
fistpll
roll
ds
in
dec
jb
xlat
cmp
push
outsb
cmp
ret
outsl
js
adc
andl
push
xchg
test
int3
mov
dec
int3
mov
pop
or
sbb
or
frstpm(287
push
imul
sbb
and
or
pushf
jp
cmp
scas
fsubrl
or
mov
jecxz
mov
inc
rorb
jp
jg
jo
push
add
fnsetpm(287
sbb
imul
fmulp
xor
sbb
inc
mov
pop
mov
into
ds
xor
push
sbb
fwait
adc
dec
shlb
pop
movsl
cmpsl
add
out
dec
ja
mov
bound
sub
jp
je
and
sbb
repnz
out
push
push
jp
push
dec
daa
pop
sub
movsl
pop
stc
sub
gs
xchg
push
jb
pop
mov
mov
dec
xchg
mov
xchg
cmp
mov
or
sarl
dec
addr16
fsubl
pop
fstpt
arpl
ss
sbb
nop
mov
cmp
fdivrs
pop
insl
push
testl
je
cmpsb
jp
cmp
lret
xchg
pop
push
mov
movsl
pop
xchg
cmp
imul
int3
inc
jb
pop
out
fistps
pop
and
xchg
xlat
stc
push
and
cmp
jne
push
sti
cli
or
lcall
outsb
add
mov
test
mov
in
enter
or
fwait
sub
lahf
cmp
gs
fisttpll
pop
mov
test
mov
push
out
movsl
jb
scas
or
rorl
movsl
pop
bound
mov
or
pop
shll
add
push
ret
fnstcw
inc
xor
stc
test
or
jp
ja
xchg
arpl
mov
mov
imul
sbb
sub
push
ss
adc
inc
lock
idivb
or
sbb
push
mov
mov
push
out
cs
sub
or
dec
imul
or
inc
jno
scas
jl
push
or
movsl
fstl
ja
mov
dec
test
xchg
push
xchg
in
stos
ja
push
mov
pushf
loopne
mov
mov
dec
sbb
neg
cmp
mulb
cmp
jne
sub
jmp
push
dec
sub
pop
mov
rcll
int
jo
enter
pop
cmp
adc
es
mov
add
xchg
or
fildl
pop
movsb
jae
mov
ja
addr16
ror
fadd
popf
outsb
addr16
jmp
lret
dec
cmp
fadd
push
push
and
mov
mov
or
clc
mov
or
bound
adc
xchg
jg
sub
sbb
mov
sub
pop
in
mov
inc
data16
jmp
stos
inc
jno
fistpl
xchg
fidivrl
jmp
les
ss
dec
and
iret
into
out
adc
and
dec
jno
xor
pop
scas
xor
cmp
popa
push
pushl
mov
addr16
inc
sub
pop
push
lea
cmpsb
push
mov
mov
cmp
shlb
imul
jmp
outsl
aaa
jns,pt
arpl
xchg
mov
hlt
and
clc
leave
push
mov
inc
out
push
xchg
cmpsb
test
cmp
jno
shrl
inc
or
cmpsb
sti
cmp
jp
inc
jmp
add
sbbl
filds
mov
cmp
insb
mov
gs
cmpsb
push
push
or
not
sub
xchg
sbb
xor
dec
lods
pop
fs
mov
pop
cld
or
adcb
mov
imul
fldt
sti
push
data16
inc
lret
sbb
xor
mov
aad
inc
xor
jp
jle
inc
push
sar
jl
xor
mov
sub
out
imul
inc
jnp
sti
xor
and
cmp
hlt
mov
aam
xor
xor
repnz
adcl
repnz
sbb
shll
les
mov
das
int
fisttpll
aad
dec
aas
xchg
stos
sub
imul
imul
stos
cld
sbb
out
or
aaa
xchg
mov
sub
jmp
pop
and
sub
fisttpll
mov
sbb
lods
adc
and
push
and
jae
int3
in
sub
dec
outsl
push
pop
sbb
nop
lret
dec
jae
iret
pop
push
outsb
nop
fstps
inc
mov
jl
cmc
dec
or
push
in
push
out
arpl
mov
cli
cwtl
pop
cmpsb
icebp
pop
pop
ja
mov
adcb
notl
sub
mov
iret
popa
cmc
and
xor
daa
adc
dec
leave
gs
mov
add
ror
scas
hlt
pop
jae
dec
xchg
dec
xor
leave
and
fisttps
cwtl
and
fstpt
pop
sub
aaa
mov
pop
xchg
in
or
rcrb
jbe
mov
pop
shrl
gs
movsb
in
cli
push
xor
test
inc
pop
cmp
cmp
xlat
mov
cli
sarl
adc
cmpsb
mov
push
aas
imul
insb
lods
loop
mov
cmp
push
mov
nop
loop
inc
or
fbstp
dec
in
push
pop
jo
jg
mul
lret
and
lret
fidivs
scas
fdivrl
push
cmp
xorb
mov
cmp
rcrb
fldt
jae
imul
enter
lret
jmp
or
sbb
incb
and
cmp
inc
out
add
xor
int3
sbbb
and
cs
adc
stos
or
xor
insl
push
and
add
les
pop
dec
cltd
imull
pop
inc
aam
inc
notb
imul
push
mov
fwait
cmc
in
cmp
adc
mov
jno
pop
xor
push
jecxz
sub
or
or
ret
jle
jbe
call
lret
lods
mov
inc
sahf
cmp
pusha
xchg
fwait
ds
fildl
repz
lcall
imulb
stos
repz
imul
insb
aad
pop
or
test
je
mov
or
in
mov
idiv
pop
jne
fstpl
sub
jbe
test
adc
xor
bound
in
inc
mov
cmp
in
lret
or
gs
rcl
push
das
neg
sub
stc
sbb
das
cmp
hlt
mov
imul
jae
sbb
push
jmp
cmp
in
imul
std
clc
xchg
hlt
push
sbb
mov
cltd
sbb
pop
mov
cld
sbb
ss
add
xor
insb
push
cmp
sub
pushf
mov
mov
int3
popa
sub
mov
gs
push
mov
push
cmp
movsb
push
inc
inc
aad
push
mov
stos
dec
aad
into
cwtl
pop
pop
pop
stc
test
inc
cld
in
xchg
iret
dec
mov
repnz
clc
cmp
insl
jl
adc
mov
lock
dec
push
mov
pusha
loopnew
es
repz
test
cmp
hlt
xor
call
cmp
and
stos
push
adc
mov
push
jbe
cltd
stos
mov
test
imul
pop
adc
les
adc
test
dec
mov
call
push
jecxz
sbb
pop
pushf
jb
fucomip
or
xor
push
and
and
and
ljmp
vunpcklpd
lods
mov
fistpl
leave
sbb
jb
test
and
add
into
add
sub
or
pop
pop
pop
ret
push
sub
mov
dec
scas
lds
fstpt
mov
xlat
arpl
mov
push
int3
pop
sbb
nop
xchg
and
jb
push
in
hlt
xchg
and
cld
in
pop
or
sub
jbe
in
repnz
ljmp
inc
notl
imul
pusha
push
shll
fisubl
jl
cmp
push
xorb
icebp
or
cmp
xor
ficompl
mov
or
mov
adc
adc
jl
aam
cli
and
ret
jecxz
jb
out
dec
cs
mov
test
movsl
and
fnstcw
dec
gs
icebp
sbb
pop
and
mov
pop
sahf
pop
xchg
in
fs
sub
mov
in
arpl
and
into
and
imul
cmp
das
mov
iret
cmovs
insb
jmp
jo
adc
jbe
push
and
sti
mov
add
jno
add
dec
lods
hlt
das
push
es
mov
sbb
pop
xor
nop
push
out
in
adc
movsl
dec
jge
insl
shll
sar
push
mov
xorb
in
insl
jbe
push
pop
add
ds
cmpsl
sbb
fldt
jo
or
gs
xchg
dec
sub
lock
scas
lfs
aas
stos
xor
pop
cmp
push
shlb
pop
rcrb
mov
in
inc
sti
minps
add
xchg
push
push
xchg
and
or
mov
push
and
cmp
div
sbb
and
mov
imul
cmp
cmp
das
shl
cmp
mov
or
dec
cmc
out
xor
imul
sub
std
mov
movsb
clc
cltd
dec
xor
imul
sbb
cltd
or
add
out
pop
cmp
mov
or
jb
xor
push
sbb
sti
xlat
xchg
dec
mov
inc
sub
sahf
in
fistpl
or
out
ds
cld
fwait
jb
mov
int3
cltd
mov
ss
inc
add
popa
filds
xor
test
mov
pop
pop
fld
movsb
pop
lods
shll
mov
pop
loopne
cs
pop
movsb
fwait
mov
pop
ljmp
or
push
in
xchg
mov
jmp
dec
lock
inc
and
sub
fiaddl
ja
or
repnz
imul
pop
pop
and
pop
cmpsl
jmp
int3
dec
dec
jbe
dec
out
gs
jle
ret
mov
add
mov
loopne
and
mov
jnp
xchg
add
cmp
xchg
lcall
int3
mov
xlat
or
cmp
xor
mov
sub
mov
sub
arpl
cmp
insl
sbb
cmp
rcrb
xor
mov
in
xlat
xchg
push
fisttpl
push
push
ds
rorl
fcomi
std
dec
pop
popf
xor
mov
repnz
out
pop
mov
fldt
loopne
jg
inc
repnz
xchg
nop
imul
add
push
adc
sti
pop
popf
push
outsb
test
in
ds
inc
mov
cli
xchg
test
jg
ret
mov
or
es
repnz
cmpsb
std
and
and
pop
sub
and
ret
dec
or
hlt
cmp
xorb
add
arpl
xchg
std
dec
sarl
fildl
jg
sbb
pop
mov
mov
dec
aad
xchg
mov
imul
cmp
loope
inc
cmp
sbb
fwait
mov
pusha
addr16
shl
inc
cli
xchg
dec
or
push
cmpsb
mov
sbb
and
je
cli
mov
movsl
pop
push
mov
xchg
ss
int3
into
data16
xchg
xchg
aam
sbb
dec
fldt
or
push
fstps
imul
jmp
mov
cld
sarb
jbe
or
sub
dec
mov
adc
call
xchg
fdiv
outsl
sub
push
jnp
push
adc
bound
cmp
or
xlat
jge
sbb
sbb
adc
ds
and
scas
add
pop
sub
push
jge
xlat
ja
fistl
or
cwtl
push
dec
fnsave
hlt
imul
xchg
push
cmp
jb
xor
or
divb
cmp
sbb
push
fstpt
fsub
push
stc
mov
push
or
and
xor
pop
pushf
outsl
mov
ss
push
cmpsl
cmp
js
inc
imul
pop
sub
test
lods
ret
divb
xlat
xor
add
sub
pushf
jb
rcr
lret
mov
sbb
mov
push
xchg
cltd
inc
mov
xor
lcall
and
xor
fstps
jmp
push
mov
loope
lahf
mov
xchg
frstor
cmp
mov
and
mov
push
or
in
cmp
xor
leave
daa
xor
les
xchg
into
mov
fwait
and
cmp
dec
repz
jmp
xchg
fninit
push
mov
int3
testb
sbb
pushf
jmp
inc
mov
fwait
jl
jle
push
xchg
xor
mov
lret
jbe
out
jmp
mov
push
data16
enter
ss
cld
inc
fisttpl
push
add
mov
rclb
arpl
xor
scas
cld
fidivl
mov
push
insl
and
cmc
xor
icebp
arpl
clc
cld
addr16
outsb
jo
add
xchg
jo
repnz
movsb
dec
stos
mov
les
cmp
push
jae
mov
jno
decb
jecxz
pop
mov
into
lahf
jo
and
pop
bound
dec
push
xor
sub
test
push
pop
je
pop
lcall
jle
push
xor
ror
imul
das
subb
sub
jb
jg
or
jg
fs
inc
mov
cmp
cwtl
pop
lcall
or
inc
inc
ss
in
shlb
dec
cmpsl
jge
lret
aam
addr16
imul
test
scas
cmp
shll
ja
jmp
jge
arpl
pop
jae
mov
add
xor
push
push
scas
loope
add
push
add
mov
leave
sbb
sbb
and
rcrl
cld
sbb
sbb
sbb
jo
out
ficomps
push
popf
add
lret
sbb
xchg
cmp
clc
cli
orb
insb
cmp
cli
int3
fisttpll
dec
stos
mov
pop
mov
cltd
call
imul
fs
mov
adc
ja
lods
inc
and
pop
add
or
push
test
gs
push
mov
add
cld
mov
cli
mov
movsl
add
fstpt
inc
push
jae
or
mov
cmp
sahf
mov
jg
std
fisubrs
cmp
clc
dec
and
jl
js
pop
stos
sub
or
jmp
jl
stos
dec
cmc
pop
sub
jb
and
inc
loope
dec
dec
shlb
ja
pop
lock
sbb
int3
jne
sub
repz
pop
fisttpl
stos
out
sub
mov
or
jp
fcmovne
sub
cmp
lea
pop
add
lods
cmp
ljmp
fisttps
mov
mov
and
add
mov
imul
imul
or
pushf
movsl
int3
xor
pop
sbb
cltd
rolb
mov
iret
imull
adc
ret
arpl
jbe
mulb
call
add
pop
dec
lret
shlb
repnz
js
rorl
cmp
mov
jno
mov
out
lret
ja
insl
xchg
jbe
out
mov
in
stos
cmp
imull
xlat
jg
jae
cli
fndisi(8087
lret
es
xor
ja
cs
sbb
sub
and
xchg
ja
rcr
mov
mov
push
std
aad
cli
mov
data16
or
not
mov
dec
mov
jb
sbb
std
mov
sub
insl
dec
imul
sti
sbb
jmp
fcmovne
popf
pop
adc
cs
cs
sbb
aas
cmpsl
jle
sbb
cli
pop
mov
push
cmc
adc
dec
cmp
fldt
add
ljmp
cmp
dec
int
sub
push
add
xchg
into
or
outsl
inc
sub
test
dec
adcb
ja
imul
or
xchg
bound
add
jmp
imulb
cmp
test
mov
push
sub
test
insb
lcall
jg
push
jp
dec
and
mov
pop
pop
adc
cmp
imul
push
daa
cli
stos
notb
insl
fwait
ja
mov
jp
aas
ret
lret
ljmp
and
je
cmc
push
adc
insb
mov
and
sub
jmp
data16
cmp
enter
cmp
jns
jno
fildl
jb
jno
xchg
dec
popf
adc
lret
movsb
jmp
cmp
stos
stos
sub
mov
jg
jge
stc
in
mov
ja
or
lcall
fstps
lret
test
mov
mov
lods
loop
jl
xchg
loop
cmp
lahf
dec
into
cwtl
loop
sti
fcmovu
and
mov
adc
mov
lds
and
lret
sub
jmp
cmp
test
cmp
movsb
out
dec
insb
lahf
leave
lcall
loop
pop
mov
jmp
sub
mov
stc
and
imul
cmp
testl
xchg
or
mov
cmp
out
mov
out
mov
xchg
cltd
dec
into
dec
loop
sbb
mov
gs
loop
lods
or
jb
pop
jge
cmp
testb
jmp
cmp
scas
mov
pop
sub
inc
add
pop
inc
mov
and
fbld
jb
push
js
aaa
lret
out
lret
loop
jp
repz
and
pop
sub
fmull
cmp
gs
xrelease
mov
push
fldcw
pop
dec
cmp
hlt
mov
and
mov
dec
into
cmp
dec
fldpi
pushf
gs
loop
sti
or
jb
pop
in
je
inc
add
pop
mov
sti
mov
xchg
scas
icebp
mov
push
das
loop
push
mov
frstpm(287
enter
loopne
push
sub
loop
leave
mov
cmp
jns
sbb
sub
jb
pop
es
adc
or
mov
pop
cli
adc
cmp
enter
mov
fisubl
pop
test
lret
sbb
jb
pop
mov
ljmp
mov
pop
mov
dec
push
lret
loop
or
sbb
loop
mov
push
out
lods
insb
jns
imul
fstps
fdivp
fsubrl
mov
adc
sbb
btc
adc
sti
mov
mov
push
stos
mov
stos
cmpsl
gs
pop
cmp
scas
lcall
leave
fldenv
je
sub
or
jl
xor
out
imul
xchg
loope
pusha
sbb
dec
stos
mov
mov
dec
adc
or
pop
cmp
sub
scas
inc
aas
outsb
mov
pop
add
jmp
sbb
and
arpl
or
rclb
jg,pn
lcall
sbb
cmpsb
xchg
fnstenv
fldl2t
jb
js
jae
fisubrl
mov
sbb
jg
xor
push
mov
mov
flds
scas
xor
adc
sbb
fisubrl
clc
push
mov
jmp
jbe
fsubs
enter
cmp
iret
or
bound
cmp
stc
mov
dec
jmp
mov
bound
push
rcl
cmp
pop
inc
add
xlat
pop
mov
jbe
ret
cwtl
jb
jae
stc
or
sub
lret
push
movsl
xor
xor
xor
ja
xchg
ja
lea
jl
stos
inc
push
jmp
dec
shl
in
dec
sbb
push
add
stos
dec
nop
ret
push
add
cld
mov
mov
mov
scas
loop
jmp
repnz
mov
out
bts
xor
or
scas
mul
mov
test
sbb
adc
je
dec
sub
bound
fsubrs
xor
adcb
ret
and
jno
inc
loop
jmp
ficompl
cmp
xor
xor
add
mov
jp
jb
mov
pop
fisttpl
addr16
xchg
repz
xor
push
dec
jb
stos
outsl
inc
or
mov
out
mov
dec
push
clc
adc
hlt
jl
neg
or
xor
add
jp
dec
mov
mov
bound
loopne
sub
xor
out
insb
imulb
jle
xchg
mov
test
pop
adc
ljmp
sbb
jp
push
enter
xchg
icebp
or
dec
and
pop
lods
xcrypt-cbc
cmpsl
adc
pop
sub
xor
mov
out
sbb
jns
aad
sub
aam
dec
je
inc
xor
jp
sti
out
cmp
shrb
int3
or
test
jle
ja
data16
dec
cmpsb
or
shrb
andb
and
sub
push
xor
test
sbb
lds
jb
fmul
jb
fistpl
test
mov
and
fdivrl
rolb
lds
popf
pushf
ljmp
xor
into
rcll
stos
mov
cmp
pop
adc
mov
stos
or
xor
xchg
and
iret
pop
lcall
es
push
js
adc
cmp
or
xchg
jnp
cltd
dec
sbb
mov
mov
push
dec
cmp
jmp
aaa
sub
mov
cmp
clc
adc
mov
loopne
xorb
mov
test
std
dec
fimull
dec
xorb
jno
pop
movsb
inc
or
push
sbb
sub
inc
cmpsb
or
dec
idivb
in
push
in
and
hlt
cmp
and
clc
adc
leave
into
mov
cmp
cmp
xor
and
push
std
test
cmp
cmp
push
adc
or
sbb
sub
js
mov
adcl
xchg
adc
cmp
add
imul
cmp
filds
data16
test
mov
shl
leave
imul
pop
dec
cmp
sub
mov
adc
insb
cmp
xchg
ja
xchg
pop
mov
xorl
lods
outsb
aas
pop
cmp
mov
cmp
loopne
or
fistpll
xorl
sti
jle
cmp
call
jb
ljmp
scas
inc
push
roll
add
pop
mov
add
jns
cli
adc
std
adc
rcrl
imul
or
or
sub
sbb
fstpt
pop
loopne
xchg
and
aad
call
push
pushw
sub
xchg
sbb
jns
jae
mov
aad
dec
dec
neg
aas
lods
lahf
test
out
mov
push
mov
mov
or
test
les
push
xorl
xlat
test
pop
cmp
xchg
sbb
fisttpl
add
mov
sbb
out
adc
adc
mov
push
fnstenv
cmpsl
sarb
mov
sub
out
add
pop
sub
mov
xchg
std
loopne
lods
and
out
cmp
subb
cmp
jb
sti
cmp
dec
in
xchg
add
jmp
sti
outsl
push
push
sbb
popf
cmp
sbb
cmpsb
and
xchg
mov
addr16
stos
xorb
pop
or
cmp
nop
push
addr16
inc
or
add
lret
and
sub
addr16
or
jmp
loop
dec
mov
ss
push
push
test
jge
fimull
fildll
and
loope
test
dec
ds
div
inc
sub
jae
push
int
mov
imul
dec
arpl
mov
mov
adc
push
cmp
sbb
jno
adcb
ficompl
jp
fmul
sbb
mov
aaa
add
mov
fisubrl
lcall
pop
in
sbb
push
in
dec
jns
into
cltd
sub
iret
pop
dec
fcoml
std
dec
jecxz
mov
imul
add
sub
fsubl
pop
imul
imul
jbe
inc
fisttpl
xor
xorb
or
cmp
mov
xchg
xor
push
imul
xchg
or
sbb
sarb
mov
mov
adc
mov
sub
andb
dec
out
lock
iret
dec
ljmp
insl
fistl
sar
in
outsl
adc
outsl
sub
fninit
pushf
inc
imul
xchg
cmpsl
and
xor
cld
mov
inc
inc
jb
clc
jno
outsl
pop
popa
xlat
xor
scas
push
icebp
pop
mov
clc
cmp
andb
ficomps
fdivr
std
into
xchg
daa
push
insl
jp
testl
cmp
jl
push
popf
or
sahf
fcomip
lcall
jp
jg
mov
cld
out
stos
fistl
imul
jae
adc
push
dec
and
popa
inc
outsb
dec
add
ficompl
ss
outsl
cmpsl
movsb
mov
leave
xor
enter
or
int3
push
mov
add
and
pushf
xchg
dec
in
jns
xor
outsb
pop
ss
add
gs
adc
cmp
lods
pop
pop
add
sub
push
fldl2e
and
fisubl
popa
mov
xchg
and
repnz
imul
adc
xor
lods
xor
cmpsl
dec
subl
add
int
or
sub
mov
xor
outsl
out
fs
rorb
hlt
dec
mov
dec
inc
or
cmp
mov
movsl
jmp
sti
jae
imul
cmp
jle
call
data16
dec
jmp
fistl
cmpb
push
clc
dec
lcall
dec
mov
sub
in
push
add
cmp
addb
jecxz
ss
mov
push
icebp
je
jecxz
test
sub
mov
xor
test
or
dec
imul
mov
repnz
clc
arpl
or
push
mov
sub
jns
out
cmp
ja
inc
in
xor
arpl
ds
shlb
adc
dec
push
sub
sub
xor
xchg
push
std
and
pop
and
ficompl
loopne
stc
adcl
or
push
sahf
push
fnstsw
into
adc
or
movsb
sub
pop
mov
sub
dec
pop
mov
xor
xlat
int3
mov
sbb
inc
mov
fdivrl
andl
push
mov
jae
fs
fmulp
adc
test
lea
push
fstpt
arpl
adc
push
repnz
inc
add
xor
andb
jl
dec
in
mov
dec
repnz
jl
cmp
cli
sti
inc
or
mov
imul
sub
xchg
sahf
inc
repnz
lock
leave
imul
imul
jb
ds
xor
mov
mov
sbb
lret
sbb
cwtl
mov
nop
scas
repz
push
pop
lods
popf
adcl
adc
dec
xchg
inc
aaa
jb
xlat
ljmp
lret
jmp
fildl
aam
inc
mov
into
movsb
iret
out
mov
cli
int3
jns
jmp
xchg
mov
popl
repnz
testl
jo,pt
outsl
jno
push
adc
mov
mov
sub
fxch
and
fnstsw
pushf
jge
rolb
iret
push
std
and
jns
cmp
pop
mov
fcomi
dec
adc
into
jp
repz
ljmp
add
mov
inc
leave
int
pop
lret
pop
stos
cmc
and
ficoml
add
jl
sbb
fldlg2
dec
les
cmp
push
xchg
adcb
mov
fsubr
imul
std
and
xor
jmp
sbb
adc
pusha
addr16
xchg
jae
xor
push
repnz
pop
cli
inc
xchg
inc
and
pop
push
lods
rcr
dec
div
mov
jmp
imul
fwait
iret
cmc
ret
inc
xchg
cmp
jb
negb
rol
or
pop
pop
push
inc
ljmp
sti
mov
jae
cmp
sarb
int3
mov
mov
outsl
ss
imul
jl
je,pt
cmp
pop
mov
insl
mov
gs
mov
iret
push
int3
sub
out
into
je
pushf
movsb
arpl
insb
jne
jae
imul
int3
cli
in
xchg
cld
mov
mov
ds
sub
cmpsl
es
icebp
stos
popf
es
cmp
ret
and
mov
fdivl
out
ret
and
dec
pop
add
shr
and
lahf
stos
ret
mov
lods
or
push
push
in
jb
pop
lods
mov
xor
lods
mov
mov
xchg
out
mov
jmp
std
pusha
pop
mov
sti
xchg
icebp
out
ss
pop
mov
insb
mov
push
mov
iret
push
sub
popa
sbb
loopne
sbb
sub
rol
lea
cmp
mov
cwtl
or
fsts
imul
mov
jmp
push
arpl
add
imul
aam
lcall
pop
or
or
pop
mov
xlat
push
or
lret
gs
mov
xor
jbe
addr16
jno
adc
sub
add
aad
daa
pop
iret
adc
push
mov
pop
pop
pop
or
bnd
sub
mov
loop
iret
inc
cmp
out
inc
mov
or
gs
pop
lret
pop
sub
mov
idivb
and
mov
push
dec
or
pop
and
gs
stos
popf
jle
imul
iret
jnp
mov
enter
sti
cmp
imul
mov
scas
gs
push
movsl
sti
cmp
ret
adc
sbb
sbb
and
out
xlat
pop
jmp
sub
cmp
int3
sub
xor
mov
fsubrp
addr16
jg
ljmp
sub
rorb
adc
lcall
xor
loopne
mov
pop
mov
xchg
dec
stos
mov
imul
xor
cmp
push
xor
call
xlat
ss
jnp
fimull
push
stos
aaa
mov
jnp
cmp
hlt
inc
cmp
adc
jnp
jb
repz
push
xlat
push
mov
inc
jnp
and
jecxz
add
and
jnp
in
clc
add
jnp
addr16
jb
mov
jnp
les
sahf
cld
add
dec
adc
xchg
mov
jecxz
test
xchg
cmp
xchg
fwait
outsl
iret
adc
stos
xor
or
add
xlat
and
dec
rcl
stos
push
xchg
shl
fwait
xchg
jae
pop
sbb
dec
cmpsl
mov
fiaddl
gs
and
js
enter
mov
scas
repz
out
xor
dec
sub
sbb
int
mov
inc
ljmp
pop
test
mov
jno
leave
and
jp
fistl
in
xor
jl
data16
pop
lcall
mov
fmuls
sbb
dec
loop
or
or
mov
rcrb
lret
dec
outsl
adc
jl
fwait
pop
out
sub
imul
lock
push
fnstenv
xchg
cmpsb
and
aaa
jmp
pop
inc
jae
movsl
aad
pop
add
jb
xor
add
mov
jl
outsb
pop
in
xor
mov
push
call
mov
int
stc
mov
sbb
insl
outsl
arpl
imul
dec
mov
xorl
arpl
sub
jecxz
push
test
mov
lcall
push
imul
xchg
jmp
sub
jmp
sub
imul
jbe
fwait
mov
sbb
loope
cs
pushf
push
je
pop
dec
mov
dec
loope
or
cld
inc
lahf
mov
imul
dec
cmp
xor
push
mov
call
ja
push
hlt
dec
lret
inc
lret
addr16
mov
fisubl
mov
pop
ds
outsl
ljmp
cmp
aad
mov
insb
pop
adc
adcl
push
popa
add
mov
push
outsb
and
imul
arpl
jo
rcrb
lods
dec
out
sub
mov
pop
fldcw
je
jns
dec
out
aad
push
xchg
jmp
pop
or
sub
negb
in
cmp
xor
xor
test
int
imulb
add
dec
push
add
pop
cmp
push
stos
imull
icebp
mov
imul
je
imul
ret
cmp
adc
push
lods
jbe,pt
or
aad
movsl
jne
mov
adc
sub
add
dec
test
fnstenv
jp
aaa
jbe
xchg
mov
dec
mov
cmp
cmp
or
das
mov
addr16
push
jno
pushf
test
pushf
ret
mov
jecxz
inc
xchg
xchg
push
adc
test
jle
jl
sbb
dec
and
stos
dec
dec
leave
push
fldt
testb
imul
icebp
mov
js
cmp
mov
and
cmp
inc
dec
push
push
jmp
lcall
push
cmp
xor
into
das
mov
mov
rorb
arpl
lret
push
jmp
xlat
push
push
push
aaa
xor
dec
in
into
nop
mov
pop
or
push
sub
repnz
xchg
inc
cltd
pop
adc
jmp
pop
fisubrs
and
pushl
cmpsl
jae
test
popa
mov
jae
and
dec
outsl
pop
xchg
pop
aam
lret
mov
loopne
dec
movsl
cmp
cmp
xor
repnz
fildl
test
loope
mov
gs
push
ljmp
movsl
pop
cmp
push
mov
loop
xor
fcompl
xor
not
ja
push
rcll
cltd
fidivrl
addr16
dec
push
jp
lock
mov
je
add
lcall
or
in
les
jle
addr16
je
clc
cmpsl
fcomip
cmp
pop
sti
in
lods
xlat
bound
pop
mov
xor
push
mov
sti
pop
xchg
imul
push
xchg
pop
call
pop
adcb
or
pop
test
and
les
inc
inc
dec
mov
mov
imul
or
or
lcall
movsb
sbb
inc
in
arpl
out
dec
mov
cmp
cmp
imul
lcall
sub
in
fmul
je
sub
dec
int
adc
jo
pop
int3
add
jbe
inc
add
or
imul
daa
insb
mov
das
add
test
and
and
or
and
mov
pop
mov
ljmp
mov
jae
inc
fdivrs
imul
int3
push
and
or
nop
stos
inc
xchg
out
sub
sub
imul
mov
out
push
movsl
push
adc
insl
sti
sbb
mov
and
lea
lret
xor
pop
sub
aas
sub
and
or
lea
pop
xorl
ret
scas
push
sti
daa
inc
pop
jne
cmp
dec
cli
sti
or
ficompl
outsl
mov
ret
fistl
cltd
mov
fmull
loop
fwait
test
pop
lods
ds
test
mov
movsl
sbb
lock
push
sbb
mov
fnstenv
jp
xlat
xor
outsb
sbb
test
sbbb
ss
shll
bound
mov
or
inc
pushf
and
les
scas
add
jns
pop
fistpll
loope
xchg
ja
add
xor
roll
fwait
mov
push
fcomi
in
push
sbb
sbb
lahf
lods
imul
je
xor
push
sti
outsl
pop
aam
push
popf
daa
jo
xor
mov
insb
out
jns
insb
push
sbbl
mov
mov
mov
idiv
repnz
sbb
dec
adc
mov
adc
and
lret
inc
or
jo
mov
test
inc
cmp
ja
push
inc
dec
inc
and
mov
adc
movsl
mov
mov
ja
loope
pusha
jns,pt
pop
push
fwait
out
in
lahf
xor
push
sbb
xor
mov
mov
repz
adc
ret
outsl
imul
or
sub
xchg
add
sbb
cmpl
clc
repnz
mov
sbbb
push
sub
icebp
pop
jo
and
xchg
jmp
xor
lret
movsb
ljmp
ret
or
adc
fcompl
idivl
inc
mov
sbbl
std
insb
xor
fldt
mov
add
xchg
cmpsl
int
shll
out
cmp
add
mov
ja
inc
call
jmp
dec
adc
xor
and
mov
cmp
pcmpgtw
fsts
imul
sbb
jns
scas
psrlw
cmp
pop
mov
jb
push
and
push
xor
mov
lahf
sbb
imul
out
push
jae
mov
xor
sub
es
js
pushf
mov
fildl
mov
imul
subl
push
cwtl
push
jae
test
outsl
push
cs
sar
bnd
add
sbb
outsl
scas
mov
aaa
fmull
sbb
sub
cmp
dec
outsb
pop
imulb
jns
mov
leave
mov
push
dec
dec
pop
popa
outsb
push
jp
movsl
or
pop
outsl
dec
stc
hlt
jns
push
cmpsl
inc
inc
lods
sbb
jle
pop
sbb
into
cwtl
mov
je
leave
push
sub
jno
scas
sbb
xchg
lds
pop
dec
and
out
inc
mov
sub
push
cmp
pop
mov
dec
in
jg
repnz
mov
xor
sub
cmp
xor
aam
sub
mov
push
pop
cli
shrb
sbb
push
mov
in
mov
push
push
cmp
cmp
push
or
imul
cmp
movsl
sbb
push
fwait
dec
sti
popa
hlt
mov
jbe
repz
push
sub
mov
push
mov
cmpb
and
pop
mov
dec
xor
or
and
jmp
adc
mov
cltd
mov
out
add
pushf
das
pop
and
ds
cmp
std
jbe
insb
sbb
cmp
mov
cmp
sbb
pop
sbb
cmp
cmp
pop
push
fcomp
mov
pop
and
iret
lock
inc
cmpb
or
pop
cli
xor
imul
xchg
movsl
pushf
xchg
pop
push
loop
dec
mov
das
aad
or
out
cwtl
jp
add
inc
dec
pop
sub
jmp
dec
push
idiv
mov
cld
jns
xchg
movsl
jmp
adc
or
jge
dec
into
lcall
jns
mov
cmp
sbb
mov
imul
xrelease
repz
mov
push
out
push
out
fists
cmp
fldcw
add
inc
mov
mov
test
sub
ljmp
jbe
sbb
js
fildl
or
in
and
xchg
sbb
or
shlb
and
push
fcoml
adc
xchg
in
cmp
cmp
addr16
xlat
mov
outsl
cmp
push
je
cmp
dec
imul
ror
mov
and
cmp
cmp
inc
or
pop
into
push
and
or
jle
popf
add
pop
imul
aad
jp
stc
mov
push
gs
les
pop
cwtl
sbb
xor
xchg
es
dec
lods
mov
pushf
xor
cwtl
pop
shlb
add
sbb
mov
adc
leave
adc
jno
aam
and
and
stos
mov
ss
push
xor
jns
lods
or
imul
xlat
fidivrl
mov
ds
daa
lds
lcall
mov
imulb
mov
mov
sbb
out
roll
push
xor
xorl
or
cmp
mov
pusha
lock
cmc
ficoms
mov
inc
inc
jbe
call
push
add
int3
clc
push
xlat
pop
xor
add
mov
sbb
pop
pop
js
addr16
inc
cli
pop
sub
jbe
push
pcmpgtw
xor
sbb
arpl
dec
outsb
out
cld
xchg
mov
pop
mov
fdivrs
sub
and
out
daa
push
cmp
dec
dec
notb
sahf
sbb
sub
sbb
into
scas
femms
sub
mov
pop
jae
sbb
gs
imul
pop
jmp
adc
aaa
pop
shll
or
jl
push
adc
fldcw
ret
pusha
fcomp
xchg
ret
mov
es
dec
sub
movsl
fdivrp
jmp
into
es
stc
stos
or
orps
sbb
cmpsl
xchg
push
fwait
push
and
push
adc
pop
sti
cld
pop
xchg
test
sbbb
ljmp
imul
xor
sbb
or
iret
cmp
movsb
sub
push
jns
fcoml
and
mov
xor
dec
repnz
push
xor
or
inc
and
add
jae
xor
mov
imul
mov
or
xchg
and
shlb
insb
jl
out
enter
xlat
rcrl
lods
xor
dec
mov
fistpll
jl
mov
mov
gs
jmp
mov
cmpl
sarl
scas
mov
out
xchg
mov
loope
add
in
imul
imul
sub
arpl
sub
pop
stos
jmp
and
dec
sub
insl
xor
jns
xchg
imul
gs
adc
jl
mov
pushf
push
call
mov
xor
mov
sahf
sbb
push
xor
pop
fs
pop
in
lahf
int3
mov
mull
mov
mov
xlat
loope
push
xor
iret
push
imul
imul
adc
mov
scas
jbe
movsb
ja
shll
movsl
pop
sbb
push
xor
int3
and
and
cmp
xchg
pusha
aad
mov
stos
xchg
mov
inc
pop
or
mov
sti
lds
fldenv
pushw
xor
push
sub
aaa
adc
scas
and
fcompl
pop
jge
hlt
ret
out
jg
xor
cld
push
scas
xor
push
xchg
int3
inc
hlt
lret
inc
loope
sbb
imull
daa
mov
fisubs
cli
sbb
mov
sbb
push
jne
push
push
cmp
dec
fcmovnbe
in
dec
and
or
dec
scas
lret
jns
cld
insb
stc
xlat
jne
pop
ret
gs
data16
cmp
mov
cli
xchg
test
push
imul
int3
stc
or
mov
or
ret
push
cmp
fsincos
arpl
sti
and
xor
mov
stos
stc
mov
sti
xor
imul
clc
dec
cli
mov
icebp
fldt
aaa
call
jae
lret
cmp
outsl
je
sbb
insb
pop
icebp
pushf
stos
jb
hlt
aad
or
insl
int3
jb
jp
ljmp
sbb
cli
pop
in
imul
jge
xchg
outsl
jge
cmp
push
icebp
mov
mov
aad
mov
jb
cmpsb
cmp
int3
and
movsb
push
add
pop
push
es
sbbl
jne
jae
mov
cmp
pop
fdivl
jae
stos
lea
imul
mov
fstpt
jb
mov
push
sbb
sub
jecxz
sub
mov
add
jb
movsl
push
fnsave
pop
mov
addr16
mov
lret
push
test
push
pusha
jb
inc
sub
repnz
dec
xor
add
xchg
hlt
and
dec
push
and
lea
pop
cmpsl
subl
dec
or
insl
dec
fcomi
jae
jno
pop
addb
stos
mov
fldt
imul
mov
dec
jge
pop
sbb
ds
test
xchg
push
imul
mov
iret
or
adcb
xor
leave
jno
mov
bound
xchg
sbb
sarl
adc
fdiv
xchg
cmp
loopne
nop
lds
jo
inc
add
pop
mov
mov
pop
cmp
and
out
dec
adc
mov
lahf
fwait
imul
sbb
repnz
sahf
insb
xchg
lahf
insl
out
stos
fsubs
and
fwait
inc
call
sbb
cmp
arpl
xor
repnz
movsl
sbb
das
std
jmp
ja
and
lcall
or
push
mov
xorl
sti
sbb
out
sub
mov
imul
pop
jb
jg
rcrb
push
or
neg
in
mov
clc
xchg
daa
and
xor
dec
outsl
ljmp
andl
xchg
ja
loop
inc
js
mov
pusha
jmp
and
xor
aam
mov
inc
mov
leave
sub
sub
out
mov
ja
xor
inc
aam
adc
xlat
out
test
out
sbb
in
jge
dec
es
arpl
mov
pushl
pop
imul
push
dec
nop
inc
sti
jno
outsl
notl
outsb
push
push
sub
mov
rclb
fisubrl
fldcw
adc
add
dec
mov
pop
inc
test
and
inc
push
stos
sub
js
test
out
aam
xchg
in
scas
rcr
cmp
push
fistpl
and
dec
shrb
jne
and
cmp
push
je
out
call
mov
push
mov
movsl
ss
sub
ror
mov
loope
cmp
mov
out
mov
or
adc
xchg
sub
jo
aam
out
sub
shr
negb
mov
test
sti
scas
jle
xlat
cmp
xchg
into
cmp
fdivl
or
out
mov
stc
sbb
sub
aam
push
lret
add
or
in
stos
rcl
cmpsl
push
fadd
jo
xor
cltd
push
fidivs
sub
cld
pop
or
imul
loope
scas
test
jp
js
ljmp
xchg
adc
push
add
daa
loopne
push
mov
mov
pop
add
jae
test
mov
mov
cmp
popa
mov
test
cltd
inc
mov
xchg
or
xor
push
mov
ret
fistps
cmpsb
sub
mov
xchg
xlat
xchg
pop
fbld
or
inc
dec
lods
mov
loopne
mov
repnz
fstpt
loope
movsb
or
jmp
and
lret
pop
mov
outsb
stc
aas
xorl
divb
mov
pop
dec
push
adc
pop
ds
and
push
pop
cmp
inc
mov
iret
pushf
inc
out
xor
jns
mov
push
idivl
push
ds
mov
sub
cmpsl
pop
cmpsb
sub
sub
xchg
pop
sbb
adc
testb
loop
jle
mov
pop
or
sbb
dec
sti
xchg
imul
pop
dec
jmp
jl
mov
pushf
imulb
fdivl
or
outsb
sbb
sub
cmp
dec
jmp
jns
mov
cltd
imulb
jmp
sub
popa
outsb
stos
imul
cmp
pop
imul
imul
push
cmp
sub
mov
loop
cltd
sarl
cmp
and
xor
outsl
fidivs
rorb
jge
test
mov
bnd
cmp
enter
ficoml
cwtl
nop
cmp
leave
enter
fwait
and
fsubl
scas
mov
shrl
xor
dec
jno
out
cmp
sub
imul
and
push
sub
in
ficoms
jno
loope
adc
imul
inc
in
xor
and
cmpsb
flds
dec
sti
pusha
or
push
fstps
xlat
mov
ljmp
adc
mov
xor
jmp
std
mov
or
js
es
test
fwait
sbb
xlat
addr16
gs
repnz
pop
test
negb
and
repnz
dec
sbb
push
add
je
and
insl
je
ss
pop
cmp
sub
mov
sbb
pop
xor
xor
imul
fildll
fsubs
or
sub
neg
jb
adc
imul
add
outsb
jmp
gs
mov
popa
dec
dec
mov
sti
pop
dec
mov
fstps
outsb
push
lcall
aam
push
and
sbb
xlat
cli
xchg
mov
in
push
sub
jl,pn
fimuls
push
cvtdq2ps
sub
pop
sub
imul
int3
imul
out
push
dec
inc
jp
mov
clc
ss
inc
add
jl
fnstcw
xorl
push
out
mov
mov
hlt
imul
push
adc
pop
insl
dec
dec
pop
cld
loopne
sub
int3
cmp
bound
sbb
sub
sub
cmp
sbb
push
out
pop
push
jmp
fdivs
inc
addr16
ljmp
xchg
sub
dec
cmc
fwait
mov
es
pop
mov
imul
ss
or
cld
icebp
in
mov
sbb
dec
bound
pushf
dec
xor
ss
pop
dec
insb
cmp
sub
add
outsb
imul
pop
cmp
pop
ljmp
pop
mov
or
xor
in
jne
insb
pop
shll
inc
push
in
ja
ljmp
mov
negl
out
mov
sti
xchg
dec
gs
leave
leave
out
mov
cltd
insb
mov
jns
imul
out
cmp
sub
sbb
or
cld
mov
sbb
dec
int3
out
mov
insb
mov
jl
insb
sbb
bound
cmp
sub
mov
inc
push
cmp
loope
mov
ljmp
sub
mov
inc
xor
adc
cs
clc
imul
hlt
js
xor
imul
out
inc
pop
mulb
leave
cmp
jmp
nop
add
and
lret
xor
cli
pop
mov
jl
mov
push
scas
mov
insb
insb
sbb
pop
mov
pushf
lods
cmp
pop
pop
sub
xor
fldenv
sbb
dec
lcall
hlt
and
sub
nop
mov
sub
and
add
cmp
stos
inc
push
sbbb
push
mov
aaa
mov
xchg
out
sub
mov
lcall
mov
fs
sbb
pop
out
mov
add
js
das
xlat
out
into
lret
cld
cld
outsl
cwtl
mov
inc
lcall
nop
imul
int3
rcr
sub
and
imul
dec
cmp
xor
mov
mov
or
jmp
sti
push
add
dec
jmp
sub
cmpsb
or
icebp
xlat
xor
nop
addr16
mov
mov
jns,pt
jae
push
mov
or
rorb
jbe
sti
pop
mov
pop
xor
rcrl
cs
imul
dec
pop
mov
cmpsb
xchg
orb
adc
xchg
fidivrs
ss
shlb
lods
cmp
dec
xchg
cli
ficompl
mov
es
cmp
mov
jmp
dec
pushf
inc
pop
mov
adc
jecxz
outsb
cltd
push
push
lds
mov
xor
ret
pop
scas
je
xchg
sub
clc
and
in
daa
pop
lahf
mov
push
or
mov
sub
clc
in
dec
adc
pop
lcall
dec
jae
mov
or
jle
sbb
push
loopne
fstps
fcomps
fldcw
mulb
jne
fstpt
pop
sub
and
mov
xor
lret
jp
ljmp
shrb
jg
fcompp
mov
cmpsb
mov
xor
inc
sbb
loope
mov
jge
add
or
shlb
xor
aaa
je
cmp
sub
xor
pop
or
stos
mov
enter
or
jns
add
or
fnstcw
pop
adc
jmp
stos
dec
arpl
xchg
push
or
or
jbe
ds
pop
icebp
xor
mov
adc
sub
xor
je
stc
les
jb
xor
sub
jmp
icebp
mov
mov
repz
mov
ret
sub
pop
shl
pop
mov
in
pop
movsl
test
sti
sub
xchg
mov
dec
mov
imul
cmpsl
pop
xor
dec
mov
addb
call
pop
dec
cmpsl
popa
mov
dec
mov
data16
neg
lcall
or
jae
ficoml
pop
xchg
inc
cmc
xor
pop
push
pop
jbe
jae
cli
push
fwait
sub
fiadds
mov
jl
cltd
loop
sbb
xchg
cmp
std
cmp
fwait
jg
xor
ret
sbb
mov
sbb
dec
xchg
shll
sti
push
xor
add
negb
sti
pop
cwtl
sti
ret
fimull
adc
pop
cli
push
pop
jb
mov
stos
push
add
or
bnd
jb
jmp
in
daa
hlt
pop
ljmp
stos
ljmp
scas
xor
in
jp
insb
xor
and
and
std
hlt
js
cmp
arpl
fstpt
in
mov
dec
sbb
inc
or
insb
sarb
xor
inc
rcrb
dec
jecxz
cs
dec
cwtl
loopne
outsl
mov
sbb
lcall
fwait
orb
mov
pop
sbb
or
xorb
movsl
and
xor
lcall
xchg
dec
jg
inc
insb
cld
imul
cs
out
sbb
cmp
testb
leave
test
sub
xchg
pushf
dec
xor
dec
and
dec
fidivs
lcall
cmp
adc
inc
sbb
ror
mov
insb
call
sbb
jmp
mov
ja
in
push
ds
insb
cmpsb
flds
pop
dec
cli
pop
sbb
dec
neg
mov
xchg
mov
test
cmp
repnz
push
add
lahf
inc
pop
cmp
mov
dec
push
cmpsl
lds
mov
mov
jb
fidivl
testl
fnstenv
pop
roll
pop
cmpsl
sbb
fistpl
ss
outsl
xchg
fstpt
inc
arpl
stos
xor
or
fwait
pop
push
movsb
push
dec
lcall
aaa
mov
hlt
daa
pusha
cmp
pop
add
outsb
test
jno
or
cmp
fwait
movsl
and
push
repz
mov
test
xchg
in
or
pop
push
lcall
xor
cmp
mov
fwait
adc
nop
hlt
std
xor
pop
xor
sbb
mov
bound
jl
mov
push
jns,pt
dec
pop
out
push
push
inc
sbb
je
or
inc
pop
xor
dec
pop
cmp
outsl
push
adc
jmp
clc
lcall
je
loop
cmpb
outsb
icebp
cmp
inc
cmp
aas
push
jp
out
or
lcall
fldt
cmp
repz
or
ss
sbb
push
or
scas
jg
jl
sub
mov
dec
pop
pop
arpl
lods
popa
int3
leave
shll
sub
or
sub
sti
push
ret
stos
pop
fisubrl
jb
aaa
lret
add
repz
or
pop
or
fldt
jae
fistl
gs
sub
jecxz
sti
push
mov
add
pop
sbb
pushl
xchg
dec
mov
push
js
ror
cmc
pop
jecxz
rcll
fildl
gs
repnz
fldt
jle
jl
mov
mov
mov
jl
jmp
dec
pop
fildl
pop
xor
push
pusha
aaa
es
pop
and
or
xchg
mov
and
push
or
ljmp
shll
sub
notl
push
or
mov
enter
gs
sbb
mov
jl
or
dec
loope
push
cmpb
outsb
fldt
das
ljmp
xor
sahf
fidivs
jl
movl
test
sub
das
push
pop
xor
xor
xlat
lcall
mov
mov
lcall
pop
pop
imul
inc
pop
imul
shr
sub
sub
mov
jle
ds
loopne
fcoms
imul
and
outsl
sub
pop
sub
int3
mov
xor
mov
mov
mov
and
mov
and
mov
mov
push
mov
mov
pushf
dec
xchg
ret
adc
inc
pop
mov
push
adc
mov
ds
fwait
adc
pushf
lods
adc
rolb
fists
ss
inc
jge
mov
mov
push
icebp
jle
add
ret
sbb
and
push
mov
mov
in
movsb
into
or
clc
pop
xor
ds
and
xor
pusha
cmc
cmp
sub
push
jp
out
data16
mov
rcrb
mov
sbb
mov
sbb
jb
lods
ret
pushf
out
mov
dec
dec
movsb
addr16
imul
xorl
sub
add
sub
push
push
insb
xor
imul
aaa
push
imul
fsubrl
dec
mov
test
icebp
shll
cmp
mov
mov
repnz
popf
inc
pop
add
mov
push
stos
jb
cli
addw
test
inc
and
andb
fistpl
test
mov
filds
stos
sub
movsl
loopne
mov
sbb
jl
fldt
ja
fcomi
adc
insl
and
jg
fstps
fwait
pop
adc
add
cmp
mov
in
mov
add
xor
mov
sbb
fidivl
fisttpl
pop
loopne
cmp
je
das
mov
sub
pushf
jno
test
out
stc
and
pop
stc
das
cli
nop
movsb
pop
jno
mov
mov
ret
dec
test
jp
scas
dec
jl
push
and
leave
pop
fldcw
push
lcall
scas
push
sub
jno
cmp
mov
inc
stos
push
dec
sub
movsl
jl
push
std
mov
pushf
in
in
mov
jae
es
ds
clc
mov
imul
pop
push
mov
jns
mov
cltd
dec
clc
inc
pop
ds
out
cld
arpl
fstpl
fmulp
sbb
jnp
shl
mulb
and
inc
jbe
xchg
sbb
pop
pushf
lock
dec
scas
ja
lods
cmp
mov
sar
imul
fstpt
adc
imul
pushf
mov
in
push
adc
es
adc
sub
dec
dec
mov
push
dec
push
fbstp
call
testb
pop
push
pop
jmp
cmp
mov
jp
out
pop
pushf
mov
inc
sub
pop
push
pop
pop
or
xor
mov
decl
adc
push
ret
sbb
ret
dec
push
fcoms
sbb
cmp
xchg
les
pop
inc
jne
adc
cmp
sub
pop
enter
sub
popa
in
inc
mov
dec
jno
push
ret
and
mov
jl
js
fstpt
outsb
dec
cmp
enter
fs
sub
and
out
and
sbb
add
add
push
das
aad
insb
fld
pop
rorl
mov
adc
cltd
mov
xchg
push
push
and
cld
sbb
inc
stos
lds
inc
in
mov
outsb
fldenv
ret
dec
int
shr
push
sub
sub
loop
cmp
loopne
sbb
imul
lea
pop
lds
das
cmpsl
aad
call
push
inc
mov
sub
idivb
pop
adc
pop
outsb
push
push
pop
je
sbbl
dec
xor
mov
inc
push
push
xorb
adc
popf
bound
outsb
outsb
aad
and
cld
mov
bound
mov
ret
or
test
ret
pop
js
or
cmp
sbb
pop
mov
outsl
aaa
lods
in
ret
push
cld
push
repz
push
mov
cmc
out
xchg
push
mov
ss
cmp
push
xchg
scas
out
adc
dec
or
xchg
cmp
int3
int
je
pop
cmp
sub
cmp
mov
fldt
push
pop
push
adc
mov
call
loopne
leave
xchg
inc
ja
arpl
lea
add
xor
aad
and
jne
fistl
lret
jb
mov
std
mov
lcall
push
xor
lret
gs
xlat
dec
jo
jno,pt
add
clc
inc
subb
push
daa
movsb
repnz
sbb
sbb
adcb
add
xchg
js
inc
push
adc
test
jno
push
fsubrs
mov
pop
rorb
test
imul
dec
xor
sbbb
push
pop
xchg
or
or
push
add
sti
and
mov
pop
adc
push
jo
das
dec
loopne
mov
outsb
and
aas
lods
mov
outsb
out
pop
jmp
sub
push
int3
cmp
ficomps
ret
push
fidivrl
hlt
adc
hlt
mov
lods
lods
inc
mov
and
mov
adc
clc
dec
adc
pop
push
jae
bnd
inc
mov
sbb
mul
cltd
repz
pop
popa
mov
xchg
fldt
dec
pop
pushf
mov
into
mov
adc
sub
stos
ret
movsl
mov
xchg
es
repz
test
pushf
mov
imul
test
push
xchg
push
addl
clc
sub
jb
out
mov
dec
movsb
in
mov
add
pop
movsl
leave
dec
sub
mov
add
dec
mov
jmp
outsb
test
jl
arpl
dec
sub
nop
ljmp
outsl
hlt
fcompl
jmp
inc
mov
imul
push
in
xchg
sub
jg
push
pushf
insb
adc
dec
stos
fmuls
clc
clc
movsb
mov
mov
xchg
jb
aam
push
jo
push
dec
fsincos
gs
rorb
dec
cld
mov
subl
movsb
loopne
das
fidivl
sub
out
ret
mov
or
cmpl
or
push
pop
dec
add
rorb
add
lcall
xchg
mov
das
ret
daa
into
pusha
pushf
jo
std
imulb
out
ret
add
dec
leave
pushf
lret
out
add
dec
add
dec
push
cmp
dec
mov
push
add
and
jp
int
inc
insb
fwait
ret
fistpl
mov
sbb
mov
imul
xchg
aam
cmp
pop
js
ss
test
nop
jb
in
or
xchg
inc
sub
pop
cmp
nop
mulb
inc
xchg
movsb
dec
push
cmp
sbb
loop
into
arpl
add
test
inc
mul
repz
or
shrl
fistl
dec
push
addr16
add
sub
mov
jne
stos
loopne
push
sbb
imul
fnstcw
call
es
fldt
ret
gs
or
rol
jle
adc
jmp
scas
mov
imul
dec
mov
and
dec
xchg
mov
mov
push
pop
imul
inc
add
mov
rolb
dec
clc
cmp
dec
hlt
fistps
jno
les
scas
push
push
mov
push
pop
and
das
hlt
in
into
push
pop
xchg
or
ss
cmp
sarl
outsb
test
ficompl
aaa
push
mov
ljmp
fistl
cmp
cwtl
cmpb
into
push
pop
mov
jns
sub
arpl
in
adc
fsts
xlat
add
lret
sub
imul
mov
pop
sub
pop
ret
out
cs
push
inc
bound
nop
and
cwtl
repz
shlb
nop
scas
fldcw
adc
and
shr
fisubrl
hlt
jl
jmp
data16
cmp
or
xor
cwtl
cvtps2pd
mov
sbb
mov
fildl
shlb
addr16
ret
cmp
dec
dec
cmp
mov
mov
imul
dec
add
cmp
fisttpl
test
sbb
push
jmp
ret
pop
and
cmp
add
ret
cvttps2pi
add
call
aaa
jp
push
mov
push
or
sub
sub
pop
cmp
nop
test
outsb
pop
dec
cmp
jmp
outsb
fldt
arpl
into
mov
bound
mov
sti
cmpsb
sbb
sub
mov
jb
sahf
or
push
pop
movsb
or
ss
inc
hlt
sub
test
rcrl
mov
inc
cltd
loopne
sub
sub
divb
mov
repz
pusha
idivb
loopne
and
notb
ds
pop
push
sbb
ljmp
inc
cmp
cmp
pushf
cmp
jb
sti
mov
cmp
test
mov
mov
pop
cmp
dec
lahf
imul
imul
cmp
push
pop
xor
lret
popf
and
mov
repz
rorl
fiaddl
clc
sub
negb
mov
cs
cmp
nop
testb
ds
sub
jb
mov
mov
pushf
stc
add
ror
fucomi
push
jp
fldt
mov
and
ss
hlt
mov
jmp
int3
ret
arpl
xchg
inc
sarl
sub
loopne
ss
sub
mov
mov
sub
push
shl
mov
add
shl
cltd
add
je
jne
mov
and
xor
test
add
mov
cmp
ljmp
inc
hlt
sbb
jmp
fistpl
mov
gs
das
dec
jne
fcmovnu
in
arpl
pop
daa
push
push
and
push
xor
gs
pop
dec
cmp
or
xorl
mov
cmc
arpl
ret
gs
rorl
js
ds
fisubrl
dec
xlat
arpl
sbb
idivl
lcallw
or
fildl
sub
xorl
mov
iret
rcr
and
or
lahf
adc
sub
fidivs
jmp
jl
add
daa
mov
mov
imul
xchg
je
cmpsl
xor
cmp
mov
pushf
lret
ret
mov
fildl
add
out
inc
inc
dec
sub
push
shl
mov
stos
je
mov
dec
or
imul
mov
sub
shrl
gs
pop
dec
xor
push
pop
dec
stos
out
mov
pop
mov
jmp
cld
aas
shll
jl
inc
insl
jg
cwtl
jno
mov
js
popa
fistpl
aas
push
jb
mov
testl
push
or
fisubl
jb
xchg
pushf
xabort
rcll
das
jo
stos
xor
sub
cmp
fwait
out
shlb
lcall
and
jmp
imul
mov
jae
sbb
jb
sti
fcmovnb
add
jmp
xchg
mov
push
inc
cmp
test
push
inc
fildl
xor
idivb
adc
pop
aad
jmp
dec
ret
orb
sub
jge
stos
jb
lret
inc
gs
imul
jno
adc
fwait
xchg
es
jmp
mov
in
rorl
shl
daa
into
push
push
mov
outsl
add
mov
push
push
push
in
imul
or
shll
ret
je
shll
jge
outsl
pop
lods
jae
jmp
lret
lahf
gs
jle
cmp
shlb
jo
ret
xchg
lret
hlt
ret
jo
mov
xchg
and
mov
jo
pusha
fisttpl
mov
call
jno
sti
push
cmc
jmp
ds
ljmp
pop
push
and
pop
gs
jbe
xor
and
clc
cmp
jns
fcmovnu
cmc
arpl
ds
dec
sub
jb
sti
xor
mov
fldcw
fucomip
mov
dec
jbe
js
out
leave
xchg
mov
mov
cmp
fistl
mov
add
add
imul
int
cmp
xchg
lret
and
leave
ret
aas
xorw
cwtl
stc
sbb
push
int3
sub
push
mov
push
jno
test
out
dec
mov
inc
mov
push
das
daa
into
push
pop
jo
mov
push
clc
cmp
roll
xorb
sub
aaa
sti
dec
sub
aas
push
outsl
fcmovnu
jl
jno
add
lret
push
mov
cmp
cmp
mov
jmp
out
sbb
add
out
fs
push
ret
or
fildl
mov
idiv
mov
roll
lret
ret
insb
lods
rcrl
pop
mov
mov
push
imul
in
jno
add
push
jmp
mov
stos
jmp
ret
or
imul
inc
or
mov
leave
nop
scas
push
mov
pop
imul
out
push
ret
add
scas
lcall
mov
mov
fisttpl
or
int3
sub
loopne
sbb
jecxz
xlat
dec
inc
aas
xchg
jb
mov
gs
jne
pop
pop
push
adc
pop
lock
mov
les
jle
pop
cmp
gs
sub
sub
rorb
xlat
in
popa
lea
idivb
enter
push
shl
mov
loope
jmp
sarl
movsb
push
imul
mov
mov
push
mov
dec
sub
push
rcl
add
pop
or
adc
dec
imul
sbb
mov
sub
sub
xor
stos
ret
xor
test
hlt
push
jmp
sbb
in
add
pop
add
and
sub
add
or
sub
ffreep
imul
in
movsb
or
sbb
sub
movsl
mov
mov
sub
shll
aam
push
incl
push
jecxz
push
sub
add
ret
cltd
ss
gs
mov
push
jno
js
jbe
enter
push
push
mov
push
fcmovu
mov
je
pushf
mov
ret
call
jbe
mov
testb
je
fldt
add
sbb
dec
rep
not
push
ds
jmp
or
rcrl
push
mov
cwtl
stc
dec
add
lea
mov
push
pop
aas
lahf
push
cmp
gs
cwtl
dec
insl
dec
inc
imul
insb
js
mov
lods
jns
outsb
fiaddl
sub
sub
idivb
mov
testl
lcall
fistpll
push
cmp
mov
and
call
addr16
int3
jb
ret
mov
mov
jb
mov
inc
int
inc
jnp
mov
aaa
inc
add
in
and
adc
jb
lret
mov
rcll
dec
loop
jmp
cmp
repz
cmc
inc
fiaddl
nop
or
mov
bound
mov
subb
and
dec
sub
ljmp
pop
hlt
dec
push
in
ret
xor
mov
pop
fidivl
xor
bnd
sub
in
xchg
sub
cvtps2pi
stos
and
push
or
sub
add
and
or
cmp
ret
sti
pop
pushf
rcr
mov
dec
cmp
out
add
mov
fisubl
mov
inc
dec
cmp
xor
ss
push
hlt
push
test
rcrl
pop
mov
in
adc
gs
movl
mov
mov
arpl
mov
gs
xchg
dec
cmp
pop
aaa
fiaddl
test
xchg
cld
xchg
pushf
add
xchg
aas
push
jb
lret
lock
mov
popa
in
xchg
insb
fistl
cmp
cwtl
cli
cmp
sbbl
push
aam
add
into
dec
cmp
mov
push
jmp
fadds
imul
call
insb
sbb
jb
es
jmp
ret
fisttpl
cmp
push
adc
sbb
rep
bound
sti
sub
xor
xchg
mov
ds
aaa
mov
push
jae
fisttpl
mov
xor
inc
popf
inc
dec
dec
cmp
lods
sarl
mov
arpl
xchg
call
add
mov
lret
xchg
gs
adcb
cmp
xor
push
mov
lock
into
push
pop
daa
test
pop
sbb
out
push
imul
insb
hlt
dec
mov
notl
jns
sub
push
in
dec
lods
rcrl
outsb
mov
cmp
add
cmp
mov
lret
mov
gs
add
cld
xor
push
jmp
ret
fistpl
loopne
es
mov
loop
pop
pop
lea
pop
test
xchg
sbb
push
jmp
sbb
cmp
adc
idivb
je
cmpsb
xchg
jno
fmull
roll
mov
les
or
sub
add
outsl
ds
testl
fcmovu
add
in
dec
xchg
adc
nop
lret
sub
xchg
push
sub
mov
or
imul
jp
push
xchg
mov
push
adc
push
pop
push
mov
gs
fst
fucomip
fwait
mov
fstpt
dec
sub
les
jno
mov
lods
cltd
xor
jl
fistl
nop
dec
in
into
push
pop
inc
or
iret
pushf
fimuls
mov
sbb
pusha
loope
inc
pop
inc
xchg
sbb
mov
push
imul
and
outsb
add
lret
pop
gs
mov
fidivs
fldcw
mov
pop
add
ret
stos
or
fildl
push
jmp
ret
mov
inc
imul
mov
jmp
fcmovnbe
xchg
mov
cwtl
rcl
aaa
inc
adc
jno
mov
cmp
sbb
dec
test
and
mov
push
movsb
fldenv
pop
insb
dec
jo
xor
jns
pushf
cli
sbb
ret
fs
push
pop
jno
es
xor
sub
dec
gs
cmc
out
fadd
xchg
push
push
mov
push
pop
addr16
imul
dec
fst
push
sbbb
mov
arpl
cmp
mov
pop
fisubrl
inc
dec
gs
out
dec
inc
pushf
inc
imul
stos
push
pop
inc
mov
imul
cltd
pop
pusha
jbe
inc
pushf
roll
or
sub
pop
js
and
mov
es
cmp
icebp
dec
inc
out
fistps
call
jne
in
push
js
cmp
add
push
ja
push
mov
pop
stos
dec
sub
or
add
jb
sti
inc
testl
xchg
fdivr
out
inc
mov
sti
scas
sub
xchg
push
sub
sti
mov
stos
dec
aaa
mov
sbb
cltd
xchg
mov
aam
mov
cmp
bound
dec
aam
rorl
jne
dec
sti
push
sbb
jb
neg
mov
aas
push
add
mov
inc
add
aam
clc
push
cmp
fucomi
adc
ficoml
push
int3
rcl
jecxz
cltd
out
mov
cmp
fiaddl
add
pop
stc
add
arpl
and
imul
push
ret
aaa
rol
mov
ret
cwtl
or
fisttpl
inc
fldcw
push
xchg
push
dec
jne
loop
ss
idivb
sub
adc
stos
cld
aam
shl
aaa
push
sarb
dec
sub
sub
push
int3
xor
push
lahf
sbb
arpl
sub
idivb
mov
adc
cmp
adc
dec
cmc
and
inc
js
ds
sti
sub
imulb
call
lret
into
push
pop
test
xchg
sbb
in
push
mov
ret
into
push
push
iret
and
dec
push
adcl
mov
add
sub
mul
sub
fldt
jno
pop
ljmp
fildl
leave
cmp
pushf
sub
fstpt
mov
sub
sub
divb
mov
fisubl
pop
mov
lret
xchg
pop
cmp
nop
cvttps2pi
xchg
adc
stc
test
rcrl
sub
push
or
sub
repz
fcmovne
pop
pop
mov
xchg
mov
mov
sub
sbb
stos
pop
fidivl
movsb
imul
sub
add
sti
fisttpl
clc
add
ds
mov
fistl
inc
inc
jmp
mov
xchg
pop
mov
loope
mov
daa
rol
cmp
jns
push
arpl
ret
daa
push
mov
mov
jb
lret
js
daa
repz
lret
push
add
mov
ret
cmp
mov
aam
fdivrl
int3
sub
nop
out
add
call
mov
jmp
mov
xor
scas
xchg
cmp
cs
xchg
int3
mov
and
arpl
cli
push
push
adc
pop
sub
jb
sti
and
adc
sbb
jb
neg
pop
leave
mov
xchg
repz
call
or
bound
test
pop
or
fwait
nop
mov
lea
inc
mov
cmp
xchg
sub
mov
push
jae
fildl
dec
or
or
mov
test
mov
arpl
adc
or
mov
adc
sub
pop
push
mov
push
jmp
mov
packssdw
into
push
pop
pop
or
fldt
mov
mov
pop
push
in
jns
dec
sub
cmp
mov
or
enter
arpl
clc
dec
enter
shll
test
roll
pop
loopne
sub
cmp
cwtl
stc
cld
push
adc
fsts
push
xchg
mov
iret
xor
sub
gs
mov
gs
jmp
xchg
jo
ljmp
or
sbbl
sti
imul
cmp
int3
imul
fstpt
aam
sti
push
push
test
ja
imul
jns
xor
daa
jmp
aaa
or
fcompl
loopne
add
negb
cmp
imul
xor
xchg
pop
leave
stos
das
cmp
cmp
ds
aad
mov
cmp
dec
insl
dec
xor
js
mov
int3
movsb
adc
jg
subb
pop
sub
gs
mov
mov
xchg
aam
and
cltd
cmp
dec
je
int
outsb
insb
insl
pusha
jne
xlat
and
push
push
and
mulb
xchg
pop
subl
lret
sbb
aam
mov
aam
xlat
call
clc
xor
aam
and
xor
test
or
pop
mov
call
push
es
or
loop
mov
jb
push
in
pop
cmp
test
sub
inc
cmp
pop
push
outsl
lret
xor
in
addr16
out
xchg
push
mov
jg
cmp
popf
imul
ficomps
xlat
test
rclb
icebp
pop
and
mov
mov
dec
sbb
add
cmp
xor
repz
clc
or
rcl
xchg
insb
mov
pusha
fisubs
add
mov
jb
pop
or
ja
push
orl
shlb
xor
xor
loopne
xor
xor
cmp
cmp
sub
push
mov
mov
cld
cmp
int3
sub
stos
xlat
sarl
xchg
push
pop
mov
jns
or
mov
popf
ljmp
push
mov
mov
mov
cmp
jno
inc
and
pop
andl
mov
push
mov
push
sahf
jg
adc
fmull
adc
ret
add
mov
jmp
hlt
sti
lods
shl
cld
mov
idivl
repnz
jl
sub
stos
test
xchg
xor
fdivl
pop
pop
xchg
scas
push
mov
in
arpl
lcall
lret
adc
loope
inc
push
je
mov
pop
jle
dec
dec
or
stc
arpl
cmp
fisttpl
sbbb
xchg
and
jl
testl
mov
shll
ljmp
push
outsl
sub
repnz
adc
push
pop
pop
imul
or
sub
inc
push
in
fisttpl
sbb
push
add
aaa
addr16
pop
shl
loop
push
push
sub
jmp
sbbb
hlt
xchg
adc
ret
add
aam
movsl
scas
push
and
sbb
int3
das
xor
cmp
out
imul
mov
loop
push
rcrb
stos
dec
mov
dec
aaa
sbb
pop
pop
sbb
in
xchg
in
ljmp
add
sbb
sub
cmp
and
sbb
push
movsl
adc
cmp
sub
sbb
cli
xorl
lds
rclb
mov
imul
lahf
or
jp
push
mov
fstps
rcll
pop
nop
popf
xchg
mov
jmp
lret
cld
fsub
pushf
or
jns
incl
loopne
ja
dec
ljmp
xor
out
lret
adc
dec
popf
sbb
loope
divb
and
jns
mov
push
mov
push
jg
test
lock
dec
fldenv
xchg
jo
push
push
or
das
loope
lahf
insb
mov
mov
mov
jl
pushf
rcrb
movsl
or
pop
insb
ret
jle
ja
cmp
imul
add
push
xorb
andb
imul
inc
sbb
jb
adc
fwait
imul
sub
dec
nop
dec
inc
cmp
sbb
xchg
push
ficoml
iret
cmp
and
xchg
add
les
dec
lea
icebp
xchg
dec
push
jb
xor
jmp
iret
mov
gs
pop
gs
lret
imull
ljmp
sub
jg
call
iret
jg
out
mov
rcrl
fadd
out
jge
adc
ds
addr16
jmp
push
adc
inc
adc
jg
mov
sub
fwait
xor
cmpsl
filds
cs
rclb
rorb
pop
lock
cs
xchg
xlat
lock
xchg
fsubrl
sbb
adc
rcrb
adc
xchg
sub
mov
adc
adc
outsl
mov
pusha
jb
mov
cmp
mov
push
in
pop
pusha
cmp
loopne
loope
cld
xor
out
nop
cmp
mov
jbe
lret
fildl
loopne
lahf
jno
lods
pop
xor
cmc
popf
add
icebp
mov
insb
cmp
push
dec
jge
jmp
out
xchg
sub
fwait
push
and
test
sahf
xor
cs
add
push
leave
mov
cmp
je
jmp
jno
push
jae
push
xor
pusha
ja
xor
jge
and
insb
cltd
push
rcll
push
push
ljmp
mov
test
or
sub
aas
lock
ja
ds
mov
into
mov
lea
das
jge
jmp
adc
jmp
dec
inc
orl
xor
idivb
pop
stos
das
aas
sub
das
lock
jmp
pop
sub
or
enter
inc
faddl
pop
mov
cltd
mov
in
mov
lds
icebp
lret
pop
sti
shll
popa
xor
sbb
xchg
imul
repz
xor
imul
lcall
ss
addr16
ret
inc
cld
out
dec
hlt
push
imul
cmp
inc
stos
pop
mov
mov
xchg
adc
gs
mov
cmp
lret
test
push
cmp
outsb
xor
fstpt
pop
mov
cmp
pop
mov
loope
jo
je
repnz
push
dec
sbb
jb
pop
test
outsb
pop
dec
insl
jl
andl
jp
push
push
sbb
pop
cltd
popl
cmp
scas
insb
jge
popa
or
push
pop
or
cli
add
xor
sbb
iret
xor
push
push
outsl
dec
bound
cmp
int
stc
add
ds
lcall
xchg
xor
cmp
or
cltd
lcall
or
fimull
adc
dec
xor
cmp
roll
or
lret
dec
data16
cld
jl
push
jecxz
stos
push
inc
rcr
mov
and
and
popa
data16
cmp
dec
mov
cli
scas
push
insl
mov
mov
mov
ja
aaa
xor
into
cmp
hlt
je
push
xchg
std
adc
push
sub
imul
pop
push
andl
sahf
xchg
daa
jmp
sub
inc
and
ljmp
push
push
cmp
into
xchg
and
and
out
push
sbb
negb
cmp
push
mov
push
xor
subb
cmp
enter
and
xor
in
cli
xor
cmpb
lahf
pop
cmc
jns
lret
es
orb
je
das
or
imul
pop
pop
stos
or
jg
inc
cmp
jp
mov
push
jge
sbb
mov
pop
bound
sub
jae
in
clc
sub
rorl
push
imul
jne
fistpl
push
inc
xchg
mov
stc
jmp
push
pop
loopne
arpl
stc
sbb
mov
in
rclb
test
stc
adc
outsl
cmp
jnp
mov
arpl
dec
gs
shrl
xchg
push
push
daa
jae
ljmp
insl
mov
movsl
or
lds
iret
push
dec
push
add
ficomps
lock
popf
xor
xor
lret
jns
push
lret
jle
mov
psllq
or
test
push
jecxz
fidivl
notl
pop
sub
jo
jecxz
adc
loope
sbb
cli
and
or
adcb
pop
aam
xchg
mov
push
cmp
test
xchg
cmpsl
jmp
push
jl
out
adc
xor
aas
cmp
push
clc
push
outsl
mov
mov
outsb
pop
dec
push
test
cmp
jno
inc
fucomi
jp
and
int3
aad
jp
or
ja
jb
xor
rcrl
or
push
pop
xor
mov
jp
inc
in
outsl
mov
add
mov
ret
sub
pushf
jmp
jmp
dec
ja
push
jmp
mov
stos
jg
push
mov
jl
inc
ss
cwtl
xchg
cmp
gs
loop
mov
rcrb
fadds
leave
pop
in
jno
pop
out
sbb
dec
cmp
xchg
iret
aas
pushf
pop
les
push
mov
lcall
outsb
mov
sub
lahf
mov
scas
jb
test
jbe
adc
cltd
mov
pop
fdivp
sub
bound
loop
xlat
negl
fmuls
pop
xor
pushf
mov
sbb
jo
pop
mov
fistpl
arpl
rcr
in
dec
jg
mov
ja
jg
ljmp
je
lcall
jle
gs
ja
hlt
ljmp
dec
mov
xor
ljmp
adc
sbb
adcb
stc
ljmp
imul
xchg
dec
arpl
pop
pop
pop
cmp
or
push
mov
cmp
push
loop
adcb
or
leave
ljmp
xor
push
cld
push
sub
test
ljmp
push
repz
sbb
neg
sbb
mov
ljmp
cltd
cmp
jno
cmp
hlt
loop
imulb
ss
xor
sti
push
mov
fstpt
cli
bnd
inc
pop
icebp
xor
cmp
repnz
push
or
xor
loop
stos
cmp
mov
mov
adc
pop
ljmp
sti
cs
repnz
ret
loope
ss
push
icebp
mov
cmp
les
push
jmp
push
push
sbb
gs
jmp
inc
cmp
fdivl
mov
loope
insb
push
jmp
xchg
fistpl
pop
push
arpl
ss
shrb
jmp
jbe
sbb
adc
xor
cmp
repnz
loope
xor
cltd
push
cmp
fcomip
or
aad
pop
jmp
push
sarl
push
jmp
push
and
int
in
mov
xchg
push
adc
lret
sbb
push
push
mov
pop
pushw
xchg
pushf
mov
mov
or
push
lret
imull
xor
xchg
hlt
push
mov
aaa
std
loope
xchg
lock
xchg
xlat
xor
mov
mov
fs
neg
es
aaa
fnstsw
ret
mov
cmpl
test
mov
leave
je
dec
jb
arpl
ja
or
lahf
pop
push
mov
pop
pusha
mov
cmpsb
mov
sbb
inc
pop
in
sarb
xlat
inc
xchg
sub
pminsw
test
dec
fldt
arpl
in
dec
aaa
movsb
mov
xchg
push
ja
fwait
mov
add
jb
imul
insl
push
rorl
ja
xlat
pushf
mov
push
pop
das
aaa
out
mov
stc
imulb
mov
imul
mov
xlat
xor
dec
sti
js
sti
pop
fwait
xchg
and
or
pop
sbb
mov
fiaddl
cmp
aas
jnp
dec
xchg
clts
dec
xor
orb
jne
mov
mov
jp
jb
or
inc
cmp
mov
jne
mov
imul
gs
ja
mov
das
setg
push
movsl
dec
cli
movsb
inc
push
sbb
stc
jb
fsts
mov
adc
or
sub
lahf
jnp
fimull
int
sbb
cmp
cmc
and
sahf
and
or
jl
pop
mov
pop
push
xchg
jl
fidivrl
ljmp
xlat
push
and
cli
sbb
outsl
jne
dec
add
int3
xor
xlat
jecxz
into
inc
inc
pop
or
jl
xchg
mov
pop
clc
and
jl
fwait
mov
inc
mov
sbb
jg
mov
cmp
sub
imul
jne
je
push
nop
adcl
in
mov
leave
jnp
stc
ds
push
cmp
fnstsw
popa
cmp
stc
adc
ds
xor
dec
adc
pop
leave
xor
inc
loop
stos
fldl
insb
cmp
ds
pop
clc
imul
enter
call
dec
sbb
xchg
mov
lods
sub
repnz
pop
mov
jno
mov
movsb
arpl
adc
mov
fisttpl
lcall
sbb
jns
xor
loope
xor
fwait
xlat
mov
mov
popa
push
jmp
imul
cli
dec
stc
adc
pop
in
dec
insl
lock
movsb
or
and
subb
inc
dec
mov
jl,pt
lahf
and
pop
inc
mov
fldt
fdivl
pop
and
push
cmpsb
sahf
add
mov
mov
pop
out
inc
mov
sarb
or
fstps
scas
xor
pop
loop
loop
mov
xor
fstpl
xlat
pop
clc
inc
lahf
adc
sub
sbb
dec
inc
int3
mov
jg
in
mov
fyl2xp1
mov
add
cli
push
xlat
out
hlt
das
xchg
jmp
mov
scas
xchg
jnp
push
call
pop
dec
push
mov
push
pop
sub
inc
cli
jns
mov
cs
fstpt
jp
cmp
push
jae
xlat
dec
faddl
jno
loope
fildl
outsl
frstor
cld
push
or
mov
push
loope
mov
aad
push
dec
popa
cmp
sub
push
dec
sbb
or
sub
fs
pop
aaa
xor
jl
addr16
inc
or
dec
push
mov
popl
and
sbb
pusha
jl
arpl
and
aaa
xchg
jae
jp
or
xbegin
xorl
fistpl
sbb
jl
inc
jns
dec
insl
mov
cmp
pop
sub
enter
jp
cwtd
fcomip
dec
lods
fwait
cmpsl
movsl
gs
testl
in
adc
stc
fsubrs
jp
jne
sub
aaa
pop
mov
stos
sbb
outsb
fwait
or
cwtl
cmc
push
stos
xchg
cs
mov
int3
cltd
dec
sbb
ja
push
loopne
stc
fldl
xor
test
sbb
fidivs
sub
push
nop
inc
ljmp
xlat
add
pop
cmp
mov
dec
lock
xor
lcall
xchg
mov
les
das
scas
test
into
jne
lea
loopne
pop
and
mov
fnclex
jbe
shll
addr16
xor
dec
jmp
push
sbb
inc
mov
mov
xchg
jg
add
xlat
mov
loop
mov
rcrb
sbb
push
ss
push
mov
cltd
clc
lcall
call
jge
aam
les
mov
cli
lret
mov
and
les
les
jl
imul
xchg
adc
xchg
aad
jne
arpl
push
cmp
stos
push
mov
sarl
add
pusha
clc
jp
cmpsb
dec
jg
mov
fisttpll
icebp
sbb
dec
jo
mov
adc
cli
jmp
jbe
xor
xchg
sbb
test
in
sub
jp
imul
outsb
loop,pt
loop
ljmp
movsl
jl
fidivl
jno
cmp
repz
jae
clc
out
and
mov
pop
sti
sbb
popa
sbb
sub
mov
cmc
or
dec
mov
mov
xchg
jnp
inc
fsubr
shl
dec
inc
mov
mov
inc
in
popa
mov
cwtl
or
adc
test
pop
mov
cmp
fcoml
insb
adc
add
stc
jne
loope
sti
mov
aad
leave
cmp
fidivrl
loop
dec
loope
jnp
sub
xor
ret
sbb
jp
xchg
xlat
pop
or
pusha
xchg
fwait
xchg
xor
ret
pop
pop
mov
cmpsl
or
cmp
adc
push
push
fcmovnu
adc
cmpsl
jge
insb
cmc
adc
inc
ret
pop
or
insb
daa
int3
jae
fisttpl
arpl
jne
dec
pop
stos
push
xlat
gs
nop
cli
test
sbb
xchg
mov
lock
xchg
in
fdivs
lock
fisttpl
ja
push
rclb
xchg
lcall
movsl
xchg
push
push
movsb
adc
imul
jae
xlat
mov
push
je
mov
sti
mov
out
sub
insl
sbb
and
jle
adc
outsb
xor
push
icebp
adc
cmp
xor
jmp
cli
push
sub
je
adc
jg
sub
xor
xor
idiv
fcompl
arpl
sub
jno
ds
mov
jl
mov
fs
movsb
sub
pop
dec
jnp
fs
jne
rol
bsr
pushf
mov
bt
add
clc
movzwl
lea
xor
ror
movzbl
not
mov
pushf
test
add
pushf
mov
cmp
test
call
lea
je
shl
bsr
btr
xor
jmp
inc
iret
jbe
cmp
lds
pop
push
pushl
sub
mov
mov
push
dec
and
out
scas
shl
test
sub
mov
xchg
cltd
mov
call
mov
xchg
mov
cmp
outsb
inc
sbb
mov
push
mov
and
mov
inc
insl
ljmp
movsb
mov
mov
daa
adc
adc
ror
sbb
push
fstps
inc
js
int3
cltd
rolb
popf
and
dec
jg
xchg
sub
mov
repz
mov
mov
arpl
popa
imul
sub
lea
sub
cmp
stos
jae
dec
aas
dec
mov
push
movl
call
fsubs
cmp
xchg
enter
inc
xor
test
cmp
nop
pop
jno
stos
push
add
push
mov
sbb
mov
stos
adc
repnz
mov
lods
mov
mov
or
xchg
pop
mov
fistpl
xchg
je
or
movsb
mov
adc
bnd
repz
jns
inc
push
clc
dec
pushf
mov
mov
or
add
pushf
add
pusha
mov
lea
jmp
lods
lock
rorl
or
inc
push
loopne
cmp
repnz
push
int3
push
adc
fists
and
jb
add
scas
sbb
in
insl
icebp
aaa
and
and
insb
btc
shl
xchg
add
jg
mov
loop
in
mov
ret
sub
mov
jl
and
mov
mov
jg
addr16
ja
inc
mov
xor
int3
inc
dec
aad
mov
push
pop
fiadds
stc
out
cld
fiadds
push
out
test
test
push
lahf
rorb
cmp
filds
repz
mov
fcompl
lahf
sar
out
push
xor
xor
add
sti
mov
inc
fists
and
mov
mov
ret
pop
jecxz
add
out
daa
add
popf
adc
xor
fildl
jnp
xchg
sbb
dec
popf
xlat
and
pop
das
jmp
ficoms
enter
xchg
call
cmp
mov
lea
jae
clc
cmp
pushf
pushf
push
lea
jae
pushf
cmp
pushf
push
movw
lea
ja
mov
jmp
in
aad
cmp
out
or
daa
stos
push
xchg
xor
cmp
lcall
xchg
or
jecxz
push
xchg
or
lds
or
push
xchg
cltd
jecxz
xlat
imul
xor
lret
jo
xor
push
push
sub
mov
mov
out
inc
arpl
imul
and
dec
or
inc
add
add
or
push
ss
cli
cmp
and
lds
leave
mov
inc
js
cmp
pushl
push
neg
out
lods
out
adc
xchg
mov
xchg
ret
loopne
pop
and
pop
cwtl
imul
mov
push
aaa
cltd
repnz
nop
dec
mov
cmp
xchg
out
test
loop
push
sub
cmp
adc
xor
inc
dec
movsl
lret
aaa
cltd
repnz
enter
jle
xor
lods
fimull
push
stc
dec
lahf
fdivrl
shl
aad
jo
insb
stos
std
out
sbb
sub
ret
repnz
mov
adc
pop
mov
icebp
out
xchg
popa
lock
ret
lcall
nop
fcomip
scas
xchg
insb
and
mov
jo
xor
mov
mov
and
push
add
xchg
jle
sbb
sbb
inc
cmp
sub
xor
test
sarb
mov
mov
andb
lret
decb
inc
icebp
mov
imul
out
mov
dec
and
mov
shl
lahf
xchg
mov
mov
in
mov
mov
aad
push
les
push
and
cmp
aam
cmpsb
clc
or
jp
fsub
xor
xlat
sub
inc
adc
jbe
cwtl
xor
sub
out
decl
push
or
and
je
btc
add
movzbl
mov
pusha
add
test
pusha
stc
bt
mov
bswap
sbb
mov
clc
call
cmp
js
push
dec
ret
mov
iret
ror
test
push
pop
pusha
mov
xor
xchg
jg
xchg
or
mov
fimuls
out
xchg
mov
rolb
pop
xchg
mov
arpl
xor
mov
inc
lods
out
jmp
mov
jb
pushf
int
mov
ret
add
daa
out
pop
stc
pop
inc
lret
mov
sti
xchg
inc
pop
mov
sub
push
adc
jb
cli
mov
rclb
mov
sahf
mov
leave
xor
mov
fs
jne
shl
xadd
rcr
mov
bt
rcr
btc
stc
sub
add
clc
bsf
sub
mov
jmp
rep
jmp
jmp
popf
stos
lcall
loope
add
mov
mov
jmp
cmp
in
add
les
add
push
out
inc
lea
pop
inc
jl
iret
imulb
cmovbe
inc
xchg
pop
aam
push
sbb
xor
pop
add
nopl
add
mov
call
arpl
sbb
adc
mov
jge
dec
lods
mov
hlt
test
movsb
jbe
push
mov
sbbb
or
and
aam
xor
bound
jbe
or
rolb
sbb
dec
cltd
je
ret
fwait
sub
out
dec
cwtl
push
testb
push
and
setae
mov
clc
repnz
movb
pushl
lea
jne
setns
mov
movb
pushf
pop
push
movsbw
lahf
lea
push
pusha
push
mov
movl
movw
pushf
pushf
mov
push
pushl
ret
jmp
mov
pushf
lea
jmp
movsb
inc
xor
cmp
mov
call
sbb
lcall
sub
pop
aad
hlt
push
stos
scas
mov
ror
cmc
push
push
mov
cmp
mov
push
idivl
jmp
lret
push
push
xchg
loope
test
lods
fstl
mov
cmp
sti
stos
sub
mov
int
push
jp
jecxz
icebp
aas
mov
mov
rol
mov
and
adc
rol
cmp
inc
addl
inc
or
cwtl
pand
in
inc
dec
or
pop
js
into
xor
mov
jp
insl
rcrl
or
xchg
cmp
adc
xor
loope
orl
pop
nop
adc
sti
add
movsl
nop
inc
mov
mov
adc
out
pop
adc
ffreep
push
enter
fisubrs
xchg
xor
mov
repnz
pop
lret
mov
mov
lock
dec
pop
scas
orl
fldt
popf
mov
push
insb
cmp
cmp
dec
and
scas
and
inc
xor
adc
or
jl
fidivl
int
gs
test
and
xchg
inc
mov
fwait
adc
xor
nop
mov
push
add
add
sbb
arpl
inc
cltd
loop
push
scas
out
dec
dec
mov
pop
stos
xchg
test
jb
mov
cmp
data16
mov
sub
inc
stos
mov
les
xchg
cmp
in
scas
adc
in
cwtl
ljmp
sbb
dec
lret
mov
shl
sub
cmpb
push
mov
push
lea
jne
shl
movzbl
rol
rcl
sub
cmc
aam
mov
cmc
add
cmp
sar
clc
mov
pusha
test
test
jmp
xchg
and
cmp
je
xchg
dec
ja
push
pop
ja
push
and
sbb
fs
pop
push
sbb
icebp
lea
sbb
in
push
pushf
xchg
cld
test
inc
call
test
push
sbb
ds
outsl
cld
jo
bound
insl
push
in
int3
mov
test
push
cltd
loop
jecxz
xor
inc
add
lods
fstpt
in
mov
pop
xor
mov
sarl
sbb
jmp
xchg
xor
cltd
enter
hlt
call
mov
jnp
inc
dec
jne
pop
jae
insl
ja
mov
push
stos
cmp
int3
scas
xchg
jbe
fisttps
push
push
mov
bound
movsb
xor
shl
xor
fildll
mov
rcr
test
sub
js
push
add
adc
outsb
sbb
xchg
gs
push
imul
jne
xor
pop
push
sbb
dec
notb
push
push
mov
pushf
gs
xchg
iret
adc
scas
dec
scas
ficoml
xor
cs
movsb
fmuls
xor
lret
testb
jl
mov
imul
mov
cltd
mov
xchg
shr
xchg
cmp
xor
mov
das
ficoms
sbb
xorb
pusha
repz
pop
cmpsl
imul
test
push
movsl
es
sbb
jno
push
xorl
cmp
insb
and
add
test
mov
xor
jmp
mov
cmp
xchg
sub
and
push
rolb
xchg
out
ficompl
and
xor
sub
mov
movsl
aaa
add
movsb
repnz
fnsave
insl
repnz
push
jecxz
es
fimuls
cmp
sbb
mov
outsb
jmp
rolb
jns
push
sbb
inc
stos
movlps
or
and
dec
pop
jns
xor
pop
outsl
ds
pushf
mov
push
fisubrl
negb
into
int3
adc
xchg
push
dec
outsl
daa
cmp
in
sbb
jl
lahf
dec
jp
push
inc
xchg
loopne
mov
xor
mov
mov
mov
ret
mov
jae
aad
sub
push
bound
inc
hlt
jb
or
call
inc
les
add
rorb
lods
xorb
adc
xor
jbe
dec
shlb
push
lahf
hlt
scas
popl
and
push
aas
and
lea
je
je
adc
cmp
pop
insb
cmp
insb
rorb
bound
loopne
icebp
push
pop
daa
cmp
cmovo
push
xorl
lea
out
sti
inc
inc
xor
fwait
pop
int3
cltd
cmpsb
or
and
fistpll
mov
sbb
or
mov
outsl
jae
fbstp
leave
imul
sbb
adc
pop
xor
xchg
mov
jle
in
ljmp
pop
aas
dec
mov
adc
and
or
scas
ret
jecxz
pop
jne
insb
rcr
xchg
loope
cmp
fimull
jmp
pop
jbe
pop
cli
lret
rorl
and
jg
shl
add
jge
add
and
sub
push
imul
call
stc
mov
pop
test
clc
inc
sbb
mov
shll
or
test
adc
add
mov
lods
sub
imul
jns
mul
dec
xchg
adc
or
push
mov
adc
rol
jbe
mov
and
addl
mov
dec
icebp
mov
mov
aad
test
mov
push
js,pt
xchg
cmp
fiaddl
arpl
mov
mov
cmp
insl
idivl
mov
sub
daa
fimuls
pop
lret
fldt
ds
push
imul
cwtl
aaa
mov
pop
xchg
jp
adc
sub
add
sahf
sarl
scas
jo
fistpl
sarb
testl
mov
mov
push
and
adc
push
xor
gs
cmc
cmpsb
pop
int3
fs
push
fldl
xchg
pusha
mov
push
pop
xor
test
test
dec
sti
insl
mov
mov
es
cmp
dec
fucomi
aas
mov
js
dec
sbb
push
push
mov
aaa
jl
cmp
subb
or
stos
push
call
jle
and
lahf
adc
add
rclb
xor
xchg
cltd
stos
adc
inc
sti
std
or
push
xchg
fcomps
mov
test
in
mov
adc
adc
insb
jle
push
insl
mov
sub
testl
and
pushl
push
pusha
jmp
jge
imull
cmp
add
aam
jbe
pop
dec
mul
jo
inc
or
fldl
cmpsb
or
pop
arpl
pop
mov
movsl
outsb
mov
mov
subb
test
repz
xchg
aas
aad
sbb
sub
inc
pop
pusha
inc
inc
inc
aam
pushf
es
adc
and
cmp
rcr
lods
aas
or
outsb
jp
pushf
insb
ja
push
mov
inc
push
pusha
lret
push
mov
movsbw
adc
btc
mov
bsr
shl
sbb
rcl
sub
test
push
inc
btr
bt
push
bts
push
bt
dec
push
das
dec
aad
call
jmp
popa
in
lods
outsb
stos
out
ficompl
mov
loope,pn
insl
lods
cs
fisubrl
mov
sub
das
lods
insl
popa
stos
popa
mov
pusha
movl
pushf
lea
jmp
and
mov
cmp
or
insb
pop
leave
cmp
mov
sub
out
cmp
inc
add
inc
icebp
jns
lahf
cmpsb
or
and
mov
dec
outsl
addr16
lahf
push
out
or
mov
ficoms
test
cs
das
cmpl
call
data16
in
je
shlb
pop
stos
mov
mov
insl
js
and
push
push
xor
scas
push
aad
dec
fidivrl
push
or
js
jle
mov
pushf
aas
int
in
dec
cmpsb
in
xchg
mov
jno
lock
fisubl
aad
jne
push
rorl
dec
add
mov
or
lfs
adc
sub
fwait
xor
mov
add
or
scas
jnp
lret
fs
push
xchg
ret
sub
js
lods
pop
or
sbb
cmp
shl
rcrl
push
or
cmpsl
test
inc
es
or
push
pop
nop
mov
lock
out
popl
sub
push
divb
or
dec
rcpps
mov
addr16
mov
movsb
push
das
into
mov
cmc
pop
scas
popf
pop
dec
mov
loope
cmp
outsl
mov
pop
fmull
in
pop
lahf
pop
daa
je
add
imul
cmp
cmp
sub
lret
dec
sbb
adc
or
xor
lea
je
cmp
add
test
clc
cmp
cmp
je
pusha
pushl
movl
lea
jb
call
cmc
add
call
bsr
mov
cmc
shr
sbb
mov
bt
xor
cmc
jmp
mov
js
pop
dec
jle
pusha
dec
jl
mov
enter
push
pop
xchg
cli
inc
mov
and
cmc
adc
cmp
pop
mov
jl
jo
sbb
sbb
jns
ss
push
std
xchg
mov
xchg
pusha
adc
in
mov
pop
lahf
aam
popf
shlb
xchg
in
dec
push
or
addr16
adc
ret
shl
mov
pop
xor
lods
mov
pusha
push
loop
mov
movsb
cmc
fisubl
jle
lds
mov
call
pushf
mov
adc
jmp
leave
aad
sub
fmull
jmp
push
lahf
mov
dec
push
push
jno
shl
sbb
sti
inc
lock
rolb
adc
pop
arpl
jmp
ljmp
jne
xchg
and
fnstcw
push
es
mov
test
dec
push
es
push
fldt
mov
cmpsb
inc
cs
xchg
mov
scas
sahf
push
cmp
fsubrl
cmp
push
test
mov
stos
inc
mov
dec
invd
mov
fsubrl
jp
mov
cmp
sub
dec
clc
inc
xchg
aam
jecxz
dec
sub
aaa
lods
xchg
cld
in
das
fimuls
popa
cmp
cmp
or
mov
fnsave
or
fildll
mov
cli
loope
lcall
add
dec
outsl
arpl
inc
jb
gs
mov
sbb
jl
xor
xlat
setbe
mov
pushl
movsbw
not
call
add
call
pusha
push
pushf
lea
je
push
sub
test
test
jmp
xchg
gs
cmp
add
repnz
jno
cmp
sbb
sub
mov
imul
stos
imul
inc
push
jno
dec
dec
dec
les
cmp
push
call
jo
adc
call
jb
insb
sub
pushl
jmp
in
js
das
cmp
in
sbb
mov
imul
das
orl
std
push
or
jo
stc
dec
addps
bound
dec
fnstsw
pop
int3
push
pushf
inc
ja
push
or
popl
dec
fldt
cmp
es
jnp
ret
aaa
test
jb
add
xor
push
call
push
and
dec
pop
insl
cli
into
lods
xchg
adc
mov
pushf
das
cmp
push
adc
in
lcall
outsl
je
roll
sbb
mov
imul
sbb
fs
sbb
mov
xor
aam
sbb
fisttpll
mov
push
cmc
cmp
xor
jecxz
cmp
popf
inc
movsl
sub
out
std
fsubrl
cmc
push
pop
xchg
popf
xchg
push
ds
stc
das
cmp
test
loopne
add
pop
insl
push
jg
int
popa
push
std
insb
jbe
movsb
cmpsb
or
loop
jg
dec
aaa
orl
cld
jle
sti
cmpsb
or
outsl
cltd
dec
loope
test
sub
lods
int3
aad
gs
rorb
or
xchg
mov
adc
push
testb
cmc
adcb
sub
ja
lahf
pop
adc
cltd
push
sub
mov
sti
out
inc
jmp
cmp
push
cmp
push
jmp
movw
lea
ja
pushf
call
cmp
pushf
jmp
lea
jae
movsbl
btc
btr
mov
stc
lea
add
movsbw
mov
mov
call
inc
push
repnz
lret
cmp
mov
jae
jl
test
into
xor
xor
xor
pusha
cmp
adc
js
push
push
out
cmp
addr16
bound
or
mov
js
push
loop
inc
adc
fstl
mov
cmp
lcall
out
inc
xacquire
faddp
pushl
add
push
shlb
aam
dec
and
or
jmp
aas
jmp
and
stos
imul
xchg
cmpsb
cmp
je
popa
adc
int3
imul
jbe
cmpsb
mov
cmp
lss
daa
xlat
arpl
push
loopne
ds
dec
icebp
ret
cld
or
orl
mov
jl
xor
inc
mov
sbb
addr16
xchg
mov
cmp
insb
sub
jmp
push
stos
pop
push
xor
das
push
push
test
push
push
inc
ret
add
mulb
xor
rcl
scas
orl
lahf
out
adc
pop
add
xor
test
dec
xorl
cmpsb
roll
in
or
adc
jno
dec
push
stos
dec
pop
sub
push
pop
into
dec
push
push
cltd
and
enter
stos
dec
mov
scas
mov
pop
imul
imul
pop
gs
sbb
add
jb
xor
push
leave
jp
aad
jbe
push
adc
gs
scas
push
add
std
outsl
pop
cltd
mov
cmpsb
or
xor
and
orb
push
xor
mov
negl
sub
mov
dec
dec
or
fnsave
xchg
lods
ss
int
sbb
into
insl
or
loop
mov
push
jns,pn
popf
push
mov
insl
cmp
nop
lret
cmpsb
cmpsb
in
mov
and
mov
push
pusha
pushf
mov
lea
jmp
push
cmp
stc
cmp
cmp
call
jb
xor
stos
push
inc
jbe
push
ret
xor
das
ds
push
mov
adc
and
mov
orb
data16
clc
out
mov
cmp
insb
cmc
sub
xlat
adc
aas
jl
int
fwait
addr16
cmp
andb
out
lahf
inc
fiadds
loope
arpl
loop
testb
mov
xchg
loop
add
imul
sti
and
pusha
clc
adc
xlat
xor
imul
pop
and
lods
stos
dec
mov
std
or
mov
pop
and
xlat
mov
scas
std
add
push
mov
mov
scas
pop
add
xorb
jb
and
out
pop
push
mov
xchg
or
mov
mov
hlt
mov
arpl
mov
pop
and
mov
int
mov
jp
dec
mov
add
jb
and
fisubrl
inc
movsb
jb
add
ljmp
and
pop
pop
int3
adc
and
mov
and
jg
pop
inc
mov
dec
mov
js
jle
jb
and
xor
pop
or
jb
and
mov
ret
mov
scas
jge
inc
inc
pop
jmp
mov
pop
pop
testl
and
stos
cmp
dec
mov
cmp
aas
or
jb
and
sahf
lods
xlat
xor
ror
cmp
pop
mov
cmpsl
pop
fiaddl
mov
inc
loopne
xchg
adc
mov
fnstsw
adc
mov
sbb
jbe
mov
pop
and
cmp
nop
sbb
jne
mov
xchg
jb
adc
sar
push
mov
mul
cmp
adc
ljmp
jns
das
pop
push
mov
mov
pop
push
mov
sbbl
lret
mov
and
jns
insl
jno
or
out
sbb
push
test
imulb
sub
adc
pop
dec
add
adc
push
inc
push
mov
push
mov
pminsw
lock
cmc
mov
call
xor
popf
ss
and
ret
xchg
stos
mov
add
mov
or
mov
adc
jmp
inc
mov
loop
fimull
mov
rol
loope
cltd
jl
inc
jl
lods
lret
jbe
inc
dec
rorl
cltd
mov
js
shl
jp
outsb
jecxz
imul
das
out
outsl
ja
adc
test
mov
outsb
fucomi
stos
andl
mov
xor
add
lea
fildll
dec
mov
mov
push
adc
push
in
cmp
rcr
ss
mull
pushf
sub
popa
outsb
add
je
inc
aad
adc
adc
ja
xchg
add
mov
out
scas
testb
xchg
inc
int3
es
sub
divl
aam
sbb
mov
push
aad
cwtl
rol
punpcklwd
int3
cmpb
sbb
inc
imul
mov
push
bound
or
xorb
and
mov
jge
xor
mov
loopne
jnp
inc
mov
insb
roll
lock
daa
subl
inc
add
addr16
jno
lahf
mov
das
sbb
or
inc
into
jne
in
stos
loope
xor
bound
or
xor
inc
xor
push
ret
ljmp
rorb
aas
cmp
or
cmp
mov
test
cmpl
mov
add
dec
test
test
sbb
push
aaa
jg
push
out
cmp
mov
mov
pop
sti
adc
jae
and
inc
cwtl
cs
imul
jnp
int3
jle
nop
cmp
adc
cmp
daa
call
and
psraw
aad
pusha
or
push
punpckldq
mov
add
mov
xor
insb
rol
jp,pt
push
inc
addr16
pop
pop
aam
cltd
daa
pop
jle
test
mov
mov
movsl
pop
adc
or
cltd
in
stc
dec
pop
insb
mov
je
jnp
outsb
pop
data16
push
sbb
add
and
iret
fisubrs
or
movl
movb
lds
xor
aam
jno
adc
adc
inc
dec
divl
popf
hlt
inc
popf
mov
movsl
jge
ljmp
jecxz,pt
stos
out
jb
int
clc
movsl
sub
roll
jge
adc
jbe
in
jb
iret
mov
or
shll
push
xor
push
add
mov
xchg
inc
push
and
loop
les
mov
mov
loopne
jnp
stc
or
inc
pop
sbb
sub
cmc
cmpsb
imul
mov
lock
mov
call
or
lahf
jmp
in
out
mov
push
lods
stc
out
push
arpl
mov
pmuludq
pop
lock
lock
and
lcall
lret
pushl
int3
fidivrl
mov
xor
dec
sti
jge
dec
in
ret
in
push
pop
rcr
std
dec
aas
pop
sub
jbe
imull
jns
inc
ljmp
mov
in
ret
mov
xchg
into
push
lret
jb
out
das
sbb
and
xor
sbb
jl
out
out
fnstcw
adc
dec
jae
sbb
inc
mov
mov
ss
mov
xchg
pop
out
cmp
shlb
daa
pop
arpl
adcl
pop
ret
or
ret
cmc
pushl
test
xor
stc
cmc
not
bt
cmp
pushf
add
pushf
cmp
movzbw
jmp
add
cmp
cmc
mov
pusha
pushl
and
bt
test
clc
cmc
add
push
push
lea
jmp
xchg
sahf
cmpsl
cmp
lcall
lahf
adc
orl
fstpt
push
mov
stos
or
in
je
inc
psllw
sbb
ja
pop
xor
cli
and
test
add
movsl
int3
cltd
inc
push
insl
fdivrs
pop
ret
xchg
arpl
in
pushf
adc
sub
fbstp
and
shlb
cs
int3
rol
fsubl
iret
add
lea
jae
test
pushf
stc
add
mov
mov
jmp
xor
mov
cmp
call
push
mov
mov
dec
xor
push
ret
xchg
je
cmpsb
or
jnp
adc
jle
out
push
sub
lret
or
mov
cmp
sar
stos
das
pop
inc
clc
dec
ljmp
test
scas
scas
xchg
in
insl
aas
aam
movl
pusha
or
out
mov
cmp
scas
cmp
dec
mov
fldcw
and
ja
shl
adc
sub
cmp
setge
call
xchg
xor
aaa
pop
into
inc
das
bound
out
popa
into
jge
sbb
mov
xchg
sub
pop
mov
cmpsl
in
cltd
and
push
push
push
sbb
xor
xchg
bound
shl
sub
fldt
mov
adc
mov
push
arpl
sahf
aad
cmp
xchg
xorb
adc
xor
rcll
add
jg
test
ficoml
xor
inc
stos
adc
out
push
in
daa
inc
push
pop
test
push
xchg
fwait
and
loopne
jl
fisubrl
dec
sbb
sti
pop
loop
int3
adc
pushf
and
js
loope
inc
hlt
out
test
into
inc
lock
cltd
add
imull
xor
stos
cmp
cmpsb
or
sub
push
dec
dec
punpckhdq
test
insb
add
mov
mov
push
mov
add
in
lock
lret
push
mov
mov
imul
mov
adcl
roll
jmp
and
les
scas
cmp
pushf
test
cmp
call
xlat
gs
cmp
fmull
mov
rorb
imul
lods
cmp
jne
jmp
push
mov
pop
push
rcrb
enter
outsl
cld
icebp
insb
std
leave
pop
nop
mov
mov
clc
insl
imul
out
aam
xchg
aaa
xor
loopne
xchg
sub
les
pusha
repnz
scas
nop
je
ror
jl
mov
dec
call
jmp
pushf
pusha
lea
jbe
pusha
adc
sub
inc
xchg
mov
lea
or
sbb
stc
mov
shl
rol
add
btc
shr
xor
call
pusha
pusha
pushf
stos
pushf
mov
pushf
lea
jmp
cmp
js
sub
dec
sti
es
pop
cmc
and
xorl
rclb
or
push
mov
xchg
jp
repnz
lahf
test
fnsave
mov
mov
jb
out
push
mov
cld
and
ret
mov
js
inc
pop
jo
cmpsl
out
inc
pop
xchg
xchg
and
popa
xor
je
mov
adc
jl
shrb
dec
aam
repnz
call
ds
mov
gs
test
adc
push
xchg
push
in
jle
cwtl
out
pop
mov
or
xchg
ja
pmulhuw
cltd
inc
cmc
jae
ds
mov
orb
or
dec
mov
shlb
pop
push
mov
jl
or
or
test
inc
rcr
xor
mov
in
cmp
pop
mov
out
in
pushf
imul
out
push
pop
push
pushf
mov
insl
fdiv
dec
xchg
ds
dec
subb
jns
push
xchg
in
mov
cmp
push
js
xor
inc
lahf
call
cmpsb
or
dec
jecxz
les
add
cld
sub
add
out
adc
lahf
jnp
or
jmp
pop
or
jmp
cmp
sarb
pusha
movsl
adc
inc
fptan
adc
add
ja
pop
movsl
aaa
xchg
test
ret
xor
mov
icebp
mov
aas
cmp
test
mul
flds
xchg
and
adc
jne
inc
push
les
int
sub
pop
mov
or
les
push
dec
psrlw
inc
inc
and
faddl
cmpsl
loope
xor
scas
bound
xor
out
insl
es
mov
adc
lds
and
mov
outsb
adc
inc
mov
adc
mov
jb
aam
lret
ljmp
and
ljmp
fs
jmp
push
lea
ja
pushf
dec
movb
inc
jmp
bsr
bsr
mov
shl
shl
rol
mov
cmc
pusha
mov
call
lea
je
sar
or
lea
and
mov
bts
not
movzbw
bsr
add
xor
not
mov
pusha
stc
test
mov
pusha
call
lea
ja
cmc
clc
call
push
sbb
and
test
pushf
pushf
jmp
dec
in
xchg
js
sbb
jbe
pop
mov
ret
pop
mov
pusha
mov
insb
jp
rol
movsl
arpl
in
inc
mov
push
mov
shll
loope
out
mov
adc
ljmp
lcall
mov
mov
mov
loope
push
mov
inc
adc
jge
pop
stos
sbb
jbe
pop
pushw
jb
addr16
aam
or
in
mov
stos
cmp
push
test
xchg
mov
mov
xchg
mov
jle
push
js
aaa
imul
mulb
test
inc
mov
jns
insl
xchg
popl
repnz
aad
dec
push
cmpsb
or
mov
dec
mov
jne
test
push
subl
jb
adc
shll
sbb
rol
test
dec
addb
rclb
adc
jbe
or
std
fdivl
clc
pop
push
aaa
movsl
xor
sbb
ja
aam
je
aam
gs
out
jne
sub
jb
gs
xor
cs
insb
add
fsubrl
cmp
jo
adc
and
shrl
dec
inc
inc
mov
jl
addb
mov
push
aaa
int
pop
sarl
jl
lahf
mov
inc
imul
addl
add
lods
out
icebp
call
aad
mov
jecxz
jecxz
aam
xor
xchg
insl
cmc
add
test
das
bound
adc
lea
clc
bt
add
push
pusha
dec
push
call
lea
jae
cmc
push
jmp
lods
clc
push
pusha
add
cmc
ror
cmp
bt
sub
add
jge
cmp
neg
stc
clc
shr
pusha
movb
pusha
lea
je
pusha
call
lea
jne
sbb
cmp
xadd
jmp
or
js
lock
ljmp
dec
cmp
pop
dec
clc
imul
sti
push
pop
mov
divb
push
jb
dec
pmulhuw
in
xchg
inc
or
xor
ss
into
aam
adcl
aad
mov
imul
mov
jnp
andl
pop
sub
leave
cltd
in
inc
fmul
and
inc
stos
cmp
jmp
adc
mov
mov
push
filds
cmp
jno
cltd
in
sbb
scas
adc
enter
add
add
addr16
int3
fadd
jp
mov
out
dec
cmpsb
mov
clc
jmp
in
sbb
sub
ds
sbb
fs
div
pushf
push
cwtl
stos
fldl
js
jg
mov
iret
cli
sub
or
push
push
mov
add
mov
pop
push
jmp
and
inc
mov
sar
adc
sub
loope
mov
mov
movsb
insb
push
push
ret
jg
add
mov
out
decl
adc
sti
push
pushf
xor
pusha
call
stc
jne,pt
cmp
cli
data16
push
mov
test
inc
sub
data16
push
jle
or
cmpsb
shl
dec
xchg
test
faddl
mov
jg
fcomp
sahf
adc
orb
enter
xorl
or
out
push
loope
aad
and
aas
popl
in
gs
cmpl
aam
sbb
xor
mov
fwait
add
mov
loopne
xchg
push
loop
imul
mov
jg
ret
jb
mov
data16
mov
jb
lock
fildl
xchg
inc
pop
testl
negl
rolb
cmp
orl
push
push
fwait
mov
push
xchg
or
mov
aas
cmc
pop
das
adc
in
out
pop
mov
dec
scas
sbb
inc
lret
sub
idiv
aaa
jae
test
jnp
mov
sub
inc
aaa
lahf
rcrb
ret
cmp
daa
cmp
outsl
push
push
cs
push
push
fldenv
out
jnp
icebp
mov
lods
mov
lret
push
aaa
aas
out
ds
adcl
jb
push
lahf
sub
stc
rcl
iret
add
inc
js
je
jb
arpl
jae
mov
add
sub
and
or
mov
neg
mov
stc
bt
call
call
push
cmc
sub
clc
push
clc
clc
neg
push
cld
clc
pushw
popfw
pushf
pushf
pushf
inc
push
adc
lea
pushf
movb
pushf
pushl
ret
jmp
jb
dec
inc
cmp
repz
adc
jno
popl
das
popf
cli
inc
or
lds
cmp
dec
rolb
mov
sarl
loop
cmp
jbe
daa
mov
stc
clc
jns
sbb
pandn
out
out
add
sbb
dec
mov
mov
test
jne
cltd
cmpsb
ja
fwait
push
lret
cmp
mov
xchg
sub
inc
cmp
cmp
test
or
out
pushf
stos
lahf
push
xchg
pop
xchg
jnp
sbbb
jae
addr16
mov
or
lcall
push
testb
or
shrl
inc
cltd
repnz
pop
bt
or
xchg
fbld
hlt
xlat
test
ja
shr
xchg
inc
xchg
fs
dec
mov
mov
in
stc
pop
loopne
push
enter
lods
cwtl
mov
js
dec
inc
stos
fisttps
sti
imul
xchg
sub
cmp
xor
lret
or
pushf
xor
ss
packuswb
or
imul
out
adc
pop
out
mov
sbb
cmpsb
or
mov
mov
movsl
cmp
shrl
ret
cld
inc
push
push
mov
mov
xchg
or
pusha
call
mov
lea
fisubrl
mov
out
fldl
lods
sub
sbb
das
inc
ficoms
leave
mov
movb
movl
lea
call
push
pushf
lea
jb
push
pushl
ret
mov
js
daa
push
enter
shlb
movd
inc
ljmp
pop
lock
cmp
cmpsb
idivl
mov
sub
push
sub
icebp
mov
mov
lcall
test
mov
nop
bound
stos
insb
sub
adc
fistpl
jb
sbb
inc
nop
rcrb
jg
mov
pushf
xchg
stc
and
rcrl
rcr
fistl
fisubrs
test
imul
or
pop
aas
repnz
mov
pop
fcoms
pop
jns
jl
add
ds
jle
jno
lea
mov
hlt
push
xchg
mov
sbb
test
gs
push
sahf
jb
or
pop
lds
sbb
js
inc
repnz
inc
jne
xchg
add
fwait
dec
dec
inc
imul
dec
jnp
and
dec
mov
and
iret
dec
xor
cmpsb
push
jge
mov
sub
sti
xor
add
mov
adc
cli
outsb
out
insb
xchg
xor
jle
cmpsw
push
pop
pop
add
jo
pushf
insl
mov
lret
ja
pop
cmpsb
push
imul
dec
cmp
loop
mov
jnp
testl
mov
aaa
cmpsb
cwtl
or
out
inc
iret
faddl
dec
decb
lcall
inc
mov
inc
adc
push
mov
jbe
adc
cmp
es
cmp
cwtl
inc
addr16
cmp
sub
dec
pop
orb
pop
movsl
pop
adc
fcmovnb
mov
es
pop
push
aas
mov
les
rcrb
repnz
jb
scas
es
push
xor
into
cmp
push
daa
adc
scas
jns
pop
sub
out
aaa
call
test
test
popa
xchg
jmp
data16
je
movb
test
inc
sarl
or
cwtl
shl
push
mov
dec
pusha
jns,pn
cmp
sub
test
adc
lcall
jne
push
pushf
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
mov
ljmp
xor
add
popf
adcl
sbb
jnp
cmp
xor
lret
mov
sbb
inc
xchg
in
adcl
and
lods
adc
pushf
lea
je
bswap
cmp
sub
xor
mov
bswap
btr
mov
shld
shr
rcl
mov
stc
or
pushf
pushl
lea
je
call
push
lea
jne
and
dec
btc
mov
bt
neg
cmc
sub
xor
inc
shld
test
mov
bt
clc
cmc
sub
cmc
cmc
push
test
pushl
popl
pusha
pushf
clc
cmp
jmp
dec
aad
dec
cmp
in
sbb
imul
cltd
or
pushf
lret
mov
pop
sbb
repz
imul
loope
jb
fdivrl
inc
push
jmp
push
xchg
out
sbb
shlb
fildll
or
jmp
adc
rdmsr
cmp
dec
cmp
xchg
add
adc
sub
enter
push
push
gs
pushf
fwait
push
mov
adc
hlt
cmp
dec
in
push
push
add
push
rol
bound
mov
xor
dec
lahf
lods
jl
pop
mov
dec
sub
mov
xchg
sbb
bound
mov
push
inc
jne
jno
addl
jle
mov
mov
pop
push
inc
andps
cltd
imul
inc
leave
fcmovu
mov
xchg
je
stos
mov
push
sbb
repnz
enter
adcl
dec
cmp
insb
sub
dec
in
mov
subl
inc
jmp
push
fst
mov
test
pop
sub
je
cmp
stc
mov
adcl
out
jnp
inc
dec
cmp
mov
dec
jp
sbb
js
sbb
imul
mov
scas
inc
inc
stos
lahf
imul
inc
inc
push
adc
adc
jno
flds
sbb
fldcw
int
cmpsl
imul
stos
js
and
cmp
call
aad
push
jbe
xchg
shl
xchg
xorb
repz
or
sub
sbb
out
in
rorl
test
aam
mov
in
jmp
inc
bound
push
jmp
dec
mov
mov
mov
mov
idivb
mov
jmp
mov
lea
enter
addr16
dec
cmp
jge
adc
sub
imul
adc
xor
lidtl
inc
mov
imul
mov
pushf
pushf
mov
lea
jmp
rep
not
movw
lea
mov
mov
pushf
pusha
push
lea
jmp
jmp
lea
call
pusha
pusha
mov
lea
jmp
in
ret
sbb
js
cmc
and
lods
mov
lret
test
push
aas
push
std
cli
fidivl
int
movsl
out
inc
mov
push
add
push
out
pop
xchg
popa
test
pop
adc
aas
or
add
and
movsb
adc
insl
cmp
popf
movsl
call
orl
inc
call
cmpsb
xor
adc
fdivp
or
xor
cmp
xor
sub
xchg
fdivrp
lcall
test
into
out
jmp
pop
mov
pop
add
lahf
into
ds
or
add
negb
dec
hlt
push
mov
call
ficoml
cmp
clc
add
xor
fistpll
jbe
push
xchg
iret
bound
push
imul
xchg
testl
adc
scas
roll
push
adc
outsl
fmulp
sub
dec
ds
xchg
into
scas
or
mov
xor
jp
shl
outsl
inc
cli
inc
mov
add
roll
mov
pop
inc
mov
xchg
pop
jmp
ja
mov
mov
mov
push
fnstcw
and
std
dec
fxam
mov
pop
gs
es
sbb
movsb
jb
stos
shl
pop
adc
add
rol
mov
or
test
adc
shl
mov
pusha
repnz
call
ljmp
push
sub
cmp
push
adc
sub
aaa
sbb
xlat
sbb
ret
scas
pushf
dec
push
fsts
pushf
mov
pop
mov
ret
or
xchg
sahf
test
jnp
mov
bound
xor
and
cmpsl
setge
mov
sbb
add
lock
test
into
cltd
pop
mov
jo
dec
pop
jae
dec
pusha
xor
loopne
push
pushf
test
fld1
and
mov
cmp
jmp
call
mov
lea
jne
jmp
jmp
aam
aad
bsr
mov
pushf
sub
call
clc
not
push
xchg
cmp
sub
call
mov
pushf
push
lea
jmp
mov
push
pushf
pushf
popl
push
pushf
jmp
lea
call
pusha
call
movzbw
dec
cmp
lea
pushf
pusha
movw
clc
cmp
push
pushf
lea
ja
shr
cwtl
mov
daa
or
btr
jl
lea
jmp
push
call
mov
movsbw
lea
sete
mov
call
mov
pushl
pushl
push
movw
lea
jmp
mov
push
movl
call
add
call
pushf
mov
mov
pusha
mov
movb
push
mov
lea
jmp
pushl
jmp
cmc
pushf
push
ror
inc
pushf
push
inc
sub
shld
xor
pushl
sbb
bsr
xor
movzbw
mov
clc
add
pushf
pushf
lea
jne
lea
pusha
call
lea
jne
jmp
push
xchg
push
call
bt
clc
xor
cmp
cmp
mov
call
pushf
pusha
inc
pusha
push
pushf
mov
decl
push
jmp
cmp
and
call
setb
lea
bswap
pop
push
push
lea
jmp
push
mov
push
movl
pushf
pusha
mov
call
mov
push
mov
bswap
movsbw
mov
pushf
pop
jmp
lea
pushf
pushf
pushf
mov
mov
movw
lea
jmp
seto
mov
jmp
mov
pusha
pusha
mov
mov
mov
pushf
lea
jmp
divl
pushl
jmp
call
jmp
pushf
pushf
jmp
add
movb
lea
jmp
call
jmp
pusha
push
lea
jne
bswap
pushf
shld
mov
stc
mov
stc
mov
and
cmc
test
cmc
pushf
cmp
jmp
call
sub
pusha
mov
jmp
xor
pusha
pushl
pushf
push
inc
cmp
xor
bt
push
mov
test
pushf
clc
jmp
lea
jno
popl
push
pushl
mov
pushf
lea
jmp
movzbw
bsr
shr
not
mov
pushf
pusha
add
movb
mov
pusha
pushf
lea
jmp
not
bswap
rdtsc
movsbl
mov
call
movsbl
setge
push
pushf
mov
movb
movb
push
mov
movw
call
sub
push
jmp
mov
push
lea
jmp
and
btc
pusha
call
call
pushl
mov
jmp
call
aam
mov
adc
shrd
movsbw
not
mov
push
pushf
pusha
jmp
jmp
mov
pushf
mov
push
pushf
lea
jmp
das
adc
rcl
mov
bt
stc
jmp
mov
pushl
mov
pushf
pushf
lea
jmp
pusha
movw
jmp
mov
lea
jp
jne
xor
mov
clc
jmp
mov
cmp
add
call
pushf
mov
call
jmp
clc
or
ror
mov
pusha
pusha
neg
xor
mov
movb
pushl
test
test
add
movb
mov
pushl
pushl
mov
lea
jmp
movb
pushl
mov
mov
mov
push
call
lea
lea
mov
lahf
cwtl
jmp
pushl
mov
pushf
pushl
lea
jmp
jmp
movb
mov
mov
call
stc
shr
pushf
jmp
not
ror
not
shrd
mov
test
clc
stc
bt
add
pusha
pusha
pushf
popl
call
movb
jmp
pushl
pushf
pushf
popl
push
jmp
mov
pushf
jmp
clc
xchg
mov
neg
test
mov
cmc
mov
test
sub
mov
push
push
shl
call
push
push
pushl
popl
pushf
pushf
movb
lea
jmp
push
push
jmp
mov
pusha
push
mov
push
push
call
call
pushf
lea
xchg
lea
movzbw
lea
pusha
mov
movzbw
movsbw
mov
lea
mov
movzbw
repz
popl
call
movzbw
aam
mov
setle
bsr
rcl
rcl
mov
pushf
call
push
pushf
mov
lea
jnp
pushf
pusha
push
mov
pusha
movb
jmp
lea
jne
shl
xorb
mov
pop
pusha
pushf
push
movb
lea
jmp
stc
call
xchg
cmc
movsbw
setae
movzbl
btr
clc
pushf
xor
call
pusha
pusha
call
rol
movzbl
inc
movsbw
adc
add
add
pusha
xor
setno
shld
ror
ror
add
bswap
shld
pusha
rol
not
cmp
not
add
or
mov
stc
add
sub
movzbl
movb
mov
cmp
or
call
movzww
call
pusha
lea
pushf
pusha
call
movb
pushf
mov
mov
pushf
mov
jmp
pushf
call
mov
pushf
cmp
sub
jmp
call
daa
sar
mov
neg
not
bt
call
shl
clc
stc
push
pusha
shr
pushf
or
call
sbb
aam
setp
mov
bt
test
sub
pusha
cmc
cmc
cmc
rol
movw
cmc
stc
sub
test
cmp
bt
bswap
cmc
cmc
pushf
sub
stc
bt
sub
pusha
sub
pushf
jmp
jmp
jmp
rol
shr
shr
rdtsc
pushf
cmc
jmp
pusha
jmp
stc
movzbl
pushf
xor
pushf
jmp
bswap
clc
lea
mov
sub
sbb
mov
clc
pushl
popf
pushf
lea
jmp
pushf
mov
push
pushf
lea
jmp
jmp
pushl
popf
push
mov
movl
lea
jmp
jmp
lahf
mov
push
movl
jmp
add
cmc
pusha
shrd
movw
mov
push
lea
jbe
pusha
pushf
popl
lea
je
popl
push
lea
jmp
pushf
mov
call
bt
sub
clc
bt
not
stc
test
xchg
movb
call
mov
pushf
mov
pushl
lea
jmp
stc
pushf
sub
pusha
pushl
movb
lea
jne
pushf
cmc
stc
xor
lea
jb
push
pusha
pushf
xchg
jmp
jmp
jmp
pusha
pushf
mov
pushl
mov
pushf
movb
lea
jmp
mov
movb
jmp
not
mov
movb
push
sub
clc
clc
cmc
add
push
pusha
cwtl
cmp
clc
cmc
clc
sub
movb
mov
mov
push
lea
jmp
push
mov
push
jmp
push
mov
movw
pushf
popl
call
movsbw
mov
movzbw
pushf
cld
push
mov
cld
mov
movzbw
lea
cld
pusha
lea
call
pushf
jmp
sub
cmp
and
pushf
mov
pushl
pushf
popl
jmp
pusha
cld
push
rep
clc
xchg
movzbw
mov
shl
add
sub
add
mov
jmp
pushf
movl
call
rcr
movzbl
btr
xor
adc
sub
neg
mov
rcr
not
bt
shl
sar
xor
rcl
xor
pushf
shrd
dec
movzbw
mov
clc
jmp
pushf
mov
cld
lea
push
mov
movl
cld
call
pusha
mov
pushf
mov
push
mov
lea
jmp
mov
mov
rcl
pushf
pushf
add
push
setnp
mov
call
call
stc
cmc
ror
jmp
sub
pusha
cmc
pusha
shl
pushf
call
push
call
xchg
dec
call
pushl
popl
movb
pushl
push
lea
jmp
and
mov
call
pusha
pushf
decl
pushf
lea
jns
push
lea
jne
call
sub
push
test
stc
add
push
movb
pushf
popl
push
call
call
push
pushf
popl
pushl
pushl
jmp
movl
mov
mov
pushf
lea
jmp
jmp
stc
stc
add
cmp
test
cmp
shld
pusha
pushf
jmp
mov
pusha
lea
pushf
pushf
movb
pushf
mov
pushf
push
pushf
lea
jmp
pusha
mov
pusha
mov
lea
jmp
mov
pushl
popl
pushl
push
lea
jmp
push
push
movb
mov
mov
pusha
call
pushf
pushf
mov
jmp
mov
pusha
mov
pushf
pusha
mov
lea
jmp
sub
test
clc
shr
mov
push
push
call
seta
lea
bts
sub
btr
mov
sar
lea
bsr
and
rol
ror
sub
not
mov
push
mov
pusha
bswap
not
movzbw
pushf
popl
jmp
pushl
sub
push
jmp
pushl
popl
pushf
lea
jmp
pusha
mov
not
mov
pusha
pop
lea
pop
mov
push
movw
pushl
ret
mov
cmc
sar
mov
movb
pusha
cmp
sub
add
jg
cmp
cmp
pusha
shr
call
pusha
call
neg
neg
clc
shl
mov
btr
pop
ror
pop
shr
movsbw
pop
bswap
sbb
pushf
mov
inc
pushl
popf
lea
setl
mov
mov
pushf
mov
push
mov
xchg
pop
mov
lea
jae
setge
pop
setg
lea
mov
pop
push
pusha
pushl
ret
mov
pushl
popl
mov
mov
movb
lea
jmp
pushf
push
push
mov
movl
lea
jmp
mov
pusha
mov
mov
push
push
mov
mov
movb
lea
jmp
pusha
mov
mov
jmp
mov
mov
pushf
pushf
lea
jmp
call
pushf
popl
lea
js
pushf
pushl
mov
pushl
popl
mov
lea
jmp
pushf
mov
mov
pushl
movb
lea
jmp
mov
pushf
lea
jmp
jmp
mov
pusha
pushf
pushf
lea
jmp
and
movzbl
test
xor
clc
neg
call
sub
ror
bt
jmp
shrd
rcl
mov
or
call
cmp
shl
jmp
cmp
not
test
cmp
pusha
sub
clc
sub
mov
call
movb
pushf
mov
push
pushf
pushl
ret
mov
push
pusha
mov
call
mov
mov
mov
pushf
lea
jmp
mov
clc
cmc
sub
test
clc
bt
test
shr
pusha
mov
mov
pusha
pushf
popl
movw
movb
pushl
popl
pushf
pushl
pushl
lea
jmp
pushl
pushl
popl
mov
push
lea
jmp
setge
mov
call
add
push
mov
call
clc
xor
lea
jle
pushf
push
inc
jmp
mov
pusha
bt
pusha
clc
add
mov
mov
push
lea
jmp
pushl
popf
pushf
pushl
pusha
lea
jmp
btc
pusha
notl
aaa
rcr
mov
mov
sub
cmc
mov
and
pushl
pushf
popl
call
jmp
pusha
pushl
popl
pusha
lea
jmp
xor
jmp
clc
bswap
cmc
stc
call
shr
movzbl
push
stc
add
pushf
xor
pushf
mov
movw
not
movl
add
pushf
cmc
add
test
cmp
sub
pushf
mov
inc
pushf
mov
movb
pusha
push
lea
jmp
sar
mov
add
shrd
mov
test
push
pushf
add
call
push
mov
shl
pushf
dec
not
add
jmp
mov
call
mov
dec
rol
not
mov
call
movl
pusha
pushl
jmp
pushl
popl
pushf
lea
jmp
mov
pusha
jmp
sbb
mov
movb
call
mov
movb
lea
jmp
clc
clc
add
call
pushl
popl
pushl
push
lea
jmp
cwtl
mov
call
push
pushl
mov
pushf
mov
mov
pusha
lea
jmp
call
mov
pusha
jmp
movsbw
add
adc
neg
mov
pushf
pusha
sub
movw
mov
pushf
lea
jmp
lea
jmp
and
adc
or
dec
mov
bswap
sar
shl
mov
shr
mov
stc
jbe
add
test
cmc
shld
pusha
mov
push
pushf
pushl
mov
pushf
popl
pushf
pushf
jmp
setno
mov
sub
mov
cmp
pusha
cmc
add
pusha
jmp
call
pushl
popl
pushf
lea
jmp
push
movsbw
bswap
mov
push
call
call
shl
sete
rcl
movzbl
bt
add
test
xor
jmp
jmp
mov
pusha
pushl
popl
mov
movb
pushl
pushl
lea
jmp
pushf
pushl
popl
mov
movb
push
pusha
lea
jmp
mov
mov
push
lea
jmp
jmp
dec
stc
sub
btr
movzbw
pushf
ror
movsbw
rol
shl
sub
ja
not
mov
shl
sbb
and
sar
mov
shld
clc
mov
pusha
test
add
movb
mov
movb
mov
movb
pusha
pushf
lea
jmp
push
mov
pushl
pushf
pushl
pushl
ret
push
jmp
bt
bt
not
stc
movb
call
movl
pusha
jmp
mov
pushl
mov
pushf
lea
jmp
add
add
bsr
rol
and
mov
xor
add
movsbw
ror
xor
neg
dec
mov
pusha
bt
jmp
mov
pusha
pushf
lea
jmp
lea
jne
bt
sbb
xorb
lea
pusha
mov
pusha
movw
pushf
push
lea
jmp
pusha
pusha
push
call
not
cmp
bt
movb
not
mov
call
pusha
inc
mov
bt
cmc
call
pushf
pushl
popl
mov
lea
jmp
mov
pushf
clc
push
stc
not
push
test
pusha
not
bt
movb
test
cmp
and
jmp
pushl
popl
pushf
lea
jmp
jmp
pushf
popl
pushf
push
pushl
popl
mov
movl
lea
jmp
jmp
jmp
jmp
stc
mov
rol
call
mov
mov
movb
lea
jmp
sub
cmp
add
pusha
call
pushf
pusha
mov
pushf
pushl
push
lea
jmp
mov
call
push
movb
movl
pusha
mov
pushf
movb
push
pushl
ret
bt
jmp
rdtsc
daa
cltd
mov
call
jae
shr
pushf
pusha
mov
push
pushf
popl
call
lea
je
call
movsbw
pusha
not
cmp
and
bsf
mov
stc
add
pushf
mov
movb
lea
jmp
bt
add
call
bt
cmp
cmc
sub
push
inc
call
not
bt
bt
cmp
add
pushf
add
clc
movb
cbtw
call
test
sub
mov
mov
pushl
mov
pusha
pushl
pushl
lea
jmp
push
call
xor
jmp
xchg
sets
xchg
pushl
bswap
pusha
lea
pushl
popl
pop
inc
movsbw
movl
movzbw
pusha
mov
xchg
inc
call
pushf
pushl
popl
movb
pushf
pusha
lea
jmp
mov
movsbl
pushf
bswap
mov
movzbw
pusha
lahf
movzbw
mov
call
mov
mov
pushf
lea
jmp
mov
movb
push
lea
jmp
mov
jmp
pusha
mov
pusha
jmp
call
stc
pushf
pushf
adc
mov
clc
push
add
pusha
movb
lea
jmp
jmp
cwtl
jmp
pushf
pushl
popl
movw
push
lea
jmp
push
pushf
popl
call
xchg
not
mov
mov
jmp
cmc
clc
push
cmc
pushl
popl
push
add
jmp
sub
setle
dec
sub
daa
lea
bswap
shl
bts
rol
and
movsbw
bsf
or
adc
sub
movzbw
call
cmp
lea
jo
jne
mov
rcr
not
shld
xorb
jmp
jmp
mov
pushf
call
pushl
call
mov
jmp
mov
pusha
movb
lea
jmp
push
push
xchg
jmp
pushf
cld
push
pushf
movb
pushf
rep
jmp
pushf
pushl
lea
cpuid
stc
cmc
sub
cmp
cmpl
jmp
mov
pusha
movl
pushf
lea
jmp
call
jmp
movzbl
bsr
test
stc
sub
bts
rol
ror
sbb
seto
sbb
cmp
not
rcr
call
mov
movb
jmp
mov
push
lea
jmp
pushf
mov
pushf
pushl
ret
pusha
pushl
pusha
mov
jmp
pushf
pushf
popl
jmp
not
xchg
xchg
inc
jmp
call
jmp
inc
bsr
pushf
pop
lea
movzbw
bts
sub
movzbw
mov
sar
bts
mov
clc
add
not
mov
or
and
shr
add
mov
not
pushf
inc
shl
push
ror
not
shrd
shl
shld
inc
add
rcr
jmp
push
mov
mov
push
lea
jmp
cmp
push
call
neg
pushf
mov
cmp
cmp
pusha
jmp
call
cmp
sets
and
and
mov
dec
clc
jmp
pusha
push
pushf
popl
push
pushl
popl
movw
lea
jmp
cmp
mov
bsr
mov
cmc
add
jmp
push
jmp
pushf
movl
pusha
mov
movw
pushf
push
pushf
lea
jmp
mov
pusha
mov
push
push
pushf
popl
mov
call
jmp
movl
pushl
popl
pushf
lea
jmp
pushf
xor
mov
pusha
cmp
xchg
add
ja
push
cmc
sub
push
pushl
lea
jne
cmp
xor
jmp
mov
lea
jns
pushf
movb
pushf
pushf
popl
push
call
jmp
pushf
popl
call
call
pushf
pushf
pushl
mov
jmp
add
sub
ja
popl
ja
adc
ja
sub
ja
test
add
or
ja
sbb
ja
lcall
aad
add
jecxz
ja
jecxz
ja
cmp
ja
daa
add
inc
add
inc
add
inc
add
inc
add
stos
add
pop
add
add
test
add
les
ja
adc
ja
lea
ja
flds
ja
rolb
ja
roll
ja
lret
or
ja
std
add
flds
ja
nop
add
les
ja
lret
add
xor
add
lea
ja
jno
ja
sub
ja
loope
ja
jno
ja
sub
add
jl
ja
cmpsb
add
cmpsb
add
cmpsb
add
cmpsb
add
add
roll
ja
cmp
ja
roll
ja
movsb
add
sbb
ja
add
ja
jecxz
ja
sub
ja
lret
sbb
ja
lea
ja
addl
fiaddl
add
jl
ja
sub
add
adc
ja
cmp
ja
flds
ja
std
add
test
add
addb
loop
add
cmp
ja
loope
ja
inc
add
inc
add
inc
add
inc
add
fildl
ja
or
ja
add
add
addb
in
add
mov
add
or
ja
dec
add
adc
ja
std
add
popl
ja
test
add
flds
ja
sub
add
cltd
add
mov
add
sub
add
lea
ja
les
ja
add
lea
ja
add
cmpsb
add
cmpsb
add
cmpsb
add
cmpsb
add
sub
ja
add
sub
ja
lret
in
add
addl
flds
ja
sbb
ja
loope
ja
sbb
ja
cmp
ja
rolb
ja
xor
add
inc
add
sbb
ja
flds
ja
test
add
rolb
ja
movsb
add
add
cmp
ja
adc
ja
test
add
inc
add
sbb
ja
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
iret
add
addl
fildll
add
popl
ja
lret
add
xor
add
dec
add
or
ja
loope
ja
nop
add
addb
in
add
or
ja
nop
add
cltd
add
test
add
jno
ja
flds
ja
mov
add
sbb
ja
movsb
add
jl
ja
cmpsb
add
cmpsb
add
cmpsb
add
cmpsb
add
std
add
lcall
jmp
add
fildl
ja
add
add
cltd
add
add
adc
ja
or
ja
lret
loop
add
sbb
ja
daa
add
xor
add
pop
add
add
pop
add
roll
ja
pop
add
cmp
ja
add
lcall
jecxz
add
mov
add
inc
add
inc
add
inc
add
jecxz
ja
roll
ja
mov
add
std
add
stos
add
addl
in
add
ja
inc
add
adc
ja
addb
xlat
sub
ja
cmp
ja
cmp
ja
add
cltd
add
lret
xlat
iret
add
or
ja
popl
ja
movsb
add
mov
add
dec
add
addb
flds
ja
test
add
cmpsb
add
cmpsb
add
cmpsb
add
cmpsb
add
iret
add
sbb
ja
sub
ja
iret
add
sub
add
flds
ja
dec
add
add
sbb
ja
lea
ja
adc
ja
adcl
mov
mov
mov
pushf
pushf
pushf
movb
lea
jmp
bt
cmc
add
pushf
movl
mov
push
pushf
pushf
lea
jmp
sub
shl
lahf
bsr
mov
clc
sar
mov
pushf
sub
cmp
cmc
call
sets
mov
pusha
pushf
push
lea
push
mov
mov
jmp
pushf
movzbl
pusha
sub
sub
call
pushl
pushl
call
call
jmp
