push
call
ret
ret
or
outsb
sub
jne
pop
mov
das
or
leave
dec
stos
out
jae
adc
sub
mov
xchg
lcall
es
repnz
push
scas
sbb
lret
adc
adc
je
push
stc
cmp
and
clc
repnz
push
fidivs
mov
dec
dec
xchg
movsl
mov
sbb
jle
dec
insb
aad
xchg
inc
push
push
notb
test
xchg
or
sbb
cmpsl
mov
xchg
jmp
testl
daa
push
xlat
in
icebp
sbb
xor
lcall
lds
sbbb
scas
addr16
les
ret
jmp
hlt
lret
popf
testb
repnz
subl
adc
adc
lds
xchg
cmp
mov
inc
out
rcll
cltd
scas
inc
pusha
imul
dec
ja
push
xor
stos
and
pop
stc
sti
or
sbb
inc
push
lods
add
dec
movsl
push
dec
dec
push
lret
push
outsl
xchg
xor
sub
aad
ljmp
decb
push
add
cmp
dec
cmp
ja
or
das
cmpsb
mov
mov
cwtl
test
mov
fsubrl
dec
test
scas
ficoms
movsb
inc
mov
outsl
cmpb
push
xchg
test
push
and
cmc
mov
sub
mov
pop
repnz
inc
cli
in
hlt
jge
cs
jno
jmp
cmp
adc
int
mov
cli
cld
mov
pop
jmp
adc
xchg
shlb
xor
rcll
loopne
insb
and
test
lds
rol
xchg
repnz
aam
loop
cmc
cmp
repnz
scas
xor
dec
lods
idiv
xchg
add
and
xchg
mov
int
mov
iret
add
cwtl
repnz
cltd
sub
sub
enter
inc
mov
push
push
ljmp
bswap
sbb
rcrl
in
inc
push
sahf
test
or
rclb
outsl
pop
add
dec
xor
fcomps
in
jae
mov
sbb
cmpsb
dec
pop
arpl
xchg
adc
scas
out
ja
add
inc
xchg
sbb
sub
movsb
or
xor
sub
or
push
mov
in
mov
mov
jp
inc
jp
pop
push
jns
push
fldenv
loope
xor
insl
inc
insb
lods
and
outsl
lret
pop
cmc
jmp
aaa
push
fcoml
out
cmp
add
loope
sbb
and
inc
shl
cmp
inc
inc
out
sub
adc
sub
and
mov
adc
enter
push
mov
push
insb
pop
sbb
cmp
sbb
loop
dec
fs
lds
mov
imul
stos
xor
aas
sbb
insl
test
ss
or
pop
jb
cld
xchg
cmc
pop
insb
fsubs
xchg
lea
adc
cmp
aad
mov
call
imul
and
movl
es
cs
fnstcw
jae
mov
jl
adc
dec
in
enter
pusha
adc
inc
jo
mov
mov
clc
adcl
les
xsaves
daa
roll
cmpsl
test
sahf
mov
add
es
outsb
fstps
cmpsl
push
lock
or
shrl
pop
fwait
sbb
dec
xchg
outsl
outsl
cmp
mov
or
mov
out
mov
fwait
lcall
sbb
mov
and
mov
add
dec
jg
je
mov
test
mov
dec
in
ds
call
mov
fldl
daa
cmp
fs
push
pop
sub
sbb
push
clc
outsl
enter
test
iret
ds
insl
xchg
jns
iret
shrb
inc
ja
std
pop
andl
ret
adc
outsb
fs
push
in
and
sub
push
adcb
cmp
jne
push
out
or
aam
mov
dec
les
cs
push
push
scas
test
scas
int3
mov
fadds
xor
and
push
std
aam
scas
stos
dec
push
sahf
or
jnp
sub
adc
push
mov
cmpsb
jo
cmp
cs
popa
stos
sbb
cltd
es
push
jbe
fwait
dec
repz
lret
mov
inc
or
cmp
test
addr16
add
inc
cmc
out
adc
std
test
push
xor
sbb
push
cmp
mov
adcl
xchg
adc
mov
cltd
mulb
dec
jecxz
insb
imul
push
lret
imul
push
push
add
aas
add
loopne
test
pop
inc
stos
and
sbb
lock
mov
pop
out
pop
mov
iret
lds
imul
jns
aad
add
or
or
icebp
out
fidivrl
mov
mov
xlat
push
les
rcrb
pop
arpl
aas
incl
pop
imul
or
outsb
sbb
push
ret
add
cld
xchg
stc
test
push
sarl
jp
jne
pop
cmc
mov
mov
xchg
lea
psubusw
out
loopne
add
arpl
out
push
gs
mov
stos
shrb
out
lahf
iret
clc
pop
xor
gs
popf
pop
jmp
mov
and
and
sarb
adc
mov
movb
jns
insb
lods
pop
jbe,pt
dec
inc
sbb
push
scas
jno
adc
jp
mov
mov
andl
xor
push
std
lcall
cmp
gs
leave
mov
xchg
sahf
pop
adc
jno
xchg
call
ficompl
in
and
sbb
cld
fnstenv
push
movsb
ficoml
mov
mov
xchg
adc
jle
les
cmp
cli
int3
sbb
movsb
mov
mov
fs
orb
and
movl
test
cld
dec
loope
xor
jae
push
jo
test
xchg
or
lret
adc
sbb
xchg
sub
mov
rcll
jg
iret
adc
xor
push
inc
inc
mov
inc
ret
mov
cmp
pop
push
sbb
inc
adc
cmp
cmp
mov
test
and
jb
add
lcall
imul
sbb
mov
cmp
loopne
not
and
imul
lret
xor
mov
les
out
dec
insl
xor
daa
jmp
pusha
sbb
rcrl
inc
adc
cltd
add
pop
clc
dec
ret
insl
mov
and
jl
xor
fprem
gs
sarl
arpl
pushl
outsb
fdiv
aad
in
arpl
mov
bound
pop
lods
sub
jae
mov
cs
out
xchg
lock
movsb
inc
xchg
imul
pop
aam
mov
jne
adc
push
xor
jne
je
bound
dec
pop
inc
jnp
rclb
and
ror
aaa
rcrl
movsb
ds
push
mov
nop
cmp
jo,pt
push
loope
jne
mov
out
movsl
mov
lods
outsb
add
inc
push
mov
decl
xchg
mov
xchg
fstl
mov
data16
stos
cmpsl
push
fdivs
mov
js
stos
pushf
enter
or
std
out
data16
and
out
aad
xchg
push
mov
or
or
xor
push
mov
shlb
sti
sbb
shll
addr16
pop
adc
or
pop
xchg
mov
and
dec
ffree
mull
push
sbb
sarb
xchg
xchg
pop
or
mov
sub
shrl
mov
icebp
nop
cwtl
sbb
sub
sbb
pop
int3
or
push
xor
mov
pop
dec
xchg
cmpsl
popa
test
stc
mov
lea
out
insl
add
inc
push
mov
shll
cmp
pop
pop
stc
sub
stc
add
shr
clc
push
jecxz
jmp
jbe
xor
pop
rcrb
inc
sbb
shl
xchg
data16
add
xchg
adc
das
mov
loope
push
cmp
mov
inc
jne
xor
sub
push
fs
sar
jle
fsubrs
push
push
sbb
or
pop
lret
movsb
int
andb
cli
fidivrs
popa
daa
inc
push
pop
idivb
out
lock
push
fs
mov
scas
dec
dec
enter
jmp
mov
mov
insb
shll
mov
mov
lret
inc
jb
fsubrs
int3
inc
mov
movl
and
pop
sub
and
adc
mov
in
ret
icebp
jne
add
cmpsb
jmp
cmp
mov
js
out
mov
xor
into
movsb
dec
fadd
inc
push
mov
fs
stos
enter
jp
loop
dec
adc
lods
fwait
int
mov
fdivl
mov
imul
test
sub
inc
mov
divps
adc
bound
dec
pusha
sti
cwtl
adc
xor
push
xchg
xor
fs
call
xchg
pop
mov
les
push
in
leave
or
sbb
and
int
sbb
sti
gs
addr16
jmp
mov
in
mov
or
out
and
outsb
inc
xor
dec
mov
cli
nop
xlat
test
bound
nop
and
out
jmp
fisubrs
popf
inc
cmp
jbe
jg
sar
pop
lret
xchg
clc
popa
adc
push
sbb
sub
sbb
movsl
repz
xor
jge
dec
xchg
fldcw
xchg
push
call
outsl
jo
mov
lock
nop
jp
popa
aad
lea
out
pop
negl
add
lahf
movsl
daa
lods
ret
mov
mov
jne
cmpsl
dec
sub
scas
adc
sahf
ret
inc
out
stc
test
fsubrp
lcall
adc
push
test
addr16
loope
ss
addr16
xchg
add
sub
cli
mov
out
das
call
call
or
xor
mov
push
ss
pusha
mov
adc
out
xchg
in
jl
mov
jb
push
cmp
mov
fnstenv
cmp
pop
push
imul
lods
sub
xchg
mov
or
and
dec
adc
cli
movsb
and
sahf
hlt
mov
ret
test
and
cmp
lds
inc
pop
bndldx
xor
sbb
or
pop
add
pop
js
cmpsl
mov
xchg
mov
shr
sub
pop
and
sbb
insb
mov
push
popf
imul
enter
sbbb
fmul
in
pushf
and
xchg
lds
out
in
mov
sub
xchg
jg
push
add
shl
add
jns
pusha
xlat
adc
cmp
das
inc
rcrb
sub
xchg
testl
bound
cmp
jb
inc
outsb
mov
xorl
gs
mov
xchg
ja
xor
inc
mov
lret
lcall
inc
aam
dec
add
inc
or
or
jo
jno
pop
sub
inc
mov
pushf
pushf
adc
inc
lods
and
xchg
push
dec
add
shr
mov
push
and
mov
inc
insl
xor
fs
or
fstpl
add
adc
xor
scas
mov
sub
loopne
pushl
inc
pop
sub
mov
and
das
sti
mov
fwait
or
mov
push
aas
sbbb
push
lcall
iret
ja
rolb
sbb
xchg
jp
packssdw
in
jge
aad
mov
fdivrs
cltd
push
insb
sub
pop
mov
lods
mov
outsb
cmp
fcmovbe
fstl
dec
rorl
mov
test
fcomps
push
aad
test
pop
fs
loop
maskmovq
idivl
and
inc
pop
jbe
sub
lock
pop
dec
jg
pop
hlt
lret
ret
repz
cmp
mov
mov
xchg
stc
lahf
cmpsl
jnp
pusha
rclb
pop
push
pcmpeqd
negl
arpl
js
movsl
jle
enter
xor
mov
lret
inc
ret
sub
incb
loopne
pop
iret
out
hlt
outsb
mov
sbb
ja
pop
shlb
fsubrl
mov
pop
push
cwtl
xor
pop
gs
decb
imul
inc
cmp
and
mov
cltd
loope
das
sub
xchg
fsubp
mov
inc
push
xchg
fldcw
mov
mov
loop
push
call
add
adc
aas
pushf
lods
mov
mov
pop
mov
mov
and
sahf
mov
and
loop
adc
pushf
out
pop
data16
fistpl
mov
inc
ret
jg
fimuls
lcall
mov
rclb
jmp
aam
adc
xchg
jecxz
fbstp
jecxz
test
movsb
negl
cmp
ja
add
aaa
imul
xchg
mov
aad
xor
fcmovbe
cmp
divl
aam
push
test
icebp
addr16
jg
xor
sub
sbb
out
mov
cltd
add
aas
fcmovnb
sbb
cs
cmpsl
rorb
jmp
out
call
leave
fstpt
loop
stc
mov
and
enter
pop
sub
rclb
inc
clc
xchg
mov
dec
insb
jb
mov
mov
in
shlb
mov
push
xor
testl
jmp
and
cmp
inc
andl
adc
adc
cwtl
mov
sahf
and
xor
push
push
movsb
cltd
mov
jp
lea
jne
ljmp
push
xor
pop
mov
lods
je
repz
aas
jb
mov
lahf
dec
popf
mov
scas
sub
sbbl
mov
fwait
cmp
repnz
cmp
popf
sbb
inc
push
mov
dec
dec
imul
scas
lcall
xchg
or
jg
mov
movsb
pop
lret
ret
push
jo
fmuls
and
xor
push
fsubrp
popa
sbb
cltd
add
fcoml
fimuls
sbb
int3
push
or
inc
mov
dec
aaa
adc
cmp
push
pop
jmp
sub
push
cmp
cmc
mov
pop
and
pop
fdiv
cltd
test
mov
push
xchg
daa
push
cld
or
movsb
popa
xchg
mov
sub
sub
rcll
std
pop
lahf
shll
sbb
aas
and
inc
mov
push
cwtl
mov
rorl
in
push
push
loope
stc
ficompl
movlps
in
mov
lret
sbb
lret
loope
mov
lahf
ret
push
pop
sub
aaa
test
mov
mov
add
jle
xchg
dec
mov
orb
adc
dec
inc
popf
pusha
jb
push
rorb
mov
fstps
and
sbb
scas
cmp
jno
jae
inc
stc
std
lds
sbb
dec
push
bnd
test
sbb
push
xchg
mov
pop
xchg
jbe
into
dec
xor
cmpsl
dec
hlt
push
ror
cmpsl
shl
addl
mov
or
imul
movsb
dec
adc
push
adc
mull
icebp
icebp
inc
xlat
rorb
ja
pushf
add
pop
std
pop
les
mov
mov
movsl
and
xlat
jnp
clc
fnstenv
scas
shrb
xchg
jae
sub
cmp
push
dec
scas
adc
imul
inc
in
push
and
jmp
loop
int
jns
test
dec
add
pmaddwd
into
push
and
mov
fnstcw
jmp
cmpsb
dec
ret
popf
repz
push
xlat
pop
lods
mov
enter
fldcw
and
ret
cmpsl
std
pop
jge
rol
jnp
xor
lahf
mov
xchg
mov
fistpl
sub
xchg
in
mov
or
push
call
add
push
adc
mov
jb
cmp
stos
mov
adc
pop
test
add
aad
mov
mov
mov
inc
leave
xor
mov
add
fwait
iret
ret
cs
push
inc
int
or
loopne
add
test
inc
in
fimuls
shlb
es
in
mov
in
xchg
add
xchg
dec
orb
push
add
push
jae
cmpsb
adc
leave
and
imul
in
nop
decl
dec
pop
bound
or
mov
sub
imul
adc
in
xchg
pop
push
out
icebp
inc
dec
inc
sbb
js
mov
ljmp
call
add
popa
push
mov
dec
repz
scas
xor
push
ljmp
inc
push
jnp
int
js
int
pop
sub
call
imul
jle
jne
jge
mov
sub
faddl
fs
in
sub
cmc
jb
or
jb
sbbl
pop
mov
cmp
in
sbb
xor
add
add
jge
leave
arpl
push
or
inc
rcrb
shlb
out
lea
rcll
fdivrp
lahf
pop
pop
in
andb
lea
xchg
adc
and
jbe
sub
add
mov
mov
mov
mov
mov
cmp
out
push
mul
cmp
xor
int3
and
jmp
xchg
dec
mov
and
cmp
aad
push
xadd
mov
bound
ja
dec
lds
aad
mov
jno
psubusw
add
or
xor
pop
out
lret
aaa
mov
or
pushf
out
data16
mov
mov
ljmp
fsubrs
and
cmpsl
ja
int
dec
xchg
adc
test
fldenv
mov
scas
test
xor
jmp
xchg
push
mov
xchg
dec
pushf
in
xchg
adc
cmp
les
push
in
sub
daa
lret
xchg
push
xor
sbb
adc
inc
pop
sbb
jge
bound
lret
data16
xchg
in
jne
pop
movsb
inc
xchg
jmp
sub
sbb
scas
popf
pop
lcall
cmp
scas
out
leave
aad
testb
std
inc
pop
and
mov
in
cmp
fistpl
adc
fstpt
popf
int
mov
cmpsl
stos
mov
push
iret
add
pop
aas
push
lea
xlat
aam
sbbl
repz
gs
add
and
adcb
nop
fisttpll
sbbb
xlat
popf
imul
sub
mov
mov
and
xchg
xchg
dec
push
or
loopne
xchg
mov
mov
mov
sbb
daa
mov
popf
sub
outsl
mov
xchg
mov
push
and
mov
dec
leave
add
test
aaa
insb
lea
repnz
cmp
or
fcmovbe
mov
dec
nop
or
mov
push
cltd
push
stc
inc
add
loop
lahf
es
push
inc
pop
mov
roll
add
sbb
int3
or
in
and
push
in
sbb
pushf
into
hlt
enter
cmp
xor
stos
sbb
imul
sub
cld
mov
iret
fdiv
pushf
xor
fimuls
xlat
movsl
inc
movsb
icebp
inc
adc
push
cltd
dec
cltd
mov
flds
and
pusha
inc
or
test
ljmp
add
add
sbb
cmpsb
int3
or
sar
xchg
mov
push
or
adc
push
jb
shrl
push
mov
jbe
clc
int
jle
dec
mov
adc
clc
bswap
jmp
sbb
sub
add
dec
int
jg
cmp
xlat
andb
stos
mov
add
mov
and
int
scas
or
pop
inc
cmpsb
and
cmp
lods
jnp
jmp
repnz
xchg
jecxz
cmp
into
cmpl
sub
aas
inc
cwtl
xchg
sti
xchg
cmp
jbe
and
mov
cmc
outsl
or
cmc
orb
sbb
arpl
out
and
add
push
xchg
aam
jns
movsb
xor
jns
lods
jae
outsb
push
xchg
daa
xlat
test
inc
or
jns
repz
push
mov
fmul
pusha
sub
mov
mov
out
out
add
or
add
xchg
negb
lock
pop
sbb
fsubs
fisttps
ret
sbb
ret
jne
cmc
sbbb
int3
sbbl
jbe
loopne
call
jmp
sub
xchg
mov
cli
pop
flds
jb
pop
dec
xchg
addl
xchg
and
xorb
pop
cmpsb
subb
lcall
inc
fnstcw
push
movsl
and
negl
std
mov
dec
adcb
fisubrs
or
loopne
outsl
std
lret
xchg
jge
sub
icebp
lea
add
lcall
faddp
out
xchg
mov
mov
jmp
push
lods
ret
into
add
jbe
loopne
pop
sub
xchg
jns
rorl
fsubr
jb
jg
fidivl
jp
xchg
rcr
pop
or
xchg
mov
pop
or
data16
popf
faddl
dec
xor
ja
sub
mov
xor
pop
clc
mov
inc
dec
mov
cld
push
pop
sarb
dec
stc
push
sub
push
xchg
dec
inc
stos
stos
and
daa
ffree
inc
mov
sub
test
push
ret
cli
iret
xor
outsw
sbbb
fldlg2
inc
sbb
xor
fstpt
ret
jl
sbb
add
cmp
movsb
add
popa
sti
mov
test
jb
push
dec
popl
adc
loopne
bound
inc
cmpsl
push
bound
ror
stc
cmp
dec
inc
iret
sub
fldcw
ret
cli
pushf
stos
std
cmpsl
jo
push
mov
arpl
push
xchg
mov
fsubrp
scas
xor
aad
mov
hlt
or
sub
shlb
cmpsb
ja
out
stos
cmp
mov
out
loop
out
shl
pop
leave
bound
insb
push
cli
or
mov
daa
cmp
nop
movhps
hlt
cmpsb
ja
outsb
mov
mov
xor
lahf
add
popf
push
jmp
lcall
mov
jl
sti
push
shll
mov
xchg
sbb
lahf
pop
xchg
test
jl
mov
shrl
inc
adc
xor
ljmp
fwait
xor
xor
inc
cmp
jle
mov
notl
leave
mov
jb
dec
in
pop
mov
or
mov
sbb
dec
inc
add
fists
lret
out
mov
or
arpl
sbb
and
addb
stc
or
pop
aam
test
mov
xchg
hlt
fucomp
cld
xchg
or
out
es
xchg
dec
jle
lret
rorl
into
iret
std
jbe
xchg
mov
insb
mov
adc
cmpb
mov
jge
lahf
popl
mov
add
sub
movb
into
mov
sbb
addb
leave
pop
iret
fistpl
xchg
pop
inc
xor
sub
push
out
addr16
fists
je
xchg
xor
lahf
jo
jbe
pop
lahf
push
mov
add
mov
xchg
es
icebp
dec
xchg
insl
mov
ss
push
add
sub
xchg
jge
jge
shrl
or
mov
enter
push
ficomps
lods
fisubrs
fs
addr16
or
clc
sti
cmp
ja
imul
mov
and
mov
into
jmp
test
test
insb
sub
test
pop
das
inc
mov
lcall
das
or
pop
shll
sub
arpl
ret
or
adc
sub
dec
xor
xchg
and
add
dec
mov
or
int
jne
mov
into
pop
test
mov
in
mov
cld
push
cmp
int
jbe
mov
lea
or
stos
aam
jnp
out
mov
cmpsb
je
or
add
sti
xor
pop
xchg
cs
clc
dec
es
mov
dec
mov
pop
fnstenv
aad
adc
jg
insl
pop
cld
add
in
rclb
cmp
pop
sahf
shrb
rcrl
pushf
pop
cmp
ja
out
and
inc
sub
push
cmp
sbb
mov
sar
push
mov
ror
movsl
rorb
push
inc
repnz
movsl
jno
and
sbb
pusha
in
lock
inc
sub
pop
push
frstor
sbb
out
scas
inc
pop
test
fldt
sti
in
imul
mov
in
inc
push
ljmp
test
outsb
clc
mov
inc
in
pusha
mov
cmc
xlat
cmpsb
loop
mov
cmpsl
mov
mov
pop
sti
mov
push
fildll
je
and
dec
mov
xlat
out
or
cmp
sbb
lret
pminsw
pushf
int
pop
cmp
stc
idivb
shl
xor
cmp
xlat
out
xchg
inc
leave
sub
add
outsl
cs
fnstenv
imul
mov
pop
js
aas
shrl
adc
push
int
jle
enter
push
mov
cmpsl
lock
notl
mov
jg
and
jb
test
xchg
adc
jo
jge
sub
ljmp
pop
push
subl
push
std
out
jae
xor
int
test
or
leave
pop
je
pop
push
xlat
xchg
gs
inc
rdpmc
lock
jnp
jle
inc
rcrb
xor
push
fiadds
jno
nop
pop
jle
roll
loop
es
push
mov
adcl
push
cltd
push
arpl
mov
arpl
add
dec
dec
sbb
andl
push
jo
pop
add
cmpb
adcb
loope
mov
sub
add
dec
jae
cmp
faddl
adc
loopne
sbb
outsl
adc
int3
rorb
scas
or
adcb
xchg
pusha
and
mov
divb
cmp
pop
and
ljmp
leave
push
rcr
or
into
fisubl
je
into
adc
sub
aam
mov
in
jle
hlt
mov
ja
pop
hlt
jle
xchg
xchg
sbb
popf
insb
mov
pop
hlt
inc
cmpsl
or
sahf
mov
ss
dec
push
in
mov
and
fmul
loopne
sti
add
rcll
jns
dec
xor
mov
and
lods
jae
mov
and
imul
cli
lock
in
or
pop
push
jb
jecxz,pn
movsb
jmp
loope
adc
jl
loop
lods
cmp
mov
mov
jnp
lods
push
movsb
js
in
cmp
mov
scas
push
pop
movsl
xchg
pop
adc
pop
push
xor
adc
mov
xchg
ljmp
fmull
mov
sbb
mov
jle
and
dec
jge
je
and
ss
jmp
decl
lds
xor
mov
jle
jns
push
mov
cmp
and
imul
pop
xchg
lods
bound
or
daa
jecxz
pop
pop
insb
sbb
repnz
sbb
cmpsb
cld
sarl
pop
test
ret
shlb
orl
xor
insb
xchg
pandn
xchg
loopne
mov
shll
fisubs
adc
loopne
dec
sarb
icebp
ja
push
pop
imul
in
or
dec
jle
and
inc
es
cmp
insl
dec
andb
rclb
cld
pop
outsl
lods
aam
mov
xchg
lcall
pop
pop
dec
loope
fnstenv
dec
addl
pop
sbb
mov
xchg
inc
add
imull
es
mov
adc
cs
or
inc
in
sbbb
cmp
lahf
jbe
jno
inc
jp
jnp
pusha
and
dec
mov
push
negl
mov
dec
call
dec
xor
or
push
test
out
out
repnz
mov
mov
scas
dec
cmp
js
sub
subl
cmpsb
divps
jl
es
sbbl
shlb
lret
scas
test
ljmp
dec
setne
cmpb
jg
pop
lods
into
inc
cli
push
fdivl
jae
shr
rcll
jne
repz
aaa
xchg
mov
rsqrtps
leave
je
jmp
mov
pop
push
mov
mov
adc
leave
xchg
adcb
std
inc
rclb
int
testl
push
jo
lods
xchg
sub
jnp
mov
movsb
adc
sub
sahf
testb
push
lret
movsb
dec
cmc
xor
push
jle
mov
add
hlt
ds
cltd
push
xor
mov
jno
jns
stos
push
enter
in
xor
xchg
inc
pop
mov
lahf
std
inc
jmp
test
test
out
push
inc
mov
dec
cmp
xchg
mov
clc
add
push
loop
or
sbb
xor
mov
mov
dec
dec
jmp
push
hlt
int3
mov
or
add
pop
push
test
pop
ljmp
lock
loop
aas
cmp
out
icebp
cld
push
sbb
sbb
inc
or
adc
cwtl
fdivrl
jnp
xchg
push
mov
push
lcall
scas
lods
jb
jmp
mov
mov
mov
insl
test
sub
sbb
fmul
call
lahf
jp
and
xchg
adc
dec
sbb
fidivs
sarl
fpatan
out
add
out
mov
ljmp
lret
dec
adc
sahf
jmp
ffree
cs
aas
mov
in
inc
pop
cmp
mov
jae
mov
and
cmp
inc
roll
ja
push
mov
call
lds
neg
mov
repnz
sar
cs
inc
lret
cld
xchg
mov
sarl
or
enter
decb
repnz
scas
enter
xor
jb
xor
out
pusha
popa
push
pop
xor
push
adc
cs
ljmp
enter
push
jbe
das
aas
pop
stos
out
dec
cmpsb
jnp
lcall
sbb
jmp
incl
aad
call
negl
and
loopne
xor
inc
mov
iret
jb
fnsave
int3
or
cld
mov
xor
add
std
jg
imul
or
dec
dec
cs
xchg
add
aad
popa
jmp
cld
addr16
inc
daa
sbb
or
and
cld
mull
fcom
loope
inc
aad
iret
in
mov
cld
mov
pop
jno
daa
lret
sub
movsl
inc
outsb
repnz
xor
arpl
roll
mov
mov
mov
dec
sub
add
jecxz
cmp
pxor
repz
mov
dec
sbb
icebp
mov
cmp
mov
ret
mov
jne
lock
dec
ret
xchg
adc
out
xchg
sub
sbb
push
aam
fstps
mov
aad
ss
rclb
pop
adc
outsl
xchg
mov
pop
xor
int
jb,pn
add
aad
mov
cmp
jae
test
dec
lret
out
sarb
mov
xchg
cmpsl
add
jae
mov
xchg
repz
mull
jb
out
pop
out
xor
pop
fldenv
dec
mov
add
adc
fbld
dec
xor
int
incb
pop
push
in
pop
xchg
adc
mov
mov
lods
cltd
mov
pop
mov
cmp
jmp
icebp
es
in
ja
push
push
jp
pop
test
mov
cmc
xlat
xchg
fwait
cmp
pop
sbb
shr
pop
rcr
or
lds
adc
and
cmp
inc
addb
pop
movsl
leave
icebp
nop
not
add
or
fisubrl
cmpsl
stos
jne
call
ret
xchg
and
out
into
std
add
cmpsb
scas
lret
cwtl
dec
cmpsl
push
out
test
cmp
push
inc
movsl
dec
jne
xor
inc
loopne
shlb
cmpsb
sub
jns
add
test
inc
pusha
mov
enter
ja
xor
idiv
pop
sub
pminub
add
sbb
xchg
movsb
dec
repnz
mov
rol
xchg
nop
jne
inc
sti
dec
shll
loope
pusha
sub
lods
push
push
cmp
cltd
movsl
mov
stc
push
mov
sti
cmc
xlat
jo
push
dec
movb
int
cmp
add
pop
or
sbb
mov
ss
jp
out
int
cmp
xchg
jno
icebp
pop
jno
mov
inc
and
inc
lcall
dec
sahf
test
loopne
jno
mov
cmp
das
push
mov
dec
rolb
or
enter
je
sbb
movq
fwait
pop
xor
adc
into
das
out
dec
rcrl
pop
mov
les
loop
add
xor
mov
imul
aaa
mov
xchg
mov
pushf
adc
in
adc
loop
adc
les
loope
mov
push
ret
dec
lods
nop
arpl
scas
test
jl
ss
stc
cli
cmpsb
pushl
inc
and
sbb
inc
incb
pop
repz
pop
sbb
xor
jns
repz
sbb
sub
pop
rcr
repnz
mov
in
or
sub
mov
in
mov
or
mov
inc
xor
addl
fidivs
fldl
jg
jb
push
push
arpl
jle
es
or
mov
sub
jp
xor
sbb
xchg
mov
lret
in
incl
fs
mov
add
sahf
pop
mov
sbb
lds
xchg
divl
stos
jle
jno
and
pushf
inc
insb
xchg
fiaddl
xor
cmp
sub
in
dec
cmp
call
int
fs
jmp
mov
pop
xor
dec
in
lock
ljmp
xchg
repz
fnstcw
adc
mov
pop
pop
cmp
xchg
sar
push
mov
rorl
push
push
add
push
jnp
loopne
fists
dec
icebp
ljmp
sahf
cs
dec
or
insl
mov
cwtl
adc
xor
in
clc
xchg
subl
cmpsb
clc
stos
xchg
adcl
mov
add
mov
outsl
xchg
shrl
pop
cli
mov
shrb
dec
pop
cwtl
push
cli
test
and
test
push
pop
xchg
dec
xor
inc
jg
mov
add
jae
or
push
mov
adc
test
pop
jle
sbb
fldenv
ja
dec
inc
mov
xchg
or
clc
push
cli
popf
pop
xor
inc
mov
xorb
xor
fwait
mov
and
hlt
icebp
stos
jge
dec
jne
lods
and
pusha
dec
push
call
inc
dec
xor
loop
mov
mov
push
adc
pop
mov
lret
aam
cld
sbb
sahf
sbb
addr16
movzwl
cltd
popa
pop
es
push
dec
xor
cmp
xchg
bound
pusha
xor
push
jnp
aas
mov
xchg
test
mov
jl
inc
xor
daa
cmc
insl
xchg
test
dec
or
and
inc
das
lcall
cmpsl
jns
loop
mov
in
jle
jnp
mov
dec
inc
jnp
iret
push
cmp
cmp
push
divb
je
push
cltd
dec
leave
dec
sub
adc
cmp
loopne
repnz
fmuls
lea
out
ja
cmp
xchg
pop
and
or
andb
xchg
pop
mov
or
xor
inc
add
bound
scas
das
xchg
push
cmc
outsl
cmp
sbb
aam
lret
cwtl
adcb
inc
nop
adc
std
gs
jae
and
lret
fimull
mov
jmp
sub
test
adc
or
stos
jecxz
ljmp
mov
fisubs
xor
push
push
push
sub
mov
adc
imul
rorl
mov
xchg
outsl
daa
sbb
cmpsb
call
lret
enter
cli
mov
mov
and
mov
xchg
ss
fcompl
jno
lret
or
xor
data16
ljmp
mov
or
fistpl
scas
lret
popf
not
ret
out
push
aas
inc
iret
ret
mov
xor
das
out
mov
cld
pop
push
inc
adcl
lock
jno,pn
xchg
push
cli
and
sbb
jbe
push
into
and
pop
sbb
push
sbbb
pop
push
add
lret
call
sbb
push
pop
inc
push
sar
mov
in
sbb
or
fxch
icebp
ss
bound
adc
add
push
sbb
inc
mov
ljmp
mov
test
or
jp
lds
pop
adc
stos
hlt
test
mov
pop
sub
pop
daa
or
mov
jmp
xlat
imul
stos
cli
or
popa
in
xchg
sbbb
and
ljmp
pushf
aas
sub
lods
lcall
and
add
jbe
int
pop
xor
add
sbb
sahf
xchg
pop
cwtl
scas
pop
ficoms
and
rcrb
ja
push
and
mov
in
adc
lcall
mov
daa
xor
cmp
dec
push
xchg
es
mov
push
inc
es
roll
mov
aam
cld
adc
ss
shr
mov
pop
clc
mov
sub
out
repnz
adc
sub
cmp
mov
xor
jg
xor
cli
outsl
mov
gs
lds
cmp
adc
dec
cmp
lods
mov
inc
popa
into
aam
popa
jns
lods
lret
mov
lods
je
mov
mov
lea
andb
popa
mov
add
sbb
sub
xor
cmc
repz
sahf
ret
scas
mov
or
scas
cld
nop
pop
jno
mov
cmp
fnstsw
aaa
xchg
cmp
fidivrl
adc
cmp
xchg
pop
popa
popl
add
sub
xor
jg
fsubs
xchg
cld
outsb
jge
push
push
xor
movsl
mov
sbb
pop
and
lahf
ja
icebp
push
jne
inc
movsl
jno,pn
xchg
jecxz
add
cmp
fcmovnb
idiv
pop
lret
mov
dec
cmpl
cmpsb
orl
mov
push
pushf
sarb
and
fs
in
push
and
addr16
inc
cmp
int
mov
xor
out
add
pop
pop
and
push
adc
pop
jo
sub
sbb
adc
sbb
add
rol
shl
test
xchg
loopne
inc
adc
jb
sub
jo
xchg
mov
pop
cs
jl
jae
insl
push
push
mov
mov
popa
lcall
repz
fsts
dec
adc
inc
add
add
and
stos
inc
xor
mov
in
lods
xchg
adc
push
cmp
cmpsb
call
cmpsl
jno
mov
ss
mov
sbb
sub
jmp
test
adc
jge
mov
fs
xor
test
mov
pop
jne
std
cmp
insb
jno
in
js
dec
jnp
js
loop
out
push
cmc
adc
inc
lods
xor
jge
fadds
into
cmp
je
ffreep
imul
pusha
and
xchg
rcr
or
ja
mov
push
gs
mov
lods
lea
enter
sub
pop
loopne
pushf
lahf
jle
rcpps
mov
jg
cmp
test
enter
adc
push
jns
out
out
js
and
jge
pop
mov
test
cmpb
add
jb
and
sbb
cld
pop
inc
data16
sahf
dec
mov
xchg
pop
imul
insl
xchg
stos
inc
dec
nop
les
iret
imul
jge
mov
adc
mov
pop
jb
fsubr
adcb
mov
movsb
dec
xchg
push
ss
sbb
adc
fwait
jno
or
lcall
push
push
inc
sar
cmp
jns
iret
mov
dec
imul
imul
push
setge
enter
add
inc
int
pop
int
mov
xor
dec
nop
bound
adcl
push
icebp
mov
lahf
jl
ret
enter
push
insb
dec
loope
or
enter
jns
lahf
aaa
cmp
jge
cmp
sbb
in
movsl
xchg
aas
jne
cmp
shrl
jge
sahf
cli
and
cmpb
pop
stc
or
mov
outsb
adc
cmc
sbb
int3
inc
jge
dec
mov
in
les
cs
pop
sub
loopne
xchg
outsb
add
pop
mov
mov
popa
cmpsl
adc
xor
jmp
push
mov
pop
les
cmp
mov
xor
outsl
pop
repz
outsl
jl
sub
mov
das
int3
sub
xchg
in
test
repnz
sbb
stos
jo
in
mov
pop
sarl
addb
cmpb
dec
push
pop
stos
mov
lret
xor
cmp
mov
dec
cmp
out
jno
addr16
mov
sbbb
pop
movsl
js
loop
setl
clc
and
add
es
push
or
mov
and
jp
dec
mov
xchg
cld
idivl
mov
pop
xchg
inc
pop
rcll
leave
xchg
out
inc
cli
mov
lds
xor
xchg
pop
push
lea
cld
je
and
jle
cmp
leave
outsb
push
sbb
jno
in
pushf
cmpb
fistl
in
fadds
xchg
icebp
push
ret
xor
std
mov
test
xchg
movsb
cld
xor
cmp
stos
xlat
fldenv
loopne
xlat
jge
dec
hlt
lret
adc
add
xor
push
je
mov
movsl
jno
rorb
cwtl
mov
test
jecxz
imul
sub
cld
cltd
std
xchg
xchg
cmpsb
dec
punpckhwd
stos
pop
out
mov
out
scas
pop
ret
mov
ljmp
cltd
lret
inc
mov
mov
push
xor
stos
fdivs
fs
out
push
gs
xchg
mov
adc
mov
or
fcomps
jecxz
mov
lock
jb
jnp
aaa
les
mov
pop
imul
cld
cmc
and
xchg
gs
jp
pop
xor
mov
js
xchg
int
imul
pushf
and
mov
or
push
xor
sarb
rolb
cmp
cmp
pop
clc
mov
mov
nop
mov
jb
and
mov
jae
and
jg
stos
mov
push
xchg
mov
mov
xchg
imul
dec
xchg
mov
push
xlat
sub
or
out
int3
or
arpl
fcomps
aam
pop
fwait
adc
sar
mov
pop
adc
in
adc
adc
dec
jno
dec
inc
mov
mov
mov
out
shll
mov
or
mov
push
push
jb
shll
mov
inc
mov
xor
sbb
pop
mov
and
pop
sbb
pusha
xor
push
arpl
test
mov
sub
repnz
stos
sub
xchg
sub
aad
inc
sbb
dec
mov
enter
aaa
out
mov
adc
mov
out
int
push
sub
adc
fldl
in
xorl
rcl
mov
xchg
xor
push
lret
in
int3
jne
jmp
or
das
stc
ror
ds
lock
sbb
xchg
sub
xor
sub
lret
fists
adc
lock
inc
push
jge
pop
pop
les
adc
or
cmp
inc
pop
mov
rolb
int3
jp
xchg
add
or
xchg
sahf
loop
xlat
mov
fidivl
sbb
push
lds
push
or
xor
add
mov
aas
cmc
cmp
pushf
pop
xor
aam
clc
es
lea
mov
add
cli
mov
xchg
mov
dec
and
js
xchg
sub
push
lahf
mov
nop
add
call
imul
add
out
mov
js
mov
daa
scas
sarl
mov
pop
xor
rorb
cmp
xor
xor
stos
addb
imul
mov
out
movsl
in
pop
scas
imul
outsb
mov
and
lock
pop
xchg
add
xchg
loop
icebp
mov
add
out
jo
lcall
xor
xchg
cwtl
call
js
lea
xchg
add
dec
cmp
stos
fwait
xchg
push
lea
cs
mov
pop
rcll
jecxz
insl
xchg
inc
pusha
dec
pop
mov
call
xchg
fs
push
add
dec
xchg
fstpl
mov
mov
xor
cmp
pop
jns
stos
add
mov
jns
dec
xchg
jbe
cmp
ljmp
hlt
or
out
into
gs
fidivrl
gs
jo
mov
sub
ret
loope
mov
dec
jo
add
mov
arpl
ret
loope
add
mov
xor
ret
add
pop
data16
leave
adc
cmp
fsubrl
xchg
xor
xchg
push
fabs
inc
mov
enter
sub
inc
call
sub
into
cwtl
cld
es
call
stos
imul
lods
and
out
push
xchg
xchg
and
pop
sbb
and
adc
pop
adc
jp
mov
loop
repz
xchg
fbstp
pop
shrb
mov
xchg
mov
jb
das
sbb
xor
mov
inc
fldcw
sahf
mov
rclb
lret
in
scas
addl
pop
mov
sbb
lea
test
loopne
cmp
loope
ficoml
imul
ret
sub
jbe
inc
adcl
cwtl
push
test
mov
rcl
ja
xchg
int
outsl
repz
mov
ds
gs
inc
mov
pop
pop
sub
jne
mov
mov
clc
ljmp
ret
imul
fisubs
add
mov
mov
outsl
inc
rolb
lcall
mov
inc
jle
je
insl
fwait
outsl
js
out
mov
call
pop
jmp
push
pop
xchg
sbbb
xchg
push
jg
jae
pop
ja
xchg
test
sbb
jp
sti
mov
mov
mov
adc
mov
adc
inc
repnz
cs
and
adc
insl
loop
outsb
push
mov
xchg
das
fiaddl
jnp
push
xchg
mov
and
jns
popa
pop
xchg
jae
fdivl
repnz
lret
mov
push
enter
xor
push
pusha
and
xor
push
add
push
push
in
fwait
sub
repz
sbb
ljmp
call
cmpsb
mov
sahf
xchg
popa
das
add
aas
out
aam
pop
ret
sqrtps
jmp
mov
push
inc
stc
mov
push
inc
cwtl
ljmp
scas
cmp
idivb
inc
xchg
sti
test
xchg
fisttpl
add
sbb
cli
jnp
xchg
sub
and
cmp
mov
fwait
ret
test
xorl
mull
mov
xchg
mov
in
and
orl
ret
das
cltd
fnstcw
aad
mov
dec
jae
scas
lret
or
nop
mov
xor
push
int3
stc
inc
sahf
cmpsb
pop
mov
dec
xchg
insb
jno
cli
lcall
ds
cmp
dec
in
sbbb
jns
xchg
sti
pop
and
int3
adc
jnp
sbb
lods
pop
lret
lods
pop
xchg
push
cmp
add
push
adc
inc
sub
cmp
xor
bound
sarb
mov
repnz
icebp
mov
mov
or
in
inc
mov
sub
scas
xor
outsl
loope
lods
push
repnz
shl
ss
adc
push
jp
mov
fwait
repnz
ja
dec
jl
mov
inc
loopne
xor
lods
push
pop
shrl
movsl
lds
repz
push
mov
add
fwait
xchg
push
mov
lock
dec
lods
mov
inc
enter
xor
popf
outsb
pop
jo
int3
fimuls
arpl
and
je
mov
cs
inc
lea
jno
add
mov
sbb
popf
push
lock
sub
fldl
and
jg
mov
and
push
push
xchg
ret
cli
arpl
dec
xor
nop/reserved
arpl
xchg
cli
xor
pushf
adc
popf
dec
scas
add
or
mov
sbb
mov
movsb
popa
sbb
mov
insl
adc
sub
push
push
inc
outsl
imul
xor
out
inc
mov
and
cmp
lods
cld
movsb
aaa
jnp
fcoml
scas
sub
outsl
fwait
cld
xchg
or
das
divl
sub
cld
icebp
movsb
add
xchg
mov
cwtl
jnp
lcall
loopne
stc
xchg
xchg
in
cli
lret
jge
dec
aas
inc
lock
inc
js
cmpsb
push
rorb
mov
dec
aaa
xor
andl
sbb
pusha
cli
popf
lret
dec
rorl
pusha
pop
sub
xchg
sbb
xchg
jmp
cmp
out
adc
jno
testl
fidivrl
sbb
mov
sub
adc
aad
repz
mov
jle
dec
jle
fwait
jp
mov
mov
sbb
pop
pop
and
aad
pop
aad
add
dec
push
adc
jo
cmc
xor
sbb
pop
sub
dec
cmp
cmc
addl
dec
cmpl
adc
lea
pop
sub
imulb
test
and
sbb
lcall
sbb
je
pop
jae
gs
jne
cmp
sub
insl
jle
mov
stos
test
hlt
js
push
out
sahf
or
mov
movsb
lods
aam
xor
push
rolb
lds
mov
push
in
out
fdiv
stos
fs
outsb
in
lea
xchg
push
aaa
push
pop
xchg
and
jmp
lds
jmp
out
std
sbb
xchg
aam
or
movb
mov
addb
adc
cmp
lahf
mov
fwait
mov
ljmp
ret
fidivrs
fwait
cmp
push
pop
add
xor
dec
jb
icebp
ror
mov
xchg
clc
add
es
mov
jnp
fisubs
sbb
and
adc
jns
and
push
addr16
test
sbb
jbe
push
je
mov
jb
cmp
subl
sahf
xchg
jns
or
add
ret
inc
sbb
adc
in
sbb
cltd
hlt
or
ret
sub
call
jo
enter
xlat
mov
fwait
jmp
cmp
mov
lret
mov
out
aas
mov
cltd
push
movsl
inc
mov
push
xchg
repz
pusha
sub
xorl
mov
push
and
jno
sar
les
imul
mov
add
fs
in
imul
push
add
mov
pop
mov
movsb
movsl
or
mov
pushl
and
pushf
es
lcall
pop
push
lea
scas
and
adc
popa
adc
leave
dec
inc
xor
mov
pop
mov
lods
fsubrs
xchg
pop
xchg
fnsave
in
out
add
pop
inc
mov
push
and
mov
jl
int3
addr16
jmp
negl
push
sub
sub
push
rclb
or
xor
in
jb
std
adc
xchg
fstpl
dec
cmp
scas
hlt
scas
add
xchg
pop
mov
push
es
adc
mov
push
lds
pop
xchg
repz
inc
jne
ja
xchg
jne
push
cmp
popa
mov
adc
sbb
lock
lret
mov
addr16
movsl
fiaddl
jbe
jnp
sbb
jo
cltd
and
xchg
dec
dec
testl
mov
popa
mov
add
dec
push
adc
inc
mov
cmpl
insb
cmp
ss
jl
xchg
shrl
xchg
xor
xchg
inc
mov
in
mov
ljmp
lock
sbb
jmp
push
sahf
mov
fs
int
out
mov
imul
les
pop
sbb
sub
fildl
repz
and
shrb
xchg
icebp
xchg
stos
xor
jb
jg
rclb
mov
push
mov
cltd
std
push
pop
aam
imul
dec
out
fnstenv
jae
inc
mov
fcomip
call
xor
cmpsl
fmul
xor
xchg
or
mov
int
fisttps
inc
out
cltd
and
pushf
faddl
daa
inc
or
leave
shlb
push
ret
movsb
mov
jmp
push
push
scas
mov
punpckhdq
xchg
or
shrl
add
loopne
sbb
fistps
insl
dec
rorb
mov
xor
out
pop
popa
add
inc
shlb
sbb
cmp
mov
ret
lods
and
pusha
outsb
inc
mov
aam
icebp
insb
xor
mov
or
test
adc
aas
push
jge
jnp
lahf
pop
fiadds
and
inc
mov
inc
mov
cmp
mov
aaa
and
jmp
jp
pop
ljmp
add
adc
dec
sub
pop
mov
rcrb
sub
in
scas
pop
into
jae
test
in
ret
sti
xchg
popa
roll
enter
out
xchg
xlat
insl
jl
pop
jne
pop
fdivrs
mov
daa
xor
xchg
data16
shlb
stos
xor
data16
mov
or
dec
aam
stos
xor
cmc
stc
es
mov
sbb
scas
orl
xchg
ljmp
ljmp
ja
add
loop
movl
mov
outsl
ret
sahf
test
pop
sub
push
int
loopne
cmpsb
mov
cmpsl
mov
in
push
stc
mov
cld
mov
ljmp
std
cld
adc
popf
jle
ja
int3
fwait
stos
fsubrp
dec
xchg
sub
mov
cmpsl
jp
mov
push
add
mov
out
and
and
jns
pusha
call
test
enter
popf
lret
andl
mov
and
xchg
cli
add
inc
mov
cltd
inc
mov
imul
xchg
or
test
cmp
sbb
mov
xor
sub
cmp
or
out
mov
repnz
lods
mov
out
lcall
xchg
mov
pusha
jns
out
lret
dec
test
into
test
sarl
arpl
inc
xchg
dec
insl
adc
mov
xchg
lret
xor
int3
inc
mov
and
rcll
jne
fistpl
sbb
sub
sub
cli
pop
loop
das
shr
sahf
sbb
mov
or
sarb
test
mov
and
aad
xchg
xchg
arpl
testb
out
xchg
jge
pusha
lods
dec
gs
in
adc
icebp
sti
mov
inc
int3
lahf
or
aam
mov
push
das
pop
andb
lret
mov
xchg
mov
outsl
push
mov
fldl
es
add
mov
and
jno
sti
mov
pop
cmp
je
cs
out
mov
sub
icebp
adc
repnz
or
jecxz
gs
sbb
sar
dec
add
test
mov
lea
add
pop
mov
mov
in
dec
pop
loope
pusha
scas
ficoml
inc
nop
jmp
test
push
stos
sahf
popf
ljmp
lods
push
cs
jne
scas
jae
inc
lahf
outsl
and
sub
fwait
rol
lahf
fs
ds
sub
mov
sub
ljmp
xchg
jl
dec
lods
aaa
cmc
push
fwait
daa
mov
shll
pop
testl
cmp
cld
iret
pop
pop
addl
mov
jle
sar
fmull
cmc
add
dec
in
sub
iret
xor
pop
leave
data16
in
lret
mov
jmp
mov
int
rcll
sub
enter
mov
jmp
add
xor
mov
and
pop
js
gs
mov
mov
add
push
test
mov
cmp
or
push
cltd
sub
push
hlt
sti
aad
shlb
jns
int
shl
ret
mov
test
repnz
ss
in
mov
or
cltd
mov
scas
push
add
cmpsb
repnz
cld
out
inc
fdivrs
stc
rorl
mov
jecxz
daa
insb
adc
fs
sbb
cmp
sub
jecxz
in
out
cld
mov
add
lret
adc
jecxz
and
inc
adc
int3
adc
xchg
rcrl
xlat
mov
nop
sub
in
cmp
xchg
xchg
and
daa
ja
mov
adc
dec
push
jae
push
jle
fwait
mov
divl
pop
repz
jg
xchg
call
mov
adc
lock
sbb
fidivrl
xor
cmp
hlt
popa
xchg
pop
cmp
push
or
call
pop
clc
pop
pushf
cwtl
imul
mov
or
add
negb
xchg
push
xor
arpl
xor
cmp
cwtl
dec
and
sahf
es
pusha
jb
popa
xchg
jecxz,pn
sarl
sub
push
lea
jmp
add
jg
aad
int
sbb
fidivrl
ss
cmpsl
inc
loopne
and
es
cmpb
xor
cs
jns
add
sub
test
rclb
and
faddl
pop
lea
iret
mov
stc
pop
leave
or
xor
out
push
cmp
test
cmp
jo
sbb
pop
test
in
out
nop
aas
out
jbe
hlt
xchg
kmovw
mov
mov
jbe
fwait
sub
or
inc
sbb
mov
sub
lods
idivb
jae
loop
jge
les
adc
mov
in
loope
jnp
mov
fiadds
fs
mov
push
in
call
stos
stos
movsl
or
cld
sub
ss
jle
aam
sbb
lahf
pop
ficomps
lret
lcall
shrb
inc
gs
repz
and
push
mov
sbb
dec
ljmp
mov
leavew
mov
sbb
stc
push
andl
in
and
dec
xor
orb
mov
cmp
adc
jne
cmp
outsl
pusha
pusha
jecxz
loope
xor
jns
jo
or
lock
push
mov
fnstcw
cltd
inc
and
or
jns
sub
jb
jl
push
fwait
mov
cli
sarl
mov
mov
cmpsb
mov
xchg
mov
shl
inc
adc
xchg
jnp
push
push
mov
fistps
pcmpgtb
jo
aas
xchg
mov
lahf
in
out
adcb
loopne
rorb
cmc
loope
sub
jecxz
aam
sahf
stos
and
and
and
xor
xchg
sbb
dec
lretw
addr16
popa
fildl
xchg
movsb
adc
jle
mov
ffreep
fcmove
sti
jg
ret
mov
inc
clc
push
cmp
out
sub
nop
ss
in
aad
and
fists
add
loop
mov
rolb
shl
test
xor
adc
add
push
mov
jmp
into
or
aaa
mov
adc
mov
xor
cwtl
xchg
push
andw
xchg
pusha
xor
mov
lcall
jmp
in
lret
cs
lods
pop
mov
cmp
xchg
mov
jae,pt
mov
in
adc
fnsave
mov
or
mov
sbb
mov
les
dec
fmull
cmp
dec
pop
clc
sub
xchg
add
mov
lock
test
rolb
push
mov
cli
aad
adc
lahf
je
outsb
in
sbb
mov
lods
jnp
jmp
mov
push
inc
xor
xor
pop
cmc
mov
xchg
stc
sbb
repz
lret
loop
cltd
or
lret
arpl
cmp
fistpll
mov
int3
xchg
jl
vcvtpd2psy
test
xchg
into
popa
movsb
aam
adc
mov
clc
mov
dec
xchg
mov
fidivrs
icebp
push
add
mov
outsl
sub
sarb
mov
mov
xor
mov
leave
lahf
dec
lret
mov
push
lret
mov
mov
jmp
and
pop
nop
jb
mov
mov
cmc
push
cmpsb
rcrb
xor
ret
enter
dec
sarl
mov
or
sub
jb
pop
insb
ja
mov
or
or
nop
cmpsl
pcmpgtw
in
mov
jo
sbb
xchg
insl
stc
lds
cltd
xchg
int
jge
jbe
outsb
and
sub
cmc
jmp
mov
test
or
pop
and
adc
and
ja
cltd
sub
push
pushf
int
dec
push
lret
insb
jo
dec
into
xor
int3
sub
or
push
push
adc
in
mov
lcall
arpl
lds
int3
mov
outsb
add
in
mov
xor
and
fistps
inc
aas
leave
rorb
popl
sarl
xchg
andl
and
mov
test
pop
pop
sahf
cwtl
xchg
cmp
ds
int3
mov
cld
mov
or
xchg
inc
int3
lahf
jecxz
or
xchg
xchg
cs
cmp
and
xchg
pusha
out
fwait
and
mov
mov
repz
cmp
push
inc
pop
pop
mov
mov
jns
add
xor
jge
pushaw
xchg
jmp
int3
dec
test
adc
add
cmp
testl
repz
xchg
lods
out
xchg
sub
jg
adc
add
scas
insl
mov
mov
fidivrl
in
or
loop
mov
int3
push
dec
jne
mov
loope
mov
das
dec
mov
mov
sbbb
in
and
cmp
pop
and
loop
out
jl
inc
push
and
fidivrs
cmp
int
leave
and
fs
mov
jg
xor
mov
add
fdivl
jnp
popf
in
pushf
ret
push
push
add
adc
push
aaa
inc
lods
mov
add
sub
xchg
sahf
sti
fsubrs
sub
enter
ret
stos
scas
mov
gs
adc
popa
cmp
pop
xlat
fidivrs
out
jo
pop
push
add
push
fs
sub
outsl
movsb
nop
or
clc
je
mov
jb
and
icebp
fsubl
fs
nop
int
mov
pop
pusha
push
sub
mov
fwait
aaa
es
push
cmp
nop
jno
and
cmp
mul
or
pop
cmp
inc
ret
addb
out
and
rorb
sarb
notl
pop
out
xlat
in
sbb
jmp
mov
and
cmp
repnz
and
fs
xor
xor
push
xor
sbb
add
sub
aam
jmp
fsubrp
pop
mov
add
xor
push
inc
cltd
les
cmpsl
inc
push
pop
jp
mov
add
add
mov
ret
scas
ret
stos
repz
pop
test
loopne
jge
lods
mov
sbb
xlat
in
mov
push
and
into
clc
mov
les
rcl
lahf
push
sbb
imul
jle
xlat
daa
cmp
lods
lea
nop
loope
add
or
aaa
push
or
sbb
cld
out
leave
aas
mulb
xchg
add
std
shlb
addr16
add
add
xchg
js
inc
jge
cmpsb
test
inc
mov
inc
xor
xor
xchg
push
mov
xchg
pusha
in
sahf
dec
mov
sahf
lea
dec
inc
xchg
int
jns
int
mov
int
imul
ds
or
jne
int
and
pop
fs
jl
pushf
popf
cmp
repz
jne
mov
insl
jge
sub
cmp
shl
sarl
jnp
cmp
cld
mov
test
enter
xchg
stos
rclb
cmc
repz
insl
mov
cwtl
mov
sar
dec
dec
inc
cmpsl
rcrb
or
and
ja
xor
jnp
in
adc
jp
arpl
mov
fsubrs
dec
adc
in
stos
jnp
sbb
or
mov
pop
pop
cmp
cmp
cs
cmp
xchg
frstor
loopne
sarl
shll
inc
rclb
mov
in
xchg
cltd
aam
mov
je
mov
pusha
shlb
call
lcall
adc
cwtl
sub
into
aam
dec
mov
adcl
or
cmpsl
ljmp
fucomi
insb
sahf
jg
insl
push
xchg
push
push
in
inc
rcrl
cmp
nop
icebp
cmp
inc
in
mov
mull
jb
mull
sarb
test
dec
arpl
inc
sub
ds
pop
fstpl
mov
lahf
out
lret
insb
jo
test
scas
pusha
cmpb
mov
aam
fdivrs
jns
aaa
stc
push
scas
sti
imul
out
sbb
inc
dec
xor
pusha
fdivs
inc
mov
jns
cmpsb
popa
mov
add
iret
add
rcrl
adc
fsubs
scas
add
sub
mov
sbb
sbb
push
clc
mov
ss
ficoms
jb
rcrl
lahf
sbbl
jae
and
nop
mov
lock
orb
jno
mov
or
mov
lret
lahf
sub
jge
rorl
adc
adc
jg
jmp
inc
dec
inc
sbb
jo
imul
dec
dec
mov
pop
icebp
js
repz
mov
shll
and
cmp
xchg
pushf
mov
mov
push
add
inc
nop
sbb
pop
sub
and
jg
or
sub
cs
gs
pushw
push
inc
fwait
popa
sbb
ret
cmp
out
cwtl
jns
mov
dec
ljmp
imul
xchg
shll
cmpsb
out
rcrl
dec
popa
je
xchg
pop
xlat
mov
and
inc
jge
xlat
imul
mov
subl
push
movsb
jecxz
ss
fidivs
jae
loop
data16
clc
pusha
addl
inc
xor
movb
mov
popa
or
fldenv
sub
addr16
int
push
sar
push
inc
movsl
dec
jecxz
aam
mov
xor
rcr
fwait
mov
xchg
cmp
mov
push
xlat
adc
sub
stc
adc
or
clc
push
fists
mov
mov
std
fisttpl
lods
mov
leave
inc
jns
test
and
dec
jecxz
adcb
sub
cmp
stos
int3
pop
add
in
cs
sbb
repnz
cmp
lsl
pop
add
pop
inc
pushf
or
js
adc
cmc
jns
cli
add
sti
fsubr
adc
movsl
push
xor
mov
aam
jno
out
mov
es
sbb
cwtl
sbb
test
mov
jg
movsb
or
or
std
xchg
notb
addr16
out
xor
aaa
out
xor
push
shl
aam
add
add
lea
std
jo
push
loop
mov
sub
lcall
add
and
jg
or
and
inc
gs
mov
mov
jecxz
mov
stos
cmpl
ret
pop
add
inc
pop
inc
lcall
std
sub
xchg
push
mov
cmpb
sbbb
push
pop
outsb
fisubrl
fisttps
push
das
shrb
xor
mov
sahf
orl
lret
pop
mov
push
pop
sbb
xchg
xor
imul
scas
das
adc
dec
cmpsb
int
sahf
subl
aam
cwtl
mov
pushl
test
pop
icebp
push
aas
call
outsb
cli
xchg
fcompl
mov
nop
inc
xchg
insl
and
out
out
xor
ficoml
bswap
sub
negb
fwait
xor
outsb
enter
loope
xchg
subb
dec
push
rolb
das
leave
stos
xchg
inc
cmp
xchg
cs
jae
dec
popf
cmp
cmp
sar
adcb
lds
xchg
ss
push
aaa
lcall
jecxz
inc
js
mov
daa
add
xorl
fbstp
test
jbe
jae
arpl
cli
add
inc
jae
sbb
pop
add
or
daa
sub
loop
aas
mov
add
imul
pop
mov
mov
movsl
lods
inc
mov
xchg
outsb
cmpsl
push
jo
jp
inc
jns
lea
je
push
xchg
sbb
cmpsb
dec
push
xor
aad
lcall
xchg
into
jne
dec
aas
pop
cmpsb
or
jle
call
daa
test
js,pn
or
dec
in
aaa
jp
mov
mov
add
or
shr
push
pop
out
pop
add
ret
pop
fs
xor
stos
inc
push
xchg
mov
pop
pop
test
mov
insl
cmpsb
inc
test
inc
and
imul
inc
push
jmp
add
pop
out
lahf
xor
clc
movsb
add
stos
and
mov
dec
cmp
icebp
jnp
dec
mov
inc
jle
mov
push
pushf
sar
inc
inc
ret
les
hlt
sub
ds
jp
sub
push
subb
add
xor
dec
dec
decb
jbe
fcomp
jns
out
sbb
loopne
iret
lahf
xor
out
int3
jbe
xor
incl
js
or
dec
or
or
aam
adc
addb
mov
mov
imull
jo
push
cmpsb
lock
mov
jo
cmp
aas
ficompl
push
sbb
or
gs
cmp
stos
cmp
xor
xor
mov
daa
and
rol
jns
adc
dec
jne
mov
icebp
pop
adc
cmpb
jp
xchg
out
call
jno
in
shll
je
call
loope,pt
jmp
ja
dec
fbstp
iret
push
push
and
shr
push
adc
cmp
test
push
ret
mov
lds
pop
adc
inc
aam
cmp
pop
pop
out
in
out
movsl
pop
add
push
in
push
sarl
test
xchg
loop
into
mov
insl
cmpsb
add
mov
fldt
cli
inc
jns
push
xchg
sbb
jp
loopne
ljmp
out
xchg
mov
xchg
mov
cmp
sti
testl
pop
mov
inc
or
cs
adc
in
in
mov
daa
cmp
test
lock
mov
pusha
mov
ds
xor
adc
pop
fistps
mov
xorb
out
xchg
repz
pop
add
into
push
mov
cmp
cmp
dec
std
xchg
jnp
daa
pop
sbb
mov
or
or
movsb
dec
xchg
cmp
inc
pusha
fcmovb
out
pop
xor
mov
inc
leave
jmp
pop
adc
fisubs
je
pop
cmp
lea
jp
mov
adc
add
sub
inc
jmp
shlb
in
pop
and
aam
jbe
imul
or
int
and
stos
cmp
imul
or
out
fwait
and
jp
pop
dec
inc
in
aad
add
mov
in
pop
cli
or
inc
mov
pop
leave
inc
pop
adc
cmp
or
das
repz
int3
mov
lods
mov
enter
jmp
ss
cmpb
and
subl
pop
ret
or
lock
aas
adc
jae
pop
xchg
mov
fs
test
add
dec
or
xchg
std
push
divb
and
lret
mov
fidivrl
cli
adc
movsl
mov
sldt
inc
test
mov
daa
negb
fisubrl
cmp
ljmp
enter
and
mov
js
cmp
xor
push
xchg
test
or
inc
sub
lea
sub
push
cld
sub
xor
or
xor
mov
test
lret
jg
insb
cmpl
movsb
mov
dec
mov
push
mov
pusha
and
mov
out
test
mov
jbe
loope
and
lcall
pmuludq
inc
fnsave
push
in
jecxz
add
cmp
jne
jg
sub
cli
daa
and
xchg
ss
push
inc
test
adc
sbb
movsl
pop
adc
xchg
pop
mov
push
pushf
push
je
hlt
bound
dec
scas
jb
enter
inc
xor
ja
or
ret
or
xor
mov
daa
cld
or
xchg
pusha
or
pop
cvtps2pi
jge
jg
sbb
into
dec
ss
jp
cmp
lock
stos
dec
iret
fcoms
inc
enter
or
sub
std
jp
and
fmul
les
daa
es
daa
mov
repz
and
repnz
pop
loopne
fistpll
mov
out
lahf
dec
aaa
xchg
cld
push
jp
bound
or
shl
dec
fwait
jmp
jecxz
cmp
icebp
decb
lds
cmp
sarb
sbb
loope
popa
ss
xchg
addr16
add
or
push
lods
loope
xor
aaa
and
icebp
mov
sub
scas
int3
and
add
in
js
loopne
cmp
scas
add
in
mov
fs
lock
sub
jg
outsb
xor
hlt
xlat
sbbl
into
cs
repnz
in
pop
adc
pop
rclb
xor
xchg
sbb
xchg
push
push
js
hlt
push
inc
cmp
sub
imul
divl
pop
fnstenv
xchg
adc
imul
cmp
mov
adc
jne
addr16
cmp
mov
sti
sub
gs
out
loopne
cmc
fcompl
pusha
sub
inc
mov
int3
cmp
lcall
mov
ret
in
pop
enter
rcll
cltd
push
sbb
inc
test
loop
aaa
in
push
sub
pushf
leave
mov
push
and
orl
sbb
push
bound
arpl
aam
xor
inc
inc
gs
rorb
jae
mov
cmp
gs
es
inc
dec
and
jb
mov
xor
loopne
pop
add
les
mov
cmp
in
jecxz
lds
pop
imul
and
cmc
les
repnz
aad
pop
enter
int
cmpsl
push
xchg
das
aas
int3
inc
dec
call
mul
sti
push
xor
cmc
std
subl
sarl
and
bound
inc
mov
dec
rcll
dec
lcall
or
cmp
test
mov
fnstsw
add
mov
add
stos
dec
sbb
xor
or
ljmp
cmp
les
push
xlat
push
mov
xchg
orl
pushf
mov
adc
xchg
inc
push
mov
and
test
and
mov
enter
mov
leave
xor
loope
add
test
popl
pop
std
insl
repz
or
das
xor
mov
in
xor
cltd
mov
outsb
mov
adc
addr16
ficomps
jb
jg
xchg
call
adc
scas
sub
out
adc
adcl
inc
out
xor
scas
inc
lahf
test
mov
cmc
lahf
enter
jb
mov
es
cmpsb
adc
ja
inc
push
sbb
inc
lret
mov
jge
fsubs
and
cwtl
loope
adc
jmp
test
mov
jb
outsb
dec
xchg
inc
loop
rcrl
jnp
xchg
lret
and
xchg
je
add
nop
inc
popa
ja
push
cli
in
es
stc
incb
fwait
rorl
inc
sbb
mov
inc
cwtl
fs
mov
inc
jne
fst
arpl
mov
add
jg
cmp
fs
cmc
insb
frstor
gs
into
into
mov
cmpsl
repz
or
aam
jne
in
sbb
aas
sub
mov
push
add
pop
into
fnstsw
icebp
adc
push
lods
pusha
adc
add
pop
cli
pop
cwtl
insl
xchg
adc
cmp
ljmp
lds
mov
cmp
sarl
push
cmp
popa
inc
pop
test
add
jbe
jp
repnz
inc
arpl
mov
gs
xchg
xor
je
insb
push
mov
je
xchg
adc
adc
and
test
mov
jmp
mov
cmp
jo,pn
shlb
pushf
mov
sub
jne
lahf
scas
mov
dec
sarb
popf
fisttpll
add
add
sub
push
jae
cmp
ds
sbb
movzbl
ljmp
aam
repnz
mov
int
jge
std
pop
aaa
aaa
lcall
xor
repz
add
shrl
aaa
mov
mov
insl
idivl
stc
dec
pusha
cmp
das
add
imul
loopne
imulb
cmc
or
idivb
fs
mov
dec
adc
pop
pushf
aad
or
clc
jp
test
inc
add
cmpsl
mov
cltd
lea
dec
ds
push
add
and
pop
sub
stos
push
lods
inc
xorb
mov
push
cli
mov
xor
loopne
add
xchg
gs
cmpsl
lret
jp
out
outsb
cwtl
scas
aaa
xor
mov
cltd
scas
stos
pop
int
mov
push
xchg
mov
xor
mov
das
cmp
stc
je
push
cmp
sbb
pushf
mov
add
xor
int
pop
jmp
add
dec
test
leave
cmp
push
test
repnz
mov
mov
xlat
aad
call
out
xor
jp
gs
xchg
js
xchg
ds
or
xchg
shrb
or
imul
jecxz
xor
cmc
adc
rcrl
stc
fidivl
pop
or
xlat
push
cmpb
ret
sbb
into
and
cwtl
jl
sub
shll
addr16
rorl
lahf
mov
ret
or
lock
les
lcall
or
call
dec
jle
dec
into
icebp
inc
sbb
cld
dec
jns
stc
inc
and
pop
test
lea
dec
pop
mov
loope
mov
stos
daa
xor
fnsave
sbb
imul
outsl
adc
mov
insl
fldcw
psubq
stos
inc
ds
icebp
enter
cld
and
and
mov
jle
int3
mov
sub
js
pop
or
mov
sbb
imul
adc
sub
mov
mov
mov
push
jno
imul
xor
mov
idivl
add
out
push
repnz
hlt
rclb
mov
xor
lret
in
pavgw
sbb
outsb
dec
push
bound
pop
aam
jne
jne
int
mov
jns
cmp
adc
cmp
ljmp
adc
xor
push
nop
out
xor
dec
sub
shrb
mov
mov
xchg
push
mov
aad
lods
mov
shlb
push
ja
iret
outsl
push
test
aad
inc
push
call
and
leave
cmp
shlb
lods
xor
pop
fdivrs
scas
mov
sub
mov
adc
pop
ljmp
lods
push
inc
insb
cmp
mov
cmp
shlb
cmp
insl
jecxz
sub
imul
xchg
mov
scas
iret
inc
aam
bound
pop
inc
and
jge
dec
lock
rcll
inc
dec
outsl
ss
jno
add
sub
in
xor
sbb
in
lods
lea
stos
or
cld
lret
dec
mov
mov
sbb
xor
cmp
and
pop
pop
fs
popa
xchg
js
adc
and
and
aam
loopne
mov
mov
in
sti
fisubrs
sbb
sbb
fadd
jb
cwtl
dec
inc
or
or
adc
mov
push
pusha
lea
sub
enter
cs
or
roll
out
mov
mov
inc
push
and
mov
xor
push
cmp
push
nop
jns
mov
adc
mov
sbb
fsqrt
pop
mov
mov
rorb
cli
stos
cwtl
and
js
dec
leave
daa
xor
lods
sbb
jbe
pusha
std
bound
and
sub
jno
inc
fcoms
inc
div
pop
pop
cmp
ret
sub
cmp
mov
sbb
mov
sub
add
pop
cli
push
xchg
daa
bound
xchg
push
push
jg
xchg
das
lock
jne
cmp
jo
cltd
add
mov
pop
out
test
scas
mov
jg
xchg
pushf
out
aad
xchg
pop
pop
or
jo
clc
iret
imul
adc
inc
jno
mov
stos
push
jae
pop
out
dec
mov
cmp
add
jg
insl
and
xor
xchg
adc
and
adc
jns
pop
insl
mov
push
fwait
int3
ret
mov
sub
ficomps
cmp
cli
es
pop
scas
mov
mov
and
push
xor
sti
pop
pop
dec
ret
cltd
inc
cmpsl
out
xor
pop
pop
lcall
mov
xor
or
mov
lret
aam
xor
bound
dec
pop
add
daa
jge
or
sbbl
cld
lea
call
out
push
movsl
cmc
sub
mov
add
das
ret
aam
pop
nop
mov
pop
push
adc
dec
mov
imul
sub
dec
jb
sub
cwtl
mov
add
sbb
inc
cltd
mov
in
and
sub
inc
inc
lahf
push
adc
and
xchg
mov
jns
mov
or
insl
arpl
mov
mov
cmpsl
int3
or
sbb
jecxz,pn
jno
sbb
sti
pop
push
jmp
rol
out
push
js
dec
sbb
outsl
dec
aas
outsl
cld
push
fbstp
fcmovu
iret
inc
cmp
mov
insb
fldl
dec
inc
stc
mov
pop
lods
popf
loopne
ljmp
sbb
dec
dec
pop
push
out
bound
xchg
enter
xchg
mov
dec
push
fsubrs
and
push
int3
inc
fstp
xchg
cld
mov
add
jmp
js
lock
mov
pop
and
xchg
push
mov
push
fnsave
sbb
xchg
adc
cmp
ret
call
push
sub
xor
fdivl
mov
jns
test
cmp
dec
cmpl
in
pop
je
fdiv
ficompl
dec
dec
adcl
dec
stos
adc
jge
mov
pusha
mov
int
dec
pop
add
loopne
mov
scas
inc
icebp
xor
mov
xchg
or
jmp
cmp
lods
mov
pop
add
aaa
scas
adc
ja
dec
jl
cmp
mov
ss
xchg
adc
pop
and
inc
movsb
mov
jle
mov
xchg
cmp
lds
aaa
popf
inc
outsb
lea
adc
inc
mov
cmpsb
pop
and
out
and
xchg
jnp
sbb
ds
push
and
mov
add
leave
mov
bound
inc
cmp
jl
sbb
lods
rorl
stos
int
cld
das
add
das
xor
mov
add
stc
fwait
sbb
pop
ret
mov
mov
xchg
cmpsl
test
pop
jne
xchg
jl
loope
sbb
jp
bound
inc
bound
sbb
fs
out
dec
and
mov
mov
jno
stos
fisubrl
pop
ret
aaa
paddd
sub
sti
jecxz
pop
cmpsl
mov
adc
shrl
push
insb
and
rcr
mov
imul
xchg
out
inc
inc
out
shl
enter
stos
pop
std
mov
jmp
int3
xchg
arpl
imul
popa
repnz
adc
fisubl
and
aas
lret
mov
int
pop
adc
movb
imul
inc
call
xchg
pop
push
stc
test
in
out
pop
cwtl
out
iret
sbb
mov
icebp
push
or
sti
and
addb
push
xchg
movsb
test
shll
scas
mov
dec
roll
test
inc
bound
mov
sbb
daa
bound
out
jge
stc
test
push
fldl
pushf
mov
xchg
stos
pop
les
ret
pop
shlb
pop
add
int3
dec
sub
cmc
loope
xorl
push
in
or
sbb
call
mov
cmp
test
pushl
aad
xor
xlat
and
fs
int3
scas
mov
aas
sahf
push
jb
lcall
or
xchg
fistpll
ja
push
inc
cwtl
shrb
decb
cmp
mov
jle
xchg
pop
fildl
shll
lods
popa
xor
rclb
dec
inc
xlat
mov
hlt
sub
mov
xchg
adc
adc
in
cmp
stc
pop
dec
data16
mov
loope
ret
mov
mov
aad
and
mov
aad
iret
inc
mov
jl
pop
cmc
fadds
dec
xchg
dec
inc
dec
fmulp
push
fiaddl
out
adc
test
push
sub
jp
inc
dec
cmp
mov
clc
outsb
xor
and
test
or
pop
mov
lcall
dec
stos
mov
xchg
dec
je
sub
sbb
sbb
in
add
lret
int
test
xchg
lods
imul
lret
ljmp
test
imul
sbb
popa
das
popa
jecxz
mov
imul
out
jns
dec
push
sub
xorb
cli
sahf
jg
cmp
pop
pop
sbb
fsubrl
jecxz
ret
mov
add
xchg
sub
je
fwait
lret
stos
xor
pop
inc
lret
and
adc
hlt
lods
jne
popa
mov
scas
lds
int
int3
fstpl
add
sbb
jecxz
add
out
add
push
test
lock
xor
pop
add
cmp
adc
jmp
inc
add
pop
repnz
sub
add
subl
and
xchg
mov
clc
and
arpl
mov
iret
fnsave
test
push
mov
stos
mov
dec
xchg
mov
lahf
ds
aas
sbb
ljmp
fsubrp
dec
inc
fsts
adcb
dec
lcall
cmp
pop
xor
in
xorl
clc
or
test
in
cmp
mov
or
aam
loope
lea
mov
hlt
mov
xchg
rcll
add
shll
adc
xchg
lcall
pusha
cmp
adc
aaa
int
pop
or
rcl
out
mov
inc
jge
jnp
subb
mov
rorl
imul
sbb
mov
pop
cmp
jp
testb
leave
es
je
out
out
cmpsb
jmp
fsubs
mov
jl
stc
les
cmpsl
inc
xor
sbb
mov
push
ret
cmp
loopne
int
add
cmp
cmp
sbb
leave
and
das
nop
sub
jp
inc
push
add
jle
xchg
in
pop
cmp
pop
cmp
jl
add
push
push
push
jae
sub
cmp
out
xchg
push
or
lea
inc
push
mov
pushf
or
ret
inc
and
test
repz
mov
sbb
jne
inc
push
clc
fdivl
leave
push
push
into
and
sub
rol
hlt
add
jg
in
push
lock
sub
add
cmpsl
jbe
in
out
pop
repz
sub
call
jo
fcomp
flds
push
jecxz
push
push
int
xor
popf
les
mov
jmp
out
scas
fsts
ljmp
mov
fisubs
dec
jb
outsb
mov
xchg
test
insb
ss
enter
push
adc
scas
jmp
repz
pop
sbb
sahf
cmpsl
lods
inc
dec
sbb
push
fwait
outsb
enter
push
jb
sub
and
out
aaa
outsl
sti
cmp
dec
mov
inc
out
popf
lahf
lahf
mov
in
sbb
adc
cltd
and
cmp
mov
in
adc
cmpsl
out
push
and
xchg
xchg
cmp
ret
adc
mov
mov
cwtl
lret
xchg
test
test
arpl
int3
pop
cmp
jns
push
cmp
mov
insl
or
sbb
adc
lods
sbb
imul
sti
cli
dec
xor
push
loopne
dec
mov
pop
or
xchg
dec
adc
lret
es
div
jb
in
sub
mov
testb
in
insb
cmp
and
adc
mov
cmp
dec
ds
mov
cmc
push
cmp
inc
xor
xor
bound
adc
hlt
cmp
cmp
sti
mulps
push
ficoml
fbstp
sbb
movsb
cltd
out
mov
ljmp
fildll
bound
dec
dec
out
in
mov
movsb
in
scas
jp
sarl
outsl
movsb
and
jne
jno
xorb
mov
out
in
mov
aam
call
or
addr16
in
pop
imulb
jno
mov
dec
insb
cmp
sub
iret
std
int3
mov
lahf
fs
fbstp
mov
shll
mov
movsb
negb
cmp
fdivrs
nop
iret
dec
inc
arpl
addr16
shrb
sub
cmp
jae
cmpl
orl
inc
stos
pushf
or
xchg
mov
sub
push
jbe
mov
cmp
and
lcall
cltd
jge
add
int
push
in
add
pop
enter
lret
mov
rclb
scas
sub
cmc
clc
gs
jns
jae
mov
or
dec
or
adc
ror
sub
mov
mov
push
and
mov
pop
out
das
or
aam
push
adc
adc
push
adc
into
push
outsl
xor
mov
mov
or
lods
sbb
add
and
test
ljmp
and
inc
jno
movsb
push
imul
negl
jg
loop
xchg
aaa
mov
or
lods
lret
and
xchg
and
data16
sbb
rep
lret
jae
fnstenv
test
icebp
pop
movsl
dec
xor
mov
shl
mov
inc
xchg
and
lock
outsb
sub
pop
fldt
pushf
jp
sub
cmp
hlt
into
inc
inc
nop
testb
cmp
out
xchg
es
hlt
pop
xor
xor
cmpl
fnstsw
sub
cmp
outsb
stc
jbe
sbb
cwtl
cmpsl
cmp
les
imul
scas
nop
adc
fiadds
loopne
cmp
popa
lods
loope
lds
fists
xchg
xchg
into
push
pop
add
leave
mov
repz
xlat
push
in
jge
mov
cli
and
xchg
lock
cmc
scas
jl
inc
dec
lds
popa
ret
push
mov
int
fldenv
ja
ror
sbb
mov
gs
movsl
aad
lcall
mov
pcmpeqd
fldenv
inc
xor
lret
cmp
dec
repnz
add
pop
cld
notb
shlb
jae
push
mov
mov
pop
scas
movsb
std
push
pop
cwtl
das
and
push
mov
out
dec
inc
stc
ret
mov
notl
in
inc
push
sbb
push
sub
iret
xchg
fdivs
mov
lods
mov
push
jnp
mov
pop
pop
mov
into
pop
sub
inc
fsubr
cli
leave
jo
popf
sbb
sti
movsl
ja
mov
mov
in
mov
test
ret
xor
cmp
sbb
ret
xchg
adc
jl
jo
xchg
call
in
cmc
mov
gs
les
cli
push
dec
jbe
mov
loopne
repz
pop
bound
or
loopne
hlt
fwait
lahf
les
pop
cmp
shlb
mov
fsub
push
movl
lods
push
pop
mov
sbb
stc
mov
fistps
sub
ss
push
xor
cmp
ljmp
inc
sub
in
lcall
les
pop
out
nop
cmp
push
dec
ret
and
sbb
jne
and
std
in
push
fadds
int
xor
xlat
push
jl
loopne
mov
rclb
and
je
jg
verr
rclb
mov
and
pop
out
lea
outsb
pop
mov
lds
les
and
nop
xchg
ret
adc
push
push
push
cmc
repnz
push
or
mov
mov
in
cwtl
loopne
dec
mov
sbb
fcoml
dec
sub
ljmp
xchg
push
test
pop
and
sarb
and
sbb
or
and
add
lahf
ss
lods
jmp
sbb
ss
and
push
mov
lock
nop
arpl
or
test
jo
repz
lcall
loop
sbbb
dec
adc
lods
nop
mov
mov
leave
jo
jmp
cmp
and
and
mov
sarb
rcrl
xor
mov
insb
xchg
stos
mov
cmp
rcrb
daa
lods
or
addb
popa
mov
cmp
or
lea
das
dec
cmp
clc
and
lds
inc
dec
xor
int3
add
adc
mov
pop
xabort
adc
dec
or
sub
imul
shrb
pusha
inc
adc
rolb
jb
jno
sub
scas
push
xchg
mov
outsb
test
inc
dec
mov
pop
mov
test
push
or
xor
daa
call
call
xor
inc
push
or
imul
sbbl
xchg
mov
call
cmp
jbe
push
push
neg
jl
xchg
sti
fisubrs
loop
lods
imul
bnd
pop
mov
inc
mov
mov
mov
xchg
mov
cwtl
fwait
mov
jge
call
add
sbb
xchg
mov
and
sbb
adcb
mov
outsl
paddsb
jmp
cmp
xor
mov
repz
das
ret
add
shll
outsb
push
jbe
out
add
clc
pusha
push
into
lock
and
out
icebp
lahf
rolb
rep
lods
outsb
adcl
and
int
xchg
mov
sahf
xlat
shll
fyl2xp1
lods
mov
adc
je
lret
mov
or
stc
xchg
loope
adc
xor
fcoms
inc
mov
outsb
js
or
cmpsb
pop
mov
xchg
xchg
sub
jmp
dec
jae
adc
mov
lea
push
pop
fsubl
ret
and
mov
insb
cmp
or
or
out
sub
in
test
aas
in
rcrl
sub
out
movsb
add
jnp
or
push
test
jmp
sub
jns
cmp
mov
inc
mov
test
lods
cmpsl
scas
jp
outsl
dec
add
sub
enter
push
fidivs
and
push
dec
inc
cmp
cli
pop
xchg
dec
lcall
icebp
idivb
cli
jmp
insl
nop
mov
scas
sub
imul
lock
or
sub
mov
pop
and
imul
jp
fidivrs
fldl
pop
aas
fsts
sub
cmovl
adc
cmpsl
sub
loope
dec
out
daa
rorl
inc
dec
sub
cmp
pop
jae
sub
lahf
mov
jno
jae
push
mov
arpl
or
sub
or
mov
mov
push
and
pop
xlat
inc
push
out
lea
aaa
out
lods
inc
outsb
sub
push
repz
add
mov
test
jnp
aam
aaa
xchg
or
cmp
mov
cs
imul
add
daa
adcb
mov
mov
jb
cmp
push
lahf
and
jno
cmp
mov
cld
scas
push
and
push
xchg
adc
hlt
jge
mov
cli
cmp
lret
xchg
xchg
sub
cmc
mov
jge
push
xlat
jp
lahf
mov
xchg
test
and
cli
out
aad
ljmp
cmpsl
dec
mov
xchg
rol
fistl
pop
mov
xchg
lock
cwtl
jecxz
pop
lcall
aas
mov
mov
orb
or
cmp
jmp
cmp
xor
mov
jp
adc
je
cmp
push
jno
shll
cmp
mov
int3
xor
ds
mov
repnz
jp
call
mov
adc
repz
mov
dec
ret
dec
jle
pop
cmp
pop
push
mov
xchg
xchg
sbbl
xchg
mulb
ljmp
mov
test
cmp
xchg
fistpll
push
out
cwtl
mov
sahf
hlt
xor
xor
fldcw
add
and
aad
ret
push
add
jmp
mov
dec
insl
cmp
test
pop
out
push
and
arpl
push
scas
and
adc
mov
into
mov
sahf
fistl
sbbb
mov
and
mov
insl
mov
mov
faddp
mov
push
js
xor
jle
push
clc
xor
test
jae
ds
pusha
mov
out
xchg
mov
popf
lock
lret
lcall
and
leave
mov
mov
pusha
mov
sbb
aad
push
and
or
and
jae
pusha
outsl
jg
push
lea
sbb
addl
dec
enterw
hlt
mov
sub
jb
xorb
mov
pop
aaa
fmuls
in
scas
scas
imul
pop
fildll
sbb
xlat
push
jne
scas
fcmovbe
mov
sbb
push
and
mov
mov
xor
push
jp
push
inc
sbb
push
sub
inc
mov
dec
scas
mov
inc
lds
sub
arpl
movsl
stos
push
sub
sbb
aas
xor
mov
repz
jl
fst
cwtl
mov
mov
mov
int
lea
outsl
daa
lcall
dec
mov
adc
fisubrs
pop
pusha
sub
stos
jge
mov
dec
in
lock
push
orl
inc
rcl
cmc
mov
inc
call
outsl
push
popa
jns
stos
xorb
std
lret
int3
test
inc
fucomi
sbb
test
lock
lods
pause
daa
daa
repnz
mov
imul
test
mov
dec
lret
add
rcl
sbb
lods
movsb
loope
dec
xchg
and
sub
and
fmulp
xchg
mov
cltd
mov
idivl
or
outsb
xchg
je
scas
cmp
mov
mov
cmp
andb
mov
mov
jle
wbinvd
cmp
ficoms
les
pop
fldl
or
jmp
fs
std
lock
or
mov
xor
arpl
mov
aad
pop
xor
cmp
push
xchg
loope
repnz
sub
sub
jb
pushf
arpl
jb
lahf
lea
imul
ret
dec
cli
fsubl
or
xor
insl
loope
cmp
cwtl
popa
iret
pushf
in
insb
mov
aad
cmp
push
adc
movsl
or
cwtl
pop
add
stc
sar
enter
sbb
clc
stos
sub
pushf
movb
sub
arpl
adc
mov
imul
rcrb
mov
add
loop
sbbl
add
dec
jbe
popl
clc
xchg
jns
xchg
and
test
push
jecxz
aam
adc
loopne
hlt
imul
xchg
repz
daa
pop
mov
xor
je
lds
aam
mov
mov
xchg
xlat
movsl
in
jg
inc
pop
jnp
sub
call
call
adc
ds
arpl
cmpl
sub
scas
pop
imul
dec
or
push
mov
ja
out
sub
sbb
push
push
cwtl
mov
inc
push
xchg
xchg
orb
pop
addr16
adc
xlat
je
adc
mov
adc
ret
xor
jbe
add
push
andb
call
insb
out
jbe
into
cmp
dec
push
lods
xchg
mov
cmp
cmp
sub
filds
mov
sub
push
arpl
jno
push
fisubrl
add
lret
cmpsl
mov
lahf
test
mov
jno
jge
sbb
movsb
jo
mov
enter
iret
push
stos
jb
fdivs
or
test
inc
push
push
out
popa
xchg
lock
mov
pop
mov
into
lcall
mov
or
in
shll
push
xchg
mov
nop
mov
jp
dec
sub
inc
xchg
jmp
std
lahf
jecxz
pusha
jae
push
loopne
mov
out
xor
out
nop
test
mov
jecxz
xor
xchg
in
push
pushf
mov
mov
fists
mov
rcrb
mov
inc
daa
push
nop
cmp
xchg
insb
bound
daa
adc
inc
jmp
mov
inc
into
cmc
jnp
and
xor
lds
push
mov
ret
mov
jae
xchg
out
push
pop
mov
dec
xchg
pop
lea
faddl
jecxz
pop
pop
pop
es
adc
aam
dec
push
mov
mov
xchg
cli
add
leave
cltd
mov
sti
jb
and
pop
pusha
divl
or
cmovnp
mov
ret
sbb
in
test
inc
mov
jmp
mov
inc
imul
jl
and
imul
stos
rcll
xchg
test
clc
dec
jnp
and
mov
jnp
pop
stc
dec
adcb
ja
or
pop
sti
insl
mov
xchg
cmp
sbb
aas
cmpl
jnp
aad
sahf
xchg
or
push
push
pusha
fbld
dec
out
fmuls
test
fstpl
jle
mov
pop
xchg
insb
push
xor
fisttpll
mov
jmp
sub
aad
mov
mov
mov
pop
inc
in
shl
jmp
lahf
cli
push
or
add
fnstenv
jle
sub
push
cwtl
bt
push
lcall
lock
arpl
sbb
pop
scas
jecxz
cmp
pop
adc
mov
pop
into
sbb
jnp
mov
add
in
sbb
sub
and
lock
xor
push
jo
or
hlt
mov
enter
hlt
lods
out
pop
out
xor
cmc
testb
adc
stos
jecxz
fmul
xchg
xor
sub
or
inc
sbb
fwait
jns
in
jmp
rclb
adc
ret
or
pop
push
stos
pop
fsubs
sahf
mov
sbb
rorb
sub
scas
out
xor
ds
mov
daa
cmpsb
and
fs
mov
sar
push
push
mov
and
xchg
and
test
dec
mov
pop
scas
call
js
call
adc
lea
xchg
sbb
xlat
push
dec
imul
jno
mov
scas
hlt
cmp
stos
push
fistl
leave
lcall
or
rcll
xor
xchg
decb
scas
jo
mov
jmp
ret
movsb
cmp
inc
mov
in
repz
lret
sub
fs
lahf
insb
pop
test
fbld
and
aaa
dec
lret
sarb
in
cmp
push
push
jo
push
into
vmwrite
iret
jnp
loopne
data16
aas
dec
mov
loope
in
mov
test
dec
cmp
jb
adc
cwtl
aam
scas
and
cmp
fcoml
stos
mov
rcr
mulb
lock
or
dec
sbb
or
movsb
rcrb
cs
dec
cmpsl
pop
or
dec
and
jecxz
mov
cmp
inc
in
add
inc
xor
loopne
jns
sub
out
stos
cli
mov
pop
pop
std
filds
mov
push
sub
hlt
xchg
rol
in
cmpsb
xchg
clc
insl
std
mov
fisubs
and
sbb
sbb
mov
int3
popa
pop
mov
sti
lcall
xchg
arpl
push
mov
scas
lea
es
aad
mov
pop
enter
andl
inc
mov
push
mov
cwtl
pop
jp
or
popa
fisubl
cmp
pop
das
or
dec
shll
das
cmp
push
cld
dec
inc
or
movsl
cmp
xchg
ret
rcrb
mov
xchg
dec
xchg
or
push
pop
push
inc
mov
mov
xchg
hlt
frstor
std
sbb
mov
inc
pop
orb
xchg
add
sub
aam
xchg
test
adc
inc
jp
mov
arpl
push
push
mov
pop
sbb
test
and
push
imul
xchg
adc
insb
sub
in
notb
dec
outsl
and
add
nop
loope
ds
movl
aad
lret
dec
push
jmp
hlt
inc
xchg
pushl
pusha
sub
lcall
iret
orb
jae
mov
mov
negl
push
cmp
out
jns
lds
hlt
in
sbb
push
and
push
dec
dec
cwtl
hlt
cmp
or
dec
jle
popf
xchg
xor
popf
push
out
sbb
das
shlb
push
push
pop
xchg
add
mov
or
sbb
scas
push
rorb
cmpl
mov
mov
rcrl
jb
mov
sbbb
outsb
mov
jns
jne
cmp
add
jp
test
mov
test
ds
popa
lea
idivb
sbb
push
movw
pop
cmp
pop
test
mov
nop
add
pop
stos
cmpsl
repnz
or
sub
pop
push
mov
push
rcrb
and
int3
les
aam
sbb
mov
mov
leave
sti
jmp
mov
sbb
lods
sbb
ss
lods
push
jnp
ja
cmpsb
adc
cltd
mov
cmpsb
jbe
int3
mov
rol
ret
addl
aas
outsb
pop
cmp
lds
mov
sub
shlb
test
jbe
or
pop
inc
aam
mov
and
flds
add
adc
lret
cli
sub
inc
fisttpl
xchg
lock
mov
inc
mov
daa
mov
dec
test
aaa
ds
push
call
insl
jmp
and
adc
fbstp
mov
das
lcall
gs
sarb
mov
mov
adc
sbb
dec
ja
mov
pop
or
push
mov
inc
cmc
push
je
sbbl
jb
cmp
lret
and
inc
mov
repnz
out
faddp
cmp
dec
test
enter
dec
rclb
mov
outsb
or
cmp
jle
movsb
enter
outsb
leave
mov
scas
pop
sbbl
mov
xchg
imul
cwtl
jbe
in
adc
jbe
push
loopne
fwait
jae
mov
in
adc
lret
in
push
push
push
sbb
jp
fsub
sarb
js
sbb
jns
cwtl
dec
xor
hlt
cwtl
push
inc
sbb
sub
jae
pop
xchg
out
cwtl
pop
jge
inc
cltd
jecxz
lods
lods
adc
sub
loopne
dec
clc
add
mov
xchg
dec
iret
das
add
pop
outsb
xor
mov
fcomip
xor
mov
mov
and
ja
or
jbe
add
inc
xor
cmp
pop
dec
fs
rcr
dec
or
sub
push
jecxz
add
push
das
lcall
jbe
addr16
cmp
xor
mov
and
loope
xchg
lret
dec
mov
xchg
fcomi
sbb
leave
fidivs
dec
sbb
loopne
add
sqrtps
push
pop
lret
fnstsw
pop
jmp
loopne
dec
fildl
jmp
or
adc
leave
movsb
xor
stos
xchg
test
sub
movsb
not
mov
mov
inc
stc
pop
iret
xor
xlat
rcr
push
mov
movsb
mov
ja
sarl
push
and
mov
xchg
fwait
mov
cli
xchg
mov
cmpsl
mov
sahf
cmpsb
loope
inc
lret
lods
or
jnp
fcoml
jle
ljmp
push
push
daa
pop
xorb
pushf
push
cs
scas
or
dec
cwtl
adc
test
cmp
add
xor
push
ja
push
push
movsl
adc
test
rorb
test
mov
cmpsb
jb
and
stos
dec
je
pop
mov
test
adc
dec
subl
and
enter
jl
sub
mov
xor
adcb
out
aaa
in
nop
scas
mov
mov
xor
and
jg
popa
push
fs
and
mov
lds
inc
adc
xchg
pop
and
mov
iret
lea
pop
mov
rcll
scas
xchg
ds
stos
in
xor
xor
fldt
es
imul
in
stos
push
out
and
mov
in
push
jnp
xor
jmp
cmp
add
jnp
mov
lcall
outsb
xchg
loopne
sahf
mov
js
incb
sub
sbb
or
ss
ficoms
fisttpll
xor
push
icebp
ljmp
test
fists
gs
xchg
sub
insb
jb
ljmp
sub
rclb
in
push
outsl
insb
pop
jns
ret
jo
mov
sbb
jbe
xor
jb
rorl
fisubl
fs
cmc
popa
adc
testl
repnz
push
and
cmp
pushf
or
pop
sbbb
push
bnd
jae
cmp
mov
pop
inc
jmp
negl
xchg
scas
pop
andl
fdivs
cmpsw
das
shll
mov
sub
sti
add
rcr
jg
jbe
xlat
cmp
inc
ja
adc
cmp
call
pop
push
lods
push
mov
test
aad
add
das
pop
stc
pop
ret
pop
mov
xor
or
pop
notb
notl
dec
sar
pop
push
ss
repnz
cmp
fldlg2
fbld
divl
les
pop
orl
scas
push
cs
and
bound
xchg
mov
pop
pop
mov
leave
frstor
jl
pusha
int
xor
jo
jae
pop
add
sub
pop
jae
aad
and
pop
jle
cltd
stos
lret
xor
jbe
fildl
jo
xchg
jno
dec
fwait
xchg
pop
movsb
stos
cmp
iret
jns
add
cltd
push
out
jmp
scas
inc
dec
push
loopne
jge
fimull
inc
incb
js
mov
lods
mov
pop
push
dec
xlat
scas
lret
sub
adc
mov
or
sub
jns
mov
stc
xor
cmp
shlb
ja
fstpl
je
stc
icebp
inc
sti
imul
cmp
sahf
sub
je
les
add
cmp
dec
hlt
push
bound
mov
stc
lret
je
aas
mov
add
jp
es
mov
xchg
cli
sub
sub
pusha
lods
pop
mov
mov
mov
mov
ret
xor
in
cld
pop
ds
xchg
dec
ficompl
stos
dec
popa
cmpsl
mov
je
cmp
sub
cld
adc
or
push
stos
inc
xor
outsl
add
jg
xor
dec
es
lret
subb
je
sbb
jge
dec
inc
rclb
hlt
es
pop
dec
xor
and
add
sub
pop
fs
popf
pop
jp
cwtl
sbb
outsl
stos
outsb
js
add
aas
jae
mov
hlt
jo
jle
jae
mov
xor
call
add
pop
adc
sarl
sub
jo
enter
daa
test
mov
insl
mov
iret
inc
push
adc
daa
mov
test
jbe
fisubl
adc
jmp
sub
out
fmuls
jno
mov
cwtl
mov
ja
sub
jnp
push
subb
dec
pop
mov
test
cmpsl
mov
xchg
lret
fcoms
add
out
loopne
pop
data16
shrb
fiaddl
jle
in
notl
push
inc
pop
adc
pop
add
push
xor
int
repnz
mov
test
rolb
xchg
data16
sub
icebp
cmp
les
dec
into
xchg
cmp
and
lods
je
push
dec
sahf
pop
test
sub
adc
or
xor
ljmp
lret
sub
aad
add
jae
je
out
push
xor
lcall
shrb
push
movsb
jge
xchg
sbb
mov
xor
scas
sub
fdivs
and
add
sub
push
gs
bound
test
xchg
add
fisubs
rorl
les
pop
jg
repz
js
cld
pop
pop
cmc
ss
lods
or
xor
stos
cmpsb
xchg
add
push
jae
inc
repz
pop
stc
addl
mov
sbb
add
call
pop
sub
out
fstps
popf
fisttpll
arpl
dec
aad
add
lcall
pop
enter
inc
mov
iret
dec
jns
mov
int
test
cmovns
cmp
pop
loop
ds
rorl
pop
sbbb
popf
mov
scas
or
sbb
push
dec
adc
sbb
push
jl
jmp
mov
xlat
sub
sbb
inc
out
mov
xchg
adc
sbb
xor
lock
adc
into
inc
push
out
int3
jmp
jle
mov
imul
sbb
arpl
or
leave
in
sbb
sbb
ja
mov
pop
mov
mov
inc
lret
bound
das
dec
push
cmpsl
or
insb
cmp
mov
movsl
cltd
hlt
jmp
fmuls
loop
out
notb
xchg
filds
or
push
lods
adc
or
add
adc
in
repnz
pop
pop
cmp
testl
sahf
shll
cltd
clc
nop
push
mov
add
push
sub
out
cwtl
lret
jle
and
xchg
jg
xchg
dec
mov
cmp
xor
in
mov
mov
outsb
xor
inc
popf
cli
and
pop
push
fs
cltd
xor
int
imulb
pop
insb
cwtl
xor
push
adc
sub
and
inc
dec
cmp
sbbb
ds
repnz
push
jns
js
rol
dec
jnp
insl
jo
test
sub
xchg
adc
test
mov
cs
push
add
dec
fwait
fs
adc
andl
popf
sub
jnp
call
cld
cmp
jle
sahf
pop
adc
sbb
mov
pop
jl
sbbl
and
jo
data16
out
dec
mov
cmp
sub
mov
cmpsl
addl
lods
cmc
loopne
outsb
and
icebp
gs
xor
jg
ja
out
ljmp
in
imul
adc
xor
push
aam
out
inc
ret
repz
mov
cmp
jp
mov
dec
aas
dec
ficoms
and
mov
mov
xor
cmc
sti
pop
mov
out
push
data16
inc
outsb
adc
pusha
cmp
sub
aad
xor
shrl
je
outsb
pop
sub
repz
or
push
cmp
inc
lahf
cmp
cmp
hlt
jg
and
pop
dec
rolb
inc
incb
pop
movsb
mov
mov
in
mov
stos
dec
stos
pop
or
xor
xchg
fs
xor
pushl
sub
dec
sbb
dec
out
imul
jb
scas
mov
xor
mov
jp
add
cmpsb
sbb
xor
mov
xor
inc
adc
push
pop
mov
idivl
pop
sub
fisttpl
je
adc
sbb
lods
out
pop
add
nop
inc
push
int
stos
jmp
adc
push
ja
cmp
mov
cltd
sub
mov
movsb
loope
cmc
mov
adc
mov
sub
iret
mov
daa
or
push
dec
rcl
leave
lods
push
sbb
std
push
js
cmpsb
flds
sub
aad
add
test
inc
add
mov
jp
push
or
or
dec
hlt
test
mov
mov
pop
lret
mov
dec
push
adc
in
or
jno
push
lods
stos
daa
add
mov
insb
and
repnz
pusha
lea
xchg
sbb
add
aam
adc
aas
mov
lods
dec
jl
cwtl
push
lcall
stos
lret
cmp
jae
pop
decb
lock
mov
add
gs
mov
jle
sub
shl
mov
call
mov
rclb
into
add
add
mov
enter
xchg
sahf
xchg
cltd
cli
adc
xchg
andl
inc
and
cs
pop
push
out
in
jge
imul
mov
dec
and
dec
dec
stos
test
xor
sahf
add
addb
adc
mov
ss
cld
mov
cltd
lods
or
scas
aad
cltd
mov
sbbl
imul
and
inc
mov
pop
loopne
pop
xor
adc
xor
cltd
push
pop
ja
dec
xor
or
adc
fs
jnp
adc
cli
mov
push
cmp
mov
iret
stc
ja
add
sub
jbe
xchg
dec
cmp
cmpb
lea
mov
inc
fisubrl
bound
icebp
pushf
bswap
adc
in
mov
adc
mov
cli
stc
xor
xchg
push
dec
cmpsl
lods
addr16
adc
mov
mov
cmpl
jno
idivb
or
stos
xchg
cltd
xor
or
ds
adc
sti
idivl
mov
inc
fidivl
mov
and
push
mov
xor
movsl
dec
or
fistl
rclb
push
adc
out
jg
adc
jl
dec
push
mov
pop
dec
mov
xchg
jb
xor
ja
jg
ret
stos
rol
enter
setnp
adc
push
xchg
or
sbb
.byte
adc
sub
nop
inc
dec
ret
repnz
cmpsl
push
clc
notb
push
inc
in
cmpb
daa
popa
mov
jmp
cmpsl
stos
test
mov
add
pop
xchg
sbb
scas
mov
das
sub
xlat
test
push
push
in
ficoms
stos
out
xchg
add
shll
mov
push
sub
add
aas
clc
arpl
aaa
sahf
and
pusha
push
push
bound
inc
jmp
xchg
fdivp
sbb
in
jns
ljmp
jl
subl
testl
jno
jnp
test
cmp
popf
loop
sub
arpl
inc
addr16
ja
les
sbb
punpckhwd
and
adc
lock
jmp
test
sahf
push
cmp
xchg
inc
negl
cwtl
fwait
cmp
push
sbb
or
ffree
mov
cmp
orl
dec
push
pop
xchg
js
pop
imul
and
add
inc
imul
jle
jle
addl
movsl
pop
push
add
add
dec
mov
pusha
es
xchg
hlt
xor
arpl
dec
out
iret
lcall
out
xchg
inc
and
aaa
stos
fldenv
je
in
lret
repnz
ficoms
mov
sub
jo
repnz
lret
push
fistl
inc
test
push
inc
mov
jg
mov
fsubrl
lret
jne
rcll
mov
sub
movsb
pusha
xchg
and
sbb
out
stos
pop
add
xchg
and
sub
sub
es
or
pop
jbe
ja
aam
and
push
push
dec
mov
cmc
add
xlat
fildll
sub
pop
inc
mov
push
xor
es
mov
pop
jecxz
sub
shlb
cmp
sub
lods
cmp
es
pop
cwtl
xchg
call
inc
bound
je
sbb
ss
push
dec
lret
movsl
mov
jg
mov
lods
pop
sbb
push
inc
ss
fimuls
sub
xor
sub
sar
mov
ret
mov
insl
ret
mov
in
xor
sub
or
mov
movsb
into
dec
and
push
cmpsl
loop
outsl
in
or
sbb
mov
cs
shll
icebp
push
xor
out
mov
in
pop
lret
mov
ret
sti
and
xchg
mov
je
push
lods
cmp
les
lret
mov
push
sub
push
lds
ja
out
fidivl
bound
into
pop
xchg
lock
push
dec
sub
fcomps
aad
daa
test
testb
mov
cld
or
imul
mov
stos
pop
stc
jbe
pop
sahf
mov
fwait
in
ljmp
xor
hlt
loopne
push
dec
jne
cmpsb
dec
dec
and
fisttpll
add
xlat
imul
aas
aad
or
sub
or
mov
sbb
fisubl
push
ja
nop
bound
insb
adc
jb
lods
sub
push
cmp
cmp
cmp
add
mov
dec
xchg
xlat
iret
fwait
ror
in
test
adc
mov
jp
inc
cli
cmp
push
lret
inc
inc
mov
loopne
test
je
mov
cmp
pop
rcrb
lods
jae
cs
adc
pop
or
adc
dec
pop
adc
dec
xchg
add
add
lret
xor
aad
jge
aad
in
in
sub
ja
push
dec
call
leave
cli
mov
nop
cld
sub
pop
push
sbb
int
jmp
adc
pop
jecxz
mov
xchg
test
fcomp
dec
xor
lahf
jo
jns
inc
sbb
fdivrp
xor
pop
or
inc
fmul
int3
mov
lds
mov
mov
dec
mov
jb
jge
cwtl
mov
outsb
inc
cmp
call
and
xlat
and
mov
cmp
add
or
xchg
subb
lcall
sbb
mov
lea
lock
fidivrs
cmc
inc
pop
xchg
and
orl
and
lret
stc
aaa
js
pop
and
xor
dec
xor
fisubrs
in
test
lret
adc
mov
enter
or
push
mov
ljmp
xor
adc
notb
adc
sub
pop
and
sub
pop
sarb
sti
jl
lret
aam
or
adcb
sahf
out
test
stos
jecxz
inc
mov
stos
shlb
inc
es
fdiv
lret
xchg
frstor
push
sahf
insl
xor
hlt
hlt
add
dec
int
push
mov
pop
lcall
sub
int3
dec
shlb
lea
and
adc
cmp
adc
jg
dec
popf
fnstsw
sub
push
pop
aaa
fs
xlat
in
ds
sbb
bound
test
dec
xor
xchg
das
in
nop
cmc
mov
aad
leave
divb
decb
push
dec
pusha
xchg
iret
shl
jo
int3
aam
sarl
stos
movsl
in
lahf
jecxz
aaa
push
sbb
mov
push
jle
rclb
daa
cmpsl
mov
sub
mov
ret
adc
fwait
xchg
or
push
outsb
mov
cmp
gs
pop
out
int3
mov
push
push
mov
adc
sbb
leave
cmp
add
mov
push
push
and
sbb
mov
push
xchg
add
in
mov
xchg
or
jmp
lret
leave
in
inc
inc
lea
lods
mov
insb
rorl
mov
es
xor
imulb
jo
icebp
out
adcb
loope
push
repz
push
adc
test
mov
imul
dec
sub
repz
add
push
ja
nop
add
mov
mov
incl
cmpsl
ss
push
mov
leave
fdivs
shlb
ja
stos
inc
push
cmp
scas
push
in
out
or
mov
xchg
lea
xchg
sahf
inc
imul
or
outsl
xchg
xor
imul
mov
xchg
xchg
lods
data16
inc
mov
sahf
jno
clc
imul
stos
jo
cld
sbb
dec
pop
mov
popa
pop
jp
or
adc
xor
mov
cltd
xchg
and
xchg
clc
mov
pushf
xchg
shrb
out
push
mov
loope
sbbb
pop
push
mov
sahf
roll
push
pop
mov
popf
pop
pop
jl
in
and
mov
adc
mov
adc
das
in
adc
mov
fiadds
mov
add
outsl
sbb
sti
mov
out
scas
add
stos
pop
sbb
push
scas
scas
icebp
inc
clc
js
mov
xlat
jmp
aam
cmc
cli
testl
jae
push
addr16
cltd
push
sub
shrl
sub
mul
lods
jecxz
or
stos
pop
loope
add
xchg
movsb
je
pushf
inc
push
adc
aam
incl
cmp
std
stos
test
cmp
sbb
fdivs
mov
into
and
cmp
imul
lret
push
aas
les
cmp
adc
fimull
jne
ljmp
rcl
lock
sbbb
subl
or
rorl
push
lcall
jmp
or
cmpsb
mov
dec
or
mov
push
sahf
mov
stos
jae
cmp
loopne
mov
shll
mov
xor
dec
dec
stos
dec
out
and
xchg
push
fcom
push
sub
push
out
lock
push
push
aam
test
xchg
pop
test
cld
std
sbb
out
add
add
stos
jnp
outsb
int
xchg
mov
rclb
scas
cmp
adc
jb
popa
andl
jg
lahf
adc
pop
cs
add
out
xchg
add
sub
adc
pushw
and
dec
xor
push
rcrb
fsubrs
xor
orl
loopne
inc
ja
dec
adc
cld
pop
inc
cmpsl
repz
lcall
ret
adc
cmp
jecxz
frstpm(287
inc
loope
loopne
cld
fbstp
test
mull
xchg
jb
dec
test
jg
dec
mov
bound
clc
ficoms
mov
fbld
add
fstps
mov
push
adc
call
aam
rcrl
and
lods
mov
incl
orl
imul
das
addl
je
dec
push
sbb
cwtl
dec
xchg
jb
xor
rcll
mov
sbb
cmp
mov
mov
dec
xchg
mov
xchg
aad
xchg
dec
mov
shl
cmp
mov
popf
stos
cli
subl
or
inc
mov
ja
sbb
in
push
pop
cmc
aad
in
add
sbb
ds
add
cmp
cmp
xchg
inc
pop
push
leave
mov
and
in
mov
mov
cmpsb
arpl
dec
or
adc
or
push
push
loop
pop
jbe
aad
roll
adc
cli
stos
sbb
adc
xor
add
icebp
cmp
mov
add
pop
jb
stc
notl
stc
sub
push
pop
pop
ja
add
out
xor
stos
cmp
inc
jno
ret
cmp
jns
leave
pop
xchg
and
sub
adc
ss
jo
fbld
inc
addr16
cmp
fwait
adc
repnz
pop
enter
pop
mov
int
frstor
add
imul
das
jecxz
sbb
out
int3
out
cmc
cltd
scas
sbb
das
or
pop
in
adc
addb
push
lea
aaa
sbb
mov
movlps
jnp
cmpsl
mov
and
jp
out
jns
fs
rcll
mov
loop
repnz
sbb
cmp
arpl
adc
out
inc
and
fiaddl
es
push
aaa
in
fisubl
js
push
fisubrl
js
cltd
stos
out
push
push
xlat
xchg
aad
jmp
insl
aaa
insb
xchg
jno
xor
xor
inc
das
sarl
fdiv
movsb
inc
sub
movsb
jge
fisttps
sbb
outsb
sbb
stos
pop
mov
sub
xor
sbb
push
adc
and
psraw
xor
cltd
ficomps
pop
push
push
imull
shlb
or
inc
sbb
jno
and
dec
or
dec
and
sub
xor
jno
pop
outsl
outsb
cmp
and
add
mov
and
test
mov
add
lahf
shrb
push
mov
jo
insb
cmp
xchg
push
les
push
dec
jge
cwtl
mov
rcrl
cmp
pop
mov
fidivl
les
add
sbb
fs
cmovns
ret
stos
jb
and
mov
push
imul
aam
pop
push
dec
je
mov
bound
mov
xor
sbb
pusha
jmp
cltd
aas
jbe
sbb
aaa
add
leave
pop
jl
mov
cmpsb
adc
imul
addb
in
pop
into
fcom
shl
mov
mov
dec
sarb
mov
enter
out
jbe
pop
rorb
dec
push
mov
imul
icebp
or
add
and
jg
pmaxsw
pop
mov
loop
lahf
enter
inc
stc
fwait
adc
lods
mov
push
dec
xlat
ljmp
mov
pop
mov
movsl
add
xor
test
ljmp
xor
test
aaa
push
jo
and
fiadds
jp
cmp
gs
mov
jl
aam
inc
lods
cltd
mov
mov
ja
dec
call
es
dec
hlt
cmp
mov
pop
lock
push
xchg
mov
add
pushf
rcrb
test
mov
test
sahf
mov
repnz
xor
jne
pop
dec
dec
pop
daa
mov
jb
out
mov
xor
aaa
cmpsb
cmc
mov
push
push
lock
xchg
pop
ret
sarl
fsubrs
fmull
addr16
mov
rcrl
sbb
jg
xchg
or
sub
pop
or
loop
test
mov
mov
adc
aad
mov
sbb
shrl
xorl
or
cmp
inc
sbb
jns
sub
shll
outsl
test
jge
std
fisttpll
rcr
nop
cli
sub
inc
aad
cmp
sub
push
jns
cmc
ret
pop
fldl
push
js
inc
push
mov
or
iret
inc
movsl
shll
pop
and
mov
pop
and
mov
in
negl
outsl
jle
outsl
js
xchg
pop
cmp
cld
mov
ljmp
cmc
mov
imul
xchg
add
cwtl
cltd
imul
jne
pop
mov
ja
and
and
xchg
push
mov
adc
xchg
pop
and
dec
das
out
mov
cmp
fiaddl
aas
inc
ret
or
subb
movsl
mov
sti
or
into
dec
pop
xor
xor
lds
add
cltd
mov
sysenter
xchg
fistpl
loope
adc
in
lret
sub
popa
pop
inc
mov
add
mov
shl
or
sub
mov
test
mov
adc
test
les
xor
lcall
push
and
andl
nop
pop
xchg
andl
push
dec
lcall
mov
decb
pop
pop
repnz
xor
cmp
and
sbb
sahf
or
pop
gs
loop
iret
mov
mov
lods
xor
pusha
sbb
cmpsb
and
test
mov
add
xchg
push
out
xor
add
jne
lahf
xchg
jno
xchg
cmpsb
enter
cmp
cmp
sub
cltd
cmpsl
hlt
mov
and
inc
shlb
pop
andb
es
xchg
xchg
cmp
mov
xchg
outsb
mov
es
daa
les
repnz
repz
mov
pop
xchg
addb
jp
test
fs
xchg
in
cmpsb
out
jg
push
dec
jmp
inc
js
nop
mov
jge
jp
pop
stos
arpl
jmp
add
jle
sbb
outsl
fbstp
pop
inc
mov
ds
sbb
sahf
scas
mov
cmp
js
push
mov
in
push
lret
jne
pop
jle
adc
push
pushf
add
mov
imul
adc
pop
popa
inc
movsb
add
xor
frstor
repz
ljmp
or
xchg
push
aas
fs
jns
push
sbb
mov
pop
mov
fstpl
adc
dec
adc
mov
inc
nop
inc
jae
jae
movsb
das
and
xchg
and
out
sahf
mov
jg
popa
push
pushf
test
mov
repz
sub
cltd
xchg
shll
sahf
mov
loopne
stc
sbb
push
cmp
inc
inc
sti
shr
cltd
xor
ljmp
jae
orb
in
dec
lods
ret
or
lcall
arpl
into
xadd
push
pushf
orl
icebp
lahf
lret
sbb
sub
mov
std
pop
pop
cli
lods
insb
xchg
sbb
xchg
jbe
and
mov
jmp
inc
imull
js
sbbl
mov
or
inc
ss
jbe
inc
lret
push
loop
adc
adc
mov
xchg
stos
mov
adc
sarb
ret
leave
stos
lret
test
cmpsl
pop
push
mov
imul
aaa
shll
add
cwtl
test
mov
leave
loopne
mov
adc
pop
add
imul
stos
cs
mov
fs
sahf
cli
mov
sbb
cmp
repnz
aad
orb
or
shll
out
cli
mov
jns
mov
add
add
outsb
jbe
push
and
jb
xor
sbb
push
movsb
aas
jmp
movsl
sbb
mov
inc
add
pop
sub
mov
imul
add
pop
inc
fisttpl
xchg
clc
mov
and
insl
pop
out
adcl
mov
adc
mov
sub
inc
pop
sahf
out
push
lret
mov
pop
fcoml
adc
les
test
add
out
add
int
rolb
sarb
mov
ja
ja
fwait
stos
rcrl
lcall
jno
jmp
addl
pop
in
inc
fcomps
mov
mov
lret
mov
mov
mov
jno
in
ret
sbb
mov
cmp
lcall
push
and
or
mov
mov
jo
lods
xchg
mov
test
xor
xor
mov
iret
sarl
add
lods
jne
int3
mov
push
leave
inc
sbb
jp
or
push
lods
ret
dec
add
dec
and
push
pop
fs
mov
out
xorl
inc
mov
cld
mov
dec
push
das
lock
add
pop
adc
out
rorb
icebp
push
mov
lret
movsl
sbb
mov
xchg
adc
jo
cli
xchg
sub
cmpsl
negb
out
ljmp
aad
and
shrb
mov
shrl
mov
dec
xor
je
insb
mov
pop
jns
in
cmp
dec
inc
inc
mov
xchg
jecxz
add
xor
jb
jns
loop
or
push
and
cmp
mov
cltd
hlt
pushf
or
push
pop
and
jbe
mov
.byte
.byte
add
add
pusha
inc
add
jo
add
add
es
add
add
add
add
addb
addb
add
pop
add
addb
add
jo
add
mov
add
test
add
rolb
addb
add
es
add
add
add
add
add
add
add
add
es
add
add
add
add
push
add
xor
add
add
add
add
add
or
add
es
add
add
add
add
sub
add
add
cmpb
add
es
add
add
add
add
dec
add
adcb
addb
add
es
add
add
add
add
add
add
push
add
add
xchg
add
add
add
add
or
add
add
add
xchg
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
mov
add
add
add
es
add
add
add
add
add
add
rolb
add
add
add
xchg
add
add
add
add
or
add
add
add
add
add
xchg
add
add
add
add
add
add
loopne
add
push
aas
add
call
or
add
or
add
add
add
ljmp
pushf
add
add
add
adc
add
xchg
add
pop
add
pop
add
inc
add
dec
add
push
add
add
push
add
push
add
inc
add
push
add
xor
pop
add
add
inc
add
inc
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
pop
add
add
add
add
add
add
xor
xor
xor
aaa
add
sub
mov
orb
sub
stc
aaa
pop
mov
push
ficoms
aaa
fwait
mov
test
fldl
and
js
add
xchg
stc
ljmp
shlb
arpl
ret
dec
push
scas
xchg
dec
loop
movsl
fmull
lock
inc
sbb
mov
cltd
mov
sti
je
outsb
mov
lods
mov
adc
push
lods
leave
mov
lcall
cld
mov
pop
std
cli
xchg
out
add
rdmsr
lcall
xchg
ss
shl
pop
jne
insl
aas
mov
pusha
andb
push
test
cmpb
decb
imul
cmp
cs
xor
xor
aas
mov
add
rcrl
fnsave
jno
add
das
or
sahf
ror
jno
adcl
add
jmp
sub
xchg
daa
cmpsb
lret
pop
shrb
mov
or
into
cmp
stos
pop
mov
push
cmp
cmc
mov
mov
xor
lods
lods
cmp
cmp
shrb
lret
pusha
jl
das
push
dec
pusha
xor
jae
adc
cmp
jmp
mov
mov
fiadds
jnp
push
jb
cmc
sbb
inc
inc
or
xor
jae
mov
mov
sbb
cli
imul
push
or
rorb
testb
jl
inc
xlat
push
test
loopne
xchg
mov
push
test
data16
rcrl
jne
les
and
ficompl
movsb
inc
inc
adc
imulb
adc
in
cmc
cmpsb
pushl
mov
xchg
test
out
mov
add
pop
mov
and
xchg
push
fwait
sbb
lcall
xor
sub
sysret
ret
cli
pop
out
rorl
dec
add
in
cld
jae
mov
bound
in
pop
fldcw
stos
call
frstor
inc
cmp
adc
ret
mov
cmpsb
imul
test
sub
mov
test
popa
sub
mov
movsl
scas
adc
scas
add
fisttps
adc
sbb
xchg
sub
mov
add
push
repz
pop
out
mov
fidivs
cmpsl
mov
cmc
dec
jp
inc
js
sbb
out
outsb
pop
inc
sar
pop
push
out
sbb
test
xorl
dec
les
jnp
shll
stos
arpl
subb
sbb
icebp
jnp
adc
dec
out
cmp
jnp
fistl
fidivrl
mov
mov
push
iret
cmc
xor
cmp
insb
std
js
popf
shrl
xchg
sbb
jbe
jle
nop
mov
push
push
jl
sarb
dec
xchg
and
mov
inc
daa
xor
ds
rorb
loope
jle
fidivs
sub
xchg
enter
sti
fsubrs
pop
pop
out
out
mov
xor
adc
or
adc
leave
outsb
add
mov
fsubl
add
sub
jbe
insb
ret
and
jge
dec
push
lea
dec
mov
mov
sub
fwait
jnp
int
mov
fdivp
cld
adc
sbb
ret
inc
movsb
nop
xor
push
xchg
inc
fisubrl
fldl
and
shll
test
xlat
cmp
out
mov
and
dec
pop
push
mov
fwait
push
mov
mov
out
lret
mov
mov
ja
xor
push
loop
xor
xlat
pusha
divb
mov
mov
mov
lods
mov
xor
std
dec
addr16
mov
mov
aaa
movsl
jp
inc
xbegin
pop
adc
nop
lea
sbb
sbb
pushf
ds
dec
push
jg
arpl
jge
pop
insb
sbb
mov
cmp
push
lea
push
mov
push
cmp
lods
push
in
addr16
testl
jae
pop
out
mov
pop
in
mov
stos
lods
cltd
sbb
pop
push
push
ret
and
dec
out
mov
sub
push
arpl
xor
ret
and
dec
test
data16
out
shlb
clc
sub
jle
aam
out
inc
jl
jecxz
cmc
mov
ret
into
fildll
sarl
pop
dec
xchg
cli
subl
divl
push
je
out
dec
loope
inc
xchg
sbb
mov
mulb
cld
ret
out
xchg
hlt
and
xor
icebp
mov
pop
orb
or
cli
sbb
scas
adc
mov
jno
pop
inc
aad
add
mov
arpl
js
cmpsl
movsb
out
sbb
or
mov
jge
add
and
add
dec
mov
push
cmc
pop
and
outsb
jnp
push
xchg
insl
sub
jo
sub
and
data16
or
sub
enter
and
mov
idivl
add
pop
mov
or
xor
aad
jo
sub
dec
mov
xchg
ret
push
jge
mov
cmpsl
dec
mov
fstp
or
jp
push
and
jne
add
adc
shrb
loope
dec
faddl
mov
xchg
xor
push
loope
jecxz
mov
std
int
push
mov
push
clc
loopne
xlat
jecxz
aad
mov
add
loope
into
lret
repz
fisttpl
add
loop
insl
dec
push
pop
icebp
xor
sub
loope
push
inc
clc
adc
sbb
imul
add
inc
pop
in
in
pop
inc
push
mov
fnstcw
mov
jg
lock
loopne
jnp
nop
sbb
cltd
aam
push
and
cmp
ret
pop
sbb
add
xchg
xchg
pushf
testb
decb
std
add
pop
sbb
test
mov
dec
dec
loop
sub
stc
inc
sub
cmp
add
mov
es
mov
ror
aam
loope
mov
ror
scas
add
es
mov
mov
hlt
test
dec
mov
leave
mov
jb
mov
lods
into
std
or
xchg
out
icebp
cwtl
xor
out
dec
pop
dec
push
push
cwtl
outsl
xor
aad
and
sbb
sti
mov
sbb
lds
jge
push
inc
dec
xchg
int
mov
xchg
lret
aad
add
mul
lds
dec
lret
pusha
fst
sub
sub
aas
lock
pushl
aam
fwait
gs
ss
pop
in
enter
pop
ds
add
out
das
sbb
enter
cltd
and
cld
sub
rcl
xchg
movsb
and
push
push
stos
out
out
sbb
scas
popa
sub
inc
mov
jecxz
sbb
imul
mov
cli
mov
pop
sbb
shll
inc
inc
xchg
fwait
push
mov
jl
imul
rcrl
popa
push
mov
mov
sub
xlat
cmc
lcall
popf
je
fdivl
cli
mov
div
movsb
out
jo
inc
ret
mov
inc
movsl
mov
cmp
jmp
adc
insl
stos
mov
or
push
pop
inc
mov
aas
shlb
cmp
iret
cwtl
add
mov
test
add
cld
pop
mov
ljmp
mov
xchg
jmp
sbb
xor
xor
stc
ret
and
sahf
aas
inc
or
xchg
inc
ret
icebp
jnp
xor
inc
in
inc
iret
jmp
pop
loope
dec
push
mov
ficoml
xorb
fiaddl
in
jb
shlb
int3
and
jge
push
fwait
int
test
ds
sahf
add
pop
or
inc
dec
mov
and
mov
imul
fisttps
test
fdivrl
stos
in
or
pop
das
xchg
push
and
mov
xchg
push
lret
dec
aam
pushf
insl
push
in
jmp
sbb
or
movsb
pop
inc
rorl
mov
push
xchg
or
xchg
ss
mov
adc
add
gs
rolb
mov
mov
movsl
fwait
and
cs
cmp
cmp
jl
cs
inc
out
adc
mov
push
cmp
xchg
in
bswap
pop
pop
shr
jge
jne
xchg
xor
xchg
in
popa
jne
das
fnstsw
jne
in
mov
mul
scas
jns
js
fidivs
jg
xchg
jne
sub
jne
sahf
push
jg
dec
test
test
sub
lret
fisttps
sbb
adc
insb
movsb
aaa
mov
fwait
adc
popf
in
push
out
addl
dec
adc
mov
scas
cmp
aad
inc
jbe
loopne,pt
jmp
ret
mov
sbb
scas
mov
out
std
xor
inc
mov
out
mov
cwtl
or
scas
icebp
cmpsl
test
dec
arpl
test
ds
sub
outsb
dec
jmp
push
cmp
out
rol
cmpsl
mov
adc
sub
shlb
lods
mov
mov
jnp
outsl
popa
add
hlt
std
outsb
stos
dec
jne
imul
andb
xchg
iret
jb
pop
mov
inc
into
loope
jne
xchg
into
enter
clc
push
repnz
adc
mov
jmp
cltd
xchg
adc
cs
jae
mov
mov
inc
les
es
andl
fstl
push
lea
sbb
xor
inc
outsb
shlb
push
pop
popf
andl
gs
popf
test
shlb
sbb
jo
in
popa
fdiv
out
fiaddl
lds
mov
clc
push
ljmp
push
push
dec
adc
jo
bound
popf
icebp
leave
popf
ss
es
push
cs
pop
sti
repz
aas
add
pusha
stc
das
es
subl
xchg
jle
pop
push
inc
cmp
stos
in
inc
fiaddl
out
xchg
fs
insb
mov
sbb
mov
mov
add
cmc
scas
std
lods
mov
out
push
mov
xor
mov
out
nop
in
iret
mov
pop
sub
adc
push
aaa
rcrb
js
das
mov
mov
jle
arpl
xchg
add
das
sbb
and
push
bound
enter
jecxz
cld
ljmp
aad
adc
mov
xchg
enter
xor
int3
sub
nop
testb
xlat
jbe
enter
mov
xchg
mov
test
ja
mov
aaa
sarl
inc
ficomps
mov
mov
js
mov
and
loope
push
daa
ficoml
daa
jno
idivb
and
cmc
mov
mov
add
dec
stos
ret
or
stos
sbb
scas
inc
stc
repz
les
sub
cmp
xchg
dec
jb
and
xor
fiaddl
scas
sbb
test
xchg
in
lods
cwtl
arpl
mov
enter
sbb
fwait
or
pop
ja
imul
out
jbe
pushf
orl
dec
xchg
cs
mov
out
jno
cmc
sti
mov
test
xchg
xor
aad
lahf
stos
imul
add
sub
cs
loope
dec
inc
mov
push
out
aad
cmp
das
dec
insl
sub
sarb
push
je
inc
add
add
ret
jge
scas
inc
push
dec
mov
pushf
pop
ret
call
xchg
cmp
insl
push
sti
adc
jbe
pusha
xchg
add
add
jg
adc
mov
mov
jnp
inc
movsb
add
hlt
int3
lcall
lods
xor
into
cmpsl
cmc
lock
xlat
inc
push
pop
jg
xchg
cli
mov
jle
inc
nop
sub
dec
xchg
aam
andb
add
mov
test
mov
out
xor
sub
imul
fisubs
or
xchg
xor
dec
fadds
push
int
ret
fs
cmp
mov
pop
gs
lahf
testl
and
into
cli
jns
push
int
outsb
out
aad
pop
fmull
popa
xor
retw
aaa
in
dec
sbb
add
add
fldl2e
std
mov
sub
pop
xchg
cmc
push
push
mov
testb
dec
xchg
lea
push
arpl
js
inc
add
out
mov
out
inc
and
sub
pop
inc
ret
shl
mov
xor
cmp
add
add
push
inc
test
jbe
outsl
dec
adc
push
je
xor
push
inc
test
insl
mov
dec
jl
jae
pop
and
jae
outsb
cld
ja
jecxz
testb
add
cmpsb
jp
out
dec
daa
shrl
push
icebp
mov
mov
mov
test
scas
insl
dec
or
out
push
arpl
std
jnp
push
inc
add
and
mov
icebp
pop
sub
xorb
or
pop
cmc
insl
cmpl
adc
xor
pop
pop
scas
pop
int
je
jae
es
daa
insb
js
xor
sahf
inc
push
int3
repnz
test
mov
fwait
or
pop
fdivs
in
int3
cmp
inc
dec
cmp
negb
repz
jbe
sbb
dec
rorb
cmp
adc
xor
inc
or
out
fadds
pop
or
in
inc
hlt
push
jl
sahf
adc
mov
adc
and
iret
pop
nop
xchg
lcall
or
sub
imul
mov
and
cld
pop
adc
inc
mov
xchg
shll
pop
pop
sub
dec
fucom
inc
fs
mov
sub
cmp
fucomp
xchg
sub
fisubrs
mov
mov
jg
adc
mov
inc
xorb
ljmp
mov
dec
and
sbb
pop
push
sub
lods
cli
sarl
jg
loop
pop
mov
and
cmp
lret
xlat
cmc
fmul
jecxz
xchg
popf
jmp
inc
cs
or
push
mov
pop
adc
jl
dec
xor
mov
jns
and
outsb
in
xor
fistl
cmp
cmp
in
aam
out
rorl
sub
iret
fs
xchg
jb
addr16
push
jae
decb
daa
mov
jb
outsb
aad
bound
incl
insl
sbb
test
pop
test
rolb
push
or
lds
outsl
cmp
orb
in
ss
lcall
sbb
fwait
and
inc
fsubrp
xor
add
add
xchg
out
rol
lea
jno
mov
repnz
inc
bound
imul
js
push
leave
dec
jnp
dec
daa
pop
mov
and
adc
gs
into
fwait
sub
push
inc
test
or
xchg
xchg
mov
and
dec
adc
adc
xlat
mov
mov
mov
jns
xchg
mov
mov
fsts
add
mov
mov
pop
adc
mov
jp
mov
or
popf
loop
mov
inc
dec
xchg
cmpsl
xor
inc
fstpt
rclb
in
dec
push
sub
sbb
aaa
sahf
ja
loopne
repnz
nop
adc
push
sahf
cmp
and
inc
push
cmp
cmp
mov
aaa
pop
dec
add
mov
mov
mov
test
out
mov
addr16
pusha
pop
jl
jns
add
flds
cmp
imul
mov
jo
push
pusha
ret
and
sbb
mov
jle
dec
sbb
jge
lds
hlt
jnp
adc
mov
sbb
pushf
shrl
mov
mov
jbe
xchg
inc
nop
rcl
pop
std
add
in
mov
xor
loop
cmp
stc
inc
pop
loop
js
sti
enter
push
mov
dec
movsb
sub
es
fisubl
ja
int3
jbe
mov
jp
shlb
popf
jmp
jp
lods
clc
push
dec
clc
add
mov
cmp
stos
inc
pop
cmp
mov
xor
mov
insl
movhps
ljmp
sbb
mov
negl
dec
push
stos
push
cwtl
dec
test
xor
repnz
and
fs
mov
or
mov
das
mov
loope
inc
mov
jg
scas
add
mov
rclb
scas
pop
sbb
stc
fiadds
inc
pop
popf
push
aaa
stos
in
out
fs
test
imul
icebp
dec
daa
imul
or
frstor
mov
dec
xor
mov
movsl
add
xlat
jne
aaa
dec
fmul
fnstsw
std
repz
lret
iret
dec
jecxz
mov
das
lcall
mov
lods
scas
mov
fdivrl
pop
mov
adc
xchg
pop
gs
fs
out
icebp
mov
pop
loopne
out
mov
mov
aam
sbb
call
xorps
push
les
clc
mov
mov
mov
push
negb
pop
daa
xchg
fwait
ret
icebp
test
je
jmp
and
mov
sbb
pushf
cmp
inc
fists
shl
add
xor
scas
inc
mov
jl
sbb
test
jmp
stc
inc
int3
jbe
movsb
outsb
xor
mov
inc
pushf
xor
imul
cmp
loop
xchg
aad
xorb
pop
test
mov
loopne
fistl
subl
test
sub
sahf
push
lahf
xchg
rol
sub
out
add
out
pop
jge
iret
insl
cmc
inc
sub
pushf
leave
push
xor
xchg
xchg
sahf
mov
aaa
mov
ja
cltd
outsl
inc
cwtl
jge
ret
rorl
fmul
sub
rcrl
push
dec
mov
mov
xchg
pop
or
mov
sahf
add
mov
jmp
imul
pop
fld1
push
je
loop
sti
idivl
movsb
mov
and
loope
cmp
mov
lahf
scas
test
loope
sbb
jp
adcl
sub
inc
orl
arpl
cs
jmp
pop
sahf
das
bound
pop
push
repnz
out
in
sbb
fadds
ljmp
pop
mov
mov
mov
icebp
jbe
or
add
xchg
sbb
push
pop
or
dec
sbb
xchg
dec
rolb
add
in
pop
les
sar
mov
aad
hlt
adcl
mov
fadd
imul
push
int
in
pop
inc
cmpl
lods
xor
das
mov
jno
add
repnz
jno
push
lods
out
mov
mov
push
adc
rolb
sbbb
mov
leave
and
or
lods
sub
gs
std
adc
inc
in
adc
je
outsb
test
pusha
cmpsb
ljmp
xchg
push
cltd
subl
push
pop
pop
loop
sub
push
test
inc
aas
addl
lock
cld
je
pusha
and
jns
push
pushf
int3
xor
scas
sahf
jne
lds
mov
cmc
pop
in
add
cli
cmp
filds
mov
lods
insl
xchg
nop
lea
out
push
fimull
aad
sahf
xlat
ds
lock
cmp
in
pop
xchg
jmp
xlat
push
into
in
outsl
insb
inc
push
es
mov
mov
std
orb
mov
pop
int
jmp
mov
cmp
push
addr16
imul
cmpsb
pop
in
cmp
xchg
mov
mov
cli
stos
sbb
imul
dec
sbb
rcll
dec
jge
shrb
pop
jne
test
jl
cmc
int
mov
cs
negb
push
inc
das
push
mov
mov
push
mov
fldenv
inc
or
xor
push
es
push
jge
fidivl
icebp
loop
pop
inc
push
mov
add
and
add
xchg
xchg
inc
aam
xchg
mov
leave
into
xchg
push
jle
jg
mov
xor
mov
mov
cmp
stc
rcr
lcall
jg
cmp
jle
add
xchg
cs
xchg
movsl
cmpsb
or
dec
movsb
in
mov
dec
push
outsl
js
push
dec
outsl
cmpsl
mov
addr16
xchg
in
movsl
popf
ljmp
xchg
mul
insb
mov
fisttpl
lods
ret
test
xchg
fcompl
mov
push
or
pop
arpl
fcoms
insb
mov
sub
mov
mov
imul
mov
dec
ret
cmp
fstpt
imul
or
pop
aad
adc
mov
sub
jno
out
cmp
aam
adc
pop
aas
hlt
adc
pop
imul
shlb
jge
hlt
or
dec
add
xchg
mov
pop
sub
adc
js
add
pop
into
out
inc
add
inc
lods
cmc
outsl
fcomps
es
xor
fiadds
push
mov
cmc
filds
pop
fcmovne
lods
pop
pop
jno
push
mov
fstpl
aam
pop
incl
cmp
out
xchg
inc
or
insb
cmp
jae
and
mov
xchg
cltd
and
cwtl
js
cmp
mov
pop
mov
leave
xchg
and
outsl
inc
test
int
xlat
pop
sub
dec
dec
jecxz
int
lcall
jns
sbb
mov
pop
jmp
iret
sahf
loop
xor
xor
inc
ljmp
pop
inc
aam
adc
ret
inc
push
rcll
rep
push
mov
mov
pop
rol
sahf
ret
test
xchg
in
les
cmpsl
push
icebp
add
pusha
pop
mov
inc
jg
sarb
or
jecxz
int3
xchg
aas
xchg
cmp
inc
mov
mov
jnp
ret
leave
or
jns
mov
push
and
ret
mov
add
pushf
dec
mov
cltd
xor
repz
into
out
icebp
pop
punpckldq
pop
mov
push
mov
mov
ja
cld
shlb
shrl
dec
decb
movsb
xchg
rclb
mov
mov
or
and
mov
in
lds
push
push
or
mov
call
or
sub
test
jns
out
scas
fstps
and
mov
cld
or
and
jno
cs
push
jl
outsl
push
imul
adc
push
ret
mov
pop
in
movsb
fs
mov
out
sub
fsubrs
xor
xor
inc
hlt
dec
ret
sub
push
add
out
jg
mov
dec
pushf
mov
iret
or
mov
into
in
iret
loop
mov
cmp
fimull
xchg
cli
or
jp
out
fidivl
jae
imul
imul
out
add
push
sbb
push
xchg
test
int3
sbb
mov
out
mov
ds
jecxz
cld
and
in
lahf
ret
insl
jno
xchg
lret
mov
xor
aad
std
xor
inc
xchg
mov
js
mov
jb
add
shlb
aam
out
pop
jnp
aas
sti
jne
data16
push
and
loopne
or
pop
sbb
or
loopne
xor
fildl
and
push
orb
js
enter
arpl
push
and
and
mov
cmpb
std
cwtl
or
test
adc
ret
mov
xor
inc
movsb
and
mov
fs
js
outsl
inc
lods
rclb
bound
inc
pop
cmp
gs
mov
ss
push
in
cltd
push
mov
pop
inc
imul
cmp
nop
out
cmp
ja
adc
and
je
mov
xlat
mov
stos
sbb
or
cld
loopne
or
mov
stos
mov
hlt
and
add
outsl
adc
cmpsb
pcmpeqd
jbe
ficomps
or
in
cmp
lret
das
test
sbb
sbb
xchg
push
mov
imul
push
mov
mov
cmp
aaa
stos
gs
cmp
sahf
pop
leave
pop
xchg
xor
adc
out
imul
xor
scas
addr16
or
std
out
and
mov
addb
inc
add
sti
jg
jns
das
scas
js
mov
rcrb
test
sbb
cli
sub
notb
jmp
movsb
jno
fdivrs
lret
daa
les
xchg
xchg
leave
xchg
mov
mov
cmp
push
adc
stc
xorl
cmp
lret
jg
adc
test
mov
ja
push
pop
stos
test
xlat
loopne
enter
jns
sub
fnsave
dec
gs
test
sub
cs
aas
pop
into
xor
sbb
ds
pop
or
dec
lods
mov
pushf
dec
cltd
jp
ret
jnp
xor
pop
add
push
popa
xchg
cld
xchg
pushf
dec
out
mov
addr16
jb
inc
jecxz
jae
mov
adc
xor
bound
dec
or
rcrl
or
ret
or
fsubl
push
test
ret
jnp
add
testl
push
mov
push
aaa
or
and
cs
bound
dec
adc
out
add
and
dec
in
dec
ffreep
inc
movsb
jle
mov
xchg
sub
bound
idivb
shrb
mov
pop
ljmp
je
std
push
mov
and
out
int3
shld
popa
in
insb
shll
push
pop
adc
shrl
pop
orb
pop
out
movsl
pop
mov
pop
pop
adc
sbb
mov
loopne
sarb
les
enter
sub
movsb
adc
xor
out
test
and
or
fcmovbe
xchg
sbb
test
cld
lods
into
pop
cmpsl
sub
mov
pop
and
stos
test
cmp
addr16
dec
adc
push
mov
ss
aas
test
mov
jns
push
xchg
push
test
mov
pop
scas
mov
xchg
push
icebp
inc
invd
sti
je
pop
and
mul
ret
bound
push
inc
outsl
add
scas
pop
shl
dec
mov
lret
adc
jbe
sbb
or
mov
sbb
or
aam
lods
cltd
fisttpll
popa
lret
add
sub
dec
mov
xchg
push
lock
std
out
xor
fwait
jnp
loop
xor
jge
pop
out
test
push
daa
lcall
sbbl
std
jmp
sbb
sbb
scas
push
std
dec
adc
xor
test
icebp
addr16
in
dec
sbb
cmpsb
cmpsl
je
dec
jae
js
pop
cmc
fwait
pop
xchg
inc
fsubl
and
iret
cmc
fisttpl
rcll
ljmp
jl
ss
ret
sub
stos
sub
sub
jecxz
jnp
ret
jo
mov
add
mov
and
scas
mov
xor
shll
jecxz
arpl
or
pop
pop
ds
out
ja
loop
shld
xchg
mov
or
fisubs
xchg
xchg
icebp
jmp
dec
push
ljmp
nop
sti
mov
repz
in
push
cmp
xor
aam
pop
jmp
lds
enter
out
sti
ja
jb
dec
pushf
xor
nop
clc
pop
mov
and
out
push
push
push
add
stc
inc
cli
fucomp
mov
sbbl
add
outsl
ret
in
outsl
cmp
lods
stos
inc
pop
pop
push
adc
cmp
rcrb
sbb
pop
push
ja
pop
pop
aaa
cli
mov
neg
jl
sahf
jl
daa
rclb
inc
fmull
sub
int
not
stos
dec
mov
inc
adc
mov
cs
test
shlb
dec
cmp
dec
inc
out
jl
mov
ror
xchg
shll
and
add
fstp
xor
sti
push
mov
scas
shlb
iret
pop
iret
sbb
xchg
pop
aad
cmp
test
fsubrl
and
xor
push
pop
lock
add
sub
out
add
in
sub
dec
pop
in
pop
iret
jg
add
test
jb
cmp
xchg
dec
push
pop
aad
popf
mov
pop
enter
and
inc
ret
adc
push
out
jnp
jmp
adc
xor
sahf
pusha
push
dec
ja
sbb
clc
push
mov
stos
aam
xchg
lds
inc
call
mov
clc
lcall
int
or
dec
iret
fiadds
cmp
inc
xor
xor
mov
rorb
loopne,pt
aas
addr16
sub
jg
iret
jg
push
movsb
jb
ja
rorb
or
adc
mov
and
int
inc
test
dec
and
cmpsb
pop
les
jno
adc
jb
test
push
mov
scas
mov
scas
sti
mov
cmp
loopne
jecxz
pop
insb
or
lds
js
mov
imul
sbb
jb
outsl
mov
clc
lock
sbb
mov
imul
mov
push
lcall
aad
out
dec
push
les
cmp
ss
sbb
inc
repz
jge
in
jbe
lods
rcll
or
cmp
enter
nop
push
sbb
movsb
fidivrs
lods
pop
std
mov
adc
popf
cmpsb
aam
cmpsl
push
jp
call
pop
outsl
ds
lock
addl
shl
push
adc
outsb
pop
mov
pushf
mov
aam
lret
mov
sub
fisubl
pop
outsl
sbb
or
shrb
mov
stos
ja
adc
cltd
lcall
out
push
rolb
mov
shrb
mov
adc
arpl
jmp
inc
xor
daa
push
scas
jae
dec
out
lods
imul
loop
pop
push
shrb
mov
out
imulb
xorl
pop
and
sbb
inc
int3
addb
sub
sahf
dec
shr
out
or
cmp
mov
sbb
dec
ds
scas
add
nop
or
aaa
test
sbb
clc
jle
sub
aad
movsl
cmpsb
pop
lret
sbb
jmp
xchg
test
movsb
iret
stos
mov
je
mov
pop
or
iret
shll
rcll
fwait
inc
adc
jne
xchg
fcoms
imul
leave
mov
push
mov
push
std
adc
mov
sub
pop
and
lds
out
add
add
fwait
lea
dec
inc
sbb
mov
jge
arpl
sub
mov
aad
dec
adc
sub
inc
push
push
push
mov
fcom
dec
inc
adc
push
popa
jp
cmp
pusha
rcrl
jo
dec
in
out
rcl
pop
test
push
or
pop
aaa
fstp
xor
jecxz
aas
xchg
sbb
rolb
pop
sbb
and
leave
dec
mov
fbstp
ret
pop
jg
outsl
push
mov
sbb
in
repnz
clc
setbe
mov
sub
and
aaa
movsl
lret
stos
sub
ss
int
push
repz
test
mov
aam
pusha
lahf
pop
inc
std
push
fdivrl
cld
fdivs
cli
jl
int
cmp
push
mov
adc
mov
cltd
test
clc
out
in
mov
mov
xchg
dec
and
test
imul
jo
clc
add
xchg
sti
je
out
push
mov
incl
loope
aam
jecxz
jge
lcall
lcall
test
rcrb
jl
addb
mov
aaa
hlt
fidivs
pop
mov
pop
mov
and
jg
dec
xor
leave
push
aad
cmc
and
mov
pop
pop
movsl
xor
sbb
xchg
cmp
fisubl
scas
push
xorl
sbb
xor
call
rcl
pop
mov
mov
in
adc
or
and
cltd
xchg
imul
mov
addr16
movsb
packuswb
pop
pop
cli
fcoml
adc
jl
dec
in
rolb
and
hlt
add
xlat
mov
sub
das
fwait
outsl
dec
mov
movsl
pop
mov
inc
push
or
mov
adc
dec
and
pmulhuw
and
push
inc
mov
cmp
or
stos
mov
outsb
jns
fs
mov
adc
jns
stos
jp
mov
cmc
scas
mov
adc
fisttpll
in
pop
fcmovnbe
dec
push
push
or
xchg
addr16
repz
loope
cmp
adc
jae
in
sbb
outsl
pop
rcrb
fcoml
std
mov
rorl
lock
sti
pop
inc
pop
dec
xor
into
cli
and
subl
sub
movsb
add
cmp
loop,pt
jl
fs
push
xor
sbbl
pop
dec
sub
or
jbe
sub
push
shll
dec
in
fwait
and
pop
mov
.byte
.byte
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jb
mov
call
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
fistpl
mov
int3
or
add
ffreep
fs
mov
pop
push
sbb
pop
pushl
push
mov
pop
pop
push
mov
pop
add
push
and
pop
add
mov
sub
sbb
mov
call
xchg
cmp
jle
sub
mov
mov
pop
sub
jg
push
pop
dec
jmp
pusha
sbb
mov
dec
jne
sub
jmp
mov
mov
std
repnz
sar
lahf
in
mov
scas
inc
push
cmc
xchg
icebp
mov
pop
rorb
inc
pop
in
aas
test
insb
sti
mov
loope
inc
mov
jmp
xchg
fwait
sub
push
mov
xchg
cmp
fs
imul
dec
les
xchg
test
pop
xor
pop
jle
adc
sbb
out
xchg
ret
shr
mov
lcall
in
ror
int3
xchg
test
loopne
fwait
sar
inc
jbe
mov
loop
mov
and
mov
inc
inc
pop
push
mov
sub
xchg
out
mov
sbb
movsl
scas
mov
test
loope
outsl
loope
xchg
mov
push
push
inc
cli
jno
insl
xchg
outsl
cmp
mov
out
mov
xor
sub
pushl
les
or
into
or
dec
sti
mov
mov
lahf
fidivrl
pushl
sti
xor
xchg
inc
jle
pushf
aaa
pushl
or
jbe
shr
outsb
sti
jo
cmp
inc
adc
jge
data16
arpl
aad
fldcw
mov
les
push
sbb
shll
aam
loope
out
data16
or
leave
das
mov
cmp
inc
ds
les
aaa
les
mov
or
inc
sub
imul
xor
and
xor
ss
aam
jecxz
pop
xchg
les
push
push
mov
movsl
test
mov
sub
dec
cs
jnp
inc
stos
push
lods
jle
insb
ljmp
movsb
mov
test
jl
lods
inc
mov
xchg
icebp
dec
lods
inc
mov
mov
cli
sub
cmp
jg
or
repz
insb
mov
es
sub
dec
mov
pop
inc
das
cs
xor
add
fs
sub
push
lods
cmp
push
lods
inc
and
push
shrl
pop
lods
pop
adc
cmp
dec
adcl
push
jle
jmp
ret
pop
stc
out
mov
insb
insb
stc
add
mov
and
pop
add
fildl
pop
lahf
test
fwait
enter
dec
sub
add
push
sbb
jno
fldt
sub
fdiv
imul
push
sbb
fcomi
imul
ror
pop
les
insl
pop
or
xchg
add
cltd
or
mov
xor
mov
or
fildl
push
mov
lods
jae
out
fnstcw
mov
inc
sbb
pop
arpl
xchg
jno
add
popf
adc
pop
cmc
mov
std
clc
jns
fsubrl
fcomi
mov
xchg
fcoml
fcomi
cmpsb
xor
into
test
sbb
mov
ret
push
into
add
pop
repz
imull
push
sar
je
mov
shrb
mov
scas
xor
js
mov
stc
shrb
lods
jae
push
sahf
sub
cli
add
hlt
xor
mov
push
mov
pop
cmp
xor
inc
xor
pop
inc
imul
push
push
mov
pop
xor
jmp
in
lret
push
mov
je
mov
je
xchg
xor
xchg
xor
adc
mov
mov
rclb
add
push
dec
mov
sbb
xchg
mov
mov
cmp
leave
mov
icebp
test
into
jae
jns
stos
jmp
sbb
loope
mov
xor
jmp
mov
pushl
mov
sub
sarb
mov
mov
dec
stos
movsl
shrl
jmp
push
stos
test
sub
aad
dec
xor
jmp
int3
dec
loope
movsl
xor
js
mov
push
xorl
jmp
dec
aaa
push
shrl
jmp
mov
jmp
scas
jae
inc
mov
je
outsb
sarl
stos
sti
sti
je
xor
popf
jp
mov
jno
mov
aas
test
mov
data16
fstpt
sbb
loope
dec
aaa
gs
cmp
int3
push
fldln2
es
cmp
push
mov
add
and
inc
xor
cld
je
xor
sti
je
xor
mov
mov
jo
cld
cmp
mov
push
xorl
jmp
mov
jmp
addr16
loope
push
xchg
cld
or
pusha
imul
out
pop
scas
jmp
les
je
mov
je
mov
inc
inc
mov
fistpl
stc
mov
jne
mov
scas
mov
insb
sahf
xchg
test
lods
xchg
scas
das
xor
mov
mov
cld
mov
scas
mov
insb
sahf
xchg
aad
je
scas
xchg
scas
das
xor
mov
dec
fisubs
scas
mov
stos
jle
call
inc
inc
jo
mov
ljmp
insb
sahf
xchg
enter
or
sbb
mov
dec
mov
jp
call
inc
inc
jo
mov
ljmp
insb
sahf
xchg
cmpsl
push
cs
jp
mov
jp
call
inc
inc
jo
mov
idiv
mov
scas
mov
insb
sahf
xchg
cmpsl
push
popa
push
sub
cmpl
cmp
sahf
mov
aaa
jmp
je
fisubs
scas
mov
ja
call
inc
inc
jo
mov
adc
jmp
inc
imul
dec
mov
les
test
jae
stos
jg
int3
add
notl
lods
inc
inc
pop
xlat
mov
js
stos
jmp
xor
orl
sti
inc
inc
pop
xlat
mov
pop
push
stos
jmp
nop
sub
inc
roll
jmp
dec
mov
aas
outsb
enter
mov
je
stos
jmp
dec
cmp
je
mov
sti
xchg
pop
aaa
scas
pop
xchg
test
push
scas
jmp
scas
jecxz
push
xor
js
sub
push
and
popf
js
mov
ss
scas
jmp
scas
ds
aad
jmp
inc
mov
je
push
push
xor
jns
sbb
push
mov
push
mov
aas
jno
cld
subb
loope
dec
jmp
or
scas
jl
cs
pusha
outsl
aam
and
cld
decl
mov
pop
push
scas
inc
xchg
push
testb
mov
pop
popf
popf
and
push
incb
push
movb
dec
dec
stc
cmp
scas
dec
push
mov
je
outsl
or
push
pop
ja
sbb
push
call
je
mov
je
mov
je
mov
je
mov
je
mov
je
mov
je
mov
orb
les
and
pop
mov
mov
stos
jmp
dec
mov
je
je
cld
sub
insb
cmp
bnd
stos
jmp
mov
jmp
dec
mov
je
mov
je
mov
or
xor
sub
pop
scas
add
scas
into
or
sbb
jmp
sbbb
jnp
mov
jp
cmp
adc
pop
mov
xor
popf
add
das
aad
mov
sbb
stos
cmp
inc
jmp
in
mov
push
or
push
add
test
fidivs
fs
dec
xchg
pop
cmp
in
pop
insl
sbb
jb
lods
push
jae
cld
xor
and
aas
test
bnd
adc
mov
push
cmp
inc
push
cs
aam
stc
mov
out
inc
fistpl
xchg
sub
lahf
jmp
inc
adc
fsts
fs
sbb
das
jge
cmp
push
pop
dec
cmp
jmp
cmp
loopne
mov
fildll
xbegin
sbb
add
sub
inc
pushf
lcall
mov
xlat
nop
pushf
scas
mov
and
inc
jbe
adc
leave
jp
pminub
mov
dec
decl
cmp
mov
mov
sahf
pop
jb
adc
arpl
push
push
push
jg
divl
pop
xor
mov
add
fcompl
add
dec
stos
push
into
sub
or
cmc
xchg
inc
mov
in
xor
es
inc
xchg
xor
popf
insl
rcll
repz
and
xchg
mov
push
ljmp
fimuls
jge
xchg
sahf
sub
rorl
lcall
push
pushf
jge
std
jnp
mov
mov
dec
xchg
je
cmp
out
cmp
push
je
cmpb
out
pop
mov
dec
test
gs
out
lea
and
inc
jmp
pop
pusha
mov
or
lahf
popa
into
aam
xor
leave
and
in
je
stos
jmp
sub
cmp
clc
cmp
inc
jb,pt
pop
lea
mov
ret
jns
pop
cmp
addl
xor
mov
mov
mov
lods
cwtl
and
out
or
push
lcall
les
add
pop
ret
jns
jae
ja
in
mov
and
and
push
sub
into
xchg
into
push
movsl
ds
fcompl
les
dec
or
mov
jle
and
sbb
and
arpl
pop
xchg
test
push
jg
mov
outsb
pop
mov
orb
into
std
pop
adc
outsb
leave
insb
outsb
xor
addb
fxch
xchg
sub
push
not
push
mov
fisttps
jae
and
add
add
add
pusha
inc
add
pusha
inc
add
jo
add
cld
add
cmp
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cld
add
hlt
sti
add
mov
add
outsb
incb
add
incb
add
std
add
jle
add
aad
add
xchg
add
add
mov
add
ljmp
add
std
add
sahf
incb
add
incb
add
add
add
incb
add
incb
add
add
add
add
mov
add
add
incb
add
incb
add
incb
add
incb
add
add
incb
add
add
incb
add
add
out
add
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
gs
insb
xor
cs
insb
add
gs
insb
xor
cs
insb
add
gs
xor
fs
insb
add
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
popa
addr16
insb
insb
add
jbe
jo
xor
cs
insb
add
insb
ja
jo
cs
insb
add
fs
insb
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
incb
add
add
add
incl
add
add
add
incl
add
add
add
add
add
add
xor
add
add
add
incl
add
add
add
add
add
add
imul
add
jnp
add
add
add
mov
add
add
add
mov
add
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
add
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
jb
je
push
add
ja
jae
jb
outsb
je
inc
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
inc
jb
popa
je
push
imul
inc
add
add
push
popa
jae
dec
gs
inc
jb
add
add
popa
addr16
imul
dec
arpl
push
imul
push
jne
dec
popa
jo
gs
imul
popa
jb
push
gs
imul
push
dec
inc
gs
gs
dec
gs
add
add
push
gs
imul
outsl
arpl
jae
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
or
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
outsb
popa
insl
gs
gs
outsl
outsl
insb
jae
or
and
je
jo
cmp
xor
and
and
and
gs
jb
jo
imul
gs
outsl
outsl
insb
jae
jbe
xor
fs
jb
jo
imul
and
cmp
sub
outsb
je
data16
je
and
jo
imul
and
arpl
imul
imul
jae
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
and
and
and
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
or
and
and
and
and
inc
arpl
jae
cmp
jae
and
ds
and
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
cmp
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
or
add
add
add
and
add
add
add
add
add
add
add
add
add
add
sbb
add
incl
add
incl
add
incl
add
incl
add
add
incl
add
add
incl
add
incl
add
incl
add
add
incl
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
add
incl
add
add
incl
add
incl
add
add
add
incl
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
add
incl
add
incl
add
incl
add
add
incl
add
incl
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
add
incl
add
add
incl
add
incl
add
add
add
incl
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
add
incl
add
add
incl
add
incl
add
add
add
incl
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
cwtl
popf
enter
add
add
add
sub
push
dec
int
sub
xchg
pop
stc
xchg
das
cli
dec
enter
xchg
inc
mov
xor
adc
cld
inc
sahf
jmp
rorb
aas
inc
pop
jge
push
bound
dec
fistps
xchg
jle
add
shrl
adc
mov
add
jg
cmp
jecxz
rorb
mov
loopne
leave
mov
xor
movsb
sbb
mov
lods
cmpsb
cld
aaa
push
push
lods
cmpsl
sbb
add
std
dec
mov
sbb
leave
xchg
mov
jns
xor
adc
push
pop
xchg
push
jmp
in
test
idivl
das
jge
inc
lret
test
sub
mov
mov
movsb
mov
aam
push
mov
andl
jp
imul
js
cmp
outsb
out
push
out
pop
cli
pop
jle
cld
daa
mov
push
pop
ljmp
mov
xchg
addr16
xchg
cmpsb
pop
fs
push
aaa
fwait
orb
mov
ficoms
in
in
ficoms
cmpsb
repz
add
mov
cmp
push
ja
xchg
push
adc
jb
dec
sbb
xchg
clc
das
orl
jo
mov
fstpl
fwait
rolb
inc
add
js
pop
fnstenv
adc
les
adc
adc
ss
scas
addr16
adc
clc
push
sahf
push
inc
scas
mov
push
ror
adc
subb
loop
cmp
in
mov
mov
movsb
inc
scas
mov
sub
inc
sbb
das
lds
add
bound
ret
dec
push
out
and
xchg
push
sub
add
cmpl
jne
push
xor
clc
add
sti
dec
mov
hlt
xor
pop
sbb
test
add
sti
data16
xor
add
push
xlat
mov
cld
mov
popa
mov
jnp
rcll
add
xchg
negb
mov
stos
push
cwtl
ljmp
sub
sar
xor
hlt
push
push
cltd
arpl
in
in
inc
fwait
or
mov
xchg
push
add
les
jg
xchg
rorb
out
sbb
dec
pop
sbb
and
inc
test
mov
cmpsl
mov
and
cmpsl
dec
sbb
or
cmpb
mov
lret
cmc
push
xor
ljmp
mov
inc
pop
xchg
xor
xorl
cmpxchg
jns
inc
filds
and
mov
xlat
imul
mov
push
dec
pop
fwait
dec
xorb
or
ljmp
les
jo
aam
xchg
in
and
jae
mov
mov
mov
push
cltd
and
test
lods
add
notb
mov
loope
out
sub
or
and
fnstenv
pop
sbb
fucomip
popf
leave
push
arpl
lret
lods
push
popa
push
mov
aad
pusha
sbb
pop
out
xor
dec
adc
push
mov
xchg
stos
xchg
cmc
xchg
leave
adcl
inc
push
xchg
addr16
adc
and
xchg
pop
fldt
dec
dec
mov
ucomiss
push
sub
loope
pop
sbb
pusha
push
or
sub
ret
mov
mov
loopne
sahf
mov
std
and
stos
fsubs
sbb
fsubl
out
inc
sbb
repnz
add
orb
mov
inc
shlb
das
mov
push
cmpsl
loopne
jae
jge
push
aas
pop
push
lret
lea
push
movb
or
mov
fistpll
cs
fwait
mov
jno
test
mov
into
mov
add
test
push
inc
repnz
ret
dec
clc
mov
jmp
clc
xor
rolb
aad
push
xchg
dec
cmp
xor
cmp
cld
pop
jmp
addr16
insb
fwait
mov
sbb
fucomip
out
xchg
inc
in
sti
das
mov
sub
in
outsl
rcl
shrb
or
inc
imul
sub
jle
enter
push
in
push
cmp
pop
add
sbb
test
cmp
call
and
movsl
sbb
pop
testb
adcl
jmp
jno
mov
add
sbb
adc
testb
mov
cmp
arpl
push
or
fisubl
adc
ss
adc
push
clc
or
dec
pop
shrb
mov
fwait
push
cmpsl
cwtl
rcrl
hlt
stos
ljmp
cwtl
repnz
scas
sbb
and
aaa
movsl
hlt
pop
dec
sub
xor
mov
pop
jmp
mov
add
rcl
push
jmp
mov
push
fsubr
gs
push
xor
xor
inc
lock
sbb
lahf
xchg
dec
jp
ret
imul
mov
push
cmp
negb
and
mov
ss
ds
push
mov
sbb
push
jno
ret
add
mov
xor
push
mov
mov
out
int3
cmp
es
sub
imul
sub
das
sub
test
je
ljmp
fwait
inc
cltd
stos
fmul
mov
sbb
es
jbe
mov
ljmp
aaa
push
ds
xor
stos
xor
jg
sti
vcvtdq2ps
outsl
dec
mov
dec
cmc
int3
cmp
mov
xchg
stc
int3
jp
outsb
outsl
cli
cmc
adc
pop
fisubl
mov
lcall
addl
imul
and
cmc
mov
mov
lds
test
mov
push
in
add
pop
push
xor
gs
in
mov
sbb
or
pop
mov
cmp
stos
insl
and
int3
imul
aaa
mov
gs
pop
popf
inc
shl
sub
or
inc
call
pop
mov
jns
push
mov
jmp
xchg
push
sbb
inc
add
popf
gs
cs
cmpsl
scas
mov
pop
pop
dec
push
dec
cmp
in
ljmp
mov
lcall
movsb
and
les
pusha
lods
and
dec
insl
cld
rcrb
push
addr16
mov
insl
inc
mul
mov
test
sub
xlat
xlat
xchg
mov
push
decb
jae
xor
mov
leave
dec
sti
mov
adc
xchg
je
orb
add
pop
add
fcmovnu
push
in
push
cmpsb
and
je
cltd
fs
out
lock
mov
and
in
and
stos
xchg
sahf
aas
imul
jns
xor
sarb
test
add
movsl
add
fwait
jmp
movsl
push
xor
out
nop
jl
jmp
loop
divl
aam
inc
sahf
out
xchg
pop
xchg
mov
inc
fidivs
cmpsb
mov
pop
dec
scas
imul
fs
ljmp
jne
pop
mov
push
nop
push
add
movb
hlt
lahf
or
mov
push
lock
cmc
adcb
les
inc
fistl
jno
mov
mov
xor
es
jnp
xor
ds
xlat
push
fldl
popa
test
lcall
imul
ja
mul
push
gs
cmpsl
frstor
cli
addb
iret
fiaddl
adc
ret
xor
xor
in
push
arpl
js
in
sub
jle
cmp
sub
test
adc
dec
jmp
mov
push
in
outsb
pop
idivb
add
jg
jle
dec
adc
fcoml
cmp
push
xchg
jle
int3
repz
icebp
pop
push
pusha
pushf
lret
hlt
jnp
in
inc
mull
mov
jl
mov
lds
pop
push
sahf
fcom
cmp
cmpb
add
stc
mov
loop
das
aaa
lds
sbb
loope
adc
ficompl
movsl
int3
sarl
push
xor
sbb
movb
icebp
enter
je
xor
sub
hlt
xchg
fbld
adc
and
rcr
shlb
or
aas
and
inc
in
mov
lret
pop
mov
and
sar
and
and
jbe
dec
insb
std
lahf
fldl
das
dec
ljmp
fstp
into
dec
mov
stos
push
cmpsl
fistpl
push
std
icebp
insl
mov
repz
xlat
insb
loope
lcall
sub
cld
test
jp
xchg
jb
sub
imul
push
lock
je
push
xchg
mov
add
notl
pop
mov
loopne
xchg
or
cltd
fistps
cltd
stos
stos
in
faddl
enter
mov
push
inc
mov
cld
mov
pop
ficoms
lods
decl
cmp
popf
cld
shl
xor
inc
aam
out
inc
mov
sbb
in
iret
mov
lret
and
pop
cmp
clc
scas
pushf
xlat
jbe
out
jbe
enter
mov
inc
or
lret
xchg
sub
sbb
movsl
xor
arpl
pop
xlat
mov
aam
xchg
mov
addr16
jns
pop
adc
mov
ror
and
or
mov
jne
pushl
and
or
mov
jb
adc
lret
pop
outsb
test
lods
popa
test
es
xchg
cmp
mov
pop
xor
aaa
mov
es
sbb
dec
in
jmp
bound
sub
aas
pop
dec
adc
or
ret
bound
dec
mov
dec
mov
rorl
cmp
xlat
xchg
arpl
mov
rol
cwtl
lods
xlat
dec
iret
scas
dec
lret
push
pop
adc
sub
inc
stos
adc
aad
or
jg
inc
pop
mov
cltd
mov
inc
push
jp
loopne
pop
or
xor
aaa
repnz
movsl
xchg
mov
push
gs
in
xchg
and
ja
or
lods
into
aas
mov
sub
dec
aad
cs
pop
mov
xor
dec
mov
mov
cmp
pop
sub
adc
cmp
das
int
leave
repnz
into
dec
popa
jl
sub
mov
insl
add
mov
jae
dec
lock
inc
add
xlat
std
mov
xchg
rcr
cmp
or
inc
mov
mov
sub
test
test
and
stos
push
cltd
jae
test
mov
mov
dec
rcrb
jbe
imulb
sub
ret
rcl
or
ret
jl
inc
xor
push
enter
pop
mov
inc
jnp
push
sbb
mov
or
mov
cli
xor
sbb
test
sti
xchg
adc
pop
je
dec
xorl
jno
cmp
dec
mov
lret
mov
aad
inc
mov
or
or
test
mov
add
cmp
pushf
xchg
nop
adc
xor
loop
arpl
inc
das
loopne
mov
js
lock
jmp
adc
cmpsl
add
mov
in
push
in
fadds
jno
leave
mov
or
popf
cs
dec
pushf
sbb
add
sub
hlt
xor
divl
pop
dec
cli
or
or
aas
jmp
dec
aad
notb
sub
call
inc
jae
test
jbe
pop
dec
jle
ret
mov
push
xchg
jae
subl
jp
test
push
push
ljmp
mov
pop
jmp
aaa
adc
adc
pop
int
push
jp
mov
jns
repz
or
dec
jecxz
xchg
adc
push
aas
add
into
mov
push
popa
dec
pop
mov
sbb
ss
cmp
adc
dec
inc
pop
jbe
xchg
lock
fidivrl
fsubl
mov
test
movsl
lcall
mov
jbe
dec
jo
nop
fistps
cmp
outsl
out
and
dec
mov
sub
sbb
xchg
push
add
in
cmpsl
out
imul
arpl
or
je
push
adc
scas
sahf
ja
or
lds
adcl
or
popf
sbb
mov
les
jmp
push
out
mov
imul
roll
mov
jns
and
insl
movl
cmp
gs
and
arpl
cmc
sbb
pop
subb
jo
xor
mov
adc
lcall
pop
ja
fwait
mov
adc
adc
xchg
test
xchg
ja
or
add
dec
mov
push
add
les
sub
aas
pushl
pop
xor
stos
icebp
xor
mov
fadd
cmpsb
or
shlb
sti
mov
pop
pushf
or
xor
lds
test
and
cmp
sub
js
adc
in
dec
sbb
push
sbb
xchg
push
outsb
xor
xchg
sbb
lcall
inc
jne
or
jl
fcompl
cmc
shlb
inc
pushf
sahf
in
lret
sbbb
test
adc
fidivrl
cmp
dec
mov
callw
sub
sbb
sub
cmp
fnstcw
pushf
mov
push
int3
cmp
jmp
popa
inc
call
leave
pop
daa
pop
pop
idiv
repnz
inc
adc
adc
test
addb
and
mov
ror
xchg
pop
std
mov
xor
pop
fwait
call
imul
pop
pop
jle
and
adc
and
xor
out
in
shrl
mov
add
outsl
in
insl
imul
xlat
mov
test
mov
push
jb
adc
push
add
insl
sub
xchg
and
adc
lods
cwtl
stc
mov
cmpsb
int3
loop
pop
mov
cld
mov
cwtl
and
stos
loope
movsl
mov
mov
es
mov
jne
mov
dec
xchg
dec
pop
aam
xor
stos
fldl
and
push
das
inc
lret
imul
js
negb
fwait
push
adc
adc
and
lret
mov
adc
in
dec
rorl
in
mov
push
push
call
outsb
mov
outsl
fwait
cmp
xor
jecxz
xor
in
sub
fwait
loop
pusha
or
insl
adc
pop
pop
add
mov
mov
sarl
jb
push
sbb
jmp
mov
xor
frstor
out
dec
int
fistpll
fdivs
test
add
mov
mov
push
es
push
push
inc
inc
js
mov
stos
or
cmc
popa
fstpt
dec
mov
push
imul
jns
mov
push
cmp
jnp
pop
fwait
mov
call
jle
mov
and
je
pop
inc
sbb
adc
xor
lea
test
mov
aam
mov
mov
jmp
ficomps
popf
xchg
xchg
popf
popa
push
adc
dec
shrb
cmpsb
daa
jecxz
lahf
push
push
xchg
jge
cmp
cmp
cmp
arpl
adcb
loopne
orl
jecxz
fwait
push
jg
mov
lea
push
jns
push
mov
arpl
div
push
loop
aas
adc
stc
daa
adc
and
test
fs
int3
add
js
xchg
data16
insb
andl
pop
mov
inc
and
mov
pop
nop
add
inc
add
adc
pop
add
cmpsb
mulb
inc
jl
outsb
lds
fnstenv
inc
dec
pop
mov
cmpsl
cmpsb
dec
pop
add
add
stos
adcl
inc
lret
xorl
out
cmc
cmpsb
fmul
mov
call
push
stos
dec
push
mov
pop
cmc
vcvtsd2si
cs
daa
jae
mov
loopne
mov
fs
push
xor
adc
ficoml
push
inc
mov
lret
push
adcl
inc
or
jno
push
cli
jns,pt
lods
xchg
and
lods
hlt
pop
movsb
rcrl
jmp
cld
inc
xor
scas
out
mov
leave
cmc
imul
rorb
arpl
jge
xchg
sub
or
cmc
outsl
inc
and
xchg
inc
enter
mov
adc
popa
insb
add
inc
or
mov
aaa
adc
mov
mov
ss
sub
jb
jnp
lds
cmc
shrb
pop
in
mov
fistl
scas
push
sub
subl
cmp
mov
test
jmp
or
cs
sub
mov
jae
out
jnp
fnsave
dec
push
sub
repz
cltd
mov
pop
sub
cltd
js
filds
dec
shlb
sub
fcomp
ljmp
jae
popa
fiadds
push
sub
das
xchg
clc
cli
sub
cmp
insb
repnz
in
fdivs
push
sar
leave
std
xchg
lret
mov
or
test
ret
sbb
out
test
jmp
ret
sahf
lds
rclb
lret
fiaddl
push
ljmp
mov
and
inc
test
or
and
movb
lret
cwtl
jl
jnp
popa
mov
cmp
sub
add
hlt
fisubrl
inc
test
movsb
dec
mov
bound
leave
ja
int
xchg
daa
gs
cmc
mov
ds
out
mov
push
xor
mov
dec
fadds
out
xor
adc
inc
pushf
adc
and
js,pn
insb
enter
mov
and
mov
add
sub
mov
mov
les
jmp
mov
jne,pn
mov
jne
fidivl
dec
in
hlt
xchg
push
mov
fistl
sub
in
jg
adc
jbe
imul
or
cmc
movsb
scas
mov
pop
jbe
xor
mov
movsl
jns
call
sbb
loope
xor
mov
cmp
cmp
mov
orl
cmp
int3
mov
mov
mov
fs
xchg
repz
enter
cmpsl
decl
movsl
sbb
test
dec
pop
and
adc
stos
push
push
test
rorb
xor
and
hlt
and
daa
test
cmp
add
aad
scas
ret
mov
mov
dec
adc
out
dec
adc
push
add
pop
insb
neg
in
or
mov
imul
lods
icebp
jge
xor
xlat
xchg
cmp
loop
aam
call
lcall
adc
pop
mov
or
sub
jae
dec
adc
sti
mov
dec
out
shlb
cmp
cmc
inc
mov
sar
xor
sbb
loop
in
dec
mov
incb
adc
push
aaa
xor
lods
rolb
push
pushf
xchg
in
cs
dec
inc
lods
adc
and
aaa
aas
lds
cs
in
pushf
jb
jb
lcall
roll
xchg
push
cli
mov
mov
jl
loop
inc
mov
pop
jmp
push
dec
inc
mov
pop
push
loop
push
test
adc
adc
mov
pop
scas
fsubs
movsb
pop
jns
mov
or
dec
pop
mov
ficompl
ds
adc
xor
int3
imul
negl
inc
sub
inc
in
dec
bound
jp
adcl
or
adc
aas
dec
sbb
sbb
out
mov
shll
test
rorl
or
popa
out
xor
fistl
lock
sbb
adc
gs
cs
pop
mov
mov
jge
inc
jns
pop
add
test
lret
inc
scas
repnz
iret
popf
in
ljmp
jecxz
mov
js
jg
fiaddl
xchg
dec
mov
mov
test
inc
xchg
jl
mov
ja
add
addr16
xchg
sbb
std
aas
pop
or
mov
ret
xor
icebp
das
mov
ljmp
in
xor
es
adc
or
sbb
fs
pop
ret
or
stc
jmp
std
jmp
sbb
jp
repz
lock
bnd
cmp
das
ds
xor
movsb
incl
es
lock
hlt
sbb
sbb
lods
mov
add
adc
loopne
stos
rcrb
xchg
xor
cmp
dec
push
out
add
ficoml
sbb
orl
les
int
out
ss
adc
repnz
xchg
and
ds
out
shll
and
loopne
jne
mov
jne
push
mov
xor
jns
inc
scas
cmpsb
cmpsb
xor
mov
sub
mov
and
out
push
or
push
lret
rcll
xor
adc
dec
icebp
and
ljmp
xor
push
mov
inc
lods
scas
pop
ss
sbb
jmp
dec
sub
arpl
sahf
imull
push
and
call
cmp
aas
subb
lods
imul
mov
mov
ror
movb
imul
ret
jnp
adc
testb
mov
lods
int3
and
cltd
sub
pop
xlat
push
push
aam
cmp
sub
xor
insb
jl
int3
adc
shll
cs
daa
inc
insb
iret
adc
movsb
adc
xor
mov
mov
mov
pop
inc
popf
lds
inc
sbbb
hlt
or
sub
orb
xor
xchg
dec
arpl
inc
jg
lcall
aas
add
ds
add
push
out
mov
cmp
mov
cltd
mov
sarl
or
sbb
inc
push
sbb
add
mov
dec
push
pusha
sub
add
loop
testl
jmp
adc
push
xchg
filds
loop
ret
mov
add
jnp
fbstp
or
vmovupd
mov
xchg
sbb
fldenv
pop
cwtl
mov
cmp
pop
adc
jmp
out
mov
subb
aaa
and
xchg
pop
pop
xor
and
sti
xchg
push
push
fmuls
add
push
xor
and
mov
or
and
mov
push
pop
sub
fildl
push
pop
dec
scas
lret
mov
jne
inc
pop
sbb
fsubrl
mov
sbb
sar
pop
xlat
push
fs
adc
sbb
jp
mov
in
push
insb
pop
adc
test
pop
xchg
xchg
pop
pop
or
je
out
popf
push
or
mov
add
inc
aas
out
je
or
mov
or
cld
mov
in
and
mov
jb
dec
and
cltd
xor
imul
adc
fs
sar
push
arpl
lret
xor
sbb
jae
imul
in
xor
divb
dec
insb
not
xchg
push
notl
loope
sbb
cmp
sbb
or
insb
mov
daa
add
rcr
dec
xchg
ret
je
ret
push
mov
xchg
adc
sarl
xchg
cmp
test
les
mov
or
iret
or
fsubrl
hlt
xchg
xor
ret
adc
scas
fdivs
xor
std
mov
dec
adc
mov
sahf
pop
mov
cmp
sub
stos
xor
or
sbb
inc
fldenv
push
fs
ljmp
nop
mov
imull
xchg
jg
push
rclb
and
test
in
das
ret
aas
mov
icebp
mov
rorb
out
je
xchg
and
mov
rclb
pop
pop
in
std
cmc
sbb
les
insl
fadd
loope
fimull
pop
xchg
imul
jecxz
xor
sbb
add
jnp
and
cltd
adc
shrb
mov
pusha
cld
push
mov
fstps
sbb
dec
push
and
sub
fsubs
ficomps
fdivs
and
les
mov
mov
adc
mov
inc
mov
or
push
jmp
add
and
push
adc
cwtl
mov
and
and
or
ret
aaa
jmp
inc
test
stos
lfs
fstp
cmp
sbb
mov
imulb
push
inc
stos
in
mov
arpl
mov
mov
cmp
add
out
pusha
in
push
xchg
sub
enter
mov
adc
and
mov
sbb
xchg
mov
addl
pop
jle
or
je
enter
ret
xchg
dec
mov
pop
pop
adc
daa
dec
test
cmp
icebp
loop
cmp
mov
push
adc
dec
ljmp
jmp
aaa
sub
stos
shll
or
jmp
orl
in
cmp
das
popa
xorl
dec
mov
mov
sub
sub
jo
and
call
and
or
lods
xor
inc
xchg
sub
pushf
or
mov
js
mov
lcall
jbe
dec
inc
cmp
movsl
and
sub
jne
add
xor
fisttps
std
orl
mov
mov
popl
nop
push
in
daa
mov
xor
pop
in
adc
jae
out
arpl
mov
das
popf
aad
iret
lods
aaa
in
mov
subl
dec
xchg
not
lahf
cltd
mov
fidivl
dec
push
dec
andb
mov
sbb
lds
pop
addb
and
xchg
push
sbb
jl
xchg
jbe
pop
stos
jle
inc
ret
cmp
int3
movsl
mov
add
jns
xchg
ja
xchg
jg
ljmp
or
dec
or
mov
mov
xchg
movsb
insl
popa
mulb
das
mov
movsb
shr
push
data16
je
pop
mul
sbb
inc
scas
pop
jno
add
hlt
jmp
or
push
out
fisttps
bound
add
dec
xor
nop
pop
adcb
ja
fs
aaa
cltd
inc
js
sbb
sbb
jecxz
and
add
hlt
enter
jle
test
rclb
jl
iret
mov
xchg
pushf
jmp
add
lcall
adc
inc
dec
lds
push
push
inc
add
out
test
aaa
adc
and
jg
aas
mov
loope
sbb
mov
inc
sahf
and
ljmp
sbb
jmp
add
loop
mov
mull
pop
les
ret
jecxz
pop
inc
mov
int3
subl
jecxz
push
xchg
aad
hlt
cli
jb
jo
fsubrl
stos
adc
repnz
mov
mov
lds
mov
mov
push
or
xchg
loope
jns
gs
dec
mov
arpl
pop
xor
ljmp
fucomip
stos
sub
lcall
cli
ds
scas
scas
dec
mov
shr
mov
mov
lcall
lahf
sub
jb
test
leave
ret
dec
shll
rorb
or
test
or
jo
sbb
pop
mov
or
les
sub
mov
jne
popf
filds
enter
mov
jecxz
sbb
icebp
jb
mov
insl
flds
in
or
sbb
lret
sub
jge
push
jne
ja
imul
in
fistl
stos
mov
adc
jle
js
add
lret
adc
test
or
mov
leave
cmp
dec
mov
mov
sub
xchg
cmp
mov
cwtl
daa
pop
ror
mov
ret
test
sub
es
xchg
fnstsw
dec
mov
lods
add
data16
test
pop
stos
out
pop
mov
xor
xor
push
add
sbb
fdivl
mov
push
mov
add
dec
mov
adc
jne
pusha
mov
sbb
pop
in
inc
aad
repnz
stos
ds
jno
mov
lods
divb
mov
imul
and
jle
add
mov
and
xchg
pop
mov
inc
mov
mov
jmp
jb
mov
and
push
sbb
test
mov
andb
cmpl
jnp
fsubrl
lahf
outsb
ss
cmpsb
jb
sub
xlat
je
loop
mov
inc
dec
xor
cld
std
sarb
jg
lahf
pop
push
lods
push
xchg
les
cltd
dec
pusha
mov
xchg
pushf
lret
inc
sub
addl
outsl
pop
push
or
pop
push
and
add
and
push
mov
mov
icebp
pusha
mov
shr
pop
stc
fldenv
add
pop
xor
mov
xor
hlt
push
push
cmpsb
outsl
sub
pop
jnp
into
mov
add
lea
or
or
cmp
ds
test
push
fidivrs
or
aad
aam
test
and
mov
pop
fcomip
pop
jle
sub
fnclex
cs
adc
jae
iret
fsts
ja
xchg
stos
inc
call
sbb
nop
cmc
js
mov
cwtl
fiaddl
in
inc
mov
xchg
push
cmp
or
pop
enter
push
fs
fcomps
popl
push
sarl
adc
or
je
xchg
rcll
lock
lret
arpl
fldcw
inc
fistps
fistpl
xchg
fwait
cld
jns
cld
mov
mov
push
xchg
or
sub
out
mov
jno
or
inc
pop
stc
sbb
inc
jae
ficoms
leave
ret
xchg
lods
jl
xor
mov
pop
lret
inc
test
aad
testl
sub
or
ss
andb
inc
or
mov
fdivrl
add
lret
call
mov
inc
aam
inc
and
repz
sub
in
mov
icebp
repz
lahf
cmpsl
xor
jecxz
mov
cmp
ret
ret
lods
and
cmp
sbb
cmp
enter
xor
lock
inc
pop
cltd
sub
cld
cmp
das
loope
pop
inc
dec
sbb
mov
pop
dec
mov
subl
inc
inc
lea
jae
inc
cli
flds
outsl
cmc
data16
cwtl
stc
cmpsl
dec
icebp
push
lret
adc
mov
xor
enter
int3
xor
xchg
loope
push
cwtl
adc
push
in
lods
iret
fidivl
sub
int3
jge
xchg
mov
mov
lea
das
gs
mov
cmp
pop
mov
xchg
xchg
jge
btc
dec
xchg
out
push
fsubl
roll
scas
pusha
ds
test
or
and
bt
sahf
xlat
jno
lods
rolb
div
add
jle
mov
pop
xchg
mov
and
adc
jne
push
hlt
bound
cmc
xchg
in
xchg
in
push
fnstenv
int
adc
movsl
mov
adc
nop
mov
out
push
sti
mov
out
int
cmc
push
data16
stos
fcomip
and
cmp
cmp
mov
popa
xchg
insl
xlat
in
cli
inc
inc
arpl
cmpsl
xor
fdivr
imul
or
imul
add
jnp
pop
outsb
sub
jg
sbb
mov
stos
sub
add
inc
lock
into
xor
lods
push
and
pop
das
cmpsb
dec
les
cmp
jle
push
movsb
pop
inc
jb
push
shrb
push
mov
adc
lds
in
popa
jle
hlt
das
mov
push
imul
mov
jo
cmp
pop
fisttps
adc
sub
mov
add
inc
bound
into
test
jg
or
lds
inc
movsb
jp
int3
call
stc
out
mov
addr16
aam
inc
enter
xchg
or
inc
and
mov
xor
adc
jno
and
xchg
aam
hlt
mov
mov
pusha
stos
jne
xor
mov
in
cltd
mov
mov
add
leave
cli
sti
pop
xorl
mov
adc
adcl
into
mov
sbb
mov
xchg
inc
dec
or
hlt
divl
fistpll
fs
adc
sub
int3
dec
push
add
nop
shll
sarb
enter
jmp
mov
jno
dec
add
imul
clc
stos
mov
inc
mov
push
lahf
pop
popa
adc
push
adc
fldl
push
lcall
dec
add
xchg
lret
pop
in
jns
and
lret
inc
dec
daa
imul
test
add
push
fbstp
mov
lea
lret
hlt
fldcw
iret
inc
sbb
rol
sahf
dec
dec
sbb
out
mov
movsl
cld
cmp
fnstsw
pop
sbb
popa
xor
out
xor
ja
inc
das
pop
lds
int3
test
fimull
sbb
adc
push
xchg
push
or
cmp
outsl
mov
incl
xchg
and
mov
xlat
mov
xchg
frstor
fdivrl
and
add
sbb
sub
out
icebp
sub
cwtl
add
pushf
imul
jmp
das
enter
pop
loopne
test
add
push
push
and
mov
vmptrld
mov
leave
lods
push
sarl
cmp
decb
push
pop
and
push
cwtl
out
nop
addl
mov
fisubrl
in
add
mov
or
js
pop
sbb
mov
pop
push
jb
pop
orl
les
xor
jle
iret
push
jmp
push
push
aas
cmp
mov
dec
mov
data16
pusha
mov
and
sahf
push
outsb
and
mov
pop
pushf
ja
test
mov
ds
lock
out
sbb
les
pop
inc
sub
mov
push
mov
pop
popf
mov
mov
pop
inc
imul
aam
lds
stc
mov
in
aaa
cwtl
stos
repz
fidivs
dec
imulb
xor
cmp
into
pusha
pop
int
mov
and
push
push
loop
je
fidivrl
cmpsb
push
push
hlt
push
lock
add
mov
ja
xchg
xlat
cmp
xor
inc
cmp
mov
mov
pop
xchg
fldcw
cmpsl
enterw
mov
push
or
test
push
sbb
sub
hlt
sar
repz
rcl
xchg
xchg
inc
push
pop
jo
mov
aaa
nop
out
add
jne
andb
jge
sbb
jge
push
outsb
jae
mov
sbb
test
jg
clc
jle
fsts
and
mov
jae
push
cmp
out
cmp
or
testb
sbbb
jne
pop
mov
or
xchg
fisttpll
arpl
mov
lods
add
adc
js
cltd
les
adc
fstpt
and
addr16
lods
icebp
adc
out
das
push
push
scas
inc
nop
xchg
jns
inc
push
test
popf
push
fwait
push
or
dec
cmp
lds
ret
sub
sbb
stos
fsubr
add
mov
mov
mov
cmp
adc
mov
call
push
jns
mov
mov
loop
outsl
repnz
outsl
xor
ljmp
push
mov
or
imul
push
lods
or
bound
sub
pop
mov
out
jge
jp
repz
test
stos
xor
insb
push
cmp
push
adc
or
fadds
add
out
inc
inc
dec
scas
sub
lcall
ret
fs
adc
das
rcrl
lcall
subl
ljmp
and
dec
sti
pop
call
mov
sarb
inc
or
out
or
loope
xchg
dec
std
pushf
cld
bound
push
pop
mov
push
andl
fidivrl
pusha
mov
cs
pop
je
mov
or
and
shl
sti
or
sbb
sbb
push
jbe
roll
push
ss
jnp
enter
xchg
test
cld
xchg
shrb
dec
xchg
inc
sub
out
int
adc
fs
xor
pop
fcmove
fidivrl
jo
xchg
mov
imul
mov
adc
cli
jns
icebp
push
inc
push
xlat
adcb
pop
test
mov
aad
aam
div
xchg
sbb
adc
jmp
or
ljmp
inc
movsl
sar
mov
pusha
pushf
mov
and
out
popf
lods
pop
sub
data16
dec
mov
fwait
cmp
push
in
aad
dec
das
inc
inc
jne
stos
ss
bound
out
jno
jns
leave
sub
mov
pop
xchg
sbb
push
ret
mov
pop
call
enter
sub
pop
lahf
loope
mov
fsubs
and
jge
and
push
inc
xor
mov
and
mov
bound
mov
push
lods
push
jne
xor
sub
popf
js
sbb
mov
testl
add
xor
lret
pop
xchg
ds
repnz
rolb
mov
aad
xchg
ret
jmp
xorl
out
arpl
cmp
outsl
jb
push
and
movsl
add
popa
int3
call
ret
lahf
mov
fsubrl
mov
mov
rcrb
inc
mov
les
inc
dec
mov
lods
mov
sbb
push
or
mov
mov
jns
int
add
pop
add
imulb
ds
icebp
scas
pop
xchg
es
notb
int
arpl
adc
inc
xchg
pop
jns
mov
bound
push
sub
scas
fmull
fnstcw
int
std
sbb
inc
mov
sti
sub
in
add
rol
enter
xchg
enter
xchg
jmp
adc
mov
jecxz
mov
add
mov
xor
dec
jae
mov
jns
sub
addr16
jl
in
or
jnp
mov
mov
std
add
adc
shlb
xor
or
pop
dec
sbb
mov
adc
pop
or
inc
mov
mov
aam
ja
test
in
inc
mov
dec
in
inc
mov
mov
imull
xor
lcall
fs
movsb
inc
sub
jp
xchg
sti
ja
or
mov
xor
xchg
sbb
pop
or
jbe
mov
rolb
push
jbe
std
mov
fnstsw
loopne
or
loop
out
pop
xchg
ret
mov
mov
clc
sbb
jno
dec
shll
cmpsb
aas
mov
mov
sub
cli
xor
stos
xor
dec
mov
jb
out
lods
inc
cwtl
sub
jg
in
jg
jge
loope
scas
idiv
neg
lret
imul
jns
not
inc
or
stos
or
xchg
clc
pop
cmp
mov
repz
divb
lds
out
out
lret
pop
push
fmuls
mov
dec
fs
mov
mov
dec
xor
and
cmc
lahf
lock
stc
pop
aad
jg
pop
jbe
outsl
xchg
dec
ds
ficompl
movnti
imul
je
or
xchg
xlat
rcl
std
iret
sahf
fidivrl
lds
out
xor
mov
ret
fcmovb
fdivrs
inc
filds
pop
ds
sarb
int3
dec
mov
jg
and
ror
rcrb
fiaddl
mov
mov
cld
mov
call
mov
gs
pop
leave
cmp
cs
or
ljmp
and
fwait
mov
js
dec
xlat
jle
test
mov
sbb
jo
xor
lret
mov
out
sub
out
testb
or
jmp
sbb
pop
push
pop
in
fbld
mov
jb
pop
add
mov
xor
dec
in
mov
in
hlt
outsl
cld
sub
daa
cmc
mov
nop
xor
dec
cmpsl
pusha
push
stos
adc
dec
das
pop
mov
xchg
leave
test
cltd
das
stos
dec
pop
jg
xchg
cmp
xor
mov
int3
test
add
jg
icebp
daa
gs
int3
adc
and
push
idivb
cwtl
dec
mov
enter
test
rorl
les
adc
mov
dec
loope
add
sub
push
add
lcall
fcompl
lods
ja
sbb
xchg
mov
mov
popf
cmpsl
flds
push
les
mov
or
jbe
ret
sahf
int3
add
adc
mov
fs
mov
jae
leave
inc
add
mov
mov
xor
icebp
cmc
xchg
data16
mov
xor
repz
mov
mov
push
bound
or
xchg
xor
or
sub
cwtl
cmp
inc
jge
push
or
sbb
dec
pop
xchg
mov
scas
sbb
adc
fstpt
loop
cmpsb
jns
sbb
jnp
jge
push
aam
and
mov
das
fistpll
xchg
pushf
mov
test
cmp
inc
shll
sbbb
mov
sbb
xchg
dec
xor
push
sbb
mov
mov
ja
sarl
jb
loopne
je
xchg
in
mov
cmp
mull
stc
pop
push
sub
pop
icebp
push
iret
icebp
enter
dec
or
jmp
shll
aam
xchg
cltd
aas
sub
xor
mov
loopne
pop
aaa
xchg
aas
clc
lret
test
fdivrl
rolb
mov
mov
repnz
dec
push
push
pop
sbb
mov
imul
sahf
sub
jmp
sub
adc
add
in
mov
test
inc
test
xchg
test
mov
sub
mov
popf
outsl
rolb
roll
pop
add
movsb
arpl
cmp
movsb
mov
jg
negl
stos
out
out
popa
loopne
outsl
sbb
mov
nop
in
rcl
add
mov
xor
faddp
ljmp
outsl
mov
lcall
in
movsl
push
and
pop
jmp
imulb
pop
dec
imul
xor
incb
iret
xchg
sub
dec
cltd
notl
jl
inc
cmpsl
cmc
and
cmpsl
das
nopl
int3
sub
js
inc
test
and
lret
roll
insb
cmp
sahf
jb
sub
decl
push
push
std
imul
xor
sarb
ljmp
jne
in
and
mov
sbb
push
adc
ret
mov
repnz
adc
imul
mov
xchg
test
mov
cmp
cmovp
out
out
insl
clc
ret
dec
daa
jne
xchg
cwtl
inc
imul
bnd
popa
inc
push
cmpb
add
cmp
jae
in
leave
icebp
fwait
movsl
add
dec
jl
push
jne
xchg
mov
jecxz
ja
enter
mov
stc
sbb
inc
push
in
add
push
sbb
ret
nop
pop
sub
imul
jne
ret
adc
pcmpeqd
xor
sbb
xor
or
cld
daa
sbb
inc
mov
jne
pop
cwtl
mov
repnz
mov
pand
push
cmp
outsl
out
int3
push
xchg
mov
into
push
in
mov
adc
dec
jmp
jno
loop
daa
icebp
adc
jecxz
pop
icebp
pop
sub
pusha
adc
sbb
jae
cmp
xchg
push
and
inc
dec
lahf
add
cmp
test
xor
cwtl
popa
cmpsb
push
out
ja
adc
sbbl
fwait
mov
ret
mov
add
push
adc
xor
xchg
push
pop
push
stc
or
fdivs
cld
lret
pop
dec
inc
and
sub
dec
and
and
dec
test
mov
inc
sub
outsb
addl
lods
out
xor
jnp
inc
mov
ss
stc
jns
movsb
ret
push
test
inc
fcomp
pop
push
shr
mov
pushf
jnp
les
mov
mov
loopne
inc
or
xor
loop
inc
out
push
je
adc
rorb
adc
fsub
aaa
push
fisttpll
lret
sti
pop
inc
add
sbb
push
out
mov
out
push
fisttps
scas
adc
nop
int3
add
int3
xchg
cmpsl
sbb
incb
add
xchg
cmp
mov
pushl
movsb
cmpb
nop
fisubrl
or
mov
bound
loopne
cs
jns
rorl
pop
test
cwtl
lahf
mov
xor
nop
sbb
or
add
loop
andl
push
jb
adc
mov
pushf
jb
pop
inc
mov
or
aas
cmp
jl
or
fmuls
out
js
and
bound
rolb
dec
in
or
insb
aaa
mov
cld
dec
jnp
fbstp
push
mov
dec
in
push
icebp
cmp
mov
mov
aaa
mov
fcoms
jmp
sbb
inc
push
push
fwait
lds
pushl
fwait
inc
rorb
jl
repnz
je
rcl
jb
sarb
jle
push
jle
aad
lcall
jge
push
in
imull
popf
imul
cwtl
mov
jmp
xor
roll
das
push
inc
push
jecxz
fadds
fnstsw
jge
shll
ret
mov
fwait
gs
testb
push
or
push
ss
adc
jecxz
fwait
hlt
mov
mov
mov
es
pop
jecxz
push
std
mov
jp
add
in
cmpsl
jnp
nop
std
cwtl
je
call
mov
dec
mov
daa
pop
push
or
cli
test
movsl
in
mov
mov
clc
imul
lret
popf
out
inc
add
shrl
pop
push
test
sbb
xlat
push
dec
mov
sbb
mov
push
out
dec
push
loopne
hlt
cmp
rolb
push
stc
xor
dec
loop
cli
scas
dec
adc
lahf
out
pop
mul
ret
jl
and
xor
movsb
in
pop
shl
aad
enter
mov
test
pop
data16
data16
xlat
lret
testb
push
stc
push
lods
rol
or
push
insl
inc
mov
cld
add
cmp
dec
or
xchg
jb
iret
mov
rcll
test
ficoms
in
in
add
fmull
jge
xchg
pop
aaa
adc
fcompl
mov
push
cmp
push
sbb
outsb
dec
jg
pushf
sti
sahf
xchg
stos
mov
fidivl
inc
stc
insb
jl
push
jno
and
or
in
imul
cmp
ja
rcr
dec
rclb
popf
sub
cmpsl
mov
aas
inc
es
bound
push
adc
nop
and
fsubl
jmp
js
push
jne
imul
dec
rsm
imul
xor
add
push
adcb
sub
or
inc
sub
or
int3
cmpsb
cmp
dec
adc
push
rorb
adc
loope
adc
rorb
dec
cmp
ja
xchg
dec
cmc
int3
cwtl
ret
repz
sub
mov
push
notb
dec
mov
dec
xlat
cmp
xchg
sub
jge
lock
fadd
mov
in
jbe
lcall
jne
xchg
mov
xor
stc
lods
repz
sub
call
scas
in
or
out
sub
imul
roll
dec
pop
mov
js
dec
ljmp
push
and
jae
lock
sbb
negl
pop
adc
ja
in
add
jae
rcll
popf
in
add
pushf
movsl
mov
jl
push
arpl
addb
push
leave
inc
pop
std
cmc
sbb
shlb
sub
and
lahf
jne
in
lods
std
sub
xor
cmc
cmp
mov
cmc
std
and
add
xlat
mov
jg
push
pop
dec
cmp
jecxz
xor
subb
cmc
dec
jnp
aam
cmc
lods
xorl
inc
adc
pop
or
xorl
mov
xchg
cmp
or
mov
ds
ds
repz
jns
push
stos
push
fs
inc
imul
ret
dec
fdivr
dec
xchg
push
xor
adc
inc
cli
mov
fstps
cld
pusha
mov
lret
mov
xor
into
push
sbb
pushf
jmp
call
and
adc
mov
and
adc
ret
mov
ds
in
jp
aaa
dec
lcall
or
push
xchg
fsubs
dec
test
mov
imul
cld
sti
inc
imul
jnp
push
repz
adc
sbb
fisubrl
roll
loope
fwait
lods
test
jo
out
jp
jnp
dec
inc
xor
inc
icebp
jmp
fstpl
test
adc
out
dec
mov
inc
or
jecxz
js
xchg
stc
mov
dec
lcall
mov
jae
sub
imul
add
fwait
pop
ja
jmp
adc
adc
lcall
add
shll
jae
outsb
adc
sti
sub
mov
xchg
fadds
insl
and
lret
in
sbb
repnz
adc
out
lods
dec
mov
daa
repnz
sahf
sti
cmpsl
dec
and
aad
ljmp
cwtl
jmp
and
jecxz
inc
mov
inc
push
push
mov
sbb
sub
les
mov
mov
push
inc
imul
cmp
cmp
adc
and
cli
mull
mov
lcall
decl
and
subl
ds
lods
mov
mov
pop
dec
test
jle
xchg
mov
pop
sub
ds
into
je
cmpsb
add
cmp
adc
fildl
fucomip
aam
lods
fldcw
mulb
into
enter
imul
jg
lahf
fwait
lcall
jnp
ret
pop
pop
mov
cmp
pop
mov
notb
cmp
enter
outsb
das
into
test
xor
scas
sti
mov
lcall
lock
push
jbe
add
mov
daa
scas
jge
xchg
jecxz
add
lods
fstl
cmpsl
jns
fisubrs
aaa
outsl
xchg
push
iret
cmpsl
loopne
arpl
push
insb
shrl
and
mov
roll
pushf
xchg
addr16
idivb
outsb
iret
fidivrs
sub
mov
add
in
mov
int
lea
stc
filds
sub
inc
sub
andl
mov
push
daa
stos
rcrl
xor
push
mov
popf
jmp
hlt
int
in
lea
cmp
push
lods
insb
into
sbb
pushf
popa
jno
mov
dec
out
test
cld
xchg
and
mov
and
rcll
adc
scas
cltd
xchg
pop
xor
in
dec
shlb
xchg
jb
pushl
call
jmp
push
mov
dec
jmp
pop
xchg
jae
es
pop
lahf
mov
pop
pop
sbb
push
add
cld
bound
pop
mov
test
repz
pop
inc
and
cs
or
aam
sbb
mov
outsb
or
aad
push
daa
mov
inc
cltd
dec
imul
sbb
mov
sbb
std
xchg
sbb
pop
inc
mov
fwait
cli
repnz
cmp
mov
xor
mov
bound
mov
push
inc
sarb
into
pop
rolb
xor
inc
cmc
pop
push
mov
jb
addr16
imul
sbb
and
jle
xchg
divb
cmpsb
sarl
out
ret
ja
fnsave
outsl
xchg
mov
mov
pop
cld
dec
mov
and
outsb
xor
outsl
bound
popa
xchg
lds
push
std
push
ficomps
out
out
in
sbb
add
push
mov
es
mov
and
rcll
test
movb
mov
and
dec
jmp
jno
sbb
dec
stos
test
cmc
mov
jg
pop
in
inc
fsubl
addr16
mov
push
jle
outsb
jmp
push
out
repz
mov
jp
mov
std
jge
inc
jne
mov
cmp
imul
mov
xor
pop
xchg
cmc
shll
push
and
push
cmpsl
loopne
stos
mov
jae
dec
cs
adc
add
and
xchg
enter
add
int3
jmp
and
data16
out
movsl
les
and
mov
repnz
inc
sub
pop
fcmovu
sahf
adc
pop
sbb
inc
sti
mov
jp
ds
dec
cld
sub
sub
fnstcw
lds
and
lcall
movsl
or
popf
stos
pop
mov
mov
add
adc
ljmp
movsl
xorl
out
xrelease
icebp
aam
lret
adc
mov
jnp
aad
xorl
mov
inc
ret
rcll
xlat
adc
test
mov
cmp
mov
adc
pop
movsb
out
or
sbb
ret
pop
mov
mov
jae,pn
data16
pop
pop
lahf
mov
arpl
push
stos
mov
inc
push
dec
cmp
and
push
pop
icebp
cmp
cs
test
add
mov
adc
mov
test
sahf
ret
mov
jp
ja
data16
xor
js
pop
nop
imul
mov
jmp
ds
movsb
push
jge
ss
jo
mov
and
test
add
mov
mov
mov
lea
bound
loope
dec
int3
add
imul
mov
insb
pop
mov
mov
dec
das
mov
xor
mov
sbb
in
push
lea
gs
cmp
pop
jns
mov
cmpl
outsb
jg
jo
in
fcoml
or
jb
sbb
gs
frstor
addr16
outsb
shrb
test
xor
mov
mov
jnp
push
rolb
faddl
push
add
jmp
push
mov
sbb
or
leave
mov
subl
arpl
xor
sub
dec
mov
lcall
jne
stc
mov
repnz
pusha
icebp
xchg
out
mov
jmp
arpl
jle
sbb
cmp
jno
leave
add
dec
jl
test
xchg
dec
mov
jno
mov
into
sbb
out
outsl
lret
xchg
jmp
jbe
sub
outsb
pop
lea
loop
pop
out
pushf
and
int
jo
andl
aaa
push
outsb
lcall
fidivrl
aam
and
push
js
xchg
nop
test
lcall
int3
jmp
into
scas
popa
xorl
push
or
lret
iret
or
xchg
xor
scas
scas
push
lret
inc
jnp
jg
push
pop
popf
call
cltd
jp
divb
stc
aas
imul
das
jbe
push
or
testl
pop
push
imul
gs
jmp
sbb
outsb
shrb
pop
stos
xchg
sti
ret
pop
push
push
ljmpw
mov
cmp
popa
arpl
push
lock
push
loopne
jo
stos
sbbb
inc
test
cmp
call
arpl
inc
jne
add
fwait
xor
mov
icebp
jae
in
add
dec
adc
icebp
lret
sbb
ds
cmp
push
mov
test
mov
pop
add
adc
incl
cmp
jp
sti
gs
mov
add
xchg
ljmp
dec
loope
push
incb
lcall
shl
cld
or
les
stos
arpl
int
stc
xchg
jbe
fldl
pop
xchg
lahf
and
popl
and
mov
push
aad
shll
push
and
iret
lahf
in
mov
repnz
roll
pop
cmp
in
addr16
fs
and
outsb
mov
pop
mov
jle
nop
sub
in
jle
cwtl
pop
xchg
xchg
lahf
std
lret
nop
mov
repz
fiaddl
pop
or
jl
push
jno
push
insb
mov
mov
mov
out
jne
push
movb
xchg
adc
in
sub
jg
repz
pop
imul
std
fwait
pop
cmp
dec
sub
in
xchg
imul
outsb
daa
js
cmp
jne
sbb
les
cmp
xor
jge
lds
jne
scas
out
dec
inc
fstl
sub
into
fcoms
repz
mov
sub
push
roll
jg
jae
popa
insb
pop
mov
dec
out
nop
out
fucom
sub
sub
pop
adc
dec
push
push
loope
push
pop
dec
xchg
out
int
and
fstpl
repz
mov
out
add
cmpsb
pop
adc
loope
adcb
jg
inc
mov
sub
jns
popa
push
aaa
testl
stos
xchg
arpl
add
out
inc
jmp
mov
fwait
jecxz
into
loopne
adcl
jne
add
cltd
sub
nop
subl
insb
pop
dec
insb
push
ds
mov
scas
dec
push
cmp
mov
andl
xchg
inc
mov
jge
fisubs
push
add
sub
imul
divps
mov
loope
dec
pop
adc
jne
aad
jecxz
jle
pushf
or
lcall
imul
jb
test
ret
xor
test
sbbb
adcl
adc
mov
ret
pop
inc
mov
mov
fisttpl
or
jno
mov
xchg
fisubs
iret
cmc
fs
adc
mov
movl
ret
pop
rcll
xchg
xchg
jg
mov
inc
ja
rcrl
imul
jnp
mov
jne
jne
addb
bound
fildll
fwait
arpl
inc
call
xlat
fdiv
lahf
add
inc
push
mov
and
inc
shll
jmp
sbb
scas
xchg
sbb
loopne
scas
add
and
mov
dec
ret
add
add
cmp
mov
pop
popf
cmpsl
mov
mov
sahf
xor
cmpsl
lahf
sarl
sub
dec
mov
push
pop
cmp
fmuls
add
outsl
in
das
mov
outsl
inc
jle
sub
lahf
mov
call
cltd
hlt
dec
stos
push
cmp
push
mov
xchg
aam
mov
mov
mov
push
pop
pop
xchg
jns
or
stc
outsl
int
ljmp
push
mov
and
mov
jb
out
cmp
lds
push
fidivrl
xor
jle
lds
fldt
dec
rclb
in
cmp
hlt
fs
loope
jnp
jbe
xchg
or
rclb
negb
out
repz
mov
enter
sub
pop
jno
mov
mov
fs
add
js
stos
push
and
sbb
inc
mov
or
mov
ss
xor
in
sbb
nop
jbe
cltd
cmp
pop
jge
cli
fs
lahf
fisubrs
ja
pop
aas
mov
push
mov
rorb
mov
xchg
mov
repnz
inc
pop
insb
push
pop
rcll
test
imul
sub
push
push
dec
lret
xchg
std
and
pop
mov
mov
sub
sub
aad
mov
push
fisttpll
lahf
mov
pop
cmp
xchg
jo
cld
sub
lahf
and
sar
bound
or
js
inc
mov
pop
andb
fbstp
pop
lock
xor
cmp
repz
mov
movsl
ss
mov
dec
es
shl
cmpsb
xchg
je
aad
movsb
loop
cld
je
mov
xchg
movsb
lods
mov
push
xchg
arpl
xlat
mov
ss
ss
xchg
ficomps
inc
test
arpl
std
scas
gs
pushl
add
lret
cmc
and
aad
pop
into
pop
dec
dec
insl
sahf
jne
cwtl
cmp
rcrb
or
imul
rorl
sbb
shrl
xor
sub
ja
int3
aaa
push
mov
dec
aas
mov
push
or
popa
pop
jl
arpl
idivb
sbb
sub
mov
xor
addb
fisttps
and
cmp
aas
cmp
arpl
data16
sub
pop
mov
or
js
jnp
xor
int3
popa
scas
int3
lods
mov
mov
pop
adc
sub
push
iret
lret
movsl
scas
sub
orb
dec
sub
lret
and
out
fildll
lods
arpl
imul
xchg
or
pop
fwait
adcb
movsl
push
shlb
jecxz
cmp
adc
ljmp
or
add
xor
daa
test
mov
inc
leave
push
or
in
mov
push
sarb
ficoml
sarb
ficompl
add
mov
mov
xchg
arpl
fdivs
jns
fwait
or
xchg
clc
dec
jge
call
fcoms
loope
pop
data16
adc
scas
jae
cli
sarl
lods
and
pop
pop
or
push
sub
maskmovq
idivl
add
xchg
pcmpeqd
mov
shlb
xor
xor
ja
aaa
rolb
loope
xor
in
shlb
xchg
push
iret
scas
inc
sbb
adc
sbb
mov
in
mov
ret
loop
mov
or
sbb
sbb
inc
cmp
or
sbb
outsl
in
clc
rorl
jmp
jb
cmp
ret
movsl
popf
nop
in
sbb
cmc
fstps
cmp
push
imul
add
daa
push
jl
jno
xchg
add
test
adc
cmpsb
mov
sar
or
mov
pop
xlat
fsubp
stos
icebp
les
data16
sbb
loopne
push
xchg
inc
cld
in
fwait
ret
addr16
push
fstpt
and
mov
fwait
cli
mov
pusha
imul
mov
int3
sbb
mov
dec
aas
imul
xchg
pop
jle
pusha
lods
push
frstor
sub
add
sahf
sahf
in
push
aam
cltd
mov
jmp
mov
movsl
and
in
fs
lock
rep
fldl
xor
pop
gs
or
push
jbe
sti
pop
aam
leave
stc
mov
adc
cli
je
mov
inc
in
inc
sbbl
or
addr16
push
or
pop
cmp
or
mov
int
mov
sahf
sub
mov
or
push
sub
mov
push
jg
shlb
int
rorb
dec
jbe
or
sub
sbb
cli
sbb
cmp
pusha
cmp
and
ficoml
mov
sub
or
xor
cwtl
cmp
xchg
fistl
mov
mov
sub
xchg
xor
outsl
add
das
xchg
mov
hlt
test
or
mov
dec
push
add
adc
cld
mov
rorb
lds
cmp
and
in
ja
imul
sti
jb
jmp
loopne
jnp
push
sti
fdivl
js
sub
mov
iret
dec
add
out
lds
mov
pushf
mov
cmp
dec
push
ja
rcll
aaa
and
out
push
push
rorl
or
mov
icebp
fcmovnbe
cmc
cmpsb
jns
aas
ja
mov
daa
fsub
jmp
dec
lock
aad
sub
divl
pushl
mulb
pop
and
data16
push
dec
add
mov
mov
fdivrs
lcall
cld
loope
push
mov
bound
cwtl
fs
arpl
sahf
adc
ret
push
dec
ss
lock
jno
mov
adc
paddb
dec
mov
mov
push
in
mov
bound
in
jo
mov
sbb
mov
mov
xchg
inc
lods
or
ds
push
fidivl
aad
cltd
adc
mov
cld
and
mov
or
or
fistl
push
pushf
ja
push
cmpsl
sbb
sbb
pusha
shlb
adc
xchg
in
mov
lds
xchg
popf
cltd
cmpsl
stc
fs
out
mov
lods
pushf
arpl
and
inc
loopne
aaa
jge
mov
ret
pop
mov
out
jp
lret
mov
orl
mov
cmp
data16
xchg
jae
jne
popf
add
pop
mov
jae
rolb
test
cmpb
iret
insl
push
push
test
sub
mov
mov
mov
or
fnstsw
inc
and
cltd
push
adc
jns
ror
jne
mov
and
xchg
dec
push
movsl
xchg
ret
add
add
add
push
sbbl
dec
int3
aad
mov
cltd
mov
mov
cli
stc
mov
jno
dec
push
xor
daa
and
inc
in
leave
jl
cmp
mov
mov
add
add
enter
test
movsl
in
cltd
adc
jns
lods
sub
xchg
mov
testl
fwait
lods
cwtl
jnp
or
dec
mov
sbb
jae
popf
neg
and
fldenv
sbb
arpl
mov
pop
xchg
std
and
ficoms
add
fnsave
leave
or
fcomp
jae
loop
stos
int
xor
jg
jmp
int
inc
mov
push
mov
int3
mov
or
movsl
push
mov
sbb
xlat
adc
adc
jmp
push
xchg
mov
mov
or
lods
add
insb
push
jp
test
out
adc
cli
aaa
xchg
jge
lds
dec
jne
loope
dec
inc
dec
loopne
cmpsb
mov
leave
mov
jmp
shrl
adc
repz
xorl
fs
sahf
sbb
test
dec
das
xorl
add
clc
and
adc
mov
stc
scas
mov
mov
xor
int
in
cld
fbld
dec
hlt
es
pop
jo
outsl
das
int3
dec
pop
loope
cmp
pop
pop
out
rcrl
popl
mov
in
push
xor
test
jne
push
in
inc
xchg
or
test
aas
jo
xchg
lret
out
dec
addb
mov
nop
shl
adc
mov
jb
out
push
xchg
xchg
mov
test
inc
ret
inc
lods
cld
adc
adc
mov
sub
push
gs
inc
notb
jbe
xchg
pop
sbb
call
inc
inc
pop
fldt
adc
mov
fmul
jns
inc
hlt
mov
fidivl
add
push
lret
sahf
out
jle,pn
push
lahf
lret
pop
lret
pop
mov
add
xchg
or
mov
mov
lock
jle
mov
fisubrl
push
pop
cltd
es
hlt
dec
and
sub
pop
stc
fwait
inc
testl
sbb
or
aas
mov
mov
xchg
push
xchg
jno
daa
cli
scas
pop
xchg
sub
sbb
shlb
lahf
xor
jno
out
shll
dec
lahf
imul
xchg
inc
or
push
lret
and
stos
pop
hlt
out
jne
mov
push
add
add
mov
subl
sarl
adc
jae
and
sub
adcl
sbb
daa
divl
negb
aas
fdivr
mov
jae
aam
push
out
es
lods
fldln2
frndint
outsb
pop
orl
gs
mov
adc
or
lcall
inc
lods
cmpsb
ja
sbb
and
sub
jmp
sub
cld
loop
xor
es
std
daa
mov
scas
xchg
call
pop
pop
cmp
out
jp
insb
xor
pop
ds
pop
js
aas
lahf
lret
hlt
sbb
lock
cmpsb
push
inc
jns
sbb
into
lods
xchg
cs
movsb
adc
dec
add
push
insl
jecxz
inc
shl
out
clc
outsb
xor
outsl
popf
mov
pop
mov
xor
addr16
inc
or
shrl
jae
xchg
shlb
popl
aad
mov
fs
scas
insl
xchg
ret
cli
sub
frstor
mov
out
pushf
sahf
jge
popf
movsb
mov
aam
push
iret
shl
rolb
lret
mov
adc
sub
test
cmp
loope
loope
rcll
adc
repz
sub
fmul
scas
xchg
sbb
or
iret
jmp
cs
jae
ret
cmp
jmp
fcoml
fs
sub
xor
insl
mov
imul
mov
jge
inc
push
sub
sub
daa
jb
stos
repz
or
dec
loopne
lods
testl
and
jo
jge
sub
std
pop
es
sub
pop
jle
aam
incb
test
daa
bound
rorl
jno
mov
das
popf
lods
adc
das
sahf
or
je
fildll
popf
push
lods
jle
int
test
pop
aas
push
cmp
sub
cmp
fldenv
in
aas
rcl
popf
lock
insl
mov
fisubrs
mov
sbb
sbb
das
iret
fucomip
scas
dec
rol
sar
and
xlat
dec
clc
sahf
sub
lock
inc
lret
mov
xchg
mov
pop
cmc
scas
pop
popa
dec
fwait
jmp
push
popa
jbe
arpl
push
jge
sub
fwait
aas
out
add
jle
xlat
xor
jp
adcl
mov
push
mov
movsb
fcomps
bound
dec
cmp
cmc
pop
cmp
mov
jp
ret
sub
inc
cwtl
xchg
dec
fcomps
sti
cmpsl
test
arpl
pop
popa
cmp
xchg
mov
mov
push
push
xor
xlat
aad
add
xor
sbb
in
mov
subb
aas
inc
add
sti
repnz
pop
sub
and
or
mov
and
mov
in
jb
and
pop
and
push
das
movsl
add
mov
sub
mov
orb
xchg
jecxz
or
dec
pop
xor
mov
mov
imul
xchg
dec
xlat
jnp
mov
xchg
test
fs
enter
xor
iret
lahf
push
fs
setne
mov
dec
pop
pop
push
inc
addl
int3
adc
cwtl
inc
dec
test
cwtl
or
and
lret
inc
jmp
ljmp
sbb
fisubl
iret
or
stos
ficoms
dec
dec
xlat
icebp
sti
lods
pusha
dec
je
jl
pop
idiv
sbb
mov
jbe
add
xchg
xor
out
addr16
sti
inc
popa
mov
bound
push
fistpll
add
mov
test
aad
sti
mov
aas
add
mov
inc
xchg
gs
push
js
hlt
xor
push
xchg
inc
vxorps
xchg
neg
push
data16
fs
jbe
mov
scas
or
mov
xchg
jle
add
push
fldenv
mov
sub
jl
lock
push
push
nop
mov
aad
movsl
pop
pop
ss
iret
fstps
xlat
dec
clc
lahf
mov
icebp
aam
inc
sub
rorl
and
cmc
cmp
sbb
xlat
fxch
cmp
ljmp
mov
xchg
aam
push
mov
cli
hlt
mov
sbb
add
rcll
push
dec
enter
jmp
pop
lock
xor
lcall
fsubr
or
mov
pop
xchg
jmp
scas
mov
iret
addr16
out
faddl
popa
push
jle
xorb
dec
xchg
gs
movsl
arpl
or
lods
unpcklps
test
out
mov
hlt
cltd
cmpsl
test
and
addr16
daa
mov
in
jp
add
mov
pusha
cli
mov
and
cmpsl
lods
add
gs
xor
adc
sbbl
bound
iret
adc
mov
lcall
enter
bound
pop
adc
adc
sahf
aad
pop
cmc
pop
lods
cmp
jno
or
cli
sti
lods
out
inc
lea
mov
cwtl
and
ja
or
out
cmpsl
aad
arpl
sub
stos
push
xor
shrb
fidivs
jno
mov
mov
imulb
push
movsl
ret
mov
fwait
out
adc
lock
add
enter
pop
pusha
jg
lods
or
mov
out
pop
scas
ja
xor
pop
repz
xor
jmp
dec
sbb
or
shll
sbb
gs
push
loope
xchg
lods
sbb
std
push
daa
je
sbb
sub
pop
inc
jecxz
out
sbb
pop
bound
mov
lret
dec
lds
inc
fwait
movsl
int3
js
cwtl
and
pop
rorb
int3
roll
je
nop
xor
ja
or
and
cmc
gs
decl
inc
das
adc
cmp
aam
inc
sbb
mov
inc
jno
pop
inc
repnz
pop
push
pop
rcrl
push
cld
xchg
push
xor
imul
cmp
dec
mov
stos
lcall
movsb
and
mov
test
subl
repnz
scas
and
dec
ja
add
mov
sarb
mov
fildll
test
sbb
mov
xor
add
fistl
mov
decb
xor
scas
ds
xchg
ret
mov
dec
testl
mov
mov
mov
jl
inc
xchg
jae
gs
adc
cmp
cmp
sub
mov
mov
push
jmp
ljmp
mov
or
enter
and
lcall
aas
push
mov
mov
insl
xchg
pop
jno
ljmp
mov
dec
rcr
mov
pop
or
fcompl
sub
pop
or
pop
push
xor
inc
push
aad
jnp
and
mov
test
je
xchg
inc
fwait
mov
xchg
cmc
iret
scas
pusha
inc
cmp
dec
lea
lods
mov
fisttpll
adc
add
mov
nop
mov
xor
andl
repnz
outsl
mov
ja
cmc
sbb
cmpb
into
subb
xchg
pushf
jo
je
add
pop
rorl
mov
out
dec
inc
push
dec
scas
xor
xchg
and
iret
loope
daa
sub
cmp
or
decb
and
je
mov
mov
ds
or
and
inc
and
mov
mov
push
xchg
mov
xor
mov
add
stc
call
jbe
addr16
xchg
into
arpl
scas
xchg
mov
int
lcall
jnp
and
add
sbb
cmp
lods
dec
jbe
mov
mov
jo
sub
dec
sbb
xchg
bound
aam
jge
xchg
fiadds
fiadds
cli
adc
inc
fstpt
pop
xchg
test
sub
dec
fsubrs
and
data16
and
push
dec
dec
jecxz
pop
rcr
imul
mov
cmc
inc
xlat
shll
or
pop
sub
dec
outsb
sbb
sti
mov
ret
inc
add
lds
mov
sbb
movsb
sti
lcall
lret
xchg
mov
add
imull
add
adc
push
aad
mov
sub
or
mov
test
jle
or
sub
jl
jo
mov
jnp
outsl
test
test
inc
shr
imul
in
pop
jns
repnz
fwait
jge
dec
insl
shll
cmc
mov
cmpsb
adc
xlat
js
jbe
cld
or
mov
pop
outsb
jb
sub
addb
cwtl
dec
inc
xchg
leave
lret
jmp
and
in
lahf
xchg
and
popa
and
rorb
nop
fs
adc
int
sub
test
add
and
and
out
and
int
cmp
push
inc
jo
inc
push
nop
mov
adc
jmp
xchg
ret
or
xor
data16
lods
pusha
xchg
dec
inc
mov
or
dec
enter
fmull
jecxz
or
mov
lds
insl
jne
mov
push
and
jnp
inc
push
jnp
or
enter
add
aam
call
test
cmp
cli
sub
mov
mov
lcall
mov
dec
dec
jge
leave
cmc
les
test
dec
jecxz
popa
fwait
int3
push
loope
jo
test
add
adc
shll
ljmp
fcoms
ss
sahf
and
pop
pushf
mov
test
or
push
inc
lea
repz
inc
or
push
inc
rorl
lock
pop
inc
mov
mov
dec
mov
sbb
mov
jmp
rcrl
insb
jle
in
aas
shl
je
xchg
outsb
lds
shlb
adc
jmp
push
mov
xchg
inc
dec
lods
jp
cmp
cmpsl
mov
lods
sub
pushf
mov
add
es
fcompl
mov
inc
adc
arpl
adc
dec
push
mov
andl
mov
push
loopne
pop
mov
pushf
mov
sahf
xchg
int3
xorb
enter
mov
pop
cmpsl
out
lock
lods
mov
lods
jo
pusha
jo
cmp
mov
push
scas
mov
int3
lods
mov
jne
rorb
loop
cwtl
mov
popa
hlt
jns
add
adc
push
rsm
shrl
jge
loopne
and
jecxz
sub
iret
inc
pop
in
push
jmp
aam
pop
ss
push
loope
or
imul
pop
mov
sbb
dec
or
lds
jle
pop
push
inc
ret
mov
jl
sbb
add
call
scas
jmp
insb
push
dec
add
dec
ret
sub
push
jns
outsb
in
movsl
es
push
push
movsb
push
inc
fdivrs
xlat
add
sub
add
lds
xor
xchg
sbb
lods
in
sahf
cld
or
jae
sbb
push
outsl
imul
xor
push
push
cwtl
ficoml
bound
fiadds
or
lds
pop
out
mov
cli
sub
cmp
addr16
cli
push
adc
or
pop
les
sbb
lods
jl
pop
xchg
in
jns
aas
push
and
jecxz
jle
int
mov
repz
outsl
mov
jno
adc
popa
dec
out
pop
divb
repnz
sub
mov
lock
fld
xchg
jecxz
int
loopne
fidivl
adc
rcl
sub
push
dec
inc
xor
in
xlat
add
loope
in
outsb
in
mov
xchg
sbb
sbb
stc
fwait
or
and
dec
cmpsb
or
das
cmpsl
arpl
and
repnz
jbe
xchg
dec
mov
jnp
and
std
mov
das
in
aas
imul
fwait
jge
adcb
lods
push
dec
cwtl
and
into
icebp
or
int3
inc
ret
icebp
hlt
idivb
dec
rclb
stc
daa
xchg
xor
ret
xchg
lds
movsb
mov
inc
cs
fimuls
add
jo
pop
fwait
lahf
jnp
jmp
fistpll
xor
pushf
inc
subl
popf
sub
push
and
mov
in
roll
lret
jge
jb
push
mov
sub
add
lahf
test
or
fimuls
lods
mov
jbe
out
fwait
xchg
jp
xor
mov
jp
inc
lahf
or
out
inc
sub
add
outsb
imul
nop
pop
push
lods
or
lret
mov
mov
xor
sub
ja
divb
mov
cwtl
and
inc
push
adc
scas
cwtl
push
movsb
das
jo
idivb
sbb
mov
call
adc
mov
mov
lods
add
sarl
gs
and
call
jmp
xchg
pop
xchg
ds
lret
xor
xor
and
pusha
test
pop
in
mov
pop
xchg
push
mov
lods
mov
inc
push
xor
fwait
and
popa
test
sub
push
loop
call
int3
outsl
push
lods
imul
cmovno
mov
mov
or
inc
lods
addl
outsb
add
stos
test
xor
fs
mov
cmpsb
dec
dec
lds
femms
popf
pop
dec
mov
xor
sahf
gs
mov
inc
test
cmc
adcl
mov
pop
icebp
mov
jnp
out
in
jmp
outsl
cmpsb
inc
mov
mov
push
icebp
std
jecxz
loopne
sbb
out
inc
xchg
inc
and
pop
cli
mov
jae
in
out
jmp
xor
add
push
mov
jnp
add
das
cmp
xor
jae
or
push
or
fidivl
ljmp
or
ss
das
ret
pushf
hlt
mov
filds
cld
add
cli
loopne
sub
xlat
xor
xchg
or
sub
dec
in
daa
gs
mov
adc
push
fldt
das
sbb
in
mov
bound
push
mov
push
inc
jns
fadds
sti
push
mov
loop
jecxz
sbb
add
jae
test
adc
adc
cmc
jno
sti
lret
mov
fildll
scas
movsl
sti
jge
mov
in
xor
imul
add
pop
lods
rol
notb
cmp
outsb
pop
stos
mov
and
jae
lret
mov
nop
call
icebp
mov
out
or
mov
lea
inc
enter
xchg
stc
push
movsl
int3
xor
mov
les
mov
or
xorb
jns
in
sbb
popa
lret
cltd
pop
neg
adc
adc
sub
cmp
inc
sub
lahf
std
or
adc
out
mov
mov
mov
cmp
scas
mov
shrb
xor
in
loopne
dec
push
inc
inc
pop
mov
jo
xchg
add
sub
lds
jp
push
push
sub
popa
dec
sahf
inc
leave
adc
movl
das
inc
jp
sti
jp
pop
cmp
aad
pop
jl
adc
cwtl
fisubrs
dec
int
mov
lahf
ss
shl
add
cwtl
add
insb
hlt
add
jmp
pop
jae
cmp
xchg
aaa
bound
lret
iret
and
jns
call
insl
testl
jnp
les
dec
jno
jae
mov
repnz
mov
repnz
pop
push
mov
shl
dec
cmp
sbb
push
movsl
sbb
clc
and
inc
xchg
jmp
imul
dec
into
or
repnz
dec
mov
lret
mov
push
stos
xor
lcall
imul
or
rorl
fs
insl
jns
push
idivl
mov
xor
mov
jge
mov
cmpsl
out
rcl
and
push
mov
adc
inc
inc
mov
insb
cli
adc
loopne
xchg
xor
pop
adc
mov
inc
pop
popa
aad
dec
inc
loopne,pn
jg
mov
test
adc
sub
mov
into
loope
notl
sbb
cs
adc
int3
fadds
jne
jg
pop
mov
into
inc
lods
push
movsb
push
dec
or
mov
ffreep
mov
sar
push
pop
or
push
fists
cmp
lods
call
xchg
sub
mov
xor
pop
mov
bound
push
fldl
or
imul
in
int
js
in
mov
scas
mov
sahf
pop
fists
ret
jp
negb
stos
inc
pop
loop
xchg
das
pop
xchg
jg
jno
mov
cs
cmp
cli
flds
add
xor
outsl
push
jmp
jns
rorl
scas
jl,pn
push
outsb
roll
enter
xor
xor
fwait
mov
outsb
test
push
pusha
adc
lret
cli
gs
add
cltd
pop
pop
imul
gs
inc
test
repz
orl
fs
daa
jnp
mov
dec
int3
mov
jmp
out
adc
ret
mov
lahf
scas
test
sbb
dec
add
mov
inc
add
sbb
imul
adc
xchg
aam
movsb
push
and
jle
fs
or
and
adc
inc
push
mov
mov
out
fcompl
dec
dec
or
stos
mov
roll
aad
mov
std
mov
push
fucomi
dec
ret
lahf
sarl
dec
lret
and
mov
clc
dec
adcl
dec
iret
pushf
mov
insb
mov
mov
jmp
adc
xor
mov
push
jecxz
pop
repz
jno
scas
fcoms
iret
push
dec
ds
stos
lods
pop
rclb
or
xchg
mov
sub
push
out
jnp
leave
push
add
dec
mov
lock
test
xor
andb
decb
scas
push
add
inc
xchg
and
xor
aas
mov
sbb
xor
outsb
insb
or
ret
xchg
gs
sub
sbbl
xchg
mov
pop
in
mov
dec
loope
sbb
das
push
movsl
inc
pop
cmp
mov
outsb
xchg
inc
pop
fidivrs
int
ror
ret
adc
push
xchg
jae
sbb
and
ds
daa
pop
jp
xchg
in
xchg
fidivl
mov
xorl
xlat
jb
rcll
jge
inc
mov
jae
cli
stos
fwait
xor
adc
inc
and
push
and
ss
jae
rcpps
cli
jns
sbb
push
inc
and
cmp
pop
bound
jnp
xchg
fsubl
xorb
cwtl
jge,pn
divb
hlt
push
pop
xor
fmull
ds
imul
sbb
btc
es
dec
icebp
cltd
mov
lret
jae
push
and
push
adc
lahf
and
and
adc
mov
inc
push
push
jns
test
aam
push
xchg
daa
dec
fidivrl
into
ret
xchg
add
push
test
subl
sahf
push
rcrb
fwait
pushf
sub
add
pop
mov
rcrb
dec
in
aas
push
inc
popa
test
pop
icebp
adc
push
mov
cmpl
jg
jo
xor
mov
xchg
call
daa
add
aas
sahf
xor
lahf
lds
fiaddl
cmp
push
or
sub
rcl
lcall
repnz
mov
loope
dec
mov
call
xor
pop
push
xor
push
and
das
jge
in
in
orb
insb
dec
cmp
sbbb
xor
push
mov
lods
lcall
xor
fildl
cld
and
mov
and
stos
jbe
push
mov
cli
std
sub
pushf
in
sub
pop
xchg
lods
pushf
xchg
pop
sub
ret
cmp
mov
test
lret
pop
xor
push
push
dec
jmp
loopne
in
dec
loop
or
cltd
inc
addl
jns
cmp
out
stc
fbld
jns
xchg
mov
pop
add
stos
call
xchg
ds
mov
or
pushf
add
das
and
xchg
mov
imul
in
out
loope
fadd
das
fbstp
sub
add
out
cmp
cmp
mov
inc
mov
adc
mov
push
jb
les
jmp
fs
mov
cwtl
imul
sub
xchg
pop
push
mov
and
jecxz
xor
mov
cpuid
ret
push
mov
cmc
popf
adc
push
pop
out
pushf
mov
xor
out
pop
repz
sahf
dec
cmc
xlat
xor
mov
repz
cmp
dec
pop
mov
inc
aaa
mov
in
sub
test
aam
leave
xchg
fwait
xchg
das
cli
repz
pop
mov
ljmp
xchg
push
stos
inc
push
mov
sbb
and
movsb
inc
mov
call
sbb
adcb
inc
aaa
dec
iret
push
or
xor
cmp
aad
cmp
sbb
fnstsw
orb
ljmp
sahf
pop
mov
xor
adc
subl
sbb
loop
rclb
pop
add
mov
push
add
sti
notb
jo
into
sbb
pop
test
loopne
into
mov
jge
fmuls
dec
xlat
mov
inc
mov
inc
movsl
sub
rorl
fisttpl
stos
lea
or
mov
mov
mov
mov
divb
mov
out
aaa
repz
xchg
inc
jns
pusha
sbb
pop
xchg
sub
mov
xchg
enter
test
xor
mov
bound
mov
push
mov
int
push
xor
sub
push
push
rolb
lock
clc
sub
leave
in
sbb
cmp
or
leave
xor
std
mov
int3
insl
repnz
mov
push
pop
lock
pop
push
add
test
mov
rclb
sti
sub
into
xchg
icebp
dec
pop
mulb
sti
inc
ja
out
pop
fistpll
mov
xor
fsts
sub
gs
daa
cli
adc
lahf
and
push
pop
loope
shll
cmp
push
mov
adc
rcrl
push
mov
xlat
cmp
xchg
push
cmpl
mov
push
xchg
lods
pop
adc
add
cltd
mov
in
popa
or
add
pop
and
pop
loopne
jge
mov
and
mov
fdivrl
xchg
scas
adc
out
fucomp
in
clc
xor
pop
mov
cmp
xchg
cmpl
aas
lods
inc
aam
pop
and
bswap
bound
add
pop
pushf
loopne,pn
out
jo
loop
dec
pop
pop
std
dec
cmp
mov
test
pop
jl
nop
rcrb
push
out
sub
inc
ret
jmp
shrl
inc
xor
xor
xchg
lcall
mov
pop
dec
cmpsl
fptan
shll
ds
cli
jbe
jne
inc
scas
imul
ss
xchg
jne
cmp
rcrb
jecxz
cmp
jne
lds
push
jmp
out
shr
not
mov
dec
decl
jmp
jp
lret
sbb
data16
nop
jo
mov
pop
or
inc
mov
xor
adc
ds
pop
repz
sub
fsts
sti
sub
mov
jmp
outsb
dec
mov
aas
xchg
fldl
inc
nop
subb
adc
jno
pop
jge
mov
stc
xor
pop
loopne
cltd
add
add
mov
sub
sbb
push
pop
in
push
sahf
lods
mov
inc
and
mov
push
cmpb
scas
in
ljmp
clc
mov
cmpsl
fadds
add
cpuid
arpl
mov
xchg
int3
xchg
fs
loope
call
inc
and
cmp
test
jne
xlat
pushw
sarb
xchg
or
arpl
out
rcrl
push
push
repz
movq
repz
mov
movsb
out
test
add
xor
mov
push
pop
mov
cmp
add
fwait
sub
inc
cvttps2pi
and
xlat
sbb
addr16
out
sub
mov
idivl
mov
jnp
lahf
mov
test
in
test
xchg
test
sbb
mov
inc
jmp
cmp
imull
dec
test
movsl
sub
jno
add
xchg
movsl
mov
or
xchg
dec
sbbl
push
add
dec
test
mov
sbb
cwtl
mov
inc
sbbb
ja
push
ljmp
clc
add
xor
xchg
sub
out
sub
push
and
sub
mov
lahf
inc
shlb
pop
and
sbb
jg
mov
bound
loopne
inc
ret
xchg
stc
test
icebp
cltd
mov
mov
and
mov
aad
push
add
cld
and
xor
insl
dec
push
push
fiadds
push
xchg
out
mov
cmp
push
pmulhuw
orl
mov
sub
push
jbe
sti
sbb
inc
shll
pop
pop
cmp
push
push
dec
leave
xor
adc
adc
lret
out
adc
mov
ss
scas
addb
fisubrl
daa
cmp
out
push
xor
jo
rclb
cmp
shlb
std
xchg
sbbb
push
out
addr16
out
mov
sub
mov
push
outsb
jo
pop
sub
inc
jge
xlat
add
test
push
fcmove
cmp
dec
sub
rcl
test
repnz
jbe
popf
jecxz
fimull
and
lock
lahf
or
scas
faddl
inc
repnz
push
ljmp
out
gs
mov
or
movsl
test
dec
sub
mov
sub
mov
movsb
ss
jae
pop
jb
cmp
push
mov
add
subb
sbb
sub
sbb
lcall
pop
addr16
pop
xor
jecxz
xchg
dec
mov
or
nop
out
mov
inc
inc
dec
and
xchg
dec
dec
xor
fcompl
cmp
out
inc
paddusw
mov
jo
mov
mov
and
enter
outsl
sbb
ljmp
stc
mov
sbb
dec
fisttpl
test
jecxz
lcall
cli
test
adc
dec
rorb
das
inc
inc
int3
push
cmp
pop
and
push
and
jae
jge
adc
cmpsb
ret
stos
xchg
jo
scas
cmpsb
iret
xchg
jle
xchg
mov
adc
imul
fbld
xchg
inc
nop
pcmpeqw
mov
pop
ret
fisubl
cmp
daa
push
xchg
imul
push
inc
dec
push
and
ss
lea
inc
xlat
adc
cli
jno
sar
lldt
fstpt
mov
jp
xlat
call
cmp
or
mov
and
mov
cmc
jecxz
dec
cltd
lret
in
xor
popf
sub
adc
scas
popa
jns
movsb
jne
hlt
mov
in
cltd
ficoms
adc
out
fcmovnu
lods
pushf
add
or
lret
cmpsb
jp
mov
dec
dec
cs
jbe
jne
mov
jle
je
inc
fisubl
push
and
push
fnsave
mov
mov
or
into
jo
shrb
add
lds
inc
or
pop
cmp
movsb
cmc
xor
jno
shll
inc
jne
mov
fcmovnu
or
mov
xchg
es
adc
mov
rcrb
arpl
xor
js
push
test
stc
test
sbb
mov
mov
jmp
psubd
sbb
dec
jmp
sbb
in
xchg
les
mov
sbb
jmp
aad
adcb
mov
mov
jge
icebp
inc
inc
fs
cs
sbb
pop
ror
lock
adc
arpl
fisubrs
jge
aas
sub
or
outsl
cmp
xor
ret
test
xor
mov
loop
or
mov
nop
stos
loope
leave
add
test
jns
inc
sbb
push
or
dec
add
adc
mov
insl
cmpsb
popa
pop
int
out
int3
pop
dec
mov
mov
mov
push
xchg
addr16
inc
rclb
shlb
mov
jns
outsl
cmp
std
xchg
mov
and
dec
jbe
sub
mov
jl
aas
push
push
data16
bound
dec
or
or
lods
popf
icebp
mov
and
dec
movsl
ja
mov
test
inc
cmc
test
mov
mov
sub
fidivrs
push
jo
dec
iret
push
mov
loope
xchg
sbb
pushf
xchg
data16
arpl
mov
xor
jno
cli
out
mov
mov
inc
add
das
jb
xchg
mov
outsl
les
cmc
and
sub
pusha
cmp
mov
cwtl
movl
cmpsl
das
xchg
scas
lods
cmp
loop
and
test
dec
push
sub
std
mov
cmp
pop
dec
pop
xor
ja
jle
or
add
cmc
adc
or
pop
ret
mov
addr16
or
or
push
add
add
xlat
ret
mov
inc
jno
cli
cli
cmpsl
mov
decb
movsb
movsb
ja
test
pop
and
das
mull
mov
enter
sbb
cltd
and
movsb
pop
jle
ret
insb
mov
ret
inc
repz
dec
mov
adc
sub
push
pop
frstor
pop
loope
cmc
mov
cmp
rcrb
inc
cmp
xchg
dec
mov
sub
pop
je
mov
roll
aas
lods
xorb
std
mov
iret
jnp
mov
mov
popf
add
inc
shrb
mov
push
pop
jecxz
and
sarb
in
repz
mov
pop
push
pop
xlat
mov
out
lods
xchg
mov
push
fbld
add
mov
mov
sbb
mov
pushf
sar
fistl
arpl
in
xchg
popa
pmaddwd
repnz
cs
xchg
loopne
pop
daa
dec
jle
jae
test
mov
out
dec
xchg
movsb
mov
xor
repz
mov
test
fsubl
mov
je
pop
inc
lock
adc
pop
movb
sbb
movsb
out
cwtl
inc
inc
dec
mov
jge
mov
and
nop
bound
mov
xor
cwtl
daa
push
pop
bound
in
pop
leave
clc
je
popl
add
fists
xor
ds
xor
lret
in
lds
xchg
cmp
fldl
pop
inc
mov
xchg
pop
xchg
es
sbb
fs
movsl
xor
jne
loop
add
push
out
adc
sbb
cmc
sbb
popf
xor
in
push
dec
and
sub
les
cwtl
lods
add
in
rcrb
dec
jb
rcpps
add
jbe
seta
out
mov
jmp
cmpsb
sub
and
adc
push
sahf
inc
pop
push
lret
sbb
and
xchg
std
into
cwtl
jge
cltd
ds
xchg
lds
imul
sub
stos
imull
in
stc
iret
lock
vcvttpd2dq
imul
jge
mov
mov
add
loopne
lret
pop
push
mov
xchg
imul
xchg
out
in
push
adc
or
mov
mov
or
loopne
les
aad
pop
dec
pop
mov
mov
push
shll
ret
mov
xchg
mov
mov
or
rcr
out
sbb
shll
mov
and
push
pusha
and
xchg
std
nop
int
xlat
xor
in
dec
dec
or
loop
mov
testb
push
mov
je
add
mov
adc
mov
fsubrs
inc
outsb
sub
pushl
movsl
mov
pop
push
push
into
pusha
insl
enter
jge
jb
lret
jno
inc
xor
lret
popf
cmpsb
and
negl
xchg
sahf
dec
addl
aad
or
test
ret
sbb
inc
iret
pop
scas
or
add
or
out
xchg
cmp
jbe
add
jno
outsb
in
cmpsl
add
imul
jb
ret
sbb
mov
daa
les
daa
scas
mov
loopne
test
cmp
jecxz
in
out
decl
in
loope
mov
cs
mov
sub
stc
test
dec
inc
lret
pushf
sbb
lds
jo
mov
stc
jae
cld
or
orb
push
or
mov
sbb
dec
jbe
mov
das
sti
in
enter
sbb
and
push
lret
call
pop
xor
cmp
out
xchg
push
loop
enter
or
cmp
jne
orb
dec
cmpsl
lods
and
xor
xchg
sub
stc
fistl
cmp
mov
add
xchg
ljmp
sbb
cmpsb
punpckhwd
imul
cmp
push
jmp
push
and
inc
inc
push
mov
and
int
pop
push
cmp
mov
mov
rcrl
xor
xchg
data16
ljmp
mov
scas
mov
xor
lahf
add
jae
sub
sbb
loope
push
dec
in
jmp
div
loop
mov
loopne
pop
fwait
jbe
cld
fs
push
iret
pop
pop
dec
imulb
cmp
das
jge
inc
ret
xchg
add
mov
pop
sbb
jmp
push
or
or
imul
mov
mov
orb
push
int
cmp
into
xchg
mov
sbb
iret
daa
adc
mov
dec
jg
jno
xchg
movsb
lcall
mov
mov
inc
mov
mov
fcmove
xchg
xlat
cmc
add
inc
cwtl
xor
jae
dec
out
imul
pop
xor
inc
dec
cli
inc
leave
hlt
inc
imul
scas
cmp
repz
push
xor
stos
pop
mov
sbb
add
mov
les
inc
cmpsb
cltd
je
pop
outsl
movsl
ret
pushf
mov
push
add
scas
mov
scas
inc
cwtl
dec
sub
push
push
sti
jmp
mov
outsb
stos
fs
sarb
cs
pop
xchg
int
add
gs
inc
aaa
dec
xor
pop
pusha
ja
pop
decl
sub
aas
push
pop
pop
mov
ret
mov
sbb
jno
mov
addr16
sub
adc
dec
adc
testl
jae,pt
cwtl
xor
test
xchg
push
dec
pushf
jecxz
and
gs
xchg
rcrb
lret
loop
cs
jmp
jne
adc
adc
mov
fmuls
cmp
xor
jmp
mov
cltd
mov
into
ljmp
fidivrs
xchg
imul
test
push
pop
jmp
outsb
insb
stos
cmp
push
xchg
push
pop
rcl
fs
int3
pop
push
adc
mov
push
lcall
pop
adc
fmuls
test
test
xor
stos
jle
push
inc
mov
shlb
orb
nop
mov
mov
mov
cwtl
stc
jne
mov
fwait
add
pop
or
pop
outsb
cmpsl
movl
in
jno
rorb
negb
push
testl
js
outsl
cmc
mov
lock
loope
int
dec
xchg
cmp
jecxz
cli
test
push
das
or
fs
cmp
popa
mov
jmp
sbb
xor
insl
in
test
cmpsb
pop
sbb
pop
mov
test
lods
and
jle
fucom
call
je
ret
mov
xor
mov
mov
cmp
fucomip
jo
in
mov
xchg
inc
sti
inc
sbb
jb
sbb
shrb
xor
or
mov
rdrand
dec
les
out
cmp
xchg
or
std
xchg
sub
decl
adc
stc
hlt
xchg
push
icebp
inc
mov
xlat
adc
add
jnp
jmp
fwait
lret
jb
xchg
dec
adc
jb
pop
mulb
push
lahf
sbb
mov
fs
stos
or
pop
ja
sbb
or
fs
cmpb
sub
leave
fmulp
adc
aam
lods
add
mov
loope
mov
mov
insl
flds
dec
out
rorl
scas
roll
adc
mov
xor
sub
and
mov
int3
repz
fwait
test
lea
cmp
sub
stos
jg
arpl
add
sub
out
fcomp
pusha
push
nop
fwait
cwtl
enter
pop
cmp
dec
ljmp
gs
bound
mov
std
mov
adc
test
ret
ret
aam
clc
lock
outsb
subb
or
mov
cld
add
arpl
push
xchg
push
aas
cld
inc
ljmp
jne
repnz
lds
jbe
mov
mov
aas
add
je
inc
push
mov
dec
out
cmpl
mov
cld
sub
test
pop
mov
and
jno
and
mov
cli
xchg
cs
lahf
aad
addr16
push
mov
push
fadds
or
cmpsl
nop
in
cmp
mov
scas
sti
mov
stos
and
sub
add
cltd
cmp
bound
pusha
cmp
pusha
sub
scas
mov
outsl
stos
xlat
test
mov
dec
jne
pushf
dec
sub
es
cld
xchg
cwtl
cs
popf
loop
vcomisd
test
lcall
gs
jae
jns
out
out
jmp
scas
mov
imul
mov
xchg
inc
xchg
hlt
or
sub
stc
test
jl
fisttpl
nop
adc
je
adc
push
dec
jbe
je
gs
lock
pop
test
cwtl
cltd
pop
jg
testl
add
inc
stos
stos
sub
fsubr
adc
imul
das
idivb
lret
dec
cmpsl
aaa
sbb
mov
js
xchg
jmp
mov
fsubrs
repnz
out
xchg
lds
inc
call
rcll
je
push
mov
out
inc
loop
jbe
adc
lods
dec
test
cwtl
adc
js
xor
adc
pop
ret
out
dec
xor
push
daa
jle
hlt
lret
add
xor
mov
adc
cltd
out
nop
sub
or
loope
jno
mov
sub
lahf
arpl
sub
cmp
movd
in
out
mov
adc
mov
lea
push
cmc
add
pop
rorb
adc
mov
add
mov
xchg
in
imul
xor
lcall
jmp
pushf
and
mov
and
int
fucomp
jb
repnz
add
fs
in
subl
add
popf
mov
icebp
sub
mov
pushf
push
mov
dec
and
shrl
lock
ja
outsl
fsubrl
xor
pusha
les
mov
sub
insl
sub
into
xchg
out
inc
aas
jp
cmpb
pop
insl
loopne
mov
cli
push
lds
mov
pop
pop
aas
mov
dec
fwait
mov
xchg
arpl
int3
mov
push
ret
ss
clc
mov
and
not
jb
sbb
mov
pop
ret
les
mov
sbb
stos
movsl
mov
xor
push
mov
fadds
gs
mov
mov
shl
jno
add
outsl
stos
push
xchg
scas
cmp
fcoms
xchg
out
push
add
jnp
nop
adc
lock
loop
lret
push
mov
inc
xor
lods
adc
add
push
lret
xlat
sbb
mov
xor
jecxz
cmp
jmp
xchg
gs
push
aas
mov
jp
and
je
rol
mov
sub
mov
xchg
popa
mov
mov
aaa
ret
out
mov
out
js
leave
mov
push
mov
sub
xor
adc
mov
push
mov
xor
loope
lods
movsl
xchg
daa
mov
push
scas
loop
aad
les
lods
xchg
inc
mov
push
das
lds
adcl
in
xchg
les
cmp
int3
out
ret
test
pop
pop
sub
cltd
push
cmp
scas
sub
arpl
leave
push
in
adc
mov
xchg
imul
sub
sub
pop
push
leave
cmc
push
mov
cmpsb
ljmp
push
adc
or
xorb
fdivp
push
pop
lods
dec
aam
in
daa
push
pop
dec
cmpsl
cmp
or
add
out
cmp
rcrl
sbb
jnp
xor
repz
fwait
xor
dec
mov
dec
dec
xchg
adc
aam
sahf
inc
pop
mov
daa
jns
lds
inc
leave
xor
cmp
daa
ljmp
ljmp
pop
mov
cld
mov
dec
push
jb
or
sub
ficomps
ret
fmuls
stos
jne
aas
nop
push
test
fsubl
icebp
ret
xchg
ret
mov
lds
cmp
jecxz
dec
add
push
adc
mov
xor
mov
jnp
popa
pop
fdivr
or
outsb
sub
sbb
aaa
sbb
pusha
add
xor
inc
and
pop
xor
int
mov
xor
pop
addb
roll
push
or
pop
mov
ror
es
out
push
loopne
jo
pusha
fwait
test
jb
lea
int3
int3
inc
test
pop
inc
pop
std
cld
and
or
andl
lret
mov
push
push
cltd
sbb
in
mov
pop
lds
or
rcl
aas
sti
adc
and
rol
add
adc
test
cwtl
pop
jmp
lea
sub
mov
add
jo
mov
cmp
out
adc
fs
xchg
popf
outsl
cmp
out
int3
jbe
sbb
xchg
jmp
push
xor
daa
lods
cmp
add
loop
ljmp
sbb
adc
stos
outsl
enter
orb
std
mov
push
rolb
add
imul
jle
jecxz
jno
nop
test
dec
aas
aas
pop
das
inc
mov
mov
xchg
mov
sbb
ds
dec
fs
mov
test
xor
cmp
shll
and
xor
jo
mov
pop
inc
inc
pushf
or
mov
or
dec
cmpsb
xchg
dec
imul
jp
in
or
jl
sti
ljmp
adc
rol
pop
sbb
dec
pushf
or
pop
es
add
jne
loop
push
sbb
sub
cwtl
loopne
shlb
dec
cwtl
popa
cmp
lret
mull
mov
push
cli
data16
sbb
pop
xchg
xchg
movl
rclb
scas
sbbb
scas
cmpsb
pop
cld
jecxz
jp
aaa
dec
daa
jne
lods
test
leave
test
scas
lock
xor
jg
out
xchg
inc
xor
cmp
and
lods
xor
iret
and
mov
jnp
dec
iret
jno
mov
add
js
icebp
mov
mov
cmpsb
push
dec
ret
mov
insl
and
jne
test
cld
ret
xor
fwait
aas
leave
cmp
neg
fmull
xchg
repz
sarb
pcmpeqb
loop
rol
sbb
iret
mov
sub
mov
imul
out
sub
adc
ss
mov
push
into
int3
jns
jl
rorb
push
jle
popa
mov
negl
cmp
cmp
sub
add
ja
dec
nop
imul
sbb
cmp
push
out
sbb
movsl
std
testl
ret
outsb
repz
stc
pop
fistpll
repz
xor
je
mov
sbb
lods
js
jo
imul
xor
adc
pop
pop
sbb
xorb
inc
test
xor
dec
sbb
xchg
mov
test
stos
loop
mov
jae
mov
pop
xor
jbe
ror
dec
mov
les
mov
loopne
call
sub
movsb
mov
lock
popa
dec
andl
test
mov
xchg
les
fs
out
enter
add
dec
repnz
loope
xchg
push
sahf
aaa
test
hlt
cmc
and
jo
sub
mov
jl
push
movsb
sbb
outsb
sti
imul
sti
insb
scas
cli
cli
gs
push
test
mov
inc
int
inc
xor
mov
das
inc
and
stc
and
addl
mov
loop
add
and
jge
loopne
pop
cmp
or
popf
push
mov
xor
repnz
and
push
push
lret
xchg
adc
sub
loope
and
cmp
add
addr16
inc
in
fadd
lods
mov
aad
sub
pusha
jo
lret
sahf
fs
xchg
imul
cmpsb
push
cmp
mov
repz
andb
fdivrl
mov
add
cwtl
add
pop
inc
sbb
pop
mov
or
int
in
mov
xor
repnz
pop
lret
repz
inc
jle
add
cwtl
into
xchg
mov
arpl
mov
call
outsb
scas
mov
in
in
shrb
inc
mov
idivl
and
out
sub
mov
ss
scas
add
push
dec
cmp
inc
pushf
jbe
jecxz
fisubs
fs
jmp
sbb
scas
fwait
sbb
inc
test
scas
dec
or
jecxz
fcmovne
jno
xchg
arpl
aas
sub
sahf
sbb
cmc
std
inc
xor
fsubrs
pop
std
stos
inc
mov
fnstcw
aam
xchg
shlb
or
test
push
mov
pop
lcall
jo
pop
jae
add
mov
dec
mov
jo
rcr
fstpt
ds
shrb
fadds
or
out
jnp
into
mov
movsb
mov
jne
jo
jmp
push
mov
adc
loopne
aam
xor
sub
cli
insl
movsl
dec
loopne
ret
movsb
pop
mov
gs
test
loope
mov
sub
cmp
jg
pop
pop
pop
mov
sahf
dec
rolb
stos
iret
lcall
cli
mov
xor
icebp
les
xchg
xor
mov
stos
frstor
pushf
js
and
mov
mov
mov
cmpsb
lret
mov
cmpb
call
jne
cltd
sub
stos
inc
pushf
test
lea
xchg
ljmp
stc
scas
jns
dec
adc
repnz
mov
mov
sub
fstps
repz
mov
enter
ss
push
insb
gs
int3
inc
mov
out
fmuls
xor
rorb
icebp
cmp
iret
ljmp
adc
repnz
test
mov
cld
sti
dec
gs
dec
dec
mov
pop
xchg
ret
mov
inc
and
test
movsb
mov
xor
add
pop
stos
xchg
pop
xor
mov
stos
dec
jo
aas
cld
mov
enter
xchg
sub
push
rcpps
bound
adc
jle
and
add
gs
mov
lock
bound
adc
adc
repz
sub
outsb
dec
stos
mov
inc
adc
xchg
jne
jbe
push
mov
sahf
adc
and
inc
jge
lock
or
outsl
mov
or
add
nop
adc
jge
mov
mov
cmpl
movsb
jne
inc
or
lret
mov
dec
roll
icebp
xorb
roll
outsl
testl
add
cltd
and
hlt
das
ds
or
mov
leave
sbb
or
cmpsb
cmp
add
xorl
dec
orb
repz
push
test
xchg
or
stc
ds
mov
and
cmpb
xchg
mov
imul
mov
mov
std
xor
cwtl
cmp
and
cs
and
lea
loop
shl
loope
xchg
enter
ljmp
int3
or
je
aaa
fstl
push
ss
sti
test
fcmovbe
jnp
lret
shl
lcall
lahf
negl
push
lahf
sub
mov
into
rolb
sbb
pop
adc
jge
aad
es
or
adc
xchg
out
jae
test
pop
jle
rcrl
stos
and
cld
cmc
inc
xchg
jae
jl
stc
cmp
aad
cli
xorl
inc
pusha
and
xlat
cmp
ds
cmp
cmpsl
nop
sarb
fistps
pop
ljmp
push
mov
xor
test
insb
xor
sub
jmp
push
loopne
sub
add
fidivrl
push
mov
rcll
jo
add
adc
mov
in
std
adc
loop
gs
pop
jge
or
dec
idivb
xchg
test
shl
inc
xor
mov
fnstsw
cltd
push
stc
ret
and
push
push
inc
rolb
ljmp
adc
push
mov
cs
ja
outsb
repz
cmc
stos
jp
sub
je
loop
cmp
jg
roll
rcll
mov
push
cmp
or
mov
es
and
aam
xchg
lds
cmpl
adc
push
popf
adc
cmpsb
push
mov
add
lahf
mov
imul
inc
shrb
dec
lods
adc
add
sub
movsl
push
mov
mov
lret
cmp
mov
stos
out
sub
mov
fs
mov
mov
push
xchg
mov
sbb
mov
fstpt
adc
movsb
fwait
mov
insb
test
cmp
addr16
sub
mov
out
mov
adc
gs
push
std
and
pop
xor
lahf
lcall
insb
mov
jb
sub
shlb
xchg
jo
mov
jecxz
int
mov
xor
aad
scas
adc
orl
in
in
int3
jo
cli
gs
xchg
jge
das
jl
xchg
cmc
jmp
bswap
insl
ljmp
pop
push
dec
dec
add
xor
and
aad
iret
or
and
pushf
sbb
push
ret
mov
cmp
xchg
in
adc
cli
test
add
and
pop
mov
mov
shlb
cli
mov
sub
lods
ljmp
aas
add
xchg
jp
sbb
lret
xlat
rcrb
sti
pop
ja
cmp
mov
fs
addr16
fnsave
add
mov
pop
and
cmc
inc
cmp
pop
fcomi
dec
cmp
adc
je
hlt
cmpsb
cld
cltd
jno
lcall
xchg
or
xchg
push
pop
nop
imul
dec
xchg
stc
addr16
xchg
cmpsb
add
lods
mov
leave
jb
stos
fcmovbe
push
mov
mov
mov
fs
bound
in
push
loopne
pop
ss
jl
adc
pop
cmc
bound
xor
and
xlat
testb
fwait
adc
mov
xor
cmp
push
sbb
je
loope
popf
pop
sub
out
dec
data16
lahf
shrl
cmp
into
enter
adc
lods
mov
dec
push
mov
cltd
inc
xchg
lods
ljmp
dec
ret
pop
daa
adc
cmp
call
mov
sub
adc
test
sahf
add
fsubr
and
call
orb
sbb
arpl
sbb
jno
popf
mov
pop
jns
adc
xchg
cs
jnp
arpl
sbb
and
jno
xlat
inc
lahf
pop
xor
lret
js
imul
lods
arpl
iret
stc
pop
cmp
das
notb
mov
dec
xor
push
sbb
jnp
leave
fldenv
push
flds
in
daa
sub
jns
add
pushw
cmpsl
adc
icebp
jno
mov
cmp
mov
cld
mov
pushf
pop
stos
rorl
mov
mov
pop
cmp
movl
outsl
out
sub
jle
add
enter
and
add
fwait
inc
push
je
ljmp
add
push
mov
sarb
xor
sub
rol
ljmp
xchg
cmp
xchg
xchg
mov
inc
push
shrl
sub
call
ret
out
and
add
mov
mov
or
cmpsl
xor
jecxz
jge
push
lahf
pop
lahf
into
pop
cmp
outsb
rorb
push
jle
sti
and
jmp
or
jge
sahf
shlb
mov
out
andb
and
jne
repz
out
ds
xlat
push
mull
scas
mov
fsubrl
and
aad
test
sti
jge
mov
dec
adc
in
xlat
push
dec
pop
push
gs
into
cmp
out
xchg
ret
repnz
lock
popf
test
pop
adc
lcall
in
sub
scas
xor
adc
fisubrl
sti
je
xchg
divl
cmpsl
adc
cld
jns
loop
pop
add
or
fmuls
aad
sub
repz
inc
arpl
adc
push
xor
jge
fwait
lret
inc
push
push
push
and
repz
lahf
lcall
cmp
rorl
push
shlb
lds
mov
insb
add
xchg
shll
or
sbb
rorb
orb
mov
inc
sbb
hlt
scas
or
jns
les
add
xchg
jne
jmp
scas
jo
sub
push
ds
adc
cmovbe
jo
cmp
dec
sub
mov
std
in
orb
lds
jmp
lahf
sbb
xor
data16
push
jecxz
imul
pop
testb
fidivl
loopw
mov
andl
incl
sti
push
mov
sub
xchg
popf
sbb
mov
lods
add
repz
fstpt
std
das
or
xlat
pop
dec
fisttpl
rolb
mov
inc
add
mov
test
mov
gs
and
lcall
fbstp
shrl
push
fildl
cmp
jecxz
nop
cld
clc
cltd
mov
nop
jns
lock
fwait
pop
jg
mov
orl
jge
cs
roll
sub
shrb
into
fmul
pop
pop
out
push
and
mov
call
sbb
add
mov
mov
ds
pop
popa
mov
test
mov
jg
xchg
mov
rcrl
lea
mov
orb
icebp
xchg
es
or
mov
add
and
mov
data16
add
aaa
xchg
in
push
xor
pushf
scas
jne
das
dec
in
jge
lods
sarw
orb
popf
push
and
cs
cmpsb
or
enter
ja
out
nop
sub
mov
lds
insb
imul
inc
std
jae
mov
mov
ficoms
stc
xor
mov
loope
cmc
adc
mov
mov
mov
mov
or
insl
aas
push
aad
xorl
fnstcw
xchg
jbe
ja
cmp
gs
mov
addr16
adc
imul
pop
cli
push
push
jg
das
popa
out
pop
aaa
sbbl
ljmp
cmpsl
sbb
insb
pop
sbb
clc
and
mov
add
or
or
mov
add
pop
out
dec
and
popf
sti
negl
push
mov
mov
jg
jmp
pop
bound
inc
xchg
mov
test
in
movsl
mov
inc
jbe
add
xchg
inc
insb
cmp
outsb
iret
jl
mov
in
mov
testb
rcll
divb
fdivrl
inc
and
iret
or
dec
push
enter
dec
cmpl
scas
test
fidivrs
or
data16
add
sti
sub
mov
mov
adc
xor
test
sbb
jp
into
mov
mov
or
pop
jae
lret
test
ret
jge
add
inc
mov
hlt
aad
mov
lods
inc
mov
sub
add
je
or
call
clc
ds
imul
push
shl
insb
cmc
fsubs
xchg
pop
sub
enter
push
mov
or
inc
insb
jmp
fisttpl
xchg
ljmp
fisubrs
mov
int3
xchg
cwtl
dec
psllq
cmp
out
sub
mov
ljmp
add
dec
inc
das
out
mov
gs
pop
push
dec
xor
lods
push
inc
shlb
lods
inc
loopne
mov
xor
xor
jp
arpl
jl
cmpsl
add
cwtl
out
mulb
push
push
cmp
pop
movlps
int3
mov
popa
cs
daa
int3
cli
test
adc
ret
fcoms
pop
data16
jns
adc
repnz
and
clc
lods
scas
cltd
js
call
add
pop
ss
jbe,pt
sti
push
inc
xor
insl
adc
cmp
insb
xchg
ret
jns
movsl
sbb
push
add
inc
sub
jo
push
sbb
adc
push
mov
test
mov
push
sub
imul
ja
xor
jl
adc
add
test
push
jmp
cmpsb
sbb
sub
nop
sahf
jle
cltd
out
jb
cmp
sbb
xchg
iret
incl
mov
sti
cld
int
add
or
or
pop
das
mov
xchg
pop
std
mov
rol
cmpsb
in
or
icebp
aaa
popa
scas
sbb
push
xchg
mov
push
sti
ficompl
orl
movsl
push
ljmp
cltd
mov
lea
mov
arpl
dec
sub
jl
ss
mov
pop
mov
lock
add
jg
jle
xchg
pop
inc
or
push
repz
push
rorl
daa
add
jns
xor
jl
add
lret
in
pop
rcll
or
out
rcrl
push
xchg
test
cmp
ljmp
jnp
dec
cwtl
sbb
fsubs
aam
sahf
pushf
test
jae
mov
dec
sub
in
mov
mov
jg
dec
jecxz
ret
add
mov
cmp
imul
aad
daa
cmc
inc
subb
std
and
iret
mov
std
shlb
jecxz
int
das
push
mov
orb
mov
jle
pop
int3
scas
xor
arpl
loope
mov
outsl
rolb
in
shlb
loopne
xor
sbb
psubq
jge
mov
call
out
cmpsb
inc
fucomip
mov
dec
mov
test
addr16
imul
and
adc
cltd
jp
adc
jecxz
sbb
test
and
xchg
int3
dec
test
jecxz
mov
push
cmp
add
jmp
je
xchg
push
pop
cli
and
shlb
fs
dec
add
decb
mov
dec
mov
sbb
andl
or
pop
or
jp
mov
sahf
notb
mov
out
shll
sub
rcr
repnz
push
lahf
push
cmpsl
lret
push
sub
lret
sbb
adc
nop
cmp
push
add
xchg
mov
hlt
out
inc
outsl
xchg
in
rorl
push
or
insb
lds
cwtl
sub
call
and
repz
fimuls
xchg
test
push
aad
mov
mov
push
cmp
dec
int
add
sub
les
ljmp
jbe
lods
sub
jns
xchg
xchg
add
mov
xchg
mov
xchg
fsubl
sub
nop
cmp
pop
xchg
xor
cli
std
out
dec
gs
cmpsb
push
lock
add
jg
fisttps
imul
mov
or
inc
jge
nop
out
addb
adcl
fstps
dec
dec
mov
inc
jne
and
dec
ss
push
jle
mov
pop
popa
and
test
mov
fnstsw
or
mov
inc
pop
push
dec
mov
fisubs
fistl
sbb
push
sbb
cmp
mov
flds
inc
inc
movsl
jmp
test
cli
jbe
clc
insl
scas
rcrb
sub
push
cmp
adc
jecxz
mov
shlb
cmpsb
cld
mov
jno
push
push
sarl
test
pop
cld
aad
mov
cli
add
out
std
cli
sbb
xchg
out
or
dec
jmp
test
jno
adcb
jg
dec
orb
or
ja
jbe
jle,pt
stc
aad
int3
pop
jb
loop
and
jno
xor
pop
push
in
jo
sbb
pop
pop
push
sbb
mov
pop
jno
sub
lcall
gs
loop
enter
leave
outsb
and
push
push
lcall
push
and
sub
arpl
dec
stos
mov
push
mov
mov
std
mov
inc
dec
jecxz
jno
addr16
jo
xor
inc
jbe
cltd
std
jne
cs
push
jge
int3
bound
insl
dec
mov
fs
scas
xchg
out
ss
inc
or
jne
lock
sbb
call
icebp
adc
xor
sub
add
add
shlb
mov
mov
jp
mov
out
sti
stos
in
push
inc
jmp
jg
adc
repz
sbb
lret
jno
lahf
or
insl
sbb
or
jae
std
push
sbb
insb
addr16
jb
xchg
lahf
stos
mov
mov
and
das
adc
cs
lods
inc
lret
inc
ret
xchg
clc
out
shrl
lods
stos
lods
jae
out
in
pop
push
sub
out
jge
lret
sbb
cs
pop
fcoms
xchg
fsts
mov
jno
dec
or
add
sub
jo
call
xchg
xchg
push
fwait
push
fwait
jl
and
xor
in
cmp
divl
sahf
js
nop
loopne
mov
adc
stc
cmp
mov
xchg
pop
mov
jnp
inc
movsb
add
inc
xor
pop
lea
xchg
stos
push
sub
into
push
mov
jnp
lds
pop
fsubp
test
ss
and
fdivs
or
fnstenv
lods
lret
or
add
loop
jg
sarb
pop
leave
xor
ret
in
mov
imul
push
push
dec
aad
loopne
aaa
mov
xchg
push
rorl
fbld
mov
ficomps
push
cmp
push
repnz
jae
mov
repnz
addr16
pop
pusha
cltd
dec
imul
mov
push
lcall
jge
inc
sub
inc
scas
movsb
fs
add
jnp
aam
shl
adc
bnd
movsb
inc
daa
add
sbb
jno
pop
sub
mov
loop
mov
daa
push
inc
inc
fisttpl
adc
adc
arpl
and
roll
xchg
addr16
pop
adc
lea
into
pop
pop
ljmp
xor
mov
and
xchg
and
fisttpll
out
mov
jb
xor
jle
push
inc
in
lods
adc
daa
jp
es
icebp
icebp
loope
push
mov
je
int3
xor
aaa
push
add
cmp
cmp
repz
ss
pop
sub
fisubl
aas
xchg
mov
into
pop
pushf
push
mov
adc
out
push
iret
inc
imul
add
das
movsb
ret
loope
mov
jg
insl
or
xor
fldcw
xchg
addr16
out
loop
ret
dec
daa
enter
lret
cmc
jae
jle
in
test
mov
adc
sbb
scas
xchg
inc
insl
jae
icebp
aam
or
movsl
fdivp
mov
sbb
fistps
push
jecxz
jmp
iret
insl
mov
std
aaa
icebp
add
mov
fldl
jge
dec
push
jnp
inc
mov
xchg
pop
cld
out
dec
imul
add
test
aas
dec
dec
popf
rdmsr
jae
inc
lea
adc
fimull
cs
stos
nop
dec
jnp
inc
out
subps
mov
lods
repz
out
in
inc
arpl
inc
cs
repz
mov
mov
jecxz
mov
aam
cmpsb
dec
loope
pushl
movsl
xchg
dec
loopne
sbb
xor
test
sub
test
roll
incb
enter
dec
movsb
in
mov
into
mov
cmp
movsl
adc
xor
cwtl
lret
movsb
inc
xchg
inc
je
mov
cmp
push
cmp
test
aas
cmp
popa
popl
cld
aam
shlb
fldl
lods
outsl
xchg
jbe
std
sarl
pop
mov
je
sbb
fld
mov
pop
inc
outsl
pop
push
dec
subl
mov
add
cmpsl
push
pop
push
add
and
ss
loopne
in
mov
daa
mov
pop
xor
fadds
xor
fucom
fwait
rorb
arpl
icebp
jge
jae
pop
xor
sbb
aam
and
lock
loop
xchg
je
inc
sub
fwait
sub
jb
mov
scas
pusha
test
iret
lret
sbb
lret
inc
insl
jp
nop
imul
dec
dec
push
lds
leave
dec
scas
enter
sti
fstpt
fs
out
stos
inc
sbb
fs
test
fidivs
ss
stos
fucomp
mov
shrl
aam
addb
outsb
mov
js
and
pop
lods
or
je
loope
imul
adc
dec
test
fsubp
jne
je
lea
jmp
stos
sbb
aas
lret
cmc
add
loope
cmp
outsl
mov
repnz
icebp
gs
test
int3
sahf
jae
push
cltd
mov
enter
fnsave
sbb
outsb
sti
jo
lods
xor
stos
add
sbb
ret
sahf
lahf
addl
enter
xchg
xor
rclb
enter
sqrtps
imul
sub
sub
gs
scas
dec
sub
sub
test
shll
mov
push
xchg
js
imulb
movsl
out
outsl
cmpsl
mov
mov
xorl
loop
es
mov
aam
inc
pop
adc
sbb
adc
aad
add
xchg
adc
cmpsb
inc
add
xchg
mov
push
ss
daa
or
cmp
xchg
xor
cmp
shll
icebp
pop
add
subb
adc
inc
lock
lret
push
pop
add
adc
sti
inc
adc
push
test
sub
or
and
add
xchg
add
iret
inc
push
andl
cmp
mov
fnsave
pop
cltd
rorl
jmp
sbb
dec
sbb
mov
xchg
out
xor
je
add
xchg
iret
or
mov
es
cmp
dec
fidivs
jbe
cmp
lea
testb
mov
pop
adc
orl
lea
sub
mov
and
lret
jno
adc
subb
out
es
test
push
insb
adc
fcoml
lcall
push
out
sub
inc
repz
add
cmp
aam
mov
outsl
jae
insb
out
push
add
test
mov
testb
push
loope
push
push
lds
ret
xchg
cld
inc
jne
jmp
or
lret
sbb
sahf
add
sub
aaa
nop
mov
pop
jl
insl
push
mov
ja
es
out
mov
mov
cmp
cli
enter
arpl
jns
popf
aad
call
ret
add
pop
xor
pop
pop
cld
test
ljmp
sub
out
cmpsb
inc
scas
xchg
nop
mov
out
repz
jae
mov
jp
xchg
andl
add
sbb
cmp
inc
and
in
jp
cmp
call
popf
enter
inc
test
xchg
xchg
movsl
mov
add
xchg
push
dec
adc
jg
mov
rep
pop
push
mov
xlat
push
add
out
lret
notl
xchg
dec
and
or
inc
loopne
imull
out
xlat
pop
int3
jecxz
pop
cmp
push
addr16
push
lock
ret
aaa
mov
pop
dec
mov
je
cmp
mov
adc
js
mov
mov
sub
icebp
ja
lock
fdivrp
dec
rcrl
sbb
orb
xor
mov
jnp
inc
or
xchg
jg
push
jne
sub
cmc
in
cmpsl
icebp
sub
adc
push
cmpsb
fidivl
push
mov
popa
sub
dec
pop
cmp
mov
pop
push
lcall
fists
addb
add
les
fsubp
std
scas
pop
dec
scas
rorl
pop
fsub
loop
jl
adc
xchg
xchg
mov
xorl
jns
mov
and
in
mov
inc
adc
push
sub
mov
fisttps
sbb
sarl
stos
fisubl
add
ret
mov
xchg
xchg
loop
adc
sbbl
movb
popf
clc
movsl
jb
inc
loop
pop
add
int3
dec
and
push
mov
lret
xchg
and
addl
dec
mov
inc
mov
insl
mov
adc
mov
jbe
std
out
roll
fbld
xor
dec
xorl
xchg
ret
mov
ljmp
jmp
imul
add
arpl
add
sub
adc
ss
xchg
sub
repnz
jno
punpckldq
int3
jnp
mov
jo
into
dec
pop
test
lcall
ds
cmp
or
sbb
outsl
int3
jns
cmp
and
dec
inc
es
cmc
bound
dec
xlat
jmp
lods
xor
and
cmp
insl
test
rolb
sar
clc
cli
outsb
inc
inc
xchg
sti
out
mov
mov
add
or
mov
inc
sahf
inc
lods
add
mov
movsl
push
scas
push
push
loope
repz
pop
loopne
mov
aas
xor
mov
push
js
cmp
lahf
cmp
rcrl
jbe
sbb
xlat
jmp
iret
add
ds
ret
hlt
in
mov
mov
fldenv
test
rolb
xor
sub
push
aad
and
mov
mov
jecxz
dec
and
jbe
imul
lock
stc
daa
mov
add
push
cmp
push
mov
cwtl
mov
jnp
mov
in
jg
popf
push
inc
mull
sub
cmc
sub
push
andl
fdivs
adcl
sub
push
add
jae
jbe
fnsave
ja
push
xchg
les
mov
mov
outsl
aas
mov
cld
jecxz
movsb
mov
ds
pop
inc
pushf
rorb
pop
jns
mov
fsubs
xor
mov
movsl
pop
insw
ds
or
or
idivb
fstl
adc
xorl
pop
lret
addl
xchg
dec
mov
push
aad
fs
sub
xchg
movsl
int3
sub
add
xchg
mov
fnstsw
aas
lcall
mov
std
sbb
cmc
rorl
pop
test
cli
and
push
mov
js
ds
es
lcall
jbe
ficoml
out
int3
clc
pop
sub
lahf
daa
and
repnz
dec
jbe
insl
scas
xor
add
jnp
sbb
ss
push
ja
mov
jne
repnz
adc
gs
pushf
mov
jle
push
jno
iret
sub
dec
nop
xor
xchg
outsb
test
xor
cmp
repz
out
adc
loope
pop
popa
cmp
inc
jl
xor
jb
lea
inc
movsb
les
not
popf
inc
jne
clc
push
mov
sbb
mov
cmp
or
sti
fadds
ja
out
jl
call
add
leave
roll
sahf
pop
cltd
push
test
jecxz
dec
pop
inc
cmpsl
mov
xor
jbe
stos
mov
clc
jo
mov
mul
xchg
push
shr
push
adc
rcr
pop
push
adc
jp
xor
or
stc
subb
lds
imul
and
sub
test
xchg
decl
ret
sbb
pop
jb
adc
mov
repnz
inc
frstor
inc
pop
dec
insl
shrd
mov
mov
out
sbb
jnp
test
dec
stc
data16
push
mov
repnz
in
aam
cli
mov
mov
stos
xchg
shrl
mov
cmp
dec
dec
clc
push
call
mov
and
sbb
movsl
xchg
ljmp
or
sti
jecxz
push
adc
push
push
push
ret
sahf
sub
clc
ds
pop
icebp
lret
adc
outsb
jne
adc
popa
sub
nop
inc
loop
mov
push
mov
rolb
cmpl
push
insb
push
or
insb
ja
les
jno
dec
mov
loope
sbb
int
popf
repz
stos
movsl
arpl
sbb
in
xlat
outsl
int
xchg
bound
test
xchg
push
dec
aas
lret
mov
lcall
adcb
popa
xlat
or
and
xchg
adc
not
dec
mov
daa
stos
int3
xor
xchg
jecxz
lea
push
mov
fldcw
mov
or
cmp
push
fidivrs
mov
outsb
loope
lcall
std
adc
decl
lock
les
sbb
lods
addr16
test
cwtl
leave
int
test
xchg
nop
cmp
or
dec
jnp
imul
ds
jmp
xorb
xchg
repz
jnp,pn
jmp
lret
rcr
dec
sub
fwait
adc
js
adc
jae
pop
xchg
shlb
mov
sub
lods
jge
add
pop
cmp
popf
js
add
or
push
ret
int3
add
loopne
jnp
jb
mov
cmp
call
fcmove
ja
jo
cmp
dec
mov
leave
xor
in
repz
mov
ret
xor
xchg
cwtl
push
inc
out
cmp
imul
lea
lcall
ss
ret
jne
shl
pop
aad
test
push
jbe
jnp
test
add
in
ficompl
dec
enter
inc
leave
sub
dec
popa
mov
lcall
lcall
test
cmc
sub
dec
and
cmc
xlat
loopne
dec
cmp
arpl
adc
dec
cmpsb
and
in
icebp
and
xor
mov
cld
sbb
cli
xchg
jo
test
testb
xor
movsl
cmpsl
mov
xor
iret
imul
mov
into
sbb
loope
enter
bound
pop
imul
mov
repnz
sub
adc
ja
popf
in
rcrl
pop
mov
jp
xor
sub
sti
xchg
cmpl
push
and
push
int
scas
dec
cmp
dec
inc
cmpsb
ret
fistpl
mov
clc
fmul
stos
sub
xor
mov
xchg
shlb
sbb
mov
mov
sub
ror
xchg
push
shrb
jno
sbb
js
inc
mov
nop
xchg
sbb
mov
sahf
sbb
loopne
lahf
je
cmc
mov
mov
shll
jg
pusha
aam
inc
or
sbb
cmpl
stos
je
sub
push
jns
sti
dec
add
pop
xchg
xlat
cmp
mov
xor
iret
mov
jle
xor
inc
cmpsl
lock
xchg
mov
mov
push
lea
enter
sti
cmpsl
inc
sahf
mov
in
cmp
pop
addl
dec
in
mov
pop
cmp
loop
push
fisubrl
in
mov
inc
popa
and
inc
mov
xor
and
out
xor
fcompl
add
mov
out
test
fs
mov
push
je
xlat
push
ds
movsb
sbb
jo
mov
icebp
dec
mov
bound
cmpsb
and
movsl
jg
inc
mov
adc
mov
js
push
and
xchg
dec
pop
mov
dec
sbb
ss
data16
or
mov
pop
mov
mov
or
aaa
push
cwtl
pushf
mov
dec
jmp
mov
and
mov
jle
pop
cmpsb
rorl
int
or
or
push
mov
pop
mov
fisubs
xchg
leave
insb
ret
jge
jle
nopl
jge
mov
or
out
cmp
pushf
xor
inc
jg
cmpl
push
jnp
sti
mov
add
inc
test
add
mov
push
sbb
push
aad
jecxz
or
outsb
gs
dec
fcoms
int
lret
movsl
rcr
sbb
rorl
rolb
and
mov
hlt
lock
fs
sahf
int
call
in
adc
out
mov
hlt
mov
lret
dec
mov
xor
mov
les
jp
pop
cmpl
pop
cs
orl
iret
mov
adc
mov
inc
bound
add
data16
and
fiadds
sbb
and
or
rcrl
adcb
xor
lcall
enter
leave
xchg
push
imul
lds
xchg
frstor
mov
jp
enter
lret
imul
adc
add
notb
jns
lods
xchg
pop
mov
adc
inc
jge
dec
arpl
cmp
loope
test
mov
scas
pop
cmp
hlt
lret
push
fcomps
dec
xchg
xchg
bound
inc
jno
pop
movsl
inc
pop
hlt
pop
pop
sbb
mov
inc
int3
clc
fists
pushf
popa
loope
loope
imul
pop
out
mov
pusha
mov
jl
pop
jle
xchg
inc
lcall
inc
rcrl
loope
aaa
mov
xor
xchg
orb
addr16
bound
jecxz
iret
mov
add
push
aaa
xor
divb
push
sahf
je
ss
adc
mov
mov
jae
aas
out
and
xchg
cmp
or
adc
jb
pushl
ret
push
loop
insb
mov
xchg
add
test
daa
js
jno
fstpt
ror
popf
cmp
cmc
int3
pop
jmp
test
les
daa
or
sbb
mov
stos
stos
or
mov
pop
sbb
dec
mov
loope
insb
cmp
dec
sbb
mov
ds
lret
xor
aaa
add
bound
adc
mov
movsb
pop
xchg
xchg
xchg
sbb
sub
es
insl
and
into
mov
cltd
pmulhw
push
sbb
pop
hlt
add
loope
dec
and
idiv
and
jne
push
or
cltd
fisubrs
cli
sub
fmul
jp
mov
inc
jnp
aas
xchg
iret
mov
mov
sbb
fisttps
push
rclb
mov
pop
adc
cmp
rcrl
mov
in
dec
je
scas
data16
push
pop
daa
cltd
cmc
call
add
dec
or
scas
in
clc
repz
mov
mov
lret
mov
pusha
fisttpll
js
call
mov
out
mov
stc
sbb
sub
or
mov
push
int3
xchg
test
pushf
mov
rcll
and
in
pop
add
and
xor
jae
dec
popa
fsubp
pop
add
inc
mov
sub
jmp
jge
call
fidivrs
pop
mov
jbe
dec
sub
cmp
dec
cmp
les
faddl
mov
sbb
testb
mov
or
inc
mov
pop
adc
push
mov
dec
cli
or
xorb
xchg
xchg
sbb
inc
push
insl
pop
or
idivb
xchg
adc
stc
cmp
daa
outsl
nop
xchg
and
sbb
outsl
xchg
aas
push
xor
test
push
sbb
outsb
mov
cmp
add
addr16
mov
pop
mov
cmp
rcrb
scas
not
out
arpl
pushf
jns
je
imul
ja
test
ja
or
inc
add
push
mov
xor
inc
cmp
testb
lcall
xchg
ret
xor
call
sub
daa
rolb
mov
fwait
popf
dec
xchg
sbb
adc
lret
or
adc
enter
aad
je
or
fs
and
push
xchg
push
jae
notl
sub
sbb
xor
imul
jnp
pop
jmp
shll
cs
mov
sbb
out
lods
add
add
adc
incl
insl
xor
lods
mov
cmp
pop
int
ja
xchg
add
push
pop
daa
xchg
aas
arpl
xor
aad
jo
jl
aaa
sarl
ds
xchg
out
mov
fldenv
std
jns
pushf
push
push
fsubr
mov
pop
into
stc
sub
xor
mov
cmp
dec
sub
sbb
or
int3
sub
aas
dec
cmpl
lock
dec
ljmp
sub
cmp
inc
push
repz
aaa
sti
addr16
xor
data16
lret
lock
mov
mov
jno
mov
test
cltd
popf
stos
int3
sub
jae
shrl
mov
xchg
or
fisubs
add
mov
jns
testb
cmpb
or
in
dec
in
mov
lahf
add
sbb
pop
jge
xor
in
sub
movsl
insb
jmp
in
shll
xor
icebp
sub
sar
inc
pop
xchg
jl
popa
shll
repnz
inc
fstpt
cmpsb
adc
adc
sub
push
dec
mov
rolb
mov
or
movsl
scas
cmp
lcall
test
and
es
addb
pop
add
or
push
test
iret
mov
inc
jmp
push
call
xor
scas
jae
ss
jl
aam
dec
pop
add
adc
pop
push
lret
push
popa
xchg
out
push
mov
cmp
shll
add
push
mov
cld
and
scas
dec
ss
int3
xor
xchg
pop
daa
jg
into
lcall
dec
jmp
or
dec
xor
jl
repz
sbb
popf
dec
in
mov
icebp
sub
add
int3
mov
add
or
jne
cmc
inc
hlt
mov
jns
sbb
jae
ret
push
sbb
sbb
mov
and
mov
lods
es
lods
inc
fstpt
cmpsl
mov
add
inc
arpl
jp
shl
pop
push
push
ljmp
pop
aam
shlb
xor
roll
cld
lret
fistl
mov
jns
sbb
xchg
mov
add
dec
stos
orb
sbb
push
stc
sub
lock
jae
mov
xor
or
pusha
mov
lcall
in
aam
jns
aaa
lea
cs
fisttpll
mov
sub
xchg
xor
or
push
cmp
insl
in
pop
lret
dec
iret
and
inc
or
inc
or
mov
dec
fldl2e
imul
fmull
ds
or
movsl
divl
mov
inc
xchg
ret
lock
xor
dec
mov
nop
clc
mov
adc
scas
movsb
or
ja
xchg
add
inc
pop
mov
mov
push
push
outsb
jle
sbb
sbb
xchg
xchg
lods
or
popa
xor
int
fmul
mov
ss
imul
popf
xchg
mov
jae
jle
jns
mov
dec
dec
jle
int
or
ds
sahf
xlat
pop
testl
sti
bound
add
jne
iret
je
mov
dec
dec
push
les
aad
ret
rorl
sar
inc
aaa
lds
in
inc
sub
xor
scas
cmp
pop
push
cmp
dec
enter
call
ret
ret
jmp
mov
jns
or
scas
jle
je
cmp
loope
xor
fsubrs
cmpsb
jo
jmp
lods
or
or
xorl
out
call
ljmp
daa
mov
mov
arpl
jbe
mov
xchg
out
adc
das
cmp
sbb
pop
scas
ss
jle
ret
loope
mov
jp
rclb
xor
mov
sbb
and
dec
dec
lahf
pop
xchg
std
jae
fisubrs
movsl
cmp
pushl
add
mov
push
fnstsw
out
negb
push
in
adc
or
xor
loopne
adc
mov
mov
in
inc
jp
dec
xlat
sub
test
enter
mov
xchg
adc
outsl
imul
xchg
loope
les
test
mov
cmpb
iret
test
pusha
xchg
xchg
dec
sbbl
mov
jae
popa
fucom
mov
pop
mov
push
inc
hlt
push
mov
out
pavgw
or
mov
mov
jns
push
lds
inc
and
pop
cmp
sti
mov
mov
mov
mov
mov
imul
push
stos
pop
dec
stc
sub
or
bnd
pop
mov
lahf
sub
xor
sub
or
fstpt
aam
cmp
dec
mov
ljmp
push
fsubs
cmp
test
cmp
sub
pop
jge
mov
ret
icebp
arpl
or
mov
pop
inc
inc
mov
test
inc
inc
lods
fisubl
lret
or
iret
cmp
sbb
data16
rcrl
and
out
aam
mov
cmpsb
lods
addr16
aam
adc
cmp
push
outsl
lock
adc
add
test
jmp
add
inc
pushl
inc
or
ficomps
movsl
cmc
push
sub
fstp
sbb
mov
out
mov
push
push
jp
adc
cld
push
adc
jo
mov
push
testl
jecxz
test
pop
or
arpl
dec
movsl
in
shrb
mov
les
into
dec
inc
insb
mov
pop
fimull
popa
movsb
lods
ss
repnz
mov
popa
pop
cld
and
dec
orb
fndisi(8087
sti
sub
int3
cmp
imulb
or
mov
pop
mov
add
push
dec
xchg
scas
adc
andb
es
or
pop
jge
cmp
jp
int
xchg
stos
push
jecxz
xchg
or
or
cld
sub
dec
aas
mov
fistpl
mov
push
add
aad
js
outsl
in
int
fcomps
mov
and
mov
sbb
mov
pop
fwait
xor
stos
fwait
out
and
xor
negl
inc
inc
lock
pop
mov
addl
movb
or
jb
jge
gs
jnp
outsl
repnz
je
cmp
and
mov
mov
mov
addl
push
in
jae
or
mov
shll
aad
lea
and
sbb
nop
aam
adc
mov
push
aaa
in
stc
mov
mov
aam
xor
xchg
push
clc
add
cmpsb
jns
jl
inc
sbb
pop
or
je
pushf
icebp
mov
add
ret
mov
sbb
mov
inc
test
xchg
daa
lret
mov
push
mov
push
jmp
xor
das
aas
aaa
push
int3
shrb
cmp
test
imul
sti
shrl
out
dec
pop
rcrb
call
dec
sti
repz
mov
mov
xchg
loope
sbb
xor
nop
dec
gs
mov
lds
mov
add
add
mov
mov
std
leave
andb
adc
mov
dec
jmp
dec
mov
adc
scas
jbe
or
sbb
stos
jbe
sbb
xchg
js
xchg
jne
adc
jns
and
fstps
rclb
xchg
stos
push
mov
mov
data16
adc
push
push
xchg
sbb
insb
inc
int3
jbe
pop
or
lret
cmp
fdivl
lahf
bound
scas
rcl
call
test
and
test
or
ret
sub
sbb
test
cmpl
movl
mov
adc
dec
pusha
lret
subb
fdivr
mov
mull
or
xor
ret
pop
test
sbb
xchg
dec
sub
xlat
xor
loope
adc
adc
xor
xchg
mov
mov
sub
fs
push
mov
ja
dec
das
incl
out
mov
lock
int3
pop
add
insl
or
lahf
aaa
mov
mov
fists
jl
and
mov
and
xor
inc
mov
mov
sti
lret
adc
add
xchg
or
cmp
jns
mov
lcall
cld
lret
push
mov
sar
cmp
movsl
or
cmp
mov
dec
loope
je
arpl
imul
or
mov
outsb
dec
test
inc
push
mov
inc
lahf
or
ds
sub
stos
add
insl
and
sbb
xchg
dec
out
pop
out
enter
jo
adc
push
mov
jmp
fistpll
lods
xchg
sub
nop
sub
pop
lods
jns
shlb
cmp
mov
jne
sbb
mov
xadd
xor
lods
inc
rolb
cmpsb
nop
ret
inc
mov
sub
mov
xlat
orl
inc
ret
jmp
xlat
cmp
xorl
subl
outsl
jae
mov
leave
jge
popf
or
inc
jge
xlat
orl
sub
mov
iret
pop
lret
and
lahf
insl
faddl
pop
out
inc
mov
dec
inc
int
xchg
push
sahf
mov
push
xchg
in
jp
add
fimull
fisubrl
repz
insb
mov
mov
xchg
adcb
sbb
pushl
or
int3
or
scas
jns
mov
pushf
add
in
or
lret
mov
sahf
xchg
sbb
sub
mov
mov
test
jne
loope
pop
mov
jecxz
aam
stos
xchg
cld
nop
les
movsl
pop
imul
gs
fsub
daa
fcompl
ja
xchg
out
pusha
cmpsb
jo
loopne
es
and
test
push
xchg
pop
pusha
pop
push
mov
jecxz
nop
mov
cmpsl
insb
daa
scas
addr16
jle
adc
dec
fldenv
sbb
dec
sbb
cmpsl
sub
adc
negb
jmp
pop
push
fisubrl
enter
add
movsb
xchg
int3
clc
fadds
out
std
cmpsl
lods
xlat
add
ret
dec
pop
lods
and
and
cmpsl
or
aas
jbe
call
add
stos
mov
sbb
lods
rcrb
fidivrl
xchg
sti
mov
mov
popa
push
int
mov
or
and
pop
mov
lahf
cmp
rol
push
pop
lret
adc
jns
loope
cmp
movsb
outsl
jl
cmp
pop
lcall
dec
cmpsb
adc
push
xchg
adc
and
dec
adc
jge
fwait
xchg
mov
sbb
jo
or
jecxz
lods
mov
xor
inc
fsts
or
std
cmp
test
es
xchg
mov
xor
xchg
xor
push
bound
jmp
loope
mov
iret
dec
loope
pop
or
ja
push
push
xchg
imul
das
fistpl
push
int
into
xchg
outsb
out
cmpsb
jns
dec
pop
or
lahf
cmp
aas
enter
scas
fdivl
add
rolb
dec
lret
push
in
das
cwtl
cmp
and
xchg
ja
dec
je
ds
adc
xor
in
stc
mov
je
mov
jge
into
lcall
pop
repnz
frstor
jp
or
sbb
out
popl
mov
and
jne
mov
mov
xchg
lds
cmp
cltd
bndldx
in
xchg
mov
addl
shl
add
mov
outsb
inc
daa
pop
adc
inc
lods
test
xchg
lods
pop
and
andb
sub
leave
xor
dec
movsl
in
cmpsl
xchg
cmp
leave
mov
imul
aad
cwtl
pop
adc
sub
inc
cs
in
lahf
push
in
push
insb
das
inc
mov
std
ret
lret
jge
dec
ret
shll
out
pop
imul
sub
cmp
jl
add
push
imull
dec
jp
push
loopne
xorb
inc
out
sti
and
xchg
scas
xchg
pop
inc
mov
mov
jl
inc
lret
call
int
int3
loope
loopne
repnz
sub
xor
lock
xor
nop
sbbl
push
or
sub
scas
and
xchg
aaa
les
andl
xchg
sub
jle
xchg
sarl
cmp
shlb
rorb
sub
sbb
jae
mov
ljmp
inc
aam
fisubl
and
push
xor
clc
xchg
ret
inc
aad
in
js
xchg
sarb
cli
movsl
pop
hlt
mov
xchg
mov
inc
fists
jae
xchg
into
adc
inc
popf
xchg
push
pop
out
dec
mov
scas
fs
lea
and
rolb
push
cmpsb
pop
push
mov
jbe
shrl
aas
dec
jb
jnp
stos
mov
xchg
daa
test
dec
aam
ds
push
push
lods
inc
mov
mov
sbb
insb
push
cltd
inc
and
mov
fidivrs
xchg
out
sbb
cmc
inc
add
xchg
stc
sub
xchg
prefetchnta
stos
call
js
scas
popa
addr16
sbb
fnstenv
lods
mov
lock
jnp
pop
mov
shll
or
adc
inc
adc
movl
imul
sbb
int3
lock
sahf
dec
hlt
xchg
push
int
or
and
cmp
sets
dec
mov
cltd
inc
daa
mov
or
notl
fidivl
push
fidivrl
sub
push
mov
push
pop
add
jnp
mov
ret
aas
sarl
jns
pushf
and
gs
mov
inc
loop
add
mov
xchg
imul
xor
adc
pop
cmp
lea
stc
pop
xor
push
movsl
pop
xchg
adc
inc
inc
jmp
xchg
xchg
dec
sbb
mov
sahf
cld
jb
cmp
out
or
repz
mov
jns
cld
mov
mov
push
scas
lret
add
loopne
xor
mov
es
daa
in
test
das
cli
adc
cmpsl
pop
incb
inc
clc
adc
addb
dec
mov
xchg
sbbl
inc
add
jno
test
push
jbe
cmpsb
xchg
out
dec
mov
lds
in
test
addr16
adc
outsb
cmpsl
pop
shlb
push
add
dec
add
int
adcl
jle
inc
fwait
jl
sbb
mov
sub
xor
jl
and
lahf
add
rorb
scas
dec
jb
fdivp
shr
outsb
or
sub
cmp
fdivr
pop
lods
xor
pop
pop
sbb
nop
or
movsl
loope
fs
ret
negl
sar
movsb
sbb
mov
push
push
dec
outsl
rcrb
xchg
mov
fsts
insb
mov
inc
mov
add
inc
in
push
out
push
sbb
shrb
aaa
jnp
stos
mov
pop
inc
sub
shll
das
pop
pop
fwait
jb
dec
andb
mov
cld
mov
imul
xchg
xchg
xchg
clc
xchg
jno
lahf
inc
xor
mov
jle
int
lret
cmp
pop
xor
test
out
lods
cmp
mov
cld
jmp
rcr
aam
shl
aam
mov
add
or
xor
insl
sub
xchg
xlat
cs
outsl
call
js
ss
notl
push
lret
sbb
stos
cmp
outsb
stos
push
stc
outsb
gs
jl
xor
insl
hlt
clc
dec
jno
jle
mov
into
or
pop
xchg
push
cmp
rclb
ss
sbb
sbb
inc
mov
xor
mov
out
adc
inc
or
pop
mov
in
inc
xor
cmp
stos
or
in
cmp
fcoml
xor
leave
mov
ljmp
lock
test
movsb
clts
xor
add
cld
in
pop
push
daa
cltd
outsl
call
nop
das
xchg
xchg
mov
xor
flds
jnp
inc
adcl
xchg
sub
rol
and
cs
pop
push
in
testb
popl
jbe
sbb
cltd
push
lahf
xorl
jo
mov
add
fdiv
clc
pop
pop
adc
mov
inc
push
mov
xchg
les
insb
rcrb
mov
push
loopne
jnp
lods
sbb
and
or
sbb
mov
insl
adc
sbb
mov
xor
xchg
aad
test
jg
xor
movb
pop
adc
loop
jb
shrb
mov
icebp
push
xchg
cmpsb
cli
jecxz
hlt
test
jnp
test
setno
cmpb
cmp
addb
hlt
cmc
sub
mov
imulb
mov
mov
outsl
mov
and
incl
xchg
xor
test
dec
testl
out
dec
adc
ret
xlat
hlt
cmp
shlb
addr16
fwait
dec
xchg
pop
lret
dec
divb
es
adc
adc
cmp
cmp
push
out
jg
inc
aad
stos
pop
sbb
sub
cmp
sarb
fstpl
or
or
add
dec
adc
mov
out
dec
fld
daa
or
rorl
fbld
sbb
xchg
sti
push
adc
sub
pop
inc
jmp
mov
repnz
jle
into
pop
inc
pop
cmovno
sbb
xor
aas
movsb
push
and
fwait
insb
or
je
push
lret
pop
enter
int
jmp
stos
mov
or
cmp
lret
shll
jg
test
pop
xor
dec
int
push
cmpsb
rorb
cmpsl
test
test
mov
stos
test
push
mov
xlat
xchg
popf
pop
lahf
jp
shr
lret
fwait
xor
and
pop
sbb
ljmp
std
imul
ljmp
push
and
adc
push
ficoms
rorl
popa
test
stos
out
xchg
or
push
mov
mov
in
out
pop
dec
fadd
adc
sub
test
cwtl
xchg
xchg
mov
shr
ds
dec
cmpsl
int3
or
into
cli
movsl
je
add
dec
cmp
pop
xor
push
dec
lcall
cmp
xor
jno
cmp
bound
xchg
xor
cmp
inc
hlt
cmp
xchg
pop
pop
ljmp
ds
inc
mov
stc
stc
push
daa
pushf
test
fstpt
mov
imul
mov
pop
sbb
mov
mov
shll
adcb
mov
adc
into
fmuls
test
pop
imul
add
jns
icebp
ja
dec
rcl
sub
in
inc
inc
movsb
lods
adc
cmp
add
iret
into
out
mov
push
inc
and
or
nop
mov
loopne
ror
ret
xchg
jecxz
nop
add
ljmp
test
mov
add
xor
test
fwait
insb
into
xchg
mov
divb
xor
je
push
mov
pop
bound
inc
mov
data16
rolb
mov
mov
outsb
filds
mov
lahf
ds
rclb
aas
ror
lea
inc
and
jp
inc
fsubrs
mov
ss
test
sbb
out
in
cmp
xor
mov
mov
sbb
leave
xorb
inc
mov
xchg
test
push
mov
jle
dec
fdivs
mov
cli
mov
bound
stos
out
jl
add
mov
cs
or
stos
aad
sbb
outsl
or
nop
mov
pop
sbb
pop
sub
push
mov
popf
mov
lods
test
add
movsb
mov
or
lret
popa
out
adc
rep
test
aad
outsb
sbb
or
out
loop
push
cmp
std
or
jne
cmpsl
push
xor
add
outsl
gs
popa
sub
js
mov
ret
mov
cltd
adc
push
mov
test
or
fstpt
pop
pop
jns
bnd
pop
mov
jae
push
mov
sbb
sbb
xchg
insl
hlt
cmp
inc
cmp
mov
js
push
and
shl
push
je
sbb
fsubrs
loopne
or
pop
outsl
jb
cwtl
inc
jae
mov
mov
cltd
lods
ret
pusha
mov
je
pop
scas
cs
cmp
add
gs
dec
dec
push
flds
aam
dec
or
imul
push
xlat
sbb
jle
lret
test
inc
fisubrl
shlb
push
push
ss
sbb
gs
xchg
cmp
arpl
data16
daa
jnp
outsl
outsl
sub
cmp
push
inc
and
jb
mov
or
jle
dec
roll
fsubl
push
xor
inc
push
cmp
xchg
test
mov
inc
cmp
data16
dec
andb
xchg
push
fmull
adc
sbb
sbb
cmpsl
add
shll
loope
sbb
out
arpl
and
and
sbb
pop
movsl
adc
jl
sub
std
cmpsl
dec
popf
jmp
push
xor
inc
out
loope
lahf
xchg
or
lds
loopne
pop
es
and
pop
dec
arpl
xchg
cmp
popa
outsb
xorl
fwait
adc
xchg
push
shlb
mov
jb
and
jmp
pushf
lret
nop
in
mov
mov
pop
mov
std
push
jbe
jge
push
inc
add
mov
fdivrl
jp
xchg
push
xlat
fadds
stos
cltd
cmp
aad
int
xorb
cmpsb
inc
cmp
pop
lcall
push
inc
int3
nop
pop
lahf
pop
mov
mov
inc
mov
inc
ret
mov
insl
cmp
fs
in
push
fisubl
jp
ret
dec
or
inc
popa
dec
jbe
sbb
cmc
jmp
es
mov
xchg
in
shrl
insb
in
rcrb
push
lahf
sbb
jns
mov
dec
or
das
mov
push
sbb
jnp
adc
push
lds
xchg
int
sub
in
xchg
xchg
pop
cld
xor
mov
vmread
nop
inc
xor
inc
movsl
in
sbb
cwtl
lret
int3
ss
pop
stc
cmpsl
loop
adc
or
jge
pop
cmc
mov
push
inc
mov
addb
add
ds
lods
push
jno
mov
cmp
jbe
fadd
adc
call
mov
cmpsl
popf
xchg
jbe
insb
clc
xor
scas
cmp
pop
mov
mov
leave
lods
cld
jmp
fcmovb
jnp
cmp
sbb
hlt
xlat
push
push
data16
xor
dec
in
leave
cmpsb
int3
cld
testb
mov
sbb
jbe
xorl
scas
and
aaa
sub
hlt
clc
repz
pop
xor
add
mov
adc
sbb
lcall
and
push
push
loop
xchg
push
imul
sub
xor
lcall
sahf
mov
inc
jp
jnp
fwait
movlps
int
test
sti
rcrb
jle
sub
add
cmpsb
repnz
push
out
ret
push
arpl
shr
hlt
mov
cwtl
lods
sarb
xorl
lods
stc
push
int3
repz
cmp
out
pop
add
push
pop
mov
add
jecxz
jecxz
js
int
or
fwait
hlt
in
fcomps
sahf
or
pop
sti
clc
inc
inc
inc
testb
ss
mov
pop
arpl
das
imull
mov
int
dec
mov
cmp
ret
dec
sbb
or
pop
push
cmc
ret
cmpsb
xchg
pop
adc
mov
push
inc
or
xchg
outsl
jl
rorl
dec
jecxz
cmp
mov
lock
jmp
js
stos
fdivrs
std
sbb
inc
inc
jb
test
mov
push
movsb
adc
lret
push
out
rcrl
rolb
leave
loopne
mov
sarl
xchg
xchg
ss
inc
mov
sbb
outsl
xchg
push
mov
sub
gs
mov
add
int3
mov
xchg
std
push
push
out
cltd
push
jmp
mov
xor
mov
aaa
mov
sbb
pop
out
inc
xor
cmp
cli
inc
sub
in
mov
repnz
js
data16
mov
andl
leave
loop
movsb
popa
push
addr16
cmpsl
mov
leave
stc
mov
add
mov
jae
pushf
mov
pop
cmpl
add
push
mov
xchg
or
out
sub
ljmp
popf
mov
sbb
jo
dec
or
mov
test
bound
cmpsb
inc
sub
ss
cmp
adc
cmp
mov
push
das
in
data16
insb
or
mov
cmpsb
movsb
add
lret
int
repz
jmp
xor
shr
xchg
xchg
mov
jl
fwait
pusha
xchg
pop
cmp
rorb
arpl
push
mov
fcompl
xor
test
xchg
negl
inc
xor
loop
jl
pop
lret
push
daa
fcmovnbe
xchg
xchg
mov
mov
int3
sbb
hlt
xchg
push
adc
cs
hlt
jecxz
push
and
sub
sub
inc
sub
mov
outsl
cmp
or
dec
pop
inc
ret
ret
adc
fwait
popf
es
fst
sbb
mov
lods
mov
and
out
push
filds
rep
dec
jg
scas
xor
fdivrl
ret
push
inc
sub
je
mov
test
rol
mov
mov
mov
inc
mov
adc
clc
sbb
sbb
shlb
nop
sbb
in
orb
add
or
mov
pop
out
out
xor
stos
mov
shlb
xlat
data16
sbb
jo
mov
lock
fimull
cmp
inc
dec
aam
mov
push
cmp
xchg
cmp
pop
xchg
mov
sub
mov
into
dec
hlt
cmp
xor
lret
pop
cmp
xor
dec
lea
sbb
shll
fistl
lods
sbb
scas
lea
je
adc
out
jl
adc
clc
movsl
lods
push
push
mov
push
cld
fisttpll
sbb
cmp
push
fdivrl
and
enter
pop
scas
lret
mov
ret
lret
and
popf
in
aaa
psubusb
frstor
dec
fcomi
int
pop
cwtl
xchg
rcrl
lcall
stos
repnz
jle
push
jecxz
pop
outsl
dec
std
icebp
inc
sbbb
pop
test
inc
push
mov
mov
xlat
push
aaa
inc
mov
xor
xchg
int
jl
in
xchg
or
loopne
aad
fisttpll
sahf
and
insl
ss
imul
push
out
mov
add
mov
sbb
out
rorl
sahf
push
inc
jle
in
xchg
mov
enter
sarl
inc
cmp
or
add
jmp
jne
mov
xchg
dec
out
int
leave
arpl
or
pop
mov
sti
outsb
cmc
daa
xchg
pop
sarl
inc
sub
xchg
ror
push
bnd
dec
and
cmpsb
cli
bound
hlt
jmp
inc
fistl
xor
dec
enter
movsl
int3
fcoml
sbb
repnz
mov
aas
or
and
xchg
push
testl
and
mov
sub
push
imul
shll
test
jmp
sbb
lret
adc
pop
jb
lods
jmp
fadds
add
jg
shr
inc
add
push
addb
add
jl
inc
jg
xor
or
mov
cltd
add
mov
xor
icebp
pushf
pop
mov
mov
loope
jge
jb
xchg
push
add
lock
inc
push
inc
jbe
inc
xor
inc
js
out
dec
cmp
push
data16
fnstenv
dec
cmpsb
inc
fidivl
rorb
psllq
pop
jae
jnp
dec
in
dec
ja
insl
inc
scas
xor
mov
enter
add
stos
cld
or
test
in
je
add
xor
mov
js
ja
ret
and
mov
push
inc
xchg
xchg
xchg
fbstp
std
xor
mov
dec
jl
xor
jmp
and
mov
pop
and
push
out
movsl
mov
xor
and
sub
xchg
negl
jg
bnd
inc
int3
outsb
pcmpgtd
xor
fdivl
ret
and
cs
xor
sahf
and
xor
cmc
sbb
fcoms
xchg
and
test
cmp
fst
cld
mov
out
aam
test
and
sbb
jle
int3
shrl
push
mov
mov
stos
mov
mull
jg
push
ljmp
jbe
out
push
pop
sbbb
cs
lods
in
jnp
cs
iret
xorb
xchg
push
adc
ss
mov
pop
aam
xchg
push
mov
mov
mov
js
mov
vmread
jmp
jnp
fld
outsb
adc
pop
push
enter
in
mov
arpl
add
add
out
xchg
in
jae
cwtl
mov
cmpb
jae
xchg
shlb
sbb
stos
pop
dec
cld
or
fwait
ds
jo
pop
jne
pop
pushf
push
push
sub
mov
sbb
and
push
insb
jns
arpl
je
lea
call
mov
push
int3
mov
test
enter
cwtl
das
sub
fcompl
cmc
cld
and
cmp
aam
push
cmp
clc
mov
sbbl
in
dec
dec
jge
inc
fists
push
dec
dec
inc
fsubrs
sub
out
mov
and
inc
pop
and
frstor
cmc
mov
out
push
nop
mov
cwtl
inc
stos
adc
outsl
mov
mov
daa
and
jmp
test
mov
push
or
jae
fildl
mov
lea
sbb
adc
push
mov
stc
mov
and
pop
adc
mov
pop
xchg
jb
call
clc
mov
dec
and
sub
xchg
mov
mov
aas
mov
push
xor
iret
sub
std
dec
push
and
cmp
dec
pop
push
fistpl
fucomp
fsubrs
mov
sub
repnz
shl
idivb
cmp
ss
xchg
in
cwtl
and
inc
outsb
inc
jmp
jmp
inc
es
sbb
push
xlat
mov
ds
xor
xor
dec
cwtl
daa
xor
xchg
or
xchg
out
stos
mov
nop
adc
stos
jl
into
out
inc
inc
movsl
pusha
loop
notb
inc
lods
out
push
push
sbb
lods
in
xlat
mov
data16
pop
xor
fbld
and
ret
or
jmp
popa
lret
inc
add
shlb
and
adc
in
cs
mov
test
jl
test
or
data16
scas
pop
push
inc
or
xchg
xchg
fcomps
dec
mov
mov
int
sbb
rcr
and
or
pop
adc
jp
test
lock
xchg
je
jo
movsb
gs
std
ret
out
mov
lahf
addr16
jle
insl
push
movsb
inc
cld
leave
or
or
lods
add
sub
mov
xor
loopne
in
dec
bound
xchg
stos
and
in
push
add
dec
xor
dec
jge
jle
mov
jecxz
mov
push
and
mov
ss
mov
xor
hlt
sahf
sbb
fs
fnsave
push
js
jmp
jno
iret
outsb
jb
lds
and
cmpsl
test
imul
cltd
in
pushf
jbe
sub
mov
and
lea
shll
call
and
loopne
push
stos
sarl
fs
sbb
push
jl
pop
adc
scas
je
data16
mov
test
sub
add
rclb
push
sub
push
lret
not
and
pop
andb
xchg
lods
cld
xor
and
add
inc
mov
lret
pop
in
push
jne
jbe
shrl
ret
cs
adc
xor
fchs
pop
sbb
sub
dec
push
mov
and
xor
mov
dec
push
sar
pop
add
jle
xchg
pop
fists
lds
or
sbb
pop
daa
mov
out
sub
adc
lret
jnp
pushf
aad
sti
jno
cmp
arpl
xchg
enter
movsl
out
lods
adc
and
testl
sbb
dec
or
pop
cmp
push
or
aad
shl
dec
je
sub
leave
std
sub
or
push
push
inc
clc
add
xchg
jmp
das
ds
in
lea
std
pop
ret
fists
repz
sahf
out
repnz
fcoml
les
xchg
loope
xor
js
mov
test
jp
decl
ja
pop
mov
std
ljmp
out
enter
and
add
shll
inc
dec
je
dec
inc
jno
jg
jmp
add
leave
or
adc
add
clc
mov
sarl
popa
shlb
mov
out
std
fsubrl
push
push
pop
push
int3
jbe
fsub
rcr
addr16
popf
mov
sbb
in
jmp
xor
shll
es
ret
shll
call
mov
pop
mov
sbb
adc
aas
add
testb
daa
xor
out
aad
inc
emms
ja
stos
pop
mov
popf
xor
add
pop
mov
lea
dec
adc
test
imul
pop
sub
fwait
xchg
xor
insb
push
ret
repnz
repnz
lahf
lret
mov
push
sbb
jbe
push
loope
xlat
xor
or
cmc
and
pop
lret
xchg
mov
push
lock
stc
lock
js
or
push
pop
jmp
popa
sbb
adc
xchg
frstor
scas
test
cmp
or
sub
jle
lcall
fchs
adc
pop
repz
es
repnz
gs
test
mov
sub
popl
sahf
into
sub
xor
or
sarb
jmp
test
adc
push
sub
sbbl
inc
dec
jns
testl
gs
push
movsl
jno
or
mov
xor
adc
jmp
int
ss
jge
xchg
add
popf
cmp
push
add
jae
lahf
cmc
arpl
and
push
loopne
jmp
add
jmp
and
out
addr16
movsb
sub
add
mov
xor
and
std
nop
popf
gs
mov
mov
inc
lret
jo
xor
in
sub
imul
nop
sub
mov
xor
jns
adcl
xchg
stos
test
inc
sub
mov
clc
lret
add
pop
pop
mov
icebp
lds
es
push
outsb
scas
pop
xor
jmp
add
test
mov
push
lcall
les
imul
sub
ss
jp
inc
and
lock
movsl
mov
ja
inc
into
cltd
pop
jl
dec
ja
mov
jo
and
mov
jecxz
fistps
sub
sbb
aaa
xchg
sub
dec
insb
imul
int3
xchg
dec
jmp
addr16
mov
adc
pop
adc
fwait
orb
jae
loop
out
push
push
bnd
sub
jp
inc
jb
jae
fwait
xor
outsl
pop
adc
cmpsb
pop
push
sbb
lret
sub
jb
cmpl
idivb
jb
je
pop
mov
push
inc
mov
xchg
inc
or
fstpt
popa
sbbl
mov
adc
scas
jbe
int3
xchg
sbb
and
rcrl
aam
push
test
rorl
cmc
add
xchg
imul
dec
sub
mov
and
inc
aas
int
inc
or
or
or
mov
xchg
inc
or
dec
mov
movsl
lock
sub
pop
fs
popa
insl
pop
dec
xor
sub
and
cwtl
test
out
mov
inc
mov
in
dec
add
fiaddl
mov
sti
ja
or
popa
mov
add
lret
subb
inc
dec
ljmp
and
push
pop
loop
lahf
lcall
pop
inc
or
stos
push
bound
mov
out
and
pop
outsb
inc
nop
mov
ret
sbb
ds
iret
mov
stos
sub
or
imul
push
add
repnz
mov
sti
pop
cmpsb
das
xor
scas
and
cmp
xor
mov
andb
shl
xor
test
xchg
lods
lock
jo
out
sbb
sbb
cmp
dec
ret
pop
sbb
sbb
push
dec
mov
leave
push
and
push
js
push
inc
fs
ds
pop
daa
pop
icebp
dec
sub
xchg
xchg
mov
push
xchg
mov
or
sbb
mov
mov
push
add
or
lds
mov
xchg
sub
jecxz
je
inc
ret
and
dec
inc
pusha
cs
mov
lods
adc
xchg
sub
xacquire
sahf
mov
and
mov
push
xchg
pop
adc
aam
ret
jecxz
cs
mov
es
xchg
out
jbe
stc
xor
movsl
push
sahf
sbb
call
dec
mov
mov
sbb
push
mov
movsl
jmp
es
int3
ret
sbb
or
aam
dec
jne
leave
ljmp
popf
sbb
test
stos
lret
dec
pop
mov
mov
push
and
icebp
pop
inc
lret
mov
xor
popf
mov
or
sbb
xor
lods
jne
inc
fimull
mov
enter
shl
fbstp
inc
jge
jmp
mov
mov
push
adc
pop
jno
aam
mov
dec
xchg
aas
lock
mov
adc
push
pop
jbe
mov
pop
cli
push
push
jge
push
mov
lods
lcall
adc
inc
jecxz
ss
faddl
mov
xor
addr16
push
xchg
push
in
jle
mov
pop
or
jae
sub
outsl
jnp
les
or
leave
dec
mov
sub
ficomps
sub
call
jns
inc
es
jp
pop
add
jl
mov
pop
xchg
mov
pop
into
ljmp
xchg
cmp
test
fmull
and
sbb
aas
dec
test
xchg
bound
ss
jo
sbb
jmp
push
scas
inc
pushf
imul
and
nop
mov
adc
fwait
mov
lahf
ljmp
rcr
enter
das
jne
cli
jl
pop
mov
lahf
les
fwait
adcb
fistpll
xlat
sub
and
ficompl
out
in
mov
ds
ja
jb
dec
or
jmp
add
jecxz
mov
sti
xabort
adc
in
rorl
adc
push
add
jno
dec
das
cmp
out
mov
jnp
dec
subl
gs
inc
dec
enter
pop
mov
sub
mov
std
mov
push
and
inc
inc
dec
lret
sub
mov
add
add
push
js
mov
out
and
repz
or
xchg
xchg
pushf
sub
push
sbb
jl
cmp
inc
sbb
sbb
pop
stos
mov
xor
stos
and
fcmovnb
inc
xchg
insb
mov
pusha
repz
leave
or
inc
fnop
mov
es
ret
xor
dec
imul
rcrb
add
push
mov
jno
inc
adc
lret
shl
mov
adc
call
ljmp
in
mov
sbb
mov
mov
push
nop
sbbl
jle
std
adc
push
into
scas
pusha
xchg
cmp
fcomps
mov
mov
ja
mov
mov
mov
imul
shrb
sub
mov
xchg
dec
shlb
mov
dec
ret
mov
xor
movsb
pop
jge
in
xchg
mov
lds
gs
and
mov
test
push
popf
lods
xchg
mull
fstl
fcom
jg
loop
xor
stc
outsb
int
mov
cmp
push
dec
rcrl
loop
jnp
mull
add
sbb
into
dec
out
adc
sub
iret
into
mov
je
dec
out
sbb
jae
adc
fdivs
out
sbb
test
mov
dec
mov
into
repz
pop
leave
xchg
js
insb
das
sahf
arpl
fwait
push
je
push
xchg
test
stos
int3
in
fwait
movsl
xor
scas
sub
sbb
lds
cmpsl
lock
test
cmpsl
mov
data16
out
inc
xchg
push
mov
jne
stc
aaa
mov
sti
mov
fs
lods
cmpsl
adc
sbb
stos
mov
xor
push
mov
lods
lock
sub
das
dec
test
pop
adcl
shlb
pop
inc
xlat
sub
out
ror
push
sbb
aad
add
mov
je
rclb
fwait
jo
push
aam
xor
xor
jbe
push
repz
das
mov
sub
testb
scas
lcall
sbb
bswap
inc
test
xchg
jnp
in
sub
dec
mov
out
jl
imul
mov
out
jo
add
pop
aas
sbb
rol
imul
sbb
fstps
mov
push
adc
and
stos
int
pusha
and
inc
lret
add
mov
inc
adc
je
mov
jge
nop
mov
mov
push
and
imul
pushf
das
push
in
pop
dec
jmp
inc
jle
ret
dec
xchg
push
aaa
enter
sbb
sti
xchg
imul
fnstenv
push
leave
imul
scas
lods
sub
xorb
out
mov
pop
jnp
stc
xor
rorb
mov
pop
lods
movsl
fdivs
xor
dec
xor
loopne
push
fwait
mov
repnz
cmp
testb
jnp
adc
rorl
push
xchg
or
jbe
inc
inc
enter
clc
stos
es
add
movsl
xchg
mov
cmp
jp
ljmp
pushf
bound
mov
mov
push
test
lock
mov
std
ss
cmpsl
mov
orl
ret
aam
jge
sbb
jge
testb
push
adc
inc
jmp
pop
xor
std
scas
inc
or
arpl
or
jle
add
mov
subb
call
das
loop
xchg
inc
sbb
jmp
shlb
jl
mov
or
fcoms
daa
sti
pop
sub
xor
push
pop
or
out
push
enter
test
jecxz
cmp
out
jmp
pop
pop
aas
xor
jno
mov
fstl
sar
jp
fildl
push
lock
sub
mov
mov
shlb
orl
and
dec
mov
out
cmp
cmp
test
imul
mov
in
cmp
stc
pop
add
stos
push
jae
inc
dec
les
arpl
add
ror
adc
cmp
xor
sahf
shl
lret
push
mov
mov
scas
xor
shl
test
and
test
ficomps
scas
repnz
pop
mov
add
push
xor
jae
xchg
add
fs
loop
ret
imul
pop
jbe
aad
push
pop
push
xchg
movsl
pop
pop
cmp
outsb
lcall
scas
insb
in
jmp
sbb
dec
imul
cltd
adc
pop
aad
push
mov
iret
mov
into
lea
push
adc
icebp
shrl
push
fcomps
jbe
pop
jnp
notl
jp
pop
sahf
pop
dec
aam
stos
scas
fsubl
xchg
ret
adc
in
cmp
fbstp
xchg
ljmp
into
movsb
push
pop
push
sub
sub
aam
or
pusha
pop
push
dec
and
js
inc
sub
mov
pop
iret
mov
mov
lock
outsb
loop
mov
cli
mov
or
xchg
ret
xchg
les
sbb
stos
cmp
dec
les
loope
cmp
sbb
xchg
mov
jp
pusha
inc
mov
aas
fnstenv
inc
outsb
mov
add
lahf
jae
push
aas
test
repnz
pusha
jp
lods
cmp
or
xorl
shlb
pop
icebp
jle
mov
push
cmp
pop
cmp
jg
adc
pushf
sbb
leave
sbb
jecxz
testl
sbb
xor
sbb
push
lahf
scas
pop
dec
mov
sahf
stos
lods
ljmp
push
mov
push
dec
push
nop
lcall
xchg
mov
loop
jge
adc
aam
je
or
and
notb
mov
ja
mov
cmp
xchg
pushl
out
bound
push
fmuls
adc
lret
sbb
sub
fwait
ret
sub
pop
push
sub
xchg
sbb
in
mov
inc
lret
mov
faddl
mov
add
cmpsb
fwait
and
out
xchg
and
out
frstor
pop
push
pop
mov
push
cmpsl
jo
leave
out
mov
mov
enter
ss
mov
ss
pop
int
jg
outsb
mov
leave
or
lea
hlt
dec
dec
sbb
jecxz
inc
push
and
push
es
xchg
inc
in
jle
aam
stos
popf
mov
sarb
shr
in
imul
sbbl
ljmp
cmp
mov
push
mov
xchg
cmp
shll
add
xchg
and
adc
adc
pop
popl
push
ds
into
mov
xchg
adc
adc
mov
pop
cmc
adcl
push
add
sahf
jle
test
cmpl
ficompl
mov
popf
mulb
inc
jp
pop
pop
scas
push
sub
pop
xchg
cmp
push
sub
bound
adc
pop
test
cmp
mov
ljmp
mov
dec
jmp
sbb
pop
lds
shrb
mov
jbe
loop
adc
push
inc
aaa
out
sbb
push
pop
jge
and
stos
xor
sbb
popa
iret
scas
inc
out
mov
jp
lds
sbb
adc
xor
loope
je
adc
dec
inc
xchg
fistl
fsubrl
jo
aas
mov
pop
outsl
cs
mov
cmp
out
mov
test
pop
test
push
push
out
sub
xor
std
imul
in
fs
inc
and
nop
aad
pop
jecxz
inc
test
pop
cmpsb
test
inc
xchg
sbb
repnz
pop
repnz
push
outsl
or
jns
pusha
mov
clc
cld
mov
mov
dec
xchg
push
fsubrs
jg
dec
imul
test
jns
inc
push
dec
stc
jge
cmp
repnz
addr16
jecxz
mov
jno
das
ret
sub
movsl
movsl
push
adc
repz
movsl
cmpsl
addl
inc
loopew
and
rcl
cmp
sbb
ss
mov
stc
leave
insb
push
add
mov
xchg
ljmp
lds
shrb
push
dec
push
and
jecxz
out
pop
les
dec
gs
pop
add
pop
or
cmp
xor
push
and
push
jp
push
stos
jmp
call
jne
and
or
fwait
insb
mov
pop
negl
xlat
jecxz
pop
dec
mov
sub
ret
pop
lods
dec
bnd
aaa
jb
jp
movsb
sbb
sbb
xchg
fxtract
jle
mov
inc
cmp
sbb
lret
xchg
and
mov
lret
or
sub
lea
lcall
addr16
mov
sbb
mov
cwtl
dec
jp
std
push
add
mov
cmc
aaa
or
dec
or
sbbl
and
or
pop
inc
jp
iret
jo
add
repz
push
sbb
and
jg
imul
push
pop
test
lds
xchg
into
xor
lock
or
mov
sbb
jge
jnp
lock
aaa
nop
ret
out
iret
outsb
pop
ret
pop
push
mov
test
test
repnz
aaa
cmp
mov
dec
popl
aas
loope
sbb
es
mov
and
push
xlat
pop
ljmp
adc
dec
cmp
adc
adc
int
notl
mov
aas
mov
xchg
dec
push
movsl
mov
jp
lods
movsl
sti
sub
daa
xor
jmp
push
out
inc
lcall
scas
insb
nop
jo
mov
std
inc
and
aaa
sti
mov
jge
push
dec
out
cmpsb
mov
dec
mov
mov
xchg
add
sub
outsl
inc
push
jg
pop
inc
sbb
sbb
mov
mov
push
cmp
das
sub
movsl
ljmp
xchg
addl
sub
std
ja
cmp
scas
insb
sbb
pop
lret
inc
ja
and
adc
push
and
jns
xchg
xor
or
and
fimull
jecxz
jg
xchg
fisubrl
adc
or
sbb
mov
adc
int3
test
push
les
sub
iret
icebp
xor
mov
jge
je
adc
pop
test
xor
scas
push
pop
mov
outsl
mov
cli
sahf
outsb
dec
enter
test
adc
adc
movl
in
fstpl
push
mov
pusha
jle
push
jmp
cs
repnz
enter
sub
jmp
dec
mov
and
sub
andl
rclb
into
lds
push
add
shlb
xor
xor
rorb
cmp
mov
stos
data16
stc
xchg
out
jp
jo
pop
mov
push
stos
lds
popf
sbb
fists
mov
and
je
mov
inc
idivb
lods
repz
test
insb
xor
push
stos
jecxz
loopne
dec
fs
xchg
sahf
test
add
mov
inc
test
mov
pop
push
mov
pop
sbb
cmp
jp
inc
call
lods
cli
enter
push
inc
jecxz
repnz
pop
push
mov
add
lahf
scas
xchg
mov
in
sbb
rcrl
push
lahf
xchg
sub
xor
or
sbb
enter
in
ror
pop
js
aam
mov
mov
bound
push
ss
jle
lret
mov
jae
ret
dec
fstpt
pop
enter
scas
out
xchg
imul
xchg
out
scas
jg
rolb
imul
pop
les
and
lahf
sbb
sub
cmc
inc
out
jno
pop
shll
mov
pop
xor
inc
icebp
test
aam
js
lods
push
or
inc
lods
fcomps
scas
sub
imul
sub
or
test
pop
jle
loope
pushw
jecxz
leave
pop
mov
cmp
cmp
stc
aam
out
ret
and
xor
xchg
jae
add
mov
mov
or
sbb
sbb
stos
xchg
scas
add
push
loope
and
xchg
pop
jb
xchg
jp
ret
mov
cmp
fadd
sbb
mov
and
push
or
mov
push
sbb
mov
inc
or
add
sti
mov
cwtl
sbb
shrl
mov
jl
mov
dec
iret
lock
jns
push
ss
sub
mov
fcomi
mov
pop
cmc
xor
add
mov
and
jo
daa
fsubs
orl
cmp
adc
add
cmp
out
mov
aam
je
inc
daa
stos
xchg
lret
cmp
in
sbb
popa
inc
rcll
push
aad
lds
imul
xchg
packssdw
std
test
pop
outsl
xchg
adc
xchg
out
dec
repnz
fwait
push
xchg
pop
fidivs
inc
andb
jne
sahf
loop
lret
aam
add
gs
test
ljmp
inc
sub
mov
mov
push
sar
xchg
jo
hlt
jmp
rclb
hlt
mov
push
mov
jno
jne
aaa
test
call
cmovle
fs
fwait
call
and
outsb
inc
outsb
insl
and
mov
fabs
sub
or
sbb
popf
pop
sbb
mov
mov
lahf
cmp
mov
aaa
or
add
sub
out
enter
xlat
aas
sub
xchg
jge
push
movsb
sub
inc
xchg
les
outsb
dec
mov
sbb
stos
test
jne
add
and
out
clc
popa
mov
push
popa
or
fistpl
and
sbb
mov
or
bound
pop
dec
jp
inc
les
and
lahf
mov
xchg
cwtl
add
mov
or
add
add
sti
sar
fstpl
jle
fwait
sbb
scas
mov
movsb
inc
or
push
push
mov
inc
jp
jo
scas
and
stos
cltd
cmp
outsb
jne
loope
and
gs
imul
inc
pushw
repz
aas
std
or
mov
mov
in
aam
test
addr16
mov
inc
test
stos
ret
dec
in
out
clc
mov
inc
lahf
fidivrl
scas
out
jg
push
js
lretw
testb
push
pop
sbb
out
stc
mov
test
jmp
pop
rorl
rorb
pushf
push
xchg
imul
sbb
testb
fimuls
aaa
sub
jmp
loope
sub
cmpsl
es
popa
lods
cld
mov
fcoms
sahf
in
mov
or
adc
repnz
iret
mov
sahf
imul
push
arpl
enter
ds
bnd
jl
dec
dec
aas
dec
int3
dec
push
mov
mov
mov
and
push
es
icebp
dec
mov
mov
shll
in
test
cs
pop
dec
jp
fsubrs
jae
inc
arpl
imull
fnstsw
pop
cmp
dec
inc
push
hlt
cmp
xchg
je
inc
cltd
cmp
or
gs
enter
xchg
enter
mov
in
and
popf
mov
mov
mov
int3
pop
jecxz
loopne
fs
fdivr
dec
adc
jmp
jp
fwait
mov
xlat
rclb
ljmp
dec
in
mov
jle
lahf
pop
call
pushf
aaa
push
push
mov
out
ds
fsubp
xor
mov
dec
sbb
popf
xor
jp
daa
icebp
sbb
sub
cld
cmpb
cmpsl
xor
sbb
loop
sbb
popf
jbe
cmpsl
pop
sbb
sub
mov
fldcw
dec
or
sarb
dec
fcoml
aad
pop
scas
hlt
stc
jle
jo
iret
loope
jo
test
mov
fiadds
es
add
stc
movsb
or
sub
push
pop
stos
mov
popa
testb
jl
pop
cmc
push
mov
divl
inc
add
mov
fs
stc
xchg
ficoms
sbb
enter
or
cli
mov
pop
cmpsl
int3
jns
pop
daa
sbb
add
mull
insl
inc
mov
jo
leave
clc
mov
in
sub
ss
mov
mov
dec
push
ds
or
jge
pop
test
jae
xchg
mov
dec
imul
push
or
mov
cld
test
imul
add
mov
mov
sti
jle
ljmp
jnp
aam
stos
sub
cmp
jmp
cmp
pop
stos
xchg
mov
or
sbb
mov
xor
scas
gs
mov
jl
jno
inc
fldl
mov
stc
push
sub
xor
jmp
stos
call
push
les
sbb
pop
pushf
cmp
dec
js
repnz
cmpsb
pop
mov
fbld
daa
pop
cmpsb
shlb
addl
adc
pop
pop
inc
cmp
sub
mov
mov
mov
sbb
add
test
out
xor
jmp
or
jbe
unpcklps
sub
push
xchg
cmp
clc
mov
fildl
mov
loopne
or
or
sahf
test
insl
and
data16
ljmp
icebp
cmpb
xchg
pusha
stc
push
push
enter
add
or
mov
xchg
in
call
dec
xor
inc
or
push
xlat
aaa
mov
jmp
es
pop
insb
aas
jne
mov
and
js
out
fistps
je
cmpsl
cs
sbb
mov
or
inc
test
iret
dec
sub
inc
and
in
repz
aaa
cmp
xchg
fisttps
fstpt
sub
bound
jo
mov
dec
and
incb
adc
sti
mov
ja
sub
testb
mov
loop
addb
dec
ljmp
adc
jb
pop
icebp
aam
adc
adc
push
cmp
mov
dec
mov
loop
inc
loopne
out
loope
sub
mov
jge
rcl
mov
ss
and
xchg
mov
iret
mov
sub
inc
add
leave
cwtl
jecxz
jb
inc
mov
imul
cwtl
push
mov
gs
pop
loop
cmc
ss
or
mov
sbb
or
aad
cmp
in
in
inc
insl
aam
dec
cmp
push
xchg
clc
xchg
nop
scas
jp
push
jg
pusha
les
orl
andl
das
imul
stos
cmp
inc
xor
outsb
repz
arpl
out
out
aas
sub
pop
jne
push
push
lcall
jb
rorl
pop
sti
ds
lahf
scas
sbb
insl
test
xor
push
lds
pop
mov
jnp
imul
icebp
pop
pop
outsl
gs
push
es
rolb
dec
lret
and
xchg
outsl
je
daa
gs
xchg
pop
std
xor
sbb
scas
icebp
out
dec
in
movsb
add
lds
mov
cmp
gs
cld
mov
stos
or
lds
add
adc
pop
adc
lret
xchg
sub
inc
cli
lds
mov
movnti
adc
fadds
xchg
call
jne
cmc
bound
dec
fucomp
xor
mov
adc
int
jb
stos
shll
add
fwait
mov
pop
or
xor
bound
dec
inc
scas
lea
sub
test
jle
xor
fisubs
imul
sbb
gs
lcall
or
xchg
cmpsb
and
in
mov
hlt
data16
out
xor
in
mov
push
add
roll
xchg
jo
jb
dec
clc
sbb
testl
pop
jo
shr
fiaddl
dec
mov
and
sub
pop
or
enter
je
hlt
cmp
aam
cs
es
dec
lahf
test
add
jmp
pop
fildll
dec
mov
orb
shrb
insl
mov
push
aaa
dec
mov
shl
mov
shll
ja
notb
jg
cld
popf
pop
dec
cwtl
psubw
inc
sub
stos
jne
sub
std
mov
sbb
stos
xchg
dec
arpl
xchg
dec
rorl
pop
push
push
and
pop
out
adc
cli
dec
aas
jae
mov
fnstenv
and
add
mov
jns
outsl
cmp
call
outsb
mov
lods
movsl
mov
xchg
dec
inc
jb
or
lahf
pop
mov
dec
adc
sub
andb
repz
insl
xchg
mov
fucomip
xor
test
js
lock
push
ljmp
rclb
mov
add
mov
mov
and
mov
inc
pop
outsl
add
in
or
jbe
inc
or
and
ss
fcmovb
dec
lods
xor
cmpsl
loopne
pop
nop
cmp
loope
pop
jge
das
cmp
or
loope
push
std
pop
xchg
xchg
sbb
push
xchg
mov
fdivl
call
jmp
subb
mov
sub
mov
cmc
bound
nop
cmc
stos
mov
lea
xor
fs
cs
loope
decb
mov
add
inc
push
inc
cs
sub
stos
or
insl
or
mov
adc
pop
dec
iret
call
mov
pusha
jmp
inc
mov
push
cmpsl
rclb
insl
xor
imul
or
xchg
inc
cmpsl
xchg
jbe
adc
push
sti
out
dec
add
add
or
imulb
fmull
js
xchg
mov
in
sub
mov
jl
ret
mov
arpl
jp
aad
das
loop
jmp
jbe
push
jle
mov
push
ss
insb
imul
loop
movsb
xor
mov
sbb
and
push
and
xor
jbe
jle
mov
movsl
and
or
iret
mov
add
adcl
das
push
out
push
fstl
inc
es
mov
jp
lret
scas
call
xor
aam
ljmp
std
jb
lret
cwtl
cmp
out
and
out
jge
pop
int
ljmp
push
mov
fcoms
mov
sub
movsb
or
andb
je
in
mov
lahf
insb
cld
and
push
and
jo
ljmp
shll
sub
mov
xor
inc
mov
sbb
pusha
mov
pop
adc
cmpsb
dec
xchg
movsb
imul
add
sti
cmc
movsb
in
push
dec
sbb
imulb
fcoml
cmc
mov
sub
push
cmc
lods
aas
and
jle
xor
icebp
fmul
and
hlt
pusha
mov
dec
ret
dec
ss
inc
in
mov
test
shlb
dec
into
jo
sub
enter
int
outsl
loop
dec
aaa
jmp
push
or
dec
jecxz
fistps
mov
aaa
les
daa
loopne
xor
xor
sahf
push
lret
fsubl
in
iret
cwtl
sbb
es
sbb
sub
sub
adc
mov
jo
cs
mov
cmp
jle
addr16
xor
inc
or
jecxz
jno
lock
push
and
push
push
nop
inc
inc
leave
inc
pop
rorl
add
jne
nop
push
sub
cs
movsl
cld
sbb
lods
sub
jle
mov
testl
std
scas
inc
pop
popf
xor
or
fstps
mov
out
fwait
cmp
ljmp
ljmp
das
faddp
mov
insb
int
dec
cmp
or
lcall
sbb
repnz
sbb
and
insl
ud0
or
gs
jnp
jecxz
lahf
mov
iret
sub
or
out
cwtl
out
mov
adc
aas
cmp
xchg
fimuls
push
push
aam
xchg
or
xor
arpl
out
cmpsl
adc
out
inc
aaa
fldcw
mov
jbe
aam
dec
and
ljmp
leave
jbe
inc
fwait
adc
sbb
cmpsb
xchg
mov
push
sub
sahf
mov
std
arpl
pop
mov
popf
loopne
out
cmp
xchg
mov
sbb
inc
faddl
sarl
lcall
dec
sub
arpl
xlat
les
inc
adc
repnz
sub
leave
mov
mov
and
mov
pop
mov
mov
popf
sub
lahf
jae
fdivr
mov
cltd
negb
inc
and
stos
ret
add
and
sti
mov
adc
xchg
sti
cmp
push
adc
push
sbb
pop
cmp
push
mov
jle
rolb
roll
pop
adc
xor
loop
inc
popa
pop
lods
cld
inc
jne
xchg
or
es
pop
cwtl
mov
loopne
xchg
dec
rclb
and
mov
pushf
sbb
jmp
shrd
cmp
mov
mov
movsb
scas
sbb
adc
adc
add
xor
leave
scas
adc
and
sti
mov
or
cs
pop
sbb
and
divb
cmp
cmp
sarl
push
stos
aas
das
ss
sbbb
imul
pop
xor
mov
sub
das
clc
cmpsl
ret
add
add
out
inc
lcall
adc
pop
gs
dec
dec
movsl
xchg
out
jae
fistpl
push
mov
mov
in
pop
std
lret
loop
xor
add
aam
ljmp
int
out
rol
adc
ds
push
mov
xchg
or
mov
add
mov
je
lea
mov
aaa
jecxz
iret
stc
push
mov
push
xlat
sbb
addr16
pop
or
ret
mov
jle
add
mov
add
mov
jle
adc
lea
cmpsb
arpl
cli
hlt
sbb
sub
cmp
jg
adc
int
and
jecxz
pop
jge
pop
pop
shlb
mov
push
lock
jge
lods
imul
add
insl
sti
xchg
aas
xchg
or
les
adc
dec
outsb
imulb
cmp
and
jo
ficoml
addr16
sti
pop
pop
mov
pop
repnz
pop
imul
jmp
in
dec
cmpsl
cld
xor
mov
aas
jae
add
sub
pop
incl
nop
mov
nop
sub
test
sbb
leave
push
popa
dec
jecxz
rclb
cmpsl
sbb
negl
jge
xchg
pop
clc
inc
mov
sub
mov
ss
or
dec
mov
ds
stos
add
jno
mov
sub
mov
mov
int
adc
xor
push
enter
pop
or
push
mov
mov
mov
mov
jl
and
pop
mov
xchg
addr16
pop
jmp
and
rcll
insb
adc
inc
mov
sbb
pop
cmpsb
stos
or
mov
imul
mov
sbb
sbb
stc
cld
js
std
cmp
sbb
push
imul
daa
das
sarl
sbb
add
sahf
sub
dec
mov
js
arpl
repnz
xor
movsl
push
mov
fs
sbb
cmp
imul
adc
sti
inc
por
iret
lcall
add
ss
stc
push
lret
sbb
ror
mov
jp
popf
mov
icebp
pop
xchg
out
stos
xchg
arpl
adc
stos
adc
mulb
js
lods
cmpsl
dec
hlt
jo
jmp
and
subb
shll
je
movsb
jbe
sub
xor
daa
out
cltd
add
cli
dec
mov
push
in
pushf
mov
lods
out
shl
pushf
jp
into
int3
cld
and
nop
test
mov
daa
jmp
mov
mov
adcb
fisubs
sub
jbe
push
cmc
mov
sbb
jge
xchg
xor
add
fisubl
test
mov
ss
mov
ds
notl
or
push
mov
aas
sub
xor
stos
add
icebp
and
xchg
ret
loope
scas
dec
xor
ss
aas
cmpb
xor
insl
xor
xchg
and
mov
mov
ror
call
leave
stc
mov
cmp
jne
fwait
ret
inc
aaa
xchg
xchg
incb
xchg
mov
jg
push
popf
mov
xchg
js
ret
rcrb
outsl
jge
movsl
aad
orb
popl
outsl
mov
notb
fmul
sti
repz
js
add
lret
push
cmp
lahf
mov
mov
incb
sub
xor
jge
jg
push
cmp
push
mov
lcall
inc
mov
mov
xor
aas
ljmp
mov
test
push
xchg
add
push
out
mov
jns
cli
mov
loop
and
push
xchg
fists
sub
dec
les
add
xchg
outsb
insb
pop
in
push
call
sub
mov
inc
daa
loop
adc
mov
outsb
ss
out
sbb
xor
loopne
pop
push
sbb
ljmp
mov
out
mov
dec
outsb
cmp
test
mov
adc
cmpb
sub
dec
addr16
inc
pop
fwait
or
xor
imul
sbb
mov
insl
outsb
xor
lahf
enter
enter
rorl
jg
les
mov
xchg
jmp
or
movsb
je
cli
cmp
outsb
fdivr
dec
ds
push
jb
sbb
aas
fadd
jge
movsl
fwait
imul
sbb
cmp
adc
push
cltd
mov
inc
scas
sub
cmc
xchg
insl
mov
mov
pushf
mov
mov
mov
cltd
gs
aas
push
imull
lret
lea
mov
imulb
and
out
and
movzbl
shll
test
push
iret
lock
sbb
test
insl
cmp
daa
mov
std
mov
xor
test
movsl
pop
mov
sub
push
cmc
mov
push
mov
cs
subb
cmp
mov
loope
pop
out
or
xchg
or
and
cmp
push
xor
jo
sub
shr
aas
push
sahf
jge
lods
or
push
test
test
iret
addr16
sub
xchg
dec
cmp
pop
pop
gs
fldenv
jb
or
test
gs
and
sbb
in
xlat
nop
fstpt
xchg
aaa
mov
push
inc
adc
repz
sbb
jae
lods
mov
enter
adc
jns
sti
scas
inc
fldcw
jle
jge
movsl
lea
inc
mov
xchg
adc
cltd
pop
notl
jnp
push
mov
fwait
xor
sti
mov
les
les
sub
mov
cmp
or
add
jmp
cmp
adcl
mov
add
dec
push
or
mov
adc
into
sar
adcb
pop
jno
and
dec
dec
jp
dec
push
mov
xorl
xor
cmp
rcl
dec
sub
daa
xchg
or
jmp
xor
sub
repnz
shl
add
in
cs
fstp
stos
fsts
sti
sub
fisubs
stos
inc
dec
jno
mov
mov
push
add
or
mov
mov
or
lods
push
or
xchg
cmp
call
shlb
inc
std
in
cmp
popa
in
sub
and
sub
cmpsl
lds
adc
sbb
sbb
adc
int
and
mov
and
push
push
arpl
fwait
movsb
aas
out
mov
sub
jb
xchg
popf
inc
add
adc
popf
dec
lods
mov
or
mov
stos
out
imul
or
dec
fdivrs
dec
cmp
or
jb
push
call
jmp
lods
negl
jae
xchg
mov
pop
jno
out
mov
neg
cli
incb
adc
sbb
and
cmpb
ljmp
lods
mov
sub
andl
insb
shrl
insb
xor
push
cld
cmp
enter
jp
or
mov
testb
popf
roll
pop
ret
lods
imul
cmp
rolb
clc
push
jno
lds
jl
sub
inc
stc
jno
mov
mov
scas
xor
jmp
jle
inc
ret
sti
cltd
fwait
jno
mov
les
mov
lds
cmpsb
cmpsb
mov
sub
add
test
push
cwtl
adc
ss
xchg
xchg
xchg
loopne
aad
mov
push
and
repnz
mov
xor
xchg
popa
cmc
fs
ja
stc
js
jecxz
out
outsb
cmp
or
jg
jo
push
imul
add
mov
aaa
aaa
test
inc
pop
adc
sarl
lcall
arpl
sub
lret
sti
call
push
std
shr
lods
xchg
inc
lods
movsb
das
imull
das
xor
mov
movb
push
arpl
jns
cmpsl
icebp
mov
mov
imul
lret
or
push
mov
divl
aaa
mov
or
clc
clc
jg
xchg
mov
cmpsl
popf
pop
jle
adc
aaa
or
push
out
nop
shl
sub
test
fsubrs
sbb
push
inc
xor
arpl
ljmp
out
loop
pop
fcompl
pop
stos
cmp
and
test
xlat
sub
stos
jg
aaa
add
or
cmp
testl
pop
repnz
push
fldcw
adc
into
jmp
mov
jb
jle
imul
cmpsb
imul
dec
incb
mov
pusha
subb
je
std
test
rorl
sbb
sub
sbb
in
sub
movsl
adc
ror
push
ret
insl
inc
addb
cs
inc
rorl
jnp
adc
adc
pop
pop
push
imul
imul
in
push
les
cmp
mov
gs
flds
bound
into
jno
cli
hlt
ljmp
mov
push
xor
lea
or
out
mov
xor
xchg
mov
aam
and
or
ja
inc
imul
mov
pop
out
jb
in
push
repnz
dec
or
push
pop
addr16
inc
push
test
or
or
int3
xor
mov
and
xchg
int3
add
arpl
jae
mov
pop
mov
sbb
push
outsb
jmp
mov
xlat
lods
mov
lahf
jb
dec
js
push
mov
jnp
mov
sub
loop
pop
sbb
push
jg
mov
and
pop
call
push
rcl
jp
outsl
push
jp
testl
and
in
mov
jnp
adc
inc
popa
inc
sti
sbb
imul
arpl
outsl
jp
add
pop
mov
jb
nop
sub
imul
cmp
je
mov
adcb
cmp
cmpsl
movsb
xor
aam
call
mov
mov
jnp
push
adc
leave
mov
shl
mov
cwtl
or
outsb
or
xor
xor
sub
insb
push
inc
divl
push
or
xor
mov
insl
imul
sbb
fidivl
mov
and
insl
scas
jb
adc
mov
sahf
jmp
pop
call
rsm
dec
int
vmovapd
rorl
pop
push
inc
dec
or
dec
inc
mov
sub
push
orl
xchg
mov
sub
mov
bnd
dec
jae
bound
push
js
or
mov
dec
ret
mov
cltd
and
and
frstor
imul
mov
ljmp
xor
mov
cli
imul
faddl
mov
xchg
popf
cmpsl
xchg
mov
cltd
jmp
aas
xchg
xor
mov
adc
or
stc
sub
in
adc
cli
into
shrl
test
xchg
loop
mov
in
xor
or
das
xor
dec
inc
frstor
mov
xchg
push
fldt
jl
dec
cmp
mov
call
lcall
mov
frstor
in
cltd
push
dec
push
or
mov
mov
push
mov
bound
mov
push
ret
andb
scas
jecxz
pop
jge
mov
mov
out
cld
jbe,pn
jb
xchg
cmp
mov
mov
mov
negl
cmp
add
fst
add
add
pop
inc
outsl
test
jg
enter
movsl
ficoml
fildll
dec
js
orl
cmc
filds
mov
repnz
jno
sbb
xchg
in
rcrl
ret
and
push
ret
sub
lret
mov
lahf
mov
cli
jno
movl
std
mov
fdivrp
ds
mov
insl
std
push
cmp
inc
adc
mov
sahf
push
pop
dec
add
movsb
jle
iret
jne
push
cmp
mov
js
arpl
jge
cmp
scas
pusha
ja
mov
outsw
push
test
pop
sbb
push
adc
and
gs
cmp
inc
adc
sub
inc
js
fld
in
sbb
shrl
xor
rcr
or
adc
std
insl
push
pop
push
jp
aad
ret
sbb
sub
jnp
mov
dec
xor
bnd
mov
sbb
sbb
mov
sub
cltd
mov
or
fsub
sbb
push
xor
imul
pusha
jae
sub
lds
dec
bnd
sub
nop
xlat
rol
repnz
daa
jge
or
in
pop
cmc
xchg
adc
les
in
icebp
icebp
and
clc
inc
pop
daa
xor
pop
sub
adc
lret
sub
sbb
inc
data16
mov
pop
in
xchg
scas
inc
sub
shlb
sahf
adc
in
adc
es
lcall
dec
sbb
mov
fistl
xor
jnp
test
mov
cmp
test
mov
fwait
test
or
sub
push
leave
inc
adc
int
jno
movsb
cmpsl
jno
add
sbb
jp
les
dec
xlat
dec
jg
rcrb
dec
mov
and
lret
jo
pop
js
mov
sbb
fsubs
pop
fwait
clc
cmp
bound
and
adcb
push
inc
pop
aas
mov
bound
jmp
imul
daa
push
inc
xorb
outsl
sbb
adc
dec
mov
mov
xchg
in
adc
iret
lret
mov
adc
test
lea
negl
clc
dec
pop
push
adc
add
out
and
cmp
push
stc
shl
mov
add
aad
cmp
nop
int3
movsl
aam
pop
sub
sub
popa
out
imul
into
sarb
pop
jge
cwtl
mov
stos
pop
int3
imull
and
shll
mov
add
lahf
orb
insb
lahf
stos
stc
imul
lret
sbb
dec
repz
lret
fiaddl
outsl
cmc
xorb
mov
mov
out
jmp
add
mov
xor
cli
dec
push
fcomp
dec
and
in
push
dec
insl
test
arpl
and
hlt
stos
jg
rolb
insb
lea
mov
call
push
adc
in
iret
mov
jne
scas
enter
jnp
cmpsb
lcall
mov
ret
xchg
lcall
scas
insb
scas
in
xchg
lret
push
loop
jae
mov
ljmp
push
adc
jp
jb
clc
sub
jbe
cwtl
mov
pop
adc
leave
sti
fisttpll
or
fdivrp
jecxz
or
gs
push
aas
mov
rclb
xchg
sub
sub
loope
jne
mov
push
mov
pop
aad
cld
ds
adc
sbb
xchg
mov
data16
cmp
cmp
cmpsl
mov
fwait
push
pop
sbb
movsb
addl
shlb
inc
sub
bound
mov
sahf
adc
dec
xor
push
mov
lea
jg
call
decb
xorb
xor
data16
add
test
ljmp
mov
pop
rolb
pop
repnz
rclb
jp
ss
xor
sub
add
inc
push
pop
cld
faddl
stos
jmp
jns
cmp
fildll
mov
ljmp
ljmp
dec
sbbl
xor
ret
mov
in
and
inc
sub
or
aam
icebp
out
ja
pop
test
push
rolb
xchg
cmp
sbb
mov
sub
pop
ret
nop
add
loopne
add
sbb
ljmp
sbb
aas
rcrb
mov
push
sti
or
push
cwtl
xor
adc
sub
lods
xchg
ret
inc
and
ljmp
aas
adc
cld
mov
cs
repz
inc
pop
sbb
bnd
ja
or
cmpsb
xchg
inc
sbbb
jb
cmp
popa
cmp
xor
sti
adc
xchg
inc
add
cli
fsubrl
test
jbe
ret
lods
push
mov
pusha
xor
ja
ds
dec
arpl
pop
cmc
hlt
popa
out
jnp
movsb
push
push
cld
mov
lahf
arpl
jb
insl
in
mov
je
sbb
ja
or
cmp
repz
jb
lret
inc
sbb
pop
stos
arpl
clc
test
mov
bound
sarb
push
orb
jo
cmc
mov
lods
hlt
jmp
imul
jne
sub
cwtl
sub
scas
xchg
adc
popf
ss
fdivl
push
or
cmpsb
inc
addr16
testb
and
xor
lock
sarb
mov
mov
fidivrs
push
xchg
stc
repnz
rclb
ret
in
fsubrp
dec
mov
cs
dec
mov
lcall
aad
bound
out
pop
in
test
xchg
out
push
insb
lods
mov
add
in
mov
xchg
pop
cmpsl
mov
mov
sbb
mov
xor
add
xorb
lcall
xchg
mov
cwtl
fwait
mov
sub
xchg
ljmp
orl
fs
ficomps
jle
arpl
pop
xor
xchg
pop
scas
outsb
mov
and
int
sub
pop
push
popa
xor
mov
bswap
inc
or
test
pop
jno
cs
ficomps
rclb
outsb
push
shrl
mov
adc
sbb
push
rcl
xchg
sbb
sbb
fsub
pop
sbb
dec
fwait
dec
cmp
inc
cmpb
clc
xchg
xchg
or
rol
imul
cmpsl
push
pop
loop
xor
inc
outsl
dec
and
clc
iret
idiv
or
call
shrl
cs
sub
sbb
leave
lcall
test
mov
sub
imul
mov
sbb
js
xlat
es
mov
icebp
cmpsb
addr16
pop
pop
or
push
test
add
adc
xor
mov
ds
out
adc
mov
mov
ljmp
jae
mov
mov
stos
dec
push
outsb
or
inc
arpl
jnp
fists
sbb
jne
push
or
into
outsl
sbb
pop
cli
xor
rcrb
xlat
test
xchg
jle
mov
call
stc
sbbl
jno
jnp
and
mov
ret
cs
loopne
insb
sub
sbb
mov
nop
pushf
mov
sbb
mov
lret
push
mov
xor
mov
addl
xchg
into
sarl
mov
add
pop
fmul
nop
adc
fidivrs
pop
pmuludq
outsl
movl
inc
mov
add
fmul
stos
xchg
sbb
adc
cmp
add
scas
aam
add
out
inc
cmp
bound
add
sbb
xchg
mov
push
test
js
scas
push
jo
out
adc
in
test
outsb
orb
test
fisubrl
and
jmp
cmp
xchg
jbe
ds
inc
jl
or
mov
std
data16
adc
shrb
clc
push
xchg
test
dec
xchg
cs
lret
push
mov
mov
lret
dec
cs
cmp
pop
lods
addr16
dec
ds
pop
cmp
inc
aad
loop
push
scas
stc
movsl
cli
sbb
mov
inc
xor
sahf
and
mov
jmp
mov
jo
jo
movsb
mov
inc
jmp
idivl
inc
int
cltd
push
xchg
mov
jge
adc
jg,pt
outsb
xor
hlt
or
and
push
icebp
sbbb
decb
cld
loop
daa
jns
mov
mov
jl
push
mov
mov
sub
or
lret
pop
ret
arpl
dec
rcrb
xchg
bound
and
je
jge
inc
lret
cmp
lock
test
pop
call
imul
or
mov
adc
cmpsl
jnp
xchg
inc
popa
leave
loopne
sub
or
sbb
push
fidivrs
sbb
fnstsw
jmp
fcoms
and
pop
push
ror
cmp
ja
out
je
test
sbbl
mull
or
call
lods
xchg
pop
cmp
and
xchg
cli
insl
std
mov
mov
xchg
jnp
in
jbe
dec
stos
pop
cmpsb
ret
out
pop
outsl
pushf
xchg
aam
outsl
push
in
pusha
pushf
xchg
push
and
dec
inc
xchg
jnp
iret
in
gs
test
shlb
fs
dec
and
repnz
and
lock
out
mov
mov
pop
daa
ret
lock
cmpsb
stc
inc
out
popf
pop
pop
ja
sbb
sub
shlb
in
loope
test
mov
sbb
fdiv
or
loopne
mov
orl
mov
movsl
cmp
jp
cmp
divb
je
neg
mov
pop
jecxz
subl
pop
popl
lds
wbinvd
repnz
iret
icebp
gs
bound
xchg
sbb
loope
or
nop
les
xor
push
dec
loopne
sub
xchg
lret
pop
jmp
clc
pop
fidivl
dec
aam
cwtl
les
mov
mov
dec
push
addr16
mov
mov
fisttps
xchg
jbe
daa
lods
jbe
pop
jge
mov
loope
movsl
scas
fistpll
or
add
subb
ret
ds
mov
sub
clc
in
fldt
sub
pop
rclb
and
sbb
sbb
fldcw
jecxz
movsl
mov
cwtl
arpl
fcompl
aaa
xlat
and
push
movsl
jo
out
inc
in
bound
sarb
adcl
inc
xchg
cltd
adc
xchg
js
inc
sbbl
in
movsl
cmp
sbb
jbe
jae
jns
fmull
adc
cmpb
stos
adc
and
dec
ds
mov
imul
es
test
or
pusha
mov
cmp
add
mov
les
push
in
add
imul
jg
sbb
aad
or
test
mov
insl
inc
push
sub
add
pop
std
repnz
movsb
out
fldenv
mov
cwtl
insb
dec
jno
sub
enter
jns
es
call
xchg
cwtl
cli
sub
insl
in
mov
je
fwait
add
sbb
pop
xchg
je
stos
pop
andb
je
fildll
ja
push
cli
sub
mov
xor
into
cmpsb
rolb
popaw
div
xchg
mov
imul
sahf
outsb
cmc
jge
shl
test
mov
or
fneni(8087
dec
mov
ljmp
or
sbb
std
push
repnz
pop
mov
leave
cld
mov
add
es
cmp
mov
and
jns
lods
dec
xchg
clc
xchg
testb
push
mov
sbb
loopne
jg
add
adc
shr
dec
xor
mov
xchg
xchg
scas
dec
add
dec
das
cmp
mov
adc
jle
and
push
in
sbb
jbe
in
lcall
dec
jmp
dec
xchg
leave
into
shll
in
cmc
xor
flds
jns
shlb
roll
jae
test
mov
cs
dec
dec
incb
xlat
test
cli
fs
outsb
push
mov
xchg
inc
jge
xor
xor
nop
rolb
cmp
dec
sub
push
inc
push
xlat
lret
fidivrl
fistpl
insl
inc
pusha
std
adc
xor
aam
inc
sub
dec
mov
cmp
data16
sbb
data16
cmp
rcl
pop
in
loope
xchg
adc
scas
jbe
push
pop
repnz
iret
lret
movsl
ret
push
arpl
adc
push
cmp
pop
and
inc
add
xchg
ss
and
pop
pop
xor
add
xor
shll
pop
cwtl
push
xorl
cmp
rclb
sbbb
push
mov
mov
mov
cmc
mov
bound
pop
jo
lret
stos
inc
dec
cmpsl
jno
xlat
or
aas
add
xchg
pop
in
adc
call
cmpb
ss
loop
test
imul
push
mov
mov
xchg
rcll
sbb
out
mov
xchg
pop
cmp
idivb
addl
sarb
or
mov
hlt
sub
into
add
mov
adc
mov
pop
dec
sub
xchg
gs
cmc
fidivrs
popa
mov
cld
imul
enter
cmp
mov
ret
sbb
les
xor
cwtl
xchg
imul
shll
jecxz
ret
add
lcall
and
fldcw
or
popa
rolb
test
shlb
out
cmp
sbb
js
lahf
scas
jecxz
inc
repnz
jp
cwtl
outsb
sbb
jbe
arpl
je
mov
mov
sub
fbld
xor
xor
jl
mov
sub
pop
imul
push
rcr
arpl
cmp
xchg
jmp
or
push
popa
and
mov
cmpsb
jmp
stc
adc
xchg
lods
out
push
imul
repnz
jmp
pop
in
jecxz
cmc
inc
mov
rorl
imul
fisttpll
in
mov
in
aam
xchg
aad
adcl
stos
and
out
aas
and
mov
icebp
or
mov
test
inc
mov
rcr
jp
cmp
mov
mov
xchg
lods
cli
dec
cwtl
rclb
cmp
mov
inc
ja
pop
inc
sbb
inc
mov
int3
add
xchg
jmp
iret
sti
dec
xchg
clc
outsl
arpl
loope
jle
and
fidivs
add
lea
cmpsb
int
xchg
xor
div
adc
in
sbb
push
cltd
xchg
inc
shll
incb
mov
push
xchg
xor
mov
stos
jb
xchg
data16
mov
add
cwtl
sub
sbb
add
mov
xor
mov
or
xchg
in
fdiv
cli
scas
mov
stc
lahf
loopne
fwait
orl
lods
out
hlt
in
int3
xor
gs
push
cs
in
jo
push
enter
loopne
test
cmp
dec
test
shlb
pop
mov
mov
into
jle
sub
ror
imul
imul
mov
sbb
mov
js
int3
mov
test
or
shll
loopne
push
test
inc
test
cmp
fs
inc
cmc
pop
jl
push
ret
fstpl
sbb
ja
pop
cli
popa
imul
mov
shlb
scas
ret
xchg
insl
adc
fwait
movsb
inc
les
insl
in
pop
scas
dec
push
mov
jle
test
push
mov
sarb
xor
adc
mov
xchg
mov
dec
test
sbb
fldt
inc
pop
test
push
sub
stos
pop
shl
imul
sub
xchg
cli
out
lock
mov
stos
aam
fsubs
and
js
pop
mov
lods
jb
sub
roll
shlb
outsl
mov
dec
inc
iret
mov
and
repz
in
and
mov
pop
dec
popl
stc
xchg
out
dec
mov
ret
ds
dec
das
pop
push
imul
pop
mov
iret
xchg
lods
das
stc
in
loope
jb
cli
stc
nop
ds
pop
adc
leave
lods
pop
sbb
jl
lcall
fsubs
mov
cld
rolb
mov
add
push
dec
pop
ja
gs
jl
je
xor
xchg
sbb
inc
mov
push
leave
lea
packssdw
jbe
outsl
loopne
pop
and
mov
jmp
sub
rcrl
add
stos
jmp
sbb
adc
xor
andb
in
out
push
and
sub
in
aad
int
out
adc
sbb
jno
repnz
call
xchg
inc
loop
xor
mov
imul
out
mov
outsb
sub
xor
inc
stos
ds
lret
mov
ss
pop
stos
or
xchg
pop
aas
lods
sbb
mov
jge
inc
sbb
and
sub
sub
sbb
xchg
imul
and
xor
inc
jbe
loope
out
and
hlt
cmc
test
ljmp
loope
inc
pop
jecxz
movsl
icebp
fcmovnbe
xchg
test
pop
xchg
adc
sub
ret
push
mov
pop
ficompl
jnp
outsl
outsl
push
out
mov
lret
push
sbb
adc
loop
xor
lahf
xchg
mov
aas
cltd
jbe
cmpsb
push
add
into
push
or
test
cmpsb
jne
ss
sub
sub
mov
lret
xchg
add
xor
adc
dec
cmp
mov
xor
ret
adc
shl
push
and
mov
xchg
out
scas
fwait
nop
push
jns
jne
in
mov
lret
pop
jp
aaa
adc
test
xor
add
das
mov
dec
lods
or
pop
pop
lret
and
or
mov
in
fcmovnbe
testl
das
cld
xlat
cmp
mov
leave
lock
and
out
inc
lds
jns
cli
mov
sbb
hlt
rep
xchg
or
or
aas
lcall
rclb
int
adc
outsb
and
sub
insl
mov
stos
cmp
xor
mov
sub
lcall
out
lcall
stc
lds
es
sub
pop
jl
pop
and
jmp
fidivrl
ljmp
out
gs
mov
lcall
xchg
cmp
xchg
jge
test
xor
hlt
arpl
loope
ret
stos
jl
sahf
mov
pop
mov
cwtl
ss
mov
sbb
test
mov
and
shll
jne
shrb
jmp
push
in
jl
jecxz
outsb
pop
stos
and
aad
pop
aam
mov
xchg
or
daa
out
jne
loop
pop
cli
iret
mov
mov
and
ret
inc
cwtl
in
add
pop
in
subl
mov
fidivl
ret
arpl
mov
test
call
insb
stos
sti
pop
cmp
push
inc
push
aaa
xor
adcl
imul
iret
ja
add
rorb
add
fstpt
and
leave
popa
inc
inc
loope
imull
iret
sbb
in
add
lret
or
xlat
negl
cmp
fsubrs
mov
and
addr16
pop
arpl
add
mov
mov
push
xchg
lahf
cmpsb
test
pop
lcall
fistl
pop
jl
push
lock
das
sub
push
stos
cmc
jp
lods
push
in
ret
mov
aas
in
icebp
pop
cmp
rcll
cmp
in
pop
pop
nop
icebp
mov
mov
pop
mov
aam
or
and
mov
pop
jp
nop
mov
lahf
sbb
lret
pop
pop
ja
lods
pop
pop
les
stos
cmpsl
cmpb
std
pop
and
iret
pushw
ja
movsl
cltd
enter
xor
cltd
lea
lret
push
sbbl
or
sti
out
or
and
mov
push
aam
pop
ja
or
ret
pop
fwait
out
bound
leave
and
xor
jmp
stos
es
aam
aas
push
pop
jae
dec
lcall
stos
ja
mov
negl
insl
pop
xor
shl
loop
pop
adc
sub
mov
inc
shl
es
or
lea
push
mov
xchg
push
inc
mov
outsb
jmp
or
mov
jbe
cmpsl
xor
jmp
in
lds
xor
fcoms
pop
jle
fcmovnu
repnz
imul
or
pop
sbb
fs
data16
push
daa
insl
decb
dec
sbb
lret
out
mov
push
sub
mov
cwtl
enter
jbe
pop
ret
jb
sti
leave
es
xor
mov
rcrl
rorb
out
lcall
push
daa
mov
adcl
inc
stos
or
jae
sub
cld
sbb
pop
or
add
mov
cmc
pop
lock
imul
adc
mov
pop
divb
out
mov
ret
push
jb
and
mov
es
mov
dec
mov
sub
imul
and
jnp
mov
pop
xchg
std
mov
int3
in
lahf
dec
psadbw
cwtl
dec
arpl
dec
iret
aam
jle
scas
sbb
call
and
pushl
loop
pop
fnstcw
out
lds
mov
shll
ficompl
call
sbbl
or
sbb
arpl
stc
xor
nop
push
rolb
testl
adc
test
add
xchg
test
mov
rorb
inc
xchg
lock
lea
inc
les
mov
movsb
mov
push
pop
movsl
fwait
inc
int3
in
push
outsl
cltd
cwtl
fadd
es
push
pop
lea
fwait
sbb
jae
jb
xchg
cmpsb
mov
in
mov
inc
dec
cmp
arpl
push
filds
shlb
enter
xchg
push
pop
push
xchg
jp
fwait
xchg
addr16
ret
sbb
or
mov
pop
jns
push
jo
push
std
dec
inc
int3
out
add
fwait
inc
aaa
rorl
repnz
fiadds
sbb
fimuls
loop
sti
mov
sar
mov
sub
or
mov
fstl
out
outsl
push
ja
add
xorb
lods
cli
mov
mov
xchg
fld
and
fldl2e
ja
mov
pusha
lea
mov
jecxz
sbb
mov
cmpsb
shll
in
push
pop
lret
out
xchg
mov
cmp
pop
mov
negl
or
out
xor
xchg
lea
psrlq
and
mov
iret
xchg
push
into
xchg
adc
push
dec
push
adc
adc
frstor
push
jno
or
sbb
lret
pop
xor
idivl
cmp
dec
push
jecxz
inc
inc
pop
ds
fnstcw
popa
cmpsb
or
or
pop
xor
cli
xchg
fs
leave
sahf
int3
mov
mov
rorb
divl
mov
nopl
jbe
mov
pop
add
shlb
inc
lods
push
add
dec
jnp
push
xor
or
lock
adc
hlt
xchg
outsl
sbb
mov
addb
in
popl
sbbb
cld
and
mov
fsubrl
scas
das
sti
mov
dec
daa
mov
add
imul
dec
push
mov
inc
cwtl
enter
aaa
fwait
call
test
fs
stos
push
pop
test
in
pop
mull
repnz
imul
test
cmp
push
in
sub
add
sbb
xchg
xchg
fwait
sbb
jp
sbb
mov
rcrb
cmp
fisubrl
sbb
ror
and
repnz
mov
xchg
rcrb
shll
std
mov
adc
jmp
push
mov
rorl
xchg
aas
arpl
xchg
inc
loopne
and
out
pop
stos
movb
or
dec
into
pop
adc
sub
adc
inc
int
push
dec
mov
mov
hlt
insl
adc
xchg
push
test
lcall
push
mov
xchg
daa
out
inc
or
mov
sbb
push
adc
or
mov
or
loopne
inc
std
sub
icebp
sarb
jmp
gs
push
sti
mov
shrl
aam
icebp
or
or
pop
mov
test
jno
call
push
sbb
test
dec
sbb
aad
rorb
sahf
sub
mov
aad
adc
sbb
fwait
push
pop
stos
pop
aad
sub
xchg
cvtps2pi
scas
cmp
call
popf
mov
sub
mov
jecxz
hlt
cli
lock
js
push
imul
daa
pop
xchg
push
jl
add
add
sub
outsb
mov
xchg
mov
xabort
sahf
push
cmpb
repnz
stos
and
lds
dec
aas
and
mov
stos
xchg
xchg
xchg
and
nop
in
loopne
jmp
ljmp
rol
xchg
dec
jno,pn
xor
mov
call
adc
or
add
add
inc
neg
das
jne
or
mov
repz
js
push
jnp
daa
mov
sub
ljmp
pop
loope
adc
or
scas
xor
pushf
pop
or
lds
push
js
nop
popa
xchg
in
sub
xchg
dec
push
mov
cmc
movsl
inc
nop
push
ret
fmul
in
cwtl
enter
pop
mov
addb
mov
pop
xchg
lods
call
and
das
daa
ja
aam
mov
push
data16
aam
dec
add
cmp
mov
in
jbe
jb
cmpsl
mov
lock
loopne
jp
mov
dec
mov
pop
adc
cmpsb
mov
stos
xor
mov
sub
inc
and
jbe
popa
xchg
out
scas
dec
pop
js
mov
adc
jno
sub
adc
in
pop
insl
inc
dec
mov
out
sbb
fnsave
loop
add
and
mov
jecxz
sub
mov
stc
push
cmp
inc
pop
jmp
bound
xchg
loope
mov
cmp
xor
jmp
jne
loopne
imul
pushf
lods
mov
mov
sbb
pop
or
mov
and
cmp
fisubrl
jl
or
add
xor
xchg
sub
push
fsubrl
push
aas
pop
mov
out
test
mov
cmp
aaa
dec
pop
push
adc
iret
es
fldenv
sub
pop
mov
cld
movsb
pop
sbb
add
test
inc
sub
xor
dec
arpl
sbb
add
test
loop
cmp
test
ja
shr
cwtl
pop
leave
sbb
enter
sbb
sbb
push
movsl
fsts
inc
or
xchg
sbb
xor
hlt
sub
mov
lcall
push
fwait
dec
adc
test
cmpsl
cmp
dec
push
jnp
push
lret
pop
nop
mov
jae
mov
popa
or
jo
mov
inc
lds
adc
sub
dec
jg
cli
shlb
cmp
test
or
sub
loope
lcall
inc
jmp
lods
sbb
out
jb
push
mov
cmpsb
mov
push
daa
or
jp
jne
xchg
sbb
dec
js
jbe
xor
int3
into
aas
mov
dec
cmp
dec
out
inc
push
or
movsb
pusha
je
push
bound
adc
xlat
or
mov
add
inc
dec
xchg
out
mov
cwtl
lods
cmpsl
pop
jnp
in
mov
xchg
dec
fisttps
shl
cmp
jo
cmp
fimull
mov
and
or
mul
cmp
pusha
xor
les
mov
popf
pop
mov
movsl
pop
rcll
inc
cmc
mov
out
mov
add
cmp
sti
xchg
pop
xchg
pop
mov
pop
and
int
sub
ljmp
pop
in
jmp
movsl
dec
in
push
jmp
ja
nop
enter
je
mov
outsl
adc
jl
stos
dec
loope
or
pop
xchg
mov
call
test
mov
cmpsb
mov
push
arpl
add
ja
into
lahf
ds
lret
lds
incb
loope
cmp
popf
inc
jae
push
call
inc
mov
xor
mov
pop
lds
add
xor
xlat
call
xchg
pop
push
test
sub
push
dec
test
xor
lahf
cmp
mov
mov
je
pushf
and
mov
xchg
fisttps
push
mov
pop
popw
sub
es
stc
inc
pop
arpl
xor
inc
inc
jnp
jb
dec
icebp
mov
test
idivl
sti
pop
mov
call
das
push
sarb
xor
add
int3
jge
test
xchg
scas
pop
xchg
adc
mov
out
in
jge
ficompl
fstpt
add
sub
pop
add
dec
loope
push
insb
mov
cmp
jne
add
sti
fnsave
int3
add
xlat
daa
push
adc
subl
outsb
mov
adc
cmp
addl
dec
mov
xorb
sbb
outsl
sbb
pop
decl
adc
push
cmp
jae
stos
movb
add
jmp
imul
in
rcll
push
incb
in
push
sahf
inc
push
and
addr16
pop
es
scas
aam
dec
push
cmpsb
mov
loopne
mov
daa
cmp
mov
lahf
shll
mov
lea
pop
lret
es
gs
mov
sub
movsb
fsub
je
or
cmp
pop
pop
js
mov
repz
fcmovbe
fildll
test
lds
ja
xchg
popf
lcall
dec
aam
dec
pop
shr
xor
lcall
out
mov
pop
cmp
and
or
add
cld
popa
add
xor
movsb
or
xor
lods
int
enter
inc
daa
pop
jge
xchg
pop
adc
nop
lds
inc
xor
and
arpl
mov
dec
inc
hlt
xor
mov
test
dec
bound
loopne
and
insb
aam
fwait
orl
dec
sar
xchg
mov
xchg
ret
out
loope
outsb
movb
out
popa
cmc
and
testl
movsb
xor
negl
jp
xor
pop
orb
sbb
jmp
mov
adcl
js
test
hlt
pop
and
aad
clc
rolb
mov
xor
xor
pop
lret
pop
dec
xchg
fisttpl
fucomp
inc
daa
add
clc
fdivl
loope
jmp
push
sbb
and
insl
sti
nop
ds
jb
es
icebp
lock
push
jne
xor
in
leave
inc
mov
jnp
push
sbbb
lret
jae
out
jmp
push
hlt
dec
sar
out
mov
mov
outsl
aaa
sar
cmc
push
push
xor
icebp
sbb
pusha
jnp
pop
dec
popa
mov
mov
outsl
inc
xchg
rcrb
jge
mov
xor
adcb
mov
xchg
pop
or
mov
loope
pusha
pop
inc
cmp
ljmp
dec
lcall
js
mov
jno
sub
into
xor
sub
lods
mov
mov
sqrtps
lods
pop
sbb
pop
sub
xchg
or
mov
fstl
or
pop
shrb
jmp
hlt
pop
lods
bound
out
rcl
ljmp
aas
push
ror
out
stc
idivb
rorl
jmp
sub
xlat
cmc
push
mov
push
fldenv
mov
mov
scas
repz
xor
mov
and
inc
xchg
std
cmp
outsb
pop
enter
push
inc
jmp
enter
scas
mov
mov
mov
sub
inc
inc
sarb
pop
popf
pushf
sbb
mov
stos
sub
inc
mov
and
mov
or
sbb
add
cmpsl
pop
movsl
sbb
repnz
pop
dec
test
pushl
lahf
imul
dec
mov
and
lret
imul
lods
shlb
leave
jmp
sbb
or
push
ljmp
pop
inc
add
xorb
in
rolb
cltd
loopne
popf
push
mov
cld
lret
call
xchg
jns
adc
xor
inc
or
push
lret
ljmp
add
fdivrp
xor
push
jbe
xorl
shrb
pop
fidivl
mov
inc
cmp
outsb
lods
or
mov
mov
insb
mov
inc
jns
aam
pop
aad
sbb
repz
enter
movswl
insl
loope
aas
mov
loop
ss
fiaddl
leave
aaa
cmpsl
xchg
xchg
pop
adc
push
mov
jl
xchg
loop
and
and
jmp
mov
xchg
cs
xchg
in
xchg
imulb
or
std
int3
add
mov
jl
and
dec
in
add
inc
cmp
fisubrs
int3
cmp
fisubl
sub
sbb
mov
leave
call
lods
dec
js
lods
cltd
aas
pop
repz
loop
xor
inc
testl
xor
or
rcrb
test
mov
loop
xchg
ret
cmp
std
inc
sbb
xchg
pop
in
dec
outsl
jae
and
ret
fs
out
fildl
leave
jl
xchg
shll
aad
pushf
cmpsl
or
inc
jge
mov
pop
int3
mov
cld
xor
sbb
call
dec
mov
xchg
and
mov
sub
pop
hlt
pop
sub
sbb
enter
and
push
int3
adc
xchg
inc
xchg
pop
mov
jo
stos
movsl
xor
cmpsl
mov
add
push
push
shr
std
pop
jae
out
ds
fnsave
movsl
mov
mov
adc
cmc
mov
jne
sbb
mov
sub
ret
imul
cs
xchg
jns,pn
dec
pop
lods
cmp
mov
lods
test
cmpsb
cli
cld
pop
loopne
pop
or
adc
push
out
xchg
lds
dec
sub
xchg
incl
int
cltd
inc
pop
adc
imul
stos
insl
mov
mov
loop
cmp
push
cmp
sub
stos
mov
fiadds
fimull
shlb
insb
mov
mov
pop
push
xchg
mov
xor
pop
in
cwtl
dec
je
cmp
test
dec
call
xor
rcl
dec
scas
loop
popf
add
arpl
out
lock
aam
xchg
push
ja
cmpsb
lock
sbb
push
or
xchg
call
push
or
aas
cmpl
mov
xor
xor
inc
pop
stos
clc
jae
dec
push
jo
sbb
and
pop
leave
loope
xchg
in
or
imul
addb
cld
jle
push
xor
jp
push
xchg
rcrb
or
xchg
push
sub
cld
xor
mov
popf
jge
movsb
outsb
cwtl
sub
nopl
and
dec
xchg
shlb
sbb
sbb
fwait
sub
sub
cmp
fs
and
cmp
loope
sub
mov
cmpb
mov
sbb
xorb
mov
mov
cmp
xchg
cwtl
not
add
mov
shll
xor
shlb
iret
mov
push
add
dec
arpl
push
push
insl
or
repnz
pusha
les
loop
les
ds
aad
test
push
inc
and
inc
scas
cs
xor
insl
sbb
add
inc
cmp
mov
push
mov
clc
popf
mov
clc
jno
xor
in
in
fwait
out
aad
popf
xlat
mov
inc
dec
cwtl
mov
jbe
sti
adc
data16
vaddsubps
lret
xchg
sub
frstor
imulb
gs
fists
push
out
jmp
fs
and
cmc
jle
cmc
or
adc
pop
or
or
imul
insb
jecxz
xchg
insl
push
test
shlb
das
xor
sbb
gs
jbe
inc
sti
sub
xchg
jl
imul
subb
lahf
add
mov
insl
leave
in
fldt
push
mov
jne
in
push
mov
push
xor
xor
pushf
mov
gs
daa
add
ss
das
ret
imul
fidivrs
pushf
xchg
jae
cmp
loopne
and
xor
sub
mov
mov
pop
jle
or
jp
xchg
pop
fadds
fimull
movsl
sarl
pop
das
daa
or
xor
cs
lret
xor
gs
shl
jp
ljmp
or
pop
pusha
dec
mov
test
mov
or
cld
flds
mov
int3
xor
jmp
ds
cmc
push
push
xor
js
mov
je
xchg
out
cwtl
fwait
enter
dec
rorb
push
push
mov
inc
mov
pop
movsl
inc
jge
daa
in
fiadds
mov
pop
push
cmp
push
das
dec
push
scas
dec
push
cmpsb
adcl
aas
adc
xchg
hlt
add
fisubrl
fmull
xor
pop
lock
mov
mov
dec
fld
lods
lret
inc
mov
xchg
xchg
or
aam
adc
call
mov
pop
lods
inc
repz
cltd
cmp
mov
sub
nop
movsl
and
filds
cmpsb
imul
cmp
adc
fnsave
imul
cmpsl
loopne
lds
pop
es
imul
and
sbb
inc
test
or
rorb
orb
jge
inc
and
arpl
insb
ret
sbb
mov
push
xor
inc
or
aad
lret
xor
ljmp
jmp
js
out
insb
arpl
inc
xchg
mov
mov
adc
pop
iret
adc
repnz
andl
or
pushf
pushf
pushf
and
cmpl
fnstsw
dec
popa
mov
push
inc
mov
repz
pop
scas
dec
mov
call
jb
lods
fmull
xchg
xorl
jl
ret
push
cmp
sbbb
mov
mov
sbb
xlat
repnz
les
popa
lock
inc
cmc
inc
fstp
outsl
dec
icebp
or
dec
ficompl
jecxz
or
mov
or
ja
inc
jmp
dec
in
dec
in
mov
stos
mov
xor
mov
pop
mov
aaa
push
or
and
ja
and
shll
cmc
and
out
jbe
add
aaa
xchg
jp
out
cmp
call
mul
pop
add
and
imul
lock
das
rcrl
mov
std
inc
stos
movsb
test
cmc
std
fs
in
rol
inc
sub
test
and
mov
mov
movsb
dec
scas
cmp
adc
xchg
loop
ja
inc
mov
push
lock
xchg
ss
loop
push
adc
rolb
jl
mov
jle
add
push
jmp
lret
lock
lahf
adc
inc
and
cwtl
add
add
insb
pusha
mov
arpl
inc
mov
test
pushf
mov
sub
dec
pop
daa
call
xor
add
sbb
xlat
addl
or
jg
fisttps
lods
sti
in
sbb
inc
mov
ja
adc
inc
push
xchg
mov
jnp
inc
push
mov
mov
mov
mov
add
ss
add
pop
aad
push
dec
sbb
mov
mov
loopne
leave
lea
pushf
js
cmpsb
and
add
cmpsl
sahf
jns
rolb
xor
inc
subl
repz
das
mov
ret
mov
mov
rcr
insb
adc
jge
xchg
popa
jmp
add
xchg
fldcw
repz
and
in
mov
and
mov
inc
or
lds
push
push
mov
push
push
push
jnp
jno
xchg
test
mov
mov
fwait
imul
mov
adc
mov
xchg
lea
xchg
adc
cmpsl
jl
push
cli
adc
xor
add
mov
int3
add
call
mov
fidivl
xor
enter
jecxz
inc
pop
add
mov
addl
push
mov
into
mov
mov
mov
mov
cmpsl
scas
cld
aad
sub
push
leave
clc
sbb
movsb
inc
mov
mov
outsb
in
sbb
out
pop
dec
and
mov
inc
aaa
les
imul
jecxz
jmp
out
cld
dec
inc
dec
aad
xor
and
push
inc
stc
ret
sub
mov
sub
or
ljmp
cmp
jo
mov
imul
sbb
pop
sbb
and
das
scas
pop
xchg
adc
xchg
mov
mov
add
imul
xor
shll
inc
addr16
mov
xchg
xlat
mov
jo
dec
sub
inc
enter
fdivrs
pop
mov
sbb
addr16
aam
enter
out
mov
jge
cmp
inc
cli
sbb
sbb
cmp
mov
add
add
in
arpl
xor
je
pushf
and
and
inc
popf
xlat
adc
adc
add
fcmovnu
jno
xor
sbb
idivl
data16
js
into
cli
cmp
xchg
out
push
rclb
enter
movsl
cmp
mov
adc
fbstp
cmp
or
mov
cld
add
notl
xor
jne
mov
push
jne
int3
dec
enter
push
add
js
lods
packssdw
pushf
dec
adcb
xor
xor
xor
test
divb
ds
outsl
fdivl
push
or
push
mov
rcll
ljmp
cmpsl
xchg
mov
in
sbbl
stc
rcr
fs
dec
flds
das
js
cmpsl
js
push
mov
movb
and
jge
push
xor
cmpsl
push
cld
outsb
mov
dec
mov
test
jg
out
addr16
xor
enter
jns
adc
mov
mov
and
fiaddl
lods
sahf
cs
shrl
movsb
loopne
adc
cltd
cmpsl
int3
mov
inc
xlat
or
add
std
ror
cmp
stos
es
lea
mov
mov
push
pop
imul
adc
push
es
lea
cli
jns
mov
dec
es
push
mov
sub
mov
fs
cmpsb
sub
loop
jae
mov
dec
addr16
mov
repz
jl
outsb
pop
xchg
and
or
and
insl
mull
mov
mov
dec
mov
mov
mov
pop
or
icebp
mov
enter
cmp
sub
push
or
rcrl
ds
movsb
repz
xchg
popf
dec
lahf
test
wrmsr
xor
jne
mov
mov
add
test
shlb
test
lds
push
jb
push
xchg
fistpll
and
sub
cmc
push
add
mov
push
xchg
adc
dec
bound
iret
jne
inc
stos
ss
mov
je,pt
inc
icebp
lea
out
xchg
stos
xchg
into
mov
pop
mov
mov
mov
test
adc
pop
jecxz
and
mov
mov
mov
cmpb
icebp
stos
enter
and
push
mov
scas
adc
shrb
aam
mov
sbb
mov
sub
mov
popa
mov
stos
loop
mov
push
mov
cmpb
sub
or
lods
sub
lods
jbe
and
mov
aaa
data16
lcall
icebp
add
mov
push
or
pop
mov
jmp
pop
xchg
mov
rcll
mull
or
das
xchg
ret
sub
sub
and
sbb
shlb
jns
in
sbb
sbb
scas
xchg
gs
and
xchg
dec
ret
adc
aas
in
jo
int
insl
lock
inc
mov
mov
insl
scas
adc
lret
out
push
push
shll
inc
mov
push
cli
lret
nop
int3
push
dec
movsb
inc
sub
scas
sbb
inc
mov
xchg
cwtl
mov
ds
sub
dec
out
add
vmwrite
je
and
push
xchg
sti
lods
inc
jo
cltd
stos
sbb
lret
and
pop
jle
jle
ret
mov
inc
adc
outsb
stos
scas
std
xor
add
gs
stos
pop
dec
xchg
frndint
ret
inc
push
rorb
add
cmp
pusha
mov
sbb
xchg
push
xorl
sub
push
jl
fistpl
js
and
je
ja
subb
cld
sbb
stos
cmc
push
popf
clc
ljmp
js
mull
dec
lods
fstpl
leave
ret
inc
mov
pop
std
mov
xchg
pop
or
mov
mov
jecxz
sub
dec
aaa
or
data16
or
pop
sub
pop
xchg
cmp
out
jbe
adc
xchg
xor
cli
pop
in
pop
mov
adc
jbe
test
fs
dec
in
lahf
xchg
rorl
mov
stc
inc
in
jb
movl
adc
lret
bound
insb
mov
scas
mov
jnp
mov
pop
or
lahf
mov
bound
jmp
mov
sbb
xor
sub
enter
pop
push
dec
mov
loop
jmp
scas
in
shl
gs
xchg
or
and
loop
pushf
mov
lret
jnp
les
imul
mov
jne
pop
pop
mov
mov
jg
adc
daa
adc
repz
fldt
and
ret
sbb
add
std
inc
mov
flds
adc
lcall
fstpl
stc
sub
sbbb
mov
jnp
mov
sub
push
mov
mov
add
push
jnp
insb
mov
fimull
add
gs
add
mov
popf
dec
xchg
xchg
dec
rclb
dec
mov
xor
fisubs
clc
push
jns
mov
add
lret
cmp
repnz
lea
pop
nop
push
mov
xor
iret
inc
fidivs
sbb
pop
add
mov
aad
out
inc
daa
pop
pop
mov
out
out
xchg
push
idivl
pop
mov
xor
dec
jo
sbb
sbb
xchg
ss
scas
jnp
xchg
test
out
in
mov
mov
xor
sub
gs
xchg
loopw
fcoms
xor
push
iret
mov
adc
test
adc
in
mov
push
dec
fistl
je
into
sbb
dec
cmpsl
jl
dec
hlt
pushf
daa
mov
cmpsb
or
popl
mov
dec
add
push
jno
shll
leave
inc
or
or
adc
lret
pop
stos
xor
push
test
xchg
and
dec
xor
shlb
adc
jl
mov
and
lcall
fwait
icebp
pusha
pop
std
sub
jg
adc
into
in
repz
jb
sbb
sbb
xlat
mov
xchg
fwait
pop
das
add
xor
xor
movsl
out
mov
test
mov
ljmp
shl
mul
lds
jo
insb
cmp
sbb
jns
add
cmp
das
sbb
imul
xor
inc
adc
mov
es
jmp
das
mov
jae
mov
dec
push
shrl
push
mov
jp
pop
adc
add
push
mov
stos
mov
sub
lahf
pop
in
xor
xchg
sbb
xlat
cmp
loope
sbb
adc
jl
iret
popa
add
pop
fdiv
xchg
test
mov
xorl
jne
pop
cltd
leave
mov
test
insl
std
and
pop
shl
test
push
sub
shlb
outsb
dec
bound
xlat
xchg
pop
mov
mov
pop
mulb
adc
mov
hlt
icebp
clc
lods
dec
ss
and
jne
push
out
jo
jbe
mov
lret
cmp
sbb
inc
adc
out
addr16
cmp
and
mov
imul
cltd
test
sti
fdivrs
sub
xchg
in
mov
jle
inc
repz
jmp
xor
add
roll
test
inc
lret
push
fnsave
cs
xchg
aaa
insl
xchg
push
lahf
gs
xor
enter
dec
dec
mov
add
rol
outsb
out
jl
ret
pop
inc
lds
jnp
loop
mov
xor
xchg
jle
dec
stc
int3
inc
ret
es
xchg
mov
setno
sbb
sti
xor
ja
lcall
jo
xor
fsubrs
subb
sbb
cmp
mov
int
push
push
jmp
pop
sbb
cld
xor
push
adc
and
outsl
lahf
sub
repnz
push
cmp
sub
cld
mov
scas
cwtl
adc
lcall
xchg
mov
loop
mov
push
xchg
and
xchg
sar
or
hlt
push
cmp
call
aad
lcall
sbb
xor
lret
sub
cs
fwait
xor
dec
mov
ss
dec
adc
sub
icebp
adc
push
inc
adcl
add
xchg
adc
sbb
mov
je
ljmp
das
mov
or
les
xor
fwait
mov
rol
aad
ss
faddl
aaa
inc
pop
flds
xor
adc
cmp
pop
xorb
scas
dec
shlb
je
push
lods
hlt
hlt
lret
sarl
insl
dec
call
es
scas
jb
loope
sbb
in
in
jno
mov
aad
lret
out
test
insl
aam
xorl
mov
mov
fistps
jbe
incl
jne
push
movsl
mov
in
popa
mov
xchg
ficompl
int3
hlt
xchg
scas
jnp
cmp
jns
mov
fwait
repz
mov
xor
dec
mov
adc
adc
ljmp
inc
stc
scas
jl
bound
fs
mov
pop
xchg
cmp
jne
push
cmpb
sub
lds
data16
xchg
loop
mov
dec
nop
jge
loopne
adc
mov
cmp
cmp
dec
das
stc
fwait
into
imulb
pop
mov
int3
mov
xor
mov
sbb
repnz
std
pushf
push
mov
add
and
mov
jmp
adc
mov
pop
sbb
push
adcb
insb
adc
xchg
inc
push
movsl
loopne
jge
fidivs
loope
jmp
cli
aad
and
lods
pop
into
dec
cmpl
mov
mov
leave
or
mov
dec
mov
aad
or
stos
xorl
jo
mov
lcall
push
dec
aas
not
in
and
mov
mov
rcll
test
mov
sbb
and
sub
loop
xorl
push
adc
and
adc
mov
jb
arpl
push
imul
test
or
push
rep
sbb
adc
loope
aas
dec
xchg
adc
cld
repz
imul
sbbl
div
mov
loope
test
pop
lock
mov
mov
jbe
popf
xchg
scas
xor
aam
in
fldcw
xchg
int3
ljmp
dec
fsub
pop
test
cmp
pushf
test
jne
pop
clc
mov
fdivs
jp
sbb
dec
push
push
sub
cmp
stos
jns
popf
into
fistps
add
push
mov
pop
lahf
jae
push
or
aam
mov
arpl
ret
rep
loopne
fsubl
ja
cwtl
jb
lods
lret
or
xchg
ss
xor
cmp
pop
pop
xor
stos
subb
mov
les
mov
leave
adc
xchg
and
and
dec
adc
daa
pop
test
fcmovnbe
push
mov
std
mov
xchg
push
sbb
push
rcll
hlt
xchg
cltd
pop
sbb
inc
pop
cmp
jne
push
dec
lret
adc
ljmp
std
imul
adc
push
loopne
push
popl
test
stos
dec
fadds
enter
jno
add
cltd
lods
ret
movsl
cmp
mov
adc
xchg
fwait
push
mov
jb
xchg
imul
dec
xchg
iret
mov
outsb
orb
xchg
inc
add
push
clc
xchg
and
mov
shll
dec
mov
std
mov
inc
clc
daa
in
daa
sar
add
call
mov
aam
mov
and
mov
push
ja
jg
gs
push
lods
hlt
addr16
iret
subl
xchg
mov
jl
clc
sbb
popf
insb
pop
lcall
mov
adc
pop
mov
lds
arpl
pop
aam
jae
cmpsl
cmp
cmp
and
repnz
bound
jns
test
pop
aam
mov
std
mov
cmp
movsl
insb
hlt
aad
inc
jle
not
fmull
push
ss
cmp
sub
sbb
mov
fstpl
lods
push
scas
test
mov
aaa
cmp
jmp
orb
jo
sbb
sbb
mov
movsl
inc
aam
cmpl
or
jecxz
fstps
pop
movsl
andb
in
or
ds
xor
mov
and
xor
mov
pop
push
daa
shr
and
aas
jnp
inc
out
jge
or
and
int
xor
pop
push
enter
mov
rclb
cmp
ja
mov
push
cmp
imul
or
sub
in
cmp
inc
push
clc
testb
push
lds
adc
lods
stos
inc
or
mov
dec
adc
inc
fs
xor
dec
push
add
push
cmp
sahf
xor
test
xor
shl
aam
pop
pop
dec
pop
jae
pop
inc
cmp
into
sahf
xor
mov
movl
bound
and
pop
js
inc
and
inc
sbb
or
ret
fiaddl
xor
shlb
cmpsb
cmp
or
mov
xchg
subb
aad
adc
xor
insb
mov
test
addr16
or
movsl
inc
ljmp
rcll
and
xchg
mov
shlb
xchg
jl
mov
dec
adc
sub
add
ds
pop
outsl
cmp
mov
jns
call
or
int
jg
cs
ss
dec
jnp
inc
pusha
mov
jmp
sub
cltd
push
push
adc
call
adc
mov
inc
aaa
les
les
cmp
enter
adc
test
sub
pop
inc
stc
push
int3
push
dec
mov
push
mov
popa
pop
in
add
mov
into
pop
xchg
jmp
arpl
cmp
inc
pop
gs
lahf
jp
loopne
aas
inc
cld
lds
ret
clc
push
aas
and
mov
sti
mov
fidivs
cmpsb
out
fistpll
in
pop
pop
pop
push
sarb
pop
sbb
jecxz
pop
xchg
addb
leave
dec
fincstp
cmp
in
int
ds
fs
cli
test
js
imul
push
and
mov
out
jmp
nop
ja
mov
call
ret
push
xchg
and
repnz
pop
jno
fdivs
xchg
inc
mov
add
jecxz
loopne
jp
int
mov
lock
pop
pop
ror
jle
lret
testb
loope
and
loopne
lret
xchg
cmpsb
jo
sub
sbb
mov
fwait
pop
jns
imul
xchg
xchg
iret
add
bound
rcll
pop
jge
js
pushf
popa
out
in
pop
stos
scas
ret
push
popa
push
jb
js
in
xor
jno
inc
and
cmp
ds
in
subb
stc
aad
rcrl
jle
rorl
test
jmp
subl
push
leave
jle
stos
movsb
pushf
in
repnz
test
mov
shll
pushf
outsl
std
pop
arpl
add
ja
daa
sbb
push
lock
inc
or
mov
mov
clc
ss
stos
push
cmpxchg
jg
orl
xchg
aaa
push
and
add
or
push
out
push
pop
add
push
loopne
sbb
sub
sbb
je
inc
nop
stos
and
mov
and
ja
sub
push
pushf
sub
push
shrl
add
in
xor
outsl
xor
push
adc
jbe
jno
cmp
rcr
pop
push
outsl
lcall
call
int3
mov
lcall
xchg
pop
lea
adc
sbb
push
cwtl
and
cli
je
sub
movsl
insb
cltd
xchg
pop
dec
push
test
test
push
in
xor
mov
dec
push
outsb
leave
into
and
in
pop
xchg
les
lods
std
or
sbb
pop
mull
inc
out
fiaddl
test
repnz
shl
in
or
inc
aas
xor
sbb
enter
test
out
inc
jmp
movb
cmc
dec
push
xor
lahf
inc
push
jmp
insb
mov
into
pusha
fmuls
fsub
fsubrs
mov
aad
push
push
inc
imul
mov
push
pop
sub
fildll
jg
dec
mov
sbb
int3
xor
ss
mov
and
stc
std
testl
push
cmpsl
xchg
adc
jg
mov
andb
sbb
fwait
ja
sti
pusha
pusha
out
movsb
dec
sub
ljmp
daa
pop
mov
add
pop
jo
fbld
mov
mov
fildl
popa
andl
outsb
dec
sti
xchg
inc
push
mov
insl
cmpsl
jge
ds
jae
sub
xor
sbb
fucom
frstor
es
cmp
cmp
popa
dec
jne
cmp
lods
sub
pop
mov
and
push
stc
imul
mov
fistps
or
lret
data16
cmp
idivl
push
ds
push
outsl
cmp
push
addr16
mov
ret
cld
or
sahf
js
pop
mov
testl
aad
mov
jecxz
jnp
pop
pop
mov
jns
hlt
push
pop
rorb
das
jno
cmpl
jle
xor
fistl
sub
xor
aas
inc
xlat
aas
pop
mov
mov
xchg
ficomps
sarb
jbe
leave
sub
iret
mov
add
inc
nop
jp
mov
in
clc
insb
mov
mov
pop
xchg
test
mov
inc
pop
in
or
in
adc
mov
leave
sti
sbb
or
roll
or
nop
mov
scas
or
dec
mov
les
mov
sbb
xor
cmpsl
sbb
jno
lea
lahf
jecxz
scas
xchg
adc
cmp
mov
icebp
push
int
dec
cmp
pop
rcrl
rorb
test
xchg
jns
test
lock
loopne
cmp
mov
mov
xchg
xchg
jns
cmc
jns
dec
cmp
mov
cmpsb
cmpsb
inc
es
dec
or
arpl
pop
and
xor
xchg
daa
mov
adc
fmul
inc
stc
inc
inc
out
xor
aad
pusha
jl
lods
hlt
or
in
adc
rcll
icebp
jg
pop
stos
fucomp
sti
or
mov
stos
cs
push
push
movb
ds
or
or
enter
rcll
orl
inc
adc
mov
sahf
sbb
xor
sar
enter
hlt
xor
sbb
sub
push
fsubrs
mov
filds
xchg
cwtl
pop
mov
movsl
dec
xor
mov
and
out
cld
shl
mov
adc
mov
rcrl
fisubs
cmp
push
lret
test
cmpsl
ja
push
cmp
mov
jns
push
or
sub
dec
adc
jl
in
and
xor
mov
xor
adc
and
xchg
pop
je
add
loop
cwtl
cmp
xor
mov
shr
js
enter
imul
fistpl
or
mov
dec
call
jecxz
into
mov
or
push
xchg
mov
inc
inc
lret
cmp
mov
sbb
mov
cmc
inc
ss
push
data16
repnz
insl
popa
in
mov
orl
inc
pushf
shrl
stc
mov
xchg
test
or
insb
test
adc
xor
outsl
sbb
xchg
xchg
xor
in
sub
enter
pop
scas
orl
or
inc
rorb
pop
xlat
pop
jl
filds
addr16
push
cli
ja
xchg
dec
insb
dec
mov
stc
ss
out
or
jge
push
mov
in
jge
mov
sbb
jo
popf
jno
sti
test
mov
hlt
test
jo
jmp
add
fwait
pop
jae
pop
add
cmpxchg
sbb
jge
jbe
pop
push
setl
lods
mov
ficoms
mov
rcrb
mov
pop
xchg
test
loopne
enter
movsl
out
sbb
cs
lock
cmp
pop
lret
jo
dec
lods
in
push
arpl
setg
mov
jg
lret
sub
mov
movsb
movsl
out
sarb
pop
add
pop
sub
xchg
ret
jmp
cmp
fisttpll
cltd
sbb
leave
shrl
enter
in
sub
rcl
sbb
jae
cli
jb
cmp
pop
dec
call
dec
xor
dec
xchg
inc
addr16
pop
inc
sbb
nop
ret
add
sub
aas
jo
xchg
call
cltd
add
or
and
stos
jecxz
jno
pop
dec
mov
pop
push
inc
dec
mov
test
inc
dec
pop
cmpsl
clc
adc
dec
cmc
imul
mov
mov
sbb
xor
hlt
push
icebp
lods
testb
aam
pop
ss
hlt
popa
ljmp
mov
cld
or
jmp
movsl
ds
pop
popf
adc
aam
and
or
out
stc
scas
movsb
cs
inc
mov
push
xor
inc
pop
jns
pop
mov
cmp
dec
jg
notl
fs
fmul
xlat
fisttpll
dec
mov
push
and
rcrl
cmc
stos
addr16
popa
fldcw
aad
test
imul
xchg
testl
cmp
cmpsb
test
pop
movsb
data16
pop
subl
sub
inc
mulb
fistpll
enter
shr
clts
dec
add
jecxz
ja
jl
gs
lret
and
imul
in
inc
mov
xor
outsl
xor
fcomp
ds
adc
arpl
popa
sbb
rcl
sub
fnstcw
or
jae
mov
lods
insb
inc
mov
push
cld
jne
je
lds
jmp
and
roll
lcall
xchg
mov
filds
cltd
rclb
cmp
mov
aam
adc
testb
sahf
outsb
sarb
loopne
ljmp
xchg
pop
jmp
sub
test
sub
mov
cli
in
push
or
mov
pushf
adc
dec
mov
cmp
push
xchg
mov
adc
adc
sahf
mov
or
lret
sbb
call
stos
xchg
lret
nop
arpl
xlat
or
push
fstpl
mov
xchg
ja
inc
inc
insl
cmp
leave
jns
sbb
rcrb
addl
and
mov
mov
lods
jecxz
aaa
ljmp
add
xor
lcall
out
test
push
mov
adc
xchg
add
je
inc
lods
dec
mov
jo
test
adc
lret
xchg
rep
add
sbb
in
scas
in
cmp
xchg
adc
push
ds
mov
jg
aaa
cltd
ret
xor
mov
xor
jno
mov
in
jmp
imul
mov
jbe
aas
idivl
inc
jne
xor
adc
mov
int
add
cmpsl
or
addr16
push
pop
neg
push
mov
and
jl
shll
in
pop
mov
das
adcl
sbb
mov
mov
jg
xchg
popa
subl
cmp
jge
sub
push
mov
mov
mov
loopne
dec
lock
xlat
imul
sbb
hlt
pop
sbb
gs
dec
stc
in
add
pop
push
incl
mov
aas
out
in
lret
jne
je
push
scas
in
jne
mov
dec
cli
repnz
into
mov
sbb
out
ret
shll
pop
ss
in
inc
mov
es
shlb
sub
sbb
xchg
mov
dec
sub
out
addr16
sub
push
aad
cli
push
into
clc
clc
push
and
push
jb
inc
cmp
and
fstl
push
fwait
lret
xchg
leave
adc
repnz
dec
hlt
call
repnz
push
ret
xchg
push
adc
in
push
daa
or
xchg
jp
inc
ja
sbb
mov
out
lds
or
sbb
xchg
out
and
xchg
cld
dec
into
insl
dec
or
int3
shlb
sbb
imul
test
fwait
jnp
js
push
ljmp
adc
js
lea
mov
cmp
push
sub
mov
imul
lahf
shll
inc
and
fsts
cmp
aas
cmp
xchg
mov
jb
pop
mov
and
icebp
testl
sbb
mov
clc
cmpsb
dec
mov
cmp
inc
cmp
leave
adc
xchg
mov
stc
jne
push
and
push
cmp
pusha
addr16
cmp
fidivs
inc
mov
out
and
adc
pop
stc
jp
pop
sub
iret
lret
fs
ficompl
mov
add
xor
jg
fnstenv
cli
dec
xchg
outsb
std
out
inc
adc
js
push
or
lret
test
mov
pop
sub
scas
iret
xor
xor
cmp
orb
std
stc
mov
mov
mov
mov
lret
fs
movsb
imul
push
fisubrs
pop
fwait
scas
rcl
icebp
in
aam
fwait
stc
jmp
push
push
sub
adc
cmpsb
mov
jo
xor
lcall
cmp
xorb
push
jb
cmpsl
std
inc
mov
rolb
push
lods
pop
pop
movsl
addr16
mov
xchg
es
ja
push
mov
push
rcrl
sub
xchg
pop
iret
ss
sarb
cld
scas
sub
out
xchg
lea
inc
xorl
ret
mov
insl
and
data16
lret
add
xor
aas
iret
xchg
add
cltd
jnp
xchg
adc
xlat
aaa
sti
les
js,pn
xchg
sarb
ds
xchg
dec
pinsrw
cmp
out
ja
xor
cmpsl
lret
sub
dec
push
mov
cmp
nop
or
mov
popa
cld
sbb
jl
mov
roll
pop
pop
xlat
jmp
filds
lret
adc
xor
adc
inc
scas
dec
pop
add
int3
mov
sub
into
mov
loopne
repz
inc
fsubl
gs
push
int3
xlat
mov
push
outsl
je
mov
cwtl
xor
repz
and
cmpsb
ja
stc
fs
fwait
sar
dec
int
push
es
outsb
lock
jg
mov
lds
push
xchg
adc
addl
fimull
jne
xchg
popl
jge
jno
lock
or
fsubrl
dec
int
insl
movsb
icebp
mov
or
mov
adc
xchg
call
data16
out
sbb
jb
pop
icebp
cmp
cmp
and
ss
addr16
movsl
inc
div
test
pop
js
mov
cltd
imul
notb
loop
adc
pusha
sub
inc
xor
jo
loope
psubd
sub
pop
inc
adc
xor
mov
lahf
sub
xor
test
repnz
lock
pop
mov
and
lods
mov
enter
inc
icebp
mov
mov
ror
dec
insb
xchg
adc
xchg
dec
aaa
pusha
cmpsb
push
inc
xor
call
mov
aas
movsl
push
enter
in
repnz
mov
sbb
xor
xor
push
testl
lcall
push
adc
test
fisubrl
loop
xor
jbe
out
in
pop
mov
rolb
int3
mov
fsubrs
xor
push
xor
mov
rclb
pop
xchg
in
xchg
jae
push
mov
sbb
out
sbb
adc
jne
jg
lea
fstl
sbb
push
addr16
scas
mov
add
adc
sbb
dec
pop
jge
shll
cmp
adc
mov
insb
mov
jae
xor
jb
and
xor
scas
stos
jle
push
clc
shll
or
add
mul
push
jge
jnp
xchg
or
sbbl
mov
aam
stc
in
pop
std
inc
add
addb
or
mov
jg
adc
add
mov
dec
or
lret
aaa
sbb
cmc
inc
inc
sub
pop
cli
cmpsb
rolb
in
lahf
push
lods
mov
sub
aas
std
inc
dec
push
mov
dec
adc
push
inc
or
loopne
out
push
mov
or
pop
cmp
sbb
jbe
ffree
mov
sbb
or
mov
or
mov
and
cmpsl
mov
test
mov
sub
push
rorb
push
xchg
jl
popa
ret
scas
jbe
cmp
cmp
adcb
adcb
push
popa
push
aaa
rolb
mov
xchg
cs
lods
dec
sbb
mov
xor
dec
mov
insl
adc
and
mov
push
xor
stc
repnz
jg
xor
sub
lods
dec
dec
jge
sbb
sub
aam
jne
adc
mov
sub
mov
in
es
push
xchg
ret
fcomps
inc
mov
lahf
jge
fcmovnu
add
push
js
jle
out
gs
stos
std
mov
outsl
and
mov
cmp
and
or
out
dec
js
dec
cltd
jne
fsubs
fistpl
pop
push
dec
cld
pop
sub
add
jge
out
mov
ljmp
emms
repz
ja
stos
sub
call
adc
jno
adc
repz
test
mov
sub
incb
incb
ss
adc
lods
xchg
fs
rcll
or
xor
les
nop
mov
xor
test
in
adc
aaa
sarb
sbb
push
jne
cmpsb
cld
cmc
mov
arpl
arpl
xchg
dec
dec
stos
scas
das
push
jmp
dec
gs
dec
fcoms
or
je
mov
rcrb
mov
lea
adc
xor
add
test
dec
popf
cmp
insb
inc
ja
xchg
mov
test
dec
andl
push
sbb
mov
jp
mov
xchg
mov
push
mov
fwait
test
mov
cmp
cltd
xor
inc
cmp
inc
mov
or
mov
dec
and
js
sbb
jae
sbb
lods
xor
lcall
mov
add
inc
call
lock
insl
jp
fmuls
sti
cmpb
lret
mov
inc
dec
sub
mov
push
cwtl
inc
and
call
cmpsb
or
rorl
push
lods
clc
lahf
inc
cmpsb
push
stos
mov
or
lea
nop
aaa
faddp
ja
cli
sbb
fmul
mov
pop
inc
xchg
or
push
cld
je
bound
ret
jg
push
inc
stc
inc
arpl
and
jnp
ret
inc
add
movsl
pop
rcrl
into
aaa
out
push
scas
sub
pusha
xchg
lret
leave
js
pushf
out
inc
scas
inc
in
push
test
jp
dec
mov
push
lea
int
mov
push
rorl
dec
jnp
stc
adc
sub
filds
or
and
into
push
and
movsl
sbb
jns
mov
jno
cmp
cs
cltd
or
adcb
push
fwait
pop
fcompl
sbb
out
add
test
xchg
stos
ret
cltd
pop
sahf
and
loopne
roll
jl
xchg
js
cmp
push
int3
jo
inc
inc
jle
arpl
fwait
pop
pop
sub
xor
xor
repz
add
pop
pop
cli
jno
sti
push
scas
loopne
test
fisttpll
inc
fs
push
test
push
push
xlat
pop
pusha
pop
and
pop
imul
dec
out
pusha
jge
in
xor
test
dec
jnp
add
pop
jno
jo
or
lds
pop
mov
pop
in
xor
or
xor
xchg
and
sbb
sbb
inc
repz
fcmovne
mov
imul
inc
dec
out
aam
push
sub
sub
sub
hlt
pop
or
pop
inc
adc
or
shll
xor
lea
pop
ret
pop
sahf
repz
loop
lcall
inc
jg
inc
cli
and
and
mov
pop
sub
loopne
popf
xor
cmp
fistps
clc
mov
in
mov
inc
das
xchg
jecxz
push
cmpsl
adc
pop
call
push
sarl
inc
test
test
aam
jle
ljmp
dec
or
rcrb
xor
cmp
push
out
add
push
out
aad
scas
out
and
jp
jne
xchg
outsb
lods
sub
popf
or
adc
in
xchg
dec
jmp
outsb
adc
mov
ret
cmpsb
repnz
jbe
out
stos
inc
lds
dec
xor
jno
push
sbb
mov
repz
in
mov
push
sahf
adc
lret
dec
out
mov
inc
xchg
nop
pop
xorb
cmc
enter
out
fs
dec
dec
lods
icebp
cmp
scas
xor
das
dec
inc
out
pop
sub
inc
cmpsl
stc
dec
mov
dec
cmp
lahf
imul
gs
aam
ljmp
dec
data16
push
sbb
xchg
jmp
jns
dec
jecxz
inc
lds
inc
ret
mov
push
pop
mov
pop
jbe
jb
or
xchg
jmp
jmp
add
add
mov
div
adc
daa
mov
fiadds
out
int3
mov
sub
fwait
or
jo
add
js
je
sti
push
orb
add
push
mov
idivl
jmp
dec
fs
jl
daa
dec
sti
jb
xor
fwait
ja
cmp
lods
sub
in
jle
shll
rorb
xchg
roll
or
iret
enter
sbb
rorl
and
xchg
mov
dec
adc
xchg
xchg
add
addb
aam
faddl
push
sub
sti
fcmovu
sub
cmp
jmp
in
lods
test
xor
xchg
push
mov
xor
mov
test
push
jno
fsts
adc
mov
mov
push
push
mov
in
sbb
pop
cmc
outsb
mov
xlat
inc
dec
popa
or
and
nop
push
cltd
lret
xchg
les
push
mov
jp
sbb
out
fnstsw
cmp
and
cli
enter
mov
enter
cmc
mov
xor
push
pop
xchg
pop
inc
sub
jp
pop
push
fwait
stc
ror
add
mov
sub
mov
mov
pop
and
fiadds
addr16
out
mov
jl
sbb
fimull
sbb
mov
notl
adc
mov
add
lock
fmull
leave
orl
xor
add
movsl
sub
cmp
iret
jecxz
xor
outsl
icebp
mov
push
loopne
sub
mov
aad
mov
shl
mov
out
rcll
mov
sbb
out
mov
xlat
adc
mov
nop
or
jmp
inc
stc
rcl
shrl
mov
push
jns
xor
cmp
sub
jl
add
and
jg
in
sahf
dec
cli
pop
sahf
mov
pop
out
pop
xchg
push
mov
pop
sub
pop
and
cmc
movsl
jne
out
cmpsb
fildll
es
add
divb
and
movsb
push
inc
dec
pop
int3
dec
mov
cld
cs
or
repnz
in
ljmp
inc
xchg
test
in
and
cmp
adc
cmc
pop
and
imul
loopne
lret
in
out
int
out
ljmp
fs
mov
mov
shrb
cmc
sbb
ret
push
mov
fcomps
xchg
ljmp
clc
mov
fstpl
ljmp
mov
dec
sub
sti
cs
dec
icebp
cs
add
mov
sub
pop
cwtl
inc
into
jne
jb
adc
lret
dec
rcrb
mov
aas
test
in
push
add
lods
addr16
test
cmp
cmp
lds
adc
test
jp
in
lds
adc
fdivs
sbb
cmp
out
mov
fwait
cmpsl
push
sbb
cmp
cmovnp
cmp
adc
or
into
icebp
call
mov
fnstenv
cld
mov
test
pop
pop
cmc
and
shll
aad
push
fidivrs
adc
out
scas
les
mov
or
popf
fwait
sbb
out
sbb
movsb
push
scas
dec
imul
lods
mov
inc
inc
mov
jns
jne
cmpb
lcall
push
and
in
push
sub
ficompl
inc
add
shll
fmul
sub
imul
xchg
std
shll
xchg
lock
pop
push
test
mov
adc
pop
leave
inc
push
inc
loopne
cmp
mov
xchg
repz
inc
test
ljmp
and
pusha
cld
loope
cmc
das
adc
mov
notl
fcompl
stos
sbb
mov
dec
dec
and
imull
pop
insl
ja
rclb
mov
cmp
popa
cmc
add
hlt
xchg
shlb
pusha
jo
subl
xor
lock
and
dec
sub
flds
rcrl
leave
loope
push
movsl
je
and
loope
sub
vpsrad
repz
push
int3
cmp
je
and
dec
popa
cmp
xchg
adc
cli
and
sub
push
daa
gs
and
shl
cmp
jl
mov
add
sub
fstl
dec
sub
jge
test
pop
or
addr16
mov
fbld
inc
out
xor
outsb
out
push
scas
lods
sub
sbb
jecxz
out
lock
shll
stos
cmp
repz
rol
and
dec
stos
stc
ja
imull
enter
or
jecxz
xchg
jle
ljmp
mov
and
fs
lds
call
stos
int
mov
push
pushf
int
xorl
and
arpl
inc
cwtl
add
pop
lea
and
xor
sub
daa
inc
leave
adc
shrl
dec
scas
fdivrl
and
out
dec
int
mov
out
mov
mov
add
mov
in
dec
xor
and
inc
jae
mov
int
mov
rol
cli
fisubs
mov
stos
jp
leave
mov
popa
test
add
loope
fdivr
push
pop
push
cs
addr16
clc
push
jnp
push
rcl
pusha
shlb
inc
push
fcom
sbb
jns
or
mov
dec
pop
xchg
push
adc
mov
in
ja
adc
stc
cmp
adc
stos
sub
xchg
inc
mov
sub
dec
fidivl
inc
mov
mov
aaa
hlt
out
daa
mov
lods
enter
push
shll
call
outsl
iret
jbe
xchg
divl
cwtl
subl
aad
rcl
in
inc
loop
pop
out
jmp
fs
inc
outsb
dec
cmc
xor
add
fmull
ja
cmp
imul
xchg
sbb
nop
inc
jecxz
pop
mov
add
out
lods
imul
mov
xor
jae
xchg
xor
xor
cld
repnz
movsb
pop
pop
das
out
cli
jnp
ja
sub
nop
mov
cltd
mov
testb
shl
repz
mov
mov
and
pop
cld
lea
jbe
lret
pop
aas
sub
addr16
sbb
xchg
fcoml
mov
xchg
iret
mov
mov
shrb
xchg
cld
dec
repnz
cmp
adc
inc
jp
sub
js
movsl
pop
xchg
jl
push
popf
sbb
sti
pop
popa
cwtl
jecxz
insl
outsl
dec
or
sbb
mov
xor
push
loop
push
ljmp
in
scas
mov
gs
mov
repz
ss
pushf
in
add
outsl
inc
and
jl
dec
cmpsl
insb
repnz
add
jmp
push
lahf
bound
out
in
mov
imul
mov
lret
stos
pop
mov
pop
pop
jb
sbb
mov
repnz
xlat
push
push
mov
mov
stc
cmc
and
rcll
mov
dec
jns
mov
add
jae
pop
icebp
jbe
xchg
enter
sub
imul
in
mov
stos
inc
leave
frstor
push
out
hlt
mov
adc
lods
pop
sbb
sub
sti
or
imul
andb
iret
lret
adc
loopne
decb
xchg
vsubpd
dec
insl
or
add
adc
loope
xor
decl
ret
stos
repz
xor
cmpsl
stos
arpl
dec
int
in
loopne
mov
cmp
cmp
xchg
imul
push
adc
aam
lret
decb
jg
add
test
enter
adc
mov
or
sub
jb
lds
sbb
in
fists
push
push
cli
mov
jg
int3
andb
jmp
xor
pop
xchg
scas
roll
add
adc
mov
dec
arpl
mov
lods
nop
out
inc
out
jecxz
hlt
mov
push
lock
icebp
jne
das
hlt
xchg
push
pop
dec
addr16
cmp
in
es
mov
cmc
scas
inc
fwait
mov
out
jb
mov
jle
in
aad
hlt
scas
neg
test
andl
fsubrl
mov
fadds
sbb
xor
imul
sub
lret
mov
pop
clc
es
or
inc
xchg
dec
xor
xchg
push
movsb
mov
push
xor
movsl
or
pop
lahf
sub
js
mov
scas
cld
dec
aam
pop
mov
inc
jno
enter
and
out
inc
int3
fcompl
xchg
xor
xchg
ljmp
je
and
pop
xchg
shl
push
pop
ds
mov
out
mov
push
dec
pop
add
push
stos
pop
dec
stc
filds
mov
fucom
in
xor
adc
or
adc
or
sub
stos
scas
lock
and
xchg
sub
and
ljmp
lods
int
adc
and
rcl
mov
insl
loop
jp
mov
aaa
and
pushf
sbb
push
adc
mov
jnp
fnsetpm(287
int3
test
popa
pop
push
testb
outsb
scas
mov
fs
mov
std
or
inc
xchg
inc
mov
fs
xchg
mov
mov
sbb
mov
pushf
pop
incb
jmp
movsl
movsl
imul
jae
sti
fnsave
aad
insl
pop
pusha
cmp
sahf
and
cwtl
shrb
sbb
cmp
jne
jmp
std
mov
jmp
or
cld
iret
cmp
nop
push
pusha
fmul
inc
bnd
adc
sbb
mov
sbb
ret
mov
je
add
sub
jp
push
mov
and
inc
push
ret
mov
lods
dec
and
lds
pop
popf
xor
hlt
cltd
push
cld
xchg
int3
mov
adc
aas
sbb
iret
push
fdivrl
fwait
add
testl
xchg
lds
cmpl
stos
xor
mov
jmp
cmp
icebp
sub
xor
sbb
loopne
cmp
adc
pop
mov
js
fdivl
daa
scas
ret
in
loopne
push
or
nop
es
ljmp
cltd
gs
xchg
push
jl
mov
sbb
pop
out
orb
mov
cltd
clc
mov
lret
fucom
pusha
push
sti
fs
popa
in
rcrb
shrl
cltd
cmp
pusha
lds
add
push
leave
cmp
jbe
rcl
mov
jl
or
mov
cmc
in
lea
sub
sahf
repz
clc
cmc
jecxz
mov
insl
xchg
andb
add
jae
ror
insb
ficompl
cmc
xchg
repz
sbb
fisubrl
movsb
loope
and
ss
inc
push
pop
or
mov
repnz
xchg
shlb
sti
addl
rcrl
cltd
mov
or
mov
shrb
pop
or
shlb
adc
gs
mov
or
xchg
adc
test
mov
adc
and
insb
pop
inc
push
test
pusha
inc
lds
xchg
mov
push
adc
sbb
fsubp
stc
adc
or
inc
mov
adc
loop
icebp
xor
out
mov
minps
mov
push
testl
pop
bound
es
and
cmc
xchg
cld
sbb
out
roll
jo
dec
movsl
pusha
fcmovnu
jnp
repnz
lcall
testb
mov
push
orl
adc
pop
cmp
and
sub
lret
sub
iret
lds
loopne
adc
mov
mov
xchg
xchg
sbb
lds
mov
push
dec
out
xchg
lods
arpl
mov
lods
or
xor
dec
ja
ja
loopne
mov
mov
pop
mov
or
mov
mov
push
cwtl
sahf
dec
dec
fwait
out
jae
xor
stc
test
cmp
cmp
mov
mov
and
bound
shll
imul
sar
jb
cmp
test
clc
or
pop
pop
mov
cmp
add
mov
sbb
xor
ljmp
inc
fcoms
das
sbb
repz
out
add
out
icebp
xchg
dec
insb
inc
add
or
sbb
daa
jle
leave
ret
jl
jl
pop
add
vmovntdq
sar
es
mull
loopne
cwtl
push
imul
iret
xchg
ss
cmpsb
es
test
pop
sbbl
aaa
iret
pop
adc
neg
cmp
data16
jns
roll
je
pop
cmp
mov
rcrl
lock
push
mov
mov
or
out
sub
jbe
popf
cmpb
jns
push
sti
clc
dec
ja
cmpl
out
fdivs
xchg
or
shll
fstps
or
dec
mov
outsl
ficompl
mov
xchg
movsb
aad
lcall
fists
xchg
and
sbb
loopne
jp
push
loope
mov
fs
popf
push
push
xchg
cld
sbb
ret
mov
or
dec
js
bound
and
and
outsb
cmp
arpl
negb
push
lret
enter
clc
sbb
mov
pushl
sub
loope
push
shrb
hlt
mov
in
leave
lds
fsubl
pushl
mov
mov
scas
cmp
xor
into
push
add
daa
rcrl
repz
ret
pop
stos
sub
pop
ljmp
lret
pop
mov
fldcw
cmp
jg
rcr
jp
xor
imul
jae
and
mov
fistl
mov
fistl
mov
cmp
xchg
out
lock
shrb
fildll
jg
and
cmp
pop
shrl
inc
scas
test
popa
cmp
push
xchg
adc
std
mov
sbb
mov
or
cmp
cmp
mov
xchg
cmc
js
sub
xchg
and
mov
subb
mov
inc
movsl
pop
shrl
xchg
lcall
mov
data16
lahf
dec
adc
scas
test
adc
push
jmp
inc
sbb
popa
loopne
pop
xchg
lret
test
enter
push
aam
sbb
adc
push
mov
sbb
jg
dec
mov
insb
sub
push
imul
fistps
movsb
inc
mov
and
scas
sbb
cmp
repz
pop
scas
xor
out
rcll
repz
mov
into
loop
clc
mov
dec
outsb
lock
adc
test
push
mov
jl
les
pop
das
jno
aaa
xchg
out
inc
mov
lods
sbb
push
add
sbb
sbb
lret
test
or
xor
cmc
mov
shrl
subl
dec
icebp
mov
mov
aad
adc
packsswb
frstor
mov
int
jg
and
push
imul
stc
mov
or
xor
pop
fsubr
adc
lret
jmp
sub
mov
pop
jne
js
out
xchg
jle
in
adc
mov
xor
and
js
loop
mov
out
add
mov
nop
lcall
adc
mov
pop
scas
adcb
out
jge
mov
sub
sbb
xor
mov
in
add
xor
fisttps
add
and
dec
mov
push
inc
fistps
push
sub
xchg
xor
fadds
xor
adc
mov
or
mov
cld
and
push
inc
dec
dec
shrl
jg
sub
dec
mov
dec
mov
pop
shlb
stos
lds
test
arpl
test
fldenv
stos
js
cwtl
mov
push
inc
mov
jb
sahf
sub
cmp
push
pop
push
aad
push
imul
xchg
or
jbe
clc
xchg
fs
pop
mov
inc
leave
mov
cli
adc
jnp
push
shrb
jno
fwait
repnz
push
popf
lahf
cmp
xchg
adc
rcrl
fcmovbe
testl
mov
fists
or
lock
sub
insl
inc
in
ffree
sbb
and
sbb
ret
xchg
jbe
incl
mov
or
mov
dec
fs
lcall
lea
mov
mov
imul
lock
fsts
movsb
or
jmp
rorb
inc
cmp
push
ja
or
rol
out
out
push
push
mov
sahf
xlat
leave
pop
sbbb
pop
dec
in
in
lcall
cmp
mov
cwtl
mul
repz
inc
dec
xor
mov
sbb
out
pop
into
jno
pop
stos
sub
inc
jmp
rol
lahf
cld
cld
popl
mov
jne
sub
arpl
lret
cmp
sub
cmc
arpl
push
xor
test
jne
insl
scas
pusha
lret
jmp
movsl
push
mulb
xchg
pop
in
add
ficoms
pop
je
push
test
and
sub
outsb
sahf
shl
xor
adc
mov
hlt
mov
sbb
jbe
sbb
pop
adc
int
sub
mov
mov
mov
lret
pop
adc
dec
jno
lock
pop
sbbb
mov
outsl
iret
and
push
xor
lret
mov
inc
or
or
push
sub
dec
xor
into
inc
push
xchg
shll
pop
pop
aam
fiaddl
dec
push
fsubrp
mov
inc
push
negb
sarb
sti
daa
mov
jp
cmc
and
or
pop
aas
hlt
out
cmp
ret
lret
or
pusha
and
pop
je
into
lock
add
mov
xor
cmp
in
lods
inc
or
addr16
nop
rcrb
xor
push
das
xchg
and
and
or
ret
test
xchg
or
push
sbb
test
dec
jg
mov
push
push
dec
out
and
aam
cmpsl
int3
mov
sub
jns
daa
mov
dec
pushf
push
mov
inc
repnz
xchg
sahf
pop
in
hlt
pop
pop
xchg
xor
xchg
in
stos
mov
mov
adc
test
lcall
mov
mov
mov
jb
pop
cmp
xchg
cmc
sub
xchg
popf
and
leave
arpl
mov
daa
xchg
rcrl
pop
push
movsl
test
movsb
ret
mov
pop
arpl
xchg
push
push
mov
sahf
add
adc
push
bound
mov
out
adc
ds
rcrb
out
adc
xchg
int
adcb
loop
xchg
cmpsl
xchg
mov
adcb
cmp
jmp
jmp
aaa
hlt
lods
mov
fistl
ret
cld
sub
sub
xchg
sbb
xor
mov
int
xor
add
mov
fstl
fdivrl
pop
xor
inc
or
fnstsw
aad
cld
scas
das
sbb
int3
fdivrs
sbb
xlat
call
mov
inc
push
mov
sub
fstp
jmp
xor
leave
repnz
mov
mov
push
cmp
addw
orl
or
adc
arpl
xchg
rcrl
ljmp
insb
adc
dec
insl
imul
inc
shll
stos
aad
sub
and
daa
adc
ffreep
xchg
movsl
rcll
cmp
cmp
or
fs
ret
pop
push
fsubrs
mov
or
and
mov
ss
sub
xor
jmp
xchg
jmp
and
jecxz
repnz
push
add
lret
lock
push
frstor
push
mov
pop
sub
repz
xor
push
inc
rol
int
aad
jbe
enter
pop
xor
pop
mov
rcll
ljmp
cmp
test
ror
in
inc
shlb
dec
sub
cwtd
lock
ljmp
dec
push
xlat
es
iret
mov
stos
sub
jmp
insl
adc
mov
in
icebp
outsl
ljmp
dec
in
cmp
add
icebp
sub
jge
ret
add
mov
pop
and
add
inc
sbb
xchg
das
rcrb
jbe
sbb
adc
sbb
stc
pop
push
xchg
out
xchg
mov
push
in
cmp
test
repnz
mov
mov
lock
fs
xchg
adc
mov
insb
push
std
cld
push
testb
jae
test
loope
js
enter
sbb
push
jns
cmovbe
dec
push
insb
inc
add
addr16
fnstcw
mov
stos
cs
xchg
mov
test
pop
loope
aam
add
push
retw
out
repnz
pop
popa
neg
or
mov
inc
add
adc
aaa
imul
insb
loope
mov
test
pop
jmp
cli
mov
pushf
add
sbb
xchg
jle
add
add
test
es
outsl
and
cmc
mov
lods
pushf
ret
inc
xchg
cmp
cmp
cmp
je
mov
mov
xor
int3
jge
scas
jg
in
aad
push
jns
cmpsb
pop
mov
out
mov
fwait
mov
cmpsl
int3
test
testl
mov
mov
dec
loop
jne
lock
lea
cld
rcrb
and
adc
xchg
sbb
sbbb
pop
inc
mov
test
jne
mov
es
test
jmp
pushf
scas
dec
fwait
aaa
mov
sub
jge
pop
dec
sbb
mov
stos
sbb
push
out
test
repnz
shll
xor
sub
lcall
enter
inc
xor
and
inc
int3
xor
jne
repz
aas
jge
add
push
jb
push
ret
or
sub
pop
lock
sar
shlb
xchg
pop
adc
ror
cmc
adcl
push
sub
pop
icebp
pop
xor
xor
insl
mov
loope
movsl
xlat
lcall
fmulp
adc
lock
sbb
and
sub
dec
pop
and
jo
leave
jecxz
out
mov
cmpsb
cmp
and
add
incb
mov
dec
pop
sbb
orb
or
pop
cmp
lods
fistps
insl
xor
scas
sbb
lods
arpl
jmp
popf
es
sti
or
mov
adc
mov
sub
add
cltd
pop
ss
fiadds
dec
fildll
shrl
push
iret
jg
pop
imul
into
ror
cmp
lcall
std
arpl
scas
pop
in
repnz
dec
push
fimuls
mov
shrl
add
aaa
and
sub
pop
or
leave
scas
iret
imul
cmp
jp
das
mov
push
nop
and
int3
rcrb
ds
in
jg
push
adc
insb
add
imul
push
xchg
xor
inc
mov
ret
pushf
ds
loopne
fs
in
in
and
mov
jbe
int3
xchg
cwtl
fiaddl
scas
sbb
push
lods
shlb
and
cmp
call
xchg
jae
mov
mov
imul
or
test
dec
enter
hlt
adc
jl
dec
xorl
bnd
stos
jmp
rcrb
add
mov
aaa
daa
cmc
ficoml
cld
sbb
sahf
mov
cmpsl
inc
push
in
call
mov
jp
sahf
jg
loopne
cmp
jae
cmp
out
push
cwtl
int3
inc
fstp
cmp
test
ficoms
bound
stos
or
int3
lahf
ret
aad
mov
fdivs
or
cld
or
jns
ljmp
add
daa
sar
or
add
sbb
in
mov
mov
stos
sahf
xor
out
loop
ret
jge
xchg
cwtl
dec
testl
in
sbb
call
jmp
mov
aam
xchg
mov
rcr
fstl
adc
mov
inc
enter
int
loopne
repz
das
push
push
inc
stos
test
or
sbb
insb
cs
mov
mov
in
dec
xor
mov
xlat
aad
repz
imul
sbb
lahf
movsb
pop
cltd
dec
addr16
dec
cltd
or
mov
cmp
push
in
cmpsb
das
fnstcw
pop
mov
cmp
push
cmp
xchg
clc
fmuls
in
popa
jno
sub
or
icebp
hlt
leave
sbb
push
loopne
fiadds
out
mov
test
push
movsl
lods
inc
in
jae
lods
dec
inc
loop
cmpsl
dec
aad
cli
pop
aas
addr16
xor
scas
insl
mov
ss
or
cltd
out
inc
cmp
leave
leave
fistps
push
shl
push
test
fdivs
es
cmp
mov
adc
aas
mov
push
addl
dec
and
dec
mov
lock
adc
gs
outsb
das
cmp
jno
loopne
push
push
mulb
push
aas
mov
loopne
xor
aas
push
leave
cmpl
pop
jl
cld
lahf
dec
iret
cs
mov
lds
scas
dec
sub
enter
out
insl
jo
mov
lods
in
roll
pop
sub
sbb
push
rcrl
js
aas
insb
sub
cmpsl
dec
decl
hlt
loope
push
call
out
out
loope
push
sbb
pop
lahf
imul
xor
aaa
insl
insb
and
lret
cltd
pop
stos
scas
loopne
lret
push
xor
sub
enter
xchg
mov
dec
rorl
and
bnd
cli
ret
push
mov
mov
sub
or
das
pop
sub
lcall
idiv
mov
sub
jle
fstl
mov
sbb
pop
jg
adc
pop
lcall
roll
push
in
lea
dec
add
subb
popf
adc
adcb
fidivs
pop
mov
cltd
push
mov
data16
push
out
xor
imul
pop
add
push
jo
out
jl
dec
pop
push
ret
cmp
pusha
cmp
xchg
pop
and
fs
or
mov
sbb
out
aas
sbb
dec
push
das
loopne
fisubrl
mov
in
fbld
aas
imul
lahf
fistps
imul
xchg
sbb
sbb
loop
push
cs
adc
cmp
mov
push
out
mov
cld
mov
lret
sbb
in
push
in
icebp
mull
xchg
fwait
add
or
imul
inc
test
out
sbb
loopne
sub
sbb
mov
xor
leave
xchg
roll
xchg
nop
jnp
je
addl
adc
in
sarl
sbb
xor
push
pop
mov
fldl
mov
pop
jl
insb
shlb
mov
pinsrw
addr16
sbb
push
pop
jp
push
sbb
push
pushf
pushf
xchg
mov
sbb
and
dec
mov
lret
lret
lods
cld
xchg
frstor
rorb
xor
imul
ja
sbb
orl
cli
jns
aaa
aaa
fsubrs
inc
mov
insb
cltd
sbb
out
inc
mov
gs
aad
pop
int3
cmp
je
jnp
or
add
push
gs
mov
mov
push
jae
bound
mov
dec
ret
push
push
cli
xlat
pop
push
andl
shl
xchg
mov
adc
adc
repz
les
cltd
jge
sbb
mov
sahf
push
add
fs
and
repnz
jne
mov
mov
shlb
inc
mov
stos
pop
stos
sbb
stos
fs
mov
imul
sbb
mov
fistps
jp
sub
lret
out
stc
sub
mov
out
sahf
or
pop
scas
jmp
mov
into
test
dec
sub
xchg
mov
cmp
dec
add
int3
cs
xor
test
or
lock
test
push
adc
in
cmp
and
jg
roll
test
xchg
push
icebp
outsb
or
sub
jl
cwtl
adc
xor
xchg
gs
in
push
fwait
sub
sub
mov
push
dec
icebp
pop
dec
sbb
sbb
dec
leave
shlb
add
xor
add
in
fdivrp
lds
std
inc
pop
aas
cltd
sbb
sahf
ficompl
rclb
leave
inc
jge
jmp
mov
cmpsb
xchg
sbb
sahf
in
and
mov
xor
stos
enter
jo
jae
sub
cmp
cmp
jns
cmp
sbb
int3
xor
lret
sarl
mov
push
mov
movsl
pop
dec
sub
cwtl
sbb
sbb
fnsave
insb
mov
test
sub
or
xor
pop
fucomi
cltd
lret
push
call
sub
loopne
cwtl
jecxz
repnz
cmp
push
jp
push
xchg
cmpsl
mov
gs
lock
sarl
loop
js
sbb
adc
inc
mov
out
fisttpl
pop
adc
pop
lods
not
sub
pop
loopne
pop
or
lods
jge
push
addr16
pop
sub
mov
jle
jle
sub
adc
sub
rcll
jle
pop
xchg
pushf
imul
int3
mov
cli
push
lahf
fcoml
fistpl
int3
push
cmp
and
sbb
mov
add
xchg
scas
add
and
pop
jne
push
aad
shrb
movsl
or
or
test
xor
add
jo
mov
pushf
outsb
nop
jecxz
movups
mov
out
les
cltd
xchg
in
hlt
roll
jno
xchg
movsb
lock
aaa
sbb
sub
mov
pop
push
inc
bound
out
lcall
sbb
icebp
rcrb
clc
nop
inc
adc
jae
stos
jb
cli
and
xor
je
push
aam
inc
jae
cmp
lods
stos
mov
cltd
add
mov
xchg
daa
mov
popa
pop
jne
iret
js
iret
leave
xchg
or
jp
mov
stos
add
pusha
xchg
jnp
das
popa
aam
fincstp
mov
sub
shl
pop
push
mov
pop
ficoms
or
xchg
jo
mov
pop
and
ficompl
scas
xor
mov
jge
jnp
shll
fwait
push
mov
xor
movsl
jno
movsl
int
shl
pop
in
ret
daa
into
ljmp
pop
and
jge
mov
shr
in
insb
iret
xchg
cmp
mov
imulb
dec
xchg
cmp
add
jbe
scas
cmp
dec
in
cwtl
ret
and
das
inc
in
addl
loope
mov
mov
fstp
mov
stc
jnp
xchg
jo
mov
stos
mull
jp
in
sti
xor
jo
dec
jge
lds
push
out
mov
and
aam
movsl
nop
aad
popf
mov
pushf
or
jbe
ja
popa
pop
iret
xor
das
std
cmp
lahf
leave
fsubs
jle
ja
cld
xor
mov
test
mov
enter
imul
sbb
out
push
into
sti
mov
cli
lds
add
clc
ja
sar
jne
mov
cs
je
jne
jo
ret
lcall
or
out
fcoms
sbb
push
jmp
push
stos
lods
push
jns
cmp
push
das
add
movsl
lods
xchg
cli
push
js
sbb
xor
packsswb
add
ds
faddl
loopne
into
bound
push
lods
sub
aad
test
gs
lahf
les
cmp
notb
notl
cltd
js
stos
test
insb
out
mov
jne
outsb
add
lret
test
loop
sbb
fisubrl
inc
and
mov
hlt
adc
arpl
cld
add
xchg
mov
cmp
lods
int
pop
lock
mov
cmpsl
xor
test
push
arpl
pop
gs
js
dec
sbb
cmc
cltd
adc
push
cmp
dec
add
pop
iret
jecxz
sub
push
hlt
add
test
xchg
aam
movsl
xlat
fstpt
orb
sub
xlat
cmc
inc
in
int3
mov
ret
enter
mov
stos
sub
sbb
adc
mov
adc
sub
and
pop
cmc
in
lea
xchg
and
pop
mov
adc
call
test
push
mov
dec
pop
test
dec
xlat
inc
rclb
push
and
pop
mov
insb
jne
xor
iret
or
imul
dec
mov
sub
in
mov
int
ret
jle
scas
pop
lock
and
pop
pop
mov
les
cmp
jb
int
lock
dec
sub
into
int3
adc
vminpd
out
and
ficoml
loope
inc
jae
mov
hlt
dec
arpl
push
aam
inc
adc
lcall
push
xor
cli
cmp
or
cltd
push
dec
adc
push
adc
cmpsl
push
xor
test
jl
mov
loope
ret
fscale
inc
aaa
sub
lds
lds
dec
data16
out
dec
cmp
sbb
pop
sub
pop
xchg
jb
pop
jmp
fcomip
adc
shlb
mov
mov
mov
cmp
mov
or
cmp
mov
movsb
cli
pop
jg
or
jecxz
in
cwtl
cmp
pop
sahf
in
and
push
rolb
out
insl
push
xchg
xchg
mov
into
cmp
je
dec
cmc
mov
lds
orl
ljmp
pop
sbb
jnp
sbb
add
or
mov
repz
cmp
dec
inc
dec
iret
in
insb
fisubs
std
xchg
mov
out
loope
mov
inc
dec
push
sub
add
aas
and
inc
data16
aas
mov
jmp
scas
data16
mov
mov
orb
adc
xlat
out
dec
out
pusha
popl
ret
inc
mov
addr16
lcall
enter
and
xlat
cmp
xor
in
and
leave
int3
sar
xchg
cmp
loopne
fldt
lahf
popf
repz
fidivrl
test
push
inc
cmp
icebp
lods
and
add
clc
mov
dec
lcall
push
mov
cmp
scas
push
mov
loope
jae
rol
push
jns
out
outsl
sub
call
fistpl
daa
push
lock
aaa
xchg
fists
pop
jnp
in
repz
inc
push
dec
sbb
in
cltd
dec
call
cs
lock
jg
sub
js
cmpsl
fucom
stos
mov
sti
std
pop
xchg
dec
rcr
mov
imull
cs
mov
in
pop
cwtl
mov
sti
mov
mov
mov
xchg
xor
bound
sbb
adc
ds
aad
addr16
sbb
pusha
fsts
xor
jno
nop
push
in
xor
inc
data16
jno
movsl
stos
jns
mov
xor
jmp
into
adc
mov
sti
fs
fucomi
mov
out
push
imul
sbb
pushf
in
sub
test
or
xor
stos
mov
push
pop
repz
pop
add
mov
pop
push
push
imul
leavew
flds
int
sbb
roll
sub
mov
adc
nop
movsl
mov
adc
std
stc
jne
loope
and
out
out
std
in
fwait
push
xchg
xchg
aam
mov
fs
and
mov
or
add
pop
xlat
adc
xlat
jno
inc
lret
adc
mov
arpl
adc
fucomi
xor
cmp
sti
jl
push
lea
ret
dec
in
in
push
mov
pusha
hlt
xchg
imulb
dec
pop
xor
add
xor
adc
and
pop
jbe
mov
sbb
sub
mov
jg
push
arpl
push
out
mov
ret
dec
nop
add
pop
xor
mov
and
mov
mov
jne
and
in
mov
pop
sub
iret
adc
mov
fwait
push
add
cmp
xchg
scas
mov
cmpsb
push
std
jb
jmp
bound
fists
aam
inc
inc
mov
outsb
jno
int3
stc
and
xlat
push
mov
dec
lods
mov
cltd
jbe
shll
mov
ret
fists
mov
dec
daa
ffreep
stos
push
add
sub
xchg
mov
cld
pop
jns
mov
cmpsl
xchg
sbb
and
mov
cltd
jp
xor
sbb
shlb
in
out
loopne
xchg
mov
aam
cmp
inc
bound
cld
loopne
gs
lcall
jne
xor
sub
push
andl
pushf
xor
les
loop
cmpsl
lds
push
xor
pop
mov
out
lret
xchg
cmp
test
mov
cmp
dec
push
adc
out
mov
in
xchg
push
addr16
push
imul
xchg
add
ret
push
movsb
inc
push
and
add
sti
cli
mov
ficomps
addr16
mov
fmuls
cmp
mov
loopne
xor
sti
pop
or
pop
mov
les
int3
pop
fcmovu
movsb
and
jae
mov
loop,pt
dec
dec
sbb
test
aam
mov
sbb
xchg
push
popa
jg
jno
idivb
sbb
xchg
pop
jge
hlt
scas
in
add
push
rolb
aam
sbb
xchg
dec
push
stos
addr16
dec
dec
mov
and
xlat
dec
xchg
gs
adc
test
and
cmp
xchg
dec
fwait
mov
lods
inc
sub
hlt
cwtl
lods
xchg
pop
repz
xchg
sub
inc
dec
jp
xchg
pop
stos
lret
in
sbb
push
popa
sahf
sti
fisttps
dec
jmp
adc
cmpsb
test
or
jle
lret
cmp
mov
push
mov
dec
cs
outsb
mov
or
jae
ret
and
sub
add
pop
mov
sub
sub
pop
insl
out
lret
dec
pusha
and
mov
mov
dec
fistpll
cmp
lcall
lret
cltd
adc
negb
xor
rolb
les
out
lock
pop
ficomps
xchg
xchg
test
push
mov
mov
mov
ror
outsl
int3
mov
popa
push
xchg
dec
dec
pop
clc
jmp
push
dec
xlat
cli
shl
cmp
sub
bound
dec
lret
cmp
xlat
mov
inc
and
out
mov
and
data16
jmp
hlt
push
loopne
or
inc
push
xlat
adc
or
and
jbe
sub
jge
add
dec
push
jmp
add
xchg
xchg
lods
ja
cwtl
repnz
rcl
pop
les
push
movsl
add
or
and
nop
lods
loop
fdiv
jns
push
mov
pop
popa
rcrl
sub
xchg
fstl
inc
mov
aad
add
out
fmull
push
cmp
loop
lods
add
fnstcw
mov
jo
in
in
cmp
mov
scas
and
add
movsl
push
dec
je
xor
sbb
gs
mov
cltd
jmp
dec
orl
or
jmp
xchg
xchg
dec
std
in
out
cmp
das
roll
inc
mov
ret
hlt
into
inc
or
cmc
pop
gs
mov
xchg
xchg
lret
ljmp
mov
out
dec
arpl
in
pop
pop
dec
jecxz
loop
fcomip
out
mov
mov
movsb
gs
adc
or
fcmove
push
jl
fisttps
mov
pop
cmpsl
sub
cmp
or
and
outsb
clc
push
xor
push
xor
jae
push
sub
lcall
add
lret
testb
outsb
iret
fildll
fs
cs
mov
mov
pop
push
pusha
mov
mov
roll
fwait
in
test
sub
pop
rcl
int3
inc
in
xchg
or
aam
fsts
test
dec
jmp
mov
iret
cltd
mov
cltd
lcall
cs
aad
adc
ss
xchg
jnp
dec
fwait
jle
stos
lods
dec
jbe
in
in
add
pop
and
testl
mov
and
mov
mov
not
xor
push
arpl
push
hlt
mov
sbb
xchg
jmp
cltd
jecxz
enter
sbb
cs
int
mov
inc
lods
fstps
cmc
ficomps
fdivr
adc
or
push
add
pusha
cmp
out
adcb
jp
in
xchg
rclb
roll
imul
mov
xor
cltd
mov
inc
push
mov
outsb
add
cs
sub
jno
lret
mov
pop
inc
and
ficomps
insb
and
aam
mov
popa
and
dec
insb
bound
scas
cmp
inc
mov
sbb
call
out
lds
shlb
loopne
jae,pt
cmp
inc
xchg
sub
dec
outsl
imul
or
xor
or
ret
aam
jmp
or
imul
aad
push
dec
jnp
pop
adc
ds
fwait
insb
data16
out
jl
mov
mov
dec
mov
push
out
rorb
int3
enter
daa
push
lods
stos
movsb
lcall
push
or
mov
push
repz
cwtl
mov
lcall
leave
dec
sarb
xchg
addl
mov
shr
dec
jno
jg
pop
popa
hlt
sub
pop
xor
dec
mov
xchg
rcrl
mov
cmp
mov
test
clc
repz
daa
sub
in
push
pusha
push
jbe
pop
xor
mov
and
push
jb
imul
bnd
pop
or
push
test
pop
test
and
mov
mov
fsub
test
ljmp
pop
fwait
loope
mov
push
outsl
mov
lods
cli
add
shrb
mov
pop
push
mov
frstor
inc
xlat
jno
and
loopne
rcll
sub
rcrb
mov
lahf
pop
pop
in
movsb
bound
sbb
push
mov
push
jp
shll
dec
cltd
iret
imul
or
mov
fstl
mov
out
mov
lock
mov
inc
cmp
add
mov
inc
mov
add
jmp
mov
movsl
sbb
ss
mov
cmp
push
stos
push
cwtl
mov
sub
bound
insl
xchg
jecxz
sub
insl
adc
pop
aas
dec
mov
and
sti
out
jbe
cli
mov
test
loopne
jo
in
outsl
inc
push
aaa
mov
scas
pop
test
sub
sbbb
test
rcl
ror
lea
daa
pop
pop
es
and
add
mov
pushf
jno
loop
clc
xor
sub
int3
xchg
pop
inc
shll
mov
jns
cmp
es
push
cld
cmp
push
mov
int3
int
and
pop
daa
cmp
jle,pn
jnp
xor
adc
repz
shlb
mov
out
movsl
xor
jmp
mov
incb
rcrl
in
arpl
pushf
pop
mov
lea
ss
ret
sbb
leave
mov
dec
sahf
je
lret
cmc
sbb
lea
xor
into
mov
or
imul
or
mov
add
notb
mov
movsb
jae
sbb
rcrl
mov
pop
push
rcrl
int
cld
in
call
add
fldenv
jnp
leave
push
lcall
inc
add
adc
shll
clc
gs
sbb
push
jge
sbb
jo
dec
repnz
jp
push
xlat
xchg
fstpl
rcrl
jmp
lds
inc
adc
sub
stos
outsl
dec
in
push
scas
xor
aad
sub
push
jg
je
or
dec
inc
cmp
or
xchg
outsb
pushf
cli
and
jle
lods
xchg
fwait
out
in
cltd
cmc
jp
mov
cmpsb
dec
in
inc
fcmovnb
and
fldl
pusha
addr16
fwait
in
in
out
xchg
lea
in
and
int
in
dec
push
insl
cld
xor
and
in
jne
cmpsl
leave
bound
lock
and
push
add
repz
add
sbb
fstpt
mov
cmp
pop
loopne
out
sti
rclb
sahf
adc
rclb
daa
ja
shl
rcll
adc
outsl
insb
jbe
ror
cmp
hlt
jle
mov
lods
inc
jns
inc
call
and
hlt
mov
cmpsb
cmp
jb
jmp
jnp
mov
mov
aas
and
xchg
jnp
inc
cmpsb
push
scas
scas
icebp
mov
xor
gs
and
das
mov
flds
shlb
test
add
or
dec
fisttpl
call
aaa
inc
cmpsl
inc
por
cltd
adc
std
xor
pushf
jmp
out
fcompp
cli
cwtl
mov
mov
xchg
in
lea
scas
insb
add
mov
clc
cmp
or
test
mov
std
cmc
xchg
fcomps
lods
bnd
icebp
push
cmpsl
aas
cmc
xchg
js
leave
mov
lret
push
cmp
inc
adc
dec
nop
and
nop
mov
dec
int
jg
and
std
shl
sub
mov
leave
add
scas
adc
xor
sub
ret
pop
loope
iret
dec
dec
sub
xor
mov
loope
jnp
xchg
aas
pop
push
push
sub
sbb
dec
xchg
xor
shlb
ds
push
mov
lock
pop
jle
sbb
push
mov
popa
add
mov
jno
in
push
jbe
stos
sub
mov
push
and
and
jae
ret
out
out
loopne
cli
cmpb
xchg
jns
cs
std
decb
push
inc
and
xor
inc
or
cmpsb
dec
mov
mov
idiv
sahf
sub
rcll
ret
push
cmc
jecxz
or
cltd
dec
fistps
addr16
or
sub
and
icebp
sub
jmp
rcrb
stos
cmp
popa
xorb
mov
pop
jns
add
popa
xchg
inc
cmp
call
fadd
icebp
rolb
sbb
push
je
mov
inc
adc
mov
das
push
lret
inc
push
insl
cld
lods
rorb
mov
clc
cmp
movsl
dec
sahf
dec
and
in
sbb
adc
aas
mov
in
and
fstpl
xor
inc
or
repnz
mov
test
iret
sub
jo
les
dec
xor
sbb
repz
adc
fnstenv
sbb
ret
fs
stos
jecxz
xchg
mov
pop
mov
dec
push
and
sub
jns
lea
push
mov
inc
sub
je
stos
and
fisubs
jo
lcall
xlat
sbb
jecxz
jecxz
push
jl
xchg
lods
xlat
lret
mov
dec
sub
enter
and
xor
mov
enter
pop
pop
sbb
sbb
lret
adc
push
pop
stc
in
in
dec
aad
in
icebp
into
adc
cmpsb
pop
sub
push
daa
imul
stos
dec
inc
in
imul
dec
jge
push
ds
testl
movsl
ljmp
dec
sbb
mov
cwtl
data16
sub
push
or
mov
mov
mov
out
movsl
shlb
and
ljmp
xchg
sti
push
and
inc
fstl
cmp
push
xchg
sbb
mulps
jns
shlb
inc
lret
mov
arpl
es
push
shl
dec
xchg
push
cmp
sti
adc
jge
insb
nop
xchg
xor
pop
imul
mov
push
cmp
pop
cs
push
ror
stc
fisubs
adc
push
pop
ss
sbb
push
mov
das
adc
pop
cmc
dec
and
xor
pop
sub
cmp
repz
or
sbb
lds
sub
test
cmpsb
mov
loop
push
rorb
nop
mov
jge
inc
and
repnz
add
xchg
jns
mov
jns
fdivs
pop
mov
pop
sub
add
shl
or
mov
vpmadcsswd
xor
xchg
dec
stos
imul
xor
loopne
popa
xlat
push
inc
int3
push
cmp
adc
ljmp
das
scas
dec
movsl
shlb
rol
cltd
mov
fildll
ljmp
mulb
sbb
jo
repnz
jge
outsl
imul
mov
mov
xchg
addl
mov
push
js
mov
jo
mov
fwait
outsb
sub
sbb
out
jl
rcr
mov
ja
inc
or
bound
cmp
rol
movsl
mov
iret
test
icebp
xchg
xchg
inc
aaa
shrl
in
ds
dec
pop
imulb
sbb
mov
out
sub
pop
rcll
pop
rcrw
pop
inc
sub
mov
cwtl
jecxz
nop
fsubs
dec
ljmp
lock
and
push
dec
dec
mov
icebp
loope
repz
dec
or
leave
inc
repnz
les
loop
out
sahf
cs
ljmp
addr16
and
sub
ret
pop
inc
mov
fisttps
inc
sub
mov
aaa
pop
jge
mov
test
pop
sbb
xor
sub
mov
in
adc
add
adc
fbld
cwtl
dec
sarl
in
mov
scas
mov
dec
push
jae
pop
lea
add
adc
and
imul
icebp
add
jne
fsubs
adc
pop
fsubs
push
lock
or
arpl
adc
div
dec
lret
or
inc
sub
arpl
iret
ja
jo
or
cmp
arpl
push
mov
inc
gs
xor
add
jbe
sahf
adc
lock
sbb
out
imul
daa
bswap
pusha
mov
and
push
std
ja
in
out
daa
les
fsubrl
ret
addr16
ficompl
pop
int3
push
inc
mov
mov
xlat
jno
es
dec
adc
mov
out
sub
not
vcmppd
mov
dec
push
popa
test
mov
std
xchg
loop
jle
clc
sub
or
jp
mov
pusha
inc
into
sub
xor
xor
sub
inc
fnstenv
mov
cmpsl
jecxz
push
push
or
dec
push
xchg
sbb
pushf
and
push
and
popf
jg
int
sbb
inc
cmp
push
mov
lcall
xor
push
adc
pop
xlat
out
lock
cmc
jae
add
es
int
jl
mov
shll
adc
mov
xchg
jge
push
leave
and
cltd
xchg
arpl
out
dec
cmpsb
cmc
dec
aaa
mov
out
jo
lahf
nop
lock
add
or
insb
jnp
aaa
and
and
jl
notl
inc
mov
or
pop
ret
mov
xchg
pop
insl
sti
pop
mov
cld
rolb
pop
xor
lods
xor
pop
sbb
xchg
and
fdiv
jge
stos
shl
arpl
ds
rcrb
or
out
jnp
mov
ficompl
xlat
inc
dec
mov
mov
pop
icebp
xchg
sub
jno
lods
sub
adc
adc
push
ds
fxam
test
push
adc
ret
imul
sub
jmp
jbe
pop
push
lock
mov
in
and
dec
es
sub
ja
push
adc
insb
aas
jno
fsub
addb
push
mov
lahf
fldenv
repnz
and
in
cld
pusha
pop
adc
and
mov
adc
in
jl
pop
out
movnti
pushf
mov
data16
sub
aam
adc
ljmp
aam
mov
inc
xchg
aas
push
mov
rolb
push
adc
div
pminub
out
cmpsb
mov
aaa
sub
mov
xor
rcr
ficompl
dec
ljmp
std
push
imul
pop
rcrl
mov
stos
int3
daa
mov
sub
fnstsw
adc
inc
pushw
test
xorl
std
push
jmp
int3
fdivrl
dec
call
mov
cld
pushf
or
jecxz
in
and
pop
pop
testb
cmp
and
ret
pop
loop
dec
and
and
cmp
shlb
push
daa
lret
fisubrl
dec
jno
clc
fstl
sub
jnp
inc
dec
mulb
xchg
or
cmpsl
mov
mov
push
sub
jg
rorb
out
lds
mov
jo
and
and
test
xor
stos
icebp
dec
stos
mov
js
fstps
fbstp
push
dec
mov
ret
pop
out
lfs
js
fs
popf
js
inc
jg
xor
pop
shll
dec
mov
bound
jno
xlat
in
xchg
adc
or
clc
inc
sub
mov
sub
or
xchg
pop
sbb
dec
test
int3
xchg
mov
jp
in
push
fcmovu
xlat
mov
imulb
imul
xor
push
jo
scas
adc
out
xor
test
mov
cwtl
adc
imul
imul
xor
rolb
leave
jno
inc
xchg
xchg
or
add
cmp
inc
loopne
stos
ror
loopne
test
dec
mov
xchg
add
fimuls
mov
mov
adc
push
data16
into
cmpsb
sahf
xchg
sub
fs
pop
inc
xor
adcb
and
inc
pop
mov
mov
mov
mov
lcall
psubsw
ss
add
mov
mov
add
fisttpll
mov
push
jle
mov
push
mov
hlt
sub
gs
jb
stos
stos
mov
mov
push
mov
outsl
shrb
outsb
and
cld
push
pop
icebp
mov
pop
sub
in
dec
sub
cli
cmp
dec
dec
mov
adc
add
lret
jno
dec
push
mov
pop
xor
cmp
aaa
inc
push
mov
mov
scas
dec
aas
out
test
inc
sub
aas
jbe
pusha
jl
push
or
sub
xchg
add
sbb
and
cmp
imul
xor
in
xor
bound
movsl
lcall
or
in
mov
cmp
mov
outsb
aas
bnd
adc
add
sbbb
push
mov
pop
jl
stc
pushf
add
std
addr16
sub
pushf
out
push
pop
sbb
mov
loope
pop
cmp
not
shll
pushf
or
fwait
das
jno
pop
mov
call
es
cmc
call
shl
inc
notl
fsts
je
sti
ljmp
insl
data16
jns
mov
adc
push
popf
cmp
cmp
or
fnsave
mov
or
xchg
mov
repnz
repz
or
mov
out
sahf
add
pushf
imul
xchg
cs
pop
clc
idivb
sub
or
add
inc
cld
aas
ret
pop
loop
movsb
fcoms
jp
push
mov
mov
and
or
sub
mov
andps
push
inc
jae
repz
push
push
push
dec
push
imul
xchg
mov
shrl
rolb
mov
add
loope
cmpsl
jb
aad
xor
inc
push
cli
mul
push
int3
xchg
push
scas
or
cmp
inc
mov
or
loop
sbb
jp
sub
or
popf
fstpt
outsl
xchg
lods
mov
ss
into
lds
xor
mov
cmp
cmp
sbb
mov
or
sub
lcall
incb
add
ret
xor
jnp
cs
fistps
loopne
add
or
cmp
les
xlat
imul
or
movsl
leave
data16
push
and
sbb
add
mov
arpl
fwait
ljmp
push
lcall
stos
lock
in
xchg
xchg
mov
decl
add
cwtl
inc
aam
mov
test
adc
pop
lcall
sarl
rcrl
sahf
aaa
xchg
xor
js
into
enter
sub
js
and
mov
mov
popf
xor
jae
xor
jp
jecxz
or
jecxz
fldl
nop
scas
cmp
adc
mov
push
adc
push
in
cltd
or
xchg
cli
iret
hlt
xor
stos
out
jb
xchg
js
aam
cmpsl
imul
cmpsl
out
jmp
fisubs
icebp
mov
or
pop
inc
mov
push
scas
std
jp
and
cmp
and
lock
dec
aaa
pop
jecxz
dec
mov
pop
sbb
iret
leave
stos
sbb
xor
xchg
adc
cmc
repnz
repz
mov
out
out
mov
inc
ret
rcr
mov
xchg
bound
std
lods
in
xor
bound
or
adc
pop
cmpsl
xor
daa
clc
negb
cmpsl
add
mov
cmp
and
fldenv
mov
lret
xchg
daa
bound
adc
xor
outsb
loop
mov
sub
pushf
sbbb
iret
data16
repnz
push
mov
sahf
xchg
dec
cmp
ja
xor
pop
dec
aam
or
xchg
imul
xor
inc
mov
or
mov
test
hlt
outsl
dec
enter
pushl
loope
xor
xchg
push
jecxz
arpl
sahf
repnz
dec
lds
in
dec
add
sbb
bound
lahf
jbe
xlat
movsb
aam
cli
xchg
pop
add
mov
jmp
push
jge
insl
sbb
call
clc
stos
pushf
dec
jns
mov
mov
mov
inc
cmp
adc
ljmp
push
loop
repnz
lods
jae
inc
mov
lods
sbb
xchg
mov
movsl
sbb
cmp
and
jg
mov
add
adc
movsl
outsl
or
or
lret
xchg
adc
je
inc
xchg
and
cmp
ljmp
lods
mov
shlb
lds
and
cmp
cld
aaa
push
fwait
addb
fisubl
rcrl
cmp
daa
push
push
addr16
sti
enter
mov
pop
push
shrb
or
mov
das
enter
push
adc
push
xchg
fnstsw
in
addr16
pop
imul
jle
fdivrs
test
je
cwtl
push
mov
fisttpll
jae
negb
in
popa
mov
sti
push
dec
cwtl
and
push
push
lahf
cmp
sbb
mov
mov
lds
jno
inc
jbe
mov
test
and
lods
repnz
jb
aaa
sub
add
shlb
imul
outsb
out
jae
shll
cmc
inc
lods
int
in
cmpsl
into
mov
xchg
aam
jne
outsl
imul
shl
fwait
repnz
dec
ret
adc
int3
xlat
xchg
daa
sbb
or
adc
xchg
fdiv
iret
jecxz
mov
das
or
je
hlt
loope
dec
jmp
cmp
sub
push
push
mov
out
loopne
iret
jmp
inc
pop
shl
adc
jmp
mov
jne
pop
inc
fnsave
mov
mov
fdivr
stos
dec
add
sub
test
pop
or
sahf
dec
in
mov
in
dec
jp
xchg
cmpsb
lret
sar
aaa
ret
lret
mov
xor
mov
into
sbb
add
sarl
xchg
cltd
repnz
ss
push
cli
mov
gs
dec
pop
mov
sub
pop
nop
sbb
dec
rorl
dec
or
lahf
xlat
or
dec
nop
push
pop
cmpsb
les
pop
mov
arpl
in
pusha
icebp
jae
dec
dec
sub
cmp
dec
pop
mov
out
inc
sbb
xchg
xchg
push
pop
adc
jp
sub
pcmpeqd
jo
pop
mov
adc
sbb
hlt
mov
loopne
adc
mov
mov
test
dec
out
pop
mov
scas
adc
popa
mov
aas
int3
push
or
sub
cli
pushf
sbb
out
rcrl
mov
and
xchg
gs
xlat
dec
shrl
add
movsl
ljmp
mov
or
mov
adc
hlt
popa
arpl
lcall
mov
pop
xlat
push
out
jne
xor
push
sbb
or
push
mov
repnz
in
xor
dec
roll
pop
movsl
cltd
jns
or
pushf
push
ds
add
xlat
inc
loopne
cwtl
inc
xchg
test
flds
mov
rorl
ljmp
in
add
and
imul
sub
incl
or
lcall
cmp
push
dec
psubusw
shlb
ret
test
jbe
scas
movsl
andl
cmp
ret
lahf
mulb
inc
sub
lods
and
hlt
jae
jbe
bound
in
ljmp
or
insl
inc
shll
dec
cwtl
dec
xor
pusha
mov
push
lret
sbbl
out
push
and
pop
lock
shl
pop
repz
int3
test
xchg
push
jmp
inc
cli
sbb
mov
push
fdivl
inc
or
les
sub
aad
xor
ljmp
fwait
stc
xorl
and
rclb
cmp
add
mov
loope
dec
push
lcall
mov
scas
dec
nop
imul
jnp
jae
inc
or
xlat
aaa
pop
lcall
push
jns
and
ja
push
fistl
push
cs
stos
ja
fwait
lea
mov
lcall
out
jp
loop
push
push
pop
pmaddwd
dec
outsl
adc
mov
jmp
repnz
add
out
popf
or
lods
sarl
icebp
popf
pop
out
mov
int3
orb
or
lods
mov
mov
jmp
push
idiv
lock
push
jle
mov
rolb
cmpsl
movsl
push
xor
inc
xor
sbb
mov
push
call
adc
push
aad
mov
adc
dec
out
jo
adc
push
mov
sbb
addl
and
fimull
pop
xor
lea
jl
insl
call
in
cli
repnz
fst
pop
into
ret
jo
mov
int
push
jnp,pn
lock
lea
scas
xchg
popf
xor
pushf
out
mov
xchg
cmp
adc
clc
out
mov
andl
out
adcl
int3
lea
jecxz
fimull
cmp
pop
xchg
cmp
aaa
mov
roll
mov
clc
sub
and
jne
and
je
jle
fs
mov
xor
mov
adc
cwtl
sbb
rclb
add
xor
add
loope
jb
fadds
je
sbb
hlt
scas
enter
jle
lods
cs
les
std
in
xchg
test
imul
pop
lds
jne
std
push
jb
into
adc
push
sub
rorb
mov
sbb
fmulp
push
fsubl
scas
jae
movsb
xchg
pushf
addl
pusha
data16
jno
dec
inc
jg
es
push
data16
pop
fs
sub
mov
and
xor
mov
pop
jae
enter
cltd
aam
inc
or
scas
mov
xor
outsl
mov
cwtl
lahf
cwtl
mov
inc
mov
dec
mov
xlat
cmp
or
xlat
test
mov
cmpsl
dec
sti
pop
sub
out
imul
or
in
push
out
bound
les
and
jge
mov
gs
cmpsb
adc
popf
mov
mov
jmp
cli
push
jp
clc
ljmp
hlt
push
dec
dec
push
mov
jmp
int3
daa
int3
mov
shrl
mov
cwtl
push
ss
or
fstpl
add
jne
inc
imulb
xchg
ret
pop
gs
ljmp
mov
jae
mov
neg
xchg
xchg
stc
cmp
mov
inc
xorl
xor
xorb
sub
je
pop
add
sti
push
push
mov
pop
sbb
cltd
les
mov
popa
movsb
push
jnp
jp
sahf
cs
and
inc
and
pushf
xchg
dec
js
mov
dec
xchg
xorl
clc
stc
cmpsl
enter
or
test
dec
movsb
add
lahf
push
pop
adc
cmovge
xor
mov
push
add
in
cmp
cwtl
loopne
xchg
imul
xchg
iret
addr16
mov
movsb
test
sub
bound
jo,pt
mov
xchg
pop
cld
mov
inc
iret
shll
mov
or
jb
mov
pushw
cmp
jle
mov
idiv
lods
out
xor
popf
mov
insb
jae
stos
in
mov
xor
or
xchg
in
dec
cmc
mov
sbb
mov
xor
or
push
aas
inc
xor
jae
jae
xchg
xchg
adc
sub
ss
imul
and
das
jbe
fmuls
jp
lea
jnp
loope
rcrl
bound
scas
mov
sub
shrl
popf
icebp
sub
mov
imul
xchg
scas
fisttpl
pop
push
push
sbb
les
fsts
lock
xchg
xor
mov
xchg
fisttpl
test
push
stos
and
divl
inc
cmp
pop
add
and
pop
femms
mov
les
and
ret
mov
jmp
ficoml
fsubl
sbb
nop
test
or
pop
sub
add
repz
movsl
sub
in
jmp
movsl
jmp
hlt
movsb
sbb
mov
mov
or
hlt
pop
ds
mov
or
mov
or
dec
arpl
push
xor
lods
jnp
mov
cmpl
mov
loop
fiadds
mov
xor
pushf
push
arpl
cmp
mov
test
adc
stos
mov
rolb
cltd
xchg
imul
inc
int
pop
push
and
aad
outsb
sbb
or
cmpsl
push
jg
cmpsl
into
das
and
push
xchg
add
insb
in
js
dec
aas
cld
xlat
sahf
and
sbb
cli
jl
test
ficompl
js
adc
push
mov
inc
ds
add
sbbl
cmp
push
push
mov
stos
pop
cmp
sbb
inc
jmp
arpl
sbb
imul
or
mov
or
loopne
in
lods
lea
jne
inc
pop
pop
icebp
inc
dec
xchg
fwait
inc
les
mov
mov
dec
sbb
mov
enter
dec
imul
jno
into
adc
xchg
inc
sbb
and
inc
sbb
fsubl
shll
sbb
mov
fists
lcall
and
pusha
inc
faddp
fs
loop
popf
mov
out
jne
adc
and
inc
jecxz
pop
push
sub
mul
cwtl
and
hlt
add
and
and
maskmovq
mull
fsubrs
fwait
out
movsb
subb
adc
outsb
test
xor
sbb
mov
fldenv
rcl
push
popa
mov
jmp
push
outsl
and
leave
sbb
sub
jo
push
add
add
mov
cmp
sti
or
inc
pop
cmpl
testl
outsl
mull
outsb
pop
inc
aam
js
decb
push
push
shll
mov
dec
repz
mov
xchg
cld
or
mov
xor
hlt
enter
in
or
jp
sub
or
jecxz
mov
mov
and
sbb
mov
and
jecxz
dec
xor
dec
pop
leave
inc
cltd
incl
cmp
xchg
jno
popa
xor
push
cmp
cmpsl
mov
pop
sbb
add
in
mov
mov
sahf
mov
pop
aaa
es
mov
std
mov
js
cmp
push
lcall
sub
or
cmp
push
call
cld
inc
fwait
lret
mov
mov
inc
cmp
andb
mov
enter
mov
popl
add
pop
insl
fbld
mov
adc
pop
lahf
fs
flds
dec
sbb
not
data16
sbb
repnz
lahf
mov
pop
xchg
fsubl
push
mov
test
lcall
addr16
or
mov
bound
das
cwtl
adc
icebp
push
aad
fidivrl
rclb
inc
add
xchg
adc
push
dec
lods
push
cmc
pop
ljmp
movsl
jl
jl
xchg
inc
push
push
cmp
mov
loopne
pop
pop
jle
dec
loopne
add
dec
std
fcoms
mov
push
fisubrs
outsb
add
mov
insb
nop
dec
xchg
mov
call
mov
sbb
jnp
data16
aas
inc
dec
add
cmpsl
insb
popf
xchg
pop
xor
jp
push
out
imul
mov
out
shrl
pop
or
pop
mov
test
lea
aad
ret
in
shlb
aam
rcrb
loopne
addb
ljmp
cli
push
dec
lods
add
jae
dec
jbe
cmp
xchg
mov
mov
out
inc
adc
or
cld
aam
or
inc
ljmp
dec
neg
loope
out
subl
fwait
arpl
xchg
stc
loope
sbb
add
insl
fstps
inc
repz
hlt
insb
test
cltd
pop
clc
mov
xor
pop
adcb
scas
add
in
sbb
sbb
jnp
outsl
stos
cmc
inc
xor
and
mov
shll
pusha
mov
sub
inc
aad
push
ja
out
sti
cmp
jecxz
jg
xchg
pop
popa
repnz
shrb
jl
pop
xchg
lcall
push
inc
mov
xchg
mov
jmp
rorl
cmp
cmpsb
mov
fldenv
scas
shrb
mov
push
jns
sbb
xor
lds
jb
adc
jbe
xchg
jl
cld
pop
jns
pop
sub
mov
adc
test
mov
add
cmp
jl
add
push
int3
lods
aad
xchg
aas
push
les
loop
popa
push
jno
repz
pop
and
push
je
rolb
xchg
stos
mov
out
mov
iret
jge
lahf
inc
mov
ret
cmp
adc
in
insb
cmp
dec
add
lods
ret
inc
and
cltd
stos
jo
xchg
shr
mov
pop
push
movsb
rcr
imul
jnp
shlb
and
mov
rcrl
sbb
add
jecxz
dec
out
add
jns
cmp
adc
loopne
mov
push
sbb
outsl
sti
and
pop
lock
pop
icebp
mov
jmp
gs
outsb
lret
rcrb
bound
repz
mov
and
push
lea
dec
xor
push
mov
int3
fimull
test
out
jbe
mov
lret
lahf
xor
push
inc
dec
inc
leave
andl
jle
or
lcall
adc
lret
pop
bound
cmp
std
mov
loope
cmpsl
sub
cmp
cmp
xlat
sbb
fs
aad
push
jl
mov
or
decb
jo
sub
cld
sbb
in
loope
std
rolb
movsl
data16
cwtl
adc
das
and
and
cmp
push
adc
imull
shrb
stos
jbe
inc
jmp
add
aam
add
and
dec
and
push
pop
js
mov
jbe
mov
push
pop
sub
or
or
pop
orb
stos
xchg
lods
iret
sub
int
es
lcall
test
push
mov
mov
xchg
xchg
cs
and
clc
stos
lock
loopne
loopne
push
xor
jb
inc
xor
mov
jl
cld
sub
mov
ljmp
mov
mov
add
dec
add
inc
jle
sub
movsb
sub
je
push
loopne
les
push
inc
adc
jmp
sahf
fsubs
aas
and
mov
mov
push
adc
lret
jnp
mov
dec
push
push
push
pop
cmp
sbb
or
mov
adc
jmp
loop
mov
jmp
ja
popf
fwait
push
mov
pop
addr16
sete
push
inc
in
out
out
xchg
int
mov
daa
movsb
lods
adcl
rcrb
add
sti
sbb
pop
pusha
pop
fwait
cmp
rcrb
dec
loopne
mov
in
xor
sbb
xor
xchg
sub
mov
sbbb
push
push
xchg
fadd
ss
popf
add
xchg
push
int
shll
push
roll
sub
push
sarb
std
out
popa
xlat
bound
mov
jp
in
bound
push
je
dec
into
xchg
in
xchg
mov
jne
xor
in
push
dec
mov
xchg
es
outsb
pop
lods
int3
mov
xor
push
jp
idivb
cmpl
push
call
dec
adc
out
sbb
leave
push
std
sbb
push
dec
pop
or
inc
int3
aad
shlb
cmp
aaa
push
dec
mov
je
stc
mov
dec
arpl
mov
pop
adc
xor
in
pop
dec
cld
popa
pop
popf
nop
cmp
jbe
repnz
les
push
addb
aas
mov
pop
jne
pop
pop
adc
shlb
icebp
pop
add
sub
inc
xor
add
daa
mov
aad
imul
pop
movsl
cmp
ficoms
clc
xlat
insl
jae
loope
jnp
fidivrl
or
cmpsl
mov
int
shl
mov
mov
sahf
mov
push
xchg
push
nop
adc
lods
sbb
dec
jb
mov
mov
xchg
pop
in
add
add
enter
idivl
fs
shl
sbb
lahf
fwait
jnp
jl
add
dec
ret
sub
sub
pop
mov
dec
loopne
push
test
pop
sarl
jle
daa
adc
in
hlt
repnz
loop
pop
xchg
das
data16
mov
out
insb
inc
add
sbb
or
xchg
adc
xchg
pop
sub
adc
adcb
fcomps
je
xchg
cli
fstps
adc
arpl
bswap
andb
sbb
and
insb
mov
call
push
js,pt
das
sub
pop
pop
mov
sub
rorl
jno
xchg
xchg
push
push
lahf
jmp
mov
insb
sbb
jg
mov
rolb
insl
stc
add
lcall
dec
jne
and
pop
push
outsb
mov
sub
enter
pop
cmpsb
cmp
test
push
sbb
push
stos
notb
ds
sarb
andl
and
stc
outsb
fisttpll
xchg
hlt
insb
jno
pop
addr16
into
imul
ljmp
imul
or
jnp
cmc
mov
fisubs
pop
xor
dec
sub
aas
mov
frstor
jae,pt
daa
xor
pop
sub
js
cltd
sub
or
jge
arpl
sbb
mov
dec
fnsave
sbb
push
inc
imul
xor
in
xorb
or
pop
adc
out
pop
jmp
div
out
fwait
inc
in
stos
lods
sub
in
das
ljmp
fisttpl
push
stos
jmp
rorb
or
mov
cmpb
sbbb
dec
mulb
shll
out
cwtl
rclb
add
dec
add
cmpsb
jge
xchg
roll
cli
in
leave
idivb
sbb
testb
lahf
popf
cld
mov
rclb
fidivrl
add
test
movsl
xor
mov
and
and
sets
lock
mov
mov
dec
mov
add
dec
shlb
aaa
je
int3
shl
int3
movsb
inc
clc
mov
jmp
adc
or
adc
mov
and
das
gs
sahf
sti
std
xor
mov
sub
in
test
dec
push
dec
push
popa
or
mov
push
out
lret
adc
mov
popf
pop
mov
pop
push
inc
and
test
scas
push
addr16
scas
daa
pop
jg
jne
sbb
cmp
or
popf
or
sbb
push
xor
mov
jo
add
cmpsb
sar
decb
sahf
or
xchg
add
ja
repz
jmp
mov
es
fildl
int3
mov
into
stos
mov
call
jns
or
jle
and
adc
push
pop
int
pop
add
xor
mov
xlat
int
cmpsl
call
cld
loopne
and
cmp
pop
dec
adc
xor
cmp
pop
shl
rcrb
mov
pop
sub
in
or
je
fsub
and
xor
es
sti
lret
repz
sbb
push
les
mov
daa
js
aas
cltd
sbb
lea
fisubrs
movsl
sub
pusha
xchg
jnp
fmulp
int3
sub
mov
or
mov
das
sbb
jae
repz
repz
movb
or
fwait
popa
stc
push
adc
dec
pop
sbb
mov
mov
jb
aas
jno
pop
pop
jge
cmpsl
mov
mov
cmpsl
cld
mov
hlt
outsb
jg
flds
pop
pop
mov
xor
outsl
shrb
testb
jns
mov
out
aas
pushf
or
dec
rorb
daa
push
pop
jno
push
movsl
adc
int
dec
mov
lret
cwtl
sbb
aam
cmp
and
or
mov
scas
js
inc
pop
leave
clc
lret
pushf
xchg
insl
lods
add
lods
nop
stc
aas
call
dec
loopne
mov
sub
in
and
pop
lret
rol
adc
ja
add
icebp
stos
and
test
or
lock
and
cld
lahf
test
or
xor
push
mov
es
inc
sub
int3
cmp
test
dec
jg
fisttpll
mov
stos
les
pop
or
push
adc
mov
sbb
cmp
mov
mov
std
fdivr
in
mov
mov
test
xor
out
xchg
fdivl
jl
test
test
sub
cmp
sub
cmp
std
dec
sub
rcll
mov
jnp
inc
cs
adc
pop
push
in
fstpt
or
cmp
xchg
cli
mov
imul
jnp
dec
lds
out
out
ret
scas
lods
in
lds
std
ret
fcomps
sahf
mov
or
or
andl
pop
sti
cmpsb
ret
lcall
inc
lret
push
cmpsb
test
jno
movsl
mov
repz
push
icebp
jne
add
ljmp
dec
lahf
lds
push
sti
dec
mov
mov
es
test
xchg
scas
popf
cltd
push
sub
gs
fnstsw
mov
cwtl
fisubrl
enter
cmp
lcall
sbb
pop
bnd
mov
and
in
mov
push
lds
xlat
and
fucomi
bound
xor
push
cmp
out
fstp
insb
sahf
ret
dec
adc
ljmp
inc
or
nop
and
shlb
inc
insb
xchg
test
mov
inc
jbe
sub
out
xchg
test
test
ret
pusha
ja
test
dec
ja
or
mov
lock
push
add
sub
dec
sub
add
fidivrl
adc
clc
in
xchg
inc
push
push
mov
or
loop
push
push
and
loope
iret
push
mov
fisubs
and
push
sbb
cmp
jle
enter
leave
addb
outsl
in
insb
and
jle
xchg
je
mov
and
call
fistpll
pushf
mov
pop
les
repz
mov
xchg
fcomps
fidivrl
sbb
out
ljmp
pusha
mov
aas
xorb
jne
movsb
lock
push
lahf
daa
jns
sbb
cmpsb
cltd
sub
iret
andb
and
repnz
adc
lcall
lcall
cmp
testl
mov
jb
sbb
mov
test
mov
or
nop
test
sub
into
into
or
lock
clc
sub
push
movsl
mov
mov
push
insl
cmp
jne
outsb
cld
fwait
xchg
push
in
jmp
add
mov
addb
cmp
xchg
dec
mov
insb
aad
repz
popf
data16
sub
cmp
out
xchg
pop
adc
cs
in
addr16
lret
call
fidivs
fwait
jge
mov
inc
dec
push
push
cmp
in
sub
lahf
stos
adc
rol
mov
pop
gs
mov
mov
ja
lods
lahf
je
cmp
scas
inc
jo
and
xchg
mov
sbb
imul
fildl
ss
xor
pusha
mov
dec
pop
xchg
add
jl
push
jo
and
fsubrl
xor
dec
sub
adc
or
or
jl
dec
push
push
mov
xchg
out
jge
cmp
ja
and
xor
jmp
imul
jecxz
addps
pushf
inc
imul
rclb
sbb
movsl
add
adc
sub
dec
mov
inc
jo
mov
cmp
fsubrs
arpl
leave
pushf
xor
add
push
out
cmc
add
pop
jmp
in
mov
jb
adc
push
rclb
sub
push
in
fstps
mov
adc
cmp
push
or
and
int3
dec
into
fnstsw
inc
popf
push
mov
push
popa
out
imul
dec
testb
fisttps
cltd
xchg
cwtl
mov
cli
sub
aam
movsb
pop
push
xchg
mov
sub
mov
add
mov
adc
inc
mov
jne
loope
movsb
cmp
cs
sar
out
cmpsl
xchg
cmp
sbb
inc
push
jns
jne
jb
add
cmp
xchg
shrl
xchg
inc
fwait
ret
int
cwtl
cmpsb
push
shll
dec
sub
push
cld
mov
mov
shld
out
cmp
xchg
add
call
jmp
out
inc
inc
in
lahf
or
stc
pop
pop
mov
shll
jmp
test
cmp
cmp
lods
inc
clc
cmp
cmpsl
fidivrs
popf
and
push
xchg
shrb
test
push
sub
push
fcmove
ljmp
push
lods
imul
icebp
sub
xchg
ficoml
js
push
fs
mov
test
dec
icebp
inc
testb
pop
or
lret
test
xchg
loopne
adc
decb
mov
addr16
fwait
or
aam
in
scas
lret
lahf
stos
inc
hlt
stos
dec
or
aam
repnz
flds
mov
in
repz
mov
fadds
cmc
xchg
xor
jne
stos
push
cwtl
ss
stos
mov
outsl
sti
push
dec
daa
leave
jns
and
sub
add
push
inc
adcb
jnp
test
xlat
pop
jecxz
fisttpll
inc
aam
cltd
pop
arpl
mov
cmc
insb
rcrl
pop
imul
bound
test
test
mov
xlat
stc
adc
mov
jle
sbb
imul
imul
pop
jne
in
lock
cld
mov
hlt
add
xor
enter
rorb
adc
sub
aas
push
add
testb
sahf
dec
dec
adc
mov
je
mov
fstps
cmc
ljmp
xor
sub
or
lods
rcrl
daa
sub
lret
cs
xchg
bound
mov
mov
mov
mov
adc
dec
push
cmp
or
push
stc
int3
adcl
je
mov
mov
out
xlat
pop
xor
gs
dec
es
mov
pop
es
pop
mov
add
and
cli
mov
push
lods
cmp
repz
int
xchg
movsl
popf
mul
insl
mov
cs
inc
gs
adc
cmp
into
inc
ret
stos
push
fsubrl
xor
add
dec
adc
sub
cmp
fcmovbe
andb
jl
dec
dec
sbb
xor
pop
fdivl
clc
fsubrs
in
xchg
imul
popa
cmc
mov
jne
inc
call
xor
jg
sub
stc
and
imul
push
add
cmpsb
ficoms
addr16
out
mov
xchg
dec
add
pop
and
lahf
and
adc
or
icebp
jmp
sub
mov
lret
push
lds
sbb
insb
sbb
ja
jo
jmp
mov
push
cmp
add
test
dec
lds
xor
sub
iret
mov
jmp
int
mov
or
jecxz
push
hlt
data16
adc
inc
pushf
cmp
test
out
data16
inc
and
and
push
out
xlat
jg
ret
sbb
insb
loope
mov
mov
and
dec
sub
sti
aam
cltd
push
xor
jmp
nop
inc
and
in
pop
test
sbb
xor
xchg
popa
fs
adc
ret
popa
out
subb
sub
adc
jge
and
dec
sub
clc
mov
enter
fwait
xor
sub
popl
cli
decb
rcrb
dec
outsb
mov
sbb
bnd
mov
xlat
scas
cmpsl
sahf
jecxz
jae
test
or
das
out
imul
jmp
dec
pop
pop
dec
mov
lods
mov
push
and
cmp
xor
out
jle
fldenv
mov
loope
xor
lock
popf
mov
mov
xlat
push
out
jmp
ljmp
gs
push
loopne
adc
fiaddl
out
dec
xchg
mov
jne
xlat
and
fisubrs
stos
push
movsb
pushf
sbb
sub
outsl
dec
cmpl
int
bswap
int
sbb
ss
jmp
or
lock
call
clc
pop
push
and
jo
insb
mov
rcrb
sub
jg
cltd
add
scas
sbb
pop
and
cmpl
pop
sbb
pop
out
sub
mov
mov
cs
ss
xchg
and
push
or
lock
loope
lock
pop
xlat
sbb
addr16
out
mov
sbb
pop
mov
inc
in
gs
jae
inc
pop
add
lcall
lock
xor
in
es
in
faddl
mov
add
rorl
cmp
fdivrl
fiadds
or
mov
hlt
out
fdivrp
xor
movb
jmp
add
xlat
mov
add
pusha
jo
flds
inc
pop
adc
and
lret
jb
pop
or
in
sbb
mov
sbb
sub
mov
popf
jp
pop
das
xlat
hlt
add
jne
sahf
insb
mov
test
add
mov
repnz
fildl
or
cmp
push
call
sub
xchg
hlt
cmpsl
jb
sti
push
aaa
repz
mov
jne
xchg
add
rorb
sub
lret
into
out
xchg
in
xchg
sub
test
data16
iret
jmp
cwtl
mov
dec
lret
mov
cmp
lret
lcall
es
pop
mov
out
test
test
jl
and
mov
cmp
shl
cld
test
arpl
shlb
sub
fmul
xchg
bound
sub
and
inc
push
push
mov
bswap
mov
jne
sub
inc
inc
add
inc
dec
jp
aaa
pop
in
jle
xor
and
dec
out
adc
hlt
pop
jbe
add
xorl
ds
inc
mov
cs
adc
cmpsb
jg
enter
pusha
mov
add
mov
scas
addb
js
dec
arpl
insb
jo
int3
pcmpeqd
jbe
fstl
inc
das
adc
mov
outsl
mov
cmpsl
shlb
mov
adc
nop
negl
adc
rcrl
push
fsub
pop
rol
cltd
push
sub
cwtl
xorb
roll
pop
call
rorb
cmpsl
ss
mov
cwtl
jbe
inc
add
push
xchg
imul
stos
nop
jo
jb
scas
cltd
cmp
and
sbb
sub
daa
fldt
jae
push
inc
cmpsl
mov
mov
leave
pcmpgtb
rorb
outsb
movsb
xlat
mov
in
ret
xchg
enter
not
aam
hlt
sar
inc
mov
add
xchg
jg
fcompl
fistl
add
mov
mov
lret
rcll
pop
movsl
ret
enter
xchg
xchg
sarb
std
roll
adc
jb
leave
jmp
lahf
pop
mov
pop
popa
xor
xor
sti
jl
add
lods
rolb
int
adc
cmpsd
dec
icebp
jne
roll
adc
jno
mov
lahf
cmp
push
lret
mov
xchg
jbe,pn
pop
idivb
mov
pop
push
aas
mov
inc
in
loopne
gs
leave
xchg
push
or
mov
pusha
jo
and
es
aaa
adc
fists
imul
push
call
icebp
sbb
lcall
repz
adc
insl
icebp
sub
cld
sbb
add
fxtract
in
test
mov
aas
lea
hlt
rclb
xor
rorl
lahf
mov
cli
mov
adcl
xchg
inc
dec
jae
mov
xchg
stos
pop
or
aad
jge
cld
add
mov
out
mov
stos
pop
xchg
pop
mov
jecxz
sbb
shrb
mov
cli
jmp
pop
clc
mov
dec
mov
mov
dec
mov
add
addr16
lods
das
cmp
ficompl
cs
testb
mov
sub
cltd
in
and
mov
xchg
out
fistpll
xor
or
stc
or
jecxz
jns
enter
aam
inc
scas
jecxz
mov
dec
dec
hlt
cmpb
sub
dec
sbb
inc
and
pop
lock
cltd
dec
test
iret
mov
int
stc
out
jg
popf
add
cmp
sbb
nop
fistps
or
repnz
xlat
fldt
cli
shr
mov
movsb
dec
vmwrite
adc
fsubl
inc
lcall
fcomp
fsubl
outsl
xor
sbb
in
xchg
dec
mov
mov
div
xchg
lods
mov
shrb
or
jo
cmp
ss
mov
sti
push
xor
subb
or
sub
stc
push
shll
pop
fldl
pushf
stos
mov
repnz
xchg
xchg
sub
mov
sub
jmp
aas
iret
adcl
repz
out
popf
xor
cmpsb
insl
sub
mov
inc
xchg
loop
xchg
ret
lahf
pop
and
lret
push
aad
xchg
in
cmc
cwtl
sbb
and
inc
jno
test
mov
or
rcll
sbb
clc
push
and
sti
pop
out
jmp
sbb
cmp
fildll
rolb
dec
addb
mov
sub
xor
leave
popf
and
mov
adc
or
cltd
push
inc
es
push
sti
and
mov
cmc
pop
dec
fucomi
inc
adc
pop
movsl
pusha
cwtl
inc
lret
push
repnz
jns
push
and
adc
sbb
pushf
divb
orl
sub
and
fstpt
sub
movsb
xor
and
icebp
mov
sarb
xchg
test
add
lret
push
cld
cli
mov
cltd
out
inc
pushl
sbb
push
pop
xlat
pop
cld
addr16
jns
jg
mov
test
jge
popf
aaa
mov
pop
and
nop
pop
dec
mov
cmp
mov
test
shrl
flds
enter
es
xchg
cltd
xlat
push
or
push
out
test
idivl
and
insb
test
fs
out
jp
lods
stc
xor
mov
cwtl
fidivrs
mov
adc
stc
jne
in
outsl
adc
cli
shlb
call
mov
paddsw
loopne
jle
cmpsb
sub
call
es
add
fwait
dec
push
aam
hlt
in
sahf
dec
repnz
data16
ret
fwait
in
mov
addl
minps
js
fwait
sbb
mov
adc
inc
pop
int3
jl
cli
lea
push
mov
mov
pop
mov
dec
iret
mov
lods
fsubs
sbb
rorl
popf
mov
repnz
cli
rclb
pop
mov
pop
popa
rcrb
mov
fwait
ss
cmc
adc
mov
scas
loopne
mov
inc
je
mov
xor
imul
sbb
sbbb
xor
dec
lcall
fistps
pushf
inc
and
or
mov
int3
and
xlat
jns
xchg
mov
rclb
out
mov
pop
gs
add
or
mov
aad
jp
lret
jp
arpl
out
int3
jle
hlt
add
shrb
push
pop
loop
fcoms
push
cmpsb
add
mov
stos
test
fcomps
jge
and
js
jnp
pop
in
cmp
movsb
mov
movsb
vorps
outsl
in
push
stc
lods
and
jno
sbb
sub
or
add
ror
outsl
sbb
pop
or
push
add
adc
mov
and
in
shrb
imul
bnd
je
adc
gs
xor
repz
orb
lcall
ret
cmpsl
shlb
in
leave
imul
inc
mov
and
or
jnp
jp
jecxz
jp
ss
ret
test
hlt
jbe
imulb
cmp
adc
lret
pushf
popa
jmp
test
mov
sub
inc
inc
jl
out
inc
std
ja
inc
shlb
lods
inc
pop
stc
pushf
xchg
cs
and
or
mov
stc
icebp
xchg
mov
mov
inc
push
sub
sub
add
mov
cli
fisttpl
adc
mov
and
cmp
subl
rcrl
push
fwait
mov
scas
enter
and
loopne
pop
push
pop
aaa
sub
jbe
in
cmpsb
mov
loopnew
jno
sarl
and
fwait
fs
mov
mov
movsb
fcomp
xor
mov
cli
mov
scas
sti
and
lea
cmc
daa
jecxz
xor
cmpsl
inc
aaa
sti
adc
scas
mov
lods
xchg
push
outsb
or
inc
sarl
fsts
lret
movl
stc
or
xor
test
mov
and
push
scas
and
les
loop
sub
leave
cmpsb
movsb
faddl
xor
and
rcrb
addl
clc
xchg
clc
add
repz
lret
inc
mov
jne
lea
mov
idivl
push
jmp
fmul
mov
pusha
push
fsubp
or
cld
cmp
jp
int
loop
mov
js
xchg
daa
dec
movb
push
add
stos
adc
les
and
mov
push
push
cld
mov
imul
int3
sarb
hlt
dec
dec
mov
dec
push
daa
jecxz
or
push
out
jg
jl
mov
in
sub
adc
data16
cmp
iret
mov
arpl
clc
dec
mov
repz
aam
push
push
inc
cltd
std
roll
pop
orb
int3
lods
jb
lcall
leave
mov
or
shrl
test
loopne
iret
add
push
push
add
sbb
popf
cmp
mov
sub
std
daa
lea
addr16
dec
mov
in
jnp
cmc
aad
pushl
cwtl
int3
imul
jg
inc
loope
lahf
push
inc
sbb
cs
xchg
sub
push
xchg
out
js
fisttpll
sbb
push
out
add
sbb
movsb
dec
xchg
es
xchg
fcompl
jp
push
dec
jmp
stos
cmpsb
pop
jecxz
pop
adc
xchg
in
dec
fisubs
add
xchg
xchg
mov
stc
lea
jnp
ja
inc
xchg
jno
lcall
xchg
lcall
adc
jle
adc
pop
movsl
aam
lods
and
xlat
jo
scas
xchg
mov
test
sub
les
or
or
fst
add
stc
fldl
int
xchg
test
dec
sbb
inc
pop
push
xlat
shrb
jae
pop
scas
inc
sub
sub
out
adc
lods
and
rorl
dec
je
mov
sahf
std
mov
xor
jge
repz
mov
imul
frstor
or
ss
aaa
xchg
xor
mov
aad
mov
xor
cmp
and
cltd
andl
xor
push
or
sub
and
mov
jecxz
lret
loop
outsl
mov
sarb
push
push
inc
das
bound
adc
daa
pop
les
push
and
pop
scas
sub
adc
add
xchg
insl
push
ss
pushf
or
jmp
or
fisubl
add
pop
adc
maxps
xchg
out
es
xor
test
xchg
cs
ljmp
lret
lds
cs
les
jecxz
fnstenv
xlat
ret
cli
ficoml
pop
pop
mov
mov
icebp
pop
cld
pop
mov
or
ljmp
sub
inc
xlat
stc
sahf
mov
or
mov
or
adc
push
xor
mov
jl
or
cli
cmpsb
mov
dec
jmp
in
int3
cltd
test
push
in
out
es
mov
data16
mov
jb
inc
ja
push
adc
push
loopne
sub
fstpt
ja
leave
fimull
xor
mov
pushf
jnp
aas
adc
inc
ljmp
xchg
cmp
cld
cmp
enter
add
pop
loop
pop
cld
mov
jle
mov
mov
les
fbld
loopne
push
cmp
daa
call
adc
test
test
dec
js
mov
cmc
sti
mov
adc
add
push
cmc
mov
jecxz
push
daa
and
push
lock
mov
mov
xchg
aam
mov
push
add
mov
xchg
adc
frstpm(287
sbb
cmp
fwait
or
stos
push
jne
pop
pop
in
push
in
push
or
dec
sbb
or
mov
ss
test
inc
ret
pop
das
mov
mov
adc
mov
nop
sbb
adc
pusha
test
movsl
pop
and
or
int
and
movsb
jae
push
push
iret
iret
loop
mov
stos
mov
xchg
paddsb
inc
loopne
jl
pop
xor
nopl
or
imul
dec
dec
sub
dec
das
jge
cwtl
sub
lods
mov
pop
sahf
movsb
push
sete
jns
clc
aad
outsl
dec
jp
mov
pop
mulb
xchg
sub
ljmp
jmp
adc
mov
push
push
ret
mov
cmpsl
into
negb
xor
and
cmpsl
mov
jb
cmpsb
sub
dec
rorb
mov
push
sbb
mov
and
rorb
push
rcll
loop
jnp
and
cmpsb
xor
xchg
mov
mov
and
adc
out
or
aas
stos
lret
into
xor
adc
gs
inc
sahf
pop
xchg
mov
cltd
je
int3
into
and
inc
adc
and
es
or
mov
stc
sub
adc
xor
mov
push
in
pop
xor
dec
push
jle
or
test
xchg
push
daa
xor
lret
push
shrl
mov
or
mov
sbb
loop
adc
inc
dec
dec
ret
adc
pushf
jge
in
push
or
jae
clc
cmp
jmp
rorb
push
pop
jae
in
imul
movsb
lods
jmp
fdivl
lcall
xchg
inc
test
mov
pop
jo
pop
jl
addb
xchg
mov
lahf
jge
test
jnp
sahf
fsubrl
add
fdivp
cwtl
data16
mov
filds
repz
pop
inc
inc
jno
mov
push
addr16
dec
pop
aam
bound
inc
popa
stos
in
out
dec
in
dec
cmpsl
lret
in
sbb
sbbb
loop
push
fidivs
scas
jae
mov
in
cmpsl
or
jg
mov
xchg
xchg
jmp
fnstenv
sbb
cld
in
lds
mov
fldt
fnstsw
in
jb
stc
add
cmp
push
inc
rcrl
dec
int
out
inc
cld
popf
adc
sub
push
aas
mov
hlt
fs
inc
jg
pop
inc
sbb
push
mov
sti
repnz
cmc
add
and
sbb
mov
sub
ljmp
adc
sub
aam
mov
nop
scas
push
mov
sbb
pop
jg
dec
fstl
xchg
scas
xor
hlt
mov
loope
aas
cmp
das
outsl
mov
in
or
and
or
mov
dec
scas
divb
rorl
loope
lea
stc
mov
aam
jno
push
pop
sub
aam
outsl
mov
xchg
cmp
popf
insl
dec
andl
xchg
out
jo
pop
jo
repz
dec
test
repz
lods
mov
imul
lahf
pop
or
push
jnp
lea
jp
xchg
fmull
mov
lea
cmc
dec
mov
arpl
cmpsb
cmp
arpl
cmpsl
sbb
ljmp
in
js
fmulp
stos
nop
sbb
push
ja
mov
mov
out
lods
lods
xchg
and
mov
dec
jg
jmp
arpl
movsl
sbb
stos
shr
mov
ljmp
es
inc
adc
push
ficompl
push
inc
and
jb
clc
add
lods
mov
fidivs
push
sub
xchg
loopne
in
mov
sub
fstpl
cwtl
nop
cmpsl
test
mov
cmp
jno
dec
push
dec
mov
lds
mov
jl
stos
inc
test
pop
mov
mov
subl
loope
adc
lea
popa
and
fisttpl
mov
jmp
pop
fidivrl
mov
push
aas
fucom
sbb
inc
iret
sar
and
mov
andb
add
lcall
repz
sarl
bound
scas
in
inc
cmp
int3
cmc
adcl
xchg
and
orb
adc
cmpsl
in
test
movsb
movsl
out
arpl
cwtl
jo
arpl
andb
mov
adc
xor
pop
adc
jo
pop
mov
xchg
add
call
lea
sub
rcll
sub
xor
jns
mov
shl
jae
sbb
cmpsl
pop
iret
lods
int3
repnz
aad
push
mov
in
das
sbb
std
lret
lcall
jmp
scas
xor
mov
icebp
sbb
adc
ja
xlat
mov
pop
fs
loope
mov
jnp
aad
adc
mov
es
inc
sti
arpl
or
mul
sbb
stos
cmc
xchg
inc
into
add
jae
lret
or
iret
jb
insl
xchg
adc
mov
cmpsb
xor
nop
pusha
out
testl
scas
mov
mov
fadd
gs
jl
ss
fsubrp
fwait
gs
fldl
jp
inc
push
lods
shll
cmc
or
adc
rcr
cs
lcall
repnz
sarb
push
mov
xor
pop
sbb
push
mov
or
jecxz
push
pop
out
inc
xchg
stos
pop
bound
pop
jnp
or
mov
in
xchg
jl
push
and
fildll
fnstcw
imul
xchg
shll
or
fsubl
stos
or
and
cmp
dec
fwait
push
lds
xchg
pushf
mov
xchg
mov
rorb
fs
dec
xor
push
int3
jp
jns
pusha
subb
push
xor
mov
lcall
call
std
mov
push
das
call
rclb
inc
cmp
enter
xor
imul
or
fbstp
aaa
mov
cmpsb
jns,pt
push
add
fdivrl
in
and
ja
stos
movsb
jo
jnp
mov
fwait
mov
repz
push
lods
cmpsl
add
rclb
push
gs
lods
fwait
aam
lahf
sub
mov
sbb
push
sbb
in
popf
fs
push
sub
scas
lods
andl
sub
mov
ficoms
adc
xchg
xchg
es
fs
insl
fbld
dec
mov
and
xchg
cmp
inc
jns
pop
sbb
mov
call
pop
jbe
cmp
rcrl
cmp
cmovno
adc
shr
repnz
push
adc
adc
repnz
xchg
push
dec
stos
or
fs
enter
adc
push
sbb
push
adcl
dec
call
sbb
pop
jnp
xor
loope
jnp
loopne
inc
js
scas
sahf
mov
outsb
mov
or
xchg
loop
xchg
xor
xor
mov
dec
jo
jmp
jle
mov
ljmp
in
or
ds
movsb
fisttpll
pusha
scas
jnp
les
les
adc
push
rcrl
jl
cmpsl
imul
sub
or
test
or
mov
into
insb
mov
scas
aam
les
pop
dec
add
sar
push
aas
data16
sbb
dec
push
shrl
cs
push
fsts
pop
xchg
gs
mov
inc
or
mov
mov
lods
xchg
iret
lret
and
loope
or
xor
ja
je
fcmove
jo
cli
push
xchg
inc
imul
sbb
mov
adc
rorl
jl
xor
push
push
push
int
mov
xchg
xchg
jp
sbb
adc
xchg
dec
xor
in
adc
lahf
arpl
call
out
cmc
lcall
cmp
cmp
nop
nop
psadbw
imul
and
jns
cmpsl
out
jmp
lods
xchg
leave
inc
fdivp
cmp
xchg
xor
sti
bound
mul
or
hlt
cmp
jmp
mov
call
inc
mulb
jmp
fwait
dec
pop
movsb
in
jb
popa
adc
add
add
mov
cld
dec
xor
shrl
mov
cld
dec
fisttps
jae
daa
stc
insb
outsl
ds
cltd
in
in
dec
stc
enter
pop
jbe
inc
jnp
repnz
cmp
into
xlat
ficoml
pop
jl
in
aam
stc
xchg
fisubrs
adc
out
ret
stos
jmp
aas
dec
push
push
mov
ljmp
fildl
aaa
scas
sub
mov
in
pusha
sbb
mov
sub
or
loope
jg
or
std
loop
scas
pop
adc
mov
insb
mov
pop
movsb
xlat
testb
pop
int
fs
mov
hlt
subb
rorl
in
cmpsl
loopne
inc
andb
into
push
sbbl
js
pop
inc
push
out
adc
mov
inc
ljmp
fsub
cmpsb
fistps
ret
mov
adc
cmpsb
push
into
push
mov
xchg
inc
rcrb
add
pop
lds
add
ds
jne
jo
sbb
xchg
inc
in
and
jns
mov
in
loope
jmp
jp
mov
int3
and
sub
lret
adc
loop
ss
cltd
push
shll
push
mov
ja
fildll
jecxz
add
sub
xorb
insb
mov
filds
mov
loopne
jmp
mov
cmp
sbb
sbb
ret
mov
jne
insb
mov
and
mov
fdivr
inc
add
mov
insl
mov
adc
inc
mov
lret
cmp
adc
push
mov
jmp
insl
mov
sahf
and
mov
jle
stos
in
daa
sbb
push
xorb
dec
mov
stc
sub
mov
lret
inc
scas
jge
leave
inc
out
jp
mov
push
shll
lock
test
enter
pop
dec
fxch
loope
leave
sub
jne
mov
sbb
pop
mov
cmc
adc
repz
fs
or
fiaddl
mov
xlat
std
mov
mov
arpl
inc
sub
loope
or
shll
shll
cmpsb
sub
dec
loop
xor
jecxz
adc
add
and
mov
in
dec
mov
xchg
jge
xchg
aad
repz
dec
mov
lret
movsl
xchg
loope
mov
jno
lods
xor
iret
xor
je
inc
and
push
aas
or
push
jns
push
xchg
mov
mov
shl
out
out
mov
sub
stc
inc
fnstenv
fsubrl
loope
push
xchg
pop
imull
adc
hlt
xlat
gs
inc
push
or
sti
sbb
adc
dec
loopne
ror
outsl
mov
jl
popf
arpl
aad
outsl
push
ret
shrl
in
cmp
mov
xchg
add
lahf
sub
out
pushf
or
mov
lret
sti
std
daa
je
cmc
jns
mov
out
insb
repnz
shrb
popf
dec
out
sub
cmp
jnp
or
addr16
dec
cmp
hlt
jae
push
les
stos
sub
mov
test
cmpsl
nop
mov
cmp
into
or
jmp
repz
jo
jecxz
adc
sahf
fbstp
int
sar
adc
xchg
stos
jo
mov
pushf
call
cmp
sub
dec
sbbl
adc
lods
fcompp
xchg
addl
mov
pop
xchg
adc
ss
and
daa
hlt
enter
xchg
aam
mov
fadds
adc
gs
push
pop
push
lea
cwtl
aaa
pop
ret
inc
push
outsl
push
fisttpll
mov
sub
mov
or
out
fwait
sub
in
pop
es
jle
cli
lods
iret
xor
push
rclb
cmpsl
inc
dec
inc
iret
cmp
mov
push
sbb
fs
dec
jl
fildll
in
jbe
aas
lahf
outsl
fsts
mov
xchg
stos
aas
mov
xor
jl
ret
in
or
xor
mov
and
mov
js
jno
fiadds
ljmp
mov
or
std
imul
xor
add
pushf
or
dec
push
popf
dec
pop
inc
xchg
jns
iret
lahf
flds
jecxz
jecxz
in
aad
in
les
xor
add
sti
rcll
outsl
adc
mov
test
popa
mov
cmp
xor
fmuls
pusha
shl
test
sbb
or
ret
test
cmp
fmull
jmp
sarl
testl
lcall
pop
cmp
in
mov
mov
mov
pop
mov
inc
stos
mov
cmpsl
stc
push
mov
add
jbe
dec
js
jp
rorb
cld
xor
sbb
subl
xor
xor
pop
xor
frstor
scas
xlat
jge
int3
into
lock
fcompl
and
add
xchg
xchg
pop
push
sub
mov
add
lret
icebp
push
jmp
shll
gs
fisubl
mov
jno
into
jg
and
pop
add
sar
push
fstpl
cmpb
xor
or
out
push
adc
imul
jg
sub
dec
and
repz
ss
out
pop
xchg
pop
push
out
insl
adc
mov
insb
bound
jecxz
jae
jns
scas
clc
mov
adc
ror
roll
push
xchg
xchg
adc
mov
xlat
xchg
lahf
push
test
lods
push
cs
inc
or
jge
fs
lret
dec
or
add
push
mov
mov
mov
xor
gs
mov
xchg
fwait
aad
js
lods
push
stc
mov
nop
in
ret
test
push
fs
lcall
cmp
cli
and
push
repnz
cs
mov
pop
pop
mov
lock
xchg
scas
cmp
push
mov
arpl
out
sub
sbb
mov
test
jecxz
xchg
xchg
dec
inc
fisttpll
pop
popa
xchg
add
mov
adc
cmp
pushf
inc
call
push
jb
add
dec
cwtl
movsl
mov
jg
jmp
pop
fimuls
jo
pushf
or
lods
stos
cld
push
insl
dec
cs
pop
cmp
mov
xor
shrl
push
lahf
mov
adc
jecxz
addr16
or
rorl
ret
xor
bound
pop
addr16
push
adc
lcall
mov
inc
pushw
xor
icebp
mov
inc
popf
pop
fldcw
sbb
push
fistpl
daa
dec
xor
mov
pop
cmp
in
into
les
aaa
popf
push
dec
sbb
xor
fdivr
aas
xor
call
or
sti
into
in
aam
sbb
mov
add
xor
rcrl
test
gs
push
fistpll
add
and
test
cmp
leave
pop
popl
add
xor
inc
xchg
push
sub
cmova
mov
cmpsl
xchg
mov
stc
push
add
mov
arpl
negl
adc
push
sub
pop
daa
adc
fsts
int
pop
lods
xor
test
adc
aas
jo
or
mov
aas
or
mov
pop
shll
imul
test
loop
in
jae
es
lods
jl
push
fistpl
mov
cmp
jno
dec
repnz
xchg
pushl
adc
fstpl
leave
xchg
jle
xchg
xor
sub
cmpsb
xlat
ror
jmp
mov
sarl
jae
mov
sbbb
mull
push
mov
push
pop
mov
in
cmp
push
aas
add
mov
movsb
ja
test
out
bound
ficompl
imull
mov
adc
lds
scas
cmp
mov
dec
cmpsl
and
test
jecxz
xchg
outsb
jne
push
loop
or
cmc
mov
lret
sbb
ja
xchg
xchg
in
aam
mov
mov
mov
imul
aam
mov
add
adc
lods
jmp
adc
mov
pusha
hlt
jne
xchg
fcomps
lahf
mov
mov
and
outsb
jb
jae
mov
inc
cmp
jb
cld
mov
mov
or
andl
imul
inc
nop
std
push
add
aaa
fiaddl
cmpl
out
out
and
out
scas
cltd
and
les
sti
enter
stos
xchg
in
cmc
into
arpl
dec
lock
pop
or
push
inc
loopne
inc
insl
adc
pop
bound
aas
xchg
inc
imul
pop
add
test
icebp
mov
cmp
jbe
or
and
xchg
mov
rcrb
fnstcw
mov
cmpsl
aam
arpl
fwait
add
movsl
jp
test
sub
add
das
shll
lods
or
daa
stos
dec
cwtl
iret
andb
adc
adc
lcall
outsb
adc
mov
fidivrl
adc
sub
js
out
mov
adc
repnz
divb
xor
pusha
and
dec
dec
bound
mov
cmp
mov
mov
push
jp
mov
sbb
mov
pop
inc
rcrl
xor
cmp
jmp
add
push
frstor
hlt
mov
jle
fidivrl
dec
and
xchg
test
fistpl
int3
ds
mov
mov
dec
mov
jg
push
filds
cmpsb
pop
xor
push
mov
add
in
gs
lret
push
lret
sbbl
xchg
and
xor
fbld
dec
cli
xor
add
stos
and
jno
sub
test
ss
mov
int
arpl
pop
lret
out
add
jnp
inc
inc
loop
cmpsl
inc
sbb
sub
xchg
jae
sub
mov
es
cmp
mov
add
leave
int3
adc
xchg
shl
inc
shlb
dec
inc
jg
or
lods
jge
mov
js
pop
lods
fsubl
pusha
adc
jns
inc
jl
testb
mov
dec
inc
dec
pop
fistpl
push
testb
push
das
adc
pop
push
cld
mov
cmp
data16
add
cmp
sahf
cmp
push
inc
mov
and
movsb
std
mov
pop
cmpsb
mov
sbb
add
jns
mov
mov
xchg
jae
push
xchg
lock
call
in
add
pop
mov
clc
outsb
push
add
ljmp
stos
mov
inc
and
aaa
lock
std
insl
and
adc
pop
adc
xchg
hlt
and
adc
inc
sub
add
mov
add
popf
mov
sbb
jo
repnz
xchg
push
jl
repz
or
das
in
pop
pop
xchg
cmp
mov
mov
pop
mov
cli
push
shrl
fdivrs
call
test
dec
xor
test
fldenv
xchg
push
inc
sbb
into
adc
cmpb
and
std
mov
rcrb
ds
lds
aas
cwtl
jecxz
pop
iret
daa
dec
mov
sahf
mov
xchg
sbb
push
or
pop
sbb
and
iret
popf
outsb
cmc
ja
jb
pushf
hlt
lods
pop
xor
incb
shll
inc
nop
es
bnd
fdiv
cmpsb
in
xor
fldl
jl
or
imul
fwait
lds
repnz
xor
aad
xor
sub
jae
mov
cmp
xor
addr16
dec
sbb
and
test
rcrb
jmp
iret
lahf
push
inc
stos
int
or
and
rcrb
in
cmp
dec
mov
push
lahf
cli
mov
pop
or
std
pop
rcr
push
pop
ret
jno
jl
rcl
popa
add
int
sbb
std
data16
loopne
fbld
jbe
cmp
imul
call
dec
push
or
push
push
pop
xchg
dec
mov
lds
adc
andb
pop
stc
sub
adc
push
sub
mov
loope
into
imul
jp
mov
push
iret
pop
xchg
adc
aad
into
fisubs
rcr
xor
xchg
insl
dec
sbb
sbb
push
inc
fwait
push
fistpll
mov
test
adc
xor
nop
jae
dec
push
rcrl
cmpsl
dec
cmp
adc
jne
dec
adc
pop
int3
gs
cmpsb
mov
add
push
fs
fiaddl
les
dec
jl
push
adc
lret
sbb
inc
ljmp
icebp
loopne
lea
mov
rcrl
push
inc
dec
aad
pop
jnp
mov
aam
dec
or
aad
xor
pop
or
ds
adc
push
inc
ret
xor
into
stos
leave
push
xor
pop
sbb
sub
adc
pop
sbb
dec
imul
push
movsb
imul
adc
stos
and
cmc
movsb
or
inc
jnp
es
iret
shr
mov
addr16
gs
gs
inc
push
lcall
mov
add
mov
js
je
pop
jns
aas
cmpsb
mov
leave
stos
bound
xchg
pop
dec
pop
adc
xlat
or
mov
mull
sub
xchg
or
lock
cmp
stos
push
xchg
adcb
jge
stos
xchg
adc
lret
lcall
jmp
jle
repnz
xor
frstor
add
out
fsubs
adc
or
jle
xor
pop
xchg
mov
pop
aad
shr
cwtl
adc
xchg
mov
mov
lret
jnp
movsl
or
mov
dec
inc
or
jb
out
adc
insw
dec
and
dec
push
cmpsb
cmpb
dec
sbb
dec
icebp
xchg
std
loope
call
or
movsl
or
inc
and
hlt
notl
test
icebp
pop
add
xor
xor
push
movl
stc
mov
xor
push
scas
and
out
ss
mov
mov
mov
xchg
subl
out
cmp
cwtl
xchg
and
push
in
add
fistpl
je
dec
sub
and
inc
stos
outsl
sub
movsb
lret
cmp
orb
test
movsb
or
mov
push
sub
sarl
rcrl
xor
jp
mov
push
test
fists
int
inc
push
lods
ja
cmp
pusha
pop
push
fwait
dec
push
inc
lock
cmc
mov
icebp
fbstp
or
popa
scas
and
push
inc
dec
lret
int3
out
mov
inc
cli
sbb
negb
pusha
mov
cld
cmp
cmp
jae
mov
xchg
std
mov
ljmp
xlat
popf
lods
jo
enter
mov
or
xchg
in
adc
sahf
popf
lods
push
jg
or
cmp
xchg
in
pop
stos
cmp
jb
bswap
xor
stc
aas
ja
shlb
cmp
pop
jno
cli
sbb
jle
push
cmp
cmp
fiadds
fnsave
test
jg
add
xor
mov
jmp
cmp
cwtl
or
insl
lcall
fidivrl
dec
or
icebp
mov
mov
add
shll
insl
fcompl
inc
jae
pusha
push
xor
or
or
test
ret
or
adc
pop
stc
mov
das
outsl
inc
xchg
lds
add
xor
add
push
test
ret
sbb
out
popf
das
out
data16
pop
jbe
inc
lcall
inc
dec
shll
mov
sub
sbb
scas
inc
add
sti
fbld
xlat
stos
test
xchg
sbb
fcomps
pop
pushf
push
or
dec
call
cltd
mov
and
push
push
jg
into
outsb
pop
jl
cmp
mov
inc
push
out
out
rcrl
or
add
mov
dec
sahf
subl
lods
push
jo
repz
xor
clc
inc
scas
adc
lds
mov
lods
lea
xchg
fmull
xor
sbb
mov
hlt
push
adc
test
inc
mov
jno
sahf
aas
imul
push
xchg
mov
xlat
in
jecxz
sub
cmp
rcll
jnp
ljmp
mov
xchg
fst
loop
mov
std
iret
iret
pop
dec
out
add
xchg
or
sub
cmp
xor
jo
dec
mov
fdivrl
push
inc
popf
loop
cmp
sub
dec
int3
cltd
adc
push
adc
stos
jno
imul
cmp
neg
testb
push
lds
dec
pop
shr
and
aas
fadd
xor
jmp
dec
jg
pop
xchg
nop
lea
mov
inc
lcall
jl
xchg
cmc
arpl
hlt
add
xchg
jmp
sub
add
push
push
lds
test
stc
jb
lods
dec
loop
rcl
pop
jmp
jmp
push
mov
int
dec
inc
arpl
xor
jg
imul
ret
inc
ljmp
rcrb
pushl
pop
cwtl
pop
test
les
aaa
sbb
popf
cmpsl
jmp
sub
sbb
cmp
dec
or
ret
ret
xchg
mov
call
push
pusha
outsb
jne
insl
outsb
call
outsl
mov
cmp
fwait
repnz
pop
lods
mov
inc
pop
add
hlt
fwait
jnp
dec
jno
or
addl
fbld
mov
mov
lret
into
rcll
out
cld
mov
addr16
imulb
add
test
push
cwtl
inc
outsb
es
pop
sub
xchg
mov
cwtl
ljmp
and
loop
cwtl
sahf
adc
stc
mov
inc
and
mov
and
jmp
int
xor
popa
or
imul
mov
cmp
icebp
js
insb
pop
mov
push
dec
nop
out
pop
mov
cmp
and
push
movsl
and
js
in
lds
add
bound
sub
bound
lea
shll
fsubrl
xor
push
sahf
cwtl
xor
xchg
nop
and
js
ret
ss
dec
mov
jmp
addr16
cmp
xor
sbb
sbb
popa
push
adc
fucomi
add
fmull
leave
or
jmp
inc
pop
in
add
lods
out
nop
je
mov
into
fidivrs
shlb
xchg
repz
sub
popf
and
inc
push
cmpsl
jnp
es
fwait
jnp
mov
mov
push
scas
mov
add
sub
std
sbb
xor
lret
sbb
mov
test
lds
sub
lret
stos
pop
jnp
scas
mov
sarb
ja
pop
push
rorb
cmp
out
icebp
in
add
sbb
jmp
xchg
sub
ret
test
adc
pop
pop
shrb
daa
sbb
sub
loop
pop
push
mov
loopne
sbb
mov
xchg
xchg
xchg
jnp
imul
inc
adc
test
jnp
inc
adc
xor
es
sbb
out
cmp
outsb
nop
ljmp
push
lods
sub
add
or
loop
push
pop
mov
mov
push
inc
imul
push
subb
cmp
es
pop
ret
dec
add
pop
imul
loope
jne
test
xor
mov
lret
and
xchg
and
loopne
xor
mov
stos
push
dec
es
out
push
cwtl
mov
sbb
lret
jmp
dec
sub
out
scas
adc
test
pop
fadds
sub
pop
rcrl
adc
fistps
xchg
popf
push
add
jbe
or
imull
mov
lret
int3
cmp
inc
mov
xchg
in
out
mov
mov
dec
sub
pop
js
pop
out
sti
sbb
mov
aad
adc
es
test
add
push
lahf
mov
dec
dec
imull
pop
push
mov
pop
adc
fs
aad
repnz
movsl
adc
adcb
mov
ja
enter
add
mov
cmp
mov
sbb
dec
mov
push
sub
divl
cmpsl
idivl
cmpb
insl
mov
clc
loope
out
pop
iret
shll
fsubr
xchg
cltd
popf
test
mov
cmp
pop
out
cld
decb
mov
sbb
out
sub
pop
adc
mov
jno
sbb
dec
addr16
xor
jno
shl
pop
sub
or
je
sbb
mov
sahf
mov
or
jno
loop
std
cmp
jbe
push
add
mov
bound
js
inc
js
mov
lds
decl
add
cmp
add
push
lahf
inc
fwait
andl
xchg
lret
aaa
subl
mov
push
pop
out
jnp
adc
cwtl
xchg
fdivrl
xabort
or
mov
sbb
repnz
sub
insb
add
add
std
push
jge
xchg
dec
pop
sbb
test
mov
lret
fistl
jmp
sahf
dec
rolb
stc
or
add
push
loope
cltd
add
call
cmp
mov
adc
add
and
cmp
inc
pop
jae
mov
lahf
adc
cmp
push
mov
dec
enter
test
ficoml
inc
sub
mov
aaa
cmpsb
fsubl
push
sbb
cwtl
sbb
sub
movsb
or
js
and
decb
inc
xchg
ja
fwait
mov
cltd
pop
jb
xlat
sbb
test
sub
inc
out
push
jns
call
and
or
pop
jp
aas
cmp
cmp
or
cmp
mov
cmc
fisubl
imul
cmc
pop
sbb
pop
jne
iret
cld
pop
inc
int3
std
enter
sbb
mov
add
adc
sbb
shrb
mov
outsb
pop
push
icebp
bound
fisubrs
fisubs
inc
outsb
add
cmp
in
mov
jo
outsl
adc
aad
dec
or
pop
test
inc
movsb
xor
in
out
jp
push
loope
repnz
push
sub
or
movsl
push
mov
sub
mov
jb
subl
mov
fs
cmpsb
push
adc
int3
test
shl
pop
stos
adc
scas
ds
dec
pop
aam
pop
and
repnz
outsl
xor
fisttps
or
sarb
or
rorl
sti
inc
lcall
out
mov
lods
and
xchg
or
pop
dec
add
or
mov
mov
cltd
scas
fsubrl
mov
adc
outsl
sti
cmp
in
enter
fs
xor
push
aad
leave
mov
pop
adc
test
inc
xor
push
clc
cmp
call
add
jmp
inc
xor
adc
outsl
adcl
xor
rcrl
xchg
test
push
aad
jbe
inc
test
insb
and
push
mov
mov
out
inc
dec
push
adc
and
add
out
lods
fsts
jl
or
in
lods
mov
dec
cltd
mov
xchg
cmp
push
inc
cmpsb
push
pop
push
push
xor
mov
and
or
cmpsl
add
mov
vpcomw
cltd
repz
lahf
adc
mov
es
fcomps
cmp
je
sbb
iret
dec
shll
mov
jo
dec
xchg
scas
lods
sub
and
sbb
nop
in
mov
test
sbb
out
adc
mov
sbb
or
xchg
and
call
jae
test
popa
mov
sub
mov
xchg
or
sub
fisubrs
pop
cli
mov
imul
mov
cltd
pop
adc
pop
ja
loop
int3
jno
scas
lock
aam
mov
xchg
pusha
pop
xchg
icebp
sub
and
loopne
stos
xchg
repz
pop
xor
outsb
std
sbb
xor
jne
dec
dec
loope
roll
sub
push
push
test
outsl
loop
icebp
ss
mov
push
mov
mov
adc
xchg
fwait
sbb
cmp
sahf
imul
push
je
cmp
bswap
jmp
mov
repnz
inc
push
dec
push
dec
das
pop
pop
in
pop
xor
repz
push
cmpsl
pop
push
andb
fiadds
rcll
popa
aas
inc
adc
mov
fstp
mov
sbb
mov
icebp
mov
xchg
mov
xchg
and
arpl
mov
out
mov
jecxz
lret
xorb
pushf
cmp
mov
and
pop
shll
mov
lods
mov
push
and
cmc
inc
repnz
jmp
dec
xor
xchg
push
mov
jg
adc
push
jecxz
popf
sarb
cld
cmpsl
test
lcallw
mov
testl
jg
jl
jns
cmp
into
adc
es
xchg
cmp
jb
mov
mov
and
bound
les
fwait
mov
mov
ds
xor
subb
add
cli
addb
mov
pop
adc
int
mov
sbbb
add
fwait
rcrl
xchg
push
xchg
mov
jmp
pusha
lods
test
out
inc
sbb
shlb
insb
mov
ror
xor
orl
sub
add
sub
dec
js
es
xchg
jecxz
sbb
xor
mov
push
jnp
pop
dec
ret
insb
loopne
xor
out
jae
popf
xchg
push
jno
pop
sbb
push
lahf
xchg
adc
xchg
xor
outsl
push
sub
xchg
aam
sahf
movsb
push
push
fcomi
jg
sub
and
adc
push
in
inc
inc
enter
sbb
stos
lods
out
repz
pop
inc
xor
cmp
sbb
repz
or
test
mov
scas
in
imul
jle
sbb
rorb
sub
aaa
pushl
xchg
in
fsubp
leave
repz
lds
jmp
jb
mov
mov
inc
cltd
addr16
pop
or
jp
jle
add
out
xchg
pop
jl
mov
mov
xlat
fwait
xchg
rcrb
xchg
inc
fcoms
cli
and
stc
ret
lods
sahf
aad
add
inc
mov
adc
out
pop
daa
lret
xchg
mov
repz
add
and
and
rcl
cmpsb
js,pt
push
mov
mov
sub
cbtw
mov
lods
lret
imul
adc
std
stc
cli
arpl
xchg
or
movsl
or
mov
push
inc
pop
or
and
pop
pushf
adc
add
sbb
iret
and
aad
jmp
aas
push
pop
test
sub
xchg
cmp
iret
adc
mov
jmp
sub
outsb
and
movsl
hlt
stc
mov
add
mov
xchg
int
cmp
shlb
aam
fyl2x
push
dec
ja
in
mov
cmp
xor
adc
test
mov
outsb
jno
out
or
and
cld
ret
jmp
inc
pop
lret
sub
dec
test
jmp
test
mov
lahf
add
adc
lock
jl
adc
fwait
hlt
push
xchg
stos
and
xchg
xchg
mov
xor
sbb
cmp
fistl
jns
fidivrl
sub
sarl
addr16
jge
pop
pop
mov
xor
ret
imul
mov
imul
adc
mov
mov
push
jnp
dec
cmp
repz
addr16
cmp
mov
jb
cmp
test
in
xor
out
daa
adc
inc
mov
mov
mov
fsubrs
aaa
inc
jmp
pop
mov
xor
dec
mov
fildll
insl
insb
lods
pop
pop
fldt
push
mov
and
mov
cld
lcall
sti
xor
mov
dec
out
std
sub
xchg
ja
xor
mov
mov
nop
jmp
inc
mov
xor
repnz
fwait
mov
lret
pop
lret
add
mov
lea
ficomps
leave
movsl
dec
jb
fxtract
aam
sub
dec
and
push
std
ds
and
in
pop
sbb
dec
jge
ror
adc
adc
mov
rcr
dec
sub
cwtl
test
repz
inc
cmp
cmp
mov
cmp
sbb
inc
or
inc
sbb
gs
fs
jle
jle
push
xor
adc
inc
sub
sbb
add
fwait
jbe
xor
not
scas
dec
sub
fdivrs
pop
push
sbb
stos
test
fld
daa
or
movsb
inc
jp
push
push
aam
xchg
lret
xchg
aad
dec
pop
loop
mov
add
ljmp
test
push
push
mov
cmp
jo
adc
cwtl
les
mov
push
clc
out
xor
test
jecxz
lock
inc
mov
pushf
and
cmp
jae
lds
daa
dec
gs
int3
xor
mov
stos
jmp
adc
cmpsl
push
inc
sbb
push
and
jmp
and
aam
insb
rep
sub
lret
xchg
cmpsl
sbb
dec
inc
call
aad
in
leave
push
mov
pushf
jo
jne
data16
jl
jne
repz
cld
fdiv
mov
and
push
jno
mov
and
pop
pop
fbstp
test
sub
fsts
imul
ljmp
sbb
imul
pop
xchg
out
les
dec
ret
xor
les
cmp
mov
sbb
or
or
jle
sub
fists
scas
lahf
mov
cmpsl
mov
aaa
jp
cmc
sbb
gs
xchg
push
cmpsl
addr16
sahf
sub
pop
lcall
xorb
add
in
adc
mov
push
scas
sbb
rclb
leave
and
sub
fnsave
int3
jns
add
imul
rorl
pop
mov
out
dec
dec
adc
ficomps
and
sbb
inc
out
lret
hlt
fildl
and
std
mov
push
mov
mov
popa
cmpsb
test
push
lods
cli
out
jecxz
shll
mov
and
sahf
inc
sbb
fidivrl
adc
xor
mov
aad
mov
adcl
out
dec
cmpsb
push
outsb
aam
daa
pop
jo
push
mov
jo
adc
mov
dec
out
gs
inc
orb
rorl
arpl
bnd
scas
fs
jae
and
fstp
arpl
pop
nop
or
clc
sti
popa
mov
psubd
loope
ja
rep
push
iret
ret
cwtl
inc
data16
mov
push
rcrb
mulb
imul
cltd
sbb
lods
inc
jg
mov
lock
inc
pop
std
les
mov
jne
or
aam
mov
add
add
idiv
into
mov
lcall
imul
push
call
mov
adc
cmpsb
dec
push
jg
push
shl
push
add
pop
mov
out
mov
sbb
lds
iret
inc
sbb
jo
jge
sahf
inc
subl
mov
cltd
xor
sahf
push
pop
fdivr
pushl
or
fldt
dec
xor
rcrl
dec
sub
or
int3
lcall
xlat
jnp
cmp
jnp
in
testb
int
pop
leave
lret
arpl
jbe
in
out
sar
cli
into
xchg
sahf
push
mov
cltd
jno
fldl
lcall
cmp
daa
mov
aas
xchg
cmpsb
insl
mov
sub
test
aam
addb
mov
ficoml
adc
call
ds
push
nop
ljmp
jg
mov
dec
jns
lahf
ret
mov
out
lods
js
out
out
sbb
or
ret
cmp
mov
cli
pop
inc
test
push
sahf
cmp
xchg
rcrl
inc
mov
xlat
rcrb
lods
mov
xchg
add
and
jae
adcl
sub
jne
imul
cmpsb
loopne
mov
pushf
test
xor
inc
xor
mov
lods
mov
sbb
lahf
jb
inc
pushf
push
sub
loopne
je
xchg
cli
xor
rcrl
and
mov
std
pop
cmp
aam
cs
sub
pushf
xchg
lret
mov
out
rorl
aas
test
add
xchg
stos
loopne
fbld
outsl
cltd
inc
jp
mov
repz
mov
push
inc
cld
cld
cwtl
cmp
add
mov
cmp
insb
adc
pop
stos
sub
pop
mov
push
push
xchg
fcompl
lret
add
cmpsl
ret
stc
pushf
sbb
add
lds
pop
imul
lods
xor
push
mov
leave
pop
ds
xor
inc
lret
inc
sub
loope
xchg
xchg
cmp
ret
mov
daa
pop
add
pop
or
or
lcall
in
icebp
lahf
cmp
ret
or
das
fnstsw
out
popf
add
xchg
imull
bound
in
xchg
lods
mov
int
mov
cld
call
je
stos
jne
xor
push
out
shll
fcomp
inc
lcall
idivl
jnp
shr
mov
add
xlat
push
mov
push
pop
inc
sti
adc
out
xchg
jmp
mov
scas
test
xor
jp
mov
repnz
push
shll
mov
fisubrl
mov
ret
jne
cli
cmp
jg
insb
popa
ja,pt
pop
leave
mov
js
sti
inc
je
in
data16
mov
icebp
into
ss
sub
xor
arpl
std
insb
ja
icebp
pusha
mov
and
cwtl
addl
pop
js
mov
and
cmpsl
loop
enter
pop
cltd
jne
mov
es
out
add
jbe
jg
ljmp
stc
and
dec
loop
gs
or
or
rolb
mov
sub
int3
das
ljmp
mov
int
or
adc
dec
mov
xor
jbe
ret
insb
orl
jne
enter
jo
movsb
shl
notl
cld
xchg
test
or
or
sar
sub
test
fwait
sub
repz
loope
in
mov
shlb
add
sub
dec
xor
cmp
adc
jecxz
xchg
cld
in
pop
jmp
shlb
and
adc
iret
arpl
pop
icebp
imul
pop
or
enter
xchg
xchg
sbb
es
sbb
cmc
dec
pop
adc
aad
adcl
xor
adc
or
cvtdq2ps
aad
sub
cmp
dec
jg
clc
jle
in
sbbb
roll
fldenv
pop
pusha
mov
push
ret
inc
cs
adc
movsl
xchg
push
adc
cs
imul
sti
sbb
je
mov
mov
pop
push
jmp
mov
jg
and
lea
fnstsw
addr16
mov
pop
push
je
xchg
xchg
ljmp
xchg
enter
or
add
mov
xlat
pop
icebp
scas
xchg
stos
cmp
insb
inc
inc
sbbl
imul
fdivrs
and
pushf
iret
lcall
and
inc
and
pop
push
insl
mov
jns
xchg
push
push
mov
sub
nop
mov
mov
lea
call
hlt
scas
dec
movsb
cld
mov
dec
leave
sbb
or
bound
sbb
dec
dec
jb
addb
std
lahf
jo
pop
pushf
scas
stos
andl
leave
xor
or
mov
out
fwait
leave
outsl
xor
leave
jecxz
xchg
mov
cmp
shll
cmpsl
fst
adc
cmp
jno
jmp
addr16
leave
lds
aas
jbe
imul
cmp
pop
fwait
lret
popf
popa
sub
inc
sub
sbb
xchg
inc
fadds
std
iret
inc
add
inc
test
and
mov
adc
arpl
clc
ss
aas
push
cld
in
ja
out
adc
push
and
inc
cmp
push
xchg
sbb
test
ret
mov
push
add
pusha
in
mov
iret
jmp
or
push
outsb
xor
xor
push
sub
std
mov
iret
jae
add
mov
fs
divb
rcl
frstor
ds
push
loope
xor
leave
test
in
mov
inc
and
xor
int3
mov
or
popa
inc
addr16
insl
daa
dec
fcmovb
add
or
das
cmp
loop
dec
dec
inc
shl
shlb
adc
push
and
lea
add
add
sub
les
adc
out
inc
repnz
in
mov
lahf
nop
add
xchg
dec
outsb
xor
fistps
xor
pop
and
orl
sbb
and
in
clc
cmc
popf
xchg
rcrb
cmpb
sub
jge
das
lock
repz
movsl
sub
pop
xor
xchg
and
or
xchg
loopne
into
adc
sahf
arpl
repz
add
hlt
test
lods
orl
stos
cmp
push
sbb
xor
inc
fs
fcoml
mov
js
adc
mov
mov
mov
sahf
jb
ja
mov
aad
mov
sub
aad
loope
xchg
imul
mov
movl
jno
and
sarb
into
fwait
mov
dec
clc
sub
mov
cmpb
loopne
mov
insl
inc
or
mov
orl
lret
dec
ror
stos
xchg
push
inc
add
push
test
popf
es
jnp
push
nop
es
mov
test
std
jle
stos
xchg
imul
test
sbb
out
lods
push
jne
add
pop
cmc
fistl
loope
jo
lret
sahf
adc
inc
push
adc
test
xor
jbe
sub
imul
xor
ret
subl
iret
xlat
add
xor
dec
inc
mov
mov
or
test
or
mov
push
out
test
inc
add
or
and
xchg
test
adc
stc
sub
insl
popa
loopne
adc
out
dec
mov
jg
aaa
pushf
xor
cmp
jl
jo
aad
mov
clc
push
adc
push
mov
int3
add
arpl
push
mov
repz
xor
jecxz
sub
test
stos
cld
inc
mov
data16
je
cmp
out
adc
dec
xchg
push
mov
bound
fidivs
imul
xor
aas
shll
xchg
push
or
pop
out
adc
loope
dec
repnz
std
pop
cmc
jne
add
mov
fiaddl
jle
xchg
inc
mov
add
jecxz
int3
lret
ds
shlb
dec
xor
ss
push
sbb
xchg
pop
mov
js
out
xor
mov
xchg
sti
shrl
jmp
xchg
pop
repz
push
jb
xor
data16
imul
inc
cmpsb
sbb
stc
in
mov
adc
cmp
rclb
mov
test
popf
dec
cmp
into
jae
stos
mov
fstpl
sahf
mov
outsl
into
jge
cmpsb
push
add
lret
adc
jo
cmp
popa
xor
jecxz
stc
lds
sub
outsl
push
rclb
pop
das
adc
ss
dec
adc
push
lcall
loope
popa
push
std
popa
ja
xlat
gs
inc
out
hlt
jmp
pop
mov
loope
xchg
pusha
xor
dec
fwait
sbb
pusha
fldl
xor
mov
lea
fucomp
pop
jl
xor
imulb
lahf
fwait
mov
push
ret
dec
xor
adc
js
push
jge
add
dec
add
push
push
sub
fidivl
and
shll
jno
add
inc
mov
pop
lret
xchg
repnz
jno
add
cmp
dec
hlt
pushf
inc
clc
mov
xchg
je
sbb
sub
cmp
xchg
nop
movsl
cmpsb
jb
jmp
ja
lock
nop
in
outsl
pop
cltd
inc
bound
sub
insl
aam
xor
pop
data16
cmc
cmpsl
cmc
jb
mov
inc
roll
inc
loope
sahf
sbb
mov
xchg
insl
dec
nop
pop
ficoms
add
xchg
sbb
mov
mov
push
jnp
push
xchg
enter
mov
cmc
in
ljmp
idivl
fistpll
push
pop
cwtl
lea
dec
js
xchg
iret
test
repz
rcll
push
pop
shrb
ret
dec
cmpsl
out
pop
jbe
out
and
out
dec
and
or
and
aas
jno
das
pop
clc
ret
mov
sub
inc
sti
mov
pop
sbb
loopne
movsl
push
fsubr
pop
iret
ss
mov
or
jo
cmp
in
cmp
in
pop
jge
push
shrb
dec
push
push
cld
sub
call
add
adc
jmp
jge
cmp
clc
push
mov
lret
das
in
popa
cmp
and
xor
sub
mov
mov
xchg
pop
leave
imul
jge
mov
jle
imul
or
adc
mov
cmovp
mov
or
fildl
inc
rcrb
inc
and
and
fs
dec
inc
rcll
movsl
mov
leave
xor
data16
mov
pop
addr16
jbe
xchg
xlat
arpl
push
xchg
inc
pusha
ss
pop
rolb
xchg
movsl
iret
cltd
mov
xor
sti
and
dec
iret
and
std
push
scas
inc
cmpsb
in
or
push
iret
xor
and
in
adc
outsl
ljmp
nop
lahf
mov
cmp
or
ret
mov
arpl
lds
push
xor
sbb
repnz
imul
cmc
in
mov
ja
test
loop
pop
lock
enter
mov
push
adc
fimull
nopl
loope
dec
lea
fistpl
movsl
mov
jbe
hlt
enter
test
xchg
pop
inc
nop
add
and
test
shrb
icebp
cltd
cs
pop
lods
gs
out
lds
es
test
sar
add
cmp
lock
cmc
mov
fldenv
mov
faddp
push
cmp
lea
jmp
cwtl
add
popf
aam
sbb
mov
and
into
in
jl
push
jbe
inc
pop
out
or
dec
cmp
mov
xchg
pop
popf
cld
cs
popa
mov
dec
cmp
std
push
fs
lret
push
js
fnstsw
push
mov
adc
add
jmp
loopne
or
push
mov
movups
xchg
cltd
add
adc
test
lret
xlat
rcrb
jne
sub
popf
das
out
mov
std
in
enter
fcoml
out
out
jne
dec
es
dec
pop
push
in
inc
or
std
push
and
jne
push
notb
and
push
and
imulb
addl
cltd
mov
or
inc
jbe
ljmp
jnp
mov
push
xor
sub
inc
pop
xchg
jb
loop
push
dec
imul
mov
sub
xorb
jg
outsb
das
mov
mov
lret
dec
jmp
push
lds
push
jg
jne
push
adc
stos
mov
sbb
mov
sahf
jb
cmpb
push
or
sar
mov
bound
dec
jbe
imul
pushf
or
ja
push
dec
clc
ret
mov
mov
dec
inc
int3
push
cmc
negb
push
mov
lods
sbb
in
shlb
decb
xchg
loope
push
cmpsb
lods
sub
les
or
data16
lret
sub
push
testb
sbb
jnp
cs
mov
mov
xchg
cmpsl
repz
push
cwtl
sub
push
ret
mov
jns
sbb
loop
and
scas
push
call
pop
push
lds
clc
es
leave
leave
sub
lcall
int3
leave
data16
cmp
push
dec
fistps
lock
stos
mov
mov
clc
inc
lret
pop
ljmp
add
inc
mov
test
jb
xlat
fs
adc
js
xlat
jne
enter
and
mov
lcall
dec
repnz
clc
jmp
les
stos
out
mov
cmpsl
fwait
pop
adc
xor
cltd
pop
aas
push
repnz
stos
int
popa
iret
in
in
adc
out
mov
out
stos
and
enter
dec
adc
addr16
mov
sbbl
cmp
fwait
dec
fmuls
inc
pop
addb
pop
push
xchg
add
push
ss
sub
inc
xchg
mov
jecxz
sub
pop
out
adc
popf
scas
sbb
and
or
mov
stc
aas
add
iret
adc
scas
xchg
and
xlat
cs
xchg
pop
test
mov
jle
and
xchg
mov
scas
sbb
lds
jle
dec
test
push
iret
xchg
push
cmp
dec
sbb
pusha
xor
fdivrs
push
jle
ljmp
inc
scas
loop
loopne
mov
adc
test
mov
push
push
mov
js
sbb
adc
sbb
shll
idivl
and
pcmpgtw
push
loopne
sbb
push
or
cmp
addr16
jecxz
add
in
imulb
sbb
je
jbe
xchg
sbb
cmpl
mov
ds
adc
in
imul
repnz
hlt
cwtl
sub
push
clc
mov
dec
lret
push
ret
test
jnp
imul
insl
jae
inc
adc
out
adc
dec
in
ljmp
mov
inc
in
in
jmp
mov
fistpl
or
push
fwait
lcall
xchg
icebp
xchg
imul
or
ret
stc
push
call
and
pop
pmulhw
imul
mov
fsubrp
or
cmp
lret
mov
add
scas
aad
dec
push
shrb
call
xchg
testl
sbb
bound
test
jae
sbb
xchg
xchg
sub
rorb
or
scas
mov
xchg
adc
outsl
orl
mov
cmp
out
les
subl
cltd
mov
adc
int
xor
push
jbe
dec
fnstenv
cmpsb
sbb
fwait
sub
cwtl
shr
pushf
cmp
lock
inc
add
testb
pop
repnz
movsl
ljmp
jle
xchg
xchg
push
mov
inc
push
add
sbb
add
pop
xor
jns
pop
and
movsb
pop
mov
mov
jl
ret
xchg
sbb
in
outsb
xchg
aas
movsl
mov
jecxz
out
xor
stos
jle
sub
sti
xor
leave
lock
xchg
sarl
arpl
mov
or
xchg
jae
xor
push
scas
aas
jle
push
sub
scas
int3
or
sbb
movsl
outsb
push
cmp
mov
pop
mov
loopne
mov
cwtl
xchg
or
stos
add
enter
dec
mov
aas
pop
es
xchg
scas
int
jecxz
pushf
pop
mov
cs
dec
jns
xchg
inc
lock
int3
jnp
out
jo
push
xlat
aad
mov
gs
jne
out
sbb
shlb
cwtl
jmp
jne
dec
dec
xchg
adc
int
arpl
in
imul
push
adc
pop
imul
cmpsl
pop
shlb
mov
xor
out
fwait
fwait
adcb
xchg
or
sub
pop
loope
or
push
stos
push
or
cli
inc
add
imul
sbb
stc
iret
loope
stos
outsl
and
xchg
fwait
dec
and
in
jo
cltd
ljmp
cmp
leave
fisubs
inc
xchg
pop
jno
test
ss
xchg
and
jp
fcmovnu
pop
lods
sar
mul
in
scas
fisttps
sbb
stos
js
push
aaa
push
test
add
cmpsb
in
mov
cli
nop
outsl
fwait
lcall
mov
negl
jbe
xchg
cmc
dec
popf
mov
sub
int3
mov
push
inc
inc
repnz
mov
int3
mov
xorl
stos
xchg
popa
bnd
adc
pop
sti
jecxz
cli
icebp
fcomi
mov
std
inc
push
and
cmp
ds
and
outsl
xchg
cmp
mov
decb
push
int
ja
inc
test
dec
xchg
cmpl
sbb
subl
push
fisubrl
pop
cmp
xchg
or
insb
ja
jecxz
outsb
cmp
lahf
leave
pop
add
cltd
xor
mov
repz
lock
int
push
nop
push
jnp
into
mov
sbb
mulb
sbb
cmpb
fsubrs
push
loop
add
inc
or
push
inc
stc
addr16
and
mov
testb
dec
jns
fldt
sbb
lcall
sub
jmp
xor
fnsave
popa
inc
mov
fistpll
enter
jl
mov
dec
push
dec
mov
pop
sahf
pushf
jns
mov
xor
pop
mov
jecxz
and
add
test
jne
fsubl
stos
sub
mov
dec
aas
cs
pop
sub
add
repz
mov
mov
outsb
ret
loopne
rolb
push
add
repnz
rcll
pushf
lcall
jb
dec
call
nop
mov
inc
mov
int3
xchg
dec
add
sub
cltd
cmpsb
fst
inc
sub
dec
add
push
mov
outsb
rclb
shll
or
or
out
aad
xlat
mov
in
jl
lods
add
xchg
push
mov
mov
ja
rcr
mov
imul
sahf
or
mov
sub
scas
mov
stos
push
dec
mov
loop
push
push
xor
adc
xchg
inc
add
or
inc
and
adc
adc
lret
lea
gs
mov
cld
mov
ss
and
test
pushf
or
cmp
dec
mov
xor
js
mov
xchg
fistpl
repz
push
or
mov
xor
sti
fwait
das
xor
xchg
cmp
add
adc
addr16
shrl
int3
cwtl
push
ret
fldt
jb
lahf
out
gs
mov
loope
or
pop
jbe
mov
jp
imul
cmc
cli
inc
in
std
mov
mov
xor
dec
xchg
mov
test
push
pop
jge
stos
das
mov
test
bound
stos
cmpsl
incb
xor
test
mov
faddl
mov
sbb
adc
repnz
scas
in
aad
inc
xor
ret
movsl
and
mov
push
cld
mov
pop
pop
movsb
push
adc
cmp
mov
ja
jl
notb
jle
lods
pop
mov
push
sub
xlat
add
shlb
push
xor
pop
jno
mov
enter
dec
adc
xchg
cmp
scas
cmc
pop
shll
add
sbb
dec
xor
aad
add
sbb
mov
jb
out
test
lds
ror
pushf
jb
mov
cmp
in
mov
xchg
outsl
mov
or
lea
push
mov
push
popf
xchg
test
mov
loope
pop
aad
lods
mov
push
mov
fldl
xchg
pop
mov
sbb
jmp
mov
adc
in
repnz
push
rolb
ljmp
adc
pop
fmul
frstor
sti
xchg
enter
and
enter
stc
out
iret
fimull
dec
mov
jecxz
loopne
loopne
bound
lahf
adcl
fildll
inc
cld
scas
in
scas
cmp
dec
andb
mov
rolb
pop
cmova
push
mov
push
mov
aam
call
arpl
or
jb
stc
xor
icebp
xlat
fs
in
sti
imul
xor
ret
clc
fnstenv
jp
mov
mov
pop
hlt
push
idiv
aaa
int3
mov
xchg
add
movb
pop
repnz
test
ss
dec
xchg
movsl
mov
sub
ror
cmp
in
loope
loop
push
push
in
ret
jmp
in
push
inc
push
fsubl
insl
ret
ret
xchg
in
ret
pop
out
add
int3
and
pushf
movsl
sub
mov
pop
sub
jne
loopne
cmc
pop
jnp
scas
push
jmp
pop
jmp
adc
loope
int3
add
mov
lcall
jmp
lcall
das
shrl
mov
or
mov
push
jbe
sahf
fdivrs
fbld
sub
or
sub
mov
cmpsb
fwait
clc
sub
insb
sub
sbb
adc
and
cmp
pop
sarb
lods
int3
loopne
jne
xor
dec
loop
inc
xchg
pop
flds
cmp
dec
orl
pop
in
dec
xor
js
mov
sub
cmp
es
test
cmpsb
cmp
dec
lods
sti
popf
pop
xor
jae
hlt
xor
xchg
testb
add
rcrb
or
nop
stos
insl
inc
mov
icebp
mov
pop
out
adcl
add
jmp
das
adc
es
lcall
cmp
cmp
jmp
orl
mov
in
subb
dec
das
jp
scas
mov
adc
push
or
outsl
sub
jl
inc
ss
sbb
and
jne
pop
mov
outsb
add
dec
push
adc
jg
sub
jnp
mov
aas
mov
mov
sbb
xor
outsb
jecxz
clc
jmp
add
mov
mov
aad
cs
and
and
sbbl
cmp
fimuls
sti
pop
jb
or
and
scas
xor
sub
lret
fsin
jo
sub
aaa
inc
mov
and
xchg
loop
loope
cmp
cmp
out
cmpsb
cmp
mulb
fists
pusha
cmp
inc
dec
inc
mov
lods
dec
mov
insb
push
sar
mov
jmp
sub
fcomps
lcall
sbb
mov
push
fistpll
fwait
push
cmc
sbb
aas
jmp
repz
addb
faddp
je
lahf
mov
jb
lock
add
sbbl
mov
lcall
inc
mov
scas
jns
lret
pop
pop
ja
push
lods
cs
push
repnz
pop
pop
mov
repz
push
jns
scas
jne
testl
aad
call
and
or
test
sbb
sbb
push
adc
inc
lock
push
jno
fnstsw
lods
rolb
dec
cmp
cmp
arpl
stos
out
jae
lods
enter
cs
shrl
push
mov
gs
ret
lahf
push
movsl
cwtl
addb
sbb
imul
mov
inc
inc
and
mov
cmp
in
dec
ficomps
ljmp
mov
test
jp
push
pop
mov
sub
lods
and
out
push
xchg
xlat
dec
push
cmpsl
cli
lea
add
aad
in
outsb
xchg
cmp
inc
lock
and
loop
sbb
ja
test
pusha
or
dec
inc
xor
mov
xchg
dec
repz
or
fs
push
xchg
push
mov
or
xchg
addr16
rorb
stos
cmp
std
pop
inc
callw
jbe
jl
and
pop
jmp
call
push
mov
mov
jnp
ds
pop
jb
mov
in
mov
test
call
inc
sub
cld
inc
cmp
mov
and
shll
clc
pushf
xor
inc
adc
lods
lret
andl
xor
sar
mov
jmp
and
xchg
shll
adc
aas
gs
mov
or
sbb
cld
inc
pop
inc
mov
xor
pop
outsl
test
sahf
jecxz
arpl
inc
arpl
push
imul
pushf
out
or
les
mov
std
cwtl
stos
sbb
add
or
fcoms
mov
xchg
idivb
loope
lods
test
mov
pop
sub
jp,pn
push
push
fcos
mov
and
call
mov
loop
sbb
mov
dec
xchg
push
or
insb
xorl
jle
movsb
sbb
stc
jg
mov
loope
pop
inc
pop
insl
adcl
xchg
cli
cmp
ret
bnd
sahf
push
push
sbb
mov
aaa
and
lods
shll
lock
lcall
or
shl
add
in
xor
push
inc
pop
add
sub
mov
out
int3
notl
jg
movsb
add
in
fs
cmp
mov
in
out
adc
imul
mov
adc
js
jle
gs
jl
mov
pop
and
sbb
push
repz
and
fisubl
jg
inc
xor
movlps
das
mov
cmpsb
sub
mov
push
lahf
sub
mov
cs
jo
mov
jae
sub
add
stos
pop
jecxz
xchg
mov
sub
lahf
in
in
adcl
gs
lods
xor
enter
pop
fisttpl
push
xor
sarl
addr16
sarb
mov
xor
cmpsb
outsl
cmp
pop
popf
test
icebp
add
or
mov
inc
icebp
jo
cvtdq2ps
aam
push
mov
xor
and
adc
js
inc
fstl
in
add
jno
pop
sub
lahf
loopne
data16
xchg
nop
shll
cld
scas
dec
mov
pusha
jnp
pop
and
mov
fdecstp
cmp
rcll
mov
cltd
out
xor
or
push
or
mov
mov
jns
popf
mov
nop
ljmp
xchg
test
xor
std
mov
lcall
pop
std
pop
out
outsb
clc
mov
flds
out
adc
mov
frstor
test
cmp
sub
andb
dec
aas
orb
call
leave
mov
fdivs
je
cs
test
les
or
jbe
pop
stos
sbb
jp
into
mov
push
add
sbb
pop
bound
int
sahf
mov
inc
xchg
jge
outsl
dec
les
xchg
out
pop
xchg
adc
xlat
mov
enter
sarb
lock
pop
mov
mov
test
cmp
add
popl
out
lods
andl
xlat
jl
jecxz
test
sub
mov
pop
rcr
in
lods
pop
fistps
mov
cmpsl
sahf
jnp
jno
pop
mov
or
pop
cmpsl
sub
popf
push
jo
daa
test
mov
inc
mov
dec
pop
or
lods
mov
mov
mov
inc
fildll
cwtl
push
dec
das
inc
mov
int3
test
test
imull
call
push
data16
in
dec
dec
fbstp
pop
push
or
and
push
dec
out
icebp
popa
rcrl
mov
test
or
jnp
mov
in
movsl
ret
jle
insb
pusha
fsubrs
loop
cmp
pop
push
lods
cmp
jecxz
mov
movsl
int
ljmp
adc
mov
xor
lea
ficoml
mov
imul
cmp
add
orl
mov
push
call
mov
adc
jmp
outsl
jns
les
aaa
dec
add
fucompp
mov
inc
fidivrl
test
dec
mov
add
in
push
out
jg
subb
jecxz
imull
daa
and
add
sbb
xor
jge
sub
push
mov
cmp
stos
popa
subb
movsb
xlat
loop
mov
movsb
popf
cli
call
adc
mov
jne
jge
out
pop
and
xchg
fists
fcoml
inc
xchg
fiadds
add
iret
fisubrl
gs
inc
push
in
int
popf
xor
inc
and
jle
insl
mov
dec
push
pop
xchg
fcmovbe
cmp
sub
push
jnp
testl
sti
jae
sbb
imul
stos
scas
add
jmp
fidivl
shlb
jmp
push
mov
es
insl
pop
sbb
js
dec
jo
loop,pn
cmp
idiv
xchg
out
cltd
ja
cmp
sbb
and
mov
jbe
subl
loope
fiadds
into
mov
icebp
mov
repz
scas
mov
loope
add
je
lahf
xchg
into
fimuls
xchg
cld
push
lds
cmpb
cs
insb
or
cwtl
adc
push
in
jmp
xor
mov
inc
cmp
xchg
lahf
movsl
xchg
imul
mov
dec
mov
mov
add
jb
push
inc
negb
mov
or
adc
in
jecxz
fidivs
pop
push
loop
imul
movsl
mov
fldt
xchg
shlb
sbb
push
pop
xchg
andl
daa
out
test
push
leave
imul
int
dec
mov
ljmp
dec
scas
idivb
mov
sub
sti
inc
cmp
shll
in
mov
cli
xchg
loope
mov
pushf
jp
xor
inc
xor
jecxz
mul
ds
push
fisttpll
outsl
mov
xchg
cli
ss
mov
imul
mov
xchg
adc
mov
loop
rcl
arpl
mov
xchg
pop
mov
jmp
jnp
pop
jno
dec
and
outsb
cwtl
ja
outsb
out
ret
scas
fcos
push
sub
and
aas
aad
inc
pusha
and
clc
sub
aaa
in
aaa
dec
adc
adc
push
mov
fmul
cs
insb
xor
out
fs
xchg
pop
and
pop
sub
cmc
loop
xchg
push
push
xchg
push
lret
stc
pop
mov
xchg
adc
adc
mov
xlat
adc
xchg
dec
ret
incl
xor
das
sub
leave
sbb
mov
addr16
cmp
or
notb
add
dec
push
push
xor
push
lods
dec
push
scas
clc
es
and
xor
cmp
adc
sbb
push
std
mov
xor
lret
jecxz
pop
lods
stos
jle
lods
in
jmp
enter
sub
ja
insb
jns
std
inc
stos
shlb
mov
xchg
loopne
inc
jmp
and
mov
popf
jl
icebp
sarb
stc
push
pop
adc
adc
lss
je
insb
sahf
in
decl
add
arpl
int3
vandpd
mov
adc
stos
or
mov
inc
leave
jg
daa
test
xchg
mov
sub
test
mov
and
and
lret
ja
pop
push
bound
inc
fsub
leave
imull
sahf
mov
xchg
xor
outsl
out
shlb
xor
add
ret
dec
pop
cmp
movsl
dec
push
out
and
or
movsb
cwtl
lods
fistpll
pop
mov
push
push
notl
cmp
cld
movsb
dec
test
mov
dec
adc
adc
mov
test
call
dec
pop
cmp
mov
jmp
test
in
cmp
mov
mov
pop
mov
jmp
dec
xor
pop
in
jae
adc
int
push
movsl
cmp
adc
fiadds
pusha
xlat
stos
fbld
push
or
data16
pop
leave
int3
xchg
call
idiv
pop
daa
imul
insl
dec
int3
std
dec
add
mov
adc
cmp
test
push
gs
sub
inc
cmp
dec
mov
xor
push
or
outsb
in
sbb
xchg
pusha
mov
fists
fldenv
fadd
cmpb
jns
test
jl
shll
loopne
adc
cmp
stos
jne
int3
jmp
push
test
sbb
arpl
push
and
or
push
jle
adc
cmc
aam
test
mov
ret
jmp
nop
adc
inc
pop
movsl
adc
es
push
into
clc
inc
dec
mov
mov
ret
push
jle
nop
pushf
cmp
subb
pushf
js
or
je
jge
dec
add
js
mov
mov
mov
xlat
xor
cmpb
pop
hlt
mov
lahf
add
xor
push
cld
lods
loopne
xchg
dec
cmp
push
xchg
and
mov
orb
add
pop
jmp
lahf
pusha
pop
cmpsb
shrl
dec
in
pop
sub
jne
xchg
in
call
jp
jb
jbe
cli
ror
scas
cmp
jl
ja
sti
sti
jmp
decl
popf
test
nop
shll
mov
xchg
lea
pop
jge
fmull
repnz
and
push
aam
mov
mov
lret
cmp
xchg
out
rol
sbb
addr16
outsb
sub
push
das
and
insl
sbb
lea
popf
adc
in
cwtl
sbb
mov
cmp
out
imul
jl
lods
cmp
test
sub
sub
mov
inc
lea
sub
repz
mov
pop
jns
lods
shll
mov
incl
lcallw
rorl
dec
aam
mov
jbe
icebp
mov
or
shrl
loop
mov
jecxz
or
jns
cmp
push
add
es
sarb
adc
out
fstpl
jecxz
jbe
test
sarl
xchg
int3
imul
jns
stos
mov
enter
and
movsb
xchg
lods
repz
rcll
mov
mov
push
jbe
pop
dec
ret
mov
mov
cltd
inc
mov
cli
fcmovnbe
and
dec
mov
stos
push
xchg
pop
add
scas
push
mov
inc
sub
jp
push
mov
jle
xor
outsb
les
pop
pop
xor
sub
mov
pop
addl
pop
cmpsb
mov
jo
or
jb
mov
lds
loope
adc
call
rcrl
ds
int
pop
out
adc
ror
or
pop
sub
inc
gs
fistps
jae
jno
inc
dec
lahf
pusha
jle
popf
rolb
rclb
into
repnz
jnp
sbb
lahf
pop
xorb
xor
sub
xor
cmc
adc
and
xchg
dec
mov
xchg
iret
ret
cmc
or
leave
mov
adc
pop
mov
push
xor
jae
popa
xchg
dec
mov
lods
push
leave
mov
xor
shlb
imulb
pop
push
imulb
popa
icebp
sbb
xlat
xor
sbb
push
in
aam
push
and
hlt
dec
or
add
icebp
jmp
bound
stos
push
push
lcall
repnz
fldl
ret
add
insb
mov
cwtl
cld
jne
mov
lods
sub
sub
mov
inc
out
mov
cld
scas
push
or
std
push
cwtl
clc
pop
mov
rorb
mov
sbb
push
sbb
mov
cmp
pop
sub
jecxz
rolb
add
push
inc
mov
xchg
jl
or
push
cmpsl
push
mov
or
test
pop
dec
shll
pop
movsb
popf
adc
mov
inc
sarb
push
divl
push
out
cld
mov
mov
cmp
push
push
pop
or
enter
sub
adc
sti
cwtl
mul
cli
add
shrl
in
mov
fnsave
in
out
dec
out
or
clc
inc
xchg
loope
test
mov
test
jp
idivl
aam
ds
jg
add
jl
fwait
mov
add
mov
shrl
add
outsb
or
gs
aam
cs
or
adc
pop
cli
arpl
jmp
lock
and
jne
push
jg
pop
pushf
adc
lret
mov
push
nop
or
xchg
xchg
outsl
test
enter
jp
outsb
call
loope
test
mov
push
out
stc
pop
xor
int3
xchg
addr16
pop
fisubl
jle
jecxz
xor
mov
sti
mov
lods
fadds
lods
test
mull
jmp
ljmp
enter
ja
pop
sub
dec
nop
cmp
pop
in
jge
jo
in
div
push
rorl
inc
nop
pop
and
jl
lock
pop
xchg
icebp
popf
mov
sbb
testl
jp
push
test
rclb
cmpb
out
rol
fwait
inc
xor
ds
addr16
xor
jo
jecxz
push
sub
push
mov
xchg
mov
xor
das
gs
xor
sub
mov
loop
add
adc
fwait
sbb
sub
in
insb
mov
adc
add
pop
cs
jp
mov
fdivp
dec
or
mov
ret
rcrb
nop
ud1
out
pop
rcr
cwtl
inc
notl
or
aad
test
icebp
cmp
lahf
jnp
jecxz
mov
pop
lods
addr16
jp
aaa
xor
je
out
xor
jmp
adc
xor
lahf
or
outsl
aad
cltd
aas
xor
pop
or
mov
mov
dec
in
mov
pop
inc
xchg
push
sahf
rcr
push
xchg
sub
stos
shl
pop
xlat
mov
adc
pop
jmp
inc
cmp
dec
sbb
push
insl
mov
add
dec
push
mov
stc
gs
cltd
inc
rcll
ret
inc
testl
add
rclb
xchg
idivl
neg
cmp
xor
andb
outsl
push
hlt
in
mov
popl
loopne
out
xchg
pushf
call
movsl
lret
clc
stos
push
lahf
push
mov
lock
je
push
mov
pop
movzbl
nop
outsb
mov
mov
add
std
adc
or
dec
clc
in
xchg
lods
pop
out
push
sub
movups
stos
cli
ret
sub
in
adc
stos
out
lahf
or
pop
and
paddw
mov
xchg
jnp
pop
mov
push
je
jecxz
mov
xchg
mov
sahf
mov
add
mov
lods
inc
mov
mov
cltd
adc
stc
xor
testl
pop
mov
mov
cltd
mov
jp
inc
aas
aaa
xor
out
in
pop
cwtl
push
stos
js
into
jbe
push
sub
in
fiadds
adc
cmp
jmp
add
dec
mov
adc
mov
inc
inc
sbb
ficoms
xchg
cmp
rcll
jb
imul
lea
shrb
inc
lret
mov
cmpsb
sub
stos
scas
sar
push
cltd
dec
cmpb
sbb
lock
push
sbb
test
mov
inc
mov
sub
shll
sbb
mov
xchg
adc
push
stos
fcoms
fwait
pop
hlt
mov
enter
fidivl
mov
push
xchg
xchg
imull
mov
imul
dec
cmc
pop
pop
sti
rorb
fsubrl
psubsb
cld
pop
jbe
sub
sbb
cmp
xor
mov
scas
stos
out
pop
push
xor
sbb
pop
test
movsl
ja
cmpsl
shrl
add
decb
pop
push
cmp
push
push
mov
push
test
xor
xor
fs
faddl
mov
mov
cwtl
cmpsb
adc
fstpl
iret
dec
and
in
ss
sub
shrb
or
mov
es
xchg
pusha
or
or
test
pop
inc
ret
push
hlt
clc
fcmovnu
jnp
cmc
mov
ret
and
adc
sub
daa
mov
mov
mov
mov
jmp
sbb
je
cld
mov
faddl
cmpsb
mov
jl
xchg
jbe
push
rorb
adc
popa
jmp
sbb
push
fiadds
jnp
pop
add
xchg
fwait
mov
add
ret
push
sub
push
inc
push
dec
jno
inc
fwait
and
seta
insl
and
add
iret
or
fwait
pop
imul
inc
pop
pop
insl
jg
repnz
nop
mov
ret
push
dec
out
rcl
xor
cmpb
jns
out
push
mov
push
inc
push
test
std
xor
pop
daa
mov
lret
stos
sbb
inc
roll
pushf
jle
dec
sub
adc
or
jbe
sbb
mov
test
out
sbb
lock
mov
in
jecxz
sub
hlt
mov
test
call
xor
cli
and
pop
jecxz
jmp
hlt
mov
movsb
outsb
jecxz
in
arpl
push
add
adc
jbe
adc
cmp
inc
sahf
xchg
mov
sbb
out
sub
popa
scas
data16
std
mov
or
sbb
add
mov
andl
cs
stos
cli
xor
sub
rcl
sub
and
push
fs
mov
outsb
stos
xchg
stc
subl
push
mov
loopne
insb
les
adc
jae
push
test
fwait
mov
xor
loopne
insl
adc
sub
dec
and
mov
push
lsl
pop
and
sub
add
push
or
cmp
add
fisubl
jge
add
push
aam
sti
adc
adc
adc
inc
xor
jne
scas
dec
leave
jmp
and
cmpxchg8b
mov
ljmp
pop
repz
adc
push
fimull
stos
xchg
add
int3
cmc
mov
jmp
aaa
int
repnz
in
lods
sub
mov
scas
stc
daa
js
fldenv
imul
or
loop
cmpsb
sub
int3
adc
lcall
sub
mov
add
sbb
pop
in
test
jmp
imul
pop
cltd
fdivrs
sbb
dec
mulb
sub
call
jle
cmp
pop
testb
adc
in
lods
sahf
sbb
xor
repz
mov
daa
xor
shl
jae
fsubs
ljmp
dec
out
xchg
pop
out
jae
dec
inc
mov
lds
ret
xor
pop
sahf
rolb
jl
fxtract
sub
jge
inc
ret
jnp
xchg
cmc
cld
mov
pop
mov
repnz
mov
outsb
shlb
std
jno
ficomps
loopne
jmp
add
fs
cmp
xchg
or
jae
mov
popf
add
out
fnstcw
jl
es
cmovb
adc
pop
sbb
push
cmp
cli
nop
xchg
outsl
dec
mov
adc
sub
jge
es
sbb
es
add
mov
pop
mov
repnz
fs
ljmp
or
sub
inc
xor
insb
rcl
cmp
jne
pushf
shrl
mov
ss
push
adcb
mov
jbe
cmp
pop
jle
outsb
stos
inc
js
pusha
mov
lds
jno
ja
push
jns
popf
or
xchg
ret
imull
inc
cwtl
push
orl
addl
cmp
dec
addb
faddl
es
movsl
xchg
sub
das
sbb
scas
jle
cmpsb
xchg
xor
push
mov
inc
mov
in
in
jecxz
pop
pusha
push
push
loop
dec
jbe
dec
mov
nop
pop
pop
or
inc
dec
mov
dec
sub
pop
pop
mov
xor
fxch
ret
push
lret
test
sub
int3
mov
cmpsb
adc
pop
out
pop
push
sub
or
cmp
lock
inc
mov
add
push
inc
bnd
mov
stos
mov
fcomps
add
hlt
scas
push
ss
movsbl
and
mov
adc
xchg
insl
lock
fwait
rorl
pop
insb
sub
adc
fcomps
push
or
sti
iret
daa
pop
stos
test
idivb
stc
dec
dec
mov
mov
push
sbb
cli
sub
jmp
push
icebp
inc
xor
push
sbb
dec
jecxz
and
and
lret
xor
into
xorb
cwtl
fisubl
jg
push
cwtl
inc
push
test
in
pop
jae
cmpb
lea
call
andl
sbb
xor
movsb
clc
test
jg
clc
adc
imul
sub
aas
sub
movsb
fimull
repnz
in
je
mov
and
mov
push
mov
mov
sub
mov
add
or
xor
jge
mov
out
push
ret
into
in
in
imulb
ds
lods
data16
mov
pop
push
ja
pop
int3
mov
hlt
decl
add
sub
xor
jmp
cmc
mov
movsb
incl
mov
or
adc
inc
push
shl
inc
leavew
outsl
int
out
sbb
movsb
outsb
in
aad
mov
mov
imul
shrb
gs
mov
pop
shll
fs
inc
sahf
sbb
fbld
add
repz
pop
int
iret
stos
clc
test
add
cmpsb
xorb
movsb
jb
jns
das
ljmp
nop
lcall
adc
es
cmc
sbb
ds
lea
dec
test
es
and
aad
cmc
jp
cmp
in
enter
int3
push
sbb
js
cwtl
jo
jg
decl
testb
int3
push
push
adc
sbb
lods
jns
stos
mov
add
stc
mov
jle
idivl
imul
mov
dec
jecxz
mov
icebp
mov
ret
test
in
out
dec
push
jno
mov
push
mov
icebp
xlat
xchg
addl
dec
popa
call
jp
repnz
push
in
mov
pop
push
rclb
pop
fidivl
push
rcrl
push
je
xchg
and
and
clc
mov
mov
bound
shrl
ja
mov
xchg
sub
inc
imul
pop
jno
pushf
mov
in
sub
jne
ljmp
jne
sub
lods
sbb
inc
add
cmp
fnsave
sti
sbb
push
icebp
and
jecxz
mov
outsb
push
sub
sub
test
dec
repz
arpl
push
mov
mov
pop
jne
pop
pushf
xchg
cmp
data16
xor
push
and
and
out
les
sarb
lahf
push
xchg
es
xor
in
mov
aas
imul
push
outsl
xchg
dec
xchg
mov
cwtl
jae
lahf
mov
out
add
daa
sub
rcrl
jb
popl
or
pop
cmpsb
fnstcw
or
int
mov
and
mov
in
or
outsb
ljmp
outsl
lahf
cmp
addr16
mov
cmp
add
sbb
stos
imul
lahf
popf
inc
cmp
jae
xor
ss
arpl
jg
iret
jp
or
ret
pusha
mov
inc
inc
cmp
cmpsl
filds
pop
jne
lret
repnz
in
xor
fiaddl
push
mov
inc
or
cmpsb
pop
js
adc
sub
lods
aam
shl
mov
cmc
add
aaa
jnp
mov
push
into
inc
jg
loop
cmp
daa
push
js
jg
pop
add
cmp
cmpsb
cmp
mov
aad
or
or
jmp
add
outsl
pop
es
test
and
iret
lock
in
das
sub
inc
dec
cmp
xchg
enter
out
push
add
mov
movsl
inc
mov
daa
inc
mov
insl
jb
inc
mov
xchg
in
out
pop
dec
or
inc
inc
mov
add
orb
inc
popf
push
orl
mov
in
mov
ljmp
jl
icebp
adc
cmpsl
xor
shl
mov
dec
ret
shlb
xchg
xorb
loop
push
mov
gs
je
fwait
push
xchg
je
ss
jl
loope
arpl
pop
aam
out
faddl
js
sahf
jno
or
in
cmp
xchg
cmp
insb
pop
xchg
ret
subl
dec
jns
mov
push
sub
int3
lods
sub
loop
mov
movsl
hlt
xchg
pusha
xor
pop
movsl
pop
jbe
add
xchg
js
xchg
hlt
cmp
add
aad
add
mov
rcr
fstpl
ljmp
jge
insb
xor
loope
adc
test
mov
add
xchg
mov
adc
pop
xchg
aas
sbb
cmp
sti
cmp
inc
xor
in
inc
jge
jl
incb
lea
fstps
push
loopne
movsb
je
lahf
out
pop
xor
cmp
inc
in
sbb
lcall
inc
pop
mov
adc
xchg
xor
fsubrs
xor
xor
scas
mov
call
jno
xchg
into
gs
fcoms
cltd
pop
push
dec
out
add
inc
dec
xor
adc
sub
xor
push
dec
repz
xlat
fdivl
mov
dec
and
in
lock
leave
xor
sbb
ds
mov
sub
pop
mov
push
cmpsl
test
sbb
movb
sub
push
push
sbb
sbb
and
cmp
fwait
sahf
cmpsb
jl
fdivrl
adc
outsb
pop
loop
int3
std
pop
popa
xor
xchg
mov
aad
idiv
jae
inc
push
popa
fdivrl
fiadds
int
stc
cmp
mov
xor
and
ds
movsb
and
arpl
test
pop
test
sbb
cmp
mov
jnp
std
pop
push
movsl
xchg
mov
pop
call
mov
aas
and
lds
arpl
cltd
mov
stos
pop
dec
fsubl
pushf
sub
and
mov
stc
xor
stc
adcl
aam
loopne
sbb
lods
data16
pop
jmp
mov
popf
repz
adc
loopne
push
xchg
fcomps
push
mov
mov
or
cmpsb
mov
mov
push
incl
call
mov
push
jmp
jo
cmp
punpckhbw
cmpb
add
outsl
mov
mov
outsb
sbb
jae
orb
xchg
pushf
stos
fstpl
xlat
mov
mov
xchg
cmpsl
stos
std
out
mov
sub
lret
cmp
test
inc
mov
sub
ficompl
aad
xchg
jne
jg
push
lahf
js
out
pop
outsb
push
repz
loop
arpl
rorl
repz
aam
in
jg
lahf
xor
cmpsl
push
or
mov
cwtl
adc
mov
cmp
cwtl
jnp
ret
sub
jmp
icebp
rcll
dec
cmp
ljmp
adc
xor
fwait
shl
rcrl
pop
pop
arpl
pop
dec
lea
sahf
push
xchg
cld
insl
test
stos
gs
aaa
inc
enter
xchg
adc
call
gs
sbb
push
aaa
push
divb
in
ret
and
jg
mov
sti
jle
sbb
fwait
xchg
push
push
inc
repz
cmp
inc
lea
push
pop
or
pop
mov
adc
jo
adc
aas
in
movsl
movsb
inc
pop
jo
add
aaa
mov
mov
sub
jae
out
pop
inc
sbb
es
mov
push
arpl
mov
xor
jno
sti
xor
inc
adc
subb
movsb
ja
inc
push
and
xchg
fdivrl
sbb
xchg
cmp
scas
into
or
and
mov
adcb
repz
mov
out
sbbl
outsb
andb
popf
jae
push
lock
addr16
add
xchg
inc
rorb
dec
mov
push
cmp
lahf
repz
adc
test
je
scas
mov
inc
inc
fwait
cld
cmpsl
cmp
popa
dec
fimuls
mov
inc
enter
push
jge
xchg
lret
aam
insb
xlat
popa
lds
mov
and
adc
mov
call
movsb
dec
dec
cmp
lods
adc
xchg
out
xchg
cmpsl
ret
add
adc
add
scas
sbb
sbb
iret
je
scas
jge
int3
cmp
aas
pusha
pushf
adc
fs
pop
std
dec
test
test
sbb
jmp
test
lahf
xchg
or
push
sbb
sbb
mov
out
gs
loop
sub
imull
mov
mov
arpl
dec
fcoml
loopne
pop
test
xchg
cltd
push
push
adc
sbb
int
jle
pop
shll
ret
xor
sbb
shl
push
aam
push
inc
push
push
mov
in
sub
jle
shll
xor
fildll
leave
aam
xchg
mov
cmc
sbb
xchg
add
arpl
push
leave
insb
xchg
shlb
sub
pop
jno
aam
dec
icebp
idiv
cli
es
push
ljmp
cmpsb
jb
enter
outsl
cs
mov
pop
inc
xor
aaa
mov
cs
ja
mov
data16
les
rorb
negb
sbb
clc
pop
jge
jb
sbbw
add
mov
sbb
xor
lret
mov
ss
adc
lods
outsl
mov
cmp
inc
ffreep
lcall
mov
add
loopne
jmp
xchg
dec
pop
ljmp
aaa
ss
inc
sahf
sti
nop
mov
mov
test
jno
js
leave
lcall
add
pop
sbb
cwtl
fldl
in
push
subb
or
xchg
inc
in
jo
out
adc
into
dec
and
cld
mov
lock
daa
pop
xor
rclb
and
mov
imul
dec
sub
movsl
xor
lahf
arpl
sub
mov
xor
or
gs
mov
sub
test
into
repnz
mov
mov
sbb
hlt
jge
xchg
in
ret
cmpb
shl
cmp
xchg
pop
xor
aad
cmp
sbb
jmp
mov
bound
cmp
mov
or
in
pop
ds
xor
fcmove
movsl
push
fistps
sbb
sub
xor
sbb
gs
xchg
gs
arpl
push
xchg
mov
jae
xchg
sti
roll
push
xlat
push
ljmp
or
and
push
push
lods
test
mov
orl
int3
pop
int
xchg
add
rolb
stos
dec
repnz
fiadds
jbe
ljmp
lahf
arpl
adc
rolb
xchg
pop
je
mov
nop
es
into
inc
cmpsl
sub
mov
inc
mov
lods
add
orb
js
and
inc
into
shlb
enter
leave
xchg
cmp
lock
clc
push
jecxz
sti
inc
aaa
cltd
pop
scas
sub
js
inc
cmpsl
jno
pop
xor
fwait
push
stos
lods
pop
xchg
enter
sbb
xor
mov
and
push
mov
jnp
test
es
in
outsb
jecxz
scas
mov
lahf
jne
push
loopne
addr16
xchg
inc
test
daa
add
popf
movsl
push
arpl
scas
lods
lock
and
inc
clc
roll
push
fs
sub
sub
cmpsl
mov
popf
scas
jg
xor
pop
fwait
xchg
sti
addr16
mov
inc
pop
rcll
pop
stc
push
and
mov
and
dec
lea
je
adc
fstpl
imul
stos
adc
xchg
mov
clc
and
adc
xchg
mov
stc
lahf
leave
daa
push
xchg
call
pushf
sub
aad
ljmp
iret
xor
push
and
sub
fwait
std
xchg
sarb
cmpsb
pop
xor
sbbb
inc
mov
es
cmpsl
pop
pop
push
xchg
mov
mov
pop
and
nop
dec
push
imul
xor
sbb
and
fidivs
or
xchg
clc
push
cmp
test
ret
movsl
bnd
push
fimuls
mov
mov
sub
fs
int
inc
cmpl
dec
mov
xchg
jbe
jnp
push
mov
out
jle
xchg
mov
push
mov
lahf
lods
sub
jecxz
sbb
push
ret
cmp
out
arpl
or
jbe
mov
or
into
ja
or
xchg
pop
cmp
fisubl
in
mov
xchg
into
ror
aad
ficoml
xchg
cmp
ret
test
scas
mov
call
enter
push
push
stc
jo
cwtl
int3
cmp
js
xchg
mov
xor
cmpsb
shlb
inc
enter
test
xchg
test
movsl
clc
xchg
mov
cld
loope
or
sbbb
stos
sti
stos
loope
and
cmpsl
sbb
ljmp
rorb
ds
clc
pushl
icebp
cmp
or
dec
int
js
and
adc
push
ss
pop
xchg
jbe
pop
popl
insb
es
clc
pop
xor
iret
jne
mov
xchg
jno
pop
mov
cmp
adc
ljmp
stc
and
xchg
dec
and
clc
dec
inc
ljmp
pop
jbe
push
mov
add
int3
stc
adc
add
or
pop
flds
dec
xor
pushf
sub
ljmp
test
pop
leave
sbbb
pop
push
jl
sub
cmp
dec
adc
push
adc
pop
test
xor
jb
cli
jbe
ret
sub
pop
push
inc
inc
jmp
fwait
bound
mov
inc
in
push
push
mov
dec
int
adc
sub
rcrl
and
sbb
push
cltd
push
inc
arpl
mov
adc
das
jp
mov
jb
addr16
stos
jo
ds
jecxz
rorl
ja
jns
mov
leave
jecxz
pop
clc
int
push
mov
jmp
mov
pop
fcmovbe
push
inc
xchg
pusha
stos
and
imul
xor
adc
xchg
pop
cs
imul
push
sti
lahf
jnp
and
pop
mov
cli
aas
out
push
jbe
xor
xchg
in
test
push
jno
movsb
sbb
mov
vpaddw
cmpsl
mov
aaa
and
jno
push
jno
insl
fbstp
fs
fdivrs
mov
or
or
lcall
jmp
mov
sub
push
ret
enter
sub
cwtl
ljmp
or
push
cli
into
in
sbb
pop
mov
adc
fwait
jbe
or
lcall
loope
loope
adc
mov
mov
pop
ss
inc
lds
cmpsl
xchg
mov
mov
mov
mov
and
cli
sub
cmp
rclb
xchg
adc
mov
loopne
jae
aad
mov
sub
lods
outsb
lahf
movlps
aas
lea
cmp
sahf
pop
mov
sbb
inc
lods
push
add
add
inc
mov
push
cmp
stos
decl
sahf
int
test
scas
popf
xlat
stos
mov
daa
cmp
push
es
lea
pusha
xchg
lock
add
xor
popa
add
scas
dec
daa
into
mov
lods
addr16
and
lret
jl
mov
push
pop
dec
movsl
push
xchg
in
add
xchg
sahf
loopne
jbe
aaa
stc
adc
mov
push
add
popa
and
sbb
cmc
iret
xor
pop
push
fidivl
or
xchg
aam
mov
jb
pop
inc
mov
adc
adc
in
mov
cmpsl
aam
dec
popf
in
dec
xlat
jle
pop
movl
jmp
xor
pop
jmp
pop
lods
cmp
mov
je
in
sti
cmp
inc
mov
in
jp
inc
dec
out
add
punpckhbw
cmp
xor
add
pop
mov
les
clc
and
loop
dec
int
ds
test
xlat
xor
lret
test
add
adc
dec
cltd
xchg
das
mov
ud0
jb
xorb
cmp
add
cmp
ds
pop
fs
cmpsl
popf
jl
pop
xor
cli
mov
imul
sub
jbe
loopne
dec
shll
ss
jmp
fistps
jg
imul
mov
testb
insb
int3
sub
out
jns
pop
inc
and
imul
or
push
jns
jb
loop
mov
push
arpl
js
popf
sbb
mov
maskmovq
idivl
cmpsb
sub
ficoml
in
shrb
or
jl
sub
andb
shl
sbb
dec
jno
inc
cmpsl
mov
outsb
arpl
lret
pop
add
sar
push
scas
jmp
push
popf
int3
mov
inc
and
fwait
adc
sbb
testb
push
sub
fstl
inc
pop
enter
in
notl
mov
shl
fcmovnbe
imul
inc
push
cmpsb
jl
xor
std
je
fildl
xlat
mov
mov
js
movsl
add
nop
test
sub
shl
stos
bound
jae
push
int
adc
daa
dec
and
test
adc
lods
or
je
and
iret
lcall
xchg
imul
fldt
decb
pop
orb
jmp
mov
mov
imul
dec
or
jbe
pusha
popa
mov
and
cwtl
ret
inc
xchg
or
mov
rcrl
mov
mov
fldt
aad
iret
mov
gs
icebp
mov
stos
in
inc
mov
gs
out
mov
or
popf
cmp
mov
sti
mull
push
lods
push
outsl
imul
adc
jge
sub
mov
fcompl
popl
inc
fsubs
rcrl
xchg
and
pop
mov
jno
jns
cmpsb
inc
mov
push
push
aad
test
dec
cmpsb
mov
movsl
stos
aaa
fwait
enter
pop
enter
aam
in
or
jp
push
dec
jl
fisubs
stos
jo
nop
cli
repnz
pop
xor
pop
mov
mov
sbbl
ljmp
xor
mov
pop
add
insl
pop
mov
push
pop
aas
push
xlat
scas
adc
in
incb
push
sub
jb
ret
ljmp
clc
ret
pop
sub
inc
loope
addr16
push
imul
imul
aas
cmp
test
into
jle
icebp
shl
ja
call
mov
dec
scas
sbb
inc
sarb
pop
mov
or
adc
js
push
or
jmp
push
int
mov
xchg
pop
sbbb
dec
mov
sub
jno
sbb
lahf
push
xchg
add
aam
movsb
lahf
mov
inc
stos
inc
stos
out
shll
pop
popf
gs
dec
fstpt
xor
cmp
repnz
jl
cmp
es
clc
jns
fdivl
mov
test
les
inc
lcall
mov
adc
add
daa
push
mov
aad
das
call
or
out
adc
outsl
add
and
mov
inc
repnz
mov
or
sti
xor
sbb
xor
imul
jb
xor
cwtl
pop
adc
pop
fcmovnb
shl
pushl
imul
pop
fdiv
sbb
ljmp
push
xor
das
pop
lea
cmp
push
mov
into
iret
inc
mov
in
xchg
aaa
pop
jg
xorb
lds
mov
or
rcl
imul
sub
lcall
jb
dec
sub
insb
fsubp
pusha
cmpsl
pop
stc
jge
adc
cwtl
sbb
mov
push
jg
iret
repz
jnp
inc
dec
imul
imul
insl
test
xchg
cmp
pop
jnp
rolb
xchg
mov
ret
jb
pop
pop
push
xchg
popa
jmp
outsl
cmpsb
jae
adc
adc
into
add
mov
mov
fs
ljmp
cmpsl
xchg
adc
jmp
inc
cmp
fwait
fwait
inc
aam
mov
out
sub
jae
sub
test
mov
test
ljmp
mov
push
in
jbe
jmp
and
xor
nop
push
stos
mov
jno
or
inc
clc
pop
cld
inc
shll
adc
outsl
dec
push
sub
jae
cmpb
sahf
mov
lret
or
jbe
and
imul
aaa
mov
pop
push
add
es
mov
mov
adc
sbb
mov
cmp
flds
arpl
hlt
lods
and
jo
das
adc
mov
ja
xchg
fmul
xor
lret
jecxz
aad
dec
call
push
sbb
push
push
int
pop
add
cmp
jns
xlat
sub
faddp
dec
mov
add
xor
rcr
das
pop
movsb
sub
pop
jg
xor
push
mov
sbb
cs
jecxz
test
outsl
jg
imul
jmp
outsl
cs
cli
add
xor
mov
mov
inc
push
fdiv
ss
or
mov
nop
pop
cmp
jl,pt
push
fbld
xor
icebp
repz
aad
fwait
cmc
les
cmp
adc
sub
xchg
std
sarb
out
or
xchg
xor
ds
call
fnstenv
movsl
pop
out
cmp
gs
les
inc
and
mov
subl
rclb
pop
int3
jl
sub
outsl
xchg
jmp
out
jp
sub
sbb
clc
les
mov
aad
mov
lock
cwtl
pop
push
inc
loopne
and
imul
cmp
xchg
mov
fsubrp
push
jno
addr16
xlat
and
push
lahf
dec
in
push
mov
jno
inc
test
jp
sub
mov
lret
mov
arpl
inc
negl
mov
mov
push
cmovne
scas
icebp
rclb
cmpsb
loopne
out
mov
outsb
out
xchg
or
sar
ja
out
cmp
sbb
xchg
data16
inc
or
aam
ja
sbb
out
gs
jl
dec
push
sub
in
mov
add
mov
out
jns
jge
les
pusha
out
pop
mov
data16
fistl
dec
bound
mov
pop
sub
movsl
mov
aam
mov
sub
fwait
shll
xchg
mov
int3
ret
sbb
lret
hlt
scas
sbb
sahf
mov
and
adc
cwtl
dec
push
lret
enter
ss
movsl
push
fcomps
inc
xlat
cmpb
push
arpl
pop
mov
adc
or
das
or
adc
push
loop
lock
sub
jle
test
mov
xor
or
ja
aas
fidivrl
incb
dec
mov
mul
cwtl
sbb
sub
out
pop
and
mov
aam
jmp
mov
pop
add
or
push
mov
sub
cmp
push
std
data16
xor
mov
xorl
subl
insl
outsb
and
mov
fbld
imul
push
push
daa
loop
sbb
ss
xlat
mov
jnp
pop
movsl
in
mov
outsl
or
daa
mov
es
iret
jo
jge
or
adc
popf
test
hlt
xchg
push
idiv
jo
ss
and
fistpll
inc
cmp
add
inc
daa
jl
imul
int3
loope
inc
pop
cmp
out
cmc
shufps
xchg
aas
mov
push
fs
aaa
xchg
lret
xor
mov
dec
push
pop
rorl
pop
cltd
repnz
fucomp
popa
jge
leave
test
dec
je
cmp
sbb
xchg
in
mov
movsl
cmpsb
cmp
push
jmp
test
mov
aam
iret
mov
pop
mov
add
ficomps
rcrb
mov
push
testl
cld
addr16
dec
filds
repz
jbe
lret
sarl
pop
xchg
adc
stos
mov
fadds
das
push
push
std
lock
sahf
int3
add
xchg
xchg
jge
and
fstps
or
jnp
sbb
mov
jp
cmp
add
and
mov
inc
imul
dec
into
int3
xchg
jo,pn
mov
push
xor
cltd
ljmp
inc
std
cmp
icebp
les
xchg
xchg
xchg
jns
fbld
xchg
inc
pop
jae
outsl
out
out
xchg
adc
leave
lea
pusha
ljmp
cmp
lods
pop
roll
pusha
int3
stos
dec
jg
stc
outsl
inc
cmpb
push
dec
jp
mov
inc
inc
xorb
lock
mov
inc
adc
jl
test
pop
xor
cmp
jno
pop
sti
jb
pop
testl
cs
lret
dec
push
lahf
in
in
sbb
stos
mov
inc
mov
std
adc
ss
push
pushf
dec
mov
fildl
icebp
pop
sub
out
jns
int
ss
mov
repnz
jecxz
lcall
popa
sti
sub
ja
je
popf
mov
dec
xchg
mov
jmp
nop
lahf
sti
clc
add
mov
inc
sbb
test
rclb
push
ret
lods
or
or
or
test
fnstenv
loopne
sbb
cmp
sbb
or
mov
clc
shll
push
lcall
addl
pushf
dec
int3
or
xchg
add
into
hlt
lods
loop
dec
into
jl
jnp
ret
xchg
adc
sub
mov
mov
enter
test
call
scas
jo
data16
addb
das
adc
out
sahf
mov
out
cmpsb
in
mov
cli
dec
sub
mov
scas
jo
and
paddusw
enter
adc
cmpsb
inc
xchg
jl
fbld
xchg
xchg
in
sti
dec
xchg
enter
xor
fdivrl
cmpsl
das
lock
movsb
int
or
lcall
adc
and
js
lret
call
mov
jbe
fwait
sti
cli
aas
stc
lea
bound
dec
test
xor
in
xlat
mov
jno
sbb
push
pop
jge
mov
mov
lret
sub
lods
xor
mov
out
call
lods
jns
mov
pop
movsb
jg
jl
int
inc
out
mov
jp
mov
push
cmp
mov
ds
in
lods
ja
gs
xchg
movsl
xor
aaa
daa
loope
jne
es
inc
cmp
xor
lret
cmc
inc
inc
sti
mov
sub
fbld
pushf
cmc
sbb
dec
and
popa
xchg
test
ds
repnz
add
jns
xlat
repnz
lahf
loop
frstor
mov
xor
rcrl
xchg
jne
std
adc
mov
mov
jo
fadds
jbe
mov
repnz
mov
aad
repz
sub
lcall
adc
das
mov
sub
les
sub
inc
mov
add
insb
mov
fildll
adc
cli
mov
jns
outsb
jno
push
test
xor
xchg
sub
xchg
subb
mov
ss
pop
jne
arpl
test
or
push
xchg
clc
inc
lahf
adc
fwait
outsl
dec
lret
mov
sub
jp
in
pusha
mov
jle
jle
sub
fldenv
leave
xor
test
mov
xchg
mov
sub
outsb
sbb
imul
adc
sbb
ficoml
les
add
cwtl
jmp
pop
mov
or
or
dec
sub
jno
xchg
hlt
adc
mov
jecxz
jecxz
inc
loop
cmc
cmp
cmp
pop
cmpsb
cmpsb
jb
aam
cmp
jge
jmp
xor
pop
outsb
and
repz
dec
mov
enter
es
mov
cmpsb
js
leave
push
add
dec
sar
icebp
cmp
sbb
pop
mov
fistpl
cmp
xor
inc
aas
pop
les
pushf
lods
cmp
sti
mov
movsl
xor
xor
dec
sub
adc
lcall
leave
or
xchg
sti
aam
cmp
cmp
lods
adc
lods
scas
imul
and
pop
pop
or
dec
mov
inc
sub
rcl
cmp
sbb
dec
mov
ds
dec
arpl
jo
and
mov
je
dec
stos
inc
lahf
lods
and
ss
jmp
add
loopne
inc
test
lods
das
fdivr
les
test
jmp
add
inc
fistps
mov
push
fs
mov
sub
aad
mov
lds
pop
jnp
in
frstor
or
mov
js
mov
adc
cwtl
dec
iret
dec
loopne
loope
jno
xor
aaa
push
icebp
imul
idivb
adc
mov
pop
adc
ja
test
push
fildl
jg
dec
out
mov
dec
push
fildll
push
mov
push
pop
inc
in
jbe
les
lret
push
out
nop
mov
aaa
adcl
xor
sti
addr16
test
cs
sub
mov
gs
loope
lcall
add
xor
jle
jge
rcr
js
pop
enter
push
nop
mov
lret
jnp
fldt
rclb
scas
xor
dec
int3
mov
mov
pop
leave
push
jne
daa
sub
jbe
movsl
pop
shlb
push
stos
sub
inc
mov
stos
sub
shrd
cmp
mov
mov
stos
leave
test
mov
rorw
mov
std
inc
test
nop
xor
xchg
rcr
ds
lret
jge
push
push
dec
lods
cmp
mov
rorb
sub
push
pop
sbb
mov
push
mov
es
cmc
mov
into
jns
les
shll
pusha
sbb
inc
scas
and
rol
shll
popa
scas
popa
jmp
push
add
daa
addl
mov
xchg
popa
imul
jo
ret
mov
xor
push
in
inc
insl
leave
mov
lret
push
filds
dec
mov
movsb
dec
pop
jp
cmp
push
lret
js
adc
out
or
inc
aaa
nop
xor
jo
jl
mov
or
push
insb
test
and
lret
cli
mov
pop
and
jbe
es
cwtl
xor
in
adc
sub
test
push
lret
jae
lcall
out
lret
dec
inc
jns
das
cmpsb
dec
add
jns
int
cld
mov
mov
add
shlb
and
pop
mov
enter
adc
stos
xor
mov
push
inc
lcall
sti
fdivrl
imul
xchg
rcrl
in
lods
sbb
popa
add
loopne
cmpsb
and
dec
es
push
imul
sub
sbb
fstpt
jmp
jl
add
lods
andb
aaa
ss
jge
or
dec
lods
jge
sahf
inc
mov
lret
leave
mov
mov
inc
dec
push
mov
jge
xchg
lods
loopne
jns
pop
daa
ljmp
ret
mov
xchg
int
shr
jo
pop
lods
ljmp
lds
div
mov
mov
jge
push
mov
push
xchg
test
and
mov
push
scas
push
jae
cltd
sbb
pop
test
inc
add
jae
and
jbe
inc
pop
jno
push
shrl
pop
cli
xchg
movsl
inc
cmc
mov
stos
popf
jg
mov
jo
stc
pop
das
out
jl
mov
test
movsb
iret
fsubl
jmp
popf
and
test
dec
and
hlt
sbb
cli
sub
loope
adc
push
mov
pop
jns
lods
cli
xor
pop
adcl
cmpsb
iret
clc
iret
std
popa
mov
imul
dec
or
sub
sbb
mov
arpl
shr
jnp
repz
fs
shr
test
ljmp
icebp
inc
jmp
rclb
into
pop
adc
and
cmp
lret
popf
cmp
xchg
jne
inc
inc
adc
into
popf
and
out
int
inc
or
aaa
iret
imul
aas
jne
pop
lock
fstpl
out
fildll
pop
pop
pushf
mov
xor
sbb
or
cld
jmp
bound
dec
mov
xor
add
int
scas
push
mov
xor
ljmp
adc
fwait
cwtl
sub
lea
es
test
lret
cmp
push
xchg
dec
mov
test
mov
inc
arpl
test
pop
lret
mov
ret
in
and
mov
nop
adcb
movsl
jmp
xchg
and
push
test
xchg
lahf
pop
stos
pushf
fistl
fwait
cmpxchg
js
mov
out
shlb
dec
cld
mov
jbe
cmpsb
jno
lea
pop
cltd
add
mov
xlat
std
in
test
add
dec
test
ljmp
lock
jo
push
ret
rcll
jb
insl
push
add
sbb
clc
mov
adc
and
bound
xchg
mov
add
cmp
mov
jb
mov
jne
ds
mov
lock
inc
sub
xor
push
sbb
lcall
into
test
push
cmc
out
mov
cmp
mov
xlat
xorb
lahf
out
int
jno
dec
in
jbe
and
or
mov
scas
pop
sahf
mov
mov
ss
xor
arpl
cmp
dec
sub
int3
inc
int3
jne
push
pusha
sub
dec
jns
imul
es
mov
addr16
rol
mov
mov
sbb
int
mov
adc
xor
add
push
mov
dec
pop
fisttpl
mov
mov
and
push
lcall
pinsrw
pop
pop
lods
or
cmp
xchg
aad
int
sbb
icebp
or
jmp
adc
and
jecxz
push
pop
or
test
mov
sub
cmc
pop
fs
iret
pop
aad
fwait
imul
pusha
popf
push
lret
cmp
shll
cmpsl
xor
add
stos
pop
scas
xchg
hlt
mov
jae
ja
mov
xchg
rorb
in
sub
mov
push
inc
pop
es
and
or
push
fsubr
and
clc
out
push
vshufps
mov
shrb
shlb
sub
pop
xchg
cmpsb
sub
push
inc
jnp
sub
mov
mov
fsubl
add
jnp
inc
pop
xchg
cmp
loop
mov
or
mov
inc
fidivs
inc
inc
sbb
pop
inc
mov
or
cmpsb
pop
dec
sbb
push
add
fwait
loop
xchg
cmp
mov
cmp
fwait
pop
dec
mov
rclb
pop
pop
adc
bound
or
in
ljmp
rolb
outsl
je
inc
mov
add
into
cmp
mov
ret
lret
xchg
dec
xchg
cwtl
shrb
pop
rolb
enter
cmpsl
mov
mov
sub
hlt
push
test
and
pop
sbb
mov
fcoml
lock
aas
push
lea
stos
mov
test
mov
rolb
push
xor
jp
jl
sti
test
fwait
xchg
shll
sbb
jg
in
dec
cwtl
insl
insl
push
sarl
lds
lods
mov
adc
sbb
cmc
xchg
push
ss
iret
adc
icebp
icebp
mov
xchg
mov
inc
je
das
popa
dec
adc
mov
rclb
ljmp
dec
ficompl
xor
jbe
pop
pushf
xorl
lods
leave
sbb
aad
sbb
test
jno
cwtl
mov
and
push
jae
push
jno
xchg
sub
movsb
xchg
and
sbb
jp
add
xlat
pop
mov
shl
push
fbld
add
mov
push
push
or
out
cltd
pop
movsl
mov
addr16
fmuls
add
daa
or
cmpsl
cs
sarb
clc
outsb
xchg
cmp
cmp
pop
xchg
sarb
sarb
nop
gs
cmc
jmp
lock
idivl
pop
sbb
repnz
dec
or
push
pop
inc
div
imul
jmp
cmp
pop
stc
lods
outsb
stos
scas
in
dec
cli
cmp
pop
lds
pushf
aam
inc
or
fwait
xlat
cmp
aad
out
out
and
xor
lret
adc
popa
adc
jae
inc
out
es
xor
divb
inc
xor
push
lock
fisttpl
inc
aas
lock
iret
xor
mov
fists
shll
das
xchg
sub
xchg
stc
pop
inc
lock
pop
mov
stos
shlb
adc
fmull
mov
adc
mov
jbe
xlat
push
sub
lds
or
lret
sub
jge
scas
lahf
or
mov
sub
add
mov
fs
movsb
pop
mov
test
cltd
shr
mov
int
test
pop
add
inc
ficoml
call
dec
mov
mov
icebp
fwait
icebp
cmp
test
xchg
lahf
cli
repz
pop
mov
cs
dec
arpl
pop
and
push
sbb
inc
mov
lea
test
xchg
add
mov
adc
push
arpl
push
cmp
enter
addl
dec
and
ret
leave
fcomi
dec
gs
push
push
test
nop
push
cmp
lds
jno
std
test
aas
mov
pop
bound
ja
mov
in
mov
into
outsl
xchg
mov
pop
push
push
push
fldenv
das
mov
int3
test
nop
dec
adc
push
fiadds
stos
adc
movzbl
push
mov
xlat
out
dec
stos
decb
push
mov
lahf
add
push
sbb
push
ret
inc
push
sbb
sbb
cld
js
jle
jae
or
cltd
repz
inc
jo
sub
je
adc
leave
fidivl
repnz
sahf
pop
in
in
jl
mov
aam
xor
lods
mov
mov
add
cmp
or
lods
cld
mov
jmp
push
push
int
pop
mov
rol
mov
xchg
adc
aaa
adc
test
push
nop
ljmp
rcr
push
and
jo
and
in
pushf
jnp
int
jge
lret
mov
add
xor
aaa
lods
dec
inc
loop
js
mov
inc
or
popa
in
lods
ja
inc
and
dec
imul
push
pop
push
mov
sbb
inc
mov
and
pusha
or
arpl
in
int
xchg
fists
xor
jo
lds
add
hlt
outsb
jge,pn
jp
in
cwtl
ja
or
into
push
mov
pop
rcll
fwait
outsl
in
iret
fdivrl
orps
jb
dec
aam
pop
addr16
fidivl
cmpsl
jle
nop
jg
movsl
clc
bound
adc
repz
jnp
dec
negl
xor
mov
mov
into
into
xlat
xor
push
cmp
stc
mov
mov
mov
outsb
ret
outsl
ljmp
hlt
sub
xchg
das
mov
repz
cwtl
push
add
mov
or
in
das
jno
ret
andl
call
outsl
mov
repnz
cmpps
push
aaa
subl
ds
adc
popa
dec
call
in
roll
push
fucomi
mov
cmp
push
jmp
rolb
aaa
sbb
sbb
lods
inc
es
xchg
push
xor
mov
push
sbb
addl
or
sbb
inc
add
adc
mov
inc
inc
mov
gs
outsl
and
pop
je
sub
add
push
jns
push
add
movsl
xchg
outsl
push
fucomp
cwtl
inc
pop
lret
rolb
push
jo
fdivs
inc
and
adcl
daa
xchg
and
jae
cmp
mov
addr16
out
lods
imul
cmpsb
jbe
jmp
arpl
insb
lds
cs
cmc
jb
jno
rcrl
mov
test
sub
xor
int3
icebp
inc
movsb
dec
jmp
cmp
mov
xchg
add
jo
mov
clc
xchg
mov
xchg
and
mov
jo
mov
std
sbb
aaa
pop
iret
hlt
pop
mov
sbb
imul
dec
scas
test
sub
mov
popa
mov
push
adc
pop
mov
jp
cmp
dec
mov
jmp
pop
add
push
mov
hlt
ret
lods
add
inc
push
les
popa
lock
push
pusha
pop
mov
pop
mov
inc
pop
inc
js
ss
or
push
jnp
push
dec
push
fld
sub
jecxz
xorl
jno
test
push
mov
lds
push
test
xchg
mov
cmpsl
mov
loope
scas
push
sub
scas
setb
xchg
shrl
rcl
out
inc
shll
dec
push
stos
inc
ret
imul
je
sub
jge
push
add
push
jmp
in
test
inc
pop
push
pop
dec
cmp
out
push
ljmp
cmp
addr16
aam
mov
pop
test
add
lret
andb
ret
int
les
push
adc
mov
ja
stc
jns
mov
sbb
jne
idivb
inc
jl
inc
mov
cmp
add
mov
inc
push
sbb
out
xchg
jp
test
cmp
cltd
inc
adc
insl
jno
jecxz
xchg
loope
bound
pop
stc
and
cmp
add
mov
sti
data16
sbb
sub
xlat
cmpsb
push
pop
fwait
add
pop
out
lcall
adc
les
mov
jo
ret
and
in
fcmovbe
push
out
dec
mov
push
test
push
nop
mov
jp
mov
lcall
ret
pop
or
pop
mov
sbb
scas
inc
add
mov
lock
in
mov
vunpcklpd
xor
push
popf
mov
xor
push
je
dec
jecxz
xchg
mov
xor
pop
jbe
dec
mov
mov
add
dec
outsl
ror
hlt
lods
enter
into
push
subb
insl
pop
push
dec
adc
sub
sbb
mov
or
jns
pop
jmp
sbb
stos
jmp
enter
adc
xchg
fs
cltd
fldt
mov
mov
scas
xor
lock
and
das
mov
lcall
icebp
lds
add
in
mov
mov
mov
xchg
lods
lock
push
jg
mov
daa
rolb
sub
cmp
cmp
add
popf
andb
adc
pusha
dec
scas
mov
scas
test
pop
stos
dec
popa
pop
xchg
repnz
pop
out
xor
pop
pop
mov
mov
or
jbe
mov
xchg
xchg
je
adc
inc
enter
sub
gs
cld
xchg
inc
or
sbb
push
xchg
xchg
cli
lahf
mov
fdivs
andl
pop
sub
int
repz
cmp
std
pop
sahf
repz
ret
push
mov
jae
je
cmp
push
jl
aas
rol
jg
int3
inc
or
adc
xchg
mov
les
or
rcll
push
add
lret
xchg
ret
and
jno
push
adc
data16
clc
ret
sbb
mov
inc
in
and
icebp
mov
mov
fidivrl
addr16
orl
in
es
in
lds
push
negl
jg
xor
lock
mov
pop
sub
nop
inc
out
popf
sub
cmp
sbb
pop
fs
je
jb
inc
mov
testl
ret
pop
stos
mov
cmp
sbb
jb
inc
sbb
sub
mov
mov
mov
fisubs
xor
pop
cmc
cmp
xchg
leave
xchg
sahf
push
imul
mov
addr16
and
fadd
fmulp
xchg
out
psubq
insb
dec
push
add
in
inc
sbb
lds
ret
divl
mov
or
out
sahf
shll
lcall
data16
add
inc
movsb
rorb
insl
pop
or
fsubrl
inc
movsb
push
inc
enter
mov
movsl
mov
push
cltd
ljmp
sbb
or
push
pusha
mov
and
loop
fstl
sub
pop
cmc
xor
and
sbb
mov
dec
push
mov
loop
mov
mov
dec
or
cmpl
ljmp
push
xor
xchg
icebp
mov
push
xchg
mov
push
test
fs
sub
mov
push
adc
lods
imul
into
jns
sbb
jne
out
clc
cli
aas
pop
repnz
adc
cltd
sub
test
ret
nop
xchg
pop
es
adc
pop
fwait
ret
add
mov
testl
cltd
mov
inc
aaa
push
cmp
pusha
int3
sub
adc
mov
insb
movsl
movsb
rclb
sti
ja
sbb
out
repnz
mov
flds
test
cmc
popa
jne
fwait
adc
mov
jns
movsb
inc
xchg
mov
xchg
dec
bound
scas
rol
or
push
sub
add
popa
cwtl
xlat
mov
mov
add
sti
jo
mov
scas
lahf
in
mov
shrl
pop
sub
scas
xor
add
repnz
addl
fidivrl
cwtl
mov
inc
jo
aad
lea
pop
mov
loop
fwait
jmp
sbb
mov
add
loope
pop
sti
cmpb
lock
xchg
ja
xchg
push
lods
cltd
cmpsl
cltd
inc
jl
sub
cmp
clc
es
orb
sub
shlb
xchg
lods
ret
or
dec
pop
sbb
movb
ret
inc
iret
mov
psubusw
movsl
loope
pop
out
pop
mov
cld
jno
imul
or
lret
ljmp
jl
sub
cmp
int
imul
inc
pop
int3
fisttpll
sti
movsb
pop
arpl
cmp
cmp
mov
mov
sub
psubsb
cmp
lahf
sahf
adc
test
ret
arpl
cmpsl
xchg
and
imul
adc
sbb
inc
loope
fmuls
divb
sti
mov
outsl
shrb
cmpl
push
jno
cmpsl
xchg
mov
add
pop
fwait
mov
mov
loopne
lahf
iret
scas
sub
push
test
cmp
dec
popa
mov
sub
pop
mov
cs
cmpsb
mov
fdivrp
push
fcmovu
sub
rol
ja
pop
and
lds
lods
cmp
dec
xlat
inc
fimull
mov
xchg
and
and
call
jp
add
roll
call
inc
out
lock
fcoms
jbe
adc
lret
in
adc
inc
pushf
loop
out
mov
loopne
push
adc
push
mov
pop
mov
sbb
cmp
lret
push
sub
lret
adc
fwait
ja
push
jecxz
pushf
test
repz
pushf
sub
cmpsb
add
push
pop
lret
arpl
in
add
lods
pop
lcall
loop
movsl
mov
jnp
notl
cmp
in
lcall
repz
fldcw
bound
cmp
aaa
dec
xor
popf
clc
les
mov
xor
push
dec
je
in
adc
push
cmp
out
add
mov
jp
cmp
sub
loopne
mov
nop
xchg
subl
fistpll
cmp
pop
adc
xor
fstps
testb
bound
dec
imull
pop
push
cmp
adc
fs
dec
or
iret
mov
xor
push
int3
mov
mov
add
sub
bound
push
pop
ljmp
mov
sbb
lret
mov
ljmp
sahf
in
das
repz
adc
mov
jne
fmuls
push
icebp
insl
lods
shll
cmc
mov
cmp
test
out
scas
mov
fidivrs
cli
mov
pop
sti
sub
xor
int3
lods
loop
add
mov
aas
ja
sbb
add
pop
adc
xor
clc
cmp
in
mov
xor
jb
push
gs
cmc
xchg
jg
xchg
xchg
cmp
cmp
xchg
xchg
inc
jg
ret
cmpsl
fisubl
icebp
inc
jl
stos
cwtl
inc
setno
xchg
sbb
bound
adc
dec
xor
mov
pop
lods
mov
jo
insb
cmp
pop
push
jb
dec
push
setle
mov
movsb
insl
in
pushf
insl
or
out
fbld
lds
xor
jns
mov
repz
pop
sbb
pop
aad
and
sub
loope
mov
add
push
push
test
stos
out
xchg
mov
sub
pushf
xor
jae
cmp
lret
sti
out
xor
sbb
clc
or
nop
push
aas
pop
std
pop
in
fs
dec
xchg
ja
lcall
xchg
jnp
insl
test
les
push
or
push
add
pushf
pop
sub
icebp
jno
adc
enter
into
mov
and
js
cmp
or
jl
sbb
sar
loopne
in
in
cmpsb
sbb
xchg
jb
pop
ret
and
add
pop
adc
sbb
xchg
sbb
mov
dec
fs
lds
test
mov
mov
sti
cmp
addl
xor
adc
and
daa
pop
or
sbbl
lods
and
sbb
ss
pusha
inc
loop
inc
mov
das
lea
lret
sub
out
fs
mov
mov
out
test
pop
loop
add
push
loop
add
adc
out
sub
mov
test
cmp
xor
pop
dec
xlat
inc
pop
jp
sbb
xchg
cmp
jge
jl
hlt
xchg
or
nop
jge
cltd
push
pop
jge
negl
xchg
mov
push
fldt
popf
inc
out
cmc
rorb
push
shr
jg
pop
pop
aaa
sti
into
movsb
and
sbb
orl
fdivrs
or
out
mov
out
dec
lods
cwtl
adc
aas
test
fsub
rcl
iret
and
sti
mov
cmc
inc
inc
push
aas
sub
or
xor
in
jp
adc
daa
enter
mov
mov
test
fsubs
pop
aas
cmp
pusha
xchg
in
andl
xchg
hlt
repnz
and
push
add
cwtl
das
mov
pop
push
ficoml
sbb
aad
lods
fldl
cmp
pop
push
push
sbb
fwait
mov
mov
mov
testb
inc
call
lsl
ja
or
icebp
inc
lods
jb
jo
jge
add
scas
lea
push
leave
inc
inc
push
push
jp
or
jmp
mov
iret
pop
mov
mov
push
or
adc
out
push
mov
fidivrl
and
or
push
adc
sub
mov
cs
out
inc
mov
pop
mov
xchg
mov
das
mov
outsl
mov
lds
cmp
lods
mov
inc
ret
fsubrl
or
xchg
js
je
stos
int3
and
xchg
adc
dec
add
in
movsl
jb
loopne
xchg
dec
fldenv
aad
jno
pushf
pusha
adc
xchg
testb
mov
mov
or
in
inc
imul
mov
adc
xor
mov
dec
addr16
mov
push
sbb
dec
and
int3
add
js
and
dec
test
popa
push
add
cs
out
ja
aad
xchg
loop
sti
dec
push
loope
and
shl
outsl
lahf
leave
aam
sub
pop
and
in
int3
mov
jp
sarl
cmp
push
outsl
in
popf
adc
lock
xchg
jp
cmp
out
sub
cmp
and
test
xor
mov
mov
fsubrp
test
sti
sub
repnz
rcrb
or
sub
fistpl
pop
mov
jno
xlat
rclb
pop
mov
push
cmp
imul
int
push
fs
aaa
cs
sub
aad
adc
pop
aad
nop
or
fcmovnbe
fdivrl
sbb
mov
loop
lahf
mov
push
push
push
mov
outsb
ljmp
test
xchg
jge
stos
inc
xorb
mov
and
fsubrl
faddl
adc
outsl
xchg
mov
enter
divl
loope
inc
sbb
mov
int
sbb
jno
or
and
es
out
sbb
xor
jmp
xor
adc
test
xchg
sbb
mov
lret
insl
cmpsl
or
arpl
cmp
cld
xor
nop
lods
mov
outsl
or
lcall
dec
pop
lea
repz
cmc
ja
sub
clc
jle
ficomps
cmpsb
iret
mov
stos
sbb
push
aam
cmpsl
dec
cmc
bswap
add
pusha
popa
outsl
mov
scas
add
push
out
inc
lds
scas
xor
or
gs
sbb
gs
jbe
jecxz
xor
cmpb
mov
rorb
mov
repnz
subb
mov
jnp
mov
cld
negb
pop
out
xchg
and
sbb
or
into
not
cmpsl
pop
and
mov
or
pop
popa
add
adc
gs
aad
std
sub
or
xchg
pop
xchg
sub
imul
inc
pop
cmp
fstl
lcall
inc
fistpl
mov
ljmp
negl
lods
mov
mov
stos
sub
data16
cmp
and
pop
and
into
lods
mov
add
add
mov
jbe
xchg
sub
xchg
and
xchg
iret
ds
popf
mov
popf
lods
js
sahf
sub
jecxz
adc
mov
mov
add
aaa
loope
cwtl
dec
xlat
nop
lods
mov
sub
mov
dec
iret
in
push
vshufps
cmc
clc
xor
jge
pop
mov
sbb
cmpsb
mov
pop
cmc
push
dec
sub
in
or
cmpsl
sbb
adc
test
iret
add
pop
mov
mov
pusha
aas
les
rorb
xlat
jecxz
jge
out
fcmovnb
jg
adc
jo
insl
push
xor
pop
or
loopne
test
mov
incl
mov
add
fbld
ret
scas
xor
jmp
cmc
pop
mov
sbb
aam
lret
dec
inc
dec
adc
and
popf
in
push
xorb
clc
cmp
xchg
lods
adc
loope
outsl
xor
sub
push
inc
rcll
mov
lret
xchg
iret
aad
fistps
daa
fldenv
or
or
std
enter
pop
call
hlt
pop
mov
lret
out
lods
mov
repnz
inc
subl
cmp
call
adc
and
stos
jp
jns
daa
leave
push
xchg
inc
xorb
loope
mov
jp
fcomps
sub
js
test
mov
xor
xchg
sub
adc
pop
dec
dec
pop
in
cld
mov
push
loopne
rcrl
sarb
inc
rcll
add
imul
push
and
out
jp
cli
add
sbb
jmp
mov
ja
mov
push
int
mov
mov
lock
in
mov
mov
insl
push
fsubrs
inc
aaa
jbe
shll
cmp
cli
test
imul
jp
sub
cmpsb
jb
jle
das
stos
jp
lahf
push
inc
call
adc
push
outsl
sbb
mov
mov
jl
and
xor
notl
stos
addr16
int3
and
add
pop
std
stos
sbb
mov
js
jb
shlb
cmp
enter
gs
lods
lock
adc
adc
popa
mov
mov
mov
or
fsts
fisttps
gs
push
push
bound
xor
loop
adc
adc
jo
aas
and
daa
sbb
addr16
adc
testl
outsb
pop
das
hlt
jl
add
aam
push
and
je
cmp
sub
xchg
ror
jg,pn
call
xor
subb
stos
pop
mov
loope
stc
push
inc
bound
jge
inc
popa
lock
data16
pop
mov
mov
pop
mulb
push
pop
add
ret
xchg
jg
setno
fwait
and
cmp
insl
mov
outsl
pop
pop
add
iret
jae
movsb
inc
sub
fstl
and
inc
lods
inc
lcall
add
jne
xlat
push
adc
movsl
dec
mov
adc
and
leave
shlb
lock
sub
sbb
adc
insl
inc
je
pop
ret
outsl
test
mov
or
xor
addr16
mov
insl
cmpsl
loope
and
or
fistpll
mov
into
push
imul
pmullw
notl
and
mov
pop
lds
push
add
ret
cmp
pop
shrl
push
fstpl
testb
mov
adc
addr16
xchg
dec
repnz
sub
jno
in
pop
add
int
in
mov
push
lods
xlat
add
out
enter
test
int
xchg
test
inc
mov
sti
mov
jmp
insl
jl
mov
sub
cwtl
mov
js
mov
leave
data16
and
cmpsl
in
adc
cmp
fildl
ficomps
insl
mov
jae
insb
inc
inc
mov
lods
add
cmp
leave
cmpsl
and
aaa
and
int3
cmc
insl
in
inc
add
mov
std
pop
and
jmp
aaa
fstpl
lret
roll
lea
imul
imul
jge
scas
sbb
lahf
int
xchg
xor
fdivrl
sarl
test
mov
loop
sub
mov
and
mov
out
fcompl
inc
sti
sbb
mov
xchg
mov
test
mov
pop
mov
ds
add
adc
add
fisubl
cld
rsqrtps
gs
jnp
sub
push
sbb
nop
inc
inc
imul
xchg
scas
lahf
pop
hlt
xchg
dec
ficomps
jbe
ror
jb
lret
adc
push
mov
jne
xor
pop
xchg
cmp
outsl
ficoml
loope
outsl
push
jnp
cmp
nop
push
inc
jp
sbb
daa
mov
shll
adcl
cmpsb
adc
jne
mov
arpl
push
mov
sub
jmp
sti
data16
xchg
mov
out
pop
mov
es
sti
std
jl
pop
dec
aad
test
xor
add
add
cwtl
ljmp
inc
xor
xchg
xor
jae
push
sub
in
hlt
pop
aam
push
mov
jmp
xchg
cmp
aaa
roll
push
adc
je
jb
test
and
roll
xchg
lcall
mov
pop
out
push
or
sub
int3
push
cld
and
pop
jo
mov
adc
sti
cmp
adc
sbb
cld
mov
cmp
movsb
push
xchg
mov
sahf
aam
mov
push
xchg
aaa
xor
and
pop
fistl
fnsave
inc
sub
test
pop
iret
jle
scas
dec
test
mov
push
ret
aaa
ror
add
pop
sbb
inc
mov
rcr
pop
subl
add
mov
lock
lods
or
sub
xor
ljmp
inc
shlb
push
lahf
rcr
push
or
arpl
jmp
jl
sub
addr16
xor
inc
into
cmp
sbb
lock
into
mov
push
outsb
pusha
les
jne
adc
inc
and
pop
sbb
loope
inc
cli
outsl
xchg
addr16
and
xlat
pushf
adc
inc
inc
push
out
sub
sbb
push
pop
sub
mov
jno
jp
sbb
push
push
ljmp
in
loope
adc
mov
test
jge
repnz
cmp
adc
mov
scas
xchg
xor
aam
adc
dec
fdivl
test
nop
jno
sbb
xor
cmp
ljmp
das
push
cmc
cld
sbb
xor
aaa
or
std
daa
mov
out
int3
mov
aaa
sub
js
jne
pop
cmp
mov
mov
ror
aas
iret
mov
test
xor
add
pop
dec
xor
pop
mov
adc
and
cltd
in
adc
rcr
dec
das
dec
out
in
call
or
add
pop
out
gs
xchg
scas
stos
or
pop
sub
mov
adc
mov
mov
orb
jp
pushf
mov
jb
mov
imul
pop
in
mov
pop
imul
adc
orl
cmp
andl
je
lret
movsl
jle
loope
mov
and
dec
and
add
push
pop
add
jne
inc
mov
dec
mul
pop
push
push
or
inc
mov
icebp
test
push
inc
test
andb
cmp
aaa
outsl
push
xchg
daa
sub
xor
aam
cwtl
test
pop
xlat
cld
pop
push
or
lret
in
test
outsb
mov
mov
repz
mov
jmp
mov
cmp
popf
push
adc
and
mov
jge
and
xchg
or
push
into
inc
pop
sbb
push
sub
sbbb
cmp
out
mov
sbb
ret
sbb
inc
orb
es
xor
punpckhdq
push
inc
add
fs
in
mov
fstl
xchg
jns
jo
mov
data16
cs
push
mov
fsubp
subb
inc
xchg
mov
frstor
jbe
push
mov
and
fnstsw
mov
cmpsb
jmp
cmp
ds
pop
adc
cltd
insb
mov
mov
cmpl
test
enter
imul
push
movsb
idivl
xlat
pop
out
cld
fnsave
mov
movb
loop
cmp
xor
int3
jno
jbe
outsb
dec
insl
sub
sbb
or
cwtl
cltd
jl
xor
out
mov
xlat
jo
hlt
call
lds
xchg
inc
mov
mov
lds
mov
pop
lcall
add
test
cld
icebp
adc
jnp
ljmp
ljmp
xor
cmp
sbb
fdivs
jge
xor
jmp
xor
out
sbb
or
add
test
lods
push
mov
jne
xchg
nop
iret
or
sbb
adc
jbe
mov
add
or
push
xor
ret
cmp
aaa
mov
mov
insb
sub
jbe
sbb
adc
and
jmp
mov
shl
pop
in
adc
aad
ja
loopne
add
sub
out
imul
incb
xchg
in
out
in
cltd
mov
test
and
jns
and
fbstp
inc
out
adc
pushf
pop
adc
int3
inc
mov
pop
dec
and
cmpb
cmp
cmc
stos
sbb
lds
dec
fldl
push
mov
or
push
divb
cltd
lods
dec
jbe
clc
sbb
std
push
add
inc
sahf
or
aaa
std
lods
shrb
mov
and
test
mov
jno
add
mov
insl
xor
or
pop
rolb
aas
popf
jg
stc
insb
inc
fcmovnb
cmp
fiaddl
or
xchg
test
xchg
lock
jb
and
fisubl
int
lcall
push
mov
fnstenv
andl
sarl
ljmp
jmp
and
sub
cmp
out
jno
adc
sbb
pop
sbb
fs
in
shrl
mov
xchg
pop
test
and
movl
fwait
outsl
dec
sub
mov
mov
sahf
inc
mov
lcall
push
cmpsb
movl
icebp
or
fistpll
rclb
xchg
jecxz
push
mov
call
xor
mov
roll
and
push
xor
jl
dec
mov
pop
aas
ljmp
cmpsl
or
cmp
inc
add
dec
jns
nop
pop
gs
push
stc
lods
add
hlt
push
stos
pop
loop
sbb
xor
lcall
inc
and
movsl
repz
icebp
xor
and
rcrl
push
test
ss
and
stc
and
pop
cmpsb
test
jae
sub
xor
jns
cmp
sbb
mov
aam
or
push
sbb
adc
sbb
test
pop
cmp
daa
insl
ss
pop
push
into
fwait
dec
fidivrl
jl
hlt
addr16
test
mov
arpl
rol
aad
cmp
sub
rol
or
sub
mov
pop
xor
inc
hlt
dec
push
xchg
mov
sbbb
sarl
jp
xlat
add
pop
pop
mul
adc
adc
xchg
push
sar
adc
mov
roll
mov
ret
andb
adcl
xchg
xchg
rorl
ret
adcb
cli
pusha
mov
movsl
fcoml
dec
and
inc
mov
push
mov
pop
rcll
int
mov
jns
mov
cmc
pop
pop
fidivrs
ja
loope
add
inc
mov
lods
sub
mov
cltd
inc
inc
cli
pop
movsb
sbb
leave
icebp
adc
adc
test
sub
stos
and
clc
inc
dec
jle
fcomip
push
xchg
sbbl
std
xchg
xorl
sub
popf
xor
loope
dec
fcmovb
push
repnz
adc
mov
adc
mov
jnp
sbb
stos
xchg
mov
xchg
insl
in
jp
xor
or
cmp
enter
jecxz
inc
jnp
data16
cmpl
pop
lds
inc
adc
jp
stos
sbb
mov
lret
ljmp
and
xor
out
jae
mov
mov
sbb
jl
and
push
mov
sbb
xor
outsb
ja
sbb
jmp
mov
mov
cmp
loopne
les
scas
pop
repz
lret
mov
sub
mov
cmp
mov
push
xchg
sub
xor
adc
insb
pop
mov
cmpsb
push
jecxz
mov
or
or
aaa
arpl
popa
outsl
out
mov
daa
into
push
sub
xor
cltd
divb
cld
imul
insb
lret
jge
out
popf
and
jnp
push
xchg
into
fstpl
pop
aam
jnp
or
xchg
addr16
sbb
mov
jge
jmp
aas
fcoml
fistl
push
push
movsl
ret
jns
cmpsl
ds
hlt
xchg
sub
lds
pop
cmpsl
mov
in
ret
insl
leave
and
jg
inc
rolb
clc
repnz
rsqrtps
push
and
out
vmovaps
fcom
mov
les
push
subb
out
outsb
xchg
rcrb
sub
and
xor
jae
adc
movsl
dec
sbb
jp
mov
ja
adc
lcall
iret
push
add
inc
mov
pop
ss
mov
and
cmc
cltd
loop
add
fwait
aas
mov
dec
adc
add
mov
mov
and
adc
fucomp
xor
fsubs
mov
sub
fcoml
and
pop
mov
jp
hlt
xor
xchg
invd
push
push
fwait
ljmp
adcl
mov
outsl
mov
mov
push
mov
inc
outsl
stos
push
fwait
xorb
lahf
movsb
neg
sbb
pushl
es
or
clc
cmp
popa
fbld
sahf
add
adc
xchg
ljmp
outsl
pop
cmc
sahf
xchg
pop
gs
or
inc
sahf
enter
lds
or
mov
pop
push
aaa
subb
cld
cltd
shr
or
stc
mov
mov
xchg
sbb
outsb
xor
cwtl
cmpxchg
jb
addl
xchg
stos
push
mov
setne
push
dec
mov
ret
sub
sbb
insl
or
add
sbb
and
push
jmp
in
adc
push
dec
sbb
mov
testl
rclb
cs
pushf
mov
inc
loope
jo
and
mov
daa
lea
cmp
or
adc
in
dec
pop
je
scas
loope
xorl
scas
sti
out
and
mov
sbb
add
or
hlt
pop
jge
xchg
cld
mov
cmp
jmp
pop
mov
add
sub
sbb
xchg
mov
aad
mov
xor
test
fwait
cltd
sub
je
jge
adc
push
scas
mov
fmuls
push
or
loopne
pushl
inc
ret
push
mov
xchg
aad
imul
repz
loop
imul
daa
lret
addr16
jge
inc
repnz
loopne
add
xorl
bound
xchg
mov
sbb
mov
dec
fsubs
pop
fs
fmull
rolb
mov
mov
or
gs
lods
popf
push
lods
sbb
sbb
testl
out
aad
mov
test
movsb
fsubrl
or
repz
or
sbbb
shl
ss
sbb
mov
xchg
jp
ljmp
add
ljmp
enter
fdivl
sti
mov
or
jecxz
push
inc
pcmpgtw
insl
scas
cmpsl
cmp
loopne
rorl
mov
adc
push
jl
cli
xor
popl
sub
adc
in
addl
or
pop
xchg
jne
roll
sub
addb
sub
lret
shlb
daa
aas
sub
aam
dec
shrl
rcrb
mov
dec
mov
jp
fnsave
dec
or
imul
push
ret
cmp
add
imul
fistps
mov
scas
xor
mov
cld
mov
xor
inc
mov
in
enter
arpl
mov
out
mov
sbb
mov
cs
int
inc
jnp
adc
and
rcll
pop
fldt
mulps
mov
jo
add
sub
pop
sbb
sub
rclb
adc
jge
and
inc
sbb
orb
jl
adc
inc
imul
sbb
pop
icebp
mov
push
scas
stc
cwtl
push
or
fdivs
pop
mov
lock
rcl
cmp
or
in
dec
les
adc
notl
push
xchg
rcll
pushf
test
jge
jl
fdivr
mov
ret
pop
cli
push
push
inc
outsb
push
test
icebp
push
adc
fiaddl
fcmovnu
jo
cmp
xlat
insl
lods
shlb
or
push
push
cmp
ret
shlb
sub
xchg
cmp
pop
dec
aaa
inc
mov
mov
xchg
arpl
mov
outsl
in
pop
fbld
bound
adc
scas
nop
xchg
rcll
and
jno
test
add
xchg
pop
mov
push
pop
je
stc
sbb
jns
mov
jo
dec
out
imul
and
ds
xchg
dec
inc
cmp
jg
mov
scas
test
ret
cmpsb
mov
cmp
js
xchg
cmp
sbb
cld
int
push
push
jecxz
xchg
test
fildl
test
es
test
cltd
jne
jno
dec
loope
stc
adc
jne
ljmp
sahf
pop
ja
stc
adc
pushf
and
mov
sbb
aaa
cwtl
mov
push
mov
stos
in
cmp
lret
jmp
mov
push
mov
cs
lods
pushf
loopne
pop
ret
dec
fcomip
ja
or
les
iret
aad
cmp
jne
mov
lods
pop
mov
sbb
mov
mov
pop
pop
adc
or
pop
mov
inc
push
mov
jns
or
popf
hlt
inc
dec
xchg
movsb
cwtl
add
xor
icebp
arpl
fstl
cld
hlt
mov
movsl
push
cmp
mov
nop
rcrl
mov
iret
pop
mov
cld
and
cmp
mov
out
mov
mov
xchg
add
fsub
fldcw
adc
xor
jecxz
inc
add
aad
lret
mov
xlat
hlt
jge
cmpsl
jp
or
rolb
movsl
cmp
mov
sarl
xor
xchg
jne
sub
ficompl
and
fwait
pop
xchg
es
mov
mov
dec
loope
and
lock
ret
sahf
cld
push
mov
imul
inc
inc
loopne
mov
lcall
pusha
and
add
sub
inc
movsb
ret
and
fsubrs
subb
pushf
adc
and
rcrl
or
pop
jno
mov
ficoml
xor
jnp
add
lds
pop
push
call
dec
mov
push
xor
xchg
pop
dec
sarb
iret
mov
sub
xchg
imul
rcrb
sub
decb
int3
cmp
jbe
cs
mov
cmc
lds
shl
pushf
sub
cltd
nop
inc
addr16
lods
test
in
shll
mov
pop
inc
aam
dec
into
leave
pop
stos
push
mov
adc
ret
jle
add
popa
lea
test
cli
xchg
mov
clc
lret
imul
adc
mov
bound
sbb
repz
out
and
pop
mov
xchg
ret
add
stc
les
add
clc
cmpsl
stc
lcall
hlt
popf
out
inc
loope
mov
fcom
rorb
inc
pop
inc
sbb
sbb
xchg
lock
xchg
addr16
sub
jge
jecxz
mov
xor
imul
xchg
adc
in
mov
adc
lea
mov
cwtl
xorl
jb
lret
lea
outsl
xchg
lds
imul
out
add
inc
mov
jp
xor
test
cmp
sub
imul
xchg
fistpl
sub
cmp
stc
and
dec
jbe
mov
insl
stos
ja
aad
jno
scas
imul
pop
mov
inc
stos
gs
add
cmp
lock
dec
in
icebp
jmp
in
push
subl
inc
into
test
mov
in
fst
mov
test
xor
lea
icebp
fdivs
in
cmp
dec
out
pushf
shr
jo
and
cwtl
popa
pop
push
out
mov
and
cmpsb
aaa
xchg
rcrl
jp
xchg
loopne
repnz
imul
mov
or
mov
xor
rorb
sub
fdivs
movsl
mov
scas
pop
cmp
pop
aam
cmp
adc
out
and
jbe
push
imul
lods
xchg
hlt
and
cmp
cmp
mov
mov
adc
dec
xchg
cmp
int
adc
pop
jp
idivb
call
jae
std
mov
scas
jmp
sub
test
sbb
mov
sub
xchg
mov
push
popf
inc
inc
lret
pop
or
rorl
mov
loope
test
imul
cmpsb
bound
mov
or
test
mov
mov
jo
jmp
push
push
dec
add
cmc
push
int
adc
leave
stos
jbe
test
cli
dec
and
ja
and
inc
dec
lret
fst
lahf
test
push
rcrl
cmc
sti
cmc
mov
leave
mov
out
push
int
mov
popl
inc
out
push
dec
sbb
mov
les
mov
add
mov
sbb
mov
dec
cwtl
loopne
or
nop
addb
stos
rcr
imul
repz
mov
adc
rorl
in
out
dec
les
push
xchg
fwait
out
pop
lahf
bound
pminsw
fwait
sub
push
lret
outsb
jo
sbbl
repnz
sbb
sbb
popa
pminub
movsb
push
js
or
mov
adc
out
mov
pop
lret
incb
ret
lahf
mov
fwait
cmpsl
mov
jcxz
adc
testl
mov
mov
movsb
add
adc
mov
sub
dec
shrl
or
iret
cli
push
dec
iret
mov
loope
loop
ret
jne
loope
pop
sbb
loope
icebp
pop
mov
xor
cmp
mov
xor
stos
sub
pushf
pop
rclb
push
mov
and
jae
jge
pop
cmp
pop
in
mov
cmp
pop
sbb
scas
loop
xchg
dec
jecxz
pop
fsubrl
ret
pop
mov
mov
lds
filds
stos
xchg
mov
repz
rclb
daa
fbstp
repnz
adc
or
inc
and
sbb
mov
add
fiadds
mov
shrl
mov
sub
rcrb
test
jecxz
imul
jl
fbld
insb
popf
imul
xchg
jne
ss
hlt
repnz
lcall
loope
sbb
xor
outsb
nop
lcall
inc
cmp
xchg
cmp
dec
dec
ljmp
mov
add
clc
and
push
cmp
sbb
xor
test
cmpsl
xlat
and
scas
pop
outsb
inc
dec
jo
addl
repnz
adc
imul
fnsave
mov
fs
add
shl
push
push
xchg
dec
imul
push
xchg
aaa
stos
mov
dec
fcomp
mov
cld
stc
push
mov
inc
cmp
arpl
push
fimuls
cmc
lods
ss
jno
add
xlat
xchg
jbe
mov
pusha
into
mov
or
mov
test
cmp
xchg
sbb
dec
into
inc
xchg
mov
hlt
pop
xorb
loop
mov
xor
insb
ret
sbb
mov
aam
mov
push
fbld
jbe
adc
div
or
cmp
jle
gs
push
enter
xchg
jb
ljmp
lcall
leave
sbb
jno
pop
test
loop
lock
shll
test
mov
lods
dec
and
dec
mov
les
dec
popf
outsl
scas
lock
cli
sub
pop
mov
aad
test
jl
inc
sub
pop
mov
leave
and
cwtl
in
mov
ljmp
addr16
xor
jecxz
test
popf
xlat
lret
pop
lods
je
sub
addl
xor
cmp
imul
fsubl
fidivrs
cld
push
scas
mov
sub
and
sub
in
jmp
fcmovnbe
jecxz
ds
jl
xchg
fwait
aam
pushw
fcom
and
faddl
sub
xor
mov
adc
mov
test
push
inc
mov
cmp
or
fisubrs
and
xor
push
jnp
es
ret
push
iret
sbb
jg
stos
lods
lods
cld
xchg
lahf
fmul
pop
movsl
sub
or
das
pop
sub
std
adc
inc
sbb
out
inc
int
add
add
fisubs
daa
cmpsl
xchg
pop
cmp
or
sahf
and
or
and
xchg
lods
xlat
stos
dec
pop
inc
lcall
adc
cwtl
pop
inc
pop
mov
int
jecxz
push
inc
sbb
xchg
jle
les
mov
lret
pop
es
jbe
xchg
push
inc
cmp
mov
inc
rcrl
add
out
fistpl
sti
dec
hlt
sub
add
dec
jo
cmpl
insl
loop
pop
inc
pop
or
cmc
push
mov
mov
jge
adc
sbb
push
mov
int
push
repnz
push
add
push
sbb
inc
push
push
jecxz
repz
mov
mov
aad
mov
lock
cld
dec
xor
push
bound
mov
cmp
pop
rcrb
popf
out
sbb
mov
cs
adc
xor
fsubl
cmp
mov
sbb
xor
xchg
add
sbb
pushf
daa
adc
repnz
aaa
xor
push
mov
addr16
pop
fisttpll
sti
mov
xor
xchg
out
pop
lods
clc
or
dec
push
mov
icebp
leave
push
mov
dec
ss
xor
push
mov
es
rolb
inc
inc
loop
push
das
cmc
mov
and
push
mov
fcompl
adc
mov
pop
divl
js
cltd
push
dec
repnz
inc
jne
clc
shlb
repnz
aam
je
pop
push
push
xor
out
movsl
popf
push
icebp
cmc
pop
je
dec
xchg
dec
add
jg
mov
inc
in
ja
pop
lds
mov
jmp
sub
mov
lods
mov
gs
cmpsb
aas
aam
in
or
sbb
std
bound
insb
mov
lret
rcrb
lret
sub
cmp
sbb
rcrl
scas
clc
mov
mov
mov
add
or
xor
adc
fbstp
jne
iret
fsubrl
cmpb
xchg
cvtps2pd
xor
cwtl
mov
scas
and
aaa
movsb
daa
outsb
push
mov
mov
pop
xchg
aas
mov
push
scas
scas
pop
lahf
bound
addr16
mov
addr16
and
mov
xchg
inc
and
dec
sub
or
cld
push
push
sahf
xchg
mov
jecxz
test
push
mov
jbe
scas
and
jne
xor
pop
mov
jge
adcl
lds
fisttpl
mov
dec
jae
and
pop
mov
sub
or
cmp
pop
push
mov
pop
jmp
fcmove
aas
in
ljmp
lcall
sub
in
sbbb
sbb
mov
loope
add
sahf
aaa
cmp
ljmp
and
sbb
imul
add
fnsave
out
sub
or
or
mov
fbstp
add
adc
cltd
les
mov
cmp
xchg
xchg
out
hlt
and
push
sbb
in
loope
lahf
mov
mov
aas
cmc
jmp
push
es
sub
mov
cs
push
pop
mov
cs
aad
lock
mov
and
and
jle
int3
inc
pop
mov
out
clc
clc
jno
jo
movsl
push
outsl
mov
xchg
fisubrl
xchg
pop
xor
push
fimull
sub
xchg
sbb
in
cld
sub
mov
outsb
mov
push
jbe
xor
lret
xor
push
sbb
test
clc
dec
incl
xor
inc
orl
jo
into
cltd
jg
dec
cmp
mov
sarl
mov
roll
mov
dec
and
nop
out
fsubr
out
lea
rsqrtps
dec
iret
movsb
xchg
imul
mov
xchg
fstl
push
mov
mov
push
test
pop
scas
pop
and
and
out
sub
shll
jecxz
xchg
inc
xchg
push
xchg
mov
dec
lret
and
loop
lods
dec
cli
cwtl
or
sbb
xchg
dec
mov
xor
fbstp
add
and
xor
add
inc
cs
pop
pushf
rorb
cmp
movsl
or
mov
movsl
in
jae
xchg
sbb
cmpsb
lahf
ret
push
clc
addr16
int
loopne
push
movsl
subl
cmpsb
mov
sbb
mov
cmp
pop
mov
cmp
test
adc
xor
adc
fildl
xor
push
bound
push
pop
jo
iret
sbb
sub
and
pushf
mov
push
pop
push
scas
inc
lret
call
in
dec
add
mov
adc
xchg
pop
xchg
cmp
push
or
cmpb
orb
scas
aam
jmp
dec
movsl
xchg
jecxz
jecxz
daa
andl
scas
cmc
js
fucom
repnz
jle
faddp
movsl
xchg
sub
fnstcw
sahf
sbb
or
mov
cmp
fwait
pop
sbbb
jb
jecxz
jne
xor
dec
jecxz
dec
jo
jo
out
jns
add
sub
mov
jbe
xor
push
cmpsl
lods
out
pusha
mov
or
fnsave
in
test
int3
inc
pop
aam
jns,pn
xchg
dec
dec
lahf
jge
lods
pushw
xchg
in
fmul
imul
inc
mov
push
jecxz
push
mov
adc
daa
push
sahf
jo
dec
or
in
inc
and
pop
enter
lods
mov
lods
mov
mov
arpl
ja
sbb
movsb
inc
add
pop
inc
push
fcomps
sbb
sti
xchg
push
add
sub
cmp
mov
and
scas
rcll
popa
inc
in
test
enter
lret
mov
pop
ret
jecxz
adc
addl
outsb
dec
sbb
fidivl
sub
mov
call
pop
rorl
jle
std
into
inc
pop
clc
pop
sahf
addr16
cmc
push
repnz
popf
bound
in
gs
xor
imul
bound
lods
fsubrl
ret
and
lds
cmc
test
aas
aad
or
push
xor
adc
aaa
std
lret
icebp
aaa
sti
xchg
mov
test
sub
xchg
jg
jo
mov
in
inc
loop
jnp
jle
in
inc
mov
fdivrl
into
sbb
mov
and
and
or
pop
mov
pop
xor
push
iret
push
imul
outsb
imul
movsl
push
ds
sub
lods
fnstcw
stos
pusha
je
cmp
xchg
fucomi
mov
adc
fwait
mov
nop
cmp
fmull
popf
mov
into
out
push
pop
imul
jp
xor
ss
fwait
rorb
push
mov
mov
popf
xchg
jo
push
mov
test
xor
xor
mov
scas
ret
mov
dec
push
cli
add
dec
sub
fstpl
jmp
jecxz
outsl
inc
mov
and
test
faddl
int
pusha
inc
enter
cmp
mov
mov
insl
mov
lahf
mov
cmp
jecxz
inc
out
pop
push
xchg
mov
inc
xchg
nop
or
fmuls
and
fs
push
mov
jmp
cmpsb
icebp
bound
insb
mov
mov
stos
jmp
jl
dec
or
xchg
or
inc
xchg
sbb
test
jge
subb
push
aad
inc
jnp
push
jbe
adc
jg
xor
cmp
andb
stos
adc
outsl
mov
lahf
push
or
pop
or
lea
inc
jns
imul
movsl
pop
pop
add
and
jbe
sub
push
xchg
mov
das
pop
movl
cwtl
push
arpl
into
idiv
mov
mov
xchg
testl
icebp
scas
cmp
pop
push
out
xchg
mov
arpl
and
dec
stos
dec
inc
pop
stos
lods
pop
pop
inc
inc
sbb
insl
andb
xchg
dec
imul
loopne
jp
inc
dec
pop
jmp
push
sahf
cld
pop
jnp
dec
sahf
int3
jmp
repnz
repnz
loope
jno
mov
out
pusha
push
fcompl
jae
icebp
dec
inc
add
cli
and
pusha
mov
mov
jnp
jl
sub
push
ljmp
mov
lahf
loopne
imul
les
push
sahf
lret
cmpsb
dec
xor
stos
popa
enter
sarl
jne
fmull
push
add
jg
xchg
ss
mov
int3
std
andl
push
test
cwtl
scas
scas
push
inc
hlt
pop
jecxz
dec
roll
dec
test
out
or
in
call
decl
dec
loope
faddl
popa
inc
js
test
sahf
pop
fildl
aad
jl
cmp
test
and
push
jnp
or
dec
mov
mov
and
xchg
xor
jb
and
inc
aaa
stc
ret
cs
mov
lret
push
mov
mov
xor
scas
cmp
xchg
cmpsl
add
ljmp
lret
sub
mov
cmp
push
popf
xchg
sti
gs
push
mov
push
lds
jbe
popa
fadds
rcrl
mov
inc
nop
in
sub
dec
pushf
jae
pop
loopne
xchg
scas
daa
cmp
scas
mov
sti
mov
ja
push
cmc
movsb
pop
call
jne
jmp
mov
sub
and
sti
or
fwait
jae
jo
sub
adc
cmp
rorb
popf
in
cmp
cmp
cmpsb
loop
subb
mov
ret
repz
mov
ljmp
mov
push
mov
mov
mov
push
mov
popf
push
xchg
mov
fbstp
jecxz
subl
negb
ret
je
jmp
mov
add
jecxz
inc
nop
cmpsl
cld
test
subl
sbb
cmp
loope
cmp
fld
aad
hlt
test
cs
rcrb
push
jmp
aad
xchg
pop
lret
lock
and
rcll
fmulp
scas
sub
jmp
cli
andb
push
xor
mov
int
sub
es
sbb
pop
mov
mov
push
sub
out
lds
cmp
cwtl
xor
push
aam
pop
std
dec
adc
sbb
sbb
sbb
mov
pop
ds
cld
mov
pusha
lret
mov
cmc
dec
loope
mov
jle
add
adcl
mov
or
sbb
les
fwait
push
ljmp
mov
insb
pusha
lock
xchg
cli
mov
mov
stc
xchg
push
push
mov
iret
mov
cld
andb
push
cmp
data16
inc
in
imull
lods
fnstcw
je
pop
lock
fs
dec
fnstcw
or
scas
in
xlat
decl
icebp
xchg
or
pop
leave
sbb
pop
pushf
repz
push
bound
fdivl
into
push
ss
pop
ss
popf
std
insl
xor
das
push
adc
jne
cmp
pop
xor
andl
addb
and
jge
lock
ret
push
push
jecxz
xor
ret
jns
out
leave
ffreep
jo
xchg
ds
clc
in
xor
push
push
mov
test
mov
add
out
and
pop
mov
and
es
or
jp
fsubrl
mov
inc
adc
sbb
fimuls
add
lods
xor
or
stos
sub
add
adc
jno
data16
pop
pop
leave
mov
ffree
mov
add
mov
push
movsb
or
stos
push
in
and
leave
dec
jmp
cmp
rol
sbb
jo
xchg
and
and
add
test
sub
xlat
fsubs
xor
hlt
push
xchg
cmp
jg
push
or
or
sar
xor
dec
adc
lcall
push
pop
ficompl
popa
mov
xchg
lret
push
subb
nop
jbe
adc
frstpm(287
insl
and
sti
xchg
test
xchg
lods
addr16
mov
adc
lret
adc
enter
pop
mov
scas
add
fisttpl
push
xor
fwait
push
and
inc
mov
xlat
fs
jecxz
cli
adc
in
cmc
xchg
or
push
outsb
cmp
and
ss
mov
gs
push
in
pop
ja
push
mov
dec
popa
sahf
sbb
cmp
cltd
std
add
das
arpl
cli
mov
and
test
push
inc
mov
ljmp
push
xchg
jmp
sub
shl
dec
pop
jg
or
mov
ja
iret
dec
ds
add
jno
test
lahf
xor
pop
dec
mov
mov
sbb
fs
ret
ja
mov
inc
cmp
xor
jns
mov
add
mov
mov
sub
cmc
cmp
cli
mov
dec
dec
pushf
pop
mov
and
call
loope
pop
push
inc
fwait
sub
sahf
sbb
pushf
mov
or
push
scas
xchg
mov
sbb
add
mov
testb
add
sti
cmp
data16
inc
fisubl
lret
gs
fmuls
lods
mov
jno
lods
int3
sub
mov
add
or
jg
mov
cmpsb
mov
outsl
call
jg
mov
rcll
jge
push
push
imul
xchg
std
les
subl
ror
addr16
adc
dec
cmp
jle
cmp
pop
fimull
xor
cmp
xlat
js
xlat
shlb
into
sbb
add
xchg
jne
cmp
outsb
pop
adc
test
stos
inc
out
nop
stos
xor
mov
stos
xlat
cmp
fisubrs
fistpll
lret
insl
sbb
fcmovnu
fldenv
mov
sub
push
push
lret
cld
adc
incb
mov
pop
enter
jg
mov
es
sbb
ffree
je
mov
add
pop
cmp
aad
aaa
enter
in
inc
cmp
aad
cs
jnp
xchg
test
repnz
rolb
inc
test
ret
push
lods
hlt
insb
aad
cwtl
cmp
push
push
imul
sahf
inc
shrl
in
rcrl
push
dec
inc
cltd
stos
mov
sbb
xchg
pop
lret
push
filds
and
ljmp
int
shl
adc
inc
adc
dec
mov
dec
mov
mov
stos
inc
fisubrs
loop
or
jns
lods
mov
andb
jo
cmp
mov
fistl
mov
stos
push
ljmp
jl
inc
pop
sub
into
data16
int
aad
roll
jae
xor
loop
jae
sbb
mov
out
test
xor
mov
lock
aam
jmp
adc
xchg
xor
sbb
stos
sub
movsl
jmp
jns
cli
push
mov
loope
dec
xor
pop
and
xchg
out
or
js
pop
aad
in
jge
sbb
cmp
inc
daa
jle
daa
into
bound
cs
clc
dec
cwtl
je
or
inc
or
aam
add
cmc
pop
jnp
cmc
inc
add
lahf
out
dec
cs
nop
xchg
and
aam
es
shrb
adc
imul
pop
lahf
push
stc
es
mov
jp
pop
pushf
dec
repnz
xchg
sub
fsubl
add
sbb
and
inc
mov
or
daa
inc
aad
jp
mov
push
push
test
popw
loope
and
fwait
mov
mov
fsubrs
mov
xchg
push
outsl
popf
loop
xor
hlt
mov
ljmp
lret
adc
ret
fstps
inc
out
push
call
sbb
push
pushf
aam
sub
xchg
add
ja
adc
jp
and
pop
sbb
les
inc
dec
out
daa
mov
or
cli
nop
nop
cmpsl
xchg
sti
push
and
mov
repnz
jb
test
pusha
push
xor
nop
mov
hlt
xchg
and
mov
or
fistpll
shlb
outsl
sti
scas
loopne
jae
ss
and
or
enter
loope
xchg
xchg
push
push
shll
inc
out
daa
cld
jo
xor
repz
and
jno
or
pop
ds
fwait
or
adc
clc
imul
xchg
cld
lahf
lret
jne
ror
pop
in
xor
jno
popa
pop
out
imul
mov
movsb
call
dec
push
outsl
mov
jmp
mov
inc
arpl
daa
dec
pop
shll
out
pop
hlt
sahf
jle
in
fstpl
sub
movsl
add
in
mov
xchg
fstpt
mov
out
sub
ljmp
bound
cmc
jne
cmpsb
imul
jg
xchg
hlt
push
stos
inc
ror
int3
jns
and
movl
jmp
jb
xchg
aad
or
push
mov
out
mov
add
fstl
push
mov
mov
sub
add
cmp
sub
pop
add
sbb
lcall
or
aaa
cmp
mov
sahf
xorb
inc
sbb
stos
in
mov
es
jl
lcall
mov
add
pop
ror
push
orb
pop
adc
sub
and
rolb
imul
cmp
mov
jg
xchg
jns
jge
jns
mov
ficoms
sbbb
fwait
scas
es
fiaddl
js
dec
cmp
adc
loope
mov
and
jg
push
stos
testl
addr16
pop
inc
ds
popf
or
xchg
push
in
mov
ss
out
or
sub
fmuls
out
xor
sub
call
pop
arpl
mov
mov
imul
in
sub
add
cltd
inc
mov
dec
int3
mov
xor
mov
xor
or
mov
inc
inc
dec
ficoml
in
sbb
sub
imul
xor
gs
es
push
mov
es
xchg
sbb
loope
ficoml
mov
push
lods
ret
frstor
orl
jg
stos
push
mov
pop
bound
or
lret
push
enterw
cmp
xchg
loope
hlt
xchg
mov
loop
ret
adc
push
cmp
pop
hlt
push
mov
aam
pop
pop
lds
sbb
inc
les
adc
sbbl
inc
xchg
sub
mov
pop
mov
mov
and
jnp
push
stos
dec
mov
pop
int3
dec
xor
push
fstl
out
jmp
push
leave
lea
out
stos
and
or
mov
pop
jns
out
and
lock
sub
dec
inc
call
in
repz
dec
out
je
movsl
bound
inc
cmovo
movsl
shlb
es
cwtl
add
jp
out
cld
loop
sub
sbb
lahf
add
pusha
mov
inc
sub
aaa
daa
daa
xchg
sub
test
cs
fs
sub
xor
mov
shlb
jnp
push
mov
das
or
mov
sbb
call
int3
fists
sbb
mov
scas
jmp
adc
adc
and
mov
sbb
xor
mov
jns
sbb
test
fldcw
outsb
cltd
shl
xchg
mov
xor
cltd
jb
sbb
cld
sbb
je
adcl
stos
push
in
mov
ret
cmpsb
mov
in
mov
and
mov
and
loopne
mov
mov
loopne
and
jmp
movsl
outsw
ljmp
and
cwtl
xchg
push
inc
jbe
cltd
adc
lahf
test
mov
adc
pop
stos
cmpsl
xor
out
cmp
fistpll
jns
mov
jge
inc
push
out
dec
mov
adc
loope
xor
and
sub
xor
addl
popa
dec
mov
mov
lea
add
lock
jno
mov
outsl
add
das
push
stos
pop
lret
cmpsl
rcll
daa
clc
add
push
jp
fstpt
mov
or
fwait
pushf
data16
cmp
dec
mov
imul
clc
lods
mov
in
ficoml
xor
fldenv
cmpsb
ljmp
gs
xor
pushf
fldenv
bound
movsb
jge
push
xor
fsubrl
enter
jp
int3
dec
pop
jg
add
cltd
pop
insl
pop
jnp
xchg
inc
test
jmp
adc
add
cmpsb
cmp
mov
pop
shlb
arpl
negb
bound
out
pop
int3
loopne
pop
or
cmp
dec
fistpl
out
mov
push
iret
stc
push
jle
in
or
cmc
je
xchg
pop
cmpb
jns
cmp
sar
daa
test
push
das
pop
jbe
pop
jb
lahf
and
jecxz
mov
mov
cmc
pop
jbe
enterw
or
pusha
mov
loop
in
cli
pop
repnz
xchg
jne
outsl
cmc
dec
test
cmp
ficoms
dec
sbb
std
xchg
xchg
sub
loope
xchg
inc
mov
push
aas
mov
mov
pop
push
mov
cli
movsb
hlt
xchg
aad
test
icebp
test
xor
lds
into
lret
mov
sub
push
outsl
and
sub
adc
jns
and
ficomps
sbb
and
sub
int3
pop
add
imul
add
popf
out
and
iret
aad
daa
mov
call
scas
add
mov
mov
test
sbb
jb
jg,pn
mov
mov
push
sarb
out
out
or
lds
clc
int
arpl
je
sbb
jno
hlt
pop
cmp
out
ljmp
push
imul
pop
cs
mov
sti
mov
pusha
cmp
gs
xchg
sbb
and
mov
adc
clc
scas
ljmp
cmovns
es
popa
out
mov
stc
fnstenv
in
push
adc
mov
dec
jno
scas
xchg
push
arpl
int3
mov
mov
dec
cli
loop
push
pushf
test
dec
xchg
jnp
xchg
pop
insl
jmp
int
dec
lcall
fdiv
push
not
fnstcw
lret
jne
mov
daa
incb
ds
test
and
stc
xchg
insl
aad
es
js
inc
dec
or
xchg
or
inc
add
and
pop
stos
in
bound
lds
incb
lds
stos
clc
jecxz
ja
push
mov
loop
je
repz
xlat
pusha
sub
imul
jmp
sub
mov
mov
mov
xchg
pusha
add
loop
loop
push
leave
push
adc
mov
ja
adc
jecxz
inc
mov
xchg
inc
pop
mov
das
imul
ljmp
scas
aad
test
dec
fisttps
mov
cli
lahf
push
cltd
movsb
add
aas
inc
pop
mov
mov
push
in
pop
pop
gs
in
mov
add
mov
scas
lods
icebp
xor
rcl
and
mov
xor
popa
add
dec
mov
and
ret
mov
cmp
xor
sub
mov
and
pop
cmp
mov
cld
inc
loop
imul
ss
sbb
out
in
mov
ja
sub
pop
xchg
les
fnstsw
jl
sarl
int
lret
jo
push
xchg
fnstenv
aad
push
jbe
test
sub
rcll
movsl
out
pop
and
addr16
jbe
push
sub
inc
push
and
xor
xor
sub
sbb
fisubl
pusha
pop
dec
movsl
add
xchg
mov
not
mov
insl
cmp
dec
jae
test
xor
jb
inc
inc
mov
aam
push
test
daa
jnp
inc
pop
mov
scas
jmp
orb
ja
sub
xchg
push
pushf
sbb
adc
loope
std
fbld
loope
call
xorb
sbb
mov
adc
hlt
and
sbb
mov
pop
pop
in
xor
push
stos
sbb
loop
xchg
dec
outsl
jo
pop
hlt
xchg
mov
and
test
cmp
add
fimuls
arpl
sub
xchg
test
xchg
inc
pop
movsl
push
rcr
sbb
nop
hlt
mov
push
sub
or
jge
cmp
and
fsts
fbld
out
push
push
xchg
push
sahf
icebp
lahf
stos
fstpt
in
in
jecxz
lret
shl
lods
xchg
jecxz
test
mov
mov
mov
add
mov
icebp
js
pop
popf
test
and
cwtl
ds
mov
mov
imul
mov
in
add
push
pop
jne
loope
push
insb
scas
enter
mov
mov
fnsave
ret
adc
pop
mov
sbb
sub
dec
pop
in
dec
imul
mov
push
pop
ret
mov
jo
pop
jbe
imul
dec
inc
or
sarb
jne
or
jmpw
xchg
xorb
cltd
mov
xchg
pusha
and
sub
adc
stc
ja
and
add
xchg
xlat
out
push
cmpsb
stos
icebp
icebp
dec
roll
data16
aam
jo
aas
jb
shlb
mov
dec
cwtl
sbb
sarl
daa
in
mov
push
hlt
fs
inc
testb
inc
mov
test
cs
mov
sub
cltd
lods
int
test
ds
and
inc
mov
jmp
inc
sbb
adc
ja
add
pop
addb
jb
les
subb
xchg
dec
add
mov
xor
notb
cmpl
hlt
jle
lods
mov
test
xchg
loop
outsb
mov
imul
subl
inc
lret
cltd
dec
sbb
das
cmp
xchg
xchg
cmp
into
inc
ret
jmp
sub
and
gs
push
push
out
xor
pop
xchg
sub
pusha
jmp
pop
mov
inc
stos
pop
jmp
jno
mov
insb
clc
es
int
mov
sbb
outsb
push
call
and
ss
sbb
in
xchg
mov
jecxz
repnz
jae
jp
insl
int3
scas
imul
mov
orl
gs
dec
jb
mov
mov
xchg
cmpl
pop
pop
inc
add
cmp
and
inc
and
std
jnp
imul
loop
cmp
imul
add
out
shll
push
lods
jp
cmp
pushf
fnstsw
icebp
scas
add
xor
andb
fmull
iret
clc
xchg
leave
inc
dec
adc
sbb
in
fimuls
xchg
inc
add
sbb
push
inc
jnp
adc
push
sub
daa
shll
aaa
cltd
paddb
xlat
jb
cmp
jno
add
push
mov
xchg
nop
enter
cwtl
pop
cld
jb
outsl
outsl
das
in
mov
pop
push
int3
xor
imul
adc
add
aam
movsb
arpl
inc
call
dec
add
imul
inc
pop
cmp
inc
lods
and
data16
dec
sti
mov
xor
adc
sti
and
js
enter
out
adc
jnp
imul
push
into
sub
mov
push
call
ljmp
and
dec
mov
pushf
ret
jecxz
xchg
filds
xor
cmp
xor
pop
fisubrs
lahf
cmp
jne
pop
push
std
jmp
adc
arpl
shlb
jne
jne
push
jb
mov
int3
movsb
lret
insb
ja
mov
scas
push
push
in
icebp
jl
data16
lods
xor
add
test
xor
add
or
sbb
xchg
int3
inc
adc
add
clc
xor
cmp
or
cs
scas
mov
push
pop
std
outsb
inc
mov
mov
dec
popf
mov
jns
rorb
daa
popf
fs
std
and
mov
xor
es
pop
rcll
mov
aam
add
divl
cs
jecxz
cltd
add
jp
popf
jmp
jo
jno
add
pop
repz
test
lock
dec
pop
ds
mov
push
add
inc
xlat
fcompl
sahf
test
dec
jmp
lods
dec
jle
shr
or
dec
xchg
jne
in
sahf
sub
xchg
mov
mov
xchg
xchg
scas
sbb
test
xchg
xor
sbb
inc
insl
xor
popf
rclb
std
sub
mov
cmp
xchg
fldl
or
or
aam
cld
mov
push
or
xchg
out
lea
push
icebp
push
in
dec
rep
jmp
test
ret
sub
inc
rorl
add
scas
sbb
and
pop
aad
xchg
mov
xchg
movq
push
push
ja,pt
push
loopne
push
ljmp
inc
xor
sahf
add
lods
iret
leave
pop
xchg
aam
xor
dec
insb
and
pop
dec
add
call
shr
out
in
mov
andb
outsb
data16
popf
mov
nop
loop
cmp
out
movsb
dec
outsb
shlb
pushf
movsb
jae
sbb
adc
sub
inc
repz
pop
nop
pop
mov
stc
lods
in
ljmp
mov
rcr
insl
jge
jp
jle
pop
jbe
int3
or
dec
scas
mov
mov
dec
outsl
adc
imul
jns
lret
jmp
fsubrs
mov
sbb
xchg
sti
mov
add
ret
flds
sbb
push
jge
xchg
add
add
dec
fs
lods
or
jnp
mov
cmp
sbb
xor
push
rcl
popa
aam
repz
sub
cmc
outsb
add
fistl
or
insl
aam
xor
mov
lea
jb
mov
push
jnp
scas
mov
xor
mov
sbb
mov
xchg
nop
cmc
nop
fisttpll
mov
inc
sti
cld
inc
and
xchg
and
sbb
jl
daa
pop
inc
clc
in
popa
sub
jg
into
popf
jo
sbb
mov
dec
and
rcrl
mov
fmuls
addr16
jbe
pop
mov
testl
mov
loop,pn
js
arpl
inc
mov
movsb
dec
sub
and
mov
inc
adc
adc
aas
and
arpl
mov
sub
testl
lea
fwait
jb
outsl
rcrb
push
hlt
xchg
xor
dec
xlat
test
cltd
xor
jmp
daa
hlt
inc
and
ret
out
mov
xchg
negl
inc
adc
push
popf
es
pop
dec
rclb
mov
inc
lcall
cmpsb
int3
daa
mov
jo
add
sbb
mov
adc
gs
and
mov
movsl
jg
pop
xchg
sub
or
ja
cs
jne
loop
dec
fwait
sub
in
push
jp
ss
clc
and
adc
cwtl
imul
pop
movsb
mov
repz
and
mov
mov
sbb
push
mov
add
sbb
jno
adc
push
mov
stos
push
lea
inc
int3
mov
les
loopne
or
push
leave
xchg
jb
jge
adc
sbb
jno
lock
ja
movd
add
fists
addr16
gs
xchg
stos
dec
dec
into
insl
push
pop
mov
js
cli
fs
call
jmp
mov
jbe
jbe
mov
cmp
and
les
inc
or
jecxz
mov
mov
pop
mov
jns
jl
and
xlat
and
push
adc
loop
lods
push
push
imull
lds
loope
dec
sbb
jbe
mov
lcall
stc
add
sahf
cmpsl
mov
es
adc
bswap
loope
fs
xor
scas
insb
sarb
imulb
stos
sbb
xor
in
pop
nop
push
iret
xchg
out
xor
inc
lret
outsb
es
pushf
push
dec
aam
lds
add
adc
jmp
rclb
jnp
mov
jp
sarl
mov
xchg
jl
loopne,pn
iret
cmp
jo
inc
lret
add
mov
pop
jl
insl
loop
xchg
sar
xchg
fmulp
mov
sbb
cmp
sub
iret
dec
shlb
adc
xor
test
jl
addl
and
jle
inc
icebp
pop
mov
push
pop
scas
cmpsb
loope
jecxz
inc
mov
xlat
scas
cs
pause
loope
outsl
push
xchg
aaa
pop
mov
mov
xor
lahf
inc
push
bound
loope
xchg
arpl
cmpsb
inc
pop
mov
sub
loop
pusha
enter
daa
leave
lods
int3
cmp
jbe
inc
jns
dec
ret
leave
push
cmp
ret
inc
fsub
mov
sub
mull
push
sub
inc
push
and
cmpsb
int
cld
lea
adc
sbb
imul
test
cmc
xorl
lcall
pop
pop
pop
pop
dec
sbb
mov
test
sbb
or
dec
sub
sbb
mov
inc
leave
or
cltd
cvtps2pi
adc
mov
test
mov
popf
loope
pop
subl
cmp
jle
push
lea
inc
mov
testl
jo
fsubrl
pop
xor
mov
sub
stos
jbe
lock
in
call
fcoms
lret
repnz
rcrb
cmp
dec
sub
mov
xchg
mov
fstl
inc
push
and
outsb
lds
push
and
jae
mov
and
int3
pop
sub
js
inc
sbb
jbe
mov
push
jo
pop
or
test
js
inc
shll
sbb
pop
fcomps
addr16
xchg
mov
test
lock
jge
mov
out
sbb
add
lahf
addl
jg
std
sub
jno
sub
add
or
lret
push
xchg
in
stos
inc
lods
dec
mov
sahf
add
test
inc
xchg
or
or
pop
popf
push
enter
sub
loop
adcb
mov
pusha
xor
sarl
fcoms
cli
dec
inc
mov
sub
mov
xchg
lret
push
mov
jb
into
rcrb
push
jne
scas
ja
dec
mov
jecxz
sub
les
lods
cmpl
cmc
push
inc
pop
sub
imul
test
or
adc
das
rcrl
mov
sbbb
jge
pop
js
lea
fnstsw
shll
jp
jle
lods
in
mov
out
pusha
mov
adc
jae
push
ja
mov
add
and
mov
ss
or
js
push
insb
aaa
pop
and
inc
push
int3
mov
and
insb
data16
jns
cmpl
into
xlat
into
and
xor
inc
scas
and
nop
lret
cmc
insl
stc
das
xor
xor
loopne
gs
into
call
xorb
adc
cwtl
popa
mov
icebp
sub
scas
mov
pop
loop
sahf
fxch
hlt
in
into
mov
xor
aaa
lret
jb
lea
mov
pop
sar
iret
mov
jge
push
hlt
push
jp
sbb
bound
or
pop
mov
lret
ret
and
lahf
pusha
repz
or
sti
xor
ds
inc
cmp
popf
fdivs
das
jecxz
sub
dec
jae
arpl
bnd
xchg
call
cmpsb
int3
hlt
xorb
mov
cmp
lahf
sbb
test
sarl
dec
push
daa
xor
aas
mov
aas
shlb
stos
dec
xchg
xor
sbb
fiaddl
sbb
ss
jnp
pop
movsl
in
adc
insb
ljmp
mov
and
mov
mov
mov
cmpsl
aaa
outsb
shlb
mov
dec
outsl
sbb
sbb
xchg
mov
xchg
add
int
cmpsl
fldcw
jb
and
fcmovbe
shlb
mov
cltd
outsb
jge
daa
dec
enter
cmp
xchg
sub
popf
cwtl
jp
xchg
in
out
arpl
cmp
jnp
fwait
addr16
xchg
test
incl
aaa
mov
cmp
and
cmpsl
rclb
mov
ss
push
not
rol
outsb
pushf
addb
mov
es
adc
jmp
rclb
adc
jg
mov
jnp
pusha
das
aam
xchg
jae
jbe
movsl
xchg
pop
jne
add
cmp
pop
loopne
mov
xchg
add
sub
push
scas
pop
xchg
mov
add
xchg
and
mov
cmp
lds
pop
lret
ret
sbb
mov
call
add
jmp
push
dec
test
int
cwtl
in
mov
adc
and
pushf
call
into
loope
dec
mov
shll
jns
mov
xor
mov
arpl
popf
mov
xor
jl
inc
cmp
cs
arpl
push
icebp
and
mov
out
in
icebp
jbe
lret
add
mov
sub
test
clc
jne
cmpsb
das
jp
inc
fisubs
jns
lret
and
mov
hlt
fsubs
cmp
gs
nop
dec
mov
xor
aas
pop
dec
xchg
lock
xlat
jp
ror
and
vfmsubadd231pd
and
popa
xor
cmc
mov
mov
or
cmpsl
popa
test
dec
aaa
add
test
fwait
call
dec
in
push
ljmp
insl
add
test
popl
jne
popf
sub
sub
fstpl
les
add
pop
out
lods
adc
adc
dec
mov
aaa
add
push
jae
mov
push
movsl
inc
push
inc
xchg
in
sarl
inc
dec
test
loop
fbstp
fnstcw
mov
jge
mov
sahf
dec
lcall
cmp
adc
mov
dec
das
mov
jg
stos
cmpsl
adc
mov
outsl
imul
sahf
scas
mov
cmp
sub
enter
xor
add
js
sub
lahf
push
idivb
xor
push
out
mov
push
or
mov
dec
sbb
mov
xchg
in
push
fistpll
xor
gs
jge
xor
add
push
dec
mov
lcall
repz
stos
push
mov
icebp
int3
push
lock
push
sub
mov
imul
iret
cmp
mov
stc
ret
repnz
aam
loop
imul
add
pop
fmull
pop
mov
dec
jbe
and
and
lea
mov
addb
nop
push
jle
or
out
dec
or
adc
mov
inc
jge
pushl
mov
inc
in
jb
mov
in
sbb
clc
enter
shr
call
add
hlt
push
inc
sbb
pop
push
in
cwtl
lds
cmp
popa
lds
add
adc
ja
stc
xchg
adc
xchg
mov
jp
cmc
ja
stos
cmp
mov
ja
hlt
jp
outsb
loop
add
fldl
mov
rcrb
dec
aam
cmp
sub
cs
adc
pop
test
xor
sub
push
out
mov
lea
adc
int3
movsl
test
lret
and
xchg
rorb
sub
std
sub
ss
sahf
or
sub
sub
mov
or
xchg
mov
scas
test
xor
cmp
cmpsb
sbb
bound
rcll
push
mov
mov
inc
mov
jne
flds
out
push
subl
popf
cmpsl
xlat
xchg
or
aam
popa
adc
push
loopne
mov
es
daa
aas
dec
cs
sahf
clc
fcoml
movsb
mov
lahf
push
jp
and
mov
data16
mov
mov
sahf
cmc
mov
inc
jbe
sub
std
push
stos
mov
test
jae
sub
inc
adc
mov
sbb
mov
std
outsb
mov
test
dec
add
pop
pop
pop
add
sub
ret
movsl
rdtsc
or
cmp
adc
scas
mov
ficoml
mov
int3
push
push
imul
push
inc
outsl
mov
jecxz
push
xchg
outsl
mov
adc
xor
cwtl
push
jmp
enter
mov
xorl
scas
adc
mov
cld
pop
fisubrs
hlt
das
or
mov
push
push
mov
sbb
push
sbb
adc
popf
lret
sub
scas
sub
imul
jne
add
popa
shl
jbe
cld
mov
pop
adc
andl
pop
dec
pop
inc
mov
cli
aam
das
nop
out
fs
jg
test
data16
cmp
sbb
push
ja
push
add
xchg
sub
dec
retw
loop
push
call
mov
xor
push
mov
popf
sarb
repz
xor
add
daa
xchg
popa
push
sub
or
and
rolb
push
or
loop
mov
push
push
leave
arpl
jo
out
ja
jl
xchg
cmp
ja
cli
les
sub
out
fcomps
lea
add
sbb
sbb
fdivl
adc
fimuls
lret
in
and
movsl
add
and
ja
lods
push
sahf
xor
push
testb
popa
sub
test
aas
lods
test
pop
xchg
push
jno
fisubrl
and
mov
fsubs
and
pushf
mov
lods
dec
lea
addr16
jne
cmc
sahf
test
outsb
sbb
es
push
stos
cltd
insb
loope
subl
mov
pop
add
nop
aad
sbb
jmp
ljmp
and
loope
arpl
sbb
xchg
test
xchg
fwait
dec
jbe
adc
fldz
push
jp
push
fwait
cli
dec
push
rol
les
movsb
cmp
into
mov
into
fwait
nop
sbb
movsl
adcl
pusha
int3
lods
inc
scas
mov
push
mov
xchg
ret
out
pop
fistl
mov
mov
dec
inc
pop
sub
sub
sahf
int3
mov
mov
lret
js
jg
adc
int
test
cld
push
xor
int3
pushf
add
mov
dec
fwait
mov
dec
fs
in
insl
push
movb
add
ljmp
dec
dec
adc
sub
and
cld
push
gs
pop
add
addr16
shlb
into
push
test
arpl
adc
xor
mov
fimull
lock
cmp
negb
pop
das
hlt
icebp
xor
push
push
cmpsb
pop
xchg
scas
inc
mov
call
adcl
lds
daa
scas
mov
cltd
jne
xor
hlt
test
or
push
pusha
mov
pop
mov
ret
rcrb
fdivs
fadds
inc
mov
ret
loopne
and
xchg
jmp
add
daa
and
dec
pop
push
aaa
enter
inc
cltd
sbb
sbb
xor
or
lcall
and
icebp
sbb
repnz
xchg
inc
roll
sub
out
movsb
mov
shrl
cltd
in
stos
in
xor
sti
fsubrl
jp
addl
mov
outsb
xchg
push
xchg
loopne
sub
mov
and
or
fs
xchg
mov
mov
dec
pop
jne
iret
mov
cmp
rorb
out
mov
mov
fisubrs
hlt
repnz
push
aas
insl
dec
pop
lea
vunpckhps
in
push
loope
lods
out
pop
xor
scas
imul
push
shr
sbb
inc
xlat
cmpsb
call
xchg
data16
aam
gs
jl
mov
loop
sub
aaa
or
mov
sbb
inc
imul
jle
shr
aas
push
pop
std
rorl
pop
icebp
inc
rcr
hlt
test
sbb
mov
shll
stos
jg
push
int
cmp
fs
push
int
sub
in
int3
arpl
xchg
in
mov
adc
jno
mov
lret
fs
cmp
adc
add
lcall
jbe
and
ja
adc
push
lds
std
inc
mov
mov
in
icebp
adc
jo
lcall
cli
and
outsb
fstps
repnz
add
mov
in
mov
cld
hlt
mov
xchg
addr16
shrb
mov
in
jns
mov
add
mov
pop
xchg
dec
rcrl
jne
inc
ret
jno
std
push
int
in
int3
mov
add
sub
loope
into
inc
test
xchg
popf
dec
daa
das
insb
std
xor
xor
sub
inc
daa
and
inc
and
jle
xlat
outsl
dec
scas
ljmp
pop
loop
push
out
movsl
xchg
add
daa
sahf
xchg
outsl
clc
outsl
seto
mov
mov
mov
lods
adc
in
dec
pushf
or
hlt
push
xor
es
int
mov
mov
testl
pop
pop
or
jp
push
fs
call
pop
outsl
js
aas
inc
cmc
sub
and
repz
mov
adc
inc
inc
inc
or
stos
scas
xchg
push
pop
pop
fistps
cmp
mov
mov
cwtl
and
xlat
pushf
popa
bound
jge
ret
sub
jl
ret
jecxz
sbb
sahf
div
shl
mov
ret
pushfw
in
jg
mov
jno
mov
fistps
jecxz
mov
xchg
outsb
nop
lods
push
in
loopne
pop
outsb
mov
lret
mov
xor
sbb
inc
test
lcall
or
ret
mov
xchg
popf
or
lcall
xchg
or
out
sub
stos
jmp
out
cmp
gs
xor
push
mov
cmp
movsl
xor
in
dec
jmp
adc
pop
cmp
aaa
jle
mov
xor
sbb
rol
inc
mov
or
jno
mov
and
and
push
out
loopne
push
pop
leave
push
stos
cmp
pop
shr
stc
mov
and
movsb
dec
cmpsb
dec
sub
push
mov
sbb
arpl
mov
inc
sub
or
lret
and
push
jae
push
pop
fstl
bound
shrl
jno
mov
adc
or
or
daa
add
push
notl
dec
mov
outsl
scas
fsubs
or
imul
sbb
pop
pusha
repz
sbb
mov
or
mov
pop
shlb
sbb
stc
jle
xor
mov
cmp
xchg
jg
and
idivl
dec
arpl
enter
adc
jnp
lret
clc
jecxz
inc
dec
dec
push
out
pushf
inc
add
fcomip
dec
fsub
insl
cltd
jmp
lret
dec
dec
cmp
mov
xchg
add
int
pmaddwd
dec
mov
and
sbb
pop
aaa
test
cmp
testb
adc
xor
xor
inc
xchg
mov
das
sbb
stc
pop
js
cmp
jg
sti
in
fnstcw
adc
cwtl
lret
mov
ds
gs
andl
mov
push
pop
fs
or
mov
inc
gs
xor
int
sbb
mov
add
and
sbb
or
push
clc
popa
or
test
ret
int3
or
fnstsw
inc
sti
in
inc
or
in
and
add
enter
xchg
pop
jb
popa
aaa
xchg
cmp
out
push
mov
loop
sbb
push
jb
ja
inc
inc
in
push
