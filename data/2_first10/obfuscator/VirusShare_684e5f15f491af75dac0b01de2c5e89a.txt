loopne
add
mov
out
outsb
leave
mov
int3
fistl
es
lcall
adc
xchg
inc
and
lret
add
test
pop
adc
mov
addb
xchg
iret
movsl
sub
fisttpll
fistl
dec
lahf
in
fwait
andb
shlb
adc
dec
mov
test
pop
loop
dec
xchg
ljmp
add
mov
add
mov
popa
fistl
imul
mov
or
mov
mov
cmp
mov
jb
cmp
jb
cmp
jb
cmpw
je
cmp
jae
mov
mov
cmp
jne
pop
pop
ret
int3
push
mov
sub
andl
push
push
push
pushl
call
cmp
jb
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
add
cmp
mov
mov
jbe
cmp
movswl
mov
jae
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jb
mov
mov
add
mov
lea
mov
mov
mov
movzbl
mov
movzbl
sub
jne
mov
mov
mov
sub
mov
cmpb
je
incl
mov
mov
mov
movzbl
mov
movzbl
sub
je
test
jl
jle
xor
inc
test
je
mov
inc
cmp
mov
jb
mov
pop
pop
pop
leave
ret
mov
mov
add
mov
jmp
xor
jmp
push
mov
sub
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
mov
push
push
mov
mov
mov
pop
pop
lea
mov
cmp
jb
lea
cmp
jb
lea
cmp
jb
mov
push
pushl
call
mov
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
cmp
jbe
mov
lea
push
push
call
push
pushl
lea
push
mov
lea
call
add
xor
lea
mov
add
mov
inc
add
cmp
jl
cmpl
jbe
mov
lea
push
mov
sub
push
push
call
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
pushl
call
push
push
call
push
mov
push
push
call
push
pushl
push
call
mov
movzwl
push
pushl
lea
push
call
add
pushl
mov
push
push
pushl
mov
pushl
pushl
call
pop
pop
mov
pop
leave
ret
add
add
adc
insl
or
aaa
jle
shll
faddl
outsb
in
loope
in
fs
push
mov
dec
arpl
pop
or
loope
shl
lea
aaa
or
pop
dec
rcrb
inc
pop
xchg
scas
push
loop
mov
mov
adc
push
add
fwait
es
sub
rcrb
shl
ficompl
notl
adc
or
jg
sarl
inc
pop
mov
push
jecxz
andb
fidivs
and
mov
xchg
imull
pop
enter
gs
inc
notl
ss
or
mov
cmp
fiaddl
in
dec
gs
adc
mov
mov
scas
aam
pop
rcrb
in
xor
nop
and
or
cmpsb
cs
add
pop
decb
in
adc
js
rorl
aaa
lea
movsl
movsb
popf
aam
sahf
dec
add
pushf
inc
add
ss
add
mov
dec
add
pushf
push
add
ret
add
pop
fwait
mov
nop
mov
scas
cli
or
add
fdivrl
xchg
dec
add
xchg
lods
adc
dec
fsts
inc
adcl
push
or
gs
jge
ja
mov
mov
mov
pushf
dec
jmp
scas
xlat
and
dec
and
cmp
enter
push
clc
pop
pop
sbb
inc
in
mov
lods
hlt
adc
push
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
xor
xor
aaa
add
push
daa
xor
mov
push
subl
rorl
inc
arpl
push
inc
mov
push
add
into
cmp
push
mov
fdiv
mov
adc
mov
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
fisubs
dec
jl
scas
mov
pop
xor
loope
and
mov
stc
add
inc
aad
xor
scas
push
lret
shll
movsl
xlat
sbb
adc
dec
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
adc
icebp
ljmp
in
sub
movsl
inc
xchg
xor
pop
sarb
jmp
sub
push
dec
or
nop
cmp
add
test
aaa
inc
adc
gs
mov
icebp
std
loope
leave
popf
scas
xchg
fwait
nop
cwtl
adc
ja
add
push
mov
popf
lods
fcoms
lret
fcmove
jg
cmp
adc
add
lds
dec
jns
xchg
lret
push
je
cmp
xchg
add
jle
daa
mov
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
test
inc
jl
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
sub
test
xchg
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
cmp
fisubl
clc
and
push
inc
and
mov
es
shrl
loope
jno
xchg
lret
push
je
cmp
cmp
adc
ja
jecxz
popf
outsb
xor
xchg
pop
psubb
add
adc
popf
mull
out
mov
lret
push
je
cmp
cmp
aaa
sbb
scas
add
bound
mov
mov
bound
gs
sar
mov
lret
push
je
cmp
or
dec
aas
or
mov
mov
adc
pop
bound
jp
pusha
mov
lret
push
je
cmp
ss
mov
adc
push
cmpsl
sbb
lret
add
loopne
cmpsl
push
dec
and
mov
lret
push
je
cmp
test
shll
xchg
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
lds
pop
xor
movsl
add
outsl
push
cmp
xchg
push
lods
idiv
xacquire
xor
jg
cmp
dec
push
les
and
xor
and
mov
inc
pop
testl
add
mov
std
jne
aad
and
dec
mov
dec
sub
inc
push
outsl
outsb
in
jecxz
popa
mov
sti
xlat
pop
adc
xor
std
addl
jbe
leave
push
pushf
push
lahf
mov
add
call
rolb
es
imul
or
rcrl
icebp
xor
adc
jle
pushf
ficompl
arpl
xor
repz
jae
pop
jb
pusha
aaa
test
stc
mov
xor
jns
cmp
or
arpl
or
insl
les
pusha
popa
mov
or
in
cltd
test
cld
add
call
fwait
add
ror
xor
sub
test
fs
out
inc
mov
sub
lret
pop
pop
ja
dec
pusha
mul
fidivrl
push
daa
out
fsubr
loop
in
pop
pop
mov
sub
pop
aas
pop
testl
lods
fwait
inc
stos
sub
or
dec
ds
add
dec
aaa
add
pop
test
dec
push
je
outsl
dec
mov
pop
or
sahf
mov
imulb
jnp
fimuls
push
es
xor
inc
data16
sub
mov
jl
jg
jb
gs
sub
sbb
hlt
mov
shlb
ret
daa
or
repnz
testb
movsl
add
push
pop
repnz
lods
movsb
xchg
mov
outsl
sub
add
sub
xchg
sbbl
flds
jle
sbbb
add
push
push
fsubrl
ficomps
xchg
jmp
movsl
adc
jno
bnd
in
add
push
mov
and
add
rcrl
pop
lods
jae
mov
inc
dec
pushf
jl
jp
out
dec
fwait
inc
mov
inc
push
xchg
rcrb
imul
jp
cmp
xor
and
clc
pop
push
xlat
push
pop
ret
lock
add
ljmp
aaa
daa
gs
mov
in
sub
les
movsb
ret
xor
or
rolb
lock
pop
sbb
jmp
adc
xlat
cmpsl
in
xchg
pop
movsl
in
push
inc
ret
es
mov
xor
js
adc
mov
cwtl
xor
adc
dec
iret
pop
inc
jnp
push
lods
mov
int
cmp
sbb
jl
sub
mov
sub
cmpsl
add
push
hlt
xor
not
outsb
movsb
push
fildl
iret
leave
mov
dec
and
popf
jae
aad
lods
push
arpl
sub
iret
dec
jns
ss
jg
arpl
pop
daa
aam
loope
sbb
ret
outsb
inc
or
cld
movl
jmp
mov
sub
loopne
push
jbe
in
push
pop
js
inc
adc
xorl
inc
jbe
pop
rcrb
aas
mov
subl
mov
xchg
cmpb
xor
out
or
movsl
inc
sbb
xor
mov
cmc
sbb
xchg
mov
sarb
int
inc
aad
mov
fs
pop
imul
aad
cmc
arpl
sub
dec
push
into
fidivrs
or
std
in
icebp
cmc
ljmp
jbe
insb
div
loope
push
or
jecxz
ljmp
jne
dec
test
adcb
mov
sub
rep
add
clc
adc
jecxz
sarl
or
pop
mull
xchg
ja
sub
fwait
xchg
pop
push
nop
pop
pusha
and
pop
jmp
fistpll
jmp
fistl
and
sti
pusha
jo
jo
jae
adc
cli
pop
iret
mov
in
inc
in
push
imul
add
cwtl
cli
aam
jl
fs
mov
stc
out
jno
push
adc
out
aaa
dec
pop
fldl
leave
adc
jbe
dec
sbb
fst
fisubl
out
adc
loope
ljmp
cmp
jnp
mov
mov
negl
jle
mov
cmpl
and
pushf
movsl
lahf
dec
push
sub
imul
xchg
mov
dec
aad
lds
in
pop
xor
push
popa
cmp
fwait
es
das
pushf
inc
mov
sbb
shlb
lock
repnz
and
lea
mov
iret
fstl
test
sub
push
xrelease
lds
stc
or
cmp
push
loopne
or
scas
nop
daa
xchg
jp
insb
jo
mov
repz
jbe
test
fwait
scas
popfw
add
mov
sahf
add
je
xchg
xor
inc
ror
xchg
pop
adc
or
lock
pop
stc
add
mov
jmp
fists
int3
fwait
inc
dec
xchg
andl
pop
mulb
scas
cmp
popa
pushf
into
test
enter
in
lods
lahf
push
insb
loopne
and
lds
mov
test
add
imul
xor
sbb
and
insb
jge
fistps
addl
adc
lret
dec
ljmp
pushf
mov
pop
cmc
fs
fmul
insl
mov
rorb
push
aas
lock
outsl
and
mov
pop
or
pop
faddp
aaa
and
xchg
arpl
dec
pop
rcr
adc
popa
enter
adc
pop
mov
rol
aaa
out
add
divl
mov
aad
cli
pop
dec
pop
arpl
mov
rol
sub
fnsave
cmp
mov
mov
pop
ds
mov
scas
js
xchg
fdivl
fildll
ret
int3
xchg
push
fcoms
push
add
test
popf
ds
rep
fdivs
das
and
negb
jle
aas
test
ds
sahf
sub
xor
pop
lret
clc
imul
and
rclb
push
fildll
mov
test
cmp
not
and
fwait
imul
jmp
pop
out
inc
test
ss
pop
or
sub
jo
flds
shlb
es
pop
xchg
or
stc
jg
lods
mov
and
mov
popf
aad
push
inc
aad
in
cli
add
cwtl
out
sub
out
sbb
stc
fmull
insb
push
fisubl
and
mov
sub
adc
jno
fistpl
cmp
pushf
test
add
xchg
mov
lret
fldl
fidivrl
mov
xchg
xchg
shll
inc
jns
adc
xchg
gs
inc
mov
outsl
ror
cmp
arpl
lret
xor
or
and
les
xchg
sub
mov
int
lret
aam
test
push
push
xor
testb
gs
pop
pop
jl
stos
xchg
inc
jmp
xor
rolb
sub
mov
xchg
push
jmp
sub
add
lcall
push
mov
adc
cmc
pop
push
in
arpl
adc
imul
je
pop
daa
test
jl
aad
orl
inc
fisubrs
lods
sahf
clc
push
cmpsb
mov
or
xchg
stos
mov
mov
push
dec
insl
lcall
inc
sarl
jmp
movsl
lahf
dec
outsb
mov
cmp
sahf
jle
mov
testl
jnp
cmpsb
jno
push
adc
and
popa
mov
mov
scas
faddl
lret
jae
mov
cmp
scas
faddl
sbb
pop
jle
movsb
out
fbstp
jae
ljmp
dec
nop
xorl
nop
cltd
les
push
lea
and
or
xor
dec
and
add
sub
add
dec
shr
scas
sbb
xor
or
adc
jo
xchg
mov
xchg
xor
or
scas
mov
nop
mov
test
int
sub
push
adc
mov
jno
test
mov
or
mov
ds
test
shlb
bound
shrl
fisubrl
cltd
lahf
jbe
sahf
ja
sar
pop
xchg
add
lods
adc
sbb
sbb
mov
push
push
push
imull
xlat
xchg
or
xor
inc
sub
push
shrb
fistl
xchg
fstpl
push
jge
sub
out
jg
sub
sahf
xor
dec
movsb
aad
or
xchg
pop
push
xchg
cltd
mov
sahf
rol
add
popa
leave
xor
sub
add
jge
inc
clc
rcrb
dec
inc
ds
mov
push
sti
rcll
scas
lods
cmp
inc
repz
jmp
rcr
xchg
lock
jo
rol
xor
inc
mov
sub
stc
icebp
pop
ljmp
lock
dec
shlb
mov
or
int3
or
sub
fs
pop
pushf
lock
dec
dec
cmp
sbbl
pop
mov
sbbb
xchg
nop
mov
or
jmp
pop
jo
sub
and
sahf
pushw
jne
cwtl
xor
jo
xor
lcall
dec
lods
xor
sbb
jg
dec
mov
mov
aam
test
idivl
and
frstor
lods
and
cmc
rcr
js
insb
loopne
cs
cmc
mov
lds
fmull
xor
in
int3
mov
inc
mov
std
icebp
pop
iret
cltd
xchg
inc
fnstcw
dec
and
int3
jecxz
pop
dec
clc
jp
add
sub
xor
xchg
push
jle
pop
subl
and
inc
int3
iret
rcr
dec
sbbl
in
xchg
xchg
imull
mov
push
mov
sub
xchg
loop
fcoms
out
cwtl
sbb
scas
icebp
arpl
lds
xchg
cmp
pushf
cs
mov
push
leave
add
out
mov
pusha
mov
aaa
aas
and
imul
mov
iret
xchg
test
sub
xor
test
pop
fsubrs
cwtl
sub
clc
xchg
add
icebp
xchg
bound
mov
or
pop
stos
stos
out
or
xor
aad
out
xor
lahf
pop
cmp
ret
mov
or
outsb
lock
cmp
data16
jl
push
cmp
mov
insl
or
fwait
outsl
daa
or
jmp
rcll
mov
stos
cli
fiaddl
xchg
in
push
inc
movsl
dec
fdiv
jns
dec
adc
push
sbb
mov
mov
test
pushl
lret
imul
adc
jne
bound
xchg
cli
je
imul
xlat
inc
xchg
int3
popa
test
cmp
out
iret
fbstp
jg
xchg
cmpsl
mov
jle
mov
es
adc
dec
pop
enter
mov
ficomps
push
cmp
mov
lcall
or
and
add
inc
sbb
inc
popf
in
imulb
add
xchg
sbb
cmpsb
cmpsl
xchg
xor
dec
bound
jp
pop
je
lods
dec
mov
scas
movsb
stos
inc
aam
push
sbb
mov
add
out
pop
popf
das
idivb
jmp
aas
in
xchg
cltd
mov
in
jnp
push
adc
dec
sub
ret
ret
rcl
repz
pop
lret
fs
rcll
xchg
mov
icebp
xchg
mov
pop
es
imul
sub
add
jb
mov
xchg
xor
into
mov
rorb
cmp
pop
jbe
cli
pushf
insl
mov
push
dec
lds
dec
sub
mov
es
ret
jnp
shll
out
jo
lea
aas
fmull
cmpl
stc
fisttpll
lcall
jns
push
shl
imul
repnz
call
cmc
sbb
fcoml
repnz
pushl
mov
jne
cmpsb
xchg
adc
aam
bound
mov
cmc
ljmp
sahf
xor
rsqrtps
lret
fmull
jnp
mov
ficomps
sbb
ret
jno
scas
pop
cmp
sub
xor
adc
stos
sub
fistpl
insb
ja
out
shrb
mov
xchg
ret
jp
pushl
fdivl
leave
adc
in
cmp
cmpsb
stc
xchg
into
cld
sub
out
pop
sbb
inc
stc
xchg
sub
adc
fcmovb
push
fldt
repz
sub
mov
pushf
fmul
mov
sbb
ds
adcl
pushf
int3
popf
lret
lods
mov
push
mov
repnz
dec
pop
hlt
pop
mov
dec
ss
mov
add
pushf
jnp
dec
pop
sub
outsb
cmpb
xchg
rclb
outsl
call
pop
adc
and
mov
daa
stos
or
enter
ja
pop
jg
scas
cltd
sahf
pop
mov
lcall
cld
scas
pop
sbb
mov
scas
das
push
cli
sbb
mov
adc
movsl
push
mov
aad
mov
in
dec
cmc
and
xchg
xchg
js
decl
mov
loopne
dec
arpl
jecxz
arpl
xlat
sbbl
insl
xor
add
jb
insl
mov
push
cwtl
fcmovnbe
daa
cwtl
push
sub
pop
loopne
mov
or
cmp
les
fidivl
mov
iret
mov
cmp
add
jne
mov
arpl
xchg
loopne
in
shrl
jnp
int
shlb
push
shlb
les
mov
ret
sbb
mov
in
and
pop
cmp
xor
cmp
mov
mov
cmp
testb
dec
ss
cmp
pop
jg
xor
lods
gs
daa
lret
add
movups
add
call
jns
mov
mov
aad
mov
clc
xor
lods
jnp
repz
xor
sbb
ret
jl
jecxz
iret
insl
push
scas
mov
cmp
in
add
popa
bnd
addr16
dec
repnz
out
xor
mov
cmp
pop
xchg
sub
mov
xor
lods
xchg
daa
cmp
lret
into
mov
pop
rol
and
stc
xor
es
sub
out
rolb
aaa
es
in
orb
fmulp
pushf
cli
dec
imul
rclb
jnp
adc
mov
fnstcw
call
jge
inc
cmp
stos
jo
fldenv
inc
or
iret
pop
pop
sbb
cmp
test
in
jns
or
dec
xor
into
out
dec
shrl
dec
cmpsl
sti
adc
test
sarl
popa
stos
inc
inc
jno
push
sbb
push
pop
loop
cmc
sbb
pop
aad
adcl
jo
stos
pop
leave
js
mov
movsb
xchg
movsb
test
in
or
mov
bound
in
cmp
sbb
mov
add
clc
xor
push
sub
ja
inc
std
mov
fidivs
int
cmpsb
cmc
lahf
sub
movsl
lret
call
test
fdivrl
repz
sbb
das
testl
les
inc
addl
sbb
cltd
fadds
ret
insl
lods
xor
mov
jmp
cmp
popa
jg
test
mov
mov
mov
adc
jle
or
jae
dec
jg
mov
leave
pushf
shr
mov
movsl
lea
in
test
add
shll
mov
xchg
mov
push
mov
or
cmp
mov
enter
roll
inc
jmp
pop
sahf
std
pop
les
lret
push
movsl
dec
adc
jo
pushf
and
push
mov
mov
xchg
pop
enter
sti
rcrl
loopne
fidivrl
pop
lret
ja
jle
fidivl
or
ja
shrb
mov
icebp
ret
popf
sub
push
repnz
xchg
sub
in
mov
xor
fs
loopne
xor
cmp
jae
dec
rolb
orb
jp
adc
call
sub
dec
es
xchg
push
lods
mov
stc
lds
cmp
cld
sahf
jb
sub
add
shlb
sub
fmull
inc
outsb
push
mov
xor
repnz
pop
pop
js
fildll
sbb
xchg
mov
mov
lea
clc
dec
pop
sbb
sbb
add
bnd
bound
jae
lret
stos
mov
aad
mov
mov
inc
negb
push
pop
out
or
xchg
inc
call
mov
cmc
mov
xchg
cmp
cmpsl
inc
cmp
cmp
ljmp
es
stos
popf
bound
and
mov
pop
and
cs
mov
fdivrl
sub
ljmp
cmpsb
inc
sbb
fcomi
sub
hlt
xor
popf
in
std
push
sbb
ja
in
call
int3
mov
xchg
adc
pop
push
dec
adc
or
mov
xor
mov
pop
or
sbb
cmp
xorb
sti
mov
or
mov
mov
in
dec
sbb
cli
pop
ret
or
cmpsl
and
fildll
stc
cmp
lds
inc
mov
add
dec
das
lcall
jae
inc
nop
sahf
inc
or
shrb
faddl
sub
ss
fisubrl
mov
les
jmp
ljmp
sbb
xor
xor
scas
xlat
inc
and
imul
pop
scas
dec
pushl
xchg
dec
xchg
orl
push
cmpsl
pop
rcl
cmp
sbb
mov
xchg
into
mov
add
cmpsb
xchg
cmpsl
dec
inc
shlb
call
dec
movsl
dec
inc
scas
jbe
xor
jmp
std
adcb
cmp
sahf
xchg
mov
cwtl
arpl
in
daa
bound
in
int
adc
in
sub
lahf
adc
lret
fwait
sbb
add
negb
arpl
test
flds
push
pop
xor
push
arpl
or
mov
xor
cwtl
arpl
addb
sti
and
out
lea
cmp
rclb
adc
aam
inc
dec
inc
test
dec
bound
xor
cwtl
arpl
enter
sub
xchg
sub
adc
sbb
enter
mov
scas
js
test
test
push
lea
mov
and
pop
repnz
mov
lds
and
dec
xchg
adc
test
int
mov
jbe
je
jg
add
mov
push
cs
pop
mov
lcall
imul
jo
jg
and
call
dec
push
outsl
in
addl
lods
dec
cmp
cmc
sub
int
call
ljmp
popa
aaa
fstl
pusha
xchg
cmp
and
push
lret
leave
pusha
and
xchg
push
adc
mov
mov
les
repnz
cmc
sub
ds
cld
push
mov
sbb
pushf
sub
stos
cltd
jae
cmp
lret
mov
dec
scas
lret
push
hlt
cmp
dec
push
xchg
call
inc
jbe
inc
pop
jl
push
and
iret
adc
in
or
pop
pop
dec
lea
add
adc
jmp
mov
stos
lods
out
outsb
mov
adc
pop
ret
test
xor
pop
cmp
ret
stc
xorb
sahf
divb
call
push
sbb
add
sahf
je
int
sarb
sahf
icebp
rclb
out
lods
inc
in
clc
mov
xor
add
xchg
imul
popl
adc
sahf
daa
pop
push
nop
push
mov
mov
inc
mov
dec
lds
mov
mov
call
mov
sbb
scas
jo
mov
les
and
jge
sbb
cli
mov
fnstsw
pop
pop
mov
push
test
inc
add
add
mov
out
pop
mov
mov
ljmp
sub
cmpsl
sub
xor
xchg
je
inc
fadd
subl
in
sbb
mov
frstor
int
xchg
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
stos
or
fmull
cld
ret
shrl
jne
hlt
pop
fcmovu
jecxz
in
lock
sti
es
mov
fldl
add
leave
adc
push
mov
imul
xor
shl
addr16
jnp
add
jge
ret
jge
repnz
mov
stos
jmp
mov
or
xchg
movsl
stos
mov
xchg
add
mov
lea
jle
mov
cmp
mov
lret
push
je
cmp
aaa
and
iret
jge
push
cmp
jge
ja
and
or
fldpi
inc
in
xchg
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
fldl
pop
add
and
pop
cmp
lahf
fsubp
mov
jge
push
adc
push
adc
cmpsl
lret
js
mov
imul
dec
into
cmc
or
into
sbb
ljmp
mov
mov
xchg
iret
std
lock
inc
gs
popa
cmc
push
in
test
adc
mov
adc
jle
push
jbe
test
mov
mov
outsb
xchg
pusha
movsl
or
test
cmpps
imul
mov
rcr
adc
scas
cwtl
sti
pusha
fistps
xlat
add
pop
xchg
pusha
pop
pop
push
int3
cmovle
cmc
in
insl
ficomps
addb
jg
insb
fwait
adc
mov
rcl
aaa
ret
clc
inc
adc
push
fstl
push
jmp
add
ja
loopne
shlb
mov
jne
test
add
dec
sub
sbb
fisubl
mov
rcll
dec
jnp,pt
jecxz
mov
stos
test
les
dec
sbb
dec
dec
add
cmc
pop
cmpsb
fcoml
imul
mov
ficompl
or
push
sub
into
xor
jp
xor
push
test
fnstenv
pop
xchg
mov
mov
loopne
insl
gs
call
int
in
stos
fildl
mov
lcall
insl
sti
ret
lods
cltd
mov
out
xor
add
pop
xchg
lods
mov
jb
je
dec
mov
mov
or
sbb
fimull
xchg
jbe
pop
push
inc
sahf
sub
pop
jne
jo
cmp
xchg
enter
lret
or
clc
lods
adc
xorb
popf
push
out
cmp
dec
pop
sbb
and
cmp
lcall
pop
mov
cwtl
insb
or
mov
mov
jmp
lock
cld
push
inc
scas
aaa
xchg
loop
outsb
and
or
jecxz
mov
idivb
jns
insl
mov
xor
lret
jmp
pop
xchg
xlat
loope
xor
je
jmp
pop
das
jbe
into
adc
psubw
pop
pop
pop
inc
imul
pop
fistpl
jns
fisubl
mov
sbb
jp
and
icebp
mov
cmpsb
outsl
dec
or
scas
xchg
inc
sbb
in
mov
int3
or
dec
stc
push
add
inc
test
popa
dec
xor
xor
jmp
xor
call
and
scas
jnp
cwtl
lock
mov
bound
push
dec
jl
mov
mov
cmovg
and
out
inc
jo
mov
dec
xchg
lcall
cltd
cwtl
shr
add
mov
dec
pop
inc
fwait
aas
mov
repnz
dec
popf
inc
repz
xchg
mov
mov
test
sub
xchg
popa
jge
test
xchg
cld
sub
cmp
pop
and
mov
stos
push
stos
fxch
mov
lods
pop
hlt
fsqrt
dec
adc
pushw
out
jae
sub
lcall
testb
subl
jne
insb
xchg
sbb
cmp
push
pushf
lret
mov
test
pshufw
fcos
fs
sub
push
pushf
mov
push
jl
pop
outsb
pop
sbb
test
sub
cwtl
mov
pop
movsl
xchg
inc
pop
inc
sbb
mov
out
bnd
cltd
xchg
adc
popf
decb
aad
push
mov
jno
mov
jp
and
or
xchg
mov
xchg
scas
and
mov
mull
lods
xchg
addr16
addl
jbe
or
or
arpl
push
clc
testb
in
les
ret
mov
push
jl
decl
cmp
cli
loope
icebp
mov
rclb
nop
popf
cmpsl
push
rclb
int
sub
xchg
call
loop
inc
sahf
mov
xchg
les
mov
mov
xchg
push
xor
loop
fxch
mov
popa
push
sub
push
push
push
jl
leave
aaa
pop
fnstenv
pop
pop
shlb
aaa
in
jnp
mov
jb
and
outsl
sbb
adc
lods
cmp
les
clc
xor
aam
and
mov
enter
mov
ljmp
jl
add
int
xchg
xchg
cmp
cld
int
push
lret
jl
pop
cmpsb
test
gs
jmp
bnd
push
jae
mov
jne
fwait
testl
std
mov
imul
mov
pusha
in
push
cltd
add
pop
fucomp
xchg
jne
in
aam
hlt
sbb
inc
out
cmpsl
jbe
jecxz
frndint
addr16
dec
xchg
cmp
sbb
test
add
mov
insb
je
push
inc
push
or
popf
mov
or
and
cld
repnz
pop
imul
push
pop
outsb
push
add
std
pushf
pop
mov
ret
and
push
out
int3
push
dec
into
lds
fstl
push
aaa
cmp
pop
and
in
dec
sahf
outsl
push
cmp
sti
cmpl
or
sbbl
bound
push
or
test
mov
stc
fldl
out
push
jle
out
js
cwtl
pop
push
push
mov
aas
inc
mov
sti
xor
or
xor
adc
push
push
mov
roll
xchg
sbb
mov
mov
lahf
popa
pop
test
adcb
pop
repnz
inc
ja
push
imul
inc
cmpsl
test
push
sub
adc
data16
ljmp
cmp
fistpl
in
or
mov
popf
data16
pop
sub
pop
mov
push
pop
xor
into
mov
ret
aas
movsl
cmp
mov
imul
stos
dec
ljmp
inc
xor
xor
into
mov
out
or
sub
enter
mov
xchg
add
loope
test
popa
adc
fnstsw
push
scas
rcll
out
sub
call
fstpt
lret
into
cmp
xchg
add
fwait
sbb
aaa
sahf
dec
fcompp
sarb
xor
sbb
pop
sub
jae
sar
adcb
arpl
sti
xor
xchg
push
or
push
cmp
out
rcrb
mov
adc
loope
test
push
arpl
bound
pop
sbb
hlt
movsb
loope
insl
lea
pop
imul
mov
andl
xchg
inc
cmpsb
sub
mov
pushf
xorb
cmp
push
push
push
cmp
add
jne
pop
movsb
lahf
ficoml
cmp
shll
clc
aam
mov
xor
and
dec
pop
and
mov
xor
movsb
jmp
sbb
icebp
aas
xchg
jbe
out
mov
adc
rcr
adc
dec
mov
je
dec
lea
popf
int3
pop
push
in
adc
add
add
mov
lods
inc
push
push
xchg
imul
test
and
divl
sub
imul
adc
dec
stos
mov
push
dec
sub
test
repnz
add
sub
jb
dec
dec
mov
xchg
pop
or
xor
andl
inc
dec
fs
imul
dec
sbb
sbb
lret
jmp
in
addb
sbb
mov
mov
xchg
ss
mov
inc
addb
xor
and
mov
mov
lahf
out
cmpsl
rcr
je
or
and
dec
jecxz
adc
sbb
out
xchg
icebp
lods
aad
and
test
test
jle
je
cmp
inc
add
ret
mov
inc
imul
mov
xchg
sahf
jle
add
cli
fs
jmp
xchg
imul
jl
outsb
mov
dec
jecxz
test
lods
fcomps
lock
orb
sub
jp
sub
ret
push
ljmp
repz
popf
pop
out
mov
mov
sti
fwait
addr16
std
popf
mov
lds
cli
pop
in
in
xchg
or
jbe
and
aaa
movl
scas
push
cli
sub
lods
push
ret
lahf
mov
inc
imul
je
lret
xchg
movsl
out
push
mov
push
call
sub
js
imul
aas
dec
popa
or
das
mov
aaa
hlt
mov
gs
out
cmp
loopne
inc
xchg
pop
mov
cmp
lock
and
xor
xchg
adc
inc
int
mov
mov
scas
les
dec
dec
popf
arpl
es
jnp
or
sbb
je
js
sub
idivb
xchg
xor
sahf
stc
mov
mov
bnd
jmp
pop
shlb
pop
inc
popf
sub
lret
pop
or
ret
loop
sub
jge
fs
pop
pop
mov
cmp
xchg
sub
incb
xchg
lret
pop
cwtl
mov
ds
fxch
jg
push
pop
and
pop
pop
out
rcl
dec
sti
out
shll
adc
test
repnz
and
dec
outsl
les
ja
mull
pusha
lods
push
fsubr
pop
ds
and
push
jae
call
imul
outsl
iret
push
jnp
adc
mov
mov
out
imul
dec
dec
jecxz
test
lcall
add
in
dec
mov
int3
mov
fsubrp
xor
outsl
lahf
cmp
xchg
loope
orl
and
dec
out
add
movsb
mov
imulb
clc
lods
mov
push
dec
sbb
out
dec
ffreep
pop
test
cmp
jmp
and
imul
xchg
movsb
inc
mov
mov
dec
std
sub
pop
iret
cmpsl
and
loopne
insb
push
in
jle
sbb
mov
iret
add
mov
fiadds
insb
inc
inc
scas
data16
movsb
mov
inc
push
out
adc
jne
adcl
addb
sub
outsl
les
mov
sub
ss
int
cmp
mov
mov
mov
outsl
nop
js
push
push
aad
movsb
xor
insl
les
xor
mov
jne
test
aad
mov
push
fldenv
cmpsl
cmp
sub
jmp
push
mov
inc
cwtl
fiaddl
inc
inc
xchg
into
adc
pop
les
popa
je
mov
jns
xor
push
jb
push
cs
cli
cld
jmp
sub
and
popf
xchg
pop
mov
mov
xchg
jae
inc
data16
add
out
inc
adc
mov
ror
jb
jmp
and
rcl
popa
or
ret
sub
fisubrs
movsb
imul
int
push
andl
pop
lock
mov
or
loopne
pushf
mov
xchg
outsb
cmpsb
jecxz
sti
mov
add
or
hlt
cli
call
out
sahf
lock
cltd
ds
mov
imul
int
cmp
sbb
cmpsb
xchg
mov
mov
mov
and
add
xchg
adc
ds
push
add
lahf
push
jge
inc
jle
xchg
pop
out
fstl
add
cmp
fsts
push
push
push
ret
push
jns
push
xchg
fcoms
daa
push
inc
inc
dec
mov
add
clc
adc
adcb
cmpsb
mov
dec
data16
jecxz
lock
jbe
int
sbb
mov
mov
shlb
dec
xchg
stc
mov
push
in
aad
sti
push
std
jp
pop
push
add
push
push
lcall
or
aas
xchg
mov
and
popa
jp
push
fidivrl
xor
fcoml
fwait
gs
xor
and
shll
cld
jecxz
xor
or
xchg
data16
fldenv
adc
shlb
js
lcall
les
mov
push
push
mov
inc
pop
cltd
xor
enter
cmc
out
stos
jmp
cmpsl
and
dec
xor
das
adc
scas
ret
lock
movsl
xchg
mov
jno
jmp
adc
push
ret
and
xor
jg
std
es
pop
fs
cs
sub
arpl
test
xchg
frstor
cmp
jle
push
lcall
scas
cmpsl
push
pop
or
adc
or
add
incl
dec
mov
xor
adc
inc
sub
dec
in
out
jbe
idivb
andl
adc
adc
jg
scas
rolb
push
lea
sbb
movb
gs
jo
xlat
fmull
aad
mov
jp
js
call
ret
jnp
in
mov
and
enter
stc
lret
rorb
mov
mov
lods
jmp
repz
pop
sahf
scas
iret
sub
insb
pop
mov
rorl
js
inc
mov
mov
jge
xor
mov
push
insl
or
xchg
push
mov
inc
jmp
mov
jo
sbbb
ljmp
pop
push
and
mov
jne
int3
fisttps
outsb
cltd
lock
addr16
scas
adc
push
imul
and
pop
sbb
div
jae
push
mov
pop
test
push
jbe
push
aas
rcl
test
push
push
in
movsl
xor
stc
data16
shl
or
test
fdivs
cli
pop
scas
cwtl
lds
ss
and
fiadds
icebp
mov
sbb
cmp
mov
call
movsb
xchg
mull
mov
push
ret
fwait
je
stos
xlat
sbb
mov
mov
mov
sub
out
out
mov
scas
mov
out
or
adc
dec
lahf
mov
fwait
dec
cmp
push
clc
mov
sbb
or
in
sub
std
arpl
add
inc
fldt
adc
dec
cli
lahf
shrl
imul
push
orl
inc
call
jne
dec
flds
or
cmc
mov
int3
loop
push
or
icebp
push
in
fmuls
inc
pop
push
in
mov
push
jbe
xor
pop
jle
jp
shrl
mov
adc
sbb
leave
and
mov
dec
movnti
leave
sbb
mov
xchg
mov
or
and
ss
mov
out
pop
lock
mov
cwtl
and
xchg
dec
movl
cmp
cmp
aam
outsb
stc
mov
pop
sub
xor
insl
inc
sbb
ret
xor
inc
sub
mov
leave
jl
dec
popa
arpl
jo
ss
cmpsl
or
loopne
pop
adc
and
rorl
mov
inc
xchg
mov
dec
out
scas
sbb
xor
nop
xchg
sbb
xchg
pop
fdivrs
adc
es
jnp
adcb
jo
and
hlt
dec
mov
fsubl
enter
cltd
xor
sub
enter
lods
fildl
cmp
lret
es
shlb
lods
fidivs
cmp
push
mov
cmp
or
loope
add
or
xor
in
add
mov
fisttpl
stos
loopne
loop
jp
adc
sub
sahf
or
mov
jne
push
cmpsl
sbb
sub
imul
arpl
loope
mov
adcl
fsubl
mov
mov
add
test
das
testb
push
shr
mov
pop
sub
rcl
push
pop
scas
adc
adc
sar
inc
inc
test
mov
jg
inc
cld
mov
test
lods
scas
cmp
pop
test
push
ja
lahf
and
push
aas
aaa
or
mov
fcmovu
out
add
jge
cmpsl
mov
aam
je
in
sub
outsb
dec
mov
xor
dec
dec
jmp
fidivs
cmp
ds
lahf
pop
out
mov
test
inc
addr16
adc
jl
rolb
jb
imul
pop
enter
fld
pop
je
pushf
aas
ss
mov
xchg
loope
dec
xchg
cwtl
in
inc
cmp
in
cmp
push
sub
shll
xor
popa
cs
cmp
in
push
dec
adc
mov
test
fiadds
aas
jecxz
cltd
repnz
jle
and
pusha
fldenv
outsb
push
mov
mov
jmp
push
xchg
or
or
jmp
enter
lcall
or
aas
sbb
jp
xor
popa
in
rorl
pushf
test
mov
adc
insb
dec
stos
sub
pop
ret
mov
cmp
shll
cmpsb
scas
cwtl
in
sahf
in
mov
ja
fld
mov
dec
nop
jle
cmp
sub
out
in
ss
push
out
call
pop
mov
adc
fs
jae
pusha
ror
jp
mov
js
leave
test
scas
loop
push
mov
mov
or
pop
fistps
add
cltd
adc
loopne
hlt
jno
and
stos
je
jl
out
or
xor
ror
xor
pop
and
ss
ds
arpl
cmc
cmpsl
pop
and
or
adc
aad
ljmp
paddw
test
fmuls
mov
push
or
mov
imul
mov
xchg
or
cmpsl
jne
pop
inc
loop
lcall
and
ret
sub
cmp
add
xor
jg
sbb
in
mov
out
inc
or
leave
xchg
in
lods
scas
imul
xchg
in
adc
cmp
aaa
mov
sub
mov
sub
leave
movsl
inc
imul
add
les
push
mul
and
filds
adc
cmp
mov
sbb
subl
sahf
imul
stos
jbe
push
ja
or
cmpl
sub
add
adc
in
pop
mov
cmc
xchg
addr16
orb
mov
scas
or
push
cltd
pop
jg
fsubr
jno
lcall
xchg
pop
cmp
imul
lods
inc
sti
mov
add
or
cmc
into
mov
or
in
mov
or
mov
out
and
or
pop
or
push
adc
jmp
adc
push
pop
pop
mov
test
pop
adc
jbe
mov
jae
loopne
adc
lock
aas
mov
sbb
sbb
mov
clc
adc
outsl
sub
sub
ja
inc
adc
jg
xor
inc
xchg
sbb
mov
ds
in
mov
inc
cmp
xor
xchg
cmc
and
repz
push
cwtl
sbb
sbb
push
sti
std
dec
dec
scas
int3
rclb
and
scas
dec
add
sub
mov
imul
mov
fiaddl
lret
arpl
inc
xchg
jno
idivb
dec
jecxz
inc
in
mov
imul
pop
loop
imul
sbb
das
movl
pop
pop
push
dec
xchg
orb
xor
xlat
pop
mov
mov
out
adc
in
std
and
ljmp
push
gs
and
xchg
inc
xorl
xor
out
push
pushf
test
insb
in
in
dec
mov
leave
dec
cwtl
in
xor
mov
adc
in
shlb
inc
movsb
icebp
xchg
or
cmp
jb
aas
sub
xor
test
loopne
insl
mov
jecxz
mov
sbb
and
aas
jmp
int
cmpsb
xchg
lods
loop
std
pusha
dec
or
inc
adc
mov
mov
out
sar
fs
out
adc
jle
xlat
fwait
int
mov
movsb
push
push
pop
lret
sbb
mov
popf
pushl
and
leave
std
push
mov
in
lcall
xor
arpl
inc
inc
mov
dec
and
maxps
fnstenv
sbb
popf
lea
pushf
add
mov
shll
add
add
insb
dec
ror
out
cmp
fnstenv
mov
ja
pop
inc
mov
jp
mov
ljmp
fnclex
jmp
ss
adc
inc
fmulp
pop
xchg
sub
push
int3
in
fwait
loopne
out
xchg
push
fimuls
fs
stc
xor
jno
fs
pop
xor
fisubrs
xchg
insl
icebp
test
mov
sub
ds
mov
or
loopne
pushf
mov
dec
cmpsb
bound
aam
and
out
adc
test
jmp
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
cmpsb
mov
leave
hlt
leave
fwait
test
jae
into
ja
dec
enter
add
dec
cmp
mov
lret
push
je
cmp
stos
or
fmull
cld
ret
shrl
jne
hlt
pop
fcmovu
jecxz
in
lock
sti
es
mov
fldl
add
leave
adc
push
mov
imul
xor
shl
addr16
jnp
add
jge
ret
jge
repnz
mov
stos
jmp
mov
or
xchg
movsl
stos
mov
xchg
add
mov
lea
jle
mov
cmp
pop
mov
loop
add
mov
or
ss
scas
fcomip
mov
test
out
push
sbb
fnstcw
test
adcb
insb
dec
stos
jl
and
mov
push
jbe
pop
dec
sub
fadds
mov
out
xlat
pop
daa
imul
popa
repnz
sahf
in
imull
or
add
jp
and
cmpsb
outsl
arpl
dec
cmp
pop
insl
push
xchg
cld
mov
cltd
imul
imul
mov
dec
inc
iret
and
push
cltd
mov
sarl
xlat
out
jg
add
xor
push
inc
mov
xor
lds
imul
sahf
xor
jae
mov
push
jp
addb
pop
sub
and
sub
inc
popf
sub
mov
loop
cmc
scas
aad
inc
jmp
jae
xchg
add
inc
js
test
lret
in
add
divb
sbb
enter
cwtl
xchg
pop
add
mov
das
scas
fwait
mov
xor
insl
jge
or
lods
mov
pop
enter
xchg
popa
lea
mull
jl
lds
dec
popa
fnstsw
push
or
loop
inc
dec
cli
pop
ss
cltd
xchg
sub
daa
dec
push
mov
cltd
mov
loop
int3
dec
lock
sbb
daa
outsb
lret
rcll
xchg
rorb
inc
inc
jb
call
dec
adc
gs
jp
dec
ror
repz
xor
jne
and
mov
dec
sbb
ja
jnp
mov
fcoml
std
push
pop
andb
aaa
pop
loope
int3
pop
push
inc
fimull
in
fimull
pushf
rolb
sub
sub
xchg
mov
cli
into
loop
repz
cmp
sub
in
xor
rol
push
sahf
add
push
imul
int3
rcl
out
mov
cli
fstpl
jp
loope
aas
idivb
xchg
popa
insb
inc
ret
shlb
lock
cwtl
gs
jo
enter
orl
lea
stos
sub
jno
jo
sbb
test
mov
dec
movsb
sub
push
jne
js
pop
mov
ljmp
cltd
push
xchg
das
sub
enter
and
aam
push
and
adc
adc
or
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
hlt
jge
push
xor
cmp
sub
ds
and
fcomps
push
jle
je
cltd
mov
jnp
pop
subl
shll
les
ret
mov
int
fnstsw
adc
adc
bound
push
adc
lds
mov
nop
popf
sbb
mov
in
jb
pop
int
or
arpl
jo
sbb
iret
lock
sub
and
or
icebp
dec
pop
pop
bound
add
out
xchg
stos
mov
mov
test
mov
add
out
sub
mov
inc
mov
icebp
shlb
lods
push
ljmp
sbb
jb
or
ss
arpl
cmp
xchg
sbbl
or
in
cwtl
ficoms
rcrb
test
hlt
adc
loopne
and
bound
add
into
aaa
out
orb
cmp
inc
faddl
or
je
jnp
inc
in
cli
pop
jmp
adc
jbe
pop
or
dec
cmp
nop
aaa
inc
sti
insb
mov
lods
sbb
cmp
daa
xchg
lods
bound
ret
push
sub
ja
int
cwtl
push
in
adc
roll
out
sbb
sbb
repnz
dec
std
and
mov
lret
xchg
pop
pop
or
aad
jnp
repz
dec
bound
push
iret
cli
popa
shrb
popf
lds
or
imul
jl
dec
scas
loop
mov
scas
lods
in
lret
mov
sbb
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
mov
lret
push
je
cmp
pop
push
add
addr16
jp
stos
or
mov
stos
cmpsb
adc
sub
inc
pop
or
roll
insb
movsl
sub
dec
dec
mov
aas
push
stos
int
adc
add
push
dec
mov
mov
lret
mov
lods
jmp
and
cmp
push
or
jne
dec
enter
neg
inc
scas
mov
cmp
jne
lds
and
mov
push
pop
pop
fcomi
je
out
xchg
xchg
lret
jbe
fdivrl
pop
ljmp
add
push
add
cmp
mov
jl
mov
mov
push
adc
inc
pushf
fwait
cltd
xchg
int3
mov
cs
fwait
inc
xchg
movsb
inc
call
xchg
in
inc
xchg
aam
fwait
xor
lahf
ja
rcrb
mov
bound
xor
jno
pop
xchg
sub
sub
jae
pop
adc
push
daa
dec
lds
into
cmp
rcrb
adc
int3
or
sub
shl
outsb
inc
and
sbb
mov
addr16
nop
xor
add
xor
shl
ficompl
mov
fidivrs
test
and
fucomp
sbb
stos
js
mov
add
mov
cwtl
push
and
jg
mov
dec
xchg
aad
in
dec
sbb
push
push
insl
push
push
call
popf
dec
aaa
mov
mov
les
push
and
inc
inc
sbb
adc
imul
pushf
lods
leave
push
ss
cmpsl
test
add
jg
cs
dec
outsb
mov
jo
cwtl
std
push
mov
test
into
and
cmp
adc
mov
fidivl
pop
loope
pop
add
xchg
cmp
int3
add
adc
push
jnp
ds
xorl
cmpsb
cltd
cltd
js
sar
lcall
cmp
sub
adc
stos
adc
jns
and
adc
lcall
or
adc
adc
data16
sti
jbe
fsubrs
jns
and
loopne
xor
pop
and
xchg
iret
into
jno
in
xchg
in
mov
add
insl
ret
mov
inc
and
out
scas
and
mov
and
jae
jae
add
shr
int3
out
call
bound
cwtl
and
xlat
scas
ss
cmp
ss
push
push
xchg
mov
cmp
mov
xchg
or
inc
inc
lahf
pop
orb
shl
cmpsl
hlt
call
pop
push
adc
out
stos
loope
je
dec
fs
add
jo
inc
mov
jbe
add
das
push
pop
sbb
jp
xlat
pusha
push
inc
repz
addr16
and
add
cmpl
out
dec
and
jo
pop
loopne
mov
pop
push
cmp
popa
insl
cld
jp
push
arpl
movsl
sbb
ficoml
into
push
pop
xchg
sbb
mov
mov
sub
das
sbb
inc
cmp
adc
mov
daa
dec
cmp
xor
incl
or
dec
jge
addl
stos
push
sbb
inc
lods
insb
pop
jl
insb
pop
inc
pop
stos
enter
inc
int3
cvtps2pd
jl
cs
sbb
stos
pop
je
or
jne
test
sbb
inc
add
jl
int
adc
mov
imul
arpl
test
mov
push
mov
xor
jmp
mov
es
je
loope
jg
and
jne
cmp
sbb
jno
aad
mov
inc
fdivl
icebp
icebp
fstps
adc
cmp
in
test
aas
adc
int3
xchg
fisubs
mov
mov
inc
cld
xor
outsl
mov
xchg
lret
mov
xchg
into
loopne
int
rcll
jb
or
enter
mov
mov
mov
sub
cli
jb
add
cld
insl
pop
push
sbb
xchg
inc
aad
xchg
pusha
lret
sahf
in
cmpsb
dec
adc
loope
cmpsb
dec
imul
sbb
pop
xchg
push
rcrb
lock
push
pop
mov
pop
sub
imul
cli
pop
or
jle,pt
aaa
xor
xchg
test
add
push
je
and
movsl
jo
into
xor
mov
xchg
lock
mov
dec
sahf
pop
xor
scas
sub
arpl
or
lods
fs
or
ret
and
sbb
jo
dec
imul
inc
inc
dec
jne
jmp
mov
incb
sub
notl
bound
mov
daa
data16
divb
jg
shll
mov
mov
fisubrl
cltd
push
sbb
mov
sbb
fdivl
ljmp
cwtl
insl
dec
addl
or
jne
xchg
adc
or
jae
imul
les
pop
or
ret
cltd
dec
in
dec
inc
test
xor
adc
bound
je
cmpsl
inc
mov
movsb
cltd
inc
enter
fimull
sub
es
add
stos
nop
mov
or
cmp
pop
push
or
add
or
and
sarb
cmp
jge
pop
inc
push
movsl
cmpsl
xor
jae
mov
es
pop
push
aas
lcall
jno
push
out
push
dec
pop
out
loopne
movsb
clc
adc
mov
arpl
nop
daa
lret
imul
sti
lods
movsb
pop
mov
jmp
loope
lret
jb
addb
mov
push
fidivrl
pop
lcall
or
das
xor
mov
stc
dec
cmp
aam
mov
out
push
pop
sti
xor
pop
xchg
dec
std
add
mov
out
sub
outsl
push
adc
sti
rcrl
inc
push
mov
xlat
xchg
inc
scas
pop
and
adc
sub
test
aaa
call
inc
arpl
imul
mov
in
jecxz
mov
shrl
sbb
push
or
mov
movsl
popf
or
xor
inc
inc
jnp
jbe
loope
mov
push
mov
cmp
std
fwait
adc
add
in
nop
mov
xorb
outsb
cli
mov
mov
sub
jbe
jecxz
xor
mov
pop
or
iret
aas
in
xor
out
sti
sbb
cmp
nop
pop
ret
addl
test
sub
fsts
dec
mov
adc
enter
sub
daa
fstpl
dec
xchg
dec
mov
mov
hlt
or
and
adc
inc
sbb
xchg
pusha
mov
inc
les
jp
insb
xor
mov
add
int
cmp
pop
test
gs
push
in
xor
lea
and
xor
jl
lret
popf
mov
sahf
int3
popf
outsb
pop
jae
push
in
push
mov
jmp
cmp
mov
cmp
sub
pop
sub
jb
and
dec
mov
jno
cmc
icebp
sub
hlt
jecxz
xchg
insl
mov
sbb
ja
mov
pop
cld
iret
out
xchg
pop
adc
outsl
and
cmpsl
push
push
and
dec
fcmovu
test
mov
leave
mov
inc
test
js
mov
mov
push
mov
or
mov
stc
cli
iret
fcmove
sbb
loop
sbb
fldl2t
int
lcall
inc
jl
pop
stos
xchg
or
enter
xor
pop
and
leave
mov
jge
shrb
mov
cli
xor
sbb
cmp
adc
call
sbb
mov
push
sub
jp
push
orl
js
jl
mov
dec
std
add
scas
dec
jmp
jle
mov
and
push
addb
je
mov
in
mov
sub
or
bound
std
fmuls
cld
jle
mov
enter
xlat
dec
lea
mov
pop
and
mov
xchg
xchg
sub
dec
or
ret
fsubr
inc
outsb
jmp
pop
or
in
xchg
lret
jmp
movsb
add
ret
int3
pop
hlt
movsl
mov
gs
sbb
imul
ss
fbld
pusha
push
xchg
adc
pusha
cld
stc
lcall
lock
cmpsl
xchg
xchg
cmp
movsb
mov
jnp
jb
aaa
and
js
xchg
ss
cli
cmpsb
and
inc
imul
arpl
sbb
cmpsl
push
cs
fnsave
inc
xor
or
cs
sub
mov
mov
xchg
xchg
out
mov
lods
mov
cmpsl
rcrl
mov
mov
neg
lret
out
jmp
stc
sub
test
sub
or
dec
es
repnz
jne
add
mov
mov
dec
lcall
adc
int
push
xorl
bound
mov
in
clc
mov
cmpsb
arpl
dec
mov
cmc
push
xor
repnz
scas
test
lret
js
mov
lock
or
mov
outsl
push
xchg
sub
pop
ret
pop
ret
inc
hlt
fwait
pop
xor
int3
push
mov
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
movl
movl
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
addl
add
xor
sub
decl
jne
mov
mov
mov
add
decl
jne
pop
pop
pop
leave
ret
int3
test
scas
or
cmp
mov
inc
mov
inc
or
jno
jl
gs
dec
jae
cltd
mov
outsb
and
sub
mov
out
xchg
mov
test
cmp
xor
scas
mov
ret
sahf
stos
jg
icebp
mov
in
xchg
cmp
jecxz
repnz
shll
cmp
fdivrl
enter
bound
sub
push
adc
dec
repnz
pop
imul
mov
aas
jl
stos
xor
push
sbb
arpl
aas
cmc
fistpll
cli
adc
into
push
push
outsb
push
jb
aam
and
iret
outsb
into
xchg
in
in
xor
push
xchg
inc
cmp
lahf
aam
jmp
pushf
cli
jbe
fisttps
jns
cli
jg
mov
nop
ficoml
lock
adc
pop
lea
adc
mov
mov
mov
pop
dec
jl
and
pop
mov
push
daa
pop
enter
fcompl
xrelease
repz
