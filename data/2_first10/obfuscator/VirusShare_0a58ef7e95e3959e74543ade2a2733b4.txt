nop
nop
nop
cld
jmp
sar
jne
mov
js
mov
add
xor
adc
xchg
xchg
dec
ljmp
loopne
sbb
mov
mov
or
addb
xor
mov
ds
push
or
adc
outsb
push
sbbl
and
adc
xchg
mov
fldenv
pop
push
bnd
cmc
mov
and
test
ljmp
mov
insl
in
scas
xor
adc
into
xchg
sar
cmpb
in
inc
std
mov
mov
jb
pop
ffreep
fidivrs
sub
push
aad
adc
clc
jge
imul
rorl
jno
cwtl
sbb
cwtl
adc
ja
int3
cs
jg
adc
cmc
cmpsl
ret
xchg
add
cltd
test
std
pop
ds
ljmp
test
mov
scas
mov
ja
xor
ret
stos
sbb
cli
adc
loop
in
arpl
jne
xor
repnz
mov
aaa
mov
sbb
loop
bound
jns
je
jg
or
lret
push
inc
sbb
xor
xlat
test
sub
movsb
sub
cmp
fwait
jnp
pusha
sub
jmp
in
test
xlat
jns
in
ljmp
mov
xor
cmp
int3
cmc
imul
xor
hlt
sbb
test
push
xor
push
or
or
push
mov
sbbb
test
test
int3
mov
inc
popa
add
jns
inc
sbb
fsts
rcrl
inc
pop
out
mov
pop
adc
sub
clc
ret
cmp
or
out
mov
pushl
add
in
std
pop
or
jo
xchg
ds
lock
dec
inc
inc
cmp
cltd
std
sbb
cld
loop
in
mov
dec
push
pop
jae
pop
repz
add
or
dec
stos
testb
repz
xor
inc
addr16
ficoml
pop
mov
push
in
std
adc
dec
lea
jecxz
inc
mov
inc
cmp
out
arpl
mov
lret
pop
or
mov
sub
xor
xchg
lods
sub
or
lock
jg
xchg
and
or
lods
popf
movhps
xor
jne
lea
xor
push
jcxz
test
aad
lods
jno
xor
mov
loop
mov
arpl
mov
push
push
sbb
inc
push
mov
push
lods
mov
je
mov
int
les
adc
stos
push
pop
push
cmp
xor
add
push
sub
pushf
jnp
add
mov
or
xchg
or
lea
push
or
daa
mov
scas
sti
inc
mov
xchg
nop
jo
xor
mov
rorb
add
mov
push
push
sub
repnz
or
aam
xor
and
add
aad
ja
repz
push
mov
lret
inc
mov
cld
fwait
mov
mov
push
insb
lock
in
xor
push
cmpsb
test
rorb
scas
in
bound
aad
and
popf
mov
dec
cltd
lea
push
jns
xchg
clc
push
movsb
push
push
in
xchg
jbe
rcr
cmc
adc
xor
out
mov
lret
es
mov
xor
fwait
sti
loope
movsl
push
xchg
adc
lods
inc
cmp
clc
cmovl
dec
rcrb
mov
cli
aaa
pop
loop
adc
pop
paddsw
cmp
fists
fdivl
mov
pop
xor
adc
test
pushf
jnp
orb
ret
sub
push
mov
mov
xchg
xchg
ja
scas
add
iret
imulb
jl
pop
rorb
pop
or
add
in
ss
xor
inc
andl
sti
fistps
loopne
sub
scas
loopne
and
mov
cmp
cltd
lea
inc
dec
decb
sti
xchg
mov
ret
test
jl
lret
cld
fdivrl
pop
dec
imul
mov
pop
sbb
cmp
push
test
xor
pop
gs
sub
mov
mov
filds
in
xchg
mov
icebp
dec
stos
mov
add
xor
dec
mov
es
mov
mov
push
adc
adc
aas
sbb
adc
xor
mov
in
mov
popf
jnp
or
xchg
mov
pushf
xchg
sbb
test
repz
out
mov
jno
iret
popf
sub
xor
insb
push
test
adc
pushl
inc
xor
imulb
aam
pop
sub
cmpsl
lea
mov
xchg
fstpl
push
sbb
lock
outsl
sbb
push
cmpsb
sbb
sbb
stc
push
sbb
loop
or
or
and
stc
addr16
iret
pop
test
mov
pop
aaa
mov
pusha
inc
inc
shrb
sub
cmpsl
lea
xchg
and
mov
mov
and
pop
and
call
sar
sub
xchg
or
xchg
and
jae
fnstsw
xchg
mov
push
sti
dec
fwait
jp
inc
xor
ja
aas
sub
adc
push
mov
jns
dec
sbb
add
add
jp
sub
aas
mov
xchg
or
aad
pusha
push
ss
xor
addr16
repnz
jb
in
lahf
inc
repnz
test
inc
fs
pop
mov
mov
sbb
pop
repz
test
popf
hlt
or
cmp
das
in
cmpsl
push
cmp
hlt
cli
stos
dec
scas
ja
call
cmpsl
repz
jnp
adc
popa
cmp
insl
sti
dec
fisubrl
xchg
cmp
xchg
fwait
insl
jmp
xchg
mov
mov
lret
push
mov
fwait
cmpsb
inc
cmp
fisubl
hlt
outsb
xor
inc
xlat
xchg
cmp
mov
xchg
clc
add
sbb
orl
cvtps2pd
loopne
lahf
sbb
push
jns
jmp
mov
mov
push
iret
xchg
mov
std
out
add
jb
scas
and
mov
lret
sub
stc
je
mov
ret
ss
data16
jmp
xor
push
inc
fwait
leave
or
inc
sub
fldl
repz
push
push
std
lahf
pop
jge
mov
inc
lods
bound
mov
xor
mov
in
cmc
mov
aad
mov
pop
and
sbb
pop
or
ds
and
pop
in
lds
repz
mov
mov
mov
mov
stos
into
orb
ficompl
mov
xor
in
push
add
sub
mov
xor
call
add
insb
mov
mov
int3
js
enter
push
mov
add
in
fsubr
jl
pop
test
fcomi
lahf
cmp
mov
das
rcr
aaa
pop
rorb
cmp
cwtl
sub
pop
xchg
or
repnz
dec
lahf
in
stc
ljmp
fiaddl
fsubrl
cli
mov
cmpsl
cld
mov
sbb
jle
push
sbb
daa
stos
or
adc
jns
shrb
adc
or
push
jecxz
cmp
mov
push
jmp
fwait
cmp
cwtl
xor
fstps
xchg
ljmp
out
es
hlt
repnz
mov
rcrl
xor
jge
cmp
fimull
cld
js
adc
xor
shrb
mov
mov
insl
enter
inc
or
loope
jnp
mov
sub
fistl
xlat
push
jbe
leave
int3
and
aas
into
push
jp
das
or
adc
pop
in
mov
lock
iret
mov
shll
and
xchg
fdivs
lods
aam
adc
xchg
jp
sahf
ret
fildll
outsb
dec
in
cltd
cmp
xchg
cwtl
xor
jae
movsb
les
in
ret
in
pusha
stos
lock
cmp
sti
and
jecxz
and
daa
mov
cmpl
movsb
mov
pop
sbb
jns
fnsave
or
pop
sahf
mov
shll
stos
xchg
cmp
xlat
inc
les
cmp
nop
daa
xor
xacquire
nop
push
imul
jno
aam
jge
test
adc
sub
or
aas
mov
dec
call
mov
mov
add
push
adc
shll
pop
lds
and
ss
in
cmp
xchg
jg
push
sub
stos
xchg
jb
mov
call
xor
sub
loop
sub
pop
popa
out
inc
lods
test
or
jb
sbbl
scas
imul
stos
xchg
mov
jne
fldenv
cld
lcall
xor
mov
sub
push
in
xchg
xchg
and
test
mov
add
pop
jns
dec
cld
adc
mov
fists
pop
jo
sub
imul
ss
add
out
mov
das
lcall
mov
aaa
jno
insb
fcmovu
fwait
in
xor
xchg
ret
int
jmp
scas
pop
jnp
push
daa
sbb
mov
stc
pop
adc
sub
jg
mov
lret
pop
loop
fwait
xchg
push
jge
cli
bnd
imul
sub
out
pop
jbe
mov
rorb
sbb
and
inc
xlat
shl
xlat
movsl
movsl
cs
fwait
out
adc
push
mov
popa
ljmp
cmp
imul
jbe
xor
inc
mov
mov
rcrl
popf
adc
sar
xchg
and
adc
lods
insb
mov
icebp
outsb
mov
out
fmulp
cmp
jo
mov
scas
repz
mov
fidivrs
aad
sub
das
jbe
push
sub
push
jno
add
push
in
daa
mov
lea
faddl
add
addr16
xchg
jno
dec
pop
cmp
stos
jmp
mov
clc
mov
mov
cmpsl
or
mov
jp
idivb
jl
cmp
movsl
js
jb
or
out
dec
jo
sbb
or
sub
and
scas
cmpl
sti
test
xchg
sahf
cmp
dec
xchg
mov
and
push
xchg
add
sti
sbb
arpl
in
rorb
adc
push
xor
jbe
add
jmp
and
shlb
mov
faddl
lcall
push
mov
mov
cwtl
ss
lods
imul
gs
mov
aad
arpl
and
jecxz
adc
dec
lcall
xchg
aad
in
mov
inc
and
push
mov
sub
ss
inc
push
dec
xabort
inc
rclb
cli
push
sub
scas
loopne
adc
sbb
test
arpl
je
scas
dec
and
xchg
mov
cli
jecxz
aad
cmp
mov
add
rcrb
jne
out
push
add
dec
dec
inc
and
test
xchg
ret
pop
mov
sarl
add
xor
push
or
mov
cmp
mov
xor
mov
mov
gs
cmp
lahf
mov
stos
sbb
and
dec
and
enter
outsb
push
dec
fsubr
push
jge
in
out
out
jne
pop
cmp
out
mov
pop
ja
in
push
adc
sbb
jne
lret
mov
nop
dec
xchg
push
mov
adc
or
cmp
lods
xchg
sbb
les
loop
cmpsl
in
dec
adc
mov
push
and
cs
test
sbb
roll
outsl
das
ljmp
popa
ret
push
push
jne
jg
rorb
sub
mov
or
popa
lea
pop
mov
push
cmpsl
lds
add
into
pusha
push
fidivs
push
pushf
mov
jl
jmp
cmc
lds
dec
pop
ds
and
mov
add
jp
hlt
cmp
cmp
jae
mov
cmpsl
dec
pop
gs
ljmp
xchg
inc
sbb
bound
out
mov
pusha
or
mov
in
sbb
jg
aam
fmull
push
lea
pop
push
push
sbb
xchg
sub
dec
inc
dec
mov
xchg
xor
aam
add
dec
call
fcmovnb
gs
out
jns
scas
pop
in
push
in
dec
jg
lret
enter
xchg
xor
jmp
sbb
push
jmp
dec
loop
pminsw
test
jbe
jns
or
and
sbb
or
cwtl
push
loopne
adc
fcmovnbe
or
fidivl
int
fnstsw
pop
cmp
sub
xchg
push
stc
jp
mov
cmpsb
ds
dec
ret
inc
std
push
cltd
das
movsl
mov
and
repz
sbb
stc
pop
call
sti
mov
jbe
and
pop
xchg
xor
or
pop
sub
adcl
dec
in
shrb
pop
mov
data16
cmp
int
ljmp
mov
and
add
dec
imul
inc
sub
in
inc
xor
pop
xchg
lret
lahf
mov
dec
sbb
sub
and
ss
loop
in
insb
xor
mov
and
ror
dec
fs
or
jnp
fsubrl
shlb
pop
add
adc
jbe
scas
dec
push
dec
les
ret
inc
add
enter
pop
adc
inc
dec
add
leave
movsl
leave
int
ja
xor
push
arpl
cld
ror
sahf
aas
add
adc
mov
cmp
pop
dec
enter
add
ficomps
xchg
fwait
imul
inc
stc
jl
jl
sbb
ljmp
stos
push
lret
mov
data16
insl
movlhps
cmp
repnz
jbe
adc
pop
daa
inc
pop
and
adc
loop
inc
loope
lds
sub
and
icebp
push
mov
mov
xchg
inc
lds
enter
xor
popa
aaa
lods
adc
icebp
popa
pop
jg
mov
int3
inc
bound
cwtl
mov
lods
xlat
xor
gs
and
push
dec
shlb
fimuls
jmp
hlt
icebp
inc
sub
aam
adc
cmc
fildll
inc
je
shlb
cmp
sbb
inc
mov
jo
xchg
ss
adc
xchg
scas
xchg
ret
out
dec
jo
mov
add
int
jmp
dec
add
lahf
pop
xor
movsl
adc
bound
mov
cli
mov
jle
test
clc
cmp
lods
icebp
in
cwtl
dec
mov
push
imul
inc
cmp
test
sbb
push
xchg
or
mov
std
in
pop
inc
insl
add
xchg
loop
adc
dec
call
dec
cmp
lods
out
xor
lods
aas
clc
xchg
les
mov
push
xor
jecxz
cwtl
cli
xor
add
jnp
sub
fisubrl
das
dec
push
and
fists
sbb
popa
pop
js
add
xorb
push
mov
xchg
sbb
dec
and
les
cltd
or
jns
pop
cmp
mov
sub
push
xor
add
lea
xchg
xlat
sub
mov
sbbb
xchg
aas
add
cli
lahf
jge
mov
mov
push
out
rcll
int3
push
leave
pop
and
pop
in
mov
cmp
mov
and
adc
dec
or
dec
mov
popa
inc
sbb
xchg
add
in
sbb
test
xchg
ja
mov
mov
adc
mov
adc
addb
fnstsw
xor
scas
pop
sbb
cmp
lods
xor
je
into
jecxz
mov
lds
pushf
pushf
adc
inc
and
sarb
pop
rcrl
adc
test
mov
xchg
stos
cmp
push
cmp
pop
push
out
sbbl
cmpsl
mov
pop
in
or
xchg
mov
inc
iret
jns
daa
ret
push
mov
push
sti
adc
adc
jmp
shl
call
decb
data16
test
mov
sbb
pop
inc
jo
dec
mov
mov
cmp
pop
gs
lods
andb
cli
rcr
aad
mov
xor
and
ja
push
pop
cmp
std
sti
fwait
or
scas
sub
cs
ljmp
dec
inc
imul
sbb
sub
in
xchg
call
ds
cmp
bound
loop
pop
cwtl
pop
arpl
cs
or
mov
inc
jo
iret
je
imul
stos
jbe
je
or
addr16
mov
dec
and
sub
jl
or
push
or
push
aas
sti
int3
pop
lock
add
dec
lods
pop
push
clc
push
jge
push
lock
push
pusha
push
repz
pop
cmp
cld
xchg
fdivrs
and
mov
and
aad
push
and
xor
ja
mov
faddp
scas
ljmp
ljmp
or
aas
fistpll
pop
xor
xor
mov
push
cmp
cmp
and
pop
sti
mov
cmp
ret
in
mov
dec
or
pop
in
jo
or
mov
adc
imul
inc
pop
inc
inc
in
clc
fs
sub
ljmp
inc
dec
popa
xchg
xchg
cmpsb
scas
mov
push
mov
orb
shlb
xchg
leave
inc
xchg
repnz
cmp
lds
cs
cmpsl
std
imul
sarl
fldl
lods
jmp
aam
fstp
sti
lea
xor
adcl
cmp
fmuls
sahf
inc
insb
push
dec
inc
js
sbb
add
pop
lret
into
xchg
and
sbb
out
test
insl
iret
mov
fmuls
pop
je
jne
fsts
adc
sbb
and
cmp
or
adc
dec
cmpsb
mov
adc
push
mov
dec
sub
lds
icebp
inc
fs
cltd
aaa
sbb
push
mov
rclb
movsl
cmp
jg
iret
push
scas
or
test
mov
dec
mov
xchg
and
xchg
imul
sbb
sbb
enter
aas
ja
mov
pop
lcall
dec
shlb
jbe
loope
sub
mov
mov
xor
mov
enter
adc
jns
pop
repz
push
mov
dec
mov
idiv
dec
or
and
sbb
call
fists
add
inc
cmp
dec
dec
xchg
pop
dec
add
movsl
repnz
push
roll
rcrb
sub
hlt
daa
outsb
push
das
es
and
mov
cmp
cmpsl
lea
or
dec
fistl
cmp
or
into
loopne
or
lods
mov
adc
shll
dec
jge
jbe
xor
stos
mov
mov
loopne
mov
aas
aaa
mov
mov
cmp
jne
lret
sbb
fwait
cmp
fbld
adc
cs
icebp
dec
sbb
loopne
mov
inc
pop
cmpb
xchg
sbb
pop
hlt
stc
dec
int3
pop
and
lods
rorl
shll
sbb
les
sub
dec
adc
stos
imul
xchg
jo
jae
dec
push
stos
pop
lret
in
xchg
fwait
push
push
mov
pop
add
sub
push
in
sti
je
rorb
loope
pop
cmc
add
repnz
cwtl
xchg
dec
popf
sbb
cmp
mov
xchg
adc
mov
add
xor
or
cmpsl
pop
cmp
xor
sub
dec
xor
neg
mov
mov
jmp
and
loope
rcrl
jne
add
push
loopne
mov
adc
dec
cs
push
and
rorb
out
xchg
adc
movsl
jp
rorl
dec
jl
stos
test
inc
aad
mov
in
fstpt
push
aad
sbb
leave
rorl
push
adc
lret
push
add
inc
out
dec
lcall
jns
xchg
jb
jno
adc
mov
int3
dec
push
into
push
packuswb
push
std
bound
in
jo
push
test
push
popf
nop
push
das
movsl
ss
xchg
fwait
pushw
ret
mov
mov
pop
mov
dec
mov
mov
aaa
cmp
mov
inc
cmp
daa
cmp
sti
rcrl
or
xor
lret
cmp
cmpsl
xchg
shlb
push
inc
fmul
call
adc
inc
ljmp
sbb
or
and
jb
jae
and
in
in
mov
dec
arpl
imul
into
xor
pop
test
inc
test
outsl
inc
imul
mov
imul
inc
pop
xor
andb
inc
aaa
mov
sub
fistps
jg
jno
pop
insl
mov
fcomps
into
test
orb
push
nop
push
hlt
sar
ret
jae
sub
push
gs
inc
cltd
xchg
cwtl
daa
mov
scas
or
mov
and
call
sub
or
std
loope
aad
out
and
push
lea
or
out
push
sbb
daa
mov
bound
pop
adc
xchg
push
arpl
pop
or
fcoms
cmp
loope
jmp
mov
cmpsl
ret
fistps
jg
adc
sbb
push
sub
or
test
push
mov
jo
pop
xor
fidivs
mov
adc
jnp
xchg
sbb
mov
hlt
test
shl
test
lahf
mov
xor
int
lds
lock
cmp
inc
pop
rol
lahf
jle
iret
pop
push
cld
xor
fcomi
mov
jne
mov
lret
mov
inc
loopne
mov
fldenv
mov
fdivs
pop
cmp
pop
mov
mov
push
sub
and
xchg
and
sub
shll
jns
cmp
sub
mov
dec
and
addr16
shlb
xor
jl
lret
pop
cld
cmpsb
int3
mov
dec
xchg
mov
imulb
add
in
dec
jnp
jb
mov
dec
mov
cwtl
mov
mov
mov
adc
insl
jp
push
je
iret
push
inc
movsb
into
xor
xchg
jnp
repnz
cmc
dec
popf
movsl
add
mov
mov
test
jl
push
jmp
add
out
movsl
shll
cmp
aam
aas
subb
fisubrl
and
clc
inc
push
inc
stos
sbb
fmull
mov
mov
or
jae
push
leave
xchg
shrb
in
jnp
mov
and
cmpsl
mov
test
xchg
cli
imul
aaa
or
mov
xchg
leave
cmpsl
orb
rcrl
cmc
adc
pop
jge
dec
ja
repz
rclb
les
pop
stos
in
shl
add
aaa
cld
lods
movsb
lds
stos
dec
mov
int3
sarb
jae
mov
pop
dec
inc
aam
xorl
inc
pop
in
aas
push
and
and
pop
movsl
scas
pushf
repnz
mov
shr
inc
push
ret
lds
add
loop
pop
imul
testl
sahf
dec
inc
sub
xchg
mov
aad
jmp
call
inc
mov
sub
and
jns
fmul
enter
xchg
mov
ja
push
jmp
test
push
lret
ret
hlt
popf
aad
popa
pushf
and
pop
cmpsl
pop
loope
dec
icebp
xor
popa
push
clc
adcb
mov
aad
int3
enter
xchg
adc
cmp
and
std
push
int
jl
test
fcompl
fnstcw
or
clc
jb
pop
mov
leave
ja
in
push
sbb
mov
lods
fmul
xor
fisubrs
sar
sub
loopne
lea
mov
push
popa
stos
pop
int
lds
xor
cwtl
xor
mov
add
add
sbb
sbb
sub
dec
addr16
shll
je
lods
jbe,pn
pop
lret
jmp
jecxz
call
pop
adc
bound
xor
repz
xchg
push
outsl
mov
sbb
adcl
xor
inc
adc
mov
and
mov
dec
sarb
inc
mov
inc
mov
dec
add
sub
add
movsl
pop
xor
daa
mov
aad
insl
ds
loope
add
lret
into
ss
xchg
fs
jns
daa
pop
push
mov
adcb
leave
and
push
ret
lahf
xor
nop
ljmp
add
jle
lods
rorb
pushf
ret
add
pop
loopne
jecxz
faddl
hlt
sti
int3
fst
pop
cs
jl
aas
scas
lods
cmc
add
loopne
xchg
or
xor
xchg
into
daa
push
bound
lea
repz
mov
sub
mul
in
add
lret
test
or
jnp
js
scas
int3
sbb
jns
sti
scas
mov
bound
int
xor
insb
add
ret
dec
push
xchg
nop
pop
incb
test
lea
push
sub
sbb
dec
mov
cmp
lret
rclb
sub
mov
push
and
lods
pushl
leave
mov
lods
fldl
cmc
lds
dec
mov
stc
mov
inc
sbb
inc
imul
fidivs
movsl
pop
cmc
ds
xchg
sbb
leave
adc
pop
out
or
xchg
xchg
sbb
int
ja
test
rcrb
push
sub
enter
xchg
mov
lea
sub
iret
out
lods
sbb
sbb
lahf
leave
cmp
sub
aas
sti
imul
mov
xchg
jmp
mov
lds
jbe
sbb
xchg
mov
cmp
jns
xchg
sub
or
xor
inc
xlat
fdivs
outsb
add
pop
mov
ret
movsl
sub
push
mov
out
xlat
push
into
inc
je
cmp
insl
and
dec
test
jge
sbb
fistl
or
lods
call
stc
push
cmc
push
lea
cmp
jp
aad
mov
rcll
ds
xchg
rclb
fsub
mov
adc
inc
sbb
insl
xchg
dec
add
pop
insb
xchg
out
sbb
and
lds
adc
or
mov
jb
cld
lods
mov
push
xchg
mov
push
mov
or
dec
pop
lea
loopew
leave
popa
mov
out
leave
std
jle
inc
push
aas
scas
fsubrl
shll
sub
in
sub
sub
rcrb
push
scas
add
push
mov
add
dec
fs
mov
lcall
pop
jns
leave
leave
mov
fwait
mov
ds
lock
cmc
ds
adc
popa
movsl
xor
inc
arpl
add
pusha
inc
dec
popf
cmc
mov
xchg
aas
push
cmp
outsb
jp
dec
cmp
out
repz
cld
push
movsl
add
adc
stos
mov
and
je
sub
inc
inc
daa
mov
lods
cmc
test
lret
jg
inc
ss
lcall
push
int3
mov
jmp
sub
mov
loop
jne
out
jne
push
cld
lds
inc
jo
js,pn
pop
fs
xor
daa
mov
dec
mov
repnz
push
push
in
js
sub
xchg
ljmp
notl
repz
testl
xor
test
inc
add
call
test
mov
scas
mov
movsl
sub
push
andb
sub
pusha
ds
mov
in
sbb
mov
add
les
push
addr16
bound
or
es
adcl
pop
cmp
enter
shll
sbb
stos
add
jae
fldenv
adc
mov
insb
inc
sub
push
arpl
ds
lds
ljmp
fistl
xchg
mov
std
jns
push
mov
sub
int3
push
aaa
mov
mov
adc
iret
loop
jno
es
mov
cltd
dec
mov
xor
ret
cmp
push
pushf
test
in
mov
das
call
nop
mov
jno
mov
add
imul
pop
pop
rcll
jb
xchg
cmp
pop
xchg
xchg
rorl
adc
jmp
ret
or
adc
out
mov
out
and
out
xchg
adc
test
add
pop
inc
xor
mov
adc
in
dec
repz
sti
inc
shlb
xor
pop
cmp
repz
inc
cmpsb
adc
xor
notl
xchg
insb
mov
ss
push
inc
xor
gs
mov
pusha
pop
daa
add
mov
mov
xorb
divl
push
inc
jo
xchg
nop
dec
loop
fs
sub
mov
cli
cmp
cmp
mov
xlat
out
fstpl
pop
aas
xchg
mov
xchg
icebp
cmp
jb
add
mov
ret
ss
in
jns
lods
lea
lret
iret
lcall
dec
aam
or
add
xchg
cmp
popa
inc
fwait
ret
ret
pop
sbb
lret
iret
jge
outsb
lods
jns
dec
xor
lcall
cmove
xchg
pushf
and
scas
dec
push
push
and
lock
xchg
outsl
mov
negl
mov
sub
ret
cmc
sbb
lcall
loopne
add
inc
jle
xchg
ret
stc
or
lods
jecxz
push
adc
jne
addr16
sbb
stc
in
insb
loope
imul
fiadds
adc
in
iret
jb
sbb
mov
push
filds
into
leave
sub
rcll
ret
add
js
test
push
shll
dec
leave
call
push
lcall
mov
repnz
sbb
call
aaa
push
jnp
mov
push
mov
add
push
add
imul
out
xorb
das
das
cs
aad
mov
cmpsb
and
shl
xor
pop
imul
jo
cli
xchg
dec
sti
lock
cs
fdiv
and
imul
push
aaa
mov
shll
mov
fldcw
loop
dec
mov
push
mov
push
xlat
or
pop
push
cvtdq2ps
xchg
out
aam
out
sahf
push
jno
test
sub
or
or
push
scas
daa
inc
jecxz
mov
shll
or
mov
fdiv
dec
push
in
mov
fisttpll
je
ds
lods
inc
subb
out
sbb
dec
movsb
fadds
sub
inc
leave
fucomip
dec
movsb
mov
scas
jp
cmp
lret
mov
push
std
jmp
addr16
push
xchg
test
cwtl
popf
or
pop
add
repz
add
push
loope
mov
add
mov
mov
ss
shl
aas
mov
cmp
jbe
xchg
testb
mov
jno
addb
cmp
repz
out
fs
out
push
test
arpl
cmpsb
adc
inc
xor
paddd
repz
cmp
jmp
ds
stos
cld
cmp
lock
add
adc
push
pop
sub
flds
js
sbb
cli
arpl
gs
aad
lahf
adc
fidivs
ret
add
inc
jns
xchg
sbb
mov
repz
das
stos
leave
out
xchg
int3
push
mov
mov
mov
push
pop
out
out
lods
mov
in
mov
adc
cs
xor
daa
mov
push
mov
sub
dec
jge
lods
push
adc
mov
test
arpl
ds
jecxz
pop
lods
notl
add
jl
aad
icebp
je
mov
mov
loop
cmp
or
sub
fwait
ja
cld
fldenv
sbb
stos
adc
adc
xlat
mov
stos
inc
repz
push
sub
and
xchg
repz
and
jno
sbb
jb
jge
loopne
mov
xor
dec
mov
jl
popa
mov
rorb
fwait
mov
sbb
sbb
sub
sbb
dec
call
dec
in
negb
sub
cli
gs
fistpl
fisubs
movsb
jnp
test
xchg
into
and
lret
fistpl
es
push
xor
popa
int
inc
xchg
cmc
in
outsb
or
push
pop
mov
frstpm(287
cmpsl
jae
out
sub
dec
sbb
xchg
pop
jbe
in
push
lret
sbb
leave
out
cli
push
es
cmp
jg
add
cmpsl
cmp
std
out
cmp
mov
aas
dec
jbe
add
imul
aad
pusha
notl
cld
jmp
loopne
fcoml
lcall
hlt
scas
sub
fdivrp
movsb
ljmp
aad
or
out
mov
jge
dec
mov
movsl
xlat
push
cmp
push
cwtl
add
hlt
pop
push
pop
cltd
mov
push
ss
mov
pop
popa
cmp
mov
mov
rcl
call
pop
push
ja
pop
jge
fs
pop
sahf
and
jo
sbb
add
and
sbb
roll
ds
or
push
les
pusha
imul
mov
add
adc
jnp
hlt
jbe
test
jle
pushf
mov
mov
negl
xchg
ja
mov
xor
mov
pushf
and
iret
mov
loope
sbb
fmuls
loopne
in
das
mov
mov
mov
aad
push
ret
sbb
inc
lcall
je
cmp
icebp
cmp
sbb
mov
fcompl
out
std
popa
scas
out
insb
xchg
or
shlb
ss
add
xlat
sbb
int3
inc
or
jo
ret
pop
je
cmp
bound
xor
mov
mulb
sbb
mov
xorl
gs
test
imul
jae
pop
aam
mov
negb
call
inc
add
xchg
push
dec
fistpll
pop
data16
adc
scas
inc
mov
sub
jo
mov
inc
mov
lahf
mov
scas
in
xchg
mov
ret
sarb
jmp
cli
cld
aam
pop
ret
cmpsb
stos
jle
push
mov
mov
imul
inc
inc
and
adc
cmp
fucom
imul
js
lret
sub
mov
repz
shll
aam
dec
fstpl
push
loopne
scas
movb
mov
adc
adcl
inc
sahf
push
ja
push
fs
scas
xchg
divl
xchg
or
jecxz,pn
int
cmp
jl
push
pop
imul
xchg
cmpsw
lret
loope
jae
pushf
inc
test
jne
xchg
bound
outsl
sbb
sbbl
add
or
push
jb
pop
es
test
push
dec
sahf
shlb
xlat
xchg
inc
add
fcoms
jmp
outsl
dec
out
dec
lods
loop
lods
in
pop
fldenv
imul
adc
mov
daa
xchg
cmp
cwtl
jge
jge
fwait
push
mov
push
out
out
push
pop
lea
cli
and
loop
fs
xor
xchg
scas
dec
ficoml
mov
inc
xor
mov
rcrl
decl
add
mov
or
jle
add
mov
mov
cmp
adc
jmp
sbb
and
jl
aas
mov
scas
arpl
jmp
dec
ret
push
hlt
jle
or
mov
xor
fucomi
les
or
imul
mov
jle
or
sub
add
movsl
sbb
cli
js
rcrb
xchg
jp
imul
pop
and
push
stos
xor
sub
xchg
jl
gs
loope
lea
inc
pop
push
testl
mov
jae
and
dec
xor
loopne
mov
pop
add
int3
add
out
shll
mov
fcomps
push
leave
push
jno
out
lock
jnp
movsl
adc
sbb
dec
sub
mov
ret
sub
add
cmp
pop
sbb
or
pop
jb
xchg
sbb
push
xchg
call
scas
aaa
test
pop
add
sahf
pop
aaa
pop
sbb
sar
adc
aam
ds
and
dec
adc
pop
or
lods
cmc
pop
mov
popa
imul
rcrb
dec
cmc
hlt
mov
out
push
subb
mov
jl
fwait
sub
fimuls
push
mov
mov
mov
pop
jecxz
cld
fnstsw
icebp
sub
cmp
sbb
or
mov
or
xchg
add
push
mov
outsb
add
int3
mov
aas
fcoml
xor
or
outsl
xor
repnz
jg
daa
out
jmp
imul
add
mov
jmp
push
cmp
shl
iret
jne
rol
and
stos
test
mov
roll
mov
es
sub
xchg
orl
addr16
out
lock
cmp
fsubrs
faddl
pop
and
sbb
pop
in
andb
xor
fstpl
sub
or
inc
ds
adc
adc
add
mov
dec
push
scas
jp
lods
f2xm1
movzbl
add
xchg
ds
add
sbb
stos
rcrl
pushf
repz
push
mov
fildll
adc
movsb
sbb
push
frstor
inc
xchg
test
mov
cwtl
push
std
pop
lock
jp
lods
xchg
jmp
jo
cs
push
mov
ss
push
add
xchg
sbb
je
aaa
and
fists
data16
inc
decl
mov
jbe
dec
adc
lcall
adc
sbb
push
jno
dec
iret
xchg
out
pop
daa
adc
fwait
mov
mov
mov
or
std
data16
fsubrs
popa
divl
adc
jnp
xchg
add
mov
pop
mov
ja
addl
mov
jnp
sbbl
call
mov
jne
ret
jmp
jl
rclb
aam
mov
mov
xchg
aam
add
jnp
jp
and
add
xchg
pop
push
push
inc
mov
fwait
and
or
mov
mov
test
xlat
aam
jbe
sbb
gs
push
xor
mov
fadd
jns
and
lock
cltd
insb
mov
mov
mov
aaa
mov
cmp
je
mov
xchg
pushf
mov
xchg
insb
ret
jne
dec
nop
scas
je
xlat
lock
loopne
cmpsb
cld
jp
jb
and
popa
das
mov
dec
xchg
sub
pop
sahf
call
pop
adc
xor
cmp
popf
xchg
cs
xor
push
stos
lods
movsb
lods
or
and
test
fildll
pop
pop
cmpsb
push
xor
and
jae
mov
gs
pop
push
scas
jle
addr16
hlt
mov
les
adc
loope
add
out
in
mov
mov
push
or
in
out
push
cli
stos
inc
sbb
fisttpl
push
push
fisttps
movsl
sbb
push
and
scas
popa
imul
loopne
popf
mov
jb
sub
in
and
xlat
push
xor
repz
adc
loopne
popa
imul
pop
jmp
add
dec
movsl
int3
nop
or
jle
pop
jne
jge
out
push
pushf
jo
cmp
pop
pop
fnsave
mov
out
jp
dec
in
test
mov
xor
int
movsb
cmp
dec
lods
in
dec
movsl
adc
mov
add
jmp
sysret
das
cli
add
jmp
fwait
add
popf
insl
xor
enter
repz
mov
sub
push
cltd
push
dec
mov
adc
lcall
inc
mov
sbb
cmp
in
ss
hlt
xchg
fs
fnstenv
and
mov
cmp
lahf
dec
testl
cmp
stc
leave
sub
push
pusha
mov
mov
into
lret
imull
adc
rcl
add
sbb
dec
push
mov
xchg
cwtl
out
aaa
sbb
test
test
hlt
sti
call
pop
xor
sbb
aas
lcall
ficompl
popf
scas
lea
je
cmpsl
dec
lea
cs
iret
push
repnz
xchg
sub
mov
test
ds
test
inc
mov
mov
mov
outsl
dec
pusha
cwtl
incb
out
lahf
fdivr
xchg
or
mov
insl
stc
inc
jecxz
pop
cld
movsb
testl
sahf
dec
add
pop
sub
and
lods
loop
add
popf
daa
repnz
or
or
add
ret
cmp
arpl
clc
pusha
enter
jp
fisubrl
and
cwtl
xchg
cli
lret
mov
pop
mov
rcrl
add
lods
in
ljmp
imul
and
lcall
les
fsubrl
loopne
sub
push
mov
add
jae
pop
pop
rorb
es
inc
adc
jecxz
or
int3
pop
scas
and
icebp
push
inc
pop
sti
not
das
push
cltd
adc
pop
ret
jbe
pop
adc
sarb
jmp
cltd
addb
add
cmp
push
clc
shl
sbb
aam
test
ret
add
xor
push
and
das
push
sub
mov
pop
in
adc
ret
adc
sub
movsb
movsl
pop
xchg
out
in
push
xchg
bound
cmpsb
movsl
ds
push
mov
into
js
fldcw
adc
dec
add
pop
push
inc
and
repz
repnz
cmpsl
add
insb
pop
sbb
add
fs
xor
into
test
mov
decb
lea
pop
adc
sbb
mulb
inc
and
push
cmp
rcrl
xor
adc
loope
cmpsb
xchg
out
lods
jmp
jo
js
xor
jb
xchg
dec
xor
jae
pop
test
fsubr
loopne
mov
dec
jne
insb
push
or
mov
cmc
in
mov
mov
je
xchg
in
xchg
push
pop
push
pop
and
push
aaa
add
pop
push
jns
divb
rorb
divl
jae
xor
mov
or
std
aaa
stc
dec
add
jo
xchg
adc
xor
sbb
jae
ljmp
enter
xchg
icebp
call
ljmp
fcomp
stos
out
push
and
or
testb
adc
sbb
cmpl
aas
sub
fbstp
sbb
movsb
xchg
mov
repnz
sbb
mov
or
mov
push
cmp
negb
xchg
js
sbb
adc
into
push
fs
mov
cmp
jbe
inc
in
push
into
in
bound
out
push
jecxz
icebp
or
out
push
and
mov
hlt
sbb
pop
xchg
lods
cmpsb
push
repz
dec
enter
stos
inc
mov
rcrb
pop
push
js
subb
dec
dec
push
clc
jmp
das
pushf
int
scas
sbb
test
pop
scas
and
sbb
rcrb
stos
ja
gs
dec
add
out
xchg
mov
in
out
pop
xor
push
test
and
lods
repnz
cmp
mov
in
push
mov
test
mov
add
in
dec
jg
mov
int
outsl
push
out
xchg
add
and
pop
adc
mov
in
popf
add
xchg
jmp
lcall
std
xor
or
pushf
add
fnsave
mov
inc
cmp
pop
test
movsb
jmp
negb
push
pop
imul
fdivrl
adc
pop
jl
mov
push
xchg
dec
mov
ljmp
loopne
lret
mov
repz
ficoml
loope
mov
out
das
jo
add
mov
out
test
xchg
sub
pushf
jle
lcall
lahf
pop
adc
jl
outsb
cmp
pushf
adc
fcompl
push
xor
mov
xor
pop
xor
gs
push
fisubs
les
lock
jno,pn
dec
xorl
loop
cs
pop
popa
out
mov
icebp
push
popa
mov
inc
mov
imul
add
leave
in
lea
clc
jecxz
pop
and
jl
mov
shl
outsl
push
test
mov
xchg
dec
jne
je
pop
push
fstpt
push
and
xor
stos
mov
jle
xchg
sbb
sub
cmpsb
sahf
jle
sbb
arpl
arpl
subl
pop
push
dec
movsl
or
fsub
jne
cli
fdivr
mov
add
les
out
pop
repnz
cmp
xchg
jo
loope
cwtl
out
dec
movsb
jae
inc
cmp
jo
mov
dec
inc
out
mov
cmp
mov
hlt
outsb
mov
inc
clc
popf
xor
in
mov
call
popf
jg
mov
repz
xchg
out
dec
jns
fsubp
fimull
aas
outsl
pushl
jl
ficompl
push
pop
and
mov
jg
push
add
mov
xchg
fdivl
push
push
aad
xor
dec
inc
insl
sub
les
mov
outsl
push
inc
adc
xorl
dec
pop
fst
mull
jge
push
repz
es
xlat
test
je
pop
test
push
cmp
test
gs
cld
fldz
scas
lret
mov
or
jmp
cltd
lock
add
in
movsl
pop
and
lret
stc
jmp
jmp
jle
xchg
jmp
test
imulb
lret
xchg
mov
xchg
pop
xorl
ficoms
bound
outsb
or
push
scas
cltd
sbb
push
in
push
movsl
insl
outsb
inc
adc
loope
cmp
mov
fisubrl
cmpb
cwtl
and
and
stos
push
cmp
test
lcall
push
lds
mov
xchg
clc
lret
xchg
push
mov
inc
and
lcall
je
sbb
cld
dec
pop
das
movsl
cmp
add
cmc
pushl
fwait
cmp
xor
cmp
jnp
push
mov
les
out
xor
daa
xor
sbb
int3
ud1
je
mov
pop
sbb
push
lahf
int3
ss
pop
xchg
das
test
movsb
xorl
xchg
and
dec
jnp
leave
sbb
push
xchg
int
jb
pop
mov
mov
mov
test
int3
xor
mov
push
add
inc
mov
into
adc
notb
pop
or
mov
outsb
ja
dec
jo
mov
js
push
das
fistpl
mov
mov
inc
aaa
xchg
test
in
cli
les
divb
and
push
arpl
push
sub
add
ljmp
fwait
fs
aad
in
or
ret
sbb
in
dec
ja
cwtl
mov
inc
cli
call
inc
out
xchg
aad
out
movsl
inc
inc
inc
cmp
push
jb
frstor
das
sbb
cmp
pop
dec
xchg
xor
mov
dec
inc
loope
repz
and
insb
stos
sahf
mov
je
dec
icebp
mov
mov
mov
sub
sahf
loope
mov
es
das
shll
mov
jae
cmc
ljmp
movsb
inc
adc
in
ds
xchg
xchg
inc
pusha
lods
out
insb
push
push
and
std
daa
in
hlt
shlb
jnp
push
cs
mov
mov
insb
inc
sbb
sbb
jbe
sbb
sub
push
aam
or
adc
loopne
loope
out
sarb
push
iret
xchg
es
sub
sahf
pop
lea
into
mov
push
in
xor
dec
jg
mov
or
out
inc
addr16
jo
mov
test
xchg
dec
pop
and
in
mov
into
or
imul
shl
popa
push
mov
and
xchg
adc
sti
leave
std
sbb
add
clc
and
sbb
mov
movsl
and
adc
or
ja
adc
add
adc
sbb
movl
mov
imul
xlat
ficoml
fdivrl
push
or
sub
lcall
xorl
add
movsb
cwtl
pop
pop
pop
sti
scas
in
and
jl
test
movsb
rcr
mov
movsb
xlat
and
subb
sbb
sbb
and
arpl
lods
scas
xchg
repnz
push
sbb
scas
lea
mov
inc
mov
stc
mov
aaa
inc
jb
dec
dec
loopne
mov
outsb
dec
and
dec
fbstp
fldenv
push
cltd
dec
faddl
inc
mov
push
and
imul
pop
ja
xchg
jb
jo
push
dec
jbe
mov
add
lods
xchg
adc
xchg
jp
loop
stos
aam
mov
jmp
add
cmpsb
inc
adc
test
ficompl
adc
cmp
cmpsb
push
in
sub
xlat
dec
mov
cmp
lahf
or
or
inc
mov
xchg
adc
pop
inc
lret
push
sbb
jo
cmpsb
shrl
xor
cld
or
and
xor
popf
push
into
cmp
fcmovu
push
lods
pop
sub
subb
cli
ja
shll
ja
outsb
mov
sbbb
xor
fcompl
mov
and
mov
sub
addr16
dec
mov
ljmp
adc
ret
sar
mov
pop
ds
arpl
loop
sbbb
mov
mov
sbb
push
fsubrs
dec
cmp
in
push
jo
arpl
jg
es
pusha
out
pop
jb
mov
cmc
mov
test
jo
outsl
arpl
inc
mov
imul
negb
lods
insb
jno
dec
stc
xor
dec
fcmovnb
mov
sbb
sbb
sahf
sbb
pop
insb
cmp
into
movsb
scas
mov
push
imul
cmpsb
and
out
lds
lds
mov
mov
fldcw
movsl
imul
mov
test
and
shll
movsl
test
xchg
and
xor
jmp
in
xlat
xchg
into
and
into
dec
jge
rolb
vaddsd
cwtl
loop
out
sub
xchg
mov
hlt
add
subb
lds
jb
xchg
rolb
jno
cwtl
dec
popf
fidivrl
sarl
xor
aam
inc
mov
movsl
inc
pushl
shr
or
rclb
mov
clc
leave
cld
imul
mov
das
mov
xchg
neg
loope
dec
ret
arpl
cmpsl
mov
pop
cmpsb
addb
xor
es
push
cmp
adc
addr16
xor
sbb
dec
arpl
xchg
pop
sbb
negl
fmul
inc
cs
jecxz
jg
les
jmp
xchg
bound
addr16
lret
lods
aam
xchg
cli
sbb
pop
cmp
or
aad
push
out
hlt
fcmovne
and
pop
in
add
mov
ret
xchg
inc
aam
push
inc
mov
xchg
dec
mov
and
aas
sub
pop
cs
dec
sbb
jno
scas
addl
aad
in
sbb
cwtl
inc
mov
cmp
cmpsb
cmp
mov
mov
cs
xor
inc
or
push
add
jns
sahf
inc
add
stc
mov
dec
cltd
mov
sub
add
lahf
call
testl
jne
mov
into
scas
insb
push
push
in
gs
mov
and
enter
mov
fwait
rclb
ja
js,pn
push
gs
fs
and
fbstp
sbb
jecxz
sub
adc
cmp
mov
jmp
sarb
xchg
jo
mov
roll
rol
mov
push
lret
sub
rorl
cmp
subl
pushf
rcll
out
lea
push
or
sub
jmp
std
addr16
mov
gs
push
jge,pt
add
lods
adc
ss
add
cwtl
cwtl
pop
xchg
xchg
movsl
rcl
and
aam
mov
mov
jo
imul
daa
popf
and
and
imul
jno
cmpl
and
call
sub
xor
mov
lret
rcr
loope
sbb
popl
push
add
sti
incb
mov
test
pop
xor
dec
movsl
push
cli
enter
dec
lcall
mov
rcrl
push
or
lods
push
pop
fdivs
fisttpl
inc
dec
mov
das
and
sub
scas
int3
push
pop
lods
sar
sahf
push
pop
je
dec
imul
ja
ret
in
push
lds
dec
in
cmp
rorl
dec
pop
ds
idiv
mov
ljmp
sahf
jmp
repnz
cmp
push
in
jg
push
stos
mov
std
xchg
lret
jb
pop
jge
lret
jle
data16
frstor
xlat
push
mov
insl
and
adc
sub
inc
fs
ja
push
sbb
stos
push
dec
push
dec
mov
dec
std
negl
and
daa
and
cmp
sub
nop
ficoml
icebp
mov
jne
push
sub
leave
and
cmp
iret
cmpsl
sti
add
inc
enter
aaa
out
jns
roll
imul
dec
lcall
cmpsb
and
leave
xchg
cwtl
les
mov
push
add
mov
mov
shrl
addb
mov
rclb
xor
adc
lods
jmp
ret
adc
pop
into
loopne
das
adc
bound
lahf
cld
mov
or
push
push
or
mov
sarb
and
and
ja
std
xor
pop
xor
fcomip
inc
push
cli
mov
pop
in
into
out
out
push
clc
lea
aaa
pop
cmc
lret
shrl
sbb
loopne
inc
jmp
bound
insl
push
outsl
ljmpw
fs
mov
jb
xchg
pop
adc
push
repz
push
cmpb
mov
xchg
popf
movsb
sub
xchg
in
sbb
or
sahf
or
das
adc
sub
dec
rcrl
dec
mov
stc
lods
or
or
lea
lds
mov
xchg
push
movsb
jg
aad
rolb
std
dec
adc
filds
mov
enter
jne
add
lock
inc
push
js
xchg
xchg
mov
or
pop
xor
cmp
xor
test
stos
push
loopne
aaa
mov
or
sub
adc
andb
orl
leave
sti
pop
iret
mov
jg
cmp
mov
or
cmp
stos
lods
ljmp
mov
mov
inc
lods
xlat
xor
test
iret
pop
cmp
clc
loopne
xchg
cs
pop
test
xor
mov
adc
pop
nop
test
or
push
js
pop
pop
mov
adc
adc
fs
cld
push
mov
xor
push
and
mov
dec
out
fmuls
shlb
adc
xor
decl
test
adc
cwtl
into
daa
lods
mov
iret
scas
cli
ret
lahf
and
mov
adc
mov
test
push
mov
sbb
insb
inc
clc
push
stc
loope
rcll
addl
or
cs
lea
hlt
addb
cmp
ret
mov
test
sub
sub
subb
jmp
gs
cmp
pop
mov
das
stos
xlat
and
mov
sub
sahf
or
icebp
lahf
clc
mov
sbb
mov
jmp
jge
sbb
and
push
test
inc
pop
ja
mov
out
mov
orb
into
aam
mov
das
mov
lcall
dec
sahf
and
data16
or
jmp
xchg
mov
mov
je
inc
pop
dec
push
pop
rcrb
fidivl
sub
mov
shlb
vmovntpd
fnstsw
addr16
jp
add
jae
jp
jge
test
outsb
jp
fistpll
jo
adc
out
cmp
in
sub
cmp
adc
mov
dec
cmp
jne
cmc
sub
mov
jnp
lock
shr
decl
lods
dec
nop
push
mov
cld
sbb
pop
push
dec
cs
bound
orl
mov
cmp
cwtl
push
aas
ret
shll
push
loop
int3
imul
xchg
pop
fmull
mov
mov
xchg
push
pusha
push
insl
xor
xchg
bound
xchg
fildll
jns
mov
cmpsl
add
inc
std
cmp
scas
ja
mov
or
dec
sarb
mov
loope
or
leave
loopne
lahf
movsl
mov
lcall
push
xchg
push
ljmp
add
cmp
pushf
mov
sub
or
push
cmpl
push
test
adc
call
xor
jb
and
das
push
jecxz
push
pop
mov
dec
jno
aas
cmp
pop
ljmp
inc
sti
and
mov
cmp
stos
repnz
repnz
pop
inc
add
push
mov
xchg
jge
xchg
hlt
mov
mov
sub
pop
jmp
mov
hlt
iret
xor
or
and
push
xor
jo
mov
push
test
add
mov
rcll
and
cmp
and
mov
adc
jne
push
cmc
add
clc
out
cltd
sahf
ljmp
in
pop
lods
mov
fbstp
divl
cmp
xchg
iret
pushf
adc
adc
inc
xchg
sahf
sti
cltd
ss
stos
stos
dec
mov
ljmp
sti
adc
mov
and
and
mov
fisubrl
stos
or
sub
aas
xchg
xchg
hlt
xlat
ret
xor
push
add
mov
adc
mov
scas
push
and
cmpsb
es
xchg
xchg
xchg
sbb
movsb
pop
xchg
not
ficomps
or
mov
movsb
or
fnsave
cmpsb
and
dec
jno
enter
popa
push
icebp
pop
js
out
je
out
inc
imul
push
cmpsl
pop
out
out
push
mov
pop
mov
popf
scas
cmp
adc
mov
adc
xchg
sbb
hlt
jne
dec
dec
xchg
mov
push
loop
mov
and
adc
jg
push
lcall
xor
popf
jl
out
mov
pop
test
mov
mov
imul
imul
pop
adc
ljmp
out
ljmp
leave
cmp
adc
iret
dec
daa
fcmovnu
pop
es
shlb
sbb
nop
sahf
xor
and
divb
push
cs
dec
in
out
adc
jno
inc
arpl
jne
push
jp
lcall
insl
dec
clc
imul
out
arpl
inc
das
mov
int
clc
mov
sbb
xor
and
xor
repnz
in
lret
int
xchg
mov
jecxz
shlb
into
mov
dec
inc
std
cmp
xchg
ficompl
cwtl
inc
xchg
rcr
iret
stos
push
push
jmp
dec
dec
cmc
cld
push
cmc
mov
out
cmp
dec
xlat
sbb
ret
fmuls
out
push
add
inc
push
push
stos
push
jl
int3
mov
push
push
pop
sbb
pop
xchg
fwait
mov
pop
inc
push
loop
xchg
xchg
mov
lods
lock
stc
jmp
cli
push
call
imul
xor
jmp
cmpsl
rcl
lock
xchg
sbb
lcall
jle
xchg
dec
mov
cmp
cli
rorb
dec
and
loop
adc
rcrl
nop
or
jae
xor
pop
mov
aaa
adc
push
mov
enter
sub
and
mov
arpl
scas
icebp
mov
xchg
andl
and
mov
andl
fisubrs
hlt
pminsw
mov
xchg
divb
push
pop
mov
push
je
scas
lds
jnp
and
ljmp
xchg
mov
arpl
je
lods
ljmp
in
movsl
dec
std
lods
lock
dec
sub
xchg
add
mov
icebp
int3
xor
pop
mov
shr
insb
lds
jae
mov
lods
call
adc
jo
sbb
addr16
inc
mov
out
int3
sub
fucomp
pushf
loopne
sbb
icebp
repz
and
ds
pop
mov
pop
mov
out
pusha
jge
mov
in
or
fsts
adc
pop
push
shl
test
ss
mov
sub
mov
cmp
xor
ja
pop
push
jns
xor
fbld
and
sbb
inc
les
lret
enter
scas
pop
push
sarl
mov
test
lret
mov
mull
test
fs
push
lods
sub
sbb
dec
lods
xchg
arpl
push
mov
jo
jne
and
sub
stos
jmp
shlb
inc
xchg
data16
inc
sub
imul
push
dec
idivl
add
push
xchg
rolb
push
or
inc
mov
leave
mov
or
xchg
inc
cwtl
rclb
lahf
jo
mov
sbb
sub
sub
pop
rcrl
test
and
sub
add
ss
inc
add
popa
mov
lahf
rcl
in
in
inc
jmp
scas
lcall
xchg
fbstp
sbb
xchg
dec
outsb
jns
jnp
sub
out
jmp
icebp
enter
ret
xor
gs
hlt
das
notb
mov
out
outsl
add
aaa
std
jl
pushf
bound
popa
push
insb
xchg
pop
gs
cmp
aam
repnz
xlat
pop
std
into
fdivl
orl
adc
iret
ljmp
inc
xchg
mov
es
push
mov
pop
mov
cmp
jne
fs
cli
pusha
mov
or
ds
mov
imul
into
arpl
cmc
imul
mov
jg
xchg
lcall
in
mov
ret
fnstsw
imul
dec
jg
jecxz
mov
cwtl
aam
inc
mov
pop
ret
mov
xor
out
push
lods
loopne
fdivrl
mov
aas
pop
aaa
ljmp
or
loope
mov
imul
loope
mov
mov
mov
push
movsl
stos
mov
pop
es
mov
jp
shrb
push
lock
and
scas
mov
fstpt
outsb
ja
test
shll
mov
lock
mov
mov
sub
cmp
mov
in
xor
fmuls
sbb
clc
enter
adc
gs
push
cs
call
nop
cwtl
sbbb
adc
xor
sbb
jbe
mov
das
in
hlt
clc
mov
mov
data16
out
das
mov
add
or
xor
or
add
dec
add
cmpsl
mov
sub
rcr
jge,pt
xor
mov
or
pop
inc
std
mov
lahf
int
add
rorl
movb
insl
out
pushf
mov
leave
xchg
xchg
shll
daa
mov
insb
sbb
push
pusha
lods
jb
lret
dec
leave
push
pushf
inc
sbb
mov
xchg
ljmp
dec
sbb
sub
mov
cmp
lods
test
out
sahf
js
and
mov
dec
and
push
rorb
test
lahf
cltd
test
mov
pushf
add
push
mov
enter
es
fcomps
lods
or
or
bndstx
add
testl
push
jb
xchg
push
fbld
mov
sbb
mov
sbb
xor
dec
and
fisttps
loop
inc
pop
sub
movsl
ret
repz
outsb
mov
mov
shll
xor
stos
rep
push
cltd
pop
out
mov
add
xchg
js
pop
push
loope
push
push
jb
imul
int
pop
in
fldenv
push
sarb
stc
test
jp
imul
push
in
push
movsb
scas
xchg
xor
scas
add
movsl
das
pop
imul
scas
push
sub
or
mov
bound
in
test
shl
lds
add
iret
mov
pop
ss
inc
mov
fucomp
mov
out
repnz
mov
cmp
movsb
xorb
dec
pushf
dec
mov
inc
add
pop
mov
pop
mov
gs
psrad
xchg
mov
jae
mov
aaa
fwait
cmp
xlat
xchg
scas
cmc
into
imul
jnp
or
or
mov
scas
cmp
sub
mov
cs
adc
cmp
push
mov
pop
lahf
push
ret
push
fs
bound
and
sub
movsb
out
mov
push
jp
or
dec
gs
imul
loope
fs
out
out
jo
stos
mov
xor
jmp
outsb
pop
or
mov
shrb
xchg
or
add
jecxz
jmp
push
adc
sbb
inc
ja
mov
sbb
hlt
jns
xchg
aad
in
rclb
jle
addb
or
mov
sub
mov
shrl
adc
lret
in
jg
inc
repz
pop
outsl
push
ds
mov
mov
inc
fisubl
inc
fstps
addb
cli
lds
sub
cwtl
add
loop
inc
add
xlat
ljmp
aam
cmpsb
xor
in
rol
stc
outsb
pushf
push
pop
addr16
mov
out
fwait
mov
popf
jmp
cmp
add
lret
fsts
pushf
dec
push
lds
adc
movsbl
jle
out
scas
adc
inc
jg
call
pop
push
cmp
jmp
cmovge
xchg
pop
jbe
sub
xchg
mov
mov
mov
mov
addl
out
in
jle
and
jp
xor
leave
jge
fs
mov
cmp
lahf
int
daa
and
mov
adc
xor
cmp
insb
jg
cmpsb
or
pop
or
shl
or
and
loopne
and
xor
or
dec
push
sbbl
push
inc
lret
and
pop
subb
xchg
stc
in
mov
out
xchg
pop
lret
add
scas
push
sub
ror
in
xorb
push
pop
add
in
mov
or
jp
ret
dec
imul
push
in
push
imul
cltd
add
in
in
lods
cmc
inc
mov
js
xor
xchg
into
in
ds
add
adc
push
xchg
add
or
push
xchg
cmp
aam
cmc
sub
add
shrl
sar
push
mov
cltd
aaa
mov
jmp
cmp
inc
sbb
pop
outsl
inc
or
out
mov
or
add
jmp
incb
cvtpi2ps
in
mov
push
mov
out
cli
in
sbb
cwtl
call
pushf
cmp
daa
or
ljmp
fsubl
outsb
jle
jg
arpl
pop
stos
leave
xchg
loopne
push
add
jns
pusha
movsb
cmpsl
imul
mov
in
shlb
lahf
gs
fneni(8087
jae
andb
lock
das
cld
jl
cmpl
mov
pop
imul
and
inc
lret
js
xlat
lock
cmp
pop
xchg
jge
push
inc
mov
out
les
sbb
cs
mov
push
jns
in
icebp
and
les
int3
out
mov
xchg
xchg
and
xchg
sbbl
mov
stc
jb
jmp
shl
mov
daa
fbld
mov
jnp
mov
bound
mov
lret
lahf
jo
xchg
cmp
xchg
scas
xchg
mov
cmp
cmc
test
dec
and
push
ss
mov
pop
je
adc
xchg
fistl
pushf
popf
outsb
stos
adc
mov
rcr
orl
inc
mov
jecxz
push
push
adc
hlt
jp
iret
push
arpl
push
cli
scas
aas
ja
cmc
leave
xchg
push
mov
dec
cmc
data16
insb
push
aad
es
stos
loop
push
jle
cli
inc
jmp
mov
sub
cmp
mov
popf
lods
in
ret
sbb
add
push
data16
or
xor
or
mov
xchg
sahf
leave
or
cmpsb
xchg
add
push
addb
mov
mov
pop
pop
in
scas
clc
test
or
lret
and
into
cmp
cltd
pop
and
jae
xchg
nop
sub
and
mov
into
insb
sahf
or
mov
jge
repnz
adc
test
in
sbb
pop
xchg
cwtl
sub
fstps
cmp
in
xchg
das
adc
aad
pop
sahf
fwait
mov
leave
jmp
mov
sub
cmc
loopne
sbb
in
loope
sub
pushl
flds
mov
or
inc
lret
xchg
mov
gs
fs
iret
adcb
cld
cmp
cmp
cmp
push
movsl
mov
sbbl
dec
mov
imul
add
sub
jmp
xchg
push
das
jmp
out
xor
jecxz
out
fcoml
jge
mov
rcrl
inc
ljmp
das
and
mov
push
inc
adc
mov
pop
xchg
sti
xchg
lcall
or
dec
or
inc
orb
dec
mov
mov
or
in
add
pop
mov
pop
call
add
sti
add
mov
or
add
add
or
cld
int3
clc
inc
push
add
pop
pop
cli
rcrb
dec
ror
fsts
notb
add
out
outsl
xchg
cmpsb
xchg
and
pop
sub
push
inc
js
pop
mov
xor
cmc
js
jmp
std
fwait
js
mov
out
popf
into
fildll
jne
xchg
cmp
jge
dec
out
sbb
loopne
mov
sbb
sahf
jb
repz
add
loopne
jge
or
inc
jo
jmp
aam
cltd
test
adc
jmp
mov
mov
aad
or
and
xor
pop
movsb
mov
cmp
daa
pop
pop
nop
jnp
and
xchg
ja
ret
mov
js
adc
sti
std
inc
push
mov
inc
adc
jmp
dec
or
push
stos
sub
mov
dec
hlt
xchg
mov
or
ja
pusha
scas
bound
sbb
mov
scas
and
cmp
mov
in
adc
sbb
jbe
adc
popf
inc
jp
out
inc
popa
and
push
iret
dec
lret
cmp
stc
pop
shll
mov
jp
cmp
and
ss
test
fnstenv
lds
xchg
dec
pop
out
cmpsl
mov
xor
xchg
dec
jbe
xchg
mov
pushf
xor
inc
inc
and
faddl
mov
xor
outsl
pop
add
into
dec
or
sbb
scas
inc
aad
in
pop
inc
fistpl
cmpsl
data16
or
pop
pop
inc
cmp
cmpsl
dec
ffreep
and
pop
dec
sbb
jbe
in
outsb
or
dec
or
sub
sbb
testl
mov
jg
pop
dec
adc
xor
jne
test
sbb
or
in
loopne
aas
inc
jb
stc
fcomps
out
dec
sub
movsl
pop
cltd
gs
xchg
shll
inc
cwtl
int3
sbb
jmp
pop
xchg
jmp
repz
fisttpll
xchg
sti
push
or
xor
dec
std
fnstsw
adc
push
lods
fsubs
shrl
sbb
cmp
jge
mov
inc
dec
adc
pop
fwait
pop
mov
add
cmp
movsl
sub
popa
negb
daa
inc
add
or
push
movl
cmpsb
push
push
jge
repnz
jle
rcrb
or
mov
jns
mov
repz
jb
mov
fisubrs
fs
pop
orb
fcompl
pusha
hlt
mov
insb
test
mov
lods
lods
sbb
nop
inc
ret
hlt
add
cmp
les
push
rorb
jb
and
dec
mov
pusha
out
fidivl
pop
cmp
jb
dec
jg
push
jecxz
mov
or
mov
fisubs
add
notl
push
imul
mov
insl
jl
cwtl
inc
call
add
out
pop
dec
push
repz
xchg
jbe
fldenv
aad
ja
xchg
cmc
lods
push
push
mov
xchg
xchg
mov
mov
adc
pop
pushl
xchg
int3
inc
jg
sar
inc
dec
jae
pusha
sub
scas
sub
ljmp
mov
mov
push
jmp
push
ss
cld
addl
jp
pop
lds
or
mov
pop
fbld
clc
xlat
rcrl
xor
cli
inc
popa
xorb
outsl
es
ss
xchg
shlb
cmp
dec
or
ficomps
xor
cmp
in
into
in
dec
pop
jmp
mov
jo
sub
jns
ss
ffree
int3
mov
insl
stos
test
mov
andb
mov
test
test
cmp
cmpsb
fwait
xor
arpl
cs
dec
add
test
xor
xchg
loopne
add
xchg
dec
mov
add
or
dec
jne
jecxz
imul
js
sti
sub
push
icebp
lret
push
pop
add
enter
push
jecxz
xor
repnz
es
aaa
sbb
pop
jmp
outsb
loopne
out
jmp
cwtl
cmpb
insb
xor
jg
pop
cmp
xlat
cmp
aaa
mov
rcl
sbb
add
jecxz
mull
jle
mov
fstps
jnp
push
mov
xchg
fwait
dec
jg
js
push
xor
push
cmp
loop
mov
loop
or
mov
sbb
push
add
lahf
in
inc
les
mov
rcll
add
loope
addr16
cwtl
jle
push
inc
inc
sub
or
fisubs
lock
add
inc
jl
push
mov
sbbl
mov
mov
xchg
add
cmp
and
pop
pop
xchg
les
gs
lods
and
xchg
inc
jge
lret
outsb
mov
xchg
pop
mov
call
fwait
jmp
add
add
mov
test
dec
push
cmp
into
sbb
out
out
stos
outsl
jl
inc
sub
jae
mov
shlb
movsl
xorl
outsl
push
lock
xchg
xchg
xor
in
xabort
mov
out
xchg
fs
or
push
fucomi
sbb
adc
push
jbe
jecxz
es
dec
sub
roll
loop
mov
outsl
cmp
mov
hlt
mov
mov
mov
leave
fwait
jge
and
lds
into
mov
js
fisttps
xchg
shr
jo
jae
lds
test
out
xchg
sub
lahf
xor
rcr
dec
into
clc
adc
imul
test
jo
add
outsl
in
inc
icebp
push
jle
add
sbb
enter
daa
pushf
pop
cli
sti
call
aam
int
arpl
add
and
gs
insb
mov
lods
lock
test
adc
out
dec
mov
ds
pop
dec
outsl
xlat
xor
dec
xor
pop
add
pop
nop
inc
out
mov
xor
aas
push
les
lds
leave
gs
xor
aas
ljmp
xor
push
xchg
cltd
pusha
in
cmp
lods
inc
aad
cli
jecxz
pop
arpl
jl
mov
leave
push
and
stos
imul
stc
and
mov
fs
mov
xor
adc
aaa
sbb
pop
and
xchg
lds
je
lds
cbtw
scas
pop
mov
or
sbb
dec
push
movsl
mov
adc
jmp
or
out
lods
test
lods
or
shl
cs
and
aam
sarb
daa
dec
fsubl
xchg
mov
je
rorl
cmp
xor
jae
mov
dec
frstor
sbb
push
orl
push
in
daa
xchg
dec
sti
loopne
addl
outsl
cmpsb
adc
rcll
lea
cmp
les
shlb
mov
inc
xchg
in
add
sub
test
ljmp
ror
jbe
pop
cli
scas
cmp
push
mov
jne
sarl
mov
sub
rcl
inc
push
popf
and
out
into
push
push
push
jns
xchg
rolb
nop
push
or
fistpl
adc
fcompl
xchg
scas
testb
pushf
push
mov
push
jno
sahf
xor
jmp
jb
jp
xchg
xor
xor
sti
clc
loop
testl
in
push
in
cmc
and
nop
bound
push
cmpsl
mov
pop
enter
push
xor
std
cmp
js
fstps
imul
std
pop
mov
and
shlb
ds
in
ret
scas
pop
and
addr16
mov
rorl
adc
mov
xor
mov
inc
mov
mov
cmpsl
mov
or
rorb
outsl
call
dec
testl
inc
mov
add
push
xchg
sti
inc
xor
nop
push
adc
insb
mov
lret
daa
nop
jae
add
mov
aad
es
inc
lahf
push
pop
dec
adc
mov
push
daa
mov
stc
mov
loopne
clc
xchg
dec
xorl
pop
mov
adc
add
mov
or
mov
out
add
adc
cld
gs
dec
adc
dec
sbb
add
out
add
repz
dec
pop
xchg
lahf
and
inc
inc
or
lods
insl
test
iret
sahf
sub
pop
pop
fildl
mov
pop
frstor
pop
into
movsl
call
daa
hlt
mov
movsl
mov
pop
mov
mov
sbb
test
push
cltd
jo,pt
xlat
fisubl
aam
or
fldt
jo
imul
adc
aad
rcll
adc
xchg
lret
aam
pop
xlat
xchg
mov
pop
push
xchg
std
push
add
push
inc
fiaddl
push
icebp
fwait
test
sbb
sahf
leave
movsb
hlt
xor
push
inc
inc
out
inc
jbe
jle
push
shll
icebp
adc
push
in
pop
or
lahf
negl
aam
xor
xor
mov
and
pushf
adc
fisttpll
inc
cwtl
clc
pop
sbb
xchg
sbb
pop
daa
clc
std
and
sbbl
cmp
leave
fsubl
iret
mov
rclb
movsb
add
jge
cmc
xchg
pop
pop
insl
cltd
out
push
sub
addl
push
lods
ja
insb
dec
loop
mov
int3
mov
sbb
shrl
cmp
loop
xor
movsl
movsl
data16
adc
mov
jb
push
out
xor
popf
xchg
sub
popl
fisubl
jp
in
outsl
ret
xchg
jge
xchg
mov
scas
dec
pop
jp
mov
jnp
add
lea
mov
in
call
inc
push
enter
mov
ds
dec
mov
shll
stc
and
rclb
or
popa
aas
lock
sarl
outsb
pop
icebp
sub
jne
inc
xor
sbb
and
cld
or
xchg
jge
sbb
push
xchg
daa
gs
hlt
mov
xlat
push
and
std
mov
or
mov
jbe
jmp
ds
sub
xor
call
jbe
push
adc
cltd
sub
rcr
pop
addr16
das
push
dec
sbb
push
sbb
inc
or
adc
jbe
mov
dec
sbb
in
ljmp
ret
lock
xchg
inc
in
lock
out
pop
or
cwtl
sub
cmp
cmc
push
out
pop
clc
aaa
sti
mov
push
int
daa
or
pop
mov
push
or
cltd
dec
into
mov
jno
call
jg
sub
test
and
loop
pop
jno
stos
out
rcll
push
jne
lahf
sub
jmp
xor
xchg
jns
jg
and
daa
cli
xchg
lret
cmp
nop
cmp
arpl
arpl
mov
movsb
adc
and
push
repnz
jl
nop
stos
pop
xchg
dec
mov
jno
sub
call
stos
pop
repz
call
imul
mov
int
xor
pusha
add
test
jl
jl
sub
and
pop
xchg
inc
jo
das
loop
pop
fsubs
mov
add
movsb
add
lahf
pushf
dec
xchg
es
mov
loopne
push
cmp
ljmp
and
addr16
dec
xor
std
mov
hlt
jb
jge
mov
sbb
dec
ljmp
sahf
jge
popa
ja
lock
push
pop
sub
cmpsl
in
dec
push
movsl
daa
ficomps
sub
fldcw
stos
mov
sub
clc
je
and
pop
xchg
aad
adc
lahf
aam
arpl
jno
mov
mov
lds
stc
cmp
adc
fsubs
cmp
adc
gs
pop
mov
dec
jns
bound
imul
xchg
lahf
lods
pop
pusha
sbbl
in
lret
xor
out
iret
push
inc
mov
movsl
pop
mov
xor
mov
xor
mov
mov
aad
rolb
mov
lods
and
mov
inc
into
clc
mov
xchg
repz
std
or
jle
mov
cwtl
or
jle
xor
leave
hlt
jecxz
push
sbb
clc
pop
lea
push
pusha
nop
lea
jnp
jmp
nop
jb
jne
inc
jl
bound
and
in
cmp
nop
movsl
jg
cmp
or
in
daa
or
xor
mov
js
psllq
in
lret
xorb
push
xchg
into
dec
xlat
add
aaa
xchg
call
popa
popa
int3
sub
inc
out
cmp
push
std
and
mov
inc
push
cli
sti
jno
loopne
pop
mov
mov
push
push
mov
mov
stc
push
mov
rol
jg
cwtl
sbb
imul
insb
xchg
out
dec
xchg
pop
cwtl
adc
cmp
arpl
dec
ljmp
adc
cld
cmpsl
jb
popa
repz
push
dec
pop
out
popf
sub
lea
or
dec
mov
and
popa
xchg
sbb
mov
pop
jb
aas
bound
lods
jg
lcall
addr16
decl
shrl
add
sbb
jmp
add
push
mov
push
fldl
insb
lret
loopne
pop
shl
js
pop
pop
das
cwtl
fdivp
test
sub
pusha
iret
lcall
out
mov
push
add
jbe
xor
xchg
pop
and
test
add
shll
push
cmp
scas
ret
and
sub
jo
mov
dec
loopne
xchg
push
ljmp
add
bound
and
mov
scas
pop
or
dec
xchg
inc
lahf
fcmovnbe
sbb
sub
mov
mov
dec
mov
pop
leave
cld
jle
out
adc
jp
xchg
cmp
or
test
sub
pop
add
or
xchg
inc
jge
cmp
nop
ficomps
jnp
test
leave
xor
xchg
out
mov
sbb
pop
in
mov
lahf
push
pusha
scas
jmp
inc
sub
pop
std
dec
int
fs
sub
xor
sub
push
addr16
xchg
js
jp
dec
cmp
xchg
jbe
cmp
sbb
lahf
dec
mov
jp
pop
fxch
popa
vmulss
mov
mov
mov
cmpsb
lret
jb
mov
enter
stos
or
and
lea
dec
ljmp
fsub
pop
mov
rol
mov
ljmp
cmp
mov
cmc
leave
sub
or
fs
pushf
subl
or
add
orb
cmp
in
test
subl
jnp
andl
mov
mov
pop
stc
out
lods
fnstsw
cld
adc
sub
icebp
push
hlt
mov
mov
mov
dec
outsl
ficoml
pop
mov
dec
repnz
in
xchg
cld
ljmp
mov
test
mov
adc
and
jae
cmp
jo
pop
dec
xor
mov
sahf
lcall
iret
mov
jmp
mov
addr16
das
cmp
sbb
dec
clc
dec
jns
cmp
insb
mov
dec
ss
dec
js
push
ret
inc
push
incb
mov
aaa
cmp
inc
sbb
jbe
imul
sub
add
or
aam
jbe
call
std
dec
div
pusha
pop
scas
xchg
mov
pushl
or
mov
cmpsb
cwtl
js
setbe
aaa
pop
xor
jcxz
cmp
jnp
movsl
imull
xchg
sbb
daa
add
mov
aam
pop
xchg
std
adc
dec
das
jg
jle
test
fs
clc
pop
inc
repnz
push
xchg
outsb
jp
or
hlt
adc
mov
mov
lea
mov
ficoml
aaa
and
scas
or
pop
insb
sbb
cmp
stc
addr16
pop
fwait
dec
jns
or
xor
and
mov
frstor
ret
clc
scas
out
fildll
lret
add
pop
addr16
mov
adc
mov
inc
mov
jl
faddl
dec
ljmp
dec
scas
in
add
mov
lret
jp
sub
add
push
add
sbb
mov
lcall
arpl
in
mov
mov
xchg
test
cwtl
add
xchg
add
imul
jle
nop
add
out
int
mov
push
mov
xchg
mov
fcoms
xlat
add
adc
clc
pusha
inc
or
test
loopne
sbb
gs
dec
in
xor
dec
ja
mov
fldl
inc
sub
sbb
sub
mov
jnp
das
jle
push
inc
dec
xchg
xor
mov
add
jbe
push
pop
testb
sub
lret
sbb
cmpsl
sbb
int3
mov
mov
add
jle
les
jle
dec
jne
push
repz
mov
imull
movsb
push
mov
test
adc
jmp
mov
mov
inc
xchg
bnd
mov
sub
mov
outsb
pop
pop
test
or
pop
ret
push
ret
jg
enter
cwtl
or
jmp
ret
push
hlt
sbb
cpuid
or
ret
movsb
sahf
sub
inc
dec
add
xchg
push
mov
lret
mov
mov
mov
jne
dec
push
fs
mov
cmp
mov
pushf
mov
push
in
pop
fdivs
and
xchg
jo
and
loope
push
insl
test
ret
stos
outsb
ret
in
int
xor
and
xchg
data16
push
or
cmp
cmp
lods
adc
and
addl
mov
or
xchg
push
add
cmpsb
mov
lock
xchg
out
rcrl
jmp
mov
sub
dec
mov
sahf
in
xchg
pop
pop
mov
sbb
out
mov
mov
mov
mov
xchg
jle
arpl
test
sub
pop
lahf
nop
pop
or
push
cmc
sbbb
jae
push
xor
sbb
mov
test
test
lds
test
sbb
dec
loop
les
dec
inc
sub
sti
push
call
jl
pop
xchg
adc
mov
jle
cmc
sarl
xchg
lea
loope
sub
sbb
inc
sarb
cmp
xchg
shlb
sbb
sbb
into
xor
aam
ret
lahf
pushf
mov
cld
flds
test
pop
mov
add
ffreep
cmpsl
inc
popf
push
jge
fsts
push
loop
sbb
mov
fdivs
jns
lods
rcll
outsb
mov
dec
and
mov
jb
add
xor
add
repz
inc
aas
add
jno
out
push
adc
mov
and
dec
jbe
aad
int
xchg
fiadds
cltd
hlt
sbb
repnz
mov
cli
xor
inc
ljmp
pushf
notb
dec
or
fildl
cmp
movzwl
jl
lock
pop
mov
pop
test
fdivrp
mov
pushf
imul
arpl
push
sbb
or
cmpsl
out
mov
ljmp
dec
jmp
emms
movsl
imull
stc
pop
mov
push
sti
imul
loop
push
aaa
xor
sahf
mov
jbe
nop
sbb
sub
pop
xchg
xchg
in
shl
arpl
mov
mov
dec
into
testl
das
cmc
push
cmpsb
mov
inc
aam
cltd
pusha
mov
fs
sti
dec
mulb
test
xor
xchg
jno
mov
in
js
gs
inc
push
push
cs
push
push
arpl
aas
mov
or
das
pushf
add
lea
fdivrl
or
scas
out
jb
shrb
arpl
notb
mov
pop
dec
or
dec
out
pop
cmp
mov
push
dec
test
lock
inc
push
xchg
push
fdivl
fs
negl
push
in
fadds
and
mov
loopne
xchg
push
std
xor
and
xor
adc
mov
shl
fsub
aam
add
or
push
mov
mov
flds
ret
out
cmp
inc
push
push
call
xchg
in
shlb
int
mov
rcrl
mov
pushf
andb
and
ja
inc
jl
lcall
cltd
mov
data16
xlat
test
dec
hlt
lcall
jp
and
jg
jp
push
push
lcall
sub
pop
inc
in
ljmp
addr16
ror
test
enter
adc
mov
cld
cmc
lods
ret
testl
adc
jecxz
cmp
sbb
cmc
rol
dec
aad
jle
dec
shlb
popa
adc
icebp
movsb
jle
lret
movsb
inc
and
jbe
aaa
test
jp
lahf
cmp
movsb
mov
jmp
movsb
xlat
and
jmp
dec
inc
adc
push
mov
mov
popfw
sub
pop
test
sbb
inc
repnz
mov
pop
addr16
mov
xchg
mov
and
inc
enter
mov
scas
fdivl
arpl
ja
fs
test
sbb
fnstsw
jbe
cmp
add
adcb
ret
popf
out
pop
jge
pop
int
rol
jmp
paddsw
inc
lods
insb
cs
xchg
lahf
mov
or
and
pop
cltd
push
inc
pop
mov
cmp
out
and
pop
mov
fisttpl
cs
add
cld
or
popa
adc
shrl
pop
jnp
insb
fdivr
push
cmp
sbb
call
cltd
je
mov
mov
test
arpl
fnstsw
ljmp
mov
sub
lds
dec
call
sub
jae
movb
and
add
idivl
into
mov
fs
cwtl
cli
xchg
xchg
pop
fstpl
push
push
iret
cs
xchg
mov
cmp
mov
jae
movsl
xchg
incl
insl
out
iret
push
inc
js
jl
pop
in
shrl
inc
cmp
mov
mov
stos
mov
aad
adc
mov
push
xchg
fcmovbe
and
cmpsl
fldl
and
inc
push
lods
lcall
test
jns
cmp
mov
imul
sbb
dec
popa
pop
lret
outsb
adc
sub
xor
mov
sbb
xchg
add
mov
mov
lcall
enter
pop
adc
ret
inc
inc
fistpl
mov
cmp
loopne
jno,pn
imul
popf
fidivs
mov
push
int
out
repz
pop
lret
in
les
mov
or
push
stc
dec
jecxz
push
xchg
jge
scas
inc
test
inc
addb
divps
adc
repnz
adc
pushf
mov
lods
repnz
add
lret
dec
mov
lods
xor
pop
in
hlt
sahf
std
pop
rol
sub
xor
sbb
push
fucomi
push
xor
ret
fnsave
mov
sbbb
ss
lea
subl
dec
pop
std
sub
shlb
and
xchg
imul
fstp
test
movlhps
popf
mov
xlat
je
mov
add
sbb
pop
pop
sbb
pop
dec
repz
shlb
jmp
out
push
jge
mov
into
jecxz
pop
pusha
ja
out
pop
loop
mov
mov
xor
adc
jle
lea
ja
xor
dec
mov
add
push
and
pop
mov
and
sub
jg
fwait
xchg
mov
push
movsb
cmp
xor
js
clc
add
loopne
lahf
adc
clc
enter
xor
adc
jae
lcall
mov
sub
cli
add
test
jb
ficomps
mov
cmpl
push
rorl
mov
or
xchg
jle
inc
and
outsb
mov
adc
scas
inc
jne
lcall
leave
sbb
gs
adc
mov
xchg
xchg
cli
stos
xchg
fistpl
pop
bound
or
adc
mov
or
pop
lret
lock
out
lods
aam
insl
ss
add
out
push
pop
mov
inc
sub
loopne
mov
pop
or
add
enter
inc
push
mov
rorl
dec
data16
ret
ljmp
add
add
xor
xchg
pop
je
xor
push
pop
sar
fisubs
mov
test
pop
mov
and
pusha
shr
xchg
mov
jmp
popa
sub
inc
mov
mov
ds
mov
aam
jecxz
das
repnz
fdivrs
mov
pop
test
jp
mov
mov
call
sub
arpl
mov
enter
shrb
mov
scas
loopne
cs
push
mov
pop
jo
mov
mov
rcrb
mov
incl
push
mov
pop
xchg
sub
mov
pop
aaa
shll
jae
lods
fldl
mov
into
xor
sbb
mov
inc
xchg
divb
scas
and
sub
sbbl
jg
movsb
sub
inc
push
aam
inc
inc
push
adc
push
fucomip
mov
xlat
js
ds
dec
and
ret
jno
fbld
xor
aad
sub
and
adc
idiv
or
call
push
nop
mov
cmp
scas
xchg
stc
in
lods
sbb
xlat
and
aas
ret
push
std
lock
repnz
sbb
inc
ret
and
and
pop
jecxz
test
mov
mov
jae
cld
or
int
faddl
mov
test
pop
in
jg
sahf
lds
adc
xor
shll
ret
fiaddl
mov
cs
insl
push
jbe
cmp
dec
and
stc
subl
cmp
int3
or
push
shrl
or
pop
xchg
hlt
stos
mov
mov
cmp
les
push
push
xor
hlt
mov
lock
push
in
push
daa
pop
jo
jno
xchg
cmc
das
pop
mov
and
push
gs
into
pushf
outsl
mov
push
data16
push
pop
cwtl
or
jecxz
shlb
out
aaa
xchg
inc
mov
outsl
xchg
cmc
add
int
loop
add
jl
test
add
cwtl
push
pop
fdivrl
sbbl
mov
bound
add
pop
mov
rol
repnz
xor
repz
jo
fnstsw
jl
lock
mov
xchg
js
outsb
push
call
jns
mov
loop
out
into
imul
call
sub
inc
pusha
add
inc
fdivrs
jmp
ss
je
out
rcrb
jnp
dec
inc
aas
xchg
mov
data16
xchg
or
adc
mov
hlt
mov
sub
lock
mov
out
clc
out
sub
push
stos
cmp
mov
inc
out
sahf
xor
add
jne
xchg
jl
scas
or
xor
add
cmpsl
push
fsubrp
clc
movsb
jne
idiv
adc
les
js
stos
mov
jb
xchg
jnp
vucomisd
push
cmp
and
add
inc
push
pop
cwtl
fistpl
loope
pop
js
test
ret
int3
add
pop
xchg
inc
fidivrs
or
xchg
sahf
pop
push
push
jnp
and
movsl
or
and
loope
ja
mov
sub
rclb
sbb
or
stos
mov
xchg
or
add
push
add
rorl
xchg
dec
jecxz
leave
imul
shlb
ljmp
test
inc
arpl
push
xchg
cmp
out
dec
ss
xchg
arpl
push
stos
ljmp
cmp
jp
fistl
and
push
in
pop
lock
shl
daa
das
inc
mov
mov
ret
mov
std
call
insl
movl
mov
xchg
inc
lahf
lcall
xor
cld
fisubrs
jle
jae
insb
roll
dec
int
lock
cmpsb
mov
mov
sub
mov
and
inc
mov
sub
sub
arpl
arpl
ds
inc
xchg
arpl
fsts
dec
into
sub
jmp
das
adc
xor
dec
jmp
sahf
dec
nop
adc
nop
adc
cmp
fdivrp
add
rcll
fistl
jnp
imul
inc
cmp
sub
push
mov
loopew
sub
popa
jecxz
or
cwtl
mov
idivl
adc
fistl
mov
cld
pop
pop
jle
out
sbb
mov
mov
rcl
test
xlat
mov
enter
add
ror
push
push
pop
outsl
jbe
in
aam
inc
inc
and
xlat
push
jo
push
pop
insl
adc
mov
mov
lock
nop
or
jg
scas
cli
mov
push
stc
lret
jle,pn
lds
adc
adc
fwait
mov
popf
adc
out
data16
das
xor
ss
dec
sbb
mov
aad
jno
or
cs
jge
dec
lock
test
dec
mov
xor
testb
loopne
lock
es
mov
insb
loopne
mov
xchg
jg
dec
dec
xor
lcall
cmpsb
popa
adc
scas
nop
push
pop
inc
movsb
xchg
jno
push
popa
mov
lcall
loopne,pt
xchg
out
xchg
pop
test
hlt
rcrl
cmp
cmp
inc
ret
mov
inc
push
pop
ficoml
and
out
or
leave
das
fs
push
int3
xchg
ja
rorb
and
inc
test
hlt
add
lods
scas
daa
sub
std
shrb
hlt
fisttps
and
inc
mov
insb
lret
mov
outsb
push
stc
jle
sbb
and
inc
hlt
mov
pusha
popa
cli
add
ja
inc
sbbb
cwtl
and
or
fwait
mov
push
adc
adc
fidivs
fbld
cwtl
shr
mov
push
pop
jmp
into
push
rcr
push
in
push
sahf
mov
mov
out
clc
pop
push
aam
or
cli
sbb
add
xor
mov
mov
fcmovnbe
and
mov
xchg
sub
movsb
mov
in
xchg
andl
xor
xchg
cmp
dec
es
pop
xchg
mov
adc
pop
jae
xchg
mov
pop
xor
sub
mov
fiadds
mov
ljmp
bound
cli
xor
aad
xchg
lret
mov
mov
mov
cmpsb
add
mov
mov
stos
fst
call
or
cmp
cwtl
sbb
rcll
or
mov
sub
orl
cs
lcall
stos
xor
iret
bound
jnp
push
aas
insb
jno
ds
cltd
mov
mov
fldcw
repnz
fistps
sti
inc
cmp
test
push
outsb
inc
fwait
cmp
out
aad
ja
cmpsl
aad
mov
xor
or
stc
add
mov
sub
mov
stos
push
stc
aad
push
adc
test
insb
xchg
dec
xlat
sti
test
mov
mov
loope
gs
xchg
ror
sub
dec
sub
xor
into
push
xchg
test
out
adc
mov
pushf
lods
cs
cmp
fwait
cs
rcrb
neg
rcrb
adc
or
jl
xchg
aas
cmp
jp
inc
sarb
shr
and
cmp
push
mov
out
jns
or
add
sbb
pop
stc
repnz
or
mov
repz
dec
sbb
addl
in
mov
dec
scas
sbb
sbb
jmp
in
pop
adc
cltd
daa
mov
sbb
data16
sub
es
out
mov
push
insl
jnp
sbb
lods
lahf
mov
into
adc
mov
or
mov
xchg
pushf
fiadds
into
pop
nop
xchg
mov
into
les
cmp
movsb
in
adc
sbbl
xor
nop
pop
mov
push
fisubrs
iret
jl
pop
cmp
mov
jle
movsb
call
inc
xchg
std
icebp
cmpsl
jo
into
push
cli
shrd
loopne
and
jo
lret
mov
aas
or
jl
jge
std
inc
xbegin
aam
sarl
insl
out
jb
sbb
dec
test
test
pop
adc
lahf
scas
cmpsl
push
xchg
sbb
pushf
push
in
popa
aad
pop
gs
xor
fs
jbe
and
jmp
clc
imul
and
jns
lods
pop
jnp
push
movb
imul
iret
mov
mov
jae
iret
xor
mov
dec
sub
jmp
movsb
arpl
mov
in
adc
arpl
mov
and
ljmp
jns
lret
adc
inc
or
xchg
rcrb
cmp
test
xchg
or
sub
iret
iret
mov
xchg
push
fsubrs
leave
inc
pop
test
inc
gs
xchg
movsb
jl
adc
pop
fnsave
push
shrl
aaa
pop
ret
cmp
or
int3
mov
aam
shrl
aas
cmp
mov
inc
int
loope
outsl
ss
inc
ficomps
sbb
je
outsb
mov
dec
push
xchg
jle
push
sbb
out
insb
lods
popf
pop
fcmovne
and
movsb
xor
or
push
rolb
lcall
pop
dec
shlb
xchg
fistps
int
push
iret
jl
mov
xchg
cmpsb
pop
or
push
mov
inc
loop
lret
ljmp
or
add
std
pushf
cwtl
adc
or
mov
out
push
cmp
mov
in
mov
imul
sub
call
jbe
sub
sub
mov
filds
adc
dec
ss
dec
imul
jmp
pop
aam
lock
jl
pop
xor
pop
add
jns
sub
sub
jmp
bound
xchg
mov
popa
xor
pop
adc
call
mov
cmp
js
push
mov
out
or
loop
sbb
fcompl
pop
in
mov
xor
jo
enter
sarl
fidivs
adc
inc
pop
jmp
mov
sbb
aam
jmp
mov
pop
push
imul
dec
jecxz
pop
lret
divb
stos
pop
faddl
push
adc
arpl
jns
out
aam
lcall
or
inc
lods
inc
jns
loopne
andl
and
data16
insl
xlat
popf
lahf
jae
adc
cmpsl
jge
int3
push
popf
inc
mov
in
cmp
lret
sub
adc
and
mov
ret
ja
rorl
div
mov
sbb
imul
out
test
lock
push
mov
imul
or
xlat
fisubs
xchg
rorl
insb
inc
out
or
or
incb
inc
dec
dec
xlat
dec
out
inc
dec
lods
add
mov
inc
test
rcll
gs
dec
int
mov
add
adc
cltd
sbb
mov
mov
push
cltd
jecxz
sahf
pop
and
and
mov
xor
adc
xchg
jp
and
xchg
inc
push
pushf
inc
add
mov
xchg
movsl
or
lock
loop
mov
shlb
and
xor
pusha
pop
or
push
icebp
int
int3
mov
xor
test
popa
lods
inc
ja
or
inc
jl
ds
loopne
sbb
mov
sahf
les
inc
xchg
xchg
pop
ror
or
fiadds
pop
outsl
ret
and
shlb
add
adc
stc
int
jb
cmp
push
rcll
pop
in
je
jmp
addr16
test
iret
and
mov
mov
and
add
sarl
mov
sbb
cmpsl
dec
adc
inc
jbe
aas
shlb
add
gs
lahf
pop
shll
scas
xor
mov
adc
sub
ljmp
inc
push
and
mov
inc
cmpsb
or
adc
sbb
mov
ret
push
cmc
les
shll
pop
test
aad
mov
out
mov
lret
stos
popa
add
lds
xchg
and
or
enter
cmc
jne
popf
movsl
dec
sub
ds
int3
xchg
cli
mov
pop
sub
test
fwait
dec
popa
pop
xor
mov
sbb
cld
dec
divl
mov
xchg
mov
xchg
xor
stos
call
sbb
jbe
sbb
mov
cltd
sub
inc
sbb
inc
xchg
out
fimuls
data16
cmp
xchg
push
rolb
rol
sbb
ret
dec
fisubrs
cmp
push
addl
lock
pusha
and
sub
add
dec
mov
sbb
clc
ret
enter
decb
je
jne
cltd
mov
push
incl
pop
gs
lcall
movl
mov
rcrb
jbe
pop
in
lret
fisubl
packsswb
stos
push
sub
sbb
clc
push
std
sub
repz
subl
fmuls
scas
xchg
mov
fistpll
loope
mov
loop
xor
fisubrl
stc
cmp
push
ds
mov
push
and
jb
mov
jae
and
and
or
or
sub
test
jno
mov
dec
xor
adc
idivb
mov
push
xor
mov
gs
loopne
jecxz
mov
inc
add
shlb
fdivrs
fiadds
movsb
divl
mov
xchg
cmp
and
sub
cmp
mov
inc
mov
xchg
int3
push
or
dec
pop
push
sub
jge
cwtl
mov
mov
push
bound
adcl
mov
mov
pop
add
or
pop
in
dec
in
cli
pop
xchg
test
jecxz
out
mov
sahf
push
out
sbb
push
xchg
dec
mov
or
test
insb
xor
imul
lret
ret
cmp
ds
cmp
mov
inc
sub
and
dec
cltd
jmp
sbbb
sbb
dec
ret
fucomip
cmp
adc
insl
imul
push
sbbb
ja
adc
stos
push
sub
mov
inc
ljmp
xchg
test
jmp
mov
lods
jo
lcall
add
roll
xchg
mov
push
jae
movsb
neg
sbb
cmp
adc
sbb
es
adc
outsb
xlat
sbb
ja
lods
jb
mov
push
cmpsl
xor
sub
fs
popa
push
or
mov
xor
or
ja
fdivs
mov
or
js
lcall
inc
shrl
cld
imul
lahf
pop
and
stos
stos
into
jp
cmp
sub
pop
ljmp
push
jae
cwtl
sbb
sbbb
and
shlb
mov
lock
and
cmp
jmp
jecxz
rcrl
psrld
loop
pop
xchg
jnp
movsb
insl
and
and
addr16
sbbl
ficoml
aam
movsb
into
lcall
mov
ret
call
cmc
fwait
jmp
insb
adc
adc
push
pop
adc
xor
mov
test
pop
test
mov
aad
ljmp
cwtl
jb
inc
ss
jne
mov
cmpsl
cli
add
add
repnz
mov
rclb
xchg
outsb
adc
jp
or
mov
mov
cltd
or
bound
dec
dec
je
loop
jns
insb
xchg
dec
inc
mov
call
push
js
inc
pop
and
dec
cmp
sub
xor
push
mov
jns
aam
lds
fs
xor
jnp
jge
nop
hlt
add
in
lea
cmpsb
xchg
lods
scas
sub
pushf
test
xor
mov
ficompl
dec
call
std
sti
push
jmp
insb
subl
push
push
insl
mov
jp
adc
mov
mov
xor
out
mov
movsb
mov
imul
hlt
xor
sbb
sub
jmp
sbb
adc
paddd
mov
addr16
jmp
push
mov
jle
xchg
dec
out
mov
pop
xchg
ja
call
push
add
push
popf
inc
push
in
push
jno
test
xchg
inc
into
sub
out
out
adc
int
lods
test
jbe
jp
mov
mov
mov
movsb
pop
mov
pop
jbe
scas
xor
push
jno
lods
out
jnp
nop
lea
dec
cmc
jl
jmp
scas
xor
imul
add
mov
ret
rclb
ret
sub
lea
movsb
mov
scas
idivl
lods
stc
xchg
test
lods
cmp
sti
pop
pop
pop
std
xor
pop
test
clc
mov
orb
aad
ja
xor
ss
loopne
pop
xor
insb
jnp
xchg
pop
outsl
frstor
pop
lahf
adc
pop
sub
sbb
fistpl
jle
push
std
mov
ret
inc
lcall
mov
xchg
dec
push
sbb
jmp
mov
inc
arpl
xor
aaa
mov
test
push
xor
sub
xorl
fs
lods
xchg
push
daa
jg
or
and
lcall
inc
push
cmpsb
data16
out
jbe
adc
adcl
imul
dec
int
das
pop
jmp
rcr
push
pop
inc
shll
xor
xchg
fiadds
stc
jmp
test
lds
push
aad
out
mov
sahf
pop
out
sti
xchg
dec
in
shrl
xchg
xor
lret
stos
jae
mov
test
stos
out
scas
push
pusha
aaa
push
stc
rep
push
cmp
movsl
insl
addr16
daa
xor
dec
pushf
or
xor
icebp
neg
les
iret
negb
in
in
test
sbb
xchg
addb
mov
pop
and
fistpll
jecxz
pop
es
mov
inc
mov
popf
cltd
dec
int
pop
xchg
fwait
clc
in
mov
inc
adc
cmp
int3
mov
mov
aas
mov
and
sbb
mov
popf
daa
inc
jo
pusha
mov
inc
fstpl
mov
or
jmp
loope
sti
in
jbe
dec
popf
into
xchg
clc
out
sahf
sub
xchg
loope
push
mov
pop
cmp
outsb
imul
fwait
add
pop
and
push
enter
dec
cli
mov
insl
gs
pop
ret
bound
rcrb
addb
jns
psubq
das
in
dec
int3
test
mov
cli
hlt
lods
jp
mov
into
hlt
or
xchg
and
dec
outsl
scas
aaa
dec
xor
jo
rorb
mov
insl
leave
gs
push
sbb
sti
pop
dec
mov
ret
call
mov
mul
lock
xor
int
outsl
push
scas
jb
and
and
clc
cltd
ret
xchg
jno
jnp
stc
sub
out
nop
or
lods
cld
stos
cwtl
pusha
push
movd
sub
lret
xchg
dec
mov
scas
mov
ret
in
sti
xor
movsl
and
jns
leave
cmp
addr16
pop
cltd
leave
xchg
cwtl
pop
dec
imul
pop
mov
popf
pop
addl
fldl2e
push
das
jmp
out
sbb
sbb
cltd
cmpsb
filds
xlat
push
test
pop
into
push
dec
xchg
pusha
xor
mov
pop
incl
ja
std
pushf
lods
popf
jecxz
in
lret
stos
hlt
ss
js
add
jno
dec
mov
or
fldenv
jp
xchg
xchg
push
mov
xchg
mov
jge
or
sub
into
lods
das
jle
dec
iret
scas
mov
ss
jns
mov
es
jp
movsl
test
stos
adc
cmp
roll
lock
jl
cmp
mov
mov
cmpsb
adc
cmp
inc
xor
daa
jbe
xchg
and
stc
lcall
into
dec
out
mov
lret
es
int3
in
arpl
cmp
push
loop
lret
and
push
test
push
xor
cmc
add
dec
push
pop
jo
inc
std
mov
jne
xchg
nop
rorl
cmp
adc
les
cmp
fisubrs
and
ss
arpl
adc
test
pmuludq
sub
pop
mov
jae
leave
pop
jbe
push
inc
inc
sub
fcomps
fcmovbe
xchg
xlat
repnz
and
inc
fnstsw
addr16
ljmp
test
cmp
mov
fsubrp
adc
movsl
lret
into
filds
or
mov
sub
outsb
jne
or
inc
and
xchg
mov
sub
xlat
and
imul
test
lods
sbb
sbb
decb
mov
dec
dec
in
mov
dec
and
imul
cmp
lods
inc
es
pop
xchg
xchg
adc
jno
cwtl
ljmp
into
je
or
mov
sbb
inc
shlb
insl
dec
and
mov
int3
jg
or
xor
imul
bound
jg
push
divb
mov
cmpsl
clc
xchg
testl
cmpsb
xor
dec
in
inc
and
sar
es
cmp
push
mov
mov
stos
or
and
pop
mov
popa
in
add
in
pop
adc
adc
mov
push
xchg
fwait
adc
aaa
adc
fmuls
sbb
xchg
movsb
outsl
lea
in
xchg
sub
cmp
in
jmp
mov
repnz
cmp
add
pusha
scas
pop
sahf
aad
lds
out
jge
test
dec
fiadds
xor
mov
dec
push
lret
xor
mov
jo
test
and
mov
mov
pop
add
cmp
in
mov
loop
lock
adc
or
addl
or
call
mov
cmpsb
stc
and
test
push
cmp
out
add
push
lock
fwait
das
jge
or
dec
add
mov
js
jno
icebp
adc
push
enter
stos
pop
scas
cs
adc
sbb
xchg
sbb
mov
push
jae
fcompl
repnz
lahf
sub
xchg
mov
add
xchg
mov
movsl
sbb
adcb
cltd
das
je
pop
lret
sbb
fwait
je
mov
add
outsb
add
sti
mov
cmp
shlb
cmpb
pop
mov
lods
cmpsb
leave
or
mov
sub
in
mov
mov
bound
fs
pop
pop
mov
sub
idivl
push
jno
notl
sbb
xor
mov
movsb
cld
mov
xchg
stos
mov
ds
mov
mov
cmpsb
cmp
and
mov
sti
mov
inc
add
js
push
in
fisubl
popf
stos
dec
movsb
aaa
mov
push
adc
and
dec
fwait
jae
pop
jno
mov
add
cmpsl
jae
push
jge
mov
lds
and
mov
or
and
adc
mov
mov
outsb
cmp
dec
in
mov
sub
xchg
mov
es
cmpsl
pop
sahf
lock
xor
sbb
dec
jno
sti
rcrl
fldt
arpl
out
push
inc
jno
adc
stc
outsb
in
push
xchg
xor
sub
fwait
mov
scas
dec
je
loopne
add
jo
lods
aas
pop
mov
ret
sub
mov
das
jg
dec
sbb
cli
mov
mov
xor
ja
outsb
daa
insl
aam
imul
out
ljmp
add
jno
or
bnd
xor
cmpb
jae
xchg
sarb
mov
push
jg
adc
loop
int3
hlt
xchg
add
jno
lods
cmc
inc
push
shll
jb
cmpsb
cmp
fcmove
rcr
cmp
sub
out
fisubrl
lea
xlat
cwtl
aam
mov
lods
inc
cli
sbb
bound
pop
jno
cmp
jnp
add
jno
outsb
push
out
movups
xor
ds
pop
jmp
cwtl
outsb
add
lahf
jge
loopne
pop
and
rcrl
in
mov
insl
in
push
jbe
shrl
insb
jge
jle
lcall
dec
nop
mov
shrb
and
hlt
test
mov
cli
fs
aas
imul
nop
sbb
cmp
mov
fimull
shll
fists
fimull
adc
fnstenv
outsl
push
int3
fimull
hlt
inc
sarl
pop
loop
out
jns
lret
insl
movsb
push
adc
mov
dec
push
xchg
push
test
adc
fdivs
xchg
shlb
leave
mov
xchg
lds
push
cmp
inc
test
test
iret
xchg
ret
mov
js
pop
sbb
adc
and
xor
mov
mov
add
stos
pop
enter
shr
xchg
fsubp
mov
outsl
mov
popf
xor
loopne
mov
bound
cld
mul
and
cli
stos
inc
and
fimuls
daa
ret
pusha
and
ljmp
inc
xchg
es
mov
mov
jp
jne
rcr
xchg
aaa
jb
iret
cmc
jmp
xchg
dec
in
cmp
in
pop
cmp
cmp
add
fldt
repnz
mov
cwtl
mov
inc
out
ret
mov
aaa
push
mov
dec
lret
fiaddl
mov
in
jns
js
push
imul
sub
imul
xor
js
pusha
fcompl
sar
iret
mov
xlat
sbb
sub
sbb
xor
inc
pop
dec
and
mov
add
into
sbb
fcoms
jns
aaa
lret
xchg
int3
mov
pop
in
jecxz
out
hlt
inc
dec
pop
xchg
xchg
leave
or
loop
pop
push
lds
mov
add
sti
loope
mov
xchg
dec
xlat
dec
cmp
ljmp
aad
stos
and
stos
stos
pop
xor
xchg
xor
dec
es
fidivl
pop
push
jbe
popa
and
fstpl
lahf
lret
pop
dec
int3
and
shlb
sub
rolb
outsl
cltd
ja
mov
nop
mov
test
pop
dec
add
cmpsb
out
inc
cmp
sub
gs
fcoml
adc
out
stc
fcmovnb
in
nop
mov
mov
test
fstpl
in
jg
jmp
pop
orb
neg
add
pop
cltd
test
push
jl
cmp
mov
lods
sub
sbb
jae
jb
or
inc
xchg
sub
xchg
add
mov
or
dec
jg
jle
adc
mov
add
add
inc
mov
call
and
call
scas
jb
test
sub
gs
rorb
sub
mov
adc
movsb
cmp
movsl
les
idivb
or
or
mov
movsl
leave
ret
fadd
ljmp
cmp
fcoml
sbb
xchg
sbb
xchg
adc
push
jae
and
out
outsl
addl
fwait
jle
push
scas
sub
mov
lret
sub
lcall
clc
int3
scas
push
fndisi(8087
push
dec
or
pop
roll
movsb
push
imul
cmpsl
cmp
dec
inc
out
shl
sbb
mov
stos
ss
nop
sbb
adcl
fildll
pop
lock
cltd
push
rcrl
jnp
jns
fiaddl
dec
add
int
sub
adc
pop
mov
and
mov
sbb
lret
mov
lods
adcb
or
mov
fistpll
and
adcl
cmpsl
movsl
mov
xor
daa
push
mov
mov
psrad
and
mov
jbe
cmp
andl
push
sub
aaa
mov
scas
push
mov
fstps
into
mov
pushf
pop
aaa
jb
push
fsubl
stos
es
jne
stc
into
and
mov
xor
cmp
cmc
dec
push
jne
lret
sahf
jbe
je
xchg
or
xchg
jmp
ret
and
movb
je
dec
dec
or
lcall
js
ret
add
cld
in
shlb
xchg
dec
pop
push
mov
mov
push
call
sub
data16
in
enter
jmp
cmp
arpl
push
bound
pop
jmp
push
ljmp
xchg
pop
gs
movb
sub
pop
lret
dec
mov
jnp
aad
sti
out
pusha
xchg
cs
xchg
roll
insl
sbb
mov
popf
sub
xchg
cld
in
int3
dec
xor
pop
adc
dec
xsha1
cmpsb
dec
test
imul
clc
pop
ror
push
adcb
cmp
mov
loope
inc
adc
push
and
pop
enter
mov
mov
stc
sub
mov
test
adc
shrb
dec
sub
xchg
sbb
sbb
loop
cmpsl
cmp
cmc
outsb
incl
mov
add
mov
sarl
into
and
repz
jnp
push
mov
xor
xor
xchg
arpl
inc
jnp
mov
adc
fwait
je
inc
mov
xor
out
pop
mov
lahf
ds
test
in
andl
or
lea
int3
pop
jae
lret
shll
scas
adc
loop
mov
sub
pop
aaa
sti
aam
jp
fnsave
loope
push
mov
sbb
dec
ljmp
jle
test
mov
loope
xchg
jb
mov
push
fistpll
pop
xor
jo
stos
je
stc
sbb
jns
cmp
mov
jo
cld
mov
les
sarb
pop
sub
pop
out
in
cltd
mov
lcall
fnsave
sub
in
adc
or
aam
dec
or
loope
sub
sub
test
inc
add
jecxz
mov
insb
cmp
pop
jbe
mov
or
mov
jns
cmp
test
pop
mov
inc
xchg
in
les
cmp
cmp
leave
cs
pusha
adc
icebp
jbe
mov
add
fistps
or
stc
sbb
mov
or
icebp
int3
jbe
xchg
adc
adcb
jae
jecxz
jl
or
adc
mov
mov
dec
jp
in
add
sbb
aas
xchg
das
in
pop
scas
outsl
sub
test
cmp
shrl
iret
rsm
fwait
les
cmp
mov
gs
xor
push
cmp
jo
add
pop
mov
cmpsl
repnz
cmc
pop
mov
xor
xchg
mov
pop
sbb
arpl
mov
mov
and
lods
movsl
xor
jmp
cmp
std
orl
add
imul
mov
movsl
dec
cmp
cmovbe
jge
push
sbb
jns
mov
jl
adc
imul
jnp
jne
call
shll
call
repnz
pushf
pop
pop
lds
ljmp
cmpsl
in
or
imull
mov
loope
cltd
push
adc
inc
mov
in
fsub
sub
sbb
push
push
push
call
das
clc
jns
and
loopne
add
mov
pop
mov
xchg
int3
inc
jle
jmp
sub
imul
dec
mov
or
pushl
fidivl
insl
or
cmc
les
pushf
and
inc
pop
cwtl
rcl
into
sarl
repnz
daa
cmp
cmp
inc
mov
icebp
fs
outsb
pushf
jle
enter
jmp
loope
mov
in
xor
xchg
or
xchg
mov
sub
das
incl
jle
xchg
mov
mov
cmp
out
mov
testl
lret
test
cs
inc
jmp
push
incb
data16
lds
mov
mov
movsl
push
mov
mov
xor
sbb
and
repnz
iret
iret
subb
mov
sbb
and
sahf
ja
movaps
into
cmp
dec
bswap
mov
mov
lods
pop
addr16
pop
ret
lods
inc
aam
clc
call
je
sbb
add
out
pop
ljmp
xchg
mov
ss
inc
ljmp
sti
test
mov
inc
xchg
jns
inc
sub
test
mov
xor
cmp
clc
mov
fistps
or
push
test
dec
jl
sahf
hlt
sub
pop
jg
inc
inc
cmpl
test
call
test
push
adc
test
inc
xor
inc
or
cmc
push
dec
pop
cmp
sub
cmp
pop
aam
ret
ljmp
add
loope
sahf
je
ss
jmp
pop
sub
push
inc
shll
xor
addl
shlb
adc
lea
inc
popf
push
in
mov
mov
repz
xor
cmpsb
pusha
add
mov
pushf
inc
clc
jne
jbe
and
xchg
push
sbb
filds
jns
out
lds
inc
mov
dec
pop
mov
arpl
fidivrs
mov
pushf
test
repnz
xchg
rcrb
in
cltd
leave
scas
inc
into
ja
cmp
mov
add
push
pushf
call
imul
aad
lcall
aaa
fisttps
int3
sbb
sub
add
fsts
jp
mov
in
nop
in
xchg
and
mov
mov
sub
or
fdivs
repz
cli
in
lret
pop
ret
dec
pop
adc
cs
hlt
mov
popa
rcll
jge
rorb
inc
jecxz
into
inc
je
mov
push
test
nop
lea
fdivrs
stos
xchg
out
fstpt
inc
ss
xchg
add
pop
in
jnp
fstpt
sti
dec
aad
ret
es
sub
jle
inc
mov
int3
push
adc
lret
ffree
mov
int
popf
outsb
or
inc
xchg
push
push
mov
cmpsb
mov
dec
fistpll
jge
fsubrs
dec
pop
movsb
xchg
and
mov
pop
jnp
dec
add
shl
insl
push
push
cmp
lea
inc
scas
out
and
mov
push
mov
jae
gs
inc
mov
jo
xchg
cs
popf
sbb
dec
adc
mov
add
fisubl
adc
lahf
imul
ficompl
and
scas
sub
push
ss
ljmp
out
push
xchg
int
adc
fs
jmp
imul
addl
push
gs
imul
jmp
in
and
iret
sbb
cmpsb
sbb
pop
clc
lret
jb
cmp
inc
lods
push
inc
outsl
and
leave
push
insb
inc
mov
mov
mov
push
pop
lret
xchg
or
or
pop
cmpsl
and
mov
lahf
notl
dec
call
inc
xchg
mov
dec
insl
popa
fnstenv
test
ljmp
lret
ja
xchg
add
outsl
mov
cmpsb
jp
mov
dec
fcoml
or
pop
push
cld
jbe
and
lcall
jbe
int3
mov
int
jae
aam
push
repnz
jge
roll
or
push
es
mov
adc
and
cmp
iret
test
stos
jl
mov
add
enter
inc
push
and
mov
sahf
push
jp
ret
fstps
test
dec
pop
cmp
inc
jge
pop
mov
test
dec
push
mov
aad
add
or
pop
movsl
cmp
dec
hlt
dec
sub
fisubrs
dec
and
sub
mov
movsl
fmul
test
push
push
and
inc
mov
pop
sub
lret
outsl
mov
pop
add
aas
daa
testb
jae
fwait
and
into
xchg
inc
ja
inc
arpl
xor
loopne
adc
pushf
js
aam
or
ror
movsb
mov
jo
add
dec
inc
rcrl
mov
in
jl
ja
stc
adc
and
xor
mov
xchg
pop
or
das
mov
jl
push
pop
ret
mov
push
divl
int
int
fnsave
or
icebp
jl
xchg
test
mov
sub
iret
lcall
cltd
pop
or
loope
adc
pop
mov
data16
jp
pop
inc
push
lods
xor
hlt
ds
pop
fxch
mov
fstpt
pop
jbe
sarb
and
or
fwait
out
sub
cmp
cmpsl
mov
sbb
arpl
mov
cmp
mov
push
sahf
add
mov
push
shrb
aaa
popf
out
cwtl
lock
pusha
and
inc
cmp
aam
pop
jns
lea
mov
push
les
lret
adc
loop
dec
mov
mov
xchg
xor
aad
inc
jb
mov
test
mov
sbb
test
inc
out
or
cltd
iret
pop
xchg
jmp
push
out
sub
mov
xchg
adc
decb
loopne
jns
jmp
lea
mov
dec
xchg
outsl
ja
ja
sbb
aad
mov
sbb
jae
xchg
add
jbe
push
and
pop
sbb
inc
mov
fcmove
ret
adc
ret
pop
sbb
jmp
xor
xor
jg
dec
pop
inc
fistps
dec
jbe
mov
xor
shl
scas
and
mov
xchg
insb
lret
push
dec
and
xor
mov
int3
jmp
jg
in
fcomi
pop
mov
mov
xor
mov
les
call
push
mov
inc
flds
add
repz
xlat
stos
mov
imul
push
push
lcall
sahf
push
or
and
outsb
and
and
mov
or
sbb
xor
xchg
into
mov
mov
push
repz
shll
mov
outsl
ficoms
fisubrl
push
xchg
mov
xor
subb
jg
insb
int
lods
loopne
lret
adc
and
out
jbe
xor
insb
pop
fs
out
js
sbb
sbb
in
sub
push
pop
out
sub
ljmp
gs
adc
sbb
push
fs
addr16
ficompl
jnp
and
and
les
int3
add
push
and
cwtl
cmp
jo
pusha
jae
mov
fcom
clc
cmp
sub
dec
lret
mov
ret
mov
leave
das
jnp
repz
jb
in
aaa
movq
xor
movsb
pmaxub
test
outsl
mov
mov
sti
dec
or
ljmp
in
inc
fucomp
xchg
sbb
jbe
sbb
sub
add
insl
mov
jmp
in
fisubl
push
xchg
push
xor
push
movsb
ret
mov
cmp
ja
stos
dec
fsubrs
mov
pop
xor
mov
pop
jno
push
pushf
sbb
scas
lret
popf
orb
mov
inc
dec
xor
and
es
and
cs
jne
sbb
shlb
xlat
vphsubbw
into
mov
out
fsub
aad
mov
jecxz
outsb
popf
cmpsb
nop
or
push
xchg
addr16
mov
repz
xchg
pop
push
call
mov
testb
inc
int
inc
jecxz
inc
insl
push
mov
or
push
in
lods
out
sub
in
mov
sub
lds
jmp
push
imul
iret
lret
lock
pop
cmpsl
dec
and
pop
ja
imulb
jle
jl
mov
loope
in
xchg
movsl
sahf
jae
dec
jmp
loopne
fisubl
mov
cmp
pop
dec
adc
dec
repz
mov
dec
mov
dec
fwait
push
pop
daa
insb
lods
mov
adc
dec
inc
pop
outsb
sbb
lret
adc
xor
movsb
add
dec
lret
aam
pop
test
pop
aaa
xor
movsl
repnz
addr16
xchg
mov
xchg
push
in
mov
mov
sbb
jp
push
xchg
test
and
lcall
repnz
shrb
push
popf
mov
clc
sub
xchg
leave
pop
push
add
sub
lret
je
daa
repnz
mov
push
mov
push
aaa
dec
rolb
and
and
or
mov
cmp
in
sbb
repnz
dec
mov
mov
push
jge
jle
xchg
and
int
push
xor
mov
adcb
xchg
add
std
xor
pushf
adc
xor
rol
pop
int3
cmpsl
inc
int3
arpl
adc
mov
int
scas
loope
aaa
out
push
adc
stos
aaa
push
in
mov
lahf
xor
mov
cld
jg
xchg
add
jne
xchg
inc
popa
push
jno
xchg
push
iret
jno
mov
add
sub
mov
aas
in
add
nop
push
push
sbbb
add
push
sbb
xchg
add
inc
out
lcall
nop
or
cmp
inc
pop
rcr
jb
jnp
add
out
repz
mov
dec
mov
nop
inc
fwait
aaa
lods
xchg
mov
outsb
ljmp
pop
xor
push
xor
jg
clc
sbb
imul
xor
dec
loopne
pop
lahf
push
loop
and
mov
xchg
dec
adc
leave
cmp
addl
pop
cltd
lods
shll
push
stc
fucompp
jbe
ret
notl
xchg
jbe
pop
mov
movsl
jmp
fiaddl
xor
sbb
adc
push
and
sub
mov
loop
inc
xchg
jecxz
lcall
push
dec
xor
dec
repz
xchg
or
cs
cwtl
xor
sbb
cmp
sbb
rcr
insl
jo
test
mov
in
aad
stc
stos
and
stos
add
ja
mov
flds
int3
inc
les
jg
in
jecxz
pusha
mov
mov
xchg
dec
pop
mov
icebp
inc
mov
sub
xor
jo
movsb
iret
jmp
repnz
repnz
or
mov
mov
stc
push
arpl
inc
xor
sbb
jo
jle
jno
stos
jle
cmpsl
mov
lret
mov
in
push
cs
sub
sub
repz
imul
jecxz
sbb
or
push
pop
pop
cmp
pop
jnp
cmp
or
adc
test
sub
cltd
pop
jne
out
movsb
mov
inc
fadd
lea
divb
mov
test
pusha
sub
pop
jmp
xor
outsl
insb
xor
in
shlb
mov
in
dec
pop
and
mov
pop
into
aam
xor
or
fcmovnbe
mov
out
movsb
xchg
roll
push
test
jge
test
data16
mov
nop
cmc
xor
icebp
les
adc
sbb
push
push
pop
push
mov
xor
arpl
inc
pop
sbb
inc
xchg
js
hlt
add
push
jae
dec
add
push
dec
add
inc
jbe
sarb
fdivl
lahf
inc
cld
xchg
and
loope
loope
lret
dec
or
mov
ret
insb
rcrb
and
and
pop
mov
adc
xor
out
and
push
int
scas
pop
pop
or
cmp
shll
mov
add
xchg
imul
into
xor
sbb
mov
push
sub
mov
mov
jecxz
dec
mov
sub
xor
pushf
xor
outsb
fldcw
imul
jg
fistpl
in
mov
sbb
xchg
and
adc
and
pop
adc
pushf
fldenv
out
or
mov
mov
les
out
ret
loop
mov
movsl
adc
dec
push
xor
mov
mov
xchg
xchg
inc
int
cmpsl
cmp
mov
leave
adc
cmp
imul
push
imul
dec
mov
sub
sub
popa
dec
push
xor
cmpsb
shlb
mov
aad
inc
jae
fwait
in
xor
pop
shll
fld
and
call
and
pop
je
negl
aam
add
iret
mov
mov
mov
ss
adc
daa
rolb
inc
subl
jp
mov
or
add
add
hlt
xor
xor
push
cltd
pop
fldt
gs
sarb
addl
in
and
push
inc
mov
das
sbb
sub
sbb
int3
jns
mov
in
jmp
pushf
int
and
ljmp
xlat
or
inc
pop
out
inc
insb
fisttps
dec
sahf
sub
sub
iret
icebp
sbb
mov
mov
pop
movsb
es
mov
in
dec
mov
xchg
or
leave
vpunpckldq
test
lret
cmp
hlt
xor
add
clc
mov
inc
push
loope
cmpsl
mov
cmp
sbb
iret
mov
mov
fnsave
sub
imul
and
pushf
xchg
pop
mov
or
fnstsw
add
daa
test
icebp
add
sahf
leave
pop
xchg
mov
addr16
jmp
jo
push
shlb
xor
cli
sub
inc
icebp
jmp
sub
enter
or
mov
shlw
cmp
orl
xor
lds
xlat
jl
xor
add
xor
cmp
inc
addb
adc
mov
repz
mov
mov
or
rcr
ret
in
xchg
insl
mov
and
cld
movl
in
or
dec
shl
pop
dec
incb
imul
std
mov
dec
push
rol
repnz
inc
clc
pop
bound
ds
adc
call
repz
push
daa
lret
aaa
ljmp
pop
aas
or
xor
dec
movsb
cltd
inc
mov
sub
adc
scas
inc
mov
jno
pop
cmp
fdivl
stc
test
mov
and
mov
ret
xchg
ret
cmp
ret
jno
dec
xchg
in
pop
mov
sbb
mov
inc
hlt
inc
dec
enter
mov
out
dec
popf
mov
cmpsl
sbb
or
mov
mov
pop
hlt
lods
fimull
mov
js
push
aam
aad
idivl
shrb
xor
rcll
xchg
ret
push
inc
mov
mov
cmc
sub
popa
cs
jno
lea
cli
dec
mov
jl
inc
mov
push
daa
outsl
dec
popa
ret
arpl
add
and
and
dec
pop
pusha
or
aad
nop
insb
mov
mov
daa
inc
les
lahf
shl
aas
adc
insl
jge
cwtl
and
sbb
push
pop
sbb
sarb
mov
mov
loop
out
sbb
pop
lds
xorl
push
xchg
sbb
dec
ret
pop
jae
sahf
inc
cmp
xchg
cmp
cmc
mov
xchg
rorb
pop
mov
xchg
lea
sarb
push
out
clc
pop
jecxz
hlt
cmp
mov
outsl
je
push
insb
ficompl
mov
mov
dec
dec
loop
mov
out
mov
push
rol
negb
or
jge
lahf
out
sub
adc
testb
rorb
rorl
jbe
dec
or
pop
je
adc
xchg
mov
pushf
pop
mov
inc
cltd
cli
sbbl
aaa
lods
fcmovnbe
popf
pop
arpl
adc
aas
stos
sbb
movl
adc
lods
mov
subb
insb
jg
insl
sub
cli
call
lds
cmp
cmp
mov
in
jno
cwtl
out
iret
rorb
dec
jae
sub
scas
mov
in
js
loopne
pop
sub
inc
mov
lret
sbb
loope
sub
sub
adc
ljmp
enter
xchg
adc
call
pop
in
push
dec
cmp
cli
xchg
fisubs
sbb
mov
and
enter
lcall
loopne
mov
fiaddl
sub
shlb
add
mov
or
xor
xor
mov
jge
jmp
xor
xor
lret
sub
inc
xchg
mov
pop
mov
loop
hlt
je
insb
call
pop
js
das
add
sbb
pop
xor
sahf
pop
rolb
lahf
shr
test
sub
push
jge
arpl
adc
jae
push
int3
sbb
xor
and
loop
test
sub
fimull
mov
sbb
dec
ljmp
outsb
xor
stc
inc
scas
push
adc
add
mov
push
mov
adc
shrl
call
addl
repz
rcr
sub
lahf
mov
pop
xchg
daa
push
push
sarb
lcall
sahf
mov
cmp
arpl
adcl
outsb
dec
pop
fisttpll
out
imul
adc
outsb
mov
sub
out
ljmp
aaa
jmp
sarl
pop
mov
fsubr
inc
enter
fcomip
inc
pop
sbb
xchg
dec
ror
cmp
pusha
addr16
xchg
mov
adc
je
mov
ss
mov
adc
call
sbb
jge
testl
loop
cs
stc
call
pusha
adc
in
mov
cli
adc
jecxz
and
or
and
jns
xchg
mov
push
das
popf
ret
sarl
das
sbb
loope
mov
sahf
inc
cmp
pop
push
xchg
cmpsb
cmpsb
jg
subb
cmp
cmp
imul
shlb
push
jbe
mov
out
in
adc
int
sbb
scas
or
push
std
xor
imul
lods
jb
or
mov
push
popf
pop
lahf
xchg
fcompl
mov
or
and
pop
lods
loopne
push
and
stos
sahf
sbb
data16
out
rcll
mov
and
insl
pop
fmull
gs
incb
mov
ss
xchg
adc
fcoml
sub
mul
or
cld
mov
and
dec
xor
cmp
mov
insl
pushf
xchg
cld
test
xchg
outsb
add
add
cmpsl
mov
dec
cld
data16
lea
insl
ljmp
out
mov
aam
mov
mov
push
fwait
iret
int
jne
mov
mov
adc
add
cmp
add
adcb
int3
add
fisttps
mov
stos
in
out
bound
jmp
dec
test
dec
jg
cmp
pop
cltd
jne
mov
fbstp
jmp
aas
insb
dec
mov
add
mov
popa
cmp
jp
clc
adc
mov
enter
dec
cmp
stos
ljmp
bnd
or
out
mov
and
ja
push
sub
outsb
or
fidivl
xor
sub
pop
test
xor
fsubrl
stos
or
std
pushf
pusha
mov
movsb
inc
fiaddl
loop
mull
stc
mov
roll
jg
or
cwtl
mov
pop
sbb
stos
mov
stos
inc
fldcw
inc
es
lcall
dec
outsb
mov
scas
add
push
adc
dec
fildll
jo
enter
push
pushf
cmpsb
and
imul
sti
push
jbe
sub
out
inc
out
pmaxub
outsl
jmp
mov
push
mov
mov
sti
shll
add
jmp
cmpsb
fistpl
sbb
and
ljmp
add
into
sahf
sbb
sub
add
mov
adc
push
adc
fs
dec
lret
out
fcmovu
aam
or
jl
pop
test
push
test
das
jo
lea
cmpsl
test
imul
rorl
test
std
sub
outsb
push
xor
int
insl
sub
mov
dec
add
sbb
test
bound
je
xchg
push
xchg
xchg
jae
aam
adc
pop
icebp
mov
bound
loope
jl
xor
inc
add
cmpsb
aam
dec
fadd
addr16
flds
adc
inc
fyl2x
repnz
dec
aaa
enter
cmp
je
sbb
jne
xor
cmc
push
shlb
out
iret
dec
mov
fs
cmpsb
out
aam
cltd
inc
lock
ds
loope
data16
jae
shl
cmp
das
pusha
sbb
fstpl
test
add
push
add
mov
aas
mov
cmpsb
xchg
cs
push
push
addr16
jl
test
adc
push
test
add
pop
ja
push
lds
jne
add
mov
mov
cmc
add
sahf
fidivs
lcall
cli
xchg
cmpsb
cmp
inc
push
in
test
inc
mov
add
stos
xor
mov
adc
add
sub
arpl
adc
push
adc
mov
repnz
pop
and
cld
imull
sub
movsl
push
push
mov
jae
push
cmpl
inc
xor
jo
ror
jns
jo
test
cmc
inc
mov
or
mov
cmp
outsl
and
fstps
movb
jg
addl
sub
rcll
jle
mov
jecxz
test
and
push
aam
iret
and
dec
mov
add
enter
jmp
andb
sub
or
or
push
xchg
mov
jg
inc
lcall
lods
cmpsl
rorl
push
daa
sbb
in
xchg
xchg
test
test
push
ret
cmp
sbb
pop
test
cmp
adc
cmp
out
or
adc
leave
pushf
mov
xchg
sahf
stos
add
in
fsubp
ret
cmc
sti
pusha
insb
popa
cs
sbb
int
jbe
adc
aam
cmpb
leave
fnstenv
pop
cmpb
cmp
loopne
push
stos
xchg
insb
addr16
ret
aad
cmp
aaa
movsb
sbbl
iret
pop
aad
push
fs
jmp
in
pop
xor
jae
mov
cmp
daa
jo
adc
inc
fstpl
mov
mov
loopne
insb
js
into
adc
lods
cmpsl
jbe
add
mov
xchg
fsts
shll
popl
mov
dec
ret
cs
je
mov
ds
inc
sbb
push
fildll
mov
mov
repnz
dec
adc
cmp
es
bound
mov
insb
fimull
inc
add
scas
inc
and
push
mov
dec
sub
sbb
mov
popa
inc
push
push
mov
xchg
dec
jle
adc
sbb
jmp
add
pusha
rol
out
es
xchg
lods
and
xchg
mov
call
adc
fstps
lret
or
dec
xor
jecxz
mov
push
fnstsw
adc
iret
fs
dec
jo
mov
xlat
aad
mov
jl
inc
in
or
mov
xor
jno
adc
jmp
push
xor
sti
jo
jnp
imul
cmp
sbb
ret
mov
xchg
or
xor
test
mov
ret
or
in
fwait
mov
push
sub
push
ss
clc
rcr
ljmp
mov
jns
jl
xor
loop
adc
into
xchg
mov
inc
adc
and
call
xchg
and
pop
jmp
adc
pop
jne
inc
push
xchg
in
jge
or
and
icebp
loopne
dec
shl
or
xchg
loope
andb
xchg
jmp
and
jle
or
movsl
les
inc
jnp
test
dec
incb
inc
loop
lret
push
scas
mov
cmp
test
mov
inc
sarb
sahf
add
cmp
es
mov
inc
jno
sbb
loop
adcl
xchg
test
insb
jb
lcall
nop
les
out
imul
addl
es
push
stc
iret
xor
push
mov
cmp
enter
je
cmp
pop
imul
repnz
and
xor
xchg
pop
xchg
sbb
popf
js
iret
add
mov
aaa
lock
inc
inc
inc
je
negb
sub
les
scas
adc
mov
test
sbb
ss
cltd
xchg
jmp
scas
fists
push
dec
bound
sub
or
gs
movsl
adc
in
xor
scas
sbb
aad
bound
sub
mov
add
sub
or
and
xor
test
cmpsl
fndisi(8087
or
shl
or
mov
and
mov
jmp
cmp
je
pop
fnstenv
mov
jle
xchg
mov
inc
lods
clc
adc
out
inc
pop
imul
adc
xchg
and
insl
scas
out
cmp
push
dec
pop
xlat
jae
aad
outsl
stos
cmpsl
push
js
fwait
add
adc
ds
les
and
dec
dec
jg
xor
das
xor
stc
or
xor
push
js
leave
leave
das
stos
scas
icebp
dec
and
and
fmul
clts
inc
outsl
fdivrs
fidivl
jae
adcl
insb
sub
into
push
ficompl
pop
or
push
sbb
add
mov
mov
jns
cmp
xchg
out
movsl
ret
js
xchg
hlt
call
cwtl
cmp
mov
mov
and
bound
cmp
ret
call
mov
xor
cmp
xchg
or
inc
or
mov
sbb
and
xchg
xor
xchg
cmpl
std
inc
cmp
sbb
nop
cmp
jg
dec
mov
stos
pushf
repz
call
ficoml
jle
sbb
sub
das
pop
clc
mov
aam
xchg
dec
push
scas
sub
push
iret
mov
leave
movsb
ret
push
adc
jmp
dec
pop
xchg
push
add
lret
push
inc
push
enter
mov
incl
sbb
mov
cli
push
into
lods
jns
jo
dec
filds
xorl
repz
int3
mov
jne
mov
rcr
lret
xor
addr16
les
jle
or
sahf
add
pop
out
loopne
rcll
loope
lods
cmp
add
adc
pop
rorb
mov
fcmovnu
aad
fldcw
inc
cmp
lock
inc
jno
adc
mov
ficoms
sbb
jge
sub
jg
mov
cmp
inc
sbb
pop
shr
push
mov
sub
in
inc
cmp
cmp
and
dec
jne
mov
movd
cmp
mov
sub
mov
inc
lock
das
insb
or
pop
clc
aad
incb
insb
data16
xchg
sub
dec
push
adc
enter
scas
add
out
add
popf
aam
xchg
xor
jae
sub
imul
xorl
xchg
ficoml
mov
pop
sbb
xchg
int3
int
outsb
sbb
adc
xchg
cwtl
sbb
dec
push
stos
inc
or
xchg
in
mov
fdivr
addl
jecxz
adc
push
stos
add
sbb
out
aaa
cmc
in
sbb
insl
xlat
xor
stos
jle
adc
push
jle
test
cmp
jg
mov
adc
xor
movsl
cmpsb
mov
lods
sarb
lret
jb
xor
and
js,pn
iret
aad
jl
xchg
adc
test
ror
sbb
mov
fsubl
add
or
cs
or
pop
jne
hlt
movsb
aam
popf
sbb
in
aad
push
icebp
or
mov
xchg
sbb
or
enter
sub
jecxz
icebp
adc
xor
mov
push
or
fcomps
or
push
pop
pop
add
icebp
mov
movsl
cmp
push
out
clc
cwtl
scas
ret
sbb
pop
xchg
mov
jle
pushl
sti
inc
mov
mov
fmul
sub
into
ret
pop
cltd
lret
out
fwait
cmp
mov
int3
test
xor
nop
mov
sbb
imul
loopne
pushf
and
in
add
rclb
movsb
out
adc
adc
adc
fldl
fwait
dec
aam
xlat
jb
stos
in
push
stos
xchg
sub
mov
push
sub
addr16
repz
push
rclb
sub
jb
dec
pop
imul
adc
loop
sub
inc
cmp
sahf
cmp
andb
pushf
dec
dec
push
fistl
into
test
cmpsb
jge
in
ret
jg
ret
mov
pop
fdivs
mov
enter
sub
movsb
int3
push
cmc
cmp
lcall
xchg
sbb
sbb
jne
jge
leave
push
pop
push
inc
int3
fwait
xchg
and
sbb
or
xor
push
sub
enter
cld
shl
pop
ret
jne
inc
jb
in
stos
sahf
push
mov
adc
rorb
divl
pop
mov
lea
push
mov
stos
inc
jg
inc
cmp
jmp
mov
fucomi
aas
adc
or
outsl
jge
inc
fs
and
and
outsl
pop
sbb
fsubrs
or
cli
pop
imul
mov
out
inc
dec
call
in
sub
push
jne
shll
xor
aad
jbe
inc
push
pop
push
add
pop
mov
ficoml
je
cmpsb
xorl
es
mov
decb
das
sbb
lahf
sub
ret
jecxz
sbb
lods
mov
push
inc
decb
pop
outsb
jle
imul
adc
cmpl
rcl
sarb
cmp
sahf
add
adc
nop
mov
sbb
nop
inc
insl
jae
mov
pop
out
out
inc
mov
cmp
sub
pop
stos
pop
pop
mov
movsb
add
dec
test
call
clc
addr16
mov
or
call
rcll
and
aas
je
mov
add
adc
in
add
jl
mul
fwait
inc
cmpl
ret
jno
dec
jmp
mov
imul
out
add
test
or
mov
pop
subl
inc
repz
xor
mov
mov
jge
adc
jl
add
scas
push
xchg
xor
jo
push
movl
cmp
shll
xchg
sbb
pop
stos
rclb
push
sub
push
pop
inc
mov
sbb
mov
dec
enter
mov
pop
cmp
xlat
xor
lds
jle
ljmp
icebp
scas
mov
cs
aad
and
xor
out
sbb
sti
sub
je
and
dec
pop
lahf
jl
or
sbb
mov
dec
lret
pop
mov
es
je
mov
loopne
dec
jmp
int
scas
or
mov
in
out
enter
sahf
xor
aas
loopne
pop
jns
mov
adc
xchg
jo
or
push
mov
aaa
jb
shll
clc
scas
dec
push
xchg
aam
nop
insb
push
out
mov
jg
testb
outsl
aam
iret
aam
out
sbb
arpl
enter
cld
pushw
les
je
rorb
push
repnz
fldt
jg
cmpsb
ret
jmp
fcmovnb
nop
push
add
test
fmul
cltd
fdiv
outsb
push
xlat
lods
imull
mov
mov
adc
pushf
adc
jmp
xchg
sbb
mov
mov
out
rcl
outsb
lahf
cmp
or
repnz
cmp
pop
cmp
sbb
icebp
jl
nop
mov
arpl
shrb
lea
call
adc
xchg
push
imul
outsb
negb
mov
ret
cmpsb
sub
popf
jle
std
cmp
mov
sub
sti
jb
mov
rcl
in
push
xchg
cli
lret
push
pusha
lcall
clc
mov
push
out
sub
and
push
andl
and
pushf
dec
jbe
test
out
sbb
fwait
dec
push
fxch
jmp
je
pop
push
push
loope
jno
xor
rcl
mov
mov
and
in
push
fadd
or
pop
punpckhdq
repnz
adc
xlat
aam
pop
adc
shrb
stc
iret
mov
push
jecxz
iret
add
mov
ja
sti
in
lahf
adc
lcall
mov
xchg
lods
int
or
sbb
and
mov
pop
int3
fwait
imul
cmp
mov
mov
pop
rclb
adc
push
pop
addr16
sbb
in
xor
pop
movsl
out
int3
dec
jge
mov
jb
and
into
cwtl
imul
loopne
mov
sbb
push
sbb
push
fdivp
push
or
inc
xchg
movsl
lret
cmp
push
and
pop
mov
pop
add
movl
cld
push
test
jl
push
jg
cmpl
inc
clc
in
xchg
cmc
pop
sbb
ret
sbb
xor
shl
sub
xor
dec
aas
add
jbe
fstp
jecxz
data16
adc
mov
pop
jmp
andb
push
je
fwait
lret
jecxz
cld
push
mov
fidivrl
outsb
mov
xchg
adc
push
mov
adc
in
bound
notb
adc
mov
sbb
repz
test
xor
std
xchg
mov
xorb
mov
mov
loope
mov
data16
and
pop
xor
and
test
lret
sti
mov
push
xchg
insb
cmp
add
xor
inc
add
sarb
cmp
sbb
out
repz
dec
into
push
mov
dec
adc
pop
sbb
mov
jns
mov
cmp
call
add
mov
repz
cmpsb
icebp
jecxz
cli
cs
pop
ret
stos
jbe
mov
in
and
test
xchg
mov
adc
jmp
fsts
mov
repnz
dec
mov
inc
xor
fists
adc
and
adc
mov
loop
sbb
nop
add
jecxz
or
jne
mov
addl
lcall
out
mov
das
ds
aas
pop
sar
cmp
add
inc
test
dec
movsb
popa
mov
add
rcrl
sbb
sub
push
inc
out
stc
push
ret
jle
xor
int
and
dec
pop
xchg
dec
stos
jp
loop
cmp
dec
sbbl
test
adc
adc
mov
and
fdivrs
loop
aas
dec
aad
out
mov
lcall
out
cmpb
sbb
sub
shl
or
pop
shlb
scas
xchg
jl
push
sbb
fcomps
and
mov
leave
es
sub
outsl
mov
pop
sbb
aas
mov
lret
out
add
jp
pop
std
data16
outsl
inc
mov
in
xchg
ret
movb
sbb
notl
aam
repz
movsl
mov
fimuls
cmpsl
xchg
cmp
pop
add
dec
je
cmpsl
daa
adc
or
cmpsl
adc
bound
xchg
push
popa
dec
les
ds
lret
and
jno
mov
sbb
rorb
loope
jge
jl
fcomps
sbb
xor
mov
lods
mov
push
imull
cmp
ss
adc
mov
fwait
adc
push
mov
and
inc
fisttpl
xlat
addb
ss
cltd
cmp
sahf
mov
das
mov
lock
leave
xor
es
neg
outsl
pop
rcl
mov
outsb
dec
jnp
add
jmp
mov
sahf
mov
imul
out
push
ds
mov
push
and
mov
or
mov
mov
mov
movsb
and
test
ljmp
push
xor
ja
inc
xchg
mov
or
cmpsl
jmp
cmp
push
mov
push
icebp
and
inc
pop
and
out
pop
jecxz
gs
xchg
push
inc
sbb
adc
mov
ja
adc
push
or
js
cmp
and
sub
pushl
outsb
inc
lret
sub
cltd
adc
add
jge
jecxz
mov
mov
pop
lods
imul
lea
lahf
dec
cmp
mov
insb
add
cmpsl
mov
in
mov
xor
cltd
leave
mov
mov
cwtl
xchg
aam
xor
es
test
das
cmp
jno
add
lcall
test
std
fldcw
sub
pushf
inc
out
cmp
outsl
shl
sbbl
sub
es
pop
iret
jnp
jnp
mov
jns
cmpsl
jne
jns
add
pop
push
rcrl
xor
or
push
int3
rol
xchg
xor
cmp
or
andb
push
icebp
add
insl
cltd
cs
js
mov
sub
sub
xorl
in
sub
test
cwtl
jbe
mov
repnz
jmp
shrb
mov
repnz
sbb
jbe
arpl
push
adc
ret
aad
mov
mov
lds
lcall
mov
sar
xchg
xor
mov
jmp
dec
insb
bound
adc
mov
mov
push
inc
loopne
xchg
idivb
test
adc
and
bound
lret
or
scas
adc
sbb
loopne
mov
jle
icebp
lock
pop
into
stos
sbbb
faddl
aaa
jmp
or
repz
mov
int
lret
int
call
adc
mov
in
or
jns
repnz
pcmpeqb
in
leave
aas
pop
mov
popa
jo
jbe
iret
sub
ret
xor
jmp
popf
mov
std
push
push
subb
mov
mov
jo
enter
popa
mov
adc
xchg
lea
mov
in
in
out
mov
and
xchg
cmp
pop
fnstenv
mov
xor
push
pop
or
jnp
enter
inc
xor
mov
mov
call
int3
mov
cmp
mov
mov
push
daa
aam
mov
outsl
add
into
jp
js
push
mov
jp
jecxz
mov
ja
cwtl
dec
or
ficoms
push
ffree
stc
in
and
mov
and
mov
pop
adc
pop
ret
adcb
test
out
fisubl
dec
add
bound
andl
xchg
dec
sbb
jecxz
outsb
add
pop
cltd
imul
popa
adc
pop
imul
sub
and
fwait
xor
mov
mov
cmp
or
call
mov
fisubl
jecxz
mov
aaa
stos
sti
out
mov
sti
cmp
or
mov
fs
lahf
mov
mov
idivl
adc
mov
push
jge
in
fs
fisttps
sub
int
in
push
add
mov
arpl
jbe
sbbl
adc
pop
jb
jns
and
or
jg
push
push
movsl
mov
xchg
cld
jae
and
xchg
ds
jae
scas
dec
sbb
test
mov
xchg
fists
mov
pop
movsl
push
xchg
loope
arpl
mov
pop
mov
adcl
in
loop
sub
int3
call
loopne
test
dec
push
lods
mov
push
sub
je
inc
push
sub
mov
push
dec
leave
not
fs
mov
push
mov
mov
mov
fiaddl
mov
popf
sbb
push
jmp
mov
addb
nop
fs
lds
cwtl
lret
or
mov
adc
fwait
arpl
inc
loop
out
hlt
sbb
lea
inc
popa
sbb
aas
js
push
repz
clc
dec
insl
ss
scas
cmpsb
mov
mov
dec
push
push
cmp
mov
inc
mov
dec
fldenv
fcmovb
lret
imul
mov
movsb
adc
adc
cmc
cmc
loop
cld
dec
sub
int3
or
cltd
adc
cli
or
lock
and
cs
adc
adc
ds
dec
jne
stos
popf
fistl
stc
stos
xchg
xlat
cmpsb
push
add
bound
fsubs
jnp
push
out
ret
push
push
sub
jnp
scas
sbb
mov
cmp
add
jg
fistpll
movsl
inc
push
in
mov
pop
cmp
jb
aam
push
mov
mov
sub
pop
mov
nop
outsb
in
inc
aam
sbbl
adc
cmp
sbb
outsl
adc
imul
jge
lods
loope
out
aas
fistpl
outsl
cwtl
mov
mov
mov
stos
popa
mov
jmp
and
out
push
cmc
es
jo
mov
jmp
shl
iret
es
or
shl
jnp
andb
sub
stos
xchg
test
xor
les
sti
add
and
push
pop
and
mov
mov
mov
inc
mov
mov
sahf
xor
add
fcmovnb
sbb
mov
mov
sbb
test
movsb
shl
pop
ja
pop
in
out
mov
popl
rep
pop
inc
or
inc
pop
stos
mov
adc
or
imul
inc
pusha
dec
cmpsl
sub
add
mov
mov
dec
and
ret
mov
push
in
imul
mov
hlt
xchg
adcb
jbe
ljmp
data16
xchg
fmul
in
pop
nop
pop
test
movsb
fs
icebp
adc
icebp
add
fwait
xor
fnstsw
xor
xchg
push
sbb
int3
add
shlb
cmp
cmp
cld
sti
inc
subb
ja
add
cmp
out
inc
aas
cmpl
cltd
mov
dec
xor
rcrb
into
pusha
popa
loopne
sarb
lds
daa
push
jb
int3
adc
mov
mov
fsubl
xlat
cmpsb
fnsave
sub
and
jns
push
icebp
xor
daa
sbb
fldt
cmp
mov
mov
popa
dec
lret
xor
aas
and
cli
mov
popl
dec
push
dec
dec
das
mov
out
nop
vxorps
mov
and
push
xor
fcomip
cmp
xor
xchg
lock
mov
dec
icebp
adc
stos
test
rcrl
cltd
adc
push
lret
or
push
push
clc
xchg
xor
inc
sub
cmpsb
into
mov
out
ja
imul
pop
je
inc
push
or
aaa
fnsave
cwtl
dec
iret
cs
sbb
outsl
jmp
repz
mov
xchg
sub
or
pop
out
mov
sub
nop
ret
mov
dec
hlt
call
pop
in
mov
inc
scas
daa
or
loope
cmc
gs
ja
data16
ret
sub
mov
outsl
add
subl
and
fsubrl
add
hlt
xor
xor
shll
adc
test
cmpsb
push
mov
nop
orb
fs
push
or
stc
lret
or
and
sub
hlt
out
jg
vshufpd
fstpl
stos
fidivs
xor
xor
mov
push
sub
fadds
jle
push
fs
loop
scas
popa
jo
faddl
mov
mov
jb
lret
mov
xchg
out
mov
fnsave
js
fimull
cltd
xor
pop
adc
xchg
mov
shr
mov
ss
mov
cmpsl
jecxz
jmp
inc
loopne
inc
jg
sbb
mov
jno
mov
mov
jp
xchg
sub
dec
or
cmp
test
cmp
loop
lock
and
jne
jle
xor
xchg
xchg
clc
test
movsb
enter
data16
mov
mov
int3
fildl
cltd
or
mov
subl
xchg
cmp
rorb
jnp
xchg
xlat
test
sub
push
mulb
fmull
mov
and
xor
push
mov
jecxz
xor
push
icebp
dec
or
or
jp
xchg
lds
pop
pop
jno
repnz
mov
fldt
mov
mov
aas
subb
push
and
jle
roll
pushf
xor
jbe
loop
daa
cmp
test
pop
mov
outsl
divb
push
jne
cmp
mov
fidivrl
loop
clc
cld
fstl
loopne
out
xor
data16
push
push
mov
aad
cmpl
xor
sbb
stc
cmp
in
fs
int3
enter
jo
sbb
and
dec
loopne
pop
cwtl
xchg
mov
rclb
sbb
xchg
or
adc
xor
push
jecxz
xchg
stos
bound
jge
xchg
push
insb
push
ljmp
int
jo
cltd
fldcw
ret
cwtl
faddl
test
leave
fldl
cmp
pop
push
out
adc
jmp
inc
call
lock
andl
dec
pop
and
sti
or
in
scas
sub
or
repz
add
and
arpl
sbb
sbb
mov
fidivl
push
jns
xchg
das
js
and
test
pop
mov
mov
cmp
xor
into
out
mov
cli
sbb
in
imul
sub
nop
je
aas
dec
loope
ret
lret
push
sbb
pusha
xchg
add
sbb
pop
mov
inc
addr16
dec
jmp
js
lret
xor
mov
std
and
sbb
pop
xor
or
sbb
aaa
mov
or
scas
insb
mov
mov
inc
les
dec
mov
xor
movsl
loopne
out
and
add
mov
or
ret
arpl
cmp
xchg
and
fwait
call
sbb
add
xor
pop
out
rorl
push
bound
mov
jnp,pn
nop
ljmp
add
sub
sub
sahf
test
add
repnz
mov
jo
aam
adc
and
mov
je
push
pop
inc
push
gs
cwtl
mov
addr16
sti
nop
imul
xchg
sbb
xor
loope
jo
pop
out
lcall
push
push
sub
hlt
inc
loop
push
adc
in
call
test
out
pushf
and
iret
sub
ss
jge
and
sahf
push
ficoms
mov
jbe
push
dec
and
fdivrs
push
mov
xchg
adc
data16
inc
inc
adc
addr16
sub
mov
out
rol
hlt
pop
in
mov
pushf
jne
dec
stos
jne
push
add
cmp
mov
mov
xchg
daa
call
movsb
scas
dec
mov
cmpsl
dec
mov
adc
loopne
pop
pop
sub
inc
adcl
xchg
push
sbb
int3
cli
cmpsl
pop
pop
xlat
fs
mov
xchg
out
xor
test
mov
mov
mov
xor
pop
enter
movsl
clc
fdivrs
xchg
jae
imul
lahf
lea
scas
insb
cli
sbb
sub
testl
xchg
mov
pop
mov
push
in
jmp
in
fnstsw
push
lcall
outsl
push
dec
dec
ljmp
cmc
scas
in
jle
jnp
cmpsl
lock
inc
sti
ret
rolb
dec
jle
push
pusha
mov
cltd
stc
mov
ss
mov
xor
mov
je
add
cmp
insl
adc
les
cmp
mov
inc
and
sub
cmp
and
cmpsb
mov
inc
gs
dec
adcl
lods
cmc
into
adcb
sbb
jne
iret
rorl
pushf
jnp
mov
cltd
std
sub
dec
cmp
outsl
pushf
movsb
js
inc
fistps
xchg
faddl
daa
movsb
xchg
jno
cmp
cmpsb
inc
shll
xchg
xor
test
shrb
inc
ljmp
repnz
xchg
sbb
std
iret
xchg
arpl
or
sub
sub
cmpsl
repnz
insb
pop
lret
sbb
mov
jo
push
daa
shl
dec
push
jl
pop
mov
je
xor
xchg
sub
mov
mov
or
xchg
and
or
push
nop
pop
in
jecxz
dec
mov
sbb
mov
pop
iret
fwait
stos
ds
cmpsb
ja
movsb
dec
pop
scas
dec
fs
xchg
push
test
test
movsl
mov
imul
push
mov
loopne
les
movsb
or
and
arpl
inc
mov
dec
aam
cmp
mov
xor
test
mov
aam
test
adc
aaa
into
mov
jl
sub
cmpsb
xor
clc
push
sub
jae
shl
in
inc
cld
push
jp
pop
gs
pushf
outsb
cmpsb
inc
in
xor
push
push
pop
into
and
push
and
cmp
xchg
mov
outsb
jl
and
xor
lods
lret
push
inc
jo
sbb
cmpsb
mov
add
and
jbe
cmp
mov
fldenv
adc
lcall
mov
mov
scas
ljmp
sbb
pusha
sbb
cmpsb
inc
sbb
popa
xchg
push
dec
xlat
aam
mov
ret
mov
loopne
pop
pop
adc
pop
ret
push
popa
mov
in
sub
outsb
pop
pop
sbb
loopne
test
std
out
mov
push
xchg
aaa
dec
aas
ljmp
adc
cs
inc
xchg
pop
cmpsb
push
mulb
nop
cltd
sbbl
inc
cmp
add
imul
push
pop
push
xlat
idivl
bound
cltd
dec
imul
ljmp
xchg
mov
cmp
mov
jbe
adc
push
daa
lea
sahf
nop
movntps
rcl
dec
cld
mov
movsb
int3
lcall
lahf
js
les
dec
push
out
rcll
push
test
jmp
movsl
hlt
mov
dec
sub
ds
call
pop
sbb
xlat
add
add
jae
popf
xor
xlat
pop
hlt
shrl
mov
fldl
dec
loopne
pushf
aad
in
mov
sbb
mov
lahf
mov
mov
insl
stos
repz
mov
sub
push
push
mov
pop
or
ret
mov
sub
repz
and
mov
je
push
dec
out
mov
clc
in
mov
stos
cmp
xchg
mov
cs
jle
call
out
or
addr16
in
mov
mov
cltd
mov
scas
adcl
pop
dec
mov
sarb
add
and
or
and
and
clc
inc
push
xchg
shl
xchg
jb
pushf
fldt
xchg
inc
sbb
insl
ss
jae
push
rol
push
cmp
pop
enter
aaa
or
lock
adc
es
or
pop
cmp
loopne
popa
sbb
push
xchg
sbb
dec
nop
lahf
mov
jne
into
xchg
jmp
or
inc
push
jns
fisubrs
testb
lret
into
imul
jbe
xchg
ss
je
push
sahf
int
adc
push
xor
scas
mov
pop
and
je
js
imul
aad
jmp
lahf
push
mov
iret
jmp
or
leave
jp
mov
xchg
and
test
aas
outsl
add
das
mov
push
dec
leave
insl
or
pop
mov
test
mov
mov
jne
cmp
xor
push
lds
cld
add
lahf
xchg
xchg
cmp
aam
pop
sbb
in
ss
mov
aaa
cmpxchg
sti
rcrb
sti
shrl
loop
jle
cmpsb
push
xchg
adc
ljmp
cmp
sbb
test
inc
fs
lea
pop
push
int
jge
xchg
scas
dec
sti
je
lahf
jae
in
inc
inc
mov
jnp
adc
jecxz
or
xor
mov
pop
fwait
call
js
aas
mov
lret
pop
data16
fldl
in
mov
xchg
cld
lock
repz
sub
or
test
test
lcall
imul
sbb
and
ljmp
sbbb
push
sbb
push
std
jbe
dec
xor
out
lahf
in
cld
or
andl
pop
stos
popf
ljmp
cmpsl
cmp
pusha
jb
nop
and
sub
and
inc
in
xor
cld
xchg
loop
push
and
push
cwtl
rcrb
out
icebp
mov
popf
dec
mov
mov
inc
dec
bound
fs
lock
lds
loop
push
lret
push
repnz
pop
imul
fimull
lods
cltd
loop
inc
push
rorl
inc
pushw
data16
ja
adc
sahf
pop
dec
gs
mov
call
mov
mov
push
mov
lds
out
jno
daa
adc
xor
cwtl
mov
in
and
mov
sti
mov
popf
mov
jo
les
cmp
out
cmp
nop
ss
ja
shll
jp
pushf
rcll
mov
aas
lds
lahf
in
cmp
dec
and
jns
xchg
mov
ret
cmp
xchg
in
adc
sbb
dec
mov
jl
jmp
loope
mov
jbe
push
cmp
jg
imul
xor
rcr
cmp
sub
pushf
or
pop
pop
in
cmp
cs
aas
mov
xchg
imul
push
scas
jecxz
cld
insl
loop
xchg
clc
and
pusha
jecxz
sarb
addr16
ret
les
mov
mov
sub
aas
jg
mov
test
lahf
pusha
lcall
mov
fadd
jl
lret
push
inc
call
jg
lahf
pop
inc
aas
ret
loopne
bound
cmp
push
mov
add
dec
es
popa
sub
adc
inc
pusha
push
cmpsl
add
leave
xchg
and
stos
adc
dec
jge
pop
jl
data16
in
mov
sbb
add
add
sub
push
adc
jae
jle
mov
push
das
call
jno
jmp
xchg
jge
xchg
in
sbbl
out
mov
and
xchg
sub
test
sbb
pop
xor
dec
push
repnz
aam
aaa
test
out
in
jo
in
or
cltd
sub
dec
es
cli
outsb
or
mov
scas
jno
push
sub
pop
test
scas
insb
enter
inc
in
nop
xchg
inc
aaa
repz
cmpsb
xchg
push
fisubrs
push
or
sbb
mov
icebp
outsb
xchg
scas
or
adc
in
pop
fsubrl
imul
loop
dec
bsr
hlt
inc
push
lods
xchg
mov
jne
push
and
test
mov
lret
cltd
stos
adc
and
das
mov
add
shll
sub
call
cmp
push
pop
cmp
or
mov
mov
lahf
mov
mov
jns
stos
outsb
dec
jbe
aam
xchg
stc
ror
out
inc
add
xchg
and
lret
and
pop
int3
xor
mov
add
dec
add
movsb
aam
lret
pop
test
dec
dec
xchg
sub
dec
sub
mull
lock
jo
stc
fmull
adc
pop
mov
rorb
fcompl
mov
in
testb
test
outsl
stos
sub
js
xchg
ja
loop
loop
cltd
xchg
add
cmp
out
pop
in
fisttps
sub
pushl
lds
and
mov
rcrb
mov
je
int3
sub
cmc
inc
sbb
xchg
xchg
pushw
cwtl
mov
addr16
and
adc
mov
aad
jecxz
sub
enter
xchg
aaa
cmpsl
inc
mov
cmc
xchg
xor
mov
adc
imul
mov
aaa
mov
loope
mov
sbb
add
jno
fistpll
jmp
dec
jg
cmpsb
test
dec
sub
movsl
sbb
loop
mov
icebp
mov
inc
fimuls
jo
push
into
int3
stc
push
mov
fbstp
jb
xor
jp,pn
fists
push
sub
dec
cmp
and
test
mov
and
jge
imul
pop
or
pop
mov
push
xchg
xchg
icebp
test
repz
inc
mov
lock
pop
scas
mov
fwait
lret
das
cltd
dec
mov
cs
mov
push
cmp
test
xchg
cmp
fwait
pop
add
jmp
in
add
pusha
lcall
mov
jl
sbb
fidivrl
xor
jbe
out
xchg
sub
stos
xchg
in
loope
out
movsb
loopne
hlt
xchg
decb
dec
fstpt
in
cli
mov
mov
loope
push
loop
mov
jmp
stc
ret
loopne
lds
ss
cs
clc
bound
aam
testl
mov
fmuls
cmc
fcompl
dec
sub
sub
dec
adc
or
dec
mov
inc
ficomps
mov
xor
or
or
repz
adc
pop
das
xor
test
iret
in
jne
scas
pop
cmp
inc
mov
and
loope
inc
dec
push
lahf
pop
ss
sbb
push
mov
and
inc
out
xchg
sbb
pop
dec
loopne
or
imul
sbb
call
jecxz
mov
mov
test
push
gs
and
inc
mov
mov
push
leave
addr16
into
hlt
mov
sbb
sbb
aad
mov
cli
pop
sub
gs
xor
pop
gs
cltd
movsl
enter
in
mov
lods
cmp
inc
loop
lret
push
divb
xchg
rolb
mov
call
subl
push
add
ret
nop
sbb
xor
pop
mov
leave
push
pusha
fst
pop
scas
lock
xor
dec
out
push
aad
imul
add
and
mov
pusha
in
push
pushf
out
insb
adc
xlat
or
jne,pn
cmp
movl
xchg
aad
cmp
xchg
add
fimull
cmp
jmp
inc
push
push
jo
int3
xchg
xchg
arpl
and
cwtl
pop
sbb
mov
das
popf
fldl
stc
pop
cltd
cmp
add
xchg
fistl
arpl
mov
or
pop
pop
sub
ljmp
mov
push
lea
test
mov
jl
xor
out
in
shll
jmp
add
lods
sub
loop
jl
adcl
dec
inc
inc
out
or
and
leave
shrl
cmp
pop
fildll
adc
cs
cmpsl
movsb
add
call
stos
aaa
adc
sub
push
mov
lret
cmp
fcompl
push
or
inc
xchg
xchg
add
rcr
loop
lea
rcrb
lods
pop
jns
add
and
cmp
add
sarl
push
dec
push
xchg
inc
and
lods
pop
ja
jno
in
push
lret
sub
int3
int
pop
jae
sub
add
xor
paddq
mov
movsb
dec
outsb
or
movsb
pop
imul
out
and
popf
lea
frstor
daa
mov
arpl
cltd
fisttpll
scas
cmc
mov
ret
lret
or
xchg
call
push
lock
xor
xor
mov
popf
outsl
jmp
ljmp
idivl
xchg
xor
stos
or
mov
dec
pop
or
sbb
pusha
jb
das
test
jge
sti
cltd
in
and
cmp
mov
mov
cmp
lods
jmp
inc
rcrb
fwait
mov
popf
pop
test
int3
rcrl
mov
bound
sbb
mov
lret
or
std
or
push
scas
mov
sbb
inc
xor
rolb
repnz
or
add
fildl
push
int
test
push
adc
and
dec
xor
nop
mov
stos
in
adc
lea
fsubrl
mov
insb
push
imul
pop
inc
aaa
lds
mov
dec
clc
std
pusha
pop
bound
adc
jmp
ljmp
lock
mov
dec
cmpsb
inc
xchg
scas
popf
out
cwtl
jg
mov
fwait
jl
aad
test
jecxz
cltd
lea
insl
imul
loope
scas
jp
pop
pop
xor
insl
pop
xor
pop
fucomip
jg
orb
jb
sbb
daa
bound
es
test
adc
test
hlt
rcrb
and
mov
cmp
push
divl
aam
out
push
outsl
movb
dec
sbb
lahf
jle
push
lods
sbb
daa
loop
mov
cmpsb
pop
push
add
pop
test
and
iret
push
int
cmpsb
decl
dec
and
shrb
sub
jl
mov
iret
or
or
and
lods
or
daa
ja
cmp
outsb
addr16
adcb
insl
mov
add
jl
jns
je
sub
push
je
push
out
pop
sub
dec
add
sub
aas
push
imul
jl
aaa
and
sti
xor
ss
out
mov
mov
push
ljmp
cmp
dec
je
insl
push
fisubs
xchg
fs
lea
jg
mov
dec
fs
jecxz
jmp
xor
cwtl
pop
test
lods
mov
loop
xchg
vpaddb
adc
add
or
mov
and
cwtl
dec
enter
mov
mov
scas
mov
inc
xchg
das
mov
test
push
pop
and
dec
stc
add
xlat
or
inc
push
shll
xchg
filds
mov
icebp
jne
and
loop
xor
insl
inc
jecxz
repz
mov
ret
cmp
mov
es
jecxz
mov
decl
lds
hlt
pop
or
orb
sbb
sub
int3
mov
xchg
out
ror
shlb
adc
outsl
fisubrs
sub
sbb
mov
sbb
or
pop
mov
popa
sub
ret
jo
inc
mov
cltd
ljmp
lods
imull
jmp
push
push
out
ds
push
in
mov
xchg
dec
sbb
insl
jne
mov
jno
daa
decl
loop
bound
call
adc
test
aas
and
pop
jae
fwait
mov
add
adc
add
fmuls
and
xchg
dec
in
shrb
scas
add
mov
dec
notl
inc
scas
loope
lea
mov
jecxz
xchg
leave
pop
ret
xor
fwait
jb
jno
mov
dec
pop
pop
sbb
xor
test
popf
mov
sti
sub
jnp
xchg
ret
fcmovnbe
lahf
orb
push
cmovnp
into
or
cmpsb
addr16
inc
dec
test
xchg
xor
addr16
dec
pop
pop
ficompl
xchg
andl
xor
addb
pop
add
xor
push
cmp
or
ret
les
cvttps2pi
or
movsl
faddl
or
pop
pop
cmp
or
mov
mov
movsb
movsl
call
mov
pusha
xchg
test
push
filds
loop
push
sbb
loop
or
add
aad
lret
lret
pop
jo
or
jae
imul
pop
mov
inc
mov
pop
cs
pop
shrl
jl
adc
stos
xchg
sar
jmp
xchg
xor
cmc
sbb
ds
lods
aas
rorl
push
mov
mov
fildll
out
repz
fidivrl
sar
movsl
shr
cld
mov
inc
adc
pop
push
inc
js
fcomps
lock
sbb
les
inc
hlt
dec
mov
jne
fidivrs
dec
push
rclb
add
xchg
mov
ds
mov
inc
adc
andl
pop
xchg
scas
sub
iret
inc
sti
fdivs
or
mov
filds
jp
mov
mov
xor
push
jb
mov
sbb
cmp
scas
scas
out
jmp
call
insb
pop
icebp
roll
pop
xchg
testb
repz
mov
stos
sbb
cltd
ja
ds
dec
ljmp
push
inc
cmp
add
and
mov
inc
inc
in
cli
leave
shr
xchg
das
movsb
mov
jne
jne
sbb
push
mov
xor
cmpsl
into
and
or
ret
pusha
dec
mov
inc
int
adc
nop
mov
jno
cmc
rorb
sub
int
add
test
shll
jle
xor
andb
test
sub
xor
and
addr16
mov
stos
in
roll
and
pop
sbb
push
add
sub
push
pop
push
sbbl
jb
aam
sbb
daa
push
dec
ds
pop
push
mov
sbb
sbb
sub
xorb
jp
std
add
push
lods
lret
jg
fcomps
mov
xor
sbb
lcall
add
jge
push
test
and
dec
sub
pop
mov
fstpl
inc
ja
loope
pop
fs
cmc
lret
cmc
lea
nop
push
sbb
adc
xchg
cmp
jns
mov
std
pop
hlt
sahf
pop
lret
mov
or
shlb
faddl
fiadds
pop
or
adc
int
pushw
cwtl
sbb
sub
push
adc
mov
pop
jmp
dec
dec
icebp
or
xchg
aad
out
fcoms
cmp
aad
scas
sub
loopne
mov
push
mov
inc
xor
dec
jno
push
int
pop
adc
dec
xchg
sbb
jle
hlt
xchg
mov
mov
int3
cli
scas
push
dec
add
aam
ficoms
mov
mov
aaa
divl
pusha
pop
imulb
aas
push
jle
mov
mov
cs
push
or
mov
sub
arpl
add
or
adc
mov
mov
in
test
xchg
scas
adc
mov
int3
and
aad
int3
sub
std
jne
dec
pop
and
push
outsb
bound
imul
daa
sub
or
push
sub
sti
das
je
repnz
outsl
enter
cmp
sbb
xchg
outsl
ror
adc
mov
iret
jo
std
mov
into
add
cmpsb
xor
sub
clc
jae
mov
mov
pop
loop
push
fisttpll
mov
popa
ss
imul
scas
jo
outsl
mov
shll
repnz
mov
cli
inc
loopne
dec
mov
lret
pop
sub
mov
and
sbb
xlat
fcom
cwtl
imul
test
imul
inc
or
xor
xchg
insl
cmp
mov
shll
ficoml
mov
sub
mov
int3
es
lret
xor
dec
push
dec
adc
mov
imul
imul
pop
cmp
popa
test
lods
or
fistl
lret
add
add
sti
fwait
xlat
dec
lock
stos
pop
xchg
ret
fs
int
pusha
sbb
int
push
adc
adc
popf
xchg
inc
aas
imul
and
xchg
or
stc
xchg
scas
dec
cmp
jg
mov
fmuls
and
fsubl
mov
mov
mov
int
imul
push
pop
adc
lcall
in
ss
ret
pop
test
lahf
pop
dec
leave
inc
stc
mov
jnp
xor
movsb
icebp
int
xchg
movsb
fidivrl
mov
sub
cmpsl
fxch
sahf
sar
cmp
test
imul
in
stos
jae
ret
dec
or
cmpsb
push
loopne
je
jb
cmpsb
push
xchg
movsl
sbb
add
dec
mov
cmc
mov
fwait
jbe
push
and
lret
sub
mov
cmc
insb
loopne
pushl
rcl
mov
movsb
and
fiadds
ljmp
and
ret
xorl
inc
push
sbb
into
adc
or
scas
lcall
and
mov
push
cld
pop
mov
decb
add
aaa
xor
cltd
fisubrl
int
jbe
xchg
xchg
xorl
or
mov
scas
sbb
inc
aaa
jno
into
and
cmpsl
dec
and
mov
pop
jg
popa
lea
es
lods
ret
loop
in
adcb
lock
sbb
dec
imul
outsb
mov
idivb
mulb
imul
pop
adc
push
aaa
out
xchg
jecxz
push
into
mov
les
push
mov
lock
mov
test
push
mov
and
jecxz
xchg
in
mov
arpl
mov
lods
push
push
es
inc
ret
xchg
sub
cld
repnz
dec
adc
jge
out
xor
out
dec
pop
cld
cmc
adc
pop
and
adc
lret
clc
std
test
out
xchg
xor
xor
into
insl
jle
pushf
test
push
fs
outsb
sub
mov
pushf
stos
out
sub
push
fiaddl
sub
in
roll
es
add
imul
push
daa
jns
inc
or
adc
jbe
xchg
mov
je
pop
jbe
jg
push
jae
inc
pop
adc
fwait
push
xor
cmp
iret
adc
out
out
jnp
stc
adc
icebp
movb
out
outsl
test
cmp
in
loop
jb
test
add
fsts
pop
mov
cmp
bound
out
dec
sbbb
inc
jne
push
xlat
aad
sahf
dec
scas
in
push
xchg
xchg
mov
cli
inc
pop
and
fwait
sbb
mov
jmp
iret
lahf
jo
jmp
sbb
inc
idivb
push
push
dec
inc
inc
in
jno
insb
iret
sub
dec
pop
popf
loope
idivl
pusha
xorl
enter
les
sbb
scas
int
inc
push
popa
inc
pop
repnz
sub
cltd
mov
lcall
push
out
roll
push
pop
pop
cmc
sub
cmp
sahf
mov
inc
add
cmp
scas
mov
pop
mov
mov
lcall
cmc
mov
adc
jbe
stos
jl
or
ficompl
and
fsts
sahf
mov
movsb
out
fnstsw
mov
mov
sub
movsl
pushf
pushl
les
mov
push
inc
jg
imulb
mov
leave
xor
aaa
movsl
cld
ret
mov
cs
pop
js
call
sub
test
ret
sbb
enter
frstor
aad
fs
sbb
mov
ret
cmc
cmp
jbe
mov
fildll
sti
fmull
sub
add
test
lcall
and
out
rcll
dec
fcom
int3
push
sbb
pop
jp
or
push
stc
mull
out
jle
repnz
dec
ja
and
inc
or
cmpsb
jno
jae
stos
outsl
ss
flds
xchg
add
std
stc
sub
repnz
flds
out
or
jb
fs
cmpsl
add
pusha
sbb
pop
data16
sar
iret
push
and
xchg
fcoml
sbb
sbb
inc
fstpl
iret
mov
imul
fnstenv
repz
stos
jmp
cld
aam
add
fbld
f2xm1
out
adc
mov
inc
enter
popa
pop
adcl
xor
pop
leave
inc
fstpt
rcrl
std
or
rclb
in
push
mov
dec
inc
cs
mov
mov
leave
mov
dec
shll
je
imul
and
lahf
pop
loop
in
pop
test
push
test
xchg
out
pop
dec
xlat
dec
insl
ret
inc
mov
cmp
sub
push
xchg
jmp
sub
ss
dec
adc
cmp
lret
mov
xchg
xchg
inc
add
sbb
mov
in
ja
bound
dec
jo
dec
xchg
outsb
push
jb
stc
sub
mov
jo
jp
xor
loope
hlt
push
mov
adc
mov
mov
push
aam
pop
mov
push
lods
idivl
fs
mov
js
or
pop
mov
iret
pop
add
ds
add
mov
or
push
aad
repz
mov
aam
sti
jnp
push
aad
sub
cmp
adc
jg
sbb
xor
mov
push
push
popf
lahf
call
scas
or
sbbb
inc
xlat
mov
pushf
leave
mov
popf
jg
xchg
fs
jnp
jecxz
add
pop
dec
mov
addr16
dec
sbb
mov
adc
stos
xor
ret
out
add
xor
mov
sbbl
pushf
jns
add
enter
dec
mov
xor
iret
and
mov
aam
jle
popa
fcmovu
je
pushf
bnd
dec
push
sbb
aas
sar
dec
adc
jg
and
insl
stos
dec
outsl
movsb
repnz
ret
mov
inc
xor
and
xchg
mov
cmp
push
jl
jne
xor
mov
or
sub
movsl
lea
xchg
add
imul
jmp
add
inc
gs
push
sub
sbb
inc
cld
push
xlat
in
mov
in
mov
push
xchg
ud1
std
aas
lahf
leave
cmp
lea
xchg
stos
xchg
lcall
clc
cmp
test
ss
xchg
popa
cmpsb
and
mov
lret
mov
cmp
push
leave
arpl
dec
mov
mov
arpl
imul
jle
xchg
popa
add
adcb
ss
iret
pop
mov
or
movsl
add
xchg
test
sti
sub
push
inc
test
xchg
addr16
call
dec
test
sti
out
nop
ret
jo
shrl
xchg
fcoml
incb
in
sbb
xchg
outsb
xchg
gs
dec
push
sbb
xchg
clc
sti
mov
xchg
dec
dec
ds
pop
mov
xor
push
scas
or
adc
adc
es
xchg
mov
hlt
jns
test
xchg
dec
lods
xchg
adc
mov
mov
fidivl
sbb
dec
add
xor
mov
repz
sbb
fiaddl
push
xchg
cltd
inc
jmp
aaa
das
pop
stos
sbb
mov
push
outsl
cmpsl
enter
push
xor
sbb
rcrb
mov
adc
fdivr
sarb
add
add
add
xor
popf
xor
inc
dec
mov
mov
lds
jbe
sti
loop
jae
or
mov
test
push
fimuls
loopne
scas
push
les
sbb
sahf
jecxz
popf
cld
xchg
dec
mov
xchg
cmpsb
jns
fs
mov
iret
sarb
fs
cmpsb
scas
movsb
sub
dec
xor
test
or
cli
pusha
xchg
outsb
dec
xor
rorl
nop
xor
fdivrl
push
loop
test
cld
mov
and
adcb
mov
mov
mov
mov
xchg
jns
shll
xchg
aaa
jnp
ud2
lods
sub
scas
cmpsl
rcrb
pop
inc
or
cmp
mov
ret
jl
dec
addl
and
mov
or
cmc
add
iret
cmp
test
ret
movsl
mov
jnp
lcall
in
jp
outsl
mov
add
imul
lahf
mov
lret
mov
jnp
pop
adc
sub
dec
gs
andl
movsl
adc
fiadds
jno
add
pop
and
jg
mov
xor
data16
mov
lods
shlb
dec
je
cmp
mov
push
jmp
lahf
fwait
movl
xor
sahf
jecxz
dec
mov
fnstsw
pop
sub
mov
stc
or
adcl
dec
sbbb
sarb
adc
in
cld
leave
or
jae
lret
push
loopne
jle
xor
aas
sbb
pop
cwtl
jle
push
outsb
mov
jo
mov
jo
lahf
inc
ja
shr
insb
outsb
out
adc
out
sub
sub
mov
insl
scas
pushf
mov
mov
ret
adc
push
sti
gs
pop
test
cmp
mov
sub
or
mov
popl
inc
jp
xchg
fimuls
add
xchg
call
jbe
in
cmc
sub
cmp
pop
mov
ds
cltd
testl
mov
mov
cmp
loope
loope
or
popl
push
pop
sbb
xor
mov
push
jno
out
and
shl
push
sahf
adc
push
gs
je
mov
scas
sub
mov
movsb
insb
cltd
mov
and
test
call
mov
clc
inc
decb
and
inc
nop
mov
repz
mov
stos
out
mov
shl
push
aad
orl
adcb
loop
das
rcrb
pop
or
add
popf
icebp
cmp
clc
fistpl
dec
stos
sti
cmpl
leave
mov
xlat
mov
fwait
jns
mov
imul
enter
sub
iret
inc
mov
clc
mov
xchg
pop
pop
ret
sbb
dec
movsb
pop
add
enter
aam
mov
nop
mov
cld
sbb
subb
clc
dec
fcoml
loopne
lds
or
push
xchg
push
loope
scas
push
cmpsl
mov
cmpsl
dec
int3
or
neg
int
and
loopne
push
push
fcmove
mov
lret
push
out
dec
repnz
je
mov
or
add
repz
mov
and
and
daa
fistl
in
repz
or
cmp
xor
mov
push
out
loopne
pushf
mov
fistl
mov
data16
inc
leave
lcall
and
out
cwtl
xchg
dec
stc
mov
inc
daa
icebp
xlat
lds
mov
mov
mov
rcl
push
cmpsl
rcr
lods
out
je
aas
ss
lods
push
or
fwait
test
or
add
lods
dec
inc
jnp
mov
lds
cmp
aam
repnz
in
adc
inc
cmpb
mov
pop
jmp
dec
cmp
pusha
das
int
add
sub
adc
arpl
mov
ljmp
jecxz
ljmp
test
or
fisttpl
fcoms
shr
sbb
jne
cmp
pop
mov
in
popf
imul
push
and
mov
mov
lcall
mov
in
sbb
loop
out
mov
sub
cwtl
xlat
pop
pop
idiv
insl
mov
neg
cmc
sahf
fstpt
or
xor
sbb
ror
lea
sbb
lea
gs
inc
xchg
pop
jnp
scas
repnz
out
aam
dec
adc
arpl
scas
subb
negl
int
into
scas
movsb
movsl
pop
lret
pushf
stc
clc
ficoms
sub
mov
popf
mov
push
jae
popa
fs
icebp
sbbl
insl
stos
insb
dec
sub
sub
sub
cmp
ljmp
cmc
xchg
outsl
sub
lcall
jns
lret
sub
mov
cmp
push
mov
js
pop
test
in
inc
dec
mov
fdivrs
je
jb
rcl
in
inc
arpl
unpckhps
jae
or
jnp
out
inc
add
xchg
lcall
pop
inc
jns
call
call
pop
mov
out
int3
bnd
icebp
push
mov
sbb
pushf
rorb
xor
pop
aaa
lds
xchg
cmp
js
cmpsl
cwtl
cmpsl
in
fldl
add
ds
jns
xor
pushf
sub
das
lods
mov
bound
test
push
mov
ss
lods
sub
push
out
fincstp
add
dec
sbb
into
out
dec
cltd
test
aaa
fdivl
push
aam
fmulp
out
lock
cmp
xchg
jbe
fs
arpl
mov
outsb
out
cmpsl
test
adc
sbb
dec
push
jmp
inc
inc
addr16
test
pop
popa
adc
xchg
xchg
ret
ss
and
aaa
ljmp
loopne
inc
cmp
lods
dec
jecxz
rorb
jmp
jp
aas
adc
inc
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
arpl
lock
pusha
call
pop
sub
xor
inc
xor
inc
cmp
jne
mov
jmp
jmp
mov
cmp
jne
xor
add
cmp
je
mov
xor
inc
inc
jmp
mov
mov
mov
add
xorb
cmp
je
cmpl
jne
mov
add
xor
push
xor
mov
cmp
je
mov
add
mov
cmp
jne
add
push
mov
cmp
jne
sub
push
mov
mov
call
mov
pop
mov
add
call
pop
dec
jmp
pop
add
dec
jmp
mov
mov
popa
jmp
push
push
dec
not
and
mov
pop
pop
ret
pusha
xor
inc
nop
dec
xor
mov
mov
pusha
call
popa
add
sub
loop
popa
ret
push
mov
mov
push
pop
inc
mov
dec
shl
mov
dec
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
sub
dec
jne
pop
mov
mov
ret
loopne
inc
add
add
add
add
add
inc
add
add
add
add
add
mov
inc
pop
mov
fsubs
ret
dec
pop
pop
push
pushf
pop
test
jne
pop
mov
nop
add
jmp
cmpsb
push
pushf
pop
test
jne
pop
nop
jmp
jno
mov
xchg
nop
cld
nop
call
nop
nop
sub
cld
cld
cld
pop
xchg
nop
cld
jmp
xor
pop
test
jne
pop
mov
xchg
add
nop
xchg
sub
xchg
push
pushf
pop
test
jne
pop
nop
cld
nop
sub
or
jmp
cmp
add
les
jne
pop
cld
lea
xor
sub
push
pushf
pop
test
jne
pop
xor
nop
nop
nop
cld
mov
add
nop
nop
jmp
mov
add
push
pushf
pop
test
jne
pop
jmp
arpl
cld
nop
cld
mov
jmp
sbb
sub
jmp
xor
ret
add
jmp
inc
nop
sub
add
cld
cld
rol
nop
push
pushf
pop
test
jne
pop
push
pushf
pop
test
jne
pop
nop
cld
cld
cld
mov
mov
cld
mov
jmp
jae
testb
cld
nop
dec
jmp
dec
xchg
nop
cld
cld
cld
cld
inc
cld
nop
nop
cld
test
jne
xor
cmp
xchg
add
push
pop
dec
addl
pop
pminub
les
push
pop
or
and
pop
mov
cmpl
movsb
nop
les
or
cmc
add
xor
add
mov
inc
popf
add
fldl
aaa
adc
cltd
loope
jno
into
mov
add
and
pushl
pop
push
or
and
or
add
sub
in
shll
scas
aad
jmp
popa
xor
push
pushf
pop
test
jne
pop
or
mov
nop
push
pushf
pop
test
jne
pop
jmp
pop
sub
sub
jmp
int3
jmp
gs
xor
push
pushf
pop
test
jne
pop
cld
xchg
sub
push
pushf
pop
test
jne
pop
cld
or
xor
nop
push
pushf
pop
test
jne
pop
push
pushf
pop
test
jne
pop
jmp
xor
add
or
push
pushf
pop
test
jne
pop
sub
nop
nop
push
pushf
pop
test
jne
pop
push
pushf
pop
test
jne
pop
xor
xor
jmp
add
mov
xor
jmp
rorl
cld
push
pushf
pop
test
jne
pop
xchg
sub
push
pushf
pop
test
jne
pop
add
xchg
jmp
pop
xchg
jmp
jbe
cld
nop
