test
add
inc
outsl
outsl
insb
gs
outsb
add
or
in
incl
gs
jb
gs
push
jns
je
insl
add
xor
or
jae
mov
push
push
das
add
notb
pop
dec
outsb
test
jb
xor
in
das
fwait
cmp
addb
inc
jns
mov
add
outsl
jb
mov
pop
push
outsl
imul
add
inc
popa
jb
pop
add
jb
jmp
add
dec
popa
je
jbe
cli
repz
enter
add
push
cmp
mov
cld
add
add
je
je
scas
sub
sub
or
fistpll
lea
inc
adc
jae
jg
mov
or
dec
jne
ja
adc
mov
inc
insb
popa
jae
push
or
push
inc
push
push
dec
insb
sarl
push
add
inc
adc
inc
or
xor
and
mov
sbb
push
xor
enter
add
dec
outsb
mov
lcall
pop
inc
jno
imul
add
gs
out
std
addr16
pop
add
sbb
lods
push
jg
pusha
or
rolb
mov
add
jb
nop
jg
mulb
gs
adc
add
andps
jb
cwtl
sbb
add
arpl
popa
bound
pop
rcrl
dec
data16
clc
or
dec
insl
jo
inc
mov
add
add
adc
les
data16
clc
out
inc
aam
or
outsl
jne
das
jge
xchg
outsb
add
pop
imul
pop
pushf
fadds
add
push
iret
mov
lods
pop
or
js
nop
sahf
int
cmp
cwtl
mov
fdivr
lret
neg
rcll
and
inc
add
decl
lock
xchg
fldt
add
subl
mov
clts
pop
inc
imul
xchg
xchg
xchg
roll
push
dec
in
in
int3
inc
or
inc
cmp
xacquire
cmc
or
push
imul
cmc
idivb
imul
clc
or
test
cli
stos
sti
jecxz
push
stc
cmpsl
cld
or
dec
add
dec
push
jns
aad
scas
dec
xor
push
arpl
xor
inc
jb
cmp
or
mov
dec
push
gs
sub
inc
add
enter
inc
ds
or
inc
jnp
cltd
out
mov
outsb
arpl
or
push
sbb
xchg
add
cmovae
std
dec
mov
sub
movsb
or
push
jns
jb
mov
xor
out
sub
jns
popa
insl
inc
and
shll
cmp
push
or
outsb
fs
add
xor
je
sub
push
popa
pop
adc
and
outsl
inc
fs
lods
push
lock
jo
xor
and
jp
lret
sub
adc
pop
outsl
insl
jae
pusha
cmp
jle
inc
add
stc
ljmp
or
outsl
fs
fs
xchg
cmp
xor
stc
jne
arpl
push
inc
jbe
call
lds
gs
mov
outsb
jno
leave
les
push
loopne
xchg
stc
ja
inc
fstpt
xor
xor
inc
imul
fwait
out
adcb
jae
in
add
add
or
insl
int3
aam
push
pop
cltd
out
add
je
ds
movsl
ds
xchg
sub
jp
andl
jecxz
mov
or
outsb
or
or
jnp
notb
outsl
jo
int
push
fisttps
jo
lahf
add
add
insb
jo
adc
xchg
or
dec
mov
push
mov
push
or
and
adc
gs
push
popa
gs
icebp
jge
add
push
jo
imul
push
jo
aaa
or
cmp
mov
lret
orl
or
pop
bound
inc
data16
sar
insb
les
arpl
pop
popa
xchg
adc
outsw
jb
inc
or
or
jo
je
push
sbb
sarl
sbb
push
inc
popa
jne
scas
outsb
fs
jl
movsb
pusha
jge
fmull
dec
gs
add
sbb
push
loopne
sub
out
test
or
sbb
rep
jns
push
loope
and
lds
and
ficoms
dec
int3
adc
push
imul
in
or
add
cld
lret
or
std
mov
or
adc
push
inc
data16
rcrb
adc
sahf
imul
push
repnz
pop
mov
cmp
adc
pop
xor
or
push
or
add
orl
push
or
mov
test
scas
daa
sub
jae
mov
outsl
fs
int3
rolb
das
lea
daa
sub
cmp
add
js
jmp
jns
or
out
or
das
or
popa
je
pop
cltd
nop
popa
adc
push
cmp
or
adc
das
push
fcompl
xchg
mov
push
cld
jbe
fs
or
out
adc
push
sub
arpl
xor
mov
xchg
loopne
ja
push
fucomip
add
add
jb
call
xchg
in
in
lods
lods
xor
or
mov
std
or
sbb
rorb
fs
icebp
inc
insb
and
push
mov
stc
sub
imul
aaa
dec
jne
bound
pop
add
cli
hlt
stos
cmp
into
aaa
add
adc
jb
push
adcb
cmp
sbb
jbe
jmp
shrb
in
fs
pop
pop
in
in
push
push
dec
dec
in
in
in
inc
cmp
in
in
fdivs
sub
in
in
and
sbb
in
in
adc
or
in
in
or
pop
add
bswap
rclb
hlt
mov
mov
lock
push
cmpl
lock
and
push
push
setl
inc
out
mov
jmp
add
mov
and
ret
inc
inc
pop
ret
lea
ja
outsb
mov
call
in
add
cmp
mov
and
mov
fcomps
arpl
jb
push
fs
jbe
and
xor
xor
sub
push
call
lret
mov
arpl
inc
inc
mov
inc
jo
in
and
mov
jns
popa
imul
stos
and
arpl
fs
pop
jae
dec
and
in
xor
arpl
daa
ja
or
jle
popa
xor
leave
cmp
outsl
jnp
and
test
and
add
pop
mov
outsb
add
sbb
arpl
sbb
add
mov
sbb
lock
mov
mov
mov
lods
jge
fadds
dec
add
inc
or
and
dec
shll
adc
shll
adc
scas
xor
sbb
fildll
fildll
add
int
mov
sbb
cs
jp
add
sub
cmpsb
imul
sub
dec
dec
in
pusha
dec
nop
inc
dec
sub
cs
xor
push
lahf
push
mov
dec
rcrl
cmp
dec
shll
inc
call
into
sub
add
add
neg
jns
std
insl
mov
jl,pn
push
cmp
add
js
and
mov
int3
insb
sub
out
push
mov
dec
or
mov
add
nop
call
cmp
mov
fistps
mov
add
cli
in
lret
add
mov
std
call
rol
and
pop
mov
and
inc
filds
sub
or
mov
sbb
and
add
xchg
mov
dec
mov
mov
add
jge
rol
lods
shl
or
sbb
jle
mov
cmp
outsl
mov
lcall
inc
cld
add
orl
adc
dec
add
sbb
push
add
cmp
dec
pop
mov
jle
and
sub
dec
mov
ja
lock
mov
pusha
push
mov
inc
mov
push
push
adc
push
and
addb
lcall
push
inc
mov
in
add
lods
mov
loop
mov
sarb
sti
idivl
dec
mov
mov
pop
lret
push
rolb
xor
and
data16
nop
cmpb
jmp
clc
stc
fdivrs
out
nop
mov
add
aaa
pop
or
rolb
cli
xchg
clc
pop
jle
push
push
mov
lea
movb
pop
rorb
fiadds
push
xchg
pop
lock
movb
outsl
or
pushf
fucomi
div
adc
mov
in
sbb
sbb
lds
jne
add
ret
pop
pop
pop
pop
fsubrp
clc
std
mov
mov
sub
jae
jle
adc
mov
push
and
or
test
jne
in
mul
cmpsl
inc
push
jns
add
jmp
or
cmp
cmp
in
and
push
push
lea
inc
and
jg
in
jne
push
push
mov
cmp
jbe
sub
add
jmp
push
rorb
test
jne
lods
fimull
mov
dec
mov
add
nop
fsubr
std
add
loopne
repnz
sub
pusha
cmp
and
mov
cwtl
fidivrs
loope
mov
mov
mov
bound
add
cmp
jbe
ljmp
jo
sbb
adc
xchg
xor
push
mov
repnz
or
cmp
jne
andl
mov
stos
inc
push
cmp
jae
mov
push
in
fistps
loop
fidivrl
ret
jae
fdiv
sbb
mov
sbb
aaa
sub
dec
mov
xor
add
push
pusha
dec
mov
or
lds
insb
push
std
sub
add
jbe
int3
outsb
imul
mov
iret
xchg
outsl
clc
push
inc
jae
or
lock
jmp
repz
addb
das
dec
and
std
mov
cmp
into
xorl
ret
lea
push
add
pusha
bound
dec
les
stos
pop
aad
leave
je
sbb
into
sbb
shlb
pop
lock
nop
inc
adc
mov
and
fs
sub
ret
sub
and
ljmp
xor
dec
sbb
mov
add
sarl
adc
jbe
mov
imul
ja
dec
aas
dec
hlt
pop
or
or
fldl
jbe
mov
or
mov
xchg
xorl
xchg
popa
jns
aas
je
shrl
jae
lods
cmp
cmp
in
stos
popa
inc
and
xchg
roll
movsbl
ret
lock
inc
xor
mov
add
or
mov
leave
cld
mov
cmp
loopne
cmp
add
push
push
push
sub
sbb
cmp
xlat
jne
mov
test
setnp
js
mov
mov
add
int
add
dec
jnp
sub
lea
pusha
xchg
mov
andb
iret
jb
mov
pop
es
lea
iret
enter
iret
sub
sub
cmp
and
rcrl
ds
push
mov
rclb
div
mov
mov
fs
cld
testl
outsl
cmp
adc
inc
adc
jae
lea
imul
sub
mov
addr16
inc
leave
lock
mov
fidivrs
jl
or
faddl
mov
clc
sbb
xchg
shl
loopne
or
lock
loopne
push
je
push
sarl
or
jmp
mov
cmpb
add
dec
or
mov
shl
xor
sbb
push
fadds
adc
fdivs
cmc
lock
loopne
mov
jmp
mov
dec
adc
pop
or
adc
dec
jae
inc
cmp
cmp
adc
push
sub
pop
xorb
sbb
jb
xchg
or
testl
fisttps
jns
mov
nop
and
mov
test
shl
pop
stos
add
mov
jne
subl
testb
je
pop
rorb
mov
inc
fadds
data16
mov
sarb
push
xor
test
adc
aad
push
aad
xchg
sub
sub
or
cwtl
and
push
cld
iret
jmp
push
xor
xchg
scas
ljmp
jp
pop
leave
outsl
xor
sub
aaa
inc
adc
add
and
add
pop
cld
and
fmull
scas
testl
sub
xor
testb
jne
aaa
or
in
je
lea
inc
pop
xor
roll
xlat
mov
lock
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
sub
ret
in
mov
lahf
mov
popa
flds
add
pop
fmull
inc
cld
cs
xchg
lret
insb
push
add
loop
shr
dec
roll
shrl
in
or
fistps
enter
sub
jb
jns
push
push
sbb
jb
mov
cld
mov
mov
mov
jg
or
mov
lea
mov
adc
and
sub
enter
hlt
sub
jbe
clc
iret
mov
call
xchg
dec
test
clc
xor
cmp
jp
lret
mov
add
jecxz
cmp
push
pop
loope
stos
xchg
cvttps2pi
cmp
jb
sbb
ljmp
aad
fadd
add
mov
lea
in
lds
add
sub
cmp
loop
das
push
jge
in
mov
les
push
cmp
pusha
pushl
jmp
or
push
mov
jne
cmpl
mov
data16
pop
data16
mov
roll
jnp
loop
xlat
sub
clc
addl
sahf
sub
or
subl
cmp
stc
call
imul
add
jo
les
add
ljmp
adc
pop
xor
out
xor
push
dec
push
sarl
xlat
xlat
je
iret
ja
cmp
rorl
pop
mov
call
sub
cld
xor
sub
adc
fiaddl
out
add
xor
andl
push
add
popa
addl
push
jle
push
lea
mov
jl
mov
push
pop
jo
push
cmpb
fisttpll
sbb
insl
pop
rcl
dec
iret
push
lock
pcmpgtw
roll
imul
pop
push
jecxz
dec
shll
aad
jp
push
jecxz
lea
or
lcall
cltd
jae
neg
fldz
fstl
add
js
or
rcr
das
ss
outsb
mov
mov
hlt
mov
in
roll
mov
mov
adc
test
jne
xor
fistps
jg
dec
xlat
je
rcrl
shlb
pop
jge
popa
dec
mov
and
rclb
mov
cmp
je
mov
jg
in
dec
test
into
ret
and
sbb
mov
jae
fisttps
pop
adc
sbb
jmp
sbb
or
inc
add
fmuls
mov
pop
std
divb
in
mov
test
testb
xor
inc
fwait
ljmp
rolb
sub
inc
mov
add
mov
fs
mov
test
jne
mov
xor
lock
jnp
insb
push
xchg
in
gs
jl
icebp
mov
mov
test
iret
lret
mov
repnz
rcrb
sarb
adc
and
xchg
rorb
jg
ret
dec
cwtl
push
rcrl
xor
adc
dec
test
out
jbe
dec
jne
mov
std
outsl
or
shll
mov
add
jo
addr16
std
outsl
jae
xor
leave
mov
push
adc
jecxz,pt
in
mov
js
add
push
adc
adc
testb
je
adc
add
jmp
mov
pop
lock
mov
sub
cli
jecxz
push
shlb
add
gs
mov
test
jo
push
push
and
sarb
sbb
mov
daa
test
daa
dec
movb
lea
jmp
push
and
cltd
push
pop
push
pushf
in
cmpsb
js
hlt
sbb
mov
push
sbb
imul
pop
mov
dec
jg
enter
cld
stc
push
mov
cli
and
je
std
add
add
rcrl
setne
cmp
and
cmpl
icebp
ficoms
jns
and
inc
jb
xor
cmpsb
or
outsb
pop
mov
mov
push
fwait
mov
jl
sub
pop
fldt
cmp
jne
add
push
mov
and
xor
or
jne
mov
sbb
fdivrs
sbb
add
add
sub
js
shl
and
mov
decl
clc
scas
into
loopne
in
and
loopne
add
jne
xchg
pushw
and
inc
push
inc
or
cmp
in
jg
xchg
xchg
repnz
and
clc
test
pop
clc
notb
xchg
add
jnp
sar
push
lods
inc
hlt
adc
inc
add
jmp
jle
jge
ret
add
jae
inc
mov
pop
mov
imul
cmp
mov
gs
jae
dec
aas
rorb
or
fwait
test
adc
cmpb
stos
pop
imul
cmpb
jae
add
dec
sub
out
fdivs
cmp
test
sbb
notb
jb
jb
call
push
or
adcw
in
cltd
filds
xchg
das
mov
in
pop
add
cmp
je
orl
inc
addl
jg
mov
mov
adc
inc
fiadds
test
das
fmull
xchg
scas
lock
jbe
mov
mov
push
dec
jne
data16
mull
push
pop
jae
mov
xchg
and
das
and
faddl
inc
add
sub
movb
rorl
mov
pop
cmp
add
call
jne
cmpb
push
add
or
and
cmp
aaa
and
add
mov
cmpsb
inc
jbe
inc
sub
mulb
xor
mov
xchg
outsb
ret
jecxz
jne
mov
mov
clc
jb
ss
push
xor
mov
out
xchg
enter
scas
mov
clc
test
pop
xchg
sti
push
je
dec
dec
pop
mov
jl
cmpb
notl
call
pusha
sti
lea
sarb
test
ret
cmp
lock
aaa
add
loopne
bound
dec
out
in
loope
jb
mov
shlb
mov
add
sub
inc
lock
lret
fmuls
xchg
int
pop
stos
cmpl
xchg
add
jb
and
inc
inc
ljmp
imul
push
movb
inc
push
or
jo
and
mov
cmp
ds
and
dec
mov
adc
imul
jb
add
add
je
dec
je
jmp
in
nop
add
mov
jmp
aaa
push
push
sbbl
sub
inc
push
stc
loopne
inc
cld
and
js
clc
mov
mov
cmp
mov
call
sbbb
xchg
jge
orb
jne
sbb
or
xchg
sbb
add
sub
xchg
jbe
pop
sbb
jo
sbbl
jg
je
xchg
push
movsb
inc
pop
packssdw
aaa
je
mov
inc
inc
xor
mov
mov
je
xchg
push
xlat
add
nop
out
filds
aaa
add
jne
lret
pop
pop
shr
les
adc
sbb
push
mov
pmuludq
les
push
mov
idivb
add
sbb
add
cmp
jbe
mov
repnz
adc
cmc
lcall
aaa
jne
mov
mov
xor
rolb
adc
lock
std
shr
sub
movl
pop
loop
add
mov
ljmp
arpl
add
cmp
call
in
lcall
mov
and
out
mov
shl
mov
shl
add
insl
imul
push
xor
loope
or
mov
rcrl
test
mov
mov
or
sar
or
lret
imul
loop
push
lcall
mov
call
dec
shlb
pop
sub
lret
xchg
adc
mov
mov
mov
ret
out
jne
adc
inc
dec
pop
adc
xchg
js
mov
jae
fbstp
mov
jmp
mov
xchg
push
daa
je
sub
ljmp
fldl
or
movl
rorb
dec
and
stos
mov
mov
or
or
dec
push
add
add
cmp
jle
idivl
repz
adc
mov
mov
pop
in
push
loopne
sbb
mov
cld
les
cmp
push
clc
clc
sub
daa
dec
je
lahf
std
push
test
pop
sbb
sub
pop
hlt
clc
bound
pushl
repz
mov
fbld
add
rclb
aaa
inc
mov
add
or
fadds
std
shlb
mov
inc
dec
pop
or
mov
jb
jmp
bound
cmpsl
lret
lcall
cld
jbe
nop/reserved
xorl
je
sbb
mov
and
sbb
push
js
scas
ret
lock
ret
cmpsb
adc
rcrl
gs
mov
jl
aad
and
es
jns
sti
fcmovne
or
mov
jge
test
jne
outsl
cwtl
cmp
lahf
push
jmp
cmp
ja
movzbl
add
fs
adc
inc
sub
jg
push
mov
adc
add
or
mov
jl
push
push
push
movsl
add
pop
pop
jne
lahf
mov
outsb
outsl
pop
jae
imul
decl
fadd
mov
shlb
stc
and
mov
push
xchg
jmp
and
xor
sbb
adc
add
addr16
cmp
add
movsl
push
cs
out
sahf
sub
inc
inc
push
pop
mov
push
je
dec
or
adc
flds
jbe
or
jl
pushf
shll
jle
or
shrl
lret
adc
jbe
adc
mov
rcll
roll
pop
inc
cmc
pop
push
fildl
pushl
or
clc
fst
or
data16
adc
cltd
mov
jne
add
add
pop
cmp
insb
xor
sbb
add
ret
mov
xlat
orb
sbb
pop
dec
cwtl
dec
add
xorl
xlat
dec
dec
data16
add
shr
pop
sub
fcompl
out
jmp
mov
or
lods
int
or
and
es
mov
or
push
sbb
je,pn
mov
jb
fdivs
insb
xlat
or
mov
adc
jne
dec
cltd
mov
test
adc
out
add
lahf
data16
xchg
mov
rol
movl
jl
movsb
cld
dec
add
add
cld
or
fstl
fstl
rcl
cmp
pop
pusha
repnz
pop
subb
sub
bound
jle
push
push
jle
mov
sub
imul
lods
roll
das
mov
sbb
sahf
out
sahf
sbb
push
adc
adc
popf
out
push
or
incl
fbstp
shll
mov
adc
adcb
xorl
mov
int3
add
push
add
cmp
je
mov
push
sub
jle
or
je
and
je
je
pop
je
loope
fstpt
jne
arpl
push
push
ljmpw
loope
daa
lock
sub
ja
cmp
ja
fcomp
movsb
daa
js
rolb
gs
lcall
dec
je
or
jmp
and
push
neg
jle
js
pop
sub
jmp
push
loopne
inc
dec
jmp
mov
out
idivb
popa
jb
mov
mov
sbb
add
mov
lret
cmpb
not
out
mov
inc
and
loope
sbb
enter
imul
je
or
pop
mov
out
loop
mov
lods
push
hlt
js
leave
jp
jns
jae
das
fsubrs
std
insb
mov
and
inc
jmp
aam
jge
xor
xor
sti
loop
movsb
sbb
jmp
fstp
fldt
adc
xchg
pusha
fldz
fs
in
dec
js
jg
cs
and
push
mov
fninit
fldcw
add
and
cmp
or
mov
jbe
insb
dec
iret
dec
xchg
cmp
jge
mov
pushl
mov
lea
pop
xor
imul
fnstenv
js
xor
cld
push
push
inc
clc
daa
mov
mov
xchg
pop
pop
pop
andl
xchg
dec
cmp
add
inc
cld
ret
cs
push
jmp
inc
pop
lcall
mov
add
push
push
sbb
jmp
jmp
jmp
push
jae
adc
ret
and
mov
hlt
rorb
in
cmp
out
inc
lock
xchg
ret
and
lea
pushf
rol
dec
les
xchg
or
lods
bound
clc
cmpsl
popf
xor
or
sub
sbb
or
sub
es
jo
push
cmc
test
je
les
int3
push
imul
popl
or
out
test
mov
je
jle
sbb
pop
mov
adcb
xor
or
mov
sbb
scas
dec
repz
push
cmp
rep
mov
mov
sub
hlt
push
mov
add
je
pop
mov
pop
pusha
imul
adc
push
mov
mov
push
jg
test
sbb
jne
jne
dec
lods
mov
mov
mov
jbe
sub
dec
fmull
jbe
jmp
xchg
cmp
xchg
jae
paddd
movswl
add
ret
loop
fsub
and
jne
dec
ja
ret
aaa
xchg
mov
pop
xlat
clc
sub
jbe
xor
mov
testl
mov
xor
decb
mov
inc
adc
add
mov
inc
push
sub
inc
loopne
mov
insl
mov
sub
dec
mov
push
xor
out
jmp
test
mov
outsb
test
cmpsl
jecxz
jmp
scas
arpl
mov
cmp
mov
or
inc
lods
lock
mov
xor
cmpsb
jge
or
add
adc
or
jne
or
ss
lcall
lds
daa
xor
lods
dec
push
add
push
dec
jo
pop
push
lret
add
mov
add
lea
or
insl
cli
cmpb
je
out
jmp
push
into
hlt
add
cmp
mov
mov
xchg
dec
js
inc
push
mov
mov
les
pop
cmp
pop
push
mull
sbb
pop
inc
mov
stos
ret
push
pop
sti
divl
or
dec
sub
shl
pop
movsl
add
push
add
out
aam
push
xchg
jmp
pop
jp
adc
incl
je
movzwl
push
add
repnz
in
mov
push
adc
lcall
cmp
inc
inc
cld
adc
into
or
jne
mov
mov
add
out
out
shll
cmp
xlat
pop
push
data16
or
hlt
push
jg
cmp
jae
movsb
cmp
mov
pop
sarl
addb
pushf
pop
loopne
lock
mov
cld
dec
push
xchg
push
js
push
inc
push
push
mov
cmp
push
inc
add
xor
fcoms
push
cwtl
jg
ret
push
or
jbe
push
xor
xor
lcall
mov
sbb
dec
adc
dec
push
cmp
cmp
clc
out
sbb
add
dec
jne
sbb
jmp
pop
jmp
push
lea
jg
xor
pop
pop
je
jmp
mov
mov
test
dec
inc
mov
sbb
psubusw
jo
ret
arpl
or
and
mov
ja
aam
insb
movsb
adc
push
in
inc
aaa
cmp
nop
push
push
mov
xor
js
dec
sbb
adc
test
push
cmp
je
enter
repz
fsubs
fdivrs
jnp
mov
pop
add
cmpsb
test
repnz
add
push
in
mov
aaa
adc
je
pop
add
repnz
cmp
jmp
repz
add
out
sbb
jecxz
test
imul
iret
fcomip
dec
repnz
push
push
push
test
jl
cld
hlt
xor
lea
icebp
jmp
mov
mov
mov
movl
push
xchg
cmp
cmp
icebp
push
lock
and
inc
or
push
lcall
or
inc
add
idivl
xchg
push
lods
testb
or
shlb
cmp
pushl
xchg
and
jo
or
inc
or
mov
jne
or
jg
inc
xor
sbb
or
stos
xorb
sbb
jmp
je
and
xchg
call
inc
mov
dec
mov
add
add
push
dec
jl
ret
add
jg
pop
adc
add
lods
cmpl
into
in
push
cmp
and
subb
push
cmp
xchg
cmpsl
mov
cs
popa
lock
add
pop
push
push
iret
add
xchg
aaa
nop
sbb
jmp
fisttps
jmp
or
mov
add
data16
mov
sbb
mov
inc
pop
mov
adc
xchg
aas
loop
pop
cmp
aaa
insl
adcb
jecxz
pop
clc
test
cwtl
testl
and
nop
clc
inc
mov
adc
outsb
adc
adc
pop
into
je
mov
scas
ret
mov
cmpl
je
push
fistpll
fcomip
sbb
ja
lea
pop
fs
insl
add
stos
shl
inc
je
xor
lods
loopne
sbb
push
or
push
jns
jo
and
je
orl
add
mov
cmp
loopne
popl
cmp
lods
jp
and
pushl
out
cmp
lahf
outsl
dec
pop
add
inc
add
loopne
add
test
cmp
pop
mov
adc
xor
inc
cmp
xchg
or
push
jo
popa
and
push
xor
pop
adcl
or
cmp
add
adc
mov
or
sub
dec
clc
add
push
je
mov
sub
sarb
push
popa
cs
push
or
dec
add
push
push
push
mov
push
sbb
adc
cmpsb
imul
pop
xor
xor
pusha
adc
mov
pop
jmp
jns
rcll
shlb
and
roll
xchg
cli
adc
mov
add
pusha
mov
and
aam
and
fsubrs
cmp
fsubs
jb
adc
lahf
or
and
sahf
pop
add
test
pop
std
mov
loop
mov
add
je
cmp
ja
adc
push
sub
je
out
decl
pusha
add
sub
jb
je
jmp
cmp
cmp
mov
cs
adc
jmp
sub
cmp
mov
enter
leave
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
or
jmp
mov
jmp
mov
ljmp
decl
mov
push
or
pop
ret
mov
xor
mov
xor
das
je
push
inc
mov
mov
ljmp
mov
adc
inc
sbb
fwait
push
xor
push
fsubrs
mov
inc
cmp
mov
jecxz
add
mov
pop
call
aas
xor
push
fs
lock
stos
add
les
scas
fwait
ds
mov
pop
rcrb
int3
cs
and
sbb
cmp
cmpb
adc
cmp
test
cmp
add
xorl
and
sbb
mov
xchg
aas
mov
test
jle
dec
mov
je
add
pop
data16
pop
cs
jg
or
jmp
xchg
mov
push
fimull
data16
shll
or
cli
push
mov
fs
inc
ds
roll
cmp
jle
dec
xor
inc
mov
cmp
jg
daa
pop
add
bound
lock
pop
adc
pusha
mov
cmpsb
adc
or
mov
cmp
sbb
or
pop
cmp
pop
mov
xchg
inc
mov
insl
cmpb
addl
aaa
filds
jns
cmpsl
inc
pop
pushf
dec
add
add
and
mov
iret
ja
mov
sub
hlt
mov
cmp
lea
mov
push
add
mov
mov
add
je
add
int3
pop
inc
insb
jmp
clc
lea
or
mov
dec
jne
pop
pop
sti
outsl
push
mov
inc
or
movsl
or
in
sahf
mov
ret
sub
rolb
adc
cltd
idiv
imulb
add
and
int
test
mov
dec
cld
fdivl
mov
neg
loopne
inc
cmpb
rorl
ja
mov
adc
mov
mov
add
sbb
and
in
mov
rep
xor
xchg
pop
or
ret
push
sbb
lods
cmp
subw
adc
stos
mov
jo
test
or
xchg
push
push
mov
lods
fwait
cmpsl
or
add
test
mov
push
inc
pop
ret
adc
nop
jne
push
add
push
jg
mov
cmp
pop
add
add
pop
push
xor
jl
lock
and
dec
adc
into
call
inc
sbb
es
scas
jne
cmp
and
pusha
xor
sub
inc
lock
out
shrb
mov
mov
mov
call
pop
fsincos
jge
jne
xor
jne
lock
lcall
adc
shll
popl
jne
subl
mov
hlt
xchg
or
outsb
in
in
jl
movsl
js
add
cld
and
or
insl
scas
cmp
or
jle
nop
fstl
ja
jne
call
adc
jno
mov
push
sarl
in
adc
cld
mov
mov
add
jno
inc
out
xchg
popl
into
inc
add
mov
inc
loopne
inc
std
filds
shlb
rorb
sub
adc
inc
clc
and
data16
pusha
adc
inc
testb
sti
add
clc
lock
ret
test
cwtl
fiadds
addr16
push
ja
push
push
push
xorl
xchg
test
push
push
sub
in
mov
xchg
cs
testb
mov
jb
dec
clc
dec
or
idivb
decl
hlt
cmc
test
adc
inc
push
in
arpl
cmp
scas
jbe
in
rclb
sbbb
add
or
cmp
fidivrl
add
push
stc
xchg
shlb
mov
push
xchg
lock
clc
inc
jle
cmp
imul
dec
xor
mov
jp
cltd
dec
push
xor
sub
add
fadd
jae
push
pusha
enter
mov
xor
fistps
in
scas
aaa
jb
insl
outsb
outsb
lock
adc
pop
xor
shlb
inc
cld
and
sub
push
loope
inc
cmp
fdivrs
xchg
scas
mov
push
push
jns
mov
and
jle
loopne
xor
movzwl
sbb
jmp
loope
test
push
outsb
inc
add
aam
test
data16
inc
clc
sub
jbe
jmp
lea
cmp
mov
aad
cld
out
mov
dec
cld
mov
jle
lea
add
lret
sub
jmp
lea
sbb
popf
ljmp
insb
and
ret
jge
inc
mov
xor
orb
mov
cmp
inc
rolb
jge
add
jmp
cmp
jo
testb
sar
push
adc
push
aam
aad
lret
lock
sub
pusha
pop
mov
pop
dec
dec
mov
mov
mov
bound
jno
dec
test
mov
ds
out
fiaddl
sbb
mov
cld
outsl
ret
dec
cld
gs
pop
jmp
push
mov
xchg
adc
stos
test
mov
fisubl
je
mov
mov
inc
mov
adc
or
not
push
push
ret
sub
or
or
aas
dec
cmp
add
xchg
add
lds
jb
or
add
cmp
lahf
fwait
dec
add
or
fmull
fidivrl
sub
mov
lahf
je
push
cmpsb
loope
jo
xor
pop
push
xchg
lret
loope
inc
nop
pop
pop
loop
rorl
ja
add
or
or
je
jmp
cmp
jg
sub
inc
add
adc
sarl
mov
cmova
movsb
jmp
mov
adc
add
pop
push
push
nop
mov
loop
mov
ret
pushl
mov
bswap
call
cmp
je
or
stos
shll
or
push
push
call
in
add
rcr
sub
and
xchg
add
lds
into
mov
push
cld
add
jo
push
jne
dec
ret
je
out
dec
rorb
lods
push
lods
xor
cs
jnp
sbb
sbb
int
xor
pop
cltd
fsubrs
jmp
lods
add
loopne
push
rorb
mov
psubb
cmp
xor
mov
pop
js
push
out
cmpl
jne
scas
or
ret
pop
mov
jo
mov
outsl
sub
push
test
insb
and
cld
movb
lcall
jne
loope
mov
cli
mov
icebp
jl
icebp
or
mov
mov
add
adc
shl
cld
fldenv
lock
push
xchg
add
xchg
sbb
jmp
add
imul
jge
loopne
cs
mov
add
sbb
in
sub
add
cmc
cli
pop
imulb
jle
push
sub
push
cmp
pop
cmp
je
or
mov
add
loope
inc
add
nopl
blcs
aam
push
push
add
pusha
adc
rcrl
rcrl
scas
adc
dec
ss
hlt
pop
dec
mov
fcmovnu
andl
mov
inc
aaa
xchg
lret
mov
aaa
pop
icebp
cmpb
shlb
adc
jo
push
test
push
movsl
pop
mov
cmp
xchg
ret
sub
imul
add
jmp
cli
div
ret
rorl
bound
add
sti
shl
ss
mov
sti
movd
mov
or
mov
mov
dec
subb
rorl
add
roll
dec
jns
dec
push
or
mov
jmp
mov
loop
std
shrb
inc
cli
add
dec
clc
movsl
cmp
cmp
lret
mov
adc
in
add
push
adc
fnstsw
fmul
mov
test
cmp
enter
dec
jmp
test
mov
add
jae
iret
lret
jne
enter
aam
in
ja
iret
jl
pop
cmp
shl
add
dec
jmp
arpl
roll
inc
mov
repnz
add
loopne
fwait
dec
aam
xor
or
scas
aas
call
pop
jo
pop
lea
push
loop
xchg
jmp
popa
aas
idiv
rcll
movb
jmp
dec
cmp
sti
in
or
imul
mov
sub
cmp
and
dec
or
rolb
mov
das
mov
bound
cmova
rorb
sbb
adc
scas
jne
adc
stos
lock
inc
shl
cmpsb
add
sbb
sbb
jmp
pop
xor
jecxz
addl
mov
push
daa
add
fldenv
jo
push
test
jns
pop
cmpsl
push
pop
adc
ljmp
xchg
shr
fwait
or
mov
mov
dec
jb
sub
jo
adc
lods
sbb
in
push
in
cld
mov
cmpsl
dec
cmp
ret
imul
xor
xchg
cmp
call
es
je
cmp
je
cmp
je
cmp
je
cmp
aam
ret
mov
ret
je
mov
jbe
add
mov
inc
adc
cmpsb
xor
add
or
adc
jmp
push
mov
mov
jo
cs
add
dec
cs
adc
mov
cmp
cmp
pop
jmp
cmp
mov
sub
add
push
push
scas
push
sub
and
lahf
outsl
mov
test
ret
mov
call
pop
cmp
add
pop
mov
arpl
inc
shll
xchg
ret
mov
adc
mov
fdivrl
shlb
sub
in
repnz
inc
sub
in
imul
daa
cs
xor
jmp
es
jo
adc
repz
jb
xchg
adc
inc
fdivl
inc
mov
sub
loope
fwait
cltd
sbb
and
icebp
jmp
pop
cmp
xlat
push
sub
sbb
andl
daa
cs
jl
or
popa
xlat
push
cld
mov
or
push
mov
sub
jle
add
add
popa
cld
roll
mov
cmp
sbb
pop
adc
je
imul
outsb
mov
cmp
movsl
xchg
adc
mov
ror
addr16
cmp
inc
andl
jg
sbb
jmp
dec
sbb
insb
lea
push
xchg
lahf
push
dec
mov
pop
or
push
nop
dec
xchg
or
popa
inc
push
mov
add
inc
push
imul
pusha
xor
mov
dec
adc
cmp
ds
add
push
stos
push
add
push
or
sbbb
push
mov
and
insb
and
pop
and
sub
jl
push
sbb
xchg
stos
mov
mov
push
and
fists
jne
sub
lods
icebp
nop
pop
enter
jmp
push
lcall
adc
loope
cmp
dec
mov
or
pushl
cmp
pop
add
inc
call
lock
add
cmp
add
in
pushw
cmp
jmp
iret
imul
or
sbb
lea
inc
ret
mov
push
xchg
push
mov
aam
jg
pop
sbb
mov
jne
movntq
jmp
push
sub
insl
add
adc
and
mov
cmp
mov
jg
xor
lret
pop
ret
push
fldl
sbb
es
bnd
or
mov
adc
or
je
int
ljmp
adc
sbb
rcl
rcl
rcl
cmp
jb
in
cmp
jb
sub
sbb
inc
loop
pop
pusha
xlat
psrad
repz
jmp
add
stc
loopne
cld
ret
pop
push
insb
dec
mov
xchg
dec
pop
mov
pop
pop
adcb
cmp
sbb
jbe
in
jge
mov
mov
jmp
jbe
xchg
adc
sub
xchg
fistl
add
movzbl
add
mov
jo
lods
push
push
call
sti
pop
test
mov
insl
call
stos
pop
in
idiv
cmp
je
andl
adc
push
sahf
in
int
cmp
jne
mov
arpl
cld
loopne
jge
jge
mov
outsb
lret
scas
scas
add
mov
sub
adc
mov
stos
pop
jmp
decl
and
loop
cmp
aaa
mov
add
in
or
fwait
xor
jns
cmp
or
into
stos
push
mov
push
push
dec
shl
jne
ret
lret
movl
and
jle
adc
lock
ret
jo
inc
fidivl
mov
mov
mov
movl
popf
sbb
test
js
hlt
fstpl
dec
jne
rorb
cmpl
cmp
mov
push
lock
jne
outsb
out
xchg
push
adc
adc
orb
push
fistpl
call
sahf
or
sbb
inc
sarl
sub
incl
pop
lea
mov
data16
hlt
std
movsl
adc
lock
ljmp
stos
je
push
mov
imulb
cltd
test
add
sub
imul
and
and
jae
or
je
or
shlb
clc
stos
pop
and
outsb
sbb
fstp
fldl
jp
sub
push
je
jle
incl
xlat
gs
inc
push
pop
je
popa
outsb
insb
pop
outsb
bound
imul
or
add
inc
jns
insb
push
sub
mov
inc
pop
push
jne
insl
or
dec
sub
ss
mov
jne
ret
inc
push
fistpl
push
push
jo
jo
std
fcomps
pop
popa
sub
popa
addr16
xorl
inc
dec
jae
outsb
mov
jae
popl
pop
add
pusha
inc
inc
sub
sub
push
sarl
outsb
addr16
rcr
fnstcw
je
insl
sbb
push
ret
xchg
pop
insl
sub
jb
dec
inc
test
out
mulb
cmp
lock
push
or
xchg
leave
or
in
inc
pop
push
inc
cs
aaa
divl
outsl
aaa
cmpsb
aaa
mov
inc
dec
cmpsb
jae
push
aaa
outsb
mov
cmpsl
aaa
dec
dec
inc
push
pop
shlb
je
pop
hlt
xchg
mov
sbb
mov
and
setae
jo
cmp
or
rorb
imul
cld
sbb
add
sbb
add
and
roll
or
fs
dec
push
inc
sub
add
cs
xor
pusha
outsb
or
call
adc
shlb
mov
cmp
pop
and
stc
push
sub
pop
cwtl
sub
stos
jl
mov
sub
sub
xor
xor
and
pop
lahf
and
or
mov
push
jne
fisubrl
sub
test
xchg
xor
hlt
icebp
and
loop
insl
dec
mov
notb
sub
fs
dec
jne
scas
cld
adc
rorb
ret
add
aaa
lock
sbb
fstps
rolb
push
pop
cmp
or
dec
xor
jnp
lock
cmpsl
pop
mov
xbegin
jecxz
add
cwtl
adcl
frstor
lea
adc
pushf
cwtl
push
lock
aaa
in
loope
std
iret
cmp
sub
jb
adc
call
mov
orb
cmp
cmp
pop
clc
add
shr
cmp
fucom
popa
scas
call
dec
jmp
sbb
mov
adc
movsb
jne
je
jmp
jbe
enter
mov
test
movzwl
push
paddusb
js
lea
pop
ficoms
daa
imull
movsb
pop
and
lea
popa
mov
pushl
dec
es
inc
pushf
movsb
pushf
sub
mov
sub
add
xchg
push
sub
pop
call
inc
pop
sub
clc
or
arpl
pop
sbb
add
add
in
mov
adc
xchg
js
getsec
or
aas
push
push
push
xchg
cmp
sub
inc
sub
pop
inc
add
sbb
dec
cmp
or
jp
xlat
dec
outsb
fildll
andl
mov
cltd
inc
pop
dec
iret
rol
mov
shll
lret
cvttps2pi
mov
cmp
mov
shr
lock
inc
loop
inc
in
xchg
cmpsb
out
or
lcallw
lea
imul
push
and
add
or
mov
adc
push
sub
call
inc
je
mov
or
push
mov
insb
pop
cmp
sbb
loop
push
into
cmp
adc
push
jnp
fwait
inc
push
inc
adc
pop
sbb
dec
pusha
jl
sub
cmp
mov
sbb
sbb
cltd
shrb
and
bound
negl
mov
pop
nop
jmp
adc
sub
lcall
int3
xor
mov
testb
or
push
shll
push
and
loopne
inc
sub
add
jmp
dec
sub
dec
iret
in
pushf
xor
ljmp
jne
ret
mov
jle
pop
mov
sti
xchg
push
clc
addl
mov
sbbl
push
fisttpl
jle
das
push
insl
or
fs
call
dec
sbb
xchg
stos
sbb
cmp
scas
jmp
cmp
js
pop
insb
cmp
push
into
pop
int3
cs
cmp
scas
pushf
and
inc
add
adc
push
mov
xchg
clc
jg
out
mov
sub
sar
jns
adc
sbb
in
mov
dec
sub
sar
pop
rolb
add
inc
cmp
jg
push
subl
push
xor
cmpsb
mov
in
mov
sbb
call
cmpb
adc
int3
std
mov
lea
jle
jg
xor
pop
jns
add
fstpt
dec
push
push
fldt
cmpsb
xlat
mov
popl
cmp
mull
xor
mov
pop
scas
add
sub
sahf
push
popa
je
jl
jo
insb
push
daa
out
std
mov
gs
sub
or
inc
adc
sub
jmp
sub
cmp
mov
mov
jnp
stos
cmp
lea
mov
sbb
outsb
pop
add
cmp
ror
lcall
mov
pop
pop
cmp
pop
xor
enter
xor
test
adc
and
sarl
stc
or
mov
xor
or
or
cwtl
xor
test
push
shlb
dec
pop
ljmp
cwtl
loop
cwtl
popf
das
mov
cltd
pop
arpl
push
cmp
inc
push
xchg
clc
lea
in
mov
ds
repnz
xchg
add
push
cmpsb
in
outsl
add
add
out
sar
mov
add
arpl
fs
outsl
cs
mov
dec
ja
and
push
fisttpll
push
es
cltd
fisubl
adc
jbe
scas
mov
iret
addr16
inc
jo
xor
insb
imul
fs
sub
mov
mov
lods
mov
in
gs
xor
bound
jge
movsb
pop
lahf
je
mov
jno
push
andl
sti
add
int3
xchg
mov
ljmp
inc
lods
mov
xor
cs
stos
add
add
clc
pushf
xchg
ret
test
je
cltd
dec
leave
test
cmp
shl
sbb
stc
imul
iret
stc
xchg
push
or
in
mov
jmp
inc
push
dec
mov
fdivrs
push
ret
push
es
sub
call
xor
es
popa
ret
rol
jle
dec
jecxz
jp
in
mov
cmp
jle
leave
xchg
push
loop
ljmp
and
in
add
jb
inc
lock
push
ljmp
dec
int3
movzwl
pop
les
jo
sbb
hlt
mov
enter
dec
add
ror
inc
pop
in
in
push
add
addr16
jbe
xor
xor
inc
sub
jbe
inc
lret
leave
orl
xchg
jnp
dec
jmp
clc
sub
cmp
jl
inc
jne,pn
mov
lret
jmp
cmpsb
inc
jno
js
and
cld
fcmovb
jmp
jne
in
push
pop
lods
mov
loop
fdivs
pushf
and
jne
mov
call
pop
inc
mov
lock
push
aam
outsl
jl
sarl
test
push
aas
call
je
out
js
std
dec
imul
fidivs
int3
pop
sbb
mov
adc
xor
mov
mov
addr16
nop
je
inc
repz
movsb
mov
in
mov
jne
mov
arpl
call
jle
test
mov
add
push
add
pop
jecxz
pop
mov
mov
pop
lds
cmp
add
add
dec
mov
sub
mov
pop
inc
pop
adc
sbb
pop
push
mov
dec
pop
fstps
xor
inc
pop
sbb
daa
cmpsb
mov
daa
cmp
mov
xchg
shlb
les
inc
add
or
dec
lock
cwtl
aam
jno
lcall
movsl
and
or
xchg
sub
push
pusha
ja
xlat
out
das
add
mov
jmp
mov
ljmp
sub
cmp
and
call
mov
sub
sbb
xorb
sahf
add
pop
mov
mov
sbb
lret
push
inc
mov
cmp
sahf
push
sbb
dec
shrl
lock
sbb
mov
add
jo
test
into
lods
mov
fidivl
cmp
ja
and
jmp
pop
sbb
mov
jmp
dec
out
mov
ss
daa
jg
pop
testb
adc
mov
push
loop
mov
cli
mov
inc
inc
sub
jmp
les
ret
out
inc
cmpsl
add
push
rcrl
jb
push
push
jbe
jge
mov
lahf
push
pusha
aaa
outsb
adc
cmp
jb
cwtl
xchg
cli
cmc
xor
or
jg
aaa
jo
das
push
andw
or
sarl
cmp
and
test
sbb
test
test
enter
xchg
loope
imul
mov
mov
cwtl
inc
test
cmp
adc
jp
dec
push
test
and
pop
push
addr16
ss
lea
mov
adc
fbstp
dec
dec
dec
jmp
pop
imul
test
aam
pop
enter
mov
jp
call
mov
orl
add
and
cmp
jae
inc
vpshld
mov
add
cs
push
movsb
rclb
icebp
aaa
repnz
push
add
shrb
and
or
les
out
sbb
bsf
inc
cmp
adc
aas
mov
les
push
sbb
fldl
mov
cmp
icebp
mov
clc
mov
enter
add
icebp
std
add
adc
jp
hlt
jg
push
mov
ret
scas
cmpsl
or
out
sarb
or
add
dec
dec
or
dec
das
enter
or
inc
or
add
ja
test
in
movsb
pop
add
dec
gs
pop
int
push
dec
xorl
cmp
jb
adc
or
sub
test
xchg
cmp
stc
mov
in
lds
push
sbb
and
xchg
cmp
cmp
or
jb
bnd
rorb
xchg
nop
jb
jb
mov
jb
jl
dec
cld
inc
testl
call
and
ja
cwtl
xor
pop
scas
hlt
jmp
loop
fiaddl
jle
outsl
shlb
ret
fidivs
repz
outsl
nop
mov
or
add
mov
ret
cmpb
js
stos
sbb
cmp
pop
push
ret
and
ret
xlat
imul
out
mov
add
outsl
jo
pop
cmp
cmp
inc
cmp
lea
unpcklps
sbb
pop
mov
js
inc
jp
test
neg
and
mov
push
push
mov
and
sub
and
xchg
outsl
aas
or
jne
pop
sbb
mov
push
jo
sahf
lret
mov
push
sbb
adc
pop
lcall
jns
sahf
dec
sbb
mov
sub
mov
lods
mov
ds
sarb
mov
in
or
fcompl
dec
inc
fnsave
xchg
bound
push
jno
mov
rorb
or
inc
jae
data16
sub
push
mov
or
jl
and
add
clc
add
mov
clc
shl
add
testb
loopne
loopne
cs
jge
inc
mov
pop
mov
jmp
add
jmp
sbb
mov
jp
rcrb
mov
fnstenv
add
mov
mov
and
add
mov
sbb
enter
sbb
dec
add
cwtl
sbbb
or
hlt
push
fstpt
les
ja
fstl
push
and
xor
mov
xor
outsl
mov
rolb
pop
push
lock
pushf
sbb
sbb
add
adc
inc
roll
rcrb
jge
test
int
test
dec
pop
lods
adc
mov
aas
mov
add
cmpl
imul
jne
lods
xor
lret
or
mov
movsb
pop
add
push
push
clc
mov
cmp
shl
and
add
dec
and
mov
cmpsb
insb
in
in
in
jg
inc
popl
aaa
pop
jbe
sbbl
enter
jg
jno
xchg
add
lock
lds
jp
cmc
adcb
sbb
sub
mov
adc
push
clc
roll
shl
je
xchg
shll
add
add
fists
popf
les
jmp
repz
add
jns
jae
jnp
arpl
push
imul
or
push
dec
sbb
inc
mov
shl
pop
mov
push
test
or
call
sbb
lret
cmp
sti
hlt
xor
outsl
add
and
rcrb
jle
pop
clc
dec
sub
or
fbstp
lock
add
les
addb
jno
push
xchg
mov
mov
jmp
push
pop
lock
iret
pop
adc
pop
cmp
jne
push
cmp
pcmpeqw
or
push
ret
lahf
add
loopne
xor
test
aad
pop
cmp
push
push
inc
sbb
xor
clc
add
jae
ds
setbe
jnp
cld
das
cld
or
pop
into
ret
inc
ret
mov
or
stc
sub
dec
mov
lods
dec
or
adc
or
out
or
cmp
je
mov
cmp
je
movzbl
add
mov
mov
pop
pop
push
push
jmp
mov
addb
add
mov
pop
mov
call
jmp
sbb
add
loop
push
adc
test
cmp
xor
add
or
ds
rcr
cmp
jne
or
lock
addb
add
add
and
push
jbe
push
dec
mov
and
das
pop
aas
pop
pmulhuw
in
push
push
dec
dec
in
in
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
cs
in
adc
xor
outsl
cld
popa
gs
mov
mov
push
ja
shr
adc
xor
mov
das
jecxz
sbb
mov
popa
inc
sub
cmc
jns
shrb
xor
nop
xchg
ficoms
negl
nop
aas
hlt
dec
xor
and
xchg
add
jbe
pop
dec
dec
daa
daa
mov
call
fsubs
daa
daa
daa
aam
int3
enter
daa
sarb
lods
test
adc
aaa
add
pop
push
or
js
in
xchg
testl
cmp
push
aas
sub
inc
rclb
pop
add
xchg
xchg
jp
jbe
js
dec
dec
ficomps
push
icebp
repnz
dec
dec
dec
hlt
cmc
div
dec
dec
dec
dec
clc
stc
cli
sti
dec
dec
dec
dec
cld
std
decl
dec
dec
loopne
loop
dec
dec
dec
dec
in
out
sbb
jmp
pushf
fmull
paddsb
out
pushf
pushf
pushf
pushf
out
rcl
rcrb
aad
pushf
pushf
pushf
pushf
xlat
fcomp
ficompl
fstp
pushf
pushf
pushf
pushf
ffreep
rol
pushf
pushf
pushf
ret
pushf
pushf
pushf
enter
pushf
pushf
pushf
lret
int3
int
pushf
pushf
pushf
pushf
iret
mov
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
mov
pushf
pushf
pushf
mov
aam
pushf
mov
mov
jbe
pop
mov
test
pop
mov
sub
adc
adc
movsl
sbb
stos
mov
xor
pop
pusha
and
fs
lret
push
push
sbb
je
mov
dec
js
and
adc
cmpb
mov
push
sbb
je
inc
sub
xchg
test
add
or
fcompl
xchg
mov
jmp
in
lods
mov
insb
and
sub
mov
mov
loopne
pusha
push
rolb
dec
pop
add
roll
jne
insl
xchg
and
mov
jae
aaa
dec
pop
dec
and
mov
das
inc
add
dec
push
insl
dec
push
mov
add
dec
loop
sub
inc
adc
sbb
dec
ret
divl
xlat
insl
imul
pop
aaa
js
push
aas
imul
addr16
out
fldl
jb
cmp
imul
popl
push
adc
loopne
sub
push
push
arpl
xor
loope
mov
push
jb
jbe
or
mov
inc
inc
insb
push
mov
addr16
imul
imul
loop
push
arpl
lahf
and
mov
adc
je
pop
test
and
daa
leave
pop
movsb
movsl
dec
dec
dec
outsb
cmpsl
test
dec
dec
dec
dec
stos
stos
lods
lods
dec
dec
dec
dec
scas
scas
nop
xchg
jg
dec
dec
xchg
xchg
xchg
add
sub
fmuls
mov
add
lret
jbe
inc
sarb
daa
lock
orl
add
push
pusha
mov
inc
mov
rclb
add
sbb
dec
jmp
in
add
shll
les
add
out
fst
mov
adc
and
cmp
js
pop
and
sar
pop
jl
jmp
or
daa
push
or
jbe
xchg
mov
cmp
sub
mov
ss
sbb
push
cwtl
cs
push
pop
xor
lods
jo
adc
lock
jno
xor
inc
jbe
fidivl
mov
or
ss
add
add
sti
and
xor
inc
push
push
add
jo
addb
rol
rolb
loopne
clc
std
ljmp
add
add
add
push
add
jo
sbbb
add
add
rolb
add
add
pop
sub
stc
sub
add
adc
rcll
xor
add
mov
add
ja
nop
mov
add
add
mov
add
or
add
add
add
add
add
idiv
mov
mov
add
push
loopne
lock
inc
mov
adc
and
add
loope
xor
pusha
add
add
icebp
xchg
add
adc
add
push
xor
xchg
mov
adc
adc
and
test
pop
stos
rolb
add
push
push
sbb
push
call
mov
add
xor
push
adc
rolb
mov
in
xor
aas
inc
ss
add
sub
pusha
adc
cmpsl
pusha
cmp
mov
mov
jae
sub
notb
movsb
push
add
out
addb
outsb
scas
add
adc
and
fists
xor
inc
add
mov
add
pop
es
scas
mov
mov
xor
or
loopne
das
add
popl
inc
adc
ret
loopne
loope
sarl
lret
dec
mov
dec
push
push
mov
jo,pt
neg
rolb
push
add
fdivrp
lret
ljmp
pop
jo
addb
push
mov
mov
aad
pop
loopne
lock
mov
cld
and
xor
inc
push
pop
pusha
pop
jo
push
addb
pop
mov
pusha
shlb
sub
jg
call
add
dec
or
or
or
or
push
or
jo
cmp
or
orb
or
or
incl
adc
aas
jp
or
or
or
or
jmp
clc
or
pusha
or
jo
xor
in
adc
xor
pop
scas
cmp
rorb
adc
lock
add
fsubrl
adc
ret
bound
or
or
dec
icebp
xchg
pusha
or
push
pop
jle
or
es
or
or
adc
pushl
orl
adc
add
pusha
jle
push
iret
or
push
sub
sahf
or
int
daa
in
add
rorb
or
fwait
cmpsb
or
clc
cmp
or
or
inc
or
or
test
or
jecxz
or
jge
repnz
mov
es
dec
addr16
loopne
pop
add
or
or
jp
pop
adc
and
sbb
or
push
pusha
or
jo
orb
rorb
or
and
xor
inc
push
push
push
pusha
push
jo
orb
nop
push
mov
push
rorb
loopne
lock
add
sbb
push
lar
wrmsr
cmovo
out
push
punpcklbw
jo
mov
pcmpeqb
nop
dec
mov
iret
jnp
imul
bswap
xchg
testl
sti
mov
sbb
add
dec
cmpsl
insb
mov
ja
dec
sbb
mov
push
inc
mov
mov
adcb
mov
je
or
popf
incb
mov
lahf
push
fcmovne
loopne,pt
lock
add
push
adc
dec
and
je
jo
outsb
aas
push
repz
jno
add
cltd
scas
adc
aaa
cmp
adc
xor
addl
mov
adc
add
mov
sub
sarl
adc
incl
jmp
imul
adc
and
xor
cmp
cmpsl
and
fildl
lea
in
cmp
pop
dec
stc
fnstsw
add
jo
pop
roll
inc
cltd
push
dec
cmp
aaa
sbb
sbb
divps
ud0
adc
lahf
adc
adc
adc
aaa
adc
adc
adc
jge
pop
or
pusha
or
adc
pop
jne
push
or
adc
shlb
add
adc
fnstsw
adc
adc
adc
into
ja
call
adc
adc
adc
adc
push
aas
pusha
adc
add
in
and
add
pop
mov
nop
mov
add
in
push
lret
push
or
rolb
jae
push
adc
adc
push
lret
ja
pop
fstpl
cmp
out
mov
xchg
and
adc
adc
clc
and
adc
xchg
adc
jnp
rolb
scas
adc
adc
fsub
lahf
mov
in
cmp
into
push
daa
jmp
loope
dec
mov
push
mov
ja
add
shll
fidivs
push
xor
mov
mov
dec
testl
les
iret
ss
jg
fistpll
add
jp
adcb
pop
es
xor
jg
cmp
push
push
pusha
aas
sbb
fildl
pop
or
fimuls
fadds
push
inc
and
sub
mov
pop
das
fldt
add
sub
outsl
filds
push
sbb
sti
loopne
pop
loopne
jecxz
pop
nop
pop
mov
test
fadd
pop
jg
pop
mov
adc
lock
push
jg
sti
add
sbb
or
inc
sbb
and
out
pusha
sbb
or
sbb
mov
imul
int
cmp
sbb
sbb
sbb
ss
sbb
sbb
pop
adc
cld
pop
loopne
cmp
xor
add
xchg
ljmp
lret
pusha
sbb
sbb
sbb
test
imul
sub
and
adc
iret
iret
mov
das
add
fists
shr
loopne
add
jo
mov
mov
jns,pt
jnp
sbb
add
scas
pop
push
push
adc
or
mov
adc
fs
adc
sbb
sbb
sbb
add
jle
or
pcmpgtd
adc
adc
mov
ss
adc
add
and
sbb
movsl
sbb
movsl
dec
inc
add
or
mov
add
mov
aaa
pop
add
cmp
pop
add
push
add
or
ja
mov
dec
push
add
push
ficoml
jmp
dec
or
fs
leave
in
sub
add
xor
aaa
sbb
or
xchg
sub
roll
or
jb
add
add
or
sub
inc
adc
add
call
sbb
dec
mov
dec
and
jg
stos
dec
icebp
jnp
in
mov
jne
or
push
push
shll
or
mov
sbb
pop
cmp
cmp
jns
add
mov
mov
jg
insl
fstp
sbb
ficoms
sarb
sbb
add
xchg
xchg
add
mov
or
test
pop
push
and
scas
sub
mov
mov
mov
popa
jg
jo
mov
adc
push
pop
inc
bound
sbb
ljmp
pop
lock
lidtl
pop
sar
and
insl
add
pop
insb
out
adc
or
push
sub
daa
lahf
imul
sub
mov
sbb
pop
or
add
pusha
mov
fistps
pop
or
or
out
inc
rcrl
and
push
pop
or
add
sbb
mov
outsl
mov
xchg
pusha
inc
xchg
add
notb
pop
lahf
jnp,pn
inc
aas
lahf
add
add
or
scas
mov
lahf
mov
out
add
sbb
cmp
aas
fmul
xchg
mov
and
or
sbb
sbb
mov
xchg
insl
pop
insl
int
push
fcomp
mov
and
mov
add
inc
push
sbb
pop
lods
dec
cmp
ffree
add
phaddsw
adc
cmp
movsl
aad
frstor
sub
and
fstps
add
sbb
add
sbb
pop
jns
enter
dec
pop
and
adc
sahf
add
jbe
cmp
and
pop
inc
loop
and
adc
das
add
int3
push
cvtps2pi
test
adc
sub
popa
sbb
cmp
insl
adc
cmp
fbld
add
xlat
xchg
shll
inc
pop
mov
shl
add
add
mov
jb
mov
push
add
xchg
rcrb
cmp
sub
mov
in
sbb
sub
mov
add
insl
xchg
shll
mov
out
push
sbb
dec
aaa
ret
insl
les
sti
add
mov
imul
mov
ja
fcoms
rcrb
adc
and
xor
push
xlat
mov
dec
adc
stos
cmp
jo
xor
mov
or
fiaddl
movsl
sub
lret
iret
mov
pop
aas
or
sub
jnp
lcall
imul
push
mov
fiaddl
sbb
adc
cmp
push
adc
cmp
sbb
inc
or
adc
xchg
sub
sbb
adc
cmpsl
data16
adc
sub
push
pop
add
xor
add
or
call
mov
ficoms
add
cmc
cmp
jnp
pop
gs
add
bound
sbb
dec
sbb
and
push
add
pushf
movsl
cmp
pop
pop
stos
test
mov
or
sub
sub
data16
inc
pop
and
sub
sub
pop
daa
mov
cmpl
popl
or
fsubrs
mov
push
add
or
pop
mov
inc
insl
arpl
pop
pusha
or
aas
sbb
insl
imul
sbb
gs
xchg
cs
fdivs
jno
pop
in
gs
dec
rcll
daa
add
ljmp
mov
sti
mull
xor
mov
push
mov
or
rclb
pop
sub
dec
inc
sbb
ljmp
movsl
test
mov
sbb
pop
sbb
jno
pop
push
adc
pop
dec
js
and
inc
loopne
pop
sub
pop
mov
cwtl
sbb
insb
in
mov
sub
lods
int
sbbl
push
mov
and
inc
fmuls
out
mov
fs
or
in
les
sbb
test
pop
fsubl
test
insb
popa
and
imul
push
mov
mov
rolb
sbb
xor
xor
or
fwait
test
aaa
rcrl
push
and
lcall
lds
push
test
lods
pop
add
adc
sbb
dec
fwait
jnp
xchg
imul
test
mov
popf
jp
lahf
adc
adc
cmp
inc
inc
mov
pop
cmpb
jg
shlb
push
lgdtl
outsb
test
sbb
sbb
xchg
or
lret
sbb
orl
sub
or
lahf
push
aaa
push
pop
test
popa
xor
and
xchg
push
mov
pop
push
and
cmp
mov
push
aas
xchg
mov
iret
or
lahf
lods
lahf
lods
lea
aad
push
es
or
pop
je
movsl
movb
daa
sgdtl
insb
insb
int3
cwtl
popf
adc
icebp
sub
or
pop
das
xor
jae
and
and
insb
inc
sub
xor
je
test
imulb
xor
dec
xor
sub
cmpsl
inc
or
sbb
fisttpl
sbb
imul
sbb
sbb
mov
jnp
or
sbb
neg
and
mov
adc
or
sub
mov
pop
enter
add
fildl
pop
sub
sarb
jp
and
jge
xor
pusha
or
adc
sbb
pop
pop
adc
adc
or
push
fsts
sub
jbe,pn
xchg
nop
add
mov
or
mov
rolb
dec
mov
inc
into
push
adc
ss
jb
add
and
sbb
or
xor
jb
mov
push
insl
add
pop
lods
sbb
test
dec
xor
jnp
subl
ficoml
fists
cmpsb
xchg
push
dec
sarb
adc
pop
shrl
loopne
test
pop
inc
mov
sub
inc
inc
lcall
xchg
add
xor
sub
xchg
jp
add
addr16
ja
rclb
and
add
lock
add
fildll
adc
xchg
add
nop
adc
add
pop
rclb
das
dec
lock
add
add
add
aas
scas
cmp
pusha
fwait
jo
mov
inc
mov
pusha
mov
xchg
mov
mov
mov
mov
aas
adc
or
adc
daa
daa
daa
sbb
and
pop
jg
adc
and
das
shl
pusha
sub
push
scas
mov
rorb
lahf
shrb
dec
push
outsb
xor
enter
pop
inc
mov
das
scas
mov
ljmp
mov
loopne
clc
aas
pushf
pushf
pushf
mov
adc
sbbl
pusha
dec
inc
sbb
jg
daa
mov
and
xor
inc
xchg
and
daa
dec
dec
adcb
cmpsb
xchg
push
push
lahf
mov
js
jnp
xor
xor
inc
mov
aas
ljmp
push
lods
mov
aas
sbb
ret
sarl
aas
lds
aas
lcall
imul
idiv
out
push
push
aad
pop
push
dec
or
in
leave
psubusw
xor
cmp
jmp
and
lds
mov
stos
ljmp
pmulhuw
aas
outsl
aaa
dec
adc
es
sub
pusha
and
shll
mov
sbb
push
sti
addr16
clc
inc
mov
dec
push
lahf
ljmp
sub
mov
cvttps2pi
pop
adc
adc
aas
xor
sub
push
aam
minps
or
out
scas
add
mov
jecxz
cs
xor
add
scas
xchg
mov
cmovae
xor
ss
cmp
or
dec
cmp
cmp
cmp
nop
cmp
inc
incl
daa
daa
mov
inc
inc
pop
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
dec
dec
adc
dec
rclb
mov
iret
add
ds
push
xchg
and
jg
and
fucomip
imul
jb
rolb
loopne
mov
mov
dec
jo
scas
gs
cmp
mov
pop
mov
in
rorl
pushf
mov
add
cs
aas
pop
icebp
add
stc
cmc
popa
cmp
mov
mov
push
jo
fiaddl
mov
outsl
ret
out
fisttps
arpl
lahf
cmovl
ds
jno
pushf
dec
pop
jmp
push
call
loopne
or
jne
pop
push
out
pop
sbb
pop
pop
subl
js
push
mov
das
scas
add
mov
jg
fisubrl
pop
mov
mov
dec
lahf
dec
mov
mov
popa
adc
popa
inc
subb
test
sub
xchg
outsl
pop
adcl
adc
adc
fbstp
mov
cmpb
inc
cs
xchg
sbb
push
adc
or
outsl
aas
add
mov
pop
mov
push
or
jg
das
inc
lods
sub
lcall
sbb
mov
aas
add
test
pand
lods
xchg
mov
out
outsl
and
mov
adc
sbb
bnd
pop
add
les
enter
xchg
or
adc
add
mov
outsl
adc
js
mov
adc
xor
dec
mov
dec
add
xchg
or
in
xor
xor
or
inc
imul
push
push
pop
push
popa
outsb
addr16
jb
or
xchg
mov
outsl
ja
sbb
fs
dec
pop
insb
sbb
gs
xchg
je
in
push
outsb
fs
or
jmp
adc
inc
arpl
jae
push
imul
and
jb
insb
test
je
inc
imul
movsl
ja
insl
xor
push
popa
dec
popa
cmp
mov
xor
inc
popa
js
adc
inc
js
andl
outsb
popa
addr16
inc
dec
neg
data16
imul
fcmovnbe
xchg
es
or
cmp
sub
sbb
xor
jo
or
insl
fwait
jb
mov
jo
insl
gs
push
xchg
shrl
fadds
cs
push
push
insb
sbb
adc
push
or
add
push
lahf
or
std
add
push
inc
jmp
cmp
inc
dec
add
sbb
pushf
insb
pop
xchg
out
add
mov
addb
js
jo
repnz
insb
daa
push
fsubs
iret
leave
jae
lock
add
out
pushf
cmp
inc
cwtl
das
cmp
mov
xor
sub
daa
fwait
xchg
out
inc
sbb
and
jae
pushf
cmp
or
daa
iret
fldenv
inc
dec
pop
fcompl
inc
loopne
das
fsubs
out
and
shrb
adc
enter
outsb
lods
add
les
int
sub
mov
fs
dec
ss
mov
adc
fstps
daa
fistpl
movsb
push
mov
mov
imul
xchg
sbb
nop
sub
sub
mov
adcb
insb
filds
add
insb
adc
fistpll
mov
mov
les
adc
and
add
jae
jl
or
call
add
es
invd
xor
popa
jmp
sti
mov
in
mull
dec
inc
aaa
insl
mov
pop
cmp
pop
or
inc
les
imul
pop
neg
mov
mov
add
js
bound
jg
inc
mov
hlt
fisttpll
add
flds
jns
aaa
pop
add
sub
inc
movsb
icebp
pop
outsl
imul
aad
xchg
push
sbb
dec
add
outsl
mov
pushl
mov
xchg
and
je,pn
sbb
xor
outsb
mov
or
add
fimull
je
jae
es
add
fists
dec
push
js
dec
add
rolb
fs
pop
and
cmp
cld
dec
adc
mov
jl
sbb
shrb
push
es
sbbl
xor
inc
xor
mov
cmovae
fwait
mov
nop
in
jbe
pusha
sub
or
dec
lea
insl
mov
mov
or
out
mov
rcrl
lea
push
jne
lds
repz
pop
inc
jae
adc
bswap
xor
and
add
imul
pop
mov
cmp
sub
adc
sahf
push
or
daa
pop
add
or
jbe
xlat
jg
add
xchg
xor
jg
xor
inc
mov
xchg
rcrl
pop
fmuls
scas
push
xchg
inc
jbe
sbb
sbb
sbb
jnp
pop
out
popf
dec
jp
inc
pop
push
cld
xchg
dec
sti
push
popa
mov
inc
sub
ret
mov
dec
add
fsubs
sbb
or
pop
aam
cmovbe
outsb
cmpb
gs
gs
adc
cltd
or
pop
incl
mov
inc
inc
arpl
imul
push
int
add
dec
xchg
lods
cli
push
push
pusha
add
dec
mov
lcall
push
negl
jno
jo
push
fidivrs
push
mov
and
xor
jne
sub
add
or
out
and
sbb
mov
inc
insl
je
push
jbe
es
xchg
or
mov
jns
mov
sbb
jmp
or
je
mov
jge
rorb
or
push
add
xchg
xchg
dec
call
mov
das
sub
shll
inc
repz
xor
cmp
out
inc
insb
xor
cmpl
xchg
mov
jp
adc
mov
addb
dec
push
mov
mov
add
cld
adc
cmp
dec
pop
loopne
push
sbbb
add
aam
sti
mov
lds
adc
imul
mov
scas
sub
loopne
xchg
incl
push
jo
xor
push
pop
sub
jle
sbb
or
sbb
enter
add
and
or
pop
incl
add
or
fwait
push
in
sbb
cmp
pushf
add
mul
push
push
inc
push
or
add
fstp
cli
lea
push
or
aaa
and
outsl
pop
dec
push
pushf
pcmpeqb
or
cmp
push
das
xor
arpl
jns
je
inc
loop
mov
sarb
jl
push
lds
mov
cmp
push
cmp
pop
addr16
enter
add
adc
arpl
sbb
add
cld
in
bound
ljmp
inc
mov
jo
sub
xchg
inc
xchg
das
cwtl
push
add
movsb
outsl
adc
sub
pop
xorl
and
push
cmove
xchg
cmp
jmp
fcoml
inc
sub
pushw
mov
and
pop
and
push
movsb
push
dec
fdivrl
out
test
es
add
pop
and
sub
fisttps
sub
push
sub
or
data16
call
pusha
mov
and
sbb
mov
and
xchg
push
test
lret
nop
push
sbbb
cwtl
int
pusha
movsl
add
cmp
push
test
mov
pop
pop
pop
inc
outsb
daa
rorl
jo
leave
push
dec
jbe
mull
fisubrl
lahf
xlat
pop
xor
daa
xlat
pushf
fmull
and
cmp
sub
cmp
push
adc
inc
add
sbb
inc
push
inc
in
cmp
in
and
fisubrl
and
fiaddl
cmp
jb
daa
mov
je
dec
sbb
pusha
dec
rorb
pop
and
pop
mov
sub
xor
inc
stos
adcb
add
pop
and
or
fsubrl
movsb
dec
mov
xor
push
adc
jge
inc
loopne
movl
sbb
pushf
loopne
jbe
test
insb
jb
sub
or
movl
dec
outsb
daa
in
sub
sub
adc
test
sbb
data16
inc
pop
and
or
mov
in
inc
sarb
or
mov
push
mov
in
inc
push
inc
sub
js
pusha
or
loop
out
lods
fldl
movl
push
push
out
add
and
test
mov
ss
or
movups
inc
or
sti
iret
pop
sub
pop
mov
rorb
inc
xor
xchg
sub
pop
push
test
and
movsb
sub
shrb
or
and
sub
movb
in
and
add
ucomiss
adc
adc
add
test
sbb
pop
mov
bts
jo
mov
push
add
movl
pop
pop
out
das
pop
add
orb
push
add
inc
jmp
iret
pop
sub
inc
dec
xor
sub
adc
push
push
loop
xlat
or
insl
pop
mov
fildl
rorb
adc
cmpsb
xchg
mov
pop
test
pop
and
add
xor
orb
push
aaa
cmp
pusha
nop
fiaddl
sub
inc
push
xor
xor
adc
cltd
stos
loopne
pop
push
cld
mov
push
mov
sub
push
rcrl
mov
lret
add
pop
dec
inc
push
pop
mov
xor
push
je
orb
pop
xchg
pop
shrb
push
sub
pop
sbb
jne
insb
aaa
xor
stos
loope
jbe
push
wrmsr
xlat
pop
jb
pushf
adc
arpl
xor
xor
sub
outsb
loopne
push
jb
dec
fdivl
outsb
out
mov
in
mov
rcrb
add
mov
xor
aas
cmpsl
jo
in
mov
jmp
xlat
pop
xor
in
add
test
inc
dec
ja
inc
test
inc
mov
daa
movsb
adc
aaa
aaa
sub
or
test
cmovne
pop
sub
sbb
aaa
pusha
adc
push
inc
test
lds
dec
cs
cs
out
adc
js
add
push
push
adc
add
push
inc
lret
push
push
or
insb
jp
xor
pop
mov
fwait
jmp
add
inc
push
nop
shlb
cld
push
leave
jae
xor
cmp
jnp
sbb
push
push
andnps
or
movups
jb
xchg
and
int3
push
ret
cmp
test
jmp
cli
adc
inc
sahf
outsb
arpl
sbb
push
shrl
add
or
cltd
and
inc
sub
test
imul
inc
xchg
sub
xchg
xchg
jo
gs
jo
or
sbb
das
inc
or
je
cwtl
lcall
movsb
rcrb
pop
add
int
push
stc
push
lods
inc
dec
fwait
das
sbb
cs
inc
sbb
cmp
insl
sbb
xor
imul
popa
fldcw
mov
in
cld
pushf
or
pop
push
fisubl
xor
adc
sub
xchg
divl
push
xchg
scas
pushf
xchg
rcrb
ja
addr16
sub
pop
gs
add
imul
sbb
or
ret
testl
aas
jb
and
sub
adc
sbb
addr16
jnp
push
test
mov
sbb
push
and
sbb
aaa
add
mov
cmp
cmp
xor
add
xchg
es
je
cwtl
stos
push
adc
and
xor
inc
fcompl
ds
lock
testl
scas
mov
jne
ss
les
aam
lret
add
sti
aam
inc
sbb
xor
jae
cvtdq2ps
cmp
fidivrl
ja
jle
fidivs
mov
sbb
xchg
out
fstps
sti
push
push
js
jle
int
insb
mov
lea
inc
jecxz
push
clc
addr16
popf
adcb
xchg
sub
jge
sbb
push
pushf
fmuls
ret
out
sub
fistps
xchg
sbb
filds
shl
pop
xchg
sbb
or
mov
notl
outsb
sbb
lret
out
insb
insl
mov
or
cmp
movsl
cwtl
fldl
bound
ja
lahf
mov
fcmovnb
inc
mov
sub
sbb
enter
pusha
and
cmp
insl
lea
sbb
cmp
or
das
mov
and
cmp
mov
pop
lea
pop
clc
or
insl
push
jnp
fisttpll
xchg
in
inc
fs
lock
lock
adc
scas
dec
add
push
arpl
push
mov
add
cmovo
inc
pop
lret
movsl
mov
or
rolb
je
xchg
int3
fcom
shlb
out
test
inc
divl
add
jbe
or
xchg
sub
aaa
lea
inc
outsl
cmpl
imul
or
adc
add
mov
js
test
outsb
add
jo
mov
sub
cmp
ja
cmp
adc
in
cmp
add
inc
adc
or
mov
xchg
cld
fiadds
push
add
int
faddp
jbe
sub
dec
jo
xor
aas
les
sar
pop
add
lock
call
dec
repnz
andl
add
cmp
pop
enter
rcl
mov
stos
xlat
aas
lods
or
mov
mov
or
out
cmp
inc
jbe
cmp
push
mov
cmpb
inc
mov
imul
xchg
shlb
les
push
or
pop
pinsrw
das
movsb
pop
nop
cmp
push
movzbl
add
push
cmpsl
sub
daa
or
imul
mov
mov
sbb
cmp
mov
sbb
or
mov
add
insb
test
je
mov
sub
dec
lcall
test
sbb
add
cmp
add
cmpsb
push
clc
sbb
shlb
inc
and
cmpsb
je
xchg
and
sbb
mov
orl
sub
and
mov
pop
bound
inc
bt
setb
ret
retw
dec
rorl
int
cld
inc
fisubs
push
mov
sti
push
mov
cmp
dec
inc
adc
and
fcomps
shlb
ja
jbe
push
test
add
add
lea
add
icebp
std
incl
add
mov
cmp
je
data16
and
xor
or
outsb
adc
or
add
cmp
xorb
sti
jmp
sub
jne
outsl
and
pushf
pop
or
rcl
mov
jno
hlt
inc
push
mov
call
jmp
push
clc
cmp
jg
rcr
push
inc
inc
ucomiss
loope
add
cmp
mov
inc
rclb
add
jmp
and
xchg
cwtl
das
mov
jmp
mov
imul
and
jmp
das
add
jmp
or
push
xorb
mov
xchg
loop
cmpb
inc
add
data16
jmp
fnsave
rolb
cmp
jle
mov
mov
mov
imul
sub
and
or
adc
add
rorl
or
adc
mov
decl
or
cmp
jb
xor
mov
inc
cmpsb
fdiv
pavgb
call
ror
lret
out
jbe
sub
add
ja
mov
jecxz
push
adc
mov
jb
sub
or
cmovs
sbb
jg
cmp
repz
add
adc
and
jg
in
xchg
add
outsl
jb
mov
loopne
fs
jb
add
mov
mov
mov
mov
push
mov
sahf
cld
mov
inc
arpl
mov
ret
cmp
in
ret
adc
push
add
das
por
testl
sbb
sbb
aas
imul
mov
jmp
addl
in
push
jb
stos
mov
inc
call
mov
xor
or
xor
adc
push
push
push
lock
sub
lock
jne
push
xor
loopne
mov
xchg
sbbl
iret
in
adc
inc
adc
xor
out
jo
aas
cmpsl
adc
loope
fcomps
mov
pop
sbb
or
pop
mov
fs
xchg
xchg
xor
and
ficoms
cmp
nop
and
aas
call
in
jge
add
sbb
mov
pop
push
loopne
mov
sarl
mull
fsubrl
enter
xchg
jbe
or
inc
repnz
push
inc
sti
jbe
icebp
bound
cmpsb
fsubrl
rorb
jb
cmp
test
adc
jnp
outsb
jp
jbe
xchg
dec
faddl
jae
imulb
insb
pusha
ja
or
xor
repnz
push
leave
push
gs
ss
inc
test
pop
ret
addl
add
cs
jmp
sbb
fdivs
mov
add
clc
jge
shlb
xchg
enter
add
fiaddl
mov
insb
shll
cs
adc
add
and
rcrb
push
addb
lcall
inc
inc
outsb
add
rcrl
mov
adc
mov
or
hlt
mov
rcr
push
ja
cmp
jge
lds
jne
sub
jbe
vandps
outsb
sbb
clc
ljmp
dec
jne
cwtl
mov
rorl
adc
pop
sbb
scas
add
jle
push
je
add
and
cwtl
xor
cmp
or
imul
loopne
mov
sti
mov
out
jne
bound
adcb
lea
push
push
and
jle
mov
xor
xlat
mov
js
sbb
inc
mov
in
iretw
outsb
mov
ja
dec
out
sbb
add
mov
mov
xchg
outsl
ret
adc
out
xor
adc
lcall
or
push
jle
insl
imul
imul
xor
cmpsl
mov
lcall
out
shlb
add
jb
inc
dec
aam
sub
mov
and
xor
je
and
insb
hlt
mov
adc
add
mov
lock
add
sbb
aaa
in
push
push
sarb
leave
cs
mov
cmp
imull
fcompl
jg
loopne
rcl
adc
popa
or
dec
mov
int3
add
or
imul
imul
inc
scas
ljmp
repz
fadds
pop
call
stos
pop
sahf
push
jns
dec
adc
sbb
aad
test
dec
enter
dec
insb
sbb
or
xor
mov
test
nop
roll
loopne
es
enter
das
call
or
mov
out
mov
adc
notb
je
or
adc
add
push
jns
and
adc
je
dec
je
in
out
jne
adc
or
xor
jmp
hlt
lea
xchg
rorb
out
dec
sbb
xlat
rcrl
adc
jp
lret
xchg
dec
pop
fsubr
push
lea
xor
push
mov
mov
or
jbe
and
mov
lock
mov
iret
mov
insb
or
or
dec
pop
inc
cmpsl
or
enter
fcmove
add
cld
mov
mov
aad
dec
pushf
imulb
ror
mov
adc
sub
dec
mov
sbb
inc
inc
roll
and
insb
icebp
inc
divl
inc
mov
inc
das
in
jge
dec
out
push
je
and
enter
jbe
push
mov
std
ret
lcall
xor
add
loopne
jae
sub
pusha
jle
mov
mov
mov
and
inc
adc
push
in
push
xchg
mov
inc
or
or
adc
add
lahf
push
inc
push
hlt
cmc
and
shll
shlb
mov
fmuls
jmp
pop
testl
into
mov
lahf
xchg
movsl
mov
lods
adc
cmp
lods
mov
and
mov
fwait
clc
push
pop
add
and
cmp
mov
pop
jbe
or
jnp
hlt
lock
cmp
pop
rcr
mov
test
daa
sub
adc
pop
cltd
lcall
repz
pop
jl
push
mov
xchg
fisttpl
call
pop
cmp
decl
insb
add
mov
loopne
int3
add
adcb
loopne
pop
addl
or
push
adc
dec
je
jae
adcl
mov
push
pop
test
movsb
phaddsw
jnp
add
xor
dec
pop
scas
scas
fucomip
sbb
pop
sub
aad
xor
shll
lret
rolb
test
or
enter
lods
add
mov
ljmp
mov
movzwl
data16
popf
pop
adc
lds
dec
pop
jge
xorl
dec
test
and
push
push
add
lods
ret
xchg
pop
or
lret
pop
jns
ret
sbb
or
jnp
cmp
cmpsb
jbe,pn
out
adc
mov
addr16
pop
pop
mov
pop
test
inc
push
in
mov
jae
out
fbld
add
std
add
inc
lahf
shll
add
dec
mov
test
mov
daa
out
push
jo
push
movsl
push
jo
push
rorl
icebp
dec
testl
ss
sarb
dec
je
dec
jle
data16
mov
call
loop
xchg
pop
mov
push
push
hlt
mov
or
insl
clc
test
hlt
mov
add
or
add
sbb
jb
ret
xor
loop
fldl
dec
adc
nop
adc
sbb
pushf
cmc
inc
pop
mov
add
xchg
or
pop
nopl
xor
and
mov
inc
dec
mov
sbb
jmp
fisttpll
push
add
ret
push
pop
jp
pop
ja
jbe
je
mov
lock
cmp
mov
push
jb
push
ljmp
jae
repnz
fistl
adc
and
add
jae
xchg
out
cmc
adc
call
xchg
push
push
mov
sub
mov
aad
mov
scas
xor
lods
push
mov
pop
testl
pusha
or
mov
mov
or
adc
sbb
cmp
aam
inc
pop
cmp
cs
sbb
adc
xchg
pop
jbe
mov
popa
pop
dec
dec
test
cmp
or
mov
lret
push
loop
jns
test
and
dec
push
dec
inc
or
in
or
dec
cmp
mov
or
movsb
push
cmp
aas
das
push
or
cmp
das
add
push
dec
cmpb
sub
lock
cmp
adc
or
cmp
xorl
jbe
xor
imul
imul
cld
push
inc
push
call
movb
xchg
xchg
xor
sub
sbbl
dec
mov
in
cmp
pop
jge
and
and
adc
mov
mov
cmp
push
cwtl
mov
adc
popa
dec
mov
dec
ret
dec
cmp
push
mov
inc
add
jge
enter
xchg
sub
jno
sbb
mov
xchg
jle
adc
jmp
lret
lock
sub
mov
rcrb
ljmp
in
les
je
ret
sbb
fisttps
inc
adc
add
fidivrs
push
add
aas
hlt
mov
jl
inc
dec
lock
add
sbb
adc
inc
add
push
nop
sbb
outsb
cs
in
add
xlat
adc
outsl
hlt
cmp
mov
or
mov
lock
inc
jle
rclb
cmp
jbe
sbb
pop
or
stos
repz
and
sub
js
adc
jg
subl
dec
imul
cmpb
sbb
or
push
push
int
imul
lea
sub
push
das
cmpl
cmp
add
xchg
push
dec
adc
jo
aas
fcoms
addb
sub
shlb
jl
inc
xchg
fstpt
mov
mov
mov
sbb
cld
setb
jne
or
or
es
mov
adc
sub
xchg
xor
add
push
mov
loope
js
fcmovnu
je
cwtl
inc
stos
les
stos
adc
in
fsubl
popf
adc
sub
pop
in
fcomps
inc
xor
push
and
push
pop
decb
loope
jp
ds
stos
xchg
push
outsb
push
pop
pop
or
fadds
or
or
adc
jmp
add
cmp
jbe
mov
test
cmp
cmp
inc
jne
lcall
shrb
rolb
out
add
mov
pop
adcl
inc
js
xchg
std
and
jb
cmpsb
sahf
or
adc
add
lcall
cmp
pop
sbb
je,pn
mov
sar
jns
rcrl
mov
jle
sar
pop
rol
xchg
or
cs
into
es
incl
sub
mov
mov
push
jo
push
stos
xor
jp
movsb
sbb
je
adc
or
xor
negl
or
inc
jmp
sbb
add
aas
sub
jne
rcrb
xor
je
xchg
and
adc
inc
and
sarb
adc
xchg
aaa
cld
push
sbb
add
and
cmc
jmp
in
cmp
xchg
add
mov
or
cmp
inc
cli
pop
sbb
sub
xchg
loopne
mov
jne
cmp
jl
mov
lods
out
mov
jae
cmpb
inc
insb
jne
cmp
inc
inc
dec
cmpsl
jge
mov
xor
mov
imul
inc
jmp
enter
andl
movsl
mov
adc
mov
pcmpeqd
mov
mov
xchg
jns
mov
sbb
and
pop
sbb
je
ss
out
in
pop
inc
pop
mov
fcomi
inc
das
aaa
pop
xchg
mov
pop
sahf
adc
outsl
das
pop
stc
push
pop
daa
mov
jo
rcrb
adc
or
orb
popa
orl
icebp
iret
out
inc
je
or
je
add
sub
mov
aas
mov
movsb
jmp
lea
adc
sbb
addl
insb
addr16
icebp
scas
jge
push
jne
cmpb
inc
and
push
inc
xor
push
dec
jmp
sbb
dec
or
xchg
jne
je
jg
scas
inc
js
inc
pop
ds
mov
jbe
fimull
js
out
cmp
push
sbb
mov
xor
cmpsb
testb
mull
cld
mov
pop
xchg
push
pop
in
jns
jecxz
pop
add
addr16
inc
das
lock
dec
mov
inc
pusha
fdivl
ret
es
inc
jo
add
jo
adc
or
push
addb
push
add
xchg
test
loopne
push
fs
add
popa
iret
testb
push
pop
push
daa
lock
in
jns
loop
pop
imul
mov
pop
xchg
inc
dec
xor
inc
inc
inc
mov
cs
inc
cmp
jns
popf
sub
test
ja
mov
adc
sbb
push
jne
dec
xlat
xchg
xchg
movsl
shll
or
xor
dec
pop
sbb
adc
adc
dec
xor
adc
and
sbb
in
ljmp
sarb
pusha
jmp
and
mov
mov
adc
or
divb
cmp
mov
loopne
add
jecxz
adc
jmp
shlb
adcl
das
lret
add
in
sub
sar
sbb
rolb
push
aam
dec
or
push
cs
pop
mov
jb
test
pop
add
outsl
and
nop
inc
sbb
rorb
mov
stos
adcb
shrb
fldl
sarb
mov
neg
jmp
or
je
mov
inc
mov
push
cli
xchg
push
push
mov
push
dec
divl
pop
mov
mov
inc
dec
or
or
jg
or
add
and
shll
pop
pop
xchg
rclb
ret
sbb
verr
cmp
and
sbb
mov
fwait
movsb
pushf
out
adc
addl
mov
sbb
pop
xchg
jge
mov
adc
jle
sub
fnsave
jge
add
or
ja
push
icebp
arpl
sub
jae
movsl
mov
cs
stc
shl
lea
jne
mov
push
movsw
jmp
lea
movzbl
cmp
je
or
popf
mov
lods
repnz
add
and
rolb
jo
or
rorl
sti
add
pop
pop
jmp
or
jp
sahf
jg
mov
das
dec
add
inc
inc
lods
or
push
lock
bound
mov
dec
xor
ret
dec
fsubrs
out
nop
mov
stos
ret
sbb
push
aaa
sarb
adc
cmp
jl
mov
xor
ret
add
rcl
insl
adc
fldenv
dec
mov
xlat
std
inc
movsb
je
sahf
and
cmc
adc
je
loopne
push
stos
xor
and
js
jmp
sub
out
sub
movsb
fbld
loop
mov
pushf
push
add
add
leave
mov
xchg
push
cld
inc
mov
mov
cmp
and
jns
xchg
lea
cmp
jb
mov
xchg
add
mov
fisttpl
mov
or
div
mov
inc
mov
je
dec
jne
loop
int
test
cmp
and
in
pusha
mov
mov
jecxz
lea
negb
jno
jne
ret
stos
adc
fwait
mov
pop
dec
ja
sbb
mov
loop
dec
add
lea
dec
test
cwtl
add
and
cmp
dec
push
sbb
adc
adc
std
adc
cmp
fld
lds
sub
hlt
testl
mov
add
and
and
adc
and
in
sub
sub
xor
sub
pop
addr16
push
sbb
and
sub
cmp
sahf
adc
xor
repz
sti
sub
xor
or
fcoms
movsl
rorb
js
dec
lds
dec
mov
ret
repnz
pop
fcom
and
or
mov
je
dec
or
sbb
mov
inc
dec
push
jne
hlt
gs
cs
xchg
pop
js
clc
adc
pop
sub
fxtract
sub
loope
fdivl
rcrb
sti
pop
in
dec
fldt
fstsw
fwait
mov
pushf
fbld
pop
jge
je
fidivl
loopne
jnp
add
out
add
inc
sub
mov
lret
in
pop
mov
xchg
inc
jmp
sub
mov
push
cli
fs
cmp
adc
cmp
jae
cmpb
jb
movb
outsl
or
dec
js
decb
and
mov
adc
xor
adc
cmp
sub
inc
xor
push
or
fcmovnb
ljmp
ret
pop
out
or
push
lods
xchg
rorl
je
push
push
xchg
xchg
adc
fiaddl
push
cmpl
push
das
adc
jl
mov
sub
jne
dec
add
dec
xor
fildll
cli
data16
in
jns
shlb
fidivl
cmp
fwait
sbb
xor
inc
sbb
sub
mov
and
jne
dec
jne
jmp
mov
add
stos
aas
and
mov
ljmp
enter
popa
shll
jbe
pop
jmp
add
je
mov
iret
mov
xchg
addr16
mov
adc
or
xor
jbe
add
cmp
and
data16
jmp
mov
jle
mov
pop
mov
mov
in
lret
pop
jno
bswap
inc
hlt
data16
je
iret
out
and
add
add
call
scas
dec
xlat
lea
push
jb
xchg
clc
dec
inc
cld
adc
sub
jmp
sbb
stc
and
add
jecxz
test
cmp
push
add
add
pop
loope
sbb
daa
mov
shll
stc
xor
stos
push
fists
sbb
adc
add
adc
insb
add
rcrb
adc
data16
push
ret
xor
xchg
mov
cmp
mov
inc
call
sbb
adcl
popa
incl
addr16
cmpl
cmp
in
in
xchg
xor
add
clc
mov
push
int3
and
shl
cmp
daa
pop
pop
mov
or
je
inc
mov
push
mov
or
or
or
jl
sub
add
mov
aam
nop
mov
lcall
adcb
cmp
lsl
rclb
lock
sbb
and
jb
int3
aas
ret
enter
adc
hlt
imul
sbb
fs
push
or
sbb
add
inc
xchg
lret
arpl
push
addb
addl
jmp
xlat
push
cmp
int
cs
dec
lds
push
filds
insl
add
insb
mov
jns
add
or
iret
shr
fisubs
inc
sub
inc
dec
add
and
daa
jo
into
mov
mov
inc
push
jmp
aam
inc
dec
push
push
das
loopne
ss
and
add
fnstsw
loopne
cmpsl
daa
or
in
adc
add
dec
xor
jl
xchg
shrb
xchg
mov
pop
js
insb
jmp
ss
out
mov
aas
flds
xchg
nop
pop
or
xchg
dec
push
lods
push
or
dec
and
and
add
pushf
cmpb
mov
imul
or
sub
pop
mov
mov
push
mov
and
loopne
jne
or
xchg
inc
dec
mov
push
lock
dec
lock
push
cs
ret
mov
push
mov
negl
pop
clc
add
cmc
movsl
mov
cli
dec
in
push
add
add
push
xor
mov
es
fs
inc
in
lock
inc
inc
testl
or
stc
insb
mov
push
clc
lahf
mov
add
rorb
in
imul
mov
daa
jg
outsb
dec
nop
push
clc
push
inc
dec
mov
clc
xor
es
shl
leave
xchg
adc
hlt
dec
xor
cmpb
fs
push
mov
or
sbb
cmp
imul
or
xchg
bound
sbb
bound
les
jp
dec
mov
mov
push
or
or
nopl
adc
push
outsl
cmc
cmpsl
loop
inc
into
loopne
aas
jo
mov
and
jo
xor
or
add
ret
xor
mov
std
testb
mov
fimull
aaa
mov
sub
and
pop
cmpsb
mov
add
cmp
sub
sub
pop
sahf
mov
and
inc
test
adc
xchg
leave
xchg
leave
adcb
test
jmp
dec
cld
andl
mov
outsb
fsubrs
mov
ds
or
xchg
scas
aaa
jle
sub
sahf
fcmovbe
notb
in
xor
gs
add
cltd
shl
and
mov
lea
xor
xor
push
js
pop
sub
dec
mov
push
mov
adc
add
push
sbb
rol
je
mov
popa
and
pop
je
add
xor
push
inc
pushf
jmp
xchg
fdiv
repz
push
pop
jge
mov
mov
fisubrl
pop
clc
sarb
push
add
loopne
adc
add
lahf
xlat
outsl
jne
insl
add
pop
aaa
std
push
fsubl
and
sub
je
inc
cmpl
shlb
cmpsb
jb
les
rol
xor
adc
mov
sub
int3
jo
fdivr
add
jl
mov
fdivl
dec
add
ljmp
pop
in
jmp
sub
adc
rcrl
into
mov
sti
dec
popf
jae
push
push
pop
push
loopne
lahf
rcll
sarb
div
push
loopne
inc
push
add
jne
push
push
fsubl
and
repnz
pushf
cmpsl
bound
or
push
or
stc
scas
adc
jo
jae
out
ja
aas
sbb
test
stc
pop
xchg
cmpl
sbb
in
hlt
or
ss
dec
xchg
and
aaa
add
sbb
ss
sbb
sub
mov
cmp
add
ret
out
std
push
sbb
xor
add
and
mov
or
cli
sahf
xor
mov
xchg
dec
rorb
fisubs
es
or
inc
movsl
add
dec
push
imul
lea
jle
sub
and
movsb
cmp
ja
adc
and
lods
or
jae
sub
push
mov
add
pop
mov
rcrb
clc
subl
mov
popf
add
or
mov
dec
lahf
mov
mov
sbb
test
call
add
jae
xor
aaa
add
xchg
jmp
xor
push
mov
jbe
js
loopne
fsincos
dec
xor
jne
xor
or
cmpb
lret
push
xchg
sbb
sbbl
cltd
sub
lret
or
gs
push
test
and
pop
adc
test
gs
and
fiaddl
dec
cld
adc
fisttps
bound
push
push
in
das
sbb
push
dec
dec
xor
sbbb
test
dec
sub
jecxz
js
fnsave
int3
pop
xor
adc
sub
dec
lods
push
insb
push
jns
pop
cmpsl
jge
gs
push
mov
pop
movl
pop
test
out
mov
sbb
lods
push
sbb
les
or
jne
cmc
sti
xchg
jbe
adc
iret
es
dec
les
sbb
xchg
out
add
enter
pop
or
or
dec
inc
jb
cmp
pusha
sub
and
inc
adc
xlat
daa
shlb
or
daa
push
call
inc
or
stos
inc
js
adc
mov
xchg
sub
arpl
es
mov
adc
mov
jns
fists
test
jp
cmp
jo
mov
xchg
push
adc
add
xchg
pop
jp
sub
mov
lea
mov
inc
inc
stc
in
ljmp
std
xor
or
adc
roll
lods
jle
xchg
pop
mov
jp
jb
push
push
or
divl
test
push
or
call
mov
cmc
adc
adc
jmp
lods
push
daa
mov
or
int
push
mov
xchg
cmpsl
in
shlb
test
in
sub
cmp
jnp
adc
sub
orl
insb
mov
testb
lock
dec
and
cmc
lock
test
cli
sbb
ss
jl
shrb
cli
popa
xchg
pop
xor
out
or
arpl
add
jecxz
hlt
addr16
stos
cmp
xchg
sub
add
sti
push
jg
dec
mov
sub
sbb
or
mov
and
adc
mov
push
call
jg
in
push
mov
pop
pop
out
jp
hlt
jge
dec
je
push
adc
ljmp
or
nop
cmc
divl
jmp
sysenter
jmp
mov
jne
jmp
out
lea
adc
inc
add
xchg
xor
jp
jl
cltd
fldl
and
scas
ret
adc
sbb
loopne
fmul
mov
mov
mov
inc
fidivrs
call
mov
or
pop
lcall
call
dec
dec
add
imull
orb
add
mov
jmp
xorb
and
and
inc
dec
push
in
mov
pop
shll
jo
mov
add
pop
test
jb
lods
add
pop
push
stc
inc
in
cmp
je
jmp
xor
inc
jae
jb
xor
and
sbb
mov
xor
roll
or
or
arpl
inc
mov
test
adc
pop
pushf
add
inc
pop
mov
int
sub
mov
lret
mov
inc
xchg
or
sete
das
xchg
cld
pop
jmp
sbb
les
add
loopne
mov
push
out
sbb
push
mov
ficompl
in
sbb
fs
mov
and
mov
cmp
imul
push
xor
jnp
jae
adc
xchg
dec
adc
mov
lods
shlb
loope
dec
xchg
movsb
out
pop
subl
xor
in
sub
nop
jge
mov
pushf
lcall
add
mov
loop
into
pop
orb
cmp
adc
dec
mov
dec
cmp
subl
push
adc
pop
or
jb
je
dec
push
or
fildl
cld
push
movsb
hlt
cmp
jle
pop
imul
jl
out
add
in
lock
or
pop
mov
adc
popf
mov
leave
and
push
insl
inc
sbb
int3
jmp
push
subl
sbb
fsubs
shrb
push
add
cs
scas
aaa
in
and
mov
popf
sub
xor
cmp
push
jl
out
jmp
pop
sub
out
das
sbb
push
pop
xor
push
mov
lds
in
aad
xor
cld
hlt
and
shufps
adc
dec
mov
inc
xor
sahf
xchg
lods
inc
xor
inc
pop
or
dec
mov
sbb
enter
loopne
adc
xor
push
mov
shl
cmp
push
sub
push
or
ror
lods
fwait
lods
orl
or
test
pop
add
mov
xor
cmp
lods
aas
xchg
loopne
cmp
jne
scas
ret
outsl
cmp
sub
adc
iret
push
es
ds
cmpb
ljmp
fdivrs
push
xor
sub
push
scas
imul
mov
shlb
in
mov
fildl
sub
pop
inc
dec
jne
add
cmp
imul
mov
push
push
cli
add
lea
mov
push
cwtl
lock
sbb
push
push
dec
push
pop
cmp
jge
rclb
adc
add
das
mov
jb
cmp
sub
push
ret
daa
popf
sbb
cmp
stc
push
daa
test
push
mov
cmp
mov
mov
jo
mov
or
and
pushf
aad
scas
jo
dec
syscall
mov
mov
loope
inc
sub
xor
push
sbb
nop
das
add
inc
jne
jg
lods
fistpll
inc
test
ret
jbe
cmovle
mov
test
and
pop
and
jo
ret
sbb
cmpsb
pop
push
fisubs
add
or
je,pn
and
sub
mov
or
adc
mov
mov
or
mov
cmp
jne
cmp
push
jle
ficoms
sbb
cmpsb
stos
xor
cld
popf
push
mov
add
lret
roll
gs
leave
test
sub
mov
push
cmp
stc
push
cmp
inc
cmp
and
cld
jns
test
idivl
push
je
and
sbb
push
or
mov
adc
rolb
jbe
cli
sbb
mov
fdivl
push
add
add
xor
lea
jae
dec
sbb
add
xchg
lods
add
cmp
test
fcomps
xor
pop
ret
adc
test
ret
fmuls
and
xor
adc
popf
popf
dec
cmp
xchg
or
add
push
leave
mov
and
pop
ret
and
clc
push
adc
jo
add
push
add
idiv
pop
popa
adc
xor
add
hlt
dec
push
add
push
xchg
add
sub
push
or
sub
sbb
pushf
mov
pop
cs
add
sbb
lret
push
or
decb
pop
jne
insb
pushl
movl
add
mov
lods
or
or
pushf
add
cmc
mov
sbb
add
incl
pop
movsl
or
push
add
mov
call
loopne
jmp
pop
rep
movb
rolb
fdivs
insl
test
xchg
lea
les
mov
out
jmp
daa
jns
fnstsw
pop
cmp
mov
scas
push
sarb
add
lea
outsl
inc
in
inc
sbb
sub
adc
cmp
out
lods
cli
scas
push
inc
cmc
sub
inc
push
xor
testb
cmpl
mov
icebp
fcmovnu
pop
cld
dec
movsb
sbb
add
lcall
pop
jne
inc
adc
cmp
and
adc
test
adc
fcoml
jecxz
mov
rcrl
sbb
lods
gs
mov
jnp
pop
sbb
nop
xor
xchg
xchg
inc
ret
mov
inc
fldt
out
xchg
or
or
dec
rorb
testb
aad
sbb
repnz
add
lock
push
push
sbb
sbb
ss
inc
rolb
dec
sub
jbe
repnz
add
mov
xorb
adc
test
or
xchg
push
xor
inc
jne
jae
in
sti
in
sub
sub
je
pop
and
out
or
mov
push
popa
dec
push
jmp
mov
das
add
pop
add
push
les
pop
and
stos
inc
add
cmp
mov
in
es
dec
push
or
adc
jl
adc
xchg
inc
mov
or
pop
popf
cwtl
mov
imul
mov
jbe
fdivrl
fdiv
push
push
and
adcb
mov
insb
jl
inc
ss
shl
shr
or
mov
or
xor
mov
ljmp
inc
rcll
ret
or
mov
scas
and
push
rol
mov
adc
cmp
or
inc
imul
mov
ret
inc
jmp
pop
pop
pop
inc
pop
and
ret
pop
push
jo
sub
mov
or
pop
int3
dec
add
enter
addr16
jne
pusha
int
aam
stc
test
in
js
loop
sahf
sbb
mov
cmpb
addr16
roll
adc
xor
or
push
je
pavgw
pop
inc
mov
sbbl
arpl
lea
int3
ss
pop
dec
adc
jmp
cmp
lea
push
push
ret
push
movsb
mov
cmp
mov
add
inc
fwait
jbe
mov
cli
cmp
jne
popf
sub
dec
mov
lods
imul
adc
inc
in
adc
dec
pop
popf
mov
jl
cmpsb
outsl
orl
sbb
push
popl
mov
rcrb
in
push
dec
pslld
mov
cmp
ret
sub
pop
mov
xchg
mov
add
shlb
adc
adc
mov
xor
mov
pop
push
or
add
pop
xchg
cmp
loopne
or
je
push
and
mov
hlt
push
mov
adc
inc
dec
fdivrs
inc
lret
or
rorl
fcoml
mov
mov
repz
dec
inc
gs
add
pushf
movsb
lret
or
adc
arpl
lea
cmp
add
inc
rclb
mov
test
fldenv
cmp
lcall
enter
mov
pop
sbb
into
dec
mov
cmc
nop
rorl
inc
adc
jno
inc
or
push
cmp
lds
nop
sub
inc
lret
dec
dec
pop
sbb
dec
xchg
iret
lods
mov
hlt
lods
inc
lds
inc
or
mov
lea
pop
enter
aas
je
pushf
push
xchg
fwait
mov
in
mov
sbb
inc
inc
or
sahf
pop
sub
pop
mov
cmp
adc
cmpsb
imul
shl
in
loopne
rcll
test
mov
or
sub
push
in
rcl
es
sub
pusha
xchg
mov
call
xorl
out
das
add
or
push
xchg
das
loope,pt
out
mov
fsubs
mov
mov
sarb
adc
rol
scas
mov
adc
jno
jb
xchg
pop
or
imul
mov
in
pop
fsubrs
pop
dec
sbb
inc
test
jecxz
imul
ds
popa
pop
add
jl
mov
and
jge
cld
inc
lcall
and
test
cwtl
dec
cmp
ffreep
mov
sahf
out
imul
push
clc
adcl
and
js
or
mov
and
pusha
aas
sub
movsb
rolb
cli
sub
or
adc
add
sbb
adc
add
pop
adc
scas
xchg
movsl
adc
daa
mov
out
xchg
jne
lcall
xor
mov
xchg
mov
push
lcall
mov
dec
jne
or
dec
push
jo
jne
rclb
add
aas
xor
xchg
pop
mov
ja
add
xchg
adc
push
clc
nop
inc
mov
cmp
imul
add
cld
cmpsb
pop
cmpl
mov
pop
push
movsl
jp
cmp
inc
incb
adc
arpl
or
mov
push
stc
sub
add
or
ja
shlb
leave
push
adc
daa
iret
in
stos
or
add
push
rorb
dec
ss
inc
aam
cmp
xchg
int
pushf
xor
sbb
dec
xor
cltd
push
sub
mov
ja
push
int3
pop
test
mov
subb
xchg
or
and
mov
aaa
in
ja
push
pop
adc
fcoml
aam
or
outsb
repnz
pushf
pop
loop
sahf
mov
das
in
mov
clc
repnz
sahf
negl
cs
in
push
lods
daa
iret
leave
jae
xor
adc
sahf
cmpsb
movsb
das
loopne
pop
fdivl
jns
fmuls
aam
fs
cmp
iret
rcrb
and
mov
pushf
insb
dec
mov
outsb
iret
leave
jae
mov
in
jns
test
movsb
in
mov
mov
inc
jae
outsb
iret
cwtl
adc
test
nop
js
iret
leave
cmp
push
ja
clc
xor
xchg
cmp
sub
aam
aam
test
mov
mov
mov
addb
mov
jmp
in
sarb
inc
mov
xor
adc
xchg
enter
or
jl
and
adc
or
add
push
sub
push
nop
sub
mov
movsl
adc
cmp
or
xchg
xchg
push
push
add
fdivs
add
jo
add
add
sub
adcb
mov
in
js
inc
sub
xchg
pushf
xchg
inc
jecxz
fisttps
pop
test
out
nop
inc
popf
sahf
xchg
inc
pusha
je
ljmp
jmp
movsl
sahf
aas
ljmp
test
scas
cmpsl
ljmp
ja
add
je
daa
test
add
xor
add
or
push
lahf
fdivrp
outsl
scas
clc
or
imul
ds
add
loopne
add
jae
inc
in
das
sar
es
fbstp
ljmp
aam
lods
and
imul
sbbb
fbld
call
pop
out
pop
clc
fistpl
mov
pop
sbb
xchg
pop
jno
movsb
mov
ljmp
add
xchg
ljmp
sbb
mov
cld
jns
xor
lods
push
xor
je
popa
cmp
jno
arpl
stos
add
std
or
xchg
add
popa
sbb
fwait
psubusw
std
xor
pop
lods
call
fwait
add
mov
pusha
popa
aad
fs
movb
push
aam
int
fnstenv
hlt
inc
es
insb
ss
dec
std
push
lock
incb
add
imul
mov
in
imul
inc
mov
out
add
fcoms
xchg
mov
mov
pop
mov
ret
pop
sub
mov
int
test
sti
jo
pop
orb
jg
xor
jbe
pushf
es
mov
adc
imul
mov
leave
pusha
xchg
inc
scas
jno
dec
mov
insb
es
xchg
bound
ss
int
inc
mov
add
jns
data16
iret
inc
fisttpl
inc
rcll
fldcw
rclb
les
pop
fidivrl
ds
aam
aad
shr
xlat
jbe
fisubl
lret
jmp
es
data16
pusha
jno
inc
stos
ljmp
sti
add
lods
pushfw
je
adc
mov
xor
dec
mov
mov
and
jle
decl
jmp
jmp
popa
in
push
aas
pop
push
lock
sti
pusha
fiadds
dec
or
psubusb
sub
adc
sub
loopne
test
fs
mov
ficoml
pusha
icebp
arpl
dec
in
insb
ss
inc
movl
imul
jo
inc
clc
cli
mov
sbb
pushf
data16
dec
pushf
outsl
mov
out
xchg
sbb
cmpsl
jmp
mov
repz
retw
rcrl
inc
sbb
push
insb
ss
int
pop
in
jno
push
int
mov
rclb
pop
jmp
pop
repnz
inc
fbstp
in
mov
pop
mov
jle
arpl
ficompl
lahf
data16
xchg
xchg
xor
sbb
pop
mov
pop
lock
cmp
lods
pop
ss
out
nop
or
mov
jg
lock
stos
cmp
inc
or
push
mov
mov
cmp
jae
jb
add
sahf
xchg
aas
mov
call
jo
jge
dec
outsl
inc
jp
push
dec
pushl
push
dec
dec
push
inc
inc
insl
arpl
jno
pop
es
pusha
pusha
push
pop
insl
dec
jnp
dec
insl
cld
mov
jmp
inc
imul
arpl
jb
imul
outsl
sub
pushl
fldt
xchg
adc
jecxz
inc
ss
lahf
mov
sbb
jge
clc
add
xorl
xor
cmp
repz
call
rclb
or
and
sub
push
and
xchg
cli
push
cld
jg
cmp
pop
outsb
sbb
pop
dec
je
xchg
inc
lock
repz
sbb
negl
ljmp
add
leave
and
add
cwtl
xchg
jae
aam
and
cmp
jmp
mov
lcall
lret
outsl
jns
in
jo
out
imul
lcall
jbe
adc
js
jl
ja
notl
fidivrs
sbb
std
incl
dec
popf
popa
mov
call
pushf
push
dec
popl
add
dec
roll
push
sub
mov
sbb
fldt
lcall
addl
pusha
jg
mov
xchg
mov
mov
popf
inc
test
stos
ja
dec
mov
jns
jnp
mov
sbb
jp
lret
sbb
inc
movsb
lret
stos
xchg
ret
decl
fdivrl
cmp
scas
stos
sub
fisubrl
jmp
mulb
in
xor
idiv
jmp
ret
dec
or
adc
cmpb
xchg
push
pushl
and
in
cmpsb
mov
pop
icebp
insb
pusha
rol
mov
faddl
fists
add
movsb
or
fs
pushl
jmp
sbb
pop
mov
imul
mov
xor
decl
paddq
pop
test
mov
in
cmpsl
and
pop
xchg
push
mov
sub
mov
decl
and
movsbl
mov
or
push
cmpsb
push
and
decl
imul
int
test
push
les
sub
insl
cmp
dec
adc
mov
push
fs
pop
cmp
cs
imul
les
ljmp
mov
fbstp
int
push
mov
sub
and
pushf
aas
arpl
cmp
mov
flds
clc
pop
es
out
ret
ret
and
das
into
sbb
call
xor
arpl
adc
scas
and
out
lods
sub
into
lahf
or
jmp
inc
pop
xchg
cwtl
xchg
jmp
mov
fs
lahf
jb
adc
incl
sahf
in
mov
test
lock
fs
jns
repz
push
sti
mov
dec
fadds
ljmp
sub
jne
push
mov
outsl
test
arpl
adc
hlt
in
outsb
andb
shll
ret
or
jne
mov
in
pop
fdivl
inc
mov
pop
cmc
fisubl
mov
testl
lods
ljmp
clc
incl
xchg
addl
pop
mov
cs
mov
push
sbb
add
jmp
push
mov
call
sbb
roll
cmp
fidivrs
lret
rol
xor
incl
pop
jge
cmp
adc
out
mov
in
mov
js
fisubs
push
pop
into
cmpb
mov
call
sub
addr16
mov
fwait
add
or
jg
out
pop
sub
dec
test
mov
out
out
xor
mov
jecxz
xor
das
clc
call
push
jle
adc
cmp
movsb
retw
xlat
ss
es
stos
clc
jmp
loop
mov
leave
sub
ret
and
mov
mov
ljmp
mov
mov
mov
push
add
int
sbb
shlb
call
ljmp
xchg
loop
mov
sbb
loope
repz
incl
cmc
outsb
or
aaa
adc
loope
dec
sahf
xor
and
inc
push
mov
ret
cmp
ljmp
push
or
adc
xchg
mov
jns
aaa
btr
inc
call
cmp
push
shl
stos
clc
inc
jnp
neg
mov
add
pop
mov
popf
adc
pop
xor
decl
push
mov
pop
ficoms
jp
hlt
mov
push
notb
dec
pop
fwait
pushl
lods
out
es
ud1
push
xlat
sahf
es
repnz
jmp
cmp
sbb
in
xor
push
add
add
psubusb
jbe
mov
test
add
push
push
sar
pushl
mov
or
inc
std
popa
mov
cltd
mov
push
inc
data16
jmp
jo
fwait
movsb
cwtl
sbb
xchg
jge
rcr
pushf
inc
pop
sahf
movsb
ljmp
mov
xchg
mov
push
jg
jnp
repnz
outsb
sub
push
fisubrl
shll
jge
call
cmp
ficoml
ffreep
mov
addr16
scas
inc
ds
cmp
mov
insl
aad
je
ljmp
aam
mov
loope
je
aad
mov
out
test
inc
js
lcall
cmp
xor
push
insb
nop
xchg
push
imul
in
xchg
dec
fdivrp
sbb
inc
sbb
call
mov
cmpb
imul
mov
js
mov
push
jecxz
iret
jecxz
lcall
test
push
xlat
push
cmpsl
out
inc
cmp
and
xchg
lahf
daa
aaa
cwtl
dec
xchg
jmp
incl
inc
adc
or
cltd
inc
mov
mov
lret
push
pusha
in
jecxz
mov
das
cld
loope
aam
cli
jmp
jae
xchg
test
dec
shll
pop
pusha
add
aas
pusha
imul
decl
jmp
jne
push
mov
dec
repz
cltd
sarl
cmc
cmpsb
jmp
loop
decl
fldl
cmp
sub
pusha
mov
dec
cmp
daa
cmp
aaa
and
decl
shlb
cli
pop
and
pop
sbb
ljmp
in
hlt
cmc
iret
in
loop
jmp
or
nop
cmp
sbb
decl
sub
ret
xlat
mov
lock
mov
cltd
sbb
lcall
mov
pushf
pushf
testb
mov
xchg
jmp
push
sti
cmpsb
lock
es
in
mov
add
jmp
clc
push
mov
daa
dec
cwtl
adc
xor
jmp
xadd
imul
cltd
rclb
cltd
test
xchg
in
inc
idivb
push
cmp
jb
and
and
xor
inc
xchg
sub
aas
adc
nop
and
add
or
testl
ret
enter
add
jne
outsl
mov
cwtl
dec
inc
mov
fwait
sbb
xchg
xchg
js
push
adcl
repnz
sbb
nop
add
xor
mov
sbb
shld
test
movsl
or
jbe
inc
push
add
push
pop
outsb
adc
mov
cs
dec
add
sub
push
push
xor
in
push
xchg
js
fstps
shl
jl
add
dec
int
cmp
mov
in
inc
pop
push
out
sbb
cwtl
mov
aas
and
popf
and
fsubl
ss
daa
mov
xor
fsubrs
subb
mov
push
sub
push
sub
fidivs
xor
int3
mov
cmp
xor
xor
filds
es
xchg
push
jo
add
jnp
imulb
aas
pop
invlpg
pop
sbb
ss
lods
mov
jns
fmul
dec
scas
jbe
or
sub
inc
push
insb
mov
shll
js
nop
push
add
test
sbbb
pop
fisubrl
sbb
cmpsb
enter
add
add
push
rcrb
int3
mov
cmp
aas
or
bound
add
call
mov
adc
adc
sbbl
inc
push
xor
xchg
movl
pop
ucomiss
push
dec
cmp
mov
loopne
lcall
ds
mov
das
or
arpl
push
imul
in
inc
xorl
push
dec
out
popa
outsl
sti
jo
or
sbb
push
dec
cmpsl
imulb
data16
jae
push
dec
nopl
inc
outsl
insb
fs
sbb
popa
pop
dec
insl
and
insb
mov
add
or
cmc
subl
pop
and
pushf
insb
pop
cmp
sub
clc
rorb
add
fidivrs
fnsave
xor
adc
xor
or
xor
xchg
mov
pop
mov
adc
xor
adc
inc
adc
push
inc
daa
lods
jge
fdivrl
in
dec
clc
lock
cmove
cmp
dec
dec
sub
pop
add
andps
jae
mov
sub
pop
aas
fsubrs
adc
outsl
push
and
adc
inc
and
adc
xchg
popa
jg
loopne
aaa
hlt
out
xor
sub
and
adc
add
and
sbb
imul
dec
pop
sub
pop
and
or
sub
or
adc
push
sahf
lret
xor
out
push
test
sbb
add
jge
mov
mov
add
inc
jmp
add
pop
dec
xor
data16
sub
mov
xchg
pop
dec
ja
jl
jp
push
adc
inc
push
cmp
cmp
fstl
sbb
test
mov
adc
pop
lahf
daa
aaa
jmp
movb
divl
jne
jne
jl
cmp
roll
lock
jae
push
jmp
push
jns
pop
push
cmp
jmp
push
jb
jno
pop
sti
jl
call
mov
or
dec
out
jle
adc
stos
in
ss
sub
jbe
test
aaa
in
call
pop
movswl
call
xchg
pop
push
andl
sub
fcomps
xchg
xor
push
loope
je
adc
pop
outsl
inc
and
insb
call
xchg
test
call
scas
cmpsb
test
jns
call
sub
leave
mov
xchg
sub
mov
pop
jg
pop
ret
jmp
pop
xlat
popa
mov
js
cmp
inc
arpl
mov
lcall
and
les
fidivrs
dec
mov
lock
inc
insl
sbb
js
and
cmpsb
inc
pop
push
js
cbtw
or
stc
nop
nop
stc
jnp
jnp
dec
mov
and
push
mov
jp
scas
push
imul
or
jae
sub
ja
call
push
pop
jbe
lcall
add
dec
pop
pop
add
push
pop
aaa
jno
dec
inc
ljmp
aas
pop
cmpb
add
pop
and
dec
mov
xor
sbb
and
into
movsb
cmpb
jne
xchg
sahf
out
mov
adc
js
sbbb
lods
dec
roll
push
pop
ds
sbb
xchg
rcrb
xor
nop
xor
dec
cmp
add
movsb
sbb
dec
insl
mov
cltd
pop
aas
xchg
pop
and
pusha
push
jo
xorb
and
nop
and
leave
inc
cwtl
mov
mov
pop
and
leave
shl
lock
adc
pop
and
xor
leave
inc
inc
pusha
inc
jb
pop
andb
loopne
add
and
cs
mov
and
add
shlb
mov
xchg
pop
leave
inc
lock
add
loopne
push
mov
adc
shlb
adc
orb
or
or
jo
sbb
pushl
sbb
and
push
dec
add
int3
enter
enter
fcomp
fxch
in
cli
loopne
jecxz
in
jmp
in
or
pop
jns
inc
adc
add
jl
leave
pushf
or
ret
mov
adc
repnz
push
and
sbb
add
jg
lret
xchg
and
inc
mov
call
push
jle
test
out
sub
jecxz
out
jle
mov
lds
mov
jbe
imul
cmp
scas
sub
adc
rep
dec
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
mov
or
push
push
int3
into
sbb
rorl
mov
call
popa
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
sti
ljmp
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
stos
pushl
mov
or
mov
pop
out
sub
imul
divl
decl
lock
xor
cmp
push
mov
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
jmp
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
jg
cmc
dec
inc
bound
ds
push
cmpsb
scas
mov
jmp
addl
cmp
xor
in
cmp
sahf
xchg
pop
jmp
push
movsl
mov
popa
mov
fsubs
addr16
repz
mov
subb
add
jmp
mov
push
pusha
les
outsb
bound
xor
loope
icebp
add
xor
xlat
lods
jle
sbb
add
and
lcall
xor
xor
inc
inc
inc
inc
inc
inc
dec
or
and
jb
in
pop
or
or
sub
sub
sbb
inc
sub
inc
pop
push
push
and
add
jns
mov
les
shrb
xchg
and
cs
cmp
in
add
adc
decl
sub
xchg
xchg
inc
pop
cmp
dec
add
pop
cmp
in
insb
add
jl
nop
cmp
mov
sbb
cmp
mov
and
cmp
sbb
add
xchg
das
pop
push
or
sub
sub
sbb
xor
fcmovnu
fstps
outsl
sbb
sbb
jg
jo
andb
je
cmp
js
fwait
popf
fsubrl
js
jg
pop
push
cmp
xchg
push
aam
js
js
js
sub
jo
jl
adc
dec
sbb
mov
mov
pop
inc
psubsb
dec
pushf
inc
jl
cmp
jl
sbb
dec
push
mov
mov
mov
sub
and
mov
push
decl
cltd
push
adc
out
add
mov
jno
pop
int3
dec
jl
inc
sbb
sub
mov
pop
jae
add
imul
jnp
xor
das
pop
push
xor
and
cwtl
xor
add
cmp
mov
lar
jb
add
jb
or
or
jb
or
push
cmovnp
add
sbb
add
add
lods
jnp
cmp
sti
add
push
xor
xor
fsubp
cmp
inc
cmp
add
cmp
rorl
xor
xor
ja
ror
xor
dec
sahf
out
sahf
xor
xor
xor
repz
jge
rorb
xor
xor
sbb
sahf
ja
mov
add
xor
push
out
xor
bound
jns
mov
dec
add
xor
stos
cmp
jo
mov
dec
add
addl
arpl
jns
mov
aaa
add
cmp
rol
pusha
rep
arpl
loope
fistpll
add
mov
cs
mov
sti
cmp
fstpt
sub
insb
dec
pop
dec
inc
jns
out
inc
inc
inc
inc
inc
iret
push
xor
jle
inc
inc
adc
repz
inc
inc
out
sahf
mov
push
mov
inc
inc
fiadds
cmp
repz
inc
inc
inc
inc
sahf
cmpsl
arpl
inc
inc
inc
and
inc
iret
repz
ds
inc
inc
inc
inc
jmp
outsb
inc
in
sahf
out
inc
inc
inc
inc
cmp
or
and
repz
inc
inc
sahf
out
cmp
inc
inc
inc
inc
inc
sahf
add
push
inc
inc
xchg
out
inc
inc
inc
stos
inc
js
pop
cmp
mov
jo
push
inc
jnp
out
fiadds
jle
inc
inc
inc
jno
clc
sbb
stos
xor
inc
lret
push
jns
mov
jle
inc
clc
sbb
stos
loope
jno
xor
rol
inc
jnp
inc
dec
sarl
inc
adc
pop
jl
mov
stos
xor
inc
lret
in
sti
out
arpl
jae
add
inc
push
inc
and
cmp
xor
xor
fisubl
jae
mov
inc
or
inc
loope
cmp
sub
inc
dec
inc
sbb
mov
jnp
insb
adc
add
jns
jp
cmpsl
repz
lods
push
mov
iret
repz
int3
aam
in
sahf
addr16
cld
jnp
or
jns
out
sbb
sub
cmp
jns
out
dec
push
pop
fs
out
sahf
insb
je
test
pushf
movsb
lods
mov
inc
adc
xchg
inc
inc
es
gs
out
fiadds
lock
sahf
mul
xor
shll
out
jns,pn
mov
mov
in
lock
int3
push
or
idivl
xchg
into
lock
jg
je
out
xchg
lea
out
popf
mov
mov
xor
jp
out
out
mov
adc
addr16
aam
int3
fdivl
cld
cmpsb
mov
pcmpgtd
call
mov
cmp
subl
subl
mov
fs
movsb
xchg
push
pop
cs
mov
lods
dec
ja
pop
ret
and
sub
pop
out
mov
pushf
jp,pt
inc
out
mov
dec
sahf
sub
imul
dec
cld
test
popa
jo
xlat
iret
mov
xchg
and
push
in
out
sbb
test
movsb
push
jle
fnstsw
jne
lods
push
inc
mov
push
in
into
inc
pop
adc
add
add
stos
adc
repz
xor
nop
pusha
add
inc
dec
pop
jo
inc
in
cmp
add
push
adc
jns
insb
and
sahf
xchg
mov
pusha
outsl
imul
xor
cs
insb
xchg
inc
or
pop
mov
adcb
cltd
inc
jns
push
ss
cmp
outsl
push
mov
sub
lea
adc
test
sbb
pop
add
push
hlt
push
jo
add
xor
push
test
pop
push
cmpsl
incl
inc
add
inc
add
or
push
push
sbb
sub
out
dec
push
into
mov
ret
add
daa
add
mov
add
add
add
xor
mov
jb
add
or
in
jmp
dec
add
add
add
and
jbe
add
fs
dec
add
jbe
mov
add
xchg
sbb
add
ficomps
lret
imul
loopne
mov
sti
add
add
add
add
hlt
add
cmpsb
addb
xor
imul
mov
jo
add
ret
xor
addl
decl
in
test
cmp
push
add
in
mov
push
add
inc
push
mov
lcall
dec
fcmovnu
add
mov
fnsave
add
mov
outsb
xor
ja,pt
mov
lock
adc
mov
sbb
idivb
rolb
je
fwait
pop
add
add
int3
mov
pop
pop
mov
es
fdivr
add
loope
sbb
xchg
cmpsl
sbb
add
add
data16
insb
das
js
dec
ljmp
roll
sbb
lret
mov
xchg
push
add
into
pop
rolb
or
sub
sbb
add
mov
lret
jb
cs
inc
lods
jl
push
imul
fiaddl
inc
inc
loopne
gs
add
sbb
sar
mov
repnz
adc
aaa
add
dec
mov
rorl
lods
add
js
in
fsubl
mov
pusha
xor
cwtl
std
add
incb
push
cmp
cmpb
mov
lds
or
cmp
sbbl
enter
loope
or
clc
aaa
mov
add
out
xchg
sub
mov
scas
addl
pusha
add
lcall
sbb
mov
mov
push
add
cwtl
fadds
mov
mov
ss
add
stc
inc
mov
sbb
add
mov
or
mov
imul
lds
inc
lcall
push
add
sbb
sbb
mov
add
mov
gs
mov
hlt
mov
lods
cwtl
cli
pop
push
push
mov
jns
mov
cmp
push
jno
push
add
ljmp
mov
add
xor
ret
out
add
xchg
je,pt
sbb
out
pushf
inc
jle
or
rcr
movsl
aaa
push
push
ss
mov
ret
add
fidivs
mov
mov
inc
ss
mov
add
fdivl
add
jbe
cmp
mov
ficoms
adc
pushl
add
add
or
sub
and
sub
lods
push
cmpsb
xchg
add
push
fsubs
sbb
fldt
push
pusha
int
and
mov
fadd
xchg
cmpsb
sarb
rcl
je
loop
cmp
or
shrl
shll
jl
add
rolb
out
pop
aam
jl
fmulp
enter
mov
int3
mov
add
mov
sbb
scas
adc
or
nop
outsb
push
fnstcw
test
add
enter
push
add
sbb
fldt
lcall
and
inc
mov
fsubp
dec
jo
inc
pop
xchg
mov
or
add
ficoml
pop
out
sbb
lcall
clc
add
push
push
jno
fs
sbb
mov
fstpt
cmp
sahf
clc
mov
andb
test
movsl
jb
sub
je
cs
xchg
xchg
cmpsl
push
push
in
push
cs
ret
mov
pop
mov
out
rcrb
xchg
aad
movsl
stc
repnz
mov
and
ss
sbb
add
je
add
push
push
mov
xchg
mov
jl
jg
pop
or
int3
push
fidivrl
and
adc
jo
push
cmp
cmc
sar
jnp
sbb
incl
add
add
push
int
jbe
xor
insl
ljmp
push
sub
inc
or
nop
insb
mov
das
push
jne
incl
xchg
push
add
add
pusha
sub
stos
sub
js
sub
push
fstpl
out
sub
test
loopne
fmul
ret
xlat
cmp
pop
adc
push
add
cwtl
js
inc
push
push
rclb
call
mov
pop
mov
call
add
jecxz
lods
lea
mov
insl
sub
clc
in
imul
sub
cmc
cmpsb
xchg
push
push
fistpl
popf
push
mov
aam
xchg
push
jne
or
xor
mov
fs
dec
inc
push
mov
mov
mov
lcall
fs
inc
pusha
push
int3
dec
add
add
push
push
and
pop
pop
decb
cmpsb
add
xchg
and
out
rorl
incl
mov
sbb
adc
add
lahf
pop
repz
push
insb
cmpsb
mov
add
jmp
sub
push
dec
sarb
call
mov
lods
inc
jg
or
ja
push
ds
adc
cmp
jo
in
push
mov
scas
inc
fmull
cmpsb
xor
add
sbb
sar
jbe
shlb
cwtl
jge
push
xor
das
fcomps
sub
pusha
repz
xchg
add
inc
xor
incb
add
fs
jg
addb
cmpsl
add
mov
cmpsl
mov
aam
leave
pop
xchg
mov
mov
sbb
lock
cmp
add
mov
int3
fstpt
pushf
add
add
cmp
add
add
add
dec
adc
ljmp
and
outsl
xlat
sub
into
sbb
add
add
loope
aam
or
dec
mov
pusha
push
add
xchg
sub
adc
addb
decl
add
push
sbb
mov
push
inc
jp
shlb
jae
sub
aas
adc
mov
lock
stc
pop
cmpsb
mov
outsl
mov
enter
push
jg
add
and
aas
add
or
push
cmpsb
lods
ret
mov
cmpsb
add
lods
or
pop
mov
push
mov
incb
daa
stc
add
aaa
jmp
dec
add
and
adc
add
add
leave
test
fisttpl
mov
adc
aam
sub
add
aam
sbb
fimuls
out
push
into
mov
dec
add
loope
subb
xchg
adc
sub
mov
test
push
ljmp
aad
shrl
frstor
int3
mov
adc
icebp
pop
out
cld
mov
mov
mov
add
jl
push
sub
jo
adc
or
or
test
fs
lcall
add
sbbb
and
clc
jo
dec
mov
add
aas
add
add
int
shll
push
shll
fwait
add
add
dec
movsl
or
pusha
sbb
negb
popf
lods
inc
jo
xor
inc
dec
int3
or
les
pusha
push
sahf
dec
push
iret
ss
cmpsl
shlb
sub
test
and
divl
cmpsl
repnz
cmpsl
rclb
pop
outsb
jns
mov
adc
inc
sub
stos
or
push
inc
xchg
stc
out
into
add
mov
xchg
fs
xchg
pop
mov
mov
and
or
push
inc
frstor
xor
pop
imul
cmpsb
scas
dec
lahf
mov
adc
xor
decb
int3
add
jae
and
stos
cld
xchg
dec
out
dec
mov
fwait
lcall
dec
or
insb
movsb
aaa
pop
rcl
scas
inc
sbb
xor
cli
pop
std
push
push
aaa
incl
scas
mov
mov
imul
cld
aad
sarl
ficoms
xor
or
add
dec
add
add
mov
subb
insl
push
jbe
xor
sub
sbb
inc
test
pop
or
rcrb
jle
iret
xor
inc
incl
lds
mov
push
sbb
lock
push
mov
adc
rclb
fstl
fstpt
rep
test
movsb
lret
incb
add
or
popa
push
xor
and
int3
mov
mov
out
sahf
add
add
cld
aaa
decl
add
ljmp
pop
add
add
test
add
mov
add
jg
push
jo
iret
iret
aam
inc
push
add
add
testb
adc
cld
iret
mov
aad
add
add
xchg
dec
sub
and
add
cld
iret
fists
add
loop
cmp
aam
add
add
add
iret
mov
sbb
add
loopne
ret
ret
add
and
stc
das
pop
add
out
add
sbb
rclb
popa
add
scas
add
pop
add
add
shll
xor
push
stc
inc
clc
or
orb
push
mov
sbb
push
out
aas
faddl
lea
stc
add
lahf
add
hlt
mov
lock
int
mov
add
jae
insl
ret
add
subl
push
push
cmpsb
inc
stos
out
stc
incb
repz
add
add
sub
dec
add
das
adc
ds
fmuls
add
aaa
iret
cmpsl
adc
and
in
in
lahf
out
stc
or
out
fdivrl
and
lock
out
repz
fwait
outsl
mov
jbe
jb
cli
outsb
sahf
dec
jae
add
movsb
mov
int
repz
add
mov
leave
jo
add
rclb
cltd
add
into
inc
aad
lahf
out
test
lret
pop
add
add
inc
loope
jbe
movsb
xor
iret
cmpsl
inc
cmp
adc
add
movsb
lahf
out
stc
ds
incb
mov
mov
cmp
bound
cmp
es
repz
fwait
mov
mov
and
dec
jae
add
pop
leave
loopne
lret
repz
push
mulb
adc
lock
mov
push
fs
pushf
scas
add
pushf
pop
cmp
aas
xchg
xchg
out
add
ljmp
stc
test
arpl
mov
gs
xchg
mov
test
inc
jle
sub
outsl
sub
add
push
sahf
lahf
lret
movsb
push
add
mov
sarl
aam
pop
adc
pop
cmp
lret
dec
or
xchg
out
mov
jne
repnz
sub
cmp
fsubrl
jbe
cmp
xor
add
mov
dec
jle
fiaddl
pop
jns
repnz
and
lahf
lret
pusha
add
lahf
pop
movsl
dec
sbb
cld
push
push
sahf
push
test
mov
mov
add
xchg
xchg
aas
iret
cmp
mov
mov
stc
test
pop
add
gs
inc
int3
out
lods
sub
bound
cmpsb
adc
push
mov
xchg
repnz
sub
pop
sahf
dec
in
cmp
jae
inc
or
dec
in
jb
mov
push
add
push
faddl
pushf
imul
and
lcall
mov
adc
pop
inc
adc
xor
rcrl
jecxz
shlb
cmpl
xlat
pop
sti
aad
loopne
pop
incl
sub
sub
or
sub
es
fidivl
jg
add
and
fs
mov
call
mov
xor
mov
std
sub
sbb
lods
clc
mov
adc
cli
add
fs
cld
aas
aaa
adc
xor
or
lahf
nop
add
adc
adc
subb
decb
mov
mov
xchg
in
dec
pop
adc
add
mov
rcl
or
insl
or
add
mov
sub
sub
or
movsb
mov
mov
out
mov
test
lret
xor
cmp
lcall
ltr
jp
rolb
fidivrs
sbb
cs
decl
fwait
insb
push
rcl
loop
mov
dec
arpl
add
cli
popa
cmpsb
mov
push
jl
popf
or
adc
push
enter
cmc
mov
mov
ret
push
xor
in
sbb
pop
adc
add
xchg
add
test
stc
sub
or
sub
add
cmp
add
inc
jbe
das
inc
pop
hlt
mov
sub
addr16
movsb
incb
or
adc
in
cs
fimull
push
pusha
or
inc
mov
push
push
push
test
cmp
mov
scas
xchg
adc
push
sub
out
add
lcall
call
ljmp
jp
cmp
adc
pop
sbb
loopne
inc
sbbl
or
jecxz
hlt
mov
into
xor
sbb
adc
jae
push
int
sbb
cli
lock
addl
pop
push
push
test
fs
hlt
cmp
add
add
push
in
cmc
frstor
sbb
stos
and
and
clc
pop
add
jecxz
stos
lods
fs
mov
jne
mov
cmp
in
jb
mov
fs
rolb
lods
sub
outsb
cwtl
push
ljmp
mov
and
xchg
stos
stos
inc
aad
lcall
mov
mov
mov
cmp
adc
pusha
sbb
pushf
sub
stos
ds
call
sbb
lret
and
mov
imul
mov
add
test
ss
adc
outsb
dec
push
push
mov
mov
xor
add
push
mov
push
adc
aaa
test
lods
insl
mov
or
mov
push
fsubs
aad
out
jbe
bound
test
mov
mov
or
arpl
push
and
mov
cltd
add
in
cli
js
xchg
sbb
icebp
mov
fisubl
inc
pop
into
mov
sub
mov
push
out
sbb
dec
mov
fcmovnbe
dec
fildl
or
scas
mov
push
jg
shlb
ds
sbb
sarl
cmpsb
aad
sub
or
les
inc
and
cltd
push
rclb
sahf
cwtl
pushf
test
push
fcmovnbe
pop
ret
add
xchg
pusha
inc
inc
push
push
in
sahf
jecxz
sub
in
cld
stos
sbb
and
lahf
outsb
and
add
mov
jmp
adc
jne
jle
add
pop
mov
xchg
les
adc
pop
cmp
xchg
lock
jl
pop
mov
int3
push
push
insl
mov
xor
push
pushl
iret
sub
jmpw
sub
push
push
jle
add
loopne
add
mov
pushf
aad
cmp
xchg
enter
adcl
mov
call
sbb
pusha
dec
scas
push
jnp
sub
add
mov
fcoms
out
dec
es
dec
inc
fwait
mov
addr16
add
pushl
push
addb
sbb
pop
les
movsl
xor
sbb
ret
push
mov
test
sub
dec
cli
loopne
push
add
or
cs
push
std
mov
sub
mov
add
push
jnp
adc
sub
repnz
push
stos
fiadds
les
not
stos
inc
push
or
add
div
in
jmp
insb
stos
sub
in
inc
lret
loop
mov
mov
outsb
dec
dec
add
call
stos
mov
pushl
sub
push
test
mov
inc
mov
daa
push
mov
outsb
loop
ljmp
movsb
jl
push
add
dec
push
jae
stos
ljmp
add
into
fwait
enter
mov
pop
jle
and
push
lods
push
jmp
mov
testb
mov
mov
add
sbb
inc
repnz
incb
or
pusha
mov
aaa
sbb
cmp
movsl
add
push
sti
subb
rolb
adc
adc
adc
sbb
popf
orb
add
ljmp
and
ss
out
fs
rcl
rcl
dec
call
xor
sub
mov
bound
xor
mov
xchg
and
or
or
movsb
test
adc
mov
push
push
pop
push
mov
popf
jmp
hlt
fildll
loopne
stos
test
cli
push
dec
add
adc
dec
std
push
icebp
mov
subb
jo
pop
test
xor
sub
dec
stc
adc
test
mov
mov
ss
test
inc
push
mov
jp
movl
stos
and
sbb
je
jne
daa
push
adc
data16
sbb
dec
jp
push
add
mov
mov
imul
inc
mov
int3
or
str
cmp
add
fldl
push
jae
jbe
fs
xorb
cmp
fcoms
dec
jmp
mov
pusha
push
inc
bound
jle
sub
cmp
retw
xor
lods
notb
bound
cmpsb
nop
sub
sub
test
test
sub
jle
fwait
mov
xchg
loop
jge
inc
add
fwait
stc
lahf
aas
ret
lea
lahf
scas
faddl
add
mov
mov
mov
scas
mov
cmp
inc
mov
scas
cld
daa
int3
add
mov
jne
daa
add
ret
roll
xchg
les
lods
mov
xor
pop
cmp
sub
mov
sub
xchg
cltd
ss
adc
into
sub
jo
push
mov
out
loopne
pop
mov
call
mov
call
in
mov
enter
dec
jo
or
ja
dec
scas
mov
test
sbb
dec
ljmp
imul
leave
fs
pop
cmc
or
jb
inc
adc
jns
scas
popf
rcl
sar
sbb
repz
sub
pop
into
xchg
xor
dec
mov
pop
fdivl
enter
jle,pt
rolb
ljmp
lret
lcall
add
movb
cld
add
xor
int
aam
push
movsl
inc
add
jbe
addl
decl
jmp
stc
add
mov
imull
pop
in
pop
cltd
xor
sahf
add
into
cmp
jp
stc
adc
push
add
and
out
sub
ret
pop
stos
mov
in
fs
push
rorb
mov
mov
cmp
xor
je
xor
ds
insb
xchg
movsl
out
or
push
in
push
out
mov
rclb
inc
inc
mov
cmp
push
add
popa
inc
mov
clc
adc
lods
sbb
cmpsb
pop
lods
push
push
xor
mov
xorl
jbe
insl
inc
mov
mov
hlt
pop
mov
xor
mov
cmp
mov
and
rcrb
xor
push
cmpsb
push
ficompl
add
jbe
test
xor
sti
inc
push
add
mov
scas
inc
ljmp
cmp
or
arpl
cli
iret
test
mov
pop
sahf
ds
add
or
gs
push
dec
ljmp
and
cmp
mov
push
and
xor
lods
arpl
jmp
pop
mov
fcoms
add
lods
push
mov
cmp
pushf
cli
inc
pushf
push
pop
sbb
mov
adc
enter
nop
sbbb
dec
push
shlb
or
inc
xchg
test
mov
xchg
add
fcomps
les
pop
gs
mov
pop
and
dec
pusha
aas
mov
hlt
and
loop
add
cmpsb
pop
pusha
sbb
add
pushf
cmpsb
mov
fcomps
pop
mov
jns
xor
mov
fdivrl
adc
dec
shrb
push
pop
sbb
cld
aaa
add
add
add
shl
repnz
rcrb
lcall
mov
mov
loopne
sbb
add
inc
rorl
popf
insb
fs
jno
pop
les
fstl
mov
mov
xor
mov
scas
add
outsl
add
js
dec
xor
lret
lds
cmp
sub
mov
dec
xchg
mov
cmp
xor
and
cwtl
mov
or
test
pop
adc
push
add
push
lods
es
xorb
push
inc
fldt
push
pmaxsw
lret
jae
or
hlt
rolb
lcall
push
imul
lcall
push
push
xchg
push
ja
test
lcall
sbb
aam
inc
or
xor
xchg
sahf
out
pop
inc
je
xor
cmpsb
mov
in
push
mov
into
xchg
mov
aad
mov
and
mov
sbb
lods
push
lods
mov
loop
hlt
popa
inc
subl
dec
xchg
repnz
stos
cmp
lcall
fcoml
cltd
shll
push
and
pop
dec
mov
xor
rolb
xchg
mov
xor
pop
jmp
mov
mov
push
push
aad
add
inc
xchg
cs
push
jl
jg
insb
adc
test
add
rcll
xor
xor
ljmp
stos
stos
push
mov
mov
int
in
insb
xor
sub
mov
mov
fsubs
xor
dec
jle
pop
inc
out
push
push
cs
popf
add
add
hlt
stos
jno
scas
mov
nop
cmp
les
push
add
push
stos
mov
mov
fisubs
xor
mov
mov
lcall
add
idivb
mov
push
in
push
and
sub
imul
sbb
sahf
movsb
push
mov
mov
xor
in
pop
in
pop
sub
stos
out
push
inc
sahf
mov
mov
push
xor
movsb
fmull
xor
popa
and
stos
pushf
mov
adc
mov
faddl
in
sahf
js
testb
sub
je
shll
adc
dec
push
push
inc
sbb
data16
incb
lcall
sub
loopne
pop
sub
lcall
movsb
mov
xor
insb
cmp
pushf
pop
fcoms
out
insb
inc
mov
aam
push
or
push
int3
xor
pop
imul
add
adc
push
cli
inc
and
mov
pop
xchg
add
pop
ss
test
test
sub
or
jl
test
inc
lods
mov
inc
stos
sub
sub
sub
push
nop
mov
out
into
lods
mov
jp
pop
dec
inc
add
fisubrl
or
mov
lret
mov
push
add
xchg
jl
out
mov
es
mov
mov
popa
xchg
adc
into
in
jle
add
cmpsb
push
mov
cli
cmp
mov
movsl
push
sahf
lods
clc
dec
mov
iret
inc
stos
push
pop
testb
mov
fiaddl
sti
enter
mov
addr16
dec
or
mov
das
lods
mov
loopne
add
push
rolb
lcall
fs
or
orb
ds
lea
push
les
add
push
xchg
pop
js
shlb
in
pop
fcom
jle
inc
mov
outsb
add
pushf
adc
pop
es
int3
push
dec
fcoms
push
jne
jbe
and
lcall
adc
mov
ret
stos
test
in
pusha
adcl
dec
ss
jb
xchg
mov
jle
xchg
mov
test
test
or
mov
lcall
sbb
scas
mov
mov
dec
add
mov
fs
add
jo
xorb
data16
les
push
jnp
jbe
nop
movl
or
and
xchg
fmulp
inc
add
and
jb
cld
stc
add
push
push
sub
sub
icebp
jbe
cwtl
pop
dec
add
rorl
inc
jnp
cwtl
pop
in
jae
mov
xchg
and
stos
push
inc
inc
or
xor
jbe
adc
cmpsb
mov
mov
mov
or
lods
xchg
aas
lods
add
mov
xor
xchg
cmp
movb
stos
xor
nop
add
adc
mov
hlt
rolb
pop
jl
insl
dec
dec
ret
push
sbb
loop
fistpl
inc
fcmove
cwtl
ficoml
mov
adc
or
lcall
insb
cs
push
adc
push
pop
ficompl
push
cmp
mov
push
aaa
sahf
pop
jp
and
ljmp
pushf
nop
loop
bound
in
adc
cmc
mov
test
mov
mov
loop
mov
jne
add
gs
xorb
mov
adcb
lock
sub
fcoms
sbb
je
and
pop
cli
es
mov
ss
adc
jb
mov
push
xchg
stc
cmp
add
pop
fistpl
sbb
pop
jl
inc
data16
cmp
ja
mov
enter
ret
add
xchg
adc
sbb
push
fwait
mov
push
hlt
mov
jl
adc
add
lretw
fstp
clc
cmp
call
sub
pop
cmpsb
fsubl
es
inc
mov
cmp
shl
hlt
pop
in
lods
mov
shll
push
lea
push
mov
add
pop
js
mov
sbb
push
cltd
mov
mov
and
add
daa
adc
fld
les
mov
sub
xchg
mov
adc
pop
or
pop
insb
lret
js
add
add
add
and
ficoms
cmp
pusha
fdivp
insb
add
lret
push
mov
add
cmp
xchg
pop
or
cs
mov
jns
clc
xchg
xchg
in
cmp
or
sbb
sub
test
push
pop
cmp
movsb
and
pop
sbb
xchg
jecxz
outsl
call
lret
mov
test
mov
xchg
adc
aad
ror
mov
xchg
xchg
js
add
mov
mov
lret
mov
jbe
dec
je
frstor
shl
cmp
pop
sbb
data16
add
xchg
ret
sbb
jbe
add
jg
mov
icebp
add
mov
jecxz
add
push
sahf
std
pop
mov
sbb
dec
pop
mov
xor
lret
loop
mov
pop
shrb
loope
dec
cmp
insb
rcll
cwtl
ret
fisubl
adc
push
jo
or
cmc
out
out
add
sub
xorb
divps
sbb
lds
or
mov
ljmp
mov
adc
xchg
arpl
adc
andl
push
mov
mov
pop
lods
mov
lods
mov
mov
pop
push
mov
sub
or
mov
and
mov
dec
in
mov
push
lods
mov
adc
lods
rclb
out
js
mov
icebp
movsb
adc
mov
xchg
stos
stos
dec
nop
lcall
mov
sarb
scas
add
cmp
jne
push
adc
ret
push
push
aaa
mov
aaa
fmull
and
jmp
fs
out
push
ljmp
cs
fwait
dec
sti
or
xlat
test
mov
scas
mov
arpl
in
jp
rcrb
mov
mov
mov
rcl
pop
pop
inc
pop
ret
push
in
or
push
and
pop
das
int3
jecxz
push
insl
int
jbe
pop
dec
pop
mov
cmp
outsb
lods
mov
mov
or
andb
dec
pop
mov
pop
aam
data16
jl
xor
pop
ljmp
inc
or
pop
out
rorb
sbb
pop
lea
sub
cwtl
mov
lcall
mov
call
idiv
mov
shll
aam
push
shll
ljmp
fcoml
pop
fildl
cmpsb
or
xchg
mov
adc
push
pushf
lods
jo
add
push
hlt
movsl
mov
mov
enter
cmp
sbb
cmp
sub
push
addl
jle
cltd
das
call
insl
xabort
add
je
int
mov
jo
lret
int3
lcall
sbb
sarb
lock
and
jno
mov
push
xlat
movsb
cmc
movsb
add
adcb
sub
int3
fadds
subl
out
pop
imul
pusha
ljmp
mov
test
imul
mov
push
test
or
test
sbb
jo
add
mov
push
jo
cs
cmpsb
mov
pop
mov
adc
mov
mov
mov
mov
cmp
stos
mov
stos
dec
je
mov
pop
add
popa
stos
std
adc
add
jmp
adc
push
adc
cs
cld
lock
push
test
insb
xchg
jle
add
addb
es
in
js
roll
ss
mov
pop
roll
out
pop
lret
mov
sub
jae
mov
mov
pop
into
and
or
addl
fldcw
and
jl
arpl
sub
push
or
mov
cmpsb
jne
cmp
fsub
scas
push
fdivr
imul
mov
mull
js
idivb
movsb
push
push
sub
stos
add
test
int
push
or
jb
or
mov
add
mov
sti
sub
push
adc
call
inc
xchg
jns
add
mov
and
push
inc
test
jmp
mov
jo
push
outsb
sbb
pop
addl
fsubl
sbbb
fcompl
xor
fwait
outsb
decb
nop
add
int3
pop
add
xchg
lods
add
sbb
inc
sbb
mov
jecxz
cs
movsb
add
fisttpl
inc
imul
pop
mov
aam
cmovl
pop
andl
je
jo
xchg
das
push
and
orb
pop
adc
push
push
data16
lret
sub
xchg
dec
gs
loopne
test
push
cmp
add
int
leave
mov
adc
cmp
jo
or
jl
outsb
push
adc
push
add
cmp
loope
fwait
inc
add
lret
mov
or
rcrb
aas
or
jo
fistpl
sub
jo
in
inc
es
fsubrs
push
dec
scas
jo
scas
aad
mov
data16
les
push
sbb
or
dec
jbe
push
xor
sbb
cld
or
mov
add
push
add
push
repz
int3
mov
lods
stos
mov
ds
sub
test
add
ljmp
mov
data16
inc
in
mov
lcall
cwtl
arpl
add
cwtl
push
insb
hlt
and
shrb
pop
test
nopl
lret
xchg
mov
sbb
jl
or
cmp
lods
jb
mov
mov
push
jo
dec
inc
mov
imul
jp
push
push
mov
repnz
xor
and
fwait
mov
pop
mov
stos
add
orl
bound
xor
fs
add
pop
dec
insb
addr16
bound
inc
outsl
mov
fs
pmaddwd
xor
cld
add
xchg
aam
add
sbb
push
ror
dec
dec
fs
loop
das
xchg
test
stos
ret
pop
sub
push
lret
push
mov
push
andl
arpl
push
data16
outsl
mov
mov
xbegin
adc
add
jp
mov
cmp
add
cmc
inc
addl
jbe
rorb
push
sub
shlb
xor
es
ret
stos
push
loop
and
xor
test
push
and
inc
inc
fisubrl
and
les
push
cmpsb
push
flds
repz
loope
push
lods
sub
push
adc
inc
loopne
cli
sbb
add
xor
add
jo
cld
jno
fisttpl
add
mov
push
aad
lcall
rcl
test
inc
lret
fs
sub
or
jl
and
cmpl
gs
sarb
lds
dec
lock
add
lahf
cmpsb
inc
inc
inc
inc
aad
mov
mov
test
orb
or
out
inc
adc
xor
xor
sbb
sub
or
and
push
fs
outsl
int
cmp
fisubs
mov
xchg
add
lods
lret
lcall
adc
mov
sbb
push
mov
cmp
or
call
test
testb
jbe
jmp
imul
addb
push
mov
leave
nop
inc
ja
fcmovb
in
mov
loopne,pn
sub
lret
inc
test
mov
mov
in
ljmp
pop
out
sbb
nop
cmp
push
sub
xchg
dec
xchg
mov
loope,pt
inc
fdivs
xor
loop
mov
push
lods
stos
pop
lock
in
mulb
sbb
sub
push
test
or
sub
xor
popa
sbb
loope
xchg
adc
cmp
dec
rcrb
in
test
call
cmpsb
sub
insb
mov
cli
adc
testl
pop
fwait
adc
cmp
in
rcrl
movsb
mov
or
fisubs
inc
adc
mov
or
movsl
add
nop
add
inc
add
or
mov
in
jg
loopne
lods
enter
mov
stc
jbe
jo
sbb
mov
mov
lods
jns
mov
cmp
add
cmp
jmp
adc
repnz
jo,pt
std
sbb
mov
jl
lock
lret
sub
es
call
cmp
or
sbb
xchg
cltd
xor
add
in
xor
xchg
cmp
sub
inc
pushf
push
push
jno
test
add
in
test
subl
inc
sahf
jo
pop
mov
aaa
fiaddl
decb
iret
adc
inc
pop
push
jae
jge
fisttps
sbb
cmpsb
sub
sahf
or
mov
jle
clc
jmp
fmuls
sbb
dec
and
sbb
ljmp
jg
stos
mov
jl
mov
add
add
and
push
push
add
or
and
fistps
int
aam
sub
hlt
dec
jae
pop
xchg
mov
jle
nop
sub
cmpsb
int
rorb
call
icebp
loop
sarb
test
je
pop
imul
nop
subb
jle
or
out
mov
adc
pop
sbb
add
out
jmp
push
je
adc
pop
jp
add
adc
sbb
mov
fcmovnbe
mov
inc
jne
addr16
lret
jmp
js
push
push
test
test
rolb
scas
pop
add
mov
pop
popa
or
xlat
and
pop
mov
loop
hlt
mov
push
inc
stos
cmp
hlt
shlb
mov
sbb
inc
inc
or
bound
dec
repnz
fmuls
pop
bound
or
nop
lret
push
mov
daa
push
dec
jl
xchg
cmpsb
xor
mov
add
push
shll
sbb
dec
or
stos
repnz
jae
aam
insb
push
or
xor
call
popa
call
push
imul
adc
sbb
sub
jge
add
dec
push
mov
sbb
rcrl
lods
jo
xor
dec
cmp
ljmp
lock
sbb
cmp
orl
and
pop
rcl
lcall
or
push
or
sub
dec
push
in
adc
sub
push
iret
or
mov
insb
xchg
inc
pop
push
adc
pop
pushf
sub
dec
jnp
dec
pusha
inc
repz
push
add
or
mov
dec
xorb
mov
mov
lods
add
and
cmp
out
lods
push
pusha
pop
and
incb
fs
adc
and
pushw
push
roll
and
ljmp
pop
push
cmpsb
sub
loop
test
jo
adc
mov
lret
jb
inc
shlb
scas
add
out
add
mov
adc
lcall
mov
xchg
aam
mov
mov
in
cltd
les
int
mov
xchg
movsb
and
jb
loopne
mov
pop
ss
or
inc
lret
mov
arpl
orl
xor
mov
xchg
push
rclb
inc
cmp
es
pop
test
xor
sub
sahf
mov
insb
cmpsb
push
insb
cmp
mov
and
adc
or
inc
xor
stos
adc
hlt
pop
mov
decb
test
push
push
das
mov
jle
cli
out
test
push
shrl
out
mov
and
lock
adc
sbb
stos
shrl
inc
adc
mov
pusha
jae
push
or
inc
inc
or
lods
fidivrl
fmul
pop
xchg
add
xlat
mov
inc
imul
hlt
cmp
decb
and
mov
sbb
stos
adcb
pop
aam
cltd
mov
mov
es
inc
je
xchg
popa
push
ret
xor
in
arpl
cmpsb
insb
xlat
mov
mov
sti
or
push
push
hlt
out
add
pop
sti
add
movsb
jne
mov
loop
cld
push
add
mov
subl
and
jo
pop
rcrb
pop
es
das
push
scas
inc
mov
ret
es
hlt
out
push
mov
push
stc
jbe
mov
loopne
pop
or
mov
shlb
and
ret
arpl
pop
dec
fstps
es
mov
in
push
dec
lcall
jo
shlb
add
punpcklwd
sbb
les
ret
outsb
enter
popa
jae
mov
xchg
push
push
ficompl
dec
xchg
rcrb
stos
fisttps
lods
lods
jb
push
mov
mov
xor
aaa
mov
sub
int
mov
xchg
and
mov
rclb
inc
and
pop
cmp
sub
dec
out
pop
jbe
jbe
lret
mov
mov
test
cmpsb
and
outsl
adc
mov
and
mov
dec
or
inc
adc
and
mov
mov
mov
push
adc
out
ds
push
aam
rcll
sub
xchg
js
mov
adcb
inc
or
iret
add
mov
or
or
sbb
out
or
adc
adc
icebp
cmp
pop
stos
test
ffreep
cltd
push
dec
mov
dec
std
add
and
mov
add
fs
lret
push
mov
aam
leave
jl
push
enter
mov
shlb
gs
adc
into
mov
mov
inc
int3
call
pusha
sub
jnp
mov
push
loopne
fs
push
xor
add
push
sub
data16
or
mov
add
pop
sti
inc
nop
lea
or
adc
push
mov
std
add
mov
scas
push
sub
push
jo
mov
push
sub
fs
or
sub
in
add
inc
sub
sbb
mov
xor
jle
in
push
xor
xchg
pop
add
sbb
sub
aam
scas
jbe
add
inc
inc
insl
dec
push
xchg
nop
je
xor
push
add
sbb
mov
imul
adc
xor
cld
testb
mov
and
sbb
jle
xchg
xor
cmc
xor
fwait
push
mov
insl
and
push
push
xor
xchg
jno
push
mov
test
or
inc
pop
adc
xchg
cmpsb
cmp
ja
daa
inc
inc
jae
push
cli
sub
push
jne
fisubs
fwait
or
fmulp
xchg
loopne
adc
cwtl
lods
add
sub
jb
popf
xchg
daa
jbe
pusha
push
xchg
mov
xor
je
push
dec
in
sub
fdivl
aam
cmp
pop
cs
pop
push
push
movsb
mov
mov
sub
cli
data16
fimuls
push
xor
fs
cli
stc
mov
shlb
jmp
inc
inc
push
test
pop
int3
fs
or
flds
mov
stc
add
or
push
cwtl
inc
inc
mov
mov
xor
movsl
and
push
lods
fwait
sbb
mov
and
add
mov
hlt
adc
inc
xchg
xor
or
push
jbe
or
insb
shr
adc
push
adc
dec
ret
cmp
and
enter
add
gs
mov
lcall
pop
mov
pusha
and
cs
fmuls
add
out
xor
mov
adc
pop
jbe
imul
push
mov
add
xlat
fcom
mov
sahf
xchg
fiaddl
stos
push
adc
scas
jl
imulb
lcall
sbb
or
lods
sub
mov
jp
sub
js
or
shll
push
and
aas
mov
push
mov
shll
in
xor
hlt
mov
clc
into
pop
jnp
in
jg
inc
mov
dec
add
inc
ret
nop
sub
push
push
mov
mov
fdivl
xchg
test
inc
sub
push
jbe
cmpsb
cld
fcmove
out
cmp
adc
push
xchg
push
dec
and
dec
pop
jl
mov
mov
jno
add
mov
adc
loop
and
arpl
aam
dec
adc
inc
in
add
movsl
lcall
pusha
xrelease
sub
loope
mov
mov
lret
adc
aam
lock
enter
mov
pop
push
inc
je
push
lret
lcall
mov
mov
or
cltd
xchg
cs
test
je
mov
dec
sbb
lcall
sub
popa
stos
pusha
jns
jo
mov
add
sbb
xor
adc
es
xchg
push
push
pop
push
push
rclb
mov
insb
inc
jbe
or
mov
shll
push
mov
lea
inc
inc
rcll
xor
in
insb
mov
cmp
pop
xchg
xor
pop
js
and
or
sbb
mov
loopne
push
sbb
add
rcll
adc
jae
and
sbb
ret
xor
in
addl
ljmp
inc
pop
xorb
loopne
sub
lock
mov
pusha
pusha
lcall
mov
pop
test
cmp
sub
stos
pop
xlat
jb
test
popa
pop
call
add
mov
add
jecxz
shlb
add
mov
mov
outsb
dec
inc
and
sbb
test
orb
dec
ljmp
add
js
and
out
or
data16
dec
outsl
not
rclb
lock
popf
xchg
inc
pop
cmp
mov
sbb
rorl
or
shrl
add
ds
push
sbb
inc
data16
adc
or
clc
adc
mov
aad
add
enter
hlt
in
add
pop
lock
jmp
or
scas
enter
push
and
jno
sub
cmp
push
or
scas
clc
mov
pop
imul
lcall
sub
add
add
mov
sarb
pop
sbb
push
sbb
inc
fldl
dec
je
inc
addb
xchg
fs
aad
lret
mov
jecxz
push
mov
xor
ds
mov
push
add
cmp
cmp
mulb
dec
add
rcl
or
in
jmp
mov
cmp
sub
mov
pop
mulb
jo
adc
sbb
xchg
mov
sub
xchg
sahf
lret
dec
inc
push
mov
xchg
pop
popa
loope
pop
inc
enter
pop
sub
test
pusha
pop
cmp
and
bound
inc
push
rclb
and
jae
repz
mov
dec
add
push
std
pop
out
xlat
shrb
push
rol
pop
xor
test
repz
shlb
add
les
push
aad
das
xchg
pop
iret
pop
mov
movb
xchg
xchg
cmp
test
test
push
jl
mov
in
push
test
adc
rcl
sub
or
shr
sbb
out
orl
add
mov
or
test
inc
pop
stos
inc
dec
inc
jle
insb
inc
imul
call
cli
hlt
sub
mov
mov
sbb
imul
adc
sbb
sub
adc
push
push
mov
add
push
pop
movsb
nop
push
divb
pop
scas
addl
xor
popf
enter
pop
lret
sub
pushf
insl
inc
bnd
push
mov
lret
ss
sahf
loopne
push
jbe
inc
push
insl
mov
insl
push
pop
pop
pop
mov
pop
adc
add
xor
mov
pop
ss
dec
mov
cmp
xchg
mov
addl
xor
jns
stos
jmp
sbb
fistl
lods
push
clc
push
test
mov
add
sarb
loop
and
and
insb
cmpsb
popf
mov
aaa
inc
add
dec
add
add
add
das
int
push
mov
inc
mov
sti
fsubrs
int3
out
add
cwtl
mov
arpl
mov
inc
jl
jl
adc
imul
incb
insl
add
lea
add
xchg
icebp
shlb
inc
insb
out
fwait
xor
add
xchg
or
sahf
mov
jo
faddl
push
xor
and
jbe
cmpsb
repz
mov
or
mov
mov
push
shlb
imul
sbb
dec
ss
test
das
dec
rcr
icebp
dec
adc
push
inc
or
sub
test
push
adc
mov
lock
inc
sarb
pusha
inc
add
push
in
popl
push
push
lods
ret
dec
fsubrl
out
sub
sbb
mov
out
out
push
jns
inc
in
call
lods
xor
je
sahf
ret
sub
lret
lcall
jo
dec
cmp
aam
fcomps
jnp
clc
cmp
add
sbb
test
ret
xor
into
daa
push
mov
scas
mov
cmpsb
mov
xor
jecxz
add
adc
cmpsb
scas
out
pop
rcrb
mov
pop
in
fldcw
pop
mov
mov
sarl
stos
xor
stc
xorl
rcr
jb
xor
inc
sub
fiadds
mov
push
push
in
addr16
aas
mov
faddl
adc
repz
les
cmpsb
mov
mov
fsub
call
int
jmp
lods
lods
cmpsb
test
xchg
fwait
loopne
xchg
sub
outsl
cmp
sbb
mov
ret
push
cwtl
add
in
mov
rcrb
push
add
fsts
xor
add
mov
mov
dec
icebp
imull
mov
popa
push
fs
pop
cmp
mov
rorb
mov
sub
xchg
push
pusha
ficompl
lea
sub
sub
rcrb
in
jle
arpl
inc
fldenv
sub
enter
aad
mov
push
subb
xor
or
inc
stos
imul
test
insl
je
fs
mov
mov
xchg
jle
inc
test
push
and
rcrb
stos
mov
sub
rcrl
mov
mov
xor
aad
and
out
add
sub
mov
sbb
ret
push
cli
mov
push
and
push
inc
xor
cmp
add
cmpsb
pop
push
fstl
push
mov
inc
mov
fs
sarl
push
cli
and
int3
adc
inc
add
stos
add
clc
and
jbe
cmp
push
hlt
outsb
movaps
xchg
add
popa
mov
stc
or
mov
push
push
arpl
hlt
lock
cs
insl
xchg
jne
stos
jle
mov
add
xchg
push
mov
and
lret
fs
cwtl
call
dec
iret
inc
pop
adc
shll
sub
fwait
adc
add
sbb
inc
inc
inc
sub
scas
or
inc
and
mov
ret
stos
mov
enterw
push
andb
push
movsl
sbb
gs
push
dec
add
ljmp
cmpsb
sbb
sub
das
ljmp
jp
es
push
aam
jo
sub
js
in
sub
add
dec
sahf
mov
adc
fmul
push
mov
pop
add
sbb
jbe
bound
push
popa
fwait
or
pop
or
fimuls
adcl
jbe
add
pushf
ja
aaa
or
mov
cmp
add
shll
mov
lcall
loopne
mov
fcomps
jo
jbe
imul
stos
ss
pop
rolb
sbb
ficompl
test
cltd
add
push
stc
ja
insb
cmc
ljmp
push
lret
lret
fisubs
pop
pusha
pop
dec
fadds
add
shll
loop
incb
sbb
sbb
and
push
in
dec
or
push
adc
loop
fs
sbb
fstp
xchg
mov
mov
lock
stos
xchg
mov
aad
mov
iret
lret
sub
rcl
push
fidivs
inc
add
mov
sub
stos
sub
roll
add
rcl
je
add
push
xchg
pushf
test
movsl
push
mov
or
adc
dec
mov
lcall
mov
dec
shll
add
mov
imul
imul
push
imul
push
xchg
push
push
push
jmp
fsubs
push
mov
mov
or
cmp
pop
cmp
cmpsl
cld
sub
in
insb
lock
int3
jne
and
sbb
shll
lds
push
call
out
push
lcall
pop
jl
lcall
dec
clc
sub
negb
shlb
sbb
jge
xchg
xchg
sbb
adcb
stc
sbb
call
sbb
add
int3
lcall
fistpl
dec
lcall
inc
cmp
ja
adc
xchg
xchg
xor
into
mov
sub
mov
cmp
repz
mov
lds
push
sbb
clc
fadds
fwait
xor
mov
sbb
test
dec
mov
rclb
imul
xor
cmpsb
pop
fwait
mov
fdivl
add
dec
shll
add
lcall
sbb
push
add
inc
lock
xor
jl
out
loope
or
test
cmpsb
aad
outsl
push
xorb
dec
push
add
fsubrl
sti
mov
pushf
fistpl
mov
inc
call
inc
sbb
cld
pusha
sbb
push
xchg
mov
adc
imul
xor
mov
fldcw
pop
xchg
sub
inc
mov
add
fiadds
cmpsb
rorl
push
movsl
pop
lock
add
adc
mov
or
rorl
in
jle
xor
es
hlt
add
mov
outsb
push
mov
imul
mov
movsb
mov
loopne
fs
push
test
movsb
sbb
mov
inc
add
add
adc
inc
push
xchg
and
lock
inc
bound
jo
mov
mov
pop
je
fucomip
push
and
stos
lods
mov
and
repnz
push
rcll
js
addb
pop
mov
jle
lock
cmp
pop
movsb
test
mov
addr16
add
dec
loope
jb
cmp
mov
push
je
jp
in
xchg
mov
mov
fisubs
icebp
mov
inc
mov
inc
xor
mov
cmpsb
push
into
add
xchg
pop
aad
shlb
enter
push
or
push
push
rclb
add
xor
push
and
mov
xchg
adc
bound
push
cmc
and
jb
test
stos
mov
mov
inc
dec
mov
cmp
and
or
mov
ss
insb
push
mov
insb
addps
pusha
sbb
cs
sbb
shlb
cs
and
push
lds
fadds
adc
andb
mov
push
and
int3
call
add
mov
pop
jle
sub
add
push
pop
loop
xchg
xchg
lock
xor
into
data16
lods
data16
inc
and
inc
mov
push
pop
ret
inc
adc
add
mov
push
lds
mov
mov
test
mov
cs
cmp
adc
iret
enter
sbb
sbb
fcmovb
add
loop
add
lcall
out
pop
mov
xchg
sub
stos
insb
insb
mov
add
mov
rorb
xor
dec
pop
add
mov
or
stos
sub
mov
jp
mov
xchg
or
inc
xchg
pop
mov
and
rcrl
int3
out
ret
test
mov
or
loop
adc
inc
fsts
inc
mov
ds
add
cmp
ljmp
movsl
mov
push
dec
in
mov
pop
and
push
inc
push
clc
js
test
bound
or
or
push
ja
xor
stos
sbb
scas
loope
add
les
jb
insb
add
les
jo
cmp
mov
jnp
cltd
mov
rorl
stos
mov
mov
mov
lods
mov
mov
or
jmp
push
movsl
add
push
mov
dec
jbe
enter
dec
pop
roll
add
adc
xor
lods
ret
cli
sub
lret
inc
pop
loop
sub
cmp
sub
test
pop
sub
push
andb
pushf
roll
push
push
hlt
add
sbb
push
xchg
insl
outsb
mov
sbb
lcall
mov
jb
lcall
mov
lret
xor
movsl
push
dec
cmpl
sub
in
add
fisubrs
mov
sbb
stos
ss
fsub
bound
adc
je
mov
mov
push
pop
jo
pop
enter
sub
mov
lods
mov
outsl
jnp
push
push
aam
mov
mov
add
xchg
push
loop
hlt
pop
shrb
jle
mov
xor
pop
jg
stos
jo
cmc
ret
or
jmp
push
mov
stos
inc
mov
dec
test
rcrb
test
shll
cmp
int
fidivrs
int3
ficomps
stos
push
or
inc
inc
js
xor
push
inc
inc
sbb
push
cli
add
mov
add
mov
pop
add
fcomps
sub
js
xchg
dec
or
sub
mov
clc
lcall
insl
call
dec
fs
mov
out
sub
or
push
adc
add
adc
mov
lret
add
ds
mov
lods
ret
push
jle
inc
ret
mov
mov
mov
mov
xchg
jb
leave
ss
push
add
lcall
ret
cmpsl
mov
mov
mov
push
out
jbe
int3
mov
adc
loopne
and
push
dec
test
xor
sbb
in
xor
push
je
es
inc
in
out
sub
jne
scas
jg
aam
adc
out
ret
hlt
sbb
mov
ret
test
add
cmp
and
sbb
lcall
sbb
popa
mov
sub
adc
scas
sub
fs
pop
add
test
mov
and
jo
push
fsubs
pusha
inc
xor
mov
sub
or
dec
bound
xor
jne
sub
mov
pusha
js
fidivrl
push
adcl
aam
scas
sub
add
loop
popaw
inc
xchg
imul
mov
push
push
lods
out
xchg
adc
mov
loop
mov
sub
lcall
add
out
sbb
insb
lods
xor
jl
pop
sbb
loopne
pop
addr16
push
jl
mov
sti
push
push
mov
mov
inc
add
pop
ret
push
sbb
push
adc
xor
push
pusha
lcall
push
cmpsb
shrb
mov
inc
push
add
cs
sbb
sub
fdivp
mov
lock
dec
test
call
cmp
lock
imul
add
es
mov
jbe
and
mov
enter
jge
inc
enter
add
stos
inc
xorb
mov
je
ja
scas
fcompl
push
push
push
xchg
mov
int3
addr16
lods
jbe
add
pop
push
cld
adcb
dec
rcrb
ss
add
cmc
dec
pop
rcl
cmpsb
lret
sub
dec
or
inc
pusha
jnp
push
mov
sub
xor
cld
push
dec
mov
stos
pop
pushf
pop
sub
sbb
mov
push
push
jmp
les
ds
adc
inc
pop
test
inc
adc
notb
pusha
insl
inc
and
mov
xor
fildl
mov
add
rcr
lds
sbb
mov
mov
pop
adc
or
enter
mov
xchg
fs
inc
cmpsb
push
je
push
movsb
add
sub
hlt
repnz
rcl
cmpsb
outsb
xchg
int
push
and
subb
andl
add
and
insl
andl
push
pop
sti
sub
mov
add
mov
jge
mov
loop
add
lahf
dec
or
push
adc
xchg
inc
dec
mov
imul
popa
mov
cmp
mov
xchg
push
adc
lret
pushf
gs
sub
mov
dec
movsl
push
cli
in
xchg
imul
jp
xchg
fildl
fadds
call
int3
add
push
int
aaa
sahf
push
stos
push
in
sahf
adc
sbb
mov
fisubrs
stos
xor
mov
sub
cmp
jmp
xchg
pop
test
mov
rolb
nop
lcall
in
inc
mov
cmp
and
in
or
sbb
call
and
xor
add
nop
jp
jle
lcall
adc
ss
out
fimull
movsl
mov
test
pop
inc
insl
sahf
push
mov
sub
pop
push
rclb
pop
push
xchg
add
jne
pop
inc
les
test
mov
cld
stos
mov
sbb
shll
jp
mov
ljmp
lea
subb
mov
je
andl
pop
shlb
xor
jo
cmp
mov
out
and
xchg
lds
sbb
mov
cmp
stos
adcb
mov
push
push
push
or
xor
push
cltd
scas
push
jbe
clc
cmp
les
xor
sbb
inc
sub
and
cmp
inc
push
sbb
or
add
xchg
add
mov
push
dec
mov
or
cli
mov
cli
ret
jle
and
cli
cmp
dec
sarb
lcall
addb
push
mov
ret
xor
push
cld
add
mov
jp
push
mov
add
xor
and
mov
adc
call
rcll
loop
mov
sbb
lods
es
inc
sub
or
push
sbb
pop
and
jl
shrl
sar
add
jmp
fimull
add
je
cmp
push
jbe
mov
rorb
dec
movl
popa
adc
jb
inc
dec
ror
pop
inc
loope
jmp
cmpsl
xor
int3
cs
dec
and
mov
sbb
hlt
mov
sbb
sbb
ret
pushf
push
add
int
sbb
add
add
inc
add
cmp
push
add
mov
and
push
aad
adc
repnz
adc
out
xor
add
scas
push
adc
sub
mov
inc
push
pop
es
add
dec
pusha
push
and
mov
fimull
sub
sbb
mov
jmp
outsb
imul
shl
or
xlat
jno
cmp
xchg
je
push
push
scas
mov
clc
outsb
sbb
and
in
iret
add
imul
mov
push
push
out
inc
dec
sub
cmpsb
sub
out
inc
sub
or
lods
ret
aas
ret
lcall
sbb
or
scas
xchg
adc
or
loop
jb
rcll
inc
sub
notb
add
mov
mov
pop
pop
roll
mov
aad
je
sbb
push
adc
stos
inc
or
fstp
adc
pop
fs
test
push
xchg
out
mov
fwait
sahf
cmp
data16
inc
loop
arpl
mov
cli
mov
sbb
mov
cmpsb
xor
fcompl
outsb
and
mov
pop
add
cmp
fs
lods
adc
sub
les
push
xor
mov
pop
loop
in
push
insb
or
fs
mov
push
cmpsl
sbb
xchg
push
push
icebp
push
lods
add
cmpsb
jmp
xchg
add
fdivs
imul
xchg
xor
rcl
insb
inc
push
lret
fs
push
test
nop
lods
push
add
lock
cld
jmp
mov
add
shlb
cmp
and
cld
or
or
insb
cmp
dec
das
arpl
cmp
iret
sub
sub
roll
push
push
lahf
ret
fisubl
in
push
je
insl
bound
clc
sub
lret
add
or
sub
xchg
inc
pop
add
jl
and
test
mov
in
sarb
mov
add
push
adc
xor
or
stc
cmp
in
imul
orl
int3
or
sub
testb
jle
ds
data16
pop
xchg
mov
inc
pop
test
stos
fcoml
mov
push
lods
cmp
xchg
push
js
out
jmp
jae
or
adc
jl
and
pop
mov
add
add
xor
jne
mov
or
sub
mov
aam
jnp
lret
mov
loopne
mov
xchg
xchg
xchg
xchg
push
or
lcall
dec
xor
xor
mov
push
push
jbe
orb
loop
push
in
or
cs
rorb
and
xchg
popf
in
fsubl
or
lods
ss
and
pop
mov
add
mov
pop
xlat
mov
test
pop
jo
and
stos
sub
mov
fwait
movb
cmc
ret
pop
dec
popf
in
pop
jl
mov
stos
xor
and
add
es
dec
jl
cwtl
lcall
add
xchg
add
lahf
pop
push
adc
lock
out
mov
mov
push
cltd
and
roll
push
sub
ret
or
out
dec
push
mov
pop
mov
add
sbb
mov
inc
push
inc
shr
aaa
pushf
or
aam
mov
adc
sbb
adc
fiaddl
push
push
xchg
cmpsb
jb
nop
pop
sbb
xorl
movsb
int
push
or
inc
sub
mov
fdivrs
push
add
roll
cmpsl
push
cmp
clc
bound
mov
push
lea
push
lods
stos
into
dec
hlt
add
movsb
stos
insb
push
mov
push
cli
mov
or
inc
mov
stc
mov
push
shll
aad
push
sub
fcom
mov
push
dec
xchg
add
xor
repz
je
outsb
push
roll
das
shlb
mov
add
insb
pop
add
mov
loopne
fimuls
gs
addb
stos
int3
adc
mov
xor
jecxz
xor
cs
popf
pop
sub
jbe
addr16
lock
lods
fs
daa
scas
or
inc
stc
sub
popa
mov
xor
jne
adc
out
js
lret
push
xchg
cmp
sbb
imul
stos
jne
cltd
cmpsb
lahf
aas
or
rclb
jp
lock
mov
lods
loope
ja
outsl
mov
mov
mov
add
ds
outsl
dec
add
fimull
inc
sbb
push
push
mov
sub
in
lcall
imul
and
clc
cmp
shlb
sbb
sub
or
imul
shrb
jle
fcmovnbe
mov
lods
nop
sub
lds
push
ret
add
and
test
inc
mov
mov
orl
imul
mov
mov
xlat
push
gs
push
mov
into
push
push
xor
gs
hlt
sbb
push
pmuludq
mov
mov
ljmp
or
xor
push
mov
ret
mov
pop
push
push
pusha
jl
cmp
jbe
mov
or
repnz
fdivrs
xor
pop
loop
inc
andl
ss
cmpsl
xchg
movsb
jo
test
lods
mov
add
fmuls
imul
sahf
repnz
leave
mov
rcr
sbb
xchg
data16
sahf
push
and
rorl
push
mov
sub
jge
shr
test
push
js
dec
sti
shl
subb
cs
pop
add
cmp
out
inc
push
ret
xchg
cmp
dec
jbe
adc
pop
jnp
pop
fsubl
cs
test
push
or
push
sbb
mov
add
inc
push
movl
or
shrb
push
inc
adc
test
inc
add
fcomp
mov
lret
inc
push
punpckhdq
pop
icebp
or
loop
or
push
mov
mov
xchg
add
pusha
andb
mov
adc
jmp
and
mov
insl
in
xor
xor
insb
rcrb
push
mov
cmpb
push
imul
add
lods
xchg
call
mov
mov
sbb
int3
lods
mov
sub
and
sbbb
mov
mov
enter
mov
push
xchg
rcrb
mov
jg
mov
cwtd
dec
call
add
insb
sbb
xor
or
sub
and
sub
ss
aad
fisttpl
stc
test
push
inc
and
repnz
push
xchg
inc
mov
js
push
mov
pop
mov
mov
idivb
pusha
xorl
dec
mov
add
dec
rolb
cwtl
mov
xor
imul
pop
mov
cmpsb
mov
mov
in
mov
inc
push
pop
cmp
mov
add
nop
push
ficompl
pop
lret
or
and
and
inc
and
mov
in
add
push
sbb
cmp
xchg
lock
rclb
jo
push
add
sub
push
pushf
mov
stos
sub
xchg
or
cmp
movsl
jb
mov
lret
add
mov
aam
add
in
cltd
xchg
pop
mov
sbb
loop
test
jle
push
sbb
ljmp
xchg
fwait
mov
lock
addb
pusha
mov
sub
scas
push
mov
ljmp
nop
mov
fcoml
sub
xchg
div
add
add
fs
pop
and
cli
int
sub
xor
add
add
sbbl
aaa
mov
xor
add
dec
inc
inc
imul
fwait
xor
xchg
sbb
flds
dec
dec
shll
std
add
out
iret
dec
jb
or
xor
shll
mov
sbb
push
pop
push
sarl
lret
shr
daa
shll
mov
pop
and
xor
pop
and
push
repz
inc
push
outsb
int3
mov
xor
lods
inc
mov
inc
jae
cmp
add
aad
push
repz
mov
aaa
out
std
ret
adc
jb
jp
push
add
dec
mov
xor
jp
xchg
filds
dec
cmp
lods
cmpsb
sub
mov
out
mov
push
dec
push
push
daa
adc
scas
add
xchg
imul
in
and
and
lahf
adc
gs
cwtl
and
lret
out
mov
stos
sahf
enter
loopne
into
mov
xchg
pop
sbb
xchg
add
mov
push
xor
pop
mov
mov
ficomps
adc
mov
and
data16
mov
and
sub
mov
xor
js
lcall
sbb
fidivrs
inc
mov
clc
enter
mov
stos
insl
inc
jnp
push
ret
fidivl
cmc
jle
inc
insl
inc
pop
xor
mov
out
push
je
lret
sti
mov
es
ficoml
mov
xchg
mov
jno
jb
or
mov
clc
dec
cmp
xor
cli
pop
aaa
pushf
mov
pop
ja
outsb
jl
inc
xchg
sub
or
sahf
mov
inc
lcall
push
xchg
pusha
or
or
shlb
mov
inc
ret
test
and
add
lret
jp
inc
dec
jnp
xchg
stos
shll
js
xorb
push
test
mov
mov
adcl
push
mov
dec
pop
popa
xor
push
cwtl
test
out
popf
add
test
xchg
lods
fucomp
mov
add
subb
gs
or
rolb
push
shl
pusha
fimuls
dec
add
cmp
mov
jo
sub
jo
mov
jl
jbe
push
mov
inc
cmp
or
or
sbbb
aad
je
mov
and
aam
mov
or
push
fisttpll
jle
arpl
add
dec
cld
lock
cmpsb
xlat
das
inc
sti
pop
inc
mov
add
xor
push
sarb
inc
pusha
fs
mov
mov
lret
loope
or
pop
cmp
ficompl
data16
rolb
cli
subl
xchg
pop
sub
gs
enter
and
sarl
ror
movsl
mov
outsb
push
bound
xchg
mov
mov
and
sub
push
push
test
ds
xchg
or
and
mov
mov
dec
jbe
push
sbb
dec
flds
or
dec
test
push
daa
push
aad
sub
insb
xor
mov
sbb
sub
mov
jbe
enter
mov
mov
and
adc
idiv
dec
loopne
outsb
jne
or
xchg
inc
inc
xchg
pusha
ss
lods
test
add
mov
ret
mov
pop
or
into
adc
push
test
test
dec
push
lcall
xor
adc
out
mov
or
inc
jb
int
sub
std
xchg
push
add
fisubl
jp
nop
mov
xor
push
aam
inc
xchg
dec
adc
jl
andl
jecxz
pop
pushf
push
fsubl
mov
fmulp
out
popa
adc
dec
cmc
mov
pop
pusha
insl
ret
push
out
push
and
jbe
mov
inc
adc
imul
mov
push
pop
xor
pop
sub
jp
adc
rcr
loop
push
pop
lds
ds
add
push
add
sub
inc
sbbl
bound
in
cmpl
rorb
jl
xor
mov
xchg
in
and
int3
jecxz
add
xchg
adcb
lcall
je
sbb
inc
dec
cli
add
mov
fs
push
sbbb
jbe
inc
jno
or
push
push
test
pusha
cmp
pop
cmp
mov
testl
insl
xchg
add
fsubrp
add
inc
jge
mov
roll
pop
sbb
push
inc
inc
mov
mov
daa
loop
clc
dec
rcrb
jbe
push
pusha
popfw
ss
mov
jo
jo
xchg
insb
mov
stc
stos
add
xor
cmpsb
mov
cmpsl
lret
xor
addb
ja
jmp
mov
lret
dec
shll
ret
iret
test
or
pusha
add
jnp
sbb
mov
lods
subb
mov
inc
add
pop
fs
stc
add
clc
xor
lods
aaa
hlt
xchg
mov
imul
mov
inc
div
mov
push
data16
mov
add
fnstcw
lcall
xor
push
push
aam
mov
cmpsl
add
int3
pop
and
add
jecxz
xlat
pop
add
inc
lret
push
stc
mov
mov
adc
and
xchg
xchg
shll
jns
cwtl
out
hlt
lds
pusha
jnp
test
cmc
add
xchg
es
push
cli
and
xor
push
fadds
pushf
mov
loop
push
in
xor
inc
jle
adc
and
lods
loop
dec
xchg
cli
cmovns
xchg
add
or
outsl
and
rcrb
sbb
add
bound
mov
test
pusha
xchg
ret
inc
cld
in
push
lock
popa
lock
jo
mov
xor
cmp
adc
mov
loopne
out
rcl
sub
inc
lock
or
lock
push
out
jns
xchg
inc
sub
ret
rorb
mov
mov
sub
push
mov
int3
pop
sub
int3
insb
dec
add
push
inc
dec
movsb
mov
lock
fdivp
sbbb
fs
or
adc
cwtl
pusha
pop
mov
or
loop
movsb
gs
mov
in
ljmp
sbb
pop
shlb
insb
dec
loop
fsubrs
mov
pop
jae
cmp
mov
mov
ja
adc
jge
dec
les
into
add
push
adc
mov
pusha
dec
insb
sbb
adcb
jne
inc
adc
xchg
mov
sbb
sbb
cmpsb
hlt
mov
adc
push
xchg
xchg
ss
adc
insl
push
je
lods
cmp
lods
insb
or
sub
push
ljmp
mov
stos
push
ss
lcall
mov
cmpsb
add
xchg
nop
lret
cvttps2pi
pop
test
push
inc
add
xchg
pop
rcrb
or
push
shlb
sub
mov
sar
xor
mov
popa
pop
adc
xchg
stos
mov
repnz
push
js
lock
in
ja
mov
jmp
sub
sub
insb
push
mov
add
loop
lcall
add
clc
push
ficoms
mov
add
and
out
jb
push
fldenv
enter
fcoml
mov
int3
dec
sbb
mov
popl
in
cltd
adc
mov
fs
addr16
mov
rorb
clc
dec
mov
ljmp
cmp
xor
jbe
mov
lock
push
mov
push
rcl
aam
mov
cmpb
in
xchg
in
mov
xchg
in
pop
shll
ficoms
add
cli
add
and
dec
and
mov
cmc
mov
dec
outsl
jle
add
ret
or
pop
popa
fisubs
mov
dec
add
stos
rcl
fucom
test
pop
ljmp
mov
test
data16
mulb
mov
or
push
inc
lahf
add
fildl
in
cmp
xchg
add
sub
xor
jns
sahf
pop
sbb
add
xchg
pop
xchg
test
aad
outsl
lcall
sbbb
xor
cmpsb
inc
add
fidivl
xchg
jbe
mov
sbb
xlat
pop
insb
scas
mov
std
imul
sbb
into
push
movsl
bound
cmp
in
dec
mov
stos
xlat
mov
xorb
mov
adc
mov
dec
mov
loop
shl
mov
adc
pop
dec
repz
dec
and
push
mov
and
add
xchg
jo
fcom
xor
popf
sub
jo
or
fmul
mov
mov
cmp
sub
repz
stos
loop
xor
cmp
xchg
iret
mov
or
lcall
or
xchg
popa
xchg
in
call
movsb
xchg
outsb
bound
dec
sub
add
mov
addr16
fwait
int3
fwait
push
push
add
mov
js
mov
pop
add
or
mov
mov
cmpsb
inc
je
cmc
cwtl
push
adc
push
mov
lock
mov
or
push
loopne
dec
lcall
aam
lds
sbb
mov
lret
xchg
lock
mov
and
out
cmp
jmp
dec
add
sbb
mov
rclb
stos
fsubrl
add
rolb
mov
sub
mov
dec
add
andl
xor
add
sub
cmp
repnz
pop
push
cmpsb
sub
push
or
jl
and
inc
mov
cmp
movsb
lret
mov
data16
sub
call
or
lock
sbb
mov
bound
adc
mov
jecxz
outsl
dec
leave
adc
mov
andl
mov
es
aam
inc
int3
inc
sub
jecxz
sbbb
sub
sbb
daa
push
or
sbb
pop
xor
and
inc
cmp
lock
add
insb
sbb
je
mov
clc
test
movsb
movsb
adc
push
mov
mov
inc
into
aam
stos
cmp
ss
fs
aam
or
xchg
mov
mov
push
xor
xchg
and
test
sbb
mov
sub
push
data16
movsb
dec
xchg
push
jmp
insl
bound
jo
sub
lods
push
mov
push
repnz
mov
pop
push
jb
mov
xlat
lods
push
mov
cmpsl
mov
and
xchg
jo
push
fstpt
push
shll
fmuls
stos
mov
inc
stos
mov
push
cmc
mov
cmp
jbe
cmp
out
int
faddl
add
adc
xor
push
int3
ficompl
imul
or
cmp
xchg
mov
std
cmp
data16
aad
rorl
sub
es
adc
inc
lret
aam
rcr
into
add
inc
dec
dec
or
xchg
add
mov
jp
push
icebp
add
addb
stos
dec
ljmp
pusha
popa
insl
push
andl
loop
inc
cmp
mov
nop
fidivs
sub
add
out
dec
add
pop
inc
sbb
fwait
jb
pushf
enter
mov
mov
or
negb
xchg
addb
adc
dec
ret
push
jl
push
icebp
and
pop
in
pop
jno
nop
cmpsb
jecxz
pop
or
scas
push
rcrl
stos
ss
rcl
arpl
inc
add
pop
out
pusha
shlb
mov
cmc
and
add
mov
pop
xchg
push
cmp
jle
push
sub
pusha
or
imul
mov
pusha
adc
jl
mov
mov
hlt
icebp
dec
push
rcll
adc
fisubl
dec
ret
lcall
or
pop
shlb
lds
daa
xor
into
push
sbb
shrb
insb
mov
pop
dec
mov
shr
jae
mov
sarb
or
jno
xor
jge
mov
popf
scas
data16
jbe
add
lret
push
cwtl
xchg
inc
shl
sahf
cmp
xchg
fld1
push
pop
mov
stos
arpl
xchg
and
mov
mov
testb
enter
in
or
pop
filds
xor
sti
xor
adc
sahf
xchg
inc
repz
push
xor
stos
insb
dec
pop
pop
push
push
push
add
subl
jb
mov
xchg
inc
mov
push
push
stos
push
push
subl
xchg
stos
popa
xchg
pusha
cmpsb
es
mov
mov
pop
jo
insl
sbb
rcrb
push
rcrl
dec
mov
dec
mov
call
bound
pop
cli
add
test
in
push
jg,pn
scas
testl
mov
loopne
mov
or
push
mov
lahf
dec
mov
or
ds
ds
test
lcall
jne
lods
ficoml
fisubrl
xor
cwtl
push
ror
sbbl
fcmove
inc
add
sub
mov
mov
icebp
cs
inc
inc
mov
xchg
or
or
inc
lea
cwtl
aas
jp
ljmp
fldcw
xchg
mov
mov
sbb
test
out
mov
mov
out
mov
or
and
add
test
push
cmp
cli
cs
jp
cmp
data16
push
fsts
dec
pop
xor
sbb
pop
mov
mov
out
push
add
dec
aaa
add
push
faddl
add
inc
dec
xchg
adc
roll
mov
je
mov
inc
sbb
sbb
mov
int3
and
adc
bound
add
inc
push
je
push
or
and
xchg
cmp
nop
mov
ds
insb
add
aam
xchg
stc
leave
cld
push
push
fcoml
adc
sbb
add
lahf
add
xchg
mov
pop
xorl
outsb
test
inc
in
cmc
orb
and
cmp
add
mov
mov
cmp
stos
enter
inc
jno
dec
in
push
inc
jp
pushf
stos
xchg
cwtl
xchg
jmp
adc
fs
push
mov
cltd
divl
in
jo
push
enter
and
jle
mov
ret
loop
in
push
or
cmp
and
insb
jb
inc
mov
test
gs
es
add
dec
test
sub
sub
or
aam
pop
xchg
in
sbb
push
add
pop
movsb
mov
add
and
lret
addb
lods
add
add
xorl
adcl
add
add
cli
mov
push
lods
pop
mov
popl
fldt
mov
es
cmpsl
pusha
mov
or
mov
push
fidivl
mov
add
stos
enter
lret
in
lods
shrl
push
push
dec
mov
into
ja
add
mov
jle
adc
in
sbb
xor
rolb
cmp
out
sbb
jo
add
mov
pop
dec
aas
xorl
pop
pop
lods
cmp
add
or
mov
arpl
push
xor
int3
push
add
lods
push
push
add
mov
inc
jb
fdivrs
lods
ss
pop
les
mov
gs
adcl
shlb
or
or
jb
les
outsl
cli
stos
sbb
in
in
sub
cmpsb
data16
mov
inc
add
adc
add
ljmp
icebp
jp
xchg
mov
adc
mov
or
cmp
add
out
and
jo
scas
dec
mov
mov
push
movsb
jecxz
push
fsubrl
test
xchg
mov
mov
push
jp
hlt
and
stos
mov
sub
out
push
fs
movsl
mov
jle
pop
cs
bound
xchg
push
pop
out
outsl
pusha
inc
inc
push
les
jne
adc
movsb
jno
lcall
push
cmp
or
adcb
test
xchg
mov
mov
jecxz
stos
sbb
sbb
mov
pusha
mov
or
jbe
aam
lods
mov
mov
rcrl
cmp
or
insb
pop
mov
push
push
sub
xchg
cld
sbb
mov
mov
adc
adc
add
lods
add
mov
stc
cmp
int
or
push
cmp
xorb
jne
out
xchg
xchg
rcr
pop
jl
mov
fldt
adc
xor
inc
xchg
pusha
xorl
lods
mov
pop
add
addb
dec
imul
push
dec
sub
shr
mov
sub
shll
xchg
push
loopne
mov
push
jecxz
insl
push
lock
lcall
pop
and
enter
pop
data16
pusha
repnz
or
cwtl
repz
mov
pop
test
lcall
cld
adc
xchg
mov
mov
adc
fistpll
adc
and
outsb
fsts
lods
insl
and
dec
sti
mov
push
xchg
mul
adcb
fmull
es
cmp
data16
clc
mov
stos
inc
mov
jae
dec
in
or
xchg
popl
sbb
std
sbb
in
sub
dec
arpl
dec
and
rclb
cltd
and
xor
and
dec
and
out
or
adc
and
push
imul
out
fisubrs
scas
lds
push
dec
into
rclb
test
daa
dec
push
or
xchg
es
add
inc
xor
push
pop
mov
dec
add
or
cli
test
scas
mov
js
jle
pop
push
sbbl
pop
push
out
mov
mov
shll
cmc
out
xchg
roll
cwtl
or
sahf
and
pop
test
jae
add
push
mov
mov
ljmp
push
inc
addr16
and
jns
pusha
adc
fstpl
jae
outsl
or
sbb
les
in
or
cld
jo
mov
rcr
repnz
add
ds
dec
jb
hlt
mov
fldcw
lcall
dec
pop
lea
pusha
outsb
push
jle
enterw
mov
xchg
push
sub
test
or
stos
adc
or
add
test
push
pop
push
push
hlt
stos
cld
mov
fadd
jb
jecxz
cmc
subb
movsl
pusha
pop
dec
jb
push
push
push
cld
inc
inc
add
sub
shlb
testb
lret
adc
inc
out
leave
adc
dec
rcl
lock
mov
xchg
add
mov
ss
cmp
or
or
mov
sarb
in
repz
mov
or
lret
aad
push
push
jb
bound
cmpsl
icebp
mov
nop
jae
add
mov
mov
cmc
push
or
push
pop
dec
fildl
pop
cli
pop
cmpsb
pop
cmpsb
outsb
test
pusha
mov
dec
xchg
push
push
icebp
jo
push
dec
mov
push
adc
bnd
sub
mov
ret
cmpsb
and
jo
pop
add
repnz
jo
mov
ret
or
adc
repnz
test
jbe
push
stos
jo
xor
push
loop
jbe
ficoms
cmp
xchg
sub
jl
add
inc
lahf
mov
add
add
push
jg
mov
add
jge
sub
sbb
or
xor
inc
push
mov
push
test
cmp
andb
test
pop
sbb
ja
xor
jo
movsb
add
inc
loop
pop
cli
ret
mov
add
les
adc
push
outsb
add
lock
in
sub
fadds
clc
push
sub
adc
shlb
sub
push
inc
sub
je
xchg
add
push
cmp
mov
test
jp
mov
cmp
and
lock
add
lret
xor
fcoms
es
push
fiadds
fdivs
cld
push
movsl
cmp
out
jns
mov
jmp
stos
add
js
mov
xor
daa
in
cs
test
call
add
ss
nop
out
dec
add
or
outsb
inc
or
push
or
xor
xchg
jl
iret
lcall
xchg
int
mov
gs
pop
xor
loopne
add
add
pop
mov
shr
jecxz
fdivrs
xor
lods
sbb
or
mov
ret
push
sarl
push
mov
inc
lea
pop
and
fs
mov
sub
ljmp
mov
mov
push
mov
pop
daa
add
aaa
cmp
aad
push
bound
lods
andl
fs
lods
cmp
push
mov
dec
popa
xlat
sub
lods
int3
mov
data16
cmp
bnd
add
scas
dec
push
loopne
push
sbb
push
sbb
cwtl
xchg
cwtl
sub
add
mov
mov
and
dec
jp
rcrb
jo
dec
sbb
adc
push
xor
in
inc
pop
ss
jp
and
dec
outsb
in
mov
xchg
mov
and
xchg
push
xor
jmp
xchg
xchg
xor
xchg
fimull
dec
aam
pusha
adc
cmpsb
icebp
movsb
mov
gs
cwtl
adcb
mov
in
sbb
enter
js
jle
mov
xchg
fldlg2
in
les
xchg
mov
ret
mov
aam
lock
and
jmp
sbb
nop
or
xchg
aad
mov
mov
inc
cmp
add
inc
rcl
aad
mov
fisubl
stos
pop
adc
inc
divl
cmpsb
out
sub
add
push
test
pusha
loopne
cmp
fs
inc
inc
push
sbb
mov
mov
fwait
dec
es
mov
sub
xor
and
mov
jne
popa
shrb
movsl
sub
fwait
ja
ret
icebp
add
push
pop
scas
shlb
pusha
mov
cmp
jno
jne
pushf
data16
push
add
lock
les
insb
add
xchg
fsubrp
mov
and
push
shl
sbb
sub
push
js
pop
les
jl
xor
pop
test
xchg
sub
imulb
jne
cs
push
rcll
pop
dec
mov
sub
add
test
lock
and
jb
inc
ret
add
bound
ficoml
add
sti
add
sub
and
outsb
mov
sub
sbb
inc
mov
stos
pop
sbb
test
pop
xorb
out
std
fs
push
and
add
sub
std
xchg
mov
lods
push
lods
inc
push
scas
je
cs
pop
push
add
push
enter
out
xchg
lret
mov
jbe
mov
mov
xchg
call
cwtl
adc
inc
test
loopne
xchg
mov
lods
mov
xor
fiaddl
dec
jo
lods
sbb
add
cs
or
in
push
in
sub
lods
jb
or
inc
incl
jae
cmovbe
mov
out
bound
sbb
lret
mov
fcmove
jmp
adc
sbb
and
sbb
push
test
xchg
add
inc
inc
test
leave
push
ret
sbb
pop
lret
ret
xor
stos
push
ret
or
jmp
cmp
fiaddl
mov
adc
insl
mov
cwtl
loope
movsl
mov
adc
jle
or
inc
pop
inc
add
iret
jle
adc
cmp
fdivrs
pop
aam
xor
sub
bound
in
dec
es
sub
add
jb
lret
push
test
mov
outsl
pop
add
sbb
sub
sub
loop
xchg
data16
loop,pn
ljmp
insl
mov
neg
push
cmc
ss
fs
mov
mul
sbb
sbb
and
ss
push
addr16
test
inc
sbb
mov
bound
sub
adc
push
das
cwtl
shrb
xchg
jp
test
mov
dec
adc
ret
cmpsb
add
in
stos
push
dec
dec
mov
lret
push
xchg
sub
jb
sarb
pop
cmpsb
jo
lods
pop
pop
mov
mov
loope
push
mov
mov
addb
lock
int3
pop
sbb
pop
mov
into
ret
cs
in
enter
lods
aam
dec
and
in
es
fs
add
jb
mov
xor
pop
mov
pusha
sbb
dec
add
push
pushf
jl
sbb
adc
adc
imul
add
je
pop
cmp
sbb
xchg
add
add
bound
add
lods
addl
stc
add
add
add
xor
cmpsl
pop
nop
les
sbb
ret
lahf
sub
pop
movsb
enter
hlt
sar
push
popa
adc
pop
orb
jbe
ja
pop
add
mov
out
xchg
add
aad
hlt
rcrb
notb
lods
fnsave
jp
inc
cmp
lods
xor
cmp
jb
cwtl
add
adc
push
cmpb
or
add
push
push
xor
and
jp
xorb
xor
outsb
addb
dec
xor
data16
xor
bound
test
jp
in
push
lods
dec
mov
lock
dec
ljmp
sub
pop
mov
adc
add
push
push
add
nop
xor
ss
mov
mov
add
or
roll
je
pop
test
dec
cs
rolb
dec
mov
mov
out
sbb
loop
or
dec
add
ltr
str
lods
outsb
addb
repnz
dec
roll
push
pushf
sarb
mov
push
mov
push
inc
and
movsb
inc
divb
clc
movsl
pop
add
ljmp
cmpsb
cmpsb
xchg
fs
movsb
pop
outsl
jecxz
mov
lods
or
mov
stos
pop
rclb
test
inc
mov
pop
inc
sub
xor
and
mov
cmc
in
and
add
mov
inc
std
mov
xor
movsl
dec
mov
loop
loop
ret
daa
jb
mov
push
push
lret
adc
xor
inc
xor
setg
lcall
lcall
jl
int
sbb
add
lods
jmp
into
sub
push
sub
jecxz
add
push
push
mov
mov
in
adc
test
leave
pop
push
mov
sbb
mov
or
xor
ja
jle
repz
rcl
lcall
dec
mov
mov
into
mov
xor
jbe
int
push
mov
addl
dec
rorl
cli
daa
loop
inc
lods
popa
filds
pushf
aaa
imul
in
jbe
add
push
mov
push
inc
mov
incb
sbb
inc
inc
aad
xorl
sbb
aad
sbb
mov
icebp
ret
mov
testb
xor
lret
sarb
inc
xor
jbe
adcb
mov
pop
insb
push
jl
push
imul
aam
fcmove
mov
imul
sbb
out
jl
push
sub
mov
loop
mov
lret
fwait
test
add
or
ljmp
or
push
lea
stos
imulb
xlat
mov
xor
fildl
jo
in
shlb
fisttpll
adc
dec
adc
pushf
mov
sbb
sbb
repnz
out
stc
out
lds
mov
mov
jbe
imull
or
sahf
mov
lods
mov
mov
adc
push
mov
pop
les
aas
insb
fists
lcall
lods
add
icebp
test
lcall
mov
imul
and
stos
insb
xor
sub
push
sbb
out
add
or
and
mov
pusha
int
xchg
jp
mov
fcom
repz
je
pushf
sub
and
push
inc
inc
out
daa
hlt
push
inc
or
out
mov
inc
mov
xor
mov
cmp
out
pusha
and
sub
call
lcall
inc
inc
mov
lods
ret
loop
lods
ficompl
sub
test
sahf
adc
stos
les
jp
lahf
shl
xor
xor
enter
add
xchg
sbb
hlt
ret
push
inc
fstpt
leave
xor
xchg
je
cltd
inc
mov
and
xchg
cmp
clc
mov
push
aaa
xchg
jp
dec
and
shlb
jecxz
ficoml
popf
push
jns
mov
or
pop
subb
stos
mov
subl
jl
lods
cmp
mov
or
xchg
add
sbb
hlt
inc
inc
subl
dec
or
jp
adc
and
pop
dec
sarb
adc
push
les
adc
aam
stos
or
or
cmp
dec
adc
cli
or
test
sbbb
cli
cmp
nop
jb
ljmp
nop
jg
imul
sub
insb
cmp
push
adc
mov
sub
pop
sub
inc
fstpl
push
mov
adc
add
mov
aad
push
sbb
jnp
mov
stos
inc
pop
inc
jo
jo
shll
xor
push
sub
xorl
push
ret
outsb
xchg
pop
repz
cld
add
add
push
push
pop
test
mov
les
inc
mov
cmp
bound
lret
inc
or
lret
clc
int
in
mov
scas
dec
into
and
jo
xor
imul
outsl
xor
mov
enter
xchg
ljmp
adc
scas
dec
push
inc
inc
mov
call
testb
lcall
ficoml
jbe
outsl
mov
lea
push
cmp
aaa
inc
rorl
stc
pusha
inc
inc
subl
cwtl
inc
xor
lret
sub
adc
cli
fs
lods
pop
cli
jb
sbb
cmp
mov
fsubrl
lock
push
mov
mov
adc
enter
push
push
inc
cmp
bound
movsb
xor
cmpsb
sub
enter
rcll
mov
shrb
in
mov
mov
mov
out
inc
inc
scas
push
adc
sbb
cmp
xchg
aad
into
scas
aam
xchg
ds
les
adc
lcall
or
fcomi
mov
stos
pop
lods
out
notb
cli
fs
jmp
cmp
add
xor
pop
cwtl
adc
movsb
inc
int
add
subb
push
imul
xchg
rcr
stos
adc
pusha
add
mov
or
sbb
push
sub
xor
mov
add
mov
out
dec
rcr
adc
lahf
jo
add
lret
add
add
in
adc
dec
jmp
dec
inc
orb
sbbb
lods
adc
sbb
inc
mov
rcrb
push
push
add
xor
or
out
push
je
push
inc
dec
push
push
push
fadds
test
jecxz
jle
enter
mov
paddusb
sub
push
mov
shrl
cmp
cs
aam
add
sbb
data16
pop
pop
or
and
or
inc
pop
pop
das
call
sbbb
int3
js
add
lods
insl
push
mov
adcl
sub
call
mov
lock
dec
and
xor
pop
mov
adc
mov
inc
test
xchg
add
ja
rcll
and
insb
nop
add
jbe
rcl
mov
sub
cmpsb
fnstenv
add
arpl
xor
cmp
fs
out
xor
imul
shll
sbb
push
insb
incb
lds
xor
mov
adc
or
repnz
sbb
adc
dec
adc
fcmovu
bound
sub
sub
ss
push
xor
push
mov
mov
lahf
pushf
divb
test
imul
inc
inc
ss
dec
in
or
sub
mov
add
xor
push
fisubl
or
mov
dec
inc
hlt
dec
mov
mov
stos
ret
popa
cli
and
mov
test
mov
out
push
out
je
outsl
add
push
cmp
ljmp
push
cltd
testb
test
hlt
xchg
addb
aas
int3
jle
lds
xchg
mov
scas
cli
xchg
sbb
sub
add
shr
sbb
rorb
hlt
sbbl
jbe
inc
nop
cmpsb
shl
push
sbb
dec
popa
mov
lds
add
push
mov
cld
add
xor
push
mov
sbb
jp
adc
xchg
fadds
sti
std
add
push
push
xor
test
xchg
mov
into
into
lcall
cmp
mov
mov
adc
push
ss
mov
or
pop
clc
add
inc
jae
pop
push
in
shlb
mov
enter
cli
sub
xor
dec
fisttpl
mov
mov
ljmp
mov
mov
imulb
mov
xchg
add
inc
imull
ret
fisubrl
lods
push
push
adc
out
pop
mov
pop
mov
mov
xchg
or
flds
pop
movb
add
inc
xchg
mov
leave
push
rcrb
mov
push
pop
movsl
push
cwtl
push
pusha
movb
lods
cwtl
xor
inc
inc
stos
jl
jo
outsb
or
jle
mov
ds
mov
adc
mov
in
cli
sbb
outsb
sar
enter
adc
jl
mov
les
mov
inc
xor
rorb
aam
and
nop
int
sbb
mov
sbb
add
insb
mov
cmpsb
push
fadds
sti
cmp
jge
sbb
add
lahf
out
mov
mov
pusha
shll
andb
jecxz
cs
inc
add
dec
fs
sub
jl
dec
fsts
mov
push
sbb
mov
cmp
lahf
cs
mov
push
inc
xchg
xchg
push
ds
pop
popa
test
hlt
inc
adc
dec
rcl
mov
mov
jmp
xor
inc
mov
nop
clc
xor
les
push
out
lss
sbb
xchg
lahf
lret
adc
dec
inc
rolb
and
xchg
add
push
and
add
loop
and
int3
sub
outsb
cmp
hlt
pushf
push
cmp
cmpsb
aam
mov
fdivl
cmpl
test
pop
lidtl
test
add
arpl
push
int
mov
in
xchg
inc
mov
inc
les
fdivrs
push
add
push
push
push
mov
les
cld
or
mov
arpl
popa
loopne
mov
inc
inc
mov
xor
sbb
adc
cmp
sahf
push
xlat
mov
add
int3
sub
out
push
or
dec
jle
add
lods
pop
mov
js
cmp
xor
jge
push
mov
jmp
adc
adc
dec
mov
stos
adcb
leave
sahf
int
test
pop
or
sbb
ljmp
mov
or
add
mov
mov
lods
jle
sbb
push
daa
add
pop
jg
and
xor
and
addl
popa
pop
shl
and
fdivrs
push
mov
xchg
sbb
pushf
push
push
lret
lock
or
mov
mov
cmp
mov
sbb
cmp
je
jo
and
rcr
xchg
cmp
and
inc
add
push
dec
int
adc
mov
loope
add
in
in
pop
rclb
rol
pushf
inc
lret
arpl
push
push
cwtl
lods
lods
aad
outsb
int3
sub
push
stos
pop
enter
idivb
sub
adc
mov
test
mov
push
xor
mov
mov
mov
divps
out
push
push
dec
addb
xlat
mov
aam
mov
lcall
and
int3
sub
and
inc
imul
xor
cmp
inc
xchg
push
pushf
cld
pop
mov
inc
inc
test
ret
jp
lods
and
push
mov
jb
xchg
cld
xor
popf
add
mov
add
mov
or
push
jb
addb
xchg
int
and
mov
pushf
xchg
bound
imulb
sub
mov
in
push
push
xchg
pop
push
push
xchg
cmp
inc
nop
loop
xchg
mov
repz
sahf
adc
jecxz
test
push
cmc
sub
icebp
gs
andl
cmp
xchg
add
or
adc
pop
stos
ret
subb
add
push
rorb
add
lods
pop
fs
mov
push
cld
test
daa
and
mov
rclb
mov
sub
inc
pop
or
or
sbb
iret
xchg
clc
notb
mov
inc
inc
jge
xchg
pop
roll
mov
mov
sub
in
adc
add
daa
call
dec
lds
clc
mov
sub
imul
cmpsl
mov
or
and
inc
push
and
mov
push
jmp
adcl
xchg
sub
data16
ret
ffree
push
jne
lea
xchg
sbb
or
sahf
cmp
shlb
mov
adc
sub
test
mov
lret
aad
stos
out
ja
lret
lods
mov
insl
dec
pusha
scas
mov
xor
jo
mov
lock
sahf
mov
inc
test
sub
push
imul
inc
jbe
xchg
mov
mov
in
lock
mov
jl
pop
in
les
mov
xchg
pusha
push
rorb
jmp
or
add
cmpsb
cmpsl
mov
pop
cmp
and
lods
fucomi
or
add
addr16
ret
shr
mov
cmp
jbe
adcb
add
enter
and
dec
insb
lcall
xchg
repnz
test
mov
sbb
cwtl
sbb
or
push
or
rcll
bound
dec
ret
loop
jbe
inc
arpl
mov
insl
das
clc
lods
jl
cmpsl
pop
pop
testb
orl
sbb
dec
pop
ret
and
inc
xchg
in
mov
xor
clc
fdivrs
mov
xchg
es
les
dec
add
adc
mov
hlt
or
pop
jbe
add
out
movsb
loopnew
dec
and
cmp
movsl
cmpsl
sarl
sub
pop
jmp
mov
xchg
cmp
push
or
inc
sbb
test
stos
scas
mov
test
jno
cmp
pop
out
push
incl
pop
push
fidivs
rcl
sahf
mov
mov
incb
ss
or
push
sub
sbb
and
or
lcall
mov
into
shlb
adc
mov
rorb
mov
imul
sbb
xor
mov
push
cmp
xchg
mov
je
push
fidivrs
push
mov
imul
push
lcall
xlat
pusha
fdivl
sbb
fxch
xlat
push
bound
xchg
adc
cmp
ret
scas
lcall
pop
inc
dec
push
inc
xor
add
les
xchg
jo
xor
lcall
mov
xchg
aad
data16
adc
mov
xor
mov
out
and
mov
stos
test
imul
mov
push
rcl
push
dec
jns
out
pop
jle
lret
or
sub
sub
pop
push
adc
addb
cmpsb
test
push
hlt
cld
sbb
loopne
inc
sub
cmpsl
mov
mov
mov
sub
das
lret
push
xor
mov
scas
fsubrp
fsubr
sbb
add
push
shrl
rclb
mov
inc
pushf
dec
loop
mov
or
cs
outsl
icebp
inc
and
les
test
add
pop
mov
test
add
test
inc
xor
mov
jmp
adc
push
sub
cmp
cmpsb
movsb
mov
in
dec
repnz
lods
test
pop
je
roll
call
push
or
leave
shlb
add
push
aam
and
cld
daa
jle
fs
adc
insb
stos
mov
xchg
lods
jo
mov
sub
mov
add
lcall
mov
mov
fadd
adc
pop
test
ret
mov
add
xor
insb
sbb
les
test
in
lea
xchg
add
jmp
push
mov
mov
lock
mov
push
sub
rclb
rcll
in
movsb
or
in
and
xor
int3
pop
sub
xchg
andb
filds
std
addb
xchg
push
add
mov
push
push
loopne
cwtl
cmp
popf
pusha
ljmp
add
push
inc
mov
push
pop
push
sub
inc
in
add
mov
rolb
sbb
xchg
xchg
xchg
inc
clc
mov
mov
enter
sbb
add
mov
bound
fsubrp
out
insb
ret
pop
xor
fistps
nop
and
or
cmp
push
addb
test
sub
add
add
shrb
mov
pop
push
lcall
jno
jmp
add
mov
out
push
xor
das
inc
push
xor
ja
mulb
or
rcll
cltd
push
sub
subl
lock
sub
test
pop
push
fadds
xor
stos
jp
dec
xchg
jae
cs
and
xchg
lahf
subl
shrl
cmp
dec
pushf
and
dec
and
fldt
lods
mov
adc
mov
in
push
stos
lods
push
scas
lret
clc
int3
sub
sub
fs
aas
sub
inc
push
out
sub
js
push
stc
hlt
outsl
mov
mov
fimuls
lcall
add
inc
pop
out
sub
fs
add
add
lods
bound
mov
inc
mov
push
sub
jbe
xchg
ja
sub
cld
mov
outsl
or
mov
xor
movsl
mov
mov
inc
jo
and
fiadds
pop
lds
mov
xchg
dec
dec
mov
xlat
xchg
cmpb
loopne
enter
popa
fcoml
loop
jbe
loope
push
movsl
lcall
pop
rep
push
mov
sub
add
pop
sub
enter
sub
test
pop
mov
sbbl
add
fcoms
mov
out
and
mov
adc
mov
imul
cmp
mov
inc
lret
push
adcb
push
mov
push
xchg
mov
mov
ret
dec
out
mov
push
test
push
push
test
adc
aam
cmp
xchg
push
cmp
jno
xor
sbb
test
inc
inc
jl
cmp
add
mov
shlb
push
int
call
int3
mov
xorl
cmp
lods
fmull
mov
arpl
es
aaa
in
add
sub
xor
test
lods
push
jbe
cmp
aam
pop
test
mov
cli
mov
xor
and
ds
mov
mov
pushf
mov
and
mov
mov
shlb
sbb
call
and
in
test
xchg
fsubrs
mov
js
add
mov
dec
into
push
mov
call
das
push
dec
mov
mov
ljmp
scas
jbe
fdivl
imul
add
movsb
cmp
rcll
mov
add
xor
mov
insb
push
push
xchg
add
cmp
inc
sbb
pop
or
push
mov
data16
test
push
ret
pop
incl
pushf
xchg
js
and
inc
mov
cwtl
mov
repnz
push
sbb
outsb
loop
mov
loop
sub
stc
sbb
lods
mov
or
lret
sbb
sub
and
inc
daa
shl
xchg
pop
fadds
mov
add
loop
mov
inc
jp
push
fcmovu
adc
aam
pop
inc
out
jno
test
lock
sub
mov
jl
lret
cmp
xor
pop
lods
fdivrl
scas
or
sub
outsl
inc
or
popf
imul
or
rcll
adc
mov
pop
sub
loope
into
scas
lcall
clc
inc
inc
add
push
wrmsr
test
jg
adc
and
std
rol
fstps
push
mov
fcompl
inc
push
xchg
out
dec
push
mov
shlb
pop
xchg
out
lods
push
inc
inc
inc
or
push
call
cltd
fs
fisubl
sub
repnz
xor
and
sub
xchg
cmp
xor
in
lret
push
jo
mov
xchg
dec
test
loope
mov
mov
lcall
leave
mov
repz
dec
js
add
add
je
insb
jl
adc
ret
cmp
cli
dec
test
adcb
lret
lea
sbb
push
add
push
lahf
filds
shlb
push
inc
scas
or
pop
test
gs
cli
pop
pop
and
fdivs
jle
xchg
push
adc
push
adc
or
sbb
enter
stos
cld
mov
pop
jmp
pusha
sbb
xchg
push
cli
mov
lret
es
fcoms
repz
stos
add
fisubrs
test
mov
lcall
push
aam
inc
xchg
add
adc
mov
int
clc
insl
out
sti
add
lea
sahf
out
sbb
clc
mov
adc
cli
sub
push
lods
dec
push
mov
add
adc
imul
mov
sub
ret
xchg
or
or
out
mov
xchg
dec
jb
ss
sbb
and
outsb
es
fdivs
call
pop
adc
inc
dec
pop
ret
es
sub
repz
push
or
pusha
xchg
cwtl
pop
inc
xchg
mov
jo
push
push
les
nop
or
pop
inc
adc
mov
or
mov
je
inc
cmp
push
cmp
and
adc
jle
scas
mov
adc
aam
mov
mov
mov
verw
lret
fldenv
and
lret
mov
cmp
das
fiaddl
call
call
imul
sub
jne
pushf
add
pop
inc
fdivl
lds
verw
or
xor
insl
int
jno
aaa
add
push
movsl
je
mov
push
xor
xchg
push
pusha
test
fcom
dec
mov
out
pusha
sbb
rolb
push
cmp
mov
fistl
sub
push
dec
or
add
mov
sbb
bound
test
dec
adc
jns
xchg
jne
test
cmp
pop
cmp
and
push
outsl
mov
das
lods
push
push
je
jno
mov
shrb
scas
or
test
push
or
mov
dec
push
add
push
fs
enter
aam
movsb
and
add
xor
fimuls
adc
dec
pushf
mov
push
not
rcr
mov
jp
adc
inc
sub
or
stos
shll
xchg
movsb
daa
add
add
call
icebp
add
in
pop
xchg
inc
push
les
mov
sub
fwait
lods
dec
loope
inc
xchg
leave
cmc
push
push
movsb
cli
jg
mov
fsubrs
cs
sarb
out
jbe
xor
mov
dec
cs
adc
xchg
xchg
es
and
adc
clc
mov
test
lret
adc
aas
mov
sti
int3
int3
push
in
add
cmp
or
push
fdivl
popa
push
sbb
or
jp
adc
addb
scas
lds
testl
fcoms
or
pop
pop
insb
push
inc
nop
inc
in
hlt
addb
mov
leave
mov
add
xor
jle
add
and
push
out
and
std
xor
loopne
call
popf
push
adc
pop
test
mov
test
push
mov
mov
push
jbe
aam
dec
sub
push
mov
sbb
inc
mov
mov
mov
inc
movsl
xor
jmp
rcll
push
loope
loopne
sbb
xchg
fsubl
mov
mov
or
in
mov
into
pop
mov
hlt
mov
add
push
in
inc
rorl
lods
in
adc
mov
jmp
mov
out
inc
hlt
lcall
add
pushf
cmpsb
ja
pusha
inc
imul
mov
insb
xor
dec
pop
loope
pop
out
fs
sbb
push
or
jp
dec
in
add
dec
cmp
sub
sbb
adc
push
xor
imul
hlt
test
push
lods
test
leave
jbe
inc
push
xchg
stos
hlt
mov
int3
add
pop
or
xchg
mov
loop
int3
xor
outsb
add
cltd
out
mov
lods
pop
adc
sbb
inc
repnz
fs
fstpl
gs
pop
inc
repnz
add
cli
lcall
sub
sbb
punpckhdq
push
or
and
push
aad
cmp
pop
loop
andl
inc
adc
push
cli
xor
inc
pop
cmpsb
inc
mov
dec
into
mov
jl
xchg
sbb
mov
sbb
mov
mov
mov
xor
push
fimull
filds
fisubl
in
push
cld
push
repz
sub
mov
xor
rcll
xor
sbb
pop
xchg
pop
test
sbb
adc
fildll
jge
push
pop
rol
inc
add
daa
mov
and
inc
add
jae
fdivl
dec
in
xor
popa
cmpsb
nop
pop
lcall
mov
shl
mov
divl
test
mov
mov
dec
mov
les
cmpsb
mov
jne
and
outsb
test
shll
pop
or
xchg
test
fldenv
mov
movsl
ss
lret
xor
cmp
jp
add
inc
inc
andl
sub
inc
jbe
fisubs
nop
inc
mov
pop
popa
sub
rclb
lods
xchg
mov
bound
push
jmp
dec
adc
push
aad
sub
mov
les
outsl
test
insb
inc
or
dec
or
add
ret
mov
in
sbb
jo
and
lods
sbb
xor
mov
hlt
adc
and
adc
mov
mov
or
hlt
loop
stos
inc
sarl
cmp
and
sub
mov
mov
jl
outsb
in
add
sub
fs
add
rorl
adc
addb
xor
out
insl
xchg
lcall
lcall
adc
dec
test
insb
pop
rolb
nop
push
adc
testb
lods
push
das
rclb
int
cmp
push
cld
or
clc
cmp
mov
mov
jg
push
push
ljmp
xor
out
pop
mov
and
xor
xor
shll
add
push
xorb
rcrb
test
fmull
fnstenv
inc
mov
xor
lods
dec
test
jbe
mov
outsb
shlb
cmp
sbb
pop
orl
dec
push
in
jle
mov
les
mov
mov
or
shrb
outsb
sahf
clc
xchg
or
jno
mov
cmp
sti
and
fmuls
nop
dec
insb
inc
mov
in
fsubs
pop
cs
add
sbb
fs
cmp
insb
push
mov
insl
imul
shll
push
dec
sti
and
lds
je
jmp
cs
pop
xchg
mov
fwait
fs
push
jmp
or
xor
dec
and
mov
repnz
inc
daa
lret
leave
ret
lock
ss
pop
icebp
mov
sub
jbe
hlt
xor
add
addl
out
xchg
lock
adc
xchg
jle
andb
arpl
fcomip
xchg
adc
jp
mov
and
dec
inc
add
lcall
inc
mov
sbb
lret
pop
mov
lcall
pop
mov
clc
sub
mov
rorb
iret
sub
call
les
add
lret
xchg
aaa
mov
pop
push
notb
imul
lock
ja
fisttpl
sub
insb
or
adc
push
cwtl
stos
push
xor
inc
dec
adc
fcmovnu
adc
inc
mov
add
jbe
ficompl
stos
fdivp
lcall
call
sub
hlt
xchg
rorb
rolb
into
cmp
imul
shlb
add
sbb
cmp
js
hlt
aas
and
add
cmp
or
sub
fdivrl
mov
dec
mov
popa
mov
xorb
mov
aad
xchg
jbe
jnp
adc
cli
insl
rcr
cli
in
sub
xlat
or
lcall
in
call
fidivl
adc
out
sbb
add
dec
fwait
rcrl
loope
jbe
inc
inc
rcrl
cmp
je
adc
mov
cs
stos
test
mov
jecxz
dec
data16
mov
mov
mov
sub
push
or
imul
mov
aad
lret
lock
xchg
aam
inc
xchg
pop
jne
inc
push
push
bound
mov
mov
mov
push
test
mov
cwtl
or
push
loop
ss
mov
cmpb
sub
xor
lods
roll
mov
mov
daa
orl
fcomps
loop
mov
sub
or
rcl
mov
adc
movsl
mov
stos
add
add
mov
or
stos
push
push
mov
jle
sahf
sub
add
push
and
mov
mov
test
xchg
mov
loopne
sub
test
sub
dec
in
cwtl
push
fisttpl
stos
xor
lock
movsb
sbb
insl
in
or
addr16
pop
adc
adc
data16
andl
cli
insb
hlt
shr
mov
sub
mov
xchg
push
iret
ds
adcb
mov
add
mov
add
add
ret
nop
jge
mov
aam
mov
push
aad
arpl
lods
sub
je
in
sub
hlt
cmp
addr16
pusha
test
es
xchg
mov
shrb
subb
or
sub
jae
sub
pop
mov
pop
cmp
mov
add
rclb
add
add
stc
test
push
mov
push
cmp
or
or
push
inc
out
xchg
mov
push
test
fadd
femms
dec
xchg
or
adc
mov
xchg
adc
xor
pop
pop
cmp
push
cmp
jb
mov
cmp
mov
dec
push
scas
pop
hlt
cmp
popa
pusha
push
push
jbe
pop
lods
adc
fwait
mov
push
inc
sub
adc
jg
and
add
lret
ds
add
int
adc
pop
popf
push
sbb
or
dec
mov
fsub
add
adc
sub
pop
arpl
mov
test
xor
and
mov
rclb
clc
fcomps
nop
cli
dec
ss
xor
sbb
ret
or
fisubrs
loope
daa
sbb
fwait
add
out
xor
jg
pop
sbb
out
mov
sti
mov
lret
adc
mov
mov
mov
mov
cltd
xchg
or
sbb
adc
mov
inc
mov
lods
faddl
push
add
mov
test
sub
pop
shrl
cmp
sbb
int
pop
or
stos
or
lock
xor
scas
sbb
adc
xorb
jo
inc
add
jl
xchg
add
fists
fildll
lods
dec
shlb
xchg
ljmp
mov
cli
in
fwait
mov
mov
dec
and
inc
sub
cmp
rcll
adc
sbb
and
stos
lock
pop
stos
sub
mov
repnz
lret
or
and
fwait
scas
adc
movsb
fldcw
fcmove
sub
jae
dec
lods
cmp
lods
lret
push
jnp,pn
mov
iret
or
iret
push
and
lahf
rolb
push
and
inc
jo
fldz
fcoml
push
adc
add
push
sub
pop
sub
dec
mov
mov
or
inc
jp
lods
pop
jo
dec
cwtl
in
sub
xor
xchg
push
xor
lret
cmpb
sbb
je
lock
mov
inc
sbbb
fdivl
jo
dec
and
cmp
stos
lret
jle
cmpsb
loop
mov
and
push
cmp
xor
outsb
scas
sub
mov
rcl
lret
push
mov
adc
fs
rcr
mov
dec
and
jmp
inc
mov
xor
sub
lahf
lods
adc
call
add
cmp
lock
addb
insb
add
mov
rolb
push
ljmp
jmp
dec
xchg
add
or
sahf
fidivl
sub
mov
rorl
add
adc
ficoml
and
popf
stos
mov
in
jl
add
mov
inc
cmpsb
ds
xchg
les
or
mov
nop
pusha
imul
sub
push
in
pop
cmp
movsb
aam
mov
sub
mov
push
adc
pop
cli
or
rol
addr16
jbe
mov
dec
add
xor
jne
lods
stc
mov
roll
popa
mov
mov
lsl
jbe
cli
xchg
dec
push
mov
fnstcw
sbb
mov
mov
sbb
xor
clc
loope
inc
add
imul
and
cs
add
je
xorb
ljmp
push
inc
jnp
int3
sbb
inc
and
adc
sub
mov
mov
adc
push
lahf
or
repnz
jns
insl
push
cmpsl
pop
pop
sbb
cli
mov
cld
add
add
add
stos
scas
mov
mov
sbb
lods
mov
repz
mov
mov
push
cmp
jge
sub
stos
test
push
cmc
insl
shll
divb
jmp
mov
jle
push
into
cmp
aam
aaa
jp
std
add
jo
inc
adc
ret
fs
inc
shlb
lea
aam
xchg
sbb
imul
hlt
add
subl
xor
pusha
push
and
bound
dec
mov
dec
cmpsb
std
push
xor
cmp
inc
mov
pop
out
push
les
imul
cmp
add
dec
aam
cld
mov
rcll
in
add
xchg
mov
adc
push
popa
fidivrs
call
test
mov
out
mov
loop
pop
mov
pop
mov
push
lock
arpl
aad
scas
shlb
pop
lock
add
test
jp
addl
imul
into
fwait
mov
jbe
sti
push
sahf
mov
mov
and
sti
dec
insb
jp
mov
push
or
fbld
pop
sub
cltd
jl
dec
and
add
shrb
ljmp
loopne
sub
pop
push
aad
fcom
xor
jo
push
lret
push
jl
faddl
mov
pop
add
pop
push
xor
sbb
add
adc
pop
dec
pop
add
pop
xrelease
lret
mov
mov
rclb
mov
subb
loope
int
pop
stos
icebp
adc
inc
mov
pop
or
rcl
adc
fdiv
nop
pop
mov
sbb
test
adc
testb
inc
mov
or
jo
shrl
cmc
sub
xchg
cmp
sub
push
push
aam
shlb
ficompl
or
or
enter
mov
rcrl
add
inc
cmpsb
fs
and
stos
sub
xchg
push
sub
in
loopne
pop
add
adc
cmp
sbb
add
ret
pop
call
dec
cwtl
mov
push
lods
lcall
pop
sbb
mov
inc
xchg
rorl
add
enter
adc
inc
aad
mov
add
out
out
fistl
mov
outsb
fimull
push
addb
out
movsb
stos
shlb
xchg
push
xchg
stos
cmp
sbb
sbb
or
push
push
imull
adc
js
loopne
cwtl
lcall
insl
or
mov
mov
pop
push
adc
int
sub
sbbb
push
cli
sub
sahf
inc
sub
mov
daa
add
rolb
push
repnz
idiv
mov
rorl
insb
add
scas
mov
dec
mov
jmp
fsubrl
in
jp
mov
or
cwtl
jecxz
cmp
adc
test
insb
ret
mov
loopne
int3
adc
sbbb
xchg
aam
call
roll
sub
test
push
out
jge
add
icebp
and
or
lcall
lea
cmp
in
ret
fisubl
sub
push
push
pop
jle
js
popl
or
inc
adc
insb
push
cltd
dec
cs
push
push
iret
push
push
cli
mov
push
insl
xchg
mov
jno
cmpsb
lock
pop
gs
testb
jl
jo
sarb
cld
ss
mov
mov
ds
cli
inc
xchg
adc
out
mov
push
push
adc
pusha
out
push
aad
and
mov
sarb
sub
add
pop
fildll
push
ljmp
out
mov
mov
or
mov
jg
push
adc
fs
push
mov
subb
je
push
cmp
mov
mov
std
inc
mov
jmp
add
lock
mov
lods
lods
sub
ljmp
add
cs
cmpsl
out
sub
mov
scas
mov
inc
ret
lcall
push
imulb
enter
or
icebp
aam
insl
jnp
xchg
gs
in
xor
adc
mov
jnp
and
and
xchg
xorb
push
push
scas
mov
xchg
call
add
cmpb
inc
pop
scas
pop
adc
jl
into
dec
or
es
aad
stos
pusha
out
fidivrs
push
adc
sahf
les
add
lods
or
push
sysenter
fs
xor
xchg
test
sti
fnsave
or
or
jecxz
mov
adc
or
cli
pop
pop
push
inc
inc
insb
fidivl
mov
repnz
fcomp
ljmp
mov
mov
mov
xorb
and
hlt
sub
sub
push
in
js
insb
cmp
fs
add
imul
loope
push
push
shl
inc
cmpsb
jne
lock
loope
xor
mov
pop
inc
shll
std
xchg
pop
cmp
xor
outsb
loop
leave
cmpsb
and
pop
dec
ret
push
sbb
addb
fiaddl
dec
repnz
orb
insb
pop
sub
inc
loop
or
cmc
add
mov
jl
push
mov
dec
out
lcall
es
pusha
add
dec
imul
pop
add
movsb
add
sbbl
jo
add
or
and
mov
stos
mov
ss
stos
adc
push
shrd
sub
cwtl
mov
xor
jge
popa
or
shrl
inc
mov
sub
repz
lcall
cmp
call
add
dec
lock
es
or
push
xchg
incb
cmp
xchg
pop
adc
ja
and
mov
mov
shl
clc
cmpl
xchg
dec
rolb
and
pop
subb
inc
lcall
mov
add
into
adc
sub
mov
mov
push
ja
sub
mov
popa
xchg
cmp
insb
add
mov
jbe
push
xor
or
shlb
pop
and
or
cmp
xor
jns
scas
xchg
add
mov
in
subb
rcrb
jo
out
pusha
xchg
ds
xor
jb
push
cli
popf
or
outsb
sub
inc
adcl
int
cmp
sbbl
mov
cli
mov
stos
sbb
xor
inc
push
nop
into
pop
fcompl
push
scas
ret
loope
jbe
aam
dec
mov
push
xchg
fdivs
mov
jbe
fcoms
sbb
add
jne
inc
shll
push
sub
add
outsl
mov
movl
rcr
mov
or
xor
push
mov
mov
add
movsb
loop
sub
push
pusha
fldt
mov
mov
mov
ret
push
pop
hlt
cmp
ja
add
xorb
cwtl
push
lret
lret
jo
xor
pop
mov
pushf
lcall
xor
xor
sbb
add
lea
adcl
mov
or
xchg
roll
pusha
xchg
repnz
sub
mov
and
les
cmpsb
jae
or
adc
mov
fldenv
mov
or
xchg
dec
fwait
insb
jae
pop
pusha
pop
ret
loop
push
xchg
adc
adc
popf
insb
inc
adc
fcoml
mov
sbb
sub
pop
sub
movsl
dec
add
js
jbe
inc
popa
mov
cltd
add
mov
js
inc
fwait
adc
add
mov
int3
rolb
push
xor
data16
aam
add
push
add
pop
sarl
pop
das
pop
sub
bound
add
xchg
fadd
fs
add
fidivrs
popa
xor
lods
mov
pusha
mov
sub
sub
mov
cs
pop
mov
or
cs
movsl
aad
icebp
into
inc
pushf
xchg
cli
mov
lret
ret
mov
add
je
add
in
es
int
push
xchg
mov
subb
fsubs
add
ret
push
push
xchg
mov
test
fcmove
mov
data16
xchg
ret
lods
ffreep
data16
sub
pusha
imul
pop
cmc
push
mov
push
inc
inc
inc
push
dec
push
clc
or
loope
fld
add
test
es
mov
mov
fdivl
shrb
mov
ljmp
push
or
jmp
mov
into
sbb
out
outsb
sahf
and
sarb
push
mov
mov
rcrb
dec
in
cmp
test
mov
cmc
ret
inc
in
cmp
fadds
xor
push
loope
fiadds
mov
shll
xchg
inc
and
mov
repz
mov
push
adc
push
dec
jb
mov
jle
xor
cli
ret
pusha
aaa
mov
imul
and
jns
inc
pop
xor
inc
ret
xor
ret
mov
ret
ror
pop
out
add
sub
push
jle
push
sti
cmpsb
inc
hlt
inc
mov
in
shl
int3
push
mov
outsl
scas
jne
faddp
test
lret
jbe
push
xchg
rcr
cwtl
scas
add
inc
cmp
mov
push
mov
in
mov
mov
dec
cld
jb
mov
inc
sbb
dec
pop
andb
fldenv
and
xchg
pop
je
loop
mov
inc
aaa
pop
push
call
repnz
mov
mov
jp
imul
add
mov
into
inc
and
mov
sbb
sbb
push
cmp
push
inc
or
and
jle
jl
outsb
cmp
jg
lods
mov
mov
xchg
xchg
cld
inc
jl
pop
push
in
jae
scas
or
push
add
insb
push
bound
test
lcall
xchg
pop
fisttpl
push
ret
cmpsl
jb
and
sub
movsb
jmp
mov
xor
pop
les
xchg
dec
push
mov
mov
xor
das
test
add
xchg
and
cmp
pop
pop
xor
rorb
fsubs
or
popa
fwait
sbb
lock
xchg
push
pop
ficoml
pop
aam
sbb
es
les
rol
mov
adc
sbb
jo
adc
loop
push
cmp
cmp
or
add
aaa
test
cltd
or
insb
sub
lods
dec
xchg
jbe
lret
cmp
loopne
add
clc
xlat
or
or
dec
mov
or
data16
and
das
jmp
in
add
push
rolb
cmp
lcall
dec
pushf
mov
pusha
adc
cmpsb
testl
or
fists
fists
out
pop
popa
mov
dec
sub
inc
sub
in
pop
ror
mov
sbb
sbb
ret
gs
xor
push
xchg
dec
hlt
jp
sub
push
hlt
in
je
adc
add
pop
sarb
xchg
fcomps
xor
mov
push
jbe
test
mov
jl
pop
add
pop
cs
inc
pop
dec
shlb
icebp
mov
mov
xor
rcl
cs
add
and
push
sbb
or
sbbl
and
jae
push
es
push
dec
push
xor
adc
hlt
mov
andb
inc
data16
std
sbb
xor
cmp
or
lock
xchg
sbb
inc
les
push
jo
pushf
add
pop
dec
out
ljmp
jo
push
inc
cmpsb
jo
cmpsb
mov
xchg
ret
or
cs
ja
fistl
cmp
or
out
test
push
sbb
xchg
push
or
aad
sahf
add
fdivs
inc
mov
ss
pop
mov
mov
pop
and
jle
clc
into
push
push
or
mov
mov
shrl
push
push
pusha
pop
dec
adc
push
ret
mov
pusha
leave
fs
mov
repz
add
inc
add
xor
lcall
loop
add
ljmp
sbb
hlt
cmp
push
xor
push
lcall
lret
push
shrw
push
pop
outsb
movsl
in
pop
or
mov
arpl
sbb
pop
xchg
push
mov
clc
ret
add
fsubs
outsb
mov
push
push
int
mov
mov
adc
cld
xor
jbe
mov
push
push
adcb
xor
lds
adcb
jle
mov
fucomi
mov
adc
shlb
push
cmpsb
mov
lods
adc
mov
adc
es
mov
js
ret
mov
lret
adc
mov
test
in
stos
lcall
add
jo
jo
cmp
mov
cmp
pushf
test
cli
loop
cmc
or
ljmp
mov
add
sbb
mov
sub
ljmp
push
or
loope
out
dec
sbb
rcl
loope
mov
pop
push
mov
lret
pushw
addb
cmp
je
out
xchg
sub
icebp
cli
add
mov
xor
fdivs
stos
pop
orb
mov
dec
inc
pop
xchg
push
ds
jbe
and
lods
fdivp
push
mov
xchg
mov
xor
and
addr16
movsb
js
bound
jle
lds
lods
jbe
jl
cmp
add
xchg
jbe
sbbb
lea
mov
mov
xor
iret
sbb
scas
dec
dec
lods
hlt
mov
stos
dec
mov
movsl
xor
orb
and
adc
in
inc
aad
les
lcall
or
lods
outsb
add
mov
xor
call
out
stos
fidivl
fdivl
jmp
cmp
and
cmp
mov
pop
adc
push
xor
test
aaa
and
mov
sub
add
mov
inc
adc
push
inc
push
xchg
push
adc
fcoml
lcall
or
test
mov
add
push
arpl
adc
jp
add
cmp
cmp
rorb
cmpsb
add
add
inc
push
lcall
lret
fwait
aam
and
cmp
sbb
or
inc
stos
ss
in
xor
and
stos
fsubp
cmpsb
add
cmpsl
or
dec
ret
or
enter
subb
pushf
out
hlt
inc
mov
adcb
push
push
dec
rcr
xor
sub
push
addb
fsubs
jecxz,pt
fidivrs
adc
loopne
dec
int3
test
inc
or
fbstp
aas
cmp
int
insb
push
cmp
pushf
cmp
mov
inc
sub
rcll
mov
xchg
lods
xchg
sbb
mov
int3
lock
insb
inc
cwtl
movsb
add
inc
clc
mov
push
pop
repz
sarl
pop
push
push
mov
xlat
and
push
push
shll
pop
aaa
out
repnz
mov
pop
inc
xor
sub
xorb
je
sti
mov
push
sub
ljmp
outsb
or
add
es
test
inc
and
bound
xchg
and
xor
pusha
xchg
inc
dec
mov
sbb
xor
and
pop
insb
jno
cs
lods
fidivs
mov
xchg
es
push
sub
push
mov
xor
dec
mov
sbb
push
push
jb
add
mov
inc
add
sub
movsb
add
xchg
push
int3
push
sti
or
test
lret
mov
add
jbe
lock
sub
ds
in
stos
jl
rol
add
test
cmp
mov
sub
sub
lods
out
nop
cmp
rclb
pop
cmp
cmp
add
int
mov
out
jb
faddp
or
push
jae
add
adcl
push
and
cmp
ss
jle
mov
loopne
inc
ret
ss
mov
push
roll
pop
aam
add
cmpsb
inc
jecxz
out
jge
mov
mov
mov
in
mov
scas
and
rolb
sub
cmp
mov
loop
push
bound
sbb
imul
adc
dec
inc
test
mov
and
mov
fadds
in
fwait
sub
sbb
or
add
out
or
movsb
mov
push
inc
jne
outsl
cli
xor
lret
mov
js
push
subb
jo
js
lods
sub
mov
dec
lret
pop
popf
gs
sub
add
leave
call
mov
and
cld
mov
cmpsb
stos
mov
add
mov
jg
push
daa
add
ss
add
dec
adc
lcall
mov
push
bswap
and
fsubrs
shlb
mov
dec
push
mov
and
sbb
mov
push
nop
push
ja
rcr
push
js
addb
lock
jl
aaa
or
jb
and
pop
sbb
pop
ja
xor
je
cs
jl
pushf
cmpsb
mov
push
jmp
bound
add
jnp
cmpsl
push
movsl
ljmp
and
test
pop
lcall
add
hlt
xchg
aas
sbb
push
push
dec
push
pop
sub
ret
and
pop
dec
adc
xchg
test
call
gs
call
cmp
xchg
inc
test
loopne
rorb
mov
nop
scas
out
sub
inc
sbb
or
xchg
ss
sbb
ret
or
ret
ss
add
xchg
sbbl
mov
into
inc
shrb
aaa
shrb
dec
cmp
fsubs
rcl
adc
pop
xchg
addb
cmp
faddp
xchg
fcomps
cld
adc
sbb
push
add
add
repz
mov
mov
pop
shrl
cli
outsb
mov
add
or
out
sub
mov
es
mov
mov
lods
or
cs
push
test
mov
push
popa
xchg
shlb
mov
mov
add
mov
sbb
push
mov
push
pop
negb
sub
pop
test
aam
cs
rclb
mov
js
stos
ret
and
lret
or
adc
sub
and
lock
mov
mov
ljmp
inc
shlb
sahf
popa
mov
stos
push
lea
sti
hlt
jo,pt
push
dec
bound
nop
or
pusha
inc
add
mov
push
sahf
sub
push
sbb
jp
mov
pop
lock
into
or
pop
sbbl
adc
xchg
inc
mov
int3
dec
sub
add
xor
pop
jl
insl
sbbl
sbb
subb
add
mov
lret
pop
fadd
xchg
nop
jle
loop
jbe
lcall
mov
inc
mov
shll
mov
mov
stos
or
pusha
fidivrs
adc
rorb
ret
mov
push
shrb
js
inc
xchg
nop
inc
jb
push
daa
in
aaa
add
inc
mov
inc
mov
test
adc
xor
fisubrl
sbb
mov
adc
and
and
js
sub
fldt
jle
push
mov
push
rolb
aas
xor
mov
adc
das
or
mov
xchg
mov
or
mov
jp
fwait
mov
cmpsb
mov
js
xor
or
clc
sbb
sbb
sbb
inc
test
jb
imul
lea
inc
enter
mov
ljmp
or
out
out
imul
cmp
cmc
ds
in
cmp
sub
mov
jne
add
mov
or
mov
jl
push
pop
cmpb
loopne
insb
test
sub
push
mov
push
mov
or
cld
insb
mov
add
mov
xor
mov
mov
inc
sarb
jo
pop
imul
fcom
inc
loopne
out
mov
add
ret
sbb
sub
push
mov
add
shrb
adc
cmp
mov
pop
inc
or
sbbb
lds
inc
jl
push
mov
and
xchg
xor
push
and
loope
pop
in
fdiv
movsb
movsb
test
inc
scas
ljmp
add
add
push
rcrb
pop
fwait
je
in
repnz
rcrb
dec
lcall
xchg
jle
push
add
and
push
cs
mov
mov
xor
mov
push
lods
mov
push
les
into
ret
cmp
leave
inc
aad
lock
inc
fistl
xchg
decb
aad
sub
call
cmp
jp
mov
ret
jo
testb
loopne
fcomip
jb
inc
mov
xchg
dec
je
shrl
adcl
xchg
pop
add
shll
mov
adc
jecxz
les
pop
enter
mov
mov
xchg
cli
arpl
add
shl
cmp
incb
cwtl
scas
inc
cmpsl
adc
lret
xor
dec
pusha
xchg
subps
xor
mov
push
adc
mov
push
mov
int3
loopne
test
mov
sub
push
out
mov
mov
mov
sub
and
add
inc
mov
push
adc
mov
cld
add
inc
pop
les
push
adc
icebp
add
loop
adc
lret
xor
sar
pop
xchg
inc
fistl
push
lock
pop
jo
mov
pop
adcb
dec
jle
xchg
inc
pop
lods
leave
lods
movsb
out
cmc
and
cs
push
xchg
mov
sub
insb
jae
add
repnz
icebp
dec
fsubs
rorl
dec
mov
icebp
lcall
sbb
aas
mov
sbb
incl
clc
ss
xor
popa
mov
outsl
jbe
addl
mov
test
pusha
into
sbb
add
inc
movlps
inc
rolb
mov
jo
xor
or
and
in
add
mov
mov
js
jg
shl
add
adc
out
ljmp
jl
data16
or
inc
hlt
loop
in
mov
and
xor
push
sbb
xchg
lock
xor
add
pusha
cmpsb
pusha
and
fcomps
mov
cmpsb
ret
enter
clc
push
cld
inc
shlb
dec
leave
testb
adc
lcall
lret
ret
cmp
fimull
or
xchg
outsb
insl
or
inc
xchg
inc
in
orb
sbb
or
push
ficomps
outsb
xor
ret
push
cmp
sbb
outsb
lcall
movl
xor
js
mov
push
xchg
iret
hlt
gs
pushf
push
outsb
adc
xrelease
add
and
in
sub
and
dec
mov
test
cs
or
cmpsl
xchg
push
mov
inc
pusha
dec
cmpsl
or
dec
mov
inc
adc
pusha
jo
push
and
into
jmp
xor
pop
add
mov
hlt
js
sub
or
mov
and
addb
cld
jnp
mov
repnz
pushf
push
cmpsb
inc
cmp
or
mov
lds
ss
add
lock
push
push
loope
pop
push
scas
testb
sbb
pop
cld
and
mov
loopne
add
push
les
popa
insl
xor
das
es
adc
aaa
es
pop
add
jne
mov
fimull
sti
pop
into
pop
loop
cmp
adc
ljmp
pop
sub
es
and
sub
test
lods
push
inc
adc
lcall
cmp
fchs
mov
jae
in
push
adcl
pop
aad
js
sahf
adc
fisubs
pusha
fcoms
push
fdivl
aam
outsl
test
xchg
sub
movsb
popa
fildl
jne
mov
test
xor
les
aad
mov
sbb
xor
decl
sti
hlt
mov
fadds
or
int3
mov
xor
add
das
out
mov
mov
push
es
fs
rolb
stos
add
add
pop
roll
push
outsb
inc
xor
lods
xor
aad
je
mov
cmp
repz
inc
jo
movups
inc
orl
push
in
stos
cmpsb
int
push
in
sbb
fstpt
ss
inc
lcall
add
lock
shl
cmp
mov
add
xor
add
cld
imul
inc
or
inc
ret
add
movsl
and
lcall
and
push
insl
sub
pushf
lds
cmp
mov
sahf
add
or
mov
popa
jb
sahf
in
cli
and
dec
call
adc
lods
sbb
outsb
sbb
insl
push
mov
lret
dec
inc
movsl
sbb
mov
loope
test
dec
add
cmpsb
inc
adc
aam
add
in
or
pop
mov
pop
repnz
adc
lcall
insl
dec
dec
pop
or
jbe
sub
js
icebp
ret
loopne
adc
subl
inc
hlt
or
dec
adc
lret
adc
aad
es
push
jne
mov
or
jb
mov
xor
mov
gs
push
scas
fists
pop
cld
lock
or
mov
ss
lcall
pop
les
mov
push
xor
loope
xorl
nop
adc
sbb
iret
inc
pop
and
in
push
lods
dec
xor
sbb
ret
shrb
cld
xor
out
xchg
xchg
mov
adc
pop
hlt
mov
out
cli
push
mov
add
pop
pusha
test
xchg
mov
push
or
scas
js
dec
outsb
mov
pop
or
stos
lods
adc
or
mov
pop
push
or
jns
mov
or
cltd
loop
stos
push
inc
int3
rolb
cmpsl
movsb
mov
push
test
inc
add
sbb
cs
pop
or
push
stos
bound
fidivrl
cmp
js
pop
dec
adc
pop
rol
push
js
push
mov
or
fsubrs
xor
cmp
and
cli
nop
hlt
sbb
cmpsb
testb
adc
pusha
fwait
shr
sbb
cmp
xchg
or
fmuls
xor
or
sbb
dec
jo
pop
inc
push
test
push
cmp
dec
test
cmovs
pop
sub
inc
mov
pop
add
dec
add
sub
sbb
aam
fs
xchg
andb
adc
sahf
ljmp
add
into
add
mov
bound
fs
ret
push
sarb
xor
je
add
or
sarb
out
mov
add
in
adcl
pop
inc
insl
and
sub
mov
pusha
loopne,pn
pop
sub
or
js
lods
jno
out
je
andb
sahf
jl
fst
mov
prefetcht0
dec
lods
push
ljmpw
mov
push
or
fcmovbe
mov
add
mov
mov
in
add
cmp
add
lods
ret
mov
xorb
push
rcl
insb
pop
mov
adcl
pop
pop
aad
adc
xor
mov
add
insb
fsubl
test
aad
xlat
sub
subb
xor
js
pop
adcb
mov
loop
mov
out
mov
xor
inc
mov
mov
pop
mov
xchg
mov
lods
or
or
inc
shrb
insb
or
je
and
aam
xchg
and
sub
sbbb
jne
mov
xchg
xchg
or
cmpsb
addr16
jbe
xor
mov
mov
or
mov
xchg
mov
jl
sbb
test
add
das
les
or
add
dec
pop
pop
int
test
shrb
sbb
xchg
cli
insb
xor
push
nop
xchg
mov
ret
ret
dec
jae
ret
lock
jle
fs
jmp
sbb
mov
adc
or
out
addr16
or
sbb
adc
mov
sbb
inc
call
ficoms
cmc
je
add
dec
jmp
arpl
sbb
cmp
add
inc
push
adc
lret
lock
add
loopne,pt
push
scas
mov
add
mov
adc
push
mov
ret
stos
cmpb
xor
cltd
xchg
sbb
test
add
mov
inc
stos
mov
sbb
call
push
mov
testb
mov
das
pop
xor
repnz
ret
shrl
or
pushf
popf
sahf
cmpsb
pop
push
pop
mov
lods
inc
adc
stos
mov
xor
adc
xor
lret
cmp
repnz
cmp
and
les
lret
adc
shrb
xchg
sbbl
ret
mov
scas
mov
filds
fildl
movsb
dec
enter
push
loopne
aam
mov
dec
cmpsb
aam
shrb
loopne
inc
pop
cmp
xchg
jne
stos
mov
jl
or
mov
test
inc
jle
inc
inc
jne
lods
fcmovbe
pop
loop
adc
jbe
mov
movsl
mov
adc
add
xchg
pusha
mov
fcomps
jo
mov
call
repz
loopne
jmp
sub
aaa
dec
inc
dec
insb
jo
mov
test
inc
cld
test
test
and
lods
js
pop
inc
or
in
fiadds
adc
aad
push
mov
orb
shrl
inc
subl
or
sbb
or
fmuls
push
popf
sbb
test
adc
test
cwtl
xchg
in
inc
sub
mov
add
mov
pusha
pop
and
sub
or
fs
sarl
dec
xchg
ljmp
dec
push
daa
push
add
adc
test
adc
mov
push
adc
or
es
jnp
cmc
push
test
inc
cmp
ficoms
fiaddl
or
mov
jl
shrb
stos
sbb
ljmp
imul
adc
rcrb
cmp
lods
imulb
int3
mov
enter
cmpsl
inc
loopne
lea
mov
gs
cmp
inc
shll
out
push
push
cmp
test
arpl
adc
inc
add
addr16
jecxz
rcrl
push
or
inc
push
mov
jp
xlat
xor
inc
add
xchg
mov
sbb
cmp
dec
push
push
mov
push
inc
sub
dec
cmpsb
int
je
subb
shlb
cmp
sbb
fwait
loopne
lcall
pop
sub
ljmp
adc
pushf
mov
or
push
or
adc
cld
insl
rolb
add
xlat
enter
lcall
mov
jno
ss
sbb
mov
ljmp
int3
jg
jle
dec
sub
xchg
imul
rdtsc
pop
jle
fisubrs
cs
mov
pop
subb
cmpsl
and
gs
out
data16
je
or
xor
sub
test
lods
imul
faddl
mov
sbb
out
xchg
cmp
lcall
dec
test
adc
cmp
and
pop
sub
push
push
sub
test
cmp
ret
aad
and
push
shrb
mov
sbb
pop
push
movsl
xor
jle,pt
test
mov
rcl
dec
sbb
adc
fsubrs
jp
lods
leave
jo
push
test
xchg
icebp
mov
stos
enter
mov
mov
or
xor
adc
push
or
mov
add
mov
fists
test
sbb
add
fs
mov
adc
push
rcrl
test
and
add
stc
andb
push
xor
inc
pop
mov
push
push
imul
add
lds
push
dec
inc
cli
and
add
nop
inc
pop
test
and
push
movsb
lods
shll
mov
cltd
jl
movsl
lcall
or
imul
lock
cld
dec
ds
mov
jno
pushf
add
int3
or
mov
add
jp
sbb
out
pop
push
lods
pop
mov
jecxz
pop
movsl
sub
mov
xchg
stos
sbb
call
stos
xchg
inc
bound
xor
sbb
mov
mov
inc
out
push
testb
fldenv
out
rolb
lcall
cli
imul
scas
std
mov
hlt
sub
inc
js
cmpsb
inc
push
adc
sbb
add
cmp
pusha
inc
sub
mov
mov
push
pop
js
jp
push
jmp
xor
cmp
test
cmp
add
add
push
push
call
add
push
sub
in
adc
lahf
xchg
xchg
jl
fisttps
in
and
sub
rcll
pop
ss
lock
shr
sub
mov
add
push
xor
or
add
xchg
inc
ds
js
push
sub
sub
cmpsb
jg
or
add
dec
dec
incb
es
sbb
mov
xchg
and
rorb
add
mov
sbb
mov
inc
jmp
push
scas
lock
rorl
fcmovnbe
loopne
mov
add
pop
push
pusha
flds
xchg
adc
inc
inc
rorl
fimull
mov
fisubrl
fstpt
aad
jne
inc
loope
cmc
lock
push
inc
ret
daa
pusha
sub
push
dec
outsl
push
dec
push
insb
mov
inc
orb
rcr
and
js
jne
gs
ficomps
or
push
aam
cs
sub
lret
ljmp
push
or
test
jl
fadds
arpl
mov
ret
push
int3
xchg
mov
cmp
cmpsb
add
orb
bound
add
push
lret
fiadds
xor
pop
sub
mov
stos
mov
out
mov
mov
out
push
pop
dec
shlb
movsb
mov
adc
pop
push
push
mov
add
cmp
sbb
bnd
mov
movb
or
push
inc
sub
pop
icebp
mov
out
mov
add
int3
add
out
adc
dec
jl
push
bound
and
xchg
push
push
inc
jo
adc
sbb
or
imul
rolb
jg
inc
inc
fsubr
nop
inc
xchg
push
inc
loopne
mov
cli
les
fcom
gs
dec
mov
fnsave
push
cmp
dec
lods
pushf
js
mov
data16
mov
and
dec
mov
jb
shll
sub
clc
mov
mov
add
adc
ds
pushf
sub
insb
jmp
movsb
fdivr
push
iret
adc
or
stos
sbb
aam
gs
push
sbb
xchg
push
pop
inc
inc
test
hlt
or
cmp
or
sbb
movb
add
add
xchg
inc
push
push
pop
add
insl
or
adc
mov
dec
jo
add
push
push
outsb
out
pop
fs
mov
pop
fcompl
mov
subb
inc
adc
jp
je
dec
mov
mov
jbe
decb
push
dec
mov
cli
data16
mov
or
je
inc
cli
add
popa
movsl
mov
inc
out
xchg
jmp
mov
in
mov
add
sub
or
notrack
adc
xor
je
bound
push
and
push
push
jp,pt
aas
test
push
xor
icebp
add
ret
push
les
xchg
nop
or
inc
push
scas
test
int3
loope
cli
pop
adc
in
sbb
cvtps2pd
sub
mov
push
mov
dec
insb
or
mov
fs
xchg
ret
jb
xor
push
pop
inc
int
in
dec
enter
insb
dec
jl
add
repnz
into
shlb
pop
inc
pop
ss
and
call
push
bound
addb
xchg
test
aas
ljmp
nop
mov
mov
pop
idivl
add
xchg
add
ljmp
push
icebp
push
mov
mov
scas
shlb
adc
adc
sub
repnz
es
mov
mov
push
pop
jle
fdiv
addb
es
arpl
mov
fcomp
sub
ds
fbld
push
adc
jl
and
push
jno
mov
and
mov
js
jo
push
jle
insl
sub
sbb
push
dec
std
mov
dec
rol
adc
pop
mov
ljmp
rcrb
inc
sub
int3
lds
cmp
jb
lods
jecxz
loopne
dec
push
xchg
in
xchg
jp
lds
mov
jne
lret
mov
test
jnp
das
pushf
cli
shlb
adc
jo
cmp
mov
popa
imul
mov
add
inc
push
int3
push
mov
int3
xor
xchg
sub
push
gs
lcall
cld
lcall
testb
loopne
pop
rcrl
sub
fstl
test
loopne
loop
cmpb
xchg
shll
or
inc
roll
sarb
xor
iret
loopne
inc
add
or
rep
lds
movb
out
push
push
sbb
addb
push
jge
dec
cmpsb
jo
cmpb
push
lock
fdivs
mov
repnz
lcall
add
cwtl
clc
es
mov
and
mov
sub
cld
adc
xchg
out
adc
push
dec
sbb
stos
push
or
or
pop
mov
lret
sub
mov
or
lods
mov
ror
mov
imul
push
sub
scas
sbb
adc
xchg
fcmovu
mov
movups
lret
adc
lds
cwtl
cld
adc
or
push
je
out
es
hlt
test
dec
add
mov
ret
lcall
sbb
sahf
jecxz
lcall
rcll
dec
inc
loope
mov
out
pop
adcl
cmpsb
dec
mov
or
and
in
jl
lods
sub
inc
mov
mov
or
and
mov
mov
pop
les
add
icebp
mov
jp
js
aam
or
mov
pop
addr16
lock
sbb
adc
sbb
shll
pop
ljmp
sti
ljmp
lods
mov
jmp
inc
mov
loop
jns
push
xor
or
adc
gs
loopne
inc
jp
lods
ljmp
shrb
mov
adc
mov
jmp
jecxz
jns
ficomps
push
or
out
nop
mov
adc
sub
add
push
jbe
lds
pusha
fistl
shrl
xor
sub
daa
cli
or
arpl
jo
ret
hlt
sbbl
and
es
test
enter
ret
pop
and
or
movsb
rorl
rcrb
fcmovnbe
push
push
xor
rcll
xor
call
sub
xor
pop
adc
loope
stos
push
and
adc
push
or
neg
mov
mov
mov
pusha
adc
addr16
adc
jbe
add
cmp
das
add
inc
inc
test
fwait
pop
mov
push
clc
sbb
scas
push
scas
imul
jbe
add
cli
es
pop
and
mov
cli
les
stos
jp
jbe
lods
dec
lods
dec
jb
lcall
rcrl
orb
loopne
or
push
push
or
pop
repz
test
pop
dec
test
push
cmp
sub
test
ret
inc
inc
inc
fistpl
pop
push
xchg
pop
push
loopne
scas
das
repnz
fs
or
das
add
lds
arpl
or
hlt
cmpsl
aam
mov
xchg
or
cld
dec
movsb
and
cmpsb
add
add
shrl
mov
hlt
xchg
mov
fildl
xor
lret
fdiv
push
or
cld
scas
push
inc
bound
sub
or
andl
jl
rolb
xor
jbe
outsl
adc
dec
dec
jl
add
sub
xchg
mov
adcb
sub
cli
test
in
pop
fisttpl
sub
dec
inc
or
test
jl
outsb
cmp
fcoml
xor
inc
cld
adc
sub
fs
pop
lret
cmp
push
and
test
sub
in
mov
ret
sbb
stc
fcmovu
sub
loopne
pop
inc
dec
mov
ret
pop
insb
shll
scas
jns
pusha
push
pop
pop
adc
out
cld
cmp
out
cld
xlat
insb
cmp
adc
mov
fistpl
jae
add
xor
rol
and
push
in
sbb
push
test
pushf
arpl
mov
jmp
pop
shll
jecxz
push
sarl
test
add
mov
sbb
into
pushf
cmpb
stos
sub
jo
mov
loopne
mov
inc
pop
dec
pop
jne
or
rorb
lods
xor
pop
jb
sub
outsb
pop
arpl
sub
movsb
fcmove
repnz
add
push
mov
add
jp
push
dec
push
shrb
pusha
push
push
out
fiaddl
hlt
adc
rorb
dec
movsb
and
mov
sub
les
ss
ss
mov
sti
push
jbe
and
scas
fnsave
mov
std
stos
push
push
add
enter
inc
xchg
lock
fwait
popa
sbb
sbb
jno
outsb
ret
lea
cmp
push
push
adc
pusha
sub
ljmp
xchg
pop
mov
cmp
lods
xlat
inc
pop
rep
jp
scas
adcl
data16
or
ret
stos
and
jl
aam
mov
ror
jbe
fcoml
push
adc
adc
pusha
adc
sub
aam
stc
inc
xor
sbb
jp
repz
dec
push
aam
loopne
loop
and
sub
add
and
fidivrs
mov
iret
add
testb
call
push
icebp
fld
push
leave
int3
flds
inc
lods
cli
and
movsl
add
and
add
dec
fdivrs
loop
mov
dec
xor
jne
push
xor
daa
or
in
mov
lods
bound
mov
aam
pusha
push
push
ds
mov
icebp
add
add
or
lock
das
cmpsb
push
or
push
push
xchg
mov
mov
rcrb
or
adc
mov
push
or
dec
mov
push
ret
rdmsr
push
test
jle
pop
out
push
pop
in
and
pop
std
mov
pop
xor
or
fiaddl
push
mov
cs
xor
lock
mov
enter
je
pushf
jb
es
lret
inc
insb
mov
test
daa
pop
aam
push
cmpsb
pop
adc
fisubrl
aas
xor
adc
enter
shlb
or
fwait
or
nop
mov
test
icebp
dec
testb
pop
scas
insl
adc
push
cli
mov
sbb
repz
insb
imul
mov
push
add
jne
push
pusha
add
xchg
fisubs
dec
in
imul
add
sub
call
fsubs
add
add
movsb
cmpsb
sbbb
mov
inc
loopne
adc
xchg
in
mov
sbb
ss
adc
cs
in
or
cmp
push
pop
or
xchg
and
push
cwtl
aaa
insb
mov
mov
popf
add
jbe
dec
sub
int3
out
loopne
xor
and
or
stos
test
mov
in
test
sub
add
sub
inc
es
jp
ffree
sub
pop
lock
pop
test
mov
movb
mov
or
and
mov
adc
out
movsl
cmpsb
inc
imul
clc
into
push
loop
lock
shrb
and
pop
scas
aas
js
jecxz
mov
icebp
dec
xchg
insb
shll
dec
lahf
cmpsb
push
out
out
mov
lock
inc
aaa
loope
sbb
pop
lret
fwait
in
lock
rolb
mov
jbe,pn
outsl
insb
ret
xchg
test
leave
mov
hlt
mov
fisubl
add
hlt
pop
add
sbb
sub
int
mov
inc
push
xor
stos
lret
push
int3
cltd
mov
dec
mov
cmp
popf
popa
or
int
mov
push
push
pop
addr16
add
rcr
out
lods
inc
popa
mov
xchg
ror
mov
mov
aas
and
sub
jmp
ret
pop
push
insb
mov
les
pop
lret
or
or
movsb
inc
jl
or
pop
ret
add
out
rclb
sub
push
dec
sbb
rcll
mov
adc
add
xchg
push
sub
call
gs
mov
pop
sbb
jp
adc
sbb
cmpsb
inc
xchg
xor
nop
jecxz
outsl
adc
push
repnz
data16
jo
pop
xchg
popa
es
repz
cld
stos
push
loop
movsl
adc
ljmp
and
and
adc
popa
fwait
test
lods
mov
add
push
xor
mov
adc
xchg
mov
mov
adc
pop
add
mov
pop
mov
push
outsb
sarl
and
mov
cli
je
repnz
ret
push
out
mov
sub
and
loop
mov
stos
mov
xor
movsb
mov
xchg
movsb
or
inc
push
and
adc
ds
cmp
push
shl
mov
das
mov
pop
inc
iret
ret
sbbb
mov
sbb
jmp
es
insb
cmp
stos
pushf
stos
and
adc
inc
or
pusha
pusha
mov
mov
or
mov
mov
lcall
data16
daa
lea
adc
jae
sahf
imul
jb
push
push
repnz
xor
xorb
aam
andb
test
mov
add
ficomps
insb
test
cwtl
outsb
scas
lock
sbb
pushf
push
das
scas
add
sbb
push
sbbl
jp
enter
push
sarb
inc
insl
sub
xor
and
arpl
adc
pop
mov
clc
ss
jne
sub
sbb
pop
mov
and
lods
lods
aam
addb
and
and
mov
inc
flds
pop
outsb
lock
adc
mov
add
push
stc
mov
adc
fsubrs
arpl
lret
mov
orb
js
out
movsb
mov
mov
sbb
adcb
mov
push
push
mov
pop
push
fs
and
pop
fcomps
shrb
push
icebp
add
push
mov
jmp
nop
inc
fs
push
jmp
or
inc
cmpb
add
add
fwait
mov
rorb
aad
cmp
in
and
add
pusha
pop
mov
dec
xor
mov
out
mov
cwtl
cmp
insl
mov
push
add
dec
cmp
mov
add
fdivs
subb
ret
lods
dec
dec
add
jp
sbb
add
cmp
xor
mov
mov
leave
inc
add
lock
pop
pop
adc
arpl
or
repnz
mov
push
push
test
xchg
jp
loopne
ficomps
lcall
pop
rorl
add
or
pop
sahf
mov
xor
and
xor
les
shlb
jecxz
dec
sbb
and
dec
mov
push
into
test
push
pop
push
adc
pop
ds
cs
jmp
inc
divb
loopne
dec
or
sbb
and
jo
aaa
mov
mov
push
dec
or
dec
dec
or
in
hlt
and
push
das
enter
xorl
add
ret
ss
adc
mov
cmp
sbb
int3
sub
es
lock
mov
xor
xchg
fistl
enter
pop
call
add
adc
sub
repnz
test
sbb
enter
push
mov
fisubl
inc
sarl
lcall
inc
shrb
nop
mov
xor
adc
and
sbb
mov
scas
lods
enter
xchg
movb
xchg
daa
mov
outsb
outsb
dec
sti
js
dec
roll
les
shrb
test
jmp
add
inc
pop
push
shrb
mov
xchg
jbe
and
adc
push
sbb
add
adc
xchg
cli
sbb
sub
dec
andb
xchg
jb
jo
mov
add
xchg
jge
jmp
dec
or
cli
dec
call
mov
fildl
xchg
xchg
punpckhwd
mov
scas
clc
hlt
xchg
dec
cs
add
xchg
je
sub
mov
arpl
icebp
push
ret
jbe
ret
in
dec
cli
or
repz
insb
lret
enter
dec
mov
jo
inc
repnz
mov
mov
pop
and
mov
xchg
jle
lods
or
dec
cmp
scas
add
inc
test
rorb
lcall
daa
loop
pop
xchg
shlb
clc
and
mov
loop
mov
and
mov
call
sub
es
push
rcrb
repz
lods
mov
and
popa
add
jle
pop
ror
sub
orl
insb
jnp
lcall
ds
cmp
add
sbb
push
xor
nop
jbe
je
xor
push
add
mov
sub
dec
push
adc
add
sbb
adc
jnp
push
add
sub
mov
push
cmp
jmp
push
adc
icebp
xchg
sub
sarb
or
pop
add
mov
pushf
cmp
sub
ret
js
adc
xor
and
hlt
in
push
mov
mov
pushf
aam
ljmp
pop
out
add
adc
jl
scas
inc
sub
leave
push
hlt
and
popa
test
mov
shll
cld
roll
hlt
push
fcompl
and
test
add
push
xor
and
mov
hlt
idivl
dec
jl
mov
or
xor
xor
outsb
adc
add
pop
cwtl
mov
clc
lock
xchg
mov
mov
stos
xchg
out
jnp
dec
pop
jb
mov
stos
dec
mov
sbb
pusha
sub
adc
fildl
clc
insb
aaa
insb
loop
mov
push
outsl
add
mov
movsb
push
sbb
ss
cs
insb
stos
and
movsl
in
in
cmp
mov
and
hlt
adc
sub
sbb
sarb
sbb
jbe
or
clc
cs
cmp
add
es
add
nop
push
inc
or
cmpsb
arpl
dec
aaa
adc
add
mov
xor
xor
inc
daa
int3
cmp
out
and
ret
fdivp
loopne
ret
inc
cmp
les
movsb
popa
mov
stos
ret
inc
adc
dec
ds
je
loope
push
add
push
lret
add
lock
test
xlat
divb
ljmp
test
cwtl
test
mov
les
xchg
jp
dec
mov
or
dec
mov
jp
cld
sbbb
mov
push
push
inc
out
dec
jmp
cmpsb
clc
mov
cli
leave
int3
lret
or
int
push
rolb
or
jmp
mov
or
pop
mov
aam
ljmp
lea
push
jnp
pusha
rorl
mov
and
push
ret
or
lods
jnp
ds
stos
idivb
xchg
lods
aam
jmp
or
lret
stos
into
insl
sub
dec
mov
ss
push
adc
ficoml
adc
lret
jg
inc
adc
dec
adcb
lahf
mov
push
jl
fimull
or
jmp
inc
jecxz
cld
addr16
les
pop
pop
loope
pop
loop
lds
cmp
loop
andb
insb
ret
mov
cmp
adc
lds
fidivrl
mov
inc
mov
jmp
stos
shlb
shlb
sbb
sbbl
xchg
cli
push
pop
and
and
pop
cs
mov
adc
popf
push
pop
mov
adc
cltd
jp
dec
insb
scas
dec
xlat
fdivrl
cmp
xor
sbb
sub
add
lock
data16
push
lds
adc
sub
and
mov
test
shll
hlt
ret
subl
or
ficompl
adc
push
pop
add
push
test
arpl
scas
cmp
jle
add
out
mov
xor
inc
ret
adc
cmp
or
add
fsubrs
sub
xchg
aad
adc
pop
jne
loope
lcall
rorl
dec
js
rorb
aam
roll
dec
imull
js
arpl
xor
pop
push
mov
cs
call
push
lods
sub
mov
hlt
or
sbb
xor
test
sub
or
loop
fimuls
cmp
and
lock
je
xchg
pop
stos
add
cmp
inc
fstl
aam
or
pop
mov
pop
cmp
dec
cmp
loopne
insb
sbb
xor
insl
ficoms
jmp
xor
inc
pop
inc
fistl
sbb
mov
adc
lret
mov
sbb
push
pop
leave
mov
adc
sub
cmp
dec
repnz
dec
add
xchg
jle
shrb
xchg
ret
aam
xchg
fsubl
imul
les
fs
and
push
pop
insl
xchg
lods
push
negb
push
test
shl
mov
inc
mov
jmp
imulb
mov
bound
hlt
into
or
mov
rcll
ret
pop
jbe
nop
jp
pop
loope
rcl
and
mov
mov
mov
fldcw
int
xor
dec
scas
stos
cltd
push
pop
inc
fsubrs
test
push
iret
xor
sub
or
andb
lea
push
cmp
dec
imul
incb
ret
pop
mov
call
arpl
daa
das
inc
aad
loopne
mov
loop
xor
or
test
push
cmp
mov
xchg
sub
lret
cmc
adc
push
sbb
arpl
mov
inc
sbb
xchg
lods
addl
push
shrb
push
mov
lret
or
or
pop
inc
xchg
aam
cmp
js
mov
test
jbe
pop
add
popa
orl
dec
inc
fisttpl
cmpb
mov
cmpsb
inc
xor
sub
mov
enter
roll
mov
sub
lcall
data16
jl
sbb
mov
add
or
fdivrl
jnp
or
sbb
mov
mov
xlat
xor
sbb
add
inc
in
fisubs
fwait
lcall
mov
add
loop
jns
out
cltd
sbb
mov
test
repnz
xor
sub
cmpsb
ss
mov
jge
mov
movsb
cli
das
add
and
test
xor
movsl
loopne
jl
fwait
push
jg
cmp
sbb
outsb
in
lea
pusha
xor
and
sub
dec
sub
cwtl
insl
call
or
mov
push
shl
push
ss
into
js
ss
push
add
test
xchg
xchg
fdivs
add
imul
inc
mov
sbb
fmuls
jle
mov
scas
jl
push
sbb
and
out
cld
or
rcr
shlb
mov
jnp
dec
adc
inc
inc
pop
mov
mov
sub
or
xchg
sbb
push
dec
mov
sahf
stos
cmp
and
mov
dec
test
test
jp
push
push
data16
mov
lods
and
or
mov
push
jno
pop
and
sahf
popa
jmp
jns
mov
ljmp
push
out
ja
push
popa
mov
mov
mov
add
mov
lock
ret
lcall
adc
cmpsb
mov
push
and
test
xor
fdivl
jo
idiv
add
mov
or
inc
movl
adc
inc
in
add
cmp
push
lea
in
lock
or
mov
hlt
rcrl
push
or
in
in
pop
or
insl
clc
and
add
popa
popa
push
inc
mov
jae
mov
jo
or
loop
jb
insb
push
push
call
ret
or
je
mov
hlt
or
ss
shl
outsb
hlt
and
paddsb
mov
in
test
mov
adc
test
mov
add
add
mov
out
cmp
add
ljmp
dec
push
xchg
add
fucomip
inc
fimuls
mov
loopne
inc
jle,pn
pop
sbb
lock
sbb
push
cmp
pop
call
fildl
jle
mov
adc
push
popa
outsb
jecxz
push
push
loope
std
scas
aam
dec
xor
sbb
push
stos
shll
and
test
fadd
fidivl
xchg
adc
cmp
popf
pop
pop
sbb
sub
push
jmp
push
cmp
or
add
and
lods
mov
mov
ret
jbe
dec
js
xchg
jb
dec
mov
outsb
jl
sub
and
pop
rcrl
and
or
mov
imul
mov
hlt
call
lods
enter
jbe
fs
or
call
out
gs
adc
sbb
inc
rcll
sarb
or
xchg
test
test
scas
or
dec
rolb
mov
fistps
mov
sub
pop
rorb
gs
inc
out
push
cmp
add
in
shrb
dec
pop
mov
sub
cwtl
jbe
sub
dec
mov
push
mov
pop
adc
or
aas
lods
jne
pop
mov
cli
pop
xchg
stos
sar
cmp
bound
mov
js
add
push
xchg
push
xor
mov
cmp
mov
cmp
xchg
add
scas
add
mov
cmp
xchg
xchg
cli
pop
inc
sub
push
xchg
or
ficoml
or
pop
pop
jb
lock
popa
mov
lock
push
mov
sub
inc
push
and
stc
cmp
mov
push
xchg
inc
xor
stos
cmp
je
pop
lods
inc
add
sub
sub
and
xor
add
les
xlat
sub
jecxz
mov
inc
cmpsl
pop
inc
and
test
adc
cli
xchg
aam
movsl
add
add
sbb
pop
pop
pusha
mov
xor
xchg
and
inc
xchg
jne
or
sahf
pavgb
jne
sbb
cwtl
pop
xchg
pop
add
lods
inc
test
sbb
adc
lcall
lret
call
insl
xchg
stos
inc
les
mov
mov
cli
rcrb
testb
xchg
add
test
stos
mov
es
ss
and
jl
xor
and
lcall
adc
ret
jbe
mov
movsl
pusha
in
ret
pop
inc
push
xchg
mov
inc
insb
cmpb
mov
iret
inc
shl
and
push
push
xor
adc
lods
pop
testb
in
stos
inc
add
pushf
mov
shlb
mov
rclb
pop
hlt
gs
pop
aam
aam
lahf
movsl
negb
fidivl
jo
inc
xchg
inc
call
or
adc
rolb
loop
movsb
ret
or
push
fistl
adc
inc
je
jbe
cmp
jmp
push
jb
lcall
mov
add
and
dec
inc
sbb
dec
roll
adc
push
mov
or
mov
mov
jne
test
adc
into
xchg
push
jnp
rorl
xor
mov
or
cs
pop
clc
fld
mov
mov
cmp
call
push
inc
inc
rorl
jge
mov
cli
dec
popa
jp
ds
scas
iret
or
sub
mov
jnp
inc
adcl
ljmp
mov
es
lcall
inc
or
and
xchg
lcall
xchg
rcrb
mov
or
cmp
mov
mov
dec
mov
out
push
mov
mov
bound
add
jae
or
xor
or
cmp
int
dec
mov
adc
aam
sar
push
sub
and
lods
pop
xchg
js
xchg
adc
rclb
mov
mov
jo
pop
cmpsb
stc
inc
mov
sub
mov
es
or
dec
jae
fwait
and
fs
dec
add
fisttpl
mov
mov
cmpl
outsb
adc
scas
lods
in
cltd
or
adc
and
idiv
jb
xor
mov
add
rcrl
mov
push
adc
mov
mov
and
add
mov
and
inc
pop
add
cmp
stos
clc
mov
test
call
inc
pop
pop
jle
jo
sub
pusha
inc
pop
mov
inc
mov
js
mov
add
adc
add
adc
adc
xchg
pop
mov
mov
aad
ret
sub
in
aaa
stos
in
les
cs
popa
xorl
adc
testb
clc
shrl
jb
cltd
movsb
add
push
xor
mov
mov
mov
push
mov
xchg
ret
mov
mov
jmp
xor
scas
cmpsl
sub
dec
std
jmp
mov
fldcw
not
adc
stc
gs
dec
push
data16
rclb
leave
inc
sbb
cmp
xchg
cmp
popf
cli
jg
inc
jo
cmpsb
add
jle
sahf
and
sub
xchg
cli
out
decb
js
and
ljmp
mov
mov
je
lods
jp
lock
ret
pop
add
test
and
sbb
or
sarb
cmpsb
sbb
test
mov
pusha
imul
sarl
ljmp
js
lods
das
push
pushf
outsb
push
xor
ret
imul
mov
sub
mov
xor
rcrl
fsts
idivb
cltd
test
mov
pop
xchg
pusha
sbb
sbb
mov
cmp
mov
addb
les
in
lods
xor
es
int3
add
inc
mov
pop
mov
sub
add
inc
adc
mov
push
xor
jg
adc
pop
sbb
push
push
aad
jno
ljmp
mov
scas
dec
bound
adc
mov
in
add
stos
cmpsb
sarl
stos
xor
fwait
cmp
xchg
les
sbb
inc
cmp
or
pusha
dec
rcr
push
push
je
xor
sbb
sub
sbb
loop
mov
test
out
cmp
pop
mov
mov
fs
mov
mov
jle
jmp
enter
ffree
add
add
testb
fdivl
lret
add
movl
aas
and
jp
cmp
dec
ffree
push
or
jo
sub
pop
add
je
loopne
stc
and
push
dec
push
movsl
or
out
add
data16
mov
push
jb
fsubrl
jb
dec
sub
push
pusha
sar
add
icebp
fadd
das
clc
cwtl
push
dec
repz
mov
dec
repz
push
popa
push
inc
aam
popl
mov
lods
push
call
inc
push
enter
mov
test
jbe
jge
cli
repz
les
les
mov
clc
inc
cld
adc
push
add
jae
lea
xchg
div
cmp
jecxz
and
cmpsb
or
push
aad
inc
insb
and
ret
add
pusha
push
ljmp
add
sbb
mov
add
cmp
rorb
lcall
ds
pusha
or
mov
mov
int
jle
je
xor
jno
popa
sub
loopne
add
movsb
add
dec
inc
pop
fs
push
dec
mov
inc
icebp
js
aas
push
mov
test
pop
fildl
inc
cmpsl
clc
fdivrl
mov
js
stos
sbb
mov
ds
sub
sti
jo
mov
loope
mov
stos
inc
push
cmpl
aad
lods
cltd
cld
shll
cmp
adc
sbb
addr16
call
cwtl
lahf
xor
sub
jno
jmp
sub
imul
sti
orb
scas
insb
ret
iret
add
call
mov
outsl
ss
pop
sarl
test
add
cmpsl
mov
lea
jbe
xor
loopne
jno
cli
aam
xor
mov
mov
insl
xchg
cmp
loop
mov
and
push
mov
sbb
xchg
shll
testl
movsb
push
push
jo
hlt
or
test
mov
mov
sub
dec
call
add
ret
popa
push
stos
mov
cmp
mov
xchg
bound
ss
data16
mov
mov
mov
imul
std
outsb
lods
es
clc
cs
orl
les
arpl
inc
xchg
rorb
jnp
lcall
push
and
add
push
test
xor
and
mov
cld
and
outsl
or
aad
fucomi
pop
xor
inc
xchg
sti
mov
mov
inc
dec
add
mov
sbbb
adc
sbb
pop
inc
jg
fs
mov
push
imul
and
nop
sub
push
push
push
outsb
int
syscall
adc
xchg
js
push
mov
adc
loop
mov
hlt
sub
and
pop
data16
pusha
add
int3
loop
add
dec
inc
mov
and
mov
lcall
jecxz
push
dec
or
int
sbb
clc
inc
xor
jmp
sub
sti
les
jle
push
mov
pop
scas
mov
nop
out
fs
jb
sub
inc
outsb
xor
push
pop
lds
orb
push
mov
or
or
fmuls
and
sarl
xchg
jbe
mov
xchg
jp
lahf
hlt
cmp
clc
xchg
ss
scas
mov
inc
pop
xchg
dec
outsb
addl
arpl
sbb
inc
loop
mov
push
cld
mov
in
ret
mov
jbe
cltd
push
mov
sbb
dec
cwtl
ret
or
jb
mov
ss
in
sbb
xchg
bound
fsubrp
or
testl
nop
loop
or
and
xchg
les
aam
jne
add
inc
lds
add
push
pop
jno
shll
mov
dec
cli
cmp
sbb
add
mov
sbb
lret
cmpsb
adc
mov
je
ficoml
mov
dec
adc
jmp
xlat
stos
scas
inc
mov
addr16
data16
ret
mov
xchg
push
inc
mov
pop
sub
iret
xor
pop
ja
jp
js
and
lret
pusha
fdivs
lods
sbb
outsb
scas
rclb
add
inc
insb
stos
in
shl
fsubl
cmpsb
cwtl
cs
rcr
or
jecxz,pt
jo
inc
or
jns
add
test
imul
inc
mov
ret
les
mov
mov
adc
adc
ffree
push
pusha
pop
out
cwtl
sbb
lea
xor
adc
adc
or
cmc
mov
mov
lret
dec
mov
inc
es
out
out
mov
fcoms
testl
jge
insb
mov
lret
daa
mov
push
mov
clc
jbe
aaa
pop
mov
nop
ret
sbb
sbbl
shr
out
pop
in
push
lods
into
xchg
js
shlb
adc
xchg
repnz
aas
xchg
pop
jmp
mov
or
jbe
ffree
ret
mov
xchg
xor
sbb
dec
pop
mov
addl
addr16
xchg
arpl
out
mov
lret
or
ss
mov
sub
in
mov
pop
call
in
pop
add
mov
mov
jne
mov
xchg
in
sahf
mov
sbb
lcall
scas
sbb
imul
call
clc
fucomip
ret
inc
fcmovnu
aaa
pop
mov
sbb
mov
xchg
jle
ret
lods
fs
mov
inc
mov
mov
dec
push
jnp
mov
jbe
cmp
cmp
mov
push
mov
sbbb
pop
cli
cmpsb
inc
imul
loopne
faddp
outsb
add
rolb
pop
insb
adc
push
icebp
push
push
mov
mov
lock
push
mov
push
push
lret
mov
xchg
or
mov
mov
mulb
mov
sbb
lods
xchg
rolb
sbb
mov
inc
sbb
das
mov
mov
dec
cmpsb
adc
test
mov
xchg
in
xchg
inc
cmpsl
sbb
enter
sub
add
int
sahf
sub
fsubrs
adc
pop
into
and
aam
mov
mov
call
sbb
xor
push
xor
push
sub
enter
movsb
push
aad
xchg
subl
mov
inc
sti
rorb
mov
ja
sahf
sbb
xor
fs
sbb
or
imul
cs
lahf
mov
int3
xor
or
fs
mov
lcall
push
dec
xchg
subb
xchg
or
pop
push
sbb
les
adc
stos
pop
xchg
daa
jle
cmpsl
jo
jae
scas
add
jno
push
test
in
imul
push
push
or
xor
pop
test
pop
mov
xchg
pop
cmc
sbb
push
adc
add
shlb
fs
scas
movsb
pop
fdivr
jo
shr
sub
dec
xorl
aam
xchg
xor
add
xor
xchg
xor
mov
into
daa
test
xchg
ficompl
adc
jae
mov
decb
stos
pop
cmpsb
ss
dec
popa
adc
or
sbb
pop
jp
je
dec
push
jl
bound
data16
sbb
mov
or
jl
push
add
push
or
or
mov
test
insb
loopne
jle
xor
or
int3
outsl
mov
sarb
into
cld
adc
sub
adc
jbe
xor
pop
mov
pop
add
xchg
rcl
cld
in
ljmp
outsb
and
fwait
mov
pop
pop
in
and
pop
js
pop
and
dec
xchg
roll
sti
and
dec
or
xchg
sti
aam
shl
xor
adc
loopne
fs
enter
scas
es
cmp
rcr
jg
loopne
cltd
lds
mov
insb
arpl
adc
loopne
sbb
xor
jbe
pop
xor
int
push
test
test
int
lock
mov
outsb
push
lea
mov
das
push
xor
loope
in
inc
add
sbb
cmp
and
fmull
cmp
movsl
dec
movsl
adc
clc
add
and
jbe
nop
xchg
popa
shlb
mov
or
xor
inc
inc
cmovb
push
add
adc
bound
lret
sub
mov
pusha
clc
test
lock
or
pushw
cmp
mov
mov
cltd
loopne
out
cmpsl
push
jbe
mov
dec
into
in
jnp
lret
add
int3
sub
in
mov
sarb
pop
mov
add
push
pop
fs
jl
sahf
imul
aaa
stos
xchg
mov
jl
add
repnz
xchg
shlb
add
add
arpl
push
imul
lcall
ljmp
mov
sbb
cmp
fdivl
inc
cmp
cmp
and
mov
rcl
movsl
push
lods
xchg
inc
inc
inc
lahf
push
xchg
enter
dec
lock
add
push
mov
nop
fmuls
movsl
mov
push
repnz
xchg
jl
lock
mov
bound
push
int3
mov
or
xchg
rol
add
loopne
icebp
xchg
imul
inc
mov
inc
push
mov
shlb
xchg
cld
and
out
add
movl
mov
insl
stos
push
mov
jbe
nop
inc
je
in
inc
xor
or
add
test
pop
icebp
rcrb
push
sub
fidivl
adc
fiadds
xchg
pop
push
inc
stos
js
xchg
imul
adc
jb
mov
xlat
out
pop
mov
mov
out
mov
pop
mov
add
arpl
fwait
lods
mov
xchg
mov
sub
cmpsb
cmp
ljmp
ds
adc
mov
cmp
push
cmp
fs
loopne
test
or
test
mov
mov
xor
xor
sub
les
js
pop
arpl
lahf
xchg
push
in
or
mov
inc
test
dec
mov
repnz
insb
clc
fs
and
sub
cwtl
test
in
sahf
insb
mov
sbb
mov
dec
in
in
je
xor
pop
les
sbb
sbb
mov
pop
fdivs
lret
jbe
std
xchg
into
test
repnz
pop
aas
hlt
xchg
push
xor
cmp
loopne
and
stos
ret
movsl
inc
ljmp
xchg
mov
dec
in
inc
insl
rcll
sbbl
mov
fcmovnb
lcall
or
push
jbe
mov
mov
psubd
jbe
dec
orb
add
daa
es
lret
iret
or
adc
mov
jl
cmp
lret
mov
add
xchg
inc
sub
and
mov
lods
mov
mov
shll
sbb
lds
enter
cmp
lahf
push
or
movsb
adc
push
popa
push
mov
jns
dec
add
movsl
mov
fadd
add
push
mov
push
test
mov
mov
mov
inc
ljmp
fldt
and
fdivr
lret
ss
test
adc
sub
jbe
loop
mov
add
out
mov
jl
ds
mov
jmp
xchg
or
pop
or
imul
nop
repnz
in
pcmpgtb
mov
aaa
stos
mov
add
inc
push
lcall
gs
inc
hlt
mov
aad
adc
mov
call
xor
pop
shlb
sbb
xor
jne
ljmp
shlb
xchg
aas
xchg
lcall
jne
cmp
push
shll
mov
add
gs
repnz
aaa
jb
dec
xor
call
cmpsb
shl
aam
pop
push
lret
xchg
xchg
lea
push
cmp
sar
loope
jmp
lods
mov
inc
adc
cmc
adc
or
sahf
dec
mov
push
int3
push
inc
pop
push
pusha
mov
rclb
shlb
in
sbb
add
dec
mov
mov
dec
sbb
xor
and
push
aas
mov
rolb
or
and
or
or
pop
jne
loop
cmp
push
add
add
fsubrl
ljmp
test
mov
shl
push
lods
jo
repnz
add
push
sahf
mov
ss
test
rolb
sub
mov
mov
mul
inc
xor
lahf
les
ljmp
adc
fs
sub
std
xor
mov
pusha
jg
add
fadds
je
xchg
pop
or
clc
mov
adc
xchg
push
xorb
lock
enter
sub
or
out
dec
fwait
mov
pop
push
test
hlt
lods
inc
mov
daa
jecxz
loop
mov
lahf
pushf
adc
and
and
popa
push
fiaddl
inc
sbb
aad
into
into
cmp
fstpl
push
mov
mov
dec
xchg
and
rorb
roll
sti
xor
lods
inc
adc
inc
jb
xor
mov
hlt
push
push
push
imul
lret
loop
dec
mov
push
push
ss
stos
fisubrl
imul
test
or
ret
pop
mov
xor
push
dec
push
or
dec
inc
fildl
cwtl
rcl
mov
mov
push
fs
push
mov
push
and
adc
lods
mov
or
xchg
fiaddl
jle
adc
cmp
xchg
mov
cs
adc
pop
shlb
lods
outsl
mov
nop
mov
pop
push
sbb
sub
fldt
shlb
ss
inc
popa
xchg
test
outsb
cli
adc
mov
das
or
sub
movsb
mov
push
lret
in
sbb
mov
push
sub
into
cmp
adc
mov
and
adc
dec
stc
xor
mov
cs
cs
ljmp
pop
dec
mov
mov
inc
rolb
lea
scas
cli
sub
bound
repnz
xchg
loopne
cmp
cmpsb
dec
stos
adc
mov
push
push
aam
scas
jp
dec
lcall
sarb
adc
shlb
xor
scas
inc
insb
xchg
dec
and
sbb
lods
dec
addr16
inc
daa
sub
inc
and
fdivl
lods
pop
daa
add
lcall
lods
inc
and
jo
les
filds
sub
push
or
xorb
push
pusha
mov
and
ljmp
add
dec
push
xor
push
and
mov
aam
mov
add
and
push
mov
mov
cs
lds
sbb
push
sti
push
mov
ficompl
or
lret
adc
repnz
jae
sbb
and
nop
je
aas
hlt
mov
stos
imul
jge
roll
test
xchg
mov
cmp
addl
lcall
pop
adc
xchg
jmp
insb
pop
cmovo
jbe
into
ret
leave
pop
sub
add
inc
cmpsl
test
enter
roll
cmp
inc
out
dec
dec
push
pop
add
inc
push
enter
mov
out
xor
aaa
inc
call
dec
rcl
stc
xor
cmp
ret
inc
sbb
pop
lds
jb
ds
push
xor
or
jecxz
dec
loop
lret
test
push
xlat
dec
sbb
cmpsb
push
cmp
fmuls
test
push
mov
aam
mov
mov
dec
jno
inc
rolb
add
jne
mov
xor
sub
cmp
jle
xchg
add
inc
call
cmc
fadds
jg
or
jge
testb
mov
call
cmp
rcr
push
ret
inc
add
cmp
dec
inc
pop
pop
jl
adc
leave
scas
test
repnz
jns
or
mov
add
rclb
inc
mov
sahf
cs
adc
roll
or
xor
pop
mov
out
mov
inc
adc
mov
or
fidivrl
mov
daa
and
mov
lock
and
imul
out
sbb
paddq
dec
push
scas
test
mov
xor
mov
mov
add
push
cld
or
push
rolb
jle
add
out
xchg
test
sbb
jle
or
sub
or
test
addr16
enter
adc
lods
dec
lret
cli
mov
stos
cli
pop
mov
rorb
lods
add
add
testb
or
and
adc
or
lock
mov
icebp
imul
test
rcrl
fistpll
scas
jo
mov
les
mov
ds
mov
out
xorl
aas
imul
jmp
inc
iret
iret
jb
jge
sub
mov
or
clc
cmpsb
lahf
cmc
out
mov
pop
test
or
es
fs
push
mov
in
rcl
xchg
xchg
cmpsl
faddl
dec
mov
sbb
repnz
loopne
cmp
cs
push
hlt
inc
push
xchg
in
sub
imul
gs
stos
inc
mov
rorb
imul
or
cli
dec
push
push
or
inc
cmp
in
mov
clc
in
ret
pop
pop
fcomps
dec
rclb
cmpsl
add
insb
or
insb
stos
xchg
xchg
xor
xchg
outsl
or
dec
pop
mov
je
sarl
test
es
xchg
push
cld
pop
sub
mov
jae
pop
call
jbe
pop
popf
and
ret
adc
adc
scas
pop
xchg
mov
sbb
lods
stos
test
cmpsb
popf
cli
int
mov
or
imul
add
enter
push
adc
mov
cmpsb
fwait
push
test
inc
into
inc
test
push
adc
adc
sub
insl
arpl
push
sbb
es
push
sahf
push
lret
mov
fisttpll
mov
mov
mov
mov
out
and
ret
shlb
aam
add
mov
and
adc
dec
push
jbe
push
adc
mov
inc
dec
in
movb
pop
jo
stos
mov
rclb
mov
cmpsb
scas
or
or
dec
lcall
inc
pop
or
lcall
adc
sbb
xchg
xor
sbb
inc
shlb
sbb
push
or
push
mov
xchg
adc
add
lret
push
sarb
mov
arpl
add
push
and
lock
add
outsb
mov
jl
pop
push
fsubrp
adc
or
mov
adc
sub
cmp
add
fsubl
mov
mov
xor
mov
mov
adc
fbld
add
ds
add
nop
jbe
jo
call
mov
push
call
cs
mov
push
adc
mov
es
push
inc
xchg
or
push
in
and
and
fadd
mov
stos
cltd
inc
inc
jmp
repnz
xchg
sbb
push
dec
push
shll
xchg
mov
push
test
or
and
xchg
fs
push
xchg
add
cld
adc
jp
add
outsb
or
stos
adc
sub
mov
mov
xor
dec
aam
test
push
cli
pop
xor
ror
rclb
cmp
jge
loope
push
xor
icebp
or
cmpsb
movsb
pop
mov
rorb
mov
or
bound
insb
lret
test
and
jmp
enter
jo
frstor
mov
out
aas
inc
ret
cmpsl
lret
test
clc
mov
inc
inc
dec
mov
les
mov
adc
cmp
mov
inc
xchg
mov
test
scas
or
mov
movb
in
add
ja
icebp
test
jns
or
add
add
adc
push
adc
push
jl
xchg
in
insl
mov
ds
jnp
cmp
sub
mov
add
nop
aad
add
adc
popa
inc
push
push
js
fidivrl
mov
aaa
cmp
jb
sbb
jbe
lods
les
sbb
inc
push
lea
test
fsubrs
adcb
testb
icebp
shrl
adc
and
lock
fs
rcr
inc
push
movsb
jp
in
adc
mov
rcll
push
adc
call
jbe
xchg
subb
les
adc
movsb
push
imul
div
cmp
xchg
push
repz
dec
jbe
ljmp
mov
hlt
hlt
mov
xchg
hlt
adc
pop
je
sbb
and
call
pop
or
and
in
stos
xor
and
shlb
add
jne
jge
arpl
pop
adc
or
lock
jecxz
dec
cmp
test
jl
stos
test
std
add
imulb
imul
push
mov
inc
ljmp
add
mov
mov
pop
mov
sti
jbe
call
lahf
mov
push
jb
insl
adc
cs
pop
mov
call
jnp
push
sbb
stc
mov
mov
jp
xchg
mov
lods
mov
movsb
adc
lcall
mov
and
nop
aam
insl
jnp
push
fs
xchg
ljmp
add
sbb
sbb
gs
or
or
clc
fcomps
jb
ss
mov
and
je
pop
lcall
scas
dec
mov
add
push
adc
mov
aaa
mov
mov
adc
pusha
push
ss
pop
and
xor
insl
xchg
out
loopne
pop
imul
lods
outsb
orb
pop
fldt
cli
ljmp
or
and
jbe
out
adc
inc
insb
sub
push
ds
sbb
push
sbb
in
sbb
xchg
out
in
push
cli
xchg
inc
fisttpl
fildll
add
fsubs
lods
push
pop
xchg
test
push
mov
xchg
aam
test
and
andb
adc
cli
push
in
or
jbe
push
fs
or
imulb
push
scas
add
adc
mov
adc
sbb
sub
shrb
cmp
or
test
dec
fwait
mov
or
xor
loopne
push
stos
fwait
or
mov
in
repnz
xor
or
test
out
clc
adc
xchg
sbbb
jbe
sbb
mov
or
outsl
repnz
scas
sbb
repz
shll
add
movl
cld
inc
ret
or
icebp
enter
insb
jbe
jmp
sub
daa
loopne
mov
jno
sarb
ss
dec
sub
sbb
inc
scas
repnz
jbe
mov
into
cmc
xchg
scas
stc
or
sub
sub
fcompl
stos
and
pop
add
cmpsl
mov
cmpsb
xor
jnp
xorl
sbb
js
pop
and
inc
in
je
mov
jmp
int3
sbb
and
mov
lea
xor
lods
adc
inc
push
mov
mov
ljmp
push
xor
mov
cmp
rol
bound
inc
sub
push
into
outsl
and
mov
inc
out
jle
mov
cwtl
sbb
ljmp
idivb
mov
pop
scas
mov
dec
movb
sub
jp
ret
in
dec
insl
jge
sub
mov
inc
nop
push
icebp
loopne
inc
fsubrl
adcl
push
les
mov
fsubs
icebp
stos
mov
push
sub
push
pop
push
mov
adc
clc
mov
addb
notb
jle
add
xor
rorl
fdivrs
add
and
adc
fdivrs
jle
and
xor
cwtl
mov
sub
mov
and
mov
jle
and
inc
cmpl
push
movsb
adc
cmp
mov
and
sub
push
cmc
test
loopne
or
outsb
pop
add
add
jo
test
push
mov
nop
aam
add
mov
push
mov
jbe
push
shrb
cmp
gs
lcall
jecxz
stos
jge
fcomp
pop
popf
add
sbb
sub
xorb
out
or
dec
push
out
cmpb
cmp
mov
push
lods
jmp
jbe
and
sahf
jl
nop
arpl
bound
aam
pop
add
adc
or
xchg
cmp
xchg
lcall
movsb
add
push
xor
enter
lret
test
add
loop
pushf
notb
adc
stc
andb
sbb
cmp
add
insb
in
xchg
test
xchg
sub
dec
or
jmp
jno
jne
inc
lods
lock
and
js
inc
xchg
add
jl
or
das
ficoms
jb
push
cwtl
mov
xor
shrb
push
lods
push
and
scas
xchg
nop
jle
xor
and
movsb
cmc
inc
add
nop
mov
mov
fs
jbe
dec
shrl
test
sbb
data16
lcall
cmp
adc
test
cwtl
dec
push
adc
adc
fisubs
push
mov
insb
test
adc
lods
fldt
mov
mov
mov
lret
scas
cld
stos
repnz
ret
jle
mov
and
mov
pop
fidivrl
rolb
and
adc
shrb
inc
scas
lods
test
mov
fidivl
les
cwtl
test
mov
ficoml
or
pusha
lea
cwtl
dec
call
mov
fsub
rcl
testb
xchg
cmc
jo
mov
mov
in
pop
insb
pop
fwait
popa
add
sub
and
jo
ror
out
xchg
mov
mov
and
call
push
jo
lods
imull
and
add
sub
sahf
or
mov
xchg
mov
cmp
push
push
add
push
adc
inc
loop
aam
xor
adc
outsb
in
xor
push
daa
shrb
mov
adc
sub
cmp
mov
jg
dec
xchg
movsl
and
pop
es
xor
or
xchg
iret
and
insl
sbb
loope
ret
adc
loopne
aad
and
mov
fcmovbe
mov
adc
and
insl
push
push
out
jmp
adc
mov
adc
xchg
ret
cli
jb
fcmovne
and
in
add
testl
mov
mov
mov
mov
mov
testb
cs
pop
aam
xor
jp
stos
cli
inc
ds
daa
lea
cmp
je
mov
and
shll
dec
and
sub
rcrl
test
cwtl
ret
add
sub
or
cmp
sub
scas
and
or
sub
pop
xor
push
add
jge
mov
push
es
add
push
jbe
call
jmp
and
cmp
lahf
mov
pop
rolb
sbb
aam
mov
push
fcomp
pop
icebp
sub
cli
push
sub
in
hlt
inc
inc
imul
add
or
aad
pop
fs
inc
xchg
loopw
fidivl
inc
sarb
inc
mov
mov
es
repnz
add
mov
dec
pop
sahf
cmpsl
insb
mov
test
xlat
movsb
sarl
mov
xor
cli
jl
movsl
test
mov
ret
push
and
dec
rol
lea
dec
add
loop
fsubs
inc
add
sahf
es
mov
fiaddl
mov
fsubrl
int3
xor
or
jnp
or
and
and
jp
push
movsb
fsubs
xchg
lret
insb
xchg
or
mov
sti
repnz
enter
xchg
cltd
aaa
insb
outsb
pop
aas
add
mov
and
data16
je
jmp
pop
inc
imul
pushf
or
ljmp
pusha
inc
aaa
shlb
cmp
subl
pushf
loop
inc
xchg
repnz
sbb
mov
sbb
setge
inc
gs
cmp
mov
popa
jae
pop
stos
add
push
sub
test
xor
js
xchg
and
mov
adc
push
sub
shrl
shrl
mov
stc
dec
ret
cld
fnop
lds
add
cli
add
cld
mov
lods
dec
xor
push
jl
mov
mov
loope
sbb
mov
and
xor
fcomps
das
mov
adc
aad
mov
or
xchg
fwait
mov
nop
jle
ss
jo
xor
mov
lcall
test
xchg
mov
andb
xor
inc
lods
stos
clc
jp
dec
insl
aas
js
sbb
lcall
popa
adc
sarb
loopne
and
and
stos
cmpsb
fsubrl
sub
loopne
pop
xor
pushf
jp
push
sub
inc
pop
stos
and
cmp
inc
mov
pop
dec
movsl
add
xchg
repnz
cwtl
or
js
add
lahf
mov
inc
test
rcl
add
inc
jp
flds
add
add
push
out
add
fsubr
pop
es
in
dec
sbb
sbb
orl
rcrb
shlb
es
js
aam
add
adc
nop
imul
out
push
data16
arpl
in
xor
test
mov
lahf
in
add
call
add
pop
repnz
int3
mov
int
mov
cmp
or
inc
into
inc
cmp
ljmp
push
adc
nop
jns
test
sahf
adc
sub
inc
lret
push
ds
ret
enter
fwait
je
shrb
push
lock
aas
imul
push
push
fistpl
mov
and
push
pinsrw
and
fstl
lahf
xor
sbb
push
jnp
insl
mov
add
fbstp
hlt
ret
mov
add
or
pop
ljmp
and
lret
add
mov
push
pop
adc
jo
mov
add
das
or
pop
pushf
or
or
aam
daa
subb
add
xor
out
test
orb
push
xor
push
push
cmp
sbb
dec
and
and
add
loop
mov
popf
mov
push
test
cmpsb
movsb
inc
lcall
ss
lcall
xchg
fwait
in
inc
jecxz
inc
repnz
xor
ret
inc
cmpl
ret
mov
mov
pop
or
ficompl
cmp
es
cli
mov
test
subb
adc
sbb
sub
pusha
in
test
xor
inc
cmp
dec
aam
or
add
jno
jno
and
adc
mov
aaa
inc
addl
jne
add
mov
shlb
jbe
add
jmp
int
aam
inc
fs
loopne
jb
jne
mov
lods
cs
pop
mov
mov
icebp
mov
sahf
or
mov
pop
inc
cmp
fs
and
jg
mov
mov
xor
ret
dec
cmp
push
inc
push
sti
nop
sub
xchg
jbe
xchg
hlt
xor
daa
mov
jecxz
lret
add
in
xchg
mov
add
addr16
add
pop
push
push
fistl
or
out
lret
mov
call
dec
and
clc
adc
push
sbb
cmc
insl
mov
pop
aad
andb
xchg
or
push
add
rorb
adc
mov
sub
pop
test
ljmp
cli
lret
or
andl
add
mov
aas
lods
clc
rorb
mov
pop
call
adc
mov
dec
mov
test
fscale
mov
loop
mov
mov
jo
mov
inc
xor
cltd
pop
shrb
outsb
shl
inc
or
jmp
cmp
inc
test
les
adc
jb
xor
inc
adc
mov
sahf
lods
mov
or
sub
xor
mov
stc
jne
lods
and
dec
or
push
jp
sarb
mov
push
andb
in
xor
add
fisubl
sbb
pop
push
faddl
int3
xchg
push
dec
daa
sbb
pop
cs
push
mov
push
cmpsl
in
xchg
mov
pop
and
add
sbb
mov
ljmp
inc
mov
add
stos
pop
les
jae
cmp
sbb
nop
clc
inc
add
jbe
jg
mov
je
push
fsubrs
xor
icebp
pusha
adc
dec
xor
cmp
mov
jns
cli
outsl
or
sbb
inc
lods
mov
test
test
add
sbb
popa
ret
rorl
jp
xor
fsubs
sbb
sbb
pop
test
stos
inc
xor
push
push
push
rorb
mov
dec
test
ret
mov
inc
sbb
std
ljmp
ss
test
push
test
sub
jbe
adc
or
out
inc
in
adc
aam
dec
pop
push
in
mov
cs
sbb
lret
cmp
mov
lcall
xor
shrb
inc
push
sub
push
dec
pop
push
or
add
rorl
rcrb
adcb
subb
les
or
sub
mov
lock
insl
bound
es
fwait
pop
or
xchg
sbb
test
mov
mov
push
sbb
push
mov
mov
or
sub
faddl
or
je
pop
add
loopne
xlat
mov
xchg
andl
or
fadds
mov
test
enter
or
scas
mov
push
out
cld
xorb
xor
dec
imul
or
mov
push
shl
adc
or
nop
ljmp
aas
hlt
sbb
nop
stos
pop
fwait
mov
inc
adc
mov
andl
ss
or
jno
inc
cmp
jnp
mov
adc
mov
cmpsb
shlb
xor
sub
cmp
adc
popa
xor
add
inc
flds
hlt
pop
cs
adc
xor
cmp
xor
sub
sbb
inc
outsb
xor
leave
popa
jge
test
xor
je
out
test
je
repnz
cwtl
rclb
sbb
shlb
loopne
and
nop
adc
sbb
add
and
mov
mov
jbe
inc
push
ss
mov
aam
in
sub
int
cltd
inc
cld
xor
push
mov
mov
sbb
add
and
mov
adc
pop
test
mov
mov
dec
xchg
push
adc
repz
xchg
pop
inc
sbb
jb
shlb
insw
inc
xchg
std
nop
icebp
test
popa
outsb
dec
cld
dec
mov
or
ds
stos
insb
sti
xor
out
sub
mov
sbb
mov
int
loop
mov
mov
iret
mov
fwait
fs
inc
jnp
cld
lods
adc
dec
mov
bound
idivb
xor
loope
shrl
nop
mov
push
sbb
adc
jbe
shlb
sbb
add
push
lret
xchg
cmp
adc
cmp
dec
xor
popa
hlt
outsb
hlt
arpl
imul
xchg
or
ljmp
mul
jo
mov
jp
inc
loop
ret
insb
mov
add
clc
lret
and
dec
adc
xor
enter
inc
xor
and
cs
cmp
sbb
sub
ds
ljmp
ret
add
mov
push
or
mov
dec
fdivl
stc
cmp
pop
and
shlb
or
jo
pop
cmp
mov
xchg
mov
fdivs
popa
test
or
movsb
mov
inc
fsubl
shufps
lcall
adc
test
aam
shlb
xor
rol
and
mov
jp
test
movsb
push
andl
cmp
push
test
xchg
ret
and
add
mov
ds
stos
add
add
mov
pop
and
cmpsb
pop
inc
or
mov
xchg
pop
mov
add
xchg
push
push
mov
mov
sub
faddp
push
mov
movl
in
xchg
test
or
sbb
jle
fidivl
xchg
in
scas
inc
in
mov
lahf
cmpsb
sbb
rcr
push
add
int3
xchg
mov
and
adc
cmpsl
clc
lods
mov
imul
mov
mov
cli
sbb
push
add
fisubl
les
adc
lods
adc
imul
shrb
ds
insb
bound
and
repz
insb
cmp
adc
mov
cwtl
rorb
flds
or
inc
inc
mov
cmc
adc
xor
cwtl
xchg
push
xchg
lods
jge
jns
lods
cmc
mov
subb
sbb
inc
mov
xor
bound
sbb
paddq
jl
movsb
inc
clc
dec
bound
pop
inc
lds
mov
lret
ss
shll
pop
push
jmp
inc
inc
or
or
jo
aam
leave
aam
clc
add
orb
push
loopne
mov
movsb
push
inc
xchg
loopne
push
test
adc
inc
inc
lods
fisubrs
stos
or
in
mov
sbb
sub
ss
push
push
adc
mov
and
sub
xor
cmp
jno
ret
sub
insb
out
adc
adc
dec
cmp
xchg
data16
pop
mov
insl
lds
out
jg
out
jbe
fisubl
push
cmp
mov
mov
push
xchg
dec
xchg
mov
and
xor
push
add
loopne
push
jno
loop
push
or
sbb
je
push
ss
dec
lock
leave
pop
sarl
add
stos
mov
stos
in
add
lret
cmp
xchg
lods
xor
cmp
jle
jae
dec
and
push
scas
add
das
add
repnz
push
pop
imul
inc
and
movsb
lods
sub
mov
mov
inc
cs
dec
xor
inc
push
adc
jle
pop
aam
adc
subb
jp
xor
lock
jns
jl
or
jne,pn
cmp
jne
rolb
js
mov
loopne
mov
push
or
aam
fiadds
sbb
shlb
mov
jno
mov
pop
lret
into
f2xm1
jecxz
and
adc
test
and
adc
push
mov
cli
push
jb
aaa
push
into
pop
adc
push
out
ficompl
xchg
sub
jl
test
orb
dec
subb
push
and
test
sub
adc
dec
xor
movsb
imul
inc
jmp
and
mov
adc
test
outsl
add
push
es
mov
add
mov
sub
push
cltd
adc
cmpsb
fsts
incl
nop
mov
imul
mov
push
inc
sub
sbb
xor
mov
and
add
lods
data16
clc
out
sub
and
out
add
mov
jb
adc
je
sub
adc
push
testb
jge
cmpsb
test
inc
sub
ficomps
mov
cmp
dec
and
pusha
mov
push
inc
ret
sub
es
inc
lcall
or
movsb
mov
inc
loop
fidivs
push
outsb
cmp
imul
and
sbb
jle
fwait
arpl
jp
enter
icebp
gs
clc
and
jl
cltd
dec
pop
addr16
add
in
mov
push
shrb
les
repnz
add
and
js
mov
fcmovu
cs
jl
fwait
inc
loop
inc
pop
sahf
xor
repz
pop
cwtl
dec
sub
aam
rcl
test
push
pop
sbb
xchg
or
inc
mov
mov
ret
in
dec
jo
xor
xchg
addl
out
bound
mov
sub
call
push
inc
in
push
fcoms
shl
cmp
add
sbbb
xchg
int
adc
xchg
inc
mov
movsb
shlb
xor
and
inc
wbinvd
mov
out
mov
cmpl
cld
xchg
pop
fs
stos
fldcw
or
lock
or
sub
or
js
int
sub
test
and
daa
insb
sub
out
bound
and
cmp
outsb
sahf
sbb
adc
push
shrb
mov
imulb
lcall
lret
mov
add
jl
out
out
or
fs
adc
test
pop
mov
into
int
sahf
dec
dec
int
cmp
mov
ret
jge
push
add
push
add
fnsave
std
cmpsb
fiaddl
xor
sbb
js
fldcw
test
mov
push
push
xchg
fdivs
lods
scas
dec
push
hlt
sbb
add
popa
mov
lock
ret
pop
xchg
pusha
pop
int3
dec
adc
and
xor
mov
lea
inc
mov
push
negl
adc
mov
pop
jo
lret
push
js
stos
pushf
add
daa
rorb
push
jl
scas
jbe
cmp
add
push
xchg
rolb
ja
int
dec
dec
divb
stos
jo
je
sti
add
mov
mov
pop
imul
sbb
inc
jecxz
push
shll
add
push
ret
pop
lock
xchg
insl
sub
adc
mov
mov
dec
mov
adc
fwait
lcall
mov
jmp
loop
ds
orb
or
jo
xor
adc
or
mov
add
xchg
lds
enter
test
cmp
jb
rorb
mov
mov
lret
aam
dec
loop
mov
loope
cmc
or
adc
rclb
add
bnd
and
rcl
add
pop
lods
out
call
sahf
xchg
push
popa
pop
adc
dec
gs
adc
pop
xor
aad
aam
dec
fcom
or
sbb
ljmp
call
movl
mov
add
and
or
fsubp
aaa
sub
lock
cmp
pusha
push
cltd
mov
andl
mov
clc
scas
jl
xor
push
ds
push
cmpsb
sbb
cmp
fmuls
pop
lcall
push
test
pop
outsb
xor
aaa
shll
adc
insb
and
sub
mov
ljmp
xchg
mov
pushf
xorb
ljmp
push
jo
mov
push
mov
test
fsubs
js
das
dec
xor
hlt
mov
loop
xchg
fbstp
pop
adc
jnp
push
or
push
mov
in
nop
test
mov
mov
dec
mov
add
hlt
repz
test
push
loopne
shrb
xchg
stos
add
inc
mov
loop
inc
sub
xor
test
call
test
or
mov
push
inc
test
rolb
mov
push
pushf
and
cld
adc
and
add
xchg
mov
xchg
cmp
mov
scas
xchg
sbb
add
and
cmp
mov
pushf
pop
and
sub
add
pop
adcb
mov
insb
inc
xchg
xor
loope
clc
sub
les
pop
sub
into
scas
inc
lods
loop
lods
out
jle
xor
push
lea
push
or
or
daa
and
pop
ss
fdivrs
dec
ror
xor
and
lock
mov
dec
insb
push
push
add
jb
adc
or
sbb
add
fwait
sub
push
fistpl
push
adc
xchg
xchg
hlt
cmpsb
icebp
adc
test
mov
mov
fimull
rcr
sub
mov
adc
lods
daa
sub
jo
mov
cmp
push
xchg
and
aam
shl
or
imulb
jo
jl
mov
mov
sub
pop
inc
cmc
popa
mov
xor
out
ds
xlat
xor
or
ret
push
mov
sub
adc
fwait
add
cli
pushf
aad
mov
mov
inc
push
push
jl
subb
out
mov
adc
lcall
jle
mov
sub
ss
xchg
test
add
push
pusha
push
and
imul
add
lods
xorl
add
fisubrl
inc
inc
pushf
add
stos
adcl
dec
lods
int3
movsb
imulb
bound
test
stos
pop
mov
sbb
test
fs
push
movsb
pop
xor
mov
add
pop
inc
cmp
sbb
push
rorl
fistl
clc
xor
sahf
mov
mov
and
shrb
imul
sbb
lahf
add
les
dec
rolb
push
insb
adc
xchg
push
je
cwtl
in
sbb
add
xor
push
or
add
sub
adc
out
into
and
xchg
mov
xchg
inc
jb
jno
les
push
loop
cwtl
pop
push
rcr
fdivrs
ret
and
pop
pop
mov
inc
dec
pop
dec
imul
shl
mov
inc
xchg
mov
pop
pusha
cmp
jl
shrb
cmp
mov
push
les
push
pavgb
add
pop
rolb
push
fildl
adc
xchg
es
and
bound
push
push
sub
mov
wbinvd
jne
add
add
cwtl
fcmovb
cmp
cmp
filds
test
cmp
fadds
daa
pusha
mov
dec
add
dec
in
cmpsb
mov
dec
or
out
mov
jl
add
inc
xor
popf
es
test
jne
shrb
icebp
int3
std
pop
sbb
mov
gs
movsb
adc
lock
fldenv
aad
dec
mov
push
mov
and
mov
ljmp
shll
mov
es
jmp
xchg
cli
sarb
stos
dec
add
push
and
xlat
mov
les
js
mov
add
lea
push
js
dec
in
adcl
aaa
adc
cmp
andb
pop
mov
sbb
and
outsl
mov
mov
hlt
cmp
fs
rclb
add
sbb
ljmp
xchg
stc
push
lcall
repz
xor
adc
cwtl
movsl
push
jb
imul
push
scas
inc
ss
sub
outsb
add
add
in
notb
mov
sbb
lea
dec
xlat
dec
add
push
es
ljmp
pusha
push
adc
cli
xor
add
pop
js
lods
mov
mov
es
arpl
add
xor
rolb
adc
push
arpl
xor
add
push
dec
push
xchg
pushf
adc
sbb
in
push
daa
add
jecxz
loopne
inc
and
and
xor
mov
adc
lcall
addb
push
adc
jb
hlt
shlb
ds
or
mov
xor
pusha
in
cmp
cvtps2pi
add
insb
add
and
add
sub
adc
call
loop
xor
test
in
or
sti
dec
xchg
stos
pop
scas
loop
scas
stos
sub
adc
icebp
add
dec
sbb
je
mov
shll
push
or
mov
push
sbb
add
dec
fmul
add
add
jecxz
or
int3
movb
mov
push
jge
push
push
add
mov
addl
cmp
pop
loop
je
jmp
sbb
movsb
push
pop
mov
adc
add
or
push
inc
pop
test
add
outsl
adc
repz
jp
mov
mov
arpl
fs
inc
inc
xchg
inc
testb
mov
xchg
jb
cli
es
push
test
test
enter
pop
inc
mov
jno
dec
int
adc
scas
loop
adc
or
pusha
lods
les
jbe
jae
lock
imul
fcompl
adc
dec
pop
mov
loopne
mov
fs
cmova
jnp
mov
movsl
xchg
mov
add
shlb
cmp
sub
sub
mov
aam
movsl
adc
inc
jp
mov
or
nop
add
jge
and
ds
cwtl
div
pop
mov
or
mov
and
mov
rorl
in
rolb
or
mov
es
sbb
cmpsb
bound
jle
rorb
adc
mul
shrb
or
fidivrl
mov
stos
popa
push
adcl
push
je
mov
fmuls
push
movsl
pop
mov
loope
mov
es
xor
mov
cltd
out
adc
and
dec
sbb
xor
or
repnz
outsl
or
adc
pop
mov
fiadds
sub
and
adc
and
add
xor
mov
adc
mov
imul
pop
dec
sahf
out
xchg
jp
ds
push
lcall
cmp
in
hlt
cmp
xchg
rorl
inc
popa
mov
jl
in
mov
or
fistl
aam
repnz
push
xchg
add
fs
mov
mov
inc
jmp
xchg
sbb
adc
push
scas
dec
movsb
pop
add
fs
out
repnz
lods
inc
dec
pop
add
xor
pop
lods
add
mov
add
hlt
jb
or
mov
push
out
adc
or
mov
out
scas
push
sahf
or
push
push
mov
mov
mov
mov
hlt
dec
mov
ljmp
icebp
hlt
dec
xchg
cld
jbe
cli
dec
mov
xchg
inc
or
mov
xchg
lcall
mov
push
shr
xchg
lret
shlb
mov
iret
sti
sub
add
lods
lcall
add
jl
xchg
rcr
mov
jl
inc
mov
or
or
push
push
pop
push
fwait
push
add
ja
add
mov
in
push
sbb
and
insb
sub
adc
fdivrs
sub
xlat
add
add
cmp
mov
rcl
inc
movsl
lret
subb
jle
push
xor
rol
scas
inc
cmp
mov
push
jp
mov
xchg
test
xchg
es
mov
pop
or
push
xor
mov
mov
pop
inc
sub
in
add
xor
sub
mov
mov
xchg
inc
les
dec
pop
mov
push
das
add
pushf
push
sub
cmp
and
dec
add
enter
test
popa
mov
inc
add
or
and
lcall
loop
icebp
dec
mov
scas
add
mov
or
or
adc
ss
push
jbe
mov
cmp
or
push
shlb
jp
pop
dec
adc
xor
or
dec
adc
xor
into
xchg
das
sub
push
xor
test
jl
mov
stos
sub
fcoms
pop
and
add
fisttpll
stos
lcall
mov
jl
sbb
mov
inc
mov
dec
xor
aaa
ljmp
shrl
mov
pop
jo
rorb
pop
jnp
dec
sub
and
xchg
push
aam
mov
add
pop
cmp
and
inc
push
out
out
aam
sub
jo
das
sub
adc
cmp
lock
dec
mov
imul
ja
dec
mov
stos
addb
orb
test
jp
mov
loopne
push
jg
push
or
imul
xor
push
xchg
and
pop
mov
lods
inc
sarb
inc
rcl
push
mov
jmp
push
jnp
lock
jl
mov
lds
das
add
dec
inc
adc
aam
pop
jo
cmp
sbb
ss
jbe
cmc
insl
lods
test
mov
adc
and
rcll
jbe
mov
mov
push
and
xor
pop
call
je
enter
cmp
xchg
movsb
scas
push
cs
mov
dec
dec
cli
rolb
pop
shl
mov
and
jno
popa
fwait
inc
mov
lahf
add
test
incb
movl
negb
jno
or
test
mov
pop
es
jle
xor
insb
cmpsb
mov
inc
add
mov
out
fcmovnbe
adcb
pop
lea
or
iret
inc
icebp
dec
add
subb
loope
mov
pop
or
and
inc
mov
adc
sbb
pop
ret
mov
push
xlat
and
mov
insb
enter
adc
pop
or
mov
push
jnp
sub
mov
lcall
insb
jo
mov
negb
adc
dec
lret
add
xor
test
push
inc
mov
ret
and
fidivs
icebp
insb
notb
add
inc
push
repz
aam
in
pop
mov
lcall
jp
mov
in
ret
xchg
inc
dec
cmc
or
pop
dec
pusha
or
mov
scas
add
sbb
adc
add
lods
xor
lcall
push
lcall
pop
cmpsb
add
mov
sub
add
adc
push
mov
inc
push
in
xor
push
add
or
int3
insb
outsb
insl
ds
cmp
sbb
faddl
lret
add
loope
mov
dec
push
add
jno
mov
leave
add
dec
cmc
cwtl
out
shlb
inc
cli
or
lods
push
jl
mov
test
leave
popa
sub
sarb
sub
and
xor
adc
pop
sbb
or
dec
sbb
xchg
insb
cmp
jbe
pop
sub
cmp
mov
pop
fsub
roll
sub
adc
pusha
ret
testb
jl
push
inc
in
cmp
mov
mov
aam
jmp
push
add
sahf
pop
xor
sarb
mov
cli
rcll
out
in
inc
adc
add
mov
je
mov
fisttpl
jle
and
mov
jns
push
add
push
bnd
fildl
lret
movsb
lods
leave
jle
in
inc
push
fcompl
mov
or
lea
jo
iret
xor
pop
sub
sub
aad
shrd
push
lea
mov
sbb
jmp
orb
out
icebp
pop
mov
addl
das
flds
push
in
xor
call
les
testb
mov
fcmovu
cmp
dec
stos
adc
jns
test
inc
jnp
aam
push
dec
loope
sub
inc
push
test
jbe
testb
data16
sub
push
dec
frstor
mov
hlt
mov
xchg
les
push
scas
add
xchg
push
and
jl
mov
pop
push
push
fmuls
loop
sbb
pop
shrl
mov
lret
test
xorl
fisubs
aaa
ss
pop
les
pop
hlt
pop
imul
fsubl
xchg
inc
ss
stos
fildl
and
add
push
sub
lcall
pushf
shrl
and
test
cltd
ds
jb
mov
pop
mov
cmp
mov
test
xchg
imul
clc
cs
push
lock
das
pop
fiadds
jecxz
fwait
or
xchg
out
fdivs
imul
jp
and
daa
cmp
mov
out
jnp
bound
xchg
jne
xchg
sti
scas
xor
pop
xchg
and
mov
mov
scas
sbb
jo
xchg
mov
fdivr
popa
imul
js
inc
lods
lcall
xor
jo
test
mov
mov
add
fists
pusha
add
int
mov
in
cs
testb
test
mov
add
lods
cmp
xor
adc
mov
movsb
fdivrs
cmp
jbe
int3
push
mov
cld
stos
sub
mov
inc
xchg
add
xor
jl
mov
popf
xchg
inc
pop
movsb
or
xor
aas
mov
xchg
add
bound
mov
or
cmpsb
push
push
enter
call
clc
pop
jp
pop
test
addb
push
add
cs
dec
sbb
inc
lock
mov
xor
rolb
pusha
adc
sbb
dec
movsl
mov
int
add
insb
dec
stos
daa
inc
pop
gs
lock
xchg
lods
mov
and
mov
cmp
mov
push
fistpll
xor
push
xchg
mov
push
mov
sbb
aas
jo
mov
xor
loop
mov
sbb
cli
xchg
loop
xor
mov
rorb
fbstp
ds
inc
cld
mov
mov
fcomps
push
sbb
pusha
or
lods
mov
jl
iret
mov
enter
psrld
mov
and
cs
or
popf
js
shlb
ds
inc
repnz
movsl
push
fmull
push
dec
mov
mov
mov
rolb
jle
and
mov
cmp
pop
sarl
movsb
imull
inc
xor
xchg
mov
and
imul
cli
sub
jl
testl
mov
icebp
sbb
adc
repnz
jb
sub
mov
gs
pusha
movzbl
cmp
mov
inc
push
xchg
pusha
mov
cs
sbb
enter
shll
sub
adc
push
inc
nop
mov
call
mov
popf
jo
xor
bound
mov
sarb
xchg
pop
rolb
stos
sarb
jp
jnp
hlt
jne
ljmp
pop
jo
and
add
sbb
jge
ljmp
mov
push
jb
jo
hlt
push
fsubs
outsl
aad
lret
push
js
call
clc
mov
push
and
je
dec
mov
daa
lea
lods
dec
test
mov
pop
lcall
loopne
inc
js
dec
push
or
aaa
mov
in
aad
cs
adc
mov
mov
dec
inc
inc
sti
xor
add
pop
ljmp
sbb
sbb
mov
popa
imul
mov
repnz
or
je
mov
pop
enter
pusha
negb
lds
inc
push
inc
pusha
add
fbld
out
into
xor
das
adc
pop
push
jl
dec
sub
cmpsb
addl
adc
push
jbe
jmp
hlt
cmp
fdivrs
add
incb
inc
or
data16
sahf
sbbb
fsubrs
push
inc
divl
mov
push
xor
or
and
xor
push
sbb
mov
fdivs
lds
xchg
ret
stos
xor
outsl
add
sub
daa
je
gs
lahf
rclb
adc
dec
aas
es
fsubs
lds
cltd
mov
dec
daa
sub
repnz
jno
jmp
pop
cmp
hlt
cmpsb
lock
dec
mov
fnstsw
push
clc
pop
mov
add
pusha
sbb
addb
lock
push
outsl
pop
add
andb
sti
add
xor
insb
andb
push
shr
stos
mov
scas
cs
pop
cmp
call
dec
inc
fistl
sub
lea
sub
movl
cmp
add
loope
inc
imul
out
sbb
cmpsb
mov
jbe
and
or
xor
jno
cs
orb
in
or
xor
push
fistpll
out
adc
fdivrl
sub
inc
pop
int3
lcall
cmp
pusha
push
lahf
jp
cmc
or
jne
inc
fiaddl
push
shl
add
mov
cmp
pop
or
lret
enter
inc
adc
and
sahf
mov
out
in
sub
cs
add
cmp
scas
shlb
pop
mov
jbe
push
push
cmp
xlat
decb
pop
sub
add
jecxz
push
pop
icebp
inc
push
or
jp
jecxz
mov
pop
xor
dec
das
push
fisubrl
xor
pop
inc
js
cmp
cmp
add
sbb
add
notb
mov
jne
insl
push
inc
cmpsb
inc
dec
inc
stos
outsb
xor
or
inc
jne
push
jge
fisubrl
insb
push
sub
mov
jne
jno
jmp
cwtl
mov
inc
adc
sbb
dec
sub
fcoms
ret
fwait
push
mov
add
or
push
lret
call
inc
aas
dec
push
outsb
dec
jbe
push
mov
dec
sub
movsl
repz
nop
loop
push
add
scas
stc
xchg
bound
mov
test
or
leave
fisubl
jl
loopne
cmp
adc
js
xchg
icebp
pop
mov
cmp
inc
inc
jp
mov
mov
lock
ds
mov
test
cli
xor
ret
ja
add
pushf
push
adc
mov
mov
test
push
icebp
lcall
das
fisubs
adc
or
and
lcall
xchg
inc
hlt
fcomps
xchg
and
xchg
shrl
xchg
xor
xchg
mov
in
sbb
and
dec
mov
leave
push
aam
ficoml
xorl
frstor
jle
sbb
test
mov
cmpsb
xchg
stos
push
dec
fdivr
int3
xchg
cwtl
add
adc
test
mov
lcall
xchg
fdecstp
jo
add
popa
sbb
xchg
out
cmp
jp
xor
imul
dec
sahf
adc
and
add
rolb
adc
sbb
or
cmp
push
ljmp
push
add
mov
mov
cmp
pop
cmpsl
ds
push
push
repnz
rolb
sarb
xorb
dec
ljmp
or
add
inc
mov
cli
lahf
push
pop
or
dec
loopne
or
xlat
push
mov
pop
add
mov
imul
lods
lock
cmp
lock
xor
mov
sbb
mov
or
js
jmp
aam
aaa
imul
imulb
mov
lods
adc
push
dec
stos
andb
scas
pusha
sub
jae
mov
ljmp
and
mov
mov
cwtl
jbe
mov
jo
sub
repz
fldenv
hlt
fisubl
stos
pop
das
pushf
test
mov
sarb
pop
sub
inc
out
push
cs
sbb
scas
and
inc
sti
add
jle
jo
or
sbbb
push
sbb
subl
adc
repnz
jp
xchg
movsl
arpl
pop
icebp
dec
cmpsb
cmpb
xor
dec
les
inc
ffreep
cmpsb
stc
adc
push
sbb
push
orl
mov
mov
scas
jbe
fcoml
xor
adc
mov
mov
mov
pop
mov
adcb
outsl
imul
popw
ss
lret
mov
pop
nop
inc
shrl
lea
push
mov
mov
push
xor
les
or
pusha
dec
ljmp
dec
mov
lea
jecxz
rolb
mov
hlt
adc
cmpsb
or
das
pop
add
mov
pop
inc
inc
push
imul
push
je
sub
and
test
cmp
mov
fbstp
sahf
pusha
fs
push
pusha
inc
aaa
sbb
cld
les
sub
jb
data16
cld
and
cmp
ljmp
mov
inc
arpl
fistl
mov
lahf
push
test
mov
xor
xchg
pusha
int3
pop
adc
and
dec
mov
jae
push
mov
aaa
or
xchg
jnp
cmp
call
outsl
and
pop
lea
data16
dec
and
cmc
push
pop
adc
fs
and
push
cmp
xchg
inc
xchg
in
and
mov
dec
sub
cmp
pusha
pushf
cwtl
fisttpl
mov
fisttpl
lret
rolb
ljmp
jb
orb
in
mov
push
or
add
mov
add
mov
sbb
fidivs
mov
arpl
insl
mov
sub
push
sbb
or
jp
cmpsl
insb
xchg
dec
hlt
in
and
dec
incb
inc
aad
mov
cld
stos
sub
xor
mov
jle
or
cmp
xchg
lahf
and
mov
mov
ss
fidivrl
push
and
cmpsb
mov
inc
and
cwtl
xchg
loopne
jle
fs
bound
cmp
sarb
mov
cmp
cmp
or
out
call
mov
xchg
mov
clc
sub
fs
mov
push
cmpl
jno
stc
pusha
and
push
adcl
dec
add
cmp
test
dec
or
mov
mov
fldl
xchg
mov
pushf
add
and
mov
add
adc
xchg
test
cli
or
adc
stos
sub
out
and
mov
bound
inc
in
mov
pop
pop
stos
jle
popa
add
pop
subl
inc
cmp
sarl
dec
ficompl
cmpsb
sbb
lcall
fbstp
push
cmp
sub
in
adc
lcall
push
fsubl
data16
ljmp
out
stos
xchg
mov
push
adc
pop
shlb
and
mov
xchg
hlt
test
jle
sbb
xchg
ret
push
sub
mov
pushf
xchg
inc
cmp
add
lret
cs
cs
mov
pop
lods
sarb
push
je
lods
jmp
mov
jl
xchg
push
and
and
lods
loopne
sarb
inc
cs
xor
sbbl
out
dec
ja
adc
mov
dec
cmp
inc
dec
xchg
fdivrs
test
dec
push
and
adc
lock
mov
lret
sahf
ret
aas
pushf
cs
and
cld
mov
add
jbe
lods
mov
rolb
mov
cli
sub
adc
mov
push
loop
and
mov
inc
xorb
sbb
lds
and
std
and
daa
roll
test
fs
adc
es
sbbb
and
push
xor
stc
xchg
ror
dec
mov
into
nop
add
loopne
lcall
mov
inc
loopne
or
sbb
inc
xchg
xor
cmp
pusha
xchg
movsb
mov
and
aam
jp
lds
push
ds
leave
loopne
mov
cmp
push
cmp
mov
test
rolb
xchg
mov
mov
sub
out
mov
xor
fs
cmc
push
in
rcl
add
psubusb
shll
mov
ss
mov
or
inc
std
xchg
mov
scas
or
call
and
cmove
fcomps
es
mov
xor
cmpsb
xor
add
or
fdivs
into
add
in
add
mov
fistl
or
mov
push
jo
fcom
movsl
and
addr16
ret
sub
sub
adc
das
sbb
mov
push
mov
or
movsb
shrl
iret
cmp
fwait
dec
jo
mov
es
pop
arpl
sub
pop
push
add
mov
enter
sub
mov
push
push
jle
aad
add
imul
add
sub
adcb
mov
xor
ror
mov
add
sub
adc
stos
insb
ficoms
xorb
adc
andb
push
xor
jbe
pop
js
adc
in
or
pop
pop
mov
lcall
or
gs
sub
mov
sbb
pop
add
loope
dec
or
insl
xlat
daa
rcrl
mov
dec
outsb
addb
mov
cmp
or
jb
mov
dec
ljmp
pushf
shrl
sub
in
adc
mov
jle
fdivl
scas
sub
lcall
fs
inc
dec
push
sbb
pop
or
pop
int3
arpl
mov
lret
insl
push
sarb
cmp
dec
shr
or
jecxz
jbe
and
push
and
loop
mov
mov
sbb
inc
add
sbb
xchg
mov
push
sbb
stos
cs
jo
fldenv
int3
js
mov
or
xor
cmp
nop
test
sarb
ljmp
add
add
mov
xor
xor
sub
mov
pop
xchg
push
cli
sahf
and
add
push
xchg
arpl
leave
mov
cmp
jp
into
mov
bound
outsb
cmp
pop
jb
push
scas
xor
fwait
std
sbb
xchg
lods
mov
xchg
pop
pop
sub
add
push
dec
push
pushf
cmc
sbb
lds
addr16
fisubs
in
jl
inc
cmc
loop
pop
cmpsb
call
loopne
fsubrs
xchg
lret
fnstcw
jae
xor
jb
lcall
das
add
loopne
mov
pop
add
add
mov
jbe
sub
cmp
inc
popf
ret
or
in
pop
mov
mov
mov
and
movsb
cli
add
mov
les
cs
inc
pop
jae
push
jne
popf
and
jbe
test
add
out
jb
mov
loopne
sub
add
and
les
dec
mov
loopne
mov
adcb
mov
adc
sub
sub
stos
and
cmp
sbb
push
inc
fdivrs
mov
jp
js
sub
cmp
jmp
inc
insl
mov
adc
hlt
rorb
dec
je
enter
cld
jb
insl
pop
mov
cmp
mov
sbb
orb
aam
sub
pop
into
jle
sub
mov
test
and
mov
dec
mov
or
gs
es
fidivrs
rcrl
lret
hlt
sub
xchg
or
test
and
ljmp
add
out
pop
push
rdmsr
popf
ret
mov
push
sbb
syscall
insl
cmpsb
sahf
dec
xor
mov
sub
push
add
xorb
add
ss
rcrb
mov
inc
shlb
lret
cmp
in
mov
fdivs
jle
sub
lock
fiaddl
repz
add
and
adc
sbb
fdivrs
dec
jl
mov
loopne
push
dec
jle
mov
inc
insb
mov
or
mov
xchg
mov
add
mov
mov
daa
xchg
dec
push
jle
mov
mov
xor
aaa
outsb
or
push
and
ljmp
inc
loop
mov
pop
inc
adcb
xchg
push
xchg
mov
sub
repnz
sbb
jbe
inc
pusha
inc
sub
jmp
inc
mov
jbe
je
daa
pop
xor
dec
dec
mov
or
push
arpl
add
mov
jnp
jecxz
sbb
pop
das
test
lcall
sbb
push
testb
xchg
sub
mulb
rorb
jge
sub
rol
adc
sbb
pop
push
cmpsb
mov
cs
andl
add
lods
outsb
nop
or
psubsw
fwait
adc
or
aam
push
push
mov
ljmp
inc
xor
insl
push
rorb
xor
sub
out
movsl
lret
lret
add
mov
mov
push
mov
call
add
add
ret
imul
and
lock
sub
push
push
add
sahf
mov
ret
xchg
test
or
jns
pop
jbe
mov
xchg
stos
lods
cmp
add
mov
xchg
dec
xor
addr16
mov
stc
and
mov
push
fildl
fmul
test
out
xor
pop
push
mov
call
add
dec
int
inc
mov
fnstenv
mov
out
adc
sub
adcb
push
jno
rcl
or
repnz
or
mov
mov
push
outsb
dec
fs
push
and
pop
test
dec
sub
fs
pop
add
xchg
mov
push
ret
push
int3
bsf
sbb
ds
das
add
xor
adc
rol
mov
inc
xchg
leave
andl
test
dec
add
inc
sbb
ds
add
xor
cwtl
lcall
rcrb
movsl
mov
pop
inc
sbb
scas
lock
inc
sub
add
cmp
lahf
adc
or
push
lds
lods
sub
xchg
js
mov
dec
adc
rolb
mov
push
add
out
cmp
cwtl
inc
push
push
into
fildl
dec
in
sbb
add
xchg
lock
mov
out
cli
mov
push
sub
push
add
sbb
sub
xor
inc
imul
and
sbb
repz
mov
sbb
fsubs
insb
cs
jb
in
xchg
and
adc
and
repnz
aad
cltd
mov
and
fimull
ret
adc
mov
fldt
jecxz
push
fcoms
mov
loopne
add
fnstsw
pop
pop
cmpl
rol
xor
inc
je
add
lea
shll
mov
xor
and
aad
mov
popa
mov
fwait
bound
dec
ja
push
sbb
sbb
test
and
or
cmpsb
rcrb
ljmp
ss
pop
xchg
int3
ljmp
push
push
cmp
and
add
scas
push
cmp
inc
xor
inc
add
or
mov
repz
jno
fs
icebp
lret
inc
sub
and
push
in
xchg
jbe
sbb
inc
lods
adc
es
add
push
mov
or
inc
popa
loopne
lea
rcr
cmp
lret
loopne
xchg
and
xchg
add
cli
js
sub
test
or
push
push
push
icebp
dec
out
popa
cli
mov
inc
xor
sbb
jge
jo
not
je
cmp
daa
lcall
add
mov
test
repnz
mov
xchg
adc
xchg
fidivs
push
sub
les
roll
stos
push
inc
and
aam
orl
nop
stos
lcall
loop
xchg
mov
rol
dec
push
ss
mov
jns
inc
push
popa
pop
imul
pop
xchg
pop
roll
push
in
js
adc
adc
jle
stos
inc
cmp
popf
push
testb
mov
repnz
faddl
sub
cmp
sub
stos
mov
mov
scas
pop
es
test
call
stos
scas
lcall
inc
add
push
lcall
dec
ljmp
loop
xchg
sbb
mov
or
imul
pop
add
shrb
sub
mulb
pop
dec
fsubrs
ret
cmp
xchg
test
fs
sub
mov
sbb
xchg
adc
sub
push
int3
aam
mov
sarb
andb
dec
int3
xchg
mov
in
mov
or
jae
in
fs
sub
outsl
pop
pusha
jo
sahf
icebp
rorb
push
push
push
outsb
and
inc
adc
leave
enter
jecxz
inc
dec
and
ds
mov
mov
jb
mov
xor
or
cmp
sbbb
sub
call
push
pop
fdivrs
pop
push
xchg
mov
push
mov
ret
mov
sub
and
je
xchg
mov
pop
cli
xchg
jne
inc
insl
sub
adc
sbb
or
push
insb
hlt
xchg
fidivrl
cmp
adc
xor
call
pop
mov
push
pop
mov
push
mov
or
insl
adc
out
push
out
mov
jno
lea
lret
push
rcll
mov
inc
psubsb
fwait
test
es
cmpsb
xor
inc
or
out
fwait
sbb
push
xor
shlb
mov
xchg
pusha
pop
push
mov
pop
or
lods
mov
loopne
out
dec
out
mov
mov
sbb
daa
pop
adc
mov
inc
and
scas
fwait
mov
or
insb
xchg
and
add
push
lcall
adc
daa
loopne
push
inc
mov
add
fwait
cmp
lahf
lock
mov
push
and
xchg
push
adc
add
xor
jmp
cmp
out
repnz
cli
mov
orb
xchg
pop
repz
push
test
cs
or
pop
loopne
dec
je
sahf
jae
push
jne
mov
cmp
cmp
pusha
or
stos
push
lods
loop
cli
shlb
lock
outsb
adc
push
fs
push
enter
pop
ret
add
mov
lds
mov
push
jge
mov
or
fcoms
in
jbe
dec
add
cwtl
add
fcmove
call
push
inc
dec
cli
add
mov
adc
aad
cmp
and
pop
jmp
sbb
sti
mov
repnz
inc
clc
fadds
mov
xor
dec
cli
add
sbb
cmp
xchg
cwtl
mov
mov
jle
mov
lock
pop
stos
iret
xchg
jle
push
inc
cvtps2pi
push
cli
cmp
xor
mov
adc
xchg
nop
adc
test
or
pushf
test
rcl
es
shlb
inc
sub
or
push
in
fs
mov
adc
or
sbb
stos
jp
adc
or
pusha
outsb
sbb
mov
push
jmp
inc
out
push
bound
jnp
hlt
fnstcw
rorb
js
arpl
jp
add
add
loop
movsb
sahf
push
or
test
add
into
add
add
pop
inc
push
sub
push
mov
insb
mov
in
idiv
add
sub
push
add
in
pop
andb
out
repz
mov
add
ror
popl
xor
pop
adc
mov
sahf
sub
lods
xor
jb
iret
and
ljmp
xchg
push
add
andb
ljmp
dec
fcomps
jbe
insl
es
sbb
adc
insl
mov
push
loopne
jecxz
pop
jge
dec
sub
xor
add
popf
lods
dec
insl
mov
adc
into
pop
jmp
imul
mov
push
dec
hlt
repnz
pusha
sub
call
push
add
xor
lea
es
insb
lods
cmpsb
cmpsb
or
mov
add
lcall
and
inc
fnsave
xlat
mov
movsl
aas
dec
call
add
jbe
rcrb
jns
stos
sbb
mov
mov
xchg
xor
jle
imul
pop
je
cmp
sahf
dec
or
and
or
sahf
xor
adc
add
fisttpl
lock
mov
inc
mov
outsb
xor
adc
dec
dec
pusha
or
lcall
lcall
push
jmp
xchg
pop
pusha
mov
mov
shrb
dec
xor
add
rorb
shr
pusha
cs
xor
ja
cli
and
jb
dec
divb
inc
jmp
mov
add
push
or
push
rcll
loop
or
mov
xor
inc
orl
add
cmpsl
mov
push
daa
mov
cli
and
mov
shlb
dec
data16
sub
sbb
test
cmp
lods
addr16
add
mov
push
fcompl
push
cmpsb
push
sub
into
sub
jbe
bound
add
xchg
jmp
sarl
ds
pop
lds
mov
aam
mov
jp
mov
movsl
das
clc
sbb
mov
loop
movb
pop
icebp
shl
adc
mov
out
mov
jl
insb
clc
jo
inc
fidivrl
pusha
loop
dec
enter
test
inc
mov
mov
mov
mov
mov
das
mov
xor
and
out
scas
xor
movsb
pop
mov
jle
fdivrs
sbb
int
cmc
mov
dec
cmp
fmull
mov
out
cmc
sub
pop
out
insl
push
pushf
cmp
mov
add
pop
add
test
push
sub
ds
lcall
test
add
cwtl
test
cmpl
outsl
mov
testl
or
dec
int3
pop
cmp
push
inc
xchg
mov
cwtl
sarb
ret
mov
sbb
mov
negl
dec
loop
ficompl
orb
cmp
sub
test
or
lods
push
xor
add
orl
nop
sbb
fidivl
into
loop
add
sbbl
inc
outsl
insb
cmp
or
pop
push
mov
xchg
xchg
mov
mov
dec
es
add
adc
dec
nop
cmpsl
popl
lret
pop
push
imul
jl
xor
inc
aad
jecxz
add
mov
mov
nop
jne
mov
cmpsb
movb
xchg
jge
movsl
iret
mov
pusha
lods
movsb
rorl
fimull
fmuls
outsl
loopne
rcpps
push
lods
outsb
jno
push
imulb
push
lea
jo
adc
push
loopne
fsubrs
movsb
fisubs
fsubrs
shrb
mov
cmpb
pop
and
jp
cmp
pusha
test
jl
ljmp
fsubrp
cmpsl
sti
jp
push
dec
lods
lret
inc
movl
into
insl
inc
je
inc
adc
mov
testb
push
add
ret
cmp
je
cmpsb
rorl
jl
and
dec
add
sti
mov
cmp
sbb
clc
sub
out
data16
adcl
push
sbb
rorb
push
xor
lock
lock
and
and
mov
push
call
loopne
cltd
sub
outsb
fadds
sbb
fisubl
mov
adc
xchg
addb
or
and
test
jb
cmp
pop
push
mov
fnstsw
or
std
add
or
int
dec
fwait
loop
sub
lcall
xchg
sub
pop
add
loop
add
dec
stos
push
xchg
hlt
pop
xchg
xchg
or
cli
sub
xchg
add
movsb
adc
sub
jmp
xor
sbb
xchg
sbb
incb
lods
mov
loop
sbb
inc
test
in
rcll
arpl
sub
movsl
repnz
test
lcall
cmpsb
subb
xchg
sbb
adc
shll
cmp
sub
mov
dec
je
cmp
ds
js
jo
test
inc
push
push
orl
sub
sbb
ficoml
insl
js
mov
les
test
mov
int
mov
popf
cmp
push
cli
add
dec
adc
cmp
mov
mov
outsl
jmp
arpl
pop
sub
or
iret
push
outsl
insb
push
jo
mov
in
daa
or
mov
jbe
mov
jp
ds
int3
adc
push
push
pop
es
cmp
ss
ja
adc
mov
xor
dec
lock
adc
lret
jle
pop
stos
les
lods
mov
in
dec
scas
mov
sub
mov
loop
mov
aaa
mov
out
jp
sub
mov
fiadds
testb
sbbb
adc
orl
andb
xchg
push
jecxz
mov
rolb
jl
mov
outsb
pop
mov
in
jo
fistpl
cli
lods
pop
les
pop
loopne
sbb
mov
sub
es
sub
or
ss
add
mov
adc
filds
push
aad
lahf
and
scas
test
push
jmp
sub
fs
pop
mov
adc
pusha
xor
mov
add
movsb
push
pop
pop
xorb
add
sarl
cmpsl
inc
adc
out
cmp
add
mov
push
das
rclb
ss
ja
repnz
mov
cmp
ret
mov
call
jbe
fdivs
adc
and
stos
lods
add
jbe
scas
add
xlat
pop
lock
dec
test
arpl
mov
sub
outsl
lcall
test
ljmp
add
shl
xorb
cli
dec
arpl
les
dec
aam
sbb
jmp
test
push
add
fstl
pusha
xchg
push
push
add
sbb
xor
ss
scas
scas
shlb
aas
and
dec
popa
dec
aam
shrl
cmp
cmp
pop
outsb
mov
xchg
push
mov
aad
pusha
stos
cli
sub
mov
add
aad
add
add
loopne
push
pushf
mov
ret
sbb
test
sub
pop
test
jmp
data16
imul
lea
dec
add
cwtl
push
stos
sub
sbb
addr16
dec
pop
and
push
mov
mov
cli
cmp
icebp
sbb
test
mov
pop
jecxz
sbb
clc
mov
adc
fcoml
jbe
loop
or
cli
xor
xlat
mov
push
pushw
insb
inc
jp
loop
inc
or
jbe
movsl
mov
push
lock
in
bound
add
es
adc
xorb
test
mov
pop
push
movsb
jns
aas
je
jmp
shrb
fldl
jmp
sahf
and
call
shlb
mov
add
in
or
subb
pop
push
incb
out
mov
pop
mov
sbb
pushf
push
pusha
ret
push
in
int3
aam
add
or
pusha
sub
neg
or
shlb
mov
and
push
bound
pop
hlt
adc
xchg
cmp
enter
dec
xchg
stos
mov
push
int3
scas
inc
adc
dec
cmp
fcoml
ss
popa
push
adc
lret
jb
adc
js
mov
dec
inc
cmp
add
cwtl
mov
jg
xchg
xor
add
sbb
paddb
insb
push
mov
loopne
push
aam
mov
bound
orb
out
pop
inc
mov
jge
cmp
fcompl
pop
push
add
adc
pop
inc
push
or
adc
loopne
fwait
mov
test
fstpt
stos
mov
mov
push
cld
les
dec
xchg
mov
push
lock
or
add
mov
clc
mov
enter
add
add
mov
jg
scas
fcmovbe
loopne
mov
pop
xchg
xor
cwtl
cmp
mov
in
loop
sar
pop
or
mov
in
add
mov
xor
mov
add
jne
jmp
mov
fisubl
jbe
mov
sbb
mov
out
pusha
jae
dec
loop
stos
xchg
shl
aas
adc
jo
sbb
dec
lahf
notb
xchg
pop
je
stos
ss
push
adc
cmp
and
sub
jb
rcrb
outsb
test
mov
repnz
jp
js
pop
push
inc
insl
fcomps
dec
mov
cmp
or
jge
push
loop
or
cmp
adc
mov
adc
add
cld
push
mov
jl
and
add
cmp
cld
xor
fwait
lret
cmp
mov
jno
sbb
add
pop
lods
repnz
and
or
stos
or
xchg
push
sbb
js
fstl
aam
xor
xor
inc
cmc
push
fisubs
lret
fs
mov
xor
clc
xchg
rclb
je
and
xchg
sbb
fbstp
in
adcl
push
test
std
pop
scas
int
orb
idiv
push
cmpsb
fimull
add
ds
ljmp
pop
sbb
dec
mov
sti
xchg
pop
dec
out
imul
clc
ret
xchg
cmp
hlt
test
mov
loope
or
lret
and
mov
add
or
out
cmpsb
xchg
sti
jge
pop
xor
mov
test
push
inc
push
pushf
push
movl
ret
or
pop
test
lcall
adc
jecxz
js
xor
cs
ret
testb
mov
and
fcomps
and
push
push
test
push
lcall
rorb
or
das
jp
jecxz
mov
sub
cltd
fst
push
cmp
lahf
or
shll
clc
xchg
mov
dec
sbb
fcoms
in
je
jns
enter
inc
mov
mov
xchg
ss
push
pop
xlat
xchg
enter
and
les
push
inc
cltd
sub
bound
sbb
mov
dec
das
sub
sub
dec
test
das
loopne
adc
ret
or
lea
test
push
imul
test
mov
ljmp
and
xchg
insb
mov
sub
mov
out
cmc
inc
or
or
es
movsl
int
pop
add
lds
pusha
add
mov
cmp
in
xchg
jae,pn
js
aad
movsl
stos
sub
std
out
add
mov
and
adc
int3
mov
adc
sub
cmp
and
xchg
in
sar
jl
loopne
imul
int
mov
les
mov
add
push
rcl
jl
clc
add
xchg
cmc
cmp
sbb
sbb
or
dec
xor
lds
xchg
test
cmp
cmp
and
dec
sahf
and
push
scas
jae
or
in
jns
outsb
ljmp
test
ds
jbe
loope
pop
pop
sbb
add
pushf
inc
insb
push
sbb
xchg
dec
cli
xor
pop
inc
push
out
mov
repz
adc
push
cmpsb
loopne
dec
push
jl
mov
cmp
jo
xchg
lcall
mov
jo
ffree
subl
fsubr
sbb
push
nop
cld
test
pop
dec
inc
sahf
inc
push
xor
jecxz
and
xor
stos
fistps
adc
cmp
fadd
and
imul
test
adc
cltd
shlb
push
sbb
insl
mov
inc
push
add
mov
push
faddl
cmp
push
aad
xor
enter
and
mov
xchg
popa
es
and
imul
lea
add
outsl
mov
fiadds
mov
add
js
add
imul
adc
push
shl
add
imul
out
movsb
and
push
jne
inc
add
or
jl
cmc
dec
ret
jl
cwtl
mov
mov
sahf
les
xchg
sbb
rolb
arpl
cmp
mov
push
shll
pop
notb
cmpsl
or
std
push
cmp
dec
inc
sahf
test
or
jmp
xorb
cwtl
test
sub
imul
adc
lahf
pop
fwait
xor
test
jecxz
or
in
out
enter
mov
sub
mov
sbb
lcall
test
imul
popl
shlb
sbb
lods
aad
dec
xor
mov
fldenv
aam
es
insb
imul
mov
inc
ljmp
pop
xchg
fdivrl
and
pop
jo
pusha
imulb
mov
add
inc
mov
push
sub
dec
cmp
out
jnp
mov
inc
pop
jg
cmpsb
push
int
lret
push
push
push
fistps
cltd
push
imul
call
dec
sub
xchg
movsl
mov
sub
addr16
sbb
mov
or
sahf
daa
mov
popa
sub
or
mov
jge
pop
mov
xchg
nop
cmp
imul
out
xchg
cmp
or
into
adcb
xchg
mov
mov
inc
lahf
mov
jecxz
and
mov
xor
movsl
push
sbb
xchg
push
call
fisubl
adc
hlt
in
sub
pop
xchg
ss
fmull
mov
cld
ss
fdiv
mov
fdivrp
jl
cmpsb
push
or
add
add
or
push
dec
and
ds
rcr
test
fcmove
fstpt
decl
movsl
clc
pop
sbb
popf
movl
cmpb
cli
lea
sbb
push
xchg
jo
add
mov
add
adc
add
mov
mov
push
mov
pop
iret
adc
sub
hlt
lock
push
scas
pop
pop
ss
je
divb
mov
push
inc
adc
mov
push
leave
sub
pop
lcall
int3
inc
or
push
fwait
xchg
mov
loop
and
outsb
out
out
mov
test
addr16
movsb
xchg
or
add
cmp
mov
enter
dec
inc
aad
data16
stos
fnstenv
fadds
pop
in
xchg
xchg
lds
aad
daa
mov
mov
stos
lahf
arpl
mov
and
jae
lret
js
mov
les
ret
mov
mulb
pop
fs
fs
jno
jecxz
push
roll
mov
add
lahf
cwtl
jle
push
adc
add
jecxz
ret
das
inc
sub
mov
dec
call
xor
insb
jp
push
sarb
push
rolb
cmc
out
pop
cmp
fwait
mov
paddq
je
cmc
fdivr
aad
adc
add
imul
iret
jo
sub
xchg
mov
or
lcall
pop
push
clc
jle
cmc
adc
test
mov
mov
or
adc
sub
es
push
sub
sbb
sbb
lock
pop
int
sub
int3
lock
mov
mov
sub
je
ja
hlt
insb
inc
mov
xchg
subl
or
adc
mov
or
aam
push
shll
ljmp
mov
push
je
cmpsb
shll
pop
xchg
add
subl
push
orl
adc
aad
sbbl
sti
es
faddl
arpl
insl
sbb
inc
xchg
call
mov
add
testb
into
jne
lds
hlt
sub
inc
ret
add
fbstp
mov
stos
xor
inc
or
inc
xor
dec
lods
das
adc
lcall
cwtl
push
mov
add
sbb
add
addr16
adc
aaa
sub
mov
into
enter
xor
xchg
je
pop
xchg
pop
cmpsb
stos
xchg
pushf
std
sbb
lea
pop
pop
hlt
pop
movsl
add
jnp
int3
in
xchg
addl
movsb
push
and
xchg
sbb
add
push
or
xchg
mov
insb
fiadds
push
mov
push
cmp
pop
pusha
shll
jmp
orb
mov
fadd
call
sbb
and
pop
push
pop
cmp
sub
rcl
jo
adc
mov
add
aam
mov
je
ret
sub
push
mov
rolb
inc
test
sub
stos
imul
xor
mov
push
popf
cmpsb
int3
ficoms
jmp
push
or
shlb
pop
pop
xor
nop
mov
jge
inc
lcall
or
cmp
mov
push
jp
ret
rol
push
and
iret
adc
mov
movsb
mov
sub
test
lock
les
mov
scas
in
cs
mov
imulb
mov
mov
fstps
dec
pop
popf
movsb
fisubl
shrb
xor
add
cmp
add
mov
pusha
mov
inc
add
hlt
add
lea
xchg
shl
std
xchg
inc
pop
mov
add
hlt
ljmp
lock
arpl
push
fidivl
mov
mov
movsl
test
je
cmc
or
cmovge
jb
and
xor
fistl
vshufps
jp
mov
cmp
fsubs
lret
jnp
fdiv
aad
adc
clc
popa
loope
adc
push
clc
jns
ds
push
maskmovq
idivl
mov
inc
and
sarl
push
lea
sub
xor
pop
adc
push
add
mov
lea
movsb
mov
pop
adc
sub
dec
lret
popa
mov
dec
sub
push
clc
cmpsb
pop
cmpsb
f2xm1
adc
push
ret
push
inc
and
andl
dec
pop
mov
or
test
lret
jno
push
pop
inc
and
mull
mov
pop
and
pop
into
movl
notb
mov
xor
jne
fs
insl
stos
out
cmp
movsb
sahf
xor
and
and
xor
aas
pop
add
add
lock
inc
jb
xor
aam
cli
jae
sub
icebp
fs
imul
pusha
mov
lock
inc
loop
into
xor
jo
cmp
ds
inc
aaa
ficomps
pop
adc
ss
orl
adc
jbe
or
mov
sbb
mov
push
dec
lock
loopne
repnz
push
ret
pop
sbb
pop
xor
xchg
test
orb
stos
into
xchg
lods
inc
test
mov
adc
or
mov
or
pop
incl
pop
mov
out
jecxz,pn
sbb
enter
xchg
fwait
nop
in
push
movb
xor
mov
mov
mov
ret
pop
les
pop
gs
inc
xorb
jbe
fs
rol
and
test
xor
flds
sbb
mov
pusha
pop
lods
push
push
xchg
insb
fsubp
xor
push
sbbl
sbb
pop
ficoml
push
fmuls
les
mov
mov
push
test
xchg
sbb
pop
addl
dec
xchg
adc
or
mov
pop
inc
sti
ss
mov
shrb
push
mov
mov
or
xor
scas
xor
pop
sub
xchg
out
fcoml
pop
shrl
and
leave
xor
mov
adc
jl
rclb
xchg
sbb
sbb
and
lods
sub
fnstsw
mov
mov
daa
sbb
sub
push
pop
enter
adc
inc
pop
and
mov
notl
mov
pop
mov
imul
sub
mov
arpl
stos
lcall
js
adc
and
cwtl
push
das
dec
mov
mov
jp
iret
adc
dec
fdivrl
in
pop
cmpsb
or
fstpl
scas
cltd
hlt
or
add
mov
push
test
jbe
or
fisubrl
aam
push
roll
cmp
or
jg
aaa
out
push
pop
add
xor
pushf
lret
hlt
pusha
add
xor
push
add
xchg
lret
sub
mov
push
andl
pop
mov
adc
scas
imul
fs
and
jge
cmp
test
aam
cli
loope
push
add
int3
mov
dec
push
sbbl
push
lods
insb
jmp
aam
inc
dec
mov
lcall
dec
outsb
shlb
sub
test
out
push
add
dec
xlat
fadds
in
adc
sub
repz
je
sarb
shrb
lods
popf
push
andb
and
es
adc
lods
add
lret
dec
mov
cwtl
push
jb
ljmp
mov
lods
jmp
mov
pop
lahf
call
test
pop
rolb
addb
ljmp
sbb
pop
pusha
lea
xor
dec
test
jmp
or
sbb
lods
inc
out
xchg
adc
inc
push
cli
insb
shl
and
idiv
xor
mov
add
jb
insl
pushf
cmp
mov
add
scas
js
add
xchg
into
sbb
inc
sbb
pop
xchg
mov
popa
pop
sub
inc
sub
inc
sbb
dec
cli
cmp
pop
popa
jo
sbb
push
add
pop
rcrb
or
stc
lods
add
add
sub
or
mov
sub
xorl
adc
jmp
movsl
and
sbb
loop
cltd
or
mov
shll
aam
pushf
xchg
loop
fisubl
into
ss
les
sbb
cli
adc
rclb
inc
cld
pop
dec
and
fstp
rorb
movsl
xor
fisubs
and
hlt
xchg
jbe
ljmp
out
inc
jge
mov
addr16
push
xchg
or
mov
mov
or
out
xchg
mov
loope
data16
movsb
int3
push
and
mov
sub
ds
push
mov
test
or
popa
xorb
ret
sar
loop
inc
lret
sbbb
imul
xchg
ds
nop
and
mov
add
enter
pop
or
mov
loope
jae
leave
add
push
cmp
cmpsl
les
push
cmp
out
or
rcr
clc
push
pop
in
inc
sub
pop
cmp
ss
push
ds
pushaw
cmp
push
lcall
insb
out
mov
and
inc
mov
pusha
and
add
loop
pop
sub
inc
ljmp
adc
in
lahf
dec
pop
or
loopne
dec
mov
lock
add
pop
test
sbb
add
shrb
add
add
les
pop
pop
inc
jg,pn
fistl
addb
lret
pop
mov
or
insl
fisubl
and
push
pop
lret
std
jbe
cmp
pop
dec
faddl
xor
je
sub
cs
data16
inc
roll
cs
nop
sbb
jne
test
ficompl
test
inc
lods
push
data16
pushf
lcall
dec
dec
insl
and
int
adc
sub
push
and
push
flds
test
add
xchg
mov
outsl
cld
es
jmp
or
fists
cmpsb
mov
adc
mov
push
push
xchg
or
xlat
test
inc
xor
lcall
cmp
aad
sub
mov
push
fsub
jbe
xor
movsb
push
test
xchg
and
in
test
adc
adc
xor
mov
mov
test
and
sti
pop
or
andb
sbb
test
fnstsw
sbb
fcmovnbe
popf
xor
dec
xor
fistpll
jo
xor
test
mov
adc
adc
jp
xor
je
add
pop
les
add
adc
ret
les
lods
arpl
jae
or
pop
lret
xor
dec
jo
sub
sbb
or
xor
mov
or
loop
lea
push
push
addr16
add
add
fisubrs
mov
cmp
add
je
and
and
xchg
loop
push
stc
mov
fs
into
mov
mov
add
jle
je
mov
sub
push
aam
leave
addb
dec
enter
sar
andb
sub
and
mov
dec
push
roll
ret
push
pop
push
push
enter
and
or
mov
inc
inc
or
les
inc
mov
mov
cmp
inc
stos
loop
inc
mov
nop
lods
std
mov
lods
jp
dec
sahf
pop
sub
push
and
mov
ss
into
adc
mov
or
sub
rorl
mov
xchg
jbe
add
push
push
pop
sub
ljmp
and
leave
lock
adc
add
int
push
sbb
jb
push
or
cmp
mov
mov
es
ret
mov
pop
add
int3
xchg
pop
mov
mov
mov
insb
cmpl
adc
cmp
rcrb
mov
mov
movsw
push
ss
or
inc
ljmp
push
std
mov
popa
dec
xchg
je
repz
pop
in
daa
or
insl
fldenv
mov
push
and
lea
leave
pop
lds
or
fcoms
push
pop
cwtl
loope
push
das
jp
mov
add
pop
cmp
add
mov
sbb
push
xor
int3
sbb
rorb
adc
pop
les
sub
mov
mov
or
scas
add
hlt
dec
push
pusha
sub
dec
leave
push
mov
cmp
fsub
xchg
jmp
cli
push
mov
mov
aam
sub
cmc
hlt
test
push
mov
jecxz
cwtl
push
pop
sti
inc
pusha
icebp
mov
subb
or
jae
orl
xchg
jne
cmp
mov
sbb
sbb
lahf
into
mov
jmp
cli
sub
imul
es
cmpsb
cmp
sbb
es
cmpsb
push
push
jge
rclb
push
sub
xchg
std
test
or
jo
clc
aas
ss
pop
call
dec
mov
push
popf
mov
mov
arpl
xor
adc
imul
or
out
inc
sub
es
add
jp
outsb
repz
jo
pusha
add
mov
sub
faddl
push
cmp
mov
push
out
add
imul
adc
repnz
xor
cmpsb
dec
fs
dec
loope
mov
jno
out
and
call
push
fildl
push
call
insb
dec
add
loop
jb
orl
sti
dec
mov
jl
jle
mov
dec
dec
andb
add
int3
adc
popa
jle
mov
adc
push
pop
dec
lahf
gs
adc
pop
cltd
mov
ds
mov
adc
mov
add
repz
xor
xchg
mov
sub
cmp
sbb
and
and
lcall
nop
xorb
add
xor
sbb
cld
mov
sbb
popa
and
repnz
add
jne
cld
orb
adc
xchg
jp
sbb
data16
ljmp
stc
pop
pop
cmp
push
insb
or
loop
rcr
sbb
jne
dec
or
dec
call
sub
call
jb
test
in
mov
inc
cmp
inc
mov
mov
imul
mov
outsl
sahf
lahf
hlt
fcmovb
mov
loopne
lcall
adc
les
adc
jb
sub
je
mov
fs
adc
fcmovu
lret
js
xchg
or
jbe
into
pushf
push
mov
pop
fisubrl
jo
xchg
testl
pop
aas
dec
mov
rcrl
adc
or
inc
push
movsl
dec
adc
adc
sbb
add
add
mov
hlt
mov
cs
lcall
hlt
sbb
sbb
les
int
movl
or
pop
dec
out
test
or
lret
gs
enter
cs
jl
mov
dec
dec
sbbb
mov
cmpsl
icebp
inc
lods
ljmp
loope
inc
cmpl
outsb
push
cs
mov
std
cmpsb
mov
or
adc
sub
inc
xchg
loopne
ret
in
pusha
addl
sahf
incb
test
clc
es
add
jmp
clc
inc
adc
xchg
push
data16
mov
fdivrp
orb
xor
adc
aam
hlt
push
movsl
adc
test
sub
add
push
push
scas
and
mov
or
push
je
scas
jle
sarb
push
inc
add
xor
pop
xor
or
sbb
or
mov
mov
xor
add
adc
ffreep
jle
lahf
or
nop
pop
mov
dec
dec
or
dec
shrb
adc
xor
mov
inc
xor
mov
ror
add
sub
je
push
shll
sarl
pop
lahf
or
dec
mov
mov
inc
fiadds
inc
jb
mov
add
pop
bound
or
jbe
ret
rolb
xchg
int
cmp
out
lods
std
pushf
jl
fcmove
pop
mov
mov
mov
jbe
push
bound
push
je
inc
add
add
pop
shrb
push
mov
out
mov
mov
mul
adc
clc
and
lock
mov
xor
rol
out
mov
cli
mov
subl
test
out
out
mov
jl
shrb
xchg
in
cld
add
xor
sbb
xchg
dec
push
js
dec
jl
push
cmp
push
mov
add
mov
add
xchg
lock
cld
test
aas
jp
cmp
mov
xchg
jl
addr16
and
pop
repz
jmp
inc
cmp
add
add
push
and
or
xor
test
mov
sub
lock
imul
inc
mov
pop
shll
lcall
and
sbb
std
and
inc
jnp
test
pop
aad
addr16
mov
or
dec
mov
incb
push
jns
jne
pop
and
and
iret
cwtl
xor
dec
pop
js
sbb
xor
lcall
hlt
sbb
push
push
pop
mov
pop
mov
mov
mov
push
mov
sti
mulb
call
or
lds
in
xor
das
mov
ss
jg
fdiv
nop
cs
fprem
inc
add
pop
mov
stos
sarl
aam
scas
jl
pop
daa
mov
pop
xchg
adc
mov
xor
testb
sbb
fdivrs
loopne
shlb
loope
add
lds
repnz
sbb
mov
in
and
dec
push
inc
sbb
and
das
cmpsb
jl
test
xchg
ret
mov
in
dec
test
sbb
pop
sbb
inc
adc
call
add
lahf
cmp
lods
call
adc
push
add
pop
cli
adcb
int3
pop
add
pop
or
push
dec
mov
arpl
scas
pop
mov
dec
popa
jmp
inc
dec
ret
loopne
add
leave
out
loop
fistpll
inc
or
addb
dec
mov
in
inc
cwtl
mov
mov
push
sahf
push
jno
mov
std
out
add
dec
cmp
repz
add
sub
ficoml
or
cwtl
lock
mov
inc
inc
sbb
imul
ljmp
jecxz
ds
pop
lea
addb
sub
ss
lds
add
inc
or
pop
les
and
in
insb
sahf
ret
xorb
add
cmpsb
scas
fs
jge
les
cli
cld
sub
bound
leave
lahf
inc
test
mov
xchg
lock
test
loopne
jno
dec
and
movsb
rcl
xor
inc
sahf
or
push
cmp
push
fadds
lods
or
push
lock
cmpsb
das
dec
push
sti
imul
or
lea
cmp
xchg
mov
mov
mov
mov
mov
test
add
ret
pushf
addb
inc
jmp
icebp
pusha
jne
rolb
mov
ljmp
jns
les
add
arpl
test
test
add
adc
jge
stc
je
and
mov
mov
push
jge
mov
inc
push
ficoml
push
or
dec
sub
push
scas
cwtl
inc
mov
xchg
pop
xor
test
aaa
add
cmp
lds
stc
mov
mov
push
dec
adc
xor
or
ret
lea
ja
into
pop
lahf
and
or
cld
test
ds
add
movsb
push
mov
les
push
mov
dec
cmp
xchg
mov
fidivl
hlt
in
sbb
out
mov
push
sbb
inc
adc
ds
mov
es
push
sbb
mov
das
or
call
rcr
jp
filds
insb
adcl
mov
add
lods
add
cmp
mov
std
aam
xchg
or
ss
inc
fmuls
inc
push
aas
je
cmp
dec
aas
mov
push
xor
and
xchg
pop
or
push
mov
int3
sub
call
hlt
mov
mov
inc
mov
cmp
das
mov
loop
aaa
les
add
dec
push
or
pop
aam
test
mov
imul
inc
inc
insb
enter
sub
pop
dec
xchg
rcrl
lret
sbb
icebp
mov
jb
das
push
xor
fadds
testb
lock
stos
cld
ljmp
jl
mov
and
cmp
add
xchg
lretw
lods
pushf
ds
xor
add
dec
or
cmp
int3
fisubs
xor
push
mov
push
rcl
mov
cmc
gs
incl
test
rol
mov
lock
push
sbb
andl
push
xor
lock
rcrl
aad
rorl
mov
sub
inc
sbbl
push
sbbb
je
in
push
jo
lcall
add
mov
push
shlb
andl
mov
ds
out
jb
punpckldq
nop
sbb
mov
or
mov
shrl
jnp
dec
mov
imul
loopne
and
push
inc
lcall
dec
insl
xor
jge
push
cmp
orl
mov
xchg
fsubs
mov
push
les
cmp
dec
cmpsl
fsubl
mov
and
sub
mov
add
stos
stos
lcall
mov
jnp
lods
or
mov
hlt
mov
sbb
negb
punpckhbw
jbe
lods
xchg
xchg
or
push
push
sbb
pop
add
push
dec
inc
cmpsb
mov
mov
cmp
dec
mov
and
push
out
out
add
mov
rorl
sub
scas
lcall
insb
jnp
pop
cmpsl
and
sbb
imul
repnz
dec
sbb
js
or
mov
sbb
pop
push
sbbl
xchg
ret
cmp
notl
push
add
pop
pusha
inc
fwait
push
orl
lret
adc
dec
dec
push
cmp
aam
clc
sbb
cli
dec
lcall
test
push
xor
shlb
loopne
mov
in
stos
jbe
push
inc
jl
xchg
mov
and
pop
xorb
xor
notb
lret
dec
push
lods
push
sub
cs
scas
scas
insb
in
xor
bnd
orl
and
pusha
push
mov
pop
cmp
and
mov
pop
mov
outsb
push
int3
xchg
fsub
xor
repnz
loop
test
mov
push
adc
push
push
or
jne
lahf
movsb
ds
mov
shl
mov
mov
subl
mov
mov
dec
sbb
inc
mov
push
loope
fwait
in
bound
outsb
mov
mov
push
dec
cmpsb
sahf
mov
stos
push
packsswb
int3
rclb
push
bound
or
adc
xor
jmp
js
cli
mov
pushf
les
push
in
stos
jg
add
sbb
or
jo
and
mov
push
sub
enter
push
les
sub
lret
flds
add
inc
gs
add
xor
test
add
push
or
xchg
out
popa
inc
dec
js
or
mov
mov
mov
dec
outsl
out
jo
push
sahf
fs
and
add
inc
fwait
sahf
add
shl
inc
inc
xor
bound
add
mov
and
pop
test
lret
rolb
fcom
and
aam
mov
scas
sub
out
mov
sbb
adc
xchg
pop
xor
lods
sbb
clc
cmp
cmp
add
mov
adcb
push
nop
ja
mov
mov
cmp
les
loope
andb
inc
shll
mov
rorl
and
loop
add
xor
rcrb
aad
add
jno
outsl
lock
jmp
movsb
mov
outsb
movsb
xor
push
and
gs
ffreep
rol
pop
lods
mov
sbb
insl
cmpsb
es
pop
adc
inc
insb
cs
and
add
lcall
jecxz
out
pop
jmp
mov
aad
jp
inc
aam
ror
pop
les
mov
sub
aas
adc
inc
mov
adc
clc
call
mov
or
and
dec
cmp
in
pop
and
xor
xor
adc
clc
jns
cld
imul
call
shlb
adc
test
mov
pop
adc
dec
push
pushf
cltd
sbb
lods
fxsave
popl
lret
pushf
and
adc
dec
add
shrb
insl
add
pop
jmp
lods
aas
push
clc
leave
fs
xor
or
add
jg
xor
adc
pop
aam
fistl
sub
sbb
xor
popf
mov
clc
cmp
nop
mov
lods
call
mov
aaa
dec
insl
jo
addb
mov
add
mov
mov
popf
add
ljmp
cmp
cld
outsb
ljmp
js
movb
fwait
cmp
or
cmc
jo
dec
inc
mov
dec
add
push
and
mov
fcmovnbe
cld
mov
mov
cmp
xchg
test
or
inc
and
dec
xchg
jo
pushf
mov
or
pushf
xor
add
stos
push
xchg
xor
ds
fsubr
les
jl
test
shlb
xchg
mov
mov
adc
sub
xchg
or
jae
push
pushf
lret
push
and
lahf
sbb
lock
add
mov
jge
mov
mov
call
movsb
add
popf
add
adc
inc
cmp
fs
imul
push
push
icebp
lret
test
jmp
jle
mov
sub
sbb
ljmp
in
in
es
jno
xor
or
add
stos
and
ret
aam
mov
add
lods
pop
inc
xor
add
sahf
test
rolb
xor
push
xchg
jge
and
stos
insl
cmpsb
sub
into
pop
push
dec
jmp
lods
fsub
xor
js
jne
adc
insb
icebp
mov
sarb
xchg
lods
les
cld
dec
mov
das
data16
mov
hlt
jno
pop
outsb
outsb
mov
dec
adc
rol
xor
push
push
lds
js
mov
dec
movb
mov
popf
outsb
push
and
xchg
in
jle
hlt
lcall
xor
xor
dec
inc
pop
sbb
push
daa
ds
xchg
mov
dec
or
pop
loop
xor
cmp
fsts
or
or
in
or
adc
jb
in
ss
outsl
mov
movsb
and
loopne
mov
inc
sbb
aas
pop
nop
rorb
sti
popa
popa
pop
adc
dec
repz
pop
aaa
push
add
and
and
in
notrack
and
idivl
dec
rcr
push
push
sbb
push
push
movmskps
add
or
push
push
js
dec
jle
sbb
or
sub
xchg
loop
call
push
neg
mov
incb
test
test
out
out
push
stos
stos
cmpsb
sub
out
scas
pushf
mov
jmp
js
jnp
popa
push
mov
pop
cld
or
lods
fidivrl
imul
fldcw
xchg
les
jmp
mov
push
lret
out
icebp
dec
fs
sbb
daa
add
push
or
sub
push
inc
sub
and
sbb
jbe
xor
sub
icebp
mov
or
mov
mov
in
cld
out
mov
into
dec
push
pop
mov
mov
mov
jbe
mov
shlb
mov
sub
fwait
jle
pop
mov
inc
out
fcmovnb
xchg
add
insb
repz
test
or
ljmp
js
mov
inc
mov
or
fdivs
outsb
fisubrl
pop
test
aam
cltd
test
test
pushf
push
or
xor
rorl
push
xor
dec
fisubl
inc
mov
xchg
mov
or
xchg
pop
cmp
aam
mov
addr16
mov
cmp
xor
mov
inc
xlat
adc
push
ret
fildl
mov
into
add
nop
mov
push
ret
outsl
in
sub
cmc
mov
lcall
add
cli
pop
hlt
sub
add
cmpsl
icebp
fisubl
cli
or
xchg
nop
je
jl
aaa
rolb
and
mov
or
sbb
cmpsb
push
ret
lods
jo
call
js
ds
push
jle
or
dec
test
in
scas
inc
insl
lea
ror
inc
mov
sbb
jb
aad
add
or
cmc
mov
ds
sarb
dec
mov
sub
std
or
add
and
pop
fstpt
loopne
add
and
adc
cmp
sbb
sub
cmp
jge
jle
push
or
cmp
adc
xchg
sbbl
imul
mov
mov
mov
adc
cmpsb
loopne
data16
sub
mov
insb
cmp
or
xchg
push
pop
xchg
in
dec
inc
test
jne
into
push
push
push
adc
lcall
outsb
dec
es
push
clc
xchg
add
push
fisubrl
pop
ljmp
lock
leave
add
adc
dec
cmp
in
aad
loope
cmc
xor
inc
add
nop
shlb
jb
mov
sarb
sub
cmpsb
fists
mov
std
mov
notl
out
or
inc
mov
push
pop
push
sbb
mov
dec
pop
mov
jecxz
lret
fists
jp
mov
pop
es
or
in
dec
shrb
ljmp
mov
inc
mov
mov
mov
inc
xor
and
mov
and
hlt
adc
ss
mov
or
adc
pop
lahf
mov
fidivrl
std
lcall
shlb
jbe
sub
xchg
lock
push
cli
lods
pusha
ljmp
lods
jge
shr
and
mov
xchg
jbe
and
int3
movsb
out
push
out
cmc
lret
or
rcr
les
clc
mov
in
pusha
mov
inc
inc
dec
adcb
scas
and
pop
push
xchg
xor
cmpsb
loope
push
imul
push
in
sbbb
ss
adc
adc
es
cmpsb
cmp
pop
push
out
ret
mov
ret
fcomps
in
adc
cmp
repz
add
sub
cmc
cmc
enter
dec
push
xchg
scas
add
lahf
sahf
arpl
mov
les
xor
xor
subb
sbb
call
jae
insl
push
enter
enter
and
lcall
or
sbb
js
pop
je
imul
loop
in
sub
add
add
ret
lock
shlb
das
push
shl
fcoml
sti
add
mov
mov
movsb
and
rep
andb
les
add
mov
inc
cmp
clc
ret
je
push
mov
mov
xchg
mov
sldt
or
mov
sbb
imul
add
lret
fcomps
and
mov
insl
add
jmp
dec
mov
hlt
push
mov
push
pusha
test
fdivrs
pushw
enter
sbb
push
pop
cli
jmp
fwait
sub
sub
out
rcrb
cmc
and
lret
mov
pushf
lcall
cli
adc
or
addb
pusha
orb
mov
stos
std
mov
add
sahf
inc
cmp
sbb
fistps
pop
push
mov
jae
mov
lock
push
fsubrl
push
sub
sub
sub
push
sarl
pop
adc
xor
out
inc
pop
mov
pushf
repnz
repnz
lods
cmpsb
push
lds
ljmp
mov
ret
cmp
adc
add
pusha
xchg
adc
stos
inc
cmp
cmp
add
dec
subl
les
mov
imul
jno
out
xchg
mov
xchg
add
xchg
stos
mov
or
push
js
sahf
sub
sub
add
push
rcl
addl
ret
into
adc
jo
add
inc
push
inc
and
rorb
pop
push
xor
mov
adc
aam
pusha
push
and
aam
cmp
dec
or
sub
pop
flds
pop
cld
pop
push
ss
xor
jo
cld
push
add
mov
jg
imul
jp
dec
pop
lods
xchg
les
cs
mov
and
xchg
inc
push
sub
or
mov
add
jnp
jl
xor
sbb
mov
mov
sub
fs
add
aad
fsubs
scas
les
in
cmpsl
subb
jle
aaa
mov
add
push
call
sbb
in
clc
pop
add
mov
mov
mov
lcall
push
jnp
test
xor
sub
xorb
xchg
or
jb
mov
jl
sahf
leave
es
aam
push
mov
cmp
lock
insl
inc
inc
pop
clc
add
add
pusha
shrb
or
gs
cli
xor
adc
add
inc
xchg
test
mov
fadds
sub
daa
es
inc
sti
mov
jo
xor
add
test
inc
fidivrl
add
lea
jg
inc
inc
imul
hlt
test
xchg
ret
or
add
jns
push
add
jl
jg
das
mov
xor
lods
push
mov
pop
push
scas
jmp
push
push
icebp
or
outsl
test
shl
inc
jl
test
jnp
out
ss
icebp
adc
push
inc
jle
xchg
xchg
and
xor
insl
inc
ret
add
cmpsb
push
aaa
mov
loope
inc
pusha
add
les
pop
bound
pop
ds
add
pop
inc
loop
in
sub
loope
stc
pop
and
inc
ficompl
out
mov
lods
push
xchg
ja
dec
add
cmp
lret
nop
inc
jno
enter
dec
movsl
pop
xchg
jne
adc
push
adc
sub
adc
lcall
or
hlt
les
popa
push
movsl
pusha
sahf
mov
or
ret
frstor
dec
scas
adc
push
dec
subb
jne
outsl
xchg
mov
lds
cld
andl
jecxz
add
push
sbb
push
fldenv
push
and
imul
mov
mov
loop
out
cwtl
mov
adc
pop
arpl
push
dec
or
add
mov
add
xor
fdiv
and
add
sbb
pop
and
dec
addb
je
xchg
mov
loop
dec
arpl
call
xchg
pusha
outsl
adcb
xchg
flds
je
adc
inc
cmp
jns
adc
mov
fisubrl
jb
jno
push
or
jne
adc
pop
sbb
fdiv
add
mov
add
mov
mov
ret
push
cmp
jbe
push
mov
xchg
push
ret
xchg
dec
int
daa
cmp
outsb
test
cmp
cmc
xchg
test
push
mov
lock
dec
cmp
jle
test
pusha
mov
push
and
lock
loopne
lret
cmp
xor
push
test
mov
pusha
sub
roll
insb
stos
jne
add
jbe
orl
insl
add
dec
enter
inc
jecxz
xor
sub
lret
sbbl
jns
pop
cmp
addl
and
push
xor
dec
ljmp
dec
daa
push
out
jb
pushf
mov
cli
mov
mov
jg
gs
movsb
cmp
sbb
cmp
ficoml
dec
loop
dec
fistpl
mov
jl
push
add
push
mov
push
push
mov
push
scas
xchg
push
or
mov
jnp
adc
lcall
dec
clc
and
hlt
cmp
push
fadds
xchg
out
jl
sub
xchg
push
test
test
sub
cmpsl
mov
and
push
xchg
push
ficoml
insb
and
mov
inc
add
cmpsb
xchg
cmp
nop
push
int3
negl
xchg
inc
mov
dec
outsb
dec
xchg
lcall
insb
push
adc
jae
shlb
shlb
bound
lods
inc
mov
mov
pop
push
sti
add
sbb
scas
hlt
add
cmpsb
add
inc
sbb
inc
adc
scas
push
add
pop
aas
mov
fs
pop
add
push
sbb
mov
stos
lods
xchg
and
mov
lock
mov
xor
jle
mov
add
rorl
mov
clc
or
mov
sbb
popa
or
and
inc
push
add
lods
mov
das
les
mov
ss
rolb
outsl
cmp
jo
pusha
add
test
bound
pop
add
cmpxchg
mov
outsb
cmp
push
bound
or
mov
aas
xchg
xchg
insb
or
add
sub
fcomps
ljmp
mov
dec
sub
xchg
stos
push
push
or
mov
pusha
inc
or
out
ret
cmp
mov
out
pushf
push
mov
cs
adc
pusha
inc
inc
sub
ror
inc
push
add
fdivr
pop
cmp
stos
cmpsb
rcrl
push
out
add
or
cwtl
jbe
arpl
mov
push
and
xchg
movb
xchg
rorl
xchg
std
clc
xchg
into
dec
or
sub
pusha
addl
sub
and
and
test
test
std
and
inc
cld
data16
in
xor
sub
adcl
lods
push
jne
mov
cmpsl
stc
dec
stos
mov
jnp
mov
push
xlat
bound
pop
addr16
repz
mov
mov
xchg
dec
and
inc
or
mov
and
fistl
mov
and
push
ret
adc
adc
add
cwtl
cs
js
sbb
scas
dec
adc
cmp
fninit
pusha
jge
fsub
jmp
and
jb
xchg
rorl
sub
fidivrl
push
pop
scas
nop
mov
lret
outsb
inc
lock
push
push
cmc
loopne
mov
call
jl
out
fadds
cmp
ret
add
lods
in
add
test
and
and
jae
js
jecxz
sahf
mov
dec
pop
cmp
mov
lcall
jb
rcl
cmp
fdivrp
and
pop
loopne
leave
cmp
and
mov
call
inc
iret
ret
imul
mov
xor
rorb
inc
mov
jle
add
and
sub
and
fcomps
push
or
jb
jl
loope
and
push
jle
clc
dec
mov
repnz
mov
pop
pop
lret
lods
adcb
test
loope
sbb
lods
or
and
ficompl
add
mov
lcall
loop
adc
xor
push
enter
mov
push
mov
add
fimull
shrl
dec
insl
push
stos
cld
jo
mov
dec
inc
cmp
mov
decl
mov
add
push
push
add
andb
xor
int3
pop
sbb
mov
push
aam
mov
or
shlb
shl
clc
pop
inc
pop
ss
out
aas
into
jecxz
lcall
insb
push
and
and
jge
loop
daa
or
adc
pop
insb
mov
inc
push
pop
arpl
push
test
push
in
add
int3
call
ret
loop
sub
enter
mov
or
loope
lcall
popf
add
mov
nop
pop
inc
fs
mov
xchg
lods
movsb
jne
insl
loop
int3
push
leave
ret
pusha
aad
pop
or
mov
mov
ficoml
push
movsb
in
sbb
jp
lcall
cmp
roll
sbb
jl
xchg
mov
hlt
test
or
pop
fisttps
mov
hlt
add
aam
cmpsb
or
pusha
push
push
and
pop
into
je
je
inc
adc
xchg
or
cmp
addb
inc
lret
pop
mov
push
lcall
or
pop
clc
in
sahf
shrb
xorb
imul
cmp
in
adc
push
or
push
fmuls
inc
jl
and
jmp
pushf
test
and
dec
inc
ds
pushf
push
jbe
and
outsb
dec
pop
push
push
cmp
lea
push
fsts
sar
or
lea
pop
sbb
cmp
shll
fcomp
lea
xor
and
and
jp
aad
ljmp
xchg
mov
push
dec
call
lods
mov
and
dec
jo
aam
push
mov
and
sti
popa
call
mov
and
repz
mov
xor
aam
add
mov
sbb
sbb
sbb
pop
pop
mov
fsubl
sbb
jns
mov
insl
lcall
xchg
rolb
pop
pusha
fimuls
pusha
xchg
mov
jmp
adc
fildll
jl
pop
into
hlt
cmpsb
jo
fmuls
sbb
cli
push
push
mov
adc
xlat
mov
mov
add
lock
xorb
or
cli
push
sbb
push
loopne
cmpsb
mov
push
fwait
ss
pop
adc
xor
mov
add
and
push
and
push
lret
add
sbb
xchg
jno
pop
mov
mov
jb
clc
mov
int3
pushf
ret
adc
push
jecxz
rcrb
mov
mov
add
cld
inc
lods
pop
push
xchg
lret
notl
test
mov
out
cmp
adc
in
add
xchg
cli
xlat
push
mov
inc
inc
loop
inc
fsts
int
pop
push
in
mov
out
shll
ficoms
inc
sub
imul
fistl
adc
jbe
push
cli
xor
andb
xchg
out
adc
outsb
test
aam
call
lods
cmpsl
add
jo
mov
fcomps
jo
aad
pop
mov
les
add
loopne
add
cmp
loopne
rol
xchg
cwtl
xorl
and
out
cmc
pop
push
inc
mov
lret
imulb
push
dec
adc
aaa
push
mov
push
mov
mov
add
ficompl
sahf
sbb
shll
mov
movl
dec
add
mov
insl
xor
add
jae
add
test
lret
das
push
push
lcall
insb
push
push
rcll
test
mov
lds
cld
xchg
inc
je
dec
push
inc
test
or
add
mov
mov
sbb
mov
lods
mov
rorl
cmc
adc
mov
adcl
je
cmp
pop
mov
and
sar
add
les
push
inc
bound
inc
sub
pop
xchg
mov
xchg
js
mov
sbb
sbb
xchg
insb
icebp
dec
cmp
add
cmp
adc
sbb
cli
inc
ret
inc
xor
rol
xchg
xchg
lcall
add
sbb
mov
jb
cmpsb
add
pop
cmpl
loopne
ds
xchg
lea
repnz
sub
shll
xlat
push
es
sub
fimull
inc
add
adc
mulb
push
inc
mov
and
test
sbb
mov
fiaddl
jnp
xor
or
push
lret
push
pop
ret
push
push
adc
xor
add
rolb
cs
xchg
xor
cli
inc
inc
cmp
movsb
pop
inc
xlat
pop
push
stos
push
pop
mov
test
add
dec
cli
das
cli
cwtl
out
add
xor
sbb
mov
lods
inc
mov
jns
sub
jnp
lods
push
fwait
lods
jecxz
jnp
mov
rorb
insb
dec
es
mov
jae
out
cmpl
subb
aad
nop
lds
sarb
ficompl
mov
je
add
pop
movsb
add
add
shrb
enter
mov
fisttps
aad
xor
xor
push
mov
test
adcb
les
cmp
mov
test
and
cli
xor
bound
in
mov
insb
push
outsb
fimull
mov
adc
or
jo
push
inc
fdiv
sbb
pop
out
test
in
insl
sti
sub
mov
fwait
lods
mov
mov
push
adc
hlt
or
dec
sbbl
push
fisubrl
or
inc
xchg
mov
or
cmp
mov
pop
xchg
push
nop
fists
cmp
ds
adc
jo
je
int3
into
testl
cwtl
sub
jb
loopne
les
mov
sarb
push
and
push
hlt
cli
push
adc
shrb
rcrb
inc
stos
pop
xchg
fiaddl
xor
push
aad
adc
push
pop
sub
sahf
or
xchg
push
xchg
shl
cmp
inc
in
and
test
out
fcoms
popa
xor
bound
lret
pop
or
and
sbb
cli
xchg
add
cs
lods
int
lds
in
xor
jae
jge
js
arpl
arpl
adc
ss
xchg
pop
and
testb
xor
pop
pop
loopne
jge
sub
push
add
xor
test
xlat
jp
xchg
inc
stos
add
mov
push
addr16
inc
mov
jbe
xlat
daa
icebp
or
mov
shll
push
sub
cld
adc
sub
inc
imul
ret
fisubl
mov
push
lds
lret
call
cwtl
mov
jmp
in
and
lcall
rolb
insl
adc
dec
cmp
mov
cli
and
jecxz
xor
out
sbb
mov
adc
es
cmp
loop
aad
xor
je
jo
fs
mov
mov
fstpl
adc
lcall
out
xor
inc
les
enter
shrl
lods
cmc
orb
push
popa
adcb
test
xchg
mov
pop
jmp
ret
les
adc
scas
stos
mov
dec
je
sub
lahf
add
sbb
insb
push
jbe
loopne
and
or
mov
les
sub
sti
mov
add
and
or
dec
repnz
icebp
enter
mov
inc
cld
push
aam
es
add
adc
insl
or
clc
add
mov
and
fidivrl
adc
add
gs
jb
push
push
test
xchg
add
and
fwait
je
lods
push
xor
mov
inc
push
and
aam
ret
stos
inc
add
mov
dec
lcall
jbe
orb
mov
cli
pop
sahf
cmpsb
in
roll
or
call
jnp
dec
and
dec
subl
and
mov
adc
test
sub
and
mov
mov
inc
mov
inc
inc
jnp
mov
push
jl
fidivs
rcrb
pop
insl
pop
xchg
test
and
ret
ret
add
js
hlt
jp
inc
stos
iret
hlt
fdivrl
test
faddl
mov
pop
pop
cmpsb
test
lods
or
pop
adc
mov
adc
ja
pop
sbb
mov
cmove
test
cmpb
push
gs
mov
fdivr
rcll
push
mov
mov
ret
sti
push
and
push
stos
mov
cmpsb
lods
inc
ljmp
mov
lds
mov
cmpb
xchg
sbb
insl
jge
adc
std
or
gs
jbe
or
mov
dec
scas
fs
mov
jle
adc
add
pop
cmpsb
fdivl
imul
mov
stos
ss
pop
inc
jb
pop
jp
sbb
rclb
fistl
cmc
lcall
push
pushf
xor
mov
xor
rcl
stos
mov
movsl
scas
fiadds
pop
mov
outsl
aam
sti
dec
xchg
inc
sub
mov
push
arpl
cmp
in
mov
fsubs
sbb
cmp
addb
jbe
fidivrl
sbb
sub
imul
mov
or
inc
xchg
pop
cmp
cmpsb
ret
lods
adc
inc
les
cs
scas
ds
jle
inc
lret
inc
aaa
sbb
add
inc
adc
scas
mov
lret
dec
jl
xchg
aas
adc
mov
mov
push
xchg
and
pop
in
and
jle
xchg
dec
mov
scas
scas
ss
add
out
mov
icebp
bound
add
sub
out
or
test
sbb
sub
inc
push
xchg
jge
or
push
les
jg
cmp
mov
movsl
mov
imul
jo
mov
int3
and
mov
aad
adc
or
and
push
js
loope
cmp
rorb
cmp
jl
jnp
and
jle
sub
inc
push
inc
outsl
sub
push
mov
or
frstor
loop
mov
cmp
inc
push
shll
mov
push
xrelease
faddl
pop
aad
cmp
and
test
dec
mov
xchg
fwait
cmp
and
inc
pop
jbe
movsl
add
add
inc
addr16
add
dec
mov
sbb
repz
mov
pop
js
mov
adc
fisttpll
dec
insl
stc
popf
cli
ret
mov
or
push
xlat
out
sub
pop
mov
jle
inc
pop
xchg
mov
sbb
xrelease
jmp
hlt
ret
xchg
sarb
ficoml
ljmp
hlt
dec
push
pop
adcb
mov
dec
and
add
sbb
test
sub
inc
add
jle
lods
push
dec
adc
pop
or
out
mov
shlb
cli
out
imul
ret
testb
pop
movsb
mov
push
add
subl
xor
inc
mov
jle
push
cmp
mov
adc
jle
mov
ds
mov
and
test
push
xor
outsb
xchg
or
pop
mov
add
mov
push
mov
inc
push
cs
mov
mov
mov
dec
dec
mov
call
push
dec
pop
dec
mov
test
test
mov
adc
sbb
push
les
sub
jle
imul
or
inc
adc
lcall
mov
pushf
in
lcall
pop
ret
pop
movsl
iret
and
and
adc
push
xchg
out
insb
in
mov
repz
adc
pop
or
sbb
push
fs
dec
xchg
mov
dec
mov
mov
aad
repnz
mov
mov
cmpsb
inc
out
int
mov
push
shlb
adc
mov
and
xor
pop
or
fadd
adc
add
jb
pop
mov
inc
hlt
pop
mov
lods
jne
mov
faddl
enter
pusha
xchg
imul
loop
mov
push
inc
push
faddl
adc
dec
or
xchg
cwtl
pop
mov
mov
mov
mov
inc
dec
sub
mov
in
and
sti
mov
sahf
lods
dec
add
cs
hlt
ret
inc
jnp
into
sbb
mov
insl
cli
mov
adcb
inc
int3
push
xchg
inc
sbb
cmp
xor
popa
mov
lcall
fsubrp
cmp
nop
pop
lods
loop
mov
pshufw
sbb
lock
fs
loop
cmpsb
xor
push
xorb
cwtl
xchg
rolb
ja
mov
repnz
pop
adc
jb
imulb
push
dec
mov
and
cld
mov
inc
add
push
sub
mov
lock
outsb
adc
mov
mov
aam
inc
dec
adc
sub
out
xchg
inc
or
test
push
fisubl
lea
clc
inc
dec
add
push
loop
nop
rorb
mov
and
hlt
icebp
and
or
sub
imul
inc
pop
les
je
add
shll
xchg
lods
es
cltd
mov
stos
sbb
inc
mov
jno
sahf
aas
pop
mov
jp
mov
dec
sbb
push
cmp
jno
push
test
add
addr16
dec
mov
hlt
sub
loopne
data16
xchg
mov
and
sarb
ss
add
jb,pn
add
add
push
repz
push
rcrb
pop
call
insb
mov
mov
shlb
lods
mov
mov
into
fmul
inc
or
adc
pop
sub
push
add
aam
add
cs
and
js
dec
ss
and
cmp
adc
mov
jns
sahf
inc
je
leave
test
lea
cmpsb
jle
pop
adc
fwait
insl
cmpsl
adc
int3
stos
call
not
xor
je
xchg
pop
sub
pop
ja
hlt
cltd
mov
mov
dec
push
fildl
mov
push
push
jno
in
fmull
pop
test
sbb
jo
test
inc
dec
jbe
sbbb
stos
inc
adc
fldt
mov
test
adc
push
mov
out
jmp
dec
and
adc
movsl
inc
mov
addr16
loopne
shlb
dec
mov
push
les
xor
and
les
adc
mov
out
inc
sub
loop
push
pop
add
clc
pop
and
movsb
stc
sub
jp
mov
dec
xchg
andl
and
loop
pop
fmuls
mov
mov
lcall
xchg
pop
cli
mov
xchg
push
pusha
lods
mov
mov
rorb
pop
pop
shrb
mov
rcll
pop
cmpl
addl
mov
sbb
add
pop
sldt
dec
mov
inc
sub
in
mov
add
jmp
rclb
or
pop
clc
insb
push
addr16
mov
leave
fdivs
jbe
data16
push
and
fidivrs
sbb
mov
jp
mov
cmpsl
mov
cli
nop
shlb
cs
fmull
call
and
mov
mov
data16
adc
icebp
mov
push
insb
addr16
push
rorl
dec
imul
cs
lcall
push
mov
mov
std
rorb
adc
dec
test
add
inc
cmp
adcb
ffree
arpl
push
mov
sahf
out
mov
mov
jp
mov
fcompl
xor
inc
jnp
test
cmp
cmp
xchg
lods
aaa
mov
add
rcrb
jo
rolb
nop
xlat
cmp
lcall
repnz
xor
cmp
jle
int3
fwait
mov
es
adc
add
test
add
pushf
lahf
mov
xchg
inc
sbbb
stos
test
jbe
in
dec
lock
les
add
add
and
cmp
jl
mov
adc
mov
int3
sub
and
lock
or
cltd
lret
sbb
jae
push
xchg
lods
xchg
lock
enter
jmp
fsubl
cmp
insb
add
xchg
addr16
mov
out
cmpsb
inc
adc
cli
jbe
pop
inc
andl
push
sahf
xor
jmp
dec
push
adc
ljmp
out
repnz
adc
sbb
xor
out
mov
cmp
rcrb
test
bound
sbb
fiaddl
mov
orb
mov
daa
scas
sub
loopne
inc
inc
push
xchg
pop
xchg
add
sbb
xchg
orl
ljmp
sbb
scas
inc
push
repz
add
daa
add
jl
lods
adc
popa
xorb
sbb
and
sahf
inc
mov
scas
movsl
sub
push
mov
or
fsubp
adc
dec
push
dec
push
test
or
ljmp
int3
jnp
inc
or
gs
dec
inc
xchg
insl
cmp
add
sbb
ss
pusha
or
mov
iret
es
cwtl
lret
je
sbb
push
loope
adc
stos
hlt
xchg
shrb
and
loop
add
cld
add
test
in
dec
es
ficompl
mov
ljmp
pop
loopne
roll
es
notb
mov
mov
xchg
adc
bound
inc
int3
inc
mov
stos
inc
inc
mov
dec
loope
push
andb
data16
ja
push
popa
pop
out
xor
cmpsb
jmp
mov
mov
cmp
mov
pop
cmpsb
faddl
push
test
xor
and
xor
fisubrs
mov
add
cmp
jp
lods
pusha
xchg
insl
xor
movsb
sub
iret
test
sarb
pop
gs
pop
adc
fistl
js
inc
xchg
xchg
mov
push
xchg
int3
enter
mov
cld
fs
andl
push
jg
popl
out
xor
test
cmp
bound
fwait
xor
pop
add
stos
and
pop
shlb
inc
fidivs
add
and
jl
push
lcall
cmpsb
out
imul
jp
lock
fisubrl
inc
dec
inc
xchg
xchg
mov
push
ds
pop
syscall
adc
mov
in
lods
xchg
test
sub
cmpsb
loop
test
fsubrl
insb
andb
stos
in
aam
scas
mov
lods
cmpsb
adc
xor
mov
das
mov
push
clc
sub
imul
pop
std
mov
rorl
call
or
jg
fildl
or
pop
dec
enter
daa
inc
repnz
outsb
sbb
mov
hlt
xchg
pushl
imul
pop
dec
mov
dec
sbb
push
scas
out
in
sbb
lods
or
nop
pop
jno
test
mov
push
sarb
lods
push
push
or
cmpsb
push
insl
test
fsubs
adc
scas
hlt
adc
push
dec
push
mov
or
test
xchg
mov
pop
cld
pop
xchg
lret
loope
dec
jbe
cmp
lcall
outsb
fiaddl
cmp
adcl
and
mov
outsb
out
adc
je
sub
or
jp
mov
dec
mov
pop
sbbl
sub
xor
mov
addb
shll
cs
test
push
lods
inc
xchg
mov
adc
add
mov
inc
push
push
pop
adc
push
jl
mov
xor
push
call
jp
lcall
push
pop
xor
js
jae
stc
mov
mov
pop
mov
ret
cli
fidivl
mov
aam
cmp
hlt
xchg
orb
loop
add
outsl
lods
add
test
pop
cmc
es
or
push
mov
push
xchg
js
test
pop
js
add
lock
insl
mov
mov
add
mov
xor
or
add
fstps
jo
sub
test
icebp
push
cmpsb
inc
lock
shlb
jmp
repnz
js
sti
mov
filds
into
lret
repnz
test
cmpsb
rcr
inc
jbe
add
add
scas
test
xor
inc
and
add
pop
fistpl
outsb
cli
jo
dec
fs
dec
pop
clc
jae
mov
push
xchg
pop
outsl
call
out
sub
loope
aad
mov
push
add
clc
gs
cs
pop
cmp
mov
ret
fmul
enter
or
sbb
cs
dec
bound
sbb
push
mov
lock
add
pop
aam
es
fwait
ret
outsb
out
push
and
pusha
int3
mov
addb
dec
dec
cmpsb
and
fcmove
lcall
xchg
mov
mov
pusha
js
arpl
adc
sahf
jnp
lods
push
sub
movsb
adc
sbbb
push
and
mov
int3
cwtl
adc
cmpsb
pushf
icebp
xchg
dec
xchg
mov
popf
xor
dec
jp
call
fcom
out
and
in
inc
popl
or
xchg
jecxz
test
push
cs
imul
into
sub
insl
testb
clc
and
repz
or
pop
das
pop
test
movsb
fs
fdivrl
sbb
mov
insl
push
dec
xor
hlt
popf
out
xchg
mov
jbe
or
mov
lods
fadds
jne
jecxz
cmpsl
insb
gs
pop
or
pop
cli
bound
mov
adc
xorb
sub
icebp
mov
add
test
mov
ret
xor
lods
jbe
ret
jge,pn
mov
mov
push
inc
insb
sub
bound
incb
and
pop
fwait
les
jge
adc
add
sub
add
data16
xchg
sbb
mov
lock
bound
dec
sar
loop
adc
jmp
in
or
cmpsb
lock
inc
fildl
dec
in
xor
test
fcoms
cmpsb
cmpsb
lock
stos
adc
mov
inc
stos
push
loop
test
xor
aad
pop
cmc
call
insl
pop
inc
xchg
jo
hlt
into
jbe
pop
ljmp
ss
mov
cmp
cmp
aad
sar
fmull
sub
ljmp
dec
cmp
adc
pop
cmp
lahf
pusha
mov
sbb
mov
dec
fcomps
out
cli
cmp
aam
mov
dec
aas
loop
push
add
jno
lea
and
dec
dec
loopne
lret
or
call
mov
shlb
lcall
jns
inc
push
push
in
cmp
pop
ret
xchg
push
adc
ljmp
aam
pop
jbe
jecxz
cld
shll
dec
addb
repz
dec
cli
mov
cwtl
lods
test
rol
add
popf
add
orl
rol
jbe
loop
loop
adc
dec
js
mov
ds
das
scas
jl
rcll
enter
and
fwait
mov
ror
fisubs
lods
jge
clc
xchg
outsl
dec
cwtl
sub
cs
adc
icebp
sub
mov
add
loop
std
bound
push
inc
shrb
sbb
jbe
mov
pusha
lea
xor
orl
inc
lds
rcr
lret
aam
pop
dec
gs
add
out
add
dec
xchg
mov
jbe
lods
sub
popa
adc
cld
outsb
movsl
mov
jae
test
jecxz
sub
sub
jmp
fisubl
inc
jae
aas
push
xchg
insl
lock
dec
cmp
mov
mov
dec
xor
add
add
sub
ds
loope
data16
cmp
arpl
push
mov
add
pop
jl
je
push
xchg
popa
mov
data16
and
cmp
push
push
xchg
xchg
lds
dec
fcmovu
test
lods
xchg
mov
adc
lock
mov
stos
jle
cmp
dec
mov
ret
push
add
jbe
add
push
cs
mov
sbb
jl
dec
jg
inc
mov
xorb
dec
mov
mov
jbe
mov
mov
pop
ret
mov
test
adc
cmp
lds
push
jge
inc
push
mull
pop
shll
or
pushf
pop
outsb
ret
push
push
push
push
outsb
xor
sbb
xor
test
add
push
sahf
cli
sub
bound
add
xchg
test
push
push
sub
adc
jg
or
cmpsl
incl
dec
gs
sub
mov
jbe
pop
push
xor
push
andl
add
fneni(8087
clc
inc
xchg
fs
sub
or
ss
sub
cmpsl
cmp
push
scas
push
push
sub
dec
call
pop
repnz
lret
lods
inc
mov
mov
and
mov
sbb
or
fadds
je
out
test
aad
xorl
clc
push
fidivl
mov
xchg
fiadds
lret
push
sahf
pop
rorb
push
fists
add
xchg
pop
mov
fcoms
sbb
pop
cld
xchg
rcrl
bswap
xchg
jo
inc
adc
cmpsb
push
and
mov
cld
xor
or
dec
icebp
pop
inc
mov
jbe
dec
icebp
cmpsb
jo
ds
js
mov
rcll
int
jo
inc
pop
sub
sub
add
sub
cli
or
and
push
pusha
repnz
or
pushf
or
mov
or
into
or
xor
out
ret
test
push
xor
mov
mov
fsqrt
add
lret
jl
sarl
or
negb
cltd
and
sub
pop
sbb
xchg
rcr
xchg
adc
xchg
fiaddl
stos
shrb
push
fisubl
mov
xor
add
jp
sahf
cld
push
jbe
das
inc
data16
sub
cld
and
add
add
cmpsb
ljmp
cmc
in
or
in
ret
sbb
mov
subl
or
add
cli
sbbb
pop
hlt
data16
push
je
shlb
push
ljmp
and
sarb
shrb
dec
cmpsb
mov
mov
dec
add
adc
aam
enterw
scas
mov
test
inc
lss
jnp
jle
mov
cmp
dec
aaa
sbbb
and
mov
icebp
push
add
fwait
lods
addl
add
cmpsb
push
js
lea
sahf
mov
adc
and
push
insl
test
test
push
add
add
jp
xchg
jle
mov
js
bound
push
dec
loope
fs
xor
mov
mov
insb
movsb
pop
iret
jmp
fisttpll
inc
mov
into
jbe
bound
movsl
into
nop
je
add
les
shrb
iret
lret
push
inc
mov
cmpsb
inc
push
mov
mov
lods
es
shl
and
cmp
hlt
ds
lar
and
sub
mov
scas
inc
loop
jp
insl
mov
inc
xchg
jbe
cmp
xlat
dec
subl
or
scas
mov
jo
jl
insb
mov
dec
les
push
cmp
faddl
pop
ja
add
imul
pop
push
ljmp
mov
dec
dec
and
dec
jo
jns
imul
push
push
filds
xchg
jge
sbb
cs
pop
shlb
push
movsb
pusha
aad
dec
inc
je
sbb
int3
js
adc
add
outsb
push
cmpl
push
pushf
pop
cs
mov
xlat
lock
clc
les
push
dec
hlt
push
mov
int
add
push
mov
mov
adc
mov
mov
xchg
jo
test
call
enter
xor
adc
shl
movsl
cmpl
aam
or
pop
je
dec
mov
mov
aas
mov
inc
ret
add
mov
add
pusha
lds
mov
and
pop
popf
mov
push
loope
rorb
push
xchg
insl
notb
pop
lret
dec
pop
je
add
fidivs
cli
scas
push
fwait
scas
fistps
mov
iret
push
push
andb
jbe
in
push
adc
push
xor
push
push
mov
outsb
in
mov
add
lret
xor
dec
sub
or
imul
jne
xchg
jl
roll
or
mov
adc
ljmp
ljmp
inc
pop
rcll
adc
popf
or
sub
dec
cmp
cmp
ds
or
test
mov
pop
xchg
and
inc
das
inc
cmp
js
fs
and
divb
imul
fs
inc
test
pop
dec
xchg
fsubrl
and
aas
fadd
mov
xchg
xchg
shlb
shrb
fs
sub
mov
push
mull
sti
insb
ljmp
add
pop
cmp
push
popa
in
testb
inc
jae
push
pop
and
or
mov
add
mov
fiaddl
rorb
pop
mov
icebp
pop
mov
loop
movsb
sub
clc
and
xchg
pop
arpl
add
mov
sbb
scas
jp
add
jmp
sbb
cmpsb
sub
cmpsb
lret
pop
sub
pop
pushf
test
inc
fdivp
out
in
push
mov
add
sub
inc
lret
je
pop
push
and
push
sub
daa
inc
scas
pop
xchg
pop
jmp
cmp
jmp
arpl
clc
xorb
test
iret
inc
dec
pop
jle
ds
out
test
dec
data16
stos
cmp
push
mov
push
arpl
jb
push
push
rorb
enter
inc
and
imul
xchg
push
or
pop
sbb
cmpb
xchg
or
shll
data16
fs
and
ds
clc
mov
shrd
sbb
sbb
es
pop
cmpsl
pop
pop
aas
mov
or
xchg
test
add
loop
orb
push
adc
dec
mov
aaa
mov
out
push
add
inc
push
je
jge
cmc
add
les
orb
sbb
cmp
mov
sbb
or
stos
cli
jmp
inc
jb
sbb
or
js
mov
add
add
xchg
xor
inc
sub
mov
dec
js
jle
jmp
mov
xor
fwait
mov
scas
aad
sbb
mov
add
insb
dec
add
inc
into
jne
in
xchg
add
repnz
mov
add
mov
das
add
sbbl
js
test
push
loopne
jno
les
jle
lcall
int
dec
or
push
sbb
and
inc
cli
or
push
jnp
mov
or
repnz
lock
call
cmpsb
add
jp
cmc
inc
hlt
or
adc
popa
lea
add
loope
add
addb
scas
ret
push
push
mov
test
inc
roll
cmp
and
inc
xor
xchg
xchg
push
push
icebp
in
inc
dec
or
rorb
add
sub
jnp
loopne
push
mov
js
push
mov
pop
adc
enter
sbb
xchg
push
cmc
mov
sub
mov
mov
jae
pop
es
adc
adcl
smsw
xchg
in
ljmp
or
sbb
test
or
and
xchg
cmp
inc
push
jne
or
push
push
sbb
lret
add
jle
pop
dec
jp
pop
adc
enter
ss
movsb
jne
addr16
adc
and
add
inc
movsl
movsl
lcall
xor
fadd
aam
cwtl
sub
add
or
dec
dec
dec
push
mov
push
mov
xor
add
daa
sub
ficomps
or
cmp
in
int
ljmp
int
add
jbe
loope
inc
js
sbb
push
test
fimull
add
push
rcr
orl
and
mov
imul
xor
push
push
add
mov
and
and
sbb
nop
scas
cld
notb
pop
adc
pop
inc
aas
sahf
mov
jl
xchg
cmp
cli
out
add
mov
inc
repz
mov
aas
test
adc
add
cltd
jbe
dec
jbe
loope
outsb
inc
daa
mov
push
ret
loop
push
mov
push
ret
ss
pusha
shll
add
lock
jne
mov
adc
or
in
cmp
xor
dec
xchg
into
mov
add
insb
mov
cmp
in
push
movsl
inc
test
dec
repnz
adc
movb
imul
push
loope
dec
pop
popa
imul
adc
frstor
pop
push
jnp
cmpsb
nop
sahf
cli
outsl
sub
movsb
icebp
dec
jnp
xchg
sbb
call
mov
pop
dec
shl
mov
xor
lret
add
jp
lcall
xor
cmp
aam
sbb
pop
dec
xchg
out
pusha
xor
pop
loopne
sub
mov
xor
jle
jbe
cmp
push
je
and
add
push
jle
aam
imul
inc
dec
sbb
mov
fcompl
xor
lret
ljmp
aam
insb
dec
scas
cmp
cmpsl
mov
and
adc
pop
mov
dec
mov
and
mov
into
sahf
les
jl
nop
aaa
vfmsubpd
cli
mov
pop
and
mov
push
fs
sub
dec
stos
dec
adc
loope
mov
dec
add
adc
push
fwait
xchg
in
ljmp
popa
test
test
fdivrl
adc
xor
push
mov
addb
fmuls
mov
xlat
adc
jbe
push
mov
repnz
xchg
mov
jl
inc
pop
hlt
out
jl
in
je
cmp
push
adc
pop
jbe
xor
sbb
das
or
push
jecxz
push
mov
dec
jl
mov
xor
pop
pop
or
add
repnz
inc
loopne
push
insb
hlt
jmp
movsb
lods
xchg
pop
mov
popa
xchg
cwtl
stos
dec
test
pop
inc
je
test
lds
inc
orb
xchg
mov
pop
or
rcl
fs
or
addb
mov
dec
lods
xor
xor
fisttpl
mov
addb
addr16
push
mov
int3
jbe
dec
stc
sahf
sub
xchg
hlt
xor
in
fcoml
sahf
bound
call
dec
inc
pop
sub
adc
lods
dec
stos
sahf
mov
sub
cmp
lret
mov
jo
lods
add
ficoml
cmp
adc
jge
mov
lret
push
fld
lcall
cwtl
sub
jb
scas
lcall
pop
cs
mov
adc
lcall
push
sbb
rcrl
hlt
inc
inc
out
xlat
mov
int3
xchg
mov
add
xchg
pop
pop
dec
cli
mov
cs
jl
mov
xchg
aad
test
adc
mov
sub
push
gs
and
mov
push
xchg
xor
inc
xchg
test
or
or
jne
jae
pop
or
cmpsb
fisubl
int
lods
xchg
fmull
mov
xor
test
and
dec
nop
mov
lret
pop
add
lcall
sub
mov
pop
dec
push
and
mov
adc
fdivrl
add
movsl
push
cmpsb
and
ret
test
movsb
jmp
clc
lock
push
in
pop
rolb
loop
es
pop
push
decb
das
mov
mov
outsl
cmp
pop
fnstenv
lods
push
push
sbb
jo
or
loopne
mov
xchg
sbbb
adc
and
mov
roll
xchg
or
cmp
scas
ss
mov
mov
jp
cs
subl
les
sbb
ds
jae
popa
lcall
sbb
jl
cwtl
lret
adc
jbe
add
inc
pop
mov
and
sbbb
mov
or
xor
adc
addb
xchg
xchg
jp
clc
mov
and
or
pop
and
lods
add
mov
sub
flds
lock
mov
xorl
clc
ret
and
add
int3
sub
jne
lods
add
pop
dec
out
in
leave
push
mov
cwtl
mov
add
cli
or
pop
icebp
lods
xchg
in
xchg
sbb
mov
daa
mov
call
inc
hlt
adc
mov
les
mov
mov
adc
xchg
mov
cmpsb
call
andnps
pop
clc
cmpsb
mov
bound
call
mov
loope
aad
mov
xor
mov
push
popl
aas
inc
lods
xor
test
std
xor
fdivs
xor
jl
ret
fmuls
js
xor
or
mov
in
sahf
xchg
jp
inc
adc
cmp
push
mov
jnp
fstps
lods
add
add
cmpl
pop
adc
test
addr16
fldcw
adc
add
stos
inc
push
inc
loop
sub
jecxz
add
mov
pop
lidtl
push
nop
or
adc
pop
pusha
mov
cli
dec
mov
pop
xor
sub
lcall
pop
int
jbe
into
or
lcall
jl
push
add
les
sub
or
and
pop
cmp
xchg
lret
sub
fcoms
mov
in
mov
inc
in
push
cmp
xor
mov
inc
repnz
xchg
mov
mov
faddl
sbb
dec
popa
inc
mov
std
aad
mov
rorb
mov
imul
int3
bnd
cs
inc
pop
lock
inc
lock
cmp
dec
cmp
mov
dec
adc
loopne
add
inc
pop
mov
mov
xchg
cmp
cmpb
or
out
mov
push
repz
mov
jl
push
pushf
add
xor
gs
bound
push
test
inc
mov
xor
mov
adc
mov
ss
clc
scas
mov
mov
add
shl
xor
cmc
adc
in
xchg
jl
mov
rolb
movsl
andl
adc
cli
pop
sbb
popa
sbb
nop
rclb
outsl
nop
ljmp
jle
sub
xchg
adc
or
jns
pop
jo
insb
mov
cld
mov
cltd
rclb
imul
cmp
add
sbb
test
mov
and
push
adc
sbb
fs
cli
out
in
jge
rorb
pop
push
shrb
pop
aas
mov
in
call
clc
insl
mov
popa
test
xchg
aam
xor
sbbl
sti
pop
test
pop
out
mov
fdiv
dec
call
repnz
bound
hlt
push
cmp
dec
enter
call
push
es
xorb
pop
mov
loop
adc
inc
push
dec
adc
insb
gs
arpl
cmp
add
rol
cmp
push
cli
or
pop
mov
loop
imul
add
mov
outsb
out
cmp
test
js
mov
lock
xor
fsqrt
mov
cmp
scas
sub
mov
jb
xchg
or
outsl
mov
adc
and
mov
int
fisttpll
mov
pop
in
les
popa
shll
iret
push
stos
mov
stos
mov
int
mov
les
je
repz
mov
mov
jb
ficompl
mov
enter
inc
xchg
push
loopne
inc
imul
pop
mov
pop
xor
sub
push
lock
cld
rcrl
xor
add
mov
and
dec
or
mov
shlb
fadd
xor
sbb
es
mov
xor
sar
out
sbb
mov
or
inc
push
addb
call
push
sub
sbb
out
sbbb
xchg
xchg
xchg
fidivrs
inc
cli
pop
dec
jecxz
xor
ds
add
fsubs
push
shll
cltd
push
xor
dec
call
dec
insb
sub
push
jo
sub
sbb
and
add
push
add
push
push
mov
sub
push
dec
push
es
pop
xchg
mov
cmp
xchg
ljmp
add
sub
adc
js
add
ljmp
add
enter
aas
and
push
enter
mov
mov
in
lcall
cwtl
addr16
xor
icebp
dec
jecxz
sbb
inc
xchg
push
or
lret
and
cmpsb
into
mov
aam
mov
pushf
xchg
xchg
lock
fmuls
mov
les
clc
dec
loope
and
and
andb
dec
lea
push
push
mov
mov
lahf
outsl
mov
or
jle
jno
loope
int3
pop
and
test
add
cmpsb
int
cmp
mov
icebp
insl
insb
cmp
pop
loopne
dec
shlb
jle
xchg
pop
addr16
sti
push
inc
addl
and
lods
sub
aad
sahf
ljmp
lock
dec
adc
cwtl
xor
fildl
cli
nop
adc
xchg
add
stos
bnd
mov
gs
adc
inc
loopne
xor
jl
movsl
testb
fisubs
cmpsb
fiaddl
or
test
xor
jl
test
push
lcall
or
adc
and
in
fldl2e
ljmp
outsb
add
je
dec
jp
jecxz
mov
mov
aam
inc
insb
adc
sub
xchg
cmp
push
in
or
rcll
sahf
cld
les
ljmp
mov
out
imul
and
mov
xlat
adc
pop
mov
test
or
insb
clc
fadd
push
test
pop
insb
and
imul
pop
xchg
sub
dec
jle
and
pop
fsubrs
adc
sbb
repz
pop
adcl
or
and
fs
hlt
pushf
cli
and
push
sbbl
xor
mov
dec
insl
inc
rcrb
fiaddl
call
xchg
incl
xor
rclb
mov
or
fisubl
pop
push
les
mov
or
jle
popw
out
dec
xor
gs
sub
lods
filds
mov
in
push
xchg
movsb
inc
jnp
xchg
add
ja
mov
cli
call
adcb
popa
mov
pop
pop
dec
and
xlat
mov
inc
push
inc
cmc
lcall
in
push
in
cld
aam
dec
push
insb
dec
movsb
and
sbb
mov
sahf
push
loop
mov
fs
daa
cmp
adc
or
or
jl
pop
xor
nopl
adc
add
pop
sti
dec
jl
sahf
inc
cmp
je
pushaw
fmull
adc
add
test
jge
lcall
and
cwtl
push
lea
push
jp
cli
test
push
lods
int3
pop
pop
ss
call
test
jecxz
cmpsb
pop
gs
sti
pop
outsb
mov
add
cmp
or
icebp
sbb
lods
inc
or
nop
dec
push
pop
or
add
push
and
test
xor
cmp
pop
jbe
adc
push
mov
cs
mov
dec
mov
test
mov
adc
sbb
push
fdivr
leave
pop
sbb
cli
jp
icebp
shr
mov
push
mov
fcomps
fcmovb
lahf
call
push
inc
pop
dec
or
mov
shl
push
movsl
and
int
mov
dec
xchg
xchg
lret
int
bound
or
cs
sahf
inc
insl
sahf
out
test
pop
inc
lea
in
pop
outsb
ret
mov
cmp
adcl
xchg
decb
pop
loope
sbb
sub
cmp
aam
or
pusha
mov
in
xor
movsb
add
push
roll
push
push
das
add
cltd
mov
insb
xor
lock
imul
nopl
pusha
ds
mov
test
loopne
fs
inc
lret
add
mov
cmpsb
out
inc
sti
into
lret
aam
sbbl
push
or
push
mov
mov
test
pop
adc
test
adc
inc
ret
sub
pop
stos
in
mov
mov
and
inc
inc
or
ljmp
ficompl
daa
add
xchg
shr
jne
mov
inc
es
jb
xor
sti
fidivrl
jbe
jo
mov
mov
xor
xchg
inc
xor
add
push
mov
rclb
mov
mov
dec
cmp
inc
add
jae
add
push
pusha
inc
scas
pop
xor
jl
xorb
in
mov
or
xchg
pop
fwait
or
push
out
out
xor
add
mov
push
jbe
fdivl
inc
inc
inc
xor
out
xorl
cmp
inc
js
push
stos
movb
push
and
decb
lret
xchg
jnp
ret
cmpb
adc
dec
lds
xchg
mov
push
loopne,pn
pop
mov
mov
push
add
cmpsb
inc
xchg
jno
mov
jp
icebp
sub
cli
push
sub
cmp
icebp
fdivrs
inc
in
int3
fimull
mov
pop
dec
mov
ljmp
mov
add
imul
and
add
lods
hlt
dec
fadds
mov
and
push
adc
nop
imul
fadds
ss
mov
jbe
jecxz
pusha
adc
or
mov
jne
add
loopne
add
push
push
jne
lods
pop
adc
mov
test
push
and
lcall
push
push
cs
push
mov
jl
push
inc
xchg
decb
shlb
es
or
sub
insb
adc
xor
out
mov
mov
push
add
pop
imul
sbb
loopne
mov
adcl
fsub
mov
bound
mov
jno
test
sbb
or
or
add
stos
and
adc
cmpsb
mov
mov
movsb
lock
sub
dec
loopne
cmpl
add
dec
hlt
cmp
insb
loope
sub
and
sub
push
icebp
dec
mov
push
pop
jb
and
mov
mov
xor
jne,pn
cmpsb
sbb
mov
int3
jbe
mov
inc
mov
icebp
cmpb
or
sahf
ja
aam
or
cmpsb
cwtl
cmp
insb
push
rorb
rcr
mov
pop
mov
idivl
or
inc
push
rclb
adc
add
loop
pusha
push
divb
jp
cld
out
adc
add
pop
and
stos
jnp
or
enter
cmc
movsb
insb
mov
add
sahf
mov
sub
lods
and
pop
mov
mov
pop
xchg
ljmp
inc
or
sub
push
rcrl
add
xchg
fcompl
cs
dec
ja
jge
cmp
repnz
mov
shlb
sti
xor
and
repnz
push
pop
lock
jns
add
xchg
popa
jo
and
ficompl
or
inc
mov
jle
or
mov
std
xor
lea
sub
movsb
test
push
mov
dec
enterw
push
sarb
mov
je
and
push
mov
mov
test
inc
lock
push
dec
pop
and
mov
js
mov
cltd
mov
addr16
test
and
add
rcrb
or
pusha
mov
call
push
add
push
xor
sub
push
test
adc
lods
or
mov
mov
pop
inc
push
sub
jae
loopne
test
fwait
push
loope
mov
imul
shl
pop
push
sub
sub
mov
and
js
inc
pop
mov
jecxz
mov
dec
mov
mov
adcb
jns
cmp
push
dec
cld
xchg
mov
int3
or
or
stos
nop
and
data16
inc
mov
imul
dec
je
add
shrl
xchg
scas
test
sbb
mov
cmp
fs
mov
jb
je
pusha
mov
mov
cmp
xor
testb
jo
into
insb
cmp
dec
lcall
jnp
xchg
cmp
stos
inc
adc
mov
push
or
pop
popa
rclb
push
in
dec
aas
test
orb
fwait
push
mov
push
pop
mov
imul
rcrl
push
ss
ss
or
test
shrb
sti
fs
stos
push
jle
cli
rorb
sbb
setl
ljmp
in
adc
push
adc
scas
sbb
push
add
xor
arpl
push
fs
add
insl
sbb
scas
jbe
jmp
push
push
or
scas
mov
sbb
ret
mov
jle
or
sub
mov
cmp
add
icebp
mov
pop
mov
push
push
test
inc
aam
js
add
loopne
ds
ja
push
sahf
fcmovu
cmp
inc
mov
push
std
add
pop
adc
xchg
lcall
rcr
add
mov
jns
inc
lea
push
dec
mulps
data16
js
xor
aam
hlt
pop
mov
add
push
xchg
loopne
jp
ljmp
adc
cli
push
js
mov
mov
data16
imul
jo
and
xchg
lock
js
cmc
mulb
pop
loope
daa
mov
test
lcall
push
cmp
push
and
or
aam
incb
mov
and
mov
fwait
in
mov
lods
stos
cmpsb
int
scas
mov
insb
aas
dec
jne
in
adc
pop
scas
adc
rclb
push
push
fdivl
or
jo
fiaddl
mov
mov
out
int3
mov
bound
mov
push
mov
aad
and
daa
push
add
mov
int
lcall
xchg
push
mov
and
fcomp
xchg
enter
dec
insb
faddp
dec
jbe
jo
pop
scas
inc
and
movsl
push
and
ret
or
outsl
int3
les
mov
sbb
cli
inc
sub
testb
push
loop
push
inc
push
sub
or
ss
adc
int3
cmpsb
xchg
add
add
mov
jno
lods
rcl
cmpsb
sbb
loopne
hlt
push
inc
sarl
fldt
sbb
imul
mov
das
shlb
xchg
cmp
inc
inc
add
rolb
jge
push
adc
adc
in
xor
xor
imul
cmpb
loop
xor
and
ss
cmp
sub
fmull
js
ss
mov
xchg
xor
sub
jae
lods
jge
pop
fcoms
mov
insl
dec
or
adc
cli
and
faddl
stc
sahf
inc
mov
push
push
ja
cmp
or
jp
arpl
mov
loopne
mov
repnz
or
fiaddl
jb
or
stos
pop
sbb
push
add
jle
push
mov
out
shlb
dec
rorl
jge
dec
aam
pop
testb
lods
dec
mov
in
push
nop
push
dec
and
adcl
dec
fs
jbe
cmpb
stos
push
sbb
or
test
dec
jl
clc
int3
or
dec
add
movsl
xchg
xor
and
shlb
rcrl
sbb
shlb
fiaddl
inc
push
andl
scas
and
and
bound
shll
xchg
inc
lahf
push
stos
cwtl
movsb
cli
cmp
mov
inc
mov
call
or
das
or
jnp
shrb
mov
addl
mov
mov
pop
sub
insl
push
inc
inc
adc
push
adc
sar
fdivr
and
test
push
jbe
sub
xor
stos
movsb
adc
lcall
jg
mov
pop
inc
push
mov
push
inc
notb
je
mov
xchg
sub
xchg
mov
pop
add
jg
or
sub
push
and
out
dec
faddp
push
xchg
rclb
enter
push
fcomps
mov
sbb
pop
or
mov
pusha
jp
jmp
mov
outsb
daa
adc
nop
sahf
cli
test
add
mov
pop
movsl
sarb
lock
sub
movsb
stc
jbe
inc
xchg
fmulp
and
subl
mov
shl
fs
push
icebp
or
dec
pusha
scas
or
fisubs
orl
or
ret
cmp
add
or
sbb
mov
jae
or
test
lock
jge
insl
mov
xlat
inc
popa
imul
mov
rcll
pop
jp
movntps
loop
shrd
cmp
cmp
push
add
or
data16
sub
rcrb
das
push
mov
sbb
mov
inc
ret
mov
data16
or
icebp
xchg
addb
mov
addr16
imul
out
cs
xchg
sub
mov
xor
dec
pusha
dec
mov
add
jg
inc
xor
adc
into
pop
stos
pop
cmp
jp
shl
inc
push
push
sbbb
xor
leave
inc
xchg
cmp
mov
in
scas
sub
mov
adc
rcrb
adc
add
and
sbb
adc
inc
push
in
clc
pop
int
les
adc
cmp
outsl
stos
sbb
negl
or
or
push
push
sub
ljmp
add
xlat
adc
pop
aaa
data16
aam
add
mov
lcall
shlb
sbb
inc
ret
mov
das
pop
xor
push
addb
adc
mov
lock
ficoms
test
cmpsb
xchg
xor
mov
or
sub
push
pop
dec
push
out
pop
push
push
into
cmp
cmc
inc
pop
stc
adc
add
ret
ljmp
dec
fwait
push
and
add
cmpsb
test
hlt
sub
mov
add
cmp
or
dec
adc
fldl2e
clc
xor
ss
sbb
lcall
mov
lret
jle
or
lods
mov
shlb
hlt
and
cmovno
gs
dec
mov
jbe
adc
cwtl
pop
add
adc
mov
int
xor
aaa
insb
dec
test
xor
and
addps
outsb
scas
cwtl
xor
pop
ret
push
test
sub
xchg
push
and
lahf
dec
lods
inc
test
dec
loop
add
ret
rcrb
movsl
test
mov
push
insb
pusha
orl
stos
mov
loopne
pop
or
push
rorl
or
jle
enter
xor
pop
or
ret
rorb
pop
dec
mov
xchg
push
fwait
cli
push
push
test
out
icebp
or
xchg
outsl
int
pop
aaa
pop
pop
imulb
xchg
mov
enter
pop
xchg
xchg
dec
lcall
push
cmp
mov
xchg
adc
push
pop
and
adc
sbbl
mov
mov
enter
lcall
jns
push
roll
adc
sub
adc
roll
sub
mov
mov
arpl
pusha
add
stos
push
outsb
add
lcall
jl
sbb
mov
bound
mov
mov
xchg
or
int3
dec
cmp
in
dec
rclb
and
mov
ljmp
stc
adc
test
or
mov
ss
mov
lcall
push
sub
push
pop
and
inc
js
addl
mov
into
cltd
sbb
sub
aaa
mov
flds
sub
and
mov
or
fwait
and
ja
push
xchg
add
push
mov
sbb
xchg
lock
xor
mov
or
call
leave
adc
pop
rcrb
xchg
jge
and
lcall
out
hlt
leave
push
cmpsb
xchg
xlat
mov
pop
inc
int3
popa
mov
mov
loop
mov
int
rorl
push
sub
popa
insb
mov
adc
dec
call
or
out
imul
lahf
jbe
mov
sub
xchg
mov
stc
push
sarl
loop
mov
inc
mov
rclb
mov
lods
or
vmovsd
imul
pop
in
inc
icebp
dec
js
push
and
cmp
add
mov
xchg
das
adc
dec
xchg
sbb
mov
xor
out
push
jp
xchg
mov
xor
scas
pop
pop
mov
add
xchg
inc
je
add
and
jnp
push
rcrb
in
add
je
jp
or
sar
lea
push
and
push
or
lea
pushf
mov
inc
cwtl
and
xor
sbb
jmp
mov
ficomps
add
mov
jge
cmpb
add
scas
inc
inc
fwait
adc
xchg
aas
dec
mov
das
fsubrs
lods
orl
mov
aad
cwtl
lock
les
bound
out
mov
mov
clc
scas
repz
inc
loopne
rcrb
sbb
inc
xchg
pop
and
mov
sbb
cmpsb
mov
pop
lcall
imul
push
out
sarl
xchg
fiaddl
mov
nop
subb
push
popf
xor
js
adc
xchg
pop
cli
add
ficompl
cmp
test
sbb
fcoms
fwait
or
nop
or
rorb
pop
pop
lcall
sbb
ljmp
pop
jle
xchg
andb
cld
adc
sub
mov
and
jb
hlt
sbb
push
sbb
pop
sub
pusha
dec
sbb
jbe
mov
cld
mov
sbb
negb
sub
lods
js
push
pop
xchg
xadd
xchg
cli
add
sub
dec
bound
cs
movsl
add
sbb
push
call
ret
push
inc
mov
mov
adc
mov
mov
nop
push
jb
cmovl
sbb
sub
xchg
mov
sub
xor
mov
push
insb
cmp
pop
pop
adc
jp
add
into
mov
add
lcall
mov
sbb
sar
push
clc
inc
test
mov
gs
inc
and
mov
or
out
fmuls
mov
jno
mov
jp
lock
inc
mov
push
ljmp
push
sub
inc
mov
mov
push
xchg
cs
jecxz
mov
movsl
cmpsb
add
les
cmp
shlb
jl
out
adc
push
mov
stc
jecxz
rorb
add
test
pushf
push
pop
mov
rclb
jbe
imul
int
mov
hlt
mov
mov
xor
and
pop
mov
inc
pop
aam
dec
test
shl
xchg
sbb
fstpl
add
fs
jle
push
cmp
inc
add
adc
and
pop
out
movsb
inc
mov
orb
jmp
adc
pop
pop
test
dec
rorl
ss
xchg
mov
or
orb
add
mov
cmp
or
shlb
push
inc
inc
sti
test
gs
stc
push
popa
mov
aam
mov
push
aad
loopne
mov
out
sbb
rolb
inc
aad
test
dec
cld
push
pop
xor
rolb
movsb
outsl
bswap
cmp
scas
or
sbb
push
mov
ds
repnz
fidivrs
arpl
fisubl
push
shlb
sbb
sbb
ljmp
dec
add
push
insb
push
sub
or
jb
lea
in
and
push
test
sub
mov
mov
cmp
cmp
arpl
push
fdivrs
push
insb
mov
ret
jp
decb
adc
rorb
call
outsl
call
push
add
pop
mov
mulb
das
mov
add
xchg
lock
adc
aaa
and
ss
jecxz
cmp
out
adc
pop
xchg
jo
push
int3
mov
es
pusha
pop
mov
xchg
mov
pop
popf
and
mov
xchg
popf
es
xor
nop
mov
pop
inc
in
sub
mov
les
or
sub
xchg
cmc
fld
sbb
adc
das
push
cmp
pop
and
add
pushf
adc
dec
sub
enter
enter
lods
xchg
daa
inc
sbb
dec
aas
clc
and
xor
add
mov
stos
jne
scas
test
sar
loop
or
xor
add
inc
in
add
insb
mov
jl
inc
and
test
dec
sub
inc
loop
push
cld
push
and
fistpll
leave
pop
cmp
into
jge
add
addr16
int
insb
dec
mov
xorb
scas
inc
jbe
shlb
je
clc
push
add
hlt
gs
pushf
test
cmp
adc
inc
nop
fsubl
mov
xor
sub
cltd
sub
iret
bound
lret
push
mov
sbb
dec
mov
cltd
adc
add
and
push
iret
cwtl
mov
je
imul
mov
jbe
insl
loop
and
xor
aas
mov
xchg
dec
stos
aaa
or
inc
xor
inc
ljmp
push
inc
mov
dec
sbb
mov
jp
push
loopne
lret
in
mov
insl
movsb
xchg
negl
inc
push
pop
call
fwait
adc
push
xchg
fiaddl
pop
xchg
nop
jbe
jo
push
lock
mov
jo
cmpsb
adc
nop
dec
in
push
push
sbb
rcrb
imul
xchg
add
xor
add
push
inc
xor
xchg
mov
sbb
ljmp
pop
rorb
ret
adc
sub
clc
adc
mov
xchg
sbb
pop
or
aam
ljmp
push
in
roll
sbb
lcall
sub
aam
or
push
add
mov
push
hlt
popa
lods
std
inc
call
cmpb
push
mov
leave
mov
inc
inc
call
xor
and
push
cmpsb
test
outsl
inc
stos
insb
cld
push
sbb
cmpsl
cmpsb
mov
es
sbb
add
insb
dec
adc
lret
mov
lcall
xchg
lods
fnsave
sbb
adc
inc
push
nop
adc
and
cs
clc
mov
cld
cmpl
test
sbb
add
dec
sub
outsb
aam
inc
sub
bound
mov
movb
bound
insb
out
ret
and
xchg
or
hlt
xchg
jl
ret
inc
jg
adc
adc
cmp
cvtps2pd
mov
mov
repz
xchg
mov
xchg
add
movsb
mov
gs
push
ret
mov
stos
sub
or
push
cmp
sbb
add
add
int3
test
jmp
outsb
pop
pop
das
add
xchg
mov
cmp
movsb
push
movb
cltd
outsl
out
pop
adcb
or
aaa
and
xchg
mov
sub
lret
sbbl
insb
aad
shrb
jg
loopne
aas
xor
faddp
out
jne
test
push
shlb
lret
sbb
test
cmp
gs
xor
mov
xor
dec
mov
xchg
lods
jbe
mov
mov
and
clc
mov
ret
lock
mov
push
mov
add
daa
push
sbb
je
push
or
lods
sti
into
jmp
push
scas
movsb
dec
into
xchg
shlb
in
inc
and
mov
inc
bound
pop
sbb
in
push
es
inc
jp
test
and
push
jp
push
and
jno
jnp
mov
push
push
inc
je
adc
in
shrl
sbb
adc
push
pop
call
lods
sbb
mov
fbld
inc
in
or
mov
mov
arpl
sub
sub
mov
dec
xor
lcall
push
adc
lock
ja
and
mov
rcrb
loope
pop
negl
ret
test
pop
lcall
fstpt
mov
inc
push
dec
add
adc
call
mov
aas
xchg
je
push
lods
or
sahf
mov
dec
adc
addl
lea
adc
pop
pop
mov
and
xchg
pusha
sbb
pushf
push
inc
sub
push
fwait
cld
sub
les
mov
add
inc
mov
scas
sub
xchg
cmp
test
push
xchg
jle
mov
add
into
mov
insl
dec
xor
mov
ret
cli
or
pop
sbbl
cs
add
push
rcrb
movsl
xchg
inc
mov
sub
std
mov
push
sti
dec
add
mov
push
ret
jnp
fdivs
add
adc
mov
loopne
jle
fcompp
hlt
push
and
add
cs
sbb
push
aam
push
mov
shlb
xor
cmp
mov
cmc
sbb
int3
mov
imul
jbe
xor
pop
jg
fcomp
dec
fmuls
push
ss
insl
aad
into
data16
cli
shlb
into
movsb
aam
sbb
cmp
mov
loope
inc
pop
sahf
sbb
fiaddl
or
sahf
cs
sbb
and
rcrb
mov
lods
fcompl
call
aaa
adcl
test
outsb
add
rorb
inc
inc
cmp
std
mov
ret
repnz
sub
pop
push
lock
mov
pop
roll
movsb
mov
fcomps
xchg
cmpsb
pop
fisttpl
pop
mov
dec
mov
insb
mov
cmpsb
and
jp
ret
fcoml
sbb
jne
cmc
cmc
adc
add
sahf
add
adc
sbb
pop
sbb
fdivrs
insb
push
rcll
mov
sbb
push
out
lea
lea
mov
sub
scas
dec
loopne
push
jbe
mov
out
jl
add
pop
out
dec
imul
or
cs
sub
cmc
xor
in
aas
mov
loope
shlb
rolb
sbb
aam
add
adc
sbb
pop
ret
cld
gs
and
pop
cli
jbe
adc
loop
fadds
or
pop
in
mov
push
insb
jmp
int3
adc
pop
adc
les
cmovs
pop
sbbb
iret
mov
xchg
and
mov
mov
icebp
add
xor
xor
shlb
push
add
neg
enter
repnz
sahf
sub
subl
mov
mov
dec
mov
das
aam
out
cli
sub
xchg
enter
or
dec
push
push
push
imul
sub
enter
inc
xor
adc
ds
insb
push
and
and
push
or
fcoms
mov
jo
movsl
movsl
push
insb
mov
stos
lods
lods
loopne
pusha
in
and
hlt
repnz
push
shrb
pushf
inc
andb
and
xor
mov
mov
faddl
xor
hlt
gs
dec
push
cmpb
push
fmuls
dec
adc
cs
test
sub
lea
push
push
mov
xchg
aam
inc
cwtl
or
popf
je
sbbl
stos
mov
shll
cs
push
pop
shlb
test
pop
pop
stos
into
cs
ss
lods
and
sbb
inc
pop
xchg
clc
dec
inc
insl
jle
cli
or
clc
ss
in
xchg
mov
test
notb
lcall
pusha
jno
push
stos
cmp
sbb
andl
in
out
push
mov
mov
sahf
add
inc
mov
jo
adc
cmp
movsb
lcall
jl
adc
mov
inc
pop
sti
aas
xchg
pusha
mov
jecxz
fsubr
lret
lods
loopne
inc
adc
sbb
dec
push
in
add
out
adc
add
test
and
std
stos
mov
xor
daa
and
fwait
mov
jbe
addb
mov
or
cmp
ficomps
dec
inc
mov
fsts
adc
add
inc
fistl
inc
inc
jl
fldl
cwtl
mov
insb
mov
push
push
shlb
mov
push
enter
mov
jp
lea
inc
mov
add
sub
cltd
fisubl
adc
jbe
cmp
dec
movsb
jle
sub
pop
popf
or
and
push
daa
in
nop
push
cmp
andb
xchg
and
and
lds
and
addr16
xlat
add
sbb
push
dec
fimuls
or
add
mov
adc
inc
sbb
ss
js
pusha
std
mov
xchg
jo
int3
cmp
cli
add
mov
rolb
add
push
mov
mov
xor
sub
jg
xchg
rcrb
ljmp
fimull
test
iret
lock
fcom
and
xor
das
or
and
adc
xchg
jle
stos
adc
jnp
mov
adc
sub
and
add
inc
enter
push
xor
cmpl
lds
fcoms
pop
popa
push
inc
loop
addl
hlt
ljmp
mov
cmpsb
ret
cmpsb
add
pop
xchg
je
lods
push
andl
test
xor
xchg
push
dec
shrb
jle
fwait
sbb
inc
or
lcall
lods
subb
mov
adc
cmp
xor
dec
sub
cmc
lret
sarl
mov
rorl
pop
pop
mov
xor
add
pop
lahf
and
mov
je
jno
data16
cli
out
mov
cld
es
xchg
mov
fs
add
mov
xor
cmp
cmp
inc
sub
adc
pop
push
bound
cmp
sbb
test
ret
or
xor
pop
mov
mov
push
xchg
inc
ja
out
ljmp
out
inc
int3
out
sub
xchg
pop
test
pushf
and
push
inc
sbb
hlt
push
nop
push
popl
shlb
outsl
or
mov
push
lods
inc
push
fdivl
in
pop
bound
sub
ss
mov
xchg
xor
cltd
je
stos
mov
loopne
and
xchg
mov
stos
fidivrl
ds
movsb
cli
sahf
inc
xor
mov
popa
and
inc
jecxz
or
cmp
mov
addr16
or
es
push
mov
jae
adc
clc
and
dec
pusha
inc
pop
in
out
cmp
test
ds
ljmp
das
aam
ret
orl
cmp
jl
mov
shl
imul
add
hlt
mov
test
add
or
andb
cmpb
push
push
cmp
decb
pusha
fcmovb
adc
pushf
jmp
out
push
xor
or
cmp
push
lods
xor
mov
lock
shlb
push
push
lods
rorb
jne
clc
mov
cmpb
inc
and
daa
ljmp
fdivs
test
inc
xchg
jle
aam
cli
and
addr16
addb
and
xchg
test
jmp
fiaddl
jl
nop
xor
xor
mov
jns
inc
das
add
lea
gs
out
sbb
add
jbe
cmp
and
std
mov
xor
sarl
mov
out
xor
push
adc
test
cmpsb
sbb
inc
dec
adc
lods
je
and
lcall
ss
bound
inc
rcrb
and
mov
dec
mov
sub
jge
push
xor
lods
push
adc
pop
cmovge
stos
adc
inc
mov
outsl
fimuls
add
jmp
imul
fcomps
push
imul
out
popa
push
insl
jle
ljmp
ja
pop
add
ljmp
and
mov
lret
lcall
add
mov
lods
push
dec
pshufw
ss
cltd
shrb
cmp
scas
mov
gs
sbb
cld
dec
pop
add
xchg
lcall
dec
mov
push
enter
inc
inc
clc
imul
add
sub
in
and
mov
xchg
sub
or
push
scas
stos
adc
inc
or
jnp
mov
aaa
mov
cmp
movb
adc
push
lock
test
scas
imulb
jl
das
cmp
inc
dec
sub
cmpb
mov
push
inc
or
pop
shl
mov
lods
popa
pop
pop
adc
popf
sbb
add
xor
and
pop
add
mov
sahf
sti
daa
push
push
inc
leave
cli
fs
je
add
sub
jmp
pop
loop
pusha
imul
jae
jne
ds
mov
inc
or
cmpsb
test
mov
jecxz
movsl
push
bound
aad
adc
mov
mov
dec
gs
xchg
and
addl
and
shrl
add
and
mov
xchg
xor
hlt
jle
or
jmp
add
cmpsb
sub
movb
addb
mov
roll
jecxz
lret
mov
lret
gs
mov
enter
test
xchg
jp
sbb
xchg
nop
adc
adc
imul
add
sub
into
int
xchg
xchg
dec
jecxz
jae
push
insb
loopne
mov
dec
xchg
mov
jnp
ljmp
push
cmpl
sub
les
pop
pop
icebp
push
dec
adc
cli
shl
cmpsl
push
adc
or
pop
fdivrl
roll
and
mov
push
cld
mov
xor
pusha
je
out
inc
rclb
cs
xor
fsubs
mov
stos
xchg
cmp
jb
mov
cmp
subb
shl
xor
jle
les
lock
popl
or
or
aad
call
or
bound
inc
inc
jnp
div
mov
dec
data16
push
or
xchg
add
add
adc
lods
pusha
inc
pop
ret
insb
push
xchg
jle
notb
inc
mov
int
and
mov
test
push
scas
bound
push
outsb
je
mov
xchg
in
xor
repnz
cli
outsb
testb
mov
ret
mov
aam
fcom
jno
sub
jle
incl
mov
cmc
enter
sub
add
insl
aam
fimuls
sbbb
lret
cmpsb
cmpb
adc
imul
add
mov
inc
jae
outsb
cli
mov
lcall
adc
in
add
and
je
pop
mov
dec
or
repnz
jmp
lods
mov
das
sbb
mov
lods
sub
adc
cmp
in
jnp
shlb
inc
and
inc
mov
scas
test
mov
sahf
add
xor
mov
lods
cli
xorb
out
test
test
inc
and
and
cmovl
dec
es
dec
in
jns
xchg
push
inc
mov
fadd
into
insb
push
ret
jo
inc
mov
push
popl
sar
jle
daa
sbb
jecxz
into
dec
cmc
mov
push
sarl
in
enter
jle
cli
stos
dec
les
aam
mov
inc
push
lcall
into
push
cli
pop
jne
pop
mov
dec
nop
andb
sbb
les
mov
pop
ja
nop
sub
ja
xlat
add
test
push
mov
loop
push
inc
fldt
mov
xlat
push
insl
ret
in
mov
inc
xchg
xchg
push
jae
in
xchg
adc
or
lcallw
or
add
sbb
shlb
lahf
fwait
insb
mov
shlb
sbb
sbb
sbb
xchg
push
lret
test
or
in
jne
pop
inc
push
cmpsl
lock
sub
cld
cs
sub
hlt
xor
xchg
cmpl
cmpb
scas
pusha
out
fidivs
dec
inc
insb
dec
ss
les
imul
pop
add
lret
js
pop
clc
enter
aam
std
sub
jns
dec
iret
andb
sar
test
pushf
aam
aas
mov
cld
push
fcoml
out
sbb
nop
xchg
fsubl
rolb
stos
incb
xchg
fisttpl
shll
fs
push
stos
movsb
push
mov
xchg
xor
inc
add
ret
fmull
cmp
orb
aam
inc
scas
rcl
mov
push
in
hlt
cld
out
dec
or
rcrb
pop
mov
popa
mov
gs
test
push
xchg
add
gs
add
push
fs
sub
pop
add
into
rcll
push
outsl
add
loopne
shrb
mov
add
or
stos
lcall
lahf
lods
sbb
adc
insb
or
sbb
push
jle
or
or
mov
pop
adc
adc
xor
push
adc
fnop
sub
xchg
call
clc
in
sub
jo
ds
sahf
hlt
adc
and
add
leave
pop
cltd
fadds
mov
in
mov
sub
inc
ljmp
movsb
ficompl
mov
and
pop
push
lock
div
cmp
out
insb
in
gs
cmp
inc
out
push
mov
adc
hlt
or
dec
lods
popf
xor
jg
dec
in
xchg
adc
sub
andb
call
insb
js
mov
popf
shufps
jmp
popa
insb
fs
push
sub
sbb
xchg
mov
in
pop
add
popa
test
pop
hlt
ret
add
fdivp
add
mov
into
orb
mov
pop
rcll
mov
adc
inc
inc
xchg
into
mov
push
push
fisttpl
jo
ds
xchg
test
lret
roll
inc
jb
jle
shrl
sub
shlb
fwait
xchg
loop
or
mov
test
and
or
movb
inc
push
divl
add
adc
dec
test
in
fucomi
lret
jl
xchg
enter
pop
call
xchg
js
les
mov
adc
cmpsb
aaa
cmp
jmp
sbb
sbb
popf
cmpsb
out
mov
mov
xchg
insb
xchg
xorl
fisubl
cmp
loop
ret
int3
popa
scas
inc
in
out
stc
addr16
or
inc
mov
cmpsl
call
push
shll
test
add
insl
sbb
and
add
jo
dec
into
sub
cmpsb
je
ljmp
in
jecxz
sub
push
js
adc
add
xor
je
xor
aam
movsb
inc
mov
push
test
in
outsb
loop
push
lods
dec
fdivl
xor
ficompl
movsb
out
add
mov
cmpsb
shrl
dec
add
inc
mov
stos
sub
stc
ds
mov
out
sbb
mov
in
mov
mov
push
insl
loope
sub
pop
loope
lods
push
push
xchg
js
mov
inc
jnp
rolb
inc
bound
bound
xor
repnz
push
enter
sub
add
roll
add
lret
scas
add
or
push
pop
add
mov
fiaddl
test
add
jbe
cltd
xor
mov
jle
inc
sub
repnz
sahf
xchg
lock
decl
push
pop
push
aaa
into
and
jns
or
xor
inc
ficompl
aam
pop
pop
scas
aad
mov
lock
cmpb
sub
out
jl
push
adcb
add
and
add
mov
mov
icebp
sbb
ret
dec
inc
push
ss
inc
shlb
xchg
cld
je
rcrb
pop
ficompl
mov
xchg
lock
push
lds
hlt
test
leave
lods
xor
dec
shlb
test
dec
add
lods
push
mov
mov
mov
ss
imulb
add
mov
call
jle
and
aam
dec
jbe
pop
int
es
jmp
xchg
cltd
sub
inc
jp
outsb
xor
push
sub
cwtl
jecxz
or
add
mov
enter
add
and
repz
cs
and
jne
nop
push
out
loopne
jle
cld
cmp
loopne
mov
loopne
mov
push
les
clc
cwtl
inc
or
mov
mov
and
mov
lcall
push
dec
mov
adcb
mov
insb
loop
lcall
add
mov
lahf
pop
hlt
call
ret
fs
pop
lods
dec
clc
test
xorl
ljmp
hlt
mov
jb
andl
cmpsl
mov
inc
outsl
orb
icebp
ret
lods
popf
loope
push
stos
mov
push
inc
test
and
outsb
add
mov
dec
in
xor
and
xor
mov
mov
subb
ficoml
lods
xchg
inc
adc
add
cmpsb
loop
aas
out
in
imul
xchg
in
daa
mov
inc
scas
or
repz
inc
sub
jp
test
pop
cwtl
jo
push
and
xchg
xchg
push
and
fidivrs
call
cmc
stos
cs
mov
cmp
lds
shlb
sbb
int3
test
ret
outsl
mov
les
incb
adc
push
push
or
gs
dec
pop
pop
push
insl
push
mov
mov
or
and
push
push
push
xor
sbb
.byte
test
add
inc
outsl
outsl
insb
gs
outsb
add
or
in
incl
gs
jb
gs
push
jns
je
insl
add
xor
or
jae
mov
push
push
das
add
notb
pop
dec
outsb
test
jb
xor
in
das
fwait
cmp
addb
inc
jns
mov
add
outsl
jb
mov
pop
push
outsl
imul
add
inc
popa
jb
pop
add
jb
jmp
add
dec
popa
je
jbe
cli
repz
enter
add
push
cmp
mov
cld
add
add
je
je
scas
sub
sub
or
fistpll
lea
inc
adc
jae
jg
mov
or
dec
jne
ja
adc
mov
inc
insb
popa
jae
push
or
push
inc
push
push
dec
insb
sarl
push
add
inc
adc
inc
or
xor
and
mov
sbb
push
xor
enter
add
dec
outsb
mov
lcall
pop
inc
jno
imul
add
gs
out
std
addr16
pop
add
sbb
lods
push
jg
pusha
or
rolb
mov
add
jb
nop
jg
mulb
gs
adc
add
andps
jb
cwtl
sbb
add
arpl
popa
bound
pop
rcrl
dec
data16
clc
or
dec
insl
jo
inc
mov
add
add
adc
les
data16
clc
out
inc
aam
or
outsl
jne
das
jge
xchg
outsb
add
pop
imul
pop
pushf
fadds
add
push
iret
mov
lods
pop
or
js
nop
sahf
int
cmp
cwtl
mov
fdivr
lret
neg
rcll
and
inc
add
decl
lock
xchg
fldt
add
subl
mov
clts
pop
inc
imul
xchg
xchg
xchg
roll
push
dec
in
in
int3
inc
or
inc
cmp
xacquire
cmc
or
push
imul
cmc
idivb
imul
clc
or
test
cli
stos
sti
jecxz
push
stc
cmpsl
cld
or
dec
add
dec
push
jns
aad
scas
dec
xor
push
arpl
xor
inc
jb
cmp
or
mov
dec
push
gs
sub
inc
add
enter
inc
ds
or
inc
jnp
cltd
out
mov
outsb
arpl
or
push
sbb
xchg
add
cmovae
std
dec
mov
sub
movsb
or
push
jns
jb
mov
xor
out
sub
jns
popa
insl
inc
and
shll
cmp
push
or
outsb
fs
add
xor
je
sub
push
popa
pop
adc
and
outsl
inc
fs
lods
push
lock
jo
xor
and
jp
lret
sub
adc
pop
outsl
insl
jae
pusha
cmp
jle
inc
add
stc
ljmp
or
outsl
fs
fs
xchg
cmp
xor
stc
jne
arpl
push
inc
jbe
call
lds
gs
mov
outsb
jno
leave
les
push
loopne
xchg
stc
ja
inc
fstpt
xor
xor
inc
imul
fwait
out
adcb
jae
in
add
add
or
insl
int3
aam
push
pop
cltd
out
add
je
ds
movsl
ds
xchg
sub
jp
andl
jecxz
mov
or
outsb
or
or
jnp
notb
outsl
jo
int
push
fisttps
jo
lahf
add
add
insb
jo
adc
xchg
or
dec
mov
push
mov
push
or
and
adc
gs
push
popa
gs
icebp
jge
add
push
jo
imul
push
jo
aaa
or
cmp
mov
lret
orl
or
pop
bound
inc
data16
sar
insb
les
arpl
pop
popa
xchg
adc
outsw
jb
inc
or
or
jo
je
push
sbb
sarl
sbb
push
inc
popa
jne
scas
outsb
fs
jl
movsb
pusha
jge
fmull
dec
gs
add
sbb
push
loopne
sub
out
test
or
sbb
rep
jns
push
loope
and
lds
and
ficoms
dec
int3
adc
push
imul
in
or
add
cld
lret
or
std
mov
or
adc
push
inc
data16
rcrb
adc
sahf
imul
push
repnz
pop
mov
cmp
adc
pop
xor
or
push
or
add
orl
push
or
mov
test
scas
daa
sub
jae
mov
outsl
fs
int3
rolb
das
lea
daa
sub
cmp
add
js
jmp
jns
or
out
or
das
or
popa
je
pop
cltd
nop
popa
adc
push
cmp
or
adc
das
push
fcompl
xchg
mov
push
cld
jbe
fs
or
out
adc
push
sub
arpl
xor
mov
xchg
loopne
ja
push
fucomip
add
add
jb
call
xchg
in
in
lods
lods
xor
or
mov
std
or
sbb
rorb
fs
icebp
inc
insb
and
push
mov
stc
sub
imul
aaa
dec
jne
bound
pop
add
cli
hlt
stos
cmp
into
aaa
add
adc
jb
push
adcb
cmp
sbb
jbe
jmp
shrb
in
fs
pop
pop
in
in
push
push
dec
dec
in
in
in
inc
cmp
in
in
fdivs
sub
in
in
and
sbb
in
in
adc
or
in
in
or
pop
add
bswap
rclb
hlt
mov
mov
lock
push
cmpl
lock
and
push
push
setl
inc
out
mov
jmp
add
mov
and
ret
inc
inc
pop
ret
lea
ja
outsb
mov
call
in
add
cmp
mov
and
mov
fcomps
arpl
jb
push
fs
jbe
and
xor
xor
sub
push
call
lret
mov
arpl
inc
inc
mov
inc
jo
in
and
mov
jns
popa
imul
stos
and
arpl
fs
pop
jae
dec
and
in
xor
arpl
daa
ja
or
jle
popa
xor
leave
cmp
outsl
jnp
and
test
and
add
pop
mov
outsb
add
sbb
arpl
sbb
add
mov
sbb
lock
mov
mov
mov
lods
jge
fadds
dec
add
inc
or
and
dec
shll
adc
shll
adc
scas
xor
sbb
fildll
fildll
add
int
mov
sbb
cs
jp
add
sub
cmpsb
imul
sub
dec
dec
in
pusha
dec
nop
inc
dec
sub
cs
xor
push
lahf
push
mov
dec
rcrl
cmp
dec
shll
inc
call
into
sub
add
add
neg
jns
std
insl
mov
jl,pn
push
cmp
add
js
and
mov
int3
insb
sub
out
push
mov
dec
or
mov
add
nop
call
cmp
mov
fistps
mov
add
cli
in
lret
add
mov
std
call
rol
and
pop
mov
and
inc
filds
sub
or
mov
sbb
and
add
xchg
mov
dec
mov
mov
add
jge
rol
lods
shl
or
sbb
jle
mov
cmp
outsl
mov
lcall
inc
cld
add
orl
adc
dec
add
sbb
push
add
cmp
dec
pop
mov
jle
and
sub
dec
mov
ja
lock
mov
pusha
push
mov
inc
mov
push
push
adc
push
and
addb
lcall
push
inc
mov
in
add
lods
mov
loop
mov
sarb
sti
idivl
dec
mov
mov
pop
lret
push
rolb
xor
and
data16
nop
cmpb
jmp
clc
stc
fdivrs
out
nop
mov
add
aaa
pop
or
rolb
cli
xchg
clc
pop
jle
push
push
mov
lea
movb
pop
rorb
fiadds
push
xchg
pop
lock
movb
outsl
or
pushf
fucomi
div
adc
mov
in
sbb
sbb
lds
jne
add
ret
pop
pop
pop
pop
fsubrp
clc
std
mov
mov
sub
jae
jle
adc
mov
push
and
or
test
jne
in
mul
cmpsl
inc
push
jns
add
jmp
or
cmp
cmp
in
and
push
push
lea
inc
and
jg
in
jne
push
push
mov
cmp
jbe
sub
add
jmp
push
rorb
test
jne
lods
fimull
mov
dec
mov
add
nop
fsubr
std
add
loopne
repnz
sub
pusha
cmp
and
mov
cwtl
fidivrs
loope
mov
mov
mov
bound
add
cmp
jbe
ljmp
jo
sbb
adc
xchg
xor
push
mov
repnz
or
cmp
jne
andl
mov
stos
inc
push
cmp
jae
mov
push
in
fistps
loop
fidivrl
ret
jae
fdiv
sbb
mov
sbb
aaa
sub
dec
mov
xor
add
push
pusha
dec
mov
or
lds
insb
push
std
sub
add
jbe
int3
outsb
imul
mov
iret
xchg
outsl
clc
push
inc
jae
or
lock
jmp
repz
addb
das
dec
and
std
mov
cmp
into
xorl
ret
lea
push
add
pusha
bound
dec
les
stos
pop
aad
leave
je
sbb
into
sbb
shlb
pop
lock
nop
inc
adc
mov
and
fs
sub
ret
sub
and
ljmp
xor
dec
sbb
mov
add
sarl
adc
jbe
mov
imul
ja
dec
aas
dec
hlt
pop
or
or
fldl
jbe
mov
or
mov
xchg
xorl
xchg
popa
jns
aas
je
shrl
jae
lods
cmp
cmp
in
stos
popa
inc
and
xchg
roll
movsbl
ret
lock
inc
xor
mov
add
or
mov
leave
cld
mov
cmp
loopne
cmp
add
push
push
push
sub
sbb
cmp
xlat
jne
mov
test
setnp
js
mov
mov
add
int
add
dec
jnp
sub
lea
pusha
xchg
mov
andb
iret
jb
mov
pop
es
lea
iret
enter
iret
sub
sub
cmp
and
rcrl
ds
push
mov
rclb
div
mov
mov
fs
cld
testl
outsl
cmp
adc
inc
adc
jae
lea
imul
sub
mov
addr16
inc
leave
lock
mov
fidivrs
jl
or
faddl
mov
clc
sbb
xchg
shl
loopne
or
lock
loopne
push
je
push
sarl
or
jmp
mov
cmpb
add
dec
or
mov
shl
xor
sbb
push
fadds
adc
fdivs
cmc
lock
loopne
mov
jmp
mov
dec
adc
pop
or
adc
dec
jae
inc
cmp
cmp
adc
push
sub
pop
xorb
sbb
jb
xchg
or
testl
fisttps
jns
mov
nop
and
mov
test
shl
pop
stos
add
mov
jne
subl
testb
je
pop
rorb
mov
inc
fadds
data16
mov
sarb
push
xor
test
adc
aad
push
aad
xchg
sub
sub
or
cwtl
and
push
cld
iret
jmp
push
xor
xchg
scas
ljmp
jp
pop
leave
outsl
xor
sub
aaa
inc
adc
add
and
add
pop
cld
and
fmull
scas
testl
sub
xor
testb
jne
aaa
or
in
je
lea
inc
pop
xor
roll
xlat
mov
lock
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
sub
ret
in
mov
lahf
mov
popa
flds
add
pop
fmull
inc
cld
cs
xchg
lret
insb
push
add
loop
shr
dec
roll
shrl
in
or
fistps
enter
sub
jb
jns
push
push
sbb
jb
mov
cld
mov
mov
mov
jg
or
mov
lea
mov
adc
and
sub
enter
hlt
sub
jbe
clc
iret
mov
call
xchg
dec
test
clc
xor
cmp
jp
lret
mov
add
jecxz
cmp
push
pop
loope
stos
xchg
cvttps2pi
cmp
jb
sbb
ljmp
aad
fadd
add
mov
lea
in
lds
add
sub
cmp
loop
das
push
jge
in
mov
les
push
cmp
pusha
pushl
jmp
or
push
mov
jne
cmpl
mov
data16
pop
data16
mov
roll
jnp
loop
xlat
sub
clc
addl
sahf
sub
or
subl
cmp
stc
call
imul
add
jo
les
add
ljmp
adc
pop
xor
out
xor
push
dec
push
sarl
xlat
xlat
je
iret
ja
cmp
rorl
pop
mov
call
sub
cld
xor
sub
adc
fiaddl
out
add
xor
andl
push
add
popa
addl
push
jle
push
lea
mov
jl
mov
push
pop
jo
push
cmpb
fisttpll
sbb
insl
pop
rcl
dec
iret
push
lock
pcmpgtw
roll
imul
pop
push
jecxz
dec
shll
aad
jp
push
jecxz
lea
or
lcall
cltd
jae
neg
fldz
fstl
add
js
or
rcr
das
ss
outsb
mov
mov
hlt
mov
in
roll
mov
mov
adc
test
jne
xor
fistps
jg
dec
xlat
je
rcrl
shlb
pop
jge
popa
dec
mov
and
rclb
mov
cmp
je
mov
jg
in
dec
test
into
ret
and
sbb
mov
jae
fisttps
pop
adc
sbb
jmp
sbb
or
inc
add
fmuls
mov
pop
std
divb
in
mov
test
testb
xor
inc
fwait
ljmp
rolb
sub
inc
mov
add
mov
fs
mov
test
jne
mov
xor
lock
jnp
insb
push
xchg
in
gs
jl
icebp
mov
mov
test
iret
lret
mov
repnz
rcrb
sarb
adc
and
xchg
rorb
jg
ret
dec
cwtl
push
rcrl
xor
adc
dec
test
out
jbe
dec
jne
mov
std
outsl
or
shll
mov
add
jo
addr16
std
outsl
jae
xor
leave
mov
push
adc
jecxz,pt
in
mov
js
add
push
adc
adc
testb
je
adc
add
jmp
mov
pop
lock
mov
sub
cli
jecxz
push
shlb
add
gs
mov
test
jo
push
push
and
sarb
sbb
mov
daa
test
daa
dec
movb
lea
jmp
push
and
cltd
push
pop
push
pushf
in
cmpsb
js
hlt
sbb
mov
push
sbb
imul
pop
mov
dec
jg
enter
cld
stc
push
mov
cli
and
je
std
add
add
rcrl
setne
cmp
and
cmpl
icebp
ficoms
jns
and
inc
jb
xor
cmpsb
or
outsb
pop
mov
mov
push
fwait
mov
jl
sub
pop
fldt
cmp
jne
add
push
mov
and
xor
or
jne
mov
sbb
fdivrs
sbb
add
add
sub
js
shl
and
mov
decl
clc
scas
into
loopne
in
and
loopne
add
jne
xchg
pushw
and
inc
push
inc
or
cmp
in
jg
xchg
xchg
repnz
and
clc
test
pop
clc
notb
xchg
add
jnp
sar
push
lods
inc
hlt
adc
inc
add
jmp
jle
jge
ret
add
jae
inc
mov
pop
mov
imul
cmp
mov
gs
jae
dec
aas
rorb
or
fwait
test
adc
cmpb
stos
pop
imul
cmpb
jae
add
dec
sub
out
fdivs
cmp
test
sbb
notb
jb
jb
call
push
or
adcw
in
cltd
filds
xchg
das
mov
in
pop
add
cmp
je
orl
inc
addl
jg
mov
mov
adc
inc
fiadds
test
das
fmull
xchg
scas
lock
jbe
mov
mov
push
dec
jne
data16
mull
push
pop
jae
mov
xchg
and
das
and
faddl
inc
add
sub
movb
rorl
mov
pop
cmp
add
call
jne
cmpb
push
add
or
and
cmp
aaa
and
add
mov
cmpsb
inc
jbe
inc
sub
mulb
xor
mov
xchg
outsb
ret
jecxz
jne
mov
mov
clc
jb
ss
push
xor
mov
out
xchg
enter
scas
mov
clc
test
pop
xchg
sti
push
je
dec
dec
pop
mov
jl
cmpb
notl
call
pusha
sti
lea
sarb
test
ret
cmp
lock
aaa
add
loopne
bound
dec
out
in
loope
jb
mov
shlb
mov
add
sub
inc
lock
lret
fmuls
xchg
int
pop
stos
cmpl
xchg
add
jb
and
inc
inc
ljmp
imul
push
movb
inc
push
or
jo
and
mov
cmp
ds
and
dec
mov
adc
imul
jb
add
add
je
dec
je
jmp
in
nop
add
mov
jmp
aaa
push
push
sbbl
sub
inc
push
stc
loopne
inc
cld
and
js
clc
mov
mov
cmp
mov
call
sbbb
xchg
jge
orb
jne
sbb
or
xchg
sbb
add
sub
xchg
jbe
pop
sbb
jo
sbbl
jg
je
xchg
push
movsb
inc
pop
packssdw
aaa
je
mov
inc
inc
xor
mov
mov
je
xchg
push
xlat
add
nop
out
filds
aaa
add
jne
lret
pop
pop
shr
les
adc
sbb
push
mov
pmuludq
les
push
mov
idivb
add
sbb
add
cmp
jbe
mov
repnz
adc
cmc
lcall
aaa
jne
mov
mov
xor
rolb
adc
lock
std
shr
sub
movl
pop
loop
add
mov
ljmp
arpl
add
cmp
call
in
lcall
mov
and
out
mov
shl
mov
shl
add
insl
imul
push
xor
loope
or
mov
rcrl
test
mov
mov
or
sar
or
lret
imul
loop
push
lcall
mov
call
dec
shlb
pop
sub
lret
xchg
adc
mov
mov
mov
ret
out
jne
adc
inc
dec
pop
adc
xchg
js
mov
jae
fbstp
mov
jmp
mov
xchg
push
daa
je
sub
ljmp
fldl
or
movl
rorb
dec
and
stos
mov
mov
or
or
dec
push
add
add
cmp
jle
idivl
repz
adc
mov
mov
pop
in
push
loopne
sbb
mov
cld
les
cmp
push
clc
clc
sub
daa
dec
je
lahf
std
push
test
pop
sbb
sub
pop
hlt
clc
bound
pushl
repz
mov
fbld
add
rclb
aaa
inc
mov
add
or
fadds
std
shlb
mov
inc
dec
pop
or
mov
jb
jmp
bound
cmpsl
lret
lcall
cld
jbe
nop/reserved
xorl
je
sbb
mov
and
sbb
push
js
scas
ret
lock
ret
cmpsb
adc
rcrl
gs
mov
jl
aad
and
es
jns
sti
fcmovne
or
mov
jge
test
jne
outsl
cwtl
cmp
lahf
push
jmp
cmp
ja
movzbl
add
fs
adc
inc
sub
jg
push
mov
adc
add
or
mov
jl
push
push
push
movsl
add
pop
pop
jne
lahf
mov
outsb
outsl
pop
jae
imul
decl
fadd
mov
shlb
stc
and
mov
push
xchg
jmp
and
xor
sbb
adc
add
addr16
cmp
add
movsl
push
cs
out
sahf
sub
inc
inc
push
pop
mov
push
je
dec
or
adc
flds
jbe
or
jl
pushf
shll
jle
or
shrl
lret
adc
jbe
adc
mov
rcll
roll
pop
inc
cmc
pop
push
fildl
pushl
or
clc
fst
or
data16
adc
cltd
mov
jne
add
add
pop
cmp
insb
xor
sbb
add
ret
mov
xlat
orb
sbb
pop
dec
cwtl
dec
add
xorl
xlat
dec
dec
data16
add
shr
pop
sub
fcompl
out
jmp
mov
or
lods
int
or
and
es
mov
or
push
sbb
je,pn
mov
jb
fdivs
insb
xlat
or
mov
adc
jne
dec
cltd
mov
test
adc
out
add
lahf
data16
xchg
mov
rol
movl
jl
movsb
cld
dec
add
add
cld
or
fstl
fstl
rcl
cmp
pop
pusha
repnz
pop
subb
sub
bound
jle
push
push
jle
mov
sub
imul
lods
roll
das
mov
sbb
sahf
out
sahf
sbb
push
adc
adc
popf
out
push
or
incl
fbstp
shll
mov
adc
adcb
xorl
mov
int3
add
push
add
cmp
je
mov
push
sub
jle
or
je
and
je
je
pop
je
loope
fstpt
jne
arpl
push
push
ljmpw
loope
daa
lock
sub
ja
cmp
ja
fcomp
movsb
daa
js
rolb
gs
lcall
dec
je
or
jmp
and
push
neg
jle
js
pop
sub
jmp
push
loopne
inc
dec
jmp
mov
out
idivb
popa
jb
mov
mov
sbb
add
mov
lret
cmpb
not
out
mov
inc
and
loope
sbb
enter
imul
je
or
pop
mov
out
loop
mov
lods
push
hlt
js
leave
jp
jns
jae
das
fsubrs
std
insb
mov
and
inc
jmp
aam
jge
xor
xor
sti
loop
movsb
sbb
jmp
fstp
fldt
adc
xchg
pusha
fldz
fs
in
dec
js
jg
cs
and
push
mov
fninit
fldcw
add
and
cmp
or
mov
jbe
insb
dec
iret
dec
xchg
cmp
jge
mov
pushl
mov
lea
pop
xor
imul
fnstenv
js
xor
cld
push
push
inc
clc
daa
mov
mov
xchg
pop
pop
pop
andl
xchg
dec
cmp
add
inc
cld
ret
cs
push
jmp
inc
pop
lcall
mov
add
push
push
sbb
jmp
jmp
jmp
push
jae
adc
ret
and
mov
hlt
rorb
in
cmp
out
inc
lock
xchg
ret
and
lea
pushf
rol
dec
les
xchg
or
lods
bound
clc
cmpsl
popf
xor
or
sub
sbb
or
sub
es
jo
push
cmc
test
je
les
int3
push
imul
popl
or
out
test
mov
je
jle
sbb
pop
mov
adcb
xor
or
mov
sbb
scas
dec
repz
push
cmp
rep
mov
mov
sub
hlt
push
mov
add
je
pop
mov
pop
pusha
imul
adc
push
mov
mov
push
jg
test
sbb
jne
jne
dec
lods
mov
mov
mov
jbe
sub
dec
fmull
jbe
jmp
xchg
cmp
xchg
jae
paddd
movswl
add
ret
loop
fsub
and
jne
dec
ja
ret
aaa
xchg
mov
pop
xlat
clc
sub
jbe
xor
mov
testl
mov
xor
decb
mov
inc
adc
add
mov
inc
push
sub
inc
loopne
mov
insl
mov
sub
dec
mov
push
xor
out
jmp
test
mov
outsb
test
cmpsl
jecxz
jmp
scas
arpl
mov
cmp
mov
or
inc
lods
lock
mov
xor
cmpsb
jge
or
add
adc
or
jne
or
ss
lcall
lds
daa
xor
lods
dec
push
add
push
dec
jo
pop
push
lret
add
mov
add
lea
or
insl
cli
cmpb
je
out
jmp
push
into
hlt
add
cmp
mov
mov
xchg
dec
js
inc
push
mov
mov
les
pop
cmp
pop
push
mull
sbb
pop
inc
mov
stos
ret
push
pop
sti
divl
or
dec
sub
shl
pop
movsl
add
push
add
out
aam
push
xchg
jmp
pop
jp
adc
incl
je
movzwl
push
add
repnz
in
mov
push
adc
lcall
cmp
inc
inc
cld
adc
into
or
jne
mov
mov
add
out
out
shll
cmp
xlat
pop
push
data16
or
hlt
push
jg
cmp
jae
movsb
cmp
mov
pop
sarl
addb
pushf
pop
loopne
lock
mov
cld
dec
push
xchg
push
js
push
inc
push
push
mov
cmp
push
inc
add
xor
fcoms
push
cwtl
jg
ret
push
or
jbe
push
xor
xor
lcall
mov
sbb
dec
adc
dec
push
cmp
cmp
clc
out
sbb
add
dec
jne
sbb
jmp
pop
jmp
push
lea
jg
xor
pop
pop
je
jmp
mov
mov
test
dec
inc
mov
sbb
psubusw
jo
ret
arpl
or
and
mov
ja
aam
insb
movsb
adc
push
in
inc
aaa
cmp
nop
push
push
mov
xor
js
dec
sbb
adc
test
push
cmp
je
enter
repz
fsubs
fdivrs
jnp
mov
pop
add
cmpsb
test
repnz
add
push
in
mov
aaa
adc
je
pop
add
repnz
cmp
jmp
repz
add
out
sbb
jecxz
test
imul
iret
fcomip
dec
repnz
push
push
push
test
jl
cld
hlt
xor
lea
icebp
jmp
mov
mov
mov
movl
push
xchg
cmp
cmp
icebp
push
lock
and
inc
or
push
lcall
or
inc
add
idivl
xchg
push
lods
testb
or
shlb
cmp
pushl
xchg
and
jo
or
inc
or
mov
jne
or
jg
inc
xor
sbb
or
stos
xorb
sbb
jmp
je
and
xchg
call
inc
mov
dec
mov
add
add
push
dec
jl
ret
add
jg
pop
adc
add
lods
cmpl
into
in
push
cmp
and
subb
push
cmp
xchg
cmpsl
mov
cs
popa
lock
add
pop
push
push
iret
add
xchg
aaa
nop
sbb
jmp
fisttps
jmp
or
mov
add
data16
mov
sbb
mov
inc
pop
mov
adc
xchg
aas
loop
pop
cmp
aaa
insl
adcb
jecxz
pop
clc
test
cwtl
testl
and
nop
clc
inc
mov
adc
outsb
adc
adc
pop
into
je
mov
scas
ret
mov
cmpl
je
push
fistpll
fcomip
sbb
ja
lea
pop
fs
insl
add
stos
shl
inc
je
xor
lods
loopne
sbb
push
or
push
jns
jo
and
je
orl
add
mov
cmp
loopne
popl
cmp
lods
jp
and
pushl
out
cmp
lahf
outsl
dec
pop
add
inc
add
loopne
add
test
cmp
pop
mov
adc
xor
inc
cmp
xchg
or
push
jo
popa
and
push
xor
pop
adcl
or
cmp
add
adc
mov
or
sub
dec
clc
add
push
je
mov
sub
sarb
push
popa
cs
push
or
dec
add
push
push
push
mov
push
sbb
adc
cmpsb
imul
pop
xor
xor
pusha
adc
mov
pop
jmp
jns
rcll
shlb
and
roll
xchg
cli
adc
mov
add
pusha
mov
and
aam
and
fsubrs
cmp
fsubs
jb
adc
lahf
or
and
sahf
pop
add
test
pop
std
mov
loop
mov
add
je
cmp
ja
adc
push
sub
je
out
decl
pusha
add
sub
jb
je
jmp
cmp
cmp
mov
cs
adc
jmp
sub
cmp
mov
enter
leave
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
or
jmp
mov
jmp
mov
ljmp
decl
mov
push
or
pop
ret
mov
xor
mov
xor
das
je
push
inc
mov
mov
ljmp
mov
adc
inc
sbb
fwait
push
xor
push
fsubrs
mov
inc
cmp
mov
jecxz
add
mov
pop
call
aas
xor
push
fs
lock
stos
add
les
scas
fwait
ds
mov
pop
rcrb
int3
cs
and
sbb
cmp
cmpb
adc
cmp
test
cmp
add
xorl
and
sbb
mov
xchg
aas
mov
test
jle
dec
mov
je
add
pop
data16
pop
cs
jg
or
jmp
xchg
mov
push
fimull
data16
shll
or
cli
push
mov
fs
inc
ds
roll
cmp
jle
dec
xor
inc
mov
cmp
jg
daa
pop
add
bound
lock
pop
adc
pusha
mov
cmpsb
adc
or
mov
cmp
sbb
or
pop
cmp
pop
mov
xchg
inc
mov
insl
cmpb
addl
aaa
filds
jns
cmpsl
inc
pop
pushf
dec
add
add
and
mov
iret
ja
mov
sub
hlt
mov
cmp
lea
mov
push
add
mov
mov
add
je
add
int3
pop
inc
insb
jmp
clc
lea
or
mov
dec
jne
pop
pop
sti
outsl
push
mov
inc
or
movsl
or
in
sahf
mov
ret
sub
rolb
adc
cltd
idiv
imulb
add
and
int
test
mov
dec
cld
fdivl
mov
neg
loopne
inc
cmpb
rorl
ja
mov
adc
mov
mov
add
sbb
and
in
mov
rep
xor
xchg
pop
or
ret
push
sbb
lods
cmp
subw
adc
stos
mov
jo
test
or
xchg
push
push
mov
lods
fwait
cmpsl
or
add
test
mov
push
inc
pop
ret
adc
nop
jne
push
add
push
jg
mov
cmp
pop
add
add
pop
push
xor
jl
lock
and
dec
adc
into
call
inc
sbb
es
scas
jne
cmp
and
pusha
xor
sub
inc
lock
out
shrb
mov
mov
mov
call
pop
fsincos
jge
jne
xor
jne
lock
lcall
adc
shll
popl
jne
subl
mov
hlt
xchg
or
outsb
in
in
jl
movsl
js
add
cld
and
or
insl
scas
cmp
or
jle
nop
fstl
ja
jne
call
adc
jno
mov
push
sarl
in
adc
cld
mov
mov
add
jno
inc
out
xchg
popl
into
inc
add
mov
inc
loopne
inc
std
filds
shlb
rorb
sub
adc
inc
clc
and
data16
pusha
adc
inc
testb
sti
add
clc
lock
ret
test
cwtl
fiadds
addr16
push
ja
push
push
push
xorl
xchg
test
push
push
sub
in
mov
xchg
cs
testb
mov
jb
dec
clc
dec
or
idivb
decl
hlt
cmc
test
adc
inc
push
in
arpl
cmp
scas
jbe
in
rclb
sbbb
add
or
cmp
fidivrl
add
push
stc
xchg
shlb
mov
push
xchg
lock
clc
inc
jle
cmp
imul
dec
xor
mov
jp
cltd
dec
push
xor
sub
add
fadd
jae
push
pusha
enter
mov
xor
fistps
in
scas
aaa
jb
insl
outsb
outsb
lock
adc
pop
xor
shlb
inc
cld
and
sub
push
loope
inc
cmp
fdivrs
xchg
scas
mov
push
push
jns
mov
and
jle
loopne
xor
movzwl
sbb
jmp
loope
test
push
outsb
inc
add
aam
test
data16
inc
clc
sub
jbe
jmp
lea
cmp
mov
aad
cld
out
mov
dec
cld
mov
jle
lea
add
lret
sub
jmp
lea
sbb
popf
ljmp
insb
and
ret
jge
inc
mov
xor
orb
mov
cmp
inc
rolb
jge
add
jmp
cmp
jo
testb
sar
push
adc
push
aam
aad
lret
lock
sub
pusha
pop
mov
pop
dec
dec
mov
mov
mov
bound
jno
dec
test
mov
ds
out
fiaddl
sbb
mov
cld
outsl
ret
dec
cld
gs
pop
jmp
push
mov
xchg
adc
stos
test
mov
fisubl
je
mov
mov
inc
mov
adc
or
not
push
push
ret
sub
or
or
aas
dec
cmp
add
xchg
add
lds
jb
or
add
cmp
lahf
fwait
dec
add
or
fmull
fidivrl
sub
mov
lahf
je
push
cmpsb
loope
jo
xor
pop
push
xchg
lret
loope
inc
nop
pop
pop
loop
rorl
ja
add
or
or
je
jmp
cmp
jg
sub
inc
add
adc
sarl
mov
cmova
movsb
jmp
mov
adc
add
pop
push
push
nop
mov
loop
mov
ret
pushl
mov
bswap
call
cmp
je
or
stos
shll
or
push
push
call
in
add
rcr
sub
and
xchg
add
lds
into
mov
push
cld
add
jo
push
jne
dec
ret
je
out
dec
rorb
lods
push
lods
xor
cs
jnp
sbb
sbb
int
xor
pop
cltd
fsubrs
jmp
lods
add
loopne
push
rorb
mov
psubb
cmp
xor
mov
pop
js
push
out
cmpl
jne
scas
or
ret
pop
mov
jo
mov
outsl
sub
push
test
insb
and
cld
movb
lcall
jne
loope
mov
cli
mov
icebp
jl
icebp
or
mov
mov
add
adc
shl
cld
fldenv
lock
push
xchg
add
xchg
sbb
jmp
add
imul
jge
loopne
cs
mov
add
sbb
in
sub
add
cmc
cli
pop
imulb
jle
push
sub
push
cmp
pop
cmp
je
or
mov
add
loope
inc
add
nopl
blcs
aam
push
push
add
pusha
adc
rcrl
rcrl
scas
adc
dec
ss
hlt
pop
dec
mov
fcmovnu
andl
mov
inc
aaa
xchg
lret
mov
aaa
pop
icebp
cmpb
shlb
adc
jo
push
test
push
movsl
pop
mov
cmp
xchg
ret
sub
imul
add
jmp
cli
div
ret
rorl
bound
add
sti
shl
ss
mov
sti
movd
mov
or
mov
mov
dec
subb
rorl
add
roll
dec
jns
dec
push
or
mov
jmp
mov
loop
std
shrb
inc
cli
add
dec
clc
movsl
cmp
cmp
lret
mov
adc
in
add
push
adc
fnstsw
fmul
mov
test
cmp
enter
dec
jmp
test
mov
add
jae
iret
lret
jne
enter
aam
in
ja
iret
jl
pop
cmp
shl
add
dec
jmp
arpl
roll
inc
mov
repnz
add
loopne
fwait
dec
aam
xor
or
scas
aas
call
pop
jo
pop
lea
push
loop
xchg
jmp
popa
aas
idiv
rcll
movb
jmp
dec
cmp
sti
in
or
imul
mov
sub
cmp
and
dec
or
rolb
mov
das
mov
bound
cmova
rorb
sbb
adc
scas
jne
adc
stos
lock
inc
shl
cmpsb
add
sbb
sbb
jmp
pop
xor
jecxz
addl
mov
push
daa
add
fldenv
jo
push
test
jns
pop
cmpsl
push
pop
adc
ljmp
xchg
shr
fwait
or
mov
mov
dec
jb
sub
jo
adc
lods
sbb
in
push
in
cld
mov
cmpsl
dec
cmp
ret
imul
xor
xchg
cmp
call
es
je
cmp
je
cmp
je
cmp
je
cmp
aam
ret
mov
ret
je
mov
jbe
add
mov
inc
adc
cmpsb
xor
add
or
adc
jmp
push
mov
mov
jo
cs
add
dec
cs
adc
mov
cmp
cmp
pop
jmp
cmp
mov
sub
add
push
push
scas
push
sub
and
lahf
outsl
mov
test
ret
mov
call
pop
cmp
add
pop
mov
arpl
inc
shll
xchg
ret
mov
adc
mov
fdivrl
shlb
sub
in
repnz
inc
sub
in
imul
daa
cs
xor
jmp
es
jo
adc
repz
jb
xchg
adc
inc
fdivl
inc
mov
sub
loope
fwait
cltd
sbb
and
icebp
jmp
pop
cmp
xlat
push
sub
sbb
andl
daa
cs
jl
or
popa
xlat
push
cld
mov
or
push
mov
sub
jle
add
add
popa
cld
roll
mov
cmp
sbb
pop
adc
je
imul
outsb
mov
cmp
movsl
xchg
adc
mov
ror
addr16
cmp
inc
andl
jg
sbb
jmp
dec
sbb
insb
lea
push
xchg
lahf
push
dec
mov
pop
or
push
nop
dec
xchg
or
popa
inc
push
mov
add
inc
push
imul
pusha
xor
mov
dec
adc
cmp
ds
add
push
stos
push
add
push
or
sbbb
push
mov
and
insb
and
pop
and
sub
jl
push
sbb
xchg
stos
mov
mov
push
and
fists
jne
sub
lods
icebp
nop
pop
enter
jmp
push
lcall
adc
loope
cmp
dec
mov
or
pushl
cmp
pop
add
inc
call
lock
add
cmp
add
in
pushw
cmp
jmp
iret
imul
or
sbb
lea
inc
ret
mov
push
xchg
push
mov
aam
jg
pop
sbb
mov
jne
movntq
jmp
push
sub
insl
add
adc
and
mov
cmp
mov
jg
xor
lret
pop
ret
push
fldl
sbb
es
bnd
or
mov
adc
or
je
int
ljmp
adc
sbb
rcl
rcl
rcl
cmp
jb
in
cmp
jb
sub
sbb
inc
loop
pop
pusha
xlat
psrad
repz
jmp
add
stc
loopne
cld
ret
pop
push
insb
dec
mov
xchg
dec
pop
mov
pop
pop
adcb
cmp
sbb
jbe
in
jge
mov
mov
jmp
jbe
xchg
adc
sub
xchg
fistl
add
movzbl
add
mov
jo
lods
push
push
call
sti
pop
test
mov
insl
call
stos
pop
in
idiv
cmp
je
andl
adc
push
sahf
in
int
cmp
jne
mov
arpl
cld
loopne
jge
jge
mov
outsb
lret
scas
scas
add
mov
sub
adc
mov
stos
pop
jmp
decl
and
loop
cmp
aaa
mov
add
in
or
fwait
xor
jns
cmp
or
into
stos
push
mov
push
push
dec
shl
jne
ret
lret
movl
and
jle
adc
lock
ret
jo
inc
fidivl
mov
mov
mov
movl
popf
sbb
test
js
hlt
fstpl
dec
jne
rorb
cmpl
cmp
mov
push
lock
jne
outsb
out
xchg
push
adc
adc
orb
push
fistpl
call
sahf
or
sbb
inc
sarl
sub
incl
pop
lea
mov
data16
hlt
std
movsl
adc
lock
ljmp
stos
je
push
mov
imulb
cltd
test
add
sub
imul
and
and
jae
or
je
or
shlb
clc
stos
pop
and
outsb
sbb
fstp
fldl
jp
sub
push
je
jle
incl
xlat
gs
inc
push
pop
je
popa
outsb
insb
pop
outsb
bound
imul
or
add
inc
jns
insb
push
sub
mov
inc
pop
push
jne
insl
or
dec
sub
ss
mov
jne
ret
inc
push
fistpl
push
push
jo
jo
std
fcomps
pop
popa
sub
popa
addr16
xorl
inc
dec
jae
outsb
mov
jae
popl
pop
add
pusha
inc
inc
sub
sub
push
sarl
outsb
addr16
rcr
fnstcw
je
insl
sbb
push
ret
xchg
pop
insl
sub
jb
dec
inc
test
out
mulb
cmp
lock
push
or
xchg
leave
or
in
inc
pop
push
inc
cs
aaa
divl
outsl
aaa
cmpsb
aaa
mov
inc
dec
cmpsb
jae
push
aaa
outsb
mov
cmpsl
aaa
dec
dec
inc
push
pop
shlb
je
pop
hlt
xchg
mov
sbb
mov
and
setae
jo
cmp
or
rorb
imul
cld
sbb
add
sbb
add
and
roll
or
fs
dec
push
inc
sub
add
cs
xor
pusha
outsb
or
call
adc
shlb
mov
cmp
pop
and
stc
push
sub
pop
cwtl
sub
stos
jl
mov
sub
sub
xor
xor
and
pop
lahf
and
or
mov
push
jne
fisubrl
sub
test
xchg
xor
hlt
icebp
and
loop
insl
dec
mov
notb
sub
fs
dec
jne
scas
cld
adc
rorb
ret
add
aaa
lock
sbb
fstps
rolb
push
pop
cmp
or
dec
xor
jnp
lock
cmpsl
pop
mov
xbegin
jecxz
add
cwtl
adcl
frstor
lea
adc
pushf
cwtl
push
lock
aaa
in
loope
std
iret
cmp
sub
jb
adc
call
mov
orb
cmp
cmp
pop
clc
add
shr
cmp
fucom
popa
scas
call
dec
jmp
sbb
mov
adc
movsb
jne
je
jmp
jbe
enter
mov
test
movzwl
push
paddusb
js
lea
pop
ficoms
daa
imull
movsb
pop
and
lea
popa
mov
pushl
dec
es
inc
pushf
movsb
pushf
sub
mov
sub
add
xchg
push
sub
pop
call
inc
pop
sub
clc
or
arpl
pop
sbb
add
add
in
mov
adc
xchg
js
getsec
or
aas
push
push
push
xchg
cmp
sub
inc
sub
pop
inc
add
sbb
dec
cmp
or
jp
xlat
dec
outsb
fildll
andl
mov
cltd
inc
pop
dec
iret
rol
mov
shll
lret
cvttps2pi
mov
cmp
mov
shr
lock
inc
loop
inc
in
xchg
cmpsb
out
or
lcallw
lea
imul
push
and
add
or
mov
adc
push
sub
call
inc
je
mov
or
push
mov
insb
pop
cmp
sbb
loop
push
into
cmp
adc
push
jnp
fwait
inc
push
inc
adc
pop
sbb
dec
pusha
jl
sub
cmp
mov
sbb
sbb
cltd
shrb
and
bound
negl
mov
pop
nop
jmp
adc
sub
lcall
int3
xor
mov
testb
or
push
shll
push
and
loopne
inc
sub
add
jmp
dec
sub
dec
iret
in
pushf
xor
ljmp
jne
ret
mov
jle
pop
mov
sti
xchg
push
clc
addl
mov
sbbl
push
fisttpl
jle
das
push
insl
or
fs
call
dec
sbb
xchg
stos
sbb
cmp
scas
jmp
cmp
js
pop
insb
cmp
push
into
pop
int3
cs
cmp
scas
pushf
and
inc
add
adc
push
mov
xchg
clc
jg
out
mov
sub
sar
jns
adc
sbb
in
mov
dec
sub
sar
pop
rolb
add
inc
cmp
jg
push
subl
push
xor
cmpsb
mov
in
mov
sbb
call
cmpb
adc
int3
std
mov
lea
jle
jg
xor
pop
jns
add
fstpt
dec
push
push
fldt
cmpsb
xlat
mov
popl
cmp
mull
xor
mov
pop
scas
add
sub
sahf
push
popa
je
jl
jo
insb
push
daa
out
std
mov
gs
sub
or
inc
adc
sub
jmp
sub
cmp
mov
mov
jnp
stos
cmp
lea
mov
sbb
outsb
pop
add
cmp
ror
lcall
mov
pop
pop
cmp
pop
xor
enter
xor
test
adc
and
sarl
stc
or
mov
xor
or
or
cwtl
xor
test
push
shlb
dec
pop
ljmp
cwtl
loop
cwtl
popf
das
mov
cltd
pop
arpl
push
cmp
inc
push
xchg
clc
lea
in
mov
ds
repnz
xchg
add
push
cmpsb
in
outsl
add
add
out
sar
mov
add
arpl
fs
outsl
cs
mov
dec
ja
and
push
fisttpll
push
es
cltd
fisubl
adc
jbe
scas
mov
iret
addr16
inc
jo
xor
insb
imul
fs
sub
mov
mov
lods
mov
in
gs
xor
bound
jge
movsb
pop
lahf
je
mov
jno
push
andl
sti
add
int3
xchg
mov
ljmp
inc
lods
mov
xor
cs
stos
add
add
clc
pushf
xchg
ret
test
je
cltd
dec
leave
test
cmp
shl
sbb
stc
imul
iret
stc
xchg
push
or
in
mov
jmp
inc
push
dec
mov
fdivrs
push
ret
push
es
sub
call
xor
es
popa
ret
rol
jle
dec
jecxz
jp
in
mov
cmp
jle
leave
xchg
push
loop
ljmp
and
in
add
jb
inc
lock
push
ljmp
dec
int3
movzwl
pop
les
jo
sbb
hlt
mov
enter
dec
add
ror
inc
pop
in
in
push
add
addr16
jbe
xor
xor
inc
sub
jbe
inc
lret
leave
orl
xchg
jnp
dec
jmp
clc
sub
cmp
jl
inc
jne,pn
mov
lret
jmp
cmpsb
inc
jno
js
and
cld
fcmovb
jmp
jne
in
push
pop
lods
mov
loop
fdivs
pushf
and
jne
mov
call
pop
inc
mov
lock
push
aam
outsl
jl
sarl
test
push
aas
call
je
out
js
std
dec
imul
fidivs
int3
pop
sbb
mov
adc
xor
mov
mov
addr16
nop
je
inc
repz
movsb
mov
in
mov
jne
mov
arpl
call
jle
test
mov
add
push
add
pop
jecxz
pop
mov
mov
pop
lds
cmp
add
add
dec
mov
sub
mov
pop
inc
pop
adc
sbb
pop
push
mov
dec
pop
fstps
xor
inc
pop
sbb
daa
cmpsb
mov
daa
cmp
mov
xchg
shlb
les
inc
add
or
dec
lock
cwtl
aam
jno
lcall
movsl
and
or
xchg
sub
push
pusha
ja
xlat
out
das
add
mov
jmp
mov
ljmp
sub
cmp
and
call
mov
sub
sbb
xorb
sahf
add
pop
mov
mov
sbb
lret
push
inc
mov
cmp
sahf
push
sbb
dec
shrl
lock
sbb
mov
add
jo
test
into
lods
mov
fidivl
cmp
ja
and
jmp
pop
sbb
mov
jmp
dec
out
mov
ss
daa
jg
pop
testb
adc
mov
push
loop
mov
cli
mov
inc
inc
sub
jmp
les
ret
out
inc
cmpsl
add
push
rcrl
jb
push
push
jbe
jge
mov
lahf
push
pusha
aaa
outsb
adc
cmp
jb
cwtl
xchg
cli
cmc
xor
or
jg
aaa
jo
das
push
andw
or
sarl
cmp
and
test
sbb
test
test
enter
xchg
loope
imul
mov
mov
cwtl
inc
test
cmp
adc
jp
dec
push
test
and
pop
push
addr16
ss
lea
mov
adc
fbstp
dec
dec
dec
jmp
pop
imul
test
aam
pop
enter
mov
jp
call
mov
orl
add
and
cmp
jae
inc
vpshld
mov
add
cs
push
movsb
rclb
icebp
aaa
repnz
push
add
shrb
and
or
les
out
sbb
bsf
inc
cmp
adc
aas
mov
les
push
sbb
fldl
mov
cmp
icebp
mov
clc
mov
enter
add
icebp
std
add
adc
jp
hlt
jg
push
mov
ret
scas
cmpsl
or
out
sarb
or
add
dec
dec
or
dec
das
enter
or
inc
or
add
ja
test
in
movsb
pop
add
dec
gs
pop
int
push
dec
xorl
cmp
jb
adc
or
sub
test
xchg
cmp
stc
mov
in
lds
push
sbb
and
xchg
cmp
cmp
or
jb
bnd
rorb
xchg
nop
jb
jb
mov
jb
jl
dec
cld
inc
testl
call
and
ja
cwtl
xor
pop
scas
hlt
jmp
loop
fiaddl
jle
outsl
shlb
ret
fidivs
repz
outsl
nop
mov
or
add
mov
ret
cmpb
js
stos
sbb
cmp
pop
push
ret
and
ret
xlat
imul
out
mov
add
outsl
jo
pop
cmp
cmp
inc
cmp
lea
unpcklps
sbb
pop
mov
js
inc
jp
test
neg
and
mov
push
push
mov
and
sub
and
xchg
outsl
aas
or
jne
pop
sbb
mov
push
jo
sahf
lret
mov
push
sbb
adc
pop
lcall
jns
sahf
dec
sbb
mov
sub
mov
lods
mov
ds
sarb
mov
in
or
fcompl
dec
inc
fnsave
xchg
bound
push
jno
mov
rorb
or
inc
jae
data16
sub
push
mov
or
jl
and
add
clc
add
mov
clc
shl
add
testb
loopne
loopne
cs
jge
inc
mov
pop
mov
jmp
add
jmp
sbb
mov
jp
rcrb
mov
fnstenv
add
mov
mov
and
add
mov
sbb
enter
sbb
dec
add
cwtl
sbbb
or
hlt
push
fstpt
les
ja
fstl
push
and
xor
mov
xor
outsl
mov
rolb
pop
push
lock
pushf
sbb
sbb
add
adc
inc
roll
rcrb
jge
test
int
test
dec
pop
lods
adc
mov
aas
mov
add
cmpl
imul
jne
lods
xor
lret
or
mov
movsb
pop
add
push
push
clc
mov
cmp
shl
and
add
dec
and
mov
cmpsb
insb
in
in
in
jg
inc
popl
aaa
pop
jbe
sbbl
enter
jg
jno
xchg
add
lock
lds
jp
cmc
adcb
sbb
sub
mov
adc
push
clc
roll
shl
je
xchg
shll
add
add
fists
popf
les
jmp
repz
add
jns
jae
jnp
arpl
push
imul
or
push
dec
sbb
inc
mov
shl
pop
mov
push
test
or
call
sbb
lret
cmp
sti
hlt
xor
outsl
add
and
rcrb
jle
pop
clc
dec
sub
or
fbstp
lock
add
les
addb
jno
push
xchg
mov
mov
jmp
push
pop
lock
iret
pop
adc
pop
cmp
jne
push
cmp
pcmpeqw
or
push
ret
lahf
add
loopne
xor
test
aad
pop
cmp
push
push
inc
sbb
xor
clc
add
jae
ds
setbe
jnp
cld
das
cld
or
pop
into
ret
inc
ret
mov
or
stc
sub
dec
mov
lods
dec
or
adc
or
out
or
cmp
je
mov
cmp
je
movzbl
add
mov
mov
pop
pop
push
push
jmp
mov
addb
add
mov
pop
mov
call
jmp
sbb
add
loop
push
adc
test
cmp
xor
add
or
ds
rcr
cmp
jne
or
lock
addb
add
add
and
push
jbe
push
dec
mov
and
das
pop
aas
pop
pmulhuw
in
push
push
dec
dec
in
in
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
cs
in
adc
xor
outsl
cld
popa
gs
mov
mov
push
ja
shr
adc
xor
mov
das
jecxz
sbb
mov
popa
inc
sub
cmc
jns
shrb
xor
nop
xchg
ficoms
negl
nop
aas
hlt
dec
xor
and
xchg
add
jbe
pop
dec
dec
daa
daa
mov
call
fsubs
daa
daa
daa
aam
int3
enter
daa
sarb
lods
test
adc
aaa
add
pop
push
or
js
in
xchg
testl
cmp
push
aas
sub
inc
rclb
pop
add
xchg
xchg
jp
jbe
js
dec
dec
ficomps
push
icebp
repnz
dec
dec
dec
hlt
cmc
div
dec
dec
dec
dec
clc
stc
cli
sti
dec
dec
dec
dec
cld
std
decl
dec
dec
loopne
loop
dec
dec
dec
dec
in
out
sbb
jmp
pushf
fmull
paddsb
out
pushf
pushf
pushf
pushf
out
rcl
rcrb
aad
pushf
pushf
pushf
pushf
xlat
fcomp
ficompl
fstp
pushf
pushf
pushf
pushf
ffreep
rol
pushf
pushf
pushf
ret
pushf
pushf
pushf
enter
pushf
pushf
pushf
lret
int3
int
pushf
pushf
pushf
pushf
iret
mov
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
mov
pushf
pushf
pushf
mov
aam
pushf
mov
mov
jbe
pop
mov
test
pop
mov
sub
adc
adc
movsl
sbb
stos
mov
xor
pop
pusha
and
fs
lret
push
push
sbb
je
mov
dec
js
and
adc
cmpb
mov
push
sbb
je
inc
sub
xchg
test
add
or
fcompl
xchg
mov
jmp
in
lods
mov
insb
and
sub
mov
mov
loopne
pusha
push
rolb
dec
pop
add
roll
jne
insl
xchg
and
mov
jae
aaa
dec
pop
dec
and
mov
das
inc
add
dec
push
insl
dec
push
mov
add
dec
loop
sub
inc
adc
sbb
dec
ret
divl
xlat
insl
imul
pop
aaa
js
push
aas
imul
addr16
out
fldl
jb
cmp
imul
popl
push
adc
loopne
sub
push
push
arpl
xor
loope
mov
push
jb
jbe
or
mov
inc
inc
insb
push
mov
addr16
imul
imul
loop
push
arpl
lahf
and
mov
adc
je
pop
test
and
daa
leave
pop
movsb
movsl
dec
dec
dec
outsb
cmpsl
test
dec
dec
dec
dec
stos
stos
lods
lods
dec
dec
dec
dec
scas
scas
nop
xchg
jg
dec
dec
xchg
xchg
xchg
add
sub
fmuls
mov
add
lret
jbe
inc
sarb
daa
lock
orl
add
push
pusha
mov
inc
mov
rclb
add
sbb
dec
jmp
in
add
shll
les
add
out
fst
mov
adc
and
cmp
js
pop
and
sar
pop
jl
jmp
or
daa
push
or
jbe
xchg
mov
cmp
sub
mov
ss
sbb
push
cwtl
cs
push
pop
xor
lods
jo
adc
lock
jno
xor
inc
jbe
fidivl
mov
or
ss
add
add
sti
and
xor
inc
push
push
add
jo
addb
rol
rolb
loopne
clc
std
ljmp
add
add
add
push
add
jo
sbbb
add
add
rolb
add
add
pop
sub
stc
sub
add
adc
rcll
xor
add
mov
add
ja
nop
mov
add
add
mov
add
or
add
add
add
add
add
idiv
mov
mov
add
push
loopne
lock
inc
mov
adc
and
add
loope
xor
pusha
add
add
icebp
xchg
add
adc
add
push
xor
xchg
mov
adc
adc
and
test
pop
stos
rolb
add
push
push
sbb
push
call
mov
add
xor
push
adc
rolb
mov
in
xor
aas
inc
ss
add
sub
pusha
adc
cmpsl
pusha
cmp
mov
mov
jae
sub
notb
movsb
push
add
out
addb
outsb
scas
add
adc
and
fists
xor
inc
add
mov
add
pop
es
scas
mov
mov
xor
or
loopne
das
add
popl
inc
adc
ret
loopne
loope
sarl
lret
dec
mov
dec
push
push
mov
jo,pt
neg
rolb
push
add
fdivrp
lret
ljmp
pop
jo
addb
push
mov
mov
aad
pop
loopne
lock
mov
cld
and
xor
inc
push
pop
pusha
pop
jo
push
addb
pop
mov
pusha
shlb
sub
jg
call
add
dec
or
or
or
or
push
or
jo
cmp
or
orb
or
or
incl
adc
aas
jp
or
or
or
or
jmp
clc
or
pusha
or
jo
xor
in
adc
xor
pop
scas
cmp
rorb
adc
lock
add
fsubrl
adc
ret
bound
or
or
dec
icebp
xchg
pusha
or
push
pop
jle
or
es
or
or
adc
pushl
orl
adc
add
pusha
jle
push
iret
or
push
sub
sahf
or
int
daa
in
add
rorb
or
fwait
cmpsb
or
clc
cmp
or
or
inc
or
or
test
or
jecxz
or
jge
repnz
mov
es
dec
addr16
loopne
pop
add
or
or
jp
pop
adc
and
sbb
or
push
pusha
or
jo
orb
rorb
or
and
xor
inc
push
push
push
pusha
push
jo
orb
nop
push
mov
push
rorb
loopne
lock
add
sbb
push
lar
wrmsr
cmovo
out
push
punpcklbw
jo
mov
pcmpeqb
nop
dec
mov
iret
jnp
imul
bswap
xchg
testl
sti
mov
sbb
add
dec
cmpsl
insb
mov
ja
dec
sbb
mov
push
inc
mov
mov
adcb
mov
je
or
popf
incb
mov
lahf
push
fcmovne
loopne,pt
lock
add
push
adc
dec
and
je
jo
outsb
aas
push
repz
jno
add
cltd
scas
adc
aaa
cmp
adc
xor
addl
mov
adc
add
mov
sub
sarl
adc
incl
jmp
imul
adc
and
xor
cmp
cmpsl
and
fildl
lea
in
cmp
pop
dec
stc
fnstsw
add
jo
pop
roll
inc
cltd
push
dec
cmp
aaa
sbb
sbb
divps
ud0
adc
lahf
adc
adc
adc
aaa
adc
adc
adc
jge
pop
or
pusha
or
adc
pop
jne
push
or
adc
shlb
add
adc
fnstsw
adc
adc
adc
into
ja
call
adc
adc
adc
adc
push
aas
pusha
adc
add
in
and
add
pop
mov
nop
mov
add
in
push
lret
push
or
rolb
jae
push
adc
adc
push
lret
ja
pop
fstpl
cmp
out
mov
xchg
and
adc
adc
clc
and
adc
xchg
adc
jnp
rolb
scas
adc
adc
fsub
lahf
mov
in
cmp
into
push
daa
jmp
loope
dec
mov
push
mov
ja
add
shll
fidivs
push
xor
mov
mov
dec
testl
les
iret
ss
jg
fistpll
add
jp
adcb
pop
es
xor
jg
cmp
push
push
pusha
aas
sbb
fildl
pop
or
fimuls
fadds
push
inc
and
sub
mov
pop
das
fldt
add
sub
outsl
filds
push
sbb
sti
loopne
pop
loopne
jecxz
pop
nop
pop
mov
test
fadd
pop
jg
pop
mov
adc
lock
push
jg
sti
add
sbb
or
inc
sbb
and
out
pusha
sbb
or
sbb
mov
imul
int
cmp
sbb
sbb
sbb
ss
sbb
sbb
pop
adc
cld
pop
loopne
cmp
xor
add
xchg
ljmp
lret
pusha
sbb
sbb
sbb
test
imul
sub
and
adc
iret
iret
mov
das
add
fists
shr
loopne
add
jo
mov
mov
jns,pt
jnp
sbb
add
scas
pop
push
push
adc
or
mov
adc
fs
adc
sbb
sbb
sbb
add
jle
or
pcmpgtd
adc
adc
mov
ss
adc
add
and
sbb
movsl
sbb
movsl
dec
inc
add
or
mov
add
mov
aaa
pop
add
cmp
pop
add
push
add
or
ja
mov
dec
push
add
push
ficoml
jmp
dec
or
fs
leave
in
sub
add
xor
aaa
sbb
or
xchg
sub
roll
or
jb
add
add
or
sub
inc
adc
add
call
sbb
dec
mov
dec
and
jg
stos
dec
icebp
jnp
in
mov
jne
or
push
push
shll
or
mov
sbb
pop
cmp
cmp
jns
add
mov
mov
jg
insl
fstp
sbb
ficoms
sarb
sbb
add
xchg
xchg
add
mov
or
test
pop
push
and
scas
sub
mov
mov
mov
popa
jg
jo
mov
adc
push
pop
inc
bound
sbb
ljmp
pop
lock
lidtl
pop
sar
and
insl
add
pop
insb
out
adc
or
push
sub
daa
lahf
imul
sub
mov
sbb
pop
or
add
pusha
mov
fistps
pop
or
or
out
inc
rcrl
and
push
pop
or
add
sbb
mov
outsl
mov
xchg
pusha
inc
xchg
add
notb
pop
lahf
jnp,pn
inc
aas
lahf
add
add
or
scas
mov
lahf
mov
out
add
sbb
cmp
aas
fmul
xchg
mov
and
or
sbb
sbb
mov
xchg
insl
pop
insl
int
push
fcomp
mov
and
mov
add
inc
push
sbb
pop
lods
dec
cmp
ffree
add
phaddsw
adc
cmp
movsl
aad
frstor
sub
and
fstps
add
sbb
add
sbb
pop
jns
enter
dec
pop
and
adc
sahf
add
jbe
cmp
and
pop
inc
loop
and
adc
das
add
int3
push
cvtps2pi
test
adc
sub
popa
sbb
cmp
insl
adc
cmp
fbld
add
xlat
xchg
shll
inc
pop
mov
shl
add
add
mov
jb
mov
push
add
xchg
rcrb
cmp
sub
mov
in
sbb
sub
mov
add
insl
xchg
shll
mov
out
push
sbb
dec
aaa
ret
insl
les
sti
add
mov
imul
mov
ja
fcoms
rcrb
adc
and
xor
push
xlat
mov
dec
adc
stos
cmp
jo
xor
mov
or
fiaddl
movsl
sub
lret
iret
mov
pop
aas
or
sub
jnp
lcall
imul
push
mov
fiaddl
sbb
adc
cmp
push
adc
cmp
sbb
inc
or
adc
xchg
sub
sbb
adc
cmpsl
data16
adc
sub
push
pop
add
xor
add
or
call
mov
ficoms
add
cmc
cmp
jnp
pop
gs
add
bound
sbb
dec
sbb
and
push
add
pushf
movsl
cmp
pop
pop
stos
test
mov
or
sub
sub
data16
inc
pop
and
sub
sub
pop
daa
mov
cmpl
popl
or
fsubrs
mov
push
add
or
pop
mov
inc
insl
arpl
pop
pusha
or
aas
sbb
insl
imul
sbb
gs
xchg
cs
fdivs
jno
pop
in
gs
dec
rcll
daa
add
ljmp
mov
sti
mull
xor
mov
push
mov
or
rclb
pop
sub
dec
inc
sbb
ljmp
movsl
test
mov
sbb
pop
sbb
jno
pop
push
adc
pop
dec
js
and
inc
loopne
pop
sub
pop
mov
cwtl
sbb
insb
in
mov
sub
lods
int
sbbl
push
mov
and
inc
fmuls
out
mov
fs
or
in
les
sbb
test
pop
fsubl
test
insb
popa
and
imul
push
mov
mov
rolb
sbb
xor
xor
or
fwait
test
aaa
rcrl
push
and
lcall
lds
push
test
lods
pop
add
adc
sbb
dec
fwait
jnp
xchg
imul
test
mov
popf
jp
lahf
adc
adc
cmp
inc
inc
mov
pop
cmpb
jg
shlb
push
lgdtl
outsb
test
sbb
sbb
xchg
or
lret
sbb
orl
sub
or
lahf
push
aaa
push
pop
test
popa
xor
and
xchg
push
mov
pop
push
and
cmp
mov
push
aas
xchg
mov
iret
or
lahf
lods
lahf
lods
lea
aad
push
es
or
pop
je
movsl
movb
daa
sgdtl
insb
insb
int3
cwtl
popf
adc
icebp
sub
or
pop
das
xor
jae
and
and
insb
inc
sub
xor
je
test
imulb
xor
dec
xor
sub
cmpsl
inc
or
sbb
fisttpl
sbb
imul
sbb
sbb
mov
jnp
or
sbb
neg
and
mov
adc
or
sub
mov
pop
enter
add
fildl
pop
sub
sarb
jp
and
jge
xor
pusha
or
adc
sbb
pop
pop
adc
adc
or
push
fsts
sub
jbe,pn
xchg
nop
add
mov
or
mov
rolb
dec
mov
inc
into
push
adc
ss
jb
add
and
sbb
or
xor
jb
mov
push
insl
add
pop
lods
sbb
test
dec
xor
jnp
subl
ficoml
fists
cmpsb
xchg
push
dec
sarb
adc
pop
shrl
loopne
test
pop
inc
mov
sub
inc
inc
lcall
xchg
add
xor
sub
xchg
jp
add
addr16
ja
rclb
and
add
lock
add
fildll
adc
xchg
add
nop
adc
add
pop
rclb
das
dec
lock
add
add
add
aas
scas
cmp
pusha
fwait
jo
mov
inc
mov
pusha
mov
xchg
mov
mov
mov
mov
aas
adc
or
adc
daa
daa
daa
sbb
and
pop
jg
adc
and
das
shl
pusha
sub
push
scas
mov
rorb
lahf
shrb
dec
push
outsb
xor
enter
pop
inc
mov
das
scas
mov
ljmp
mov
loopne
clc
aas
pushf
pushf
pushf
mov
adc
sbbl
pusha
dec
inc
sbb
jg
daa
mov
and
xor
inc
xchg
and
daa
dec
dec
adcb
cmpsb
xchg
push
push
lahf
mov
js
jnp
xor
xor
inc
mov
aas
ljmp
push
lods
mov
aas
sbb
ret
sarl
aas
lds
aas
lcall
imul
idiv
out
push
push
aad
pop
push
dec
or
in
leave
psubusw
xor
cmp
jmp
and
lds
mov
stos
ljmp
pmulhuw
aas
outsl
aaa
dec
adc
es
sub
pusha
and
shll
mov
sbb
push
sti
addr16
clc
inc
mov
dec
push
lahf
ljmp
sub
mov
cvttps2pi
pop
adc
adc
aas
xor
sub
push
aam
minps
or
out
scas
add
mov
jecxz
cs
xor
add
scas
xchg
mov
cmovae
xor
ss
cmp
or
dec
cmp
cmp
cmp
nop
cmp
inc
incl
daa
daa
mov
inc
inc
pop
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
dec
dec
adc
dec
rclb
mov
iret
add
ds
push
xchg
and
jg
and
fucomip
imul
jb
rolb
loopne
mov
mov
dec
jo
scas
gs
cmp
mov
pop
mov
in
rorl
pushf
mov
add
cs
aas
pop
icebp
add
stc
cmc
popa
cmp
mov
mov
push
jo
fiaddl
mov
outsl
ret
out
fisttps
arpl
lahf
cmovl
ds
jno
pushf
dec
pop
jmp
push
call
loopne
or
jne
pop
push
out
pop
sbb
pop
pop
subl
js
push
mov
das
scas
add
mov
jg
fisubrl
pop
mov
mov
dec
lahf
dec
mov
mov
popa
adc
popa
inc
subb
test
sub
xchg
outsl
pop
adcl
adc
adc
fbstp
mov
cmpb
inc
cs
xchg
sbb
push
adc
or
outsl
aas
add
mov
pop
mov
push
or
jg
das
inc
lods
sub
lcall
sbb
mov
aas
add
test
pand
lods
xchg
mov
out
outsl
and
mov
adc
sbb
bnd
pop
add
les
enter
xchg
or
adc
add
mov
outsl
adc
js
mov
adc
xor
dec
mov
dec
add
xchg
or
in
xor
xor
or
inc
imul
push
push
pop
push
popa
outsb
addr16
jb
or
xchg
mov
outsl
ja
sbb
fs
dec
pop
insb
sbb
gs
xchg
je
in
push
outsb
fs
or
jmp
adc
inc
arpl
jae
push
imul
and
jb
insb
test
je
inc
imul
movsl
ja
insl
xor
push
popa
dec
popa
cmp
mov
xor
inc
popa
js
adc
inc
js
andl
outsb
popa
addr16
inc
dec
neg
data16
imul
fcmovnbe
xchg
es
or
cmp
sub
sbb
xor
jo
or
insl
fwait
jb
mov
jo
insl
gs
push
xchg
shrl
fadds
cs
push
push
insb
sbb
adc
push
or
add
push
lahf
or
std
add
push
inc
jmp
cmp
inc
dec
add
sbb
pushf
insb
pop
xchg
out
add
mov
addb
js
jo
repnz
insb
daa
push
fsubs
iret
leave
jae
lock
add
out
pushf
cmp
inc
cwtl
das
cmp
mov
xor
sub
daa
fwait
xchg
out
inc
sbb
and
jae
pushf
cmp
or
daa
iret
fldenv
inc
dec
pop
fcompl
inc
loopne
das
fsubs
out
and
shrb
adc
enter
outsb
lods
add
les
int
sub
mov
fs
dec
ss
mov
adc
fstps
daa
fistpl
movsb
push
mov
mov
imul
xchg
sbb
nop
sub
sub
mov
adcb
insb
filds
add
insb
adc
fistpll
mov
mov
les
adc
and
add
jae
jl
or
call
add
es
invd
xor
popa
jmp
sti
mov
in
mull
dec
inc
aaa
insl
mov
pop
cmp
pop
or
inc
les
imul
pop
neg
mov
mov
add
js
bound
jg
inc
mov
hlt
fisttpll
add
flds
jns
aaa
pop
add
sub
inc
movsb
icebp
pop
outsl
imul
aad
xchg
push
sbb
dec
add
outsl
mov
pushl
mov
xchg
and
je,pn
sbb
xor
outsb
mov
or
add
fimull
je
jae
es
add
fists
dec
push
js
dec
add
rolb
fs
pop
and
cmp
cld
dec
adc
mov
jl
sbb
shrb
push
es
sbbl
xor
inc
xor
mov
cmovae
fwait
mov
nop
in
jbe
pusha
sub
or
dec
lea
insl
mov
mov
or
out
mov
rcrl
lea
push
jne
lds
repz
pop
inc
jae
adc
bswap
xor
and
add
imul
pop
mov
cmp
sub
adc
sahf
push
or
daa
pop
add
or
jbe
xlat
jg
add
xchg
xor
jg
xor
inc
mov
xchg
rcrl
pop
fmuls
scas
push
xchg
inc
jbe
sbb
sbb
sbb
jnp
pop
out
popf
dec
jp
inc
pop
push
cld
xchg
dec
sti
push
popa
mov
inc
sub
ret
mov
dec
add
fsubs
sbb
or
pop
aam
cmovbe
outsb
cmpb
gs
gs
adc
cltd
or
pop
incl
mov
inc
inc
arpl
imul
push
int
add
dec
xchg
lods
cli
push
push
pusha
add
dec
mov
lcall
push
negl
jno
jo
push
fidivrs
push
mov
and
xor
jne
sub
add
or
out
and
sbb
mov
inc
insl
je
push
jbe
es
xchg
or
mov
jns
mov
sbb
jmp
or
je
mov
jge
rorb
or
push
add
xchg
xchg
dec
call
mov
das
sub
shll
inc
repz
xor
cmp
out
inc
insb
xor
cmpl
xchg
mov
jp
adc
mov
addb
dec
push
mov
mov
add
cld
adc
cmp
dec
pop
loopne
push
sbbb
add
aam
sti
mov
lds
adc
imul
mov
scas
sub
loopne
xchg
incl
push
jo
xor
push
pop
sub
jle
sbb
or
sbb
enter
add
and
or
pop
incl
add
or
fwait
push
in
sbb
cmp
pushf
add
mul
push
push
inc
push
or
add
fstp
cli
lea
push
or
aaa
and
outsl
pop
dec
push
pushf
pcmpeqb
or
cmp
push
das
xor
arpl
jns
je
inc
loop
mov
sarb
jl
push
lds
mov
cmp
push
cmp
pop
addr16
enter
add
adc
arpl
sbb
add
cld
in
bound
ljmp
inc
mov
jo
sub
xchg
inc
xchg
das
cwtl
push
add
movsb
outsl
adc
sub
pop
xorl
and
push
cmove
xchg
cmp
jmp
fcoml
inc
sub
pushw
mov
and
pop
and
push
movsb
push
dec
fdivrl
out
test
es
add
pop
and
sub
fisttps
sub
push
sub
or
data16
call
pusha
mov
and
sbb
mov
and
xchg
push
test
lret
nop
push
sbbb
cwtl
int
pusha
movsl
add
cmp
push
test
mov
pop
pop
pop
inc
outsb
daa
rorl
jo
leave
push
dec
jbe
mull
fisubrl
lahf
xlat
pop
xor
daa
xlat
pushf
fmull
and
cmp
sub
cmp
push
adc
inc
add
sbb
inc
push
inc
in
cmp
in
and
fisubrl
and
fiaddl
cmp
jb
daa
mov
je
dec
sbb
pusha
dec
rorb
pop
and
pop
mov
sub
xor
inc
stos
adcb
add
pop
and
or
fsubrl
movsb
dec
mov
xor
push
adc
jge
inc
loopne
movl
sbb
pushf
loopne
jbe
test
insb
jb
sub
or
movl
dec
outsb
daa
in
sub
sub
adc
test
sbb
data16
inc
pop
and
or
mov
in
inc
sarb
or
mov
push
mov
in
inc
push
inc
sub
js
pusha
or
loop
out
lods
fldl
movl
push
push
out
add
and
test
mov
ss
or
movups
inc
or
sti
iret
pop
sub
pop
mov
rorb
inc
xor
xchg
sub
pop
push
test
and
movsb
sub
shrb
or
and
sub
movb
in
and
add
ucomiss
adc
adc
add
test
sbb
pop
mov
bts
jo
mov
push
add
movl
pop
pop
out
das
pop
add
orb
push
add
inc
jmp
iret
pop
sub
inc
dec
xor
sub
adc
push
push
loop
xlat
or
insl
pop
mov
fildl
rorb
adc
cmpsb
xchg
mov
pop
test
pop
and
add
xor
orb
push
aaa
cmp
pusha
nop
fiaddl
sub
inc
push
xor
xor
adc
cltd
stos
loopne
pop
push
cld
mov
push
mov
sub
push
rcrl
mov
lret
add
pop
dec
inc
push
pop
mov
xor
push
je
orb
pop
xchg
pop
shrb
push
sub
pop
sbb
jne
insb
aaa
xor
stos
loope
jbe
push
wrmsr
xlat
pop
jb
pushf
adc
arpl
xor
xor
sub
outsb
loopne
push
jb
dec
fdivl
outsb
out
mov
in
mov
rcrb
add
mov
xor
aas
cmpsl
jo
in
mov
jmp
xlat
pop
xor
in
add
test
inc
dec
ja
inc
test
inc
mov
daa
movsb
adc
aaa
aaa
sub
or
test
cmovne
pop
sub
sbb
aaa
pusha
adc
push
inc
test
lds
dec
cs
cs
out
adc
js
add
push
push
adc
add
push
inc
lret
push
push
or
insb
jp
xor
pop
mov
fwait
jmp
add
inc
push
nop
shlb
cld
push
leave
jae
xor
cmp
jnp
sbb
push
push
andnps
or
movups
jb
xchg
and
int3
push
ret
cmp
test
jmp
cli
adc
inc
sahf
outsb
arpl
sbb
push
shrl
add
or
cltd
and
inc
sub
test
imul
inc
xchg
sub
xchg
xchg
jo
gs
jo
or
sbb
das
inc
or
je
cwtl
lcall
movsb
rcrb
pop
add
int
push
stc
push
lods
inc
dec
fwait
das
sbb
cs
inc
sbb
cmp
insl
sbb
xor
imul
popa
fldcw
mov
in
cld
pushf
or
pop
push
fisubl
xor
adc
sub
xchg
divl
push
xchg
scas
pushf
xchg
rcrb
ja
addr16
sub
pop
gs
add
imul
sbb
or
ret
testl
aas
jb
and
sub
adc
sbb
addr16
jnp
push
test
mov
sbb
push
and
sbb
aaa
add
mov
cmp
cmp
xor
add
xchg
es
je
cwtl
stos
push
adc
and
xor
inc
fcompl
ds
lock
testl
scas
mov
jne
ss
les
aam
lret
add
sti
aam
inc
sbb
xor
jae
cvtdq2ps
cmp
fidivrl
ja
jle
fidivs
mov
sbb
xchg
out
fstps
sti
push
push
js
jle
int
insb
mov
lea
inc
jecxz
push
clc
addr16
popf
adcb
xchg
sub
jge
sbb
push
pushf
fmuls
ret
out
sub
fistps
xchg
sbb
filds
shl
pop
xchg
sbb
or
mov
notl
outsb
sbb
lret
out
insb
insl
mov
or
cmp
movsl
cwtl
fldl
bound
ja
lahf
mov
fcmovnb
inc
mov
sub
sbb
enter
pusha
and
cmp
insl
lea
sbb
cmp
or
das
mov
and
cmp
mov
pop
lea
pop
clc
or
insl
push
jnp
fisttpll
xchg
in
inc
fs
lock
lock
adc
scas
dec
add
push
arpl
push
mov
add
cmovo
inc
pop
lret
movsl
mov
or
rolb
je
xchg
int3
fcom
shlb
out
test
inc
divl
add
jbe
or
xchg
sub
aaa
lea
inc
outsl
cmpl
imul
or
adc
add
mov
js
test
outsb
add
jo
mov
sub
cmp
ja
cmp
adc
in
cmp
add
inc
adc
or
mov
xchg
cld
fiadds
push
add
int
faddp
jbe
sub
dec
jo
xor
aas
les
sar
pop
add
lock
call
dec
repnz
andl
add
cmp
pop
enter
rcl
mov
stos
xlat
aas
lods
or
mov
mov
or
out
cmp
inc
jbe
cmp
push
mov
cmpb
inc
mov
imul
xchg
shlb
les
push
or
pop
pinsrw
das
movsb
pop
nop
cmp
push
movzbl
add
push
cmpsl
sub
daa
or
imul
mov
mov
sbb
cmp
mov
sbb
or
mov
add
insb
test
je
mov
sub
dec
lcall
test
sbb
add
cmp
add
cmpsb
push
clc
sbb
shlb
inc
and
cmpsb
je
xchg
and
sbb
mov
orl
sub
and
mov
pop
bound
inc
bt
setb
ret
retw
dec
rorl
int
cld
inc
fisubs
push
mov
sti
push
mov
cmp
dec
inc
adc
and
fcomps
shlb
ja
jbe
push
test
add
add
lea
add
icebp
std
incl
add
mov
cmp
je
data16
and
xor
or
outsb
adc
or
add
cmp
xorb
sti
jmp
sub
jne
outsl
and
pushf
pop
or
rcl
mov
jno
hlt
inc
push
mov
call
jmp
push
clc
cmp
jg
rcr
push
inc
inc
ucomiss
loope
add
cmp
mov
inc
rclb
add
jmp
and
xchg
cwtl
das
mov
jmp
mov
imul
and
jmp
das
add
jmp
or
push
xorb
mov
xchg
loop
cmpb
inc
add
data16
jmp
fnsave
rolb
cmp
jle
mov
mov
mov
imul
sub
and
or
adc
add
rorl
or
adc
mov
decl
or
cmp
jb
xor
mov
inc
cmpsb
fdiv
pavgb
call
ror
lret
out
jbe
sub
add
ja
mov
jecxz
push
adc
mov
jb
sub
or
cmovs
sbb
jg
cmp
repz
add
adc
and
jg
in
xchg
add
outsl
jb
mov
loopne
fs
jb
add
mov
mov
mov
mov
push
mov
sahf
cld
mov
inc
arpl
mov
ret
cmp
in
ret
adc
push
add
das
por
testl
sbb
sbb
aas
imul
mov
jmp
addl
in
push
jb
stos
mov
inc
call
mov
xor
or
xor
adc
push
push
push
lock
sub
lock
jne
push
xor
loopne
mov
xchg
sbbl
iret
in
adc
inc
adc
xor
out
jo
aas
cmpsl
adc
loope
fcomps
mov
pop
sbb
or
pop
mov
fs
xchg
xchg
xor
and
ficoms
cmp
nop
and
aas
call
in
jge
add
sbb
mov
pop
push
loopne
mov
sarl
mull
fsubrl
enter
xchg
jbe
or
inc
repnz
push
inc
sti
jbe
icebp
bound
cmpsb
fsubrl
rorb
jb
cmp
test
adc
jnp
outsb
jp
jbe
xchg
dec
faddl
jae
imulb
insb
pusha
ja
or
xor
repnz
push
leave
push
gs
ss
inc
test
pop
ret
addl
add
cs
jmp
sbb
fdivs
mov
add
clc
jge
shlb
xchg
enter
add
fiaddl
mov
insb
shll
cs
adc
add
and
rcrb
push
addb
lcall
inc
inc
outsb
add
rcrl
mov
adc
mov
or
hlt
mov
rcr
push
ja
cmp
jge
lds
jne
sub
jbe
vandps
outsb
sbb
clc
ljmp
dec
jne
cwtl
mov
rorl
adc
pop
sbb
scas
add
jle
push
je
add
and
cwtl
xor
cmp
or
imul
loopne
mov
sti
mov
out
jne
bound
adcb
lea
push
push
and
jle
mov
xor
xlat
mov
js
sbb
inc
mov
in
iretw
outsb
mov
ja
dec
out
sbb
add
mov
mov
xchg
outsl
ret
adc
out
xor
adc
lcall
or
push
jle
insl
imul
imul
xor
cmpsl
mov
lcall
out
shlb
add
jb
inc
dec
aam
sub
mov
and
xor
je
and
insb
hlt
mov
adc
add
mov
lock
add
sbb
aaa
in
push
push
sarb
leave
cs
mov
cmp
imull
fcompl
jg
loopne
rcl
adc
popa
or
dec
mov
int3
add
or
imul
imul
inc
scas
ljmp
repz
fadds
pop
call
stos
pop
sahf
push
jns
dec
adc
sbb
aad
test
dec
enter
dec
insb
sbb
or
xor
mov
test
nop
roll
loopne
es
enter
das
call
or
mov
out
mov
adc
notb
je
or
adc
add
push
jns
and
adc
je
dec
je
in
out
jne
adc
or
xor
jmp
hlt
lea
xchg
rorb
out
dec
sbb
xlat
rcrl
adc
jp
lret
xchg
dec
pop
fsubr
push
lea
xor
push
mov
mov
or
jbe
and
mov
lock
mov
iret
mov
insb
or
or
dec
pop
inc
cmpsl
or
enter
fcmove
add
cld
mov
mov
aad
dec
pushf
imulb
ror
mov
adc
sub
dec
mov
sbb
inc
inc
roll
and
insb
icebp
inc
divl
inc
mov
inc
das
in
jge
dec
out
push
je
and
enter
jbe
push
mov
std
ret
lcall
xor
add
loopne
jae
sub
pusha
jle
mov
mov
mov
and
inc
adc
push
in
push
xchg
mov
inc
or
or
adc
add
lahf
push
inc
push
hlt
cmc
and
shll
shlb
mov
fmuls
jmp
pop
testl
into
mov
lahf
xchg
movsl
mov
lods
adc
cmp
lods
mov
and
mov
fwait
clc
push
pop
add
and
cmp
mov
pop
jbe
or
jnp
hlt
lock
cmp
pop
rcr
mov
test
daa
sub
adc
pop
cltd
lcall
repz
pop
jl
push
mov
xchg
fisttpl
call
pop
cmp
decl
insb
add
mov
loopne
int3
add
adcb
loopne
pop
addl
or
push
adc
dec
je
jae
adcl
mov
push
pop
test
movsb
phaddsw
jnp
add
xor
dec
pop
scas
scas
fucomip
sbb
pop
sub
aad
xor
shll
lret
rolb
test
or
enter
lods
add
mov
ljmp
mov
movzwl
data16
popf
pop
adc
lds
dec
pop
jge
xorl
dec
test
and
push
push
add
lods
ret
xchg
pop
or
lret
pop
jns
ret
sbb
or
jnp
cmp
cmpsb
jbe,pn
out
adc
mov
addr16
pop
pop
mov
pop
test
inc
push
in
mov
jae
out
fbld
add
std
add
inc
lahf
shll
add
dec
mov
test
mov
daa
out
push
jo
push
movsl
push
jo
push
rorl
icebp
dec
testl
ss
sarb
dec
je
dec
jle
data16
mov
call
loop
xchg
pop
mov
push
push
hlt
mov
or
insl
clc
test
hlt
mov
add
or
add
sbb
jb
ret
xor
loop
fldl
dec
adc
nop
adc
sbb
pushf
cmc
inc
pop
mov
add
xchg
or
pop
nopl
xor
and
mov
inc
dec
mov
sbb
jmp
fisttpll
push
add
ret
push
pop
jp
pop
ja
jbe
je
mov
lock
cmp
mov
push
jb
push
ljmp
jae
repnz
fistl
adc
and
add
jae
xchg
out
cmc
adc
call
xchg
push
push
mov
sub
mov
aad
mov
scas
xor
lods
push
mov
pop
testl
pusha
or
mov
mov
or
adc
sbb
cmp
aam
inc
pop
cmp
cs
sbb
adc
xchg
pop
jbe
mov
popa
pop
dec
dec
test
cmp
or
mov
lret
push
loop
jns
test
and
dec
push
dec
inc
or
in
or
dec
cmp
mov
or
movsb
push
cmp
aas
das
push
or
cmp
das
add
push
dec
cmpb
sub
lock
cmp
adc
or
cmp
xorl
jbe
xor
imul
imul
cld
push
inc
push
call
movb
xchg
xchg
xor
sub
sbbl
dec
mov
in
cmp
pop
jge
and
and
adc
mov
mov
cmp
push
cwtl
mov
adc
popa
dec
mov
dec
ret
dec
cmp
push
mov
inc
add
jge
enter
xchg
sub
jno
sbb
mov
xchg
jle
adc
jmp
lret
lock
sub
mov
rcrb
ljmp
in
les
je
ret
sbb
fisttps
inc
adc
add
fidivrs
push
add
aas
hlt
mov
jl
inc
dec
lock
add
sbb
adc
inc
add
push
nop
sbb
outsb
cs
in
add
xlat
adc
outsl
hlt
cmp
mov
or
mov
lock
inc
jle
rclb
cmp
jbe
sbb
pop
or
stos
repz
and
sub
js
adc
jg
subl
dec
imul
cmpb
sbb
or
push
push
int
imul
lea
sub
push
das
cmpl
cmp
add
xchg
push
dec
adc
jo
aas
fcoms
addb
sub
shlb
jl
inc
xchg
fstpt
mov
mov
mov
sbb
cld
setb
jne
or
or
es
mov
adc
sub
xchg
xor
add
push
mov
loope
js
fcmovnu
je
cwtl
inc
stos
les
stos
adc
in
fsubl
popf
adc
sub
pop
in
fcomps
inc
xor
push
and
push
pop
decb
loope
jp
ds
stos
xchg
push
outsb
push
pop
pop
or
fadds
or
or
adc
jmp
add
cmp
jbe
mov
test
cmp
cmp
inc
jne
lcall
shrb
rolb
out
add
mov
pop
adcl
inc
js
xchg
std
and
jb
cmpsb
sahf
or
adc
add
lcall
cmp
pop
sbb
je,pn
mov
sar
jns
rcrl
mov
jle
sar
pop
rol
xchg
or
cs
into
es
incl
sub
mov
mov
push
jo
push
stos
xor
jp
movsb
sbb
je
adc
or
xor
negl
or
inc
jmp
sbb
add
aas
sub
jne
rcrb
xor
je
xchg
and
adc
inc
and
sarb
adc
xchg
aaa
cld
push
sbb
add
and
cmc
jmp
in
cmp
xchg
add
mov
or
cmp
inc
cli
pop
sbb
sub
xchg
loopne
mov
jne
cmp
jl
mov
lods
out
mov
jae
cmpb
inc
insb
jne
cmp
inc
inc
dec
cmpsl
jge
mov
xor
mov
imul
inc
jmp
enter
andl
movsl
mov
adc
mov
pcmpeqd
mov
mov
xchg
jns
mov
sbb
and
pop
sbb
je
ss
out
in
pop
inc
pop
mov
fcomi
inc
das
aaa
pop
xchg
mov
pop
sahf
adc
outsl
das
pop
stc
push
pop
daa
mov
jo
rcrb
adc
or
orb
popa
orl
icebp
iret
out
inc
je
or
je
add
sub
mov
aas
mov
movsb
jmp
lea
adc
sbb
addl
insb
addr16
icebp
scas
jge
push
jne
cmpb
inc
and
push
inc
xor
push
dec
jmp
sbb
dec
or
xchg
jne
je
jg
scas
inc
js
inc
pop
ds
mov
jbe
fimull
js
out
cmp
push
sbb
mov
xor
cmpsb
testb
mull
cld
mov
pop
xchg
push
pop
in
jns
jecxz
pop
add
addr16
inc
das
lock
dec
mov
inc
pusha
fdivl
ret
es
inc
jo
add
jo
adc
or
push
addb
push
add
xchg
test
loopne
push
fs
add
popa
iret
testb
push
pop
push
daa
lock
in
jns
loop
pop
imul
mov
pop
xchg
inc
dec
xor
inc
inc
inc
mov
cs
inc
cmp
jns
popf
sub
test
ja
mov
adc
sbb
push
jne
dec
xlat
xchg
xchg
movsl
shll
or
xor
dec
pop
sbb
adc
adc
dec
xor
adc
and
sbb
in
ljmp
sarb
pusha
jmp
and
mov
mov
adc
or
divb
cmp
mov
loopne
add
jecxz
adc
jmp
shlb
adcl
das
lret
add
in
sub
sar
sbb
rolb
push
aam
dec
or
push
cs
pop
mov
jb
test
pop
add
outsl
and
nop
inc
sbb
rorb
mov
stos
adcb
shrb
fldl
sarb
mov
neg
jmp
or
je
mov
inc
mov
push
cli
xchg
push
push
mov
push
dec
divl
pop
mov
mov
inc
dec
or
or
jg
or
add
and
shll
pop
pop
xchg
rclb
ret
sbb
verr
cmp
and
sbb
mov
fwait
movsb
pushf
out
adc
addl
mov
sbb
pop
xchg
jge
mov
adc
jle
sub
fnsave
jge
add
or
ja
push
icebp
arpl
sub
jae
movsl
mov
cs
stc
shl
lea
jne
mov
push
movsw
jmp
lea
movzbl
cmp
je
or
popf
mov
lods
repnz
add
and
rolb
jo
or
rorl
sti
add
pop
pop
jmp
or
jp
sahf
jg
mov
das
dec
add
inc
inc
lods
or
push
lock
bound
mov
dec
xor
ret
dec
fsubrs
out
nop
mov
stos
ret
sbb
push
aaa
sarb
adc
cmp
jl
mov
xor
ret
add
rcl
insl
adc
fldenv
dec
mov
xlat
std
inc
movsb
je
sahf
and
cmc
adc
je
loopne
push
stos
xor
and
js
jmp
sub
out
sub
movsb
fbld
loop
mov
pushf
push
add
add
leave
mov
xchg
push
cld
inc
mov
mov
cmp
and
jns
xchg
lea
cmp
jb
mov
xchg
add
mov
fisttpl
mov
or
div
mov
inc
mov
je
dec
jne
loop
int
test
cmp
and
in
pusha
mov
mov
jecxz
lea
negb
jno
jne
ret
stos
adc
fwait
mov
pop
dec
ja
sbb
mov
loop
dec
add
lea
dec
test
cwtl
add
and
cmp
dec
push
sbb
adc
adc
std
adc
cmp
fld
lds
sub
hlt
testl
mov
add
and
and
adc
and
in
sub
sub
xor
sub
pop
addr16
push
sbb
and
sub
cmp
sahf
adc
xor
repz
sti
sub
xor
or
fcoms
movsl
rorb
js
dec
lds
dec
mov
ret
repnz
pop
fcom
and
or
mov
je
dec
or
sbb
mov
inc
dec
push
jne
hlt
gs
cs
xchg
pop
js
clc
adc
pop
sub
fxtract
sub
loope
fdivl
rcrb
sti
pop
in
dec
fldt
fstsw
fwait
mov
pushf
fbld
pop
jge
je
fidivl
loopne
jnp
add
out
add
inc
sub
mov
lret
in
pop
mov
xchg
inc
jmp
sub
mov
push
cli
fs
cmp
adc
cmp
jae
cmpb
jb
movb
outsl
or
dec
js
decb
and
mov
adc
xor
adc
cmp
sub
inc
xor
push
or
fcmovnb
ljmp
ret
pop
out
or
push
lods
xchg
rorl
je
push
push
xchg
xchg
adc
fiaddl
push
cmpl
push
das
adc
jl
mov
sub
jne
dec
add
dec
xor
fildll
cli
data16
in
jns
shlb
fidivl
cmp
fwait
sbb
xor
inc
sbb
sub
mov
and
jne
dec
jne
jmp
mov
add
stos
aas
and
mov
ljmp
enter
popa
shll
jbe
pop
jmp
add
je
mov
iret
mov
xchg
addr16
mov
adc
or
xor
jbe
add
cmp
and
data16
jmp
mov
jle
mov
pop
mov
mov
in
lret
pop
jno
bswap
inc
hlt
data16
je
iret
out
and
add
add
call
scas
dec
xlat
lea
push
jb
xchg
clc
dec
inc
cld
adc
sub
jmp
sbb
stc
and
add
jecxz
test
cmp
push
add
add
pop
loope
sbb
daa
mov
shll
stc
xor
stos
push
fists
sbb
adc
add
adc
insb
add
rcrb
adc
data16
push
ret
xor
xchg
mov
cmp
mov
inc
call
sbb
adcl
popa
incl
addr16
cmpl
cmp
in
in
xchg
xor
add
clc
mov
push
int3
and
shl
cmp
daa
pop
pop
mov
or
je
inc
mov
push
mov
or
or
or
jl
sub
add
mov
aam
nop
mov
lcall
adcb
cmp
lsl
rclb
lock
sbb
and
jb
int3
aas
ret
enter
adc
hlt
imul
sbb
fs
push
or
sbb
add
inc
xchg
lret
arpl
push
addb
addl
jmp
xlat
push
cmp
int
cs
dec
lds
push
filds
insl
add
insb
mov
jns
add
or
iret
shr
fisubs
inc
sub
inc
dec
add
and
daa
jo
into
mov
mov
inc
push
jmp
aam
inc
dec
push
push
das
loopne
ss
and
add
fnstsw
loopne
cmpsl
daa
or
in
adc
add
dec
xor
jl
xchg
shrb
xchg
mov
pop
js
insb
jmp
ss
out
mov
aas
flds
xchg
nop
pop
or
xchg
dec
push
lods
push
or
dec
and
and
add
pushf
cmpb
mov
imul
or
sub
pop
mov
mov
push
mov
and
loopne
jne
or
xchg
inc
dec
mov
push
lock
dec
lock
push
cs
ret
mov
push
mov
negl
pop
clc
add
cmc
movsl
mov
cli
dec
in
push
add
add
push
xor
mov
es
fs
inc
in
lock
inc
inc
testl
or
stc
insb
mov
push
clc
lahf
mov
add
rorb
in
imul
mov
daa
jg
outsb
dec
nop
push
clc
push
inc
dec
mov
clc
xor
es
shl
leave
xchg
adc
hlt
dec
xor
cmpb
fs
push
mov
or
sbb
cmp
imul
or
xchg
bound
sbb
bound
les
jp
dec
mov
mov
push
or
or
nopl
adc
push
outsl
cmc
cmpsl
loop
inc
into
loopne
aas
jo
mov
and
jo
xor
or
add
ret
xor
mov
std
testb
mov
fimull
aaa
mov
sub
and
pop
cmpsb
mov
add
cmp
sub
sub
pop
sahf
mov
and
inc
test
adc
xchg
leave
xchg
leave
adcb
test
jmp
dec
cld
andl
mov
outsb
fsubrs
mov
ds
or
xchg
scas
aaa
jle
sub
sahf
fcmovbe
notb
in
xor
gs
add
cltd
shl
and
mov
lea
xor
xor
push
js
pop
sub
dec
mov
push
mov
adc
add
push
sbb
rol
je
mov
popa
and
pop
je
add
xor
push
inc
pushf
jmp
xchg
fdiv
repz
push
pop
jge
mov
mov
fisubrl
pop
clc
sarb
push
add
loopne
adc
add
lahf
xlat
outsl
jne
insl
add
pop
aaa
std
push
fsubl
and
sub
je
inc
cmpl
shlb
cmpsb
jb
les
rol
xor
adc
mov
sub
int3
jo
fdivr
add
jl
mov
fdivl
dec
add
ljmp
pop
in
jmp
sub
adc
rcrl
into
mov
sti
dec
popf
jae
push
push
pop
push
loopne
lahf
rcll
sarb
div
push
loopne
inc
push
add
jne
push
push
fsubl
and
repnz
pushf
cmpsl
bound
or
push
or
stc
scas
adc
jo
jae
out
ja
aas
sbb
test
stc
pop
xchg
cmpl
sbb
in
hlt
or
ss
dec
xchg
and
aaa
add
sbb
ss
sbb
sub
mov
cmp
add
ret
out
std
push
sbb
xor
add
and
mov
or
cli
sahf
xor
mov
xchg
dec
rorb
fisubs
es
or
inc
movsl
add
dec
push
imul
lea
jle
sub
and
movsb
cmp
ja
adc
and
lods
or
jae
sub
push
mov
add
pop
mov
rcrb
clc
subl
mov
popf
add
or
mov
dec
lahf
mov
mov
sbb
test
call
add
jae
xor
aaa
add
xchg
jmp
xor
push
mov
jbe
js
loopne
fsincos
dec
xor
jne
xor
or
cmpb
lret
push
xchg
sbb
sbbl
cltd
sub
lret
or
gs
push
test
and
pop
adc
test
gs
and
fiaddl
dec
cld
adc
fisttps
bound
push
push
in
das
sbb
push
dec
dec
xor
sbbb
test
dec
sub
jecxz
js
fnsave
int3
pop
xor
adc
sub
dec
lods
push
insb
push
jns
pop
cmpsl
jge
gs
push
mov
pop
movl
pop
test
out
mov
sbb
lods
push
sbb
les
or
jne
cmc
sti
xchg
jbe
adc
iret
es
dec
les
sbb
xchg
out
add
enter
pop
or
or
dec
inc
jb
cmp
pusha
sub
and
inc
adc
xlat
daa
shlb
or
daa
push
call
inc
or
stos
inc
js
adc
mov
xchg
sub
arpl
es
mov
adc
mov
jns
fists
test
jp
cmp
jo
mov
xchg
push
adc
add
xchg
pop
jp
sub
mov
lea
mov
inc
inc
stc
in
ljmp
std
xor
or
adc
roll
lods
jle
xchg
pop
mov
jp
jb
push
push
or
divl
test
push
or
call
mov
cmc
adc
adc
jmp
lods
push
daa
mov
or
int
push
mov
xchg
cmpsl
in
shlb
test
in
sub
cmp
jnp
adc
sub
orl
insb
mov
testb
lock
dec
and
cmc
lock
test
cli
sbb
ss
jl
shrb
cli
popa
xchg
pop
xor
out
or
arpl
add
jecxz
hlt
addr16
stos
cmp
xchg
sub
add
sti
push
jg
dec
mov
sub
sbb
or
mov
and
adc
mov
push
call
jg
in
push
mov
pop
pop
out
jp
hlt
jge
dec
je
push
adc
ljmp
or
nop
cmc
divl
jmp
sysenter
jmp
mov
jne
jmp
out
lea
adc
inc
add
xchg
xor
jp
jl
cltd
fldl
and
scas
ret
adc
sbb
loopne
fmul
mov
mov
mov
inc
fidivrs
call
mov
or
pop
lcall
call
dec
dec
add
imull
orb
add
mov
jmp
xorb
and
and
inc
dec
push
in
mov
pop
shll
jo
mov
add
pop
test
jb
lods
add
pop
push
stc
inc
in
cmp
je
jmp
xor
inc
jae
jb
xor
and
sbb
mov
xor
roll
or
or
arpl
inc
mov
test
adc
pop
pushf
add
inc
pop
mov
int
sub
mov
lret
mov
inc
xchg
or
sete
das
xchg
cld
pop
jmp
sbb
les
add
loopne
mov
push
out
sbb
push
mov
ficompl
in
sbb
fs
mov
and
mov
cmp
imul
push
xor
jnp
jae
adc
xchg
dec
adc
mov
lods
shlb
loope
dec
xchg
movsb
out
pop
subl
xor
in
sub
nop
jge
mov
pushf
lcall
add
mov
loop
into
pop
orb
cmp
adc
dec
mov
dec
cmp
subl
push
adc
pop
or
jb
je
dec
push
or
fildl
cld
push
movsb
hlt
cmp
jle
pop
imul
jl
out
add
in
lock
or
pop
mov
adc
popf
mov
leave
and
push
insl
inc
sbb
int3
jmp
push
subl
sbb
fsubs
shrb
push
add
cs
scas
aaa
in
and
mov
popf
sub
xor
cmp
push
jl
out
jmp
pop
sub
out
das
sbb
push
pop
xor
push
mov
lds
in
aad
xor
cld
hlt
and
shufps
adc
dec
mov
inc
xor
sahf
xchg
lods
inc
xor
inc
pop
or
dec
mov
sbb
enter
loopne
adc
xor
push
mov
shl
cmp
push
sub
push
or
ror
lods
fwait
lods
orl
or
test
pop
add
mov
xor
cmp
lods
aas
xchg
loopne
cmp
jne
scas
ret
outsl
cmp
sub
adc
iret
push
es
ds
cmpb
ljmp
fdivrs
push
xor
sub
push
scas
imul
mov
shlb
in
mov
fildl
sub
pop
inc
dec
jne
add
cmp
imul
mov
push
push
cli
add
lea
mov
push
cwtl
lock
sbb
push
push
dec
push
pop
cmp
jge
rclb
adc
add
das
mov
jb
cmp
sub
push
ret
daa
popf
sbb
cmp
stc
push
daa
test
push
mov
cmp
mov
mov
jo
mov
or
and
pushf
aad
scas
jo
dec
syscall
mov
mov
loope
inc
sub
xor
push
sbb
nop
das
add
inc
jne
jg
lods
fistpll
inc
test
ret
jbe
cmovle
mov
test
and
pop
and
jo
ret
sbb
cmpsb
pop
push
fisubs
add
or
je,pn
and
sub
mov
or
adc
mov
mov
or
mov
cmp
jne
cmp
push
jle
ficoms
sbb
cmpsb
stos
xor
cld
popf
push
mov
add
lret
roll
gs
leave
test
sub
mov
push
cmp
stc
push
cmp
inc
cmp
and
cld
jns
test
idivl
push
je
and
sbb
push
or
mov
adc
rolb
jbe
cli
sbb
mov
fdivl
push
add
add
xor
lea
jae
dec
sbb
add
xchg
lods
add
cmp
test
fcomps
xor
pop
ret
adc
test
ret
fmuls
and
xor
adc
popf
popf
dec
cmp
xchg
or
add
push
leave
mov
and
pop
ret
and
clc
push
adc
jo
add
push
add
idiv
pop
popa
adc
xor
add
hlt
dec
push
add
push
xchg
add
sub
push
or
sub
sbb
pushf
mov
pop
cs
add
sbb
lret
push
or
decb
pop
jne
insb
pushl
movl
add
mov
lods
or
or
pushf
add
cmc
mov
sbb
add
incl
pop
movsl
or
push
add
mov
call
loopne
jmp
pop
rep
movb
rolb
fdivs
insl
test
xchg
lea
les
mov
out
jmp
daa
jns
fnstsw
pop
cmp
mov
scas
push
sarb
add
lea
outsl
inc
in
inc
sbb
sub
adc
cmp
out
lods
cli
scas
push
inc
cmc
sub
inc
push
xor
testb
cmpl
mov
icebp
fcmovnu
pop
cld
dec
movsb
sbb
add
lcall
pop
jne
inc
adc
cmp
and
adc
test
adc
fcoml
jecxz
mov
rcrl
sbb
lods
gs
mov
jnp
pop
sbb
nop
xor
xchg
xchg
inc
ret
mov
inc
fldt
out
xchg
or
or
dec
rorb
testb
aad
sbb
repnz
add
lock
push
push
sbb
sbb
ss
inc
rolb
dec
sub
jbe
repnz
add
mov
xorb
adc
test
or
xchg
push
xor
inc
jne
jae
in
sti
in
sub
sub
je
pop
and
out
or
mov
push
popa
dec
push
jmp
mov
das
add
pop
add
push
les
pop
and
stos
inc
add
cmp
mov
in
es
dec
push
or
adc
jl
adc
xchg
inc
mov
or
pop
popf
cwtl
mov
imul
mov
jbe
fdivrl
fdiv
push
push
and
adcb
mov
insb
jl
inc
ss
shl
shr
or
mov
or
xor
mov
ljmp
inc
rcll
ret
or
mov
scas
and
push
rol
mov
adc
cmp
or
inc
imul
mov
ret
inc
jmp
pop
pop
pop
inc
pop
and
ret
pop
push
jo
sub
mov
or
pop
int3
dec
add
enter
addr16
jne
pusha
int
aam
stc
test
in
js
loop
sahf
sbb
mov
cmpb
addr16
roll
adc
xor
or
push
je
pavgw
pop
inc
mov
sbbl
arpl
lea
int3
ss
pop
dec
adc
jmp
cmp
lea
push
push
ret
push
movsb
mov
cmp
mov
add
inc
fwait
jbe
mov
cli
cmp
jne
popf
sub
dec
mov
lods
imul
adc
inc
in
adc
dec
pop
popf
mov
jl
cmpsb
outsl
orl
sbb
push
popl
mov
rcrb
in
push
dec
pslld
mov
cmp
ret
sub
pop
mov
xchg
mov
add
shlb
adc
adc
mov
xor
mov
pop
push
or
add
pop
xchg
cmp
loopne
or
je
push
and
mov
hlt
push
mov
adc
inc
dec
fdivrs
inc
lret
or
rorl
fcoml
mov
mov
repz
dec
inc
gs
add
pushf
movsb
lret
or
adc
arpl
lea
cmp
add
inc
rclb
mov
test
fldenv
cmp
lcall
enter
mov
pop
sbb
into
dec
mov
cmc
nop
rorl
inc
adc
jno
inc
or
push
cmp
lds
nop
sub
inc
lret
dec
dec
pop
sbb
dec
xchg
iret
lods
mov
hlt
lods
inc
lds
inc
or
mov
lea
pop
enter
aas
je
pushf
push
xchg
fwait
mov
in
mov
sbb
inc
inc
or
sahf
pop
sub
pop
mov
cmp
adc
cmpsb
imul
shl
in
loopne
rcll
test
mov
or
sub
push
in
rcl
es
sub
pusha
xchg
mov
call
xorl
out
das
add
or
push
xchg
das
loope,pt
out
mov
fsubs
mov
mov
sarb
adc
rol
scas
mov
adc
jno
jb
xchg
pop
or
imul
mov
in
pop
fsubrs
pop
dec
sbb
inc
test
jecxz
imul
ds
popa
pop
add
jl
mov
and
jge
cld
inc
lcall
and
test
cwtl
dec
cmp
ffreep
mov
sahf
out
imul
push
clc
adcl
and
js
or
mov
and
pusha
aas
sub
movsb
rolb
cli
sub
or
adc
add
sbb
adc
add
pop
adc
scas
xchg
movsl
adc
daa
mov
out
xchg
jne
lcall
xor
mov
xchg
mov
push
lcall
mov
dec
jne
or
dec
push
jo
jne
rclb
add
aas
xor
xchg
pop
mov
ja
add
xchg
adc
push
clc
nop
inc
mov
cmp
imul
add
cld
cmpsb
pop
cmpl
mov
pop
push
movsl
jp
cmp
inc
incb
adc
arpl
or
mov
push
stc
sub
add
or
ja
shlb
leave
push
adc
daa
iret
in
stos
or
add
push
rorb
dec
ss
inc
aam
cmp
xchg
int
pushf
xor
sbb
dec
xor
cltd
push
sub
mov
ja
push
int3
pop
test
mov
subb
xchg
or
and
mov
aaa
in
ja
push
pop
adc
fcoml
aam
or
outsb
repnz
pushf
pop
loop
sahf
mov
das
in
mov
clc
repnz
sahf
negl
cs
in
push
lods
daa
iret
leave
jae
xor
adc
sahf
cmpsb
movsb
das
loopne
pop
fdivl
jns
fmuls
aam
fs
cmp
iret
rcrb
and
mov
pushf
insb
dec
mov
outsb
iret
leave
jae
mov
in
jns
test
movsb
in
mov
mov
inc
jae
outsb
iret
cwtl
adc
test
nop
js
iret
leave
cmp
push
ja
clc
xor
xchg
cmp
sub
aam
aam
test
mov
mov
mov
addb
mov
jmp
in
sarb
inc
mov
xor
adc
xchg
enter
or
jl
and
adc
or
add
push
sub
push
nop
sub
mov
movsl
adc
cmp
or
xchg
xchg
push
push
add
fdivs
add
jo
add
add
sub
adcb
mov
in
js
inc
sub
xchg
pushf
xchg
inc
jecxz
fisttps
pop
test
out
nop
inc
popf
sahf
xchg
inc
pusha
je
ljmp
jmp
movsl
sahf
aas
ljmp
test
scas
cmpsl
ljmp
ja
add
je
daa
test
add
xor
add
or
push
lahf
fdivrp
outsl
scas
clc
or
imul
ds
add
loopne
add
jae
inc
in
das
sar
es
fbstp
ljmp
aam
lods
and
imul
sbbb
fbld
call
pop
out
pop
clc
fistpl
mov
pop
sbb
xchg
pop
jno
movsb
mov
ljmp
add
xchg
ljmp
sbb
mov
cld
jns
xor
lods
push
xor
je
popa
cmp
jno
arpl
stos
add
std
or
xchg
add
popa
sbb
fwait
psubusw
std
xor
pop
lods
call
fwait
add
mov
pusha
popa
aad
fs
movb
push
aam
int
fnstenv
hlt
inc
es
insb
ss
dec
std
push
lock
incb
add
imul
mov
in
imul
inc
mov
out
add
fcoms
xchg
mov
mov
pop
mov
ret
pop
sub
mov
int
test
sti
jo
pop
orb
jg
xor
jbe
pushf
es
mov
adc
imul
mov
leave
pusha
xchg
inc
scas
jno
dec
mov
insb
es
xchg
bound
ss
int
inc
mov
add
jns
data16
iret
inc
fisttpl
inc
rcll
fldcw
rclb
les
pop
fidivrl
ds
aam
aad
shr
xlat
jbe
fisubl
lret
jmp
es
data16
pusha
jno
inc
stos
ljmp
sti
add
lods
pushfw
je
adc
mov
xor
dec
mov
mov
and
jle
decl
jmp
jmp
popa
in
push
aas
pop
push
lock
sti
pusha
fiadds
dec
or
psubusb
sub
adc
sub
loopne
test
fs
mov
ficoml
pusha
icebp
arpl
dec
in
insb
ss
inc
movl
imul
jo
inc
clc
cli
mov
sbb
pushf
data16
dec
pushf
outsl
mov
out
xchg
sbb
cmpsl
jmp
mov
repz
retw
rcrl
inc
sbb
push
insb
ss
int
pop
in
jno
push
int
mov
rclb
pop
jmp
pop
repnz
inc
fbstp
in
mov
pop
mov
jle
arpl
ficompl
lahf
data16
xchg
xchg
xor
sbb
pop
mov
pop
lock
cmp
lods
pop
ss
out
nop
or
mov
jg
lock
stos
cmp
inc
or
push
mov
mov
cmp
jae
jb
add
sahf
xchg
aas
mov
call
jo
jge
dec
outsl
inc
jp
push
dec
pushl
push
dec
dec
push
inc
inc
insl
arpl
jno
pop
es
pusha
pusha
push
pop
insl
dec
jnp
dec
insl
cld
mov
jmp
inc
imul
arpl
jb
imul
outsl
sub
pushl
fldt
xchg
adc
jecxz
inc
ss
lahf
mov
sbb
jge
clc
add
xorl
xor
cmp
repz
call
rclb
or
and
sub
push
and
xchg
cli
push
cld
jg
cmp
pop
outsb
sbb
pop
dec
je
xchg
inc
lock
repz
sbb
negl
ljmp
add
leave
and
add
cwtl
xchg
jae
aam
and
cmp
jmp
mov
lcall
lret
outsl
jns
in
jo
out
imul
lcall
jbe
adc
js
jl
ja
notl
fidivrs
sbb
std
incl
dec
popf
popa
mov
call
pushf
push
dec
popl
add
dec
roll
push
sub
mov
sbb
fldt
lcall
addl
pusha
jg
mov
xchg
mov
mov
popf
inc
test
stos
ja
dec
mov
jns
jnp
mov
sbb
jp
lret
sbb
inc
movsb
lret
stos
xchg
ret
decl
fdivrl
cmp
scas
stos
sub
fisubrl
jmp
mulb
in
xor
idiv
jmp
ret
dec
or
adc
cmpb
xchg
push
pushl
and
in
cmpsb
mov
pop
icebp
insb
pusha
rol
mov
faddl
fists
add
movsb
or
fs
pushl
jmp
sbb
pop
mov
imul
mov
xor
decl
paddq
pop
test
mov
in
cmpsl
and
pop
xchg
push
mov
sub
mov
decl
and
movsbl
mov
or
push
cmpsb
push
and
decl
imul
int
test
push
les
sub
insl
cmp
dec
adc
mov
push
fs
pop
cmp
cs
imul
les
ljmp
mov
fbstp
int
push
mov
sub
and
pushf
aas
arpl
cmp
mov
flds
clc
pop
es
out
ret
ret
and
das
into
sbb
call
xor
arpl
adc
scas
and
out
lods
sub
into
lahf
or
jmp
inc
pop
xchg
cwtl
xchg
jmp
mov
fs
lahf
jb
adc
incl
sahf
in
mov
test
lock
fs
jns
repz
push
sti
mov
dec
fadds
ljmp
sub
jne
push
mov
outsl
test
arpl
adc
hlt
in
outsb
andb
shll
ret
or
jne
mov
in
pop
fdivl
inc
mov
pop
cmc
fisubl
mov
testl
lods
ljmp
clc
incl
xchg
addl
pop
mov
cs
mov
push
sbb
add
jmp
push
mov
call
sbb
roll
cmp
fidivrs
lret
rol
xor
incl
pop
jge
cmp
adc
out
mov
in
mov
js
fisubs
push
pop
into
cmpb
mov
call
sub
addr16
mov
fwait
add
or
jg
out
pop
sub
dec
test
mov
out
out
xor
mov
jecxz
xor
das
clc
call
push
jle
adc
cmp
movsb
retw
xlat
ss
es
stos
clc
jmp
loop
mov
leave
sub
ret
and
mov
mov
ljmp
mov
mov
mov
push
add
int
sbb
shlb
call
ljmp
xchg
loop
mov
sbb
loope
repz
incl
cmc
outsb
or
aaa
adc
loope
dec
sahf
xor
and
inc
push
mov
ret
cmp
ljmp
push
or
adc
xchg
mov
jns
aaa
btr
inc
call
cmp
push
shl
stos
clc
inc
jnp
neg
mov
add
pop
mov
popf
adc
pop
xor
decl
push
mov
pop
ficoms
jp
hlt
mov
push
notb
dec
pop
fwait
pushl
lods
out
es
ud1
push
xlat
sahf
es
repnz
jmp
cmp
sbb
in
xor
push
add
add
psubusb
jbe
mov
test
add
push
push
sar
pushl
mov
or
inc
std
popa
mov
cltd
mov
push
inc
data16
jmp
jo
fwait
movsb
cwtl
sbb
xchg
jge
rcr
pushf
inc
pop
sahf
movsb
ljmp
mov
xchg
mov
push
jg
jnp
repnz
outsb
sub
push
fisubrl
shll
jge
call
cmp
ficoml
ffreep
mov
addr16
scas
inc
ds
cmp
mov
insl
aad
je
ljmp
aam
mov
loope
je
aad
mov
out
test
inc
js
lcall
cmp
xor
push
insb
nop
xchg
push
imul
in
xchg
dec
fdivrp
sbb
inc
sbb
call
mov
cmpb
imul
mov
js
mov
push
jecxz
iret
jecxz
lcall
test
push
xlat
push
cmpsl
out
inc
cmp
and
xchg
lahf
daa
aaa
cwtl
dec
xchg
jmp
incl
inc
adc
or
cltd
inc
mov
mov
lret
push
pusha
in
jecxz
mov
das
cld
loope
aam
cli
jmp
jae
xchg
test
dec
shll
pop
pusha
add
aas
pusha
imul
decl
jmp
jne
push
mov
dec
repz
cltd
sarl
cmc
cmpsb
jmp
loop
decl
fldl
cmp
sub
pusha
mov
dec
cmp
daa
cmp
aaa
and
decl
shlb
cli
pop
and
pop
sbb
ljmp
in
hlt
cmc
iret
in
loop
jmp
or
nop
cmp
sbb
decl
sub
ret
xlat
mov
lock
mov
cltd
sbb
lcall
mov
pushf
pushf
testb
mov
xchg
jmp
push
sti
cmpsb
lock
es
in
mov
add
jmp
clc
push
mov
daa
dec
cwtl
adc
xor
jmp
xadd
imul
cltd
rclb
cltd
test
xchg
in
inc
idivb
push
cmp
jb
and
and
xor
inc
xchg
sub
aas
adc
nop
and
add
or
testl
ret
enter
add
jne
outsl
mov
cwtl
dec
inc
mov
fwait
sbb
xchg
xchg
js
push
adcl
repnz
sbb
nop
add
xor
mov
sbb
shld
test
movsl
or
jbe
inc
push
add
push
pop
outsb
adc
mov
cs
dec
add
sub
push
push
xor
in
push
xchg
js
fstps
shl
jl
add
dec
int
cmp
mov
in
inc
pop
push
out
sbb
cwtl
mov
aas
and
popf
and
fsubl
ss
daa
mov
xor
fsubrs
subb
mov
push
sub
push
sub
fidivs
xor
int3
mov
cmp
xor
xor
filds
es
xchg
push
jo
add
jnp
imulb
aas
pop
invlpg
pop
sbb
ss
lods
mov
jns
fmul
dec
scas
jbe
or
sub
inc
push
insb
mov
shll
js
nop
push
add
test
sbbb
pop
fisubrl
sbb
cmpsb
enter
add
add
push
rcrb
int3
mov
cmp
aas
or
bound
add
call
mov
adc
adc
sbbl
inc
push
xor
xchg
movl
pop
ucomiss
push
dec
cmp
mov
loopne
lcall
ds
mov
das
or
arpl
push
imul
in
inc
xorl
push
dec
out
popa
outsl
sti
jo
or
sbb
push
dec
cmpsl
imulb
data16
jae
push
dec
nopl
inc
outsl
insb
fs
sbb
popa
pop
dec
insl
and
insb
mov
add
or
cmc
subl
pop
and
pushf
insb
pop
cmp
sub
clc
rorb
add
fidivrs
fnsave
xor
adc
xor
or
xor
xchg
mov
pop
mov
adc
xor
adc
inc
adc
push
inc
daa
lods
jge
fdivrl
in
dec
clc
lock
cmove
cmp
dec
dec
sub
pop
add
andps
jae
mov
sub
pop
aas
fsubrs
adc
outsl
push
and
adc
inc
and
adc
xchg
popa
jg
loopne
aaa
hlt
out
xor
sub
and
adc
add
and
sbb
imul
dec
pop
sub
pop
and
or
sub
or
adc
push
sahf
lret
xor
out
push
test
sbb
add
jge
mov
mov
add
inc
jmp
add
pop
dec
xor
data16
sub
mov
xchg
pop
dec
ja
jl
jp
push
adc
inc
push
cmp
cmp
fstl
sbb
test
mov
adc
pop
lahf
daa
aaa
jmp
movb
divl
jne
jne
jl
cmp
roll
lock
jae
push
jmp
push
jns
pop
push
cmp
jmp
push
jb
jno
pop
sti
jl
call
mov
or
dec
out
jle
adc
stos
in
ss
sub
jbe
test
aaa
in
call
pop
movswl
call
xchg
pop
push
andl
sub
fcomps
xchg
xor
push
loope
je
adc
pop
outsl
inc
and
insb
call
xchg
test
call
scas
cmpsb
test
jns
call
sub
leave
mov
xchg
sub
mov
pop
jg
pop
ret
jmp
pop
xlat
popa
mov
js
cmp
inc
arpl
mov
lcall
and
les
fidivrs
dec
mov
lock
inc
insl
sbb
js
and
cmpsb
inc
pop
push
js
cbtw
or
stc
nop
nop
stc
jnp
jnp
dec
mov
and
push
mov
jp
scas
push
imul
or
jae
sub
ja
call
push
pop
jbe
lcall
add
dec
pop
pop
add
push
pop
aaa
jno
dec
inc
ljmp
aas
pop
cmpb
add
pop
and
dec
mov
xor
sbb
and
into
movsb
cmpb
jne
xchg
sahf
out
mov
adc
js
sbbb
lods
dec
roll
push
pop
ds
sbb
xchg
rcrb
xor
nop
xor
dec
cmp
add
movsb
sbb
dec
insl
mov
cltd
pop
aas
xchg
pop
and
pusha
push
jo
xorb
and
nop
and
leave
inc
cwtl
mov
mov
pop
and
leave
shl
lock
adc
pop
and
xor
leave
inc
inc
pusha
inc
jb
pop
andb
loopne
add
and
cs
mov
and
add
shlb
mov
xchg
pop
leave
inc
lock
add
loopne
push
mov
adc
shlb
adc
orb
or
or
jo
sbb
pushl
sbb
and
push
dec
add
int3
enter
enter
fcomp
fxch
in
cli
loopne
jecxz
in
jmp
in
or
pop
jns
inc
adc
add
jl
leave
pushf
or
ret
mov
adc
repnz
push
and
sbb
add
jg
lret
xchg
and
inc
mov
call
push
jle
test
out
sub
jecxz
out
jle
mov
lds
mov
jbe
imul
cmp
scas
sub
adc
rep
dec
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
mov
or
push
push
int3
into
sbb
rorl
mov
call
popa
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
sti
ljmp
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
stos
pushl
mov
or
mov
pop
out
sub
imul
divl
decl
lock
xor
cmp
push
mov
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
jmp
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
jg
cmc
dec
inc
bound
ds
push
cmpsb
scas
mov
jmp
addl
cmp
xor
in
cmp
sahf
xchg
pop
jmp
push
movsl
mov
popa
mov
fsubs
addr16
repz
mov
subb
add
jmp
mov
push
pusha
les
outsb
bound
xor
loope
icebp
add
xor
xlat
lods
jle
sbb
add
and
lcall
xor
xor
inc
inc
inc
inc
inc
inc
dec
or
and
jb
in
pop
or
or
sub
sub
sbb
inc
sub
inc
pop
push
push
and
add
jns
mov
les
shrb
xchg
and
cs
cmp
in
add
adc
decl
sub
xchg
xchg
inc
pop
cmp
dec
add
pop
cmp
in
insb
add
jl
nop
cmp
mov
sbb
cmp
mov
and
cmp
sbb
add
xchg
das
pop
push
or
sub
sub
sbb
xor
fcmovnu
fstps
outsl
sbb
sbb
jg
jo
andb
je
cmp
js
fwait
popf
fsubrl
js
jg
pop
push
cmp
xchg
push
aam
js
js
js
sub
jo
jl
adc
dec
sbb
mov
mov
pop
inc
psubsb
dec
pushf
inc
jl
cmp
jl
sbb
dec
push
mov
mov
mov
sub
and
mov
push
decl
cltd
push
adc
out
add
mov
jno
pop
int3
dec
jl
inc
sbb
sub
mov
pop
jae
add
imul
jnp
xor
das
pop
push
xor
and
cwtl
xor
add
cmp
mov
lar
jb
add
jb
or
or
jb
or
push
cmovnp
add
sbb
add
add
lods
jnp
cmp
sti
add
push
xor
xor
fsubp
cmp
inc
cmp
add
cmp
rorl
xor
xor
ja
ror
xor
dec
sahf
out
sahf
xor
xor
xor
repz
jge
rorb
xor
xor
sbb
sahf
ja
mov
add
xor
push
out
xor
bound
jns
mov
dec
add
xor
stos
cmp
jo
mov
dec
add
addl
arpl
jns
mov
aaa
add
cmp
rol
pusha
rep
arpl
loope
fistpll
add
mov
cs
mov
sti
cmp
fstpt
sub
insb
dec
pop
dec
inc
jns
out
inc
inc
inc
inc
inc
iret
push
xor
jle
inc
inc
adc
repz
inc
inc
out
sahf
mov
push
mov
inc
inc
fiadds
cmp
repz
inc
inc
inc
inc
sahf
cmpsl
arpl
inc
inc
inc
and
inc
iret
repz
ds
inc
inc
inc
inc
jmp
outsb
inc
in
sahf
out
inc
inc
inc
inc
cmp
or
and
repz
inc
inc
sahf
out
cmp
inc
inc
inc
inc
inc
sahf
add
push
inc
inc
xchg
out
inc
inc
inc
stos
inc
js
pop
cmp
mov
jo
push
inc
jnp
out
fiadds
jle
inc
inc
inc
jno
clc
sbb
stos
xor
inc
lret
push
jns
mov
jle
inc
clc
sbb
stos
loope
jno
xor
rol
inc
jnp
inc
dec
sarl
inc
adc
pop
jl
mov
stos
xor
inc
lret
in
sti
out
arpl
jae
add
inc
push
inc
and
cmp
xor
xor
fisubl
jae
mov
inc
or
inc
loope
cmp
sub
inc
dec
inc
sbb
mov
jnp
insb
adc
add
jns
jp
cmpsl
repz
lods
push
mov
iret
repz
int3
aam
in
sahf
addr16
cld
jnp
or
jns
out
sbb
sub
cmp
jns
out
dec
push
pop
fs
out
sahf
insb
je
test
pushf
movsb
lods
mov
inc
adc
xchg
inc
inc
es
gs
out
fiadds
lock
sahf
mul
xor
shll
out
jns,pn
mov
mov
in
lock
int3
push
or
idivl
xchg
into
lock
jg
je
out
xchg
lea
out
popf
mov
mov
xor
jp
out
out
mov
adc
addr16
aam
int3
fdivl
cld
cmpsb
mov
pcmpgtd
call
mov
cmp
subl
subl
mov
fs
movsb
xchg
push
pop
cs
mov
lods
dec
ja
pop
ret
and
sub
pop
out
mov
pushf
jp,pt
inc
out
mov
dec
sahf
sub
imul
dec
cld
test
popa
jo
xlat
iret
mov
xchg
and
push
in
out
sbb
test
movsb
push
jle
fnstsw
jne
lods
push
inc
mov
push
in
into
inc
pop
adc
add
add
stos
adc
repz
xor
nop
pusha
add
inc
dec
pop
jo
inc
in
cmp
add
push
adc
jns
insb
and
sahf
xchg
mov
pusha
outsl
imul
xor
cs
insb
xchg
inc
or
pop
mov
adcb
cltd
inc
jns
push
ss
cmp
outsl
push
mov
sub
lea
adc
test
sbb
pop
add
push
hlt
push
jo
add
xor
push
test
pop
push
cmpsl
incl
inc
add
inc
add
or
push
push
sbb
sub
out
dec
push
into
mov
ret
add
daa
add
mov
add
add
add
xor
mov
jb
add
or
in
jmp
dec
add
add
add
and
jbe
add
fs
dec
add
jbe
mov
add
xchg
sbb
add
ficomps
lret
imul
loopne
mov
sti
add
add
add
add
hlt
add
cmpsb
addb
xor
imul
mov
jo
add
ret
xor
addl
decl
in
test
cmp
push
add
in
mov
push
add
inc
push
mov
lcall
dec
fcmovnu
add
mov
fnsave
add
mov
outsb
xor
ja,pt
mov
lock
adc
mov
sbb
idivb
rolb
je
fwait
pop
add
add
int3
mov
pop
pop
mov
es
fdivr
add
loope
sbb
xchg
cmpsl
sbb
add
add
data16
insb
das
js
dec
ljmp
roll
sbb
lret
mov
xchg
push
add
into
pop
rolb
or
sub
sbb
add
mov
lret
jb
cs
inc
lods
jl
push
imul
fiaddl
inc
inc
loopne
gs
add
sbb
sar
mov
repnz
adc
aaa
add
dec
mov
rorl
lods
add
js
in
fsubl
mov
pusha
xor
cwtl
std
add
incb
push
cmp
cmpb
mov
lds
or
cmp
sbbl
enter
loope
or
clc
aaa
mov
add
out
xchg
sub
mov
scas
addl
pusha
add
lcall
sbb
mov
mov
push
add
cwtl
fadds
mov
mov
ss
add
stc
inc
mov
sbb
add
mov
or
mov
imul
lds
inc
lcall
push
add
sbb
sbb
mov
add
mov
gs
mov
hlt
mov
lods
cwtl
cli
pop
push
push
mov
jns
mov
cmp
push
jno
push
add
ljmp
mov
add
xor
ret
out
add
xchg
je,pt
sbb
out
pushf
inc
jle
or
rcr
movsl
aaa
push
push
ss
mov
ret
add
fidivs
mov
mov
inc
ss
mov
add
fdivl
add
jbe
cmp
mov
ficoms
adc
pushl
add
add
or
sub
and
sub
lods
push
cmpsb
xchg
add
push
fsubs
sbb
fldt
push
pusha
int
and
mov
fadd
xchg
cmpsb
sarb
rcl
je
loop
cmp
or
shrl
shll
jl
add
rolb
out
pop
aam
jl
fmulp
enter
mov
int3
mov
add
mov
sbb
scas
adc
or
nop
outsb
push
fnstcw
test
add
enter
push
add
sbb
fldt
lcall
and
inc
mov
fsubp
dec
jo
inc
pop
xchg
mov
or
add
ficoml
pop
out
sbb
lcall
clc
add
push
push
jno
fs
sbb
mov
fstpt
cmp
sahf
clc
mov
andb
test
movsl
jb
sub
je
cs
xchg
xchg
cmpsl
push
push
in
push
cs
ret
mov
pop
mov
out
rcrb
xchg
aad
movsl
stc
repnz
mov
and
ss
sbb
add
je
add
push
push
mov
xchg
mov
jl
jg
pop
or
int3
push
fidivrl
and
adc
jo
push
cmp
cmc
sar
jnp
sbb
incl
add
add
push
int
jbe
xor
insl
ljmp
push
sub
inc
or
nop
insb
mov
das
push
jne
incl
xchg
push
add
add
pusha
sub
stos
sub
js
sub
push
fstpl
out
sub
test
loopne
fmul
ret
xlat
cmp
pop
adc
push
add
cwtl
js
inc
push
push
rclb
call
mov
pop
mov
call
add
jecxz
lods
lea
mov
insl
sub
clc
in
imul
sub
cmc
cmpsb
xchg
push
push
fistpl
popf
push
mov
aam
xchg
push
jne
or
xor
mov
fs
dec
inc
push
mov
mov
mov
lcall
fs
inc
pusha
push
int3
dec
add
add
push
push
and
pop
pop
decb
cmpsb
add
xchg
and
out
rorl
incl
mov
sbb
adc
add
lahf
pop
repz
push
insb
cmpsb
mov
add
jmp
sub
push
dec
sarb
call
mov
lods
inc
jg
or
ja
push
ds
adc
cmp
jo
in
push
mov
scas
inc
fmull
cmpsb
xor
add
sbb
sar
jbe
shlb
cwtl
jge
push
xor
das
fcomps
sub
pusha
repz
xchg
add
inc
xor
incb
add
fs
jg
addb
cmpsl
add
mov
cmpsl
mov
aam
leave
pop
xchg
mov
mov
sbb
lock
cmp
add
mov
int3
fstpt
pushf
add
add
cmp
add
add
add
dec
adc
ljmp
and
outsl
xlat
sub
into
sbb
add
add
loope
aam
or
dec
mov
pusha
push
add
xchg
sub
adc
addb
decl
add
push
sbb
mov
push
inc
jp
shlb
jae
sub
aas
adc
mov
lock
stc
pop
cmpsb
mov
outsl
mov
enter
push
jg
add
and
aas
add
or
push
cmpsb
lods
ret
mov
cmpsb
add
lods
or
pop
mov
push
mov
incb
daa
stc
add
aaa
jmp
dec
add
and
adc
add
add
leave
test
fisttpl
mov
adc
aam
sub
add
aam
sbb
fimuls
out
push
into
mov
dec
add
loope
subb
xchg
adc
sub
mov
test
push
ljmp
aad
shrl
frstor
int3
mov
adc
icebp
pop
out
cld
mov
mov
mov
add
jl
push
sub
jo
adc
or
or
test
fs
lcall
add
sbbb
and
clc
jo
dec
mov
add
aas
add
add
int
shll
push
shll
fwait
add
add
dec
movsl
or
pusha
sbb
negb
popf
lods
inc
jo
xor
inc
dec
int3
or
les
pusha
push
sahf
dec
push
iret
ss
cmpsl
shlb
sub
test
and
divl
cmpsl
repnz
cmpsl
rclb
pop
outsb
jns
mov
adc
inc
sub
stos
or
push
inc
xchg
stc
out
into
add
mov
xchg
fs
xchg
pop
mov
mov
and
or
push
inc
frstor
xor
pop
imul
cmpsb
scas
dec
lahf
mov
adc
xor
decb
int3
add
jae
and
stos
cld
xchg
dec
out
dec
mov
fwait
lcall
dec
or
insb
movsb
aaa
pop
rcl
scas
inc
sbb
xor
cli
pop
std
push
push
aaa
incl
scas
mov
mov
imul
cld
aad
sarl
ficoms
xor
or
add
dec
add
add
mov
subb
insl
push
jbe
xor
sub
sbb
inc
test
pop
or
rcrb
jle
iret
xor
inc
incl
lds
mov
push
sbb
lock
push
mov
adc
rclb
fstl
fstpt
rep
test
movsb
lret
incb
add
or
popa
push
xor
and
int3
mov
mov
out
sahf
add
add
cld
aaa
decl
add
ljmp
pop
add
add
test
add
mov
add
jg
push
jo
iret
iret
aam
inc
push
add
add
testb
adc
cld
iret
mov
aad
add
add
xchg
dec
sub
and
add
cld
iret
fists
add
loop
cmp
aam
add
add
add
iret
mov
sbb
add
loopne
ret
ret
add
and
stc
das
pop
add
out
add
sbb
rclb
popa
add
scas
add
pop
add
add
shll
xor
push
stc
inc
clc
or
orb
push
mov
sbb
push
out
aas
faddl
lea
stc
add
lahf
add
hlt
mov
lock
int
mov
add
jae
insl
ret
add
subl
push
push
cmpsb
inc
stos
out
stc
incb
repz
add
add
sub
dec
add
das
adc
ds
fmuls
add
aaa
iret
cmpsl
adc
and
in
in
lahf
out
stc
or
out
fdivrl
and
lock
out
repz
fwait
outsl
mov
jbe
jb
cli
outsb
sahf
dec
jae
add
movsb
mov
int
repz
add
mov
leave
jo
add
rclb
cltd
add
into
inc
aad
lahf
out
test
lret
pop
add
add
inc
loope
jbe
movsb
xor
iret
cmpsl
inc
cmp
adc
add
movsb
lahf
out
stc
ds
incb
mov
mov
cmp
bound
cmp
es
repz
fwait
mov
mov
and
dec
jae
add
pop
leave
loopne
lret
repz
push
mulb
adc
lock
mov
push
fs
pushf
scas
add
pushf
pop
cmp
aas
xchg
xchg
out
add
ljmp
stc
test
arpl
mov
gs
xchg
mov
test
inc
jle
sub
outsl
sub
add
push
sahf
lahf
lret
movsb
push
add
mov
sarl
aam
pop
adc
pop
cmp
lret
dec
or
xchg
out
mov
jne
repnz
sub
cmp
fsubrl
jbe
cmp
xor
add
mov
dec
jle
fiaddl
pop
jns
repnz
and
lahf
lret
pusha
add
lahf
pop
movsl
dec
sbb
cld
push
push
sahf
push
test
mov
mov
add
xchg
xchg
aas
iret
cmp
mov
mov
stc
test
pop
add
gs
inc
int3
out
lods
sub
bound
cmpsb
adc
push
mov
xchg
repnz
sub
pop
sahf
dec
in
cmp
jae
inc
or
dec
in
jb
mov
push
add
push
faddl
pushf
imul
and
lcall
mov
adc
pop
inc
adc
xor
rcrl
jecxz
shlb
cmpl
xlat
pop
sti
aad
loopne
pop
incl
sub
sub
or
sub
es
fidivl
jg
add
and
fs
mov
call
mov
xor
mov
std
sub
sbb
lods
clc
mov
adc
cli
add
fs
cld
aas
aaa
adc
xor
or
lahf
nop
add
adc
adc
subb
decb
mov
mov
xchg
in
dec
pop
adc
add
mov
rcl
or
insl
or
add
mov
sub
sub
or
movsb
mov
mov
out
mov
test
lret
xor
cmp
lcall
ltr
jp
rolb
fidivrs
sbb
cs
decl
fwait
insb
push
rcl
loop
mov
dec
arpl
add
cli
popa
cmpsb
mov
push
jl
popf
or
adc
push
enter
cmc
mov
mov
ret
push
xor
in
sbb
pop
adc
add
xchg
add
test
stc
sub
or
sub
add
cmp
add
inc
jbe
das
inc
pop
hlt
mov
sub
addr16
movsb
incb
or
adc
in
cs
fimull
push
pusha
or
inc
mov
push
push
push
test
cmp
mov
scas
xchg
adc
push
sub
out
add
lcall
call
ljmp
jp
cmp
adc
pop
sbb
loopne
inc
sbbl
or
jecxz
hlt
mov
into
xor
sbb
adc
jae
push
int
sbb
cli
lock
addl
pop
push
push
test
fs
hlt
cmp
add
add
push
in
cmc
frstor
sbb
stos
and
and
clc
pop
add
jecxz
stos
lods
fs
mov
jne
mov
cmp
in
jb
mov
fs
rolb
lods
sub
outsb
cwtl
push
ljmp
mov
and
xchg
stos
stos
inc
aad
lcall
mov
mov
mov
cmp
adc
pusha
sbb
pushf
sub
stos
ds
call
sbb
lret
and
mov
imul
mov
add
test
ss
adc
outsb
dec
push
push
mov
mov
xor
add
push
mov
push
adc
aaa
test
lods
insl
mov
or
mov
push
fsubs
aad
out
jbe
bound
test
mov
mov
or
arpl
push
and
mov
cltd
add
in
cli
js
xchg
sbb
icebp
mov
fisubl
inc
pop
into
mov
sub
mov
push
out
sbb
dec
mov
fcmovnbe
dec
fildl
or
scas
mov
push
jg
shlb
ds
sbb
sarl
cmpsb
aad
sub
or
les
inc
and
cltd
push
rclb
sahf
cwtl
pushf
test
push
fcmovnbe
pop
ret
add
xchg
pusha
inc
inc
push
push
in
sahf
jecxz
sub
in
cld
stos
sbb
and
lahf
outsb
and
add
mov
jmp
adc
jne
jle
add
pop
mov
xchg
les
adc
pop
cmp
xchg
lock
jl
pop
mov
int3
push
push
insl
mov
xor
push
pushl
iret
sub
jmpw
sub
push
push
jle
add
loopne
add
mov
pushf
aad
cmp
xchg
enter
adcl
mov
call
sbb
pusha
dec
scas
push
jnp
sub
add
mov
fcoms
out
dec
es
dec
inc
fwait
mov
addr16
add
pushl
push
addb
sbb
pop
les
movsl
xor
sbb
ret
push
mov
test
sub
dec
cli
loopne
push
add
or
cs
push
std
mov
sub
mov
add
push
jnp
adc
sub
repnz
push
stos
fiadds
les
not
stos
inc
push
or
add
div
in
jmp
insb
stos
sub
in
inc
lret
loop
mov
mov
outsb
dec
dec
add
call
stos
mov
pushl
sub
push
test
mov
inc
mov
daa
push
mov
outsb
loop
ljmp
movsb
jl
push
add
dec
push
jae
stos
ljmp
add
into
fwait
enter
mov
pop
jle
and
push
lods
push
jmp
mov
testb
mov
mov
add
sbb
inc
repnz
incb
or
pusha
mov
aaa
sbb
cmp
movsl
add
push
sti
subb
rolb
adc
adc
adc
sbb
popf
orb
add
ljmp
and
ss
out
fs
rcl
rcl
dec
call
xor
sub
mov
bound
xor
mov
xchg
and
or
or
movsb
test
adc
mov
push
push
pop
push
mov
popf
jmp
hlt
fildll
loopne
stos
test
cli
push
dec
add
adc
dec
std
push
icebp
mov
subb
jo
pop
test
xor
sub
dec
stc
adc
test
mov
mov
ss
test
inc
push
mov
jp
movl
stos
and
sbb
je
jne
daa
push
adc
data16
sbb
dec
jp
push
add
mov
mov
imul
inc
mov
int3
or
str
cmp
add
fldl
push
jae
jbe
fs
xorb
cmp
fcoms
dec
jmp
mov
pusha
push
inc
bound
jle
sub
cmp
retw
xor
lods
notb
bound
cmpsb
nop
sub
sub
test
test
sub
jle
fwait
mov
xchg
loop
jge
inc
add
fwait
stc
lahf
aas
ret
lea
lahf
scas
faddl
add
mov
mov
mov
scas
mov
cmp
inc
mov
scas
cld
daa
int3
add
mov
jne
daa
add
ret
roll
xchg
les
lods
mov
xor
pop
cmp
sub
mov
sub
xchg
cltd
ss
adc
into
sub
jo
push
mov
out
loopne
pop
mov
call
mov
call
in
mov
enter
dec
jo
or
ja
dec
scas
mov
test
sbb
dec
ljmp
imul
leave
fs
pop
cmc
or
jb
inc
adc
jns
scas
popf
rcl
sar
sbb
repz
sub
pop
into
xchg
xor
dec
mov
pop
fdivl
enter
jle,pt
rolb
ljmp
lret
lcall
add
movb
cld
add
xor
int
aam
push
movsl
inc
add
jbe
addl
decl
jmp
stc
add
mov
imull
pop
in
pop
cltd
xor
sahf
add
into
cmp
jp
stc
adc
push
add
and
out
sub
ret
pop
stos
mov
in
fs
push
rorb
mov
mov
cmp
xor
je
xor
ds
insb
xchg
movsl
out
or
push
in
push
out
mov
rclb
inc
inc
mov
cmp
push
add
popa
inc
mov
clc
adc
lods
sbb
cmpsb
pop
lods
push
push
xor
mov
xorl
jbe
insl
inc
mov
mov
hlt
pop
mov
xor
mov
cmp
mov
and
rcrb
xor
push
cmpsb
push
ficompl
add
jbe
test
xor
sti
inc
push
add
mov
scas
inc
ljmp
cmp
or
arpl
cli
iret
test
mov
pop
sahf
ds
add
or
gs
push
dec
ljmp
and
cmp
mov
push
and
xor
lods
arpl
jmp
pop
mov
fcoms
add
lods
push
mov
cmp
pushf
cli
inc
pushf
push
pop
sbb
mov
adc
enter
nop
sbbb
dec
push
shlb
or
inc
xchg
test
mov
xchg
add
fcomps
les
pop
gs
mov
pop
and
dec
pusha
aas
mov
hlt
and
loop
add
cmpsb
pop
pusha
sbb
add
pushf
cmpsb
mov
fcomps
pop
mov
jns
xor
mov
fdivrl
adc
dec
shrb
push
pop
sbb
cld
aaa
add
add
add
shl
repnz
rcrb
lcall
mov
mov
loopne
sbb
add
inc
rorl
popf
insb
fs
jno
pop
les
fstl
mov
mov
xor
mov
scas
add
outsl
add
js
dec
xor
lret
lds
cmp
sub
mov
dec
xchg
mov
cmp
xor
and
cwtl
mov
or
test
pop
adc
push
add
push
lods
es
xorb
push
inc
fldt
push
pmaxsw
lret
jae
or
hlt
rolb
lcall
push
imul
lcall
push
push
xchg
push
ja
test
lcall
sbb
aam
inc
or
xor
xchg
sahf
out
pop
inc
je
xor
cmpsb
mov
in
push
mov
into
xchg
mov
aad
mov
and
mov
sbb
lods
push
lods
mov
loop
hlt
popa
inc
subl
dec
xchg
repnz
stos
cmp
lcall
fcoml
cltd
shll
push
and
pop
dec
mov
xor
rolb
xchg
mov
xor
pop
jmp
mov
mov
push
push
aad
add
inc
xchg
cs
push
jl
jg
insb
adc
test
add
rcll
xor
xor
ljmp
stos
stos
push
mov
mov
int
in
insb
xor
sub
mov
mov
fsubs
xor
dec
jle
pop
inc
out
push
push
cs
popf
add
add
hlt
stos
jno
scas
mov
nop
cmp
les
push
add
push
stos
mov
mov
fisubs
xor
mov
mov
lcall
add
idivb
mov
push
in
push
and
sub
imul
sbb
sahf
movsb
push
mov
mov
xor
in
pop
in
pop
sub
stos
out
push
inc
sahf
mov
mov
push
xor
movsb
fmull
xor
popa
and
stos
pushf
mov
adc
mov
faddl
in
sahf
js
testb
sub
je
shll
adc
dec
push
push
inc
sbb
data16
incb
lcall
sub
loopne
pop
sub
lcall
movsb
mov
xor
insb
cmp
pushf
pop
fcoms
out
insb
inc
mov
aam
push
or
push
int3
xor
pop
imul
add
adc
push
cli
inc
and
mov
pop
xchg
add
pop
ss
test
test
sub
or
jl
test
inc
lods
mov
inc
stos
sub
sub
sub
push
nop
mov
out
into
lods
mov
jp
pop
dec
inc
add
fisubrl
or
mov
lret
mov
push
add
xchg
jl
out
mov
es
mov
mov
popa
xchg
adc
into
in
jle
add
cmpsb
push
mov
cli
cmp
mov
movsl
push
sahf
lods
clc
dec
mov
iret
inc
stos
push
pop
testb
mov
fiaddl
sti
enter
mov
addr16
dec
or
mov
das
lods
mov
loopne
add
push
rolb
lcall
fs
or
orb
ds
lea
push
les
add
push
xchg
pop
js
shlb
in
pop
fcom
jle
inc
mov
outsb
add
pushf
adc
pop
es
int3
push
dec
fcoms
push
jne
jbe
and
lcall
adc
mov
ret
stos
test
in
pusha
adcl
dec
ss
jb
xchg
mov
jle
xchg
mov
test
test
or
mov
lcall
sbb
scas
mov
mov
dec
add
mov
fs
add
jo
xorb
data16
les
push
jnp
jbe
nop
movl
or
and
xchg
fmulp
inc
add
and
jb
cld
stc
add
push
push
sub
sub
icebp
jbe
cwtl
pop
dec
add
rorl
inc
jnp
cwtl
pop
in
jae
mov
xchg
and
stos
push
inc
inc
or
xor
jbe
adc
cmpsb
mov
mov
mov
or
lods
xchg
aas
lods
add
mov
xor
xchg
cmp
movb
stos
xor
nop
add
adc
mov
hlt
rolb
pop
jl
insl
dec
dec
ret
push
sbb
loop
fistpl
inc
fcmove
cwtl
ficoml
mov
adc
or
lcall
insb
cs
push
adc
push
pop
ficompl
push
cmp
mov
push
aaa
sahf
pop
jp
and
ljmp
pushf
nop
loop
bound
in
adc
cmc
mov
test
mov
mov
loop
mov
jne
add
gs
xorb
mov
adcb
lock
sub
fcoms
sbb
je
and
pop
cli
es
mov
ss
adc
jb
mov
push
xchg
stc
cmp
add
pop
fistpl
sbb
pop
jl
inc
data16
cmp
ja
mov
enter
ret
add
xchg
adc
sbb
push
fwait
mov
push
hlt
mov
jl
adc
add
lretw
fstp
clc
cmp
call
sub
pop
cmpsb
fsubl
es
inc
mov
cmp
shl
hlt
pop
in
lods
mov
shll
push
lea
push
mov
add
pop
js
mov
sbb
push
cltd
mov
mov
and
add
daa
adc
fld
les
mov
sub
xchg
mov
adc
pop
or
pop
insb
lret
js
add
add
add
and
ficoms
cmp
pusha
fdivp
insb
add
lret
push
mov
add
cmp
xchg
pop
or
cs
mov
jns
clc
xchg
xchg
in
cmp
or
sbb
sub
test
push
pop
cmp
movsb
and
pop
sbb
xchg
jecxz
outsl
call
lret
mov
test
mov
xchg
adc
aad
ror
mov
xchg
xchg
js
add
mov
mov
lret
mov
jbe
dec
je
frstor
shl
cmp
pop
sbb
data16
add
xchg
ret
sbb
jbe
add
jg
mov
icebp
add
mov
jecxz
add
push
sahf
std
pop
mov
sbb
dec
pop
mov
xor
lret
loop
mov
pop
shrb
loope
dec
cmp
insb
rcll
cwtl
ret
fisubl
adc
push
jo
or
cmc
out
out
add
sub
xorb
divps
sbb
lds
or
mov
ljmp
mov
adc
xchg
arpl
adc
andl
push
mov
mov
pop
lods
mov
lods
mov
mov
pop
push
mov
sub
or
mov
and
mov
dec
in
mov
push
lods
mov
adc
lods
rclb
out
js
mov
icebp
movsb
adc
mov
xchg
stos
stos
dec
nop
lcall
mov
sarb
scas
add
cmp
jne
push
adc
ret
push
push
aaa
mov
aaa
fmull
and
jmp
fs
out
push
ljmp
cs
fwait
dec
sti
or
xlat
test
mov
scas
mov
arpl
in
jp
rcrb
mov
mov
mov
rcl
pop
pop
inc
pop
ret
push
in
or
push
and
pop
das
int3
jecxz
push
insl
int
jbe
pop
dec
pop
mov
cmp
outsb
lods
mov
mov
or
andb
dec
pop
mov
pop
aam
data16
jl
xor
pop
ljmp
inc
or
pop
out
rorb
sbb
pop
lea
sub
cwtl
mov
lcall
mov
call
idiv
mov
shll
aam
push
shll
ljmp
fcoml
pop
fildl
cmpsb
or
xchg
mov
adc
push
pushf
lods
jo
add
push
hlt
movsl
mov
mov
enter
cmp
sbb
cmp
sub
push
addl
jle
cltd
das
call
insl
xabort
add
je
int
mov
jo
lret
int3
lcall
sbb
sarb
lock
and
jno
mov
push
xlat
movsb
cmc
movsb
add
adcb
sub
int3
fadds
subl
out
pop
imul
pusha
ljmp
mov
test
imul
mov
push
test
or
test
sbb
jo
add
mov
push
jo
cs
cmpsb
mov
pop
mov
adc
mov
mov
mov
mov
cmp
stos
mov
stos
dec
je
mov
pop
add
popa
stos
std
adc
add
jmp
adc
push
adc
cs
cld
lock
push
test
insb
xchg
jle
add
addb
es
in
js
roll
ss
mov
pop
roll
out
pop
lret
mov
sub
jae
mov
mov
pop
into
and
or
addl
fldcw
and
jl
arpl
sub
push
or
mov
cmpsb
jne
cmp
fsub
scas
push
fdivr
imul
mov
mull
js
idivb
movsb
push
push
sub
stos
add
test
int
push
or
jb
or
mov
add
mov
sti
sub
push
adc
call
inc
xchg
jns
add
mov
and
push
inc
test
jmp
mov
jo
push
outsb
sbb
pop
addl
fsubl
sbbb
fcompl
xor
fwait
outsb
decb
nop
add
int3
pop
add
xchg
lods
add
sbb
inc
sbb
mov
jecxz
cs
movsb
add
fisttpl
inc
imul
pop
mov
aam
cmovl
pop
andl
je
jo
xchg
das
push
and
orb
pop
adc
push
push
data16
lret
sub
xchg
dec
gs
loopne
test
push
cmp
add
int
leave
mov
adc
cmp
jo
or
jl
outsb
push
adc
push
add
cmp
loope
fwait
inc
add
lret
mov
or
rcrb
aas
or
jo
fistpl
sub
jo
in
inc
es
fsubrs
push
dec
scas
jo
scas
aad
mov
data16
les
push
sbb
or
dec
jbe
push
xor
sbb
cld
or
mov
add
push
add
push
repz
int3
mov
lods
stos
mov
ds
sub
test
add
ljmp
mov
data16
inc
in
mov
lcall
cwtl
arpl
add
cwtl
push
insb
hlt
and
shrb
pop
test
nopl
lret
xchg
mov
sbb
jl
or
cmp
lods
jb
mov
mov
push
jo
dec
inc
mov
imul
jp
push
push
mov
repnz
xor
and
fwait
mov
pop
mov
stos
add
orl
bound
xor
fs
add
pop
dec
insb
addr16
bound
inc
outsl
mov
fs
pmaddwd
xor
cld
add
xchg
aam
add
sbb
push
ror
dec
dec
fs
loop
das
xchg
test
stos
ret
pop
sub
push
lret
push
mov
push
andl
arpl
push
data16
outsl
mov
mov
xbegin
adc
add
jp
mov
cmp
add
cmc
inc
addl
jbe
rorb
push
sub
shlb
xor
es
ret
stos
push
loop
and
xor
test
push
and
inc
inc
fisubrl
and
les
push
cmpsb
push
flds
repz
loope
push
lods
sub
push
adc
inc
loopne
cli
sbb
add
xor
add
jo
cld
jno
fisttpl
add
mov
push
aad
lcall
rcl
test
inc
lret
fs
sub
or
jl
and
cmpl
gs
sarb
lds
dec
lock
add
lahf
cmpsb
inc
inc
inc
inc
aad
mov
mov
test
orb
or
out
inc
adc
xor
xor
sbb
sub
or
and
push
fs
outsl
int
cmp
fisubs
mov
xchg
add
lods
lret
lcall
adc
mov
sbb
push
mov
cmp
or
call
test
testb
jbe
jmp
imul
addb
push
mov
leave
nop
inc
ja
fcmovb
in
mov
loopne,pn
sub
lret
inc
test
mov
mov
in
ljmp
pop
out
sbb
nop
cmp
push
sub
xchg
dec
xchg
mov
loope,pt
inc
fdivs
xor
loop
mov
push
lods
stos
pop
lock
in
mulb
sbb
sub
push
test
or
sub
xor
popa
sbb
loope
xchg
adc
cmp
dec
rcrb
in
test
call
cmpsb
sub
insb
mov
cli
adc
testl
pop
fwait
adc
cmp
in
rcrl
movsb
mov
or
fisubs
inc
adc
mov
or
movsl
add
nop
add
inc
add
or
mov
in
jg
loopne
lods
enter
mov
stc
jbe
jo
sbb
mov
mov
lods
jns
mov
cmp
add
cmp
jmp
adc
repnz
jo,pt
std
sbb
mov
jl
lock
lret
sub
es
call
cmp
or
sbb
xchg
cltd
xor
add
in
xor
xchg
cmp
sub
inc
pushf
push
push
jno
test
add
in
test
subl
inc
sahf
jo
pop
mov
aaa
fiaddl
decb
iret
adc
inc
pop
push
jae
jge
fisttps
sbb
cmpsb
sub
sahf
or
mov
jle
clc
jmp
fmuls
sbb
dec
and
sbb
ljmp
jg
stos
mov
jl
mov
add
add
and
push
push
add
or
and
fistps
int
aam
sub
hlt
dec
jae
pop
xchg
mov
jle
nop
sub
cmpsb
int
rorb
call
icebp
loop
sarb
test
je
pop
imul
nop
subb
jle
or
out
mov
adc
pop
sbb
add
out
jmp
push
je
adc
pop
jp
add
adc
sbb
mov
fcmovnbe
mov
inc
jne
addr16
lret
jmp
js
push
push
test
test
rolb
scas
pop
add
mov
pop
popa
or
xlat
and
pop
mov
loop
hlt
mov
push
inc
stos
cmp
hlt
shlb
mov
sbb
inc
inc
or
bound
dec
repnz
fmuls
pop
bound
or
nop
lret
push
mov
daa
push
dec
jl
xchg
cmpsb
xor
mov
add
push
shll
sbb
dec
or
stos
repnz
jae
aam
insb
push
or
xor
call
popa
call
push
imul
adc
sbb
sub
jge
add
dec
push
mov
sbb
rcrl
lods
jo
xor
dec
cmp
ljmp
lock
sbb
cmp
orl
and
pop
rcl
lcall
or
push
or
sub
dec
push
in
adc
sub
push
iret
or
mov
insb
xchg
inc
pop
push
adc
pop
pushf
sub
dec
jnp
dec
pusha
inc
repz
push
add
or
mov
dec
xorb
mov
mov
lods
add
and
cmp
out
lods
push
pusha
pop
and
incb
fs
adc
and
pushw
push
roll
and
ljmp
pop
push
cmpsb
sub
loop
test
jo
adc
mov
lret
jb
inc
shlb
scas
add
out
add
mov
adc
lcall
mov
xchg
aam
mov
mov
in
cltd
les
int
mov
xchg
movsb
and
jb
loopne
mov
pop
ss
or
inc
lret
mov
arpl
orl
xor
mov
xchg
push
rclb
inc
cmp
es
pop
test
xor
sub
sahf
mov
insb
cmpsb
push
insb
cmp
mov
and
adc
or
inc
xor
stos
adc
hlt
pop
mov
decb
test
push
push
das
mov
jle
cli
out
test
push
shrl
out
mov
and
lock
adc
sbb
stos
shrl
inc
adc
mov
pusha
jae
push
or
inc
inc
or
lods
fidivrl
fmul
pop
xchg
add
xlat
mov
inc
imul
hlt
cmp
decb
and
mov
sbb
stos
adcb
pop
aam
cltd
mov
mov
es
inc
je
xchg
popa
push
ret
xor
in
arpl
cmpsb
insb
xlat
mov
mov
sti
or
push
push
hlt
out
add
pop
sti
add
movsb
jne
mov
loop
cld
push
add
mov
subl
and
jo
pop
rcrb
pop
es
das
push
scas
inc
mov
ret
es
hlt
out
push
mov
push
stc
jbe
mov
loopne
pop
or
mov
shlb
and
ret
arpl
pop
dec
fstps
es
mov
in
push
dec
lcall
jo
shlb
add
punpcklwd
sbb
les
ret
outsb
enter
popa
jae
mov
xchg
push
push
ficompl
dec
xchg
rcrb
stos
fisttps
lods
lods
jb
push
mov
mov
xor
aaa
mov
sub
int
mov
xchg
and
mov
rclb
inc
and
pop
cmp
sub
dec
out
pop
jbe
jbe
lret
mov
mov
test
cmpsb
and
outsl
adc
mov
and
mov
dec
or
inc
adc
and
mov
mov
mov
push
adc
out
ds
push
aam
rcll
sub
xchg
js
mov
adcb
inc
or
iret
add
mov
or
or
sbb
out
or
adc
adc
icebp
cmp
pop
stos
test
ffreep
cltd
push
dec
mov
dec
std
add
and
mov
add
fs
lret
push
mov
aam
leave
jl
push
enter
mov
shlb
gs
adc
into
mov
mov
inc
int3
call
pusha
sub
jnp
mov
push
loopne
fs
push
xor
add
push
sub
data16
or
mov
add
pop
sti
inc
nop
lea
or
adc
push
mov
std
add
mov
scas
push
sub
push
jo
mov
push
sub
fs
or
sub
in
add
inc
sub
sbb
mov
xor
jle
in
push
xor
xchg
pop
add
sbb
sub
aam
scas
jbe
add
inc
inc
insl
dec
push
xchg
nop
je
xor
push
add
sbb
mov
imul
adc
xor
cld
testb
mov
and
sbb
jle
xchg
xor
cmc
xor
fwait
push
mov
insl
and
push
push
xor
xchg
jno
push
mov
test
or
inc
pop
adc
xchg
cmpsb
cmp
ja
daa
inc
inc
jae
push
cli
sub
push
jne
fisubs
fwait
or
fmulp
xchg
loopne
adc
cwtl
lods
add
sub
jb
popf
xchg
daa
jbe
pusha
push
xchg
mov
xor
je
push
dec
in
sub
fdivl
aam
cmp
pop
cs
pop
push
push
movsb
mov
mov
sub
cli
data16
fimuls
push
xor
fs
cli
stc
mov
shlb
jmp
inc
inc
push
test
pop
int3
fs
or
flds
mov
stc
add
or
push
cwtl
inc
inc
mov
mov
xor
movsl
and
push
lods
fwait
sbb
mov
and
add
mov
hlt
adc
inc
xchg
xor
or
push
jbe
or
insb
shr
adc
push
adc
dec
ret
cmp
and
enter
add
gs
mov
lcall
pop
mov
pusha
and
cs
fmuls
add
out
xor
mov
adc
pop
jbe
imul
push
mov
add
xlat
fcom
mov
sahf
xchg
fiaddl
stos
push
adc
scas
jl
imulb
lcall
sbb
or
lods
sub
mov
jp
sub
js
or
shll
push
and
aas
mov
push
mov
shll
in
xor
hlt
mov
clc
into
pop
jnp
in
jg
inc
mov
dec
add
inc
ret
nop
sub
push
push
mov
mov
fdivl
xchg
test
inc
sub
push
jbe
cmpsb
cld
fcmove
out
cmp
adc
push
xchg
push
dec
and
dec
pop
jl
mov
mov
jno
add
mov
adc
loop
and
arpl
aam
dec
adc
inc
in
add
movsl
lcall
pusha
xrelease
sub
loope
mov
mov
lret
adc
aam
lock
enter
mov
pop
push
inc
je
push
lret
lcall
mov
mov
or
cltd
xchg
cs
test
je
mov
dec
sbb
lcall
sub
popa
stos
pusha
jns
jo
mov
add
sbb
xor
adc
es
xchg
push
push
pop
push
push
rclb
mov
insb
inc
jbe
or
mov
shll
push
mov
lea
inc
inc
rcll
xor
in
insb
mov
cmp
pop
xchg
xor
pop
js
and
or
sbb
mov
loopne
push
sbb
add
rcll
adc
jae
and
sbb
ret
xor
in
addl
ljmp
inc
pop
xorb
loopne
sub
lock
mov
pusha
pusha
lcall
mov
pop
test
cmp
sub
stos
pop
xlat
jb
test
popa
pop
call
add
mov
add
jecxz
shlb
add
mov
mov
outsb
dec
inc
and
sbb
test
orb
dec
ljmp
add
js
and
out
or
data16
dec
outsl
not
rclb
lock
popf
xchg
inc
pop
cmp
mov
sbb
rorl
or
shrl
add
ds
push
sbb
inc
data16
adc
or
clc
adc
mov
aad
add
enter
hlt
in
add
pop
lock
jmp
or
scas
enter
push
and
jno
sub
cmp
push
or
scas
clc
mov
pop
imul
lcall
sub
add
add
mov
sarb
pop
sbb
push
sbb
inc
fldl
dec
je
inc
addb
xchg
fs
aad
lret
mov
jecxz
push
mov
xor
ds
mov
push
add
cmp
cmp
mulb
dec
add
rcl
or
in
jmp
mov
cmp
sub
mov
pop
mulb
jo
adc
sbb
xchg
mov
sub
xchg
sahf
lret
dec
inc
push
mov
xchg
pop
popa
loope
pop
inc
enter
pop
sub
test
pusha
pop
cmp
and
bound
inc
push
rclb
and
jae
repz
mov
dec
add
push
std
pop
out
xlat
shrb
push
rol
pop
xor
test
repz
shlb
add
les
push
aad
das
xchg
pop
iret
pop
mov
movb
xchg
xchg
cmp
test
test
push
jl
mov
in
push
test
adc
rcl
sub
or
shr
sbb
out
orl
add
mov
or
test
inc
pop
stos
inc
dec
inc
jle
insb
inc
imul
call
cli
hlt
sub
mov
mov
sbb
imul
adc
sbb
sub
adc
push
push
mov
add
push
pop
movsb
nop
push
divb
pop
scas
addl
xor
popf
enter
pop
lret
sub
pushf
insl
inc
bnd
push
mov
lret
ss
sahf
loopne
push
jbe
inc
push
insl
mov
insl
push
pop
pop
pop
mov
pop
adc
add
xor
mov
pop
ss
dec
mov
cmp
xchg
mov
addl
xor
jns
stos
jmp
sbb
fistl
lods
push
clc
push
test
mov
add
sarb
loop
and
and
insb
cmpsb
popf
mov
aaa
inc
add
dec
add
add
add
das
int
push
mov
inc
mov
sti
fsubrs
int3
out
add
cwtl
mov
arpl
mov
inc
jl
jl
adc
imul
incb
insl
add
lea
add
xchg
icebp
shlb
inc
insb
out
fwait
xor
add
xchg
or
sahf
mov
jo
faddl
push
xor
and
jbe
cmpsb
repz
mov
or
mov
mov
push
shlb
imul
sbb
dec
ss
test
das
dec
rcr
icebp
dec
adc
push
inc
or
sub
test
push
adc
mov
lock
inc
sarb
pusha
inc
add
push
in
popl
push
push
lods
ret
dec
fsubrl
out
sub
sbb
mov
out
out
push
jns
inc
in
call
lods
xor
je
sahf
ret
sub
lret
lcall
jo
dec
cmp
aam
fcomps
jnp
clc
cmp
add
sbb
test
ret
xor
into
daa
push
mov
scas
mov
cmpsb
mov
xor
jecxz
add
adc
cmpsb
scas
out
pop
rcrb
mov
pop
in
fldcw
pop
mov
mov
sarl
stos
xor
stc
xorl
rcr
jb
xor
inc
sub
fiadds
mov
push
push
in
addr16
aas
mov
faddl
adc
repz
les
cmpsb
mov
mov
fsub
call
int
jmp
lods
lods
cmpsb
test
xchg
fwait
loopne
xchg
sub
outsl
cmp
sbb
mov
ret
push
cwtl
add
in
mov
rcrb
push
add
fsts
xor
add
mov
mov
dec
icebp
imull
mov
popa
push
fs
pop
cmp
mov
rorb
mov
sub
xchg
push
pusha
ficompl
lea
sub
sub
rcrb
in
jle
arpl
inc
fldenv
sub
enter
aad
mov
push
subb
xor
or
inc
stos
imul
test
insl
je
fs
mov
mov
xchg
jle
inc
test
push
and
rcrb
stos
mov
sub
rcrl
mov
mov
xor
aad
and
out
add
sub
mov
sbb
ret
push
cli
mov
push
and
push
inc
xor
cmp
add
cmpsb
pop
push
fstl
push
mov
inc
mov
fs
sarl
push
cli
and
int3
adc
inc
add
stos
add
clc
and
jbe
cmp
push
hlt
outsb
movaps
xchg
add
popa
mov
stc
or
mov
push
push
arpl
hlt
lock
cs
insl
xchg
jne
stos
jle
mov
add
xchg
push
mov
and
lret
fs
cwtl
call
dec
iret
inc
pop
adc
shll
sub
fwait
adc
add
sbb
inc
inc
inc
sub
scas
or
inc
and
mov
ret
stos
mov
enterw
push
andb
push
movsl
sbb
gs
push
dec
add
ljmp
cmpsb
sbb
sub
das
ljmp
jp
es
push
aam
jo
sub
js
in
sub
add
dec
sahf
mov
adc
fmul
push
mov
pop
add
sbb
jbe
bound
push
popa
fwait
or
pop
or
fimuls
adcl
jbe
add
pushf
ja
aaa
or
mov
cmp
add
shll
mov
lcall
loopne
mov
fcomps
jo
jbe
imul
stos
ss
pop
rolb
sbb
ficompl
test
cltd
add
push
stc
ja
insb
cmc
ljmp
push
lret
lret
fisubs
pop
pusha
pop
dec
fadds
add
shll
loop
incb
sbb
sbb
and
push
in
dec
or
push
adc
loop
fs
sbb
fstp
xchg
mov
mov
lock
stos
xchg
mov
aad
mov
iret
lret
sub
rcl
push
fidivs
inc
add
mov
sub
stos
sub
roll
add
rcl
je
add
push
xchg
pushf
test
movsl
push
mov
or
adc
dec
mov
lcall
mov
dec
shll
add
mov
imul
imul
push
imul
push
xchg
push
push
push
jmp
fsubs
push
mov
mov
or
cmp
pop
cmp
cmpsl
cld
sub
in
insb
lock
int3
jne
and
sbb
shll
lds
push
call
out
push
lcall
pop
jl
lcall
dec
clc
sub
negb
shlb
sbb
jge
xchg
xchg
sbb
adcb
stc
sbb
call
sbb
add
int3
lcall
fistpl
dec
lcall
inc
cmp
ja
adc
xchg
xchg
xor
into
mov
sub
mov
cmp
repz
mov
lds
push
sbb
clc
fadds
fwait
xor
mov
sbb
test
dec
mov
rclb
imul
xor
cmpsb
pop
fwait
mov
fdivl
add
dec
shll
add
lcall
sbb
push
add
inc
lock
xor
jl
out
loope
or
test
cmpsb
aad
outsl
push
xorb
dec
push
add
fsubrl
sti
mov
pushf
fistpl
mov
inc
call
inc
sbb
cld
pusha
sbb
push
xchg
mov
adc
imul
xor
mov
fldcw
pop
xchg
sub
inc
mov
add
fiadds
cmpsb
rorl
push
movsl
pop
lock
add
adc
mov
or
rorl
in
jle
xor
es
hlt
add
mov
outsb
push
mov
imul
mov
movsb
mov
loopne
fs
push
test
movsb
sbb
mov
inc
add
add
adc
inc
push
xchg
and
lock
inc
bound
jo
mov
mov
pop
je
fucomip
push
and
stos
lods
mov
and
repnz
push
rcll
js
addb
pop
mov
jle
lock
cmp
pop
movsb
test
mov
addr16
add
dec
loope
jb
cmp
mov
push
je
jp
in
xchg
mov
mov
fisubs
icebp
mov
inc
mov
inc
xor
mov
cmpsb
push
into
add
xchg
pop
aad
shlb
enter
push
or
push
push
rclb
add
xor
push
and
mov
xchg
adc
bound
push
cmc
and
jb
test
stos
mov
mov
inc
dec
mov
cmp
and
or
mov
ss
insb
push
mov
insb
addps
pusha
sbb
cs
sbb
shlb
cs
and
push
lds
fadds
adc
andb
mov
push
and
int3
call
add
mov
pop
jle
sub
add
push
pop
loop
xchg
xchg
lock
xor
into
data16
lods
data16
inc
and
inc
mov
push
pop
ret
inc
adc
add
mov
push
lds
mov
mov
test
mov
cs
cmp
adc
iret
enter
sbb
sbb
fcmovb
add
loop
add
lcall
out
pop
mov
xchg
sub
stos
insb
insb
mov
add
mov
rorb
xor
dec
pop
add
mov
or
stos
sub
mov
jp
mov
xchg
or
inc
xchg
pop
mov
and
rcrl
int3
out
ret
test
mov
or
loop
adc
inc
fsts
inc
mov
ds
add
cmp
ljmp
movsl
mov
push
dec
in
mov
pop
and
push
inc
push
clc
js
test
bound
or
or
push
ja
xor
stos
sbb
scas
loope
add
les
jb
insb
add
les
jo
cmp
mov
jnp
cltd
mov
rorl
stos
mov
mov
mov
lods
mov
mov
or
jmp
push
movsl
add
push
mov
dec
jbe
enter
dec
pop
roll
add
adc
xor
lods
ret
cli
sub
lret
inc
pop
loop
sub
cmp
sub
test
pop
sub
push
andb
pushf
roll
push
push
hlt
add
sbb
push
xchg
insl
outsb
mov
sbb
lcall
mov
jb
lcall
mov
lret
xor
movsl
push
dec
cmpl
sub
in
add
fisubrs
mov
sbb
stos
ss
fsub
bound
adc
je
mov
mov
push
pop
jo
pop
enter
sub
mov
lods
mov
outsl
jnp
push
push
aam
mov
mov
add
xchg
push
loop
hlt
pop
shrb
jle
mov
xor
pop
jg
stos
jo
cmc
ret
or
jmp
push
mov
stos
inc
mov
dec
test
rcrb
test
shll
cmp
int
fidivrs
int3
ficomps
stos
push
or
inc
inc
js
xor
push
inc
inc
sbb
push
cli
add
mov
add
mov
pop
add
fcomps
sub
js
xchg
dec
or
sub
mov
clc
lcall
insl
call
dec
fs
mov
out
sub
or
push
adc
add
adc
mov
lret
add
ds
mov
lods
ret
push
jle
inc
ret
mov
mov
mov
mov
xchg
jb
leave
ss
push
add
lcall
ret
cmpsl
mov
mov
mov
push
out
jbe
int3
mov
adc
loopne
and
push
dec
test
xor
sbb
in
xor
push
je
es
inc
in
out
sub
jne
scas
jg
aam
adc
out
ret
hlt
sbb
mov
ret
test
add
cmp
and
sbb
lcall
sbb
popa
mov
sub
adc
scas
sub
fs
pop
add
test
mov
and
jo
push
fsubs
pusha
inc
xor
mov
sub
or
dec
bound
xor
jne
sub
mov
pusha
js
fidivrl
push
adcl
aam
scas
sub
add
loop
popaw
inc
xchg
imul
mov
push
push
lods
out
xchg
adc
mov
loop
mov
sub
lcall
add
out
sbb
insb
lods
xor
jl
pop
sbb
loopne
pop
addr16
push
jl
mov
sti
push
push
mov
mov
inc
add
pop
ret
push
sbb
push
adc
xor
push
pusha
lcall
push
cmpsb
shrb
mov
inc
push
add
cs
sbb
sub
fdivp
mov
lock
dec
test
call
cmp
lock
imul
add
es
mov
jbe
and
mov
enter
jge
inc
enter
add
stos
inc
xorb
mov
je
ja
scas
fcompl
push
push
push
xchg
mov
int3
addr16
lods
jbe
add
pop
push
cld
adcb
dec
rcrb
ss
add
cmc
dec
pop
rcl
cmpsb
lret
sub
dec
or
inc
pusha
jnp
push
mov
sub
xor
cld
push
dec
mov
stos
pop
pushf
pop
sub
sbb
mov
push
push
jmp
les
ds
adc
inc
pop
test
inc
adc
notb
pusha
insl
inc
and
mov
xor
fildl
mov
add
rcr
lds
sbb
mov
mov
pop
adc
or
enter
mov
xchg
fs
inc
cmpsb
push
je
push
movsb
add
sub
hlt
repnz
rcl
cmpsb
outsb
xchg
int
push
and
subb
andl
add
and
insl
andl
push
pop
sti
sub
mov
add
mov
jge
mov
loop
add
lahf
dec
or
push
adc
xchg
inc
dec
mov
imul
popa
mov
cmp
mov
xchg
push
adc
lret
pushf
gs
sub
mov
dec
movsl
push
cli
in
xchg
imul
jp
xchg
fildl
fadds
call
int3
add
push
int
aaa
sahf
push
stos
push
in
sahf
adc
sbb
mov
fisubrs
stos
xor
mov
sub
cmp
jmp
xchg
pop
test
mov
rolb
nop
lcall
in
inc
mov
cmp
and
in
or
sbb
call
and
xor
add
nop
jp
jle
lcall
adc
ss
out
fimull
movsl
mov
test
pop
inc
insl
sahf
push
mov
sub
pop
push
rclb
pop
push
xchg
add
jne
pop
inc
les
test
mov
cld
stos
mov
sbb
shll
jp
mov
ljmp
lea
subb
mov
je
andl
pop
shlb
xor
jo
cmp
mov
out
and
xchg
lds
sbb
mov
cmp
stos
adcb
mov
push
push
push
or
xor
push
cltd
scas
push
jbe
clc
cmp
les
xor
sbb
inc
sub
and
cmp
inc
push
sbb
or
add
xchg
add
mov
push
dec
mov
or
cli
mov
cli
ret
jle
and
cli
cmp
dec
sarb
lcall
addb
push
mov
ret
xor
push
cld
add
mov
jp
push
mov
add
xor
and
mov
adc
call
rcll
loop
mov
sbb
lods
es
inc
sub
or
push
sbb
pop
and
jl
shrl
sar
add
jmp
fimull
add
je
cmp
push
jbe
mov
rorb
dec
movl
popa
adc
jb
inc
dec
ror
pop
inc
loope
jmp
cmpsl
xor
int3
cs
dec
and
mov
sbb
hlt
mov
sbb
sbb
ret
pushf
push
add
int
sbb
add
add
inc
add
cmp
push
add
mov
and
push
aad
adc
repnz
adc
out
xor
add
scas
push
adc
sub
mov
inc
push
pop
es
add
dec
pusha
push
and
mov
fimull
sub
sbb
mov
jmp
outsb
imul
shl
or
xlat
jno
cmp
xchg
je
push
push
scas
mov
clc
outsb
sbb
and
in
iret
add
imul
mov
push
push
out
inc
dec
sub
cmpsb
sub
out
inc
sub
or
lods
ret
aas
ret
lcall
sbb
or
scas
xchg
adc
or
loop
jb
rcll
inc
sub
notb
add
mov
mov
pop
pop
roll
mov
aad
je
sbb
push
adc
stos
inc
or
fstp
adc
pop
fs
test
push
xchg
out
mov
fwait
sahf
cmp
data16
inc
loop
arpl
mov
cli
mov
sbb
mov
cmpsb
xor
fcompl
outsb
and
mov
pop
add
cmp
fs
lods
adc
sub
les
push
xor
mov
pop
loop
in
push
insb
or
fs
mov
push
cmpsl
sbb
xchg
push
push
icebp
push
lods
add
cmpsb
jmp
xchg
add
fdivs
imul
xchg
xor
rcl
insb
inc
push
lret
fs
push
test
nop
lods
push
add
lock
cld
jmp
mov
add
shlb
cmp
and
cld
or
or
insb
cmp
dec
das
arpl
cmp
iret
sub
sub
roll
push
push
lahf
ret
fisubl
in
push
je
insl
bound
clc
sub
lret
add
or
sub
xchg
inc
pop
add
jl
and
test
mov
in
sarb
mov
add
push
adc
xor
or
stc
cmp
in
imul
orl
int3
or
sub
testb
jle
ds
data16
pop
xchg
mov
inc
pop
test
stos
fcoml
mov
push
lods
cmp
xchg
push
js
out
jmp
jae
or
adc
jl
and
pop
mov
add
add
xor
jne
mov
or
sub
mov
aam
jnp
lret
mov
loopne
mov
xchg
xchg
xchg
xchg
push
or
lcall
dec
xor
xor
mov
push
push
jbe
orb
loop
push
in
or
cs
rorb
and
xchg
popf
in
fsubl
or
lods
ss
and
pop
mov
add
mov
pop
xlat
mov
test
pop
jo
and
stos
sub
mov
fwait
movb
cmc
ret
pop
dec
popf
in
pop
jl
mov
stos
xor
and
add
es
dec
jl
cwtl
lcall
add
xchg
add
lahf
pop
push
adc
lock
out
mov
mov
push
cltd
and
roll
push
sub
ret
or
out
dec
push
mov
pop
mov
add
sbb
mov
inc
push
inc
shr
aaa
pushf
or
aam
mov
adc
sbb
adc
fiaddl
push
push
xchg
cmpsb
jb
nop
pop
sbb
xorl
movsb
int
push
or
inc
sub
mov
fdivrs
push
add
roll
cmpsl
push
cmp
clc
bound
mov
push
lea
push
lods
stos
into
dec
hlt
add
movsb
stos
insb
push
mov
push
cli
mov
or
inc
mov
stc
mov
push
shll
aad
push
sub
fcom
mov
push
dec
xchg
add
xor
repz
je
outsb
push
roll
das
shlb
mov
add
insb
pop
add
mov
loopne
fimuls
gs
addb
stos
int3
adc
mov
xor
jecxz
xor
cs
popf
pop
sub
jbe
addr16
lock
lods
fs
daa
scas
or
inc
stc
sub
popa
mov
xor
jne
adc
out
js
lret
push
xchg
cmp
sbb
imul
stos
jne
cltd
cmpsb
lahf
aas
or
rclb
jp
lock
mov
lods
loope
ja
outsl
mov
mov
mov
add
ds
outsl
dec
add
fimull
inc
sbb
push
push
mov
sub
in
lcall
imul
and
clc
cmp
shlb
sbb
sub
or
imul
shrb
jle
fcmovnbe
mov
lods
nop
sub
lds
push
ret
add
and
test
inc
mov
mov
orl
imul
mov
mov
xlat
push
gs
push
mov
into
push
push
xor
gs
hlt
sbb
push
pmuludq
mov
mov
ljmp
or
xor
push
mov
ret
mov
pop
push
push
pusha
jl
cmp
jbe
mov
or
repnz
fdivrs
xor
pop
loop
inc
andl
ss
cmpsl
xchg
movsb
jo
test
lods
mov
add
fmuls
imul
sahf
repnz
leave
mov
rcr
sbb
xchg
data16
sahf
push
and
rorl
push
mov
sub
jge
shr
test
push
js
dec
sti
shl
subb
cs
pop
add
cmp
out
inc
push
ret
xchg
cmp
dec
jbe
adc
pop
jnp
pop
fsubl
cs
test
push
or
push
sbb
mov
add
inc
push
movl
or
shrb
push
inc
adc
test
inc
add
fcomp
mov
lret
inc
push
punpckhdq
pop
icebp
or
loop
or
push
mov
mov
xchg
add
pusha
andb
mov
adc
jmp
and
mov
insl
in
xor
xor
insb
rcrb
push
mov
cmpb
push
imul
add
lods
xchg
call
mov
mov
sbb
int3
lods
mov
sub
and
sbbb
mov
mov
enter
mov
push
xchg
rcrb
mov
jg
mov
cwtd
dec
call
add
insb
sbb
xor
or
sub
and
sub
ss
aad
fisttpl
stc
test
push
inc
and
repnz
push
xchg
inc
mov
js
push
mov
pop
mov
mov
idivb
pusha
xorl
dec
mov
add
dec
rolb
cwtl
mov
xor
imul
pop
mov
cmpsb
mov
mov
in
mov
inc
push
pop
cmp
mov
add
nop
push
ficompl
pop
lret
or
and
and
inc
and
mov
in
add
push
sbb
cmp
xchg
lock
rclb
jo
push
add
sub
push
pushf
mov
stos
sub
xchg
or
cmp
movsl
jb
mov
lret
add
mov
aam
add
in
cltd
xchg
pop
mov
sbb
loop
test
jle
push
sbb
ljmp
xchg
fwait
mov
lock
addb
pusha
mov
sub
scas
push
mov
ljmp
nop
mov
fcoml
sub
xchg
div
add
add
fs
pop
and
cli
int
sub
xor
add
add
sbbl
aaa
mov
xor
add
dec
inc
inc
imul
fwait
xor
xchg
sbb
flds
dec
dec
shll
std
add
out
iret
dec
jb
or
xor
shll
mov
sbb
push
pop
push
sarl
lret
shr
daa
shll
mov
pop
and
xor
pop
and
push
repz
inc
push
outsb
int3
mov
xor
lods
inc
mov
inc
jae
cmp
add
aad
push
repz
mov
aaa
out
std
ret
adc
jb
jp
push
add
dec
mov
xor
jp
xchg
filds
dec
cmp
lods
cmpsb
sub
mov
out
mov
push
dec
push
push
daa
adc
scas
add
xchg
imul
in
and
and
lahf
adc
gs
cwtl
and
lret
out
mov
stos
sahf
enter
loopne
into
mov
xchg
pop
sbb
xchg
add
mov
push
xor
pop
mov
mov
ficomps
adc
mov
and
data16
mov
and
sub
mov
xor
js
lcall
sbb
fidivrs
inc
mov
clc
enter
mov
stos
insl
inc
jnp
push
ret
fidivl
cmc
jle
inc
insl
inc
pop
xor
mov
out
push
je
lret
sti
mov
es
ficoml
mov
xchg
mov
jno
jb
or
mov
clc
dec
cmp
xor
cli
pop
aaa
pushf
mov
pop
ja
outsb
jl
inc
xchg
sub
or
sahf
mov
inc
lcall
push
xchg
pusha
or
or
shlb
mov
inc
ret
test
and
add
lret
jp
inc
dec
jnp
xchg
stos
shll
js
xorb
push
test
mov
mov
adcl
push
mov
dec
pop
popa
xor
push
cwtl
test
out
popf
add
test
xchg
lods
fucomp
mov
add
subb
gs
or
rolb
push
shl
pusha
fimuls
dec
add
cmp
mov
jo
sub
jo
mov
jl
jbe
push
mov
inc
cmp
or
or
sbbb
aad
je
mov
and
aam
mov
or
push
fisttpll
jle
arpl
add
dec
cld
lock
cmpsb
xlat
das
inc
sti
pop
inc
mov
add
xor
push
sarb
inc
pusha
fs
mov
mov
lret
loope
or
pop
cmp
ficompl
data16
rolb
cli
subl
xchg
pop
sub
gs
enter
and
sarl
ror
movsl
mov
outsb
push
bound
xchg
mov
mov
and
sub
push
push
test
ds
xchg
or
and
mov
mov
dec
jbe
push
sbb
dec
flds
or
dec
test
push
daa
push
aad
sub
insb
xor
mov
sbb
sub
mov
jbe
enter
mov
mov
and
adc
idiv
dec
loopne
outsb
jne
or
xchg
inc
inc
xchg
pusha
ss
lods
test
add
mov
ret
mov
pop
or
into
adc
push
test
test
dec
push
lcall
xor
adc
out
mov
or
inc
jb
int
sub
std
xchg
push
add
fisubl
jp
nop
mov
xor
push
aam
inc
xchg
dec
adc
jl
andl
jecxz
pop
pushf
push
fsubl
mov
fmulp
out
popa
adc
dec
cmc
mov
pop
pusha
insl
ret
push
out
push
and
jbe
mov
inc
adc
imul
mov
push
pop
xor
pop
sub
jp
adc
rcr
loop
push
pop
lds
ds
add
push
add
sub
inc
sbbl
bound
in
cmpl
rorb
jl
xor
mov
xchg
in
and
int3
jecxz
add
xchg
adcb
lcall
je
sbb
inc
dec
cli
add
mov
fs
push
sbbb
jbe
inc
jno
or
push
push
test
pusha
cmp
pop
cmp
mov
testl
insl
xchg
add
fsubrp
add
inc
jge
mov
roll
pop
sbb
push
inc
inc
mov
mov
daa
loop
clc
dec
rcrb
jbe
push
pusha
popfw
ss
mov
jo
jo
xchg
insb
mov
stc
stos
add
xor
cmpsb
mov
cmpsl
lret
xor
addb
ja
jmp
mov
lret
dec
shll
ret
iret
test
or
pusha
add
jnp
sbb
mov
lods
subb
mov
inc
add
pop
fs
stc
add
clc
xor
lods
aaa
hlt
xchg
mov
imul
mov
inc
div
mov
push
data16
mov
add
fnstcw
lcall
xor
push
push
aam
mov
cmpsl
add
int3
pop
and
add
jecxz
xlat
pop
add
inc
lret
push
stc
mov
mov
adc
and
xchg
xchg
shll
jns
cwtl
out
hlt
lds
pusha
jnp
test
cmc
add
xchg
es
push
cli
and
xor
push
fadds
pushf
mov
loop
push
in
xor
inc
jle
adc
and
lods
loop
dec
xchg
cli
cmovns
xchg
add
or
outsl
and
rcrb
sbb
add
bound
mov
test
pusha
xchg
ret
inc
cld
in
push
lock
popa
lock
jo
mov
xor
cmp
adc
mov
loopne
out
rcl
sub
inc
lock
or
lock
push
out
jns
xchg
inc
sub
ret
rorb
mov
mov
sub
push
mov
int3
pop
sub
int3
insb
dec
add
push
inc
dec
movsb
mov
lock
fdivp
sbbb
fs
or
adc
cwtl
pusha
pop
mov
or
loop
movsb
gs
mov
in
ljmp
sbb
pop
shlb
insb
dec
loop
fsubrs
mov
pop
jae
cmp
mov
mov
ja
adc
jge
dec
les
into
add
push
adc
mov
pusha
dec
insb
sbb
adcb
jne
inc
adc
xchg
mov
sbb
sbb
cmpsb
hlt
mov
adc
push
xchg
xchg
ss
adc
insl
push
je
lods
cmp
lods
insb
or
sub
push
ljmp
mov
stos
push
ss
lcall
mov
cmpsb
add
xchg
nop
lret
cvttps2pi
pop
test
push
inc
add
xchg
pop
rcrb
or
push
shlb
sub
mov
sar
xor
mov
popa
pop
adc
xchg
stos
mov
repnz
push
js
lock
in
ja
mov
jmp
sub
sub
insb
push
mov
add
loop
lcall
add
clc
push
ficoms
mov
add
and
out
jb
push
fldenv
enter
fcoml
mov
int3
dec
sbb
mov
popl
in
cltd
adc
mov
fs
addr16
mov
rorb
clc
dec
mov
ljmp
cmp
xor
jbe
mov
lock
push
mov
push
rcl
aam
mov
cmpb
in
xchg
in
mov
xchg
in
pop
shll
ficoms
add
cli
add
and
dec
and
mov
cmc
mov
dec
outsl
jle
add
ret
or
pop
popa
fisubs
mov
dec
add
stos
rcl
fucom
test
pop
ljmp
mov
test
data16
mulb
mov
or
push
inc
lahf
add
fildl
in
cmp
xchg
add
sub
xor
jns
sahf
pop
sbb
add
xchg
pop
xchg
test
aad
outsl
lcall
sbbb
xor
cmpsb
inc
add
fidivl
xchg
jbe
mov
sbb
xlat
pop
insb
scas
mov
std
imul
sbb
into
push
movsl
bound
cmp
in
dec
mov
stos
xlat
mov
xorb
mov
adc
mov
dec
mov
loop
shl
mov
adc
pop
dec
repz
dec
and
push
mov
and
add
xchg
jo
fcom
xor
popf
sub
jo
or
fmul
mov
mov
cmp
sub
repz
stos
loop
xor
cmp
xchg
iret
mov
or
lcall
or
xchg
popa
xchg
in
call
movsb
xchg
outsb
bound
dec
sub
add
mov
addr16
fwait
int3
fwait
push
push
add
mov
js
mov
pop
add
or
mov
mov
cmpsb
inc
je
cmc
cwtl
push
adc
push
mov
lock
mov
or
push
loopne
dec
lcall
aam
lds
sbb
mov
lret
xchg
lock
mov
and
out
cmp
jmp
dec
add
sbb
mov
rclb
stos
fsubrl
add
rolb
mov
sub
mov
dec
add
andl
xor
add
sub
cmp
repnz
pop
push
cmpsb
sub
push
or
jl
and
inc
mov
cmp
movsb
lret
mov
data16
sub
call
or
lock
sbb
mov
bound
adc
mov
jecxz
outsl
dec
leave
adc
mov
andl
mov
es
aam
inc
int3
inc
sub
jecxz
sbbb
sub
sbb
daa
push
or
sbb
pop
xor
and
inc
cmp
lock
add
insb
sbb
je
mov
clc
test
movsb
movsb
adc
push
mov
mov
inc
into
aam
stos
cmp
ss
fs
aam
or
xchg
mov
mov
push
xor
xchg
and
test
sbb
mov
sub
push
data16
movsb
dec
xchg
push
jmp
insl
bound
jo
sub
lods
push
mov
push
repnz
mov
pop
push
jb
mov
xlat
lods
push
mov
cmpsl
mov
and
xchg
jo
push
fstpt
push
shll
fmuls
stos
mov
inc
stos
mov
push
cmc
mov
cmp
jbe
cmp
out
int
faddl
add
adc
xor
push
int3
ficompl
imul
or
cmp
xchg
mov
std
cmp
data16
aad
rorl
sub
es
adc
inc
lret
aam
rcr
into
add
inc
dec
dec
or
xchg
add
mov
jp
push
icebp
add
addb
stos
dec
ljmp
pusha
popa
insl
push
andl
loop
inc
cmp
mov
nop
fidivs
sub
add
out
dec
add
pop
inc
sbb
fwait
jb
pushf
enter
mov
mov
or
negb
xchg
addb
adc
dec
ret
push
jl
push
icebp
and
pop
in
pop
jno
nop
cmpsb
jecxz
pop
or
scas
push
rcrl
stos
ss
rcl
arpl
inc
add
pop
out
pusha
shlb
mov
cmc
and
add
mov
pop
xchg
push
cmp
jle
push
sub
pusha
or
imul
mov
pusha
adc
jl
mov
mov
hlt
icebp
dec
push
rcll
adc
fisubl
dec
ret
lcall
or
pop
shlb
lds
daa
xor
into
push
sbb
shrb
insb
mov
pop
dec
mov
shr
jae
mov
sarb
or
jno
xor
jge
mov
popf
scas
data16
jbe
add
lret
push
cwtl
xchg
inc
shl
sahf
cmp
xchg
fld1
push
pop
mov
stos
arpl
xchg
and
mov
mov
testb
enter
in
or
pop
filds
xor
sti
xor
adc
sahf
xchg
inc
repz
push
xor
stos
insb
dec
pop
pop
push
push
push
add
subl
jb
mov
xchg
inc
mov
push
push
stos
push
push
subl
xchg
stos
popa
xchg
pusha
cmpsb
es
mov
mov
pop
jo
insl
sbb
rcrb
push
rcrl
dec
mov
dec
mov
call
bound
pop
cli
add
test
in
push
jg,pn
scas
testl
mov
loopne
mov
or
push
mov
lahf
dec
mov
or
ds
ds
test
lcall
jne
lods
ficoml
fisubrl
xor
cwtl
push
ror
sbbl
fcmove
inc
add
sub
mov
mov
icebp
cs
inc
inc
mov
xchg
or
or
inc
lea
cwtl
aas
jp
ljmp
fldcw
xchg
mov
mov
sbb
test
out
mov
mov
out
mov
or
and
add
test
push
cmp
cli
cs
jp
cmp
data16
push
fsts
dec
pop
xor
sbb
pop
mov
mov
out
push
add
dec
aaa
add
push
faddl
add
inc
dec
xchg
adc
roll
mov
je
mov
inc
sbb
sbb
mov
int3
and
adc
bound
add
inc
push
je
push
or
and
xchg
cmp
nop
mov
ds
insb
add
aam
xchg
stc
leave
cld
push
push
fcoml
adc
sbb
add
lahf
add
xchg
mov
pop
xorl
outsb
test
inc
in
cmc
orb
and
cmp
add
mov
mov
cmp
stos
enter
inc
jno
dec
in
push
inc
jp
pushf
stos
xchg
cwtl
xchg
jmp
adc
fs
push
mov
cltd
divl
in
jo
push
enter
and
jle
mov
ret
loop
in
push
or
cmp
and
insb
jb
inc
mov
test
gs
es
add
dec
test
sub
sub
or
aam
pop
xchg
in
sbb
push
add
pop
movsb
mov
add
and
lret
addb
lods
add
add
xorl
adcl
add
add
cli
mov
push
lods
pop
mov
popl
fldt
mov
es
cmpsl
pusha
mov
or
mov
push
fidivl
mov
add
stos
enter
lret
in
lods
shrl
push
push
dec
mov
into
ja
add
mov
jle
adc
in
sbb
xor
rolb
cmp
out
sbb
jo
add
mov
pop
dec
aas
xorl
pop
pop
lods
cmp
add
or
mov
arpl
push
xor
int3
push
add
lods
push
push
add
mov
inc
jb
fdivrs
lods
ss
pop
les
mov
gs
adcl
shlb
or
or
jb
les
outsl
cli
stos
sbb
in
in
sub
cmpsb
data16
mov
inc
add
adc
add
ljmp
icebp
jp
xchg
mov
adc
mov
or
cmp
add
out
and
jo
scas
dec
mov
mov
push
movsb
jecxz
push
fsubrl
test
xchg
mov
mov
push
jp
hlt
and
stos
mov
sub
out
push
fs
movsl
mov
jle
pop
cs
bound
xchg
push
pop
out
outsl
pusha
inc
inc
push
les
jne
adc
movsb
jno
lcall
push
cmp
or
adcb
test
xchg
mov
mov
jecxz
stos
sbb
sbb
mov
pusha
mov
or
jbe
aam
lods
mov
mov
rcrl
cmp
or
insb
pop
mov
push
push
sub
xchg
cld
sbb
mov
mov
adc
adc
add
lods
add
mov
stc
cmp
int
or
push
cmp
xorb
jne
out
xchg
xchg
rcr
pop
jl
mov
fldt
adc
xor
inc
xchg
pusha
xorl
lods
mov
pop
add
addb
dec
imul
push
dec
sub
shr
mov
sub
shll
xchg
push
loopne
mov
push
jecxz
insl
push
lock
lcall
pop
and
enter
pop
data16
pusha
repnz
or
cwtl
repz
mov
pop
test
lcall
cld
adc
xchg
mov
mov
adc
fistpll
adc
and
outsb
fsts
lods
insl
and
dec
sti
mov
push
xchg
mul
adcb
fmull
es
cmp
data16
clc
mov
stos
inc
mov
jae
dec
in
or
xchg
popl
sbb
std
sbb
in
sub
dec
arpl
dec
and
rclb
cltd
and
xor
and
dec
and
out
or
adc
and
push
imul
out
fisubrs
scas
lds
push
dec
into
rclb
test
daa
dec
push
or
xchg
es
add
inc
xor
push
pop
mov
dec
add
or
cli
test
scas
mov
js
jle
pop
push
sbbl
pop
push
out
mov
mov
shll
cmc
out
xchg
roll
cwtl
or
sahf
and
pop
test
jae
add
push
mov
mov
ljmp
push
inc
addr16
and
jns
pusha
adc
fstpl
jae
outsl
or
sbb
les
in
or
cld
jo
mov
rcr
repnz
add
ds
dec
jb
hlt
mov
fldcw
lcall
dec
pop
lea
pusha
outsb
push
jle
enterw
mov
xchg
push
sub
test
or
stos
adc
or
add
test
push
pop
push
push
hlt
stos
cld
mov
fadd
jb
jecxz
cmc
subb
movsl
pusha
pop
dec
jb
push
push
push
cld
inc
inc
add
sub
shlb
testb
lret
adc
inc
out
leave
adc
dec
rcl
lock
mov
xchg
add
mov
ss
cmp
or
or
mov
sarb
in
repz
mov
or
lret
aad
push
push
jb
bound
cmpsl
icebp
mov
nop
jae
add
mov
mov
cmc
push
or
push
pop
dec
fildl
pop
cli
pop
cmpsb
pop
cmpsb
outsb
test
pusha
mov
dec
xchg
push
push
icebp
jo
push
dec
mov
push
adc
bnd
sub
mov
ret
cmpsb
and
jo
pop
add
repnz
jo
mov
ret
or
adc
repnz
test
jbe
push
stos
jo
xor
push
loop
jbe
ficoms
cmp
xchg
sub
jl
add
inc
lahf
mov
add
add
push
jg
mov
add
jge
sub
sbb
or
xor
inc
push
mov
push
test
cmp
andb
test
pop
sbb
ja
xor
jo
movsb
add
inc
loop
pop
cli
ret
mov
add
les
adc
push
outsb
add
lock
in
sub
fadds
clc
push
sub
adc
shlb
sub
push
inc
sub
je
xchg
add
push
cmp
mov
test
jp
mov
cmp
and
lock
add
lret
xor
fcoms
es
push
fiadds
fdivs
cld
push
movsl
cmp
out
jns
mov
jmp
stos
add
js
mov
xor
daa
in
cs
test
call
add
ss
nop
out
dec
add
or
outsb
inc
or
push
or
xor
xchg
jl
iret
lcall
xchg
int
mov
gs
pop
xor
loopne
add
add
pop
mov
shr
jecxz
fdivrs
xor
lods
sbb
or
mov
ret
push
sarl
push
mov
inc
lea
pop
and
fs
mov
sub
ljmp
mov
mov
push
mov
pop
daa
add
aaa
cmp
aad
push
bound
lods
andl
fs
lods
cmp
push
mov
dec
popa
xlat
sub
lods
int3
mov
data16
cmp
bnd
add
scas
dec
push
loopne
push
sbb
push
sbb
cwtl
xchg
cwtl
sub
add
mov
mov
and
dec
jp
rcrb
jo
dec
sbb
adc
push
xor
in
inc
pop
ss
jp
and
dec
outsb
in
mov
xchg
mov
and
xchg
push
xor
jmp
xchg
xchg
xor
xchg
fimull
dec
aam
pusha
adc
cmpsb
icebp
movsb
mov
gs
cwtl
adcb
mov
in
sbb
enter
js
jle
mov
xchg
fldlg2
in
les
xchg
mov
ret
mov
aam
lock
and
jmp
sbb
nop
or
xchg
aad
mov
mov
inc
cmp
add
inc
rcl
aad
mov
fisubl
stos
pop
adc
inc
divl
cmpsb
out
sub
add
push
test
pusha
loopne
cmp
fs
inc
inc
push
sbb
mov
mov
fwait
dec
es
mov
sub
xor
and
mov
jne
popa
shrb
movsl
sub
fwait
ja
ret
icebp
add
push
pop
scas
shlb
pusha
mov
cmp
jno
jne
pushf
data16
push
add
lock
les
insb
add
xchg
fsubrp
mov
and
push
shl
sbb
sub
push
js
pop
les
jl
xor
pop
test
xchg
sub
imulb
jne
cs
push
rcll
pop
dec
mov
sub
add
test
lock
and
jb
inc
ret
add
bound
ficoml
add
sti
add
sub
and
outsb
mov
sub
sbb
inc
mov
stos
pop
sbb
test
pop
xorb
out
std
fs
push
and
add
sub
std
xchg
mov
lods
push
lods
inc
push
scas
je
cs
pop
push
add
push
enter
out
xchg
lret
mov
jbe
mov
mov
xchg
call
cwtl
adc
inc
test
loopne
xchg
mov
lods
mov
xor
fiaddl
dec
jo
lods
sbb
add
cs
or
in
push
in
sub
lods
jb
or
inc
incl
jae
cmovbe
mov
out
bound
sbb
lret
mov
fcmove
jmp
adc
sbb
and
sbb
push
test
xchg
add
inc
inc
test
leave
push
ret
sbb
pop
lret
ret
xor
stos
push
ret
or
jmp
cmp
fiaddl
mov
adc
insl
mov
cwtl
loope
movsl
mov
adc
jle
or
inc
pop
inc
add
iret
jle
adc
cmp
fdivrs
pop
aam
xor
sub
bound
in
dec
es
sub
add
jb
lret
push
test
mov
outsl
pop
add
sbb
sub
sub
loop
xchg
data16
loop,pn
ljmp
insl
mov
neg
push
cmc
ss
fs
mov
mul
sbb
sbb
and
ss
push
addr16
test
inc
sbb
mov
bound
sub
adc
push
das
cwtl
shrb
xchg
jp
test
mov
dec
adc
ret
cmpsb
add
in
stos
push
dec
dec
mov
lret
push
xchg
sub
jb
sarb
pop
cmpsb
jo
lods
pop
pop
mov
mov
loope
push
mov
mov
addb
lock
int3
pop
sbb
pop
mov
into
ret
cs
in
enter
lods
aam
dec
and
in
es
fs
add
jb
mov
xor
pop
mov
pusha
sbb
dec
add
push
pushf
jl
sbb
adc
adc
imul
add
je
pop
cmp
sbb
xchg
add
add
bound
add
lods
addl
stc
add
add
add
xor
cmpsl
pop
nop
les
sbb
ret
lahf
sub
pop
movsb
enter
hlt
sar
push
popa
adc
pop
orb
jbe
ja
pop
add
mov
out
xchg
add
aad
hlt
rcrb
notb
lods
fnsave
jp
inc
cmp
lods
xor
cmp
jb
cwtl
add
adc
push
cmpb
or
add
push
push
xor
and
jp
xorb
xor
outsb
addb
dec
xor
data16
xor
bound
test
jp
in
push
lods
dec
mov
lock
dec
ljmp
sub
pop
mov
adc
add
push
push
add
nop
xor
ss
mov
mov
add
or
roll
je
pop
test
dec
cs
rolb
dec
mov
mov
out
sbb
loop
or
dec
add
ltr
str
lods
outsb
addb
repnz
dec
roll
push
pushf
sarb
mov
push
mov
push
inc
and
movsb
inc
divb
clc
movsl
pop
add
ljmp
cmpsb
cmpsb
xchg
fs
movsb
pop
outsl
jecxz
mov
lods
or
mov
stos
pop
rclb
test
inc
mov
pop
inc
sub
xor
and
mov
cmc
in
and
add
mov
inc
std
mov
xor
movsl
dec
mov
loop
loop
ret
daa
jb
mov
push
push
lret
adc
xor
inc
xor
setg
lcall
lcall
jl
int
sbb
add
lods
jmp
into
sub
push
sub
jecxz
add
push
push
mov
mov
in
adc
test
leave
pop
push
mov
sbb
mov
or
xor
ja
jle
repz
rcl
lcall
dec
mov
mov
into
mov
xor
jbe
int
push
mov
addl
dec
rorl
cli
daa
loop
inc
lods
popa
filds
pushf
aaa
imul
in
jbe
add
push
mov
push
inc
mov
incb
sbb
inc
inc
aad
xorl
sbb
aad
sbb
mov
icebp
ret
mov
testb
xor
lret
sarb
inc
xor
jbe
adcb
mov
pop
insb
push
jl
push
imul
aam
fcmove
mov
imul
sbb
out
jl
push
sub
mov
loop
mov
lret
fwait
test
add
or
ljmp
or
push
lea
stos
imulb
xlat
mov
xor
fildl
jo
in
shlb
fisttpll
adc
dec
adc
pushf
mov
sbb
sbb
repnz
out
stc
out
lds
mov
mov
jbe
imull
or
sahf
mov
lods
mov
mov
adc
push
mov
pop
les
aas
insb
fists
lcall
lods
add
icebp
test
lcall
mov
imul
and
stos
insb
xor
sub
push
sbb
out
add
or
and
mov
pusha
int
xchg
jp
mov
fcom
repz
je
pushf
sub
and
push
inc
inc
out
daa
hlt
push
inc
or
out
mov
inc
mov
xor
mov
cmp
out
pusha
and
sub
call
lcall
inc
inc
mov
lods
ret
loop
lods
ficompl
sub
test
sahf
adc
stos
les
jp
lahf
shl
xor
xor
enter
add
xchg
sbb
hlt
ret
push
inc
fstpt
leave
xor
xchg
je
cltd
inc
mov
and
xchg
cmp
clc
mov
push
aaa
xchg
jp
dec
and
shlb
jecxz
ficoml
popf
push
jns
mov
or
pop
subb
stos
mov
subl
jl
lods
cmp
mov
or
xchg
add
sbb
hlt
inc
inc
subl
dec
or
jp
adc
and
pop
dec
sarb
adc
push
les
adc
aam
stos
or
or
cmp
dec
adc
cli
or
test
sbbb
cli
cmp
nop
jb
ljmp
nop
jg
imul
sub
insb
cmp
push
adc
mov
sub
pop
sub
inc
fstpl
push
mov
adc
add
mov
aad
push
sbb
jnp
mov
stos
inc
pop
inc
jo
jo
shll
xor
push
sub
xorl
push
ret
outsb
xchg
pop
repz
cld
add
add
push
push
pop
test
mov
les
inc
mov
cmp
bound
lret
inc
or
lret
clc
int
in
mov
scas
dec
into
and
jo
xor
imul
outsl
xor
mov
enter
xchg
ljmp
adc
scas
dec
push
inc
inc
mov
call
testb
lcall
ficoml
jbe
outsl
mov
lea
push
cmp
aaa
inc
rorl
stc
pusha
inc
inc
subl
cwtl
inc
xor
lret
sub
adc
cli
fs
lods
pop
cli
jb
sbb
cmp
mov
fsubrl
lock
push
mov
mov
adc
enter
push
push
inc
cmp
bound
movsb
xor
cmpsb
sub
enter
rcll
mov
shrb
in
mov
mov
mov
out
inc
inc
scas
push
adc
sbb
cmp
xchg
aad
into
scas
aam
xchg
ds
les
adc
lcall
or
fcomi
mov
stos
pop
lods
out
notb
cli
fs
jmp
cmp
add
xor
pop
cwtl
adc
movsb
inc
int
add
subb
push
imul
xchg
rcr
stos
adc
pusha
add
mov
or
sbb
push
sub
xor
mov
add
mov
out
dec
rcr
adc
lahf
jo
add
lret
add
add
in
adc
dec
jmp
dec
inc
orb
sbbb
lods
adc
sbb
inc
mov
rcrb
push
push
add
xor
or
out
push
je
push
inc
dec
push
push
push
fadds
test
jecxz
jle
enter
mov
paddusb
sub
push
mov
shrl
cmp
cs
aam
add
sbb
data16
pop
pop
or
and
or
inc
pop
pop
das
call
sbbb
int3
js
add
lods
insl
push
mov
adcl
sub
call
mov
lock
dec
and
xor
pop
mov
adc
mov
inc
test
xchg
add
ja
rcll
and
insb
nop
add
jbe
rcl
mov
sub
cmpsb
fnstenv
add
arpl
xor
cmp
fs
out
xor
imul
shll
sbb
push
insb
incb
lds
xor
mov
adc
or
repnz
sbb
adc
dec
adc
fcmovu
bound
sub
sub
ss
push
xor
push
mov
mov
lahf
pushf
divb
test
imul
inc
inc
ss
dec
in
or
sub
mov
add
xor
push
fisubl
or
mov
dec
inc
hlt
dec
mov
mov
stos
ret
popa
cli
and
mov
test
mov
out
push
out
je
outsl
add
push
cmp
ljmp
push
cltd
testb
test
hlt
xchg
addb
aas
int3
jle
lds
xchg
mov
scas
cli
xchg
sbb
sub
add
shr
sbb
rorb
hlt
sbbl
jbe
inc
nop
cmpsb
shl
push
sbb
dec
popa
mov
lds
add
push
mov
cld
add
xor
push
mov
sbb
jp
adc
xchg
fadds
sti
std
add
push
push
xor
test
xchg
mov
into
into
lcall
cmp
mov
mov
adc
push
ss
mov
or
pop
clc
add
inc
jae
pop
push
in
shlb
mov
enter
cli
sub
xor
dec
fisttpl
mov
mov
ljmp
mov
mov
imulb
mov
xchg
add
inc
imull
ret
fisubrl
lods
push
push
adc
out
pop
mov
pop
mov
mov
xchg
or
flds
pop
movb
add
inc
xchg
mov
leave
push
rcrb
mov
push
pop
movsl
push
cwtl
push
pusha
movb
lods
cwtl
xor
inc
inc
stos
jl
jo
outsb
or
jle
mov
ds
mov
adc
mov
in
cli
sbb
outsb
sar
enter
adc
jl
mov
les
mov
inc
xor
rorb
aam
and
nop
int
sbb
mov
sbb
add
insb
mov
cmpsb
push
fadds
sti
cmp
jge
sbb
add
lahf
out
mov
mov
pusha
shll
andb
jecxz
cs
inc
add
dec
fs
sub
jl
dec
fsts
mov
push
sbb
mov
cmp
lahf
cs
mov
push
inc
xchg
xchg
push
ds
pop
popa
test
hlt
inc
adc
dec
rcl
mov
mov
jmp
xor
inc
mov
nop
clc
xor
les
push
out
lss
sbb
xchg
lahf
lret
adc
dec
inc
rolb
and
xchg
add
push
and
add
loop
and
int3
sub
outsb
cmp
hlt
pushf
push
cmp
cmpsb
aam
mov
fdivl
cmpl
test
pop
lidtl
test
add
arpl
push
int
mov
in
xchg
inc
mov
inc
les
fdivrs
push
add
push
push
push
mov
les
cld
or
mov
arpl
popa
loopne
mov
inc
inc
mov
xor
sbb
adc
cmp
sahf
push
xlat
mov
add
int3
sub
out
push
or
dec
jle
add
lods
pop
mov
js
cmp
xor
jge
push
mov
jmp
adc
adc
dec
mov
stos
adcb
leave
sahf
int
test
pop
or
sbb
ljmp
mov
or
add
mov
mov
lods
jle
sbb
push
daa
add
pop
jg
and
xor
and
addl
popa
pop
shl
and
fdivrs
push
mov
xchg
sbb
pushf
push
push
lret
lock
or
mov
mov
cmp
mov
sbb
cmp
je
jo
and
rcr
xchg
cmp
and
inc
add
push
dec
int
adc
mov
loope
add
in
in
pop
rclb
rol
pushf
inc
lret
arpl
push
push
cwtl
lods
lods
aad
outsb
int3
sub
push
stos
pop
enter
idivb
sub
adc
mov
test
mov
push
xor
mov
mov
mov
divps
out
push
push
dec
addb
xlat
mov
aam
mov
lcall
and
int3
sub
and
inc
imul
xor
cmp
inc
xchg
push
pushf
cld
pop
mov
inc
inc
test
ret
jp
lods
and
push
mov
jb
xchg
cld
xor
popf
add
mov
add
mov
or
push
jb
addb
xchg
int
and
mov
pushf
xchg
bound
imulb
sub
mov
in
push
push
xchg
pop
push
push
xchg
cmp
inc
nop
loop
xchg
mov
repz
sahf
adc
jecxz
test
push
cmc
sub
icebp
gs
andl
cmp
xchg
add
or
adc
pop
stos
ret
subb
add
push
rorb
add
lods
pop
fs
mov
push
cld
test
daa
and
mov
rclb
mov
sub
inc
pop
or
or
sbb
iret
xchg
clc
notb
mov
inc
inc
jge
xchg
pop
roll
mov
mov
sub
in
adc
add
daa
call
dec
lds
clc
mov
sub
imul
cmpsl
mov
or
and
inc
push
and
mov
push
jmp
adcl
xchg
sub
data16
ret
ffree
push
jne
lea
xchg
sbb
or
sahf
cmp
shlb
mov
adc
sub
test
mov
lret
aad
stos
out
ja
lret
lods
mov
insl
dec
pusha
scas
mov
xor
jo
mov
lock
sahf
mov
inc
test
sub
push
imul
inc
jbe
xchg
mov
mov
in
lock
mov
jl
pop
in
les
mov
xchg
pusha
push
rorb
jmp
or
add
cmpsb
cmpsl
mov
pop
cmp
and
lods
fucomi
or
add
addr16
ret
shr
mov
cmp
jbe
adcb
add
enter
and
dec
insb
lcall
xchg
repnz
test
mov
sbb
cwtl
sbb
or
push
or
rcll
bound
dec
ret
loop
jbe
inc
arpl
mov
insl
das
clc
lods
jl
cmpsl
pop
pop
testb
orl
sbb
dec
pop
ret
and
inc
xchg
in
mov
xor
clc
fdivrs
mov
xchg
es
les
dec
add
adc
mov
hlt
or
pop
jbe
add
out
movsb
loopnew
dec
and
cmp
movsl
cmpsl
sarl
sub
pop
jmp
mov
xchg
cmp
push
or
inc
sbb
test
stos
scas
mov
test
jno
cmp
pop
out
push
incl
pop
push
fidivs
rcl
sahf
mov
mov
incb
ss
or
push
sub
sbb
and
or
lcall
mov
into
shlb
adc
mov
rorb
mov
imul
sbb
xor
mov
push
cmp
xchg
mov
je
push
fidivrs
push
mov
imul
push
lcall
xlat
pusha
fdivl
sbb
fxch
xlat
push
bound
xchg
adc
cmp
ret
scas
lcall
pop
inc
dec
push
inc
xor
add
les
xchg
jo
xor
lcall
mov
xchg
aad
data16
adc
mov
xor
mov
out
and
mov
stos
test
imul
mov
push
rcl
push
dec
jns
out
pop
jle
lret
or
sub
sub
pop
push
adc
addb
cmpsb
test
push
hlt
cld
sbb
loopne
inc
sub
cmpsl
mov
mov
mov
sub
das
lret
push
xor
mov
scas
fsubrp
fsubr
sbb
add
push
shrl
rclb
mov
inc
pushf
dec
loop
mov
or
cs
outsl
icebp
inc
and
les
test
add
pop
mov
test
add
test
inc
xor
mov
jmp
adc
push
sub
cmp
cmpsb
movsb
mov
in
dec
repnz
lods
test
pop
je
roll
call
push
or
leave
shlb
add
push
aam
and
cld
daa
jle
fs
adc
insb
stos
mov
xchg
lods
jo
mov
sub
mov
add
lcall
mov
mov
fadd
adc
pop
test
ret
mov
add
xor
insb
sbb
les
test
in
lea
xchg
add
jmp
push
mov
mov
lock
mov
push
sub
rclb
rcll
in
movsb
or
in
and
xor
int3
pop
sub
xchg
andb
filds
std
addb
xchg
push
add
mov
push
push
loopne
cwtl
cmp
popf
pusha
ljmp
add
push
inc
mov
push
pop
push
sub
inc
in
add
mov
rolb
sbb
xchg
xchg
xchg
inc
clc
mov
mov
enter
sbb
add
mov
bound
fsubrp
out
insb
ret
pop
xor
fistps
nop
and
or
cmp
push
addb
test
sub
add
add
shrb
mov
pop
push
lcall
jno
jmp
add
mov
out
push
xor
das
inc
push
xor
ja
mulb
or
rcll
cltd
push
sub
subl
lock
sub
test
pop
push
fadds
xor
stos
jp
dec
xchg
jae
cs
and
xchg
lahf
subl
shrl
cmp
dec
pushf
and
dec
and
fldt
lods
mov
adc
mov
in
push
stos
lods
push
scas
lret
clc
int3
sub
sub
fs
aas
sub
inc
push
out
sub
js
push
stc
hlt
outsl
mov
mov
fimuls
lcall
add
inc
pop
out
sub
fs
add
add
lods
bound
mov
inc
mov
push
sub
jbe
xchg
ja
sub
cld
mov
outsl
or
mov
xor
movsl
mov
mov
inc
jo
and
fiadds
pop
lds
mov
xchg
dec
dec
mov
xlat
xchg
cmpb
loopne
enter
popa
fcoml
loop
jbe
loope
push
movsl
lcall
pop
rep
push
mov
sub
add
pop
sub
enter
sub
test
pop
mov
sbbl
add
fcoms
mov
out
and
mov
adc
mov
imul
cmp
mov
inc
lret
push
adcb
push
mov
push
xchg
mov
mov
ret
dec
out
mov
push
test
push
push
test
adc
aam
cmp
xchg
push
cmp
jno
xor
sbb
test
inc
inc
jl
cmp
add
mov
shlb
push
int
call
int3
mov
xorl
cmp
lods
fmull
mov
arpl
es
aaa
in
add
sub
xor
test
lods
push
jbe
cmp
aam
pop
test
mov
cli
mov
xor
and
ds
mov
mov
pushf
mov
and
mov
mov
shlb
sbb
call
and
in
test
xchg
fsubrs
mov
js
add
mov
dec
into
push
mov
call
das
push
dec
mov
mov
ljmp
scas
jbe
fdivl
imul
add
movsb
cmp
rcll
mov
add
xor
mov
insb
push
push
xchg
add
cmp
inc
sbb
pop
or
push
mov
data16
test
push
ret
pop
incl
pushf
xchg
js
and
inc
mov
cwtl
mov
repnz
push
sbb
outsb
loop
mov
loop
sub
stc
sbb
lods
mov
or
lret
sbb
sub
and
inc
daa
shl
xchg
pop
fadds
mov
add
loop
mov
inc
jp
push
fcmovu
adc
aam
pop
inc
out
jno
test
lock
sub
mov
jl
lret
cmp
xor
pop
lods
fdivrl
scas
or
sub
outsl
inc
or
popf
imul
or
rcll
adc
mov
pop
sub
loope
into
scas
lcall
clc
inc
inc
add
push
wrmsr
test
jg
adc
and
std
rol
fstps
push
mov
fcompl
inc
push
xchg
out
dec
push
mov
shlb
pop
xchg
out
lods
push
inc
inc
inc
or
push
call
cltd
fs
fisubl
sub
repnz
xor
and
sub
xchg
cmp
xor
in
lret
push
jo
mov
xchg
dec
test
loope
mov
mov
lcall
leave
mov
repz
dec
js
add
add
je
insb
jl
adc
ret
cmp
cli
dec
test
adcb
lret
lea
sbb
push
add
push
lahf
filds
shlb
push
inc
scas
or
pop
test
gs
cli
pop
pop
and
fdivs
jle
xchg
push
adc
push
adc
or
sbb
enter
stos
cld
mov
pop
jmp
pusha
sbb
xchg
push
cli
mov
lret
es
fcoms
repz
stos
add
fisubrs
test
mov
lcall
push
aam
inc
xchg
add
adc
mov
int
clc
insl
out
sti
add
lea
sahf
out
sbb
clc
mov
adc
cli
sub
push
lods
dec
push
mov
add
adc
imul
mov
sub
ret
xchg
or
or
out
mov
xchg
dec
jb
ss
sbb
and
outsb
es
fdivs
call
pop
adc
inc
dec
pop
ret
es
sub
repz
push
or
pusha
xchg
cwtl
pop
inc
xchg
mov
jo
push
push
les
nop
or
pop
inc
adc
mov
or
mov
je
inc
cmp
push
cmp
and
adc
jle
scas
mov
adc
aam
mov
mov
mov
verw
lret
fldenv
and
lret
mov
cmp
das
fiaddl
call
call
imul
sub
jne
pushf
add
pop
inc
fdivl
lds
verw
or
xor
insl
int
jno
aaa
add
push
movsl
je
mov
push
xor
xchg
push
pusha
test
fcom
dec
mov
out
pusha
sbb
rolb
push
cmp
mov
fistl
sub
push
dec
or
add
mov
sbb
bound
test
dec
adc
jns
xchg
jne
test
cmp
pop
cmp
and
push
outsl
mov
das
lods
push
push
je
jno
mov
shrb
scas
or
test
push
or
mov
dec
push
add
push
fs
enter
aam
movsb
and
add
xor
fimuls
adc
dec
pushf
mov
push
not
rcr
mov
jp
adc
inc
sub
or
stos
shll
xchg
movsb
daa
add
add
call
icebp
add
in
pop
xchg
inc
push
les
mov
sub
fwait
lods
dec
loope
inc
xchg
leave
cmc
push
push
movsb
cli
jg
mov
fsubrs
cs
sarb
out
jbe
xor
mov
dec
cs
adc
xchg
xchg
es
and
adc
clc
mov
test
lret
adc
aas
mov
sti
int3
int3
push
in
add
cmp
or
push
fdivl
popa
push
sbb
or
jp
adc
addb
scas
lds
testl
fcoms
or
pop
pop
insb
push
inc
nop
inc
in
hlt
addb
mov
leave
mov
add
xor
jle
add
and
push
out
and
std
xor
loopne
call
popf
push
adc
pop
test
mov
test
push
mov
mov
push
jbe
aam
dec
sub
push
mov
sbb
inc
mov
mov
mov
inc
movsl
xor
jmp
rcll
push
loope
loopne
sbb
xchg
fsubl
mov
mov
or
in
mov
into
pop
mov
hlt
mov
add
push
in
inc
rorl
lods
in
adc
mov
jmp
mov
out
inc
hlt
lcall
add
pushf
cmpsb
ja
pusha
inc
imul
mov
insb
xor
dec
pop
loope
pop
out
fs
sbb
push
or
jp
dec
in
add
dec
cmp
sub
sbb
adc
push
xor
imul
hlt
test
push
lods
test
leave
jbe
inc
push
xchg
stos
hlt
mov
int3
add
pop
or
xchg
mov
loop
int3
xor
outsb
add
cltd
out
mov
lods
pop
adc
sbb
inc
repnz
fs
fstpl
gs
pop
inc
repnz
add
cli
lcall
sub
sbb
punpckhdq
push
or
and
push
aad
cmp
pop
loop
andl
inc
adc
push
cli
xor
inc
pop
cmpsb
inc
mov
dec
into
mov
jl
xchg
sbb
mov
sbb
mov
mov
mov
xor
push
fimull
filds
fisubl
in
push
cld
push
repz
sub
mov
xor
rcll
xor
sbb
pop
xchg
pop
test
sbb
adc
fildll
jge
push
pop
rol
inc
add
daa
mov
and
inc
add
jae
fdivl
dec
in
xor
popa
cmpsb
nop
pop
lcall
mov
shl
mov
divl
test
mov
mov
dec
mov
les
cmpsb
mov
jne
and
outsb
test
shll
pop
or
xchg
test
fldenv
mov
movsl
ss
lret
xor
cmp
jp
add
inc
inc
andl
sub
inc
jbe
fisubs
nop
inc
mov
pop
popa
sub
rclb
lods
xchg
mov
bound
push
jmp
dec
adc
push
aad
sub
mov
les
outsl
test
insb
inc
or
dec
or
add
ret
mov
in
sbb
jo
and
lods
sbb
xor
mov
hlt
adc
and
adc
mov
mov
or
hlt
loop
stos
inc
sarl
cmp
and
sub
mov
mov
jl
outsb
in
add
sub
fs
add
rorl
adc
addb
xor
out
insl
xchg
lcall
lcall
adc
dec
test
insb
pop
rolb
nop
push
adc
testb
lods
push
das
rclb
int
cmp
push
cld
or
clc
cmp
mov
mov
jg
push
push
ljmp
xor
out
pop
mov
and
xor
xor
shll
add
push
xorb
rcrb
test
fmull
fnstenv
inc
mov
xor
lods
dec
test
jbe
mov
outsb
shlb
cmp
sbb
pop
orl
dec
push
in
jle
mov
les
mov
mov
or
shrb
outsb
sahf
clc
xchg
or
jno
mov
cmp
sti
and
fmuls
nop
dec
insb
inc
mov
in
fsubs
pop
cs
add
sbb
fs
cmp
insb
push
mov
insl
imul
shll
push
dec
sti
and
lds
je
jmp
cs
pop
xchg
mov
fwait
fs
push
jmp
or
xor
dec
and
mov
repnz
inc
daa
lret
leave
ret
lock
ss
pop
icebp
mov
sub
jbe
hlt
xor
add
addl
out
xchg
lock
adc
xchg
jle
andb
arpl
fcomip
xchg
adc
jp
mov
and
dec
inc
add
lcall
inc
mov
sbb
lret
pop
mov
lcall
pop
mov
clc
sub
mov
rorb
iret
sub
call
les
add
lret
xchg
aaa
mov
pop
push
notb
imul
lock
ja
fisttpl
sub
insb
or
adc
push
cwtl
stos
push
xor
inc
dec
adc
fcmovnu
adc
inc
mov
add
jbe
ficompl
stos
fdivp
lcall
call
sub
hlt
xchg
rorb
rolb
into
cmp
imul
shlb
add
sbb
cmp
js
hlt
aas
and
add
cmp
or
sub
fdivrl
mov
dec
mov
popa
mov
xorb
mov
aad
xchg
jbe
jnp
adc
cli
insl
rcr
cli
in
sub
xlat
or
lcall
in
call
fidivl
adc
out
sbb
add
dec
fwait
rcrl
loope
jbe
inc
inc
rcrl
cmp
je
adc
mov
cs
stos
test
mov
jecxz
dec
data16
mov
mov
mov
sub
push
or
imul
mov
aad
lret
lock
xchg
aam
inc
xchg
pop
jne
inc
push
push
bound
mov
mov
mov
push
test
mov
cwtl
or
push
loop
ss
mov
cmpb
sub
xor
lods
roll
mov
mov
daa
orl
fcomps
loop
mov
sub
or
rcl
mov
adc
movsl
mov
stos
add
add
mov
or
stos
push
push
mov
jle
sahf
sub
add
push
and
mov
mov
test
xchg
mov
loopne
sub
test
sub
dec
in
cwtl
push
fisttpl
stos
xor
lock
movsb
sbb
insl
in
or
addr16
pop
adc
adc
data16
andl
cli
insb
hlt
shr
mov
sub
mov
xchg
push
iret
ds
adcb
mov
add
mov
add
add
ret
nop
jge
mov
aam
mov
push
aad
arpl
lods
sub
je
in
sub
hlt
cmp
addr16
pusha
test
es
xchg
mov
shrb
subb
or
sub
jae
sub
pop
mov
pop
cmp
mov
add
rclb
add
add
stc
test
push
mov
push
cmp
or
or
push
inc
out
xchg
mov
push
test
fadd
femms
dec
xchg
or
adc
mov
xchg
adc
xor
pop
pop
cmp
push
cmp
jb
mov
cmp
mov
dec
push
scas
pop
hlt
cmp
popa
pusha
push
push
jbe
pop
lods
adc
fwait
mov
push
inc
sub
adc
jg
and
add
lret
ds
add
int
adc
pop
popf
push
sbb
or
dec
mov
fsub
add
adc
sub
pop
arpl
mov
test
xor
and
mov
rclb
clc
fcomps
nop
cli
dec
ss
xor
sbb
ret
or
fisubrs
loope
daa
sbb
fwait
add
out
xor
jg
pop
sbb
out
mov
sti
mov
lret
adc
mov
mov
mov
mov
cltd
xchg
or
sbb
adc
mov
inc
mov
lods
faddl
push
add
mov
test
sub
pop
shrl
cmp
sbb
int
pop
or
stos
or
lock
xor
scas
sbb
adc
xorb
jo
inc
add
jl
xchg
add
fists
fildll
lods
dec
shlb
xchg
ljmp
mov
cli
in
fwait
mov
mov
dec
and
inc
sub
cmp
rcll
adc
sbb
and
stos
lock
pop
stos
sub
mov
repnz
lret
or
and
fwait
scas
adc
movsb
fldcw
fcmove
sub
jae
dec
lods
cmp
lods
lret
push
jnp,pn
mov
iret
or
iret
push
and
lahf
rolb
push
and
inc
jo
fldz
fcoml
push
adc
add
push
sub
pop
sub
dec
mov
mov
or
inc
jp
lods
pop
jo
dec
cwtl
in
sub
xor
xchg
push
xor
lret
cmpb
sbb
je
lock
mov
inc
sbbb
fdivl
jo
dec
and
cmp
stos
lret
jle
cmpsb
loop
mov
and
push
cmp
xor
outsb
scas
sub
mov
rcl
lret
push
mov
adc
fs
rcr
mov
dec
and
jmp
inc
mov
xor
sub
lahf
lods
adc
call
add
cmp
lock
addb
insb
add
mov
rolb
push
ljmp
jmp
dec
xchg
add
or
sahf
fidivl
sub
mov
rorl
add
adc
ficoml
and
popf
stos
mov
in
jl
add
mov
inc
cmpsb
ds
xchg
les
or
mov
nop
pusha
imul
sub
push
in
pop
cmp
movsb
aam
mov
sub
mov
push
adc
pop
cli
or
rol
addr16
jbe
mov
dec
add
xor
jne
lods
stc
mov
roll
popa
mov
mov
lsl
jbe
cli
xchg
dec
push
mov
fnstcw
sbb
mov
mov
sbb
xor
clc
loope
inc
add
imul
and
cs
add
je
xorb
ljmp
push
inc
jnp
int3
sbb
inc
and
adc
sub
mov
mov
adc
push
lahf
or
repnz
jns
insl
push
cmpsl
pop
pop
sbb
cli
mov
cld
add
add
add
stos
scas
mov
mov
sbb
lods
mov
repz
mov
mov
push
cmp
jge
sub
stos
test
push
cmc
insl
shll
divb
jmp
mov
jle
push
into
cmp
aam
aaa
jp
std
add
jo
inc
adc
ret
fs
inc
shlb
lea
aam
xchg
sbb
imul
hlt
add
subl
xor
pusha
push
and
bound
dec
mov
dec
cmpsb
std
push
xor
cmp
inc
mov
pop
out
push
les
imul
cmp
add
dec
aam
cld
mov
rcll
in
add
xchg
mov
adc
push
popa
fidivrs
call
test
mov
out
mov
loop
pop
mov
pop
mov
push
lock
arpl
aad
scas
shlb
pop
lock
add
test
jp
addl
imul
into
fwait
mov
jbe
sti
push
sahf
mov
mov
and
sti
dec
insb
jp
mov
push
or
fbld
pop
sub
cltd
jl
dec
and
add
shrb
ljmp
loopne
sub
pop
push
aad
fcom
xor
jo
push
lret
push
jl
faddl
mov
pop
add
pop
push
xor
sbb
add
adc
pop
dec
pop
add
pop
xrelease
lret
mov
mov
rclb
mov
subb
loope
int
pop
stos
icebp
adc
inc
mov
pop
or
rcl
adc
fdiv
nop
pop
mov
sbb
test
adc
testb
inc
mov
or
jo
shrl
cmc
sub
xchg
cmp
sub
push
push
aam
shlb
ficompl
or
or
enter
mov
rcrl
add
inc
cmpsb
fs
and
stos
sub
xchg
push
sub
in
loopne
pop
add
adc
cmp
sbb
add
ret
pop
call
dec
cwtl
mov
push
lods
lcall
pop
sbb
mov
inc
xchg
rorl
add
enter
adc
inc
aad
mov
add
out
out
fistl
mov
outsb
fimull
push
addb
out
movsb
stos
shlb
xchg
push
xchg
stos
cmp
sbb
sbb
or
push
push
imull
adc
js
loopne
cwtl
lcall
insl
or
mov
mov
pop
push
adc
int
sub
sbbb
push
cli
sub
sahf
inc
sub
mov
daa
add
rolb
push
repnz
idiv
mov
rorl
insb
add
scas
mov
dec
mov
jmp
fsubrl
in
jp
mov
or
cwtl
jecxz
cmp
adc
test
insb
ret
mov
loopne
int3
adc
sbbb
xchg
aam
call
roll
sub
test
push
out
jge
add
icebp
and
or
lcall
lea
cmp
in
ret
fisubl
sub
push
push
pop
jle
js
popl
or
inc
adc
insb
push
cltd
dec
cs
push
push
iret
push
push
cli
mov
push
insl
xchg
mov
jno
cmpsb
lock
pop
gs
testb
jl
jo
sarb
cld
ss
mov
mov
ds
cli
inc
xchg
adc
out
mov
push
push
adc
pusha
out
push
aad
and
mov
sarb
sub
add
pop
fildll
push
ljmp
out
mov
mov
or
mov
jg
push
adc
fs
push
mov
subb
je
push
cmp
mov
mov
std
inc
mov
jmp
add
lock
mov
lods
lods
sub
ljmp
add
cs
cmpsl
out
sub
mov
scas
mov
inc
ret
lcall
push
imulb
enter
or
icebp
aam
insl
jnp
xchg
gs
in
xor
adc
mov
jnp
and
and
xchg
xorb
push
push
scas
mov
xchg
call
add
cmpb
inc
pop
scas
pop
adc
jl
into
dec
or
es
aad
stos
pusha
out
fidivrs
push
adc
sahf
les
add
lods
or
push
sysenter
fs
xor
xchg
test
sti
fnsave
or
or
jecxz
mov
adc
or
cli
pop
pop
push
inc
inc
insb
fidivl
mov
repnz
fcomp
ljmp
mov
mov
mov
xorb
and
hlt
sub
sub
push
in
js
insb
cmp
fs
add
imul
loope
push
push
shl
inc
cmpsb
jne
lock
loope
xor
mov
pop
inc
shll
std
xchg
pop
cmp
xor
outsb
loop
leave
cmpsb
and
pop
dec
ret
push
sbb
addb
fiaddl
dec
repnz
orb
insb
pop
sub
inc
loop
or
cmc
add
mov
jl
push
mov
dec
out
lcall
es
pusha
add
dec
imul
pop
add
movsb
add
sbbl
jo
add
or
and
mov
stos
mov
ss
stos
adc
push
shrd
sub
cwtl
mov
xor
jge
popa
or
shrl
inc
mov
sub
repz
lcall
cmp
call
add
dec
lock
es
or
push
xchg
incb
cmp
xchg
pop
adc
ja
and
mov
mov
shl
clc
cmpl
xchg
dec
rolb
and
pop
subb
inc
lcall
mov
add
into
adc
sub
mov
mov
push
ja
sub
mov
popa
xchg
cmp
insb
add
mov
jbe
push
xor
or
shlb
pop
and
or
cmp
xor
jns
scas
xchg
add
mov
in
subb
rcrb
jo
out
pusha
xchg
ds
xor
jb
push
cli
popf
or
outsb
sub
inc
adcl
int
cmp
sbbl
mov
cli
mov
stos
sbb
xor
inc
push
nop
into
pop
fcompl
push
scas
ret
loope
jbe
aam
dec
mov
push
xchg
fdivs
mov
jbe
fcoms
sbb
add
jne
inc
shll
push
sub
add
outsl
mov
movl
rcr
mov
or
xor
push
mov
mov
add
movsb
loop
sub
push
pusha
fldt
mov
mov
mov
ret
push
pop
hlt
cmp
ja
add
xorb
cwtl
push
lret
lret
jo
xor
pop
mov
pushf
lcall
xor
xor
sbb
add
lea
adcl
mov
or
xchg
roll
pusha
xchg
repnz
sub
mov
and
les
cmpsb
jae
or
adc
mov
fldenv
mov
or
xchg
dec
fwait
insb
jae
pop
pusha
pop
ret
loop
push
xchg
adc
adc
popf
insb
inc
adc
fcoml
mov
sbb
sub
pop
sub
movsl
dec
add
js
jbe
inc
popa
mov
cltd
add
mov
js
inc
fwait
adc
add
mov
int3
rolb
push
xor
data16
aam
add
push
add
pop
sarl
pop
das
pop
sub
bound
add
xchg
fadd
fs
add
fidivrs
popa
xor
lods
mov
pusha
mov
sub
sub
mov
cs
pop
mov
or
cs
movsl
aad
icebp
into
inc
pushf
xchg
cli
mov
lret
ret
mov
add
je
add
in
es
int
push
xchg
mov
subb
fsubs
add
ret
push
push
xchg
mov
test
fcmove
mov
data16
xchg
ret
lods
ffreep
data16
sub
pusha
imul
pop
cmc
push
mov
push
inc
inc
inc
push
dec
push
clc
or
loope
fld
add
test
es
mov
mov
fdivl
shrb
mov
ljmp
push
or
jmp
mov
into
sbb
out
outsb
sahf
and
sarb
push
mov
mov
rcrb
dec
in
cmp
test
mov
cmc
ret
inc
in
cmp
fadds
xor
push
loope
fiadds
mov
shll
xchg
inc
and
mov
repz
mov
push
adc
push
dec
jb
mov
jle
xor
cli
ret
pusha
aaa
mov
imul
and
jns
inc
pop
xor
inc
ret
xor
ret
mov
ret
ror
pop
out
add
sub
push
jle
push
sti
cmpsb
inc
hlt
inc
mov
in
shl
int3
push
mov
outsl
scas
jne
faddp
test
lret
jbe
push
xchg
rcr
cwtl
scas
add
inc
cmp
mov
push
mov
in
mov
mov
dec
cld
jb
mov
inc
sbb
dec
pop
andb
fldenv
and
xchg
pop
je
loop
mov
inc
aaa
pop
push
call
repnz
mov
mov
jp
imul
add
mov
into
inc
and
mov
sbb
sbb
push
cmp
push
inc
or
and
jle
jl
outsb
cmp
jg
lods
mov
mov
xchg
xchg
cld
inc
jl
pop
push
in
jae
scas
or
push
add
insb
push
bound
test
lcall
xchg
pop
fisttpl
push
ret
cmpsl
jb
and
sub
movsb
jmp
mov
xor
pop
les
xchg
dec
push
mov
mov
xor
das
test
add
xchg
and
cmp
pop
pop
xor
rorb
fsubs
or
popa
fwait
sbb
lock
xchg
push
pop
ficoml
pop
aam
sbb
es
les
rol
mov
adc
sbb
jo
adc
loop
push
cmp
cmp
or
add
aaa
test
cltd
or
insb
sub
lods
dec
xchg
jbe
lret
cmp
loopne
add
clc
xlat
or
or
dec
mov
or
data16
and
das
jmp
in
add
push
rolb
cmp
lcall
dec
pushf
mov
pusha
adc
cmpsb
testl
or
fists
fists
out
pop
popa
mov
dec
sub
inc
sub
in
pop
ror
mov
sbb
sbb
ret
gs
xor
push
xchg
dec
hlt
jp
sub
push
hlt
in
je
adc
add
pop
sarb
xchg
fcomps
xor
mov
push
jbe
test
mov
jl
pop
add
pop
cs
inc
pop
dec
shlb
icebp
mov
mov
xor
rcl
cs
add
and
push
sbb
or
sbbl
and
jae
push
es
push
dec
push
xor
adc
hlt
mov
andb
inc
data16
std
sbb
xor
cmp
or
lock
xchg
sbb
inc
les
push
jo
pushf
add
pop
dec
out
ljmp
jo
push
inc
cmpsb
jo
cmpsb
mov
xchg
ret
or
cs
ja
fistl
cmp
or
out
test
push
sbb
xchg
push
or
aad
sahf
add
fdivs
inc
mov
ss
pop
mov
mov
pop
and
jle
clc
into
push
push
or
mov
mov
shrl
push
push
pusha
pop
dec
adc
push
ret
mov
pusha
leave
fs
mov
repz
add
inc
add
xor
lcall
loop
add
ljmp
sbb
hlt
cmp
push
xor
push
lcall
lret
push
shrw
push
pop
outsb
movsl
in
pop
or
mov
arpl
sbb
pop
xchg
push
mov
clc
ret
add
fsubs
outsb
mov
push
push
int
mov
mov
adc
cld
xor
jbe
mov
push
push
adcb
xor
lds
adcb
jle
mov
fucomi
mov
adc
shlb
push
cmpsb
mov
lods
adc
mov
adc
es
mov
js
ret
mov
lret
adc
mov
test
in
stos
lcall
add
jo
jo
cmp
mov
cmp
pushf
test
cli
loop
cmc
or
ljmp
mov
add
sbb
mov
sub
ljmp
push
or
loope
out
dec
sbb
rcl
loope
mov
pop
push
mov
lret
pushw
addb
cmp
je
out
xchg
sub
icebp
cli
add
mov
xor
fdivs
stos
pop
orb
mov
dec
inc
pop
xchg
push
ds
jbe
and
lods
fdivp
push
mov
xchg
mov
xor
and
addr16
movsb
js
bound
jle
lds
lods
jbe
jl
cmp
add
xchg
jbe
sbbb
lea
mov
mov
xor
iret
sbb
scas
dec
dec
lods
hlt
mov
stos
dec
mov
movsl
xor
orb
and
adc
in
inc
aad
les
lcall
or
lods
outsb
add
mov
xor
call
out
stos
fidivl
fdivl
jmp
cmp
and
cmp
mov
pop
adc
push
xor
test
aaa
and
mov
sub
add
mov
inc
adc
push
inc
push
xchg
push
adc
fcoml
lcall
or
test
mov
add
push
arpl
adc
jp
add
cmp
cmp
rorb
cmpsb
add
add
inc
push
lcall
lret
fwait
aam
and
cmp
sbb
or
inc
stos
ss
in
xor
and
stos
fsubp
cmpsb
add
cmpsl
or
dec
ret
or
enter
subb
pushf
out
hlt
inc
mov
adcb
push
push
dec
rcr
xor
sub
push
addb
fsubs
jecxz,pt
fidivrs
adc
loopne
dec
int3
test
inc
or
fbstp
aas
cmp
int
insb
push
cmp
pushf
cmp
mov
inc
sub
rcll
mov
xchg
lods
xchg
sbb
mov
int3
lock
insb
inc
cwtl
movsb
add
inc
clc
mov
push
pop
repz
sarl
pop
push
push
mov
xlat
and
push
push
shll
pop
aaa
out
repnz
mov
pop
inc
xor
sub
xorb
je
sti
mov
push
sub
ljmp
outsb
or
add
es
test
inc
and
bound
xchg
and
xor
pusha
xchg
inc
dec
mov
sbb
xor
and
pop
insb
jno
cs
lods
fidivs
mov
xchg
es
push
sub
push
mov
xor
dec
mov
sbb
push
push
jb
add
mov
inc
add
sub
movsb
add
xchg
push
int3
push
sti
or
test
lret
mov
add
jbe
lock
sub
ds
in
stos
jl
rol
add
test
cmp
mov
sub
sub
lods
out
nop
cmp
rclb
pop
cmp
cmp
add
int
mov
out
jb
faddp
or
push
jae
add
adcl
push
and
cmp
ss
jle
mov
loopne
inc
ret
ss
mov
push
roll
pop
aam
add
cmpsb
inc
jecxz
out
jge
mov
mov
mov
in
mov
scas
and
rolb
sub
cmp
mov
loop
push
bound
sbb
imul
adc
dec
inc
test
mov
and
mov
fadds
in
fwait
sub
sbb
or
add
out
or
movsb
mov
push
inc
jne
outsl
cli
xor
lret
mov
js
push
subb
jo
js
lods
sub
mov
dec
lret
pop
popf
gs
sub
add
leave
call
mov
and
cld
mov
cmpsb
stos
mov
add
mov
jg
push
daa
add
ss
add
dec
adc
lcall
mov
push
bswap
and
fsubrs
shlb
mov
dec
push
mov
and
sbb
mov
push
nop
push
ja
rcr
push
js
addb
lock
jl
aaa
or
jb
and
pop
sbb
pop
ja
xor
je
cs
jl
pushf
cmpsb
mov
push
jmp
bound
add
jnp
cmpsl
push
movsl
ljmp
and
test
pop
lcall
add
hlt
xchg
aas
sbb
push
push
dec
push
pop
sub
ret
and
pop
dec
adc
xchg
test
call
gs
call
cmp
xchg
inc
test
loopne
rorb
mov
nop
scas
out
sub
inc
sbb
or
xchg
ss
sbb
ret
or
ret
ss
add
xchg
sbbl
mov
into
inc
shrb
aaa
shrb
dec
cmp
fsubs
rcl
adc
pop
xchg
addb
cmp
faddp
xchg
fcomps
cld
adc
sbb
push
add
add
repz
mov
mov
pop
shrl
cli
outsb
mov
add
or
out
sub
mov
es
mov
mov
lods
or
cs
push
test
mov
push
popa
xchg
shlb
mov
mov
add
mov
sbb
push
mov
push
pop
negb
sub
pop
test
aam
cs
rclb
mov
js
stos
ret
and
lret
or
adc
sub
and
lock
mov
mov
ljmp
inc
shlb
sahf
popa
mov
stos
push
lea
sti
hlt
jo,pt
push
dec
bound
nop
or
pusha
inc
add
mov
push
sahf
sub
push
sbb
jp
mov
pop
lock
into
or
pop
sbbl
adc
xchg
inc
mov
int3
dec
sub
add
xor
pop
jl
insl
sbbl
sbb
subb
add
mov
lret
pop
fadd
xchg
nop
jle
loop
jbe
lcall
mov
inc
mov
shll
mov
mov
stos
or
pusha
fidivrs
adc
rorb
ret
mov
push
shrb
js
inc
xchg
nop
inc
jb
push
daa
in
aaa
add
inc
mov
inc
mov
test
adc
xor
fisubrl
sbb
mov
adc
and
and
js
sub
fldt
jle
push
mov
push
rolb
aas
xor
mov
adc
das
or
mov
xchg
mov
or
mov
jp
fwait
mov
cmpsb
mov
js
xor
or
clc
sbb
sbb
sbb
inc
test
jb
imul
lea
inc
enter
mov
ljmp
or
out
out
imul
cmp
cmc
ds
in
cmp
sub
mov
jne
add
mov
or
mov
jl
push
pop
cmpb
loopne
insb
test
sub
push
mov
push
mov
or
cld
insb
mov
add
mov
xor
mov
mov
inc
sarb
jo
pop
imul
fcom
inc
loopne
out
mov
add
ret
sbb
sub
push
mov
add
shrb
adc
cmp
mov
pop
inc
or
sbbb
lds
inc
jl
push
mov
and
xchg
xor
push
and
loope
pop
in
fdiv
movsb
movsb
test
inc
scas
ljmp
add
add
push
rcrb
pop
fwait
je
in
repnz
rcrb
dec
lcall
xchg
jle
push
add
and
push
cs
mov
mov
xor
mov
push
lods
mov
push
les
into
ret
cmp
leave
inc
aad
lock
inc
fistl
xchg
decb
aad
sub
call
cmp
jp
mov
ret
jo
testb
loopne
fcomip
jb
inc
mov
xchg
dec
je
shrl
adcl
xchg
pop
add
shll
mov
adc
jecxz
les
pop
enter
mov
mov
xchg
cli
arpl
add
shl
cmp
incb
cwtl
scas
inc
cmpsl
adc
lret
xor
dec
pusha
xchg
subps
xor
mov
push
adc
mov
push
mov
int3
loopne
test
mov
sub
push
out
mov
mov
mov
sub
and
add
inc
mov
push
adc
mov
cld
add
inc
pop
les
push
adc
icebp
add
loop
adc
lret
xor
sar
pop
xchg
inc
fistl
push
lock
pop
jo
mov
pop
adcb
dec
jle
xchg
inc
pop
lods
leave
lods
movsb
out
cmc
and
cs
push
xchg
mov
sub
insb
jae
add
repnz
icebp
dec
fsubs
rorl
dec
mov
icebp
lcall
sbb
aas
mov
sbb
incl
clc
ss
xor
popa
mov
outsl
jbe
addl
mov
test
pusha
into
sbb
add
inc
movlps
inc
rolb
mov
jo
xor
or
and
in
add
mov
mov
js
jg
shl
add
adc
out
ljmp
jl
data16
or
inc
hlt
loop
in
mov
and
xor
push
sbb
xchg
lock
xor
add
pusha
cmpsb
pusha
and
fcomps
mov
cmpsb
ret
enter
clc
push
cld
inc
shlb
dec
leave
testb
adc
lcall
lret
ret
cmp
fimull
or
xchg
outsb
insl
or
inc
xchg
inc
in
orb
sbb
or
push
ficomps
outsb
xor
ret
push
cmp
sbb
outsb
lcall
movl
xor
js
mov
push
xchg
iret
hlt
gs
pushf
push
outsb
adc
xrelease
add
and
in
sub
and
dec
mov
test
cs
or
cmpsl
xchg
push
mov
inc
pusha
dec
cmpsl
or
dec
mov
inc
adc
pusha
jo
push
and
into
jmp
xor
pop
add
mov
hlt
js
sub
or
mov
and
addb
cld
jnp
mov
repnz
pushf
push
cmpsb
inc
cmp
or
mov
lds
ss
add
lock
push
push
loope
pop
push
scas
testb
sbb
pop
cld
and
mov
loopne
add
push
les
popa
insl
xor
das
es
adc
aaa
es
pop
add
jne
mov
fimull
sti
pop
into
pop
loop
cmp
adc
ljmp
pop
sub
es
and
sub
test
lods
push
inc
adc
lcall
cmp
fchs
mov
jae
in
push
adcl
pop
aad
js
sahf
adc
fisubs
pusha
fcoms
push
fdivl
aam
outsl
test
xchg
sub
movsb
popa
fildl
jne
mov
test
xor
les
aad
mov
sbb
xor
decl
sti
hlt
mov
fadds
or
int3
mov
xor
add
das
out
mov
mov
push
es
fs
rolb
stos
add
add
pop
roll
push
outsb
inc
xor
lods
xor
aad
je
mov
cmp
repz
inc
jo
movups
inc
orl
push
in
stos
cmpsb
int
push
in
sbb
fstpt
ss
inc
lcall
add
lock
shl
cmp
mov
add
xor
add
cld
imul
inc
or
inc
ret
add
movsl
and
lcall
and
push
insl
sub
pushf
lds
cmp
mov
sahf
add
or
mov
popa
jb
sahf
in
cli
and
dec
call
adc
lods
sbb
outsb
sbb
insl
push
mov
lret
dec
inc
movsl
sbb
mov
loope
test
dec
add
cmpsb
inc
adc
aam
add
in
or
pop
mov
pop
repnz
adc
lcall
insl
dec
dec
pop
or
jbe
sub
js
icebp
ret
loopne
adc
subl
inc
hlt
or
dec
adc
lret
adc
aad
es
push
jne
mov
or
jb
mov
xor
mov
gs
push
scas
fists
pop
cld
lock
or
mov
ss
lcall
pop
les
mov
push
xor
loope
xorl
nop
adc
sbb
iret
inc
pop
and
in
push
lods
dec
xor
sbb
ret
shrb
cld
xor
out
xchg
xchg
mov
adc
pop
hlt
mov
out
cli
push
mov
add
pop
pusha
test
xchg
mov
push
or
scas
js
dec
outsb
mov
pop
or
stos
lods
adc
or
mov
pop
push
or
jns
mov
or
cltd
loop
stos
push
inc
int3
rolb
cmpsl
movsb
mov
push
test
inc
add
sbb
cs
pop
or
push
stos
bound
fidivrl
cmp
js
pop
dec
adc
pop
rol
push
js
push
mov
or
fsubrs
xor
cmp
and
cli
nop
hlt
sbb
cmpsb
testb
adc
pusha
fwait
shr
sbb
cmp
xchg
or
fmuls
xor
or
sbb
dec
jo
pop
inc
push
test
push
cmp
dec
test
cmovs
pop
sub
inc
mov
pop
add
dec
add
sub
sbb
aam
fs
xchg
andb
adc
sahf
ljmp
add
into
add
mov
bound
fs
ret
push
sarb
xor
je
add
or
sarb
out
mov
add
in
adcl
pop
inc
insl
and
sub
mov
pusha
loopne,pn
pop
sub
or
js
lods
jno
out
je
andb
sahf
jl
fst
mov
prefetcht0
dec
lods
push
ljmpw
mov
push
or
fcmovbe
mov
add
mov
mov
in
add
cmp
add
lods
ret
mov
xorb
push
rcl
insb
pop
mov
adcl
pop
pop
aad
adc
xor
mov
add
insb
fsubl
test
aad
xlat
sub
subb
xor
js
pop
adcb
mov
loop
mov
out
mov
xor
inc
mov
mov
pop
mov
xchg
mov
lods
or
or
inc
shrb
insb
or
je
and
aam
xchg
and
sub
sbbb
jne
mov
xchg
xchg
or
cmpsb
addr16
jbe
xor
mov
mov
or
mov
xchg
mov
jl
sbb
test
add
das
les
or
add
dec
pop
pop
int
test
shrb
sbb
xchg
cli
insb
xor
push
nop
xchg
mov
ret
ret
dec
jae
ret
lock
jle
fs
jmp
sbb
mov
adc
or
out
addr16
or
sbb
adc
mov
sbb
inc
call
ficoms
cmc
je
add
dec
jmp
arpl
sbb
cmp
add
inc
push
adc
lret
lock
add
loopne,pt
push
scas
mov
add
mov
adc
push
mov
ret
stos
cmpb
xor
cltd
xchg
sbb
test
add
mov
inc
stos
mov
sbb
call
push
mov
testb
mov
das
pop
xor
repnz
ret
shrl
or
pushf
popf
sahf
cmpsb
pop
push
pop
mov
lods
inc
adc
stos
mov
xor
adc
xor
lret
cmp
repnz
cmp
and
les
lret
adc
shrb
xchg
sbbl
ret
mov
scas
mov
filds
fildl
movsb
dec
enter
push
loopne
aam
mov
dec
cmpsb
aam
shrb
loopne
inc
pop
cmp
xchg
jne
stos
mov
jl
or
mov
test
inc
jle
inc
inc
jne
lods
fcmovbe
pop
loop
adc
jbe
mov
movsl
mov
adc
add
xchg
pusha
mov
fcomps
jo
mov
call
repz
loopne
jmp
sub
aaa
dec
inc
dec
insb
jo
mov
test
inc
cld
test
test
and
lods
js
pop
inc
or
in
fiadds
adc
aad
push
mov
orb
shrl
inc
subl
or
sbb
or
fmuls
push
popf
sbb
test
adc
test
cwtl
xchg
in
inc
sub
mov
add
mov
pusha
pop
and
sub
or
fs
sarl
dec
xchg
ljmp
dec
push
daa
push
add
adc
test
adc
mov
push
adc
or
es
jnp
cmc
push
test
inc
cmp
ficoms
fiaddl
or
mov
jl
shrb
stos
sbb
ljmp
imul
adc
rcrb
cmp
lods
imulb
int3
mov
enter
cmpsl
inc
loopne
lea
mov
gs
cmp
inc
shll
out
push
push
cmp
test
arpl
adc
inc
add
addr16
jecxz
rcrl
push
or
inc
push
mov
jp
xlat
xor
inc
add
xchg
mov
sbb
cmp
dec
push
push
mov
push
inc
sub
dec
cmpsb
int
je
subb
shlb
cmp
sbb
fwait
loopne
lcall
pop
sub
ljmp
adc
pushf
mov
or
push
or
adc
cld
insl
rolb
add
xlat
enter
lcall
mov
jno
ss
sbb
mov
ljmp
int3
jg
jle
dec
sub
xchg
imul
rdtsc
pop
jle
fisubrs
cs
mov
pop
subb
cmpsl
and
gs
out
data16
je
or
xor
sub
test
lods
imul
faddl
mov
sbb
out
xchg
cmp
lcall
dec
test
adc
cmp
and
pop
sub
push
push
sub
test
cmp
ret
aad
and
push
shrb
mov
sbb
pop
push
movsl
xor
jle,pt
test
mov
rcl
dec
sbb
adc
fsubrs
jp
lods
leave
jo
push
test
xchg
icebp
mov
stos
enter
mov
mov
or
xor
adc
push
or
mov
add
mov
fists
test
sbb
add
fs
mov
adc
push
rcrl
test
and
add
stc
andb
push
xor
inc
pop
mov
push
push
imul
add
lds
push
dec
inc
cli
and
add
nop
inc
pop
test
and
push
movsb
lods
shll
mov
cltd
jl
movsl
lcall
or
imul
lock
cld
dec
ds
mov
jno
pushf
add
int3
or
mov
add
jp
sbb
out
pop
push
lods
pop
mov
jecxz
pop
movsl
sub
mov
xchg
stos
sbb
call
stos
xchg
inc
bound
xor
sbb
mov
mov
inc
out
push
testb
fldenv
out
rolb
lcall
cli
imul
scas
std
mov
hlt
sub
inc
js
cmpsb
inc
push
adc
sbb
add
cmp
pusha
inc
sub
mov
mov
push
pop
js
jp
push
jmp
xor
cmp
test
cmp
add
add
push
push
call
add
push
sub
in
adc
lahf
xchg
xchg
jl
fisttps
in
and
sub
rcll
pop
ss
lock
shr
sub
mov
add
push
xor
or
add
xchg
inc
ds
js
push
sub
sub
cmpsb
jg
or
add
dec
dec
incb
es
sbb
mov
xchg
and
rorb
add
mov
sbb
mov
inc
jmp
push
scas
lock
rorl
fcmovnbe
loopne
mov
add
pop
push
pusha
flds
xchg
adc
inc
inc
rorl
fimull
mov
fisubrl
fstpt
aad
jne
inc
loope
cmc
lock
push
inc
ret
daa
pusha
sub
push
dec
outsl
push
dec
push
insb
mov
inc
orb
rcr
and
js
jne
gs
ficomps
or
push
aam
cs
sub
lret
ljmp
push
or
test
jl
fadds
arpl
mov
ret
push
int3
xchg
mov
cmp
cmpsb
add
orb
bound
add
push
lret
fiadds
xor
pop
sub
mov
stos
mov
out
mov
mov
out
push
pop
dec
shlb
movsb
mov
adc
pop
push
push
mov
add
cmp
sbb
bnd
mov
movb
or
push
inc
sub
pop
icebp
mov
out
mov
add
int3
add
out
adc
dec
jl
push
bound
and
xchg
push
push
inc
jo
adc
sbb
or
imul
rolb
jg
inc
inc
fsubr
nop
inc
xchg
push
inc
loopne
mov
cli
les
fcom
gs
dec
mov
fnsave
push
cmp
dec
lods
pushf
js
mov
data16
mov
and
dec
mov
jb
shll
sub
clc
mov
mov
add
adc
ds
pushf
sub
insb
jmp
movsb
fdivr
push
iret
adc
or
stos
sbb
aam
gs
push
sbb
xchg
push
pop
inc
inc
test
hlt
or
cmp
or
sbb
movb
add
add
xchg
inc
push
push
pop
add
insl
or
adc
mov
dec
jo
add
push
push
outsb
out
pop
fs
mov
pop
fcompl
mov
subb
inc
adc
jp
je
dec
mov
mov
jbe
decb
push
dec
mov
cli
data16
mov
or
je
inc
cli
add
popa
movsl
mov
inc
out
xchg
jmp
mov
in
mov
add
sub
or
notrack
adc
xor
je
bound
push
and
push
push
jp,pt
aas
test
push
xor
icebp
add
ret
push
les
xchg
nop
or
inc
push
scas
test
int3
loope
cli
pop
adc
in
sbb
cvtps2pd
sub
mov
push
mov
dec
insb
or
mov
fs
xchg
ret
jb
xor
push
pop
inc
int
in
dec
enter
insb
dec
jl
add
repnz
into
shlb
pop
inc
pop
ss
and
call
push
bound
addb
xchg
test
aas
ljmp
nop
mov
mov
pop
idivl
add
xchg
add
ljmp
push
icebp
push
mov
mov
scas
shlb
adc
adc
sub
repnz
es
mov
mov
push
pop
jle
fdiv
addb
es
arpl
mov
fcomp
sub
ds
fbld
push
adc
jl
and
push
jno
mov
and
mov
js
jo
push
jle
insl
sub
sbb
push
dec
std
mov
dec
rol
adc
pop
mov
ljmp
rcrb
inc
sub
int3
lds
cmp
jb
lods
jecxz
loopne
dec
push
xchg
in
xchg
jp
lds
mov
jne
lret
mov
test
jnp
das
pushf
cli
shlb
adc
jo
cmp
mov
popa
imul
mov
add
inc
push
int3
push
mov
int3
xor
xchg
sub
push
gs
lcall
cld
lcall
testb
loopne
pop
rcrl
sub
fstl
test
loopne
loop
cmpb
xchg
shll
or
inc
roll
sarb
xor
iret
loopne
inc
add
or
rep
lds
movb
out
push
push
sbb
addb
push
jge
dec
cmpsb
jo
cmpb
push
lock
fdivs
mov
repnz
lcall
add
cwtl
clc
es
mov
and
mov
sub
cld
adc
xchg
out
adc
push
dec
sbb
stos
push
or
or
pop
mov
lret
sub
mov
or
lods
mov
ror
mov
imul
push
sub
scas
sbb
adc
xchg
fcmovu
mov
movups
lret
adc
lds
cwtl
cld
adc
or
push
je
out
es
hlt
test
dec
add
mov
ret
lcall
sbb
sahf
jecxz
lcall
rcll
dec
inc
loope
mov
out
pop
adcl
cmpsb
dec
mov
or
and
in
jl
lods
sub
inc
mov
mov
or
and
mov
mov
pop
les
add
icebp
mov
jp
js
aam
or
mov
pop
addr16
lock
sbb
adc
sbb
shll
pop
ljmp
sti
ljmp
lods
mov
jmp
inc
mov
loop
jns
push
xor
or
adc
gs
loopne
inc
jp
lods
ljmp
shrb
mov
adc
mov
jmp
jecxz
jns
ficomps
push
or
out
nop
mov
adc
sub
add
push
jbe
lds
pusha
fistl
shrl
xor
sub
daa
cli
or
arpl
jo
ret
hlt
sbbl
and
es
test
enter
ret
pop
and
or
movsb
rorl
rcrb
fcmovnbe
push
push
xor
rcll
xor
call
sub
xor
pop
adc
loope
stos
push
and
adc
push
or
neg
mov
mov
mov
pusha
adc
addr16
adc
jbe
add
cmp
das
add
inc
inc
test
fwait
pop
mov
push
clc
sbb
scas
push
scas
imul
jbe
add
cli
es
pop
and
mov
cli
les
stos
jp
jbe
lods
dec
lods
dec
jb
lcall
rcrl
orb
loopne
or
push
push
or
pop
repz
test
pop
dec
test
push
cmp
sub
test
ret
inc
inc
inc
fistpl
pop
push
xchg
pop
push
loopne
scas
das
repnz
fs
or
das
add
lds
arpl
or
hlt
cmpsl
aam
mov
xchg
or
cld
dec
movsb
and
cmpsb
add
add
shrl
mov
hlt
xchg
mov
fildl
xor
lret
fdiv
push
or
cld
scas
push
inc
bound
sub
or
andl
jl
rolb
xor
jbe
outsl
adc
dec
dec
jl
add
sub
xchg
mov
adcb
sub
cli
test
in
pop
fisttpl
sub
dec
inc
or
test
jl
outsb
cmp
fcoml
xor
inc
cld
adc
sub
fs
pop
lret
cmp
push
and
test
sub
in
mov
ret
sbb
stc
fcmovu
sub
loopne
pop
inc
dec
mov
ret
pop
insb
shll
scas
jns
pusha
push
pop
pop
adc
out
cld
cmp
out
cld
xlat
insb
cmp
adc
mov
fistpl
jae
add
xor
rol
and
push
in
sbb
push
test
pushf
arpl
mov
jmp
pop
shll
jecxz
push
sarl
test
add
mov
sbb
into
pushf
cmpb
stos
sub
jo
mov
loopne
mov
inc
pop
dec
pop
jne
or
rorb
lods
xor
pop
jb
sub
outsb
pop
arpl
sub
movsb
fcmove
repnz
add
push
mov
add
jp
push
dec
push
shrb
pusha
push
push
out
fiaddl
hlt
adc
rorb
dec
movsb
and
mov
sub
les
ss
ss
mov
sti
push
jbe
and
scas
fnsave
mov
std
stos
push
push
add
enter
inc
xchg
lock
fwait
popa
sbb
sbb
jno
outsb
ret
lea
cmp
push
push
adc
pusha
sub
ljmp
xchg
pop
mov
cmp
lods
xlat
inc
pop
rep
jp
scas
adcl
data16
or
ret
stos
and
jl
aam
mov
ror
jbe
fcoml
push
adc
adc
pusha
adc
sub
aam
stc
inc
xor
sbb
jp
repz
dec
push
aam
loopne
loop
and
sub
add
and
fidivrs
mov
iret
add
testb
call
push
icebp
fld
push
leave
int3
flds
inc
lods
cli
and
movsl
add
and
add
dec
fdivrs
loop
mov
dec
xor
jne
push
xor
daa
or
in
mov
lods
bound
mov
aam
pusha
push
push
ds
mov
icebp
add
add
or
lock
das
cmpsb
push
or
push
push
xchg
mov
mov
rcrb
or
adc
mov
push
or
dec
mov
push
ret
rdmsr
push
test
jle
pop
out
push
pop
in
and
pop
std
mov
pop
xor
or
fiaddl
push
mov
cs
xor
lock
mov
enter
je
pushf
jb
es
lret
inc
insb
mov
test
daa
pop
aam
push
cmpsb
pop
adc
fisubrl
aas
xor
adc
enter
shlb
or
fwait
or
nop
mov
test
icebp
dec
testb
pop
scas
insl
adc
push
cli
mov
sbb
repz
insb
imul
mov
push
add
jne
push
pusha
add
xchg
fisubs
dec
in
imul
add
sub
call
fsubs
add
add
movsb
cmpsb
sbbb
mov
inc
loopne
adc
xchg
in
mov
sbb
ss
adc
cs
in
or
cmp
push
pop
or
xchg
and
push
cwtl
aaa
insb
mov
mov
popf
add
jbe
dec
sub
int3
out
loopne
xor
and
or
stos
test
mov
in
test
sub
add
sub
inc
es
jp
ffree
sub
pop
lock
pop
test
mov
movb
mov
or
and
mov
adc
out
movsl
cmpsb
inc
imul
clc
into
push
loop
lock
shrb
and
pop
scas
aas
js
jecxz
mov
icebp
dec
xchg
insb
shll
dec
lahf
cmpsb
push
out
out
mov
lock
inc
aaa
loope
sbb
pop
lret
fwait
in
lock
rolb
mov
jbe,pn
outsl
insb
ret
xchg
test
leave
mov
hlt
mov
fisubl
add
hlt
pop
add
sbb
sub
int
mov
inc
push
xor
stos
lret
push
int3
cltd
mov
dec
mov
cmp
popf
popa
or
int
mov
push
push
pop
addr16
add
rcr
out
lods
inc
popa
mov
xchg
ror
mov
mov
aas
and
sub
jmp
ret
pop
push
insb
mov
les
pop
lret
or
or
movsb
inc
jl
or
pop
ret
add
out
rclb
sub
push
dec
sbb
rcll
mov
adc
add
xchg
push
sub
call
gs
mov
pop
sbb
jp
adc
sbb
cmpsb
inc
xchg
xor
nop
jecxz
outsl
adc
push
repnz
data16
jo
pop
xchg
popa
es
repz
cld
stos
push
loop
movsl
adc
ljmp
and
and
adc
popa
fwait
test
lods
mov
add
push
xor
mov
adc
xchg
mov
mov
adc
pop
add
mov
pop
mov
push
outsb
sarl
and
mov
cli
je
repnz
ret
push
out
mov
sub
and
loop
mov
stos
mov
xor
movsb
mov
xchg
movsb
or
inc
push
and
adc
ds
cmp
push
shl
mov
das
mov
pop
inc
iret
ret
sbbb
mov
sbb
jmp
es
insb
cmp
stos
pushf
stos
and
adc
inc
or
pusha
pusha
mov
mov
or
mov
mov
lcall
data16
daa
lea
adc
jae
sahf
imul
jb
push
push
repnz
xor
xorb
aam
andb
test
mov
add
ficomps
insb
test
cwtl
outsb
scas
lock
sbb
pushf
push
das
scas
add
sbb
push
sbbl
jp
enter
push
sarb
inc
insl
sub
xor
and
arpl
adc
pop
mov
clc
ss
jne
sub
sbb
pop
mov
and
lods
lods
aam
addb
and
and
mov
inc
flds
pop
outsb
lock
adc
mov
add
push
stc
mov
adc
fsubrs
arpl
lret
mov
orb
js
out
movsb
mov
mov
sbb
adcb
mov
push
push
mov
pop
push
fs
and
pop
fcomps
shrb
push
icebp
add
push
mov
jmp
nop
inc
fs
push
jmp
or
inc
cmpb
add
add
fwait
mov
rorb
aad
cmp
in
and
add
pusha
pop
mov
dec
xor
mov
out
mov
cwtl
cmp
insl
mov
push
add
dec
cmp
mov
add
fdivs
subb
ret
lods
dec
dec
add
jp
sbb
add
cmp
xor
mov
mov
leave
inc
add
lock
pop
pop
adc
arpl
or
repnz
mov
push
push
test
xchg
jp
loopne
ficomps
lcall
pop
rorl
add
or
pop
sahf
mov
xor
and
xor
les
shlb
jecxz
dec
sbb
and
dec
mov
push
into
test
push
pop
push
adc
pop
ds
cs
jmp
inc
divb
loopne
dec
or
sbb
and
jo
aaa
mov
mov
push
dec
or
dec
dec
or
in
hlt
and
push
das
enter
xorl
add
ret
ss
adc
mov
cmp
sbb
int3
sub
es
lock
mov
xor
xchg
fistl
enter
pop
call
add
adc
sub
repnz
test
sbb
enter
push
mov
fisubl
inc
sarl
lcall
inc
shrb
nop
mov
xor
adc
and
sbb
mov
scas
lods
enter
xchg
movb
xchg
daa
mov
outsb
outsb
dec
sti
js
dec
roll
les
shrb
test
jmp
add
inc
pop
push
shrb
mov
xchg
jbe
and
adc
push
sbb
add
adc
xchg
cli
sbb
sub
dec
andb
xchg
jb
jo
mov
add
xchg
jge
jmp
dec
or
cli
dec
call
mov
fildl
xchg
xchg
punpckhwd
mov
scas
clc
hlt
xchg
dec
cs
add
xchg
je
sub
mov
arpl
icebp
push
ret
jbe
ret
in
dec
cli
or
repz
insb
lret
enter
dec
mov
jo
inc
repnz
mov
mov
pop
and
mov
xchg
jle
lods
or
dec
cmp
scas
add
inc
test
rorb
lcall
daa
loop
pop
xchg
shlb
clc
and
mov
loop
mov
and
mov
call
sub
es
push
rcrb
repz
lods
mov
and
popa
add
jle
pop
ror
sub
orl
insb
jnp
lcall
ds
cmp
add
sbb
push
xor
nop
jbe
je
xor
push
add
mov
sub
dec
push
adc
add
sbb
adc
jnp
push
add
sub
mov
push
cmp
jmp
push
adc
icebp
xchg
sub
sarb
or
pop
add
mov
pushf
cmp
sub
ret
js
adc
xor
and
hlt
in
push
mov
mov
pushf
aam
ljmp
pop
out
add
adc
jl
scas
inc
sub
leave
push
hlt
and
popa
test
mov
shll
cld
roll
hlt
push
fcompl
and
test
add
push
xor
and
mov
hlt
idivl
dec
jl
mov
or
xor
xor
outsb
adc
add
pop
cwtl
mov
clc
lock
xchg
mov
mov
stos
xchg
out
jnp
dec
pop
jb
mov
stos
dec
mov
sbb
pusha
sub
adc
fildl
clc
insb
aaa
insb
loop
mov
push
outsl
add
mov
movsb
push
sbb
ss
cs
insb
stos
and
movsl
in
in
cmp
mov
and
hlt
adc
sub
sbb
sarb
sbb
jbe
or
clc
cs
cmp
add
es
add
nop
push
inc
or
cmpsb
arpl
dec
aaa
adc
add
mov
xor
xor
inc
daa
int3
cmp
out
and
ret
fdivp
loopne
ret
inc
cmp
les
movsb
popa
mov
stos
ret
inc
adc
dec
ds
je
loope
push
add
push
lret
add
lock
test
xlat
divb
ljmp
test
cwtl
test
mov
les
xchg
jp
dec
mov
or
dec
mov
jp
cld
sbbb
mov
push
push
inc
out
dec
jmp
cmpsb
clc
mov
cli
leave
int3
lret
or
int
push
rolb
or
jmp
mov
or
pop
mov
aam
ljmp
lea
push
jnp
pusha
rorl
mov
and
push
ret
or
lods
jnp
ds
stos
idivb
xchg
lods
aam
jmp
or
lret
stos
into
insl
sub
dec
mov
ss
push
adc
ficoml
adc
lret
jg
inc
adc
dec
adcb
lahf
mov
push
jl
fimull
or
jmp
inc
jecxz
cld
addr16
les
pop
pop
loope
pop
loop
lds
cmp
loop
andb
insb
ret
mov
cmp
adc
lds
fidivrl
mov
inc
mov
jmp
stos
shlb
shlb
sbb
sbbl
xchg
cli
push
pop
and
and
pop
cs
mov
adc
popf
push
pop
mov
adc
cltd
jp
dec
insb
scas
dec
xlat
fdivrl
cmp
xor
sbb
sub
add
lock
data16
push
lds
adc
sub
and
mov
test
shll
hlt
ret
subl
or
ficompl
adc
push
pop
add
push
test
arpl
scas
cmp
jle
add
out
mov
xor
inc
ret
adc
cmp
or
add
fsubrs
sub
xchg
aad
adc
pop
jne
loope
lcall
rorl
dec
js
rorb
aam
roll
dec
imull
js
arpl
xor
pop
push
mov
cs
call
push
lods
sub
mov
hlt
or
sbb
xor
test
sub
or
loop
fimuls
cmp
and
lock
je
xchg
pop
stos
add
cmp
inc
fstl
aam
or
pop
mov
pop
cmp
dec
cmp
loopne
insb
sbb
xor
insl
ficoms
jmp
xor
inc
pop
inc
fistl
sbb
mov
adc
lret
mov
sbb
push
pop
leave
mov
adc
sub
cmp
dec
repnz
dec
add
xchg
jle
shrb
xchg
ret
aam
xchg
fsubl
imul
les
fs
and
push
pop
insl
xchg
lods
push
negb
push
test
shl
mov
inc
mov
jmp
imulb
mov
bound
hlt
into
or
mov
rcll
ret
pop
jbe
nop
jp
pop
loope
rcl
and
mov
mov
mov
fldcw
int
xor
dec
scas
stos
cltd
push
pop
inc
fsubrs
test
push
iret
xor
sub
or
andb
lea
push
cmp
dec
imul
incb
ret
pop
mov
call
arpl
daa
das
inc
aad
loopne
mov
loop
xor
or
test
push
cmp
mov
xchg
sub
lret
cmc
adc
push
sbb
arpl
mov
inc
sbb
xchg
lods
addl
push
shrb
push
mov
lret
or
or
pop
inc
xchg
aam
cmp
js
mov
test
jbe
pop
add
popa
orl
dec
inc
fisttpl
cmpb
mov
cmpsb
inc
xor
sub
mov
enter
roll
mov
sub
lcall
data16
jl
sbb
mov
add
or
fdivrl
jnp
or
sbb
mov
mov
xlat
xor
sbb
add
inc
in
fisubs
fwait
lcall
mov
add
loop
jns
out
cltd
sbb
mov
test
repnz
xor
sub
cmpsb
ss
mov
jge
mov
movsb
cli
das
add
and
test
xor
movsl
loopne
jl
fwait
push
jg
cmp
sbb
outsb
in
lea
pusha
xor
and
sub
dec
sub
cwtl
insl
call
or
mov
push
shl
push
ss
into
js
ss
push
add
test
xchg
xchg
fdivs
add
imul
inc
mov
sbb
fmuls
jle
mov
scas
jl
push
sbb
and
out
cld
or
rcr
shlb
mov
jnp
dec
adc
inc
inc
pop
mov
mov
sub
or
xchg
sbb
push
dec
mov
sahf
stos
cmp
and
mov
dec
test
test
jp
push
push
data16
mov
lods
and
or
mov
push
jno
pop
and
sahf
popa
jmp
jns
mov
ljmp
push
out
ja
push
popa
mov
mov
mov
add
mov
lock
ret
lcall
adc
cmpsb
mov
push
and
test
xor
fdivl
jo
idiv
add
mov
or
inc
movl
adc
inc
in
add
cmp
push
lea
in
lock
or
mov
hlt
rcrl
push
or
in
in
pop
or
insl
clc
and
add
popa
popa
push
inc
mov
jae
mov
jo
or
loop
jb
insb
push
push
call
ret
or
je
mov
hlt
or
ss
shl
outsb
hlt
and
paddsb
mov
in
test
mov
adc
test
mov
add
add
mov
out
cmp
add
ljmp
dec
push
xchg
add
fucomip
inc
fimuls
mov
loopne
inc
jle,pn
pop
sbb
lock
sbb
push
cmp
pop
call
fildl
jle
mov
adc
push
popa
outsb
jecxz
push
push
loope
std
scas
aam
dec
xor
sbb
push
stos
shll
and
test
fadd
fidivl
xchg
adc
cmp
popf
pop
pop
sbb
sub
push
jmp
push
cmp
or
add
and
lods
mov
mov
ret
jbe
dec
js
xchg
jb
dec
mov
outsb
jl
sub
and
pop
rcrl
and
or
mov
imul
mov
hlt
call
lods
enter
jbe
fs
or
call
out
gs
adc
sbb
inc
rcll
sarb
or
xchg
test
test
scas
or
dec
rolb
mov
fistps
mov
sub
pop
rorb
gs
inc
out
push
cmp
add
in
shrb
dec
pop
mov
sub
cwtl
jbe
sub
dec
mov
push
mov
pop
adc
or
aas
lods
jne
pop
mov
cli
pop
xchg
stos
sar
cmp
bound
mov
js
add
push
xchg
push
xor
mov
cmp
mov
cmp
xchg
add
scas
add
mov
cmp
xchg
xchg
cli
pop
inc
sub
push
xchg
or
ficoml
or
pop
pop
jb
lock
popa
mov
lock
push
mov
sub
inc
push
and
stc
cmp
mov
push
xchg
inc
xor
stos
cmp
je
pop
lods
inc
add
sub
sub
and
xor
add
les
xlat
sub
jecxz
mov
inc
cmpsl
pop
inc
and
test
adc
cli
xchg
aam
movsl
add
add
sbb
pop
pop
pusha
mov
xor
xchg
and
inc
xchg
jne
or
sahf
pavgb
jne
sbb
cwtl
pop
xchg
pop
add
lods
inc
test
sbb
adc
lcall
lret
call
insl
xchg
stos
inc
les
mov
mov
cli
rcrb
testb
xchg
add
test
stos
mov
es
ss
and
jl
xor
and
lcall
adc
ret
jbe
mov
movsl
pusha
in
ret
pop
inc
push
xchg
mov
inc
insb
cmpb
mov
iret
inc
shl
and
push
push
xor
adc
lods
pop
testb
in
stos
inc
add
pushf
mov
shlb
mov
rclb
pop
hlt
gs
pop
aam
aam
lahf
movsl
negb
fidivl
jo
inc
xchg
inc
call
or
adc
rolb
loop
movsb
ret
or
push
fistl
adc
inc
je
jbe
cmp
jmp
push
jb
lcall
mov
add
and
dec
inc
sbb
dec
roll
adc
push
mov
or
mov
mov
jne
test
adc
into
xchg
push
jnp
rorl
xor
mov
or
cs
pop
clc
fld
mov
mov
cmp
call
push
inc
inc
rorl
jge
mov
cli
dec
popa
jp
ds
scas
iret
or
sub
mov
jnp
inc
adcl
ljmp
mov
es
lcall
inc
or
and
xchg
lcall
xchg
rcrb
mov
or
cmp
mov
mov
dec
mov
out
push
mov
mov
bound
add
jae
or
xor
or
cmp
int
dec
mov
adc
aam
sar
push
sub
and
lods
pop
xchg
js
xchg
adc
rclb
mov
mov
jo
pop
cmpsb
stc
inc
mov
sub
mov
es
or
dec
jae
fwait
and
fs
dec
add
fisttpl
mov
mov
cmpl
outsb
adc
scas
lods
in
cltd
or
adc
and
idiv
jb
xor
mov
add
rcrl
mov
push
adc
mov
mov
and
add
mov
and
inc
pop
add
cmp
stos
clc
mov
test
call
inc
pop
pop
jle
jo
sub
pusha
inc
pop
mov
inc
mov
js
mov
add
adc
add
adc
adc
xchg
pop
mov
mov
aad
ret
sub
in
aaa
stos
in
les
cs
popa
xorl
adc
testb
clc
shrl
jb
cltd
movsb
add
push
xor
mov
mov
mov
push
mov
xchg
ret
mov
mov
jmp
xor
scas
cmpsl
sub
dec
std
jmp
mov
fldcw
not
adc
stc
gs
dec
push
data16
rclb
leave
inc
sbb
cmp
xchg
cmp
popf
cli
jg
inc
jo
cmpsb
add
jle
sahf
and
sub
xchg
cli
out
decb
js
and
ljmp
mov
mov
je
lods
jp
lock
ret
pop
add
test
and
sbb
or
sarb
cmpsb
sbb
test
mov
pusha
imul
sarl
ljmp
js
lods
das
push
pushf
outsb
push
xor
ret
imul
mov
sub
mov
xor
rcrl
fsts
idivb
cltd
test
mov
pop
xchg
pusha
sbb
sbb
mov
cmp
mov
addb
les
in
lods
xor
es
int3
add
inc
mov
pop
mov
sub
add
inc
adc
mov
push
xor
jg
adc
pop
sbb
push
push
aad
jno
ljmp
mov
scas
dec
bound
adc
mov
in
add
stos
cmpsb
sarl
stos
xor
fwait
cmp
xchg
les
sbb
inc
cmp
or
pusha
dec
rcr
push
push
je
xor
sbb
sub
sbb
loop
mov
test
out
cmp
pop
mov
mov
fs
mov
mov
jle
jmp
enter
ffree
add
add
testb
fdivl
lret
add
movl
aas
and
jp
cmp
dec
ffree
push
or
jo
sub
pop
add
je
loopne
stc
and
push
dec
push
movsl
or
out
add
data16
mov
push
jb
fsubrl
jb
dec
sub
push
pusha
sar
add
icebp
fadd
das
clc
cwtl
push
dec
repz
mov
dec
repz
push
popa
push
inc
aam
popl
mov
lods
push
call
inc
push
enter
mov
test
jbe
jge
cli
repz
les
les
mov
clc
inc
cld
adc
push
add
jae
lea
xchg
div
cmp
jecxz
and
cmpsb
or
push
aad
inc
insb
and
ret
add
pusha
push
ljmp
add
sbb
mov
add
cmp
rorb
lcall
ds
pusha
or
mov
mov
int
jle
je
xor
jno
popa
sub
loopne
add
movsb
add
dec
inc
pop
fs
push
dec
mov
inc
icebp
js
aas
push
mov
test
pop
fildl
inc
cmpsl
clc
fdivrl
mov
js
stos
sbb
mov
ds
sub
sti
jo
mov
loope
mov
stos
inc
push
cmpl
aad
lods
cltd
cld
shll
cmp
adc
sbb
addr16
call
cwtl
lahf
xor
sub
jno
jmp
sub
imul
sti
orb
scas
insb
ret
iret
add
call
mov
outsl
ss
pop
sarl
test
add
cmpsl
mov
lea
jbe
xor
loopne
jno
cli
aam
xor
mov
mov
insl
xchg
cmp
loop
mov
and
push
mov
sbb
xchg
shll
testl
movsb
push
push
jo
hlt
or
test
mov
mov
sub
dec
call
add
ret
popa
push
stos
mov
cmp
mov
xchg
bound
ss
data16
mov
mov
mov
imul
std
outsb
lods
es
clc
cs
orl
les
arpl
inc
xchg
rorb
jnp
lcall
push
and
add
push
test
xor
and
mov
cld
and
outsl
or
aad
fucomi
pop
xor
inc
xchg
sti
mov
mov
inc
dec
add
mov
sbbb
adc
sbb
pop
inc
jg
fs
mov
push
imul
and
nop
sub
push
push
push
outsb
int
syscall
adc
xchg
js
push
mov
adc
loop
mov
hlt
sub
and
pop
data16
pusha
add
int3
loop
add
dec
inc
mov
and
mov
lcall
jecxz
push
dec
or
int
sbb
clc
inc
xor
jmp
sub
sti
les
jle
push
mov
pop
scas
mov
nop
out
fs
jb
sub
inc
outsb
xor
push
pop
lds
orb
push
mov
or
or
fmuls
and
sarl
xchg
jbe
mov
xchg
jp
lahf
hlt
cmp
clc
xchg
ss
scas
mov
inc
pop
xchg
dec
outsb
addl
arpl
sbb
inc
loop
mov
push
cld
mov
in
ret
mov
jbe
cltd
push
mov
sbb
dec
cwtl
ret
or
jb
mov
ss
in
sbb
xchg
bound
fsubrp
or
testl
nop
loop
or
and
xchg
les
aam
jne
add
inc
lds
add
push
pop
jno
shll
mov
dec
cli
cmp
sbb
add
mov
sbb
lret
cmpsb
adc
mov
je
ficoml
mov
dec
adc
jmp
xlat
stos
scas
inc
mov
addr16
data16
ret
mov
xchg
push
inc
mov
pop
sub
iret
xor
pop
ja
jp
js
and
lret
pusha
fdivs
lods
sbb
outsb
scas
rclb
add
inc
insb
stos
in
shl
fsubl
cmpsb
cwtl
cs
rcr
or
jecxz,pt
jo
inc
or
jns
add
test
imul
inc
mov
ret
les
mov
mov
adc
adc
ffree
push
pusha
pop
out
cwtl
sbb
lea
xor
adc
adc
or
cmc
mov
mov
lret
dec
mov
inc
es
out
out
mov
fcoms
testl
jge
insb
mov
lret
daa
mov
push
mov
clc
jbe
aaa
pop
mov
nop
ret
sbb
sbbl
shr
out
pop
in
push
lods
into
xchg
js
shlb
adc
xchg
repnz
aas
xchg
pop
jmp
mov
or
jbe
ffree
ret
mov
xchg
xor
sbb
dec
pop
mov
addl
addr16
xchg
arpl
out
mov
lret
or
ss
mov
sub
in
mov
pop
call
in
pop
add
mov
mov
jne
mov
xchg
in
sahf
mov
sbb
lcall
scas
sbb
imul
call
clc
fucomip
ret
inc
fcmovnu
aaa
pop
mov
sbb
mov
xchg
jle
ret
lods
fs
mov
inc
mov
mov
dec
push
jnp
mov
jbe
cmp
cmp
mov
push
mov
sbbb
pop
cli
cmpsb
inc
imul
loopne
faddp
outsb
add
rolb
pop
insb
adc
push
icebp
push
push
mov
mov
lock
push
mov
push
push
lret
mov
xchg
or
mov
mov
mulb
mov
sbb
lods
xchg
rolb
sbb
mov
inc
sbb
das
mov
mov
dec
cmpsb
adc
test
mov
xchg
in
xchg
inc
cmpsl
sbb
enter
sub
add
int
sahf
sub
fsubrs
adc
pop
into
and
aam
mov
mov
call
sbb
xor
push
xor
push
sub
enter
movsb
push
aad
xchg
subl
mov
inc
sti
rorb
mov
ja
sahf
sbb
xor
fs
sbb
or
imul
cs
lahf
mov
int3
xor
or
fs
mov
lcall
push
dec
xchg
subb
xchg
or
pop
push
sbb
les
adc
stos
pop
xchg
daa
jle
cmpsl
jo
jae
scas
add
jno
push
test
in
imul
push
push
or
xor
pop
test
pop
mov
xchg
pop
cmc
sbb
push
adc
add
shlb
fs
scas
movsb
pop
fdivr
jo
shr
sub
dec
xorl
aam
xchg
xor
add
xor
xchg
xor
mov
into
daa
test
xchg
ficompl
adc
jae
mov
decb
stos
pop
cmpsb
ss
dec
popa
adc
or
sbb
pop
jp
je
dec
push
jl
bound
data16
sbb
mov
or
jl
push
add
push
or
or
mov
test
insb
loopne
jle
xor
or
int3
outsl
mov
sarb
into
cld
adc
sub
adc
jbe
xor
pop
mov
pop
add
xchg
rcl
cld
in
ljmp
outsb
and
fwait
mov
pop
pop
in
and
pop
js
pop
and
dec
xchg
roll
sti
and
dec
or
xchg
sti
aam
shl
xor
adc
loopne
fs
enter
scas
es
cmp
rcr
jg
loopne
cltd
lds
mov
insb
arpl
adc
loopne
sbb
xor
jbe
pop
xor
int
push
test
test
int
lock
mov
outsb
push
lea
mov
das
push
xor
loope
in
inc
add
sbb
cmp
and
fmull
cmp
movsl
dec
movsl
adc
clc
add
and
jbe
nop
xchg
popa
shlb
mov
or
xor
inc
inc
cmovb
push
add
adc
bound
lret
sub
mov
pusha
clc
test
lock
or
pushw
cmp
mov
mov
cltd
loopne
out
cmpsl
push
jbe
mov
dec
into
in
jnp
lret
add
int3
sub
in
mov
sarb
pop
mov
add
push
pop
fs
jl
sahf
imul
aaa
stos
xchg
mov
jl
add
repnz
xchg
shlb
add
add
arpl
push
imul
lcall
ljmp
mov
sbb
cmp
fdivl
inc
cmp
cmp
and
mov
rcl
movsl
push
lods
xchg
inc
inc
inc
lahf
push
xchg
enter
dec
lock
add
push
mov
nop
fmuls
movsl
mov
push
repnz
xchg
jl
lock
mov
bound
push
int3
mov
or
xchg
rol
add
loopne
icebp
xchg
imul
inc
mov
inc
push
mov
shlb
xchg
cld
and
out
add
movl
mov
insl
stos
push
mov
jbe
nop
inc
je
in
inc
xor
or
add
test
pop
icebp
rcrb
push
sub
fidivl
adc
fiadds
xchg
pop
push
inc
stos
js
xchg
imul
adc
jb
mov
xlat
out
pop
mov
mov
out
mov
pop
mov
add
arpl
fwait
lods
mov
xchg
mov
sub
cmpsb
cmp
ljmp
ds
adc
mov
cmp
push
cmp
fs
loopne
test
or
test
mov
mov
xor
xor
sub
les
js
pop
arpl
lahf
xchg
push
in
or
mov
inc
test
dec
mov
repnz
insb
clc
fs
and
sub
cwtl
test
in
sahf
insb
mov
sbb
mov
dec
in
in
je
xor
pop
les
sbb
sbb
mov
pop
fdivs
lret
jbe
std
xchg
into
test
repnz
pop
aas
hlt
xchg
push
xor
cmp
loopne
and
stos
ret
movsl
inc
ljmp
xchg
mov
dec
in
inc
insl
rcll
sbbl
mov
fcmovnb
lcall
or
push
jbe
mov
mov
psubd
jbe
dec
orb
add
daa
es
lret
iret
or
adc
mov
jl
cmp
lret
mov
add
xchg
inc
sub
and
mov
lods
mov
mov
shll
sbb
lds
enter
cmp
lahf
push
or
movsb
adc
push
popa
push
mov
jns
dec
add
movsl
mov
fadd
add
push
mov
push
test
mov
mov
mov
inc
ljmp
fldt
and
fdivr
lret
ss
test
adc
sub
jbe
loop
mov
add
out
mov
jl
ds
mov
jmp
xchg
or
pop
or
imul
nop
repnz
in
pcmpgtb
mov
aaa
stos
mov
add
inc
push
lcall
gs
inc
hlt
mov
aad
adc
mov
call
xor
pop
shlb
sbb
xor
jne
ljmp
shlb
xchg
aas
xchg
lcall
jne
cmp
push
shll
mov
add
gs
repnz
aaa
jb
dec
xor
call
cmpsb
shl
aam
pop
push
lret
xchg
xchg
lea
push
cmp
sar
loope
jmp
lods
mov
inc
adc
cmc
adc
or
sahf
dec
mov
push
int3
push
inc
pop
push
pusha
mov
rclb
shlb
in
sbb
add
dec
mov
mov
dec
sbb
xor
and
push
aas
mov
rolb
or
and
or
or
pop
jne
loop
cmp
push
add
add
fsubrl
ljmp
test
mov
shl
push
lods
jo
repnz
add
push
sahf
mov
ss
test
rolb
sub
mov
mov
mul
inc
xor
lahf
les
ljmp
adc
fs
sub
std
xor
mov
pusha
jg
add
fadds
je
xchg
pop
or
clc
mov
adc
xchg
push
xorb
lock
enter
sub
or
out
dec
fwait
mov
pop
push
test
hlt
lods
inc
mov
daa
jecxz
loop
mov
lahf
pushf
adc
and
and
popa
push
fiaddl
inc
sbb
aad
into
into
cmp
fstpl
push
mov
mov
dec
xchg
and
rorb
roll
sti
xor
lods
inc
adc
inc
jb
xor
mov
hlt
push
push
push
imul
lret
loop
dec
mov
push
push
ss
stos
fisubrl
imul
test
or
ret
pop
mov
xor
push
dec
push
or
dec
inc
fildl
cwtl
rcl
mov
mov
push
fs
push
mov
push
and
adc
lods
mov
or
xchg
fiaddl
jle
adc
cmp
xchg
mov
cs
adc
pop
shlb
lods
outsl
mov
nop
mov
pop
push
sbb
sub
fldt
shlb
ss
inc
popa
xchg
test
outsb
cli
adc
mov
das
or
sub
movsb
mov
push
lret
in
sbb
mov
push
sub
into
cmp
adc
mov
and
adc
dec
stc
xor
mov
cs
cs
ljmp
pop
dec
mov
mov
inc
rolb
lea
scas
cli
sub
bound
repnz
xchg
loopne
cmp
cmpsb
dec
stos
adc
mov
push
push
aam
scas
jp
dec
lcall
sarb
adc
shlb
xor
scas
inc
insb
xchg
dec
and
sbb
lods
dec
addr16
inc
daa
sub
inc
and
fdivl
lods
pop
daa
add
lcall
lods
inc
and
jo
les
filds
sub
push
or
xorb
push
pusha
mov
and
ljmp
add
dec
push
xor
push
and
mov
aam
mov
add
and
push
mov
mov
cs
lds
sbb
push
sti
push
mov
ficompl
or
lret
adc
repnz
jae
sbb
and
nop
je
aas
hlt
mov
stos
imul
jge
roll
test
xchg
mov
cmp
addl
lcall
pop
adc
xchg
jmp
insb
pop
cmovo
jbe
into
ret
leave
pop
sub
add
inc
cmpsl
test
enter
roll
cmp
inc
out
dec
dec
push
pop
add
inc
push
enter
mov
out
xor
aaa
inc
call
dec
rcl
stc
xor
cmp
ret
inc
sbb
pop
lds
jb
ds
push
xor
or
jecxz
dec
loop
lret
test
push
xlat
dec
sbb
cmpsb
push
cmp
fmuls
test
push
mov
aam
mov
mov
dec
jno
inc
rolb
add
jne
mov
xor
sub
cmp
jle
xchg
add
inc
call
cmc
fadds
jg
or
jge
testb
mov
call
cmp
rcr
push
ret
inc
add
cmp
dec
inc
pop
pop
jl
adc
leave
scas
test
repnz
jns
or
mov
add
rclb
inc
mov
sahf
cs
adc
roll
or
xor
pop
mov
out
mov
inc
adc
mov
or
fidivrl
mov
daa
and
mov
lock
and
imul
out
sbb
paddq
dec
push
scas
test
mov
xor
mov
mov
add
push
cld
or
push
rolb
jle
add
out
xchg
test
sbb
jle
or
sub
or
test
addr16
enter
adc
lods
dec
lret
cli
mov
stos
cli
pop
mov
rorb
lods
add
add
testb
or
and
adc
or
lock
mov
icebp
imul
test
rcrl
fistpll
scas
jo
mov
les
mov
ds
mov
out
xorl
aas
imul
jmp
inc
iret
iret
jb
jge
sub
mov
or
clc
cmpsb
lahf
cmc
out
mov
pop
test
or
es
fs
push
mov
in
rcl
xchg
xchg
cmpsl
faddl
dec
mov
sbb
repnz
loopne
cmp
cs
push
hlt
inc
push
xchg
in
sub
imul
gs
stos
inc
mov
rorb
imul
or
cli
dec
push
push
or
inc
cmp
in
mov
clc
in
ret
pop
pop
fcomps
dec
rclb
cmpsl
add
insb
or
insb
stos
xchg
xchg
xor
xchg
outsl
or
dec
pop
mov
je
sarl
test
es
xchg
push
cld
pop
sub
mov
jae
pop
call
jbe
pop
popf
and
ret
adc
adc
scas
pop
xchg
mov
sbb
lods
stos
test
cmpsb
popf
cli
int
mov
or
imul
add
enter
push
adc
mov
cmpsb
fwait
push
test
inc
into
inc
test
push
adc
adc
sub
insl
arpl
push
sbb
es
push
sahf
push
lret
mov
fisttpll
mov
mov
mov
mov
out
and
ret
shlb
aam
add
mov
and
adc
dec
push
jbe
push
adc
mov
inc
dec
in
movb
pop
jo
stos
mov
rclb
mov
cmpsb
scas
or
or
dec
lcall
inc
pop
or
lcall
adc
sbb
xchg
xor
sbb
inc
shlb
sbb
push
or
push
mov
xchg
adc
add
lret
push
sarb
mov
arpl
add
push
and
lock
add
outsb
mov
jl
pop
push
fsubrp
adc
or
mov
adc
sub
cmp
add
fsubl
mov
mov
xor
mov
mov
adc
fbld
add
ds
add
nop
jbe
jo
call
mov
push
call
cs
mov
push
adc
mov
es
push
inc
xchg
or
push
in
and
and
fadd
mov
stos
cltd
inc
inc
jmp
repnz
xchg
sbb
push
dec
push
shll
xchg
mov
push
test
or
and
xchg
fs
push
xchg
add
cld
adc
jp
add
outsb
or
stos
adc
sub
mov
mov
xor
dec
aam
test
push
cli
pop
xor
ror
rclb
cmp
jge
loope
push
xor
icebp
or
cmpsb
movsb
pop
mov
rorb
mov
or
bound
insb
lret
test
and
jmp
enter
jo
frstor
mov
out
aas
inc
ret
cmpsl
lret
test
clc
mov
inc
inc
dec
mov
les
mov
adc
cmp
mov
inc
xchg
mov
test
scas
or
mov
movb
in
add
ja
icebp
test
jns
or
add
add
adc
push
adc
push
jl
xchg
in
insl
mov
ds
jnp
cmp
sub
mov
add
nop
aad
add
adc
popa
inc
push
push
js
fidivrl
mov
aaa
cmp
jb
sbb
jbe
lods
les
sbb
inc
push
lea
test
fsubrs
adcb
testb
icebp
shrl
adc
and
lock
fs
rcr
inc
push
movsb
jp
in
adc
mov
rcll
push
adc
call
jbe
xchg
subb
les
adc
movsb
push
imul
div
cmp
xchg
push
repz
dec
jbe
ljmp
mov
hlt
hlt
mov
xchg
hlt
adc
pop
je
sbb
and
call
pop
or
and
in
stos
xor
and
shlb
add
jne
jge
arpl
pop
adc
or
lock
jecxz
dec
cmp
test
jl
stos
test
std
add
imulb
imul
push
mov
inc
ljmp
add
mov
mov
pop
mov
sti
jbe
call
lahf
mov
push
jb
insl
adc
cs
pop
mov
call
jnp
push
sbb
stc
mov
mov
jp
xchg
mov
lods
mov
movsb
adc
lcall
mov
and
nop
aam
insl
jnp
push
fs
xchg
ljmp
add
sbb
sbb
gs
or
or
clc
fcomps
jb
ss
mov
and
je
pop
lcall
scas
dec
mov
add
push
adc
mov
aaa
mov
mov
adc
pusha
push
ss
pop
and
xor
insl
xchg
out
loopne
pop
imul
lods
outsb
orb
pop
fldt
cli
ljmp
or
and
jbe
out
adc
inc
insb
sub
push
ds
sbb
push
sbb
in
sbb
xchg
out
in
push
cli
xchg
inc
fisttpl
fildll
add
fsubs
lods
push
pop
xchg
test
push
mov
xchg
aam
test
and
andb
adc
cli
push
in
or
jbe
push
fs
or
imulb
push
scas
add
adc
mov
adc
sbb
sub
shrb
cmp
or
test
dec
fwait
mov
or
xor
loopne
push
stos
fwait
or
mov
in
repnz
xor
or
test
out
clc
adc
xchg
sbbb
jbe
sbb
mov
or
outsl
repnz
scas
sbb
repz
shll
add
movl
cld
inc
ret
or
icebp
enter
insb
jbe
jmp
sub
daa
loopne
mov
jno
sarb
ss
dec
sub
sbb
inc
scas
repnz
jbe
mov
into
cmc
xchg
scas
stc
or
sub
sub
fcompl
stos
and
pop
add
cmpsl
mov
cmpsb
xor
jnp
xorl
sbb
js
pop
and
inc
in
je
mov
jmp
int3
sbb
and
mov
lea
xor
lods
adc
inc
push
mov
mov
ljmp
push
xor
mov
cmp
rol
bound
inc
sub
push
into
outsl
and
mov
inc
out
jle
mov
cwtl
sbb
ljmp
idivb
mov
pop
scas
mov
dec
movb
sub
jp
ret
in
dec
insl
jge
sub
mov
inc
nop
push
icebp
loopne
inc
fsubrl
adcl
push
les
mov
fsubs
icebp
stos
mov
push
sub
push
pop
push
mov
adc
clc
mov
addb
notb
jle
add
xor
rorl
fdivrs
add
and
adc
fdivrs
jle
and
xor
cwtl
mov
sub
mov
and
mov
jle
and
inc
cmpl
push
movsb
adc
cmp
mov
and
sub
push
cmc
test
loopne
or
outsb
pop
add
add
jo
test
push
mov
nop
aam
add
mov
push
mov
jbe
push
shrb
cmp
gs
lcall
jecxz
stos
jge
fcomp
pop
popf
add
sbb
sub
xorb
out
or
dec
push
out
cmpb
cmp
mov
push
lods
jmp
jbe
and
sahf
jl
nop
arpl
bound
aam
pop
add
adc
or
xchg
cmp
xchg
lcall
movsb
add
push
xor
enter
lret
test
add
loop
pushf
notb
adc
stc
andb
sbb
cmp
add
insb
in
xchg
test
xchg
sub
dec
or
jmp
jno
jne
inc
lods
lock
and
js
inc
xchg
add
jl
or
das
ficoms
jb
push
cwtl
mov
xor
shrb
push
lods
push
and
scas
xchg
nop
jle
xor
and
movsb
cmc
inc
add
nop
mov
mov
fs
jbe
dec
shrl
test
sbb
data16
lcall
cmp
adc
test
cwtl
dec
push
adc
adc
fisubs
push
mov
insb
test
adc
lods
fldt
mov
mov
mov
lret
scas
cld
stos
repnz
ret
jle
mov
and
mov
pop
fidivrl
rolb
and
adc
shrb
inc
scas
lods
test
mov
fidivl
les
cwtl
test
mov
ficoml
or
pusha
lea
cwtl
dec
call
mov
fsub
rcl
testb
xchg
cmc
jo
mov
mov
in
pop
insb
pop
fwait
popa
add
sub
and
jo
ror
out
xchg
mov
mov
and
call
push
jo
lods
imull
and
add
sub
sahf
or
mov
xchg
mov
cmp
push
push
add
push
adc
inc
loop
aam
xor
adc
outsb
in
xor
push
daa
shrb
mov
adc
sub
cmp
mov
jg
dec
xchg
movsl
and
pop
es
xor
or
xchg
iret
and
insl
sbb
loope
ret
adc
loopne
aad
and
mov
fcmovbe
mov
adc
and
insl
push
push
out
jmp
adc
mov
adc
xchg
ret
cli
jb
fcmovne
and
in
add
testl
mov
mov
mov
mov
mov
testb
cs
pop
aam
xor
jp
stos
cli
inc
ds
daa
lea
cmp
je
mov
and
shll
dec
and
sub
rcrl
test
cwtl
ret
add
sub
or
cmp
sub
scas
and
or
sub
pop
xor
push
add
jge
mov
push
es
add
push
jbe
call
jmp
and
cmp
lahf
mov
pop
rolb
sbb
aam
mov
push
fcomp
pop
icebp
sub
cli
push
sub
in
hlt
inc
inc
imul
add
or
aad
pop
fs
inc
xchg
loopw
fidivl
inc
sarb
inc
mov
mov
es
repnz
add
mov
dec
pop
sahf
cmpsl
insb
mov
test
xlat
movsb
sarl
mov
xor
cli
jl
movsl
test
mov
ret
push
and
dec
rol
lea
dec
add
loop
fsubs
inc
add
sahf
es
mov
fiaddl
mov
fsubrl
int3
xor
or
jnp
or
and
and
jp
push
movsb
fsubs
xchg
lret
insb
xchg
or
mov
sti
repnz
enter
xchg
cltd
aaa
insb
outsb
pop
aas
add
mov
and
data16
je
jmp
pop
inc
imul
pushf
or
ljmp
pusha
inc
aaa
shlb
cmp
subl
pushf
loop
inc
xchg
repnz
sbb
mov
sbb
setge
inc
gs
cmp
mov
popa
jae
pop
stos
add
push
sub
test
xor
js
xchg
and
mov
adc
push
sub
shrl
shrl
mov
stc
dec
ret
cld
fnop
lds
add
cli
add
cld
mov
lods
dec
xor
push
jl
mov
mov
loope
sbb
mov
and
xor
fcomps
das
mov
adc
aad
mov
or
xchg
fwait
mov
nop
jle
ss
jo
xor
mov
lcall
test
xchg
mov
andb
xor
inc
lods
stos
clc
jp
dec
insl
aas
js
sbb
lcall
popa
adc
sarb
loopne
and
and
stos
cmpsb
fsubrl
sub
loopne
pop
xor
pushf
jp
push
sub
inc
pop
stos
and
cmp
inc
mov
pop
dec
movsl
add
xchg
repnz
cwtl
or
js
add
lahf
mov
inc
test
rcl
add
inc
jp
flds
add
add
push
out
add
fsubr
pop
es
in
dec
sbb
sbb
orl
rcrb
shlb
es
js
aam
add
adc
nop
imul
out
push
data16
arpl
in
xor
test
mov
lahf
in
add
call
add
pop
repnz
int3
mov
int
mov
cmp
or
inc
into
inc
cmp
ljmp
push
adc
nop
jns
test
sahf
adc
sub
inc
lret
push
ds
ret
enter
fwait
je
shrb
push
lock
aas
imul
push
push
fistpl
mov
and
push
pinsrw
and
fstl
lahf
xor
sbb
push
jnp
insl
mov
add
fbstp
hlt
ret
mov
add
or
pop
ljmp
and
lret
add
mov
push
pop
adc
jo
mov
add
das
or
pop
pushf
or
or
aam
daa
subb
add
xor
out
test
orb
push
xor
push
push
cmp
sbb
dec
and
and
add
loop
mov
popf
mov
push
test
cmpsb
movsb
inc
lcall
ss
lcall
xchg
fwait
in
inc
jecxz
inc
repnz
xor
ret
inc
cmpl
ret
mov
mov
pop
or
ficompl
cmp
es
cli
mov
test
subb
adc
sbb
sub
pusha
in
test
xor
inc
cmp
dec
aam
or
add
jno
jno
and
adc
mov
aaa
inc
addl
jne
add
mov
shlb
jbe
add
jmp
int
aam
inc
fs
loopne
jb
jne
mov
lods
cs
pop
mov
mov
icebp
mov
sahf
or
mov
pop
inc
cmp
fs
and
jg
mov
mov
xor
ret
dec
cmp
push
inc
push
sti
nop
sub
xchg
jbe
xchg
hlt
xor
daa
mov
jecxz
lret
add
in
xchg
mov
add
addr16
add
pop
push
push
fistl
or
out
lret
mov
call
dec
and
clc
adc
push
sbb
cmc
insl
mov
pop
aad
andb
xchg
or
push
add
rorb
adc
mov
sub
pop
test
ljmp
cli
lret
or
andl
add
mov
aas
lods
clc
rorb
mov
pop
call
adc
mov
dec
mov
test
fscale
mov
loop
mov
mov
jo
mov
inc
xor
cltd
pop
shrb
outsb
shl
inc
or
jmp
cmp
inc
test
les
adc
jb
xor
inc
adc
mov
sahf
lods
mov
or
sub
xor
mov
stc
jne
lods
and
dec
or
push
jp
sarb
mov
push
andb
in
xor
add
fisubl
sbb
pop
push
faddl
int3
xchg
push
dec
daa
sbb
pop
cs
push
mov
push
cmpsl
in
xchg
mov
pop
and
add
sbb
mov
ljmp
inc
mov
add
stos
pop
les
jae
cmp
sbb
nop
clc
inc
add
jbe
jg
mov
je
push
fsubrs
xor
icebp
pusha
adc
dec
xor
cmp
mov
jns
cli
outsl
or
sbb
inc
lods
mov
test
test
add
sbb
popa
ret
rorl
jp
xor
fsubs
sbb
sbb
pop
test
stos
inc
xor
push
push
push
rorb
mov
dec
test
ret
mov
inc
sbb
std
ljmp
ss
test
push
test
sub
jbe
adc
or
out
inc
in
adc
aam
dec
pop
push
in
mov
cs
sbb
lret
cmp
mov
lcall
xor
shrb
inc
push
sub
push
dec
pop
push
or
add
rorl
rcrb
adcb
subb
les
or
sub
mov
lock
insl
bound
es
fwait
pop
or
xchg
sbb
test
mov
mov
push
sbb
push
mov
mov
or
sub
faddl
or
je
pop
add
loopne
xlat
mov
xchg
andl
or
fadds
mov
test
enter
or
scas
mov
push
out
cld
xorb
xor
dec
imul
or
mov
push
shl
adc
or
nop
ljmp
aas
hlt
sbb
nop
stos
pop
fwait
mov
inc
adc
mov
andl
ss
or
jno
inc
cmp
jnp
mov
adc
mov
cmpsb
shlb
xor
sub
cmp
adc
popa
xor
add
inc
flds
hlt
pop
cs
adc
xor
cmp
xor
sub
sbb
inc
outsb
xor
leave
popa
jge
test
xor
je
out
test
je
repnz
cwtl
rclb
sbb
shlb
loopne
and
nop
adc
sbb
add
and
mov
mov
jbe
inc
push
ss
mov
aam
in
sub
int
cltd
inc
cld
xor
push
mov
mov
sbb
add
and
mov
adc
pop
test
mov
mov
dec
xchg
push
adc
repz
xchg
pop
inc
sbb
jb
shlb
insw
inc
xchg
std
nop
icebp
test
popa
outsb
dec
cld
dec
mov
or
ds
stos
insb
sti
xor
out
sub
mov
sbb
mov
int
loop
mov
mov
iret
mov
fwait
fs
inc
jnp
cld
lods
adc
dec
mov
bound
idivb
xor
loope
shrl
nop
mov
push
sbb
adc
jbe
shlb
sbb
add
push
lret
xchg
cmp
adc
cmp
dec
xor
popa
hlt
outsb
hlt
arpl
imul
xchg
or
ljmp
mul
jo
mov
jp
inc
loop
ret
insb
mov
add
clc
lret
and
dec
adc
xor
enter
inc
xor
and
cs
cmp
sbb
sub
ds
ljmp
ret
add
mov
push
or
mov
dec
fdivl
stc
cmp
pop
and
shlb
or
jo
pop
cmp
mov
xchg
mov
fdivs
popa
test
or
movsb
mov
inc
fsubl
shufps
lcall
adc
test
aam
shlb
xor
rol
and
mov
jp
test
movsb
push
andl
cmp
push
test
xchg
ret
and
add
mov
ds
stos
add
add
mov
pop
and
cmpsb
pop
inc
or
mov
xchg
pop
mov
add
xchg
push
push
mov
mov
sub
faddp
push
mov
movl
in
xchg
test
or
sbb
jle
fidivl
xchg
in
scas
inc
in
mov
lahf
cmpsb
sbb
rcr
push
add
int3
xchg
mov
and
adc
cmpsl
clc
lods
mov
imul
mov
mov
cli
sbb
push
add
fisubl
les
adc
lods
adc
imul
shrb
ds
insb
bound
and
repz
insb
cmp
adc
mov
cwtl
rorb
flds
or
inc
inc
mov
cmc
adc
xor
cwtl
xchg
push
xchg
lods
jge
jns
lods
cmc
mov
subb
sbb
inc
mov
xor
bound
sbb
paddq
jl
movsb
inc
clc
dec
bound
pop
inc
lds
mov
lret
ss
shll
pop
push
jmp
inc
inc
or
or
jo
aam
leave
aam
clc
add
orb
push
loopne
mov
movsb
push
inc
xchg
loopne
push
test
adc
inc
inc
lods
fisubrs
stos
or
in
mov
sbb
sub
ss
push
push
adc
mov
and
sub
xor
cmp
jno
ret
sub
insb
out
adc
adc
dec
cmp
xchg
data16
pop
mov
insl
lds
out
jg
out
jbe
fisubl
push
cmp
mov
mov
push
xchg
dec
xchg
mov
and
xor
push
add
loopne
push
jno
loop
push
or
sbb
je
push
ss
dec
lock
leave
pop
sarl
add
stos
mov
stos
in
add
lret
cmp
xchg
lods
xor
cmp
jle
jae
dec
and
push
scas
add
das
add
repnz
push
pop
imul
inc
and
movsb
lods
sub
mov
mov
inc
cs
dec
xor
inc
push
adc
jle
pop
aam
adc
subb
jp
xor
lock
jns
jl
or
jne,pn
cmp
jne
rolb
js
mov
loopne
mov
push
or
aam
fiadds
sbb
shlb
mov
jno
mov
pop
lret
into
f2xm1
jecxz
and
adc
test
and
adc
push
mov
cli
push
jb
aaa
push
into
pop
adc
push
out
ficompl
xchg
sub
jl
test
orb
dec
subb
push
and
test
sub
adc
dec
xor
movsb
imul
inc
jmp
and
mov
adc
test
outsl
add
push
es
mov
add
mov
sub
push
cltd
adc
cmpsb
fsts
incl
nop
mov
imul
mov
push
inc
sub
sbb
xor
mov
and
add
lods
data16
clc
out
sub
and
out
add
mov
jb
adc
je
sub
adc
push
testb
jge
cmpsb
test
inc
sub
ficomps
mov
cmp
dec
and
pusha
mov
push
inc
ret
sub
es
inc
lcall
or
movsb
mov
inc
loop
fidivs
push
outsb
cmp
imul
and
sbb
jle
fwait
arpl
jp
enter
icebp
gs
clc
and
jl
cltd
dec
pop
addr16
add
in
mov
push
shrb
les
repnz
add
and
js
mov
fcmovu
cs
jl
fwait
inc
loop
inc
pop
sahf
xor
repz
pop
cwtl
dec
sub
aam
rcl
test
push
pop
sbb
xchg
or
inc
mov
mov
ret
in
dec
jo
xor
xchg
addl
out
bound
mov
sub
call
push
inc
in
push
fcoms
shl
cmp
add
sbbb
xchg
int
adc
xchg
inc
mov
movsb
shlb
xor
and
inc
wbinvd
mov
out
mov
cmpl
cld
xchg
pop
fs
stos
fldcw
or
lock
or
sub
or
js
int
sub
test
and
daa
insb
sub
out
bound
and
cmp
outsb
sahf
sbb
adc
push
shrb
mov
imulb
lcall
lret
mov
add
jl
out
out
or
fs
adc
test
pop
mov
into
int
sahf
dec
dec
int
cmp
mov
ret
jge
push
add
push
add
fnsave
std
cmpsb
fiaddl
xor
sbb
js
fldcw
test
mov
push
push
xchg
fdivs
lods
scas
dec
push
hlt
sbb
add
popa
mov
lock
ret
pop
xchg
pusha
pop
int3
dec
adc
and
xor
mov
lea
inc
mov
push
negl
adc
mov
pop
jo
lret
push
js
stos
pushf
add
daa
rorb
push
jl
scas
jbe
cmp
add
push
xchg
rolb
ja
int
dec
dec
divb
stos
jo
je
sti
add
mov
mov
pop
imul
sbb
inc
jecxz
push
shll
add
push
ret
pop
lock
xchg
insl
sub
adc
mov
mov
dec
mov
adc
fwait
lcall
mov
jmp
loop
ds
orb
or
jo
xor
adc
or
mov
add
xchg
lds
enter
test
cmp
jb
rorb
mov
mov
lret
aam
dec
loop
mov
loope
cmc
or
adc
rclb
add
bnd
and
rcl
add
pop
lods
out
call
sahf
xchg
push
popa
pop
adc
dec
gs
adc
pop
xor
aad
aam
dec
fcom
or
sbb
ljmp
call
movl
mov
add
and
or
fsubp
aaa
sub
lock
cmp
pusha
push
cltd
mov
andl
mov
clc
scas
jl
xor
push
ds
push
cmpsb
sbb
cmp
fmuls
pop
lcall
push
test
pop
outsb
xor
aaa
shll
adc
insb
and
sub
mov
ljmp
xchg
mov
pushf
xorb
ljmp
push
jo
mov
push
mov
test
fsubs
js
das
dec
xor
hlt
mov
loop
xchg
fbstp
pop
adc
jnp
push
or
push
mov
in
nop
test
mov
mov
dec
mov
add
hlt
repz
test
push
loopne
shrb
xchg
stos
add
inc
mov
loop
inc
sub
xor
test
call
test
or
mov
push
inc
test
rolb
mov
push
pushf
and
cld
adc
and
add
xchg
mov
xchg
cmp
mov
scas
xchg
sbb
add
and
cmp
mov
pushf
pop
and
sub
add
pop
adcb
mov
insb
inc
xchg
xor
loope
clc
sub
les
pop
sub
into
scas
inc
lods
loop
lods
out
jle
xor
push
lea
push
or
or
daa
and
pop
ss
fdivrs
dec
ror
xor
and
lock
mov
dec
insb
push
push
add
jb
adc
or
sbb
add
fwait
sub
push
fistpl
push
adc
xchg
xchg
hlt
cmpsb
icebp
adc
test
mov
mov
fimull
rcr
sub
mov
adc
lods
daa
sub
jo
mov
cmp
push
xchg
and
aam
shl
or
imulb
jo
jl
mov
mov
sub
pop
inc
cmc
popa
mov
xor
out
ds
xlat
xor
or
ret
push
mov
sub
adc
fwait
add
cli
pushf
aad
mov
mov
inc
push
push
jl
subb
out
mov
adc
lcall
jle
mov
sub
ss
xchg
test
add
push
pusha
push
and
imul
add
lods
xorl
add
fisubrl
inc
inc
pushf
add
stos
adcl
dec
lods
int3
movsb
imulb
bound
test
stos
pop
mov
sbb
test
fs
push
movsb
pop
xor
mov
add
pop
inc
cmp
sbb
push
rorl
fistl
clc
xor
sahf
mov
mov
and
shrb
imul
sbb
lahf
add
les
dec
rolb
push
insb
adc
xchg
push
je
cwtl
in
sbb
add
xor
push
or
add
sub
adc
out
into
and
xchg
mov
xchg
inc
jb
jno
les
push
loop
cwtl
pop
push
rcr
fdivrs
ret
and
pop
pop
mov
inc
dec
pop
dec
imul
shl
mov
inc
xchg
mov
pop
pusha
cmp
jl
shrb
cmp
mov
push
les
push
pavgb
add
pop
rolb
push
fildl
adc
xchg
es
and
bound
push
push
sub
mov
wbinvd
jne
add
add
cwtl
fcmovb
cmp
cmp
filds
test
cmp
fadds
daa
pusha
mov
dec
add
dec
in
cmpsb
mov
dec
or
out
mov
jl
add
inc
xor
popf
es
test
jne
shrb
icebp
int3
std
pop
sbb
mov
gs
movsb
adc
lock
fldenv
aad
dec
mov
push
mov
and
mov
ljmp
shll
mov
es
jmp
xchg
cli
sarb
stos
dec
add
push
and
xlat
mov
les
js
mov
add
lea
push
js
dec
in
adcl
aaa
adc
cmp
andb
pop
mov
sbb
and
outsl
mov
mov
hlt
cmp
fs
rclb
add
sbb
ljmp
xchg
stc
push
lcall
repz
xor
adc
cwtl
movsl
push
jb
imul
push
scas
inc
ss
sub
outsb
add
add
in
notb
mov
sbb
lea
dec
xlat
dec
add
push
es
ljmp
pusha
push
adc
cli
xor
add
pop
js
lods
mov
mov
es
arpl
add
xor
rolb
adc
push
arpl
xor
add
push
dec
push
xchg
pushf
adc
sbb
in
push
daa
add
jecxz
loopne
inc
and
and
xor
mov
adc
lcall
addb
push
adc
jb
hlt
shlb
ds
or
mov
xor
pusha
in
cmp
cvtps2pi
add
insb
add
and
add
sub
adc
call
loop
xor
test
in
or
sti
dec
xchg
stos
pop
scas
loop
scas
stos
sub
adc
icebp
add
dec
sbb
je
mov
shll
push
or
mov
push
sbb
add
dec
fmul
add
add
jecxz
or
int3
movb
mov
push
jge
push
push
add
mov
addl
cmp
pop
loop
je
jmp
sbb
movsb
push
pop
mov
adc
add
or
push
inc
pop
test
add
outsl
adc
repz
jp
mov
mov
arpl
fs
inc
inc
xchg
inc
testb
mov
xchg
jb
cli
es
push
test
test
enter
pop
inc
mov
jno
dec
int
adc
scas
loop
adc
or
pusha
lods
les
jbe
jae
lock
imul
fcompl
adc
dec
pop
mov
loopne
mov
fs
cmova
jnp
mov
movsl
xchg
mov
add
shlb
cmp
sub
sub
mov
aam
movsl
adc
inc
jp
mov
or
nop
add
jge
and
ds
cwtl
div
pop
mov
or
mov
and
mov
rorl
in
rolb
or
mov
es
sbb
cmpsb
bound
jle
rorb
adc
mul
shrb
or
fidivrl
mov
stos
popa
push
adcl
push
je
mov
fmuls
push
movsl
pop
mov
loope
mov
es
xor
mov
cltd
out
adc
and
dec
sbb
xor
or
repnz
outsl
or
adc
pop
mov
fiadds
sub
and
adc
and
add
xor
mov
adc
mov
imul
pop
dec
sahf
out
xchg
jp
ds
push
lcall
cmp
in
hlt
cmp
xchg
rorl
inc
popa
mov
jl
in
mov
or
fistl
aam
repnz
push
xchg
add
fs
mov
mov
inc
jmp
xchg
sbb
adc
push
scas
dec
movsb
pop
add
fs
out
repnz
lods
inc
dec
pop
add
xor
pop
lods
add
mov
add
hlt
jb
or
mov
push
out
adc
or
mov
out
scas
push
sahf
or
push
push
mov
mov
mov
mov
hlt
dec
mov
ljmp
icebp
hlt
dec
xchg
cld
jbe
cli
dec
mov
xchg
inc
or
mov
xchg
lcall
mov
push
shr
xchg
lret
shlb
mov
iret
sti
sub
add
lods
lcall
add
jl
xchg
rcr
mov
jl
inc
mov
or
or
push
push
pop
push
fwait
push
add
ja
add
mov
in
push
sbb
and
insb
sub
adc
fdivrs
sub
xlat
add
add
cmp
mov
rcl
inc
movsl
lret
subb
jle
push
xor
rol
scas
inc
cmp
mov
push
jp
mov
xchg
test
xchg
es
mov
pop
or
push
xor
mov
mov
pop
inc
sub
in
add
xor
sub
mov
mov
xchg
inc
les
dec
pop
mov
push
das
add
pushf
push
sub
cmp
and
dec
add
enter
test
popa
mov
inc
add
or
and
lcall
loop
icebp
dec
mov
scas
add
mov
or
or
adc
ss
push
jbe
mov
cmp
or
push
shlb
jp
pop
dec
adc
xor
or
dec
adc
xor
into
xchg
das
sub
push
xor
test
jl
mov
stos
sub
fcoms
pop
and
add
fisttpll
stos
lcall
mov
jl
sbb
mov
inc
mov
dec
xor
aaa
ljmp
shrl
mov
pop
jo
rorb
pop
jnp
dec
sub
and
xchg
push
aam
mov
add
pop
cmp
and
inc
push
out
out
aam
sub
jo
das
sub
adc
cmp
lock
dec
mov
imul
ja
dec
mov
stos
addb
orb
test
jp
mov
loopne
push
jg
push
or
imul
xor
push
xchg
and
pop
mov
lods
inc
sarb
inc
rcl
push
mov
jmp
push
jnp
lock
jl
mov
lds
das
add
dec
inc
adc
aam
pop
jo
cmp
sbb
ss
jbe
cmc
insl
lods
test
mov
adc
and
rcll
jbe
mov
mov
push
and
xor
pop
call
je
enter
cmp
xchg
movsb
scas
push
cs
mov
dec
dec
cli
rolb
pop
shl
mov
and
jno
popa
fwait
inc
mov
lahf
add
test
incb
movl
negb
jno
or
test
mov
pop
es
jle
xor
insb
cmpsb
mov
inc
add
mov
out
fcmovnbe
adcb
pop
lea
or
iret
inc
icebp
dec
add
subb
loope
mov
pop
or
and
inc
mov
adc
sbb
pop
ret
mov
push
xlat
and
mov
insb
enter
adc
pop
or
mov
push
jnp
sub
mov
lcall
insb
jo
mov
negb
adc
dec
lret
add
xor
test
push
inc
mov
ret
and
fidivs
icebp
insb
notb
add
inc
push
repz
aam
in
pop
mov
lcall
jp
mov
in
ret
xchg
inc
dec
cmc
or
pop
dec
pusha
or
mov
scas
add
sbb
adc
add
lods
xor
lcall
push
lcall
pop
cmpsb
add
mov
sub
add
adc
push
mov
inc
push
in
xor
push
add
or
int3
insb
outsb
insl
ds
cmp
sbb
faddl
lret
add
loope
mov
dec
push
add
jno
mov
leave
add
dec
cmc
cwtl
out
shlb
inc
cli
or
lods
push
jl
mov
test
leave
popa
sub
sarb
sub
and
xor
adc
pop
sbb
or
dec
sbb
xchg
insb
cmp
jbe
pop
sub
cmp
mov
pop
fsub
roll
sub
adc
pusha
ret
testb
jl
push
inc
in
cmp
mov
mov
aam
jmp
push
add
sahf
pop
xor
sarb
mov
cli
rcll
out
in
inc
adc
add
mov
je
mov
fisttpl
jle
and
mov
jns
push
add
push
bnd
fildl
lret
movsb
lods
leave
jle
in
inc
push
fcompl
mov
or
lea
jo
iret
xor
pop
sub
sub
aad
shrd
push
lea
mov
sbb
jmp
orb
out
icebp
pop
mov
addl
das
flds
push
in
xor
call
les
testb
mov
fcmovu
cmp
dec
stos
adc
jns
test
inc
jnp
aam
push
dec
loope
sub
inc
push
test
jbe
testb
data16
sub
push
dec
frstor
mov
hlt
mov
xchg
les
push
scas
add
xchg
push
and
jl
mov
pop
push
push
fmuls
loop
sbb
pop
shrl
mov
lret
test
xorl
fisubs
aaa
ss
pop
les
pop
hlt
pop
imul
fsubl
xchg
inc
ss
stos
fildl
and
add
push
sub
lcall
pushf
shrl
and
test
cltd
ds
jb
mov
pop
mov
cmp
mov
test
xchg
imul
clc
cs
push
lock
das
pop
fiadds
jecxz
fwait
or
xchg
out
fdivs
imul
jp
and
daa
cmp
mov
out
jnp
bound
xchg
jne
xchg
sti
scas
xor
pop
xchg
and
mov
mov
scas
sbb
jo
xchg
mov
fdivr
popa
imul
js
inc
lods
lcall
xor
jo
test
mov
mov
add
fists
pusha
add
int
mov
in
cs
testb
test
mov
add
lods
cmp
xor
adc
mov
movsb
fdivrs
cmp
jbe
int3
push
mov
cld
stos
sub
mov
inc
xchg
add
xor
jl
mov
popf
xchg
inc
pop
movsb
or
xor
aas
mov
xchg
add
bound
mov
or
cmpsb
push
push
enter
call
clc
pop
jp
pop
test
addb
push
add
cs
dec
sbb
inc
lock
mov
xor
rolb
pusha
adc
sbb
dec
movsl
mov
int
add
insb
dec
stos
daa
inc
pop
gs
lock
xchg
lods
mov
and
mov
cmp
mov
push
fistpll
xor
push
xchg
mov
push
mov
sbb
aas
jo
mov
xor
loop
mov
sbb
cli
xchg
loop
xor
mov
rorb
fbstp
ds
inc
cld
mov
mov
fcomps
push
sbb
pusha
or
lods
mov
jl
iret
mov
enter
psrld
mov
and
cs
or
popf
js
shlb
ds
inc
repnz
movsl
push
fmull
push
dec
mov
mov
mov
rolb
jle
and
mov
cmp
pop
sarl
movsb
imull
inc
xor
xchg
mov
and
imul
cli
sub
jl
testl
mov
icebp
sbb
adc
repnz
jb
sub
mov
gs
pusha
movzbl
cmp
mov
inc
push
xchg
pusha
mov
cs
sbb
enter
shll
sub
adc
push
inc
nop
mov
call
mov
popf
jo
xor
bound
mov
sarb
xchg
pop
rolb
stos
sarb
jp
jnp
hlt
jne
ljmp
pop
jo
and
add
sbb
jge
ljmp
mov
push
jb
jo
hlt
push
fsubs
outsl
aad
lret
push
js
call
clc
mov
push
and
je
dec
mov
daa
lea
lods
dec
test
mov
pop
lcall
loopne
inc
js
dec
push
or
aaa
mov
in
aad
cs
adc
mov
mov
dec
inc
inc
sti
xor
add
pop
ljmp
sbb
sbb
mov
popa
imul
mov
repnz
or
je
mov
pop
enter
pusha
negb
lds
inc
push
inc
pusha
add
fbld
out
into
xor
das
adc
pop
push
jl
dec
sub
cmpsb
addl
adc
push
jbe
jmp
hlt
cmp
fdivrs
add
incb
inc
or
data16
sahf
sbbb
fsubrs
push
inc
divl
mov
push
xor
or
and
xor
push
sbb
mov
fdivs
lds
xchg
ret
stos
xor
outsl
add
sub
daa
je
gs
lahf
rclb
adc
dec
aas
es
fsubs
lds
cltd
mov
dec
daa
sub
repnz
jno
jmp
pop
cmp
hlt
cmpsb
lock
dec
mov
fnstsw
push
clc
pop
mov
add
pusha
sbb
addb
lock
push
outsl
pop
add
andb
sti
add
xor
insb
andb
push
shr
stos
mov
scas
cs
pop
cmp
call
dec
inc
fistl
sub
lea
sub
movl
cmp
add
loope
inc
imul
out
sbb
cmpsb
mov
jbe
and
or
xor
jno
cs
orb
in
or
xor
push
fistpll
out
adc
fdivrl
sub
inc
pop
int3
lcall
cmp
pusha
push
lahf
jp
cmc
or
jne
inc
fiaddl
push
shl
add
mov
cmp
pop
or
lret
enter
inc
adc
and
sahf
mov
out
in
sub
cs
add
cmp
scas
shlb
pop
mov
jbe
push
push
cmp
xlat
decb
pop
sub
add
jecxz
push
pop
icebp
inc
push
or
jp
jecxz
mov
pop
xor
dec
das
push
fisubrl
xor
pop
inc
js
cmp
cmp
add
sbb
add
notb
mov
jne
insl
push
inc
cmpsb
inc
dec
inc
stos
outsb
xor
or
inc
jne
push
jge
fisubrl
insb
push
sub
mov
jne
jno
jmp
cwtl
mov
inc
adc
sbb
dec
sub
fcoms
ret
fwait
push
mov
add
or
push
lret
call
inc
aas
dec
push
outsb
dec
jbe
push
mov
dec
sub
movsl
repz
nop
loop
push
add
scas
stc
xchg
bound
mov
test
or
leave
fisubl
jl
loopne
cmp
adc
js
xchg
icebp
pop
mov
cmp
inc
inc
jp
mov
mov
lock
ds
mov
test
cli
xor
ret
ja
add
pushf
push
adc
mov
mov
test
push
icebp
lcall
das
fisubs
adc
or
and
lcall
xchg
inc
hlt
fcomps
xchg
and
xchg
shrl
xchg
xor
xchg
mov
in
sbb
and
dec
mov
leave
push
aam
ficoml
xorl
frstor
jle
sbb
test
mov
cmpsb
xchg
stos
push
dec
fdivr
int3
xchg
cwtl
add
adc
test
mov
lcall
xchg
fdecstp
jo
add
popa
sbb
xchg
out
cmp
jp
xor
imul
dec
sahf
adc
and
add
rolb
adc
sbb
or
cmp
push
ljmp
push
add
mov
mov
cmp
pop
cmpsl
ds
push
push
repnz
rolb
sarb
xorb
dec
ljmp
or
add
inc
mov
cli
lahf
push
pop
or
dec
loopne
or
xlat
push
mov
pop
add
mov
imul
lods
lock
cmp
lock
xor
mov
sbb
mov
or
js
jmp
aam
aaa
imul
imulb
mov
lods
adc
push
dec
stos
andb
scas
pusha
sub
jae
mov
ljmp
and
mov
mov
cwtl
jbe
mov
jo
sub
repz
fldenv
hlt
fisubl
stos
pop
das
pushf
test
mov
sarb
pop
sub
inc
out
push
cs
sbb
scas
and
inc
sti
add
jle
jo
or
sbbb
push
sbb
subl
adc
repnz
jp
xchg
movsl
arpl
pop
icebp
dec
cmpsb
cmpb
xor
dec
les
inc
ffreep
cmpsb
stc
adc
push
sbb
push
orl
mov
mov
scas
jbe
fcoml
xor
adc
mov
mov
mov
pop
mov
adcb
outsl
imul
popw
ss
lret
mov
pop
nop
inc
shrl
lea
push
mov
mov
push
xor
les
or
pusha
dec
ljmp
dec
mov
lea
jecxz
rolb
mov
hlt
adc
cmpsb
or
das
pop
add
mov
pop
inc
inc
push
imul
push
je
sub
and
test
cmp
mov
fbstp
sahf
pusha
fs
push
pusha
inc
aaa
sbb
cld
les
sub
jb
data16
cld
and
cmp
ljmp
mov
inc
arpl
fistl
mov
lahf
push
test
mov
xor
xchg
pusha
int3
pop
adc
and
dec
mov
jae
push
mov
aaa
or
xchg
jnp
cmp
call
outsl
and
pop
lea
data16
dec
and
cmc
push
pop
adc
fs
and
push
cmp
xchg
inc
xchg
in
and
mov
dec
sub
cmp
pusha
pushf
cwtl
fisttpl
mov
fisttpl
lret
rolb
ljmp
jb
orb
in
mov
push
or
add
mov
add
mov
sbb
fidivs
mov
arpl
insl
mov
sub
push
sbb
or
jp
cmpsl
insb
xchg
dec
hlt
in
and
dec
incb
inc
aad
mov
cld
stos
sub
xor
mov
jle
or
cmp
xchg
lahf
and
mov
mov
ss
fidivrl
push
and
cmpsb
mov
inc
and
cwtl
xchg
loopne
jle
fs
bound
cmp
sarb
mov
cmp
cmp
or
out
call
mov
xchg
mov
clc
sub
fs
mov
push
cmpl
jno
stc
pusha
and
push
adcl
dec
add
cmp
test
dec
or
mov
mov
fldl
xchg
mov
pushf
add
and
mov
add
adc
xchg
test
cli
or
adc
stos
sub
out
and
mov
bound
inc
in
mov
pop
pop
stos
jle
popa
add
pop
subl
inc
cmp
sarl
dec
ficompl
cmpsb
sbb
lcall
fbstp
push
cmp
sub
in
adc
lcall
push
fsubl
data16
ljmp
out
stos
xchg
mov
push
adc
pop
shlb
and
mov
xchg
hlt
test
jle
sbb
xchg
ret
push
sub
mov
pushf
xchg
inc
cmp
add
lret
cs
cs
mov
pop
lods
sarb
push
je
lods
jmp
mov
jl
xchg
push
and
and
lods
loopne
sarb
inc
cs
xor
sbbl
out
dec
ja
adc
mov
dec
cmp
inc
dec
xchg
fdivrs
test
dec
push
and
adc
lock
mov
lret
sahf
ret
aas
pushf
cs
and
cld
mov
add
jbe
lods
mov
rolb
mov
cli
sub
adc
mov
push
loop
and
mov
inc
xorb
sbb
lds
and
std
and
daa
roll
test
fs
adc
es
sbbb
and
push
xor
stc
xchg
ror
dec
mov
into
nop
add
loopne
lcall
mov
inc
loopne
or
sbb
inc
xchg
xor
cmp
pusha
xchg
movsb
mov
and
aam
jp
lds
push
ds
leave
loopne
mov
cmp
push
cmp
mov
test
rolb
xchg
mov
mov
sub
out
mov
xor
fs
cmc
push
in
rcl
add
psubusb
shll
mov
ss
mov
or
inc
std
xchg
mov
scas
or
call
and
cmove
fcomps
es
mov
xor
cmpsb
xor
add
or
fdivs
into
add
in
add
mov
fistl
or
mov
push
jo
fcom
movsl
and
addr16
ret
sub
sub
adc
das
sbb
mov
push
mov
or
movsb
shrl
iret
cmp
fwait
dec
jo
mov
es
pop
arpl
sub
pop
push
add
mov
enter
sub
mov
push
push
jle
aad
add
imul
add
sub
adcb
mov
xor
ror
mov
add
sub
adc
stos
insb
ficoms
xorb
adc
andb
push
xor
jbe
pop
js
adc
in
or
pop
pop
mov
lcall
or
gs
sub
mov
sbb
pop
add
loope
dec
or
insl
xlat
daa
rcrl
mov
dec
outsb
addb
mov
cmp
or
jb
mov
dec
ljmp
pushf
shrl
sub
in
adc
mov
jle
fdivl
scas
sub
lcall
fs
inc
dec
push
sbb
pop
or
pop
int3
arpl
mov
lret
insl
push
sarb
cmp
dec
shr
or
jecxz
jbe
and
push
and
loop
mov
mov
sbb
inc
add
sbb
xchg
mov
push
sbb
stos
cs
jo
fldenv
int3
js
mov
or
xor
cmp
nop
test
sarb
ljmp
add
add
mov
xor
xor
sub
mov
pop
xchg
push
cli
sahf
and
add
push
xchg
arpl
leave
mov
cmp
jp
into
mov
bound
outsb
cmp
pop
jb
push
scas
xor
fwait
std
sbb
xchg
lods
mov
xchg
pop
pop
sub
add
push
dec
push
pushf
cmc
sbb
lds
addr16
fisubs
in
jl
inc
cmc
loop
pop
cmpsb
call
loopne
fsubrs
xchg
lret
fnstcw
jae
xor
jb
lcall
das
add
loopne
mov
pop
add
add
mov
jbe
sub
cmp
inc
popf
ret
or
in
pop
mov
mov
mov
and
movsb
cli
add
mov
les
cs
inc
pop
jae
push
jne
popf
and
jbe
test
add
out
jb
mov
loopne
sub
add
and
les
dec
mov
loopne
mov
adcb
mov
adc
sub
sub
stos
and
cmp
sbb
push
inc
fdivrs
mov
jp
js
sub
cmp
jmp
inc
insl
mov
adc
hlt
rorb
dec
je
enter
cld
jb
insl
pop
mov
cmp
mov
sbb
orb
aam
sub
pop
into
jle
sub
mov
test
and
mov
dec
mov
or
gs
es
fidivrs
rcrl
lret
hlt
sub
xchg
or
test
and
ljmp
add
out
pop
push
rdmsr
popf
ret
mov
push
sbb
syscall
insl
cmpsb
sahf
dec
xor
mov
sub
push
add
xorb
add
ss
rcrb
mov
inc
shlb
lret
cmp
in
mov
fdivs
jle
sub
lock
fiaddl
repz
add
and
adc
sbb
fdivrs
dec
jl
mov
loopne
push
dec
jle
mov
inc
insb
mov
or
mov
xchg
mov
add
mov
mov
daa
xchg
dec
push
jle
mov
mov
xor
aaa
outsb
or
push
and
ljmp
inc
loop
mov
pop
inc
adcb
xchg
push
xchg
mov
sub
repnz
sbb
jbe
inc
pusha
inc
sub
jmp
inc
mov
jbe
je
daa
pop
xor
dec
dec
mov
or
push
arpl
add
mov
jnp
jecxz
sbb
pop
das
test
lcall
sbb
push
testb
xchg
sub
mulb
rorb
jge
sub
rol
adc
sbb
pop
push
cmpsb
mov
cs
andl
add
lods
outsb
nop
or
psubsw
fwait
adc
or
aam
push
push
mov
ljmp
inc
xor
insl
push
rorb
xor
sub
out
movsl
lret
lret
add
mov
mov
push
mov
call
add
add
ret
imul
and
lock
sub
push
push
add
sahf
mov
ret
xchg
test
or
jns
pop
jbe
mov
xchg
stos
lods
cmp
add
mov
xchg
dec
xor
addr16
mov
stc
and
mov
push
fildl
fmul
test
out
xor
pop
push
mov
call
add
dec
int
inc
mov
fnstenv
mov
out
adc
sub
adcb
push
jno
rcl
or
repnz
or
mov
mov
push
outsb
dec
fs
push
and
pop
test
dec
sub
fs
pop
add
xchg
mov
push
ret
push
int3
bsf
sbb
ds
das
add
xor
adc
rol
mov
inc
xchg
leave
andl
test
dec
add
inc
sbb
ds
add
xor
cwtl
lcall
rcrb
movsl
mov
pop
inc
sbb
scas
lock
inc
sub
add
cmp
lahf
adc
or
push
lds
lods
sub
xchg
js
mov
dec
adc
rolb
mov
push
add
out
cmp
cwtl
inc
push
push
into
fildl
dec
in
sbb
add
xchg
lock
mov
out
cli
mov
push
sub
push
add
sbb
sub
xor
inc
imul
and
sbb
repz
mov
sbb
fsubs
insb
cs
jb
in
xchg
and
adc
and
repnz
aad
cltd
mov
and
fimull
ret
adc
mov
fldt
jecxz
push
fcoms
mov
loopne
add
fnstsw
pop
pop
cmpl
rol
xor
inc
je
add
lea
shll
mov
xor
and
aad
mov
popa
mov
fwait
bound
dec
ja
push
sbb
sbb
test
and
or
cmpsb
rcrb
ljmp
ss
pop
xchg
int3
ljmp
push
push
cmp
and
add
scas
push
cmp
inc
xor
inc
add
or
mov
repz
jno
fs
icebp
lret
inc
sub
and
push
in
xchg
jbe
sbb
inc
lods
adc
es
add
push
mov
or
inc
popa
loopne
lea
rcr
cmp
lret
loopne
xchg
and
xchg
add
cli
js
sub
test
or
push
push
push
icebp
dec
out
popa
cli
mov
inc
xor
sbb
jge
jo
not
je
cmp
daa
lcall
add
mov
test
repnz
mov
xchg
adc
xchg
fidivs
push
sub
les
roll
stos
push
inc
and
aam
orl
nop
stos
lcall
loop
xchg
mov
rol
dec
push
ss
mov
jns
inc
push
popa
pop
imul
pop
xchg
pop
roll
push
in
js
adc
adc
jle
stos
inc
cmp
popf
push
testb
mov
repnz
faddl
sub
cmp
sub
stos
mov
mov
scas
pop
es
test
call
stos
scas
lcall
inc
add
push
lcall
dec
ljmp
loop
xchg
sbb
mov
or
imul
pop
add
shrb
sub
mulb
pop
dec
fsubrs
ret
cmp
xchg
test
fs
sub
mov
sbb
xchg
adc
sub
push
int3
aam
mov
sarb
andb
dec
int3
xchg
mov
in
mov
or
jae
in
fs
sub
outsl
pop
pusha
jo
sahf
icebp
rorb
push
push
push
outsb
and
inc
adc
leave
enter
jecxz
inc
dec
and
ds
mov
mov
jb
mov
xor
or
cmp
sbbb
sub
call
push
pop
fdivrs
pop
push
xchg
mov
push
mov
ret
mov
sub
and
je
xchg
mov
pop
cli
xchg
jne
inc
insl
sub
adc
sbb
or
push
insb
hlt
xchg
fidivrl
cmp
adc
xor
call
pop
mov
push
pop
mov
push
mov
or
insl
adc
out
push
out
mov
jno
lea
lret
push
rcll
mov
inc
psubsb
fwait
test
es
cmpsb
xor
inc
or
out
fwait
sbb
push
xor
shlb
mov
xchg
pusha
pop
push
mov
pop
or
lods
mov
loopne
out
dec
out
mov
mov
sbb
daa
pop
adc
mov
inc
and
scas
fwait
mov
or
insb
xchg
and
add
push
lcall
adc
daa
loopne
push
inc
mov
add
fwait
cmp
lahf
lock
mov
push
and
xchg
push
adc
add
xor
jmp
cmp
out
repnz
cli
mov
orb
xchg
pop
repz
push
test
cs
or
pop
loopne
dec
je
sahf
jae
push
jne
mov
cmp
cmp
pusha
or
stos
push
lods
loop
cli
shlb
lock
outsb
adc
push
fs
push
enter
pop
ret
add
mov
lds
mov
push
jge
mov
or
fcoms
in
jbe
dec
add
cwtl
add
fcmove
call
push
inc
dec
cli
add
mov
adc
aad
cmp
and
pop
jmp
sbb
sti
mov
repnz
inc
clc
fadds
mov
xor
dec
cli
add
sbb
cmp
xchg
cwtl
mov
mov
jle
mov
lock
pop
stos
iret
xchg
jle
push
inc
cvtps2pi
push
cli
cmp
xor
mov
adc
xchg
nop
adc
test
or
pushf
test
rcl
es
shlb
inc
sub
or
push
in
fs
mov
adc
or
sbb
stos
jp
adc
or
pusha
outsb
sbb
mov
push
jmp
inc
out
push
bound
jnp
hlt
fnstcw
rorb
js
arpl
jp
add
add
loop
movsb
sahf
push
or
test
add
into
add
add
pop
inc
push
sub
push
mov
insb
mov
in
idiv
add
sub
push
add
in
pop
andb
out
repz
mov
add
ror
popl
xor
pop
adc
mov
sahf
sub
lods
xor
jb
iret
and
ljmp
xchg
push
add
andb
ljmp
dec
fcomps
jbe
insl
es
sbb
adc
insl
mov
push
loopne
jecxz
pop
jge
dec
sub
xor
add
popf
lods
dec
insl
mov
adc
into
pop
jmp
imul
mov
push
dec
hlt
repnz
pusha
sub
call
push
add
xor
lea
es
insb
lods
cmpsb
cmpsb
or
mov
add
lcall
and
inc
fnsave
xlat
mov
movsl
aas
dec
call
add
jbe
rcrb
jns
stos
sbb
mov
mov
xchg
xor
jle
imul
pop
je
cmp
sahf
dec
or
and
or
sahf
xor
adc
add
fisttpl
lock
mov
inc
mov
outsb
xor
adc
dec
dec
pusha
or
lcall
lcall
push
jmp
xchg
pop
pusha
mov
mov
shrb
dec
xor
add
rorb
shr
pusha
cs
xor
ja
cli
and
jb
dec
divb
inc
jmp
mov
add
push
or
push
rcll
loop
or
mov
xor
inc
orl
add
cmpsl
mov
push
daa
mov
cli
and
mov
shlb
dec
data16
sub
sbb
test
cmp
lods
addr16
add
mov
push
fcompl
push
cmpsb
push
sub
into
sub
jbe
bound
add
xchg
jmp
sarl
ds
pop
lds
mov
aam
mov
jp
mov
movsl
das
clc
sbb
mov
loop
movb
pop
icebp
shl
adc
mov
out
mov
jl
insb
clc
jo
inc
fidivrl
pusha
loop
dec
enter
test
inc
mov
mov
mov
mov
mov
das
mov
xor
and
out
scas
xor
movsb
pop
mov
jle
fdivrs
sbb
int
cmc
mov
dec
cmp
fmull
mov
out
cmc
sub
pop
out
insl
push
pushf
cmp
mov
add
pop
add
test
push
sub
ds
lcall
test
add
cwtl
test
cmpl
outsl
mov
testl
or
dec
int3
pop
cmp
push
inc
xchg
mov
cwtl
sarb
ret
mov
sbb
mov
negl
dec
loop
ficompl
orb
cmp
sub
test
or
lods
push
xor
add
orl
nop
sbb
fidivl
into
loop
add
sbbl
inc
outsl
insb
cmp
or
pop
push
mov
xchg
xchg
mov
mov
dec
es
add
adc
dec
nop
cmpsl
popl
lret
pop
push
imul
jl
xor
inc
aad
jecxz
add
mov
mov
nop
jne
mov
cmpsb
movb
xchg
jge
movsl
iret
mov
pusha
lods
movsb
rorl
fimull
fmuls
outsl
loopne
rcpps
push
lods
outsb
jno
push
imulb
push
lea
jo
adc
push
loopne
fsubrs
movsb
fisubs
fsubrs
shrb
mov
cmpb
pop
and
jp
cmp
pusha
test
jl
ljmp
fsubrp
cmpsl
sti
jp
push
dec
lods
lret
inc
movl
into
insl
inc
je
inc
adc
mov
testb
push
add
ret
cmp
je
cmpsb
rorl
jl
and
dec
add
sti
mov
cmp
sbb
clc
sub
out
data16
adcl
push
sbb
rorb
push
xor
lock
lock
and
and
mov
push
call
loopne
cltd
sub
outsb
fadds
sbb
fisubl
mov
adc
xchg
addb
or
and
test
jb
cmp
pop
push
mov
fnstsw
or
std
add
or
int
dec
fwait
loop
sub
lcall
xchg
sub
pop
add
loop
add
dec
stos
push
xchg
hlt
pop
xchg
xchg
or
cli
sub
xchg
add
movsb
adc
sub
jmp
xor
sbb
xchg
sbb
incb
lods
mov
loop
sbb
inc
test
in
rcll
arpl
sub
movsl
repnz
test
lcall
cmpsb
subb
xchg
sbb
adc
shll
cmp
sub
mov
dec
je
cmp
ds
js
jo
test
inc
push
push
orl
sub
sbb
ficoml
insl
js
mov
les
test
mov
int
mov
popf
cmp
push
cli
add
dec
adc
cmp
mov
mov
outsl
jmp
arpl
pop
sub
or
iret
push
outsl
insb
push
jo
mov
in
daa
or
mov
jbe
mov
jp
ds
int3
adc
push
push
pop
es
cmp
ss
ja
adc
mov
xor
dec
lock
adc
lret
jle
pop
stos
les
lods
mov
in
dec
scas
mov
sub
mov
loop
mov
aaa
mov
out
jp
sub
mov
fiadds
testb
sbbb
adc
orl
andb
xchg
push
jecxz
mov
rolb
jl
mov
outsb
pop
mov
in
jo
fistpl
cli
lods
pop
les
pop
loopne
sbb
mov
sub
es
sub
or
ss
add
mov
adc
filds
push
aad
lahf
and
scas
test
push
jmp
sub
fs
pop
mov
adc
pusha
xor
mov
add
movsb
push
pop
pop
xorb
add
sarl
cmpsl
inc
adc
out
cmp
add
mov
push
das
rclb
ss
ja
repnz
mov
cmp
ret
mov
call
jbe
fdivs
adc
and
stos
lods
add
jbe
scas
add
xlat
pop
lock
dec
test
arpl
mov
sub
outsl
lcall
test
ljmp
add
shl
xorb
cli
dec
arpl
les
dec
aam
sbb
jmp
test
push
add
fstl
pusha
xchg
push
push
add
sbb
xor
ss
scas
scas
shlb
aas
and
dec
popa
dec
aam
shrl
cmp
cmp
pop
outsb
mov
xchg
push
mov
aad
pusha
stos
cli
sub
mov
add
aad
add
add
loopne
push
pushf
mov
ret
sbb
test
sub
pop
test
jmp
data16
imul
lea
dec
add
cwtl
push
stos
sub
sbb
addr16
dec
pop
and
push
mov
mov
cli
cmp
icebp
sbb
test
mov
pop
jecxz
sbb
clc
mov
adc
fcoml
jbe
loop
or
cli
xor
xlat
mov
push
pushw
insb
inc
jp
loop
inc
or
jbe
movsl
mov
push
lock
in
bound
add
es
adc
xorb
test
mov
pop
push
movsb
jns
aas
je
jmp
shrb
fldl
jmp
sahf
and
call
shlb
mov
add
in
or
subb
pop
push
incb
out
mov
pop
mov
sbb
pushf
push
pusha
ret
push
in
int3
aam
add
or
pusha
sub
neg
or
shlb
mov
and
push
bound
pop
hlt
adc
xchg
cmp
enter
dec
xchg
stos
mov
push
int3
scas
inc
adc
dec
cmp
fcoml
ss
popa
push
adc
lret
jb
adc
js
mov
dec
inc
cmp
add
cwtl
mov
jg
xchg
xor
add
sbb
paddb
insb
push
mov
loopne
push
aam
mov
bound
orb
out
pop
inc
mov
jge
cmp
fcompl
pop
push
add
adc
pop
inc
push
or
adc
loopne
fwait
mov
test
fstpt
stos
mov
mov
push
cld
les
dec
xchg
mov
push
lock
or
add
mov
clc
mov
enter
add
add
mov
jg
scas
fcmovbe
loopne
mov
pop
xchg
xor
cwtl
cmp
mov
in
loop
sar
pop
or
mov
in
add
mov
xor
mov
add
jne
jmp
mov
fisubl
jbe
mov
sbb
mov
out
pusha
jae
dec
loop
stos
xchg
shl
aas
adc
jo
sbb
dec
lahf
notb
xchg
pop
je
stos
ss
push
adc
cmp
and
sub
jb
rcrb
outsb
test
mov
repnz
jp
js
pop
push
inc
insl
fcomps
dec
mov
cmp
or
jge
push
loop
or
cmp
adc
mov
adc
add
cld
push
mov
jl
and
add
cmp
cld
xor
fwait
lret
cmp
mov
jno
sbb
add
pop
lods
repnz
and
or
stos
or
xchg
push
sbb
js
fstl
aam
xor
xor
inc
cmc
push
fisubs
lret
fs
mov
xor
clc
xchg
rclb
je
and
xchg
sbb
fbstp
in
adcl
push
test
std
pop
scas
int
orb
idiv
push
cmpsb
fimull
add
ds
ljmp
pop
sbb
dec
mov
sti
xchg
pop
dec
out
imul
clc
ret
xchg
cmp
hlt
test
mov
loope
or
lret
and
mov
add
or
out
cmpsb
xchg
sti
jge
pop
xor
mov
test
push
inc
push
pushf
push
movl
ret
or
pop
test
lcall
adc
jecxz
js
xor
cs
ret
testb
mov
and
fcomps
and
push
push
test
push
lcall
rorb
or
das
jp
jecxz
mov
sub
cltd
fst
push
cmp
lahf
or
shll
clc
xchg
mov
dec
sbb
fcoms
in
je
jns
enter
inc
mov
mov
xchg
ss
push
pop
xlat
xchg
enter
and
les
push
inc
cltd
sub
bound
sbb
mov
dec
das
sub
sub
dec
test
das
loopne
adc
ret
or
lea
test
push
imul
test
mov
ljmp
and
xchg
insb
mov
sub
mov
out
cmc
inc
or
or
es
movsl
int
pop
add
lds
pusha
add
mov
cmp
in
xchg
jae,pn
js
aad
movsl
stos
sub
std
out
add
mov
and
adc
int3
mov
adc
sub
cmp
and
xchg
in
sar
jl
loopne
imul
int
mov
les
mov
add
push
rcl
jl
clc
add
xchg
cmc
cmp
sbb
sbb
or
dec
xor
lds
xchg
test
cmp
cmp
and
dec
sahf
and
push
scas
jae
or
in
jns
outsb
ljmp
test
ds
jbe
loope
pop
pop
sbb
add
pushf
inc
insb
push
sbb
xchg
dec
cli
xor
pop
inc
push
out
mov
repz
adc
push
cmpsb
loopne
dec
push
jl
mov
cmp
jo
xchg
lcall
mov
jo
ffree
subl
fsubr
sbb
push
nop
cld
test
pop
dec
inc
sahf
inc
push
xor
jecxz
and
xor
stos
fistps
adc
cmp
fadd
and
imul
test
adc
cltd
shlb
push
sbb
insl
mov
inc
push
add
mov
push
faddl
cmp
push
aad
xor
enter
and
mov
xchg
popa
es
and
imul
lea
add
outsl
mov
fiadds
mov
add
js
add
imul
adc
push
shl
add
imul
out
movsb
and
push
jne
inc
add
or
jl
cmc
dec
ret
jl
cwtl
mov
mov
sahf
les
xchg
sbb
rolb
arpl
cmp
mov
push
shll
pop
notb
cmpsl
or
std
push
cmp
dec
inc
sahf
test
or
jmp
xorb
cwtl
test
sub
imul
adc
lahf
pop
fwait
xor
test
jecxz
or
in
out
enter
mov
sub
mov
sbb
lcall
test
imul
popl
shlb
sbb
lods
aad
dec
xor
mov
fldenv
aam
es
insb
imul
mov
inc
ljmp
pop
xchg
fdivrl
and
pop
jo
pusha
imulb
mov
add
inc
mov
push
sub
dec
cmp
out
jnp
mov
inc
pop
jg
cmpsb
push
int
lret
push
push
push
fistps
cltd
push
imul
call
dec
sub
xchg
movsl
mov
sub
addr16
sbb
mov
or
sahf
daa
mov
popa
sub
or
mov
jge
pop
mov
xchg
nop
cmp
imul
out
xchg
cmp
or
into
adcb
xchg
mov
mov
inc
lahf
mov
jecxz
and
mov
xor
movsl
push
sbb
xchg
push
call
fisubl
adc
hlt
in
sub
pop
xchg
ss
fmull
mov
cld
ss
fdiv
mov
fdivrp
jl
cmpsb
push
or
add
add
or
push
dec
and
ds
rcr
test
fcmove
fstpt
decl
movsl
clc
pop
sbb
popf
movl
cmpb
cli
lea
sbb
push
xchg
jo
add
mov
add
adc
add
mov
mov
push
mov
pop
iret
adc
sub
hlt
lock
push
scas
pop
pop
ss
je
divb
mov
push
inc
adc
mov
push
leave
sub
pop
lcall
int3
inc
or
push
fwait
xchg
mov
loop
and
outsb
out
out
mov
test
addr16
movsb
xchg
or
add
cmp
mov
enter
dec
inc
aad
data16
stos
fnstenv
fadds
pop
in
xchg
xchg
lds
aad
daa
mov
mov
stos
lahf
arpl
mov
and
jae
lret
js
mov
les
ret
mov
mulb
pop
fs
fs
jno
jecxz
push
roll
mov
add
lahf
cwtl
jle
push
adc
add
jecxz
ret
das
inc
sub
mov
dec
call
xor
insb
jp
push
sarb
push
rolb
cmc
out
pop
cmp
fwait
mov
paddq
je
cmc
fdivr
aad
adc
add
imul
iret
jo
sub
xchg
mov
or
lcall
pop
push
clc
jle
cmc
adc
test
mov
mov
or
adc
sub
es
push
sub
sbb
sbb
lock
pop
int
sub
int3
lock
mov
mov
sub
je
ja
hlt
insb
inc
mov
xchg
subl
or
adc
mov
or
aam
push
shll
ljmp
mov
push
je
cmpsb
shll
pop
xchg
add
subl
push
orl
adc
aad
sbbl
sti
es
faddl
arpl
insl
sbb
inc
xchg
call
mov
add
testb
into
jne
lds
hlt
sub
inc
ret
add
fbstp
mov
stos
xor
inc
or
inc
xor
dec
lods
das
adc
lcall
cwtl
push
mov
add
sbb
add
addr16
adc
aaa
sub
mov
into
enter
xor
xchg
je
pop
xchg
pop
cmpsb
stos
xchg
pushf
std
sbb
lea
pop
pop
hlt
pop
movsl
add
jnp
int3
in
xchg
addl
movsb
push
and
xchg
sbb
add
push
or
xchg
mov
insb
fiadds
push
mov
push
cmp
pop
pusha
shll
jmp
orb
mov
fadd
call
sbb
and
pop
push
pop
cmp
sub
rcl
jo
adc
mov
add
aam
mov
je
ret
sub
push
mov
rolb
inc
test
sub
stos
imul
xor
mov
push
popf
cmpsb
int3
ficoms
jmp
push
or
shlb
pop
pop
xor
nop
mov
jge
inc
lcall
or
cmp
mov
push
jp
ret
rol
push
and
iret
adc
mov
movsb
mov
sub
test
lock
les
mov
scas
in
cs
mov
imulb
mov
mov
fstps
dec
pop
popf
movsb
fisubl
shrb
xor
add
cmp
add
mov
pusha
mov
inc
add
hlt
add
lea
xchg
shl
std
xchg
inc
pop
mov
add
hlt
ljmp
lock
arpl
push
fidivl
mov
mov
movsl
test
je
cmc
or
cmovge
jb
and
xor
fistl
vshufps
jp
mov
cmp
fsubs
lret
jnp
fdiv
aad
adc
clc
popa
loope
adc
push
clc
jns
ds
push
maskmovq
idivl
mov
inc
and
sarl
push
lea
sub
xor
pop
adc
push
add
mov
lea
movsb
mov
pop
adc
sub
dec
lret
popa
mov
dec
sub
push
clc
cmpsb
pop
cmpsb
f2xm1
adc
push
ret
push
inc
and
andl
dec
pop
mov
or
test
lret
jno
push
pop
inc
and
mull
mov
pop
and
pop
into
movl
notb
mov
xor
jne
fs
insl
stos
out
cmp
movsb
sahf
xor
and
and
xor
aas
pop
add
add
lock
inc
jb
xor
aam
cli
jae
sub
icebp
fs
imul
pusha
mov
lock
inc
loop
into
xor
jo
cmp
ds
inc
aaa
ficomps
pop
adc
ss
orl
adc
jbe
or
mov
sbb
mov
push
dec
lock
loopne
repnz
push
ret
pop
sbb
pop
xor
xchg
test
orb
stos
into
xchg
lods
inc
test
mov
adc
or
mov
or
pop
incl
pop
mov
out
jecxz,pn
sbb
enter
xchg
fwait
nop
in
push
movb
xor
mov
mov
mov
ret
pop
les
pop
gs
inc
xorb
jbe
fs
rol
and
test
xor
flds
sbb
mov
pusha
pop
lods
push
push
xchg
insb
fsubp
xor
push
sbbl
sbb
pop
ficoml
push
fmuls
les
mov
mov
push
test
xchg
sbb
pop
addl
dec
xchg
adc
or
mov
pop
inc
sti
ss
mov
shrb
push
mov
mov
or
xor
scas
xor
pop
sub
xchg
out
fcoml
pop
shrl
and
leave
xor
mov
adc
jl
rclb
xchg
sbb
sbb
and
lods
sub
fnstsw
mov
mov
daa
sbb
sub
push
pop
enter
adc
inc
pop
and
mov
notl
mov
pop
mov
imul
sub
mov
arpl
stos
lcall
js
adc
and
cwtl
push
das
dec
mov
mov
jp
iret
adc
dec
fdivrl
in
pop
cmpsb
or
fstpl
scas
cltd
hlt
or
add
mov
push
test
jbe
or
fisubrl
aam
push
roll
cmp
or
jg
aaa
out
push
pop
add
xor
pushf
lret
hlt
pusha
add
xor
push
add
xchg
lret
sub
mov
push
andl
pop
mov
adc
scas
imul
fs
and
jge
cmp
test
aam
cli
loope
push
add
int3
mov
dec
push
sbbl
push
lods
insb
jmp
aam
inc
dec
mov
lcall
dec
outsb
shlb
sub
test
out
push
add
dec
xlat
fadds
in
adc
sub
repz
je
sarb
shrb
lods
popf
push
andb
and
es
adc
lods
add
lret
dec
mov
cwtl
push
jb
ljmp
mov
lods
jmp
mov
pop
lahf
call
test
pop
rolb
addb
ljmp
sbb
pop
pusha
lea
xor
dec
test
jmp
or
sbb
lods
inc
out
xchg
adc
inc
push
cli
insb
shl
and
idiv
xor
mov
add
jb
insl
pushf
cmp
mov
add
scas
js
add
xchg
into
sbb
inc
sbb
pop
xchg
mov
popa
pop
sub
inc
sub
inc
sbb
dec
cli
cmp
pop
popa
jo
sbb
push
add
pop
rcrb
or
stc
lods
add
add
sub
or
mov
sub
xorl
adc
jmp
movsl
and
sbb
loop
cltd
or
mov
shll
aam
pushf
xchg
loop
fisubl
into
ss
les
sbb
cli
adc
rclb
inc
cld
pop
dec
and
fstp
rorb
movsl
xor
fisubs
and
hlt
xchg
jbe
ljmp
out
inc
jge
mov
addr16
push
xchg
or
mov
mov
or
out
xchg
mov
loope
data16
movsb
int3
push
and
mov
sub
ds
push
mov
test
or
popa
xorb
ret
sar
loop
inc
lret
sbbb
imul
xchg
ds
nop
and
mov
add
enter
pop
or
mov
loope
jae
leave
add
push
cmp
cmpsl
les
push
cmp
out
or
rcr
clc
push
pop
in
inc
sub
pop
cmp
ss
push
ds
pushaw
cmp
push
lcall
insb
out
mov
and
inc
mov
pusha
and
add
loop
pop
sub
inc
ljmp
adc
in
lahf
dec
pop
or
loopne
dec
mov
lock
add
pop
test
sbb
add
shrb
add
add
les
pop
pop
inc
jg,pn
fistl
addb
lret
pop
mov
or
insl
fisubl
and
push
pop
lret
std
jbe
cmp
pop
dec
faddl
xor
je
sub
cs
data16
inc
roll
cs
nop
sbb
jne
test
ficompl
test
inc
lods
push
data16
pushf
lcall
dec
dec
insl
and
int
adc
sub
push
and
push
flds
test
add
xchg
mov
outsl
cld
es
jmp
or
fists
cmpsb
mov
adc
mov
push
push
xchg
or
xlat
test
inc
xor
lcall
cmp
aad
sub
mov
push
fsub
jbe
xor
movsb
push
test
xchg
and
in
test
adc
adc
xor
mov
mov
test
and
sti
pop
or
andb
sbb
test
fnstsw
sbb
fcmovnbe
popf
xor
dec
xor
fistpll
jo
xor
test
mov
adc
adc
jp
xor
je
add
pop
les
add
adc
ret
les
lods
arpl
jae
or
pop
lret
xor
dec
jo
sub
sbb
or
xor
mov
or
loop
lea
push
push
addr16
add
add
fisubrs
mov
cmp
add
je
and
and
xchg
loop
push
stc
mov
fs
into
mov
mov
add
jle
je
mov
sub
push
aam
leave
addb
dec
enter
sar
andb
sub
and
mov
dec
push
roll
ret
push
pop
push
push
enter
and
or
mov
inc
inc
or
les
inc
mov
mov
cmp
inc
stos
loop
inc
mov
nop
lods
std
mov
lods
jp
dec
sahf
pop
sub
push
and
mov
ss
into
adc
mov
or
sub
rorl
mov
xchg
jbe
add
push
push
pop
sub
ljmp
and
leave
lock
adc
add
int
push
sbb
jb
push
or
cmp
mov
mov
es
ret
mov
pop
add
int3
xchg
pop
mov
mov
mov
insb
cmpl
adc
cmp
rcrb
mov
mov
movsw
push
ss
or
inc
ljmp
push
std
mov
popa
dec
xchg
je
repz
pop
in
daa
or
insl
fldenv
mov
push
and
lea
leave
pop
lds
or
fcoms
push
pop
cwtl
loope
push
das
jp
mov
add
pop
cmp
add
mov
sbb
push
xor
int3
sbb
rorb
adc
pop
les
sub
mov
mov
or
scas
add
hlt
dec
push
pusha
sub
dec
leave
push
mov
cmp
fsub
xchg
jmp
cli
push
mov
mov
aam
sub
cmc
hlt
test
push
mov
jecxz
cwtl
push
pop
sti
inc
pusha
icebp
mov
subb
or
jae
orl
xchg
jne
cmp
mov
sbb
sbb
lahf
into
mov
jmp
cli
sub
imul
es
cmpsb
cmp
sbb
es
cmpsb
push
push
jge
rclb
push
sub
xchg
std
test
or
jo
clc
aas
ss
pop
call
dec
mov
push
popf
mov
mov
arpl
xor
adc
imul
or
out
inc
sub
es
add
jp
outsb
repz
jo
pusha
add
mov
sub
faddl
push
cmp
mov
push
out
add
imul
adc
repnz
xor
cmpsb
dec
fs
dec
loope
mov
jno
out
and
call
push
fildl
push
call
insb
dec
add
loop
jb
orl
sti
dec
mov
jl
jle
mov
dec
dec
andb
add
int3
adc
popa
jle
mov
adc
push
pop
dec
lahf
gs
adc
pop
cltd
mov
ds
mov
adc
mov
add
repz
xor
xchg
mov
sub
cmp
sbb
and
and
lcall
nop
xorb
add
xor
sbb
cld
mov
sbb
popa
and
repnz
add
jne
cld
orb
adc
xchg
jp
sbb
data16
ljmp
stc
pop
pop
cmp
push
insb
or
loop
rcr
sbb
jne
dec
or
dec
call
sub
call
jb
test
in
mov
inc
cmp
inc
mov
mov
imul
mov
outsl
sahf
lahf
hlt
fcmovb
mov
loopne
lcall
adc
les
adc
jb
sub
je
mov
fs
adc
fcmovu
lret
js
xchg
or
jbe
into
pushf
push
mov
pop
fisubrl
jo
xchg
testl
pop
aas
dec
mov
rcrl
adc
or
inc
push
movsl
dec
adc
adc
sbb
add
add
mov
hlt
mov
cs
lcall
hlt
sbb
sbb
les
int
movl
or
pop
dec
out
test
or
lret
gs
enter
cs
jl
mov
dec
dec
sbbb
mov
cmpsl
icebp
inc
lods
ljmp
loope
inc
cmpl
outsb
push
cs
mov
std
cmpsb
mov
or
adc
sub
inc
xchg
loopne
ret
in
pusha
addl
sahf
incb
test
clc
es
add
jmp
clc
inc
adc
xchg
push
data16
mov
fdivrp
orb
xor
adc
aam
hlt
push
movsl
adc
test
sub
add
push
push
scas
and
mov
or
push
je
scas
jle
sarb
push
inc
add
xor
pop
xor
or
sbb
or
mov
mov
xor
add
adc
ffreep
jle
lahf
or
nop
pop
mov
dec
dec
or
dec
shrb
adc
xor
mov
inc
xor
mov
ror
add
sub
je
push
shll
sarl
pop
lahf
or
dec
mov
mov
inc
fiadds
inc
jb
mov
add
pop
bound
or
jbe
ret
rolb
xchg
int
cmp
out
lods
std
pushf
jl
fcmove
pop
mov
mov
mov
jbe
push
bound
push
je
inc
add
add
pop
shrb
push
mov
out
mov
mov
mul
adc
clc
and
lock
mov
xor
rol
out
mov
cli
mov
subl
test
out
out
mov
jl
shrb
xchg
in
cld
add
xor
sbb
xchg
dec
push
js
dec
jl
push
cmp
push
mov
add
mov
add
xchg
lock
cld
test
aas
jp
cmp
mov
xchg
jl
addr16
and
pop
repz
jmp
inc
cmp
add
add
push
and
or
xor
test
mov
sub
lock
imul
inc
mov
pop
shll
lcall
and
sbb
std
and
inc
jnp
test
pop
aad
addr16
mov
or
dec
mov
incb
push
jns
jne
pop
and
and
iret
cwtl
xor
dec
pop
js
sbb
xor
lcall
hlt
sbb
push
push
pop
mov
pop
mov
mov
mov
push
mov
sti
mulb
call
or
lds
in
xor
das
mov
ss
jg
fdiv
nop
cs
fprem
inc
add
pop
mov
stos
sarl
aam
scas
jl
pop
daa
mov
pop
xchg
adc
mov
xor
testb
sbb
fdivrs
loopne
shlb
loope
add
lds
repnz
sbb
mov
in
and
dec
push
inc
sbb
and
das
cmpsb
jl
test
xchg
ret
mov
in
dec
test
sbb
pop
sbb
inc
adc
call
add
lahf
cmp
lods
call
adc
push
add
pop
cli
adcb
int3
pop
add
pop
or
push
dec
mov
arpl
scas
pop
mov
dec
popa
jmp
inc
dec
ret
loopne
add
leave
out
loop
fistpll
inc
or
addb
dec
mov
in
inc
cwtl
mov
mov
push
sahf
push
jno
mov
std
out
add
dec
cmp
repz
add
sub
ficoml
or
cwtl
lock
mov
inc
inc
sbb
imul
ljmp
jecxz
ds
pop
lea
addb
sub
ss
lds
add
inc
or
pop
les
and
in
insb
sahf
ret
xorb
add
cmpsb
scas
fs
jge
les
cli
cld
sub
bound
leave
lahf
inc
test
mov
xchg
lock
test
loopne
jno
dec
and
movsb
rcl
xor
inc
sahf
or
push
cmp
push
fadds
lods
or
push
lock
cmpsb
das
dec
push
sti
imul
or
lea
cmp
xchg
mov
mov
mov
mov
mov
test
add
ret
pushf
addb
inc
jmp
icebp
pusha
jne
rolb
mov
ljmp
jns
les
add
arpl
test
test
add
adc
jge
stc
je
and
mov
mov
push
jge
mov
inc
push
ficoml
push
or
dec
sub
push
scas
cwtl
inc
mov
xchg
pop
xor
test
aaa
add
cmp
lds
stc
mov
mov
push
dec
adc
xor
or
ret
lea
ja
into
pop
lahf
and
or
cld
test
ds
add
movsb
push
mov
les
push
mov
dec
cmp
xchg
mov
fidivl
hlt
in
sbb
out
mov
push
sbb
inc
adc
ds
mov
es
push
sbb
mov
das
or
call
rcr
jp
filds
insb
adcl
mov
add
lods
add
cmp
mov
std
aam
xchg
or
ss
inc
fmuls
inc
push
aas
je
cmp
dec
aas
mov
push
xor
and
xchg
pop
or
push
mov
int3
sub
call
hlt
mov
mov
inc
mov
cmp
das
mov
loop
aaa
les
add
dec
push
or
pop
aam
test
mov
imul
inc
inc
insb
enter
sub
pop
dec
xchg
rcrl
lret
sbb
icebp
mov
jb
das
push
xor
fadds
testb
lock
stos
cld
ljmp
jl
mov
and
cmp
add
xchg
lretw
lods
pushf
ds
xor
add
dec
or
cmp
int3
fisubs
xor
push
mov
push
rcl
mov
cmc
gs
incl
test
rol
mov
lock
push
sbb
andl
push
xor
lock
rcrl
aad
rorl
mov
sub
inc
sbbl
push
sbbb
je
in
push
jo
lcall
add
mov
push
shlb
andl
mov
ds
out
jb
punpckldq
nop
sbb
mov
or
mov
shrl
jnp
dec
mov
imul
loopne
and
push
inc
lcall
dec
insl
xor
jge
push
cmp
orl
mov
xchg
fsubs
mov
push
les
cmp
dec
cmpsl
fsubl
mov
and
sub
mov
add
stos
stos
lcall
mov
jnp
lods
or
mov
hlt
mov
sbb
negb
punpckhbw
jbe
lods
xchg
xchg
or
push
push
sbb
pop
add
push
dec
inc
cmpsb
mov
mov
cmp
dec
mov
and
push
out
out
add
mov
rorl
sub
scas
lcall
insb
jnp
pop
cmpsl
and
sbb
imul
repnz
dec
sbb
js
or
mov
sbb
pop
push
sbbl
xchg
ret
cmp
notl
push
add
pop
pusha
inc
fwait
push
orl
lret
adc
dec
dec
push
cmp
aam
clc
sbb
cli
dec
lcall
test
push
xor
shlb
loopne
mov
in
stos
jbe
push
inc
jl
xchg
mov
and
pop
xorb
xor
notb
lret
dec
push
lods
push
sub
cs
scas
scas
insb
in
xor
bnd
orl
and
pusha
push
mov
pop
cmp
and
mov
pop
mov
outsb
push
int3
xchg
fsub
xor
repnz
loop
test
mov
push
adc
push
push
or
jne
lahf
movsb
ds
mov
shl
mov
mov
subl
mov
mov
dec
sbb
inc
mov
push
loope
fwait
in
bound
outsb
mov
mov
push
dec
cmpsb
sahf
mov
stos
push
packsswb
int3
rclb
push
bound
or
adc
xor
jmp
js
cli
mov
pushf
les
push
in
stos
jg
add
sbb
or
jo
and
mov
push
sub
enter
push
les
sub
lret
flds
add
inc
gs
add
xor
test
add
push
or
xchg
out
popa
inc
dec
js
or
mov
mov
mov
dec
outsl
out
jo
push
sahf
fs
and
add
inc
fwait
sahf
add
shl
inc
inc
xor
bound
add
mov
and
pop
test
lret
rolb
fcom
and
aam
mov
scas
sub
out
mov
sbb
adc
xchg
pop
xor
lods
sbb
clc
cmp
cmp
add
mov
adcb
push
nop
ja
mov
mov
cmp
les
loope
andb
inc
shll
mov
rorl
and
loop
add
xor
rcrb
aad
add
jno
outsl
lock
jmp
movsb
mov
outsb
movsb
xor
push
and
gs
ffreep
rol
pop
lods
mov
sbb
insl
cmpsb
es
pop
adc
inc
insb
cs
and
add
lcall
jecxz
out
pop
jmp
mov
aad
jp
inc
aam
ror
pop
les
mov
sub
aas
adc
inc
mov
adc
clc
call
mov
or
and
dec
cmp
in
pop
and
xor
xor
adc
clc
jns
cld
imul
call
shlb
adc
test
mov
pop
adc
dec
push
pushf
cltd
sbb
lods
fxsave
popl
lret
pushf
and
adc
dec
add
shrb
insl
add
pop
jmp
lods
aas
push
clc
leave
fs
xor
or
add
jg
xor
adc
pop
aam
fistl
sub
sbb
xor
popf
mov
clc
cmp
nop
mov
lods
call
mov
aaa
dec
insl
jo
addb
mov
add
mov
mov
popf
add
ljmp
cmp
cld
outsb
ljmp
js
movb
fwait
cmp
or
cmc
jo
dec
inc
mov
dec
add
push
and
mov
fcmovnbe
cld
mov
mov
cmp
xchg
test
or
inc
and
dec
xchg
jo
pushf
mov
or
pushf
xor
add
stos
push
xchg
xor
ds
fsubr
les
jl
test
shlb
xchg
mov
mov
adc
sub
xchg
or
jae
push
pushf
lret
push
and
lahf
sbb
lock
add
mov
jge
mov
mov
call
movsb
add
popf
add
adc
inc
cmp
fs
imul
push
push
icebp
lret
test
jmp
jle
mov
sub
sbb
ljmp
in
in
es
jno
xor
or
add
stos
and
ret
aam
mov
add
lods
pop
inc
xor
add
sahf
test
rolb
xor
push
xchg
jge
and
stos
insl
cmpsb
sub
into
pop
push
dec
jmp
lods
fsub
xor
js
jne
adc
insb
icebp
mov
sarb
xchg
lods
les
cld
dec
mov
das
data16
mov
hlt
jno
pop
outsb
outsb
mov
dec
adc
rol
xor
push
push
lds
js
mov
dec
movb
mov
popf
outsb
push
and
xchg
in
jle
hlt
lcall
xor
xor
dec
inc
pop
sbb
push
daa
ds
xchg
mov
dec
or
pop
loop
xor
cmp
fsts
or
or
in
or
adc
jb
in
ss
outsl
mov
movsb
and
loopne
mov
inc
sbb
aas
pop
nop
rorb
sti
popa
popa
pop
adc
dec
repz
pop
aaa
push
add
and
and
in
notrack
and
idivl
dec
rcr
push
push
sbb
push
push
movmskps
add
or
push
push
js
dec
jle
sbb
or
sub
xchg
loop
call
push
neg
mov
incb
test
test
out
out
push
stos
stos
cmpsb
sub
out
scas
pushf
mov
jmp
js
jnp
popa
push
mov
pop
cld
or
lods
fidivrl
imul
fldcw
xchg
les
jmp
mov
push
lret
out
icebp
dec
fs
sbb
daa
add
push
or
sub
push
inc
sub
and
sbb
jbe
xor
sub
icebp
mov
or
mov
mov
in
cld
out
mov
into
dec
push
pop
mov
mov
mov
jbe
mov
shlb
mov
sub
fwait
jle
pop
mov
inc
out
fcmovnb
xchg
add
insb
repz
test
or
ljmp
js
mov
inc
mov
or
fdivs
outsb
fisubrl
pop
test
aam
cltd
test
test
pushf
push
or
xor
rorl
push
xor
dec
fisubl
inc
mov
xchg
mov
or
xchg
pop
cmp
aam
mov
addr16
mov
cmp
xor
mov
inc
xlat
adc
push
ret
fildl
mov
into
add
nop
mov
push
ret
outsl
in
sub
cmc
mov
lcall
add
cli
pop
hlt
sub
add
cmpsl
icebp
fisubl
cli
or
xchg
nop
je
jl
aaa
rolb
and
mov
or
sbb
cmpsb
push
ret
lods
jo
call
js
ds
push
jle
or
dec
test
in
scas
inc
insl
lea
ror
inc
mov
sbb
jb
aad
add
or
cmc
mov
ds
sarb
dec
mov
sub
std
or
add
and
pop
fstpt
loopne
add
and
adc
cmp
sbb
sub
cmp
jge
jle
push
or
cmp
adc
xchg
sbbl
imul
mov
mov
mov
adc
cmpsb
loopne
data16
sub
mov
insb
cmp
or
xchg
push
pop
xchg
in
dec
inc
test
jne
into
push
push
push
adc
lcall
outsb
dec
es
push
clc
xchg
add
push
fisubrl
pop
ljmp
lock
leave
add
adc
dec
cmp
in
aad
loope
cmc
xor
inc
add
nop
shlb
jb
mov
sarb
sub
cmpsb
fists
mov
std
mov
notl
out
or
inc
mov
push
pop
push
sbb
mov
dec
pop
mov
jecxz
lret
fists
jp
mov
pop
es
or
in
dec
shrb
ljmp
mov
inc
mov
mov
mov
inc
xor
and
mov
and
hlt
adc
ss
mov
or
adc
pop
lahf
mov
fidivrl
std
lcall
shlb
jbe
sub
xchg
lock
push
cli
lods
pusha
ljmp
lods
jge
shr
and
mov
xchg
jbe
and
int3
movsb
out
push
out
cmc
lret
or
rcr
les
clc
mov
in
pusha
mov
inc
inc
dec
adcb
scas
and
pop
push
xchg
xor
cmpsb
loope
push
imul
push
in
sbbb
ss
adc
adc
es
cmpsb
cmp
pop
push
out
ret
mov
ret
fcomps
in
adc
cmp
repz
add
sub
cmc
cmc
enter
dec
push
xchg
scas
add
lahf
sahf
arpl
mov
les
xor
xor
subb
sbb
call
jae
insl
push
enter
enter
and
lcall
or
sbb
js
pop
je
imul
loop
in
sub
add
add
ret
lock
shlb
das
push
shl
fcoml
sti
add
mov
mov
movsb
and
rep
andb
les
add
mov
inc
cmp
clc
ret
je
push
mov
mov
xchg
mov
sldt
or
mov
sbb
imul
add
lret
fcomps
and
mov
insl
add
jmp
dec
mov
hlt
push
mov
push
pusha
test
fdivrs
pushw
enter
sbb
push
pop
cli
jmp
fwait
sub
sub
out
rcrb
cmc
and
lret
mov
pushf
lcall
cli
adc
or
addb
pusha
orb
mov
stos
std
mov
add
sahf
inc
cmp
sbb
fistps
pop
push
mov
jae
mov
lock
push
fsubrl
push
sub
sub
sub
push
sarl
pop
adc
xor
out
inc
pop
mov
pushf
repnz
repnz
lods
cmpsb
push
lds
ljmp
mov
ret
cmp
adc
add
pusha
xchg
adc
stos
inc
cmp
cmp
add
dec
subl
les
mov
imul
jno
out
xchg
mov
xchg
add
xchg
stos
mov
or
push
js
sahf
sub
sub
add
push
rcl
addl
ret
into
adc
jo
add
inc
push
inc
and
rorb
pop
push
xor
mov
adc
aam
pusha
push
and
aam
cmp
dec
or
sub
pop
flds
pop
cld
pop
push
ss
xor
jo
cld
push
add
mov
jg
imul
jp
dec
pop
lods
xchg
les
cs
mov
and
xchg
inc
push
sub
or
mov
add
jnp
jl
xor
sbb
mov
mov
sub
fs
add
aad
fsubs
scas
les
in
cmpsl
subb
jle
aaa
mov
add
push
call
sbb
in
clc
pop
add
mov
mov
mov
lcall
push
jnp
test
xor
sub
xorb
xchg
or
jb
mov
jl
sahf
leave
es
aam
push
mov
cmp
lock
insl
inc
inc
pop
clc
add
add
pusha
shrb
or
gs
cli
xor
adc
add
inc
xchg
test
mov
fadds
sub
daa
es
inc
sti
mov
jo
xor
add
test
inc
fidivrl
add
lea
jg
inc
inc
imul
hlt
test
xchg
ret
or
add
jns
push
add
jl
jg
das
mov
xor
lods
push
mov
pop
push
scas
jmp
push
push
icebp
or
outsl
test
shl
inc
jl
test
jnp
out
ss
icebp
adc
push
inc
jle
xchg
xchg
and
xor
insl
inc
ret
add
cmpsb
push
aaa
mov
loope
inc
pusha
add
les
pop
bound
pop
ds
add
pop
inc
loop
in
sub
loope
stc
pop
and
inc
ficompl
out
mov
lods
push
xchg
ja
dec
add
cmp
lret
nop
inc
jno
enter
dec
movsl
pop
xchg
jne
adc
push
adc
sub
adc
lcall
or
hlt
les
popa
push
movsl
pusha
sahf
mov
or
ret
frstor
dec
scas
adc
push
dec
subb
jne
outsl
xchg
mov
lds
cld
andl
jecxz
add
push
sbb
push
fldenv
push
and
imul
mov
mov
loop
out
cwtl
mov
adc
pop
arpl
push
dec
or
add
mov
add
xor
fdiv
and
add
sbb
pop
and
dec
addb
je
xchg
mov
loop
dec
arpl
call
xchg
pusha
outsl
adcb
xchg
flds
je
adc
inc
cmp
jns
adc
mov
fisubrl
jb
jno
push
or
jne
adc
pop
sbb
fdiv
add
mov
add
mov
mov
ret
push
cmp
jbe
push
mov
xchg
push
ret
xchg
dec
int
daa
cmp
outsb
test
cmp
cmc
xchg
test
push
mov
lock
dec
cmp
jle
test
pusha
mov
push
and
lock
loopne
lret
cmp
xor
push
test
mov
pusha
sub
roll
insb
stos
jne
add
jbe
orl
insl
add
dec
enter
inc
jecxz
xor
sub
lret
sbbl
jns
pop
cmp
addl
and
push
xor
dec
ljmp
dec
daa
push
out
jb
pushf
mov
cli
mov
mov
jg
gs
movsb
cmp
sbb
cmp
ficoml
dec
loop
dec
fistpl
mov
jl
push
add
push
mov
push
push
mov
push
scas
xchg
push
or
mov
jnp
adc
lcall
dec
clc
and
hlt
cmp
push
fadds
xchg
out
jl
sub
xchg
push
test
test
sub
cmpsl
mov
and
push
xchg
push
ficoml
insb
and
mov
inc
add
cmpsb
xchg
cmp
nop
push
int3
negl
xchg
inc
mov
dec
outsb
dec
xchg
lcall
insb
push
adc
jae
shlb
shlb
bound
lods
inc
mov
mov
pop
push
sti
add
sbb
scas
hlt
add
cmpsb
add
inc
sbb
inc
adc
scas
push
add
pop
aas
mov
fs
pop
add
push
sbb
mov
stos
lods
xchg
and
mov
lock
mov
xor
jle
mov
add
rorl
mov
clc
or
mov
sbb
popa
or
and
inc
push
add
lods
mov
das
les
mov
ss
rolb
outsl
cmp
jo
pusha
add
test
bound
pop
add
cmpxchg
mov
outsb
cmp
push
bound
or
mov
aas
xchg
xchg
insb
or
add
sub
fcomps
ljmp
mov
dec
sub
xchg
stos
push
push
or
mov
pusha
inc
or
out
ret
cmp
mov
out
pushf
push
mov
cs
adc
pusha
inc
inc
sub
ror
inc
push
add
fdivr
pop
cmp
stos
cmpsb
rcrl
push
out
add
or
cwtl
jbe
arpl
mov
push
and
xchg
movb
xchg
rorl
xchg
std
clc
xchg
into
dec
or
sub
pusha
addl
sub
and
and
test
test
std
and
inc
cld
data16
in
xor
sub
adcl
lods
push
jne
mov
cmpsl
stc
dec
stos
mov
jnp
mov
push
xlat
bound
pop
addr16
repz
mov
mov
xchg
dec
and
inc
or
mov
and
fistl
mov
and
push
ret
adc
adc
add
cwtl
cs
js
sbb
scas
dec
adc
cmp
fninit
pusha
jge
fsub
jmp
and
jb
xchg
rorl
sub
fidivrl
push
pop
scas
nop
mov
lret
outsb
inc
lock
push
push
cmc
loopne
mov
call
jl
out
fadds
cmp
ret
add
lods
in
add
test
and
and
jae
js
jecxz
sahf
mov
dec
pop
cmp
mov
lcall
jb
rcl
cmp
fdivrp
and
pop
loopne
leave
cmp
and
mov
call
inc
iret
ret
imul
mov
xor
rorb
inc
mov
jle
add
and
sub
and
fcomps
push
or
jb
jl
loope
and
push
jle
clc
dec
mov
repnz
mov
pop
pop
lret
lods
adcb
test
loope
sbb
lods
or
and
ficompl
add
mov
lcall
loop
adc
xor
push
enter
mov
push
mov
add
fimull
shrl
dec
insl
push
stos
cld
jo
mov
dec
inc
cmp
mov
decl
mov
add
push
push
add
andb
xor
int3
pop
sbb
mov
push
aam
mov
or
shlb
shl
clc
pop
inc
pop
ss
out
aas
into
jecxz
lcall
insb
push
and
and
jge
loop
daa
or
adc
pop
insb
mov
inc
push
pop
arpl
push
test
push
in
add
int3
call
ret
loop
sub
enter
mov
or
loope
lcall
popf
add
mov
nop
pop
inc
fs
mov
xchg
lods
movsb
jne
insl
loop
int3
push
leave
ret
pusha
aad
pop
or
mov
mov
ficoml
push
movsb
in
sbb
jp
lcall
cmp
roll
sbb
jl
xchg
mov
hlt
test
or
pop
fisttps
mov
hlt
add
aam
cmpsb
or
pusha
push
push
and
pop
into
je
je
inc
adc
xchg
or
cmp
addb
inc
lret
pop
mov
push
lcall
or
pop
clc
in
sahf
shrb
xorb
imul
cmp
in
adc
push
or
push
fmuls
inc
jl
and
jmp
pushf
test
and
dec
inc
ds
pushf
push
jbe
and
outsb
dec
pop
push
push
cmp
lea
push
fsts
sar
or
lea
pop
sbb
cmp
shll
fcomp
lea
xor
and
and
jp
aad
ljmp
xchg
mov
push
dec
call
lods
mov
and
dec
jo
aam
push
mov
and
sti
popa
call
mov
and
repz
mov
xor
aam
add
mov
sbb
sbb
sbb
pop
pop
mov
fsubl
sbb
jns
mov
insl
lcall
xchg
rolb
pop
pusha
fimuls
pusha
xchg
mov
jmp
adc
fildll
jl
pop
into
hlt
cmpsb
jo
fmuls
sbb
cli
push
push
mov
adc
xlat
mov
mov
add
lock
xorb
or
cli
push
sbb
push
loopne
cmpsb
mov
push
fwait
ss
pop
adc
xor
mov
add
and
push
and
push
lret
add
sbb
xchg
jno
pop
mov
mov
jb
clc
mov
int3
pushf
ret
adc
push
jecxz
rcrb
mov
mov
add
cld
inc
lods
pop
push
xchg
lret
notl
test
mov
out
cmp
adc
in
add
xchg
cli
xlat
push
mov
inc
inc
loop
inc
fsts
int
pop
push
in
mov
out
shll
ficoms
inc
sub
imul
fistl
adc
jbe
push
cli
xor
andb
xchg
out
adc
outsb
test
aam
call
lods
cmpsl
add
jo
mov
fcomps
jo
aad
pop
mov
les
add
loopne
add
cmp
loopne
rol
xchg
cwtl
xorl
and
out
cmc
pop
push
inc
mov
lret
imulb
push
dec
adc
aaa
push
mov
push
mov
mov
add
ficompl
sahf
sbb
shll
mov
movl
dec
add
mov
insl
xor
add
jae
add
test
lret
das
push
push
lcall
insb
push
push
rcll
test
mov
lds
cld
xchg
inc
je
dec
push
inc
test
or
add
mov
mov
sbb
mov
lods
mov
rorl
cmc
adc
mov
adcl
je
cmp
pop
mov
and
sar
add
les
push
inc
bound
inc
sub
pop
xchg
mov
xchg
js
mov
sbb
sbb
xchg
insb
icebp
dec
cmp
add
cmp
adc
sbb
cli
inc
ret
inc
xor
rol
xchg
xchg
lcall
add
sbb
mov
jb
cmpsb
add
pop
cmpl
loopne
ds
xchg
lea
repnz
sub
shll
xlat
push
es
sub
fimull
inc
add
adc
mulb
push
inc
mov
and
test
sbb
mov
fiaddl
jnp
xor
or
push
lret
push
pop
ret
push
push
adc
xor
add
rolb
cs
xchg
xor
cli
inc
inc
cmp
movsb
pop
inc
xlat
pop
push
stos
push
pop
mov
test
add
dec
cli
das
cli
cwtl
out
add
xor
sbb
mov
lods
inc
mov
jns
sub
jnp
lods
push
fwait
lods
jecxz
jnp
mov
rorb
insb
dec
es
mov
jae
out
cmpl
subb
aad
nop
lds
sarb
ficompl
mov
je
add
pop
movsb
add
add
shrb
enter
mov
fisttps
aad
xor
xor
push
mov
test
adcb
les
cmp
mov
test
and
cli
xor
bound
in
mov
insb
push
outsb
fimull
mov
adc
or
jo
push
inc
fdiv
sbb
pop
out
test
in
insl
sti
sub
mov
fwait
lods
mov
mov
push
adc
hlt
or
dec
sbbl
push
fisubrl
or
inc
xchg
mov
or
cmp
mov
pop
xchg
push
nop
fists
cmp
ds
adc
jo
je
int3
into
testl
cwtl
sub
jb
loopne
les
mov
sarb
push
and
push
hlt
cli
push
adc
shrb
rcrb
inc
stos
pop
xchg
fiaddl
xor
push
aad
adc
push
pop
sub
sahf
or
xchg
push
xchg
shl
cmp
inc
in
and
test
out
fcoms
popa
xor
bound
lret
pop
or
and
sbb
cli
xchg
add
cs
lods
int
lds
in
xor
jae
jge
js
arpl
arpl
adc
ss
xchg
pop
and
testb
xor
pop
pop
loopne
jge
sub
push
add
xor
test
xlat
jp
xchg
inc
stos
add
mov
push
addr16
inc
mov
jbe
xlat
daa
icebp
or
mov
shll
push
sub
cld
adc
sub
inc
imul
ret
fisubl
mov
push
lds
lret
call
cwtl
mov
jmp
in
and
lcall
rolb
insl
adc
dec
cmp
mov
cli
and
jecxz
xor
out
sbb
mov
adc
es
cmp
loop
aad
xor
je
jo
fs
mov
mov
fstpl
adc
lcall
out
xor
inc
les
enter
shrl
lods
cmc
orb
push
popa
adcb
test
xchg
mov
pop
jmp
ret
les
adc
scas
stos
mov
dec
je
sub
lahf
add
sbb
insb
push
jbe
loopne
and
or
mov
les
sub
sti
mov
add
and
or
dec
repnz
icebp
enter
mov
inc
cld
push
aam
es
add
adc
insl
or
clc
add
mov
and
fidivrl
adc
add
gs
jb
push
push
test
xchg
add
and
fwait
je
lods
push
xor
mov
inc
push
and
aam
ret
stos
inc
add
mov
dec
lcall
jbe
orb
mov
cli
pop
sahf
cmpsb
in
roll
or
call
jnp
dec
and
dec
subl
and
mov
adc
test
sub
and
mov
mov
inc
mov
inc
inc
jnp
mov
push
jl
fidivs
rcrb
pop
insl
pop
xchg
test
and
ret
ret
add
js
hlt
jp
inc
stos
iret
hlt
fdivrl
test
faddl
mov
pop
pop
cmpsb
test
lods
or
pop
adc
mov
adc
ja
pop
sbb
mov
cmove
test
cmpb
push
gs
mov
fdivr
rcll
push
mov
mov
ret
sti
push
and
push
stos
mov
cmpsb
lods
inc
ljmp
mov
lds
mov
cmpb
xchg
sbb
insl
jge
adc
std
or
gs
jbe
or
mov
dec
scas
fs
mov
jle
adc
add
pop
cmpsb
fdivl
imul
mov
stos
ss
pop
inc
jb
pop
jp
sbb
rclb
fistl
cmc
lcall
push
pushf
xor
mov
xor
rcl
stos
mov
movsl
scas
fiadds
pop
mov
outsl
aam
sti
dec
xchg
inc
sub
mov
push
arpl
cmp
in
mov
fsubs
sbb
cmp
addb
jbe
fidivrl
sbb
sub
imul
mov
or
inc
xchg
pop
cmp
cmpsb
ret
lods
adc
inc
les
cs
scas
ds
jle
inc
lret
inc
aaa
sbb
add
inc
adc
scas
mov
lret
dec
jl
xchg
aas
adc
mov
mov
push
xchg
and
pop
in
and
jle
xchg
dec
mov
scas
scas
ss
add
out
mov
icebp
bound
add
sub
out
or
test
sbb
sub
inc
push
xchg
jge
or
push
les
jg
cmp
mov
movsl
mov
imul
jo
mov
int3
and
mov
aad
adc
or
and
push
js
loope
cmp
rorb
cmp
jl
jnp
and
jle
sub
inc
push
inc
outsl
sub
push
mov
or
frstor
loop
mov
cmp
inc
push
shll
mov
push
xrelease
faddl
pop
aad
cmp
and
test
dec
mov
xchg
fwait
cmp
and
inc
pop
jbe
movsl
add
add
inc
addr16
add
dec
mov
sbb
repz
mov
pop
js
mov
adc
fisttpll
dec
insl
stc
popf
cli
ret
mov
or
push
xlat
out
sub
pop
mov
jle
inc
pop
xchg
mov
sbb
xrelease
jmp
hlt
ret
xchg
sarb
ficoml
ljmp
hlt
dec
push
pop
adcb
mov
dec
and
add
sbb
test
sub
inc
add
jle
lods
push
dec
adc
pop
or
out
mov
shlb
cli
out
imul
ret
testb
pop
movsb
mov
push
add
subl
xor
inc
mov
jle
push
cmp
mov
adc
jle
mov
ds
mov
and
test
push
xor
outsb
xchg
or
pop
mov
add
mov
push
mov
inc
push
cs
mov
mov
mov
dec
dec
mov
call
push
dec
pop
dec
mov
test
test
mov
adc
sbb
push
les
sub
jle
imul
or
inc
adc
lcall
mov
pushf
in
lcall
pop
ret
pop
movsl
iret
and
and
adc
push
xchg
out
insb
in
mov
repz
adc
pop
or
sbb
push
fs
dec
xchg
mov
dec
mov
mov
aad
repnz
mov
mov
cmpsb
inc
out
int
mov
push
shlb
adc
mov
and
xor
pop
or
fadd
adc
add
jb
pop
mov
inc
hlt
pop
mov
lods
jne
mov
faddl
enter
pusha
xchg
imul
loop
mov
push
inc
push
faddl
adc
dec
or
xchg
cwtl
pop
mov
mov
mov
mov
inc
dec
sub
mov
in
and
sti
mov
sahf
lods
dec
add
cs
hlt
ret
inc
jnp
into
sbb
mov
insl
cli
mov
adcb
inc
int3
push
xchg
inc
sbb
cmp
xor
popa
mov
lcall
fsubrp
cmp
nop
pop
lods
loop
mov
pshufw
sbb
lock
fs
loop
cmpsb
xor
push
xorb
cwtl
xchg
rolb
ja
mov
repnz
pop
adc
jb
imulb
push
dec
mov
and
cld
mov
inc
add
push
sub
mov
lock
outsb
adc
mov
mov
aam
inc
dec
adc
sub
out
xchg
inc
or
test
push
fisubl
lea
clc
inc
dec
add
push
loop
nop
rorb
mov
and
hlt
icebp
and
or
sub
imul
inc
pop
les
je
add
shll
xchg
lods
es
cltd
mov
stos
sbb
inc
mov
jno
sahf
aas
pop
mov
jp
mov
dec
sbb
push
cmp
jno
push
test
add
addr16
dec
mov
hlt
sub
loopne
data16
xchg
mov
and
sarb
ss
add
jb,pn
add
add
push
repz
push
rcrb
pop
call
insb
mov
mov
shlb
lods
mov
mov
into
fmul
inc
or
adc
pop
sub
push
add
aam
add
cs
and
js
dec
ss
and
cmp
adc
mov
jns
sahf
inc
je
leave
test
lea
cmpsb
jle
pop
adc
fwait
insl
cmpsl
adc
int3
stos
call
not
xor
je
xchg
pop
sub
pop
ja
hlt
cltd
mov
mov
dec
push
fildl
mov
push
push
jno
in
fmull
pop
test
sbb
jo
test
inc
dec
jbe
sbbb
stos
inc
adc
fldt
mov
test
adc
push
mov
out
jmp
dec
and
adc
movsl
inc
mov
addr16
loopne
shlb
dec
mov
push
les
xor
and
les
adc
mov
out
inc
sub
loop
push
pop
add
clc
pop
and
movsb
stc
sub
jp
mov
dec
xchg
andl
and
loop
pop
fmuls
mov
mov
lcall
xchg
pop
cli
mov
xchg
push
pusha
lods
mov
mov
rorb
pop
pop
shrb
mov
rcll
pop
cmpl
addl
mov
sbb
add
pop
sldt
dec
mov
inc
sub
in
mov
add
jmp
rclb
or
pop
clc
insb
push
addr16
mov
leave
fdivs
jbe
data16
push
and
fidivrs
sbb
mov
jp
mov
cmpsl
mov
cli
nop
shlb
cs
fmull
call
and
mov
mov
data16
adc
icebp
mov
push
insb
addr16
push
rorl
dec
imul
cs
lcall
push
mov
mov
std
rorb
adc
dec
test
add
inc
cmp
adcb
ffree
arpl
push
mov
sahf
out
mov
mov
jp
mov
fcompl
xor
inc
jnp
test
cmp
cmp
xchg
lods
aaa
mov
add
rcrb
jo
rolb
nop
xlat
cmp
lcall
repnz
xor
cmp
jle
int3
fwait
mov
es
adc
add
test
add
pushf
lahf
mov
xchg
inc
sbbb
stos
test
jbe
in
dec
lock
les
add
add
and
cmp
jl
mov
adc
mov
int3
sub
and
lock
or
cltd
lret
sbb
jae
push
xchg
lods
xchg
lock
enter
jmp
fsubl
cmp
insb
add
xchg
addr16
mov
out
cmpsb
inc
adc
cli
jbe
pop
inc
andl
push
sahf
xor
jmp
dec
push
adc
ljmp
out
repnz
adc
sbb
xor
out
mov
cmp
rcrb
test
bound
sbb
fiaddl
mov
orb
mov
daa
scas
sub
loopne
inc
inc
push
xchg
pop
xchg
add
sbb
xchg
orl
ljmp
sbb
scas
inc
push
repz
add
daa
add
jl
lods
adc
popa
xorb
sbb
and
sahf
inc
mov
scas
movsl
sub
push
mov
or
fsubp
adc
dec
push
dec
push
test
or
ljmp
int3
jnp
inc
or
gs
dec
inc
xchg
insl
cmp
add
sbb
ss
pusha
or
mov
iret
es
cwtl
lret
je
sbb
push
loope
adc
stos
hlt
xchg
shrb
and
loop
add
cld
add
test
in
dec
es
ficompl
mov
ljmp
pop
loopne
roll
es
notb
mov
mov
xchg
adc
bound
inc
int3
inc
mov
stos
inc
inc
mov
dec
loope
push
andb
data16
ja
push
popa
pop
out
xor
cmpsb
jmp
mov
mov
cmp
mov
pop
cmpsb
faddl
push
test
xor
and
xor
fisubrs
mov
add
cmp
jp
lods
pusha
xchg
insl
xor
movsb
sub
iret
test
sarb
pop
gs
pop
adc
fistl
js
inc
xchg
xchg
mov
push
xchg
int3
enter
mov
cld
fs
andl
push
jg
popl
out
xor
test
cmp
bound
fwait
xor
pop
add
stos
and
pop
shlb
inc
fidivs
add
and
jl
push
lcall
cmpsb
out
imul
jp
lock
fisubrl
inc
dec
inc
xchg
xchg
mov
push
ds
pop
syscall
adc
mov
in
lods
xchg
test
sub
cmpsb
loop
test
fsubrl
insb
andb
stos
in
aam
scas
mov
lods
cmpsb
adc
xor
mov
das
mov
push
clc
sub
imul
pop
std
mov
rorl
call
or
jg
fildl
or
pop
dec
enter
daa
inc
repnz
outsb
sbb
mov
hlt
xchg
pushl
imul
pop
dec
mov
dec
sbb
push
scas
out
in
sbb
lods
or
nop
pop
jno
test
mov
push
sarb
lods
push
push
or
cmpsb
push
insl
test
fsubs
adc
scas
hlt
adc
push
dec
push
mov
or
test
xchg
mov
pop
cld
pop
xchg
lret
loope
dec
jbe
cmp
lcall
outsb
fiaddl
cmp
adcl
and
mov
outsb
out
adc
je
sub
or
jp
mov
dec
mov
pop
sbbl
sub
xor
mov
addb
shll
cs
test
push
lods
inc
xchg
mov
adc
add
mov
inc
push
push
pop
adc
push
jl
mov
xor
push
call
jp
lcall
push
pop
xor
js
jae
stc
mov
mov
pop
mov
ret
cli
fidivl
mov
aam
cmp
hlt
xchg
orb
loop
add
outsl
lods
add
test
pop
cmc
es
or
push
mov
push
xchg
js
test
pop
js
add
lock
insl
mov
mov
add
mov
xor
or
add
fstps
jo
sub
test
icebp
push
cmpsb
inc
lock
shlb
jmp
repnz
js
sti
mov
filds
into
lret
repnz
test
cmpsb
rcr
inc
jbe
add
add
scas
test
xor
inc
and
add
pop
fistpl
outsb
cli
jo
dec
fs
dec
pop
clc
jae
mov
push
xchg
pop
outsl
call
out
sub
loope
aad
mov
push
add
clc
gs
cs
pop
cmp
mov
ret
fmul
enter
or
sbb
cs
dec
bound
sbb
push
mov
lock
add
pop
aam
es
fwait
ret
outsb
out
push
and
pusha
int3
mov
addb
dec
dec
cmpsb
and
fcmove
lcall
xchg
mov
mov
pusha
js
arpl
adc
sahf
jnp
lods
push
sub
movsb
adc
sbbb
push
and
mov
int3
cwtl
adc
cmpsb
pushf
icebp
xchg
dec
xchg
mov
popf
xor
dec
jp
call
fcom
out
and
in
inc
popl
or
xchg
jecxz
test
push
cs
imul
into
sub
insl
testb
clc
and
repz
or
pop
das
pop
test
movsb
fs
fdivrl
sbb
mov
insl
push
dec
xor
hlt
popf
out
xchg
mov
jbe
or
mov
lods
fadds
jne
jecxz
cmpsl
insb
gs
pop
or
pop
cli
bound
mov
adc
xorb
sub
icebp
mov
add
test
mov
ret
xor
lods
jbe
ret
jge,pn
mov
mov
push
inc
insb
sub
bound
incb
and
pop
fwait
les
jge
adc
add
sub
add
data16
xchg
sbb
mov
lock
bound
dec
sar
loop
adc
jmp
in
or
cmpsb
lock
inc
fildl
dec
in
xor
test
fcoms
cmpsb
cmpsb
lock
stos
adc
mov
inc
stos
push
loop
test
xor
aad
pop
cmc
call
insl
pop
inc
xchg
jo
hlt
into
jbe
pop
ljmp
ss
mov
cmp
cmp
aad
sar
fmull
sub
ljmp
dec
cmp
adc
pop
cmp
lahf
pusha
mov
sbb
mov
dec
fcomps
out
cli
cmp
aam
mov
dec
aas
loop
push
add
jno
lea
and
dec
dec
loopne
lret
or
call
mov
shlb
lcall
jns
inc
push
push
in
cmp
pop
ret
xchg
push
adc
ljmp
aam
pop
jbe
jecxz
cld
shll
dec
addb
repz
dec
cli
mov
cwtl
lods
test
rol
add
popf
add
orl
rol
jbe
loop
loop
adc
dec
js
mov
ds
das
scas
jl
rcll
enter
and
fwait
mov
ror
fisubs
lods
jge
clc
xchg
outsl
dec
cwtl
sub
cs
adc
icebp
sub
mov
add
loop
std
bound
push
inc
shrb
sbb
jbe
mov
pusha
lea
xor
orl
inc
lds
rcr
lret
aam
pop
dec
gs
add
out
add
dec
xchg
mov
jbe
lods
sub
popa
adc
cld
outsb
movsl
mov
jae
test
jecxz
sub
sub
jmp
fisubl
inc
jae
aas
push
xchg
insl
lock
dec
cmp
mov
mov
dec
xor
add
add
sub
ds
loope
data16
cmp
arpl
push
mov
add
pop
jl
je
push
xchg
popa
mov
data16
and
cmp
push
push
xchg
xchg
lds
dec
fcmovu
test
lods
xchg
mov
adc
lock
mov
stos
jle
cmp
dec
mov
ret
push
add
jbe
add
push
cs
mov
sbb
jl
dec
jg
inc
mov
xorb
dec
mov
mov
jbe
mov
mov
pop
ret
mov
test
adc
cmp
lds
push
jge
inc
push
mull
pop
shll
or
pushf
pop
outsb
ret
push
push
push
push
outsb
xor
sbb
xor
test
add
push
sahf
cli
sub
bound
add
xchg
test
push
push
sub
adc
jg
or
cmpsl
incl
dec
gs
sub
mov
jbe
pop
push
xor
push
andl
add
fneni(8087
clc
inc
xchg
fs
sub
or
ss
sub
cmpsl
cmp
push
scas
push
push
sub
dec
call
pop
repnz
lret
lods
inc
mov
mov
and
mov
sbb
or
fadds
je
out
test
aad
xorl
clc
push
fidivl
mov
xchg
fiadds
lret
push
sahf
pop
rorb
push
fists
add
xchg
pop
mov
fcoms
sbb
pop
cld
xchg
rcrl
bswap
xchg
jo
inc
adc
cmpsb
push
and
mov
cld
xor
or
dec
icebp
pop
inc
mov
jbe
dec
icebp
cmpsb
jo
ds
js
mov
rcll
int
jo
inc
pop
sub
sub
add
sub
cli
or
and
push
pusha
repnz
or
pushf
or
mov
or
into
or
xor
out
ret
test
push
xor
mov
mov
fsqrt
add
lret
jl
sarl
or
negb
cltd
and
sub
pop
sbb
xchg
rcr
xchg
adc
xchg
fiaddl
stos
shrb
push
fisubl
mov
xor
add
jp
sahf
cld
push
jbe
das
inc
data16
sub
cld
and
add
add
cmpsb
ljmp
cmc
in
or
in
ret
sbb
mov
subl
or
add
cli
sbbb
pop
hlt
data16
push
je
shlb
push
ljmp
and
sarb
shrb
dec
cmpsb
mov
mov
dec
add
adc
aam
enterw
scas
mov
test
inc
lss
jnp
jle
mov
cmp
dec
aaa
sbbb
and
mov
icebp
push
add
fwait
lods
addl
add
cmpsb
push
js
lea
sahf
mov
adc
and
push
insl
test
test
push
add
add
jp
xchg
jle
mov
js
bound
push
dec
loope
fs
xor
mov
mov
insb
movsb
pop
iret
jmp
fisttpll
inc
mov
into
jbe
bound
movsl
into
nop
je
add
les
shrb
iret
lret
push
inc
mov
cmpsb
inc
push
mov
mov
lods
es
shl
and
cmp
hlt
ds
lar
and
sub
mov
scas
inc
loop
jp
insl
mov
inc
xchg
jbe
cmp
xlat
dec
subl
or
scas
mov
jo
jl
insb
mov
dec
les
push
cmp
faddl
pop
ja
add
imul
pop
push
ljmp
mov
dec
dec
and
dec
jo
jns
imul
push
push
filds
xchg
jge
sbb
cs
pop
shlb
push
movsb
pusha
aad
dec
inc
je
sbb
int3
js
adc
add
outsb
push
cmpl
push
pushf
pop
cs
mov
xlat
lock
clc
les
push
dec
hlt
push
mov
int
add
push
mov
mov
adc
mov
mov
xchg
jo
test
call
enter
xor
adc
shl
movsl
cmpl
aam
or
pop
je
dec
mov
mov
aas
mov
inc
ret
add
mov
add
pusha
lds
mov
and
pop
popf
mov
push
loope
rorb
push
xchg
insl
notb
pop
lret
dec
pop
je
add
fidivs
cli
scas
push
fwait
scas
fistps
mov
iret
push
push
andb
jbe
in
push
adc
push
xor
push
push
mov
outsb
in
mov
add
lret
xor
dec
sub
or
imul
jne
xchg
jl
roll
or
mov
adc
ljmp
ljmp
inc
pop
rcll
adc
popf
or
sub
dec
cmp
cmp
ds
or
test
mov
pop
xchg
and
inc
das
inc
cmp
js
fs
and
divb
imul
fs
inc
test
pop
dec
xchg
fsubrl
and
aas
fadd
mov
xchg
xchg
shlb
shrb
fs
sub
mov
push
mull
sti
insb
ljmp
add
pop
cmp
push
popa
in
testb
inc
jae
push
pop
and
or
mov
add
mov
fiaddl
rorb
pop
mov
icebp
pop
mov
loop
movsb
sub
clc
and
xchg
pop
arpl
add
mov
sbb
scas
jp
add
jmp
sbb
cmpsb
sub
cmpsb
lret
pop
sub
pop
pushf
test
inc
fdivp
out
in
push
mov
add
sub
inc
lret
je
pop
push
and
push
sub
daa
inc
scas
pop
xchg
pop
jmp
cmp
jmp
arpl
clc
xorb
test
iret
inc
dec
pop
jle
ds
out
test
dec
data16
stos
cmp
push
mov
push
arpl
jb
push
push
rorb
enter
inc
and
imul
xchg
push
or
pop
sbb
cmpb
xchg
or
shll
data16
fs
and
ds
clc
mov
shrd
sbb
sbb
es
pop
cmpsl
pop
pop
aas
mov
or
xchg
test
add
loop
orb
push
adc
dec
mov
aaa
mov
out
push
add
inc
push
je
jge
cmc
add
les
orb
sbb
cmp
mov
sbb
or
stos
cli
jmp
inc
jb
sbb
or
js
mov
add
add
xchg
xor
inc
sub
mov
dec
js
jle
jmp
mov
xor
fwait
mov
scas
aad
sbb
mov
add
insb
dec
add
inc
into
jne
in
xchg
add
repnz
mov
add
mov
das
add
sbbl
js
test
push
loopne
jno
les
jle
lcall
int
dec
or
push
sbb
and
inc
cli
or
push
jnp
mov
or
repnz
lock
call
cmpsb
add
jp
cmc
inc
hlt
or
adc
popa
lea
add
loope
add
addb
scas
ret
push
push
mov
test
inc
roll
cmp
and
inc
xor
xchg
xchg
push
push
icebp
in
inc
dec
or
rorb
add
sub
jnp
loopne
push
mov
js
push
mov
pop
adc
enter
sbb
xchg
push
cmc
mov
sub
mov
mov
jae
pop
es
adc
adcl
smsw
xchg
in
ljmp
or
sbb
test
or
and
xchg
cmp
inc
push
jne
or
push
push
sbb
lret
add
jle
pop
dec
jp
pop
adc
enter
ss
movsb
jne
addr16
adc
and
add
inc
movsl
movsl
lcall
xor
fadd
aam
cwtl
sub
add
or
dec
dec
dec
push
mov
push
mov
xor
add
daa
sub
ficomps
or
cmp
in
int
ljmp
int
add
jbe
loope
inc
js
sbb
push
test
fimull
add
push
rcr
orl
and
mov
imul
xor
push
push
add
mov
and
and
sbb
nop
scas
cld
notb
pop
adc
pop
inc
aas
sahf
mov
jl
xchg
cmp
cli
out
add
mov
inc
repz
mov
aas
test
adc
add
cltd
jbe
dec
jbe
loope
outsb
inc
daa
mov
push
ret
loop
push
mov
push
ret
ss
pusha
shll
add
lock
jne
mov
adc
or
in
cmp
xor
dec
xchg
into
mov
add
insb
mov
cmp
in
push
movsl
inc
test
dec
repnz
adc
movb
imul
push
loope
dec
pop
popa
imul
adc
frstor
pop
push
jnp
cmpsb
nop
sahf
cli
outsl
sub
movsb
icebp
dec
jnp
xchg
sbb
call
mov
pop
dec
shl
mov
xor
lret
add
jp
lcall
xor
cmp
aam
sbb
pop
dec
xchg
out
pusha
xor
pop
loopne
sub
mov
xor
jle
jbe
cmp
push
je
and
add
push
jle
aam
imul
inc
dec
sbb
mov
fcompl
xor
lret
ljmp
aam
insb
dec
scas
cmp
cmpsl
mov
and
adc
pop
mov
dec
mov
and
mov
into
sahf
les
jl
nop
aaa
vfmsubpd
cli
mov
pop
and
mov
push
fs
sub
dec
stos
dec
adc
loope
mov
dec
add
adc
push
fwait
xchg
in
ljmp
popa
test
test
fdivrl
adc
xor
push
mov
addb
fmuls
mov
xlat
adc
jbe
push
mov
repnz
xchg
mov
jl
inc
pop
hlt
out
jl
in
je
cmp
push
adc
pop
jbe
xor
sbb
das
or
push
jecxz
push
mov
dec
jl
mov
xor
pop
pop
or
add
repnz
inc
loopne
push
insb
hlt
jmp
movsb
lods
xchg
pop
mov
popa
xchg
cwtl
stos
dec
test
pop
inc
je
test
lds
inc
orb
xchg
mov
pop
or
rcl
fs
or
addb
mov
dec
lods
xor
xor
fisttpl
mov
addb
addr16
push
mov
int3
jbe
dec
stc
sahf
sub
xchg
hlt
xor
in
fcoml
sahf
bound
call
dec
inc
pop
sub
adc
lods
dec
stos
sahf
mov
sub
cmp
lret
mov
jo
lods
add
ficoml
cmp
adc
jge
mov
lret
push
fld
lcall
cwtl
sub
jb
scas
lcall
pop
cs
mov
adc
lcall
push
sbb
rcrl
hlt
inc
inc
out
xlat
mov
int3
xchg
mov
add
xchg
pop
pop
dec
cli
mov
cs
jl
mov
xchg
aad
test
adc
mov
sub
push
gs
and
mov
push
xchg
xor
inc
xchg
test
or
or
jne
jae
pop
or
cmpsb
fisubl
int
lods
xchg
fmull
mov
xor
test
and
dec
nop
mov
lret
pop
add
lcall
sub
mov
pop
dec
push
and
mov
adc
fdivrl
add
movsl
push
cmpsb
and
ret
test
movsb
jmp
clc
lock
push
in
pop
rolb
loop
es
pop
push
decb
das
mov
mov
outsl
cmp
pop
fnstenv
lods
push
push
sbb
jo
or
loopne
mov
xchg
sbbb
adc
and
mov
roll
xchg
or
cmp
scas
ss
mov
mov
jp
cs
subl
les
sbb
ds
jae
popa
lcall
sbb
jl
cwtl
lret
adc
jbe
add
inc
pop
mov
and
sbbb
mov
or
xor
adc
addb
xchg
xchg
jp
clc
mov
and
or
pop
and
lods
add
mov
sub
flds
lock
mov
xorl
clc
ret
and
add
int3
sub
jne
lods
add
pop
dec
out
in
leave
push
mov
cwtl
mov
add
cli
or
pop
icebp
lods
xchg
in
xchg
sbb
mov
daa
mov
call
inc
hlt
adc
mov
les
mov
mov
adc
xchg
mov
cmpsb
call
andnps
pop
clc
cmpsb
mov
bound
call
mov
loope
aad
mov
xor
mov
push
popl
aas
inc
lods
xor
test
std
xor
fdivs
xor
jl
ret
fmuls
js
xor
or
mov
in
sahf
xchg
jp
inc
adc
cmp
push
mov
jnp
fstps
lods
add
add
cmpl
pop
adc
test
addr16
fldcw
adc
add
stos
inc
push
inc
loop
sub
jecxz
add
mov
pop
lidtl
push
nop
or
adc
pop
pusha
mov
cli
dec
mov
pop
xor
sub
lcall
pop
int
jbe
into
or
lcall
jl
push
add
les
sub
or
and
pop
cmp
xchg
lret
sub
fcoms
mov
in
mov
inc
in
push
cmp
xor
mov
inc
repnz
xchg
mov
mov
faddl
sbb
dec
popa
inc
mov
std
aad
mov
rorb
mov
imul
int3
bnd
cs
inc
pop
lock
inc
lock
cmp
dec
cmp
mov
dec
adc
loopne
add
inc
pop
mov
mov
xchg
cmp
cmpb
or
out
mov
push
repz
mov
jl
push
pushf
add
xor
gs
bound
push
test
inc
mov
xor
mov
adc
mov
ss
clc
scas
mov
mov
add
shl
xor
cmc
adc
in
xchg
jl
mov
rolb
movsl
andl
adc
cli
pop
sbb
popa
sbb
nop
rclb
outsl
nop
ljmp
jle
sub
xchg
adc
or
jns
pop
jo
insb
mov
cld
mov
cltd
rclb
imul
cmp
add
sbb
test
mov
and
push
adc
sbb
fs
cli
out
in
jge
rorb
pop
push
shrb
pop
aas
mov
in
call
clc
insl
mov
popa
test
xchg
aam
xor
sbbl
sti
pop
test
pop
out
mov
fdiv
dec
call
repnz
bound
hlt
push
cmp
dec
enter
call
push
es
xorb
pop
mov
loop
adc
inc
push
dec
adc
insb
gs
arpl
cmp
add
rol
cmp
push
cli
or
pop
mov
loop
imul
add
mov
outsb
out
cmp
test
js
mov
lock
xor
fsqrt
mov
cmp
scas
sub
mov
jb
xchg
or
outsl
mov
adc
and
mov
int
fisttpll
mov
pop
in
les
popa
shll
iret
push
stos
mov
stos
mov
int
mov
les
je
repz
mov
mov
jb
ficompl
mov
enter
inc
xchg
push
loopne
inc
imul
pop
mov
pop
xor
sub
push
lock
cld
rcrl
xor
add
mov
and
dec
or
mov
shlb
fadd
xor
sbb
es
mov
xor
sar
out
sbb
mov
or
inc
push
addb
call
push
sub
sbb
out
sbbb
xchg
xchg
xchg
fidivrs
inc
cli
pop
dec
jecxz
xor
ds
add
fsubs
push
shll
cltd
push
xor
dec
call
dec
insb
sub
push
jo
sub
sbb
and
add
push
add
push
push
mov
sub
push
dec
push
es
pop
xchg
mov
cmp
xchg
ljmp
add
sub
adc
js
add
ljmp
add
enter
aas
and
push
enter
mov
mov
in
lcall
cwtl
addr16
xor
icebp
dec
jecxz
sbb
inc
xchg
push
or
lret
and
cmpsb
into
mov
aam
mov
pushf
xchg
xchg
lock
fmuls
mov
les
clc
dec
loope
and
and
andb
dec
lea
push
push
mov
mov
lahf
outsl
mov
or
jle
jno
loope
int3
pop
and
test
add
cmpsb
int
cmp
mov
icebp
insl
insb
cmp
pop
loopne
dec
shlb
jle
xchg
pop
addr16
sti
push
inc
addl
and
lods
sub
aad
sahf
ljmp
lock
dec
adc
cwtl
xor
fildl
cli
nop
adc
xchg
add
stos
bnd
mov
gs
adc
inc
loopne
xor
jl
movsl
testb
fisubs
cmpsb
fiaddl
or
test
xor
jl
test
push
lcall
or
adc
and
in
fldl2e
ljmp
outsb
add
je
dec
jp
jecxz
mov
mov
aam
inc
insb
adc
sub
xchg
cmp
push
in
or
rcll
sahf
cld
les
ljmp
mov
out
imul
and
mov
xlat
adc
pop
mov
test
or
insb
clc
fadd
push
test
pop
insb
and
imul
pop
xchg
sub
dec
jle
and
pop
fsubrs
adc
sbb
repz
pop
adcl
or
and
fs
hlt
pushf
cli
and
push
sbbl
xor
mov
dec
insl
inc
rcrb
fiaddl
call
xchg
incl
xor
rclb
mov
or
fisubl
pop
push
les
mov
or
jle
popw
out
dec
xor
gs
sub
lods
filds
mov
in
push
xchg
movsb
inc
jnp
xchg
add
ja
mov
cli
call
adcb
popa
mov
pop
pop
dec
and
xlat
mov
inc
push
inc
cmc
lcall
in
push
in
cld
aam
dec
push
insb
dec
movsb
and
sbb
mov
sahf
push
loop
mov
fs
daa
cmp
adc
or
or
jl
pop
xor
nopl
adc
add
pop
sti
dec
jl
sahf
inc
cmp
je
pushaw
fmull
adc
add
test
jge
lcall
and
cwtl
push
lea
push
jp
cli
test
push
lods
int3
pop
pop
ss
call
test
jecxz
cmpsb
pop
gs
sti
pop
outsb
mov
add
cmp
or
icebp
sbb
lods
inc
or
nop
dec
push
pop
or
add
push
and
test
xor
cmp
pop
jbe
adc
push
mov
cs
mov
dec
mov
test
mov
adc
sbb
push
fdivr
leave
pop
sbb
cli
jp
icebp
shr
mov
push
mov
fcomps
fcmovb
lahf
call
push
inc
pop
dec
or
mov
shl
push
movsl
and
int
mov
dec
xchg
xchg
lret
int
bound
or
cs
sahf
inc
insl
sahf
out
test
pop
inc
lea
in
pop
outsb
ret
mov
cmp
adcl
xchg
decb
pop
loope
sbb
sub
cmp
aam
or
pusha
mov
in
xor
movsb
add
push
roll
push
push
das
add
cltd
mov
insb
xor
lock
imul
nopl
pusha
ds
mov
test
loopne
fs
inc
lret
add
mov
cmpsb
out
inc
sti
into
lret
aam
sbbl
push
or
push
mov
mov
test
pop
adc
test
adc
inc
ret
sub
pop
stos
in
mov
mov
and
inc
inc
or
ljmp
ficompl
daa
add
xchg
shr
jne
mov
inc
es
jb
xor
sti
fidivrl
jbe
jo
mov
mov
xor
xchg
inc
xor
add
push
mov
rclb
mov
mov
dec
cmp
inc
add
jae
add
push
pusha
inc
scas
pop
xor
jl
xorb
in
mov
or
xchg
pop
fwait
or
push
out
out
xor
add
mov
push
jbe
fdivl
inc
inc
inc
xor
out
xorl
cmp
inc
js
push
stos
movb
push
and
decb
lret
xchg
jnp
ret
cmpb
adc
dec
lds
xchg
mov
push
loopne,pn
pop
mov
mov
push
add
cmpsb
inc
xchg
jno
mov
jp
icebp
sub
cli
push
sub
cmp
icebp
fdivrs
inc
in
int3
fimull
mov
pop
dec
mov
ljmp
mov
add
imul
and
add
lods
hlt
dec
fadds
mov
and
push
adc
nop
imul
fadds
ss
mov
jbe
jecxz
pusha
adc
or
mov
jne
add
loopne
add
push
push
jne
lods
pop
adc
mov
test
push
and
lcall
push
push
cs
push
mov
jl
push
inc
xchg
decb
shlb
es
or
sub
insb
adc
xor
out
mov
mov
push
add
pop
imul
sbb
loopne
mov
adcl
fsub
mov
bound
mov
jno
test
sbb
or
or
add
stos
and
adc
cmpsb
mov
mov
movsb
lock
sub
dec
loopne
cmpl
add
dec
hlt
cmp
insb
loope
sub
and
sub
push
icebp
dec
mov
push
pop
jb
and
mov
mov
xor
jne,pn
cmpsb
sbb
mov
int3
jbe
mov
inc
mov
icebp
cmpb
or
sahf
ja
aam
or
cmpsb
cwtl
cmp
insb
push
rorb
rcr
mov
pop
mov
idivl
or
inc
push
rclb
adc
add
loop
pusha
push
divb
jp
cld
out
adc
add
pop
and
stos
jnp
or
enter
cmc
movsb
insb
mov
add
sahf
mov
sub
lods
and
pop
mov
mov
pop
xchg
ljmp
inc
or
sub
push
rcrl
add
xchg
fcompl
cs
dec
ja
jge
cmp
repnz
mov
shlb
sti
xor
and
repnz
push
pop
lock
jns
add
xchg
popa
jo
and
ficompl
or
inc
mov
jle
or
mov
std
xor
lea
sub
movsb
test
push
mov
dec
enterw
push
sarb
mov
je
and
push
mov
mov
test
inc
lock
push
dec
pop
and
mov
js
mov
cltd
mov
addr16
test
and
add
rcrb
or
pusha
mov
call
push
add
push
xor
sub
push
test
adc
lods
or
mov
mov
pop
inc
push
sub
jae
loopne
test
fwait
push
loope
mov
imul
shl
pop
push
sub
sub
mov
and
js
inc
pop
mov
jecxz
mov
dec
mov
mov
adcb
jns
cmp
push
dec
cld
xchg
mov
int3
or
or
stos
nop
and
data16
inc
mov
imul
dec
je
add
shrl
xchg
scas
test
sbb
mov
cmp
fs
mov
jb
je
pusha
mov
mov
cmp
xor
testb
jo
into
insb
cmp
dec
lcall
jnp
xchg
cmp
stos
inc
adc
mov
push
or
pop
popa
rclb
push
in
dec
aas
test
orb
fwait
push
mov
push
pop
mov
imul
rcrl
push
ss
ss
or
test
shrb
sti
fs
stos
push
jle
cli
rorb
sbb
setl
ljmp
in
adc
push
adc
scas
sbb
push
add
xor
arpl
push
fs
add
insl
sbb
scas
jbe
jmp
push
push
or
scas
mov
sbb
ret
mov
jle
or
sub
mov
cmp
add
icebp
mov
pop
mov
push
push
test
inc
aam
js
add
loopne
ds
ja
push
sahf
fcmovu
cmp
inc
mov
push
std
add
pop
adc
xchg
lcall
rcr
add
mov
jns
inc
lea
push
dec
mulps
data16
js
xor
aam
hlt
pop
mov
add
push
xchg
loopne
jp
ljmp
adc
cli
push
js
mov
mov
data16
imul
jo
and
xchg
lock
js
cmc
mulb
pop
loope
daa
mov
test
lcall
push
cmp
push
and
or
aam
incb
mov
and
mov
fwait
in
mov
lods
stos
cmpsb
int
scas
mov
insb
aas
dec
jne
in
adc
pop
scas
adc
rclb
push
push
fdivl
or
jo
fiaddl
mov
mov
out
int3
mov
bound
mov
push
mov
aad
and
daa
push
add
mov
int
lcall
xchg
push
mov
and
fcomp
xchg
enter
dec
insb
faddp
dec
jbe
jo
pop
scas
inc
and
movsl
push
and
ret
or
outsl
int3
les
mov
sbb
cli
inc
sub
testb
push
loop
push
inc
push
sub
or
ss
adc
int3
cmpsb
xchg
add
add
mov
jno
lods
rcl
cmpsb
sbb
loopne
hlt
push
inc
sarl
fldt
sbb
imul
mov
das
shlb
xchg
cmp
inc
inc
add
rolb
jge
push
adc
adc
in
xor
xor
imul
cmpb
loop
xor
and
ss
cmp
sub
fmull
js
ss
mov
xchg
xor
sub
jae
lods
jge
pop
fcoms
mov
insl
dec
or
adc
cli
and
faddl
stc
sahf
inc
mov
push
push
ja
cmp
or
jp
arpl
mov
loopne
mov
repnz
or
fiaddl
jb
or
stos
pop
sbb
push
add
jle
push
mov
out
shlb
dec
rorl
jge
dec
aam
pop
testb
lods
dec
mov
in
push
nop
push
dec
and
adcl
dec
fs
jbe
cmpb
stos
push
sbb
or
test
dec
jl
clc
int3
or
dec
add
movsl
xchg
xor
and
shlb
rcrl
sbb
shlb
fiaddl
inc
push
andl
scas
and
and
bound
shll
xchg
inc
lahf
push
stos
cwtl
movsb
cli
cmp
mov
inc
mov
call
or
das
or
jnp
shrb
mov
addl
mov
mov
pop
sub
insl
push
inc
inc
adc
push
adc
sar
fdivr
and
test
push
jbe
sub
xor
stos
movsb
adc
lcall
jg
mov
pop
inc
push
mov
push
inc
notb
je
mov
xchg
sub
xchg
mov
pop
add
jg
or
sub
push
and
out
dec
faddp
push
xchg
rclb
enter
push
fcomps
mov
sbb
pop
or
mov
pusha
jp
jmp
mov
outsb
daa
adc
nop
sahf
cli
test
add
mov
pop
movsl
sarb
lock
sub
movsb
stc
jbe
inc
xchg
fmulp
and
subl
mov
shl
fs
push
icebp
or
dec
pusha
scas
or
fisubs
orl
or
ret
cmp
add
or
sbb
mov
jae
or
test
lock
jge
insl
mov
xlat
inc
popa
imul
mov
rcll
pop
jp
movntps
loop
shrd
cmp
cmp
push
add
or
data16
sub
rcrb
das
push
mov
sbb
mov
inc
ret
mov
data16
or
icebp
xchg
addb
mov
addr16
imul
out
cs
xchg
sub
mov
xor
dec
pusha
dec
mov
add
jg
inc
xor
adc
into
pop
stos
pop
cmp
jp
shl
inc
push
push
sbbb
xor
leave
inc
xchg
cmp
mov
in
scas
sub
mov
adc
rcrb
adc
add
and
sbb
adc
inc
push
in
clc
pop
int
les
adc
cmp
outsl
stos
sbb
negl
or
or
push
push
sub
ljmp
add
xlat
adc
pop
aaa
data16
aam
add
mov
lcall
shlb
sbb
inc
ret
mov
das
pop
xor
push
addb
adc
mov
lock
ficoms
test
cmpsb
xchg
xor
mov
or
sub
push
pop
dec
push
out
pop
push
push
into
cmp
cmc
inc
pop
stc
adc
add
ret
ljmp
dec
fwait
push
and
add
cmpsb
test
hlt
sub
mov
add
cmp
or
dec
adc
fldl2e
clc
xor
ss
sbb
lcall
mov
lret
jle
or
lods
mov
shlb
hlt
and
cmovno
gs
dec
mov
jbe
adc
cwtl
pop
add
adc
mov
int
xor
aaa
insb
dec
test
xor
and
addps
outsb
scas
cwtl
xor
pop
ret
push
test
sub
xchg
push
and
lahf
dec
lods
inc
test
dec
loop
add
ret
rcrb
movsl
test
mov
push
insb
pusha
orl
stos
mov
loopne
pop
or
push
rorl
or
jle
enter
xor
pop
or
ret
rorb
pop
dec
mov
xchg
push
fwait
cli
push
push
test
out
icebp
or
xchg
outsl
int
pop
aaa
pop
pop
imulb
xchg
mov
enter
pop
xchg
xchg
dec
lcall
push
cmp
mov
xchg
adc
push
pop
and
adc
sbbl
mov
mov
enter
lcall
jns
push
roll
adc
sub
adc
roll
sub
mov
mov
arpl
pusha
add
stos
push
outsb
add
lcall
jl
sbb
mov
bound
mov
mov
xchg
or
int3
dec
cmp
in
dec
rclb
and
mov
ljmp
stc
adc
test
or
mov
ss
mov
lcall
push
sub
push
pop
and
inc
js
addl
mov
into
cltd
sbb
sub
aaa
mov
flds
sub
and
mov
or
fwait
and
ja
push
xchg
add
push
mov
sbb
xchg
lock
xor
mov
or
call
leave
adc
pop
rcrb
xchg
jge
and
lcall
out
hlt
leave
push
cmpsb
xchg
xlat
mov
pop
inc
int3
popa
mov
mov
loop
mov
int
rorl
push
sub
popa
insb
mov
adc
dec
call
or
out
imul
lahf
jbe
mov
sub
xchg
mov
stc
push
sarl
loop
mov
inc
mov
rclb
mov
lods
or
vmovsd
imul
pop
in
inc
icebp
dec
js
push
and
cmp
add
mov
xchg
das
adc
dec
xchg
sbb
mov
xor
out
push
jp
xchg
mov
xor
scas
pop
pop
mov
add
xchg
inc
je
add
and
jnp
push
rcrb
in
add
je
jp
or
sar
lea
push
and
push
or
lea
pushf
mov
inc
cwtl
and
xor
sbb
jmp
mov
ficomps
add
mov
jge
cmpb
add
scas
inc
inc
fwait
adc
xchg
aas
dec
mov
das
fsubrs
lods
orl
mov
aad
cwtl
lock
les
bound
out
mov
mov
clc
scas
repz
inc
loopne
rcrb
sbb
inc
xchg
pop
and
mov
sbb
cmpsb
mov
pop
lcall
imul
push
out
sarl
xchg
fiaddl
mov
nop
subb
push
popf
xor
js
adc
xchg
pop
cli
add
ficompl
cmp
test
sbb
fcoms
fwait
or
nop
or
rorb
pop
pop
lcall
sbb
ljmp
pop
jle
xchg
andb
cld
adc
sub
mov
and
jb
hlt
sbb
push
sbb
pop
sub
pusha
dec
sbb
jbe
mov
cld
mov
sbb
negb
sub
lods
js
push
pop
xchg
xadd
xchg
cli
add
sub
dec
bound
cs
movsl
add
sbb
push
call
ret
push
inc
mov
mov
adc
mov
mov
nop
push
jb
cmovl
sbb
sub
xchg
mov
sub
xor
mov
push
insb
cmp
pop
pop
adc
jp
add
into
mov
add
lcall
mov
sbb
sar
push
clc
inc
test
mov
gs
inc
and
mov
or
out
fmuls
mov
jno
mov
jp
lock
inc
mov
push
ljmp
push
sub
inc
mov
mov
push
xchg
cs
jecxz
mov
movsl
cmpsb
add
les
cmp
shlb
jl
out
adc
push
mov
stc
jecxz
rorb
add
test
pushf
push
pop
mov
rclb
jbe
imul
int
mov
hlt
mov
mov
xor
and
pop
mov
inc
pop
aam
dec
test
shl
xchg
sbb
fstpl
add
fs
jle
push
cmp
inc
add
adc
and
pop
out
movsb
inc
mov
orb
jmp
adc
pop
pop
test
dec
rorl
ss
xchg
mov
or
orb
add
mov
cmp
or
shlb
push
inc
inc
sti
test
gs
stc
push
popa
mov
aam
mov
push
aad
loopne
mov
out
sbb
rolb
inc
aad
test
dec
cld
push
pop
xor
rolb
movsb
outsl
bswap
cmp
scas
or
sbb
push
mov
ds
repnz
fidivrs
arpl
fisubl
push
shlb
sbb
sbb
ljmp
dec
add
push
insb
push
sub
or
jb
lea
in
and
push
test
sub
mov
mov
cmp
cmp
arpl
push
fdivrs
push
insb
mov
ret
jp
decb
adc
rorb
call
outsl
call
push
add
pop
mov
mulb
das
mov
add
xchg
lock
adc
aaa
and
ss
jecxz
cmp
out
adc
pop
xchg
jo
push
int3
mov
es
pusha
pop
mov
xchg
mov
pop
popf
and
mov
xchg
popf
es
xor
nop
mov
pop
inc
in
sub
mov
les
or
sub
xchg
cmc
fld
sbb
adc
das
push
cmp
pop
and
add
pushf
adc
dec
sub
enter
enter
lods
xchg
daa
inc
sbb
dec
aas
clc
and
xor
add
mov
stos
jne
scas
test
sar
loop
or
xor
add
inc
in
add
insb
mov
jl
inc
and
test
dec
sub
inc
loop
push
cld
push
and
fistpll
leave
pop
cmp
into
jge
add
addr16
int
insb
dec
mov
xorb
scas
inc
jbe
shlb
je
clc
push
add
hlt
gs
pushf
test
cmp
adc
inc
nop
fsubl
mov
xor
sub
cltd
sub
iret
bound
lret
push
mov
sbb
dec
mov
cltd
adc
add
and
push
iret
cwtl
mov
je
imul
mov
jbe
insl
loop
and
xor
aas
mov
xchg
dec
stos
aaa
or
inc
xor
inc
ljmp
push
inc
mov
dec
sbb
mov
jp
push
loopne
lret
in
mov
insl
movsb
xchg
negl
inc
push
pop
call
fwait
adc
push
xchg
fiaddl
pop
xchg
nop
jbe
jo
push
lock
mov
jo
cmpsb
adc
nop
dec
in
push
push
sbb
rcrb
imul
xchg
add
xor
add
push
inc
xor
xchg
mov
sbb
ljmp
pop
rorb
ret
adc
sub
clc
adc
mov
xchg
sbb
pop
or
aam
ljmp
push
in
roll
sbb
lcall
sub
aam
or
push
add
mov
push
hlt
popa
lods
std
inc
call
cmpb
push
mov
leave
mov
inc
inc
call
xor
and
push
cmpsb
test
outsl
inc
stos
insb
cld
push
sbb
cmpsl
cmpsb
mov
es
sbb
add
insb
dec
adc
lret
mov
lcall
xchg
lods
fnsave
sbb
adc
inc
push
nop
adc
and
cs
clc
mov
cld
cmpl
test
sbb
add
dec
sub
outsb
aam
inc
sub
bound
mov
movb
bound
insb
out
ret
and
xchg
or
hlt
xchg
jl
ret
inc
jg
adc
adc
cmp
cvtps2pd
mov
mov
repz
xchg
mov
xchg
add
movsb
mov
gs
push
ret
mov
stos
sub
or
push
cmp
sbb
add
add
int3
test
jmp
outsb
pop
pop
das
add
xchg
mov
cmp
movsb
push
movb
cltd
outsl
out
pop
adcb
or
aaa
and
xchg
mov
sub
lret
sbbl
insb
aad
shrb
jg
loopne
aas
xor
faddp
out
jne
test
push
shlb
lret
sbb
test
cmp
gs
xor
mov
xor
dec
mov
xchg
lods
jbe
mov
mov
and
clc
mov
ret
lock
mov
push
mov
add
daa
push
sbb
je
push
or
lods
sti
into
jmp
push
scas
movsb
dec
into
xchg
shlb
in
inc
and
mov
inc
bound
pop
sbb
in
push
es
inc
jp
test
and
push
jp
push
and
jno
jnp
mov
push
push
inc
je
adc
in
shrl
sbb
adc
push
pop
call
lods
sbb
mov
fbld
inc
in
or
mov
mov
arpl
sub
sub
mov
dec
xor
lcall
push
adc
lock
ja
and
mov
rcrb
loope
pop
negl
ret
test
pop
lcall
fstpt
mov
inc
push
dec
add
adc
call
mov
aas
xchg
je
push
lods
or
sahf
mov
dec
adc
addl
lea
adc
pop
pop
mov
and
xchg
pusha
sbb
pushf
push
inc
sub
push
fwait
cld
sub
les
mov
add
inc
mov
scas
sub
xchg
cmp
test
push
xchg
jle
mov
add
into
mov
insl
dec
xor
mov
ret
cli
or
pop
sbbl
cs
add
push
rcrb
movsl
xchg
inc
mov
sub
std
mov
push
sti
dec
add
mov
push
ret
jnp
fdivs
add
adc
mov
loopne
jle
fcompp
hlt
push
and
add
cs
sbb
push
aam
push
mov
shlb
xor
cmp
mov
cmc
sbb
int3
mov
imul
jbe
xor
pop
jg
fcomp
dec
fmuls
push
ss
insl
aad
into
data16
cli
shlb
into
movsb
aam
sbb
cmp
mov
loope
inc
pop
sahf
sbb
fiaddl
or
sahf
cs
sbb
and
rcrb
mov
lods
fcompl
call
aaa
adcl
test
outsb
add
rorb
inc
inc
cmp
std
mov
ret
repnz
sub
pop
push
lock
mov
pop
roll
movsb
mov
fcomps
xchg
cmpsb
pop
fisttpl
pop
mov
dec
mov
insb
mov
cmpsb
and
jp
ret
fcoml
sbb
jne
cmc
cmc
adc
add
sahf
add
adc
sbb
pop
sbb
fdivrs
insb
push
rcll
mov
sbb
push
out
lea
lea
mov
sub
scas
dec
loopne
push
jbe
mov
out
jl
add
pop
out
dec
imul
or
cs
sub
cmc
xor
in
aas
mov
loope
shlb
rolb
sbb
aam
add
adc
sbb
pop
ret
cld
gs
and
pop
cli
jbe
adc
loop
fadds
or
pop
in
mov
push
insb
jmp
int3
adc
pop
adc
les
cmovs
pop
sbbb
iret
mov
xchg
and
mov
mov
icebp
add
xor
xor
shlb
push
add
neg
enter
repnz
sahf
sub
subl
mov
mov
dec
mov
das
aam
out
cli
sub
xchg
enter
or
dec
push
push
push
imul
sub
enter
inc
xor
adc
ds
insb
push
and
and
push
or
fcoms
mov
jo
movsl
movsl
push
insb
mov
stos
lods
lods
loopne
pusha
in
and
hlt
repnz
push
shrb
pushf
inc
andb
and
xor
mov
mov
faddl
xor
hlt
gs
dec
push
cmpb
push
fmuls
dec
adc
cs
test
sub
lea
push
push
mov
xchg
aam
inc
cwtl
or
popf
je
sbbl
stos
mov
shll
cs
push
pop
shlb
test
pop
pop
stos
into
cs
ss
lods
and
sbb
inc
pop
xchg
clc
dec
inc
insl
jle
cli
or
clc
ss
in
xchg
mov
test
notb
lcall
pusha
jno
push
stos
cmp
sbb
andl
in
out
push
mov
mov
sahf
add
inc
mov
jo
adc
cmp
movsb
lcall
jl
adc
mov
inc
pop
sti
aas
xchg
pusha
mov
jecxz
fsubr
lret
lods
loopne
inc
adc
sbb
dec
push
in
add
out
adc
add
test
and
std
stos
mov
xor
daa
and
fwait
mov
jbe
addb
mov
or
cmp
ficomps
dec
inc
mov
fsts
adc
add
inc
fistl
inc
inc
jl
fldl
cwtl
mov
insb
mov
push
push
shlb
mov
push
enter
mov
jp
lea
inc
mov
add
sub
cltd
fisubl
adc
jbe
cmp
dec
movsb
jle
sub
pop
popf
or
and
push
daa
in
nop
push
cmp
andb
xchg
and
and
lds
and
addr16
xlat
add
sbb
push
dec
fimuls
or
add
mov
adc
inc
sbb
ss
js
pusha
std
mov
xchg
jo
int3
cmp
cli
add
mov
rolb
add
push
mov
mov
xor
sub
jg
xchg
rcrb
ljmp
fimull
test
iret
lock
fcom
and
xor
das
or
and
adc
xchg
jle
stos
adc
jnp
mov
adc
sub
and
add
inc
enter
push
xor
cmpl
lds
fcoms
pop
popa
push
inc
loop
addl
hlt
ljmp
mov
cmpsb
ret
cmpsb
add
pop
xchg
je
lods
push
andl
test
xor
xchg
push
dec
shrb
jle
fwait
sbb
inc
or
lcall
lods
subb
mov
adc
cmp
xor
dec
sub
cmc
lret
sarl
mov
rorl
pop
pop
mov
xor
add
pop
lahf
and
mov
je
jno
data16
cli
out
mov
cld
es
xchg
mov
fs
add
mov
xor
cmp
cmp
inc
sub
adc
pop
push
bound
cmp
sbb
test
ret
or
xor
pop
mov
mov
push
xchg
inc
ja
out
ljmp
out
inc
int3
out
sub
xchg
pop
test
pushf
and
push
inc
sbb
hlt
push
nop
push
popl
shlb
outsl
or
mov
push
lods
inc
push
fdivl
in
pop
bound
sub
ss
mov
xchg
xor
cltd
je
stos
mov
loopne
and
xchg
mov
stos
fidivrl
ds
movsb
cli
sahf
inc
xor
mov
popa
and
inc
jecxz
or
cmp
mov
addr16
or
es
push
mov
jae
adc
clc
and
dec
pusha
inc
pop
in
out
cmp
test
ds
ljmp
das
aam
ret
orl
cmp
jl
mov
shl
imul
add
hlt
mov
test
add
or
andb
cmpb
push
push
cmp
decb
pusha
fcmovb
adc
pushf
jmp
out
push
xor
or
cmp
push
lods
xor
mov
lock
shlb
push
push
lods
rorb
jne
clc
mov
cmpb
inc
and
daa
ljmp
fdivs
test
inc
xchg
jle
aam
cli
and
addr16
addb
and
xchg
test
jmp
fiaddl
jl
nop
xor
xor
mov
jns
inc
das
add
lea
gs
out
sbb
add
jbe
cmp
and
std
mov
xor
sarl
mov
out
xor
push
adc
test
cmpsb
sbb
inc
dec
adc
lods
je
and
lcall
ss
bound
inc
rcrb
and
mov
dec
mov
sub
jge
push
xor
lods
push
adc
pop
cmovge
stos
adc
inc
mov
outsl
fimuls
add
jmp
imul
fcomps
push
imul
out
popa
push
insl
jle
ljmp
ja
pop
add
ljmp
and
mov
lret
lcall
add
mov
lods
push
dec
pshufw
ss
cltd
shrb
cmp
scas
mov
gs
sbb
cld
dec
pop
add
xchg
lcall
dec
mov
push
enter
inc
inc
clc
imul
add
sub
in
and
mov
xchg
sub
or
push
scas
stos
adc
inc
or
jnp
mov
aaa
mov
cmp
movb
adc
push
lock
test
scas
imulb
jl
das
cmp
inc
dec
sub
cmpb
mov
push
inc
or
pop
shl
mov
lods
popa
pop
pop
adc
popf
sbb
add
xor
and
pop
add
mov
sahf
sti
daa
push
push
inc
leave
cli
fs
je
add
sub
jmp
pop
loop
pusha
imul
jae
jne
ds
mov
inc
or
cmpsb
test
mov
jecxz
movsl
push
bound
aad
adc
mov
mov
dec
gs
xchg
and
addl
and
shrl
add
and
mov
xchg
xor
hlt
jle
or
jmp
add
cmpsb
sub
movb
addb
mov
roll
jecxz
lret
mov
lret
gs
mov
enter
test
xchg
jp
sbb
xchg
nop
adc
adc
imul
add
sub
into
int
xchg
xchg
dec
jecxz
jae
push
insb
loopne
mov
dec
xchg
mov
jnp
ljmp
push
cmpl
sub
les
pop
pop
icebp
push
dec
adc
cli
shl
cmpsl
push
adc
or
pop
fdivrl
roll
and
mov
push
cld
mov
xor
pusha
je
out
inc
rclb
cs
xor
fsubs
mov
stos
xchg
cmp
jb
mov
cmp
subb
shl
xor
jle
les
lock
popl
or
or
aad
call
or
bound
inc
inc
jnp
div
mov
dec
data16
push
or
xchg
add
add
adc
lods
pusha
inc
pop
ret
insb
push
xchg
jle
notb
inc
mov
int
and
mov
test
push
scas
bound
push
outsb
je
mov
xchg
in
xor
repnz
cli
outsb
testb
mov
ret
mov
aam
fcom
jno
sub
jle
incl
mov
cmc
enter
sub
add
insl
aam
fimuls
sbbb
lret
cmpsb
cmpb
adc
imul
add
mov
inc
jae
outsb
cli
mov
lcall
adc
in
add
and
je
pop
mov
dec
or
repnz
jmp
lods
mov
das
sbb
mov
lods
sub
adc
cmp
in
jnp
shlb
inc
and
inc
mov
scas
test
mov
sahf
add
xor
mov
lods
cli
xorb
out
test
test
inc
and
and
cmovl
dec
es
dec
in
jns
xchg
push
inc
mov
fadd
into
insb
push
ret
jo
inc
mov
push
popl
sar
jle
daa
sbb
jecxz
into
dec
cmc
mov
push
sarl
in
enter
jle
cli
stos
dec
les
aam
mov
inc
push
lcall
into
push
cli
pop
jne
pop
mov
dec
nop
andb
sbb
les
mov
pop
ja
nop
sub
ja
xlat
add
test
push
mov
loop
push
inc
fldt
mov
xlat
push
insl
ret
in
mov
inc
xchg
xchg
push
jae
in
xchg
adc
or
lcallw
or
add
sbb
shlb
lahf
fwait
insb
mov
shlb
sbb
sbb
sbb
xchg
push
lret
test
or
in
jne
pop
inc
push
cmpsl
lock
sub
cld
cs
sub
hlt
xor
xchg
cmpl
cmpb
scas
pusha
out
fidivs
dec
inc
insb
dec
ss
les
imul
pop
add
lret
js
pop
clc
enter
aam
std
sub
jns
dec
iret
andb
sar
test
pushf
aam
aas
mov
cld
push
fcoml
out
sbb
nop
xchg
fsubl
rolb
stos
incb
xchg
fisttpl
shll
fs
push
stos
movsb
push
mov
xchg
xor
inc
add
ret
fmull
cmp
orb
aam
inc
scas
rcl
mov
push
in
hlt
cld
out
dec
or
rcrb
pop
mov
popa
mov
gs
test
push
xchg
add
gs
add
push
fs
sub
pop
add
into
rcll
push
outsl
add
loopne
shrb
mov
add
or
stos
lcall
lahf
lods
sbb
adc
insb
or
sbb
push
jle
or
or
mov
pop
adc
adc
xor
push
adc
fnop
sub
xchg
call
clc
in
sub
jo
ds
sahf
hlt
adc
and
add
leave
pop
cltd
fadds
mov
in
mov
sub
inc
ljmp
movsb
ficompl
mov
and
pop
push
lock
div
cmp
out
insb
in
gs
cmp
inc
out
push
mov
adc
hlt
or
dec
lods
popf
xor
jg
dec
in
xchg
adc
sub
andb
call
insb
js
mov
popf
shufps
jmp
popa
insb
fs
push
sub
sbb
xchg
mov
in
pop
add
popa
test
pop
hlt
ret
add
fdivp
add
mov
into
orb
mov
pop
rcll
mov
adc
inc
inc
xchg
into
mov
push
push
fisttpl
jo
ds
xchg
test
lret
roll
inc
jb
jle
shrl
sub
shlb
fwait
xchg
loop
or
mov
test
and
or
movb
inc
push
divl
add
adc
dec
test
in
fucomi
lret
jl
xchg
enter
pop
call
xchg
js
les
mov
adc
cmpsb
aaa
cmp
jmp
sbb
sbb
popf
cmpsb
out
mov
mov
xchg
insb
xchg
xorl
fisubl
cmp
loop
ret
int3
popa
scas
inc
in
out
stc
addr16
or
inc
mov
cmpsl
call
push
shll
test
add
insl
sbb
and
add
jo
dec
into
sub
cmpsb
je
ljmp
in
jecxz
sub
push
js
adc
add
xor
je
xor
aam
movsb
inc
mov
push
test
in
outsb
loop
push
lods
dec
fdivl
xor
ficompl
movsb
out
add
mov
cmpsb
shrl
dec
add
inc
mov
stos
sub
stc
ds
mov
out
sbb
mov
in
mov
mov
push
insl
loope
sub
pop
loope
lods
push
push
xchg
js
mov
inc
jnp
rolb
inc
bound
bound
xor
repnz
push
enter
sub
add
roll
add
lret
scas
add
or
push
pop
add
mov
fiaddl
test
add
jbe
cltd
xor
mov
jle
inc
sub
repnz
sahf
xchg
lock
decl
push
pop
push
aaa
into
and
jns
or
xor
inc
ficompl
aam
pop
pop
scas
aad
mov
lock
cmpb
sub
out
jl
push
adcb
add
and
add
mov
mov
icebp
sbb
ret
dec
inc
push
ss
inc
shlb
xchg
cld
je
rcrb
pop
ficompl
mov
xchg
lock
push
lds
hlt
test
leave
lods
xor
dec
shlb
test
dec
add
lods
push
mov
mov
mov
ss
imulb
add
mov
call
jle
and
aam
dec
jbe
pop
int
es
jmp
xchg
cltd
sub
inc
jp
outsb
xor
push
sub
cwtl
jecxz
or
add
mov
enter
add
and
repz
cs
and
jne
nop
push
out
loopne
jle
cld
cmp
loopne
mov
loopne
mov
push
les
clc
cwtl
inc
or
mov
mov
and
mov
lcall
push
dec
mov
adcb
mov
insb
loop
lcall
add
mov
lahf
pop
hlt
call
ret
fs
pop
lods
dec
clc
test
xorl
ljmp
hlt
mov
jb
andl
cmpsl
mov
inc
outsl
orb
icebp
ret
lods
popf
loope
push
stos
mov
push
inc
test
and
outsb
add
mov
dec
in
xor
and
xor
mov
mov
subb
ficoml
lods
xchg
inc
adc
add
cmpsb
loop
aas
out
in
imul
xchg
in
daa
mov
inc
scas
or
repz
inc
sub
jp
test
pop
cwtl
jo
push
and
xchg
xchg
push
and
fidivrs
call
cmc
stos
cs
mov
cmp
lds
shlb
sbb
int3
test
ret
outsl
mov
les
incb
adc
push
push
or
gs
dec
pop
pop
push
insl
push
mov
mov
or
and
push
push
push
xor
sbb
xchg
sahf
jno
push
sub
mov
sub
rclb
int3
inc
fbld
push
sbb
adc
fildl
jo
fs
xor
mull
pop
or
stos
sti
sub
adc
loope
lock
aam
xchg
bound
dec
aad
aas
ss
push
jle
sub
lock
xor
cmpsb
insl
sbb
rcrb
insb
adc
mov
mov
xor
inc
loopne
loop
lcall
mov
xor
nop
and
add
lods
sub
pop
call
mov
jl
int
test
and
lcall
jmp
dec
adc
mov
mov
xor
push
jno
cmpsb
cmp
pop
in
xor
fdiv
or
scas
cmp
dec
sbb
pop
push
pop
add
stos
xor
adc
lcall
pop
sub
js
data16
inc
and
jo
pop
mov
les
push
xor
or
xchg
jbe
cltd
xor
out
roll
aas
lahf
test
inc
push
inc
outsb
daa
in
push
push
mov
sbb
adc
call
rolb
pop
lods
addb
divb
rolb
movsl
lock
inc
fdiv
jns
jp
pop
inc
jp
or
mov
add
lret
dec
and
add
jp
ljmp
jle
push
sbb
lods
cli
scas
push
nop
imul
js
insb
lods
cli
shrb
and
adc
test
sbb
test
es
xor
inc
lds
call
mov
adc
pusha
pop
int3
pop
pop
inc
adc
jo
fisubrl
inc
add
jle
sub
pop
add
jbe
cmpsb
xor
hlt
test
or
adc
add
pop
mov
call
inc
push
jl
xor
mov
lret
mov
loop
add
mov
sbb
mov
pusha
test
or
popa
mov
xchg
dec
push
inc
push
mov
mov
cmp
es
decb
shlb
push
mov
lock
mov
mov
mov
popa
jbe
inc
clc
inc
imul
and
mov
dec
cli
int3
movsl
dec
ljmp
push
sub
lock
push
ss
ss
xor
sahf
cmc
inc
dec
jne
jbe
test
ss
hlt
mov
sub
mov
push
adc
inc
jge
mov
fwait
add
add
or
into
jnp
mov
lock
fwait
idivb
push
dec
add
xchg
push
push
xchg
ficompl
inc
fwait
add
adc
mov
push
insl
lods
ret
sub
mov
cmc
arpl
dec
jo
push
shlb
int3
das
test
pop
movsb
xor
add
xor
sbb
mov
inc
xchg
mov
std
out
or
fwait
mov
inc
in
pop
movsb
lock
test
pusha
addl
clc
xchg
inc
jo
xor
out
dec
lcall
lods
test
mov
pop
cmpsb
jle
mov
shrb
hlt
into
lret
pusha
xchg
mov
orb
dec
add
insb
lock
pop
push
sbb
mov
pop
cmp
adc
xor
int3
mov
add
mov
scas
sub
mov
jo
lods
lods
adc
bound
pop
lods
and
add
shrb
pushf
dec
aam
inc
mov
mov
pop
js
hlt
mov
xor
and
push
dec
popl
add
rcll
mov
mov
sbb
or
push
mov
adc
push
movsb
or
xor
gs
xor
pop
aam
scas
inc
inc
push
cmp
mov
pop
xchg
push
mov
jo
pusha
mov
add
ret
and
je
inc
xchg
movsb
dec
arpl
leave
fwait
dec
add
imul
fs
test
dec
push
rorb
cmpsb
mov
inc
mov
cmp
pop
sbb
lods
mov
lret
jo
and
sahf
sbb
pusha
xchg
push
dec
mov
add
mov
and
push
data16
push
fcomps
mov
ljmp
mov
push
xchg
fdivr
test
rclb
sub
dec
mov
add
add
mov
xor
je
mov
fs
sub
mov
cmp
inc
stos
movsb
push
ficompl
dec
or
pop
sbb
jo
cmp
sbb
add
dec
or
mov
fstpl
or
cmp
pop
mov
mov
arpl
ret
loope
dec
and
aas
sub
or
xchg
dec
push
dec
arpl
mov
adc
or
js
jl
mov
cli
ss
in
jg
lds
insb
pusha
fcom
daa
loope
mov
mov
idivb
out
mov
inc
pop
test
fdivp
cli
adc
sbb
adc
push
icebp
mov
xlat
data16
mov
push
jne
cmp
dec
jp
xchg
mov
lods
dec
fs
push
mov
xor
hlt
mov
pop
lret
adc
js
stos
enter
pop
lretw
insb
sbb
add
sub
das
shrl
cmp
movb
cli
pop
adc
and
mov
rcrb
ret
and
pop
clc
inc
ret
gs
insb
call
pop
outsl
ds
aam
jge
shll
pop
pop
inc
jp
mov
dec
inc
insl
in
ret
inc
mov
dec
dec
fwait
mov
les
jb
cmp
je
and
loopne
dec
inc
lret
loop
add
xor
lods
clc
push
clc
stos
mov
inc
lods
jl
js
gs
ja
add
mov
pop
dec
pop
mov
cmp
nop
mov
sbb
fmuls
sbb
scas
in
push
stos
dec
or
out
aad
mov
test
les
mov
sbb
jle
xor
and
fmul
dec
pop
loop
nop
ss
sub
push
shl
mov
inc
push
push
jb
sbb
mov
cmc
sub
push
rorl
push
int
jg
sub
lea
gs
add
jo
stc
clc
out
add
mov
adc
mov
aam
dec
imul
lea
add
adc
movsl
dec
movsb
outsl
lcall
andl
adc
inc
ret
push
and
xor
loop
xor
add
pop
sbb
sarb
pop
mov
mov
popa
addb
sbb
mov
fs
loop
inc
stos
ret
out
adc
jne
idivb
jb
mov
jmp
push
and
insl
push
sbb
sub
mov
cli
inc
ljmp
pop
sbb
push
ds
fidivrl
nop
mov
cs
mov
add
xchg
jge
mov
call
repnz
and
push
ficompl
out
sbb
insb
mov
loop
pop
jne
fdiv
or
sbb
push
push
and
xor
imul
adc
pop
sar
subb
sti
adc
gs
addb
xchg
mov
jo
adc
lcall
lock
xchg
scas
imul
pusha
mov
lock
mov
mov
mov
push
xor
and
push
orb
and
sub
fsubs
test
cmp
mov
cs
les
loop
lret
mov
and
mov
rcr
push
xor
hlt
loop
mov
pop
xchg
mov
enter
insb
mov
js
pusha
xchg
and
testl
les
push
sbb
scas
jle
mov
fdivr
lock
ret
pop
mov
and
jmp
push
testb
and
pusha
pop
sbb
cmp
mov
mov
pop
adc
nop
mov
lret
xor
mov
movsb
adcb
mov
mov
xor
sbb
push
fisubl
stos
mov
js
mov
subb
mov
push
xor
fsubs
lret
mov
cli
mov
pop
lds
dec
mov
xor
loopne
fdivr
in
jle
inc
add
and
ss
push
in
add
call
add
jnp
enter
je
bnd
sbb
or
cmp
inc
lods
dec
lods
jle
pop
fs
movsb
mov
test
push
xlat
test
add
xchg
add
les
lds
insb
bound
add
inc
push
push
add
cs
mov
fldcw
fwait
dec
and
dec
mov
loop
jge
mov
inc
mov
sub
cmp
leave
icebp
sub
mov
mov
loope
inc
xor
pop
loop
jg
push
add
in
sub
push
push
or
dec
push
mov
std
inc
or
add
push
fisubrs
addr16
mov
pop
fsubr
adcb
or
sbb
daa
negb
adc
xor
mov
jl
pop
or
sbb
pop
lds
jb
sbb
add
push
rcrb
mov
pop
add
push
push
xchg
pop
push
lret
inc
dec
pop
push
push
rolb
mov
loope
test
adc
mov
stc
mov
adc
add
movsl
xchg
xor
jl
ss
sbb
shlb
push
mov
mov
mov
test
lods
call
or
lcall
les
push
fnstenv
jp
mov
mov
mov
movsl
and
mov
mov
inc
xchg
inc
lret
mov
ret
ljmp
fildl
mov
repnz
and
fwait
mov
or
xor
in
xchg
je
add
mov
xor
cmpsl
dec
out
clc
dec
add
cmpsb
nop
mov
sub
cmp
and
sub
dec
inc
icebp
or
sbb
insl
stos
inc
xor
push
xor
or
adc
aaa
pop
lods
loop
or
imul
inc
fsubrs
ffree
or
xchg
mov
jbe
jl
popf
xor
in
loopne
pop
clc
test
jb
xchg
pop
adc
sahf
xor
rolb
out
push
in
loope
and
fwait
sahf
pop
adc
rorl
repz
les
aam
adc
ficoml
fcomps
mov
add
mov
les
pop
jne
push
dec
pop
ds
push
mov
dec
jo
push
jp
out
xchg
cmp
mov
pop
mov
push
sub
inc
xor
mov
inc
push
mov
fcmovb
xchg
mov
push
je
pop
es
add
xor
lods
int3
jp
iret
loop
push
xor
adc
fldenv
or
pusha
addl
adc
inc
jo
push
ds
inc
mov
add
les
xlat
adc
adcb
inc
xorb
in
scas
mov
push
add
aas
ret
ss
inc
mov
pop
mov
stos
lods
mov
cmpsb
xchg
cli
lock
or
mov
cmpsb
pop
xlat
cs
xor
sub
mov
jno
nop
or
sub
xor
push
in
lock
mov
test
cmpb
das
or
mov
cmpsl
test
add
popa
loop
and
mov
clc
lcall
cmpl
cs
mov
cmp
jg
xchg
or
and
shl
fistpl
add
mov
stos
jl
adc
enter
jae
pop
push
icebp
sub
xor
mov
mov
mov
add
mov
in
mov
dec
mov
mov
mov
hlt
loop
jne
and
adc
sub
push
xchg
ret
jo
lcall
jecxz
rcrl
sub
xchg
ss
ljmp
dec
lods
lret
xchg
sbb
movsl
inc
ret
dec
lods
pusha
lods
mov
inc
loopne
push
in
push
xchg
push
sbb
mov
js
test
ret
mov
dec
nop
icebp
jmp
mov
sbb
inc
test
mov
push
lret
test
aad
daa
mov
xchg
sub
int
or
call
faddl
push
or
sub
or
sbbb
lea
jg
xchg
push
dec
pop
adc
and
inc
and
jp
mov
cltd
cmp
xor
cld
dec
jl
lea
sbb
add
shlb
andb
mov
cmc
rcr
mov
aam
xchg
jmp
dec
add
dec
push
push
mov
pop
push
adc
lock
fidivs
xor
lsl
je
pop
sub
test
and
push
jno
dec
adc
mov
push
cwtl
cli
call
push
inc
in
cmp
sub
push
jge
add
dec
lods
or
adc
dec
or
adc
jns
stos
fnstcw
mov
xchg
pop
mov
push
sbb
push
dec
xchg
dec
pop
xor
repnz
push
cmp
cli
sub
sti
push
or
xor
pop
adc
add
out
sahf
dec
adc
adc
xor
add
bound
jmp
mov
xlat
ret
add
sub
cmp
mov
jl
in
add
inc
jbe
xchg
test
shl
jb
cmp
jb
rclb
roll
sbb
inc
and
je
mov
sbb
insb
int
pop
inc
outsb
push
sub
push
enter
and
adc
xor
fwait
xchg
cli
insb
mov
jmp
push
es
loope
rcl
mov
or
mov
pop
xor
xchg
sub
mov
loopne
mov
or
sbb
pusha
bound
sub
lock
adc
stos
mov
xchg
sub
cmpsl
test
mov
xlat
lret
jle
insb
add
adc
shr
push
sahf
inc
mov
jbe
pushf
and
jbe
mov
cmpsl
fistps
jg
loop
inc
inc
clc
push
or
mov
pop
jo
or
sahf
inc
insb
test
jmp
dec
adc
inc
data16
idivl
repnz
sub
fildl
sbb
out
addr16
outsb
insl
dec
inc
mov
loopne
nop
js
mov
jle
rclb
scas
dec
pop
sbb
add
pop
push
das
cmc
pop
or
imulb
or
mov
ds
fs
adc
push
cmp
mov
push
rclb
fsubrs
or
clc
add
push
iret
test
jle
jge
mov
nop
mov
and
and
sbb
out
xchg
add
push
roll
sub
push
lods
hlt
shlb
and
lcall
inc
loopne
test
adc
cmpsb
push
les
dec
xor
mov
sub
testb
test
ret
adc
sub
cmp
and
decl
mov
push
movsb
or
lods
daa
lods
mov
mov
adc
adcb
cmp
fildl
dec
jbe
fbld
pop
rcll
and
jp
inc
dec
sub
arpl
aaa
rorb
mov
jle
aam
and
jno
stc
fcoml
stos
xor
adc
ret
cmp
pop
dec
aas
cmp
dec
sub
mov
cmp
cmp
dec
fcoml
gs
fiadds
popa
xor
push
add
cmp
push
adc
iret
mov
mov
push
aam
jp
sbb
add
movsb
inc
jle
mov
fsts
jle
or
push
out
xchg
pop
or
or
in
dec
xchg
ds
mov
out
inc
popf
repz
insb
lahf
mov
popf
jbe
stos
xor
mov
or
lea
ficoms
loopne
jge
nop
movsl
fcoms
add
xorl
and
jl
and
mov
nop
aas
enter
adc
sbb
push
push
cli
cld
adc
push
adc
jo
xchg
sbb
rclb
cs
push
push
mov
and
daa
sahf
and
xor
shlb
sub
jnp
imul
adc
and
lahf
ljmp
add
pop
movb
push
popf
inc
mov
iret
lcall
sub
pop
iret
push
lock
out
xor
push
sub
addl
inc
and
call
add
pop
in
invd
inc
add
dec
insl
imul
jnp
lds
inc
sbb
movsb
aam
jmp
cwtl
movsl
add
inc
movsb
insl
sub
adc
mov
ret
leave
insl
sbb
cld
rorb
add
mov
adc
lods
cli
mov
aaa
shld
fimuls
or
lret
pop
test
lea
add
lcall
sub
jno
pop
lods
fsts
inc
inc
test
or
inc
jo
cmpsb
cs
je
fimuls
mov
pop
sbb
das
movsb
fdivrs
inc
adc
cmpb
mov
pop
mov
add
cli
add
pushf
mov
xor
fs
push
and
fldl2e
push
inc
and
fidivl
mov
and
mov
dec
sub
jle
inc
test
lea
mov
mov
lcallw
stos
out
lcall
sbb
and
xchg
das
test
dec
dec
mov
pop
push
cmpb
rol
pop
lods
outsb
push
push
add
push
inc
jge
jb
add
ss
or
in
bswap
inc
inc
pusha
inc
cmpsl
xchg
cwtl
repz
inc
sbb
fsubrs
pop
shrb
sbb
int
adcl
jns
add
loop
xchg
jb
pop
scas
adc
dec
adc
adc
inc
pop
or
in
pop
jo
add
fs
xchg
push
push
dec
sbb
adc
pushf
stos
imul
jl
sbb
fs
aad
fucomi
int3
gs
inc
add
roll
daa
xchg
jo
xchg
adc
call
adc
mov
rcrb
mov
test
pop
add
and
pop
pop
sbb
mov
and
rclb
pushf
adc
push
addl
mov
fimull
aas
ficompl
push
jg
mov
es
inc
xor
mov
jmp
ficoms
loope
sbb
xchg
push
shll
and
jl
push
dec
sbb
enter
je,pn
push
inc
add
jbe
imul
add
in
push
inc
add
push
push
dec
dec
sysenter
rcr
call
add
bnd
xor
mov
cmpsb
mov
or
shll
out
shlb
mov
sub
push
cmpsb
lock
lds
xchg
mov
xorb
dec
lock
cmp
or
into
mov
or
je
das
bound
push
sub
movsl
add
mov
arpl
call
icebp
adc
test
inc
mov
mov
fiaddl
dec
lcall
push
push
mov
clc
test
mov
sub
xchg
js
xchg
lea
add
sbb
mov
inc
ds
inc
sub
cmp
les
nop
insb
pop
outsb
shlb
sub
dec
loope
mov
mov
fwait
inc
add
pusha
jmp
push
jl
add
xor
mov
xor
in
imul
fsubrl
jbe
push
push
mov
daa
es
push
lcall
inc
scas
shlb
push
fsubl
lock
mov
aam
outsb
lds
add
test
ss
and
loopne
ret
xor
test
stos
push
sbb
cld
bound
or
or
cltd
mov
pop
rorb
sub
mov
push
or
pop
adc
fprem
or
imul
sbb
xor
xchg
pop
lds
hlt
leave
push
outsb
out
sbb
and
into
stc
aas
pop
or
add
fs
cld
cwtl
test
test
xorb
call
dec
push
jne
int
lods
lret
shl
loope
mov
push
jb
mov
xchg
scas
push
ret
sarb
push
sarb
sub
loop
mov
push
xchg
xchg
repz
and
xchg
clc
pop
test
push
cmpsb
cmpsl
aad
pop
add
cmpsl
add
push
inc
and
adc
push
in
pop
push
adc
ret
andl
xor
cmpsb
scas
sub
adc
mov
push
xchg
mov
call
movsb
fs
add
dec
scas
lods
push
lods
jle
ljmp
adc
dec
insl
sub
loope
mov
cmp
mov
lods
adc
daa
cmp
or
out
pop
int3
mov
stc
loop
lcall
and
mov
adc
mov
mov
add
sub
out
nop
inc
adc
sbb
cmpsb
nop
cs
test
das
inc
cmpsb
or
jo
inc
push
push
sub
test
push
cmp
test
cmp
jb
mov
mov
push
in
jp
ss
gs
in
xchg
adc
mov
hlt
add
bound
sbb
and
int3
cmp
cli
testb
loopne
nop
push
lcall
inc
inc
sbb
xor
aaa
dec
movl
add
out
idivb
adc
sbb
sbbb
mov
push
aad
lock
mov
or
jmp
mov
or
mov
data16
dec
dec
adc
cwtl
mov
jb
hlt
ret
inc
push
and
add
lods
adcb
mov
lock
mov
pop
aam
jl
lock
push
adc
ljmp
and
js
test
sub
and
jne
aad
loopne
cld
push
rcrl
jle
xor
sbb
nop
sbb
icebp
xchg
jl
lock
xchg
data16
flds
xchg
mov
ficoml
push
mov
cs
mov
cmp
dec
mov
mov
adc
out
stos
add
inc
ss
sbb
jle
push
inc
js
test
loope
xorl
pop
mov
popf
pop
adc
adc
lods
cs
dec
lods
jecxz
lods
loopne
adc
adcb
lcall
mov
or
sbb
or
bound
xchg
ret
call
bound
fnstenv
cwtl
and
or
sub
or
insb
int
adc
cmp
mov
or
pop
xor
and
xchg
icebp
xor
pop
gs
enter
and
push
test
fwait
sbb
sbbb
fadds
ret
cmp
les
pop
gs
add
mov
in
and
mov
or
xchg
enter
insl
test
lcall
xchg
push
jbe
sahf
pop
add
rclb
ss
insl
mov
mov
mov
shrb
xchg
xchg
mov
lret
leave
ja
push
ds
push
int
push
cmpsb
imul
lods
mov
cmp
dec
les
test
les
push
icebp
imul
inc
and
test
ljmp
sbb
fcmove
jo
aam
xchg
ret
push
popa
cwtl
cmp
cmp
and
mov
cs
loop
ret
adc
outsl
adc
sbb
fidivrl
push
pop
add
dec
iret
xorb
xchg
mov
xchg
mov
ret
mov
add
lods
cmp
xor
mov
cld
add
aad
mov
movaps
lahf
push
data16
inc
ss
jmp
mov
lods
mov
sbbb
mov
fsubrs
or
insb
cli
xchg
xor
or
mov
and
mov
xor
movb
add
add
or
dec
jo
mov
sub
mov
and
or
xchg
test
movsb
pop
fcompl
imulb
arpl
push
add
test
pop
scas
ljmp
cmp
push
push
ds
push
es
lahf
xorb
scas
inc
loope
imul
imul
pop
ficoms
xor
xlat
insb
das
sbb
out
scas
cmp
cld
fdivl
sbb
sbb
fsubrs
sub
ds
dec
push
xchg
jo
mov
pop
scas
dec
loop
inc
fcmovnbe
jo
cmp
mov
dec
adc
push
mov
or
and
xchg
push
xchg
xor
pop
sub
jo
clc
ss
adc
inc
mov
in
ljmp
iret
add
pop
mov
dec
pop
movsb
add
ja
sahf
icebp
adc
sbb
movb
data16
fwait
cwtl
push
shrl
mov
push
fisttps
loopne
xchg
outsb
in
mov
shll
sbb
xchg
imul
mov
loopne
cltd
test
into
or
mov
cmpsb
push
and
andl
lods
cmpsb
or
loopne
dec
nop
int3
in
shll
ds
jo
fiaddl
or
fcom
adc
aam
pop
sbb
xor
and
lds
or
negb
bound
mov
sahf
add
jbe
enter
subl
mov
mov
mov
addb
dec
inc
xor
push
aaa
out
gs
inc
push
andb
lock
jo
mov
add
cmc
adc
movsb
popa
add
or
xor
xor
jns
adc
pop
add
test
ss
push
lock
fcoms
mov
jp
cmp
cmp
dec
in
dec
dec
sbbb
scas
add
in
mov
pop
lret
xor
bound
shlb
and
mov
push
fs
fmull
mov
shlb
mov
xchg
push
cld
ljmp
rorl
sub
aas
jne
loope
mov
mov
cltd
pop
adc
pop
xorb
int
push
mov
daa
test
push
sbbb
movsb
mov
addl
test
push
mov
insb
push
jp
ret
xor
sbbl
push
or
add
insl
sti
sbb
dec
popa
xor
fs
adc
in
fidivrs
pushf
ret
insb
test
test
sub
push
and
push
adc
cltd
adc
sbb
dec
mov
push
xchg
enter
sbb
out
add
int3
xor
adc
push
add
pusha
or
xor
xor
add
loope
or
decb
push
rcrb
scas
cmp
xor
cmp
push
mov
push
fdivs
test
gs
jns
xchg
shlb
outsl
in
lock
and
imul
jne
sub
stos
add
popa
les
push
jp
test
sub
cmp
mov
mov
addb
inc
pop
hlt
dec
idiv
arpl
sbb
shr
add
adc
test
push
mov
sbb
push
push
or
sbb
mov
das
xchg
push
loope
stos
xor
mov
sub
sarb
aas
sub
mov
or
sub
adc
mov
push
ljmp
xchg
addb
test
and
les
xchg
lcall
jle
inc
lahf
and
mov
xor
xor
cmp
ss
hlt
jbe
mov
sbb
mov
lds
hlt
and
pop
add
jo
cmpsl
jb
in
mov
jbe
mov
push
mov
mov
or
addr16
cwtl
jp
test
ret
push
push
xchg
sbb
inc
andb
hlt
lret
lcall
jnp
adc
test
mov
push
mov
je
sbb
dec
repz
es
and
sub
les
repnz
inc
mov
xchg
cmp
pop
xor
dec
fists
pop
pop
jl
mov
push
adc
mov
movsl
rolb
push
push
add
sbb
data16
aad
jbe
pop
inc
imul
push
adc
xor
or
arpl
mov
bound
in
adcl
loopne
push
rclb
inc
xchg
js
mov
mov
push
ds
adc
scas
ret
lock
xor
fdivs
out
pop
iret
xor
cmpsl
or
movsb
or
aad
aaa
in
mov
or
adc
jbe
aam
andl
jl
push
push
clc
shll
ret
xchg
inc
ds
shrb
cmp
or
xchg
loop
xchg
and
lods
leave
les
sbb
jb
popa
add
sbb
pop
mov
pop
and
push
or
mov
mov
mov
push
dec
cmp
movsl
clc
out
push
sbb
pop
xor
addr16
rolb
das
and
mov
mov
fldt
add
xor
or
mov
out
enter
or
lock
shlb
lock
dec
or
mov
jne
add
pop
xchg
pop
xor
dec
shrl
push
push
int
pop
inc
mov
push
dec
push
push
rclb
js
push
fimuls
mov
inc
fisubrs
popa
shll
mov
pop
aam
pop
sub
and
add
insb
dec
inc
sub
out
xchg
add
decb
mov
adc
cwtl
mov
ds
pop
hlt
mov
push
or
stc
movsb
shlb
clc
sub
aad
pop
mov
and
dec
cmp
out
lcall
push
inc
sub
popa
stos
add
scas
mov
lods
adc
xchg
lcall
mov
mov
imul
out
ss
sub
sbb
test
dec
insb
add
jle
shll
push
sbb
fcoms
pop
add
add
ds
push
xor
pop
jl
fcompl
mov
push
push
xchg
cmp
mov
mov
nop
push
clc
add
mov
cwtl
iret
pushf
xor
lods
pusha
arpl
cmpsl
in
lods
cmp
outsb
and
xchg
adc
pushf
cld
test
jbe
inc
sbb
jno
adc
cmp
jle
in
mov
cmpb
rolb
dec
add
add
in
pop
or
clc
jo
pop
sti
jmp
loop
mov
pop
mov
ss
aad
jge
inc
adc
cmc
insl
add
xor
cmpsb
sbb
or
ret
bound
jmp
orl
inc
jle
clc
or
mov
and
mov
pop
jnp
mov
sbb
xor
in
mov
push
jb
out
xor
fcmovnbe
and
cld
lock
jne
sub
dec
push
ret
inc
lds
ss
adcb
imul
shl
push
xlat
mov
pop
dec
sbb
jb
fcompl
add
rolb
mov
sahf
xor
out
pop
jo
sbb
xor
dec
dec
pop
push
sub
mov
mov
mov
pop
std
test
push
sbb
pop
inc
inc
les
inc
insl
dec
add
andb
stos
adc
popf
call
cltd
pop
test
mov
test
xor
dec
sbb
inc
mov
adc
mov
inc
dec
in
fidivrs
ret
call
push
add
lods
push
sub
sbb
cli
inc
sarb
xchg
xor
call
mov
clc
icebp
push
jno
adc
push
or
int3
cmp
jl
hlt
sbb
mov
and
xor
out
add
mov
lcall
or
push
mov
lods
jp
jns
je
pop
cmpsb
stos
fcmovb
insl
push
movsb
nop
push
mov
test
add
dec
xor
push
ljmp
jp
incl
and
mov
mov
mov
xor
dec
sbb
push
push
faddl
rolb
dec
iret
mov
cmp
xlat
rolb
xor
pusha
pop
stos
sub
push
push
in
xorb
mov
xchg
or
pop
mov
int
sbb
andb
xchg
outsl
nop
xlat
mov
push
lock
rcl
pop
mov
xchg
push
xchg
out
jbe
fisubs
das
dec
xor
in
and
aaa
ficomps
out
mov
clc
inc
or
notl
or
push
push
fisubrl
aas
push
std
mov
add
les
in
lds
lods
enter
add
or
ljmp
in
mov
arpl
mov
test
ljmp
movsl
add
mov
add
sub
inc
int
rcll
mov
and
jo
inc
jp
cmp
adc
add
pop
aaa
push
insl
stos
dec
add
stos
jbe
or
or
aam
shrb
lods
cmp
rolb
insb
push
pop
loop
call
stos
mov
inc
leave
xchg
lods
dec
mov
mov
cmpsb
mov
cmpsb
lcall
dec
insb
cmp
sub
or
mov
hlt
dec
adc
jne
fs
xchg
hlt
insb
jmp
pusha
or
lret
into
inc
push
lods
dec
ljmp
push
sub
or
mov
int
inc
push
dec
cmp
nop
sub
xor
rorl
icebp
ret
outsl
cs
add
jnp,pn
xchg
shrb
test
add
sbb
popa
jp
cmc
and
and
adc
push
sbb
ret
add
das
cmpsb
lea
iret
shrb
push
sarb
dec
jmp
daa
xchg
adc
push
mov
in
add
push
das
aad
or
stc
push
inc
sbb
mov
sbb
shrb
cs
fistpll
test
loop
jbe
les
xchg
mov
pop
add
inc
mov
orb
pusha
loop
shrb
pop
pop
ss
lcall
and
add
mov
sbb
pop
push
sbb
fmul
mov
movsb
inc
mov
jb
rcl
out
loop
loopne
mov
or
lcall
movsb
xor
dec
bound
push
push
xor
cmp
add
inc
push
push
sbb
xor
mov
outsb
cmpsb
push
insb
rol
cwtl
push
cmp
dec
lock
add
mov
test
pop
fisubrl
dec
outsl
call
dec
orb
dec
ss
insl
lds
cmpsb
cmpl
lahf
sarl
sbb
scas
and
mov
lret
push
push
pop
cmpsl
fs
jbe
sub
shlb
jbe
loopne
cwtl
xchg
add
lds
cli
add
mov
hlt
fsubp
hlt
mov
popa
or
mov
lods
and
add
pop
mov
jp
mov
pop
insb
cmp
add
ss
sub
mov
mov
ljmp
out
sub
stos
mov
js
js
arpl
mov
mov
and
push
shlb
aad
inc
jl
pop
clc
mov
lods
xchg
inc
int
loope
mov
cmp
fadds
imul
adc
and
sub
daa
or
movsb
inc
mov
adc
inc
cwtl
xor
push
jo
mov
fcoml
imulb
ficompl
cmp
loope
mov
pop
arpl
push
addl
test
mov
je
and
and
inc
jmp
mov
add
pop
mov
push
std
dec
add
lods
je
inc
enter
xchg
ret
add
sbb
sub
cmp
push
pop
lods
xchg
mov
subl
pop
push
sub
rcl
fs
mov
fwait
mov
orl
add
insl
imul
imul
sub
and
jo
mov
jge
cmpsb
mov
mov
mov
pop
aad
sub
xor
cmc
mov
mov
es
cmp
insb
jbe
cs
add
clc
push
push
inc
pop
into
xor
sub
dec
ds
insb
jb
out
jbe
dec
xlat
adc
loop
xchg
xor
jle
mov
test
inc
les
sbbb
popa
out
pop
jo
adcb
inc
mov
in
sti
cmpsb
test
pop
cmp
lods
js
push
push
xchg
ljmp
add
pop
push
lcall
sti
push
and
dec
add
pop
sbb
pop
push
hlt
or
bound
mov
mov
inc
loopne
mov
shlb
adc
cli
int3
inc
and
shll
lea
jp
add
or
rorb
mov
dec
xchg
in
nop
gs
jbe
loope
and
mov
stos
pop
add
sbb
fidivrs
add
mov
add
inc
push
shlb
push
fs
aaa
mov
dec
int
jnp
cld
cli
pop
movsb
mov
push
dec
xchg
mov
xchg
hlt
add
mov
add
cmc
rcrb
lock
xor
jl
mov
xchg
lret
xchg
movsl
iret
push
cmp
idiv
xchg
adcl
mov
mov
fcmovnb
mov
inc
jnp
icebp
lret
sahf
inc
sbb
xor
clc
dec
pusha
hlt
pop
ljmp
jp
push
push
inc
imul
inc
cli
lret
jae
mov
push
jno
pusha
in
insb
dec
mov
divb
push
add
fucomp
mov
loope
loope
lret
jle
sub
push
mov
lcall
add
adcb
jp
in
pop
js
or
leavew
push
stc
pop
ret
add
sahf
push
dec
inc
dec
jle
push
add
cmp
mov
pop
inc
pusha
and
sub
mov
xchg
mov
nop
sahf
or
imul
test
push
outsb
je
rcrl
je
rclb
shlb
inc
or
fcmove
jl
and
rolb
dec
nop
xchg
insb
and
lds
sub
cs
push
je
mov
lea
mov
dec
scas
add
cmp
add
outsl
add
or
xchg
aam
push
sbb
add
out
sub
test
repnz
movsl
pop
add
sbb
add
fidivrl
movsb
add
fildl
mov
and
js
gs
mov
jle
xor
inc
xchg
or
ds
dec
fdivs
or
xor
mov
rorb
int3
ret
adc
inc
push
or
adc
push
push
jl
aas
inc
bound
jb
pop
sub
push
mov
test
pop
pop
push
inc
mov
cmp
loopne
dec
ljmp
out
sub
xor
mov
mov
adc
add
in
outsb
ret
je
push
push
push
repz
dec
fsubl
inc
mov
mov
xor
hlt
hlt
inc
ret
jg
mov
jo
xor
lods
testb
pop
adc
sub
je
loop
movsb
jb
add
pop
movsb
pushf
movb
inc
repnz
mov
fwait
sub
push
sub
das
sub
jecxz
rolb
lret
scas
pop
mov
loopne
orb
mov
js
mov
dec
or
mov
inc
inc
and
fcomi
inc
push
push
or
cmpsl
cmpsb
int3
repz
jl
jle
insl
cmp
fidivrs
push
imul
jp
cmp
dec
sbbb
cli
dec
and
mov
xlat
sub
and
subb
notl
mov
out
out
inc
add
adc
push
xor
rorb
dec
ljmp
pop
nop
js
mov
clc
add
cli
xchg
aas
mov
jge
roll
out
add
dec
push
test
jo
xchg
or
cmp
mov
clc
sbb
loope
sub
jbe
loope
add
leave
mov
fbld
push
dec
push
mov
adc
call
icebp
adc
int3
mov
icebp
jnp
mov
sub
in
push
test
push
xchg
xor
mov
pop
or
pop
sub
sub
out
cmpb
add
mov
lods
adcl
xor
adc
inc
test
jecxz
mov
pop
pop
push
push
test
mov
ficomps
mov
xorl
fistpll
inc
sti
sub
inc
andl
ljmp
dec
xchg
fs
jo
push
sub
popf
xor
ss
sub
adc
cs
shll
mov
addl
jbe
ss
mov
ret
push
outsl
ret
xor
mov
sbb
int3
call
test
scas
sbb
cmpsl
or
mov
sbb
mov
mov
sub
lock
sbb
mov
lret
test
fcomip
mulb
adc
out
add
nop
mov
fldcw
cs
mov
aaa
test
add
and
cmc
dec
loope
cmpsb
push
in
sarb
roll
xchg
xchg
sahf
inc
mov
adc
mov
fs
imul
lcall
add
call
pop
mov
xor
adc
outsb
mov
or
out
mov
stos
add
pop
dec
lds
push
dec
push
fs
and
fistpll
or
xchg
repz
mov
es
imul
inc
das
mov
icebp
popa
enter
add
pop
xchg
nop
adc
mov
push
pop
mov
and
sub
stos
inc
lock
sahf
mov
jle
shl
mov
retw
icebp
pop
fsubl
mov
clc
sbb
pop
lock
shll
jle
and
xchg
inc
test
and
adc
pop
mov
dec
push
push
cmpsb
stos
pop
push
call
push
cmp
inc
cltd
daa
or
idiv
fsubl
mov
push
and
xchg
lcall
adc
jnp
pop
mov
or
add
add
addr16
cld
lds
or
lret
xor
inc
xchg
adc
sbb
inc
aam
and
push
cmp
cmp
outsb
das
mov
pop
xchg
in
rolb
push
pop
insl
bound
outsb
push
mov
jle
je
push
ss
inc
subb
movsl
jl
divb
and
lret
sbb
fldenv
mov
in
in
or
subb
add
push
punpckhbw
iret
mov
adc
or
lcall
repnz
sub
mov
inc
rorb
andb
mov
xchg
sub
test
insb
jbe
jle
fisubl
push
out
or
in
int3
sub
mov
adc
cmpl
mov
pop
or
jnp
imull
mov
divb
or
test
lea
jecxz
add
addb
ror
cmp
mov
or
sbb
or
lahf
cmp
loopne
out
or
fsts
in
mov
stos
add
add
push
pop
into
lock
sub
push
aaa
cs
sub
sarl
jmp
cli
jmp
aaa
mov
pop
out
cmovns
dec
mov
imul
sub
push
xchg
and
dec
loopne
adc
mov
push
fiaddl
mov
adc
pop
mov
hlt
adc
sub
pop
imul
int
pop
repnz
cld
pop
aad
push
sbb
mov
adc
stos
xor
ss
mov
loopne
hlt
enter
push
pop
jne
and
or
and
or
add
and
rorb
repz
pusha
imul
xchg
lods
or
push
ret
rorb
test
mov
pop
add
xchg
sbb
dec
mov
and
cmpsb
mov
adc
loopne
sub
dec
mov
test
hlt
mov
push
add
cmpsb
mov
push
jbe
and
mov
das
jne
mov
sbb
fnsave
xor
push
pop
push
pop
loopne
jne
inc
jl
or
add
jge
mov
test
jnp
out
notl
or
pop
pusha
loope
pop
push
xchg
stc
mov
pop
lds
push
mov
stos
xlat
shlb
xchg
add
push
sbb
mov
hlt
ss
and
cmp
rcrb
lret
rclb
ja
xor
sub
xlat
aam
pusha
add
ljmp
sbb
xor
xor
and
push
xor
lcall
mov
or
icebp
jo
jbe
pop
test
lcall
fmuls
lahf
lea
mov
lods
mov
and
cs
nop
imul
mov
mov
add
ds
or
jb
int3
gs
push
lahf
sbb
mov
mov
rolb
dec
adc
popa
pmuludq
jge
leave
gs
mov
fs
notb
sbb
pop
lds
lods
jbe
in
adc
pop
inc
cmp
and
mov
xchg
mov
faddl
hlt
insb
add
or
push
add
fcmovu
fsubrl
loopne
in
test
loopne
sub
push
pop
shlb
repz
add
add
jbe
add
les
add
add
jno
test
xchg
mov
jo
mov
xchg
and
push
scas
mov
jbe
sub
cmpsb
jl
lcall
ja
dec
xchg
lods
mov
xlat
pop
add
or
mov
rcr
mov
push
outsb
sbb
xor
pop
stos
subb
test
xchg
fmul
repnz
dec
push
orb
in
sub
adc
push
ja
lods
xchg
mov
or
ret
and
add
cmpsb
jecxz
loop
push
pop
mov
and
out
add
xor
jo
mov
inc
jb
push
inc
xor
mov
cs
roll
test
push
mov
mov
sbbb
add
mov
push
lock
ljmp
adc
xchg
adc
loop
inc
loop
jp
mov
or
xchg
inc
pop
insb
sbb
out
repz
es
push
sub
lods
insl
pop
les
xchg
and
out
xor
add
ficoml
mov
xchg
lods
rolb
add
or
push
xchg
mov
xorb
mov
push
mov
push
jo
cwtl
dec
sbb
jp
mov
pcmpeqd
ret
movl
insb
or
enter
or
cmp
and
sub
fmul
cltd
ret
adc
dec
mov
add
dec
sbb
ljmp
loopne
sub
sarl
mov
adc
adc
dec
inc
js
loopne
sub
xlat
inc
pop
sub
pop
push
inc
movsb
aaa
gs
ret
push
repnz
inc
sub
mov
roll
inc
xor
lods
in
stos
outsl
or
pop
shlb
shlw
addb
inc
add
pop
sub
pop
les
mov
dec
repnz
lds
es
push
mov
icebp
stos
sbb
fists
push
sub
movsl
push
push
into
fistl
enter
imul
into
clc
outsb
sub
add
and
push
cmpsl
fbld
mov
rcrl
dec
call
adc
xchg
or
push
fldenv
or
jp
loop
cs
inc
sbb
adc
and
and
imul
push
mov
mov
push
sbb
xchg
push
addr16
decb
inc
push
cwtl
pop
xor
fimull
lahf
push
rolb
inc
mov
mov
add
movsl
push
fmull
xlat
push
sarb
les
and
movsb
xlat
add
jo
xor
or
dec
js
ds
js
ret
xor
mov
adc
scas
inc
fiaddl
fiadds
xor
pop
xor
xor
add
es
push
inc
push
add
mov
cmp
jl
jbe
dec
jo
insl
or
push
mov
sbb
inc
inc
pop
push
cwtl
testb
loopne
push
push
jno
daa
sbb
and
loopne
ljmp
ret
pop
inc
push
mov
dec
mov
pop
inc
push
push
push
mov
lret
cmp
or
sub
mov
push
and
js
add
dec
adc
cwtl
push
xchg
or
hlt
push
and
js
pop
add
pop
pusha
ret
test
push
repnz
ficoml
dec
or
sbb
xchg
xor
mov
add
and
jnp
cmc
scas
in
or
mov
repz
jbe
fldcw
clc
push
xchg
outsb
bound
test
mov
movsb
jo
xor
push
repnz
in
sub
ss
lret
xchg
dec
adc
lret
fists
lret
fildl
push
mov
stos
push
xchg
lods
push
jle
clc
add
pop
sub
mov
sbb
and
lea
subl
decb
cmp
adc
add
mov
pop
mov
jnp
fsubrs
popf
mov
aas
dec
xchg
pop
add
loopne
mov
or
jne
fs
ret
dec
xchg
add
push
out
hlt
push
shlb
add
das
stos
dec
dec
cwtl
hlt
cmp
cltd
sub
cmp
add
mov
cmp
subb
out
xorb
push
adcl
rclb
xlat
xor
loop
and
inc
setl
shll
outsb
rep
mov
add
stos
push
push
leave
mulb
clc
mov
pop
fcoms
hlt
int3
xchg
xchg
out
in
pop
and
cwtl
mov
loope
xchg
cmp
inc
out
outsb
in
mov
dec
pop
or
push
push
sub
jge
or
mov
sbb
loop
inc
add
cli
xor
add
xchg
jo
pop
imul
rcrl
adc
xchg
sub
pop
jl
dec
mov
enter
shrd
shrl
hlt
inc
inc
shr
jae
xchg
outsl
ljmp
cltd
data16
lea
dec
cmp
daa
or
adc
inc
jbe
pop
sub
dec
in
fidivrs
jge
enter
in
mov
mov
ljmp
and
sub
ss
or
mov
sbb
mov
lret
xor
sbb
inc
adc
notb
adc
sub
inc
xchg
rorb
aaa
icebp
sbb
xchg
pop
lock
adc
jecxz
and
out
std
cmpsb
hlt
pop
dec
mov
sbb
or
jecxz
mov
xchg
mov
sub
adc
out
decl
lcall
popa
pop
repz
mov
lcall
aam
fcompl
mov
xchg
sbb
sahf
lods
push
push
xor
dec
stos
push
push
out
aas
and
ss
adc
les
push
push
xchg
mov
inc
sbb
jp
add
pushf
loop
sbb
int
mov
popf
push
subb
inc
lods
js
cmpb
adc
dec
out
sahf
and
mov
lret
clc
xchg
jp
sub
pop
cs
mov
add
cmp
lcall
or
notb
cmp
push
and
mov
jl
mov
ds
sti
add
sub
xor
inc
xor
xor
sbb
add
test
adc
pop
mov
xchg
mov
stos
pusha
aaa
adcb
imul
pop
jo
push
add
pop
inc
insl
loopne
nop
or
lcall
sbb
push
fdivr
bnd
ds
pusha
push
xchg
popa
mov
add
push
mov
sbb
xchg
xor
xorb
test
mov
mov
call
mov
test
push
xor
sub
and
pusha
cmp
jns
and
adc
imul
fcompl
js
push
and
gs
xchg
fmuls
fildl
mov
push
add
mov
mov
cmp
mov
insl
sub
jne
rorl
push
push
add
add
inc
enter
push
pusha
sub
cmpsl
jl
add
xor
xchg
clc
fnstenv
add
push
pop
lahf
xor
xchg
xor
pop
push
fsubrl
or
adc
cltd
loopne
xor
push
adc
test
push
nop
sub
xor
add
lods
shlb
test
pop
xor
pop
mov
pop
rcr
cmpsb
pop
inc
lcall
add
xor
push
mov
fadds
hlt
jl
das
and
pop
push
adc
xor
or
add
ror
test
and
cmpsl
push
jecxz
js
adc
push
inc
sbb
adcl
adc
fcmovne
bound
lods
subb
and
jl
retw
add
xor
addb
mov
add
pop
ljmp
push
cmpsb
inc
sbb
adc
cmpsb
call
movsl
and
ret
xor
pop
enter
lcall
pop
ss
add
lods
cmp
add
push
clc
xor
das
sub
push
fcomps
sbb
mov
sbb
shlb
mov
jp
fdivs
or
lods
jecxz
inc
popa
imulb
and
mov
mov
or
adc
jp
push
insl
lods
mov
xchg
pusha
push
rcll
ret
shlb
ret
sub
mov
add
mov
dec
adc
pop
mov
jbe
xchg
push
mov
and
cmp
add
and
fidivl
jle
ret
mov
pop
xor
dec
loope
or
les
andl
inc
test
shlb
subb
jp
aas
jl
outsb
inc
dec
dec
cmp
movsb
test
push
call
enter
push
movsb
lock
clc
sub
clc
insl
fdivl
mov
cmpsb
jb
jo
adc
jge
xchg
push
xor
cmp
mov
nop
mov
xorb
scas
add
push
cmp
mov
pop
lods
arpl
mov
mov
and
mov
scas
pop
popf
lahf
imul
popa
movb
loopne
rorb
push
add
push
push
test
cwtl
js
cwtl
and
fmuls
add
jp
fs
sbb
mov
fisubl
xchg
imul
cld
mov
xorb
add
daa
push
sti
es
or
pop
outsl
cli
jg
mov
mov
into
nop
inc
and
xor
mov
push
movsl
add
pop
sub
push
cmpsb
sbb
test
loopne,pn
sbbb
pop
push
sub
loop
push
loopne
clc
inc
inc
sub
les
lcall
adc
dec
mov
sahf
jb
or
ret
mov
fwait
out
cmpsb
lock
cltd
test
clc
hlt
lret
jo
pusha
mov
mov
pop
dec
add
scas
and
sbb
xor
or
loop
inc
call
fwait
or
subb
pop
scas
push
inc
outsl
ljmp
call
add
and
imul
add
mov
pushf
pop
mov
or
cmpsb
gs
shrb
dec
sti
outsl
loope
add
mov
rcrl
add
mov
push
xor
in
xor
add
out
sub
mov
adc
dec
aam
popa
shrb
mov
mov
imul
cmp
xlat
and
mov
xchg
add
cmp
mov
std
sub
inc
or
pusha
insb
imul
into
sahf
sbb
cmp
es
enter
push
sbbb
mov
hlt
mov
int
rclb
mov
adc
call
pop
sub
les
inc
sub
pop
pop
cmpsl
test
mov
xor
in
pop
mov
jle
inc
ret
xchg
enter
mov
mov
jb
addr16
or
jo
inc
icebp
push
push
pop
xchg
xchg
lods
sbb
or
pop
push
add
and
or
inc
sub
aam
pushf
subb
cmpsb
cli
push
jecxz
fiadds
sub
push
cmp
push
sbb
mov
jp
push
push
shl
lcall
and
or
movsb
jle
inc
rorb
std
ss
insb
xchg
insb
inc
roll
call
add
sbb
les
or
adc
dec
loop
and
dec
add
test
push
pop
pop
test
testb
adc
inc
icebp
push
les
rorb
cmp
mov
or
sbb
les
mov
scas
push
xor
aam
imulb
ss
movsb
insl
push
sbb
or
jo
in
jne
push
push
out
push
loop
dec
ficompl
add
jbe
int
dec
ret
pop
add
iret
dec
mov
enter
jmp
rcl
cli
cmp
fidivl
shl
cld
imul
bound
ror
inc
xchg
sub
sub
data16
and
dec
mov
lea
mov
hlt
xor
adc
popa
mov
add
mov
out
loopne
gs
xchg
xchg
clc
shl
cmp
sahf
mov
lock
push
shlb
lods
add
adc
add
shll
filds
lock
mov
in
xchg
test
out
imul
pop
rcr
sbb
xchg
push
test
mov
icebp
les
pop
fadd
in
mov
inc
sub
push
jle
loop
dec
mov
sahf
fwait
pop
mov
mov
js
mov
test
shl
bound
jge
mov
mov
fs
ret
mov
in
and
mov
mov
fwait
stos
testb
adc
rorl
dec
inc
cmp
daa
inc
cltd
movsl
je
xor
mov
lcall
cmp
dec
cld
push
xor
or
adc
xor
insb
mov
cwtl
xor
shl
sub
outsb
sahf
or
push
xchg
cmpsb
fiaddl
scas
stc
xorl
or
aaa
movsb
push
push
push
sbb
inc
and
insb
sbb
ss
push
push
int3
cmovs
pop
enter
jge
fld
data16
pop
xchg
or
sub
and
sbb
push
inc
adc
aad
jecxz
lahf
cld
and
cs
out
sbb
mov
in
jl
mul
mov
xchg
movsb
push
and
mov
imul
sbb
mov
mov
mov
adc
das
inc
loop
movsl
xchg
sbb
xor
fcoms
cli
inc
pop
aaa
lcall
push
ss
mov
ss
dec
pushf
int3
push
in
nop
pop
cmp
push
test
enter
xorl
xchg
js
int
xor
rolb
add
mov
xor
mov
inc
mov
jmp
add
jae
pop
fisubl
pop
inc
clc
into
sahf
jmp
test
fbld
and
push
adc
mov
loopne
jg
into
xor
imul
xor
les
nop
sbb
sub
das
and
inc
cmp
inc
cmp
jge
fiadds
inc
adc
in
and
and
adc
fldl2e
add
dec
push
jno
xchg
addr16
jbe
sbb
mov
fsubl
cld
enter
in
jae
pop
add
sbb
xchg
in
jne
cmp
int3
or
clc
pop
jno
dec
sub
mov
icebp
inc
jp
loop
dec
dec
pop
jo
aam
jmp
mov
add
es
xor
cltd
ljmp
and
push
jo
call
add
stos
pop
lcall
stos
pusha
mov
lret
test
xchg
mov
bound
cmp
jp
pop
clc
push
sub
cmpsb
cmpsl
fcomp
ret
lods
stos
or
shrb
push
add
dec
mov
xchg
mov
dec
mov
mov
adc
jl
jg
xlat
es
xchg
loope
test
jbe
fisttpll
leave
cmpsb
and
mov
mov
push
inc
cmp
gs
or
mov
pop
pop
and
cs
and
push
cmp
je
out
aad
imul
inc
les
fwait
pop
push
outsb
jecxz
and
outsb
andb
in
test
push
push
inc
push
xchg
rcl
rolb
js
test
cmp
jno
sub
test
xor
sbb
mov
push
test
jmp
mov
stos
xor
add
xor
adc
dec
ljmp
and
inc
mov
jp
and
jb
dec
pop
sar
jmp
and
jg
push
push
push
push
or
das
jecxz
mov
push
or
fwait
roll
mov
ficoml
push
cmp
or
xor
lea
bound
mov
ret
add
xchg
and
call
clc
or
data16
add
testb
cmp
out
jl
movsb
dec
adc
xchg
push
fs
pop
mov
inc
dec
xchg
inc
js
les
or
push
mov
dec
xchg
stos
push
sarb
or
cs
nop
jbe
sbb
mov
push
fstps
mov
lret
ds
movsb
fiaddl
fistps
inc
pop
cmpb
cmp
push
ja
and
mov
sub
mov
adc
insl
negb
rol
les
leave
dec
test
or
mov
xchg
sbb
loopne
addr16
adc
out
mov
sbb
mov
mov
push
xor
cmpb
mov
outsl
lcall
add
gs
icebp
mov
imul
dec
push
mov
mov
inc
lods
aad
fdiv
mov
outsb
adc
inc
and
push
add
jae
into
mov
js
add
jg
scas
ljmp
sub
inc
out
test
pop
mov
lret
je
pop
sbb
pop
or
shrb
inc
fdivrp
xor
test
push
sbb
dec
sbb
pop
mov
add
out
jp
setle
xchg
stos
outsb
das
or
out
mov
fwait
lcall
dec
testb
sub
nop
jl
repnz
push
pop
push
inc
mov
lock
dec
das
xchg
lods
adc
jle
lcall
and
mov
mov
scas
push
cmp
mov
add
sbb
add
bt
out
fstl
sbb
adcb
pop
pop
mov
fsubr
push
inc
aas
or
shlb
popa
add
fidivrl
push
lret
adc
jne
movsl
xchg
add
lcall
pop
aam
gs
lea
jnp
popa
add
mov
dec
push
fdiv
push
rclb
ret
gs
sbb
or
lods
inc
push
lahf
scas
cmp
mov
push
rclb
mov
insb
push
adc
jg
insl
push
imul
andl
mov
mov
pop
sarb
or
jl
lods
xchg
ret
sub
mov
xor
adc
js
cmp
add
or
movsb
xchg
inc
xchg
adc
cmpsb
and
push
mov
jmp
lock
in
pop
add
cli
or
inc
xchg
add
sahf
and
or
sub
jno
addr16
pusha
imul
insb
and
mov
mov
fisubrs
test
adc
das
out
push
mov
subl
pusha
and
sahf
idivl
xchg
sbb
push
std
add
add
mov
adc
mov
fdivrl
call
test
das
call
popa
mov
sub
insb
jp
push
jo
ret
pop
adc
insl
jnp
cli
pop
inc
lahf
jo
out
ds
rolb
movsb
outsl
lods
lea
cmp
mov
and
ret
jecxz
dec
test
mov
cmpsb
xchg
jo
lods
gs
scas
test
sub
movsb
and
dec
mov
lcall
pusha
insl
filds
aam
outsb
call
lods
and
add
mov
mov
push
push
mov
sbb
adc
imul
lds
push
push
jmp
shr
push
inc
testb
pusha
mov
and
push
dec
dec
les
push
lds
test
insl
outsl
fs
sub
call
lahf
jae,pn
xor
cld
mov
inc
add
sarl
sub
cmp
hlt
adc
stos
push
pop
lea
cs
pop
dec
dec
xlat
adc
or
mov
cs
test
sbb
xor
loop
rorl
je
adc
cli
cmp
fadds
shlb
clc
cmp
ss
add
mov
ror
jbe
popa
cmp
test
mov
dec
into
sub
test
xor
sub
add
fs
cmp
sub
mov
shl
scas
rorl
mov
xchg
mov
push
push
ds
insb
bound
push
lods
and
cmpsl
stos
sub
sbb
add
ret
adc
add
add
mov
inc
popa
add
int
jp
push
mov
js
mov
adc
mov
push
sbb
cmpb
sahf
xchg
mov
bound
shl
pop
imul
loopne
stc
loope
aam
sub
test
xchg
rolb
stc
or
arpl
dec
mov
xchg
push
or
and
mov
nop
adc
sahf
daa
pop
or
popf
adc
ret
notl
cmp
flds
daa
sbb
mov
fwait
rolb
je
aas
push
cs
ds
dec
leave
and
shr
mov
dec
scas
movsb
sbbb
push
xchg
popa
es
push
pop
push
mov
jmp
fidivs
arpl
test
sub
adc
or
pushfw
xchg
les
cld
adc
dec
es
pusha
mov
data16
inc
and
sbb
sub
xchg
add
cli
add
lds
sar
lret
in
mov
mov
enter
nop
js
pop
aad
lret
or
pop
mov
cmp
inc
mov
nop
cli
inc
insl
orl
fnstsw
inc
mov
cmpsb
mov
loopne
mov
and
das
test
inc
adcb
lock
adc
add
push
push
lahf
jl
or
pop
lea
push
leave
js
mov
xchg
cli
jp
aas
or
je
and
imul
movsl
stos
in
outsb
rolb
inc
xor
fbld
ja
push
nop
fldenv
push
jl
lods
sbb
js
test
repz
imul
jo
gs
push
and
xchg
add
lods
jecxz
clc
lock
push
jbe
jne
adc
or
out
lret
jbe
or
lods
mov
push
cmpsl
push
adc
fcompl
iret
adc
xor
cs
adc
or
lock
inc
adc
xchg
clc
mov
push
insl
jb
push
ret
or
cmc
jo
pop
push
dec
or
xor
mov
adc
dec
push
sbb
fiadds
push
pop
mov
test
imul
cs
lcall
cmp
mov
mull
or
inc
shl
push
jno
xchg
push
shlb
insb
jae
add
xchg
lcall
pop
mov
leave
add
pop
pop
lods
in
je
jbe
mov
mov
ss
shlb
sub
jmp
or
push
xor
in
xchg
push
jp
icebp
loopne
ljmp
sbb
push
lods
mov
jns,pn
stos
sahf
or
movsl
jle
sub
add
cmp
pop
pop
pusha
popf
sbb
add
popf
shrb
and
jbe
and
mov
pop
js
mov
mov
das
aam
cs
daa
push
fmuls
mov
cwtl
push
mov
in
lcall
cmp
push
jle
xor
and
ret
insl
loope
cmp
dec
jo
xchg
jbe
add
sbb
mov
insl
xchg
mov
daa
cmp
mov
sbb
mov
cmp
iret
xor
fcmovnu
imull
mov
sbb
push
pop
mov
mov
insl
outsb
clc
lods
orb
aam
repnz
add
mov
adc
mov
lds
insl
or
test
sbbl
fadd
mov
mov
cwtl
shrb
sbb
les
pop
jecxz
cmc
push
inc
mov
pop
mov
mov
cvtdq2ps
inc
cld
and
lret
dec
jge
cmc
or
and
dec
lods
out
subl
mov
jmp
sub
repnz
xchg
int
sarb
movsl
mov
shrb
add
push
adc
sbb
add
and
pop
aaa
adc
test
adc
push
sub
stos
mov
adc
jnp
mov
inc
adc
push
mov
mov
adc
cwtl
jl
add
push
and
push
stos
add
jmp
dec
lds
into
ljmp
inc
or
pop
cs
adc
xchg
xchg
or
dec
loop
sbb
test
xchg
mov
rol
mov
lret
pop
mov
xor
and
in
cmovno
sbb
and
add
addb
movsl
bound
jle
sub
loop
scas
sbb
sub
add
and
stos
rorl
ds
inc
pop
pop
mov
xor
dec
mov
or
scas
and
sbb
dec
jb
xor
adc
insb
cmp
mov
mov
xchg
pop
jo
or
inc
mov
adc
sub
sbbl
jnp
push
jbe
mov
ret
inc
cmp
mov
sub
or
shrb
jo
ljmp
mov
push
sbb
sbb
cmp
mov
jmp
add
sub
imulb
xor
fldcw
inc
xchg
ds
repnz
pop
inc
mov
xchg
lods
mov
enter
or
add
test
mov
inc
addb
fwait
mov
push
mov
in
sub
or
mov
xor
push
jl
jle
jle
xor
push
leave
cmpsb
or
bound
mov
mov
inc
rcr
sahf
loopne
dec
je
ds
pop
arpl
icebp
shr
cltd
jbe
dec
push
push
sub
in
outsl
in
adc
inc
in
xor
adc
jle
push
sar
cmp
call
pop
test
negb
aam
inc
push
cmc
mov
mov
inc
cld
repz
adc
js
sahf
lods
jb
mov
imul
mov
out
pusha
add
in
rcr
hlt
adc
and
enter
pop
cmp
lret
scas
or
jge
xchg
mov
ror
ss
movb
lret
add
pusha
xor
es
mov
in
test
sub
or
mov
add
jbe
mulb
test
cmpsb
fisttpll
add
dec
xor
or
or
push
shlb
push
lods
sbb
mov
pusha
mov
test
xchg
push
mov
mov
hlt
cmp
andb
and
outsl
sbb
cmp
jecxz
icebp
fcomps
pop
sub
ss
cmp
loopne
orl
mov
jae
xchg
shlb
push
mov
adc
test
mov
adc
mov
xlat
xor
fsubs
in
inc
jns
sub
cmp
es
adc
pop
mov
ret
jl
jp
iret
mov
mov
int
rcll
lret
push
mov
jl
xchg
or
inc
pop
mov
jae
jo
push
add
adc
mov
ds
sub
cmpsb
mov
shl
inc
inc
test
rcr
ss
cmp
dec
jns
gs
cmp
outsb
sub
arpl
imul
es
or
cltd
cmp
push
sub
mov
ret
clc
adc
or
add
lret
mov
mov
pop
fwait
push
leave
sbb
xchg
clc
aad
enter
or
mov
outsl
lret
cmp
adc
add
ljmp
or
call
mov
or
stos
adc
rolb
scas
scas
outsl
mov
sbb
xchg
mov
in
mov
out
jmp
test
or
jbe
les
xchg
cld
and
pusha
stos
xchg
lret
stos
lcall
push
bound
push
inc
pop
sub
lock
ret
push
fcomps
out
sub
bnd
neg
jl
or
sbb
xchg
jbe
in
sahf
mov
adc
mov
mov
mov
lea
or
cmpsl
movsb
push
lods
call
stos
xor
push
shlb
cmp
pop
shrb
repz
xchg
push
fs
out
lcall
imul
cld
inc
sub
push
andb
or
loop
push
and
jo
imul
andl
sbb
jmp
bound
into
pop
jecxz
test
lods
lods
sbb
cmpsb
dec
xchg
adc
and
sbb
add
repnz
mov
insb
sbb
pop
sahf
jnp
jp
cli
add
or
pop
cmp
cmp
push
fiaddl
sbb
xor
dec
faddp
add
push
or
rcrb
mov
addr16
pop
xor
sbb
aam
push
push
xlat
pop
push
lods
and
mov
mov
mov
jbe
inc
loopne
mov
je
test
adc
mov
loop
and
int3
aam
add
dec
sub
push
mov
ret
adc
xor
xchg
subl
xchg
icebp
mov
adcb
ss
jle
stos
in
out
movsl
mov
js
or
pop
xchg
inc
jl
hlt
adc
add
push
popa
ret
in
cwtl
adc
lock
pop
inc
jl
hlt
mov
pop
mov
pusha
roll
ljmp
jnp
xchg
and
adc
pop
test
jns
jo
arpl
les
sub
or
inc
ret
out
jne
add
loope
and
sahf
loop
loope
enter
insl
stos
push
add
xor
nop
mov
jl,pn
mov
dec
jg
lods
int
dec
jbe
jle
out
js
pop
cwtl
es
fidivs
jo
sbb
jb
jp
adc
or
push
xchg
lods
add
adc
movsb
icebp
dec
loope
push
ss
cmp
push
test
mov
add
add
jbe
push
add
hlt
rcrb
test
mov
insl
sbb
mov
mov
cmp
push
sbb
pop
xchg
lods
stos
insl
push
xor
inc
pop
jmp
sbb
push
mov
push
xchg
add
xchg
movaps
mov
mov
sbb
cmp
add
pop
jecxz
mov
cmpsb
push
and
push
and
outsl
adc
add
subb
andb
or
add
mov
mov
push
lock
rorb
lods
jbe
adc
add
mov
int3
ss
into
fsubl
dec
inc
mov
or
imul
jl
aam
and
sub
lret
orb
add
lods
mov
add
pop
adc
fs
inc
insb
adc
call
gs
lods
ret
pop
jmp
mov
cld
cmp
nop
in
mov
mov
or
sarb
test
adc
xchg
add
mov
pusha
push
adc
jge
cld
mov
jmp
ret
add
jmp
mov
inc
inc
adcl
iret
jno
imul
out
test
push
lock
shlb
iret
mov
enter
sbb
ds
xor
mov
xchg
fsubs
fidivs
or
xchg
add
mov
dec
clc
stos
mov
push
inc
adc
insb
xchg
into
lods
test
push
xchg
cmc
inc
rclb
fidivs
pop
xor
out
jnp
bound
shrb
xchg
and
add
add
cmp
test
sbb
mov
inc
test
inc
cmp
push
xchg
dec
add
dec
lods
lods
nop
jo
pusha
testb
dec
and
cmc
jp
sbb
inc
jne
pop
cmpsb
cmpb
cmp
aas
adc
ds
stos
roll
add
shlb
mov
dec
loop
je
add
or
std
repnz
mov
push
pop
cmp
popa
insb
js
push
mov
cmp
lahf
enter
dec
adcl
aam
push
jnp
loope
push
loop
fimull
cmp
cmpsb
mov
movsb
push
mov
push
pop
or
subb
mov
out
leave
ljmp
add
jo
sub
jp
test
addr16
addl
sub
inc
outsl
mov
scas
or
fisubl
or
add
imul
mov
push
shlb
and
cld
adc
ljmp
pop
inc
mov
imul
pop
or
cmp
movsl
lret
add
adc
mov
adc
fistpl
movsb
clc
out
and
notb
icebp
sahf
add
mov
aaa
cmpsb
mov
fidivl
add
jns
inc
mov
or
outsb
adc
sbb
pusha
loope
js
cmp
mov
enter
loop
rcl
jecxz
rcrl
mov
or
mov
mov
add
stos
test
sub
or
in
cwtl
fidivl
shl
test
pop
call
dec
out
xchg
lret
mov
cmp
push
cmp
mov
orl
and
lret
push
cmc
lret
add
int
sub
into
js
xchg
pop
xchg
stos
lock
jmp
xchg
and
pusha
js
ret
inc
cmp
mov
sub
mov
pop
pop
sarl
adc
movsb
xchg
push
dec
xchg
mov
jle
mov
icebp
clc
int
test
mov
test
xor
hlt
inc
es
call
sti
ret
xor
lret
adc
sbb
popf
mov
fwait
sahf
test
stc
mov
xchg
pop
out
into
in
add
js
fistpl
pop
dec
inc
mov
call
ret
fs
or
jmp
add
adc
cmp
mov
xor
std
inc
pop
push
inc
jo
mov
and
push
xor
lods
loopne
cld
fs
sbb
imul
pop
jl
aam
data16
cmpsb
ret
into
mov
xor
hlt
xchg
fbstp
mov
add
rclb
lcall
xchg
lock
cli
loope
adc
adc
push
test
sub
test
xchg
je
cmc
cmp
dec
cwtl
inc
mov
push
add
xor
inc
lods
xchg
mov
or
roll
cmp
movsl
pop
inc
shlb
jl
inc
test
outsb
aam
mov
fs
mov
xchg
sub
cmp
icebp
ret
cld
popa
xchg
add
test
mov
movsb
fimull
mov
in
sbb
fstpl
sub
jb
add
or
insb
add
stos
push
inc
jo
cmp
push
scas
rorb
mov
dec
lds
xchg
aaa
outsb
jg
outsl
mov
push
inc
faddl
and
sbb
add
push
imul
cmp
cmc
repnz
mov
cli
test
pop
movsb
jne
adc
gs
pop
mov
add
and
mov
std
pusha
mov
push
rcrb
adc
sbb
mov
outsb
mov
push
push
fsubs
jle
orb
jmp
ja
xor
sahf
in
push
and
pop
inc
xor
sbb
mov
add
ss
sub
dec
push
jmp
add
pusha
cmp
cli
add
or
add
sarb
sarl
stos
adcl
ficoms
inc
and
lcall
xor
or
jbe
test
int3
pop
ds
ficoml
pop
mov
inc
mov
leave
data16
sub
cmp
pop
xchg
xchg
pop
loopne
rcrb
scas
fstps
mov
sub
leave
pop
cmpsb
adc
or
mov
sub
sbb
mov
jle
cli
cmpsl
pop
push
pop
dec
inc
inc
cmpb
dec
inc
fsubl
popf
and
cmp
lods
inc
or
jp
sub
movsb
in
mov
add
sar
push
in
dec
sbb
aaa
loop
or
fmul
inc
and
into
xlat
mov
dec
enter
jp
rcll
stos
and
insl
popa
cwtl
cmc
jle
pusha
cld
xorb
std
call
pusha
push
les
adc
sbb
ds
pop
or
cmp
add
sbb
pop
pushf
xchg
and
pop
inc
lds
or
add
sbb
adc
les
movsb
outsb
mov
adc
ficoms
jl
lods
add
add
sub
jmp
jmp
inc
jle
sub
dec
ret
or
mov
dec
call
test
out
sub
mov
sub
cli
and
or
stos
xor
push
jbe
push
xchg
adc
rolb
fdivs
inc
push
adc
cltd
jg
cmp
xchg
push
sub
sub
sub
jbe
mov
push
daa
inc
cmp
cmc
andl
lahf
xchg
or
iret
unpcklps
adc
repz
inc
stos
push
inc
push
mov
cmpsb
cmp
and
inc
popa
xchg
and
es
mov
sahf
jl
mov
mov
bound
cmp
pushf
sub
mov
ror
push
repnz
movl
in
movb
stos
sahf
movsb
loop
inc
push
ret
mov
pop
sub
xchg
xor
push
ret
mov
xor
shlb
cwtl
pop
mov
lods
popa
mov
loop
push
mov
dec
and
sbb
aam
xor
sub
mov
xor
jle
inc
push
xchg
sbb
clc
dec
repnz
dec
inc
imul
iret
scas
mov
mov
mov
mov
fxch
mov
adc
xor
icebp
rorb
jnp
xchg
mov
subl
test
mov
cmp
lock
mov
push
dec
cmpsb
idiv
mov
pusha
xor
test
inc
inc
and
pop
mov
stos
pop
add
pusha
xor
add
sbb
or
push
mov
fisubl
ret
or
pop
push
dec
adc
scas
and
xchg
into
or
push
dec
inc
mov
imul
cmc
repnz
pop
loope
push
cld
or
sbb
jp
jp
pop
mov
dec
mov
les
icebp
add
push
mov
xor
sahf
or
or
xchg
and
clc
insb
aad
mov
push
sahf
mov
inc
xor
enter
sbb
enter
adc
or
dec
dec
je
cmp
dec
push
adc
repz
sub
mov
sbb
in
pop
pop
fiaddl
out
mov
pop
push
cltd
jbe
adc
out
into
and
or
or
jl,pt
loopne
shlb
pop
in
pop
mov
dec
mov
push
dec
xchg
push
movsb
lret
stos
pop
adc
lock
or
inc
push
inc
fbstp
adc
pushf
nop
js
stos
adc
mov
push
imul
hlt
fdivr
in
cs
loopne
ret
add
js
sbb
shrb
mov
loope
addb
add
inc
sti
or
gs
xor
dec
loop
pop
imul
pop
and
push
rolb
xchg
cmp
movsl
push
xchg
push
sbb
andl
dec
mov
cmpsb
cmp
mov
sbb
je
mov
lahf
xor
repnz
mov
pushf
xchg
push
out
dec
mov
sub
lods
jno
pop
ret
aas
hlt
stos
lods
mov
xor
mov
xor
pop
clc
test
jp
jmp
gs
and
cld
sbb
cmp
push
ss
scas
inc
dec
fcom
rorb
or
and
lret
sub
pop
dec
or
jge
jp
jne
mov
mov
pop
fbld
cli
test
imul
and
daa
mov
int3
xor
fcmovnb
and
push
out
pop
push
xor
and
dec
sub
cmp
jne
inc
rorb
push
mov
lahf
sti
ds
lock
in
aad
ror
or
adcb
sub
lcall
sahf
ror
loop
dec
add
or
rolb
fisubrs
xor
mov
fwait
push
and
test
mov
test
in
or
jle
test
mov
cs
loope
out
stos
inc
es
sub
or
fadds
loop
cmc
int3
scas
repz
push
cltd
push
rcl
add
mov
cltd
fldl
mov
add
dec
and
or
pusha
ljmp
incb
arpl
js
cmp
hlt
addb
data16
mov
xor
cld
insb
mov
mulb
fildl
mov
jle
inc
mov
and
imul
mov
outsl
or
jp
push
ror
sub
pop
add
inc
dec
repnz
xor
inc
add
sub
xor
gs
dec
add
dec
push
push
jo
jle
jmp
xorb
sar
call
aam
int
dec
xor
out
push
cmp
out
xchg
ret
xchg
push
mov
inc
push
icebp
push
jl
hlt
movsb
ja
pusha
subl
sbb
inc
and
int3
subb
je
push
mov
scas
lret
and
pop
lock
stos
sahf
test
pop
mov
sti
mov
pop
push
or
push
ljmp
dec
and
dec
pop
xor
jo
lock
mov
cwtl
loopne
jecxz
and
in
popf
sbb
inc
push
pop
lcall
xor
pop
lcall
test
not
push
lods
sub
daa
lock
inc
sub
or
imul
jo
lods
out
push
addl
sbbb
xchg
es
xor
les
add
sub
jo
mov
push
push
xchg
push
pop
aaa
mov
push
insb
aas
mov
mov
push
pop
cli
adc
adc
int3
inc
hlt
dec
repnz
mov
push
add
push
mov
sahf
jne
pop
adc
add
push
dec
jge
test
or
mov
jb
xchg
sub
gs
shl
call
xchg
loope
xor
popl
push
test
test
pop
insb
push
sub
into
jecxz
xor
ret
lcall
icebp
imul
adc
dec
pop
jmp
call
and
and
cmp
cmp
mov
add
inc
sbb
ret
adc
jo
xor
push
les
cmp
add
test
xchg
push
js
mov
push
pop
out
loope
outsl
dec
adc
jb
push
mov
add
or
xor
leave
pop
xor
cli
mov
add
add
sbb
inc
sub
pop
hlt
pop
out
cmp
fidivl
add
dec
cmp
push
sbb
insb
and
sbb
lahf
inc
imul
popa
push
dec
movsl
add
insb
xor
rolb
and
jae
xlat
xchg
push
push
fldenv
in
push
scas
mov
or
scas
push
lahf
xor
push
mov
sbb
pop
sub
push
loope
cmp
imulb
push
inc
adc
jge
popf
inc
dec
insb
test
sub
lcall
out
mov
inc
mov
push
clc
inc
lcall
dec
pusha
push
out
testb
and
loope
pop
rorl
inc
cmpl
lcall
int
sbb
cwtl
cmp
call
lds
or
daa
add
ret
ret
push
cmovp
xchg
addb
repnz
test
fwait
inc
jmp
sub
clc
xor
sbb
or
xor
stos
and
orb
xor
loopne
adc
xchg
xor
mov
les
cli
push
pop
fs
mov
xor
mov
mov
push
test
mov
ljmp
call
call
adc
mov
mov
decb
dec
xor
push
sbb
sbb
pusha
mov
sbb
dec
les
and
push
sti
xchg
mov
jnp
in
dec
pop
lcall
lret
rorb
sub
xor
nop
lcall
daa
pop
and
sub
dec
popw
xchg
pop
imul
imul
orl
add
dec
js
jb
mov
test
loop
inc
stos
mov
fcomp
cs
add
ror
clc
fidivrl
or
lcall
lock
xchg
xchg
js
or
addl
sbb
mov
test
or
pop
xlat
xchg
rorb
adc
adc
inc
bound
insb
mov
outsb
push
adc
mov
cmp
xchg
push
ret
nop
or
fsubs
sbb
fcmovbe
and
mov
sahf
cmp
insb
dec
cltd
dec
decb
loopne
or
push
xor
iret
aam
dec
fdivl
push
sub
inc
pop
ret
fistps
std
jmp
mov
add
or
call
pop
lock
orl
mov
mov
xchg
push
bound
xor
sti
sbb
xchg
push
insb
testb
test
or
adc
inc
hlt
cmc
call
xchg
nop
sub
mov
mov
stos
sbb
inc
and
adc
cli
mov
lods
jne
je
sbb
aaa
adc
mov
pushf
cwtl
jnp
sarb
sbb
push
sub
jb
xchg
cli
or
push
scas
aad
push
mov
or
cld
leave
shlb
dec
pusha
mov
add
push
ret
cmp
pusha
mov
outsb
mov
mov
insl
or
loopne
movsb
adc
fs
ret
cmp
push
loop
lock
push
sbb
icebp
mov
cmp
dec
mov
push
mov
loop
int3
mov
int
push
iret
lret
aaa
int
jl
test
push
lea
sbb
enter
xchg
push
or
outsl
mov
pop
push
pop
nop
pop
push
pop
mov
push
sub
jp
mov
mov
enter
xor
popa
dec
mov
lret
sub
adc
icebp
hlt
xchg
adc
mov
in
xor
push
mov
pop
or
pop
adc
mov
je
sub
sub
scas
sub
mov
mov
inc
push
dec
pop
aam
push
adc
dec
jecxz
int3
adc
ficompl
sbb
pop
fwait
jo
shrb
and
push
das
or
out
jmp
loopne
mov
dec
push
jbe
sub
jmp
mov
or
dec
lock
sbb
dec
adc
nop
mov
push
clc
call
ss
sti
pop
pmuludq
cmpsb
pop
fldt
js
je
dec
gs
push
rcll
xchg
test
shll
pushf
fs
or
inc
dec
mov
sub
test
pop
fwait
mov
sbb
sbb
inc
and
ds
push
xor
xor
sbb
jge
dec
pop
repz
or
out
xchg
sbb
sbb
mov
lods
data16
mov
pop
ljmp
mov
xor
mov
adc
insl
gs
inc
xchg
or
shll
stos
cmp
inc
dec
les
clc
hlt
xor
cmp
add
test
or
frstor
subb
mov
mov
mov
mov
mov
mov
pop
popa
test
push
inc
push
pop
repz
imul
sub
add
jl
mov
and
lahf
dec
sub
in
jmp
inc
sti
push
mov
dec
clc
inc
shll
iret
pusha
pusha
xchg
pop
inc
into
cmp
shrb
inc
inc
push
push
lret
cmpsb
jmp
jp
bound
repnz
push
xchg
jns
push
mov
nop
gs
cmpsb
pop
cmp
push
inc
adc
adc
es
mov
sub
push
push
sbbb
cmpsb
add
fs
inc
scas
dec
insb
mov
outsb
xor
leavew
mov
jp
lret
call
cli
xchg
aad
push
mov
hlt
xlat
mov
mov
rolb
pop
mov
std
push
and
add
push
cld
loop
pusha
rolb
add
test
add
pop
hlt
adc
push
add
data16
adc
aad
outsb
shrb
xchg
lcall
std
testb
sub
int3
mov
sti
mov
outsl
mov
dec
sbb
arpl
pop
pusha
es
inc
adc
ficoml
adc
jbe
add
shrl
inc
divb
mov
cmpsb
loopne
push
rorb
data16
lahf
add
push
repnz
mov
ret
pop
hlt
cmpl
xchg
shlb
fisubrl
sbb
divps
pop
lods
xchg
test
mov
and
mov
pusha
cmp
aam
mov
mov
fisubl
dec
mov
mov
scas
inc
test
dec
jecxz
mov
mov
mov
testb
cli
add
add
stos
add
jae
dec
sbb
jbe
in
add
sub
test
enter
loopne
mov
jns
mov
mov
jo
shll
sbb
push
add
adc
mov
pop
scas
mov
xor
addb
push
js
push
mov
push
lcall
js
mov
rcl
mov
sbb
or
adc
pop
pop
xor
jnp
bound
sahf
jecxz
or
and
dec
int3
orl
mov
jecxz
inc
mov
inc
ljmp
push
out
add
push
gs
test
mov
push
in
rcl
sbb
pushf
mov
xchg
cmp
shrb
pop
xchg
jle
jmp
mov
pop
pop
push
jnp
adc
sarb
rcrb
shlb
or
movsl
sbb
jge
je
push
cmpsb
test
push
insl
scas
or
mov
push
and
cld
cli
pop
icebp
fiaddl
lds
pop
dec
nop
hlt
adc
and
sbb
out
inc
test
nop
mov
mov
mov
push
cmc
dec
fdivr
add
adc
xchg
stc
sar
fcoml
das
mov
inc
mov
push
or
add
ds
bnd
lcall
insb
inc
add
cmpsb
aas
js
or
sbb
lcall
enter
fimull
ds
insl
lds
hlt
push
cmp
test
test
mov
out
dec
loopne
push
add
lods
dec
pop
sub
jo
add
lds
and
pop
ds
mov
mov
push
and
or
pop
jbe
or
xor
rcrl
enter
add
lods
sub
ds
loop
imul
lods
sbb
rorb
aam
bnd
cmc
xchg
cmc
pop
cwtl
inc
mov
sbb
jns
xchg
jp
or
lea
lock
sbb
cwtl
push
imul
and
and
lret
clc
dec
or
and
mov
dec
xchg
xchg
mov
pop
push
push
in
arpl
adc
sarb
mov
ret
rcrb
dec
mov
aaa
ds
sbb
shlb
xor
lods
hlt
mov
ds
test
inc
mov
fcomps
xor
inc
jl
inc
inc
mov
dec
push
sbbb
sbb
add
rcrl
or
inc
je
mov
or
add
mov
push
push
mov
rorl
aam
lods
and
and
sbb
inc
dec
jl
call
xchg
adc
sbb
inc
lcall
mov
mov
push
add
add
ret
fcomps
hlt
lret
adc
leave
push
ds
add
lcall
sbb
inc
mov
pop
and
xor
jecxz
rorb
enter
xchg
mov
sub
adc
pop
adc
and
xor
push
fstps
xor
mov
ret
imul
int3
clc
in
dec
je
push
imul
sbb
mov
xor
jmp
cmp
add
lods
mov
lods
or
inc
rcrl
loope
xor
pop
ret
and
imul
out
push
or
shlb
mov
push
and
mov
cld
js
inc
mov
mov
fcompl
insb
jbe
cli
push
add
subl
imul
pop
mov
push
call
mov
test
dec
mov
sahf
pop
mov
or
or
test
shrl
call
fcomps
out
xlat
pop
push
inc
sbbl
rorb
push
rolb
xor
adc
push
adc
fistpll
je
pop
call
jp
adc
and
fwait
scas
sub
push
cmp
pop
jne
lahf
test
out
jbe
sbb
test
xchg
push
push
lret
cmpsl
jbe
lock
push
sti
or
xchg
aas
adc
in
or
and
add
push
sarb
test
jbe
inc
pop
mov
fs
pop
lea
push
xchg
xor
or
push
incb
xchg
sbb
cmp
cld
jo
sub
sbb
pop
push
iretw
test
sub
test
mulb
xor
jmp
inc
decb
mov
in
mov
push
adc
sub
jb
push
arpl
pop
mov
cli
and
hlt
add
pop
out
cmpl
push
leave
es
adc
or
nop
mov
push
mov
sub
push
mov
fcmovbe
imul
es
lret
das
dec
jge
push
repnz
and
neg
lds
shll
jge
xlat
adc
in
add
and
ljmp
xchg
jo
push
enter
ret
sbb
movsl
push
dec
fs
inc
cmpsb
xchg
dec
mov
gs
and
das
or
cwtl
pop
in
mov
loop
push
cmpsb
enter
cld
pushf
int
cmp
pop
test
in
or
pusha
mov
loope
mov
adc
xchg
clc
jo
ss
jne
addb
cmpsl
hlt
fwait
mov
or
rclb
jbe
arpl
xorb
ljmp
push
sti
or
mov
or
loop
cld
sub
push
push
mov
ret
pusha
add
out
dec
fs
sub
push
jnp
mov
es
add
adc
pop
lret
bound
mov
rolb
mov
dec
mov
sbb
movsl
jle
mov
and
aam
push
es
cmp
xor
and
inc
fidivl
mov
inc
cmp
fwait
hlt
loopne
and
and
xor
mov
pop
mov
ds
shlb
jg
popa
rcll
mov
shll
inc
ret
adc
push
push
mov
pop
nop
dec
sbb
hlt
dec
test
pop
in
call
std
push
push
in
and
mov
and
loopne
mov
and
cmp
add
les
add
lahf
push
js
mov
into
sbb
pusha
push
jo
ret
sbb
aaa
sub
or
push
pop
js
call
imul
dec
shlb
mov
clc
cmp
xchg
lret
test
mov
mov
hlt
mov
jp
mov
cmp
mov
adc
jecxz
jecxz
test
sbb
or
xchg
je
jl
orb
pop
sbb
stos
loopne
sub
add
mov
jl
mov
sbb
pushf
adc
push
xchg
out
adc
ret
fmuls
xor
sbb
ljmp
push
push
or
out
cmpsb
bound
mov
rclb
cltd
pop
test
je
mov
push
arpl
test
sub
add
adc
les
and
pop
pushf
pop
push
icebp
sub
xorb
lahf
jl
mov
movsl
in
add
push
jo
add
inc
sbb
push
rorb
add
xchg
ljmp
lahf
jbe
inc
mov
xor
jecxz
push
fnstsw
mov
mov
xchg
inc
dec
sbb
or
inc
aam
outsb
sbb
inc
cmp
sub
or
into
scas
push
rorb
sarb
inc
or
push
call
mov
mov
xchg
call
fidivs
pop
pop
xor
test
subl
dec
xor
js,pn
pop
nop
adc
pusha
cmpsb
lahf
imul
add
rol
mov
lcall
imul
lods
sbb
cmp
icebp
enter
je
test
xchg
inc
faddp
loopne
cmpsb
sub
cmc
push
rcl
push
scas
jl
test
xor
sbb
in
mov
cmovs
cmp
mov
outsb
mov
inc
fs
ds
cs
mov
icebp
push
pusha
rolb
sbb
pushf
leave
loopne
js
stos
adc
call
and
push
push
mov
pop
lods
outsb
imul
add
sbb
rorb
scas
push
sbb
inc
xor
dec
test
inc
inc
jo
jne
push
scas
js
outsl
xchg
pop
fsub
push
push
out
cmc
pop
adc
rcrl
mov
pusha
mov
mov
inc
pop
ss
test
filds
xor
insl
push
adc
pop
mov
cmp
into
scas
mov
pop
mov
dec
and
push
fdiv
dec
imul
imul
dec
push
cltd
sbb
rcl
sub
fwait
mov
sbb
es
pop
cmp
cs
adc
jg
xchg
add
jb
push
cmp
bound
in
pop
js
lods
and
adc
sub
fcoml
pop
popa
pop
sarl
push
imul
mov
mov
in
mov
cmc
adc
insl
cs
ret
push
lret
imul
pop
shrb
xchg
mov
fists
mov
sti
cmp
push
push
adc
loopne,pn
pop
fldl2e
adc
pop
and
loope
aam
jl
sbb
mov
mov
lods
lea
and
cmp
or
nop
inc
lea
xchg
add
popf
in
shlb
pop
sbb
scas
xchg
dec
in
lret
dec
dec
xchg
icebp
into
jg,pn
lods
add
mov
test
inc
xchg
mov
add
pop
pop
decb
stos
mov
dec
outsb
or
mov
popa
xchg
mov
add
aam
mov
jbe
dec
sub
xor
push
inc
mov
sub
outsl
mov
push
dec
push
dec
loopne
xor
outsl
pop
sub
cmpsb
shll
or
sub
sbb
sahf
jb
inc
jecxz
mov
push
xchg
push
mov
cmpsb
push
pop
ljmp
push
add
mov
sub
imul
pop
jmp
adc
dec
push
lds
pusha
mov
add
xchg
xorl
insl
stos
lods
repnz
xor
cmp
xor
xor
adc
mov
push
mov
add
mov
mov
std
mov
mov
ret
xchg
sahf
pusha
jge
add
jl
dec
adc
test
xchg
cmp
cs
xor
cmp
or
lret
fcmovbe
adc
cmpsb
jns
lcall
inc
scas
icebp
add
xchg
dec
jmp
fdivs
push
and
fists
mov
jbe
mov
cmp
sub
shrb
push
adc
lock
add
aas
add
in
push
dec
dec
sarb
dec
jo
mov
clc
push
mov
fisubrl
sub
jns
xor
mov
test
mov
add
dec
cmp
mov
fnstcw
and
data16
and
or
or
add
cmp
sub
push
mov
mov
sub
add
lcall
add
jmp
mov
js
aam
cmpsb
push
xchg
sahf
cltd
daa
or
int3
jbe
adc
pop
mov
loope
mov
pop
xor
rcr
out
jb
aam
inc
arpl
add
pop
pop
dec
cltd
mov
test
test
stos
arpl
pop
daa
gs
shlb
push
cmpsl
and
call
xchg
mov
sub
movsb
mov
lea
inc
mov
cmp
into
or
ret
mov
or
xor
or
mov
cltd
outsb
push
cmp
fisubrs
dec
and
sub
adc
xor
mov
sbb
push
jl
mov
inc
add
push
jp
sub
test
dec
mov
aam
push
aam
pop
jle
push
mov
lahf
push
notb
add
cmp
jo
xchg
sub
inc
repz
subl
les
andb
push
and
mov
or
xchg
add
or
xchg
lret
and
push
and
rclb
and
xchg
jo
push
mov
sub
add
ret
fwait
jo
aad
es
cmpl
xor
sub
add
mov
inc
sbb
in
jnp
dec
or
or
sbb
mov
dec
ljmp
dec
pop
push
sub
cld
cld
push
mov
loop
stos
test
int3
jo
or
mov
ss
and
pop
in
prefetch
shrb
jmp
push
cmp
mov
mov
and
sub
sar
fdivrl
hlt
push
nopl
movsb
jmp
mov
mov
cmpsb
inc
xchg
daa
push
mov
jbe
pop
push
fstpt
addl
mov
test
sub
js
jp
inc
sbb
addl
pusha
sub
stc
or
xor
xlat
cwtl
add
lahf
xor
sahf
xor
ljmp
es
gs
aam
sti
es
and
mov
movsb
push
xor
sub
mov
cli
fsub
push
mov
shl
cmpsb
lock
stos
sub
ljmp
rorb
push
cmp
sub
sub
add
jge
inc
lcall
addb
mov
xchg
push
shufps
pop
stc
arpl
repnz
das
adc
push
inc
push
and
ljmp
inc
xor
fs
cmp
xchg
mov
sbb
mov
js
loope
dec
stc
popf
je
lock
pop
ret
fadd
jl
cmpl
push
loop
pop
enter
call
ficoml
es
fcoms
mov
gs
mov
ret
push
imul
cld
call
push
inc
loope
fnstsw
les
mov
fsubs
push
jle
aad
andb
nop
es
jmp
pop
or
cmp
push
mov
enter
or
adc
or
arpl
sbb
xchg
cs
xor
and
adc
jo
loope
clc
out
inc
dec
dec
movl
enter
sahf
xchg
mov
or
xchg
lret
stos
fldl
mov
into
jp
movsl
ds
mov
pop
xchg
mov
mov
sub
or
inc
pusha
jne
push
xchg
idiv
roll
ljmp
xor
nop
lcall
aad
faddp
pop
into
inc
inc
sti
sub
dec
sub
push
lock
ss
adcl
iret
mov
dec
mov
nop
rolb
loopne
jge
fs
cmp
add
pop
xchg
xor
mov
das
push
xchg
std
and
or
jo
xchg
in
sbb
shll
ror
int3
cs
inc
cmpsl
add
push
xor
jmp
inc
pusha
push
shl
push
xchg
sub
js
stos
cmpsl
xor
sahf
jmp
insb
push
mov
add
mov
test
shrb
in
loop
jecxz
repnz
shlb
loopne
dec
jo
add
imul
mov
gs
insb
adc
jl
or
mov
repnz
pop
test
cmp
adc
movsl
lahf
add
sbb
inc
roll
cmpsb
push
xor
loop
jns
inc
mov
dec
mov
sub
sub
xchg
test
jo
push
mov
aad
add
push
lods
mov
mov
sarb
sbb
lods
insl
lcall
lret
mov
jecxz
dec
add
jmp
push
mov
test
inc
and
rcl
loop
inc
out
lds
xor
sbb
ss
pop
mov
jbe
lock
sub
xchg
movsb
pop
or
adc
adc
adc
ds
jmp
sbb
fcmovb
loope
ret
lock
lret
and
insl
into
inc
and
push
ret
mov
xor
pop
addb
jo,pt
mov
adc
xchg
mov
or
and
pop
inc
cmp
les
mov
dec
push
push
in
mov
adc
xor
fdivp
mov
addb
adc
fdiv
add
mov
fisubrl
mov
lods
jne
mov
addb
orb
ss
fdivrs
test
inc
xchg
add
inc
les
xchg
jge
loop
or
fistl
in
cmp
mov
insl
sub
mov
add
imul
mov
add
jecxz
shlb
loop
mov
mov
mov
or
push
push
push
ficompl
fcom
or
insb
rorb
mov
ret
xor
mov
or
jecxz
push
dec
add
pushf
cmpsb
jge
cli
add
test
push
push
push
push
xchg
xor
sub
dec
in
jg
fcmovu
or
or
fidivrs
mov
push
xor
fneni(8087
or
lock
xchg
insb
or
sbb
sub
loop
push
push
pushw
lcall
cmp
sub
push
jle
stos
add
and
mov
sbb
push
jb
arpl
movsl
dec
xor
shrb
mov
jge
push
push
push
sti
mov
cltd
mov
push
mov
lock
cltd
xor
jbe
lods
mov
test
mov
pop
ljmp
enter
add
cwtl
fcom
push
lods
mov
push
movsl
pop
and
loopne
test
mov
addb
dec
xchg
dec
inc
jmp
adc
inc
rcll
cmp
add
dec
xchg
mov
push
scas
aaa
test
rorb
jo
dec
lret
pminub
inc
mov
add
call
add
nop
les
pusha
out
dec
sbb
dec
cli
pushf
std
mov
out
sbb
add
jmp
out
push
adc
aad
leave
sub
jp
mov
sbb
mov
mov
bound
cmpsb
fs
mov
lcall
leave
pop
shl
add
repz
adc
mov
sub
or
xchg
pusha
add
and
fadds
loopne
out
push
pop
aas
add
xchg
inc
add
lods
inc
jnp
aam
mov
lcall
jns
hlt
add
and
sbb
arpl
mov
cld
loopne
pushf
jmp
cmp
mov
or
loop
sub
mov
push
popa
movsb
add
add
and
sub
cli
mov
xchg
cld
add
clc
imul
mov
mov
adc
cmp
xchg
mov
or
int3
sbb
mov
mov
hlt
sub
pop
fmul
rorb
push
dec
pop
pusha
fadds
pop
fisubrl
push
lret
test
or
shrb
andb
cmp
mov
dec
sbbb
lds
add
jbe
xlat
imul
dec
or
mov
mov
xchg
xor
clc
sub
sarb
sbb
popa
je
dec
rcll
pop
jno
mov
ficompl
out
ljmp
jae
pop
cwtl
sub
mov
xchg
icebp
add
pop
dec
add
out
jmp
fs
dec
pop
clc
adc
mov
stos
bound
xchg
push
sub
and
cmp
dec
loopne
mov
and
pop
lret
test
and
pop
mov
outsb
dec
stos
and
push
insb
push
jb
dec
ljmp
push
or
bound
jmp
enter
loope
inc
out
sub
stos
push
sub
jmp
scas
mov
add
cmp
push
and
adc
rcll
repz
sub
testb
or
sub
jmp
or
adc
ret
xorb
cli
inc
popa
push
cli
rcl
mov
jl
mov
ret
adc
cwtl
mov
adc
mov
in
push
fimuls
xchg
out
inc
sub
add
jg
subb
js
lcall
sahf
idivl
outsl
add
mov
sbb
dec
push
sub
sub
insb
sub
sub
mov
test
xor
inc
and
sbb
and
pop
nop
xor
call
cmp
sbb
loopne
sbb
lret
mov
adc
scas
dec
push
daa
dec
cld
and
fiaddl
cmp
aas
dec
iret
repz
adc
push
push
cmp
insl
push
xchg
mov
mov
jge
inc
sbb
into
enter
test
sbb
ret
push
ret
or
cmc
inc
test
cmp
arpl
sub
popf
mov
lods
jb
add
sbb
hlt
push
or
test
std
xchg
adc
add
cmpb
pusha
enter
dec
add
mov
inc
xor
outsb
out
fmuls
push
sbb
jecxz
push
pop
lods
rclb
scas
sbb
aad
xchg
pusha
cmp
inc
xor
and
inc
popw
movsb
movl
test
jcxz
sub
mov
les
rorb
adc
or
cmpsb
call
int
xor
mov
mov
or
and
mov
hlt
lods
add
sub
sub
lret
add
mov
push
sub
sbb
dec
jo
mov
pushf
adc
cmp
mov
sbb
lcall
add
insb
or
xor
push
pop
and
mov
sbb
cmc
nop
mov
out
fiaddl
sbb
sbb
pop
inc
pop
aad
inc
mov
jge
cmc
pop
sub
in
pop
add
scas
lea
shlb
adc
jmp
or
push
jne
loop
push
in
mov
xor
ss
loopne
mov
sbb
pop
xchg
cmp
push
add
push
cli
insb
aas
sub
pop
add
jae
pop
clc
and
data16
out
push
push
add
mov
dec
mov
mov
mov
push
dec
enter
cmp
call
in
mov
loopne
add
adc
jo
inc
pop
cltd
ficomps
mov
insb
ret
mov
shll
jge
xor
dec
bound
inc
insb
ja
andb
push
sub
or
sahf
inc
mov
nop
ss
jle
push
pop
sbb
test
and
mov
xchg
mov
data16
movsb
jbe
sbb
xchg
in
inc
or
in
mov
cli
pushf
movsb
mov
or
pop
jbe
sub
or
sub
cmp
pusha
ret
sbbl
pop
mov
movsb
mov
jnp
lock
push
jo
push
adc
pop
lods
xchg
sbbl
pop
test
bswap
mov
fwait
pop
push
mov
sbb
jle
mov
fiaddl
out
out
push
stc
cmp
fildll
mov
lahf
adc
xchg
or
inc
insb
shlb
lcall
cmpsb
adc
pop
mov
jecxz
rcrl
mov
add
je
scas
movsb
nop
pusha
ss
fnstcw
adcl
ficoml
jno
sbb
lods
mov
xchg
cmc
rol
arpl
pop
dec
fsubr
pop
lds
icebp
enter
inc
pop
cwtl
fisubl
pop
mov
pop
sahf
rolb
cmp
mov
dec
cmp
cli
outsb
push
scas
dec
sub
cli
jb
daa
mov
pop
inc
mov
add
test
clc
mov
mov
mov
test
rcll
sub
adc
fstpt
mov
mov
cmpsb
sbb
push
fisubl
pop
sbb
sbb
jae
lret
shrb
mov
ljmp
xor
fsubrl
add
in
ret
jo
insl
push
js
add
pop
es
add
mov
lcall
sbb
xor
pop
jne
pop
movsb
jae
pop
mov
fisubrl
ret
ret
test
add
jo
jo
mov
xchg
aam
ljmp
jecxz
cli
sub
call
inc
add
add
adc
jne
data16
fcompl
andb
xchg
pop
inc
test
daa
jl
jbe
adc
cwtl
test
mov
pop
mov
adc
clc
clc
and
aam
cmpsb
and
xlat
stos
xchg
in
or
xor
mov
pop
in
sbb
jne
xchg
mov
sub
les
test
adc
sar
and
or
cs
mov
js
xor
mov
js
or
pop
dec
insl
cld
xchg
mov
insb
je
into
adc
ljmp
lret
add
adc
test
int3
dec
add
xchg
scas
movsb
jp
pusha
aam
or
fidivrl
add
ljmp
add
sub
jb
insb
into
and
and
push
bound
or
mov
out
inc
or
and
pop
add
pop
jo
popf
sbb
mov
mov
lret
aaa
call
or
jmp
lods
jge
inc
cmpb
movl
mov
imul
notb
in
fiaddl
fs
pusha
enter
push
push
sub
jge
mov
adc
dec
in
data16
and
xor
arpl
test
adc
stos
cmp
insl
push
cmp
sbb
js
pusha
mov
jo
test
fadd
outsl
mov
mov
mov
into
std
cmp
je
jp
add
and
mov
subb
test
lock
or
or
push
icebp
adc
cmp
add
adc
adc
out
ret
adc
in
aam
push
dec
js
mov
mov
call
test
shlb
sub
adc
pusha
stos
mov
xchg
icebp
sbb
es
add
pop
xor
sub
xor
cs
jae
adc
mov
or
jle
pop
test
test
ret
push
inc
in
cli
bound
iret
cld
inc
dec
adc
add
add
add
inc
iret
cld
sahf
cmp
cmp
rolb
pop
or
push
sub
push
sbb
jp
add
hlt
mov
adc
or
ficompl
movsb
xor
xor
cli
fs
ret
cli
mov
adcb
test
mov
or
mov
sarb
andl
scas
inc
cmp
pop
sbb
and
frstor
jbe
icebp
add
ds
sub
stmxcsr
fs
mov
add
pop
je
add
loopne
inc
cld
rol
rcrb
and
lcall
imul
mov
decb
cmp
jge
fsubl
mov
pop
adc
hlt
or
pop
mov
arpl
lcall
and
push
xor
out
mov
sbb
dec
test
cli
lea
rcl
je
sbb
adc
push
dec
loopne
cltd
push
push
add
jge,pn
or
mov
inc
mov
pop
out
adc
sub
lret
mov
or
mov
mov
aas
movsb
fidivl
out
mov
lret
pop
cmpsb
cmpsb
sub
or
lret
mov
fidivs
into
loopne
push
add
sub
inc
fldt
xor
jbe
sub
mov
sbb
repnz
mov
daa
push
cmp
lods
adc
in
sbb
and
dec
xchg
and
lcall
jmp
mov
lcall
cmp
inc
jbe
loop
push
or
call
cmp
stos
mov
xor
dec
call
mov
sub
in
mov
and
pusha
lods
subb
lcall
test
mov
outsb
sarl
fdivrs
inc
pop
inc
loop
cmc
hlt
pop
sbb
sub
inc
dec
mov
mov
push
fbld
sub
sbb
mov
sbb
fdivl
cli
cmp
rorb
outsl
xor
shl
movsb
mov
sub
pop
test
dec
add
pop
fs
push
fimull
call
mov
push
mov
jle
das
push
lods
mov
shlb
or
jbe
push
sub
sbb
jb
jo
push
mov
mov
mov
test
adc
aad
mov
addl
and
sub
mov
pop
arpl
bound
sbb
pop
push
xor
movsb
aad
enter
xchg
and
ror
jo
ljmp
in
or
xchg
and
mov
fcoml
push
mov
sbb
mov
inc
cli
sahf
add
arpl
xorl
ss
call
jle
hlt
mov
dec
movsb
loop
nop
mov
mov
cmpsl
add
lock
and
pop
les
les
std
and
loop
mov
mov
and
xchg
lea
loopne
data16
pushf
fiadds
pop
adc
and
cmp
test
sbb
mov
jg
add
test
ss
sbb
es
jne
xchg
or
push
shlb
cmp
pop
dec
mov
mov
mov
inc
js
jmp
or
inc
cli
or
push
or
jle
test
add
imul
xchg
int3
fldenv
idivb
imul
outsl
jb
stos
push
lock
ficoms
lods
push
push
sbb
loop
insb
push
shrl
or
cmpsb
xorb
sahf
mov
sbb
sbb
adcb
and
out
xor
in
lret
xchg
call
dec
and
subb
adc
pop
repnz
scas
lahf
add
sbb
inc
pop
mov
sarb
clc
cmp
test
dec
aaa
pop
inc
and
push
into
jmp
push
clc
add
mov
imul
hlt
mov
and
push
sbb
and
jb
ds
inc
rol
in
call
and
imul
jns
sub
sub
adc
add
aad
inc
xchg
addl
pop
mov
cs
adc
mov
imul
push
pusha
xlat
sub
pop
push
ficoml
enter
or
push
adc
movsb
sub
mov
or
rorb
sbb
pop
add
clc
mov
or
add
jge
pop
sub
loopne
xor
push
shl
inc
movl
js
adc
mov
dec
jae
inc
jb
mov
icebp
and
in
jns
push
data16
mov
int3
hlt
pushf
add
jmp
out
mov
test
lock
bound
dec
std
add
test
xchg
push
jl
das
mov
test
sahf
mov
mov
pop
mov
dec
sbb
scas
inc
sbb
cwtl
adc
mov
cli
xchg
mov
sti
mov
inc
insl
or
xchg
es
pop
push
es
sti
insl
je
fs
cmp
inc
mov
mov
jmp
lds
mov
sub
dec
adc
sbb
and
lods
sti
inc
push
xor
aaa
cmp
lock
dec
ss
fldt
pop
mov
orl
fwait
add
fcmovb
sub
xchg
and
push
cmpsb
mov
and
int3
imul
mov
inc
xchg
pusha
js
xchg
mov
cmp
mov
mov
mov
mov
xor
pop
pop
mov
shlb
into
shrl
push
push
dec
and
sub
sub
push
sbb
and
push
loopne
push
adc
insl
stos
push
sti
mov
out
lret
or
enter
pop
and
add
sbb
sub
inc
push
add
rorb
shl
push
jae
mov
arpl
cmp
lods
test
jle
or
shll
mov
push
aad
dec
fistl
adc
ffreep
jl
jl
inc
push
push
pop
pop
or
inc
mov
sahf
mov
das
test
or
std
rclb
movsl
cli
inc
mov
mov
adcb
mov
mov
imul
dec
aam
mov
movsb
push
jmp
enter
xor
addb
mov
lock
xchg
cmp
les
cld
stos
hlt
mov
les
pop
movb
mov
std
xor
mov
add
mov
mov
jmp
loopne
fisttpll
and
mov
inc
mov
inc
test
nop
iret
pushf
mov
ds
xor
push
sbb
push
pusha
mov
xor
inc
xchg
push
fsts
mov
andb
xchg
movsl
pop
pop
push
inc
dec
int
sub
xor
fcoms
fldl
jnp
shlb
inc
test
and
xchg
sub
test
popa
sbb
mov
loope
ror
aad
lock
mov
psubd
push
push
push
adc
pop
adc
xor
and
stos
pop
adc
mov
rcr
ss
enter
pop
mov
inc
xor
cmp
clc
mov
dec
or
stos
stos
xor
push
xor
mov
sub
xchg
movsl
push
pop
stos
or
ss
push
loopne
xor
dec
push
mov
xchg
out
pop
ss
push
lods
and
pop
mov
adc
inc
mov
pop
mov
push
lods
ljmp
mov
xor
jge
jp
sbb
out
jecxz
mov
cwtl
jo
leave
add
and
pop
xor
jbe
mov
mov
mov
pop
add
stos
xor
lcall
jbe
str
push
or
movb
cld
mov
ret
inc
xchg
dec
adc
inc
xor
inc
jb
adc
cmpsb
movsb
fadd
jge
pop
mov
mov
daa
xor
flds
inc
pop
ss
cmc
loop
aad
xor
xchg
jle
pop
add
sub
shrb
add
movsl
xchg
and
pop
or
push
sub
mov
jp
push
push
push
mov
js
add
ja
push
pop
ret
pop
jno
push
test
fiaddl
cmp
or
movl
ret
adc
out
xor
nop
add
add
into
pop
push
sub
jbe
cbtw
add
add
lods
sar
shrb
orl
mov
cwtl
mov
jnp
sbb
and
stos
jl
inc
les
xor
or
and
push
push
or
nop
pop
imul
push
push
ds
imul
mov
popa
mov
cmpsb
int
inc
insl
pop
sbb
lcall
imul
insl
ljmp
cmp
imul
rolb
dec
dec
lods
loopne
inc
scas
inc
lds
adc
mov
dec
inc
out
adc
sbb
push
hlt
jbe
push
push
or
adc
negb
sbb
fnstcw
inc
adc
mov
xor
sub
ficoml
nop
lock
rcrb
push
rcl
lods
insl
add
inc
add
pop
or
imul
mov
pop
sbb
jp
subb
fsubs
push
inc
or
push
mov
dec
inc
dec
xor
pop
mov
enter
fsts
add
mov
pop
aam
push
movb
push
ss
cmp
leave
push
lock
fisttps
sub
inc
clc
push
or
mov
arpl
pop
adc
divb
les
gs
and
or
sbb
mov
inc
inc
dec
jmp
icebp
jle
and
loope
mov
cmp
popf
mov
subl
shlb
cmp
inc
cld
jmp
adc
icebp
dec
cmovb
or
adc
jne
test
mov
je,pn
ret
adc
mov
inc
adc
xor
adc
jp
push
push
test
lcall
push
push
adc
ds
sub
mov
inc
les
sub
jecxz
aas
fs
mov
adc
adc
cli
test
shrl
pop
xchg
shrb
jle
cmp
xchg
movsb
lahf
and
sub
in
inc
xchg
jmp
push
sbb
xor
fimull
loope
lret
repnz
insl
adc
adc
lds
xchg
inc
pop
inc
jp
sub
mov
ret
sbb
sub
mov
movsl
xchg
mov
mov
rclb
sbb
jge
adc
stos
and
push
rcrl
sbb
es
mov
mov
in
mov
in
cmp
lret
pop
add
mov
hlt
dec
mov
or
mov
imul
push
cmp
mov
dec
sub
repnz
jecxz
lret
jg
push
or
or
lock
jl
push
mov
cmc
xchg
or
add
jl
sub
jl
jno
int3
imul
lds
dec
cld
addl
test
lcall
sbb
lret
and
push
mov
rcr
add
roll
scas
pop
or
dec
dec
dec
xchg
xchg
ret
lret
and
push
lods
xchg
dec
inc
mov
mov
xchg
inc
rcrb
pop
es
add
rorl
das
add
add
arpl
enter
in
pop
icebp
adc
and
push
jl
loop
into
loopne
fdivr
lock
push
movsb
test
pop
ret
adc
cmpsb
jl
push
mov
and
xchg
lea
les
dec
xchg
mov
push
or
xor
and
rorl
jb
insb
mov
hlt
jl
or
inc
rorl
and
out
push
pop
lret
mov
mov
pusha
bound
and
sub
cwtl
scas
sbb
jb
loopne
sub
clc
or
push
fs
push
or
jns
push
mov
dec
add
gs
mov
pop
hlt
cmpsl
push
pushf
push
sbb
lods
and
add
out
pop
adc
push
adc
pop
xchg
in
cmp
jl
mov
ret
mov
cs
hlt
pushf
inc
or
cmp
cmp
in
stc
cltd
add
insb
add
js
insl
in
mov
fs
mov
push
cld
pop
test
dec
test
insb
sbb
pusha
sub
mov
pop
lock
int3
stos
data16
add
andl
push
jns
jge
hlt
push
jmp
shlb
add
add
dec
push
and
or
popa
jae
mov
mov
bound
test
sbb
xchg
lds
cli
insl
mov
aad
shlb
xchg
popa
sub
icebp
mov
lcall
in
pop
push
xchg
mov
out
ljmp
mov
arpl
loop
stos
fcmovb
xchg
bound
out
sti
pop
sbb
dec
in
xor
es
test
mov
cmpsl
dec
cwtl
add
sub
jbe
pop
cmpl
adc
pop
sub
fadd
or
flds
das
popa
mov
loop
aad
jge
adc
adc
inc
inc
inc
cmpsb
cli
mov
xchg
mov
xor
cmpsl
mov
push
bndldx
lock
sub
stos
mov
cmpxchg
cs
pop
mov
push
rcl
aas
or
incb
adc
sub
or
pop
in
jno
push
jge
js
adc
mov
xchg
mov
into
sbb
pop
insl
jae
jb
shlb
mov
or
lods
jmp
fs
mov
add
rcr
sub
push
xchg
pop
cmp
inc
cmp
fdiv
pop
jp
fcomp
and
fs
sbb
fadd
and
mov
test
xchg
mov
sbb
push
or
pushf
push
cmp
clc
add
pusha
fimuls
add
sbbb
arpl
ljmp
pop
push
shll
fdivl
jmp
inc
cld
sub
pop
and
out
dec
mov
inc
push
inc
out
cmpb
inc
js
pushf
jl
cwtl
mov
xorb
jbe
and
fdiv
inc
je
bound
cmp
aam
push
lahf
or
testb
arpl
pusha
add
pusha
sbb
add
cmp
push
je
ljmp
sbb
sub
pop
mov
addb
dec
sbb
popa
sub
inc
insb
ret
ret
fmull
sbb
into
cmpsb
add
add
rolb
lock
and
mov
jnp
je
and
loopne
mov
je
ds
push
cs
jne
shlb
mov
dec
jno
mov
clc
call
dec
js
call
out
push
mov
out
cmpsb
addl
nop
jmp
mov
lods
sbb
and
mov
mov
inc
ds
icebp
sbbb
adc
jbe
imul
das
jb
sbb
stc
inc
sub
mov
mov
fcmovbe
daa
icebp
inc
pop
mov
jbe
dec
lahf
dec
loop
xor
mov
ret
loope
cld
sbb
clc
xchg
test
pop
and
push
jne
sub
enter
mov
xor
adc
or
sub
sbb
sub
sahf
pushf
aas
or
rorb
pop
mov
cli
jp
in
adc
sub
add
fbld
mov
mov
ret
sbb
mov
xor
add
push
dec
imul
and
cld
or
stos
mov
ss
aam
adc
push
or
fadds
pop
pop
lods
fiadds
mov
cmc
inc
sbb
xchg
imul
int3
mov
or
mov
jno
pop
or
subl
mov
jne
mov
loop
mov
arpl
jo,pt
cmpsb
push
in
add
repnz
inc
mov
xor
mov
lock
mov
div
insl
loopne
xchg
sub
jne
mov
add
call
repnz
lcall
jnp
cmpb
and
je
push
bound
xchg
mov
mov
xor
pop
inc
ret
sbb
jno
push
mov
mov
jae
push
scas
and
fdivrs
stos
fsubr
pusha
cwtl
or
mov
orb
cmp
sbb
cmp
in
xchg
mov
es
cs
sbb
pop
sub
add
das
pushf
fisubs
add
inc
sahf
and
arpl
aaa
scas
pop
pop
leave
fcmovu
mov
and
clc
mov
sub
lret
inc
adc
movsl
js
loopne
bound
cs
dec
inc
inc
ja
lods
or
fcomi
jp
mov
and
lock
mov
push
mov
call
adc
fisubrl
and
add
imul
mov
dec
cmp
mov
flds
lock
xchg
dec
push
xchg
mov
dec
sub
mov
sub
dec
into
sbb
lcall
repnz
add
icebp
add
sbb
jl
scas
shlb
les
mov
push
das
fidivrs
aam
xor
xchg
outsb
std
clc
bound
ret
pop
add
push
xchg
inc
loope
mov
in
inc
lahf
push
aad
repnz
jo
test
jge
mov
call
movsl
add
pop
xchg
mov
inc
pop
in
jl
sbb
jno
inc
add
sbb
clc
and
sbb
lret
rorb
add
lods
das
jo
mov
int3
stc
add
add
or
xorb
adc
out
or
mov
sbb
jo
loop
stos
mov
incb
jae
out
cmp
dec
test
cs
inc
add
sahf
sbb
daa
decb
add
cmp
sbb
in
xchg
xchg
jle
sarb
ret
test
xor
xchg
scas
jne
int3
lea
push
stos
nop
js
push
dec
mov
enter
jbe
jb
or
call
inc
fistl
mov
add
cmp
das
andl
insl
data16
xor
jns
sti
and
push
adc
pop
and
xor
xchg
mov
mov
mov
cmpsb
test
or
test
dec
or
pop
lds
inc
test
adc
clc
insl
pusha
pushf
add
rclb
dec
pop
inc
pop
xor
dec
jmp
xchg
sahf
push
and
or
cs
out
sub
add
and
xchg
mov
push
call
frstor
push
cwtl
jno
dec
js
jo
xchg
mov
mov
fldcw
orb
pop
mov
sbb
leave
mov
push
into
jl
inc
mov
in
orl
xor
loopne
mov
scas
add
test
cmpsl
fidivrl
ja
stc
int3
xchg
daa
mov
mov
pop
subl
dec
xchg
mov
aad
push
inc
scas
inc
insb
cmpsb
or
dec
xchg
dec
test
rolb
pop
dec
clc
scas
add
or
lea
push
sub
jge
sub
mov
dec
ss
loopne
push
sti
and
sti
push
notl
ljmp
lds
sub
jg
sbb
adc
testb
adc
int3
adc
and
adc
or
jno
jl
rorb
or
cli
mulb
push
push
sbb
jo
aaa
je
sti
adc
pop
inc
ret
xchg
push
inc
fsubl
hlt
or
cld
push
cwtl
rcrb
test
dec
add
sub
adc
xchg
inc
shlb
adc
addb
dec
je
mov
sub
dec
add
call
aam
inc
lret
adc
adc
lock
pop
int3
mov
cld
inc
repz
mov
push
mov
xor
subb
imul
xchg
jnp
lcall
popf
mov
sbbl
pop
lods
jmp
jb
jae
xchg
mov
adc
inc
push
std
mov
pop
les
adc
pop
lods
xchg
shrb
sarb
push
pop
rcl
inc
mov
xchg
adc
and
mov
mov
ret
add
je
xchg
cs
in
add
out
and
insb
xor
push
sbb
fdivr
sahf
lock
leave
inc
push
sbb
push
gs
push
ret
shrb
in
jne
xchg
mov
add
mov
fnsave
insb
xor
mov
add
in
dec
add
out
adc
dec
add
mov
loop
sbb
dec
add
mov
and
adc
or
ljmp
lahf
sub
or
shll
or
mov
lret
cmp
fldl
cli
test
mov
add
inc
push
not
adc
pusha
loopne
xchg
pop
stos
cmpsb
rcrl
nop
jp
dec
mov
add
dec
mov
ret
mov
loopne
jbe
pop
mov
inc
jns
and
mov
adc
fmuls
xchg
inc
lret
aam
jg
inc
and
lock
inc
in
xor
mov
fstpt
mov
jl
stos
mov
mov
add
jae
ret
sub
int
mov
or
dec
fdivrl
lahf
test
inc
retw
pop
adc
sbb
adc
and
cmp
hlt
dec
or
cwtl
sbb
jl
or
cmp
xchg
dec
mov
jl
out
xor
xorb
mov
push
xchg
pusha
inc
inc
mov
pop
mov
inc
push
icebp
dec
ret
add
push
dec
cli
xchg
aam
imul
pushf
mov
push
jnp
sti
mov
stos
adc
cmpsb
fdivl
bound
xchg
push
lods
jns
inc
mov
and
repz
xor
dec
inc
xor
sbbb
mov
pop
mov
mov
push
inc
pop
dec
or
out
inc
rcrb
iret
fwait
add
imul
aam
mov
mov
adc
jne
and
push
inc
loop
lea
stos
mov
addb
mov
jb
jnp
add
ss
pop
inc
jl
inc
cmpsb
cs
cld
mov
xchg
or
je
add
or
cmpsb
mov
pop
mov
xchg
xor
pop
arpl
pop
test
jbe
or
sub
popa
mov
orb
mov
pushf
loop
push
mov
lea
jo,pt
push
enter
mov
jp
orb
push
cmp
mov
out
les
fimull
xor
sbb
add
adc
xchg
shrb
dec
inc
cmp
jle
push
mov
ret
daa
loope
xor
jae
lcall
in
sub
loop
ljmp
int3
loopne
jl
push
mov
push
pusha
jl
shlb
in
jo
jbe
hlt
imul
cs
sbb
into
dec
push
stos
or
mov
dec
lcall
add
subb
stos
cmp
push
push
lods
lods
int3
mov
shrb
leave
or
mov
add
cmp
mov
adc
push
ficompl
inc
sar
fcompl
sbb
push
adc
or
dec
push
out
iret
inc
adcl
inc
inc
fimuls
shl
push
mov
mov
dec
stos
stos
flds
jo
sub
ljmp
adc
add
push
aam
lock
inc
ficoml
fidivrl
and
cwtl
push
push
addr16
mov
add
mov
ret
mov
inc
bound
dec
mov
add
adc
cs
sub
sub
mov
mov
clc
cmp
inc
xchg
leave
clc
mov
test
orb
push
pop
mov
cltd
or
jg
icebp
push
rcrb
mov
rclb
popf
insb
mov
sbb
dec
pop
inc
aas
pusha
jp
movsb
sub
jp
jo
sbb
dec
call
add
repnz
cmp
iret
clc
or
xor
adc
das
mov
push
xor
movsb
mov
lcall
mov
mov
cmp
add
sub
or
xchg
shll
fs
or
push
xor
fadd
xchg
add
push
mov
dec
fwait
jbe
vshufps
test
dec
inc
das
sbb
add
cmp
mov
fcomp
and
xchg
clc
insb
lahf
and
xchg
and
movsb
push
mov
jmp
push
lock
push
or
and
mov
push
xor
adc
outsb
dec
sbbl
pop
mov
ret
ret
sbb
loop
jb
add
push
adc
dec
pusha
lods
mov
aam
nop
cltd
insb
stos
ljmp
jno
push
and
fsubs
jbe
js
jl
adc
mov
cmpb
out
fdivrl
mov
nop
lret
adc
and
stos
dec
sub
mov
mov
lock
jle
mov
dec
imul
stc
xor
les
pushf
ret
int
jo
dec
ss
stos
xchg
xchg
pushf
adc
cmpsl
test
inc
jl
nop
jg
mov
pop
test
aam
sub
add
andb
daa
jbe
stc
mov
cmpsb
mov
cli
int3
and
repnz
xchg
mov
andb
inc
and
inc
inc
xchg
xor
lahf
dec
xchg
mov
mov
cld
mov
cld
xchg
xorb
lds
sbb
or
or
or
inc
mov
pop
gs
stos
xchg
testl
and
insl
dec
fiaddl
lcall
ds
sub
mov
xchg
lcall
xchg
add
push
or
sbb
add
pop
out
dec
fs
adc
or
enter
push
add
test
push
add
cs
pop
das
sub
mov
movsl
cmpsb
daa
pop
jb
cs
movsbl
and
cmp
add
fidivrs
shlb
test
es
sahf
js
insb
sbb
cmpsb
sti
test
xor
scas
jo
mov
push
and
fnstsw
mov
dec
sub
shlb
shrl
mov
test
sahf
mov
dec
jb
inc
push
aad
or
subb
orb
test
xlat
or
inc
sub
aas
nop
cmp
sub
jp
cli
push
das
lcall
xchg
sub
mov
xchg
sub
ljmp
inc
loopne
aad
dec
jl
lods
sarb
sbb
ds
nop
int
push
pop
lock
dec
loop
cmp
orl
pusha
and
mov
jl
loopne
lock
push
xor
and
mov
mov
dec
das
add
sbb
jns
andl
inc
push
es
inc
cmp
mov
push
out
pop
or
or
push
inc
into
jge
fsub
push
lret
shlb
mov
mov
mov
push
mov
andl
push
push
or
out
or
sub
or
pop
lcall
int3
jae
mov
test
cmpsb
adc
add
xchg
ljmp
xchg
dec
movsb
sbbb
enter
roll
mov
cmc
sub
jbe
push
sbb
mov
push
mov
stos
hlt
xchg
mov
daa
movsl
fbstp
sbb
call
mov
mov
test
sub
sub
xchg
imul
xchg
mov
sub
test
push
inc
cmc
cmp
sbb
addb
dec
sub
dec
cmp
pop
lret
mov
insl
and
aad
movsl
addb
popa
out
xor
loopne
xchg
jo
shrb
or
in
lods
imul
mov
js
arpl
stc
mov
adc
inc
push
xor
shl
fwait
cmpsb
mov
and
stos
inc
js
xor
cli
xchg
mov
add
jp
pop
and
xor
hlt
pop
test
push
cmp
daa
js
imul
xchg
pusha
fwait
mov
pushf
mov
ss
lret
xor
pop
neg
or
fs
mov
lods
aaa
add
inc
loopne
cwtl
sub
test
mov
sarb
push
stc
pushf
pop
jmp
cs
rorb
inc
jl
bound
push
xor
sbb
cmp
inc
adc
add
inc
push
pop
fs
sub
sahf
add
pop
ljmp
fdivrs
xor
inc
add
mov
mov
subb
xchg
lcall
pop
mov
into
int
pop
pop
mov
pop
hlt
sbb
inc
cli
jl
addl
adc
sbb
dec
clc
sub
jno
and
cmc
adc
jo
adc
dec
call
inc
xchg
inc
cld
inc
jp
sub
test
cmc
sub
nop
jecxz
int3
push
pop
or
xchg
es
dec
rolb
int3
add
adcl
cmpl
adc
fdivs
movsb
arpl
aas
and
ljmp
mov
mov
or
sahf
inc
lahf
lods
or
mov
inc
loop
jns
lds
pop
inc
ds
mov
dec
mov
push
clc
cld
shr
dec
sbbb
shll
adc
lret
sahf
icebp
dec
adc
and
fcomi
bound
lret
jo
repnz
inc
int3
and
add
js
mov
xchg
push
push
loope
test
shrb
pusha
lock
push
jbe
lcall
sub
les
test
lods
sub
stos
pushf
test
sub
dec
in
push
xchg
or
lret
jb
imul
push
sub
outsb
push
mov
xchg
test
aam
das
je
xlat
fmuls
shrl
inc
ds
adc
adc
pop
mov
xor
mov
mov
int
jns
xchg
shlb
roll
mov
fmuls
mov
scas
cmp
ret
dec
jmp
hlt
rorl
mov
fwait
dec
xchg
mov
outsl
out
and
or
out
popf
inc
lret
adc
ljmp
push
call
cmp
jo
push
xor
add
stc
xor
push
jl
clc
repnz
or
mov
cmpb
stos
and
dec
xor
jo
js
insb
adc
mov
addr16
lahf
dec
mov
mov
add
aam
cwtl
jnp
sub
lock
or
ljmp
out
ss
imul
inc
call
aam
sahf
or
jne
push
fldt
mov
inc
das
loop
mov
bound
mov
adc
or
mov
cli
les
cmp
xchg
sbb
flds
mov
jo
mov
pop
sub
cmp
fcomps
pop
cli
add
lods
mov
mov
shl
push
adc
and
mov
sbb
sub
jbe
xor
test
daa
dec
loop
push
cld
sub
shrb
loopne
rolb
outsb
orb
movsb
mov
pusha
add
mov
in
add
sub
hlt
mov
or
orb
test
gs
mov
sbbb
nop
and
fimuls
push
adc
adc
push
fimuls
pop
lock
movsl
xor
add
sbb
fcoml
mov
ds
xchg
inc
into
fwait
push
mov
shrl
mov
test
lods
shrb
call
loopne
sahf
mov
jge
scas
or
xor
xchg
pop
jae
pusha
or
sub
push
xor
xor
rcr
cmp
push
arpl
dec
shlb
outsb
or
cli
xor
es
xor
lds
test
sbb
jle
clc
push
lret
and
cwtl
repnz
lcall
loope
notb
mov
cmp
movl
ja
out
rcll
mov
aam
adc
cld
mov
jle
xor
mov
int3
mov
mov
mov
cli
es
dec
jmp
fcmovnu
xchg
mov
ret
aaa
mov
sub
lcall
push
movsl
sti
jl
jb
sub
mov
xchg
xchg
sarl
sti
sub
cltd
in
and
add
or
xor
sbb
mov
xor
outsl
add
sbb
pusha
lret
inc
insl
push
stos
mov
sbb
and
aam
arpl
cltd
shrb
shlb
outsb
xchg
insb
pusha
insl
shll
xor
mov
push
push
dec
pop
jb
leave
repnz
xlat
or
orb
dec
ljmp
xchg
push
mov
cld
notl
pop
sub
movsl
pop
cmp
cmp
adc
dec
out
rcrb
jb
adc
lret
push
push
mov
mov
pop
cmc
popa
mov
nop
ss
out
stos
and
push
xor
dec
cld
call
lock
push
icebp
jle
adc
xchg
add
test
add
pop
cmp
ficompl
loop
adc
xor
push
or
inc
jnp
dec
inc
adc
push
bound
in
jb
jge
cmc
or
push
and
mov
ret
data16
stos
adc
mov
jnp
mov
shlb
insb
loope
push
mov
insb
cmp
mov
xor
ljmp
clc
sub
xorb
mov
out
adc
push
sbb
xchg
mov
ret
out
rclb
fmulp
int
dec
cmp
pop
xchg
pop
rclb
pop
sbb
jecxz
mov
mov
arpl
push
push
ret
or
data16
cmp
shlb
inc
ret
sub
inc
scas
popa
sbb
aaa
or
lcall
test
xor
pop
add
xorb
call
ljmp
in
cmpb
push
aas
push
push
or
test
add
cmpsl
jne
mov
jo
insl
xchg
ret
hlt
cmp
sahf
cli
hlt
pop
pop
rorb
icebp
sar
lods
movsl
pop
push
inc
or
jbe
mov
pusha
dec
cld
jbe
bound
inc
dec
lret
or
mov
jle
sub
pop
cmp
adc
lods
andl
int
nop
jle
cmp
hlt
push
imul
xchg
sahf
sub
mov
mov
ret
jmp
add
add
add
ss
andl
cmpsl
jmp
mov
les
dec
add
push
rclb
fistpll
stos
or
dec
adc
add
jbe
fadds
ljmp
int3
iret
in
sar
xchg
mov
lret
imul
xchg
out
popa
mov
xor
adc
mov
push
xchg
fs
mov
outsb
imul
push
pop
fcom
in
adc
mov
cwtl
lods
outsl
pop
push
push
cwtl
adc
sub
int3
cmp
sbb
aam
or
add
pop
repnz
js
bound
nop
pusha
add
or
nop
adc
cli
add
jnp
into
inc
bound
and
sub
and
loopne
pop
leave
sub
and
inc
decb
adc
inc
inc
jecxz
mov
push
sbbb
outsb
cmp
xlat
or
fidivl
loop
mov
lds
mov
insb
add
jl
outsb
test
mov
push
lods
out
pop
jbe
jle
mov
mov
mov
mov
add
and
xor
hlt
adc
or
sub
aad
loopne
sub
fdivs
sub
icebp
add
push
stos
mov
add
jl
lcall
jp
push
jg
lods
jge
push
rcrl
add
in
inc
mov
inc
sbb
fisubl
push
in
cmp
xchg
sub
movsb
hlt
inc
jl,pt
xor
and
mov
dec
insb
xor
loope
mov
je
arpl
mov
inc
movsl
and
xor
xor
jge
fmuls
mov
mov
pop
lock
test
clc
adc
or
mov
int
or
mov
jp
lock
pop
xor
fidivrl
call
dec
xor
je
or
cld
push
mov
fsubrl
roll
dec
loop
popf
cli
jecxz
ret
xchg
mov
inc
and
loop
in
cli
mov
adc
rclb
inc
adc
nop
ss
ss
insb
xchg
pop
mov
out
or
inc
fidivrl
mov
call
js
sub
repz
mov
lea
sbb
mov
sbb
pop
in
cmp
div
insl
dec
pop
or
and
subb
mov
bound
pushf
push
lods
or
insb
inc
fidivl
fidivrl
cmp
cs
adc
mov
mov
inc
add
add
add
mov
fisubs
lahf
add
std
xadd
push
js
shrb
cmp
mov
inc
xlat
jae
or
sub
fcmovnbe
or
js
inc
cmp
hlt
scas
in
fwait
sub
notl
adc
sbb
xorb
loope
or
mov
jecxz
fistl
sub
sbb
sbbb
xchg
hlt
mov
jo
push
push
xchg
loop
nop
sub
fs
cli
es
lods
clc
and
adc
push
mov
inc
int
add
aas
mov
repnz
stos
out
or
ret
jbe
push
cs
jp
popa
lcall
aam
cld
or
fistpl
adc
sti
cmp
push
add
inc
cld
push
adc
stc
xor
fadds
lret
mov
lds
pop
xorb
mov
mov
das
fimuls
inc
loope
ret
dec
mov
test
pop
or
lret
adc
mov
inc
test
mov
je
fstl
mov
xchg
aad
fisubl
cmpsb
mov
fs
xchg
stos
sub
push
pop
je
push
addb
xor
mov
fldt
add
mov
xchg
rolb
xchg
pop
cmp
lcall
mov
insl
lods
js
mov
mov
das
jmp
xchg
inc
mov
mov
out
pushf
mov
in
push
pop
cmp
int
pop
mov
ljmp
iret
mov
fcmove
mov
hlt
xchg
dec
adc
cmp
or
imul
notl
orl
inc
loope
dec
cld
and
pop
sbb
mov
jl
mov
mov
push
popa
loopne
inc
inc
imul
pop
dec
jge
hlt
rcll
inc
nop
je
cmp
lcall
jb
pushf
bound
sbb
pop
nop
es
pusha
mov
mov
mov
push
dec
sbb
inc
xchg
loopne
mov
jl
cmc
mov
adc
add
shl
cli
lret
adc
call
xchg
mov
or
cwtl
xor
cmpsb
inc
cwtl
xorb
mov
or
and
sub
enter
xchg
hlt
push
les
lock
add
dec
loope
insl
add
and
xor
call
popa
add
or
push
rcrb
xor
sub
cld
push
aad
call
dec
outsb
xor
shll
pop
and
mov
rorl
in
jno
shll
outsl
xor
sti
rcll
shr
mov
jne
mov
or
xchg
enter
jne
je
ds
ret
xor
hlt
jp
dec
xchg
hlt
rol
nop
cmp
xor
or
sbb
mov
pop
cmp
clc
mov
mov
or
add
pop
sarl
movb
rcl
sbb
out
push
xchg
xchg
rorb
in
fs
lock
aas
rclb
sbbb
mov
hlt
sbb
daa
sbb
add
dec
js
movsb
mov
xchg
mov
sahf
es
xchg
and
mov
repnz
lds
jmp
inc
pusha
sbb
popl
insb
push
std
outsb
sub
add
or
dec
mov
subb
lock
adc
or
hlt
sbb
sahf
push
mov
aas
mov
clc
ss
dec
or
or
sub
push
int3
popa
mov
nop
rcr
pop
cmp
or
mov
mov
pop
lret
insb
dec
adc
xchg
cli
and
scas
idivb
pop
test
mov
add
aaa
rclb
and
jae
mov
cwtl
add
das
mov
add
ds
stos
test
mov
mov
out
add
xchg
xor
mov
pushf
fsubrl
aas
or
sub
fwait
sub
mov
add
adc
adc
out
in
cmpb
or
and
sub
fdivrl
adc
ss
ss
sarl
pop
aas
and
mov
dec
nop
xor
xor
in
shr
js
es
mulb
fbstp
andb
cltd
cli
push
orb
sbb
daa
dec
xor
sub
xlat
mov
rcr
mov
cli
cli
aaa
insb
xor
sbb
jae
pushf
aam
sahf
lret
imul
dec
add
or
mov
repz
sub
imul
xchg
cli
mov
daa
sbb
mov
and
pop
cmpsb
xchg
add
sbb
sub
jno
mov
rcl
add
inc
sahf
dec
shrb
mov
inc
adc
sub
pop
movsb
xchg
xchg
loope
lods
pop
push
enter
pushf
loope
daa
es
or
or
stos
cli
xor
mov
inc
and
in
and
les
movlps
rcrb
into
sub
decb
inc
mov
jle
add
push
and
add
scas
push
sahf
or
dec
pop
rcrb
bound
lahf
mov
icebp
test
lea
leave
push
fstps
dec
cs
lcall
push
out
push
out
add
push
jle
cs
arpl
call
push
or
mov
mov
jmp
push
sbb
loop
js
out
cmp
pop
push
test
sbb
in
cmpsl
sub
mov
setp
sbb
mov
outsl
mov
in
fisttps
scas
or
call
push
sub
shlb
faddl
push
lret
es
ret
pop
pusha
xchg
ljmp
test
push
aad
sbb
push
call
xor
push
rcrb
in
mov
inc
enter
aam
mov
push
push
push
pop
lret
jg
mov
andb
rcrb
les
lods
dec
lock
jmp
je
inc
push
or
outsl
or
pop
pop
clc
adc
inc
into
pop
dec
lahf
mov
test
mov
inc
adc
push
mov
cwtl
cli
ret
insl
shll
testb
ret
pop
xchg
rcrb
jg
test
dec
pop
push
fldenv
hlt
push
ja
push
test
add
cmpsb
jp
pop
shll
nop
mov
loopne
sub
cmp
js
loopne
leave
hlt
les
mov
sbb
cmp
icebp
fisubrl
scas
movsb
push
test
push
inc
jmp
push
push
jnp
retw
lahf
hlt
sbb
xchg
movsl
push
fsubrs
inc
fwait
push
push
lods
pop
push
mov
pop
adc
mov
mov
add
dec
jbe
iret
sbb
lret
aad
add
pop
enter
inc
mov
faddl
push
lods
popa
add
cltd
lock
jmp
xchg
add
ror
inc
add
nop
sub
xor
cmp
mov
mov
imul
xor
xor
xchg
xor
push
rcrl
adc
loopne
jle
dec
sub
inc
loop
xchg
adc
sub
stc
jbe
enter
xchg
cld
cmpsb
mov
and
mov
ljmp
xlat
add
xlat
sbb
lea
and
xor
outsl
pop
fabs
dec
sub
jmp
jge
push
rorb
std
pushf
dec
inc
das
inc
loope
popa
pop
xchg
xchg
mov
ret
xchg
rclb
clc
sbbl
pusha
adc
popf
fidivrl
fsubs
mov
cld
xchg
outsl
je
mov
insl
loope
sub
push
inc
outsl
xchg
js
mulb
dec
loopne
insl
insb
in
mov
fwait
xor
sbb
mov
mov
in
push
add
mov
add
xchg
ja
push
sbb
jbe
jl
jle
xor
nop
cmp
xchg
dec
adc
ljmp
add
push
inc
ss
test
sbb
cmpsl
mov
mov
imul
hlt
dec
test
int
inc
sbb
jecxz
dec
push
push
sub
jno
test
mov
ds
add
or
adc
sahf
mov
mov
ja
out
out
pop
lret
rcll
cmp
jge
rol
das
outsb
xchg
or
add
ss
xchg
cmc
fcmovnbe
sub
mov
mov
call
hlt
into
jle
mov
and
js
push
sbb
decb
cmp
test
mov
sbb
push
cwtl
mov
mov
jnp
lret
mov
faddl
push
sub
daa
dec
sbb
clc
or
mov
aas
inc
fbld
push
imulb
dec
push
pop
andl
fcom
push
inc
xor
xchg
mov
and
or
jbe
cmp
add
adcl
mov
adc
ds
sub
lock
faddl
push
cmp
jp
cltd
mov
std
xchg
jle
std
push
adc
xchg
push
mov
sbb
jp
dec
mov
push
mov
test
sub
hlt
add
int3
aad
xchg
fcomi
mov
ficompl
je
sbb
xchg
jge
or
sub
into
push
and
ss
pushf
je
lea
xchg
test
bound
pop
dec
shlb
inc
daa
pusha
mov
sub
jbe
add
or
gs
popl
int3
push
and
cli
lret
push
xor
xchg
es
inc
adc
addl
sbb
cli
cmp
arpl
dec
js
imul
cmpsb
xor
addr16
fcoml
jno
jmp
pop
outsb
mov
or
mov
js
lret
jo
mov
dec
sbb
lret
and
jbe
add
shr
xchg
add
pop
cmp
inc
mov
lods
rolb
mov
dec
or
adc
xchg
pop
xor
xchg
call
add
lret
cmp
jmp
xorl
mov
je
mov
push
xchg
test
stos
pop
or
or
cld
div
or
dec
hlt
xorb
mov
pusha
cmp
mov
or
cmp
out
test
mov
repnz
sti
inc
shll
or
jl
or
inc
int
sbb
movsl
dec
add
jno
add
mov
mov
out
lock
inc
fnstcw
sub
jae,pt
js
adc
add
mov
mov
mov
js
push
add
push
pusha
inc
loopne
xchg
push
hlt
push
jnp
icebp
lcall
or
popa
popa
cmp
adc
xchg
mov
add
push
pop
pop
push
ret
out
pop
push
cmc
pop
adc
test
or
lahf
dec
lods
cmp
mov
add
mov
adc
call
lock
and
insb
test
ret
sbb
daa
sbb
sbb
fs
sbb
mov
scas
outsb
push
out
sub
push
pusha
xor
push
fcomps
add
and
xor
xchg
cmp
mov
test
mov
fcmovu
aad
mov
stc
xchg
push
dec
cmpsb
test
mov
push
cltd
push
pop
sarb
mov
js
mov
bound
jb
add
add
xor
je
inc
xchg
mov
add
inc
ljmp
inc
cli
test
loopne,pn
add
insb
pop
mov
dec
and
cld
or
xor
jo
mov
imul
sub
pop
lock
nop
orb
xchg
adc
testb
cwtl
call
sbb
push
inc
in
inc
adc
ds
lahf
xchg
dec
lds
adcl
jp
mov
repz
std
mov
insb
or
mov
sbb
insl
ljmp
cli
mov
jo
clc
and
xchg
in
negb
add
adc
cmpsb
push
lods
and
imul
ljmp
call
movsb
cmpsb
fists
or
push
or
mov
add
cltd
jbe
insl
sub
pop
push
mov
inc
jg
pop
and
pop
negl
test
mov
mov
push
lds
sbb
mov
test
stos
cmp
fwait
rorb
xor
aaa
int
test
mov
push
adc
ljmp
pop
mov
out
mov
sbb
cmovns
xor
js
xchg
mov
push
mov
add
fistps
fdivrp
xor
or
xor
into
pop
lret
pop
pop
js
test
mov
test
nop
scas
push
shlb
xchg
xchg
mov
mov
add
je
mov
sbbb
arpl
gs
jl
icebp
lret
dec
add
in
ret
testb
pop
std
loope
test
movsb
test
and
into
push
push
nop
gs
inc
je
sub
inc
push
or
add
xor
rorb
inc
cmp
outsb
mov
test
cs
cmp
into
popf
jnp
push
insb
jecxz
pop
and
xchg
add
rcrl
out
xchg
lods
pop
inc
cmp
adc
addb
add
push
pop
or
negb
adc
call
lods
jge
push
insl
cmp
inc
and
cld
inc
sahf
out
adc
rclb
adc
sub
cwtl
inc
ret
pop
push
mov
in
dec
mov
push
add
pop
pusha
mov
cmpsb
cmpsb
das
sbb
test
add
ret
insb
push
ja
and
dec
test
push
xchg
xor
or
js
or
push
subb
cli
imul
pop
orl
sbb
or
jo
mov
xchg
in
gs
sahf
sub
ret
dec
rclb
mov
ret
js
add
iret
push
inc
xchg
adc
lcall
mov
jo
lea
sbb
add
push
cmpsl
roll
push
pushf
mov
ss
add
arpl
xor
imul
cmp
cmp
ljmp
mov
jne
mov
add
inc
cmp
icebp
pop
jge
fs
jp
adc
loopne
cmp
scas
cmpsl
xor
push
or
mov
shrb
push
daa
cmc
sar
inc
xor
test
sbb
mov
pop
cmp
pop
or
mov
cmp
enter
in
pop
subb
movsb
iret
rorb
sahf
dec
xorb
push
rclb
dec
push
fcomp
push
xchg
pop
jl
pop
or
sar
jo
push
das
inc
or
inc
fwait
mov
inc
call
test
add
pop
pop
pop
jo
std
pop
and
pop
cld
lcall
dec
stos
aas
loopne
rolb
cmpsb
xchg
xor
add
push
dec
push
cmp
adcb
rcrb
adc
test
mov
or
add
fbld
ss
add
pop
pushf
and
mov
lret
sub
sub
inc
xor
push
jmp
cmp
and
pushf
test
push
adc
sbb
jmp
jns
test
add
imul
icebp
hlt
fwait
lock
jp
pop
xor
jnp
pusha
lahf
add
mov
loopne
adc
scas
mov
sbb
jl
fmull
adc
lock
jbe
push
dec
data16
imul
std
call
bound
in
push
jb
add
pushf
inc
pop
push
rcrb
mov
mov
mov
orl
add
jb
dec
fsub
les
mov
xor
dec
mov
jp
mov
or
call
push
xchg
clc
sub
jno
add
mov
andb
fcompl
mov
mov
inc
mov
out
adc
mov
lods
dec
mov
jbe
sbb
divb
pop
mov
out
das
add
mov
push
mov
push
imul
cmpsb
mov
inc
hlt
and
sti
fadd
mov
test
add
movups
aaa
scas
pusha
mov
out
movl
mov
or
icebp
inc
add
sbb
mov
push
pop
loop
inc
mov
icebp
cwtl
es
push
int3
test
mov
loop
rcll
adc
mov
aas
xor
add
rcrl
mov
push
mov
mov
sub
adc
pop
push
pop
rcll
je
jl
fwait
js
push
lock
psubd
rorb
xchg
mov
fwait
or
mov
daa
mov
dec
andl
out
xchg
ret
dec
mov
cs
sbb
pop
xchg
out
out
movsb
fbld
mov
sub
push
push
pusha
aas
data16
sbb
inc
adc
hlt
inc
sub
sti
push
imul
sub
add
enter
bound
pusha
and
ja
js
call
dec
fwait
lcall
pop
clc
repz
daa
mov
push
adc
fildl
adc
and
push
jbe
leave
shl
fs
shlb
or
fcompl
add
nop
in
ljmp
jmp
jge
aam
jle
hlt
pop
loopne
cmp
and
sahf
add
push
xchg
sbb
jl
mov
daa
movsb
sbb
out
inc
jl
aad
dec
sbbb
add
mov
pop
mov
adc
and
sbb
adc
xchg
xor
jle
outsb
lahf
mov
jl
add
sti
pop
imul
ss
mov
aam
dec
push
xchg
add
mov
lods
cmpsl
js
out
inc
mov
popa
adc
stc
lret
adc
mov
and
out
mov
stos
loop
xchg
outsb
inc
scas
sub
outsb
mov
pop
mov
mov
jbe
mov
movsb
dec
int3
sbb
add
enter
aam
aam
mov
pop
mov
testl
mov
push
pop
xchg
nop
add
bound
dec
loope
push
mov
pop
push
mov
or
mov
xchg
mov
add
js
mov
shl
bound
and
repnz
movsb
lock
xchg
sub
dec
push
jecxz
xchg
test
mov
adc
mov
imul
dec
sub
push
pop
aas
add
stos
jmp
adc
outsl
add
xor
out
cwtl
addl
ret
mov
xchg
inc
and
std
loope
push
sbb
hlt
sbb
inc
mov
shlb
cmp
pop
scas
adc
mov
and
subps
repnz
mov
mov
mov
mov
dec
loop
add
or
fstpt
shrb
outsb
jbe
cld
loop
hlt
dec
ss
sub
clc
sbb
xchg
or
inc
aam
rcl
adc
scas
aam
jno
stos
leave
pop
nop
or
or
dec
test
sahf
in
icebp
nop
ret
repz
cmp
xor
mov
roll
popa
and
cwtl
dec
or
testb
pop
adc
push
andb
sub
inc
js
shrb
mov
mov
mov
out
cltd
xor
rclb
add
pushf
aaa
rclb
clc
out
cmpsb
ja
movsl
icebp
xchg
mov
arpl
sbb
jnp
xor
mov
pusha
push
push
je
cwtl
or
mov
sbb
shlb
les
scas
mov
enter
jl
hlt
lcall
outsl
jmp
inc
imul
hlt
shrl
mov
test
push
mov
mov
add
into
adc
xor
jmp
imul
cli
adc
test
mov
add
dec
in
pusha
inc
pop
fcmovnb
lds
jbe
stos
popl
stos
int3
sub
out
pop
or
decb
cmp
mov
shrb
xor
add
ljmp
ds
dec
inc
scas
ret
test
push
in
and
inc
pusha
push
stos
lcall
lahf
xchg
ljmp
mov
adcb
jl
mov
add
rolb
or
and
in
adc
add
xor
dec
mov
sbb
or
enter
cs
or
jno
sub
dec
addr16
mov
add
and
and
inc
dec
js
jp
inc
movsb
sub
or
sbb
ficoml
push
mov
push
push
lock
cmpsb
scas
fsubrs
jmp
and
or
ja
or
test
les
test
push
popa
mov
repz
push
push
mov
js
add
cli
ficoms
fcomps
leave
add
xchg
in
movsb
and
in
jle
mov
outsl
or
pusha
or
pop
test
xor
scas
test
sub
jecxz
movsl
dec
lods
xchg
dec
push
inc
repz
sbb
aad
mov
push
inc
inc
push
push
and
rol
cmp
push
mov
mov
push
mov
add
outsl
or
jl
adc
loopne
movsl
push
pusha
sub
mov
das
fs
out
mov
push
and
inc
js
push
fmuls
mov
push
or
psubusw
push
and
rcll
aam
movsb
jae
popl
enter
inc
mov
and
push
fmuls
popf
fiaddl
lret
leave
mov
sbb
adc
into
mov
aam
sarl
adc
addb
mov
sbb
inc
bound
cld
pop
notl
fcompl
int3
inc
push
and
or
dec
push
scas
js
lock
or
cmpsb
dec
aad
repnz
enter
call
jns
xchg
shr
shll
add
push
mov
loopne
jmp
out
adc
loopne
idivl
sbb
add
cmp
ret
sub
pusha
aam
imul
mov
mov
arpl
rcrb
popa
adc
dec
mov
fcomps
sub
out
and
fldcw
ss
movsl
outsb
jno
ds
aas
mov
or
mov
in
mov
cmp
cmp
or
inc
adc
mov
mov
or
insb
repnz
loopne
and
inc
push
sbb
jp
adc
adc
bound
xchg
and
adc
pop
xchg
push
mov
loope
inc
lds
mov
add
fcomps
sbb
loopne
add
je
xor
sub
push
lcall
hlt
push
cmpxchg
mov
insl
dec
push
stos
xor
inc
cmpsl
and
sub
xchg
and
movsl
mov
add
mov
mov
inc
adc
test
xchg
adcl
xor
mov
insb
dec
xor
xor
stos
adc
push
into
loop
in
and
sbb
daa
or
inc
cmpsl
xor
adc
mov
push
or
test
movsl
push
fmul
sbb
sti
sub
pusha
mov
xchg
xchg
mov
push
ficoml
cmpsb
lcall
and
pop
cmp
insl
js
lock
sub
adc
dec
fldl
cmp
shrb
inc
add
call
mov
pop
push
xchg
jne
push
pop
or
jbe
scas
add
lods
lahf
mov
adc
in
or
mov
arpl
call
or
or
mulb
shlb
sbb
cli
mov
sbb
mov
mov
dec
jnp
movsb
lret
cmp
pop
push
test
and
leave
lock
pop
or
scas
push
jge
mov
fisubl
push
enter
jp
mov
js
sbb
lret
shrb
adc
mov
or
loopne
xchg
cmp
add
les
inc
outsb
sbb
and
fwait
sub
sbb
or
mov
int3
dec
add
fdiv
call
or
pop
jne
sarb
addl
mov
sub
xchg
retw
sub
stos
push
nop
fistpl
or
xor
mov
xor
jl
mov
or
fcoml
roll
enter
sub
hlt
ret
clc
test
pop
push
setle
xchg
hlt
iret
push
add
mov
push
add
das
sbb
pusha
insl
cli
adc
imul
and
cld
fiaddl
sbb
stos
push
mov
add
cli
xor
out
cld
xchg
or
lcall
fsubrl
jo
add
push
inc
cld
push
cmp
into
lock
test
cmp
ljmp
add
adc
lcall
addb
mov
call
cmpsl
icebp
popa
mov
insb
push
imul
sbb
push
shrl
lahf
add
icebp
or
xchg
sub
xlat
aam
es
pop
adc
push
jecxz
or
jmp
imul
daa
mov
sbbb
roll
dec
mov
adc
inc
or
add
test
pop
loope
repnz
sbb
inc
jge
rorb
dec
repz
add
inc
pop
aaa
fisttpll
pop
jp
fwait
xchg
mov
mov
mov
inc
mov
inc
adc
js
jns
sbb
inc
push
call
int
imul
sub
mov
movsl
jp
leave
push
cwtl
push
call
xchg
and
in
addl
pop
jecxz
js
js
push
jp
test
dec
loopne
lock
xchg
ficompl
aaa
cmpb
adc
cmp
jbe
dec
inc
arpl
ret
js
adc
xchg
adc
sub
dec
fisttpl
inc
fisubl
popa
cmp
cmc
pop
push
mov
dec
sub
imulb
cmpsb
mov
inc
xchg
js
mov
inc
mov
test
push
cltd
fmull
cmp
ja
mov
test
xor
leave
nop
lcall
mov
hlt
lcall
andl
inc
insl
dec
jmp
fsts
jo
les
test
mov
sbb
xchg
ljmp
and
in
cli
sub
test
xorb
adc
mov
sbb
dec
repz
add
or
fiadds
dec
das
jae
cltd
inc
sti
inc
in
insl
or
mov
pop
jae
cmove
rcl
pop
push
pop
aam
and
sub
shrb
sub
xchg
push
fsubrs
cmp
inc
xchg
push
or
shrb
xlat
sbb
mov
xchg
in
and
in
mov
nop
in
into
popf
mov
ss
adc
rorl
in
xchg
mov
sbb
or
icebp
inc
jo
and
dec
out
int3
sbb
outsl
aad
pushf
nop
into
mov
inc
rorb
mov
dec
push
pop
ss
movsb
js
add
mov
mov
pop
adc
mov
xchg
jmpw
or
xchg
add
cmc
pop
repnz
xor
xorl
mov
ret
nop
jp
xor
cwtl
pop
or
sub
mov
lret
xlat
sbb
add
lock
dec
je
adc
lods
inc
shlb
aam
xchg
mov
inc
pop
and
jb
popa
nop
mov
shll
cmp
ss
dec
and
rorb
fildl
mov
push
in
jl
push
pusha
inc
jo
jl
or
ret
xchg
ds
pop
inc
fs
sub
aam
std
cmp
in
adc
test
dec
cmpsb
fcom
jbe
inc
nop
push
movl
insb
call
add
adc
sub
mov
and
fcom
push
pop
push
call
push
push
xchg
pop
ljmp
add
mov
and
push
mov
aad
or
cli
loop
push
add
clc
test
cmp
jp
hlt
fcmovbe
daa
cld
push
loope
rolb
imul
mov
test
push
js
loop
mov
cs
movsb
pop
push
fcomps
inc
cmp
inc
and
add
je
int3
ret
movsl
sub
imul
loop
xchg
xchg
xchg
je
xor
adc
mov
dec
add
xor
add
out
xchg
fsubrs
xchg
mov
fwait
or
mov
fistps
or
cmpb
sbb
enter
rorl
shl
inc
push
inc
push
js
adc
cli
lea
mov
pop
push
ss
scas
mov
jae
cmp
out
inc
scas
push
cmp
xchg
loope
xchg
dec
cmp
int
lret
push
mov
sahf
push
aam
adc
xor
clc
adc
das
pop
pop
pop
add
mul
cs
push
shrb
dec
imul
roll
rol
es
fadd
or
xor
push
mov
sbb
pop
icebp
dec
xchg
jp
cwtl
cli
lret
loopne
cmp
mov
and
jno
lgdtl
xor
lock
cli
and
mov
mov
pushf
jg
mov
or
pop
mov
je
call
cmp
pop
adc
inc
sbb
stos
mov
mov
sarb
push
les
fcompl
cs
inc
sub
les
cwtl
adc
add
rcll
inc
ret
and
loope
sub
or
mov
fimull
les
cmpsb
inc
cld
ret
inc
xchg
cmpsl
or
mov
int
repnz
loopne
mov
xlat
cmp
xchg
into
push
jmp
ljmp
sbb
dec
add
pop
xchg
mov
mov
jl
mov
dec
push
call
cmpl
pusha
cmp
lods
or
sub
add
jmp
aad
in
add
mov
adc
push
stos
mov
lret
pop
xor
enter
in
xor
cmp
in
and
push
jle
repz
or
insl
cmp
cmp
cmp
sahf
das
add
sbb
fs
push
push
scas
and
inc
lret
cmpsb
push
rolb
adc
lcall
or
xor
xchg
sbb
shrb
cli
fs
adc
push
loop
int3
insb
push
mov
pop
test
cwtl
cmp
mov
rorb
loop
pusha
xchg
ljmp
and
adc
andl
cld
adc
adc
sahf
fs
out
add
out
pop
lcall
xorb
ss
jo
fwait
pusha
mov
push
inc
jle
pop
xchg
clc
test
insb
push
or
sub
and
add
leave
les
insl
dec
jg
iret
sub
cmp
addr16
fildl
mov
and
push
fidivrs
push
cli
add
mov
inc
xor
loop
dec
lods
push
inc
jle
jl
ret
fmull
lcall
bound
push
inc
cmc
or
push
mov
jo
mov
lds
mov
cwtl
fdivl
push
sbb
insb
jl
dec
insb
movsb
mov
mov
lret
push
mov
cmp
xchg
sahf
or
leave
cs
enter
ficoml
and
call
loope
mov
rolb
in
cli
and
add
jp
aaa
or
xchg
pop
nop
fstl
cmp
or
push
ds
add
repz
sub
mov
add
xor
mov
mov
mov
pop
les
nop
stos
push
fs
xchg
push
pop
cmp
outsl
sbb
mov
jnp
jecxz
in
mov
jl
lock
jo
push
popf
pop
sub
and
hlt
lahf
xor
or
idivb
xor
jle
push
mov
js
fwait
and
sbb
cld
push
adc
or
push
mov
mov
loop
loope
dec
fs
inc
adc
jmp
rorb
movsl
lock
mov
jns
insb
outsb
lret
push
add
add
sub
mov
or
jne
sar
inc
or
out
sbb
out
lea
sbb
insb
add
loop
cwtl
je
push
mov
and
or
test
lahf
cs
loop
jle
inc
and
aas
jmp
cmpl
lods
jge
fnstcw
adc
nop
mov
and
push
fisubrl
or
pop
xor
mov
je
pop
lods
outsb
cmp
xchg
push
pop
xchg
sub
pusha
inc
inc
mov
sbb
pop
hlt
mov
ret
stos
adc
xchg
jne
hlt
add
xchg
sarl
ret
scas
push
jmp
je
testb
lods
push
imul
mov
push
jo
xor
shll
jle
sub
mov
or
les
jl
xor
out
idivb
xorb
dec
push
sbb
lods
ds
pop
mov
add
push
cmp
pop
push
inc
add
ljmp
shrb
push
mov
xor
loope
inc
lock
xor
or
mov
fiadds
lock
push
std
pop
dec
loop
movsl
add
jo
hlt
enter
cmp
or
je
loope
insb
xor
loop
subl
xchg
mov
pusha
test
inc
cmp
ret
pop
and
push
movsl
mov
adc
adc
pusha
push
push
aam
out
mov
adc
mov
test
add
loop
into
pusha
mov
adc
xchg
aam
cmc
adc
or
inc
inc
mov
mov
loopne
fcomps
adc
and
push
into
fs
push
notl
cmc
fs
xchg
push
sbb
cmp
xchg
imul
into
cmp
mov
lret
sub
enter
cwtl
xor
push
movb
add
and
test
push
push
ja
cli
pop
sbb
and
gs
push
lret
xchg
test
andb
scas
xor
pop
nop
cli
mov
push
je
stc
xchg
movsl
testb
pop
les
loopne
js
ljmp
rcl
dec
out
mov
dec
sub
jne
and
mov
pop
mov
movsb
xchg
dec
pop
movsb
mov
and
push
inc
adc
cmpsl
mov
pop
dec
or
jb
in
xchg
mov
pop
sar
push
pop
sbb
fists
dec
mov
xchg
jo
sbb
ss
mov
shl
dec
into
stos
mov
js
mov
cwtl
cld
push
jo
lock
fwait
inc
cmpsb
adc
fwait
xor
add
fcomp
push
mov
push
add
cmpsb
fstpt
jl
lahf
pop
inc
insb
mov
imul
jg
mov
push
fistps
mov
or
sbb
push
push
push
rclb
inc
aad
test
sbb
push
in
pop
push
mov
loop
cmp
rol
sti
pusha
or
push
int3
dec
ss
clc
mov
clc
add
pop
and
mov
add
mov
insl
das
cmp
push
rcr
dec
xor
mov
lods
adc
stos
fsubr
inc
jo
fcompl
jnp
or
add
pop
pop
dec
cmp
push
push
stos
jg
and
push
mov
push
hlt
rcll
push
sub
sbb
ss
sbb
add
sub
in
push
adc
in
xor
pushf
lock
and
popa
and
loopne
incl
add
and
push
icebp
pop
ret
dec
xor
cmp
inc
pop
mov
dec
add
add
mov
fs
or
pop
sub
in
adc
loopne
push
ljmp
add
pop
cld
sti
cmp
arpl
cmp
mov
cmpsb
lods
adc
mov
add
mov
add
pushf
pop
inc
lds
scas
imul
add
mov
and
mov
cmp
jo
loop
outsl
or
xchg
jbe
loopne
push
pop
clc
add
les
sbb
mov
add
push
dec
test
enter
push
jne
incb
xchg
faddl
sub
inc
push
fdivs
sbb
push
xchg
add
pop
dec
fistl
mov
jo
hlt
mov
das
movsb
fstl
cmpsl
loope
pusha
mov
jp
cmp
inc
cwtl
push
jge
mov
sbb
add
roll
dec
cld
push
adc
sub
push
stos
mov
mov
add
sub
mov
arpl
push
xor
pusha
rcll
es
push
add
mov
add
add
fcomip
rcr
and
outsb
js
or
jo
mov
xorb
lock
push
mov
lcall
xlat
add
push
lcall
sbb
imul
scas
outsb
daa
movsb
cli
inc
mov
add
test
stos
pop
clc
or
xchg
or
mov
jge
lret
movsb
mov
pop
pop
rclb
jecxz
aam
pusha
insb
mov
test
int3
cmp
push
les
add
xchg
ret
in
adc
pop
mov
cli
cmp
mov
loop
mov
push
pop
lock
ret
imulb
imul
or
test
in
xchg
je
pusha
mov
and
push
add
xor
cmpb
sahf
sub
push
test
jo
cmpsl
add
sar
mov
adc
cmp
sbb
mov
adc
xor
jecxz
mov
mov
insb
and
mov
sbb
or
adc
xor
xchg
dec
cwtl
push
mov
or
popa
adc
add
test
jle
pop
or
imul
add
push
adc
xor
test
mov
pop
fbstp
loop
mov
clc
sub
or
jb
dec
or
js
les
test
add
movsb
mov
or
cmpsl
dec
cld
push
push
adcb
fsubs
inc
jo
bound
lods
or
push
mov
pusha
nop
je
shl
mov
test
xchg
pop
or
cld
push
test
mov
or
sarl
and
adc
shrb
xchg
popa
fs
or
aam
in
ds
in
test
ss
pop
dec
sbb
loop
mov
inc
loop
add
das
dec
js
push
jg
test
jno
lret
xor
mov
dec
pusha
outsl
nop
jbe
push
add
adc
pop
push
hlt
scas
testb
arpl
jo
push
mov
push
pop
scas
aam
lcall
daa
push
or
cwtl
rcrl
adc
xchg
je
push
xchg
jg
push
xchg
sbb
loopne
lock
mov
cmp
gs
std
or
xchg
movsb
sti
out
xor
xor
adc
clc
jmp
lcall
cli
or
nop
mov
push
and
pusha
jmp
push
movsl
mov
pop
add
xchg
mov
fld
sub
adc
inc
jge
loope
imul
inc
into
push
push
icebp
pop
jno
imul
add
pop
mov
inc
xor
imul
push
lahf
aam
stos
and
sbb
add
pop
xchg
or
adc
test
cmpsb
jb
mov
fs
jge
test
ret
mov
cmp
stc
add
fdivr
popa
push
inc
ljmp
dec
jp
jmp
adc
lock
mov
jg
fisubrl
sbb
mov
push
cmp
insl
jecxz
adc
or
aam
add
add
sbb
lds
fwait
repz
adc
sbb
jo
mov
shlb
jp
ss
push
or
daa
cmp
add
sub
or
sub
clc
int3
test
movsl
sbb
sbb
in
mov
adc
or
aas
xor
rcr
add
xor
pop
mov
cwtl
or
insb
xor
add
mov
mov
jae
xor
movsb
test
inc
or
sbb
out
sbb
push
fidivrs
js
push
je
and
dec
xorb
sti
xchg
lods
testb
mov
fisubrs
insl
adc
mov
pop
fs
jbe
arpl
mov
mov
outsb
mov
jnp
jo
pop
imul
jo
popl
popf
jl
decl
xor
popa
lock
loopne
jg
je
addr16
mov
jne
and
inc
mov
aaa
dec
stos
mov
or
inc
pop
xor
fwait
daa
push
in
cmp
sbb
bound
or
repz
push
adc
xor
rcl
pop
imull
xor
adc
mov
jmp
sub
rol
sub
sbb
mov
add
ret
shll
fisttps
or
cmp
or
inc
nop
mov
outsl
dec
xlat
jno
insb
out
inc
adc
scas
or
jo
sub
sub
je
pop
ss
push
sarl
fcmovu
jbe
and
add
es
dec
add
mov
pop
je
add
add
add
add
push
outsl
daa
jnp
mov
jb
mov
jo
das
dec
testl
add
add
popa
mov
lods
fidivs
pop
inc
bound
and
jecxz
push
stos
dec
mov
add
sbb
sahf
mov
je
outsl
and
sbb
bound
subl
or
imul
inc
and
es
push
mov
push
xor
mov
pop
fistps
jo
mov
outsl
jg
mov
cmp
jle
mov
add
das
dec
push
jb
adc
in
and
outsl
fisubrl
outsb
lret
add
out
notb
sub
xor
xchg
arpl
sub
arpl
orb
insl
jo
sbbl
sbb
outsl
in
cmc
pop
adc
xchg
push
push
mov
mov
js
sub
pop
jle
inc
push
jb
push
cmp
mov
push
pop
repz
insb
ror
add
pusha
mov
fs
push
rcl
xor
popa
rclb
cs
sti
jo
arpl
sbb
in
lods
pusha
bnd
jae
jnp
inc
mov
cmp
cmp
stos
pop
jb
xchg
add
dec
stos
not
repnz
add
adc
in
cmp
jns
and
xor
or
sbb
push
pushf
ficoml
ret
push
add
lock
insb
inc
or
jnp
jb
sub
and
sub
or
pop
scas
iret
aad
or
sub
add
fildll
jo
pop
adc
shr
and
imul
xor
cmp
scas
out
fldt
arpl
pcmpeqd
jbe
mov
in
subb
and
pop
push
stos
popw
sbb
loope
mov
jmp
das
jae
loopne
and
testl
pop
xchg
jb
inc
sbbl
cmp
sbb
xchg
jb
xchg
adcb
sub
fdivrl
js
jne
add
inc
push
out
mull
mov
push
fbld
push
mov
cmp
imul
jo
xchg
ds
jecxz
cmp
insl
jg
loop
scas
xor
jo
jle
sbb
sub
or
movsl
je
nop
jns
or
popf
js
push
xchg
and
inc
pop
jl
fs
imul
adc
jns
out
bswap
shlb
xchg
mov
adc
mov
inc
arpl
push
stos
mul
jo
adc
aaa
js,pn
fsubrp
xchg
scas
adc
push
stos
xor
pop
addr16
loop
bound
inc
rcl
mov
test
enter
imul
out
arpl
pop
add
sub
pop
pop
rclb
arpl
loopne
stos
es
aaa
mov
pop
fwait
test
xchg
int3
mov
mov
add
imul
xchg
in
cmp
sbb
adc
cmp
in
and
jl
fwait
mov
gs
daa
dec
dec
cmp
int
add
jmp
movsb
imul
stos
sub
leave
and
adc
mov
mov
xor
xchg
aam
mov
and
mov
add
mov
loopne
add
gs
push
imul
adc
xor
xchg
sarb
sbb
fdivl
outsb
push
adc
jns
inc
push
jne
nop
dec
or
jns
aad
xor
out
sbb
sbb
insl
jo
jge
add
nop
add
lods
pop
xchg
addb
dec
in
adc
jbe
push
jae
xor
popf
test
dec
push
outsl
dec
ret
push
imul
aas
cmpsb
add
inc
push
push
jl
push
imul
jl
push
pcmpeqb
sbb
and
mov
imul
and
imul
ja
insl
inc
mov
push
es
outsb
sbb
push
lods
outsb
je
add
insb
cmp
sbb
aam
inc
inc
push
test
imul
add
inc
xor
dec
inc
dec
pusha
mov
int
xor
push
arpl
cmp
sub
pop
dec
inc
int
shrl
mov
jp
inc
sub
cmp
sub
inc
cs
ljmp
ret
fs
outsl
push
or
mov
ds
test
jecxz
push
pusha
inc
pop
ficomps
or
iret
inc
mov
and
ja
data16
fmul
out
push
inc
jbe
insb
sbb
cwtl
ds
pop
inc
push
xor
les
or
and
mov
add
push
outsl
insb
jne
cmp
shll
mov
adc
mov
mov
inc
insb
pop
sub
jbe
jae
cmc
pop
mov
sbb
pop
xor
push
imul
push
xchg
jae
sub
sub
push
js
int3
sbb
push
jne
push
xchg
pushf
or
mov
sti
in
dec
ljmp
orl
subl
sbb
shll
sub
xlat
sbb
inc
push
test
and
shrl
movl
arpl
ja
mov
sub
test
inc
daa
push
insb
jae
mov
lahf
call
shrd
cmp
stc
je
faddp
cmp
in
rcrl
inc
fsubrs
push
sbb
jns
xchg
push
add
ljmp
xor
repnz
add
push
adc
sarl
jne
ss
push
mov
rcr
call
mov
lock
sub
test
jo
push
sahf
dec
mov
aaa
jmp
inc
jns
dec
inc
outsl
sub
push
or
leave
inc
push
inc
or
outsl
pop
sbbl
sbb
pop
push
dec
pop
lds
int3
ds
jae
push
push
ficomps
add
sbb
adc
adc
or
adc
or
std
mov
adc
or
adc
pop
and
adc
sbb
adc
or
fildl
adc
adc
add
adc
push
adc
push
push
adc
adc
sbb
sbb
add
adc
in
insl
repz
push
sbb
adc
push
adc
sbb
sbb
fcmovnbe
mov
es
or
push
sbb
push
pop
fcmovnu
fcmovu
and
add
and
prefetch
adc
sbb
push
push
xorb
and
adc
add
or
sbb
sbb
sbb
push
pop
sbbb
lock
add
sti
pushl
or
xor
and
nopl
push
or
or
cli
jg
sub
or
adc
or
cmp
dec
sbb
mov
and
cmp
pop
cmp
lock
add
dec
or
xchg
adc
lret
add
ja
incl
std
add
sbb
dec
push
sub
add
push
mov
push
mov
push
and
rolb
add
adc
adc
sub
icebp
fisttpl
sbb
sbb
dec
or
daa
sbb
incl
outsb
insl
lock
sbb
sbb
or
or
es
cmp
lock
push
movb
lock
jo
es
mov
xor
or
stos
xor
dec
xor
xor
xor
sub
sbb
xor
inc
aam
out
sar
aaa
andl
lcall
mov
ret
sbb
or
or
in
ljmp
ss
or
lock
cmp
call
fildl
lock
filds
mov
push
mov
fcomip
pushl
cmp
bound
and
sbbl
mov
cmp
pmaxub
addr16
out
pop
and
lcall
push
incl
sbb
and
push
scas
adc
or
or
inc
loope
incl
jnp
xor
movups
push
adc
adc
or
lock
gs
mov
ret
xchg
push
mov
adc
lods
sub
push
add
xchg
push
or
or
es
outsl
or
or
packsswb
sbb
lock
sti
pop
add
adc
xchg
and
push
mov
inc
mov
pusha
or
or
or
add
or
inc
cs
adc
sbb
adc
push
adc
adc
or
sbb
or
sbb
bound
pusha
pop
xor
or
mov
adc
or
jmp
sbb
jnp
pop
xlat
mov
push
pop
psubsw
or
push
or
adc
adc
xor
add
movsl
inc
push
sbb
and
and
mov
js
add
mov
sbb
mov
sbb
sbb
pop
push
shll
add
and
mov
sti
mov
and
daa
test
sub
add
adc
pop
insl
imul
sbb
add
pop
sbb
add
cmpb
sub
and
scas
imulb
and
scas
adc
add
and
sbb
add
sub
jge
adc
stos
or
mov
push
jns
das
bound
sbb
jl
or
lahf
and
add
ret
add
push
sbb
sub
sub
or
and
add
fwait
aas
jbe
or
or
sbb
sbb
push
mov
cmpl
cwtl
adc
push
adc
pushl
add
in
push
push
adc
push
xchg
sub
push
push
and
cs
xchg
add
imulb
sub
cmp
mov
push
xchg
popa
jp
add
mov
ror
lock
or
loopne
inc
add
lock
add
cwtl
add
sbb
xor
and
imul
sbb
mov
inc
add
sbb
int
and
jg
cmc
and
push
and
adc
cmp
xor
adc
and
subb
sub
adc
dec
mov
adc
adc
bndldx
das
ret
push
dec
inc
add
cltd
sub
adc
sbb
lret
push
sub
cmp
mov
inc
pop
inc
push
or
push
dec
or
xor
pop
xlat
mov
movhps
add
pop
sahf
or
sbb
mov
dec
sub
insl
jle
sub
pop
or
add
add
or
push
sar
clc
icebp
ss
push
sub
inc
push
lock
shrb
add
pop
xor
add
fisubl
or
add
pop
sbb
xor
xor
sbb
sbb
or
fiadds
lods
cmp
pop
sysret
push
sbb
adc
fbstp
xor
and
sub
pop
pusha
xchg
jo
mov
fs
and
aas
stos
lods
add
or
sbb
or
negb
or
or
adc
fisttps
fldenv
lcall
adc
sbb
mov
add
add
bound
enter
mov
enter
xor
or
call
jg
out
add
pop
xchg
push
or
adc
or
div
cmpl
or
push
das
or
or
sti
cld
int
or
sbb
or
add
pop
sbb
mov
cli
insl
or
and
adc
or
sub
lock
and
lock
fisttpl
push
push
adc
addb
sbb
cmp
fdivrs
lock
add
sub
push
xor
mov
sti
js
sbb
orb
inc
std
mov
or
add
fistpl
add
data16
rclb
mov
mov
pop
add
loopne
ret
push
push
inc
lods
inc
movups
jg
ss
dec
push
or
dec
push
sub
add
push
and
mov
sbb
mov
ljmp
pusha
hlt
cs
push
sbb
pop
scas
loopne
mov
add
and
imul
scas
rolb
add
dec
js
fstl
outsl
inc
fimuls
inc
jb
movsb
lea
bound
xor
inc
dec
fdivrp
nop
push
add
aaa
push
dec
sub
leave
push
lahf
fs
lret
stos
jge
movsl
in
out
je
jb
daa
iret
or
jo
jb
leave
dec
aaa
sbb
adc
mov
nop
dec
and
fwait
and
inc
jae
dec
mov
mov
sahf
and
adc
or
xor
add
pusha
mov
add
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
call
jmp
