test
mov
mov
mov
add
insl
test
test
dec
add
jbe
jne
test
mov
lret
or
add
mov
test
sub
cmp
test
mov
lret
jp
cmp
mov
lret
pop
cmovp
popl
fbstp
mov
inc
lret
pop
gs
lahf
mov
lret
mov
dec
decl
sub
add
jbe
dec
mov
mov
mov
mov
mov
mov
mov
mov
bound
jne
add
jne
rolb
incl
mov
pop
lret
stos
mov
mov
fbstp
mov
sahf
mov
mov
mov
mov
jbe
insb
frstor
jne
jne
mov
add
jne
jne
xor
bound
jne
jne
incl
lret
inc
dec
mov
mov
iret
addb
add
mov
mov
mov
mov
jne
xor
jne
jne
dec
mov
in
push
ret
xor
mov
filds
outsl
or
ljmp
cmp
mov
lret
or
add
mov
test
sub
mov
lret
cmp
test
mov
lret
inc
lret
pop
cmpsl
mov
lret
cmp
mov
lret
pop
decl
lret
cmovp
mov
jbe
add
jbe
dec
fcoms
mov
mov
data16
dec
add
jbe
mov
cmpb
es
push
test
mov
mov
cmp
mov
rorb
pop
fdiv
add
jbe
sahf
dec
jbe
add
xchg
add
cmpb
sahf
mov
addb
lcall
jne
or
shrl
add
jbe
incl
mov
jmp
iret
jbe
dec
mov
mov
jns
mov
mov
mov
jp
add
mov
mov
add
lcall
lcall
mov
mov
iret
xchg
add
xchg
or
add
xchg
mov
mov
mov
mov
fimull
arpl
add
mov
bound
or
add
mov
cwtl
dec
mov
dec
or
add
mov
xchg
lcall
jne
xchg
mov
mov
in
jne
jne
cmp
rorb
fdivl
mov
iret
incl
jp
iret
jbe
add
jbe
dec
fwait
add
addb
xchg
mov
arpl
dec
xchg
mov
arpl
aaa
mov
mov
loop
push
mov
jne
dec
test
or
jbe
dec
pop
xor
mov
mov
add
orb
mov
jne
jne
or
dec
int
mov
enter
add
dec
lcall
mov
fldl
mov
orb
mov
mov
mov
or
mov
mov
sahf
or
mov
mov
or
push
jbe
dec
cmp
pushf
cmp
stc
mov
cmp
int
iret
adc
xor
out
or
orl
popa
fcomip
sub
ljmp
dec
cwtl
mov
fisubrl
rcrb
fsubp
adc
dec
fadds
sub
ja
cmp
dec
popa
int3
in
mov
xor
xor
xor
mov
xor
popf
xor
ror
loop
sbb
sub
jne
ds
and
jae
jno
adc
inc
cmp
les
imul
inc
pop
jnp
cmpsb
mov
xor
sub
xor
mov
xor
cmp
cld
loopne
loopne
mov
jb
adc
and
mov
jnp
jl
mov
dec
ja
mov
inc
sti
xchg
dec
mov
popl
inc
xor
fists
stos
mov
push
mov
xor
dec
fildl
cmp
xor
push
out
add
adc
idivb
ljmp
add
call
insl
push
jbe
mov
xor
inc
xorl
xor
xor
ss
lods
mov
mov
movsl
jle
sbb
sub
dec
out
xor
push
enter
sbb
jbe
pop
popf
sarb
mov
inc
fisttpll
cmp
repnz
push
inc
jle
cld
mov
outsb
dec
or
jl
idiv
shlb
insb
imul
adcb
mov
dec
jl
nop
test
pop
jns
in
lods
dec
xlat
cld
scas
outsl
cmp
cmpsl
push
mov
nop
pop
sub
outsb
fnsetpm(287
and
outsb
sbb
mov
dec
out
cmp
mov
xor
xchg
xchg
pop
push
add
xchg
sbb
cmp
xlat
xchg
push
enter
loope
and
sub
inc
xchg
cmpsl
lds
jle
cmp
mov
sbb
lock
imul
cmpsb
cmpsb
int
xorl
adc
nop
push
xor
into
pusha
aas
js
jbe
out
lahf
aam
pop
push
ret
icebp
lock
push
add
xchg
in
aam
out
jecxz
dec
into
add
lret
inc
pop
leave
jecxz
in
xchg
addb
mov
out
jecxz
mov
jmp
sbb
mov
jmp
mov
out
lret
mov
mov
jecxz
test
call
fstpl
dec
icebp
push
inc
push
movsb
mov
pop
push
jne
xchg
cli
mov
insl
lds
add
adcl
xlat
shrb
mov
ljmp
fdivrs
jge
jge
cmpsb
cld
adc
mov
or
jle
rcrl
insl
jno
mov
cli
mov
in
sub
pop
repnz
lock
or
enter
gs
sub
in
daa
mov
pop
sbb
sahf
or
stos
mov
addr16
test
push
pop
rclb
das
dec
dec
push
lcall
lret
mov
push
rcr
out
xchg
jge
xor
jb
cs
mov
pop
dec
pop
mov
ret
cmp
lods
hlt
push
je
lret
inc
out
pop
or
sbb
jle
push
sub
invd
xchg
add
rorl
fsubrl
fmuls
xchg
add
dec
enter
cmp
repz
jb
push
outsb
sbb
or
dec
push
dec
aam
push
mov
adc
jbe
jb,pt
mov
sbb
dec
jae
lock
lea
mov
mov
pop
push
fdivrs
cmp
jns
push
sub
inc
sub
sub
xorl
int
adc
bound
sbb
mov
cli
sub
roll
jl
loopne
movsb
adc
js
cld
sti
xor
shrb
push
movsb
xchg
cmpsl
mov
in
or
inc
jnp
cld
sti
hlt
outsl
in
es
push
adc
movb
jnp
imul
cs
and
add
sahf
inc
adc
mov
stc
add
fimuls
jg
inc
cmp
sub
push
test
rcrb
fists
ret
test
mov
icebp
push
repz
jge
subl
in
xchg
cmp
lahf
dec
add
xchg
cmp
cmp
xor
push
imul
and
daa
push
pop
xorb
mov
fcom
or
or
adc
push
push
cmpsb
add
clc
pop
push
stc
xor
pop
push
fnstsw
adc
jo
divl
stos
xor
push
xchg
test
ds
or
pushl
nop
mov
sub
arpl
inc
xor
shrl
repnz
xor
add
add
sarl
lea
add
mov
jge
popf
divl
mov
notl
sahf
or
gs
pop
xor
iret
addl
das
aas
xchg
xchg
mov
fldcw
lods
push
cmp
lock
and
mov
repz
notl
bound
push
pop
pop
jnp
stos
cli
scas
xor
sub
xor
test
pop
xchg
movsb
xchg
xchg
test
daa
push
hlt
pop
mov
out
jne
aaa
inc
mov
mov
add
ja
cli
test
loope
inc
cmc
cmp
xchg
aaa
jge
mov
cwtl
test
pop
movsb
mov
and
cmp
push
adc
jo
jl
mov
mov
adc
mov
aaa
xlat
std
cmp
insb
icebp
sbb
add
jge
xchg
pop
jne
std
test
cmp
sarl
sbb
sbb
cmp
dec
fisttpl
jge
xor
div
loopne
push
push
xchg
incb
adc
jns
push
testb
cld
aad
lea
ss
xor
mov
or
and
push
data16
cmp
repnz
mov
add
jae
ja
xor
test
inc
adc
inc
adc
adc
mov
leave
test
dec
pop
and
je
mulb
mov
test
ss
fsub
mov
pusha
inc
mov
scas
add
std
dec
mov
xlat
dec
mov
mov
lahf
ljmp
sti
fs
outsb
leave
dec
mov
rcrb
stos
push
fcoml
mov
lea
out
in
push
lea
dec
jle
mov
arpl
enter
push
adc
hlt
jp
jb
jmp
fwait
call
jne
xor
or
stos
pusha
pop
fisttpll
sub
mov
mov
mov
mov
ja
mov
mov
mov
shll
lcall
adc
or
dec
orb
jb
mov
xchg
pop
and
sarl
mov
ret
lock
and
jne
dec
nop
test
mov
mov
roll
jno
inc
jl
outsl
mov
xor
ret
xchg
fmuls
or
out
sbb
add
pop
hlt
arpl
sti
or
adc
in
and
scas
mov
mov
int3
fsubrl
test
push
ds
dec
jle
add
imull
addr16
pop
idiv
mov
adc
in
scas
push
shl
shr
rcl
pop
dec
push
xchg
arpl
ja
jb
push
imul
or
call
dec
fisubl
push
pop
jecxz
sbb
adc
sbb
and
cmp
mov
jnp
push
mov
imul
outsb
imul
sbb
dec
pop
orl
aad
push
mov
out
aas
neg
test
adc
mov
aad
mull
ret
das
jmp
jb
repz
in
lret
add
jmp
and
insl
adc
sbb
jns
ja
inc
sub
gs
mov
xchg
and
insb
push
test
push
aad
push
adc
mov
mov
mulb
and
cmp
jae
or
lock
lods
jmp
mov
sahf
lods
adc
cwtl
jl
clc
sahf
and
xchg
add
sub
lea
out
dec
mov
les
jge
or
arpl
mov
out
inc
lods
rol
cmp
dec
data16
inc
jle
out
stc
jno
pushf
fisttps
stos
popf
fucom
mov
sahf
stc
fbstp
dec
sbb
movsb
mov
mov
repnz
inc
rol
pushf
in
push
int3
je
pop
sub
push
sub
mov
decl
sub
add
loope
mov
add
mov
gs
hlt
pop
shl
push
dec
hlt
sahf
js
test
out
push
icebp
jmp
jl
out
scas
cmp
inc
jle
loope
or
stos
jg
add
stos
jg
mov
cmp
std
jnp
loop
add
imul
add
xchg
lea
sbb
adcb
sbbl
cli
mov
in
and
in
arpl
push
lods
outsl
xchg
in
imul
jmp
inc
push
jbe
xor
or
xchg
insl
dec
mov
and
pop
mov
jecxz
movsb
jo
inc
and
cmp
mov
or
nop
push
scas
inc
inc
xchg
pop
ja
adc
cmp
jl
xchg
push
hlt
and
cmp
sub
jo
push
adcb
adc
jle
adc
inc
push
cmp
inc
inc
scas
mov
pop
inc
mov
cmp
sub
out
stos
mov
testb
and
xchg
and
stos
icebp
dec
dec
sbb
test
jb
call
aad
pop
jmp
pop
movsl
lahf
or
mov
mull
daa
inc
xor
mov
icebp
dec
lret
fwait
xor
jbe
imul
pop
mov
add
decb
test
xor
xchg
ja
shll
xchg
xchg
cld
adc
out
test
pop
add
and
add
fwait
xor
lret
test
sbb
shlb
jnp
pop
inc
xchg
addb
scas
add
xchg
jmp
aam
sti
add
mov
mov
pusha
scas
xchg
ds
cmp
xor
fidivl
xchg
push
cmp
ds
mov
mov
cltd
cmp
hlt
sahf
das
scas
int
fdivs
add
jae
leave
sub
jp
cmp
mov
cmp
jecxz
repnz
and
cli
xor
ret
je
cmp
push
rcll
mov
pop
mov
and
inc
jbe
addr16
xor
inc
aas
xchg
mov
mov
test
sbb
pop
out
das
cmpsb
or
or
inc
inc
fldenv
mov
loop
xor
xor
add
dec
shrl
cli
out
jno
mov
inc
cmp
add
leave
adc
xchg
lret
jbe
clc
mov
pop
push
insb
out
mov
std
xor
inc
push
fidivrl
pop
ss
out
jo
dec
cltd
cld
add
and
lret
dec
xchg
adc
fstl
push
outsb
mov
fstps
dec
movsb
lea
sbbl
dec
add
test
insb
xor
pop
test
orb
mov
or
fmuls
or
jae
bound
xor
insl
cmc
addr16
incl
call
push
mov
std
sbb
pop
mov
push
adc
stc
xor
jbe
ss
arpl
xchg
fcmovnu
cmc
mov
xchg
jo
dec
add
nop
xlat
cmp
push
or
mov
dec
jl
mov
add
xor
dec
sbbl
jp
stos
add
insb
test
mov
test
mov
jg
test
adc
adc
pushl
mov
test
add
std
inc
adc
sahf
arpl
xchg
das
pop
aas
adc
in
xor
lods
push
fsubrs
aas
sbb
popf
mov
int3
shll
add
stc
movsl
sbb
or
nop
aad
mov
out
ljmp
call
out
xor
xor
xor
das
cmc
cmp
cltd
pushf
xor
cwtl
mov
shlb
mov
out
or
pop
das
cmpsl
inc
cmp
cmc
mov
cmc
cmp
pop
xor
repnz
aaa
fildll
inc
gs
pop
xlat
loop
inc
and
into
adc
fidivl
and
rorl
fyl2xp1
or
scas
push
roll
push
test
add
sub
cmp
mov
inc
lock
insb
cmp
adc
hlt
xchg
sbb
push
push
in
aaa
loope
hlt
push
cmp
xchg
dec
js
add
jbe
pop
push
mov
lret
jns
scas
mov
mov
mov
push
mov
nop
sti
inc
xchg
dec
cmp
mov
inc
shll
loope
rorb
test
scas
jbe
inc
pop
inc
or
or
aaa
int3
xchg
jb
mov
cs
popf
mov
std
mov
fdivp
dec
nop
xor
mov
jl
popf
int3
aad
sbb
mov
adc
inc
sub
xor
push
call
mov
push
add
xchg
xchg
mov
shll
cmpsb
ss
adc
inc
hlt
es
inc
cmc
cmp
mull
leave
mov
xlat
adc
dec
mov
fs
push
add
jno
lds
stos
cmc
and
mov
or
jbe
xchg
mov
push
in
mov
xor
sbb
jne
add
push
or
orb
xlat
pushf
popf
push
jo
stc
not
ret
mov
inc
lcall
jne
aas
adc
xor
sbb
outsb
inc
inc
add
cmp
dec
lgs
imul
push
mov
jns
fsubrs
sub
ds
and
icebp
add
mov
testb
adcb
shll
xor
mov
in
push
movb
inc
das
mov
push
arpl
push
popa
jle
movsl
add
inc
frstor
es
rclb
push
sub
xor
dec
das
xchg
ret
loope
sbb
inc
adc
sub
pop
pop
dec
out
mov
aaa
loopne
ret
loopne
mov
js
mov
cli
xor
mov
leave
imul
mov
sbb
lahf
lods
push
adc
dec
fisubl
pusha
dec
out
sbb
jg
push
lods
inc
or
in
rcll
jg
jnp
jbe
add
shl
mov
jp
xchg
roll
cmpsl
icebp
adc
imul
mov
xor
mov
in
sbb
orw
push
cmp
dec
nop
gs
aad
jle
ficoms
stc
mov
xor
dec
mov
lcall
and
lea
sti
pop
or
mov
js
stos
mov
and
cmp
bound
adc
mull
xchg
xchg
jle
shrl
xor
jge
int3
xchg
test
scas
or
fs
das
or
mov
sarb
popa
jbe
push
scas
sbb
sarl
dec
sbb
add
arpl
test
mov
sub
add
lea
sbb
dec
insb
or
and
scas
pop
or
mov
out
and
adc
and
fnstcw
xor
pusha
push
cmc
loope
sub
rorl
pop
loop
add
mov
jp
dec
lds
movl
mov
dec
dec
movsl
orl
and
subb
out
clc
xchg
fldt
cmp
add
ret
dec
in
mov
push
xchg
add
sub
inc
add
dec
sub
sbb
mov
add
push
or
lahf
sbb
sti
mov
cld
in
sbb
cmp
loopne
in
mov
mov
dec
push
pushf
sub
lret
adc
xchg
push
and
push
les
sti
push
add
loopne
adc
jl
sti
lret
push
not
lcall
jo
in
ds
loop
cli
shll
loopne
ret
xchg
pop
pop
jg
test
ret
push
pusha
sbb
push
ds
and
hlt
mov
pop
cmpsb
xchg
ds
mov
stc
or
push
mov
mov
adc
mov
push
xor
je
out
cs
mov
cmp
xor
out
in
add
xor
test
jg
jmp
mov
incb
mov
xor
mov
jo
or
or
mov
shlb
fstl
mov
adc
cwtl
or
int3
ret
in
inc
adc
sub
jl
mov
mov
dec
sub
lcall
sub
mov
add
xchg
addr16
push
inc
stc
jbe
mov
imull
mov
mov
mov
push
ss
repnz
lds
adc
jne
flds
pop
pop
xchg
test
icebp
aaa
stos
int
or
movsb
xor
les
sub
and
outsl
dec
cs
mov
jl
xlat
fbstp
or
pop
hlt
stc
bound
cmp
mov
or
mov
jecxz
mov
jg
dec
les
push
shl
imul
sub
sub
mov
movsl
scas
push
mov
xor
mov
gs
sub
adc
pop
push
or
sbb
imul
and
int3
loopne
mov
jo
mov
nop
jmp
cmp
mov
sbb
push
into
cmp
cmp
xor
fcoms
rol
icebp
mov
aas
mov
jne
icebp
and
aas
mov
shlb
iret
lea
jns
mov
fnstenv
add
push
and
ror
and
cmp
arpl
jecxz
or
insl
icebp
lcall
push
cmpsb
and
shrl
call
push
cmpsb
pop
jne
push
xchg
shrl
movsl
add
add
stos
movsl
aad
popa
repz
cmp
sbb
jo
sub
aaa
xchg
xor
pop
inc
gs
cs
mov
push
jnp
or
push
test
roll
and
jae
mov
and
mov
stc
mov
inc
popa
repnz
andb
aaa
sbb
mov
push
shlb
push
dec
jno
xor
test
orl
or
fistps
js
sub
inc
xor
jo
cmpsb
lds
push
lahf
xchg
xor
mov
sarb
addb
repz
pushf
fwait
mov
jns
adc
inc
aas
or
fisubs
sarb
and
cmp
std
pop
mov
xor
das
fistps
gs
mov
jl
mov
xor
jne
mov
jge
pushf
inc
push
adc
and
pop
xchg
adc
lea
ss
loope
push
mov
xlat
cltd
mov
aad
test
icebp
jne
cmc
int3
cmp
je
xor
mov
je
andb
sub
lahf
push
enter
stc
std
add
fidivl
cmpsb
inc
imulb
inc
aaa
into
cmp
or
jb
dec
fnsave
mov
xlat
lret
jl
in
cmp
push
add
in
and
cmpsl
ljmp
lret
mov
jle
shll
fstpl
dec
xlat
xchg
aas
or
mov
mov
ficompl
xchg
outsb
mov
cmpsb
std
add
sbb
aas
andl
inc
push
or
push
pop
aaa
test
push
int3
xchg
xchg
sub
jge
xlat
loope
lret
xor
cld
inc
pop
add
sub
mov
sub
jg
cmp
push
cmpsl
cmc
adc
bound
lds
sub
cmc
mov
lock
dec
mov
daa
clc
insl
and
sub
movsl
pop
pop
or
out
xor
ja
push
add
and
dec
mov
cli
clc
jle
mov
pop
jmp
mov
mov
add
mov
jo
add
pop
imul
cmp
lods
mov
ja
outsb
jno
cmpsl
icebp
add
sub
add
mov
call
xchg
cld
mov
stc
or
pop
mov
xchg
shrb
xchg
lea
movsl
dec
popf
mov
les
pop
pop
mov
es
push
push
push
or
in
je
lea
cmp
addb
inc
jbe
and
cmc
mov
adc
popa
mov
inc
je
in
fisttpll
or
pop
shll
xchg
cmp
and
std
pop
int3
cmp
mov
shr
prefetch
pop
out
aam
inc
mov
call
ja
aas
xor
mov
add
mov
in
add
movsb
sbb
insb
sbbl
and
xchg
and
mov
mov
adc
cmp
hlt
mov
dec
xchg
repnz
cmpl
gs
cmp
add
xchg
daa
or
in
push
xor
int
imull
scas
ret
pop
jg
xchg
pop
or
add
or
mov
xchg
xchg
pop
sbb
jp
std
pop
sbbb
mov
mov
mov
cmp
mov
imul
xor
lods
rclb
test
imul
mov
adc
ds
and
ja
loopne
arpl
push
mov
popa
fucomip
and
ss
xor
sub
mov
adc
aaa
xorb
pop
incb
and
lret
mov
scas
jge
movsl
and
int
mov
or
pop
movsl
pop
mov
inc
push
aas
pop
jge
ret
xchg
cmpsl
mov
cmp
sub
movsb
inc
insl
lods
je
jns
jge
cld
daa
or
mov
pop
faddp
xchg
jbe
faddl
push
fs
add
or
and
and
subb
adc
or
pusha
int
adc
xor
cmp
and
push
mov
adc
mov
jb
js
xchg
test
add
movsb
xorl
imul
movsl
leave
xchg
mov
sbb
mov
nop
test
ss
std
movzwl
lock
push
inc
aas
and
divl
mov
and
dec
clc
test
aad
and
pusha
inc
loopne
rcll
pushf
jae
movl
pop
popf
mov
mov
js
xor
xchg
stos
arpl
in
xchg
inc
mov
imull
xor
imul
and
mov
outsl
and
stc
sub
xchg
std
pop
in
xchg
inc
test
loop
and
sbb
pop
and
fs
push
pop
mov
add
push
sbb
fnstcw
js
adc
ss
ja
arpl
adc
jno
jne
fdivrl
adc
mov
add
and
mov
inc
dec
dec
movsb
cltd
lahf
out
xchg
xlat
dec
scas
adc
in
push
add
inc
out
addb
sub
fistl
xor
lea
or
repz
mov
pop
repz
aam
je
mov
xchg
dec
out
add
or
mov
clc
mov
fldl
vaddss
push
mov
or
or
cmp
clc
push
xor
test
notb
pop
adc
mov
in
xchg
xor
cmp
add
scas
aas
inc
sbb
xchg
mov
mov
notb
mov
ljmp
lahf
rclb
sbb
add
sbb
mov
lea
imul
adc
fdivr
mov
pop
mov
int3
insl
in
and
popf
sti
dec
jmp
data16
clc
add
mov
dec
cld
pop
test
cmpsl
jg
out
ja
loopne
jg
cmpl
sbb
call
push
int3
repz
push
shll
outsl
imul
int3
lods
data16
std
fisttpl
sub
jnp
pop
pop
jbe
inc
ret
lods
and
xchg
jnp
popa
mov
jnp
and
xchg
call
jo
jg
dec
sbb
cli
pop
in
dec
cmp
in
pop
push
ja
in
mov
cmp
adcl
inc
mov
mov
cli
addr16
sahf
xor
pop
xor
js
add
push
sbb
test
inc
cmpsl
sub
adc
mov
mov
cmp
or
nop
jnp
daa
out
xor
mov
xchg
push
arpl
mov
fisubrs
cmp
icebp
movsl
les
int
push
and
cmpsl
in
add
jecxz
dec
jge
jle
cmp
jae
and
ret
ret
dec
xchg
sbb
sahf
xor
mov
or
jnp
or
pop
pop
add
xor
jb
dec
pop
jbe
jo
pop
sahf
cld
in
inc
xchg
and
stc
adc
adc
inc
cmp
stos
push
iret
imul
jle
clc
cli
or
or
in
cmp
cmc
lahf
pop
lds
int3
mov
repnz
sarl
cmp
and
fildll
sarl
dec
lret
mov
je
out
jno
fbstp
pop
xor
mov
xchg
push
clc
push
orl
push
outsl
xor
test
imul
daa
shlb
cmp
fistl
mov
scas
push
das
add
inc
mov
aas
sub
push
jecxz
cmpsl
dec
movsl
ret
les
mov
lcall
ljmp
ss
adc
inc
repz
pop
adc
fisttpll
jge
movsb
and
sub
popa
addr16
inc
mov
push
lcall
pop
jno
adc
mov
jnp
enter
fs
xchg
mov
daa
sbb
out
add
dec
outsl
mov
mov
inc
in
mov
loope
jle
cmpl
fwait
test
adc
jecxz
je
aad
js
in
pop
aad
scas
or
or
ljmp
and
lret
test
or
adc
das
cltd
adc
xor
or
fwait
ror
imul
int3
dec
popf
fsts
add
inc
cmp
sar
add
scas
adc
popa
movb
pop
jae
inc
out
test
fmul
pusha
and
sub
dec
mov
std
mov
pop
sbbl
xor
push
pmulhw
jmp
jns
hlt
ljmp
nop
push
cmp
int3
jp
lods
xchg
inc
sbb
mov
pop
pushf
subl
or
outsl
and
je
dec
in
cltd
jg
test
addb
popa
dec
loopne
add
mov
ja
lret
inc
out
lahf
or
mov
inc
add
jge
push
and
and
ljmp
pop
add
icebp
push
lcall
int3
int
sbb
clc
xchg
lret
push
mov
dec
xchg
jns
out
xchg
jg
icebp
lock
xorb
test
fcomp
mov
lcall
ja
push
cmp
cmp
mov
adc
imul
sub
pusha
cmp
sub
ljmp
add
ret
clc
ja
icebp
jge
movsb
cmp
mov
cmp
cmp
inc
testl
mov
stos
push
adcb
sub
and
push
fxch
dec
mov
sbb
pop
in
dec
stos
or
stos
pop
in
ret
jbe
mov
xor
test
ja
shll
push
xor
cmp
jb
sarb
jo
icebp
push
jp
mov
sahf
pop
xchg
mov
xchg
jnp
xchg
mov
add
sbb
mov
stc
adc
lcall
int3
lods
cmp
fimuls
dec
enter
mov
cmpsb
iret
pop
mov
push
or
push
rol
repnz
psubusw
inc
cwtl
pop
push
mov
adc
je
lret
loopne
imul
movsb
popf
push
jl
mov
sub
addl
inc
mov
jo
testl
dec
xchg
hlt
xlat
cmp
ret
or
rcrb
pop
sbb
fcomi
sbbb
mov
test
lock
lret
inc
pop
xchg
out
fcom
push
hlt
fdivr
ror
into
mov
loop
mov
adc
std
inc
xchg
xchg
hlt
stc
sbb
fs
xor
jno
test
mov
sti
mov
iret
sbb
fmul
out
loop
adc
mov
pop
popf
call
xor
fiadds
xor
cltd
mov
repz
fisubl
cmp
jmp
shrb
push
or
jg
cmpb
insb
popa
pop
xchg
popa
sbb
xchg
shlb
or
adc
hlt
inc
mov
cli
jnp
jbe
fsubs
jg
int3
pop
or
xchg
sarb
and
ret
inc
dec
lret
mov
dec
push
lea
rorb
push
decl
ret
add
adc
sbb
fmuls
mov
scas
cmp
sub
ja
xchg
aad
test
lea
jge
pushf
adc
sti
push
mov
xchg
push
xlat
rcl
and
add
test
fsubl
xlat
jg
mov
mov
subb
sbb
int
stos
sarl
jp
pop
popa
cltd
fwait
add
rol
push
fcompl
xchg
xchg
int
ljmp
std
adc
cmovl
lods
add
sbb
shrb
popa
cmp
and
js
sub
aaa
adc
push
xor
ljmp
mov
test
adc
cwtl
jno
mov
adc
fmuls
xor
mov
and
sub
mov
addr16
lods
out
addl
in
pop
ds
cmp
mov
pop
dec
test
jg
aas
cltd
xchg
cmp
hlt
clc
bnd
data16
mov
idivb
out
mov
push
jle
in
lds
sti
xchg
fldl
repz
sub
xchg
movsl
pop
jge
test
push
add
or
adc
mov
pop
sbb
adc
sub
lahf
repz
sub
push
mov
nop
js
std
and
jno
ret
enter
imul
jne
enter
mov
mov
loopne
inc
mov
stos
rolb
xchg
pop
cmp
imul
xchg
mov
es
rcl
xor
into
in
das
mov
adcb
push
inc
pop
das
mov
push
adc
xlat
and
arpl
mov
push
mov
lods
mov
add
dec
mov
mov
push
pop
jo
aaa
cmp
mov
adc
ficoml
rclb
pop
add
notb
sbb
mov
movsl
and
int
xlat
mov
jae
out
out
test
mov
pop
mov
andb
mov
outsb
mov
call
xor
dec
push
xchg
aam
fnstenv
or
ljmp
jecxz
or
add
cmp
mov
mov
lock
push
imul
jnp
inc
imul
rorb
sub
mov
iret
xlat
and
call
jne
rcrb
adc
mov
and
stos
fistpll
dec
mov
arpl
lret
fsubs
into
pop
and
inc
leave
jecxz,pn
cmp
xor
call
cmp
aad
gs
pop
bound
lock
pop
inc
add
pavgb
ljmp
movsl
stc
jnp
pop
or
in
sub
hlt
dec
fistpll
add
lret
movsb
aad
mov
call
push
and
pop
jle
mov
dec
xor
dec
inc
xor
cmpb
sbb
iret
jnp
dec
lcall
das
addr16
mov
xchg
and
mov
int3
cmp
add
xchg
lret
lea
out
stos
addr16
xchg
icebp
pop
adc
inc
pop
adc
xchg
xchg
jmp
lods
aaa
xchg
dec
xor
cmc
xchg
pop
addr16
syscall
cltd
repnz
out
sbbl
jnp
sbb
sti
mov
ret
dec
sahf
movsb
fldcw
jecxz
mov
jo
pop
adc
cwtl
ret
push
sub
push
add
ja
xchg
push
je
xchg
xlat
xchg
lahf
cld
adc
xchg
mov
std
das
dec
std
mov
mov
enter
push
fdiv
iret
add
popa
push
ret
mov
mov
push
cmp
cmpsb
testl
repz
xor
pop
fs
adc
pop
mov
cld
mov
mov
outsl
and
sbb
lock
jb
mov
add
rcrb
enter
mov
xchg
sahf
xor
movsl
push
mulb
and
and
les
cmpsb
cmp
xor
int
mov
xor
arpl
push
sbbb
lds
adc
add
fwait
sbb
cmp
loop
or
loopne
pop
and
pop
inc
loop
lods
repz
cmp
ja
pushl
push
add
pop
pop
loope
fcomps
movsl
cli
mov
sbb
int
xchg
mov
popf
lds
jo
and
in
test
jno
sub
les
test
in
test
fwait
loop
mov
jne
pop
adc
xor
inc
fiadds
push
gs
mov
cmc
stc
mov
rcr
inc
adc
mov
movl
or
inc
das
jge
idivl
sarl
lods
aad
aaa
mov
jle
pop
mov
iret
jp
cmc
enter
ss
xchg
rcrl
cmc
aad
shlb
mov
js
scas
fdivs
mov
xor
sar
mulb
adc
push
ljmp
movsl
mov
jnp
nop
mov
push
mov
mov
push
and
sbb
sar
out
mov
dec
xchg
or
das
pop
mov
or
pushf
pop
push
sub
cmpsl
sarl
in
aam
add
orl
fwait
adc
negl
sbb
mov
mov
cmp
aas
repnz
cmovp
arpl
das
scas
add
xor
mov
or
jg
dec
gs
mov
xlat
insl
das
dec
les
sahf
and
shlb
xchg
mov
and
fadds
fwait
xchg
pop
push
inc
std
pop
xchg
aas
add
mov
pop
add
into
fmuls
dec
mov
rcrl
fdivrs
and
cmp
push
lret
inc
mov
mov
xlat
shrd
and
shl
dec
xchg
inc
dec
and
lock
sbb
or
xchg
push
mov
fld
icebp
pop
sub
and
cld
add
inc
aas
fisttps
mov
push
add
inc
iret
nop
hlt
mov
cmp
cltd
fsubp
cmc
jnp
sti
sarl
cmp
mull
fcos
mov
out
sub
mov
cmp
mov
hlt
inc
inc
mov
jmp
push
leave
outsl
mov
mov
inc
notl
pop
cmc
pop
fsubs
xchg
ret
xor
sbb
dec
shl
pop
sbb
cmp
mov
nop
fwait
pop
mov
xchg
push
mov
movsl
pushf
addl
hlt
icebp
stc
cmp
add
movsb
mov
jl
mov
adc
dec
sti
insb
add
adcb
pmaxub
and
xchg
xor
enter
dec
push
sbb
push
or
push
rcr
or
call
or
test
xchg
faddl
cltd
fcmovne
in
pop
xor
clc
mov
popf
sarb
xor
es
test
insb
jmp
xchg
jp
xchg
stc
xchg
sub
xor
adc
jnp
and
sti
lcall
mov
inc
mov
fsub
hlt
pop
add
cwtl
sbb
aam
rol
cli
mov
psubw
fs
es
sbb
or
cmp
insb
mov
orb
xchg
icebp
nop
lods
and
mov
repnz
push
fcomp
adc
ficoml
das
sbb
inc
insl
icebp
inc
dec
icebp
out
ret
xchg
loop
or
jecxz,pn
cmp
xchg
lahf
dec
in
or
dec
push
fldt
xchg
lods
mov
inc
sub
test
mov
das
xor
inc
dec
sbb
in
cmp
out
rcll
mov
sub
lahf
cmpb
test
sahf
loop
mov
scas
test
pusha
pop
out
push
cmp
out
daa
xor
clc
movl
fwait
out
xlat
fistpl
or
insl
dec
cmp
cmp
jp
leave
jecxz
orl
xchg
int
sub
cmp
push
cmp
in
inc
cmp
xor
jge
dec
mov
cmp
shlb
je
push
push
push
aad
sbb
fsubs
adc
iret
shll
popa
ss
and
jne
jecxz
ret
fwait
xorb
adc
cmc
xchg
xchg
xor
lods
and
xor
test
cmc
cld
dec
popf
xor
into
cmp
mov
shrl
lcall
std
js
xchg
in
add
mov
int3
rcrl
and
cmc
push
cwtl
or
shlb
movsl
mov
and
decl
hlt
scas
and
mov
mov
dec
aas
push
inc
rorl
ret
divb
xorb
aam
lds
dec
pop
jg
rdpmc
dec
cmp
push
iret
cmp
popa
xchg
push
fdivrs
fnstcw
leave
mov
xchg
fsubs
sub
jle
xchg
jmp
xor
push
nop
add
lcall
icebp
inc
cmp
sbb
mov
scas
push
jp
pop
push
orb
mov
imul
mov
adc
sub
arpl
add
jns
pop
imul
inc
pushl
sub
loopne
rorb
aaa
je
clc
pop
or
jno
mov
adc
pushf
push
cs
lret
mov
enter
leave
push
mov
insb
lock
sar
mov
cmp
cmp
arpl
movsl
hlt
inc
and
lods
loope
ljmp
mov
add
fstpl
clc
cmp
jno
pop
ljmp
cmp
scas
inc
adc
leave
pushf
mov
out
cs
xor
fnstenv
fcom
adc
movsl
or
xchg
daa
cmp
adc
pop
nop
shrl
cld
pop
sbb
fiadds
mov
cltd
scas
jl
add
dec
les
jbe
sub
js
mov
fidivl
ror
mov
jno
sub
xor
pop
nop
test
cmpsb
mov
push
fmul
into
lock
out
fiaddl
cmp
xchg
dec
inc
shr
test
cmp
jl
rcll
jb
sbb
in
mov
add
inc
mov
sub
in
scas
cmpl
rcll
int3
adc
in
jl
and
jb
hlt
int
lods
aam
int3
aas
rcll
xorl
mov
xlat
out
lcall
inc
pop
lds
loopne
sahf
jo
xlat
adc
push
imul
cltd
js
add
mov
daa
rcrl
cltd
adc
cltd
xor
and
pop
dec
jnp
cmp
xlat
stos
mov
in
je
ret
adc
mov
dec
adc
popf
push
mov
mov
scas
mov
out
fstp
xorl
dec
sarb
sbb
jecxz
int
sub
es
xor
add
or
inc
outsb
fmul
int
rcrb
xchg
sub
lahf
jmp
movl
in
sub
movsl
imul
push
stos
push
cmp
mov
inc
push
pop
movl
sub
pop
call
cld
loopne
and
push
mov
jp
sub
sub
fstpt
and
imul
mov
and
push
mov
cmp
popf
pop
xlat
subl
mov
rcrl
sbb
pop
fidivrl
adcb
mov
int
cmpsl
or
stos
test
mov
aad
sbb
loopne
mov
sbb
pop
pop
test
xchg
call
int3
and
out
xchg
dec
mov
xchg
push
mov
das
add
outsb
pop
repnz
push
std
jnp
xchg
pop
sbb
xchg
lods
jae
dec
pop
aam
or
lods
fists
in
je
scas
int3
ret
icebp
pop
add
jp
out
je
call
sub
movsb
add
mov
fs
and
mov
imul
call
cmp
dec
or
pushf
int
dec
lea
dec
inc
inc
sar
shlb
pop
pop
jmp
outsb
mov
das
xor
pop
mov
addr16
int
mov
nop
fs
cmp
addr16
test
gs
xchg
sbb
mov
hlt
add
cmp
cltd
test
stc
stc
and
xor
cltd
xlat
pop
mov
pop
leave
ret
ss
scas
dec
lock
or
add
dec
std
mov
or
dec
adc
push
popa
xchg
xor
inc
xchg
xor
xchg
leave
nop
mov
pop
lock
and
xor
lds
sti
mov
add
sti
scas
ds
mov
or
cs
iret
mov
xlat
inc
or
dec
lock
into
xor
xor
incb
stos
add
dec
push
jecxz
jmp
out
add
xor
lret
xor
bound
xchg
scas
rcr
les
xor
adc
scas
aam
and
aam
dec
xor
sbb
je
int
or
pop
inc
adc
sub
adc
mov
fcmovne
mov
hlt
stc
jmp
sarl
ret
aam
test
pop
mov
test
cltd
cld
cmp
xchg
pushf
push
dec
cwtl
or
mov
scas
loope
push
loope
stc
lds
nop
mov
or
push
jno
decl
push
cmc
jbe
and
pop
lods
jnp
lret
js
fs
push
jge
xchg
push
cmp
mov
mov
add
pop
adc
lahf
jmp
push
pushf
xor
lcall
push
addr16
bnd
jle
pusha
pop
ror
jle
jae
test
iret
cmp
pop
js
lds
and
inc
xlat
mov
stos
or
or
and
cmp
jns
hlt
in
adc
jmp
shll
sub
pop
cmpsb
daa
sbb
jecxz
sub
mov
adc
jno
push
cmp
enter
adc
testb
pushf
loope
or
rcr
fstpl
add
popf
loope
dec
push
test
adc
mov
rcrl
mov
mov
push
popl
mov
add
pop
xchg
jns
push
popf
mov
cmp
jp
sbb
fstp
fimull
stos
dec
sbb
mov
fisubrs
add
or
or
out
mov
mov
mov
push
pop
incl
sub
enter
jnp
pushf
clc
and
pushf
test
out
sbb
jns
cmp
cli
cmp
xor
call
ret
inc
into
rcrb
or
sub
cmp
inc
mov
xor
dec
mov
jp
xchg
adc
fstp
mov
jo
mov
js
lock
adc
jnp
xchg
aaa
sbb
sbb
iret
push
mov
fcompl
std
pop
stc
fwait
cmpsl
inc
lret
jge
aad
and
scas
pop
mov
xor
and
inc
add
jl
loope
pop
rcrb
loop
cmp
mov
and
pushf
clc
xchg
lds
rcr
xchg
pop
cmp
arpl
lock
mov
popf
cltd
jae
pop
ficoms
call
ret
in
rcrb
stos
imul
or
adc
out
gs
fstps
aas
inc
cmp
pop
aas
jne
adc
sub
inc
add
xor
mov
lret
outsb
cmp
adc
decl
dec
ret
dec
stos
mov
dec
cmp
mov
stos
test
add
cmpsl
popa
cli
test
dec
sbb
jmp
insl
jae
lds
jae
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
lds
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
addb
andb
adc
pop
enter
loope
jl
jge
lock
arpl
rcll
lods
scas
pop
inc
sbb
mov
sbb
pop
aas
fwait
scas
testb
arpl
loope
loope
loope
loope
loope
loope
aaa
cli
jecxz
dec
stc
lods
aad
jle
cmp
ja
int3
mov
lods
in
in
in
mov
or
mov
das
insl
mov
xor
pushl
call
popa
loope
loope
loope
loope
icebp
movsl
aaa
add
jp
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
jle
into
push
push
push
push
cmc
popf
sub
incl
push
push
push
push
sub
add
ficomps
push
push
ljmp
pop
pop
ss
sahf
push
push
pop
rcrl
repnz
push
push
sbb
call
subl
hlt
arpl
jb
fbld
in
mov
add
popf
inc
mov
in
popf
mov
fcompl
push
in
sub
jne
mov
in
pop
pop
adc
ds
xor
ret
adc
jmp
and
and
cwtl
xchg
inc
adc
scas
push
sbb
and
ds
sahf
pop
sti
stos
bndstx
fistpl
sub
mov
mov
outsb
repnz
add
and
mov
dec
push
insl
cmp
xor
call
dec
adc
inc
pop
cli
stos
or
or
aaa
ret
or
pop
enter
push
movsl
mov
sahf
jge
dec
push
inc
inc
scas
popa
stos
inc
mov
imul
jno
inc
mov
push
gs
in
mov
and
jge
imul
pop
mov
stos
scas
lods
mov
lcall
pop
in
adc
cs
xchg
sbb
adc
cmpsl
das
cmpsl
je
cmp
mov
adc
rcrl
cmp
insb
popl
sbb
or
and
insl
dec
insl
mov
cmpsb
adc
popa
push
push
adc
push
add
dec
test
cmp
lds
imul
addr16
jne
aaa
enter
or
sarb
movq
cmc
test
xchg
nop
mov
pop
int
jo
popa
xor
push
sub
mov
pushf
sbb
adc
jnp
test
cmpl
jg
scas
xchg
data16
cmpsl
cltd
clc
jg
inc
mov
mov
pop
xchg
cmp
mov
out
fs
fstpl
jae
rcrl
subb
pop
adc
stos
cmp
fimuls
nop
loop
lret
int3
aam
clc
xor
lds
movsl
cmc
adc
mov
dec
adc
mov
jp
loope
push
bound
push
inc
loope
jo
mov
fidivrl
mov
cmpsb
lahf
sub
pop
push
sub
dec
in
mov
stos
jo
jmp
xchg
das
in
sbb
mov
mov
shr
int3
stos
cmp
ds
dec
insb
xlat
lods
in
andl
daa
push
sarl
xorl
inc
push
jbe
mov
jae
inc
fnsave
loopne
and
mov
push
test
divl
jle
sub
pop
and
adc
jno
jmp
daa
adc
mov
test
sbb
stos
dec
jne
inc
in
rorb
stos
fs
popa
jle
mov
pop
pushf
xchg
jmp
xchg
cmp
mov
arpl
mov
popa
push
subl
lods
scas
sbb
jmp
push
jno
cmpsb
dec
add
call
adc
adc
sbb
sbb
mov
mov
imul
xchg
cmpsb
mov
je
imul
adc
xchg
jecxz
fcmovnu
sub
int3
lret
out
call
popf
sub
rcl
jne
jmp
cmp
fstpt
in
out
outsb
pop
out
ljmp
lret
cmp
mov
in
call
mov
shll
loope
push
pop
sbb
sub
dec
pop
dec
addr16
dec
cmp
and
out
test
cld
inc
adc
mov
int
xchg
into
int3
in
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
in
sbb
in
xor
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
js
mov
xor
xor
jae
add
dec
test
pop
lods
loopne
sbb
mov
push
push
pop
int
or
jae
xor
jmp
sub
cmp
fiadds
mov
mov
jbe
repz
arpl
jae
lahf
inc
push
sbb
fsubrp
and
jae
rcll
scas
fisttpll
mov
push
or
pop
stos
sahf
movsl
and
mov
cmc
pop
bound
cmp
mov
xchg
inc
xchg
push
test
jns
mov
sbb
jmp
insl
inc
inc
pusha
repz
mov
ljmp
xor
ss
sub
dec
out
int3
push
nop
adc
outsb
inc
and
pop
int3
outsl
xchg
decl
lods
sbb
cmpsb
or
dec
mov
ret
ror
popf
mov
and
push
sbb
dec
stos
jns
in
and
sbb
aas
cs
add
pop
adc
push
insl
cs
inc
data16
add
std
mov
xor
sbbl
inc
and
adc
imul
jns
sbb
pop
and
add
outsb
xchg
mov
icebp
mov
inc
imul
popa
jo
push
rorl
addr16
addr16
nop
sbb
lds
cmpsl
mov
dec
jmp
cmp
xlat
out
call
out
std
xchg
cmpsl
in
inc
stc
scas
nop
add
in
ret
sahf
jg
ds
leave
in
sub
insl
mov
ret
inc
jmp
in
test
pop
and
ja
stos
push
cmc
mov
jbe
inc
dec
in
or
mov
bound
sbb
add
call
ss
in
les
mov
jmp
out
notb
in
cwtl
adc
shl
or
scas
shrb
inc
pop
mov
inc
push
leave
sahf
ret
clc
sti
loopne
loope
sahf
or
sbb
pop
or
xchg
mov
idivb
xchg
movb
insb
aas
pusha
iret
xor
sahf
jle
adc
cmp
cmpb
and
daa
ficompl
pop
mov
bnd
jnp
stos
jg
emms
sub
stos
add
out
mov
inc
test
xor
call
mov
xor
and
test
push
ds
stos
xor
xchg
fdivs
cltd
loop
mov
pop
dec
push
int3
xor
call
xchg
call
mov
hlt
sub
adc
adc
popf
xchg
andb
int
lret
mov
ss
and
movsb
pop
and
push
jmp
jmp
inc
fisubs
call
paddd
iret
push
loopne
ffree
outsl
in
sub
push
add
or
iret
jbe
and
ret
inc
xor
mov
hlt
add
in
mov
shll
cmpsb
fldlg2
mov
shlb
xchg
or
mov
imul
inc
jmp
pop
sub
mov
in
popa
xlat
notl
cmc
in
inc
fwait
aad
sti
sti
mov
and
xchg
sti
xor
push
jmp
loopne
arpl
idivl
jle
inc
insb
cltd
fadds
lock
sub
xor
cmpsl
xchg
arpl
jbe
cmpsl
lods
call
sub
fdiv
bnd
test
movsl
sub
pop
mov
mov
xor
fisubs
xchg
sbb
addr16
jns
in
pusha
in
mov
pop
lret
out
in
iret
mov
sbb
jg
out
popa
loopne
push
mov
mov
add
xchg
and
mov
jbe
ja
enter
dec
mov
mov
arpl
roll
addl
jmp
jecxz
sti
divl
mov
mov
mov
mov
mov
mov
mov
andb
mov
mov
icebp
pusha
mov
pop
dec
out
in
mov
rclb
fwait
xor
arpl
rcl
das
aad
lock
mov
mov
dec
pop
sub
mov
dec
je
or
mov
adc
shll
dec
stos
dec
jp
popa
cmp
lret
dec
dec
dec
inc
hlt
mov
cmc
mov
jne
les
dec
mov
mov
push
or
mov
ds
cmp
je
jge
lret
movsb
imul
stos
jno
imul
and
sub
stos
pop
mov
push
les
dec
dec
dec
dec
dec
dec
jnp
xchg
xchg
cwtl
in
js
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
arpl
dec
ljmp
cmpsb
mov
push
sbb
fdivrp
mov
dec
mov
es
mov
xor
jle
iret
lret
fcoml
mov
or
in
insl
and
arpl
out
xchg
fistps
add
addl
aad
xor
aam
xor
int3
mov
adc
fwait
cwtl
mov
addr16
jo
mov
mov
mov
mov
mov
mov
mov
mov
xchg
data16
leave
in
lock
jno
leave
test
mov
mov
xchg
sbb
dec
aas
das
add
out
negl
cmp
pop
jge
adc
mov
scas
mov
xchg
xor
mov
pop
pop
sbb
mov
repz
xor
push
ds
adc
cli
insb
stos
xor
insb
scas
and
dec
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
mov
mov
mov
out
mov
pop
pop
mov
pop
or
mov
aad
push
fistpl
mov
pop
dec
pop
pop
mov
pop
mov
mov
inc
mov
pop
aad
ja
push
pop
aam
insb
pop
jae
push
pop
pop
sbb
lods
aas
xchg
pushf
pop
pop
mov
push
pop
pop
pop
pop
or
mov
outsl
sahf
xlat
sbb
jmp
add
pop
sub
push
bound
dec
fbld
dec
aad
sub
push
sub
rcrl
es
push
lahf
mov
sbb
xchg
pushf
push
pop
rcr
push
cvtps2pd
pop
pushl
push
pop
xlat
lahf
aad
bound
push
jmp
sbb
sub
push
jbe
xchg
aad
popa
mov
pop
fnsave
push
xlat
push
pop
aas
popf
sbb
pop
pop
mov
mov
jnp
lods
push
pop
mov
pop
or
mov
sub
mov
sahf
sub
cmp
cwtl
pop
sub
and
mov
push
or
or
fistpl
aad
fisttpl
pop
or
sub
sub
pop
fistpl
mov
mov
pop
pop
sbb
sahf
pop
or
or
add
pop
xlat
pop
fstpl
mov
fstpl
xchg
pushf
pop
pop
rcr
pop
pop
pop
pop
or
mov
aad
push
aad
push
pop
pop
pop
adc
mov
and
aad
push
xor
dec
push
pop
pop
pop
aad
push
fistpl
mov
push
pop
pop
pop
xor
outsl
push
pop
pop
pop
out
pop
pop
pop
lods
cli
aas
xor
dec
push
pop
pop
pop
aad
push
mov
pop
adc
mov
aad
push
aad
push
pop
pop
pop
pop
pop
outsl
sahf
addr16
push
ror
pop
pop
pop
xlat
nop
sbb
push
aad
push
pop
pop
pop
xor
push
aad
push
pop
pop
pop
pop
pushf
xor
push
rcr
push
pop
pop
pop
xlat
dec
xlat
or
push
xlat
mov
xor
push
aad
push
pop
pop
pop
mov
pop
sbb
scas
ja
xor
dec
pop
or
int3
push
pop
pop
pop
xlat
cmpsb
push
xor
push
shr
push
pop
pop
pop
xlat
mov
dec
pop
or
int3
push
pop
pop
pop
aad
mov
push
outsl
sahf
xlat
sbb
pop
pop
adc
aad
push
aad
push
pop
pop
pop
adc
addr16
and
mov
or
int3
push
pop
pop
pop
aad
push
fistpl
push
xlat
movsb
lahf
mov
rorl
mov
aad
push
xor
push
ror
push
pop
pop
pop
xlat
sub
fstpl
mov
aas
xchg
pushf
pop
pop
sub
xchg
jl
pop
pop
mov
in
mov
pop
pop
pop
mov
mov
cmp
mov
pop
or
rcll
dec
push
pop
movzbl
xchg
pop
popf
into
xchg
xchg
pop
xchg
xchg
pop
mov
pop
mov
mov
outsl
sahf
pop
pop
or
or
ss
dec
pop
pop
mov
mov
sub
xlat
cwtl
push
ss
pop
pop
ss
or
pop
push
mov
mov
jp
adc
pop
pop
push
ss
pop
pop
pop
ss
push
pop
push
mov
mov
jp
leave
pop
pop
pop
push
ss
pop
pop
sbb
cmp
mov
pop
jno
pop
pop
push
ss
pop
pop
pop
ss
dec
push
pop
push
mov
mov
sbb
pop
int3
pop
pop
pop
xlat
popf
test
pop
ss
dec
push
pop
push
mov
mov
or
popf
dec
mov
stc
jp
out
scas
mov
imul
jle
jne
stc
bound
out
or
sbb
sarl
cld
imul
jnp
repz
and
xor
jp
dec
subb
push
pop
filds
xchg
fs
std
jmp
sbb
stos
adc
cmp
loope
adc
mov
dec
jnp
xchg
sub
mov
jmp
xlat
mov
.byte
cs
addl
lea
lock
enter
and
dec
inc
mov
addl
test
test
insb
xchg
lds
test
rol
test
dec
addl
mov
push
rorb
mov
push
enter
or
lea
xchg
les
mov
in
inc
mov
test
jbe
test
or
in
rorb
push
in
test
insl
fs
jp
dec
inc
addl
mov
or
push
imul
lea
push
lock
test
out
sub
jp
aad
dec
jp
jp
inc
icebp
xchg
jns
push
sarb
addl
or
push
imul
sbb
test
test
or
jno
lds
jns
or
lea
jge
or
mov
out
shlb
or
xchg
mov
push
cmp
test
out
clc
jge
or
mov
push
shlb
orl
xchg
mov
or
out
clc
jno
or
mov
push
sarb
mov
clc
jns
or
mov
push
rorb
or
lds
lea
shlb
orl
add
sarb
in
inc
lea
jp
add
jmp
add
add
add
jmp
add
in
mov
mov
mov
mov
imul
xor
popa
leave
ret
mov
mov
add
and
add
sbb
add
push
adc
add
pop
out
push
add
adc
add
xchg
test
add
and
mov
data16
or
repnz
add
add
add
and
cmp
je
jmp
pusha
mov
mov
mov
xor
mov
xchg
mov
imul
add
push
call
sbb
loop
mov
mov
push
xor
push
push
push
xor
call
lea
mov
sub
xchg
push
lods
mov
lods
mov
lods
mov
lods
mov
lods
push
mov
push
call
xor
sub
xor
mov
ror
pop
dec
jecxz
jmp
push
xor
xor
xor
xor
pop
mov
test
je
mov
xor
mov
inc
loop
pop
loop
add
call
xor
xor
popa
ret
dec
repnz
bound
xor
and
jbe
in
adc
sbb
mov
xor
hlt
push
data16
and
jecxz
adc
and
cmpsl
xchg
outsb
jmp
out
pop
lea
and
or
outsb
jmp
jbe
data16
pop
es
outsb
jmp
jbe
data16
pop
or
outsb
jmp
push
data16
and
jecxz
adc
and
cmpsl
xchg
outsb
jmp
out
push
lea
push
mov
xor
hlt
push
data16
adc
es
outsb
jmp
push
data16
adc
in
sub
mov
jmp
ja
bound
or
addr16
data16
jmp
xchg
out
mov
jbe
data16
ret
out
mov
mov
xchg
ret
sub
cs
out
sub
xchg
fbstp
data16
ret
movsb
push
push
mov
leave
imul
cltd
cltd
data16
insl
cltd
cltd
cltd
xor
addl
adc
nop
adc
in
loopne
bound
pop
data16
adc
adc
mov
cltd
cltd
in
and
pop
loopne
scas
das
pop
test
jbe
bnd
bound
cltd
fs
lahf
jecxz
adc
scas
cs
jo
bound
or
pusha
push
data16
movsb
sbb
pop
test
xor
cltd
cltd
cltd
cmp
jo
bound
enter
outsb
xchg
sbb
data16
cwtl
pop
cltd
cltd
pop
pop
cltd
cltd
data16
in
cltd
cltd
xor
and
bound
push
cltd
out
sbb
nop
adc
jmp
push
data16
jmp
jo
and
jecxz
adc
sbb
mov
mov
jbe
jb
in
sbb
out
sbb
data16
outsb
mov
cltd
cltd
cltd
out
and
mov
cltd
cltd
cltd
pop
in
and
jne
inc
fucom
sub
les
lret
add
cld
js
mov
push
inc
cmp
push
pop
jo
adc
loope
outsb
bnd
mov
scas
in
dec
outsl
xchg
mov
rorl
or
fcompl
pop
xchg
jp
inc
cwtl
or
fistl
sbb
fwait
mov
xor
xchg
sbb
inc
xor
aas
jl
mov
pop
insb
das
jecxz
mov
adc
mov
xchg
scas
aam
rorb
xchg
es
addl
add
out
sbb
std
test
or
addl
xchg
pop
cld
sbb
mov
stos
push
clc
mov
int
dec
mov
ret
hlt
loopne
sub
adc
sub
arpl
subb
enter
add
test
xchg
pop
imul
mov
push
popf
sbb
push
add
cmpsl
dec
cli
test
push
dec
mov
ss
fistps
sbb
adc
gs
push
mov
stos
adc
rcrl
lahf
jae
cmp
pop
inc
orl
into
add
xchg
or
popf
clc
mov
inc
add
loop
add
inc
add
rolb
sbb
inc
