jg
das
dec
dec
fsubr
loopne
and
cmc
and
shrl
xchg
adc
in
jle
push
or
sub
pop
pop
into
xchg
pop
rcrl
cld
and
jbe
inc
frstor
add
add
scas
dec
adc
jge
mov
clc
mov
imul
ja
xchg
sbb
fldl
push
xchg
sub
test
pushf
imul
adc
cmpsb
mov
cmpxchg
xor
nop
jge
dec
test
and
nop
inc
dec
lds
mov
ljmp
push
and
jmp
andl
push
mov
push
add
jbe
out
faddl
xchg
and
and
repnz
lcall
or
sub
rcr
pop
popl
stos
mov
pop
mov
sbb
andb
jnp
loopne
enter
cmc
mov
lds
cs
jp
loope
daa
pushf
jb
or
adc
lahf
fldl
shr
pop
sub
iret
repz
sbb
shrb
and
pop
sti
sub
cltd
scas
inc
nop
out
mov
or
xchg
jge
das
bound
cmpsb
mov
and
sub
pusha
sub
insb
es
fcmovbe
adc
xchg
mov
cmp
ljmp
stos
in
mov
adc
push
xchg
dec
push
in
dec
fldenv
jmp
add
gs
cmp
aas
add
push
jp
lock
rorl
sbb
js
aam
shll
xchg
xchg
mov
pop
ret
pop
out
out
in
sub
roll
inc
or
jle
cmpb
rorl
adc
das
dec
mov
das
in
fisttpll
jp
arpl
mov
pop
mov
sbb
adc
js
imul
fstpt
xchg
dec
mov
icebp
add
bound
inc
lods
pop
test
movsb
cmc
add
mov
or
push
push
xchg
push
movl
pop
mov
and
loopne
xchg
and
iret
pop
lock
rolb
push
cmpsl
mov
jg
sbb
push
jnp
stos
das
in
imul
adc
mul
xor
insl
std
fildl
imulb
mov
xchg
pop
iret
jge
loopew
in
mov
sub
cli
and
mov
popf
gs
fildl
loope
in
loope
cmpsb
push
sub
mov
out
outsl
add
loopne
adc
jae
subl
xor
pusha
movsl
sbb
push
mov
add
scas
pop
mov
sti
rcl
movsb
push
shrl
pop
int3
fnstenv
ja
mov
xor
sbb
jp
sub
mov
int3
or
pop
aad
imul
pop
dec
jb
cltd
pushf
xchg
into
hlt
in
mov
inc
popf
pop
scas
mov
es
in
adc
sti
mov
mov
ja
pop
cmpsb
dec
lret
es
jmp
sbb
std
fsubs
cmp
mov
aas
sahf
jmp
inc
dec
pop
das
push
inc
lods
jle
out
push
push
mov
nop
cmp
ss
jne
cmp
mov
mov
dec
mov
pop
fildll
mov
dec
cmp
or
jne
std
in
push
xchg
cmp
push
jne
cmp
sub
mov
leave
xchg
sub
add
mov
push
iret
dec
xor
cli
pop
in
lret
dec
inc
outsb
mov
fimull
repz
sub
adcl
loop
cmp
lahf
mov
pop
or
int
stos
adc
jo
mov
imul
cmp
bound
cmpsb
dec
jg
and
cmpsl
imul
and
mov
cmp
xlat
sbb
sbb
pushf
mov
mov
pop
out
cmpl
lock
adc
push
inc
mov
push
lods
and
xor
jmp
cli
divb
sbb
mov
mov
push
call
xchg
cs
ficomps
mov
jle
mov
lods
out
gs
testb
sub
mov
ds
les
adc
or
cmp
lahf
addl
lret
sbb
loope
cmp
jmp
mov
and
jmp
sarl
cmp
pushf
jae
movsl
sar
pop
add
call
mov
cmp
int3
xor
jb
mov
lret
outsb
sbb
jo
sar
xor
pushf
xchg
lcall
cmp
imul
sub
pop
mov
test
shrl
jmp
inc
mov
add
dec
lret
movsl
ss
xchg
pop
sbb
pop
nop
sti
in
add
xlat
xchg
fcompp
or
push
shll
out
and
in
int
push
sbb
outsl
rol
or
insl
jecxz
out
dec
je
clc
jecxz
lahf
aas
mov
sbbl
cld
roll
nop
call
cs
aad
and
xor
out
mov
xchg
mov
fmulp
aaa
dec
push
adc
leave
xor
xor
out
loop
shll
add
xchg
mov
and
pop
pop
rcrl
sahf
add
jbe
and
sbb
xchg
sbb
fsubr
cmp
xchg
sbb
xchg
mov
pop
lods
repnz
sbb
aad
mov
lret
stc
sarl
sbb
aas
lret
sbb
and
movsb
add
sub
divb
inc
and
hlt
lea
mov
stos
into
mov
push
fldt
loopne
push
faddl
mov
ss
in
out
stc
scas
mov
inc
shlb
add
test
xchg
repnz
xlat
outsl
enter
xor
jecxz
dec
out
hlt
mov
lcall
ljmp
imull
xlat
pop
push
and
xchg
or
cs
fdivl
or
aad
aam
add
pop
sbb
inc
adc
je
imul
ss
out
jl,pt
fildl
cltd
scas
aam
jecxz
addb
add
adc
lea
loope
incb
lea
outsb
jb
mov
mov
adc
cmp
mov
push
jnp
adc
nop
pop
push
sbb
dec
test
add
push
lods
sub
dec
sub
mov
cli
lret
outsb
mov
sti
inc
lret
call
jp
jb
ds
adc
xor
out
mov
ja
jo
dec
or
fcoms
test
leave
sbb
out
pop
jle
jle
repnz
jne
mov
adc
fs
rorl
jbe
inc
outsl
out
xchg
repnz
dec
stos
test
hlt
xchg
test
xchg
insb
inc
push
or
imul
mov
sub
pop
push
mov
mov
in
push
fidivs
jmp
leave
lods
sbb
mov
mov
es
mov
insl
dec
in
inc
or
xchg
into
icebp
xor
add
push
push
push
mov
sbb
loopew
insb
iret
push
xor
push
push
test
sub
fisttpl
insl
out
pop
xor
test
pusha
cmp
pop
fbld
sub
mov
xchg
into
stc
jmp
leave
hlt
es
jnp
dec
das
hlt
sub
ror
ljmp
data16
mov
call
xchg
cwtl
sbb
lret
gs
pop
mov
das
iret
rorb
pop
lret
jbe
les
jge
popa
mov
lods
movl
nop
mov
jmp
int
std
mov
dec
sbb
icebp
push
mov
mov
enter
out
mov
sarb
push
push
and
fiadds
add
pop
incl
or
in
dec
pusha
cmp
pusha
xchg
bound
pop
xor
in
lret
pushf
addr16
ss
out
pop
adc
mov
jns
sub
enter
mov
aaa
shll
adc
cmpsb
cld
loopne
jecxz
xchg
movsb
adcb
mov
cltd
movsl
inc
inc
jne
in
add
inc
jo
into
les
jp
mov
in
es
sub
xchg
out
push
mov
xchg
out
popf
inc
in
xchg
pop
jno
xorl
mov
cmpsb
dec
hlt
xchg
loop
push
push
fs
cli
jge
adc
cpuid
adc
fsubr
nop
push
fstps
inc
jg
and
push
hlt
push
jns
rorb
mov
test
add
std
inc
outsb
pop
ret
fists
lret
pop
cmp
xor
int
repnz
pop
xor
add
test
rolb
inc
enter
jno
out
pop
popl
int3
test
mov
jns
cmp
packsswb
jno
pop
ret
fists
inc
std
dec
sub
dec
addr16
mov
leave
cwtl
xlat
sub
and
shll
sbb
cmp
cmc
dec
inc
int3
sbb
cmpsl
sub
pushf
or
xchg
stos
xchg
rorl
es
cmpsb
arpl
add
cmpsl
push
push
mov
pop
mov
es
sbb
movsl
std
hlt
push
fiaddl
flds
jae
nop
xor
cmpsl
pop
xor
shlb
cli
xchg
loop
push
sub
and
adc
and
movsb
jnp
xor
loopne
fcmove
scas
or
push
mov
cmpsl
add
jge
out
adc
push
popa
and
inc
popa
std
insl
mov
mov
lret
popf
pop
pusha
add
es
pop
mov
fldt
pop
mov
dec
sahf
add
push
ss
mov
fucom
sub
or
sbb
add
cli
or
push
insb
jecxz
and
cmp
in
pop
bound
mov
push
aaa
dec
lods
mov
repz
push
dec
mov
mov
mov
xchg
mov
dec
ja
fwait
push
cs
mov
sub
lcall
push
or
push
dec
dec
sbb
add
push
xchg
sbb
xor
les
mov
dec
ja
outsb
mov
inc
fwait
push
cld
insb
mov
mov
lock
pushf
mov
js
push
sahf
add
fimuls
cs
adc
jnp,pn
jno
aam
dec
shrl
or
adc
adc
sbb
cwtl
xlat
mov
sbb
or
ss
xor
cmp
pop
rcll
pop
cwtl
fs
test
xchg
out
out
jne
xchg
sub
adc
pop
scas
icebp
imull
gs
cmp
js
sub
fidivrl
add
popf
mov
xchg
stos
mov
mov
jmp
enter
xchg
ret
stc
sub
cmpsl
xchg
jle
leave
aam
and
icebp
aaa
addb
test
test
xor
test
push
push
inc
out
lock
fld
adc
icebp
sub
dec
aad
in
xor
mov
sbb
mov
adc
inc
mov
add
pop
das
shlb
shlb
sbb
insl
inc
lret
sub
xlat
pop
fstl
lods
test
jl
les
inc
xchg
enter
sub
call
cmp
iret
sbb
add
lock
cmp
lcall
in
mov
mov
ret
in
hlt
hlt
roll
cmpsl
imul
js
add
lret
xchg
adc
lret
xchg
pop
add
fldcw
cli
xor
rclb
ret
addr16
aad
sub
mov
mov
push
xor
sbb
mov
enter
xor
pop
push
jnp
sbb
fimull
or
mov
cmpsl
insl
xor
mov
jno
orl
movsl
rorl
out
jmp
add
mov
movsl
int
int3
aaa
daa
dec
test
cmpb
fmul
mov
rorl
flds
aas
js
push
leave
sbb
cmpsb
cmpsb
insb
add
push
pop
inc
jb
and
repz
in
popa
sbb
in
lods
pop
shrl
adc
sbb
xor
cld
inc
orl
dec
sub
cmpsl
nop
cmp
and
push
pop
cmpsl
pop
test
lock
cli
dec
cmp
cmc
jge
test
sbb
inc
imul
or
arpl
jp
push
insb
dec
ss
addr16
pop
out
lock
sub
push
rol
loope
cmpsb
int
cmpsb
add
mov
and
dec
push
dec
fs
lock
xlat
jl
push
clc
data16
xchg
cmpsl
sarl
sbb
out
sbb
ret
jno
aam
insb
push
sbb
mov
fbld
sbb
in
push
inc
scas
pop
push
and
push
rcl
jmp
cmp
movsl
cmpsl
repz
sub
and
sbb
xchg
or
mov
lods
imul
jne
mov
xchg
mov
sub
sbb
fisubl
xchg
mov
push
mov
push
add
out
mov
and
xchg
out
xchg
cs
add
insb
loop
xchg
jns
pop
push
adc
jmp
mov
ds
leave
jbe
loope
inc
lret
mov
icebp
out
mov
insl
add
gs
lock
or
pop
jb
dec
sub
xor
cwtl
xor
cmp
mov
add
sub
xor
and
cmc
adc
addr16
out
decb
es
jmp
xchg
test
adc
mov
dec
cmc
pop
ds
jle
js
nop
pop
inc
adc
jne
insl
iret
nop
stc
inc
in
mov
mov
cmp
out
arpl
xor
test
and
dec
xor
in
iret
inc
jb
push
fisttpll
loop
dec
sti
mov
test
ds
fistpl
loope
and
pop
pushf
and
cs
repnz
add
ljmp
xor
in
jnp
jle
addb
xchg
mov
dec
loopne
in
loop
dec
cwtl
jo
aad
adc
or
pop
lods
stos
aas
xor
test
cmp
pop
or
gs
add
dec
pop
test
inc
add
test
fcoml
negb
jae
lcall
rolb
fwait
jb
sub
adc
xchg
test
mov
lods
or
and
dec
xor
pop
dec
outsl
popf
mov
or
insb
pop
es
enter
cltd
icebp
mov
pop
fwait
or
aad
pop
pop
je
fmull
test
cmpsb
fimuls
cmp
pop
test
sub
xchg
or
dec
or
fcomps
xor
push
or
adc
repz
movsb
cmp
fs
mov
dec
inc
inc
mov
xchg
pop
lret
int
jb
in
mov
jge
cmp
fs
scas
jecxz
stos
lret
loopne
pop
scas
xchg
pop
push
in
inc
call
data16
adc
test
push
imul
dec
and
mov
or
mov
dec
fmuls
ret
mov
shr
pop
lods
adc
adc
push
xchg
cmp
pop
mov
xor
fadds
aam
loope
sub
ret
or
adc
or
aaa
shr
loop
add
pusha
dec
shrl
sbb
or
testb
adc
adc
mov
ja
xor
jne
mov
ret
cmp
pop
movsl
in
mov
and
sub
dec
xchg
sub
sti
cmp
and
arpl
inc
jp
pop
inc
shlb
daa
test
mov
in
cmp
adc
push
pop
scas
ror
pushf
pop
mov
cmp
pusha
dec
pushf
stos
cmp
dec
xchg
lcall
jp
mov
mov
or
stc
pop
test
sbb
mov
in
cmp
mov
dec
sahf
lea
arpl
std
cltd
cmc
xchg
fimuls
adc
and
std
jmp
test
in
aas
nop
cmp
mov
push
in
rcll
push
aad
addr16
lds
clc
pop
leave
pop
adc
jge
les
pop
icebp
cmpsl
pop
cmp
in
orb
push
cmpsl
jns
mov
jecxz
hlt
add
imul
adc
fisubs
into
aam
mov
sbb
gs
arpl
push
sub
rorl
fcoms
sti
mov
sbb
addb
movsb
enter
lahf
cwtl
or
scas
adc
ljmp
mov
xchg
clc
cs
int
mov
lea
sbb
or
stos
sbb
cmp
mov
in
stc
xchg
mov
sub
mov
mov
fnstcw
lahf
or
adc
xor
loop
hlt
sbb
push
mov
aas
sbb
push
lret
fcomi
and
push
pop
pop
push
cs
mov
popa
sbb
daa
mov
xchg
in
mov
cmp
and
mov
ret
fidivrs
popf
popa
jge
in
pop
xchg
lock
pop
fs
add
jb
andb
pushf
stos
cltd
sbb
das
fldt
fistl
push
mov
jmp
aad
loop
mov
outsb
inc
js
lods
jp
test
inc
insl
and
sahf
jnp
xorb
sbb
mov
lds
int
xchg
and
jp
pop
or
call
pop
dec
int
add
cmp
or
mulb
push
xchg
cltd
test
mov
stc
dec
or
movsl
pop
lods
fnsave
cli
aad
aad
fidivl
jle
popa
push
loope
lds
fadds
int3
pop
push
fwait
call
pop
jns
ljmp
sbb
xlat
iret
fsubl
sbb
aas
inc
jb
int
xchg
sbb
lahf
ds
das
jae
das
push
dec
outsb
jl
outsb
lret
sbb
jg
insb
push
dec
sub
aas
xorl
jle
sbb
mov
mov
stos
outsl
pop
sti
aam
aam
ja
out
sarl
pop
movsl
popa
push
xchg
adc
pop
sahf
mov
enter
pop
repnz
or
sbb
push
and
mov
aad
lods
cltd
push
cmp
push
push
jge
mov
jae
insb
pop
xchg
scas
ds
mov
adc
cmp
imul
outsl
loope
add
or
outsb
rclb
add
movsl
in
mov
adc
dec
mov
inc
bound
pop
scas
jns
or
lcall
jbe
pop
lret
and
jecxz
jbe
pop
mov
insb
pop
push
std
stc
add
int3
icebp
outsl
outsb
lds
mov
dec
out
xor
push
dec
pusha
jbe
aam
int3
cmp
adc
sub
cmpb
or
dec
test
dec
popa
ret
pop
dec
popf
jecxz
xlat
dec
stos
jg
js
xlat
jno
mov
in
push
das
cwtl
ss
scas
es
sbb
fsubs
lret
pusha
mov
mov
shrl
and
jg
pop
mov
stos
jo
mov
mov
sub
out
sbb
inc
hlt
cwtl
lods
fsubrl
test
adc
mov
push
adc
das
lock
and
push
ljmp
pop
arpl
jnp
mov
fldenv
cmc
xchg
xor
popa
lods
mov
ds
push
data16
mov
mov
out
les
xchg
nop
jno
add
stos
add
movsl
jnp
aas
lock
js
rcrb
out
cmpb
cltd
pop
and
adc
imul
popa
mov
rcl
test
fcoml
scas
and
lret
pop
adc
jmp
xchg
jg
pop
xchg
mov
sub
lods
cwtl
orl
push
fidivl
jmp
sbb
mov
pop
push
dec
jb
jbe
inc
out
arpl
lret
fcoml
fs
mov
pop
lods
cld
std
xor
mov
arpl
es
imul
sub
sbb
inc
cmp
jb
lret
out
cmpsb
shlb
repnz
mov
xor
mov
push
or
mov
in
add
rcll
js,pt
pop
sbb
pop
mov
fcmovnb
aaa
cmp
test
and
pusha
int3
inc
xchg
xchg
rcr
cs
push
xor
ja
or
inc
xor
push
push
sub
mov
xchg
xchg
rcll
adc
clc
fisubrl
cs
je
and
sbb
xchg
pop
cmpl
jno
xlat
pop
xor
cltd
cmp
mov
cmpsl
push
cmp
shrl
pop
pop
int
pusha
push
push
loope
inc
push
jns
mov
add
inc
imul
addl
and
jnp
dec
inc
bswap
cmp
and
mov
push
inc
pop
xchg
jge
jb
test
and
dec
mov
and
fs
int
cld
lods
iret
sub
jle
aad
std
loope
scas
mov
jmp
cltd
pop
xorl
inc
dec
filds
jne
dec
jecxz
cmpsl
sub
push
jg
dec
fcmovu
inc
and
adc
cmp
pop
stos
dec
data16
das
cmpsl
sar
pushf
in
sub
repz
pushf
jno
push
xchg
sbb
pushf
jae
sbb
sarl
mov
cmp
dec
sahf
cltd
add
repnz
pop
out
inc
mov
ja
and
dec
std
xorl
add
fs
inc
in
fildll
and
aaa
or
loopne
decb
dec
in
fcompl
push
pop
lret
loopne
push
sahf
out
loop
add
int
sbb
xchg
addr16
enter
int3
xchg
sbb
add
arpl
pop
insl
jne
sti
push
inc
mov
mov
xchg
mov
into
loopne
mov
pop
jnp
sub
insb
icebp
sbb
das
pop
fists
pop
pop
push
mov
lds
jbe
or
xor
push
sbb
push
test
pop
lret
push
fistpl
filds
mov
lds
pop
cwtl
loopne
dec
mov
mov
jmp
icebp
enter
adc
add
mov
clc
cmp
mov
pop
clc
jno
inc
test
icebp
or
movsb
jo
jmp
nop
mov
dec
cwtl
pop
jno
jg
mov
pop
push
aad
dec
push
mov
adc
xchg
sbb
nop
inc
inc
push
pop
outsl
movsb
rcll
lret
dec
lds
or
mov
arpl
js
jle
roll
xor
fldl
stos
sbb
inc
mov
aad
add
jmp
jo
inc
rol
stc
out
mov
shl
push
cmp
repnz
not
sbb
pop
xor
and
movsb
sahf
lea
mov
addr16
adc
stos
arpl
es
aam
push
sub
mov
mov
repnz
roll
push
sbb
iret
add
and
pop
mov
cs
xor
js
lret
test
shll
pop
dec
push
pusha
lods
or
dec
rcr
cmc
push
test
xchg
push
adc
stc
and
enter
daa
in
inc
lahf
add
dec
xor
nop
jbe
cmp
movsl
neg
mov
sbb
mov
xor
ret
push
pop
test
pop
cmp
std
aam
sub
xor
push
add
adc
and
sbb
and
int
scas
adcl
push
cld
les
int3
push
addl
loop
movsl
xchg
outsb
gs
lods
insl
xchg
lods
movsl
insb
and
imul
movsl
je
mov
decl
adc
mov
dec
aaa
push
xchg
cmp
sub
mov
adc
or
sbb
add
jge
mov
mov
add
mov
icebp
jmp
pop
push
out
mov
jno
mov
jge
movsb
outsl
into
sub
shlb
xchg
lods
push
mov
rcrb
dec
mov
cmc
int3
or
das
orb
adc
cmpsb
in
adc
cltd
push
and
leave
out
repz
lds
and
push
xchg
lret
cli
enter
daa
scas
inc
mov
hlt
cmp
enter
sub
cmc
mov
sbb
shlb
testb
cmp
xor
dec
loope
pop
pop
repz
mov
insb
data16
fimull
sbb
push
fcomps
fisubl
movsl
dec
test
cmc
enter
xchg
jns
rcll
mov
mov
pop
out
mov
or
icebp
stc
jb
ljmp
fmull
in
push
fbstp
mov
pop
mov
and
push
les
mov
or
jno
pop
add
lock
push
dec
jp
mov
pop
scas
adc
aas
call
pop
sti
jge
cmp
incl
ljmp
dec
data16
fwait
test
xchg
out
enter
push
mov
dec
xchg
in
jne
movsb
fs
cltd
lds
loop
out
cmp
call
push
lret
lods
push
stos
cmp
sahf
mov
xor
adc
inc
jae
xchg
les
fsubs
out
dec
daa
enter
and
insl
or
cli
into
arpl
daa
das
inc
cmp
xlat
xor
pop
pop
mov
ja
je
push
xchg
pop
imul
fisttpll
int
aad
notl
or
xchg
mov
loop
cmpsb
into
xor
out
jp
xchg
pusha
jecxz
sub
jnp
mov
rclb
scas
mov
hlt
mov
into
add
fs
ret
dec
sbb
enter
xchg
je
and
xor
arpl
aam
mov
imul
pop
les
je
mov
adc
pop
les
outsl
popf
and
xchg
bound
cld
sbb
rol
lret
xlat
pushf
fildll
arpl
jge
xchg
push
xor
das
imul
add
aas
adc
xchg
int3
and
xchg
or
cmp
les
mov
into
fidivrl
test
sub
out
test
aas
inc
sahf
sbb
or
mov
test
or
jb
shr
imul
mov
fstps
movsl
hlt
je
rolb
mov
mov
inc
jnp
mov
imul
dec
lret
push
iret
or
ret
inc
push
gs
lds
mov
adc
and
addr16
leave
sub
scas
inc
mov
lahf
inc
inc
sub
mov
or
dec
mov
insl
lcall
lock
xchg
in
sbb
mov
int3
mov
dec
push
popf
jne
pop
adc
xor
add
adc
mov
test
and
sub
dec
add
cmpsl
loop
mov
mov
in
sti
lret
icebp
insb
test
ss
fisttpll
mov
pop
sbb
loopne
sbbb
or
aam
fstpt
mov
ljmp
and
pushf
mov
sbbl
sub
ficoml
test
out
in
lea
insb
dec
adc
pop
fwait
cmp
ja
fcmovnbe
fadds
lret
test
fcmovb
lock
jne
push
add
and
shl
add
or
sub
cltd
pop
outsb
jge
rcrl
fisubl
and
mov
cmp
jns
nop
in
xchg
sbb
add
fs
inc
adc
mov
sbb
fnstsw
adc
sahf
ds
mov
hlt
mov
sub
mov
ds
addr16
pop
pop
jmp
jb
xchg
or
and
or
mov
inc
adc
jbe
xchg
xchg
aaa
sbb
loope
insl
add
push
mov
xchg
aas
insl
out
jl
or
cmpsb
mov
sbb
fstpl
inc
in
into
pop
cmp
xchg
mov
rcrb
mov
imul
pop
mov
inc
mov
dec
lea
pusha
cmpl
mov
or
leave
xchg
push
sbb
inc
mov
sbb
mov
jle
loop
dec
sbb
push
pop
cmp
push
xchg
ljmp
fwait
mov
add
test
or
or
fists
rcrb
stos
jbe
cld
push
mov
ret
sbb
btc
lcall
testl
xchg
pop
negl
rclb
jb
xchg
cmp
push
push
dec
dec
ret
into
mov
fidivl
adc
std
ss
jb
addr16
pop
hlt
cmpl
sub
mov
ret
fcmovb
pusha
cltd
scas
jns
int
test
xchg
dec
add
pop
jns
xchg
fistpll
call
and
lcall
sahf
jl
daa
xor
mov
cltd
fucomp
mov
sub
or
pop
aaa
andb
and
out
test
add
mov
ret
push
mov
arpl
jge
mov
sahf
lock
data16
adc
pop
cld
loopne
mov
cmpsb
inc
outsb
xchg
jle
mov
or
sbb
cmp
fwait
cwtl
adc
outsb
cmpsl
and
jo
inc
iret
inc
int3
add
push
dec
dec
sbb
inc
mov
into
sbb
out
pop
sbb
mov
mov
movl
mov
pop
rcrb
dec
push
insb
ret
xor
inc
dec
dec
pop
mov
dec
rolb
pop
mov
ja
popa
cld
mov
inc
loopne
mov
add
cmc
inc
ljmp
ljmp
add
aam
jmp
pop
je
sub
lock
int
xor
arpl
dec
cwtl
sbb
fstpt
daa
mov
push
fadd
insl
mov
pop
sub
sub
les
push
mov
fwait
xor
into
arpl
dec
xor
data16
inc
sti
mov
jbe
dec
daa
stc
add
lahf
add
outsb
sub
mov
repnz
or
ffreep
adc
dec
push
or
jp
xor
mov
scas
pop
jnp
add
mov
add
sub
mov
sahf
adc
or
dec
lcall
out
clc
dec
iret
sbb
jno
pop
clc
ja
mov
pop
mov
or
rorl
jmp
decb
test
test
mov
in
in
mov
xlat
sbb
inc
cltd
sbb
lea
mov
jnp
jl
mov
xor
je
movsl
add
xchg
rcr
dec
xchg
push
and
mov
cs
mov
pusha
fwait
jne
jecxz
es
out
leave
je
and
popa
dec
add
pushf
shlb
and
xor
pop
loopne
inc
scas
mov
add
xchg
sub
mov
mov
negl
lods
push
xor
ds
mov
jae
lods
leave
popa
inc
sub
aam
sti
loop
cmp
mov
fmul
dec
rorb
xor
test
pop
sbb
mov
addb
push
aas
dec
iret
mov
pop
fs
and
mov
hlt
cmp
rep
mov
pop
movsb
mov
push
test
adc
jp
pop
ja
ret
jnp
push
inc
iret
xchg
repnz
into
pop
test
lret
and
mov
imul
fcoms
pop
sahf
mov
push
dec
push
scas
push
sbb
arpl
cmpsb
dec
push
hlt
outsl
cmp
pop
loop
repz
insb
shlb
int
mov
mov
push
leave
lock
andps
movsl
outsb
movsb
push
cmpsb
jg
xchg
inc
sbb
fidivs
jmp
push
xor
sbb
leave
push
rorb
adc
sub
adc
mov
js
rcll
mov
xor
mov
mov
xor
outsb
adc
mov
mov
fistpl
xchg
iret
inc
or
pop
jno
movsl
cmp
mov
adc
jmp
bound
loop
dec
push
mov
je
iret
negb
mov
out
lcall
pop
cmp
mov
inc
mov
push
cmpsb
mov
jmp
or
daa
xchg
rorb
jg
insl
bound
cwtl
cmp
cs
mov
ficoms
fiaddl
push
pop
cmpsb
std
outsl
pop
mov
mov
cmp
es
push
ljmp
gs
push
mov
push
mov
jmp
ret
push
stos
les
xchg
xor
std
mull
sub
add
pop
mov
dec
adcb
xchg
lods
js
jl
mov
inc
add
sub
mov
mov
sbb
adc
push
gs
jno
pop
imul
jne
or
ds
fcmovb
cmp
int
les
jb
repz
lods
mov
or
mov
icebp
sub
mov
fdivrp
aas
dec
and
pop
lahf
pusha
push
ja
sahf
mov
cmc
into
jne
xor
gs
in
inc
mov
lods
lods
sbb
imul
gs
ret
pop
leave
iret
enter
nop
xor
dec
push
pop
repnz
ficoml
sbb
push
mov
adc
stos
sbb
cmpsl
fs
jae
pop
sub
dec
test
sbb
out
jecxz
andb
popf
dec
aaa
jg
mov
cwtl
imul
xchg
out
scas
frstor
in
adc
ljmp
or
movsb
push
sub
xlat
test
adc
sbb
mov
mov
push
mov
in
and
nop
sbb
xchg
ss
aaa
mov
insl
fildll
push
mov
lcall
jb
and
mov
jmp
int
repnz
dec
cwtl
sbb
pop
xchg
inc
and
push
popf
out
add
mov
cmpsl
xchg
sti
cmc
cmpsl
pop
lds
and
xorb
jg
push
and
lret
jp
mov
jbe
es
pop
ljmp
mov
cltd
jecxz
mov
addl
dec
mov
fcomps
cltd
std
loop
dec
xchg
mov
mov
push
addr16
push
adc
mov
xor
sub
pop
mov
push
ficompl
dec
push
test
or
out
outsl
outsl
jbe
and
call
pop
pop
outsb
adc
icebp
repnz
in
out
xor
sbb
sub
add
enter
fldenv
clc
pop
aad
dec
push
int
cmp
xlat
jno
loope
sbbl
mov
in
repz
push
je
mov
add
nop
call
sbb
adc
in
test
in
jns
sub
dec
lahf
fwait
ljmp
stos
sbb
xchg
shll
lret
mov
mov
xchg
jle
stos
fstpl
xlat
scas
pop
or
push
inc
cwtl
fs
mov
push
mov
mov
inc
into
stc
daa
test
arpl
sbb
rcrb
aas
shll
sub
push
cwtl
pop
jno
out
test
mov
sbb
fstpl
pushf
nop
jae
mov
push
pop
add
sbb
shl
xchg
ds
xor
jle
out
repz
adc
jmp
insl
cmpsb
jmp
mov
mov
icebp
xchg
push
pushf
push
cmp
out
cmp
jb
nop
mov
into
adc
and
sbb
bound
out
jne
mov
jb
stc
sub
push
cmpsl
mov
test
mov
test
mov
jge
jbe
inc
sbb
or
mov
and
jo
popf
jle
ds
lcall
outsl
inc
fidivl
insl
mov
gs
adc
and
int3
cmp
sub
loopne
push
xlat
es
or
mov
xlat
test
adcl
push
ror
into
or
mov
mov
add
loop
je
ret
sbb
and
testl
icebp
cmp
and
sub
sub
ret
cmpsl
xor
scas
dec
inc
iret
mov
shll
js
pop
sbb
fmuls
sbb
pushf
inc
adc
cmpsl
lods
adc
sbb
push
loope
fiadds
mov
pop
mov
dec
dec
xadd
outsl
push
dec
fwait
sbb
pop
sub
std
fiaddl
mov
std
push
push
mov
pusha
out
idivl
fdivrs
jno
incl
dec
jl
mov
adc
loopne
pop
data16
sbb
stos
cmp
sbb
cmp
pop
out
cmp
mov
pusha
mov
sbb
lret
add
fcompl
inc
lock
xchg
or
rcl
xchg
jae
mov
jns
mov
mov
into
lods
test
ret
lods
dec
jno
and
push
sbb
call
mov
dec
stos
inc
push
std
xchg
hlt
shrb
lahf
lret
jp
mov
xor
clc
mov
jp
loop
push
mov
jl
push
ja
popf
data16
es
mov
or
not
or
ret
xor
mov
test
jbe
iret
iret
xor
or
mov
or
leave
push
xor
cwtl
sub
sub
add
dec
mov
adc
mov
push
insb
jg
xor
pop
fcmove
push
leave
cld
push
jmp
sti
adc
push
insb
sbb
add
inc
loopne
nop
hlt
pop
xlat
arpl
in
not
xlat
out
ja
jo
jg
adc
jae
ss
xor
sub
in
or
mov
scas
xchg
xor
sarl
sti
enter
xor
aam
mov
insl
inc
shrl
scas
xchg
insb
adc
add
xor
popa
lret
push
push
fidivrs
add
mov
lahf
rorb
scas
or
jle
mov
std
jp
or
fidivrl
xchg
je
sbb
faddl
movsl
mov
push
fcoms
xchg
mov
or
xlat
das
call
cmpl
push
mov
pop
insb
jo
xor
xchg
shrl
dec
adc
mov
adc
shlb
sti
cmp
repz
cmp
pop
lcall
lods
outsb
xchg
inc
cmp
mov
xchg
and
ret
push
loop
imul
jle
inc
inc
cmpsl
inc
xchg
xor
pop
jnp
jmp
into
shl
jae
icebp
fwait
std
and
push
mov
jae
mov
jns
push
shrl
out
rorb
or
imul
outsb
mov
xchg
in
in
cli
in
sbb
or
push
movsl
xchg
pop
stos
in
add
adc
aaa
nop
sbb
mov
sbb
outsl
cs
dec
and
enter
xchg
pop
or
xchg
iret
inc
xchg
jp
mov
incl
test
mulb
or
fsubl
pop
pop
jns
jmp
lcall
imul
test
push
decb
mov
lea
or
pop
loopne
sbb
dec
lcall
ljmp
sbb
and
call
leave
popa
adc
addl
lahf
and
out
or
adc
imul
mov
jno
fistl
sbb
mov
in
mov
imul
data16
mov
xchg
lock
mov
xchg
arpl
cmp
stos
not
rolb
xchg
pop
gs
mov
sbbl
dec
inc
push
into
sti
imull
sbb
ficompl
pop
and
jno
push
jge
push
adc
mov
jp
add
jbe
insl
xor
mov
inc
pushf
faddp
test
sbb
sub
xor
mov
adc
mov
adc
or
incb
cwtl
jp
mov
cmp
jge
inc
fisttpll
fs
movsb
mov
outsl
repz
mov
roll
push
mov
je
sbb
jnp
jno
ret
sbb
pop
push
add
mov
pop
jle
xchg
push
xor
cld
out
mov
jmp
mov
cmc
mov
pop
jno
jae
cli
mov
ss
xchg
pop
push
cs
jle
xor
daa
es
mov
in
jno
aaa
cmp
in
xchg
pop
sbb
stc
dec
lea
ffree
push
dec
add
and
out
adc
xchg
fistpll
mov
imul
idivl
loopne
hlt
push
ja
jecxz
dec
xchg
cmp
outsb
inc
lahf
dec
and
out
sahf
test
jl
cmpsl
pushf
into
insl
dec
ljmp
jle
mov
aas
adc
jo
roll
cwtl
negb
mov
xor
dec
inc
mov
xor
push
jb
adc
ss
inc
or
cmp
pop
daa
fcoml
mov
scas
rclb
add
or
popf
lods
lods
xchg
push
in
xlat
leave
aaa
inc
xchg
shl
or
mov
pushf
xlat
dec
mulb
and
cmp
rolb
mov
popa
inc
pop
add
jns
xor
out
arpl
cmpsl
fwait
and
outsb
cmp
adc
shll
es
loope
sub
pusha
inc
xor
mov
orl
inc
mov
xlat
mov
shll
lcall
inc
aaa
jnp
cmp
pop
scas
js
mov
fyl2xp1
mov
xchg
xchg
aaa
push
mov
popf
or
inc
fistpl
scas
je
jmp
mov
xchg
mov
pop
stos
popf
test
gs
mov
sti
and
ljmp
test
mov
movsb
push
fsubrs
lods
add
idivb
out
or
call
aam
sbb
push
or
negl
push
ds
jge
sbb
add
lea
add
std
mov
pusha
je
enter
cmpsb
cwtl
pop
pop
hlt
cmc
iret
movb
mov
stos
cmp
rclb
inc
pop
push
aam
scas
call
jb
jge
cld
and
push
int
pop
ffreep
out
ljmp
outsl
lea
pop
inc
inc
js
data16
negl
gs
call
js
cmp
cs
clc
push
mov
sbb
lret
inc
out
mov
cmp
mov
adcl
dec
pop
pop
and
imul
fs
jo
jo
mov
aas
out
addr16
cwtl
push
dec
pop
cwtl
xchg
sbb
fdivs
icebp
pop
pop
cmp
cmp
lods
test
cs
cltd
inc
pop
inc
scas
jle
test
xor
mov
adc
push
mov
ret
adc
or
aaa
cmc
js
adc
loopne
mov
inc
dec
mov
or
out
test
loope
push
pop
adc
into
cmpsl
inc
out
mov
imul
push
xchg
aas
out
nop
hlt
sbbb
fwait
pop
lods
push
pop
daa
rclb
cwtl
inc
mov
add
cmp
sbb
push
fsubrs
into
lahf
adc
dec
push
out
sti
sub
mov
xchg
push
add
mov
or
mov
xchg
mov
ret
ljmp
lahf
mov
sub
dec
sbb
rolb
stos
adc
sbb
subb
nop
inc
sahf
and
mov
cwtl
and
faddl
pop
out
mov
dec
sbb
das
mov
dec
dec
mov
sarl
and
dec
cli
push
mov
jp
jae
shrl
repz
push
sbb
inc
fldl
in
rol
xchg
out
fidivs
or
mov
gs
dec
icebp
in
mov
sub
add
daa
mov
mov
out
jbe
push
test
outsb
push
push
lahf
mov
add
jbe
iret
xchg
clc
pop
movsb
loop
xor
jle
ljmp
outsb
or
jnp
sbb
icebp
mov
in
mov
xchg
gs
mov
pop
sub
adc
andb
sub
dec
and
std
rolb
pop
fimuls
jne
jge
push
into
sub
jo
push
add
sbb
jns
sbb
rolb
pushf
pop
imul
es
repnz
sbb
bound
loop
mov
shll
adcb
mov
lcall
mov
push
ficoms
pop
arpl
mov
aas
mov
sub
mov
les
call
or
adc
repz
cltd
xor
stos
scas
sbb
lods
jl
push
ds
inc
sub
loop
ljmp
mov
lret
or
adc
push
pop
out
int
jge
jo
cmp
and
lahf
dec
das
shll
xor
or
out
lea
mov
push
sbb
sti
out
mov
pushf
outsb
sahf
cmpsb
repz
call
sbb
pop
lds
mov
mov
jmp
call
inc
sbbl
js
pop
inc
mov
lea
dec
jp
insl
bound
shl
outsb
mov
jl
add
sahf
jns
lock
sbb
add
push
hlt
xlat
adc
cmp
lds
or
sub
add
mov
shlb
jo
pop
imul
push
push
ret
or
xor
mov
sbb
leave
or
mov
inc
pop
std
movb
decb
outsb
neg
mov
or
shlb
cld
pop
stos
pushf
dec
aas
xchg
fdivl
jmp
jp
xchg
in
sbb
addr16
pop
test
loopne
inc
adc
out
and
test
arpl
jne
jl
out
out
mov
fstps
or
stos
notb
mov
test
jecxz
cmpsl
jmp
ficoml
xchg
dec
repz
les
repnz
movl
addr16
jle
xor
pushw
adc
shrl
lock
cmp
jno
push
test
dec
jmp
adcl
testb
cmp
mov
popa
lock
mov
test
scas
inc
ret
jae
pop
cmp
outsl
add
jbe
mov
mov
cltd
inc
add
xlat
add
bnd
mov
in
iret
popa
sub
xchg
xor
sbb
push
sub
mov
push
dec
lret
cmp
fs
dec
push
into
popf
lds
xor
mov
push
fsubrs
movsb
mov
mov
or
or
mov
loopne
clc
mov
std
fisubs
or
std
int
imul
fst
xor
dec
out
adc
cli
and
pop
mov
adc
cmp
scas
ja
fidivrl
icebp
pushl
mov
ficoms
scas
dec
dec
pop
int
in
jecxz
je
sbb
pop
mov
stc
inc
push
mov
sahf
sub
lds
mov
sub
daa
sbb
fcomps
mov
xor
fdivs
andb
rcrb
sbb
mov
mov
ja
pop
cs
das
cmp
sbb
and
cmp
mov
adc
stos
lahf
ja
adc
in
out
test
dec
jl
sarb
dec
jo
aaa
xchg
push
mov
mov
mov
imulb
mov
and
mov
outsb
sbb
clc
mov
out
arpl
mov
sub
lret
test
dec
dec
pop
sub
test
rcr
and
cli
cs
pop
mov
divl
pop
jnp
xor
not
sarl
shr
push
scas
mov
xchg
sti
pushf
test
mov
or
out
scas
mov
not
xchg
out
push
add
or
or
pop
cmp
sti
adc
and
jg
mov
adc
cmp
es
outsb
cmp
or
bound
push
dec
sbb
cmp
shl
ret
push
push
push
faddl
ret
jecxz
mov
enter
sub
in
push
push
ret
mov
and
xor
sbb
or
scas
fwait
inc
push
mov
mov
or
mov
mov
movsb
push
sbb
add
dec
cmp
mov
sbb
xor
int
aam
or
xor
fistl
imul
xor
mov
cmp
and
push
mov
ja
add
mov
xlat
sahf
jnp
sbb
sahf
jae
mov
mov
cmp
inc
jns
jns
add
loop
ljmp
adc
push
test
fcmove
fisubrs
xlat
pusha
jp
lea
jg
repz
cmp
sub
inc
and
cmp
mov
inc
jle
and
sahf
push
mov
jle
hlt
inc
rclw
orb
arpl
test
call
shrb
and
psrad
xor
jo
xchg
mov
add
js
add
or
or
mov
xor
push
mov
push
cld
or
inc
mov
fneni(8087
add
xchg
cvtps2pi
push
dec
add
sar
jno
xchg
xchg
jecxz
inc
cmp
inc
jmp
adc
jmp
sbb
push
idivl
add
jns
adc
iret
and
imul
or
daa
pop
outsb
dec
xchg
cmp
xor
pop
or
sti
ljmp
push
sahf
popa
cmp
fmulp
leave
cmp
out
outsl
jnp
pop
cmp
ror
mov
ret
jae
jle
js
inc
adc
stos
jbe
inc
inc
pop
pop
aas
jl
mov
movsb
cmp
dec
mov
and
lret
jmp
inc
xor
cmp
push
testl
push
sub
dec
add
fxtract
les
scas
jg
mov
cltd
rcrl
mov
and
xlat
aas
jge
dec
es
push
daa
cmp
jno
dec
ret
xchg
xchg
and
jae
fs
xchg
xchg
dec
out
shrb
xor
lods
mov
sbb
pushw
hlt
ss
mov
fldcw
and
lret
cs
and
clc
mov
inc
in
inc
mov
aas
add
jnp
dec
inc
sbb
mov
or
adc
jns
push
iret
fimull
sub
sub
leave
cli
shrb
stos
je
insl
sti
popa
and
loop
pushf
dec
mov
sbb
dec
sbb
add
insb
pop
out
mov
pop
pop
push
lret
in
movsb
jecxz
out
in
test
mov
fwait
loop
dec
lock
xor
mov
xor
add
sub
xor
aaa
adc
sub
mov
shlb
ss
test
mov
mov
pop
inc
push
test
adc
push
mov
icebp
out
dec
neg
jl
jge
jns,pn
sub
call
or
push
xor
cltd
leave
add
ret
adc
ret
xchg
loopne
sub
inc
loop
dec
cwtl
or
inc
and
arpl
iret
imul
addr16
mov
and
mov
or
and
imul
bnd
xor
pop
inc
and
repz
repz
cmp
mov
pop
scas
addr16
call
stc
call
add
jg
jg
xchg
mov
mov
addl
fstpl
add
inc
inc
sbb
push
test
sbb
lret
xor
xor
mov
pop
push
inc
add
das
dec
in
notb
mov
mov
leave
fnsave
and
out
mov
mov
or
adc
dec
in
pop
and
jno
out
movsl
cmp
ds
lods
lea
mov
ret
imul
repz
stos
xor
lds
outsb
inc
lfs
cld
xchg
jae
add
sub
repz
jg
xchg
push
jmp
int
addr16
pop
adc
inc
dec
inc
push
outsb
or
or
and
jp
xchg
push
push
dec
push
outsl
out
ficoms
out
mov
je
xor
movsl
fisubrs
inc
cmc
mov
aas
shl
into
mov
je
mov
xchg
mov
sub
popf
setle
orb
and
dec
push
fisubrs
xchg
aam
push
popf
in
mov
test
sbb
and
in
jp
mov
mov
test
xchg
cwtl
inc
push
mov
xor
stos
imul
sbb
je
adc
jge
sub
lahf
scas
dec
mov
xorl
xor
lret
lahf
mov
push
pop
in
dec
dec
jno
add
adc
mov
inc
mov
mov
insb
and
sub
adc
push
pop
out
dec
or
sub
xchg
sbb
push
inc
rcpps
rclb
jle
jl
ja
bound
stos
insb
jmp
lret
pop
pop
iret
sbb
or
cmpsl
add
loopne
cli
cs
nop
cmp
adc
jmp
push
mov
jge
mov
mov
ret
fiaddl
sarb
mov
push
jbe
pop
cltd
cld
push
sbb
cmp
jns
cld
mov
fisubs
xchg
jne
cs
int
aas
imul
cmp
ss
xchg
in
xor
shrl
lret
inc
pop
lret
mov
popa
rcrl
lret
inc
rolb
rorl
jg
loope
sbb
xchg
sub
fincstp
jge
mov
cmc
mov
lock
les
push
mov
push
mov
xchg
movsl
fildll
test
push
mov
sbb
ja
je
aad
mov
jp
dec
dec
mov
sbb
xchg
ret
int3
mov
jne
enter
gs
cmp
enter
sub
into
or
js
rcrl
dec
sbb
arpl
aad
hlt
stos
arpl
xchg
xor
mov
add
sub
mov
out
fisubrs
sbb
dec
lea
add
stos
call
mov
ds
rep
jle
stos
mov
pop
ds
notb
faddl
clc
bound
adc
pushf
mov
push
xchg
outsb
jg
ja
pop
mov
movsb
pop
jbe
or
inc
add
or
lock
daa
out
movsl
pop
data16
xor
jmp
dec
cmp
mov
mov
test
mov
mov
into
push
clc
pop
and
push
mov
pop
sbb
cmc
dec
in
dec
mov
mov
aas
in
pop
into
add
cmpsb
fidivs
push
lcall
push
adcl
repnz
cld
sbb
ret
enter
push
add
mov
push
add
cld
and
jbe
hlt
jo
xchg
lret
add
mov
dec
insb
xlat
in
icebp
sti
inc
pop
orl
xchg
xor
dec
adc
jl
push
jbe
cmp
jmp
sahf
sti
pop
fcoml
jl
fdivl
adc
clc
push
dec
stos
pushf
dec
fistpl
pop
ret
icebp
fwait
cmp
xlat
inc
popf
xchg
cmp
pushf
adc
jne
shrb
pop
xor
sbb
cmc
add
test
lock
stos
rcrb
mov
mov
cmp
mov
xchg
test
push
lcall
in
popf
jnp
lcall
jg
mulb
imul
test
filds
mov
and
sbb
scas
add
xor
fsubs
iret
mov
mov
sbb
lea
pop
outsb
pop
ljmp
xor
dec
mov
xor
push
inc
mov
and
movsl
push
jmp
frstor
out
xchg
in
mov
xchg
cmpsb
scas
mov
push
pop
mov
test
out
pop
pushf
push
loop
stos
push
xor
cmp
cli
cld
cmp
call
cmp
pop
add
dec
ss
jmp
jae
or
test
lcall
ljmp
or
mov
dec
mov
mov
cmpsl
dec
add
add
scas
sub
sbb
dec
cmpsb
enter
cmpsb
adc
je
jbe
mov
adc
xor
in
mov
lock
xchg
jp
adc
xchg
cmp
sbb
sti
lahf
cmp
lcall
cli
jno
mov
xchg
stc
lea
or
and
pop
jl
add
movsl
dec
mov
xchg
sbb
push
pop
notl
std
xor
sub
cs
xor
inc
cmp
out
not
out
hlt
xchg
cmp
and
xorl
mov
lock
mov
push
adc
add
dec
ja
daa
or
inc
aad
addr16
loopne
pop
aaa
dec
pop
lea
dec
inc
cmp
ss
ret
in
mov
xchg
icebp
mov
gs
xchg
movsb
enter
cld
cld
es
add
sub
cmp
adc
popf
shrb
sbb
or
sbb
shlb
das
loope
pop
or
push
lock
mov
sbb
jmp
dec
pop
pusha
int
stos
pop
aaa
push
jne
push
test
pop
xchg
xor
jnp
cmpsl
aaa
dec
aad
inc
add
jae
lds
and
and
push
xchg
and
in
negl
push
adc
lcall
popf
sbb
pop
inc
sbb
jle
inc
cld
adc
std
rclb
mov
nop
mov
stos
push
je
mov
inc
icebp
add
popa
mov
test
dec
lods
xchg
dec
into
xchg
test
cmpb
pop
fldt
mov
cmp
fwait
mov
or
les
daa
mov
shlb
dec
lret
jp
pop
and
out
jl
in
sbb
mov
das
fcomp
jae
scas
lahf
arpl
enter
das
das
movsl
popa
pop
js
mov
sub
cltd
inc
fisttps
xchg
jbe
sbbb
addr16
inc
lret
mov
adc
cmc
insb
sub
dec
fwait
mov
outsl
aad
inc
mov
xor
fst
sub
mov
lea
jne
loopne
xchg
aas
xor
dec
adc
sub
sti
fstpt
mov
sbb
jno
cwtl
and
cmp
xchg
inc
pushf
dec
nop
pop
dec
lahf
push
cmpsl
or
push
sbb
fdivrs
jl
dec
shll
adc
mov
push
das
pop
dec
jmp
repnz
or
adc
mov
xor
lods
call
mov
and
jno
fmuls
push
lret
outsl
inc
filds
jle
inc
stos
jp
gs
out
out
cmp
mov
and
das
jo
jne
xchg
inc
aas
ja
cs
in
and
out
push
dec
movsl
ret
jbe
xchg
push
movsl
js
mov
insb
pop
mov
fs
pop
outsb
or
or
fnsave
adc
mov
iret
sbb
sub
mov
cmpl
aas
mov
push
aas
dec
push
pop
daa
mov
xchg
inc
or
inc
mov
enter
das
stc
push
cltd
cld
and
inc
arpl
fldl
gs
repz
sbb
repnz
stos
lret
cli
sbb
xor
pop
jge
stos
mov
jno
pop
int3
push
gs
lcall
popa
and
dec
mull
mov
xchg
into
test
lcall
nop
fdivs
mov
sub
cmp
and
enter
hlt
cld
adc
mov
lock
mov
mov
inc
mov
xchg
mov
mov
mov
lcall
sahf
or
dec
mov
aad
popa
popa
movsl
shll
mov
lock
repnz
imul
push
rcll
xchg
fisubl
xchg
push
std
lahf
pop
mov
mov
lock
addb
fisttpll
cmc
xchg
adc
push
jmp
pushf
push
pop
imul
hlt
xchg
cmc
mov
mov
das
mov
negb
cmpl
aad
stos
cmpb
divl
mov
popf
pop
jne
test
add
ljmp
and
mov
movsb
std
repz
fidivrs
and
call
pop
pop
xor
fsubl
and
lret
dec
cmp
sbb
out
pop
pop
orb
loopne
inc
ret
daa
and
daa
pop
add
or
add
pushf
roll
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
rol
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
xlat
