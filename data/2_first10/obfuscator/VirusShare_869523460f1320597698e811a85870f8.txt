bt
jmp
xchg
cmpsb
lret
repnz
sub
in
mov
popa
inc
jo
adc
jmp
sub
lret
and
push
mov
in
out
es
or
push
das
jg
jl
mov
xor
adc
xchg
out
xchg
dec
movsl
xchg
call
add
stc
test
mov
pushf
mov
cmp
cmc
pusha
or
pushf
pusha
call
xchg
mov
repnz
xchg
mov
out
pop
jl
clc
lea
xchg
mov
mov
and
popa
pop
sbb
out
lret
lahf
testb
push
insb
mov
mov
loopne
mov
jno
dec
inc
popf
mov
addl
rorl
jno
push
clc
out
lock
out
pop
pop
pop
int
dec
arpl
popa
rcrb
sbb
push
test
adc
int
test
push
jne
and
push
mov
mov
stos
xor
mov
gs
or
add
xor
jg
imul
jo
mov
cmp
pop
movq
addr16
aam
push
push
mov
lods
stos
xchg
jmp
push
gs
insb
outsl
jae
dec
gs
push
call
test
xchg
test
fdivrp
repnz
jb
cmpsb
mov
pop
push
xor
cwtl
xchg
out
add
mulb
jmp
iret
and
pop
shrl
ja
and
sub
std
inc
mov
push
jb
test
adc
and
push
or
inc
std
xchg
mov
fdivl
nop
or
cli
jl
jb
mov
test
fs
je
pusha
pusha
movw
pushf
lea
jmp
pushl
lea
call
pusha
pusha
jmp
lea
jne
lahf
movzbw
setnp
movb
push
movzbw
pop
push
movzbw
push
jmp
cmp
cmpsb
push
call
push
call
xor
lea
je
bswap
mov
call
push
pusha
push
pushl
popl
pushl
pushl
ret
lea
movsbw
mov
push
push
movb
pushf
lea
jmp
jmp
pushl
popl
movb
mov
pushl
ret
lea
jne
test
pushf
cmc
cmp
pushl
popf
push
pusha
pushl
lea
jmp
mov
stos
bnd
and
loope
scas
stos
add
add
push
mov
mov
call
and
add
mov
add
cmp
mov
adc
push
jns
out
jns
mov
inc
outsb
das
sub
sbb
jmp
popf
push
mov
cmpb
jno
jmp
push
loope
shr
test
pusha
xchg
movsb
jnp
fs
jb
stc
cmp
push
call
mov
test
push
mov
outsb
inc
cmpsl
add
aad
ret
repz
jbe
out
cld
mov
push
xchg
xchg
jmp
stos
mov
lret
sub
jmp
ret
dec
mov
lret
mov
das
movsb
lcall
mov
out
mov
notl
dec
inc
jo
lock
rcr
jmp
push
out
dec
cmp
enterw
or
mov
jmp
sbb
int
push
dec
dec
mov
sub
fadds
scas
testb
pop
pop
pop
xchg
outsl
cmp
pop
xor
cwtl
stc
fdivs
jae
jmp
lea
out
imul
adc
es
jp
pop
lods
scas
pop
sub
jo
in
in
out
popa
jecxz
dec
rorb
push
cmp
push
in
xchg
stc
je
ljmp
push
pmulhuw
mov
call
push
sub
xlat
daa
push
gs
js
ja
mov
in
lcall
mov
leave
or
mov
test
push
push
xchg
negb
decl
mov
xchg
mov
fstp
inc
movl
repz
daa
and
mov
loope
repnz
cmc
inc
cmpsb
or
insl
ret
shrl
mov
add
ds
es
dec
pop
jp
jns
sbb
lret
mov
mov
cmc
push
sub
cmc
pushl
popl
clc
cmc
cmp
push
pushf
jmp
pusha
jmp
push
shr
mov
call
lea
jne
rol
bt
xor
daa
or
mov
rol
inc
add
stc
mov
jmp
pushf
lea
jne
stc
pushf
stc
pushl
popf
pusha
lea
jmp
push
call
outsl
ret
mov
out
adc
mov
add
bsf
sar
mov
clc
cmpsb
pushf
pushf
movb
lea
ja
jmp
xchg
adc
push
push
mov
movsl
add
lret
hlt
mov
ds
cmpsl
add
fbstp
int
push
cmp
cmp
mov
mull
cld
int
fwait
cli
push
lods
add
and
pop
incb
and
add
sub
jns
dec
mov
nop
addb
cld
stc
je
add
xor
adc
mov
bt
add
test
test
lea
jbe
cmp
pusha
call
pushf
lea
pushf
push
movl
call
lea
je
call
pusha
call
inc
push
adc
pushl
mov
pushl
ret
adc
lea
push
pushl
call
cmp
call
push
jmp
lea
jne
jmp
jl
xlat
jecxz
repnz
mov
arpl
and
aad
xchg
in
add
movsb
and
push
jns
test
bound
dec
xchg
aaa
or
stc
aam
mov
fcoml
insb
addr16
sti
push
pop
mov
lods
pop
jl
loop
dec
cmpsl
lahf
fdivl
push
mov
insl
insb
insl
mov
xor
icebp
std
jecxz
repnz
mov
mov
ds
repnz
add
cli
bound
push
mov
nop
xchg
mov
dec
and
popa
xor
je
bswap
mov
bound
mov
push
repz
xor
xor
xchg
sub
out
cli
cwtl
ljmp
xchg
lret
inc
fnstcw
sub
jmp
mov
sub
sub
xchg
adc
ret
inc
sbb
neg
sete
shl
xchg
adc
movzbw
mov
dec
mov
test
jmp
pushf
pusha
push
movb
lea
call
jmp
mov
pusha
mov
bswap
pop
not
mov
push
movzbw
movzbw
mov
mov
movb
pushl
ret
mov
movsl
in
bnd
stos
or
mov
repz
inc
pop
sbb
call
cmpb
or
push
stc
es
cmp
mov
and
sahf
mov
repz
pop
push
xor
int3
mov
ds
jb
fdivrp
mov
adc
jo
frstor
rcl
dec
dec
mov
add
fs
imul
add
call
xchg
dec
not
shl
push
xchg
xor
push
test
movw
mov
bswap
btc
mov
or
mov
clc
inc
clc
ror
mov
shl
xor
not
xchg
lods
shl
cmp
shl
xor
add
bt
rol
rol
setl
call
lea
jb
push
movl
call
cmpb
pushf
push
lea
jne
btr
mov
call
stc
rol
mov
pushf
mov
push
dec
test
mov
call
mov
movw
rep
call
call
movl
mov
movb
jmp
pop
insl
add
push
push
aaa
or
xlat
xor
sahf
add
cld
addb
rorb
jns
adc
insl
cmc
fsubs
insl
mov
out
dec
mov
ficomps
les
and
icebp
mov
bound
xor
in
les
push
data16
dec
cmpsl
int3
sub
jne
lds
cmp
popf
push
adc
inc
inc
mov
pop
mov
subl
iret
shl
dec
mov
bswap
bswap
ror
shld
mov
btc
mov
pushf
stc
pushf
jmp
cmpl
pushl
mov
mov
movw
lea
je
ror
clc
clc
mov
and
cmc
pushf
shrd
sub
dec
shr
sar
mov
seto
add
btr
btr
pushf
shl
add
pusha
mov
movb
push
shr
stc
cmp
pushl
movw
jmp
pushfw
popw
mov
pusha
mov
jmp
fwait
out
call
lds
add
rcrb
cmpsb
xchg
out
movsb
pop
fiadds
or
add
push
xor
jmp
daa
cld
jmp
decl
dec
xorl
jg
add
arpl
xor
leave
or
dec
and
cmp
cmp
pop
outsl
dec
cwtl
cld
shlb
test
mov
fldl
ljmp
or
push
push
mov
fdivr
dec
cmpsl
test
lcall
addb
js
in
or
mov
pop
add
add
je
outsl
fs
gs
imul
add
pushf
pushf
lea
jmp
pop
lods
inc
call
fldt
mov
dec
and
fdivrl
lods
cmpl
mov
jno
scas
sbb
sbb
movsb
loop
xlat
mov
cmc
adc
mov
push
sbb
mov
lret
in
movsb
or
adc
mov
and
sbb
sbb
je
negl
cld
imulb
je
sub
push
hlt
into
movsb
mov
pop
fwait
inc
xchg
cltd
scas
daa
sub
xor
mov
xchg
aaa
xchg
jne
and
andl
pushf
xchg
arpl
xor
fnstsw
xchg
movntq
mov
inc
sub
inc
ds
push
lods
push
mov
into
xor
lods
inc
adc
or
mov
mov
add
sub
inc
cmp
sbbb
push
adc
insb
in
mov
fmuls
xor
sub
lret
mov
cmp
mov
mov
scas
mov
out
call
and
pushf
movb
pushl
ret
test
add
call
movl
mov
pushl
popl
push
push
mov
pushl
ret
mov
sbb
push
lret
and
ds
iret
or
jo
jl
and
add
aad
mov
xchg
add
andb
shlb
lret
inc
cmp
cmpsb
movsl
test
jb
call
cmp
call
push
call
xor
push
pusha
cmp
jge
lods
or
jns
xchg
icebp
xchg
arpl
sbb
add
adc
sbb
dec
sub
fnstcw
pop
insl
shrl
inc
enter
scas
xor
cmp
add
jb
jne
insb
inc
insb
insb
outsl
arpl
jmp
loope
jp
push
movsb
stc
aad
jecxz
mov
imul
movsb
dec
imul
cmp
mov
adc
adc
inc
push
xor
stc
and
or
pusha
std
cld
aaa
or
xchg
fs
pop
inc
xorl
cmc
fidivl
scas
ucomiss
cld
add
in
in
fdivr
dec
cmpsb
cmp
pop
mov
or
push
call
pop
pushl
popl
pushl
push
pushl
ret
lea
ja
call
push
call
movb
add
scas
inc
and
push
outsl
shrl
mov
sub
pop
test
push
xchg
push
push
pop
adc
xor
pop
mov
mov
mov
out
mov
into
test
movsl
adc
mov
mov
pop
gs
and
imul
pop
sub
es
insl
int3
sbb
jo
mov
jge
cmp
pop
pminsw
icebp
in
inc
jo
movsl
cltd
sbb
adc
pop
mov
xorb
push
jp
lret
push
add
fs
lea
xchg
xchg
movzwl
not
lea
lea
jmp
add
inc
js
je
jb
arpl
jae
jmp
repnz
push
mov
outsl
les
fs
xlat
sub
cmpl
xchg
mov
fnstcw
arpl
xchg
mov
mov
lahf
add
out
lret
orl
outsl
lcall
add
mov
fistpll
out
loopne
movsb
fidivrl
aaa
xor
and
das
ffreep
mov
pushf
test
push
mov
lods
sub
jnp
clc
out
inc
test
idiv
jb
dec
mov
sub
push
ss
xor
gs
jbe
xchg
push
cmp
ss
testl
mov
roll
push
gs
sub
les
je
mov
lret
scas
jne
popa
xor
test
push
ljmp
mov
adc
inc
push
dec
faddl
jb
lahf
sbb
leave
scas
inc
test
idivb
in
in
push
pop
push
scas
inc
aas
push
int3
clc
pop
push
push
inc
lea
lea
pushl
push
not
pushf
mov
jmp
movzbw
mov
clc
and
clc
add
test
jmp
mov
push
lea
je
jmp
movsbl
pop
lea
pushf
push
xchg
push
lahf
movl
mov
lea
lahf
lea
mov
pushl
movl
jmp
movsb
idiv
in
push
popa
inc
sbb
fnstenv
add
les
and
cwtl
out
or
mov
ficoms
in
inc
push
pop
aaa
cmp
xor
call
and
mov
xchg
inc
pop
pop
cmpsb
test
lods
insl
inc
jle
ss
mov
syscall
add
jns
fsubrl
aas
cmp
cmp
je
push
add
shll
stc
and
mov
movsl
cld
jl
pop
or
mov
cmp
js
mov
repnz
mov
imul
addl
loop
mov
push
inc
cwtl
jns
jmp
push
pop
push
lret
mov
pop
lock
call
pushf
pushf
jmp
cmp
jmp
inc
xchg
pop
out
push
les
pusha
aaa
xchg
lock
lea
stos
inc
dec
sub
dec
negb
scas
mov
leave
xchg
xchg
dec
sti
movsl
mov
ret
mov
mov
cvttps2pi
dec
push
ljmp
repnz
insb
out
mov
test
lods
imul
dec
out
leave
mov
or
fidivrl
lods
jmp
lcall
jle
aad
inc
dec
inc
cmp
pusha
push
pusha
pushl
popf
pushf
pushf
mov
mov
lea
jmp
pop
outsl
jg
push
lahf
jae
xor
addr16
mov
in
ret
jl
mov
sbb
iret
es
cli
or
jmp
sbb
adc
push
jecxz
jnp
mov
inc
sbb
pop
adc
pop
mov
popa
inc
fisubs
inc
out
xchg
inc
sbb
mov
mov
xchg
or
je
out
out
out
pop
pop
jae
pop
shrb
scas
movsl
pushf
lea
jno
pushf
pushl
popl
pushf
pushl
ret
lret
jb
leave
pushl
jmp
call
ja
push
call
lea
ja
cmp
sub
clc
or
cmp
add
pusha
movzbl
add
shl
mov
xor
mov
push
repnz
pushf
pushf
lea
jne
pusha
movsbw
movb
lahf
movzbl
mov
movzbw
pushf
pushf
lea
call
cmp
pusha
pushf
call
jmp
push
and
push
iret
mov
jae
mov
gs
jae
es
and
std
daa
movsb
lds
add
push
mov
mov
sahf
pop
inc
sarb
mov
or
testb
aaa
xchg
popa
cmp
mov
fidivs
mov
jl
daa
stos
or
push
and
cltd
sbb
aas
dec
sub
das
xor
sub
cltd
cwtl
cltd
xchg
addl
sti
push
popf
fnsave
stc
repnz
inc
push
inc
push
dec
xor
cs
insb
add
mov
movsbw
lea
pusha
pop
mov
xchg
movzwl
pop
lea
pusha
not
mov
pushf
lea
call
call
xor
adc
stos
mov
xchg
cmc
int
mov
inc
mov
or
mov
dec
incl
in
ss
push
int3
out
int
push
cmp
les
sbb
xor
mov
movsb
and
cmp
pop
scas
popf
pop
xchg
pop
fmulp
imul
mov
dec
es
cmp
xchg
repnz
mov
dec
mov
dec
mov
pop
cmp
push
sbb
shrl
and
xchg
or
test
jge
pusha
mov
pushl
lea
jne
not
movzbw
call
sbb
push
outsb
dec
stos
mov
jne
xor
mov
xchg
lods
mov
iret
lret
jno
add
dec
fwait
arpl
into
fimull
sarl
push
pushf
mov
push
out
outsb
loopne
das
xor
stc
kmovw
push
jmp
mov
jmp
adc
ffree
out
cmpsl
dec
scas
sub
out
out
and
enter
mov
push
shr
push
adc
adc
faddl
mov
mov
dec
jmp
fs
jno
lret
cmp
sub
adc
fsubp
add
add
add
ljmp
add
add
add
add
fimuls
add
dec
enter
int
add
adc
add
mov
add
add
add
fsubp
add
add
add
call
mov
jmp
push
call
pop
xchg
push
call
ljmp
mov
rorb
cmp
cmc
cmp
or
call
pushf
mov
lea
je
bt
clc
test
call
lret
sbb
repnz
dec
and
scas
nop
addr16
jmp
jge
and
pop
in
jg
and
xor
or
push
mov
push
cmp
xchg
mov
dec
lcall
add
fmull
and
scas
dec
mov
jae
sub
iret
es
inc
daa
pushf
xchg
outsb
mov
push
das
es
push
shlb
add
aam
or
cmp
pop
fdiv
jge
imul
xchg
pusha
dec
push
push
out
dec
and
mov
cmpsl
mov
xor
imul
push
addr16
pusha
push
mov
sbb
dec
int
fisubrs
xor
dec
mov
mov
andl
push
popf
divl
push
in
shl
sahf
repnz
jg
jmp
cmpsb
and
orb
jns
sub
out
mov
inc
movsb
cmp
adc
sbb
das
scas
jmp
ss
fs
push
push
push
enter
xor
push
in
mov
into
mov
xchg
dec
adc
add
and
out
mov
pushl
test
cmpsb
call
cmp
add
jo
add
push
push
pusha
lea
jmp
js
and
push
cli
push
lods
xchg
cmp
mov
push
shr
add
mov
aas
adc
add
repz
nop
dec
sbb
inc
in
ror
not
movsl
jp
mov
pop
cmpsb
out
cmp
ss
enter
sbb
repnz
loope
ret
sbb
rcrb
lahf
adc
int3
adc
cmp
push
mov
sbb
mov
mov
js
or
xchg
jne
lret
xchg
sti
aad
in
xor
and
sbb
push
adc
stc
mov
cmpsb
test
loope
xchg
dec
cs
das
mov
xchg
dec
push
in
call
popa
mov
dec
jg
call
insb
mov
lahf
aam
cpuid
push
call
mov
aam
ror
stc
test
popfw
jmp
not
push
dec
adc
neg
sub
sub
ror
not
ror
movb
push
pusha
seto
stos
push
pushf
mov
lea
push
pushf
mov
pushl
lea
call
push
lea
jae
stc
pusha
xor
pusha
movb
pushf
pushl
lea
call
push
movb
lea
jae
clc
stc
pushf
sub
call
call
inc
mov
push
pushf
pushf
adc
pushf
pushf
pushl
ret
jno
ljmp
cmp
cmp
lret
popa
inc
imul
cmp
dec
into
lods
test
mov
sub
test
test
adc
std
cmc
xchg
push
jae
inc
xchg
mov
test
and
inc
cmp
std
jecxz
lahf
xor
lahf
sbb
fcoml
cs
test
scas
inc
enter
dec
xor
outsl
inc
outsl
aam
gs
cmp
mov
sub
int
test
push
dec
inc
dec
xor
cs
insb
add
dec
adc
call
xlat
rorl
add
add
negb
test
xor
add
sti
add
ret
sbbl
add
cmp
bt
cmp
pushf
cmp
push
push
pushf
lea
jb
call
clc
bt
shl
pusha
mov
mov
pushf
lea
je
push
mov
mov
call
test
pusha
bt
cmp
push
lea
jae
bt
cmp
cmc
cmp
jmp
clc
lock
add
sub
xchg
ja
mov
add
outsb
std
jo
push
ficoms
add
mov
cld
dec
lret
cmp
add
aaa
outsl
adc
mov
add
add
idivb
add
ja
pop
lea
mov
test
mov
scas
add
add
loopne
sbb
add
scas
mov
dec
xchg
mov
add
xor
jle
sarl
add
add
fidivrs
mov
add
fidivrl
add
jmp
decb
add
or
loopne
clc
xor
add
cmp
loopne
mov
add
stos
dec
pop
jge
mov
add
fidivs
sbb
mov
add
loopne
or
add
push
xor
ss
add
push
mov
jp
add
sahf
aas
pop
rorl
xor
and
xor
add
mov
jmp
add
add
ds
add
xchg
mov
imul
add
xor
ss
add
add
lock
jnp
ss
add
add
push
daa
mov
mov
add
mov
mov
add
add
mov
sub
xor
add
clc
adc
or
add
dec
mov
jle
jecxz
ss
xor
test
mov
add
mov
mov
add
xor
clc
jmp
movb
jmp
str
push
call
in
xor
jo
xor
lea
ja
rcl
cmp
sar
sub
movsbw
or
mov
add
inc
bswap
bswap
mov
inc
mov
jg
clc
repnz
call
add
stc
bt
cmc
pusha
movzwl
lea
sar
push
mov
test
cmp
add
pusha
stc
clc
mov
pushf
test
pushf
jmp
cmc
mov
stc
pusha
cmpb
call
push
call
mov
scas
push
scas
aas
stc
push
fistpll
add
adc
sub
push
add
adc
and
xchg
push
loopne
repnz
inc
mov
mov
scas
pop
jmp
mov
add
xor
bnd
test
inc
xchg
mov
scas
pushf
cmpsl
mov
push
dec
lret
ret
inc
and
out
in
inc
adc
loop
push
insb
outsb
out
out
pop
rorb
dec
sub
add
or
push
xchg
sahf
jbe
mov
cli
fnsave
mov
sbb
stos
movsb
xor
in
pop
adc
push
in
lcall
mov
cwtl
jg
std
jnp
xchg
daa
jle
xlat
sub
cmp
add
jecxz
pop
push
inc
inc
inc
ds
cmp
jge
sub
mov
mov
xchg
mov
sub
rcr
rcl
add
rcl
jne
pop
ss
cltd
mov
or
inc
push
call
jmp
add
pushf
pusha
pusha
pushf
pushl
ret
push
call
push
outsl
aad
pushl
call
push
push
cwtl
cli
push
stc
fdivl
jns
sub
out
dec
je
push
jge
or
repz
ds
les
negw
sbb
stos
jmp
leave
adc
sbb
shl
sahf
ja
mov
pop
pop
insb
outsl
add
cli
jl
test
shlb
inc
inc
outsl
push
addr16
or
sub
or
mov
sti
shrl
sub
cwtl
pushf
or
cmpb
jp
sub
rcrl
fs
ja
cmc
sub
push
mov
pusha
mov
lea
jmp
call
push
mov
shrb
jne
and
adc
mov
dec
dec
popf
sub
dec
mov
insl
push
push
xchg
or
mov
test
sbb
mov
addl
roll
add
push
inc
adc
pop
xchg
add
push
cmp
push
push
call
mov
pushl
movl
mov
mov
call
push
call
aaa
xlat
inc
fwait
push
sti
push
es
les
add
jge
and
cmpsb
mov
push
test
pop
jecxz
lcall
sarb
mov
cmpsl
sub
and
sbb
push
mov
repz
and
dec
and
in
imul
pop
addr16
lahf
js
aam
in
xor
sub
pop
jns
pop
mov
out
call
mov
repnz
xor
jnp
mov
cmp
mov
stos
sub
mov
sbb
or
call
cmpsb
mov
addr16
xchg
cmpb
mov
mov
ljmp
pop
das
xchg
imul
loopne
inc
push
dec
fmul
mov
fstp
aad
int
fwait
test
loope
dec
lock
mov
ret
loopne
insb
pop
mov
xor
pop
je
mov
xchg
jbe
aas
pop
adc
push
or
adc
shlb
shlb
movsb
pop
cltd
or
icebp
loopne
mov
sbb
test
and
jmp
mov
pop
pop
xchg
jno
inc
pushf
sar
mov
mov
sahf
mov
jo
sbb
push
xor
dec
mov
or
jno
pop
pop
xchg
not
inc
rolb
xchg
push
and
or
cmp
shll
ret
sbb
adc
ss
lea
subl
jge
cs
or
add
popf
je
ja
loopne
sbb
jmp
mov
jl
stc
loopne
jg
jp
sub
xchg
hlt
lds
andb
shll
mov
mov
mov
cltd
adc
ja
out
aaa
mov
add
add
call
push
call
pushf
push
cmp
int
or
jmp
push
neg
not
neg
mov
clc
pusha
sub
pushf
push
rep
movsbw
call
lea
jae
xchg
bsr
clc
mov
shr
shr
btr
mov
bt
mov
jmp
lea
jne
push
pusha
pushf
push
lea
jmp
mov
cmp
pushf
pusha
call
push
lea
call
jmp
pushf
jmp
pusha
pushl
mov
lea
push
pusha
mov
pushf
mov
mov
pushf
call
push
call
inc
and
loope
inc
and
pushl
pushl
ret
imul
mov
add
pushl
pushf
mov
push
lea
jmp
add
dec
gs
popa
addr16
outsl
js
add
repnz
add
jmp
bt
bswap
call
popf
rdtsc
push
call
dec
jge
popf
sar
push
cmpsb
or
cmp
add
test
lcall
jecxz
mov
mov
pop
rcrl
inc
or
mov
mov
push
dec
mov
leave
inc
lds
pop
es
pop
cmp
xor
xchg
insb
xrelease
jg
jp
mov
push
repz
push
shlb
dec
addr16
fmul
pop
mov
sub
jo
cmp
arpl
rol
inc
cmp
cli
pop
xchg
leave
stos
stos
sbb
hlt
inc
stos
push
iret
xor
mov
outsb
shrl
jmp
lds
or
jp
push
cld
xor
mov
loopne
loopne
hlt
out
mov
inc
pushf
repz
ret
jns
or
or
mov
push
loope
mov
lods
cmpb
pop
pop
ror
leave
lret
mov
and
pusha
xchg
adc
cmp
jmp
lea
btc
sub
setl
cwtl
cwtl
ja
lea
push
mov
movb
call
pushf
call
push
call
call
push
call
cmp
lea
je
pushf
add
push
lea
jmp
push
call
rcl
push
call
push
shr
call
pusha
pusha
movb
inc
lea
pushf
lea
jno
pusha
pushl
lea
call
jmp
push
call
stos
sub
out
xchg
mov
push
lea
jne
call
push
call
lret
adc
lea
je
stc
test
sub
clc
pushf
clc
cmp
pushf
lea
ja
bt
bt
stc
call
pushf
pusha
sub
mov
mov
pushl
popl
bt
pusha
cmp
call
push
call
xor
inc
xchg
pop
add
repz
lcall
mov
das
sub
sbb
stos
ja
cmpsl
mov
add
icebp
pusha
sub
lods
xchg
inc
das
dec
lret
mov
dec
inc
sub
mov
movsl
push
sbb
call
mov
jg
push
inc
les
shrb
inc
and
sbb
in
jl
add
rep
lds
insb
inc
popf
stc
ja
xor
push
cmp
in
push
dec
and
add
xor
and
ja
dec
enter
pop
and
addr16
lds
ret
jle
mov
push
je
dec
xor
push
mov
nop
movsl
lret
add
repz
sub
pop
xor
pop
fistps
call
push
test
icebp
repz
mov
je
clc
shlb
mov
jmp
xor
inc
gs
ret
inc
aas
xor
out
mov
adc
pop
jmp
iret
js
xchg
mov
push
xchg
insl
enter
pop
mov
movsl
leave
sub
jb
pop
xor
ret
insl
enter
xchg
pop
mov
pop
xor
xchg
adc
aad
dec
test
popf
es
notb
jmp
push
mov
mov
jl
ljmp
jbe
ja
cld
xchg
arpl
xchg
jmp
pusha
call
inc
pop
adc
inc
mov
out
adc
in
or
pop
xor
sub
je
rolb
cwtl
and
pop
push
lea
sub
fildll
xchg
fmuls
dec
mov
add
mov
jmp
outsb
leave
mov
out
pop
push
push
dec
xor
xor
add
aaa
jmp
cwtl
movsbl
setg
lea
pushf
xchg
mov
seto
pushl
popl
lea
cwtl
push
bswap
bswap
cwtl
lea
push
jmp
test
push
cmc
cmc
add
pushf
pusha
pushf
call
pusha
stc
or
jmp
movb
jmp
lea
ret
rcr
mov
stc
push
cmc
cmpb
jmp
push
lea
je
push
sub
test
bt
call
push
sub
pusha
cmc
cmp
pusha
lea
ja
bt
push
cmc
pushf
imul
cmc
bt
add
movb
pushf
movw
lea
jmp
jmp
out
cmpsl
mov
jnp
mov
icebp
aas
and
aad
xchg
imul
inc
cmp
inc
adc
divb
and
add
jnp
cld
ljmp
imul
push
jnp
cmpsb
add
mov
xchg
jnp
lock
xchg
push
and
xchg
mov
inc
popf
shll
add
dec
lock
jmp
xchg
loope
repz
add
and
lods
jae
pop
test
je
and
jbe
adc
orb
mov
adc
clc
stc
icebp
in
iret
push
jmp
jg
pusha
pusha
lea
call
clc
clc
pusha
sub
pushf
lea
jne
pusha
push
lea
call
pusha
mov
push
pusha
lea
jmp
sbb
push
add
gs
mov
pusha
inc
sbb
push
shl
dec
jne
xchg
and
repz
daa
dec
scas
mov
pop
repz
jo
and
lock
imul
jg
dec
movsl
push
lcall
add
add
ljmp
mov
pop
mov
dec
out
enter
mov
mov
js
or
or
sub
adc
jae
xor
push
mov
mov
sti
pop
pop
rol
dec
ds
mov
and
aas
jl
test
pushf
lea
jne
rol
xor
bswap
shl
not
mov
rol
not
clc
add
and
cmp
sar
mov
cmp
test
pushf
movb
pushf
lea
je
bt
bt
sub
stc
cmp
jmp
add
push
push
add
into
and
pop
flds
divl
mov
inc
cwtl
push
adc
push
mov
call
mov
mov
and
xchg
cli
sbb
ds
mov
and
pop
add
adc
push
mov
loop
pop
repz
out
ljmp
insb
inc
aas
pop
mov
stos
xorb
mov
in
mov
fcomps
arpl
icebp
and
add
push
cs
clc
int
jg
xor
xchg
gs
xor
and
adc
mov
inc
mov
rclb
add
out
jecxz
and
fsubl
adc
jnp
mov
out
call
mov
mov
inc
pusha
mov
arpl
jae
enter
rcl
xchg
pop
js
popf
imul
icebp
aad
mov
xchg
cwtl
pop
xor
ret
cmp
loop
push
inc
dec
les
movb
movw
pushf
popl
clc
push
push
pushf
or
jmp
lea
jne
movsbw
lahf
pushf
mov
movl
push
push
pushl
lea
jmp
lea
je
push
push
pusha
jmp
stc
cmp
pushf
jmp
std
call
pushf
movl
jmp
cmp
cmc
test
jmp
movl
movsbw
not
lahf
pushf
lea
pushf
push
pushf
call
pop
out
jp
add
movsb
cld
lods
add
inc
push
js
xlat
cmp
fsubr
cmpsl
daa
mov
es
mov
sub
sub
push
xchg
fldcw
xchg
jge
in
sbb
in
inc
sub
adc
daa
cmpb
mov
xchg
imul
rcrb
adc
insl
push
jne
xor
ds
nop
insl
data16
xchg
mov
popa
lea
jmp
dec
int
mov
pushf
movb
sub
cmp
test
cmp
pushl
call
pushf
movl
call
adc
test
xor
pushf
mov
xchg
mov
movw
not
movb
mov
lea
jge
not
pushf
movzbw
mov
lea
mov
movsbl
not
mov
movzbw
mov
xchg
mov
lea
mov
mov
pusha
movb
pushl
ret
call
not
movzwl
bswap
lea
pushf
lea
not
mov
movsbw
mov
pushf
pushl
lea
jns
pushf
lea
call
push
lea
jne
call
movsbw
shrd
add
cmp
bt
cmp
sub
shr
sub
mov
jmp
mov
push
push
lea
ja
jmp
lea
movsbl
push
movzbw
jmp
push
call
cmp
push
stc
cmp
pusha
lea
ja
inc
pushf
setns
add
add
pushf
add
rcr
rcr
mov
call
dec
mov
shrl
hlt
fdivs
mov
push
or
and
std
loopne
dec
aas
cwtl
out
push
lods
mov
lods
daa
dec
cs
and
jmp
ljmp
ss
mov
aaa
and
pop
in
xchg
xor
sbbb
jno
fcoml
popa
or
and
adc
inc
lods
inc
fldt
rorb
pushf
ret
shr
mov
call
rcrb
or
repz
icebp
push
and
push
cmpsb
jl
outsb
repnz
pop
cmp
insl
addb
xor
out
and
xchg
hlt
rcll
or
ret
mov
mov
stos
mov
lahf
aam
mov
dec
dec
dec
iret
int3
inc
inc
mov
jp
fidivrs
lea
call
call
cmp
mov
sub
bt
ror
pushf
pushf
movw
jmp
movsl
cli
testb
repz
pop
js
xor
shlb
dec
inc
lret
and
fcompl
mov
lcall
mov
fsubrp
sbbb
mov
outsb
dec
ret
lods
dec
sub
imul
lods
loope
mov
cmpsl
adc
jmp
add
imul
pop
pop
test
aam
cmp
stc
pushf
or
mov
lea
jne
mov
mov
pusha
pushf
popl
cmc
or
pushf
mov
jmp
pushf
inc
clc
cmpb
movb
lea
jno
pusha
pushf
lea
jne
push
jmp
and
add
jbe
add
pusha
pushf
pusha
lea
jmp
iret
and
or
repz
movsl
add
cmp
test
add
icebp
pushf
aaa
mov
or
sbb
push
cmp
addr16
fdivl
aaa
or
sub
mov
and
mov
subb
es
inc
jle
nop
push
mov
test
xor
insl
or
repz
iret
sub
pop
xlat
push
dec
cmpsb
testb
loop
mov
add
mov
mov
cli
fidivs
pop
lgs
jecxz
cmpsl
icebp
repz
cmp
int3
lods
jp
lea
hlt
stos
mov
jp
cltd
rorl
jno
cmpsb
cli
shll
sarb
in
cli
fdivs
imul
xor
sub
sbb
push
or
cld
jge
adc
lahf
out
ljmp
jmp
pushf
xchg
mov
seta
lea
bswap
not
xchg
lea
movzwl
pusha
lea
mov
pusha
call
jmp
sub
daa
or
stos
shrl
pop
out
lds
fldenv
jno
push
jb
inc
xchg
pop
sbb
push
xor
pushf
icebp
into
xor
dec
pop
and
cld
sub
or
cmp
scas
cmp
shlb
hlt
iret
movsb
mov
add
mov
mov
sub
pop
aas
enter
lret
repz
inc
jno
jle
cmp
clc
iret
scas
push
add
pop
fwait
jae
call
jo
in
clc
hlt
cmp
mov
push
ficoml
push
jns
out
pusha
cmp
inc
or
shrl
jg
das
jo
mov
sub
sarb
ds
cmp
call
cld
cwtl
cmpl
jg
fstpl
cmpsl
or
scas
mov
xchg
xchg
in
mov
dec
adc
mov
out
lock
fistl
out
push
subb
je
es
jae
test
mov
rol
mov
jmp
and
dec
mov
push
inc
sbb
jmp
data16
push
int3
push
lret
ret
popa
cli
push
pop
add
mov
pusha
lea
call
call
add
inc
add
mov
add
add
inc
add
add
add
dec
cli
pop
call
movsb
int3
push
not
inc
call
push
call
mov
ds
add
cmp
negl
push
addr16
insb
jg
loope
mov
popf
jne
jg
push
lahf
andb
xchg
mov
mov
fistpll
scas
popa
xchg
mov
jecxz
sbb
shrb
push
sub
or
pusha
aaa
inc
xlat
daa
mov
fidivs
jnp
lcall
mov
movsl
std
inc
movb
insb
sahf
out
sbb
pop
rolb
mov
scas
sub
inc
rcrb
idiv
hlt
jecxz
xchg
dec
pop
fucomp
shll
dec
mov
call
addr16
pop
adc
repz
jl
das
sub
push
outsl
cmp
cli
sbb
add
ret
stos
mov
cmpsl
jne
cmp
imul
mov
fwait
xchg
push
or
pop
mov
fwait
jo
add
mov
movsl
repz
sub
rcll
push
daa
test
sbb
into
sbb
out
rcrb
iret
or
cmc
sub
sbb
inc
push
js
push
sub
lahf
ja
sub
or
pusha
mov
icebp
iret
sub
and
jmp
dec
sbb
push
insl
js
test
lahf
aam
test
jl
pushl
jb
call
testb
push
rcrb
push
aaa
mov
cmpsl
negl
xchg
call
cmp
lahf
pop
xor
jmp
cmp
sar
pop
mov
push
push
out
jmp
lahf
jle
cwtl
cmp
int3
sub
sub
sti
xor
sub
inc
hlt
mov
cmc
ljmp
inc
xor
mov
sub
pop
or
xchg
or
inc
push
xchg
push
fbld
jp
or
xlat
int
dec
xor
add
push
testb
jno
inc
mov
push
xor
cs
insb
add
es
pop
pusha
jmp
lea
jmp
pushf
xchg
jmp
pusha
pushf
dec
jmp
pusha
pushl
popf
pushf
push
pushf
lea
jmp
push
call
xor
pop
rcr
mov
test
and
call
push
call
lods
jne
call
xchg
not
movsbw
mov
push
movl
jmp
or
dec
adc
repz
or
and
sub
pop
inc
pop
jns
insl
mov
int3
movsl
rcr
and
dec
cmpsl
mov
mov
lds
sarb
mov
push
sub
xor
stc
mov
fsubs
jae,pt
mov
nop
xchg
mov
jle
adc
rcrb
mov
lahf
hlt
cld
adc
repz
mov
rclb
enter
cmp
dec
mov
dec
dec
stc
aas
std
adc
sti
dec
jb
lods
out
pop
or
sub
xchg
imul
out
mov
or
aam
nop
sub
movsl
adc
pop
mov
fldcw
jns
outsb
mov
sbb
xorl
mov
lods
mov
mov
jle
stc
stc
lock
add
scas
push
cmc
into
inc
xchg
and
jecxz
xchg
je
stos
or
xor
jo
stos
or
and
jp
push
lahf
push
stos
pop
push
and
hlt
mov
xor
in
int
xchg
xchg
inc
pop
pop
idiv
sbb
add
outsb
inc
dec
in
leave
pushf
testl
dec
js
or
mov
movsl
pop
test
insb
jg
jnp
aas
sbb
mov
loop
frstor
and
addr16
sub
fadd
aas
push
mov
sub
sbb
lcall
or
pop
xor
push
mov
mov
out
cmpsl
mov
pop
movsb
movntq
pop
cmp
push
sub
outsl
pop
sub
push
jo
mov
dec
mov
inc
xchg
int
add
dec
popw
popf
iret
pop
mov
movsl
sub
cwtl
cmp
adcb
inc
adc
enter
push
test
xchg
mov
dec
mov
adc
aas
pop
add
mov
nop
ret
lret
or
mov
and
xchg
es
addb
and
mov
loope
mov
enter
xor
pushf
jmp
push
call
ja
lret
pushf
push
call
mov
adc
repz
outsb
ret
push
sub
test
push
xor
pop
icebp
push
pop
pop
mov
jbe
scas
mov
aas
push
or
aad
mov
mov
add
or
mov
bound
loope
mov
into
daa
sub
lcall
sub
clc
mov
push
mov
ds
pusha
push
pop
push
jp
sbbl
ds
jecxz
adc
jle
jl
arpl
or
out
or
inc
mov
xchg
jne
imul
push
ror
pop
push
pushf
push
stos
cmc
inc
cmpsb
mov
dec
or
add
jecxz
push
pusha
lea
jae
pushf
lea
jmp
not
mov
pusha
setae
pop
not
mov
jmp
push
call
aad
jmp
mov
inc
ret
or
dec
or
call
mov
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
xlat
shl
call
cmp
push
lea
jb
jmp
lea
jne
btr
mov
cmp
push
add
call
rcr
adc
repz
mov
test
fnstsw
push
xchg
jb
xchg
and
push
shll
xchg
imul
xchg
lock
popa
fcomps
int3
lret
inc
cmp
out
cmp
pushf
pusha
lea
jb
call
out
or
add
mov
jge
scas
xchg
loope
push
not
lock
sbb
cld
addb
arpl
sbb
push
pushf
xchg
imul
test
aad
mov
lcall
push
aas
push
add
mov
repnz
jo
push
inc
mov
stos
and
rcrb
out
out
aaa
popl
jmp
not
pusha
movl
call
pushf
test
sub
cmc
cmc
test
stc
pushl
popl
test
cmp
pushf
push
lea
ja
adc
and
sub
movzbl
rol
sbb
movzbw
add
movsbw
mov
shl
push
rcl
bt
mov
mov
pusha
cmp
test
repnz
jmp
pushf
call
pusha
lea
jbe
pusha
jmp
adc
mov
pushf
jmp
push
lea
jne
bswap
lea
movb
jmp
pusha
pushf
movb
lea
call
pusha
stc
sub
jmp
lea
jne
bswap
mov
jnp
bswap
mov
push
push
pushf
popl
pusha
or
pushf
jmp
clc
cmp
pushf
jmp
xchg
dec
and
push
xor
mov
insl
mov
mov
cwtl
lcall
pop
xor
arpl
fnstenv
mov
icebp
aam
sahf
add
das
mov
lret
movsb
mov
mov
in
lock
fwait
xchg
xchg
mov
push
sahf
out
bnd
lcall
rcl
cmp
call
call
jg
adc
sahf
leave
sbb
inc
pop
std
aas
or
mov
rcl
ljmp
cld
fnstenv
mov
cltd
jns
mov
test
mov
xor
fldl
into
mov
fcmovnbe
int3
dec
mov
and
mov
int3
fists
adc
mov
mov
mov
inc
daa
jns
pop
add
jb
and
bound
imul
push
xchg
test
into
es
xchg
dec
and
inc
cmp
and
mov
jne
sbb
js
aam
test
adc
out
jb
in
sub
jmp
loopne
sub
mov
repz
sbb
dec
and
jbe
scas
mov
cmp
test
scas
js
pop
mov
clc
add
jb
mov
rcrl
and
sub
lds
push
in
push
add
pusha
imul
add
cmpsb
add
in
loop
aad
inc
mov
push
pushl
popl
push
pushf
pushl
ret
pushf
pushl
popl
mov
mov
pushf
pushl
ret
enter
add
mov
cmp
je
and
mov
cmpsb
mov
test
cmp
movsb
or
cld
pop
daa
mov
les
shlb
mov
pop
cmp
jb
sbb
cmp
cmp
xchg
in
in
scas
incb
sbb
clc
iret
sti
pop
sub
jno
pop
add
jne
mov
mov
cltd
jns
and
jne
push
lret
mov
cmp
sub
sub
cmpsl
or
add
jp
ja
loop
popa
dec
insb
push
leave
mov
cmc
int3
pusha
test
pusha
movb
jmp
push
outsl
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
sub
inc
add
inc
loope
ljmp
dec
addr16
call
mov
mov
repz
sbb
sub
das
xchg
or
iret
test
shll
shlb
leave
scas
jl
mov
cld
incb
dec
cmpsl
push
xchg
mov
pop
push
jnp
scas
ss
dec
mov
sub
inc
xchg
test
sub
cwtl
jo
jb
pop
mov
dec
sahf
push
fadd
pushf
enter
inc
and
scas
add
lcall
pop
mov
icebp
addb
cmpsl
add
push
insl
dec
dec
inc
mov
sub
fwait
pushf
sbb
test
pushf
xchg
jb
pushf
cmpb
push
jmp
mov
pop
sbb
repz
rcrb
push
sub
shll
or
xor
adc
mov
dec
add
push
xchg
mov
sub
pushf
cltd
adc
xchg
jnp
xchg
pusha
adc
movw
pusha
lea
call
jmp
pushf
jmp
scas
lret
add
inc
fwait
jne
dec
insb
ret
push
or
inc
mov
pavgb
xchg
push
mov
negb
mov
int
mov
cmp
dec
mov
popa
push
lret
dec
push
inc
out
cmp
fs
aam
push
dec
scas
sub
jg
int
dec
inc
mov
subb
mov
cltd
in
push
cmpsb
jo
xchg
push
fsts
mov
xchg
outsb
subl
insb
dec
lods
shrl
xchg
or
aas
push
repnz
or
in
stc
pop
mov
xlat
cmpb
pop
aam
in
incb
not
movsb
mov
xchg
syscall
jge
jg
lea
jne
jmp
loope
jb
add
lods
add
leave
xchg
jl
push
push
jge
jne
jmp
cmpsl
jne
lret
pop
out
or
shrl
test
mov
jle
out
popa
adc
mov
push
mov
mov
or
add
add
or
adcb
dec
mov
div
out
aam
rcl
inc
inc
cmp
lea
jae
pusha
pushf
lea
je
pusha
pushf
pushf
pushf
lea
jmp
lea
ja
bt
bt
test
sub
push
push
pushf
lea
jmp
scas
leave
cmpsl
sbb
repz
testb
mov
into
inc
jle
mov
push
sub
icebp
leave
mov
cmpb
add
mov
in
mov
dec
icebp
dec
mov
push
stc
dec
cmpsb
push
iret
es
mov
pushf
adc
cltd
dec
push
shlb
sub
dec
cmpsl
movsl
daa
sahf
and
xchg
xchg
or
add
lret
imul
pop
fisubrs
mov
leave
add
bt
clc
bt
rol
movw
push
pushf
jmp
push
call
test
push
call
jb
mov
dec
sub
call
stc
push
mov
call
call
cmc
pushf
jmp
call
inc
lea
jmp
push
call
mov
or
neg
cmp
call
push
call
mul
arpl
push
lea
jb
call
or
cs
or
ljmp
xor
and
adc
sbb
and
xlat
xor
jbe
mov
out
enter
sub
xor
int3
and
add
push
insl
ror
ret
mov
es
repnz
pushf
mov
pusha
movzbw
setne
call
mov
pushl
pushf
pushl
ret
cmp
jmp
push
call
shrl
loop
cmc
movsbl
shld
push
movzbw
xchg
inc
push
xadd
pusha
lea
mov
sub
btr
mov
bsr
cmp
aas
mov
xadd
add
pop
mov
and
lea
shl
mov
push
test
pusha
lea
je
not
mov
mov
sar
stc
add
test
cmc
dec
mov
stc
cmp
test
jmp
sbbb
cltd
cld
push
into
dec
cmp
push
js
lret
sub
push
repnz
mov
andb
je
mov
int
mov
stos
cmpsb
mov
or
push
nop
arpl
repz
jne
xor
fnstsw
pusha
mov
lret
and
imul
mov
js
sub
bound
scas
add
or
fistpll
mov
cmpsb
movsl
cmpsl
and
sahf
aam
sub
frstor
pushf
push
pushf
test
pusha
pushl
pushf
pushf
lea
je
clc
jmp
lea
jb
pushf
stc
cmp
pushf
lea
jae
bswap
bswap
mov
call
bt
bt
stc
cmp
jmp
neg
bt
clc
test
sub
push
ror
cmc
pushw
popfw
pushf
movl
jmp
outsl
or
add
sbb
push
xor
pushf
xchg
in
aas
arpl
and
fcoms
xchg
cmp
mov
mov
pop
push
push
jne
xchg
xchg
cli
roll
push
stos
cld
es
xor
or
outsb
mov
sti
rorl
mov
test
std
rep
repnz
in
mov
push
call
and
adc
add
stos
maxps
notb
lea
cmpsb
sti
pop
dec
shr
xor
mov
sbb
fwait
lods
inc
in
in
mov
cmpb
sub
fimull
mov
mov
stos
aas
sahf
jns
pop
xchg
ja
shlb
push
mov
cli
cwtl
movsb
pop
jbe
inc
pop
jno
xchg
aam
pop
pop
mov
xchg
bnd
imul
into
test
add
add
test
mov
jb
and
in
in
xlat
xor
ds
test
es
cld
lea
test
into
sbb
pop
cmpsl
sub
roll
sahf
jg
std
jbe
inc
cltd
out
lahf
dec
outsl
dec
mov
cmpsl
shll
ljmp
cmpsb
pop
inc
es
xor
repnz
inc
sbb
pop
imul
or
or
xor
add
clc
and
aas
sahf
jbe
loop
or
cmpl
push
pusha
push
jmp
lods
pop
clc
shlb
cmpsl
mov
xchg
addb
cli
pusha
add
subb
repz
call
jno
movsb
push
call
adc
push
call
in
or
add
jmp
pushf
movw
lea
jae
test
cmp
push
lea
jae
pushf
cmp
cmp
call
pop
jbe
and
repz
mov
test
jle
adc
mov
dec
fs
add
mov
mov
jae
sub
and
cmovae
out
je
sbb
inc
xor
lods
mov
cmc
mov
push
sub
data16
jae
sub
jecxz
sbb
cwtl
adcb
cmp
imul
pop
dec
pop
xchg
enter
shlb
pop
imul
mov
fldt
inc
or
test
or
mov
jle
inc
xor
pop
push
sub
mulb
cmpb
fwait
repz
out
clc
and
mov
inc
xor
cli
out
out
jno
xor
std
jle
push
das
lahf
mov
iret
test
and
div
js
push
call
and
movsb
rorb
shl
pushf
mov
pushl
lea
je
pusha
jmp
push
outsl
add
add
js
lods
aad
or
inc
sbb
xchg
mov
xor
rcl
sub
xor
pop
mov
insl
cmp
push
dec
mov
cmpsl
xchg
xchg
cwtl
adc
pcmpgtd
shlb
and
mov
mov
xor
arpl
sbb
loop
add
cmp
imul
jg
popa
mov
nop
adc
cs
or
cltd
loopne,pt
mov
lea
sbb
loope
lahf
fwait
cli
shll
mov
dec
mov
enter
inc
inc
js
test
test
scas
mov
std
jnp
iret
mov
inc
pop
cwtl
ja
int
arpl
mov
xchg
shl
jp
and
sahf
inc
sbb
gs
es
sbb
loopne
test
stos
sub
loop
hlt
shrb
jns
test
in
jae
mov
sub
xchg
lods
repz
mov
jae
fisubs
leave
mov
push
push
push
mov
pushf
popl
clc
or
movw
pusha
lea
jne
call
push
call
popf
inc
or
add
fldl
jnp
sub
into
lods
adc
mov
pop
pop
lea
jmp
fldenv
sub
lcall
cmp
je
pop
ficompl
push
enter
push
jo
cld
aad
test
adc
test
dec
add
test
jmp
mov
pushf
pushf
push
lea
jmp
pop
xor
and
rep
or
mov
insl
pop
inc
xchg
clc
xlat
scas
cmpsl
jle
aas
add
cltd
jmp
sahf
jns
mov
out
imul
addr16
aad
daa
stc
xor
ret
out
fstpt
add
pop
add
sti
cmp
dec
nop
lods
ret
mov
cmpsl
mov
mov
sub
xchg
ret
test
test
sub
les
xor
mov
cmpsb
incl
xchg
testb
cli
dec
test
mov
dec
and
gs
leave
add
repnz
ret
lret
lahf
shrl
jno
pusha
in
pop
push
rcrb
pop
mov
ds
test
add
repz
add
mov
push
daa
mov
arpl
out
adc
out
ss
pop
scas
jns
sbb
cmc
fcoml
fs
adc
pop
add
jle
sahf
in
pop
scas
cmpl
ja
cmpl
mov
outsl
or
jno
mov
in
lods
jno
insb
popa
xlat
push
movl
rclb
and
movb
mov
movl
pushf
lea
call
pushf
jmp
push
call
xor
lea
je
clc
cmp
push
lea
je
push
mov
lea
jmp
call
sbbl
lahf
cli
push
xor
jmp
pop
lcall
push
jmp
addr16
push
pop
mov
ja
adc
mov
push
out
outsl
inc
nop
mov
push
pushf
repz
mov
xor
and
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
repz
cmpsb
mov
dec
inc
fwait
call
ss
pop
xchg
xor
push
and
sub
clc
pop
mov
outsb
lds
incl
mov
inc
inc
and
mov
in
out
add
dec
mov
insb
in
insb
imul
pop
aam
push
into
mov
std
es
iret
mov
in
push
insb
dec
scas
add
mov
fs
stc
pop
mov
popa
loopne
mulb
push
jge
sbb
fsubl
lcall
mov
sbb
aam
add
mov
cld
mov
jmp
shlb
fstl
call
add
xchg
les
sbb
enter
sbb
mov
loope
sub
mov
and
pop
or
sub
pop
sarl
push
movb
lea
ja
push
stc
stc
add
add
jmp
pusha
jmp
push
call
xorb
lea
je
push
call
pusha
bt
cmp
mov
lea
jne
pushf
mov
inc
pusha
mov
call
pop
mov
daa
add
push
add
mov
out
inc
sarb
dec
sahf
cmp
pop
sahf
imulb
adc
push
scas
or
repnz
es
pop
mov
mov
or
pop
ja
mov
icebp
mov
jbe
add
lods
mov
and
add
popa
xchg
loope
push
mov
repz
pop
stc
dec
xor
insb
inc
sbb
neg
pop
cwtl
outsl
mov
imul
cmpsl
dec
mov
mov
jp
enter
test
inc
xchg
iret
lret
mov
daa
mov
xor
in
or
int3
fisubrl
sub
imul
pop
push
int
inc
mov
loopne,pn
add
lret
test
ja
add
movzbl
movb
not
push
push
bswap
cwtl
bswap
lea
mov
mov
movl
call
lea
je
pushf
cmp
movb
jmp
pushl
lea
pushf
jmp
dec
sub
sub
stc
ror
bsf
push
add
movzbl
push
jp
sub
movsbw
lea
pushf
pusha
call
push
pusha
pushl
popl
pushf
movw
pushf
push
pushl
ret
repnz
stos
sub
repz
and
and
pop
xor
jge
notl
sbb
push
and
je
inc
mov
push
jge
dec
inc
jmp
dec
mov
data16
lods
add
and
cmp
pop
push
cs
mov
lods
cmpsl
and
mov
push
loopne
mov
sub
add
fsubrs
std
fistpll
mov
xchg
and
mov
out
add
pop
stos
cmpsb
je
das
jge
pop
cld
fnstenv
mov
ss
adc
xor
dec
and
or
adc
adc
jmp
sbb
push
add
mov
add
xchg
shrb
jecxz
lea
dec
scas
xchg
imul
pop
or
popa
mov
sub
test
sub
push
pop
fnsave
scas
sub
into
push
scas
mov
test
and
pop
bound
ror
ds
cmp
repz
into
pop
sbb
leave
inc
mov
xor
mov
movb
mov
lea
jmp
mov
pusha
pushf
push
pushf
lea
jmp
mov
add
mov
dec
jo
imul
or
xor
jo
and
pop
das
adc
shlb
iret
scas
pop
and
sbb
pop
popa
insl
call
add
jge
mov
hlt
lahf
cs
and
lcall
adcb
out
xor
lds
sbb
mov
xchg
adc
incl
std
js
push
movsbw
mov
push
pusha
movb
push
pushl
ret
push
jmp
jge
setbe
mov
cmc
and
cmp
pusha
add
push
push
pushf
movb
lea
jmp
pusha
jmp
cmc
mov
not
add
rcl
btc
stc
xor
mov
lea
inc
add
dec
movl
sbb
dec
rcr
mov
pusha
push
bt
test
mov
lea
je
test
clc
sub
test
pushf
jmp
stc
btr
mov
btr
add
adc
rcr
add
and
add
inc
shld
mov
call
insl
xor
add
xchg
push
insl
into
and
pusha
ss
jp
out
adc
cld
fnstcw
sub
push
and
ljmp
bound
pop
das
shlb
xor
dec
inc
sahf
jmp
adc
lods
jb
ret
loopne
mov
cmpsl
repz
aas
cltd
cmc
out
push
pop
push
pop
rorl
mov
rcrb
pop
push
push
call
and
je
add
pushf
pushf
pusha
lea
jmp
stc
movl
mov
add
call
bswap
lea
push
push
mov
call
push
call
xchg
movsbl
lea
lea
jmp
call
movl
jmp
jg
pop
sub
test
jmp
cmp
jno
xor
dec
imul
or
or
fdivl
or
test
testl
inc
andl
ret
out
cmpsl
and
stos
push
adc
clc
fnsave
pop
dec
dec
int
ds
sub
jns
pop
icebp
pusha
cmp
mov
xchg
jmp
sub
jge
dec
jp
ret
ret
xchg
jo
mov
jge
xlat
cmp
push
out
mov
loopne
adc
shrl
mov
mov
and
sahf
fwait
xchg
imul
sbb
dec
bt
pushl
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
add
add
movb
movl
jmp
push
stc
pushl
popf
pushl
pusha
push
movb
lea
jmp
pusha
add
je
pushf
xchg
bts
mov
push
pusha
jmp
sbb
popf
sub
scas
xchg
imul
out
mov
cld
repz
dec
cmpsl
xor
push
test
sbb
or
sub
nop
imul
jne
xor
push
test
jbe
lret
sbb
insl
inc
lcall
jg
add
arpl
aad
push
dec
mov
test
dec
push
dec
inc
mov
mov
movw
movw
lea
jmp
adc
cs
xchg
in
leave
mov
arpl
jb
out
fistps
add
mov
clc
push
sub
iret
sub
shlb
idiv
call
aad
aam
and
loope
add
add
add
addb
add
add
push
add
add
add
fimuls
add
dec
enter
int
add
adc
add
mov
add
add
add
fsubp
add
add
add
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
repz
sub
out
mov
jbe
or
sbb
inc
jl
add
and
lahf
hlt
push
scas
mov
popf
repz
shlb
cmp
add
rcl
or
pop
xchg
imul
xchg
iret
sub
jae
push
add
andl
xor
push
inc
mov
add
sbb
mov
fisubrl
in
popf
jae
mov
xchg
sar
mov
mov
sub
and
mov
jnp
adcl
add
out
shrb
jbe
lods
lea
jo
push
cmc
adc
dec
mov
ret
imul
cli
or
mov
mov
sub
xchg
sbb
in
adc
inc
sbb
stos
mov
mov
dec
fisttps
bound
cmp
mov
jo
fs
xor
repz
shrb
or
adc
add
cwtl
lock
mov
inc
sbb
or
mull
push
dec
mov
ffreep
mov
in
push
jg
ret
shrb
sub
jl
dec
dec
ds
fs
out
int
loope
add
add
out
inc
mov
mov
loopne
push
xchg
jmp
push
sub
js
lods
and
movsb
jge
mov
or
loop
pop
push
pop
jns
mov
ret
and
pop
adc
inc
mov
cmpsb
mov
dec
inc
pop
fsubs
and
add
fldcw
adc
fwait
jle
lods
call
jo
add
insb
mov
adc
inc
mov
fs
push
ror
mov
lds
repz
sbbl
push
sub
test
xorl
add
sbb
jno
jle
xor
sti
jno
and
je
ror
and
in
fcompp
xor
cmp
sub
xlat
cs
xor
dec
loopne
xlat
shrb
jo
hlt
dec
xchg
rcrl
scas
push
ret
add
in
scas
roll
subl
push
mov
popl
jge
cmp
pop
fs
push
dec
pop
mov
int
stos
test
popa
xor
jo
stos
cmpb
repnz
push
jae
addr16
or
sbb
mov
fadds
xorb
insl
pop
fstp
dec
push
int
cmp
aam
lea
gs
dec
dec
int
push
call
fbld
xor
repz
loope
sbb
mov
adc
cld
cli
or
push
fwait
out
pop
rcrb
ss
and
cltd
jge
test
adc
repz
mov
stos
mov
lret
push
mov
outsb
inc
jnp
xor
popf
sbb
in
rcrb
iret
shl
repnz
jmp
pushl
lods
stc
clc
call
movzbw
mov
jmp
pushl
cwtl
movsbw
push
movzbl
cwtl
cwtl
push
jp
mov
pushf
bswap
lea
pusha
pushf
call
lcall
std
push
xor
add
xchg
jo
movsb
jnp
sbb
add
popa
mov
sbb
int3
sub
outsb
jns
shr
jmp
mov
xor
mov
mov
jnp
jo
imul
pop
ficoml
movsb
mov
pushf
sete
lea
call
call
add
push
imul
jb
add
insb
and
lea
je
pusha
lea
jmp
sbb
add
not
mov
mov
les
push
add
lods
test
add
loop
mov
adc
inc
sbb
cmc
insl
mov
icebp
leave
cmp
das
sub
stc
add
test
cmp
call
push
push
or
push
mov
in
cmpsb
jge
push
and
xchg
xor
inc
mov
fsubrs
divb
not
negl
add
out
int3
outsl
or
fs
push
xchg
jge
dec
es
mov
sub
push
push
dec
ds
fs
dec
scas
add
sub
mov
sub
adc
or
scas
sub
push
in
sbb
int
stos
mov
call
rorb
mov
popa
setl
push
scas
mov
ljmp
dec
lret
inc
push
push
repnz
mov
push
call
lcall
pop
stc
movb
call
add
pop
dec
cmpsb
addr16
push
add
or
test
xor
xchg
dec
xor
loop
jge
leave
lret
repnz
dec
pop
in
cmp
cmp
xor
sbb
ret
push
inc
daa
pop
out
pop
roll
cmpsb
int
dec
mov
orl
cmpl
int3
inc
pop
in
xor
dec
xchg
jge
inc
lret
inc
mov
enter
sub
or
sbb
insl
xchg
movsl
leave
or
out
js
ds
push
lret
out
push
cmc
jnp
push
pop
loopne
dec
dec
mov
test
xor
sti
sbb
nop
faddl
jg
lret
movsl
sbb
cmp
fisubs
mov
dec
mov
cmp
mov
gs
lds
pop
and
cmp
pop
cmp
jl
popf
sub
dec
gs
scas
fmulp
mov
lret
pusha
jge
aas
cmp
sbb
ja
sub
fwait
push
add
mov
mov
sti
movb
in
add
subb
cmp
dec
inc
pushf
add
lret
mov
movsl
repz
imul
cmp
push
inc
enter
mov
stc
cmpsl
outsb
pop
std
xor
mov
inc
xchg
lcall
inc
ds
shlb
inc
cmp
enter
mov
test
xor
inc
xor
jp
push
insl
aaa
cwtl
fucomi
outsl
sbb
mov
add
mov
lds
aaa
inc
test
popa
mov
movsl
dec
jno
push
xchg
lret
mov
pop
je
push
cmp
mov
lret
call
jge
into
mov
inc
inc
mov
inc
inc
in
mov
cmp
mov
hlt
cmp
mov
push
dec
inc
movb
inc
es
shlb
mov
inc
push
inc
cmp
dec
enter
xor
sub
xor
cmp
dec
dec
mov
clc
dec
inc
lds
cmp
adc
mov
outsb
add
cmp
pop
ss
inc
cmp
enter
ss
add
dec
xor
aas
pop
mov
insl
push
les
leave
stos
adc
mov
inc
sub
mov
pop
mov
push
decb
sub
push
pop
inc
inc
lahf
dec
cwtl
ret
sub
and
lret
jp
fcmovnb
test
mov
cmp
xor
test
jae
jge
icebp
cmpsb
outsl
fistl
repnz
xchg
mov
mov
mov
or
inc
xor
outsl
test
lea
xchg
mov
inc
jg
xchg
dec
jno
and
sub
or
mov
dec
inc
insl
sub
jge
js
ffreep
imul
xor
sbb
or
ja
add
cmp
mov
insl
pop
sub
add
cmpsb
dec
test
and
cmp
xor
lods
inc
insl
mov
daa
dec
pushf
call
out
lret
dec
cs
push
jno
int3
sub
repnz
add
stos
lock
lret
sub
sbb
sbb
repnz
fistl
bswap
dec
mov
xchg
popa
out
sub
movsb
inc
test
or
ss
push
xchg
or
sub
lret
push
loop
pop
mov
inc
dec
repnz
lock
or
idivl
cli
movsb
xchg
testb
aas
arpl
shlb
lds
inc
pop
clc
jb
das
stos
adc
mov
xchg
pop
sbb
inc
leave
ror
dec
mov
inc
inc
mov
or
es
cmp
mov
jg
ja
pop
dec
sbb
or
sub
push
icebp
popa
lret
push
cld
cmc
imul
dec
les
insl
test
and
data16
pop
imulb
mov
pop
mov
leave
ds
sub
pusha
es
dec
inc
xchg
bnd
or
inc
insb
addb
jbe
stos
or
lcall
or
cli
inc
dec
rclb
mov
sbb
nop
cltd
mov
jne
add
cmp
pop
cmp
mov
cmp
dec
insl
andb
or
add
decb
xchg
out
insb
popa
aam
sub
ret
mov
cmp
mov
and
mov
pop
cmp
lea
pushf
mov
or
int3
inc
xor
xor
and
ss
loopne
mov
loop
lret
mov
xorl
inc
xor
lahf
insl
jo
sbb
repz
fstpt
mov
sarl
sbb
insl
dec
call
lds
mov
mov
adc
xchg
cmp
dec
mov
test
insl
out
sub
push
int3
cmp
push
bnd
gs
fs
mov
or
sbb
cmp
inc
inc
mov
fwait
lcall
inc
ljmp
cwtl
stos
std
rcll
cmpsl
ret
or
outsb
test
lret
adc
sub
dec
mov
fimull
mov
cmp
cwtl
fcmovnb
push
cltd
push
push
mov
gs
mov
pusha
loopne
outsl
test
inc
mov
inc
test
popa
icebp
nop
imul
test
add
xor
clc
leave
push
call
in
lock
xor
ljmp
scas
cmp
cmp
mov
and
int3
jge
lret
add
stc
pop
data16
pop
xor
jne
mov
outsb
pusha
add
cmpsb
jnp
inc
ja
xchg
mov
pop
or
or
mov
shrl
dec
aas
orb
adc
test
or
les
inc
out
inc
cmp
leave
or
or
movsl
pop
jmp
popf
fnstcw
pmuludq
xor
and
sub
dec
pop
mov
mov
cmp
cwtl
cmc
jle
loopne
push
push
insb
pusha
jns
or
fists
xchg
loope
leave
and
sbb
cs
xor
adc
mov
js
leave
pmaxub
pop
dec
fwait
ljmp
jnp
rcl
jp
loop
jae
push
sub
test
repnz
cmp
pop
dec
fsubl
mov
inc
sar
lcall
lahf
mov
and
dec
cltd
pop
adc
push
cmc
lret
xchg
jne,pn
sub
xlat
mov
cmp
push
clc
mov
stos
mov
xchg
adc
aam
insl
mov
into
dec
jl
jge
push
cli
movsb
cmc
pop
or
cmp
hlt
pop
pop
adc
pop
inc
dec
push
fldt
std
xchg
lods
in
mov
decb
es
inc
test
in
lret
mov
ljmp
and
cmp
lea
das
push
fs
mov
push
push
or
mov
stos
rorb
add
mov
add
leave
push
inc
push
dec
or
xor
pop
mov
jno
lds
add
imul
test
cmp
ja
push
icebp
ds
ret
dec
mov
insl
decb
mov
dec
cwtl
dec
mov
mov
orl
dec
loopne
mov
stc
imul
xchg
jge
fs
inc
adc
xchg
lret
lret
lods
or
and
mov
ljmp
pusha
mov
out
imul
mov
mov
ds
cmp
mov
and
cmp
mov
xchg
out
jge
mov
outsb
sub
pop
lcall
cmp
dec
adc
dec
mov
inc
pop
daa
inc
pop
mov
ffree
mov
out
push
and
inc
out
inc
ret
sub
test
jbe
mov
and
ret
mov
movsl
aad
and
mov
sub
inc
push
andb
adc
mov
loopne
adc
mov
mov
insb
pop
lret
xor
pop
sahf
inc
sub
lock
add
lds
jns
insb
ret
neg
bnd
push
mov
add
xchg
lret
ja,pn
jl
add
xor
scas
sub
cmp
pop
popa
push
dec
call
mov
dec
dec
or
mov
leave
dec
popa
addr16
cmp
push
or
sub
insl
call
mov
adc
movsl
imul
adcl
int3
xchg
xchg
push
fwait
jae
dec
daa
inc
insl
rcl
les
ds
lahf
test
lret
or
mov
inc
dec
les
sub
cli
jle
xor
cmpsl
loopne
imul
mov
in
inc
nop
dec
mov
ret
inc
imul
imul
mov
fsubl
out
lds
lret
fcmove
lcall
fsts
movl
push
arpl
and
mov
imul
inc
cmp
rol
pop
subb
xor
xlat
roll
repnz
aaa
lahf
shrb
pop
jl
jae
sbb
inc
sti
inc
imul
xor
insb
add
add
jmp
and
pop
movsl
dec
dec
sahf
bound
stc
lahf
fcomp
test
cmpsl
pop
adc
orl
sbb
test
scas
inc
pop
in
loope
cmp
mov
fstpl
inc
mov
mov
inc
insb
enter
rep
lock
adc
aaa
subl
call
mov
xchg
xchg
mov
icebp
dec
lret
lock
mov
es
ja
lret
pop
pop
aad
outsl
imul
push
push
inc
gs
mov
notl
inc
fldcw
loop
ds
pop
jmp
mov
dec
mov
xor
mov
xor
pop
loopne
hlt
mov
mov
int3
cmp
and
lahf
push
lock
mov
dec
popa
cmpl
repnz
inc
ret
cmp
push
std
push
pop
push
rorl
enter
bound
sub
jns,pt
cmp
stos
aas
outsl
mov
imul
lock
rol
dec
push
test
fwait
out
jg
mov
push
sbb
pop
in
pop
mov
add
mov
push
xchg
cmpsb
sbb
dec
aad
icebp
mov
imul
sbb
mov
ret
and
test
sub
xchg
and
pushf
cmp
sti
push
push
insl
es
aad
loop
jo
pop
push
jl
pop
cmp
xchg
ret
out
jns
outsb
xchg
rcl
lcall
addr16
mov
enter
cs
scas
jne
pop
cmpsl
out
fmul
testb
ss
ja
dec
out
sbb
mov
xchg
or
jne
mov
adc
xchg
aas
ret
jae,pt
and
mov
mov
xchg
imul
pop
movups
icebp
lds
movsb
out
insl
mov
jno
pop
dec
dec
in
add
cmp
adc
cmpsb
dec
imul
arpl
jmp
rclb
jmp
sub
imul
sbb
cs
testb
mov
pop
jecxz
pop
rorl
cmpsl
sub
push
lret
dec
mov
pop
test
inc
loopne
dec
jmp
lock
aam
das
mov
lock
or
mulb
and
popf
mov
mov
arpl
out
xchg
mov
gs
mov
add
mov
inc
xor
push
inc
sub
aad
cwtl
dec
cmp
cmpsl
mov
or
or
pop
mov
and
or
inc
mov
insl
test
stos
sbb
andb
pop
shr
adc
pop
dec
outsl
insl
mov
inc
mov
enter
in
lds
stos
push
inc
push
xchg
stos
data16
lock
dec
adc
lods
fldt
lahf
or
ds
mov
xor
xor
mov
mull
dec
insl
sub
aam
rolb
xchg
loop
mov
and
ljmp
bound
fisttpll
jg
test
insl
mov
cmpsl
nop
mov
sbb
sbb
mov
xor
aam
ds
in
test
into
sub
mov
dec
xor
jo
ss
cmp
add
es
clc
sahf
xor
out
inc
movsb
mov
dec
inc
cmp
push
jo
jge
enter
cmp
in
dec
sub
test
mov
or
hlt
out
aas
sub
loope
pusha
xor
push
sbb
loopne
and
sbbl
insl
fcompl
negb
mov
add
push
mov
movsl
ficoml
lods
push
jns
das
out
mov
mov
cmp
or
pop
pusha
and
inc
gs
cmpsl
or
and
inc
jno
dec
pusha
repz
cltd
cmp
rcr
xor
lods
insl
in
or
stc
lret
ja
and
icebp
movsl
inc
inc
sahf
xchg
sbb
cmpsl
fdivrl
scas
sub
aam
jmp
dec
xor
mov
mov
aaa
jmp
invd
dec
and
sbb
dec
xchg
jo
and
cld
xor
dec
lock
lock
pusha
insb
xchg
pop
fldl
cmpsb
mov
rcr
je
xchg
push
cmp
imul
sbb
xchg
lret
fldcw
cmp
addl
xchg
imul
ljmp
sub
sahf
push
mov
into
stos
adcb
movsb
inc
sbb
movsb
call
int3
xchg
divl
test
dec
icebp
and
and
shrb
and
sub
xchg
lods
adc
dec
aaa
inc
cmpsl
mov
lods
dec
dec
outsl
mov
adc
xor
sub
scas
ljmp
lods
shrl
inc
sbb
clc
arpl
cmp
lods
dec
loop
inc
pop
repnz
pusha
xorb
repnz
cmp
ror
push
outsl
popa
imulb
dec
add
ljmp
fdiv
adc
int3
push
or
nop
xchg
xor
fpatan
ja
js
push
jg
scas
jmp
fcmovu
mov
mov
inc
outsl
inc
jae
adc
cli
pop
lret
push
mov
mov
pushf
adc
shrl
inc
or
pusha
fadds
pop
int
out
adc
inc
andb
stos
cmp
arpl
cs
out
imul
mov
clc
cmp
dec
je
popl
loopne
push
pop
es
test
xor
movb
inc
in
int3
sbb
stc
test
push
insl
movsl
pusha
bound
int3
cmp
loope
pop
fwait
insb
dec
idivl
cld
stos
or
insl
shll
cmpsb
movsl
sub
dec
mov
popa
call
sarb
lds
fisubs
dec
faddl
sar
nop
ja
xchg
adc
insl
cld
xchg
push
add
lods
popa
ss
xchg
inc
push
cld
testb
jg
pop
dec
mov
pop
jle
pop
sbb
dec
ds
ret
mov
mov
insl
sahf
jmp
rcrb
jmp
adc
addb
adc
lock
ds
insl
in
imul
add
dec
das
mull
or
pop
sub
rcll
mov
int3
inc
iret
xor
aas
or
ror
popa
insl
ret
dec
push
outsb
test
test
and
xor
inc
insl
sub
sbb
sbb
aam
sarb
out
scas
std
mov
inc
aaa
rcr
inc
or
in
pop
fcom
dec
test
dec
clc
dec
dec
xor
pop
inc
scas
mov
iret
sub
insl
repnz
mov
in
mov
mov
out
dec
or
rep
fwait
dec
jg
outsb
xlat
cmp
fisubrl
lret
jmp
in
push
loope
in
fmul
insl
addr16
dec
sbb
sub
sub
inc
stos
int3
adc
adc
add
mov
cld
dec
sahf
lds
in
push
ljmp
dec
sbb
jecxz
mov
push
xchg
dec
sub
imul
popa
mov
movsb
stos
cmp
imul
mov
in
pop
test
rcll
fcoms
dec
cld
add
add
jae
and
stc
inc
jge
add
pop
jbe
inc
xor
shrb
xchg
mov
adc
lret
inc
cmpl
cmp
enter
fildll
imull
int3
mov
inc
mov
mov
dec
xor
arpl
imul
push
inc
bound
ss
pop
inc
fiadds
mov
pop
nop
and
cmp
push
jne
xchg
or
push
jecxz
inc
inc
cmp
decl
or
fimull
cmp
push
or
in
cmp
inc
call
add
xor
mov
lods
insl
mov
xchg
les
cmp
push
mov
jae
fsub
insl
call
and
adc
bound
or
or
stos
mov
ret
dec
ficoml
in
loopne
push
push
cmp
xchg
add
aaa
data16
or
arpl
in
int
dec
rorb
inc
insl
lods
into
dec
imul
dec
or
jb
sbb
pop
pusha
or
jbe
push
pop
dec
aaa
das
leave
aas
in
ficoml
xor
insl
aas
mov
sbb
out
pop
cld
add
scas
push
pop
loop
jge
cmpsl
enter
push
and
sub
fs
lock
cmp
stos
mov
ja
dec
cmp
insl
and
or
adc
mov
stos
xchg
add
stos
mov
push
cs
std
adc
aam
les
mov
fstl
push
cmpsl
pop
aam
clc
inc
sub
mov
jmp
add
ss
dec
mov
cmp
cmp
test
flds
mov
mov
lock
xchg
add
dec
imul
push
dec
mov
adc
andb
xchg
ljmp
cmp
adc
mov
cmpsb
push
pushf
dec
out
xchg
scas
clc
in
ror
push
lds
loopne
inc
jg
mov
mov
scas
xchg
rcr
ret
frstpm(287
dec
cmc
bnd
jns
sub
lret
pop
push
or
pop
fcoms
sbb
sub
inc
adc
js
xor
hlt
sbb
jbe
or
insl
fcmovb
adc
fmulp
push
lds
out
jno
sbb
push
sbb
sub
loop
adc
fdivl
ds
mov
and
icebp
push
mov
fimuls
pop
loopne
fs
push
add
ror
lods
popf
test
fwait
lret
xor
sub
dec
sbb
loope
add
fidivl
cmpsb
and
dec
and
mov
jo
test
rcrl
jge
and
out
imul
mov
sub
xor
stc
mov
add
imul
insb
fs
inc
mov
fimull
add
push
mov
jmp
divl
popl
xor
xchg
jne
pop
fs
inc
mov
dec
inc
ljmp
mov
pop
insl
dec
and
nop
push
cmp
fldl
sbb
leave
pop
or
fnstcw
xlat
mov
lret
mov
aad
ds
xchg
lods
mov
fiadds
out
ljmp
mov
repnz
bound
add
cmpsb
lret
adc
cmp
sbb
dec
jns
or
sub
lock
leave
mov
fisubrl
movl
imul
push
enter
pop
xchg
push
inc
mov
dec
xchg
pop
pop
fisubs
out
xchg
dec
lds
mov
mov
xor
sbb
scas
pop
insl
pop
or
inc
setp
push
add
mov
addb
and
int3
push
cmc
sub
icebp
cmp
dec
movsl
test
aad
inc
mov
cmp
pop
ds
xchg
jne
inc
scas
mov
cmp
and
adc
mov
cmp
aaa
add
add
int3
xor
adc
mov
dec
daa
movsb
cwtl
push
sub
xor
hlt
mov
inc
mov
inc
into
les
jno
imul
inc
dec
mov
adc
cs
cmc
or
out
insl
sub
in
jb
pushf
and
insl
shlb
mov
mov
dec
pop
lods
test
cmp
dec
adc
lea
xor
pop
ret
dec
sti
hlt
push
mov
sub
imul
mov
aaa
jno
inc
stc
mov
sub
xor
insb
imul
mov
je
dec
inc
or
or
stos
xor
pop
stc
stos
jo
inc
ret
fcmovne
and
mov
clc
mov
ret
mov
repnz
dec
dec
sub
jae
ss
mov
adc
push
jnp
add
lds
out
dec
out
insb
popf
pop
mov
add
ret
inc
test
popf
inc
insl
imul
xchg
inc
cmp
loopne
lahf
iret
popa
jmp
inc
add
cmp
lds
test
lods
inc
mov
jmp
and
push
daa
lret
inc
push
jmp
or
sub
xor
insl
sar
stos
or
jne
sub
xor
inc
jo
jle
inc
push
test
sub
bnd
inc
xlat
repz
mov
mov
or
inc
nop
insl
inc
lods
xor
sbb
or
leave
insl
andb
jb
idivb
outsb
aam
sub
cmp
outsb
insb
sub
push
cmp
xor
fmul
dec
repz
dec
jae
push
pusha
jp
cmp
test
popa
cmp
ret
mov
push
insb
dec
outsl
dec
xor
inc
mov
inc
and
loope
inc
insl
ljmp
pop
loop
adc
cmpl
mov
lret
sub
in
mov
in
push
dec
mov
subb
loopne
xchg
in
lods
rclb
mov
pop
inc
in
stos
out
xchg
mov
pop
sub
sub
addb
mov
movsb
mov
ret
cmpsl
insl
xor
xor
ret
push
loopne
dec
cwtl
loop
lret
js
inc
jle
mov
push
shr
js
lret
bound
mov
das
arpl
fisttpl
lods
inc
xor
scas
cltd
shlb
test
dec
push
push
in
scas
nop
jo
inc
gs
out
cmp
xchg
imulb
repz
cmc
stos
mov
sub
mov
sub
inc
xchg
out
rolb
mov
xor
lds
popa
out
jbe
jns
push
imul
orl
push
insl
sahf
repnz
mov
in
aam
push
or
cmpsl
mov
ljmp
repnz
lds
clc
mov
push
insl
mov
inc
sbb
or
iret
mov
xchg
cmp
sub
pop
ret
test
into
scas
stc
insb
dec
out
inc
mov
cmp
shr
push
pop
mov
fnstcw
xchg
jo
dec
popf
cs
popa
std
int3
idivl
loop
xor
test
xor
aam
lock
xchg
ljmp
int3
in
cmp
loope
jo
hlt
xchg
fdivrl
emms
dec
jbe
sbb
and
ds
add
insl
roll
or
mov
outsl
dec
cmp
push
popa
mov
insl
lods
pop
pop
sbb
sbb
into
std
pop
sbb
xor
or
aas
das
inc
ds
lahf
mov
push
push
repz
push
repnz
sbb
stos
sbb
push
stos
mov
push
js
cmp
adc
aad
mov
cwtl
test
call
push
mov
sbb
into
sub
popa
leave
pop
jl
cmp
es
test
push
imul
xor
xor
pop
arpl
push
ret
lea
jmp
push
out
or
lret
or
mov
lods
test
insl
sti
mov
xchg
ret
mov
pop
movsl
mov
mov
insl
xchg
std
das
push
pusha
mov
inc
test
fisubrl
push
jle
insl
push
gs
pop
and
inc
test
fxch
fsubr
xor
xchg
shrl
stos
repnz
push
sub
xchg
ds
pop
cwtl
xchg
xorb
imulb
push
pop
add
push
fsubr
jmp
stc
fldenv
test
cmp
push
xor
jno
jmp
and
dec
repnz
insl
jg
ficoml
or
mov
dec
mov
and
push
sti
mov
test
push
push
or
andb
lods
dec
ds
je
jmp
fiaddl
cmp
stos
xchg
sbb
or
lret
pop
in
ljmp
cli
cli
inc
push
gs
mov
xchg
sub
mov
dec
sub
insl
imul
add
pop
idivb
sahf
test
mov
outsl
xchg
pop
ret
imul
stos
mov
lcall
jns
lret
pop
mov
popa
dec
jne
fldt
fsubrs
pop
mov
mov
sub
jnp
movsl
ja
and
addr16
mov
pusha
pop
inc
mov
xchg
mov
out
test
les
push
or
push
inc
xchg
ljmp
push
pop
je
sbb
aam
and
test
add
scas
adc
pop
xchg
mov
stc
add
loop
pop
test
push
mov
mov
dec
pop
sbb
adc
shll
mov
imul
cmpsl
adc
xor
and
mov
insl
lds
xor
xorb
sbb
lahf
xchg
or
xchg
mov
jmp
int
cmp
cmpsl
jbe
out
outsl
pusha
jne
cld
push
mov
add
push
inc
mov
push
mov
decl
fidivrl
fcomps
lret
stc
pusha
mov
cmp
ds
into
dec
out
sub
test
out
push
xor
lock
sub
adc
es
xchg
fld
test
incl
push
or
add
aaa
jbe
adc
mov
cmp
sub
cmp
sub
dec
add
pusha
cmp
jg
push
sbb
stos
ficoms
adc
push
sbb
push
dec
xchg
repnz
dec
test
pushf
int
sarl
lods
jb
jne
mov
or
fcoms
mov
decb
int
sbb
cmpl
insl
lods
aas
inc
fsts
and
or
or
pop
daa
mov
scas
pop
clc
aas
dec
cmp
and
shll
jecxz
andb
pop
add
jl
dec
mov
sbb
dec
dec
in
fdivrl
jae
or
test
jmp
mov
sub
sbb
sub
lahf
adc
ucomiss
out
outsb
cmp
fs
cmpsb
outsb
push
mov
imul
mov
in
dec
pop
inc
inc
inc
rclb
xor
dec
mov
ret
fisubs
dec
xlat
xor
aad
sbb
dec
ljmp
dec
dec
fistpl
xchg
pop
dec
jb
fwait
test
push
rcll
xchg
or
xlat
pop
ret
pop
xchg
add
cltd
xor
aas
out
pop
jns
xor
lods
cmp
in
lock
outsb
int3
lret
into
insl
and
and
test
xchg
add
sbb
in
js
fcomp
cmp
dec
jnp
mov
clc
xor
sbb
adcl
pop
roll
mov
or
pop
aam
dec
cmp
insl
push
xorb
test
cmc
fldcw
sbb
les
mov
cmp
dec
insl
fsubrl
addb
lahf
scas
pop
push
ds
cmp
pop
push
ret
hlt
mov
jnp
test
cli
cltd
mov
popf
stos
cmpsl
out
xor
das
sub
adc
dec
lea
add
mov
mov
dec
repnz
adc
jl
mov
jmp
cmpsl
nop
and
stc
dec
cltd
inc
mov
push
into
fs
insb
mov
jle
adc
dec
das
in
inc
xchg
jne
mov
ja
push
xorb
sub
jle
subl
mov
push
cwtl
dec
mov
sub
cs
or
shrl
lahf
and
test
xor
adc
lret
mov
sub
test
cmpb
xor
mov
popa
sbbl
sbb
push
out
mov
pushf
cmc
dec
dec
out
cltd
mov
outsb
aas
and
dec
ret
add
lahf
std
sub
rcll
leave
mov
aaa
test
ljmp
sbb
or
jnp
das
or
iret
jecxz
push
fmul
fisubl
lods
inc
test
mov
jecxz
in
dec
fwait
mov
xor
cmp
out
imul
cmp
aaa
mov
repnz
jge
roll
adc
mov
inc
push
push
cmpsb
repnz
cmpsl
clc
dec
popf
outsb
sahf
dec
mov
addr16
push
mov
mov
add
cmpsb
dec
outsb
lock
aaa
mov
mov
push
push
jle
jns
mov
gs
dec
xchg
out
call
pop
or
xor
dec
enter
or
cmp
lods
mov
mov
xchg
dec
std
repz
dec
inc
dec
push
stos
push
or
cmp
mov
push
repnz
pop
aam
outsl
decl
sub
fcompl
sbb
pop
ret
rcrl
clc
bound
aas
es
dec
xchg
jge
xchg
cmp
in
lods
insl
iret
inc
inc
test
adc
addb
imul
lcall
ja
pop
out
dec
or
inc
pop
insb
arpl
outsb
mov
push
ret
sub
pusha
mov
das
repnz
ret
mov
inc
dec
xor
push
mov
xchg
dec
xor
sbb
cmp
insl
mov
mov
roll
mov
inc
mov
cmp
fiadds
mov
xchg
sub
iret
xor
pushf
pusha
dec
mov
cmp
cmpsb
lds
push
into
push
xor
xchg
out
outsl
cmp
sub
mov
dec
push
xchg
sub
repz
dec
jne
loop
jl
out
lods
imul
test
scas
popa
jle
js
cltd
jg
add
cmp
lahf
dec
icebp
push
mov
xchg
out
es
xchg
imul
add
jg
rol
jbe
lds
or
pop
mov
iret
mov
cmp
lahf
adc
in
ljmp
fs
or
add
jbe
repz
cwtl
dec
sahf
lret
xchg
push
inc
rcll
and
xchg
inc
push
xchg
inc
pop
ret
in
cmp
jbe
or
aaa
and
insl
inc
cwtl
fbld
mov
inc
cmp
repz
cwtl
dec
and
popa
dec
cmp
xlat
inc
xchg
shlb
pop
dec
leave
dec
xchg
cmpsl
mov
imul
fistpl
dec
pop
inc
andb
imul
call
dec
push
icebp
iret
mov
cltd
enter
push
xchg
shrb
nop
cmp
jo
mov
xor
cmp
mov
test
mov
int
xor
movsb
ffree
out
push
pop
or
cmpsl
stc
call
sahf
nop
mov
dec
dec
into
bound
popa
push
and
sub
cmp
xchg
testl
fwait
add
mov
mov
lods
loopne
and
stc
ljmp
out
or
popa
loop
cltd
dec
ficoms
jge
dec
jnp
or
sub
mov
bound
sub
sarl
lret
xchg
cmp
insl
ss
push
loopne
clc
lcall
aam
cmp
sub
clc
hlt
mov
dec
cmpsl
jne
fdivrs
mov
jge
mov
mov
and
adc
sbb
or
mov
aam
test
ret
repnz
test
xchg
dec
loope
add
sub
fbstp
test
or
sub
leave
or
add
fwait
lods
or
lds
dec
stc
scas
jnp
mov
out
push
mov
or
out
pop
or
leave
adc
dec
test
test
and
push
test
lret
movsl
jecxz
mov
dec
xor
sub
mov
xor
push
push
inc
cmp
pop
insl
cmp
jo
fisubl
outsl
leave
or
out
push
lret
or
sbb
pop
sub
or
pop
mov
sarl
mov
pop
sub
stos
mov
xchg
jp
xor
imul
pop
sbb
pop
xchg
sbb
mov
jp
arpl
push
inc
data16
ds
pusha
fnstcw
pop
insb
pop
mov
xor
orb
dec
or
push
mov
dec
cmpl
xor
mov
push
shlb
lret
push
shrb
cmp
cmpsb
mov
shlb
mov
push
cmp
insl
clc
sahf
inc
out
inc
dec
mov
dec
xchg
mov
dec
fmull
pop
mov
or
in
stc
test
mov
ss
jnp
loope
or
push
mov
pop
out
mov
sub
lret
jmp
aas
and
or
or
out
push
xor
inc
mov
jns
add
add
repz
inc
mov
pop
xchg
adc
jne
in
clc
adc
sbb
std
xor
mov
fxtract
sub
pop
insl
jno
sbb
fcmovu
mov
cmp
jb
out
xchg
sar
inc
movsb
dec
out
push
or
mov
push
pop
inc
outsb
adc
or
mov
popa
imul
mov
dec
jg
test
popa
into
sarb
adc
nop
mov
xchg
test
inc
jge
sbb
and
loopne,pt
lahf
ds
movsl
cmp
ja
inc
xchg
ds
dec
dec
push
mov
inc
repnz
gs
out
dec
out
out
xlat
xlat
xchg
push
push
pop
inc
lret
dec
ficompl
mov
test
adc
rol
pop
add
cli
push
mov
xchg
mov
lret
into
pop
push
pop
lods
ds
lahf
inc
xchg
int
adc
call
mov
sbb
cmpb
subl
mov
outsl
xchg
sbb
dec
dec
lds
dec
andl
push
mov
inc
mov
dec
xor
ljmp
push
push
loop
mov
leave
popf
xor
test
dec
insb
pop
dec
or
cmp
pop
adc
or
sub
mov
add
cmp
sub
dec
call
mov
pop
adc
mov
xor
pop
xchg
insl
jo
sbb
jno
sub
in
cmp
not
gs
or
adc
mov
sub
and
dec
sti
cmp
mov
jne
scas
xchg
fwait
sub
fcmovnb
gs
mov
dec
or
imul
push
push
or
xor
cmp
adc
jnp
arpl
mov
lds
inc
insb
push
xchg
clc
mov
popa
inc
jnp
out
arpl
out
mov
jecxz
orb
out
in
sbb
into
dec
imul
dec
add
xor
xor
inc
divl
cmpsl
mov
push
sub
xorb
jae
lret
cmp
sti
scas
fcmovbe
outsl
into
stos
dec
inc
insb
leave
dec
or
cmp
aaa
jle
test
out
adc
clc
ror
and
xor
or
pop
xchg
cli
jb
inc
jl
sbb
mov
popa
cmp
nop
pop
inc
sub
xchg
pop
push
mov
adc
xlat
dec
cmp
mov
dec
gs
sub
lods
add
test
mov
cli
sbb
test
mov
push
push
ret
in
sarb
xchg
xchg
jecxz
cmpsb
call
adc
jae
in
mov
data16
in
or
ljmp
push
adc
ja
add
sahf
add
out
adc
push
stos
bnd
lock
imull
sub
cmc
xlat
std
xor
dec
rolb
rorl
inc
mov
shlb
push
push
sbb
pop
xchg
xchg
inc
sahf
outsb
or
sarb
js
mov
iret
bound
addr16
lret
sbbb
dec
mov
xor
ret
xchg
ds
cmp
test
jecxz
ret
lret
push
mov
sub
push
push
int3
test
xor
inc
xlat
fs
dec
push
ror
insb
repnz
sbb
call
pop
mov
push
lods
mov
shr
dec
pop
inc
lahf
repnz
xor
dec
sub
xor
pop
mov
mov
dec
mov
leave
loopne
aas
mov
inc
call
push
xchg
inc
nop
ds
pop
adc
insb
pushf
dec
pop
push
and
mov
scas
or
push
mov
dec
push
pop
push
repnz
leave
xor
cmp
fldt
inc
jle
rcrb
lret
sub
lret
sti
rcrl
dec
cmp
or
insb
lods
fucomip
cmp
mov
imul
push
insb
dec
insb
out
ljmp
sub
sub
cmp
push
scas
push
jns
leave
js
ds
mov
iret
sti
xchg
les
cmp
push
xchg
in
xchg
cmp
cmp
adc
dec
xor
fildll
mov
sbb
dec
pop
out
adc
cmp
nop
out
push
pop
lds
sub
rorl
insl
pusha
dec
mov
xchg
out
sahf
add
push
adc
in
xchg
ss
aaa
and
push
jne
adc
call
inc
cmc
adc
fs
stos
jl
loopne
jecxz
fcoms
in
xchg
sbb
lret
std
mov
inc
fisubrs
es
or
add
dec
dec
mov
dec
std
sti
adc
test
cmp
arpl
lock
pusha
bound
clc
dec
fisubrs
add
dec
xlat
push
imul
scas
push
ret
and
jp
cmpsb
outsb
adc
pop
subl
push
movsl
fildl
cmp
xchg
jbe
neg
gs
jmp
mov
rcll
xchg
sub
sbb
push
aam
pop
outsb
cmovb
mov
xchg
mov
xor
or
inc
push
ret
imul
aam
out
dec
out
loop
cmp
fcomps
es
fwait
push
lds
xchg
adc
and
mov
cmp
mov
dec
dec
and
push
mov
clc
imul
add
shll
mov
xor
sub
xor
movsb
xor
xor
mov
aam
ss
xchg
stos
sub
mov
cmp
pop
cmp
rclb
bound
xor
call
outsb
xchg
clc
rcll
iret
add
cmp
jle
sbb
leave
lret
or
cmp
push
mov
pop
jb
pop
insb
mov
lahf
add
sbb
cmp
adc
jmp
push
jge
shrl
sub
cs
mov
aad
mov
aas
mov
fmuls
xchg
pop
inc
repnz
mov
mov
push
insl
or
add
xchg
sub
push
inc
mov
out
inc
sarb
or
roll
dec
jmp
stos
xor
out
or
xor
lret
fadd
inc
mov
jb
add
stc
insl
xchg
lea
ljmp
xchg
out
mov
dec
add
test
pop
lahf
cmpsb
aaa
or
fidivl
mov
dec
cmp
jbe
rclb
cmp
hlt
rorl
xor
dec
bound
fs
sti
push
push
pop
in
cwtl
add
bound
sub
adc
xchg
mov
pop
mov
jno
into
aaa
inc
adc
push
out
fnop
fs
mov
pop
sahf
jmp
jg
cwtl
jge
or
mov
mov
adc
aad
insl
out
or
loope
mov
leave
pop
lret
inc
jmp
cmpsb
orl
test
jo
out
xchg
adc
imul
lds
mov
dec
into
inc
sarb
mov
xor
inc
subl
out
pop
rolb
jl
pop
xor
dec
push
shl
lock
or
insl
or
push
popf
dec
dec
jp
push
dec
sub
movsb
into
les
or
js
and
inc
dec
sub
inc
shlb
cmpsb
and
push
imul
fwait
jnp
xor
mov
int3
push
push
mov
or
std
fimull
pop
mov
dec
out
outsl
inc
cmp
fmul
sbb
xor
repnz
pop
ret
bound
mov
nop
ret
mov
cmpsl
pop
dec
mov
loope
leave
in
sbb
inc
push
outsl
cli
js
dec
lods
out
test
dec
dec
aaa
jns
mov
sbb
xor
sub
lret
push
xchg
sbb
dec
jl
sarl
ret
push
push
inc
mov
out
stos
lahf
aam
sbb
pop
clc
fsubr
xchg
cmp
or
mov
inc
hlt
or
adc
dec
push
inc
inc
in
cmp
sbb
inc
imul
cltd
pop
pushf
inc
cmc
lds
mov
pusha
popa
xor
gs
adc
addr16
inc
mov
push
push
push
cmp
cs
jmp
lret
popa
cli
xchg
int
dec
pusha
ret
xchg
test
rorl
push
pop
clc
jecxz
dec
stc
xchg
idivb
xchg
xor
test
lahf
fisubs
cmp
enter
popa
repnz
sub
cs
mov
in
push
sbb
add
add
cmp
jne
dec
sub
xchg
loopne
orb
dec
repnz
pop
sub
or
and
jb
and
movsb
gs
sub
js
rol
test
mov
stc
and
movsb
cmp
add
incl
pop
cli
sbb
add
out
insb
in
pop
dec
mov
ds
pop
insl
dec
sub
add
inc
sbb
xor
pusha
rcrb
dec
push
pop
cmp
ds
pop
test
adc
inc
xor
xchg
clc
pushf
aas
mov
pusha
ret
sbb
add
frstor
aaa
lret
sub
popf
cmp
fistpl
addb
jg
xor
scas
gs
xchg
mov
aaa
pusha
pop
scas
push
sub
cmp
ret
dec
xchg
enter
pop
xchg
cli
repnz
or
sbbb
adc
mov
add
or
dec
inc
fadds
ret
lret
mov
cmpsb
sbb
cmp
inc
sub
pop
negl
cs
int3
lea
or
or
push
lock
loop
imulb
cwtl
sub
fiaddl
dec
sub
jae
mov
xor
dec
ljmp
and
mov
cmp
xor
jecxz
aaa
dec
inc
gs
int
out
mov
dec
test
mov
int3
dec
mov
fwait
sub
pop
mov
jecxz
add
mov
xchg
aad
mov
in
push
loop
dec
bound
cmp
fwait
pop
xor
test
ljmp
or
popa
aas
dec
sarl
fsubr
xchg
cmp
push
out
cli
add
push
inc
sti
enter
ljmp
cs
push
xchg
inc
inc
mov
cli
dec
dec
aas
pop
adc
pop
lret
dec
iret
jecxz
negl
shlb
or
lret
rolb
sti
or
cmpsb
mov
cmp
aaa
lahf
cmp
push
jge
mov
test
mov
and
cld
adc
ret
xchg
es
sbb
inc
arpl
enter
les
adc
inc
mov
mov
jecxz
sbbb
xchg
pusha
leave
fs
in
aas
mov
xor
and
sub
dec
and
cld
mov
test
cmp
pop
jns
sub
push
popa
push
aam
cmc
in
sub
cltd
pop
inc
pop
movsl
mov
add
mov
and
aas
jecxz
xor
cmp
dec
subb
dec
call
dec
cmpsb
dec
data16
dec
stos
mov
rclb
push
mov
call
iret
sbb
xchg
push
dec
mov
lea
mov
subl
sub
mov
add
int
mov
data16
mov
int
mov
cmpsb
lret
jo
cwtl
icebp
call
push
std
push
dec
sbb
shll
or
sbb
dec
scas
mov
pop
sub
mov
xchg
out
outsl
dec
mov
imul
xor
dec
adc
scas
nop
jmp
lret
mov
lahf
movups
cli
lea
jae
pushf
pushl
lea
jne
push
jmp
jmp
xchg
dec
sbb
add
lret
and
dec
movsb
add
push
bound
popa
mov
pushf
icebp
dec
ret
jp
sbb
and
movsl
test
sub
adc
adc
ret
inc
ret
shlb
sbb
cmpsl
ret
push
mov
pop
push
bt
push
call
push
or
pushf
push
lea
jne
setle
pushf
mov
push
push
pushl
pusha
pushf
popl
bt
call
push
call
clc
aam
lds
jmp
push
call
add
jge
and
pop
mov
mov
pushf
pushl
mov
push
jmp
push
movsbw
mov
jmp
push
or
mov
pushf
lea
je
movzbw
not
mov
setbe
bswap
lahf
lea
lea
pusha
pushf
mov
bswap
pusha
lea
movzbl
pushl
popl
movzbw
mov
push
pushf
movzbw
mov
movl
movzbl
lea
pushf
pushf
movl
jmp
push
call
scas
lea
ja
pushf
pushl
mov
imul
clc
pusha
clc
pushf
add
pushf
movb
mov
lea
jmp
mov
lea
je
jmp
call
push
call
mov
add
aaa
pushf
testb
out
lahf
jg
xor
out
fnstenv
mov
xor
into
movsb
sbb
add
xor
movb
inc
pop
lock
shl
xlat
dec
jle
out
push
adcl
out
pop
shll
mov
in
xlat
repnz
mov
dec
popa
cli
sbb
add
mov
jecxz
testb
pop
jl
adc
mov
xchg
push
or
mov
not
pushl
push
movsbw
movl
movsbw
lea
pushf
movzbw
lea
call
mov
repz
mov
mov
js
mov
xchg
xor
dec
addr16
jo
sbb
iret
lret
jb
rcrb
adc
arpl
sbb
fcmovbe
add
aam
add
sti
jmp
fistpl
aad
mov
loopne
scas
adc
or
cmc
mov
test
movb
movb
pushf
cmp
pusha
push
lea
jg
pushf
lea
ja
rcr
add
bsf
pusha
jmp
test
pushl
popf
push
lea
jmp
cmc
dec
test
add
jbe
test
jo
test
xlat
mov
stos
add
sbb
ficoms
leave
mov
mov
icebp
sbb
add
and
cli
hlt
icebp
push
jb
cmp
cmp
and
ja
call
and
inc
sub
faddl
outsl
iret
pop
add
mov
ljmp
and
jns
push
adc
and
or
pop
sub
scas
stc
shrb
outsb
ficoms
dec
roll
xor
insl
add
repz
cmpsb
add
push
dec
and
push
and
iret
ret
sub
push
xor
pop
adc
out
jb
aad
mov
jo
negb
shlb
cld
lods
js
pop
mov
add
cmpl
fsts
sti
push
pop
imul
les
fidivrl
or
cmp
nop
clc
data16
lock
inc
push
push
stos
jg
in
imul
push
daa
pop
scas
pop
out
dec
and
push
mov
mov
addr16
pop
je
imul
cmc
sbb
or
out
push
mov
inc
mov
stos
lahf
sbb
cmp
xor
push
call
incb
repz
repz
out
ljmp
test
jecxz
lock
cmp
mov
data16
xchg
aas
cld
pusha
sbb
in
add
outsl
mov
cmpsb
pushf
sbb
idiv
sti
jne
test
seto
shl
jmp
mov
test
int3
test
add
dec
imul
or
xor
shrb
sbb
pushf
in
dec
movsb
push
arpl
push
add
push
mov
lea
or
aam
xor
xor
gs
jno
insl
stos
addb
mov
pop
out
sub
test
adc
adc
mov
int
xchg
dec
jb
ret
scas
inc
popa
mov
and
pop
mov
cmp
or
cmp
scas
and
push
lods
xchg
ror
or
pop
xchg
gs
sub
test
adc
add
shrd
xor
add
cmc
cmpb
pushf
mov
mov
lea
jne
and
mov
bt
bt
push
add
mov
stc
movzwl
bsr
bt
test
mov
clc
add
cmc
mov
mov
test
movw
jmp
jmp
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
repz
out
pop
adc
adc
jnp
push
in
sbb
sbb
shlb
adc
inc
and
push
mov
xlat
stos
icebp
inc
mov
xchg
das
push
pop
mov
mov
mov
push
sbb
popf
cmc
fstpl
jne
ds
mov
add
or
sub
pop
pop
and
je
aaa
pop
aaa
adc
sbb
shrl
fisubs
inc
sbb
xchg
cmp
movsl
out
clc
push
loope
mov
lret
mov
call
cmp
icebp
repz
push
inc
push
outsb
roll
clc
lods
lods
cmpsl
andl
sub
sti
aad
mov
adc
inc
mov
cltd
mov
push
or
jne
call
sub
mov
inc
push
jecxz
mov
bound
repz
jne
pop
movsl
dec
sub
aad
arpl
addb
xchg
rclb
jg
xchg
jbe
dec
mov
xlat
adc
mov
pop
mov
rcrb
adc
mov
lock
sub
stc
dec
imul
jo
add
xor
mov
repz
out
bound
fcmovnbe
rclb
in
cmp
cld
aad
es
xchg
fs
outsb
add
daa
add
adc
lahf
fidivrl
fiadds
pop
mov
movsb
mov
imul
and
lret
lea
jno
adc
cmp
rorb
into
les
outsl
jbe
cli
pop
notb
int3
loop
in
pop
mov
pop
jae
lret
mov
mov
sahf
mov
jno
rorb
jne
cmp
xchg
dec
and
xor
add
jge
out
mov
fs
jne
push
pushl
ret
push
call
push
call
fistl
ds
out
mov
xchg
dec
es
call
movsbw
push
movb
call
clc
pushf
bt
bt
add
call
not
mov
pusha
pushf
push
pushf
pushl
ret
jmp
push
call
and
sub
outsl
add
push
xor
cmp
mov
shr
push
jno
cmpsb
jl
mov
insb
lret
daa
jg
aas
inc
arpl
add
inc
and
xchg
pop
shll
test
or
and
pop
xchg
xor
add
adc
dec
popf
jne
repnz
dec
dec
stc
outsl
imul
clc
in
mov
mov
imul
aam
push
xor
and
fnstenv
mov
lahf
testb
stc
mov
xchg
out
adc
aam
xchg
cmp
or
xchg
aad
jmp
test
push
cld
dec
mov
sar
pop
mov
mov
leave
inc
jno
sbb
cmpsb
inc
fisttpll
test
ret
pop
out
lret
cmp
push
dec
mov
add
push
adc
rorb
mov
xchg
push
or
add
in
ss
sub
jg
dec
bt
bt
jmp
call
lea
je
movsbw
sub
rol
mov
bsf
xor
bt
mov
pusha
cmp
xor
pushf
jmp
push
call
mov
mov
jno
repz
xchg
cli
push
sub
aad
mov
adc
in
inc
mov
inc
fwait
in
out
sub
push
out
and
shrl
mov
bound
jg
addr16
test
jb
xchg
das
cmp
or
push
pop
or
add
fwait
repz
jno
repz
xlat
das
jg
mov
notb
test
test
xor
ljmp
jo
pop
idivb
mov
shlb
into
fbstp
aas
fisttpll
loopne
call
loopne
fstp
out
add
imul
xchg
xchg
xlat
in
xchg
neg
xchg
pop
dec
sub
sub
mov
jmp
adc
or
out
push
push
call
cltd
adc
adc
stc
bt
add
push
movb
lea
jmp
pushl
repnz
pushf
mov
mov
lea
jne
adc
mov
not
shl
dec
sub
ror
shl
xor
add
mov
push
add
jg
pusha
pusha
sub
stc
call
cmpsb
mov
imul
in
lret
mov
and
pop
sub
popa
cli
movsl
xchg
rcll
addr16
fwait
jmp
bound
sub
and
cmpb
int3
lds
std
stc
adcb
mov
data16
pop
mov
push
fidivrs
sbb
lret
push
inc
and
and
data16
add
xor
aas
push
mov
adc
clc
shrb
pop
push
sub
cmpsb
ret
popf
das
xor
push
pop
sub
push
jle
repz
insl
insl
imul
jmp
mull
shl
mov
test
stc
stc
stc
cmpb
jmp
pushl
pushf
bt
or
pushf
jmp
pusha
mov
mov
movl
mov
pushf
movl
call
cs
sub
dec
and
scas
test
mov
insl
pop
mov
sbb
xchg
int3
movsb
fisubrs
rorb
push
adc
push
jecxz
pop
std
jne
cmp
pop
lea
lret
mov
scas
movsl
and
cld
push
aas
fidivs
xchg
dec
popf
inc
call
adc
mov
repz
push
xor
cld
xlat
das
or
add
dec
adc
daa
lcall
cmc
jle
add
bound
mov
adc
jo
imul
xchg
jmp
insb
dec
jb
add
hlt
in
mov
insb
inc
inc
pop
cs
push
pusha
int
mov
add
jbe
leave
daa
add
lcall
add
xchg
jo
movsb
add
dec
pop
test
fidivs
fwait
mov
cs
mov
mov
shll
not
add
mov
cld
add
jge
daa
cmc
push
dec
push
leave
inc
cmp
mov
pusha
pushl
jmp
mov
jmp
push
pusha
pushf
jmp
fs
je
repz
push
mov
jmp
testb
cld
xchg
outsb
fisttpl
mov
dec
jo
push
push
xor
pusha
jne
add
cmpsl
inc
jnp
inc
es
xor
stc
icebp
in
lds
sahf
jne
mov
push
push
cmpsl
fnsave
lea
rep
loop
pop
mov
xchg
pop
shll
mov
fnstenv
sar
cmp
repnz
pushf
pushf
movl
lea
jne
bsr
mov
shr
adc
jmp
lea
je
cmc
clc
push
cmc
cmp
pushf
lea
je
pusha
cmp
call
pusha
jmp
movzbw
mov
stc
cmpb
jmp
mov
jne,pn
repz
movsl
xchg
push
mov
hlt
xchg
icebp
repz
dec
pop
fists
adc
pop
mov
es
mov
insl
inc
movsb
sti
testl
xor
sub
jge
add
lods
repnz
clc
dec
push
dec
dec
and
ror
jns
neg
mov
std
xchg
jmp
and
xchg
xchg
sbb
pop
mov
int
xchg
icebp
je
jmp
xlat
std
pop
push
stos
lods
es
add
dec
cs
jge
jbe
repz
popf
cli
pop
test
scas
lods
test
aam
notb
add
cmpsb
jecxz
out
enter
lods
or
lds
cld
rcll
jp
and
pushf
testb
mov
mov
mov
shr
pop
inc
aam
or
pop
mov
out
shl
push
mov
loope
je
inc
insb
push
mov
sub
sbb
jb
pop
xor
and
test
push
mull
jle
sub
xor
push
cmc
int3
lds
pushf
mov
cmpsb
push
aad
xchg
xchg
inc
cwtl
shrl
in
jo
arpl
fstp
in
test
xchg
mov
je
pusha
pusha
mov
lea
jmp
bsf
mov
stc
jmp
mov
push
lea
call
pusha
lea
jne
cwtl
not
movzbw
mov
pushf
pusha
pusha
push
lea
jmp
movsbw
push
cwtl
lea
jmp
pusha
pushf
call
shlb
leave
ja
repz
clc
aam
nop
addr16
and
mov
outsl
add
imul
movsl
xchg
sub
pop
mov
inc
or
mov
into
leave
nop
dec
out
mov
cmpsl
fs
push
inc
inc
dec
ljmp
xchg
int3
add
outsl
inc
jae
xorl
addr16
xlat
iret
push
lret
lret
push
call
pop
call
pushf
lea
je
xadd
sub
pusha
mov
mov
mov
sbb
btr
pusha
sub
cmc
movsbl
add
bt
shr
xchg
shld
test
mov
shld
shrd
add
shl
add
inc
movzbw
sets
btc
mov
bt
test
movb
shr
test
cmp
call
jmp
xchg
add
add
add
add
add
add
add
add
gs
add
arpl
add
add
add
add
add
jecxz
mov
sahf
jg
inc
cmp
lahf
rcrb
cmp
pusha
shlb
ljmp
test
cmp
add
cmovae
xchg
ja
mov
mull
arpl
mov
scas
decl
aam
pop
sub
lods
cs
and
mov
ja
cmpsl
cmp
test
andl
bound
pop
cmp
jg
push
cmc
mov
out
fdivr
in
fcoml
mov
xor
cmp
sub
outsl
dec
arpl
add
inc
jg
cmc
cmp
push
jg
or
jmp
or
iret
fsubl
ljmp
jecxz
ret
repnz
rorb
je
xchg
out
sub
mov
movb
add
push
push
scas
mull
ret
rcl
test
mov
fsubr
mov
pop
cli
jnp
sub
popa
and
pop
mov
pop
xor
ljmp
cmp
sti
jmp
scas
stos
iret
enter
pop
sahf
std
lahf
cmp
sbb
addr16
lock
inc
daa
push
popf
aas
add
mov
inc
daa
jmp
mov
pushf
push
ja
pop
leave
cld
mov
push
stc
std
aas
push
add
loopne
repnz
imul
mov
inc
addr16
pop
mov
xchg
std
mov
jge
cmpsl
loopne
fists
add
mov
xchg
scas
ficoms
pop
out
fcmovne
jbe
jge
push
sub
pop
sbb
loop
pop
mov
cmp
or
cmc
aad
add
dec
lret
jno
pop
dec
mov
push
pop
outsl
pop
sahf
fsubrs
pop
out
dec
adc
arpl
fadd
outsl
lcall
jg
inc
std
lcall
cmp
xor
mov
in
test
cwtl
bound
in
jno
mov
fldcw
mov
outsb
roll
inc
lods
lock
js
insb
and
into
mov
cmp
add
arpl
sbbl
mov
sub
sub
jmp
cmc
in
leave
inc
das
lock
into
fisubl
data16
jl
iret
movsb
pop
dec
int
in
enter
cld
add
sbb
imul
add
sti
mov
push
pop
loopne
sub
and
lahf
jmp
sarb
popf
lea
xor
xchg
or
arpl
xchg
pop
sub
subl
jmp
and
arpl
hlt
pop
adc
xchg
lahf
push
sbb
sub
and
adc
xor
lods
mov
mov
xchg
jnp
sbbb
cmp
inc
mov
jmp
push
sub
jl
mov
adc
insl
push
xor
or
std
cwtl
int3
fidivs
mov
inc
in
bound
pop
and
push
fwait
and
dec
insl
inc
negl
mov
push
jmp
or
lock
jmp
jecxz
pop
jmp
push
push
inc
jne
xor
or
sub
and
pop
cmp
cmp
leave
in
mov
xor
xchg
ret
push
lock
sbb
pushf
inc
lods
jge
or
cmc
cld
pop
jl
les
sbbb
in
mov
cli
cli
xchg
fwait
cmp
nop
paddsw
sbb
jmp
inc
cmp
xchg
dec
jp
push
cmpsl
fwait
dec
aas
dec
les
bound
jb
idiv
and
testb
movl
push
dec
inc
pop
rol
cmc
in
cmp
cli
shlb
add
sbb
mov
xor
cli
iret
js
sbb
aas
leave
and
inc
out
jae
xor
push
xchg
stc
add
ljmp
rolb
cmpsb
mov
pushf
add
cs
pop
cmp
mov
or
xor
jecxz
arpl
negl
mov
adc
push
cmp
xchg
arpl
std
push
dec
or
or
outsb
ror
ja
push
mov
lret
loope
lret
push
fildll
mov
es
test
adc
xor
sbbl
scas
mov
lcall
mov
cs
xchg
std
negl
mov
pop
dec
and
ljmp
test
push
jbe
or
mov
add
dec
jg
inc
iret
cmp
test
rcll
mov
jge
cmp
mov
dec
aam
movsl
inc
push
sbb
pop
jmp
or
aaa
adc
imul
xchg
lahf
leave
lret
push
cwtl
popa
mov
es
test
dec
pop
inc
fdivrs
xlat
push
ja
dec
sbb
pop
int3
das
repnz
xchg
cmp
sbb
inc
inc
add
lds
xor
loop
scas
mov
xchg
xchg
adc
dec
xchg
push
jl
mov
dec
inc
pop
sbb
pusha
xor
adc
dec
lock
sub
mov
sbb
stos
pushf
xchg
mov
cmp
mov
scas
adc
xor
loopne
adc
pop
adc
out
mov
pop
adc
movsb
jge
movsb
mov
mov
popa
pop
jno
xchg
mov
jp
or
mov
dec
fcoml
pop
gs
test
stos
mov
inc
push
xchg
outsl
fdivp
inc
or
push
aas
mov
mov
andb
dec
mov
out
dec
and
push
cmp
or
sbb
test
stos
xchg
mov
in
scas
pop
xchg
ret
adc
test
mov
es
fs
dec
fstp
lds
leave
test
pop
pop
push
addl
inc
es
push
in
mov
pop
lock
js
pop
adc
cmp
xchg
lahf
push
push
pusha
mov
jae
out
daa
cmc
mov
leave
cwtl
jecxz
pop
adc
subl
out
xchg
in
xlat
outsb
dec
push
pop
adc
inc
or
lock
adc
sbb
add
cwtl
mov
mov
neg
jmp
mov
daa
fs
mov
repz
iret
call
dec
test
mov
insl
rclb
cli
or
add
mov
add
pop
push
mov
cmp
mov
xchg
or
insb
fimull
mov
add
and
sub
cli
mov
mov
mov
adc
cs
sbb
bound
dec
push
dec
sub
cmc
aas
in
cmp
xor
fwait
roll
inc
mov
stos
sub
xchg
or
xchg
cmpsb
fcoml
add
stos
xor
fisubrl
inc
ja
or
rcr
mov
mov
ret
jmp
daa
addb
sbb
jb
out
shrb
mov
stc
mov
pop
loopne
jge
cmp
xchg
mov
loop
pop
lret
mov
mov
adc
mov
pusha
push
xor
mov
stos
inc
dec
and
aas
lahf
or
jg
insl
mov
scas
xor
adc
jae
das
mov
push
jno
jg
xchg
push
cmpsl
mov
adc
negb
cmpsl
fldcw
dec
push
nop
jecxz
xor
insl
nop
jp
jge
jmp
ja
lret
cld
insl
pop
xchg
fwait
test
pop
in
test
in
scas
cwtl
sbb
fdivs
inc
sbb
in
mov
push
xchg
shll
adc
mov
inc
lret
xlat
or
jl
movsb
in
daa
gs
pop
sbb
sub
repnz
mov
sbb
adc
mov
lret
add
xlat
lods
add
in
xchg
mov
fwait
add
push
out
sub
mov
fwait
insl
pop
fildll
add
pop
jns
sbb
jecxz
pop
mov
and
lods
ljmp
outsl
sub
lcall
lds
inc
clc
pop
xor
and
ficompl
in
xor
and
popa
mov
fcoms
jnp
in
and
xchg
xorb
pop
int3
push
rcl
pop
cltd
sbb
daa
mov
mov
ficompl
gs
add
test
pusha
lret
mov
ret
call
fs
movsl
cmp
loope
aaa
cmpsl
jne
mov
cmpsb
iret
scas
and
test
pop
adc
test
in
sbb
popf
sbbb
insl
adc
xor
movsl
test
pushf
jne
xchg
in
aad
adc
inc
sbb
test
sub
mov
test
dec
pop
mov
shrb
mov
std
push
nop
mov
sub
pop
lods
mov
xchg
inc
cmc
hlt
int
sbb
sub
ss
mov
dec
sub
in
sub
xchg
mov
pop
and
mov
xchg
inc
mov
sub
dec
setno
clc
adc
test
into
or
push
push
or
icebp
sub
outsl
cwtl
jg
add
test
insb
push
mov
adc
mov
inc
sahf
scas
jge
in
push
add
inc
mov
sub
outsl
clc
dec
lods
and
cmpb
in
sbb
fnstenv
popf
dec
stos
xlat
mov
xlat
jae
dec
push
mov
into
inc
jne
sbb
or
lcall
jl
push
ja
mov
stos
xor
enter
mov
mov
sbb
or
fs
fidivrl
rcll
and
addr16
jecxz
imul
lods
sub
jns
test
call
test
idivb
add
sbb
ss
jle
inc
and
repz
jae
clc
mov
mov
and
xchg
outsl
stos
mov
cld
loop
xorb
mov
cmpsb
mov
push
cltd
or
int
mov
movsb
icebp
imul
inc
push
outsl
jle
outsb
jl
pusha
sahf
out
cmp
adc
stc
dec
sub
dec
inc
inc
adc
pushf
xor
jae
aad
push
aas
or
pop
jmp
jl
mov
int3
mov
xor
push
lods
popf
add
mov
hlt
fcmovnb
fstl
pop
out
lret
fidivrs
sub
or
and
enter
lret
int
inc
mov
dec
xchg
push
dec
push
xchg
push
and
inc
xchg
inc
dec
xor
lret
fsts
mov
call
lods
jge
mov
lahf
mov
lea
adc
sub
cmc
and
out
bound
das
shll
outsl
shld
push
sub
test
push
push
inc
xor
mov
je
cmpsb
xchg
leave
add
repnz
push
or
icebp
ja
dec
mov
lock
leave
loop
jbe
cwtl
cwtl
inc
pop
jne
jge
mov
xor
test
cmp
inc
inc
xchg
out
in
shlb
cld
test
cmp
pushf
jmp
push
and
add
inc
and
dec
or
xchg
repz
push
adc
jge
inc
mov
les
into
and
xor
lods
xlat
add
mov
cmc
inc
or
dec
cmp
pop
dec
imul
push
scas
aas
pop
sub
push
in
push
mov
pusha
cmp
hlt
insb
subl
push
clc
push
dec
inc
ret
cmp
mov
fwait
test
and
in
pop
dec
int
mov
scas
js
mov
cs
in
push
call
jp
in
mov
jmp
call
pop
jb
test
repz
mov
aam
mov
xchg
lds
test
cmp
repz
scas
or
push
stc
jae
mov
stc
aam
in
cmpsb
inc
sbb
cmp
ret
dec
jae
adc
sbb
lret
pop
xor
mov
mov
jmp
push
cmp
adc
add
mov
lds
sub
cmpsl
jmp
dec
sub
xor
adc
mov
lahf
lcall
out
rcr
cld
xor
sub
daa
sub
out
arpl
arpl
js
fdivs
jl
push
lock
call
dec
and
sbb
lea
lret
sub
jb
loop
cmp
testl
jno
fcoms
jl
fsubs
mov
xchg
xchg
push
xchg
cld
clc
jo
out
scas
and
in
lret
int
jne
pusha
inc
clc
xchg
neg
adc
daa
add
mov
test
rcr
shl
push
mov
push
test
mov
pop
rcr
sbb
mov
pusha
sub
call
push
call
pop
push
xchg
repz
pusha
lea
je
cmc
test
sub
call
push
pushf
lea
jb
pusha
push
push
pushl
ret
std
popf
pushf
pusha
movl
mov
lea
jmp
sets
lahf
jmp
iret
test
xchg
repz
std
push
test
test
mov
cmp
pop
xchg
daa
dec
cmpsl
cmp
dec
dec
mov
dec
repnz
dec
loop
adc
cmpsb
add
sub
rcl
push
jmp
lods
lret
cmp
dec
cmpsl
int3
and
out
inc
cmp
mov
push
push
nop
or
push
mov
int3
dec
cmp
xor
mov
or
sbb
sbb
sub
xchg
mov
clc
push
dec
and
out
sub
sub
out
in
adc
push
sub
push
scas
data16
mov
jo
loop
shll
mov
sub
mov
cli
add
sub
xor
inc
push
xchg
popl
or
push
adc
cmp
lods
sub
repz
cmp
clc
fnstenv
cmpsl
popf
cwtl
out
inc
mov
imul
xor
ljmp
and
in
out
cmp
cli
shlb
mov
pop
daa
sub
mov
mov
xchg
dec
and
call
lea
ljmp
es
add
sub
push
fwait
in
jo
mov
xchg
add
sub
int
jl
cmp
or
mov
xchg
cmp
add
mov
or
clc
cmc
outsb
pop
cmp
mov
sub
push
cmp
pushf
pusha
lea
ja
cmc
imul
pusha
jmp
push
call
xchg
xchg
dec
add
add
clc
sub
dec
push
call
mov
add
fwait
jb
xor
addr16
sbb
shrl
in
add
cmp
push
mov
mov
jo
js
rorb
pop
negb
sub
add
add
xchg
sub
pop
jb
fcmovnb
mov
cli
repnz
stc
xchg
pushf
repz
iret
fcmovb
mov
add
fdivs
mov
jne
fs
fistl
dec
gs
xor
es
ds
sar
add
nop
sub
int3
push
mov
pop
xor
les
pop
pop
push
call
dec
punpckhbw
xor
add
lahf
mov
call
push
call
popf
dec
jmp
popf
push
push
push
push
lea
jmp
stos
stos
mov
repz
stos
js
push
jg
jo
pop
out
and
jnp
insl
mov
popa
mov
sbb
dec
jns
jnp
jae
testl
or
aaa
wrmsr
xchg
pop
sbb
addl
sub
es
scas
jmp
sti
sbb
jmp
push
jg
push
dec
pop
dec
or
fst
lret
inc
sarb
test
bt
call
int3
popf
push
call
fsubr
pop
inc
pushf
pushf
call
add
add
clc
cmp
push
pushf
jmp
push
call
movsl
jae
ljmp
mov
jl
mov
ret
es
repnz
in
dec
cmpsl
popa
push
mov
ja
push
pop
mov
adc
addr16
sbb
sbbl
nop
lcall
push
in
fwait
cli
sti
push
rcll
and
xor
ficomps
push
out
cmpsl
xor
and
adc
mov
jle
and
pop
repnz
dec
leave
mov
add
or
pop
jo
lahf
andl
outsb
inc
and
cltd
sub
aad
lcall
es
jne
sbb
shll
xor
pop
xor
stos
xor
std
pop
stc
loop
mov
das
jle
inc
sbb
sbb
sbb
movsl
push
std
insb
dec
cmpsl
pop
jl
int3
lock
fisubrl
ficoml
mov
mov
xor
mov
fldcw
cmpsl
xor
jg
sahf
push
xchg
xchg
xchg
mov
outsl
mov
nop
push
fs
call
pushf
pushl
pushf
jmp
lea
je
push
pushl
lea
jmp
aas
xchg
pop
mov
repz
lahf
in
dec
movsl
or
rep
data16
sbb
push
int3
lret
out
dec
dec
push
xchg
es
mov
aaa
gs
imul
or
push
mov
das
das
shl
jecxz
fst
scas
pop
ret
inc
xchg
nop
call
repz
cmp
mov
inc
cmp
imul
in
push
cmp
pop
hlt
aad
and
cwtl
push
adc
xchg
or
or
push
arpl
shlb
and
inc
add
mov
pushl
daa
mov
repz
xor
mov
add
ret
xchg
test
ret
test
sub
ja
rolb
aas
pmuludq
and
test
sti
sti
dec
jae
add
push
push
jns
xchg
into
inc
sub
push
pop
jp
out
mov
arpl
out
sbb
and
scas
fsubrl
popf
jae
inc
xchg
daa
mov
xchg
test
mov
cmpsb
mov
adc
sbb
jnp
idivb
cltd
sbb
fldcw
repz
inc
push
push
jge
in
lret
out
xor
fdivrs
add
xor
and
adc
xchg
jae
in
loopne
ja
jno
mov
lock
repz
ljmp
nop
jno
inc
push
xchg
adc
inc
cmpsl
pop
cltd
mov
outsb
dec
inc
mov
add
sub
fldl
sbb
or
mov
or
jae
xor
pop
sub
pushfw
dec
sub
fisttpll
or
mov
cmp
inc
movsb
and
push
jbe
leave
mov
arpl
jecxz
std
push
push
push
les
xor
das
xor
jo
mov
mov
xchg
test
dec
in
call
or
xchg
cmp
call
mov
pushf
call
push
call
leave
movsbl
not
lea
call
lea
je
push
pushf
pushf
movb
lea
jmp
stc
add
pushf
rol
movb
dec
cmp
push
neg
stc
call
stc
shr
setae
bt
mov
btr
add
xor
cmc
pushf
cmc
add
adc
movzbw
sub
mov
pusha
clc
test
shr
test
cmp
push
pushf
pushf
lea
jl
je
call
push
call
push
push
clc
mov
add
lea
jbe
pushf
pushf
pushf
lea
jne
push
mov
jmp
aad
orb
jg
aaa
push
mov
push
mov
push
push
pop
test
fstpt
imul
sbb
ficoms
pop
iret
adc
sub
call
popa
ljmp
cmp
dec
enter
and
cwtl
jae
add
ret
xchg
test
scas
in
into
sub
push
xor
mov
mov
je
add
repz
dec
ja
push
mov
mov
stos
fdivrs
js
cmc
cli
outsb
lock
mov
pop
scas
cs
push
cmp
test
shr
jmp
movl
pusha
push
pusha
pushf
pushl
popl
pushf
mov
push
pushl
ret
test
ds
cmc
push
mov
push
mov
outsl
rcrl
es
sub
lods
dec
cmpsl
cmpb
rol
cmp
mov
inc
cltd
hlt
and
lcall
movsl
or
jp
rorl
jmp
or
shrb
cmpsl
dec
cmpsl
daa
test
push
pop
loope
push
int3
int
cmp
daa
rcrb
popf
mov
imul
pop
mov
jno
sub
in
mov
push
mov
movsb
imul
and
cmp
jle
xchg
adcl
lcall
mov
in
repnz
mov
xchg
std
push
mov
js
dec
lods
movsb
mov
stos
cli
xchg
dec
leave
lds
int
in
jmp
stc
adc
mov
push
aam
sbb
inc
cmp
sub
push
ss
xchg
dec
jno
call
cld
mov
movl
lea
jae
or
mov
adc
mov
stc
stc
lea
stc
mov
push
sub
stc
call
push
call
jg
sbb
add
add
jmp
call
movl
pushf
movb
jmp
call
add
repz
je
sub
loopne
sbb
cld
sub
cld
mov
dec
cmpsl
clc
aaa
outsl
cwtl
sbb
or
out
icebp
pop
jne
nop
add
cmpsl
lock
popa
lds
xchg
imul
fs
jae
push
mov
pop
add
cmp
mov
pop
outsb
add
mov
in
mov
lods
popl
and
mov
test
mov
push
sub
test
rclb
dec
sbb
inc
add
ljmp
xchg
add
je
and
lret
push
ss
mov
aas
jp
xor
fisubs
cld
adc
sub
fld
xchg
nop
call
lods
mov
push
sub
insb
out
lods
push
call
imul
push
fs
and
xchg
mov
or
iret
pushf
pusha
pusha
lea
call
pusha
mov
lea
jmp
jmp
repz
gs
fldt
xchg
ljmp
out
nop
mov
cmc
rcl
mov
cli
dec
mov
loope
xchg
test
sub
repz
loope
fimull
dec
mov
ds
push
js
or
lea
je
cmc
cmp
pushf
cmp
push
push
lea
je
cmc
cmp
call
mov
pushf
mov
lea
jmp
imul
mov
bt
add
push
lea
jmp
push
call
push
lea
jae
dec
xchg
inc
mov
pushf
inc
inc
lea
je
inc
sets
mov
setbe
mov
call
bt
stc
rol
movw
movb
mov
dec
clc
mov
neg
clc
lea
jnp
cmc
stc
sub
stc
ror
bt
cmp
jmp
cmp
repz
mov
cmc
xor
sbb
inc
clc
push
xlat
mov
push
sub
sti
out
enter
cmp
xor
mov
daa
arpl
mov
adc
dec
fwait
mulb
mov
push
jno
mov
add
insb
out
jmp
cmpb
adc
cwtl
sbb
bt
stc
clc
or
pusha
lea
je
bswap
mov
mov
not
lahf
lea
jmp
mov
movl
mov
push
mov
call
sbb
inc
xchg
add
cmp
fdivs
icebp
inc
and
loop
lods
add
sub
sbb
dec
dec
inc
hlt
cmp
roll
ficoml
pop
xor
js
adc
test
rorl
push
inc
hlt
sbb
movsl
std
pop
fwait
mov
jp
fnstenv
dec
pushf
push
mov
mov
push
jmp
test
in
call
pusha
push
pop
dec
lret
inc
mov
xchg
dec
hlt
xchg
cmp
in
ss
mov
cmp
call
lea
ret
add
repz
fs
pushf
jle
xor
outsb
inc
test
push
or
fistpl
js
push
icebp
nop
add
mov
add
adc
adc
xor
std
or
dec
sub
clc
jmp
cwtl
int3
stos
mov
push
sub
or
pop
pop
xchg
adc
popa
movzwl
cwtl
test
in
arpl
clc
jp
mov
out
jl
push
jmp
jne
ficoms
xor
fistl
jle
sbb
add
shrb
dec
mov
jo
cld
decl
mov
movsb
lcall
jnp
push
call
and
mov
lea
jmp
cmc
jmp
and
cwtl
xchg
add
loope
and
dec
xor
in
inc
pop
jne
mov
jge
ja
out
loop
mov
adc
xor
add
mov
out
jp
sar
and
pushl
pusha
lea
jae
push
lea
jne
pusha
mov
mov
stos
push
movw
pushf
movb
lea
jmp
push
mov
pushf
mov
sets
cwtl
call
sbb
pop
cmp
push
xor
add
movsb
inc
pop
lea
or
jmp
lret
mov
ret
and
cmpsl
xchg
cmp
aad
and
mov
ds
mov
in
inc
in
mov
lret
sarl
insb
dec
arpl
xchg
mov
add
out
add
xlat
fldt
xor
imul
sbb
cmp
pop
fimull
sbb
mov
fwait
jbe
jb
int
enter
ss
cmp
mov
ficomps
add
inc
cmp
add
inc
je
bswap
mov
movsbw
push
call
lahf
cmp
xchg
push
sbb
push
jne
dec
jg
or
or
inc
sub
mov
jo
std
add
inc
test
inc
jmp
jge
and
xchg
inc
movsl
in
xchg
sarl
sub
push
adc
les
push
mov
in
sub
orl
rcll
adc
mov
scas
xchg
or
xchg
jnp,pn
mull
cld
fstl
lret
enter
test
sub
jecxz
or
sbb
or
xchg
cltd
push
add
lret
and
into
lret
daa
push
nop
cmp
cmp
loop
and
mull
dec
test
push
ljmp
mov
pop
inc
ss
pop
imul
pop
imul
femms
insl
stos
popa
outsb
cmp
stos
stos
adc
sbb
int3
xchg
std
xor
mov
leave
inc
mov
dec
jge
push
sub
jnp
cld
xor
push
or
dec
push
inc
cld
push
pushf
push
fs
dec
lret
or
push
or
dec
jmp
test
jmp
call
lea
je
clc
clc
jmp
cmp
add
outsl
repz
dec
adc
add
add
cmp
add
push
adc
add
add
pushf
roll
add
add
push
aad
add
flds
add
add
insl
aad
add
add
jge
add
xchg
test
cwtl
add
add
cmp
push
mov
inc
out
rorl
mov
pop
push
pop
loopne
lock
out
outsl
int
pop
aaa
cmp
popf
sbb
xchg
add
sbb
push
ret
dec
and
push
bswap
pushf
pushf
pusha
lea
pop
pushf
movsbw
not
movzwl
bswap
jmp
stc
popfw
call
mov
cmc
mov
pushf
clc
or
pushf
lea
je
bt
mov
lea
bswap
mov
cmc
dec
mov
clc
test
xor
je
push
clc
shr
lea
cmc
bt
cmpl
jle
pusha
lea
je
mov
seto
mov
dec
sub
sbb
btr
dec
shr
clc
mov
bsf
add
shl
movsbw
neg
shl
add
or
sbb
btr
jmp
mov
call
test
cmc
add
pushf
pusha
push
pushf
lea
jmp
pushl
popl
pushf
mov
pushl
ret
push
call
adc
pushf
popw
or
mov
movb
mov
add
call
movzbw
pop
pushf
mov
movl
movl
push
pushf
lea
jmp
push
lea
je
jmp
call
lock
rcrb
mov
aam
sbb
dec
mov
hlt
and
add
int3
stos
movsb
jle
mov
out
ds
cmp
icebp
inc
repnz
adc
lds
add
fs
cmp
cmpsb
mov
outsl
into
mov
mov
sbb
and
xchg
or
add
push
adc
call
add
stos
addl
roll
mov
das
cmpsl
add
add
and
push
mov
insl
mov
pop
jbe
int3
mov
inc
mov
dec
mov
mov
and
add
pop
cmp
fwait
add
cld
dec
and
mov
divl
push
dec
cmpsb
clc
lock
add
inc
sbb
fbstp
adc
sub
into
movsb
addb
ror
sub
mov
div
je
jecxz
loop
ret
push
jmp
addr16
lcall
lcall
xchg
movsb
fs
push
or
in
bound
call
sub
loopne
push
adc
sbb
mov
lock
jmp
ffree
mov
jge
sub
push
fdivl
push
xchg
test
or
jecxz
pop
inc
fisttps
xor
fwait
add
push
stos
add
cmp
jbe
ss
mov
scas
sub
stos
scas
cwtl
push
jmp
and
dec
mov
addr16
insl
rclb
in
aad
inc
aam
mov
adc
mov
std
ljmp
test
xchg
dec
in
dec
and
imul
jae
lcall
jno
adc
pushf
add
dec
cmpsl
cmp
icebp
jmp
ficoml
push
inc
inc
mov
in
and
push
or
add
and
pushf
lahf
cwtl
movl
bswap
lea
mov
jmp
push
call
subb
add
les
hlt
into
sahf
lcall
icebp
push
xchg
rorl
or
dec
push
pop
mov
dec
mov
sbbl
xlat
rorb
lods
adc
and
enter
push
cmp
push
sahf
das
addl
mov
mov
mov
out
dec
cmp
in
out
jmp
int3
dec
ret
mov
in
stc
fs
loopne
or
fs
jne
pushf
jmp
movl
pushf
mov
mov
pusha
pushl
pushl
ret
sbb
cltd
jno
mov
dec
es
mov
push
xchg
icebp
mov
sar
dec
mov
insb
dec
mov
lcall
inc
outsb
mov
in
aad
push
xor
ds
inc
pushf
sbb
js
mov
sub
inc
jecxz
jl
in
into
adc
imul
sti
dec
sub
daa
sbb
movsl
std
lods
mov
pop
push
out
jnp
shr
pop
lcall
ret
shlb
mov
and
cli
outsb
addr16
call
push
jecxz
enter
repnz
mov
pushl
popf
pushl
lea
jmp
pushl
popl
mov
pushl
pushl
pushl
pushl
ret
lea
jne
movzbw
setbe
pusha
mov
pushf
pusha
pushf
movb
lea
jmp
pushl
call
push
call
fwait
movb
mov
aam
or
enter
and
push
clc
push
mov
icebp
push
sub
pop
mov
int3
dec
lahf
mov
inc
inc
mov
sub
movsl
and
pop
cwtl
jno
push
xor
vpmacswd
movsb
xchg
out
in
jo
jno
cltd
je
enter
popf
add
daa
sbb
jnp
adc
push
out
mov
loopne
pusha
xor
mov
insl
push
test
out
mov
les
out
into
test
test
loop
inc
pop
es
insl
push
in
xlat
push
mov
add
out
int
and
shlb
mov
xchg
loopne
or
xor
xchg
adc
imul
and
jp
lahf
sbbl
jb
notb
aaa
dec
or
sbb
push
fildll
aam
dec
leave
lret
cmp
dec
into
mov
outsb
mov
sahf
add
jb
sub
shll
dec
dec
stos
and
outsl
test
push
clc
push
js
loop
lods
icebp
push
mov
iret
mov
out
or
leave
push
mov
fs
out
push
add
fstpt
lcall
xchg
imul
xchg
mov
cld
or
xor
pop
pop
icebp
loop
pop
repnz
int
cmp
scas
xchg
not
aad
xchg
ljmp
jne
int
mov
push
inc
or
dec
gs
shrb
xor
lea
mov
fs
cmp
stos
cmp
mov
add
ret
push
mov
imul
add
mov
andb
mov
mov
fdivl
popf
nop
daa
inc
inc
ds
pop
mov
jo
test
daa
and
ret
sahf
adc
jns
cli
lock
rcll
testl
loop
movsl
push
inc
out
pop
outsb
mov
add
shr
test
mov
cmp
xor
clc
stc
add
push
pusha
lea
jmp
push
mov
pusha
push
lea
jmp
add
inc
jb
gs
imul
cmpsb
icebp
lcall
push
mov
outsb
rorb
cmpsb
hlt
adc
les
mov
in
mov
insb
inc
popf
push
adc
inc
jne
mov
or
faddl
dec
lods
pushf
xor
adc
mov
std
fidivs
divl
in
cmp
rolb
dec
stos
and
adc
nop
mov
cmp
push
cmpsl
cli
mulb
bound
or
mov
movsb
mov
int
xor
vmovhps
mov
fidivrl
inc
lahf
jle
stc
outsl
dec
mulb
dec
scas
test
mov
xchg
movsl
and
rorl
nop
xlat
in
addr16
ret
ret
xchg
imul
lcall
leave
insb
ret
stos
sub
sti
dec
mov
mov
clc
jmp
and
add
jo
out
jmp
shrb
jbe
pushl
popl
pusha
jmp
testb
mov
daa
push
dec
sub
jno
lcall
push
and
dec
popf
jle
mov
mov
out
jno
cwtl
jbe
xchg
push
push
lock
mov
mov
lcall
or
cmpsb
sbb
out
test
sti
xlat
dec
cmpsb
mov
lea
mov
jmp
push
call
pop
sub
jle
xchg
dec
xor
add
leave
pusha
lea
call
pushf
mov
pusha
pusha
lea
jb
push
pushf
pusha
push
pushl
ret
push
call
sbb
xchg
dec
notb
and
add
mov
je
add
stos
lcall
cli
aam
punpckhwd
popa
push
sub
cmpsl
mov
or
pushf
out
decl
sbb
fsubrs
lea
es
sbb
nop
mov
movsb
jl
loop
dec
popf
jecxz
lods
xor
push
pop
add
mov
gs
icebp
fidivl
mov
mov
inc
dec
mov
cld
pop
pop
push
aam
dec
cmp
cmp
dec
ja
call
insb
call
movsbw
setns
lea
pushf
push
pushf
mov
cwtl
push
movl
bswap
lea
pushf
push
pushl
movl
jmp
repz
push
call
lret
pushf
lea
je
bts
bsf
rol
add
jmp
push
call
jg
mov
mov
jmp
dec
btc
movzbw
mov
cmc
add
cmp
bt
bt
mov
cmp
ror
sub
shr
mov
clc
cmp
pusha
lea
jo
jbe
inc
mov
adc
add
bsr
mov
setnp
or
add
cmp
clc
movl
lea
mov
call
pusha
xchg
movw
jmp
mov
sub
bswap
bts
shrd
mov
stc
cmp
pushf
pusha
lea
ja
or
btr
cmp
add
shld
shr
xadd
mov
dec
not
add
dec
mov
mov
mov
jmp
pusha
movb
push
lea
jne
bsf
xor
adc
movsbl
mov
bt
add
sub
mov
test
bt
test
pushf
test
pushf
call
call
test
dec
mov
mov
push
cmp
es
mov
xchg
stc
loopne
test
ja
and
js
das
or
lea
and
jecxz
or
test
inc
inc
jmp
cmpsl
fnstsw
cld
cwtl
cwtl
lcall
rorb
mov
mov
sub
dec
mov
adc
pop
mov
pop
push
scas
out
nop
cmc
mov
test
out
int3
or
xor
sub
lcall
push
xor
adc
test
aas
push
loope
daa
dec
xchg
aaa
dec
push
call
popf
jecxz
movzwl
pop
ror
mov
movb
cmp
add
pushf
mov
test
clc
stc
clc
test
pushf
call
pusha
movb
call
push
mov
lea
jne
lea
aam
rcr
xor
add
xor
sar
aad
mov
stc
rol
dec
add
sub
mov
stc
jbe
test
jae
pushf
pusha
pusha
lea
je
cmp
sub
pusha
pushl
cmp
pushf
pushf
pushl
lea
ja
stc
bt
stc
push
imul
mov
pusha
cmc
add
push
pushf
mov
movb
lea
jmp
adc
cmpsb
add
into
and
fisubrs
or
lret
pop
cmp
icebp
cmp
movd
out
inc
es
enter
cmpsl
lock
in
jns
xchg
push
lret
in
lcall
sbb
dec
mov
mov
dec
daa
les
pop
sbbb
mov
mov
popf
and
sbb
dec
scas
daa
sbb
repnz
pusha
push
call
movw
mov
mov
pushf
jmp
cmp
call
cmc
inc
test
dec
daa
jnp
mov
or
cmp
mov
ret
pushf
pop
xor
dec
mov
push
test
mov
clc
pop
mov
sub
pushf
adc
and
ja
call
sbb
xchg
or
int
adc
outsb
mov
inc
sub
ror
cmp
dec
and
xchg
fsubs
das
pmullw
bound
inc
cmp
loop
pop
js
bound
mov
enter
fwait
cmp
mov
and
ljmp
pop
add
jge
mov
xor
out
rorb
push
inc
sbb
mov
pop
rorl
mov
insl
inc
dec
inc
push
addr16
das
pop
addr16
add
push
std
inc
xor
pop
mov
mull
push
sub
pop
test
jl
lret
adc
mov
add
jg
mov
push
mov
inc
test
aam
mov
push
cmp
icebp
jmp
mov
lret
dec
pushf
ffree
mov
aam
and
mov
dec
cmp
repnz
aam
scas
inc
ret
int
inc
mov
test
jo
addr16
je
aad
mov
test
jmp
inc
xor
xchg
inc
jl
jp
std
mov
dec
mov
dec
daa
or
int
xor
stos
lea
xor
jl
push
dec
cmpsb
mov
jo
push
xorl
mov
xchg
lahf
in
add
dec
addr16
into
lret
stc
cmc
adc
cmp
sti
dec
xchg
shl
test
decl
or
addl
notl
sub
mov
push
outsl
dec
push
pushf
movb
lea
jne
push
cwtl
mov
movb
push
push
pusha
lea
jmp
mov
call
in
jno
add
or
inc
mov
in
inc
ret
aas
xor
pusha
mov
shr
cwtl
lock
mov
cmpsb
je
inc
and
pop
mov
in
loop
push
jns
and
pusha
aas
pop
xlat
decl
xchg
fists
notl
ss
mov
cltd
or
sahf
push
mov
push
push
push
cwtl
jae
mov
add
jge
popf
jae
cmpsb
mov
sub
jae
sbb
pushw
push
dec
mov
lcall
movsl
pop
lea
jne
or
setno
setg
inc
mov
clc
sar
neg
sub
movsbw
mov
bt
jmp
push
call
jl
or
inc
jmp
mov
jmp
stc
cmc
mov
shl
rcr
mov
test
sub
pushf
repnz
push
mov
pushl
mov
lea
jne
sbb
add
dec
bts
mov
stc
rol
sub
inc
mov
push
sub
mov
call
lea
call
clc
clc
cmp
pushf
lea
jae
jae
jmp
test
pusha
cmc
bt
shr
pushf
pusha
clc
cmpl
mov
lea
je
rol
mov
not
sub
inc
call
pop
jns
test
inc
adc
stos
xchg
push
jnp
stos
lods
loop
std
int
lret
das
stos
cmpsb
test
test
jo
mov
jg
mov
lahf
and
sub
sbb
push
sub
and
jnp
mov
cli
shll
push
lahf
jo
xor
int3
in
inc
pushf
xchg
scas
mov
sub
stc
imul
add
shlb
mov
adc
clc
cwtl
fxam
inc
cmp
mov
and
or
mov
addb
pusha
lea
jb
je
bswap
mov
jmp
clc
jmp
cwtl
ljmp
int
test
arpl
ljmp
mov
add
xchg
out
adc
dec
cmpsl
std
fidivrs
sbb
scas
mov
sbb
subl
jl
in
cmp
shlb
mov
test
mov
mov
insl
cmp
jo
inc
jno
pop
leave
dec
loopne
in
pop
mov
stos
mov
dec
sbb
cld
jl
out
test
jge
mov
lods
mov
and
dec
insl
pop
cld
jmp
cmpsb
cmpl
jl
mov
jle
cmp
inc
jge
fdivrl
jbe
fidivs
mov
mov
lret
and
jl
mov
loop
out
xor
jmp
push
ret
cmp
push
mov
xor
in
mov
addr16
incl
mov
cmp
aaa
cmp
sbb
pop
shll
xchg
push
insb
fisubrs
and
add
inc
pusha
fdivrp
dec
les
jb
aam
pop
insl
sub
push
inc
leave
pop
mov
fdivr
jp
lret
fwait
inc
pop
xlat
leave
dec
sub
cmp
mov
xchg
jnp
cli
idivb
fdivrs
mov
cmp
cmpsb
mov
sub
mov
cmpsl
sti
call
lret
jnp
or
mov
pop
imul
mov
ja
fstps
jp
xor
mov
fldenv
jns
mov
sbb
test
test
and
cmp
stos
cmp
mov
or
das
push
mov
dec
aaa
flds
bound
loope
rorl
push
ret
mov
test
pusha
insl
mov
loopne
cltd
leave
xor
les
sbb
ds
cmc
stc
pushf
shl
call
add
add
btc
xor
lea
clc
push
and
shl
cmc
rcr
mov
shl
bts
call
mov
pushf
mov
movsbw
mov
not
push
mov
pusha
pushl
mov
pushl
ret
pushf
rol
sub
call
bt
shr
mov
call
dec
call
fwait
mov
mov
insb
inc
and
aaa
sbb
in
icebp
xor
int
cld
sub
jo
sub
jecxz
jl
dec
das
into
xor
sub
cwtl
jb
push
cmp
in
into
test
aaa
fdivr
int
leave
cmc
push
nop
into
mov
adc
mov
mov
out
lods
mov
mov
cmp
insl
mov
add
fists
dec
lret
mov
movl
and
movw
lea
ja
stc
call
clc
jmp
pushf
pusha
push
mov
call
mov
movb
call
add
jmp
stc
das
rcl
mov
sbb
bt
mov
jmp
pushf
jmp
mov
call
push
setp
mov
test
dec
pusha
mov
pusha
pushf
movl
sub
cmc
cmc
jmp
jmp
cmc
or
mov
pusha
sub
pushf
cmp
shl
push
mov
pushl
call
cld
pushl
call
call
mov
movsbw
movzbw
movzbw
push
movzbw
call
call
pushf
pushf
popl
jmp
push
call
jmp
mov
pushl
pushl
popl
movb
push
lea
jmp
jmp
push
cbtw
jmp
push
mov
pusha
pushf
jmp
pushf
popl
jmp
stc
pusha
add
jmp
mov
jmp
mov
mov
pushf
mov
pushf
movzbw
mov
pop
call
xor
stc
sub
call
call
pushf
mov
call
call
cmc
pushl
rol
test
neg
call
jmp
mov
call
not
lea
bswap
rcl
ror
bswap
movzbw
sub
and
push
mov
movb
cmc
cmp
sub
pushl
mov
mov
pushf
pusha
lea
jmp
clc
clc
push
mov
jmp
mov
movzbw
xor
stc
mov
jmp
sub
and
mov
and
shr
mov
bt
cmc
pusha
not
call
mov
mov
pushf
pushf
mov
pushl
mov
lea
jmp
pushl
mov
jmp
pusha
pushf
pushf
popl
jmp
daa
call
xchg
movb
lea
push
call
rep
stc
call
call
shl
mov
ror
not
stc
mov
neg
btr
not
bsf
add
sets
xchg
mov
shr
and
movzbl
or
add
inc
bsf
inc
pushf
cmp
xor
sbb
not
dec
add
dec
add
movzbl
jmp
mov
movb
mov
jmp
lea
js
pushf
mov
call
call
cmc
and
call
mov
pushf
jmp
bswap
bsf
inc
shr
and
bsr
xor
not
add
rol
test
btc
call
mov
cmp
cmc
add
mov
pusha
mov
pushf
pushf
pushl
lea
jmp
mov
not
jmp
call
mov
pusha
movzbl
movzbl
mov
push
movb
inc
pushf
movl
jmp
movb
jmp
push
mov
mov
mov
movb
push
pushf
lea
jmp
movzbw
shld
mov
bt
call
pusha
push
push
pushf
popl
mov
mov
call
jmp
pusha
pushf
movb
pushl
popl
push
push
pushl
push
lea
jmp
pushf
pushf
mov
pushl
popl
pushf
movl
push
lea
jmp
mov
push
call
pusha
pushf
mov
call
lahf
bts
sar
shr
mov
pusha
clc
bt
shl
mov
jmp
mov
call
movw
jmp
push
pushf
call
pushf
mov
pusha
mov
movb
mov
pushf
pushl
mov
pushf
mov
pushl
movb
mov
pushl
popl
push
push
pushl
mov
lea
jmp
jmp
mov
pushf
popl
movw
pushf
mov
pushl
popl
pushl
pushl
lea
jmp
shl
sub
movzbl
push
jmp
pushf
pushl
popl
pushl
pusha
push
lea
jmp
mov
std
ror
push
pushl
mov
cld
jmp
mov
call
clc
add
pushf
movw
mov
movb
call
mov
pushf
mov
pushl
popl
pushf
push
movb
push
lea
jmp
push
mov
jmp
jmp
pushf
jmp
movsbw
not
mov
setle
movsbw
mov
mov
push
lea
jmp
mov
jmp
mov
jmp
pushf
movb
mov
call
call
mov
call
mov
pushf
popl
jmp
call
add
push
pushf
mov
pushf
pushl
ret
mov
pushl
pushl
popl
pushf
pushf
push
lea
jmp
mov
call
mov
push
pushf
popl
pushf
jmp
pushl
popl
push
mov
lea
jmp
add
mov
jmp
push
pusha
mov
jmp
pusha
pushf
popl
pushl
pushf
mov
pushf
push
call
pusha
shld
pushf
call
mov
mov
pushf
call
push
mov
bswap
movsbw
lea
not
pushf
mov
movsbw
std
bswap
push
not
bswap
mov
not
std
lea
pusha
pushf
pushf
pushf
mov
not
movzbw
mov
mov
std
call
mov
pushl
popl
mov
movb
lea
jmp
pushf
popl
call
pusha
jmp
jmp
bt
pusha
mov
movb
push
clc
sub
movb
shr
pushf
pushf
mov
pushl
pushf
popl
call
mov
jmp
mov
clc
stc
bt
add
jmp
mov
mov
jmp
setnp
pushf
pushl
pop
mov
jmp
call
pop
bswap
xor
pop
cmc
sbb
or
cwtl
pop
rol
std
dec
call
mov
jmp
jle
cmp
pushf
shl
stc
bt
call
btr
mov
rcr
adc
test
mov
push
call
pushf
mov
pushl
mov
movb
push
pushf
pushf
pushf
popl
call
mov
push
movb
pusha
call
jmp
mov
pushf
pushl
popl
pushf
pushl
mov
lea
jmp
pushf
mov
call
jmp
pushf
pushl
pushf
mov
pusha
call
pusha
pushl
mov
call
jmp
call
mov
pusha
push
mov
mov
lea
jmp
bt
xor
jmp
movb
movb
pushf
popl
call
test
pusha
add
mov
lea
jmp
lea
jno
pushf
pushf
pushl
popl
pusha
pushf
movb
lea
jmp
mov
mov
pushl
mov
push
pushl
popl
pushf
push
movl
pushf
lea
jmp
cmc
sub
pushl
call
jmp
jmp
aas
mov
lea
mov
not
and
jmp
pushf
pushl
popl
movb
pusha
mov
lea
jmp
mov
pushf
call
xor
stc
call
jmp
push
call
pusha
pushf
pushf
popl
push
pushf
push
pushl
popl
pushf
push
movb
pushf
lea
jmp
dec
mov
and
bts
shld
mov
pusha
cmc
push
pusha
add
jmp
cpuid
cmp
pushf
bt
stc
sub
movb
jmp
pushf
shr
mov
mov
pushf
mov
jmp
pusha
mov
pushf
mov
push
mov
lea
jnp
push
pushf
push
mov
movb
lea
jge
pushl
pusha
pushl
pushl
lea
jmp
pushl
jmp
mov
call
cmp
movb
lea
ja
call
call
pushf
popl
mov
pusha
mov
pushf
pushl
popl
pushf
lea
jmp
pusha
jmp
jmp
movsbw
setl
push
lahf
jmp
call
mov
pushf
jmp
jmp
mov
pusha
pusha
pushl
popl
movl
mov
pushf
pushl
lea
jmp
mov
mov
mov
pushl
push
pushf
call
call
pushf
mov
pushf
movb
pushf
jmp
jmp
inc
bsf
jmp
aaa
mov
sar
ror
mov
bt
bt
clc
call
shl
pushf
mov
mov
call
not
mov
setns
pusha
mov
cwtl
pushl
lahf
pushl
mov
jmp
lea
jne
pusha
mov
pushf
mov
mov
lea
jmp
cmp
clc
add
push
mov
pusha
push
pushl
lea
jmp
push
jmp
pushf
jmp
call
call
call
mov
mov
cmc
xor
pusha
push
call
pushf
pushf
mov
mov
jmp
mov
movb
push
mov
lea
jle
pushf
call
jmp
push
mov
pushf
movw
call
mov
call
jmp
mov
jmp
not
shl
movzbw
jmp
pusha
call
mov
call
pusha
mov
pushf
mov
push
mov
call
cmc
shr
push
call
mov
pusha
pushf
pushf
movl
lea
jmp
shrd
setg
add
not
mov
stc
test
sub
jp
pusha
add
lea
ja
pushf
pushl
pusha
pushf
popl
call
pushf
jmp
mov
pushf
mov
lea
js
push
pusha
movb
mov
jmp
pusha
call
pushf
mov
add
pushf
pushf
cmc
clc
mov
clc
jmp
add
push
cmp
movzbl
stc
setg
push
sub
call
jmp
push
pushf
lea
jns
push
mov
pushf
pusha
mov
call
pusha
pusha
pushf
mov
push
pushf
popl
lea
jb
popl
push
pushl
pusha
pushl
lea
jmp
cbtw
push
push
call
pusha
jmp
test
cmp
not
stc
push
cmp
add
bt
cmp
cwtl
stc
test
jmp
jmp
mov
pusha
mov
push
lea
jg
push
mov
jmp
lea
jne
pusha
mov
pusha
lea
jmp
jmp
mov
push
test
clc
movb
add
pusha
mov
movb
push
lea
jmp
mov
pushl
popl
mov
pushf
mov
pushf
lea
jmp
jmp
sub
mov
push
jmp
jmp
mov
push
mov
mov
mov
movb
pushf
pusha
jmp
bt
cmp
pushf
pusha
pushl
popl
mov
add
mov
test
pushl
popf
movw
mov
push
lea
jmp
pushf
pushl
popl
pusha
pushf
push
lea
jmp
push
mov
pushf
call
call
pushf
mov
mov
call
jmp
pushl
popl
mov
movw
pushl
lea
jmp
push
mov
push
mov
call
inc
test
cmc
not
call
bswap
push
not
xchg
not
not
movzbl
pushf
popl
jmp
pushf
popl
movw
pushl
popl
pushf
mov
lea
jmp
pushf
call
pushf
inc
bt
mov
test
jmp
pusha
pushl
popl
pushl
pushf
mov
mov
lea
jmp
mov
jmp
call
mov
push
mov
jmp
push
jmp
pushf
mov
call
call
pushl
popl
mov
mov
pushf
lea
jmp
lea
jne
push
jmp
add
bt
pushf
add
bt
jmp
mov
pushf
jmp
mov
pusha
push
lea
jmp
jmp
mov
pusha
movb
lea
jmp
pushf
mov
mov
pusha
mov
push
pushf
mov
call
bt
shr
bt
cmp
pushf
stc
or
call
mov
push
mov
push
push
call
not
mov
jmp
clc
push
clc
add
push
pusha
xchg
btc
xchg
test
bts
btr
pushl
popl
lea
inc
shl
sub
mov
push
setns
mov
shrd
btc
mov
sbb
bswap
neg
not
bt
sbb
sub
dec
btc
xchg
bt
mov
clc
sub
lea
jmp
call
pushf
popl
call
call
pushf
jmp
stc
cbtw
mov
bt
cmc
stc
push
sub
call
pushf
popl
pushf
jmp
call
pushl
popl
movb
mov
mov
lea
jmp
pushf
pusha
xchg
mov
lea
mov
jmp
jmp
dec
rol
movzbl
dec
add
inc
not
seto
call
neg
clc
clc
xor
cmp
pushl
sub
mov
pusha
jmp
call
lea
jmp
divl
pushf
movw
jmp
cmp
pusha
rcl
stc
mov
sbb
sbb
call
mov
pushf
pushf
mov
jmp
jmp
mov
pusha
pusha
movb
lea
jmp
call
mov
pushf
popl
pusha
pushl
popl
push
pushf
push
pushl
lea
jmp
pusha
mov
pushf
pushf
push
lea
jmp
jmp
push
pushf
cwtl
bt
cmp
call
mov
pushf
mov
call
mov
pushf
pushf
mov
pushf
popl
pushf
movw
pushf
mov
jmp
bt
add
test
cwtl
stc
sub
pushl
movb
mov
pushf
lea
jmp
pushf
popl
call
pushl
popl
movb
push
mov
push
lea
jmp
pushf
call
seta
mov
pusha
call
call
pushl
mov
jmp
mov
movb
mov
pushl
popl
movl
movw
mov
movw
lea
jmp
movw
pushf
popl
pusha
call
movzbl
bt
pusha
pushf
jmp
sub
stc
bt
sub
pushf
call
clc
sub
test
pushl
cmp
jmp
pushf
pushf
mov
movw
lea
jmp
mov
mov
pushf
mov
movl
pushl
popl
push
push
pushf
movw
lea
jmp
aad
neg
lahf
mov
jmp
call
pushl
pushl
mov
jmp
pushl
popl
mov
pushf
movw
lea
jmp
movl
mov
pushl
mov
call
jmp
jmp
jmp
push
movb
mov
push
mov
lea
jmp
pushf
call
stc
clc
cmp
add
call
mov
jmp
movb
mov
movb
call
pushf
mov
pushf
pusha
mov
lea
jmp
jmp
push
jmp
add
add
pushf
call
jmp
pusha
call
pushl
popl
movb
mov
lea
jmp
mov
pusha
lea
jmp
jmp
das
mov
jmp
pusha
mov
pusha
lea
jno
pusha
mov
mov
pusha
call
push
mov
movl
lea
jmp
jmp
pushf
call
movzbw
bt
mov
xor
or
shl
add
pusha
not
mov
pushf
lea
jnp
pushf
mov
mov
pushf
lea
jmp
push
add
stc
neg
stc
rol
stc
stc
neg
test
stc
pusha
add
mov
call
pushf
popl
call
mov
push
movb
pushl
mov
pushf
movw
movl
push
mov
jmp
pushf
mov
call
jmp
xchg
push
inc
pusha
cmc
bt
not
cmc
cmc
stc
add
test
call
mov
pusha
mov
jmp
pushf
mov
inc
jmp
pusha
sub
mov
pushf
clc
add
jmp
pushf
push
pushf
popl
pushf
mov
mov
mov
pusha
mov
mov
pushf
call
mov
mov
jmp
push
pushf
pusha
mov
movb
pusha
pushf
pushf
popl
jmp
pushf
mov
movb
movb
push
lea
jmp
movl
mov
pusha
mov
pushf
jmp
inc
pushf
decl
push
call
lea
jns
push
push
pushl
pushf
pushl
pushl
popl
pusha
movb
push
lea
jmp
mov
pusha
jmp
mov
push
jmp
call
mov
pushf
pushf
pushf
popl
push
pushf
call
ficoml
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
lcall
sub
inc
add
lcall
jl
inc
add
mov
add
pushf
inc
add
inc
add
inc
add
mov
add
inc
add
sahf
inc
add
cwtl
inc
add
inc
add
add
cwtl
inc
add
lods
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
mov
add
scas
inc
add
mov
add
mov
inc
add
mov
add
add
inc
add
inc
add
mov
add
nop
inc
add
mov
inc
add
mov
add
inc
add
mov
add
popf
inc
add
mov
add
mov
add
xchg
inc
add
mov
add
inc
add
lods
inc
add
mov
inc
add
mov
add
xchg
inc
add
fwait
inc
add
mov
inc
add
inc
add
inc
add
inc
add
xchg
inc
add
lods
inc
add
inc
add
fwait
inc
add
mov
add
inc
add
inc
add
mov
inc
add
lods
inc
add
lcall
imul
add
mov
inc
add
cwtl
inc
add
mov
add
mov
inc
add
cwtl
inc
add
mov
inc
add
lods
inc
add
fwait
inc
add
lods
inc
add
xchg
inc
add
mov
add
inc
add
xchg
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
xchg
inc
add
popf
inc
add
inc
add
inc
add
xchg
inc
add
add
stos
inc
add
mov
add
fwait
inc
add
mov
add
nop
inc
add
inc
add
xchg
inc
add
inc
add
nop
inc
add
fwait
inc
add
fwait
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
inc
add
stos
inc
add
lcall
bound
inc
add
fwait
inc
add
lods
inc
add
mov
add
xchg
inc
add
inc
add
lods
inc
add
mov
inc
add
sahf
inc
add
inc
add
lods
inc
add
inc
add
inc
add
inc
add
nop
inc
add
lcall
cmpsl
mov
inc
add
add
mov
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
add
fwait
inc
add
xchg
inc
add
movsb
inc
add
mov
add
inc
add
add
mov
inc
add
popf
inc
add
lods
inc
add
inc
add
nop
inc
add
mov
add
xchg
inc
add
xchg
inc
add
popf
inc
add
xchg
inc
add
inc
add
lods
inc
add
movsl
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
popf
inc
add
mov
add
xchg
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
push
pusha
pushf
mov
pusha
call
pushf
pushf
mov
jmp
jmp
rcl
not
cmc
sub
btc
not
setp
bts
clc
ror
sbb
shrd
and
shr
or
mov
pushf
call
sub
cmc
shl
lea
jo
pushf
mov
mov
jmp
call
test
jmp
not
mov
btc
ror
mov
pushf
push
add
pusha
jmp
aam
adc
lahf
pusha
lea
clc
jmp
inc
pushf
decl
mov
jmp
pusha
jmp
sub
movw
mov
movl
pusha
mov
lea
jmp
movb
sub
pushf
mov
push
movw
pushf
lea
jmp
mov
shl
pushl
popf
pusha
jmp
pusha
pushl
popl
pushf
pushf
lea
jmp
jmp
add
pushl
neg
push
stc
bt
cmc
rol
cmp
neg
cmp
clc
jmp
sub
push
jmp
shl
shrd
movsbw
mov
stc
pushf
add
jmp
pushf
mov
jmp
jmp
mov
pushf
movb
pushf
mov
pushl
jmp
call
call
mov
mov
mov
mov
pusha
pushf
pushf
pushl
popl
pushf
lea
jmp
cmp
lea
aam
mov
rcl
rcr
inc
mov
cmp
add
call
mov
jne
push
push
mov
call
call
push
mov
pushf
pushl
popl
push
lea
jmp
lea
setbe
and
add
lea
sub
neg
xor
xadd
dec
lea
pusha
and
sbb
sbb
sub
sub
jmp
shrd
pusha
jmp
mov
movb
movl
push
lea
jmp
pusha
push
mov
jmp
add
jmp
pushl
popl
push
mov
pushf
push
lea
jmp
mov
pusha
lea
jmp
mov
pushf
add
push
mov
mov
mov
pusha
lea
jmp
push
call
pushf
pushf
pushf
popl
call
pushf
shr
bts
bswap
rdtsc
bt
stc
push
stc
sub
jmp
bswap
pushl
mov
jmp
mov
pushf
call
jb
movzbl
pushf
add
pushl
pusha
neg
push
jmp
mov
mov
mov
push
mov
mov
mov
pushf
pushl
popl
pushf
mov
pushf
lea
jmp
mov
call
bsf
setno
bsf
mov
jmp
mov
mov
call
pushf
popl
jmp
bt
pushl
sub
call
movb
pushf
popl
jmp
jmp
mov
pushf
mov
jmp
call
mov
pusha
pushf
jmp
pushl
popl
pusha
lea
jmp
call
call
pushf
popl
push
push
pushf
push
pushl
popl
pushf
movl
lea
jmp
mov
call
pusha
call
jmp
push
movb
mov
pushf
pushf
movb
lea
jmp
btc
jmp
jmp
call
mov
call
mov
movb
pushl
popl
mov
mov
movb
movw
lea
jmp
mov
movw
mov
jmp
call
push
pushf
rcr
shr
mov
test
pusha
lea
jae
clc
sub
pushf
cmc
add
jmp
movb
call
daa
mov
pushf
clc
movb
pushl
sub
pushf
call
bt
pushf
call
push
movb
mov
mov
movb
push
push
pushf
lea
jmp
mov
mov
call
jmp
jmp
push
mov
pushf
call
lea
jle
pusha
mov
jmp
jmp
shr
pop
bt
rcl
pop
jmp
push
movb
mov
push
call
push
jmp
btc
xchg
stc
pushf
mov
inc
bswap
clc
rcr
mov
pushl
add
pusha
mov
pushl
push
lea
jmp
mov
pushf
pushf
popl
lea
jae
pushf
movw
pushl
popl
pushf
pusha
lea
jmp
sub
pushf
xor
cmc
bt
add
cmc
bt
bt
push
sub
jmp
call
call
call
mov
mov
movb
movb
mov
pusha
pushf
mov
push
mov
lea
js
pusha
mov
pushf
call
movb
pushl
popl
pushf
mov
pushl
lea
jmp
push
mov
jmp
and
mov
pusha
cmc
add
call
pushf
call
mov
mov
call
pushf
jmp
lea
jnp
pushf
mov
pusha
mov
pushf
call
pushl
pushf
mov
call
jmp
sub
jmp
push
mov
call
mov
mov
lea
jmp
call
mov
mov
pushf
mov
mov
jmp
jmp
pushf
movb
pushl
popl
mov
lea
jmp
bswap
push
setl
mov
movw
movl
pusha
push
mov
movb
movw
mov
pushf
movb
pushf
pushl
lea
jmp
jmp
jmp
push
mov
pusha
lea
jmp
call
mov
pushf
mov
jmp
pushl
mov
jmp
call
push
shl
movb
shr
movb
or
stc
movb
call
movb
mov
movb
call
mov
movw
lea
jo
push
pusha
pushf
popl
mov
jmp
mov
jmp
push
push
mov
push
call
call
bt
test
notl
push
mov
bt
bt
sub
pusha
and
jmp
shl
sub
jmp
mov
mov
jmp
pushf
popl
pusha
call
shl
test
mov
adc
add
mov
pushf
not
jmp
mov
inc
jmp
call
call
push
pushf
popl
jmp
call
pushf
movl
pusha
mov
movw
mov
push
jmp
pushf
sub
push
pusha
pushf
mov
pushf
movw
push
lea
jmp
cmc
pushl
sub
movb
lea
jns
pushf
mov
movl
pushf
pushf
push
lea
jmp
mov
pushl
popl
push
pushf
lea
jmp
mov
jmp
add
not
bt
pushf
neg
push
xor
sub
shl
sub
movsbw
add
lea
ror
bsf
shl
mov
pusha
cmc
cmp
add
movb
pushf
mov
pushf
pushl
movb
lea
jmp
mov
mov
jmp
jmp
mov
movw
mov
jmp
test
sub
rcr
or
mov
pusha
sbb
push
add
push
jmp
call
mov
jmp
inc
jmp
movw
mov
call
pushf
mov
mov
pushf
movb
pushl
lea
jmp
pushf
mov
mov
jmp
mov
jmp
jl
pushf
mov
jmp
pushl
popf
mov
lea
jmp
setae
movzbl
pushf
sub
pushf
cmp
cmc
pushf
add
pushf
call
push
call
pushl
popl
push
lea
jmp
push
mov
movb
movl
pushf
lea
jmp
call
movb
inc
test
jmp
call
mov
call
push
mov
call
pushl
popl
push
push
mov
pushf
lea
jmp
mov
mov
jmp
bt
mov
bt
call
mov
jmp
push
mov
push
call
clc
clc
sub
pusha
clc
call
pushf
popl
call
inc
mov
clc
cwtl
call
bsr
aaa
movzww
cmc
clc
pushf
add
jmp
bswap
mov
setae
push
mov
bswap
pop
pop
lea
mov
pushf
mov
pushf
pushl
ret
call
call
mov
cmp
test
clc
add
pushf
push
pushl
pusha
lea
jmp
stc
not
stc
pusha
stc
and
pushf
mov
call
pushl
popl
push
lea
jmp
call
mov
pushf
popl
call
inc
dec
shrd
mov
shld
not
mov
clc
cmc
add
pushf
mov
movb
movb
pushl
pushl
lea
jmp
cmp
test
rcl
shld
mov
pushf
clc
movsbw
bsf
add
setbe
stc
bswap
xor
add
clc
sub
sub
mov
jmp
setns
sub
mov
cmp
stc
jl
pushf
add
pushf
neg
call
pushl
popl
pushf
mov
mov
pushl
lea
jmp
mov
pushf
popl
jmp
shrd
bts
aas
mov
sub
call
stc
push
shld
sub
jp
mov
cmp
add
jmp
mov
not
call
mov
jmp
pushl
popl
mov
push
pushf
push
lea
jmp
test
pushf
add
push
add
test
stc
call
jmp
call
mov
pushf
pusha
jmp
call
pushf
pushf
pushf
popl
push
pushl
popl
movb
pushf
pushf
pushf
lea
jmp
pushl
popl
push
lea
jmp
pusha
not
cmp
pushf
stc
sub
jmp
stc
rol
pusha
neg
bt
bt
clc
add
call
sub
shrd
movzbw
clc
mov
btr
btc
mov
pushf
call
pushl
mov
pushl
popl
pushl
mov
pushf
lea
jmp
mov
pusha
mov
jmp
pusha
pushf
popl
call
pushl
mov
call
mov
pusha
jmp
pushf
jmp
pusha
mov
mov
pushf
pushl
pushf
lea
jmp
movb
mov
push
jmp
jmp
push
push
mov
pusha
mov
lea
je
pusha
pushl
pushl
mov
call
