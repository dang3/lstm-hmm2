pop
jb
dec
fadd
sbb
cmp
xor
add
xor
inc
pop
xor
pop
pop
xor
hlt
ja
nop
hlt
pop
xor
hlt
pop
pop
jg
pop
jge
hlt
pop
incb
jnp
lahf
and
mov
sbb
pusha
sarl
cmp
rcrb
fld
adc
scas
pop
jns
pop
fildl
popa
xchg
mov
cmp
pop
out
test
jmp
dec
push
es
movsb
loope
jecxz
lods
rcrl
cltd
hlt
aam
mov
fcoms
xor
mov
xchg
inc
sbb
cmpb
hlt
pop
push
cld
lcall
mov
xchg
hlt
pushf
es
in
xchg
std
adc
and
clc
aas
fidivl
flds
aas
bound
addb
in
adc
jp
xor
jne
mov
push
in
xchg
mov
int3
push
jno
lds
mov
xchg
hlt
pop
fists
jns
stos
or
lods
into
mov
xor
ficompl
add
push
imul
push
xchg
xchg
cmpsl
imul
pusha
xchg
xchg
icebp
in
sbb
push
jno
mov
pop
aaa
xchg
cmpsl
xchg
lahf
into
pop
pushf
dec
push
fdivs
pop
push
mov
xchg
lahf
adc
adc
mov
push
aaa
jae
ljmp
push
cld
mov
pop
pop
xor
hlt
mov
repz
test
fbstp
xchg
jno
repz
hlt
cwtl
test
fistps
xchg
add
xor
sbb
ds
ja
into
dec
push
push
push
xchg
cs
scas
inc
push
mov
mov
xchg
inc
ret
mov
lea
inc
popa
std
mov
test
insl
fstpl
es
loopne
mov
xor
and
hlt
outsb
aad
jge
adc
loope
xchg
or
sub
jns
mov
jge
fbstp
sbb
repz
hlt
outsb
xlat
sbb
repnz
hlt
xchg
cs
fsubrl
xchg
popf
jge
sbb
loope
xchg
jnp
aaa
xor
push
jne
nop
add
inc
popa
jl
inc
outsl
dec
popa
cmp
dec
jle
add
std
xlat
add
dec
je
pushf
loope
add
push
xlat
add
ret
arpl
fisubl
xchg
sub
push
rcrl
mov
push
adc
push
cltd
sub
addb
enter
out
lret
add
js
cmp
ficomps
ss
add
mov
and
add
jecxz
scas
loopne
in
out
xchg
push
xlat
add
sarb
adc
mov
push
xlat
mov
fs
mov
push
repz
div
movsl
addb
addr16
jge
lds
and
push
add
xor
jb
inc
jo
test
pop
iret
push
sub
pop
xchg
iret
mov
push
pop
and
xchg
das
add
loopne
add
jno
lcall
xchg
test
jmp
mov
ret
out
adc
add
sti
add
ret
out
lock
xchg
push
or
xchg
cmpsb
aad
mov
fcmovbe
add
fcompl
sub
push
or
mov
sub
mov
mov
ret
sbb
pop
js
sbb
cwtl
adc
push
nop
fidivl
shlb
add
test
add
push
add
push
xlat
push
jg
aad
or
mov
icebp
fsubl
push
cmpl
add
adc
sub
add
push
push
inc
mov
ret
mov
push
xlat
add
fldl
pop
in
xor
xchg
sbb
sbb
push
stos
sub
loop
cmp
dec
pop
pop
cmc
pop
inc
test
sbb
in
mov
mov
scas
sbb
in
out
mov
into
adc
pop
js
pusha
pop
js
cmp
ficomps
ss
add
enter
xchg
cmp
rol
out
cmp
lahf
fwait
mov
jmp
push
xlat
add
xchg
xlat
cmp
push
pop
push
xchg
cmp
add
in
xchg
sti
stos
ffree
out
pusha
inc
shl
arpl
out
pop
dec
les
sub
loop
mov
mov
inc
pushf
out
mov
pmaxsw
inc
pushf
out
push
xchg
mov
ret
sub
xchg
aad
pushf
out
pop
xchg
call
movsb
ret
mov
faddp
xchg
xlat
enter
pop
fldt
mov
sbb
outsl
out
inc
pushf
pop
pop
fistps
sti
popa
faddp
out
out
sbbb
pop
add
fadd
add
and
ss
or
out
sub
push
fpatan
mov
mov
ret
mov
xchg
fisubrl
pop
push
xlat
dec
sbb
cmp
mov
ds
push
push
and
cmpsb
es
adc
sti
push
pop
pop
xchg
push
xor
pop
sahf
fisttps
aam
xchg
aam
roll
adc
mov
pop
push
test
sub
lahf
jo
sar
mov
sbb
push
ds
mov
mov
ret
ficompl
pushf
push
xlat
loopne
fimull
pushf
push
xlat
add
pop
push
nop
pop
test
or
jnp
sbb
shr
or
push
je
cmp
faddp
out
pop
mov
imul
pop
test
add
pop
xchg
rcr
dec
dec
loop
int3
dec
and
inc
pop
addl
pop
aad
inc
faddp
out
or
shrb
pop
ds
push
push
and
jmp
insb
jne
cltd
aas
inc
xlat
push
push
shrb
pushf
push
xlat
add
pop
push
xchg
push
mov
adcb
pop
sahf
fildl
mov
sarb
pushf
and
or
out
loop
pushf
push
lret
sbb
push
push
mov
pop
mov
cmpsl
push
ficompl
pushf
push
xlat
loopne
fisubl
pushf
push
xlat
add
pop
dec
cwtl
cmp
sbb
or
jnp
push
add
add
out
mov
push
push
decb
test
das
pushf
push
xlat
mov
lcall
es
nop
fcoml
add
pop
dec
dec
test
fsubl
add
aaa
push
jns
fmull
mov
cmp
and
add
jecxz
push
dec
pop
ss
sub
cld
dec
push
pop
add
fimull
sub
nop
fisttps
jl
xlat
add
out
ficoms
imul
mov
test
aad
xchg
fs
add
dec
add
in
push
rorl
or
and
and
xchg
imul
push
test
jle
adc
mov
int
add
sub
cmp
subb
jb
cld
or
push
outsl
add
fsubr
jne
pop
cltd
cmp
popa
xchg
ja
rol
lods
mov
mov
fwait
pop
cmc
adc
arpl
lods
fs
mov
xor
hlt
push
add
lahf
fadds
sahf
into
lods
bound
lret
dec
mov
ret
loopne
dec
pop
jae
fiadds
xchg
inc
aam
mov
sub
xchg
in
sub
xor
fildll
shrl
out
aam
ret
or
std
fwait
cmp
pop
xchg
aam
mov
add
arpl
cmp
addr16
test
iret
jle
mov
add
cmc
jae
dec
inc
push
pusha
shll
out
ret
push
adcb
xor
dec
xor
pusha
ja
mov
xchg
push
adc
sbb
xchg
xchg
mov
adc
xchg
pop
xor
lds
lcall
rcrl
mov
pop
add
xor
dec
bound
pop
scas
jns
mov
sbb
mov
aad
in
loopne
test
fcomps
lods
fwait
lahf
or
and
jg
mov
push
mov
ja
inc
sahf
or
notl
xchg
sti
cmp
pop
jle
pop
add
arpl
or
xchg
pop
xchg
mov
pop
shll
out
aas
push
mov
dec
iret
mov
andl
insl
or
xchg
out
push
outsb
ret
inc
push
nop
mov
out
out
mov
adc
test
cmp
push
dec
aad
inc
shlb
fwait
shrl
enter
jge
and
or
dec
add
cmp
push
inc
in
insb
mov
or
pushf
pop
jb
outsl
lods
out
lret
dec
aam
mov
pop
adc
xchg
repz
pinsrw
jnp
add
xlat
lcall
cmp
or
rcl
xor
sbb
sub
pop
dec
push
popf
fsubs
fisttpll
cmp
adc
mov
cwtl
xchg
out
in
add
adcl
cs
cmp
mov
clc
and
xchg
or
push
push
pop
fst
fcoms
pop
sti
mov
xor
fwait
mov
inc
add
xchg
repz
mov
add
enter
lods
stos
ret
pop
push
pop
dec
fnstcw
push
loopne
or
addl
jo
cmpsl
mov
push
lods
repz
dec
aaa
mov
les
mov
mov
xor
test
in
enter
pusha
sub
movsb
xlat
cmp
popa
adc
xchg
mov
xor
mov
mov
in
rcl
dec
pusha
lret
les
dec
std
sbb
xor
arpl
lret
add
fs
xchg
cltd
inc
sbb
mov
jne
lahf
leave
sbb
jno
jl
adc
sub
inc
pop
xchg
pop
jecxz
mov
sbb
mov
ficomps
mov
sbb
movsl
imul
repnz
push
sarl
cld
xchg
push
ja
push
mov
sub
nop
sbb
cwtl
pop
push
out
sbbb
mov
and
sbb
insb
inc
stos
out
or
ret
repz
iret
stc
dec
add
mov
iret
mov
popf
in
data16
outsb
cmp
in
mov
dec
in
scas
addr16
cmpsl
xor
add
out
sub
fistl
jmp
outsl
test
pop
push
xchg
or
jle
imul
pop
or
pop
pshufw
pop
lcall
xor
xor
mov
mull
jp
xor
repz
aaa
pop
testl
pusha
gs
fnsetpm(287
xchg
sti
xor
movsl
inc
jbe
xchg
cmp
lods
add
fadds
in
cmp
pop
push
jb
jl
pop
cld
push
jp
fistl
jb
push
inc
mov
jmp
aam
cwtl
xchg
mov
aaa
sete
into
fwait
push
lock
mov
pop
xor
enter
mov
mov
or
xchg
rcr
sbb
decb
in
push
xchg
fnsave
in
into
stos
push
bound
and
fwait
jmp
out
sbb
jge
fdivl
jb
push
ret
inc
sti
and
and
dec
pop
mov
xor
enter
sti
movsl
shrb
xchg
xchg
in
lret
aas
sub
push
in
sub
int3
and
stos
mov
xchg
in
movsb
xor
and
push
dec
xchg
fnstsw
fdivrl
mov
out
adc
cmp
mov
insb
push
mov
mov
fisubs
shrl
cwtl
sahf
sahf
sbb
movsl
clc
jae
subl
cmp
lret
sbb
push
not
add
sbb
cmp
mov
fmul
dec
mov
push
stos
ret
jl
mov
out
push
fwait
jo
mov
mov
mov
cld
or
cmp
mov
mov
lret
jo
push
in
cmpsl
xchg
xlat
nop
xchg
addr16
adc
lock
sub
dec
nop
shld
sbb
xlat
repz
leave
daa
popf
mov
ja
movsb
push
test
sarb
imul
aad
ja
and
inc
cltd
sbb
jmp
mov
inc
loopne
loope
jns
je
fdivs
lahf
sbbb
push
out
shlb
stos
mov
mov
and
xchg
shrb
fsubrp
sbb
xlat
adc
and
push
dec
test
add
mov
xchg
test
xchg
sti
dec
pop
sbb
daa
outsl
loopne
pop
jae
std
lret
adc
or
pop
push
cltd
xlat
divl
pop
loop
add
rorb
dec
shlb
imulb
push
fldenv
pop
jbe
cmpsl
xor
pop
test
xlat
roll
test
outsl
inc
sti
popf
stc
mov
fdivr
repnz
leave
jl
sub
push
jno
xor
aam
out
mov
push
jl
fsubr
xlat
fnstenv
xlat
mov
je
lret
sbb
jmp
aad
jge
nop
test
xor
test
ret
add
lods
fwait
aaa
add
xor
jne
icebp
scas
add
xor
lods
jge
out
lret
push
movsl
inc
enter
into
pop
test
data16
adc
cwtl
ret
clc
and
xchg
sahf
mov
ja
mov
pop
in
xor
sti
stos
dec
cltd
arpl
ficomps
lret
sbb
add
xor
out
and
sti
pop
bound
inc
dec
add
out
imulb
xchg
jae
in
sbb
xchg
insl
push
iret
ret
in
in
mov
push
push
add
nop
aam
lds
and
bnd
jb
pushf
add
cmp
dec
outsl
mov
pop
pushf
mov
fwait
lahf
outsl
pop
mov
xchg
push
mov
cli
mov
pop
lahf
stc
shlb
repnz
filds
mov
stos
nop
fmull
xor
sbb
lret
push
loope
add
mov
scas
arpl
fcomi
push
mov
xlat
push
jno
or
fnstsw
lahf
jmp
pop
sbb
in
test
and
cmp
mov
xchg
sarl
aad
std
xchg
inc
enter
xchg
mov
aas
bnd
push
scas
xchg
movsb
pop
rcl
aaa
movsb
aam
roll
int3
mov
sub
push
popa
jnp
pop
mov
mov
mov
mov
sbb
xchg
pop
xor
add
fists
xorl
jo
in
addr16
cmpsb
cltd
sub
dec
xchg
or
pusha
xor
lahf
push
inc
mov
mov
mov
add
fildl
sbb
push
mov
sub
clc
mov
clc
mov
push
mov
loopne
dec
movsb
loopne
pop
xchg
daa
out
pop
js
xchg
mov
dec
push
loope
cmp
add
es
mov
adc
les
xchg
outsb
pop
xchg
or
push
das
test
sbb
or
rcll
inc
movsb
push
je
inc
loopne
ret
jl
lret
dec
aad
popa
push
xchg
inc
mov
jo
jmp
xchg
aas
in
cld
loope
stos
push
mov
cmc
pop
mov
push
stos
dec
add
mov
dec
shrb
mov
push
xor
xchg
loopne
jns
cwtl
andl
shlb
hlt
mov
daa
dec
mov
lods
mov
popa
cs
fcoml
daa
add
push
xchg
daa
or
icebp
or
push
fsubs
jge
jmp
cs
pop
aaa
ja
push
push
loopne
adc
outsl
inc
sub
pop
dec
add
jne
leave
xor
xor
hlt
movl
lock
stos
push
mov
pop
xlat
fdivl
cwtl
push
rol
push
jecxz
filds
pop
sbb
out
pop
je
add
xor
nop
lods
sbb
mov
or
cmp
cwtl
nop
or
or
repz
daa
sub
les
adc
stos
rcrb
scas
rep
sarb
aaa
push
pop
mov
test
roll
ljmp
dec
xchg
xchg
clc
faddl
jno
mov
mov
mov
arpl
js
fldl
mov
arpl
add
sub
leave
ret
xor
mov
leave
ret
stos
sub
push
lret
cmp
xchg
adc
paddb
fdivrs
pop
pop
push
push
in
add
lret
loop
jp
idivl
fimull
add
dec
jae
fstps
jmp
sbbl
dec
sahf
or
xchg
not
out
sbb
pop
je
xlat
cmpsb
ret
leave
ret
sbb
call
lock
insb
lret
cmp
and
fmull
popf
out
xor
push
movsl
sbb
test
sub
inc
mov
adc
bound
mov
scas
repz
fwait
popf
cwtl
outsb
scas
shrb
jmp
add
sarl
cmp
pop
sub
jns
pop
jns
mov
je
sarb
rep
sub
fistps
cwtl
aad
adc
rolb
out
add
out
aaa
sub
aad
lret
dec
or
mov
jge
push
aad
es
cmp
fcoml
test
fwait
enter
add
outsb
push
sub
push
pop
fcoml
push
mov
mov
inc
or
lahf
or
jg
inc
lods
mov
adc
cwtl
cmp
in
cwtl
pushf
in
push
jmp
inc
xlat
pop
popa
lret
out
cmpl
xor
popf
pop
int
arpl
or
clc
pop
jne
jo
lods
call
daa
jbe
push
push
cmp
xor
add
dec
dec
mov
imul
xchg
dec
adc
sbb
daa
jbe
xor
adcb
cmc
cmp
test
and
push
cs
pop
testb
jl
mov
vpsubusw
sub
jp
popa
add
loope
adc
cmpsl
inc
subl
push
xchg
movsl
jnp
push
push
mov
das
and
or
aam
daa
lods
adc
leave
aaa
sub
scas
inc
inc
mov
leave
jle
xor
out
push
dec
sub
mov
push
je
push
or
xchg
enter
aam
pusha
cmp
dec
sub
pop
lret
cmp
sub
sahf
in
mov
xchg
lcall
dec
xchg
jge
xor
mov
xchg
xlat
ror
sbb
or
push
push
lahf
ror
scas
jge
jecxz
mov
inc
push
mov
pusha
fadds
in
mov
xlat
mov
mov
adc
mov
inc
mov
stos
push
sub
add
fsubr
verr
loop
adcl
sbb
jg
iret
push
or
mov
popf
jno
call
outsl
movsl
pop
dec
cli
jecxz
xchg
mov
pop
rcr
adc
dec
xchg
faddl
imul
xchg
or
sbb
pop
out
sbb
mov
xlat
jo
in
xchg
xchg
sub
nop
call
movsb
aaa
xchg
pop
adc
xchg
xor
nop
adc
pop
aaa
dec
mov
sbb
fisttps
pop
popf
movb
into
xchg
and
pop
adc
enter
test
dec
push
mov
pop
lods
add
mov
add
outsl
insl
arpl
fistpll
lods
and
ljmp
ror
incl
js
aaa
jl
adc
in
dec
int3
cmpsb
call
ret
pop
add
out
ljmp
add
daa
das
les
popf
inc
adc
enter
inc
loope
icebp
adc
adcl
xor
push
cmp
cwtl
inc
inc
ds
fwait
mov
cmp
clc
imul
fwait
les
imulb
int
imul
mov
aad
dec
loope
mov
lahf
adc
test
mov
mov
mov
add
or
xor
ret
fdivrs
es
gs
lods
daa
imul
cmp
push
cmp
xchg
push
mov
push
dec
pushf
lds
sbb
divl
push
mov
adc
xor
std
ficomps
frstor
movsl
fdivs
pop
lods
fistpl
inc
mov
dec
adc
les
test
mov
mov
dec
mov
les
sbb
fdivrl
add
lret
jmp
repnz
loop
out
inc
pusha
push
aas
mov
push
fidivl
xchg
test
cmp
dec
xchg
icebp
sub
lds
mov
sub
fildl
push
jbe
in
insb
bound
xchg
pop
cmpsb
das
das
icebp
jp
test
cltd
or
push
sbb
popa
push
mov
arpl
mov
mov
and
fxch
loop
loope
xchg
pop
stos
mov
movsl
pop
outsl
mov
push
mov
stc
inc
inc
in
rclb
lock
push
aaa
dec
cmove
mov
inc
add
hlt
call
push
dec
xchg
rol
xchg
stc
aad
bound
aam
xchg
out
push
sbb
incb
pop
popf
jecxz
stc
mov
mov
push
stos
sbb
dec
popf
or
addr16
out
inc
fcmovbe
jae
adc
push
sbb
test
mov
sti
ret
jns
call
xorl
fidivrs
clc
mov
stos
loop
sub
jnp
lret
incl
shrl
repz
push
cltd
popf
insl
mov
mov
lock
pop
test
lret
popf
jg
adcl
pusha
push
shrb
add
fisubs
pop
jnp
mov
out
out
lds
push
rol
xchg
pop
cmp
ret
add
mov
pop
pop
in
cld
out
sub
pushf
add
jno
mov
mov
scas
ret
daa
dec
sbb
xchg
pop
mov
pop
sbb
mov
adcb
mov
aam
cmpsl
xchg
ja
sahf
inc
in
enter
mov
out
hlt
loope
cmp
addb
xchg
test
hlt
insb
inc
push
add
jle
pop
push
sahf
jne
scas
or
xorl
in
adc
inc
ss
fists
fdivl
aas
sbb
daa
cmp
dec
fwait
and
add
inc
cmpb
sbb
xchg
call
test
mov
adc
addr16
jae
sar
jns
jge
test
adc
icebp
pop
mov
sbb
stos
pop
popf
mov
jae
pop
xchg
pop
push
rclb
xchg
bound
push
lahf
in
add
push
aaa
xor
lret
mov
fs
push
cmp
andb
imul
or
popa
pop
lcall
or
outsl
jp
imul
mov
js
popf
xlat
out
mov
pop
or
pusha
js
inc
data16
pop
mov
mov
aaa
pop
cltd
cld
pop
out
ret
inc
pop
add
nop
add
out
pop
outsb
fbstp
aaa
iret
fistl
sub
adc
test
aad
imul
pop
or
iret
lds
addr16
pop
cmpb
xchg
fcmovnb
fisttps
and
in
jns
sti
adc
sub
mov
pop
fidivrs
call
pop
stos
add
mov
in
sbb
mov
cmp
aas
or
mov
adc
pop
pop
ret
mov
mov
in
fstp
mov
sbb
fisttpl
mov
loopne
je
xlat
push
sub
push
push
cmpsb
enter
sub
sbb
add
mov
lea
lahf
enter
repnz
jns
daa
xchg
mov
push
dec
pop
insl
addr16
ds
daa
insb
cmp
test
popa
mov
jae
enter
xor
jo
sub
mov
mov
into
push
arpl
dec
addr16
jne
mul
addl
push
pusha
dec
fiaddl
sbb
pop
mov
aas
ds
push
fadds
pop
sbb
hlt
mov
icebp
outsb
dec
lea
push
and
jecxz
dec
call
mov
lret
out
adc
xchg
sbb
mov
adc
lods
add
mov
xor
les
cmp
cli
sbb
in
and
fldenv
push
sub
in
repz
cmp
cmp
pop
sbbl
adc
lods
pop
mov
cmp
iret
adc
adc
mov
shll
pop
and
into
push
dec
cli
xchg
lea
jmp
jb
jg
cltd
inc
jae
sahf
mov
xchg
std
shll
in
cmp
and
mov
mov
adc
push
xor
dec
lret
subl
lock
andb
loopne
jecxz
mov
pusha
pushf
cmovne
push
xor
push
add
inc
arpl
jb
lahf
lods
jp
pop
or
loope
push
jae
add
cmp
imul
negl
out
outsb
cld
sarl
bound
add
hlt
lahf
test
sti
adc
pop
cmp
pop
add
addr16
xchg
add
inc
and
push
xorb
add
popf
mov
leave
div
xor
and
das
mov
sub
sbb
lcall
scas
loopne
adc
popf
movsb
outsl
cmp
adc
lds
push
xchg
test
mov
in
outsb
jb
push
lret
and
adc
hlt
outsl
lock
rcrl
sub
dec
mov
xchg
loopne
push
mov
pop
jle
xor
fstpt
cmp
push
repz
add
mov
xchg
sub
dec
sti
jp
fwait
or
lods
xchg
push
mov
push
ds
xor
or
mov
jl
mov
or
fcomps
daa
xchg
insl
arpl
inc
addr16
addr16
rcrb
outsl
push
ljmp
xor
add
dec
mov
push
arpl
in
cmpsl
xlat
pop
dec
mov
mov
fadds
push
xchg
outsl
sahf
bound
jecxz
add
jg
mov
popa
sarl
sbb
call
iret
or
cmp
adc
pop
sub
stos
adc
sub
shrb
imull
push
out
pop
mov
mov
xchg
stos
add
mov
out
xchg
jno
lcall
insb
les
push
sub
data16
pop
or
sbb
andl
inc
mov
inc
xor
mov
mov
push
and
sbb
test
xchg
arpl
sub
push
or
pop
add
and
ds
hlt
das
mov
and
pop
push
xchg
mov
scas
sbb
or
mov
or
mov
cmp
sahf
daa
cli
aad
cltd
pop
mov
ret
or
mov
andb
jle
xor
ds
inc
mov
hlt
xchg
loope
repnz
cmc
jl
dec
dec
sbb
lods
loopne
sbb
loop
popa
out
int3
push
push
std
outsb
sbb
sub
leave
sub
xchg
push
jae
adc
icebp
scas
xor
xchg
push
mov
or
and
jno
add
mov
into
inc
lea
pop
inc
test
sub
or
fsubl
stc
jle
adc
cmp
icebp
rcrl
add
test
lock
int
push
dec
ss
mov
sub
push
inc
push
in
xchg
cmpsb
sbb
fcom
dec
les
cmpsb
add
dec
sub
test
int3
into
push
adc
add
out
mov
add
and
loopne
fwait
cmp
xor
fs
testl
push
or
xor
stc
bound
inc
fadds
pop
sti
push
adc
out
lock
test
ja
add
add
ja
hlt
out
mov
xor
dec
dec
inc
mov
adc
cmp
mov
lret
push
inc
imul
jae
dec
rolb
push
pop
pop
scas
mov
in
stc
dec
mov
jle
mov
rcrl
stc
lret
loope
sub
push
ltr
scas
and
and
dec
out
lds
rcr
aaa
out
cmp
cmpsb
push
mov
cmp
aaa
enter
push
sbb
mov
sbb
mov
out
xor
add
or
or
pop
sub
sub
xor
fimuls
ret
rclb
gs
cltd
sahf
xor
imul
jle
xor
jge
xchg
ror
andl
fistps
movsl
mov
push
cmpsb
inc
pop
jb
xor
fwait
mov
lret
mov
add
aaa
mov
jo
dec
inc
rcr
sahf
stos
pop
mov
pushf
mov
dec
std
cwtl
inc
jae
mov
xchg
imul
inc
lds
push
fsub
cld
popf
and
loopne
sub
adc
fnsave
jb
adc
fcmovnbe
aad
jae
lahf
shl
adcl
cmc
jne
xor
xchg
sub
ja
sbb
sti
cld
mov
imull
mov
push
pop
mov
cld
aas
inc
fstpt
addr16
cmp
mov
mov
rcrb
jne
and
int3
pushf
cli
mov
jno
sbb
fs
int
xor
cwtl
inc
aaa
sub
xchg
daa
mov
test
cmp
ja
add
leave
mov
loopne
shlb
mov
sbb
pop
icebp
pop
inc
in
fcomps
or
sub
lahf
add
loope
out
xchg
jae
adc
or
fisttpl
mov
xchg
xor
inc
jo
ret
dec
inc
sbb
mov
ret
jnp
push
aaa
fabs
jno
xchg
sub
inc
pop
pusha
xlat
inc
stc
cwtl
aas
or
cmpsl
ja
xchg
js
sbb
adc
ret
repz
add
xor
arpl
shr
mov
sub
sub
adc
jg
out
jne
mov
test
jns
das
lds
add
or
lock
inc
add
cltd
pop
mov
mov
dec
roll
arpl
aad
push
outsl
xor
mov
mov
lret
inc
mov
mov
dec
cmp
and
jl
mov
lret
mov
stos
or
add
mov
mov
addl
jo
pop
fsubrs
mov
or
inc
addr16
imul
outsl
cwtl
sbb
xchg
mov
ljmp
stos
cwtl
fcomps
push
xlat
movsb
or
clc
ja
popa
imull
adc
push
ljmp
mov
mov
sub
pushf
out
adc
push
xor
push
pop
cmpsl
sub
mov
stos
adc
fs
popaw
je
icebp
addr16
mov
fstl
mov
cmc
or
mov
cmpsb
nop
xchg
jno
xchg
imul
insb
frstor
cwtl
cmp
faddl
lahf
hlt
fwait
push
inc
jbe
pop
inc
adc
test
mov
sbb
mov
sarb
jo
and
push
xchg
les
and
negl
jmp
adc
ja
add
out
xor
icebp
cltd
dec
sub
and
and
jns
ds
scas
nop
loope
adc
inc
pop
mov
dec
mov
jb
outsb
dec
fcmovnbe
mov
cmpsl
ret
cli
xor
arpl
jecxz
mov
cmp
stos
fs
pop
inc
les
xor
push
nop
fcmovu
pop
add
ret
repnz
jecxz
and
rorl
jns
imul
jl
adc
mov
adcb
sbb
lahf
push
movsl
pop
mov
in
gs
test
sbbl
push
mov
test
js,pt
in
sub
add
add
outsl
iret
scas
roll
push
mov
imul
lahf
fs
xchg
xor
inc
clc
add
faddl
insb
arpl
sub
cmp
xchg
xchg
adc
sbb
repnz
aas
lds
pushf
or
cld
push
jle
ficompl
sbbl
mov
jae
cwtl
cmp
push
push
sahf
xor
in
dec
and
push
cld
and
cmp
sub
popa
mov
data16
sub
jbe
push
jl
out
xor
pop
stc
das
hlt
pop
push
jbe
mov
mov
mov
xchg
push
xchg
fldt
aaa
mov
gs
sub
xchg
js
fisubl
fsubl
add
push
jno
sbb
int3
sub
xor
pop
adc
xchg
sbb
adc
jne
pop
aas
push
cmc
daa
dec
ret
mov
ljmp
fldenv
fdivl
push
pop
in
or
adc
xor
leave
stos
adc
int
test
rcl
add
iret
dec
orl
ret
push
mov
mov
pop
or
adc
pop
push
sub
mov
mov
out
clc
jb
add
inc
push
fimuls
fidivl
mov
sub
imul
aad
jl
pop
xchg
adcb
int3
xchg
cmpsl
fs
repnz
call
das
pop
mov
arpl
pop
clc
jecxz
push
fs
xchg
lds
mov
add
mov
lret
sti
jl
leave
rcll
mov
js
jle
lcall
mov
inc
xchg
pop
add
mov
xchg
js
cmp
test
int3
imul
sub
mov
icebp
pop
fisttps
mov
jbe
scas
pop
js
mov
stos
xchg
lock
enter
pop
adc
sbb
add
scas
mov
jb
jecxz
mov
inc
dec
inc
mov
sbb
sbb
push
faddl
or
mov
cmovp
jae
test
loopne
lahf
fdivr
fwait
js
decl
sbb
xchg
mov
fmull
and
jne
inc
rorb
test
das
dec
sbb
sub
inc
pop
pushf
arpl
dec
xchg
daa
ret
das
mov
and
cmp
sub
pop
dec
enter
pop
sbb
testb
pop
fmul
pop
jne
sti
lahf
add
hlt
or
ret
in
mov
push
or
sub
into
fists
inc
imul
lods
incb
lea
xor
inc
inc
leave
xor
push
cmpsl
inc
gs
sub
or
sub
sarb
lods
sub
mov
xchg
addl
call
clc
popf
mov
dec
adc
add
push
sahf
insl
sahf
fucom
cmpsl
mov
fldl
out
rcll
dec
pop
sub
jo
xchg
xlat
mov
into
mov
cmpsl
pop
scas
inc
orl
cwtl
sbb
in
aad
fstpt
repnz
lea
pop
std
dec
xchg
ret
sbb
addr16
jo
pop
lods
aam
test
push
imul
xor
js
push
sbb
jmp
cmp
xor
cmpsl
outsb
es
push
flds
pop
add
pop
cmp
dec
push
mov
mov
pop
add
push
xchg
and
out
xchg
xchg
hlt
cmp
popa
fcmovnbe
mov
daa
pmaxsw
lods
add
lods
cmpsl
scas
pop
mov
fisttpl
xchg
mov
pause
iret
mov
hlt
ret
in
mov
aam
and
shld
mov
fdivl
rcll
jl
movsb
pop
out
xchg
add
cmp
aam
ja
mov
add
movsl
xchg
sub
jecxz
add
bound
cmp
jmp
loope
or
rolb
and
add
sub
pushf
mov
rcrl
adc
rorl
cltd
inc
xchg
mov
mov
enter
fstpl
stc
sbb
scas
mov
dec
push
push
fcoms
add
push
rcrl
fs
jge
imul
mov
mov
mov
push
lret
xor
cmp
out
mov
mov
adc
imul
inc
adc
movsl
sarb
jb
jp
xchg
inc
cmpsb
push
out
test
add
jbe
and
pop
dec
cmp
push
popa
std
std
fs
sbb
decb
ds
fwait
or
stc
mov
out
and
nop
outsl
cli
mov
adc
xor
push
xchg
pop
mov
dec
push
std
pop
sbb
cmp
jecxz
je
and
scas
or
movsb
ljmp
sub
adc
xchg
pop
push
ds
sbb
cwtl
dec
mov
cli
inc
addr16
aad
in
jne
push
pop
dec
dec
daa
lcall
and
mov
push
mov
push
inc
sub
pop
fwait
adc
shll
xchg
in
jae
fcompl
push
enter
xor
loopne
inc
adcl
mov
imul
fiadds
xlat
out
or
mov
outsb
push
fmull
mov
test
add
mov
push
adc
sub
leave
out
imul
adc
sbb
cmp
push
pop
cmp
dec
shll
push
mov
ret
or
movl
ja
or
sahf
and
mov
call
push
cmpb
in
arpl
sub
pop
fst
xchg
inc
adc
lret
sub
adc
lds
add
in
adc
jg
and
in
mov
mov
adc
daa
imul
jmp
js
dec
jae
push
inc
stos
loope
fwait
pushl
stos
std
outsl
arpl
lock
xchg
mov
popf
js
lea
sbb
jecxz
or
mov
data16
jo
jae
pop
es
pop
cmpsb
xlat
les
sub
pop
pushl
outsb
rcrl
push
adc
add
add
jb
xchg
loop
in
pop
add
sbb
ficompl
mov
fidivs
stc
adc
jo
xchg
xchg
or
dec
xchg
fistpl
sti
jb
add
fcomps
cwtl
push
shlb
call
sub
mov
cli
fisttps
call
inc
dec
sti
popf
xchg
adc
and
lock
repz
jns
add
dec
testb
std
sub
out
push
test
bound
ja
mov
sbb
sub
inc
xchg
cltd
sahf
fcomp
nop
adc
mov
xor
push
insb
rolb
and
ret
lret
leave
ja
loopne
push
xor
push
sbb
pushf
push
aad
push
adc
dec
loope
popf
sti
fdivr
jae
pop
addr16
rcr
mov
and
repz
shlb
add
lret
push
into
fldenv
or
inc
pop
in
out
stos
leave
push
xchg
xor
lret
xchg
push
daa
pop
xchg
push
lock
push
xchg
mov
sub
stos
sbb
fsub
movsb
scas
pop
fwait
cwtl
pop
divl
fst
stos
lcall
pop
scas
and
lods
stos
lods
pop
cld
icebp
fistps
mov
lcall
lcall
movl
inc
dec
lahf
les
cs
xlat
sbb
loop
mov
adc
js
jns
cmpsb
insb
sub
fdivl
aam
dec
cmp
xchg
fs
dec
jge
mov
and
jae
movsb
andl
xor
incb
scas
sub
pop
pop
in
mov
xlat
lcall
dec
shlb
jl
add
adc
jmp
add
fdivl
fs
cmp
push
bound
shll
pop
pop
add
lods
inc
or
pop
fwait
int
ljmp
hlt
push
shrb
add
xor
xchg
sahf
gs
pop
adc
mov
jmp
nop
pop
mov
dec
int
pop
xchg
pop
aaa
andb
inc
add
into
jle
xor
jne
loopne
int3
dec
rclb
aam
into
xlat
arpl
add
loop
jne
mov
inc
lcall
jo
push
mov
ficomps
ja
add
adc
das
jg
sub
ljmp
add
gs
sti
mov
je
mov
sbb
fimull
mov
mov
dec
push
mov
test
iret
mov
or
or
mov
call
cmpsl
dec
ret
fs
and
loopne
pop
adc
mov
stos
lock
mov
out
fistpl
fstl
sbb
sbb
je
dec
aas
jnp
lcall
fsts
sub
add
in
xchg
push
outsb
sub
jp
sbb
lds
leave
mov
mov
sub
pop
mov
fwait
rorb
dec
pusha
cwtl
add
push
jl
mov
test
lret
imul
adc
leave
cli
push
insb
jmp
aam
lcall
lret
or
jecxz
and
mov
insl
sbb
fstpt
adc
aam
mov
int
out
mov
mov
shrb
push
jg
insb
pop
mov
jo
sbbl
adc
mov
fsubrp
xchg
aam
fmuls
in
cmpsl
js
mov
nop
fwait
and
jnp
push
cmp
mov
push
mov
pop
cmpsl
pcmpgtw
aaa
test
sbb
scas
cmc
jge
mov
or
pop
aam
add
arpl
pop
stc
add
jecxz
mov
mov
jge
pop
xor
sub
xchg
mov
mov
jne
pop
hlt
pop
aas
movsb
aas
loopne
repnz
pop
mov
adc
movsb
xchg
mov
orl
dec
mov
repnz
mov
or
ja
jmp
addb
inc
and
or
das
jl
jns
negb
mov
sub
or
mov
pusha
cmp
imul
mov
loope
popf
sub
outsb
call
in
dec
out
sub
and
leave
outsl
cs
push
cmp
push
pop
adc
push
ret
in
xchg
stos
scas
es
js
mov
inc
sub
lahf
into
leave
mov
cmp
and
dec
inc
mov
orl
add
mov
in
out
mov
test
pop
xlat
sti
push
xorps
stos
pop
cmc
sahf
sahf
inc
dec
mov
add
jns
cmpsl
ret
xor
ds
aaa
add
or
xchg
xchg
lret
or
lcall
push
mov
fstpt
push
idiv
shrl
fdivl
outsb
add
inc
mov
sbbl
mov
mov
xlat
adc
cmp
cmpsb
repz
fmuls
dec
aas
imul
mov
fimull
sub
addr16
std
cmpsb
daa
jb
bnd
ret
add
and
mov
cmp
push
mov
xor
out
or
out
mov
xlat
lret
fldenv
shl
mov
jb
jno
mov
call
xchg
mov
cwtl
xchg
int
imull
xor
fstpt
add
shll
fiaddl
loopne
cmpsb
dec
daa
push
pop
sbb
xchg
sub
jmp
stos
sbbl
notb
push
cmp
in
sub
ret
xchg
fnsave
sub
shlb
mov
push
cmc
and
das
pop
jg
popf
inc
fimull
and
sbb
jmp
push
mov
imul
add
pop
es
dec
lock
or
jp
in
xor
mov
add
ss
sbb
insl
sub
xorb
pop
and
test
repz
push
sti
add
mov
cld
jecxz
inc
pushf
jge
push
jge
outsb
adc
shrl
stos
ljmp
pop
ss
stos
pop
fcoml
andb
mov
loopne
sub
pop
inc
test
push
rcrl
repnz
repnz
mov
mov
mov
lahf
loope
popf
lret
bound
mov
nop
adc
xlat
xor
adc
out
dec
fcomp
outsl
lds
push
outsb
add
pop
fnstsw
test
ficomps
ret
movsl
xlat
mov
fcmovnb
cltd
jnp
sbb
mov
fnstsw
nop
fadd
fldln2
cmp
adc
into
sub
push
mov
sub
leave
and
and
or
or
and
inc
sub
or
inc
push
xor
sub
and
ret
xor
push
and
and
push
or
dec
sub
sub
xor
or
sub
push
sub
or
add
sub
or
or
dec
call
xor
add
call
or
add
call
inc
add
add
and
or
push
inc
and
push
push
and
sub
add
add
mov
or
and
push
mov
or
sub
or
call
mov
sub
sub
xor
or
sub
lea
dec
or
and
inc
lea
or
xor
xor
push
add
xor
or
add
inc
xor
push
dec
xor
mov
sub
or
mov
push
mov
push
and
sub
push
xor
xor
call
sub
xor
xor
and
add
xor
add
or
and
and
or
inc
jmp
add
add
mov
mov
ret
xor
sub
dec
xor
xor
and
and
mov
add
mov
sub
xor
shr
lods
add
add
and
add
xor
and
and
xor
inc
and
add
and
or
and
add
or
add
mov
sub
sub
and
mov
dec
jne
mov
and
and
xor
mov
xor
mov
inc
xor
or
xor
mov
or
xor
dec
jne
mov
mov
and
sub
and
sub
inc
inc
pop
and
mov
and
xor
add
or
or
pop
dec
sub
or
inc
dec
pop
and
jmp
