push
test
cmpsb
jns
push
stc
push
js
mov
insl
nop
mov
mov
adc
lret
rolb
xlat
sbb
adc
ret
cmp
cs
int
cltd
jg
in
pop
xchg
jmp
cld
push
lret
or
hlt
jb
addl
cmp
int3
jae
aaa
mov
bound
jmp
js
add
jns
ja
ror
pop
xchg
push
sbb
dec
mov
pop
and
in
lcall
sahf
sub
mov
outsl
sub
int3
adc
jecxz
push
jmp
insb
dec
jne
fildll
mov
dec
jno
cmc
mov
jae
enter
lret
js
sub
mov
push
and
das
push
vaddsubps
push
shlb
inc
rorb
imul
ret
jecxz
sub
mov
outsl
mov
sbb
mov
and
push
mov
cmp
fistpl
jl
insb
and
in
mov
cmp
mov
imul
xor
inc
mov
dec
cmp
add
or
adc
addb
pop
mov
cmp
and
xchg
lea
inc
xchg
enter
popf
jns
jnp
push
shlb
sbb
pusha
add
lret
sbbb
dec
or
inc
cs
inc
ret
xor
imul
sar
jae
pop
adc
push
sti
xchg
aad
js
or
sbb
jp
and
js
dec
inc
jle
cmp
test
andb
rcrl
pop
fwait
add
cltd
inc
lods
mov
adc
rclb
xchg
pop
and
adc
cmc
mov
xchg
jo
jne,pt
mov
dec
imul
pop
clc
loope
add
imul
push
inc
test
les
cltd
adc
mov
daa
aaa
lahf
ret
enter
cmp
ret
or
ss
jl
bound
mov
dec
or
int
adc
out
xlat
inc
movsb
mov
xchg
push
xor
iret
movsb
inc
pop
or
pop
pop
fs
mov
and
shll
mov
ret
pop
and
jb
pop
fst
sti
sbb
pusha
sbb
out
fistpl
mov
cwtl
mov
jg
sbb
gs
cwtl
ret
loopne
jb
xchg
add
and
mov
mov
cmpsb
das
pop
pop
or
das
jmp
call
js
inc
pop
lods
sti
shrl
cs
movsw
dec
pop
enter
fisttpll
sbb
mov
cmpsl
lods
lcall
rorb
sbb
add
outsl
notl
dec
mov
pop
pop
and
ss
push
cmpsl
shrb
test
lock
or
inc
mov
push
inc
push
sbb
ljmp
arpl
mov
fsubl
sub
or
push
jae
sbb
ror
lret
lock
out
xor
jg
inc
adc
xor
je
insl
cmp
out
lahf
sti
es
into
dec
insb
out
fdivs
loopne
push
loop
inc
mov
pusha
pop
movsb
stos
clc
mov
push
mov
mov
movsl
mov
and
sbb
ja
ret
cmp
pop
movsb
pop
mov
xchg
repnz
or
je
adc
dec
cmp
cltd
push
insb
add
rcll
ret
mov
dec
inc
jle
jl
adc
cmp
and
lahf
mov
mov
xchg
jns
icebp
jg
std
or
mov
xchg
mov
leave
sarl
aam
lahf
mov
sbb
dec
incb
aas
ss
int
in
jo
test
sbb
data16
aad
in
inc
hlt
dec
sbb
lcall
out
xor
cwtl
stos
or
push
mov
mov
jns
into
pushf
mov
fsubrl
rolb
cmpsl
jnp
mov
cld
mov
repz
push
mov
mov
clc
sbb
inc
enter
into
lock
out
fsubrs
inc
les
lahf
add
pushf
push
bound
xchg
mov
add
rcll
sbb
ficoml
or
jne
mov
mov
xor
sbb
and
inc
imul
int
and
mov
and
jbe
pusha
cli
xor
shrl
in
dec
movsl
shrl
leave
in
pmulhw
mov
lods
cld
fs
scas
mov
loop
and
cmpsl
sbb
ret
inc
add
scas
mov
xor
lcall
fcmovbe
ficoms
xchg
test
mov
mov
decb
lock
sbb
je
push
sub
ss
or
jg
dec
daa
or
rol
cmp
cmc
push
inc
inc
push
lret
sub
jno
std
aad
sbb
shlb
test
not
xchg
lret
mov
mov
jle
aaa
cld
aad
lret
mov
shl
sub
pop
subb
aaa
pop
jno
or
jmp
inc
cmp
xchg
cwtl
lods
mov
push
xor
lcall
inc
xchg
and
hlt
cmpsl
sub
ljmp
inc
mov
les
mov
scas
ja
mov
pushf
sbb
js
mov
pop
jae
cmp
in
out
test
bnd
mov
popf
test
push
fs
dec
xor
adc
jge
adc
push
jecxz
and
mov
stc
out
push
lods
xor
cltd
in
call
popl
mov
push
or
push
jne
xorb
clc
les
cmp
dec
popf
scas
push
daa
repnz
sbb
mov
inc
xor
push
fdivrs
scas
inc
sub
sbb
sahf
sbb
fcmovb
negb
mov
inc
mov
scas
outsb
dec
or
jae
aad
sub
not
mov
in
aad
push
clc
cmp
or
lcall
cmp
dec
push
push
cwtl
das
mov
push
stos
filds
and
or
hlt
iret
mov
dec
and
dec
pop
nop
pop
push
sub
mov
stc
sbbb
jnp
in
jmp
nop
in
aam
lret
cltd
fsts
and
js
lahf
ret
into
sarb
popa
std
xchg
cmc
mov
cltd
test
fucom
mov
sahf
xchg
leave
fs
mov
jae
mov
test
jmp
loop
jmp
adc
je
jmp
cmp
cltd
int3
into
fnstenv
mov
inc
mov
clc
out
test
mov
lcall
xchg
out
dec
test
push
xchg
fcmovnb
fadds
push
shl
roll
mov
cltd
cltd
or
lcall
fldl
adc
out
dec
jne
ud0
ret
add
jg
pushf
pop
sub
icebp
push
xor
xchg
repnz
ret
mov
andl
mov
lret
sub
push
push
cmpsb
leave
lods
mov
add
cmpsb
mov
sub
pop
stos
lcall
mov
daa
sbb
rcll
rcrl
or
aad
xchg
hlt
or
mov
mov
mov
std
xor
aad
or
and
pop
es
sub
rcrl
sbb
dec
scas
inc
pusha
addr16
and
dec
stos
lcall
ja
add
mov
mov
push
jp
mov
add
leave
clc
jmp
ds
enter
adc
cmpsb
loop
cmpsl
repz
nop
aam
mov
iret
jge
leave
cmp
adc
int3
inc
xchg
mov
in
adc
mov
in
insb
pop
ss
orl
mov
jnp
ljmp
xor
push
jle
adc
leave
add
push
shrl
push
jecxz
inc
push
mov
mov
arpl
jbe
pop
aam
sbb
jnp
lret
inc
jne
or
pop
nop
sahf
dec
push
lods
adc
mov
mov
sbb
dec
lret
sbb
fst
ficomps
adc
das
je
outsb
in
sub
mov
loopne
lds
xchg
stos
insl
negl
or
adc
xchg
lcall
cmp
xchg
xor
mov
xor
negb
dec
inc
lock
imul
xor
or
orb
cmp
lret
push
jmp
arpl
jecxz
das
jmp
aas
out
adc
and
adcl
lock
rep
jl
outsb
out
push
test
shl
int3
aad
into
pop
and
jnp
pop
mov
pop
sub
sub
insl
js
mov
in
insl
fnstcw
stos
add
lret
iret
pop
mov
cld
and
movsb
sub
or
xchg
xor
fidivs
xchg
loop
jbe
int3
cmp
xchg
xchg
xchg
ljmp
out
inc
test
dec
aaa
jg
andb
inc
movsl
xchg
pusha
lret
imul
lret
ja
es
xorb
lods
mov
push
push
jae
cltd
push
addr16
aas
cmp
inc
outsl
xor
out
sbb
mov
neg
stos
sti
adc
sbb
xchg
cmpsl
or
out
leave
sub
xchg
mov
nop
xor
movsb
daa
loop
fdivrl
imul
mov
or
pop
test
cmp
loop
sub
xchg
insb
jbe
xchg
into
adc
pop
js
mov
inc
mov
xor
int3
inc
or
shl
lods
add
pushf
mov
dec
lahf
outsl
in
and
insl
ss
xchg
pop
pop
dec
sahf
int
int3
mov
aam
dec
cmp
jle
test
cmp
cmp
xchg
jg
inc
andl
adc
nop
adc
rcll
pop
fnop
hlt
and
outsl
adc
pop
jl
dec
cmp
movsl
rclb
push
sbb
ret
jecxz
mov
nop
fs
xchg
add
and
and
push
xor
insl
mov
cld
mov
dec
jae
icebp
enter
mov
sbb
pop
imul
jmp
scas
hlt
xor
in
lret
mov
loop
or
sbb
mov
and
sahf
mov
gs
sbb
rcll
mov
push
dec
in
mov
add
cltd
into
push
loop
jmp
call
mov
xchg
mov
mov
in
stos
mov
and
ret
push
sub
and
std
sahf
cmp
movsb
mov
lock
pop
mov
in
pop
aam
mov
insl
cli
cmp
cmp
iret
mov
stc
int
mov
popa
and
sbb
loop
pop
inc
lods
xchg
jg
test
or
les
or
or
movsl
das
das
or
lahf
mov
repnz
mov
xor
cmpsb
sub
jg
jmp
xor
sbbl
ds
push
shl
cmpsl
push
mov
mov
mov
shl
xor
cmp
cwtl
pop
adc
call
popf
aas
ljmp
adc
xchg
insb
mov
repz
shlb
in
arpl
push
and
cwtl
pop
lcall
cmpsl
push
sub
add
jb
insl
pusha
and
xchg
movaps
mov
jb
cmp
jbe
fimull
stc
and
sbb
stc
mov
in
cmp
cmp
or
push
jne
enter
repnz
add
jo
in
mov
popl
xor
sub
xor
addr16
cld
adc
scas
xchg
packsswb
or
fdivl
fs
frstor
jl
sub
jae
dec
fucomip
fsubr
fsubrs
pop
je
mov
out
aas
mov
pushw
cmp
xor
push
lret
fsubrs
movsb
adc
into
xchg
mov
and
pop
adcl
popa
xor
fisttpl
and
aad
push
sbb
cmp
push
inc
imul
jg
and
sub
cmp
mov
es
cmp
push
mov
jno
cmc
repnz
gs
mov
mov
add
inc
and
pop
fbld
push
fbld
mov
into
dec
pushf
sbb
fadds
roll
mov
inc
insb
faddp
cwtl
jmp
push
addr16
scas
pop
sbb
push
xorl
and
xchg
popa
cli
lret
std
mov
sbb
and
xor
and
mov
push
lcall
sbb
movsb
push
lret
incb
fdivrs
sub
push
mov
repz
or
cmp
nop
adc
xor
xlat
inc
leave
adc
insb
sub
movsb
inc
lcall
sub
cwtl
sub
sbb
pop
cmp
shll
out
xchg
je
je
xchg
dec
pop
mov
jnp
repz
stc
out
cld
divps
lcall
ret
insb
cmp
dec
adc
int3
loop
or
hlt
and
inc
imul
pop
push
jle
push
pop
sti
adc
es
xor
loope
or
mov
jb
iret
loop
xor
sbb
mov
sbb
pop
rep
ret
cmp
sub
push
xor
ficomps
jnp
outsl
mov
xor
in
data16
cmpsl
test
nop
push
jle
fs
movsl
mov
add
cmp
add
jb
xor
push
jne
stos
fidivrs
dec
jne
mov
jmp
stos
leave
std
push
ss
and
pop
xor
out
repz
mov
mov
jb
insl
fldl
loope
movsl
pop
lret
mov
and
push
sti
adc
add
pushf
adc
inc
je
mov
outsl
add
cmp
jne
iret
arpl
pop
gs
iret
outsb
mov
jmp
add
inc
cmp
pop
lret
call
push
mov
dec
cs
mov
ret
sbb
mov
inc
ror
fldt
repz
in
adc
push
gs
dec
int3
movaps
pop
fidivs
push
xchg
mov
cmp
lds
imul
mov
sub
pop
cwtl
cmpsb
fbstp
mov
rolb
cwtl
mov
push
nop
mov
adc
pop
pop
mov
notl
ds
shlb
dec
jbe
test
sbb
dec
outsb
sub
js
add
cli
cmp
push
lea
mov
dec
mov
aam
scas
or
stos
or
ja
push
aas
and
pop
mov
jno
adc
mov
nop
test
or
mov
ret
add
adc
xor
mov
into
loop
fistpl
pop
mov
inc
push
cmp
xchg
cld
movsl
cmp
inc
imul
dec
lods
add
and
scas
cmp
xchg
imul
add
add
inc
and
mov
fnstenv
mov
adc
int
pusha
rcrl
ficomps
jmp
fistps
loope
mov
xchg
and
inc
mov
fdiv
pop
stc
lea
fucom
add
outsl
xchg
mov
aaa
xor
jns
hlt
dec
dec
or
sbb
pop
or
test
xorb
cmp
pop
push
out
into
movsb
sub
sbb
pop
cmp
scas
xor
mov
inc
dec
sbb
cmpsl
hlt
sbb
cltd
test
xorb
fcoml
and
in
fstpt
push
test
lea
or
jmp
pop
lds
and
ret
pop
outsl
mov
push
jb
xchg
stos
aas
add
jo
movsb
gs
sub
repz
adc
daa
add
outsw
sahf
cmp
inc
jg
push
sbbb
ja
xchg
push
es
imul
xor
fsubrp
xor
sub
xchg
mov
cmp
hlt
mov
xchg
cld
mov
push
cmp
cmp
flds
sti
dec
out
mov
int
xor
cltd
lret
sbb
scas
add
fdivr
xlat
push
leave
xor
add
bound
jbe
jo
and
and
push
cmp
lods
or
sbb
outsb
dec
mov
cmp
mov
or
lods
mov
shlb
jb
xchg
push
cmc
bound
push
jo
cltd
push
mov
push
cmp
sbb
dec
aas
xchg
mov
mov
lock
dec
adc
add
cmp
negl
arpl
test
int
movsl
outsb
push
das
sti
jg
inc
and
inc
ss
nop
add
jb
popa
cmp
sbb
mov
fcomps
inc
es
mov
lods
mull
dec
or
adc
pop
jae
or
mov
xor
shlb
push
jbe
push
pop
enter
out
int3
jmp
imul
adc
xor
sti
xchg
add
mov
aas
jb
arpl
addr16
mov
xchg
inc
dec
mull
jmp
xor
imul
add
adc
pop
daa
pusha
adc
cmpsb
jo
imul
xor
and
movsl
leave
test
std
jmp
cwtl
jb
roll
ja
call
cmpsl
sbb
and
bound
out
fadds
fisubrl
mov
sbb
xchg
mov
iret
sbb
loop
pop
cmp
dec
cmc
mov
cmpl
mov
push
inc
ficompl
mov
or
imul
sbb
test
je
xchg
dec
in
mov
sbb
jl
lock
das
dec
jge
push
insl
pusha
xor
sub
addl
adc
outsl
cmp
mov
insb
push
add
pop
fdivrs
jnp
lods
cmpsl
in
jp,pt
fldenv
and
pop
add
mov
xchg
mov
call
mov
in
dec
xor
dec
lods
loopne
or
xchg
push
xchg
outsb
inc
sbb
mov
jmp
mov
mov
imul
pop
mov
test
ficoml
arpl
mov
mov
test
cmp
mov
mov
mov
mov
jge
push
xchg
or
xchg
int3
mov
push
sti
cmp
repz
dec
mov
dec
roll
mov
push
mov
std
jnp
xor
jl
mov
xchg
sbb
ret
inc
or
mov
sbb
repz
movsb
mov
mov
push
loopne
jb
xor
int
xchg
adc
mov
dec
pop
cmp
xchg
lods
mov
mov
sub
lea
lret
sub
mov
int3
korw
dec
cmpsb
mov
pop
xchg
daa
dec
jnp
mov
imul
scas
test
cwtl
push
shll
push
enter
aam
lret
stos
push
ljmp
xchg
mov
pop
sub
popa
mov
stc
icebp
push
icebp
xlat
inc
mov
mov
pop
push
fisubl
imul
mov
push
test
cwtl
cmpsl
and
cmp
inc
stc
ljmp
dec
mov
ljmp
ss
mov
xchg
cmp
push
aam
arpl
cmpsb
imul
xor
xchg
sbb
push
xchg
and
push
int
push
xor
add
sub
adc
push
add
xchg
or
aam
testl
xlat
xchg
lcall
sahf
xor
sbb
xlat
sbb
imul
push
jo
dec
out
js
aaa
mov
leave
daa
sbb
std
jnp
shll
aad
aam
out
ja
mov
sub
sbb
jl
das
dec
fcoml
repnz
in
idivb
roll
sub
popa
inc
sub
mov
inc
push
dec
cli
iret
jmp
bnd
lcall
div
mov
rolb
pushf
cs
dec
mov
xchg
or
lcall
or
out
push
push
mov
inc
and
pop
push
pop
mov
pushf
sub
jg
cmpsb
or
lock
movsb
pop
bound
stos
dec
jnp
bound
cmpsl
lret
int
or
push
adc
scas
xlat
in
pushf
mov
scas
stos
cmc
adc
sbb
out
add
pop
loope
in
push
mov
adc
cmp
or
fdivrl
pop
popa
ret
call
push
dec
test
sbb
dec
mov
jp
popa
push
jl
xchg
movsb
orl
xor
lcall
add
ret
inc
loope
inc
dec
pushf
test
xor
add
dec
dec
mov
pop
lds
and
mov
mov
addr16
jbe
imul
aaa
outsb
repnz
cmpsb
stos
shrb
xchg
fistpll
aad
mov
test
movsb
lcall
xor
add
pop
push
movsb
jb
rcl
xlat
stos
aaa
addb
pop
push
aam
xchg
lods
push
fimuls
stos
sahf
sub
lret
out
inc
or
fidivrs
cltd
or
mov
or
sbb
test
mov
clc
out
icebp
xor
cmp
push
je
jne
sub
adc
daa
dec
inc
les
jmp
pop
cli
xor
dec
lret
and
sub
xor
movsl
jne
mov
fs
lcall
xor
xor
fwait
jne
loop
sbb
push
nop
icebp
insl
addr16
scas
xor
sbb
aas
sbb
int3
sbb
lret
adc
cmpsb
mov
cmpsl
pop
fwait
loope
ss
sub
or
dec
inc
pop
popf
dec
dec
and
mov
xor
pop
add
inc
faddp
jae
mov
jmp
lods
inc
setae
mov
mov
scas
push
push
ss
mov
sbb
scas
adc
mov
in
mov
xlat
test
aam
cmp
sbb
mov
inc
roll
cmpsl
push
add
negl
int3
testl
add
imul
and
adc
shl
or
lods
push
daa
das
jl
outsb
cmp
or
jo
push
jge
dec
repz
dec
pop
insb
lods
movsb
push
iret
dec
adc
ds
mov
movsl
test
pop
test
movsl
test
and
jmp
cmp
std
push
inc
sub
mov
add
fiadds
inc
psubsw
call
push
push
je
fisubrs
sti
test
or
xchg
lea
cmp
jl
jecxz
dec
pop
enter
div
cmc
imul
in
outsl
ljmp
inc
or
ret
pop
push
fucomip
dec
xor
test
xor
lea
add
ret
clc
int
xchg
sub
pop
int3
sub
jnp
xchg
cwtl
stos
jmp
aam
pop
cmpsl
and
mov
test
shll
lods
cli
jge
xor
insl
lret
lcall
jae
bswap
stos
fimull
add
add
mov
dec
nop/reserved
inc
outsb
adc
ret
push
mov
enter
int3
xchg
mov
or
fs
sbb
int
daa
sbb
loopne
and
aam
jmp
pop
sub
cmpsl
push
cmpsl
dec
jle
sar
jne
inc
push
push
jmp
hlt
cmp
aad
push
mov
ret
loop
mov
mov
sahf
push
and
aaa
ret
mov
xchg
jbe
lds
in
push
push
and
xchg
dec
push
sbb
xchg
pop
lret
add
sbb
fisubl
inc
inc
imul
addb
hlt
mov
or
in
pop
mov
movsl
lock
fildll
jmp
pusha
stc
pop
pop
ljmp
and
mov
xor
pop
mov
pop
xchg
ljmp
pop
cmp
repnz
int3
inc
sbb
xchg
loopne
outsl
pop
pop
mov
mov
cld
lea
aad
aad
pop
xchg
or
lea
fdiv
add
push
outsl
add
dec
lea
cli
in
mov
adc
push
jp
jo
es
lock
add
or
mov
bound
pop
aas
jbe
ret
jb
dec
jnp
sahf
xchg
jge
mov
adc
mov
push
repnz
roll
jnp
cld
fld
test
int3
sub
ja
imul
cmpb
ss
xor
in
mov
aam
ljmp
in
out
pop
lock
push
mov
ljmp
andl
sarb
and
cmp
pop
inc
pop
push
pop
cmp
scas
incb
mov
faddl
mov
test
jmp
movsb
rorb
lahf
inc
andl
insb
mov
daa
dec
pop
adc
lret
pop
sub
xchg
call
sbb
cli
jnp
fsubrl
rolb
mov
add
add
aaa
subb
cmp
xor
or
pushf
mov
inc
sbb
fstpl
sbb
xchg
push
sub
sub
mov
movsb
hlt
je
lds
scas
loope
sub
sbbl
and
scas
sahf
cmp
testl
iret
imul
cmovne
popa
jae
int
push
pop
sahf
xor
sbb
dec
shlb
or
fsubp
das
lret
add
fldl2t
sbb
push
mov
mov
push
lcall
es
push
mov
lock
popa
pop
sahf
gs
xor
dec
ret
mov
cli
dec
hlt
divb
into
push
out
mov
leave
gs
lret
and
sbb
xorb
push
jle
mov
test
adc
add
cmc
je
icebp
mov
sub
xlat
lea
adc
sub
negl
adc
lods
pop
cmpl
ss
les
and
adc
xor
fdivrs
insb
sbb
push
test
jge
inc
loope
cmp
cltd
inc
mov
dec
jns
jge
popf
mov
push
adc
inc
inc
jnp
mov
mov
test
das
and
insl
test
xorb
mov
inc
int3
or
aas
sahf
sahf
mov
xlat
push
fadds
xor
cmp
xchg
js
or
mov
pop
jae
sub
test
int
lret
dec
mov
push
inc
cmpsl
mov
repnz
ja
nop
ljmp
out
in
clc
shl
call
aaa
addr16
or
xor
jo
mov
fdiv
sbb
jp
fnstsw
push
or
push
jge
xor
ds
fdivs
jmp
pop
lods
pop
mov
rolb
xor
sbb
push
lcall
aad
mov
ss
iret
inc
popf
mov
and
or
or
jne
xor
shr
mov
imul
pop
push
mov
xor
pop
push
pop
icebp
in
and
adc
xor
das
cmpsb
pusha
xor
aad
push
lods
sub
insl
rcr
lods
xchg
cmp
pop
pop
ljmp
jb
clc
testl
mov
int3
arpl
insl
pop
push
movsb
push
mov
jmp
jl
inc
push
cmp
ljmp
cmpsl
add
adc
cmpsl
lcall
pushf
sbb
ret
mov
test
sbb
imul
hlt
dec
stc
loope
pop
pushf
inc
les
jge
jnp,pt
popa
xchg
mov
push
pop
mov
pop
xchg
fiadds
xor
sub
mov
push
rclb
dec
in
lods
jmp
in
pop
test
out
aad
adc
pop
daa
push
add
pop
movl
pop
divb
mov
mov
out
cli
inc
pushw
add
cld
lea
push
lock
fadds
icebp
and
dec
jno
push
and
int3
inc
out
sbb
movsb
les
test
lea
dec
jecxz
repz
inc
sub
sbb
scas
fs
fdivs
in
ljmp
cmpsl
dec
inc
lds
in
enter
or
cmp
sbb
dec
in
adc
cmpsl
pop
mov
jmp
aam
inc
xor
mov
vrsqrtps
mov
push
pop
lods
push
cmp
sub
outsl
shll
scas
subb
push
in
subb
mov
test
rcll
mov
add
jmp
jge
jecxz
push
jns
fnstcw
or
xchg
ja
sub
test
pop
xchg
xchg
roll
push
jno
xchg
scas
push
push
adc
sti
xchg
sub
xor
nop
jb
sbb
push
lret
mov
jg
pop
push
fisttps
and
fsub
into
push
sti
sub
fsubp
mov
lahf
add
add
push
enter
aaa
sub
inc
mov
fcoms
add
into
add
outsl
mov
std
push
mov
pop
ret
outsb
ds
cmp
mov
test
fwait
cli
cmc
lock
cmpsb
xchg
and
aaa
sbb
xchg
cmp
adc
out
stos
dec
cmpsb
push
pop
xchg
ja
lods
adc
stos
dec
test
xor
xor
jl
jl
sub
sahf
dec
mov
mov
stc
fisttpll
or
shlb
rcrb
shrl
mov
mov
jnp
mov
and
fwait
aam
mov
mov
ficoml
outsl
stos
xchg
cmp
aaa
push
gs
clc
xchg
mov
mov
add
fsubp
dec
imul
subb
and
cmp
popa
in
dec
sbb
mov
jne
inc
or
xchg
ret
inc
inc
ss
iret
add
mov
cmp
ret
dec
cmp
iret
insb
push
add
lret
gs
ret
rcl
or
cwtl
repnz
stos
mov
stos
sub
out
fimuls
cmp
dec
aas
push
mov
das
jns
dec
dec
dec
out
or
mov
sub
push
sub
lret
push
stos
aas
or
sub
jo
mov
addr16
test
mov
ret
sbb
into
pop
ret
sarb
scas
push
dec
outsl
mov
pop
loope
in
std
test
add
sbb
das
outsl
dec
add
std
inc
icebp
jecxz
xorb
dec
incb
push
pop
pop
mov
and
mov
iret
movsl
push
roll
loope
popa
testb
cmpsl
and
jno
cmpsb
fdivl
mov
repnz
fstpl
mov
dec
jo
mov
jne
xor
xor
inc
and
mov
fmuls
lahf
fdivrl
sbb
fsts
outsb
shll
sub
or
xchg
dec
arpl
jo
push
sbb
xor
push
popa
cmp
sbb
inc
shll
lods
cs
sub
std
cwtl
insb
pop
jno
xchg
adc
and
sub
or
mov
jbe
jle
fimull
stos
stos
int3
push
mov
pop
push
push
lret
sarb
cmp
scas
cwtl
cs
sbb
and
out
xor
stc
rcrb
cmp
xor
push
int3
adc
inc
les
ret
in
aam
popf
sub
add
cwtl
xor
cmc
xchg
jo
lret
repz
sbb
jecxz
mov
out
std
sbb
push
pop
add
xchg
stc
jns
idivl
or
lahf
int3
xchg
sbb
rolb
xor
test
addr16
mov
pop
jb
xor
lds
inc
jbe
xor
iret
aaa
gs
and
cltd
xchg
lods
mov
dec
inc
pop
shrl
cmp
rcrl
mov
fldcw
sub
inc
fildl
lret
mov
add
sti
mov
inc
in
fisttpl
sahf
lods
rcl
mov
lock
or
pop
enter
xor
push
xor
push
insb
pop
stc
clc
xchg
mov
push
inc
outsl
adc
jp
verw
pop
jb
jecxz
jbe
mov
mov
repnz
leave
mov
imul
andl
pop
cmp
jecxz
idivb
push
sti
mov
in
push
mov
mov
sub
mov
dec
fwait
sbbb
dec
dec
jle
cmp
sub
xor
stos
adcb
xor
push
test
jnp
insb
or
and
adc
scas
pusha
cmp
push
gs
daa
imul
repz
push
sub
arpl
or
lods
movsl
bound
icebp
cld
xchg
dec
cmc
subl
mov
cltd
mov
das
ds
pop
inc
inc
lods
cmp
leave
sub
mov
mov
or
mov
add
jle
notb
pusha
nop
mov
pop
movsb
flds
jno
repz
pop
lahf
int
mov
sti
std
push
inc
pop
mov
ret
adc
fisttpl
pop
mov
adc
push
mov
rcrb
mov
push
rolb
scas
outsl
push
inc
bound
lcall
cmp
mov
movsl
or
enter
sbbb
jmp
mov
test
shll
lahf
or
cld
adc
sub
pop
repz
inc
cli
jo
sar
sbb
fsubrs
jbe
lods
fld
aaa
sbbb
add
xchg
das
repnz
pop
lret
xchg
dec
sbb
sub
jnp
mov
fimull
pop
aas
pusha
into
xor
in
mov
add
iret
xchg
cmpsl
mov
pop
push
imul
lds
ret
mov
sarb
pop
push
in
ljmp
gs
xchg
in
pop
lahf
fdivs
jb
lds
push
xchg
and
testl
aam
xchg
pushf
stc
jmp
jae
jae
pop
dec
call
adc
and
push
test
roll
and
mov
push
je
ds
loopne
xchg
sti
movsl
pop
mov
add
inc
out
test
cmpsb
repz
pop
and
call
or
dec
push
mov
in
push
stos
lahf
xchg
push
fsubrs
xchg
out
push
add
push
jo
daa
test
fcoml
xor
cmp
or
lods
xchg
push
std
test
mov
xor
stc
mov
ret
test
adc
insl
adc
enter
cmc
mov
or
int3
sub
adc
out
lahf
call
js
repnz
jae
push
clc
push
insb
cmc
in
xchg
cwtl
mov
sub
in
add
std
loope
into
push
cmc
mov
cld
pop
mov
mov
adc
mov
into
outsl
inc
mov
repz
js
push
dec
xchg
mov
stc
ret
fwait
lods
shl
scas
ds
pushw
fs
popf
sub
in
ror
mov
pop
jp
inc
or
inc
xchg
test
push
js
repnz
adc
outsb
aaa
and
mov
cmp
mov
push
cli
inc
xor
lcall
je
lret
add
pop
stc
inc
dec
xor
or
mov
hlt
jo
aam
shld
jbe
mov
ljmp
int3
cmp
push
inc
xchg
add
movsb
rol
int
inc
cmp
sti
push
or
lcall
jae
jne
lock
lods
cli
xlat
xor
test
iret
jno,pt
mov
lret
nop
sub
call
shl
mov
scas
mov
nop
insb
adc
sbb
pop
xor
cwtl
hlt
int3
test
pusha
outsb
xchg
mov
pop
mov
aam
add
mov
xor
push
clc
jns
pop
dec
ret
pop
mov
fmuls
out
je
adc
popa
xchg
fisttpll
shr
pop
mov
and
syscall
xor
das
std
std
adc
js
mov
adc
inc
jb
lret
mov
cs
pop
gs
in
notl
dec
xchg
test
repnz
leave
adc
imul
xor
lock
test
push
mov
jle
push
jl
lods
sbb
scas
sub
pusha
imul
pop
jns
mov
sbbl
add
lds
imul
xor
fisubrl
testl
movsl
xchg
xor
out
out
mov
jne
xor
mov
test
scas
or
xor
ds
and
cmc
sbb
les
mov
jae
lahf
dec
jb
xchg
lods
jl
push
dec
dec
or
jl
xor
mov
daa
scas
and
aad
cltd
dec
mov
imul
sbb
jns
and
call
jg
mov
clc
cmp
hlt
push
mov
or
fucom
js
in
scas
in
loop
test
mov
jnp
movsb
inc
xchg
clc
pop
or
dec
sbb
clc
or
jno
scas
xchg
pop
pop
jle
cmpsl
cli
jg
in
jae
push
int3
stos
and
mov
jl
push
sahf
cmp
cmp
push
mov
adc
out
loope
cmp
outsb
out
pop
js
les
dec
das
mov
dec
dec
test
int3
push
pop
dec
mov
les
pop
dec
lock
mov
loop
adc
pop
add
aas
negb
push
addb
cltd
xor
das
inc
mov
or
aam
shl
cmpb
test
sbb
pop
aam
test
mov
adc
aam
loop
cmp
inc
sbb
push
outsl
sub
addr16
mov
sbb
sbb
add
scas
inc
mov
push
lea
push
scas
icebp
push
dec
in
sub
daa
xchg
sub
ds
ja
add
mov
js
ret
xor
sub
cmp
and
cmp
and
mov
push
adc
pop
pop
pop
mov
pop
daa
adcb
xor
cmp
stos
int
adc
pop
jl
ret
sub
xchg
mov
std
and
mov
jle
out
sub
fdivr
and
mov
pop
andb
jne
mov
push
mov
negb
cmp
andb
ja
mov
insb
mov
clc
sbb
popa
test
push
jns
mov
outsb
xchg
mov
cli
sbb
int3
out
adc
in
sub
xchg
mov
cld
pop
scas
sbb
in
cpuid
jne
fwait
roll
insl
nop
mov
fstps
bound
xor
jecxz
or
mov
sti
push
inc
xchg
pop
jl
ret
sub
ljmp
mov
cmp
adc
jo
xchg
mov
in
aaa
inc
jno
cli
push
mov
push
nop
mov
out
adc
inc
push
sbb
mov
push
sbb
lods
push
ja
mov
out
outsl
jbe
movsl
popa
test
jp
adc
sub
out
or
call
out
mov
add
sub
jne
lret
add
cld
pop
mov
icebp
mov
mov
hlt
dec
and
mov
mov
cmp
mov
mov
popf
jg
icebp
pop
cmp
or
cmpl
sbb
cmp
testl
or
repnz
imul
and
push
aas
nop
lock
shrl
fdivs
jmp
sti
in
adc
js
fstps
stos
and
sahf
add
xchg
mov
hlt
cmc
push
imul
jo
add
push
sub
mov
out
dec
xchg
adc
fcomps
out
mov
add
xchg
jb
dec
mov
add
or
orps
fcoml
mov
xchg
jae
cmpsl
pop
iret
inc
mov
or
out
jo
mulb
aas
xchg
loope
stc
pop
inc
popa
lods
outsl
mov
int3
xchg
mov
cmp
inc
stos
insb
jecxz
pop
fstl
or
and
rcl
xchg
arpl
in
sub
cld
cmp
out
mov
inc
shll
xchg
mov
push
sarb
and
sbb
aad
xlat
movzbl
add
jle
inc
mov
jle
xor
sarb
add
arpl
pop
sti
fwait
dec
shr
cltd
sbb
cmp
inc
ret
mov
dec
mov
aaa
paddw
ds
rolb
push
sub
cltd
jns
fisubrl
cmp
or
push
and
inc
je
mov
repz
cmp
ret
cmpl
testl
mov
dec
jg
stos
out
xchg
adc
pop
add
clc
push
out
jge
xchg
xor
decl
in
pop
sub
inc
icebp
sbb
xchg
ficompl
xchg
mov
cmpsl
mov
std
adc
xor
std
pop
cli
mov
mov
cltd
scas
xchg
cwtl
adcl
or
data16
mov
ret
aas
or
and
pop
push
out
out
bound
xchg
xchg
and
frstor
jno
mov
je
lcall
in
sbb
push
adc
or
or
test
and
aaa
cmp
test
test
roll
cltd
jns
daa
pop
enterw
loop
fisubl
cmpsl
ret
fcoml
hlt
xchg
movsl
fsubr
adc
js
fucomip
xchg
sub
int
bound
push
adc
scas
dec
add
es
mov
inc
popf
fsubr
push
test
mov
lods
xchg
outsl
mov
pop
add
ret
mov
arpl
dec
dec
jge
fs
jg
adc
xchg
int
js
xchg
push
fistpll
decb
mov
ret
xor
pop
outsl
mov
orl
mov
inc
xchg
and
adc
test
xchg
decl
xchg
pop
notl
or
cmc
mov
jb
repz
jne
adc
test
jp
lock
jns
fisubs
mov
lret
das
jbe
nop
rep
in
loop
arpl
inc
gs
or
fucom
add
cmp
sti
movb
xor
out
stc
popf
push
mov
lcall
iret
aad
das
inc
inc
sub
sahf
sti
mov
push
mov
jno
cmp
jnp
sbb
or
inc
call
cmp
test
addr16
jmp
or
push
test
cmc
xor
cs
movsb
xor
sbb
dec
mov
jb
adc
mov
movsb
xchg
cmp
xchg
pop
decl
sbb
push
ds
orb
mov
jns
push
invd
push
sub
push
adcl
or
adc
mov
xchg
sub
repz
adc
add
inc
or
pop
pop
in
inc
cltd
in
push
dec
jl
jno
popl
nop
sbb
mov
cmpsb
mov
mov
inc
cwtl
fs
cmp
ret
pop
adcb
or
rorl
pop
and
stos
aam
push
inc
sub
lret
movsb
sarl
push
test
pop
inc
je
lods
dec
inc
mov
mov
inc
call
add
lahf
addr16
ret
or
mov
xchg
and
jl
jecxz
aam
jp,pn
outsb
push
cmp
mov
push
push
mov
mov
ss
psrlq
mov
cmpsb
cltd
mov
pop
fldenv
cmp
sbb
aas
cmpsb
jmp
scas
popf
outsl
or
and
lret
fbstp
ds
rolb
fcompp
xchg
ret
pcmpgtb
orl
mov
adc
push
shl
lcall
mov
mov
cmp
sub
jns
mov
imul
jne
lea
push
jbe
icebp
push
jo
popa
adc
sub
sub
adc
adc
push
mov
cmp
out
sub
or
fwait
jne
fnsave
and
push
sbb
sar
sub
ret
call
mov
pop
es
add
je
xor
sbb
inc
xchg
sbb
xor
mov
fwait
add
shlb
pop
mov
popa
mov
fprem
sbb
dec
je
scas
repz
arpl
loope
cwtl
cmpsb
sar
data16
int
push
cwtl
sub
push
jb
dec
je
mov
stos
push
cmp
hlt
add
push
test
jno
push
push
lods
sbb
dec
lret
add
or
fsubrp
mov
ret
jmp
jo
jno
xchg
push
push
dec
mov
pop
push
rclb
movsb
je
cmpb
mov
cld
xchg
cli
rcrb
lcall
stc
pushf
ret
add
hlt
sbb
bound
adc
mov
sbb
cwtl
fdiv
add
mov
sti
sbb
ds
or
adc
je
dec
adc
cmp
mov
dec
popf
inc
pop
jae
sub
das
popa
lret
dec
mov
loope
xchg
adc
xchg
pop
hlt
shlb
das
push
cmc
mov
stos
clc
fwait
pop
or
dec
icebp
push
ret
pop
daa
xchg
push
loope
ds
insb
mov
repnz
nop
stc
fmul
in
adc
pop
enter
loop
xor
push
arpl
adc
daa
pop
xlat
je
subb
xchg
or
rorl
mov
clc
dec
sub
jb
fs
add
xchg
mov
mov
adc
or
and
push
inc
pop
add
cmp
insb
lods
or
cmp
cmpsb
movsl
insl
lahf
add
inc
jnp
push
pusha
mov
cmp
cltd
dec
push
popf
lods
sbb
and
lea
lcall
xchg
mov
ja
add
xchg
call
jecxz
or
inc
fdivr
scas
mov
lock
jns
lahf
lds
sub
push
mov
frstor
inc
lcall
mov
in
push
add
inc
test
and
inc
arpl
lock
mov
repz
stos
call
shl
sbb
mov
cwtl
fldl2t
aad
in
loopne
sbb
pop
jnp
add
in
adc
fildl
fdivs
lret
imul
mov
xchg
lods
add
push
adc
subb
pushf
out
xchg
xchg
jge
fdivr
lahf
jmp
out
filds
fisubrs
push
lea
cwtl
adc
cmc
arpl
jmp
mov
aam
sbb
adc
test
idivb
mov
insl
nop
mov
stc
sbb
bound
xor
jp
shl
sub
mov
sti
push
inc
xchg
pop
jl
ret
sub
xchg
mov
std
and
mov
jle
out
sub
fdivr
and
mov
pop
andb
jne
mov
push
mov
negb
cmp
andb
ja
mov
insb
mov
clc
sbb
popa
test
push
jns
mov
outsb
xchg
mov
cli
sbb
int3
out
adc
in
sub
jp
movaps
push
pushf
int3
mov
lds
jle
and
dec
call
andl
jg
sbb
std
out
cltd
push
cmc
pop
ss
pop
cmpsl
xchg
out
into
cli
lods
mov
inc
push
fbstp
cltd
lods
mov
int3
dec
pop
gs
imul
sbb
jno
mov
cmp
xchg
loop
data16
fmull
add
cmc
iret
aaa
out
shrb
dec
sbbl
pop
inc
mov
stos
or
mov
mov
push
bound
sarl
mov
or
mov
add
push
mov
pop
mov
cmp
push
pop
push
pop
or
js
test
cmp
cmp
xor
mov
add
mov
push
pop
mov
add
inc
push
inc
pop
add
xor
mov
cmp
jne
add
sub
push
pop
cmp
jne
sub
andb
mov
cmp
loopne
sub
xchg
and
xchg
andb
adc
cmp
sub
xor
ret
xchg
mov
add
sub
andb
mov
or
js
andb
lods
xchg
loopne
sub
pop
mov
mov
cmp
andb
mov
or
arpl
subl
xchg
loopne
sub
subl
andl
rcpps
mov
mov
subl
xchg
loopne
pop
xchg
addb
andb
mov
inc
lahf
sbbl
or
js
push
mov
sbb
xchg
or
mov
dec
mov
push
imul
xor
ja
test
push
cltd
pop
jle
jns
insl
inc
pusha
inc
bound
inc
dec
push
dec
outsb
push
jo
jb
je
jmp
jg
aad
inc
dec
aam
mov
movb
in
iret
jl
outsl
add
jne
mov
adc
jnp
mov
adc
mov
mov
push
mov
scas
punpckhwd
jg
negb
lods
fidivrs
data16
das
dec
push
sbb
xor
jae
jo
dec
outsl
sbb
popa
pop
loopne
pop
inc
sub
das
mov
xchg
mov
daa
cmp
pop
xor
sub
jmp
lret
sub
add
call
mov
iret
mov
push
sub
movsl
push
cmp
ss
dec
mov
sub
dec
pushf
call
test
push
inc
mov
mov
dec
xor
xor
add
add
pop
jg
enter
ljmp
out
mov
popa
not
dec
inc
push
xchg
lods
leave
pop
js
jae
lcall
ret
aaa
push
lcall
in
enter
andb
andb
sbb
.byte
pop
