push
call
ret
ret
push
push
mov
lea
pop
ret
and
nop
jge
shl
mov
add
cld
sbb
xor
add
push
xor
in
test
lods
inc
loopne
mov
test
cmpsb
lahf
out
mov
mov
fldt
orl
push
sbb
popf
lret
jl
fisubs
lds
push
hlt
mov
cmp
mov
fstps
push
push
pop
addr16
into
cmp
mov
mov
pop
and
scas
lds
cmp
pop
dec
inc
push
pop
mov
push
sub
imul
jmp
push
je
pop
push
push
sub
ss
ds
sub
sbb
inc
stc
dec
fwait
out
add
and
push
sbb
into
dec
sbb
addr16
repnz
cmp
mov
jo
repnz
loop
nop
out
and
mov
sbb
jp
rol
cmp
xor
and
std
mov
fcoml
xchg
in
xchg
cmp
pop
es
adc
pop
xchg
mov
fmull
lcall
cmpb
add
sti
dec
in
out
imul
cltd
in
sub
push
jne
cmp
mov
mov
mov
cmpsl
lods
jecxz
push
js
lds
leave
xchg
jmp
dec
jge
jmp
clc
sti
push
insl
and
nop
lahf
das
jl
repnz
mov
shlb
incl
push
cli
xlat
mov
push
std
aas
mov
mov
jp
jnp
add
cmovns
dec
push
adc
fcompl
sub
jg
push
adc
cmp
fwait
jle
push
push
mov
sbb
push
adc
pop
push
leave
xchg
xchg
lcall
fcoml
hlt
xchg
dec
add
inc
loopne
pusha
or
jle
es
add
rorl
nop
mov
push
std
mov
ret
dec
fs
into
scas
mov
sbbb
jo
test
orb
ror
cmp
icebp
into
add
es
popf
inc
cmp
adc
inc
sbb
jmp
dec
mov
lea
insb
fdivl
xchg
cmp
cmpsb
mov
jge
lret
aaa
push
dec
or
addr16
push
pop
sub
adc
std
int3
jl
xor
dec
addr16
sbb
add
xor
and
push
push
pusha
add
dec
std
ficoml
push
stos
aad
inc
clc
iret
test
andl
jno
and
mov
in
lahf
cmp
sbb
push
ja
inc
int3
fcoml
xchg
and
in
xchg
rcrb
dec
fs
mov
sbb
push
test
int
pop
jne
shll
rorb
sahf
push
inc
push
in
inc
mov
jnp
and
push
cmp
sti
dec
lret
push
movsb
add
cmp
int3
pop
jp
iret
pop
xor
dec
into
cwtl
imul
push
aas
movsl
push
push
and
aad
or
pusha
lret
jmp
mov
cltd
jl
test
popf
cmp
inc
sti
je
adc
and
push
ss
clc
cmp
mov
push
jne
out
mov
inc
leave
mov
xor
push
jmp
shrl
pop
push
mov
push
pop
ja
cmp
clc
pusha
jns
lods
popa
mov
sub
push
icebp
into
mov
pop
push
sbb
push
es
push
ds
or
jge
cmp
fnstsw
and
mov
mov
adc
pop
add
xor
mov
out
fs
mov
jge
jmp
or
dec
shll
mov
out
les
push
into
rorb
lods
adc
inc
mul
jo
pop
jecxz
mov
dec
xor
or
adc
dec
jle
aam
outsl
pop
adc
movsl
dec
test
sbb
push
jo
adc
jno
xchg
andb
jns
xchg
add
dec
addr16
inc
cli
push
pop
test
xor
mov
aam
call
aaa
jg
test
mov
out
dec
pop
or
leave
scas
mov
jmp
imul
insl
lods
out
jns
pusha
fsubr
jg
dec
xchg
jmp
push
pop
jo
out
jg
outsb
xchg
fidivl
lret
icebp
and
pop
mov
adc
andb
jecxz
pop
adc
and
or
ja
inc
push
sti
sub
xor
out
cmpsl
or
ja
add
aaa
sbb
out
jl
mov
ljmp
adc
test
lods
cmpsb
arpl
xchg
pop
je
cwtl
sbb
fisubl
push
jle
cs
mov
xchg
andb
arpl
mov
mov
cmc
or
jp
mov
mov
ss
sar
push
and
push
jle
dec
cwtl
cwtl
std
mov
mov
dec
imul
jge
xchg
adc
adc
or
pushf
mov
imul
mov
addl
or
leave
add
mov
xor
add
gs
je
cmp
dec
mov
inc
sub
jnp
push
xor
sbb
or
hlt
cmp
ret
adc
lods
mov
adc
pop
inc
es
xchg
pop
push
mov
stos
in
cltd
cs
sarb
pop
mov
and
adc
inc
xchg
xchg
dec
xchg
mov
xor
mov
and
vphaddbd
arpl
sbb
xchg
dec
dec
cmpsb
movsb
pop
leave
ljmp
jle
lods
jno
mov
jp
pop
lock
cwtl
push
addl
sbb
mov
xor
sub
sub
insl
sbb
and
out
ja
mov
dec
push
ret
fnsave
cmp
stos
cld
into
aas
pop
xchg
std
sbb
jo
and
test
jmp
in
xchg
jno
pop
inc
add
fmuls
jns
xchg
push
scas
pop
push
imul
xchg
scas
add
lret
faddl
jns
jne
in
repnz
cmovno
pop
jge
push
add
das
sbb
test
and
ljmp
mov
xchg
int3
dec
dec
aas
in
cmp
scas
orl
adc
cltd
mov
addb
mov
mov
sbb
stc
lret
imul
mov
add
lea
cld
mov
scas
inc
cs
fs
jne
test
mov
dec
bound
inc
xor
mov
mov
mov
push
cmpsl
fcoms
push
pop
lock
jno
push
dec
lods
movsb
mov
inc
fwait
test
fwait
add
idivb
popa
ret
lahf
arpl
int3
mov
jmp
dec
test
mov
lahf
or
jle
testb
jmp
stos
rcl
xor
push
les
cmpsb
cmp
xor
push
sbb
jge
call
outsl
fcompl
test
test
mov
mov
sbbb
fs
pop
mov
lahf
mov
in
adc
xor
fisttps
mov
test
and
ljmp
cmp
lds
iret
jns
test
inc
push
dec
pop
ficoml
int
xor
adc
insb
push
rclb
fistl
mov
push
scas
inc
adc
cli
es
mov
movq
mov
call
inc
jp
outsl
movsl
xor
popf
inc
and
pop
or
mov
inc
popa
shrl
nop
fsubr
out
popf
jp
pop
and
popf
adc
sub
pop
and
bound
and
pop
jmp
sub
mov
mov
cmc
aam
dec
cld
stc
xchg
ss
pop
aas
or
movb
mov
repnz
push
pop
mov
hlt
add
clc
repz
in
inc
push
popa
fwait
jae
movsb
aaa
not
mov
pop
dec
cmp
xchg
sbb
xor
push
push
jl
and
adc
push
add
and
test
add
adc
push
sti
mov
call
inc
and
jle
das
pop
mov
pushf
adc
in
cmp
mov
add
cltd
cmp
popa
mov
stc
lds
in
out
repz
fisubrl
les
or
pushf
inc
testl
shrb
pop
mov
bound
mov
fisubrl
mov
cmp
mov
cltd
and
dec
outsl
loope
sub
cmp
jmp
lods
iret
pop
xorb
jbe
sbb
dec
mov
lcallw
fildl
ret
add
loopne
xor
roll
push
cmp
xorps
push
int
push
rcl
test
sub
cmpsl
jo
popf
call
out
pop
mov
fisttpl
mov
mov
xchg
ljmp
in
popf
add
or
jo
inc
cmpsb
lds
cmpsb
outsl
notb
nop
popa
aad
stos
and
adc
pop
filds
sbb
imul
fwait
loopne
test
pushf
insl
mov
adc
and
rcll
popf
xor
cwtl
or
push
mov
xor
jb
xor
push
mov
sahf
or
mov
fadds
pop
shrl
fwait
xchg
xor
insl
and
jmp
insb
mov
les
imul
bound
jmp
fadds
enter
sbb
adc
in
mov
pop
jg
insb
add
inc
push
ret
pop
adc
sub
sub
xchg
dec
scas
jg
xchg
fs
sub
fildl
ja
in
sbb
pop
mov
fildl
sub
xor
inc
xchg
cmp
scas
stc
aad
inc
push
xor
notl
out
mov
and
ss
pop
rcl
xrelease
test
sbb
lock
int
xchg
pop
xchg
inc
xchg
sbb
sub
pushf
leave
push
push
and
daa
xchg
mov
fadd
sub
les
in
pop
ja
lret
lock
fiaddl
and
fisttps
mov
lret
jp
mov
popf
jg
mov
test
sub
lods
sub
fwait
pop
lods
out
mov
pop
fsts
aaa
popa
test
pop
dec
add
pop
aad
inc
ja
dec
out
pop
or
in
loopne
cmp
sub
loopne
mov
sbb
xchg
push
mov
ja
or
mov
cmpsb
sub
jg
sti
sahf
push
adc
rcr
cmp
outsl
mov
aam
mov
pop
cltd
pop
daa
es
clc
mov
leave
fiadds
data16
shlb
mov
pop
stos
out
aas
push
cs
jg
cmp
sahf
mov
repnz
jp
cld
sbb
iret
addr16
mov
in
fcoml
rorl
or
jl
aam
xorl
fisubs
int3
ja
fcompl
lret
mov
pop
jge
mov
mov
ja
pusha
scas
test
adc
loopne
or
dec
push
mov
js
sbb
sar
inc
in
nop
lret
aam
jae
adc
dec
add
test
ss
cmp
sbb
add
or
aaa
add
fucomip
mov
xchg
xor
ror
pmulhw
or
call
push
add
sub
movsb
cmp
aam
push
push
dec
shlb
jb
test
jbe
adc
mov
cmpsb
jle
lods
inc
lret
out
lahf
mov
fildl
jbe
push
push
sbb
lret
ds
mov
fbld
pop
cltd
mov
outsl
shlb
cmp
mov
xor
lahf
cmp
jb
mov
xor
jnp
loop
int
jp
mov
mov
adc
pop
mov
hlt
xor
mov
or
ds
mov
bound
inc
xchg
xchg
adc
insl
fwait
xchg
fwait
push
cld
push
cs
mov
aad
and
stc
mov
inc
pop
push
sbb
jae
jb
xchg
ret
faddl
in
aad
sahf
jo
adc
stos
mov
sarl
int
cmp
pop
xchg
xchg
pop
in
movsb
add
fadds
shll
mov
push
pop
sti
clc
or
inc
imul
mov
das
pop
and
and
adc
and
fnsave
pop
int3
cltd
push
mov
dec
jg
outsl
popa
dec
pop
mov
add
mov
out
dec
push
push
out
hlt
dec
fiadds
inc
push
test
leave
mov
pop
sbbl
and
das
inc
sbb
cmp
mov
out
fs
outsl
mov
stc
outsl
jae
gs
clc
cltd
jecxz
stc
pop
arpl
xor
sbb
shlb
or
inc
dec
mov
movsl
mov
jecxz
stos
mov
call
popa
or
jp
inc
sub
xchg
push
and
hlt
xchg
or
cmp
inc
jp
mov
faddl
fxch
loope
or
inc
and
ljmp
mov
cmpsl
ret
dec
xchg
ss
aad
enter
xchg
pop
scas
jae
insb
data16
dec
mull
or
std
push
sub
in
mov
mov
and
decb
enter
jns
cltd
fwait
dec
fidivl
inc
add
mov
in
imull
rclb
stc
mov
cltd
out
jae
and
or
js
xchg
and
xchg
sub
add
xchg
adc
ret
rorl
cmpsb
xchg
je,pt
shll
cmpsl
jl
cmc
fs
cmpsl
scas
push
out
out
sbb
mov
sbb
scas
nop
insl
xor
call
cmpsb
adc
fs
fstps
add
sub
mov
arpl
or
dec
leave
xorl
jle
xor
inc
or
jecxz
and
sahf
mov
cmp
shll
out
lcall
stos
insb
or
in
lods
daa
and
xor
xor
in
jne
rorl
and
mov
xchg
addr16
subb
inc
sahf
js
cmpsb
daa
insb
lret
clc
xchg
out
mov
int
and
lea
pop
or
sarb
xchg
xchg
ja
and
addr16
sbb
fstpt
jecxz
sub
cmp
daa
push
jb
mov
stos
xlat
mov
imul
mov
cmpsb
out
adc
mov
xchg
push
in
add
int3
imul
lea
test
adcl
fidivrs
ret
sub
jbe
add
cs
int3
dec
popa
mov
pop
add
cltd
stos
sub
fsubrl
push
out
popf
mov
xlat
or
dec
test
test
jecxz
je
fwait
arpl
cwtl
idivl
jns
xor
add
into
lret
xor
repz
andl
mov
or
cltd
xor
mov
adc
stc
add
xchg
adc
outsb
mov
inc
mov
push
mov
mov
test
cmpsl
testb
inc
fildll
fdivrl
mov
push
push
mov
shll
pop
fistps
and
fmuls
push
roll
jbe
xor
inc
push
jle
sub
mov
popa
add
aad
and
pusha
adc
sub
int3
lcall
or
std
mov
cmc
jmp
push
leave
or
mov
stc
loop
and
imul
push
movsl
pusha
das
sub
loop
jno
jge
sahf
xchg
mov
cltd
push
jp
aaa
jle
lret
sbb
push
xor
xchg
add
rolb
add
adc
cmp
jnp
fnstcw
xor
push
dec
cltd
cmp
inc
shl
inc
sub
out
fsubrs
inc
addr16
pop
dec
cmp
mov
in
imul
jno
inc
std
daa
leave
cmc
test
xchg
lods
fsub
xor
sarb
cmpsb
into
mov
iret
dec
lds
subb
xor
cmpb
lret
outsb
imul
inc
xchg
repz
dec
inc
xor
scas
xchg
daa
or
call
inc
mov
aad
test
fsub
sbb
icebp
rcrb
leave
addb
insb
loope
xchg
je
mov
pop
out
dec
scas
inc
xchg
popf
subb
orb
add
xchg
in
pop
call
cltd
and
gs
popa
adc
fisttps
inc
fistps
inc
xchg
fsubl
jp
daa
add
sarl
pop
push
mov
gs
add
fcoms
add
push
out
sbb
je
inc
inc
and
mov
sbb
jp
push
jo
sahf
inc
cmp
mov
sbb
inc
sub
imul
stc
arpl
sbbb
pinsrw
push
out
insl
cmpsb
jmp
mov
into
scas
jecxz
addl
jl
loopne
jb
jmp
popf
or
xor
jne
jns
test
add
xor
mov
idivl
mov
push
sbb
mov
cmp
les
mov
inc
jecxz
repz
mov
enter
xbegin
int
adc
inc
imul
lret
mov
in
adc
std
aas
dec
pop
pop
push
stc
mov
lock
and
or
mov
adcb
cli
sbb
es
inc
mov
and
fimuls
in
jp
add
xchg
adc
sti
xor
jbe
jl
mov
or
test
fistps
sbb
clc
inc
insb
fimull
xchg
dec
mov
or
cltd
js
sbb
mov
int
pop
sbb
mov
xchg
fwait
xor
loope
inc
jl
xchg
pop
lret
sbb
lcall
xor
in
mov
cli
or
pop
inc
inc
aam
dec
or
adc
push
gs
into
cli
push
neg
arpl
lahf
pop
dec
fldcw
cs
jns
dec
dec
sbb
mov
inc
call
cmpsl
mov
push
fadds
sbb
xchg
mov
mov
jb
lea
mov
movsl
ret
test
fnstsw
pop
add
inc
dec
xor
and
xchg
test
mov
or
arpl
inc
push
cmc
push
aas
sub
stos
cwtl
xchg
xor
push
out
mov
in
sbb
push
add
push
mov
xor
cmp
mov
nop
sahf
mov
int3
inc
push
add
push
cmp
daa
fadd
push
insl
dec
jle
and
inc
cmp
fs
push
cli
test
addr16
pop
push
aad
jne
jmp
lret
sbb
adc
add
dec
ljmpw
push
lret
mov
aas
pushf
es
ss
icebp
arpl
dec
and
cmp
lds
cmp
inc
mov
mulb
add
movsl
lcall
sub
xchg
scas
cwtl
and
inc
popf
rcrl
daa
sarl
jb
repnz
inc
xor
xchg
cmp
add
jnp
mov
sub
dec
and
sub
xor
aas
sbb
imul
data16
fiaddl
imul
pop
xchg
and
push
mov
inc
scas
sbbb
and
rclb
xchg
shl
mov
lahf
adc
loop
addr16
adc
cmp
cmp
clc
xchg
pop
filds
sbb
rolb
xchg
dec
cmp
push
lea
icebp
aaa
ret
sti
xchg
add
rol
outsb
mov
sbb
cltd
scas
jnp
or
add
aas
jmp
insb
xlat
xchg
push
xchg
repz
loopne
push
and
add
dec
cmp
in
test
mov
or
inc
inc
into
imul
add
pop
xlat
jecxz
fcomip
in
movsl
inc
mov
inc
bound
pusha
aaa
jae
roll
lea
xor
add
dec
imul
sub
inc
fmull
sub
nop
aas
loope
inc
bound
cmpsl
dec
imul
mov
pop
jnp
jne
mov
add
cs
in
testl
xor
out
mov
and
es
mov
andl
aam
sub
and
pop
cmp
popf
jg
hlt
cs
movsl
sbb
cmpsb
ret
jecxz
cmpsl
leave
cmp
push
bound
int
test
adc
mov
mov
ss
daa
sub
adcl
jne
into
cmp
imul
dec
sbb
roll
xchg
es
jge
mov
addl
mov
push
mov
xor
repnz
inc
lock
and
inc
in
stc
xor
push
sub
jg
sbb
jp
insl
aam
ret
xchg
inc
aas
pop
cmp
cmpb
lods
cltd
es
lock
loop
mov
and
mov
adc
jmp
adc
imul
adc
mov
outsb
adc
xor
rclb
loop
lea
jl
les
inc
mov
test
or
dec
popa
fbld
pop
sahf
stos
sbb
add
divl
and
xor
lea
inc
ss
jmp
xchg
and
sub
fst
mov
xor
ss
bound
out
mov
add
addr16
xchg
dec
das
repz
daa
push
jno
test
popa
aaa
inc
sub
lock
jg
add
pop
adc
jne
cmpsb
mov
inc
rcll
ret
xchg
pop
jecxz
fsubrs
cmp
sti
loopne
scas
xor
adc
add
or
xor
xchg
xor
inc
hlt
loop
or
out
and
dec
jge
sarb
lea
mov
push
lret
push
out
mov
dec
scas
pop
xchg
or
movsb
lahf
lea
cltd
lods
cmp
inc
jnp
xchg
imul
pop
repz
xor
add
sub
add
jp
les
rcr
lea
pop
sub
xor
adc
popf
adc
jmp
add
pop
sub
pop
jmp
shll
fisttpll
pop
push
int3
insb
jl
or
rep
ret
into
rolb
jmp
rol
fcmovne
ror
sub
mov
mov
std
push
sub
and
xor
mov
shrl
jle
test
into
pop
pushl
outsl
adc
test
cmp
xor
cmp
sbb
mov
adc
push
rcll
or
mov
inc
loopne
xor
ror
mov
mov
mov
and
push
popf
sub
inc
sbb
mov
iret
stc
dec
push
or
mov
rcll
cmp
ljmp
mov
imul
inc
xchg
sbb
into
jns
fisttpl
fsubrp
negl
dec
lds
movsl
fcoms
mov
lret
repz
ljmp
jno
or
hlt
mov
bound
movsb
bound
or
or
movsl
clc
daa
push
outsb
dec
out
sti
xchg
into
pop
adc
pop
cmp
mov
mov
sbb
mov
outsl
aaa
loope
pop
jmp
jle
adc
testl
lahf
or
pop
movsl
enter
leave
dec
movsl
cmp
loop
adc
test
lods
icebp
sub
dec
sarl
cmc
cwtl
andl
out
inc
cwtl
jecxz
push
popa
dec
hlt
or
and
cmc
ljmp
dec
insb
call
icebp
sub
xor
or
push
mov
jmp
js
mov
pop
cld
test
call
lods
shlb
lcall
xor
mov
xchg
mov
gs
jnp
loopne
test
inc
stc
mov
mov
gs
cwtl
addb
sub
jo
add
and
adc
inc
outsb
push
mov
xchg
mov
add
dec
test
mov
jecxz
lret
xor
mov
dec
popa
xchg
std
cmp
mov
popf
arpl
and
pop
aam
or
jo
int
repz
jne
adcb
cli
push
fwait
sub
fidivl
jle
jno
rclb
jbe
and
mov
jbe
imul
inc
sbb
mov
jnp
out
icebp
adc
dec
and
pop
pop
add
iret
movsl
addr16
jle
popa
out
and
lds
push
or
pop
pop
xor
test
adc
imul
out
lret
or
push
rcrb
pushf
dec
mov
push
int3
xchg
push
xorb
xchg
inc
add
mov
hlt
push
ret
xchg
push
mov
sub
xor
fnstsw
dec
mov
mov
sbb
or
sbb
pop
xor
mov
xor
dec
add
cmc
mov
xlat
or
xchg
push
inc
jmp
push
jp
xchg
aam
leave
iret
jecxz
adc
inc
mov
mov
outsb
xchg
insl
outsb
dec
jle
addr16
xchg
sub
inc
movsb
out
mov
sbb
sbb
inc
notb
data16
lods
pushf
push
inc
fisttps
dec
insb
pop
shlb
outsb
lock
ljmp
cmp
sub
jo
iret
addr16
push
outsl
jns
inc
arpl
movsl
scas
gs
and
rorb
imul
pop
xchg
sub
enter
sti
int3
out
pop
sub
cmp
fwait
jmp
xchg
push
imul
in
cmc
flds
outsb
sahf
push
stc
jmp
cmp
lcall
jg,pt
daa
es
mov
outsb
enter
dec
into
adc
into
add
dec
imul
and
jmp
outsb
cwtl
in
clc
sti
mov
fs
add
std
flds
clc
add
int
add
push
or
or
mov
stos
lcall
sub
testb
dec
pushf
inc
add
dec
xchg
out
pop
fdivrs
ret
cmp
addb
and
notb
mov
mov
sbb
xlat
data16
insl
mov
les
in
or
xor
lahf
push
loop
dec
mov
pop
add
mov
fs
dec
icebp
cs
jns
lods
leave
mov
out
inc
or
in
adc
pop
push
cltd
mov
movsb
jno
jb
mov
push
popa
stc
enter
pop
sbb
out
inc
out
sub
rcll
fbstp
jae
enter
xor
sti
lods
pop
mov
movsl
adc
xor
imul
and
outsb
pop
test
into
lcall
sbb
sbb
mov
and
push
adc
xor
mov
xchg
jne
nop
inc
jmp
sbbb
jge
outsb
cmpsl
lahf
out
xor
gs
int
push
aaa
int
fimull
mov
dec
je
daa
xchg
cmp
aas
fcmovnu
pusha
inc
cmp
push
rcl
fnstcw
in
sub
push
sahf
pop
call
push
sbb
push
cmpsb
cmp
gs
jp
xchg
inc
test
jg
outsl
inc
je
insb
leave
insl
loop
cmp
mov
sub
popf
dec
mov
hlt
arpl
push
push
insl
outsb
fs
loopne
cmp
xor
in
fs
push
popf
adc
sub
pusha
out
mov
cmp
out
mov
mov
dec
or
les
dec
fisubrl
je
pop
lds
add
adc
add
fisubrs
rcll
or
inc
xchg
and
xchg
lahf
sbb
cmp
dec
push
sub
mov
imul
lock
jmp
in
fs
dec
bound
data16
pusha
xchg
mov
insb
pusha
xor
outsl
mov
ds
shrl
or
adc
nop
out
adc
adc
and
xchg
enter
cli
lret
push
adc
sub
aas
mov
jno
fwait
mov
or
push
aas
xchg
mov
stos
orb
dec
push
and
aaa
imul
add
dec
aaa
mov
ljmp
outsl
mov
loop
cmc
popa
fistps
adc
cli
aas
movsb
mov
rol
mov
push
xchg
xchg
lods
jl
in
mov
fdivrp
fidivs
sub
adc
mov
xlat
mov
dec
add
dec
stos
push
inc
push
pop
add
xor
cmpsl
xor
mov
and
mov
push
addr16
cli
push
dec
mov
sti
cmp
dec
xor
clc
dec
push
ficomps
lock
int
inc
pop
cmp
push
jae
andb
lock
jb
incb
mov
js
fistpll
push
jb
test
and
insl
out
add
test
and
into
aam
sub
movb
rclb
sub
pop
in
pop
in
stos
out
stos
lcall
push
push
pusha
in
movsb
ds
cmp
fldcw
mov
notl
test
leave
sbb
mov
mov
xchg
add
add
push
sbb
nop
mov
mov
cmpsb
jl
cmp
test
notb
sarb
mull
inc
mov
jmp
mov
repz
inc
fistps
or
sarb
sbb
out
int3
fwait
and
sbb
add
jge
pop
add
mov
push
dec
xchg
shrb
sub
xor
out
push
pop
in
jle
bnd
fwait
repnz
outsl
inc
push
xor
fnsave
push
mov
dec
pusha
inc
xor
jmp
mov
lret
dec
xchg
mov
leave
test
pop
mov
jmp
mov
push
dec
mov
into
mov
hlt
inc
adc
dec
pop
int3
aas
sub
sbb
mov
cmp
push
shlb
push
loope
pop
or
mov
and
test
invlpg
adc
and
pop
mov
pop
addr16
mov
sbb
and
out
pushf
lods
xor
pop
int
shl
cmpsb
movsb
jae
into
and
movsl
push
mov
jno
sarb
bound
nop
adc
or
xchg
add
xor
mov
and
adc
add
and
int
int3
movsb
shrb
jg
hlt
cmp
cmp
adc
insl
adc
mov
pop
dec
push
scas
mov
xchg
cmpsl
xchg
and
or
add
jnp
mov
mov
into
pop
sub
cmp
and
enter
mov
cmp
fistpll
and
cmp
sub
ss
fsubrp
lea
fst
outsl
sub
ret
sbb
daa
push
aad
jne
idivl
scas
dec
pop
xchg
and
movl
push
stos
jbe
notw
fildl
dec
sub
push
cltd
mov
jae
jo
jmp
mov
shll
fdivr
out
inc
cmp
ret
out
int
mov
std
movsb
push
negl
int3
sbb
push
dec
imul
rol
or
sahf
mov
jns
inc
xchg
mov
fstpl
sbb
and
aam
dec
ret
loope
xchg
sbb
push
out
or
icebp
test
or
loop
std
test
dec
dec
pop
sbb
ljmp
aaa
das
sbb
sub
adc
dec
pop
out
cmpsb
pop
push
in
lret
dec
sbb
bound
outsb
pop
fsubp
enter
xchg
in
cmp
or
inc
call
cmp
sbb
jl
bound
xchg
scas
jl
icebp
push
loopne
cmovg
movsl
or
jge
dec
push
mov
outsb
pop
insl
mov
jae
and
or
frstor
sbb
xor
push
mov
scas
jge
fimuls
inc
pop
push
lods
push
add
jmp
andb
in
fwait
daa
jle
push
in
sarb
dec
scas
cltd
cmp
imul
xor
xchg
mov
lahf
mov
gs
push
pop
jg
jno
add
jns
call
into
add
cmp
sbb
cmp
dec
adc
and
ret
jbe
ficoms
jb
cmp
loopne
add
mov
cmp
insl
shl
cwtl
sub
pop
push
in
mov
je
sbb
and
inc
es
jl
mov
sarl
lret
lret
jp
push
pop
pop
mov
dec
xor
int3
je
jbe
mov
in
mov
add
gs
xor
cmp
outsl
idivb
stos
cmpsl
enter
push
lods
mov
jecxz
sub
add
add
es
add
enter
jmp
shlb
mov
out
test
or
sbb
lods
jg
jb
add
insb
xor
in
jg
adc
nop
test
push
xor
lock
in
inc
push
mov
cltd
jmp
pop
lods
inc
xor
cmp
inc
inc
jmp
xor
jl
ret
pusha
clc
pop
aas
bound
sub
mov
popa
dec
and
mov
lock
mov
fwait
xchg
xchg
in
mov
cmp
insb
sbb
hlt
add
out
pop
mov
test
cmp
xchg
push
jl
arpl
or
loopne
std
xchg
imul
ret
in
pop
adc
cmp
imul
fucomip
sbb
xor
push
mov
movsl
inc
dec
add
arpl
xchg
and
repnz
mov
or
stc
mov
gs
xlat
sub
adc
jo
inc
adc
pop
daa
mov
out
and
sub
popf
pop
xor
inc
sahf
fwait
mov
insl
pop
gs
mov
push
gs
add
pop
cwtl
add
sahf
dec
daa
and
outsb
mov
mov
in
orl
push
push
ret
xchg
sub
push
or
loopne
cli
jmp
mov
pop
mov
mov
addb
pop
xchg
icebp
xor
hlt
sub
out
or
adc
add
sub
cs
imul
inc
add
inc
mov
xchg
lret
push
inc
rcrb
les
xchg
adc
jnp
jmp
sbb
push
xchg
jp
cs
xor
sarl
xor
mov
mov
out
dec
test
jb
insb
jo
xchg
test
and
out
movsb
mov
lret
rorb
insb
lock
lds
shrb
loopne
jle
lcall
in
int
rcr
loopne
orl
pop
and
test
jb
mov
mov
or
push
and
mov
pcmpgtb
out
ret
jae
adc
cmp
daa
dec
ljmp
lods
lret
aam
push
add
xor
test
lret
call
ret
pop
std
jmp
popf
lret
shrb
in
mov
push
addb
dec
cltd
jl
data16
aam
pop
mov
mov
shrl
xchg
pushf
sbbl
int3
xchg
pop
and
cmp
flds
shl
push
jno
mov
in
aam
in
mov
inc
hlt
cmp
adc
pop
adc
sbb
mov
sbb
sbb
ljmp
or
call
bound
testl
insl
mov
add
and
sbb
add
sbb
in
aad
sub
pop
dec
pop
mov
repz
jl
lock
fcomp
adc
pop
cmp
add
pop
hlt
pop
popf
dec
xchg
sub
movl
push
mov
mov
adc
adc
ret
push
jl
mov
fstpl
push
bound
stos
cwtl
sbb
xchg
pop
outsb
divb
es
arpl
pop
dec
mov
hlt
mov
testl
mov
ljmp
jecxz
mov
lcall
out
popf
loop
jecxz
lret
clc
fwait
pop
push
in
xor
push
in
std
das
cmpsl
mov
pop
cmpsl
push
push
add
or
and
sbb
mov
inc
jecxz
mov
add
dec
aad
dec
pop
add
add
xchg
call
scas
add
lea
pop
ret
fiaddl
pop
and
inc
or
addl
and
arpl
lds
popa
std
add
pop
movsb
loop
addr16
mov
push
shl
adc
stos
pop
jmp
mov
pop
sub
in
movsb
jmp
dec
sub
push
jno
adc
mov
cmp
ss
sahf
js
sbb
xlat
add
lcall
dec
fldl
dec
pusha
adc
mov
push
sub
push
fwait
lret
icebp
aad
test
aas
leave
and
mov
mul
jge
fisubs
lret
mov
jae
jnp
xlat
out
ja
rolb
dec
mov
call
rcrl
mov
add
fmuls
and
jb
arpl
xor
adc
rcr
outsb
sti
rorb
pop
xor
xlat
mov
cmp
sti
jo
fiaddl
inc
lret
push
mov
mov
hlt
negb
push
inc
fs
dec
sub
fistl
leave
shrb
inc
cmc
gs
xor
out
push
cltd
sbb
cs
repz
scas
cmc
lods
mov
loope
adc
dec
cmp
inc
in
sbb
xor
xor
jge
mov
shr
jge
data16
mov
sub
popw
jp
sbb
mov
das
cmp
out
mov
test
and
je
mov
cmp
subb
mov
inc
ret
cmpsl
fnstenv
repz
pop
addr16
icebp
mov
fimull
daa
cld
mov
jns
cld
pushf
dec
clc
jmp
iret
icebp
adc
fisubrs
daa
ljmp
inc
dec
loop
mov
cld
jle
je
push
sbb
mov
mov
ljmp
test
pop
push
xchg
gs
and
xlat
test
cmp
out
lret
bound
aaa
stos
pop
mov
adc
frstor
hlt
adc
mov
sbb
jmp
outsb
mov
ds
xchg
fildll
push
lock
testb
jns
shl
les
in
mov
jl
push
test
aam
jb
adc
push
xor
lock
jbe
push
jmp
lea
ljmp
xor
push
mov
mov
mov
fisubs
cmpsb
cli
adcb
int
out
fwait
xchg
cltd
scas
inc
insl
mov
movsb
popl
jge
movsl
test
xchg
cwtl
and
lret
nop
movsb
sahf
sub
xor
mov
pop
out
dec
push
aas
jb
mov
jg
and
pop
iret
inc
jp
fsubs
inc
jmp
cmc
mov
push
aad
cmp
add
xchg
xor
out
test
jno
pushf
xchg
xchg
in
jl
insb
scas
fdivrp
jbe
outsl
stos
dec
push
cld
popa
jecxz
out
lcall
dec
js
movswl
arpl
js
sub
xchg
mov
scas
pop
fs
dec
out
es
nop
stos
test
popa
mov
mov
sbb
cwtl
sbb
in
add
jnp
aam
cltd
rorb
xchg
and
mov
fistpll
stos
sahf
mov
in
add
mov
xor
ret
aaa
mov
mov
cwtl
rcrb
out
add
lcall
cld
inc
enter
pop
cli
icebp
push
movb
jb
mov
xor
inc
push
inc
cmpsb
movsb
xor
loop
test
in
mov
adc
fnstcw
add
popf
jns
movsbl
push
aas
out
mov
jmp
stc
pop
mov
xor
rol
mov
xchg
out
movsb
sbb
push
outsl
xlat
push
pop
or
adc
cmp
sbb
sbb
push
daa
xor
insl
scas
add
jno
insl
dec
sub
sbb
test
jae
push
dec
and
shll
lods
iret
popf
mov
jo
cmp
test
nop
iret
outsb
out
pop
pop
add
xor
les
sbb
loopne
mov
xor
lods
into
jecxz
sbbb
andb
or
dec
out
lock
mov
inc
jle
pop
icebp
mov
add
out
mov
dec
push
push
and
loop
and
addr16
xor
sbb
inc
gs
cmp
cmpl
nop
mov
xchg
jns
insb
fsubs
and
add
movb
lods
push
push
insl
stos
add
xchg
xor
xchg
sbb
xlat
shr
pop
sub
pop
js
aam
mov
pop
aam
adc
out
mov
xchg
loop
add
lcall
cmp
xorb
sbb
addr16
fwait
add
clc
js
lods
iret
jbe
cs
jmp
subl
enter
jl
popf
nop
int
imull
cmp
cs
ja
jl
mov
add
in
sub
cmp
and
sbb
test
xchg
push
pop
test
sbb
scas
and
add
push
ja
dec
jb
push
mov
out
stos
je
in
xor
mov
push
cli
sbb
lcall
lods
test
pop
fidivrl
sbb
je
inc
dec
inc
js
push
cld
add
iret
out
cmpsl
adc
stc
enter
pop
loopne
push
repz
push
sub
imul
outsl
aam
idivb
cwtl
and
shl
pop
in
out
and
loope
sub
cmpsl
fdiv
or
mov
mov
adc
js
mov
bound
hlt
imul
fiadds
push
icebp
aas
fwait
notb
cmp
fmulp
jae
sbb
push
fldcw
ficoms
iret
mov
stos
sbb
out
fistpl
mulw
dec
repz
xor
mov
or
repnz
flds
imul
aad
xchg
cwtl
cmc
push
inc
pop
imul
nop
dec
into
popf
add
shll
rol
jns
add
jmp
out
leave
mov
add
add
pusha
into
into
icebp
lock
cli
dec
jae
fwait
mov
add
cli
imul
cmp
push
aaa
outsl
jle
xchg
pop
lods
cmp
jmp
fiadds
es
stc
jae
jmp
pop
xchg
jl
mov
into
xor
loopne
sahf
cld
or
andl
dec
js
test
cli
orb
roll
js
cmpsl
out
pop
ss
inc
xchg
out
xor
xchg
std
out
xchg
imul
es
push
dec
adc
sub
jp
fwait
cmpsb
scas
mov
cmpsb
cwtl
jp
pop
femms
inc
mov
insb
push
std
pop
jo
sub
in
mov
popa
jns
rsm
out
mov
xchg
out
add
test
adc
mov
mov
out
jmp
scas
push
mov
add
cltd
adc
sbbb
ljmp
loope
inc
call
nop
insb
roll
mov
loop
leave
jge
mov
adc
loope
sbb
test
sub
imul
xchg
adc
and
cli
push
lahf
mov
adc
mov
je
inc
xor
push
and
out
in
movsl
out
lea
fs
pop
test
fisubrl
push
jg
add
push
sub
jno
mov
or
inc
jge
test
xchg
cld
sarl
adc
and
or
push
test
in
pusha
popa
push
sbb
and
cld
add
jp
and
mov
test
mov
movsl
xchg
xchg
dec
clc
mov
xor
inc
fcomi
xchg
xchg
xchg
xor
out
jmp
inc
js
aaa
jle
in
sti
push
leave
jns
xor
mov
mov
push
push
test
out
rorl
orb
imul
jo
mov
into
xlat
fcoms
pop
movsb
and
lock
mov
movsb
sbb
and
sti
int
test
xor
push
add
add
sti
into
xor
xchg
insb
sub
loope
push
aaa
cmc
icebp
inc
or
cmp
pusha
cld
fwait
call
xor
push
sbbl
daa
jl
jno
jmp
mov
lea
sbb
daa
push
cli
je
lahf
sbb
inc
enter
cltd
or
sub
push
mov
and
push
mov
mov
mov
in
inc
sub
js
xchg
ljmp
add
test
aaa
pop
xor
xchg
lcall
test
cmp
add
mov
sub
fnstcw
mov
xchg
mov
mov
xor
arpl
shlb
pop
icebp
jno
sbb
sbb
ljmp
imul
mov
mov
loop
call
call
addb
xchg
sbb
push
imul
cltd
out
mov
shrb
cmp
leave
cmc
dec
xchg
jmp
push
or
push
daa
stos
test
stos
or
xchg
inc
lea
je
scas
pop
jmp
adc
mov
mov
repz
jae
add
shlb
loope
dec
cwtl
pop
movsl
insl
stos
in
xchg
pop
leave
int3
sbb
cmp
xchg
xchg
xchg
inc
inc
sti
mov
push
mov
push
pop
cwtl
movsl
xchg
adc
pop
cmc
add
cmp
mov
mov
mov
cld
jb
cmp
stos
pusha
aas
pop
popa
fcmovnu
inc
out
and
cmpsl
push
pop
neg
fnsave
mov
cmp
enter
fwait
nop
ja
jae
jecxz
mov
test
jno
adcl
in
int
jbe
sbb
xchg
in
rorl
xchg
xor
clc
fstpt
cmp
cmp
in
int3
inc
and
in
enter
std
jge
add
jne
mov
in
sub
or
add
call
sbb
mov
pop
pop
scas
out
ret
stos
or
sbb
sub
sbbb
inc
push
xor
icebp
mov
or
mov
lahf
adc
call
or
add
ds
shll
xor
insb
test
mov
jo
in
pop
incb
popa
mov
repz
pop
sbb
lds
rorl
mov
test
fs
adc
and
loope
add
dec
sub
mov
inc
aam
stc
dec
jl
clc
mov
xor
add
in
mov
in
test
add
mov
xchg
in
sub
out
sbb
shlb
scas
outsl
adc
inc
sahf
ljmp
push
imul
sub
mov
mov
inc
sub
lds
jno
call
push
adcl
mov
je
pop
mov
xor
sbbb
test
daa
aam
jno
and
xchg
sub
insl
mov
daa
pop
dec
gs
fsubrs
lahf
mov
or
loope
mul
sub
fstpt
inc
cmpsl
push
pop
daa
daa
lods
enter
dec
jp
lods
and
xchg
cmc
add
mov
cltd
iret
enter
sahf
aas
or
push
dec
mov
mov
dec
mov
xchg
adc
js
pop
xchg
xchg
lods
mov
test
scas
adc
xchg
jo
pop
mov
jnp
jo
cwtl
out
ss
cmp
sahf
cld
lret
repnz
xor
mov
pop
repnz
ja
sub
adc
dec
push
sub
mov
lods
jp
sbb
nop
out
or
es
xor
push
jge
ljmp
add
xchg
pop
add
xchg
pop
push
mov
aad
sub
cmp
repnz
push
mov
repnz
mov
mov
mov
test
imul
test
ret
cmp
dec
sarl
jl
fnsave
add
push
lds
cltd
pushf
pop
loopne
push
out
xorl
shll
push
ret
mov
fadd
sbb
inc
mov
aad
xchg
dec
mov
cs
ficomps
orl
rolb
mov
outsb
movsl
xchg
bound
ss
lret
xor
test
sbb
mov
cmp
and
aas
loop
sub
shll
push
jne
fwait
adc
icebp
call
mov
mov
push
push
les
pop
push
mov
loopne
pop
lea
add
dec
xor
xor
lea
add
cmpsb
data16
leave
xchg
push
rolb
jmp
repz
into
xor
out
mov
sbb
bound
or
scas
dec
test
adc
or
dec
mov
pop
fsubs
and
pusha
inc
mov
mov
xlat
jne
add
add
add
in
jg
adc
cmp
add
sbb
orl
cmc
test
cltd
sbb
push
sti
stc
xchg
mov
mov
enter
add
or
pusha
dec
fcmove
mov
xor
mov
lcall
mov
adc
or
aam
xor
lcall
adc
mov
cmp
into
pop
add
cmpsb
jns
lock
sbb
movsb
int3
sbb
jle
loopne
jne
es
jno
push
std
imul
sub
in
mov
inc
mov
mov
adc
sbb
xchg
mov
pop
outsl
loopne
jb
mov
pop
scas
add
addl
mov
mov
int
jl
loopne
cld
sub
and
mov
mov
bound
cld
addr16
mov
dec
mov
add
push
adc
mov
add
sub
test
pop
std
mov
pop
sub
xor
add
fiaddl
pop
js
int
push
stos
ret
imul
lea
push
ljmp
dec
xor
jne
sbb
xor
push
mov
cwtl
adc
mov
pop
push
js,pt
cmpsl
mov
dec
xor
push
call
aaa
mov
out
imul
jg
rcr
fbstp
out
mov
cmp
int
rcll
push
jmp
ficompl
xchg
jb
pop
cltd
and
repnz
mov
jnp
jecxz
mov
lods
aaa
lock
call
pop
rcrb
mov
mov
mov
dec
dec
std
cmp
dec
cli
mov
fwait
sti
add
insb
outsl
data16
repz
test
cmpsl
out
fyl2xp1
fisubl
out
nop
pusha
mov
sbb
sbb
neg
jle
mov
jl
jns
xchg
insb
and
add
and
int3
loopne
ds
ret
xchg
inc
adc
jae
fdivl
dec
mov
xchg
jnp
scas
push
xchg
mov
dec
mov
outsl
cmp
adc
rcr
out
xchg
push
mov
inc
mov
stos
mov
clc
sbb
insb
ja
cmpsl
loop
mull
dec
push
inc
mov
hlt
push
or
bnd
sub
ja
xor
rclb
es
hlt
sub
sub
fs
add
pop
scas
inc
popf
out
into
ljmp
mov
call
jge
lods
sbb
push
mov
push
xchg
pop
adc
push
movsb
mov
lahf
rclb
cmpsl
pusha
xor
cmp
mov
cmpsb
mov
and
xor
stos
add
lret
cltd
outsl
pusha
cmp
popf
mov
jnp
jnp
mov
mov
shl
stos
cltd
out
movsl
pop
leave
hlt
pushf
stc
cltd
cmp
leave
enter
orl
std
imull
popf
dec
fs
jns
rorl
cmc
jge
out
dec
jbe
mov
sub
icebp
jmp
pop
pop
cld
push
mov
inc
ficompl
and
xor
ret
xor
dec
dec
leave
sub
push
mov
adcb
pop
push
sbb
loop
xchg
mov
lods
cli
repnz
add
std
jb
inc
mov
and
xchg
in
arpl
push
mov
lcallw
cltd
mov
pushf
filds
mov
lret
cs
dec
lods
cmc
js
pop
xor
fsubrs
xchg
imul
adc
out
push
sarl
stc
mov
push
xchg
movsl
jl
dec
push
jmp
jg
ja
and
cmpb
daa
in
fisubrs
int3
jmp
cld
sbb
and
jg
shrl
jno
and
insl
aam
stos
outsb
inc
push
into
pop
xor
xchg
pop
mov
es
cmp
xor
fstl
outsb
sarb
lahf
pop
mov
xor
cld
push
mov
addr16
jnp
jecxz
mov
adc
fldcw
inc
pushf
sbb
sbbb
adc
cmp
sbb
jae
stc
pop
test
ds
inc
lret
cmpsl
mov
fisubl
fsubs
lds
testb
sub
addl
pop
dec
cld
loopne
and
das
sbb
stos
cmp
mov
xchg
in
lods
cmpsb
pop
mov
mov
cwtl
dec
fucomip
iret
sbb
lahf
notb
inc
add
mov
stos
dec
push
imul
push
push
xchg
mov
dec
and
mov
sbb
repnz
fwait
sub
inc
lock
xchg
shll
mov
rcl
fcmovnb
cmp
jb
sub
adc
test
sbb
pop
bound
push
lret
pop
popa
les
lods
push
loop
ja
dec
pop
aas
fildll
std
loopne
scas
ret
loop
xchg
ss
jbe
imul
lret
std
or
mov
iret
cld
mov
out
or
daa
sub
inc
inc
test
addr16
lcall
aas
insl
mov
gs
lahf
cmpsb
and
and
lock
xor
aam
xchg
rclb
pop
hlt
movsb
jecxz
cmp
mov
jg
in
sti
jae
sub
data16
repz
mov
dec
mov
mov
mov
pmulhuw
inc
sbb
gs
addr16
dec
icebp
mov
and
pop
hlt
pop
cli
hlt
pop
stos
movb
push
cli
insl
sub
sub
clc
jge
sub
subl
addr16
decl
pop
add
scas
and
enter
cmc
mov
enter
ljmp
jge
xchg
out
sarb
std
dec
mov
pop
and
daa
xor
adc
pop
or
mov
jp
cmp
aam
xchg
popf
mov
enter
or
lret
stc
rcll
fcoml
mov
mov
add
dec
shr
push
ss
imul
dec
andl
and
dec
mov
std
push
mov
dec
sub
dec
mov
xlat
loop
out
dec
mov
sahf
xor
out
int
add
roll
inc
inc
bound
andl
loopne
or
out
bts
add
icebp
mov
pop
mov
sbb
push
xchg
filds
xlat
mov
add
fnstsw
xlat
les
or
mov
cmp
mov
mov
cmp
insb
mov
scas
add
push
int
mov
xchg
and
cli
dec
lods
cld
cmp
mov
popa
add
call
test
inc
mov
scas
js
sub
or
sahf
lea
pushf
jns
mov
icebp
and
xor
fisubrs
outsb
add
lock
cmpb
enter
iret
pusha
add
mov
negb
and
push
mov
mov
adc
cli
loope
inc
mov
cmpsb
idivl
rcrb
das
js
xchg
xchg
xor
jecxz
loopne
mov
jns
pop
and
or
stc
sub
mov
dec
mov
jmp
popf
dec
enter
mov
dec
loop
push
jmp
in
out
and
or
pop
adc
enter
test
call
mov
fistl
or
movb
mov
shrb
stos
push
mov
jmp
nop
test
testb
push
dec
mov
fdiv
insb
loopne
data16
xor
push
ljmp
negl
push
nop
dec
mov
xlat
push
movaps
mov
in
out
inc
xchg
adc
mov
outsl
fidivs
xchg
daa
adc
sbb
push
lcall
les
mov
notb
rcrb
xchg
lods
push
jge
movsb
outsl
jns
push
sbb
dec
jno
test
mov
push
push
mov
adc
lret
inc
sahf
dec
pop
out
int3
push
mov
ja
lods
scas
lea
lods
in
adc
inc
cmp
push
or
gs
jecxz
cmpsl
loopne
xchg
arpl
add
mov
cmp
pop
mov
popa
fidivrl
test
pop
stc
sub
loopne
dec
sub
push
ja
iret
xchg
lds
pop
push
xchg
jp
xchg
inc
dec
add
sub
fs
cmp
lea
enter
mov
push
inc
xlat
and
popa
xor
push
lcall
cmpsb
xor
mov
mov
lret
push
daa
neg
out
cmpsl
mov
mov
jl
xchg
push
adc
out
ljmp
bound
mov
nop
mov
popf
xchg
int
cwtl
mov
jmp
in
dec
dec
jo
aad
out
daa
xchg
insb
lods
mov
jno
sahf
jo
adc
inc
add
jo
push
lret
jo
dec
lock
dec
lcall
fsubrp
jp
ficomps
in
cmp
cmpsl
leave
mov
out
orb
loopne
pop
nop
sub
push
sahf
popa
nop
jge
sub
dec
das
shlb
popa
stos
mov
push
int3
in
and
movsl
lock
stc
add
dec
and
add
out
sub
xchg
dec
dec
sub
cltd
pop
jns
jns
ljmp
mov
push
push
xor
popa
rclb
sbb
adc
jne
rclb
lds
mov
xor
xchg
pop
mov
xor
add
xchg
lods
in
mov
push
mov
inc
jns
bsr
mov
xor
mov
inc
stos
lret
pop
or
in
jo
mov
jl
dec
mov
add
cmc
test
mov
push
shrb
icebp
mov
xchg
test
adc
sti
mov
mov
lahf
dec
and
push
adc
stos
mov
pop
mov
in
mov
and
mov
arpl
mov
jle
sahf
loopne
add
push
dec
cmp
mov
popw
lret
push
sbb
cwtl
movsl
cmp
mov
cmp
xor
cltd
push
mov
push
push
andl
mov
out
or
lods
pushf
push
outsl
cmp
mov
cmpsb
sbb
push
mov
xchg
push
cmp
mov
add
pop
je
xchg
js,pt
test
pop
jecxz
pusha
shll
lock
les
jge
imul
aad
scas
jmp
mov
pop
cltd
lds
push
fidivs
inc
jns
xchg
ret
lea
or
sbb
push
pop
mov
jnp
cmpsb
cmpsb
in
ror
or
mov
lods
mov
dec
ja
lcall
data16
ja
lret
ja
pop
xchg
adc
stos
add
rcrl
xchg
enter
pop
jp
cmpsl
mov
jge,pt
sub
sbb
mov
adc
lcall
lea
aam
xor
fwait
pop
adc
lods
push
or
incl
pushf
and
js
aam
movsl
sub
pop
cmp
js
adc
insl
jne
sbb
mov
idivb
cmp
pop
xor
imull
inc
adcb
lcall
repnz
loop
and
fwait
loop
nop
dec
das
dec
and
sbb
es
inc
cwtl
arpl
movsl
sbb
jne
pop
in
cmpsl
push
jmp
ret
inc
test
outsb
mov
aam
roll
mov
and
mov
lret
add
js
push
sbb
xor
jmp
cmp
xor
and
test
bound
test
test
test
inc
movsl
or
pop
mov
out
mov
pop
iret
imul
fmull
xchg
loop
sub
xor
out
xor
mov
jmp
sti
xlat
int3
inc
rcrb
loop
les
stos
push
out
inc
cmp
xchg
shll
bound
and
push
aad
mov
push
inc
ss
ja
pop
mov
out
aam
mov
dec
out
dec
aad
shr
sbb
aam
lret
repz
adc
dec
mov
repz
xchg
out
jns
int3
mov
cwtl
cltd
scas
lock
mov
pop
mov
out
mov
and
jle
sbb
scas
xor
sub
movsl
std
xor
popa
arpl
cmc
sbb
xchg
dec
ss
orl
mov
sub
mov
jb
stc
mov
and
and
ret
out
jg
or
dec
mov
lods
movsl
call
sbb
mov
insb
mov
std
jo
int
mov
xor
loope
clc
into
stc
test
loop
or
pop
xor
and
lods
addb
sub
and
xchg
mov
push
cmp
ret
push
xchg
mov
std
mov
push
and
xchg
es
mov
fwait
aaa
adc
xlat
test
dec
in
in
cltd
ret
adc
mov
sbb
int
stos
int3
xor
or
or
adc
push
and
mov
cmc
pop
pop
cmpsb
sub
loop
jns
stos
jb
sbb
fstpt
inc
fnsave
or
inc
shr
inc
fs
ret
or
arpl
fs
sbb
inc
xor
das
xchg
and
push
sbb
xchg
mov
mov
xor
adc
mov
dec
lcall
mov
sar
cmp
or
cmpsl
cmpsl
pop
stc
dec
hlt
dec
and
cmp
push
fdivr
add
sti
test
sub
or
lods
pop
dec
jbe
sbb
xor
dec
addl
ja
nop
adcb
lods
push
dec
push
test
andl
jmp
cmpsb
dec
cli
movsb
lods
es
mov
and
loope
inc
jge
mov
je
xchg
scas
cmp
hlt
rcrb
lds
jmp
rcr
sub
xor
push
mov
inc
js
push
addr16
adc
inc
pop
leave
aad
iret
jl
inc
fstps
inc
sbb
pop
mov
mov
xor
aam
call
xchg
lds
call
xchg
or
and
and
gs
adc
jne
inc
sub
sbb
lods
and
and
int
xchg
mov
cmp
in
mov
cmpsb
xor
push
sti
js
lock
push
sub
add
dec
cwtl
sub
jo
notl
fcoms
int
enter
push
cmp
jl
shl
add
cld
cmp
push
fdivl
out
adc
fs
cld
out
mov
in
mov
inc
or
lea
or
lret
loop
out
sbb
imul
fistps
jnp
xor
scas
sahf
cmovb
mov
and
cmp
add
in
loope
jbe
jno
mov
fcmovbe
pop
mov
xchg
jle
jmp
xorl
mov
push
addr16
cli
adc
cmp
jbe
push
ss
cmp
cmp
push
shlb
xchg
pop
pop
pop
inc
mov
mov
adcl
sbb
or
or
pushf
adc
pop
lahf
sbb
nop
ljmp
mov
clc
sbb
xchg
push
cmp
xor
mov
jge
or
jl
mov
sbb
test
enter
aaa
adcb
int3
mov
inc
mov
fwait
ds
sbb
lret
adcl
lds
or
dec
sub
mov
sub
lret
filds
jle
insb
insl
xchg
cwtl
xor
sub
dec
jo
loopne
xlat
inc
pusha
mov
in
cld
push
xchg
jle
cmp
sub
loopne
add
addb
inc
push
inc
pop
out
pop
xchg
dec
loop
mov
sarl
sahf
inc
xlat
mov
std
pop
ret
pop
xor
pop
inc
jns
rorl
movsl
mov
fwait
outsl
adc
push
fnstenv
dec
in
add
xor
push
in
testb
out
movsl
mov
mov
mov
lahf
popa
fimuls
lock
aad
lahf
sti
leave
lahf
push
and
movsb
aas
inc
pop
loope
inc
cmpsb
pop
ljmp
mov
orb
sub
clc
or
sbb
lcall
loope
xor
or
jg
mov
sbb
outsb
cmpsb
stc
cmp
xor
out
sbb
mov
inc
dec
test
imull
pop
iret
push
jne
pop
call
sti
inc
pop
scas
cld
test
nop
xchg
and
mov
xchg
cmp
sub
nop
insl
cmp
mov
mov
pop
inc
push
or
jg
rcll
mov
pop
lcall
ja
jb
lret
in
cmp
pop
popa
ficompl
stc
hlt
cmp
inc
cmp
shlb
mov
int
lret
orb
mov
cmpsb
cmp
push
mov
push
add
movsl
inc
inc
out
stos
xchg
ja
sahf
mov
jmp
inc
insb
in
mov
dec
test
jne
mov
adc
jmp
mov
jecxz
jg
mov
dec
pusha
pop
hlt
mov
push
sti
jb
movsb
addr16
stc
idiv
inc
xor
das
test
shlb
popa
dec
jl
dec
adc
sbb
jl
jns
call
enter
jle
stos
mov
rolb
cmp
test
nop
mov
in
loop
mov
and
imul
scas
in
jg
cltd
std
out
cld
call
aaa
push
inc
mov
bound
or
fsub
jns
push
wrmsr
jb
call
and
xchg
and
sub
lock
jns
jae
ret
cmc
lods
lods
sbb
inc
lcall
xchg
fisttpll
sub
add
pop
jmp
jnp
divb
fnstenv
hlt
dec
cmp
pop
xor
mull
and
test
into
test
clc
xor
or
mov
mov
sbb
sub
mov
movsl
and
stos
lds
push
push
repnz
stos
inc
jg
xor
adc
je
fldenv
pop
dec
push
xor
mov
fistps
pop
stos
les
push
sbb
jg
dec
jb
and
xchg
aam
insb
je
adc
xchg
gs
jl
sbb
icebp
cmp
mov
jo
fmuls
inc
repnz
cwtl
pusha
jp
mov
imul
out
out
fmull
cmp
scas
cmp
data16
and
pop
jno
mov
std
mov
adc
pushf
lret
sub
xchg
dec
ficomps
dec
in
pushf
jae
sbb
mov
pop
xchg
xchg
push
cmp
xor
xchg
adc
in
aas
inc
imul
sarb
push
test
pop
pop
or
sbbb
add
xchg
mov
gs
sub
loopne
xor
int
cmp
mov
jno
push
dec
int
fwait
sahf
mov
jnp
push
mov
adc
aaa
sub
mov
xor
inc
inc
into
into
sbb
aaa
add
inc
repnz
loopne
mov
cs
cmpsb
sbb
ret
shrb
and
pop
ficoml
ficomps
and
mov
jae
scas
or
mov
data16
mov
push
sti
test
push
sti
jp
cmp
mov
jg
or
test
mov
mov
scas
push
rcll
push
ficoms
in
inc
cmp
pop
dec
push
iret
fwait
push
leave
push
push
aam
cmpsb
lret
cltd
movsl
jne
adc
jnp
arpl
sbb
push
stc
xor
cmp
dec
insb
xor
sbb
pop
mov
sub
sub
out
repz
mov
sbb
mov
mov
sub
sbb
xor
inc
push
adc
enter
ficomps
lret
fwait
jp
test
or
into
dec
mov
popf
nop
jge
inc
bound
pop
cmp
xor
ds
lret
xchg
xor
enter
push
xor
add
jge
fstpl
ljmp
jl
mov
ss
loope
xor
mov
std
cwtl
and
jle
push
push
jl
xor
sub
dec
inc
ret
inc
push
ficoms
inc
pop
push
jle
adc
in
ret
jbe
outsl
xchg
pop
rorl
push
push
push
jl
sub
je
jecxz
pop
fdivrl
cli
icebp
loopne
xchg
pop
and
adcb
jmp
inc
imul
inc
mov
popa
cmpsb
aad
data16
pop
or
mov
mov
out
jne
cmc
and
imul
es
or
or
jno
push
push
jns
xchg
jb
or
pop
jecxz
mov
out
loop
dec
ja
call
jmp
out
xorl
and
imul
adc
out
mov
sub
sub
test
and
dec
ret
inc
fs
mov
out
repz
push
cmpsb
js
shlb
and
pop
test
mov
subb
mov
test
mov
shll
or
fidivs
sub
push
push
inc
out
inc
out
insb
daa
sub
lahf
cmc
repnz
xorl
and
mov
test
rcrb
mov
mov
inc
push
into
cmpsl
pop
movsb
sbb
mov
icebp
sub
jb
add
mov
std
mov
mov
mov
adc
in
mov
test
or
fldt
mov
lds
xchg
jne
subb
mov
ss
mov
jo
sbb
ss
inc
jge
iret
dec
jno
lret
mov
out
cmp
dec
xchg
adc
cmp
sub
fcomip
loope
lds
pop
cmp
shll
xchg
pop
pop
test
iret
ljmp
xor
fwait
push
mov
adc
fistpll
inc
addr16
jle
imul
mov
mov
jae
jmp
clc
ljmp
mov
cmp
add
loop
sbb
pusha
repz
xchg
fnstcw
and
push
int3
std
cltd
loopne
repz
mov
push
cmp
fucomip
ljmp
daa
sbb
ret
sbb
je
xor
lea
sbbb
iret
pusha
insb
xchg
jo
xlat
clc
insb
test
mov
in
pop
lahf
jnp
aam
mov
jecxz
pushf
push
jae
cmpsb
mov
inc
xor
inc
outsl
int3
outsb
mov
mov
add
mov
pop
mov
stos
outsl
ret
push
push
in
cmpsb
sbb
notl
adcl
bound
stos
adc
fs
pusha
dec
das
sbb
mov
add
cli
addr16
test
adc
sbb
nop
jmp
fbstp
mov
clc
ja
std
push
movsl
mov
xchg
rorl
inc
mov
orb
fstpt
clc
movsb
jle
push
inc
int3
mov
add
into
or
sbbb
ljmp
es
push
fldenv
rorb
mov
shll
xchg
fdivl
cmc
cmc
mov
call
sahf
cmp
cltd
xchg
mov
xor
cltd
jb
imul
xchg
xor
cmp
ljmp
fs
mov
lock
sub
mov
rorl
fsub
insl
mov
je
in
fsubl
add
subl
adcl
lret
push
mov
xlat
insl
out
mov
imul
les
out
xchg
push
jne
add
cmp
mov
scas
xchg
xchg
cmpsb
pushf
xchg
xor
lea
xchg
mov
lret
mov
dec
mov
fcompl
fwait
insl
adc
aam
and
mov
xor
jo
xchg
mul
addl
or
push
lahf
mov
insl
ljmp
sbb
and
aam
cli
call
div
push
fsave
sub
stc
pop
cmp
dec
cmp
add
aas
mov
cmp
or
pop
cmp
jb
daa
aaa
call
push
addr16
gs
xchg
or
ret
popf
mov
push
in
testb
pop
or
pop
fisttpl
rcrl
mov
popf
add
hlt
adc
mov
enter
mov
cmpsb
push
aam
mov
pop
in
adc
xchg
mov
adc
push
lds
push
std
gs
mov
xor
mov
aas
sub
jl
cmp
fdivs
test
pop
outsb
cmc
js
stos
jo
addl
bswap
rcrb
mov
push
jmp
mov
or
sbb
shr
lods
out
shlb
bound
mov
xor
jae
stos
push
and
int3
cmpsb
jmp
fmull
mov
mov
cmpsl
sub
mov
jb
inc
mov
mov
and
inc
inc
fiadds
jmp
jo
sti
adc
jnp
insb
adc
lret
dec
xchg
pop
mov
sti
xchg
cwtl
and
shr
cs
and
mov
scas
xchg
nop
js
xchg
out
das
shrb
adc
mov
jne
push
dec
clc
mov
ret
dec
xor
xor
adc
mov
stos
loope
push
dec
push
lods
rcll
or
ret
insb
sahf
nop
popa
jo
jg
addr16
push
inc
lock
pop
push
mov
cmp
stos
cmpsl
xchg
ljmp
js
pop
jnp
bswap
mov
icebp
mov
cwtl
sub
push
pop
mov
xor
mov
xor
fisttpl
das
bound
xchg
xchg
inc
mov
loopne
rcrl
xor
or
sar
add
loope
inc
rorl
jbe
lret
cmc
add
adc
mov
cltd
insb
in
inc
dec
test
das
add
jnp
cwtl
xor
orl
in
rolb
vmptrst
shlb
pop
fcomip
jae
repnz
mov
shr
negl
or
dec
or
and
out
cmp
push
scas
out
aam
mov
mov
push
or
popf
mov
mov
jmp
aad
and
cmp
imul
and
sbb
rcr
xchg
data16
je
dec
fmull
xchg
call
faddp
cmp
out
nop
add
sahf
test
inc
cmp
dec
icebp
scas
and
cmpsl
pop
adc
sub
outsb
ret
inc
dec
stc
pop
adc
jne
loope
adc
mov
es
cld
and
scas
mov
push
jae
jl
lods
in
aas
sbbb
test
add
rorl
add
shr
cltd
sbb
repz
xchg
stos
out
adc
shll
jo
and
cmp
loop
jg
into
mov
add
pop
jmp
lret
pop
xchg
jecxz
push
shlb
dec
add
int3
and
xchg
push
loop
arpl
push
pop
xchg
xor
jns
lahf
bound
iret
jb
inc
lahf
xor
xor
lret
jg
fadd
out
in
ljmp
es
pop
clc
xchg
sbb
daa
mov
.byte
adc
xor
nop
add
add
sarb
mov
adc
xchg
sahf
pop
idivb
cld
insl
and
mov
mov
out
and
clc
pop
out
addl
xchg
cmp
ret
jge
mov
outsb
movsb
iret
mov
push
aad
xchg
stc
xchg
sub
adc
mov
mov
push
lods
clc
or
loope
mov
adc
push
js
sub
jp
mov
pmaxub
in
ret
lds
add
sub
inc
imul
and
xchg
repz
add
xchg
sub
cmp
ds
jnp
sahf
and
and
jbe
in
testl
adc
je
push
sar
data16
xchg
cmp
in
jl
or
lret
fiaddl
fs
sbb
xlat
jb
sub
adc
test
inc
add
addr16
jecxz
shlb
cmp
fxch
nop
cwtl
pushf
ficoml
xor
mov
push
adc
jecxz
lcall
mov
xor
jg
xchg
lock
lret
mov
fsubp
cmp
lock
insl
pop
test
scas
clc
notb
xchg
mov
addr16
mov
test
pop
adc
andb
or
mov
mov
int
rol
mov
or
mov
subl
leave
inc
jmp
outsb
iret
hlt
fbld
cmc
mov
xor
mov
gs
popf
mov
mov
pushf
inc
mov
aam
aad
test
lods
push
popfw
mov
outsl
shrb
insl
rorl
dec
dec
inc
jmp
xchg
iret
sahf
dec
and
je
test
jmp
in
fwait
pop
sub
sub
mov
lds
ss
xor
pop
jle
push
into
add
add
imul
add
add
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
imul
add
add
add
add
addb
add
imul
add
add
add
add
add
add
addb
add
loopne
add
imul
add
add
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
imul
add
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
imul
add
add
add
add
addb
add
imul
add
add
add
add
add
add
add
jns
add
add
add
add
add
add
cwtl
add
add
add
add
jns
add
add
add
add
add
add
test
add
add
add
imul
add
add
add
add
mov
add
add
jns
add
add
add
add
add
add
enter
add
add
imul
add
add
add
add
fadds
add
add
add
jns
add
add
add
add
add
add
call
add
add
jns
add
add
add
add
add
add
clc
add
add
add
add
jns
add
add
add
add
add
add
or
add
imul
add
add
add
add
sbb
add
imul
add
add
add
add
sub
add
imul
add
add
add
add
cmp
add
imul
add
add
add
add
dec
add
add
imul
add
add
add
add
pop
add
add
imul
add
add
add
add
push
add
add
jns
add
add
add
add
add
add
js
add
add
add
imul
add
add
add
add
add
add
add
jns
add
add
add
add
or
add
add
add
jns
add
add
add
add
or
add
add
add
jns
add
add
add
add
or
add
add
add
jns
add
add
add
add
or
add
add
add
imul
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
imul
add
add
add
add
add
push
add
add
add
imul
add
add
add
add
add
push
add
add
add
imul
add
add
add
add
add
push
add
add
add
imul
add
add
add
add
add
push
add
add
add
imul
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
imul
add
add
add
add
push
add
add
jns
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
andb
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
in
add
add
add
dec
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
in
add
add
add
nop
addl
add
add
add
add
in
add
add
add
pushf
addl
add
add
add
add
add
add
add
add
add
add
in
add
add
add
lods
addl
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
sub
and
das
sbb
fcmovu
aas
fiadds
out
ja
movsl
cs
jmp
push
sti
ffree
mov
mov
inc
inc
rolb
cmp
jmp
loope
dec
xchg
xchg
fistl
pop
xor
loop
loop
sbb
mov
mov
in
sub
inc
fistps
shrb
out
scas
loope
xchg
and
inc
les
cmp
xor
sbb
adc
fstl
cmp
sbb
in
push
inc
cld
add
and
mov
cltd
adc
pop
addl
add
xchg
movsl
enter
fcom
dec
push
rcrl
mov
mulb
aam
sbb
jns
or
cmp
daa
lods
outsl
cmpsl
cmp
and
dec
cwtl
dec
ss
push
imul
lahf
pop
cld
push
lds
sbbb
stos
repnz
fistl
stos
or
scas
sbb
repz
pop
jae
clc
mov
or
pop
adc
mov
pop
rcrl
mov
cs
shll
jbe
inc
fistpll
icebp
mov
adc
cwtl
xchg
ret
or
xchg
pop
sahf
stos
pusha
sbb
aad
add
dec
cmpsl
lret
inc
mov
jb
imul
push
jbe
sub
mov
scas
push
or
sbb
in
jmp
pop
aaa
jo
add
dec
je
cmpsl
mov
xchg
xlat
push
xchg
cmpsl
aas
stos
push
je
cmp
mov
inc
xchg
push
lar
sbb
into
jmp
ljmp
ret
movsb
push
jns
mov
aad
push
push
cmp
inc
mov
sarl
sub
ljmp
stos
add
sbb
js
jbe
pusha
fwait
push
mov
lods
mov
pop
insl
mov
mov
out
pop
rcl
adc
inc
loope,pn
cmpsl
daa
mov
je
outsl
mov
cmp
mov
js
nop
divl
ficompl
outsb
stos
mull
jb
in
aas
imul
mov
sub
int3
dec
jne
adcb
imull
insb
ffree
mov
push
icebp
adc
cmp
incl
cmpl
inc
popa
mov
outsb
dec
push
push
sarl
pusha
add
lea
jae
testb
cmp
xchg
into
mov
das
cli
push
push
cld
daa
rcll
jae
fdivrl
loopne
lods
dec
and
call
daa
fcoml
cld
mov
pushf
xchg
popf
mov
adc
or
push
cmp
les
mov
loop
mov
and
push
mov
cmp
outsb
and
stos
popf
pop
mov
stc
mov
outsb
mov
inc
mov
xor
mov
rorl
mov
arpl
popa
inc
imul
lds
push
mov
jo
movl
and
jno
push
orb
inc
ljmp
adc
js
repz
xchg
aad
pop
imul
lret
pusha
pusha
xchg
pop
aam
sub
pop
ss
mov
mov
in
jae
push
fs
icebp
sbb
add
and
mov
inc
fsubs
or
pop
cwtl
jno
je
fstl
mov
or
lock
jnp
inc
gs
mull
xchg
imul
adc
aaa
lock
xchg
aam
mov
fcoms
pusha
out
xchg
push
jne
cmp
xor
sbb
imul
pop
sbb
loopne
mov
cmp
test
jno
not
dec
sbb
popl
das
lahf
imul
mov
ror
sub
xchg
lods
xchg
adc
jmp
sub
bound
fucomip
dec
rcl
lods
sbb
in
jl
adc
sub
outsl
jp
out
push
cmp
inc
push
add
jl
insl
adc
sub
out
xchg
mov
xchg
sub
inc
pop
hlt
ja
jmp
data16
add
imul
add
fistps
frstor
outsb
push
mov
ja
mov
mov
xor
fsubrl
sbb
call
ret
inc
lds
dec
or
push
mov
sbb
scas
or
xlat
mov
dec
ret
or
nop
pop
mov
dec
xchg
outsl
mov
xor
and
push
mov
fwait
jle
dec
mov
xchg
shll
into
insb
popa
mov
fwait
push
push
add
cmc
enter
fldenv
xor
jecxz
loop
mov
jns
in
xchg
cmpsl
ljmp
pop
subl
sahf
mov
dec
xchg
pop
mov
out
inc
or
cwtl
cli
lods
or
jno
test
ficoml
popa
iret
cwtl
lahf
int3
jmp
xchg
or
jbe
jae
scas
ret
inc
mov
scas
ja
icebp
mov
mov
pop
xchg
dec
inc
push
cli
je
mov
cltd
pusha
sub
mov
add
ljmp
cmp
inc
test
cs
out
rol
sar
test
push
push
leave
sub
jne
lock
ret
pop
jle
pop
ds
xor
stos
pop
mov
int3
pop
jl
daa
push
mov
mov
cmc
je
divl
xorb
jl
cmp
sub
push
std
fbld
mov
andb
mov
xchg
insl
xor
sub
cltd
js,pt
or
and
dec
out
xor
jno
jge
popa
adc
inc
cmpsb
ror
cld
xchg
repnz
xchg
xor
cmpsb
sbb
pavgb
out
sbb
add
jp
decl
addr16
mov
stos
mov
les
frstor
xor
push
clc
lods
dec
dec
add
mov
cmpsb
push
popl
pop
jae
jns
pop
pop
out
shr
jecxz
mov
pop
inc
sub
testb
std
in
push
inc
pop
push
shlb
or
mov
adc
lds
xchg
es
pusha
hlt
mov
aaa
imul
jae
loop
std
mov
adc
or
cmp
lret
mov
test
pop
sub
outsl
sub
jne
pushf
jbe
imul
sarb
scas
mov
adc
shll
loopne
xor
incb
cwtl
les
sti
inc
jne
arpl
adc
inc
aad
adc
rcll
push
lods
and
cmp
sub
lea
loop
lea
sbb
stc
movsb
dec
inc
lahf
scas
mov
ss
data16
mov
cmovbe
mov
jecxz
stos
mov
mov
and
cltd
mov
add
inc
xor
cltd
cld
std
mov
xchg
pop
jb
stos
lahf
add
pop
aam
push
test
dec
sbbl
xor
mov
push
out
jmp
fistl
dec
mov
push
mov
jbe
addr16
testb
xchg
add
sub
arpl
mov
mov
shlb
mov
adc
outsl
mov
icebp
gs
aad
inc
pop
lahf
negb
sar
push
mov
push
inc
adc
pop
add
and
aaa
clc
clc
dec
shlb
jnp
fists
sub
jg
mov
jp
sub
mov
mov
inc
ds
sub
sub
stc
fstpl
add
je
dec
sbb
inc
jecxz
out
mov
and
sbb
mov
jge
mov
add
mov
dec
add
sub
icebp
jge
and
xchg
jmp
and
enter
out
add
jle
inc
push
mov
sub
fmul
shll
cmp
xchg
lret
adc
add
xchg
mov
imul
xchg
push
pop
push
fcompl
popf
ret
pop
mov
sahf
insb
in
std
mov
data16
rcrl
out
mov
pop
out
sbb
and
pusha
ret
xor
dec
push
enter
jg
adc
jp
sub
mov
imul
pop
cmp
lret
push
inc
fidivrl
pusha
out
insl
pop
xchg
xchg
repz
and
mov
push
pop
sub
lret
jnp
cmp
or
inc
test
dec
loop
sahf
outsl
jae
add
inc
xor
mov
mov
dec
shlb
jne
push
movsl
xor
sti
jo
lcall
xor
dec
adcb
push
sub
mov
in
adc
loop
xor
mov
jmp
imul
ficoml
bound
sbb
jle
and
int3
sbb
fldt
loope
xor
jns
nop
and
mov
and
dec
adc
enter
mov
lods
fwait
lods
cmp
inc
mov
out
in
jo
push
jge
fsubl
ret
subl
cmc
scas
int3
sbb
sbb
xchg
sub
in
sahf
test
adc
pop
add
push
or
aas
inc
clc
sarb
aaa
mov
mov
out
xlat
outsb
jbe
test
mov
ja
xorl
jns
pop
mov
push
cld
lret
add
lock
inc
cltd
xchg
lods
sbb
mov
mov
mov
cmp
xchg
and
cli
icebp
and
cmc
mov
das
sbb
stos
mov
dec
mov
xor
fistps
mov
xor
imul
xlat
jl
in
push
dec
divb
mov
cmp
pop
mov
cmp
outsb
lods
pop
fmulp
or
xchg
add
sbb
jnp
and
arpl
fisttpl
mov
xchg
jns
jg
in
fidivs
outsl
dec
cmp
ret
jb
xchg
inc
mov
push
fcmove
mov
jl
mov
mov
xchg
and
mov
jmp
pop
xchg
aam
jmp
fiaddl
lea
stc
not
jno
rcll
inc
push
fiaddl
js
in
cmp
cmp
push
inc
pop
and
pop
pusha
sbb
dec
data16
cmpsb
sbb
enter
aaa
cmp
mov
jnp
pop
jecxz
mov
repz
mov
lods
inc
ss
dec
push
es
aad
sbb
popf
cmp
ret
movsl
mov
outsl
fildll
daa
xchg
sub
decb
jmp
nop
cmp
push
shl
dec
movsl
xchg
dec
fs
cmp
ficomps
popa
inc
jb
xor
jo
fs
xorb
or
mov
xor
xor
movsb
inc
outsl
add
rorl
popa
push
loope
mov
test
aam
jno
xchg
ja
push
and
arpl
sub
imul
dec
lods
dec
sbb
push
lret
pop
rolb
ret
outsl
dec
ds
in
hlt
jle
fs
loop
mov
int
mov
nop
stc
and
xlat
cmp
dec
cmp
or
in
leave
arpl
outsb
pop
jne
mov
outsb
adc
inc
or
scas
xor
scas
push
stos
aas
xchg
push
xchg
pop
in
in
cltd
pop
sbb
bound
ss
or
in
imul
adc
sbb
lahf
jp
xor
mov
dec
sub
movsl
pop
imul
dec
sahf
add
add
sub
jns
aam
cmp
push
dec
into
jne
data16
out
jnp
ja
cwtl
mov
stc
roll
in
sub
jmp
mov
sbb
jle
jnp
lret
enter
mov
mov
sbb
sbb
mov
ss
out
imul
push
mov
inc
mov
dec
out
push
xchg
sbb
subb
or
scas
dec
pop
iret
cltd
mov
aas
xchg
jg
pop
mov
lea
clc
ljmp
mov
daa
jo
mov
pop
and
adc
cmc
call
lods
jle
insb
push
dec
xchg
js
je
je
std
int
mov
cmpsl
ja
pushf
cmpsb
and
gs
popa
sub
movsb
push
test
insb
add
push
popa
pop
pop
inc
xorl
daa
cmp
loop
icebp
jl
out
mov
pop
pop
lret
xchg
add
jecxz
js
ja
mov
clc
lret
mov
scas
xchg
test
dec
xor
jmp
xor
aad
repnz
dec
insl
add
movsb
jnp
mov
pop
and
xchg
mov
insb
xchg
enter
mov
jb
and
pop
lds
sbb
aad
fucom
cwtl
clc
push
daa
push
inc
lret
dec
push
cmp
push
and
cmp
insl
stos
jmp
fucomi
arpl
pop
xchg
aad
movsb
xchg
int3
shr
mov
daa
mov
add
ja
mov
rcr
pop
pop
cmp
inc
fdivs
fbstp
out
daa
push
out
or
mov
leave
shll
test
in
inc
sub
shll
push
retw
pop
jle
mov
out
mov
sbb
loop
mov
imulb
inc
mov
push
fsts
punpcklbw
scas
push
aad
iret
mov
inc
lret
out
fisttps
dec
xchg
repz
aam
push
dec
std
iret
fcmovu
inc
push
inc
push
rclb
ljmp
mov
sub
inc
mov
divb
jmp
lcall
inc
jecxz
xor
ret
adc
xor
cmc
fbld
xchg
cmc
inc
in
dec
pop
adc
test
and
or
das
mov
push
pop
cmpsb
ljmp
clc
int3
nop
mov
aad
sub
fiadds
mov
addb
jbe
out
mov
call
dec
aas
adc
in
fisubs
push
gs
pop
ja
xchg
cld
aas
add
bound
adc
sub
addr16
stos
insl
mov
sbb
sahf
aad
and
sub
pusha
inc
lret
test
xchg
sarb
into
cs
xor
sbb
lds
xor
iret
pop
jne
fprem
mov
dec
xchg
mov
in
pop
loope
adc
dec
mov
sbb
and
int
stc
addr16
xlat
sahf
sbb
xchg
pop
sbb
loopne
inc
popa
sahf
fisttps
aad
pop
cmp
add
ret
inc
mov
js
add
sbb
pushf
gs
cmc
xchg
into
adc
scas
cmp
aad
jp
sbb
cmp
push
mov
idivb
fwait
push
sub
jge
cmp
xchg
push
inc
fisubs
outsw
sbb
imul
stc
mov
addl
stos
mov
add
aaa
pusha
push
dec
add
pop
mov
sbb
sbb
into
sub
test
jle
shr
clc
in
fildll
loope
in
sub
ljmp
push
xchg
pop
pop
pop
pop
int3
xor
add
call
lret
sbb
push
lret
clc
sti
test
outsl
das
lods
sub
xlat
xchg
rorb
dec
fwait
imul
push
call
adc
les
mov
mov
test
shll
pop
pop
mov
nop
push
mov
insl
adc
push
aas
icebp
subb
xor
int
cld
add
mov
call
loope
pop
scas
mov
lea
outsl
cmp
out
aad
push
movsl
dec
outsl
sub
pushl
fidivl
outsl
push
test
mov
xchg
dec
outsl
cmp
pop
dec
repz
iret
bound
lods
sar
lea
inc
adc
pushf
fisttpll
out
imul
stc
xchg
pop
pop
mov
jg
xchg
xchg
pop
or
add
push
add
add
movsb
fimuls
xor
aas
xor
les
je
sbb
add
out
fisttps
pop
jge
jmp
push
gs
fcmovbe
rcrl
test
xor
insl
add
outsb
out
sbb
movl
popf
push
sarl
jb
xchg
mov
sub
push
mov
adc
add
adc
and
insb
mov
jmp
mov
inc
pop
fdivl
fistpll
sbb
xchg
es
fs
movsl
aam
cltd
mov
mov
xchg
jns
fcoml
pop
xchg
mov
cmp
jle
push
fwait
push
stos
add
fldcw
mov
pop
or
mov
cwtl
clc
orl
pop
cs
enter
out
repnz
test
cmp
mov
sahf
mov
add
pop
or
lds
mov
dec
imul
test
xchg
js
mov
pop
fldt
inc
dec
push
sti
fcompl
adc
pusha
inc
jb
rcr
leave
repz
pop
pop
jnp
ljmp
loopne
rcrb
ret
sub
xchg
or
in
and
mov
or
hlt
pusha
push
cmpsl
loopne
out
dec
sub
cltd
flds
or
ljmp
mov
ljmp
stc
stos
aas
stos
lahf
lea
jg
aad
dec
out
sub
pop
xor
ret
pop
imul
lret
xchg
pushf
das
lea
jno
stc
jo
dec
ret
out
jb
jmp
ja
jp
jmp
or
sub
jae
push
cmp
inc
mov
sub
iret
pop
and
daa
aam
mov
pop
push
sub
addr16
mov
and
inc
jb
cmp
mov
in
addr16
sahf
jle
movsl
in
cmpsl
sarl
dec
loop
lea
lahf
outsb
out
sub
push
xlat
or
pusha
ror
add
bound
mov
add
cltd
loope
cmp
sbb
leave
sub
mov
mov
js
inc
cmp
sbb
jne
dec
mov
mov
outsb
hlt
ss
lods
mov
data16
mov
cmp
sti
sub
imul
dec
sahf
cmp
les
pop
and
dec
outsb
mov
test
adc
lret
xchg
pop
and
insl
aam
test
mov
lea
jnp
push
jns
mov
aaa
dec
into
mov
mov
or
cld
jo
inc
push
mov
clc
ss
pop
adc
push
mov
xchg
mov
sub
cli
sbb
adc
sbb
dec
jne
mov
sbb
xchg
inc
aas
dec
push
jbe
push
std
cmpsl
mov
outsb
mov
movsl
stc
je
push
pop
pop
xor
push
xchg
repnz
sbb
lcall
fdivrl
xchg
cmp
push
xchg
mov
add
ficompl
sbb
enter
daa
jae
cmp
out
fmull
popf
dec
mov
rcrl
add
inc
cltd
pop
test
fisubrl
inc
xchg
cmc
mov
push
mov
dec
mov
and
xchg
inc
mov
pop
and
std
mov
sti
aaa
push
repnz
cmpsl
mov
xor
sub
mov
in
xchg
cwtl
and
movsb
out
icebp
add
rcrb
inc
or
sti
jge
les
inc
and
pop
inc
mov
test
xchg
push
mov
and
inc
xchg
fnstenv
mov
int
dec
test
push
lods
xor
jl
popf
mov
dec
out
push
jmp
xorl
xchg
push
test
sar
jns
push
sub
in
int
ljmp
lcall
enter
inc
add
xlat
push
dec
in
xor
jge
test
push
lds
jecxz
push
xchg
out
out
pop
cwtl
psubsw
fistpl
or
xchg
sub
xlat
push
cwtl
aad
push
hlt
shl
imul
notl
xchg
push
ret
fdivr
imul
mov
repnz
je
mov
ds
gs
imul
xchg
loopne
or
mov
xor
mov
scas
add
jne
or
sub
adc
int
mov
cltd
push
mov
repnz
inc
ljmp
leave
adcl
sbb
stos
sub
pushf
mov
lret
hlt
xchg
rorl
mov
cmpsb
mov
out
ja
mov
std
frstor
sbb
mov
lcall
dec
inc
repz
arpl
xchg
mov
outsb
sub
mov
insl
test
sarl
je
shrl
dec
mov
stos
or
int
xor
lods
mov
fisubrl
test
mov
movsb
enter
das
pop
sub
mov
lret
xchg
mov
movzwl
inc
mov
ja
mov
push
inc
dec
scas
jg
fdivrl
pushf
sti
cmp
jmp
jecxz
shl
mov
cmpsl
cmpsb
movb
fmuls
adc
and
push
lar
aad
test
andl
sub
dec
sbb
js
scas
dec
fs
xchg
rcll
xchg
mov
adc
and
fldt
flds
pop
in
dec
cmpsl
into
xchg
inc
imul
int
cld
cld
cmpsb
pop
icebp
shl
popa
add
aam
push
or
inc
add
lahf
push
xchg
add
dec
adc
out
sti
and
sub
push
push
lret
mov
test
insb
cld
dec
add
pop
sbb
lahf
cmp
xchg
test
dec
movsl
mov
test
push
loopne
add
inc
in
pop
dec
imul
mov
mov
or
sbb
push
stos
cltd
inc
icebp
outsl
dec
mov
mov
aaa
push
dec
je
xchg
pop
dec
jp
push
mov
cmpsl
push
dec
shrl
rorl
test
jge
rcr
xor
arpl
xor
mov
sub
dec
std
mov
mov
jp
adc
push
fwait
ret
repz
scas
scas
xchg
push
hlt
movsb
mov
dec
outsb
scas
or
push
lret
mov
sbb
rol
test
fisubs
sbb
std
lret
and
cmp
push
stos
sbb
sub
adc
dec
lods
mov
mov
jbe
push
or
xchg
mov
outsl
inc
mov
dec
movsl
and
xchg
bound
popf
stos
call
int
jp
cmpsl
cs
push
test
divl
mov
jno
mov
jno
fadd
int
jecxz
xor
add
xchg
mov
or
inc
cmp
fcmovb
push
mov
xchg
ret
movsb
lret
cmp
dec
imul
jno
push
movsl
dec
jecxz
enter
insl
push
fbld
and
xchg
dec
ret
fisubl
cld
cmp
cwtl
mov
push
rcr
xlat
mov
or
lds
mov
or
roll
pop
sarl
enter
mov
fs
fwait
and
ja
adc
or
jbe
mov
test
dec
lcall
jmp
and
sub
jb
add
popf
shll
mov
sahf
pop
lods
rorb
push
fstps
leave
and
cmp
mov
dec
stc
addr16
mov
cs
mov
add
mov
in
jecxz
sbb
in
shlb
jg
mov
mov
ja
int3
in
gs
popf
and
mov
dec
mov
jl
push
xchg
mov
fstpt
movsb
mov
xor
push
mov
icebp
ret
or
jecxz
cmp
mov
lea
mov
or
adc
and
mov
add
xlat
enter
gs
daa
data16
mull
pop
out
jae
out
cmpl
adc
out
sti
dec
bsr
xchg
sti
adc
pop
aas
push
jae
stos
xor
in
nop
jns
jmp
mov
loop
jno
and
sbb
add
outsl
je
je
int3
nop
lahf
jp
xor
inc
xor
jne
mov
jns
popa
and
pop
bound
pop
mov
mov
out
sub
stos
cmpsb
mov
add
repz
lds
cmc
scas
outsl
iret
xchg
or
adc
lret
inc
andb
es
imul
or
mov
jl
aam
or
fcom
rorl
xchg
call
outsl
lcall
lahf
clc
lret
scas
sbb
loope
lds
inc
add
ret
xchg
sbb
mov
in
sub
or
xchg
xchg
mov
sar
fsubrs
insl
ret
outsb
xchg
pop
lret
mov
jle
imul
mov
and
enter
push
inc
movsb
loop
mov
mov
shlb
fimuls
daa
movsl
xor
mov
or
inc
cmp
cmp
stc
cltd
aas
sbb
arpl
in
cmp
leave
push
aad
xlat
imul
cmp
cmpb
and
pop
mov
mov
push
mov
mov
subb
cmp
mov
xlat
xor
imul
test
repnz
mov
add
lret
mov
pop
pop
cli
in
ds
pop
int
roll
sub
mov
jo
pushf
inc
jnp
xchg
adc
dec
cli
aam
movsl
pop
mov
push
dec
pop
add
shld
or
test
mov
cld
aas
movsl
repnz
xchg
insb
jg
lods
dec
dec
test
sti
adc
in
ret
into
pop
pusha
jp
cltd
loopne,pn
outsb
cmp
faddl
xor
inc
add
lock
dec
sbb
mov
arpl
cli
test
lahf
or
int
dec
movsb
cmp
rep
xor
sub
dec
mov
cmpsb
or
nop
sub
fildl
lods
lcall
pop
cmp
popf
jmp
pop
push
outsl
jno
enter
sbb
out
lds
out
jno
jle
xor
dec
cmp
or
roll
push
push
in
jno
pop
adc
sub
inc
jo
nop
das
dec
iret
int3
add
mov
or
or
xchg
and
sbb
mov
repnz
xor
mov
mov
les
in
clc
clc
insb
cmovnp
push
setp
pop
xor
pusha
jb
das
mov
jge
divl
push
mov
mov
mov
shlb
jns
cwtl
fwait
add
mov
xchg
repnz
int
fistpll
movsb
andb
idiv
mov
bound
clc
sub
fnstsw
push
or
mov
xor
pop
out
pushf
inc
adc
pop
cmp
mov
sub
sbb
inc
xchg
addr16
icebp
jecxz
inc
pushf
imul
push
mov
fdivrs
cmpsb
clc
cmp
lret
jnp
mov
push
jge
rcrl
and
or
xchg
lret
ljmp
and
mov
out
leave
cmp
jle
int
ffree
lock
cmp
aam
cmp
xor
popa
push
push
xchg
ficomps
iret
jns
movsl
mov
push
sub
das
xor
gs
sbb
dec
mov
in
sbb
cmp
mov
stos
leave
xlat
xlat
fs
call
and
iret
movb
and
or
iret
shr
sbb
push
inc
mov
lcall
stc
scas
cmp
sbb
test
and
in
add
xor
dec
cmc
outsl
pop
stc
push
dec
inc
fistps
mov
sub
sbb
dec
dec
push
lock
jns
fisubl
loopne
aam
jbe
sub
and
mov
cmp
cmpsl
or
jbe
ss
test
cmp
ds
test
push
jbe
dec
xchg
das
ret
sub
ror
insl
add
es
gs
push
sbb
xorl
lods
lds
notl
lds
fstpt
ret
jp
cmpsl
add
jns
int3
pop
lret
xchg
mov
in
mov
mov
clc
ret
xor
scas
adc
mov
out
pusha
push
js
arpl
aaa
je
je
jl
mov
gs
cmp
bound
jno
int3
add
cmp
mov
inc
int3
cli
aad
inc
es
adc
jmp
mov
ja
and
mov
jb
in
pop
cmp
jl
xor
lea
stos
cmp
test
roll
aam
inc
mov
hlt
lret
jae
fsub
add
lds
pop
dec
cmp
push
mov
sbb
popa
les
lock
leave
mov
add
xchg
inc
push
testb
pop
dec
or
dec
inc
mov
je
ficompl
adc
inc
or
je
std
and
sub
inc
lds
jge
mov
hlt
cltd
adc
and
add
loop
mov
mov
mov
xchg
sub
or
xchg
shlb
movsl
rol
add
or
xchg
iret
lock
xlat
pop
aam
negl
fldl
sbb
dec
stos
shrb
pushf
imul
popa
mov
or
movsb
cmp
dec
push
add
mov
insb
adc
pop
ss
movb
out
mov
arpl
push
dec
imul
push
outsb
inc
sbb
ror
xacquire
outsl
push
dec
mov
ja
mov
sbb
push
repz
cmp
arpl
loope
xor
idivl
hlt
lods
cmp
dec
cmp
lea
jle
jo
adc
in
add
or
mov
es
lods
xchg
imul
adcb
fwait
je
mov
jb
loop
and
add
mov
ret
lods
cld
shll
aam
add
push
mov
cmp
data16
daa
dec
pop
sahf
xchg
jns
test
imul
scas
mov
stc
test
fnstcw
xchg
dec
ds
or
mov
mov
je
xchg
loopew
clc
aas
faddp
out
test
stos
xor
mov
call
mov
in
jae
dec
movsb
mov
outsb
push
pop
push
xor
popf
repz
pop
cmp
and
jl
mov
bound
fwait
sub
stc
imul
in
mov
movsl
icebp
in
and
xchg
aad
sbb
xchg
bound
lock
stos
ja
adc
jl
in
xor
lea
pop
jg
cld
mov
insl
inc
cmpsb
push
cmp
cs
in
fs
icebp
into
addl
pop
call
filds
adc
xor
lcall
int
push
cltd
iret
push
test
adcl
dec
testb
xlat
cmp
cmpsl
add
aas
mov
lahf
pop
test
xor
mov
lahf
call
adc
notb
cwtl
fiadds
std
jecxz
xchg
popa
jl
popf
loop
stc
adc
lea
pop
in
clc
lock
fwait
outsl
jae
int
adc
add
aas
mov
mov
and
stos
mov
or
int3
sbb
stos
es
mov
loop
mov
add
cmp
outsl
jns
inc
cmc
mov
sbb
stos
call
sbb
inc
fld
mov
aad
cmc
push
mov
mov
stc
pop
lret
call
add
repz
aas
popa
daa
shlb
sub
sbb
test
pop
push
aaa
subb
or
xchg
in
mov
sub
jg
hlt
aad
leave
lock
rclb
inc
mov
es
xchg
add
shll
adc
sub
sub
xchg
mov
repz
mov
push
add
push
cmp
test
pusha
imul
sub
scas
inc
dec
xchg
in
out
dec
je
pop
pop
inc
lods
sub
mov
inc
jae
jge
jne
dec
pop
pushf
fisubs
push
ds
sbbl
mov
jno
movsl
sub
std
sub
cmp
pop
inc
out
lcall
cmp
mov
mov
aad
sti
push
popf
sarl
lea
mov
jmp
inc
add
sti
mov
push
mov
pop
or
icebp
scas
ja
mov
cmp
xor
and
lds
cmp
pop
add
dec
stos
dec
add
mov
add
pop
mov
call
lcall
pop
push
jmp
fmuls
mov
jmp
push
pop
incl
or
popf
int
imulb
int
pop
aam
push
or
pop
add
movsl
in
out
fsubrl
fdivr
jle
aam
jle
mov
fcoms
push
xor
mov
cmp
rclb
ljmp
xchg
mov
orl
adc
clc
je
test
mov
cmc
in
mov
xor
mov
call
mov
clc
lahf
icebp
dec
xor
inc
je
lahf
mov
dec
loop
push
jecxz
aad
dec
test
cmc
out
shrl
mov
sub
jg
sbb
jmp
dec
jl
lea
mov
cmc
pop
stos
xor
loopne
pop
pop
scas
or
jl
mov
cmp
inc
mov
scas
in
lock
jl
cld
cli
sub
add
pop
mov
dec
or
bound
and
jbe
data16
rorw
dec
mov
ds
addr16
pop
mov
jo
pop
adc
int3
sbb
mov
std
mov
inc
sub
or
jnp
pushf
cmp
push
pop
test
movsl
out
out
xchg
loope
mov
mov
js
fstpt
bswap
pushf
je
pop
jp
pop
and
inc
sub
and
xchg
adc
inc
mov
xor
dec
imul
jo
popf
bound
add
xor
mov
mulb
add
neg
add
mov
lea
push
inc
push
jb
dec
lea
repz
sub
gs
jns
xchg
mov
xchg
mov
xor
sarl
mov
aaa
sahf
iret
lods
pop
mov
mov
insb
add
or
sub
iret
nop
stc
arpl
cli
dec
xor
rcl
dec
enter
lahf
inc
movsb
jle
pop
frstor
add
cmp
ja
out
xchg
filds
and
stc
xor
push
pushf
cmpsl
jno
dec
inc
push
xor
mov
mov
movsb
aad
cltd
mov
push
fisubl
bound
sahf
popa
or
repz
push
jg
push
xchg
adc
jmp
mov
test
outsl
push
adc
xchg
icebp
mov
gs
bnd
mov
pop
jno
fnstenv
dec
inc
mov
ljmp
mov
fmul
jo
inc
popf
aam
lds
mov
lods
and
inc
xor
dec
pop
sub
cltd
mov
sbb
into
lret
sarb
lea
inc
sub
add
ret
out
mov
jo
xor
add
mov
rolb
inc
mov
out
mov
cmp
adc
outsb
out
and
mov
push
lret
xor
outsb
das
inc
cmp
inc
cmovbe
mov
xchg
mov
jge
lret
das
loopne
cmp
out
pop
stos
cltd
mov
arpl
jle
push
push
mov
fptan
adc
and
adc
daa
inc
dec
pop
dec
xchg
adc
lock
pop
push
add
mov
mov
popf
mov
fcoms
sub
mov
orl
push
sub
jmp
pushfw
ffreep
or
inc
jb
jmp
pop
xchg
movsl
and
mov
fstl
test
std
mov
mov
cmpsl
fadds
jno
adc
pusha
jg
std
sub
adc
pop
and
jle
inc
mov
ficompl
jb
mov
inc
div
sub
cmp
jo
push
ja
jg
stos
pop
movsl
stos
adc
mov
icebp
cmp
mov
sbb
into
icebp
lea
mov
mov
cmpsl
cmp
pop
mov
sbb
cmp
gs
pop
mov
mov
movsl
inc
inc
and
push
sbbb
push
data16
mov
out
jmp
sbb
jg
sub
fisubs
pushf
jbe
mov
xchg
loop
cmpsb
leave
dec
inc
ret
cmp
xor
maxps
dec
int
rcrb
js
lds
iret
pop
mov
stos
cmp
mov
stos
xor
or
mov
mov
push
mov
pop
xor
out
mov
outsl
pop
push
pusha
xchg
xchg
mov
cmp
out
mov
and
xchg
cwtl
mov
mov
or
js
sbb
pop
stos
aad
jb
jmp
repz
xchg
out
dec
movsl
fcomps
mov
pop
pop
jns
fmull
cmp
cmpsl
mov
push
mov
call
jle
cmovl
outsl
pop
cltd
int3
jbe
pushf
ds
fldl2e
insl
out
movsl
imul
mov
push
loopne
sbb
push
aam
jno
sbb
scas
adc
aaa
or
daa
sbb
mov
shll
mov
mov
imul
lods
cwtl
out
cmc
push
cmc
js
fcompl
lock
jno
xchg
shrb
cmp
dec
push
sbb
sbb
dec
xor
mov
mov
or
outsl
jmp
mov
inc
xor
movsb
sub
push
aam
movl
sub
dec
xorl
adc
rolb
add
xor
jne
mov
jae
mov
fldcw
inc
daa
shll
cmp
mov
out
sub
shlb
cmp
ss
rcr
push
aas
sub
cltd
cmp
rclb
out
push
pop
and
jl
xor
inc
psrlq
push
in
sti
popa
or
mov
push
cmpsb
ret
bound
xchg
ror
scas
adc
sbb
add
and
or
fsubl
push
sub
jns
push
cmpsl
sub
mov
inc
jecxz
adc
mov
push
sti
mov
repnz
loope
mov
aaa
dec
sbb
jae
xor
imul
fidivrs
mov
mov
sub
pop
push
pop
add
or
cmp
inc
pop
clc
mov
lds
dec
andb
xchg
cmp
insb
adc
fcomi
jp
loope
jmp
pop
inc
xor
dec
notb
cli
ss
mov
out
mov
leave
mov
int3
bound
in
cmp
pop
or
xor
shlb
sbb
imul
jl
leave
mov
jmp
cli
shlb
push
jns
cs
stos
cli
shrl
lods
ss
sub
inc
jbe
ja
mov
sbb
dec
jp
sbb
adc
and
fildl
out
sbbl
dec
inc
mov
xor
pop
xor
stos
adc
push
xchg
cmpb
push
das
loop,pn
inc
outsb
enter
jge
jecxz
jb
inc
xlat
jo
sti
loopne
cli
int
mov
add
sti
aam
xor
out
loop
mov
cs
jns
ljmp
mov
add
jno
movsl
loope
sub
les
xor
jae
cs
out
insb
sbb
jl
inc
dec
test
orb
cmc
roll
cmp
int
and
mov
shlb
insl
das
aas
and
push
popf
in
pop
mov
ss
cs
ds
leave
adc
mov
shlb
xor
pop
xorl
sub
jne
jl
cmp
jl
fdivs
push
push
lock
fidivrl
pop
or
lahf
mov
dec
cwtl
xchg
xor
sbb
insl
xchg
mov
lods
repnz
mov
jmp
jae
fdivrp
sbb
pop
out
inc
inc
fucomip
xor
inc
cmpsb
adc
or
es
jns
mov
pop
pusha
out
mov
jbe
push
es
addr16
inc
mov
lods
xor
xlat
pop
mov
mov
call
mov
mov
popa
push
mov
adc
xchg
arpl
xor
add
stc
mov
sub
xchg
test
call
add
adc
icebp
xor
mov
fildll
nop
sti
dec
aad
xor
mov
mov
mov
out
xor
mov
cmp
and
daa
out
test
jle
sub
dec
mov
jo
popf
xor
stos
sbb
call
jl
and
testl
or
sbb
inc
add
jge,pt
mov
cmpxchg
jmp
jge
mov
inc
ret
mov
leave
lret
shlb
push
xchg
push
aas
cmp
movsl
mov
pop
cmp
cmp
lret
movsl
btc
fnstenv
mov
cmp
insb
nop
sub
mov
mov
and
es
mov
daa
sub
fwait
push
ficompl
push
callw
sbbb
add
jns
and
jne
lea
xchg
jge
scas
loop
add
pop
in
lcall
lcall
dec
fsubrl
lret
jae
bswap
sub
out
dec
mov
sbb
jg
shlb
adc
inc
xchg
mov
out
mov
sahf
or
daa
ret
dec
cmp
insl
iret
test
scas
jo
mov
cltd
cmpsb
fcmovnbe
stos
les
mov
out
fdivs
stc
divl
es
jl
out
mov
iret
xor
xor
push
mov
or
cmc
mov
sbb
test
dec
add
push
pop
push
popf
repz
imul
stc
dec
push
push
xor
add
roll
jae
mov
adc
xchg
lret
mov
lds
popa
je
inc
push
int
mov
sti
inc
mov
mov
sub
dec
adc
iret
pushf
pop
aam
inc
push
in
add
arpl
or
sbb
adc
enter
imul
test
sbb
outsl
mov
xchg
jo
lcall
add
push
cmp
pop
mov
push
in
mov
inc
jge
or
enter
enter
fcmovb
shlb
fabs
pusha
mov
push
and
pop
cwtl
xor
imul
pushf
fmul
imul
xchg
decl
mov
fs
gs
int3
movsl
fwait
pushf
jns
adc
pop
in
add
addr16
jp
dec
aam
int3
testb
pop
xchg
pop
jb
loopne
cli
outsb
inc
fwait
pop
lahf
adc
add
not
test
mov
sub
sub
icebp
or
shlb
pop
pop
push
aad
xor
xor
add
pop
in
cmc
sbb
lret
or
shrd
aaa
fisubs
mov
mov
add
enter
in
pusha
push
mov
pusha
jne
sub
mov
call
lahf
xor
jmp
xor
int3
cmc
popl
lcall
or
adcb
aam
add
sub
lods
push
adc
adc
push
or
jl
lock
xor
leave
sub
xor
lcall
loope
mov
jecxz
notb
enter
mov
xchg
add
das
jno
push
or
mov
js
imull
into
xor
test
cld
pop
or
js
loopne
enter
cmp
insl
call
mov
add
or
rclb
int3
sbb
test
xchg
dec
xchg
ds
outsl
inc
and
loope
loop
cmpsb
push
dec
dec
add
stos
data16
xchg
bound
fistps
xlat
aaa
outsl
fisttpl
dec
add
xor
pop
xor
std
jne
mov
sbb
jno
xchg
int3
sbbl
add
xchg
lock
cs
call
jns
fwait
pop
ficoms
adc
push
xor
popf
cltd
pop
pop
cld
inc
mov
mov
mov
inc
ret
mov
adc
sub
je
int3
mov
fsubs
shr
in
jno
cmp
das
mov
fsubrl
xlat
cltd
insb
cmc
jle
push
ljmp
push
push
mov
cmp
es
lds
ss
andl
pop
push
mov
xor
notb
inc
aam
ret
ljmp
mov
clc
test
clc
pop
es
sub
sub
out
adc
add
cmp
adc
adc
pop
rolb
xchg
fildl
sbb
popf
scas
dec
sbb
or
aad
mov
popf
mov
mov
stos
add
or
out
adc
xlat
or
outsl
sbb
xchg
inc
or
push
inc
mov
fsubrs
sub
add
jmp
dec
inc
cmp
lock
mov
cmp
imul
cmp
jb
mov
daa
and
mov
adc
xlat
xchg
sahf
cltd
lret
loopne
mov
in
mov
adc
mov
or
adc
arpl
push
std
inc
inc
out
mov
sbb
xor
inc
pop
cmp
inc
out
inc
mov
mov
or
rorl
sub
fstps
xor
mov
pop
js
arpl
xchg
xor
ja
pop
ret
cmpsl
decb
jb
dec
in
xor
jmp
inc
nop
jb
mov
mov
mov
and
arpl
rclb
inc
jmp
add
ljmp
ss
stos
sbbb
daa
add
inc
adc
dec
adcb
mov
les
pop
sti
fidivrs
xlat
pop
test
lahf
inc
xor
adc
fldl
sahf
mov
sub
inc
mov
push
inc
pop
std
pop
arpl
xchg
in
inc
arpl
jmp
or
adc
in
xchg
fdivr
push
loopne
mov
cmp
fistpl
sbb
dec
imul
add
push
subb
inc
pop
xor
sbb
pop
lock
repz
push
jbe
lea
arpl
mov
adc
frstor
push
xor
aam
gs
dec
test
pop
pop
mov
inc
pop
xor
mov
mov
mov
jns
cmp
jl
add
mov
lahf
test
jl
adc
outsl
mov
pop
sub
jmp
xchg
jl
test
mov
mov
mov
inc
xor
and
sub
pop
iret
cmp
add
push
test
cwtl
dec
pop
and
inc
add
rdtsc
inc
adc
mov
xchg
cld
pop
popl
pop
shlb
mov
jbe
insb
outsl
push
pusha
cmp
cmp
and
mov
clc
pop
rolb
and
sbb
sub
and
sbb
fucomip
jb
addr16
out
fildll
lret
aad
mov
xor
mov
pop
jb
shl
aas
mov
jb
clc
in
mov
pushf
push
dec
adc
dec
jge
outsb
insl
lea
cmp
dec
pushf
mov
inc
loope
sbb
push
and
aad
add
pop
popa
popa
or
jbe
fnstsw
mul
imul
mov
call
orb
push
lock
dec
jg
shlb
mov
outsl
mov
pop
sarb
sub
push
sub
lret
in
mov
cmp
movsl
aad
outsb
and
insl
mov
mov
dec
dec
out
adc
int3
push
pop
mov
dec
or
sbb
popf
test
popa
mov
insb
add
add
rcrb
js
dec
xchg
clc
arpl
test
inc
lock
clc
bound
or
lcall
mov
dec
call
mov
movsb
mov
push
imulb
push
mov
lret
inc
test
addb
aam
lret
mov
and
inc
adc
mov
ret
xor
push
mov
xor
push
xor
rclb
mov
sbb
in
in
dec
sbb
or
mov
mov
dec
and
or
and
dec
rcrl
xchg
out
ss
je
cmp
sti
mov
imul
fstpt
sub
insb
iret
sti
jg
fidivl
sbb
mov
and
xor
mov
scas
in
xor
sub
mov
movsb
cmp
and
loop
test
inc
loopne
in
ds
daa
adc
lds
jo
push
adc
add
dec
xchg
in
in
es
popa
cmpsl
sar
ret
jl
add
push
mov
xchg
xchg
cli
repz
pop
jb
fbstp
aam
jl
into
jnp
stos
mov
jecxz
inc
lock
repz
mov
cmp
test
or
dec
out
fs
pinsrw
xchg
cmpsl
push
mov
pushf
idiv
lds
dec
rcrb
xchg
sbb
ret
cmpsb
mov
sbb
xor
jmp
pop
test
mov
jns
mov
add
xchg
popa
inc
loopne
dec
add
push
jo
arpl
outsb
lods
pop
jge
test
outsl
push
rcrb
addl
lock
clc
frstor
mov
inc
mov
inc
push
push
add
xchg
repnz
mov
lret
imul
jmp
or
jnp
in
shlb
arpl
and
lahf
out
cmp
xorps
dec
dec
aas
and
movsb
mov
or
inc
pop
std
mov
or
jo
jbe
leave
subl
and
jg
push
add
lcall
sahf
out
jle
lock
jge
pusha
aam
push
xchg
push
fucomp
sti
out
jl
fisubrl
lahf
dec
add
xor
mov
aad
adc
push
jge
push
dec
faddp
jb
dec
pop
dec
xchg
jecxz
jmp
jp
and
pop
enter
enter
dec
imul
test
mov
xor
lock
jo
aas
jmp
mov
jae
inc
sbb
mov
add
push
xor
out
in
adc
ljmp
jge
lcall
andb
push
mov
fcmove
jg
mov
pop
mov
push
sub
jnp
mov
mov
ljmp
fwait
push
loope
imul
cmp
pop
mov
xlat
lret
mov
add
int3
inc
mov
inc
jnp
icebp
aam
addl
lods
sbb
xchg
push
fidivrs
fsubrs
xchg
fs
pop
xchg
mov
sti
and
dec
mov
subb
and
push
mov
add
mov
add
stc
outsl
in
daa
jmp
faddl
mov
adc
nop
movsb
push
je
add
jl
cmovno
inc
pop
adc
adc
fnstcw
xchg
inc
lea
pminub
mov
nop
es
sar
aaa
gs
inc
inc
shll
or
daa
cmc
add
pop
pop
inc
or
dec
lret
mov
repnz
cltd
sbbb
mov
push
mov
movsl
sub
lret
out
sbb
push
enter
mov
dec
lea
fadds
mov
add
test
jb
stos
pop
aad
aam
push
cmp
testl
cmp
mov
xchg
sbb
ja
lret
ret
pusha
out
sub
cli
cmp
cltd
sbb
add
test
push
test
mov
pop
js
jl
insb
cwtl
push
out
lahf
mov
mov
sub
mov
lods
add
cld
push
movsb
xchg
sub
test
lahf
dec
pop
xor
xchg
and
and
pop
sub
dec
lods
adc
scas
jno
mov
divl
mov
mov
icebp
stos
sbb
outsb
popa
jmp
bound
jae
jo
push
pop
and
sbb
fwait
mov
jnp
mov
push
rcr
xchg
jmp
jns
and
fsubl
push
mov
inc
movsl
sbb
mov
ud1
fnstsw
and
mov
lds
lahf
fs
pop
jg
nop
sbb
test
or
add
bound
push
sahf
rorb
inc
xor
xor
lret
xor
xchg
cmpsl
stc
jle
and
and
jo
xchg
hlt
lret
mov
sub
lcall
sub
popa
fwait
push
pop
mov
or
sub
add
jns
sub
popf
mov
iret
add
int
out
aad
inc
add
mov
xchg
xchg
jg
mov
jecxz
xchg
mov
fcoml
jp
mov
addr16
ss
ret
mov
and
movsb
dec
imul
cmp
sbb
inc
mov
mov
lds
insl
gs
adc
fwait
sbb
adc
pop
loop
adc
adc
inc
mov
aam
add
pop
cs
aaa
stos
movsl
pop
mov
jno
mov
loop
sub
jmp
movsb
inc
in
ret
push
xchg
fnstenv
insl
daa
jo
mov
xchg
mov
into
loop
mov
mov
lahf
add
js
adc
enter
subb
cmp
ret
pop
jge
push
lcall
cs
pop
dec
pop
fwait
mov
popl
popf
adc
cwtl
popf
inc
push
enter
adc
pop
push
cmp
and
call
mov
aam
jge
lea
xor
sub
mov
cmp
push
add
push
mov
mov
mov
sar
or
stc
and
push
outsl
xor
mov
cmp
aam
mov
inc
push
aas
jb
mov
cmpsl
sub
addr16
shll
cmpsb
loop
push
xor
out
pushf
outsb
outsb
shll
rolb
movsb
lds
cmp
cli
mov
mov
cmp
mov
jge
jg
sbb
cmpsb
dec
sbb
mov
mov
cmp
and
cmp
xchg
mov
leave
rcrl
jnp
dec
punpcklbw
inc
sar
and
jae
jmp
xor
aaa
and
jecxz
inc
int3
lods
jecxz
mov
mov
cmp
call
ljmp
mov
push
movsl
pop
mov
cmp
adc
sub
pop
lods
cmc
loop
fs
dec
dec
mov
add
dec
scas
adc
es
stos
out
lds
sbb
xor
into
inc
dec
inc
sbb
ret
mov
mov
nop
in
lods
jnp
inc
jno
sub
lea
and
je
jecxz
and
loop
imul
fimull
mov
sarl
cwtl
popf
jns
repz
shrl
popf
nop
and
or
sarb
mov
mov
imul
aam
sub
into
jae
mov
arpl
pop
icebp
stos
imul
loopne
inc
add
out
push
sbb
imul
push
arpl
mov
lods
fdivrs
loopne
out
cmp
lods
or
sahf
dec
daa
insb
push
imul
jb
rcrl
ljmp
mov
add
xchg
and
push
and
cltd
test
mov
or
jno
or
mov
push
rclb
daa
scas
in
mov
in
rolb
lcall
adc
adc
dec
mov
rcl
scas
out
mov
or
data16
add
imul
mov
test
scas
sub
lds
dec
pop
aas
dec
movsb
push
cmc
push
iret
jge
nop
loopne
cld
adc
push
add
push
lea
outsb
cmpsb
pop
repnz
scas
jl
data16
mov
pop
pop
jns
push
or
pushl
inc
das
in
jecxz
icebp
push
mov
imulb
xchg
mov
inc
or
push
call
and
fs
andl
scas
push
out
jo
int3
pop
ss
shl
mov
adcl
jg
mov
adc
es
fcompl
and
imul
pop
inc
and
clc
cltd
lock
hlt
add
jmp
xor
push
pop
pop
mov
jne
imul
in
push
mov
popf
test
in
fists
xor
adc
js
mov
dec
dec
sti
or
inc
pop
sbb
ret
cld
pushf
sarb
jg
xchg
dec
sahf
ficomps
out
addb
lcall
in
inc
mov
jne
xor
fisttps
fadds
pop
mov
fwait
sub
subb
or
addr16
addr16
sub
fiaddl
pop
fstpl
cltd
aam
insb
mov
and
jns
add
sub
call
nop
lods
es
lret
mov
fs
pusha
jb
add
fwait
je
or
stc
test
mov
pushf
movsl
and
or
ja
lret
sub
mov
insl
mov
outsw
mov
pop
loope
mov
or
test
dec
out
in
xor
nop
dec
out
push
lods
int3
stc
xchg
cmpb
push
fisttpll
loope
movsl
fmull
sub
int3
dec
xor
cmp
push
sub
jl
test
cmpb
cmpsb
add
and
out
jp
fcmovu
xor
cmc
fistps
sub
xchg
imul
fdivs
nop
jne
add
movsb
inc
popf
iret
stc
imul
aas
or
add
test
or
jnp
xor
dec
rol
push
mov
jl
sbb
test
cmp
in
outsb
fdivp
imul
sbb
jnp
sahf
bound
enter
fmull
ret
rol
push
add
sub
adc
sub
jae
or
push
adc
loopne
int
out
pop
dec
pusha
and
dec
lret
lcall
push
cmc
and
mov
pcmpgtd
push
sbb
adc
aaa
xchg
mov
sbb
dec
push
lock
pop
shrl
xchg
cli
test
and
cld
inc
movsl
inc
pop
insb
add
mov
sub
dec
xchg
push
scas
fdivl
dec
mov
iret
mov
pop
repnz
bound
shrb
sub
cmp
ret
scas
mov
pop
mov
inc
sub
lods
mov
xor
in
dec
pop
test
loope
push
fistps
xchg
lock
push
cmp
stos
inc
fiadds
cld
mov
xchg
dec
in
add
sahf
lcall
and
mov
mov
ds
aad
sub
pusha
and
sbb
lods
jge
cmp
mov
mov
int
andb
mov
lret
push
lret
jns
cs
loope
sbb
in
push
push
pop
xor
push
cmp
call
scas
clc
pop
xchg
cmp
sbb
out
cli
jo
cli
lret
pop
pop
sub
xor
cmpl
rcrl
xchg
cltd
test
xchg
and
loopne
cli
push
pop
mov
xor
pop
push
stc
mov
nop
not
jg
scas
shrb
ja
mov
inc
dec
std
icebp
fs
jne
push
mov
push
xchg
gs
push
sub
mov
shrb
scas
dec
mov
add
mov
and
lods
imul
loope
js
rcl
push
clc
dec
ds
movsw
pop
xor
out
mov
jp
xlat
sub
push
popf
and
push
cmpsl
popa
enter
push
jle
call
jle
ret
hlt
fadd
cmp
inc
jecxz
ret
cli
inc
repz
mov
icebp
fcompl
andl
in
mov
stos
jp
stos
or
xor
mov
fdivr
sbb
lea
shll
jnp
push
sbb
dec
inc
sbb
mov
xor
mov
mov
push
or
cmc
aam
pusha
mov
lock
shlb
popl
dec
cmp
adc
sti
pushf
mov
push
fistps
out
lods
imul
dec
mov
in
or
dec
push
andb
ljmp
lcall
iret
mov
dec
cmc
mov
jle
fstpt
test
cmp
jge
adc
cltd
xorb
cvtps2pd
lock
pop
jecxz
xor
add
testb
add
into
pop
jne
test
push
inc
push
lods
sarb
mov
int3
inc
cmpsl
jns
negb
dec
insb
push
xchg
adc
lahf
dec
xchg
and
xchg
and
mov
dec
xor
adc
aam
jl
lea
and
adc
jb
inc
pop
jns
in
mov
add
dec
in
mov
mov
icebp
repz
enter
faddl
adc
cmp
out
arpl
inc
jns
or
or
jbe
jb
mov
sarl
jno
jne
lods
aas
rolb
cs
lahf
aad
ljmp
mov
and
into
xchg
or
data16
stos
mov
sub
mov
sub
mull
scas
sbb
movsb
mov
jecxz
popa
repnz
push
inc
repz
iret
test
test
sub
xor
xchg
std
jp
orl
lea
mov
sti
out
push
mov
test
xor
push
push
mov
xchg
in
adc
mov
xchg
sub
orb
loop
fldenv
push
test
sub
data16
dec
gs
inc
les
outsb
mov
pop
pop
jnp
aas
xchg
in
in
pop
xchg
sub
in
inc
ss
adcb
test
ret
inc
fidivs
sub
cmpl
jo
dec
dec
cmp
jnp
inc
cmp
inc
xor
addl
outsl
mov
fwait
dec
fsts
push
ja
jp
pop
add
inc
rcrb
lcall
or
mov
popf
dec
cmovns
add
push
xchg
add
pop
lods
and
push
pop
add
mov
rol
ljmp
sti
xor
in
sub
inc
shrb
mov
jno
mov
test
push
jae
pop
push
test
or
pop
jecxz
lea
mov
lret
push
jae
jmp
arpl
inc
not
jle
and
andl
fadds
inc
adc
aas
xchg
shrb
test
and
dec
sahf
outsl
dec
dec
outsb
loope
and
xor
mov
lret
jle
ds
cmc
push
push
jno
mov
arpl
daa
inc
repz
pop
clc
ss
adc
jmp
mov
movsb
xor
xchg
jns
add
shlb
mov
or
xchg
sub
std
andl
dec
scas
int3
js
adc
add
sub
dec
mov
cmpsl
nop
add
xchg
fldt
fildll
stos
push
dec
nop
insb
outsl
adc
rolb
or
stos
lods
lret
mov
jnp
push
xchg
push
adc
mov
fidivs
pop
mov
adc
lods
lret
sarb
arpl
mov
ds
jne
in
dec
bnd
push
in
adc
popf
push
dec
rolb
shll
and
push
aaa
xchg
loop
inc
loopne
in
out
stos
das
push
cmp
mov
or
pushf
cmp
adc
scas
bound
jns
clc
xchg
jg
sti
or
mov
mov
jae
aad
enter
loopne
adc
test
mov
in
dec
push
lcallw
stc
xchg
fadd
aam
sbb
jo
or
shrl
sbb
stos
inc
dec
dec
addl
push
xor
repnz
loop
out
lret
xorb
stos
gs
ret
mov
sbb
pusha
mov
push
fsubrl
dec
sub
inc
call
mov
into
sahf
lods
dec
pop
jmp
rcr
cwtl
cmpsl
inc
int
jle
push
xor
sti
nop
aaa
push
dec
add
jo
dec
xchg
testb
and
arpl
js
insb
push
adc
fsubrl
xchg
jl
fidivrs
lcall
dec
or
int3
sub
cwtl
add
push
test
icebp
outsb
addr16
sar
xor
dec
cmpsb
adc
loopne
divl
jge
pslld
loop
pop
sub
and
cmc
stc
je
push
rep
fistps
test
jp
sar
shll
mov
fildll
xchg
mov
inc
lods
cmpsl
xchg
push
jl
cmp
das
cmc
and
in
es
push
sahf
cs
push
jno
dec
and
push
pop
adc
enter
push
jns
push
and
sbb
pushl
cmp
inc
xor
stos
push
stos
and
rcl
add
cmpsb
les
call
cltd
movsb
in
xchg
or
std
bound
add
hlt
fcmovbe
xorb
xchg
shl
out
ljmp
sub
jbe
jnp
loopne
imul
xor
inc
aad
sbb
cwtl
clc
sbb
jnp
lds
shlb
scas
and
pop
cwtl
mov
sub
mov
int
mov
mov
bound
in
scas
sub
ret
inc
sub
js
and
sbb
fs
lods
sbb
inc
xchg
daa
loopne
sbb
aaa
insb
mov
pop
sti
pop
int3
fcmovb
sub
xchg
pop
adc
mov
jns
stos
cltd
test
std
cmp
mov
sbb
pop
inc
aad
or
and
inc
fcomps
mov
cmp
add
sub
movsl
mov
lret
jne
mov
data16
das
or
add
dec
outsl
adc
incl
je
insl
repz
mov
sub
test
cld
fsubrp
dec
xor
or
dec
bound
fildl
loopne
dec
jnp
xchg
xchg
insl
pop
mov
dec
rcll
lods
xor
sarl
repz
add
sbb
add
lods
cmpsl
pop
fisubl
sub
out
sbb
jmp
imul
push
sbb
cmpl
xor
ret
and
pop
out
inc
sti
int
lds
xlat
ds
jns
and
mov
dec
jp
in
xchg
sbb
inc
aam
loopne
jmp
mov
add
adc
pop
fisttpll
sub
xchg
jecxz
adc
nop
sub
sbb
dec
push
xor
pop
adc
inc
inc
out
xchg
xchg
adc
xchg
fwait
sbb
mov
or
mov
int
and
and
xchg
mov
xor
pop
cmp
js
xor
jl
mov
push
pushf
cmp
push
imul
add
xchg
jl
out
push
dec
inc
outsb
rclb
shll
clc
cmp
and
test
or
not
outsl
repnz
mov
ss
mov
imulb
pushf
int
packssdw
pop
sahf
scas
inc
mov
test
jnp
movsl
mov
in
push
jae
cmc
in
or
inc
cld
jl
cmp
shlb
aas
sub
inc
repz
mov
scas
lcall
loopne
sarb
shlb
cmp
push
mov
mov
mov
cmp
shr
iret
jo
dec
mov
xchg
xchg
lcall
add
rcl
sub
xor
cmpsl
test
mov
cmpsl
mov
lret
dec
mov
push
inc
and
out
sahf
jns
xor
or
fsubl
mov
jb
xchg
loopne
push
add
mov
ret
mov
mov
and
sahf
cli
dec
xchg
sbb
push
stc
cmc
dec
xor
adc
inc
push
xor
mov
ja
pop
ret
lret
loop
inc
shll
stc
rclb
shrl
lds
xorl
mov
bound
repz
xor
nop
xchg
jle
or
xor
cmp
xor
inc
add
lret
das
es
outsl
jb
test
sbb
jge
lcall
mov
xor
cmpsl
xchg
cmovle
popa
fsubrl
jg
fnsave
test
sub
hlt
bound
push
inc
pop
lods
stc
dec
insb
jp
insb
scas
les
nop
stos
fdiv
lcall
inc
test
dec
xchg
fcoms
mov
mov
gs
jl
sub
lret
popa
rolb
add
loope
and
std
mov
inc
pop
out
mov
dec
lcall
sbb
lods
aaa
cmc
or
adcl
push
lahf
nop
lods
pusha
add
test
mov
mov
subl
mov
out
fildl
jle
subb
mov
clc
jnp
push
dec
mov
aam
js
popa
sbb
jmp
push
add
adc
mov
pop
arpl
push
xchg
lret
xorl
pop
aas
mov
push
out
sbb
or
and
call
mov
out
add
call
xor
sub
cmpb
adc
arpl
loop
push
pop
inc
and
ret
and
xchg
cli
or
orb
fsts
imul
ss
popf
rclb
mov
jecxz
popa
sub
inc
jg
jp
mov
add
pop
lods
bnd
mov
les
dec
fldl
jae
and
out
xor
cltd
les
fwait
hlt
pop
mov
cmpsl
cmc
cmp
stc
push
or
and
dec
sbb
aad
dec
imul
mov
dec
sarb
pop
inc
cmp
aas
imul
xor
decl
nop
mov
sub
xor
aaa
out
loopne
mov
or
lret
push
ror
insb
add
cmpsb
adc
xor
shrl
nop
jle
jo
dec
ljmp
mov
push
test
fcomps
fdivs
jmp
add
stos
sub
aam
hlt
or
insb
das
stc
mov
arpl
pop
sbb
in
loope
imul
aad
jae
fwait
pop
adc
sbb
or
xor
aam
sbb
loopne
push
lret
xor
les
jno
loope
pop
cwtl
dec
mov
xchg
xchg
and
loopne
or
jp
icebp
xor
mov
shlb
and
push
test
jecxz
imul
jne
in
or
jp
dec
mov
divb
mov
movsl
xchg
imul
lds
aad
push
out
pop
in
sbb
sbb
clc
xchg
mov
xor
mov
sub
repz
sbbb
or
mov
lcall
cmp
mov
cltd
xlat
push
mov
sbb
ret
fs
ret
cmc
inc
sahf
jno
arpl
adc
in
mov
inc
push
ss
dec
lods
and
ljmp
mov
push
xchg
ljmp
in
pop
mov
cmc
mov
dec
stc
pop
cmp
call
mov
adc
and
add
clc
pop
in
cmpsl
sbb
mov
mov
rcrb
ja
out
xor
jl
jp
inc
jg
push
jle
jg
xchg
rol
dec
and
nop
clc
pop
lret
and
icebp
aad
push
lods
or
and
pop
and
out
sbb
mov
push
scas
push
daa
addr16
push
pop
mov
dec
fs
cmp
pop
pop
pop
test
shll
pop
hlt
lret
lods
daa
mov
outsb
xor
pushf
shrb
sub
xor
notl
sbb
pop
fsubp
push
sub
cs
xchg
push
rorb
ficoms
cli
filds
or
or
mov
xor
mov
and
adc
sbb
push
jns
sahf
pushf
mov
mov
pushf
dec
sub
sbb
insb
inc
inc
sub
mov
in
mov
mov
sub
cmp
mov
gs
das
mov
sub
icebp
sbb
push
fdivp
pusha
xchg
test
sub
adc
dec
jmp
loop
in
sub
cmp
pop
jmp
sbb
xorb
mov
mov
xchg
aas
mov
pop
sbb
lahf
jno
jp
ret
push
xchg
scas
xor
cld
clc
shll
mov
lret
aad
pop
push
or
jo
test
in
adc
jae
es
pop
fisttpl
clc
shll
call
jge
inc
fmuls
jecxz
xor
inc
push
inc
jo
xchg
cltd
sahf
call
shrb
xchg
cmp
stc
mov
fnstcw
push
ss
notb
xchg
shlb
cmp
aas
movsb
pop
outsl
popl
mov
or
xchg
add
mov
inc
inc
bound
test
ja
dec
xchg
adc
sbbl
shll
cmp
adc
fistpll
lret
add
pop
imul
mov
or
adc
int3
sbb
fcmovne
jmp
sarb
xor
sarb
test
sbb
jl
sar
sbbb
and
xchg
repnz
mov
xchg
jae
cmc
xor
lods
shll
sti
leave
sub
and
lret
inc
jl
stc
int
pop
or
and
and
pop
xchg
xchg
lods
or
dec
enter
mov
ja
lods
popa
and
scas
mov
xchg
adc
xor
mov
das
mov
insl
in
lds
cmc
xchg
bound
int
mov
addr16
arpl
sub
sbb
cmc
mov
sub
adc
cmp
arpl
dec
dec
les
mov
sbb
adc
push
xchg
outsb
mul
cmp
cmp
sbb
dec
shlb
loope
pop
push
xor
je
or
mov
les
mov
pushf
js
int
or
dec
in
add
mov
xor
int3
xorb
stos
lds
lahf
iret
pop
loope
dec
mov
testb
rcrl
cmp
xchg
shrb
enter
aaa
and
mov
lahf
clc
ds
xlat
cmp
jmp
pop
inc
jmp
shrl
fnstenv
aam
out
xor
dec
aam
dec
and
cmp
les
aas
and
aas
cs
mov
cltd
call
in
jb
pop
cmp
out
adc
add
push
push
sbb
xor
inc
pop
push
sub
mov
dec
movsb
jge
pop
gs
mov
rol
fwait
xchg
sti
add
popf
jne
imul
pop
push
je
fisubs
mov
lret
mov
inc
movsb
popf
sbb
inc
mov
xor
and
pop
cmpsl
jmp
sbb
or
mov
pushf
mov
aam
sub
fiadds
pop
pushf
dec
cmc
shl
arpl
shld
fiaddl
inc
int
pop
outsl
xor
sbb
shrb
inc
mov
mov
cmp
xchg
push
mov
stos
push
cmpsb
mov
xchg
ss
outsl
pop
lock
adc
dec
jl
cmp
repnz
jnp
shlb
in
stos
xor
ret
pushf
lods
inc
cwtl
stos
hlt
repnz
pushf
xchg
outsb
jae
mov
cmp
repnz
jg
mov
jbe
push
mov
daa
std
inc
inc
push
push
std
sub
aam
add
clc
sahf
mov
sub
xor
test
cmc
add
rorl
and
dec
mov
xor
sbb
jg
cmc
dec
imul
lcall
adc
stos
dec
pusha
mov
push
cli
push
jmp
outsl
cmpsl
inc
mov
xchg
add
inc
andb
lret
out
jo
mov
iret
arpl
dec
ret
out
xchg
mov
inc
enter
rcr
and
test
leave
repnz
mov
mov
mov
fldenv
ficompl
xchg
leave
loop
in
test
or
pop
out
add
ja
push
mov
mov
dec
dec
sub
popa
jle
call
xor
popf
push
mov
data16
cmp
sbb
or
mov
dec
xor
push
cmp
in
mov
jns
or
lods
fsin
in
add
insb
adc
or
mov
lea
ja
fidivrl
push
xchg
mov
fsubl
sub
pop
mov
mov
add
inc
mov
push
rcrb
pop
xchg
rcrl
test
repz
cs
out
sbb
daa
jne
xchg
shr
xchg
mov
in
add
inc
push
sub
and
imul
out
xor
mov
mov
add
jae
sbb
inc
in
stc
jno
ljmp
adc
pop
jp
mov
rcrl
push
sub
test
cli
push
addl
sbb
imul
push
sbb
fdivl
sbb
inc
inc
jle,pn
cmp
shrb
push
jno
insl
xchg
arpl
icebp
lds
out
mov
dec
inc
test
in
xorb
add
push
push
inc
dec
ret
jmp
mov
xor
and
les
hlt
jno
xor
lret
stos
lret
shll
or
mov
mov
cs
icebp
mov
inc
adc
or
test
out
mov
mov
stc
lahf
test
addr16
push
sbb
pop
mov
call
test
mov
push
fs
popf
jg
sub
xor
popa
lods
stos
shrl
dec
sub
xor
repnz
cmp
cs
dec
ss
call
loopne
cli
mov
addl
sub
push
adc
aas
inc
add
ja
nop
jns
fistpl
mov
mov
out
xlat
mov
or
mov
inc
test
shl
rclb
repz
test
xor
pop
flds
or
lahf
loop
sahf
je
jb,pn
adc
bound
call
daa
lods
bound
xchg
test
pop
adc
inc
iret
addb
movb
ja
jae
inc
aaa
adc
lds
stos
add
adc
test
aam
stos
stos
add
xlat
push
push
into
push
aad
imul
pop
out
out
shlb
lahf
sbb
dec
jnp
or
and
inc
xor
jo
mov
mov
mov
sub
lret
jns
ficomps
cmp
ds
ror
cld
mull
dec
cmpsb
addr16
mov
das
fwait
movsl
jbe
mov
insl
jecxz
adc
fwait
mov
movsl
cmp
roll
fneni(8087
sar
je
or
dec
arpl
out
out
imul
lcall
jns
shlb
leave
or
imul
repnz
das
into
int
int3
xor
roll
imul
sub
test
xchg
imul
or
adc
mov
movsl
jo
add
sbb
in
stos
sarb
popa
lfs
adc
inc
nop
push
arpl
je
jo
repz
cmp
sub
aas
jne
xor
out
shrb
xchg
insl
cwtl
push
movsl
fdivrl
rcrb
sub
jp
sbb
and
push
pop
adc
jp
pop
sub
xor
stos
xchg
sub
inc
pop
fcom
es
and
sbb
icebp
sti
movsl
mov
push
xchg
daa
sub
sahf
punpckhbw
mov
leave
mov
adc
jb
adc
or
je
popf
outsl
mov
pop
adc
mov
das
loop
aas
fistps
or
dec
dec
pusha
xor
scas
into
insb
add
out
or
dec
sbb
mov
mov
mov
push
mov
scas
sbb
dec
mov
adc
mov
aam
jmp
inc
adc
push
imul
lret
xor
fs
das
aad
mov
mov
dec
mov
loop
std
int3
in
xchg
movsb
adc
fcoml
ja
leave
jo
jmp
jbe
push
xchg
call
dec
sub
mov
inc
inc
ds
fisttpl
mov
cmp
mov
mov
fwait
xor
adc
inc
jns
arpl
sbb
mov
mov
push
inc
aaa
sti
pop
xor
mov
repnz
jno
fcos
mov
into
xor
cmp
lock
pop
in
fidivs
dec
mov
or
mov
je
repz
lret
push
xor
sub
int3
pop
fxsave
pop
ja
lea
jmp
lea
insb
insl
out
push
loope
lea
es
pop
rcrl
mov
aam
cwtl
sahf
jge
insl
jge
jb
pop
nop
bound
pop
and
ljmp
mov
shlb
gs
cmp
mov
pop
loop
cmp
and
pushl
or
lahf
dec
pusha
fnstsw
inc
rcl
outsb
pop
cld
int3
or
pusha
jbe
mov
inc
ret
icebp
je
mov
cltd
dec
fwait
xorb
cmp
test
jo
fsubr
jp
popf
arpl
dec
add
leave
sbb
cltd
test
mov
loop
cmpb
sbb
or
movsl
and
mov
imul
out
inc
arpl
test
call
pusha
pop
add
dec
imul
pop
xchg
out
adc
jl
sbbb
jb
rcl
mov
test
or
mov
cltd
inc
jmp
mov
and
xor
push
cmp
scas
sub
sti
shlb
lds
test
pop
aad
jbe
pop
xchg
outsb
mov
and
push
jmp
and
pop
dec
and
imul
cmp
in
mov
pop
cltd
xchg
in
xchg
insb
aam
repnz
jmp
mov
rcrb
xorb
pop
int3
mov
cmp
addr16
adc
mov
arpl
add
pop
into
insl
movsl
lcall
or
repnz
stos
mov
addr16
dec
mov
je
mov
testl
pushf
jno
and
xlat
adc
pusha
ljmp
jmp
sbb
in
sub
xor
push
mov
sbb
popf
cltd
jbe
repnz
sarb
mov
and
aam
pop
cli
aaa
in
std
scas
in
adc
ljmp
add
adc
lret
push
addr16
lret
pop
adc
ds
hlt
in
jge
rolb
dec
jnp
dec
adc
sub
cmpl
icebp
cmc
mov
dec
mov
jmp
out
jmp
in
divl
loope
push
add
mov
mov
xor
mov
add
out
lret
sub
pop
jp
push
and
sbb
cltd
clc
nop
fadds
mov
inc
imul
cmpl
inc
cs
clc
mov
pop
push
les
and
jecxz
fidivrl
lock
movsb
out
icebp
decl
mov
roll
lahf
sub
dec
stos
sbb
andb
lods
cld
add
leave
xor
call
and
and
jae
test
cmpsb
xchg
jle
sbb
ja
jg
out
faddl
inc
and
jne
test
adc
insb
add
sbb
mov
out
add
out
mov
sahf
or
pop
loope
inc
das
popf
inc
rcr
mov
pop
and
cltd
pop
outsb
sbb
lahf
sbb
adc
mov
pop
js
stos
pop
xchg
mulb
cmc
leave
push
mov
sbb
fsts
push
mov
dec
shl
cmpsb
mov
pop
fs
int
cmp
ror
or
adc
inc
in
repnz
push
stos
test
fwait
mov
mov
push
pop
inc
mov
push
xorl
push
fmull
jle
inc
dec
sar
filds
push
sbb
imul
shll
jmp
push
ficoml
jne
rol
mov
sub
in
and
out
dec
dec
aad
xchg
ss
aas
shufps
popf
xor
xchg
sbb
sarb
dec
push
fidivrs
push
push
test
iret
mov
jle
sub
das
ja
jp
add
adc
pop
mov
ljmp
fsubrs
sahf
js
jg
xor
mov
push
mov
jle
sub
in
out
mov
adc
inc
popa
ljmp
ret
out
mov
mov
fisubrl
dec
adc
fwait
sub
push
inc
popa
ret
xchg
add
cmp
adc
sbb
pop
add
gs
inc
dec
cli
and
dec
pop
jmp
jb
gs
out
sbb
inc
daa
insl
fcompl
fdivl
dec
sbb
iret
iret
in
mov
rcrl
add
and
xor
sub
bound
jge
cmp
push
mov
xor
out
push
or
or
and
iret
popf
loopne
test
rorl
jb
inc
or
ret
xor
mov
into
arpl
fcompl
aas
push
sbb
insl
iret
jbe
and
insb
in
icebp
add
test
leave
ljmp
and
mov
add
bound
ret
into
lods
and
xchg
and
adc
inc
fs
inc
push
xor
mov
mov
sub
push
test
hlt
or
movsb
fcoms
pop
outsl
cwtl
inc
xchg
repz
jmp
jb
lret
test
pop
subl
xchg
jmp
push
adc
xchg
popa
mov
cmpsb
xor
in
dec
push
dec
dec
shl
push
loope
aas
mov
sbb
mov
pop
rolb
test
or
imul
sub
fisttpl
mov
pop
fstps
out
scas
push
xchg
add
outsb
dec
or
cmc
stc
loope
fwait
int3
jle
mov
outsb
stos
shr
mov
dec
jmp
or
mov
jns
fwait
mov
mov
aad
sbbb
fisubrl
pop
and
movsb
inc
inc
in
mov
repnz
xor
jmp
or
sbb
outsl
outsl
sub
movsb
fs
mov
xchg
outsb
lds
add
addr16
aad
imul
cmc
mov
push
cs
push
pop
mov
pop
xor
xor
sti
out
rolb
mov
jbe
or
inc
rcl
or
mov
mov
shrb
cltd
adc
xor
insb
sub
cmp
mov
stc
add
sbb
ret
arpl
mov
int3
mov
sbb
inc
push
sbb
pop
sbbl
mov
cmp
sub
lock
imul
fiadds
movsl
out
cmp
cmp
xor
sbb
nop
pop
add
inc
movsl
imull
xor
xchg
cmc
repz
push
repnz
loop
pop
fidivrs
mov
cmc
mov
inc
into
stos
nop
pop
pop
or
fmull
xchg
add
pop
rcrl
aam
stos
push
dec
mov
sub
lcall
jmp
sahf
shlb
arpl
cltd
push
imul
push
push
out
and
cmp
adc
bound
daa
aad
xlat
lock
adc
mov
negb
jb
mov
ret
ds
xlat
pop
movsb
jno
mov
clc
inc
add
shrl
inc
std
pop
sbb
push
jnp
push
jne
cmp
mov
pop
push
xor
dec
sti
aas
call
or
rolb
push
and
or
dec
jbe
sbb
push
mov
sbb
mov
dec
xor
push
dec
and
mov
fdivs
rorl
mov
dec
pusha
test
and
mov
test
sub
cmp
add
adc
push
lcall
push
iret
clc
dec
sbb
ljmp
in
insl
and
xchg
sbb
mov
pop
fldcw
mov
jns
pushf
jnp
scas
push
popa
flds
in
repz
mov
fsubr
or
dec
xchg
mov
xchg
aad
xor
insb
mov
xchg
mov
jl
jne
mov
aas
and
popf
dec
scas
xor
jecxz
pop
cmp
jg
test
dec
and
pop
testb
xor
adc
lea
orb
or
shr
push
scas
fisubs
out
test
pop
cmpsb
mov
insl
push
mov
fdivrs
in
sub
mov
arpl
mov
test
loop
mov
aas
pop
mov
pop
push
mov
negl
dec
das
rcrb
mov
sub
sub
daa
inc
nop
pop
jae
sub
pop
cld
fistpl
outsb
dec
sub
imul
mov
jmp
dec
mov
fisttpl
or
xchg
aaa
sub
and
and
sub
mov
sub
fs
xchg
jnp
sarl
movsl
xchg
arpl
dec
jmp
sbb
ret
or
test
jne
inc
insb
aam
es
outsb
nop
adc
inc
mov
aaa
pop
cmp
aad
push
call
test
aaa
inc
pop
dec
pop
loopne
mov
fsubrl
pop
or
out
push
cmpsb
and
jne
nop
xor
sbb
push
dec
loope
pop
repz
sub
cltd
push
mov
into
xchg
gs
xchg
mov
push
mov
hlt
repz
push
pop
sub
rcr
inc
pop
sbb
jecxz
mov
in
cwtl
or
mov
cli
sar
mov
mov
lods
int
mov
test
push
rcrl
add
daa
push
dec
lahf
stos
xchg
divl
and
xchg
mov
inc
out
mov
fldcw
mov
mov
xchg
popf
imul
push
decb
adcl
inc
mov
insb
jmp
push
sub
cmp
test
mov
insb
out
mov
ds
mov
cltd
or
fcompl
subb
lds
ret
and
fcmove
movsb
mov
jbe
lahf
rcll
test
clc
or
push
push
pop
mov
and
xor
lcall
ret
jl
aas
int3
movsl
xor
test
hlt
pop
gs
add
push
cwtl
xor
mov
aas
mov
lods
and
xchg
push
add
jecxz
dec
fsubl
mov
mov
hlt
xchg
xchg
pop
movsb
movhps
insl
xorl
mov
repnz
dec
aad
add
sahf
mov
gs
in
push
call
pushf
mov
push
out
adc
insb
pop
aam
mov
icebp
sub
mov
ds
jp
sbb
sub
xchg
addr16
add
aad
xlat
xor
movsb
je
dec
adc
gs
and
lods
cltd
inc
pusha
jno
mov
jmp
sahf
push
or
std
inc
jecxz
mov
lret
dec
pcmpeqb
dec
mov
mov
jb
cwtl
imul
je
add
icebp
sahf
dec
xchg
mov
je
daa
mov
or
push
ljmp
and
adc
int3
push
inc
in
ja
push
pop
cmpb
dec
mov
pop
cmp
adc
xor
test
and
fisubs
cmp
rorl
fists
std
addr16
hlt
add
cwtl
pop
aam
inc
sub
cld
out
das
adc
lret
in
or
adc
dec
jo
push
enter
inc
arpl
adc
imul
ret
call
arpl
lods
pop
cmpsl
stos
pop
pop
leave
insb
xchg
int3
or
sub
in
loope
cmp
dec
btr
inc
sub
bound
out
cmc
mov
and
pop
data16
push
mov
out
mov
inc
or
mov
inc
into
mov
mov
fidivs
stos
call
add
stos
add
adc
rolb
fwait
sub
cmp
icebp
sti
les
out
ret
mov
and
lea
inc
or
mov
sub
imul
xchg
rcrb
in
add
gs
fldenv
push
leave
adc
into
test
xor
sub
push
xor
daa
lahf
movsb
test
cmp
adc
push
jmp
cmp
inc
andb
mov
outsb
push
cmp
cmc
mov
adcl
std
scas
sbb
ja
xor
inc
jae
xor
aad
or
fbld
adc
add
mov
jp
dec
pop
inc
and
dec
push
call
mov
hlt
xchg
push
mov
mov
jecxz
orl
dec
add
test
push
sbb
jmp
add
shll
je
jge
add
push
adc
push
sub
push
lret
fwait
jecxz
std
pop
ficoms
in
ja
fwait
push
mov
int3
and
push
jl
xchg
pop
movsl
lahf
loop
mov
cwtl
fidivs
or
xor
lahf
mov
call
dec
mov
mov
stos
xor
jo
pop
pop
mov
jbe
or
mov
push
pop
std
jne
lcall
add
xlat
popf
jp
repnz
ja
sub
mov
imul
xlat
pop
add
push
inc
imul
sub
es
jnp
ss
cmp
cmp
adc
jecxz
mov
enter
mov
aam
and
inc
or
orl
es
outsb
mov
cmp
pop
imul
add
shrb
into
out
xchg
xchg
out
push
and
lds
jnp
xchg
std
pop
mov
shll
mov
icebp
push
clc
iret
test
jle
lcall
lcall
dec
or
pop
mov
out
adc
push
pop
or
mov
addr16
arpl
cld
jae
adc
add
sbb
dec
mov
fdivrl
mov
iret
and
xor
push
ret
pop
mov
jle
xchg
fstps
mov
mov
adc
das
sub
cli
repz
js
push
push
xor
jle
js
xor
mov
test
push
or
jl
dec
pop
out
mov
mov
mov
sub
mov
cmp
clc
xchg
std
jge
or
sub
dec
into
xor
sbb
mov
cli
push
mov
pushf
push
inc
call
and
das
jo
adc
mov
call
cltd
aas
cmp
xor
add
test
push
jge
addr16
xchg
stos
gs
lods
mov
mov
ret
iret
jnp
loop
test
hlt
dec
loope
ficoms
test
jnp
push
fs
jns
ret
and
cs
in
nop
fcmovnbe
mov
ljmp
mov
pop
int3
aaa
or
xchg
stos
leave
jo
daa
shlb
sbb
mov
and
pushf
fcmovnu
mov
dec
or
and
daa
cmp
imul
and
mov
xor
arpl
push
shlb
dec
jno
inc
pop
movsl
adc
adc
push
mov
inc
add
movsb
jge
jbe
sub
push
in
lea
aas
add
push
mov
sub
add
pop
in
test
lahf
sbb
testl
sbb
pop
xor
and
or
stos
adc
cmp
and
loop
cmc
jg
pop
arpl
scas
or
sbb
push
xor
jmp
pop
dec
out
clc
mov
mov
xchg
lds
push
fstcw
mov
ljmp
das
inc
mov
ds
ja
cwtl
ds
adc
in
xlat
mov
mov
mov
adc
in
mov
scas
mov
xor
inc
out
inc
sub
jmp
mov
in
cwtl
sub
xchg
mov
jmp
out
mov
sub
les
or
sub
sub
ds
in
add
rcl
adc
aad
cmp
jbe
sub
jnp
popf
mov
aad
mov
les
jge
in
push
mov
repnz
sub
imul
mov
xor
push
jge
pop
cmp
xchg
sub
js
cmp
out
jbe
push
lods
jbe
out
loopne
xchg
outsb
jne
fsub
inc
and
out
pushf
je
xlat
les
iret
push
repz
dec
je
pop
sahf
sub
add
xchg
xchg
push
ljmp
sbb
mov
sbb
mov
inc
outsb
and
pop
sub
in
mov
xchg
fnsave
jns
pusha
repnz
js
jns
or
es
jae
jp
cwtl
adc
xchg
dec
lret
ljmp
or
fwait
sub
pop
xchg
adc
or
sbb
jo
bound
mov
jmp
xor
pop
sub
mov
jo
clc
fcoml
iret
test
sub
out
repnz
jbe
cmp
cmpsb
inc
arpl
fcmovne
sbb
enter
rol
jno
pop
xchg
mov
aad
int
lds
movsl
fnstsw
std
mov
fdivrl
stc
ljmp
pop
lahf
std
sbb
outsl
fmull
xchg
add
stos
xorl
aas
imul
cwtl
push
jle
pop
ret
js
test
stc
shlb
mov
dec
xorl
bound
pop
cld
push
sbb
les
daa
xchg
cmp
pop
dec
mov
push
insb
lods
jmp
mov
inc
aas
lret
js
cs
mov
gs
aad
shlb
aas
hlt
movsl
flds
loope
sub
lds
inc
cmc
mov
dec
aaa
jle
cmp
call
mov
jl
cmp
decl
and
rclb
xchg
pop
jmp
ret
fwait
cltd
mov
mov
aas
in
jp
dec
add
lcall
cmpl
jecxz
xor
mov
mov
imul
mov
pop
jp
mov
orl
repnz
lahf
stc
je
outsl
idiv
lds
xchg
or
sbb
inc
add
dec
ljmp
xchg
and
rcrl
sub
popa
insb
push
in
rol
int
jge
cmp
push
pop
scas
out
cmpsl
or
das
insl
cmpl
enter
push
dec
je
fcmovne
jne
hlt
pop
xchg
cmpsb
fisttpll
push
aad
add
xor
sti
icebp
jae
xlat
aaa
push
pusha
mov
sbb
jmp
outsb
test
lods
xlat
dec
adc
jb
mov
iret
sub
shll
sti
and
das
int3
pushf
or
idivl
inc
addr16
lock
pop
jecxz
mov
mov
out
push
dec
in
xchg
and
mov
aam
jg
xchg
pushf
lea
and
mov
mov
mov
xchg
push
jecxz
in
adcb
pusha
xor
sbb
jecxz
adc
or
mov
ljmp
sbb
insb
mov
dec
add
scas
repz
loopne
pop
inc
sub
stos
sub
pop
xchg
ljmp
insl
loopne
cmc
test
enter
sbb
push
lcall
mov
cmc
xchg
out
nop
std
cs
or
scas
les
push
or
int
cmp
push
xchg
fucompp
pop
cs
push
or
push
pop
popf
shll
int
divps
push
adc
push
test
adc
mov
add
loope
popf
mov
and
test
jo
sub
adcb
popf
jns
rorb
inc
or
xchg
pusha
movsl
ret
pop
out
and
add
sarb
adc
jecxz
popf
int3
mov
xor
loopne
xor
xor
sbb
mov
inc
push
lds
test
sbb
sarb
xchg
and
shlb
int3
lods
lcall
jb
loopne
jg
pop
pop
int
lods
pop
into
add
fisttpll
adc
push
mov
int
xchg
fsubrs
int
clc
lcall
fidivrl
sub
mov
add
clc
mov
cltd
sbb
into
dec
push
add
xor
test
mov
shlb
inc
push
sbb
ss
jae
das
lods
nop
mov
dec
inc
xchg
lahf
cmpsb
pushf
scas
or
adc
stc
mov
aam
dec
push
push
mov
jecxz
roll
sub
dec
dec
xor
sub
add
xchg
pop
lds
adc
mov
xor
dec
cmp
lret
mov
push
sub
pop
and
pusha
xchg
jmp
pop
push
ficompl
mov
mov
imul
mov
out
out
add
pop
adc
nop
fdivrp
sarl
push
mov
mov
out
imul
pop
jbe
pop
mull
lret
inc
xadd
mov
jbe
pop
adc
jns
into
mov
std
push
sub
pop
sbb
cmp
mov
cs
out
push
dec
popf
scas
sbb
test
leave
xor
ljmp
push
sbb
shlb
push
aam
sub
mov
xlat
fists
nop
fnstsw
add
xor
ret
mov
negl
test
mov
nop
loope
aam
hlt
cltd
mov
cld
mov
dec
mov
or
xor
ljmp
rorb
or
cltd
popf
shl
mov
bnd
push
push
xor
pop
xchg
or
or
test
push
fidivl
arpl
sarb
or
xchg
jne,pt
jbe
adc
outsl
or
add
mov
cmpsl
movsb
sbb
inc
popa
repnz
cwtl
insb
inc
and
scas
push
sub
mov
out
das
or
scas
fdivp
in
mov
mov
data16
int3
xlat
loopne
xchg
jg
mov
fdivr
pop
popf
xchg
adc
nop
hlt
sbb
xor
or
sub
sub
lods
jg
sub
jo
ja
ljmp
cmpsl
pop
xor
ret
mov
adc
cwtl
cmc
lahf
loop
or
call
sbb
or
xor
xchg
popa
xchg
add
arpl
pop
xchg
imul
mov
jno
jecxz
mov
stos
inc
push
rolb
push
imul
mov
out
cmp
std
push
mov
rorb
aas
jno
sarl
das
loopne
xchg
out
sarl
cmp
daa
add
scas
mov
xor
jno
sbb
add
xchg
ja
push
sbb
je
test
bound
xlat
unpckhps
in
mov
popf
jbe
test
popa
sbb
add
pop
sub
xchg
xchg
imul
mov
mov
xchg
out
adc
jmp
dec
jmp
push
fmul
aas
dec
and
popa
push
rcrl
sahf
cli
inc
addr16
js
hlt
int
push
xchg
lret
into
push
dec
and
repz
outsb
mov
rcll
push
adc
xchg
or
adc
cmpsl
mov
dec
ljmp
shrl
jae
xor
cmp
les
or
xchg
mov
in
cmp
pusha
xchg
pop
out
jne
xchg
pusha
mov
push
scas
es
in
test
add
mov
stc
jae
or
xor
pop
sbb
jbe
mov
cli
inc
dec
lcall
fmull
adc
push
mov
fldl
adc
pushl
sar
push
xchg
fistps
ljmp
imul
pushf
sbb
inc
fwait
outsl
ja
iret
jl
loope
adc
xor
in
inc
movsl
inc
stos
or
or
shrb
out
cmpsb
pusha
mov
rcrl
dec
mov
ret
xor
fists
ja
jnp,pn
fstpt
or
add
jne
add
cmp
icebp
jp
push
push
int3
fisubl
lea
lods
fisttpl
ds
js
lods
addr16
or
sbb
ja
mov
or
pop
or
enter
lds
cmc
pop
in
push
loope
cwtl
sbb
and
mov
mov
insl
dec
adc
loope
add
push
inc
push
or
add
je
push
into
ljmp
sbb
cltd
scas
push
xchg
aam
and
jmp
dec
test
sbb
push
xchg
mov
out
or
outsl
jno
dec
mov
mov
stos
add
or
mov
push
pusha
sub
int
je
jg
lcall
pop
xor
adc
js
sub
jo
and
loope
int3
sub
shlb
cmpsb
fwait
sub
jbe
ja
inc
popa
inc
sub
sbb
adc
mov
jecxz
scas
out
xchg
fstpl
push
mov
je
sbb
stos
out
cwtl
hlt
mov
aam
mov
lods
bound
xchg
mov
fdivr
sbb
movsl
cmpsl
jns
daa
and
test
add
dec
xor
lds
icebp
aad
mov
aam
push
add
into
leave
fisubl
pushf
pushf
lret
xchg
bound
rolb
push
pushf
cmpsb
clc
add
sbb
xchg
dec
mov
jo
xchg
push
xor
aaa
jbe
add
mov
sbb
add
jecxz
adcb
inc
pop
icebp
aas
pop
cmp
repnz
pop
jns
loopne,pt
aam
push
pop
mov
add
pop
cmp
xchg
dec
in
mov
xchg
sbb
inc
stc
fs
movsl
testl
jmp
mov
mov
cmp
divl
mov
add
rcrl
add
loop
mov
fwait
mov
mov
cmp
jno
mov
nop
aaa
and
dec
jecxz
dec
pusha
sub
and
fildll
xchg
mov
addr16
push
pop
jo
hlt
dec
loopne
orb
xor
sub
inc
iret
mov
lahf
out
fldt
jae
sub
int
outsl
mov
mov
push
aaa
xchg
and
ss
aad
mov
stos
leave
cltd
orb
and
xor
je
fwait
ret
dec
rcrb
mov
push
insl
rcr
aam
repz
jmp
adc
or
push
or
mov
add
hlt
mov
push
sbb
add
stos
mov
adc
push
push
cmpsl
dec
pop
popf
lds
cmp
jl
inc
scas
pop
sti
pop
mov
hlt
mov
jns
popa
loop
mov
pop
ja
lea
cmp
pop
sub
jb
cmp
lods
lret
jg
pusha
lcall
shlb
jo
enter
lcall
sti
je
xchg
jnp
adc
pop
mov
test
mov
xchg
inc
enter
dec
mov
and
ret
int3
ret
fistps
aam
ja
stos
outsb
addl
in
negl
test
mov
jns
outsl
pop
push
es
lret
push
andb
jl
inc
lret
inc
shrl
int3
rorl
and
jmp
outsb
ja
dec
ss
or
cmpsb
lods
fldz
pop
cmpsb
arpl
pop
pusha
imul
mov
iret
sub
fadds
cli
pop
jbe
lret
bound
mov
push
add
test
push
shlb
cltd
aas
call
lds
cmp
and
in
es
test
call
adc
xor
sbb
in
push
pusha
rcrl
lahf
scas
dec
scas
popa
add
dec
es
dec
lret
cmp
sbb
mov
ja
bound
and
mov
mov
add
or
call
xchg
xchg
jae
sbb
aam
frstor
add
ret
lock
addr16
es
xchg
mov
fisttpl
ljmp
cwtl
int
dec
das
inc
gs
mov
xchg
lods
out
clc
mov
aaa
inc
out
scas
xchg
pop
stos
jle
lds
jbe
or
aad
fildll
inc
xchg
sbb
js
mov
out
pop
xchg
sbb
adc
into
push
mov
arpl
out
mov
ss
xchg
rcll
insb
imul
notb
icebp
inc
xchg
cld
mov
out
insl
jo
push
shl
shlb
out
mov
pop
adc
lcall
sarb
jmp
push
repz
insb
cmpsb
repnz
test
jae
insb
cmpsb
mov
push
sub
daa
ljmp
mov
shll
push
or
and
fsubs
jg
sub
cmp
fmuls
dec
faddl
jbe
pop
mov
push
xchg
imul
xor
push
loopne
out
daa
xchg
out
into
push
jns
dec
add
in
cmp
pmulhuw
mov
outsl
mov
jg
add
pop
inc
repnz
scas
xchg
jg
dec
rol
push
mov
loopne
das
into
lahf
ljmp
jns
fdivrp
in
clc
test
cmp
xor
xchg
int3
add
incl
adcb
in
and
popa
xchg
or
subb
inc
sar
push
pop
add
sbb
push
dec
pop
test
ret
jmp
sahf
jo
bound
or
inc
pop
add
int3
aas
scas
mov
pop
imul
leave
dec
push
push
dec
test
popf
movb
test
sub
adc
mov
mov
into
push
test
adc
lahf
adc
xor
mov
pop
mov
push
loope
pop
stc
lea
popf
xor
cmpsb
mov
dec
adc
push
cmp
mov
loop
fcom
das
jp
ds
sti
fnstenv
int
pop
lods
jae
jge
imul
dec
jl
push
loop
pop
rorb
mov
xchg
mov
adc
push
or
jnp
jg
push
int
lahf
and
daa
subl
cmpsl
enter
les
out
pop
push
push
fucom
cmpsb
mov
mov
stc
mov
or
and
mov
cli
or
inc
inc
pop
test
int
push
rcr
enter
loop
loope
inc
out
mov
cmp
popa
nop
stos
jnp
mov
mov
ljmp
or
add
test
pop
in
addr16
dec
or
mov
jl
mov
xor
sbb
cs
push
iret
add
test
push
int
out
fwait
in
or
bound
cmc
test
sub
push
mov
das
and
sub
popa
leave
lret
pop
cmp
repz
sub
in
inc
jno
cwtl
and
and
inc
fldt
hlt
in
cmpb
pop
mov
jne
out
jo
rclb
mov
mov
sub
sub
popa
pop
repz
mov
xlat
adc
lahf
add
sbb
insl
jo
or
lcall
dec
aad
pop
sub
xlat
repnz
fdivl
jmp
and
icebp
loop
enter
add
cmp
dec
mov
enter
pop
pop
xchg
insl
imul
or
mov
cmp
icebp
dec
xchg
pop
sarl
sub
data16
and
popa
outsb
aam
daa
testl
sub
nop
loope
mov
bound
nop
fnstenv
sahf
arpl
and
ud2
dec
out
pop
mov
xorl
das
outsl
xchg
lock
jno
lea
mov
in
jbe
fmull
sbb
mov
les
mov
fwait
fs
repz
pop
add
mov
mov
jmp
inc
mov
in
jnp
stc
xor
push
idivb
int
xchg
add
out
xchg
icebp
adc
or
out
mov
adc
pop
nop
xor
out
in
mov
xchg
xchg
cs
andl
test
and
loop
mov
jmp
out
outsb
test
lods
xor
in
loopne
sarl
inc
inc
fidivs
icebp
add
push
in
insb
rcrb
jns
cmp
pop
ret
dec
jp
lods
adc
sub
pop
jecxz
sub
pop
adc
sub
inc
inc
dec
fxch
es
mov
outsl
ret
cwtl
loop
pop
fnstenv
or
out
add
iret
pop
aad
pushf
idivb
jnp
push
icebp
enter
push
cmp
in
repz
mov
dec
jb
pusha
cwtl
add
mov
push
in
aam
push
pop
icebp
jns
fbstp
rorl
and
push
pop
mov
ret
push
lods
xchg
shlb
bound
and
and
and
std
mov
fwait
call
in
add
add
push
jl
xchg
adc
mov
lods
lds
aas
ljmp
out
mov
jne
mov
out
push
jl
arpl
iret
adc
adc
adc
mov
mov
divl
lret
shl
jge
in
adc
mov
popf
cmp
outsb
stos
jbe
arpl
arpl
rcl
fnstenv
popa
orl
fidivl
sub
jecxz
sbb
jb
aad
icebp
xor
ja
ret
sub
idivb
mov
stc
cmpsb
or
test
pushl
jecxz
lods
dec
pop
repz
stc
cs
inc
fildll
aas
leave
push
pop
mov
jno
rcr
scas
inc
add
sbb
pop
ljmp
flds
pusha
mov
dec
ficoms
aas
inc
dec
pushf
data16
in
push
testl
push
rcll
mulb
push
xchg
dec
mov
sti
fstps
pop
or
sbb
xor
cmp
or
or
jb
xor
jg
shrl
fnstsw
sti
push
imul
lcall
or
inc
clc
js
pushf
shl
cmp
scas
mov
ljmp
add
imul
cmp
add
pop
adc
cmpsb
mov
ss
dec
push
mov
dec
pushf
and
or
lret
sbb
test
cmpsl
rcl
inc
cwtl
dec
sbb
fsubl
push
jne
jmp
test
add
sbb
ret
pop
pushf
mov
or
cwtl
pop
shll
cmp
ja
negl
mov
mov
jns
inc
shl
inc
shll
add
sub
fmuls
into
mov
or
loop
aad
pop
xchg
push
push
nop
and
stc
adc
jns
ret
loope
pusha
jle
or
dec
push
dec
nop
mov
sbb
pop
in
pop
mov
iret
or
mov
test
or
imul
rorb
mov
mov
xchg
imul
loopne
or
orl
sub
dec
inc
fwait
sahf
mov
lahf
push
xor
lods
divb
mov
andl
add
sub
lds
jns
jns
movsb
test
push
or
enter
mov
xchg
mov
mov
sbbl
or
mov
sahf
lock
lret
movsb
push
sbb
pop
scas
mov
mov
xrelease
inc
repz
dec
es
scas
jo
mov
sbb
sub
mov
scas
jmp
push
mov
xor
cmpsb
pop
ret
int3
test
mov
je
cmp
test
jp
add
popf
push
push
xchg
mov
scas
pop
push
fcoms
and
ljmp
loop
cli
or
and
out
popf
jns
and
outsb
jp
daa
inc
notl
inc
aad
push
mov
mov
out
scas
push
es
push
movsb
adc
cltd
test
movsb
dec
addr16
call
call
lcall
or
or
sub
push
jb
stc
push
outsb
mov
mov
jne
pop
xlat
or
call
das
sub
inc
xorb
les
mov
mov
mov
rol
push
fs
pop
cmp
mov
sbb
sbb
cmpsl
mov
stos
pop
pop
sbb
pop
ret
push
cmpl
lret
cmpsb
mov
inc
arpl
dec
add
push
aas
pop
xchg
les
xchg
stos
pop
movsb
adc
cmp
push
pop
dec
xor
and
dec
nop
xchg
ret
push
mov
imull
insl
mov
enter
and
push
popa
rolb
cmp
lahf
inc
cmpsl
fisubl
in
sbb
pop
cmc
ss
outsb
and
adc
dec
das
aaa
jo
int3
movsb
cmp
aad
shrb
xchg
cwtl
sti
pusha
adc
scas
decb
cmp
in
or
adc
ficoml
sub
push
pop
fsts
incb
dec
fisubs
lds
loop
leave
test
inc
cmp
xadd
mov
es
lahf
xor
ja
test
les
ret
shrl
out
movl
jbe
mov
sbb
push
out
imul
jb
inc
fs
sbb
xor
subl
sub
inc
cmp
ja
mov
ja
shrb
jb
push
daa
push
outsl
cmp
das
jns
jb
imul
ret
sub
mov
push
cmp
outsl
xchg
pop
lods
outsl
popa
pop
push
test
inc
mov
push
xchg
shll
nop
scas
les
icebp
adc
pop
cmpl
divb
rorl
push
or
jmp
adc
add
add
sub
cmc
jp
popf
in
sub
mov
jbe
mov
mov
mov
repz
lret
in
mov
sbb
aam
enter
in
inc
adc
sub
xchg
adc
mov
dec
mov
loope
cmp
inc
call
push
sub
mov
stc
cmp
outsb
nop
mov
out
xor
adc
and
leave
push
mov
ja
imul
pop
adc
sub
adc
adc
pop
mov
mov
icebp
cmp
inc
adc
in
imul
push
jg
fucomi
loope
mov
add
inc
inc
cli
push
ss
mov
pop
les
outsl
dec
cld
ficoms
ja
jg
sub
mov
rol
jl
or
outsb
call
xor
cmpb
mull
sub
mov
scas
outsl
xchg
test
imul
int3
movsl
lock
je
nop
pop
push
xchg
out
nop
js
or
lea
jns
cmp
das
leave
mov
mov
mov
cmp
int
lret
dec
xchg
ret
pop
fdivl
adc
or
sti
aam
scas
or
inc
cwtl
add
mov
mov
ljmp
push
or
cmp
xchg
std
mov
dec
sbb
in
sbb
cltd
das
adc
cmp
mov
test
rcl
cmp
test
dec
mov
sbbb
enter
mov
ja
mov
clc
dec
aam
jno
pop
xor
mov
cmp
jg
icebp
pop
and
sub
sub
jo
cwtl
stos
notl
lock
lds
mov
push
pop
dec
jno
cmp
shll
clc
shll
cmpsb
sub
divb
maskmovq
testl
test
out
fs
in
mov
cwtl
int
les
mov
stos
hlt
insl
bound
aaa
cpuid
pop
and
mov
jl
xor
je
fidivrs
xchg
mov
mov
outsb
in
and
jnp
addl
adc
push
xor
jbe
dec
js
ss
dec
cltd
push
jecxz
cmpsb
popf
outsl
jg
sub
nop
add
fldl
jno
mov
xchg
mov
loop
ja
lret
std
jne
movsb
arpl
stc
push
in
cmp
push
jo
cmc
push
xchg
push
push
adc
icebp
push
mov
aas
cltd
or
ficoms
jg
lea
push
sbb
mov
mov
xchg
ljmp
sti
cmpsb
adc
xchg
add
sub
jb
jo
push
mov
mov
aas
xlat
in
xchg
pushf
inc
rcrb
pop
out
pop
pushf
aas
xchg
in
fs
pop
insl
aaa
mov
and
negb
hlt
xchg
pop
outsl
lcall
test
pushf
ja
sub
call
dec
mov
arpl
std
dec
xor
push
out
mov
dec
clc
inc
dec
int3
jnp
nop
adc
pop
clc
jo
inc
mov
lods
mov
or
pop
shr
negb
jb
or
rorb
loopne
insb
mov
mov
aas
jmp
jge
xchg
stc
jmp
cmpb
aad
and
cmp
in
add
jns
sbb
fdivs
shll
pop
ljmp
and
cmp
fwait
mov
cmp
fs
dec
test
or
stc
xchg
out
adc
dec
out
mov
pop
and
call
sbb
sahf
ljmp
js
adc
mov
cwtl
sub
push
test
dec
or
aaa
pop
mov
movsb
cmp
mov
les
out
in
sahf
jg
push
mov
adc
out
daa
mov
sub
and
ret
ret
cmc
out
movsl
dec
dec
ret
pop
sbb
jle
mov
push
mov
imul
test
push
cs
inc
addr16
addb
xchg
cwtl
pop
and
push
into
bound
push
dec
movsb
inc
inc
jl
jb
jno
clc
clc
cmpsl
cs
and
jne
or
popa
adc
inc
lret
xchg
out
ret
pop
test
daa
stos
in
mov
pop
imul
out
dec
in
dec
or
fst
sbb
or
mov
shlb
mov
test
dec
fs
fbstp
stc
mov
jbe
or
sbb
or
and
inc
xchg
mov
sub
jle
push
cmp
inc
insl
jmp
jb
jne,pn
dec
jecxz
in
push
jle
mov
ret
add
cltd
repz
dec
xor
push
fmull
add
push
cmp
imul
sti
sub
neg
setns
pop
fmuls
icebp
scas
mov
addl
test
or
scas
inc
pop
subb
inc
lcall
fwait
pop
ret
push
cmpsb
cli
imul
out
xchg
jbe
cmc
ds
dec
mov
out
push
repz
and
pop
sub
mov
xor
fnstcw
pop
xchg
lret
cltd
lcall
shr
psubusw
jmp
mov
test
or
rclb
mov
lods
in
movsb
cmp
in
pop
cmpsl
sub
mov
mov
imul
cmp
addb
xor
scas
out
mov
and
xchg
dec
or
mov
ja
mov
mov
stos
loope
cwtl
scas
push
ja
pop
shrl
dec
lds
jno
stos
dec
sbb
jp
fstp
mov
cltd
jnp
inc
js
push
repnz
and
xor
sub
mov
pushw
out
test
fists
fidivl
dec
mov
xchg
adc
or
push
les
stc
mov
sbb
fnsave
arpl
sub
push
nop
sub
leave
ret
addr16
pop
or
faddl
outsb
sbb
pop
push
std
inc
cmp
sub
lea
test
lcall
aas
ret
rcr
jo
mov
cmp
mov
cmovge
or
mov
insl
push
add
adc
push
divl
pop
or
push
sbb
rclb
mov
cli
mov
icebp
xchg
cmpsb
subl
sub
into
js
cmp
les
fs
pop
cltd
push
in
jbe
mov
xchg
ss
dec
xor
lods
cmp
dec
adc
out
sbb
rcrl
jl
dec
lds
cmpsb
mov
enter
jae
xor
jns,pn
loope
pop
sub
push
dec
lea
enter
fsubrl
adc
enter
inc
dec
or
out
jp
out
inc
in
mov
sbb
lock
je
pop
xchg
cltd
push
mov
push
icebp
lret
ss
mov
jno
mov
mov
push
stos
add
dec
mov
pop
outsl
adcb
clc
lods
adc
stos
cmp
movsl
fsubrp
mov
bnd
stc
jp
test
mov
rcr
mov
cmpsb
jge
mov
test
das
inc
je
adc
cmpsl
inc
test
out
jge
inc
rorl
sub
roll
mov
cltd
icebp
fisubrs
dec
adc
and
imul
addr16
cwtl
cmpsl
subb
xchg
pop
out
mov
and
mov
imul
mov
sbb
pop
mov
les
icebp
add
add
sub
sub
jl
xchg
jl
push
xchg
cs
mov
mov
aaa
enter
ja
fs
mov
das
xor
jnp
cli
push
filds
out
fsubr
and
mov
clc
jno
push
das
xor
mov
fcompl
xchg
in
lcall
sub
in
cmp
pop
xchg
ljmp
jo
dec
inc
mov
sub
cwtl
out
mov
push
and
adc
es
mov
loopne
inc
jns
mov
nop
ret
outsl
adc
push
pop
scas
cmp
aas
add
push
push
daa
pushf
xchg
out
adc
cwtl
out
scas
mov
enter
imul
repnz
mov
xorl
push
jbe
movsb
mov
outsl
jnp
lahf
popa
push
dec
fcmovne
jp,pt
mov
or
bound
xchg
sub
scas
sbb
sbb
mov
or
repz
lods
fnsave
scas
xor
out
mov
add
lea
add
inc
mov
neg
sub
pop
insl
ja
mov
xchg
inc
lret
jno
or
xchg
insl
cmp
jo
loopne
cs
clc
jecxz
push
loop
jnp
and
fsubrl
ficoml
fdivr
push
dec
dec
xchg
sub
mov
rcl
bound
aaa
add
cmp
xor
das
pop
divb
popa
les
gs
adc
inc
dec
mov
cs
int
aaa
add
fdivrl
int3
fcmovnu
mov
push
movsl
mov
out
xchg
push
mov
loopne
lock
mov
jnp
loop
cmp
js
stos
pop
nop
xor
push
ljmp
les
test
pushf
scas
adc
push
sub
mov
sub
or
pop
enter
xor
in
les
pop
mov
and
jle
lds
out
pop
movb
mov
aad
or
aas
jbe
mov
xchg
sbb
sub
sti
fwait
add
in
add
repnz
push
jbe
testl
jg
imul
xchg
xor
dec
mov
movsb
loop
addr16
daa
lret
add
std
negb
push
dec
push
mov
mov
mov
imul
stc
in
clc
call
notb
xor
and
mov
fwait
loop
sub
testl
out
es
es
cmpsb
shlb
xchg
adc
push
xlat
xchg
fcoml
pop
hlt
fadds
sbb
sub
jae
mov
out
movsl
in
cmp
shlb
xchg
or
std
cld
cmp
bound
mov
adc
hlt
jae
decb
mov
sti
xchg
gs
cwtl
ljmp
pop
test
jmp
repnz
pushf
push
js
mov
cltd
push
jp
xor
add
sti
cmpsb
xchg
dec
fiaddl
cli
mov
mov
daa
adcb
mov
test
pop
js
or
and
repz
cwtl
out
lods
jne
jp
xchg
push
outsl
and
pop
dec
dec
int3
les
mov
xchg
mov
add
notl
insb
sbb
test
jl
and
pop
mov
cmp
mov
push
aaa
imul
mov
mov
xor
xor
jne
add
repnz
das
xlat
jle
push
cmp
sub
xchg
leave
or
cmp
ret
jecxz
mov
and
ret
inc
and
repz
pop
and
xchg
pushf
push
popf
dec
jnp
jp
je
cmp
negl
cltd
pop
xchg
push
mov
pushf
pusha
sahf
or
negl
or
jns
mov
mov
mov
jg
or
mov
xchg
mov
mov
mov
insb
faddl
ljmp
or
xor
test
push
mov
scas
lea
jg
xchg
and
dec
gs
cli
inc
insb
pop
or
jns
shlb
loop
js
fnstcw
sahf
mov
adc
mov
mov
jo
ja
in
mov
adc
dec
jecxz
sub
adc
dec
aaa
mov
repz
jns
jle
insb
mov
imul
cmp
xor
adc
nop
daa
or
je
neg
mov
inc
daa
clc
call
jmp
sbb
pop
mov
sub
fadds
mov
mov
stos
subb
adc
adc
test
loop
sub
daa
daa
sub
vpunpcklbw
lods
popf
or
cmp
je
push
leave
sub
daa
add
cmpsb
in
jo
jne
out
rcl
iret
popf
pop
int
lea
dec
aam
stos
repz
xchg
mov
mov
inc
add
dec
mov
pop
push
into
dec
rcrl
or
add
push
mov
jo
arpl
lea
sub
pop
aad
insl
or
xchg
mov
jo
into
ljmp
bswap
in
lods
mov
xchg
fcoml
jge
push
sbb
jne
or
pop
rcr
jmp
dec
leave
dec
les
lds
jns
push
jl
mov
inc
pop
add
loopne
fdivrp
add
shlb
je
push
iret
sub
lods
pop
push
cmp
gs
jnp
cmpsb
outsl
jp
cwtl
loope
or
jbe
jg
sub
stos
and
inc
pop
jbe
lcall
sbb
out
sub
jmp
dec
arpl
cmp
mov
aaa
clc
push
jp
lret
mov
shll
jo
and
test
fadd
loopne
xor
aam
xchg
dec
add
shrl
push
fmull
popf
cmp
inc
jp
in
pop
push
push
das
push
xchg
inc
arpl
mov
or
test
jmp
mov
ds
xchg
clc
stos
ds
les
lds
in
imul
pop
loopne
cmp
xor
pop
mov
test
imul
test
add
mov
jmp
mov
sbb
movb
mov
push
cs
ret
rorl
sub
xchg
imul
push
fmull
cmpsl
movsl
loop
xchg
cmpb
aas
jl
sbb
arpl
into
push
mov
js
xchg
mov
int3
pop
xor
xor
mov
loope
daa
mov
ret
pop
dec
jg
or
out
and
stc
mov
pop
sub
adc
sarl
mov
xor
sub
cmpsb
mov
sub
dec
push
sti
inc
mov
mov
sarl
rolb
adc
mov
mov
sub
stc
adc
or
mov
cli
pop
pop
into
jne
jno
rcll
mov
fiadds
pusha
stos
ja
imul
in
add
xchg
aam
dec
mov
add
jl
cmpsb
cwtl
fbstp
and
mov
ret
rol
dec
repnz
fldenv
aad
xchg
or
in
push
adc
cs
jnp
xorb
leave
xchg
jmp
xchg
push
pop
xchg
cltd
push
out
jb
cmp
stos
push
sub
imul
fistl
mov
push
sub
mov
cmp
push
cmp
ret
sub
ja
inc
add
sub
xchg
in
mov
inc
bound
movsb
pop
or
pop
and
bnd
daa
andb
xor
movsl
add
inc
pop
or
popf
sub
dec
mov
fdivrs
imul
rcrb
ss
mov
cmp
sub
int
mov
jo
call
mov
fwait
sbb
movsl
sarl
adc
cmpsb
into
test
scas
insb
mov
mov
bound
mull
mov
cmc
sbb
or
sub
add
bound
cli
arpl
dec
movsb
dec
and
push
xchg
lahf
out
iret
test
inc
inc
xor
xor
mov
imul
clc
mov
cmp
in
push
loop
mov
jle
rcrl
dec
jbe
cwtl
push
icebp
test
push
sub
or
lock
dec
mov
mov
jp
and
in
jg
mov
test
xchg
jp
ret
int3
rcrl
sbb
enter
push
stc
and
inc
icebp
cli
jno
divb
pop
mov
cmpsl
es
inc
bound
in
sub
and
jge
mov
sti
mov
adc
add
jl
jmp
dec
fs
pop
daa
and
aad
leave
sbb
scas
popa
lods
mov
int3
shlb
fcmovu
lcall
adc
cmc
and
xchg
adc
jns
dec
jns
mov
std
or
mov
sub
mov
sti
xor
jne
rorb
sub
je
add
pop
test
lock
push
cli
cmpsb
js
push
adcb
fcoml
out
cmp
pop
push
mov
lds
sti
dec
out
pop
xchg
fildll
pop
mov
sti
mov
gs
mov
adc
or
outsb
fistpll
jmp
pop
jle
xchg
or
sahf
xchg
stos
xchg
pop
stc
pop
pop
jne
sub
stos
gs
mov
cmpsl
out
push
adc
mov
dec
mov
mov
mov
lcall
aaa
mov
pop
xor
out
nop
outsl
arpl
add
out
mov
mov
pushf
int3
mov
dec
jmp
inc
insb
das
pop
inc
or
scas
jb
push
popf
push
fimuls
inc
or
jle
fwait
dec
loop
pop
adcb
dec
ds
in
es
subb
mov
cs
cltd
adc
aas
imul
add
mov
mov
addr16
test
cmp
fmulp
xlat
cmp
arpl
shrb
jno
in
js
inc
or
inc
mov
xchg
test
fldt
xor
cmp
jae
mov
ljmp
fldt
xlat
mov
rolb
imul
cmp
das
inc
push
sbb
mov
int
fcmovb
jb
out
inc
add
inc
xchg
and
pop
cmpsb
xor
dec
fdivrp
sub
dec
or
scas
insl
out
das
cltd
sbb
nop
mov
loop
imul
test
cmp
stos
inc
xor
sub
fiaddl
sbb
jmp
popf
fidivs
xchg
dec
loopne
add
push
sahf
pop
enter
lret
rclb
sub
xchg
imul
movsl
pop
push
aad
fdivs
and
int3
add
imul
adcl
cmp
icebp
cmp
test
loop
gs
rcrb
jb
negl
fstpl
jmp
sarb
movb
daa
repz
leave
andb
cmpsb
dec
ret
jns
inc
outsl
aam
rcr
jno
ljmp
jmp
sub
and
sbb
subb
jb
sbb
cmp
push
aad
pop
cmp
mov
push
pop
ret
test
lods
xchg
dec
into
inc
pusha
or
pushf
sub
dec
mov
test
arpl
les
out
inc
cmpsl
and
cmpsb
je
outsl
adc
jne
xchg
mov
pop
ficompl
ljmp
pop
fstl
push
mov
lahf
push
jbe
lock
mov
inc
shrb
push
das
dec
outsb
mov
js
add
mov
movsb
mov
inc
pop
mov
jp
loope
xor
mov
cmp
int3
or
ss
xchg
sub
es
cs
xor
cmpb
pop
pop
pop
mov
adc
lcall
cmp
dec
dec
lahf
test
das
xchg
mov
cmp
insb
adc
aas
push
pop
jae
add
loope
daa
pop
mov
rol
add
outsb
pop
push
or
popf
imul
add
and
cmpsl
push
mov
jb
jg
mov
call
xchg
loope
or
movsb
xor
cmpsl
and
clc
xchg
jnp
push
int3
mov
jp
dec
test
popf
stos
mov
sbb
jle
mov
fisttps
mov
pop
inc
daa
sub
ret
dec
xlat
xchg
adc
iret
adc
add
jge
mov
pop
sarl
push
ds
cltd
jnp
popf
clc
inc
xchg
cltd
and
aaa
inc
outsl
and
cmc
mov
and
fwait
loope
sub
test
push
mov
xorl
add
lcall
sahf
clc
adc
movsl
out
mov
out
inc
mov
xor
fidivl
and
adc
rclb
popa
scas
xchg
stos
jmp
inc
sti
inc
mov
sti
aad
lret
lods
fsubrl
mov
addr16
and
outsb
mov
mov
cmpsb
mov
sahf
cmc
inc
ja
push
sub
push
stos
lock
cmpsb
insb
xor
xchg
js
push
outsb
orb
mov
cmp
lods
push
inc
lahf
cmpsb
dec
mov
jo
mov
add
inc
lret
test
sar
sbb
pusha
decb
fst
dec
pop
adc
test
sbb
pop
shrl
inc
ret
jb
outsl
push
vrsqrtps
dec
outsl
adc
mov
mov
pushf
lahf
das
ret
jb
and
mov
adc
imul
sub
xchg
xchg
loopne
mov
out
cmc
daa
pop
rcrl
cltd
cmp
mov
lcall
fsubl
ljmp
jb
aad
mov
push
mov
sub
mov
jno
xlat
in
jg
imul
adc
xor
jb
loopne
xorb
inc
scas
dec
or
pop
lods
out
fsts
bound
jmp
mov
js
js
loopne
outsl
fsubrl
xchg
adc
frstor
xchg
loopne
imul
push
mov
and
adc
pusha
xchg
fisubrl
jns
mov
jne
lahf
sub
popf
js
push
shll
cmp
mov
out
mov
lods
mov
adcl
cmp
insb
adc
cmpsb
mov
les
in
mov
jbe
lods
jmp
pop
and
fnstcw
adc
stos
aam
inc
out
xchg
es
xor
dec
lahf
sub
insb
dec
jl
mov
mov
dec
jmp
dec
sarl
pop
sub
dec
orl
or
imul
test
sub
lret
mov
sti
nopl
dec
popa
loopne
aas
dec
mov
lcall
fldenv
add
loopnew
flds
test
sbb
out
scas
sub
xchg
and
jno
inc
je
jbe
mov
addb
repnz
nop
jae
fwait
push
jp
icebp
pmulhw
sub
mov
pop
mov
imull
arpl
or
sbb
add
daa
inc
or
ljmp
and
loopne
sbb
sahf
movsb
pop
insl
and
pop
mov
repnz
cmp
mov
and
dec
test
mov
jg
sbb
aaa
pop
pop
mov
mov
out
and
and
pop
cs
sub
es
movsb
lods
dec
repnz
adc
es
test
push
iret
stos
jmp
lock
popa
lds
jne
stos
sub
andb
jg
fdivrl
stos
arpl
add
jge
fistpll
iret
sub
cwtl
fs
mov
out
insb
sbb
mov
out
data16
hlt
shrl
add
enter
sbb
enter
mov
pop
mov
movsl
test
rorb
imul
mov
loopne
daa
dec
xchg
add
xor
sbb
lea
incl
jl
mov
lds
adc
mov
pop
jne
stos
imul
ja
cmpsb
mov
lods
aam
sbb
imul
push
arpl
push
into
mov
cwtl
mov
cmpsl
and
int3
jecxz
xor
mov
lock
cmpsb
lds
jnp
shlb
out
and
fcoml
aaa
fucomp
les
ljmp
adc
jae
lahf
shlb
push
add
pop
ret
dec
adc
aam
into
or
or
xchg
or
adc
cmp
xchg
jae
add
xchg
cmp
test
leave
mov
js
aaa
dec
nop
es
inc
jmp
ret
xchg
call
jo
add
fadds
shll
mov
popl
nop
bound
xchg
iret
cmp
mov
cmp
mov
fimuls
scas
pop
cli
mov
sahf
es
icebp
sti
mov
subb
lret
imul
push
lock
dec
xor
sbb
push
cmpsb
mov
inc
and
pop
leave
pop
jecxz
rcl
cmp
data16
aaa
out
pop
fldt
es
icebp
test
aaa
add
daa
repz
das
xor
dec
push
xchg
mov
flds
sarb
outsl
and
scas
mov
repz
sub
test
push
cmp
insw
and
dec
es
push
iret
sbb
imul
jg
lcall
push
jb
xchg
mov
or
jae
and
inc
jae
negb
jmp
shl
sub
cld
popf
iret
inc
xchg
js
data16
adc
mov
inc
or
xor
mov
dec
push
sbb
mov
and
mov
jecxz
sbb
fstps
mov
inc
sar
mov
dec
cmpsl
movsl
mov
clc
lret
cmpsl
pop
or
xchg
out
cmp
scas
push
sbb
jbe
xchg
daa
cltd
addl
push
add
fcoms
push
pop
cmp
push
cwtl
cmp
add
adc
aas
adc
pop
dec
shll
inc
mov
or
lock
shlb
xchg
inc
fwait
or
stc
pushw
cmp
mov
pop
cmp
cmp
repnz
mov
pop
jo
mov
jne
iret
aas
imul
negl
inc
mov
shl
out
mov
repnz
sub
fbld
jmp
pop
pop
dec
cmp
mov
and
inc
loope
jb
mov
xor
in
jle
sbb
mov
out
in
push
inc
test
pop
or
stos
std
movsb
mov
sub
rdmsr
stos
fbstp
jno
cmp
xor
gs
push
jge
sbb
ret
or
inc
cmp
notl
add
lds
jae
inc
shll
xor
jg
inc
aaa
fsubl
icebp
jle
sbb
inc
dec
loope
test
iret
push
mov
pop
cmp
lods
push
pop
jecxz
out
not
sbb
dec
or
sub
pushf
xor
adc
add
in
mov
jb
lock
cli
aas
push
and
mov
fdivr
jnp
add
js
aaa
mov
out
aas
jne
inc
or
mov
cli
stos
or
mov
mov
sbb
pop
je
aad
inc
out
in
mov
lds
push
inc
push
xchg
add
inc
stc
pop
insb
outsl
shll
pop
add
jge
lods
lock
or
dec
nop
rcll
lret
repnz
jp
mov
cmp
iret
mov
jno
sbb
out
rcrb
mov
xchg
jp
pop
inc
rclb
add
icebp
cli
sub
xchg
imul
das
scas
ja
push
cli
int
aam
add
mov
add
dec
fiadds
push
jge
outsl
inc
mov
mov
fs
pop
cwtl
sbb
std
test
out
scas
mov
cmp
repz
jmp
xchg
lret
mov
mov
clc
adc
inc
cmp
aaa
or
add
sbb
loop
movsl
or
fs
test
inc
cmp
insb
and
aaa
cmp
sub
test
rorl
imul
mov
cmp
out
ds
xchg
ret
and
popw
mov
flds
iret
repz
cltd
jne
aam
fcompl
gs
xchg
fs
js
mov
mov
inc
xchg
adc
jge
sub
cmp
push
ret
test
add
movsl
mov
ret
nop
int
cwtl
mov
xchg
fnstsw
fisubl
cs
outsl
loope
and
push
sarb
jae
xor
mov
mov
pop
mov
data16
loopne
cmp
je
dec
lods
roll
sub
repz
lods
lock
jmp
imull
icebp
fld
insb
test
add
sub
pop
shrb
js
aaa
dec
scas
inc
sbb
lods
xor
adc
inc
pop
jne
jb
cmp
in
pop
inc
cli
popa
into
enter
push
out
ja
mov
scas
pop
popa
sub
jge
stos
xor
bound
std
ficompl
outsb
pop
adc
incb
jb
ret
push
and
add
mov
repnz
pop
cmp
push
ret
pop
scas
or
mov
xchg
mov
cmpsl
in
repz
shr
test
inc
pop
xor
cmpxchg
or
imul
adc
adc
pop
xor
lcall
je
jmp
mov
xchg
insb
and
imul
out
test
test
mov
mov
sub
xor
or
pop
pop
mov
test
lret
cmc
test
mov
sbb
les
or
mov
cmp
adc
pop
or
lock
push
xchg
push
into
mov
sbb
mov
push
push
std
in
rcrl
iret
loop
gs
smsw
mov
pop
xchg
dec
ds
and
das
mov
scas
test
lret
sub
outsb
inc
lock
aaa
mov
lods
or
push
mov
xchg
inc
cmp
cmpsl
dec
jecxz
xor
add
jge
xchg
mov
mov
test
movsl
sarl
cmpsb
ret
or
fld
movsl
js
mov
lcall
inc
ds
pop
enter
adc
dec
pop
push
ret
and
cli
sub
jne
mov
lea
adc
ja
jae
sbb
mov
inc
fstpt
loop
sar
fildl
mov
iret
daa
push
jp
sub
les
sbb
mov
xchg
sbb
jmp
jle
lods
out
sub
add
mov
test
push
test
lods
maskmovq
divl
loopne
mov
mov
rcr
pop
dec
ret
adc
sbb
inc
push
int
insl
push
mov
repnz
mov
mov
push
outsb
in
push
push
int3
push
dec
ja
pop
stc
and
mov
mov
add
and
xchg
insl
push
fwait
lock
invd
inc
pop
repz
cmp
sti
imulb
fsubrs
pushf
xor
lahf
call
insb
mov
fisubrl
sub
es
mov
push
push
std
mov
je
das
mov
pop
cmc
mov
cmp
xchg
and
mov
loopne
xor
jle
inc
mov
xchg
jnp
mov
loopne
xchg
shlb
xchg
push
mov
out
xchg
leave
repnz
insl
popf
test
std
or
pushl
mov
fisttpl
xchg
in
push
xchg
push
shl
jecxz
lods
mov
and
or
mov
mov
mov
add
or
mov
filds
mov
push
and
xchg
lahf
frstor
jbe
and
clc
imul
inc
mov
xchg
mov
mull
test
stos
sub
fsin
dec
jne
loope
dec
out
shl
lea
or
es
cmpsl
dec
negl
jecxz
movsb
hlt
mov
mov
and
mov
jo
in
out
push
mov
jge
inc
jnp
push
out
int
mov
into
repnz
add
jg
inc
lcall
shlb
movsl
mov
ss
and
cs
sarl
xor
mov
out
sbb
jge
sub
rorb
insl
mov
xchg
lds
ret
int3
scas
lret
or
push
inc
lret
filds
jnp
movsl
mov
push
dec
sub
push
test
lds
int3
and
pop
stos
xor
jecxz
jbe
sbb
scas
pop
jecxz
jo
sub
fildl
adcb
jae
jb
pop
jp
pop
sbb
mov
data16
lock
out
sbb
ret
in
out
jp,pt
sbb
call
jl
lods
cmpsb
inc
cli
loope
cmpsb
xchg
movsl
cmc
push
pop
fidivrl
inc
xchg
mov
mov
sbb
pop
jp
ficoms
sbb
test
mov
sbb
push
nop
inc
into
mov
push
pop
mov
cmc
in
cmp
sti
sti
cmpsl
stc
and
add
mov
mov
push
loop
dec
jp
outsl
sbb
jo
xor
inc
ret
dec
outsl
sti
jl
dec
insb
jns
cmp
rcl
outsl
add
push
jmp
or
xor
andl
subl
xchg
cmc
imul
cmpsl
cmp
scas
add
ljmp
and
inc
rcrl
mov
aad
jg
imul
fdivrp
clc
sbb
sub
scas
outsl
mov
add
sub
fcmovnbe
sahf
jge
fwait
mov
push
xchg
call
fcmove
cmpsb
loop
ret
xorb
scas
dec
inc
adc
sti
push
in
cmpsb
sbb
jg
std
pop
mov
fisubl
mov
push
mov
aam
pop
mov
mov
mov
out
mov
or
imul
or
and
fsubl
cmp
std
mov
and
inc
inc
push
enter
out
out
inc
repz
test
je
insl
in
lahf
cli
xchg
inc
lret
mulb
jbe
pushf
xor
mov
adc
push
inc
iret
dec
adc
mov
testl
xchg
rcl
test
pop
je
dec
or
outsl
aad
call
in
popa
adc
inc
ss
jns
pop
xchg
cs
lret
add
inc
adc
or
pushf
push
dec
ror
divb
je
pop
and
mov
pop
sti
cs
mov
aas
dec
faddl
pop
ja
shl
add
mov
jne
daa
bound
jno
xor
push
cmpsb
pop
inc
clc
ret
sti
stc
or
push
bound
mov
mov
push
push
insb
movsl
lcall
add
sub
mov
push
xlat
dec
mov
sti
inc
in
xor
aas
mov
and
jl
cmpsl
cmp
jnp
ja
push
lahf
dec
cmpsl
jne
aam
std
je
test
aaa
xor
insb
xchg
rcrl
jp
push
sub
pop
xor
push
push
jne
sub
faddl
mov
xorl
cmp
clc
jae
fisubrl
cmp
fstps
stc
into
nop
jle
dec
fildll
ja
nop
pop
icebp
imul
pop
data16
push
aas
add
scas
xor
in
sub
mov
loop
arpl
daa
adc
bound
ret
inc
loope
gs
ret
or
rorb
inc
jae
sub
sbbb
mov
iret
outsb
cld
rclb
adc
cmp
mov
cmp
inc
inc
cmp
stc
push
cmpsb
rorl
jp
in
mov
pop
out
mov
push
sbb
add
fdivr
push
es
fistps
scas
or
xlat
or
jmp
ud1
add
mov
jmp
out
jnp
ret
lea
xchg
lods
mov
inc
stos
notl
push
adc
sub
push
mov
mov
mov
in
push
inc
jecxz
bound
sti
jmp
mov
aad
inc
enter
jecxz
add
and
xchg
cmp
daa
jge
push
push
pop
adc
push
dec
lahf
inc
add
add
stos
fdiv
mov
mov
cmp
add
and
jne
dec
hlt
pop
fs
test
lret
addr16
cltd
das
int3
sbb
int
ret
adc
je
stc
or
xlat
mov
sbb
xor
bound
add
cmp
stos
or
shlb
in
xchg
in
idivl
shll
xor
jl
and
sbb
jne
pop
orl
mov
testb
pusha
psrad
test
test
adc
in
and
and
push
repz
mov
add
and
in
jle
jb
jle
daa
dec
jnp
test
insb
jp
pop
les
frstor
xchg
xchg
das
pop
gs
loop
fwait
cwtl
stc
jno
mov
xchg
xor
stos
ficoml
jmp
jne
pop
movsb
test
int3
sbb
sbb
shrb
test
lahf
add
adc
nop
xor
lds
jbe
aam
loope
push
xchg
test
add
pop
mov
jmp
mov
lcall
and
mov
inc
add
imul
insl
aad
jns
xchg
sbb
inc
mov
sbb
stos
sub
xchg
pop
jecxz
adc
out
pop
inc
shl
and
mov
stc
test
xor
pop
or
test
loope
and
leave
pop
mov
xchg
push
repz
push
mov
pop
sbb
xchg
add
sbb
xorb
pushf
mov
outsl
dec
fdivr
sbb
xchg
mov
stos
pop
add
or
es
daa
push
mov
inc
mov
rol
orb
aam
cmpsl
loop
inc
sub
in
xchg
xchg
xchg
into
jp
pop
iret
pushw
adc
xchg
fcompl
mov
loope
test
bound
ret
jne
mov
mov
sbb
imul
arpl
fwait
dec
push
jecxz
pop
loop
sbb
add
daa
dec
inc
jnp
xchg
fcmovu
std
int
xchg
arpl
mov
sub
add
jbe
repnz
out
sbb
shrl
xor
out
lret
repz
adc
jb
test
clc
xchg
mov
or
dec
xchg
aas
sub
cmpsl
jns
std
sbb
outsb
cmc
inc
mov
cs
mov
loopne
sbb
popf
inc
push
iret
int3
imul
mov
scas
xchg
addr16
stc
jl
inc
mov
in
lcall
gs
cmpsb
mov
jl
cmc
int3
cmp
les
ljmp
sub
in
pusha
sbb
and
pop
es
jl
jecxz
add
jmp
cmp
in
repz
cwtl
mov
lods
xlat
xchg
lahf
loope
cmpsb
scas
xchg
jb
out
and
std
add
mov
ret
dec
hlt
mov
mov
push
test
lds
imul
sub
mov
imul
addr16
jnp
popf
jmp
mov
xor
dec
and
int3
inc
test
ret
scas
sub
pusha
push
ret
out
sub
loope
push
dec
cltd
gs
and
inc
stos
pop
jg
cmp
mov
mull
fnsave
into
sub
pusha
pop
or
inc
xchg
mov
pop
lds
xor
cmp
jns
mov
test
xchg
xlat
pop
pop
mov
push
das
imul
pusha
push
cmp
in
lock
popa
jb
cmpsl
sbb
jne
pop
or
faddl
pop
add
cmp
jg
pusha
aaa
das
aad
cmpsl
pop
leave
pop
push
aam
lcall
sti
mov
xor
mov
mov
bound
mov
rep
mov
cmp
pop
out
inc
insb
sub
and
daa
xchg
and
or
xor
stos
mov
pushf
xor
incb
aam
in
enter
fwait
pusha
adc
movsl
sub
addr16
jp
mov
outsb
cmp
cmp
push
cmc
xlat
inc
flds
cmp
jecxz
dec
ret
rcr
fs
and
lret
int3
sbb
iret
sti
nop
fwait
xchg
out
pop
dec
jae
sub
push
rclb
call
sbb
jl
cmpsl
push
daa
cmp
lea
pop
and
lods
pop
fstl
and
test
aas
cmp
mov
lret
sub
int
mulb
mov
xor
dec
in
cmc
mov
mov
stc
xchg
inc
loope
into
test
inc
je
popf
cwtl
xor
ds
jmp
dec
enter
dec
mov
nop
jmp
fidivs
push
cmpsl
pop
pop
xor
xor
int3
fsubrl
xor
add
push
sub
divb
fstpl
xor
adc
xchg
out
js
pop
shll
js
rcr
sbb
pop
inc
subl
add
bound
add
jmp
jecxz
mov
inc
and
xor
scas
xchg
mov
pusha
ficomps
rcrb
sub
push
fnsave
push
xlat
xor
mov
xor
arpl
dec
lcall
jmp
mov
dec
lds
push
in
fnsave
outsb
mov
dec
ja
push
aaa
or
stos
sbb
jmp
and
xchg
cmc
out
inc
sub
clc
inc
mov
and
hlt
cmp
lret
cli
and
mov
lret
subb
sub
pop
sub
int3
push
pop
mov
fwait
shl
inc
lret
insw
outsb
dec
mov
int3
insl
mov
pop
jo
dec
mov
fsubs
out
jo
inc
pop
inc
imul
dec
push
mov
add
imul
dec
les
jmp
adcl
pop
pop
ficompl
mov
push
jp
std
shr
cmpsl
mov
dec
pop
xor
fadd
xor
inc
repnz
bound
xchg
mov
cmp
outsb
or
mov
xchg
outsl
xor
imul
push
arpl
outsl
cmpsl
xlat
aaa
cmp
adc
test
loope
cmpsl
call
outsb
js
test
mov
cmp
insb
pop
jp
insb
dec
inc
cmp
or
or
adc
pop
flds
sbb
xor
lret
jmp
and
mov
nop
imul
mov
mov
std
into
mov
imul
mov
push
iret
and
sub
mov
sbb
sbb
fcoms
outsl
ljmp
cli
mov
and
in
adc
loopew
mov
sbbl
cmpsl
adc
fisubrl
hlt
in
jl
lods
mov
rorb
call
ret
je
add
gs
movsb
sbb
into
aad
fs
gs
std
sub
mov
xchg
sti
push
mov
ljmp
popf
lock
shrb
pop
mov
js
lcall
and
daa
int
test
dec
out
xor
bound
ficomps
pop
adc
mov
shlb
ljmp
rclb
adc
arpl
sbb
mov
shrl
sub
and
jmp
mov
lret
jbe
in
xor
cmc
jno
inc
pop
ficompl
sbb
pop
mov
mov
push
add
ljmp
mov
xor
push
xor
sub
mov
lahf
ljmp
push
cmc
pop
mov
out
insl
xor
cmp
or
dec
dec
test
pop
popa
push
xchg
cld
cmp
fistpl
dec
lret
pop
sarl
stos
xorb
xchg
dec
xchg
in
pushf
fstl
cmpl
cmp
lds
testl
sbb
lods
mov
mov
sub
mov
aaa
jb
and
sbb
test
imul
pop
cli
nop
inc
push
nop
adc
mov
cwtl
sub
insb
mov
aaa
sbb
adc
jb
pop
mov
mov
and
dec
or
push
stos
or
dec
sub
movsb
lds
jp
fnstsw
cmp
push
fnsave
ficompl
jmp
mov
cmp
push
cld
jnp
test
dec
outsb
rorl
lret
and
or
repz
stos
push
push
outsb
or
loop
jmp
aad
mov
loopne
mov
sub
and
popl
in
pop
stos
in
pop
add
fstl
out
xor
out
inc
cli
mov
pop
mov
add
stc
inc
or
enter
ficoml
je
xchg
in
shll
inc
jne
sub
repnz
lods
popf
sahf
ret
stos
push
rcrb
dec
sahf
lds
push
push
ljmp
test
iret
dec
sbb
pushw
cli
ret
dec
inc
out
fsubl
in
jle
cmp
inc
cmp
cld
push
jb
xchg
cmpsl
lahf
ljmp
rorb
cmp
int3
sbb
jbe
pop
fsubs
mov
rolb
adc
push
lods
scas
adc
push
mov
neg
mov
daa
pop
jl
mov
dec
dec
test
pop
cld
dec
push
fldenv
into
fadds
lods
call
push
out
adc
arpl
mov
aaa
out
rorl
adc
fisubl
mov
pop
inc
ja
fld
mov
icebp
cmc
jl
jns
sbb
dec
js
sbb
push
xchg
ja,pn
push
push
jo
ficoml
mov
sub
outsb
scas
add
fimuls
les
outsb
sarl
in
in
lods
out
jecxz
loop
sub
xor
mov
fnstsw
imul
ja
add
push
xchg
pusha
insb
lahf
leave
pop
xor
orl
xchg
lock
add
and
imul
sbb
add
nop
pop
outsb
lods
leave
test
and
lcall
mov
js
dec
leave
test
insl
sub
sub
addr16
push
clc
sub
cmp
ds
add
out
stc
hlt
sbb
and
rorl
clc
ss
insb
clc
lcall
jae
adc
test
pop
xor
push
lock
test
adc
lahf
cmpl
adc
sub
movsb
lods
mov
sarb
or
cmpsl
fcmovnu
adc
pop
lods
mov
mov
lods
test
std
loope
xchg
lock
rcl
data16
loope
adcb
aam
sub
test
movsl
xchg
es
out
shlb
scas
scas
fisttpll
cmp
dec
lahf
push
lret
loop
mov
mov
imul
adcb
adc
cmp
xchg
out
mov
ja
bound
pushf
cmp
enter
js
jne
int3
mov
lahf
pusha
sti
sub
xchg
bound
mov
inc
mov
scas
and
push
xlat
fs
adc
les
ss
arpl
mov
test
clc
mov
sbb
lahf
in
cmpsb
sbb
adc
lods
mov
push
cld
jmp
lret
jb
lods
test
out
mov
fcomp
scas
xchg
arpl
popl
dec
mov
nop
movsb
cmp
leave
mov
xor
sub
mov
inc
addr16
sbb
imul
xor
or
mov
add
lods
pop
rol
mov
fldcw
test
in
jmp
fbld
aaa
adc
mov
out
pop
mov
mov
jge
int3
aam
pop
adc
ds
sub
dec
aam
add
lods
mov
leave
adc
jnp
cmp
cltd
pop
cli
xor
and
xorb
push
out
movsl
mov
test
mov
mov
sub
cld
mov
addl
mov
dec
or
sub
loopne
enter
mov
dec
pop
sub
and
gs
fcmove
push
or
add
fnstcw
sub
in
and
mov
mov
cmp
adc
push
and
push
xrelease
xorl
sar
test
insl
pop
sahf
push
or
or
out
mov
int
movsl
ret
mov
nop
addr16
add
push
repnz
mov
cmp
pop
imul
lcall
xor
push
push
xchg
dec
xchg
jmp
sbb
inc
add
cltd
dec
je
das
inc
or
jg
mov
pop
aas
test
mov
fdivr
test
dec
fstpt
xchg
xchg
jnp
int3
iret
jbe
inc
push
adc
repz
inc
sti
insb
iret
or
lret
cmp
sub
push
mov
or
push
mov
mov
in
movsl
pop
fidivl
sahf
adc
adc
mov
sbbb
xchg
ficomps
lock
mov
rcr
jnp
gs
rorb
insl
lret
dec
enter
adc
adc
fmull
mov
inc
lcall
jno
out
cmpsl
jecxz
fwait
nop
das
fucom
js
sbb
lock
sbb
sub
ds
outsb
sbb
clc
ret
test
icebp
stos
adc
sahf
xor
andl
bound
paddw
sub
xchg
mov
dec
in
mov
roll
popl
fdiv
cld
add
lods
pushf
sub
in
clc
lods
xor
inc
inc
aad
pop
cmp
stc
lahf
les
ret
pop
push
stos
ljmp
js
xchg
pop
cmpsb
bound
cmpsl
test
mov
and
mov
insl
xchg
test
xor
es
movsb
in
shll
test
fisubl
and
add
mov
in
arpl
leave
dec
push
insb
mov
fbld
mov
xchg
jnp
stc
imul
pop
inc
dec
mov
cmovl
sbb
je
adc
addr16
xchg
mov
sbb
subl
xor
dec
sbb
jg
mov
imul
stc
push
rcrb
mov
lret
inc
sub
xor
jbe
and
push
push
popf
mov
lcall
xchg
add
stc
dec
movsl
icebp
shll
gs
mov
sar
or
add
or
stc
inc
sahf
sarl
fcoml
cltd
add
and
push
test
inc
into
in
xor
mov
leave
rcrb
nop
mov
sbb
sub
xchg
push
add
push
out
pop
jle
sbb
stos
cwtl
jecxz
jmp
sbb
stos
int3
sub
dec
push
ret
dec
inc
dec
gs
int
push
test
out
xor
mulb
or
enter
sub
je
ja
popf
lcall
jbe
jg
push
dec
loope
js
sub
out
idivl
jbe
les
mov
jbe
jmp
fsubl
cld
pop
xchg
shl
ret
push
mov
jnp,pn
jmp
rorb
aam
xchg
cltd
fsubrs
and
test
pop
arpl
das
aam
add
test
xchg
rorl
push
pusha
fwait
div
pop
xchg
cmp
add
out
dec
bound
and
inc
xlat
push
outsl
lea
addr16
imul
and
pop
mov
sbb
pusha
mov
push
xor
lcall
je
daa
sub
jmp
or
sub
push
dec
addb
fmull
push
std
dec
das
jecxz
repz
mov
inc
imul
mov
and
aam
xchg
test
cld
mov
push
aam
dec
add
ficoms
fs
sub
outsl
jnp
lods
test
scas
outsl
bound
cmpsl
aam
js
sub
in
fcompl
imul
jmp
xchg
xchg
sub
cmpb
mov
cltd
dec
xchg
and
xchg
arpl
jo
ficompl
mov
roll
nop
jmp
add
dec
add
stos
js
dec
cmp
push
in
and
lods
vrsqrtss
insb
xchg
les
stos
xchg
pop
movsl
adc
add
pop
in
cmp
sub
nop
test
pop
jmp
enter
adcb
shlb
std
popa
dec
cmpsl
and
adc
mov
mov
ds
test
movsb
cs
jb
cmp
pop
in
sbb
jecxz
loop
mov
jge
pop
iret
bound
jns
les
pushf
adc
lds
and
lret
jo
sub
xchg
fs
or
inc
mov
and
sub
mov
dec
pop
cmp
sbb
xchg
out
inc
mov
enter
popa
adc
lea
pop
je
push
pop
leave
shlb
push
jmp
pop
cmp
sub
lcall
xchg
fildl
pop
stos
loopne
cltd
cmpsl
daa
push
adc
sahf
or
imull
movsl
mov
xor
pop
dec
dec
push
jbe
popa
pop
xor
rcr
jo
jle
out
mov
dec
cmp
jmp
push
jle
test
xchg
dec
inc
and
jne
inc
mov
xchg
push
loop
xchg
lea
inc
rolb
or
xchg
sub
dec
inc
fadd
outsb
enterw
sbb
adc
shll
pop
lcall
xchg
sub
pushf
cmp
pop
call
test
xor
lods
jno
dec
add
cltd
inc
mov
jae
sahf
pop
mov
xor
popa
and
jl
sbb
icebp
aas
pop
arpl
fistpl
loop
or
mov
jecxz
in
xchg
mov
ja
rcrb
mov
mov
mov
pop
add
ret
filds
test
inc
dec
mov
ds
cmp
push
jo
push
enter
dec
shll
pop
mov
sbb
imul
sub
mov
decb
inc
aad
hlt
fsubr
repnz
in
cwtl
lods
lods
cmp
xchg
imul
lea
mov
sbb
punpckhdq
add
loopne
mov
bound
and
out
and
shlb
sub
pop
mov
outsb
mov
cld
jmp
out
fbld
outsl
pop
test
out
loop
adc
or
adc
pop
xor
neg
daa
sub
mov
pop
ja
jle
mov
add
and
out
xchg
cmp
loope
nop
mov
andb
stc
fwait
aaa
or
xchg
xor
repnz
adcb
cmpsb
lock
cmp
orl
sub
xchg
push
notb
sbb
jb
dec
imul
mov
in
daa
adcl
inc
sub
iret
lcall
insb
movsl
loope
stos
jne
gs
pop
es
jge
frstor
and
stos
jno
or
cltd
insl
aad
mov
mov
adc
mov
je
xchg
push
mov
mov
scas
data16
adc
mov
add
dec
daa
lea
jb
stc
add
ljmp
mov
fdiv
xchg
mov
and
or
in
not
andb
ds
cmp
dec
fucompp
pop
into
loop
inc
andb
sub
js
ja
jle
cld
dec
lods
cli
jge
mov
jns
push
rcll
pop
test
je
rcrl
insl
lahf
sub
mov
add
fs
pop
dec
out
punpckhwd
shl
sub
dec
outsb
and
decb
adc
push
shll
cltd
shll
sbb
push
push
or
test
pushf
scas
in
loop
data16
mov
sbb
jl
cmp
call
jle
in
xchg
sbb
mov
cmpsb
aam
inc
cmp
xchg
into
or
push
xor
in
out
repz
jae
lods
jle
mov
adc
sbb
cmpsb
fnstenv
mov
cwtl
mov
dec
push
jl
daa
push
push
lret
test
repz
inc
roll
xor
cmp
arpl
mov
or
dec
push
inc
sub
inc
cmp
out
mov
mov
or
outsl
sub
rcll
adc
push
cs
ljmp
push
cmp
sbb
daa
xchg
nop
cwtl
inc
lock
int3
dec
lods
aam
push
mov
and
or
addl
out
jmp
aaa
push
fisubl
push
dec
arpl
push
push
push
or
adc
pop
sub
dec
fiaddl
cmp
sub
iret
inc
jne
add
and
cmp
pop
ret
mov
sbb
add
popf
popa
pusha
jmp
pop
cmpsb
ss
ss
into
loop
shll
xchg
imul
push
pop
mov
inc
xchg
popf
test
mov
mov
jo
xchg
insl
cmp
outsl
xor
shlb
adc
out
mov
cmp
std
jge
cmp
or
ljmp
push
xchg
mov
mov
int3
jmp
out
mov
push
inc
lods
pop
inc
nop
rorb
xchg
out
inc
push
into
xor
mov
movsb
js
or
scas
cld
mull
inc
iret
ret
sbbl
cmp
in
push
xor
mov
jae
inc
sbb
sar
sub
inc
out
inc
mov
mov
add
popa
adc
mov
insb
pop
out
pop
daa
push
and
movsb
and
in
outsl
push
lods
icebp
leave
push
mov
dec
mov
jnp
cmp
pushf
lret
sub
fstpl
das
testb
jo
ret
testl
clc
icebp
push
pop
lahf
xchg
leave
fstpl
cmp
cltd
inc
or
je
add
or
movsl
adc
mov
mov
xchg
rorb
sahf
or
mov
mov
adc
je
xchg
into
jp
cmp
leave
int3
add
adc
inc
popa
jo
inc
pop
repnz
and
nop
pop
xchg
enter
cmp
jmp
mov
imul
push
jae
popa
xchg
in
fimull
mov
mov
test
loopne
scas
fistpll
fmulp
in
arpl
xchg
js
loopne
lds
mov
stc
inc
dec
popa
inc
push
cmp
sbb
add
and
pop
insb
jbe
push
mov
jp
cltd
sbbb
adc
sbb
pop
lds
in
jp
mov
mov
nop
adc
adc
popf
inc
pop
sub
adc
int3
shlb
inc
or
push
mov
test
xchg
arpl
xchg
cli
inc
push
push
je
inc
fcoms
jae
ss
cs
sbb
gs
adc
iret
or
inc
lcall
xor
movsb
mov
or
dec
sub
lods
cmpsb
push
ss
push
mov
mov
xor
movsl
xchg
shl
mov
pushf
pop
fcmovnbe
cmp
or
je
or
jae
sub
mov
aam
jo
lods
jmp
ret
and
jns
xor
js
and
mov
in
in
cld
cli
push
pop
jl
cmp
push
dec
dec
clc
push
inc
je
into
xor
pop
adc
mov
mov
cmc
sahf
sub
mov
sbb
pop
ja
dec
int3
call
inc
jb
mov
insl
cmp
outsb
mov
das
outsl
or
xor
std
incb
stc
mov
mov
jnp
mov
mov
inc
fildl
jnp
or
stos
and
insl
adcb
push
pop
add
roll
fadds
inc
jle
clc
je
mov
dec
inc
pusha
xor
movsb
lcall
pop
testl
dec
jmp
dec
inc
out
sub
mov
int
imul
std
jmp
dec
add
inc
sbb
jp
cwtl
aam
or
ret
sub
jnp
xchg
inc
xlat
popa
dec
out
or
loop
push
add
or
lcall
xchg
sub
hlt
dec
push
popf
pop
fcompl
pushf
das
mov
and
inc
pop
shll
sti
pop
pop
mov
pop
push
jg
int
push
ret
xchg
into
xor
push
fsubrs
jge
xchg
shlb
mov
jge
test
inc
mov
add
stc
imul
fiadds
mov
xlat
inc
into
sti
scas
lea
push
push
pushf
leave
mov
and
cmpsb
repz
sbb
jmp
sbb
lods
ret
cmp
cli
int3
fiaddl
xchg
insb
lret
pop
lcall
push
mov
xchg
cmp
add
sbb
mov
mov
and
cmp
dec
xor
or
clc
adc
cmp
lods
dec
cltd
push
push
cmp
cmp
jmp
sub
hlt
adc
jbe
sub
shll
rclb
pop
popf
or
fwait
jecxz
add
int
mov
cmp
push
xchg
imul
aas
mov
cmp
scas
adc
popa
sti
pop
cld
xor
jle
push
repnz
and
push
push
lcall
add
nop
shll
in
lea
aaa
adc
mov
lret
dec
mov
cli
stos
push
add
push
adc
pop
sub
push
xchg
adc
add
mov
jge
ret
scas
imul
bound
cld
cmp
add
andl
push
sarb
mov
adc
es
scas
orl
xchg
add
pop
cs
lock
stos
xchg
push
out
mov
sub
enter
scas
add
mov
xchg
cwtl
es
and
jle
adc
cs
jbe
ficompl
insl
lcall
push
adc
lods
pop
ja
js,pt
dec
adc
ficompl
push
rclb
hlt
hlt
insl
inc
nop
imul
xchg
pop
adc
jmp
push
mov
lcall
iret
lea
mov
les
mov
push
sub
cmpsb
sub
dec
insb
inc
push
sub
inc
imul
push
das
adc
out
pop
xchg
insl
push
jno
mov
xor
push
mov
inc
push
dec
adc
add
sbb
push
inc
add
ljmp
or
mov
arpl
nop
mov
sub
xchg
and
jbe
flds
into
lds
test
ljmp
mov
inc
lcall
mov
std
pop
iret
test
cltd
inc
sbb
sub
stos
call
out
jo
mov
sub
lret
testb
mov
aam
ret
and
dec
hlt
in
aas
xchg
cmp
push
jno
dec
movsl
sub
jbe
adc
push
adc
data16
lea
push
fcoml
stc
mov
sub
ja
adc
scas
lds
and
inc
ja
jge
sbb
mov
inc
ret
popf
sbb
inc
xchg
out
and
fdivrs
into
icebp
aad
std
cmp
aas
testb
mov
daa
movsb
ss
iret
sahf
or
jg
mov
das
test
ficompl
dec
cwtl
gs
adc
es
cmp
pop
sub
daa
lds
jne
dec
popf
aas
andl
lds
jb
cmp
and
leave
dec
rcr
fsubrs
lret
imul
pushf
shld
xchg
pop
pop
dec
roll
loope
mov
call
lea
cltd
add
sbb
xor
lret
inc
push
sbb
jb
push
xchg
fnsave
pop
and
mov
mov
inc
mov
aas
jl
sub
mov
mov
stos
dec
cli
aam
mov
add
gs
sbb
xor
pop
aaa
sbb
xchg
fstps
repnz
xchg
int
fadd
and
push
dec
lea
lods
out
int3
push
cwtl
stos
add
and
mul
fcomps
subb
or
jns
mov
mov
xchg
lea
fcoms
mov
mov
fdivs
xchg
fmul
push
pop
mov
xor
inc
pop
push
xchg
clc
mov
test
and
aaa
cmp
push
cmc
arpl
xor
test
movsl
mov
sti
push
mov
xchg
xor
test
cld
adc
lods
inc
inc
dec
mov
sbb
jns
push
data16
shll
jns
or
cmpsl
popa
data16
shl
pop
movsl
jbe
js
or
sub
bound
fst
sub
inc
into
mov
mov
sbb
mul
or
dec
jecxz
push
cs
mov
mov
push
dec
testl
dec
lods
imul
or
or
lea
movsb
push
and
imul
or
lock
insl
sbb
xor
and
insl
sub
or
lahf
cld
jo
dec
sti
in
scas
ds
pop
xor
add
mov
xchg
shrb
mov
gs
jnp
xchg
push
cmp
push
push
add
push
loope
fidivl
add
insl
lea
xchg
inc
mov
adc
cltd
and
jo
mov
pop
ret
sahf
push
lods
test
cmpsb
mov
lahf
scas
pop
cli
mov
les
data16
jne
and
fstpt
jns
jns
xchg
sbb
loop
jecxz
cmp
dec
jl
inc
insb
cld
insl
divl
cmp
insl
jmp
push
cmc
repnz
adc
icebp
ljmp
and
mov
outsb
mov
outsb
push
adc
ljmp
ja
push
hlt
addr16
mov
xor
pop
aaa
ret
mov
mov
sub
andl
stos
dec
outsb
addr16
and
lods
icebp
jb
dec
rcll
pop
push
faddl
lds
pop
loope
cld
jecxz
jnp
ret
lods
adc
sbb
inc
in
pop
push
loope
jecxz
addr16
lock
and
sahf
push
jle
jb,pt
xor
lods
les
mov
add
xor
push
inc
lds
in
imul
push
les
stc
enter
pop
loope
cmp
ret
jnp
mov
es
andl
jmp
pop
mov
push
xchg
mov
dec
sub
outsb
fucomip
repnz
stos
mov
xchg
xchg
ret
push
in
mov
cltd
pop
jle
gs
jecxz
xor
xchg
aaa
insb
jo
jno
int3
dec
icebp
test
xchg
mov
cltd
ja
or
sub
push
arpl
ret
in
xor
aas
sub
cmp
pop
mov
fwait
fstps
pop
sbbb
ljmp
sub
push
add
adc
out
in
stos
mov
cmp
dec
addb
aaa
cmc
pop
dec
aas
or
jmp
jne
arpl
movl
xor
xor
jb
lods
fcmovnbe
imul
adc
call
mov
jno
out
xor
cs
push
sahf
sahf
lret
cmp
push
outsb
aas
jmp
inc
xchg
cli
daa
jae
sub
sub
fucom
xchg
in
dec
pop
add
mov
mov
sub
push
jecxz
xchg
leave
loope
jno
mov
pop
testb
test
push
jge
shll
faddp
test
stos
jns
xor
loopne
fisubs
dec
lea
xchg
inc
nop
and
sbb
lret
or
cli
aas
mov
or
fwait
or
dec
sarl
subb
mov
push
push
insl
scas
inc
ljmp
adc
mov
adc
push
outsb
les
scas
test
or
lcall
mov
xchg
aad
jne
jl
lods
punpcklbw
stos
pop
sbbl
js
push
mov
jl
lret
flds
imull
scas
push
mov
sbb
adc
pop
movb
out
mov
repz
or
jle
test
sti
jo
insl
fwait
pop
cwtl
aad
push
movsb
or
in
jl
stc
pop
fstl
insl
mov
stc
sub
aad
adc
shrb
fstpt
add
cmp
sub
push
call
jp
mov
dec
xor
ret
adc
popa
push
loop
and
or
mov
inc
or
mov
jp
pusha
out
out
fldcw
insb
fimull
inc
lcall
pop
fadds
out
and
into
pushf
mov
mov
fneni(8087
ljmp
mov
insb
mov
scas
pop
cli
jg
mov
fmuls
fdivp
shll
scas
iret
jno
test
jnp
inc
pop
xor
sub
xchg
int3
push
test
xor
imul
mov
aas
jle
imul
pop
ljmp
pushf
mov
pop
es
lret
push
sbbl
mov
push
into
cmp
cli
dec
mov
cld
sti
jl
xor
ret
push
mov
lea
pop
fildl
outsb
cmpsb
adc
xor
sub
xor
lret
or
pop
push
jns
mov
cmp
int3
sub
clc
and
add
dec
jne
pop
int
or
das
aad
jne
sbb
adc
jge
or
rcrb
fistpll
xlat
jnp
or
or
push
sbb
mov
or
inc
xlat
add
push
punpcklbw
lahf
lret
or
movsb
dec
lds
fisttpll
mov
jns
mov
dec
add
adcb
neg
or
stos
test
inc
xor
fcoms
in
ja
aaa
lods
dec
xchg
leave
lods
inc
sbb
loopne
cmpl
mov
xor
sbb
insl
mov
mov
aas
mov
sub
push
xor
aaa
outsl
cld
add
in
dec
adc
fisttps
les
loopne
divl
ljmp
add
jbe
data16
sub
cmp
or
mov
push
mov
lds
cmp
jmp
jb
cmp
nop
or
xchg
cmc
movsb
xlat
adc
and
push
in
ja
test
pop
add
shll
xor
stc
sbb
mov
loopne
sti
dec
add
loope
dec
imul
aas
fwait
shll
std
pop
sti
fnstenv
mov
cmp
pop
shll
mov
dec
sbb
test
sti
pop
daa
push
mov
sub
or
jno
xor
call
jmp
sbb
nop
dec
ret
out
xchg
inc
out
push
rolb
dec
pop
xor
or
call
pop
mov
dec
inc
sub
dec
and
xchg
mov
pop
or
hlt
mov
xchg
dec
imul
sub
mov
hlt
pusha
mov
mov
sbb
mov
stc
ret
push
fwait
lods
dec
xchg
add
lcall
add
and
lods
jns
pop
shlb
jmp
xchg
xor
out
jmp
inc
xchg
and
mov
fsub
daa
pop
mov
push
and
mov
push
dec
pop
mov
push
cmpsb
adc
adc
adc
iret
push
cmp
sub
mov
xor
mov
cld
mov
pushf
mov
or
jmp
mov
icebp
or
pop
add
push
test
pop
push
adc
pop
js
inc
call
cmp
into
mov
fwait
lcall
pop
inc
data16
sbb
daa
inc
movsl
out
sbb
dec
jne
jb
aam
lret
sbb
sbb
jp
insl
cli
cmp
mov
imul
mov
les
sbb
scas
divb
add
add
loop
and
mov
addr16
inc
clc
jnp
mov
out
lods
mov
mov
pop
mov
mov
cwtl
adc
xchg
stos
push
mov
cmp
test
cmp
in
es
repnz
sbb
addb
jbe
sub
das
cs
jbe
adc
fiadds
lods
mov
add
imul
hlt
dec
fisttps
dec
scas
les
and
sub
lahf
pop
cmp
insb
mov
pop
pop
xchg
dec
cmp
cmc
jo
les
jg
in
lods
ret
test
cld
add
sti
sbb
in
add
outsl
clc
xchg
sub
sbb
ljmp
and
mov
add
jnp
xchg
cs
jl,pt
movsb
push
mov
ret
cmpb
push
mov
sub
mov
inc
sbb
lods
pushf
mov
push
push
push
int
sub
mov
mov
mov
lcall
repnz
mov
out
les
lahf
sub
scas
enter
sti
insl
orl
sbbl
jns
sbbb
js
cmp
inc
nop
dec
and
decl
mov
ljmp
fsubrl
dec
pusha
adc
jo
movl
adc
cmp
xchg
cs
push
sbb
cs
pop
mov
cmp
movb
jmp
out
dec
pop
mov
and
xor
mov
fadd
imul
mov
sbb
push
fsubs
add
jne
test
jecxz
outsb
xchg
mov
pop
push
gs
jbe
xchg
mov
out
jae
or
lds
add
sahf
jno
loop
and
and
push
cs
addr16
xchg
add
cmp
sub
and
lret
xor
or
movsl
in
icebp
cmp
inc
aam
mov
inc
sub
jb
mov
pop
mov
pusha
jg
ret
cmp
xor
mov
sub
stos
mov
outsl
inc
fmul
xchg
lahf
cltd
scas
call
negb
sbb
sbb
dec
mov
sub
jb
movsb
mov
cmp
cmp
cmp
and
push
cmp
jno
adcl
data16
sbb
push
xor
pop
jmp
mov
add
xchg
call
pusha
jne
or
and
sub
ret
sub
mov
loopne
inc
insb
jnp
mov
or
ret
in
jge
xchg
push
fdivr
fisubs
gs
ret
jl
fisubl
ret
push
nop
push
dec
mov
movsl
fmull
and
loope
xchg
jl
insb
or
xor
mov
jns
push
jo
lds
into
mov
inc
xor
adc
sbb
xlat
or
cld
int3
jp
das
xor
add
shll
jg
push
fstps
test
daa
dec
lahf
adc
pop
ljmp
nop
or
inc
leave
sub
fdiv
mov
xchg
dec
or
jg
idivl
mov
jb
movsl
pop
or
ljmp
bound
rcl
adc
into
sti
js
xchg
jmp
lahf
add
mov
mov
mov
push
lods
push
xor
mov
in
in
cmp
inc
imul
hlt
roll
mov
je
insl
fstpl
mov
inc
push
cmpsl
inc
xlat
das
pop
stos
add
sub
pop
arpl
cmp
lcall
cmp
dec
pop
jmp
int3
sahf
insl
int3
xchg
and
les
lods
daa
xchg
lds
loop
jl
or
xchg
lods
jo
cltd
or
and
dec
pop
sbb
jle
push
ds
outsb
mov
inc
clc
inc
shr
int
cltd
daa
cmp
mov
es
mov
lea
addr16
ds
sbb
jge
movsb
cld
leave
mov
ljmp
mov
aaa
test
adcb
xor
or
dec
and
jle
stos
je
mov
dec
pop
push
push
sti
cmc
pop
rcrb
mov
mov
mov
jb
fcompl
xchg
lahf
daa
aam
enter
sbb
bound
lcall
nop
out
pop
push
cli
or
adc
xor
sub
pop
push
add
mov
pushf
mov
dec
jecxz
or
lods
das
add
sti
pop
mov
cmp
aam
pop
es
xchg
je
enter
cmovg
pop
and
pop
scas
add
jp
push
push
rorl
addl
xor
xor
pop
inc
stc
cmpsb
xchg
and
pop
pop
xchg
inc
loope
mov
daa
leave
pop
cmp
mov
fwait
add
addr16
jbe
mov
inc
stos
jo
insb
test
push
popa
push
cmc
js
into
aaa
cmp
lret
sarb
stc
jl
fiaddl
push
movsl
fstl
lods
mov
es
dec
cli
lahf
mov
or
pop
lea
add
aaa
and
mov
clc
mov
or
scas
mov
mov
mov
rcll
adc
sub
jo
cltd
repnz
out
ja
dec
ret
out
and
add
sti
mov
loope
shrl
mov
nop
mov
and
ret
out
inc
mov
and
cmpsl
subb
dec
push
fnsave
mov
movsl
cmp
mov
hlt
or
sahf
and
shlb
mov
jnp
clc
aam
push
imull
jmp
sub
or
ja
std
pushl
and
push
scas
out
sub
push
pop
add
rcll
push
rcrl
in
cmp
xchg
test
daa
add
pop
iret
pop
pop
nop
sub
js
rcrl
mov
popl
bound
shll
aas
push
repnz
xor
xor
adc
insl
stc
jbe
xlat
mov
testl
sub
fs
xchg
push
xlat
xor
sub
xorl
sub
fstpt
les
dec
jnp
scas
mov
fs
sub
mov
nop
inc
cmpsb
out
lds
aam
fisubl
adc
pop
push
push
mov
mov
cmp
shlb
repnz
movsb
pop
js
in
leave
ret
pop
add
mov
dec
xchg
sub
mov
sbb
mov
pop
out
js
lds
movsb
rdmsr
pop
ds
sub
into
add
fisubrs
pop
mov
push
push
mov
mov
sbb
cld
inc
scas
mov
repz
push
stos
icebp
or
cwtl
mov
and
sbb
ljmp
or
adc
mov
inc
lret
sub
xchg
mov
inc
pop
test
xchg
mov
pop
push
dec
in
lcall
inc
mov
push
mov
inc
xlat
add
or
jbe
ljmp
mov
pop
sub
mov
push
mov
sbb
jnp
sti
pop
jp
pop
mov
cmc
call
push
mov
jnp
scas
xchg
cmp
into
jecxz
or
push
push
fmull
dec
inc
push
add
shl
cmp
and
push
pop
pop
test
inc
adc
ljmp
cld
into
jae
xor
mov
stc
leave
jmp
add
lods
mov
push
add
mov
rorl
adc
xchg
fisttpl
lock
inc
aas
popa
dec
lret
out
decl
adc
sub
rcl
fsubrl
push
je
add
mov
out
pop
adc
notl
lods
cmp
mov
ret
outsl
or
adc
js
dec
in
les
shll
sbb
jle
test
imul
or
sbb
mov
pop
xchg
sub
dec
dec
jb
xor
inc
push
mov
hlt
gs
popa
test
repnz
inc
add
jno
rcr
xchg
fldl
std
add
out
nop
fldt
stos
je
jb
bound
mov
aas
xor
repnz
jnp
sbb
out
gs
bound
ficoml
sarb
jle
test
jge
dec
lea
sbb
pop
push
xor
shrb
pop
jmp
mov
mov
shrb
mov
aas
jecxz
shll
xor
pop
sbb
stos
mov
sbbl
mov
add
mov
dec
xor
ret
inc
sbb
lahf
push
mov
cmc
out
mov
add
insb
enter
cmpsl
adc
xlat
sbb
adc
lea
mov
sub
pop
mov
inc
mov
cmpsl
shl
bound
mov
scas
ds
xor
fldl
cmp
and
adc
jae
stos
add
xchg
mov
mov
js
divb
sbb
arpl
hlt
jb
fidivl
pop
xchg
fstpl
adc
sub
jl
outsb
dec
pop
ror
or
icebp
mov
dec
movsl
sbb
mov
leave
shrb
inc
std
setnp
sbb
mov
add
sbb
push
xchg
pop
movsl
mov
mov
push
and
cwtl
int3
outsb
mov
ss
xorl
int3
inc
pop
rcrl
push
inc
jae
lret
sahf
xchg
dec
add
cli
aas
repz
stos
xchg
cmpsl
imul
daa
or
ja
push
hlt
fucomp
push
xchg
vcvtps2pd
pushl
cmp
xchg
pop
add
xchg
jge
adc
adc
pop
mov
jbe
ret
in
jno
stos
xchg
cmp
cltd
cmp
and
push
sbb
xchg
aaa
bts
add
popa
push
js
jns
sub
fldt
sub
sbb
les
or
js
mov
sub
add
xchg
movsb
or
pop
jl
mov
aaa
inc
lods
add
pop
mov
cwtl
pop
rorb
jle
subb
pushf
out
mov
add
cmp
jl
sahf
and
lcall
cmpsb
out
mov
sbb
sbb
insb
pop
mov
dec
jmp
sbb
inc
jb
jae
pop
imul
mov
dec
jnp
sub
dec
pop
push
mov
mov
push
icebp
pop
rcll
xor
outsb
stc
shrb
out
add
popf
pop
in
outsl
aas
mov
fildll
mov
push
pop
dec
pusha
xlat
and
xor
sbb
inc
sbb
and
in
mov
jmp
aas
nop
mov
dec
mov
es
or
pop
inc
and
data16
fcoms
cmp
leave
insb
pop
mov
out
outsl
movsw
shll
stos
call
xor
jecxz
subl
idivb
cmp
add
pop
mov
rcr
jle
xchg
ss
cmp
xchg
mov
lcall
lret
mov
aad
push
inc
pop
repz
lods
in
pop
jb
xchg
in
divl
jno
roll
lahf
jnp
decl
xchg
out
xchg
out
jge
mov
jnp
or
std
xchg
pop
mov
mov
sbb
sub
mov
xchg
iret
outsb
add
scas
in
adc
push
mov
inc
and
ret
push
ret
mov
subl
dec
shll
jle
cltd
xor
jae
aad
push
daa
ret
fisttpl
fistpll
leave
lahf
rcrb
sbb
pop
rol
stos
or
mov
sbb
or
adc
or
dec
mov
cmpsl
push
jle
mul
pop
jp
xor
mov
fdivrl
loope
fs
adc
jge
mov
xor
push
push
mov
and
mov
insb
jbe
mul
jno
insl
lcall
fbld
test
fcoms
push
inc
mov
push
dec
ret
cmp
jmp
xor
sub
popf
sbb
mov
out
call
pop
stos
fisttpll
ja
adc
ja
in
sbb
push
mov
inc
clc
inc
aam
sahf
negb
repz
inc
loop
and
mov
xchg
adc
shr
adc
fisubrs
cwtl
pop
insb
dec
popf
out
push
or
call
sub
add
sub
stos
mov
hlt
mov
in
jle
nop
sub
nop
aaa
and
xchg
add
sub
push
out
cmp
pop
jnp
out
bound
mov
push
popa
or
shll
push
mov
jb
inc
in
inc
mov
xor
js
mov
mov
ret
ds
lar
sub
jns
mov
pusha
jne
jae
mov
je
shll
test
and
fwait
sbb
repnz
xchg
or
sti
dec
pop
cld
adc
push
icebp
pop
das
push
pop
inc
jnp
nop
and
pushf
jne
xlat
fidivs
addr16
inc
fsts
dec
push
mov
mov
adc
or
in
mov
repnz
xor
into
pushf
pushf
inc
jmp
movsl
and
jmp
lods
cltd
cli
mov
inc
std
xchg
lods
cmp
ret
mov
pop
subl
jmp
enter
inc
stos
lods
dec
xchg
jne
loope
pop
imul
sbb
push
div
clc
xorb
int3
scas
movsb
jmp
sub
mov
in
xchg
and
std
test
jg
dec
insb
xor
repnz
mov
in
mov
sbb
push
cmc
lret
mov
jge
lods
sahf
or
jge
cmp
aad
or
incb
push
data16
iret
frstor
andl
mov
je
jo
add
sub
data16
je
icebp
xchg
addr16
fistpl
fwait
sub
sub
sbb
stos
xlat
or
in
arpl
test
cltd
jmp
pop
push
push
mov
ss
popa
cltd
iret
fbstp
or
das
in
cmpsl
dec
add
insl
jo
xchg
mov
jb
cmp
mov
shr
lods
add
adc
test
jg
out
cmp
dec
aam
dec
inc
ficomps
enter
aas
cwtl
push
adc
mov
adc
addr16
jnp,pt
jp
insl
cmc
xor
rclb
and
lahf
mov
int3
fisttpl
stos
int3
sub
xor
cmpsb
push
inc
mov
mov
or
enter
lret
in
cld
shll
mov
mov
aam
stos
jns
inc
into
out
outsl
add
cmp
movsb
insl
sbb
call
mov
xchg
cmc
sub
ja
cmp
in
push
mov
mov
adc
sub
mulb
das
fcmove
je
pushf
sbbl
or
add
xchg
lcall
dec
jo
mul
pop
xchg
adc
subb
stc
mov
fwait
shl
pushf
xchg
push
mov
in
gs
xchg
sbb
fdivs
and
nopl
ja
dec
leave
bnd
and
stc
add
pop
push
xchg
div
std
jno
aad
cmp
add
dec
cmp
cmp
test
jno
cmp
xchg
mov
int3
or
jmp
daa
or
sarb
lcall
cmp
push
dec
outsl
push
out
aaa
imul
out
jle
aas
adc
sbb
test
repz
mov
faddl
pop
sbb
sarl
fs
push
mov
rclb
sbb
xchg
inc
in
stos
pop
jg
push
mov
std
dec
mov
dec
mov
pusha
imul
jmp
push
cmp
int
xchg
iretw
xor
mov
and
popa
aas
xor
cmpsb
fbstp
test
cmp
stos
aas
mov
dec
leave
lahf
inc
inc
fwait
enter
and
xchg
imul
fimull
fstp
lods
push
mov
popa
stos
popf
ret
lret
cltd
lahf
call
scas
cld
adc
inc
loop
jbe
mov
ss
mov
cwtl
adc
pop
std
jbe
int
cld
out
adc
add
out
movsb
adc
sbb
mov
in
mov
xchg
cmp
inc
dec
adc
inc
xor
lret
sbb
loopne
int
dec
lahf
xchg
dec
lret
xor
mov
jb
rcrb
sub
shll
add
cmc
mov
int
adc
push
mov
pop
je
ds
nop
sarl
ror
js
push
jns
cmpsb
pop
jno
xor
or
rclb
xchg
push
sbb
jp
mov
or
scas
xchg
fcmove
lea
xchg
test
pop
outsb
mulb
repz
pushf
int3
mov
test
shrb
sub
mov
call
xchg
lret
stos
sbb
pop
lahf
mov
cmpsb
out
imul
sbb
ds
jne
or
data16
ss
pop
hlt
sub
pushf
aaa
pop
mov
fidivl
ret
pop
iret
stos
fsubs
and
add
cmp
sbb
orb
sbb
orb
inc
dec
ret
scas
icebp
jmp
pop
or
shrl
xor
cmp
pusha
push
aam
mov
jl
hlt
push
push
sarl
orl
dec
loope
jb
xchg
push
add
aas
xor
adc
sbb
xlat
popf
mov
cli
ret
pop
xlat
test
mov
jp
cmp
cmpsb
outsb
pop
stos
cmc
xchg
repz
mov
imul
push
pop
jmp
out
mov
and
cwtl
jmp
jno
leave
pusha
add
adc
or
jb
and
and
mov
inc
sub
loope
scas
sbb
clc
cmc
popf
je
xchg
mov
jnp
cmpsb
or
and
lret
shl
cmp
and
xor
mov
movsl
fcomi
sbb
xchg
cmp
xchg
pop
and
enter
push
push
sbb
stos
mov
jg
pop
call
xchg
insl
dec
jno
scas
int3
mov
sub
fwait
icebp
inc
test
enter
xlat
push
mov
pop
jp
test
aas
fdivrl
cld
jb
mov
jl
subl
mov
adc
add
sarl
popf
mov
push
mov
mov
push
mov
mov
out
or
mov
arpl
xchg
cmp
push
jae
sub
and
adc
imul
pop
push
jb
out
sbb
jmp
imulb
pushf
test
push
pop
pushf
in
or
cmc
daa
jg
adc
sbb
cmpsl
xor
cmpsl
insl
push
js
pop
mov
inc
mov
in
mov
jmp
out
repnz
rcrl
stc
jns
pop
sti
loopne
in
cld
stc
mov
fcoml
movsl
add
cmc
sbb
neg
sub
add
in
das
cmpsb
sub
daa
js
xchg
dec
jb
jp
adc
pusha
mov
subb
daa
mov
dec
out
mov
jae
dec
decl
lods
and
daa
and
movsb
aas
xchg
xor
cmpsb
add
mov
cmp
push
fsubl
loopne
mov
mov
stc
xchg
pop
fadds
ret
dec
add
cmp
pop
jo
enter
imul
sti
xchg
jmp
jmp
mov
or
and
sub
push
add
fisubs
pushf
xchg
call
aad
enter
mov
pop
and
cmc
hlt
and
sti
pusha
mov
roll
pusha
lahf
fs
mov
out
mov
lea
inc
mov
pop
inc
repnz
loop
out
adc
je
lock
inc
aas
repz
pop
scas
divb
jecxz
inc
ficoml
int
and
sub
mov
ret
in
push
das
ret
push
inc
mov
ret
outsl
adc
cwtl
out
mov
sti
cmp
push
repz
jmp
fdivs
addr16
add
in
jmp
inc
repz
and
lea
mov
imul
icebp
scas
je
insb
pushf
xchg
pusha
jge
jns
jno
xchg
ret
pop
xor
add
lahf
loop
inc
add
and
jle
cs
pop
jo
mov
cmpsb
mov
imul
inc
int
mov
stc
or
fistps
fsubrl
cmpsl
addr16
xchg
pop
mov
les
test
mov
jbe
mov
xchg
push
push
jecxz
xchg
repnz
lcall
mov
push
data16
divl
sub
xor
inc
inc
add
fwait
xor
enter
cmp
adc
test
loopne
add
xor
push
std
cmpl
cltd
scas
pop
scas
add
jle
fsubl
cmc
and
push
mov
and
ja
mov
lods
xor
or
inc
incb
les
cwtl
sub
cmp
xchg
out
sub
daa
add
push
les
daa
fs
ds
lcall
push
addr16
test
fcompl
mov
dec
adc
cld
orl
dec
dec
cmp
push
inc
clc
pop
rorb
jo
dec
inc
and
pop
mov
push
addr16
add
adc
jg
jl
mov
mov
xor
push
clc
nop
subb
mov
jg
bound
addb
out
lds
shlb
ja
fdivrl
movsb
jae
inc
add
pushf
shld
cltd
enter
sbb
add
popf
std
movsl
cmovae
xchg
inc
sub
imul
scas
push
mov
add
pop
lret
adc
mov
lahf
or
leave
adc
dec
test
push
ror
push
dec
loop
mov
insb
push
pop
iret
inc
mov
lods
aas
rcrb
sub
cmp
sub
sbb
jp
test
lods
out
xchg
mov
imul
mov
jg
jns
xchg
sub
fsubl
inc
cmc
data16
out
andb
or
mov
push
repz
popa
cmc
lcall
add
xchg
ficoms
lret
xchg
fwait
and
pop
in
or
pop
xchg
lahf
push
cmp
out
xor
out
cmp
cld
insl
jne
dec
mov
pop
repnz
fsubp
sub
lahf
mov
adc
sbb
mov
sbb
js
xchg
out
sarb
outsb
stos
dec
fcompl
fnstsw
mov
add
push
dec
or
adc
dec
fwait
adc
insb
and
test
fldcw
mov
mov
jo
repnz
test
inc
scas
jle
xor
inc
fs
outsl
sub
filds
pop
jl
add
data16
push
cli
cs
mov
cmp
repz
lds
movsb
mov
lock
imul
rclb
repz
adc
lock
les
stos
xor
jne
test
pop
jl
sahf
xorb
sbb
add
inc
xchg
out
cmpsl
das
dec
xchg
and
lret
cmp
or
or
xchg
adc
cmp
or
ficoml
lods
xchg
loopne
cmp
imul
repnz
orl
cmp
repz
add
sbb
sub
data16
inc
mov
xchg
hlt
push
dec
mov
lret
lahf
sub
fsubrp
into
orl
jae
cmpsl
dec
je
inc
and
jmp
cmp
xchg
loope
std
xor
add
mov
cmpsl
pusha
xor
arpl
add
iret
pop
ret
popf
push
insb
push
and
movsl
call
lea
pop
sbb
lock
inc
cmp
outsb
cs
out
fdivrs
call
jns
adc
pop
or
jbe
gs
and
nop
add
jle
ret
outsb
jns
mov
mov
in
and
movsb
out
insb
adc
cmp
out
mov
cmp
pop
pop
les
dec
aaa
xor
xor
out
mov
mov
sbb
and
pop
or
sbb
xor
mov
adc
push
cmp
cli
lock
cmp
pop
jnp
inc
push
aaa
dec
rep
adc
jbe
repnz
adc
movsl
or
mov
in
cmp
stc
sti
sbb
push
out
loopne
xor
sub
mov
jl
repz
shl
cld
aaa
xchg
popl
sbb
sbb
cmp
lea
cmp
add
outsb
bound
iret
jl
cltd
iret
dec
in
mov
pop
pop
stc
mov
xor
movsb
cmp
push
hlt
jb
cmp
ss
aam
mov
int3
enter
xchg
cmp
mov
xchg
push
lcall
ret
and
lods
sbb
xor
stos
xchg
aas
lea
xlat
test
aad
inc
cmpsl
jmp
xlat
fwait
outsl
add
sahf
insb
jns
push
push
lods
pop
lock
mov
xchg
jecxz
or
in
addb
xor
mov
lock
repnz
inc
push
xor
cmp
jae
adc
sub
out
int3
pushf
jg
fadd
sbb
js
ret
mov
mov
pop
ret
js
adc
in
or
rcrl
cmp
subb
xchg
mov
insb
or
fsts
xor
add
movsl
loope
outsl
int3
bound
xchg
addb
outsb
mov
mov
jg
and
inc
jnp
add
cmpl
mov
clc
pushf
rclb
fdivrs
in
movsb
les
shlb
fidivl
mull
sbb
testl
shl
repnz
ljmp
sub
scas
sbb
sub
loope
loope
add
push
int3
xor
mov
std
or
cmpl
test
dec
dec
xlat
sahf
jo
hlt
sbb
push
xorb
scas
mov
sub
or
jno
inc
sarl
cmp
inc
fsubp
hlt
packssdw
or
push
jo
mov
pop
mov
sbb
jae
fs
repnz
popf
mov
mov
stos
in
jne
mov
xchg
test
gs
xchg
aas
mov
insb
cmp
xor
pusha
clc
es
pop
repz
dec
out
test
mov
ffreep
xlat
in
fidivrs
mov
fwait
jns
adc
fsubp
xlat
dec
jae
ret
out
shll
push
xchg
aad
push
test
mov
pop
lret
jmp
es
fisttps
jae
and
push
nop
cmp
xlat
lock
sbb
dec
cli
dec
popf
sbb
adc
enter
cmp
insb
sub
xor
mov
sarb
jp
mov
inc
rcrb
mov
in
outsl
lea
push
push
into
pop
jb
loop
push
ficoml
test
faddl
ret
fcompl
add
sti
dec
aad
push
push
sub
xor
sbb
int3
xlat
loopne
jecxz
add
add
mov
lret
pusha
jnp
ret
cld
insb
inc
repz
jl
jo
mov
cli
pop
in
fistpl
iret
fbld
sar
std
imul
scas
ret
pop
into
mov
jo
push
sub
xchg
and
stc
jnp
jo
sti
pop
push
test
lods
sub
sbbb
or
push
loopne
scas
arpl
icebp
mov
ljmp
sub
loope
fs
scas
std
mov
adc
ret
push
lea
loopne
xchg
xchg
dec
xchg
subb
cld
in
loopne
popf
movsl
xchg
test
mov
test
lds
xchg
rcrb
into
pop
inc
push
jns
push
aaa
loope
lret
push
pop
out
nop
push
push
in
xor
pop
les
dec
mov
insl
xchg
call
push
cltd
imull
cmp
push
in
jb
add
sub
ret
and
stc
pop
xchg
repnz
movsb
pop
pop
fildll
add
lret
cmpsb
shrb
add
int3
push
movsb
or
fsts
outsl
push
mov
ret
idivl
movsb
leave
lahf
xchg
xchg
cmp
repz
cld
jle
ror
imul
loop
cmpsl
sbb
cmpb
lods
adc
sbb
dec
loop
xor
ror
add
imul
rcrb
popa
xor
cmp
mov
cli
adc
xchg
ds
jns
push
dec
in
jns
or
adcb
jecxz
dec
fmull
mov
jns
cmp
pop
outsb
mov
outsl
mov
cmpl
call
and
push
or
and
adc
pushf
loopne
test
lret
aas
rcll
or
inc
imul
adc
scas
xor
or
ret
push
subb
jl
mov
adc
mov
pop
or
dec
sti
inc
bnd
stos
inc
push
call
dec
cmp
les
loope
jbe
cmpsl
out
inc
mov
jle
mov
mov
enter
popa
dec
iret
popf
xchg
lret
in
repnz
ss
jne
cmp
test
mulb
int3
loop
or
push
and
insb
icebp
sub
sub
cltd
adc
jg
jg
or
jle
loope
and
jbe
out
fidivrl
ds
cmp
mov
mov
adc
popf
dec
test
or
pop
shl
jns
or
out
test
push
pop
jl
xchg
std
shl
mov
bound
xchg
mov
or
insl
lods
mov
repz
mov
decl
lds
mov
ja
push
sbb
and
stos
xrelease
pop
data16
andb
xchg
add
cmp
inc
in
and
aam
les
pop
or
ss
mov
cmc
mov
and
pop
dec
dec
mov
jo
bound
fiadds
enter
mov
push
rcr
adc
sbb
addr16
iret
mov
fbld
ffree
nop
testl
xchg
jmp
fdiv
xchg
mov
pop
adc
hlt
scas
scas
sbb
sbb
sbb
fmuls
js
jno
int3
pop
mov
repnz
arpl
les
adc
xchg
in
pop
outsb
mov
aaa
dec
loop
push
and
or
xlat
jge
mov
push
pop
sbb
sub
stos
mov
int
add
pop
lods
add
scas
fwait
test
sbbl
mov
dec
lahf
inc
pop
push
mov
sbb
dec
loopne
pop
sbb
sbb
xchg
push
push
mov
ljmp
in
repnz
iret
test
jo
push
inc
in
lret
pop
imul
arpl
js
pushf
xor
inc
fldt
filds
xor
pusha
dec
pushf
loopne
je
notl
inc
sbb
xchg
mov
lcall
add
daa
jecxz
jbe
mov
xchg
nop
lock
cmc
mov
mov
and
and
push
cmp
insb
aam
mov
push
stc
cmp
mov
mov
or
pop
push
inc
pop
mov
adc
out
jmp
or
adc
imull
ljmp
icebp
scas
loope
push
xor
jns
pop
iret
sahf
lea
idiv
test
xor
nop
jno
mov
ja
scas
es
in
jecxz
sbb
lds
sub
jmp
add
adc
in
stos
mov
push
mov
or
sub
mov
dec
sbb
adc
mov
js,pn
push
jmp
fdivl
movsl
mov
push
xor
push
jb
je
jl
cwtl
negl
idiv
outsb
les
lahf
mov
xchg
push
dec
pop
or
mov
push
adc
push
add
mov
icebp
lahf
push
imul
adc
push
jmp
mov
ja
push
push
mov
lcall
hlt
mov
mov
add
int3
sbbl
mov
mov
xchg
mov
aas
jno
stos
stos
jmp
out
inc
mov
inc
lods
mov
jge
stc
ds
les
loop
cmp
call
lahf
xchg
cmp
inc
dec
out
into
push
addr16
inc
and
add
dec
inc
aas
mov
popa
mul
adc
sbb
leave
inc
scas
int3
leave
adc
jne
lret
ja
lcall
adc
out
adc
mov
cmpl
dec
mov
inc
daa
pop
dec
mov
iret
cmp
roll
shrl
xchg
mov
dec
test
mov
push
mov
cmpsb
sar
and
cmp
xor
scas
int3
arpl
cmp
or
pop
cld
xchg
add
and
test
xchg
ja
fimull
inc
mov
movsl
jno
xor
das
or
jne
loope
pop
dec
or
ljmp
cmpsb
inc
push
sub
mov
push
mov
dec
pop
xchg
cmp
fnsave
fidivl
sbb
popa
push
and
imul
mov
lcall
jne
jae
jo
dec
xor
jg
scas
dec
cltd
scas
scas
imul
clc
or
iret
cli
jb
xor
push
sbb
dec
stos
sub
ds
adc
test
sub
data16
push
fbld
imul
pusha
rcl
xchg
out
xchg
sarl
aaa
int
mov
and
popf
jg
jns
or
out
aaa
roll
in
es
add
push
cmpsl
mov
add
bound
xchg
insl
and
jne
rol
mov
ret
cmpsb
iret
xchg
nop
push
shlb
ficompl
push
pop
ljmp
in
mov
int
stc
and
pop
sbb
dec
push
mov
or
adc
out
dec
mov
and
inc
lahf
subl
sbb
faddl
xchg
adc
jnp
stc
lock
inc
mov
mov
push
jl
test
xchg
out
out
sbb
sti
xor
repz
js
add
mov
dec
int3
stos
sti
adc
add
mov
movsl
cmp
sbb
sub
imul
inc
inc
or
push
xchg
adc
mov
arpl
fcmovne
sub
and
das
sahf
scas
ljmp
scas
mov
push
call
arpl
rcrb
mov
shld
sub
outsb
dec
push
jmp
sbb
and
or
les
jo
mov
dec
and
lcall
movsb
aas
addr16
xchg
mov
shl
scas
rcll
inc
or
cwtl
in
out
jecxz
jb
ldmxcsr
xor
cs
repnz
add
shl
outsb
nop
sbb
shlb
cmp
dec
and
push
sarl
dec
les
test
push
xor
call
add
lret
dec
pushf
jecxz
pop
sbb
jne
fiadds
push
cltd
ljmp
fldl
or
stos
mov
dec
stc
call
jo
mov
push
into
punpcklbw
mov
ret
in
adc
out
call
jnp
fdiv
bound
push
ja
sub
jae
pop
add
es
adc
rorl
mov
ss
dec
push
int3
or
mov
notb
les
and
adc
loop
insl
push
sbb
jbe
rcrb
cmc
sub
mov
sbb
xor
insl
mull
inc
sbbl
cmpsl
push
inc
js
sub
sbb
outsb
outsb
inc
mov
arpl
loope
fmulp
and
pop
xor
into
pop
dec
std
bound
jo
aam
sti
push
mov
hlt
sub
rorb
popa
push
mov
stos
mulb
adc
or
jnp
xlat
daa
cmp
push
pushf
shl
and
lock
test
popa
cmc
pop
lcall
jge
dec
dec
mov
inc
cmp
in
sbb
and
test
in
sub
lret
test
inc
popa
aad
sbb
cwtl
into
stos
jp
scas
xchg
pop
nop
imul
lods
add
movsb
push
mov
scas
in
aam
cmc
mov
xchg
add
push
adc
inc
add
xlat
adc
add
xchg
dec
jae
jno
and
push
movsl
cmpsl
jp
icebp
push
fsts
jne
xor
inc
ss
aad
add
sbb
ja
ss
mov
push
mov
or
adc
popa
addl
mov
push
jle
loope
outsb
repnz
dec
dec
je
inc
stc
or
dec
mov
shrl
lods
xchg
mov
mov
sub
daa
push
xor
mov
jle
pop
repz
xorb
cmp
cwtl
nop
push
xor
xchg
into
xor
nop
mov
int3
or
mov
rolb
mov
adc
out
mov
pop
mov
sbb
pop
leave
sub
insb
jecxz
adc
xor
les
inc
xchg
jbe
shll
mov
jg
jecxz
push
leave
hlt
dec
mov
jl
call
in
in
cwtl
cli
xorl
cmp
push
iret
cmc
mov
mov
bound
cld
es
pop
imul
mov
ss
hlt
lahf
dec
shrb
fisubl
inc
pop
add
negb
pop
or
adc
adc
ljmp
mov
leave
iret
push
inc
dec
bound
pop
inc
or
adc
leave
lret
sub
jb
and
cmp
mov
das
or
insl
icebp
mov
shll
fwait
rcll
mov
and
pop
jge
dec
lock
inc
fisubs
dec
cmc
adcl
pop
push
add
shll
cmp
mov
dec
xchg
loopne
out
mov
jle
or
sub
jmp
inc
in
xchg
xchg
gs
xchg
xor
mov
imul
pop
sub
das
neg
inc
mov
push
pop
or
shrb
in
mov
push
mov
sub
xor
loopne
push
pop
inc
or
sub
ss
fnop
incb
int
and
dec
nop
out
pop
lods
or
or
daa
adc
rol
lods
fsts
data16
jae
or
dec
pop
fnsave
inc
adcl
inc
and
scas
jnp
stos
xchg
push
shrb
xor
and
jle
mov
addr16
jno
mov
loop
stos
add
or
fidivrl
pop
lods
test
aas
scas
xor
adc
dec
or
fstpt
lcall
clc
rclb
dec
sub
and
dec
pushf
out
test
inc
add
xchg
inc
xchg
or
js
push
cmp
pop
pop
mov
sub
adc
xor
jo
cmp
sbbl
addr16
jmp
cwtl
pop
movsb
in
call
jbe
ret
dec
popa
inc
aas
je
adc
fcmovne
outsb
or
pop
mov
or
je
sub
xchg
mov
stc
xchg
xchg
pop
xchg
inc
dec
mov
mov
lods
fisubrl
push
adc
mov
mov
scas
in
ret
adc
dec
add
cs
popa
and
dec
xorb
mov
rcrb
jae
iret
les
inc
mov
test
sub
mov
iret
addl
les
sbb
mov
int
aad
shl
add
push
rcll
dec
mov
dec
xchg
imul
lods
bound
mov
outsb
faddp
sbb
cmpsb
cmp
loopne
iret
jmp
inc
push
mov
pop
mov
popa
dec
mov
in
push
jle
jmp
push
mov
inc
jmp
mov
aas
cld
adc
cmp
cmpsl
xchg
out
push
or
enter
or
mov
imul
add
test
sahf
popa
push
pop
int3
test
testb
fcos
mov
aam
fs
and
data16
loope
mov
imull
adc
xchg
dec
subb
pop
mov
sub
hlt
xchg
jnp
inc
mov
dec
sub
jo
mov
mov
and
dec
sub
int3
cltd
mul
sti
mov
sbb
movsb
cld
xor
loope
add
jecxz
adc
in
jns,pt
sub
adc
mov
and
rorl
cmpsb
cmp
dec
fs
pop
mov
insb
mov
test
and
push
dec
shlb
push
ja
int3
inc
mov
adc
aad
fistl
cmp
aad
jle
inc
ret
and
sbb
add
jbe
or
loop
in
cmp
les
dec
mov
mov
dec
shlb
add
pop
xchg
jmp
scas
sub
notb
or
and
dec
loopne
shrl
mov
mov
adc
cwtl
insb
mov
push
outsb
sahf
dec
pop
adc
add
adc
jecxz
lock
aas
pop
lret
dec
push
or
scas
mov
loope
and
lcall
rol
imul
pop
sbb
sbbl
sbb
xchg
sub
mov
clc
inc
pop
pop
lret
not
notl
fstl
pop
push
mov
inc
fmuls
jno
or
call
cmc
push
outsl
loope
or
cmp
int
cmp
xor
cmpsl
scas
fimuls
jp
fimuls
sub
loop
rcrl
out
inc
and
push
sbb
test
xchg
xor
push
cld
ret
cmp
or
pop
push
lds
ret
gs
sbb
inc
add
add
loope
push
daa
push
pusha
mov
ds
mov
dec
arpl
or
aam
push
inc
sub
stos
ficoms
add
sti
pushf
sbbb
cmp
push
push
ret
aas
xchg
lret
add
ret
pusha
jg
xchg
xor
fistpll
jo
inc
or
push
push
sete
mov
stc
xchg
sbb
ret
inc
je
dec
loop
int
sub
sbb
iret
xchg
loop
mov
sarb
adc
es
adc
vmwrite
cltd
cmp
insl
repz
pop
sti
dec
faddl
sbbl
cmp
sbb
or
fbld
dec
sbb
jo
mov
push
mov
sub
pop
sub
decb
fnstsw
in
add
dec
loop
mov
mov
xchg
mov
adc
aam
cmp
add
or
addr16
sub
lods
es
push
js
dec
fsts
fnstsw
in
sbb
fldl
adc
aad
cwtl
cmp
scas
cmpsb
clc
lods
sub
mov
cmp
adc
mov
lods
add
cmp
cmp
adc
stos
pop
mov
inc
mov
mov
ret
hlt
dec
cmpsl
adc
movsb
inc
stos
or
inc
sarl
fistpll
shrl
dec
cmp
imul
out
dec
pop
push
and
popf
cs
xor
rcll
neg
lods
adc
mov
leave
inc
push
dec
es
pop
aas
js
rcll
sarb
fists
mov
xor
xchg
and
arpl
push
sub
cltd
setle
ja
arpl
sbb
mov
sub
inc
mov
or
cmpsl
test
call
lods
movsl
xchg
xchg
mov
repz
fs
test
xlat
add
add
dec
test
jnp
push
fdivrs
cmp
ret
adc
imul
mov
add
dec
sbb
fisubl
enter
cmpsb
test
rcrl
jns
push
imull
cmp
add
outsl
push
js
mov
inc
mov
daa
rcr
int
loop
out
imul
cmpsl
cmpsl
jge
pop
out
mov
xchg
mov
mov
cmp
pop
int3
js
aas
jmp
cmpsb
addr16
mov
add
cmp
outsl
ss
xor
add
sub
mov
mov
dec
inc
clc
lahf
cmp
sahf
inc
scas
sbbb
push
jmp
arpl
ret
gs
push
sbb
xchg
dec
push
xchg
icebp
xchg
jnp
cmc
sbb
nop
aam
daa
dec
int3
in
fistpll
dec
and
dec
pop
push
scas
cmp
mov
adc
inc
mov
imul
leave
sub
adc
lods
mov
xchg
cwtl
adc
js
mov
insb
cld
repnz
test
add
mov
xchg
icebp
popf
movsl
gs
xor
movsl
xchg
pop
pop
push
push
fs
adc
dec
push
pop
xor
into
lcall
scas
loop
dec
pop
and
inc
sahf
pop
clc
ds
lds
mov
arpl
mov
push
pop
pop
fisubl
push
add
addr16
loope
add
loopne
jns
xchg
movsw
enter
xor
fwait
clc
adc
fstl
xor
rcrl
mov
icebp
or
idivl
dec
pop
push
add
and
push
adc
cmp
mov
jmp
lea
int
push
aam
or
xor
lret
out
aam
mov
je
je,pt
mov
cmp
add
jae
dec
jb
mov
and
xchg
out
inc
push
mov
xor
inc
fistps
sub
int
cmp
and
ja
gs
push
or
sbb
out
aam
xlat
xchg
inc
lcall
lcall
add
mov
mov
fcompl
xchg
gs
test
mov
mov
into
push
call
test
stc
xchg
mov
dec
mov
or
gs
inc
pushf
addr16
mov
mov
and
inc
out
pop
fimull
or
cwtl
call
xor
ret
aas
cmp
stc
in
sete
int3
pop
stos
xchg
adc
or
lea
mov
addr16
stos
hlt
push
sbb
cmp
fdivl
inc
jnp
cmp
inc
cmp
mov
mov
and
popa
dec
lret
rcrl
and
cli
data16
add
cmp
pushf
lcall
jmp
mov
je
fsubs
in
xchg
aas
repnz
and
movsb
cmp
xor
mov
pop
dec
xchg
scas
into
adc
std
pop
insb
outsb
and
outsl
mov
cmp
and
xor
add
cwtl
cs
rolb
xor
xorb
fisubl
mov
push
sbb
out
dec
dec
iretw
loop
cmc
pusha
sbb
adc
mov
fwait
dec
lret
jle
fmuls
push
cmpsb
movsb
fdivr
clc
lods
inc
inc
mov
stc
mov
add
sbb
cmpl
xlat
jl
dec
cwtl
stos
loope
cs
insl
mov
movsl
and
out
sbb
inc
mov
inc
lods
pushf
lods
and
call
xor
jb
push
lods
mov
testb
pop
inc
push
stc
mov
xor
ret
mull
sub
dec
xchg
je
add
mov
cmpb
bound
ret
testb
xor
mov
cmc
bound
cwtl
das
or
or
and
out
imul
push
cmpsl
mov
imul
in
xchg
mov
inc
mov
xor
mov
mov
lods
cltd
stc
sbb
xor
sbb
int
xor
jmp
sub
push
pop
fdiv
lods
hlt
inc
loope
cmp
dec
ret
xlat
adc
and
add
je
push
mov
mov
sti
mov
es
mov
jp
jns
and
xchg
add
cmp
mov
incb
jno
jns
xorl
mov
cmpsb
lods
jecxz
notl
xchg
inc
mov
stc
insl
dec
cmc
ret
iret
shl
loope
shlb
lds
stos
mov
xchg
jge
cmp
pop
sarl
aam
push
or
xor
enter
and
sub
mov
shlb
or
lds
or
jmp
repnz
pushf
mov
ret
mov
and
pop
scas
sbb
gs
or
jns
test
call
dec
pop
int3
cmp
xchg
movsb
push
ret
daa
mov
xor
mov
mov
xor
ret
jns
lods
push
mov
movsl
stc
shl
div
cmp
repnz
mov
inc
lods
hlt
fisubrl
cli
xlat
repnz
xchg
jns
mov
repz
movsb
icebp
jl
cmp
push
dec
outsl
pop
mov
mov
leave
ret
add
fs
sbb
pop
sbb
mov
pop
xchg
out
add
rcll
out
inc
aam
push
push
xor
dec
sahf
sbb
sub
xlat
lea
jae
aas
fbstp
es
push
mov
fldl
mov
ljmp
enter
inc
jne
xor
sar
mov
out
xor
and
add
popa
mov
insl
add
jbe
mov
push
bound
push
popf
inc
fs
jmp
inc
xchg
mov
mov
jle
movsl
xchg
lret
insl
dec
insb
sub
movsb
cltd
out
pop
dec
sub
jne
enter
mov
stos
add
fildl
pop
push
sbb
push
add
add
mov
andl
aad
pop
push
push
and
xor
repnz
out
inc
enter
or
scas
pop
ja
adc
push
mov
in
dec
lret
stos
xor
fidivrl
lret
mov
mov
test
push
jo
sbb
rolb
fwait
dec
test
push
ss
rcl
sbb
shl
pop
pop
sbb
mov
cmpsl
adc
cs
test
fldt
cmp
inc
pop
jns
loop
mov
mov
jge
mov
stc
jne
ljmp
mov
push
test
pop
mov
popl
pushf
cmc
xchg
mull
repz
push
cmpsb
cmp
stc
and
dec
mov
xor
adc
sbb
cmpsl
jb
sbb
mov
out
ret
pop
sbb
int3
inc
pop
mov
in
or
cmp
dec
cmc
shrb
cmp
xchg
aad
push
jae
add
negb
adc
inc
hlt
xchg
sub
xchg
dec
fadds
xchg
mov
mov
sbb
stc
ds
ljmp
dec
cmp
ljmp
ret
mov
push
or
imul
xchg
sbb
nop
mov
sahf
xlat
icebp
inc
inc
jge
add
cmp
push
int3
or
mov
shl
inc
cmp
enter
mov
pop
popl
mov
sbb
sar
push
xor
dec
call
rcrb
out
dec
adc
aaa
push
hlt
test
insl
notl
xor
sbb
sbb
cwtl
aas
xor
jl
xchg
ds
les
rcll
sbb
cs
sbb
inc
pop
dec
push
dec
pop
jae
ficompl
mov
out
ret
push
popa
or
scas
testb
incl
fnstcw
insb
xor
pop
adc
sbb
popa
push
pop
imul
xchg
jp
pop
sti
arpl
inc
pop
ror
inc
xor
out
xchg
dec
cwtl
xchg
pop
arpl
dec
cmp
cmc
inc
add
mov
cltd
push
xor
and
push
fs
add
push
xchg
cmp
lds
cmp
mov
pusha
mov
mov
and
les
inc
push
fs
rol
mov
hlt
lret
lods
scas
ficoml
mov
or
dec
lret
shr
or
jge
dec
mov
stos
cmp
ss
xchg
js
mov
fs
and
call
int
sbb
test
jb
sub
cmpsb
leave
push
or
frstor
add
leave
mov
jo
loope
icebp
out
adc
lret
jl
pop
push
push
cli
or
out
mov
fistpl
cmp
test
xor
sub
inc
in
xlat
sub
pusha
outsl
insb
outsl
lock
pop
sbb
bnd
es
xor
cmp
cmp
aas
cmp
lahf
push
inc
and
psrad
out
stc
lods
mov
xchg
cwtl
mov
cmpsl
ja
or
pop
cmp
mov
sub
movsb
push
adc
adc
xchg
mov
inc
decb
mov
dec
sbb
lret
aad
xor
xchg
xchg
movsw
dec
cmp
out
popf
push
pusha
loopne
xchg
sbb
fcmovnu
and
mov
and
xor
fstl
ja
sub
inc
inc
and
sub
xchg
push
sbb
mov
shlb
sti
scas
or
mov
mov
shl
mov
inc
mov
pop
cltd
xrelease
lea
push
mov
add
cmp
into
popa
or
ja
cmpsb
pop
imul
test
sub
mov
mov
icebp
inc
adc
or
loope
iret
fildl
cmp
xcrypt-cbc
cmpsl
adc
cmp
push
stos
and
rcrb
xor
daa
ficompl
dec
dec
addr16
mov
cmpsl
push
jnp
push
aas
push
dec
inc
xor
jnp
test
lock
fldenv
jnp
jnp
push
inc
enter
or
pop
int
popf
imul
add
mov
test
fcmovnu
dec
dec
fbstp
push
dec
rcrl
insl
mov
inc
icebp
arpl
aas
xor
xor
dec
cmp
into
insb
jecxz
and
mov
cmpsl
dec
mov
or
loopne
and
adcl
sub
js
out
inc
push
or
xor
enter
outsl
fiadds
dec
inc
sub
push
xchg
pop
and
pop
outsl
lahf
sti
sarb
int
test
in
xchg
inc
sbb
loop
scas
test
mov
mov
pop
pop
in
pusha
bound
sub
cmp
stos
dec
cmc
mov
inc
xor
add
lds
add
iret
xchg
dec
xor
cmc
aad
mov
mov
xor
push
gs
loopne
inc
or
xor
das
repz
std
lods
sbb
mov
popf
dec
add
sahf
dec
scas
add
loope
or
popf
cwtl
xchg
cmpb
inc
mov
pop
push
dec
subl
stos
dec
push
mov
call
aam
testl
add
xor
pop
outsb
push
jmp
dec
jnp
in
in
and
std
dec
fwait
lock
psllw
xchg
fnstenv
jnp
mov
or
fistl
cmp
addr16
push
dec
push
enter
pop
repz
sbb
mov
hlt
pop
push
data16
addr16
fdivl
pushf
ret
jne
lods
sub
jb
mov
xor
in
push
xor
push
int
into
outsb
les
pop
xor
xor
test
jmp
pop
loopnew
mov
pusha
inc
pop
bound
xor
mov
repz
mov
adc
cs
stc
test
leave
hlt
loopne
rcll
lea
shlb
ret
sub
xor
idivb
inc
sbb
mov
push
dec
or
popl
pop
cmp
nop
mov
push
divb
lea
xchg
cmpsb
or
xchg
push
out
jge
mov
lahf
in
test
out
stc
xchg
data16
mov
mov
jg
dec
cmpsb
and
or
mov
push
nop
mov
add
rcrl
and
mov
pop
push
cld
xor
jns
lahf
fildll
mov
lret
int
jmp
aas
iret
adc
ds
inc
outsl
xchg
clc
andl
rorl
dec
test
outsl
inc
push
mov
add
xor
mov
and
fcompl
in
push
leave
in
jl
xchg
fucompp
pop
cltd
mov
xchg
mov
push
xor
push
dec
test
jl
dec
cmpsb
sbb
out
push
sub
stc
rclb
int
addl
jb
lcall
mov
shrl
sub
mov
mov
popf
leave
int
push
adc
int3
insl
daa
pop
add
mov
pop
pop
mov
fwait
sub
enter
fwait
inc
loop
shll
sbb
lds
push
pusha
outsb
mov
dec
inc
xchg
lret
loope
inc
or
pop
sbb
mov
popa
jns
xchg
insb
fcmovnu
inc
mov
testl
jno
sbb
call
call
sub
cmp
push
call
sbb
jae
mov
jl
adc
or
je
mov
add
sub
adc
and
jmp
cmp
add
rcl
aam
gs
push
ja
or
dec
mov
fs
fwait
je
fistps
mov
sub
stc
sub
aam
pop
loope
les
sub
les
add
mov
int
aad
xchg
xchg
jmp
cli
sbb
sub
stos
push
sarb
les
cmpsl
sahf
inc
jecxz
ret
cli
jns
push
arpl
pop
inc
xchg
aad
stos
sub
inc
out
jmp
jp
aaa
sbb
hlt
in
jns
push
mov
cltd
shrl
enter
jmp
push
mov
mov
cmpsl
mov
xchg
pop
jle
mov
repz
mov
cltd
cmp
rolb
hlt
mov
push
cmp
add
pop
jmp
out
and
push
sahf
hlt
mov
inc
xchg
mov
and
dec
mov
sub
lcall
out
std
push
outsl
dec
or
jmp
and
pop
testl
hlt
aaa
iret
ds
mov
jmp
enter
rolb
xlat
jo
push
jno
imul
xchg
sub
jp
fs
mov
xchg
mov
pusha
mov
sbb
pop
mov
pushf
shlb
xchg
add
daa
sti
xor
mov
int3
mov
or
js
imul
sarl
call
call
rorb
fmull
mov
adc
or
loope
jo
push
xlat
sub
push
movsl
inc
pop
movsb
outsl
icebp
pop
in
lahf
aad
icebp
adc
and
pop
xchg
cmp
xchg
ficoms
pop
mov
pop
and
mov
pop
scas
daa
test
or
pop
add
lea
xor
jns
mov
shrb
ja
adcb
ljmp
sub
cmp
into
rclb
add
fsts
scas
add
in
repnz
cmp
sbbl
stos
sub
incl
push
lahf
test
into
xchg
xor
pop
dec
inc
or
jns
jb
cmp
push
lods
add
jnp
test
cmc
pop
es
push
jl
xor
mov
pusha
cmp
add
cmp
add
and
out
dec
das
push
daa
repnz
stc
popa
rorb
sub
jns
subl
sbbl
dec
in
mov
sbb
mov
cmp
mov
mov
pop
push
mov
and
es
orb
clc
lcall
add
cmpsb
xchg
lds
pop
cltd
inc
inc
outsl
and
enter
push
mov
push
jl
pusha
push
jecxz
dec
pushf
inc
bnd
imul
aad
insb
out
and
cmp
popf
cmp
scas
hlt
cmp
test
sti
push
out
add
xchg
mov
push
jo
xchg
fnstsw
push
lods
pop
cld
mov
cwtl
adc
gs
adc
jno
ljmp
lahf
dec
mov
rcr
pusha
js
scas
add
and
xor
adc
or
sbb
and
cmp
pop
sub
sub
inc
enter
cli
cmp
xchg
cltd
rcr
mov
lret
jnp
arpl
sti
stos
mov
out
test
shrb
mov
mov
cmp
ss
mov
loope
mov
pop
hlt
pop
push
lock
push
in
mov
sub
scas
push
mov
inc
cmc
push
inc
mov
push
out
lds
push
mov
dec
xchg
shl
dec
cmpb
adc
cmp
lahf
xchg
andl
je
insl
sbb
div
sbb
out
ja
push
sahf
pop
xchg
pop
add
mov
mov
stos
aam
cmpsl
push
in
pop
pop
loopne
jbe
mov
movb
xchg
mov
dec
out
sub
fcoml
mov
fdivrs
mov
push
xchg
cmp
cli
arpl
dec
in
stc
cmp
fistpll
xchg
rcrb
sti
popa
adc
fs
fidivs
mov
adc
jno
mov
mov
rcll
sbb
mov
test
jo
imul
and
jmp
xchg
or
adc
pop
xchg
or
push
jge
xor
mov
mov
in
mov
sbb
arpl
sahf
nop
iret
jne
std
and
lcall
xchg
fadds
enter
sti
loope
mov
push
add
xchg
pop
push
mov
add
and
in
mov
or
in
and
push
fs
sti
add
dec
out
imul
popa
mov
cwtl
mov
rcrb
ss
pop
xlat
inc
pop
in
scas
outsl
addr16
call
sub
sbb
adc
mov
idivl
lret
mov
or
mov
test
leave
clc
xchg
cmp
lahf
xchg
or
lret
movsb
vmovshdup
int
xor
xchg
lods
inc
bound
imul
lods
hlt
mov
in
movsl
addr16
out
mov
daa
and
push
jg
dec
dec
push
jp
enter
sub
xor
cmp
inc
jmp
or
xchg
sarb
bound
fistl
popa
jg
jle
ja
cmp
divl
mov
mov
push
cmp
pop
push
lock
mov
sub
outsl
stos
cmp
out
ret
sbbl
pop
mov
inc
aad
or
adc
push
outsb
int
dec
inc
sarb
inc
xchg
push
fcomip
cli
in
dec
mov
sub
mov
mov
and
jae
pop
lahf
push
es
cmp
loopne
outsb
jb
rolb
or
push
rcrb
sbb
mov
in
sbb
into
enter
test
stc
pop
mov
ss
call
adc
inc
push
pop
jl
mov
loopne
and
pop
loope
out
inc
sub
jle
and
adc
and
mov
mov
movb
mov
imul
and
imul
sub
int3
adcb
lcall
lds
dec
xor
scas
jecxz
push
add
aaa
clc
dec
jne
pop
jo
popa
push
push
sbb
ficoms
and
push
mov
cmpsb
xchg
add
dec
imul
push
loopne
pushf
cmp
in
xor
mov
aaa
push
dec
dec
lock
call
clc
cwtl
bnd
mov
insb
jecxz
pop
xor
out
push
jge
arpl
inc
push
push
out
jns
fistl
lock
add
sub
and
mov
xchg
pop
mov
pop
inc
testl
in
dec
add
mov
call
pop
add
rorl
push
or
scas
inc
popa
mov
cmpsl
mov
mov
scas
fwait
push
loop
int3
es
adc
insl
ljmp
cmp
fidivrl
aam
xchg
pop
cmp
sub
rorb
mov
pop
in
movsl
imul
repnz
adc
lret
push
test
sarb
jae
sbb
xor
mov
loop
mov
pop
mov
dec
out
jl
mov
mov
cmpsl
lcall
addb
les
dec
shl
fiadds
cwtl
ds
int3
or
sub
push
dec
aad
inc
dec
lret
pop
push
fwait
adc
inc
push
xlat
rcll
mov
sbb
jl
js
or
je
inc
mov
test
sbb
pop
jnp
or
jmp
sti
jmp
cmpsb
enter
pop
xor
movsb
mov
fdiv
mov
mov
mov
lahf
jmp
jmp
rcl
fldt
or
pusha
xor
lahf
adc
add
xchg
decl
inc
dec
xchg
mov
xchg
lahf
cs
jnp
movsl
es
imul
stos
adc
ret
sub
test
lods
jmp
ror
cmc
ret
outsl
leave
lods
frstor
ret
scas
loop,pt
jno
dec
fwait
icebp
push
mov
cwtl
xchg
adc
movsb
sbb
lret
fistps
push
shl
lds
xchg
xor
or
into
xchg
xacquire
dec
lret
sbb
insl
sbb
mov
mov
out
es
stos
cmp
call
or
fbld
test
push
sub
shrl
jns
push
stc
jle
imul
popa
sub
imul
mov
in
rolb
xchg
shl
mov
xchg
pop
sbb
jle
push
cmp
push
pop
repnz
test
cld
ret
jg
pop
iret
push
ss
stc
mov
jae
daa
cmp
lods
sbb
mov
mov
sahf
js
les
push
jp
aas
jno
das
pusha
inc
sbb
enter
mov
push
int3
sub
adc
mov
cwtl
arpl
lret
cld
dec
mov
scas
jge
sbb
sarl
rcrl
sub
loopne
int
inc
into
xor
data16
shr
jo
movsb
rorb
cmp
out
xchg
and
popa
pop
sub
addr16
adc
sbbb
inc
mov
pop
mov
aas
icebp
cltd
mov
loop
in
cltd
je
idiv
js
int
lods
mov
push
pop
jne
push
mov
and
adc
dec
gs
pop
in
mov
or
inc
jns
mov
xchg
mov
lcall
cli
divb
jo
sub
mov
shll
cld
jecxz
xchg
sub
cli
add
pop
imul
sub
leave
in
sbbb
adc
lock
inc
jmp
mov
dec
cltd
adc
out
pop
loop
dec
pop
dec
adc
test
mov
xchg
repz
inc
and
shll
lret
imul
aaa
fldcw
rolb
call
stos
dec
sub
imul
sti
adc
xchg
cmp
adcb
es
lcall
inc
outsb
xor
mov
xor
push
sub
idivb
mov
add
pop
cmc
lret
push
dec
xchg
push
rorl
cs
in
lret
rol
insl
lea
sub
cmp
mov
int
mov
cmp
push
jne
jne
repz
in
je
cmpsl
sarl
repz
fwait
mov
in
dec
push
sahf
loopne
xchg
mov
bound
lret
popf
lds
mov
mov
jo
jb
mov
xlat
sub
sub
pop
adc
jns
shl
je
adc
cmp
imul
xor
push
push
and
adc
adc
xor
stc
pop
ss
push
mov
and
cli
adc
shrl
sahf
clc
testl
ret
gs
xor
fcom
insb
xor
push
mov
cmc
or
jecxz
cltd
jmp
sbb
pop
mov
mov
insb
sbb
sahf
in
add
sbb
sahf
mov
push
jae
notb
jecxz
rcrl
mov
loop
scas
adc
xor
repnz
stc
xchg
add
dec
add
in
push
inc
mov
sub
mov
push
in
mov
mov
ja
lret
xlat
inc
pop
adc
inc
fadd
adc
mov
lods
insl
imulb
push
jno
xlat
mov
or
jp
aad
stc
ja
lods
jg
mov
stos
sahf
lods
lock
pop
je
xor
aas
jae
sub
inc
aad
xor
imulb
or
movsl
mov
jae
repz
sbb
dec
inc
sbb
in
add
inc
add
aam
xchg
add
pop
add
push
xchg
inc
pop
lea
lds
inc
shrb
xchg
sarl
fstps
cmp
sbb
mov
lcall
rcl
int3
sbb
xchg
loope
sbb
push
adc
fwait
mov
mov
dec
inc
iret
fldenv
push
mov
inc
xchg
cmp
neg
mov
pop
test
cmc
nop
les
push
pop
test
icebp
add
jns
pop
mov
sahf
stos
push
add
xor
mov
adc
lar
push
cltd
mov
icebp
stc
pop
add
mov
sbb
mov
in
call
add
cmp
or
fld
cmp
inc
cld
push
jp
repz
push
arpl
mov
mov
pop
fsubs
test
lock
ret
dec
xchg
pusha
push
cld
xor
adc
mov
sub
es
jl
add
adcl
pop
pop
jno
int
and
cwtd
adc
xor
je
es
sub
jno
mov
cli
jge
leave
int3
lods
arpl
call
cmp
pop
test
jo
xchg
lods
sti
add
out
inc
sbb
lods
sbb
mov
cmp
ljmp
dec
and
rclb
push
jmp
push
ss
sbb
mov
inc
inc
push
jbe
push
dec
xchg
movsb
out
mov
lret
mov
dec
fisubs
mov
sti
push
xchg
pop
aas
mov
mov
pop
sbb
imul
scas
and
sti
in
push
sbbl
push
mov
sti
lret
nop
aas
xchg
scas
lret
movsb
xor
xor
fs
lds
jmp
fwait
bound
aam
mull
negl
jns
outsb
call
insl
dec
mov
ljmp
clc
addr16
lret
and
xor
mov
repz
inc
in
pop
adc
out
dec
sbb
test
loop
xchg
sub
adc
mov
jp
repz
lcall
jl
push
les
xchg
push
out
jg
ror
insb
call
stos
jg
xchg
push
add
cli
mov
push
bound
mov
fsubr
lods
mov
pop
sub
push
jmp
cld
add
sub
fidivrl
mov
add
xor
scas
adc
add
aas
jnp
push
lahf
popf
addr16
mov
mov
lret
mov
in
xor
mov
mov
inc
cmp
push
sbb
pop
add
jo
push
mov
leave
imul
int3
fstps
rcrb
and
xor
adc
negl
fwait
sahf
and
adc
mov
lret
pop
inc
sub
push
xor
and
lcall
ret
push
jmp
pop
int3
and
iret
push
aas
xchg
xor
sbb
pop
cmpb
push
lods
and
dec
mov
jp
lock
jb
add
cmp
xchg
adc
jns
push
je
and
es
jb
stos
loop
cld
inc
adc
ret
cmp
mov
out
out
gs
imul
add
ret
mov
aad
repz
stc
dec
add
push
movb
cmp
cld
cld
jbe
pop
shll
ja
sub
rcrl
jmp
push
sbb
fcoms
pop
cmc
mov
loopne
fdivrs
jne
inc
in
cwtl
cmp
mov
pop
int
stos
xchg
dec
xor
insb
add
push
ja
push
lock
jge
insb
or
xchg
stos
xchg
loopne
movsb
fisubl
clc
pop
fwait
jns
sbb
dec
cmp
push
add
or
inc
cld
repnz
push
dec
pop
sbbl
add
sarl
into
cmp
rorb
dec
push
insl
fs
loop
xor
mov
in
inc
mov
aam
sahf
add
jne
incb
nop
mov
and
mov
fisubrl
cmp
xchg
loop
cmp
sub
movsb
jns
mov
mov
add
out
xchg
pop
jmp
sbbb
roll
cmc
mov
outsl
lods
lahf
addb
cmp
inc
in
inc
push
mov
scas
lods
adc
or
inc
movsb
jle
xchg
rorb
ljmp
xchg
imul
addl
lock
lock
mov
pop
leave
mov
xchg
lods
push
mov
pop
stc
stos
dec
clc
pop
aaa
push
pop
incb
daa
inc
sbb
xor
in
inc
or
mov
xchg
ja
sbb
nop
nop
and
xchg
xchg
jp
outsl
push
test
push
nop
lds
mov
rorl
inc
xchg
sti
add
cmp
jne
inc
scas
add
imul
outsl
dec
loope
push
repnz
rcrl
cmpsl
movsl
dec
aam
push
icebp
loop
add
push
nop
stos
sub
jns
jg
cmp
out
sbb
outsl
stos
mov
and
test
imul
inc
xchg
adc
jae
cmp
jle
or
mov
pop
movsb
in
dec
adc
iret
aam
mov
idiv
xlat
cld
xchg
jecxz
xchg
push
iret
data16
mov
mov
xchg
ja
sub
xchg
push
xchg
cmp
jmp
mov
add
pop
pop
sub
inc
add
cs
xorb
push
push
repnz
xchg
dec
gs
lods
mov
scas
icebp
popf
repz
sbb
lahf
enter
mov
and
mov
or
xchg
gs
aad
or
popf
xor
clc
xchg
jae
nop
dec
add
enter
subb
imul
cmp
jbe
imul
cs
inc
hlt
xchg
pop
enter
mov
jl
pop
mov
cmpb
push
repnz
jl
je
pop
jmp
jp
arpl
mov
dec
dec
sbb
mov
scas
add
xlat
push
inc
dec
imul
fs
adc
jno
sub
stc
add
dec
in
push
or
sub
lcall
jbe
push
mov
popf
inc
gs
movsl
jl
push
ja
and
mov
cmp
push
repnz
xchg
cmp
inc
sbb
push
imul
adc
jae
sub
sbb
xor
ret
in
bound
outsb
fs
cmpsl
cmp
mov
xor
insb
mov
into
test
inc
test
notl
xor
cmc
push
inc
fmull
pushf
jg
fisttps
aaa
scas
xor
dec
mov
add
inc
scas
insl
fsub
in
imul
jmp
repz
daa
inc
cmpsl
mov
adc
pop
mov
jp
mov
out
jl
inc
mov
sbb
adc
arpl
ret
daa
pop
and
dec
pop
xchg
das
fstl
insb
subl
aas
enter
rcrl
in
xor
and
loop
ret
jmp
shlb
add
mov
outsb
push
cs
aas
mov
and
or
test
adc
and
daa
sbb
dec
je
cmp
jo
fwait
pop
jmp
fwait
mov
aaa
push
cmc
out
stc
scas
int
orb
pop
mov
cwtl
fistpl
ret
inc
subl
fwait
jg
mov
jbe
adc
or
xchg
mov
mov
orl
out
sub
pop
fcoml
test
movsb
lret
ret
test
xchg
push
daa
fwait
cmp
push
xchg
insb
pushw
xor
jmp
setg
xor
fs
and
scas
aaa
add
add
or
call
imul
cmp
repz
andb
daa
and
cs
jo
xor
xor
jno
ja
dec
imull
es
ja
in
in
jmp
in
and
mov
mov
je
das
xchg
sbb
fcomps
nop
add
pushf
fiadds
push
pop
and
mov
fistpll
shll
mov
loop
mov
movsl
jg
push
xchg
aad
stc
pushfw
lcall
dec
daa
pop
cwtl
push
ret
in
or
ret
jmp
lcall
xor
xor
movsl
ja
jmp
stos
ret
cmp
adc
xchg
adc
cmp
lcall
mov
add
jp
sbb
xor
cld
sub
xor
ret
lock
inc
lret
or
int3
and
add
inc
repnz
icebp
out
cmc
testb
mov
ret
mov
fldl
or
pop
mov
xchg
mov
out
dec
lea
xchg
fadds
mov
mov
out
lret
testl
imul
int
mov
mov
add
ss
rcr
out
pop
adc
jno
push
jns
lret
bound
and
cmp
mov
xchg
jmp
xlat
stos
add
inc
mov
test
pop
mov
xchg
xor
hlt
sahf
jmp
jg
scas
and
mov
je
lret
in
add
sub
fiadds
xchg
mov
dec
mov
dec
aas
push
cli
jne
adc
aam
fdivrs
leave
add
sbb
adc
jns
xlat
lock
mov
mov
ficoml
inc
lods
jae
jle
cmpsl
pop
sub
test
push
cmpsl
jle
mov
cs
movsb
jl
out
pop
aam
xchg
cmp
outsb
int
add
jg
popa
bound
push
jns
inc
sub
jmp
scas
aad
ljmp
inc
shrl
xchg
mov
xor
shrb
push
jg
push
divb
mov
addr16
xchg
nop
mov
mov
jg
movsl
movsl
enter
push
xor
dec
in
lods
stc
imul
lret
push
pop
push
mov
cmpsl
mov
loop
add
adc
repnz
xor
orb
mov
cltd
pop
nop
test
nop
rol
cmp
mov
scas
jp
jns
in
out
js
jg
icebp
mull
push
add
push
push
pop
addb
aas
sub
test
push
movsb
negl
lret
mov
dec
pop
mov
cmp
adc
adc
xchg
sub
pop
pop
mov
sub
test
cmp
jmp
test
mov
cmp
icebp
or
test
sbb
fbld
mov
imul
or
add
cs
xor
mov
je
xchg
push
movsl
jns
in
mov
fwait
mov
xlat
cmp
or
lds
xchg
pop
je
in
lret
ficomps
cmp
leave
loop
imul
and
and
dec
nop
mov
pop
mov
xorl
jp
jae
dec
xchg
and
jbe
lfs
pop
xor
jge
pop
clc
inc
mov
dec
pushf
or
add
stos
pop
arpl
sub
pop
repnz
pop
adc
xor
add
mov
scas
push
and
icebp
orb
mov
mov
sbb
das
adc
repz
fstpt
pop
stos
movsl
push
mov
cli
insl
adc
lret
clc
jl
inc
test
ret
pop
jne
push
fisttpll
sti
stc
movsl
pushl
pop
shll
xor
cli
mov
sub
sbb
pop
loope
inc
inc
mov
cld
and
insl
stos
gs
cld
imul
sahf
cmc
loop
aam
cmp
mov
xor
sbb
pop
sbb
mov
and
test
lcall
mov
into
pop
fwait
mov
cmpsb
fidivs
popa
loope
pop
pop
xlat
mov
fs
test
jne
nop
loopne
xor
pushf
inc
test
je
pop
rolb
cmp
mov
test
dec
pop
cmp
xor
pusha
call
pop
sub
mov
incl
jb
fldcw
add
aaa
xchg
mov
stc
js
dec
repnz
dec
mov
jno
dec
jmp
enter
sahf
aas
jne
int
test
or
xchg
lods
call
adcb
repnz
xlat
inc
stos
mov
mov
jge
aad
inc
pop
in
fldl
nop
and
jne
push
jbe
jl
cmp
nop
gs
shl
cmpsl
or
lods
cmpsl
popa
sub
pop
and
outsb
sub
int
xor
popf
aas
test
jle
sbb
xlat
popf
aaa
jecxz
mov
les
into
imul
imul
in
adc
adc
movl
and
jnp
pop
frstor
xor
stc
lea
dec
jl
add
outsl
loop
out
xor
xorl
jp
mov
int
xlat
loopne
out
fstpl
loope
mov
fldt
mov
out
add
xchg
scas
jmp
xchg
xchg
out
adc
ret
fisubl
mov
xchg
or
lcall
add
pop
test
imull
test
into
bound
adc
negl
int3
daa
call
mov
adc
aas
pop
or
repz
jmp
sbb
push
mov
jge
stos
shll
xchg
enter
fisubl
push
repz
or
vpshaq
cmp
xor
mov
icebp
add
mov
movsb
enter
push
pop
or
cmp
push
insl
mov
jne
push
lcall
out
pop
scas
ljmp
repnz
fsubl
inc
movl
add
jae
in
xor
cmc
jge
or
movsl
jmp
dec
jnp
loopne
in
hlt
cmc
js
jne
jg
mov
ret
in
out
in
lods
in
sahf
push
pop
dec
out
stc
lds
rcl
int
mov
shrb
pop
aad
mov
push
mov
dec
fmuls
movsb
out
scas
pop
rcrl
pop
aas
inc
jnp
incl
pop
pop
mov
lods
sub
test
addb
adc
sub
xchg
xor
cmp
ror
push
xor
test
int
mov
bound
sahf
inc
insb
nop
call
cmp
fsubs
xchg
jl
or
js
jne
cmp
xor
mov
rcrb
lret
cmpsl
push
shl
xlat
and
test
xchg
stos
mov
repnz
push
pop
mov
mov
movsb
dec
fcompl
jae
mov
and
es
lods
pop
out
aad
test
dec
dec
jle
iret
insl
and
jns
jecxz
cltd
and
xor
jl
sub
push
mov
mov
dec
shll
mov
mov
nop
icebp
in
nop
dec
sbb
and
imul
int
push
dec
cwtl
aas
loope
ret
mov
xor
push
pop
add
fadds
lcall
jb
outsl
in
in
xor
clc
daa
stos
push
shrb
mov
std
test
movsb
je
lock
and
mov
mov
push
fsubrl
push
lods
enter
xchg
push
or
mov
daa
xchg
cltd
and
cmp
lahf
in
pop
push
mov
or
or
xor
outsb
push
mov
sub
icebp
lret
cwtl
mov
mov
leave
mov
inc
mov
out
loop
mov
xchg
adc
jle
dec
or
enter
popa
mov
xchg
cmpsb
mov
lods
ja
repz
movsl
xor
ja
fwait
out
push
pop
sub
or
ljmp
scas
popa
add
arpl
je
mov
dec
push
xchg
aaa
jbe
jbe
loope
notl
jmp
bswap
stos
aam
gs
jne
jnp
ret
dec
add
out
jns
pop
sub
add
lods
mov
cltd
jmp
mov
pushf
ds
and
mov
std
xor
cmpsl
stos
pop
xor
mov
push
mov
sbb
outsl
lea
andl
jg
pop
add
dec
sub
loope
inc
psllq
cltd
inc
cmp
roll
adc
add
sbb
stos
mov
cli
and
xchg
pop
or
out
sbb
les
inc
les
adc
xchg
mov
aad
push
xlat
hlt
loopne
pop
inc
imul
lds
ss
xor
pop
xchg
lds
imul
aaa
mov
xchg
sbb
push
pop
lds
mov
add
test
or
daa
mov
lret
push
sub
jno
addr16
sub
xchg
inc
pop
mov
fdivrs
loop
lock
scas
aas
enter
xchg
nop
xchg
or
aam
clc
jg
cmp
in
xchg
jb
mov
das
jp
xchg
int3
push
testb
add
orb
aam
mov
mov
mov
and
jle
add
mov
push
xchg
or
or
cli
cwtl
cmp
call
std
and
test
adc
cs
test
jnp
sbb
ja
roll
orl
mov
int3
and
or
xchg
mov
cmpsb
fsts
add
fs
lods
insb
xorl
popa
lods
popa
fimuls
push
push
jecxz
in
xor
imul
or
scas
dec
jne
mov
cvtdq2ps
push
xor
adc
mov
rcrb
cmp
gs
sub
data16
imul
pop
arpl
pop
mov
inc
sbb
push
push
jnp
adc
call
push
jnp
pop
and
out
bound
add
sbb
add
push
pop
xor
xchg
cmp
in
push
jecxz
mov
js
icebp
push
inc
dec
xor
push
and
cmp
jbe
sub
and
ja
xlat
cmp
pop
dec
xor
loope
mov
adc
jbe
or
pop
pop
xor
inc
in
daa
dec
enter
jp
jp
fildl
adc
xchg
int3
cld
js
popa
pusha
ljmp
and
push
xor
and
sbb
add
roll
call
pop
push
hlt
xor
pushf
in
and
fistps
cltd
push
int3
push
xchg
call
fisubrs
aad
and
lods
adc
je
fwait
jns
cmp
mov
mov
jns
push
jecxz
push
inc
add
fwait
pop
ficomps
sbb
daa
test
inc
stos
sbb
stos
dec
dec
mov
add
into
mov
leave
jg
out
daa
cmp
pop
push
fld
pop
shrl
ret
lcall
fadd
pop
out
push
jae
fs
loop
fmuls
push
stos
dec
mov
rcl
cmpsl
xchg
push
mov
mov
mov
aas
sahf
cmp
mov
mov
add
insb
push
jnp
xor
ja
xor
push
cmc
cmpsl
mov
pusha
sbb
xchg
jge
dec
leave
mov
ds
adc
lret
mov
mov
inc
add
repnz
mov
jnp
ss
data16
adc
pop
scas
data16
xchg
enter
sbb
popf
sbb
stos
inc
cmp
in
sbb
adcb
pop
inc
arpl
sbb
cmpsb
inc
popf
pop
inc
lea
adc
stos
or
jae
flds
inc
hlt
sahf
nop
and
push
test
cld
test
pop
sti
repz
arpl
pop
sbb
cwtl
dec
inc
dec
inc
inc
faddl
fidivrs
nop
jae
push
loopne
mov
sti
sbb
pop
mov
jns
push
call
and
jo
out
sub
in
inc
mov
adc
shlb
in
sbbl
lock
cmpsl
mov
cs
test
xchg
adc
inc
or
pushfw
testl
repnz
popf
and
mov
and
mov
xchg
in
lods
xchg
mov
xchg
std
sarb
dec
sbb
push
data16
dec
lcall
ret
inc
cmp
mov
cmc
cmp
clc
pop
jle
mov
sub
fbstp
dec
mov
data16
xlat
sbb
add
xor
daa
add
jo
call
sbb
sub
pop
leave
sti
add
fs
push
loopne
pop
dec
cmp
mov
aas
push
and
testb
mov
cmp
lret
xchg
sbbb
pop
sub
andl
mov
mov
xor
add
push
mov
xchg
imul
adc
and
mov
xchg
sbb
sahf
cwtl
sbb
mov
xor
addr16
push
and
add
das
xlat
jge
lds
add
enter
sbb
cld
jae
out
sahf
out
mov
mov
jns
sub
scas
jns
dec
cmpsl
pop
or
jmp
or
dec
sbb
adc
pop
dec
sbb
mov
ds
adc
pop
mov
cmp
aad
inc
lcall
xor
sub
lods
pop
jg
adcb
call
jne
dec
sbb
into
add
pop
cmp
pop
arpl
xchg
lahf
mov
dec
insb
lcall
mov
lods
insb
jmp
push
in
xor
jno
frstor
dec
mov
pop
imul
jnp
movsb
outsl
inc
fs
lahf
stos
daa
outsb
leave
cli
mov
lahf
out
insl
dec
subl
repnz
xchg
mov
outsb
or
cmpl
mov
sub
sbb
xor
loopne
mov
mov
outsl
aaa
jp
cmp
lcall
xchg
repz
add
xor
push
lahf
push
mov
jne
or
lcall
pushf
shrb
jno
add
mov
lds
sbb
add
sbb
test
pop
loope
cmp
push
sub
xchg
xchg
push
mov
adc
pop
dec
sub
xchg
push
addl
int3
and
mov
lret
pop
shll
push
repz
data16
fdivrs
into
cmp
push
xchg
cmp
dec
cld
ljmp
mov
dec
jb
or
push
xor
jg
test
add
xchg
call
rcl
daa
xor
clc
mov
inc
xchg
loope
test
pusha
push
aam
cwtl
push
jmp
aam
and
orb
inc
add
jnp
inc
rcl
adc
pop
loope
lock
movd
fldt
mov
jb
cltd
xor
or
fs
and
mov
sub
cmp
scas
push
inc
imul
mov
arpl
clc
sub
pop
movsl
adc
xor
pop
gs
push
out
lahf
and
fisubrl
in
xor
lods
xor
mov
mov
mov
push
pop
xor
dec
mov
and
mov
xchg
jl
in
ret
aas
jle
or
add
inc
mov
cmp
test
fucom
out
daa
inc
xchg
inc
stos
in
shll
aaa
mov
pop
gs
cli
mov
cs
das
repnz
outsb
fwait
xchg
subl
idivl
movsl
adc
or
jb
lahf
mov
cmc
fistpl
clc
bound
cmp
setnp
pop
mov
jmp
loop
or
sbb
jge
std
js
xlat
push
pop
sub
push
pusha
pop
push
into
mov
repz
mov
test
mov
fdivs
and
addb
xor
jp
ret
nop
and
mov
scas
in
mov
cmp
loopne
pop
negl
inc
jbe
pop
iret
mov
inc
lods
mov
cmp
mov
sbb
xor
aas
test
sub
fsubr
in
sbb
loop
das
ror
dec
cli
jns
dec
pop
nop
xchg
jle
xor
adc
in
fimuls
loopne
mov
loop
dec
loop
jnp
int3
cmpsb
repz
lea
sbb
inc
jno
rorb
mov
add
sbb
aam
stos
add
lods
add
mov
cmp
xchg
rorl
adcb
stc
jg
inc
sub
fcoms
pop
adc
dec
cltd
adc
aad
pop
inc
addr16
push
xchg
push
ljmp
cmpsb
imul
push
rcl
dec
sub
cs
push
sub
loop
push
icebp
insl
test
mov
mov
mov
mov
aad
pop
dec
nop
lahf
cmp
jg
pop
notl
popf
cmpsl
lret
cmp
loope
iret
movsb
test
pop
jb
add
add
andb
aaa
ret
hlt
mov
mov
daa
out
dec
outsl
xchg
addr16
xor
adc
addr16
pop
dec
cmpsl
jno
repz
fiadds
fucomi
cltd
insb
adc
or
dec
jae
dec
lea
sbb
test
dec
mov
xor
mov
or
mov
cmp
mov
into
mov
and
movsb
inc
inc
lahf
rol
in
or
push
dec
sub
xorl
pushf
pusha
lods
stc
fs
mov
push
jno
pop
xor
movsl
sub
stos
mov
and
mov
daa
jg
xchg
mov
jo
add
mov
int3
lret
imul
adc
addr16
fiaddl
daa
mov
or
aaa
lret
btrl
xor
pop
stos
xor
repz
fldl
fistps
mov
adc
adc
adc
pushf
ljmp
in
in
ficoms
fnsave
cmp
lret
push
mov
insl
aaa
inc
test
pop
in
jl
or
dec
sub
jmp
pop
adc
mov
jae
das
xchg
cmp
cmp
dec
pop
xchg
push
push
lods
mov
jl
or
es
shl
mov
dec
mov
mov
cmpsb
enter
insb
lret
aas
mov
jmp
gs
jmp
mov
js
add
adc
fiaddl
dec
aad
and
push
les
insb
sbb
cwtl
lods
dec
add
lcall
bnd
dec
call
inc
dec
test
pop
mov
shll
jo
mov
adc
in
inc
xor
cmp
and
dec
ss
pop
xchg
xchg
es
add
or
and
adc
push
rcrl
add
lahf
pop
mov
bound
out
dec
mov
je
movsb
pusha
xchg
xor
add
push
rcrl
dec
push
je
cs
ja
xchg
addr16
fstl
and
cmp
repnz
scas
adc
dec
inc
mov
fs
mov
jp
mov
loope
jl
and
mov
in
mov
add
fsubs
add
movsl
sub
mov
xchg
jbe
in
adc
mov
dec
jl
push
dec
in
paddsw
adc
shlb
mov
mov
fcoml
jne
jbe
dec
fcompl
and
cmpsl
arpl
cmp
push
jo
lcall
jne
shll
fimull
cmp
mov
adc
mov
outsl
sbb
shr
push
sahf
in
sub
adc
js
pop
rcrl
bound
xchg
scas
sub
es
decb
lock
and
test
sbb
aas
ret
aas
push
xor
sub
mov
mov
ss
push
test
bound
mov
inc
cmp
mov
mov
mov
dec
pop
mov
dec
jl
push
inc
shll
testl
rep
ds
add
or
jl
mov
and
add
pop
stc
and
lret
fsubl
mov
scas
xchg
cmpsb
into
mov
jmp
cmp
push
add
rorl
fidivl
add
jnp
int3
push
jae
mov
and
int
dec
sub
inc
rcrl
repz
loop
les
mov
mov
cmp
xor
jle
xor
movsl
insl
mov
sbb
rcll
add
aam
andb
int3
scas
cld
vphadddq
lret
pop
mov
push
ds
xchg
loopne
xchg
imul
xchg
mov
das
push
jp
fwait
cmp
push
ljmp
mov
aad
stc
mov
ret
cmc
in
outsb
sbb
mov
shlb
sub
xchg
shl
sub
xchg
iret
ret
adc
sbb
mov
push
rcrb
and
movsl
in
addb
mov
test
xchg
mov
jcxz
lcall
ret
mov
nop
push
outsl
incb
xchg
mov
add
jbe
imul
add
aaa
fnstenv
xor
loopne
push
fwait
jb
test
inc
xor
jbe
and
jo
cmp
dec
lret
mov
call
push
cmpsl
pop
fs
cmpsb
cmpb
jmp
push
dec
push
push
xchg
mov
dec
fdivrs
mov
iret
in
imul
in
pop
mov
cli
shl
cmp
adc
xchg
cmp
pop
and
xchg
xchg
mov
push
add
and
cmp
int
leave
stos
stos
gs
or
popf
xorl
mov
mov
test
mov
jle
jae
bound
pusha
fdivs
std
rclb
xor
das
jne
dec
lock
xor
loope
mov
jbe
lret
cmpsb
daa
iret
push
cmp
sahf
jl
dec
mov
addr16
loope
mov
nop
insl
xchg
ds
out
lods
movsb
mov
mov
movsl
lahf
dec
or
dec
mov
add
xchg
mov
add
data16
mov
adc
mov
mov
sti
loopne
push
popf
and
sbb
lods
mov
cmpsl
int3
and
xchg
pop
add
call
test
jmp
push
or
loope
fucomip
add
mov
dec
fstps
mov
cmp
mov
push
loop
lods
mov
adc
sub
sahf
int
test
mov
pop
repz
sub
popa
or
aam
pop
mov
xchg
scas
add
loope
dec
insb
in
frstor
jae
cmpsb
cmpsl
jae
push
push
icebp
dec
dec
popa
xchg
rol
inc
push
lahf
ds
cmp
xchg
out
pop
adc
adc
cmpsl
adc
rorl
pop
adc
adc
mov
push
insb
push
cmp
js
pop
mov
sub
sub
loop
jmp
loop
imul
jle
daa
or
cmp
arpl
xchg
add
loope
je
sarl
je
push
aaa
and
xor
stos
and
jmp
mov
dec
sahf
fisubrs
cmp
sahf
sub
pop
call
xchg
lret
scas
jmp
cmp
xor
int
cmc
sbb
sarl
adc
ret
mov
add
int
ja
mov
inc
sub
mov
loopne
divl
jmp
clc
inc
fnstcw
sub
cmp
std
int3
inc
mov
stos
lret
or
inc
fwait
sub
sub
xchg
xorb
icebp
fcompl
in
mov
xchg
loop
mov
ljmp
loope
dec
mov
jno
jmp
add
mov
std
xchg
mov
movsb
fucomi
adc
ja
and
push
or
mov
imul
adc
add
inc
jnp
stc
cmp
xorl
sarb
jge
dec
nop
mov
loopne
cltd
mov
push
addl
lock
imul
rcll
test
or
aaa
insb
xor
nop
sbb
loop
in
js
xor
add
mov
ret
pop
lret
sub
fdivrl
adc
jns
cmp
sahf
movsb
dec
scas
sub
sub
scas
adc
and
lea
in
mov
cwtl
outsl
roll
jno
out
dec
addr16
out
adc
xor
movsb
mov
stos
pop
cmp
xor
jl
jne
mov
notl
add
cld
mov
add
dec
hlt
inc
enter
adc
in
and
outsb
push
in
cmp
ret
xor
mov
mov
push
ret
jl
xchg
mov
cmpsb
enter
ficoml
cs
push
xlat
mov
aad
out
das
add
or
pop
mov
arpl
iret
mov
and
xor
movsb
mov
adcb
or
cmp
orl
loope
push
popf
cmp
sub
xor
xor
sbb
sbb
aas
pop
xchg
jp
cmp
or
repnz
je
sbb
dec
pop
in
pop
sbb
xchg
adc
pop
adc
and
xchg
jno
es
inc
test
sbb
nop
xlat
dec
addr16
jmp
adc
xor
repz
lret
and
fidivrs
call
push
inc
mov
jge
push
xlat
push
icebp
and
cmpsl
icebp
or
jae
push
movsb
movsl
das
lods
add
into
iret
cmp
dec
mov
adc
push
dec
xchg
and
dec
pop
outsl
cmp
or
push
mov
lret
scas
cwtl
jae
xchg
aad
test
add
aad
jns
inc
fisttps
add
nop
imulb
or
cmp
xchg
mov
fmull
adc
cwtl
sub
sbb
dec
in
mov
shrb
ljmp
pushf
mov
insl
adc
jp
popa
xor
or
mov
xor
rolb
xchg
mov
in
lock
adc
push
adcb
inc
roll
push
xchg
les
cmpsb
stc
sub
dec
xchg
hlt
adc
push
jne
out
gs
ret
aad
je
sub
dec
in
ret
lret
repz
les
adc
pusha
lcall
xchg
aas
jmp
js
cmpsl
repz
int
xchg
inc
xchg
inc
sub
pop
mov
jecxz
jbe
clc
sbb
mov
ljmp
ljmp
arpl
and
lock
out
inc
or
add
in
pop
mov
inc
dec
cmpsl
ja
daa
scas
adc
aad
cmc
jp
inc
adc
pop
stc
cmp
fnclex
pop
sub
ret
xor
es
cmp
inc
repz
or
aaa
jns
movsl
xchg
jbe
pop
shlb
stos
inc
jno
arpl
jg
mov
test
sbb
sarb
xchg
repz
insb
adc
cs
sar
inc
mov
js
add
jae
or
inc
lcall
xor
loope
sbbl
cmp
xchg
cmpsb
hlt
in
xor
test
mov
sbb
mov
test
imul
icebp
pop
ret
ss
out
push
mov
cmp
test
sub
pop
shrb
mov
in
mov
lock
mov
dec
jge
mov
out
and
push
push
add
jb
push
cmpsb
ja
ror
scas
mov
es
call
sbb
fcomps
xor
lret
outsb
adc
arpl
loope
adc
ja
cli
sbb
push
mov
mov
insb
mov
inc
pop
push
test
test
pushf
pushf
inc
loope
imul
sub
inc
aad
push
cli
daa
sub
xchg
aas
lret
std
dec
ja
mov
lret
pop
xor
adc
ja
inc
add
lock
and
push
rolb
push
add
fs
test
pop
insl
xchg
xor
push
jge
xorb
add
mov
out
loop
dec
xchg
inc
clc
mov
lcall
movsb
dec
xchg
enter
fsub
fisubl
es
mov
fcmovnu
inc
shrb
sarb
fisttpll
sahf
mov
xor
cmc
jecxz
call
sub
fs
and
pop
jb
in
in
addr16
lods
jae
mov
or
shl
jecxz
mov
out
call
jle
out
inc
fidivrl
dec
out
or
outsb
lcall
xchg
cmpl
loope
mov
pop
dec
icebp
xor
incl
cmp
inc
mov
mov
xchg
xchg
lock
popa
sbb
push
test
stc
bound
mov
movsb
dec
pop
leave
add
xor
mov
mov
and
jno
es
pop
data16
and
mov
movsl
push
dec
mov
and
push
jne
mov
add
daa
pop
push
lret
push
dec
jnp
cs
cmc
sbb
sahf
and
pop
sub
out
cltd
or
iret
add
insb
push
rolb
pop
jl
jae
sub
out
xor
mov
out
adc
bound
sti
out
mov
mov
fcoml
sbb
icebp
in
mov
xor
fsts
movsl
push
or
push
add
mov
idiv
shll
jnp
enter
stc
add
js
test
mov
sub
xchg
cmp
xchg
js
adc
mov
and
pop
cmp
sbb
int3
xlat
cmp
sarb
into
inc
mov
shr
mov
inc
test
xor
mov
aas
mov
stos
hlt
dec
mov
sub
out
sarl
and
and
test
shlb
insb
lods
nop
mov
es
cmovp
xchg
in
jae
movsl
push
int
mov
cli
jbe
inc
mov
stc
xor
xor
jae
fs
and
mov
lods
jae
shlb
xor
shll
int3
iret
mov
pusha
cmc
or
mov
test
mov
out
stc
fwait
movsb
xor
dec
jnp
out
jnp
mov
imul
dec
push
in
int3
and
xchg
lcall
test
rclb
sbb
or
loopne
clc
mov
roll
fists
js
aam
mov
mov
fdiv
sub
dec
in
sbb
and
outsl
les
pop
addr16
shlb
mov
js
push
jnp
pop
lret
std
pusha
ret
inc
fisubs
sahf
ss
pop
jl
out
add
or
mull
push
in
les
xor
and
leave
inc
sbb
adc
lea
jae
push
in
jle
rclb
mov
jmp
pop
outsl
out
fwait
inc
aad
aaa
xor
cmp
in
mov
xchg
mov
addr16
stos
mov
mov
in
mov
stos
sbb
sbb
rclb
push
jl
out
jge
mov
sub
test
mov
push
sarb
sbb
cmp
lods
lods
mov
sbb
dec
jge
hlt
int
ret
lcall
imul
imul
mov
cwtl
mov
sti
lods
stc
xor
and
es
xlat
cmp
adc
push
inc
shrb
loope
xor
mov
aaa
jmp
pop
xchg
jg
out
icebp
hlt
jl
cmpsb
dec
ljmp
sub
shlb
cmp
lret
xor
ss
mov
jl
mov
mov
les
test
lock
mov
clc
movsl
mov
sub
inc
mov
je
test
inc
dec
ja
cmp
xor
mov
movsl
lret
fisubrl
test
shlb
jo
and
xchg
cmp
jno
and
jecxz
es
xor
xchg
inc
aaa
loope
pop
bound
cmp
xchg
dec
inc
push
add
xor
pop
sub
sub
loop
sub
jmp
in
icebp
jle
in
jo
mov
aaa
popa
int
or
hlt
or
repnz
dec
mov
jle
aam
out
and
xor
push
data16
and
fidivrs
loope
xor
jnp
cmp
int3
sbb
pop
movsl
fsubr
cwtl
dec
xlat
negb
insb
sbb
mov
mov
test
push
cmpsl
push
mov
imul
pushf
lods
add
cltd
xchg
xor
jl
xlat
fcoml
adc
dec
mov
insb
loope
fnstsw
jp
sub
and
adc
inc
mov
imul
nop
ja
adc
xor
int3
into
xor
cmp
or
xchg
stos
loope
xor
adc
dec
mov
aaa
pop
fs
jmp
mov
pop
xor
lods
or
and
dec
sarl
xor
imul
pop
dec
cmp
filds
mov
fstpt
add
sub
leave
lret
out
jnp
cmp
ret
add
push
mov
insb
in
sub
push
imull
scas
jmp
cmp
sbb
sub
or
mov
inc
jp
addl
sub
xchg
xchg
stos
aas
mov
adc
add
fucom
mov
test
xchg
pop
sub
dec
lahf
pop
mov
sbbb
mov
push
shll
pop
xor
es
mov
dec
dec
cmp
or
jo
push
push
dec
push
test
sbb
divl
xor
pop
mov
dec
jle
jle
fwait
push
add
mov
das
fldenv
test
jo
in
and
insb
les
dec
and
mov
inc
mov
test
mov
int
andb
in
mov
inc
addr16
je
add
jae
adcb
in
ds
jl
scas
cmp
punpckldq
pop
clc
xor
cld
cmp
ds
cmp
in
push
fsub
xchg
lods
outsl
int3
test
inc
mov
imul
cmp
pusha
jmp
mov
fcompl
pop
cmpsl
rclb
jae
mov
xchg
and
mov
or
loopne
shlb
mov
sub
imul
sahf
fxtract
dec
mov
es
add
cld
rorb
popa
and
inc
jge
or
pop
jns
insl
jnp
out
mov
or
in
mov
mov
xchg
sub
xchg
dec
sub
jns
add
ljmp
int3
dec
decb
fiadds
pop
cmp
out
imul
jg
dec
ss
pop
pop
ret
aaa
mov
cmp
dec
add
and
cli
push
sbb
mov
call
adcl
dec
mov
shl
xor
pop
imul
out
sbb
loopne
ffreep
es
push
jl
int3
lcall
sub
jne
adc
es
fwait
pop
subb
jnp
xchg
iret
ja
testl
mov
pop
push
xor
cs
aad
dec
lcall
pusha
leave
inc
mov
in
add
test
jecxz
aas
movb
fadd
es
dec
pusha
dec
movsl
bound
test
jno
int3
gs
xor
cmpsl
je
fcmovb
xor
pop
lret
add
loopne
ljmp
push
cmpsb
inc
jne
mov
jge
xor
xor
fstpl
pop
mov
push
jp
daa
mov
xchg
pop
mov
das
xchg
cwtl
dec
sub
frstor
les
movsb
popl
insl
adc
enter
bound
sub
or
iret
push
push
mov
out
flds
add
and
imul
push
mov
inc
mov
inc
xor
les
clc
arpl
imul
dec
in
cmpsb
ja
in
lods
lahf
leave
and
rcl
sarb
mov
push
push
sbb
lret
push
inc
xor
xchg
xchg
and
pop
movsl
push
xchg
inc
xchg
jmp
inc
fwait
test
push
ja
add
jae
addb
hlt
lahf
add
dec
inc
xor
into
fwait
lea
mov
push
enterw
push
insl
xchg
push
icebp
movsl
xor
mov
scas
dec
dec
mov
ret
fistps
jle
sub
mov
aad
repnz
mov
and
xchg
xchg
rcr
fldl
test
leave
loope
ljmp
fidivs
nop
xor
adcb
popa
into
std
outsb
inc
and
nop
fsubrp
pop
cmp
inc
push
out
aad
cmp
sbb
xchg
ret
inc
pop
repz
xlat
inc
addl
xchg
xchg
cli
mov
fists
xlat
inc
dec
jle
adc
in
adc
pop
adc
xchg
in
mov
xchg
push
pop
fs
mov
sbb
cmp
ds
pop
add
sub
cltd
push
sahf
mov
scas
xchg
lret
xor
fwait
test
xor
insl
push
pushf
aam
mov
out
cmp
test
gs
test
push
ficoml
lea
ret
add
cmp
icebp
cmp
xchg
push
lods
insb
jnp
inc
or
rclb
push
pop
xlat
mov
mov
in
daa
aaa
test
ja
leave
xchg
mov
lock
push
push
mov
pop
xlat
jecxz
cmp
je
std
les
repnz
pusha
push
xor
cmp
jae
sbb
lret
push
pop
pop
add
sbb
lods
cli
rorb
xorl
fnstenv
jnp
pop
sbb
clc
jbe
addr16
faddl
inc
jle
jmp
push
les
aaa
dec
jno
test
repnz
jmp
std
shrl
xchg
or
lods
shlb
or
mov
pushw
arpl
inc
in
imul
push
not
outsb
and
xchg
push
mov
leave
jl
jg
ds
stos
cmc
inc
ds
adc
inc
mov
mov
sbb
adc
js
mov
dec
jo
pop
cs
cmc
mov
fsubrp
mov
push
lock
into
insl
sub
pop
jns
mov
fstp
sub
mov
icebp
int3
rcrb
ss
pushw
out
cltd
sub
xchg
popf
and
mov
sahf
cmp
mov
in
jp
inc
leave
imul
xor
fnstcw
repnz
sti
std
adc
mov
pop
addr16
cmp
test
adc
call
out
mov
and
imul
mov
cli
shl
lock
and
inc
mov
adc
fcomps
lods
popa
mov
pop
mov
mov
into
adc
bound
test
inc
adc
shrb
pop
sub
addb
xor
clc
repz
xchg
movsb
mov
pop
out
cmp
in
mov
xchg
jecxz
sbb
cmpsl
movb
aas
lsl
scas
and
push
mov
jnp
fwait
cmp
pop
pusha
fisubl
lods
ja
adc
shlb
sub
mov
xlat
mov
pushl
repnz
test
dec
mov
in
lds
pushl
call
hlt
inc
and
popf
lods
scas
loop
pusha
cmpsb
jmp
push
add
jo
xor
shrb
js
xchg
push
out
jo
mov
rclb
mov
iret
popa
xor
test
addr16
sbb
push
sbb
into
push
sarb
dec
adc
mov
sub
pop
push
jp
jne
lods
into
cmp
inc
cmpl
pushf
sub
cmp
dec
popf
nop
rorl
out
shll
add
in
mov
pusha
push
mov
add
jb
call
hlt
idivb
imul
or
je
sbb
ret
jo
movsb
loop
jb
sbbl
pop
and
rolb
ja
push
inc
cmp
scas
icebp
mov
xchg
daa
mov
inc
out
mov
mov
inc
pusha
jecxz,pn
mov
adc
enter
sbb
bound
pop
fwait
and
and
aam
fcompl
jge
and
fs
add
pushf
jo
jmp
adc
das
scas
leave
fnstenv
gs
cmp
mov
pop
popf
cmp
sarb
lea
mov
dec
and
sub
add
int
aaa
and
or
pushfw
xor
test
jg
stos
jnp
sti
xchg
or
shrb
inc
cwtl
adc
ss
mov
decb
mov
fldt
push
imull
int3
movsb
scas
push
sub
lcall
in
test
mov
push
inc
inc
mov
mov
dec
and
test
ss
cmp
pop
cmc
inc
inc
test
fistl
xchg
xor
dec
cmc
sub
movsl
or
adc
inc
leave
xchg
js
dec
sbb
out
imul
ljmp
scas
jnp
cmp
sub
mov
inc
adc
mov
rorl
sahf
sahf
daa
add
repnz
mov
xchg
jno
pop
in
cmpl
pop
inc
icebp
mov
std
popf
fildll
ljmp
lcall
sub
loop
ss
xchg
lret
insl
faddp
jo
or
sbb
jns
xchg
cltd
add
imul
cmp
mov
mov
inc
scas
push
iret
mov
movsl
and
dec
fwait
shrl
cli
mov
repnz
aaa
adc
bound
cs
sahf
push
mov
aas
add
imul
push
nop
cmc
mov
sbb
iret
test
sub
daa
jnp
or
mov
adc
out
call
insl
xor
jle
jo
out
pop
and
mov
inc
fwait
adc
jae
stc
sbb
shlb
lahf
stos
es
jmp
in
nop
movsb
out
into
inc
xor
mov
fmuls
movsl
pop
ret
outsb
es
loope
testb
push
rcrb
lret
mov
fidivs
pop
and
ljmp
mov
enter
mov
rcll
cmp
or
in
in
dec
into
pop
lret
or
ds
sub
adc
cmp
jmp
imul
xorl
push
pop
adc
ja
lods
sub
cmp
xchg
fsub
lea
ret
mov
jl
push
jl
jno
scas
popf
ja
adc
repnz
inc
insl
mov
pop
dec
mov
fdivs
testl
imul
ror
and
pop
out
mov
push
lea
imul
jns
mov
mov
pop
outsb
dec
movsl
and
jge
pushf
mov
stc
mov
hlt
mov
lahf
mov
jo
in
rcrb
cmp
call
stos
push
lods
shl
test
mov
cs
inc
and
inc
inc
mov
mov
shrl
push
push
xor
inc
dec
hlt
add
fwait
pop
lret
xchg
pop
mov
repz
xchg
jl
add
in
mov
add
stc
adc
add
jbe
and
cmp
js
or
cmp
mov
or
notl
int
push
clc
pop
or
push
pop
xlat
daa
dec
sub
add
mov
je
add
fidivrs
jg
xchg
xchg
push
outsb
aam
mov
pcmpeqw
fidivrl
adc
in
inc
xchg
xchg
mov
cmp
ret
nop
xorb
cli
cmp
lds
adc
fmul
jge
xchg
cmp
jns
xor
inc
inc
sbb
xchg
adc
vshufps
xchg
xor
mov
add
popf
imul
and
lds
and
testl
mov
pop
adc
pop
stos
pop
mov
cld
cmp
cmp
adc
xor
mov
fdivl
ds
call
popa
sbb
add
push
mov
and
or
mov
jae
mov
insb
jae
mov
cld
jae
jge
or
jbe
jecxz
scas
add
fwait
cmpb
les
inc
xchg
std
in
mov
mov
xchg
jle
inc
push
orl
jo
icebp
xchg
and
mov
mov
out
sbb
shlb
xchg
lcall
xchg
sbb
insb
sub
and
into
cmovno
jge
lcall
or
imul
cmp
fs
mov
hlt
jmp
cli
cmp
push
jge
sub
pop
das
sub
adc
sbb
and
stc
jne
shlb
repnz
push
lock
jne
iret
sub
sbb
mov
jmp
divw
or
ds
or
or
cld
enter
out
fsts
push
inc
jmp
daa
pop
stc
adc
in
outsb
inc
sti
out
or
dec
sbb
pop
aaa
mov
lahf
mov
mov
lock
cmp
xlat
sub
dec
pop
adc
rorb
lret
lret
loope
jp
pop
fsubs
loopne
stos
fildl
sbb
test
scas
xor
mov
shlb
jb
mov
pcmpeqb
xor
es
shrl
aad
sbbl
xor
fcomps
xor
jb
fnstcw
xchg
mov
subb
mov
mov
mov
stos
js
lock
mov
sub
or
xor
or
push
xchg
lods
ja
rclb
jb
jmp
pop
push
into
in
add
sub
inc
pop
mov
mov
in
out
lods
mov
pop
push
popa
call
inc
in
movsl
cmp
dec
scas
dec
cmp
inc
fcos
pop
jae
jp
fildl
sub
adc
rcrb
mov
movsl
mov
xchg
adc
mov
pushf
push
test
and
pop
mov
inc
mov
add
fidivs
sub
sub
adc
popf
movsb
gs
repz
cs
cmp
out
push
lret
aad
mov
lret
adc
sahf
or
pop
xchg
pop
cltd
adc
shr
nop
pop
inc
ret
and
pop
add
insl
push
mov
out
pop
ficoms
dec
pop
push
out
push
pop
fsubs
fcoml
push
fcoms
push
das
cmc
in
pop
jle
jbe
pop
push
test
dec
jo,pn
shll
shrb
xchg
pop
orl
xor
xchg
dec
xor
jno
jg
xchg
insb
stos
or
loopne
cld
jns
into
adc
xor
dec
dec
mov
das
pop
js
jecxz
out
inc
jne
bound
test
frstor
iret
push
or
cmp
mov
mov
xor
cmp
or
dec
fdivrl
jnp
add
sarl
adc
andb
test
in
adcl
inc
xchg
push
or
sbbl
test
and
jno
xchg
jbe
sub
sbb
popf
xor
xor
in
ds
xor
mov
pop
push
adc
mov
xor
ja
adc
jle
fwait
arpl
aam
lods
xchg
xor
imul
sub
cld
cwtl
cld
les
lea
and
add
movsb
jno
inc
sbb
out
cmp
and
ja
add
inc
inc
cmpl
push
mov
pop
xlat
and
stc
movsl
sub
fabs
push
xchg
ljmp
adc
ss
sub
fisttpl
push
imul
loope
gs
mov
pushl
mov
dec
cltd
cmp
push
sub
adc
xchg
mov
sbb
lods
icebp
mov
mov
inc
push
jae
push
rcl
fmul
insb
jle
mov
das
fmulp
test
aam
pop
sub
stc
insb
jb
and
pusha
ret
pop
adc
push
push
movsl
mov
xchg
xchg
jl
jbe
jmp
dec
mov
loop
sub
mov
test
mov
sub
insb
daa
clc
pop
mov
adc
push
mov
insb
pop
movsb
call
inc
ja
aas
lret
loope
mov
enter
mov
enter
mov
pop
mov
cwtl
mov
fdiv
shrl
add
xor
dec
push
jg
clc
pushl
sbbl
cs
cmp
mov
xor
and
mov
pop
adc
jge
ds
ss
push
test
mov
mov
fistpll
xchg
insl
sub
inc
mov
add
inc
adc
fwait
xor
rcrl
jl
inc
and
inc
xlat
mov
inc
and
push
cmpsb
outsb
into
add
stos
jge
aam
ja
into
es
mov
into
wrmsr
pop
push
mov
jns
std
lods
repz
out
inc
test
xchg
mov
in
mov
add
cwtl
or
daa
int
mov
xor
add
push
shrb
push
pop
add
jmp
mov
push
mov
jne
sahf
jnp
loop
sub
or
rcrb
sbb
cmp
sbb
xchg
xor
addr16
adc
push
dec
push
imull
stos
lret
shrl
sub
testb
jge
lods
mov
stc
int3
into
bswap
dec
jle
pushf
cmp
scas
mov
dec
sbb
xchg
cmp
scas
loopne
add
in
movd
add
lds
mov
push
dec
xlat
aad
xor
dec
push
iret
adc
dec
pop
xchg
in
xor
fisttpl
jge
jecxz
sbb
mov
jnp
and
inc
aaa
fisubs
out
sub
adc
mov
xchg
mov
xor
mov
jecxz
lcall
dec
icebp
mov
fs
iret
in
clc
in
ds
dec
inc
push
pop
cmc
mov
sbbb
loopne
dec
push
cmpsl
pop
mov
mov
mov
push
out
sbb
inc
es
ftst
lods
jg
mov
js
cmp
sbb
lods
lcall
stos
rorb
mov
out
push
push
inc
cmp
xor
mov
xchg
aam
cmp
rcr
mov
mov
scas
xor
cmc
cld
mov
aam
jno
in
xchg
popa
into
insl
mov
movsl
ficomps
and
xchg
pop
mov
sub
loope
movsb
fnstenv
in
test
insb
push
add
mov
xchg
mov
outsl
ljmp
push
mov
sbb
sahf
mov
push
in
xor
add
test
sub
pop
inc
fmull
movsl
idiv
gs
repnz
lods
add
je
adc
add
rorb
mov
test
sbb
out
addl
xor
rcrl
sbbb
jb
neg
jl
insb
out
sbb
push
inc
pop
xchg
mov
jno
mov
xor
xor
dec
mov
xor
fwait
rorb
mov
in
push
sbb
and
jno
sub
hlt
pmuludq
dec
lcall
ret
stos
lods
sbb
jmp
sbb
aaa
xchg
popf
insb
sahf
lcall
out
mov
xchg
xchg
notl
or
xor
sub
add
adc
cli
js
jb
xchg
lock
mov
jmp
cmp
lcall
dec
imul
mov
pop
and
add
aad
sub
jb
test
cmpsl
imul
and
or
xchg
sbb
cmc
in
in
cs
cmp
pop
insl
test
mov
mov
mov
add
xchg
jae
out
enter
mov
mov
out
je
daa
cmpsb
push
or
rol
mov
push
mov
hlt
jp
xor
dec
adc
sub
fs
jne
fists
cld
mov
cmp
repz
jb
or
inc
sub
jb
scas
pushf
or
enter
gs
xorb
rcl
in
mov
pushf
je
jp
xchg
mov
jo
push
and
addb
loop
adc
fsubrl
add
test
dec
dec
sarl
dec
mov
add
add
stos
xor
cld
shll
pop
dec
cli
xor
and
mov
aaa
cmp
push
lcall
arpl
pop
lods
setae
or
mov
test
jb
lea
or
and
sahf
dec
repnz
lahf
jae
das
pop
xlat
cmpsl
cmp
hlt
add
mov
mov
mov
lret
jbe
lods
and
cmp
dec
xor
mov
inc
aam
fstpt
test
adc
sahf
negb
adc
push
pop
test
stos
xor
nop
inc
mov
pop
sarb
or
gs
xchg
xchg
mov
hlt
push
mov
cmc
add
fiadds
mov
arpl
adc
xlat
mov
add
xchg
push
mov
sbb
mull
dec
sahf
lods
mov
imul
loop
xor
mov
ljmp
mov
inc
outsl
mov
or
mov
leave
pop
arpl
push
sub
nop
mov
jb
pusha
dec
or
sbb
xchg
sub
adc
push
push
sub
nop
inc
jp
xor
out
xchg
and
es
or
fs
fwait
in
in
outsl
sub
mov
pop
xor
mov
mov
xor
xchg
iret
xor
arpl
push
cmp
xlat
es
cmpb
mov
xchg
mov
idivb
mov
jns
push
aam
inc
push
mov
adc
sub
dec
out
jle
push
inc
rcrl
enter
xor
aam
movsl
iret
ds
add
in
inc
push
sub
loopne
insl
js
retw
sbb
fwait
push
je
repnz
insb
movsb
mov
lea
or
mov
insb
lcall
cld
in
aaa
xchg
sahf
jns
push
add
pop
lods
push
stos
jns
pop
push
or
in
lret
sar
stc
addr16
mov
push
mov
jb
cmp
sbb
xlat
daa
jp
xchg
nop
adc
rclb
nop
xor
cmp
push
je
movsb
jecxz
out
inc
ret
popa
inc
push
lcall
jnp
push
mov
cmp
mov
lret
bndstx
stos
xchg
aaa
jns
pop
lretw
sub
push
int3
push
js
xlat
pop
lds
test
pop
out
mov
dec
mov
insb
inc
mov
mov
out
dec
adc
adc
xchg
mov
vmwrite
xchg
jae
mov
mul
cmpsl
sarl
mov
lcall
sub
push
mov
mov
push
repnz
dec
pusha
mov
mov
push
in
inc
dec
frstor
sahf
mov
and
fcmovb
push
mov
sbb
notl
and
jae
lcall
cli
push
in
cmp
mov
clc
lret
sub
std
pop
push
scas
movsl
mov
sahf
jg
fdivl
xor
inc
je
and
dec
ret
jne
js
mov
fsub
pop
lods
mov
pop
mov
mov
pushf
cmpsb
into
mov
or
loope
and
rcl
ja
addr16
cld
or
or
jns
pop
roll
and
xor
xor
and
fdivp
mov
std
out
stos
and
sahf
test
jbe
mov
sub
rorl
adc
fcoms
repnz
scas
jecxz
sub
xor
and
mov
mov
idivb
mov
bound
dec
sbb
lret
mov
inc
aam
xchg
call
addr16
sub
push
std
rcll
jae
dec
int3
xchg
cmp
or
sbb
jbe
xor
cld
mov
mov
sbb
imul
jo
mov
pop
es
mov
mov
xor
sub
fcoms
or
std
xor
cld
movsl
pop
imul
lcall
cmpsb
jle
roll
outsb
out
add
and
push
ja
pop
js
fmul
call
repz
mov
mov
out
test
orl
shl
xchg
decb
vmovaps
inc
pop
stc
jnp
arpl
shrb
dec
cs
xlat
mov
lea
popf
out
mov
xlat
mov
push
pop
movsb
cmp
idivb
test
add
rorl
mov
xor
arpl
cmp
pop
push
es
scas
adc
fistps
insb
dec
mov
mov
sbb
pop
jge
cmp
xlat
int
in
push
adc
ljmp
dec
dec
pop
push
jae
mov
cmp
dec
js
mov
mov
push
or
test
jns
mov
push
jp
mov
cld
js
scas
pop
cmp
aad
adc
xchg
ret
push
in
dec
mov
popa
mov
cmp
push
inc
mov
xchg
addr16
jl
fisttps
sti
inc
push
sbb
loop
fwait
sahf
pop
or
test
inc
add
cmp
mov
call
popa
and
dec
push
repnz
fdivrs
mov
popf
in
adc
and
inc
and
inc
shl
fcmovbe
cmp
pop
dec
fldl
cwtl
loop
pop
mov
jl
mov
pop
lahf
mov
cli
call
loope
pop
mov
add
jno
ljmp
add
ss
and
pop
sti
jl
imul
loopne
inc
xor
movsl
lahf
out
stos
sbb
cmp
mov
xchg
push
jnp
push
data16
ss
pusha
pushf
call
or
sub
dec
ret
out
push
in
pusha
mov
xorl
je
lea
xor
adc
mov
repz
fdivs
sbb
int
push
dec
aas
mov
pop
int
fsubp
xchg
ljmp
push
in
scas
inc
test
add
loop
push
xor
lock
int3
movhps
jge
or
out
jge
jno
ret
inc
in
jae
push
sbb
fwait
inc
sub
mulb
push
inc
mov
mov
orb
fcomps
xchg
aas
push
add
nop
stos
sbb
andl
out
adc
sbb
pop
push
das
fists
mov
dec
es
shlb
and
sbb
add
lahf
mov
mov
cs
or
and
iret
nop
hlt
mov
mov
out
les
sbb
xor
das
push
sbb
xlat
hlt
stos
dec
inc
dec
xchg
mov
jo
push
je
mov
jmp
ss
mov
icebp
cltd
mov
xor
adc
and
jns
enter
mov
pop
into
dec
or
pushf
lret
jb
adc
lret
dec
add
negl
jns
xor
enter
mov
fdivs
pop
lock
cli
add
sub
leave
fldl
mov
adc
ljmp
je
push
adc
cmp
js
sub
add
sbbl
push
dec
mov
test
out
lahf
movsl
jmp
outsb
rorl
pop
orb
test
mov
fwait
xor
push
jno
jbe
test
xchg
mov
std
enter
dec
fisubrs
fsubp
test
adc
adc
mov
scas
inc
jnp
cmc
shlb
ret
cmp
push
in
push
jmp
jecxz
cmp
and
int
aam
mov
or
int
pushf
jp
xor
dec
fcom
out
aaa
test
dec
add
mov
cmp
shlb
push
testl
mov
sbb
sub
aaa
movsl
push
pop
negl
int3
jmp
sbb
mov
adc
and
mov
cmpsw
mov
xor
mov
push
pop
pop
mov
int3
loope
push
adc
mov
imul
adc
mov
jp
mov
lock
mov
lods
mov
test
xor
mov
sbb
stc
push
jne
lret
bound
mov
xchg
out
into
dec
add
xor
scas
in
clc
xor
mov
outsb
add
addr16
popf
mov
jmp
lcall
cltd
ljmp
mov
push
jg
das
add
adc
inc
pushf
mov
mov
add
stos
ret
mov
dec
xchg
mov
pop
mov
lock
jns
dec
push
adc
xor
repnz
movsl
in
push
int3
push
aad
aam
iret
in
dec
js
hlt
out
sbb
mov
das
adc
sti
mov
das
je
sub
in
scas
and
lds
ret
mov
push
testl
shll
out
dec
mov
sbb
cvtps2pd
sti
sub
negb
call
xlat
gs
testl
daa
in
xchg
adc
aad
add
push
xchg
ds
sub
je
mov
cs
popf
xor
movsl
adc
test
imul
aaa
or
sub
inc
and
fwait
mov
in
xchg
inc
lret
fs
in
sbb
out
mov
push
std
stos
cltd
mov
jnp
mov
adc
push
int3
aaa
imul
xor
push
mov
addb
je
pop
mov
rolb
push
dec
pop
jnp
mov
cmp
clc
add
mov
mov
cmp
in
dec
ds
fwait
jmp
adcb
mov
xchg
outsb
out
fcoms
add
inc
jl
in
adc
loope
pushf
outsl
pusha
push
sbb
ja
inc
andb
in
dec
js
outsb
xor
add
push
sub
addr16
lea
mov
je
add
in
lods
or
sub
enter
pop
lcall
ja
addb
iret
jg
add
repnz
call
lock
mov
loopne
inc
mov
out
pop
insb
mov
test
sub
jp
test
lods
sahf
rcl
xchg
jno
in
es
lds
sbbl
add
sbb
rorb
xchg
mov
xor
in
and
mov
push
repnz
fiadds
cs
add
mov
loopne
fisttpll
gs
test
jns
add
insb
push
jne
sub
sahf
mov
xchg
mov
jge
dec
mov
xchg
cmp
push
xor
jne
ljmp
rcll
packssdw
cmp
add
lods
in
pop
repnz
sbb
out
sbb
cmp
cmp
stc
enter
xchg
stc
movsb
mov
cmp
push
add
mov
xchg
les
pop
add
aaa
add
xor
int
add
xchg
in
loopne
push
pusha
add
cmpsl
inc
jl
mov
adc
lods
or
mov
jbe
jp
lahf
mov
dec
xor
and
mov
or
xchg
lret
rol
pop
dec
outsb
xchg
jae
ret
mov
idivl
mov
xor
sti
or
pop
mov
lods
add
popf
icebp
add
add
dec
gs
test
stos
rcr
xor
insb
mov
data16
fcomip
loope
lret
loope
add
fnstsw
inc
shlb
in
mov
lahf
push
push
sub
iret
and
fwait
dec
jne
add
ja
adc
js
xor
sbb
data16
xor
cmpsb
mov
stos
mov
cmpsb
cmpsb
push
ss
loope
iret
add
or
push
inc
lahf
sbb
cmp
gs
outsb
adc
rorl
push
or
inc
cmp
cmpsb
or
sub
push
sbb
xchg
adcb
pop
js
mov
pop
jnp
cmc
mov
sbb
sbb
lock
add
xlat
sub
das
push
fs
cld
sbb
cmpsb
mov
loopnew
out
mov
jmp
adc
fcoms
xor
in
jnp
adc
ret
dec
sbb
xchg
adc
lret
xchg
add
adc
inc
aad
ret
es
insl
dec
sarl
add
outsl
sbb
stos
sbb
loopne
lods
jmp
add
rol
sub
dec
xchg
data16
mov
mov
jne
ss
sub
xchg
shrl
cmp
cltd
push
inc
stc
movsb
dec
jg
jns
push
lods
adc
and
loopne
lret
stos
sub
mov
fwait
pop
lods
pop
repnz
sbb
mov
hlt
daa
ret
add
pop
loopne
xchg
mov
es
sarl
in
push
pop
ret
stos
call
dec
mov
pop
dec
mov
lods
pop
in
pop
ds
add
xor
push
mov
movsb
mov
and
nop
cmp
inc
mov
cli
popa
and
mov
int3
or
and
js
stc
jbe
or
jo
push
imul
or
jae
push
inc
or
loope
push
sub
ret
add
adc
pop
cmp
cld
xlat
mov
mov
push
xchg
cltd
sbb
popf
clc
sbb
xchg
jo
jl
and
pushw
push
lret
fdiv
mov
pop
jl
ret
inc
ljmp
int3
push
xlat
data16
pop
popa
xor
inc
xchg
out
mov
sub
out
mov
push
cmp
je
popf
pop
push
pop
shlb
pusha
dec
hlt
add
inc
sub
bound
jns
outsb
pop
mov
xor
in
xlat
sub
jnp
enter
fcmovnb
gs
push
roll
ljmp
daa
mov
push
sbb
jl
push
ret
test
adc
mov
inc
cli
mov
pop
outsb
cmp
icebp
sbbb
clc
pushf
icebp
push
mov
fwait
cwtl
mov
xchg
mov
mov
negl
jecxz
cmp
movsl
aas
xchg
and
cmp
jp
mov
ss
pop
lea
fnsave
push
pop
std
mov
mov
fdivrs
pop
es
sbb
lods
and
pmaxsw
shrl
adc
daa
mov
fisubrs
mov
mov
lea
rolb
xchg
nop
icebp
mov
cmpsl
leave
mov
in
and
aaa
ljmp
aaa
loopne
adc
pop
add
cltd
movsl
add
xchg
icebp
pop
int3
dec
sub
mov
add
pop
sub
or
cwtl
adc
or
xchg
lret
push
pop
pusha
ds
push
push
out
push
fcomip
loop
adc
imul
int3
jne
mov
js
sub
adc
outsb
jp
dec
xchg
lahf
jp
subl
mov
pop
jl
add
loope,pn
das
cmpsl
jge
jbe
xor
cmpb
inc
sub
cmpl
pop
xchg
out
std
nop
xor
dec
pop
cmp
loopne
orl
mov
mov
fisubl
jl
lahf
sbb
sbb
notb
push
sbbl
clc
testl
fwait
hlt
push
stc
xor
stos
push
push
or
add
roll
add
movsl
outsl
pop
push
sub
into
dec
and
outsb
ret
idiv
xchg
ficompl
cld
xchg
cmp
jmp
aam
push
pop
out
pop
ja
mov
push
xchg
int
push
jbe
xchg
test
loop
fnstenv
lock
inc
pop
fidivrs
xor
in
aaa
dec
lret
decl
pop
ror
repz
dec
inc
clc
outsl
pop
cmpsb
sbb
int
or
mov
cmp
aaa
shl
ljmp
lahf
add
jns
aam
lea
lahf
ret
sub
jge
stos
shlb
roll
cvttps2pi
mov
sti
jo
enter
push
imul
pop
inc
cld
add
fmull
add
popf
movsl
sub
cmp
clc
mov
sbb
daa
mov
ljmp
xorl
jno
mov
dec
push
sub
jb
push
inc
shl
sbb
xchg
mov
fwait
mov
sbb
push
add
pop
rcll
aam
sahf
out
mov
aas
mov
jo
aas
or
xor
sbb
mov
shlb
les
cmp
push
outsl
jmp
test
xchg
mov
or
cmp
es
pop
mov
sbb
jnp
jne
sub
and
sti
and
adcb
jg
adc
xchg
mov
jg
pusha
cmp
and
adc
xor
xchg
js
inc
fs
je
mov
scas
es
jae
mov
add
xor
push
or
addb
rorb
mov
cmpl
lret
add
int
lock
pop
aad
pop
mov
mov
int3
or
ss
push
inc
add
sbb
outsl
cwtl
adc
mov
test
fdivl
xchg
sbb
out
stc
hlt
inc
push
cmp
cmp
jo
notb
inc
arpl
xchg
adc
and
outsb
test
out
hlt
dec
ficoml
push
adc
xchg
and
or
mov
jns
pop
popf
and
and
pop
stc
cld
lahf
mov
or
push
dec
push
add
outsb
lahf
push
std
jle
mov
xor
ret
inc
inc
leave
pop
inc
xor
cmp
loopne
push
inc
pop
mov
loope
and
sub
xchg
aaa
mov
and
pop
cmp
xchg
rol
and
movsb
test
add
xor
into
icebp
mov
int3
mov
push
out
push
test
sahf
push
aam
mov
jle
jno
mov
push
in
cmp
imul
lretw
mov
or
repz
xor
cmp
daa
faddl
fcomps
repnz
testb
das
imul
dec
ljmp
ret
pop
pop
jp
add
loope
into
cmp
mov
lea
fisttpl
int3
stc
clc
shlb
daa
mov
or
dec
imul
pop
pop
mov
hlt
sub
mov
dec
jg
in
jae
and
scas
enter
outsl
adc
nop
cmp
fs
push
outsl
clc
int3
cmp
outsb
mov
adc
loopne
les
xchg
pop
in
push
sbb
out
subb
jae
or
int3
mov
and
push
mov
movsbl
xchg
in
push
jae
lock
push
mov
dec
int
push
xor
mov
in
mov
out
sub
je
mov
int3
rcr
inc
lods
sbb
or
mov
cs
mov
outsl
push
ljmp
pushf
jns
int3
pop
sub
lea
xchg
cltd
lods
mov
lods
mov
and
cmp
aad
daa
stc
ficoms
out
fists
sub
fbstp
lret
fcomps
mov
or
push
insb
insl
push
jle
enter
jmp
lcall
xchg
and
in
ret
and
jnp
ret
push
out
setno
and
cmp
cwtl
inc
pop
fs
mov
sbb
add
call
pop
jmp
jg
pop
add
inc
or
inc
icebp
xchg
out
mov
dec
lods
ret
xor
jb
pop
add
outsl
push
test
xor
jno
mov
xor
mov
repnz
test
rol
pop
mov
mov
adc
jne
loope
mov
adc
pop
sub
dec
sub
mov
fsubrl
cmp
or
rorl
insb
icebp
and
mov
cmpb
jne
add
or
mov
inc
inc
repz
jae
mov
lock
pop
bound
xor
cmpsl
loop
pop
mov
cmp
pusha
into
lahf
or
and
pop
pop
in
repnz
sbb
pop
sbb
out
mov
xchg
ret
xchg
mov
faddl
mov
mov
push
aam
inc
icebp
push
rolb
sub
iret
mov
jge
cmp
pushf
sti
mov
or
pushf
xlat
cmp
call
cmp
arpl
inc
xchg
cltd
sbb
mov
cmp
pop
mov
loopne,pn
in
xor
jg
sti
jecxz
push
dec
lret
popf
xorl
push
es
push
imul
sub
xor
and
xor
dec
xchg
cld
mov
lret
dec
push
mov
jecxz
jbe
push
in
sub
cmp
xlat
mov
loop
cld
stos
dec
clc
std
push
sti
rorl
outsb
std
lods
arpl
negb
lahf
jnp
mov
jnp
lahf
jns
aas
xchg
sbb
add
out
mov
inc
sarl
jae
dec
mov
insl
aaa
hlt
idivb
jb
stos
bswap
xorb
inc
es
lods
cmpsl
add
jno
push
add
sbb
icebp
icebp
mov
inc
dec
mov
sub
sbb
xchg
mov
ss
stos
xchg
hlt
adc
dec
cmp
iret
pusha
mov
xor
mov
hlt
outsb
cmpl
stc
add
jno
jmp
xor
adc
imul
and
pop
sbb
cs
flds
insl
ljmp
mov
jno
sbb
pop
dec
lds
imul
push
pop
lcall
adc
pop
or
and
rorl
push
xchg
push
movzbl
fildll
cmp
popf
mov
pushf
adcl
push
inc
faddl
inc
xlat
and
add
bound
jnp
push
lock
andnps
mov
je
or
or
out
iret
out
orl
popf
out
inc
sahf
insl
lret
pop
cwtl
sbb
mov
push
cmp
test
xor
sub
inc
fs
les
bound
fsubp
fdivrl
mov
shrb
dec
sbb
inc
and
mov
mov
jmp
lea
int3
pop
hlt
push
mov
mov
mov
popa
xchg
dec
adc
add
xor
fwait
sbb
fsub
movsl
push
xchg
loope
mov
push
and
shrl
jns
sub
mov
into
adc
insl
xor
mov
sub
and
enter
ljmp
pushf
ret
or
movsb
data16
xchg
cmp
xor
cmp
and
popa
pop
cmp
mov
inc
mov
js
jno
add
jl
addr16
mov
sub
push
jg
sub
pop
sahf
mov
and
xor
xlat
lcall
xchg
pop
mov
out
pop
addr16
jns
ret
pop
push
lds
hlt
aas
sbb
or
adc
jae
movsb
lods
pop
xor
mov
dec
mov
scas
jmp
repnz
add
js
cltd
jge
lret
icebp
cli
out
xor
bound
fisubrl
es
cmp
cs
hlt
divb
shrb
testl
or
into
xchg
out
sub
mov
jp
aaa
cli
pop
dec
xchg
add
adc
dec
mulb
movsl
cmpsb
jge
inc
stc
pop
mov
inc
mov
test
addr16
hlt
and
inc
push
ss
xor
add
out
sti
mov
movsl
cld
ret
mov
push
rclb
mov
dec
xchg
or
shll
sbb
lahf
mov
ret
in
aam
imul
lahf
push
adc
sbb
xchg
pop
mov
repnz
test
mov
and
xor
loopne
sti
push
shlb
ja
push
xlat
adc
xchg
arpl
cmp
test
fisubs
xchg
pop
add
subb
lret
jbe
insb
inc
sarb
cmpl
or
push
xor
addr16
icebp
inc
in
mov
mov
ret
out
out
inc
mov
dec
dec
test
adc
int3
aad
je
push
jmp
jmp
pop
xor
dec
add
arpl
dec
fisttpll
scas
mov
pop
cld
adc
push
lahf
in
xor
nop
out
xchg
dec
push
pusha
nop
outsb
cmp
mov
cld
fstpt
repnz
inc
lock
xor
int
add
or
aas
xlat
aam
or
pop
jmp
mov
or
adc
push
jecxz
leave
ret
mov
fucomi
sub
movups
mov
clc
aaa
sti
notb
mov
stc
out
orb
pop
pusha
dec
mov
push
repz
xchg
outsb
mov
dec
idivb
mov
or
addr16
cmp
enter
pop
adc
dec
ja
inc
dec
mov
aam
push
fmuls
xor
cs
insb
mov
clc
dec
imul
xchg
mov
cwtl
pop
pop
mov
adc
push
add
xor
loopne
fistps
mov
nop
inc
pop
mov
stos
or
outsl
fdivrl
jle
in
out
cmp
pop
jmp
sub
pop
add
and
mov
add
mov
in
add
mov
add
rcrl
fisttpll
lea
insb
hlt
ret
or
mov
enter
nop
mov
in
cmp
xchg
clc
cmp
jnp
test
dec
cmp
cmc
mov
popf
add
shlb
shll
lahf
lcall
sub
push
jmp
sub
outsb
cltd
daa
sbb
add
and
adc
cld
inc
int3
in
aaa
repnz
add
mov
mov
mov
push
pop
xor
inc
dec
fnstenv
rorl
inc
jnp
loope
mov
mov
fcmovbe
ss
push
mov
daa
test
and
cmc
mov
dec
enter
mov
pop
xorl
add
jne
mov
fcmovu
sub
pop
push
and
mov
jecxz
xchg
push
lret
into
lea
inc
fdivp
sub
icebp
clc
loope
out
cmp
flds
pop
xchg
and
inc
sub
testb
test
gs
inc
jmp
fdivrs
iret
sub
xchg
fstl
mov
push
xchg
push
push
out
call
push
or
fsubl
loopne
cmp
clc
sar
xchg
xchg
push
mov
jns
xchg
aas
cmp
push
std
popf
xchg
add
les
pop
movsb
cs
mov
or
out
push
cmp
push
aad
das
push
push
aaa
adc
sub
dec
stc
mov
mov
ljmp
mov
fnsave
sub
pop
adc
pusha
out
negl
pop
int
call
cmp
mov
test
hlt
roll
sub
jp
mov
lret
stos
call
enter
shlb
mov
xchg
lds
lret
pop
sub
mov
out
or
dec
out
repnz
cmp
out
sbb
cmpsl
add
test
sub
int
lods
inc
mov
pop
nop
adc
push
cmp
fs
fwait
stos
imul
mov
add
icebp
pop
push
push
aam
enter
pushf
push
mov
insl
and
add
dec
outsb
imul
adc
daa
outsb
lret
repz
repz
addb
dec
clc
nop
punpckhdq
pop
add
loope
jl
test
repz
rorl
fs
inc
sub
test
jo
pop
push
mov
test
inc
popf
push
mov
jg
daa
sub
dec
aas
test
xchg
or
push
ss
inc
aad
add
call
int
sbb
push
cmp
mov
test
loop
sub
pop
into
fcomps
into
push
les
fs
loopne
and
sub
inc
push
shll
mov
ds
sub
xchg
hlt
pushf
mov
cmp
mov
mov
in
fldl2e
enter
lahf
jge
int3
movb
lret
pop
mov
jl
es
aad
pavgb
mov
jecxz
push
cmp
aad
jb
or
es
xor
sbb
pop
mov
pop
push
xchg
and
xchg
adc
fstpl
pop
ficomps
adc
xor
add
push
sbb
jmp
mov
cmp
sub
push
fsts
pop
mov
inc
int
in
pusha
or
imul
in
hlt
aad
ss
adc
sub
dec
mov
sbb
shlb
rcrl
dec
dec
mov
aam
ret
mov
sub
sbb
lret
jne
add
cs
jne
fwait
clc
shl
lret
sub
fwait
mov
xchg
shll
hlt
cltd
rcr
and
dec
sti
inc
add
mov
sub
stc
stc
dec
sti
popf
shlb
aaa
icebp
push
pushf
je
or
cmp
dec
and
or
pushl
leave
cs
adc
mov
dec
iret
daa
add
cmp
cwtl
xchg
add
stc
subl
push
push
loop
xchg
movsl
stos
arpl
nop
jo
gs
out
inc
mov
mov
and
lea
push
push
add
repz
adc
cmp
mull
movsb
enter
push
ljmp
lds
jecxz
nop
popf
ds
inc
pushl
cmpsb
or
or
add
xor
cmp
dec
leave
out
push
mov
int
into
cltd
into
lods
push
test
inc
mov
les
dec
jecxz
xlat
loope
and
pusha
lea
sub
insb
pop
ljmp
rcrb
jnp
fiaddl
scas
cwtl
jmp
scas
leave
pop
jge
in
mov
push
dec
out
rclb
mov
dec
lods
xor
mov
mov
push
repnz
repnz
clc
and
aas
mov
ret
xchg
push
mov
sbb
out
lds
std
ds
inc
cmp
inc
clc
sub
push
add
fists
cmp
xchg
mov
add
shl
arpl
stc
test
pop
mov
in
scas
jne
sbb
jne
ds
jg
daa
or
in
mov
jno
cmpsl
int
lahf
and
jnp
pop
push
mul
lret
outsb
fldenv
popf
xchg
mov
jns
test
in
mov
ja
push
sbb
sub
mov
dec
jbe
fwait
andl
leave
jb
jbe
inc
ljmp
push
cmpb
sbb
cmp
out
sub
jg
mov
jnp
xchg
popa
dec
inc
mov
push
inc
out
jo
mov
lcall
les
in
mov
fisttps
test
cmp
aam
cmpsb
lcall
push
inc
mov
outsb
aas
mov
mov
dec
mov
mov
in
sbbl
rcll
scas
mov
rorl
pop
out
cwtl
add
mov
jg
mov
test
xchg
loop
push
fsubrs
ret
std
fmull
mov
out
daa
jno
aam
jmp
outsb
inc
cmp
xchg
testb
repz
push
pushf
mov
mov
fldcw
cmp
and
aas
insb
leave
pop
out
sbb
nopl
int3
sbb
faddl
daa
mov
or
ds
push
ds
int3
mov
xor
xor
loope
adc
int3
adc
add
dec
addr16
insl
adc
cmp
and
pushf
scas
arpl
movsb
cmp
jnp
sub
pop
and
aad
out
xchg
cmpsb
xor
adc
das
lahf
mov
xchg
push
inc
mov
inc
jmp
mov
imul
test
test
loop
mov
imul
push
insl
pop
in
scas
add
sub
adc
movsb
mov
lahf
in
stos
jg
shrl
jae
dec
mov
mov
dec
fidivrl
hlt
or
pop
jp
sbb
xchg
jns
pcmpeqw
insb
call
cmpb
dec
sti
sbb
push
pop
fsub
inc
popf
add
lret
aas
xchg
sbb
das
adc
movsl
loope
out
das
adc
pop
xchg
sub
push
repnz
xchg
push
int3
aas
add
lcall
cmc
adc
sbb
lock
popa
xlat
mov
jae
mov
mov
or
xchg
rcr
inc
imul
int3
stc
lods
sub
mov
test
imul
aas
aas
outsl
leave
les
stos
xor
out
push
mov
cmp
test
mov
rcrl
out
test
fld
scas
movsb
adc
lods
movsl
fdivrs
dec
out
or
jmp
xchg
repz
fwait
movsb
inc
cmc
loopne
or
mov
mov
mov
lock
sarb
imul
cmp
mov
dec
loop
fldl2e
add
negb
test
mulb
fcoml
ret
mov
test
mov
out
add
or
dec
push
xchg
outsb
add
int3
pop
out
das
mov
jb
insb
and
push
ss
sysexit
inc
push
aaa
test
jge
testb
push
bound
pop
nop
shrl
and
lret
std
xor
imul
xchg
cmpsl
lods
prefetch
or
jl
mov
push
aad
lret
mov
pusha
lret
push
in
mov
mov
stos
and
lahf
cs
fcompl
lcall
movsl
mov
data16
and
sub
repz
mov
movl
stos
hlt
or
push
enter
movsb
xor
pop
test
pop
test
xchg
jmp
mov
fs
sub
stos
addps
out
mov
push
cmp
xchg
lock
pop
stos
pop
cmpsl
inc
add
and
pop
add
ljmp
mov
int3
cmpsb
push
push
cli
sub
xchg
out
in
xor
mov
je
fwait
jmp
jle
clc
mov
sbb
cmp
lret
adc
cmpsb
shll
cmp
mov
int3
and
add
pushf
jne
cmp
cltd
xchg
lods
dec
sub
adc
repz
dec
jne
lahf
loop
sub
loop
jae
inc
or
ret
or
and
inc
inc
sub
xchg
dec
arpl
outsb
cld
outsl
fbld
bound
sbb
insl
cmp
sub
repz
stos
or
add
aas
sub
xchg
movsl
aas
and
sbb
mov
sub
mov
xor
dec
es
push
xchg
ret
ds
std
adc
dec
jp
inc
fdiv
sarl
xor
icebp
add
lcall
mov
push
mov
jecxz
mov
mov
es
cwtl
add
insl
xchg
and
int3
lock
inc
add
loop
in
xchg
jle
xor
daa
or
dec
addr16
mov
gs
stc
fcmovnbe
cmp
out
popf
xchg
push
shlb
xlat
arpl
cmp
movsb
sub
shl
xor
es
pusha
mov
and
mov
clc
dec
icebp
mov
mov
lcall
popf
loopne
leave
jns
pop
jns
sbb
add
jae
mov
jo
xchg
lods
add
pop
cli
xchg
cmp
ss
inc
pop
imull
aad
ret
push
fistps
clc
adc
dec
push
inc
sti
sub
idiv
es
jecxz
es
inc
xor
outsb
mov
imul
and
sarl
popf
pop
shrl
pop
push
insl
subb
jle
outsl
mov
add
frstor
pop
lock
addr16
mov
push
jmp
cmp
fisttpll
dec
push
testb
push
repz
data16
push
sub
sbb
iret
pcmpeqb
std
int3
mov
xchg
repnz
insb
movsl
ficoms
pop
addr16
xchg
xchg
mov
loope
jecxz
mov
movsl
adc
adc
jno
pop
dec
jmp
dec
mov
icebp
addr16
sub
xor
shrl
pop
and
and
cwtl
adc
arpl
pop
sub
mov
push
and
cmp
ds
stc
popf
ss
jecxz
test
stos
xor
jecxz
mov
add
arpl
mov
pop
dec
cmp
xchg
add
push
mov
and
adc
jecxz
addb
frstor
shl
or
push
cmp
out
pop
or
int3
fisubl
enter
jmp
or
dec
cmpsl
push
sahf
and
add
jnp
mov
add
pop
pop
inc
cmp
pop
js
aas
mov
adc
jae
mov
dec
xchg
cld
sahf
push
xchg
lahf
repnz
pop
imul
sbb
mov
jno
lahf
inc
push
aam
std
jecxz
dec
cltd
push
pop
lcall
cmp
sarb
dec
add
mov
nop
and
sahf
sbb
jmp
aad
xor
aaa
and
mov
xchg
pop
insb
ds
xor
lcall
sahf
inc
dec
pop
out
adc
in
pop
cmp
and
fwait
testb
pushf
xchg
add
dec
add
subl
cld
in
mov
jae
aad
xor
repnz
and
or
jmp
pushf
sbb
aas
mov
push
xchg
in
pop
add
add
mov
mov
xchg
loopne
iret
icebp
mov
outsb
or
movsb
mov
jb
xor
test
or
stc
pusha
clc
test
int3
xchg
dec
lea
cmpsl
fmulp
lods
mov
add
out
gs
pop
xor
addr16
fbstp
sbb
cltd
test
push
push
in
jo
pop
pop
shll
xchg
in
jo
mov
and
pop
sub
lock
rcll
add
jb
fildll
xchg
dec
iret
arpl
out
or
imul
sahf
mov
les
scas
sbb
ss
ds
xchg
mov
decl
or
mov
ret
push
push
sbb
or
adcb
or
push
popa
rolb
push
nop
rolb
test
outsl
ret
push
xchg
dec
add
int3
mov
leave
ret
popa
test
push
push
xchg
rcrl
inc
fnsetpm(287
jecxz
adc
push
jp
scas
mov
add
das
and
sbb
xchg
jb
xchg
ret
sub
add
xor
or
inc
pop
loop
rol
pop
out
loopne
rorl
test
test
clc
push
mov
dec
mov
aas
jge
pop
es
mov
and
push
pop
jnp
adc
jbe
clc
mov
cmp
sbb
jecxz
xchg
es
test
mov
cltd
sub
movsb
xor
int
or
lret
test
sbb
push
jl
lock
add
sub
adc
out
mov
xor
mull
jle
sbb
cmp
mov
rcrl
inc
enter
pop
ds
fsubrs
aam
push
push
cs
int
aaa
js
cmp
add
fbld
cmc
call
clc
rcll
and
pop
mov
scas
fnstenv
fs
mov
outsl
and
push
mov
sahf
int
cli
xor
ret
mov
aam
icebp
mov
adc
leave
sahf
jb
mov
test
and
in
sbb
jp
aaa
outsl
pop
lods
lret
outsb
popf
lahf
mov
adc
sbb
test
mov
add
cmp
mov
push
or
sub
add
cmp
les
mov
hlt
hlt
mov
sub
pusha
rorl
and
jg
inc
sbb
cmc
xor
cmp
jl
arpl
mov
sub
pop
jbe
outsb
push
addr16
or
and
repnz
cmp
sbb
sahf
mov
daa
lret
push
shrb
lds
addr16
out
and
nop
push
sub
leave
mov
jmp
jle
adc
fdivrl
xor
mov
and
mov
cltd
mov
test
mov
xchg
in
ss
sub
test
xchg
les
cltd
and
sub
pop
popf
mov
adc
sbb
nop
pop
and
mov
repz
iret
ds
xor
adc
mov
fldenv
jbe
sbb
cmpsl
push
cmp
or
sbb
adc
pop
mov
lcall
decb
in
add
mov
jb
daa
rcrb
scas
mov
lcall
loope
mov
in
sarl
lret
jnp
mov
xchg
sarb
mov
mov
fs
mov
add
jo
mov
push
xchg
xor
jne
sub
mov
testl
cltd
push
daa
jb
popf
pop
movsb
mov
jge
xchg
jne
xchg
lods
ds
dec
in
clc
dec
push
mov
scas
test
xor
mov
or
scas
lcall
sub
nop
or
insl
fs
lds
fstps
push
inc
jmp
femms
xchg
int
sbb
push
jge
xorl
lret
popf
aas
xlat
sarb
loope
jp
gs
sbb
loop
sub
xchg
test
sbb
xchg
lret
mov
dec
inc
jmp
mov
addr16
adc
stos
and
loope
or
inc
int
or
inc
cltd
int3
mov
cltd
mov
or
xchg
shlb
or
xor
cltd
adc
aaa
in
sub
ret
mov
sti
sbb
pop
mov
ret
leave
xchg
add
xor
arpl
rorl
xor
pop
aad
ret
dec
mov
bnd
mov
aaa
cmp
pushf
sbb
mov
rorb
xchg
adc
movq
xchg
or
jg
add
pushf
add
subl
sbbb
pop
pushf
ret
fmull
jge
fnstsw
fwait
pop
xchg
inc
inc
mov
rolb
or
test
mov
sti
xchg
addb
add
icebp
scas
mov
repz
push
inc
clc
int3
lea
std
add
jle
dec
aad
orb
rcll
jmp
aas
das
adc
mov
push
pop
jle
in
cmp
mov
xchg
es
lock
sbb
cltd
lahf
loope
fwait
lahf
push
mov
or
sahf
mov
cmp
test
inc
rcr
adc
ja
xchg
xchg
fidivrl
clc
push
cmp
out
push
fidivrl
loope
out
inc
mov
jecxz
lahf
imul
and
mov
rclb
dec
cltd
cmp
addb
xchg
add
fcoms
xor
andl
xor
cmp
pushf
ret
and
dec
xchg
enter
iret
mov
cld
xchg
shlb
push
pusha
mov
lods
mov
mov
jae
inc
adc
scas
cmp
mov
gs
scas
data16
outsb
dec
mov
mov
lahf
xor
or
daa
iret
repz
hlt
mov
mov
pop
test
and
and
xor
pop
cmp
mov
cwtl
sti
lahf
gs
loopne
psadbw
fbstp
and
sub
push
fidivrl
repz
aaa
lcall
mov
adc
mov
mov
push
enter
xchg
or
jg
lret
stos
int3
int
cmpb
or
js
push
filds
xlat
inc
imul
repz
loopne
or
daa
fcmovbe
aas
add
ret
sub
pmulhw
adc
jbe
roll
mov
and
cmp
sti
sub
xchg
mov
jle
lods
pop
xchg
push
dec
xchg
in
mov
out
dec
jno
fmul
or
std
mov
lret
add
test
add
pop
jp
xchg
fisubrs
add
mov
mov
mov
xor
sar
nop
js
mov
js
hlt
or
and
ret
scas
pop
inc
repz
movsl
add
sbb
pushf
aam
leave
push
inc
inc
rcr
out
iret
data16
mov
sbb
pop
dec
adc
fidivrl
push
and
mov
ljmp
push
pop
adc
dec
dec
hlt
inc
ja
ds
cmc
xor
sbb
pop
loop
lret
fwait
jno
sarb
xchg
imulb
adc
into
lret
mov
fistl
or
sub
les
jbe
dec
push
rolb
sub
pop
loop
decl
inc
or
mov
xchg
mov
into
pop
inc
imul
jae
sub
and
jmp
cltd
mov
gs
outsb
or
fcomi
aad
mov
movb
icebp
addr16
outsl
sbb
jmp
jge
icebp
adc
xchg
adc
sub
jnp
rcrl
cmp
adc
mov
or
sbb
xor
pop
inc
push
lods
xchg
xchg
aad
mov
sub
push
in
pop
and
test
test
or
mov
dec
call
shl
adc
cld
add
data16
push
xor
cmpsl
repz
mov
jbe
ficoml
xor
loop
cmp
testb
sbb
ret
adc
cmpb
mov
inc
sarl
test
and
cmp
pop
popf
cmpsl
outsb
cwtl
mov
mov
inc
pop
adc
sahf
mov
in
jns
shlb
mov
and
jno
sbb
incl
sub
xchg
pop
jae
sub
push
xchg
mov
jge
cmpsb
jno
jne
mov
hlt
jo
filds
and
and
test
jecxz
cmc
jnp
js
or
loope
xor
sbb
xchg
inc
mov
out
or
out
pop
mov
cli
les
rolb
pop
jmp
bound
pop
lahf
mov
push
mov
out
jle
mov
or
mulb
cmp
subb
inc
mov
lret
or
fldenv
frstor
and
mov
push
cmpl
enter
lea
jae
enter
shl
dec
lods
mov
and
sbb
ret
or
add
mov
sub
cmpsl
cmp
je
push
xchg
and
mov
and
popa
lods
loop
fldcw
daa
add
add
jo
ret
adc
mov
scas
vpunpckldq
jl
dec
pop
fists
and
rorb
push
lods
je
movsl
rclb
outsb
movsb
je
cmp
lock
push
pop
dec
repnz
adc
out
int
dec
dec
out
adc
push
push
cmp
imul
pop
fdiv
mov
jnp
cwtl
dec
xor
push
mov
icebp
popa
mov
icebp
fs
xchg
jns
xchg
mov
xlat
pop
dec
pop
pusha
std
cmpsb
pop
lahf
bound
mov
cmp
mov
fsubrl
xchg
std
imul
fs
jecxz
pop
push
fisttps
aam
arpl
jmp
jl
jnp
cmp
pop
jg
xor
imul
mov
jno
sub
adc
sti
sbb
stos
mov
cld
ljmp
rorb
movsb
lcall
pop
lods
sbb
ret
pop
jns
or
mov
sbb
mov
insl
arpl
lcall
lcall
or
js
out
pusha
cltd
mov
mov
cmp
sbb
pop
scas
rcrb
add
outsb
fs
xor
mov
out
fcmovnb
pusha
jl
xchg
rcrb
addl
dec
rcrb
mov
mov
clc
inc
push
cmp
mov
mov
sbb
adc
cmp
pop
push
adc
cli
cmpsl
add
adc
fstl
xlat
repz
subb
pop
imul
xchg
jge
mov
mov
lock
in
int3
inc
cmp
dec
xor
jns
mov
addl
movsb
cltd
testl
lods
pop
cmpsb
mov
cmp
in
and
mov
arpl
adc
les
mov
pushf
or
dec
lods
lock
vmread
jo
pop
testl
cwtl
popa
fwait
push
out
test
push
pop
fnsave
push
add
sub
add
mov
cmp
repz
enter
pop
jmp
notb
jns
dec
pushf
and
dec
addl
push
shr
cwtl
and
jb
ljmp
std
mov
add
sbb
lods
jecxz
and
addr16
loop
scas
ljmp
loop
xchg
pop
cmpsl
add
sub
shlb
and
outsb
or
dec
sub
push
mov
out
loop
sub
jne
fstpt
cltd
push
gs
or
mov
mov
shlb
insb
ljmp
mov
data16
pop
into
or
pop
imul
sub
sarb
dec
mov
jno
nop
sbb
push
mov
ss
cwtl
fnstsw
ja
push
stos
daa
dec
push
and
mov
cmpsb
adc
out
loopne
bound
fisttps
adc
pop
aam
jae
mov
outsb
into
sub
fidivl
imul
xor
sub
loope
lret
jl
inc
es
jne
cmp
mulb
movsl
sub
xor
out
or
push
cmp
push
ret
fsts
pop
test
stos
mov
popl
popf
add
cwtl
leave
jecxz
cmp
adc
xchg
out
imul
xchg
mov
mov
inc
cmc
jecxz
pop
movsb
out
aas
out
inc
mov
icebp
xchg
mov
fs
out
fldenv
jecxz
push
iret
movsl
xchg
push
mov
mov
push
scas
repnz
dec
sbb
or
cmp
loope
adc
mov
mov
lret
insl
fsubp
fadds
jns
clc
lods
les
sub
cmp
adc
ljmp
mov
cmc
jl
push
xchg
popf
test
adc
mov
icebp
dec
mov
repz
lods
lea
inc
jne
cmp
fs
cmp
mov
xchg
rolb
je
jp
dec
push
xchg
or
pop
sarb
fdivrl
dec
dec
shrl
xchg
das
mov
push
and
xchg
iret
sahf
fiadds
push
jecxz
inc
out
jb
sarb
mov
movsl
mov
mov
arpl
xchg
sbb
jb
or
in
jl
cmc
jmp
xlat
rorb
shr
jnp
filds
pop
jne
psrad
mov
jecxz
mov
jp
aaa
jmp
xor
ja
hlt
sbb
sbb
mov
test
sub
push
lods
test
les
clc
enter
sarl
arpl
test
mov
lret
pop
jg
dec
mov
jno
cmc
cmp
mov
popf
jb
fldl
adc
mov
push
repnz
bound
mov
jb
sti
xor
cmp
dec
jbe
nop
in
sbb
loopne
cltd
cmp
jge
pop
mov
lock
cmp
in
push
aaa
fsubs
xchg
mov
lret
sahf
out
lret
mov
aaa
pop
sti
cmpsl
lret
jo
xor
mov
sbb
push
and
xchg
popa
rorb
out
push
jle
pop
mov
sbb
mov
push
fldcw
bound
cmpsl
sub
add
cmp
dec
jle
inc
xchg
nop
ljmp
stos
inc
jle
xchg
cmc
xor
add
in
imul
and
or
cs
negl
dec
push
fstl
sub
sbb
decl
int3
mov
xor
adc
imul
rep
cwtl
gs
testb
fldcw
or
arpl
out
aaa
sub
mov
jge
xor
je
mov
in
sub
cmp
clc
hlt
arpl
or
dec
add
ja
fsubr
and
enter
jge
mov
sub
loop
push
inc
xor
cmpsl
xlat
pop
js
inc
sbb
cmpb
test
sbb
sbbb
stc
test
adc
dec
mov
inc
out
aam
rcll
cmpsl
insl
lods
mov
lea
inc
cs
lods
and
scas
fdivr
aas
in
inc
push
push
shlb
dec
xchg
xor
data16
mov
clc
ljmp
xor
pop
movsb
inc
filds
push
cwtl
add
cmp
add
or
cmp
jb
adc
lcall
sbb
fsubs
jp
divb
fsubs
jecxz
bound
pop
sbb
jmp
mov
test
jno
cmp
mov
enter
stc
js
sbb
pop
mov
jo
inc
xor
or
cmc
push
inc
aad
mov
jl
jne
rcr
mov
xor
lods
incb
pop
pusha
mov
mov
lret
punpckhdq
mov
jne
sbb
pop
pop
cmp
gs
add
cld
inc
adc
leave
out
xor
addb
orb
ret
mov
dec
mov
inc
loope
aam
sub
pop
push
fstp
xchg
test
mov
dec
ljmp
xchg
inc
scas
scas
es
into
dec
movsb
ret
test
cmpsl
push
xor
adc
fs
cmpl
xor
loop
cmpsb
aad
mov
or
jmp
mov
out
cli
inc
shlb
cld
les
sti
sbb
jmp
dec
js
insb
sub
repz
jle
sbb
imul
mov
scas
iret
test
mov
imul
mov
or
add
xorl
rorb
push
pushf
adc
jbe
inc
leave
jne
vmread
ret
out
rorl
sbb
pop
xchg
mov
dec
push
rcr
fsub
mov
push
rcr
push
xor
cmp
lret
outsl
lock
mov
popf
sbb
int
fdivl
adc
push
cmp
fbld
lea
and
repz
les
pop
dec
lods
ds
cmpsl
pop
jo
jnp
and
cmp
rol
test
imul
add
jp
push
das
mov
iret
add
pop
adc
cmp
pop
fldl
ret
jb
ret
jno
push
push
gs
rolb
ret
fiaddl
std
mov
sbb
xor
pop
xor
sub
push
in
pop
gs
jle
inc
cmp
sahf
lods
jl
adc
mov
and
inc
jmp
push
js
pop
popa
push
xor
imul
pusha
popa
adc
arpl
cmp
ljmp
outsb
adc
sub
sti
jp
inc
shll
pop
mov
cmp
test
rorb
cmp
rorl
out
add
xor
xchg
das
xchg
fdiv
adc
add
stos
cmp
push
je
cs
adc
jle
sar
icebp
pop
insb
push
int3
scas
cmp
repz
jg
xlat
cld
dec
sti
and
sbbb
enter
lea
mov
sub
notl
int
push
cli
lods
mov
popa
cmp
fnstsw
icebp
inc
mov
add
mov
inc
out
mov
xchg
repnz
repnz
push
cld
fstpl
cmpsb
fsubl
sbb
addr16
inc
mov
cmpl
cmpl
bound
jmp
push
imul
sub
mov
xchg
into
mov
add
js
fmuls
adc
iret
sar
mov
pop
adc
cmpsl
cmp
add
xlat
dec
push
lcall
lret
sbb
ja
clc
push
imul
mov
add
xlat
cmp
test
dec
lds
or
add
dec
push
cltd
jecxz
nop
das
inc
bound
daa
xor
xchg
xchg
cmp
push
bnd
cltd
pusha
mov
inc
xchg
insl
mov
lret
push
notl
daa
rolb
and
orb
xlat
jno
cmp
lret
dec
or
int
fwait
jmp
push
mov
push
jbe
xchg
and
pop
pop
hlt
rcll
mov
stos
jp
imul
fdivrp
cli
outsl
jne
sbb
stc
push
sarl
addr16
repnz
repz
dec
cmp
pop
mov
mov
mov
lds
xchg
icebp
jae
clc
ja
adc
pop
inc
loope
hlt
sub
mov
fsub
cmpsb
in
jmp
jns
stc
sub
out
xchg
mov
adc
add
enter
les
in
call
sbb
mov
dec
test
stos
out
int3
aam
ss
imull
pop
mov
movsl
ja
lcall
loopne
inc
loope
push
pop
aad
xchg
test
push
cmp
push
nop
enter
push
add
push
sbb
xorl
pop
and
adc
cli
pop
push
bound
cmp
in
daa
sbb
cmc
repz
call
shlb
ljmp
addl
add
xor
mov
xchg
mov
rcll
push
fmulp
clc
in
test
jmp
mov
xor
push
imul
js
or
inc
call
xor
mov
addr16
out
adc
nop
lea
iret
pusha
shlb
arpl
orl
sbb
nop
dec
pop
cmp
mov
lahf
add
sbb
or
dec
add
adc
inc
test
popf
dec
sahf
mov
lds
call
mov
addl
ret
dec
inc
popa
adc
cmp
ljmp
push
jg
mov
xchg
mov
push
mov
sub
sub
xchg
adc
call
push
lahf
and
xchg
data16
ss
xchg
shrb
or
lret
mov
jno
in
jo
lret
push
inc
flds
pop
mov
xor
mov
leave
popf
sbb
pop
adc
cmp
es
adc
jge
int3
sub
decb
pop
xchg
cmpsl
or
jge
cmp
mov
sub
cmp
addr16
popf
xor
outsl
or
xchg
fmull
nop
add
mov
pop
pop
out
xor
jbe
addb
pop
dec
cwtl
or
jne
xchg
mov
daa
imul
shlb
mov
cmc
outsl
push
fisubrl
push
rorl
jecxz
pop
adc
sub
outsl
push
call
sbb
cld
jmp
mov
xchg
dec
adc
js
call
adc
sbb
test
pushf
scas
dec
jne
outsb
les
xchg
xchg
or
mov
jns
ds
iret
mov
mov
add
adc
and
gs
fs
or
pop
dec
int
ds
cmp
jno
daa
enter
out
xor
add
mov
orb
cvtdq2ps
and
or
mov
sub
jb
ss
into
push
xchg
add
cmp
or
test
hlt
fbstp
int3
sbb
idivb
negb
or
iret
cmp
mov
stos
addr16
add
inc
pop
jne
jmp
movsb
leave
pop
in
in
dec
pop
pushf
orb
jle
iret
xchg
clc
dec
push
jecxz
inc
mov
cld
jecxz
test
fdivrs
call
add
xor
cwtl
jp
mov
inc
out
aaa
sbb
paddd
dec
or
xor
sub
std
lcall
jno
xor
loop
fnsave
xlat
lcall
mov
adc
and
test
and
repz
mov
xlat
jno
jne
sti
mov
outsb
outsb
outsl
pop
and
test
and
bound
jb
mov
adc
mov
cmp
or
xor
cmp
out
repnz
xlat
test
test
ljmp
repz
xchg
xchg
fs
cltd
lock
push
fadds
jge
xchg
add
ret
or
js
enter
mov
mov
sbb
lods
or
lahf
xchg
adc
pusha
js,pn
add
dec
jg
push
test
enter
fcomps
scas
int3
or
out
xor
mov
mov
movsl
lret
out
scas
add
or
jge
mov
imul
sbb
popf
addr16
jo
out
fnsave
cmp
dec
jp
in
pop
scas
xchg
and
and
dec
push
movsl
adc
inc
xor
inc
testb
loope
test
adc
inc
lea
incb
idiv
popf
dec
fbstp
in
mov
jns
cmpb
cs
adc
lea
pop
xchg
push
push
mov
push
in
pop
or
lds
sbb
sub
mov
out
idiv
arpl
ds
rcll
test
push
jp
fisubrs
mov
dec
sub
out
push
popa
jmp
sbb
cmp
iret
jo
cmp
xor
ret
mov
js
ret
sbb
fcomps
inc
leave
cmc
xchg
add
clc
outsl
pop
inc
pushf
dec
hlt
insl
pop
xchg
push
add
jle
pop
add
cwtl
xchg
or
lahf
lds
mov
push
xchg
rorb
out
fistps
les
dec
imulb
ss
js
sbb
dec
sbb
rclb
clc
iret
call
mov
mov
push
jne
jle
into
sbb
test
icebp
jle
in
ficoml
inc
dec
sbb
mov
adc
sbb
mulb
lds
hlt
outsl
jb
mov
cmp
in
dec
mov
pusha
das
sbbb
daa
dec
xor
mov
test
and
mov
les
aas
mov
and
pop
cmp
and
jmp
jo
lret
mov
dec
dec
imul
filds
xchg
mov
mov
fnstcw
cmpl
lcall
push
mov
dec
cmpsb
cmp
push
push
jecxz
cmp
repz
xchg
stos
aad
mov
mov
scas
into
lods
mov
out
setae
xor
es
addr16
aaa
mov
adc
sbb
incb
jge
hlt
icebp
sbb
shufps
jns
sub
jge
mov
xor
nop
jl
inc
out
mov
lret
mov
inc
fisubs
rolb
leave
jmp
icebp
cmp
rolb
add
xchg
in
and
fs
call
inc
rorb
addb
cmp
xchg
mov
ja
mov
xchg
add
cmc
add
es
jae
fstpt
out
shlb
add
sbb
jbe
adc
repz
or
neg
mov
shufps
sub
shl
imul
cli
sub
adc
xor
adc
sahf
cs
ljmp
xchg
jecxz
mov
add
jmp
jecxz
outsl
push
adc
cmp
inc
and
jns
xchg
out
in
or
cmp
pop
in
adc
rolb
add
lret
dec
pushf
call
add
xchg
aam
jb
jl
cli
ficomps
fcmove
adc
daa
addl
adc
outsl
les
jae
in
or
mov
push
sbb
jnp
jns
xchg
mov
or
ljmp
stc
push
roll
pop
dec
mov
fnstcw
cli
inc
xchg
cld
inc
add
sub
hlt
fdivrl
cmp
shl
ljmp
and
mov
fcmovnbe
popa
nop
pop
lahf
icebp
or
leave
rcrb
ret
lea
push
aas
mov
inc
cli
sub
and
aaa
inc
mov
add
pop
ficoms
lock
mov
testb
sbb
inc
addr16
stc
int
ret
test
orl
add
ss
mov
pop
std
daa
or
xor
ljmp
int
fistpll
xchg
dec
test
sub
sbb
xchg
add
repnz
aaa
idivl
fdivrs
add
lock
pop
add
cmc
xchg
jns
xorb
xorb
into
fsubrs
cltd
std
dec
les
cmp
push
xchg
movsl
repz
imul
dec
stc
ret
dec
cmp
test
stos
xchg
xchg
sub
xor
push
bnd
mov
cmp
mov
fisubrs
mov
pusha
aaa
ljmp
push
lods
out
inc
fldcw
fnsave
aaa
mov
fs
aad
fcmovbe
pop
sbb
mov
push
pop
lcall
dec
and
jb
loope
imul
aam
xchg
inc
push
popf
xchg
ss
or
xchg
arpl
pop
sbb
inc
jp
aas
scas
jns
sbb
pop
clc
push
fwait
mov
push
aad
mov
push
stos
pop
stos
adc
inc
lds
mov
sub
out
dec
mov
js
adcb
lods
push
mov
clc
je
ret
daa
mov
fnstsw
roll
push
nop
pop
loop
xchg
mov
mov
adc
dec
cmp
mov
bndstx
sbb
or
push
and
push
pop
clc
ds
fstpl
iret
and
xchg
dec
sbb
sbb
cmp
cmp
and
dec
pop
repz
xchg
ds
insb
dec
mov
jnp
cmp
shlb
jl
addr16
adc
adc
xor
cmc
ljmp
das
cmpl
outsb
sbb
leave
mov
in
call
pop
mov
inc
fmulp
jo
sub
push
push
outsb
cmp
lahf
imul
dec
ss
mov
pusha
aaa
cmp
xor
out
xor
mov
stc
or
cltd
out
sub
sub
mov
push
lock
mov
xor
lcall
cmc
mov
jmp
std
in
outsl
mov
shr
pusha
push
xor
mov
push
dec
into
and
mov
sbb
sbb
pop
mov
rcr
dec
lcall
jnp
push
lock
cmp
and
outsb
popf
inc
out
xor
mov
jo
loope
in
leave
adc
pop
iret
jbe
movsl
jge
testl
cmp
fdivrl
paddsb
jo
sbb
xchg
pop
lahf
mov
lods
fwait
jmp
shl
filds
leave
lret
orb
lahf
jne
and
jae
sub
ds
push
pop
loope
orl
mov
sbb
jg
outsb
aam
sti
adc
mov
sar
sbb
rcr
popa
or
shrl
enter
mov
fdivrs
jo
and
mov
pop
and
mov
adc
add
loopne
outsl
push
imul
lods
mov
pop
push
fmulp
jbe
sub
mov
push
xchg
out
stos
xor
call
push
test
push
sub
ljmp
mov
sub
pusha
ja
jl
imull
push
jmp
push
lcall
pop
xlat
or
insb
pushf
push
inc
or
sbb
push
xchg
jbe
jp
xchg
adc
mov
cmp
adc
pop
and
cmc
lea
push
arpl
lea
jb
xchg
inc
imul
notl
mov
mov
scas
mul
pop
lods
xchg
xchg
dec
pop
imul
xor
sub
dec
fwait
repz
ret
xor
sti
lret
mov
and
inc
dec
enter
push
fiaddl
cmp
mov
sahf
dec
jge
in
mov
cwtl
bound
xchg
cld
arpl
cmpsb
sub
rorl
mov
shrb
add
and
loope
xor
xchg
addr16
push
and
jb
mov
inc
mov
jne
ja
adc
bound
fnstenv
push
dec
loopne
es
pusha
or
dec
pop
ret
stos
inc
int
shlb
xor
jle
and
mov
adc
lds
jno
lret
bound
jbe
scas
cmpsl
aam
jmp
shlb
xlat
repz
dec
mov
addb
adc
xchg
scas
pop
or
fcompl
mov
into
inc
jo
dec
int
arpl
testb
inc
lods
push
push
test
jo
fnop
jnp
mov
lods
cs
insb
sub
lahf
pop
dec
cmpsl
imul
lock
sub
cwtl
fs
fmuls
lret
in
lcall
cli
test
sbb
es
ret
sub
or
daa
aad
clc
jo
insl
mov
aam
lds
fsubrs
jl
adc
or
js
push
cmp
mov
pop
out
aam
cmp
pop
add
shrl
sub
cmp
cld
fwait
cs
pop
sub
pop
fistl
ret
mov
stos
scas
pop
sub
jl
lea
ljmp
xorb
andl
bound
daa
mov
add
dec
push
clc
push
insl
cmp
jg
gs
sbb
mov
into
inc
fstps
mov
fucomp
je
out
and
subl
mov
imul
lods
mov
sti
jb
lret
hlt
mov
push
push
xchg
fcmovnb
mov
mov
sub
jae
sbb
sahf
or
repz
aad
push
and
loop
data16
and
sub
out
pop
and
in
push
lcall
mov
test
and
jecxz
fsubr
pop
cmp
and
data16
add
outsb
and
push
pop
mov
pop
xor
sub
cli
xlat
faddl
push
or
add
or
loop
je
jl
int
lahf
in
sub
push
aad
int
and
mov
in
out
mov
fwait
movsb
xor
jg,pn
cmpb
daa
dec
dec
push
insl
in
js
mov
adc
jge
pop
fiadds
enter
push
xchg
mov
or
pop
xchg
sti
mov
arpl
pop
call
addr16
push
mov
add
and
xor
sbb
xchg
mov
and
pop
mov
insl
out
fildll
lcall
ljmp
aam
dec
adc
inc
ljmp
mov
cmpl
adc
stos
mov
xor
or
mov
insb
cmp
ret
testb
dec
lock
enter
cltd
fdiv
push
adcb
data16
shll
lcall
dec
je
push
lret
mov
test
enter
push
sbb
mov
gs
adc
jmp
xor
call
iret
mov
push
mov
cmpsl
mov
dec
xchg
aad
mov
pop
rcrb
loopne
push
pop
dec
add
popa
and
stc
idiv
lock
cmp
repz
mov
into
cmpsl
popf
in
xchg
add
test
jbe
mov
pop
sti
int
daa
ficoml
jg
mov
ja
mov
call
flds
sub
icebp
pop
pop
mov
push
adc
scas
push
lock
and
mov
cs
sbb
insb
sbb
cmpsb
lods
lahf
lods
push
pop
xor
lods
cmp
inc
mov
lret
or
idivb
test
cltd
push
mov
iret
loopew
loope
loop
pop
insl
adc
or
lods
mov
sbbl
jnp
push
mov
jbe
add
adc
sbb
loope
and
pop
xlat
fnstsw
aaa
fs
shrl
out
push
rcrb
inc
and
mov
test
xor
mov
or
push
or
mov
jge
add
mov
es
test
and
leave
jle
inc
push
mov
cmpsb
sub
outsl
inc
pop
sub
scas
stos
out
lret
and
mov
mov
push
mov
jo
sbb
push
jmp
out
sahf
or
mov
shrb
test
pop
jg
in
imul
repnz
xor
bound
addr16
int
mov
mov
jle
ds
inc
pop
imul
fdiv
jecxz
insb
adc
push
lcall
loopne
fwait
mov
and
rorl
dec
mov
xchg
aaa
xor
hlt
dec
enter
push
ja
jecxz
mov
popa
cld
push
div
das
mov
fwait
sub
enter
fisttpll
ret
cld
pop
aam
sub
push
pop
fdiv
and
cltd
xchg
ss
or
push
cli
loopne
push
repz
test
mov
jbe
js
xchg
mov
ja
xor
push
jbe,pt
xor
adc
xorl
outsb
shrb
inc
inc
loope
es
stos
fisubrl
ret
imul
dec
xor
aam
xchg
out
test
dec
fistpll
jne
hlt
push
inc
mov
mov
insl
add
std
iret
add
jp
push
mov
stc
pop
pop
mov
cli
xor
insl
inc
enter
xchg
or
repnz
xor
pop
add
cs
decl
push
cld
fsubrs
js
xlat
pop
in
mov
shrl
sub
pop
cli
add
mov
fwait
enter
mov
imul
pop
jp
loope
test
adc
and
arpl
xor
fmuls
xchg
out
int
xchg
and
fdivrs
inc
int
mov
and
lcall
ljmp
es
fsubrs
xlat
xor
sub
inc
hlt
cld
add
xchg
cmp
mov
sub
push
cmpsl
aam
insl
jg
mov
outsl
mov
nop
imul
add
adc
jmp
mov
es
pushl
lea
decb
sub
hlt
hlt
fwait
push
movsb
jae
lods
arpl
mov
rcrb
arpl
shlb
push
or
icebp
jnp
popa
dec
jl
repnz
fldt
sahf
pop
sbb
lock
imul
in
xchg
aas
call
or
movsl
lods
add
testl
xchg
push
enter
pop
popa
int3
xor
fwait
popa
or
mov
pop
movsb
mov
lret
sub
sbb
inc
and
mov
sub
insb
pop
scas
dec
jp
lcall
lock
nop
cmp
into
inc
out
loop
cmp
lcall
pop
jp
lods
xchg
jnp
jmp
cmpsb
cvtps2pi
dec
mov
pop
stos
loop
push
push
neg
xchg
inc
sub
js
mov
in
sbb
aaa
jmp
mov
xchg
xchg
mov
inc
andb
cmpb
sub
in
imul
lret
notb
jnp
in
cmp
cmp
pmulhw
push
idivb
sbb
jl
jecxz
je
sbb
push
fwait
sub
xorl
out
loop
or
and
lcall
cs
in
dec
cmp
rdmsr
leave
lret
and
into
addr16
fildl
xor
mov
outsl
movsl
push
mov
lea
jecxz
add
push
cmp
and
pop
out
andb
inc
js
fldl2t
stc
jb
and
lret
repnz
cmp
lret
dec
ret
push
inc
mov
imulb
movb
jge
and
lcall
jb
out
aas
push
add
addr16
test
sbb
je
popf
scas
cli
push
daa
daa
pop
sbb
mov
es
xchg
jnp
and
jg
jmp
lret
andl
sbb
cmpsb
shll
into
clc
mov
mov
and
cli
cmp
das
dec
lahf
out
repz
sarb
fcoml
addl
test
pop
sbb
mov
aaa
repz
adc
pusha
adc
pop
pop
loop
adcb
xchg
push
adc
stc
jne
mov
add
push
lea
inc
mov
push
xchg
out
mov
in
dec
inc
xchg
dec
jns
iret
sbb
adc
cmp
test
arpl
or
scas
je
int
lock
mov
jns
jg
push
add
leave
xchg
imul
xor
mov
cwtl
rolb
jp
sbb
inc
push
orb
test
test
push
repnz
mov
daa
addb
ss
jl
fmuls
mov
jae
seta
je
js
lods
rclb
add
push
sbb
sahf
xchg
xor
adc
pop
cmp
cmpsl
add
dec
jns
loop
jecxz
pusha
sbbb
lock
in
stos
cmpsl
lock
out
mov
adcl
cmpsl
jge
mov
dec
pop
fldl
inc
push
in
fidivs
pop
or
dec
aam
adc
ljmp
xchg
test
inc
jecxz
jno
or
loop
mov
and
mov
leave
xlat
pop
les
or
out
outsb
aaa
mov
pusha
jmp
subb
jge
adcl
sbbl
cmp
arpl
or
sahf
xor
dec
aaa
xor
push
rcrb
push
outsb
fcomi
inc
fwait
out
mov
add
sarb
xor
rorl
fcmovne
xchg
xchg
cmpsl
jge
sbb
les
ret
cmp
mov
pusha
outsb
sbb
cmpsl
arpl
roll
push
pop
jne
outsl
repz
pop
clc
incb
hlt
dec
dec
movsl
pushf
or
incl
inc
inc
jbe
loopne
cwtl
adc
out
fists
jmp
ljmp
xchg
cmp
jmp
test
jb
enter
or
pop
add
jne
je
xor
lcall
ficoml
xchg
sar
xchg
sbb
aam
adcb
call
sub
cmp
cmp
xlat
out
push
jge
xchg
cli
dec
and
fmulp
das
mov
and
sub
test
lods
rorb
pop
shll
pop
lods
mov
or
mov
mov
lret
and
mov
mov
xor
push
call
fcomip
push
xlat
or
enter
repnz
mov
leave
mov
xchg
sbb
pop
fcomps
add
pop
adc
and
pop
xchg
xor
jmp
sbb
insb
pop
cmc
and
mov
inc
push
cmc
sahf
lahf
loop
push
shrb
lock
addr16
xchg
push
or
stos
fcomp
sub
fwait
sbb
add
push
push
arpl
pop
sbb
ljmp
xchg
fisubs
xor
mov
push
cltd
cmp
xor
fucomp
sub
fldcw
cmp
inc
mov
pop
insl
mov
dec
and
dec
jmp
scas
jbe
and
push
mov
xchg
fcmove
cs
pop
shlb
xchg
pop
lret
jmp
or
pop
and
cmpsl
mov
inc
cltd
xor
add
cmpl
inc
ror
movsl
mov
dec
mov
sbb
mov
jnp
std
dec
jge
add
mov
bnd
dec
stos
pop
jne
dec
decb
push
stos
jns
push
jl
adc
lds
jne
loop
xchg
dec
out
das
rcrb
mov
iret
or
sarl
fidivs
xor
sbb
das
and
out
les
pop
rcrb
push
mov
scas
inc
mov
or
cmp
out
sbb
and
push
xlat
aam
cmc
loopne
sub
push
pop
lcall
fcmovb
dec
xchg
mov
or
push
or
jns
jno
ret
addr16
vpmacssdqh
repnz
pop
pusha
push
test
out
imul
out
cmp
pop
dec
or
sub
pop
jp
ret
xor
sub
sbb
sti
orb
xchg
mov
jge
je
dec
shl
mov
push
adc
cmp
mov
cmpsl
cltd
mov
int3
test
inc
ret
dec
divl
add
fxch
jb
adcl
dec
daa
mov
ja
pop
sub
inc
xor
mov
and
mov
imul
repz
fists
xor
jg
push
or
subb
imul
stos
in
rolb
dec
or
mov
dec
out
mov
dec
inc
pop
sti
or
xor
xchg
dec
arpl
xchg
nop
cmp
cld
mov
inc
add
mov
js
in
cmp
fnstenv
cmp
int
inc
pop
inc
pop
aas
inc
xor
dec
or
push
pop
ljmp
sahf
das
jecxz
push
rclb
orb
in
or
and
insl
and
jo
sahf
xor
mov
call
cmc
jle
out
js
push
mov
mov
pop
add
icebp
xchg
pushf
pop
sbb
repnz
jp
xchg
mov
pop
jge
or
cmpsb
scas
push
leave
mov
jp
pop
xor
pusha
and
mov
pop
iret
adc
xchg
into
fiaddl
pop
pop
je
enter
adc
lret
lret
cs
sbb
cld
cmpl
out
sahf
xor
outsb
add
xor
pop
lahf
push
sub
lret
rcrl
sti
mov
sub
cmp
test
xor
loop
cmpsb
in
add
or
lret
mov
fwait
push
or
test
fisubl
xchg
adc
pop
sbb
jl
add
mov
add
adc
cmpsb
nop
test
int3
push
scas
aam
hlt
jo
pop
push
enter
jae
mov
jge
scas
out
pushf
imulb
test
xor
sysenter
jno
push
lods
int
ret
sti
pop
and
add
subl
or
ljmp
cmc
stc
in
xchg
loopne
push
mov
cmp
icebp
cmp
mov
lods
cwtl
xchg
gs
das
sbb
cli
mov
andl
jge
xor
stc
fstpt
int3
cmp
hlt
sbbb
lock
arpl
outsl
aaa
mov
int3
pop
call
test
add
adc
xor
test
stos
add
jmp
and
orl
inc
jmp
testl
pop
in
insl
into
cmp
sub
and
lods
in
lcall
icebp
out
leave
cltd
mov
sbb
popa
jns
pop
dec
dec
pop
pop
popf
sub
repz
mov
int
push
push
adc
mov
cmp
or
add
pop
sar
fsubl
enter
data16
xchg
xor
dec
shlb
jns
pop
xchg
push
shll
ds
cmp
sub
and
or
jo
jg
pop
lds
jecxz
dec
sbb
imul
push
push
mov
add
test
sub
aam
dec
arpl
loop
pop
jae
push
in
push
rolb
cwtl
pusha
fisttpl
loop
jnp
jb
fwait
xlat
jne
cmp
pop
insl
push
les
mov
mov
int3
fwait
outsl
cmpsl
adc
cwtl
ja
inc
out
div
push
mov
fldl
into
push
pusha
jo
pusha
sahf
xchg
mov
mov
mov
shlb
andl
cmp
fwait
xchg
push
xchg
adc
loopne
xor
andl
clc
not
sbb
stos
xchg
inc
lcall
lahf
shlb
sub
and
call
jg
daa
dec
mov
popf
mov
cmp
adc
pop
sbb
testb
push
or
mov
mov
sbb
push
add
xor
in
jmp
jl
xchg
jb
mov
mov
adc
push
mov
pop
scas
sbb
xlat
rcll
cltd
ljmp
outsb
cli
ret
sbb
dec
and
dec
adc
pop
and
lea
inc
mov
out
cmp
mov
inc
pop
mov
in
cltd
dec
jge
mov
inc
pushf
push
push
test
jnp
outsb
push
rcll
xchg
test
push
push
iret
fmuls
int
addr16
push
gs
sarb
sbb
in
or
jmp
inc
shrb
out
sub
or
sbb
add
jne
jmp
cli
sbb
in
in
or
repnz
stc
repz
sbb
xchg
sub
mov
dec
dec
mov
mov
add
negb
aas
inc
xchg
cli
pop
sub
lret
out
out
and
add
xchg
in
enter
dec
or
lods
pop
sub
cmpsl
mov
jnp
or
in
inc
pop
mov
hlt
icebp
push
mov
into
fisttpl
arpl
clc
push
test
arpl
dec
jmp
js
inc
pusha
jbe,pt
sub
sbb
mov
mov
mov
cmp
call
pop
test
add
inc
adc
xor
das
push
roll
mov
push
xchg
inc
cld
andl
inc
jmp
sbb
test
loop
lods
int
add
movsb
aam
cli
jmp
mov
xchg
pop
addr16
out
push
and
adc
sub
fldcw
lods
cmpsb
lret
aad
mov
hlt
fadds
mov
dec
rcrl
decb
je
inc
lea
xor
xchg
ja
cmp
test
xchg
scas
xchg
test
leave
pushf
inc
cmp
inc
and
insl
fisttpll
sahf
jno
into
dec
call
xchg
pop
lods
lea
popa
dec
idiv
cmp
fisubl
pop
jbe
das
adc
imul
mov
pop
lea
jbe
inc
out
and
jbe
arpl
xchg
pop
sub
cmp
aad
cmp
aaa
mov
cld
inc
sbb
daa
inc
int3
rep
scas
arpl
dec
scas
in
push
lods
push
xor
clc
scas
cmpsb
push
xchg
xor
pushf
lock
xchg
cmpsb
ds
stos
adc
inc
xor
pop
and
dec
addb
pop
or
pop
adc
sub
mov
lods
lds
mov
mov
stos
test
xor
lock
sub
sub
xchg
fcomip
leave
shll
popa
sbb
out
sti
xorl
fs
rcl
xor
jmp
imul
pop
or
xchg
pop
test
fdivrl
das
fwait
out
and
aad
cmp
pop
jnp
mov
jl
mov
or
xchg
jns
daa
mov
stos
scas
push
sti
or
or
fidivs
scas
shrl
xor
mov
test
add
xchg
xor
jbe
test
add
or
jp
ja
fs
jp
mov
aas
adc
cmp
pusha
scas
dec
adc
repz
fwait
mov
pop
adc
fidivrs
ret
fiadds
or
mov
in
fcmovnu
and
sahf
mov
insb
jecxz
and
aas
sbb
dec
push
in
pop
int
sahf
in
in
sahf
mov
cmp
pop
push
mov
repnz
out
xchg
mov
mov
js
xchg
pop
shr
popa
mov
jmp
push
jg
mov
pop
jmp
inc
xor
mov
out
pop
adc
repz
mov
cmc
push
pop
ja
mov
cmpsb
or
out
ja
aam
pop
ftst
fsubrl
test
xchg
and
ss
out
pop
xchg
push
dec
mov
lret
push
sbbl
sbb
cmp
mov
push
xabort
adc
mov
sar
jl
test
scas
outsl
sbb
mov
scas
fs
arpl
xorb
pusha
cwtl
in
inc
and
xor
pop
and
pushf
pop
jb
mov
insb
mov
imul
xor
in
scas
int
in
pop
lock
cld
into
icebp
jae
lcall
push
pop
or
daa
aaa
mov
cmp
loop
aaa
pushf
sarb
sbb
push
push
mov
arpl
push
mov
xchg
sub
sub
std
and
fisttps
or
fs
sahf
js
inc
cmp
inc
lea
jb
adc
fwait
movsb
xchg
into
insl
pop
daa
adc
xor
ret
in
sti
cmp
popl
cmpsb
jle
mov
dec
jb
mov
mov
ja
std
dec
popf
movsl
pop
xchg
dec
mov
lds
pushf
fs
adc
mov
cmp
test
aaa
popa
ja
push
stos
daa
sti
sarb
push
mov
add
insl
loope
idiv
test
mov
shll
call
cld
mov
insb
xchg
mov
dec
stc
mov
testl
or
dec
dec
shlb
pop
xchg
out
fisttpll
daa
js
xor
ja
cli
pop
outsl
sub
outsl
scas
jne
and
lock
mov
jp
mov
pusha
lea
pop
fdivrl
adc
rep
insl
push
mov
xor
sti
lods
or
leave
inc
jp
sub
dec
jnp
lock
inc
inc
lods
inc
cmp
xor
cmp
ds
cmp
decl
stos
test
adc
cmpsb
leave
jae
rclb
cmpsb
mov
icebp
or
jg
and
push
cmp
mov
jg
xchg
inc
stos
in
mov
inc
jne
or
or
mov
adc
adc
jmp
mov
pop
or
mov
xchg
pop
push
jmp
arpl
icebp
jge
sub
xor
fcomps
call
inc
xor
mov
xor
cmpb
cmpsb
and
cmp
or
mov
orb
mov
push
out
xor
fdivrp
test
clc
adc
std
addl
sbb
loope
pop
cmp
jl
jne
mov
jae
pop
lret
iret
cmp
pop
imul
push
lock
dec
ret
ss
mov
and
or
mov
lock
fdivrl
or
fisttpl
add
popa
jno
std
sahf
pop
cld
mov
or
mov
stos
loop
fsts
mov
or
insl
test
and
ret
mov
mov
int3
and
sub
cli
or
rorl
fs
int3
imul
lea
cmp
mov
pop
ljmp
jecxz
lahf
sub
into
pop
add
adc
fs
pop
push
loopne
mov
stos
cld
gs
add
pop
jg
in
dec
mov
adc
cmp
xor
inc
fidivs
lea
ret
xor
rcl
negl
xor
or
and
xchg
pmaxub
mov
push
leave
pop
push
aad
orps
rcrl
bound
arpl
inc
xchg
sbbl
fisttpl
iret
stos
and
cmp
add
js
ret
dec
jmp
cmp
push
aaa
adc
es
lods
dec
push
mov
addr16
rclb
xor
push
push
adc
lahf
jge
nop
pop
jmp
xor
ret
test
pop
insl
add
hlt
in
dec
aas
adc
sub
xor
or
addb
js
sti
push
mov
stos
roll
fidivl
es
enter
push
into
hlt
les
aaa
popf
out
adc
in
in
or
insb
ss
push
sub
ret
xchg
jmp
nop
xchg
sub
ret
mov
imul
enter
adc
inc
sahf
pop
ret
or
mov
enter
orl
ja
out
xchg
lret
in
push
fsubs
stos
into
xchg
dec
cmpsl
rorb
popa
stos
rcr
push
mov
dec
movb
pop
jle
cmpsb
or
inc
mov
daa
xchg
jmp
adc
pop
inc
or
dec
imul
ss
je
fadds
pop
lret
mov
mov
pop
out
push
dec
dec
cmp
andb
icebp
mov
inc
inc
int3
enter
pop
stos
test
pop
push
das
xor
dec
pushf
lds
jp
add
jo
mov
adcb
fcmovnb
lods
jne
sbb
jecxz
mov
pop
mov
sbb
jnp
dec
pop
xor
sub
inc
mov
pop
aad
sbb
cli
add
xchg
lret
shll
fcoml
sub
push
mov
sub
std
sub
mov
testb
xchg
pop
test
loope
into
push
pop
andl
lock
jmp
xchg
pop
sahf
aad
movsl
hlt
and
cmp
mov
sub
scas
test
shll
outsl
jne
and
orb
cmp
clc
mov
mov
and
mov
add
lret
loope
xor
fmuls
sahf
loope
or
add
jo
pop
xlat
sbb
stos
cs
cmp
cmp
push
lahf
jns
mov
test
js
add
push
into
xor
hlt
shrb
or
xchg
mov
fidivrl
idiv
xchg
ficoml
jno
jnp
popf
cli
xchg
mov
push
je,pt
add
adc
mov
movl
outsl
loope
jge
sbb
mov
call
incb
mov
sub
out
xor
mov
adc
ljmp
stc
push
or
and
lods
pushf
aad
jb
enter
cmc
arpl
dec
call
xor
sar
cltd
out
cltd
jne
aaa
mov
out
call
xchg
in
into
popf
inc
inc
lock
lods
mov
mov
jmp
out
imul
mov
into
mov
mov
ret
into
xor
clc
mov
mov
ret
pop
in
addr16
lret
mov
call
sbb
jne
mov
add
add
mov
fdiv
jmp
push
pop
sbb
jp
dec
fwait
js
pusha
push
jl
mov
and
mov
int
cld
cmp
mov
addr16
outsb
lods
sub
loopnew
add
and
rol
cli
sub
push
push
mov
mov
dec
inc
roll
xchg
lds
cmp
int
fiaddl
inc
lea
stc
andl
rclb
testb
jl
adc
xchg
push
jo
ss
jg
call
jne
jnp
pminub
or
mov
xor
mov
cmpsb
popa
add
jge
sbb
sbb
movsb
addl
lock
icebp
icebp
push
dec
pop
das
arpl
das
jl
sahf
loope
notb
push
cmp
adc
cwtl
fs
push
add
adc
xor
test
inc
push
xor
imul
mov
andb
cli
std
scas
mov
push
insl
mov
lods
mov
inc
mov
fwait
std
lret
fcomps
out
iret
or
mov
cmp
adc
add
ljmp
push
jp
jne
int
divl
xchg
int
ds
inc
clc
movsl
movsl
pop
insl
jbe
aas
add
mov
and
ret
cs
scas
push
gs
push
and
stc
ds
sbb
inc
nop
mov
sbb
mov
movsl
and
out
xor
enter
xlat
lcall
andl
in
inc
js
repz
out
dec
aad
mov
out
cmp
sub
imul
sub
mov
jmp
rorb
adc
aad
push
sbb
pop
mov
and
mov
loope
add
jb
and
and
mov
or
xchg
push
mov
in
pop
add
xor
dec
aas
cmpb
int
and
pushf
ret
ds
dec
sahf
pop
cmp
stos
jb
mov
push
mov
pushf
jnp
je
xor
push
mov
test
mov
mov
xchg
clc
js
sbb
cli
pop
mov
ret
mov
push
outsl
mov
psllq
add
xchg
outsb
pop
add
xchg
xchg
dec
jle
xor
push
sbbb
jl
adc
xchg
cmpsl
ret
rcrb
fists
clc
xchg
cmp
pop
mov
cltd
xchg
ret
mov
mov
pushf
rorb
mov
adc
xor
xchg
lea
popf
mov
sbb
fwait
jmp
mov
mov
pusha
lret
lret
arpl
dec
mov
inc
mov
cmp
mov
inc
adc
push
sub
or
lahf
adc
std
mov
fst
popa
pop
adc
cmp
dec
push
rorl
ljmp
mov
adc
fs
and
insb
pop
adc
pop
stos
or
mov
jl
out
sbb
mov
jge
mov
push
pop
ss
cmp
stos
insl
jp
push
aas
inc
push
mov
sub
push
and
data16
and
pop
dec
aam
sbb
mov
out
fwait
repz
cltd
cs
pop
int
lods
sarb
ss
dec
pop
push
xor
imul
cmp
xchg
icebp
leave
dec
or
sbb
popf
inc
jns
les
lea
add
int3
cmp
aas
xor
insb
cmc
or
adc
imul
fs
mov
push
lret
dec
pop
or
outsb
and
sbb
outsl
lods
fwait
mov
adc
pop
sub
add
pop
push
push
adc
shl
andb
les
add
ror
daa
xchg
pop
lock
into
inc
scas
out
inc
idiv
cmp
sub
pop
xchg
xchg
pop
xchg
inc
test
test
mov
pop
sbb
and
hlt
xchg
into
std
push
aad
or
dec
aaa
dec
mov
testb
test
shll
out
imull
cld
mov
jg
lods
lods
aad
fisubs
lds
add
inc
arpl
jo
ror
xor
enter
sub
add
dec
call
cmp
aad
mov
or
sahf
stos
and
cltd
ficoml
int
in
xor
movsb
je
or
cmp
mov
mov
or
jl
ja
push
insb
scas
push
xor
scas
int
push
mov
inc
cmp
adc
and
cmp
ljmp
fdivl
insb
test
in
mov
xor
mov
push
dec
out
jb
daa
je
fiaddl
xchg
jle
and
ljmp
jbe
ds
adc
loop
and
idiv
stos
cmp
adc
cld
sub
push
ret
xor
mov
pop
push
lcall
ljmp
xor
int
pop
sbb
dec
xor
mov
dec
pop
push
dec
scas
adc
mov
mov
mov
bound
sub
or
scas
xor
pop
mov
push
mov
fs
xchg
push
xor
push
ss
push
jbe
or
int
test
sub
xchg
xchg
add
addr16
cltd
fimuls
cmpsl
push
mov
out
fnstcw
and
push
shr
adc
clc
and
inc
xor
adc
sub
xor
push
mov
out
ja
jl
add
negl
faddl
outsl
pop
xor
fwait
sub
sub
or
sbb
and
pop
cwtl
jbe
stos
jle
jl
mov
aad
movaps
popf
jo
pop
negb
lret
loop
leave
outsl
pop
or
jmp
out
pop
cmpsl
inc
mov
enter
daa
lret
in
xor
stc
clc
jno
dec
fwait
xchg
xchg
sbb
popf
ret
sub
mov
xor
inc
daa
pop
push
ljmp
arpl
cs
sbb
xorb
jbe
cli
adc
shrb
sbbb
arpl
xor
mov
sbbl
lcall
add
icebp
xchg
jle
repnz
adc
jbe
cli
push
push
sti
addr16
adc
jge
icebp
and
popa
xor
pop
int3
repz
xchg
stos
lret
idiv
ret
ss
flds
or
clc
imul
stos
das
sub
daa
mov
dec
sub
sbb
shlb
cltd
pop
pushf
push
inc
xor
xor
mov
test
sbb
mov
nop
jp
adc
outsb
dec
sub
rcr
cld
cltd
or
xor
mov
nop
je
jbe
push
mov
cmp
insl
scas
dec
daa
add
gs
inc
dec
xor
enter
ds
mov
test
sbb
jnp
add
pop
dec
cmp
ss
mov
xor
dec
push
dec
mov
adc
test
and
ret
out
push
sub
xchg
cmp
lods
push
cli
sbb
and
sub
lcall
ljmp
inc
mov
or
sub
loopne
cwtl
jne
mov
cmp
mov
das
mov
mov
sahf
sub
and
and
push
push
aam
xor
rorl
cli
add
mov
es
and
gs
repnz
adc
jnp
loop
dec
mov
out
andl
negl
sbb
and
frstor
scas
mov
and
clc
pop
pop
mov
fdivl
sub
and
add
dec
insl
push
clc
mov
mul
sbb
test
hlt
add
test
lock
xor
add
loopne
dec
or
push
js
xor
cmp
loope
movsb
enter
mov
mov
jne
pop
insb
outsb
mov
clc
mov
dec
mov
xor
pop
fwait
bound
sbb
leave
ja
push
mov
icebp
cmp
ljmp
add
loopne
js
push
xchg
jae
xchg
mov
fimull
mov
lcall
dec
xchg
push
mov
insl
lgs
jns
ss
sub
or
xchg
es
mov
adc
mov
shll
stc
sbb
pop
push
push
jmp
cwtl
mov
push
lcall
jns
xor
jno
mov
add
and
dec
lods
xchg
ja
insb
push
push
dec
push
sbb
lods
cs
loope
or
or
adc
imul
dec
lds
pop
dec
mov
mov
jl
hlt
add
pop
xchg
fstl
pop
inc
insl
test
repz
xorb
arpl
pop
rcll
jne
sub
push
push
or
repnz
jnp
push
je
and
inc
cmp
sbb
pop
nop
cmp
sbb
mov
push
bound
or
mov
adcb
mov
and
xchg
or
les
push
aaa
lcall
mov
cmc
ds
pop
sbb
lcall
imul
cmpsb
out
ja
repz
or
and
cs
pop
call
inc
push
mov
or
rcr
clc
or
testb
in
push
jle
orb
rclb
mov
cmp
cmpsl
mov
sub
pop
jp
or
or
sahf
pop
push
in
call
adc
test
sub
lock
dec
insb
add
dec
scas
std
pop
ss
adcb
arpl
addl
in
xchg
cmc
pop
loopne
jg
push
jge
push
ret
sbb
les
jo
mov
jns
cmp
pop
sbb
mov
int3
imul
jb
xchg
pop
jae
xlat
into
scas
js
aam
jg
orb
pop
and
movsb
iret
les
int3
gs
pop
aam
push
pop
imul
jno
jle
add
ret
addl
xchg
insl
xchg
pop
outsl
aad
mov
mov
das
mov
movsl
iret
ljmp
mov
loop
movsl
dec
dec
mov
pop
scas
sbb
int3
jne
mov
mov
mov
aam
and
mov
icebp
pop
xor
lea
dec
or
jb
orb
cmp
xor
testb
std
adc
cs
or
cmp
les
test
mov
pusha
arpl
adc
xchg
nop
sub
test
in
ret
call
mov
jno
push
daa
cltd
adc
xor
not
fidivrl
pusha
push
iret
mov
stos
or
fwait
add
mov
fstl
rcll
cmp
ret
mov
xchg
push
sbb
sbb
inc
xchg
insl
adcb
arpl
je
pop
push
fidivrl
adc
stos
mov
sti
popa
xchg
insb
lret
xor
fstp
pop
addb
clc
ret
rorb
push
cmpsb
mov
fiaddl
push
clc
dec
aam
dec
pop
sbb
ljmp
and
std
adc
inc
or
popa
test
pop
add
and
and
out
mov
ss
lret
push
dec
and
cmc
js
fidivl
adc
ror
push
pop
dec
dec
fdivrp
fdiv
mov
roll
mov
loop
clc
inc
and
sbb
mov
xchg
adc
hlt
mov
hlt
addl
sbb
mov
cs
push
mov
popf
popf
push
inc
and
lods
xchg
fidivrs
in
sahf
dec
or
ret
ds
stc
lods
push
jge
shll
roll
lods
loope
jns
dec
xor
lret
loope
pop
xor
shl
insl
sbb
int
lret
enter
jmp
iret
in
xor
sahf
cmp
add
lret
popa
xchg
and
scas
out
sbb
jp
cs
sahf
out
sbb
push
or
paddw
clc
movsb
movsl
adc
out
repnz
repz
aam
cmp
or
call
push
outsb
mov
mov
pusha
rclb
inc
sti
out
dec
push
into
push
adc
add
test
mov
pushf
dec
out
mov
mov
sbb
mov
xor
sub
cwtl
loope
sahf
mov
lret
dec
rcr
iret
mov
inc
xlat
pop
aam
fcmovnu
inc
inc
sbb
jbe
arpl
cmp
in
mov
jo
add
jo
imul
frstor
inc
dec
inc
adc
mov
std
mov
das
add
mov
test
int3
out
repz
loope
scas
mov
imul
mov
imul
pop
cmpl
xchg
jno
lods
inc
icebp
cmp
fistpl
out
mov
mov
jae
dec
adc
pushf
and
or
addb
fwait
stos
orl
fucomi
aam
xor
mov
aam
pop
push
fimuls
jge
adc
mov
push
sub
jne
neg
push
mov
xchg
jg
xchg
lods
fwait
sbb
js
jge
sbb
fwait
sub
jns
add
push
orb
cmp
or
fdivp
rclb
aas
ds
cwtl
icebp
inc
cltd
mov
test
shll
mov
cmp
mov
jno
rorl
or
lds
into
push
jl
add
das
mov
mov
jno
or
cmc
ljmp
or
xor
stos
test
xchg
pop
sub
mov
mov
shl
les
pop
test
push
inc
mov
insb
fdivrs
mov
enter
cmpsb
adc
shll
fdivrp
clc
adc
rcr
mov
and
jge
xor
ja
shll
ret
in
cs
cmp
jne
clc
xchg
fwait
sbb
mov
cltd
cmp
imul
daa
push
fmull
fstpt
aas
push
dec
pop
icebp
adcb
add
insl
xlat
jb
call
sbb
aaa
sbb
aam
pusha
pop
or
js
popf
or
popf
xor
test
cmp
mov
and
out
addb
outsl
movsl
movsb
adc
sbb
loop
inc
data16
lret
scas
int3
loop
jb
push
sub
enter
cmpsb
add
pop
pop
add
mov
ret
pop
lods
lea
xor
mov
push
lods
mov
inc
push
dec
rolb
xor
aam
adc
mov
into
jne
add
lret
dec
sub
cmpsb
fmull
jp
mov
jbe
mov
push
push
xor
sub
jae
data16
ret
fwait
aas
rclb
int3
es
xor
scas
push
xchg
jmp
fiaddl
ljmp
push
test
and
out
ret
imul
movsb
jae
outsl
and
std
aaa
xor
or
in
out
lea
or
cli
jbe
mov
cmpsl
push
jg
inc
cmp
inc
xlat
inc
sbb
sbb
pop
pop
test
mov
cwtl
and
jmp
and
rcl
cwtl
mov
lea
idivb
into
pop
cmp
add
scas
mov
addb
adc
cmc
cmp
xchg
shll
rclb
aam
test
xchg
cli
or
ret
mov
pushf
rclb
sub
xchg
push
jmp
xchg
outsl
mov
sbb
repnz
dec
mov
jge
frstor
arpl
adc
daa
aad
mov
inc
push
shr
xor
xchg
test
add
insl
sbb
mov
cmpsb
into
lods
sub
inc
jnp
add
sub
fidivrl
call
mov
cmp
iret
xlat
cmpsl
cltd
push
and
xchg
fs
pop
and
outsl
ds
mov
dec
push
and
les
lods
notb
aam
mov
adc
loope
mov
xorl
arpl
sbb
ja
and
jbe
fstl
movsb
add
jmp
xchg
scas
lret
sub
push
sub
cmp
add
mov
dec
mov
jle
jae
cmp
and
dec
pushf
ret
pusha
push
cmpsl
pop
loop
cmpb
or
orl
adc
sbb
call
mov
fildll
jbe
rorb
fwait
pop
xchg
pop
sbb
sti
gs
mov
push
pushf
mov
subl
sbb
sub
shr
lret
jl
sbb
and
jmp
out
frstor
xor
or
sub
xchg
pop
mov
insb
add
cs
fisttpl
sbb
shlb
cwtl
imul
pop
in
inc
jb
xor
pushl
pop
push
loop
ret
jle
fiadds
xchg
loopne
mov
and
aaa
sub
xchg
popa
jb
shl
xchg
xchg
fsubrl
stos
repnz
xor
pusha
stos
cwtl
or
pop
pop
jg
mov
jge
hlt
jno
jae
jbe
dec
popa
mov
lods
xchg
sub
cmpsl
fistpl
or
ret
mov
adc
jmp
mov
cmp
pop
hlt
bound
sti
mov
push
shll
mov
lret
jb
popf
andb
sub
dec
jg
and
jg
xchg
mov
cld
jo
cmp
fistps
pop
push
dec
cmp
sbb
lret
push
sbb
ss
test
dec
adc
cmpsb
inc
or
dec
cli
push
jo
aaa
imul
xchg
jmp
aam
shr
fld1
mov
std
inc
fimuls
outsb
ljmp
mov
scas
or
jge
push
bound
push
loopne
jecxz
or
xlat
mov
pop
out
nop
jecxz
sub
mov
fsubrp
and
or
pushf
inc
push
mov
push
xchg
in
push
mov
mov
sub
jno
mov
or
andl
test
in
sbb
xchg
pusha
jnp
adc
pop
rorb
pop
pop
adc
das
mov
push
rcrb
mov
sub
nop
mov
pop
out
mov
sti
bound
mov
mov
lods
cwtl
push
repz
jecxz
mov
mov
push
movsb
xor
sbb
pop
pop
mov
ret
pop
dec
push
mov
or
out
pop
outsl
divb
popa
inc
fnstcw
in
out
andb
fdivl
ja
mov
pusha
fsub
pushf
lret
push
pushf
lahf
xchg
in
lea
sbb
sahf
dec
ljmp
in
mov
inc
cli
std
push
loope
inc
shr
shll
cmp
jbe
mov
push
out
adc
sub
inc
mov
cmp
adc
cltd
cmp
icebp
mov
sub
loop
js
aam
fisttpll
mov
pushf
pop
ficomps
fldenv
jge
lods
cs
jnp
adc
sub
lcall
outsl
or
test
repnz
popf
mov
push
mov
add
or
std
pslld
loop
lret
mov
fsubr
push
inc
jbe
fnsave
popa
cmp
iret
adc
popf
pop
lds
jl
mov
mov
push
ja
cmp
outsb
cmovo
jecxz
clc
jge
lret
pop
gs
or
pop
pushf
dec
mov
fwait
cmp
inc
aam
scas
cmp
inc
jbe
mov
adc
scas
mov
sub
and
fidivrl
leave
mov
mov
jecxz
data16
sbb
pop
dec
out
les
pushf
insb
loopne
nop
out
fwait
insl
dec
inc
in
cld
xor
test
adc
xchg
cmp
fstl
jns
push
sbb
and
cltd
mov
mov
sbb
movl
mov
andb
mov
push
nop
mov
aas
pop
divb
push
sub
shrl
sbb
adc
push
sti
in
sbb
mov
stos
rorb
jle
add
movsb
iret
xchg
pop
and
inc
fdivrl
outsl
xchg
lret
mov
and
test
and
or
sti
mov
xchg
lret
jne
into
dec
xchg
fdivp
jecxz
and
mov
sbb
jno
pop
adc
stc
jb
mov
mov
sub
sub
das
sub
data16
sahf
xorb
inc
push
enter
xchg
aam
sti
jecxz
sti
inc
test
push
jge
pop
or
sbb
fldcw
sbb
sahf
hlt
aaa
scas
testl
in
pop
inc
loopne
xor
sbb
dec
rcrb
sbb
sbb
and
js
in
ficomps
aam
popa
out
pop
jp
add
shrb
adcl
jns
and
mov
rorl
mov
jp
fcmove
adc
mov
loop
jae
or
enter
and
pop
and
dec
sti
push
outsb
mov
repz
clc
pushl
add
insb
sbb
aaa
jnp
xchg
sbb
xchg
test
sbb
into
mov
fwait
xor
xchg
mov
cmpb
in
loope
jl
xor
jle
sub
lret
mov
sbb
insl
pop
mov
pop
jne
xchg
mov
fsubp
nop
dec
push
mov
icebp
mov
sbbb
mov
sar
sarb
adc
loope
jbe
add
jecxz
sub
fildl
xor
in
clc
and
aaa
aad
mov
outsl
in
mov
arpl
jmp
push
mov
dec
xchg
jb
sahf
mov
sub
test
ljmp
cs
sbb
vphaddwq
lods
imul
mov
jbe
adc
sbb
inc
stos
rorl
xor
or
enter
sub
xor
sub
test
sub
int
fwait
adc
ret
sub
sbb
push
scas
cmc
push
inc
and
pop
xchg
into
cmp
jg
mov
pop
sub
pushf
leave
xor
fwait
push
rcr
xchg
popl
push
push
fs
repnz
sahf
mov
in
jnp
fisubrl
sbb
negl
lods
add
mov
std
outsl
fst
add
jp
sbb
push
push
or
sub
mov
and
jb
in
jno
xchg
cmp
iret
sti
pop
mov
xor
repz
insb
repz
inc
push
sub
xor
dec
sbbb
int3
popl
loop
dec
ret
push
lret
loop
pop
ja
mov
cmp
les
sar
dec
add
mov
jle
iret
push
lea
std
or
and
imul
dec
shrb
push
fadd
cli
mov
cltd
push
cmc
popa
pop
popa
cmc
push
jge
test
mov
rolb
test
repz
push
xor
movsl
scas
cmpsl
inc
sbb
dec
mov
pop
pop
push
jne
dec
shld
push
lds
fs
test
push
mov
icebp
and
jo
outsb
and
clc
mov
in
cmp
push
and
out
stc
adc
mov
xchg
fucom
rorl
jl
cmp
xchg
push
dec
iret
mov
int
add
jno
mov
aad
mov
psubsb
add
adc
push
mov
sbb
mov
leave
sub
sar
lea
jmp
fimuls
push
xchg
adc
lock
xchg
push
mov
and
xlat
jno
clc
pop
push
aam
xor
repnz
push
lcall
inc
xor
mov
mov
pop
lods
hlt
sbb
lret
inc
inc
in
frstor
jns
fwait
into
jno
out
cli
push
jmp
mov
repz
dec
fdivrp
stc
out
xor
inc
icebp
push
pop
xor
stc
pusha
cmp
xor
imul
incl
movl
gs
sti
daa
xchg
std
pop
add
cmpl
sbb
and
nop
adc
clc
pop
cmpsl
mov
bound
insb
loopne
out
out
mov
gs
dec
ja
xlat
rcrb
aad
xlat
adcb
fs
je
stc
add
mov
lahf
jae
xchg
xlat
aam
and
xor
daa
mov
jmp
pusha
sub
loop
lods
mov
or
stc
fwait
je
leave
add
jne
pop
jp
ja
sbb
mov
pop
adc
add
jae
ret
xchg
pop
mov
lcall
std
rcrl
xchg
out
cld
xchg
andl
arpl
cmp
inc
inc
xchg
sbb
or
xchg
sbb
mov
cs
aaa
inc
cmpsl
sbb
mov
imul
dec
decb
mov
je
jp
mov
jb
adc
fwait
mov
jae
and
pop
out
push
or
in
dec
les
ljmp
ljmp
xchg
dec
lea
shl
nop
cmpsl
fcoml
in
dec
call
shll
adc
dec
mov
mov
sub
ret
mov
push
lcall
jl
push
loope
dec
roll
pushf
adc
add
mov
out
push
xor
xchg
hlt
mov
popf
pusha
and
sti
xlat
sub
sbb
int3
je
fnstenv
inc
xor
testb
test
mov
repz
mov
sub
push
jnp
shlb
mov
xchg
dec
mov
fdivr
inc
testb
or
repz
mov
mov
adc
nop
cmpsb
jmp
nop
das
adc
mov
loop
dec
cmp
or
aad
pop
imul
pop
push
push
in
movsl
sub
adc
scas
xchg
or
jno
mov
fstl
addr16
bound
mov
sub
add
repz
add
insl
insb
leave
rcll
lret
add
sub
jno
mov
cmp
add
test
ja
sbb
cmp
pop
or
xchg
pop
push
repnz
cmp
or
cltd
inc
pop
or
inc
or
mov
into
les
xchg
or
or
subb
mov
push
ret
in
mov
scas
aas
lcall
sbb
sub
ja
cmp
aad
ljmp
aas
shl
aaa
sbb
xchg
inc
fwait
jle
fucomi
add
mov
sub
lea
xchg
inc
xchg
jnp
and
pop
outsb
shrl
xchg
pushf
pop
xchg
xchg
jne
jecxz
in
and
dec
pusha
mov
and
and
pop
mov
pushl
aas
cmp
jns
jb
lcall
xchg
int3
dec
or
adc
aas
xor
adc
sbb
xor
dec
popf
adc
pusha
xlat
push
enter
mov
push
add
cmp
pop
jmp
dec
inc
lock
ljmp
mov
push
mov
daa
mov
data16
testl
ja
mov
pop
sub
push
mov
or
int
push
cltd
mov
sbb
vprotw
push
push
bswap
inc
aaa
push
mov
mov
in
mov
out
mov
mov
xor
dec
pop
mov
push
jo
orb
fwait
dec
jae
in
dec
mov
in
lods
mov
sub
mov
mov
nop
inc
sub
mov
cmpsb
leave
mov
les
push
sub
pop
jge
aad
sbb
stos
movsb
jne
jp
stos
or
push
jl
jbe
jo
arpl
sbb
and
setp
mov
ds
loop
enter
adc
cmp
sbb
ja
enter
lret
mov
pop
cmc
jle
das
cmp
mov
jns
pop
fildl
adc
sbb
stos
ret
mov
adc
into
jno
xor
inc
aas
je
sub
cld
jno
xor
iret
mov
inc
iret
mov
mov
shl
sub
xchg
popf
xor
adc
mov
mov
hlt
and
dec
enter
stc
xchg
mov
xchg
or
mov
push
mov
mov
adc
mov
jecxz
out
leave
push
mov
jecxz
in
jmp
add
jbe
fmull
inc
sbb
clc
jg
pop
push
outsl
fnstcw
sbb
popf
sahf
xor
pop
sbb
inc
jo
and
push
dec
pop
cltd
xorl
imul
fdivs
dec
mov
daa
cmp
pop
add
ds
aam
cmp
jge
xor
or
shll
jmp
call
out
inc
lcall
pop
dec
sar
insb
test
cmp
into
int
mov
mov
ret
clc
je
mov
and
pop
loope
adc
mov
fsubrs
data16
arpl
push
sahf
mov
add
add
cmp
push
sbb
xchg
sbb
repz
xchg
les
sub
lock
loop
ja
xchg
sub
mov
test
xor
pusha
pop
mov
adc
inc
pop
cwtl
push
or
data16
ret
popa
jl
add
outsl
dec
fbld
mov
aas
and
movsb
data16
stc
mov
scas
jmp
xchg
mov
ljmp
inc
and
loope
mov
test
cli
leave
or
fbld
dec
stc
jae
adc
into
pop
fcomps
xchg
scas
jecxz
dec
inc
lds
mov
lods
dec
pop
xlat
xorl
mov
ret
and
andl
ljmp
cmp
cli
push
push
fdivrs
or
gs
xchg
subb
xlat
dec
adc
sti
mov
mov
fstl
fcomps
pop
shrb
cmpb
das
fisubrs
push
les
out
dec
adc
pop
sub
push
je
movsl
subl
ret
sub
dec
cmp
pop
sub
testl
popf
add
int
cmp
aad
enter
mov
cmp
and
mov
les
sub
aam
inc
cmp
pushf
ret
lock
mov
sti
inc
nop
in
loop
rcrb
mov
addl
jb
pushf
inc
xchg
mov
xor
jecxz
fstpt
cmp
cli
lahf
das
xchg
in
int3
mov
inc
sbb
cmp
mov
push
dec
push
addr16
and
pop
imul
sub
push
adc
pop
mov
mov
pop
out
cmp
jge
dec
arpl
push
cli
ret
cmp
out
aas
pop
sub
and
scas
dec
inc
and
xlat
mov
mov
daa
mov
mov
outsl
or
xchg
popf
dec
xchg
cmp
and
mov
mov
inc
cmp
pop
mov
repz
leave
mov
loope
jno
xor
int
in
je
nop
test
testl
repz
pop
shrl
sub
fisttpll
jno
inc
mov
add
push
sti
xchg
loop
sub
sub
dec
out
pusha
lahf
flds
out
dec
or
sub
cmp
les
movsl
movsb
push
cmpsb
dec
andl
movsb
test
adc
popf
lret
xlat
and
cmp
faddl
fists
jae
inc
xor
fmulp
fiaddl
fcmovnbe
shrl
stc
outsl
pusha
push
mov
pop
clc
pop
cmpsl
lea
es
pop
iret
jmp
jp
pop
test
pop
popf
xchg
imul
adc
int3
lea
and
or
sti
cmp
sbb
jne
mov
in
dec
cmp
lock
cwtl
ret
adc
mov
mov
or
xchg
mov
sbb
lods
sub
push
sbb
pop
scas
sub
and
test
sub
lcall
add
add
jp
and
popf
mov
pop
jae
inc
inc
and
mov
add
jne
xchg
adc
ljmpw
sub
sub
adc
adc
mov
mov
xchg
les
push
and
and
fnstsw
outsl
ljmp
jge
dec
loopne
je
hlt
mov
aad
fnstenv
mov
mov
pop
jg
aam
mov
and
mov
or
add
add
enter
xchg
or
popf
roll
add
pushf
idivb
mov
mov
xchg
jb
hlt
outsl
jae
jo
xor
mov
mov
stc
clc
inc
fcoml
sub
lret
jecxz
addl
shl
mov
and
lods
arpl
insb
lahf
ja
sub
sbb
scas
mov
add
push
aad
jmp
jge
push
sub
fiadds
pop
jnp
adc
push
xchg
xor
jne
cli
rol
xor
stos
fistpl
lds
and
repnz
ss
cmp
push
sbb
pop
in
mov
lock
push
enter
shrl
and
dec
adc
movsl
push
or
xor
out
mov
adc
cmc
fnstenv
sti
cmpb
cmpsb
dec
stos
cmpsb
fisttpll
push
xor
je
jbe
lret
cmp
and
push
aaa
ds
xor
shrb
pop
dec
add
int3
lret
xchg
nop
iret
jp
mov
mov
push
inc
mov
push
sarb
or
xor
dec
mov
adcb
aas
mov
xchg
push
outsb
xchg
mov
cwtl
inc
push
cmp
mov
pop
in
pop
xchg
fnsave
sub
int
xchg
mov
subl
sub
mov
jmp
xor
mov
mov
sbbb
lcall
xchg
test
mov
dec
pop
pop
imul
scas
movsl
jnp
or
call
out
repz
mov
inc
push
jge
cwtl
pop
and
dec
dec
and
lret
test
stc
test
data16
adc
sarl
sahf
mov
fisubs
pusha
das
and
sbb
xchg
add
es
push
mov
mov
call
in
cmpb
push
int
inc
neg
sub
inc
sbb
adc
popa
fimull
imul
aad
ljmp
and
add
popf
sti
imul
in
xor
test
mov
cmpsb
xchg
dec
subl
aas
ficoml
and
je
dec
mov
adc
xor
pop
or
stos
xchg
fists
jge
inc
lea
sub
pop
pop
add
std
ret
or
gs
adc
fcompl
sbb
leave
adc
add
push
and
push
fstpl
push
cli
sahf
ja
dec
push
mov
in
mov
pushf
mov
shl
sbb
mov
in
jno
push
jg
aam
inc
xchg
enter
les
mov
pop
pop
cwtl
lret
repz
and
pop
mov
gs
inc
pop
cwtl
and
test
lret
aas
cmp
cwtl
jge
push
add
mov
and
lods
into
movsb
ljmp
fistpl
push
mov
aam
pop
ret
ss
mov
fists
rclb
mov
mov
hlt
mov
int
cwtl
mov
xchg
dec
in
pushl
scas
mov
fistpl
dec
fists
stos
popf
int
int
or
or
data16
clc
pop
popf
xchg
ret
dec
and
xchg
jo
pusha
imul
aam
sub
idivb
inc
loope
jne
aad
in
jg
xchg
subl
mov
mov
mov
shll
inc
inc
jecxz
cmp
popf
inc
pop
loop
cmpsb
test
mov
sbb
sahf
inc
nop
ss
pop
das
repnz
or
mov
xchg
sub
jno
arpl
in
push
fiaddl
leave
inc
sub
int3
aad
cmpsb
in
cmc
adc
mov
fucom
pop
add
insl
loop
dec
inc
roll
inc
mov
aaa
iret
mov
pop
and
sbb
icebp
or
xchg
mov
push
insl
fs
mov
adc
mov
xor
cs
cmpsb
out
inc
push
add
test
bound
and
outsb
fs
divl
nop
jecxz
adc
in
jge
dec
push
pop
lret
cmpsb
and
jle
sub
xor
inc
xlat
cmp
test
cmp
mov
into
out
jge
sub
test
scas
repnz
pop
jae
aam
xchg
cmc
and
sbb
push
aad
pushf
arpl
jle
out
fucom
mov
sub
fidivs
cmpsl
scas
push
insl
sbb
cmp
out
insb
mov
mov
std
or
dec
imul
fidivrs
stos
arpl
xchg
aam
jo
jae
pushf
leave
sub
cltd
cmp
jbe
rcll
jmp
xchg
ss
stos
mov
dec
push
xor
shl
mov
cmc
xor
and
adc
push
sub
inc
popa
or
pop
inc
aad
and
andb
hlt
mov
frndint
pop
xor
sbbl
jl
mov
test
sbb
stos
call
lret
add
pop
adc
dec
adc
loop
cltd
xchg
and
jae
es
fisubs
cmp
lret
loop
pop
sub
dec
ja
pop
pop
push
mov
sbb
out
outsl
pop
dec
sub
cmp
nop
bound
add
pop
fwait
out
out
fildll
testl
or
mov
loope
out
adc
add
jne
out
pop
das
xor
sub
gs
cmp
int
ret
jge
sub
lcall
lea
aas
cmp
jl
sar
lods
mov
test
mov
xor
ret
mov
pop
out
fwait
sbb
adc
mull
pop
sub
popf
jp
pop
sar
jns
gs
lock
and
push
aad
mov
push
es
imul
mov
inc
xor
dec
xchg
pushf
cmpsl
pop
sbb
mov
bound
fnclex
insb
clc
js
push
xchg
mov
dec
mov
in
dec
lods
repnz
mov
cmp
cmpsl
nop
sbb
fucom
imul
sti
mov
movsb
fstl
cmp
ja
clc
scas
rcr
dec
or
lret
cli
inc
ja
mov
pop
dec
lods
stos
les
inc
cmc
jl
cmp
std
sbb
mov
jle
sbb
popf
sub
add
push
das
addr16
scas
xchg
insl
pop
adc
xchg
cmpsl
jl
out
and
mov
ret
sarl
lods
call
mov
mov
lcall
mov
lret
jmp
pop
dec
mov
xor
loopne
shlb
mov
and
daa
test
loop
mov
outsl
cs
pop
lcall
orl
push
sub
adc
imul
mov
pop
test
cmpsb
test
popa
cmp
dec
xor
sti
jnp
push
popf
and
xchg
test
sub
nop
or
push
pop
rorl
int3
sarl
sti
mov
adc
sbb
adcb
xchg
pop
out
imull
mov
int
xchg
adc
adc
cs
fadds
dec
enter
lods
loope
clc
addr16
jg
lea
push
jg
add
cltd
sbb
sub
lods
movsb
mov
lret
sub
shlb
std
imul
popa
mov
push
aaa
cmp
cmp
pop
sbb
arpl
pop
aaa
pop
jmp
dec
sahf
jmp
out
add
loop
stos
sbb
xor
or
pop
mov
jns
lds
sub
lock
sbb
rcl
and
cmp
dec
sub
insb
mov
sbb
dec
rcll
push
lea
xor
cmp
subb
decl
lahf
fxch
add
inc
cmpsb
and
imul
jge
lds
shll
movsb
jb
mull
outsl
int3
ljmp
cltd
ret
dec
xchg
loop
aas
ds
lds
xor
inc
es
pop
push
jecxz
cmp
sub
lods
add
add
pop
addr16
jno
mov
xchg
add
cld
jns
inc
jmp
imul
jae
hlt
lds
testb
inc
ret
push
ret
pop
pop
inc
and
aad
cmp
dec
push
fidivrl
aad
ret
xor
pop
loope
xor
cmpl
sbb
insl
imul
jle
jp
push
lods
cmp
repnz
das
arpl
pop
loopne
xchg
dec
lods
stos
and
test
in
into
int3
insb
lret
rcrl
movsb
stc
lods
or
enter
std
xchg
cmpsb
sub
mov
and
js
test
in
cmp
in
inc
push
push
fldl
into
ljmp
in
cmp
sbb
mov
test
pop
jae
rol
xchg
enter
aaa
leave
shlb
por
cmp
lea
rcll
xor
call
sbb
popl
popl
dec
push
xor
xchg
ficomps
packsswb
ja
cmpl
jge
fwait
shll
in
lea
aam
inc
hlt
lahf
sbb
ss
xchg
mov
and
jl
cmc
ficomps
and
orl
push
inc
push
dec
mov
rolb
mov
adc
xchg
fwait
iret
js
mov
cmp
das
mov
sbb
outsl
and
ja
pop
out
push
fwait
fs
int3
and
xchg
outsl
push
and
idivb
sbb
bound
adcl
jae
negb
mov
enter
scas
sbb
jecxz
mov
lcall
lret
int
jns
and
cmp
xor
jb
mov
xor
clc
dec
sarl
mov
sti
pop
pop
xorl
lock
adc
fwait
jle
shr
mov
cli
push
push
xchg
jp
jmp
dec
add
leave
pusha
push
test
jns
fimuls
xor
sbb
push
xchg
mov
fisubl
cmpsb
sbb
xor
or
xor
inc
push
testb
mov
adc
out
xorl
ret
lock
or
fldl
adc
xor
nop
mov
or
cwtl
cmp
and
outsl
push
movsb
addb
rcr
jge
mov
sahf
sbb
pop
inc
lods
mov
xor
inc
repz
mov
orb
push
xlat
push
inc
sbb
int
mov
out
out
push
mov
arpl
xchg
fnstenv
mov
adc
js,pn
dec
push
and
sub
jge
lcall
scas
cmp
clc
inc
aam
mov
cmp
add
neg
inc
cwtl
movsl
ja
pop
scas
inc
test
cmp
sarb
fwait
push
dec
or
push
orb
data16
popa
out
mov
push
out
out
inc
sub
adcb
add
lret
loopne
pusha
into
into
scas
outsl
push
cmp
pop
fst
sbb
into
xchg
mov
push
pushf
dec
xchg
sub
mov
clc
pop
dec
mov
adc
pop
test
rcll
leave
fwait
popa
fcomip
mov
xchg
clc
push
test
in
das
sub
repz
outsb
and
mov
add
addr16
ljmp
push
sarl
jl
aas
xchg
sub
imul
push
std
lock
push
dec
pop
orl
sub
stc
pop
das
xor
cmp
aad
mov
lahf
cmp
adc
lea
les
nop
les
dec
jnp
insl
int3
fwait
xlat
stos
iret
out
cmp
mov
rclb
dec
sbb
testl
icebp
mov
aaa
dec
outsb
stos
cmc
push
enter
mov
pop
jne
in
imul
test
ficoms
das
xchg
mov
rcr
imul
das
cmp
cld
aaa
subb
sub
xchg
or
les
add
pop
fbstp
das
sti
adc
lret
jecxz
decl
addl
xorl
cmp
inc
add
aaa
pop
cwtl
mov
xor
mov
push
add
xor
push
xor
ljmp
sub
sbb
cmpsb
sbb
loop
sub
jb
popf
test
mov
mov
js
jle
fdivrs
push
rcr
push
repnz
je
and
out
add
in
adc
es
add
pop
mov
mov
out
xor
pop
jl
aas
jae
cmc
les
popa
mov
jmp
sbb
loop
mov
xchg
shll
test
loopne
pushf
and
out
mov
pushf
test
and
cli
push
inc
mov
ror
dec
cmp
push
fistps
int
xchg
in
movb
stos
fldcw
aam
pop
fbld
rolb
shrl
or
sbb
lret
fiadds
out
gs
jnp
xchg
cwtl
test
mov
ljmp
xchg
sbb
sbb
test
pusha
cmp
inc
outsl
and
xor
cmp
fbld
sbb
xor
in
cmpsb
daa
test
sti
aam
jnp
sti
dec
xchg
mov
popf
inc
push
xchg
outsb
cli
ljmp
mov
loop
cmp
jne
pushf
push
pushf
adc
orl
mov
sbb
cld
in
clc
inc
mov
cmp
jb
sbb
aaa
scas
clc
sub
aam
call
add
sbb
and
je,pt
jno
leave
or
sbbb
shll
cmp
inc
pop
psrad
lods
mov
sub
lods
mov
dec
mov
das
push
or
cli
or
jecxz
mov
sbb
mov
cmc
xchg
pop
subl
pop
sub
dec
dec
cmp
div
jp
inc
cmp
dec
jmp
mov
pop
sti
adc
scas
jb
mov
hlt
outsl
fadd
pop
pop
sub
inc
pop
fstps
lock
stos
mov
mov
adc
shl
pop
iret
fs
xchg
cmpsb
in
mov
xchg
xor
dec
lcall
pop
test
movsl
daa
or
movsb
jp
inc
xlat
cmp
je
add
cmp
jmp
mov
mov
mov
sbb
push
pop
mov
push
cltd
jg
in
inc
lods
add
lret
out
mov
jle
repnz
jmp
mov
jnp
lret
mov
cmp
or
push
sbb
shrl
test
shll
shrb
mov
sti
outsb
bound
scas
cmp
cmp
push
popa
dec
and
leave
cltd
pop
mov
mov
add
pop
push
je
pusha
pop
jae
mov
mov
jae
dec
jg
outsl
loop
out
mov
inc
cmp
mull
ficoml
cmp
icebp
ss
stc
mov
adc
rclb
push
fsubrl
sub
mulb
lock
lock
push
js
and
movsb
mov
js
dec
lds
cmp
aam
or
add
iret
mov
pop
cmpsl
scas
fs
fimull
sub
jne
clc
pop
xchg
jno
mov
filds
jo
cmp
cmpsb
jle
movsl
dec
lock
popa
jecxz
out
js
insb
rclb
ljmp
int
ja
lods
or
mov
jno
jp
int3
mov
int
inc
lret
push
hlt
lret
and
in
push
adc
pop
add
sbb
stc
and
daa
xlat
push
out
imul
and
ss
cmp
lods
in
mov
xlat
add
jmp
ljmp
mov
sbb
pop
jb
pop
sbb
pushf
sbb
push
icebp
adc
xor
fisttps
pushf
mov
imul
xor
in
fistl
mov
fimull
fildll
lods
add
insb
fldt
xchg
jbe
jae
xchg
jns
jge
lds
bound
cmp
cltd
sbb
mov
xchg
int
add
nop
lcall
setp
adc
sbb
adcl
mov
mov
push
les
pop
lea
pop
mov
mov
dec
daa
fmuls
xor
pop
pop
repz
push
dec
mov
lret
xor
dec
pop
mov
into
into
or
xor
adc
out
add
inc
mov
add
shrl
arpl
adc
cmp
cwtl
push
out
mov
cmp
and
repz
mov
adc
shrl
push
mov
insl
gs
or
in
inc
aam
cli
into
add
cmp
je
pusha
mov
xchg
jo
unpckhps
adc
inc
sub
rcl
cs
movsb
pop
jmp
popa
ret
dec
fmuls
adc
mov
fdivl
lods
sbb
imul
cmp
loopne
and
and
xlat
sub
gs
in
scas
mov
insl
xchg
jae
or
pop
iret
pop
pop
adc
and
or
jge
movsb
inc
sti
movsb
mov
lcall
push
rcrb
fldt
mov
and
pop
and
jo
jbe
adc
cmc
jo
jnp
fcomi
xor
mov
or
out
xor
jns
fists
push
mov
daa
fnstsw
xor
gs
outsb
aad
pop
bound
repnz
xor
adc
test
out
sarl
loop
or
arpl
xchg
insl
mov
in
add
loop
jo
filds
stc
pop
rolb
outsb
loop
scas
inc
push
mov
mov
pop
inc
scas
aas
ljmp
in
test
adc
fistpll
inc
sub
pop
sbb
aad
int3
xchg
push
pusha
das
or
gs
mov
push
push
jmp
ficoms
lret
add
xlat
cmp
leave
mov
call
sbb
out
movsb
pusha
lods
mov
mov
lock
xor
sub
decb
jge
pop
adc
pop
ret
loope
data16
jl
cmp
adc
je
test
jle
ja
lcall
insl
sarl
mull
mull
mov
inc
cmpsb
fisttpll
icebp
stos
add
sbb
xor
add
mov
int
sbb
adc
jbe
repz
je
aaa
das
dec
sub
into
outsl
or
mov
or
mov
lcall
xor
ljmp
sub
xlat
into
clc
and
inc
add
push
mov
jecxz
lock
bound
xor
lahf
out
jne
push
dec
lea
rcll
dec
ret
mov
adc
sbbl
cmpsl
in
dec
repz
cmp
fisubl
cmp
cmpsb
inc
adc
jns
pop
outsb
push
into
xchg
cmp
cli
out
sub
aad
dec
rorb
popf
shll
fs
frstor
cmpsl
xor
xchg
mov
xlat
les
jecxz
cmpsb
jmp
jnp
inc
cmp
pop
mov
or
cmovbe
sub
sub
mov
je
pop
loope
cmp
loopne
mov
subps
lret
in
xchg
xchg
sbb
in
ljmp
inc
sbb
inc
xchg
shlb
lea
pop
pop
push
mov
pop
psubq
das
xor
movsb
loop
imul
leave
jnp
repz
mov
js
fs
lods
mov
lret
int3
lds
shll
daa
jge
jae
sub
aas
mov
xchg
jbe
insl
ds
xor
xchg
jmp
inc
in
sub
addl
icebp
fistl
hlt
out
mov
das
stos
mov
push
pop
fildll
cmp
sub
jae
mov
xor
and
push
fs
je
fnstcw
fmul
mov
add
adc
add
adc
in
das
sar
sub
jl
sti
push
push
pop
cmp
mov
hlt
loopne
stos
xor
push
filds
dec
dec
lods
aas
sti
add
cmp
jae
fdivrp
insb
repz
jle
fs
mov
outsl
cwtl
dec
mov
xchg
mov
inc
fistpll
lret
jbe
bound
xchg
xor
jmp
sub
fwait
daa
pop
mov
cmp
push
mov
push
out
mov
jns
iret
fiadds
mov
fstl
lea
pop
bound
inc
jl
ja
popf
loopne
jmp
pop
lds
stos
ljmp
out
cwtl
test
sbbl
cmp
sbb
push
pop
insl
jae
jl
and
sbb
push
add
push
divb
mov
push
shlb
cmp
push
sbb
sarb
les
xchg
jbe
dec
sub
lds
cmp
nop
into
imul
rclb
aaa
jnp
test
dec
mov
mov
cmp
loopne
mov
add
xchg
aas
add
movsb
loop
mov
cmp
jmp
mov
add
dec
and
idivb
fs
mov
mov
aas
ss
aam
mov
out
cmp
mov
jno
inc
xchg
mov
mov
jbe
lret
push
les
or
mov
push
out
xchg
jecxz
xchg
out
pop
leave
pop
pop
je
sti
sti
xor
mov
pop
jo
js
imul
idiv
cmp
push
or
sbb
add
sbb
into
stc
xor
shrb
sbb
sbb
inc
cmp
jno
mov
int3
cmc
mov
sub
push
adc
cmp
xchg
nop
inc
or
lock
leave
inc
mov
dec
jnp
mov
into
outsl
ljmp
pop
mov
ljmp
rolb
mov
scas
fwait
jp
and
and
pop
into
pop
mov
scas
mov
notb
mov
cli
aad
neg
rcrl
fdiv
lea
subl
pop
bound
out
and
lret
adc
lcall
pusha
jne
jl
js
sbb
cmp
bound
mov
cli
cmc
dec
and
sbb
movl
mov
outsb
xor
test
dec
xchg
lock
sbb
inc
push
mov
inc
and
adc
andl
lret
cmp
add
push
lods
sbb
pop
subl
rcll
out
pop
mov
repz
mov
sub
test
sbb
addr16
adc
adc
scas
orl
mulb
jne
lcall
cmp
push
mov
outsb
jbe
iret
dec
call
or
test
subb
xchg
xor
sbb
test
or
and
and
mov
mov
pop
in
sub
jle
out
jge
ffree
push
and
pop
mov
les
call
or
jge
mov
inc
mov
xor
xor
movsl
dec
mov
gs
or
clc
loope
sbb
les
mov
arpl
mov
mov
out
mov
push
mov
sbb
and
adc
lret
add
int3
arpl
and
adc
in
cld
adc
jo
mov
push
popa
stos
xchg
cmp
xchg
mov
movsl
aaa
fwait
or
in
mov
pop
lods
popf
dec
aaa
nop
aad
fists
je
popa
ficomps
arpl
mov
pop
fmulp
test
add
sub
dec
push
mov
ret
jns
push
sahf
mov
push
xlat
or
lods
in
jecxz
mov
mov
insl
mov
lds
into
in
xor
adc
jle
and
frstor
lds
pushl
lcall
lds
lcall
in
and
sub
jnp
lcall
or
pop
jle
aaa
lock
or
push
stos
ja
shrb
mov
lea
sbb
fwait
movsl
mov
adc
loop
mov
hlt
inc
frstor
fstp
cmp
xor
xor
aad
call
sbb
icebp
jnp
cmp
loop
mov
test
pop
and
imul
inc
ss
push
pop
jbe
out
int3
mov
rolb
mov
jg
push
mov
sub
push
popf
jecxz
imul
or
mov
and
mov
add
dec
stc
xchg
lods
add
cmp
xor
xlat
stos
cmp
pop
xor
pop
ss
scas
xchg
mov
xchg
add
icebp
sub
cli
outsb
or
jbe
dec
jl
xor
jno
lcall
fsubrp
mov
data16
lods
pop
sbb
lods
sbb
test
aas
add
hlt
inc
jb
jne
jns
pop
pop
jmp
movsl
mov
push
and
loop
xchg
stc
lret
and
push
mov
cmp
repnz
gs
fcomps
in
and
sub
adc
dec
push
sbb
push
lahf
push
int
add
iret
sub
cmp
repz
inc
int3
mov
pop
sbb
inc
sub
out
sbb
lret
add
data16
sti
lahf
daa
int
mov
cs
dec
pop
xchg
adc
sbb
jbe
adc
cmp
jbe
inc
out
inc
fnstcw
fbld
movsb
pop
flds
testl
push
and
mov
jl
mov
enter
ljmp
cli
cmp
inc
pop
repz
sbb
es
jb
inc
rcr
rolb
or
mov
inc
xchg
outsl
mov
fadds
mov
adc
lahf
nop
inc
divl
mov
push
cmp
mov
mov
or
es
jne
mov
cmc
in
cmpsl
iret
xor
test
bound
mov
lcall
test
sbb
aad
jl
sub
lret
dec
dec
repnz
stos
lods
sbb
ss
xchg
test
xchg
repnz
repnz
outsb
xchg
and
jp
dec
push
movsb
xor
pop
push
ret
arpl
loop
push
loope
push
push
icebp
adc
inc
dec
out
dec
fldl
add
mov
add
cmp
push
mov
sbbl
push
cld
mov
mov
push
fdivr
adc
or
loopne
mov
jb
cli
inc
xchg
jg
cmp
cmp
adc
mov
call
stc
in
int3
arpl
xchg
call
and
or
rcll
aaa
inc
adc
inc
push
or
push
aad
xchg
int3
inc
enter
sub
lahf
fwait
jp
lods
aas
enter
jle
dec
adc
dec
sub
mov
and
cwtl
lea
pop
pop
cmp
sub
das
adc
mov
testb
jge
mov
popa
insb
adc
add
lock
dec
fcmovu
fimull
scas
adc
jae
mov
inc
leave
nop
sub
adc
jbe
xor
loop
xchg
xlat
push
scas
push
nop
xchg
sbb
push
ja
push
xchg
push
jle
fidivrs
in
xor
sbb
add
xchg
enter
inc
dec
pusha
xor
out
lret
std
xchg
ljmp
andl
adc
jge
bound
stc
inc
add
xor
add
arpl
cs
cmp
adc
inc
popa
mov
cltd
gs
lods
push
fldl
jecxz
filds
push
lahf
xchg
and
adc
into
cmp
scas
cmp
dec
imul
fstpl
lods
pop
adc
and
xor
enter
mov
jne
push
stos
push
xchg
sahf
shrb
das
shll
xchg
pop
mov
stos
push
clc
loope
aam
cld
dec
inc
enter
mov
push
je
leave
outsl
dec
fnsave
sub
jmp
jmp
je
mov
inc
xor
lret
inc
or
mov
stc
push
push
out
inc
outsb
and
push
popf
dec
dec
mov
lea
insl
cmpsl
inc
sahf
mov
pop
stos
add
jb
push
jmp
es
pop
push
mov
mov
aad
mov
sbb
test
call
call
jmp
dec
aaa
cmp
rorl
iret
adc
jne
popa
insl
gs
test
cld
inc
in
fcoms
comiss
jl
insb
push
mov
xchg
shll
outsl
lock
push
fisubs
cmpsb
push
xor
mov
xlat
mov
mov
mov
in
hlt
out
cli
ficompl
fsubrs
xor
outsl
or
push
mov
mov
pusha
push
scas
push
loopne
adc
dec
inc
repz
or
sti
fidivs
test
out
ss
sbb
sub
jne
cmp
scas
push
sbb
imul
cmp
scas
xchg
cli
test
jecxz
pop
lock
ss
test
rcr
cmp
out
nop
nop
mov
popa
in
xchg
push
mov
mov
mov
pop
daa
pop
xorb
lret
data16
cmp
in
fsub
cltd
lock
sub
and
adc
divl
mov
mov
ds
in
mov
jl
lret
pop
mov
in
pop
pop
cmpl
mov
fldenv
push
in
add
rolb
cmpsl
test
mov
loope
push
mov
inc
sub
jne
or
fwait
sub
lahf
or
cli
stc
mov
ds
clc
sub
sti
loopne
mov
or
jg
in
sbbb
push
scas
push
jp
mov
inc
push
nop
add
mov
push
pusha
dec
and
inc
xor
sti
ret
jp
clc
xchg
daa
lds
sbb
and
test
lcall
mov
mov
jmp
aas
lret
xchg
out
cs
mov
dec
jno
fildl
lods
sub
mov
sub
mov
mov
push
fdivs
pop
xor
sbb
clc
lahf
xor
test
add
into
and
lret
bound
das
mov
pushfw
cmpsb
cmp
cmp
jp
aad
pop
dec
sti
cmp
insb
fistps
inc
mov
or
adc
and
fwait
jnp
xor
and
and
jnp
loop
icebp
stos
and
mov
mov
xchg
jne
and
xor
mov
test
popa
rcr
lods
rcl
add
inc
xor
imul
into
add
lahf
dec
mov
pop
inc
and
cmp
ficomps
testl
inc
in
stos
insl
fisttpll
imul
rolb
and
stos
sub
das
into
dec
lret
cmp
aad
gs
ret
dec
pop
out
push
ret
push
mov
and
hlt
xchg
ja
loope
jecxz
popf
icebp
movsl
mov
adcb
out
sbb
mov
push
into
sub
pop
push
loop
push
jecxz
addb
jl
or
sti
aam
adc
pop
add
cmc
push
sub
insl
outsb
fsubrs
je
sbb
mov
xchg
dec
sub
jge
imul
xlat
in
leave
and
xchg
je
in
arpl
mov
insl
hlt
mov
push
out
fistps
orb
mov
push
in
fsubs
movsl
jp
mov
mov
cli
fbld
nop
jnp
adc
cwtl
cmp
inc
imul
sbb
mov
cmovno
xchg
mov
xor
nop
cltd
fisubrl
dec
add
xchg
ds
lret
push
jmp
cmc
pop
popa
mov
cmp
or
dec
jae
adc
inc
leave
movsb
loop
cmp
rcrb
fistps
push
fsubs
ret
lds
loop
xchg
mov
lahf
ds
scas
push
xchg
addr16
cld
mov
dec
es
and
sbb
ljmp
stc
imul
leave
idivb
into
jp
hlt
fcompl
cld
out
pop
xor
repz
jne
mov
das
push
mov
or
imul
mov
push
cmpsl
xchg
ret
stos
mov
dec
xor
loop
or
sub
out
jg
push
adc
mov
in
lock
aam
in
adc
das
push
out
push
popf
shll
adcl
ret
lret
fildl
xchg
jb
add
pusha
dec
add
push
xchg
pop
pop
popa
xchg
cmp
dec
or
adc
mov
xchg
inc
add
mov
xor
pop
sbb
ss
addr16
cmp
add
stos
xchg
mov
cmp
jl
mov
mov
xlat
mov
lcall
lcall
xor
aaa
jl
xchg
xor
adc
xor
dec
sbb
fwait
pop
dec
mov
test
fwait
inc
xor
cltd
adc
jp
pop
shrl
mov
sbb
icebp
aas
mov
push
je
inc
inc
cmp
stos
addr16
xor
mov
dec
pop
xchg
loop
lret
out
xchg
repnz
nop
or
mov
lds
jecxz
clc
mov
push
decb
cmp
out
lods
mov
repnz
lea
mov
orl
jmp
aad
das
mov
int
sahf
jl
enter
cmp
push
dec
pop
mov
cmpsb
in
setp
shlb
xchg
sub
push
sub
mov
push
out
push
sar
fsubl
mov
push
adcl
mov
mov
dec
fisubrs
dec
and
pop
mov
sub
dec
add
pop
sub
roll
mov
test
out
xchg
pop
addr16
popf
inc
adc
push
add
ja
int3
sbb
or
xchg
inc
xchg
or
xor
fwait
icebp
xor
add
daa
xor
cli
arpl
inc
adc
pop
sub
je
or
sbb
jo
shll
scas
jae
add
pop
rorb
enter
orb
loopne
add
adc
fyl2xp1
push
mov
loop
adc
ja
push
cld
sub
icebp
repnz
xchg
or
push
mov
fisttpll
hlt
sub
jns
daa
loopne
pop
mov
jge
jle
xor
aaa
arpl
fbld
fcmovnb
ret
xchg
xchg
aaa
pop
adc
sahf
jnp
mov
mov
insl
push
pop
mov
sbb
mov
lods
jno
cli
movsl
xor
mov
sub
or
andb
jge
lret
mov
out
cmp
jo
sahf
ret
std
mov
in
or
aam
pop
sbb
lret
bswap
sub
mov
add
or
xor
scas
mov
jle
movsl
fisttpll
loopne
jbe
xor
je
sar
push
aad
xor
add
or
test
and
inc
jp
mov
lds
rcll
lret
call
cs
sbb
mov
xchg
cmc
sbb
sub
xor
movsl
stc
xor
sbb
clc
sub
fistpll
int
push
mov
jmp
push
lret
int3
inc
cmpsl
jb
loopne
dec
repnz
sbb
lcall
or
xchg
add
adc
adc
sbb
mov
or
xchg
addr16
loop
add
sahf
sbb
movsb
jl
add
pop
aad
inc
jnp
stos
jmp
rcrb
arpl
xor
adc
inc
rcrl
xchg
mov
jmp
add
das
pushf
xchg
mov
es
out
icebp
aas
add
int3
adcl
or
mov
movsb
and
add
mov
jbe
sahf
ss
xor
adcl
jns
jb
in
mov
test
int
repz
inc
loopne
xor
sbb
cmp
inc
xor
add
pop
icebp
fucom
int3
int
inc
orb
jae
xlat
xor
dec
mov
icebp
mov
sbb
add
jl
jmp
or
inc
jno
je
add
aam
sbb
lea
out
cwtl
cwtl
xchg
jno
je
in
pop
dec
lock
cld
inc
jo
push
push
pop
pop
xchg
cld
fcmovne
mov
xor
push
xor
ljmp
pop
int3
test
int
cmp
xchg
aaa
fs
into
fnstenv
shrl
test
ss
xchg
loope
inc
fisubl
movsb
cmpsl
inc
mov
mov
xchg
cmpsb
xlat
mov
jne
adc
jnp
inc
jl
movsl
imul
roll
jge
sbb
xchg
adc
dec
pop
xor
fwait
lret
sub
stos
stc
aaa
daa
out
cmc
add
dec
push
nop
idivb
xchg
jno
mov
inc
push
xor
add
dec
mov
lods
test
cmp
sub
popf
add
pop
clc
das
xor
mov
dec
loope
push
jae
ficomps
sub
mov
std
mov
cmpb
mov
data16
jne
cmc
sbb
jno
pushf
add
idivb
xor
dec
pop
pop
dec
test
lds
orb
adcl
xchg
or
pop
pop
mov
mov
mov
lods
pop
add
dec
add
pop
mov
fisttpl
jle
ss
dec
pop
insl
enter
pusha
jge
loope
test
call
je
or
jbe
cmc
jecxz
sbb
mov
imulb
int
pop
shl
inc
arpl
imulb
dec
fdivs
push
cmp
test
repnz
lcall
test
sarb
movaps
jbe
push
out
sbb
jp
add
je
push
mov
iret
inc
dec
outsb
negb
cmp
cmp
repnz
jae
add
jle
js
xchg
xor
ljmp
mov
pop
dec
jnp
call
and
scas
test
jl
jge
popf
push
jo
js
pop
repz
pop
push
rcr
push
popf
lods
adc
lea
popa
or
jp
push
ja
mov
in
mov
adc
dec
sbb
xchg
or
xlat
les
inc
adc
and
xor
add
adc
jnp
and
ja
pop
cmpsb
mov
popa
dec
adc
add
sti
mov
fisubrl
lods
xor
pop
int3
lcall
lods
pop
fisubs
push
loopne
fisubrl
xchg
jo
gs
cld
or
cmp
push
sbbb
jl
ja
mov
jecxz
lret
push
push
add
push
mov
dec
or
inc
mov
inc
in
lahf
xlat
and
or
push
into
insl
adcl
adc
hlt
lret
data16
mov
add
out
repnz
dec
xor
dec
sbb
xchg
lock
sahf
stc
call
or
or
jle
cltd
xor
push
jne
adc
out
sahf
jge
loope
les
jp
sbb
cmp
inc
aam
push
sub
rclb
jmp
popa
jge
dec
out
idivl
mov
mov
xlat
jge
outsb
dec
cmp
std
arpl
stos
punpcklwd
push
cmpsb
andb
fsubl
int
mov
mov
adc
jmp
mov
sti
shll
mov
jl
fldenv
dec
pop
jae
push
sub
add
mov
push
call
dec
pushf
adc
pop
mov
xchg
jmp
and
inc
mov
xchg
sarl
xor
jge
sbb
adc
sbb
out
imul
pop
loop
push
scas
mov
ret
ljmp
xor
xchg
into
mov
lea
out
inc
das
jmp
mov
xchg
mov
jb
and
sti
dec
loop
fidivrs
cmp
outsl
or
push
or
mov
inc
jge
aas
xchg
and
mov
call
mov
push
xchg
dec
adc
or
jmp
lds
fs
and
jmp
cs
into
test
xchg
loopne
pop
rolb
nop
xor
les
push
out
pop
mov
adc
xor
sbb
fwait
push
sti
movsl
cmc
nop
inc
pop
aas
mov
insb
mov
cmpsl
push
lea
pop
ja
insl
ja
in
dec
mov
lods
lods
dec
adcb
push
mov
sub
mov
add
notl
movsb
push
lods
pop
clc
or
push
push
hlt
pop
imul
xor
push
ret
mov
ss
imul
pop
cmp
pop
lock
popf
xor
xchg
jo
pusha
rorl
push
cmp
pusha
hlt
add
cltd
lahf
adc
loope
sbb
subl
test
xor
xchg
int3
shl
push
xlat
cwtl
mov
adcl
dec
ljmp
pop
adc
xor
mov
pop
icebp
jnp
lea
insb
pop
shlb
inc
add
dec
mov
inc
repnz
mov
or
aaa
sub
minps
call
test
jl
jecxz
mov
fwait
shll
movsb
add
fsubrl
sarb
leave
add
or
push
push
mov
dec
rolb
shll
cmpsl
cli
adc
push
popa
sahf
clc
mov
js
mov
adc
aaa
shrb
or
push
std
sbb
ja
pusha
pop
dec
push
jns
inc
or
and
sbb
jmp
rol
push
mov
in
mov
ja
leave
jo
or
inc
shll
adc
test
cmp
test
cwtl
jns
inc
es
pop
call
roll
sbb
xchg
outsl
test
aas
or
lahf
dec
sbb
into
and
cmpsl
aam
cmp
shll
jl
ret
divl
pop
xchg
sub
je
sbb
sub
dec
adc
sub
in
imul
inc
shr
lret
jecxz
or
out
imul
jbe
mov
sbbb
fs
push
sbb
hlt
xor
add
stc
les
xchg
stc
push
mov
cli
pop
mov
xor
in
cld
fidivrl
sarb
std
cld
sub
dec
lods
push
xor
mov
push
xor
clc
ficomps
fwait
aaa
xchg
xchg
pop
call
xchg
xchg
shll
push
pushf
add
cmpsb
shl
stc
imul
xor
insb
pop
push
lock
subb
mov
xor
das
mov
sahf
push
cmc
sub
leave
movsb
call
xor
loopne
push
and
js
addb
mov
jg
call
shll
push
test
xor
inc
cmp
xchg
out
or
mov
repz
jo
or
insl
or
lock
xchg
mov
add
xor
repz
xchg
ror
mov
mov
dec
pop
mov
add
mov
cmp
pushf
cmp
divb
into
movsb
lods
ja
pop
xor
sbb
cmpsb
shlb
lahf
push
das
sarl
sbb
xchg
loopne
aad
nop
and
xchg
sar
xor
inc
pop
inc
orb
cmp
xorb
lea
jg
cmp
imul
add
shll
dec
in
rclb
es
cli
mov
mov
and
add
inc
cmp
in
pop
call
lds
xor
fists
movsb
shlb
enter
push
dec
pop
jmp
push
cmp
aad
dec
adc
jnp
dec
imul
pop
jb
dec
sub
dec
cltd
ret
jp
jle
adc
call
jo
lods
fwait
pop
addr16
dec
sub
dec
sar
and
xchg
sub
mov
adc
pop
je
sti
jb
fcmovb
pop
cmp
inc
pushf
adc
addr16
test
cltd
dec
inc
inc
int3
pop
mov
cltd
ficoms
mov
test
mov
mov
sub
pusha
scas
xor
jecxz
lods
xor
cmp
xchg
icebp
cli
loopne
pusha
daa
iret
push
mull
out
xor
test
sub
xor
push
inc
lahf
jns
lock
sbb
and
cmpsb
outsb
adc
lahf
stos
xchg
adc
mov
out
lds
pop
repnz
out
pop
mov
ret
imul
mov
data16
lret
dec
out
andl
mov
xchg
fsts
clc
dec
sub
imul
std
iret
inc
sub
sbb
cmp
cmpsb
sbb
pop
xchg
xor
mov
out
andb
lds
fdivl
or
inc
xchg
pop
jnp
xor
xlat
into
dec
dec
repnz
push
out
or
int3
mov
daa
lret
popa
sbb
adc
das
xchg
es
push
cs
pushf
push
and
sbb
adc
or
loopne
sbb
sub
iret
cwtl
pusha
testl
mov
pop
jmp
dec
ret
mov
sahf
push
mov
test
and
pop
cmc
or
fcompl
sbb
mov
enter
addl
push
push
inc
mov
push
inc
mov
mov
dec
mov
cld
nop
test
mov
xchg
lock
fistpl
add
sbb
push
data16
jle
or
aad
xchg
pop
inc
stos
xor
cmp
pop
jne
push
dec
or
out
and
fnsave
rcrl
mov
inc
or
push
vmwrite
decb
jle
notl
dec
scas
adcb
mov
jae
pop
push
xchg
iret
sbb
or
in
orb
add
enter
fimull
mov
mov
jbe
xor
dec
hlt
cwtl
adc
ficomps
pop
scas
outsb
loopne
cmpsl
nop
or
xor
mov
test
pusha
outsb
jns
scas
movsl
mov
pop
out
ret
popa
movb
ret
gs
test
mov
aam
mov
adc
sarb
clc
out
mov
and
or
popf
mov
ret
lods
and
fisubs
add
repz
arpl
add
mov
push
les
mov
add
or
cmp
int
jnp
push
fildl
data16
sub
push
fsubl
pop
add
pop
xor
jne
xchg
faddl
mov
mov
imul
fcmove
idivl
sti
jo
adc
mov
inc
sub
sti
fldcw
xor
or
cmp
dec
and
loop
xchg
lret
jbe
xchg
push
lods
rcrl
outsl
xor
push
push
arpl
imul
or
int3
fidivrl
js
les
mov
push
pop
jno
rcr
pushf
out
lcall
sbb
ss
and
mov
lds
arpl
out
es
bound
push
or
cmp
xor
shrl
mov
pop
mov
add
jg
pop
jno
adc
pop
and
mov
pop
movsl
fisubs
rorl
lods
and
or
addl
mov
fwait
sub
adc
adc
sahf
push
jmp
clc
icebp
frstor
aaa
stc
push
and
push
inc
es
imul
sbb
ljmp
xchg
pusha
push
push
es
mov
adc
inc
adc
out
outsl
mov
test
push
movsl
xor
sbb
jb
add
mov
push
fiaddl
mov
cmpsl
xorl
mov
leave
outsl
jl
mov
and
imul
aaa
push
jo
jne
mov
nop
js
jno
lock
mov
int
or
mov
mov
push
in
xor
sub
push
je
cmp
es
xchg
rorl
loope
js
sbb
adc
lods
xchg
jp
pushf
xor
popf
int3
nop
lret
cmp
mov
mov
pop
icebp
xor
xchg
mov
mov
jnp
jg
xor
fsubl
bound
xor
cld
jb
mov
das
imul
iret
jp
mov
push
push
fstps
jl
pop
mov
pop
fstpt
push
enter
lcall
arpl
jbe
movups
or
insb
and
xchg
imul
xchg
popa
and
les
push
sub
ds
mov
push
stc
and
out
cmp
xchg
out
xchg
mov
enter
adc
sub
xor
cmp
imul
pop
loope
sahf
pop
rolb
cmpsl
and
mov
pop
scas
cmpsl
push
sub
cmp
lds
push
popf
gs
movsl
les
push
or
inc
fldcw
aam
frstor
shufps
outsl
ja
ds
mov
sub
cli
sub
xchg
je
pop
cmp
and
int3
mov
inc
mov
jae
mov
and
fstps
and
jmp
insl
lds
ss
adcl
sub
add
popa
sahf
mov
mov
ds
clc
scas
pop
shll
daa
mov
xor
inc
lock
or
fdivrs
cmpsb
mov
jnp
roll
in
adc
push
xor
pop
jg
mov
push
jecxz
stos
andl
aas
pop
mov
fsubs
movsl
in
add
jmp
mov
aam
lcall
mov
xor
xor
xchg
mov
adc
push
ret
sbb
gs
idivl
ficoms
pause
test
or
add
sbb
lret
cmp
push
xchg
mov
orb
mov
inc
cmc
pop
in
sbb
enter
mov
scas
add
pop
leave
sahf
ret
mov
into
xor
lahf
test
add
push
mov
jae
popa
dec
mov
push
add
ljmp
pusha
inc
xchg
shlb
mov
inc
notl
add
call
shl
pop
push
cmp
test
shrl
mov
jo
sbb
add
ss
jae
mov
sbb
cmpsl
cltd
notb
mov
shrl
mov
nop
loopne
jg
xchg
lds
stc
sar
ljmp
fsubrs
jmp
ret
inc
mov
stos
lods
popf
jns
add
mov
int3
mov
ja
enter
out
mov
push
dec
gs
outsb
jno
sub
repz
das
mov
ret
outsl
add
loop
mov
mov
sub
fdivrl
shlb
inc
dec
sbb
mov
mov
mov
fldl
sub
sbb
mov
push
outsb
test
scas
cmp
sub
arpl
pushf
add
cmp
test
fs
loopne
push
jecxz
movsb
inc
lea
mov
mov
pop
je
add
lea
mov
loope
xchg
sub
xrelease
aad
adc
nop
data16
cmp
ss
das
popf
adc
cmp
fsubrs
aad
inc
aad
in
iret
mov
fwait
or
xor
jmp
sti
sti
add
jmp
pop
call
push
xchg
test
mov
cld
popf
xchg
rolb
inc
imul
xchg
cmp
push
in
out
lods
jge
aaa
mov
and
jmp
ds
cmp
mov
jp
push
push
or
je
push
test
dec
sub
jne
mov
scas
or
jbe
das
adc
iret
imul
sub
lret
xor
cmp
push
dec
xchg
sti
repnz
mov
mov
inc
sub
imul
jo
fsubrl
cltd
cmovns
cwtl
popa
or
nop
cs
aaa
inc
dec
xchg
outsb
mov
xchg
pop
clc
fcoms
and
lret
inc
ficoml
imul
gs
and
xchg
push
mov
out
or
leave
xchg
pop
dec
pushf
imul
stc
dec
sahf
mov
jbe
lret
pop
clc
nop
insb
xor
call
sub
aam
cmpsb
dec
in
push
loop
pop
arpl
ss
les
jmp
sar
and
mov
mov
pop
add
lods
fs
loope
lcall
push
lds
jbe
shlb
adc
jno
and
int
ja
popf
pop
mov
mov
daa
mov
lret
mov
jae
stos
mov
sbb
ret
fistpl
cmp
ja
push
push
sbb
sbb
stos
adc
dec
dec
cmpb
push
xchg
mov
mov
push
cld
lahf
push
into
xchg
sbb
mov
loope
add
or
inc
arpl
nop
mov
xorl
adc
popa
jge
es
or
test
aas
sub
scas
cmc
testb
mov
aas
test
loope
out
insb
and
and
repz
lahf
scas
out
mov
aas
lock
mov
sti
add
lods
js
ljmp
jbe
cli
sbb
mov
sbb
xchg
pop
xor
inc
push
sarl
sub
xchg
js
jecxz
mov
notb
popf
das
push
dec
in
clc
cmp
test
or
out
mov
xchg
or
xlat
es
call
mov
pop
fld
call
outsb
js
aam
pop
stos
xchg
adc
push
sbbl
adc
daa
jnp
das
rcrl
pop
mov
in
push
mov
stc
cld
andl
sbbw
insl
push
cld
inc
test
cmp
es
ret
fidivl
sbb
sub
dec
sbb
cmp
mov
xor
fstpt
adc
call
cltd
sti
pop
outsl
mov
cmp
add
cmpsl
mov
insl
addr16
adc
sbb
pushf
push
xchg
pop
or
push
mov
push
call
scas
and
mov
iret
pop
ja
jl
add
cmp
idiv
repnz
inc
pop
loop
inc
add
pop
sarb
mov
push
jg
mov
mov
jge
cld
mov
or
movsb
sbb
push
mov
xchg
add
inc
aam
adc
and
mov
popa
sub
mov
fnstenv
xchg
mov
and
daa
iret
loop
rol
mov
inc
ficompl
fdivrs
mov
shlb
loop
mov
ret
mov
js
les
scas
arpl
cmp
stos
mov
pop
lcall
xchg
mov
addl
mov
push
inc
call
dec
jp
pop
add
sahf
mov
pusha
mov
mov
mov
pop
push
cmc
add
pop
and
xchg
cmpb
ja
push
push
popa
mov
jle
fimuls
dec
cs
std
xchg
sti
cld
mov
lret
jno
sub
add
adc
gs
jae
inc
or
mov
push
xchg
cmp
insl
stc
fisttpl
sarb
fisubl
arpl
int
sbbb
movsb
stc
sbb
test
or
or
movsb
cmp
gs
dec
pop
loopne
push
insl
lock
adc
sahf
stc
in
xchg
daa
or
jg
mov
pop
std
rolb
into
leave
jp
je
scas
sbb
jno
mov
lods
sub
lds
sbb
inc
aaa
or
enter
out
jae
pop
jmp
sub
fcoml
adc
dec
jae
jno
sub
repnz
das
push
cmp
sbb
scas
and
mov
mov
flds
add
mov
add
js
mov
testl
or
mov
sub
movsb
imul
addr16
or
or
cmp
and
add
test
int
mov
das
dec
bound
imul
xchg
fs
add
jae
sbb
and
arpl
cmp
xor
je
popf
jns
pop
clc
out
and
mov
jb
mov
mov
fcoms
or
pop
sbb
dec
push
jne
jb
jecxz
fadds
push
mov
in
mov
or
rcll
fneni(8087
enter
test
sub
xor
mov
pop
mov
mov
shlb
dec
cmpsl
pop
dec
mov
fsubl
pop
stos
push
and
addb
sbb
mov
jp
imul
data16
in
sbb
and
push
movsb
out
fidivs
pop
push
hlt
mov
cmp
cmp
push
into
addr16
and
push
lahf
mov
push
adc
out
xlat
or
stos
push
xchg
and
sub
pop
mov
pop
mov
andb
dec
jno
jne
xchg
insl
add
add
ret
push
insb
dec
stc
adc
test
notl
cmp
loop
push
mov
rorl
inc
lahf
mov
adc
xlat
insb
dec
dec
enter
pop
rclb
add
jnp
jns
xchg
pop
or
gs
sahf
mov
xchg
mov
adc
cltd
aas
aaa
xchg
lods
dec
push
pop
mov
jne
adc
insl
push
aad
stos
inc
dec
inc
gs
or
ds
jge
sub
mov
push
jns
shr
inc
push
loopne
or
dec
mov
push
mov
js
push
mov
pop
pop
dec
es
bound
in
jle
repnz
imul
les
test
mov
jge
arpl
add
jno
mov
mov
xchg
mov
dec
xchg
push
test
sbb
ja
mov
in
mov
scas
dec
push
add
ds
int
jle
paddb
inc
pop
pop
in
sbb
xor
jle
int3
adc
push
imul
divb
jb
rcl
xor
repnz
fsubrl
or
xor
out
stc
xor
dec
std
lock
hlt
enter
loopne
clc
push
jae
jl
fldl
sub
push
shrl
xchg
sub
inc
stos
ret
push
push
dec
scas
loopne
ret
in
xchg
xor
mov
addb
pop
mov
fstl
adc
testb
cmp
push
pop
or
mov
push
insb
pcmpgtd
lock
cmp
mov
dec
lea
lcall
mov
mov
mov
dec
jns
stos
inc
pop
movsl
lock
xchg
aam
inc
test
sub
sbb
ljmp
mov
jle
shlb
pop
addr16
sbb
jo
loop
je
mov
fdivl
rorb
or
sbb
mov
hlt
pushf
lds
stc
push
aaa
jae
or
add
xor
enter
sub
rol
cltd
cmpsb
pop
leave
in
ret
add
add
cmc
push
cmp
mov
mulb
test
rcrb
loop
insb
mov
push
pop
pop
daa
mov
fisubrl
mov
dec
pop
out
mov
mov
mov
mov
adc
ljmp
push
mov
lods
xlat
insb
push
add
or
mov
fsubs
jae
push
lea
jb
sar
jbe
divl
push
mov
pop
push
push
pop
inc
mov
repnz
nop
out
lcall
push
pop
sahf
sbb
mov
inc
aaa
sahf
mov
xchg
inc
jo
iret
in
sbb
or
scas
or
pop
js
in
jns
cmp
cmp
push
std
pop
and
into
mov
das
and
push
or
jb
popa
mov
hlt
mov
sbb
movsb
ficoml
fidivrl
inc
xor
cmp
push
dec
xlat
fbstp
add
stos
sbb
jmp
pop
xlat
mov
mov
mov
out
rorb
pop
jb
cmp
clc
push
push
push
mov
scas
add
fnstsw
adc
cmp
add
sub
das
xor
addl
es
or
cmpsl
inc
push
das
cmc
enter
lret
mov
xchg
pop
jnp
cli
add
or
mov
push
inc
popf
arpl
leave
ret
push
mov
movsl
stos
inc
dec
mov
lahf
mov
push
xchg
and
sub
add
pop
mov
cmp
jge
push
cs
jge
mov
rorl
pop
or
fwait
int3
dec
mov
add
dec
pop
adc
or
and
adc
push
addb
jo
scas
cld
mov
mov
or
fwait
dec
dec
cmp
inc
mov
sub
xchg
or
dec
xchg
addl
das
ljmp
mov
icebp
xchg
cltd
jl
ret
das
add
xor
addl
shll
sub
lods
sahf
rorb
fsts
or
adc
jecxz
xor
sbb
or
jnp
inc
sbb
jg
loopne
jb
pop
dec
pop
xor
cld
lds
inc
mov
inc
hlt
xor
sarl
sub
jo
add
or
sbb
clc
inc
setns
inc
jp
inc
gs
jae
out
in
mov
loope
out
sub
sar
mov
sub
aad
fs
nop
jns
insb
jno
flds
xchg
sbb
or
test
xor
jmp
fwait
cmp
dec
movsb
daa
mov
jb
xchg
sbbb
xchg
insl
pusha
inc
add
jbe
xlat
and
jno
std
xor
je
lret
popa
push
fnstcw
int
enter
jo
mov
popa
push
add
or
cmpsl
add
stc
leave
shr
out
out
sub
fmull
lret
std
test
stc
push
orl
mov
mov
shrb
jo
and
fstl
add
and
rorl
int
cmp
mov
fimull
enter
test
dec
inc
add
inc
inc
dec
and
das
out
mov
out
loop
mov
out
and
add
ljmp
ljmp
leave
nop
lcall
mov
mov
hlt
push
daa
fisttpll
adc
pop
icebp
pop
xchg
mov
sub
dec
cmc
rcr
sub
out
test
in
ss
push
sbb
push
das
insb
jmp
lret
cmp
sbbl
lret
pusha
jg
mov
or
pop
es
je
and
shrb
sti
pop
sub
push
aas
cmpsb
gs
addl
lret
fwait
mov
std
ret
imul
popf
add
daa
pop
and
cld
mov
mov
sub
jge
jmp
in
jbe
adc
mov
mov
lcall
add
aas
inc
dec
jmp
xor
mov
and
lcall
inc
mov
push
xchg
fistpl
popf
scas
andl
je
sti
iret
mov
pop
out
out
xor
ret
pop
xchg
inc
mov
inc
jge
mov
das
shl
adc
push
ja
in
push
sbb
into
idiv
out
pop
cli
call
sub
mov
fildll
mov
js
or
mov
aam
pop
add
scas
enter
mov
xor
jle
dec
mov
jge
dec
mov
gs
fmul
jecxz
int
rcll
jae
stc
fsubrp
xchg
add
and
mov
xorl
test
adc
push
addr16
mov
jp
mov
add
daa
je
jnp
pop
out
cld
jne
or
stos
les
cs
xchg
add
rcrl
call
std
sbb
sub
inc
xlat
cmpsl
sub
sbb
push
mov
inc
mov
jae
lods
xor
popf
nop
inc
pop
sbb
push
dec
pop
mov
sub
xchg
push
gs
jb
or
std
mov
xor
add
jno
popf
insb
pop
fidivl
xor
rclb
xchg
jmp
out
bound
jnp
dec
addb
pop
repnz
push
cli
stc
decb
xchg
jmp
dec
add
in
push
aas
roll
negl
out
push
scas
les
dec
cmp
pop
nop
xor
mov
cmp
clc
jnp
int
mov
out
cwtl
pop
and
dec
sub
fs
loope
xchg
arpl
lcall
mov
mov
jns
pop
test
sub
push
lods
call
testb
ret
jl
lea
shll
subl
rcrb
idivl
test
cld
sbb
lret
shlb
push
add
push
adc
jmp
add
push
aas
inc
testl
ljmp
ficompl
sbb
xchg
cmpsl
std
push
rep
les
lret
loopne
and
sbb
jns
es
dec
push
fildl
loopne
popa
pop
lret
pop
xchg
movsl
adc
imul
andb
jno
sbb
ret
xchg
push
lret
loop
push
cmp
pop
adcb
jae
ja
adcb
add
call
test
xor
cmpsl
mov
dec
jae
stos
je
inc
pop
icebp
mov
clc
adc
test
movsb
sti
stos
mov
mov
std
cmp
add
cmp
cmpb
stc
and
xchg
sti
jnp
xor
je
push
jg
push
loopne
sbb
lods
mov
sub
cltd
mov
xor
mov
dec
lcall
adc
cltd
imul
test
into
aas
and
or
sub
ret
inc
je
loopne
mov
jnp
ret
pusha
popf
ja
jecxz
mov
sub
lods
sbb
ss
sbb
nop
mov
sbb
mov
lret
push
xor
lods
xor
rcrl
add
jbe
mov
mov
fistl
stos
lret
fwait
sbb
sbb
arpl
fildll
pop
scas
inc
outsl
push
sub
ret
leave
stc
push
mov
cmp
push
sub
mov
test
inc
dec
push
outsl
sti
pop
sbb
mov
inc
arpl
fisttpl
ss
insb
test
xchg
sbb
aad
dec
push
push
xchg
mov
mov
repnz
xor
orb
sbb
cmpsb
or
or
cmpsb
add
mov
fbld
outsl
popa
cs
mov
cld
stos
stos
lcall
mov
dec
out
test
jge
fidivrl
ficoms
cmpsb
pop
xor
sti
sbb
sub
jb
lret
outsb
jge
pop
push
lock
repz
pop
and
and
popf
sbb
inc
int
shl
and
lcall
and
xchg
or
adc
or
adc
jge
lahf
outsl
call
cmp
jmp
inc
imul
iret
ficoml
xchg
push
cltd
insl
in
cmpsb
xchg
test
jb
ljmp
adc
loop
and
fdivs
jne
repnz
aad
or
inc
push
sbb
fld
adc
fisttpl
sbb
push
jae
lret
inc
cs
imul
mov
or
movsl
cmpsl
in
jbe
repz
lods
out
mov
sub
push
mov
mov
sti
daa
sub
jge
pushf
or
stos
test
sub
lods
data16
bound
rcrb
cli
jb
loope
shll
inc
ljmp
sahf
inc
mov
mov
repnz
cmp
dec
push
sbb
push
ss
mov
loopne
fdiv
xchg
enter
pusha
jbe
xorb
mov
ret
sahf
pop
rolb
shlb
jle
mov
sub
pop
and
sub
mov
stos
mov
sub
mov
or
and
rcl
mov
xlat
inc
cmp
mov
call
jbe
sub
xor
cmpsl
sub
xchg
leave
sti
pop
and
cmp
scas
add
inc
dec
xchg
pop
into
jmp
rolb
sti
push
pop
je
dec
divb
mov
fstps
ss
jno
shll
test
int3
jle
cwtl
xor
xchg
lock
loop
xor
sub
inc
lods
sbbl
lea
push
xor
cwtl
cmp
sbb
mov
dec
inc
dec
pop
mov
aas
popa
in
mov
xchg
andl
or
mov
je
sub
ss
fsts
scas
jne
jbe
and
inc
jge
mov
lock
mov
rcr
aam
mov
in
inc
or
jecxz
dec
mov
mov
mov
flds
fsts
int
jg
subl
enter
mov
lcall
push
add
stos
repz
in
enter
fldenv
mov
loope
outsb
or
xchg
nop
jmp
cwtl
push
icebp
mov
jle
lods
rclb
push
bnd
repnz
sub
fldenv
loopne
and
dec
into
cmpb
xchg
ds
divb
divb
dec
mov
test
add
out
sbb
jle
mov
out
ret
cmpl
pusha
xchg
lea
jbe
out
dec
or
jmp
lock
pop
sbb
cs
pop
and
adc
push
mov
sarl
outsb
adc
pop
dec
imul
xlat
mov
dec
mov
jg
ficoms
out
cmp
stc
pop
fistpl
inc
jb
call
int3
mov
cmpsl
int
push
addr16
jnp
cli
xlat
lret
add
xor
and
daa
sub
loopne
jno
fsubrp
jl
sub
jo
shll
clc
jg
dec
into
mov
mov
inc
faddl
daa
cmc
sub
push
in
out
dec
mov
andl
adc
or
in
xchg
pop
out
mov
jp
iret
sub
mov
test
sarb
aaa
pop
add
fnclex
ret
inc
push
xchg
pop
cwtl
inc
ficomps
add
mov
cmp
scas
jge
xchg
push
inc
xor
mov
pop
sarl
xor
sbb
push
mov
and
mov
push
cmp
inc
lods
js
data16
jnp
fildl
lret
inc
fimuls
insl
mov
push
dec
nop/reserved
add
aaa
pop
jb
std
repnz
and
jmp
xor
sbb
add
xchg
push
adcl
movsb
inc
pop
sti
push
fiadds
lds
cmp
mov
imul
jno
xchg
and
cld
sub
pop
pusha
pop
stc
iret
shld
test
nop
add
notl
mov
xor
jnp
call
insb
push
pop
icebp
xor
in
and
gs
mov
fstps
loope
imul
jp
and
test
inc
sbb
dec
xor
in
ret
mov
rcrb
mov
pushf
mov
outsb
pop
add
cmpl
lock
iret
jb
shll
push
out
in
jmp
mov
sbb
mov
and
ljmp
jecxz
xlat
sahf
stos
data16
mov
push
pop
push
ja
jo
mov
aam
bound
xor
mov
xorb
cmc
addr16
shl
add
shrb
sarl
in
pushf
adc
std
mov
pop
pop
leave
mov
js
xchg
ja
inc
lret
into
testb
sbb
push
push
insb
mov
cmp
test
push
xor
and
mov
push
call
adc
out
sub
jp
add
cltd
stos
popa
outsb
rolb
push
insb
add
jae
cltd
and
push
sbb
cmpsb
cmpsl
ret
clc
pop
mov
jecxz
mov
test
sahf
movsl
fcmovnb
es
daa
aam
rcr
jle
push
stos
pop
arpl
shlb
stos
rolb
cmpsb
xor
xchg
cmp
ret
cld
jns
int3
mov
jmp
repnz
mov
imul
push
xor
into
sbb
rolb
outsl
cwtl
cs
ds
and
sub
xor
jmp
jge
jg
fldenv
mov
inc
mov
divl
scas
lods
pop
jmp
mov
mov
nop
loope
inc
sbb
test
out
je
call
jge
addr16
bound
dec
mov
fmuls
add
sub
imul
push
in
push
push
dec
inc
movsl
fnstenv
inc
dec
pop
mov
mov
movsl
or
push
dec
and
push
inc
dec
jno
xor
jle
adc
ret
xchg
mov
mov
cmp
test
jl
pop
leave
ret
movsb
in
add
adc
mov
xchg
shlb
add
push
push
cmp
mov
cld
int3
aad
inc
xchg
cmp
mov
fldt
in
ljmp
or
jno
mov
cmc
ljmp
xchg
push
xchg
xchg
inc
fidivs
jle
jl
push
cmp
dec
and
mov
loope
rol
mov
adc
mov
dec
cmc
aad
ret
and
push
stc
or
cmp
inc
rcrl
cmp
mov
test
and
adc
mov
rcrb
sbb
lock
push
jb
sbb
inc
cli
pop
dec
ljmp
push
ds
pop
ja
lahf
mov
pop
in
mov
test
push
xor
xor
pop
mov
outsb
dec
and
push
mov
or
mov
pop
adc
and
xor
in
dec
lsl
pop
inc
and
xchg
pushf
mov
push
lock
jnp
mov
out
inc
mov
mov
sbb
dec
in
and
daa
std
fistl
fs
push
xchg
sub
fcompl
mov
cmpsl
xchg
dec
pusha
jmp
dec
cmp
test
adc
pop
sbb
inc
je
inc
icebp
push
fidivrl
stc
sbb
pop
mov
cmc
push
mov
sbb
cmp
dec
push
jl
movsb
mov
and
mov
lods
out
jb
push
add
pop
imul
xchg
pop
clc
add
mov
push
lock
jns
mov
out
jle
and
imull
jno
xchg
mov
xor
fstpt
mov
addb
test
out
xchg
cs
mov
xchg
lcall
sbb
cs
notb
fdivrl
fs
xchg
lret
scas
ds
cmp
mov
mov
gs
vpsrlw
jecxz
faddl
jecxz
jg
imul
gs
outsb
mov
fildl
inc
xchg
pop
in
mov
dec
jns
dec
mov
pop
out
test
notb
arpl
xchg
loop
sbb
fidivrl
mov
ficoml
dec
jge
dec
xor
sub
jbe
jns
or
or
xor
and
xor
call
jge
or
sbb
dec
out
push
repnz
out
and
outsl
dec
jg
pop
cmp
sahf
and
mov
ljmp
add
sub
mov
shll
insl
jp
xor
inc
out
and
ret
sbb
loope
aaa
inc
pop
iret
movsl
sub
out
scas
loope
gs
mov
clc
mov
pop
std
add
js
test
inc
add
fadd
mov
jl
sub
jno
xorl
inc
mov
ret
or
jnp
loope
and
adc
lock
fcom
imul
imull
fdivs
sub
jb
pop
cmc
daa
xchg
mov
pop
mov
js
or
and
adc
pop
xor
imul
les
push
jmp
das
cmp
push
cwtl
adc
es
ljmp
sbb
sbb
pop
ret
mov
mov
add
scas
mov
dec
call
test
rolb
in
push
sbb
std
fildl
cltd
std
jl
call
push
mov
push
mov
pop
insb
xchg
insl
enter
ja
into
addr16
call
fsts
pushf
test
aaa
lods
jp
insb
and
shlb
fdivs
xchg
push
mov
insl
popf
or
sahf
call
rol
sbb
cmp
xor
addr16
faddl
sub
add
imul
jp
push
ds
or
rclb
sarb
dec
xor
cmp
incl
sbb
jne
mov
xchg
imul
fildll
fimuls
imul
jecxz
out
stos
mov
xchg
xchg
imul
or
add
inc
test
out
jno
stc
mov
sahf
mov
ds
add
pop
std
adc
mov
or
sbb
push
sahf
pop
dec
cmp
sbb
lock
or
es
sahf
neg
ds
xchg
int3
icebp
xlat
jne
in
mov
cli
das
pop
scas
mov
shlb
loopne
sbb
aam
inc
mov
jle
add
or
dec
fbld
sbb
lds
scas
cmp
das
pop
cld
scas
jae
iret
out
out
gs
jmp
inc
fmul
sub
add
jns
into
sub
cmpsl
imul
cmp
clc
call
imul
mov
arpl
scas
mov
daa
ret
sub
jl
loopne
mov
int3
push
lret
lret
out
shll
xor
mov
xor
subb
pop
or
nop
repz
pushf
out
cltd
jge
out
mov
cmpl
xor
sub
mov
add
mov
fdivrs
xchg
mov
into
ds
push
dec
and
bound
mov
pop
outsb
xchg
divb
xor
xlat
dec
es
loopne
push
pop
andl
inc
or
je
push
pop
cmpsb
imul
jle
std
adc
jg
xchg
cmp
pop
imul
outsb
sar
and
mov
push
stos
xchg
arpl
aaa
dec
add
xlat
push
data16
fwait
or
fs
cmpsl
inc
lcall
push
push
mov
test
push
sub
or
jnp
pop
std
mov
or
cmp
orb
sbb
fadd
int
in
rcrl
cmp
std
fsts
add
mov
mov
adc
xor
test
sti
jo
sbb
js
and
fnstsw
mov
push
lods
ret
aaa
mov
insb
inc
pop
mov
stc
mov
and
or
iret
movsl
cmp
sarb
jno
sarb
cmpsb
mov
bndstx
int3
push
imul
loope
cmp
jmp
mov
add
stos
xchg
lock
jns
stos
in
sbbb
stc
mov
les
ja
stc
addb
mov
sub
inc
mov
nop
inc
ds
sti
icebp
pop
je
insl
loop
outsb
jecxz
addr16
movsb
stos
adc
jecxz
or
inc
mov
movsb
sub
jno
xchg
lcall
sbb
add
stos
clc
lret
test
in
mov
stc
sub
lahf
je
add
aam
fcoml
or
mov
aam
aas
test
add
dec
test
dec
add
js
sti
xchg
pop
loope
into
mov
testb
xor
xchg
inc
pop
or
adc
mov
ss
xchg
lcall
fucomp
or
adc
or
insb
clc
fadd
ret
mov
mov
insl
stc
xorb
pop
and
ja
lret
test
fildll
add
sub
enter
test
cmp
or
lret
sbb
or
in
xchg
mov
scas
je
xchg
jbe
cmp
xchg
roll
jo
jg
rolb
insb
cltd
loop
repz
outsb
loop
shl
and
and
or
incb
sbb
jnp
ss
xor
sub
cmpsl
mov
iret
mov
fsubrl
adc
pop
repz
push
inc
aas
lret
mov
xor
outsb
inc
push
fwait
jb
jmp
adc
stc
int
adc
xchg
cli
jmp
shrd
inc
movsl
jb
jg
shll
fdivs
push
fstpt
insb
jb
orl
sbb
insl
dec
mov
push
jno
mov
icebp
cltd
push
adc
mov
ja
jge
cmp
out
or
repnz
or
movsl
fs
data16
sbb
push
jg
int
mov
or
sbb
inc
and
cwtl
rcl
cmpsl
push
lret
shlb
xchg
lods
mov
fs
movsb
mov
loopne
stos
adc
push
mov
dec
xchg
paddw
inc
pop
mov
mov
adc
push
inc
xor
enter
mov
sub
xchg
sbb
xchg
inc
movsb
xor
out
lahf
outsl
stos
pop
and
cmp
cmp
in
dec
xchg
in
adc
inc
sub
and
pop
and
pop
sub
sbb
hlt
ret
cmpsb
xchg
movsl
adc
and
ja
inc
inc
test
sahf
out
test
adc
fnstcw
sbb
bound
lods
push
adcb
mov
dec
js
inc
out
clc
sar
icebp
xchg
fbstp
xor
xor
lahf
imul
cmp
jnp
or
xor
loopne
and
imul
xchg
sahf
gs
jns
cmp
aas
or
shrl
push
jno
out
dec
aam
ret
leave
pop
and
movsl
mov
mov
rorb
pop
sbb
push
cltd
cltd
pop
rcrb
or
cmp
cmp
inc
pushf
xchg
les
sub
sub
mov
ds
lcall
test
sub
push
std
xor
mov
ret
inc
scas
arpl
sbb
in
sahf
jmp
xchg
sarl
xchg
jmp
xor
or
icebp
in
icebp
push
and
data16
in
mov
sbb
add
sahf
mov
shlb
sub
xchg
daa
aam
pushf
clc
jb
pop
mov
test
dec
scas
cmp
pop
mov
sbb
mov
lret
bound
jne
cmp
cld
mov
jnp
data16
mov
in
pop
aaa
lcall
push
mov
es
cld
adc
dec
sub
mov
mov
adc
int
shrl
lock
stos
cld
fistpll
xor
iret
and
pop
sub
inc
push
fwait
and
outsb
std
fs
les
aaa
sbb
xorl
setns
cmp
mov
mov
mov
sub
xchg
pop
cmp
mov
aam
xor
push
fcomps
xchg
fsubrl
xchg
gs
and
punpckhdq
fdivs
fwait
outsl
cmp
mov
fisubl
push
adc
outsb
in
inc
xor
xchg
sub
mov
push
lock
imul
cmp
or
js
je
push
sbb
sahf
mov
stos
push
or
mov
pop
adc
push
dec
scas
mov
test
jnp
movsb
push
out
add
test
loopne
xor
testl
sub
jno
and
xor
mov
add
inc
fsubrl
orb
mov
pop
add
jg
ss
xlat
sahf
test
mov
divl
fisttpll
xchg
jmp
or
add
mov
cs
xchg
or
in
stc
scas
rolb
push
inc
or
push
lock
jno
ja
out
mov
aam
jp
divl
inc
adc
jae
xchg
cmp
push
call
jae
repz
jecxz
cs
mov
in
mov
or
sbb
and
jecxz
fidivrl
scas
xchg
mov
mov
jo
icebp
inc
ds
push
sub
mov
mov
pop
add
xor
mov
jle
push
sub
jl
lret
inc
cld
cwtl
jnp
jbe
dec
or
les
bound
jecxz
inc
adc
cmp
push
sbb
insl
pop
decb
dec
in
iret
jns
xchg
or
push
ret
rolb
mov
mov
sbb
jo
xchg
mov
out
or
cld
faddl
xchg
push
add
enter
push
or
ds
and
lds
push
push
stc
sbb
aam
push
je
xchg
arpl
or
ret
xor
lahf
push
popw
xor
int3
mov
loopne
shll
mov
push
jge
xchg
xchg
icebp
push
inc
ljmp
stos
push
pop
xchg
push
cmpsb
mov
push
sub
inc
adc
mov
test
imul
je
scas
shrl
idivb
dec
mov
addr16
enter
imul
gs
mov
enter
mov
xor
icebp
add
add
ljmp
pop
mov
push
sub
jp
lret
mov
fstps
fldt
add
mov
jns
ljmp
imul
add
cmc
push
mov
xchg
ljmp
std
mov
add
jns
sbbl
out
scas
test
fcom
loopne
aas
xchg
loop
mov
rolb
popa
xchg
dec
sbb
sbb
movsb
inc
push
mov
inc
jle
sub
sub
clc
inc
xchg
inc
or
jp
shrb
loop
movsl
inc
out
lds
or
in
scas
mov
mov
into
aad
mov
xchg
icebp
inc
sti
test
es
and
xchg
pop
popf
mov
das
ss
mov
sti
test
mov
push
and
pop
imul
stos
icebp
lods
pusha
mov
adc
sbb
repnz
mov
mov
aaa
inc
dec
and
fcmovnbe
leave
loope
les
in
xchg
les
fistl
clc
and
or
in
fwait
cmp
pop
xor
test
xor
lds
imul
or
xchg
push
insb
fistl
jne
xor
xor
outsb
xchg
or
pop
ret
mov
pushf
shl
xlat
adc
pop
clc
and
aad
sbb
dec
and
add
jno
inc
rolb
jge
xchg
mov
arpl
ljmp
insb
bound
mov
xchg
or
fwait
hlt
subb
mov
aam
push
pop
xchg
xchg
mov
push
movsb
adc
repnz
sahf
gs
test
fnop
push
cmp
imul
cmc
imul
xchg
xlat
pusha
sbb
xlat
in
sbb
push
mov
xchg
mov
out
into
cmp
cld
gs
mov
lcall
push
jge
and
jge
insb
cmp
sub
pop
jmp
scas
jecxz
pop
jne
popa
mov
data16
xor
decb
lods
out
or
mov
push
xor
lods
inc
xor
mov
add
lahf
jmp
shrb
stos
lahf
pushf
jmp
fld
dec
adc
jno
std
adc
mov
nop
and
xor
mov
inc
js
or
pop
pcmpgtb
insl
xchg
dec
push
jecxz
mov
rcl
in
rcl
or
fisttpl
xchg
lret
add
fcomip
jg
ja
push
data16
sarb
dec
ret
cs
dec
pop
in
stc
adc
xchg
repnz
xchg
adc
mov
jb
xchg
nop
jl
jge
je
push
negb
pop
repz
imul
int
hlt
ror
loop
inc
outsl
pop
pop
dec
xor
shll
movsb
inc
lret
cmp
mov
das
adc
push
divb
xlat
cmpsb
int3
loope
and
inc
jb
mov
inc
lret
cs
xor
pop
add
pop
pop
call
mov
jb
dec
push
add
repnz
inc
mov
pop
int
loopne
dec
adc
mov
ljmp
adcb
cmpsb
cmpl
sahf
mov
mov
aas
mov
fxch
ljmp
aad
add
add
mov
movsb
stc
jns
stc
shll
mov
xorl
jae
pop
cmc
sub
icebp
cmp
out
shlb
test
ja
sahf
and
add
adc
sarb
sbb
gs
cltd
fnstenv
scas
ret
xor
aaa
mov
and
xor
outsl
out
sahf
lahf
gs
jmp
inc
sub
jae
xor
inc
sub
mov
jbe
dec
stos
push
jns
das
pop
fcmovbe
dec
addl
xor
rol
enter
je
std
xchg
popa
cmp
pop
mov
xor
test
mov
inc
test
lods
dec
lcall
mov
jge
or
pop
fwait
mov
or
dec
notl
scas
fmuls
xchg
mov
mov
std
pop
xchg
stc
xchg
and
inc
jp
stos
dec
imulb
in
je
cmp
sub
jecxz
int
and
adc
loopne
sbb
xchg
lahf
rclb
jae
lcall
jg
daa
xchg
jp
dec
enter
mov
ljmp
notl
scas
movsb
mov
stos
push
cmpsl
xchg
fildll
mov
maskmovq
testl
aad
popf
sub
and
cmpsl
mov
sbb
push
inc
inc
mov
xchg
cwtl
idivb
dec
cmc
in
fcompl
roll
pop
notb
sahf
aas
push
pop
lahf
push
rcr
xchg
lcall
jns
mov
dec
mulb
icebp
mov
shr
int
imul
add
add
add
dec
icebp
out
leave
push
movsl
in
mov
inc
sbb
leave
sbb
xlat
pop
inc
push
imul
mov
mov
inc
out
cmp
inc
xchg
iret
fcoml
jb
stc
cli
shll
xchg
xchg
mov
xor
xchg
ljmp
ds
jo
xchg
sub
lds
sub
pop
add
inc
fstpl
insb
and
mov
repz
adc
arpl
jae
add
cs
add
inc
xchg
mov
lds
hlt
out
jmp
and
xor
mov
push
jnp
inc
fsubrs
inc
add
pop
arpl
add
daa
sbb
pop
push
xchg
and
adc
dec
dec
adc
fisttps
xchg
mov
aas
pop
jg
push
or
mov
ror
xchg
cmc
mov
call
cmp
jnp
sbb
sub
xchg
or
sub
mov
cmp
ja
mov
xlat
mov
adc
mov
unpcklps
in
in
adc
mov
pop
xchg
cmp
add
icebp
cwtl
repnz
leave
cwtl
dec
jmp
aam
loop
rcrl
arpl
dec
push
ja
cli
mov
push
xor
mov
out
sbb
in
cmc
cmp
das
test
jnp
lcall
add
jp
xchg
pop
in
push
flds
addr16
lret
je
inc
xchg
or
in
mov
repnz
shl
sahf
loope
sbb
cmpsl
mov
clc
cmp
inc
into
cltd
into
pop
add
sub
push
leave
insl
or
mov
movsl
push
sub
sbb
sti
mov
out
lcall
dec
or
imul
fstpl
sbb
xor
or
fisttpl
scas
aam
cmpsl
push
int3
scas
jge
or
ja
pushf
jmp
pushf
mov
stc
mov
mov
out
add
insb
aad
or
je
push
cltd
push
push
cmp
jge
cmp
and
or
pop
stos
addl
shrb
lahf
aaa
inc
jnp
or
and
xchg
jmp
in
lret
sbb
xchg
insb
sbb
adc
jo
test
dec
mov
pop
jp
stos
mov
int
mov
jmp
inc
into
ret
cmp
dec
out
repnz
add
push
hlt
lret
sarb
jecxz
cmp
adc
sub
subl
pop
frstor
mov
sub
inc
cmp
dec
xor
add
add
jbe
imul
mov
inc
out
add
or
and
dec
pusha
jo
in
adc
xchg
mov
cmp
shlb
push
fmuls
jge
xlat
mov
pop
rcrl
jl
sbb
pop
mov
dec
pop
mov
inc
jge
movsl
dec
popf
fsubrl
push
mov
rcr
mov
setle
es
adc
push
fistpl
ja
mov
loopne
orl
sti
mov
mov
xchg
mov
inc
cmp
push
push
nop
fildll
inc
mov
enter
fimull
push
mov
xor
fcomps
das
push
push
fwait
leave
jecxz
pop
popf
das
lea
sub
fs
insb
add
add
cwtl
cltd
xor
cmp
add
lock
sub
push
mov
cmc
dec
andb
out
or
out
mov
rol
test
xor
add
jp
inc
xchg
inc
xor
lret
sub
jne
std
mov
fdivr
sti
xchg
pop
sbb
imul
inc
push
testl
popf
daa
or
int3
insl
fmull
adc
daa
add
pop
jns
or
jbe
repz
inc
xchg
jmp
adc
repz
imul
and
dec
mov
and
in
mov
mov
in
push
cmpl
xchg
stos
setns
pop
imul
xchg
mov
xor
inc
and
loopne
in
shl
push
scas
fnstcw
xor
out
inc
call
mov
aas
lea
sub
mov
fsubr
lret
inc
int
cmpsl
dec
aad
hlt
lret
clc
loope
jp
inc
cmpsl
lret
shll
push
xchg
arpl
addb
add
movsl
jg
push
add
aad
mov
pop
or
movl
in
and
call
push
push
in
jb
jnp
fsubl
push
pop
fwait
xchg
sbb
insl
loopne
push
mov
or
lds
push
mov
fisttpl
mov
add
pop
in
les
js
and
jl
xor
jns
fdivs
cmp
adc
jmp
dec
es
mov
mov
inc
push
insl
pusha
pop
cmp
sub
mov
ret
int
pushf
nop
cmp
sub
bswap
test
dec
orb
test
push
cmp
and
sub
gs
or
jae
mov
and
jmp
clc
pop
inc
mov
int
insl
lahf
xchg
idivb
outsb
add
movsb
push
push
mov
in
outsb
nop
scas
movl
pushf
mov
jle
push
sbb
lret
popa
pop
pushf
pushl
inc
mov
fildll
pinsrw
stc
subl
imul
mov
cmp
adc
loop
push
push
mov
les
xchg
sti
sbb
sbbl
aad
lock
ss
rcrl
addr16
sbb
icebp
or
push
dec
cmp
movsb
jne
jp
ljmp
imul
int
xor
fstpl
das
adc
popf
pop
and
mov
mov
mov
int
mov
adc
addr16
sbb
mov
cmp
and
loop
adc
hlt
add
xchg
push
xor
push
mov
sub
xchg
inc
scas
push
subb
adc
add
das
lret
lret
shr
mov
inc
popa
add
call
lahf
outsl
mov
daa
ja
pop
jb
inc
sub
ret
dec
mov
fwait
stc
repz
pop
mov
push
lds
mov
jp
and
mov
inc
int
mov
dec
or
xchg
cmp
clc
scas
jg
add
outsl
inc
add
dec
mov
int3
idivl
or
cmp
in
outsb
aam
pop
rcr
ss
or
aas
dec
fmulp
adc
les
jecxz
push
filds
sbb
adc
loop
and
pop
dec
pop
imul
mov
arpl
outsb
imul
lds
push
pop
adc
ljmp
fadd
outsl
enter
fisubrs
js
pop
les
dec
cmp
in
hlt
test
mov
add
test
mov
xor
xor
gs
or
mov
lahf
rclb
mov
add
pop
insb
mov
popa
xchg
add
test
dec
arpl
ficompl
loope
in
daa
pushf
ss
mov
into
out
arpl
and
lods
imul
cmpl
mov
push
mov
repnz
add
icebp
push
je
pop
pop
adc
sub
inc
pop
xchg
pop
cmpl
xchg
dec
jmp
stc
hlt
rolw
aam
inc
js
lods
push
xchg
and
inc
cmp
push
int
cs
aas
mov
repnz
xor
xchg
cmp
cmpsb
cmp
mov
sub
jl
lock
jo
cmc
outsl
dec
aam
jo
adc
mov
aaa
xor
jnp
and
roll
gs
jo
fisttps
test
fbld
ficompl
or
jecxz
flds
sbb
imul
xlat
imul
mov
popf
das
mov
les
pop
cmp
out
pusha
lods
sbb
inc
sbb
or
lods
mov
js
scas
scas
sti
insb
loope
xchg
in
enter
flds
cmp
jb
pop
push
imul
dec
sbb
loop
andw
cmp
xor
addr16
or
cwtl
inc
push
cli
mov
aad
rorb
test
cmc
sub
rclb
mov
push
lods
mov
sub
adc
mov
out
cs
push
dec
fnstcw
in
sahf
push
subb
xor
inc
rclb
movsb
repz
fldenv
pop
pcmpgtd
mov
or
pop
repz
mov
cmp
adc
aam
sbb
lods
repnz
out
xchg
fcompl
inc
stc
daa
aas
xchg
addl
jae
popa
insl
pushl
aas
push
mov
xor
xchg
mov
inc
bound
sub
pop
or
push
cmp
or
sbb
push
pop
pop
mov
dec
mov
adc
daa
and
out
test
movsl
mov
sbb
fistps
inc
push
mov
loop
mov
cmp
mov
leave
jno
mov
push
jg
or
sti
icebp
mov
stos
mov
dec
mov
push
inc
outsb
mov
aaa
cld
rcll
inc
inc
cmp
mov
test
and
cmp
data16
mov
cmp
adc
pop
inc
jl
push
add
movsl
mov
jb
mov
xchg
cmp
cmpsl
cmp
mov
nop
out
addb
inc
movzbl
push
and
addr16
jne
xor
xchg
in
add
outsb
sub
inc
lods
stos
mov
outsb
mov
pop
xlat
mov
or
jne
mov
shrl
enter
push
xchg
mov
jnp
add
mov
sub
daa
dec
pusha
push
mov
aad
jns
dec
jg
push
adc
push
mov
repnz
adc
xor
mov
mov
push
xor
cwtl
clc
loopne
std
hlt
jg
out
push
mov
cld
data16
push
mov
mov
sbb
xchg
sub
cmpsb
jmp
push
push
cmp
out
je
xchg
test
ficoms
or
jle
push
pop
dec
mov
push
lahf
jnp
and
sbb
in
jb
out
sbb
inc
or
or
sbb
in
mov
xor
shlb
aas
xchg
mov
aas
mov
dec
jns
mov
enter
mov
mov
cwtl
into
sbb
sub
mov
adc
xchg
or
clc
pop
pop
mov
xor
xchg
dec
sti
mov
adc
pop
mov
jmp
shlb
lcall
jge
jmp
and
sub
icebp
xchg
cs
mov
cwtl
loop
xor
dec
in
adc
mov
adc
popf
cmpsl
es
and
dec
adcl
push
loop
int3
arpl
in
rolb
xchg
or
mov
jne
ljmp
push
mov
outsb
mov
cmp
test
fcoml
outsl
sbb
lods
mov
inc
xor
dec
push
jae
xor
in
pop
call
mov
lret
jle
lcall
test
fsubrs
lods
addr16
add
out
mov
dec
xor
fistpll
aad
leave
ret
out
popf
xor
popa
pop
xor
out
xor
lcall
pop
mov
ljmp
aaa
mov
xor
jnp
sbb
xor
pop
lock
popf
xor
adc
adc
scas
sarb
or
lret
adc
push
sbb
push
loope
push
inc
in
es
mov
lret
xor
das
pop
or
xchg
movsl
adc
xchg
incl
lods
push
cmp
std
sarl
fdivp
in
mov
jbe
jns
mov
jge
pop
iret
fcoml
adc
inc
loop
ss
xor
xor
jb
jo
stc
lret
lods
sub
ret
setne
movsb
stos
test
dec
xchg
xor
lret
test
dec
iret
cmp
pop
lcall
test
shl
xchg
cmpsb
or
mov
push
mov
shlb
les
shr
lahf
lods
shrl
jecxz
sarl
ljmp
subl
jns
dec
mov
pop
into
add
xor
jl
dec
clc
fsubs
pop
bsf
idivb
and
xlat
subb
sbb
je
test
orl
mov
cwtl
fmuls
mov
vcvtph2ps
push
mov
jmp
ret
cmp
pop
aad
inc
insl
mov
pop
scas
lahf
packssdw
mov
jne
ja
push
mov
cmp
inc
out
aaa
rclb
clc
mov
jp
loop
mov
xchg
pop
xchg
mov
mov
mov
test
lret
or
loop
xchg
mov
inc
iret
pop
fisttpll
movsb
add
and
call
in
mov
repz
and
mov
ljmp
xor
cmc
pop
jp
and
cltd
jp
xchg
jl
cld
loop
jo
stc
mov
test
mov
cmc
dec
inc
test
in
cmp
sub
aaa
lds
mov
xchg
cwtl
jno
bound
mov
lods
or
cmp
shlb
pop
dec
jno
mov
repz
mov
push
addr16
or
jns
outsb
xor
add
in
adc
and
xor
mov
loope
xor
inc
in
aaa
es
icebp
jno
mov
cmp
or
adc
aaa
test
cwtl
test
mov
aaa
and
mov
mov
cmp
sbb
sbb
cmp
mov
jge
and
jecxz
aam
jb
and
dec
inc
lret
cwtl
push
into
pop
push
repnz
xchg
push
add
icebp
pushf
adc
push
out
subb
fldt
sbbl
shll
sbb
jne
jle
insb
and
out
mov
iret
scas
xchg
add
or
sbb
int
lret
mov
fwait
xchg
imul
adc
mov
sub
pop
or
push
jae
inc
bsf
dec
mov
dec
cmc
xor
popa
push
insl
mov
jae
lea
dec
or
bound
gs
shrl
fs
push
leave
dec
loope
cmpsl
call
cs
push
push
scas
pop
push
popf
rol
dec
out
outsl
push
aas
fcoml
cmp
int3
sub
inc
roll
or
test
lahf
adc
fwait
pushl
cmp
lcall
scas
lock
push
xchg
mov
stos
xchg
and
fimuls
jae
xchg
cmp
mov
bound
dec
sbb
pop
cmpsb
fs
bound
pop
push
xor
push
das
push
or
inc
movsb
in
daa
std
xor
sbb
aad
sub
xchg
push
repz
push
sbb
test
rcrb
dec
and
jno
test
xor
jge
add
mov
inc
mov
push
pop
push
pop
xchg
inc
mov
ret
mov
out
xchg
or
aad
add
pop
insl
stos
sub
jbe
add
cmp
jg
in
jno
repz
pop
fdivr
mov
xlat
or
stos
fildl
dec
jbe
das
cs
aad
xorl
lods
inc
insb
cmpsl
lods
divb
movsl
push
mov
cmp
scas
or
scas
lods
push
cli
lahf
and
mov
mov
jg
mov
fadds
adc
add
jnp
xchg
adc
ds
and
inc
stc
in
mov
lods
xlat
xchg
pop
rclb
jge
loop
nop
push
add
test
xor
inc
mov
js
jo
mov
mov
jnp
sbb
mov
inc
inc
mov
sub
fldl
aam
xor
cmp
insb
out
imul
or
or
push
dec
adc
negb
mov
das
mov
pop
cmp
jno
jg
ljmp
ds
ror
int
sub
in
imul
mov
int
je
xor
int
lods
out
add
loopne
sarl
outsl
movl
gs
or
sbb
std
lods
push
inc
cmp
dec
mov
dec
adc
stc
aas
and
push
mov
inc
fmulp
cmpsl
xor
in
jl
inc
insb
or
cmpsl
lock
mov
movsl
mov
xchg
icebp
mov
ret
mov
shlb
mov
mov
scas
jmp
std
mov
dec
inc
adc
mov
mov
add
cmp
push
in
inc
adc
xorl
jns
movsl
ret
popf
dec
enter
pusha
cmp
cltd
fcoml
mov
inc
bound
pop
cmp
pushf
loop
push
jo
rcl
cld
inc
mov
dec
jae
stos
pop
fistps
pusha
inc
test
and
mov
adcl
sbbb
cli
pop
sarb
xor
xor
mov
or
loope
push
lret
jmp
add
inc
or
mov
cmpsl
mov
stos
cmp
in
jge
and
mov
mov
std
add
sbb
inc
or
sub
dec
popa
mov
jnp
lret
call
repz
pop
lcall
mov
and
xlat
pop
repnz
std
push
dec
lret
icebp
pop
incl
mov
ret
and
popa
sbb
cmpsl
xchg
adc
lock
fwait
test
xchg
mov
jns
cmp
iret
adc
mov
fwait
sub
jbe
fldenv
lds
sahf
in
xor
test
inc
inc
pop
sbb
inc
add
mov
mov
outsl
mov
lret
dec
cmp
lods
pop
adc
rolb
imul
das
mov
cmp
push
shll
outsl
adc
add
sahf
xor
cld
out
imul
in
dec
add
xchg
mov
cmp
jo
lret
add
scas
push
js
jnp
pushf
xlat
movsl
inc
andb
jbe
jge
cmp
imul
jbe
sbb
xchg
mov
xchg
pop
cmc
sbb
push
lahf
xor
xor
xor
pop
push
lods
fisttps
aam
xchg
das
xchg
dec
lds
mov
pop
fldt
mov
hlt
xchg
mov
test
jae
cmpsb
jecxz
rorl
dec
mov
rolb
add
dec
testl
call
test
mov
out
inc
jne
inc
fdivs
shlb
xchg
sarb
mov
imul
out
stos
xchg
and
clc
mov
aas
jge
idivl
aas
add
dec
out
fildl
add
sbb
je
pop
xchg
aam
popa
pop
sub
adc
sbb
ret
add
push
je
sahf
insb
icebp
shlb
movsl
mov
inc
sub
adc
lret
movsl
in
call
clc
enter
sahf
sbb
adc
jge
dec
test
push
sbb
lods
add
gs
insl
mov
test
test
fnstsw
movsl
lods
mov
jmp
outsb
sbb
pop
cmpsb
mov
mov
or
adc
psrlw
jb
sbbl
in
xor
mov
loopne
roll
lcall
pop
call
scas
adc
dec
cmp
xchg
mov
mov
inc
test
pop
jl
dec
lret
fwait
or
mov
pop
mov
dec
out
aaa
sbb
push
adc
cmp
push
cld
inc
add
js
xor
jmp
cmp
cltd
das
push
jne,pn
push
aad
jno
dec
sub
sbb
sahf
push
cmp
or
and
pop
hlt
shrb
xchg
fisubrl
adc
pop
and
subl
or
lds
loop
pop
loop
outsb
sbb
mov
idivl
and
sahf
xor
fcmovnbe
scas
push
pusha
push
add
lock
idivl
push
lods
and
dec
stc
mov
mov
mov
mov
outsb
rolb
in
sub
int3
lds
push
ret
ror
mov
mov
leave
cltd
mov
xor
push
pusha
adc
dec
and
loope
std
fcmovu
movsb
push
or
sub
mov
mul
inc
adc
rorl
jecxz
mov
stos
popf
cmp
xchg
xchg
test
jle
mov
adc
xchg
inc
movsl
dec
lods
pop
pop
call
imul
mov
ffreep
cmpb
mov
xlat
and
dec
mov
cwtl
outsb
mov
or
sbb
shl
xorb
cs
adc
mov
les
jp
and
sbb
fcoml
xor
cwtl
idivb
aam
sub
push
inc
in
sti
adc
lea
jecxz
ljmp
xchg
subb
cmp
jmp
and
fs
push
lcall
imul
scas
xchg
pop
mov
lahf
adc
lods
in
fisttps
call
fwait
push
push
cltd
sub
imul
std
lahf
dec
push
repz
je
lods
inc
pusha
jae
lret
sub
add
and
popf
push
rcrb
in
cmpsl
xchg
push
lods
mov
sbb
xchg
std
out
xchg
push
pushf
ljmp
cmpsb
push
aas
lds
int3
mov
mov
add
xchg
lods
or
es
jecxz
sub
inc
xchg
xchg
add
xor
popf
in
sarb
movsb
dec
in
push
daa
mov
shl
lret
es
jle
mov
js
jae
lods
mov
cmc
pcmpgtd
fidivl
add
out
or
push
mov
shll
mov
inc
bound
in
xchg
into
cmp
lods
mov
pop
movsb
push
xchg
addr16
cltd
lea
test
out
pop
idivl
loope
mov
sbb
dec
push
test
fldenv
pop
cmp
xor
add
push
addl
adc
mov
out
insl
cmp
out
inc
repz
cltd
sub
call
mov
aaa
add
in
pop
adc
shlb
dec
stos
sub
sbb
jp
outsb
imul
mov
or
mov
mov
mov
imul
in
enter
sbb
push
int
adc
pop
jae
ja
add
scas
xlat
ret
jl
and
rcll
mov
xchg
scas
cs
popf
fsub
adc
loop
push
dec
pop
mov
clc
xchg
divb
mov
fisttpl
scas
add
jne
in
lock
and
mov
in
ljmp
fisubs
cs
aad
loope
ss
mov
mov
adc
std
stos
ficoms
pop
mov
cmp
xchg
ja
daa
in
leave
rcl
mov
push
push
das
adc
sub
les
sbb
xchg
mov
hlt
lcall
mov
divl
arpl
cmp
nop
sahf
mov
imul
inc
and
ja
xchg
adc
jle
mov
fwait
lret
xchg
pop
sub
mov
push
movsb
push
xorb
jo
sti
pusha
adc
sbb
addr16
xchg
jne
scas
loop
dec
and
mov
pop
les
fnstsw
test
xchg
pop
out
incl
mov
cmp
xchg
sub
incb
and
scas
and
dec
outsl
xor
ret
xor
jo
loopne
stos
shl
ljmp
mov
or
mov
ds
mov
out
out
push
lock
lret
push
push
fidivl
shl
fstpt
cld
popl
repnz
repnz
mov
mov
and
insb
rorl
in
and
and
add
lods
jnp
sti
jmp
cmc
hlt
fimull
push
inc
std
mov
push
lahf
push
sub
aaa
cmp
adc
jle
std
mov
pop
cmpsl
popf
out
sub
add
int
idivl
int
xlat
xchg
out
cmpsl
int3
push
mov
in
cmp
ljmp
sub
mov
data16
fisubrl
fmuls
fwait
es
cmovbe
mov
arpl
cmp
mov
movsl
adc
push
dec
insl
or
cmp
xor
in
or
sti
fistpll
leave
jmp
pop
dec
int3
sbb
mov
add
aam
adc
imul
out
adc
jbe
inc
insb
decb
mov
imul
cmp
mov
push
mov
bound
jl
sbb
xchg
sub
test
out
fimull
xlat
push
sahf
cmpsl
pop
inc
enter
push
cmp
lret
es
aaa
les
and
sbb
cld
dec
cmp
fidivrs
ljmp
stc
sbb
sub
in
ja
xchg
repz
pop
mov
mov
adc
push
pop
rcrl
adc
adc
xlat
sar
loope
je
mov
push
mov
arpl
sahf
call
dec
pop
out
andl
xchg
mov
adc
rol
scas
xor
mov
jae
add
or
jnp
xlat
jns
shl
push
test
add
notl
pop
stc
nop
push
ss
push
push
aam
mov
pop
cmpsb
call
adcl
pop
arpl
test
mov
push
xchg
xlat
insl
push
lret
xor
rorl
test
cmp
mov
push
sub
mov
jb
call
aam
mov
pop
pop
hlt
mov
xor
xchg
jo
pop
rclb
rolb
mov
sti
mov
lock
stos
pop
iret
nop
dec
sub
mov
mov
add
pop
fists
mov
sbb
xchg
xchg
cwtl
xor
call
pop
ret
sub
lahf
cmp
pushf
mov
xchg
sbb
push
aam
fdivs
stos
bnd
stos
xchg
ret
scas
ljmp
inc
sub
scas
xchg
out
inc
js
add
and
js
or
cltd
insb
adc
jmp
sbb
and
aam
aad
int3
repnz
divl
ljmp
test
sub
lcall
push
push
push
mov
mov
jbe
push
xchg
into
outsl
mov
dec
mov
cmpsb
push
cltd
push
xor
pop
add
sbb
inc
mov
test
jb
std
xchg
cmpsl
pop
inc
xor
test
imul
jb
xor
adc
lea
aaa
sub
pop
sub
cltd
mov
and
sbb
fstpl
push
or
jg
adc
in
ret
push
xchg
inc
push
faddl
leave
dec
jno
cmp
mov
push
adc
ss
sub
call
dec
into
aaa
xlat
mov
sub
das
mov
push
imul
data16
into
pop
sarb
jne
lods
leave
mov
leave
mov
add
loope
lret
mov
hlt
lcall
popa
push
sti
or
std
daa
or
fs
cmp
xor
pop
mov
popf
xor
pusha
nop
pop
in
paddb
aaa
push
loope
and
adc
adc
mov
iret
pop
inc
mov
out
popf
mov
cmpsb
cmp
xchg
outsl
gs
add
xchg
push
inc
dec
sub
dec
fsubrp
mov
push
jle
pop
ds
loop
mov
je
cmpsb
lret
iret
mov
std
mov
mov
mov
dec
aaa
pop
push
loope
adc
xchg
or
addr16
stos
jno
mov
add
bound
mov
xchg
push
cwtl
jnp
loop
dec
xchg
jnp
add
xchg
jae
pusha
fistpll
pop
inc
jb
nop
fists
push
shlb
inc
xchg
out
scas
mov
jne
es
ret
bound
jo
ljmp
and
rcl
mov
pop
xor
push
and
jecxz
xchg
inc
pusha
lods
xor
arpl
mov
xchg
add
or
sub
mov
mov
movsl
scas
ss
xor
and
std
push
or
add
movl
ds
jl
jecxz
daa
iret
xchg
mov
or
iret
jne
jl
imull
push
adc
inc
mov
lret
ss
pusha
es
and
jge
push
ficomps
xchg
dec
xchg
xchg
mov
jmp
adc
ljmp
jno
ja
cmp
outsl
les
data16
add
jecxz
iret
pushf
scas
js
stos
lret
cmp
aas
repnz
cmp
jge
fidivl
inc
into
aas
stc
jg
push
mulb
adc
das
pop
pop
jo
cmpl
int
add
xor
or
fisubrs
lock
mov
pop
jo
push
popa
push
in
pop
sbb
xor
jg
and
repz
inc
rcll
ds
mov
sub
mov
xchg
xor
cs
adc
imul
lea
dec
imul
adc
fadd
sbb
pop
cmpsb
mov
lods
fcmove
pop
fwait
in
es
sub
xor
add
ret
add
push
cmp
sbb
mov
aas
adc
sub
pop
out
sub
ljmp
fstpl
or
push
add
sbb
js
xlat
fs
xor
pop
adc
mov
push
rolb
xchg
lds
scas
movsb
pop
pop
test
ss
in
outsl
sbb
push
mov
ret
inc
cmp
arpl
adc
push
mov
and
ss
jmp
lds
add
ret
xor
jg
sub
mov
std
fpatan
int
sti
incl
int3
call
rorb
jbe
cmp
push
sbb
sbb
stos
cld
shr
jge
dec
pop
inc
mov
cmpsl
sbb
mov
cmp
mov
repz
fdivr
pushf
xchg
insl
jb
pop
dec
aaa
xor
mov
mov
pop
in
push
xchg
mov
insb
dec
cld
rolb
rolb
pop
cmc
in
mov
mov
movsb
push
push
cmp
repnz
xchg
pop
movsl
jmp
aad
stc
pop
aas
mov
int
push
fwait
in
adc
sub
rcrl
jns
push
mov
jb
ret
xor
mov
sub
sbbb
cs
mov
sub
arpl
jne
push
ret
ret
cld
icebp
xor
mov
xchg
stos
cmpl
dec
cs
xor
ss
push
subb
jmp
call
inc
decb
jmp
in
push
hlt
orl
dec
pop
cmpb
jne
sub
ret
gs
push
mov
adc
mov
adcl
pusha
jbe
and
scas
fidivrs
dec
stos
adc
jnp
aad
dec
sbb
inc
fildl
cmp
mov
xor
add
push
outsl
shr
add
push
mov
jo
sarl
pop
out
cmc
mov
stc
xor
insb
and
dec
inc
aad
sbb
mov
add
cmc
mov
ss
or
inc
jp
fwait
test
mov
pop
aas
xor
push
jmp
xor
xchg
daa
lock
lret
int3
vpor
in
hlt
inc
inc
repz
pop
pop
aas
repnz
jmp
adc
sarb
dec
sbb
jl
jo
aad
fnsave
lahf
sbb
push
sahf
dec
sbb
adc
cld
pop
cs
scas
movsb
cli
ja
sbb
adc
fisubrs
lea
bound
xchg
lds
scas
sub
jmp
out
bound
std
cmp
sbb
push
sbb
sub
push
ficoms
cmp
push
and
in
adc
or
cmp
fldcw
pop
cmc
push
mov
mov
loop
fs
iret
dec
push
inc
push
xchg
nop
jae
or
test
daa
cmpsb
and
stos
pusha
pop
xor
rorl
jl
jl
cmp
bsf
lds
pushf
idiv
mull
sub
inc
flds
add
and
pop
add
cmpsb
ds
cmp
or
mov
sub
pop
popa
movsl
popa
push
mov
testl
and
cs
and
fldl
cld
push
leave
loop
stc
pusha
or
lds
mov
fnstcw
or
nop
xchg
add
xor
bound
xor
repz
dec
or
or
shll
in
sub
cltd
jge
mov
cmp
iret
mov
sbb
jb
sbb
xlat
sbb
push
ficomps
jmp
shl
xlat
push
adc
push
cli
aaa
shr
mov
lock
testb
push
sub
jae
clc
icebp
jp,pt
stos
xor
lahf
sbb
mov
shl
adc
adc
dec
mov
mul
popa
pushf
mov
mov
rcpps
data16
push
cmp
xchg
jo
sub
add
fisubrs
clc
cmp
and
adc
movsl
mov
sub
jmp
cmpsb
push
cmpsb
push
mov
les
mov
cmc
pop
std
fcos
test
adc
adc
or
jle
cld
inc
ror
jle
addr16
fs
jmp
addr16
lcall
je
imul
jmp
mov
cmp
aad
loopne
test
mov
shrb
jg
cmp
xchg
jns
mov
movsb
cmp
or
loope
sarb
faddp
outsb
ss
js
cmpsl
rolb
push
or
cld
jnp
lods
push
xchg
xor
mov
cmc
jns
inc
sahf
test
xor
imul
push
push
inc
adc
pop
nop
cmp
mulb
mulb
push
cmp
cld
pop
int
int
pop
sub
ja
mov
mov
jge
js
dec
incb
and
dec
in
rcr
mov
jno
xor
lcall
sbb
lcall
sub
pop
jbe
mov
push
xor
mov
dec
ret
add
addb
loopne
pop
negb
dec
inc
out
into
lahf
popf
dec
repz
sub
jne
dec
sbb
fs
add
out
js
jmp
and
push
decl
mov
arpl
cld
stc
lock
ret
outsb
call
popf
arpl
out
dec
dec
in
mov
xor
pop
xor
xchg
ret
shrb
in
add
sub
or
sahf
and
xor
out
or
stos
psubd
mov
xor
aam
cmc
aam
mov
and
movsb
and
dec
pop
mov
stc
repnz
push
or
cmc
xchg
sbb
or
mov
fisubl
pop
add
mov
jg
xor
js
filds
loopne
inc
push
and
data16
jp
jecxz
stos
xor
push
in
in
and
das
jmp
cmp
imul
arpl
dec
add
setnp
push
bnd
repz
ljmp
mov
inc
mov
sub
out
sub
or
mov
cmp
jbe
cmp
pusha
cmpl
mov
cmp
mov
out
fistpl
xchg
test
jnp
rcrl
movb
leave
mov
je
cmp
test
sub
sbb
sti
cmp
xlat
leave
movsl
fisttps
iret
rcr
and
hlt
faddl
repz
lret
xor
adcb
das
fwait
jmp
imul
pop
jne
out
js
std
loope
arpl
cmp
mov
mov
lock
fcompl
mov
mov
das
xorl
dec
stc
and
and
mov
pusha
mov
jge
es
xchg
cmpsl
adc
mov
mov
jno
dec
insl
inc
xchg
imulw
bts
lahf
iret
xchg
dec
mov
fstp
mov
paddq
cmp
cmp
arpl
aaa
jp
mov
add
push
or
mov
cmp
movsl
fadds
lds
or
sub
psubsw
mov
jno
pop
dec
fwait
and
fimull
mov
mov
and
dec
or
ljmp
aad
stc
ljmp
xchg
inc
testl
xor
je
xlat
icebp
and
mov
xor
pop
lcall
xchg
dec
push
sub
cltd
or
fisubl
xchg
inc
mov
inc
push
xchg
xchg
dec
js
pop
xor
test
cwtl
cmpsb
cltd
les
dec
mov
mov
jno
enter
gs
adc
push
adc
mov
xor
ret
daa
scas
fldt
xchg
mov
or
jg
pop
dec
cwtl
inc
bound
mov
loope
jae
push
adc
negb
xor
enter
add
or
shll
mov
call
pusha
icebp
shlb
cmpl
test
lret
mov
sti
xor
outsb
lret
mov
inc
into
pop
loope
mov
mov
adc
xor
lahf
xchg
cmp
jle
loop
lods
loop
mov
jmp
push
loopne
std
cmpsl
sub
jb
cld
sub
mov
dec
cmp
lds
jp
xchg
push
lret
ja
xlat
cmp
push
push
adc
sbb
pop
fbld
adc
push
inc
push
jo
scas
lret
jmp
pop
push
in
subb
cld
scas
lods
andl
shrl
loope
fwait
or
out
aam
int
lods
nop
or
stos
cmp
sbb
lea
push
cltd
pusha
add
pusha
popf
mov
into
sbb
adc
jno
inc
sbb
jns
pushf
movsb
push
cs
xchg
cmp
stos
out
ljmp
mov
popf
push
cwtl
test
mov
or
push
push
sbb
sbb
test
xor
les
pop
xor
cli
sub
push
xor
sarl
cltd
mov
cmp
adcl
xchg
in
and
fldt
xchg
imul
sahf
mov
push
test
int
icebp
dec
shrl
push
inc
mov
cmpsb
sahf
ret
daa
push
icebp
sub
xor
out
push
dec
out
or
es
gs
jmp
push
movsb
fwait
dec
and
sub
daa
test
pop
inc
sub
cltd
push
int3
std
leave
jne
jbe
popa
push
pop
mov
or
leave
in
cmpsb
lea
sahf
xchg
aam
add
xchg
sub
push
pop
pusha
or
rorl
cmc
aam
pop
adc
dec
andb
loop
jno
xchg
aas
insl
aam
jecxz
and
inc
daa
xchg
add
xchg
push
xlat
push
jl
mov
inc
inc
stos
pop
mov
jg
push
sub
xor
in
rolb
pop
xchg
cmp
popf
mov
ds
andb
ror
sbb
and
ret
pop
jge
pop
adc
jge
push
cmp
dec
shrl
mov
ljmp
pop
insl
shrb
jnp
mov
inc
shlb
jae
dec
jne
cmp
push
inc
sub
jl
ret
mov
push
adc
and
cli
idiv
mov
add
jmp
mov
xchg
lods
and
lods
sbb
dec
push
pop
fadds
arpl
notb
or
add
movsb
fcmovu
xor
aas
cmp
mov
lcall
hlt
xchg
push
inc
clc
mov
cld
fisubrl
rcl
movsl
lcall
xchg
in
sbb
in
leave
leave
bound
sbb
mov
sub
and
mov
pop
push
push
rcrb
popf
pop
scas
push
cmp
shll
icebp
stc
imul
jl
rcrl
jb
pop
and
int
sbb
enter
xchg
push
add
cmpsb
outsb
mov
ds
mov
xor
jne
and
xchg
loope
sbb
jbe
jecxz
lret
scas
or
mov
xchg
ja
jae
dec
xor
adc
imul
fidivs
mov
out
pop
inc
push
dec
cmp
or
loop
add
mov
ret
int
add
inc
push
dec
pop
out
push
pop
jb
fidivrl
sbb
pop
leave
push
sub
in
ljmp
nop
pusha
cli
pop
inc
sbb
les
and
add
adc
sbb
iret
loope
test
ljmp
je
push
incl
lods
fsubs
in
mov
inc
sbb
sti
sti
and
out
inc
inc
insb
xor
jae
cmc
add
into
clc
leave
pop
movb
repz
inc
jae
fbld
jne
or
popf
clc
decb
ret
adc
loopne
xchg
imul
cmpsl
sub
add
out
mov
inc
imul
and
movsl
adc
or
jg
add
shll
fidivl
ljmp
mov
jo
inc
nop
stos
jge
aas
inc
cmpsb
icebp
sbb
jns
pop
aam
jbe
xlat
adc
jbe
mov
cmc
pop
jo
mov
mov
push
cmp
jo
into
in
fcmovnbe
ljmp
or
xchg
jne
pop
add
and
jle
shlb
or
adc
scas
pop
test
and
sub
js
push
je
cmp
mov
lret
cmpsb
imul
xlat
mov
shl
push
push
add
mov
lcall
xchg
cltd
clc
fisttpll
xchg
sahf
in
inc
and
fisubs
mov
insl
sub
fwait
dec
add
mov
dec
fisttpl
sbb
xchg
insl
xor
and
and
add
ja
call
dec
push
inc
lock
mov
cmp
das
mov
mov
or
sub
adc
mov
stos
adc
repnz
popa
gs
mov
add
push
mov
mov
into
dec
xor
out
mov
in
pop
lea
cmp
sbb
arpl
outsl
add
mov
popa
in
mov
xchg
inc
clc
enter
outsb
dec
push
or
lret
mov
sahf
xor
test
gs
pop
dec
mov
jmp
out
ljmp
outsl
adc
sub
jns
dec
mov
arpl
fstps
push
mov
push
push
cld
rolb
outsl
nop
mov
mov
mov
clc
jmp
push
fidivrs
aam
shll
aas
xchg
inc
inc
mov
das
lock
jg
cld
adc
fcmovnb
sar
jecxz
or
aad
dec
ljmp
sub
nop
hlt
sbb
testb
pusha
mov
pop
repz
das
sub
mov
xor
sti
cmc
testl
arpl
leave
pusha
xor
clc
jmp
gs
jl
lock
adc
or
pop
ljmp
cmp
outsb
fwait
push
in
dec
mov
outsb
cmpsb
popa
arpl
or
fidivrl
rcr
xchg
fwait
rolb
rcll
pop
mov
adc
or
xor
popf
les
hlt
xorb
and
jle
sbb
fldl
es
mov
std
or
fadd
mov
cld
pop
pop
mov
mov
int
inc
je
cmp
jnp
lods
sbb
sub
lods
imul
inc
adc
dec
loopne
push
jecxz
mov
js
mov
push
imulb
dec
rclb
ret
cmc
int3
nop
js
push
mov
mov
dec
cmp
negb
mov
lret
arpl
sti
imul
jno
out
outsb
adc
xor
push
xchg
test
cltd
add
jne
fldl
sbb
push
xchg
adc
dec
sub
push
test
xchg
faddl
mov
or
sub
insl
pop
jg
sbb
mov
sbb
mov
fsubr
pop
popf
or
int
pop
cmp
fcomps
or
cltd
xor
filds
in
lods
pusha
push
xchg
push
mov
sbb
xlat
insb
insb
mov
hlt
mov
mov
bound
cmc
les
and
cwtl
push
xlat
ret
cwtl
add
mov
dec
lret
mov
leave
repnz
adc
mov
mov
std
decb
mov
push
push
sbb
cmp
loop
xor
cmc
lods
pop
mov
lea
lods
gs
popa
jae
aaa
xchg
mov
std
xchg
lea
jp
loopne
jbe
sub
sbb
jns
shr
dec
mov
jmp
xor
arpl
ds
push
or
cmp
fxch
xchg
add
iret
dec
lcall
jg
adc
jmp
xor
movsl
xchg
loopne
in
lahf
mov
mov
pop
jg
fwait
gs
add
enter
and
rorb
sub
sbb
push
sarb
dec
jmp
sbb
mov
test
mov
fwait
mov
xchg
mov
repnz
xor
mov
cmpsl
call
adc
shrl
pop
mov
cld
pushf
mov
add
cmp
lods
cmpsl
push
xor
and
push
mov
and
out
mov
iret
ret
aad
jbe
cld
cmpsl
mov
insb
or
jns
dec
aam
cld
repnz
pop
mov
movsb
outsl
arpl
enter
sub
push
iret
movsl
pop
mov
jmp
push
mov
mov
pop
add
xchg
test
pop
cmp
push
in
cltd
sub
jl
push
mov
movsl
stos
popa
div
jnp
adc
repnz
arpl
dec
dec
lock
dec
sbb
xchg
push
subl
testb
mov
cltd
das
lahf
inc
jo
mulb
sub
test
outsl
std
cmp
mov
mov
clc
or
out
mov
sahf
hlt
inc
scas
cwtl
add
lods
xchg
inc
call
dec
into
dec
and
sub
fstps
xor
pop
dec
clc
sbb
mov
divb
ja
push
or
aam
mov
roll
push
xchg
mov
inc
mov
test
lret
xchg
jl
cld
aas
gs
stos
outsb
and
push
inc
adc
xlat
rcrl
pop
imul
inc
jnp
add
cmpl
out
nop
jo
mov
adc
mov
mov
adc
fimull
popa
jne
dec
fs
outsb
pop
cltd
pop
and
or
sbb
outsb
sbb
and
mov
and
nop
xchg
cmp
push
inc
sbb
mov
adc
lods
mov
cltd
or
lea
fisubs
xor
out
xchg
dec
mov
sub
jmp
into
imul
cmp
dec
add
pop
in
in
jno
mov
sbb
sub
sub
cmp
loopne
cmp
rcll
frstor
push
inc
sbb
pop
push
fists
jo
call
scas
inc
lock
mov
in
sbb
bound
or
jg
xchg
pushf
adc
pusha
sub
jmp
dec
lods
push
or
dec
insb
pop
ja
pop
mov
pop
shlb
sbb
pop
lret
inc
push
aad
aaa
aas
int3
icebp
sbb
xorl
xchg
or
inc
ret
fs
pop
push
incb
call
sarl
sbb
adc
sbb
mov
dec
lret
push
mov
sbb
sub
dec
push
test
lea
repz
push
mov
stos
jl
pushf
int3
mov
mov
sub
scas
mov
jecxz
in
mov
ss
sahf
xchg
adc
mov
test
pop
mov
cmp
xchg
push
or
and
cmp
or
popf
xchg
mov
in
dec
mov
popa
ret
or
mov
popf
xchg
lds
int
and
pusha
sub
xor
pop
sub
mov
xchg
cli
sbb
lods
jns
mov
iret
int
lock
jo
cli
punpcklwd
mov
push
cwtl
out
xchg
cmp
sub
inc
lds
or
scas
loop
repz
dec
lea
mov
or
mov
or
pop
hlt
stc
dec
decl
out
leave
jmp
int
cltd
lcall
mov
cmp
sbb
out
jle
pushf
movsl
call
movsl
aam
pop
pop
les
mov
arpl
out
cmpsb
mov
xchg
xor
cmp
std
in
fwait
pushf
leave
xchg
iret
pop
sub
push
and
repnz
pop
int3
add
xor
cwtl
xor
outsl
insb
loopne
sbb
push
cmpsb
int
fiaddl
enter
pop
loopne
cld
into
out
fcmovnbe
or
jno
mov
pushf
jge
add
mov
lret
lret
push
insl
divl
out
lods
or
push
jge
push
cmp
and
mov
push
scas
pushf
push
add
mov
mov
and
pop
ljmp
hlt
or
cld
mov
xor
cmp
cwtl
mov
pop
and
pop
cmpsl
dec
daa
mov
xchg
mov
fmulp
aas
xor
mov
and
mov
jge
or
lds
mov
test
fistpl
jg
icebp
pop
mov
add
push
sbb
sarl
push
mov
andl
cmp
lahf
xor
in
es
outsb
imul
jl
dec
ja
sbb
lcall
and
cwtl
gs
daa
dec
cmpsb
pusha
repnz
mov
imulb
push
sub
fidivrs
cmp
cli
mov
rcll
add
fiaddl
mov
jl
xchg
sbb
pop
rorl
jp
cmc
sbb
aam
loop
dec
push
cmp
mov
pop
mov
js
shll
out
insb
mov
scas
adc
or
jg
lahf
push
loop
shrb
or
xchg
les
xchg
insb
add
sub
call
or
push
mov
jg
adc
cmp
pop
mov
xchg
pop
ss
lahf
cli
out
cmp
mov
inc
cli
inc
sub
add
mov
adc
and
sub
leave
sbb
xchg
jb
xchg
mov
xor
and
lds
cmc
test
lea
ud2
mov
cmp
mov
stos
and
inc
jg
sub
pop
mov
sti
ret
push
mov
fs
add
mov
aas
lret
or
sbb
ret
into
jp
mov
nop
imul
jge
pop
jl
fsubl
mov
lock
scas
cmovg
fisubl
es
and
ss
dec
movsl
mov
jnp
icebp
xchg
jnp
movsl
fwait
adc
or
sti
cmp
std
lock
aaa
inc
scas
jecxz
sbb
lds
loopne
xchg
cmp
incl
fwait
push
mov
adc
pushf
pop
mov
addl
bound
aas
or
test
xor
addr16
dec
int
loope
inc
push
test
sub
cmpb
mov
jns
push
dec
adc
rorl
aad
pushf
outsb
adc
popa
jae
fwait
lahf
inc
imul
das
inc
sti
insb
pop
jne
pop
mov
xchg
or
xor
adc
dec
mov
xor
daa
sti
je
sub
bound
xchg
inc
and
mov
lret
fbstp
mov
mov
lret
iret
xor
and
addr16
fdivs
jbe
leave
jmp
or
mov
mov
cs
inc
mov
sarl
pop
scas
jl
test
dec
scas
xchg
dec
mov
dec
addl
cmp
js
repz
fisttpll
xor
cli
roll
arpl
mov
loop
ret
sub
lcall
dec
pop
inc
out
add
in
jge
lret
mov
mov
adc
sub
fs
das
xchg
mov
sahf
test
mov
ret
mov
jns,pn
adc
sub
or
push
add
mov
jae
in
je
cmp
dec
testl
sub
rcll
or
sbb
fisttpl
push
mov
inc
popf
int
popf
sub
in
aad
pop
iret
sub
push
stos
cmp
shll
sbb
lock
out
xor
jg
lahf
jno
xchg
loope
out
aad
mov
cmp
sub
cmc
sbb
ds
inc
inc
insb
or
sub
jnp
sbb
lret
mov
aaa
mov
pop
stos
adc
test
mov
adc
or
push
cmp
or
xchg
pop
loope
jne
out
mov
ja
adc
sub
fsubrs
sub
ret
xchg
push
xchg
leave
and
sbb
das
hlt
enter
enter
pop
loope
sbb
test
lahf
and
sub
add
iret
sub
cmp
adc
xchg
inc
pushf
loop
ret
clc
ja
popa
sbb
mov
jns
out
inc
sub
test
pop
test
mov
xor
in
mov
in
in
inc
ds
adc
rorb
mov
cmpsb
mov
add
cld
push
ljmp
pop
lea
push
mov
fnstsw
jg
test
pusha
fwait
shr
add
sbb
adc
xor
js
inc
mov
stos
jo
fdivl
cmp
jno
js
inc
ss
add
push
push
mov
fsubs
cmp
push
sub
xchg
scas
aam
sbb
lea
scas
fists
fdivp
test
mov
fsubrs
hlt
xorl
fdivs
inc
push
cmp
pop
dec
pushf
mov
lahf
test
mov
cltd
cmp
cmpsl
xchg
outsb
or
mov
cmp
shl
mov
fwait
add
je
repz
and
cmp
mov
mov
sub
cli
jecxz
mov
jecxz
aam
mov
add
xchg
dec
xchg
adc
push
repnz
enter
sbb
adc
cmp
repnz
pop
loop
or
pop
or
popf
in
in
or
dec
mov
sbbb
insl
enter
mov
fildll
sbb
test
and
aaa
mov
fdivrs
lcall
nop
cld
int
arpl
xor
fsubl
dec
xchg
pop
shr
xor
sbb
cmpsb
cmpsl
xor
mov
jae
movsl
mov
mov
xchg
and
and
pusha
es
push
sub
ja
add
int
jne
adc
sbb
pop
and
mov
insb
out
pop
daa
adc
push
xchg
mov
xchg
mov
add
sti
ja
pop
push
or
cmc
mov
loop
pop
test
cmpsl
push
outsl
test
add
mov
mov
inc
test
dec
dec
clc
xchg
xchg
push
xchg
js
sub
xor
es
push
jne
mov
inc
jl
or
fdiv
in
sbbb
arpl
dec
frstor
add
movsl
mov
ret
sahf
jnp
cmpsl
xchg
int3
rcll
push
in
aaa
nopl
scas
dec
in
das
movsl
andnps
cmp
cmp
test
cmp
ret
add
leave
push
das
icebp
mov
mov
pusha
fcomp
push
cmc
movsb
pop
cmp
sarb
mov
cs
push
adc
ljmp
in
pop
xchg
mov
nop
pop
movsb
sbb
ret
or
dec
push
mov
or
movsl
arpl
mov
ret
jnp
xor
pop
or
js
push
and
inc
bound
mov
out
cs
inc
pop
sub
or
xor
jmp
cli
mov
dec
xor
mov
mov
in
jo
or
add
fwait
jo
ljmp
jne
mov
mov
adc
hlt
mov
cs
sbb
cmp
stos
rclb
filds
dec
jbe
std
mov
test
lret
int3
out
xorl
outsb
sbb
imul
icebp
mov
push
pop
mov
jno
test
mov
out
sarl
push
rol
loope
xchg
stos
pop
xchg
stos
pop
pushf
sbb
ret
fwait
sahf
test
shlb
shr
push
pop
movsb
loope
std
xchg
test
cmp
fmul
jecxz
xchg
hlt
pop
aad
gs
popa
or
cltd
inc
lcall
jae
es
inc
dec
cld
imul
add
adc
fwait
icebp
scas
adc
jge
rolb
pop
in
jl
dec
shlb
repnz
lcall
cmpsl
cmp
pop
push
jbe
pop
sbb
inc
jae
lret
jbe
std
dec
je
pop
mov
pop
mov
push
shll
popa
fsubrl
popa
add
std
lods
ret
pop
gs
into
mov
mov
jne
sub
pop
push
xor
inc
lahf
sub
in
shr
xchg
push
rorl
pushf
pop
shrb
xlat
cwtl
shll
lahf
sar
xchg
and
xor
fisubrl
repz
loop
insb
jnp
sub
fsubrl
cmp
loope
mov
out
jae
lahf
dec
inc
shl
out
les
jmp
dec
inc
cld
and
les
xchg
or
imul
sbb
sbbl
xchg
xlat
imul
stos
shll
mov
rcll
mov
pop
in
in
fcoms
test
mov
add
mov
cwtl
ret
add
sbb
pop
inc
repnz
xor
push
imul
ds
test
out
dec
notb
add
outsb
push
in
or
mov
push
in
arpl
cli
mov
cltd
mov
and
out
inc
xor
push
dec
call
cmp
adc
cs
xchg
add
andb
shlb
mov
sub
loopne
shrb
sub
repz
adc
decb
fistpl
movsb
sbb
sti
daa
ret
lock
xchg
push
mov
or
cld
fs
sub
mov
mov
mov
imul
adc
sub
sbbl
lret
popf
mov
enter
pop
fcompl
lods
xchg
cltd
dec
push
or
sbb
cld
adc
adc
es
inc
or
ret
mov
sbb
stc
xor
or
xor
and
outsl
xchg
in
cs
loop
xchg
adc
inc
jnp
ss
or
xchg
jle
or
jmp
sbb
addr16
push
inc
out
mov
mov
xchg
aam
jno
fmulp
xor
adc
lret
or
lods
pop
push
adc
lret
dec
outsl
fsubrl
pushf
or
iret
pusha
fisubrs
dec
in
shrb
xchg
pushf
dec
mov
psrld
jo
xchg
inc
mov
and
cmp
dec
or
orl
push
mov
add
rcll
pop
sub
nop
sahf
inc
aam
push
or
les
mov
shrl
inc
adc
imul
xchg
mov
insb
pop
jo
mov
jp
imulb
cmp
imul
pushf
adc
push
out
mov
cs
scas
sbb
arpl
sbb
xor
out
adc
xor
cmp
xor
insl
xor
repz
shrb
inc
into
pushf
movsb
aam
jecxz
push
mov
cs
stos
sub
je
fdivr
and
jne
cmp
add
fiaddl
jg
cmp
movsb
loope
inc
loope
jns
fxch
lahf
mov
shlb
mov
mov
lcall
xor
fists
cli
mov
mov
sti
sahf
fldenv
mov
cmp
sbb
shlb
mov
test
xlat
mov
jbe
mov
push
insl
add
mov
xchg
or
fimuls
and
loope
cli
stc
dec
cmp
push
clc
scas
je
in
icebp
jecxz
mov
sbb
pop
jecxz
add
pop
jle
ss
cmp
xlat
mov
icebp
lock
mov
movsl
or
sbb
loop
js
popa
fs
rep
pushf
xlat
jns
mov
adc
div
insb
stc
rorb
adc
add
out
fidivs
popa
shrb
test
daa
aad
std
add
push
cs
repnz
cld
sub
add
mov
dec
xchg
outsb
sub
repz
jno
lret
orl
shl
clc
mov
and
pop
aad
enter
imulb
addl
jns
mov
cmp
repnz
leave
ret
das
lods
faddl
inc
and
ret
inc
in
enter
and
push
inc
jp
and
mov
mov
mov
test
xchg
sbb
pop
add
and
mov
sub
lods
arpl
add
subl
rcl
movsb
xor
lds
popa
test
out
adc
cmp
sbb
cwtl
add
scas
adc
push
or
sub
notb
sub
out
xchg
push
sbb
mov
fnstcw
scas
pop
sbb
mov
je
cli
pop
stos
and
pop
dec
ja
rclb
pop
stos
xor
lea
sbb
inc
mov
nop
arpl
cld
xor
aam
pop
lret
pop
in
cmpsb
ficomps
add
dec
inc
push
mov
ret
dec
sub
rcr
out
jecxz
daa
lods
pop
adc
loopne
push
sub
mov
xor
mov
ret
cmpsl
movsb
jbe
or
out
test
sub
gs
int3
jp
mov
push
cs
cmpsb
dec
inc
pop
dec
adc
aas
lods
cs
movsb
pop
ret
sub
fistl
jl
rorb
ret
pushf
aaa
cmc
or
movsb
push
ret
or
data16
lock
mov
xchg
arpl
iret
test
mov
add
mov
mov
push
imul
psubusw
mov
mov
dec
and
ds
out
std
pop
icebp
adc
or
insb
mov
daa
ds
addb
jbe
fistl
mov
nop
mov
cli
or
adc
nop
xlat
cmp
add
addb
ds
inc
jle
pop
lcall
xor
sub
fstpl
jl
shl
xor
fcmovnu
mov
out
inc
test
outsl
pushf
add
adc
pop
aad
aas
stos
cmc
dec
fwait
loope
xchg
enter
mov
sbb
mov
fcoml
fcmove
adc
pop
adc
pop
sub
sti
or
std
adc
pop
push
and
sti
mov
in
jne
les
push
xchg
test
pushf
inc
mov
shlb
test
pop
xor
push
mov
push
mov
call
jecxz
pop
xchg
xor
fs
aas
xor
xchg
pop
xor
lret
push
mov
andl
mov
add
or
inc
fs
inc
rcr
xor
ljmp
push
cltd
adc
and
pop
cld
mov
jne
fsubp
or
cmc
inc
sbb
mov
rcl
adc
mov
mov
lret
loop
pop
test
ljmp
ficoms
add
xor
cmp
xlat
test
fld
push
add
pop
mov
test
repnz
sub
cmpsl
push
rorb
sahf
data16
mov
in
lds
adc
imul
xchg
inc
out
adc
ds
mov
jo
push
jle
in
int3
mov
sbb
jg
and
mull
xchg
mov
inc
icebp
sbb
xor
out
sub
jg
push
popa
call
addr16
test
add
adc
idivb
dec
das
pop
push
xchg
leave
icebp
dec
push
popl
mov
and
enter
push
and
xor
mov
loop
inc
test
cmp
pop
xchg
and
jae
xchg
pop
inc
int3
and
adcl
int3
xor
outsb
mov
gs
push
ljmp
clc
push
cmp
sbb
sti
iret
scas
mov
cmpsl
in
and
xchg
pop
pop
sbb
fdivrs
sbb
xchg
shll
cmp
fistpl
and
dec
xor
mov
stos
je
push
mov
sub
int3
subb
adc
out
and
ret
or
jnp
shr
sub
shll
xchg
ret
subl
sbb
sbb
out
mov
gs
jns
push
sub
dec
gs
adc
adc
sbb
push
aaa
cmp
mov
js
pop
pop
pushf
in
mov
mov
sub
jmp
jle
adc
and
and
jmp
mov
into
inc
movsl
adc
cmp
sar
and
je
xchg
mov
pop
dec
lds
xor
in
in
mov
int
mov
and
in
sti
sbb
popa
stos
sub
dec
adcb
jecxz
sub
pop
lahf
stos
sbbl
call
mov
cmp
leave
mov
hlt
xorb
mov
jge
jb
sub
scas
ljmp
stos
xchg
sahf
int
mull
add
data16
dec
and
push
xlat
fstps
into
aas
mov
outsl
sbb
data16
arpl
movsl
fsubl
scas
push
pusha
cli
std
dec
test
adc
rolb
xor
add
addl
mov
and
inc
push
inc
ret
pop
lock
mov
aaa
inc
rcrb
mov
fcompl
pop
jbe
pop
ret
addb
mov
adc
xchg
xchg
mov
je
pop
fstp
sahf
lods
shlb
push
lock
jo
cltd
xchg
dec
sub
sti
ficoml
mov
jbe
cmp
addr16
filds
xchg
jnp
xor
dec
mov
inc
xor
shrl
mov
test
sub
jp
shl
hlt
adc
dec
and
push
jb
jb
xchg
mov
clc
ret
sbb
cmp
and
in
stos
mov
jb
iret
in
mov
cmp
inc
xchg
mov
pop
sub
xchg
xor
in
adc
popf
orb
std
xchg
or
dec
sbb
int3
imul
jno
inc
xor
enter
mov
cmpsb
push
out
daa
hlt
mov
and
lret
xor
sub
mov
fdivr
jl
outsl
stos
pop
loopne
pop
and
test
test
stc
in
sbb
jnp
mov
jmp
mov
addr16
sub
mov
rol
loopne
movsb
je
or
andb
sbb
xor
inc
xor
mov
ficompl
mov
mov
push
in
mov
sti
jno
icebp
rcll
or
jmp
ljmp
mov
test
sahf
je
inc
cmp
jo
sahf
push
xchg
lods
mov
inc
lret
pop
or
cmp
shll
sbb
inc
xchg
add
out
scas
sub
lods
icebp
mov
xchg
xor
adc
xchg
sub
push
mov
call
or
je
sub
add
adc
testl
insb
xchg
scas
shlb
ret
les
cmpsl
cmpsb
out
jnp
push
adc
test
push
sbb
out
xchg
push
pop
enter
push
push
cld
loopne
cmp
inc
cmc
loope
and
das
dec
pop
pop
cmp
mov
scas
les
les
lods
std
sbb
in
mov
push
movsl
push
in
icebp
push
cmp
std
gs
data16
push
push
push
xchg
jge
cmp
call
scas
xchg
and
in
mov
lret
add
pop
dec
popf
push
ljmp
in
mov
sarb
les
or
pop
lods
lahf
jns
push
or
mov
test
std
xor
pop
inc
fdiv
push
lcall
dec
std
inc
sub
adc
data16
rclb
xchg
fsubrs
js
fdivl
mov
loopne
xor
testb
cmp
mov
mov
push
pop
clc
push
lds
out
adc
push
test
sub
test
js
test
or
push
rorb
inc
addb
or
jle
sub
loop
dec
clc
cltd
insl
push
idivl
lods
jnp
movsl
xchg
fistpll
mov
xchg
or
int
iret
lahf
nop
enter
and
push
sub
jmp
pop
cmp
xor
dec
mov
cmp
popf
enter
gs
stc
leave
and
sub
stc
cmp
xchg
sub
mov
test
lcall
sub
popf
mov
adc
adc
lds
add
cmp
dec
pop
ds
and
cmp
rorl
ret
stos
mov
insb
and
arpl
clc
pop
mov
cmpsb
ja
lods
repz
cmp
daa
xchg
xlat
cmp
dec
cmp
dec
jge
fwait
inc
stos
lock
sub
pop
mov
data16
mov
nop
hlt
or
xchg
mov
fadd
ds
insb
sbb
push
push
adc
lahf
int3
cs
and
mov
mov
shr
aaa
dec
roll
sub
call
outsl
and
pop
call
xchg
into
mov
das
sti
stos
cmpsl
ret
and
adc
iret
xlat
lcall
jmp
push
add
mov
fs
cs
ss
imull
ss
jne
daa
inc
or
cld
push
and
mov
int
stos
or
shll
loope
jmp
cmp
sbb
inc
push
aam
arpl
jge
loopne
adc
stos
aad
decb
ret
mov
arpl
shrl
jo
dec
jbe
jb
movsl
cmp
addl
out
mov
pop
movsb
ja
inc
cmpsb
shlb
jns
jp
fbld
hlt
insb
lds
lret
push
push
mov
cli
pusha
push
nop
aaa
cltd
hlt
lret
inc
mov
mov
cmc
arpl
aaa
dec
test
sbb
mov
xor
arpl
mov
test
push
adc
out
push
xor
addr16
pop
dec
cmp
arpl
repz
cmc
cmpl
cmc
push
sbb
sub
push
jnp
adc
in
jl
shrb
or
adc
xchg
pop
es
in
ss
roll
mov
push
ret
cmpsl
pusha
inc
in
das
cmp
hlt
stos
xchg
mov
xchg
scas
leave
cmp
ss
stos
or
mov
clc
mov
stos
or
lahf
shlb
push
scas
in
xor
fwait
inc
mov
movl
movsb
divb
or
lcall
pop
mov
dec
or
inc
xchg
sahf
mov
add
mov
inc
dec
pop
mov
cmpsl
mov
outsb
lds
and
rcll
cmp
imul
rcrb
dec
xchg
negb
icebp
lret
int3
add
les
cld
movsl
dec
jbe
shr
xchg
xchg
jns
xor
pushw
test
cmp
push
sub
addl
test
rcrl
in
mov
cmpb
jns
xor
in
fs
inc
xchg
mov
and
lret
jmp
mov
ja
sbb
push
mov
add
mov
shll
shrl
fsubl
sbb
nop
dec
in
stos
int
dec
arpl
ficomps
jle
fsub
lds
sub
sub
and
insl
frstor
sbb
dec
add
ss
mov
mov
dec
enter
sbb
pop
xchg
aam
fsubl
cmp
cmp
sbb
stc
jno
imul
xchg
sbb
cld
imul
or
dec
mov
mov
xchg
push
mov
aam
sbb
imul
xor
and
std
cld
xchg
fistl
out
sahf
adc
in
dec
nop
or
pop
push
dec
jns
or
add
ret
lcall
js
mov
pop
dec
outsl
jno
jo
and
ficoml
out
outsb
shll
imul
push
adc
aad
push
or
js
push
adc
add
scas
jmp
mov
hlt
dec
insl
fistpll
sbb
xchg
jge
pop
scas
add
mov
lock
ret
xchg
test
adc
cmp
mov
push
scas
testb
fstpt
push
mov
repz
add
adc
fcompl
dec
loop
mov
arpl
cmp
or
femms
mov
mov
shll
sub
add
adc
mov
add
cld
mov
adc
push
add
inc
insl
inc
push
sub
scas
cmp
or
mov
mov
push
loopne
inc
fwait
cmp
mov
das
dec
bound
push
std
pop
cmp
ffree
inc
popf
daa
jl
push
jecxz
mov
add
insb
aas
jp
mov
adc
lcall
dec
jns
rolb
mov
inc
or
or
dec
mov
push
mov
daa
sar
cmpb
jo
mov
test
call
test
push
mov
or
lock
daa
testb
daa
adc
repz
cmpsl
dec
inc
into
pop
test
push
adc
sbb
ljmp
icebp
clc
mov
xor
xchg
aam
add
add
xchg
js
push
lea
addr16
repz
xchg
mov
mov
adc
fcmovnu
pusha
pop
push
mov
and
mov
inc
mov
lahf
lahf
xor
mov
leave
and
aam
jno
inc
ret
mov
xchg
push
mov
cmp
inc
mov
mov
mov
ds
std
adc
jns
sbb
pop
and
mov
in
jne
adc
mov
pop
stos
neg
push
addr16
stc
fisubrl
lret
add
rclb
ja
stos
pop
nop
or
jbe
xor
icebp
adc
ljmp
pop
stos
ds
mov
insl
mov
clc
adc
fcompl
sub
aaa
cmp
loop
cmpsb
clc
xchg
fsubrl
lods
jmp
sbbl
stos
sub
cli
stc
mov
loope
sar
cltd
pop
movsb
in
orb
std
inc
mov
iret
mov
push
fnstcw
jne
and
in
out
pop
cwtl
imul
mov
je
jle
and
mov
mov
roll
mov
mov
call
jo
sbb
xchg
scas
cld
mov
inc
xchg
pushf
leave
xor
mov
add
test
add
xchg
sbb
sbb
stos
xlat
dec
inc
push
imul
and
test
cmp
inc
movsb
fistps
adc
bound
sarb
mulb
inc
out
popf
pop
aam
stos
mov
sub
mov
dec
test
insb
and
cwtl
inc
xchg
daa
dec
mov
mov
push
jnp
xchg
add
add
sbb
outsb
sbbb
fidivl
mov
xlat
dec
ret
cmp
andb
subl
out
push
iret
pop
push
jge
mov
test
popf
inc
push
mov
aad
cs
and
xchg
jecxz
jle
cwtl
pushf
jae
mov
imull
sahf
xchg
imul
stc
inc
xchg
roll
xchg
cli
ljmp
add
sbb
cmpsl
and
sbb
hlt
xor
dec
sub
adc
xor
insb
imul
jl
fisubrl
lahf
cmp
jg
push
jb
mov
xchg
xorl
or
aaa
lock
dec
add
imul
insl
stos
xchg
push
insb
jo
push
xor
insl
sbb
and
xor
in
dec
inc
inc
jbe
ss
aaa
cli
xchg
sub
jb
sub
xchg
and
out
push
fcoms
nop
xor
push
or
cmp
or
ret
arpl
les
mov
xchg
sub
idivl
push
std
scas
shl
xchg
jne
int
push
cli
push
scas
jecxz
pusha
push
xchg
jp
mov
sbb
jecxz
or
inc
insl
ds
mov
in
mov
xor
add
pusha
push
and
add
std
xor
aad
mov
int3
clc
fsubl
fwait
sbb
inc
bound
in
call
sbb
fcomp
xorb
sti
call
cltd
repz
add
lock
jl
add
jle
xor
xlat
addl
xchg
ficoms
sub
imul
and
cmpsl
lds
mov
mov
das
mov
lock
in
popa
mov
mov
pop
js
xchg
fisttps
sarb
cli
mov
es
add
jl
pop
mov
int
mov
add
jmp
mov
adc
rcll
pop
shr
shlb
scas
iret
fdivrl
sbb
xor
xchg
ds
pop
js
shll
aaa
mov
popa
sbb
push
pop
xchg
jo
jg
insb
lea
ja
orl
mov
mov
or
inc
out
inc
pop
fmul
mov
imul
fcmovnb
outsl
imul
ljmp
mov
orb
popf
insb
xchg
ret
ret
fisubrs
jmp
mov
cmp
lret
xor
pop
fstps
inc
mov
xchg
or
jle
mov
push
cmp
adc
in
push
je
movsb
mov
or
cmp
jb
inc
scas
imul
outsb
or
add
dec
cwtl
sarb
dec
xchg
or
dec
sub
ljmp
icebp
mov
adc
sti
popf
sbb
lods
jno
mov
repnz
fidivrl
cmp
out
xor
aas
decl
pop
add
jbe
dec
call
and
sahf
adc
mov
cmp
mov
and
or
xchg
jp
pop
clc
sti
clc
and
pop
lret
xor
inc
fsubp
jecxz
cs
push
sbb
mov
xlat
dec
dec
adc
mov
lahf
xchg
popf
enter
enter
movsl
lcall
nop
sti
icebp
or
mov
dec
xor
cmp
xchg
sub
xchg
mov
pop
or
nop
mov
and
cmc
cmp
and
lcall
push
lods
or
fists
xlat
mov
stos
aam
fmull
jnp
dec
movsl
repz
pop
rclb
pop
into
cmp
daa
and
add
aaa
dec
push
dec
out
out
jb
mov
mov
ss
mov
fistpl
mov
xlat
xchg
jmp
jp
leave
fsubrs
nop
sbb
sar
mov
xlat
sbb
add
xchg
pop
iret
adc
add
imul
inc
or
mov
leave
push
sahf
mov
sbb
xchg
mov
xor
push
insb
out
leave
jecxz
cmp
cmp
xchg
shrl
scas
jno
fstl
xchg
or
or
jge
jg
jmp
xlat
sub
pop
push
inc
xor
inc
mov
cmc
or
dec
sub
insl
jp,pt
in
mov
call
xlat
rcll
mov
dec
ss
dec
aam
int
cmp
lret
shlb
gs
pushf
jp
dec
inc
clc
push
stos
inc
sub
push
in
sub
lds
sub
xor
mov
iret
push
gs
pop
adc
scas
shll
sub
nop
add
test
mov
mov
push
mov
mov
jmp
cmp
loop
add
jecxz
jmp
bswap
pop
lds
xchg
outsb
decl
shll
into
negb
push
adc
mov
stos
shrb
push
pop
loope
call
js
ljmp
fldl
stos
mov
fisttps
aaa
dec
cmp
jle
xor
ss
cmpsb
cmp
test
call
jg
js
lahf
cmp
add
fimull
loope
rorl
das
mov
fnstcw
jnp
dec
mov
jo
ja
fs
outsb
addb
pop
jnp
sti
adc
fdivrp
aaa
dec
aas
fsubrs
or
sbb
ficoms
push
push
out
sbb
jnp
sbb
scas
xchg
push
push
popa
lahf
imul
ud1
sbb
cmp
sub
out
insb
insl
mull
js
and
dec
jmp
push
cmp
mov
add
cltd
and
js
lret
push
lcall
and
fucomp
imul
ljmp
mulb
sahf
je
test
dec
mov
rclb
cmp
inc
aam
push
mov
or
dec
das
or
arpl
jle
daa
dec
sub
jbe
mov
sub
sbb
cwtl
fnstcw
pop
in
sbb
mov
out
notl
mov
push
push
out
popf
jmp
lock
outsl
add
mov
push
js
fdivl
jae
aas
fs
and
pop
sahf
es
dec
sub
add
pop
push
dec
jne
jecxz
fstl
cmp
les
pop
pop
cmp
out
pusha
adc
lret
sub
xchg
or
cs
mov
pop
dec
and
add
pop
add
dec
es
add
loope
loop
mov
loope
push
pop
pop
ds
xor
sbb
popf
push
push
jne
ja
xchg
sbb
imul
stc
in
lods
mov
in
insb
push
mov
jb
jno
icebp
mov
xchg
adc
xor
xchg
lds
xchg
movsl
xlat
xchg
xchg
inc
adc
sbb
sti
fildll
sub
popa
sub
fimuls
push
or
dec
mov
lods
xorb
push
jl
jle
jno
mov
mov
into
in
fcoml
dec
jno
test
xor
sub
sub
and
push
jmp
mov
sub
out
rorb
cmp
sbb
int
sub
xchg
arpl
rcrw
inc
mov
push
cli
mov
in
aas
sub
lds
xorb
lock
mov
add
jle
xlat
mov
or
xchg
jae
sbb
and
push
lods
orb
push
lcall
add
inc
scas
sbb
into
bound
movsb
lods
sub
adc
mov
cmp
push
cs
cmpsb
insl
cmpb
cld
imul
adc
cmovns
lods
or
cmpsb
sbb
shrl
sbb
aam
test
sbb
iret
sbb
fwait
repz
mov
bswap
mov
add
repnz
lcall
out
mov
pusha
addr16
xchg
jmp
xlat
loop
inc
bound
sbb
outsb
fcompl
aad
mov
fcomp
lock
jo
mov
shlb
call
imulb
test
repz
movsl
pop
and
lock
and
imul
subb
aaa
mov
xchg
jl
mov
mov
mov
icebp
mov
pop
jmp
inc
ret
cmpsl
xor
stos
decl
shlb
xor
mov
mov
mov
sub
repz
icebp
jecxz
and
cmp
cmp
imul
or
jecxz
test
xchg
cltd
adc
and
stos
push
adc
mov
pop
push
or
xchg
test
mov
xchg
xor
or
les
dec
call
mov
sub
mov
loope
lods
cmp
add
push
xchg
les
aam
in
aaa
mov
add
push
mov
imul
mov
dec
pop
pop
sub
insl
lods
pop
mov
jl
int
test
pop
movsb
roll
sbbb
stos
push
int
push
jbe
xchg
clc
std
adc
sbb
fsts
imul
gs
xchg
xchg
notl
sub
ja
or
pop
test
dec
icebp
movsb
cmpsl
int
fucomi
incl
or
shll
adc
ds
sub
scas
inc
xchg
loopne
cwtl
int
lret
in
sub
jge
iret
inc
daa
or
cwtl
and
bound
and
outsl
mov
push
push
xchg
cmpl
xchg
mov
mov
pop
mov
sub
sub
out
lret
xchg
pop
js
mov
xchg
stos
ljmp
mov
es
adc
push
lods
add
ja
mov
xchg
addr16
push
lcall
std
and
aas
mov
fsubp
fsubrp
pop
dec
inc
jnp
arpl
mov
sbb
outsb
ds
pop
ja
nop
int3
jmp
jge
inc
jecxz
cmc
mov
add
sbb
gs
imul
jb
mov
rol
scas
fwait
pop
sahf
rcll
cmp
sub
sub
sbb
add
arpl
dec
dec
jno
adc
xchg
cmp
dec
xchg
push
je
dec
arpl
insl
mov
mov
fistpll
arpl
mov
add
xchg
out
add
jmp
fnstcw
sarl
decl
push
push
xacquire
inc
adc
aad
in
mov
stc
sbb
lret
mov
or
inc
ds
out
test
cmp
outsl
mov
push
jp
and
push
inc
loopne
std
jbe
and
addr16
jmp
loopne
push
out
lods
dec
or
mov
jmp
or
pusha
sub
insb
jo
mov
popa
sbb
decb
mov
sub
sti
mov
xchg
adc
popa
insb
int
lret
roll
call
inc
xor
ja
dec
and
es
aas
mov
lods
ds
lods
jle
insb
mov
sub
nop
jbe
jb
rcrb
insb
or
iret
pop
loope
scas
or
pop
inc
lds
xchg
sub
mov
adc
cmpsl
sbb
sbb
push
lahf
push
xor
inc
cmp
and
push
cmpsb
mov
mov
dec
xchg
dec
aaa
cli
jge
dec
sbb
pusha
cld
ret
mov
mov
adc
inc
jmp
or
shr
jp
repz
cmp
insb
jnp
add
stc
lret
and
scas
call
inc
add
mov
mov
adc
daa
mov
jmp
ficoms
pop
inc
dec
lret
dec
dec
leave
sbb
and
push
cmp
or
pop
inc
adc
adc
ret
push
int
pop
daa
addb
add
push
lret
out
inc
enter
outsl
xor
mov
sub
adc
mov
or
scas
ljmp
xor
loopne
jge
das
xchg
sbb
mov
push
pop
push
cltd
subl
in
rorb
stos
ss
lcall
pop
pop
cli
lea
mov
cwtl
sbb
xor
cmp
add
jle
std
cld
mov
mov
into
in
push
fstl
mov
or
cmp
insl
sbb
sub
test
into
xchg
mov
mov
inc
shl
jecxz
sbb
xorl
or
mov
dec
or
xor
pop
cmpsb
pop
imul
cs
sub
imul
and
add
dec
fidivrl
adc
stc
add
dec
fnstsw
cmp
inc
pop
aaa
and
repz
dec
insl
and
hlt
hlt
imul
aas
sub
fwait
mov
or
dec
xchg
sbb
add
aam
mov
shrl
or
mov
loope
cli
stc
push
lods
fsubrl
jecxz
call
shrb
test
adc
fcoml
xor
test
or
bound
or
icebp
repz
xchg
fimuls
or
test
fcoml
movsl
popf
in
adc
stos
add
push
js
fs
je
mov
cli
or
rolb
ljmp
push
dec
push
nop
imul
sbb
ficoml
push
std
sub
mov
por
or
imul
xor
js
std
std
mov
fucom
out
add
cmpl
mov
inc
lret
imul
movsb
jg
mov
pushf
add
scas
jl
sbb
rclb
repz
and
arpl
aam
mov
rdpmc
fdivs
gs
push
je
dec
sbb
xor
rorb
aam
pusha
les
aam
xchg
and
push
xchg
cmpb
stos
addr16
outsb
xlat
jecxz
pushf
cmp
push
push
cli
repnz
push
adc
ss
sarb
xor
ds
hlt
pushf
aas
push
stc
repnz
or
jbe
push
cmpsb
jb
stos
mov
mov
test
inc
jo
shrl
movsb
cs
adc
sub
jo
andl
rolb
and
out
jbe
push
pop
mov
jo
je
sbb
imul
das
idivl
popf
out
push
sbb
wrmsr
fs
pop
fldcw
dec
mov
push
xchg
cmp
mov
mov
mov
cmp
shll
fdivrs
or
incl
mov
das
ljmp
popa
mov
sbb
fwait
shll
mov
out
je
push
xlat
orb
add
roll
xor
add
mov
ret
repnz
cmp
out
cli
out
jmp
mov
jno,pt
jl
subb
xchg
cld
and
lahf
push
mov
adc
sbb
arpl
out
mov
xchg
lods
mov
mov
sti
dec
mov
mov
in
inc
clc
push
daa
clc
adc
inc
push
fldl
lods
sbb
sub
movsl
mov
add
jo
sbb
cmc
insb
in
sub
cmc
lods
fildl
sti
fwait
leave
stc
xchg
scas
mov
movsl
and
xchg
addr16
xor
repnz
icebp
pop
mov
push
push
pop
aaa
dec
enter
adc
xchg
rol
mov
dec
push
pop
popa
xchg
cmp
ret
rcl
xor
mov
sub
dec
mov
lcall
out
insb
fs
cmpsb
popa
sub
cltd
es
xor
xor
out
jmp
sbb
sahf
dec
mov
pop
push
shll
fisttps
leave
lods
jo
lret
stos
ffree
fildl
xchg
stos
and
or
xor
movsl
daa
jb
or
in
repz
outsl
cmp
jmp
pop
in
xchg
sub
ds
fmull
xlat
ss
insb
out
stos
pop
cs
pop
or
sub
jmp
xchg
ret
push
test
pop
stos
fcom
pop
fadds
stos
pop
xchg
pop
rcl
fnstsw
xlat
adc
jmp
mov
cld
loop
add
pop
mov
dec
mov
pop
cld
sbb
int
outsb
imul
xchg
sbb
imul
dec
fnsave
push
jne
fchs
test
cli
add
mov
ss
jmp
loopne
xor
and
push
shll
xchg
pusha
fbld
ficoml
push
imul
inc
or
inc
shll
in
jbe
rcll
sti
pop
dec
pop
lcall
lret
gs
jne
adc
out
dec
bound
imull
or
fistpll
cmpsb
adc
adc
pop
mov
inc
pushf
jae
sti
loopne
xchg
icebp
loop
mov
into
pushw
xchg
adc
push
adc
mov
je
inc
xor
jno
cmp
add
xchg
sbbl
mov
mov
mov
xchg
nop
jecxz
leave
xor
into
in
enter
and
lcall
or
fwait
mov
mov
loopne
dec
popa
lock
pushf
in
lods
cmp
imul
mov
adc
repz
shr
add
push
mov
push
pop
adc
adc
pop
mov
aam
insb
push
cmc
hlt
fimull
cli
cmp
rcrb
sbb
ret
jge
adc
leave
and
out
xchg
mov
out
inc
xchg
and
popf
cmc
jp
addb
xchg
push
fildll
jns
dec
mov
lock
mov
pop
mov
movsb
dec
cmp
das
xchg
sbb
clc
leave
sub
add
sbb
sahf
fcmove
mov
jae
dec
sub
jbe
jecxz
addr16
loop
pop
xchg
mov
repz
mov
inc
addr16
mov
leave
jle
lea
or
pusha
std
mov
gs
adc
icebp
iret
out
lods
rcll
pop
mov
das
into
jbe
pop
orl
out
jo
pop
pop
pusha
mov
fs
mov
mov
dec
js
in
lahf
fstpt
mov
cli
mov
sbb
mov
jb
fldl
and
sub
pushf
mov
ljmp
fmull
leave
aaa
mov
nop
test
cmp
sub
xchg
in
sti
mov
jbe
addl
xor
out
cld
imul
jp
ss
mov
int
push
and
loopne
mov
lds
rcr
adc
es
stos
loopne
adc
mov
lcall
faddl
std
test
cmpsl
aaa
aam
fists
mov
fidivl
add
in
jae
insb
ds
popa
mov
xor
repz
adc
adc
or
int3
insb
fsubrl
dec
mov
push
movsl
mov
dec
adc
test
bound
fisttps
lret
mov
sbb
sarl
arpl
cmp
jl
xor
dec
add
ret
inc
fiaddl
cs
out
mov
dec
mov
xchg
pop
push
jecxz
daa
js
dec
add
loopne
mov
cmpsl
cmpsb
fwait
cwtl
adc
jl
in
nop
mov
inc
repz
mov
inc
sbb
lcall
mov
ds
mov
sahf
fwait
xchg
adc
movsl
sub
out
mov
lea
jge
bound
adc
push
jl
push
xchg
xchg
mov
andl
lahf
xchg
and
and
les
movsl
and
mov
inc
lahf
add
push
popa
jnp
in
adc
lods
cmpsb
push
insb
punpckldq
jp
lret
or
pop
lods
in
mov
in
in
cmp
sub
dec
bound
xchg
pop
in
add
lock
aaa
bound
pop
and
mov
or
mov
in
leave
repnz
sub
jge
jbe
rcrb
daa
add
std
inc
shll
jnp
hlt
push
xor
fsubrp
or
xchg
adc
fadds
add
push
aaa
pop
jae
mov
mov
jnp
shr
push
andb
test
mov
adc
fisubrl
pop
insl
aam
das
or
in
jg
jbe
addb
je
test
inc
or
iret
jg
xchg
and
pusha
test
sub
sub
dec
pop
mov
pop
fiadds
jge
jae
out
mov
loop
test
fisubrl
pop
in
out
sbb
jg
stos
adc
jno
push
adcl
outsb
jecxz
shr
xorl
xchg
push
mov
fucompp
push
sbb
popf
push
or
add
cmp
pop
jno
cld
add
mov
xor
dec
iret
xor
ja
loope
das
push
mov
fidivrl
js
divl
pusha
ljmp
scas
mov
pusha
push
outsb
fs
shl
push
push
repnz
jp
bound
jo
rcrb
notl
pop
enter
mov
push
or
xchg
fldcw
add
ljmp
std
xlat
ret
or
mov
lock
push
loope
out
repz
pop
das
cmp
or
add
mov
inc
fsubrp
push
sbb
mov
xor
sahf
mov
inc
mov
and
mov
test
mov
movl
das
fdivl
shlb
push
pop
fsub
aam
sub
xchg
mov
fsubl
jbe
daa
mov
stos
inc
push
jmp
or
push
jb
push
lea
dec
pop
inc
lea
aaa
pop
repz
les
sbbl
fwait
loop
add
jge
xchg
fsubrs
test
ds
jns
push
or
popa
fldenv
loope
cmp
jo
movl
jb
mov
cwtl
in
cld
cmp
pop
in
loop
and
pop
pop
xchg
fsts
and
int3
mov
shlb
sub
push
addr16
mov
mov
fbstp
inc
jbe
int
jg
div
cmpsb
cmpsb
push
aas
das
mov
out
cmp
xchg
mov
lea
mov
sub
iret
int
outsl
xchg
dec
dec
cmp
orb
push
lret
mov
lcall
nop
loope
stos
clc
xchg
ds
dec
mov
test
movsl
lahf
cli
mov
sub
das
arpl
jg
add
sbb
and
sbb
js
fldt
je
es
ret
lods
int3
fstl
inc
call
mov
std
mov
jns
lahf
lcall
enter
and
mov
mov
faddl
pop
bound
in
clc
inc
lods
push
pop
sbb
sbb
fiadds
adc
shrb
jns
movsb
stos
test
sbb
mov
mov
aam
mov
pushf
mov
pop
iret
cmpsl
sub
mov
cmpsb
jp
icebp
clc
push
jge
push
das
pusha
fisttpll
or
mov
lahf
in
cmp
clc
repnz
sbb
and
inc
outsb
add
stos
inc
sbb
aaa
imul
mov
adc
xor
push
cmp
add
cmp
sbb
dec
push
dec
hlt
cmp
dec
cmp
lods
popa
dec
jecxz
xchg
lds
sub
mov
mov
or
stc
fisubs
loop
jo
sub
addr16
insb
fcomi
lock
rorb
icebp
sub
fcoms
pop
jo
mov
cmc
divb
je
push
sbb
push
in
pop
pusha
jne
lods
mov
push
int
xor
js
sub
cs
fbstp
scas
xchg
js
movsb
ja
mov
subl
dec
dec
stos
pop
test
xor
lcall
stos
xor
mov
push
jle
rorb
rcrb
pusha
xor
fiadds
in
pop
inc
shrb
rcll
addl
adc
test
jg
rcll
add
jmp
movsl
xorl
xchg
mov
out
int3
cmpxchg
sub
movb
mov
sbb
jns
rcrb
scas
in
pop
cmp
dec
cmp
sbb
in
cs
inc
push
incl
fisubl
iret
adc
mov
sbb
clc
iret
mov
insl
mov
dec
xchg
test
add
jnp
cmp
fistl
dec
sub
out
sub
push
pop
adc
dec
add
mov
and
mov
dec
sub
addr16
sub
push
mov
testb
pop
push
pusha
cwtl
xchg
mov
mov
sarb
mov
pop
imul
repz
test
out
cmpsb
fnstcw
fbstp
pusha
clc
cmpsl
push
mov
das
push
aas
add
mov
jns,pn
push
xchg
add
jle
sub
dec
push
aas
into
in
adc
adc
push
push
mov
ljmp
jle
xor
cmc
out
inc
mov
data16
addr16
adc
pop
nop
repz
fnstsw
sbb
xchg
je
shrb
loope
cmc
test
or
in
inc
test
movb
fldcw
push
scas
adc
out
les
int
jge
mov
lea
mov
or
sub
movsl
sub
bound
push
add
scas
cmp
in
xchg
push
lahf
mov
lahf
or
or
out
hlt
jmp
jmp
push
adc
sti
aam
inc
movsl
stc
mov
hlt
mov
xlat
movq
jne
and
int3
add
sub
add
dec
daa
inc
xor
cmp
sahf
add
jbe
data16
nop
cmp
mov
int3
out
mov
mov
mov
inc
iret
aad
mov
adc
jge
sarb
orb
movsl
popf
out
or
mov
add
mov
pop
fldenv
jmp
pop
loope
sub
add
sbb
bound
lock
dec
test
xchg
pop
mov
lods
lds
mov
arpl
xor
lds
sarb
ss
mov
sbb
mov
mov
push
dec
and
xorl
xorb
pop
or
mov
cmp
pop
inc
addr16
xchg
sub
xor
sbb
pop
test
lds
out
lock
mov
push
daa
mov
repz
sub
mov
lds
pop
mov
stc
dec
jle
dec
test
jle
into
jae
mov
add
pop
cmp
sub
testl
aam
mov
divb
inc
fsubs
sahf
leave
pop
ds
jno
adc
sub
xchg
jl
pop
pop
jp
jge
aas
in
aaa
sti
test
rcrb
popa
ret
sub
movsb
mov
pop
ja
mov
xchg
push
outsl
sub
std
push
sbb
sbb
popf
add
xor
jp
mov
lcall
mov
xor
push
cmpb
cmpsl
mov
push
push
push
jmp
cmp
jecxz
repz
clc
in
int3
mov
clc
and
xor
cwtl
lahf
sub
insb
shrb
scas
mov
push
mov
enter
enter
xor
add
pop
push
sub
dec
in
in
popf
mov
mov
outsl
mov
xchg
xor
adc
push
adc
adc
sti
inc
and
shlb
mov
aam
aaa
loope
in
cwtl
sbb
add
out
mov
lret
in
pop
movsb
ss
and
xor
xor
xor
loopne
sub
test
jecxz
mov
sub
neg
cmp
pop
mov
cmc
adc
push
loopne
sub
dec
aas
or
sahf
mov
popf
fbld
push
int
outsb
test
xor
dec
test
popa
ret
mov
cltd
add
xchg
sub
inc
inc
mov
data16
cwtl
dec
push
mov
lds
orl
pusha
sbb
cmp
mov
cmp
push
jnp
pop
xchg
cmpsl
bound
add
imul
xor
jae
xchg
jecxz
or
stos
stos
xchg
outsb
movsl
lods
dec
pop
cmp
sub
mov
fcmovnu
bound
xchg
xchg
push
jg
pop
jb
lock
xchg
jnp
shll
cwtl
push
pop
mov
flds
lcall
scas
ds
mov
call
mov
xor
pusha
shr
cmp
sbb
pop
inc
add
pusha
sub
inc
adc
xor
call
hlt
mov
push
call
dec
mov
push
and
arpl
push
scas
cltd
filds
sbb
es
xor
pop
cmp
sub
add
iret
pop
jmp
lret
lahf
fiadds
and
lock
and
and
scas
xchg
xor
push
call
loope
int
jge
insl
sub
sub
cs
dec
mov
test
lret
orl
nop
popa
jne
push
in
sub
icebp
add
jge
or
je
or
cwtl
ret
mov
add
push
stos
in
loop
mov
mov
pop
lcall
or
adc
pushf
mov
mov
cmpb
cmpsl
push
lods
pop
das
inc
mov
rcrl
sahf
mov
shlb
loop
sti
jne
xchg
or
jmp
push
decl
jecxz
inc
jno
mov
movsb
in
xchg
inc
fs
add
mov
mov
sbb
cmpsl
lods
jp
popf
mov
adc
je
mov
inc
jno
pop
jae
push
call
push
and
jge
das
sbb
cwtl
jge
ret
mov
cltd
jne
arpl
add
pop
sbb
xorb
pminsw
sub
mov
repz
in
jp
add
adc
sub
repz
jp
stc
pop
mov
cmc
mov
cmpsl
mov
outsb
inc
repz
push
or
jns
aas
inc
sti
sub
in
adc
in
fs
mov
xchg
jecxz
mov
cmpsb
jp
lret
sbb
sub
les
pop
enter
xor
addl
sub
mov
xlat
cmp
cmp
fsubs
ss
push
insl
repnz
inc
fists
nop
pop
sub
insl
sbb
jmp
push
xchg
insl
sti
movsl
sbb
sbb
out
push
pop
std
movsl
pop
pop
out
push
sub
push
test
pop
jl
movsl
push
fs
dec
push
arpl
or
adcl
and
cli
aaa
pop
fs
mov
daa
inc
add
pop
pop
es
dec
pop
insb
mov
fmulp
or
arpl
cmp
nop
in
pusha
sahf
xor
sub
jno
gs
insl
clc
outsl
xchg
orl
xor
inc
and
enter
mov
jl
mov
mov
aaa
xlat
add
mov
rorl
mov
mov
arpl
cmpsb
lods
mov
and
pop
pop
mov
sbb
push
or
outsb
dec
and
mov
jae
pop
mov
xor
inc
cmp
pushf
lds
cmp
bound
pop
mov
jp
in
stc
xor
les
mov
push
rcrb
sub
das
imul
ficomps
lea
cmp
add
jecxz
jbe
inc
mov
jecxz
in
mov
fisubrl
nop
dec
fwait
jle
push
movsb
sbb
jne
repnz
cmp
xor
das
test
push
mov
test
push
imulb
test
out
fildll
or
lds
and
sbbl
inc
dec
push
add
notl
push
lock
pop
mov
repz
mov
jnp
and
movsb
jno
sarl
stos
jge
pop
lock
insb
cmp
fisubrs
sbb
pop
sub
pop
lret
add
sbb
mov
loop
cld
mov
aaa
mov
dec
lret
pop
mov
inc
cltd
or
fs
filds
aas
scas
sub
mov
mov
nop
lods
adc
adc
pushf
imul
sbb
pop
fwait
lods
push
xor
pop
fs
adc
and
sahf
mov
jmp
out
arpl
clc
bound
stos
lahf
push
rcrl
adc
mov
call
add
aas
cmpsb
inc
sub
push
ret
popf
call
and
pusha
inc
imul
test
hlt
insb
int
out
or
fmulp
hlt
je
push
mov
pop
into
daa
sbb
into
jecxz
sbb
push
test
movsb
in
loope
push
imul
pop
int
cli
jb
test
std
xor
cmpb
daa
xchg
push
jmp
xchg
jg
jb
fiadds
das
inc
sbb
stos
jb
test
mov
rcll
or
pop
les
dec
adc
stc
loope
idivl
and
cmp
dec
mov
mov
sbb
mov
arpl
xchg
in
cmpsb
and
dec
cmp
push
cmc
mov
add
movsb
cmpl
stos
orl
dec
loope
sahf
jle
test
mov
mov
mov
imull
push
and
pop
fmull
inc
fnstenv
pop
outsb
aaa
inc
lcall
or
in
xchg
xchg
fwait
adc
test
jge
sub
aaa
jae
push
psubusb
xor
lods
dec
test
pop
jb
inc
jns
loop
lods
outsb
sbb
jnp
gs
aaa
ror
push
xchg
inc
and
inc
mov
and
mov
xchg
xlat
cli
cmp
ds
mov
xor
test
into
jo
popa
jg
jl
push
push
mov
jo
lea
mov
add
js
in
lds
sbb
add
jle
mov
mov
nop
cmp
rcrl
outsb
jge
aad
mov
sbb
cmp
xor
pop
and
cli
jns
mov
fwait
sahf
out
xchg
pushf
int3
je
adc
stos
sbb
loope
xor
addr16
int3
xor
or
push
outsl
imul
push
jp
int
loope
xor
outsb
outsl
clc
call
or
xor
loopne
ja
mov
mov
nop
leave
pop
lahf
push
std
fldt
sbb
push
leave
ljmp
std
leave
jmp
jne
cs
cs
push
fldt
cli
test
loope
mov
pop
and
add
out
daa
xchg
fistpll
and
pop
push
in
xchg
mov
or
js
mov
cmp
push
pop
and
add
decb
push
jb
mov
data16
aas
cmp
fs
inc
jmp
test
adc
xchg
pop
repz
pop
lea
je
fldl
dec
add
pusha
movsl
aaa
mov
shr
clc
hlt
xchg
jnp
mov
mov
fldcw
test
divb
adcb
iret
and
popf
or
jnp
aad
adc
add
add
aad
mov
out
push
popa
std
jecxz
rclb
in
cmp
and
and
adc
lea
cmpsb
lahf
filds
mov
pop
mov
ljmp
xchg
pushf
xor
pop
sbb
addb
mov
shrb
sbb
popf
test
sub
sbb
int3
loopne
sbb
cmp
in
mov
xor
xchg
xchg
lcall
push
push
bound
fistps
pop
pop
jno
into
mov
jl
sbb
fucomp
inc
pop
fsts
mov
mov
out
test
xlat
insb
adc
add
retw
shr
outsl
cli
mov
cmpsl
jg
adc
add
xchg
icebp
jnp
xchg
push
shlb
jge
jecxz
scas
inc
repnz
out
pop
sub
and
lods
cmp
xor
ja
test
pusha
data16
jecxz
xor
stos
xor
cmp
fcoml
mov
loopne
jne
xchg
push
xchg
or
test
xor
rorl
int3
cld
xor
les
clc
jbe
leave
cmp
push
addb
dec
das
xchg
imul
scas
ficomps
ljmp
add
xor
pop
inc
xchg
inc
and
dec
roll
inc
mov
in
adc
lods
xor
dec
nop
les
mov
jmp
adc
push
fcoml
addb
push
lea
jl
inc
inc
mov
movl
lock
jmp
mov
mov
lods
mov
dec
push
inc
cmc
xchg
aaa
js
lds
jecxz
pushf
das
pop
call
jge
iret
cmpsb
add
and
pop
lret
je
aaa
cmp
outsb
stos
std
jnp
push
hlt
in
push
insl
jle
xor
or
mov
je
iret
jmp
mov
fnsave
and
aaa
sbb
pop
data16
mov
cld
adc
push
add
jae
imul
cltd
jae
cmc
cmp
inc
int3
mov
cmp
int
orl
daa
or
fbld
mov
sahf
jne
mov
sub
pop
jne
jne
mov
jecxz
jne
adc
jns
push
mov
movsl
xlat
sub
mov
ja
inc
das
test
push
aam
push
daa
jecxz
sarb
mov
cli
pop
adc
push
and
jmp
andl
sub
cli
cmpsb
sbb
or
mov
mov
das
stos
or
repz
ss
push
jbe
les
aam
ficoms
icebp
addb
int
add
clc
cmp
xchg
adc
movl
mov
pop
pop
fadds
insb
mov
xor
dec
mov
inc
xchg
xchg
push
sub
ja
rcll
rclb
push
add
push
mov
jo
stos
sbb
push
jecxz
mov
mov
aaa
popa
xchg
outsl
loop
xchg
xchg
mov
movsb
das
out
jno
sbb
push
or
sbb
je
arpl
icebp
shll
sub
test
outsb
cmpsl
cmp
out
mov
cltd
ja
or
mov
jge
lods
rorb
xlat
pop
cmp
jecxz
jns
enter
push
in
or
xor
add
mov
dec
pop
xchg
xchg
mov
dec
cmp
dec
cs
mov
dec
cmp
loope
pop
jmp
testb
sub
xchg
push
jle
jns
pushf
xor
int
add
or
mov
sahf
rorb
inc
test
cmpsl
pushl
lods
gs
cmp
or
sub
sbb
sbb
das
or
imul
add
das
add
xchg
pushf
xchg
cmc
cmp
loopne
enter
mov
mov
xchg
xor
add
out
in
dec
xor
dec
rcrl
rorb
add
popf
cmpsb
pop
pop
mov
mov
ret
xchg
jecxz
xchg
mov
push
push
sub
mov
xor
or
dec
sti
ret
test
pop
scas
xor
mov
dec
clc
xor
out
popf
pop
push
xchg
into
pop
and
aam
xor
lods
test
or
arpl
ja
cltd
pop
cmpl
sbb
push
aaa
ja
call
les
sbb
mov
dec
jne
roll
roll
xchg
fs
rolb
xchg
pcmpeqw
shr
mov
pop
adc
dec
sub
sbb
jb
xchg
push
in
mov
xor
ljmp
lret
mov
daa
ljmp
scas
sbb
mov
faddl
dec
pushf
lea
mull
jmp
fwait
xchg
es
sbb
pop
pop
and
ja
adc
push
or
cmpsl
mov
mov
mov
insl
int3
mov
std
outsb
popa
das
cmp
call
push
jmp
push
mov
xchg
dec
inc
add
xor
lds
addr16
stos
or
cs
outsb
mov
je
ss
ret
sbb
and
incb
dec
enter
movsl
aad
dec
xchg
imul
aam
jp
mov
jae
and
xor
into
es
mov
daa
mov
faddp
fs
push
insl
fcmovbe
out
mov
aad
mov
outsb
jecxz
cmp
loope
jno
in
sahf
add
sub
jg
cmp
lea
addr16
push
add
or
cmp
dec
mov
faddl
mov
jns
lret
stc
outsb
loope
fxtract
hlt
cmpsb
outsb
sbb
roll
dec
inc
xor
adc
jmp
adc
lcall
lods
xchg
rclb
test
lods
jg
cli
ret
rcrb
das
cmp
push
xchg
push
les
sub
adc
lods
xor
pop
add
in
dec
mov
jns
pop
ss
sub
or
cmp
lahf
repz
mov
in
pushf
rolb
outsl
mov
test
stc
cltd
insb
sbb
or
int3
or
and
ret
xchg
dec
out
loopne
addr16
mov
sbb
out
movsl
test
xor
scas
sub
cwtl
add
rolb
das
xchg
shr
push
repz
push
xor
sbb
pop
rcrb
cmp
pop
into
sbb
sbb
call
imul
pop
dec
add
or
fistps
jl
xor
in
sahf
jp
inc
mov
jbe
out
aas
popf
dec
adc
dec
lret
in
and
das
mov
addr16
cli
rcrb
mov
mov
xchg
lock
ret
xchg
dec
das
sbb
popf
in
mov
lahf
xchg
xchg
xor
addl
dec
js
inc
mov
or
lcall
dec
fwait
pop
inc
imul
cmp
push
and
fs
repnz
popf
push
push
jecxz
push
outsl
push
adc
ds
adc
inc
popa
cmpsl
jl
push
movsb
gs
add
add
jb
aas
nop
adc
mov
mov
add
xor
dec
lret
nop
jns
pop
mov
sbb
fs
mov
fdivrs
popf
push
cmp
fildll
cmp
push
lods
dec
repz
data16
dec
push
or
xorb
mov
cmp
shll
repz
xchg
stos
lds
jl
add
add
std
iret
push
leave
pop
fnsave
or
push
arpl
pop
stc
xchg
jmp
push
fadds
lea
int
shlb
dec
mov
test
arpl
jbe
add
cmp
sbb
loop
test
call
les
lea
dec
sbb
mov
mov
jmp
lret
aas
sbb
out
out
xchg
xor
sub
mov
popa
or
push
xor
inc
adc
cmp
add
cli
push
cmp
xchg
pop
push
popf
xchg
outsl
lret
js
shrl
jg
cli
adc
fidivrs
or
or
cltd
call
or
add
fwait
or
pushf
movsb
mov
notb
and
andb
in
shrb
add
adc
mov
sub
mov
jmp
pop
sbb
dec
sbb
test
dec
gs
es
adc
movsl
pop
shll
xor
out
sub
mov
popa
fidivrs
push
leave
sarl
cmp
lods
sub
rcl
jb
sahf
add
cmpsb
lret
enter
mov
or
cmp
push
leave
pop
ret
jo
adc
mov
sub
scas
mov
mov
std
cmpsb
adc
or
jmp
xchg
sahf
jns
jmp
adc
stos
push
ljmp
rcll
pushw
jg
mov
and
into
push
add
aad
lea
idivb
add
icebp
add
pop
cmp
sub
push
mov
rolb
mov
in
lret
adc
mov
stos
push
adc
je
rcll
sub
or
fldenv
push
aas
sbb
cmp
push
outsb
sub
popa
jmp
adc
pop
xor
and
mov
ss
push
mov
add
insb
stos
hlt
xchg
push
sub
cltd
test
in
sub
lahf
vorps
orl
sbb
inc
test
out
mov
insl
inc
xor
pop
lea
push
shll
loope
push
mov
out
pop
es
pushl
jmp
and
pop
sahf
pop
adcl
mov
inc
insl
adc
insl
add
inc
dec
mov
adc
outsl
cmp
lahf
inc
dec
lret
fistpl
jl
subb
lcall
xchg
xchg
out
pushf
sbbl
jns
xchg
push
push
mov
cmp
fwait
push
in
sbb
rorb
xchg
cmp
fld
insl
pop
jg
fiaddl
mov
insb
in
sub
std
pop
and
inc
into
out
and
pop
rol
sbb
je
mov
lret
sbb
test
in
xchg
push
mov
sbb
pop
sbb
pop
push
xor
clc
popf
push
sub
scas
push
cltd
addr16
jl
jmp
pusha
mov
lock
cmp
cli
test
lods
in
pop
mov
inc
das
mov
push
stos
icebp
pop
sahf
loope
not
lds
test
iret
fwait
cmpb
mov
addr16
das
pop
fisubrs
xor
fucomi
cwtl
xchg
lcall
mov
sub
cltd
cli
addr16
pusha
int3
jmp
and
call
pop
mov
into
call
pop
jns
dec
jb
lea
jns
adcb
xor
inc
std
add
pop
xchg
mov
bound
add
loop
clc
add
cmp
mov
cwtl
mov
cmpl
scas
adc
aaa
add
movsb
test
mov
cmp
subl
js
dec
fs
lock
sahf
mov
bound
mov
loop
lcall
rorb
repz
mov
lcall
xor
or
dec
pop
ret
sbb
pop
and
xchg
dec
mov
sub
jno
xor
lret
addb
inc
imul
lea
and
mov
movsl
sub
sub
shll
rcrl
mov
hlt
sub
mov
adc
dec
fdivs
sahf
inc
std
push
pop
out
imul
mov
or
pop
fs
shrb
pop
popf
and
xchg
xchg
inc
scas
push
mov
test
ds
test
adc
cmp
jp
mov
outsl
mov
rcrb
daa
dec
and
jmp
scas
dec
lret
inc
cmpl
dec
add
ljmp
jo
pusha
and
loop
test
sbb
mov
cmp
mov
xchg
mov
leave
push
out
in
scas
dec
call
mov
enter
jae
add
xchg
ret
mov
int3
shlb
clc
outsb
inc
test
aam
lret
inc
into
adc
lock
popl
push
mov
cmp
out
and
cmp
dec
into
out
pop
and
pusha
lcall
ret
nop
push
mov
mov
adc
jge
sub
call
addr16
cmp
divb
dec
repz
fdivr
aad
fiadds
rorl
jmp
cmp
add
gs
lds
pop
jp
outsb
mov
lcall
adc
xchg
jbe
iret
dec
push
xchg
in
push
outsl
mov
icebp
or
and
sti
iret
pop
adc
or
pop
stos
xchg
insb
movsb
cmpl
xor
lahf
mov
sbb
or
test
dec
or
and
das
daa
movsl
pop
popa
dec
divl
sub
cli
sub
inc
pop
jle
xor
cmpsl
inc
pop
push
pop
adc
mov
mov
jecxz
push
cltd
repz
cld
xor
push
lds
mov
pushf
mov
clc
bsr
scas
jne
add
in
push
test
sahf
xchg
aam
mov
js
inc
iret
cmpsb
and
dec
cli
sbb
and
inc
adc
pop
enter
mov
mov
pop
les
pop
push
out
lret
dec
xchg
hlt
mov
lods
das
xor
loope
shlb
insb
call
and
insl
dec
je
pop
push
or
out
mov
mov
cmp
cmp
add
mov
lahf
repnz
arpl
adc
mov
adc
ficompl
cmp
sub
dec
xlat
xchg
push
push
scas
pop
cmc
xor
call
xor
test
lret
mov
adc
xor
sbb
push
xchg
push
cmp
or
mov
dec
cmp
jg
sarl
dec
ficoms
lcall
imul
lods
pop
push
daa
outsl
frstor
insb
lcall
xchg
xchg
popf
push
mov
cmpsb
dec
inc
ds
enter
movsb
mov
or
xor
sbb
dec
jg
repnz
imul
push
lcall
jnp
leave
or
xor
mov
adc
dec
jle
test
sbbl
dec
divl
jmp
cmp
imul
sbb
fmull
jns
inc
push
lods
popf
pusha
fwait
js
mov
aaa
bound
nop
jmp
lcall
test
push
outsl
mov
adc
dec
insb
dec
xor
subl
int3
and
sub
mov
jecxz
cld
test
pop
or
jbe
lcall
dec
jmp
cmpsb
scas
ds
imul
loope
inc
add
lahf
js
faddl
inc
mov
cmp
insb
rcrl
cmp
sahf
div
loope
jb
jns
sub
xchg
or
mov
cltd
lret
pushf
ret
popf
mov
repnz
cld
mov
or
and
and
and
and
aas
push
pop
or
stc
subb
mov
dec
jecxz
and
test
mov
subb
das
adc
add
xchg
ret
jle
pop
clc
and
jmp
jo
push
jbe
pop
inc
fwait
aaa
pop
mov
mov
cmpsl
dec
push
push
je
xchg
icebp
dec
scas
call
xchg
push
adc
repnz
and
lods
jmp
cwtl
loope
sbb
stos
jge
in
add
dec
sub
fwait
imul
xchg
out
push
adc
scas
mov
jo
cld
ret
cmp
adc
mov
push
push
push
enter
bound
mov
shll
inc
loopne
or
ficomps
hlt
decb
adc
pop
addr16
fbstp
or
inc
sbb
mov
popa
push
push
leave
mov
xor
mov
lods
stos
mov
adc
or
xchg
mov
jno
cltd
jb
ret
add
fidivrs
push
cld
cltd
xchg
or
xchg
out
scas
jbe
subb
xchg
jns
into
fsubrp
jl
popf
popa
dec
outsl
pop
jae
mov
ret
mov
xor
cwtl
hlt
xchg
imul
mov
jecxz
in
clc
out
sub
mov
cmp
adc
aaa
out
aad
mov
fisubl
jae
cmp
adc
cwtl
pop
add
mov
or
jl,pt
sti
cmpsl
pop
cld
lret
xchg
xchg
in
cmpsb
into
push
iret
es
cltd
aad
ror
push
addb
jecxz
lea
loope
subb
add
addb
ficomps
ljmp
adc
ret
mov
fcmovu
lods
pop
in
lods
jecxz
sub
fistpl
xor
mov
imul
imul
pop
push
xchg
imul
sahf
cld
cmpsb
inc
pusha
cmp
inc
adc
sub
insb
dec
jmp
gs
repnz
into
xor
push
sti
sbb
aad
pop
dec
ds
mov
dec
in
xchg
insb
notb
popa
in
dec
xchg
add
jo
stos
xchg
inc
out
ret
inc
sbb
out
cmp
into
jge
cmp
imul
out
mov
imul
xor
pop
cli
adc
rcl
mov
mov
mov
pop
add
sub
test
sahf
insl
jb
xchg
adcl
icebp
push
add
add
or
pushf
mov
cltd
icebp
push
jae
dec
push
push
mov
lea
frndint
sub
sub
insl
xchg
punpcklbw
xchg
loopne
aaa
popa
sarl
roll
sbb
aad
outsl
inc
repz
jl
push
jno
push
clc
adc
fmul
nop
dec
cmp
out
bound
adc
sahf
insb
aaa
push
jp
pop
mov
dec
sbb
xchg
xor
dec
je
jnp
jo
fadds
addr16
insl
push
adc
and
dec
mov
mov
popa
pop
cmp
inc
es
push
bound
dec
testb
push
jbe
xor
adc
mov
sti
sbb
mov
pop
gs
sbb
fwait
jnp
lcall
push
inc
stc
stos
sbb
dec
pop
push
rorb
stos
je
sub
ret
cmp
aad
clc
jns
lahf
shll
push
jno
ret
mov
js
mov
stos
out
cmp
lock
aaa
push
adcb
xchg
aaa
inc
sbb
xor
or
push
es
xor
push
inc
xchg
mov
mov
stos
add
sbb
aam
inc
cmpsb
loope
shrb
xor
ja
jbe
sahf
mov
pop
fbld
sub
or
icebp
out
in
push
inc
imul
xor
andl
imul
orb
sbb
es
dec
cmp
loopne
ja
xchg
jb
push
rorb
testb
cmp
into
mov
sub
sbb
idivl
insb
mov
pop
sub
or
add
and
sarl
das
and
xor
jae
iret
ds
xchg
jae
push
in
sub
xchg
jae
arpl
stos
les
adc
cmpsb
cmp
jbe
mov
push
aas
outsb
cmpsb
ss
mov
pop
push
shrl
in
add
ret
lods
pusha
lock
cmpsb
test
mov
repz
xor
mov
mov
test
push
fisubs
sbb
jge
jg
push
fistps
xor
jp
mov
mov
mov
inc
lds
dec
push
mov
add
jle
lods
xor
sub
xor
or
or
jae
clc
mov
jnp
and
adc
enter
xchg
push
xchg
call
inc
ret
pop
imul
repnz
stc
subb
testl
inc
aaa
dec
nop
fcmovne
mov
inc
cld
js
jmp
xchg
test
mov
cmp
mov
stos
mov
or
jae
cmp
insb
cltd
lods
jle
add
test
mov
jns
mov
xchg
dec
jmp
pushw
lahf
aad
adc
mov
xchg
sbb
repz
fdivs
repnz
xor
mov
cmp
jne
xchg
mov
lahf
arpl
push
js
in
xchg
cld
push
lds
jno
pop
es
jecxz
mov
sti
add
lods
lods
jecxz
imul
adc
leave
fldt
or
in
xor
add
pop
movb
inc
jns
cmc
adc
movsl
push
fsubrp
mov
popf
int3
xor
xor
sub
dec
jge
add
rcrl
mov
stos
fistl
in
xor
je
testl
sbb
mov
sub
cltd
cmp
arpl
jbe
fldcw
dec
sahf
xorb
dec
cmpsl
or
mov
adc
jnp
sbb
cli
pop
into
std
clc
addb
inc
mov
jbe
fcmove
xlat
fidivrs
cmpsl
mov
testl
push
sub
or
push
fdivrs
sub
out
pop
stc
xchg
inc
inc
jmp
jns
push
pop
cmpsl
xor
or
inc
and
mov
xchg
cli
xchg
outsb
addr16
jl
aad
push
xor
dec
fisubl
mov
std
lret
or
jmp
xchg
cmp
pop
add
cmc
dec
ja
aaa
mov
pushf
add
pop
jae
mov
pop
mov
xchg
push
fstpl
jge
popa
push
movsl
fstps
cli
push
push
and
out
adcl
sub
mov
pop
jb
lcall
xor
pcmpgtb
mov
or
mov
test
test
fdiv
jecxz
add
sbb
jge
lret
mov
mov
and
mov
out
pop
int3
loope
sarl
or
add
in
inc
shl
lret
aad
mov
pop
add
mov
ja
das
add
aas
call
mov
repz
scas
mov
lock
add
push
fwait
pop
out
stos
in
xor
popa
inc
sub
pushl
or
inc
insb
sti
or
sbb
hlt
rolb
mov
sbb
inc
mov
fdiv
mov
rcrb
neg
notl
leave
negl
mov
sub
jno
call
es
xchg
jg
push
inc
inc
loope
outsl
pushf
and
gs
scas
jo
and
mov
jg
ret
adc
in
mov
sub
xor
xor
push
popf
xchg
repz
fs
xacquire
inc
outsb
jge
mov
add
rorb
bound
push
dec
movsb
clc
insl
sbb
xor
cmp
inc
icebp
iret
in
out
rcl
imul
fisttpll
jge
cwtl
sub
popa
and
repnz
push
nop
jns
jne
cwtl
mov
lcall
sbb
in
pop
popf
xor
sub
add
pop
nop
cli
scas
test
das
xchg
xor
cwtl
pusha
add
cmp
shlb
cmpsl
in
jmp
dec
and
mov
jbe
xor
push
and
cmpl
fidivl
mov
jo
jmp
loop
sub
mov
in
lcall
hlt
lret
mov
pop
xchg
and
push
aas
jl
mov
imul
pop
mov
sbb
adc
dec
inc
mov
repnz
cmc
jbe
inc
xor
xlat
inc
cmp
sub
add
imull
dec
mov
mov
cmp
cmc
int3
sti
std
scas
mov
aaa
or
call
ds
xor
sbb
lods
mov
dec
add
xchg
dec
sub
rclb
lods
ror
ret
cs
fs
test
stos
dec
cmp
mov
cmpb
inc
xor
inc
pop
sbb
daa
rclb
mov
push
popa
faddp
rcrb
adc
push
fcmovnb
dec
sub
push
mov
scas
insl
sar
pop
lret
inc
inc
aaa
stos
cmp
cwtl
xlat
xchg
cmpsb
jg
sbbb
mov
std
ret
ja
in
cmp
jmp
popa
inc
enter
mov
mov
adc
xchg
lods
push
jbe
and
cli
push
mov
add
es
add
and
pop
call
in
insl
push
fsubl
dec
lock
jb
mov
push
or
add
out
popa
leave
scas
sub
sbb
stc
loope
mov
stc
test
add
dec
mul
arpl
into
pop
jb
in
out
jb
pop
orl
adc
add
fwait
dec
jo
sbbb
inc
in
cmp
scas
dec
push
fs
mov
jbe
push
fsubr
xlat
and
imul
adc
rorb
mov
mov
js
testb
jmp
sub
push
xor
jns
test
inc
pop
test
les
or
test
mov
xchg
and
sti
mov
or
xchg
mov
cmpsl
cmp
xlat
sub
mov
jp
mov
ret
in
add
xor
loop
inc
pop
sbb
xor
in
xchg
cld
inc
mov
shrb
testb
insb
aaa
pop
shl
std
test
sti
or
imul
xor
notb
je
daa
pop
das
mov
jbe
stos
in
jg
and
jno
dec
xor
pop
andl
mov
add
test
dec
int3
adc
mov
pusha
jecxz
ret
and
adc
mov
inc
ret
ds
cld
and
aas
mov
mov
xor
xor
or
insl
outsb
cwtl
es
jno
sub
adc
push
stos
xchg
and
xchg
inc
and
bound
mov
pop
push
arpl
cwtl
stc
pop
stc
iret
shlb
lret
adc
enter
in
je
pop
lcall
aas
and
xchg
inc
cmp
xor
bound
mov
or
sbb
popl
cmc
repnz
mov
or
xor
rcll
out
sarb
loope
scas
popa
inc
lcall
inc
dec
std
xchg
flds
xlat
out
test
sub
mov
mov
ret
xchg
icebp
cltd
insb
mov
jl
test
pusha
cs
pop
mov
loopne
roll
lcall
in
xor
cmpsb
pushaw
stos
nopl
arpl
insb
jmp
adc
or
cli
sub
fbld
out
inc
xor
jns
fwait
mov
cmp
jmp
in
lret
aas
les
and
pop
push
sbb
jle
push
mov
dec
imulb
lods
repz
lret
jge
repz
adc
repnz
xor
bnd
movsb
es
or
jl
fstpl
cmpsl
popa
xor
divl
cwtl
xchg
xorb
xor
lock
and
mov
ret
sahf
inc
xchg
shr
aas
adcb
jecxz
xchg
call
cmp
cmpl
ffree
jge
sub
dec
xlat
out
mov
xor
mov
loope
decb
adc
push
sub
outsl
jmp
negl
mov
push
or
add
add
mov
imul
or
xlat
iret
out
push
lea
cmp
ljmp
add
or
nop
int
punpckhwd
pop
in
inc
push
sbb
cmp
loopne
fs
mov
inc
mov
movsl
icebp
inc
shl
insb
dec
outsl
sbb
mul
push
xor
out
mov
rorb
cmpsl
arpl
mov
js
inc
inc
push
adc
mov
push
fxch
cmpsb
pop
cmpsl
aaa
adc
xchg
dec
clc
xlat
jp
add
adc
fistl
jo
ds
jnp
push
popf
sub
lahf
mov
repnz
orl
push
into
xlat
mov
mov
jo
adc
xorb
and
out
mov
adcl
ljmp
addr16
and
aam
rcl
inc
pop
inc
cmc
and
mov
dec
jnp
lcall
lret
mov
push
mov
popa
inc
push
mov
mov
inc
and
jbe
mov
or
push
pushf
push
inc
test
push
mov
sub
cmp
xor
or
movsb
sub
sbb
dec
mov
lcall
or
xor
adcl
stc
sub
cltd
add
push
or
addr16
je
scas
outsb
mov
dec
lods
and
hlt
inc
rcll
jo
xor
popf
mov
repnz
mov
jg
push
xor
xchg
sub
adc
ja
hlt
push
jg
iret
out
xchg
imul
adc
movsb
mov
and
loop
and
pop
hlt
pop
xlat
xor
and
stos
pop
xchg
and
loopne
lods
in
cmpsb
add
adc
insl
push
mov
push
shll
ljmp
jle
xchg
adc
and
lock
outsb
push
cmpl
stos
or
dec
jnp
dec
mov
jbe
fdivrl
and
jnp
mov
addl
dec
dec
lods
xor
add
adc
or
mov
in
ss
ds
add
sub
fsubs
mov
and
das
fs
les
outsb
push
sbb
insb
lods
dec
movsb
pop
shll
lahf
or
fmulp
jae
scas
mov
lock
in
aam
stc
jle,pt
fwait
mov
sbb
jge
jge
rdmsr
mov
or
and
xchg
xor
pop
dec
clc
clc
mov
sbb
pusha
lcall
pusha
xor
push
das
ja
sti
dec
shlb
inc
cmp
cs
add
fwait
mov
inc
sbb
in
daa
cmp
jns
cwtl
sbb
mov
push
sbb
push
lock
cwtl
mov
add
xlat
lock
xor
rcrl
sub
mov
and
fwait
adc
mov
outsl
mov
push
outsl
enter
les
sbb
lret
mov
mov
shlb
daa
aam
das
icebp
sbb
arpl
aam
cmp
movsl
fmuls
xor
lock
cwtl
shlb
push
in
jmp
sbb
sarl
push
adc
rorl
repz
ret
incb
adc
xchg
movsl
das
clc
lock
mov
and
popa
xchg
sbb
push
enter
clc
aas
dec
bnd
pop
test
fdivs
mov
rorb
outsb
sbb
push
loopne
mov
stos
je
jo
dec
mov
jnp
das
mov
test
mov
testl
mov
push
loope
movsl
adc
lret
enter
sbbb
mov
gs
mov
cli
into
fucomip
lret
add
and
mov
inc
test
cmc
fcoml
cmpsb
test
stc
sbb
lock
xor
inc
mov
mov
je
stc
in
ljmp
mov
lods
int3
cmp
jo
inc
jnp
cmc
adc
sahf
neg
push
inc
jmp
mov
in
pop
push
cmp
add
in
cmp
xchg
mov
sbb
test
push
sub
test
std
sbb
jns
test
sub
mov
ret
sub
lret
sbb
rcr
pop
cld
or
dec
mov
outsl
and
xchg
mov
cmp
xchg
lods
ljmp
ja
mov
mov
and
sbb
and
hlt
inc
test
nop
mov
movl
jno
jge
sub
cmp
push
stc
mov
jg
mov
mov
cli
aaa
push
dec
andl
jmp
lret
push
push
insb
push
add
jne
shll
adc
xor
pop
lods
out
jl
out
mov
sbb
mov
shrl
mov
mov
adc
or
lods
fsubr
xor
fsubrs
or
mov
aas
and
repnz
pop
pop
xchg
adc
outsl
mov
mov
pop
lret
inc
cli
cli
mov
push
push
pop
int
shl
pop
mov
mov
jge
ret
aad
out
lcall
or
pop
pop
cmp
stc
lods
push
pop
mov
mov
loope
mov
lea
test
ret
dec
mov
dec
popf
sub
and
sahf
add
and
insb
daa
and
mov
cmp
lcall
jecxz
or
insl
lods
aad
mov
mov
cmp
or
sub
fidivl
call
inc
lods
mov
jbe
jns
hlt
xchg
add
adc
or
sbb
xchg
jmp
pushl
push
inc
pop
in
mov
sbb
data16
and
dec
push
scas
repz
dec
push
scas
scas
inc
repnz
cwtl
sub
rclb
inc
stc
in
mov
test
nop
insl
ret
jnp
xchg
pop
lock
adc
negl
add
mov
enter
sahf
aam
mov
push
push
jnp
lret
clc
adc
mov
sub
push
leave
pushf
lock
test
mov
lods
dec
pop
mov
adc
cmp
add
xchg
rcrl
xor
xchg
pusha
adc
push
cmpsl
and
int
les
fptan
es
mov
mov
sub
enter
pop
sar
add
lods
repnz
xlat
xchg
loopne
adc
adc
xlat
in
cmp
pop
mov
mov
push
aad
inc
inc
mov
xor
dec
roll
cltd
enter
jg
std
stos
scas
iret
xchg
sbb
and
adc
imul
sub
scas
inc
adc
mov
mov
inc
inc
outsb
sbb
cmovl
pop
and
cmp
add
add
faddl
arpl
sub
or
xchg
test
fists
mov
sahf
in
cmp
lods
cltd
mov
cmp
sarl
imul
stos
dec
andl
movsb
sbb
push
mov
stos
repnz
xchg
scas
call
or
or
dec
and
cmc
rcr
inc
pop
gs
les
call
popa
and
or
xor
stc
inc
xchg
inc
repnz
cli
push
clc
mov
nop
sbb
jne
movb
stos
pop
xchg
and
arpl
fcompp
mov
mov
mov
mov
cmp
fidivrl
cltd
and
cmp
lret
xchg
xchg
xlat
cld
movl
arpl
ds
cli
arpl
outsl
shr
sub
fwait
pop
mov
lcall
push
icebp
cmp
and
pushf
into
mov
dec
pushl
adc
xchg
xchg
mov
push
into
aam
inc
daa
insl
push
sub
lcall
add
pop
mov
mov
mov
xor
jcxz
je
push
js
mov
pop
xlat
jmp
xor
pop
xorl
cmp
dec
push
jmp
sahf
xchg
out
dec
sub
test
in
add
rcr
sub
out
fadds
jg
lcall
cwtd
jge
pop
shr
pop
cmpsb
or
in
add
lcall
push
or
add
add
xor
test
into
sbb
xor
stc
jno
or
mov
xlat
sub
sub
loop
xchg
mov
xchg
ret
mov
xor
out
sbb
testb
int
dec
fucomip
xchg
pop
test
pop
add
into
out
jne
std
int
fdivl
lcall
shll
sub
jmp
mov
outsb
mov
sbb
push
shll
out
jge
out
add
pushf
rcrb
daa
and
je
push
mov
jl
sbb
adc
add
and
ss
add
push
popa
xor
mov
leave
pushf
and
xchg
call
dec
iret
pop
stc
pop
ds
mov
idivb
jecxz
xor
les
test
sti
xchg
jg
cmp
mov
sub
fstps
stos
sti
in
cmpb
cmpsl
sbb
outsb
out
mov
icebp
push
push
and
lahf
or
mov
dec
adc
neg
add
lods
pop
pop
stos
push
test
hlt
xor
jne
hlt
jmp
pop
sub
or
inc
aam
cld
mov
add
rcr
jne
mov
fcomi
iret
dec
flds
int3
stc
lret
or
xchg
punpcklwd
fdivrl
adc
cltd
pop
stc
add
sub
or
and
push
mov
cmpsb
ret
fnstcw
adc
adcb
xlat
and
stc
rorl
lods
sub
test
sub
lds
ret
dec
xor
dec
or
rorl
pop
in
jl
cmp
jp
mov
xchg
xlat
sbb
pop
and
test
out
test
subb
mov
push
cmpsb
imul
hlt
pop
in
aam
push
mov
xchg
push
ja
mov
inc
or
icebp
mov
inc
push
mov
sbb
iret
xchg
lods
icebp
nop
dec
add
and
clc
es
dec
leave
xchg
xor
loop
cmp
push
rclb
dec
push
adc
xchg
in
lret
sti
xor
mov
lret
lock
and
push
add
jo
insb
cs
adc
mov
stos
je
inc
sbb
push
test
loopne
pop
popa
or
mov
icebp
push
call
pop
mov
jecxz
mov
mov
adc
fidivs
int3
jmp
mov
or
add
das
jmp
adc
fs
addb
xor
xchg
push
loopne
xchg
clc
inc
rorb
lds
push
jle
mov
icebp
imul
out
addl
rol
adc
data16
add
int
loope
push
inc
out
bound
cld
or
jb
fistpl
pushf
cli
mov
cmp
jmp
faddl
negb
imul
and
cmp
jae
fnsaves
xor
or
stc
xor
adc
sbb
mov
jp
mov
jbe
fwait
stos
jbe
xor
je
ret
push
in
lret
push
ret
es
dec
xor
aaa
repnz
out
dec
push
dec
or
and
das
call
xorb
fsubl
gs
pushf
rcrl
scas
lcall
call
stos
cmpsl
push
dec
mov
mov
imul
in
inc
push
and
fcomps
fsubr
hlt
jmp
mov
jl
icebp
adc
cs
outsb
movsl
test
test
sti
mov
pop
mov
or
cmpsl
push
mov
mov
sarb
mov
test
movsb
sub
test
xor
dec
out
aas
xor
mov
or
dec
je
xchg
test
fisubrs
xchg
mov
mov
and
stc
mov
mov
dec
sahf
insb
add
in
ud0
inc
xchg
cmpsb
rclb
push
pop
mov
pop
outsb
push
pop
push
add
loope
xchg
sbb
mov
int
adc
dec
jp
mov
call
loope
push
repz
lcall
fbld
subb
cmp
sub
fcmovnb
mov
lea
pop
push
xchg
in
push
mov
adc
sbb
in
add
or
xor
mov
ret
in
aad
addr16
arpl
lret
jns
lret
jb
dec
inc
popf
fs
mov
ror
addl
lock
mov
out
addr16
dec
push
sbb
cli
pop
out
xchg
test
aaa
outsl
in
outsl
sti
or
xchg
sbb
push
test
cmp
testb
std
lods
int3
cmpsb
mov
cmpsb
xchg
mov
aaa
jg
fmuls
xchg
nop
ficomps
jmp
mov
mov
ss
jo
mov
stos
mov
mov
dec
pop
ja
mov
add
out
popf
cmpsl
divb
fstpl
push
jmp
out
fisubl
pop
fsubs
pop
mov
aas
xchg
notl
mov
sub
sarl
mov
loope
jbe
jmp
pop
push
mov
repz
lahf
gs
jmp
popa
repz
cmp
jp
ja
or
inc
inc
decb
cmp
mov
pop
stc
xor
cltd
icebp
aaa
dec
xorl
cmc
and
hlt
test
sub
pop
sbb
adc
in
loopne
xor
inc
data16
js,pn
jge
mov
jne
test
aad
ret
int
outsb
jge
jge
call
lods
das
call
pop
dec
add
xchg
add
jmp
or
jno
push
mov
pop
xor
push
and
xlat
mov
shrl
mov
push
fs
je
stc
ss
sub
xor
and
jl
addr16
sbb
fdivrs
push
cmp
mov
fs
pop
mov
dec
pop
sbb
cmp
push
bound
mov
cwtl
test
inc
addr16
sti
adc
call
stos
jnp
ljmp
mov
push
mov
cmp
in
add
adc
push
std
mov
jae
xchg
lods
cmpsl
repz
loope
nop
jmp
jmp
hlt
fdivrl
jge
iret
clc
clc
scas
out
and
sti
lahf
ds
add
mov
bound
nop
xor
inc
xor
mov
aas
mov
imul
fistps
ret
repnz
jno
cmc
or
outsb
scas
jo
sbb
hlt
cmp
je
push
push
jnp
shrb
dec
repnz
sbbl
icebp
in
mov
add
push
in
mov
mov
adc
dec
in
sbb
out
decl
jbe
sbb
push
test
pushf
pop
pop
mov
add
add
pop
test
data16
out
adc
mov
mov
filds
scas
mov
mov
jno
clc
adc
sbb
aaa
scas
sarl
lea
outsb
dec
mov
test
jnp
aas
into
adc
mov
imul
jecxz
add
cs
xchg
popf
test
cmp
lahf
push
jmp
lahf
fidivrl
shrl
push
xor
ljmp
out
test
out
popf
mov
cmc
push
cmpsl
xor
ficomps
sub
movsb
and
add
xchg
sbb
add
sub
out
push
add
or
xchg
mov
adc
sbb
lods
sbb
sti
fmull
inc
push
add
jb
pop
jne
mov
out
mov
mov
jecxz
test
rol
pop
cwtl
add
inc
test
int3
repz
xlat
sbb
or
sbb
mov
int
cmp
sub
ret
pop
cs
inc
sub
pop
push
push
pop
push
inc
cmp
and
or
cmp
std
cli
or
arpl
fs
mov
popa
rcll
test
or
outsl
repz
cmp
push
mov
or
jae
mov
pushf
dec
ljmp
mov
cmc
add
sbb
sahf
pop
loopne
inc
shll
test
mov
in
push
sbb
jl
outsb
cmc
daa
pop
lret
mov
pop
into
cli
adc
insl
stos
push
pusha
mov
adc
loope
test
add
pop
mov
xchg
xchg
test
sub
je
or
push
adc
lods
scas
test
xorb
inc
in
pop
popl
out
sbbb
mov
xor
sbb
popf
cmp
inc
xchg
stos
sbb
xor
cmp
dec
test
repz
xor
jnp
and
lods
ja
or
imul
mov
mov
push
dec
sarb
mov
cmc
call
push
push
xlat
sbb
add
addr16
shll
lahf
push
out
or
cwtl
ret
loop
mov
inc
push
pop
mov
loopne
or
mov
mov
add
inc
insl
call
jo
ss
es
mov
mov
and
sub
xor
inc
xchg
push
mov
jb
flds
inc
mov
mov
adc
jmp
sub
or
push
out
xor
mov
cmp
popa
lds
popf
cmpsl
mov
scas
cmp
mov
inc
lea
push
popf
pop
dec
cmc
out
push
subl
enter
dec
ja
out
repnz
pop
cmp
dec
mov
adc
mov
mov
fsub
dec
aas
push
imul
xchg
cs
cmp
movsb
mov
outsl
push
js
movsb
dec
mov
adcb
imul
jmp
push
out
jge
or
outsl
into
mov
mov
mull
cmp
rcrl
cmovge
shl
sub
mov
xchg
ds
test
daa
scas
mov
in
stos
lcall
mov
fidivs
ret
andl
mov
or
xor
pop
movb
cmp
adc
xchg
jmp
insl
lods
fwait
mov
xchg
mov
push
mov
sub
aad
mov
repnz
aam
fsubrs
xchg
loope
lcall
sub
jo
add
outsb
loope
push
test
add
or
mov
push
pop
xchg
lds
push
cmp
lahf
dec
xchg
scas
or
push
test
mov
dec
xor
cmp
test
mov
xchg
lock
lds
xor
in
dec
add
movsb
sub
dec
xor
adc
repz
call
cmp
in
or
sbb
adc
rclb
fldln2
push
pop
iret
mov
mov
mov
push
nop
mul
dec
add
push
rol
cmp
lret
into
iret
nop
out
sub
add
adcl
jp
lcall
fstpl
cmp
mov
cmp
pop
xor
adc
dec
mov
lcall
ja
pop
lods
stos
jge
decl
popf
and
clc
sub
jl
or
imul
cmp
or
inc
mov
test
cmp
popf
cmp
mov
out
inc
mov
cmpsb
push
xor
int3
fmuls
cmp
leave
sub
push
push
in
ljmp
out
sub
pushf
cmp
jle
jo
xor
sbb
rcrl
dec
pop
int
mov
stos
insb
aas
or
adc
xlat
stc
dec
add
out
cs
mov
push
and
lcall
hlt
adc
sbb
or
pop
mov
and
mov
sbb
test
pop
cmpb
and
xor
pop
insb
mov
loopne
push
std
out
push
fdivrl
mov
pusha
sub
cld
pusha
ljmp
ss
repz
stos
sub
mov
xchg
js
mov
loopne
ljmp
mov
fisubl
sbb
add
push
push
int
xor
mov
rclb
fisubrs
sarl
popf
repnz
call
mov
in
push
xchg
cli
movsb
cmovle
imul
comiss
cmp
mov
loopne
jnp
sub
mov
adc
cmpsb
jle
adc
or
aam
ds
sub
fs
imul
leave
daa
inc
xchg
ficomps
loope
lods
outsl
cmc
xor
cmpsb
fnstenv
int3
sbb
sbb
push
adc
mov
mov
fucomip
in
mov
clc
lds
add
pop
mov
xchg
sbb
cmp
sbb
adc
leave
pop
es
test
jp
in
out
mov
adc
jp
mov
cmpps
lcall
mov
sbb
adc
add
dec
dec
mov
adc
dec
cmp
xchg
in
out
or
cli
pop
add
push
add
jnp
xor
cli
inc
shrl
mov
iret
inc
nop
test
daa
dec
int3
clc
cmp
jmp
idivl
push
dec
data16
jmp
mov
popa
jecxz
or
loop
pop
ja
cmp
pop
jge
lock
adc
call
push
mov
push
mov
push
add
cmp
xchg
cltd
xchg
jns
add
aad
pop
sbb
cmp
in
outsb
xchg
lods
mov
lods
push
mov
push
mov
cltd
repnz
push
pop
ret
jmp
cwtl
movsb
mov
jg
jnp
jg
mov
movsb
cmc
mov
xchg
dec
dec
pusha
push
xchg
or
out
pop
lock
jmp
movsl
xchg
mov
fmuls
mov
das
std
sbb
out
jl
sub
xor
dec
ret
jecxz
stc
nop
jno
cs
not
pop
push
pusha
xor
iret
sar
ret
pop
stc
lods
pusha
push
push
pop
push
fmull
packssdw
dec
fnstenv
test
in
mov
or
out
pushf
in
repnz
mov
jb
fdivrp
jp
cmpsb
mov
outsl
rcrb
enter
jo
or
dec
and
cli
movsl
xchg
scas
imul
xchg
ja
push
dec
inc
ss
insl
jbe
xchg
add
fsubr
mov
and
sub
subb
lcall
ja
sub
push
adc
lahf
push
dec
int
stc
addb
std
stos
les
lea
mov
inc
ds
sub
rcrl
adc
mov
pop
shll
adc
xor
mov
lret
sbb
stc
rclb
inc
popl
pusha
loop
aas
dec
cltd
popa
pop
mov
sub
mov
cmpsb
pop
inc
lahf
data16
mov
lahf
push
push
ljmp
test
in
sbb
xor
stos
push
repz
pushf
xchg
ds
mov
jp
fsts
stos
dec
subb
sahf
cli
scas
hlt
mov
dec
dec
cmp
mov
pop
dec
into
xor
pop
sbb
pop
mov
pop
and
xchg
daa
add
xchg
and
cli
push
in
lds
shlb
and
stc
repnz
pop
push
lods
jae
mov
fldl
cmpsl
pop
pop
stos
xchg
fsubs
je
sahf
mov
lcall
popa
popf
mov
adc
std
into
enter
push
arpl
cmp
mul
and
pop
sbb
nop
insb
or
ret
sub
mov
in
inc
add
enter
adc
in
mov
mov
fidivrs
cmp
push
xchg
sbbb
jbe
jecxz
mov
xchg
xchg
cwtl
fmuls
les
in
pop
mov
cli
lret
das
push
ret
int
lret
or
gs
adc
loopne
repnz
xchg
cli
cmpsl
push
inc
cld
xchg
adc
ljmp
xchg
push
mov
pop
xor
jl
xchg
out
and
fwait
inc
data16
lcall
arpl
push
ret
lahf
stos
fnstenv
mov
data16
pop
jl
mov
xor
inc
or
xchg
push
mov
lret
loop
xchg
add
mov
testl
mov
pusha
out
adc
push
mov
jg
sub
and
invd
lods
xor
sbb
subl
aad
dec
push
ret
jmp
push
das
sub
sti
daa
lods
aad
jmp
je
test
xchg
js
lods
fucomi
fdivl
enter
dec
inc
cwtl
jl
mov
or
jno
lret
or
cmp
std
adc
add
sub
pusha
push
jbe
cmpsb
or
mov
inc
cmp
movsl
mov
pop
cmc
and
inc
test
push
mov
scas
push
mov
mov
dec
jo
sbb
call
je
out
cli
ss
ss
add
insb
or
xchg
add
add
fidivrs
cs
cmovae
js,pn
aaa
js
shlb
push
ficompl
lods
rcll
and
js
mov
push
push
fbstp
call
imul
cmc
ret
jl
jecxz
xor
loopne
pop
mov
or
or
into
cmc
jbe
fsubl
mov
jb
dec
ret
or
fstl
fnsave
pop
cmpsl
pop
aam
scas
sub
and
push
inc
inc
mov
rol
cs
lock
icebp
adc
xor
clc
sbb
imul
mov
sahf
mov
jns
ret
mov
hlt
loopne
adc
mov
popa
arpl
inc
push
mov
out
push
arpl
adc
jmp
das
cmp
jmp
insl
jecxz
and
mov
xchg
inc
pop
in
adc
xchg
mov
adc
aas
mov
sbb
int3
xchg
push
fbstp
dec
shr
jle
loope
adc
aam
or
xchg
lahf
mov
mov
stos
test
mov
dec
popf
pop
stos
dec
punpcklwd
push
add
int3
xchg
sbb
push
cmp
cmp
cmp
push
mov
pop
test
mov
adc
lret
les
pop
stos
scas
je
sbb
clc
sbb
jbe
stc
xor
arpl
repnz
pop
cs
loopne
adcb
std
xchg
fxch
sub
mov
push
pop
mov
adc
daa
inc
sub
xor
push
push
or
shlb
adc
adc
lret
and
cmpsb
inc
cmp
or
popa
sahf
push
jl
dec
leave
mov
je
daa
sub
in
sbb
inc
in
mov
push
out
stc
add
cs
dec
cmp
pop
je
sbbl
mov
je
imul
insb
stos
fnstcw
lods
push
inc
test
fstpl
cmp
inc
sbb
out
fnsave
data16
in
mov
cltd
pop
mov
pop
rcrl
pop
jecxz
jne
test
aas
pop
xor
aas
adc
stos
sbb
mov
dec
pop
aam
cmpsl
mov
pop
pop
cwtl
pushl
xchg
outsl
jns
mov
dec
pusha
and
sahf
jecxz
xchg
into
sahf
xor
adc
lahf
mov
addb
rcrl
shll
or
sbb
je
das
xor
mov
iret
jns
incb
clc
dec
sti
sbb
into
mov
xchg
rolb
insb
jo
cmpsl
xchg
sub
sub
sahf
jle
repz
pop
nop
jns
and
pop
int3
dec
out
sub
cmp
xor
ss
push
test
aaa
pop
call
inc
push
cs
pop
pushf
test
daa
scas
jae
inc
or
sbb
sub
fidivrs
es
and
in
mov
push
push
icebp
pop
addr16
lret
push
or
mov
or
pop
ficompl
sub
xchg
inc
clc
enter
pop
inc
xor
lcall
test
jbe
mov
and
repz
mov
sbb
sbbb
loope
sahf
mov
pushl
and
insb
mov
ret
aam
rcrb
push
jb
xchg
xor
push
inc
cmp
mov
adc
jl
cmp
xchg
push
jg
mov
sub
pop
sub
jg
pop
sub
pop
and
sbb
das
scas
push
loope
sbb
mov
loopne
xor
out
push
cmp
pushf
mov
jle
xchg
scas
dec
pop
loop
mov
and
pusha
iret
cmp
push
jecxz
in
xor
sahf
ret
adc
adc
sbb
xchg
inc
enter
aas
xchg
lea
fcoms
xchg
sub
notb
lret
pushf
push
gs
mov
mov
pop
xchg
add
scas
icebp
lret
jmp
mov
arpl
out
push
mov
sub
cli
sub
dec
inc
arpl
stos
dec
aad
push
aaa
mov
outsl
ja
mov
fs
insb
inc
in
test
jecxz
cmp
adc
sbb
mov
push
pop
jo
xchg
dec
mov
jbe
mov
push
jnp
into
ja
out
jp
xor
out
cli
jb
pop
stc
popf
fldenv
inc
xor
mov
fistpl
cltd
scas
dec
out
push
and
push
xchg
xchg
popa
test
lahf
and
mov
mov
lret
dec
cmp
cmc
fsubrs
sbb
cmpsl
or
dec
loopne
ret
jb
pop
leavew
pop
ss
out
xor
fiaddl
leave
push
dec
sub
xlat
out
add
movsl
subl
adcb
inc
out
mov
push
xchg
jbe
sbb
ja
dec
mov
inc
and
cmp
mov
jle
pop
mov
cmp
xorl
imul
add
dec
or
pushf
xchg
lahf
jo
jl
push
movsb
and
sbb
js
mov
rolb
cwtl
mov
or
xchg
inc
fstpl
scas
rcrl
aas
fnstcw
jne
xchg
dec
sub
fiaddl
add
sbb
xchg
push
loope
push
int
sub
clc
xchg
js
push
and
mov
insl
ret
int3
cld
push
nop
inc
test
aaa
adc
push
mov
inc
lcall
xchg
mov
sbb
rcl
add
sub
jns
shll
xchg
push
cli
jp
mov
mov
les
cmp
pop
movl
je
mov
mov
lret
rcl
lcall
sbb
xor
pusha
mov
mov
inc
mov
inc
insl
push
movsb
loope
fldcw
pop
cli
aam
mov
xchg
movsl
aaa
sub
call
adc
mov
dec
mov
cmp
jg
or
sar
data16
xchg
mov
xchg
rorb
pop
mov
or
push
mov
mov
sbb
cltd
adc
xor
idiv
xchg
rorb
xchg
ja
aam
lock
ror
lods
inc
gs
call
xor
adc
fwait
push
and
xchg
cld
inc
or
mov
xchg
lea
sub
pop
jl
pop
out
xchg
inc
data16
dec
test
push
das
test
jns
pop
mov
movsb
hlt
xchg
jnp
jno
sbb
add
lcall
xorl
mov
ds
imul
mov
pop
subb
in
addr16
xchg
in
push
lahf
sbb
in
cld
mov
pop
mov
aas
jg
in
xor
mov
cmp
or
jle
or
je
fistps
fiadds
mov
in
cmp
push
push
sbb
mov
inc
shll
mov
mov
or
sub
lret
aad
iret
lods
sbb
pop
flds
jge
inc
push
pop
xchg
loope
mov
adc
and
and
pop
mov
js
popf
mov
sbb
and
or
outsb
add
inc
cmp
mov
pop
inc
adc
test
mov
ljmp
aad
cmp
pop
stos
lock
scas
sub
xchg
fldl
shl
inc
aaa
icebp
pop
mov
jle
sbb
lods
ds
das
jo
adc
and
aad
sub
mov
in
clc
in
xor
jl
mov
xor
mov
clc
dec
ja
rclb
cmp
dec
dec
jle
outsl
mov
pop
mov
jno
icebp
fcom
movsl
push
mov
dec
inc
movsl
lods
ret
mov
or
iret
push
mov
push
out
pop
mov
dec
popa
call
ja
xor
xor
xor
call
sub
mov
xor
add
xchg
stc
dec
cltd
jle
push
and
lret
add
add
jnp
in
addr16
and
aas
jno
xchg
fimull
shll
xchg
pop
pop
cmpsl
sti
dec
int
enter
jp
ja
sbb
or
xor
dec
fnstcw
lcall
mov
mul
dec
inc
push
aam
xor
or
aad
xchg
xchg
cmp
mov
pop
add
mov
lock
decb
enter
popa
out
in
lret
mov
adc
jae
mov
sub
xor
popa
in
adc
lods
dec
jp
aam
dec
cs
jle
push
push
cmp
xchg
movsl
in
cltd
mov
cmp
sbb
ja
outsl
loopne
mov
loop
fs
and
pop
loop
les
xchg
mov
cmp
cli
mov
xor
mov
scas
mov
in
adc
popf
mov
and
ret
jl
js
fadds
mov
stos
cltd
add
mov
in
stc
push
mov
mov
decb
jo
insl
or
mov
call
sub
orb
xchg
popf
mov
cmp
xor
repnz
ljmp
jae
in
aad
jae
push
mov
lret
inc
xor
sub
push
aas
fs
pop
xor
push
xchg
xchg
lahf
mov
jle
inc
mov
popl
and
aad
jnp
push
push
int
sub
in
jns
lret
sti
inc
dec
mov
dec
cmp
loop
insl
inc
in
jno,pt
pop
or
jns
lret
xor
popf
push
sbb
sahf
pop
mov
inc
pop
gs
lods
mov
mov
imul
testl
pop
stos
das
imul
dec
jmp
outsl
cmp
push
sub
mov
mov
outsb
cmpsl
inc
sbb
inc
xchg
sbb
cmp
dec
es
imull
int
jns
jae
push
fdivl
sti
imul
push
nop
loope
adc
les
lcall
rorl
xchg
lret
adc
mov
repnz
test
fiadds
cmp
repz
push
sbbl
jmp
inc
movsl
xlat
pop
xchg
fwait
cmp
jae
dec
add
je
sbb
rcll
das
aam
outsl
imul
dec
mov
ss
aam
es
lods
mov
or
or
dec
jbe
mov
and
rolb
mov
add
xor
xor
xchg
mov
ja
and
popa
flds
outsb
rol
inc
cmpsl
mov
xchg
inc
push
dec
mov
loop
xchg
loop
sub
pop
test
dec
fildl
in
jbe
cmp
push
es
mov
dec
push
and
mov
stos
sbb
push
cmc
xchg
mov
pop
mov
subl
shll
adc
movsb
dec
xor
insl
movsb
or
stos
sub
or
inc
push
imull
push
stos
sbb
cld
fsubr
in
mov
mov
xchg
jl
xchg
jnp
lahf
inc
jno
push
cmp
mov
sub
and
jle
mov
push
and
pop
arpl
in
dec
nop
sbbl
xchg
arpl
adc
jle
push
push
mov
std
mov
pop
and
fcmovne
mov
mov
in
arpl
lods
ss
sub
gs
mov
sbb
ja
xchg
dec
xor
shlb
and
and
int
sbb
pop
xchg
push
ja
imull
xchg
push
repz
and
rcrl
fadd
jp
sbb
out
cmp
in
sub
mov
in
in
imull
ror
mov
add
mov
into
lret
fcompl
sbb
std
jb
orb
bound
lds
movsb
cmpsl
ret
dec
xchg
jne
mov
lret
mov
jnp
lods
pop
outsb
nop
xchg
pop
std
or
fisttpl
lret
ljmp
xchg
insb
pop
andl
or
push
lcall
int
or
icebp
mov
int3
adc
int3
cmp
dec
inc
push
clc
ret
imul
test
fldenv
sahf
cmp
add
push
movsl
fs
lret
daa
mov
jp
outsl
adc
adc
xor
repnz
cli
sbb
add
add
lds
cmp
sarb
push
cmc
jae
sub
fwait
lcall
sbb
sarb
aad
pop
jns
sarl
sub
xchg
test
mov
js
add
dec
ss
jmp
xor
push
jl
movsb
or
sub
jg
into
cmp
js
dec
repz
or
out
mov
jo
or
repz
arpl
xchg
and
lahf
lods
fstl
daa
xor
push
inc
movsb
cmp
aaa
dec
aaa
aad
or
cmc
push
in
cmp
int
mov
lds
dec
daa
nop
popa
push
jne
push
call
adc
mov
inc
out
movsl
fwait
inc
sbb
xor
dec
pop
fsubrp
mov
jp
into
mov
sbb
sub
rclb
pushf
mov
popf
data16
inc
loop
pop
jecxz
les
lock
xchg
mov
imul
ret
addr16
scas
xchg
outsb
sub
movsl
je
ret
mov
rol
jns
ss
stos
or
sub
ja
adcl
adc
mov
popa
mov
xchg
sbb
pop
push
mov
xchg
mov
ds
enter
leave
ljmp
lds
mov
mov
cmp
mov
js
xor
fsubs
sbb
insl
push
push
movsb
ss
push
stc
std
sub
mov
popa
sub
push
jle
sbb
pop
jle
mov
ss
sub
outsb
pop
sbb
adc
inc
imulb
aad
push
es
jb
lahf
cmpsl
xchg
jo
sbb
ss
push
xor
outsl
dec
imul
fnsave
pop
leave
aas
movsl
std
out
pop
movsl
jb
jae
ror
cmpsl
incb
inc
dec
mov
xchg
push
dec
fimull
fcompl
sbb
out
sub
adcb
mov
enter
in
aad
sub
es
in
and
xlat
add
ss
xchg
or
mov
or
sbb
sbb
xchg
push
js
sub
repnz
clc
pop
call
nop
jno
mov
fnstcw
jo
cwtl
in
fmuls
inc
sarb
xchg
into
mov
ds
jle
arpl
push
daa
rorb
pop
push
cmp
testl
lahf
adc
jae
dec
xlat
mov
or
dec
xor
sub
or
hlt
xchg
xor
loope
and
ljmp
inc
inc
repnz
movsl
fistpll
jo
mov
aam
adc
inc
sub
fstps
lods
ror
sbb
cmpsl
prefetch
shrb
jle
movsb
movsl
int
rclb
push
test
jno
sahf
rorb
mov
sub
std
xor
xchg
icebp
ret
arpl
xchg
andl
insl
xchg
shlb
fistps
inc
sub
and
insl
and
fwait
mov
ljmp
ss
sub
or
mov
shll
dec
jecxz
or
pop
sub
jecxz
jbe
dec
in
jo
js
imul
std
mov
lds
in
jle
cmp
cmpb
mov
jmp
fidivl
inc
or
rolb
or
inc
cmp
jmp
or
mov
xchg
mov
push
in
scas
mov
jmp
adc
aam
ds
cltd
mov
xor
fnstsw
dec
sub
add
test
out
aam
and
cmp
add
aas
in
jbe
cmp
test
pushf
push
and
outsb
xor
xor
mov
mov
add
nop
test
jge
leave
inc
bound
sbb
xchg
aad
fwait
inc
jae
push
inc
fcmovb
popa
out
adc
xchg
repz
sbb
je
dec
pop
push
mul
mov
push
mov
mov
lods
dec
scas
jne
mov
xchg
test
mov
stos
or
shlb
add
or
rclb
pop
mov
cltd
adc
cmpb
pop
cmp
sub
xor
dec
dec
mov
xchg
cmp
xor
ret
outsl
lds
jb
lret
pop
push
dec
xchg
dec
movsb
out
hlt
cld
sub
and
xchg
xor
push
sub
jmp
mov
mov
gs
cltd
fidivs
pop
rcll
xchg
inc
cltd
ja
fsubrp
sub
jg
repz
dec
dec
sbb
scas
xorl
xor
and
mov
pop
aas
cwtl
and
ret
mov
mov
sbb
and
repz
push
or
in
fbstp
std
or
pop
mov
push
jle
gs
addb
xchg
cltd
scas
test
add
stc
leave
fs
lds
sub
aaa
dec
js
inc
loop
mov
clc
add
cwtl
hlt
cwtl
push
js
mov
rorb
cmpsl
mov
inc
cmp
pop
shrl
push
mov
mov
imul
add
fiadds
jne
dec
aad
push
xchg
mov
add
js
in
nop
mov
and
and
and
push
negl
mov
movsb
sub
pushf
add
bound
xor
movswl
ret
inc
mov
adc
adc
add
scas
lods
xor
jp
mov
jl
shrb
fs
fwait
pop
pop
ror
outsl
push
ljmp
ret
push
fs
lock
and
movsl
push
orl
jne
cli
inc
jb
nop
and
push
push
aad
imul
mov
pop
fstpl
lods
les
mov
xor
xchg
sbb
std
adc
cmp
mov
sahf
mov
xchg
mov
hlt
add
inc
cmpsl
mov
mov
fbld
push
decb
cmc
out
out
mov
mov
pop
cld
addr16
cmp
shll
mov
fdiv
sub
fwait
mov
mov
pop
jle
and
test
xlat
dec
xrelease
lock
cli
fidivrl
xchg
test
push
pop
and
iret
xchg
xor
or
pop
mov
lret
sub
sub
fiaddl
mov
xchg
icebp
mov
fcoml
les
push
pop
fmull
fwait
cmp
inc
fldenv
sbb
pop
decl
outsb
loope
sub
xchg
cmp
pop
cmpsl
sub
rcrl
push
jp
pop
repz
jecxz
outsb
dec
sub
popf
cs
lods
xor
shl
mov
cmc
mov
mov
cmp
adc
pop
mov
ret
scas
jge
mov
add
pop
xor
fwait
popf
cwtl
cwtl
insb
cld
or
dec
mov
jmp
stos
push
hlt
jecxz,pt
cmp
iret
pop
jg
xchg
mov
pusha
mov
or
push
mov
sub
nopl
pop
push
syscall
push
mov
or
lea
test
stos
push
pop
clc
jnp
lret
jbe
call
xchg
mov
insb
stos
push
lods
jne
mov
xor
or
outsb
enter
je
add
or
in
sarb
int3
mov
test
cmp
lods
sbb
push
aam
repz
int
ja
pushf
push
jl
loop
or
cmp
xor
out
sub
jo
push
outsl
cltd
cmp
sub
mov
mov
ja
ljmp
inc
pusha
outsb
loop
mov
jnp
xchg
inc
xlat
adc
lods
in
repnz
jno
mov
outsb
scas
outsl
dec
mov
sbb
xchg
lds
jae
xchg
or
or
add
jl
sub
mov
inc
mov
imul
in
mov
cmp
and
jecxz
test
mov
mov
add
repz
sahf
dec
jns
out
or
aam
test
inc
inc
mov
add
jge
jmp
and
xorl
pop
in
adc
cmp
icebp
les
cmpsb
push
rcll
popa
loop
daa
cmp
push
repnz
test
ret
sub
fld
cmpsb
inc
jp
ss
and
or
and
into
mov
or
mov
cmp
scas
add
scas
jno
cli
mov
or
pop
fcomi
cltd
fdivr
sub
xor
pop
mov
sti
dec
insl
pop
cltd
movsb
test
mov
adc
pop
jns
iret
cs
xor
jge
mov
push
push
insl
fistpll
and
adc
pop
outsl
mov
inc
mov
insl
sbb
test
lahf
lahf
add
scas
out
or
das
xor
push
lods
cmp
cmp
inc
lods
mov
xchg
ljmp
xchg
pop
sub
inc
xchg
xchg
inc
addr16
cli
pop
mov
mov
xchg
int
dec
outsb
insb
out
inc
add
push
loope
add
add
in
mov
rcll
iret
sbb
or
adc
stos
xor
mov
mov
and
mov
push
sub
push
andl
jb
jno
cltd
loop
test
bound
mov
rclb
das
pop
pause
inc
jge
dec
xchg
enter
out
into
iret
sahf
test
stc
add
insl
icebp
dec
push
adc
sub
sbb
mov
fistpl
and
scas
sub
or
sub
insb
rcr
cmp
pushf
orb
pushl
xchg
pop
js
fdivr
xchg
push
jg
inc
out
mov
lret
cs
or
sarl
and
cmpsb
and
movsl
sbb
scas
rolb
lret
fbstp
pop
dec
loopne
lcall
adc
in
aaa
mov
dec
bnd
outsl
pop
fwait
jp
test
movsb
add
add
jmp
test
jge
dec
push
cmpxchg
in
hlt
lcall
jecxz
sarb
jge
ret
les
rcrl
out
mov
imul
aam
mov
dec
mov
cmp
iret
and
or
pop
int
and
push
xchg
adc
mov
or
unpckhps
cmpsl
push
aaa
pop
mov
shll
pop
pop
shll
mov
push
sbb
sub
adc
cmc
lods
pop
in
xchg
or
dec
xlat
addr16
popa
out
mov
stc
imul
int3
dec
jl
and
xchg
mov
shll
dec
cmp
and
incb
out
out
sarl
xchg
xchg
add
rclb
sub
mov
jl
popa
nop
pop
in
aad
or
mov
mov
pop
xchg
fmuls
fdivrs
xor
mov
xchg
clc
push
and
rcl
mov
fadds
xorb
aas
push
push
dec
mov
repnz
in
sahf
negb
mov
fnstsw
lea
cmpsl
cmpsl
dec
dec
loopne
xchg
gs
inc
or
in
in
lds
pop
insl
adc
es
mov
dec
pushf
aad
stc
push
inc
push
sbb
dec
cli
sbb
sbb
adc
lods
in
imul
inc
pop
ret
inc
add
push
mov
lock
out
shlb
test
push
in
insb
imul
mov
aaa
sub
fmuls
cmp
imul
sub
ljmp
mov
popa
mov
jnp
pop
cs
daa
dec
sub
cmc
pop
leave
cmp
jle
cmp
lds
or
fimuls
out
mov
clc
sahf
popa
dec
jl
xchg
mov
movsb
lods
fidivl
xor
pop
cli
lahf
lret
enter
je
push
add
add
pusha
dec
pop
rcr
pop
imull
icebp
repz
cmp
sbb
popa
roll
popf
dec
jg
mov
int
outsl
add
jae
insl
pop
icebp
dec
ret
inc
out
in
insb
lods
xchg
jl
lcall
push
hlt
inc
or
adc
cld
inc
ja
inc
push
jbe
dec
and
clc
mov
mov
xchg
lds
outsl
pop
sbb
xchg
testl
pop
test
push
jb
lcall
mov
aad
push
xlat
repnz
inc
push
shrl
pop
pushf
mov
nop
push
shll
push
ljmp
lods
cld
into
fistpl
lret
jecxz
push
cmpsb
xor
xor
jo
and
dec
push
mov
std
dec
xchg
jmp
jne
stc
xchg
jb
add
outsb
or
mov
inc
out
int3
fs
sbb
mov
and
hlt
insl
lods
sbb
xchg
mov
repz
cmp
decb
ja
sar
mov
jb
scas
adc
call
test
jo
rcrl
loopne
or
ret
push
ds
call
fsubl
fwait
dec
movsl
sbb
sbb
fmull
lahf
pop
sub
iret
fisubs
xor
inc
cld
sahf
mov
jge
add
sarb
sub
mov
pop
les
sub
sbb
jecxz
mov
rol
nop
fmull
or
and
xlat
adc
mov
adc
cmp
je
mov
or
mulb
stos
push
adc
sub
jmp
mov
add
hlt
into
outsb
popf
sbb
insl
or
popf
insb
into
mov
dec
mov
lea
mov
adc
mov
gs
cmp
xchg
mov
inc
jge
jbe
dec
dec
xlat
fwait
jle
jne
or
jmp
push
add
fmuls
fiadds
leave
leave
mov
xlat
sub
add
jmp
xchg
bnd
addb
xchg
popa
push
jecxz
dec
lock
mov
mov
shl
sbb
loop
insl
aam
pop
movsl
mov
push
xchg
js
cmpsb
push
dec
in
xchg
stos
iret
dec
jg
mov
fldenv
xorb
in
mov
test
mov
mov
ret
push
out
adcl
add
shll
cmp
cmp
add
addr16
addl
out
test
xlat
cmp
gs
push
lods
mov
xchg
pushf
inc
add
and
add
fcomps
add
adcl
ret
dec
lods
inc
mov
xchg
push
rorl
cmp
call
in
dec
and
out
mov
ds
daa
mov
and
mov
push
sbb
stos
push
insb
mov
adc
mov
push
lea
cmp
cmp
sub
and
imul
push
pop
in
movsl
xchg
or
push
push
mov
add
nop
pop
xchg
jp
cmpsb
sar
loopne
inc
xchg
gs
ja
push
xchg
movsl
jge
cli
dec
mov
lods
ljmp
mov
movsb
into
push
push
inc
loopne
lods
enter
fsubp
outsb
lods
fsubr
setb
in
movsb
scas
out
aas
lods
in
je
pop
xor
pop
bound
mov
movsl
push
cmp
popa
mov
ret
test
test
stos
mov
out
xor
imul
aaa
jns
andl
pushf
pop
imulb
mov
jae
lcall
mov
repnz
sub
call
adc
add
cs
cmpsb
insb
or
pop
imul
sub
xchg
xor
sarl
test
aas
or
pop
les
sub
mov
aad
xchg
orb
and
icebp
inc
dec
aas
stos
cmpsb
jg
insb
lret
fstl
mov
sbb
ds
popa
cmp
inc
mov
mov
js
pop
sub
xchg
jge
dec
stos
sarb
jge
les
into
icebp
adc
pushf
outsl
loopne
pop
sbb
popa
and
out
into
cmp
dec
popf
push
imul
push
aad
or
xor
outsl
cmpl
mov
scas
mov
push
daa
clc
cmpsb
mov
xor
or
cmp
bsf
gs
out
mov
xor
clc
sub
rdpmc
jno
pop
mov
cmp
movsl
pop
pop
sbb
cmp
pop
jmp
push
mov
das
idivl
arpl
bound
test
jge
fidivrs
inc
pop
push
adc
shll
jecxz
out
sahf
add
and
into
pop
mov
adc
pop
lods
inc
pop
or
jo
sub
mov
lahf
mov
push
mov
jne
sbb
xor
imul
push
cmp
movsb
jno
jo
cmc
mov
bound
cmpl
aam
das
nop
push
and
popf
cmp
or
add
adc
insb
mov
dec
lds
out
pushf
ficompl
std
aam
movsb
rcll
and
clc
icebp
adc
cmpsb
ds
movsl
ret
adc
sub
dec
mov
std
popa
outsl
cmp
outsl
mov
test
inc
scas
inc
in
push
jo
mov
test
xchg
mov
fisttpl
faddl
scas
clc
loope
les
stc
sahf
imul
in
shlb
jne
lock
xchg
in
icebp
jl
ficoml
std
in
mov
lods
lds
mov
arpl
mov
addl
mov
mov
sti
pop
lahf
xor
movsl
aas
inc
cltd
mov
cmp
sbb
mov
test
inc
icebp
push
cmc
cmp
adc
and
jg
sub
adc
in
xor
loop
push
mov
xor
jl
or
mov
mov
xchg
out
sub
inc
in
sub
pop
lahf
gs
movsb
jno
lret
mov
cwtl
or
lret
inc
movsb
pop
out
cld
pop
daa
jmp
stos
stos
dec
dec
fstpl
pop
push
jmp
adc
push
cmp
imul
iret
inc
popa
xor
bsf
mov
bound
mov
adc
mov
addr16
test
std
add
xor
roll
push
xor
push
jns
enter
inc
xor
ljmp
push
or
and
daa
test
pushf
out
stos
dec
scas
pusha
pop
mov
es
repnz
lods
sti
test
push
xchg
sub
adc
loopne
sbb
outsb
pop
and
cmp
shl
ss
int
lret
xchg
add
fnstenv
repz
int3
push
add
testb
pop
cmp
xor
stos
and
xor
das
inc
ret
jne
mov
mov
mov
out
out
mov
inc
add
and
cmp
dec
and
cmpsb
lret
mov
ds
nop
fiadds
sbbl
rcrb
push
inc
cld
push
and
jns
lods
adc
stos
aaa
lret
xlat
cmpsb
loopne
pop
mov
jge,pt
mov
adc
cmpsl
movsl
imul
das
adc
adc
xorb
iret
mov
mov
out
mov
xor
arpl
xchg
sbb
out
or
sbb
aad
push
movsb
aaa
pop
jns
mov
mov
popf
imul
jmp
ja
lods
bound
push
jbe
sbb
and
cmc
jae
int
xchg
mov
pop
sub
pop
or
pop
add
mov
sub
dec
aad
fdivs
ror
aad
push
mov
xor
rcrb
and
dec
xchg
or
adc
inc
test
cs
je
xchg
fldl
pop
or
jle
dec
dec
mov
lods
imul
mov
arpl
sub
pop
sub
add
push
cmp
ret
xchg
popa
lahf
add
push
mov
outsl
arpl
mov
push
xchg
cmc
es
pushf
adc
movlps
rclb
call
ret
pop
inc
push
stc
adc
mov
inc
jg
popa
out
and
cmp
ss
cmpsb
iret
loopne
ret
mov
cmp
fwait
adc
test
jmp
inc
ss
xor
sbb
add
or
stc
and
js
daa
imul
xor
dec
xchg
shr
push
out
shlb
ret
lahf
or
fcoml
and
cli
add
movsl
imul
xor
sahf
js
cmpsl
cld
or
add
and
repz
idivl
scas
pop
jmp
mov
cmc
mov
jbe
idivb
das
jno
ljmp
loopne
enter
inc
pop
jle
push
xor
mov
mov
xor
mov
movsb
sub
ds
fcmovnb
lds
adcl
insb
shl
inc
sub
push
inc
mov
pop
pushl
xor
cmp
outsl
insl
adc
pop
mov
shrl
inc
outsb
or
pushf
inc
or
outsl
lods
push
fnstsw
cmp
xchg
xlat
xchg
daa
mov
mov
cmp
add
movsb
out
ja
cmp
mov
adc
ret
push
icebp
mov
pusha
test
lret
mov
call
movsl
out
dec
lods
fs
fisttps
stc
pop
and
sbb
sbb
or
jg
pop
cmpsb
xchg
lea
cmc
mov
fnsave
mov
pop
ja
dec
push
mov
push
stos
add
sub
or
sbb
and
fisubrs
sub
xlat
pop
inc
jnp
mov
aad
idivb
xor
movsl
jmp
pushf
ja
pop
jmp
or
in
and
ja
or
cmc
repz
mov
push
jo
stos
xchg
mov
pop
mov
mov
pop
insb
adc
pusha
mov
fisubl
mov
xchg
cs
dec
loope
mov
fdivr
pushf
jb
and
sub
lret
cmp
pop
sbb
fcmovnbe
jle
or
mov
aad
popa
mov
xchg
lahf
cltd
jle
push
dec
pop
push
jbe
add
mov
pusha
add
sahf
push
cmp
faddp
xchg
jno
mov
inc
daa
scas
mov
dec
mov
cmpsb
vmovups
push
xchg
int
ja
lods
add
and
inc
lret
lds
enter
cs
repnz
enter
jno
jmp
pop
jns
dec
push
jecxz
fnstenv
mov
ds
cmpsl
inc
xchg
add
jl
pop
rclb
dec
xlat
xchg
cs
out
clc
sub
push
sti
fcoms
pop
fwait
inc
mov
movups
pop
push
sub
mov
xchg
mov
or
outsb
sub
test
dec
mov
sub
stc
daa
xchg
mov
mov
xor
inc
pusha
push
repnz
jns
add
sub
pop
out
xor
cli
cmpsb
cmc
in
inc
inc
cld
loopne
jo
sbb
and
scas
iret
ss
dec
lahf
sahf
or
xor
jbe
adc
pop
sbb
dec
pop
fistpll
mov
roll
dec
test
adc
jae
aaa
outsl
inc
xchg
inc
aad
mov
mov
xchg
adc
out
xor
lock
ret
scas
mov
dec
fldcw
adcl
sbb
push
push
into
loope
orl
inc
bound
lods
xlat
jl
in
dec
scas
push
push
sbb
dec
push
cs
aad
test
test
test
xchg
inc
ss
out
iret
lods
rcrb
or
dec
mov
es
fdivrp
push
or
fs
outsl
sbb
dec
lock
clc
rcr
push
push
psrlq
scas
bound
aam
jmp
or
dec
dec
mov
out
sbb
cmp
inc
pop
cmp
mov
pop
adc
clc
fcomip
cli
sbb
inc
inc
jo
inc
fstps
mov
ret
fisubs
arpl
and
shlb
xor
lahf
push
mov
cli
sbb
or
cmp
inc
pop
push
rcr
inc
push
outsb
lret
mov
inc
das
pushf
addl
movsl
mov
push
mov
sbb
cld
cmpsl
jecxz
sbb
fisubs
std
das
cmp
mov
fadds
mov
mov
add
mov
or
pop
push
xor
scas
in
cs
mov
in
rclb
and
mov
xchg
cmp
mov
scas
fwait
movsl
add
mov
out
mov
bound
fcomps
jmp
inc
mov
jae
push
jns
cli
shll
sub
jecxz
jbe
and
dec
add
dec
add
cwtl
dec
pop
arpl
mov
dec
test
sbbl
inc
enter
or
jne
or
iret
arpl
aam
cmp
mov
ret
adc
cmp
rolb
mov
jb
ja
add
clc
fs
js
dec
notb
push
dec
mov
sub
xchg
add
dec
fildll
push
push
mov
mov
imul
and
stos
lods
jbe
out
and
loope
push
imul
push
insb
adcl
add
mov
in
mov
or
or
fwait
daa
mov
pop
jae
xor
movsl
aaa
xor
mov
ret
jg
mov
repz
pop
cwtl
mov
dec
sub
and
imul
int
xchg
out
in
xchg
pop
shr
push
stos
or
dec
jmp
iret
in
push
test
fstp
ljmp
icebp
inc
cmp
mov
mov
inc
add
pop
jmp
in
jnp
aas
mov
enter
aas
in
adc
mov
pop
scas
jg
push
cmp
pop
inc
xor
rol
sub
cmovle
mov
pop
sbbb
loopne
jno
inc
mov
dec
cltd
mov
aaa
pusha
shll
add
inc
test
mov
pop
sub
mov
notb
mov
mov
sbb
or
into
cwtl
and
push
and
mov
aas
leave
mov
fmull
aaa
cmp
mov
dec
xor
mov
xor
lods
add
inc
lret
or
add
ret
lea
imul
into
pop
adc
call
xor
fs
call
sbb
movsb
inc
cwtl
stos
les
push
std
enter
sarb
pop
xchg
sub
jb
adc
adc
xchg
pop
inc
xor
aad
and
lods
xchg
aaa
cltd
mov
sbb
inc
andb
add
js
push
cmp
adc
stos
jae
mov
adc
stos
outsb
lahf
sbb
inc
div
lods
ja
in
mov
call
jb,pt
push
dec
push
add
shrl
std
push
ljmp
fstpt
cmc
mov
cmp
mov
lds
mov
in
add
push
mov
out
aad
insb
repnz
cmc
mov
andb
mov
sub
enter
dec
push
sub
inc
mov
ljmp
popl
jbe
sub
pop
push
jae
movsl
xchg
push
mov
cmp
popf
sub
imul
ss
push
fdiv
mov
mov
sub
jecxz
rep
int3
xor
mov
subl
or
lods
push
jno
ljmp
or
and
push
cltd
enter
into
cmp
mov
and
sti
dec
loop
jle
mov
xchg
sbb
sub
ds
pop
add
insb
movsl
cmpsl
lret
imul
icebp
je
test
gs
mov
sub
test
pop
stos
sbb
jecxz
xchg
cmp
dec
or
test
in
rorb
push
lcall
rclb
add
jle
inc
mov
gs
jg
pop
fwait
lds
mov
and
add
xor
mov
push
imul
sbb
dec
pusha
xchg
rcrl
cmp
adcl
bound
pop
sbb
pop
add
xchg
sub
ljmp
lods
repnz
or
into
repz
inc
sti
leave
insl
xchg
and
lods
pop
pop
jl
jl
xchg
jb
xchg
arpl
sub
fistpll
jle
pop
jmp
out
pushl
and
lret
sbb
stc
mov
dec
xchg
and
and
lahf
sbb
or
inc
dec
movaps
pop
push
aas
pop
aaa
inc
push
jns
andb
cmp
add
and
or
mov
sub
and
push
cmp
jle
pop
and
jmp
cwtl
add
call
sub
mov
cmp
mov
xchg
jmp
scas
mov
stc
inc
cmp
out
add
push
push
xor
in
mov
mov
cld
mov
aaa
push
push
mov
inc
jns
loopne
fidivrs
mov
lods
dec
call
xchg
sbb
rclb
mov
pop
outsl
pusha
sbb
push
stc
xchg
mov
in
mov
bound
xor
xor
leave
and
repnz
cmp
push
jns
xchg
popa
movsb
clc
and
cmp
jo
jbe
fcmovbe
mov
out
repz
jo
sbb
shr
xchg
xchg
jmp
adc
flds
xchg
popf
mov
adc
push
push
inc
loope
mov
and
sbb
gs
dec
inc
outsb
loop
es
xor
mov
dec
into
dec
int3
fnsave
int3
jnp
fdivl
mov
movsl
adc
or
xor
mov
lds
dec
xchg
cmp
icebp
or
add
cmpsb
lahf
and
push
std
subl
inc
xor
mov
adc
sub
test
sbbl
mov
xchg
sub
push
adc
xorl
imul
loop
xchg
mov
jbe
push
testb
ds
xorb
inc
or
adc
mov
dec
mov
mov
mov
mov
dec
dec
rol
cwtl
aad
insb
sub
ja
gs
aas
call
and
xor
lock
sbb
fstp
ja
jmp
fistps
mov
sbb
out
popf
mov
and
test
pop
sti
jae
jg
sub
into
mov
and
lea
ret
ja
ss
pop
pop
ja
call
popa
iret
mov
out
lods
jge
pop
dec
shl
imull
aad
and
and
mov
cmp
jle
in
outsl
and
out
jmp
mov
les
loope
cmp
mov
insb
decl
out
mov
out
sub
ror
pop
inc
jo
addb
movsb
ljmp
and
std
or
and
jle
and
push
inc
xchg
pop
mov
jl
sbb
mov
xchg
cmp
es
int
imul
xchg
jge
or
mov
mov
mov
and
call
mov
push
call
pop
add
out
fnstsw
stc
inc
or
push
jmp
and
daa
cmp
cmp
mov
mov
cmpsl
xchg
ret
aam
mov
add
faddp
sbb
dec
inc
sbb
aaa
rorb
mov
fsts
shr
push
inc
outsb
and
jbe
push
mov
jmp
das
mov
dec
call
inc
push
pushf
pop
add
pushl
repz
icebp
and
dec
fisubl
rcr
aad
xchg
outsl
mov
jp
jp
push
pop
ljmp
lret
stc
dec
rcl
or
mov
iret
loop
cmp
ret
jno
mov
mov
loope
sti
out
mov
loop
out
push
and
testl
dec
sbb
mov
cmp
jae
out
in
lea
ljmp
xor
popf
lcall
inc
adc
adc
sbb
or
add
jg
xorl
cmp
iret
mov
aad
push
lea
jno
add
lods
and
ss
loope
ja
mov
push
imul
dec
and
iret
inc
inc
dec
fistps
and
sbb
arpl
shl
push
insb
repz
jb
pop
add
pop
add
mov
xchg
aaa
mov
xlat
pop
add
stc
fcompl
pop
lahf
das
mov
adc
mov
mov
mov
inc
rcrb
test
mov
sub
cmp
lea
stos
push
sub
push
sar
push
pop
mov
fldcw
lret
and
jno
adcb
sti
cmp
jo
inc
mov
scas
mov
mov
in
mov
ds
int
xchg
je,pt
loopne
lods
leave
adc
push
add
mov
rep
mov
loope
pop
push
aaa
pop
sub
sbb
mov
push
lahf
fwait
mov
pop
jo
lock
scas
xor
push
repz
fdivl
clc
xor
jge
adc
mov
xchg
es
unpckhps
jnp
add
popf
mov
dec
push
push
push
fadds
fstps
daa
sbb
mov
dec
mov
cmpsl
notl
jmp
push
fadd
inc
dec
ret
loopne
outsb
scas
and
std
cmpsl
mov
cld
mov
cmp
pop
cmp
mov
hlt
mov
int3
movsb
push
cmp
in
shll
inc
test
xchg
xchg
dec
mov
cmp
rcrl
ds
decb
cmp
fildl
inc
jge
jle
pop
fcomps
pop
stos
cld
bswap
lods
or
mov
lds
xchg
test
test
addl
mov
dec
and
lods
adc
jp
jg
pop
dec
lods
out
sub
imul
adc
push
xor
stos
push
mov
hlt
push
ljmp
inc
call
xchg
dec
mov
aam
cmp
xor
jo
push
jnp
in
jp
mov
pop
rorl
mov
dec
test
notb
push
and
out
stos
lcall
pusha
stos
popf
jmp
or
fdivrl
push
rcrl
adc
ret
pop
aas
stc
add
stc
gs
xchg
rclb
jp
jne
cmp
sub
mov
mov
mov
in
call
cwtl
in
icebp
inc
push
rolb
jne
outsb
test
mov
inc
popa
mov
repz
mov
add
mov
cmp
cmpsb
xchg
inc
mov
push
fisttpll
fwait
movsl
mov
cmpsb
add
nop
test
jbe
and
add
inc
inc
insb
fildll
adc
int
xor
std
int3
test
iret
add
rolb
pop
subb
mov
mov
dec
lock
push
push
in
xlat
aas
ret
adc
idivb
stos
sbb
repnz
ret
add
mov
es
mov
jg
lock
imul
xchg
leave
out
flds
pop
mov
fiadds
fdivrl
dec
popa
and
mov
sub
mov
add
xchg
xchg
imul
cmc
test
xor
test
xchg
sbb
out
ret
scas
xchg
shr
lahf
stc
out
adc
cmp
and
stc
dec
or
outsl
repz
fmuls
fst
mov
xor
dec
aam
cmpsl
fiaddl
sti
mov
cmc
lock
call
insl
sbb
imul
clc
mov
xor
pop
cli
addr16
pusha
or
mov
test
setbe
jo
mov
mov
loopne
mov
inc
loopne
push
nop
stos
adc
xchg
fnstenv
lea
pop
repz
vandps
pop
pop
cmp
fcomps
lret
or
mov
insl
cli
ret
imul
arpl
fmuls
push
sahf
int3
mov
stc
dec
mov
push
repz
leave
mov
je
mov
xchg
int3
add
dec
inc
mov
sbb
push
pop
xor
pusha
cmp
pop
call
pop
adc
xor
loope
shr
sbb
add
sub
xchg
mov
xchg
scas
aaa
fmul
mov
fnstsw
mov
test
scas
pop
push
push
cmpb
cld
xor
cwtl
pop
inc
frndint
xor
fcmove
fsubrp
xchg
pop
sbb
mov
call
sub
pop
mov
jp
out
add
cld
nop
sahf
xor
cs
mov
or
or
not
in
mov
fisubs
jle
fcoms
movsl
dec
xchg
std
adc
or
lock
pop
add
xor
sbb
stc
fwait
daa
jp
jbe
fisttpl
jnp
loopne
int3
adc
mov
sbb
pop
sub
and
arpl
push
add
shll
cld
lcall
adc
and
test
or
xor
dec
or
mov
cs
je
dec
daa
sarb
sbb
pushl
mov
hlt
cmp
loope
cmp
imul
imul
pop
scas
loope,pn
aaa
std
mov
insb
pop
outsl
push
cld
in
std
fisubrs
jno
xor
mov
repnz
addr16
mov
push
das
push
sahf
jg
mov
mov
ja
sbb
sub
xor
leave
push
dec
push
dec
cwtl
std
and
adc
dec
mov
in
push
bndstx
sbb
mov
add
int3
mov
push
dec
mov
lods
lahf
adc
mov
pusha
stc
mov
bnd
test
sub
divl
fdiv
xchg
or
dec
popa
xchg
fbstp
pop
rolb
into
mov
lcall
pop
out
mov
out
jns
fldl
push
and
inc
fstpl
push
xor
inc
pushf
aam
insb
ljmp
iret
inc
xor
pop
adc
mov
push
xor
loopne
xchg
cmp
les
cmp
pusha
fsubs
xchg
out
sbb
mov
inc
jne
fimull
rcrl
sub
hlt
sbb
rcrb
cmp
loope
imul
cmpsl
pop
mov
sbbb
popf
and
or
fsubs
dec
test
jns
jns
or
mov
in
adc
fisttpl
ljmp
cmpl
pop
jns
movsb
push
mov
test
outsl
fisttps
sarl
aaa
mov
push
adc
sub
out
and
pop
xchg
loop
hlt
jecxz
cmpsl
flds
adc
in
push
dec
das
shlb
pop
scas
shll
orb
dec
test
cmp
sub
stos
lret
sbb
out
mov
out
ja
cmp
outsl
push
ja
xor
sbb
call
std
outsb
and
dec
stos
mov
mov
aaa
mov
jae
sbb
jne
and
adc
mov
inc
ja
hlt
dec
mov
pusha
flds
aad
adc
push
push
xor
add
inc
insl
shr
xor
cmp
push
mov
cs
dec
hlt
stos
mov
aaa
loop
pop
addr16
lahf
icebp
or
xchg
and
jo
pop
ret
std
jno
adc
jg
lahf
loope
andb
ficoml
roll
mov
dec
shrl
aas
sbb
cmp
xor
dec
clc
les
ljmp
sti
out
outsl
enter
cmp
jno
add
test
push
lock
int
add
repnz
pop
clc
cwtl
in
xor
adc
lds
clc
pop
daa
imul
push
jno
or
and
mov
inc
and
push
cmc
cmpsl
insb
int
daa
or
sbb
adcb
out
or
shr
andb
icebp
and
jo
xchg
mov
ds
into
lds
rclb
or
dec
nop
xchg
scas
cmp
push
std
cmp
addb
mov
es
inc
fs
pop
jecxz
enter
shrb
adc
out
into
sbb
sbb
imul
cli
mov
scas
rclb
sar
cmpsb
mov
and
sahf
xor
adc
sub
enter
fbld
test
clc
fbld
jge
lahf
daa
add
cwtl
inc
or
rol
inc
mov
fisubrs
out
cmpsb
inc
xchg
jp
cmp
pop
scas
mov
xor
cmp
mov
das
xor
push
in
jns
adc
lret
cmpsb
inc
mov
or
or
popf
jns
mov
mov
mov
dec
outsb
andl
mov
mov
inc
pop
fmull
dec
addr16
std
imul
leave
sahf
into
cmp
bound
mov
push
jbe
cmp
jmp
jbe
mov
lret
mov
cmp
adc
outsb
or
out
pop
cmc
in
cmp
mov
mov
sbb
sub
negl
js
inc
and
in
xorb
lahf
sub
inc
cmp
setge
mov
lea
lds
fisttpl
jnp
fimull
adc
out
lods
push
call
cmp
jnp
pop
repnz
xor
pop
sbb
sbb
pop
xchg
sti
mov
mov
jae
dec
mov
adc
jae
xchg
adc
pusha
enter
cmpsb
xchg
push
popf
fldcw
jno
mov
int
sub
cmpsl
aam
hlt
pop
cmp
mov
or
lds
sets
cmp
lret
xlat
push
fwait
mov
enter
aam
out
jg
sarl
push
mov
mov
loop
ljmp
mov
jge
sbb
xor
mov
fstpt
repnz
notb
arpl
sbb
push
ret
scas
in
into
stc
cmp
pusha
mov
fdivl
sub
push
repz
cmp
jmp
inc
cs
fsubs
sarb
scas
jmp
test
cmp
sti
xor
xor
mov
popf
inc
xchg
jmp
movsb
cld
or
mov
and
xor
or
fcmovnb
pop
sbb
outsl
jmp
push
fcoml
add
push
mov
mov
push
lods
jl
sbb
mov
cwtl
cmpsb
mov
loopne
fstl
out
xor
test
mov
lcall
int3
mov
mov
testl
cmp
jne
adc
mov
int
outsl
push
sar
lcall
mov
jp
clc
rcl
roll
jecxz
xchg
cwtl
mov
inc
xchg
jo
xchg
inc
push
add
cli
pop
loope
mov
pushf
mov
test
push
cmp
sub
mov
in
add
rcl
jno
enter
mov
add
jnp
movsl
cmpsl
and
sbb
mov
mov
fistpll
ret
or
mov
cmp
insl
decb
xchg
imulb
sahf
jle
mov
sbb
ja
jb
divl
cs
dec
sub
xchg
xchg
mov
xchg
dec
inc
push
int
arpl
leave
leave
jo
mov
jnp
out
shr
push
out
scas
out
test
cmc
in
inc
das
xor
leave
jmp
or
mov
mov
jae
push
cld
jnp
mov
push
test
icebp
cmp
test
jb
andl
pop
out
adc
and
fwait
stc
lods
rolb
xchg
inc
in
mov
pop
inc
adcb
sub
jl
mov
fildll
dec
jno,pn
or
mov
stos
aad
jge
shll
cwtl
xchg
andl
or
bound
lahf
mov
pop
je
stc
decl
daa
das
out
add
les
mov
sub
mov
and
scas
ss
aad
decl
arpl
cmpsl
jb
lds
int3
mov
mov
and
lods
adc
bound
xlat
arpl
loop
sbb
jno
lods
sub
xor
sbb
arpl
pop
jg
jecxz
je
xor
movsl
insl
in
sbb
arpl
pushf
jle
mov
iret
pop
sub
sbb
cmp
add
orb
mov
shll
mov
mov
xor
or
adc
mov
mov
std
sbbb
xor
jbe
test
inc
mov
lret
and
rolb
sarb
xchg
das
mov
ja
sbb
mov
mov
inc
sub
xor
repnz
xchg
sbb
dec
push
or
or
jae
mov
or
pop
jne
adc
inc
push
popa
dec
jl
call
push
fs
push
outsl
push
fidivs
shr
jnp
das
add
movsb
ret
rorl
mov
xchg
xchg
xor
scas
mov
mov
sub
fmull
push
or
xor
fimuls
jae
mov
stos
aam
push
adc
ret
mov
in
cwtl
repz
inc
clc
add
mov
jp
ds
ja
std
mov
or
sti
push
ss
jb
es
mov
jl
mov
cmp
testl
scas
mov
jo
add
jno
add
push
add
and
filds
out
or
pop
lock
jge
jp
jo
mov
pop
inc
arpl
cli
push
inc
or
adc
xlat
hlt
lret
or
push
sub
or
popf
ds
arpl
cltd
les
adc
mov
imull
bnd
int3
pop
sub
push
in
or
jmp
adc
loop
das
out
add
add
dec
arpl
cld
loop
pusha
iret
cmp
loop
xchg
mov
mov
bound
insl
lahf
mov
inc
sarb
fdivrs
enter
add
pop
xor
sub
out
repnz
and
iret
int
icebp
pop
movsl
sub
arpl
mov
iret
stos
lods
lods
stc
or
icebp
lsl
add
mov
inc
mov
test
adc
lahf
and
repz
test
lods
mov
or
pop
scas
and
sbb
push
sub
adc
pop
add
inc
ret
inc
cmp
orl
mov
call
aaa
adc
mov
inc
add
cmp
sub
in
inc
add
xor
movsl
bsf
jbe
xchg
les
daa
stos
cmp
int3
xor
outsb
in
lret
add
jae
mov
loopne
into
ds
ss
mov
or
inc
dec
pop
repnz
add
into
adc
jecxz
mov
inc
fnsave
xchg
jb
fisubl
cmpsb
test
adc
sub
out
int
jb
xor
push
pop
xchg
cmp
js
push
scas
jge
out
test
or
lret
ret
ret
xor
cs
push
push
cmc
jnp
mov
or
lcall
addl
sbb
fdivrs
inc
mov
sbb
sub
cmp
adc
pushf
or
jno
stos
cmp
das
sub
and
test
das
pop
ficompl
es
loope
cvtdq2ps
mov
cmp
jo
jecxz
dec
sbb
loopew
jo
xlat
test
adc
aaa
scas
addr16
es
inc
mov
nop
xor
jecxz
shlb
xchg
push
lds
mov
pop
lret
repz
xchg
pop
push
cmpsb
dec
pop
inc
je
popf
insl
pop
les
data16
adc
hlt
push
test
mov
xchg
outsl
cmpsl
xchg
insl
jno
lret
mov
mov
adc
clc
adc
xchg
rol
out
add
push
push
pop
cmpl
test
daa
jo
dec
mov
cmp
or
add
gs
mov
pop
jg
and
dec
lock
sbb
notb
mov
pinsrw
ds
mov
aad
popf
pop
pop
xor
inc
stc
outsl
or
xchg
call
scas
out
icebp
inc
test
stos
adc
jns
mov
pop
sbb
pop
jb
and
out
out
push
push
mov
stos
rorl
js
seta
stos
insb
bound
jl
inc
outsl
in
push
fsubrs
mov
push
cmpsb
cli
pop
test
lret
scas
ds
xor
es
xchg
add
pop
fs
roll
sarb
ja
inc
push
ss
sahf
xchg
cmc
outsb
pop
xchg
popa
jo
pop
push
aad
int3
lcall
fs
sqrtps
pop
test
push
mov
push
lea
mov
push
xor
in
je
int3
mov
and
pusha
test
xchg
dec
cmp
ja
loope
icebp
fwait
mov
xor
enter
lods
cmp
push
and
scas
outsl
adc
and
stc
lret
adc
icebp
cmp
in
sub
addr16
cwtl
jae
add
fstps
add
dec
pop
cmp
aas
mov
xorl
or
int
addr16
stos
rorb
jns
test
xorb
out
shlb
ffree
mov
cmpsl
push
das
jp
aaa
adc
push
jo
popf
and
jbe
xor
cmp
stos
dec
and
mov
sub
adcl
mov
mov
add
mov
sbb
iret
cmp
fstpl
xor
add
cmpsb
aad
sbb
mov
cltd
push
xor
ficoml
xor
sbb
xor
mov
or
or
cmpsl
pushl
out
in
cmpsl
xchg
ror
inc
rol
pop
rcrl
out
add
cmc
adc
loop
or
add
xor
push
jle
sub
mov
jae,pt
push
cmp
movsl
shrb
jnp
into
and
sbb
push
jle
xchg
lret
mov
out
jno
dec
lds
or
jo
sub
and
and
dec
xor
mov
ret
scas
subb
mov
cmpsl
mov
sub
pop
push
xlat
test
sub
fxch
das
sahf
ds
in
loope
jb
sahf
fbld
daa
test
out
inc
fdiv
jo
movsl
mov
scas
ret
pop
in
mov
inc
fs
ficoml
out
imul
cs
dec
mov
lahf
iret
inc
dec
popf
ljmp
dec
xor
imulb
mov
ret
movsl
push
jbe
ret
fiaddl
loopne
movl
push
insb
arpl
imulb
or
jae
out
sarb
mov
fisttps
cmp
push
adc
mov
dec
mov
push
fcomip
pop
out
repnz
shlb
mov
pop
fistps
int3
cmp
jmp
mov
push
xchg
addr16
insl
movsl
add
lods
adc
mov
and
push
es
cmp
jg
cmp
movsb
fldt
dec
popa
pusha
out
adc
pop
fdivl
lcall
cld
cmp
adc
shlb
adc
pop
jl
leave
outsb
leave
arpl
jno
add
shlb
xor
test
xchg
push
mov
stc
mov
test
xor
and
inc
add
mov
pop
iret
adc
add
jne
mov
in
adc
push
jns
sti
dec
pop
or
std
pop
test
addr16
or
mov
out
push
ss
in
rolb
in
fildl
leave
mov
adc
repz
xor
jl
or
rolb
cmp
out
inc
cld
int3
cmp
test
fimuls
fnstcw
sti
roll
push
mov
out
pop
cmp
into
outsb
pop
int3
jge
xchg
gs
push
xchg
out
inc
mov
rorb
mov
pop
sub
inc
jg
daa
xorl
xchg
inc
pusha
fdivl
mov
sbb
in
sbb
mov
lods
push
loop
sub
es
xor
mov
pushf
mov
fdivl
ljmp
jb
mov
mov
and
mov
lods
mov
mov
adc
loope
dec
xor
cwtl
sub
push
xor
rclb
inc
cmp
push
jge
inc
jge
push
inc
int3
xchg
pusha
fcmovne
add
mov
mov
cmpsb
cmp
add
push
pop
lods
nop
mov
sbb
cmp
xor
lret
mov
mov
lods
movsb
nop
fistpll
pop
xchg
mov
aam
clc
rcrl
fsts
or
sbb
push
inc
xchg
add
pop
sbb
sahf
or
pop
add
cmp
mov
les
mov
push
je
pop
rclb
test
xlat
pop
or
bound
js
jle
clc
ret
pop
mov
je
mov
outsl
pop
into
push
sub
scas
ror
aad
mov
fnstcw
out
pop
inc
sbb
pop
mov
shll
das
cmp
daa
xor
push
icebp
push
outsl
push
adc
add
pop
testl
cmpl
mov
roll
jmp
lret
lea
lods
jnp
mov
xchg
outsb
mov
adc
ja
movsl
mov
aam
cmp
fadd
mov
setp
iret
stc
imul
cwtl
add
outsb
mov
pushf
roll
mov
lret
dec
mov
pop
ret
xlat
scas
shrl
pop
ljmp
add
pop
add
std
jnp
mov
pop
or
negl
shll
je
adc
xorl
adc
aaa
aas
sub
and
lret
push
mov
mov
cmpsb
add
mov
ljmp
sbb
push
cli
popf
mov
fmul
mov
sbb
mov
mov
shrl
and
pusha
and
insl
xchg
mov
cmp
jns
push
mov
push
aaa
push
out
cwtl
xchg
lcall
or
nop
or
cmp
sti
aas
arpl
fildl
or
enter
jae
push
nop
mov
jbe
xor
xor
push
nop
mov
jns
iret
aas
jbe
xchg
ret
addl
dec
mov
cli
dec
in
lret
out
mov
push
test
and
jle
fadds
sub
ret
lea
jmp
lods
and
cmp
dec
xchg
rorl
or
and
xor
fs
jns
lret
mov
mov
out
rcrb
lea
das
push
stc
or
sbb
call
aaa
lret
pop
int3
stc
aas
mov
fmull
cmp
xor
lahf
mov
and
aas
fidivrl
sub
fdiv
jnp
dec
std
mov
test
xchg
aas
int3
pop
xor
pop
cmc
mov
ss
cmp
sbb
dec
jle
arpl
cmp
outsb
xor
pmullw
xchg
stos
mov
div
lods
sbb
insb
shlb
cltd
out
iret
stos
test
loopne
jl
sahf
xchg
lahf
mov
jecxz
loopne
jmp
stos
push
sti
dec
scas
hlt
xchg
cmpsb
imull
add
cmpl
repz
sbbb
std
cs
lea
xor
cmp
add
lcall
add
cltd
sahf
pop
fwait
mov
ret
push
je
dec
xchg
jb
cmp
mov
fiaddl
lcall
jecxz
mov
xchg
addr16
std
adc
add
out
stc
adc
ljmp
xchg
test
jp
je
lods
notl
cmc
sub
jno
jl
shll
ror
jae
int3
div
push
jae
xor
decb
ja
imul
fwait
scas
mov
cmpsb
add
mov
adc
jg
adc
cmp
in
fwait
or
add
mov
dec
xor
nop
shlb
push
out
push
test
push
inc
cmp
xchg
addb
loopne
nop
inc
daa
xor
or
fs
lahf
mov
lea
aas
inc
xor
push
lahf
fnstcw
out
pusha
pop
add
dec
call
add
add
sbb
in
and
aad
adc
cmp
into
ret
sbb
xor
in
lods
pop
adc
cmp
fisubs
xchg
sub
dec
mov
push
or
pushf
filds
mov
shl
jbe
mov
mov
mov
jo
pop
out
pop
neg
ret
push
inc
ljmp
xor
mov
xor
stc
in
rol
pop
mov
and
mov
sahf
jns
push
dec
out
or
in
mov
imul
push
add
incl
push
add
push
add
movsb
dec
pusha
mov
push
adc
cltd
and
div
bound
mov
into
jb
mov
push
ljmp
xor
mov
call
jo
jmp
notl
xchg
mov
nop
icebp
mov
insl
xchg
test
add
cmpsl
and
in
xchg
fildll
adc
xor
into
adc
and
cmp
stc
add
mov
js
roll
xor
scas
mov
into
mov
jno
aas
inc
les
dec
psubd
mov
dec
in
jae
in
mov
inc
aas
sahf
sti
imulb
pop
jb
mov
pop
push
cmp
xor
icebp
loop
push
sbb
push
lahf
inc
jmp
or
sti
inc
jl
inc
mov
push
or
lds
out
pop
mov
or
and
xchg
xchg
pusha
loopne
and
call
lahf
pushf
push
cs
pop
cltd
cmpb
fidivrs
nop
xor
cmp
jne
aaa
mov
outsl
inc
sbb
push
mov
xorb
idivl
pop
add
std
fwait
pop
aad
ljmp
lods
push
ss
sbb
cmpl
sahf
push
add
es
arpl
int
call
jnp
inc
addr16
push
daa
pop
inc
inc
fsubr
ljmp
jle
ds
dec
rcrl
cmpsl
inc
pusha
pop
sub
repz
mov
jle
enter
cmpsl
xchg
fidivs
inc
popf
mov
add
mov
popf
inc
insb
js
push
push
jg
int3
or
pop
mov
adc
pop
xchg
and
cmp
adc
or
push
pop
cwtl
imull
leave
scas
fwait
push
loop
mov
pop
test
scas
pop
xlat
push
lods
fidivrs
in
inc
xor
test
push
and
cmc
xchg
mov
inc
pop
pop
xchg
addr16
pop
cwtl
mov
std
test
bound
xchg
sbb
xchg
fsubr
xor
pop
nop
xchg
pushf
xchg
subb
push
ljmp
outsb
ret
push
arpl
or
and
push
mov
addr16
sbb
popa
popf
sbb
imul
es
mov
mov
inc
ficoml
mov
mov
push
jl
leave
lock
inc
ret
rcrl
cmp
xlat
cs
xor
popa
pop
sub
pop
divl
and
add
out
add
repz
int3
mov
andl
sar
enter
int
insb
mov
icebp
cmp
lock
test
dec
pop
mov
ret
push
push
call
and
jb
imul
adc
or
lea
fwait
sahf
cmp
xor
sub
push
sub
sbb
inc
jge
fstpt
sub
inc
out
xlat
std
je
jle
inc
pop
icebp
or
cmp
stc
dec
repnz
loope
xlat
aas
mov
dec
leave
pop
stos
adc
push
mov
fldcw
sub
jecxz
fisttps
add
lods
cmp
add
xlat
ja
cltd
xchg
cwtl
xchg
cmpsl
xor
push
push
dec
mov
call
pop
add
imul
shrb
push
push
xor
es
xchg
test
ds
je
sub
call
ljmp
sub
cld
out
jmp
aaa
fidivl
sahf
or
ja
idivl
cmpsl
mov
inc
cmpl
movl
sbb
add
aaa
adc
into
jp
cld
cmc
fwait
pop
mov
cmp
imul
sahf
xchg
das
or
mov
cmp
inc
lds
xor
ret
ret
mov
mov
adc
sbb
cmovbe
inc
mov
xchg
add
scas
or
lods
sbb
loop
push
aas
adc
jecxz
mov
xchg
pop
xor
mov
sarb
xchg
pop
lods
cmpsb
movsb
fiadds
push
shrl
hlt
mov
cmpsl
sub
push
popf
mov
xor
and
int3
xchg
cmp
jg
cmp
int3
lret
iret
adc
and
out
mov
cltd
imul
mov
shll
xchg
mov
jno
mov
jge
pop
out
test
mov
cld
push
incb
insl
daa
mov
xchg
xchg
jo
pop
and
mov
imul
jno
or
inc
sub
jno
push
xchg
or
test
lahf
shlb
push
mov
lods
hlt
shrb
mov
in
shl
js
push
in
iret
mov
sbbl
out
rcll
inc
sub
pop
push
pop
testb
pop
sub
lcall
xor
push
movsl
jno
jo
inc
bound
xor
adc
jnp
pop
popf
mov
test
adcl
sbb
xchg
and
push
xchg
in
pop
outsb
ja
or
mov
inc
test
xor
inc
fldl
nop
in
int
inc
aaa
sti
test
sbbl
lcall
cmpsb
mov
je
xchg
out
sub
adc
jb
mov
inc
pop
sbb
dec
dec
inc
pop
cmp
lods
mov
mov
lret
cmpsb
pop
push
fwait
xchg
mov
sub
lods
mov
nop
dec
cmp
out
jae
cwtl
sbb
scas
aas
pop
inc
fbstp
jge
mov
in
mov
lret
push
mov
inc
jne
jbe
cmp
clc
ficoms
pushf
mov
loopne
push
mov
ss
subl
jl
int3
pop
lea
and
xor
mov
push
cmpsb
sub
mov
dec
loop
outsb
lcall
cld
hlt
xchg
mov
insl
fnsave
repz
ljmp
pop
inc
and
lcall
dec
dec
xchg
add
and
popf
push
and
cmp
mov
sbb
dec
xchg
mov
xadd
mov
dec
inc
xlat
rorl
dec
sahf
xor
adc
and
sahf
xchg
in
sub
int
jg
mov
xor
mov
aam
xor
mov
sub
iret
rcrl
pop
fdivrs
pop
out
pop
test
pusha
xchg
mov
or
inc
inc
push
sub
ret
mov
jmp
pop
push
pop
mov
adc
movsb
fiaddl
into
and
lods
cmpsb
xchg
pop
loop
and
pop
jge
lret
js
fsincos
mov
leave
test
mov
sub
ficomps
loop
cmc
test
mov
xor
out
in
xchg
inc
xor
dec
cwtl
and
inc
pop
mov
lret
push
sahf
mov
inc
sti
cmp
pop
mov
nop
inc
pop
sub
pop
mov
jecxz
push
mov
pushf
push
stos
arpl
xor
test
into
pushf
push
push
xlat
xchg
cmp
and
jns
sbb
ret
mov
sbb
dec
pop
add
sub
pop
outsl
pop
aam
mov
pop
push
push
js
xchg
sahf
les
out
cmp
jg
jp
jnp
test
xchg
pop
mov
jnp
faddl
mov
jbe
stos
test
fildll
cmc
mov
cli
int3
inc
add
mov
sub
mov
std
xchg
rcrb
mov
gs
int
xchg
in
and
dec
hlt
daa
and
or
mov
push
movsb
mov
jle
push
je
popa
or
push
in
pop
mov
mov
sahf
cmp
test
jecxz
mov
or
dec
mov
xor
jo
push
mov
xlat
jae
loopne
jge
push
call
or
out
or
loop
or
outsl
push
cmpsb
inc
xchg
or
push
ljmp
int3
cmp
dec
xor
outsl
push
ja
dec
cmc
pushf
cld
adc
add
push
shrl
push
adc
mov
and
cmp
xchg
es
fldl
mov
xchg
add
addb
jne
mov
mov
fisubl
mov
lahf
xchg
xchg
fbld
jbe
out
idivb
and
jne
dec
mov
add
jg
xchg
lock
fcmovnb
mov
jne
out
movl
test
fmul
negl
lret
xchg
xor
repnz
mov
movsb
roll
xchg
mov
outsb
sarl
in
in
push
fistps
je
into
and
inc
mov
aaa
mov
daa
mov
das
sub
aaa
sbb
adc
shll
ds
cmp
push
mov
movsb
mov
push
shll
in
cmpl
sub
inc
movsb
jb
dec
mov
jge
cmp
testb
mov
or
imul
in
fsts
lods
jle
jg
jbe
pop
ds
pop
or
sti
mov
aam
fsub
and
xchg
rcl
jl
mov
push
orb
adc
fcomi
dec
adc
shrb
pop
sbb
js
sub
dec
cmp
fwait
out
js
dec
mov
push
mov
and
jnp
cli
xlat
mov
lds
repnz
push
sub
mov
add
lcall
mov
lret
dec
jnp
fisubrs
sbb
lahf
shrl
inc
add
sbb
jns
popa
mov
or
jno
inc
stos
enter
cmpsl
cmp
dec
fisttpll
xor
cmp
mov
jmp
popf
aad
pop
xor
adc
outsb
mov
in
ss
pop
pushf
push
js
and
out
push
adcl
mov
xchg
mov
ss
cmp
sti
lock
sub
stc
xchg
dec
xchg
out
mov
ss
sub
xor
imul
inc
sbb
lock
mov
cmp
notb
aam
xor
cmp
dec
lods
sbb
jp
mov
out
add
inc
lods
xchg
inc
pop
fists
xor
pop
cli
rcrl
fnstsw
lock
push
dec
daa
outsl
pop
das
sti
and
in
or
subb
cmpsb
mov
jmp
popa
dec
mov
fistpll
cmp
xchg
lcall
jl
push
inc
jg
bound
sub
push
test
pop
and
out
or
pop
or
cmp
add
ja
insb
mov
mov
adc
push
mov
xorb
in
test
push
xchg
jo
adc
mov
sbb
mov
sbb
je
insl
jnp
xchg
push
push
iret
aas
mov
dec
je
fidivs
repz
test
xor
mov
pop
movsl
mov
imul
cmp
cs
jmp
mov
insb
fstl
js
lret
inc
xlat
out
es
fwait
cwtl
das
test
out
mov
out
test
cmc
ljmp
in
test
xor
test
dec
sahf
fwait
pusha
jp
sbb
les
xor
pop
push
push
daa
test
fadds
out
std
or
mov
push
negb
xchg
dec
inc
pop
in
jmp
jo
loopne
lds
add
dec
fstpl
add
cmp
mov
mov
cmpb
pop
inc
rclb
sub
loopne
inc
xchg
lahf
cmc
in
inc
mov
or
movsl
addr16
cmp
aas
fs
clc
pop
out
xchg
bnd
push
aad
pop
cmp
or
xchg
and
dec
mov
loopne
inc
mov
lea
dec
mov
mov
pop
scas
push
mov
je
jb
dec
xor
out
fcom
lret
shlb
insl
mov
fs
pop
leave
jp
out
mov
push
sbb
fwait
push
jno
dec
jmp
push
jno
lds
pop
scas
push
scas
stc
add
adc
push
mov
ret
dec
mov
lock
rcr
adc
in
xchg
addr16
adc
adc
jle
dec
mov
cli
push
out
push
mov
or
push
push
xor
push
and
push
pop
pop
stc
mov
faddl
xor
sti
cld
cmp
cmp
inc
jmp
dec
pop
xor
cmp
cs
mov
insl
dec
movsl
in
xor
fcompl
xchg
cmc
xchg
sbb
ret
mov
xorl
fadd
or
mov
cmp
jo
lods
fwait
jae
or
push
mov
mov
or
jbe
shr
fadds
jecxz
stc
test
cmp
loope
mov
in
stc
in
jns
xchg
cmp
add
outsb
inc
add
in
call
pop
loope
and
push
push
fcoms
ret
sub
and
jmp
aas
divl
push
lods
fs
test
inc
dec
jb
js
push
pop
mov
fisttpl
mov
or
ret
jle
testl
fidivs
daa
add
jne
xchg
xor
sbb
mov
fisttps
adc
xchg
aas
sub
mov
gs
or
repz
pusha
xchg
adc
sub
xchg
jne
cmp
jne
andl
mov
jo
push
xchg
and
aas
int3
cmp
and
push
andl
xor
and
jl
lret
adc
outsb
pop
movsb
ret
sub
pusha
fidivrl
push
clc
cld
scas
mov
pop
and
mov
xor
lds
mov
in
sub
pop
int3
and
rep
cld
out
jae
movsl
ljmp
inc
dec
jns
add
mov
or
mov
or
push
imul
cwtl
stc
addr16
movsl
cmpsl
pusha
ret
xlat
sub
es
dec
and
xchg
fcomip
cli
jle
push
and
mov
mov
fldl
mov
scas
rcrb
jle
leave
lea
jge
xlat
mov
mov
mov
sbb
xlat
push
push
sbb
mov
xor
dec
mov
sbb
adc
lods
jge
xchg
mov
ds
fnstsw
stc
inc
pop
jae
dec
sahf
mov
outsb
jle
push
inc
out
and
test
add
in
push
mov
rorl
jo
jne
inc
test
in
pop
insl
mov
das
and
cmp
cld
cmp
sbb
fsts
push
add
xchg
pop
add
mov
inc
scas
es
jo
out
cmpsb
fisttps
aad
les
fcmovnb
lock
popa
inc
das
jae
orl
mov
mov
or
xchg
outsb
pop
add
adc
dec
test
and
pop
movsb
pop
rep
ss
cli
or
jne
or
call
imul
cs
test
daa
incl
mov
add
inc
mov
outsb
xor
das
or
cli
jb
jg
inc
mov
arpl
std
adc
dec
add
push
mov
addr16
jbe
or
mov
push
sub
fdivr
outsb
mov
adc
mov
mov
cs
and
lret
mov
jg
inc
insl
in
lds
in
mov
add
ja
icebp
add
or
mov
pop
pop
mov
adc
lods
jae
mov
jge
push
push
xchg
fdivl
pop
add
notl
push
adc
sbb
fs
xchg
dec
iret
subl
arpl
insb
in
jne
lret
lods
scas
xor
sub
mov
ret
or
lea
movsb
mov
fwait
lds
fldcw
fwait
xor
int3
cmp
mov
xor
inc
push
jae
mov
jle
or
dec
je
test
or
loope
sub
movsb
les
jmp
inc
std
in
add
adc
pop
enter
cmp
es
push
pop
rolb
stc
pusha
loop
sbb
xor
repz
lret
call
imul
cmp
cld
dec
mov
loop
inc
adc
mov
mov
rorl
in
adc
adc
adc
fldl
add
fsubrl
mov
popa
or
aas
add
jne
es
inc
pop
test
lods
in
fwait
cld
cmp
inc
imul
push
cmpsb
bound
and
cmc
das
push
cmp
arpl
adc
stc
les
xchg
mov
test
xor
pop
out
push
mov
push
xor
mov
addr16
jmp
and
cmp
and
sbb
mov
lds
jo
aaa
dec
xlat
sbb
je
mov
fneni(8087
inc
rcl
adc
xor
insl
dec
add
cwtl
clc
sbbb
jns
imul
cltd
imul
xor
iret
inc
pushf
push
cltd
pop
in
test
jle
aam
test
xor
adc
mov
lods
xor
imul
pop
shrl
imul
sti
insl
rcll
ds
jmp
jl
lcall
rorb
pop
pop
xor
pushf
add
pop
cltd
add
lret
mov
sar
out
mov
sub
push
jae
or
pop
mov
mov
outsl
cmp
mov
and
or
test
jns
push
int3
psubb
mov
aam
jp
or
lahf
fdivrp
aaa
mov
lret
in
hlt
call
cmp
jbe
js
nop
mov
bound
ja
xchg
fisubrs
cmc
cli
dec
ror
adc
les
lret
jl
mov
int
push
std
pop
out
rcr
dec
rcrb
lods
inc
add
pop
mov
add
add
shll
fwait
stc
xchg
scas
scas
or
inc
scas
push
pxor
inc
inc
xor
xchg
in
adc
outsl
sbb
cmp
and
mov
clc
mov
in
stos
pop
add
pop
out
xlat
fstpt
inc
xchg
sahf
xchg
add
cmp
push
push
push
outsb
or
add
pop
or
aas
aaa
push
fdivrs
in
fwait
add
in
shl
in
std
xchg
decl
imul
mov
jle
push
mov
cmp
mov
jmp
pop
xchg
pop
cmp
bnd
subl
xor
repz
cmc
test
enter
clc
pop
repz
popf
cmp
sti
fmuls
jmp
add
and
pop
lret
mov
aam
aam
or
ret
into
test
cmpsl
mov
insl
test
lods
pusha
pop
rcll
lret
push
cltd
xchg
adc
fldcw
inc
xchg
push
fwait
dec
clc
sbb
loope
clts
mov
rcll
cmpsl
push
cmp
sbb
fs
inc
jmp
pop
and
dec
mov
mov
ret
out
xchg
pop
add
add
fsts
pop
cmp
inc
stos
in
mov
push
add
sbb
in
ja
inc
inc
jno
call
xlat
mov
lods
add
add
cli
rolb
xchg
hlt
and
adc
fadds
mov
adc
pop
jge
mov
push
jne
xchg
mov
sbb
mov
jle
xor
jnp
mov
std
pop
mov
dec
into
outsl
xchg
push
jg
cmpsb
out
lock
call
jno
dec
xor
xor
inc
mov
loope
adc
out
shrl
ljmp
inc
push
jo
bound
xchg
out
sub
lods
lcall
cli
ret
sbb
push
lea
in
add
enter
aad
call
js
bound
push
push
sbb
mov
ljmp
jecxz
repnz
hlt
cmp
add
jmp
roll
stos
pop
arpl
pop
in
cmp
out
rclb
adc
fidivrs
jmp
and
mov
push
push
jle
rcll
idivb
push
fsubrl
jno
lods
jae
sti
daa
mov
xor
xchg
mov
pop
mov
lods
adc
and
mov
cmp
daa
sti
orl
add
xchg
inc
stc
mov
arpl
jo
daa
or
lods
cmp
lods
xchg
xor
lods
repz
repnz
push
pop
cld
jp
fs
adc
fwait
xchg
imul
add
in
mov
mov
push
divl
out
dec
add
rcl
lahf
mov
jo
mov
inc
pop
push
test
pop
xchg
test
movsl
xor
or
jl
mov
shrl
xor
sub
mov
bound
stos
sub
shl
add
cmp
iret
cmp
mov
and
inc
mov
shlb
jbe
dec
add
pusha
mov
jge
mov
mov
testl
fwait
inc
cld
mov
in
pop
popl
xorl
imul
add
cs
mov
add
subl
cmpsl
xchg
daa
insb
fwait
popf
out
test
adc
dec
sub
adc
data16
in
fidivrl
test
lret
pop
xchg
and
adc
fs
nop
leave
dec
and
mov
icebp
cld
fs
xor
cmp
inc
lods
lahf
aas
in
cmp
add
xchg
xchg
into
std
cmc
xor
addr16
rol
mov
shl
xlat
mov
jge
cmp
xchg
pop
insl
mov
mov
shlb
inc
outsl
push
lods
movsb
daa
hlt
push
fcmovnu
and
or
into
mov
xchg
testb
adc
fwait
push
inc
xor
adc
shll
inc
mov
icebp
cmpsb
outsl
jmp
lods
or
dec
sub
adc
jg
pushl
mov
cmp
iret
mov
loopne
repnz
repz
pop
repnz
outsb
sub
dec
cmc
sbb
adc
pop
xor
xchg
std
sbb
cwtl
call
mov
sub
fs
addr16
bswap
add
xchg
inc
repnz
in
adc
or
fiadds
xchg
test
mull
inc
dec
out
int
jle
hlt
cmp
aad
jnp
jp
loop
cwtl
cmp
mov
sti
stos
arpl
xchg
pop
push
mov
push
xchg
pop
cmp
in
pop
cmp
inc
lds
int
add
pop
outsb
mov
cli
lcall
or
mov
inc
shrb
repz
mov
insb
dec
sbb
popa
out
jle
repnz
hlt
scas
jecxz
push
add
lock
jecxz
sub
in
fwait
pop
and
push
scas
cs
and
int3
loopne
sbb
or
mov
ret
shrb
inc
divl
lock
fists
mov
cs
sti
pusha
dec
inc
push
xor
jge
pushf
fsubr
push
inc
cld
aaa
add
pushl
es
ss
mov
lcall
test
push
xchg
and
jmp
mov
xchg
ss
sbb
pusha
sbb
test
add
add
xlat
or
push
pop
sbb
lds
cwtl
pop
mov
scas
cmc
insb
pusha
jne
mov
sub
sub
xchg
test
pop
gs
cmc
jns
rcrl
imul
pop
and
dec
jle
nop
out
andl
fwait
lahf
popf
cmc
xchg
pop
xchg
notb
add
sahf
scas
lea
mov
cmp
push
arpl
loop
mov
arpl
addr16
andl
iret
ljmp
dec
shll
xor
icebp
nop
lcall
xchg
xchg
add
insb
insb
xchg
in
psllq
iret
icebp
mov
addl
out
mov
xchg
outsb
faddl
mov
les
sub
rsqrtps
negb
cld
inc
xor
cmpb
out
pop
sti
es
add
xchg
jnp
inc
cmp
scas
stos
addb
enter
negb
inc
push
mov
push
push
jge
mov
cmp
pop
out
jns
jmp
jo
xor
dec
push
mov
aam
xor
mov
enter
stos
mov
mov
fnsave
adc
cmp
mov
sub
jae
mov
rcll
xchg
clc
movsb
adc
push
adc
cltd
sarl
stc
pusha
out
mov
and
push
xor
movsb
test
mov
ljmp
out
xor
mov
push
mov
call
movsl
in
hlt
daa
pop
jg
das
dec
loopne
push
jle
xchg
xor
inc
mov
mov
pop
or
sub
jecxz
xor
ja
cmc
adc
ljmp
mov
dec
jnp
dec
popa
mov
mov
dec
jl
and
dec
add
mov
adc
add
inc
movl
jp
jmp
sub
mov
xor
fldl
cmc
and
mov
add
dec
adc
sbb
inc
or
out
or
imul
inc
push
adc
jb
arpl
xlat
pop
shl
add
cmp
xchg
pushf
test
adc
dec
lds
dec
bound
adc
insl
mov
insb
xchg
lods
xor
movsl
es
sub
dec
push
adc
sub
aas
mov
pop
test
jno
push
arpl
std
mov
aam
mov
jae
leave
mov
inc
sub
cmc
add
aas
xchg
andl
sar
neg
mov
dec
pop
mov
lret
vmread
shll
pusha
mov
mov
js
push
jmp
arpl
add
jnp
cmpsl
cwtl
cld
lock
cltd
push
popa
cmp
mov
insl
push
xchg
jl
arpl
lret
leave
mov
ret
out
sbb
repnz
pop
cmpb
mov
movsb
sub
outsb
or
mov
jnp
cmc
daa
cwtl
iret
clc
stos
js
rclb
jmp
add
mov
mov
xor
pop
mov
data16
dec
cmp
cmp
sbb
sahf
inc
outsl
dec
jge
jmp
adc
jp
add
aad
or
arpl
and
pop
bound
clc
aam
sub
xor
fmuls
cmp
xchg
fstl
dec
lea
sbb
rcl
xor
adc
inc
ficomps
push
out
sub
arpl
push
enter
mov
dec
gs
push
dec
or
out
or
test
jmp
mov
out
mov
mov
cmpsl
fisubl
mov
hlt
jp
lea
loop
push
inc
pop
or
imul
aad
jge
and
mov
mov
movsb
iret
gs
pop
push
fstps
dec
scas
xchg
jne
mov
xchg
dec
push
push
ret
xchg
notl
cmp
std
pushf
scas
sub
add
dec
mov
clc
jo
insb
addr16
sbb
jle
out
or
ds
in
add
lret
daa
push
lea
call
loopne
adc
loop
dec
loopne
push
sbb
and
je
mov
xchg
cmp
adc
or
test
mov
cmc
ror
push
in
push
cmp
jo
std
int3
lea
ja
sbb
jo
sub
mov
fwait
popa
xchg
or
cmp
cmp
xchg
jmp
inc
jo
xchg
add
lock
mov
jmp
mov
pop
dec
jmp
pop
movsb
push
sub
scas
sarb
pop
mov
pop
cmpsb
sbb
sbb
mov
jmp
ss
push
sub
mov
inc
lret
loop
lea
xchg
inc
outsl
push
pop
and
inc
push
pop
stos
jbe
jmp
not
or
inc
pop
mov
sub
add
cli
sti
daa
push
imul
mov
icebp
push
adc
movsl
pop
dec
dec
sbb
dec
jmp
jno,pn
inc
cwtl
inc
adc
in
jns
xchg
and
into
xchg
insl
sub
add
sub
in
fstpt
in
cmp
leave
rcr
gs
sub
call
jns
jle
dec
neg
jno
popf
and
sti
adc
insl
and
inc
rclb
mov
inc
or
test
dec
call
mov
mov
movb
mov
xchg
or
push
inc
pop
cmpsb
lcall
lds
xor
rcr
mov
test
xchg
mov
cwtl
mov
mov
mov
mov
cmc
loop
addr16
sub
test
test
push
cmpsl
imul
ss
sub
scas
scas
xchg
xor
aas
xchg
xchg
ret
mov
pusha
push
jbe
scas
test
pop
or
les
sub
fimull
jge
jg
sbb
mov
push
mov
ret
cmp
mov
pop
sub
add
les
enter
leave
and
insl
mov
lret
jp
and
mov
xor
gs
cmp
inc
sbb
jl
push
mov
xor
mov
es
pop
std
sub
pop
addr16
imul
sbb
dec
fdivs
ja
cmp
dec
nop
nop
inc
lret
cmp
addr16
lret
rolb
mov
cmp
add
jmp
mov
push
mov
test
aaa
lods
and
lret
cmpl
cwtl
ss
ja
adcl
xchg
adc
mov
xchg
lods
mov
add
pop
ljmp
rorl
pop
xchg
andb
and
inc
mov
ljmp
lock
rclb
shrb
pop
or
movsb
sbb
push
inc
dec
push
jno
outsb
std
cmp
jl
repnz
mov
push
cld
and
xor
sbb
hlt
xchg
lds
mov
popf
cmp
outsl
lods
cmp
aas
cmp
add
or
lea
mov
or
mov
incb
xchg
sub
xchg
push
push
imul
pop
cmp
std
lcall
jnp
lods
stc
push
mov
xchg
push
mov
fld
jbe
jecxz
ds
in
pusha
dec
mov
cmp
fs
test
das
cmp
pushf
jl
cli
bound
loopne
mov
sub
lret
push
loopne
fsubr
mov
scas
dec
icebp
dec
stos
inc
inc
rorl
push
mul
inc
cs
stos
aam
xchg
arpl
xchg
xchg
sub
push
push
add
flds
push
repz
pushf
xchg
aad
inc
in
mov
int
sahf
xor
jae
repz
push
add
out
xchg
adc
cltd
fldcw
mov
xor
xchg
cld
sub
aaa
mov
jmp
fcompl
xchg
mov
insl
insl
and
cmp
adc
fldenv
cli
inc
and
jae
push
jb
mov
inc
lahf
mov
sbb
inc
or
out
rclb
dec
mov
ljmp
sub
out
pusha
inc
aam
jbe
xlat
mov
fadds
dec
push
imul
sbb
ret
scas
pushf
out
test
push
in
lock
clc
ljmp
out
add
ret
cltd
mov
fistps
notl
ret
jns
sub
push
jnp
or
cmp
jae
push
cmpsb
repnz
add
decb
push
hlt
repz
fmul
cmp
pop
jmp
mov
cld
inc
pop
imull
pop
push
mov
pop
loope
pusha
popf
mov
jne
or
test
dec
jne
stos
cmpsl
xchg
inc
xchg
aam
mov
and
outsl
jo
test
mov
sbb
clc
outsb
call
jmp
outsl
add
xchg
sub
pushf
xor
xorb
pop
shrl
mov
inc
mov
cmp
fs
lahf
rclb
add
dec
xchg
mov
push
mov
jl
iret
in
fiaddl
in
mov
jno
fsts
subl
js
mov
jle
and
xchg
jo
mov
cmc
and
inc
inc
dec
out
pop
jl
movsl
in
loop
loope
clc
ret
lods
out
and
sub
adc
popa
xor
and
inc
mov
sub
scas
cmp
pop
mov
cmp
sub
movsb
inc
jmp
outsb
rcrl
adc
xor
pop
shlb
mov
nop
test
mov
lods
out
jns
inc
jge
cmp
repz
xor
ja
dec
xchg
imul
lret
outsl
mov
nop
xchg
jmp
and
and
xchg
fisttpl
sbb
das
pop
out
mov
ja
mov
fs
mov
or
fdivrs
shlb
mov
sub
mov
or
xorb
es
pop
ret
mov
sub
cmc
js
xor
into
in
ja
xchg
adc
sbb
push
lods
je
mov
faddl
in
fstps
xchg
jae
sbb
xor
repnz
xor
adc
pop
jno
xor
ljmp
ret
cmp
pop
jp
mov
loope
cli
or
ret
ss
test
push
pop
xchg
jb
inc
jle
or
fiadds
aam
xchg
mov
pusha
inc
popa
sub
inc
push
mov
pop
fadds
dec
call
xor
stc
iret
dec
leave
idivl
cmpsb
pop
mov
xor
repz
testl
adc
loope
mov
sahf
das
bound
mov
sti
push
mov
xor
in
insl
or
in
cmp
jp
push
xchg
pop
xlat
push
sbb
jbe
xchg
icebp
loope
ljmp
jp
fdivs
lahf
out
sub
aam
into
popa
subl
nop
sti
cmc
jp
lret
enter
sub
cmp
adc
imul
lods
or
insl
adc
jecxz
jmp
gs
mov
mov
enter
and
insl
out
mov
push
mov
ljmp
imul
dec
mov
cs
aas
pop
pop
rcr
add
and
ficomps
jp
movsb
sbb
insl
int
cmp
es
pop
cmc
and
jecxz
dec
fdivrl
xor
xchg
ljmp
sbb
fcmovu
loope
sub
jns
and
shlb
cld
inc
ljmp
lods
and
cltd
cmp
jge
mov
fs
pop
adc
jo
sub
in
das
loopne
out
xchg
das
inc
fisttps
jg
repnz
fstps
sbbl
lea
aas
aas
punpckhdq
out
pop
xchg
jge
pop
call
in
xchg
jbe
movsb
or
sub
add
cmp
jmp
jmp
andl
bound
hlt
sti
mov
lods
jnp
pop
mov
cmp
cli
or
mov
push
out
push
sbb
xchg
das
push
test
loope
pop
fsts
fiadds
sahf
enter
sbb
add
mov
lods
and
mov
stc
mov
fnstenv
dec
cs
mov
hlt
inc
pop
inc
subb
scas
and
js
lret
aam
add
pop
jecxz
loop
xchg
movsb
jne
sub
ficomps
pop
xchg
and
outsl
scas
xchg
or
movsl
arpl
daa
sub
test
mov
xchg
pop
loop
pushf
sub
fs
sbb
out
dec
ret
imul
mov
pop
push
jle
inc
xchg
in
xchg
jbe
xchg
lcall
pop
notb
sbb
in
sar
push
pop
imul
scas
ficoml
xlat
sub
mov
xor
popf
lahf
cmp
out
popa
mov
mov
mov
sbb
addb
ss
outsl
or
inc
aas
mov
test
outsb
stc
fsubs
add
xchg
call
leave
pushfw
fisttps
cwtl
jns
xchg
sub
or
jl
jne
jecxz
push
jbe
call
sbb
push
enter
mov
mov
es
xchg
push
insb
pop
cmp
push
push
xchg
outsl
in
rclb
adc
mov
aad
lds
scas
mov
mov
lret
popa
cltd
sbb
dec
popf
cmpsl
adc
push
jbe
jmp
imul
jl
mov
shl
sub
jmp
loope
ret
xchg
andb
stos
popa
xorb
test
jg
mov
mov
mov
pop
jg
and
inc
std
orl
add
in
and
fxam
cmp
daa
xchg
je
pop
fimull
mov
add
xchg
movsl
lret
sbb
movsb
jg
out
mov
add
test
mov
scas
push
mov
cli
mov
or
pushf
std
aam
mov
movsb
mov
jb
ja
testb
or
in
mov
sbb
std
jbe
clc
mov
stc
xchg
jae
pop
lcall
lea
mov
lds
in
fucom
loope
andb
insb
rcrl
mov
popf
xchg
sbb
adc
sub
jl
mov
shll
sti
mov
repnz
jne
mov
push
stos
cmp
sbb
xchg
xor
cs
sbb
adc
mov
dec
push
test
cltd
bound
icebp
popf
lret
sub
lods
out
sub
mov
jne
pop
test
sarl
sub
aam
inc
faddl
ds
rcrb
pop
push
call
mov
mov
rorl
push
fxch
dec
cmpl
and
mov
sarl
imul
leave
mov
rcr
jecxz
xchg
jno
push
out
ret
jle
jmp
mov
jecxz
pop
or
xor
fsubrs
jns
ret
jge
pop
inc
dec
sbb
mov
add
loopne
arpl
push
add
mov
leave
mov
xchg
dec
stos
rcrb
je
mov
push
fcomps
push
mov
push
xorb
outsl
in
jnp
mov
push
or
je,pt
ds
jne
fldl
pop
arpl
mov
das
mov
cld
jmp
out
mov
std
js
gs
out
xor
sub
cmp
popf
aad
and
dec
dec
cli
and
mov
mov
and
lret
andb
test
xlat
fldl
shrb
sbb
xchg
jno
push
and
adc
je
jnp
jnp
jge
push
sbb
jecxz
insb
in
adc
push
scas
dec
aam
fs
out
aam
mull
jle
test
cs
mov
add
and
scas
std
call
stos
cmp
xchg
xchg
mov
fs
movhlps
lods
cs
sbb
add
ljmp
inc
inc
es
xor
loopne
shrb
jbe
jg
loopne
lret
sub
filds
in
addl
sbb
loopne
idivb
lds
aaa
sbb
push
cltd
mov
xchg
sbb
in
int3
mov
stc
ja
mov
inc
imul
into
mov
push
and
xchg
dec
add
cmp
pop
popa
imul
sahf
idivb
cmpsl
stos
sub
into
mov
mov
lret
mov
mov
and
fcoms
cmp
into
lods
into
lock
pop
mov
stos
cmp
xchg
sahf
or
loop
push
lock
xchg
rorl
ret
add
xchg
fsubl
pushf
dec
enter
outsl
out
and
mov
sbb
jecxz
cmp
scas
sbb
xchg
sbb
and
pusha
out
mov
jne
xor
testb
mov
push
jmp
sub
mov
mov
xchg
or
cmp
jb
push
xchg
or
jo
and
dec
inc
mov
inc
decb
jle
cwtl
mov
inc
mov
sbb
loop
imul
cli
and
push
lds
and
sub
push
or
gs
lcall
push
inc
jb
adc
jp
xchg
lods
mov
aas
xor
out
arpl
mov
ret
add
es
out
lds
lahf
mov
mov
pop
aas
setge
fidivl
fcompl
sbb
loopne
jle
cltd
sbb
add
sub
ds
and
or
pop
ljmp
cli
imul
push
std
cwtl
cmp
jg
or
adc
xor
inc
and
sahf
mov
out
mov
into
jae
and
mov
or
sahf
loop
xor
push
xchg
add
push
nop
mov
inc
mov
and
loope
rorb
xor
inc
and
mov
add
shl
js
addl
mov
adc
mov
pop
and
jno
mov
outsb
stos
push
xchg
and
add
ds
push
flds
mov
arpl
jnp
add
es
enter
push
mov
imul
sbb
and
pusha
addb
jg
into
std
mov
lods
jae
push
test
push
jb
ret
dec
nop
test
push
adc
test
mov
js
pop
lret
xchg
cltd
loope
out
cltd
push
test
popa
push
jb
std
inc
nop
insl
daa
pop
jp
fiaddl
pop
rclb
sbb
int
subl
add
aam
sub
inc
cltd
jl
jl
fnstenv
lret
mov
clc
sub
add
inc
cmp
inc
dec
jge
and
mov
mov
push
mov
test
xor
icebp
je
xchg
das
in
out
ret
cmpsl
xchg
repnz
jo
insl
push
push
das
xchg
push
mov
jno
xchg
outsl
test
lods
or
and
loop
andl
jae
enter
test
inc
stos
ret
arpl
fisubrs
sbb
lods
adc
or
pop
add
adc
ds
outsb
cmpsb
stos
js
stos
jl
loope
out
lcall
xchg
stos
mov
out
popf
or
xchg
scas
add
push
adc
cmp
sbb
stos
cmp
sbb
inc
mov
add
xchg
jmp
repnz
xor
pop
lods
add
rclb
jle
dec
mov
fwait
xor
cld
mov
ljmp
mov
daa
sbb
pop
adc
sbb
shll
cmpsb
add
adc
repnz
popa
arpl
mov
int
pop
imul
cmpsb
in
pop
sub
ds
jecxz
and
in
push
dec
pop
mov
add
add
sbb
fldl
cmpl
xor
jg
outsb
sub
and
mov
ret
mov
pop
adc
in
repz
jmp
ret
xchg
add
roll
mov
push
jbe
pusha
mov
dec
fwait
or
negb
lods
jg
mov
mull
add
push
dec
ror
insb
lret
jns
cld
sub
sbb
fcomps
cld
push
cmp
add
aas
addr16
fs
mov
stos
rclb
stos
repnz
adc
ret
je
mov
mov
push
inc
sahf
loop
sbb
mov
xor
pop
imul
in
mov
pop
ja
xchg
dec
dec
push
popf
mov
jae
push
push
repz
jo
jg
push
pop
push
or
incl
stos
push
lahf
int3
pop
in
std
mov
ljmp
pop
scas
fdivrs
cmp
jne
or
xor
fnstcw
and
jmp
mov
xchg
push
stos
jb
inc
ljmp
sub
mov
push
js
inc
fprem
mov
sub
or
inc
mov
push
lods
repnz
dec
and
fistpll
push
and
stos
fdivs
mov
ret
and
jle
cmpsl
jl
mov
mov
or
jg
js
ror
adc
iret
jns
movsl
aas
xor
lret
jge
fidivs
and
aas
loope
outsl
adc
sti
jl
fdivrl
out
sar
jl
add
imul
cmpsl
xor
call
add
fiaddl
jp
in
sbb
fsubrl
hlt
add
jg
dec
dec
sbb
cmc
xor
jb
inc
or
insl
cli
adc
adc
outsl
fisubl
adc
enter
inc
lret
addr16
lock
cld
add
push
pop
scas
xor
loopne
sbb
dec
aam
push
cmp
into
shlb
loopne
mov
je
pop
in
mov
mov
push
dec
sbb
fiaddl
and
mov
mov
jno
pop
pop
pop
push
mov
fcoms
outsb
sti
flds
inc
das
ds
cmc
add
es
loopne
lret
cmp
mov
iret
in
roll
jmp
mov
cltd
inc
aaa
inc
test
orb
popf
cmpsb
testb
ljmp
mov
pop
and
je
lret
fst
mov
inc
mov
or
les
pop
call
push
mov
mulb
lods
cld
mov
stos
aad
pop
sbbb
cld
push
fcomps
sub
jne
push
mov
dec
stos
out
rcll
pop
dec
lock
ficompl
ret
lock
jmp
xlat
test
push
ret
cld
cmp
int
adc
fisttps
sub
jmp
or
out
std
cmp
mov
or
test
out
push
jmp
dec
fwait
es
dec
cmp
movsl
sbb
jbe
push
mov
shll
nop
inc
out
cmp
jmp
sbb
call
jmp
push
pusha
mov
or
jmp
std
add
in
rcrb
sbb
pop
pop
bound
cmp
pushf
dec
fdivrl
cmpb
cltd
mov
lods
mov
xchg
test
xor
ss
pop
repz
inc
in
pop
aaa
pop
inc
test
ds
insl
dec
cmp
adcl
inc
push
push
subb
fcoms
adc
xchg
xor
cmp
sahf
jle
rorb
xor
mov
stos
push
push
pcmpgtb
outsb
lock
xchg
mov
jno
inc
int
stc
pop
out
add
cld
xchg
and
mov
movsl
inc
sbb
add
out
cmp
shrl
or
fcoml
fucomip
enter
inc
adc
stos
loop
subb
mull
xor
cmp
in
int3
fmuls
ja
test
mov
ljmp
dec
loope
cmpsb
sub
and
mov
or
in
xchg
pushl
and
insl
repz
out
xchg
cmpsl
ss
inc
xlat
sbb
sub
dec
xchg
mov
push
or
inc
jp
jg
sub
ja
push
out
pop
dec
sub
xor
inc
data16
xor
mulb
cmpsb
push
aaa
sub
popa
cmp
mov
xor
mov
ds
cmp
jecxz
cmp
inc
or
adc
lea
mov
sub
push
and
fcom
lcall
mov
jecxz
stos
jecxz
test
adc
testl
or
add
mov
movsb
jo
mov
push
pop
mov
jns
jmp
xor
sub
aad
dec
push
push
out
xchg
out
call
cs
lds
test
adc
outsb
add
subl
jge
repz
call
or
iret
dec
cmpsl
xor
sbb
sbb
or
repnz
mov
xchg
pusha
in
jge
pop
std
cmp
mov
mov
lea
inc
leave
xchg
in
xor
mov
jl
outsl
jmp
std
int
pop
aam
mov
mov
push
scas
je
jg
mov
and
mov
dec
daa
mov
cld
out
addl
cmpsb
imul
fs
lahf
jae
in
mov
int
stc
xchg
stos
and
mov
or
push
mov
or
popf
jmp
or
cmp
sub
mov
mov
faddp
int3
cmp
push
pop
sbb
and
fnstcw
lret
mov
out
adc
and
mov
test
sbb
in
xchg
sbb
mull
ret
push
popa
push
xchg
xchg
dec
push
fisubl
dec
push
mov
pop
and
movb
adc
imul
mov
jmp
add
add
cmpsb
jo
fstpl
imull
or
movsb
movsl
jg
std
cmpsb
cmc
sahf
jmp
div
fldl
fidivl
dec
push
lret
pusha
ret
xlat
inc
repz
rcrl
mov
push
in
cmp
or
adc
sub
dec
push
scas
inc
and
stos
insb
xchg
test
cmc
and
outsb
xor
jae
and
aaa
in
sbb
mov
fidivl
in
leave
xchg
cmp
pop
arpl
cs
jge
sbb
mov
in
mov
je,pn
xchg
mov
sub
cltd
jne
dec
jnp
pcmpgtb
push
adc
adc
lods
sub
rol
in
adc
push
and
cli
ljmp
mov
jge
mov
push
xor
pop
call
xlat
rorl
ficoml
sarb
test
lock
jle
shll
lcall
scas
lcall
xor
jmp
shll
aad
sahf
fidivrl
sbb
mov
scas
cs
pop
mov
or
call
pop
in
push
cltd
lcall
hlt
cli
ds
test
or
mov
lds
fsubrs
mov
mov
les
cmp
cmp
lods
addl
dec
mov
pop
sbb
dec
mov
mul
aaa
fmul
aam
je
xchg
mov
pop
icebp
and
lret
insl
ret
mov
push
stos
cmpsl
out
push
shufps
test
pop
out
and
sbb
jne
in
sarl
jae
adc
pop
mov
fwait
or
or
adc
stos
xor
xchg
nop
in
stos
fwait
pop
pop
push
fimuls
or
js
in
mov
dec
pop
jmp
loopne
test
xor
pop
fsubr
mov
mov
xchg
mov
xchg
cmpsl
push
push
dec
mov
push
sub
call
mov
push
jl
mov
clc
sbb
sarl
pop
adc
gs
in
orl
dec
in
mov
fiadds
push
pop
arpl
lods
push
inc
push
or
nop
out
dec
adc
lods
es
xor
in
sarl
cmpsl
sbb
push
push
xchg
jecxz
mov
mov
shlb
xor
jno
pushl
xorl
gs
jg
movsb
out
pop
inc
dec
fs
jbe
xchg
sbb
pop
stos
int
fwait
rclb
mov
sbb
lcall
loope
adc
imul
xchg
fsubs
xor
or
sub
cmp
data16
stos
mov
fwait
pop
mov
xchg
mov
out
dec
lds
sbb
popa
addr16
mov
cli
imul
mov
cmp
mov
inc
das
mov
or
insl
or
ss
nop
shrl
fsubrl
cmpl
subl
mov
leave
pop
lret
push
or
mov
jae
mov
jae
mov
inc
mov
ds
push
cs
fisubl
inc
mov
mov
xor
imul
sbb
in
leave
fiadds
fwait
pop
cmp
adc
dec
aaa
xchg
mov
sarl
ss
test
ljmp
mov
dec
sbb
fprem1
cmp
or
push
xchg
cld
dec
shlb
jno
inc
xchg
mov
push
push
aad
leave
orb
dec
xor
std
int
repz
jle
movsb
sub
cmpsl
xchg
rclb
call
cmpsb
aad
cmp
or
in
cltd
jmp
std
shlb
or
adc
cmp
bnd
push
mov
mov
aad
jp
rcrb
jae
loopne
fcompl
pop
jns
cld
mov
out
imul
addr16
imul
xchg
push
pop
and
mov
arpl
in
mov
dec
outsl
ljmp
add
fcomps
out
addr16
in
insb
add
testl
ljmp
cli
neg
sbb
jmp
mov
nop
mov
daa
insl
xor
cmp
push
pop
dec
lock
jge
mov
aad
mov
fabs
out
lock
enter
test
lret
push
fwait
mov
shl
sbb
cmp
shlb
scas
mov
sti
outsb
cmp
pop
jo
stos
call
sahf
icebp
mov
and
out
mov
sbb
sahf
xor
xchg
sub
gs
push
pusha
add
popf
lds
aas
sar
xchg
adc
mov
lret
call
mov
dec
push
inc
inc
and
out
mov
dec
adc
or
cmp
jl
stc
in
ja
popf
xchg
in
cld
xor
in
push
mov
out
ds
dec
ret
dec
pop
add
sbb
mov
shll
lcall
pusha
ja
jle
add
mov
push
or
mov
xor
sbb
cmp
add
jmp
std
test
push
mov
out
je
xor
sub
push
pop
fwait
adc
xchg
sbb
mov
xor
iret
stc
hlt
es
out
jl,pt
xadd
and
dec
in
xchg
or
inc
sbb
mov
adc
out
loope
inc
repz
stos
xchg
jecxz
insb
notb
ja
xor
lret
inc
hlt
in
xor
insb
frstor
and
movsl
inc
std
push
fdivr
adc
mov
add
mov
repnz
aam
out
jle
mov
xor
fwait
lock
daa
jecxz
cld
push
mov
push
out
jnp
sub
sbb
lock
sbb
pushf
mov
inc
nop
adc
sbb
dec
cmp
sbb
mov
aam
inc
jns
xchg
xchg
xchg
in
in
mov
enter
xchg
adcb
fmul
arpl
stos
fs
cs
cmp
cmp
lods
push
push
and
push
mov
push
xchg
out
in
fs
fwait
testl
jmp
add
mov
pop
test
lcall
push
and
ret
arpl
in
push
shl
mov
jp
fisttps
fcom
addr16
mov
test
pop
lahf
lock
lods
int
mov
cmpsb
mov
mov
sbb
mov
outsl
notb
jne
std
xor
leave
xchg
aas
cmp
arpl
loop
mov
add
xorb
loop
add
outsl
and
sti
out
js
insl
mov
cmp
test
rcll
daa
add
leave
jecxz
cmpsl
adc
ret
push
mov
insl
and
fcoms
repz
ficoml
xlat
sbb
add
andb
mov
test
pop
stc
cmp
movq
push
push
mov
incb
jp
cmovnp
mov
mov
mov
outsl
scas
out
and
pop
dec
into
pushf
repz
call
inc
icebp
out
mul
sub
data16
outsb
xchg
dec
pop
sbbl
aas
dec
add
lea
cmp
mov
ret
add
mov
clc
add
fstps
inc
cmp
jo
test
movsb
test
mov
dec
insl
notb
and
push
mov
imulb
ss
pop
pop
loopne
mov
xor
cwtl
mov
ds
xchg
dec
mov
cmpl
scas
cmpsl
inc
clc
paddusw
test
insb
jmp
stc
sarl
out
andb
cld
mov
pop
nop
mov
les
or
std
pop
out
xor
xchg
stos
inc
fimull
or
sarb
lret
arpl
ret
enter
cmp
jnp
adc
sahf
subb
leave
rep
popf
aad
push
rolb
and
data16
or
pusha
out
pop
cli
and
jge
rorb
sub
sbb
mov
pop
inc
testl
add
pushf
loop
scas
mov
push
mov
push
inc
loop
cmc
int
push
mov
mov
or
out
xor
loopne
jb
sub
cmpsb
inc
inc
jmp
call
rorb
in
in
push
adcl
pop
xchg
sbb
fsub
sti
push
cli
test
and
test
xorb
incl
jnp
pavgw
adc
dec
lcall
in
mov
cltd
aas
xchg
sub
lahf
mov
mov
repz
fcom
hlt
addr16
js
pop
addl
sbb
push
jns
sbb
mov
stc
push
sub
dec
aaa
imul
cmpsb
mov
vpavgb
xchg
lcall
cmp
xor
pop
mov
add
push
adc
nop
and
cmp
lds
stc
push
or
call
movsl
in
xchg
lods
divl
mov
or
inc
xchg
push
and
or
xchg
out
or
sbb
out
and
icebp
lock
and
outsb
pushf
clc
insb
shlb
dec
xor
jecxz
fwait
jnp
fsubs
rcrb
or
and
stc
jl
and
std
in
leave
mov
jmp
rorl
or
bound
mov
out
jmp
sbb
mov
popa
lock
orb
insl
aaa
xor
aaa
data16
dec
sbb
mov
sahf
inc
xchg
in
or
jno
pop
add
or
sub
lret
mov
insb
sbb
cmp
xchg
in
daa
mov
jno
mov
dec
jns
and
pop
jne
or
inc
rcll
inc
dec
rcrb
sti
dec
stc
aaa
lock
jecxz
jae
loope
mov
inc
movsl
push
lret
mov
jb
add
add
cmp
and
imul
cmc
mov
arpl
cmc
mov
push
call
or
sub
mov
frstpm(287
cli
xor
dec
imul
mov
aad
pop
scas
out
mov
xchg
xchg
pop
push
lret
xlat
outsb
sbb
push
aam
fidivl
dec
imul
cmpsl
add
mov
add
push
lods
jg
test
xchg
dec
inc
js
add
inc
or
cmpsl
inc
push
and
xchg
inc
aaa
pop
mov
cmpsb
inc
mov
hlt
sub
inc
dec
mov
and
mov
xor
jae
or
push
push
fucom
add
and
ret
sbb
lahf
test
sbb
mov
arpl
aam
testb
jae
imulb
mov
bound
cs
sub
cmp
cmp
mov
xchg
daa
inc
rcrl
jne
xchg
ljmp
or
mov
mov
testb
xchg
and
bound
xlat
mov
rcl
and
fstpl
cs
loopne
dec
insb
sarl
scas
in
xchg
push
or
sbb
xorl
lods
or
push
pop
imul
data16
subb
pop
in
and
lock
cmpsl
call
clc
imul
lods
mov
adc
ret
lods
das
or
aam
mov
sarb
jo
pushf
add
dec
aad
mov
imul
rcrl
push
jae
lds
xor
loope
fnstcw
aaa
stos
testl
imul
sbb
push
or
ss
insl
adc
insb
or
push
mov
outsl
xor
bound
mov
mov
es
or
ret
scas
nop
test
shl
mov
imul
iret
pop
lahf
daa
or
xor
adc
fs
mov
pop
popa
xchg
xchg
adcl
les
ret
sub
adc
xchg
lcall
cwtl
mov
sti
lock
popf
or
mov
lea
sar
inc
mov
out
cmp
inc
andb
int3
scas
shll
pop
insl
mov
pusha
cmp
push
xor
and
jp
fisubl
mov
cld
inc
aas
insb
mov
lahf
xchg
ffree
push
or
popf
addr16
jle
fnstsw
out
insl
jmp
jo
leave
insb
xchg
mov
jne
sbb
mov
sub
inc
in
mov
sbb
dec
enter
testl
into
ljmp
sbb
inc
mov
pushl
add
xor
push
jb
outsl
mov
sti
sbb
into
xor
mov
cmpsb
in
cld
ret
out
push
inc
add
int
jmp
scas
test
add
dec
pop
inc
sub
sti
fistpll
xchg
popf
sbb
scas
addl
movsb
and
add
mov
jnp
jae
andl
inc
cmpsb
nop
adc
sar
enter
add
push
js
inc
jns
scas
pusha
adc
or
or
rcl
lcall
mov
shrb
cs
lods
jbe
mov
ret
int
mov
in
lret
and
mov
xor
push
sub
xor
arpl
cmp
mov
cmpsl
mov
scas
mov
jae
and
jno
je
bnd
in
stos
mov
stos
in
inc
out
cmp
sbb
stos
shlb
xor
movsb
aaa
lock
scas
lods
cmpsl
hlt
call
out
mov
mov
lds
ret
pop
stc
loopne
adc
jne
popa
push
popf
loopne
js
xlat
std
in
int
fcompl
dec
mov
sub
stos
add
mov
mov
stos
stc
bound
paddusw
cs
movsb
test
lock
sub
shll
add
inc
xor
mov
popa
pushf
pop
add
arpl
lds
jnp
fstl
jae
dec
inc
jmp
push
sub
cmp
mov
aas
fs
divb
sub
inc
call
dec
mov
xor
xor
inc
push
jg
pop
push
jo
inc
push
mov
add
out
cmp
mov
enter
lret
and
push
sbb
ret
mov
and
pop
mov
cmpsl
mov
div
sbb
daa
stos
std
aam
dec
xchg
shlb
adcl
test
daa
es
lcall
das
notl
stc
aad
data16
lret
mov
std
aas
clc
shll
les
or
adc
sub
imul
cmp
mov
or
xchg
divl
mov
pop
rcl
jne
push
sub
lock
loopne
xchg
icebp
popa
jmp
aaa
dec
jae
cwtl
or
sub
rcrl
mov
mov
fs
hlt
repnz
cmc
lret
in
jns
xchg
aad
in
xchg
cmp
jle
adc
cmc
mov
xor
int3
xchg
push
or
mov
std
clc
cld
jmp
or
jge
je
or
or
popl
sbb
mov
push
dec
add
adcl
mov
push
lret
fimull
sub
int
pop
test
pop
std
inc
repnz
fs
loopne
arpl
aaa
pusha
xchg
sub
inc
mov
int
iret
fidivrs
add
movsb
repz
xchg
add
or
cmpsb
sbbb
fsubrs
gs
fiaddl
push
lcall
pusha
int
iret
mov
xchg
lods
lret
out
pop
sub
ds
xchg
lcall
inc
hlt
cmpl
xchg
mov
sub
pop
stos
sbb
orl
movsb
lcall
sbb
jecxz
lods
shl
jge
xchg
mov
std
jle
repz
xchg
cmpsl
popf
mov
cmp
sbb
cmc
mov
arpl
push
dec
and
int3
sub
out
cltd
aad
movsl
and
mov
int
dec
add
xchg
out
adc
dec
gs
sbb
xor
xchg
insb
add
in
repnz
mov
fcmovbe
and
inc
rol
dec
jg
stos
push
and
arpl
rcll
jge
inc
das
lock
leave
sti
repnz
shrl
xchg
imul
add
sbb
xchg
out
stos
lcall
jnp
jge
nop
and
das
push
mov
pop
adc
add
notb
int3
test
add
leave
pop
jne
sub
fmuls
ss
mov
shlb
xchg
push
in
xorps
subb
jo
jle
orb
in
loop
lds
cmp
xchg
xchg
loope
jo
or
sub
mov
and
jl
lds
push
das
mov
sbb
imul
out
mov
movsl
mov
and
cmp
inc
cmp
jne
daa
xchg
add
fidivrl
push
inc
scas
xchg
pop
test
stos
mov
mov
and
add
sar
rorl
fdivs
imul
and
outsb
inc
cmp
push
sub
mov
cmpsl
dec
push
sbb
imul
add
pop
mov
sti
pop
ja
mov
aad
aas
loopne
cmp
std
lahf
nop
addr16
movsl
jno
iret
inc
xor
jp
test
jge
pushf
add
jo
aas
push
push
add
fidivrl
xor
mov
xchg
xorb
pop
repnz
scas
sbb
xor
iret
cltd
jbe
notl
mov
jle
iret
mov
mov
xchg
xlat
nop
add
and
and
push
sbb
and
mov
lods
cmc
inc
mov
jge
inc
std
sub
xor
sub
lret
jg
push
std
mov
cmpsl
ss
aaa
es
pusha
pop
in
cmc
in
or
daa
jmp
popf
inc
stos
push
fcoms
aam
js
cs
mov
pusha
ret
xlat
xchg
mov
push
fwait
sub
frstor
sbbb
adc
adc
xchg
nop
fnstsw
adc
lahf
xor
fidivrs
cmp
test
pop
push
insb
ret
int
and
out
arpl
test
xchg
out
popf
sti
and
shll
repnz
clc
vminps
sbb
sub
mov
and
push
nop
mov
in
repz
out
sti
lods
lret
fisubs
mov
inc
jg
mov
mov
xchg
jge
nop
dec
repz
shll
stc
mov
inc
popf
out
pop
addr16
push
outsb
shll
loopne
shr
or
test
cltd
jecxz
pop
mov
cmp
sub
lods
jmp
ljmp
gs
sbb
dec
push
inc
icebp
xchg
xchg
jb
mov
adc
ja
cmp
lret
imul
push
mov
mov
lret
mov
and
test
mov
mov
cmp
call
push
jmp
mov
cmp
aam
xchg
fsubs
mov
mov
and
std
in
mov
jl
cld
data16
sbb
push
testl
ret
and
addl
fmull
or
mov
push
pop
mov
pushf
sbb
mov
test
pop
sbb
mul
add
xor
add
cmp
cmp
scas
outsb
xlat
dec
push
nop
movzbl
out
daa
xor
or
xchg
fnsave
lret
lods
and
xor
popa
rcrb
xor
jge
adc
jmp
stc
faddl
add
adc
sti
shlb
jl
nop
ja
lock
cmp
sbb
pop
jecxz
cmp
mov
test
xlat
cld
outsl
add
add
jne
push
mov
bound
pusha
mov
out
dec
in
dec
add
jg
iret
in
mov
pop
sahf
or
popf
loop
fldl
pop
testb
inc
pop
fldenv
push
xchg
iret
pop
jg
inc
ficoms
rcl
fbld
push
push
mov
jb
sbb
jno
adc
push
out
cmpsl
sub
dec
push
outsl
fdivr
or
rcrb
xchg
incl
push
add
pop
mov
inc
xlat
and
les
mov
stos
mov
or
int3
iret
test
daa
adc
arpl
addr16
es
clc
xchg
add
insl
push
mov
ja
mov
rclb
pop
aad
insb
mov
and
cmc
mov
jl
adc
and
push
mov
xchg
cmpsl
adc
mov
jns
mov
fwait
js
addl
dec
scas
adcl
rcrl
xchg
repz
jb
jb
dec
movsl
dec
insb
adc
xor
test
es
and
stos
out
fiaddl
mov
cmp
les
cmp
ljmp
jecxz
movsb
dec
rcr
push
test
notb
cwtl
adc
cwtl
popa
repnz
cmc
test
insl
fnstcw
mov
add
add
adc
sbb
inc
icebp
mov
sbb
mov
enter
pop
es
pop
xor
push
pusha
cmpsb
adc
inc
adc
cmp
stos
jno
mov
lret
xor
gs
inc
or
cmpsl
pop
xchg
sub
inc
movsb
js
xchg
sub
adc
psllw
iret
and
mov
sbb
shlb
cmp
std
cltd
ficoms
add
push
jmp
fisttpll
call
mov
mov
test
stos
inc
jnp
and
cmp
mov
fwait
ja
jbe
mov
pop
fcoml
out
cmp
jns
shll
leave
jmp
xchg
xor
scas
sub
ss
into
pop
mov
das
mov
mov
mov
insl
enter
sarl
addr16
or
push
shll
xchg
icebp
mov
mov
sahf
test
lds
insb
jge
pop
lea
pop
in
and
xor
and
cwtl
data16
stc
lea
lcall
jp
orl
mov
insl
xchg
daa
insb
std
dec
jae
xchg
mov
in
xor
ja
clc
icebp
std
and
lret
flds
cmp
rcll
inc
fdivs
iret
addb
pop
pop
add
repz
pop
sbbb
sbb
testb
push
sbb
push
jl
ret
arpl
roll
xchg
push
mov
les
add
push
sub
jnp
popa
gs
faddl
pop
push
xor
push
add
adcl
mov
aaa
shl
inc
mov
inc
cmpsb
jl
sti
jmp
popa
xor
xor
pop
out
stos
mov
call
jp
test
insl
mov
bound
dec
aam
push
je
mov
push
sbb
push
insb
notb
push
cwtl
cmpl
fs
mov
call
xchg
jbe
xchg
ret
mov
ret
jae
jnp
enter
pusha
imul
mov
mull
xchg
inc
inc
lret
in
mov
jbe
jno
out
pop
mov
jge
stos
dec
jp
cmpsl
jg
outsb
pop
mov
xor
jae
mov
insb
aas
push
mov
scas
lods
mov
clc
test
test
xchg
inc
sub
lock
popa
or
jno
sbb
fsubl
scas
mov
loop
mov
packsswb
xchg
or
add
icebp
xor
movsb
repz
divb
jmp
test
ljmp
ret
cmpsl
mov
push
in
lcall
cltd
jnp
inc
add
mov
xor
lods
xor
xchg
fimull
dec
jbe
mov
fisttps
sahf
jmp
cmp
cltd
pop
sub
xchg
mov
and
xchg
inc
movl
mov
mov
subl
mov
out
ss
add
cld
dec
popw
sbb
mov
mov
mov
mov
sbb
pushf
mov
inc
xor
mov
sub
addr16
sbb
and
fs
fucomi
xchg
lret
movsb
sbb
in
test
xor
xlat
sbb
fldenv
jmp
rcll
cmpl
dec
mov
cmp
jp
add
push
pop
mov
cmp
and
adc
dec
mov
bound
sub
stc
aad
mov
sub
cli
fisubs
roll
arpl
dec
pop
pop
sti
mov
lock
xchg
and
or
xchg
popf
cmp
ret
jl
cmp
pop
push
loop
lods
xor
testl
jb
cwtl
movsl
in
fisubs
jae
xlat
int3
mov
mov
add
divb
adc
xchg
sarb
loopne
int3
adc
movsb
xchg
adc
inc
mov
push
bound
fs
jno
cwtl
repnz
punpckhbw
cmp
loop
mov
movb
lahf
fsubp
mov
cmc
sarb
add
test
js
push
test
insl
cmp
mov
rcpps
lea
pop
push
pop
push
lods
xor
mov
xchg
sub
and
dec
sbb
in
loop
pop
sub
inc
cmp
push
mov
cli
sbb
jle
test
inc
mov
jmp
ror
adc
cmc
je
sahf
mov
lcall
push
push
mov
or
loope
pop
aad
mov
adc
loopne
rcll
stos
cwtl
adc
and
jp
xor
es
add
flds
ucomiss
cld
fwait
push
push
imul
xchg
pop
xor
push
sub
dec
pop
imul
fcomip
xchg
pushf
mov
sbb
adc
ficoml
and
jle
mov
arpl
cltd
sbb
jns
aad
adc
call
into
dec
jecxz
adc
imul
push
sub
sbb
xor
cmc
cmpsb
ficoms
sti
dec
inc
xor
or
fwait
cs
push
lods
scas
in
mov
cmp
jae
inc
pop
xor
shll
sbb
pushf
pop
inc
xor
jnp
push
jbe
pop
pop
fisubl
insl
lcall
adcl
stc
cmpb
inc
lahf
ss
andb
ficomps
sbb
push
cmp
xchg
les
cmp
scas
cli
cmp
pop
inc
mov
push
adc
and
and
jg
xchg
imul
jns
ljmp
and
jmp
loop
rcl
pop
std
int
jb
hlt
pop
xchg
sub
jae
js
xchg
sub
pop
out
mov
push
test
dec
out
sub
xlat
es
jl
loopne
loop
hlt
vaddss
inc
pusha
enter
sbb
in
xor
xchg
xor
sarb
fcoml
mov
add
adcb
daa
jno
jg
shrl
dec
xchg
inc
rclb
dec
outsl
add
or
push
cwtl
leave
and
mov
cmp
dec
jae
pop
mov
mov
dec
inc
repz
push
push
add
movsb
xchg
xchg
test
jle
mov
add
cmpsl
fsub
and
xor
outsb
push
push
mov
jb
jbe
sbb
aaa
push
movsb
pop
cmp
aam
push
pop
xchg
xor
add
out
in
jle
sub
jmp
movsl
xor
adc
rclb
lret
es
cmp
jmp
icebp
or
popa
movsb
bound
push
packssdw
in
roll
jne
and
inc
mov
fs
sbb
sbb
arpl
arpl
fs
inc
push
fbstp
sub
ret
test
aaa
sub
insb
stos
js
mov
shrb
lock
lret
mov
push
clc
push
outsl
and
fnstenv
repz
xchg
cmp
pop
fmulp
xor
lret
test
pop
jnp
mov
cmp
and
orb
push
push
cmp
adc
pop
hlt
scas
mov
stos
subb
ljmp
cmp
xchg
jnp
or
inc
movsl
or
aad
fadds
xchg
xor
push
push
xor
lret
rep
out
push
pushf
addr16
sbb
mov
std
test
jnp
fdivr
gs
xlat
in
fiaddl
repnz
adc
mov
sbb
fwait
mulb
imull
mov
xchg
sbb
cmp
leave
inc
in
add
or
sbb
inc
test
movsb
in
fildll
enter
xchg
repnz
inc
dec
subb
stc
ds
sbb
pop
fdivrs
sbb
jle
push
loop
sbb
imul
xchg
cs
and
ror
fcomps
lds
sbb
dec
add
inc
loop
test
rcll
sbb
ret
push
fstps
shl
xchg
lods
cmpsl
test
outsb
xchg
xchg
xchg
cmpsb
imull
push
sub
es
loopne
das
outsb
sbb
stc
test
mov
jae
in
sbb
cmp
test
jb
sbb
popl
in
fidivl
rclb
xor
mov
pop
cmp
sub
lods
mov
and
sti
pop
and
push
popf
test
popa
jl
outsb
or
and
lea
dec
jo
xchg
arpl
lret
js
jecxz
hlt
add
aam
adc
rcrl
jmp
jecxz
adc
cld
xor
test
xchg
scas
dec
movl
ss
fbld
inc
push
loopne
call
js
jmp
sahf
lods
sti
sub
pushf
out
pushf
xchg
loope
xor
aaa
add
stos
es
test
jae
xchg
pop
mov
fnop
andl
jp
pop
mov
add
mov
or
push
lea
fcomps
sbb
jbe
xor
and
sti
sbb
add
push
push
test
movb
loopne
inc
jns
mov
notl
push
lds
jo
aaa
xchg
sub
not
jmp
xchg
dec
outsl
cmp
xchg
or
xchg
sarl
xchg
xlat
mov
stc
inc
aaa
jmp
xchg
or
ljmp
imul
xchg
adc
push
pop
pop
xchg
cmp
cmp
cmp
inc
int3
stos
inc
push
adc
xchg
sub
pop
insb
and
or
ja
jae
pop
test
fbld
roll
sub
in
xchg
addr16
adc
or
mov
stc
add
ret
frstor
int3
ret
or
lahf
cmc
nop
pop
push
pop
or
cmpsb
or
add
jns
andb
push
in
xchg
sbb
sub
ss
add
int
jae
aad
inc
or
mov
add
test
insl
push
push
cltd
shrl
xlat
push
inc
pop
adc
push
ds
es
ss
int
and
jbe
js
sbbb
cmp
sbb
insb
shrb
sar
pushf
repz
or
sub
popf
mov
mov
xchg
test
repz
cmp
sub
popf
or
shlb
mov
addl
or
andb
jb
icebp
repnz
dec
repz
xchg
xor
pop
xchg
in
test
adc
jmp
mov
imul
lods
fldcw
aad
in
lods
in
and
sub
xor
mov
mov
fildll
cmp
bound
xchg
stos
mov
insb
in
sub
xor
dec
or
add
ffree
cli
xor
xchg
pop
inc
outsb
faddl
stos
xchg
pusha
mov
xchg
repz
int3
testb
incb
popa
sbb
enter
shll
and
sbb
pop
jo
lds
int3
fsubrl
pushf
adc
jmp
xchg
insb
add
fsubrs
push
sub
test
jne
push
loope
dec
out
adc
out
fisttpll
popa
xchg
xchg
push
xor
dec
and
ja
je
cmp
and
pusha
jp
adc
std
outsl
repz
adc
subl
enter
loope
insb
loop
leave
xchg
adc
cmp
sub
jb
dec
lods
notl
push
subl
adc
cli
fsubrl
lods
insl
cmp
test
mov
or
leave
jne
inc
dec
fwait
jge
movb
mov
sub
cmp
std
sbb
push
xchg
jle
xchg
xor
test
dec
iret
cmp
gs
dec
not
fs
mov
sub
shrl
cs
xchg
mov
mov
paddb
enter
mov
repnz
cltd
call
popa
out
mov
push
and
mov
shr
push
mov
test
fdivrs
adc
mov
sub
pop
icebp
pop
icebp
daa
lods
push
cmpsl
out
scas
cmp
and
xchg
in
sub
fiadds
and
mov
xchg
push
aaa
sbb
xor
cmp
in
aam
hlt
aad
push
cmp
mov
push
fs
mov
adc
aad
mov
jno
in
jne
adc
dec
fisubrl
mov
dec
cmp
lods
or
or
inc
idivl
dec
out
cli
nop
inc
mov
ds
aad
bound
add
cld
mov
or
pop
push
sbb
lock
pop
add
jp
in
push
cmp
jo
out
stc
clc
ds
icebp
ja
stos
shlb
dec
inc
jo
fmulp
ret
ds
xchg
cmpsl
inc
mov
add
mov
pop
inc
pop
fsubs
sub
outsb
mov
adc
aam
lea
pop
xchg
lea
adc
pop
xchg
mov
lcall
pushf
sub
les
pushf
xchg
ret
push
out
cld
js
into
or
xchg
cmpsl
push
or
push
outsl
push
or
cmp
mov
lods
hlt
mov
rep
mov
hlt
adc
movsl
loopne
cmp
mov
mov
add
xchg
xor
loopne
dec
les
pusha
xchg
and
cmp
fnstcw
fisubs
sahf
xchg
mov
push
adc
sbb
mov
enter
xor
inc
inc
push
sahf
jp
mov
xchg
mov
xor
daa
sub
lahf
imull
xchg
pop
jp
xor
mov
push
lcall
mov
sub
in
faddl
adc
fcomps
jnp
xor
add
cmp
sub
inc
aam
xor
pop
rdmsr
push
pop
push
dec
jle
push
push
cmp
jne
outsl
mov
dec
add
push
inc
add
xor
movb
jae
xor
out
stc
lahf
inc
rdmsr
xor
fwait
popa
mov
es
jp
aas
stos
nopl
lock
rorl
push
jns
cmp
push
xchg
lea
fs
jne
pop
mov
data16
inc
stos
scas
insb
out
sub
dec
jno
push
imull
dec
rorb
addr16
xchg
pushf
sub
pop
or
stc
pushf
mov
inc
fs
inc
aaa
jno
popa
pop
mov
rol
test
into
sub
pop
in
out
mov
adc
inc
rcrl
pop
and
adcl
jmp
xchg
pop
into
int3
repz
adc
or
lods
jp
xor
cli
dec
mov
je
ds
pop
mov
adc
iret
dec
into
mov
repz
push
jl
icebp
push
out
mov
cs
dec
xor
pop
bound
sbb
lods
or
insb
mov
sub
dec
xchg
mov
je
test
inc
inc
sbb
inc
enter
movl
loopne
push
cli
inc
into
shrb
popfw
sub
jne
test
jns
pop
cmpsl
in
in
xor
in
push
aad
sub
das
jmp
das
inc
mov
repz
push
je
out
fidivrs
je
mov
fldl
or
jae
ror
data16
inc
ljmp
cwtl
pop
xor
test
push
xlat
adc
mov
imul
cmp
orb
into
subl
movsl
imul
xor
in
insb
add
enter
dec
repnz
xchg
jecxz
stos
out
adc
pusha
lods
mov
fcoms
daa
int
in
ret
cmp
jo
sub
cmp
rol
orl
pop
dec
mov
fldenv
addr16
fstpt
lret
and
in
aas
adc
fwait
push
xor
test
jno
ret
orl
xchg
mov
mov
leave
incl
mov
pop
mov
cmp
imul
cmp
jp
and
fnstsw
mov
jg
xchg
sbb
pop
push
fwait
jbe,pn
out
fildll
mov
out
jne
mov
int3
incb
aaa
fsubl
jno
mov
das
aad
arpl
mov
and
jge
repnz
dec
push
repnz
cmp
pop
pop
enter
imull
inc
mov
dec
cltd
outsl
imul
sub
mov
sahf
into
xchg
or
iret
mov
ret
dec
lock
cmp
movsl
loopne
mov
aam
popf
inc
sbb
ret
push
das
mov
repnz
lods
icebp
and
add
jno
fldt
or
inc
sbb
sub
and
stos
push
cmpsb
lea
insl
dec
jmp
sub
dec
fs
jne
in
adc
mov
lods
mov
sub
pop
pop
jmp
test
fdivrs
sub
outsl
xchg
lret
popf
stos
aas
test
xchg
shll
aaa
xchg
fnsave
cmpsl
pop
hlt
mov
mov
or
xor
pop
pop
sub
mov
movd
add
addb
int
aas
lahf
adc
mov
stos
sbb
add
in
movl
xor
add
cmp
sbb
pop
dec
inc
and
pop
pop
mov
stc
ret
inc
add
test
inc
ret
mov
outsb
ret
data16
xor
fucomip
sbb
push
mov
inc
add
test
popa
jae
pop
inc
cmp
lcall
sub
mov
push
push
aas
pusha
inc
pop
movsl
dec
sbb
jbe
cmp
in
and
add
les
and
outsl
shrb
dec
insb
cmpsb
and
mov
sub
xorl
jmp
mov
movnti
fdivp
jmp
and
jb
shll
inc
sub
inc
sbb
jg
mov
mov
mov
adc
adc
pop
jg
pop
push
jp
mov
add
ja
cmp
and
sub
loop
jl
cmpb
pop
xchg
dec
aam
add
iret
mulb
sbb
call
scas
mov
or
add
fwait
push
cli
push
test
daa
mov
push
add
add
movsl
mov
sub
dec
xchg
out
fisubs
ret
add
and
jecxz
jae
ret
repnz
test
aaa
inc
icebp
mov
xor
sbb
rcrl
lds
les
aam
add
mov
loop
pop
mov
fadds
push
pop
push
lods
aad
stos
ja
and
push
data16
insb
aaa
scas
xchg
adc
inc
push
in
push
lds
mov
sub
pushf
sub
jge
and
cmpsb
cmp
jge
mov
cmp
loopne
push
icebp
pop
jl
aas
mov
enter
xor
or
mov
add
pop
aaa
mov
loopne
cmp
shll
jb
insl
popf
bound
mov
mov
push
sbb
bound
imul
mov
movsl
icebp
mov
test
das
pop
jbe
dec
fnsave
rol
mov
aaa
jmp
cmpsl
les
dec
xchg
push
dec
mov
imul
hlt
notb
or
mov
adc
xor
shrb
xor
dec
dec
xor
nop
divb
xchg
scas
aas
push
adc
jge
pop
nop
lods
mov
push
outsl
mov
out
pusha
loop
inc
dec
pop
aam
in
in
pusha
int
std
mov
mov
push
andb
insl
jp
add
das
pop
test
xor
repz
loopne
xor
mov
jle
xor
cli
xchg
in
lods
loopne
pop
outsb
sub
call
cmpsl
adc
adc
ds
mov
inc
cli
add
pop
push
push
push
fwait
xchg
and
aad
into
ret
push
mov
mov
push
xor
nop
lods
jl
sub
int3
int
cmp
sti
push
jae
outsl
mov
inc
push
jns
cmp
mov
and
xchg
popf
popf
sub
loope
insl
or
sbb
sub
fyl2xp1
adc
imul
dec
pop
movsb
sbb
in
mov
popa
je
sbb
push
lcall
jae
std
iret
push
push
inc
ret
js
or
pusha
lods
movsl
mov
mov
pushf
adc
and
fcoms
aaa
ss
movsb
xchg
cld
pop
dec
mov
outsl
dec
sahf
hlt
add
mov
popf
xchg
pusha
dec
decl
mov
cs
data16
imul
mov
lret
mov
push
inc
stos
imul
outsl
or
dec
inc
popa
mov
outsb
adc
xchg
ja
add
scas
push
sbb
mov
shrl
shr
xor
mov
insl
pop
ljmp
rcrl
inc
adc
jp
mov
gs
pop
fcompl
add
stc
mov
mov
cmp
xchg
shl
and
in
and
push
push
mov
jmp
mov
test
ljmp
or
mov
lahf
jl
push
js
jp
cld
push
pop
int
push
jno
addb
adc
cmp
jge
cltd
repz
mov
add
cld
or
ret
mov
xor
mov
jmp
dec
into
jg
out
jns
xchg
inc
push
pop
ret
dec
mov
orb
popa
imul
mov
jle
adc
cltd
inc
cmpsb
leave
sbb
aaa
mov
movsb
popf
push
or
jno
inc
pop
cld
push
dec
sub
pop
inc
xlat
das
lock
roll
inc
ja
loop
filds
adc
ds
or
mov
test
push
dec
or
out
addr16
repnz
xchg
test
fs
xchg
xchg
and
mov
test
daa
adc
sbb
sar
push
or
dec
stc
fmuls
scas
into
xor
mov
jl
fsubl
cltd
fdivrs
mov
test
dec
push
outsb
cmp
int3
fnstsw
call
or
jmp
nop
lods
jg
idivl
rorl
das
push
xchg
mov
and
int
xor
cmp
mov
arpl
movsl
fiadds
shrl
fstl
stc
pop
push
cmp
add
sahf
mov
xchg
mov
aad
sbbl
fwait
test
loop
js
cmp
aam
jo
hlt
scas
inc
cmpsl
cmpsb
jnp
shlb
jp
lcall
divl
jo
mov
adc
mov
jae
xchg
lods
fwait
pop
mov
inc
in
roll
test
xchg
insl
sti
lods
pop
jmp
cwtl
lret
iret
mov
inc
imul
mov
stos
xor
push
sub
aas
pop
hlt
out
push
jg
test
ljmp
mov
clc
and
cmc
lock
dec
fistpll
sti
cmc
push
repnz
xor
ret
outsb
js
mov
sti
sahf
lds
test
push
sub
jle
mov
xchg
lea
push
mov
sub
lcall
cmp
cwtl
es
dec
and
js
push
loop
mov
pop
loop
mov
mov
adc
jle
mov
ljmp
xchg
cli
loopne
ret
mov
xor
pop
clc
jg
rol
aad
cld
popf
jmp
jae
cmp
cs
and
push
sub
in
add
inc
xchg
push
or
rcrl
cmpsl
pop
cmp
fmul
inc
arpl
lock
jnp
jmp
insl
dec
ja
lods
dec
aas
call
enter
sbb
roll
dec
imul
test
lcall
xchg
adc
mov
lods
mov
jae
xchg
cltd
loopne
inc
imul
ja
and
sub
subb
jmp
push
insl
sub
sbb
enter
mov
jmp
subb
lds
dec
movsb
call
pop
xchg
dec
xor
push
dec
out
jae
stos
scas
jmp
cwtd
push
xchg
fcmovb
mov
sub
add
pushf
shr
xchg
xchg
int3
xchg
lods
lds
aas
add
into
mov
cmp
lea
int3
add
pop
pop
push
mov
mov
or
cwtl
js
repnz
int
fnclex
fildll
mov
inc
mov
inc
push
or
mov
movsb
ljmp
sbb
cmpsl
inc
pop
pushw
into
lcall
aam
scas
add
sub
xchg
xchg
std
in
jae
leave
mov
stos
xchg
push
inc
fwait
sbb
dec
lods
dec
fdivl
push
stos
stos
mov
cli
sbb
stc
push
pusha
nop
cld
scas
push
adc
in
mov
dec
ret
push
and
daa
ja
dec
clc
sub
cmp
fs
shlb
pop
and
jo
jecxz
insb
pop
jge
cmpsl
leave
pop
mov
sbb
shlb
mov
adc
adc
mov
out
je
mov
mul
outsl
ljmp
mov
nop
decb
out
dec
test
inc
or
cmp
ret
in
sahf
inc
pop
jl
test
aas
pop
pop
jmp
outsb
sub
mov
and
in
and
and
sahf
aam
jmp
fwait
dec
or
mov
loope
stc
mov
jmp
sub
aam
pop
adc
push
mov
jae
push
push
enter
divl
icebp
pop
mov
in
mov
ret
gs
sarb
sbb
cli
scas
and
mov
xor
cmpsb
jl
xor
pop
ds
sub
jnp
cmpsb
cmpsb
xchg
test
popf
outsb
orb
loopne
test
and
xchg
dec
cmp
ror
or
sub
push
push
repz
sub
es
inc
test
jl
sub
sub
notb
pop
test
enter
mov
xlat
mov
aaa
enter
mov
mov
shrb
ret
sub
sub
mov
and
rorb
jne
iret
std
mov
lahf
cs
out
cmp
inc
stos
push
jne
pop
out
inc
push
mov
push
gs
xchg
lds
xchg
popf
js
lret
fbld
inc
mov
sbb
pop
movsb
mov
dec
inc
insl
andb
mov
sbb
inc
xchg
and
mov
push
stos
es
or
jp
rclb
or
aad
stc
les
cmp
stos
mov
mov
sub
insl
outsb
aaa
cmpsl
jg
mov
xchg
cmp
jle
xorb
xchg
push
pop
adc
std
ret
and
call
jge
inc
xor
pop
and
js
popf
push
cmpsb
leave
cmpsb
dec
mov
jne
jne
test
or
dec
sbb
inc
dec
cmpsb
adc
xchg
jecxz
mov
cmp
je
dec
outsl
sahf
imul
punpckldq
dec
cmp
cs
cmp
mov
push
out
lret
mov
in
push
pop
xchg
xchg
or
mov
mov
mov
js
inc
jp
out
push
mov
pop
adc
cmp
test
insl
faddl
cmp
mov
iret
punpckhdq
icebp
data16
xchg
fs
je
loope
xor
jge
outsl
sahf
add
xchg
lcall
sahf
jae
inc
xlat
sub
push
leave
mov
cmp
or
dec
mov
leave
xchg
sarb
mov
add
test
cmp
sbb
das
iret
ret
sub
lods
daa
mul
scas
inc
cmp
ljmp
shll
repnz
xchg
fsubrl
jo
adc
mov
loop
ja
jp
push
mov
xor
push
mov
les
add
adc
or
stos
jo
shlb
arpl
xchg
push
cmp
xor
lods
lret
ja
mov
inc
lock
push
adc
xchg
cld
push
mov
test
xor
jg
xor
pushf
imul
mov
stos
int
add
jecxz
rcll
jg
cmp
xchg
and
cmp
mov
pop
in
jl
and
mov
sbb
push
jbe
and
sarl
cmp
clc
mov
icebp
arpl
adc
mov
daa
inc
out
dec
das
sbb
adc
ds
nop
add
and
movsl
aad
inc
testb
add
and
cs
push
fidivrl
and
in
cmp
rorl
iret
jb
or
sub
mov
test
adc
out
dec
lahf
mov
sbb
addb
jge
test
js
hlt
leave
sbb
jne
movsb
xchg
incl
lcall
lret
mov
fwait
push
mov
add
cli
test
aas
nop
adc
push
test
scas
pop
adc
mov
or
adc
and
mov
call
dec
loope
in
cmp
jg
insb
dec
insb
pop
popa
fisttpl
mov
mov
in
jne
adc
scas
lock
adc
mov
xor
jl
filds
push
mov
xchg
bound
adc
xor
or
into
mov
aas
cmpsb
mov
mov
or
das
dec
ret
jne
sarl
xchg
push
push
adc
cli
call
ljmp
add
push
mov
adc
rcr
fs
jae
xchg
pop
mov
xchg
adc
jb
jb
aad
mov
xchg
fcomi
in
fstpt
mov
inc
movb
shrl
or
jb
ljmp
mov
movsl
out
sbb
mov
fs
adc
ret
out
jno
push
sub
adc
mulb
jp
cmc
fstl
jnp
shlb
cmp
push
sbb
xor
outsb
mov
cmp
xchg
lds
mov
cmp
adc
addr16
or
add
lret
clc
ja
inc
adcb
aam
inc
sub
push
popa
jmp
ljmp
loope
test
fldenv
stos
ljmp
dec
leave
in
cltd
imul
test
push
aaa
ret
jnp
popa
adc
subb
cmp
xor
cmp
cmp
shll
sbb
xor
ret
testl
push
push
inc
push
iret
das
das
or
add
fs
xor
push
popl
outsl
adc
cmp
and
sbb
je
cmpsb
mov
jg
pop
dec
negl
xor
pop
ljmp
repz
bound
mov
adc
cmp
stos
mov
les
dec
push
cmp
fstpt
xchg
scas
iret
fnstsw
inc
test
jl
addl
sbb
arpl
iret
dec
pop
lret
adc
lods
enter
inc
clc
and
cli
loop
fiaddl
pop
out
xchg
or
xchg
xor
stc
xchg
jns
lret
imul
add
sbb
fdivs
mov
sub
iret
clc
lea
jecxz
sub
mov
push
daa
and
inc
dec
test
adc
mul
mov
jne
scas
pop
sahf
cmp
add
mov
mov
jge
adc
test
movsb
rol
pop
mov
mov
mov
arpl
out
cmpsb
adc
scas
into
fldl2t
fidivrs
xchg
pop
pop
mov
inc
test
sbbb
mov
sbb
outsb
pop
cli
jae
lcall
cmp
mov
mov
mov
xchg
outsb
testb
mov
push
lret
fwait
data16
mov
sahf
add
int
sub
pop
mov
mov
into
mov
imull
push
jbe
les
sub
lahf
cltd
push
out
cmp
pop
inc
aad
push
adc
test
in
subl
lods
pop
ja
xchg
insb
lods
cmc
xchg
push
cmpsl
xor
cmpl
cmp
push
xor
inc
sbb
sbb
fs
iretw
adc
test
iret
mov
movsl
lods
jg
adc
mov
mov
shrl
mov
scas
xchg
or
data16
lret
sbb
fadds
repnz
cmp
inc
out
ror
xor
addr16
mov
mov
xchg
or
inc
jns
mov
jbe
les
cs
in
xchg
fildll
adc
xchg
sbb
mov
jns
shll
cwtl
push
or
gs
test
cmp
arpl
stc
test
ret
pop
add
push
add
jns
xor
mov
inc
pop
popa
jns
xor
xchg
fwait
jle
dec
push
or
cmp
mov
pop
mov
aas
outsb
mov
insb
out
xchg
pop
aaa
shlb
adc
leave
orb
ljmp
adc
jmp
ljmp
jne
pop
xor
sub
lock
cwtl
jp
idivl
push
sti
sub
dec
mov
cmp
movsb
mov
mov
fwait
in
push
mov
ljmp
in
pop
add
fidivrl
cmpb
mov
sbb
dec
sbb
sti
es
out
out
rolb
xchg
sbb
lock
lret
xlat
sbb
in
push
push
jecxz
fiaddl
stc
jp
test
and
mov
dec
or
je
lcall
adc
roll
pop
mov
sbb
xor
imulb
pop
mov
add
pop
xchg
arpl
pop
fisttpll
fdivs
icebp
sbb
cli
mov
aam
mov
or
pop
gs
jns
pusha
jmp
iret
pop
sub
sbb
bound
ljmp
adc
mov
pushf
fisubs
adc
in
pop
sub
pop
out
popa
out
cmp
push
jnp
dec
fidivrs
das
push
pop
mov
addr16
js
lahf
stos
sahf
xor
inc
icebp
xchg
sbb
nop
dec
aaa
fstl
push
sub
pop
xor
jns
or
pop
addl
add
dec
repz
mov
push
xchg
pop
cld
or
lret
jmp
jl
inc
dec
xor
add
sti
js
jo
mov
movsl
subl
jg
cli
xor
out
loopne
add
int3
push
shlb
sbb
mov
jno
mov
popa
and
inc
rorl
or
sbb
or
dec
sbb
sbb
scas
mov
push
add
inc
and
je
or
or
dec
insl
sbb
or
dec
cmp
mov
sub
push
inc
ja
sub
mov
inc
add
or
aam
lret
xor
repz
pop
ja
pmaddwd
jle
fisubs
sahf
push
add
in
test
js
movsl
sub
cmc
scas
lods
push
pop
shlb
or
jae
cmp
and
inc
lock
call
mov
push
inc
or
mov
xor
or
inc
subl
mov
into
mov
jns
dec
aaa
aam
daa
mov
cmp
popa
insl
vmaxps
scas
das
lods
and
out
mov
ss
out
data16
lahf
fsqrt
outsl
xchg
cmp
dec
js
mov
clc
loopne
repnz
jmp
xor
add
pop
cmpsl
cmp
sbb
je
addr16
adc
pop
or
mov
clc
pop
or
mov
inc
inc
xchg
scas
fcomps
sub
sbb
test
and
pop
adc
nop
push
jns
push
add
loop
inc
xor
mov
in
push
pop
pop
cmp
inc
mov
dec
out
adc
hlt
sbb
and
xchg
outsb
popf
fistpll
pop
mov
repz
je
xor
or
fs
mov
push
subl
inc
push
and
cmp
inc
mov
inc
pop
lds
push
scas
adc
mov
add
sub
xor
adcl
mov
or
sbb
push
fdivs
mov
gs
push
movsb
divb
rcrl
dec
pop
mov
mov
bound
and
push
imul
xor
or
pop
mov
inc
lds
adc
movsl
add
mov
inc
inc
rcrb
mov
sub
inc
mov
loope
lret
dec
scas
mov
cs
adc
push
xor
notb
icebp
or
mov
je
or
fisttps
aad
jb
es
aad
pop
xchg
xorl
jmp
mov
and
jl
mov
sbb
and
or
cwtl
movsl
test
sbb
popf
and
mov
lret
jnp
lods
shl
mov
inc
ljmp
dec
mov
pop
xor
dec
pop
mov
cmp
push
clc
mov
popa
adc
test
push
add
adc
int
push
pop
pop
data16
xchg
leave
repz
dec
cmp
out
push
sub
push
jo
sbb
cmp
ss
inc
mov
fsts
xchg
xorl
xorl
lds
iret
mov
fisttpll
test
pusha
out
xchg
sbb
dec
int3
push
and
add
jb
dec
jae
ret
in
xor
dec
push
bound
or
adc
sub
xor
adc
and
das
jbe
ret
dec
push
mov
dec
inc
pop
push
int3
aam
rorl
pop
sub
fwait
dec
xchg
repz
push
mov
clc
shrl
sbb
inc
out
ljmp
movsb
xor
sub
or
mov
pop
mov
in
loopne
ss
push
sbb
fcmovb
test
jecxz
orb
dec
imull
xchg
pop
lcall
fwait
mov
cltd
lea
xor
mov
pop
cmc
lea
xor
jmp
mov
dec
sub
scas
dec
and
insb
scas
mov
push
dec
xor
sub
daa
ljmp
movsl
out
bound
xor
dec
sub
rcll
sbb
push
int
dec
and
inc
mov
mov
mov
xchg
mov
sbb
aaa
push
xchg
insl
inc
cmpsb
mov
inc
je
fidivs
push
jno
rcr
mov
cmpsb
jg
in
insb
je
icebp
sub
ret
scas
shl
cltd
fsubp
xchg
pop
sbb
sub
jnp
jle
lods
test
inc
jne
test
popf
icebp
jecxz
adc
fcmovnbe
mov
pop
loop
fsubs
ret
int
out
lret
mov
repnz
mov
sub
push
hlt
jle
cltd
outsb
pop
in
and
mov
cwtl
pop
cmp
jb
mov
adc
paddsw
cmp
inc
mov
lods
jo
in
mov
push
mov
iret
push
pop
lods
push
repnz
dec
pop
icebp
in
and
sub
and
mov
js
test
mov
adc
jge
dec
sbb
fnstsw
icebp
sti
lret
lret
inc
not
and
rorb
xor
mov
rolb
xorb
fs
fmull
addb
icebp
sub
cltd
mov
sti
adc
das
mov
push
dec
inc
mov
popa
add
push
insl
das
and
and
repnz
dec
sbb
nop
outsl
scas
pushl
sub
push
mov
and
xchg
push
daa
popa
aad
mov
jbe
lods
fnstenv
jge
sar
push
sub
mov
adc
clc
sbb
add
adc
add
adc
lret
fbld
jbe
aam
popa
dec
repz
sti
xchg
sub
mov
sub
ret
mov
stos
mov
inc
icebp
test
cmp
in
fs
jmp
ret
mov
lods
adc
dec
aad
iret
jge
cmp
and
sbb
xchg
jle
test
jecxz
push
add
sbb
subl
pushf
dec
adc
fisttpll
call
jecxz
or
mov
sub
lock
mov
cmp
sbb
inc
lret
jae
mov
adc
andl
lret
pop
lret
gs
mov
shll
lea
sub
push
stos
cmpsb
fbstp
loope
dec
dec
ss
push
aam
cmp
cld
scas
xchg
adc
dec
xor
cs
xor
aam
sub
rorl
shrl
fsubrp
sbb
mov
sbb
mov
ja
inc
sahf
jmp
lds
inc
out
lret
or
pop
jne
ror
push
xchg
mov
jge
add
xor
fdivrl
test
cltd
adc
in
add
and
rcrl
icebp
xchg
subb
cmpsb
movsl
adc
push
mov
test
stos
pop
movsb
lds
ds
pop
adc
mull
pop
pop
jg
mov
lods
jb
mov
sti
jmp
in
and
dec
iret
mov
cmp
shll
ret
mov
std
inc
sub
xchg
cwtl
dec
xchg
mov
aaa
xchg
sub
data16
xchg
push
stc
and
xor
inc
inc
inc
push
jno
mov
cmp
adc
push
jmp
sub
insb
fs
xchg
cld
pop
fwait
scas
xchg
jle
repnz
cmpsl
sti
test
ret
call
cmp
test
mov
aas
push
cltd
or
aas
sarl
cmp
pushl
cwtl
xchg
addr16
movsb
mov
popf
je
adc
cmp
mov
mov
cli
jne
iret
mov
test
popl
cli
adc
xor
and
ja
jecxz
mov
inc
or
arpl
mov
dec
pop
dec
jb
les
les
adc
jnp
xchg
cmp
sbb
es
mov
cmpsl
imul
dec
pop
addb
pop
fldenv
adc
lret
les
mov
jo
cmp
push
dec
daa
ret
cwtl
xchg
push
orl
mov
mov
scas
jl
mov
push
cld
mov
push
mov
into
nop
or
and
xor
mov
dec
cmp
push
xchg
pusha
das
mov
bound
rol
cmc
mov
push
xchg
gs
sub
xor
pop
repnz
jle
in
and
call
pop
mov
scas
stc
xchg
dec
test
sti
pop
jb
cmp
or
bound
hlt
cld
out
pop
aas
lea
or
pop
or
cmp
addr16
mov
lods
xchg
shll
callw
dec
inc
dec
aas
fwait
loopne
cmp
xchg
mov
aad
testl
pusha
pop
dec
test
and
mov
lods
aad
cs
push
lods
test
mov
cmp
dec
inc
adc
test
bound
dec
pop
dec
mov
adc
mov
dec
mov
fldcw
pop
lods
mov
cld
inc
or
leave
aam
repnz
dec
mov
popa
jo
dec
cmp
inc
fadds
xchg
pop
shlb
shl
scas
fidivrl
popf
sbb
pop
add
pop
inc
mov
cmpsb
pop
mov
pop
pop
add
pop
mov
jmp
or
push
sub
into
mov
fimuls
cwtl
daa
cmc
insb
cmp
sub
xor
es
adcl
pop
shll
jl
inc
pop
int3
pop
test
push
inc
xor
cmc
cmpsb
stc
add
mov
xor
aam
cmp
out
jno
call
adc
dec
jns
fnstcw
arpl
out
repz
adc
popf
dec
fdivrs
mov
mov
nop
into
arpl
pop
std
or
adc
fisubrs
out
lcall
jbe
jnp
cmp
outsl
cli
xlat
sahf
rcrb
cmc
and
pop
add
inc
icebp
sub
nopl
pop
push
test
rcl
xor
adc
inc
mov
mov
add
dec
call
dec
notl
cmpsl
mov
hlt
xchg
push
ss
pop
ficomps
test
fistl
movsb
stos
cwtl
mov
ret
aas
fistl
inc
ds
mov
push
push
and
rcrb
ds
adc
bound
jmp
lock
jmp
aad
inc
add
lods
scas
outsl
adc
and
mov
mov
insb
aam
sub
xlat
ror
adc
lods
sti
inc
jmp
fnsave
out
cmp
in
into
packssdw
nop
fnstcw
push
lret
inc
mov
clc
sbb
xchg
xchg
jl
lret
gs
mov
mov
xchg
and
add
ret
push
inc
out
call
clc
and
movsl
dec
mov
xchg
into
jns
rorb
into
mov
imul
pop
cmpsl
push
mov
mov
sahf
arpl
hlt
and
mov
rorl
fcmovne
mov
in
ror
jle
dec
jns
sub
sub
fsin
or
dec
push
faddl
or
jmp
inc
jns
cmpsl
les
and
scas
cmpb
dec
mov
test
in
mul
ffree
out
mov
andl
xor
or
jb
cmpl
es
fildll
cs
xchg
pushf
and
xchg
out
jp
popf
cltd
dec
adc
popa
mov
nop
mov
js
pop
xor
mov
xor
lret
push
iret
inc
xchg
shr
loope
addb
push
out
and
cli
lea
ss
fsubr
pop
outsb
in
pop
adcb
pop
jne
leave
pop
testb
adc
hlt
xchg
aad
in
mov
adc
stos
and
ja
rcl
data16
scas
pop
mov
mov
cld
adc
cmp
into
jb
dec
enter
rcrl
xor
push
jle
aam
jp
mov
outsl
loope
cmp
int
cmp
dec
pop
es
push
icebp
xchg
add
subb
mov
mov
loopne
and
mov
mov
xlat
aad
mov
mov
adcl
imul
dec
xor
popa
xor
xchg
jne
adc
mov
aam
mov
out
push
test
jge
push
xchg
and
test
shr
adc
icebp
push
xor
dec
sbb
push
mov
loope
push
jnp
in
cmp
popw
fwait
sahf
in
or
test
imul
inc
lock
cmp
jmp
test
ret
andb
dec
xorb
push
mov
mov
push
adc
jo
dec
adc
cmpsl
and
mov
lods
fisubrl
gs
rolb
aas
jnp
sub
xor
pop
jle
hlt
aas
adc
add
lret
add
sbb
cmp
mov
mov
jnp
inc
mov
mov
cli
jle
jmp
mov
and
pop
shl
and
mov
inc
xor
push
lcall
xchg
inc
cld
inc
stos
pushf
jb
fbld
mov
adc
mov
mov
adc
cmp
stos
sbb
ljmp
lods
frstor
popf
dec
lahf
and
or
push
mov
inc
jnp
aaa
pop
pop
cld
mov
mov
push
pop
loope
mov
scas
jg
jb
loopne
adc
jg
pop
test
pop
fwait
ds
mov
test
inc
rclb
lods
lahf
sub
in
add
push
add
ja
leave
cvtps2pi
dec
jnp
sarl
shl
dec
andl
mov
xchg
or
inc
cmpsb
push
repz
sub
sub
jl
sarl
insl
mov
and
mov
pop
roll
push
mov
inc
jb
xor
push
inc
call
divl
cmpsb
mov
mov
icebp
inc
or
pusha
les
xchg
mov
push
mov
mov
cmc
jae
or
push
and
xchg
inc
pop
sbb
xchg
mov
enter
mov
fs
fcompl
ret
insb
pop
mov
jae
or
fwait
mov
repnz
or
sarb
fxch
or
cld
clc
sbb
mov
pop
xchg
in
or
ljmp
outsl
cmp
push
in
shlb
push
mov
xchg
aas
xchg
je
insl
jne
lahf
cmp
scas
data16
sub
scas
inc
popa
and
cltd
ret
xchg
int
fsubr
add
cmc
jecxz
test
fisttpl
xor
inc
xchg
jl
push
push
inc
repz
rolb
enter
lret
jecxz
int3
ja
lahf
imul
mov
cli
add
je
jno
es
hlt
leave
fcom
inc
shlb
jae
stos
outsb
cli
sub
jns
imul
and
mov
cmp
cmp
loop
repz
inc
in
imul
lods
movsb
dec
call
ret
jno
test
mov
mov
imul
je
push
loop
push
sbb
repnz
pop
jle
jecxz
push
rorl
push
or
fisttps
jp
rolb
cmp
scas
add
cwtl
adc
pusha
cmp
sbb
push
inc
jle
jns
andl
fmuls
sar
imul
stos
sbbb
adc
mov
arpl
fdivs
out
fldenv
xchg
jb
mov
std
mov
sbb
dec
adc
out
and
cwtl
cmpsb
movsb
int
xchg
outsb
mov
jnp
pushf
jp
sub
cld
or
xchg
jb
xchg
fistpl
dec
icebp
sub
ljmp
bound
add
xor
pop
pop
jmp
xchg
cmp
mov
lret
mov
xchg
xchg
inc
andb
mov
xor
sti
aas
ret
jno
xor
idivl
ret
xor
jnp
xor
xchg
mov
sub
cmp
sahf
pop
xchg
mov
mov
fbstp
lds
push
and
sbb
fstl
out
inc
bound
imul
loopne
pusha
adc
loop
jbe
and
mov
mov
daa
test
dec
movsb
dec
je
int
dec
ljmp
xchg
shlb
or
pop
out
adc
test
into
test
lcall
adc
subl
inc
pop
outsb
jae
or
loope
mov
pop
test
rclb
adc
mov
popa
push
pop
ret
gs
adc
add
or
pop
fidivs
cmp
lahf
lahf
and
mov
cltd
ret
sbb
cmp
sbb
movsl
das
jno
jbe
and
scas
sbbb
jbe
aad
and
into
push
pop
decl
inc
sub
sbb
repnz
test
popa
jb
xchg
push
sbb
inc
push
xchg
push
stos
jne
outsl
daa
add
xor
aad
ss
lock
push
adc
ja
cmp
or
pop
mov
jg
les
and
push
and
in
popa
push
cmp
jbe
call
or
or
push
cmp
dec
or
mov
jle
js
mov
inc
xor
push
push
hlt
punpcklwd
push
popf
inc
inc
mov
dec
fidivrs
inc
dec
mov
inc
mov
dec
movsb
pop
lods
bound
int3
sbb
stc
dec
xor
mov
mov
insl
daa
and
out
xor
in
mov
sbb
add
lret
pop
jmp
adc
nop
fxch
add
adc
repnz
jl
in
lock
xor
sbb
inc
lret
mov
push
mov
pop
loop
in
add
inc
pop
mov
jge
and
rclb
adc
sub
xchg
xchg
cmp
ret
lea
stc
mov
ss
jbe
push
sub
push
push
rorb
push
pop
sbb
popf
add
mov
mov
xchg
inc
cmc
push
orl
out
push
dec
sub
jge
lds
push
jnp
cmpsb
push
mov
xorl
xor
psubd
cmpsb
pop
cmp
dec
pop
push
adc
cmp
data16
add
insl
dec
jecxz
insb
rcrl
popa
sbb
mov
jne
shrb
mov
scas
pop
adc
mov
add
xchg
int3
cwtl
mov
push
cmp
adc
inc
jb
jmp
fildl
ffree
sbb
scas
cld
lods
inc
pop
push
or
js
movb
lods
mov
pop
mov
inc
xor
pop
mov
push
fisubrl
sbb
inc
cmp
add
xchg
xchg
xchg
cmp
mov
pop
xchg
push
mov
lret
std
mov
sub
jp
mov
dec
adc
adc
clc
aas
adc
cli
add
lods
xor
repz
loope
repnz
test
mov
xor
popa
ret
mov
or
test
outsl
fldl
repnz
xchg
in
inc
insl
dec
clc
fwait
scas
mov
sti
js,pn
inc
icebp
xor
sbb
cmc
mov
out
dec
jge
dec
fwait
jne
fisubl
in
sbb
shlb
mov
sub
push
fdivrl
mov
pusha
mov
enter
in
rorb
cltd
jg
mov
lcall
mov
fidivrl
test
mov
and
adc
push
pop
arpl
test
xor
arpl
inc
call
popa
out
neg
shlb
out
jle
add
cmp
fwait
jo
push
ret
cmp
pop
xlat
pop
sbb
push
loop
popf
movsl
fcomp
push
sahf
xor
cwtl
cli
push
sub
rcll
ss
lods
lods
aam
clc
push
repz
iret
ret
adc
dec
inc
lods
or
pop
mov
xchg
lret
sub
push
aaa
fs
jne
cmp
fisubs
push
int3
je
push
mov
test
cmp
jl
inc
xor
insl
inc
inc
or
mov
popf
add
imul
insb
fisttpl
scas
repz
mov
imul
push
jbe
mov
sub
mov
adcl
jg
cmp
or
outsb
push
adc
aad
cmp
addr16
pop
push
repnz
lds
push
pushf
push
dec
lds
insb
cld
mov
cmp
leave
adc
jbe
les
pop
fisttps
sub
pop
icebp
icebp
movsl
les
orb
pop
inc
fiaddl
mov
out
icebp
mov
shll
mov
prefetch
mov
sahf
popa
arpl
movsl
inc
sbb
xor
mov
xchg
jo
jnp
jl
imul
mov
jno
ds
push
inc
xor
jge
lds
insl
xlat
das
mov
jmp
xor
cmp
push
jne
pop
add
sub
out
loopne
and
push
push
push
pop
out
pop
push
xchg
sarl
dec
mov
inc
sbb
cmp
cmp
jmp
cmp
lea
enter
mov
mov
add
filds
sbb
sub
icebp
push
dec
mov
dec
lds
or
inc
ja
fstl
sub
mov
pop
xor
add
outsb
loope
cmp
fistpl
dec
mov
and
and
jge
push
lock
sahf
mov
insl
xchg
std
add
or
scas
inc
fstpt
jl
add
pop
pop
imul
dec
sbb
push
loope
aas
ficoms
or
xchg
mov
mov
fxch
jle
or
pushl
mov
fadds
pop
cli
xchg
popa
add
push
adc
mov
cs
ret
xorl
dec
mov
ljmp
cmpsl
int
and
xor
mov
ret
hlt
lods
cmc
jg
push
pop
std
ss
les
imul
lret
popf
cmp
xorl
sub
test
and
jnp
pop
pushf
int3
ficomps
push
jne
add
cs
xchg
ficoml
cltd
loop
xor
jne
add
cmp
dec
mov
sub
pop
das
in
sub
lret
jb
xchg
jne
jg
add
shlb
pop
int3
lock
jle
add
mov
mov
nop
and
out
xor
adc
dec
xchg
outsl
dec
add
push
jns
and
push
rcll
pop
pop
pop
cmpsl
fwait
jg
cli
shll
dec
mov
or
or
scas
imul
int
push
aas
mov
pop
and
jp
dec
daa
sbb
daa
xchg
and
fsubrs
mov
inc
pop
pop
mov
add
pop
sbb
movsl
sub
loopne
out
xor
ljmp
inc
mov
inc
push
add
sub
mov
mov
hlt
enter
out
mov
dec
jno
es
and
pop
push
xchg
popf
inc
lods
cmp
inc
je
or
fiaddl
les
lock
cmp
lcall
mov
in
adcb
daa
sbb
pop
dec
loop
sbb
into
pop
dec
outsb
fmul
mov
dec
int
dec
mov
adc
sbb
in
lahf
xchg
leave
jle
stos
rorl
fucomip
lcall
fsts
pop
inc
mov
xor
xchg
fwait
scas
add
pop
rolb
inc
mov
lods
mov
inc
popa
push
and
mov
jne
add
fnstsw
in
ljmp
pusha
pop
and
add
int3
mov
sbb
dec
je
loopne
xor
pusha
mov
ljmp
dec
pop
lock
push
mov
push
shll
scas
xchg
inc
xchg
inc
or
popf
inc
pop
push
sub
push
cmp
xchg
fstpt
adc
mov
xchg
xchg
add
jmp
sbb
arpl
dec
shlb
subb
or
push
lock
mov
pop
dec
sbb
inc
inc
addb
pop
lcall
xor
add
and
adcl
aaa
aam
int
sbb
jle
xchg
test
mov
xor
add
jmp
lret
adc
out
and
daa
mov
inc
dec
mov
movsb
xlat
fs
push
cs
dec
or
testb
cmpsb
mov
xchg
imul
pop
mov
insb
and
add
cmp
fcmovbe
stc
lret
push
push
sbb
mov
inc
mov
push
push
xor
jg
inc
daa
hlt
pop
leave
push
add
fldenv
push
push
and
and
mov
movsl
js
int
inc
cltd
pop
lods
popf
pop
pop
leave
mov
arpl
sub
lcall
xor
insb
insl
cwtl
outsb
mov
cmp
add
iret
cmp
testl
add
sub
add
inc
cli
or
jmp
cmp
mov
lret
dec
push
adc
cmp
push
xchg
jmp
rcl
repnz
push
dec
stos
xlat
stos
jl
out
add
xchg
pop
out
sahf
push
aad
ficomps
mov
cmp
and
je
or
outsb
js
and
jg
mov
jl
lahf
fdiv
rolb
sbb
enter
and
in
fisubs
scas
cmp
mov
les
aas
ret
in
fdivs
mov
shl
inc
rclb
mov
push
loope
dec
hlt
fst
lret
cmpsl
xlat
or
out
jnp
cmc
icebp
or
cmpl
push
mov
cmc
mov
push
pop
mov
pop
sbb
inc
lret
popa
fs
scas
fdivl
int
lods
jo
and
dec
push
iret
pop
jne
jecxz
sarl
repz
call
xchg
repz
push
mov
add
repnz
jne
mov
mov
call
aaa
and
testl
add
and
mov
xchg
jo
imul
jo
xchg
inc
fmull
add
into
push
add
ss
inc
lret
dec
pop
push
cltd
lea
clc
sub
mov
inc
das
inc
xchg
cwtl
std
and
cmpsb
pop
mov
push
test
lods
xor
jmp
shlb
dec
xchg
icebp
cmp
icebp
pop
xor
loopne
mul
push
dec
and
pop
xor
fnstenv
fwait
cmc
je
or
xor
push
mov
scas
inc
add
pop
adc
jmp
mov
cltd
jo
mov
ror
fstps
inc
sbb
mov
cmp
pavgb
mov
cmpb
into
addr16
mov
and
cmp
cmp
in
sbb
js
bound
pusha
or
cld
xchg
stos
mov
mov
imul
and
repz
pop
in
push
mov
loop
sbb
xchg
adc
pop
push
fmul
dec
fs
xchg
data16
xor
ret
movsl
pop
add
andl
je
push
sti
push
mov
or
insb
jnp
rolb
sbbb
jnp
mov
test
adc
les
push
cmpsl
inc
repz
jbe
in
pop
mov
inc
jmp
daa
dec
in
add
jo
int
lretw
sbb
call
stc
out
pop
int3
cmp
fs
add
pop
addr16
shll
pushf
dec
aad
les
dec
sbbl
mov
xlat
cltd
mov
enter
jecxz
jecxz
ret
loopne
pop
push
mov
pop
aas
sbb
sbb
mov
mov
push
sbb
imull
popa
sbb
gs
in
mov
rol
pop
sub
loop
pushf
ss
dec
loope
and
ficompl
and
andb
ficoml
loope
mov
aam
jae
popf
dec
scas
push
jne
push
out
mov
sub
xchg
and
jb
pop
xchg
enter
std
popf
nop
loop
movsb
daa
jle
repnz
dec
sar
es
pop
fldt
mov
fidivl
jle
dec
lea
sbb
in
cmpsb
push
adc
add
lods
out
aad
call
sub
mov
add
inc
cld
frstor
inc
sbb
cli
outsb
pop
xor
xchg
std
es
sub
out
mov
testb
pop
fisttps
jbe
cld
out
cli
stos
jnp
and
cmp
add
stc
in
fnstsw
push
pop
add
jge
das
addl
dec
sub
push
clc
in
popf
test
jmp
cmp
daa
pop
add
and
gs
mov
aas
push
sbb
jg
cmp
loopne
lahf
jg
sti
mov
mov
jecxz
mov
dec
inc
inc
popf
enter
mov
dec
orl
jns,pn
int
mov
lret
negl
sti
sub
loop
mov
add
jecxz
psadbw
aas
aas
jae
or
or
pop
std
fisttpl
mov
sbb
mov
jg
mov
jne
sbbb
mov
cld
sbb
push
mov
pand
inc
mov
and
mov
repnz
lods
mov
push
or
pop
push
xor
adc
iret
push
push
sub
xchg
sub
adc
std
fildll
into
into
pop
pop
jne
into
popa
ss
andl
sbbl
fisttpl
sub
frstpm(287
mov
sub
or
sub
push
dec
cmpsb
out
adc
stc
movsb
mov
cli
mov
daa
iret
lods
roll
pop
mov
mov
sub
imul
aad
xor
out
movsl
dec
lods
jnp
jmp
std
in
pop
sub
dec
mov
lcall
lods
inc
lods
popa
in
jecxz
pop
insb
add
xor
adc
mov
adc
mov
aaa
out
pop
xor
push
and
adc
pop
cld
jmp
clc
adc
cmp
mov
clc
mov
lods
push
shlb
cmpsl
jbe
test
jl
in
adc
mov
leave
nop
or
aas
or
aaa
mov
sbb
push
jge
call
bound
fisubs
mov
mov
xor
inc
emms
lock
loopne
loopne
insl
out
insb
push
and
insl
call
push
and
addr16
ret
movsl
push
movsb
inc
pop
inc
xchg
and
pop
daa
out
push
cs
mov
or
adc
cwtl
sbb
insl
das
fwait
mov
mov
dec
or
inc
gs
xchg
mov
and
add
aam
push
jle
pop
xchg
mov
mov
jbe
aas
inc
jo
dec
call
xchg
pop
sahf
scas
call
cltd
push
dec
push
pop
pop
or
and
mov
out
test
jge
and
push
or
insl
pop
imull
mov
call
pop
movsl
int
call
int
mov
repnz
sti
cmp
dec
mov
and
jmp
or
inc
mov
sti
xchg
xor
xchg
adc
jb
in
jmp
dec
addr16
add
inc
and
sub
push
inc
popa
lds
adc
iret
push
push
mov
adc
jmp
pop
cmpsl
mov
subl
pop
andb
and
sti
aas
fwait
xor
gs
idiv
idivb
call
push
sbb
xchg
or
adc
loopne
mov
mov
fistpll
fsubs
popa
fisubrl
ret
sub
jne
xchg
les
add
mov
adc
cmpsb
ljmp
cmp
push
push
das
push
jl
repnz
adc
mov
arpl
jecxz
iret
jne
xchg
subl
adc
icebp
mov
xor
add
daa
and
mov
in
add
inc
lods
sub
data16
insl
mov
repnz
fbstp
lret
addb
jnp
cld
in
sbb
loopne
jecxz
rcrl
fnstenv
std
add
jecxz
repnz
pop
xorl
outsl
repz
xchg
sub
sarb
ljmp
sti
mov
testb
and
pop
je
fimuls
fwait
and
lret
ret
cmp
jne
cmp
dec
mov
adc
sub
xchg
scas
add
push
arpl
jb
std
test
insb
jl
shll
add
andl
imul
mov
es
mov
cld
sbb
jl
pop
lea
dec
jecxz
sub
mov
push
insb
cmp
and
cmpsb
pusha
outsl
pop
mov
mov
fistl
sub
jge
loop
js
adc
adc
roll
clc
inc
sub
fdiv
dec
lret
sbb
adc
push
aas
inc
imul
and
in
bound
loopne
sbb
mov
out
add
adc
pop
and
ror
jecxz
stc
xor
inc
popf
in
ja
subl
mov
in
aas
inc
push
inc
mov
shrb
pop
loope
insb
sub
jg
aas
or
into
xchg
jno
add
fisubrl
inc
in
lea
cld
test
adc
xor
hlt
sub
stc
movsl
ss
inc
xor
pop
push
pop
mov
iret
icebp
popf
jns
sbb
xchg
mov
sbb
mov
push
push
or
mov
jne
out
nop
aad
mov
or
inc
add
mov
data16
out
mov
lds
xor
aaa
in
outsl
repnz
rcll
and
pop
adc
stc
in
jecxz
sbb
inc
js
adc
dec
jge
outsl
int3
mov
and
pop
fldl
xchg
outsl
lds
push
cmpsb
rolb
loopne
dec
pop
mov
jle
dec
sub
insb
xchg
xchg
aam
push
xor
pop
nop
repnz
out
add
xchg
in
add
push
cmp
popf
mov
ret
sub
ja
insb
jo
orb
and
in
ret
popa
jno
bound
insb
mov
aas
push
inc
mov
and
add
icebp
test
xchg
or
mov
adc
dec
pop
jge
in
xor
loop
stos
leave
je
repz
mov
movb
outsl
adc
xchg
ss
outsl
and
inc
fsubl
mov
rcrl
test
dec
lret
jg
cmp
fnsave
push
mov
dec
int3
out
add
lahf
ficoml
popf
mov
imul
std
scas
jecxz
fdivrp
ljmp
arpl
pop
outsl
mov
popf
add
cwtl
pop
cmpneqps
push
cmp
fldl
and
add
adc
cmp
push
ja
loop
push
lahf
mov
shr
scas
dec
pop
xchg
rcrb
push
ljmp
and
mulb
mov
jg
iret
dec
movsb
pop
mov
mov
jno
mov
fdivp
jl
ds
data16
divb
mov
cmp
sub
add
out
nop
xchg
test
mov
cmpsl
jmp
jbe
inc
stos
cwtl
or
loopne
sbb
daa
mov
in
jne
xlat
js
add
push
inc
and
nop
push
xchg
enter
sbb
mov
cmp
sbb
fildll
cmpsl
cld
xor
pop
aas
sbb
es
rcrb
pop
lahf
add
or
iret
jnp
cmpl
pop
rclb
leave
mov
jp
aaa
xor
lret
sti
pop
inc
add
aaa
movsl
mov
movl
xor
ds
sbb
add
pop
aaa
ds
aad
jnp
sbb
sub
jg
jb
lods
mov
cmpsl
lahf
stos
sbb
or
adcl
les
jae
lret
pop
frstor
and
dec
add
inc
ss
jno
fwait
cltd
rcrl
adc
mov
aas
movsb
cmc
xchg
jecxz,pn
out
ret
mov
cmp
adc
daa
popf
ja
addr16
cli
imul
clc
clc
loopne
fsubp
lcall
outsl
push
mov
sub
es
sub
hlt
jo
cmp
ret
xor
sub
insb
addl
pop
xlat
sbb
xchg
es
fcomip
lea
or
xchg
daa
cld
inc
sub
int3
cmp
adc
das
lds
hlt
movsl
test
inc
and
push
cld
sub
sahf
mov
iret
test
push
das
stos
pop
pop
and
dec
das
popa
jge
push
test
add
xrelease
imul
ucomiss
xor
jge
mov
mov
mov
shl
xchg
data16
insb
aas
mov
mov
pop
ja
lea
enter
sbb
hlt
fwait
imul
xor
adc
jo
mov
sbb
aam
das
jbe
sub
mov
or
lods
fidivrl
or
fwait
pop
adc
loop
add
mov
fnstenv
push
jno
jbe
add
add
fisubl
push
and
dec
jne
mov
add
or
xchg
dec
cmp
fcoml
fiadds
stc
shll
mov
mov
push
inc
mov
mov
mov
call
iret
fisttpll
js
xor
in
rcl
jle
or
cmp
rep
and
fwait
ljmp
ret
lret
cmc
in
in
cmpsb
cld
lods
int3
stos
sub
fxam
or
push
fs
xorl
icebp
and
push
stos
addr16
sub
sbb
pop
mov
adc
add
mov
sbb
ds
aaa
mov
mov
fcompl
push
add
mov
out
test
cwtl
dec
inc
out
xlat
movsb
mov
loopne
sbb
dec
movsl
aaa
rcpps
jp
lret
aam
es
lods
mov
lahf
mov
pushf
shrb
sbb
jbe
inc
ds
jp
ja
ror
int
fiaddl
sub
and
and
adc
cmp
scas
jmp
or
dec
sub
push
sbb
add
rolb
and
sbbb
jne
inc
adc
mov
dec
mov
mov
lods
and
mov
adc
and
stc
outsb
test
jne
shr
sub
jp
es
cmp
popa
cmp
mov
ret
push
pop
and
iret
dec
xchg
xchg
inc
pop
adc
aad
ja
dec
xor
outsb
data16
sbbb
sbbb
rol
pop
jns
mov
pop
arpl
fcompl
mulb
int
lahf
mov
in
sub
xchg
faddp
imul
push
xlat
test
pop
outsl
adc
or
popa
pop
cltd
insb
fildl
pop
fimull
mov
in
push
sbb
jns
and
int3
addb
in
daa
inc
and
movsb
inc
movsl
lods
add
fisubrl
imul
mov
sbb
mov
ret
out
test
mov
out
cmp
xorl
cmp
popa
adc
jge
xorl
and
lret
lret
stc
inc
ds
push
pop
jne
inc
inc
cwtl
mov
loopne
mov
daa
ss
into
xor
mov
test
iret
xchg
push
push
repz
stos
cmp
orl
mov
jp
sbb
adc
rorb
sub
hlt
js
and
inc
icebp
cmp
ret
mov
clc
outsb
hlt
inc
xchg
enter
outsl
addb
popf
hlt
js
lods
sbb
ret
dec
inc
lds
mov
es
es
repz
xchg
das
jnp
dec
xlat
pop
dec
dec
sbb
mov
pop
ret
jle
lods
insb
cmp
sub
clc
stc
sbb
jecxz
pop
jne
jno
stos
fimuls
je
jo
sbbb
pusha
in
cmp
xor
mov
cmp
add
adc
dec
add
out
inc
pop
stos
pop
pushl
inc
cmpb
insb
aaa
push
leave
and
jmp
js
insb
mov
mov
pop
push
popf
mov
pop
fnsave
xor
stc
ss
jo
inc
fstps
daa
js
add
pop
jb
mov
mov
or
adc
inc
mov
arpl
inc
sbb
pushf
dec
push
stos
imul
pop
inc
push
rep
inc
fwait
out
jge
jmp
cmpsb
mov
out
repz
cmc
rcrb
daa
popf
and
das
jl
ja
mov
in
cmpsl
lock
dec
out
xchg
jp
dec
lea
jae
out
xchg
fidivrs
bound
mov
insb
add
fistl
cltd
mov
xchg
loope
bound
xchg
or
imulb
cmp
lods
insb
mov
sub
xchg
ljmp
adc
jbe
inc
xor
and
sub
push
cs
jne
stos
pusha
mov
ljmp
fwait
insb
sub
out
and
push
dec
dec
xchg
xchg
xchg
jo
cmpsl
stc
jae
dec
mov
fldl
adc
inc
cmp
sahf
daa
add
dec
or
push
sub
cmp
ret
cmp
cltd
scas
and
mov
and
fwait
cs
pop
repnz
jge
aaa
sbb
dec
in
in
pop
and
add
push
mov
lret
jl
into
push
nop
jmp
pop
xchg
push
sub
movsl
push
jle
jecxz
xchg
rolb
shlb
add
push
xor
inc
pop
jb
push
leave
stos
xor
mov
cmp
jbe
jmp
xchg
fdivrl
mov
leave
jo
xchg
js
xchg
lds
jecxz
movsl
add
push
adc
lret
ljmp
cmp
pop
mov
outsl
leave
shl
lret
or
aam
dec
stc
mov
fs
iret
fnstsw
out
sbb
insb
mov
call
push
fcomps
and
pop
sbb
jl
cmpsb
aam
stos
fsubrs
in
adc
jl
daa
popa
xchg
inc
jbe
cmp
out
nop
sub
std
sub
lret
pop
shlb
iret
add
dec
cmp
cld
push
cmpsb
cmp
jl
imul
imul
fldenv
fs
sub
pop
push
out
lret
inc
icebp
adc
ds
mov
adc
div
inc
mov
and
mov
shlb
sub
sub
add
sub
mov
roll
adc
cmpsb
or
push
xlat
sub
jae
nop
pop
shrl
std
ja
jp
and
jmp
movsb
sub
aaa
cltd
lcall
fs
jae
dec
test
xchg
stc
dec
popa
bound
setge
enter
cli
repz
add
mov
dec
fldenv
stc
sbb
sbb
cmpsb
jb
divl
jg
rol
and
mov
aas
jb
and
cmp
add
mov
sbb
insl
xchg
add
fmull
cmp
push
xchg
sub
lahf
mov
sbb
mov
add
push
xlat
dec
mov
pop
dec
inc
js
cmp
or
push
stos
imul
xchg
mov
pop
mov
aas
aad
nop
push
ret
lret
rol
dec
ret
ret
add
inc
test
loopne
pop
inc
and
cmpb
mov
iret
sbb
xchg
and
cli
sbb
dec
in
hlt
cwtl
adc
lds
incl
in
lods
cmpb
cld
mov
movsl
mov
xchg
in
add
int3
push
gs
inc
and
in
dec
lret
sbb
insl
jge
js
push
test
ss
aam
fcmovu
mov
ja
pop
xchg
mov
xchg
jmp
mov
xchg
mov
push
fistpl
in
push
mov
mov
sbb
fnstsw
sbbl
movsb
cltd
jmp
cmp
fisubs
xchg
push
and
jle
das
in
or
repz
gs
lahf
clc
mov
sahf
sub
stos
xchg
stc
aaa
lcall
pop
in
shlb
jne
hlt
aam
push
orb
or
mov
loope
push
mov
clc
inc
dec
out
adc
pop
xor
mov
insl
push
aam
push
push
loop
fiadds
pop
xchg
es
jne
mov
fcmovnu
std
into
int
push
push
jmp
xor
fucom
add
mov
in
jl
es
push
sub
inc
call
add
push
movsl
shl
idiv
push
lock
es
imul
inc
xchg
dec
pop
scas
and
aam
jge
inc
lahf
push
xchg
data16
cmpsb
fwait
mov
cmp
test
mov
aam
roll
jbe
les
shrl
ds
sub
pop
xchg
mov
cs
lock
fidivs
icebp
push
xchg
and
cwtl
pop
cld
in
adc
jmp
dec
call
call
popa
adc
mov
and
xor
and
fwait
xchg
aad
ftst
into
mov
mov
pop
mov
adc
fdivrs
pop
adc
sub
pop
arpl
inc
hlt
fistps
inc
testb
jmp
pop
imul
cli
stos
push
or
xchg
jge
pop
dec
out
xchg
and
add
aam
adc
fdivrl
iret
cmpsb
jle
out
push
sbb
sbb
xlat
sbb
adcl
lock
in
dec
imul
movsl
pusha
out
test
ja
inc
rcrl
rorb
test
inc
sub
mov
aaa
cmp
jae
xlat
mov
stos
or
bound
scas
enter
incl
jns
inc
pop
xor
push
sbb
or
jno
insl
fidivs
xor
mov
and
jge
enter
xor
jp
fcom
jmp
dec
in
iret
sub
pop
jno
cs
xchg
dec
daa
mov
imul
jae
fldl
repnz
sbb
fs
rcll
xchg
push
push
adc
jb
and
sub
lds
test
shlb
inc
jno
sub
xchg
add
xchg
in
or
push
addr16
pop
test
cmp
jns
push
iretw
push
cmp
nop
addl
xor
imul
test
mov
insb
sub
das
faddl
push
cli
je
add
sub
add
dec
sub
mov
fildll
movl
daa
or
sbb
sarl
xchg
sbb
iret
pop
sub
popf
mov
inc
sbb
pop
xchg
pusha
lahf
push
mov
cld
xlat
push
xchg
aam
xor
xchg
and
dec
and
cmp
aad
adc
mov
and
loop
popf
mov
pop
movsl
sbb
test
test
inc
enter
in
push
iret
cmp
in
repz
fwait
int
pop
fnstcw
popf
mov
mov
enter
ljmp
sub
xchg
mov
data16
jbe
dec
mov
fwait
xchg
or
dec
mov
lock
inc
outsl
stos
push
in
and
fnstenv
sahf
nop
popl
repnz
ds
mov
cmpsl
pop
insb
ja
jne
test
add
pop
xchg
test
xor
repnz
pushf
push
xor
cmp
inc
pop
aaa
mov
sub
and
pop
add
movsl
or
in
pop
imul
movsl
push
testb
sahf
leave
xchg
or
mov
add
push
add
xor
mov
push
adc
rcrl
stc
xchg
pop
sbb
inc
lock
push
dec
out
aas
inc
je
jne
lret
add
or
push
mov
daa
mov
push
iret
push
popa
fs
and
dec
test
or
pop
inc
push
dec
lds
aad
addr16
dec
inc
adc
inc
idivb
sbb
ds
out
and
dec
clc
lods
mov
rcll
and
adc
add
in
movsb
mov
dec
adc
stos
stc
incb
and
mov
in
in
cmp
jo
pusha
dec
lds
sub
repz
cltd
push
inc
clc
sub
std
sbb
push
std
mov
repz
aad
sti
scas
add
push
mov
cld
inc
jmp
daa
dec
xchg
cmpsb
adc
mov
cltd
fisubrs
addb
push
test
jne
jmp
mull
mov
test
arpl
mov
leave
test
push
shll
xchg
addr16
sub
shll
xorl
push
add
cmc
mov
push
jns
jb
xor
sbb
jp
scas
xchg
jo
jp
popf
daa
and
inc
and
pop
push
insl
cld
jb
and
ljmp
dec
pop
xchg
cltd
push
sbb
jl
cmp
ficomps
leave
int
test
push
cwtl
and
aas
xor
mov
insl
mov
pusha
mov
mov
jne
fcomps
sub
xlat
push
add
loope
cltd
es
and
or
test
mov
jmp
stc
cwtl
movsl
pop
sbb
xor
push
sbb
ja
add
ja
mov
sbb
test
cmc
cmpsl
sarl
xor
fidivrs
and
mov
clc
je
fcmove
sub
jle
sbb
fsts
push
lods
sbb
lods
push
mov
setp
movsb
roll
cmp
pop
movsl
dec
inc
setge
push
adc
notb
pop
shll
daa
cld
push
push
or
push
inc
pop
mov
adc
mov
nop
notb
div
fcmovbe
cmp
fs
in
pusha
das
or
lods
sbb
mov
in
or
mov
notl
test
lea
mov
daa
push
xlat
repz
pop
mov
and
rcl
and
call
xchg
sti
mov
pop
mov
pop
test
push
and
cmp
and
sub
or
push
loopne
ds
jg
mov
cs
in
inc
out
out
lods
xor
test
adc
mov
clc
stc
push
jbe
push
sbb
mov
mov
pusha
add
shlb
pop
push
cmpl
dec
pop
je
adc
lods
sbb
jl
mov
pop
and
add
rcr
data16
add
mov
in
mov
cli
jb
cmp
fidivs
orl
add
mov
xor
in
inc
lds
je
push
mov
insl
stos
xchg
or
and
cmp
inc
clc
insb
cld
icebp
push
jno
repz
inc
cltd
xchg
ja
jns
hlt
dec
mov
shll
push
ss
jb
push
insb
push
cmpsl
xor
inc
sbb
cld
sahf
jo
sub
aad
jmp
jp
xchg
mov
lods
and
repnz
cmp
add
clc
and
test
sbb
pop
stos
pop
stos
sub
or
scas
xor
jmp
aas
dec
out
lret
jne
pop
xchg
in
aaa
xchg
pop
movsb
pop
and
jge
fwait
jl
fs
dec
push
js
ja
sbb
pusha
orb
scas
lahf
iret
aad
or
imul
dec
fstl
xchg
jmp
xlat
push
test
push
cld
mov
pop
rcll
pop
ficompl
inc
rclb
mov
dec
adc
icebp
xchg
popa
stos
cli
pop
pop
mov
movl
cli
push
in
or
icebp
xor
cmpl
jp
jg
pusha
push
pop
fldt
cmc
cmpl
repnz
sbb
imul
imull
adc
cmpsb
nop
ss
arpl
fiadds
adc
divl
mov
lcall
sbb
mov
jge
jecxz
pop
or
ret
hlt
mov
pop
stc
xchg
test
xor
outsb
dec
jge
pop
pop
xor
mov
ljmp
in
in
popf
ret
sub
dec
mov
pop
int
imul
jg
sbb
inc
and
add
mov
lret
jmp
dec
lahf
test
dec
movl
stos
fcmovnb
mov
jmp
inc
or
aas
out
repz
push
adc
nop
subb
call
sub
xchg
stos
pop
imul
inc
jle
push
and
int
lahf
inc
push
and
in
cmpsl
jnp
lahf
iret
pop
leave
dec
call
sbb
push
mov
sbbl
fucomip
mov
xchg
bound
mov
aaa
outsb
shlb
fidivrl
or
and
cmp
notb
gs
jp
sarl
negb
mov
cs
lret
jl
mov
push
push
repnz
aas
adc
ja
pop
jle
jne
jg
test
xor
cmpsl
arpl
jmp
test
mov
sbb
shll
ret
jns
out
or
mov
dec
pop
push
lods
lea
or
xchg
push
das
scas
dec
roll
push
and
adc
loopne
push
std
cmp
imul
outsb
push
cmc
popf
dec
dec
into
adcl
xor
lods
movsl
popf
mov
xor
add
clc
xlat
into
and
enter
ret
and
in
in
mov
icebp
xchg
sbb
dec
and
outsl
dec
cmpsl
sbb
pusha
and
cwtl
lcall
andb
movsb
mov
in
xor
imul
push
adc
mov
mov
push
adc
mov
shll
jo
into
sub
out
clc
popf
push
js
xchg
imul
sub
icebp
int
enter
push
lret
mull
cmp
ret
sbb
mov
mov
xlat
lcall
xlat
mov
shl
popf
or
int3
xchg
rorl
xchg
jmp
pushf
add
cwtl
xor
insb
sub
jns
out
ret
pop
ffree
sub
aaa
lods
push
sub
add
add
mov
dec
mov
pop
leave
mov
mov
stos
mov
jnp
rcrb
rcl
mov
std
arpl
jp
mov
adc
cwtl
data16
add
mov
leave
lret
sub
and
fldcw
outsl
shll
push
push
push
scas
movsl
cmp
jns
cmp
add
enter
and
mov
cmp
xor
jmp
cwtl
scas
jg
ljmp
sub
cmpsl
mov
inc
adc
mov
mov
sbb
aam
int3
adcb
fildll
pop
or
jp
mov
cmp
rcll
fs
cmpl
mov
inc
subb
sub
cmp
pop
sbb
mov
rolb
pop
xchg
lock
lahf
arpl
or
lods
fld
push
stc
scas
lahf
and
adc
mov
dec
jb
mov
movsb
mov
adc
mov
add
or
or
cmp
xor
and
int
loope
out
imulb
cmp
fstps
shrb
and
test
repnz
mov
movsl
popa
pop
nop
sub
dec
popa
idivl
mov
sbb
pop
andl
cs
repnz
and
cmp
jge
shlb
sbb
fiaddl
jp
mov
nop
inc
icebp
shlb
daa
fdivrl
xor
adc
int3
movsl
adc
or
push
out
pop
mov
cltd
lahf
jb
dec
cltd
inc
out
jo
aas
mov
mov
ljmp
dec
leave
push
out
int3
shlb
sbbb
and
and
dec
es
cmpsl
adc
iret
adc
leave
sub
imul
arpl
in
stos
cmp
jae
pop
out
dec
adc
jne
add
mov
psubw
pop
call
add
xor
fwait
andb
and
aas
xchg
mov
sbb
iret
cld
pop
pop
mov
push
mov
and
or
pop
or
adc
xor
ret
in
cli
add
fisttpll
fisttpll
push
cmp
xlat
pop
inc
add
sub
mov
aaa
imul
movsl
adc
push
jle
out
or
jecxz
dec
imul
pop
sub
mov
add
xchg
xchg
lahf
shl
sarl
clc
loop
jns
jmp
push
vorps
inc
inc
pusha
out
cwtl
pop
repz
xor
hlt
cmp
lods
jle
or
cmp
in
jmp
cmpsl
inc
add
sub
cld
sub
out
fisttpll
pop
repz
lahf
push
cmpsb
fstpl
movl
mov
leave
mov
stos
jns
push
scas
sub
mov
sub
testb
or
repz
rcrl
jne
out
xchg
mov
cmp
push
pop
xchg
decl
cmp
dec
loop
xor
addl
js
sti
xor
cmpl
pop
push
mov
mov
xchg
insb
adc
cmp
mov
or
add
in
bound
out
jg
xor
mov
scas
push
insb
out
mov
ret
ds
aad
shll
lods
std
adc
inc
pushf
jno
sbb
popl
mov
shll
jg
xchg
add
pusha
data16
dec
ja
sub
mov
sbb
jo
dec
lds
test
or
and
scas
xchg
mov
pop
test
sbb
sub
loopne
or
jle
movsb
sbb
mov
xchg
lods
stos
jae
mov
cli
inc
jmp
mov
xor
jo
ds
mov
mov
es
cmp
mov
pusha
mov
pop
push
xor
add
lods
cmpsb
in
xchg
add
arpl
pushf
in
cltd
mov
mov
sub
lret
std
jne
mov
push
adc
and
mov
test
mov
idivb
arpl
jp
add
out
or
in
pusha
subb
or
jae
cmp
jbe
xchg
outsl
jp
mov
bound
cmpsl
cwtl
in
or
dec
adc
jno
push
mulb
test
test
push
mov
loopne
xlat
xchg
pop
cmp
std
jo
push
add
xchg
dec
dec
inc
jo
cmpsb
push
dec
ret
pop
ja
mov
sub
out
es
or
test
jb
scas
xchg
or
subl
and
popa
mov
pop
popf
clc
fdivrl
or
iret
inc
clc
mov
lea
rolb
ljmp
fisubs
sub
cvtps2pd
adc
adc
cmpsb
inc
ljmp
icebp
in
notl
adc
lahf
mov
clc
imul
out
jle
or
jno
adc
mov
aad
cs
lcall
dec
push
rclb
adc
jbe
xchg
xchg
in
mov
xchg
jno
stos
mov
lock
jl
test
out
data16
mov
call
lods
cld
pop
jp
fsubr
in
int
mov
sbb
jge
out
dec
and
push
inc
pop
nop
inc
out
fisubl
dec
pop
add
pop
fsubs
aas
cmp
sbb
push
loope
arpl
idivl
data16
mov
mov
cmp
mov
pusha
mov
lods
jp
test
nop
lret
inc
sbb
sub
call
add
dec
fs
sbb
cmpsb
cltd
andl
adc
adc
mov
mov
mov
adc
and
pusha
insb
xlat
stos
das
icebp
jmp
int
mov
or
pop
ljmp
adc
pop
pusha
add
repz
mov
push
jg
aam
lahf
addr16
sbb
insl
mov
ret
scas
cwtl
ja
cmpsb
push
out
cmp
lea
mov
mov
hlt
inc
push
lahf
test
sub
incl
hlt
test
mov
in
cmp
inc
mov
pop
movsl
and
add
aaa
dec
mov
xchg
lods
hlt
jb
mov
inc
int
int3
pop
mov
int
inc
popf
dec
lock
mov
mov
stos
adc
iret
xchg
jns
mov
dec
data16
scas
xchg
pop
pushf
mov
leave
fwait
adc
clc
cmp
cmp
jmp
jnp
daa
leave
adc
adc
xchg
push
pop
push
addr16
lcall
nop
scas
adc
push
iret
xor
xor
cmpsb
dec
call
int3
push
jmp
mov
cmpsb
mov
faddp
jmp
fcomps
sub
xor
iret
fstp
mov
pop
mov
das
jmp
loopne
cmc
bound
cmc
xchg
fnstsw
sbb
inc
push
call
insl
and
in
orb
sbb
inc
push
sub
adc
and
insl
lods
cmp
dec
fildl
jns
ret
ja
icebp
cmp
adc
in
and
sub
jmp
ljmp
inc
addr16
lahf
xchg
cmp
rol
inc
ret
dec
lea
lret
cmp
sub
lcall
push
xor
xor
adc
jge
insb
push
sahf
sbb
xor
rorb
rol
sbb
aaa
pop
push
and
adc
jp
cld
push
repz
addl
and
pop
popf
push
test
in
mov
dec
mov
dec
fdivr
mov
addl
shll
fstpl
mov
in
mov
pop
sbb
push
out
mov
push
and
push
lock
repz
cmp
dec
mov
xchg
pop
mov
and
rol
movl
loopne
cwtl
sub
into
mov
inc
into
mov
cld
lcall
sahf
inc
ret
sub
std
movb
lds
jg
xor
adc
xchg
pop
mov
fwait
test
lcall
gs
mov
jne
hlt
add
mov
lcall
aas
and
lahf
sbb
ljmp
cltd
pop
jns
xchg
and
sarl
cwtl
sub
es
cwtl
rcll
enter
xchg
std
mov
jb
inc
ret
xchg
sbb
pusha
cmc
shlb
loopne
pop
lahf
cmc
or
loope
clc
xchg
xor
pushf
nop
jae
mov
iret
push
stos
stc
jne
loop
add
aaa
dec
mov
sbb
jp
dec
dec
add
sbb
lahf
mov
inc
mov
xchg
pop
push
cmp
leave
test
push
loopne
and
adc
add
sahf
add
fwait
mov
jo
push
shlb
es
mov
lock
xor
enter
and
and
jae
cmpsb
insb
xlat
xor
jp
int
cmp
and
xor
mov
out
notb
add
lret
sbb
lods
sahf
pop
sub
sub
push
xor
enter
std
sub
arpl
loopne
pop
addr16
lods
push
mov
inc
mov
lods
mov
xor
stc
lock
xor
cmp
fidivrl
lods
cmpl
mov
rorl
xor
icebp
test
push
xchg
push
xchg
aam
jo
add
adcl
scas
dec
inc
cmp
and
ret
es
lock
dec
add
movsb
fwait
subb
pop
cmp
xlat
cmp
jae
inc
sub
sbb
xor
or
cwtl
xor
xchg
int
mov
sti
xchg
stos
jne
out
outsl
push
mov
xor
add
pop
jns
mov
sar
es
add
in
pushf
shrb
adc
pop
test
hlt
push
cmp
scas
inc
dec
add
sarl
outsl
sub
lods
inc
adc
or
icebp
push
mov
adc
adc
push
cmpsl
pop
clc
xchg
stc
jg
push
out
adc
hlt
std
push
pop
pop
push
fimull
jmp
xor
pushf
pop
jbe
jae
ljmp
mov
ljmp
jle
gs
inc
orl
sti
xor
jbe
adc
adcb
ljmp
push
jg
divb
adc
dec
xlat
stos
pop
jg
mov
fists
and
jmp
push
fimuls
into
adc
add
dec
dec
add
pusha
and
jbe
mov
dec
ret
fistpl
xlat
nop
inc
repnz
sub
iret
sti
mov
jp
ja
fldenv
data16
sub
out
call
push
xchg
imul
int
aad
leave
mov
shlb
add
jecxz
test
push
sbb
mov
pop
and
hlt
fistl
pop
cmp
iret
pop
notl
std
and
cmp
push
sub
sub
sbb
scas
dec
in
push
pop
cwtl
scas
push
pusha
ja
or
jo
mov
mov
push
aad
dec
pop
inc
aad
mov
ds
fcomps
gs
fidivrs
dec
shll
cmp
mov
cld
lea
dec
jno
int
push
fs
pop
imul
cli
cmp
lcall
daa
pop
add
inc
mov
dec
or
adc
add
repz
xlat
mov
ss
call
push
mov
cmp
mov
xor
fsubrp
adc
mov
insb
add
or
sti
ud1
pop
dec
mov
je
int3
into
dec
mov
sti
or
in
sbb
cmp
rcrl
lods
xchg
sbb
stos
sbb
bound
cmp
adcl
mov
cmp
and
sub
jecxz
xchg
mov
xor
aam
pop
out
push
mov
sti
dec
test
push
mov
mov
fisttps
rcrb
shrl
mov
ss
jge
insb
js
sbb
or
hlt
insl
je
add
repnz
aad
inc
mov
and
nop
call
mov
outsl
popf
lret
leave
push
push
mov
jmp
inc
jns
and
std
xchg
and
loope
mov
pop
mov
mov
loope
stc
mov
push
mov
les
dec
les
daa
loop
stos
xor
xchg
cmp
push
cltd
xchg
jl
cltd
dec
adc
stc
adc
mov
push
inc
orl
adc
or
clc
jle
dec
aad
mov
test
outsb
jmp
int
and
adc
stos
sub
lods
cld
int3
imul
inc
fisubrl
lcall
daa
sti
aam
jp
mov
jbe
jecxz
xor
and
push
cmc
or
mov
mov
inc
sti
arpl
jnp
and
cltd
mov
je
jnp
out
mov
xor
imul
push
out
clc
xor
push
xor
orb
mov
xor
lret
sbb
pop
repz
mov
cmp
pop
std
sbb
mov
push
int
sub
pusha
out
aad
and
add
push
xchg
xor
dec
fptan
mov
adc
repz
xchg
lcall
push
cmpsl
jl
leave
dec
test
fnsave
or
lock
push
xchg
mov
es
out
mov
push
xchg
adc
lret
sub
std
pop
in
bound
xor
loopne
int3
cld
pop
or
mov
fistl
fistpll
loopne
pop
sub
xor
and
mov
lea
cld
lcall
sub
xor
and
fsubrl
jbe
add
imul
mov
enter
repz
adc
in
movsb
cli
push
xchg
cmp
xorl
xchg
push
stos
jge
and
and
adc
std
call
add
les
cmp
and
or
lods
jle
mov
sahf
mov
xor
shrb
xor
jns
hlt
nop
mov
dec
loop
or
insl
add
ss
mov
inc
inc
int3
dec
sub
xchg
dec
outsl
push
inc
or
or
jle
clc
mov
or
std
cltd
add
push
fsubrl
loope
dec
jg
std
lcall
jge
imul
fcomi
cmp
sbb
call
in
mov
add
dec
jbe
or
or
cli
sub
mov
ja
mov
jmp
xor
pop
xor
cmp
cmp
ja
xchg
test
das
andb
xor
test
pop
lcall
test
mov
repz
adc
or
add
push
and
inc
jmp
mov
aad
mov
in
mov
scas
data16
mov
xchg
or
testb
or
ret
push
mov
and
inc
sbb
insl
pop
add
adc
xchg
inc
dec
scas
xchg
stos
aad
notb
dec
rclb
pop
pusha
in
out
jo
mov
pusha
jno
shlb
xchg
cmp
shr
push
jmp
pop
jne
dec
pusha
xor
outsl
push
incb
ss
call
shll
cmp
hlt
pusha
push
imul
dec
ljmp
fimull
and
adc
sub
jbe
xor
lea
cmpsb
ret
inc
mov
movsl
pop
fcmovnb
rcll
mov
out
mov
jmp
ficomps
mov
aaa
or
mov
xor
loope
push
mov
and
pop
mov
add
jns
leave
and
test
and
push
jp
out
aad
sbb
ja
test
aaa
data16
mov
scas
mov
icebp
sub
push
pusha
int
mov
sarl
push
test
es
push
cli
add
push
imul
je
mov
mov
outsl
inc
lods
jnp
inc
and
mov
sub
sub
lock
xchg
les
cmp
mov
stc
mov
lds
adc
enter
fsubl
fwait
dec
aaa
lock
push
mov
sbbb
pusha
outsb
mov
bound
fwait
test
testb
iret
mov
jns
xchg
stc
or
call
jg
push
in
pop
adc
fcompl
dec
or
aad
repz
into
or
add
push
jle
jg
add
inc
ds
mov
dec
lods
add
mov
ljmp
and
fcomps
xchg
mov
xor
jno
es
cmp
out
xor
rorl
or
pop
add
adc
mov
mov
mov
pop
sub
or
mov
cmp
mov
aas
push
aas
mov
push
clc
aam
aaa
sub
push
inc
lahf
outsb
jno
insb
loopne
scas
cltd
lret
into
flds
add
div
shll
xchg
inc
std
fs
jnp
outsl
andl
or
daa
lret
cmp
push
inc
enter
fldl
incl
or
outsl
jmp
mov
add
mov
xor
mov
xchg
test
lret
cmp
loope
rorl
lds
cld
nop
out
jo
stos
cmpsl
mov
test
shrl
lods
in
or
cwtl
push
mov
xor
call
mov
or
xchg
lds
or
sub
into
push
fdivl
sub
pminsw
icebp
xchg
insb
sub
gs
dec
fbld
setns
cmp
or
shrl
cmp
mov
shrl
lret
sub
jl
sbb
push
jecxz
sbbl
sub
pushf
jae
lret
fld
into
xor
cmp
mov
adc
pop
popa
pop
aam
mov
and
xor
out
dec
sti
xchg
or
pusha
fstpt
add
cmp
arpl
pop
jae
in
cmp
pop
push
and
xor
pushf
mov
sbb
xchg
shll
leave
aam
flds
mov
push
jno
sub
pushf
and
xor
fstpt
push
fucomip
cmpsl
cmpsl
shll
pop
jnp
push
sub
cmpsb
xchg
gs
lret
xchg
loope
out
push
dec
scas
xchg
jle
dec
rcll
push
in
and
lcall
stos
fcompl
push
sbb
cwtl
into
mov
imul
xlat
mov
pop
rcll
imul
mov
ljmp
sub
fwait
in
jns
jmp
jmp
daa
pop
add
xchg
sub
lds
mov
sub
lea
mov
and
adc
movsb
mov
push
push
mov
sbb
addr16
dec
clc
push
lret
mov
in
ss
mov
pop
fs
imul
xchg
push
fistps
enter
int
enter
icebp
cmp
pop
add
xor
mov
pop
repnz
les
dec
cmp
or
mov
dec
push
push
rolb
fimuls
lock
je
faddl
in
jle
add
loope
pop
pop
pmaxub
sub
ss
out
push
jbe
push
sbb
inc
movsl
rorb
in
sahf
hlt
and
aad
out
nopl
push
and
ljmp
adc
out
lcall
pop
adc
jmp
stc
jge
ljmp
mov
push
cmp
cmpsb
outsb
int3
and
inc
cmp
scas
fstl
cltd
jp
push
mov
lock
enter
cmpsb
xor
bound
subl
or
mov
sbb
mov
movsl
pop
negl
fistl
inc
fldt
sti
dec
lret
rcrb
and
mull
dec
andl
sub
xchg
addr16
mov
sub
das
push
and
dec
das
pop
in
xlat
mov
insb
xchg
add
cld
inc
repnz
bound
icebp
sbb
sub
sti
mov
test
outsl
fcmovbe
sbb
aas
insl
xor
add
sbb
xchg
andb
mov
pushf
aad
addr16
push
add
in
int3
ficoml
push
add
add
jp
pop
sbb
mov
lods
loope
shll
mov
add
or
enter
xchg
and
cmp
out
cmp
rorl
inc
aas
fimuls
mov
sbb
sub
mov
pop
sbb
xor
aas
sub
and
adcl
xchg
mov
mov
xchg
pop
mov
insb
sbbb
adc
addr16
ret
std
les
sbb
rorl
mov
movsl
xchg
mov
flds
or
mov
popa
mov
cmpsl
pop
jae
outsb
fimull
lock
int
mov
iret
mov
add
leave
and
adc
xchg
mov
shlb
insl
mov
sub
hlt
inc
sbb
leave
jno
sub
hlt
hlt
in
stos
psubusw
add
sub
and
jge
loop
shll
xchg
sbb
in
out
iret
adcb
mov
cmp
pop
or
int
add
xchg
xlat
dec
add
xchg
int3
cld
cmp
dec
je
mov
mov
sti
inc
sub
mov
xchg
mov
adc
xor
ljmp
or
pop
jae
mov
cmp
fimuls
movsl
je
lret
add
jecxz
lret
pop
inc
xor
int
jmp
clc
push
sbb
mov
iret
xchg
test
push
jo
xchg
xor
adc
scas
popa
pop
cmp
je
sub
lcall
test
or
mov
and
shll
pop
and
mov
test
adc
shlb
xchg
and
jnp
push
inc
pop
push
xchg
xor
xchg
xchg
addb
lahf
mov
fs
lahf
sub
fucom
insl
sbb
mov
pop
cmp
mov
dec
cmp
and
sub
jb
mov
push
and
incb
adc
ret
test
fisubrl
loop
cwtl
mov
bound
xchg
ds
into
sub
outsl
sub
popf
mov
mov
cmp
divl
xchg
xchg
ror
add
add
mov
or
and
adc
jg
insl
xor
mov
pop
jle
sbb
cmp
mov
leavew
lods
lcall
sub
inc
mov
mov
inc
inc
cld
adc
push
xor
inc
mov
push
mov
and
aas
mov
cs
iret
jb
and
push
dec
clc
xor
dec
enter
push
sub
scas
pop
test
cld
add
fwait
daa
bound
je
jg
push
cmp
or
les
pop
push
dec
xor
js
imul
lahf
pop
je
and
sbb
mov
lcall
in
idivl
and
push
mov
sbb
rcrl
cmp
dec
popf
in
jns
push
ja
in
in
outsl
repz
or
imul
es
cmc
push
mov
push
sbb
and
mov
push
adc
int3
push
movsb
add
icebp
pop
imull
mov
fimuls
cwtl
mov
repnz
std
mov
sbb
lahf
mov
fld
xor
or
scas
in
jg
adc
jp
dec
and
test
ja
into
mov
cld
mov
and
aaa
int3
imulb
pushf
dec
jle
gs
and
adc
test
aam
out
in
cmpsl
repnz
rclb
xor
mov
mov
adc
pop
popa
inc
mov
pop
insb
es
mov
adc
xchg
notb
or
fcmovnbe
adc
shrb
sub
pop
add
push
cmp
cld
icebp
shll
mov
scas
dec
into
loope
xchg
imul
rcll
xor
and
mov
mov
sti
divb
mov
loop
repz
sbb
push
mov
imul
push
jnp
ss
dec
je
or
lret
adc
addl
rcll
inc
in
mov
xchg
adc
shrd
aam
dec
test
push
in
outsl
inc
mov
adc
sbb
mov
xor
push
sub
inc
imull
add
jp
into
rclb
jne
pop
lret
sub
mov
lds
xchg
lahf
lock
push
dec
inc
clc
mov
out
push
sbb
int3
xor
in
out
sbbl
in
jno
xchg
orb
sub
xchg
xor
shlb
cld
or
xchg
push
stos
mov
addr16
jno
aad
rcll
std
cmp
xor
mov
dec
outsl
mov
ret
fiaddl
fs
sub
mov
cmp
enter
push
movsb
test
add
mov
jno
mov
dec
stos
negl
mov
jmp
and
or
aaa
mov
inc
aas
shll
xor
ret
xchg
mov
sbb
imul
mov
jae
addb
leave
nop
add
sub
data16
jmp
xor
jae
xchg
popf
test
add
ret
test
xchg
xchg
sub
shrb
jb
loop
jp
jno
jge
fstps
jecxz
jae
in
mulb
mov
or
enter
cltd
mov
adc
arpl
sub
mov
or
xchg
xor
std
stc
or
jl
mov
pop
jae
sbb
mov
xor
clc
dec
adc
sbb
xchg
cmp
mov
add
cmc
xchg
jbe
mull
sbb
jb
xchg
pop
fsubrl
cs
fstp
mov
out
popa
aad
mov
mov
mov
rolb
out
cmp
insl
sbb
push
cmp
mov
fldenv
mov
inc
je
dec
or
fmuls
daa
cmp
sub
adc
jmp
incb
rolb
mov
adc
jge
sbb
addr16
jecxz
cs
imul
pop
fmulp
sahf
clc
pop
stos
sub
mov
mov
sbb
int3
int
xchg
inc
adc
xchg
into
repz
cs
mov
cs
stc
mov
in
jbe
ds
ret
or
lret
cmp
and
inc
and
xorl
jo
cmpsl
mov
lea
inc
rorb
clc
cmp
or
pushf
lcall
cmpsl
inc
mov
mov
mov
mov
daa
and
xchg
and
das
xchg
mov
push
cmp
int
adc
jmp
das
mov
aas
adc
shr
jmp
pop
adc
outsb
fs
cmp
daa
sti
sub
mov
stc
push
xor
sub
ja
push
fistpl
pop
add
jbe
and
daa
dec
mov
mov
cltd
cmpsb
push
cmp
fimull
enter
pop
shll
sarl
pop
xor
xadd
out
mov
faddl
push
pop
sahf
mov
jns
ja
dec
or
lock
sbb
lret
dec
mov
bound
in
and
das
jmp
add
push
jns
push
xor
jnp
movsl
mov
push
aad
push
rclb
pusha
dec
dec
inc
push
xor
out
and
das
push
aad
ficoms
je
cmp
sub
js
jno
dec
out
push
sbb
das
bound
push
mov
pop
popf
lods
cmpsl
ja
adc
mov
mov
jge
inc
mov
jae
xchg
push
stos
mov
ss
fwait
mov
push
movsl
jl
nop
ljmp
std
add
and
xchg
ljmp
movsl
pop
outsl
fisttpl
add
aam
inc
cmc
jl
ljmp
incb
mov
and
mov
mov
cmp
lods
pop
nop
xlat
fsubrl
aas
arpl
mov
lahf
push
ret
pop
fnstsw
hlt
push
and
outsb
sar
add
push
icebp
push
xor
monitorx
aam
lock
roll
stos
push
dec
xchg
mov
mov
in
leave
xor
les
push
mov
xlat
clc
or
or
into
aaa
mov
fistps
mov
sub
adc
test
insl
fdivrs
adc
adc
test
test
inc
push
lds
cmp
lock
jecxz
bound
mov
inc
cli
fsubl
imul
pushf
cmpsb
ja
inc
mov
cmp
stos
lods
jns
cmp
outsl
cli
aaa
add
ljmp
xor
in
fdivl
xor
cmpsb
cmpsl
pop
stc
add
and
pusha
das
xlat
pop
adc
jl
add
add
cmpsb
movsl
and
sti
sub
xor
popf
push
xlat
pop
movsb
xchg
cmp
jo
fs
cltd
dec
mov
test
pop
mov
sub
aad
inc
out
inc
cltd
test
push
ja
inc
or
mov
dec
sbb
sbb
roll
xchg
mov
xchg
adc
daa
popf
test
jp
mov
lods
push
movsb
mov
dec
xcrypt-ofb
cmpsl
stos
pextrw
and
or
mov
pushf
pop
push
push
pop
shll
add
insl
repz
fisttpl
mov
jns
pop
mov
xor
xlat
xchg
xchg
xor
sub
pop
outsb
mov
int3
or
mov
inc
cmp
test
dec
sahf
lret
arpl
faddl
ficomps
xchg
roll
mov
loope
inc
or
xor
sbb
jecxz
dec
cmp
cmp
int3
pop
les
jl
jae
and
xchg
enter
movl
cmp
or
jg
mov
sub
jge
jle
je
lods
cmpsl
in
out
mov
aas
lods
or
jmp
xchg
inc
cmp
aad
sub
pop
or
lret
ret
enter
or
cwtl
xor
inc
inc
mov
sub
data16
in
xor
xlat
movsb
nop
testb
daa
movsl
sub
fidivs
xor
loop
mov
sub
dec
jbe
push
lods
test
add
xor
and
mov
pop
cmp
out
aas
sub
mov
cmp
sar
dec
or
jb
leave
lret
scas
sbbl
test
lods
cmp
fisttpll
mov
cmpsl
or
sub
jl
lret
adc
fsub
mov
jge
push
ret
pop
in
test
push
mov
sbb
add
jle
mov
mov
mov
cltd
add
dec
je
icebp
sbb
jmp
jge
sub
cmc
aam
in
sbb
adc
mov
enter
outsb
nop
fidivs
in
out
outsb
outsl
lea
jg
sbb
mov
icebp
jmp
lret
mov
mov
mov
insl
push
sbb
cmp
xlat
pop
test
mov
lcall
cmp
rclb
and
adc
push
sub
inc
sbb
test
jae
insl
pop
push
outsb
stos
sarl
jno
cmp
cmp
xchg
fcmovb
ja
pop
sub
call
pop
jno
add
xor
jl
jb
scas
pop
movb
ss
sbb
pop
jnp
push
or
lret
mov
jle
mov
loopne
cmp
fisttps
xorb
lret
dec
or
push
xor
jns
shlb
add
scas
cmp
fildl
inc
or
mov
scas
mov
sbb
int3
pop
pop
les
loopne
daa
cltd
sub
mov
icebp
xor
out
data16
pop
and
test
mov
add
or
ds
das
test
push
popf
jo
loope
insb
cmp
inc
xchg
fisttpl
add
adc
or
nop
xchg
fs
pop
cli
and
call
lock
adc
dec
dec
and
xchg
xlat
iret
lock
pop
add
out
movzwl
std
rorl
add
mov
lods
shr
push
mul
aam
in
enter
lock
insb
xor
xchg
xchg
push
mov
jle
repz
loop
xorb
pop
xchg
fisubrl
dec
popf
jp
jno
xor
sahf
cmc
fsts
or
movsb
andl
inc
or
in
inc
into
inc
cs
push
js
or
out
movsb
cmpsl
in
rcrb
or
leave
aam
mov
mov
orl
js
js
dec
mov
or
js
je
inc
stos
cmc
pushf
aas
movsb
adc
aaa
mulb
push
mov
jmp
push
lea
add
dec
mov
inc
mov
mov
adc
gs
faddp
cmpsb
adc
roll
adcb
frstor
andb
jle
mov
mov
mov
andb
or
add
insl
fsubs
leave
in
push
adc
adc
inc
push
loop
jecxz
adc
call
scas
dec
out
add
cmp
ljmp
push
or
adc
andb
imul
cmp
popa
pop
popa
push
and
jecxz
push
cld
sbbb
cmp
ljmp
inc
shl
xor
or
mov
ja
dec
in
imul
push
sti
lret
dec
test
cmc
or
enter
mov
or
jge
int
repnz
ret
arpl
xchg
mov
cld
xchg
mov
pushf
daa
dec
cltd
adcl
mov
dec
outsl
inc
sbb
outsb
sub
bound
out
andl
sub
fdivrs
push
jge
or
and
pushf
jae
sbb
xchg
data16
jo
cmp
mov
fisubs
or
rcrl
xchg
adc
inc
clc
adc
mov
scas
test
js
xchg
pop
and
push
out
lret
call
add
sub
into
mov
inc
test
mov
outsl
subb
rol
sbb
jns
int3
lahf
xchg
mov
xchg
std
xchg
sti
mov
sti
mov
rcrb
dec
ja
mov
insl
push
nop
jnp
stos
hlt
or
and
xor
sahf
cmp
imul
lock
jmp
fsubrl
hlt
testl
cltd
icebp
xchg
adcl
push
inc
test
jle
mov
mov
mov
aaa
fwait
mov
xchg
mov
loope
imul
or
je
enter
testb
fwait
testb
sahf
in
popa
bound
mov
or
aam
or
cmp
enter
sub
mov
fs
add
xor
mov
mov
push
cltd
jno
lods
addr16
push
sub
adc
ja
dec
jge
pop
into
sbb
repnz
push
pop
rcll
add
je
in
inc
int3
into
adc
sub
inc
mov
iret
or
xchg
mov
jmp
mov
adc
leave
ss
mov
push
push
iret
clc
je
mov
push
mov
sub
imul
call
and
or
cltd
mov
mov
fs
sbb
pop
xor
lcall
xor
sbb
sub
and
mov
mov
cmp
sahf
push
jno
sbb
jl
cmpsl
test
mov
mov
fcomi
cmovne
clc
scas
es
stc
inc
pusha
ja
outsl
dec
leave
lds
test
test
daa
shl
jmp
and
jmp
push
sub
push
sbb
out
mov
push
pop
and
call
jg
cmpsb
and
mov
lods
fcmove
jmp
cmp
int
push
mov
pop
loope
les
adc
pop
scas
into
or
arpl
iret
and
aas
jp
outsb
xchg
add
and
addr16
out
cmpsb
aad
testl
jae
ret
jmp
pop
cmp
bound
fs
inc
xor
dec
mov
imul
aam
pop
sbb
js
xchg
in
xchg
or
sub
add
push
scas
iret
mov
lds
outsl
enter
mov
xlat
arpl
loopne
xorb
movsb
lods
dec
or
out
cwtl
mov
cmp
xchg
mov
loop
and
jl
int
shll
fisubrs
pusha
leave
idivb
pop
xor
test
dec
ss
cltd
imul
cmp
pop
jne
xchg
mov
inc
inc
push
xor
imul
mov
push
sub
scas
adc
popa
inc
out
sahf
mov
jne
into
mov
push
dec
mov
out
ret
cmp
and
pop
fadds
dec
icebp
cmpsb
bound
sahf
push
inc
mov
mov
inc
hlt
jno
fwait
sbb
aaa
xchg
push
mov
xor
xor
push
cli
adc
and
out
int3
in
mov
cwtl
mov
push
es
mov
daa
in
cld
jns
repnz
mov
jg
adc
out
xchg
push
xor
push
mov
pop
and
js
mov
lods
xor
data16
int
sti
inc
stc
push
or
push
jp
insb
and
push
and
jbe
push
cmp
shl
addb
sbb
fs
fsubp
xor
cmpsl
repz
cltd
push
lods
call
out
cmp
and
jb
inc
mov
push
mov
add
mov
mov
sub
ret
fidivrs
xor
xchg
sbb
mov
lods
pop
fwait
mov
stos
fistl
pop
add
inc
mov
pop
push
les
mov
mov
push
adc
jmp
popa
and
mov
jne
fisubrs
push
in
sarb
cld
mov
push
out
mov
push
cltd
xor
lock
jnp
push
lret
hlt
mov
movl
fs
dec
out
fbld
outsb
call
pusha
fisttps
mov
cmp
mov
push
dec
aam
lea
sub
icebp
cmp
sub
pop
sub
ds
sbb
mov
cmp
and
cmc
ficoml
call
stos
or
push
and
inc
incb
aas
adc
out
shll
jmp
les
and
pop
imul
cmp
daa
les
sbb
add
push
imul
dec
lock
arpl
ss
xor
cmp
dec
or
mov
sbbl
push
pushf
sbb
inc
testb
iretw
mov
loopne
scas
int3
imul
push
jb
nop
jns
xor
lahf
ljmp
and
lahf
or
add
incl
cwtl
in
dec
loope
fiadds
fildll
fidivrl
fildl
jno
mov
jo
pop
vcvttss2si
add
push
fnsave
test
jle
icebp
and
pop
xchg
icebp
outsl
dec
mov
jge
push
shl
out
fstpt
mov
int3
enter
or
and
mov
gs
mov
daa
jns
lret
mov
clc
cmpsb
inc
lods
inc
xchg
dec
push
jne
lar
jp
add
pop
push
inc
shlb
jg
and
push
pushf
cwtl
cltd
push
sub
out
add
cmpsl
and
adc
dec
jbe
stos
test
ja
xor
pushf
orl
call
pop
push
icebp
or
daa
test
dec
xchg
push
in
popf
fwait
push
les
mov
dec
fmull
fisttpll
mov
fs
xchg
sbb
add
mov
pop
pop
ret
nop
mov
sahf
dec
push
rorl
add
adc
shr
sbb
mov
xchg
sahf
add
mov
rcrl
adc
popa
xchg
or
add
inc
loope
pusha
dec
iret
sub
or
xlat
insb
testb
xor
int
sbbb
lds
cmpsb
xor
mov
out
pop
sbb
adc
push
ret
pushf
pop
mov
das
loopne
addr16
jg
stc
pop
nop
mov
sub
lret
xchg
popa
movsb
jns
repz
ret
cmp
jl
and
dec
es
inc
mov
vpmadcswd
adc
dec
adc
xchg
jns
testb
dec
sbb
shl
pop
push
ss
movl
mov
lods
cmp
cmpb
shl
push
adc
jb
out
push
ficoms
xchg
xchg
mov
and
subb
mov
psubusw
pop
call
mov
push
stc
iret
cs
cmpsl
sbb
mov
fisubrs
xor
mov
or
ja
push
fists
outsl
addr16
shr
mov
pop
call
xor
lret
jmp
inc
push
test
adc
push
push
lahf
ljmp
dec
orl
nop
add
in
cs
dec
shlb
insl
fadd
and
imul
in
push
sbb
inc
les
in
mov
add
cwtl
mov
movsl
inc
mov
call
fistpll
add
jle
and
pushf
gs
cwtl
jo
jne
cmp
sbb
push
mov
loop
mov
lahf
stos
imulb
cmp
jge
in
jmp
and
outsb
or
fwait
hlt
enter
data16
test
repz
mov
jno
fwait
xor
je
pop
adc
dec
mov
lcall
flds
and
jle
or
inc
mov
adc
jp
adc
adc
lock
pop
add
xchg
and
mov
popa
sub
push
fdivp
add
jnp
mov
xchg
int3
pop
sbb
mov
or
ret
mov
mov
loope
ret
call
jns
shl
mov
xchg
mov
cld
add
out
xchg
xor
sbb
lds
cmc
imul
movsl
cwtl
add
mov
xor
mov
fsubrs
inc
incb
imul
roll
aas
scas
ljmp
in
fcoml
or
hlt
add
jp
imul
xor
or
lret
fmull
lods
push
or
xor
sbb
jmp
inc
jl
xchg
mov
pop
adc
mov
fwait
cmp
xor
in
push
pop
or
repnz
cltd
or
pop
push
fcomps
call
das
mov
mov
stos
pop
ds
icebp
shlb
mov
mov
scas
fimull
lea
cmp
sub
xor
stos
push
test
aad
push
pusha
andl
push
pop
or
out
bound
jae
ss
sbb
ret
fucomi
lock
rcr
sbb
cltd
and
out
mov
addr16
xchg
iret
xchg
fists
inc
mov
lods
lcall
in
pushf
jg
push
push
in
stos
xlat
cmpsl
pop
pop
les
xor
in
xchg
xor
icebp
mov
icebp
jl
lret
push
sbb
xchg
movsl
mov
fucom
xlat
cmpsl
add
lret
fstps
mov
cmp
rcrl
pop
jle
fsts
inc
fisubl
xchg
dec
or
mov
subb
scas
push
sub
sahf
jns
nop
int3
pslld
xchg
jp
in
ret
frstor
out
xor
out
mov
dec
scas
jmp
sbb
ss
dec
shrb
mov
les
rcl
xchg
pop
repnz
pop
push
testb
adc
arpl
repz
jae
int
add
mov
jg
pop
xor
call
cmp
dec
in
push
pop
daa
in
xor
test
testl
not
outsl
sub
xchg
xchg
jno
push
jnp
mov
movsb
cmpsl
jg
jbe
test
xor
inc
jle
jns
pop
ret
mov
push
std
xor
jmp
mov
jge
sbb
aas
xchg
aas
nop
les
out
xchg
pop
push
pop
movsb
lods
popf
jns
fnsave
out
sbb
cmp
testl
lds
inc
std
adc
pop
adc
push
imul
inc
jg
lcall
inc
xchg
out
inc
pop
mov
dec
iret
subl
outsl
sub
jne
xchg
sub
push
pop
cmp
dec
stos
fisttpll
loopne
std
jno
jmp
pop
fidivrl
sub
cmp
inc
insb
fs
outsb
cmp
inc
push
mov
xchg
and
fucom
or
sbb
hlt
sub
mov
repz
stos
dec
mov
push
jecxz
xchg
mov
inc
in
insl
inc
xchg
jge
jbe
or
sbb
repz
inc
xchg
cmp
adc
dec
lods
adc
push
pop
and
repnz
mov
jmp
nop
into
clc
inc
mov
das
test
adcb
cmc
sub
arpl
repz
es
push
adc
mov
fsubs
mov
insl
cmp
push
out
mov
int3
out
pop
stc
repz
cs
mov
outsl
push
pop
xlat
mov
inc
mov
mov
das
dec
jg
cmp
outsb
mov
fwait
ja
in
stos
mov
movsb
cmp
or
dec
insb
and
adc
adc
ja
jmp
jecxz
mov
xor
push
notl
jle
imul
adc
loopne
adc
add
fcmovnbe
sbb
rcr
jecxz
jl
jno
in
lods
jg
mov
or
pop
loop
jbe
pop
push
pop
shlb
jmp
lods
push
mov
mov
adcl
inc
rcl
mov
mov
jb
ds
lret
into
das
jge
mov
in
mov
int3
mov
movl
push
sub
cwtl
bswap
adcb
jnp
fbstp
stc
cltd
int
pop
jbe
movaps
insb
pop
xchg
enter
iret
inc
dec
jecxz
dec
xchg
aaa
push
mov
iret
icebp
idivb
adc
cld
pop
cmp
ret
mov
inc
fisttps
jle
mov
sub
bound
in
push
dec
sbb
xchg
pusha
or
popf
std
shrl
xchg
sbbb
xor
fsub
hlt
adc
in
in
push
jne
ja
outsl
fadds
push
push
push
cmpsb
jp
shlb
sub
inc
scas
nop
mov
mov
das
jl
adcl
add
call
mov
jno
popf
sbb
ret
dec
scas
dec
enter
std
sbb
and
sahf
jbe
js
jle
inc
xor
jmp
fiaddl
jno
push
scas
mov
jne
test
push
pop
sub
out
stos
sub
mov
xchg
mov
push
pop
xchg
test
adc
in
ds
test
add
stos
xor
scas
cmp
ucomiss
or
inc
fisttpl
pop
or
mov
xchg
addr16
mov
popf
js
push
lods
hlt
out
int
inc
jb
adc
mov
xchg
shrb
mov
scas
icebp
cwtl
jns
xor
jo
mov
inc
outsb
dec
sub
imul
leave
dec
push
test
stos
js
mov
mov
scas
pusha
mov
adc
push
lret
enter
pop
ficompl
inc
loope
aad
dec
loope
inc
jb
jbe
add
fistps
into
cmp
or
inc
outsb
inc
push
int
rcrb
and
ds
xchg
js
push
mov
xchg
xlat
shlb
or
adc
cmp
test
pop
lahf
js
bound
and
aam
outsb
sub
fwait
cli
inc
pop
add
lahf
xchg
add
rolb
mov
push
rorb
mov
fidivl
sub
dec
mov
ret
addb
xchg
shll
cs
mov
imul
push
dec
into
xchg
jmp
lds
call
push
shrl
pop
rorb
mov
sbb
addr16
pop
in
out
aam
movsb
xchg
or
pushf
aaa
pop
inc
stos
lods
scas
adcl
insb
jmp
pop
hlt
insl
icebp
shl
aam
mov
inc
push
xor
push
dec
lret
sbb
idivb
jp
cmpsb
mov
fisttps
pop
push
xchg
mov
pop
setp
cs
scas
push
andb
jle
push
push
dec
xchg
sbb
pop
leave
sbb
mov
jp
ss
cmp
or
cmp
mov
inc
test
test
mov
cmp
pusha
and
sbb
iret
mov
addl
out
jnp
adc
xor
test
outsb
or
sahf
out
inc
mov
pusha
mov
cli
mov
cmp
in
out
jg
mov
xor
push
sub
pop
adc
xchg
jno
cwtl
jne
pop
or
lahf
out
cwtl
jb
pop
mov
push
and
js
mov
jp
pop
and
loopne
sub
out
repnz
js
mov
lret
adc
jne
imul
cmp
xchg
gs
add
sbb
rclb
gs
idivb
or
loopne
repz
inc
add
cmc
aad
sub
pop
push
jg
icebp
jp
enter
pop
es
push
adc
sbb
adcl
hlt
xor
pop
xor
xor
cmp
sub
popf
adc
push
cmc
jb
mov
loopne
jbe
pop
pop
aam
aas
mov
aas
push
push
jae
pop
pop
sbb
or
insb
lcall
jmp
nop
mov
mov
jmp
adc
js
cmp
sbb
hlt
loopne
mov
pop
mov
sbb
hlt
xchg
leave
push
popf
movsb
aam
jg
fwait
ja
arpl
out
adc
adc
xchg
repnz
outsl
and
and
outsb
dec
jbe
loop
pop
cmp
or
out
aad
push
jp
cmp
dec
mov
es
sbb
sbb
lds
in
call
cld
fistpll
or
leave
ds
stos
sbb
mov
out
inc
iret
sti
jns
xchg
push
mov
pop
pop
inc
mov
inc
cltd
push
fwait
cmp
dec
or
mov
aad
add
inc
xchg
popf
test
loopne
mov
repnz
pop
add
fs
std
xor
pushf
push
test
adc
stos
sbb
ret
out
xchg
pop
lock
pusha
xor
mov
pop
pop
adc
or
fildl
mov
sbb
add
fsubr
dec
cli
xor
cli
pop
dec
mov
shr
mov
pop
inc
es
add
idiv
xor
xchg
mov
ljmp
hlt
fistps
pop
push
add
mov
sbb
in
cltd
pop
xor
loop
cltd
inc
or
jno
shll
adc
out
test
jo
out
stos
popa
popf
adc
shrl
stc
xchg
addb
lret
lahf
xor
notl
in
pusha
push
jmp
js
push
mov
scas
fisttpll
dec
xor
pop
pop
mov
in
mov
mov
out
pop
jp
roll
aad
add
jo
mov
ret
xor
mov
jmp
std
mov
inc
jg
cs
enter
or
fisttpl
add
into
sub
in
out
dec
adc
xor
or
inc
stos
xchg
xchg
popf
repz
cmpsl
inc
mov
in
es
jbe
imul
loop
test
flds
es
mov
nop
sub
loop
scas
xchg
sbb
loope
popf
out
in
icebp
add
inc
fcoms
adc
mov
test
push
xor
test
rolb
xchg
xchg
mov
push
mov
pop
mov
fdivrl
stos
arpl
xor
sbb
mov
rcll
lock
aad
mov
mov
cmc
inc
mov
add
int3
loopne
imul
cmp
test
loopne
jb
push
sbb
xor
mov
inc
mov
xchg
mov
in
repnz
dec
sub
inc
cli
in
outsb
mov
rclb
addl
mov
or
push
xchg
rorl
decb
sbb
mov
std
outsl
lea
adc
xchg
into
loop
dec
ss
adc
shrb
cli
sbb
outsb
movsl
push
cmpsl
mov
xlat
adc
pop
and
mov
inc
dec
outsb
sahf
lds
stos
js
and
pop
cmc
sbb
int3
les
add
in
or
lock
jno
or
lock
jb
dec
and
lods
cmp
mov
add
sbb
mov
pop
in
pop
push
pop
and
movsb
adc
int3
gs
dec
std
mov
and
fcomi
pop
orb
and
dec
rcr
lods
in
add
xchg
mov
cmp
mov
aas
mov
icebp
cmp
cmpsb
push
fs
fnstsw
xor
sbb
xchg
in
mov
daa
xor
movsb
xlat
cmp
xor
xor
xchg
sbb
pop
push
sahf
adc
xor
repz
jecxz
add
jno
test
iret
jbe
cmp
int3
jae
loope
bound
mov
or
mov
push
push
in
repz
cmc
mov
mov
subl
movsb
scas
jns
test
in
imul
stc
sti
ja
pop
int
cmp
adc
dec
orl
shr
xchg
mov
ja
pop
push
inc
push
cltd
scas
popa
jle
pop
inc
lds
mov
jmp
insl
ret
repz
cs
sub
jmp
movl
not
pop
push
imul
jle
outsb
xchg
jns
es
dec
cs
inc
inc
mov
sbb
movsb
stos
je
mov
xor
ja
jle
cmp
jb
daa
loopne
jl
jns
inc
push
orl
lahf
dec
mov
push
cmp
icebp
sbb
sub
mov
out
jp
inc
fisubrl
sbbl
jg
and
pop
add
out
push
ds
push
xchg
lret
sahf
sbb
jmp
sbb
inc
or
sbb
repnz
xor
adc
dec
pop
pop
push
or
or
aas
jo
jno
dec
mov
jp
pop
add
ljmp
mov
or
std
insb
pop
push
lahf
leave
cld
scas
mov
insl
inc
cmp
xor
test
lods
jge
in
adc
ficomps
xor
hlt
xor
out
and
cwtl
and
int3
dec
and
sub
xor
scas
popf
das
pop
jp
dec
mov
push
pslld
and
lcall
mov
lahf
xor
enter
dec
dec
dec
dec
cltd
mov
pop
mov
sahf
push
pop
mov
jne
mov
nop
fidivs
popa
mov
mov
or
roll
ljmp
xchg
jo
daa
inc
add
movsb
adc
xor
sbb
pop
jnp
cwtl
fs
fsubrp
mov
stc
jmp
aaa
rclb
jl
and
adc
in
jae
lods
sub
subl
cmp
push
inc
in
push
push
stc
cmp
lret
das
sub
and
scas
mov
pop
or
add
mov
push
dec
cmp
jae
sbb
xchg
jns
pop
mov
pop
push
add
mov
pusha
adc
adc
out
cmc
adc
pop
sub
jmp
loop
std
mov
push
loope
mov
arpl
mov
les
lahf
iret
xor
lea
adc
xor
out
aad
jle,pn
dec
fdivrl
pand
cwtl
mov
push
push
jbe
dec
in
imul
imul
jo
jg
les
movsl
popl
insb
jo
sbb
jecxz
sub
sbb
adc
insb
in
sbb
cmp
pop
jmp
dec
adc
leave
mov
repnz
sbb
sbbb
leave
test
sub
jl
cmpsb
setp
mov
mov
xor
sbb
ljmp
divl
fdivrs
insl
fwait
mov
lret
push
std
mull
fs
insl
test
js
xor
int
mov
push
xor
xlat
lods
cmp
add
test
lcall
dec
mov
mov
dec
repz
xlat
lcall
sub
jne
or
pop
cmc
popa
jne
test
xchg
xor
in
fs
into
sbb
add
imul
sub
dec
mov
addl
stc
es
fsubrp
jmp
sti
aaa
psrad
movsl
aaa
stos
fisubl
push
and
xchg
outsb
mov
aam
fsts
jl
jp
fimull
testl
adc
jl
or
xor
in
xchg
sbb
incb
pop
jns
ljmp
sub
ss
out
pusha
nop
sahf
or
in
mov
fimuls
pop
pop
mov
jo
jne
lret
mov
xorl
das
push
roll
add
scas
add
repnz
call
xchg
fisubl
add
pop
add
les
fwait
pop
movsb
rcll
mov
xchg
adc
fwait
dec
daa
adc
testl
xlat
cld
inc
or
std
sub
pop
lock
cltd
mov
iret
filds
mov
int3
mov
sub
xchg
inc
and
inc
inc
add
mov
cmp
pop
ret
jnp
jg
xchg
fcompl
and
cmp
and
xchg
repz
push
push
popf
and
jmp
sub
iret
adc
sbb
and
bound
outsb
inc
ror
mov
mov
mov
or
and
sub
fisubrl
jge
mov
xchg
in
aaa
pop
push
or
add
les
stc
leave
dec
std
out
sahf
cwtl
mov
iret
hlt
sti
popf
pop
and
cwtl
inc
ret
js
out
push
cwtl
ror
xor
iret
push
pause
lock
inc
cmp
push
test
cltd
inc
add
loopne
rep
dec
icebp
cs
in
lahf
inc
adc
pop
dec
test
movsl
sti
sub
push
cmp
pop
stos
popa
int3
addb
jle
adc
and
fmuls
ficomps
incb
mov
mov
cmp
popa
out
add
or
push
pop
fcoms
add
pushf
movb
mov
ret
cltd
ss
jbe
sti
mov
mov
and
mov
aas
cltd
loope
xchg
push
imul
int3
jns
outsl
cmp
movsb
dec
out
cmp
insl
cs
jbe
xor
dec
pop
test
out
icebp
popa
orb
mov
inc
fidivs
sub
imul
into
cltd
stos
inc
lahf
inc
daa
cli
xor
push
pop
push
cwtl
mov
and
dec
test
stos
cmpsl
inc
test
out
aaa
mov
arpl
out
mov
loope
inc
fs
pop
push
mov
pop
push
xchg
hlt
inc
gs
sub
fs
insl
add
ror
push
sub
mov
ret
add
inc
fisubrl
cs
cmp
mov
jl
rclb
jg
js
or
imul
xchg
sub
pop
mov
pop
dec
lret
adc
adc
out
xor
push
mov
lea
jmp
mov
aas
int3
in
or
push
loope
or
sbb
add
lock
enter
fidivs
bound
inc
daa
ret
dec
clc
clc
bound
sub
je
je
addr16
cmp
mov
testb
mov
jl
cmpsl
adc
adc
mov
iret
test
nop
ret
pop
hlt
push
jecxz
and
movsb
or
pop
xor
or
xor
loop
dec
pusha
stc
push
xor
das
push
cwtl
mov
ss
cs
xor
imul
xchg
mov
das
mov
jecxz
movsl
pop
popa
clc
idivb
outsl
push
sbb
lds
testl
jae
nop
or
push
xchg
clc
pop
sbb
mov
in
cmc
inc
daa
cmp
loopne
out
sub
pop
push
aaa
or
scas
lds
imul
push
pusha
orb
inc
dec
and
mov
push
loope
mov
pop
mov
movsl
stos
jg
pop
sub
iret
push
mov
pushf
decl
cmp
stos
scas
out
cs
cmc
cmpsl
lret
or
jle
sbb
popa
cmc
fsubrl
movsb
inc
shll
jp
das
sbb
jmp
fidivs
cmp
add
add
push
mov
inc
adc
scas
aam
les
dec
cmpsb
xchg
testl
pop
loop
xchg
cld
and
dec
dec
repnz
add
adc
mov
mov
sbbl
insl
insl
mov
outsb
bound
test
pop
ret
adc
and
insl
nop
xor
and
mov
jno
std
popa
pop
mov
out
pop
test
push
and
movsl
stc
lock
outsb
repnz
push
xor
test
out
fidivs
sub
jp,pt
mov
nop
cmc
and
mov
dec
imul
cwtl
push
xlat
mov
xchg
pop
xor
mov
jecxz
adc
add
clc
sbb
mov
stc
xchg
xor
mov
adc
icebp
repz
cmp
outsb
cmp
out
xchg
sbb
js
adc
inc
cmpsb
ret
js
add
pop
lds
cmpsl
xchg
call
cwtl
pushf
or
shl
mov
andl
dec
std
imul
xor
in
cwtl
ds
hlt
or
cmpsb
xcrypt-ecb
cmpsl
mov
in
push
cmc
cmp
gs
aam
push
pusha
outsl
lods
dec
inc
xchg
jbe
rcrl
int
int3
pop
lret
movsb
cmp
cmp
sub
js
in
jl
dec
in
testl
push
lea
lret
xchg
inc
fldcw
aam
push
scas
rcrb
cmpsl
out
dec
popf
push
mov
lret
cld
cmp
lcall
and
in
inc
push
dec
mov
cs
rorl
sti
fstps
inc
mov
loopne
scas
pop
push
ja
cmc
cmp
sarl
jmp
mov
xor
movl
jbe
stos
aaa
aas
cmc
cwtl
sbb
jge
imul
cmpsl
ds
jno
stos
cwtl
adcl
adc
pushf
outsl
cmpl
add
in
or
mov
pop
fildll
jg
inc
das
ds
pop
add
int3
inc
xor
adc
int
pusha
sub
addl
in
or
nop
cli
xor
add
popa
lahf
sbb
out
mov
push
test
push
adc
xor
shrl
jb
shl
enter
in
adc
push
sbb
repz
inc
xchg
rolb
xor
and
jnp
xor
rcrl
stos
pop
and
dec
mov
mov
cmp
sar
add
stos
jge
and
pop
xchg
nop
pushf
dec
jp
subl
js
jns
das
cld
in
inc
inc
inc
xlat
cmp
out
cmp
daa
sbb
lea
xchg
or
add
adc
lret
and
mov
outsl
bound
mov
xor
das
jae
or
jmp
stos
pop
push
out
and
sub
or
adc
ret
mov
scas
mov
cld
ss
sbb
and
and
outsb
sbb
cmpb
xor
clc
pop
mov
iret
add
pop
mov
jno
aaa
lock
add
add
les
stos
bound
inc
roll
inc
fstpt
mov
xchg
jnp
mov
xchg
rclb
notl
lret
xor
mov
pop
mov
aad
mov
xor
jns
dec
mov
xlat
mov
les
sbb
ja
sub
je
dec
push
pushl
rclb
xchg
xchg
inc
fucomp
inc
pop
rcll
imul
sarb
and
or
push
shll
out
push
les
mov
test
data16
mov
dec
jo
xor
and
test
mov
loopne
std
xchg
inc
test
xchg
jnp
jo
dec
lret
dec
xorb
cmp
xlat
or
push
cs
std
and
and
movsb
fcmovne
xor
mov
sbb
mov
jns
pusha
push
adc
add
lahf
inc
push
xlat
int
inc
inc
mov
mov
test
cmc
je
inc
adc
push
ljmp
jnp
ficompl
and
scas
inc
out
std
adc
sub
inc
mov
cmp
mov
push
in
or
inc
mov
addb
add
xchg
dec
xor
in
inc
jp
mov
scas
leave
sti
shrb
jb
call
ss
adc
scas
ja
ret
adc
cs
inc
pop
fmull
call
mov
test
lahf
pop
loopne
xor
or
vunpckhpd
ss
push
test
fbstp
pop
xor
mov
jnp
pop
xchg
sub
into
mov
loop
sbb
push
test
add
addb
mov
loopne
xchg
pop
xchg
daa
sarl
aas
push
sti
sahf
pop
sub
cmc
les
jl
push
daa
mov
mov
xor
mov
aam
mov
or
xchg
inc
mov
test
pop
or
and
jnp
jbe
add
jl
mov
fistpl
imul
in
jp
xchg
shl
pop
sbb
repz
jmp
insb
mov
outsl
cmp
pop
lret
or
inc
mov
mov
fstpt
icebp
fsts
xor
into
sbb
mov
in
sub
mov
imul
lret
ret
aam
mov
adcb
andl
lods
cmp
jo
orl
in
pop
jne
mov
lret
add
inc
mov
ret
arpl
sbb
je
fisttpll
lret
mov
mov
fwait
mov
cmp
jbe
push
pop
adc
dec
xchg
ja
xor
xor
mov
enter
adc
aam
add
lds
adc
ret
js
sub
jg
push
enter
daa
fstps
aam
xchg
sti
pop
pop
lods
cmp
mov
push
rorb
xchg
or
inc
cli
mov
xchg
xlat
sbb
xchg
sbb
xchg
sbb
xor
mov
pusha
cmpsl
aam
push
push
xchg
cmp
ds
aad
mov
pop
mov
sub
mov
sub
repnz
stos
test
lods
xor
sti
pop
scas
mov
mov
xlat
roll
je
push
jg
ljmp
stos
and
jmp
test
sbb
mov
cwtl
rorl
jmp
push
std
inc
inc
jno
fs
mov
mov
mov
xchg
dec
mov
imul
in
or
shll
dec
aad
and
pusha
hlt
mov
lahf
or
pop
pusha
pop
shl
ss
add
inc
data16
rcrl
add
icebp
mov
stc
mull
mov
cmp
in
test
fucomip
pushf
fcoml
adc
in
outsb
cmc
mov
xor
lahf
in
cwtl
push
outsb
adc
rorl
jge
push
imul
pop
mov
arpl
cld
insb
lahf
inc
movsb
int3
or
iret
icebp
test
mov
cmp
fsts
inc
aaa
into
pop
cld
mov
lret
pop
or
adc
subl
sbb
inc
jo
sub
and
add
addr16
mov
mov
push
sti
and
movsb
sar
arpl
dec
test
mov
in
hlt
adc
lods
push
mov
les
pop
pop
cmp
out
fdivrs
scas
pop
add
jmp
inc
cmp
outsb
insl
ss
push
js
cmpsb
xchg
sub
movsb
fnstcw
sbb
mov
push
jae
lret
aas
bound
jno
gs
mov
loope
sub
outsb
dec
adcb
aaa
ja
ret
sub
andb
cmpsl
data16
push
mov
mov
lahf
imul
inc
add
jge
mov
js
push
dec
scas
imul
out
sub
lret
dec
out
xchg
sbb
sbb
repz
mov
into
adc
mov
scas
pop
inc
fsub
and
cli
mov
scas
scas
pushf
imul
outsb
xor
cmp
mov
sbb
jmp
test
sbb
mov
mov
jno
adc
pushf
add
jecxz
mov
jecxz
add
ret
pop
sahf
dec
and
xor
jecxz
add
inc
inc
jae
push
push
add
nop
lcall
push
das
pop
cmp
in
test
in
push
aaa
rcrl
or
scas
mov
xchg
xchg
pushf
daa
imul
jbe
bound
cmp
outsb
mov
pop
test
out
mov
cmp
mov
in
mov
dec
mov
cmpsb
sbbl
xchg
jg
je
adcl
add
inc
daa
inc
movsl
jg
or
sbb
insl
cmc
stos
cmp
aad
faddp
adc
adc
push
cwtl
adc
cltd
aaa
fs
fstpl
or
fisttpl
adc
jo
sbb
push
jmp
fwait
push
movsb
les
popa
insl
xor
dec
push
jmp
jbe
repz
pop
cwtl
nop
adc
push
lahf
bound
roll
adc
push
stos
and
sti
data16
shr
addr16
ja
mov
popa
xchg
rorl
mov
dec
in
lods
dec
pusha
push
pop
sub
aas
out
rclb
jnp
out
ret
jns
outsl
push
aaa
and
inc
rclb
sub
xchg
loop
daa
shr
pop
xchg
sub
inc
jg
fsubrs
jmp
and
adc
clc
sbb
push
mov
js
in
add
popf
nop
sbb
enter
cmp
sbb
mov
cltd
test
mov
adc
inc
mov
adc
and
sbb
mov
and
and
inc
sub
adc
sbb
mov
test
adc
mov
pusha
sbb
pop
rclb
mov
xchg
lods
xchg
dec
loop
out
jbe
jbe
add
jbe
cmc
insl
roll
xor
addr16
jo
inc
iret
mov
in
adc
es
out
cmp
fisttpl
jae
jge
sahf
movsl
test
push
dec
inc
mov
lds
dec
adc
adc
xchg
add
or
push
cld
add
lock
test
mov
mov
jno
fldcw
outsl
ret
daa
jne
sub
sarl
and
cmpsl
imul
add
cmp
ficoml
xlat
push
decl
push
in
xchg
sbb
ds
fcmovu
adc
mov
pushf
push
mov
stos
stc
dec
xchg
stc
push
out
jbe
sti
pop
test
out
or
cmpsl
pop
stc
xor
fdivs
add
std
mov
pop
out
dec
test
jno
inc
out
repnz
xor
sti
inc
or
lret
lcall
jle
jmp
shll
push
mov
out
jp
add
dec
mov
jp
pop
gs
ja
mov
pop
mov
inc
jl
jns
iret
bound
jmp
les
cmp
loope
pop
scas
loope
icebp
jnp
push
mov
leave
adc
or
cltd
enter
and
mov
cmp
jp
aam
mov
rol
mov
xchg
icebp
out
fstpt
fwait
mov
bound
test
jnp
sahf
dec
pop
or
test
outsb
pop
add
leave
and
add
mov
cld
jnp
jnp
scas
sbb
fcmovne
movsl
xchg
loope
sub
xchg
xchg
push
lea
mov
out
mov
add
dec
push
je
mov
out
gs
sbb
dec
xor
xor
pop
xchg
adc
in
xor
mov
mov
jne
pop
sub
adc
cmp
loope
addr16
jmp
and
popa
lret
push
sbb
andl
lods
int
xchg
dec
aas
mov
jns
out
sub
outsl
ficomps
inc
outsl
xchg
std
mov
popa
push
add
inc
jge
mov
or
and
mov
out
scas
jne
mov
push
andl
mov
add
jp
hlt
jnp
imul
out
mov
aam
insb
sub
sbb
add
loopne
push
cli
mov
fldl
jg
mov
lea
push
sub
pop
pop
inc
test
outsb
ret
inc
jns
mov
pop
fsubr
es
xor
xor
pop
add
add
clc
mov
mov
xchg
movsb
icebp
call
adc
enter
roll
cmp
xor
push
outsl
outsb
sbbw
sbb
dec
mov
negb
mov
xchg
xchg
stos
shlb
iret
jne
loop
or
aam
cmpsb
sbb
mov
aad
sub
out
imul
js
pushf
aam
mov
and
dec
and
cmp
outsb
js
sbb
mov
push
pop
pop
cmp
test
in
mov
daa
fisttps
mov
stos
dec
repz
dec
stc
cmp
dec
xchg
arpl
repz
sbb
test
in
fbld
outsl
adc
stos
jle
dec
daa
repnz
lea
jmp
lods
and
jg
test
fadds
clc
push
fldt
or
jle
adc
or
mov
clc
add
jle
inc
and
or
insb
loope
std
mov
fst
out
pop
enter
int3
push
inc
inc
fwait
in
ljmp
rcrb
outsb
push
or
jae
xchg
jecxz
incl
cltd
pop
dec
roll
pop
inc
mov
fcoms
jl
ret
idiv
or
ret
aaa
lcall
push
sub
repnz
dec
je
pusha
mov
into
hlt
push
pop
jae
xchg
dec
adc
pushf
mov
add
xchg
hlt
pop
dec
dec
test
dec
lods
mov
jmp
scas
sub
xchg
xor
mov
cmp
loopne
in
sbb
and
imul
sbb
mov
pop
shrl
xlat
leave
push
jo
adc
xcrypt-ctr
cmpsl
sbb
pop
sub
pop
pop
ret
mov
outsb
push
test
clc
es
es
mov
jns
int
xchg
dec
insb
daa
fmuls
or
repnz
fwait
pop
or
pop
subl
jns
fdivr
dec
hlt
xlat
jo
mov
xchg
xchg
stc
in
jg
and
cwtl
sub
or
out
fdivr
or
sbb
repnz
add
in
mov
test
addb
aam
dec
test
mov
adc
icebp
mov
push
adc
scas
pop
mov
adc
pop
cmp
sub
lock
in
add
cmp
dec
cwtl
xchg
out
or
icebp
push
add
cmp
fwait
jmp
addr16
scas
pop
bound
fisubl
rcll
clc
add
addb
lret
or
pushf
xor
lods
int
sahf
std
outsb
incl
adc
incl
mov
pop
push
mov
int
sbb
pop
push
arpl
pop
vcomiss
js
add
inc
dec
sub
push
fwait
inc
jecxz
xchg
jnp
fdivrl
sbb
add
mov
mov
mov
int
scas
shll
jae
inc
lods
pop
in
insb
jae
dec
push
cld
test
dec
mov
repz
mov
jno
mov
adc
hlt
fisttpll
pop
cwtl
fimuls
std
push
ret
in
mov
fnstsw
je
out
add
out
push
adc
sbb
lds
pop
mov
mov
rorl
xlat
scas
or
and
fimull
aaa
jae
adc
test
imul
mov
or
lods
movsl
decb
loope
sub
popf
mov
cmc
xor
sub
lahf
ljmp
shlb
loope
scas
aam
mov
xor
xchg
pop
adc
mov
xor
mov
xchg
sub
mov
mov
icebp
adcb
lret
or
pop
das
pop
addr16
dec
test
cli
sti
xor
push
cs
mov
lods
or
mull
mov
stos
xchg
xchg
lods
pmulhuw
sahf
jae
adcb
loopne
ficomps
xchg
fwait
in
pop
jb
push
cmc
mov
xchg
dec
ss
aas
ljmp
and
das
stc
in
mov
lret
popa
pop
div
jge
movsb
repz
jns
push
inc
mov
push
sahf
out
imul
mov
call
out
mov
jno
fidivrs
cmp
cmp
cld
mov
and
es
mov
paddq
sub
xchg
lock
inc
addb
stc
or
mov
dec
xchg
xchg
jno
mov
push
mov
mov
clc
stc
jno
add
mov
lret
sub
movsl
jg
xchg
mov
or
push
loop
jne
push
xchg
call
icebp
mov
lret
daa
imul
inc
add
jae
inc
lods
cmp
mov
outsb
ljmp
or
sub
sbb
cmp
fiaddl
insl
mov
xor
fldenv
lea
mov
ficomps
sbb
inc
rcrl
and
dec
xor
adc
pop
xchg
push
inc
jp
insb
push
inc
iret
dec
cli
xor
mov
jno
lret
mov
mov
inc
in
pop
in
outsb
int3
je
or
push
mov
dec
fsubp
in
mov
or
xchg
icebp
jb
movsl
cmpsb
arpl
ret
in
mov
jp
jns
add
pop
test
lock
jae
push
pop
pop
mov
shl
data16
sbb
push
xchg
sbb
lgs
sbb
rorb
rcrl
and
stos
out
daa
rcll
sbb
mov
dec
push
mov
fiadds
pop
sbb
mov
and
mov
jge
mov
jecxz
xchg
incb
out
dec
mov
sub
mov
push
inc
cld
inc
xchg
cli
add
dec
sbb
jae
in
shrl
in
sbb
inc
andl
insl
into
mov
inc
addr16
test
out
sti
cld
jecxz
adc
sahf
mov
popf
cmp
jbe
cmp
push
movsl
jecxz
mov
cs
and
into
fsubp
je
test
rol
mov
push
test
pop
inc
mov
adc
push
out
push
popa
add
fldl
in
push
das
loope
mov
cmc
mov
push
out
cmp
push
aaa
loop
sarb
cmp
lcall
int
int3
push
cmpsb
adc
mov
out
les
movsl
ljmp
xchg
jb
pop
fucomi
sbb
in
jne
adc
lcall
repnz
loop
xchg
xchg
fnstsw
out
sbb
fiaddl
sti
lods
arpl
cmpsl
int
ljmp
mov
jmp
cmp
push
lea
ret
xchg
ffreep
mov
dec
xchg
pop
mov
aaa
aas
mov
int3
enter
insl
pop
sahf
pop
in
fs
mov
inc
mov
and
ffreep
xchg
scas
test
jmp
leave
dec
pop
jecxz
jnp
sbb
dec
jo
push
sbb
cltd
mov
insb
hlt
lret
xchg
mov
subb
xor
outsl
add
lret
aad
lods
stc
aas
push
xor
repz
jmp
loope
ret
pop
mov
popa
cmpsl
lcall
mov
sbb
cmpsl
push
pusha
je
std
je
push
lea
mov
sub
gs
xchg
dec
xchg
pop
js
adcl
add
xor
cmpsb
sub
sub
hlt
in
jecxz
pop
inc
cmp
push
jge
inc
sub
faddp
dec
jl
lock
sub
out
add
lahf
imul
aas
cmp
arpl
lods
pop
inc
inc
pusha
iret
rcr
dec
push
dec
clc
mov
call
scas
int3
nop
cmp
aad
cmc
dec
sub
sbb
mov
ds
inc
inc
arpl
jl
or
cmp
adcb
push
pop
pop
fdivr
leave
movsb
loopne
or
icebp
adc
stc
test
and
test
shrl
jle
hlt
test
xor
push
lret
jmp
cmpsl
sbb
inc
cmpsl
dec
cmp
sub
xor
jmp
cmpsb
mov
sbb
and
mov
xor
adc
fs
popa
mov
in
cmc
int3
kmovw
push
adc
ja
mov
jbe
sbb
or
xor
sbb
dec
ret
add
fadds
pop
arpl
xchg
adc
insb
and
cmpsl
xchg
repnz
fisttpl
jbe
push
push
add
leave
je
hlt
sbb
dec
scas
movsl
pop
popf
iret
idivb
loopne
sbb
sub
iret
jae
sub
or
dec
stos
adcb
push
xchg
pop
ss
loop
and
jo
dec
out
es
mov
jno
fisttpl
aaa
shrl
cwtl
and
xchg
mov
fbld
in
cmp
mov
inc
mov
lods
mov
xchg
cmp
pop
in
push
sbb
xchg
pushaw
je
push
es
fdivl
jbe
push
xchg
popf
paddq
ds
test
in
rcrb
xchg
imul
sub
add
pushf
fneni(8087
dec
mov
xchg
pop
cmp
inc
inc
mov
ret
stc
and
popf
push
movsl
mov
pop
mov
sbbl
mov
pop
sti
pop
jl
inc
dec
jmp
dec
jge
cld
jmp
aas
cld
out
cmp
jp
or
mov
xor
lock
rorb
push
ljmp
int
int3
adc
movsl
out
loop
and
jae
mov
cmp
enter
test
mov
mov
sbb
and
push
iret
push
enter
cmpsl
adc
stos
out
insb
mov
out
subl
xchg
jns
xchg
pop
mov
mov
jne
iret
add
daa
pop
mov
xor
inc
ljmpw
xchg
aam
lahf
mov
sbb
mov
jle
scas
nop
mov
dec
fsubrs
in
dec
repz
aaa
movsb
dec
aad
mov
fwait
iret
sbb
push
sub
cli
mov
jne
ja
fstpt
sarb
das
lret
push
insl
in
mov
lods
push
mov
sub
jp
jl
lea
leave
and
pusha
or
movsb
or
lret
test
sub
enter
xor
xchg
push
dec
and
stos
mov
push
daa
movsb
int
cwtl
pop
add
adc
mov
sub
pop
pop
decb
aaa
js
pop
dec
adc
in
jecxz
outsl
cli
adc
sub
cmp
pop
aaa
enter
ja
xchg
and
inc
mov
es
testl
mov
or
xor
mov
mov
shl
or
popf
dec
sahf
adc
sbb
sti
push
push
cmp
fsubrl
cs
fdivrp
or
jno
jae
shll
flds
sbbb
cld
jge
or
or
cmpsb
mov
lea
jno
add
cmpsb
test
pop
pop
loopne
call
nop
les
in
sti
fdivl
cmp
lods
loopne
xlat
mov
push
push
inc
fadds
or
jl
cmp
and
mov
cmpsl
sub
dec
inc
mov
xchg
inc
push
fwait
lds
mov
ret
xor
insb
mov
insb
into
repnz
sbb
insl
mov
fdivl
int3
std
fbld
adc
sbb
pop
mov
jns
mov
arpl
fldcw
adc
scas
cmpsb
jp
push
bswap
int3
sub
xchg
mov
fwait
adc
sti
cltd
dec
stc
hlt
mov
lods
fmulp
loopne
movsb
imul
lea
sub
ljmp
cmp
pop
mov
mov
lret
fcoml
daa
mov
lea
repnz
lock
int
ret
sub
xchg
or
dec
cltd
jae
lock
sbb
or
lret
pop
lahf
push
push
xchg
int
in
mov
mov
ja
jae
inc
dec
lods
jle
mov
sbbl
cmp
adc
scas
in
data16
jecxz
jne
lds
xchg
sub
push
popf
xor
stos
stos
dec
sbb
sbb
in
mov
call
add
mov
lods
ds
orl
stc
fimuls
out
lock
xchg
cmc
outsl
dec
pop
jecxz
xlat
inc
ljmp
cmp
shll
dec
mov
push
xor
lds
inc
dec
push
ja
dec
sbb
pop
lods
out
mov
lahf
xor
mov
mov
fidivrs
std
gs
xor
int
scas
jbe
leavew
pusha
xor
or
jle
cmpsl
fwait
mov
push
pop
daa
outsl
je
adc
mov
lret
ljmp
popa
jb
mov
push
jl
jbe
out
lret
fdivr
mov
je
ret
xchg
loopne
aad
cmpsb
arpl
cltd
mov
mov
xor
fsubrp
out
dec
sub
cs
iret
or
repz
cs
out
adc
pop
fwait
mov
fwait
lret
pushf
xchg
idivb
mov
jb
scas
and
push
rcl
cmc
shll
xchg
or
inc
es
loopne
testl
xchg
test
push
adc
bound
lret
jmp
xlat
stos
xchg
jle
mov
loopne
aaa
cli
out
adc
add
pop
mov
pop
dec
add
cmpsl
xchg
mov
popa
mov
mov
inc
stos
cmpb
pop
fdivp
push
lods
lods
mov
mov
ljmpw
clc
adcb
icebp
jae
aad
dec
mov
xchg
mov
ret
lea
inc
arpl
fbstp
in
cli
add
jae
push
gs
cmp
stos
loop
mov
addr16
sti
hlt
stos
shlb
jmp
les
push
mov
xchg
std
daa
inc
sub
xchg
add
pushf
in
and
or
cmp
adc
popa
stos
pushf
adc
push
aaa
sbb
mov
mov
mov
int
lods
mov
data16
mov
add
or
int3
xchg
int
mov
mov
jne
shll
pop
mov
dec
fisttps
insl
stos
dec
das
xchg
jnp
xchg
shrl
push
orb
lods
push
ret
mov
iret
dec
rcrb
xchg
pop
push
mov
dec
enter
push
push
ret
push
inc
cmp
inc
sti
sbb
or
or
sbb
dec
jmp
dec
mov
xchg
cmc
sbbb
jns
stos
aas
lods
clc
cmp
ss
mov
jecxz
les
sub
test
pusha
out
jg
xchg
xchg
dec
xor
mov
jb
dec
or
sbb
out
xchg
cmp
enter
ffreep
or
inc
push
repnz
test
push
dec
gs
imul
xchg
pop
pop
mov
int
cmp
in
mov
inc
push
and
push
xchg
ficoms
xchg
rcrb
shr
jbe
movsb
pushf
gs
inc
ss
cwtl
mov
jne
arpl
aam
out
pop
insl
jo
mov
sbb
mov
mov
xchg
mov
sub
push
mov
cmc
scas
add
out
sub
mov
adc
xor
lods
sub
xor
arpl
xor
cmp
out
dec
inc
sub
scas
std
jbe
outsl
dec
mov
pop
pop
ss
sub
insb
xchg
sbb
pop
outsb
fnstenv
rolb
test
and
xlat
push
pop
arpl
pop
xchg
leave
shll
mov
sbb
inc
incl
mulb
lods
pop
sbb
mov
out
xchg
popf
ds
rcr
dec
adc
sub
repnz
lahf
adc
andb
int3
inc
push
and
sarl
dec
xor
out
and
in
xchg
mov
dec
pusha
mov
pop
js
ja
out
ret
and
sub
or
aas
mov
into
std
in
mov
cld
jbe
xorl
dec
dec
inc
mov
mov
cmc
out
cmp
sar
test
cld
sbb
mov
push
popa
pop
adc
lahf
leave
mov
rcll
jle
mov
je
inc
lock
cltd
dec
cmpsl
repz
mov
and
ja
fs
cmpsl
mov
push
xchg
xchg
cmc
dec
mov
xchg
sti
or
push
outsb
aad
outsb
lds
cmpsl
and
mov
leave
ds
lahf
imul
jno
subb
cld
popf
icebp
aas
xchg
movsl
mov
dec
sub
inc
and
cmp
pop
mov
dec
dec
or
dec
fldcw
lret
lods
mov
xor
test
dec
or
ficompl
sbb
imul
rolb
hlt
jge
mov
sbbl
fs
outsl
repnz
testb
jno
outsb
gs
mov
jo
push
adc
mov
andl
mov
push
mov
dec
jnp
gs
bound
lds
insb
and
mov
insb
sbb
popf
mov
addr16
cmp
imul
subb
lret
pop
add
jae
mov
mov
push
xchg
xchg
adcb
xchg
es
adc
sbb
arpl
sbb
mov
cwtl
mov
ret
dec
mov
jae
inc
push
std
xchg
fstpt
aad
or
test
push
mov
push
inc
xlat
pop
xchg
inc
faddp
mov
scas
xor
cmp
dec
cmp
mov
je
test
push
dec
xor
push
ret
mulb
cli
sbb
inc
mov
ja
jg
frstor
loopne
xlat
std
jns
repz
js
add
mov
insl
adc
scas
mov
scas
or
bound
cmp
imul
push
mov
gs
mov
fdiv
adc
add
lcall
scas
add
mov
je
cmc
mov
hlt
adc
sub
sub
or
mov
add
jb
jnp
or
rolb
mov
jg
adc
xchg
aaa
loop
fidivs
hlt
jbe
test
mov
push
stc
movsb
mov
fnstenv
and
pop
js
pop
inc
mov
jnp
ret
xchg
pop
loope
cltd
ret
aas
in
pop
shr
push
loopne
shrb
sub
xchg
xchg
mov
adc
outsb
or
xchg
sub
pop
insb
sub
out
dec
pusha
es
xor
pop
mov
xchg
push
adc
sbb
stos
nop
clc
inc
mov
pop
repz
mov
mov
in
mov
mov
xor
cmp
outsb
mov
lock
mov
subl
push
jmp
clc
leave
bound
mov
movsb
push
sub
mov
jle
xchg
and
cmpsb
or
mov
lods
pop
adcb
enter
jb
inc
mov
mov
out
mov
jns
add
mov
in
insl
sbb
icebp
jl
daa
adc
repnz
sbb
and
mov
hlt
pop
cmp
lock
adc
pop
insb
mov
dec
scas
mov
jg
lret
in
jmp
jg
cli
mov
iret
int3
stc
pop
xor
push
jmp
xlat
add
pop
std
imul
dec
dec
mov
cwtl
addb
push
mov
es
mov
call
sarl
popf
lds
stos
mov
shlb
or
xchg
shlb
xchg
sahf
notb
pop
mov
pop
dec
mov
enter
fcmovb
and
xchg
xor
adc
pop
scas
lods
aas
push
scas
jg
adc
mov
jae
cmpsb
add
outsb
rolb
add
das
sub
adc
nop
push
cmp
mov
mov
in
cmpsb
dec
cmc
jnp
in
sbb
enter
inc
ret
shr
pop
cwtl
inc
call
and
push
xor
cmp
xor
xor
xlat
into
out
mov
lods
xor
cmpsl
push
dec
sub
push
es
pop
cwtl
popf
cmp
push
pop
dec
lret
jp
push
fstl
cmpsb
and
sbb
stos
pusha
rcrl
pop
adc
cmpsb
movsb
pop
insl
jnp
inc
fdivrs
sbb
jb
push
push
ljmp
sbb
repnz
in
mov
push
scas
xlat
aas
jl
adc
add
out
test
pop
cmc
xchg
xchg
dec
lret
lret
inc
xor
inc
adc
cmp
scas
cli
jnp
jecxz
xchg
mov
sub
push
jo
sbb
fiadds
mov
cmp
outsb
in
out
pushf
mov
pop
adc
repz
les
sub
cmp
mov
push
jnp
cmp
mov
adc
jmp
mov
xor
push
push
adc
inc
dec
or
daa
stc
imul
inc
add
mov
dec
loopne
int
inc
add
mov
cmp
sbb
ret
sub
lods
mov
sub
cmp
or
xor
jo
imul
and
add
imul
jb
test
sbb
sbb
hlt
cmp
mov
pusha
jecxz
and
jl
stos
add
ret
decb
movsl
lods
dec
imul
push
cmp
imul
ficoms
jae
or
call
inc
pop
fwait
push
xor
mov
or
inc
cmpsb
add
jo
insb
out
xchg
mov
out
std
aad
xor
pusha
cmpsb
in
rorb
pop
or
popf
bound
pusha
dec
xchg
push
in
pop
jmp
jmp
loop
rcrl
jp
and
jge
mov
sarl
arpl
and
pop
xor
adc
dec
mov
gs
cmp
push
insl
mov
outsb
mov
mov
or
adc
mov
shlb
stc
adc
and
mov
movsl
fwait
push
xchg
nop
jae
mov
jecxz,pn
pop
push
call
sbb
or
insb
sbbl
sbb
es
cmp
pop
lea
iret
sub
sub
or
pop
push
js
or
ljmp
mov
rcll
mov
xchg
xchg
sub
add
out
mov
and
std
or
jno
and
adc
jle
sub
in
mov
subl
push
movsl
mov
xchg
icebp
test
iret
cwtl
es
inc
sahf
push
bound
lahf
test
mov
lret
lock
mov
imul
fs
nop
ljmp
pop
aaa
xor
push
lods
lahf
dec
add
push
jmp
push
dec
adc
rol
push
imul
inc
inc
nop
cmp
out
inc
mov
jb
xor
adc
xchg
inc
orl
mov
lret
std
jp
mov
bound
pop
pop
mov
cmp
cmp
cmc
rclb
sbb
out
in
ret
jnp
adc
insb
leave
lock
in
mov
imul
sahf
jnp
jg
jb
scas
aad
negb
mov
xor
fidivl
xor
add
mov
mov
xchg
mov
loope
xor
add
xlat
inc
pushw
xchg
ret
int
out
xchg
push
popf
ja
xchg
xor
adc
rcr
stc
dec
icebp
jbe
sub
sar
jne
ja
mov
and
xor
notb
aad
mov
out
sbb
xchg
es
add
xor
or
xchg
leave
lcall
div
jo
adc
in
into
add
adc
jnp
dec
mov
lret
aad
lds
test
adc
mov
fdivrl
jns
add
data16
mov
adc
cmp
or
inc
mov
fxam
repz
mov
dec
popa
test
mov
je
fmull
push
ljmp
lods
cld
cmp
cmp
sarb
dec
dec
cmp
pop
nop
ljmp
sbb
sarb
and
mov
jns
cmpsb
dec
sub
sub
and
loopne
jl
push
xorl
fisubrs
mov
out
adc
push
and
cli
pop
dec
pop
sti
and
dec
sbb
mov
mov
xchg
or
ja
scas
xchg
cli
xchg
jno
into
dec
dec
sbb
and
xor
or
cs
insb
xor
push
fnstcw
sbbb
fnstsw
outsl
adc
stos
fcomps
iret
mov
mov
cwtl
lret
xlat
inc
mov
push
dec
sarl
pusha
fbld
cltd
push
es
imul
adc
push
push
inc
lcall
fs
pop
test
out
push
mov
cmp
jae
xor
lock
push
jnp
xchg
in
lods
jbe
lods
call
add
mov
push
sahf
int3
pushf
and
scas
pop
add
imul
xor
mov
cwtl
sbb
cld
out
and
nop
sbb
sarb
cmpsb
and
and
and
mov
dec
pop
test
movsb
call
pop
insl
stos
sub
lahf
cmp
mov
ja
mov
test
jmp
loop
cmp
xchg
mov
jmp
mov
nop
and
lret
push
je
daa
ficompl
fstps
popa
aas
scas
lahf
sti
les
sub
sbb
lret
sub
cltd
dec
sub
mov
mov
inc
jae
sti
movsb
add
sub
inc
daa
cltd
dec
push
or
imul
cmpsb
lods
in
xor
mov
pop
lahf
repz
shlb
testl
or
dec
mov
scas
lahf
loopne
fwait
xchg
mov
dec
andl
popf
mov
fs
xchg
sub
sub
cmc
or
dec
pop
loopne
fdivrs
adc
push
sbb
jne
push
aad
jnp
mov
cli
fwait
jnp
cmp
test
xchg
test
shlb
xchg
adc
in
adc
imul
addr16
mov
repz
addr16
push
dec
dec
add
and
mov
mov
mov
rclb
call
gs
dec
adc
or
mov
rorb
fildll
sub
sbb
pusha
mov
fidivrl
mov
inc
lahf
or
mov
pop
push
push
neg
leave
out
ljmp
push
ret
decl
cld
mov
repz
pop
test
loop
mov
popl
mov
in
setns
ds
outsb
jne
cmp
mov
dec
stc
xchg
jo
or
cmpsb
push
sub
and
cwtl
mov
call
shl
lret
addb
cmpl
cld
mov
fisubl
pusha
push
stos
or
mov
push
and
mov
and
sub
inc
add
subl
ja
push
aad
sub
xor
lret
xchg
pushf
pop
dec
jnp
in
hlt
int
test
push
imul
lcall
fsubrl
adcb
add
loop
mov
add
cmpb
test
enter
fcomps
adc
fldcw
sbb
mov
xor
add
in
sbb
fnstsw
and
or
sbb
call
ss
out
and
cmp
hlt
test
mov
ret
cmp
ja
rcr
pop
gs
cmp
mov
out
add
xor
mov
out
push
push
lret
mov
imul
jecxz
add
je
xchg
.byte
mov
aaa
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
or
add
addl
jle
sub
mov
pop
jmp
lods
loop
xor
add
mov
push
push
mov
pop
pop
jmp
js
mov
and
inc
push
nop
mov
lret
mov
jmp
push
std
repnz
sar
lahf
in
mov
mov
in
bound
adc
add
mov
sbb
cli
stos
or
push
and
repz
fidivs
fs
mov
movswl
adc
sub
mov
cmp
jne
call
mov
pop
lods
jne
xchg
add
add
notb
add
add
imul
xchg
popf
adc
mov
jmp
push
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
lret
sub
adc
fwait
cltd
stos
inc
xor
iret
repnz
jne
or
or
es
movsl
mov
pop
sti
imul
bound
jae
or
lret
lods
mov
and
push
fldenv
insb
jmp
push
add
call
lret
lods
mov
push
or
push
sbb
push
aas
loopne
and
int3
test
push
dec
add
popa
inc
bound
adc
and
sbb
mov
sub
pushf
push
int3
xor
pop
adc
push
sbbl
mov
int3
xor
stos
xor
xchg
lock
je
int3
xchg
cwtl
or
pusha
fs
mov
cmpsl
xchg
in
aad
fimull
shll
push
insl
aam
lea
out
cs
mov
pop
adc
push
ficoml
sub
cmp
mov
int3
xor
xor
sbb
pop
in
and
aas
lods
addr16
sub
dec
lock
xor
xchg
dec
int3
xor
sub
push
out
mov
scas
repnz
int3
xor
inc
dec
incl
or
aaa
dec
xchg
test
fisttpll
aaa
sub
pop
int3
xchg
inc
jae
xchg
hlt
lret
xor
cld
mulb
cmp
mov
xlat
and
arpl
jmp
leave
mov
cld
push
imul
or
xchg
ss
frstor
adc
jge
or
divl
sub
ret
ja
pop
dec
les
cmp
call
push
cmp
push
push
adc
mov
pop
outsb
out
filds
aad
inc
popf
mov
sub
icebp
test
sbb
jnp
inc
sbb
test
adc
push
adc
mov
rcll
sahf
jl
loopne
movd
cwtl
push
or
adc
mov
sbb
mov
sahf
fwait
mov
and
jge
pusha
mov
lea
jmp
lods
sbb
daa
les
or
push
loopne
fs
sub
sahf
ror
repz
aam
fmulp
cltd
addb
and
shll
xchg
xlat
int3
cmp
push
fnsave
sbb
sbb
orl
adc
push
add
repz
sbb
and
sarb
sahf
shr
xor
sbb
sarl
pusha
fldl
out
pop
aad
mov
imul
xor
or
sub
mov
out
aaa
push
sahf
shl
xchg
stos
sbb
out
pop
int3
mov
fucomip
cld
mov
fdivrp
mov
ljmp
ffreep
cs
test
sub
int3
push
add
inc
mov
xchg
push
adc
int3
and
dec
adc
cmp
jae
mov
mov
mov
fs
rcr
int3
int3
sub
int3
xor
push
dec
mov
mov
mov
pop
jne
iret
and
sbb
pop
rcr
int3
jge
mov
mov
fistps
sub
les
mov
fbstp
ror
mov
xor
push
jae
mov
pop
hlt
lods
jg
int3
mov
addr16
iret
mov
mov
cmpsl
mov
jp
iret
lods
in
test
iret
push
int3
add
test
iret
filds
out
xchg
cld
lods
iret
inc
mov
sub
int3
mov
sub
int3
stos
mov
jp
or
ror
mov
in
fdivs
push
nop
cmp
rclb
int3
stos
xchg
jae
jbe
push
roll
imul
lods
mov
jp
shrl
jg
rcr
int3
lods
je
mov
es
stos
lods
in
cld
sub
ret
insl
mov
iret
test
sahf
jae
stos
stc
data16
push
sub
iret
add
fildll
lods
mov
jp
lods
mov
jp
mov
in
dec
mov
fisttps
es
test
fildll
push
push
nop
cmp
rcr
int3
stos
xchg
sti
cmp
jb
mov
mov
mov
cmpsb
cwtl
shll
dec
mov
jnp
int3
mov
mov
sub
mov
mov
ffreep
lods
add
fsubrs
and
ja
test
lods
jge
mov
mov
loop
data16
aaa
inc
ds
jge
mov
mov
push
xor
mov
insl
data16
xchg
jno
sbb
cli
mov
shll
shll
jge
mov
mov
pinsrw
imull
or
shlb
jmp
jbe
subl
je
sbbl
cs
or
jae
in
inc
pop
mov
jmp
jbe
subl
je
adc
mov
cs
or
mov
test
les
mov
out
cld
nop
je
iret
mov
sbb
cli
mov
shll
shll
icebp
lods
test
int3
fs
push
int3
test
push
int3
nop
mov
mov
test
test
dec
jl
xor
ljmpw
in
cltd
je
es
int3
lods
ds
adc
jge
xor
ljmp
cltd
je
and
pop
mov
push
or
int3
mov
lods
in
push
or
mov
mov
outsb
int3
mov
imul
push
jbe
imul
pop
add
xorb
mov
outsl
mov
fistpll
or
mov
aaa
dec
cmpsb
jns
int3
mov
adc
mov
lock
call
sbb
rcr
int3
lods
jecxz
cmpsl
ret
mov
jne
mov
add
cmp
enter
stos
sub
test
rcrl
insb
lret
push
fs
push
cs
aad
or
inc
movsl
popa
adc
pinsrw
or
imul
mov
cmovb
inc
pop
sub
add
mov
ret
xchg
sbb
les
mov
mov
mov
mov
mov
mov
mov
and
fcomip
sarl
fisttps
icebp
fcmovnu
int3
mov
mov
fbld
mov
mov
aad
mov
mov
mov
mov
push
lods
add
imul
xchg
pinsrw
jle
outsl
adc
cmp
sbb
negl
jge
daa
addr16
test
test
insl
addl
xchg
loopne
mov
mov
lea
test
xchg
mov
jl
xor
xor
mov
lock
xchg
jg
mov
es
pop
fisubrl
jns
sbb
xchg
add
fisttpl
ljmp
daa
sbb
out
lcall
out
jmp
dec
lods
mov
push
adc
jg
pop
arpl
pushl
cmp
cmp
add
sarb
push
int3
stos
mov
lahf
lea
sbb
xchg
mov
add
jnp
dec
or
repnz
adc
sbb
and
inc
add
aaa
push
pop
pop
dec
mov
aaa
jecxz
inc
scas
lods
pop
push
orb
xor
testb
cltd
fsubs
movsb
dec
adc
sub
pop
dec
fdivr
cli
sti
ror
jnp
setne
push
lea
ret
mov
hlt
addr16
push
sbbl
sahf
adc
out
and
dec
jb
fcoms
lahf
cmp
lret
bound
ljmp
jp
mov
xchg
add
xchg
pop
mov
and
inc
cmp
mov
sbb
lds
and
ljmp
fisubs
fwait
hlt
sub
cmp
sahf
mov
inc
pushf
popl
aas
ss
xchg
mov
sti
jo
fidivrl
adc
lret
jle
jbe
clc
adc
lods
es
fnstcw
pop
insb
xor
loop
jge
jno
and
mov
insl
pusha
sti
cmp
and
ja
aad
es
addb
fmulp
mov
rcrb
std
adc
sbb
inc
add
call
int
bswap
shrl
sbb
test
jbe
cwtl
pop
xor
or
add
cmpsl
in
or
xchg
orb
test
daa
add
fwait
sbb
jns
adc
cld
or
jbe
add
ja
clc
ret
stos
pop
rorb
sub
mov
mov
mov
lods
and
pop
cmp
mov
lods
data16
addr16
nop
les
in
int
ret
mov
push
pop
scas
je
clc
add
mov
fisttpl
cmp
xor
lods
or
stc
insl
xchg
pusha
popa
je
and
out
stos
mov
lods
outsl
pop
pop
inc
or
and
add
add
add
pushf
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pushf
add
add
pushf
add
add
popf
add
add
popf
add
add
popf
add
add
popf
add
add
popf
add
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
popf
add
add
popf
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
and
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
js,pn
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
xor
loop
insb
mov
imul
pop
in
cltd
mov
mov
cmc
in
lret
mov
cmpsl
cmp
fcoml
rcr
outsb
mov
cli
add
aam
jns
lods
adc
nop
fisttps
sti
leave
enter
mov
dec
popf
hlt
stos
and
dec
addl
js
xchg
pop
popl
test
popa
jns
push
cmp
xlat
push
outsl
sti
mov
out
imul
in
xchg
mov
dec
push
stos
and
mov
adc
pop
xchg
sbb
jno
or
push
and
insl
jl
divl
jge
int3
pop
mov
push
inc
out
fldl
pop
inc
nop
sub
lcall
out
loopne
cld
rolb
mov
outsb
pushf
jl
inc
dec
leave
mov
and
jl
nop
int
sbb
ret
jne
out
sbb
mov
inc
and
push
mov
pop
dec
mov
sub
xchg
jp
push
not
or
lcall
addr16
lods
and
cmp
xor
cmc
cmp
div
cld
lahf
inc
je
xchg
mov
pop
mov
dec
std
xchg
aas
cmp
lods
sahf
dec
jmp
add
pop
mov
xor
stos
mov
outsb
sub
sub
jle
sbb
out
imul
inc
or
repz
cmpsl
xchg
adc
mov
ror
jge
mov
dec
aaa
scas
pop
inc
mov
jno
std
dec
cs
imul
pushf
std
stos
mov
cmp
cmp
lock
pop
mov
test
jecxz
jns
ret
lods
add
test
push
and
mov
movl
in
sbb
in
mov
cmp
cmpsl
or
push
xchg
into
je
leave
mov
subb
rcrl
push
sbb
dec
es
outsl
push
or
mov
fildl
sub
inc
cwtl
jnp
jecxz
mov
testb
mov
cmpsl
fs
jne
dec
stos
cld
call
negl
sbb
and
stos
js
loope
xchg
outsl
out
lret
jle
xchg
scas
stc
pusha
sub
ja
pop
cmp
ja
mov
sub
arpl
sbb
inc
xchg
dec
adc
fsubs
shlb
dec
sub
repz
cld
xchg
push
push
ret
push
jne
sarl
loopne
cmpsl
dec
and
inc
enter
addr16
cmp
jge
lods
cmp
int3
jns
cli
shll
popa
dec
sub
inc
xchg
inc
xor
ja
fistps
insb
bound
leave
cltd
fstps
or
adc
scas
sbb
inc
scas
divl
push
xchg
mov
test
cmp
test
xor
cli
inc
lahf
icebp
push
mov
in
lods
sarl
and
jns
sub
and
add
inc
mov
or
pop
std
aas
repz
cltd
pushl
stc
das
test
pop
bound
xor
jl
out
fs
in
cmp
xchg
ljmp
xor
mov
mov
push
mov
mov
fmul
imul
out
mov
or
cmp
rolb
or
aam
loope
cmp
adc
stos
adc
mov
fsubrl
cmp
or
out
xchg
imulb
mov
mov
cmp
loope
mov
lret
add
int3
or
je
adc
imul
lret
stos
inc
pop
cmp
insl
jo
jmp
sbb
inc
ljmp
xor
jg
push
adc
inc
add
inc
addb
mov
dec
dec
or
adc
xchg
push
pop
shl
jb
fdiv
out
adc
sub
clc
and
inc
pop
dec
jp
jne
loope
cmp
push
stos
lock
cmp
and
pop
mov
mov
sbb
test
lcall
or
ds
int3
mov
aaa
shrl
loope
cs
ret
sub
paddusb
push
ss
xchg
cmc
inc
or
aad
inc
fcomi
jmp
jno
xor
mov
push
mov
sbb
push
mov
xchg
xor
das
mov
push
ja
pop
jbe
dec
into
mov
xor
jg
push
mov
sahf
jae
inc
dec
mov
or
rcrb
push
mov
inc
or
xchg
inc
mov
sub
cld
dec
mov
sbb
xor
or
sbb
mov
lcall
jb
loope
xchg
xchg
xor
push
adc
mov
pop
fwait
test
push
out
or
xchg
daa
sbbb
xchg
out
xchg
stc
pop
test
add
mov
inc
xchg
sub
jge
push
aad
les
fdiv
cltd
or
lahf
loop
mov
sub
sbb
fs
inc
or
or
test
lahf
and
shrl
ds
loop
call
add
mov
lds
dec
cwtl
out
sbb
jns
cld
pop
jbe
mov
test
and
pop
outsl
sbb
xor
jo
popf
jns
mov
jle
push
xor
inc
fistl
arpl
ljmp
icebp
fistpll
aad
mov
dec
pop
fsubs
cltd
movb
jb
das
push
mov
adcb
sub
std
movsb
enter
xor
dec
ficoms
cmp
sti
xor
movsb
xor
idivl
jno
insb
sub
add
push
rcll
add
push
popf
xchg
mov
call
sub
pop
fstps
jmp
loop
cli
push
lods
cltd
fs
push
lahf
outsl
add
mov
test
xor
xchg
jns
lret
mov
add
movsb
pop
in
addr16
inc
cmp
ja
xor
adc
mov
pusha
das
mov
pop
push
popf
bound
xchg
fdivl
in
sub
mov
inc
mov
test
aas
imul
imul
sti
xchg
jae
in
push
push
std
push
fidivs
in
cmpsb
fildll
shll
pop
test
or
mov
pop
rcrl
or
or
or
sarb
ret
in
and
lds
add
jle
fwait
push
sbb
pop
inc
pop
test
add
jmp
ret
je
jns
je
add
xchg
or
cmpsb
jo
cmp
fsubrs
and
iret
int
sbb
pop
dec
popl
outsb
add
add
orb
mov
sub
test
stos
sbb
xchg
jg
fcoms
popa
mov
xchg
lahf
icebp
mov
loope
sti
add
mov
popf
inc
lret
cmp
cmp
add
and
int3
push
pushf
es
roll
scas
pop
or
lds
jl
xor
push
adc
scas
punpcklbw
add
int3
xchg
dec
xor
push
add
jmp
dec
push
mov
xchg
sbb
cmpsl
fneni(8087
inc
hlt
imull
push
xor
ret
sbbl
jmp
jne
xor
ss
sbb
pop
into
jmp
sub
sbb
jle
cmc
pusha
dec
pop
repnz
movsb
mov
inc
adc
ljmp
ljmp
push
out
xor
cmp
loope
fcoms
imul
scas
inc
jmp
leave
inc
iret
dec
add
xchg
push
jp
mov
mov
in
sbb
gs
cwtl
out
mov
pop
cmp
mov
mov
std
jae
sarl
adc
sbbb
insb
push
cmpb
mov
push
cmpsl
loop
push
cmp
dec
inc
dec
and
push
cmp
mov
imul
mov
mov
fisubs
test
mov
sub
test
add
add
pop
or
mov
sbb
sub
mov
adc
mov
push
pop
in
sub
pop
pop
iret
daa
jnp
dec
mov
aaa
mov
fwait
mov
repnz
fisubrs
shl
je
xchg
xchg
jnp
and
pushf
fisttpl
xor
and
xchg
es
movsl
pop
mov
mov
push
incb
pop
lock
sbb
jg
insb
sbb
pop
jne
xchg
sbb
push
sub
adc
lods
repz
jns
in
ret
into
xlat
jg
inc
fstps
xchg
lods
jecxz
cli
mov
test
cmp
push
in
adc
inc
mov
scas
add
fisttpl
pop
cmp
pop
fmuls
xorl
scas
push
js
adc
int
es
int
cmpsb
test
pushf
ffreep
movsb
xor
stc
ljmp
jmp
mov
xchg
fisttpll
mov
add
lds
and
and
xchg
pushf
aam
and
aam
outsb
push
add
push
arpl
inc
pop
std
movsb
pop
es
xchg
mov
in
test
adc
dec
filds
fisttpll
movsl
sub
mov
add
jle
or
sbb
xchg
add
jb
adc
dec
dec
jg
call
cwtl
push
aad
fcmovnb
dec
es
mov
mov
xchg
sahf
mov
stc
push
out
xchg
sub
test
jae
imul
jmp
and
sbb
mov
ficoms
cmpsb
test
sbb
out
push
faddp
push
lahf
add
loop
adc
addr16
sbb
add
imul
xor
fcmovne
cmp
mov
cmp
add
pusha
cs
and
mov
fwait
cmpsb
pop
xchg
push
xor
add
fstpl
enter
loop
jmp
mov
sub
dec
js
outsb
dec
in
or
jnp
pop
lods
shl
mov
subb
aam
xor
pop
inc
pop
test
inc
outsb
sbb
cwtl
out
dec
jb
std
cmp
xchg
fcmovbe
outsl
ljmp
xchg
fmuls
fwait
dec
lods
xchg
daa
adc
inc
pop
in
gs
iret
imul
jne
sti
push
divb
dec
movsb
or
aad
orl
or
in
xchg
fbstp
inc
xchg
inc
xchg
in
push
ret
ss
fstpt
dec
add
push
cmp
imul
add
jl
and
test
and
roll
les
cmpsb
cltd
add
xor
hlt
adc
inc
sub
mov
mov
and
inc
push
mov
sub
adc
and
ljmp
outsl
mov
xchg
pop
push
xchg
mov
lds
mov
fidivl
fsubl
test
mov
lock
xlat
jmp
dec
xor
inc
dec
divb
mov
and
pop
jae
pop
in
mov
push
lret
cmp
iret
pop
lahf
rorl
pop
sbbl
lds
gs
cmp
cmpsb
sub
push
and
icebp
push
data16
test
push
in
daa
ss
movsl
loop
in
test
sarl
aam
imul
nop
xchg
lea
or
sti
std
cmp
fcomps
pop
out
or
lahf
in
pushf
sbb
in
inc
negb
and
cmp
and
mov
jne
ljmp
aaa
fwait
adc
pushf
dec
cltd
inc
add
mov
cltd
jle
aas
lea
popa
adc
das
jg
mov
fstps
fcompl
lret
fcoms
or
fs
mov
mov
fbstp
inc
mov
pop
xchg
mov
and
adc
pop
mov
lret
sar
popf
sub
fnstcw
adc
frstor
push
push
xchg
cld
or
pop
jne
icebp
cmp
into
add
or
or
push
sub
or
dec
in
imul
out
add
imul
loop
dec
and
lods
mov
rolb
xchg
shrl
loopne
out
mov
mov
das
mov
mov
loop
or
icebp
mov
cmp
cli
sub
push
ficoms
jge
lods
jmp
ljmp
sbb
adc
mov
clc
adc
popa
add
jnp
pop
addr16
lahf
mov
sub
jae
fdivrs
sbb
hlt
ficomps
das
jge
jo
stos
js
add
and
fmuls
int3
shll
sbb
xlat
push
mov
mov
int3
xor
inc
enter
pushl
outsl
jns
pop
inc
push
lock
or
lock
dec
cmpsb
push
mov
mov
and
mov
jecxz
xchg
mov
in
imul
cmp
cmp
stos
shlb
leave
dec
adc
lret
jg
sub
jmp
rorb
incl
stc
icebp
fistpl
pop
add
push
fucomp
mov
pop
out
fwait
sbb
popf
push
lcall
shlb
shlb
fimuls
jne
gs
inc
jg
bound
inc
rcll
sbb
sbb
inc
leave
fldl
sahf
movsb
and
inc
rclb
adc
in
stc
test
lds
inc
imul
aad
inc
mov
mov
fldt
dec
mov
test
call
jl
out
jmp
xlat
out
movmskps
insl
or
fldenv
stos
cld
ljmp
sbb
and
gs
sahf
xchg
lods
pop
test
cmp
push
sbb
leave
xor
pop
fsubrs
mov
dec
pop
mov
sarl
sub
xchg
lock
xor
das
pop
fsubs
enter
sbb
rolb
mov
add
ret
std
lds
jb
pop
xor
cmp
adc
ficoms
add
xor
sub
ss
inc
into
mov
subl
loop
arpl
xchg
push
sub
jmp
addr16
lcall
das
bound
mov
movsl
pop
mov
xchg
xchg
sub
xchg
cmpl
leave
xlat
push
push
jbe
nop
sub
sbb
jl
push
roll
adc
jnp
nop
out
out
mov
imull
sbb
mov
sbb
and
in
jno
and
jge
xor
fwait
xor
mov
cmp
sub
push
idivl
add
imull
mov
pop
jge
push
xchg
sub
lret
push
les
inc
out
sarl
addl
repnz
int
repz
test
cmp
outsb
mov
jne
add
inc
mov
repnz
cs
adc
dec
test
lret
xchg
out
xchg
aaa
mov
loopne
cmp
int3
nop
sub
cmp
add
std
push
dec
adc
lds
jne
cmp
mov
sub
hlt
adc
std
test
sub
aam
inc
fists
push
xlat
aas
mov
xchg
int
sub
jne
movsb
or
or
cmp
shl
fisttpl
popa
mov
and
sbb
push
dec
and
dec
add
mov
dec
mov
inc
pusha
in
nop
ss
out
inc
jae
mov
loope
mov
fldcw
loope
js
fmul
mov
test
xchg
or
aad
or
pop
test
cmp
ss
loop
inc
cs
pop
out
insl
out
sub
into
pop
inc
inc
fbstp
repz
pop
nopl
std
sub
inc
aad
jns
cmpb
sub
sub
and
cmpsb
fidivrl
adc
inc
push
jp
xor
mov
pushf
sub
movsl
fsubs
xchg
call
add
mov
or
and
jns
lret
aad
mov
mov
into
into
addr16
sub
push
popa
sbb
dec
imul
in
xchg
or
movsl
xchg
roll
xor
int3
sub
pop
and
mov
loope
leave
push
ja
xor
jg
cli
inc
push
std
popa
jp
add
cmp
rclb
popa
test
aaa
xor
cmpsb
aam
push
mov
cmp
nop
push
je
pop
mov
movsb
cmpsb
push
jbe
inc
insb
push
xchg
xchg
int
pop
ss
movsl
pop
sub
fprem
lret
aam
ja
das
cmpsl
arpl
das
adc
cld
fucom
loop
les
jle
test
incb
repz
ljmp
lahf
ljmp
lock
mov
test
gs
or
xchg
mov
cmpsl
dec
push
pop
cmp
hlt
adc
sahf
roll
into
lds
ret
dec
lret
adc
mov
icebp
in
mov
xlat
add
clc
pop
les
inc
mov
addr16
xchg
xchg
popf
jmp
lret
cmp
das
pop
scas
mov
insb
inc
sahf
xchg
cwtl
mov
mov
adcl
out
sbb
pop
shll
mov
mov
push
push
inc
or
cmp
jg
mov
insl
cmp
ss
leave
push
inc
movsb
lahf
add
jb
pop
push
cmpsl
cltd
and
mov
cmp
pop
jecxz
mov
push
sub
sbb
adcb
jecxz
enter
insl
pop
cmp
jge
fsubrs
inc
fsubs
or
push
js
aas
sbb
dec
add
mov
pusha
rcrl
push
push
movsb
dec
fldcw
push
rorl
mov
jge
icebp
mov
rorl
jmp
mov
dec
cwtl
sti
orl
jbe
and
lahf
cmc
iret
xchg
fwait
push
sti
adc
or
test
mov
inc
sbb
and
jg
push
push
loopne
sub
pop
xor
push
pop
scas
inc
pop
cmp
es
les
xchg
sahf
test
test
mov
fmull
or
jnp
mov
and
pop
inc
mov
insl
rcrl
in
outsb
stos
inc
in
dec
dec
hlt
cmp
ret
jae
ret
xchg
add
inc
movsl
ret
insl
push
mov
or
test
outsl
lock
shll
loopnew
pop
ss
jnp
sti
and
inc
arpl
fisubrl
adc
cmpsb
lret
sahf
adc
mov
fwait
xor
repnz
dec
mov
popa
cwtl
mov
inc
outsb
lea
lret
inc
fsubr
fs
call
test
rolb
inc
add
add
fwait
push
loopne
inc
dec
adc
mov
mov
data16
pusha
fiaddl
out
leave
xchg
aam
inc
lods
lods
loop
mov
jae
pusha
xor
cmp
cli
pop
outsb
xchg
stos
jae
test
or
sub
fisubs
mov
pop
ss
cmpsl
jmp
push
cwtl
dec
stc
push
cmp
into
sbb
int
pop
cmpsb
outsl
pushf
movsl
jno
call
lahf
mov
mov
aas
jmp
test
mov
in
imul
outsl
cmc
adc
sub
lock
dec
jns
adc
repnz
fisubs
xchg
cld
clc
je
in
data16
dec
arpl
lahf
dec
fsubrl
pushf
push
adcb
dec
insl
mov
sbb
das
jno
mov
addr16
ja
mov
mov
dec
outsb
outsl
sub
inc
nop
push
enter
jne
repnz
xchg
inc
or
adc
dec
jl
pop
mov
arpl
and
mov
and
ret
pop
pop
sub
push
stc
xchg
cmpsb
fisubrl
mov
sbb
jae
rorb
dec
dec
fcoms
outsb
adc
adc
and
add
shrb
push
adc
xor
inc
idivb
sahf
xor
or
loope
js
lock
pop
and
sub
pop
fnstenv
cmp
gs
test
test
lcall
jbe
aam
push
test
xor
cmpsb
mov
inc
roll
insb
mov
cmp
sbb
int3
jmp
cmpsb
lahf
jl
mov
mov
clc
pop
sub
les
das
fwait
idivl
add
jne
gs
jl
orb
inc
stc
iret
loop
call
cltd
into
lods
leave
or
shrb
adc
pushf
xchg
inc
lods
add
lods
push
or
push
cwtl
jne
mov
mov
repz
mov
in
add
xlat
push
sub
mov
and
lods
movsb
xor
movsl
pop
lock
mov
jns
cli
dec
and
adc
xchg
sbbb
fiaddl
cld
stos
pop
sti
cmp
dec
mov
inc
adc
push
sbb
mov
cltd
in
xor
mov
push
mov
ja
pop
mov
jecxz
mov
pop
nop
xchg
fs
loopne
std
jp
mov
lods
xchg
or
sbb
dec
and
iret
cwtl
adcb
mov
inc
sub
push
mov
pop
inc
xor
cld
orl
cmc
adc
jp
mov
cwtl
cmp
sbbl
nop
mov
mov
aas
sbb
push
adc
jge
pop
test
hlt
daa
push
jle
call
mul
inc
jg
xor
stos
push
xchg
mov
push
dec
pop
adc
mov
push
xchg
or
xchg
andl
and
adc
pushf
jb
xchg
mov
mov
cmp
shrl
xchg
leave
mov
stc
mov
outsb
pusha
pop
inc
shll
test
hlt
mov
int3
mov
das
scas
dec
ljmp
insb
dec
lahf
ror
push
mov
xor
jge
sub
mov
adc
stos
dec
cltd
jno
insl
cmp
dec
mov
xor
mov
and
adc
inc
add
and
shll
std
stos
mov
imul
mov
ds
sub
adc
dec
jno
inc
ds
in
bound
and
fmuls
xrelease
pusha
inc
pop
iret
push
xor
mov
nop
or
pop
push
adc
int
jb
in
stos
mov
sub
ss
aad
ljmp
xchg
dec
gs
mov
push
icebp
pop
sbb
rorb
mov
add
mov
les
ret
call
mov
adc
int
sub
mov
leave
pop
std
lret
xor
inc
lahf
ja
ret
adc
scas
sub
pop
sub
ss
pushl
mov
sub
lahf
pop
mov
xchg
mov
cmp
cmpsb
rcr
xchg
jecxz
loop
jmp
mov
sti
adc
push
loopne
sub
outsl
psubusb
fldt
push
hlt
fistl
scas
std
int
cmp
and
ss
dec
test
pop
pcmpeqw
add
xchg
scas
gs
sbb
and
xor
add
dec
in
push
mov
mov
fs
mov
xor
shr
imul
adc
jmp
jle
out
pop
dec
cwtl
or
lds
mov
dec
push
in
into
or
or
jmp
or
cwtl
sbb
push
rcll
adc
xchg
add
mov
int
xor
mov
sbb
idiv
xorl
jecxz
or
xor
dec
imul
adc
adc
cwtl
jecxz
mov
es
scas
mov
dec
cmp
lahf
pusha
cmc
lcall
add
mov
cmc
xor
lahf
aas
dec
ds
lods
sub
mov
out
stos
xchg
addr16
test
push
mov
shr
push
fcomip
in
push
cmc
cmp
sbb
shrl
ud0
push
adc
pop
and
cmpsl
lea
and
in
push
ss
pop
sub
test
xor
or
xchg
and
lods
jae
ss
in
push
pop
mov
addr16
pop
pop
arpl
mov
sbb
or
mov
hlt
std
stos
leave
insb
mov
js
rclb
aad
adc
xchg
dec
lea
jp
push
cs
leave
or
scas
fcmovnbe
sbb
cmp
mov
ret
ljmp
mov
adc
mov
pause
add
nop
pop
push
mov
add
sahf
sbb
or
popl
in
mov
test
sub
xorb
jecxz
aad
js,pn
out
int
mov
cmpsl
xor
lock
mov
daa
or
inc
push
mov
outsb
out
mov
inc
cwtl
dec
std
bound
inc
aad
xor
or
sti
inc
mov
shll
push
sbb
mov
xlat
outsb
lret
sbb
dec
in
or
or
adc
cmp
jge
rcrb
mov
add
jecxz
inc
mov
dec
mov
mov
dec
lock
cmp
test
repnz
dec
jg
movsl
insl
call
xor
clc
or
test
testl
pushf
test
test
cwtl
inc
fdivrp
popf
and
sub
or
stos
testb
stos
aaa
mov
aam
pop
mov
js
les
xchg
roll
arpl
idivb
mov
mov
jmp
and
cld
leavew
sub
or
xlat
mov
cwtl
cmp
ja
xor
push
fisttps
mov
inc
xlat
mov
test
mov
ja
jb
xor
out
out
outsb
jp
fistpll
add
divl
rol
cltd
arpl
mov
and
data16
add
bound
mov
mov
fs
and
mov
call
dec
fwait
icebp
sbb
add
movsb
jae
repz
nop
xchg
pop
lea
and
flds
cmp
add
dec
pop
jge
lea
pop
or
movsl
push
mov
mov
adcb
jp
cmp
xor
xor
cmpsb
shll
lds
sub
stc
das
sub
pop
insb
xchg
add
pushl
in
jl
sbb
repnz
decl
xor
out
pushl
push
xor
bound
lret
mov
push
mov
pushf
es
mov
mov
jbe
sub
inc
pop
pushf
mov
xchg
and
xchg
mov
insb
dec
cmpsb
xchg
popf
enter
mov
xor
or
lcall
arpl
inc
aas
adc
jp
daa
lea
jae
pop
aad
aad
mov
add
xor
jg
dec
ljmp
test
or
aad
add
adc
xchg
fistps
fbstp
pop
sub
scas
dec
xchg
sar
push
stc
mov
xchg
lret
mov
arpl
or
adc
mov
mov
sub
mov
test
call
insb
xlat
roll
xchg
jno
xchg
adcb
mov
icebp
in
test
ret
test
mov
dec
push
cs
lds
iret
aam
loopne
jb
push
dec
jecxz
push
hlt
clc
push
sbb
in
orl
cli
xor
mov
jno
les
dec
add
popf
sub
jb
das
xor
pop
aad
sahf
ds
test
cli
stos
mov
lcall
sbb
ljmp
iret
xchg
mov
push
cmp
loop
inc
push
adc
mov
out
jmp
mov
jbe
mov
rorl
popf
mov
push
add
movsb
mov
mov
jne
xchg
inc
lahf
pop
cmp
add
push
xchg
popf
iret
rcr
scas
cltd
jnp
mov
sub
jp
insl
sub
les
cmp
cmpsl
mov
lcall
lahf
pop
stos
or
add
cld
shlb
cmp
mov
mov
pop
xor
xor
or
ds
iret
inc
insb
jb
cmp
std
aas
out
jg
icebp
pop
icebp
out
cwtl
jmp
pop
int3
sbb
add
add
mov
inc
lock
cmp
xlat
push
in
cs
push
add
pop
sbb
cmp
movsl
and
cmc
fdiv
in
ror
xchg
sbb
xchg
jmp
movsb
push
jmp
push
pop
dec
mov
sbb
sbb
ret
cmc
dec
pop
lcall
fnstcw
adc
jle
jge
inc
cmp
xlat
outsl
sub
mov
mov
mov
sahf
fdivl
sbb
mov
sub
out
rorb
cmp
pop
jb
insl
jns
dec
lahf
xchg
out
inc
jno
mov
in
cs
sub
jb
mov
into
aam
scas
loop
push
or
scas
inc
jo
jae
popf
adc
movsb
ret
jecxz
cmp
add
xlat
stos
xchg
xlat
mov
dec
stos
int3
out
loop
lea
sbb
or
cmp
fwait
inc
scas
shrl
stc
pop
mov
fbstp
push
lock
cmp
lret
sub
cmp
xchg
aad
roll
xor
push
dec
mov
repz
jecxz
das
adc
xor
pop
std
fdiv
fldenv
outsl
inc
sti
test
xor
push
out
clc
mov
call
int3
cs
scas
pop
popf
out
mov
xchg
imul
jb
outsl
fwait
into
sub
and
lods
pop
fwait
insb
lock
dec
lds
adc
hlt
add
lock
loope
or
mov
int
xchg
jge
iret
nop
dec
mov
shll
call
cwtl
jb
xlat
xchg
add
sub
or
sbb
inc
or
loopne
lahf
xor
xchg
test
lods
pop
lock
dec
pop
and
xor
mov
bound
mov
jb
cmp
cmpsb
xor
cmpsb
xor
lcall
dec
mov
jge
pop
dec
cmpb
push
push
std
jmp
std
or
sbb
pushf
push
or
in
cmpsb
xchg
jbe
rcrb
fcoml
dec
xor
pop
push
sbb
data16
ss
outsb
stc
stc
scas
cmp
rcll
test
xor
push
dec
fdivrl
pop
sarw
mov
push
sbb
addr16
shrb
sub
push
leave
cmpsl
or
mov
push
jo
sub
pop
xchg
inc
cs
ljmp
rorb
cmp
mov
or
adc
mov
jae
push
pusha
test
cmp
inc
arpl
popa
addr16
pushf
xor
mov
xor
pop
pusha
popf
sarl
xchg
inc
loope
fldt
call
shll
js
mov
andb
push
outsb
aas
mov
jne
loope
push
lret
mov
test
xchg
cs
xchg
push
sar
sub
stos
sarl
jle
test
mov
mov
adc
out
dec
jg
jmp
stos
or
ret
sti
jge
push
and
adc
fiaddl
scas
ret
xchg
pop
inc
scas
mov
fnsave
sbb
fcompl
xchg
inc
push
push
and
and
imul
rcrb
pushf
or
push
push
fldenv
pop
fldenv
into
inc
push
mov
adc
inc
adc
jge
mov
dec
mov
scas
lret
ret
vphaddbd
jge
mov
dec
fs
je
pop
cmp
loope
jmp
cwtl
dec
mov
sub
scas
xor
ss
mov
scas
aaa
jmp
jb
jae
adcb
jns
mov
mov
xor
cmp
jb
scas
cmc
dec
jno
imull
iret
xchg
stc
mov
pop
popl
icebp
pushw
test
and
mov
pop
and
xchg
mov
jp
push
call
xor
cmc
jno
pop
js
pop
pop
mov
pusha
xor
cltd
scas
cltd
mulps
and
jmp
or
int
jns
mov
pop
or
push
sbb
or
sbb
std
mov
ja
addr16
pop
or
dec
les
xlat
outsl
das
xchg
push
cmp
cwtl
test
ja
dec
shlb
lds
bound
mov
arpl
insb
ss
cli
ret
sbb
jecxz
in
jb
pop
icebp
lcall
enter
jns
rcl
flds
lcall
mov
mov
fadds
push
ljmp
fldenv
ss
imul
mov
das
ja
sub
iret
cmp
cmp
std
cmpb
arpl
bound
shll
fadds
stc
xchg
lods
adc
mov
aam
lds
push
repnz
sahf
lahf
sub
xor
imul
rcrl
xor
ja
loopne
popf
mov
std
pop
sub
rcr
shl
sub
stos
cmpsb
test
lock
push
addr16
or
decl
add
cld
pop
lret
icebp
push
iret
cmp
mov
add
sarl
pop
xchg
notl
sahf
pushf
das
imul
out
pop
xchg
ja
mov
push
jp
scas
jl
dec
push
imul
push
mov
pop
push
jecxz
sti
fsubrl
sbb
add
stc
aaa
cmpsb
dec
jp
lret
pushl
data16
popf
adc
out
sbb
add
pop
mov
sbb
and
vcvtsi2ssl
movl
addl
mov
jno
sub
jb
jns
jns
or
or
sbb
mov
inc
push
fwait
leave
lea
int
shl
xor
dec
jne
xor
lcall
inc
lret
cmpsl
gs
sub
mov
xchg
ror
psubsw
daa
mov
mov
rcl
aam
lret
push
mov
push
outsl
out
jb
xor
xchg
popa
enter
cmp
inc
pop
lret
pop
mov
mov
imul
adc
mov
imul
and
adc
mov
jns
hlt
mov
cld
adc
sub
stc
in
inc
jae
ljmp
push
mov
test
fwait
test
adc
mov
push
xchg
dec
lods
pop
sbb
adc
jg
pop
lcall
fistps
scas
fcomp
out
xor
lock
dec
mov
les
xor
pop
lret
sahf
sub
iret
fdivrl
imul
cs
shrb
push
bswap
es
xor
dec
dec
rcr
jns
lret
dec
dec
jae
das
rorl
xor
fninit
out
cmp
pushf
nop
mov
cltd
test
in
in
and
mov
pop
xor
sbb
jge
dec
cwtl
or
outsb
sub
iret
xor
and
fsubp
jle
fbstp
dec
stos
roll
sub
out
repnz
sahf
or
cmp
fwait
mov
adc
cwtl
sbb
xor
daa
es
push
sub
push
xchg
aaa
pushf
or
icebp
stc
mov
pop
repz
jbe
out
inc
mov
xchg
mov
cs
ret
es
ret
xchg
cmp
pop
in
imull
add
cli
roll
jp
mov
xchg
test
dec
mov
mov
iret
pop
rol
dec
rclb
sbb
cmp
or
jb
add
insb
pop
leave
mov
dec
stos
sub
pop
pop
lds
mov
xchg
repz
dec
and
xchg
popa
xchg
icebp
aas
aaa
inc
pop
mov
mov
dec
rclb
adc
push
xchg
adc
out
addr16
mov
loope
inc
fisubrl
arpl
mov
push
pop
sub
movsb
ds
mov
add
mov
sbb
ret
lret
fneni(8087
cmp
lret
push
icebp
test
mov
pop
mov
loopne
stos
dec
xchg
insl
jno
repnz
and
les
les
hlt
into
xchg
pop
ss
sub
jns
cmp
dec
sub
and
daa
mov
pusha
sbb
cmp
sub
mov
gs
pusha
ds
clc
jno
xor
cs
fistpl
mov
imul
sub
push
fwait
js
ret
adc
std
repz
xor
xor
xlat
mov
cwtl
in
or
std
add
mov
outsl
loop
jmp
out
mov
mov
loopne
out
cmp
adc
sub
jle
pop
outsb
rol
ret
clc
mov
xchg
dec
loopne
fs
in
fldt
push
sti
repz
add
and
dec
mov
cmp
xchg
xchg
xchg
or
mov
pop
sub
pop
push
dec
daa
ds
fisubrs
mov
adc
addr16
mov
leave
xchg
or
push
push
sub
pop
in
dec
xlat
inc
imul
xlat
icebp
fdivr
pop
mov
fidivs
jle
ds
mov
das
mov
stc
sub
pop
inc
inc
jae
push
or
movsb
ret
bound
pushf
adc
outsb
fnstsw
outsb
add
pop
mov
inc
sub
or
cmp
add
pop
nop
xchg
es
aaa
sbb
sub
add
xchg
dec
fs
inc
cs
lods
push
lds
dec
outsl
lcall
lret
pop
cmpsb
cmpsb
scas
adc
in
jge
lock
and
mov
add
xor
adc
or
xchg
lods
fcom
mov
icebp
xor
pop
dec
pop
xor
je
and
mov
push
add
and
outsl
mov
push
scas
add
xchg
addr16
pop
repnz
in
test
and
andb
ljmp
jp
inc
xchg
sbb
mov
cmp
js
dec
pop
pop
jg
call
inc
mov
sub
shlb
mov
cmp
mov
mov
mov
cmp
pop
jb
add
aaa
lds
push
sub
mov
shlb
pop
push
in
movsl
and
lcall
lret
or
mov
fildll
cld
xor
mov
cmp
xlat
rolb
adc
sub
push
and
pushf
xor
mov
pop
sbb
pusha
pop
shll
xor
mov
sub
adc
aaa
inc
add
fwait
movsb
mov
das
imul
call
test
sbb
cmc
push
jbe
add
xchg
dec
and
jmp
int3
cld
xor
shll
mov
mov
pop
mov
inc
mov
dec
scas
sub
jns
lcall
mov
sbb
mov
lods
xor
sahf
cli
bound
add
insb
push
mov
cmp
xchg
aam
jecxz
inc
add
cwtl
pop
dec
mov
inc
sub
mov
sub
fidivrl
in
xchg
in
dec
outsl
lock
mov
repz
mov
add
mov
sub
adc
and
data16
inc
pushf
fwait
popf
movsb
or
add
jne
sti
gs
test
jl
adcl
cmc
gs
das
mov
rcrb
adc
in
mov
lret
mov
lods
je
fisttpl
xor
push
adc
push
ss
in
sub
pop
stos
mov
mov
xor
xchg
sub
movswl
call
insl
jp
shll
insl
test
dec
cltd
ja
cmp
pop
test
rcl
fcoml
icebp
movsb
mov
fisttpll
lret
decl
arpl
mov
xchg
or
lcall
out
mov
inc
inc
or
lock
movsl
push
pop
daa
and
gs
sbb
sub
xchg
dec
xor
inc
nop
push
pop
mul
push
mov
imul
xor
pop
and
mov
sub
xchg
dec
xchg
and
pop
daa
dec
call
jmp
out
mov
es
movsl
and
int
lret
das
dec
dec
icebp
pop
cwtl
test
pop
cmp
ss
stos
jmp
repnz
dec
stc
jmp
or
mov
loope
push
in
pusha
test
je
xchg
or
cmp
daa
repz
imull
fnstcw
cmc
icebp
cs
shll
test
and
lcall
lahf
ss
in
mov
out
inc
shr
jo
inc
sbbb
fsubs
in
movsb
scas
jge
fistl
or
repnz
cmpxchg
jb
pop
test
lahf
and
sarb
out
xor
xor
inc
sub
inc
xchg
lea
aaa
cwtl
mov
in
rcrb
addr16
loope
aam
mov
ja
ss
jno
mov
jmp
xlat
lea
fs
or
mov
or
add
dec
mov
push
aaa
xchg
push
pop
stos
cmp
lods
negb
dec
or
inc
jnp
sbb
shrl
es
dec
or
popf
jecxz
sub
mov
lods
ljmp
daa
fistpll
cmp
sbbl
jo
fcmovnbe
repz
movb
adc
iret
lahf
xor
sub
test
and
mov
sbb
popa
dec
pop
mov
cwtl
inc
pushf
and
insl
xchg
cs
out
call
je
fimuls
add
inc
lea
inc
mov
pop
xchg
aaa
adc
dec
daa
cmc
daa
jne
xor
mov
inc
imul
cmpsl
cmpsb
cmp
jmp
aas
clc
push
das
push
lods
cmp
cltd
push
xchg
xchg
test
mov
dec
into
xorl
inc
scas
flds
jl
mov
out
call
jnp
rolb
and
fisttpll
push
sub
jle
inc
fildl
push
lret
push
or
out
mov
sub
mov
xchg
cmp
ror
pop
aas
mov
insl
lahf
adc
lods
roll
jb
aad
das
jb
xor
dec
mov
adcl
and
shll
pop
into
xchg
push
inc
out
adc
subl
lds
jge
dec
push
push
test
pop
add
ja
adc
rclb
jo
jae
xor
call
mov
mov
inc
aad
mov
xor
clc
add
pusha
pushf
pop
arpl
mov
jl
in
stos
jecxz
xchg
adc
mov
xchg
les
rcll
sbb
lock
mov
xchg
notl
or
push
pop
cmp
ja
or
outsb
push
add
lcall
dec
push
ss
jns
inc
sub
rcl
push
inc
stos
repz
jbe,pn
jae
out
scas
dec
cmp
in
leave
adc
mov
imul
pop
iret
sbb
adc
jns
ljmp
sbb
sbb
jg
fstpl
popf
xor
cwtl
lahf
push
mov
dec
ljmp
mov
int
test
out
add
mov
add
mov
inc
inc
imul
push
pop
mov
mov
loop
loop
dec
adc
jmp
adc
dec
ljmp
imul
cltd
dec
push
ret
pop
orb
addr16
cmpsl
and
cmp
mov
shl
aam
mov
rcrb
cmp
mov
cmp
mov
movsb
xorb
mov
adc
mov
pop
mov
pop
jae
or
out
mov
and
aad
inc
or
sub
test
inc
push
and
or
nop
dec
cwtl
cmp
jecxz
ss
mov
or
sub
fidivrl
cmp
clc
rcll
aam
push
ret
dec
mov
fiaddl
lea
push
inc
insl
add
es
or
test
in
mov
popf
xor
dec
jbe
scas
ret
aad
jo
sbb
mov
js
push
clc
sub
cmp
loopne
cli
ror
dec
or
repz
xor
lds
arpl
push
xchg
das
xor
int3
scas
mov
add
dec
xchg
lcall
pop
xor
int3
or
jno
movsl
aaa
gs
out
adc
addr16
leave
cs
cmp
sub
std
dec
jmp
or
mov
xchg
adc
push
mov
inc
lahf
adc
and
mov
dec
stos
xorl
fldl
jno
dec
jecxz
xor
lods
daa
scas
movsb
push
dec
int3
xchg
insl
insl
mov
push
sub
call
pop
mov
jge
lods
cmp
pop
push
add
jge
cmpsl
out
repnz
packssdw
outsl
xchg
xor
fldenv
sti
push
movhps
adc
mov
loope
and
fisttpl
jne
in
lods
mov
mov
sbb
jne
xchg
sbb
xchg
sbb
or
xchg
daa
add
mov
fs
das
mov
mov
sti
mov
lds
mov
aam
jle
jae
iret
jg
xor
pop
sahf
inc
outsl
mov
jb
xchg
insb
aad
lods
pop
bound
push
fidivs
loop
pushw
jmp
fidivrs
push
adc
pop
ja
lea
sbb
lret
pop
outsb
cmpsl
ja
adc
lret
cmp
lcall
scas
mov
mov
mov
push
xor
push
outsb
ljmp
in
ret
out
outsl
adc
rcrl
popf
ds
pop
push
mov
clc
decl
jns
in
mov
insl
in
hlt
sahf
inc
jmp
stos
leave
lret
mov
hlt
sub
add
call
inc
push
popf
subb
mov
pop
jmp
test
dec
dec
xchg
jns
ljmp
mov
mov
stos
fldt
and
repnz
push
leave
xor
loopne
ss
fs
mov
hlt
leave
js
push
mov
repz
cmpsb
hlt
ljmp
adc
subl
insl
repnz
jb
xchg
imul
dec
pop
repz
lods
or
mov
cld
cmp
mov
ljmp
lret
cmp
cli
jle
sbb
popf
sbb
xchg
es
cmpb
lret
into
xchg
ficoml
out
adc
mov
sub
test
pushf
xor
dec
sub
cmp
or
xchg
std
lods
das
fwait
into
mov
es
shr
lret
or
mov
aas
dec
js
pop
jecxz
and
imul
cltd
inc
div
dec
mov
jle
addl
xchg
pop
mov
mov
dec
imul
adc
subb
inc
dec
inc
test
jnp
cmp
outsl
js
adc
data16
mov
push
fdivrl
outsb
es
outsl
cmp
insl
ss
gs
std
rolb
lcall
scas
mov
test
pop
mov
movsb
adc
inc
mov
in
dec
jno
adc
mov
cmpsl
mov
push
lahf
push
jg
adc
jge
dec
jmp
push
inc
movsb
orl
imul
mov
iret
jbe
and
popf
push
jecxz
aas
pop
fcoms
ret
mov
testl
mov
popa
xor
sub
push
mov
lods
hlt
mov
push
insb
stos
sbb
mov
cmp
out
mov
pop
test
push
popa
push
dec
fld
sbb
stos
in
jo
arpl
lret
leave
mov
stc
pop
sub
ficompl
xchg
aam
pop
inc
lahf
sbb
stc
lods
adc
clc
fcmovu
and
enter
inc
or
pop
mov
aad
jl
shlb
in
orb
jb
fnstsw
jl
ret
test
scas
int
ds
and
dec
cmc
test
dec
sub
adc
sub
and
negl
push
mov
clc
push
imul
sub
sub
insl
xchg
scas
movsb
das
jb
popa
xorb
mov
mov
mov
jns
mov
push
out
or
mov
scas
and
mov
cwtl
jecxz
in
adc
pop
jae
pop
aam
jnp
or
mov
int
inc
fwait
or
jo
or
jns
inc
xchg
push
inc
cmp
cmpsl
mov
add
mov
jp
push
cmpxchg
mov
adc
and
dec
push
pop
inc
xor
rorb
or
mov
ds
push
and
movsb
out
orb
loopne
movsb
pop
add
or
xchg
ficompl
push
adc
adc
and
push
jl
pop
dec
outsl
push
subb
into
fildll
jg
insb
pop
nop
and
arpl
sub
repnz
inc
decb
jg
sub
push
ret
pop
in
jl
test
push
jle
scas
xchg
push
mov
ror
add
cmpsl
cwtl
pop
leave
aas
cmp
popa
xor
fxsave
cmp
jle
cwtl
inc
and
iret
stos
je
out
cmp
pop
arpl
push
adc
push
pop
dec
decb
in
lock
dec
add
xor
push
pop
jmp
add
sub
int3
arpl
arpl
mov
jae
push
fidivs
sub
dec
mov
subb
jge
cmp
mov
push
into
cli
addr16
push
and
adc
iret
lcall
push
mov
pop
jb
xlat
xor
js
lret
and
jmp
dec
mov
xlat
repnz
shrb
dec
shlb
daa
lods
push
push
in
jo
popf
xor
rcrb
mov
pusha
cmp
sti
ror
sub
mov
fisubrl
stos
dec
mov
or
clc
enter
int3
movsb
xor
fcompl
adc
faddp
cs
jno
int
sbb
imul
add
icebp
sub
and
ds
push
in
pop
jg
mov
and
mov
and
mov
clc
jne
jge
sbbb
clc
xchg
jecxz
add
fsubrs
mov
jnp
mov
aad
loopne
jbe
mov
dec
and
dec
adc
cmp
insl
jae
sbb
fs
cmpsb
daa
test
mov
clc
inc
cltd
mov
xchg
mov
into
mov
subl
pop
aas
cli
add
repz
add
dec
jo
pop
adc
xor
dec
sub
push
mov
and
dec
cltd
aaa
in
out
lret
jge
outsl
adc
sub
fisubl
sbb
insl
xor
outsl
pop
popf
push
mov
mov
and
fstl
mov
push
daa
lods
daa
mov
jbe
jne
push
sti
mov
sub
addr16
cld
les
shrb
gs
mov
adc
das
int
inc
sub
test
jnp
loop
in
adc
test
push
pushf
or
pop
sub
adcb
cmp
mov
jg
jo
push
orb
push
mov
xchg
outsl
xor
lahf
fdivl
jle
shll
cltd
jmp
ret
cltd
loope
adc
adc
fwait
test
int3
mov
push
imul
movsl
xchg
lea
cli
xor
push
rcll
icebp
cmp
out
iret
aas
lret
or
das
dec
das
push
sbb
sub
nop
insb
rclb
out
ret
repz
adc
int3
and
test
in
pop
test
fldl
and
sbbb
jbe
add
gs
xor
leave
jle
dec
push
pop
pop
fldenv
pop
aaa
movsb
ljmp
lret
cmp
push
dec
inc
pop
jne
sbb
inc
js
xor
js
push
cld
inc
mov
test
out
dec
adc
gs
cmp
pusha
mov
sub
ja
mov
insl
xchg
fisubrl
fsubs
mov
outsl
aaa
lock
lds
insl
push
movsl
cli
repnz
aad
ljmp
sub
subl
aaa
popf
pusha
repnz
pop
mov
call
push
mov
fiadds
ljmp
cld
stc
clc
jle
lret
jno
cmp
mov
out
andl
ret
popa
jo
int
dec
lods
pop
cmc
pop
out
xor
push
and
andb
jg
xor
sbb
aaa
pop
rolb
mov
xchg
test
ljmp
mov
hlt
mov
sub
testb
xor
iret
xchg
sbb
mov
inc
not
and
arpl
scas
jle
cmc
cwtl
pop
add
mov
test
add
cmpsb
sbb
dec
sbb
mov
loope
iret
fdivp
ja
lds
push
hlt
fisubrl
mov
sbb
jno
shll
sbb
and
sub
mov
sub
cmpsl
shll
add
push
rorl
sub
iret
fs
dec
sub
cmp
inc
fwait
cwtl
aam
loopne
cmc
mov
adcb
push
or
xchg
push
mov
js
inc
push
xor
mov
inc
leave
fdivs
out
fisttpll
jno
ds
jecxz
fstl
pop
xchg
sub
cld
out
ror
pop
mov
sbb
fucomip
iret
adc
pop
push
in
repz
fcoml
mov
movsb
xchg
xor
lds
sub
leave
data16
das
mov
aaa
jae
xchg
orl
or
stos
and
cmp
into
rclw
mov
decl
in
xchg
rclb
dec
and
dec
loopne
sbb
cmp
inc
push
ret
jo
loop
loope
jp
jmp
shlb
push
sti
xor
xor
cld
rcrb
mov
push
lods
cltd
arpl
clc
gs
aas
out
and
sahf
es
orb
jbe
push
mov
addl
lret
mov
or
adc
sub
add
inc
inc
adc
int3
and
cmc
mov
icebp
clc
repz
gs
push
mov
jle
xor
adc
ret
inc
es
cmp
fs
inc
or
push
push
sub
cmp
scas
aas
sub
mov
ja
cld
fnstcw
cmp
mov
push
insb
repnz
cwtl
imul
mov
lock
enter
filds
mov
inc
lds
sub
lods
or
mov
int3
add
lret
jbe
nop
sahf
xchg
jne
fildll
ss
inc
repnz
sub
jge
mov
dec
cmp
enter
iret
movsb
cli
pop
inc
and
inc
sbb
rorb
jno
loope
jp
dec
inc
pop
je
dec
out
mov
and
in
dec
test
call
mul
movsl
pop
loop
cld
mov
scas
clc
fsubl
xchg
pusha
leave
inc
mov
adc
int
nop
aam
std
stc
rcr
clc
cwtl
cmp
xor
aaa
insl
push
mov
rclb
mov
add
icebp
pop
mov
inc
dec
ljmp
jmp
cli
jl
and
push
xchg
xlat
add
push
frstor
fwait
pop
push
inc
repnz
data16
mov
sub
lock
mov
packssdw
int3
xchg
pop
dec
not
and
lods
mov
xchg
cmp
scas
jp
hlt
jge
cmpsb
push
repz
scas
and
push
ret
jne
push
out
push
inc
adc
dec
or
add
jnp
adc
rorb
fisubrl
mov
js
pop
daa
std
pop
fs
filds
pop
out
push
jo
push
cmp
mov
pop
leave
jle
sub
aas
add
adc
out
cmp
test
pop
ss
clc
xchg
int
shrb
popa
lock
jae
adc
add
dec
imul
add
leave
mov
sbb
adc
add
stos
fs
sub
push
mov
jg
sub
pop
and
out
aaa
cmpsb
lcall
xchg
dec
iret
adc
das
movsb
int
pop
inc
or
dec
dec
push
imul
shl
xchg
dec
jnp
cltd
imul
fldenv
xor
add
and
sti
dec
fsubs
sub
mov
jge
xchg
movsb
dec
mov
pusha
mov
repnz
mov
js
aaa
es
fs
popa
xor
mov
cmp
and
js
sub
adc
cmpsl
dec
loopne
mov
jns
adc
push
je
xchg
mov
test
xchg
outsl
sbb
test
shl
mov
push
cmp
dec
sbb
rcl
and
stos
pop
cmp
mov
xor
in
std
jae
mov
repz
vmwrite
lahf
jge
lock
sbb
adc
negl
fwait
ror
int
icebp
out
repnz
sub
pop
outsb
inc
xchg
dec
outsb
test
cmpsb
xlat
rcrl
push
sub
imul
lcall
outsl
out
fstpt
pop
or
sti
mov
add
cltd
into
cmp
sahf
push
dec
aam
xor
mov
push
inc
sbb
and
outsb
mov
mov
xchg
inc
add
jno
cmp
stc
xor
lods
xchg
pop
dec
jle
sbb
std
xchg
fsubrs
fildl
sbb
test
lahf
das
cmpsl
xor
jmp
rclb
mov
lahf
int
push
into
dec
cli
push
aam
in
jb
jl
int3
mov
adc
cmp
lock
inc
ficoms
loop
cmp
stos
and
mov
sub
inc
inc
push
sbb
and
lret
sbb
cmpsl
test
inc
subl
push
mov
and
enter
and
mov
repnz
pusha
cmc
push
pushf
sbb
jbe
xchg
add
rcl
xchg
scas
xchg
shrl
fstpt
in
pop
push
pop
pop
jo
imul
or
mov
add
incb
lods
lea
jb
push
inc
lds
sbb
repz
mov
and
bound
inc
or
cmp
movsb
add
mov
in
loopne
sbb
mov
stos
ds
adc
or
cld
mov
popa
loopne
mov
sub
inc
dec
jg
pushf
fs
mov
pop
aas
push
and
outsl
push
push
cmp
mov
shlb
addb
ds
dec
mov
cmpsl
rolb
xchg
adc
jp
std
push
xchg
std
adc
or
mov
fwait
sbb
loop
or
fistpll
call
cs
push
cmpsl
cmp
jns
xchg
and
cmp
leave
and
mov
gs
inc
fs
in
cmp
rorb
mov
inc
xchg
int3
pusha
and
or
mov
adc
into
mov
jl
hlt
bound
lock
dec
sub
jmp
ds
fwait
inc
mov
and
mov
mov
shll
lods
aam
jno
mov
pop
mov
leave
out
xorl
aaa
xor
imul
leave
jne
jmp
mov
add
movsl
mov
sub
fs
ficoml
inc
out
mov
lcall
pushl
fadds
dec
fldpi
rcrl
hlt
cmpb
mov
gs
sub
ret
inc
rcrb
pop
jae
or
mov
call
out
pop
dec
out
inc
push
enter
push
xchg
add
add
shl
loop
pop
xchg
test
mov
jnp
add
loop
and
pop
jnp
fcoms
mov
mov
and
std
push
pop
jge
xchg
and
movsb
mov
sbb
pushf
jns
loope
mov
sbb
jno
fnstenv
sub
out
pop
ss
push
pop
xchg
add
sbb
loope
roll
xchg
stc
pop
ds
xor
push
addb
cli
pop
xchg
push
mov
cli
outsb
nop
ret
ret
test
jg
imul
ds
arpl
xor
test
jge
cmpsl
outsb
clc
std
lock
sbb
je
pop
inc
push
sub
adc
adc
popa
arpl
xchg
cwtl
xor
fsubrl
jmp
mov
neg
loope
ljmp
pop
dec
nop
jg
addr16
sbb
xchg
lret
dec
cmpsl
jge
test
in
cli
in
pop
pop
pop
stc
mov
addr16
int3
out
cwtl
rcll
push
lock
test
call
pop
inc
aas
sarb
andb
jle
sbb
adcb
inc
mov
sub
sub
inc
xor
jecxz
mov
jg
fwait
lds
dec
test
dec
pop
dec
sub
mov
lods
and
fcomps
sbb
lahf
mov
int3
fs
lock
mov
popf
movsb
xlat
popa
repz
fistps
lds
ss
mov
add
into
xor
pop
jg
lods
enter
sub
lret
mov
scas
pop
sub
xlat
jp
inc
shrl
cmpsb
cli
mov
mov
imul
adcl
cmp
enter
sahf
movsl
sbb
mov
shll
xor
pop
cmp
int
mov
mov
mov
ret
pop
aaa
stc
jo
dec
test
rcrl
sub
fwait
mov
mov
clc
xlat
xor
stos
add
fisttpll
sbb
notb
out
adc
sbb
movsl
jo
rclb
pop
insl
jno
adc
jae
insl
pop
push
rcr
mov
jg
sbb
js
inc
xchg
clc
int
aad
sub
repz
mov
mul
adc
xchg
out
test
rcrb
hlt
imul
in
int
and
push
mov
add
mov
inc
mov
xor
or
fnstenv
stos
jb
cmp
fisttpll
and
adc
sub
out
inc
xchg
mov
in
mov
arpl
stc
test
xchg
es
push
fs
scas
enter
imul
dec
je
pop
movd
repz
xor
pop
dec
hlt
mov
hlt
fs
sarl
lcall
xchg
dec
pusha
je
mov
add
cmp
das
imul
leave
xchg
mov
xchg
cmp
enter
xchg
into
jge
jnp
es
aam
adc
aas
pusha
stos
popa
jb
fdiv
xchg
push
leave
push
in
cmpsb
out
adc
mov
repz
ficompl
lcall
dec
and
leave
and
mov
add
lahf
mov
daa
and
loop
cmp
jbe
jle
mov
popf
mov
lods
xor
mov
rorl
jecxz
adc
outsb
shll
xchg
insl
jne
sbb
lahf
lret
repnz
mov
call
jecxz
push
mov
and
outsl
out
or
jnp
push
in
into
and
xchg
and
xor
mov
jbe
stc
cltd
mov
push
lock
xor
jnp
adc
mov
adc
add
int3
mov
pop
inc
leave
inc
movsb
add
cmp
cmp
mov
jl
shlb
xor
mov
push
push
pop
hlt
pop
ja
pop
int
out
adc
sbb
sub
es
nop
cmp
and
mov
shrl
bound
fsubr
jbe
loop
popa
insl
aam
and
dec
and
mov
je
mov
div
xchg
sub
mov
int
lcall
adc
addr16
jp
sbb
cs
cmpsl
dec
out
popf
mov
inc
pop
hlt
jle
add
movsb
mov
xchg
jg
cmpsl
mov
xorb
je
jp
in
in
jge
shlb
loop
dec
fimull
aam
loopne
push
sub
scas
jbe
fidivrs
scas
jmp
iret
push
and
cwtl
xor
mov
mov
leave
mov
jge
aad
js
aaa
repnz
lret
mov
pop
sarb
rorb
dec
pop
test
sub
adc
fs
mov
pop
jb
rolb
fcoml
mov
sbb
xor
das
adc
inc
lock
dec
ret
and
stc
xrelease
roll
xor
clc
and
ja
ds
sbb
fdivrs
loope
fnstsw
nop
cmp
xchg
lcall
sti
sub
dec
test
fs
jle
adc
and
jae
movsl
xchg
fwait
enter
insb
inc
ret
or
mov
jmp
xchg
ljmp
dec
in
pop
and
scas
push
pop
push
sub
xor
sbb
inc
adc
ret
mov
lcall
jno
out
and
cwtl
popf
in
out
pop
mov
xchg
pusha
or
push
jbe
mov
or
mov
or
mov
and
imul
call
mov
or
daa
insb
rcll
push
je
fmull
into
enter
jle
jns
mov
sbb
roll
adc
stos
movsb
or
pusha
mov
cld
mov
and
fwait
push
ret
fidivrl
xor
int
or
sub
and
pusha
mov
insb
rorb
ds
or
pushf
jg
roll
mov
adc
xor
outsb
sbb
cmp
loopne
inc
adc
mov
int3
xor
sbb
add
jns
ret
pop
xor
or
ss
push
fisubl
xchg
int3
adc
add
repz
cld
mov
sti
xchg
stos
and
mov
pusha
and
lahf
aas
xorb
jg
and
add
jns
in
adc
cltd
jge
xchg
xor
sub
push
adc
mov
mov
push
mov
cmp
jmp
fadd
es
add
mov
movsb
xor
dec
data16
ljmp
xchg
in
enter
lret
sub
mov
jnp
cmpsl
subl
dec
ret
push
push
and
push
mov
dec
test
or
jae
jno
loop
lock
cs
dec
das
push
lret
outsb
lret
imul
and
cmp
xchg
mov
mov
cmp
scas
int3
test
dec
and
fcmovu
push
gs
push
aam
shlb
arpl
sub
stos
jg
enter
movsl
jne
ljmp
sbb
or
pop
jo
test
mov
sar
cmp
cmpsl
mov
push
fistpl
in
jmp
and
mov
jb
lods
stc
rcrb
sarl
dec
add
xor
cmpsb
popa
jae
cmp
rdpmc
push
push
ror
mov
shlb
mov
pop
hlt
jb
movsl
test
popf
lret
push
outsl
shl
push
jmp
adc
std
or
mov
xorl
pop
loopne
push
mov
ret
out
mov
push
std
rcll
mov
mov
cli
pop
xlat
pusha
scas
and
inc
mov
and
mov
sbb
or
xchg
pop
out
ja
add
mov
mov
or
cmpl
xor
daa
mov
mov
xchg
inc
add
daa
xchg
cmp
leave
xor
jns
sbb
stos
jp
pop
inc
lods
leave
data16
pop
lock
jne
jmp
je
dec
add
jnp
shll
loop
out
clc
push
mov
js
inc
inc
mov
dec
mov
ss
cmp
mov
stos
arpl
xchg
cmpl
fisubs
repz
pushf
add
push
mov
ja
cmpsl
mov
inc
rolb
cmpsl
movsb
scas
xor
aad
pop
stos
push
pop
cs
shl
mov
jb
pop
mov
dec
adcl
mov
adc
and
xlat
dec
insl
fcoml
add
rorl
popa
xorb
push
lahf
xacquire
out
arpl
nop
in
js
sub
sti
adcl
jg
adc
stos
add
jb
sbb
xor
ja
clc
cltd
divb
cmpsl
rclb
xchg
clc
stos
in
lds
jo
out
lahf
dec
rclb
mov
mov
movsl
push
pop
push
cs
std
adc
push
movsl
cmpsb
stos
lret
cmp
jl
mov
clc
dec
push
xor
dec
in
ja
into
std
ret
pop
or
jp
or
pop
dec
xor
test
sub
sbb
push
mov
or
xchg
or
cld
mov
lcall
fldl
push
cmp
in
push
push
mov
data16
fwait
repz
arpl
outsl
jp
js
rol
dec
mov
sbbl
mov
push
pop
sub
loope
xchg
mov
sbb
pop
stos
fcoml
or
sub
in
enter
pop
xchg
ret
jae
test
fisttpl
lahf
outsl
roll
jle
mov
and
test
pop
jno
pop
lahf
inc
push
mov
xor
iret
js
sbb
add
dec
fs
mov
mov
addr16
cmp
mov
ja
aad
jbe
gs
nop
rol
dec
rcl
bnd
stos
xor
lcall
mov
das
mov
push
into
aaa
in
test
sub
xchg
outsb
sub
rorl
lahf
mov
nop
dec
addr16
jmp
xor
jns
add
sbb
or
fcoml
mov
jmp
jno
mov
mov
sub
arpl
push
push
adc
movsl
test
popa
les
mov
loop
fnstsw
daa
mov
aaa
das
xchg
push
dec
xchg
cltd
mov
pop
mov
pop
xchg
sbb
loopne
sbb
stos
es
push
sbb
inc
fmull
sbb
jae
movsl
fistps
sbb
test
rcll
adc
pop
push
adc
arpl
add
and
jns
xchg
subb
inc
jmp
push
and
xchg
stos
pop
xchg
mov
pop
stos
xor
pusha
jo
sub
pop
push
fstps
fstpt
pop
xor
aam
adc
mov
mov
call
jnp
jne
adc
jmp
out
push
gs
rorl
subb
jmp
add
pop
popf
add
mov
out
adc
mov
dec
pusha
das
sub
das
and
test
and
xor
es
push
leave
adc
jmp
pusha
sti
lock
adc
pop
daa
mov
clc
dec
xor
lods
pop
push
fsubrl
jmp
xor
ja
mov
das
jg
inc
filds
mov
xchg
and
mov
cmp
xor
jmp
ja
push
jp
jl
iret
sub
pop
rol
mov
pushf
test
orb
mov
cld
xor
fs
dec
xor
pop
pop
dec
mov
insb
loopne
dec
jns
mov
and
out
sub
pop
mov
push
fsubrs
shlb
mov
outsb
pop
insl
lahf
out
xchg
pusha
imul
add
mov
cli
mov
jo
into
cmp
inc
mov
inc
cltd
inc
or
js
test
gs
mov
push
mov
mov
ret
test
lods
or
sub
and
mov
sub
int3
psrlw
jo
mov
fnstsw
push
bound
mov
cmp
fwait
mov
rcr
testl
xchg
mov
push
mov
xor
adcl
sbbb
jl
movsl
lods
pop
lock
pop
imul
add
pop
lcall
fcoms
push
and
stos
insl
push
je
dec
mov
sbb
jg
dec
dec
adc
imul
imul
adc
out
sarb
and
lock
dec
and
jo
sub
pop
mov
scas
repnz
mov
mov
push
inc
je
ss
mov
stc
rorl
pop
dec
mov
pop
lcall
stos
enter
stos
imul
loopne
xchg
mov
jb
ja
push
pushf
add
sbb
int3
inc
mov
pop
mov
sub
adc
pop
mov
cmp
in
test
adc
out
cwtl
mov
sti
subb
into
mov
mov
enter
aad
leave
inc
fcmovu
repnz
repz
ss
es
divl
and
add
test
mov
push
sbb
iret
jbe
inc
repnz
enter
fwait
repnz
mov
jmp
loope
push
xorb
xchg
lahf
mov
xor
or
pop
push
mov
test
cmp
dec
popl
hlt
rorb
imul
mov
test
pop
xor
sbb
subl
mov
call
loope
cmp
call
leave
xchg
je
mov
imul
cld
sub
enter
inc
and
inc
call
movsl
loop
dec
dec
cmp
push
jge
push
sub
xor
lret
sub
popf
lcall
mov
insb
jnp
stc
push
inc
xabort
xor
xor
sub
fisubrl
fildll
push
jns
xchg
shl
cmp
incb
je
pop
jns
addb
adc
cwtl
repz
or
xchg
adc
and
lds
xchg
pop
cmpsb
mov
sub
mov
xchg
mov
std
outsb
push
in
jae
push
add
jle
cli
dec
mov
iret
fs
clc
mov
shrl
int
nop
mov
or
lds
ds
add
out
sbb
sbb
test
add
sub
mov
cmp
lcall
adc
pop
stos
push
fnstsw
roll
xchg
cmp
jno
data16
dec
xchg
inc
repnz
lcall
nop
insl
daa
call
in
lahf
add
mov
and
jb
pop
jo
push
out
push
out
jmp
aad
in
adc
fstl
sub
insb
mov
push
pop
mov
dec
test
out
or
jae
adc
mov
dec
jae
dec
nop
push
ja
cmp
mov
pop
lret
jle
push
fwait
enter
dec
pop
sbb
ss
adc
aad
movl
inc
pop
cmc
cmp
testb
popf
faddp
mov
pusha
and
leave
pop
lahf
cld
xor
lcall
and
adc
frstor
xor
or
cmp
dec
inc
push
call
js
cwtl
cmp
mov
dec
jnp
ds
inc
rorl
adc
jno
pop
push
push
dec
xchg
xchg
adc
shlb
push
je
pop
arpl
je
mov
jle
inc
repz
dec
fstps
ljmp
in
jnp
insb
data16
mov
ds
pushf
add
add
inc
or
scas
dec
rclb
mov
pop
xchg
mulb
inc
js
daa
xor
in
mov
sbb
popa
stc
adc
xchg
xchg
ss
ficoms
test
xchg
aam
cmpsl
xchg
insb
scas
imul
ret
dec
mov
movsl
mov
shr
rolb
imul
jnp
out
and
fldl
test
iret
pusha
stos
pop
xor
or
cmc
int
enter
fcompl
push
add
ljmp
test
add
arpl
ja
lret
mov
nop
movsb
clc
mov
xchg
rcrb
mov
loope
call
jnp
jno
mov
pop
pop
dec
xchg
add
mov
and
cmp
cmp
test
add
xlat
test
jge
sub
cmpsb
ds
mov
dec
and
pop
lret
ret
pop
insb
or
mov
rorb
mov
mov
les
jmp
xor
cmpsb
cwtl
and
popf
or
rcll
aaa
sbb
andl
jp
repz
push
mov
rorb
push
dec
xor
cmp
int
sub
pop
sub
repnz
jnp
mov
mov
push
stos
ljmp
jl
sub
scas
pop
xor
mov
push
stc
loopne
test
adc
ret
ret
mov
cmpsl
movsb
adc
mulb
xor
xchg
int
das
loopne
pop
jbe
andb
ljmp
int
sti
cmp
into
mov
push
mov
dec
lods
dec
dec
stos
movsl
iret
dec
inc
popa
push
push
dec
out
mov
int3
cmpsb
add
pop
pop
sbb
add
jne
and
dec
mov
cmpsb
jmp
add
fwait
data16
add
shr
dec
xor
adc
mov
mov
jno
adc
adc
pop
xchg
leave
pop
shl
xchg
add
and
es
sbb
fnstcw
xor
push
inc
mov
sbb
insl
inc
aad
mov
into
testl
dec
xor
inc
rorb
or
push
jle
mov
pop
enter
stc
dec
repz
aas
not
xchg
movswl
outsb
aas
mov
xor
and
dec
and
inc
fwait
pop
insb
imul
psllq
lea
insl
rclb
fs
mov
mov
jmp
sub
jl
scas
outsb
ret
icebp
aam
fdivrs
mov
sub
push
mov
dec
xchg
pop
aas
enter
inc
nop
sti
fwait
cmp
xchg
jno
mov
shlb
cmpsl
lds
or
pop
cmp
mov
int3
mov
push
lcall
jae
mov
shrb
imul
es
mov
dec
movsb
adc
insb
mov
and
jge
jb
loop
inc
mov
xchg
lahf
cwtl
sbb
fisubl
dec
stos
mov
sub
int
push
enter
cmp
jno
adc
pop
movsb
xor
mov
sbb
mov
pop
mov
insl
cmp
or
inc
mov
and
inc
jle
dec
je
pushf
xchg
mov
test
pop
cmp
das
dec
or
fadds
jae
cmpsl
imul
leave
sbb
idiv
fs
movsl
pop
jb
iret
insb
sub
jle
mov
dec
adc
cmp
mov
push
inc
push
add
mov
inc
push
pop
push
adc
fcmovbe
or
dec
into
pop
das
enter
out
adc
sbb
push
xor
cmpsb
pop
aas
adc
dec
inc
cli
mov
in
das
mov
popl
xlat
inc
xchg
add
xor
xor
mov
pushf
icebp
jns
bound
rorl
loopne
mov
push
mov
test
stc
clc
sbb
imull
cmovp
sbb
and
aad
fsubl
adc
outsb
test
pinsrw
notb
dec
popf
in
fwait
aaa
mov
and
jp
repnz
inc
movsl
add
loop
ret
push
pop
or
adc
lock
cmp
out
leave
pop
cmpsl
lret
test
test
inc
add
xchg
inc
negb
int3
les
cmp
fisttps
push
pop
inc
out
sbb
in
hlt
jo
sbb
xchg
jl
ret
insb
outsb
pop
mov
push
int3
xor
rol
clc
mov
jbe
jge
push
arpl
stos
xchg
loopne
pop
mov
xchg
pop
pusha
into
cld
xor
imull
loop
jno
in
xor
test
sub
mov
sbb
nop
js,pt
push
push
mov
popf
sbb
test
sub
hlt
fwait
mov
sub
ret
lea
inc
pusha
rcrb
mov
sti
fisttpll
scas
mov
out
aas
mov
xchg
es
ja
ja
xchg
push
xchg
and
leave
into
rcll
xchg
fsubrl
cli
sub
inc
enter
movsl
dec
sahf
sub
cmp
into
hlt
push
inc
out
andl
cmp
inc
and
xor
add
mov
dec
adc
leave
ss
jg
repnz
dec
ja
jle
fisttpl
dec
pop
lds
ja
mov
ja
ja
sbb
push
sbb
push
xchg
sbb
pushf
mov
xchg
adc
movsb
outsl
cmpsb
push
push
push
mov
fcom
add
movsb
movsb
insl
shrb
aad
inc
lds
sub
sbb
pop
mov
lea
out
jns
insb
rorl
loopne
nop
xlat
xchg
mov
adc
repz
test
mov
push
xor
push
shlb
fistpl
push
lock
dec
ja
std
cmp
fistps
adc
popf
negb
fs
data16
mov
mov
dec
or
les
pop
out
test
aad
icebp
hlt
pop
mov
mov
imul
and
lcall
out
mov
jg
sbbb
mov
mov
negb
ds
test
add
arpl
lea
mov
pop
cli
fcoms
and
inc
sbb
pop
dec
decb
jecxz
xchg
jle
int3
sub
jns
adc
push
outsl
aad
jbe
hlt
loope
inc
xor
les
mov
adc
xchg
lret
rorb
repz
pushf
fucom
adc
or
cmpsb
out
mov
shrl
sbb
jno
or
popf
inc
repz
imul
add
inc
inc
xor
mov
mov
pop
into
lcall
cmpsl
push
divl
rol
aam
pushf
push
lea
or
jecxz
sub
xlat
cs
pop
adc
lret
xchg
rorb
scas
inc
orb
pop
and
repnz
sbb
cmpsl
cltd
cmpsb
movsb
sahf
sbb
lret
aad
insl
xabort
insb
sub
add
push
cmp
out
inc
int3
jl
scas
adc
decb
mov
es
pop
sub
mov
insl
pusha
lahf
pushl
push
cltd
adc
jp
lret
addr16
sarl
mov
arpl
pop
repnz
shrl
xchg
mov
sbb
mov
xchg
fisttpll
in
or
imul
xchg
or
pop
cmc
cs
testl
popa
dec
adc
fstl
fsubrl
jg
scas
cmpl
add
xor
lods
cmp
mov
sub
push
jp
mov
ds
jae
jae
cmp
jbe
add
clc
sub
jb
mov
xchg
fs
movsl
je
mov
xor
std
cmp
cwtl
movsl
cmp
xchg
out
sbbb
fidivs
imul
mov
mov
cli
sarb
push
cmp
das
cmpsl
pop
test
fnsave
int
test
cld
pop
popf
lret
jbe
xorl
dec
xor
add
shl
das
popa
sbb
pop
cmp
jg
outsb
mov
mov
repz
in
scas
data16
enter
mov
sub
inc
push
hlt
and
mov
mov
mov
shrb
addr16
push
fcompl
repnz
lret
sub
xor
and
int3
push
shr
pop
cmp
leave
mov
stc
lret
xchg
pop
rcrl
xor
rcll
jg
push
and
pop
je
imul
scas
data16
jecxz
in
mov
sbb
cld
and
sahf
cmp
outsl
imul
mul
cmpsl
lcall
sti
mov
push
out
test
inc
dec
int3
jns
dec
xor
shlb
sti
repnz
sbb
cmp
add
pop
aas
pop
pop
outsb
icebp
stos
movsl
mov
dec
test
xor
jbe
mov
inc
mov
xchg
into
mov
arpl
pusha
sbb
xchg
fwait
mov
sbb
xor
jnp
cmp
js
aas
xchg
mov
xchg
xchg
dec
jno
inc
das
or
xchg
xor
dec
jle
mov
push
and
xchg
stos
fs
stos
adc
out
push
add
jbe
push
inc
jecxz
aad
mov
fdivrs
lcall
mov
movsl
rolb
sub
dec
pop
int3
aam
orb
add
orl
roll
fadds
push
mov
jmp
or
imul
pavgw
push
cmpsl
lcall
aad
dec
insb
sub
mov
mov
pop
punpcklbw
aad
insl
cmpb
popa
sub
mov
movsb
into
adc
cmp
mov
pop
add
jge
aad
dec
push
mov
xchg
jbe
lods
xchg
stc
dec
imull
xchg
mov
push
in
mov
or
sub
jne
test
movsb
into
and
out
mov
lret
cld
xor
mov
sahf
add
mov
sbb
fwait
int3
lret
and
pop
cmp
or
cmpsb
adc
fdivrl
inc
aad
cld
inc
call
dec
mov
je
gs
sbb
imul
or
sahf
frstor
pop
out
ds
repz
xlat
xor
sub
loop
jl
outsb
inc
orb
notb
js
shl
jnp
mov
aad
xchg
loopne
xchg
mov
rorb
mov
sub
lret
frstor
cs
fisttpl
inc
fmull
xchg
repz
adc
imul
cmp
mov
fisttpll
rolb
cltd
ljmp
ret
pop
lock
mov
mov
popf
pop
dec
mov
add
xchg
xchg
inc
loop
lret
mov
sub
lea
push
xchg
iret
jecxz
sub
adc
pop
sub
dec
ljmp
mov
xchg
test
xchg
mov
bound
mov
out
enter
leave
dec
add
add
push
sbb
leave
mov
icebp
and
lds
dec
mov
push
js
cmpsl
pop
jb
test
add
pop
sbb
pop
mov
jne
stc
hlt
out
loop
dec
pop
daa
ds
leave
push
rcrl
stos
ret
movsl
les
cmp
les
sbb
adc
mov
cld
ficoms
scas
xor
call
push
jae
jno
sub
jp
test
test
cmp
loop
and
stc
rol
xchg
push
sti
iret
xor
cmove
stc
inc
and
jp
frstor
stos
scas
mov
cld
sub
or
adc
jg
mov
lods
out
lret
dec
sbb
rorb
sbb
or
incl
pop
je
jp
fdivrp
or
fld
lea
xor
add
in
orb
data16
pop
pushf
adc
push
loopne
jge
push
fdivr
xor
mov
movsl
test
int
out
mov
popf
bswap
pop
push
sbbl
sub
fwait
xchg
cmp
sahf
rclb
movsl
sbb
mov
mov
dec
add
mov
sub
cmp
inc
in
jns
cmp
dec
data16
mov
je
inc
out
sbb
lods
inc
fnstsw
mov
pop
stc
call
lods
cld
mov
js
out
ret
sub
dec
sub
mov
sub
or
inc
rcll
cmpsb
mov
sub
ja
fs
lret
push
call
push
scas
and
in
pushl
rcrl
cli
ret
test
xor
inc
inc
aas
xor
and
int3
adc
xlat
dec
xor
jg
jp
movsb
out
mov
loope
mov
dec
aaa
repnz
icebp
cmp
or
and
xor
cli
ja
adc
adc
outsl
jge
pop
ret
mov
push
xchg
and
dec
popa
icebp
adc
pop
push
or
sahf
add
fisubrl
inc
mov
jge
out
loopne
fsubrs
inc
xor
mov
std
and
sub
iret
inc
mov
pop
mov
ja
push
lret
js
mov
popf
xor
stc
adc
cmp
jmp
mov
out
push
pop
lahf
and
pushf
pop
sahf
xor
push
lea
jg
roll
jae
fiadds
ficoms
aam
or
mov
insl
cmp
fstp
pop
push
lahf
call
cli
ss
add
pop
dec
aam
dec
pop
enter
lods
push
jb
shll
fistl
jbe
test
jp
and
mov
mov
repz
hlt
enter
jno
clc
ss
cmpsb
dec
ljmp
pop
aaa
jmp
inc
lds
aam
mov
sbb
mov
dec
cmp
mov
enter
bound
jg
push
les
pop
add
mov
aas
aad
sti
lret
pop
inc
aad
lahf
pop
adc
js
push
mov
sbb
jmp
cmp
jno
shrl
scas
in
out
lcall
clc
dec
es
sub
movsl
in
jae
gs
push
push
push
sbb
add
or
or
nop
cmpsb
out
dec
stc
pop
divb
test
sahf
arpl
inc
xor
dec
sbb
jns
adc
adc
sbb
fcoms
int3
fisubs
cli
clc
jg
push
movl
lock
outsl
xor
push
outsl
in
dec
lret
push
xchg
test
adc
fldt
adc
aas
push
push
push
je
jecxz
jbe
sub
das
std
daa
mov
inc
add
xchg
movb
insl
push
sub
daa
popf
movsb
dec
jmp
pop
shll
or
inc
movsb
roll
in
fldenv
out
xor
ds
dec
lcall
dec
push
sbb
adc
shlb
popf
mov
cwtl
and
and
mov
jnp
sub
jmp
jp
cmp
es
rclb
test
or
idivl
mov
inc
adc
sbb
xchg
subb
enter
mov
imul
sbb
xor
xchg
stc
scas
les
adc
call
jl
cwtl
repz
es
stos
imul
lret
rolb
lds
cltd
sbb
xsha256
cmpsb
xlat
cmp
popa
mov
xchg
mov
adc
sub
stos
enter
push
sahf
rsqrtps
je
pcmpeqb
cmp
adc
xor
pop
xor
in
adc
xlat
movsb
adc
insl
dec
out
fwait
and
mov
fcmovu
xor
mov
mov
dec
and
mov
mov
lahf
sbbb
repz
xchg
jp
ret
es
mov
mov
sub
shll
jae
sahf
sub
xchg
fwait
out
popa
add
add
outsb
dec
push
clc
push
inc
sbb
inc
pop
push
int
mov
arpl
sub
addb
jecxz
xchg
pop
outsb
xchg
pop
cwtl
inc
xlat
lcall
addb
mov
ret
jo
or
jl
push
movsl
shl
xchg
inc
jae
xor
dec
cmc
push
push
ret
pop
push
mov
pop
adc
std
pusha
sarl
pop
rclb
out
movsl
sub
xchg
pop
push
mov
adc
dec
mov
stos
mov
arpl
push
loop
push
and
xor
into
adc
xchg
pop
repz
push
dec
cmpsl
and
scas
xorb
jl
jmp
lcall
xchg
dec
lahf
pop
and
cmp
outsb
addb
popf
xchg
push
je
ret
addr16
mov
jb
movsb
sbb
push
negl
test
out
jg
inc
ljmp
stc
fsubrl
movsl
push
mov
pushf
mov
ret
xor
bswap
inc
aad
mov
enter
testl
int3
or
jl
fs
int3
inc
test
mov
les
repz
int3
pop
je
lahf
inc
int3
mov
addb
ss
xor
or
mov
push
iret
scas
idivl
pushf
cmp
xchg
dec
cli
or
popf
andb
inc
jecxz
in
or
and
jle
sbb
mov
mov
xchg
fildl
xor
xchg
mov
add
and
xchg
adc
outsb
loopne
xor
movsl
or
xor
mov
jge
lods
sub
outsb
cmc
int3
cmp
scas
adc
sbb
inc
scas
pop
in
test
cmp
pop
lahf
and
add
mov
xchg
addr16
cmp
adc
int
es
bound
in
inc
inc
loope
cmp
jae
inc
adc
jne
adc
loopne
or
xchg
lcall
roll
mov
xor
or
adc
push
lods
jl
xchg
pop
gs
dec
mov
xor
leave
stos
popa
xchg
aam
mov
pusha
dec
scas
in
stos
outsb
add
jnp
mov
int
ja
cmp
lahf
sbb
arpl
add
jp
mov
jns
mov
stos
add
sbb
jle
push
mov
add
jae
shll
mov
mov
and
icebp
push
jno
das
fildl
in
xchg
and
push
pop
popa
xchg
push
je
sub
aas
push
pop
jns
xchg
repz
add
adc
clc
adc
cmp
lods
sbb
dec
mov
jb
jns
pop
fmul
push
add
or
dec
outsl
repnz
xor
xor
dec
jo
mov
lock
imul
jp
stc
add
icebp
sub
repnz
mov
sahf
or
jae
les
jne
ffree
imul
or
mov
rorl
es
fsubrs
ss
mov
rcrl
or
gs
fcomps
loop
and
je
jns
jno
or
out
inc
sub
push
xchg
cmc
cmpsb
cmc
mov
mov
push
loopne
or
pop
mov
mov
rcll
jecxz
and
sbb
xchg
xchg
or
xchg
jb
xchg
xlat
jns
sub
xchg
test
add
loopne
test
push
rcll
mov
adc
mov
mov
sar
fnstsw
dec
enter
fwait
xor
loopne
test
pop
jmp
bound
movsb
pusha
shl
xchg
aaa
mov
ds
fwait
out
outsl
adc
jno
test
inc
mov
lret
push
nop
mov
and
push
push
andl
imul
mov
js
pop
xchg
xlat
jl
add
pop
inc
aad
jb
sarl
dec
mov
pop
jae
test
je
bound
add
outsb
push
lret
cmpsb
pushf
xchg
lea
pop
lods
mov
repnz
xor
nop
rol
enter
xchg
inc
stos
scas
shll
gs
sbb
pop
dec
add
mull
aad
sbb
out
and
mov
shrl
mov
test
pop
mov
das
imul
add
mov
jl
imulb
enter
add
adc
dec
fsubl
mov
lods
es
popf
add
cmc
inc
clc
shrb
adc
cmpsl
addr16
or
mov
addr16
jg
mov
stos
inc
rcr
or
cmc
fcompl
arpl
mov
je
arpl
xchg
dec
xchg
mov
mov
cmpb
cld
cmp
rclb
je
sbb
pusha
fstps
sbb
jp
sub
imul
or
sbb
pop
pop
dec
jnp
test
cmp
bound
lock
ds
add
lods
pop
not
negl
pop
icebp
mov
jbe
mov
loope
push
out
rorb
popa
cmp
into
loope
jmp
lods
or
pop
sub
cmp
les
push
jne
sbb
xchg
mov
jo
iret
push
xchg
test
mov
into
jns
push
mov
fsub
mov
pop
shl
jne
lock
rolb
and
lods
repnz
pusha
mov
xchg
aad
jmp
jmp
mov
cmp
js
sub
dec
sub
in
ds
inc
mov
add
adc
pushf
shlb
and
loop
jg
fimuls
dec
test
iret
fmuls
testb
aad
sub
push
jne
mov
xchg
push
fs
dec
jg
xor
jno
gs
add
xchg
mov
jg
nop
ret
push
push
cmp
clc
push
xchg
fsubp
roll
cmp
adc
cltd
inc
icebp
and
fdivrl
mov
add
addl
adc
adc
ror
pop
push
push
pop
xchg
push
inc
in
scas
pusha
mov
divb
mov
loopne
lret
in
ss
xchg
loop
jae
sbb
stos
js
std
aad
mov
ss
mov
mov
push
fdivp
jno
cmp
mov
icebp
gs
incl
pop
sub
fidivs
dec
mov
inc
inc
gs
dec
aaa
fucomp
dec
scas
add
adc
cmc
rcrb
xor
xor
dec
pop
cmp
test
outsl
sbb
cmp
jae
aaa
xchg
dec
sbb
loopne
cmpsb
stos
fimull
cmp
fcomp
xchg
aas
movsb
xlat
movsb
mov
mov
inc
inc
add
dec
mov
ds
mov
pop
adc
or
loop
or
xchg
ja
mov
dec
mov
cmp
push
lea
inc
sbb
push
mov
pop
inc
add
insb
jbe
popf
and
sub
mov
mov
mov
mov
rolb
add
push
and
sbb
mov
mov
gs
test
xchg
jne
fldenv
pop
fidivrl
outsl
inc
aad
xlat
sbb
rcr
lahf
cmp
je
xor
xchg
jo
mov
and
lock
in
mov
mov
call
jnp
push
cli
dec
sbb
mov
nop
mov
test
cmp
xchg
adc
fcoms
jns
add
nop
les
sar
pop
mov
cmpsb
ds
cmpsl
mov
pop
add
inc
ljmp
fs
sbb
adc
sarb
push
xchg
cmpsb
add
and
in
and
push
add
lock
insl
loope
out
mov
and
enter
les
fnsave
inc
push
fwait
aas
jg
xchg
sbb
xor
xchg
popa
xchg
pushf
push
fcoms
xchg
sbb
inc
jns
xor
lret
push
pop
jl
insl
pop
cwtl
je
call
sbb
pop
cs
ret
mov
out
push
cmc
stos
cld
or
mov
add
add
or
inc
cltd
push
stc
dec
mov
lcall
jl
and
push
enter
push
cmp
mov
imul
out
insl
ret
sub
dec
push
dec
xchg
repnz
imul
cmp
arpl
cmp
aas
adc
pop
add
dec
push
out
int3
lds
and
cli
rclb
jnp
adc
ret
or
scas
xor
jne
popf
cmp
pop
or
add
jle
pop
fwait
mov
repnz
lds
loop
mov
clc
aas
fstps
in
jbe
push
mov
push
scas
and
adc
inc
loop
shrl
daa
lcall
or
add
and
pop
rcrl
adc
adc
xor
dec
cmp
adc
stos
mov
daa
mov
mov
std
xor
inc
cwtl
sub
dec
sbb
sbb
adc
cmp
icebp
jmp
jg
push
or
bound
cltd
dec
aam
xchg
fcompl
in
pop
or
fs
jns
test
pop
push
sub
dec
stos
das
faddp
inc
jle
enter
imul
push
mov
jo
cli
loopne
dec
pop
mull
pop
xchg
mov
jmp
dec
sub
mov
in
cmp
rorb
imul
cmp
jbe
nop
push
stos
call
aaa
jecxz
in
mov
and
nop
xchg
mov
sbb
lret
imul
inc
and
adc
mov
xchg
insb
or
add
jg
scas
cwtl
xchg
or
shrl
or
and
xor
mov
push
mov
push
popa
mov
sbb
jge
fcoml
ret
cmp
sbb
push
adc
movsb
ror
les
xor
daa
bound
pop
push
pop
cs
jbe
sbbb
mov
js
sub
mov
daa
fimuls
fwait
sbb
inc
fmull
sti
movsl
mov
pop
fcoml
test
stos
pop
mov
ret
adc
ror
ja
dec
inc
and
jle
stc
sbb
rorb
outsb
adc
push
nop
sbb
pop
inc
jno
xchg
jge
mov
sub
aaa
cmp
push
clc
orl
jp,pn
add
cmpsb
jns
jns
xchg
add
inc
fbld
loopne
arpl
fsubrl
sbb
pop
adc
sub
jo
hlt
lods
nop
mov
sbb
cmova
outsb
mov
pop
call
push
fdivrs
push
les
nop
in
rclb
mov
dec
call
aam
int
or
dec
pop
and
ss
mov
in
jbe
fistpl
shrb
push
mov
sahf
mov
loopne
push
js
bnd
or
sbb
xchg
pop
xor
out
pop
jns
dec
cwtl
inc
enter
jg
rolb
lcall
pop
or
cmp
cmp
and
shlb
mov
mov
pop
push
insl
and
rcrl
cmpsb
btr
sbb
sbb
data16
cmp
jp
test
inc
out
lret
xor
loopne
dec
fisubs
stos
imulb
test
scas
cmc
mov
xchg
and
push
xchg
arpl
xchg
rolb
adc
lfs
sub
fstl
adc
push
enter
push
and
stc
int
or
or
daa
dec
jecxz
xchg
idivb
js
aam
mov
ds
dec
xchg
test
loop
sub
arpl
sub
push
mov
xchg
add
jecxz
cld
fisubs
fcmovne
add
xchg
pop
mov
cmp
ret
out
jo
stos
lahf
cli
and
enter
scas
inc
xor
data16
sbbl
and
pusha
xor
sbb
mov
call
inc
pushl
cmc
mov
cwtl
outsb
aam
repz
imul
dec
jge
add
mov
mov
pop
cmp
lea
xor
fidivrl
jae
hlt
mov
sbb
out
xor
outsb
ljmp
daa
sub
sbb
cmpsl
outsb
sahf
lods
push
out
bound
add
enter
dec
jb
jns
addb
dec
cs
insb
pop
ret
dec
vcvttsd2si
dec
and
stos
lods
hlt
mov
xor
sahf
lock
sar
mov
jmp
inc
sti
xor
adc
movb
add
push
stc
jb
sbb
add
pop
mov
clc
jle
inc
mov
cs
cltd
ret
lea
in
pop
add
sbb
pop
cmp
push
xlat
mov
scas
orb
and
mov
mov
pusha
and
pop
or
cld
lods
add
ljmp
aam
sub
inc
out
adc
push
add
mov
cmovno
cld
test
pop
xchg
xor
enter
dec
cmp
shl
scas
dec
fsubrs
out
push
mov
or
mov
mov
add
mov
arpl
jno
pop
xchg
popa
test
ret
xor
sub
adc
xchg
inc
testl
scas
cmp
je
nop
mov
jne
xor
xor
cmc
add
testb
gs
sbb
push
int3
cmp
in
xchg
jbe
xchg
into
and
aas
inc
dec
inc
pop
mov
xor
loop
inc
cwtl
call
aas
mov
fisubs
in
das
push
cli
pop
cmpsb
xor
mov
test
pushf
loopne
xorb
insl
pop
push
cmc
lea
cmp
mov
call
add
add
xor
ret
shll
jecxz
mov
ss
jb
ds
loopne
push
cmpb
cmp
movsl
mov
dec
pusha
pushf
mov
pop
mov
outsl
stos
cld
icebp
push
into
adc
push
add
mov
popa
push
nop
fwait
sbb
icebp
enter
xor
pop
mov
mov
jbe
push
les
sub
dec
pop
ret
cmp
in
subb
scas
and
mov
sbb
aad
and
add
in
sbb
fprem1
mov
mov
test
jg
mov
mov
icebp
in
sbb
fs
pop
imul
push
outsb
mov
mov
es
mov
or
push
insb
out
sub
xchg
mov
xchg
lock
cli
adc
xchg
sbb
fwait
dec
dec
jecxz
filds
pop
dec
inc
sbb
addl
sbb
and
push
lock
daa
sahf
outsb
sbb
andb
push
mov
sbb
aaa
inc
cmc
scas
test
sbb
hlt
pop
call
dec
leave
cli
xchg
mov
push
dec
mov
push
sub
and
lock
pushf
dec
xlat
xor
inc
cmpsl
popa
scas
cld
shl
adc
pop
adc
xchg
testl
or
pop
or
pop
cmp
mov
mov
xor
cwtl
stos
cmp
xorl
ficoml
mov
data16
push
mov
mov
dec
xor
clc
sti
push
mov
and
sbbl
leave
int
fnstenv
sbb
aad
popl
mov
jmp
popf
test
sub
jl
jl
dec
jae
mov
inc
fstpl
std
sbb
pop
lods
shll
lods
push
mov
fdivrl
pop
mov
xchg
mov
mov
mov
cmpsb
jg
sub
jg
inc
adc
jno
loop
push
popl
inc
push
pop
mov
cwtl
lock
mov
mov
pop
xor
mov
cmpsl
in
pop
adc
jo
cmp
inc
inc
in
shrd
or
mov
aaa
ljmp
cld
aas
pushf
in
decb
cli
pop
insl
les
lret
mov
and
xor
mov
das
ds
pop
sbb
call
nop
sarl
cmp
scas
loopne
jns
dec
loop
int
mov
fdivrl
insl
mov
mov
loop
mov
clc
or
cmp
push
add
sub
push
inc
inc
mov
add
add
adc
xchg
dec
xchg
jl
lret
dec
push
cmp
push
sahf
fcoml
enter
pop
cltd
and
pop
test
lret
icebp
fidivl
arpl
lcall
ja
mov
mov
test
mov
or
aaa
cmovns
push
dec
test
leave
jae
dec
leave
mov
push
icebp
insb
stos
fstpl
shlb
xchg
fstpl
ljmp
push
add
jbe
repz
ds
mull
loop
mov
stos
mov
mov
xor
jl
in
stc
jbe
mov
dec
xor
out
cmp
lds
mov
add
dec
adc
xor
jno
mov
nop
fisttpll
mov
cmp
jbe
inc
push
mov
mov
pop
adc
cli
andl
lcall
loop
push
mov
cmp
mov
adc
xchg
in
or
daa
mov
jo
cmp
or
pop
jmp
inc
push
fmuls
in
popa
jns
inc
cmp
popf
cmp
leave
mov
hlt
mov
mov
test
pusha
iret
aas
mov
xchg
stos
imul
imul
lods
push
mov
xchg
jbe
in
mov
ljmp
dec
or
push
adc
loopne
lret
mov
mov
outsb
incb
divl
leave
xchg
aam
mov
jno
out
mov
xor
icebp
xor
push
call
jns
inc
fwait
icebp
movsb
xor
adc
add
movlhps
and
mov
mov
add
popa
clc
add
add
pop
js
frstor
arpl
sti
xor
mov
pop
mov
sbbb
mov
and
gs
ficoms
repz
inc
dec
pop
push
xchg
mov
add
cmp
iret
xor
test
mov
outsl
enter
xchg
int3
test
in
ret
xchg
pop
gs
mov
ljmp
pop
dec
jns
and
test
cmpsb
int
lods
fcmovnb
push
pushf
cmp
push
lea
sbb
pop
lock
ret
dec
sbb
cmp
arpl
in
stc
subb
pop
mov
add
shrb
stc
push
sub
mov
or
sub
or
jbe
push
pop
or
xchg
xor
into
outsb
push
cltd
pop
ret
mov
mov
lods
or
movl
popa
sub
hlt
je
mov
mov
push
sbb
ret
fsubr
cltd
sbb
and
aad
mov
sub
push
mov
imul
imul
fisttpll
repnz
cmp
ret
pop
sub
xchg
sbb
roll
add
sahf
push
jmp
dec
xchg
leave
loop
movsb
test
pop
dec
and
sub
addr16
xor
pop
aaa
mov
sub
fiadds
cmp
push
mov
inc
bound
fs
loop
add
mov
or
xchg
test
movsl
stc
addl
adc
mov
roll
subb
pop
adc
jl
jl
out
fwait
sbb
inc
hlt
in
pop
lds
fsts
push
les
cmp
lahf
fadds
xor
insl
loope
aaa
xchg
jns
add
cmp
fisubl
mov
mov
mov
xchg
lret
out
cmpl
ret
test
nop
aam
outsl
outsl
rorb
bswap
xchg
and
jae
sti
clc
outsb
dec
lds
test
and
add
xchg
fs
pop
rcll
mov
mov
out
cmp
pop
sbbb
xor
mov
push
dec
jmp
xchg
ret
call
xor
rcr
push
jnp
pop
icebp
xor
rcll
mov
fsubs
mov
aam
pusha
lds
pop
test
mov
icebp
push
je
jle
xchg
outsl
leave
sbb
les
add
pop
inc
lods
push
xlat
sub
xchg
fisttpl
push
in
dec
mov
cltd
mov
sub
fisttpl
fisttpll
cmpb
push
mov
dec
or
cltd
cmp
addr16
pushf
stc
push
mov
adcb
out
adc
aam
jl
aad
add
adc
repnz
mov
fs
lcall
ret
inc
int
add
inc
inc
pushl
into
jg
mov
pop
jnp
pop
out
fwait
gs
iret
add
ss
mov
xor
push
ficompl
out
mov
push
cmp
pop
insb
fs
test
adc
gs
push
push
adc
dec
add
mov
out
mov
xchg
lds
std
call
cmp
inc
xor
sarl
cmp
cmp
ja
movb
adc
dec
out
es
mov
add
out
push
xchg
fimuls
jbe
add
sub
push
icebp
push
jmp
les
fldt
stos
add
sub
jo
inc
push
adc
loop
jno
adc
dec
repnz
test
jl
pop
mov
push
icebp
out
adc
shr
ss
aaa
jae
mov
stos
and
lret
push
mov
add
adc
and
stc
pop
fistpl
jbe
mov
cmp
inc
ret
add
xor
inc
push
xor
cmp
add
jmp
cmp
cmp
push
lea
pop
addl
jb
jnp
jle
mov
fldl
fnstenv
pop
push
rorb
or
pop
cmp
pushf
scas
or
or
inc
mov
mov
imul
sbb
cltd
add
pop
fbstp
lods
jmp
sti
add
ds
fidivl
and
repz
icebp
nop
jno
addr16
dec
dec
mov
push
out
push
or
pop
sbb
loope
ss
inc
jge
insb
enter
cwtl
roll
ffreep
dec
xchg
pop
inc
push
push
jmp
mov
mov
jl
mov
ljmp
in
sub
ret
jl
iret
cltd
mov
iret
jo
aam
xchg
movsb
test
adc
sbb
cmp
movsl
dec
or
enter
lods
ja
adc
je
mov
sbb
test
ljmp
xchg
ds
sbb
add
cmp
jecxz
jmp
ja
dec
mov
lea
xor
cmp
ljmp
mov
mov
cld
cmp
mov
lds
push
push
outsl
pop
push
jle
inc
sub
js
nop
rcl
add
cmpsl
es
add
aas
adc
mov
shl
mov
push
pop
sub
call
ds
push
or
icebp
jns
jns
icebp
cwtl
imul
adc
call
inc
add
or
xor
and
aam
cmpsb
xor
inc
decl
inc
aaa
mov
hlt
ljmp
mov
cmpsl
cmp
js
inc
sub
test
sub
movsl
sti
shl
and
sti
xchg
out
out
incl
rorl
jbe
jmp
fisubs
repnz
add
xorb
cmp
std
in
sahf
jno
cmp
push
cmp
inc
fwait
push
test
pop
in
mov
rol
andb
stc
loopne
movsl
xchg
loopne
mov
dec
jmp
lret
mov
sbb
push
lods
std
das
add
mov
fadd
int3
pop
push
daa
mov
mov
cmp
pop
in
sbb
mov
push
mov
push
in
pop
adc
cs
dec
test
mov
in
pushf
push
mov
shlb
iret
mov
pop
loope
filds
jle
fldcw
pop
out
cmp
jae
mov
push
test
fcoml
inc
xor
outsb
daa
shll
fadd
dec
pop
jnp
hlt
scas
fidivl
dec
cmp
dec
jle
mov
sahf
loop
pop
push
pop
je
popa
out
cmp
adc
cmp
mov
mov
aas
stos
lods
cmpsb
jo
push
xchg
mov
xor
mov
sub
xor
test
hlt
faddl
mov
and
jp
jae
pop
mov
fcmovb
mov
in
cmpsl
std
add
sbb
inc
jg
mov
pop
lahf
sbb
mov
mov
cli
mov
inc
push
fisubs
mov
mov
iret
ret
mov
fcoml
add
inc
lcall
inc
xor
mov
jg
in
xor
mov
xor
imul
xchg
adc
mov
pop
mov
fiadds
fs
cmp
and
std
cmpsl
fdivr
mov
icebp
cmp
hlt
orb
jbe
xor
and
add
cmpsb
dec
mov
and
xor
repz
dec
sbb
clc
insl
xlat
sub
lea
xor
pop
sbb
mov
xchg
add
jmp
nop
dec
pop
fs
gs
idivb
and
nop
outsl
and
scas
jne
mov
xor
cmc
lds
sbb
popf
xor
leave
jb
outsl
mov
dec
or
push
shrb
test
fidivrs
popf
out
xor
sub
cltd
imul
loope
jl
outsb
sbb
push
push
iret
jle
mov
cmp
jg
fnstsw
push
lret
cmp
xchg
in
and
lods
movsl
test
fucomip
scas
cmc
push
adc
mov
inc
insb
push
cmc
adc
mull
int3
fsts
mov
jl
mov
rorb
fcom
cld
nop
cmp
or
cmp
insb
pop
add
insl
jp
pushf
sahf
bound
and
mov
xor
arpl
pop
test
ret
xor
movsb
mov
sbb
push
xchg
mov
outsb
mov
cmp
xor
lcall
aas
jge
icebp
loop
sub
js
or
imul
pop
push
pop
aas
cld
push
lahf
sbb
das
jecxz
fsubrs
xor
int
lahf
jecxz
pusha
lds
data16
in
int
sbb
or
icebp
jb
in
leave
mov
loope
cwtl
or
ljmp
aaa
insb
jb
jmp
and
inc
inc
xorb
dec
dec
or
out
cmp
sub
outsb
stos
pusha
sub
mov
mov
mov
jnp
xor
out
in
incb
rolb
popf
loop
mov
iret
aam
sbbl
sbb
xchg
xor
scas
push
push
jp
adc
mov
adc
push
movsl
dec
inc
xor
mov
mov
cmp
adc
cmp
movsb
out
inc
pop
ja
fistps
iret
in
ret
jg
dec
test
jnp
and
mov
lea
dec
pop
or
xlat
sbb
movsb
cmp
mov
mov
xchg
xor
lcall
loopne
stc
mov
sbb
sbb
xor
mov
or
adc
cmp
sub
adc
mov
sysenter
ret
lahf
clc
jecxz
shll
add
mov
push
test
js
int3
cld
loop
fwait
sarl
nop
loope
xchg
cld
inc
imul
xchg
pop
repz
push
ret
cmp
nop
sbb
push
xor
loop
pop
sub
aas
push
arpl
in
lahf
inc
sbb
and
adc
pop
push
push
mov
push
jmp
and
or
mov
sbb
add
fwait
push
in
repnz
sub
inc
xchg
inc
cmpsl
es
push
xor
leave
gs
mov
faddp
insl
fwait
cld
iret
rorb
rcll
jns
push
mov
pop
jbe
shl
cmc
mov
loopne
add
pop
inc
cmp
int
pop
imul
cmc
mov
lods
addr16
icebp
push
xchg
pop
cli
inc
arpl
in
pop
outsl
data16
or
sbb
daa
out
filds
repz
in
scas
lea
out
ror
adc
push
sbb
xlat
ljmp
jne
aaa
leave
scas
sarb
adc
aad
out
adc
out
scas
dec
xchg
inc
lcall
push
imul
stos
push
cltd
cld
xchg
call
xlat
mov
and
sbb
movsl
mov
mov
and
movsl
jae
das
gs
jmp
xchg
or
push
and
sahf
xchg
and
pop
ja
fldcw
fdivrs
out
cmp
ret
mov
jbe
mov
stos
push
popf
fnstsw
mov
shll
jne
ss
frstor
frndint
adc
popf
xor
add
cmp
stos
ja
inc
dec
stos
fldt
jg
mov
push
ds
repz
out
dec
or
mov
pop
dec
add
repz
cld
sbb
ret
mov
add
xor
aas
inc
push
xchg
adc
insb
fs
xorl
enter
mov
mov
fwait
shll
lods
repnz
fs
cmp
jl
les
sub
pop
inc
movsl
decb
or
movsl
cs
xchg
loopne
and
pop
cld
sbb
nopl
push
mov
inc
ja
cmp
mov
mov
jmp
add
push
push
or
daa
and
jbe
int
and
add
xchg
cmpsb
imul
sbb
xlat
pop
fsubs
add
push
movsb
push
sub
jle
popa
cltd
jnp
cmp
pushf
jge
in
xlat
lahf
lahf
ss
adc
out
sti
aas
popf
sahf
jo
sub
imul
jge
test
or
int
jmp
cmp
fiadds
roll
and
in
cwtl
mov
lea
sbb
xchg
icebp
loop
mov
xchg
outsl
cmpsb
lahf
cmp
jp
fiaddl
pop
pop
push
xchg
fld1
insb
cmp
sub
push
out
arpl
jo
inc
out
out
sub
enter
je
lock
xchg
push
lea
cmp
movb
rorb
inc
roll
mov
pop
jne
sub
adc
sbb
sub
jns
adc
out
xchg
aaa
add
loope
sbb
call
pop
xchg
aad
pop
or
popf
xchg
addb
rorl
sbb
lret
inc
mov
test
jno
jecxz
repnz
dec
mov
ret
fcomi
ret
mov
cltd
sub
in
xchg
icebp
loope
test
cmc
out
popa
jbe
imull
sub
add
nop
sub
subb
fisubs
push
push
or
hlt
fcmovnb
pop
push
jo
and
sub
test
outsb
jmp
sub
add
sbb
nop
testl
aaa
icebp
mov
insl
cs
cli
call
sub
iret
sahf
push
push
cmpsb
add
aas
jle
stos
pushf
nop
push
sbb
dec
cmp
pop
out
xor
jge
add
pop
pusha
push
push
sub
loop
call
xor
movsl
out
cltd
sbb
inc
js
sbb
loop
pop
addr16
icebp
dec
test
es
nop
mov
cmpsb
jl
sbb
out
adc
lret
push
push
pop
fpatan
inc
sarl
lcall
pop
sbb
xchg
test
inc
std
cmp
xchg
outsl
or
add
xor
popf
cmp
stos
lods
mov
scas
lret
lret
add
ror
inc
mov
dec
cmp
fdivrs
fwait
orl
xchg
inc
test
cli
pop
pop
dec
fiaddl
or
and
out
add
cmp
add
cmp
in
aam
stc
sti
push
sti
cmc
insb
into
ljmp
imul
adc
jp
enter
mov
add
in
inc
pop
push
mov
int3
es
out
popf
fmull
push
into
push
push
mov
enter
popf
lods
cltd
loopne
cmc
add
add
mov
xlat
fcomip
rorb
jnp
iret
int3
jmp
pop
lods
call
lret
das
jns
inc
leave
mov
mov
dec
inc
roll
cmp
mov
and
xchg
pop
or
fwait
dec
jg
and
add
inc
out
and
pushf
comiss
flds
mov
jno
test
loopne
dec
int
xor
insb
out
mov
or
lret
lret
push
add
jp
aad
repz
push
mov
jg
jmp
or
adc
adc
xchg
dec
stos
mov
or
into
cwtl
push
cmp
cltd
mov
jmp
jmp
sbbl
xchg
fs
mov
mov
subl
mov
pop
jecxz
lret
ds
or
add
in
mov
sbb
pop
adc
mov
sub
mov
add
into
mov
pushf
sahf
mov
dec
add
les
fwait
xchg
push
iret
dec
mov
push
leave
pushf
adc
dec
xor
add
sub
shl
add
push
icebp
mov
dec
cld
pusha
mov
xchg
and
dec
fisttpll
xchg
adc
cld
aaa
and
cmpsb
sahf
xor
adc
stos
or
sub
cmc
mov
stc
sbb
pop
gs
dec
iret
gs
adc
lret
ret
and
jnp
shlb
or
fndisi(8087
pop
add
add
jmp
in
adc
lret
mov
cwtl
insl
scas
dec
push
movsb
aas
xchg
hlt
fcmovne
sub
pop
cmp
push
add
arpl
mov
push
ror
push
mov
pop
in
out
jnp
xchg
pop
push
std
mov
out
mov
mov
arpl
push
int
iret
bound
aad
adc
lret
stc
inc
mov
jno
cmp
mov
xchg
push
jae
inc
addr16
aad
jo
call
fildll
cmp
pop
adc
xor
stos
fs
mov
lods
jae
add
xchg
mov
push
mov
and
lock
sbb
mov
fsubr
jge
mov
data16
mov
mov
test
imul
pop
jl
xchg
out
mov
enter
sbb
dec
fidivl
pop
leave
in
repz
xchg
std
xor
testb
sub
push
lods
lds
test
sub
out
addr16
sub
jb
xor
jmp
dec
mov
clc
pushl
int3
stc
fdivr
in
cld
jae
sti
mov
push
not
aaa
mov
pop
or
into
shlb
cmp
ret
xor
and
clc
dec
inc
mov
gs
xor
imul
push
sbb
xor
xor
xlat
pop
sbb
lock
sub
push
mov
mov
addr16
mov
pusha
mov
daa
cltd
popa
mov
jns
or
test
mov
fstl
fimuls
lret
psubd
test
mov
mov
mov
ja
cld
inc
push
lods
sub
cmp
leave
icebp
sbb
divb
push
dec
rcr
inc
jg
sub
int3
push
shld
testb
pop
pop
dec
mov
jnp
lods
and
dec
add
rcrl
inc
sti
test
leave
mov
sahf
push
std
mov
push
fnstcw
mov
mull
mov
and
cld
pusha
loop
lods
lock
push
or
data16
pop
dec
dec
push
lods
clc
fstl
add
cmp
inc
int3
and
lret
mov
movsb
pop
add
dec
dec
or
out
push
mov
xor
cld
add
insb
xchg
ds
add
sbb
cmp
inc
jmp
shlb
dec
int3
sub
cmp
fwait
sbb
rep
mov
cld
inc
dec
out
shlb
dec
add
mov
mov
out
mov
mov
scas
daa
mov
adc
jae,pt
and
sub
aas
mov
add
lcall
push
leave
cmpsl
sub
mov
movsb
adc
loop
jb
ret
loopne
adc
jle
in
cli
push
fildl
mov
mov
lret
or
mov
leave
xor
dec
sub
in
dec
stc
sub
je
imul
mov
lahf
lods
ds
adc
test
movl
add
ret
adc
ja
pop
scas
jp
xchg
mov
fldt
inc
outsb
popf
sbb
push
aaa
bound
or
or
cmp
adc
lods
movsb
addr16
adc
stos
jns
fcoml
fistl
and
insb
stos
rol
in
jle
mov
pop
ret
jmp
jb
fcoml
jge
add
mov
mov
add
and
popa
push
arpl
std
mov
mov
adc
adc
stc
dec
mov
sub
xor
push
mov
out
xchg
xorl
outsb
arpl
lock
pop
icebp
jae
xchg
lcall
fyl2xp1
outsb
mov
mov
sub
add
jns
fwait
sarl
pop
outsb
pop
fs
leave
adc
loope
lcall
cwtl
add
xlat
mov
sbb
pop
bound
lock
sub
fs
mov
pusha
imul
nop
xor
fidivrs
adc
push
out
cmp
loop
xchg
es
adc
pop
mov
jne
jge
fidivl
jmp
cld
pusha
mov
imul
cmpsl
inc
fcmovnbe
pop
pop
jecxz
rcrl
and
lea
clc
shll
push
popa
inc
push
lds
nop
lcall
pushf
push
cli
cmp
in
xorb
ss
pushf
jp
push
vunpckhps
pop
jle
mov
in
ror
mov
mov
jg
mov
xchg
stos
in
dec
jp
adc
out
pop
jmp
aam
ds
in
ljmp
push
adc
out
cwtl
inc
add
cmp
lods
aad
inc
pusha
push
cmp
xlat
in
push
cmpb
cmp
xchg
jnp
mov
adcb
in
popf
mov
fwait
dec
adc
lods
stc
shrl
sbb
sub
icebp
sbb
adcl
pusha
jg
sbb
xchg
shll
pushf
clc
outsl
imul
push
jb
sbb
cmp
outsl
push
sti
mov
mov
fcomp
dec
bound
mov
in
call
rorb
loop
push
int
mov
xchg
arpl
pop
mov
test
out
mov
das
pusha
sub
pop
addr16
or
lret
sub
push
ret
into
adc
inc
pop
subb
jns
lcall
sub
adc
push
notb
sub
inc
rorb
movsl
mov
popf
xor
mov
mov
loope
lea
repnz
repnz
push
es
dec
mov
adc
mov
leave
lock
pop
loop
xchg
cmpl
or
call
pop
fists
mov
add
mov
ja
mov
or
mov
enter
adc
add
ja
pop
cmp
loope
mov
pop
or
cmc
sub
push
movsb
mov
dec
lret
mov
les
and
subl
pop
xchg
aad
add
jbe
cmc
adc
push
sub
icebp
repnz
repnz
push
sahf
sbbb
push
xchg
stc
scas
sarl
add
pop
pop
cmp
or
ss
or
mov
mov
jp
xchg
rcrb
andl
sub
mov
sub
mov
pop
jae,pn
pop
pop
int
sbb
inc
mov
rorb
inc
dec
mov
shlb
rorl
mov
sub
lock
jge
repz
js
jmp
addl
dec
mov
mov
movsb
add
pop
sub
inc
push
inc
pop
xchg
inc
in
cld
or
sub
xor
push
imul
out
sbb
sub
dec
push
mov
or
in
pop
ja
cs
dec
jne
test
mov
push
pop
jbe
addr16
and
jmp
and
js
mov
fucomi
outsl
insb
xchg
popa
je
cmp
loope
rorl
pop
dec
push
lods
sbb
bound
ret
sbb
xor
sbb
leave
mov
dec
and
cmp
pop
movsl
pop
jge
ss
xchg
insl
lea
add
xchg
mov
out
popa
xor
push
mov
aaa
ljmp
xchg
icebp
adc
mov
mov
xchg
test
adc
mov
shrb
push
ss
adc
int3
push
cli
push
dec
xor
sub
dec
push
push
aam
mov
loope
in
cmc
add
in
test
jmp
ss
fimuls
cmp
push
ret
stc
sub
push
mulb
cmpsl
push
push
xorl
xchg
in
sbb
fwait
paddsb
aas
lock
repnz
mov
arpl
aas
sub
divb
pop
lret
ror
stos
push
lock
cmp
out
add
add
xchg
repnz
push
mov
aaa
inc
notl
ficomps
sub
cmpsl
mov
in
stc
add
jnp
aaa
pop
cmpsl
stos
dec
xchg
shll
pop
mov
in
cwtl
jbe
push
pusha
mov
leave
inc
push
adcl
test
or
mov
adc
insb
jno
hlt
adc
es
ss
pop
sbb
xchg
mov
sbb
mov
add
aad
push
daa
push
hlt
insl
cmpl
in
jp
cmp
repnz
or
or
jecxz
fs
je
sub
int3
imul
push
xchg
repnz
push
movl
and
pop
sbb
add
mov
and
mov
data16
pop
shl
inc
mov
or
xchg
push
mov
and
and
mov
test
stos
push
dec
aam
popa
inc
leave
xor
adc
cwtl
sub
ljmp
pop
cs
push
mov
hlt
adc
mov
mov
jge
inc
jne
mov
lea
mov
pushf
in
mov
sub
mov
inc
sub
xchg
aam
sti
xchg
std
sbb
mov
daa
sbb
cwtl
mov
rcrb
mov
movsl
vmovapd
push
sti
xor
push
fstpt
aam
test
sub
sbb
mov
repz
sbb
cmp
pushf
test
mul
jns,pt
mov
dec
cmp
lock
or
lcall
neg
add
jnp
in
mov
sub
xchg
push
ss
repz
out
lahf
sub
push
clc
jge
bound
mov
adc
mov
inc
fs
shrl
rcr
add
mov
mov
push
lahf
adcl
jp
sbb
sahf
mov
movl
test
fidivrs
mov
add
das
ficoms
movsl
inc
and
popf
inc
push
mov
jmp
mov
or
in
add
xchg
imul
sarl
jle
mov
jno
in
dec
fstpl
movsb
push
mov
sbb
mov
sti
cmp
fs
or
movsl
das
in
stc
out
lds
jp
loope
pop
repnz
jno
cmp
pop
jmp
and
sbb
cmp
int3
repz
shl
jecxz
jo
shl
mull
leavew
mov
sub
dec
dec
add
es
push
xchg
add
andl
imul
in
in
pop
adc
das
xor
cmp
mov
sbb
lock
fbld
and
into
pusha
mov
cmp
cs
andb
dec
movsl
jns
sub
lods
sbbl
push
add
pop
cmpsl
dec
fidivrl
lock
rcll
sub
fwait
mov
arpl
xchg
or
dec
push
add
mov
sahf
and
pop
jecxz
sub
adc
or
shll
mov
addb
hlt
leave
cmp
xchg
push
fidivs
out
lcall
out
loopne
inc
jo
icebp
insb
fldcw
mov
mov
pop
jp
cmpsb
cmpsb
push
jmp
lret
out
js
adc
mov
fists
ss
inc
dec
mov
test
pop
mov
movsb
fsts
sbb
cmc
out
adc
inc
cs
in
inc
rcrb
push
lahf
sbb
push
hlt
lcall
mov
adc
push
cmp
inc
jae
mov
rorl
scas
leave
sahf
push
pusha
pop
sti
adc
mov
xchg
lods
mull
adc
pop
and
enter
jns
push
push
fnsave
test
pop
clc
test
sahf
leave
les
pop
fdiv
lret
daa
cwtl
pop
jle
daa
imul
mov
jmp
xchg
ret
jae
inc
pusha
lret
lock
test
lahf
adc
jl
insb
mov
or
xchg
xorb
cmpsl
mov
cwtl
insl
scas
mov
mov
arpl
outsb
mov
add
lcall
data16
sarb
mov
jg
in
nop
cmp
int3
mov
sub
and
nop
cmp
das
push
gs
aaa
jg
inc
xchg
dec
bound
mov
xchg
xor
mov
sbb
mov
add
dec
hlt
mov
aad
icebp
nop
test
adc
xchg
clc
outsb
xor
push
adcl
add
and
into
adc
enter
pop
outsb
sub
cwtl
out
xchg
repz
out
xchg
jmp
inc
xor
xchg
pop
test
and
and
pop
pusha
addl
orb
mov
ds
cmpsb
loop
les
or
popa
ret
dec
lds
sbb
dec
fidivs
inc
pusha
adc
or
data16
mov
and
nop
cmp
jle
outsb
std
int
movsb
andl
xchg
dec
int3
mov
test
outsb
add
sbb
divl
in
sub
or
or
sbb
cmp
xchg
xchg
ja
push
xchg
adcl
adc
gs
inc
lahf
sub
stc
mov
out
inc
aaa
pop
cmp
jge
cwtl
pop
pop
fidivrl
aas
inc
popf
push
mov
sbb
or
push
jmp
adc
sub
dec
fsubrl
mov
mov
mov
push
lret
subl
push
ret
xchg
jb
loope
adc
imull
into
and
add
and
clc
pop
fiadds
push
call
dec
cmp
mov
fldcw
stc
outsl
xchg
mov
mov
xor
cs
loope
mov
sti
xchg
cmp
mov
aas
mov
shll
movsl
out
clc
cwtl
dec
push
xchg
sahf
push
and
ret
sbbl
push
gs
data16
outsb
dec
pop
aad
lret
cli
add
dec
in
xor
sub
mov
push
add
add
inc
iret
push
imulb
push
pop
loopne
ss
jne
mov
fisttps
add
push
lods
movsl
cmpsb
stos
and
and
daa
jne
loop
push
adc
mov
and
push
mov
inc
xchg
mov
jb
stc
cmpb
jno
push
fwait
cmpsb
les
mov
cmp
enter
jnp
icebp
xor
cmpsl
es
imul
ds
sub
push
outsb
mov
insb
aad
cmp
or
addl
or
or
icebp
pop
push
test
add
lcall
sub
es
mov
test
sahf
push
test
jae
adc
stos
daa
cmp
jnp
pop
jmp
aaa
inc
mov
mov
cld
jno
cltd
pop
pop
clc
mov
pop
cwtl
jg
test
xchg
pop
push
jge
xor
jecxz
xor
movsl
outsb
shlb
sbb
popa
stos
xor
pop
jns
mov
jle
sub
enter
cs
xchg
xor
pop
inc
jmp
pop
sub
fistl
dec
sub
adc
test
negb
fwait
ret
iret
clc
loop
cmp
cmc
mov
inc
jo
or
xchg
push
in
repnz
add
pop
leave
stos
jno
xchg
dec
faddl
push
pop
xor
insl
mov
cmp
cs
mov
jns
or
call
stos
lahf
jno
pop
push
inc
popl
and
std
pop
sub
in
dec
push
inc
negb
adc
sahf
out
call
xchg
loope
test
stc
push
icebp
or
stos
cld
lret
mov
xchg
mov
out
pop
in
lahf
subb
fwait
call
mov
push
lret
and
addr16
jle
add
pop
and
daa
push
fistl
out
mov
mov
out
inc
inc
daa
xor
dec
ljmp
pop
jbe
inc
subl
add
cli
iret
aaa
pop
push
out
outsb
das
cmp
and
xchg
test
or
push
mov
sarl
mov
bound
mov
xchg
test
fisttps
jbe
imul
into
mov
lods
mov
cmpsb
cmp
loop
jbe
nop
mov
sub
cmp
jg
sub
inc
mov
adc
pop
adc
icebp
mov
jecxz
shlb
pop
cli
sbbb
stc
insl
lahf
add
arpl
mov
lds
push
or
sub
lods
adc
lret
add
pop
mov
andl
dec
pushf
call
lret
pop
add
mov
xor
jge
xchg
cltd
lret
sub
xor
jo
add
insl
add
fmull
or
repz
popf
jbe
mov
xor
aas
sarl
cwtl
and
inc
test
xor
cmc
notl
leave
push
add
lret
mov
stc
call
aas
out
pop
or
push
arpl
mov
sub
leave
push
ficompl
scas
pushf
lahf
scas
dec
cmp
mov
loop
pop
add
dec
int
fmuls
shll
push
jle
sbb
and
jne
jns
iret
add
add
test
sahf
int
mov
enter
push
xchg
jae
pop
xchg
idivl
in
insb
adc
xchg
xchg
frstor
fidivrl
xor
fs
fs
lret
push
and
inc
cmp
push
adc
mov
lret
testl
mov
das
or
add
divb
leave
mov
mov
cmp
test
xchg
cltd
pop
repnz
repnz
dec
xor
or
xchg
push
das
xor
inc
adc
jae
nop
push
add
pop
xor
xchg
pushf
mov
and
push
das
std
sub
outsb
mov
lods
sahf
sahf
sub
scas
cmp
sbb
das
adc
xchg
sbb
mov
adc
mov
push
mov
mov
in
jp
add
add
push
sub
sbb
dec
push
call
fistps
cs
lret
fildll
mov
aam
adc
loop
inc
inc
sahf
sub
das
jbe
leave
add
arpl
push
add
fdiv
xlat
cmp
push
sbb
adc
mov
or
fwait
arpl
xchg
loop
jnp
cmp
dec
sub
add
jne
pusha
sub
mov
inc
nop
inc
test
lea
push
add
mov
mov
pop
sub
test
push
jo
pop
jge
inc
mov
ret
jo
sbb
cltd
imul
mov
call
sub
and
dec
mov
mov
mov
adc
or
adc
ret
dec
mov
mov
pop
cmp
adc
jmp
push
inc
adc
js
sub
and
popa
dec
push
std
loope
dec
sub
mov
add
test
inc
jnp
xor
xchg
dec
mov
push
ja
rorb
xor
xchg
mov
jg
xchg
ffree
cli
pusha
xchg
out
or
test
mov
xchg
pusha
sbb
sbb
jae
dec
add
and
add
ret
hlt
rolb
jo
sub
bound
cld
xchg
pop
int
addr16
jne
mov
mov
cmp
sub
mov
add
mov
ffreep
pusha
ror
int
hlt
inc
icebp
cmp
xor
dec
aad
ja
cwtl
addr16
jp
and
loopne
dec
dec
cmp
mov
adcl
pop
outsl
nop
mov
loope
inc
in
pop
mov
xor
cmp
mov
ja
add
ret
xor
and
jns
lea
dec
add
sub
xor
fwait
lcall
gs
pop
and
bound
and
pop
xchg
ljmp
pop
lds
cmp
popa
mov
fimull
ljmp
dec
in
push
mov
mov
fcomps
lea
jns
fucom
out
std
les
mov
mov
outsb
mov
mov
cmpsb
adc
cmpsl
testl
mov
push
dec
int
adcl
je
enter
mov
lret
cs
mov
jmp
popa
xor
sub
fbld
push
iret
lods
mov
bound
ret
addr16
sub
xchg
mov
out
inc
dec
jne
fwait
adc
addl
and
outsl
jne
adc
testl
stos
pop
imul
aad
xor
mov
xchg
sbb
jl
sub
fnstenv
push
pop
mov
sbbl
jo
and
jnp
loopne
nop
jae
inc
mov
movsb
mov
xor
fisttpll
xchg
adc
fmuls
ss
jmp
je
push
stos
gs
fwait
int3
loope
std
push
addr16
aad
adc
ja
dec
push
mov
pop
in
lods
dec
lret
insb
xchg
jns
shrl
xor
mov
movb
pop
cmp
daa
jge
popf
jg
lcall
xchg
stos
lods
and
stc
mov
mov
add
inc
adc
out
or
ficoms
je
xchg
and
cmp
insb
inc
adc
push
sub
fldcw
inc
and
fldl
inc
leave
jl
iret
in
cld
adc
mov
adc
fistl
imul
outsl
filds
pop
in
sbb
jae
sbbb
xor
jne
cmpsb
lcall
dec
sub
xchg
lods
dec
xchg
xor
dec
sub
sub
mov
enter
lahf
clc
testl
mov
cmp
js
icebp
int3
jge
clc
ds
movsb
sub
xchg
sbb
popl
mov
dec
cmp
mov
adc
mov
push
jge
ljmp
testb
les
pop
xchg
push
jbe
shll
adc
pop
aad
xor
lods
cmp
mov
arpl
aas
in
aas
in
mov
mov
inc
rcll
xor
daa
sub
sub
xchg
mov
fcomip
data16
test
data16
mov
pop
fildll
jp
dec
push
push
add
movb
mov
pop
out
add
push
xchg
mov
mov
xor
jg
test
pop
jns
mov
mov
jnp
push
jbe
jp
jno
shrl
popa
push
and
mov
jbe
cmovbe
pop
pop
add
jnp
cmp
movsb
mov
cmc
pushf
fidivrs
xor
jl
or
sub
jp
lods
cmp
xchg
mov
dec
jno
mov
xor
sub
idiv
pop
popa
mov
cwtl
xchg
test
jp
jle
mov
popf
mov
sti
fcompl
xchg
cmp
sbb
les
fwait
iret
jo
dec
xchg
or
sub
leave
push
and
mov
out
pop
cmpsw
jmp
or
xor
pop
mov
dec
push
sti
sub
ljmp
jge
jo
mov
shrl
mov
jp
jp
shrl
push
pusha
xchg
adc
mov
push
subb
push
push
push
mov
and
fwait
loopne
sbb
and
pop
pushf
loopne
push
cmp
sahf
xor
popa
lret
xor
cmp
mov
ja
pop
dec
xor
pop
xor
fmull
loop
jns
xor
fcmovnbe
xlat
ss
mov
lods
mov
ds
cmpsl
pop
decb
outsl
mov
subb
or
push
pop
test
imul
std
dec
mov
rol
adc
or
lret
les
pushl
mov
dec
clc
in
xor
andl
xchg
dec
jb
pop
inc
mov
jb
jae
pusha
adc
das
adc
loopne
push
mov
es
jae
jecxz
inc
or
sbb
mov
and
lea
inc
mul
mull
dec
mov
dec
movsl
mov
or
mov
jmp
sbb
ss
mov
inc
lcall
fldpi
xlat
and
xor
jb
and
lret
push
and
inc
dec
fcompl
nopl
sbb
pusha
push
pushf
and
loop
repnz
cmp
mov
je
xchg
xor
sub
insb
lahf
call
popf
icebp
fldenv
or
fcmove
adc
jmp
push
sti
outsl
loope
sbb
outsb
popf
sub
add
fiaddl
rcl
je
xchg
add
mov
mov
inc
add
sbb
nop
jne
sub
mov
dec
push
cmp
ror
lret
xor
inc
jg
mov
sbb
push
dec
or
mov
fistpll
in
pop
psrlq
ss
cmpsb
in
push
jle
pop
cmp
cmc
pop
push
xchg
or
adc
and
mov
jle
inc
ficomps
int
inc
cmp
xchg
push
mov
lahf
bound
clc
xor
cmp
jno
cli
sub
pop
cmp
xor
shlb
int3
jne
mov
jmp
adc
dec
push
add
popf
mov
mov
adc
daa
stos
mov
and
pop
pop
pop
outsb
xchg
ficomps
aad
enter
pop
dec
xchg
sbb
clc
outsb
insl
pop
repnz
xor
xor
aam
xchg
clc
aaa
arpl
lds
test
das
cld
cmpsl
xlat
mov
cmp
push
fimuls
js
sbb
shl
jno
out
je
push
arpl
push
jae
sub
lea
dec
jns
jbe
in
stc
sti
inc
outsl
rorl
or
or
mov
fs
add
jle
mov
add
xchg
mov
mulb
jge
mov
sub
sti
push
push
lret
jne
mov
scas
inc
loop
and
int
inc
daa
ds
lods
xor
pop
and
movsb
push
in
popf
fcompl
mov
fsubrs
pop
push
popf
rcrl
popf
xchg
mov
call
mov
daa
pop
cmp
cmpsb
hlt
pop
adc
movl
subl
sub
shlb
and
push
fsubr
scas
sbb
jo
add
gs
and
mov
cmp
or
out
test
add
mov
sub
mov
mov
in
mov
cmpsl
jge
and
sbb
repnz
fimull
fmulp
in
arpl
frstor
insb
mov
jb
cmpsl
push
adc
movsb
push
aas
ss
lods
or
push
jg
mov
lahf
pop
xchg
repz
add
shll
xchg
mov
xchg
jb
int3
daa
xchg
or
mov
jg
mov
pop
jg
jo
push
fimuls
sbb
adc
sbbb
loop
call
fimull
cmp
or
aam
and
sbb
icebp
fnstsw
out
pop
sbb
jge
fcoms
sbb
mov
out
sahf
push
inc
and
mov
jne
sbb
pop
fwait
push
sbb
int
xchg
test
fcoms
inc
ljmp
sub
mov
loop
mov
ja
call
add
cld
xchg
leave
xchg
push
loope
push
push
add
sbbb
jo
inc
cmpsb
adc
inc
add
push
sbb
dec
addr16
js
sbb
int3
movsb
ds
cld
inc
and
mov
gs
xchg
adcb
outsl
push
shlb
rcr
mov
mov
sbbl
add
push
mov
xor
aas
or
jge
out
mov
loop
and
mov
push
jb
and
jl
sti
push
aam
test
adc
daa
dec
dec
pop
test
jae
mov
loope
rcr
mov
mov
push
cmp
cmp
rorl
lock
xor
shll
cld
jno
mov
stos
int
sub
out
mov
push
in
mov
in
loope
xlat
sub
int3
iret
jne
sub
shll
iret
xchg
int
scas
add
enter
dec
std
mov
repz
jno
and
jno
rcrb
insb
xchg
mov
stc
in
int
sub
or
stos
mov
outsb
cmp
stos
sub
add
aaa
or
jns
iret
jae
lods
das
xchg
stos
sbb
dec
xor
lods
mov
xchg
popf
loopne
push
fadd
pop
mov
sub
cmpsl
adc
mov
add
push
push
mov
loopne
dec
cmpsl
aam
ljmp
faddl
jne
mov
mov
dec
aaa
adc
rorl
or
xchg
xchg
rcrl
pop
faddl
or
cmpsl
loop
jo
pop
and
pop
and
inc
es
insb
pop
adc
push
pop
sub
lcall
aam
sbb
sub
test
outsb
loopne
sub
lahf
push
enter
das
xlat
enter
test
inc
jl
mov
insb
les
jae
test
sbb
add
fiadds
inc
mov
aam
dec
xor
adc
js
iret
leave
loop
dec
or
adcb
dec
mov
dec
pop
in
pusha
cli
xchg
lock
and
jl
in
sbb
mov
shr
pop
xor
xor
test
pop
dec
lcall
shl
xor
cmp
inc
jge
in
loope
cld
dec
addr16
jmp
jne
jo
pushf
inc
out
call
mov
stos
ret
hlt
pop
ror
icebp
test
push
adcb
mov
add
xchg
push
mov
dec
nop
mov
push
fidivl
adc
xor
stos
daa
adc
fs
test
push
or
out
lock
nop
mov
jge
scas
hlt
lcall
jecxz
das
mov
add
push
xchg
notb
int
fisubrs
out
stos
sub
test
mov
aad
popa
movsl
and
pop
dec
mov
mov
repnz
insb
lret
enter
cmpsb
lock
dec
xchg
pop
movsb
ror
lahf
pop
pop
imul
mov
mov
xor
mov
xchg
ds
scas
inc
stc
xor
inc
sbb
pop
pop
fwait
sub
scas
push
ljmp
ljmp
xor
push
arpl
push
repnz
cs
or
add
mov
jno
and
jne
xor
int3
out
pushf
nop
mov
stc
daa
insl
dec
sub
xor
adc
jo
jb
call
fdivs
arpl
stc
sub
add
or
xchg
xchg
mov
aam
mov
std
inc
aam
mov
adc
mov
sbb
jo
inc
mov
push
cli
push
das
lods
adc
inc
movsb
mov
pop
imul
cld
push
jns
sbb
rclb
mov
jns
add
jnp
iret
faddl
sti
rcrl
mov
mov
sub
fisubs
cmp
mov
sti
iret
inc
jp
sub
out
xchg
mov
hlt
daa
call
movsl
rcrl
stc
mov
mov
into
push
fistpl
daa
mov
mov
popa
push
xchg
mov
pop
xor
inc
mov
jns
sub
rcr
pop
pop
cmpsl
cltd
fsubrs
aad
push
pop
mov
int
mov
dec
lcall
clc
inc
in
xor
arpl
or
and
push
jnp
and
cli
inc
mov
or
test
add
in
test
out
push
xchg
push
addr16
push
dec
lret
inc
icebp
arpl
flds
xchg
sbb
xchg
mov
mov
gs
pop
ljmp
push
imul
mov
in
pop
inc
fdivrp
movsb
in
fsubl
sbb
cmc
xchg
mov
outsb
cmp
add
rorl
push
cmc
lods
popf
mov
stc
in
cmpl
adc
in
sahf
les
mov
shrb
mov
fcomp
xchg
xchg
dec
jmp
inc
insb
mov
and
add
pop
cs
jle
dec
dec
mov
inc
fdivs
adc
scas
mulb
lcall
or
out
push
xchg
jns
mov
push
mov
ret
xchg
add
xor
or
pushf
pushf
stos
popa
xor
xchg
dec
test
insb
mov
jns
mov
out
and
loope
cwtl
loop
lret
add
aad
in
inc
hlt
in
adc
daa
pop
mov
idivw
int3
iret
out
xchg
jecxz
lret
add
push
jb
cmp
popf
out
aaa
pcmpeqd
subb
xchg
xor
add
ror
jge
adc
jb
inc
cmp
aam
test
into
mov
sub
push
dec
adc
cmp
dec
movsb
pop
dec
xor
mov
fimull
jns
mov
cmc
mov
mov
shl
insl
xor
repnz
out
cld
fsubr
xchg
aad
aaa
push
testb
jmp
imul
int
push
inc
fs
inc
cltd
stos
xchg
cmp
in
or
xchg
fnstcw
enter
add
rolb
gs
mov
and
inc
and
mov
pop
fwait
icebp
test
mov
push
xchg
push
out
xor
out
sub
xor
inc
nop
push
es
push
xor
sti
stos
xor
ss
inc
sub
mov
xor
inc
cmpb
cmp
sub
testl
mov
stc
mov
cwtl
ffree
and
adc
mov
insb
shrb
je
into
daa
xlat
adc
loop
cmp
loopne
xor
scas
mov
shl
mov
imulb
movsl
ss
ss
lock
adc
call
and
dec
sub
sahf
movsl
push
sbb
shrl
jae
loopne
int3
or
das
mov
dec
cmpsl
fmull
rorb
cli
inc
push
mov
loop
lods
in
or
inc
add
sbb
adc
pop
mov
pusha
sbb
sub
dec
xchg
pop
insb
pop
xchg
lret
sbb
out
daa
lods
adc
in
sbb
pop
inc
cmp
add
inc
mov
movsl
shrb
dec
cmp
arpl
clc
push
sub
iret
push
inc
stc
push
cmpsl
imul
jp
mov
or
xor
sbb
clc
lods
sahf
pusha
loop
xchg
inc
in
insl
push
ror
pushl
mov
test
jbe
lds
test
rcrb
lret
shll
lcall
cmpsb
fucompp
sub
mov
adc
xchg
icebp
xlat
and
mov
nop
ret
inc
fs
mov
ret
and
imul
out
mov
add
test
add
data16
pop
pop
scas
jns
imul
out
scas
andb
inc
scas
imul
fcomps
mov
cld
pushf
inc
inc
aas
loope
push
cmc
and
pop
inc
push
sub
test
fnstenv
ds
xchg
cmp
setb
mov
push
inc
test
das
xor
mov
pop
out
sbb
enter
outsb
sbb
push
testb
and
cli
lahf
fwait
mov
xchg
gs
dec
or
and
lret
push
jb
lcall
inc
rorl
push
xor
int3
pop
test
sbb
xchg
lcall
test
aad
dec
leave
fnstenv
or
add
ror
inc
les
push
sbb
cltd
mov
dec
lea
lods
ss
cmpsb
pushf
mov
and
ret
xchg
mov
mov
mov
stc
lods
sub
outsl
sub
xchg
sub
cli
mov
sti
mov
cmpl
cmp
stos
lock
invd
jp
xchg
xor
aad
ds
cmp
xchg
lods
sahf
pop
inc
or
cmp
fcomps
add
push
sub
frstor
scas
push
lret
mov
lahf
xchg
movsl
cmp
adc
dec
cmp
scas
ja
pop
inc
jae
mov
movl
pop
jno,pt
push
lret
inc
cmp
mov
push
jmp
xor
movsb
dec
cmp
les
popf
out
es
sbb
mov
add
pop
push
arpl
pop
cmc
cmp
stos
mul
mov
movsl
dec
out
sub
push
and
xchg
sub
imul
push
add
cwtl
fidivrl
jmp
adc
dec
mov
jge
pop
mov
mov
rcrl
das
xor
mov
fdivl
adc
push
in
iret
popa
fadd
shll
cmp
pop
icebp
test
jl
insb
das
inc
sahf
jp,pn
call
dec
pop
fisubs
loop
sub
add
xchg
push
mov
or
push
jns
inc
popa
mov
jge
or
movq
insb
repz
test
hlt
mov
push
fistps
dec
mov
aaa
pop
popf
xor
dec
cmpsb
cwtl
pushf
mov
xchg
nop
sarl
or
jo
and
js
mov
ror
btr
loope
mov
sub
xor
stos
addr16
mov
rcll
pushf
and
dec
add
outsl
xchg
or
filds
push
xor
fisubrl
scas
xchg
adc
sbb
ret
inc
cltd
or
incl
aaa
cld
cld
insb
testl
push
das
inc
rcll
decl
xchg
jnp
mov
repz
adc
out
pop
lock
sub
cmp
add
lds
into
aam
push
sbb
cmpsl
in
pop
pop
pop
and
ficompl
cwtl
in
jb
jae
add
mov
jne
cli
sbb
mov
or
cmp
jp
je
xor
imul
add
xchg
shlb
jae
sbb
in
add
insb
pop
lahf
sbb
xor
and
add
adc
xchg
lcall
lret
aam
mov
inc
xlat
pop
adc
into
xor
xchg
add
ja
dec
or
cmp
or
lret
cmp
or
pusha
popa
je
cmp
je
loopne
pop
shl
mov
mov
inc
inc
ret
into
xor
scas
loop
adc
mov
icebp
mov
add
and
add
or
jmp
and
dec
xchg
inc
and
jo
pop
inc
es
mov
pop
xor
mov
loope
neg
jle
xor
ficoml
sbb
es
xor
imul
push
xchg
in
xor
jnp
add
jbe
outsb
inc
jp
adc
dec
mov
fcoml
outsb
stos
dec
push
pop
out
jge
popf
push
push
mov
ret
push
pop
push
popf
sub
test
in
inc
xchg
shrl
rcr
pop
inc
fldcw
mov
cmc
aas
inc
or
dec
inc
mov
ja
dec
push
addb
mov
test
sbb
adc
mov
mov
xor
dec
sub
movsb
ror
adc
mov
inc
jle
nop
inc
jmp
cmovb
fdiv
gs
jno
pop
xchg
fidivs
insl
imul
mov
ffreep
mov
jne
mov
ret
cli
dec
mov
in
out
dec
xor
test
cmp
pop
in
mov
lods
std
nop
ds
enter
cmp
scas
dec
scas
mov
outsb
sbb
push
loop
cmp
push
sub
leave
inc
cmp
inc
xor
ss
testl
gs
std
das
fs
push
js
pop
dec
ljmp
jbe
imul
inc
je
sub
pop
mov
jbe
mov
mov
test
pop
dec
data16
aaa
push
and
movsb
cmp
inc
cmc
test
jne
push
push
dec
aam
aad
rol
inc
insb
repnz
inc
jae
shll
mov
insb
inc
movsl
mov
pop
pop
or
fnstcw
push
outsb
mov
cmp
repz
lret
adc
sarl
inc
popf
imul
mov
dec
sbb
loopne
outsb
fcoml
out
sbb
call
out
aas
pop
inc
rclb
xchg
fs
lock
dec
push
divl
popl
adc
dec
test
jb
xor
dec
cmp
mov
and
cmpsb
mov
inc
ja
pushf
pop
xor
std
add
ljmp
addr16
mov
jbe
loopne
push
push
jne
push
inc
hlt
and
add
jb
inc
call
cli
adc
mov
clc
inc
sbb
xchg
sti
push
stc
rcrb
xor
fnstcw
mov
xchg
sub
adc
pop
cld
outsb
daa
push
ss
lret
dec
xchg
dec
lods
sub
sub
mov
mov
cwtl
mov
push
outsb
mov
mov
pusha
xchg
lods
fidivrs
mov
and
repnz
js
sbb
mov
notb
shll
and
lock
ja
icebp
push
push
and
scas
pop
fadds
or
out
imul
sbb
mov
xchg
push
and
fidivrs
pop
test
add
shll
repnz
cwtl
add
sarb
mov
sbb
jmp
sub
mov
push
enter
fs
push
dec
jl
push
mov
xchg
sub
jbe
xchg
test
adc
rcll
pop
flds
insb
jecxz
cld
push
scas
cmp
js
cld
cmp
sbb
dec
push
push
fistps
pushf
dec
xor
popf
cli
into
ds
mov
jl
dec
jae
movsb
sbbb
fcmovne
and
pop
pop
add
mov
ret
add
pop
and
pushf
fcoml
sub
dec
inc
sub
jno
push
sbb
lahf
mov
push
andl
dec
mov
scas
cmp
xor
lret
adc
cmp
mov
lods
ficoms
pop
movsb
mov
into
or
shlb
push
idivl
and
sub
cwtl
icebp
mov
rclb
mov
add
aad
add
mov
xor
and
xchg
inc
jg
out
push
jo
adc
and
jle
add
jg
cmp
dec
rol
jecxz
push
ret
adc
jns
fcoms
cmp
cwtl
sub
lret
movsl
into
popa
into
js
xlat
xchg
ret
call
mov
daa
pop
clc
loope
mov
sub
test
cmp
int
arpl
jmp
jecxz
mov
mov
sbb
push
arpl
and
push
push
sti
add
hlt
movsl
shr
int3
scas
mov
enter
imul
ret
xchg
xchg
ss
mov
cld
insl
xchg
dec
pop
cmc
insl
rcrb
jp
ljmp
sahf
cmpsl
pop
aad
loopne
cmp
jp
loopne
xchg
clc
int3
int3
dec
mov
les
outsb
and
dec
out
outsb
pop
adc
insl
cmp
add
jg
xchg
arpl
bound
mov
call
dec
imul
jns
mov
pop
lea
push
xor
mov
sarl
leave
mov
mov
xor
sbb
dec
jns
xlat
xor
aam
icebp
push
dec
and
adc
pop
inc
jge
stc
std
sub
lahf
mov
dec
test
repz
test
out
and
jbe
call
mov
adc
mov
sbb
mov
mov
mov
pop
jne
insb
cmp
fidivl
out
cld
mov
xchg
rol
insl
dec
xchg
clc
icebp
adc
xchg
sbb
cmpsl
xlat
add
pop
fs
fwait
jnp
loope
fxch
popa
xchg
dec
inc
js
in
roll
push
aad
xchg
mov
loop
cmp
adc
add
dec
fidivrl
dec
popf
sbb
add
or
pop
fidivl
ficoms
mov
lea
xchg
gs
sub
mov
push
and
pop
cs
not
jnp
push
repnz
loopne
cltd
out
add
pop
pop
pop
xchg
adc
xchg
push
or
add
fidivrs
popa
sti
out
idiv
cmp
aam
jbe
xor
mov
sub
movq
xor
sub
arpl
cmc
jmp
pop
nop
cmc
xor
jo
push
cmp
add
sbbl
in
stos
jno
xchg
mov
xchg
sbb
mov
jmp
and
sub
xchg
mov
les
iret
dec
arpl
jo
push
jo
inc
jecxz
jno
adc
mov
sahf
mov
cmp
cmc
mov
movb
adc
add
aaa
in
fnstsw
clc
dec
mov
sub
insb
in
jge
arpl
pop
lahf
fdivs
daa
imul
inc
jne
and
inc
and
push
test
mov
push
sub
push
or
sub
pop
or
push
xchg
fiadds
jl
mov
push
fistl
movsb
lahf
push
xchg
xchg
jl
out
es
lcall
les
jne
loopne
es
in
imul
add
int3
add
cwtl
in
xor
sub
std
push
jp
daa
xchg
push
stos
add
cld
mov
push
call
pop
xor
mov
call
subb
outsb
or
dec
push
push
jne
or
lret
xchg
cmp
push
mov
aaa
inc
ret
mov
arpl
std
add
popf
push
pop
inc
mov
sbb
lds
decl
loop
inc
in
loop
je
dec
sahf
add
arpl
inc
fisubl
push
sbb
ret
pop
outsb
sub
mov
es
ja
xor
jo
jle
add
jmp
outsb
pop
arpl
ret
fbld
fadds
mov
bound
repnz
or
jmp
inc
jecxz
insl
fs
loop,pt
popf
outsl
push
jno
inc
cmc
mov
daa
mov
das
dec
cmp
xchg
push
inc
lcall
repnz
push
test
jle
or
pop
inc
pop
fucomi
add
pop
iret
add
aam
xor
ss
test
mov
inc
les
ljmp
push
shlb
lods
add
lds
out
jmp
cli
jl
pop
push
pop
mov
movsl
mov
jns
inc
xchg
dec
mov
mov
inc
hlt
mov
sbb
jb
outsl
cmp
pop
or
cmp
outsl
loop
jmp
pop
arpl
xchg
test
and
sbb
insb
aas
sub
xchg
mov
mov
push
int3
and
data16
rdtsc
pop
cmp
leave
sbb
pushf
lcall
out
sbb
ljmp
push
rclb
out
xor
hlt
xchg
pusha
xchg
cmpsb
clc
lea
pop
xchg
add
movsl
ds
popa
std
sbb
pop
sahf
push
dec
push
inc
mov
fdivr
inc
inc
xor
cmpsb
in
push
cwtl
xchg
shrb
es
in
test
repz
push
subb
gs
push
and
and
stos
and
mov
mov
bound
and
aad
cmpsb
lods
mov
xor
sbbl
add
add
cld
cmp
cli
sub
fnstenv
fs
and
outsb
push
cwtl
fisttpll
push
std
mov
add
lods
and
cmp
mov
push
cwtl
iret
mov
and
out
mov
pop
jg
dec
mov
das
mov
or
lahf
xlat
inc
mov
push
call
cmpsb
scas
or
das
jmp
jp
lret
ja
lods
pushf
insb
bnd
test
mov
or
and
mov
mov
adc
sub
push
je
xchg
add
arpl
ret
mov
sarb
stos
lods
loopne
dec
jecxz
adc
push
movsl
jmp
mov
add
out
or
insb
jb
push
lahf
popf
mov
jae
flds
and
lahf
in
fcoms
adc
or
mov
les
insb
add
jae,pt
sub
adc
cmp
pop
mov
imul
std
pop
or
sbb
mov
test
dec
enter
mov
jae
nop
psraw
xchg
js
jg
push
add
jg
rcrl
nop
bound
sbbb
or
enter
jo
fmuls
lock
pop
dec
fs
scas
sbb
cltd
aas
push
aas
mov
popa
push
sub
inc
sahf
xchg
inc
xchg
out
and
inc
mov
xchg
shll
adc
mov
cmpb
ret
xor
jge
add
mov
mov
outsb
aam
divl
clc
xor
gs
push
xchg
nop
mov
xchg
jo
push
test
in
nop
ljmp
nop
mov
pop
adc
push
das
mov
jmp
mov
jge
scas
push
out
rclb
mov
out
inc
pushf
jecxz
lret
cmp
push
repnz
mov
xchg
fbstp
movsb
ds
push
sbb
arpl
mov
lahf
jbe
andb
icebp
stos
in
xchg
cmc
or
test
pop
daa
or
loop
in
adc
pop
jge
or
push
pop
js
test
into
jae
dec
and
dec
inc
les
adc
xchg
je
jo
jo
push
push
imulb
dec
mov
cmc
inc
inc
adc
lret
addr16
popf
arpl
movsb
popl
into
gs
sbb
fiaddl
push
and
sub
aas
sbb
push
xchg
sbb
ret
pop
jecxz
push
je
sbb
lods
fwait
jp
sbb
sbb
push
mov
aad
arpl
and
outsl
jl
xchg
push
and
scas
pop
jle
sbbl
jo
mov
xor
into
add
lock
push
fnsave
sahf
stos
scas
jmp
ja
cmpsb
and
mov
lcall
pop
inc
fucomp
and
dec
push
sub
mov
cmc
bound
out
mov
stos
jle
mov
repz
das
cmc
bound
dec
scas
or
imul
sbb
cmp
fxch
mov
enter
push
mov
fisubl
lds
pushf
jmp
fdivs
jb
outsl
or
pusha
sbb
jbe
add
xchg
jecxz
loopne
imul
cld
adc
sbb
loope
dec
daa
pushf
aad
sti
add
pop
inc
test
imul
xchg
mov
imul
jle
push
aaa
adc
and
xchg
jbe
fisubrs
movb
fistpl
mov
mov
loopne
pop
popf
sbb
cli
insl
mov
in
outsb
stos
sbb
add
fs
aad
mov
sub
push
aam
cmp
mov
push
pusha
xorb
cmpsl
dec
lret
cmp
inc
jno
loope
in
fcompl
sub
cmp
push
daa
xor
shrb
repnz
mov
and
stos
mov
inc
inc
nop
loope
aas
ds
ret
cli
out
out
orl
andb
or
loope
jge
lds
lds
pop
mov
addr16
inc
add
or
fdivp
iret
xor
push
jge
stc
mov
inc
shr
adc
daa
add
insl
out
add
dec
cli
mov
inc
pusha
cmovo
imul
andl
xor
movsl
sbb
lea
jbe
dec
cld
xchg
pusha
mov
sub
sbb
mov
xor
pop
mov
dec
das
xor
sbb
sbb
test
fcom
cmp
in
popf
mov
adc
and
add
mov
nop
imul
fmuls
pop
subl
inc
xchg
nop
mov
imul
test
xor
iret
lods
dec
pmullw
scas
lds
loopne
push
loopne
loopne
cmp
into
fwait
in
divl
mov
pop
jle
in
mov
xor
iret
stos
sbb
fcomps
sub
test
jne
add
in
mov
cmp
ret
inc
lcall
stos
or
sbb
xchg
jecxz
adc
js
dec
jle
pusha
push
aas
mov
decl
out
lretw
and
mov
add
jg
pop
xor
xor
cmp
cmp
jle
daa
mov
ljmp
dec
nop
xchg
repz
push
ljmp
inc
adc
add
mov
pushf
and
fistpll
sub
xchg
lds
cld
inc
mul
dec
sub
int
mov
xchg
jle
add
shrb
lahf
xchg
push
mov
fnsave
xchg
jnp
mov
and
mov
push
cmp
fnstenv
xchg
paddw
shl
jg
das
in
data16
mov
cs
mov
outsb
sbb
push
in
dec
ret
out
lret
lods
std
cmp
mov
adc
inc
jecxz
xor
nop
push
into
sahf
mov
mov
mov
push
mov
movsb
jge
ds
fldcw
loop
imul
les
pop
arpl
ss
sbb
outsl
mov
mov
mul
inc
dec
fucom
push
mov
cltd
inc
inc
sbb
movsb
or
mull
jbe
and
xlat
in
push
test
jmp
stos
les
out
jl
loop
fisttpll
int
cmpsl
andb
andb
xchg
xchg
outsl
jmp
sub
outsb
lods
out
xchg
push
rcr
inc
andl
mov
lret
popf
fwait
cmp
cmp
movsl
mov
jl
inc
or
testb
sbb
out
xchg
iret
adc
sti
mov
ds
roll
xchg
push
push
rcll
jle
sbb
movsb
adc
sub
sub
sub
aad
mov
pushf
or
call
test
rclb
aaa
in
ret
mov
movsb
hlt
fs
lds
notb
mov
dec
gs
inc
xchg
aaa
xorb
and
jle
out
xchg
mov
xchg
sbb
jecxz
insb
out
out
cwtl
in
add
adc
xchg
and
stc
mov
leave
pop
add
inc
cmpsl
pop
mov
fistpll
xacquire
cs
adcb
bound
fcomps
call
xchg
movl
inc
orl
jmp
aad
push
or
movsb
fnsave
pop
cmpsb
mov
adc
push
daa
test
fmull
mov
push
pushf
arpl
clc
adc
imul
mov
pop
inc
outsl
fnstsw
mov
popf
pop
mov
loopne
dec
ror
jae
imulb
mov
dec
adc
call
inc
cmpsl
call
cwtl
daa
sbb
mov
adc
xchg
xchg
xlat
adc
jb
movl
xchg
hlt
mov
push
pushl
aad
rcl
pop
popa
push
pushf
rol
push
mov
sub
inc
cli
push
push
and
mov
mov
jb
jne
xor
fistpll
mov
sbb
or
mov
xrelease
cmp
cmc
xchg
mov
inc
xchg
in
mov
jecxz
stos
rcrb
aad
or
je
jae
sub
mov
ret
pop
sbb
shrl
push
mov
je
into
sub
mov
gs
cli
shl
int3
mov
adc
daa
rcrb
std
xor
test
in
mov
negb
cmp
xchg
lods
pop
fnstenv
push
divb
scas
imul
fs
pop
cli
dec
inc
mov
jecxz
inc
loopne
ja
setl
leave
cmp
mov
insb
adc
imul
mov
cmp
imul
xor
dec
lea
pop
loop
stos
pop
inc
cmp
add
or
add
stos
pop
icebp
adc
xor
aam
hlt
sarb
clc
inc
add
dec
cmp
sbb
adc
inc
mov
loop
cmp
xchg
idiv
lods
int
xor
mov
call
nop
in
data16
jne
cmp
int3
call
test
out
shlb
adc
mov
mov
cwtl
negl
xchg
dec
xlat
loope
nop
mov
cld
sbbb
and
aad
in
test
mov
insb
xchg
inc
jmp
iret
aas
es
movsb
mov
add
movb
pop
lret
into
cmp
mov
push
dec
jge
or
cwtl
xor
sub
stos
fistpll
stos
icebp
rol
xor
add
jne
add
jecxz
in
dec
add
mov
adc
push
and
pop
dec
fdivrl
xor
xor
cmpsb
mov
push
push
mov
sbb
sub
lret
xor
xor
insb
mov
movsl
xor
in
push
int
sbb
int
xchg
aaa
loopne
inc
mov
out
push
loopne
push
push
and
fstpt
xchg
ficompl
push
in
add
fwait
cmp
jle
xor
out
movsb
and
inc
xlat
jne
das
sti
shrb
sbb
dec
add
mov
into
xor
movsb
jp
dec
dec
xor
pusha
aas
loopne
sbb
push
pop
adc
rorb
repz
add
ret
adc
pop
xor
test
lea
in
aas
push
xchg
fidivrl
xchg
mov
fstl
loop
cmp
sbb
movsl
cmc
loopne
sbb
stos
std
or
nop
adc
dec
std
idiv
loopne
dec
and
jae
jbe
push
insb
push
dec
cmp
arpl
inc
scas
push
in
jne
jp
int
neg
cltd
outsb
adc
cmpsl
insb
xchg
test
popa
fwait
add
cmp
test
int3
jecxz
inc
movsb
lods
mov
cmc
add
das
inc
inc
mov
outsb
div
pop
mov
inc
or
aas
insl
aaa
dec
imul
and
adc
dec
xchg
arpl
jnp
push
and
out
push
loop
push
inc
bound
popf
pop
dec
movsb
jp
inc
int3
stc
scas
mov
jp
aaa
or
xor
mov
popa
rorb
lods
ds
adc
cs
dec
js
push
lret
xchg
push
adc
mov
fldt
push
adc
adc
add
les
test
ror
inc
js
add
xor
jb
rcl
popa
shrb
shlb
test
enter
sub
adc
lds
cltd
and
mov
out
fwait
mov
pop
ss
mov
lret
mull
and
adc
incb
lcall
xchg
shll
shlb
inc
addr16
mov
inc
pop
mov
xchg
xor
mov
sub
popf
dec
fiadds
pop
imul
repz
inc
sbbl
add
lods
mov
mov
mov
outsb
cmp
fs
mov
lret
popa
sar
push
ja
out
mov
cmp
push
in
dec
sbb
stc
jle
test
pop
and
addr16
iret
mov
rcrl
add
push
fisttpll
data16
orb
cltd
in
inc
pop
cmpsb
cwtl
idivb
xor
lahf
add
cmp
scas
or
mov
jge
inc
fcmovnb
popa
daa
cmp
in
in
aad
sub
cli
jmp
aam
nop
xchg
sarb
jg
jmp
and
bound
fisttps
out
movsb
out
pop
adc
add
out
movsl
xor
xchg
ficomps
mov
cmp
xchg
dec
adc
mov
lock
sbb
aaa
adc
jo
mov
addb
mov
mov
push
inc
hlt
arpl
int
ret
pop
shr
pop
repz
jb
adc
jb
cmpl
jg
xlat
sarl
jns
mov
lea
in
pop
adc
hlt
sar
rol
ds
sub
int3
movsl
cltd
test
rorb
out
mov
mov
mov
iret
pop
xchg
repnz
popf
pop
pop
nop
mov
jmp
std
xor
jne
int
or
test
pop
rcrl
imul
push
cmp
ret
stc
mov
push
xchg
mov
add
mov
pop
inc
push
inc
push
daa
test
and
sub
dec
mov
jp
sub
xchg
pop
sub
enter
adc
fnstcw
inc
imul
nop
dec
xor
sub
mov
cltd
or
inc
mov
adc
jo
or
or
test
bound
enter
mov
sbb
adc
or
hlt
in
gs
mov
lahf
arpl
lret
ss
ret
lods
sbb
les
push
mov
push
xchg
sti
inc
test
push
sub
lds
hlt
cmp
pusha
inc
cwtl
out
mov
or
neg
lret
js
push
push
and
cli
push
imul
fldenv
fsubrs
fs
in
mov
mov
into
rcrb
les
add
and
pop
flds
xorb
push
mov
jmp
inc
pop
cmc
xchg
inc
shll
xchg
sub
dec
jae
and
pmovmskb
mov
cmp
jnp
shll
push
outsl
dec
push
fistl
push
sub
cltd
push
in
dec
xor
jb
jae
notb
inc
lret
sbb
cli
sbb
rorb
inc
xor
pushf
into
push
andb
adcb
xchg
and
sbb
cld
xchg
stos
add
mov
je
cltd
and
xor
sti
repz
push
insl
push
xor
adc
out
or
dec
pop
or
xor
inc
dec
push
mov
jno
sbb
dec
xchg
scas
data16
clc
lcall
adc
out
lea
insl
or
jp
in
pop
loop
lret
jbe
mov
jbe
inc
cmp
sub
mov
icebp
push
loop
inc
cmp
push
xchg
clc
repnz
ss
push
xor
push
add
int3
cltd
and
adc
fstpl
adc
dec
fildll
and
xchg
mov
inc
add
in
jl
cmp
loop
shlb
sbb
fistpl
test
test
sub
jg
push
enter
mov
pop
xor
jns
sbbl
aaa
aad
ror
in
cs
xchg
mov
nop
or
bnd
test
je
into
mov
jge
fdivr
dec
push
mov
testl
lret
loope
sub
or
and
or
inc
mov
mov
or
cmpsl
mov
into
shlb
aad
xchg
mov
sub
lods
nop
pusha
lock
movsb
mov
xor
outsb
lahf
movsb
fistl
jg
nop
in
sbb
out
out
test
adc
sarb
xchg
aas
pop
sub
add
xor
fcomp
cs
mov
out
pop
mov
push
fcmove
mov
outsl
int
sbb
fisttpll
shl
pop
ds
sbb
lods
pop
das
cmp
jne
jno
cmp
sbb
addr16
jge
std
inc
arpl
fsubl
add
movswl
call
sub
push
jmp
nop
ret
xchg
pushf
add
cwtl
and
inc
sub
push
pusha
or
aad
adc
test
sahf
mov
dec
imul
jge
xor
daa
pop
xorl
jbe
ljmp
mov
ffree
push
dec
dec
sbb
and
stc
dec
pop
push
ljmp
dec
test
lret
mov
leave
add
fs
sahf
test
mov
jnp
shlb
add
and
mov
aad
js
sbbb
popa
out
cwtl
data16
or
testb
xlat
lds
movsl
push
pushf
sbb
push
sbb
gs
add
push
jno
cld
outsl
pushf
iret
popa
dec
or
and
add
sub
push
and
fwait
jle
mov
lahf
aaa
adc
inc
pop
pop
inc
inc
push
scas
and
scas
dec
add
into
jl
jns
jp
pop
popa
sbb
cmp
adc
scas
sub
mov
push
out
or
arpl
xor
sub
test
dec
leave
insl
repnz
pop
hlt
pop
repz
leave
icebp
aad
jge
jbe
rorl
in
popa
bound
mov
gs
mov
cmp
shll
and
rorl
int
pop
sti
add
inc
push
push
dec
sub
add
push
daa
stos
and
mov
push
fucomp
nop
jp
or
pop
sbbb
imul
out
pushw
push
ficoms
push
jle
sarl
dec
data16
rcl
mov
xor
clc
sbbb
xchg
and
push
cwtl
clc
mov
fwait
popl
ds
or
mov
fildl
addl
sbb
cwtl
mov
aas
or
jmp
imul
loop
xor
aaa
mov
inc
popf
cs
jge
popf
mov
fbld
xchg
test
aaa
xor
ret
or
xchg
dec
test
sub
xor
popf
jns
mov
aaa
sub
adc
jbe
inc
call
out
stc
jmp
mov
adc
fwait
sqrtps
push
xchg
fs
cmp
loope
cmp
adc
cmp
mov
shll
or
ficoms
outsb
neg
cmpsb
sahf
fsubrp
je
xorl
mov
and
and
mov
jp
mov
xor
cmp
mov
jb
jae
lods
and
inc
scas
out
push
push
add
lret
cmp
fsubs
cltd
fildll
push
scas
lds
sub
ljmp
dec
mov
int3
dec
jno
ss
into
mov
xor
addr16
insb
push
push
movsl
inc
repnz
push
cli
xchg
mov
sub
out
fiaddl
cmpl
dec
test
mov
dec
xor
sub
cmp
dec
add
repz
test
jb
insl
das
push
cmc
sub
pop
rolb
test
pop
lods
push
bound
outsb
insl
dec
sub
pushf
outsb
mov
mov
pop
cmp
sbb
dec
call
sub
lock
out
inc
dec
pop
popl
ffree
repz
xor
mov
inc
je
adc
and
adc
push
sub
pop
ret
lods
adc
stc
mov
lret
xor
mov
fnsave
add
aam
test
xchg
orl
adc
nop
sbb
mov
dec
enter
test
sub
mov
and
pop
movsb
jp
xor
popa
jb
ret
lret
inc
pop
jns
or
mov
xchg
outsb
pop
fimuls
inc
or
int3
in
pop
outsb
adc
sub
imul
cwtl
mov
test
push
out
sbb
cmp
repz
inc
push
sbb
cltd
rcl
xor
lahf
mov
popf
in
cmp
test
inc
cmp
jnp
cmp
test
in
fisttpll
sahf
push
pushf
add
and
scas
sbb
fdiv
lock
cwtl
dec
scas
cs
lea
cld
cmp
ss
cmpsl
mov
xchg
mov
in
pushl
outsb
add
pop
dec
stc
inc
mov
cwtl
lahf
cmp
aaa
sub
fstpt
mov
aam
xchg
stos
cmp
pop
add
lea
fdivr
and
xor
rorl
cmp
mov
sahf
shlb
cmp
jmp
test
push
sub
andb
pop
popa
adcb
repnz
xchg
daa
jno
lock
add
cwtl
push
ds
mov
cmp
jo
fsubs
adc
dec
cmpsl
into
mov
ss
and
cmp
outsl
adc
lret
in
mov
pop
xlat
lock
aad
push
xor
push
sub
dec
jne
mov
lods
ret
push
loop
inc
xor
lahf
das
mov
cmpl
push
jl
mov
jmp
inc
mov
and
hlt
lahf
iret
nop
or
pop
scas
in
mov
popa
mov
hlt
sbb
xchg
rcrl
in
push
dec
inc
sub
cwtl
mov
fucompp
das
shll
pop
cmp
cmp
leave
popf
negl
jae
test
mov
cmpl
add
xchg
xchg
inc
fdivrl
push
inc
push
or
push
push
jg
ljmp
ficompl
cmpsl
cld
cmp
insl
ja
mov
sti
lock
orb
insl
or
cmp
call
jg
sbb
mov
sbb
shrb
sub
imul
hlt
lret
mov
test
push
add
cmc
xchg
sbb
clc
dec
mov
push
sub
gs
sbb
out
repz
sarl
aam
hlt
sub
mov
pushf
xor
push
lahf
xor
les
ljmp
add
jnp
lea
and
aad
push
inc
cmp
rorb
js
int
lret
push
push
js
xchg
rcrl
sahf
stc
sub
lret
int3
inc
dec
cmpsl
push
mov
pushf
mov
std
mov
xor
xor
test
mov
cmp
clc
js
add
push
sbb
dec
fdivl
ficoml
mov
cmp
jo
xchg
dec
inc
fwait
and
lock
push
les
and
mov
and
into
mov
in
add
fldenv
mov
loopne
mov
pop
or
or
adc
or
fwait
sbb
fadds
fistpl
add
xchg
inc
es
std
dec
cmp
stos
popf
andl
or
ss
aas
pop
in
push
cmp
dec
and
jae
fstpl
shrl
jmp
loope
add
popf
dec
add
rolb
mov
pusha
test
mov
inc
adc
cmc
je
and
cmpsl
insl
idivl
cmpb
and
lret
add
gs
xchg
cmp
adc
aas
sub
mov
sbb
and
push
push
hlt
dec
cltd
outsb
repz
shll
lods
ja
push
sbbb
push
mov
mov
xchg
mov
sbb
jmp
pop
loopne
cmp
repz
cmp
push
fsubr
and
cmp
fidivs
push
and
aaa
hlt
add
sub
push
pop
sbb
ss
popf
daa
mov
and
repnz
hlt
mov
jge
or
out
ret
insl
mov
loopne
sbb
jmp
out
mov
shr
sahf
sub
xor
test
leave
fsubl
inc
and
ds
jne
or
push
rcl
call
pop
push
dec
or
push
xchg
out
lods
cmp
fnstenv
lret
stos
adc
xor
push
xchg
fcmovnbe
jge
rcrb
rorl
xor
pusha
fsubrs
xchg
push
shl
les
mov
and
stos
movl
das
xor
sti
cmc
push
shrl
cmpsb
push
and
and
or
js
outsl
lahf
sbb
mov
pop
push
fildl
pop
push
ljmp
dec
sbb
cmp
or
cld
filds
lret
jns
leave
cmpsb
xlat
les
enter
jb
loopne
jle
fmulp
fstl
cltd
xchg
dec
loop
dec
daa
sbb
js
jge
lret
push
lock
jb
fwait
pushf
pop
cs
ret
mov
mov
pushf
dec
jnp
sub
lahf
and
aad
cmpsb
cmp
or
push
push
jo
lea
sub
pop
mov
mov
cmc
inc
andb
imul
outsb
bound
lcall
mov
mov
cmp
mov
mov
pop
dec
or
sbb
inc
movsl
rep
out
ss
dec
pop
xor
or
push
fcomps
xchg
enter
aad
subl
mov
negb
mov
test
fdivrl
dec
negl
addb
xchg
sbb
fldcw
aas
inc
xchg
repnz
xchg
xchg
cmpsl
or
jecxz
shl
add
out
loopne
inc
ret
jp
addr16
lods
xor
jecxz
fsubrl
add
test
addr16
jg
jbe
pusha
dec
in
cmp
fsubs
mov
jo
cmpsl
inc
xchg
mov
sub
add
aad
mov
ret
dec
loope
dec
adc
fldenv
push
pop
ss
cmp
sbb
rcll
out
mov
out
cs
pop
sub
xchg
fcomps
or
mov
aam
fdivrs
shll
imul
addr16
fsub
clc
das
je
cmpb
add
xor
push
jge
mov
xchg
lods
stos
inc
pop
movsl
fucomi
fbld
mov
fs
test
and
imul
lods
inc
mov
cwtl
mov
xchg
jge
lret
imul
ror
imul
mov
xor
adc
cmpb
pop
pop
adc
adc
jb
leave
sbb
int3
sbb
mov
cmp
outsb
and
pop
icebp
or
daa
jmp
test
hlt
pop
mov
sub
or
cltd
pop
jne
jb
xchg
ret
ret
daa
dec
repnz
andl
ds
dec
dec
mov
dec
or
pop
aaa
jne
arpl
enter
xor
cltd
arpl
stos
in
mov
xor
stos
mov
cmp
out
xlat
in
adc
and
stc
inc
cmc
roll
ficoms
push
cmpsb
loope
leave
clc
sbbl
inc
fldenv
xor
aaa
je
and
loopne
sarb
xlat
into
xorb
adc
sbb
fstps
int3
arpl
jae
sarb
lods
cmpsl
imul
inc
dec
mov
mov
imul
loope
and
xor
mov
xor
push
cmpsl
nop
mov
fwait
and
xchg
xor
sbb
xchg
call
sbb
mov
fcomps
mov
mov
shrb
loopne
std
fistl
jp
mov
lds
dec
sbb
pop
or
or
sahf
mov
cmp
push
add
cs
testl
scas
mov
sbb
fstpt
cmp
jl
ljmp
sti
push
jmp
mov
jecxz
clc
out
shlb
ffree
fsubs
pop
cmp
xchg
test
xor
or
pop
aaa
and
pop
int
xchg
decl
sbb
lcall
jnp
add
jb
xchg
sahf
mov
add
mov
ret
testb
into
jecxz
jl
push
cli
mov
int3
sahf
mov
lods
sbb
lea
jo
adc
movsb
sbb
popa
xor
mov
fs
xor
arpl
mov
and
in
lret
mov
bound
mov
sbb
sub
mov
mov
testb
ljmp
insb
sbb
imul
ja
push
or
nop
fildl
pop
loop
ja
push
pop
bound
out
mov
inc
sub
jmp
xchg
stos
jb
js
fdivrp
and
or
jg
ret
and
roll
xchg
iret
popf
dec
pop
push
mov
mov
add
push
cld
imul
mov
dec
inc
ret
hlt
addr16
std
or
arpl
ds
inc
lret
loope
xchg
inc
pop
sub
cmp
movsl
mov
leave
jmp
or
out
and
jg
sbb
sub
mov
mov
mov
xchg
pop
dec
push
push
rcl
xor
sub
dec
pusha
and
push
aaa
in
outsb
sub
aad
push
pusha
xor
fcomps
push
dec
push
jae
adc
mov
das
jmp
repz
xor
ret
xchg
into
orb
addr16
aad
js
jg
push
dec
adcb
cmp
pop
jo
mov
or
test
cltd
sbb
idivl
fimull
sbb
stos
mov
test
mov
jbe
push
push
cltd
push
mov
cmp
movsb
loopne
mov
xchg
fisubrl
and
loopne
adc
in
sub
and
subb
cmpsl
ja
popf
xchg
outsl
stos
popf
pusha
fidivl
xchg
cmpsl
addl
mov
lcall
aaa
int3
cld
daa
shll
rcl
es
mov
mov
mov
and
mov
stos
and
xchg
pop
fisubrs
dec
xor
pop
test
push
data16
insl
xchg
fisubl
push
dec
cmc
hlt
xor
fisubrl
ret
cmp
mov
cmp
dec
insb
in
lahf
test
pop
fsubp
stos
push
ror
repz
jle
lods
mov
pop
sub
dec
push
out
inc
pop
or
jo
stos
adc
sahf
dec
xor
mov
mov
call
inc
jecxz
iret
jp
scas
mov
mov
mov
and
pop
sbb
into
jbe
mov
or
cmp
push
fnsave
inc
jae
mov
xor
dec
int
adc
mov
cmc
push
aam
or
icebp
dec
sbb
xchg
addr16
mov
xchg
out
leave
stc
xlat
and
inc
inc
xor
inc
xor
in
fcmovu
fildll
dec
ret
clc
mov
cmp
repnz
mov
xor
xchg
sub
sub
jne
dec
loopne
pop
lret
gs
inc
cmp
push
arpl
adc
inc
imul
sub
xchg
lds
inc
lock
bnd
arpl
stos
sub
fstps
insb
sub
fstps
cmpsb
dec
ficoml
lahf
pop
cmpsb
sub
jnp
ljmp
mov
pop
cmp
popf
das
pop
sub
pop
mov
push
jbe
sbb
xchg
mov
ljmp
mov
aas
pop
stos
pop
les
arpl
sbb
and
dec
push
mov
stos
add
and
pop
and
int3
xor
out
mov
rcrb
lcall
jp
mov
mov
fbstp
jne
and
in
or
push
cli
inc
xor
leave
aam
push
mov
sti
inc
cmp
faddl
mov
and
xor
pusha
jecxz
sarb
movsl
xor
stos
cmpl
xchg
imul
out
test
jno
mov
pop
mov
pop
xor
inc
cmp
into
xchg
imul
test
dec
jl
mov
xor
hlt
xchg
xchg
adc
js
mov
outsl
dec
xorl
mov
loopne
dec
outsl
leave
push
adc
jmp
imull
inc
into
add
fldz
daa
jo
mov
mov
mov
cmpsb
in
cmpb
xchg
imul
and
inc
stc
jp
xlat
push
daa
mov
or
push
mov
mov
iret
jne
push
lods
negl
mov
jb
in
mov
jle
push
lahf
xchg
xor
test
test
rorl
mov
mov
push
lret
es
ja
aam
mov
cmc
outsb
les
dec
inc
mov
rol
scas
pop
push
dec
pop
cmp
popf
mov
loopne
mov
jecxz
lea
jl
out
cmpb
jbe
mov
test
and
sub
xchg
scas
cmp
jbe
sbb
in
jo
or
data16
pusha
mov
sti
es
test
adc
je
nop
push
push
push
push
or
negl
mov
clc
cmpsb
mov
jns
fwait
or
insb
addr16
mov
mov
pop
pusha
mulb
jle
rol
fs
cmp
inc
stos
cmp
and
fsubs
xor
inc
repz
mov
adc
mov
sub
adcb
push
inc
mov
loopne
stos
add
fsubp
icebp
nop
movsl
mov
mov
mov
es
scas
jb
pushf
movsb
mov
and
movsb
mov
cs
aam
test
push
aad
jns
jecxz
cwtl
das
ljmp
icebp
loope
adc
inc
sbb
and
and
loop
or
decl
movsl
dec
jns
js
leave
sub
adc
or
cwtl
sbb
popf
xor
mov
sbb
popf
in
pop
repz
sbb
fdiv
xor
sahf
sub
pop
fmuls
lret
out
mov
xchg
jl
les
fmuls
imul
js
outsb
and
xchg
icebp
stc
lods
mov
sbb
push
in
push
mul
fwait
or
add
jle
ret
dec
add
ret
call
or
xchg
lret
mov
sub
adc
mov
sahf
hlt
rcrb
pop
sub
daa
sub
jle
call
in
call
scas
bound
xchg
cwtl
pop
mov
adc
mov
jg
mov
add
mov
push
sbb
stc
mulb
ljmp
js
imulb
sbb
jno
pop
dec
dec
adc
movsl
mov
dec
les
xor
mov
jg
jns
mov
push
jbe
xchg
adc
mov
push
mov
cli
out
and
enter
cltd
dec
lahf
jecxz
inc
pop
xchg
sbb
xlat
inc
and
aad
add
je
aas
call
fmuls
sub
lods
aad
cmp
lea
mov
aam
ja
mov
les
inc
std
and
rolb
ja
sbb
stc
js
push
aad
mov
mov
push
push
ret
push
call
mov
mov
pushf
mov
pop
lahf
push
ss
and
das
inc
ds
cli
mov
or
ja
data16
mov
sbb
orl
inc
test
repz
push
rcl
mov
stc
sahf
daa
das
scas
loop
and
cmp
cmpsl
sbb
enter
sbb
inc
sub
aaa
dec
cmp
sbb
and
adc
push
add
adc
outsl
test
xor
push
jne
fiaddl
dec
out
lods
xchg
dec
sub
js
or
mov
cli
add
dec
or
sti
lock
aas
jl
fmuls
inc
lods
cwtl
adc
test
daa
jae
sarb
jecxz
push
test
xchg
jmp
pop
add
push
fs
lock
imul
and
adc
ret
stos
inc
xchg
xor
ss
xor
mov
jns
sbb
stos
cmpb
or
jecxz
notb
icebp
rcll
sti
sub
addr16
out
sbb
iret
lret
ljmp
addr16
mov
fildll
loopne
pushf
push
popa
dec
add
mov
jg
xchg
in
mov
mov
pop
icebp
push
repnz
jo
loop
popf
jge
xchg
jg
mov
popf
out
rorb
push
sub
push
xchg
lds
out
hlt
xor
int
adc
xchg
out
insl
and
sar
sub
lahf
outsb
or
xchg
fildl
out
add
out
pop
out
jnp
jo
or
jg
or
jne
xchg
add
scas
movl
in
test
push
jne
loop
in
cmp
mov
mov
insl
andl
rcl
bound
jbe
outsb
cmpsl
lds
xchg
cmpsb
pop
mull
les
xchg
out
cmp
popa
je
iret
fisubrl
pop
fidivrs
insl
mov
mov
outsb
fxtract
int3
bound
loop
js
neg
clc
sti
xor
push
mov
mov
or
xchg
scas
xchg
adc
xchg
repz
fcompl
mov
xchg
jnp
or
sub
into
scas
andl
pop
jle
in
out
adc
insl
icebp
negb
inc
lods
jb
addb
outsb
rorb
data16
xchg
cmp
mov
ss
loopne
mov
xor
mov
sti
mov
ds
out
addr16
jp
mov
dec
jp
mov
icebp
mov
popf
nop
add
in
push
inc
mov
cwtl
mov
and
int
aas
inc
fbld
sbb
adc
add
cwtl
loopne
and
push
xchg
call
adc
sub
push
in
mov
cmpsl
cmp
js,pt
mov
push
jmp
js
mov
adc
fbstp
faddl
je
int3
in
in
addb
push
mov
inc
mov
push
ret
jl
fisubl
cmp
push
jl
and
inc
repz
cmp
in
pushf
mov
fs
ror
test
rcl
pop
sbb
not
push
jg
mov
mov
pushf
cwtl
test
mov
mov
mov
cmc
mov
mov
ja
call
mov
or
fistpl
inc
in
test
sahf
ficomps
cmc
std
call
rol
lds
add
lret
jbe
push
push
cs
sbb
jo
push
out
mov
xlat
adc
pop
dec
sarl
dec
in
cli
out
mov
inc
bound
inc
dec
stos
les
cmp
inc
adc
jge
test
cld
cwtl
in
insb
sub
andb
imul
xchg
ljmp
push
test
xor
mov
in
movsb
pop
xchg
xor
sbb
js
fsubs
imul
cmpb
int
outsb
lock
add
jnp
popa
cmp
and
pop
dec
xor
leave
pop
sti
dec
cmc
out
pop
call
xchg
ja
out
hlt
lods
mov
leave
lret
mov
xchg
and
and
sbb
shrl
stc
sub
lret
aam
jge
ret
out
fwait
aas
decl
fldcw
fdivl
and
roll
pop
ss
cli
test
push
lods
push
into
jg
sbb
xor
cwtl
in
out
mov
testl
repz
call
test
cld
adc
lahf
hlt
inc
pushf
or
xor
push
ret
xor
rol
call
push
rolb
pop
fimuls
cltd
cwtl
lock
fsts
mov
into
push
mov
test
lahf
fsubrl
sub
stc
push
sti
cmp
jmp
xchg
std
and
or
popa
cmp
jb
mov
adc
daa
xor
stos
or
and
push
adc
rclb
push
sub
inc
push
data16
mov
mov
cltd
das
insl
inc
movsb
cmp
xchg
imul
cmp
test
mov
aad
sbb
mov
lret
imul
sbb
dec
aas
into
xor
add
sahf
mov
imul
sarl
in
jnp
mov
mov
lahf
push
pop
mov
jge
lds
mov
fstps
pop
sbb
loopne
bound
stos
dec
pusha
rclb
mov
mov
dec
out
arpl
jns
ja
pushf
dec
push
adcb
inc
jmp
jg
jg
xchg
sub
pop
xor
dec
lods
mov
or
mov
jo
fwait
dec
jp
test
adc
outsl
sahf
bound
and
dec
mov
in
or
sub
sub
jno
cmc
mov
add
rorb
sub
imul
mov
ds
ljmp
adc
and
sbb
xor
pop
jno
int3
loop
insl
inc
sbb
mov
and
cmp
adc
or
mov
lret
cmpl
std
adc
sub
jbe
inc
push
jno
clc
xlat
cwtl
test
sub
hlt
jp
xor
jo
sbb
in
xor
das
mov
fucompp
mov
add
jle
xchg
outsl
dec
fidivrs
mov
inc
add
popf
out
imull
jecxz
mov
jl
fdivr
mov
inc
mov
repnz
add
movl
push
shlb
loope
push
xchg
adc
lsl
aaa
mov
mov
in
popf
push
jns
dec
mov
xchg
mov
imull
xor
adc
lock
pcmpeqw
repz
or
push
add
jge
mov
inc
mov
mov
mov
fsts
sbb
sti
test
in
mov
sti
and
xor
mov
cmp
cwtl
jle
or
push
pusha
int3
cmpsl
mov
fsubp
in
imul
push
js
pop
je
and
lods
jo
mov
mov
mov
in
iret
and
mov
les
sbb
adc
leave
jbe
jecxz
mov
ret
mov
and
stos
fstl
and
inc
mov
mov
sbb
ja
ja
ljmp
xorb
jl
or
shlb
inc
mov
subl
push
loope
in
bound
cmp
in
cmpsl
je
mov
push
jg
jo
fidivrl
xchg
gs
xchg
ret
cmp
fdecstp
lcall
pop
lret
cmp
mov
shlb
fs
sahf
add
pop
popa
xchg
push
clc
lahf
add
loopne
cmp
rorl
jb
sub
hlt
aas
jmp
pusha
inc
dec
xchg
xchg
int
movsb
inc
push
repnz
push
cltd
sbb
sbb
mov
lods
pop
rcrb
mov
sar
push
loope
push
adc
fistpl
jg
mov
dec
incb
int
push
insl
mov
out
icebp
cmp
add
js
cmp
cmp
insb
ljmp
add
jno
rcr
jecxz
mov
dec
sbb
push
mov
adc
pop
mov
or
mov
ret
adc
jbe
xchg
loopne
xchg
sahf
push
mov
pop
pushf
sbb
jmp
lods
cmp
in
jecxz
mov
lods
pop
notb
shl
aad
add
add
fstp
ss
lcall
bound
mov
shrl
jno
dec
pop
cmp
in
push
push
rolb
jmp
out
call
push
pop
mov
adc
in
xchg
xchg
aam
or
and
rol
inc
in
insb
jns
shr
xor
loop
stc
cmp
into
push
jl
xor
adc
fidivrl
loope
lds
test
shlb
fdivrl
mov
scas
sub
shlb
pusha
bound
jle
and
cmp
lods
je
subb
add
mov
icebp
jnp
fdivr
lods
ss
mov
arpl
xchg
loopne
cmpb
jmp
mov
xorb
sbb
jecxz
addr16
loop
jecxz
std
repz
jmp
mov
add
mov
lcall
lock
shll
and
adc
shll
lret
cmpsl
mov
lods
dec
shlw
jo
jge
mov
subb
mov
add
cwtl
pop
pop
cmp
and
mov
pop
pop
je
add
roll
mov
fistpl
or
xchg
sbb
iret
sbb
fdivrs
nop
pop
sub
test
or
mov
jno
and
rorl
test
mov
and
xlat
mov
pop
imul
cmc
jae
ja
pop
cli
xor
fld
pop
dec
mov
sbb
adc
inc
mov
gs
test
rcrl
mov
addr16
dec
sub
mov
les
insl
divl
cmpsl
ss
dec
outsl
rclb
add
hlt
add
ret
les
pop
jge
add
sbbb
sbb
mov
leave
adc
cmpl
jg
loop
stc
sub
push
cmp
or
hlt
lea
jbe
enter
xchg
testl
sbb
xchg
pop
push
into
jo
pop
and
dec
jnp
inc
or
cld
jae
inc
xchg
imulb
fidivl
or
roll
mov
scas
arpl
arpl
pushf
add
pop
ds
ja
add
ret
cmpsl
lcall
and
in
test
movsb
xor
jns
and
cmp
lods
cli
outsb
movsb
xchg
mov
imul
xchg
scas
mov
mov
mov
cmp
lcall
mov
loopne
jmp
sub
add
or
mov
and
xchg
inc
sbb
sahf
out
xor
in
subb
xchg
test
dec
and
outsl
xor
jecxz
xor
hlt
inc
mov
rorl
mov
mov
push
or
jns
data16
mov
mov
add
pop
in
xchg
pop
cmp
leave
push
cmp
mov
lret
jmp
imul
jbe
xorl
and
lea
and
fimuls
add
cmp
daa
pop
add
xchg
ljmp
and
loopne
mov
sbb
xchg
and
xchg
push
push
popf
dec
imul
je
push
mov
std
rcll
dec
fsubrs
outsb
add
or
or
and
cs
bound
sbb
stos
pop
sbb
aaa
int
pop
mov
out
test
arpl
je
es
sbb
lret
cltd
add
push
or
xchg
dec
xchg
fdivrl
pop
xchg
hlt
insb
jbe
or
jmp
mov
jno
inc
and
pop
push
pop
aad
cmc
mov
or
sbb
popa
dec
ljmp
add
jnp
add
cwtl
repnz
mov
notb
mov
icebp
and
std
lret
jne
test
add
gs
xlat
sub
arpl
aas
push
push
in
aam
stc
sbb
add
adc
js
cmp
test
inc
shlb
stc
pop
cltd
pop
popf
jge
xchg
mov
push
sub
cmc
dec
inc
sbb
insb
imul
and
dec
sbb
fists
sbb
cmp
jns
rcrl
mov
and
push
fldcw
cltd
lea
mov
imulb
pop
lret
inc
xor
push
fisttpl
pop
and
iret
mov
jg
imul
hlt
je
sub
and
mov
sti
fs
mov
jmp
clc
push
out
cmp
mov
cmc
fldenv
mov
inc
mov
push
insb
test
mov
xchg
add
mov
cmp
mov
loop
mov
sti
and
pop
pushf
mov
call
repnz
jo
lcall
cmp
subl
dec
jg
or
mov
pop
rol
lods
cmp
xlat
lret
insl
ss
inc
pop
scas
loop
sbb
cmp
xchg
xchg
adc
mov
je
push
pop
fnstsw
testl
fstp
jl
sub
fidivl
clc
cmp
mov
add
insb
es
jp
or
lahf
jnp
jp
iret
je
std
ss
out
xor
or
fcomi
mov
gs
dec
adc
mov
xor
cmp
xor
cmc
mov
xor
pop
lds
jns
sti
jmp
jg
push
inc
lea
jbe
jl
inc
jns
pusha
cld
dec
in
or
in
mov
addr16
iret
lea
stos
mov
adcl
nop
dec
loope
aam
mov
sbbb
sub
sub
inc
scas
test
hlt
rcl
sahf
jno
icebp
aas
mov
jno
aam
mov
pushf
xchg
std
std
in
lods
mov
and
imul
mov
adc
push
sub
push
cmp
mov
lcall
or
jle
inc
mov
stos
scas
add
es
mov
fnstenv
cmp
fbstp
cmp
aad
fwait
ret
mov
gs
icebp
dec
enter
movsl
and
or
xor
scas
xchg
mov
shlb
cwtl
in
adc
xchg
orl
enter
aaa
xor
sub
aas
iret
pop
and
fdivrl
lods
and
dec
add
mov
jo
cmp
mov
xor
cmp
inc
pop
mov
mov
lahf
push
es
fwait
inc
xlat
daa
pop
gs
mov
cmp
sub
imulb
and
mov
cmp
sub
js
into
in
mov
dec
sbb
ret
cmp
jbe
rcrb
jl
shr
rcrb
mov
push
jecxz
repz
xor
sub
add
dec
scas
fstl
dec
push
aas
xor
mov
cmc
mov
or
sub
ljmp
xchg
xor
inc
stos
cli
pop
testb
or
loopne
and
insl
inc
mov
inc
jae
or
xchg
xor
push
call
scas
xor
jecxz
data16
cwtl
in
in
dec
mov
adc
pusha
test
xor
inc
filds
pop
and
sbb
popf
jl
subl
aas
ja
jae
js
jb
mov
jno
sarl
jns
outsb
or
mov
dec
or
sbb
mov
add
xchg
sti
cmp
mov
pop
mov
pop
mov
pop
sub
dec
mov
cmpsl
fisubrl
lret
jns
call
and
loope
mov
sbb
mov
fildll
mov
jne
xchg
jg
ret
push
xlat
nop
daa
sbb
jns
icebp
and
cmp
xor
sbb
out
cmp
into
rcr
mov
sub
lock
cmpsb
fwait
push
jbe
popa
mov
mov
cwtl
mov
xchg
scas
sub
inc
sbb
push
xor
aas
out
push
mov
ds
sahf
scas
or
popf
aad
sbb
xchg
mov
divb
aaa
repz
sbb
add
rorl
loop
dec
lea
addb
mov
fistpl
lods
stos
fildl
jae
in
adc
stos
mov
push
push
dec
inc
or
int3
scas
or
fistpll
push
mov
add
int3
sub
pop
jo
sbb
cmp
cmpsb
mov
call
imul
sub
icebp
js
fimuls
andl
test
in
pop
outsb
jle
lahf
xchg
cmp
adc
sub
push
shr
shl
ret
iret
sbb
adc
mov
jl
addb
xchg
fisubrl
dec
dec
mov
jg
rclb
retw
and
mov
data16
scas
dec
sbb
fld1
mov
ja
ljmp
sub
lcall
lods
sub
testl
adc
mov
sbb
xor
pop
lret
jge
or
mov
jnp
insb
xor
and
sub
nop
lret
push
outsl
sbb
inc
cmp
fimull
adcb
stc
push
les
sbb
push
in
sub
or
stc
pop
push
imul
pop
cmp
rolb
std
xor
pop
adcl
aas
mov
jbe
inc
mov
std
inc
insl
pop
fs
int3
mov
scas
lea
divb
mov
push
push
mov
push
inc
dec
mov
xlat
je
popa
dec
push
imul
pop
add
lock
loope
cltd
pop
out
mov
push
jo
mov
cmp
sub
xchg
sbb
repz
cmp
ja
xchg
sub
gs
cmp
mov
mov
cli
inc
leave
fists
dec
insb
mov
aaa
shll
push
push
fldt
frstor
ljmp
mov
jne
mov
cs
in
fldcw
sarl
addr16
sbb
pop
fldenv
das
push
add
adc
jge
xchg
in
punpckhbw
aam
pop
hlt
outsb
nop
mov
and
and
popf
jmp
fildl
mov
sbb
jecxz
sub
iret
or
push
ja
jo
mov
clc
mov
mov
push
jb
jae
adc
cmp
pop
cmp
fcomi
mov
loopne
fsubs
and
into
shll
pop
loope
repnz
adc
xchg
mov
inc
push
pop
dec
call
inc
or
dec
push
test
sub
adc
adc
cmpb
cmpsl
sbb
rolb
je
mov
lock
push
stos
test
je
push
mov
sahf
mov
and
mov
mov
xchg
pop
out
stc
pop
or
rorb
pop
lock
push
iret
addb
or
push
mov
inc
es
or
jmp
sbb
test
scas
repnz
das
mov
nop
dec
js
cmpb
and
sbbl
pop
movsl
lods
icebp
stc
mov
sahf
loopne
cmp
mov
lds
pop
xchg
mov
stos
fcomps
push
ret
subb
pop
enter
xchg
int3
or
push
scas
loopne
sbb
fmuls
or
in
pusha
xchg
dec
add
repz
push
mov
and
and
sbb
loopne
sbb
pop
and
or
test
inc
or
sarb
repnz
cmp
xor
dec
xchg
add
aad
inc
jl
adc
or
add
movsb
repz
addr16
and
loopne
iret
scas
into
lcall
xchg
dec
inc
jbe
in
lret
sbb
movsb
loop
iret
inc
sbb
pop
pop
fsubs
jmp
sarb
pop
mov
in
pop
in
xchg
dec
fdivp
lock
repnz
adc
sbb
add
mov
mov
adc
icebp
sub
fimuls
scas
mov
fsubp
xchg
rorb
mov
push
cld
aad
mov
insl
enter
push
pusha
icebp
pop
sbb
or
or
addr16
and
or
sub
push
aas
dec
mov
fwait
inc
cmp
aam
cmp
pop
jae
ds
rclb
cmc
jge
ficoms
push
xor
fists
iret
mov
ficoml
gs
mov
jae
aaa
lds
push
cmc
inc
sub
xchg
jmp
xchg
mov
and
nop
ret
pop
enter
sti
sub
aad
lds
ja
dec
mov
mov
pushf
daa
repz
xchg
mov
hlt
push
stos
leave
sub
xor
pop
or
fwait
mov
sbb
shl
xchg
inc
andl
in
dec
adc
les
lea
xchg
sub
sbb
push
jge
imul
outsb
movsl
inc
loopne
xlat
add
jo
push
or
out
jb
insb
dec
push
xor
and
mov
inc
mov
mov
sahf
sbb
subl
lret
mov
sti
cmpsl
pop
call
lret
mov
inc
jge
xorb
daa
inc
cmc
pop
sbb
cmpsb
pop
or
hlt
fmuls
shll
pop
push
ljmp
cmpsl
mov
loopne
xor
in
xchg
stc
push
xor
cmp
adc
xchg
xor
movsb
or
jb
mov
xchg
inc
cmc
push
push
daa
sahf
stos
and
or
sbb
cli
xchg
xchg
es
cmc
pushf
shl
pushf
xlat
pop
das
imul
sub
dec
mov
add
mov
inc
pushf
je
pop
js
add
adc
fistpll
add
ja
mov
aas
jb
jbe
aad
xor
mov
stos
dec
dec
adc
mov
test
add
pop
rorb
mov
fwait
pusha
xor
sbb
sti
int3
nop
mov
repz
sbb
clc
daa
xor
dec
adc
push
mulb
test
pop
out
push
pushw
insl
sar
mov
sbb
and
mov
adc
divb
clc
aam
mov
jne
sti
call
pop
mov
inc
aas
loopne,pn
insl
jae
adc
clc
mov
sbb
pop
cmp
repnz
arpl
pop
das
data16
inc
push
mov
lcall
xor
popf
icebp
xorb
sbb
adc
insb
mov
xchg
int3
inc
pusha
and
mov
mov
test
arpl
int3
mov
mov
pushfw
inc
out
adc
pop
or
popf
sahf
movsb
fidivrl
in
lock
movsb
mov
cmc
lret
push
mov
add
pop
jl
sahf
fsts
out
adcl
lea
ss
push
call
fbstp
xchg
dec
push
loopne
cmpsl
sbb
dec
mov
mov
cmp
sub
negl
mov
cmp
scas
inc
xor
and
in
fcoml
mov
imulb
dec
xor
dec
adc
arpl
add
and
or
push
sub
mov
lcall
mov
bound
mov
loop
inc
out
add
bound
je
mov
and
jo
aaa
or
cwtl
jbe
push
in
pusha
pop
push
sbb
mov
cmpsb
in
test
mov
test
or
movsb
add
insl
out
push
mov
sbb
xor
adc
and
adc
or
push
and
test
add
push
mov
cmp
and
lret
sbb
add
mov
dec
xor
fstps
push
cltd
jecxz
in
andl
data16
push
jge
xor
cmp
mov
and
pushf
push
push
cltd
outsl
icebp
inc
lea
ror
movsl
inc
jae
mov
call
imul
jbe
xor
or
cmp
xlat
mov
dec
sbb
mov
enter
fsts
jg
out
in
adc
mov
sub
bound
dec
pop
stc
jmp
hlt
fsubrs
xchg
cmpsl
mov
mov
jg
in
cld
sub
inc
adc
add
insb
faddp
shlb
out
in
imulb
cmpsl
adc
filds
sub
test
in
sub
imul
sahf
repz
mov
add
daa
jbe
lret
mov
inc
pop
xchg
mov
repz
std
mov
mov
std
or
push
das
aas
out
out
inc
mov
andb
mov
lds
sbb
fadd
fldl
std
and
roll
push
jl
mov
sarl
out
sbb
push
inc
xchg
jmp
mov
push
aam
cli
push
int
scas
xor
movsl
bnd
sarl
sti
mul
and
sbb
push
xchg
mov
jmp
xor
insb
jp
jno
aad
ljmp
insl
jp
imul
mov
std
push
loopne
mov
mov
xor
addr16
out
sub
push
inc
cmp
push
mov
mov
and
jns
jmp
and
jmp
xor
push
adc
iret
xorb
stos
insl
hlt
inc
fiadds
xchg
loop
lahf
lret
in
fildl
rol
add
mov
insb
inc
iret
stos
jns
movsb
push
push
ljmp
or
push
scas
sti
imul
mov
aaa
mov
mov
jl
mov
addb
push
int
adcb
data16
movsl
das
inc
aad
test
or
repnz
ds
or
adc
stos
sub
sbb
arpl
sbbl
inc
jp
sbb
lea
daa
add
mov
in
jg
je
movsb
ja
ss
inc
imul
mov
push
ret
fnstenv
sub
shrl
int3
sbbb
cmp
lret
lock
pop
testb
mov
gs
jecxz
or
add
adc
mov
lahf
es
repz
or
push
pop
out
cli
xchg
jp,pn
sbb
inc
aam
pop
sub
es
pushf
mov
stos
int3
push
xor
out
int3
ljmp
xor
sbb
and
jl
add
stc
movsl
test
aad
fcoms
out
nop
sbb
imull
repz
xchg
sbb
dec
outsb
cmc
add
cmp
sub
and
stc
xor
arpl
ss
xchg
mov
adcb
sub
mov
cltd
mov
in
xchg
sbb
add
fbld
int
jne
add
pop
pop
call
andb
in
fistps
es
cmp
mov
dec
jecxz
in
and
dec
or
mov
pop
xchg
sahf
mov
mov
insb
inc
in
pop
xchg
sub
dec
inc
push
test
ja
add
cld
mov
mov
movsb
add
filds
call
pop
cmp
sbb
cltd
pusha
insl
or
xor
xchg
call
repz
fidivl
mov
pop
dec
push
aam
push
jae
bound
std
scas
xor
cmp
mov
mov
fldlg2
sahf
or
and
test
shl
push
cmp
sub
cmp
scas
inc
xor
lods
or
loopne
das
sbb
out
cwtl
pop
adc
int3
or
cmp
mov
lahf
inc
dec
or
js
fmuls
push
mov
or
and
or
dec
les
dec
inc
lret
sbb
push
cld
adc
test
sub
pop
imul
or
ja
ss
ret
mov
data16
dec
lret
movsl
cmpsl
mov
push
cltd
or
shlb
mov
add
jae
scas
jb
inc
push
xchg
add
mov
jnp
adc
xor
ret
sbb
jecxz
es
pop
je
xor
fisubs
fisttpl
in
mov
cmp
sbb
push
or
push
cmp
sbb
cltd
adcl
imul
loop
scas
mov
xor
insl
and
icebp
add
ja
hlt
lret
int3
loope
cmp
js
ja
aad
insl
leave
movsb
xchg
push
or
nop
dec
rorl
or
call
jle
ret
push
pop
movsb
mov
hlt
jae
xchg
mov
inc
popa
sub
movsb
jge
scas
ljmp
loopne
xor
icebp
int
lret
icebp
pop
dec
loope
sbb
popf
push
mov
add
ss
cwtl
rcl
pop
cmp
add
lret
sbb
mov
adc
jns
mov
mov
pop
test
dec
aad
nop
mov
jnp
inc
push
cmp
stos
mov
in
rcll
divl
xchg
xor
fldcw
mov
jle
mov
ljmp
push
jne
jl
lcall
lock
std
sahf
xchg
and
mov
stos
jnp
mov
data16
enter
push
mov
loope
lods
and
call
xchg
adc
aam
xlat
setge
add
shll
xchg
push
add
mov
scas
sbb
adc
xchg
push
and
push
sub
xchg
mov
ffreep
mov
jmp
lea
add
push
jl
sub
sbb
mov
gs
in
lcall
xchg
fldcw
clc
mov
jno
or
dec
out
out
xor
lret
xlat
mov
test
test
mov
ficoml
pop
push
mov
mov
sarb
pand
inc
cs
ds
ljmp
int
mull
sbb
rorl
addb
jle
xor
adc
repnz
stos
and
outsl
push
test
dec
lods
shll
push
push
pop
sbb
or
jle
lret
jo
dec
gs
lret
pushf
cmp
popf
jecxz
jae
adc
shll
mov
push
xchg
cmc
clc
out
insl
pop
fsubp
cld
pushf
mov
xchg
or
aad
pop
inc
jge
sub
xchg
mov
mov
loop
jg
rcr
sahf
jb
add
lret
dec
mov
fimull
dec
xchg
mov
mov
testb
jb
repnz
hlt
add
in
pop
fldenv
add
cwtl
and
or
xchg
je
popa
aaa
mov
jbe
and
xchg
xchg
loop
fistl
add
jno
adc
add
or
or
pop
int3
adc
xorb
pop
sub
rclb
inc
mov
mov
aad
pop
fidivrs
insl
mov
or
lods
inc
push
push
sub
jge
sub
lock
or
mov
or
inc
sbbb
mov
cltd
pop
sbb
insb
mov
lods
mov
cmp
into
jp
push
add
push
gs
jno
in
stc
js
mov
lcall
out
out
add
mov
in
or
push
xchg
fiaddl
shrl
push
xor
fisttps
xor
cmp
cltd
mov
xchg
sbb
stos
dec
cwtl
xchg
jg
or
sub
pop
or
movsl
push
mov
cmp
jg
test
out
repz
xor
jnp
jno
ljmp
negb
push
fistl
repz
mov
pop
insb
cmp
lock
mov
imul
out
jne
xchg
jmp
je
mov
cmp
mov
test
imul
aad
daa
or
or
sbb
arpl
hlt
lock
fwait
sub
add
sahf
and
or
lret
mov
popf
inc
jge
sub
add
fs
das
test
lahf
add
outsb
adc
stos
inc
jle
in
inc
cltd
push
cwtl
fistl
pop
mov
bound
xchg
mov
int
mov
push
or
cmpl
pushf
add
test
mov
and
les
pop
or
dec
add
test
movsb
xlat
fcoms
cmpsl
and
push
std
ja
lret
aas
push
mov
ds
shrl
push
cmp
cwtl
scas
mov
jp
pop
inc
or
jb
lea
cwtl
les
testb
ss
int3
or
inc
add
iret
fildll
jae
popa
int
aas
or
mov
mov
leave
call
test
cltd
xor
adc
movsl
jb
push
push
pop
jg
int3
mov
jo
adc
sbb
ret
cld
xchg
push
rcll
sbb
adc
ret
cltd
arpl
repnz
jecxz
in
xchg
mov
dec
mov
loope
sbb
add
test
cmp
mov
push
hlt
hlt
mov
es
bnd
addr16
and
sbb
inc
mov
push
scas
lock
in
push
mov
movsl
sub
add
inc
pop
nop
and
inc
inc
leave
popf
aad
and
cmp
out
mov
loopne
mov
sbb
add
lds
pop
and
fwait
cld
test
lret
popa
in
cmp
inc
pop
ret
lcall
adc
stc
pop
jns
push
fcoml
push
stos
inc
mov
or
pushfw
pop
inc
jnp
pop
cmc
and
es
sahf
inc
cwtl
addb
push
mov
and
sarb
mov
js
in
xchg
dec
das
das
fs
int3
in
ret
js
mov
push
jne
ret
push
sbb
push
lahf
sbb
divb
cmp
je
mov
push
aas
push
push
push
pusha
jg
insl
sar
pop
insl
sbb
test
mov
sub
xor
aaa
xor
insl
popf
push
push
add
or
stos
movsl
fidivs
les
fisubl
jb
cltd
mov
or
mov
jmp
pop
and
enter
mov
cmp
loope
fiadds
add
mov
movb
and
dec
sti
add
jae
adc
jne
les
dec
je
pop
mov
cmpsl
jbe
jp
xchg
jne
sbb
fsubr
xchg
mov
xchg
sbb
pop
adc
jp
mov
stos
jbe
add
daa
sub
sti
in
xor
mov
or
push
and
stos
je
pop
loopne
xor
lods
cld
test
inc
dec
bound
mov
scas
lods
or
arpl
cltd
jp
pop
dec
xchg
push
xchg
cmp
movsl
and
pop
movb
dec
cmc
imul
inc
movsb
cmp
cmc
and
xchg
mov
mov
push
lret
or
pop
jle
incl
insb
mov
xchg
popa
sub
add
inc
inc
sbb
push
inc
clc
xor
daa
cmc
sbb
loop
daa
cli
cmp
jg
lret
push
sub
inc
cmpsl
mov
mov
clc
sub
mov
lea
mov
xlat
dec
push
cs
inc
inc
fbld
inc
or
test
fwait
push
imul
push
cmpsb
sarb
xchg
xor
rcr
pop
and
adc
arpl
inc
lock
orl
xor
or
rcrb
adc
ret
and
pop
sub
hlt
repnz
dec
xchg
mov
sub
xlat
pop
sarb
fisttpl
insb
jb
loope
xchg
inc
pop
mov
stc
inc
mov
xchg
mov
dec
je
cmpsb
push
std
leave
mov
jnp
es
and
pusha
push
push
ret
scas
add
add
test
dec
shll
scas
push
cmp
jns
insl
mov
jno
ja
and
xor
adc
lods
mov
pop
and
sub
pop
push
sbb
or
out
std
sub
aad
mov
das
lods
cs
dec
out
in
pop
mov
daa
and
cmp
rcrl
adc
xchg
add
rcll
push
divl
js
adc
rorl
sbb
mov
pusha
xorl
lea
pop
xchg
mov
cmpsb
add
pop
mov
arpl
fs
hlt
mov
sbbb
lahf
leave
lret
inc
icebp
frstor
mov
mov
loop
and
shll
cwtl
mov
fildll
lds
jns
sbb
outsb
icebp
add
icebp
mov
imul
or
fs
mov
push
push
cmpsl
bound
push
repnz
fcmovnu
ficoms
and
das
clc
mov
test
dec
mov
inc
pop
out
mov
and
in
jns
cltd
pop
mov
mov
out
cli
mov
pop
nop
loope
icebp
sbb
adc
adc
dec
cmpsb
cwtl
je
repnz
lock
xchg
fisttpl
cmp
movl
dec
das
std
cwtl
push
out
scas
pushf
icebp
xchg
sub
mov
stc
in
cmp
les
add
xchg
jns
fsubl
jecxz
imul
dec
sub
sub
movsb
sub
sub
xor
inc
lods
sbb
icebp
xor
inc
nop
test
jl
dec
cmc
mov
out
adc
out
jp
in
out
push
add
pop
out
adc
mov
fs
dec
pop
dec
insl
adc
cmc
push
addr16
mov
pop
movsb
and
outsl
add
ljmp
lahf
mov
sbb
and
pop
sbb
scas
mov
cwtl
pop
std
int3
or
shrb
je
loopne
fwait
pop
pop
xchg
pop
sbb
mov
inc
ret
repnz
xchg
dec
jmp
mov
adcl
xorl
cmp
or
push
push
cld
scas
mov
pop
inc
bound
setae
cmpsb
fwait
mov
test
sti
sbb
in
adc
jecxz
fwait
cli
cwtl
sbb
xchg
or
adc
pop
icebp
nop
mov
push
pop
out
stos
sarb
push
shrl
mov
add
adc
pop
aam
test
pop
and
in
xchg
aaa
dec
daa
repz
ds
sbb
cmp
sub
stc
pop
push
jge
test
sbb
sub
popf
xor
fsts
sbb
cmp
cltd
hlt
out
adc
hlt
mov
cmp
jo
adc
push
aad
in
add
leave
push
push
loopne
das
push
cmp
pusha
sbb
mov
mov
pop
mov
outsb
pop
je
or
imul
adc
nop
or
and
fnstsw
or
or
pop
sub
cmpsb
popf
mov
test
sti
stc
add
mov
cmp
jae
or
ret
jl
jge
cmp
lds
aad
xchg
cwtl
icebp
lahf
or
push
mov
mov
xchg
inc
inc
push
cmp
jae
xchg
pop
lahf
out
pcmpeqw
xor
mov
andl
imul
mov
bound
lods
orl
cmc
sahf
mov
lret
cmp
out
inc
insl
int
jbe
inc
cwtl
clc
adc
sbb
add
xor
xchg
sub
data16
data16
aas
pushf
ret
das
jmp
or
imul
mov
xlat
divl
dec
data16
jb
cmp
sub
mov
idiv
fcompl
push
push
test
xchg
loope
mov
adc
jne
lods
ficoml
or
sub
jg
call
xchg
mov
dec
fsub
dec
hlt
mov
xor
loop
xlat
push
jne
pop
test
xchg
hlt
shl
cltd
adc
popf
adc
mov
bnd
test
andb
xchg
ret
and
enter
xor
mov
or
and
push
enter
push
mov
adc
mov
xchg
pop
stos
cltd
gs
movsb
mov
loopne
jg
repnz
mov
sbb
test
je
rol
adc
scas
jl
push
lea
ja
clc
sbb
outsb
std
xor
imul
xchg
push
jp
mov
cwtl
imul
sarb
cmp
sub
jbe
je
push
cmc
scas
imul
mov
das
sbb
cmp
jmp
xor
rolb
negb
cmpsb
or
xor
iret
cmp
aas
xchg
arpl
add
push
cmp
lock
cmp
int3
jecxz
outsl
shrb
sub
xchg
rorl
ds
push
cmp
cli
add
sbb
fs
pop
stos
mov
loope
cmp
out
lds
pop
sub
call
lahf
pop
sub
js
daa
pop
cltd
jno
data16
adc
jb
clc
inc
out
test
je
dec
pop
mov
push
jae
into
jo
xor
pop
and
insb
mov
jno
mov
jbe
bound
aas
sbb
xor
mov
inc
xchg
aam
xor
mov
rcrl
aaa
adc
lahf
stc
ljmp
sub
flds
cld
fs
into
ret
push
or
imul
in
push
lahf
pop
hlt
sbb
and
dec
sub
ret
add
xorw
cmpsl
aam
pop
and
out
rclb
mov
movsl
jb
lret
or
cmpsb
loopne
xor
mov
cmp
scas
pop
test
inc
sar
ds
cmp
pushf
lret
enter
sbb
testb
mov
lahf
and
jae
jb
mov
adc
lret
dec
stos
mov
dec
sbb
imul
push
outsl
and
dec
sbb
test
pop
mov
lahf
and
add
jb
out
stos
push
into
loop
jnp
pop
lods
sub
shrb
push
es
pop
and
or
rol
aas
jne
sbb
dec
sub
push
mov
sahf
sahf
test
cld
cmp
push
test
dec
js
cmp
jbe
sub
aaa
pop
das
out
into
push
jb
data16
insl
jp
movsl
xchg
mov
pop
mov
fwait
out
add
test
ret
stc
rorl
sbb
or
sbb
lahf
jmp
shlb
mov
pushf
pop
adc
dec
imul
mov
sub
pop
mov
pop
adc
hlt
ret
movsb
fsub
pushf
jge
pusha
dec
xchg
hlt
fcom
in
in
ss
filds
pop
arpl
push
and
test
add
inc
pop
lds
call
push
jl
shll
jp
xchg
inc
imul
adc
in
cmp
xor
lea
mov
pop
add
pop
pop
push
mov
and
cmc
sbb
test
and
add
inc
jl
inc
out
cmp
dec
outsb
jecxz
nop
mov
out
inc
lods
mov
dec
push
inc
lahf
icebp
mov
loop
aaa
fbstp
ret
xor
jb
pop
push
xlat
insl
aas
repz
inc
sub
push
sbb
adc
test
inc
sub
pusha
insb
xor
sub
sub
lds
mov
shll
cmp
adc
push
inc
sbb
jne
ret
pop
popf
stos
jp
sbbb
jle
insl
sub
or
push
scas
mov
or
mov
or
loopne
leave
inc
cmp
gs
daa
pop
dec
xchg
mov
xchg
add
cli
inc
adc
adc
sbb
jge
push
sbb
push
popfw
pop
repnz
mov
bound
cli
sti
lahf
aas
xchg
xor
xchg
int3
cmp
mov
adc
mov
adc
sti
mov
mov
jle
jns
or
stos
shrl
xor
push
cld
adc
and
xor
dec
outsl
dec
sub
push
fwait
outsb
out
sbb
jecxz
repz
cs
ljmp
mov
inc
dec
addr16
outsb
pusha
xchg
xor
xchg
mov
or
nop
fmul
arpl
dec
stc
mov
cmpb
stos
sub
popf
lods
xchg
inc
and
xor
stc
lods
jmp
negb
jmp
inc
sbb
sbb
mul
cld
xchg
push
cmp
mov
xor
arpl
out
push
push
adc
scas
stos
cmp
fld
add
push
xchg
adc
or
ja
xchg
fldt
cltd
mov
mov
pop
in
movsb
ret
jp
mov
push
fs
pusha
or
cmp
adc
les
ret
push
outsl
sub
dec
inc
inc
lret
testb
lock
push
cmp
jl
dec
jbe
mov
movsl
xchg
or
dec
addr16
inc
cmpsw
filds
xor
or
fs
adc
pusha
div
push
dec
add
inc
mov
daa
push
inc
lods
mov
jge
int3
hlt
jmp
adcb
fwait
insl
xchg
jb
pop
ss
sub
mov
inc
scas
fcoms
jmp
scas
mov
mov
inc
xchg
outsb
dec
mov
mov
xchg
test
push
addr16
inc
pop
sahf
nopl
sub
movsb
loopne
int
outsb
lock
mov
jne
call
jmp
add
je
into
test
jl
int3
push
pop
imul
daa
xchg
int
sbb
fstl
jmp
in
push
sbbl
xchg
and
test
jge
jp
repnz
movsb
jnp
movsl
push
movsl
pop
cltd
int3
lcall
outsb
push
mulb
stos
add
push
addr16
mov
or
inc
adc
dec
fbstp
int
or
mov
bound
pop
movsl
jne
jge
bound
movsb
ja
sbb
pop
repnz
or
xor
sbb
mov
adc
insl
dec
aaa
daa
mov
push
push
mov
sbb
fistl
jle
ret
fsub
loope
cmp
inc
add
jecxz
or
rcrb
dec
xchg
cli
inc
lods
stos
ljmp
int3
lret
xor
inc
fisubrs
stc
cmp
data16
nop
das
gs
pop
sub
cmpsb
ss
scas
cld
push
pop
xor
popa
dec
push
sbb
pop
enter
mov
cld
cli
shrl
pop
clc
add
lret
and
mov
jge
stos
stos
mov
aad
pop
jg
xchg
jecxz
shll
imul
repnz
cld
iret
mov
xlat
dec
dec
shr
bound
push
and
inc
lock
or
jge
xor
fisubl
loop
pop
shl
dec
push
inc
std
clc
mov
out
ljmp
adc
mov
loope
cmc
lea
sbb
repz
sahf
out
pusha
cmp
inc
loopne
cs
out
insl
cli
outsb
push
gs
loop
stos
cmp
scas
adc
lea
in
cmp
sub
jb
push
xor
inc
mov
xlat
add
int
pop
cmpsl
test
cmp
mov
push
ss
je
ret
jb
ljmp
imul
subb
mov
movsl
mov
add
sbb
cmpb
sbb
cwtl
imul
cli
imulb
test
hlt
iret
xor
fldl
pop
scas
xchg
inc
xchg
cmp
push
sbb
jo
sub
and
mov
cmp
mov
sub
into
rcl
or
cs
stc
mov
ret
mov
dec
stos
sbb
add
xchg
stos
cmp
pop
shlb
sub
dec
adc
mov
out
push
mov
mov
out
cmp
shl
jbe
lods
mov
push
fwait
cld
fs
in
pushf
push
outsb
mov
sub
cld
mov
xlat
ds
dec
mov
cmpsb
fcomi
and
and
dec
mov
or
jb
mov
out
ss
jo
dec
in
sbb
adc
arpl
inc
pop
xlat
movsl
in
pop
mov
xor
pop
cmpsb
inc
mov
push
gs
neg
mov
ret
pushf
fidivs
xchg
dec
je
pusha
push
cmc
push
or
mov
notb
movl
icebp
lock
push
pop
mov
lea
in
sub
dec
pusha
jbe
jne
insl
push
ret
xchg
scas
mov
mov
add
cmpb
dec
imul
stos
lea
jnp
aam
sub
aaa
andl
add
mov
icebp
outsb
xchg
dec
lret
xchg
push
ljmp
decl
shrb
mov
dec
sbb
pop
mov
pop
fildll
into
test
pop
xor
mov
and
fists
lahf
jae
cmp
cld
dec
fidivrl
adc
add
jbe
xor
sub
arpl
icebp
jno
pop
xchg
jecxz
mulb
loope
and
outsl
lahf
leave
adc
pushl
fdivrp
orl
jle
mov
mov
sub
pop
shrb
and
enter
xchg
or
cmpsl
leave
mov
popa
cmpsl
or
sbb
leave
mov
sbb
mov
adc
mov
in
xchg
xor
xchg
dec
xor
fisubrs
into
in
rolb
xchg
push
roll
pop
mov
add
pop
sar
pushf
lret
pop
add
adc
insb
bound
adc
xchg
fldcw
push
pop
sbb
pushf
add
clc
jl
jns
pop
dec
fsubrs
ds
fcom
dec
mov
test
push
xchg
pop
mov
clc
jae
mov
pushf
fs
xlat
in
aam
add
xchg
mov
nop
jb
orb
fs
push
mov
mov
cmpsb
das
or
pusha
add
ja
inc
mov
leave
jno
or
jle
mov
jecxz
es
xor
sahf
push
repnz
andl
fbstp
adc
push
mov
mov
aaa
aam
sub
loope
jno
dec
dec
ret
mov
cld
popf
push
adc
lahf
push
sub
mov
add
aad
mov
add
je
dec
dec
sub
cltd
sbb
popf
cld
add
dec
ret
xchg
out
cmp
std
ljmp
sub
jno
mov
insb
icebp
push
xchg
in
movsb
mov
ret
ljmp
jno
ljmp
mov
dec
lahf
and
divl
inc
jge
jae
add
jae
fwait
test
aaa
je
aas
lods
pusha
lahf
outsl
fnstcw
push
ret
mov
popf
outsl
loopne
hlt
or
outsb
mov
sub
stos
insb
imul
out
xchg
dec
pop
out
mov
mov
mov
test
mov
jmp
and
loope
xor
inc
mov
lds
ficoml
cltd
push
std
jae
push
in
icebp
or
cmpsb
xchg
imulb
push
stos
add
mov
in
mov
mov
sub
loope
jmp
imul
call
xor
jl
jge
nop
jns
xchg
lret
fbld
lret
mov
mov
lock
call
mov
js
push
rol
jbe
mov
cmp
mov
jecxz
pop
xchg
out
xor
mov
nop
adc
pop
cwtl
std
das
push
mov
xor
subb
add
sub
xchg
push
xor
idiv
jecxz
icebp
ret
inc
lods
repnz
push
sarb
sti
jmp
movsl
push
jo
inc
stos
jb
xor
sub
xor
pop
add
das
sub
and
or
mov
and
insl
repz
fists
call
jcxz
jp
lock
mov
fbstp
push
xchg
cmp
shll
lret
adc
fisttps
xchg
into
outsl
loopne
add
jmp
xchg
dec
sahf
loopne
mov
pop
scas
jbe
xor
out
push
pusha
dec
cmp
scas
gs
mov
popf
mov
mov
sbb
sub
sub
jnp
push
ficompl
push
dec
rcll
or
gs
sahf
xor
lds
or
mov
in
fsubrl
leave
add
insb
fistl
mov
fwait
rorl
ljmp
rorl
iret
cmpsl
test
outsb
lcall
sub
or
dec
xchg
iret
jb
jmp
scas
das
and
std
jg
pop
mov
mov
dec
lock
jae
in
pop
dec
ficomps
test
push
sub
fwait
lcall
shl
int
enter
xchg
add
sbb
add
popf
sti
mov
mov
mov
jle
testl
mov
in
add
loope
and
dec
adc
pop
js
add
insb
imul
lcall
insb
repnz
imul
cmp
adc
adc
mov
rclb
jno
cmp
cmpsb
inc
gs
push
push
jns
lea
enter
sub
mov
xorb
js
jno
sbb
adc
leave
scas
outsl
mov
addl
jnp
gs
sub
leave
inc
mov
out
gs
sub
test
dec
jle
clc
push
fptan
stos
sahf
mov
scas
in
push
push
mov
ss
mov
ret
ja
dec
push
mov
ds
and
aad
xchg
arpl
pop
cwtl
or
sti
xchg
je
mov
iret
pop
mov
mov
in
dec
mov
inc
scas
inc
in
jno
push
sarb
push
enter
js
and
ret
xchg
jno
jne
ds
insb
ja
mov
lcall
je
sub
sti
je
andl
into
loope
sti
jbe
push
jg
lahf
insb
outsb
sub
or
data16
adc
jb
ret
hlt
mov
mov
ret
xor
sbb
ljmp
leave
lcall
in
in
push
pusha
jo
inc
lds
mov
mov
cmp
insb
bound
xchg
dec
adc
ret
xchg
nop
or
jno
hlt
or
jnp
pop
pop
sti
fistl
mov
adc
or
xor
add
dec
jge
jecxz
pop
insl
or
lock
mov
adc
sbb
jae
cwtl
sub
mov
shlb
xlat
xlat
push
dec
xor
jae
mov
popa
cli
inc
lea
mov
pop
and
adc
std
stos
or
cmp
cmpsb
cmpsb
dec
bound
imul
inc
in
add
inc
xor
inc
fisubrl
aam
shlb
incl
jp
sub
and
pop
push
jb
adc
xchg
aas
fwait
mov
push
sarl
pop
lods
aam
or
push
or
scas
mov
lea
dec
xchg
jb
xor
je
and
xchg
aam
pop
sbb
mov
cmpsl
and
dec
sbb
adc
popf
test
stc
not
mov
push
inc
inc
pop
lds
in
inc
sbb
mov
leave
add
insl
loopne
mov
movsl
push
in
mov
jnp
das
jbe
cmp
dec
jmp
mov
aaa
les
les
mov
test
in
adc
mov
movsb
xchg
insl
xchg
dec
clc
es
xor
lds
or
sbb
mov
push
fidivrs
clc
ret
outsb
mov
ja
fsubl
filds
dec
stos
mov
mov
std
mov
ret
in
fcoml
aas
sbb
lcall
pop
and
dec
lcall
push
cmp
rol
mov
pop
jo
in
dec
cmp
adc
lock
cmp
jno
leave
into
xor
lret
cwtl
in
add
xchg
test
pushf
xchg
xor
packsswb
scas
sbb
int
adc
outsb
pop
dec
jnp
orb
push
mov
and
sbb
mov
lcall
int
loop
sub
or
jg
aaa
mov
or
shrl
out
movsl
fldcw
jge
cmp
cli
cmp
cmc
sahf
xor
push
sbb
sbb
push
dec
test
lods
movsb
dec
in
xchg
pop
mov
imul
inc
jbe
popf
cmp
cwtl
aad
push
mov
push
jno
rorl
dec
push
dec
mov
and
hlt
ret
adc
push
fcomip
xchg
mov
lock
cmp
xlat
je
in
sbb
lods
mov
pop
ret
adc
subl
dec
mov
pop
les
mov
adc
push
or
dec
ljmp
dec
ljmp
inc
loopne
nop
or
ret
mov
cmpsl
mov
aaa
pop
adc
clc
divb
xchg
bound
inc
xor
jne
add
movsb
pop
scas
cltd
push
pop
push
mov
mov
add
shlb
or
push
mov
cmpsl
sbb
clc
jl
shl
bound
cmp
push
pop
ret
push
push
pop
popf
cmp
mov
cmp
add
jp
push
jae
lret
pop
pop
jbe
out
push
pop
mov
push
cli
sub
mov
jmp
lea
sbb
push
sti
adc
jnp
jg
cmp
clc
and
shlb
push
shrl
scas
xchg
out
aad
push
add
outsl
adc
inc
daa
mov
lock
popl
scas
pop
in
adcl
jmp
lock
inc
cmp
inc
cld
std
call
fdivrs
cmp
add
les
adc
xchg
test
daa
cltd
stos
out
cmp
xor
sbb
mov
mov
scas
dec
incb
lds
int3
arpl
mov
push
cmp
daa
rorb
pushf
dec
push
mov
das
lea
iret
arpl
pop
or
sub
repnz
out
lahf
decb
aam
loope
or
test
fmuls
cltd
in
pop
icebp
out
xchg
mov
data16
and
sbb
dec
pop
ss
inc
jmp
sub
dec
dec
mov
sub
inc
xor
pop
inc
or
cwtl
and
add
pop
mov
aad
sub
nop
pushf
jnp
inc
xchg
adc
jge
sbb
in
mov
mov
int3
mov
pop
sbb
push
or
lock
cwtl
mov
jno
or
ficoml
int
leave
gs
xchg
sbb
pop
sbb
mov
pop
test
mov
mov
xor
cmpsb
xchg
jnp
add
outsb
mov
popf
iret
out
cmc
jl
ret
lds
rorb
outsl
inc
and
mov
mov
cmp
cmpsb
dec
std
mov
std
cmpsl
inc
fisttpll
fsubrl
push
mov
xorb
jbe
hlt
enter
dec
clc
cmp
icebp
cmp
bound
push
xor
mov
cli
jecxz
pop
data16
add
subb
pop
cmp
mov
inc
jp
inc
icebp
mov
sub
in
imul
in
mov
imul
push
scas
ss
cmc
lock
add
lret
add
sarl
xchg
test
mov
les
adc
or
arpl
scas
cmp
aad
sub
stc
loop
xchg
mov
lds
dec
sahf
shll
lock
std
pushf
jmp
mov
mov
jo
pop
xor
and
xorb
lea
arpl
sarb
aad
int
mov
faddl
push
jp
rorb
mov
jns
bound
push
inc
lock
sbb
xor
xor
mov
and
mov
or
in
mov
pop
daa
popf
xor
repnz
sbb
das
xchg
cltd
push
cmpl
ds
sbb
dec
add
scas
push
mov
adc
lods
test
inc
movsb
dec
test
sti
iret
loopne
shll
out
push
movsb
xchg
cld
lock
in
sub
or
leave
pop
dec
imul
xchg
jbe
mov
shrb
mov
jbe
pop
push
daa
xchg
dec
call
je
push
xchg
aas
sub
sub
cmp
leave
leave
mov
mov
push
cld
mov
mov
mov
lret
cli
mov
in
dec
iret
ja
lods
or
les
cld
xchg
addr16
mov
cmp
test
xchg
dec
shll
and
cmp
testl
stos
adc
push
clc
mov
dec
sbb
xchg
add
push
rcrb
ficoml
in
mov
add
insb
cmpl
push
jg
cmp
mov
pusha
mov
sbb
inc
xchg
cmp
or
in
sub
aaa
clc
mov
lret
testb
gs
jp
mov
pop
push
fdivrp
mov
out
xor
addr16
and
mov
xor
inc
cmp
mov
adc
xchg
dec
jno
fsubl
fidivs
xchg
mov
fninit
add
test
sub
or
loopne
clc
sbb
mov
jmp
xlat
mov
or
mov
data16
jb
outsl
cmpsl
inc
cmpsb
push
shll
cmpsb
jae
dec
lods
dec
adc
mov
xor
xchg
xchg
or
pop
xchg
mov
add
ja
and
aam
pop
ficompl
lea
dec
int
insb
sub
or
fs
jg
push
or
jae
adc
cmpsb
cmp
leave
inc
cmp
lds
mov
jo
popf
pop
stc
jg
adc
testb
cmp
test
inc
jle
sbb
sub
aad
cmp
push
adc
mov
cmpb
into
add
aad
subb
nop
ficoms
movsb
push
ret
ja
imul
xor
stos
jp
outsl
outsl
push
push
add
jb
jg
pop
cmpsb
xchg
mov
repz
daa
fistl
repnz
rorl
jmp
inc
aas
fpatan
or
or
push
mov
inc
or
pop
stos
insb
fiaddl
xor
js
shlb
addr16
inc
jbe
lods
and
inc
cmp
or
push
lock
int
stc
jp
mov
adc
mov
imul
int
mov
out
dec
testl
fcom
rcl
in
sahf
mov
aad
sub
lret
pop
lods
stos
inc
jmp
mov
rcll
push
imul
les
xchg
xchg
dec
idivb
jbe
rcl
adc
lahf
ss
push
xchg
lock
push
mov
sahf
shrb
xchg
shll
fnstcw
jecxz
out
jmp
addr16
mov
jecxz,pt
sbb
cmpl
je
xchg
adc
mov
rcrl
or
repz
rorl
mov
push
adc
in
sbb
rcll
or
imul
inc
push
inc
scas
jo
out
push
loop
or
push
aad
sub
in
call
stos
sub
and
loop
cmpsl
stos
xchg
std
aaa
cmp
sahf
popa
mov
pop
xlat
sub
test
inc
jp
pop
mov
jne
orb
enter
das
push
pop
aaa
mov
stc
pop
fisubs
dec
rcrl
out
fwait
es
jae
mov
stos
int3
push
iret
pop
stos
and
mov
hlt
in
cmp
add
pop
pusha
sub
xor
test
mov
out
fidivrl
xchg
cmp
mov
test
add
test
push
dec
mov
ffreep
cltd
mov
aam
mov
pop
stos
lock
ds
shl
mov
out
pop
dec
lods
cld
adc
sub
aam
push
xchg
push
roll
ss
cmc
push
mov
dec
mov
popa
lods
test
icebp
outsb
cli
xchg
mov
mov
mov
out
sub
mov
push
inc
mov
inc
add
cmp
sub
mov
in
aad
mov
xchg
das
push
stos
sahf
cmpsl
cmpsb
add
pop
icebp
inc
push
je
das
outsb
lahf
pop
ficompl
or
xor
in
pop
insl
idiv
dec
and
movsb
add
sub
std
inc
push
lret
push
movsb
gs
xchg
and
movsl
outsb
or
xchg
pop
dec
scas
in
loope
sbb
jg
hlt
stos
lret
lods
or
or
jns
mov
paddsw
imul
or
lods
fldenv
or
jne
mov
jae
push
inc
mov
push
clc
mov
push
mov
outsb
clc
jmp
out
pop
sub
xchg
cmc
sbb
mov
cmp
test
ja
or
jne
dec
mov
and
out
dec
mov
cltd
pop
xchg
outsb
in
push
in
movsl
lahf
adc
xlat
gs
pop
push
jae
sbb
sbb
xor
int3
sarl
out
mov
dec
push
push
xchg
adc
lahf
out
cmpsl
stos
sbb
push
insl
das
and
mov
jne
mov
pop
int
addr16
jl
add
pop
xor
mov
sbb
pop
sub
fistpll
dec
mov
lahf
out
pop
sti
fs
sub
cmp
mov
sub
sub
sub
fwait
jmp
out
stc
mov
or
lods
pusha
push
sbb
push
dec
data16
jne
adc
add
cwtl
jnp
and
sub
and
inc
xor
inc
icebp
fdivl
or
and
inc
arpl
mov
jae
mov
mov
cmc
mov
cmp
jae
imul
cli
cs
inc
xchg
cmp
lds
jbe
data16
notb
dec
pop
mov
fimull
fldl
and
mov
arpl
mov
dec
es
jae
ja
rol
test
push
xchg
fmuls
mov
and
dec
and
cmp
ds
and
scas
dec
xor
xor
mov
sub
dec
idivb
jl
jo
fldcw
inc
repnz
and
inc
xor
fld
iret
lods
inc
xor
jl
lcall
addr16
jle
pop
dec
inc
cmp
stc
and
movb
pop
dec
jo
popf
mov
popf
mov
xor
out
adc
out
loope
loopne
mov
arpl
xor
dec
xchg
inc
fstpt
mov
ljmp
movsl
dec
jno
cmp
adc
or
pusha
jmp
imul
inc
popa
mov
inc
pop
jbe
repz
sahf
fdivs
cmc
ret
xchg
jecxz
push
lock
in
dec
mov
and
shlb
jecxz
mov
inc
out
inc
jmp
lret
popa
and
js
mov
push
sub
int3
xor
daa
cmp
lock
pop
jp
mov
cmpsl
cld
sbb
add
cmpsl
cwtl
test
shl
sub
repz
not
add
jl
fs
pop
addr16
ljmp
cmp
imul
bnd
mov
loope
and
subb
jbe
aaa
rcl
std
pop
cmpl
mov
sbb
icebp
mov
adcb
xor
fisubrl
mov
outsb
sti
in
and
popf
lods
xor
xchg
push
sbb
lock
cmc
mov
xor
xchg
ds
inc
and
cltd
loopne
push
pop
sbb
jle
mov
adc
mov
aaa
out
sbb
cltd
rolb
cmp
rolb
or
clc
out
or
test
ljmp
loop
pop
dec
adc
sarb
or
xlat
int
cmp
in
push
lret
pop
lret
cltd
dec
in
imul
stos
mov
and
or
jl
fadd
cmc
mov
mov
push
popf
pop
or
pop
lds
cmp
add
add
mov
mov
push
inc
pop
aaa
mov
test
pop
pop
jp
pop
cld
rcll
mov
scas
xchg
arpl
push
rolb
or
adc
xchg
fisubrl
pop
cmp
xor
fs
cmpsb
push
adc
sbb
in
push
cmp
or
out
jb
rclb
mov
push
mov
insb
jl
adc
mov
lock
pop
in
into
jae
idivl
dec
cltd
std
stos
add
sub
pop
addl
adc
add
dec
sub
add
jg
pop
in
leave
push
outsb
jle,pt
cmp
nop
add
mov
sbb
mov
fldt
imul
and
add
xor
mov
push
xchg
xchg
dec
aad
in
aaa
xchg
mov
iret
pop
add
shl
fcompl
or
daa
xchg
lahf
in
xor
aas
or
cmp
test
ds
jb
sub
xor
mov
repz
jge
out
ficoms
inc
push
fs
mov
jbe
jo
mov
das
jno
pop
shrb
jecxz
mov
jne
xchg
aam
push
push
out
mov
mov
lds
push
fidivl
lea
xchg
pop
dec
sbb
push
out
into
dec
cmpsl
movsl
jnp
test
mov
int3
cmc
fistpll
fisttpll
cmp
adc
jae
jns
adc
xchg
sbb
sub
cmc
sub
push
xchg
cmp
jg
jne
scas
out
std
mov
gs
in
push
jo
les
outsb
cmc
xchg
mov
imul
shl
add
in
ss
movb
cli
inc
or
inc
loopne
out
fsts
mov
scas
inc
mull
sub
jb
push
test
movsl
or
mov
ret
lahf
cmp
loop
add
mov
push
push
dec
out
test
test
incb
pusha
mov
das
shrl
nop
pop
jb
add
dec
or
lcall
cld
popa
cmp
mov
fmuls
cmpsb
pusha
or
test
pop
scas
cmp
cmpsb
xor
mov
xchg
mov
shrb
fistpl
fsubl
arpl
dec
repnz
shrb
xchg
fucomip
fbld
xor
lods
xor
loopne
or
ret
mov
lcall
cli
cltd
cli
cmp
push
mov
stc
pop
std
pushf
ss
xor
xchg
lds
mov
sbb
adc
jmp
jmp
loope
cmp
jnp
cmpl
dec
jge
sub
mov
pusha
inc
mov
and
and
mov
fucomi
or
leave
xorl
orl
xchg
imul
lcall
pop
cwtl
test
filds
cmp
mov
xlat
rcrb
mov
movsl
xorb
out
pop
test
mov
ljmp
or
sub
pop
dec
inc
cli
jno
mov
lcall
adc
aaa
stos
dec
or
scas
js
xor
xor
pop
mov
jmp
test
sub
stc
sub
shlb
cltd
out
test
sbb
outsb
cmp
pop
sbb
aas
push
push
mov
icebp
adc
dec
or
outsl
adc
add
test
cmpsb
inc
or
shlb
jle
jns
mov
cmp
pop
sub
inc
dec
mov
fidivrl
pop
cmpsl
push
or
ja
xchg
out
adc
incl
mov
push
dec
adc
fsubp
jmp
dec
mov
sbb
pop
pop
jle
mov
lahf
testl
mov
je
lahf
cmpsl
jecxz
je
cs
cmp
lea
adc
sahf
and
not
test
nop
orb
int3
sbb
dec
inc
mov
or
cmp
cmp
ja
add
push
add
jge
cli
loop
or
popf
mov
inc
cmp
in
pop
adc
mov
icebp
inc
mov
je
test
cmp
shll
jno
mov
pop
push
bound
pop
dec
movsl
cmpsl
loope
push
dec
mov
call
sarb
push
sub
loop
insl
or
mov
xor
outsb
inc
xchg
mov
xchg
fstl
enter
scas
and
arpl
add
in
mov
data16
xchg
cmp
repz
adc
sub
outsl
dec
inc
mulb
push
or
nop
jge
pop
cmp
imul
fldenv
inc
pop
aaa
insl
repz
dec
loope
lods
hlt
cmp
sbb
fisubl
jno
pop
cmpl
cmpsl
stos
movsb
mov
mov
push
xor
test
rclb
dec
xor
mov
shrb
adc
cmp
mov
outsb
mov
dec
mov
in
or
dec
icebp
sbb
push
mov
push
out
movsb
orl
cmpsb
aad
jecxz
or
dec
push
test
xchg
jle
push
mov
mov
or
leave
mov
loope
add
sldt
mov
add
js
and
jne
mov
fcomp
int
jno
scas
test
sub
and
bnd
rclb
sub
lods
add
or
ljmp
push
jge
mov
jbe
mov
in
ret
int3
inc
and
mov
cwtl
outsb
push
negl
fadds
inc
cmp
pop
inc
test
scas
clc
lock
or
add
enter
sbb
jp
je
lcall
mov
or
push
mov
ds
jmp
subl
pop
jp
loop
ljmp
or
fistpll
shlb
test
pop
es
jo
pop
stc
mov
jno
aaa
cltd
pop
out
je
adc
xor
mov
mov
xchg
addl
int3
std
fwait
in
out
fdivrs
pop
or
push
hlt
add
jnp
dec
pop
and
mov
adc
mov
movsb
mov
inc
out
in
into
cld
jno
push
in
pop
fisttps
mov
lock
xor
arpl
xchg
xor
add
sub
xor
sbb
mov
js
stos
jmp
push
sub
mov
push
dec
xchg
jmp
daa
inc
xchg
lahf
clc
sub
ret
xchg
xchg
sbb
sbb
push
stc
jle
aad
fildl
arpl
rcl
dec
mov
xchg
arpl
icebp
dec
std
out
cmc
outsl
jo
and
jmp
ret
imul
test
loopne
test
out
cmp
xchg
out
imul
pop
shrb
xor
pop
inc
mov
lock
sbb
sbb
mov
clc
lcallw
repz
ret
cltd
mov
cmp
scas
pop
sbb
icebp
scas
test
fsubs
or
xor
jae
mov
roll
xor
push
push
mov
mov
pop
or
icebp
incb
push
daa
scas
movzwl
cmp
xchg
and
jnp
pop
cmpsl
popf
and
dec
ja
jmp
mov
sub
data16
testl
or
push
dec
jecxz
dec
adc
dec
cmp
ret
aad
mov
fst
push
inc
cmp
add
loopne
add
test
inc
or
pop
xor
jge
imul
sbb
xchg
xor
inc
sbb
xchg
insb
push
mov
sub
or
pop
scas
jecxz
mov
loope
mov
dec
pushw
mov
bound
mov
icebp
push
mov
test
mov
movsb
int3
popf
mov
aas
inc
stos
pop
mov
pop
ds
lcall
mov
jp
xchg
mov
sbb
jbe
lret
cmpb
cmp
adc
mov
and
lret
out
out
mov
adc
pop
xor
pop
pop
xchg
outsl
xor
jge
outsb
pop
xlat
jmp
xchg
repnz
mov
scas
pop
daa
sahf
push
xchg
cli
sub
test
mov
mov
arpl
ss
xor
push
dec
sub
rcll
fs
sub
mov
nop
jno
xchg
movsb
imul
push
stos
arpl
fucomip
sahf
adc
pushf
fadds
rorl
mov
and
push
shl
jge
cmc
in
rcr
fidivl
mov
mov
or
cmp
dec
mov
xor
dec
iret
mov
jbe
inc
and
xchg
adc
xchg
cmp
out
pop
and
mov
jmp
or
pop
jnp
insb
movsb
mov
sbb
inc
sub
jecxz
sbb
mov
xchg
std
das
out
jp
jb
test
pushf
loop
xchg
in
outsb
inc
xchg
data16
pushf
and
adc
scas
clc
mov
sbb
mov
xor
lods
xchg
jge
rolb
dec
push
mov
inc
jns
arpl
sub
nop
mov
insb
aaa
inc
mov
lock
push
xchg
orl
ss
dec
mov
push
jnp
fnsave
xchg
and
and
and
cmp
mov
and
mov
jo
sti
ss
mov
mov
lds
sbb
jp
movsb
sub
push
les
sub
sbb
stc
test
mov
loop
inc
dec
fidivrl
pop
add
mov
fimuls
fwait
push
adc
dec
inc
jne
ret
jnp
inc
out
mov
fwait
jae
jmp
sub
or
dec
add
test
aaa
int
or
in
pop
sbb
fsub
pop
mov
mov
or
jnp
fidivrl
add
fisubrs
pop
cwtl
adcb
sub
mov
pop
xchg
add
loop
aas
outsb
ffreep
sub
mov
xchg
pop
cmp
test
sbb
inc
popf
xor
jnp
mov
xlat
notl
jnp
add
adc
shl
cwtl
jb
aam
push
outsb
sbb
fsts
or
inc
out
clc
push
aam
cmpsl
insb
ret
push
cmp
push
inc
jp
xor
add
push
mov
mov
jp,pt
insl
xor
dec
adc
sbb
rorl
xor
loope
sbb
add
sub
mov
lock
adc
ds
pop
in
xor
std
inc
adc
cmp
sbb
sub
test
pop
fdivr
test
test
mov
mov
push
cmp
push
lahf
mov
stos
push
outsl
jns
stos
in
icebp
dec
sub
pop
repnz
push
popa
in
fdivrp
insl
add
adc
lods
fbld
and
pop
xchg
gs
imul
movsb
pop
mov
pushf
arpl
lret
add
testb
stos
cltd
ja
xchg
aaa
pop
out
sbb
cs
gs
dec
sub
xor
xchg
shlb
pop
sbb
jns
or
mov
jl
lahf
add
clc
cmpb
je
xchg
push
adc
into
inc
nop
in
mov
sub
ror
fwait
lret
adc
arpl
inc
pop
sub
sbb
in
lret
mov
pop
fs
push
xor
sahf
xchg
ds
leave
aad
dec
stos
jle
push
popf
shlb
mov
aad
shll
pop
jns
mov
jb
leave
pop
ss
xor
stc
aas
push
or
sbb
mov
hlt
sub
mov
in
insl
sbb
and
mov
repz
icebp
incb
fmuls
cmp
lock
xlat
repnz
mov
mov
lods
cli
in
jnp
push
in
push
mov
and
adc
mov
hlt
xor
ret
xchg
lods
adc
push
imul
in
push
dec
into
icebp
add
aaa
test
int
repnz
mov
ljmp
sub
fs
in
sarb
pop
int
aaa
cltd
test
jle
ds
sub
hlt
push
jecxz
out
xchg
xchg
shlb
push
in
test
dec
xchg
jp
xchg
mov
movsb
movsl
imul
sbb
add
or
call
idivb
mov
adc
mov
jns
jae
xchg
lock
inc
push
inc
inc
popa
cli
mov
aas
xchg
test
adc
rorb
jl
cmp
inc
in
pop
icebp
or
pusha
dec
mov
js
in
aas
add
pop
std
movsb
dec
sbb
mov
mov
mov
inc
cld
iret
jle
sbb
xchg
pop
icebp
mov
lret
movsl
into
dec
push
popf
popa
add
or
mov
or
lods
lds
in
inc
and
scas
cli
imul
fmul
push
jno
into
mov
mov
pop
scas
es
fwait
shl
and
cs
mov
mov
push
dec
scas
xchg
stos
popa
and
in
movsb
aad
loopne
dec
push
cmc
sbb
fidivrs
jno
test
pop
and
shlb
sbb
mov
stos
cwtl
inc
mov
mov
pop
xor
push
xor
mov
lock
jb
les
stc
fisttps
push
addr16
push
xchg
sti
dec
dec
fnstenv
pop
orb
cld
aaa
cmp
gs
lret
jnp
cmp
pop
ss
inc
in
mov
dec
push
push
into
loope
repnz
popf
xchg
test
into
inc
mov
pop
push
mov
mov
ret
outsb
dec
jno
stos
ds
enter
fistl
push
iret
sbb
push
add
cmp
int3
mov
inc
ja
push
mov
jb
cmp
mov
loop
push
out
das
jp
cmp
int3
cmp
inc
aam
inc
dec
or
xor
mov
ret
popf
ja
add
xchg
jo
xchg
push
sbb
mov
or
imul
push
inc
icebp
ficomps
jbe
faddl
mov
mov
adc
xlat
stc
inc
push
cmp
orl
jmp
sbb
enter
mov
dec
mov
and
das
or
ljmp
enter
adc
fcmove
adc
mov
xor
pop
test
or
lods
cmp
sahf
mov
cmp
int
push
imul
pusha
scas
out
dec
call
mov
xchg
or
dec
int3
xor
ret
loope
scas
mov
pop
sub
ficoms
sbb
lock
cmpsl
test
sbb
pop
add
test
lods
pop
dec
inc
test
jo
iret
lcall
lahf
mov
cmpsl
stos
test
cmc
les
lahf
and
xchg
stos
int
stos
fisttpl
cmpsb
sbb
or
aad
or
add
dec
dec
out
jl
adc
add
pop
pusha
and
sub
lret
mov
dec
call
cmpsl
adc
sub
push
pushf
sahf
mov
adc
mov
sub
lock
xchg
pop
or
mov
mov
rorl
pushf
cmpl
cmpsl
cmp
pop
mov
fwait
push
ja
push
mov
out
jae
and
out
adc
xchg
rol
sub
mov
loope
xchg
sub
hlt
sub
cmc
mov
dec
mov
sub
mov
mov
sbb
jb
iret
mov
xor
jp
add
mov
ret
stos
pop
push
inc
dec
and
add
and
pop
data16
pop
push
xchg
push
inc
xchg
xchg
push
xor
rorb
je
and
cli
sbb
dec
xlat
jp
xchg
jmp
cld
cmpl
xor
jl
xor
mov
adc
test
jae
cwtl
adc
xor
adc
test
idivl
sub
xchg
shrb
lock
movsb
in
and
fwait
adcb
aas
jnp
enter
push
decb
stc
mov
pop
mov
sub
sbb
pushf
adc
push
sub
cmp
cmc
or
jo
gs
cmpsb
push
ficomps
mov
xor
xchg
enter
dec
divb
cmp
in
mov
dec
aam
cmp
hlt
mov
imul
aas
mov
push
xchg
sub
rcll
cltd
sbb
std
cmc
shll
adc
pop
fistpll
into
add
adc
das
testl
aas
xchg
xor
dec
cmpb
jne,pn
outsl
adc
sahf
or
jns
lea
xchg
mov
sub
cmpb
dec
hlt
inc
pop
sbb
and
mov
mov
call
sbb
lcall
or
inc
and
cmp
mov
inc
dec
xchg
test
fs
xor
inc
cwtl
or
jmp
sbb
les
adc
dec
fimuls
shlb
sub
mov
lret
cwtl
sub
arpl
je
cmp
lahf
mov
push
stc
xchg
and
mov
sub
daa
pop
leave
test
cmpsl
in
cmp
mov
mov
shrl
movsb
jge
mov
fwait
xlat
dec
jb
stos
dec
push
add
lods
setl
xchg
adc
lods
loopne
es
push
cs
mov
sub
xchg
pop
repz
loopne
outsl
pop
pop
pop
scas
movl
cld
xchg
fwait
in
mov
inc
test
inc
pop
jns
mov
jns
cmp
call
sbb
sbb
adc
xor
and
push
or
sub
mov
jbe
stos
dec
xlat
xor
rcrb
push
loop
dec
mov
cmp
push
pop
adc
mov
jle
lods
mov
mov
mov
pop
ficompl
out
push
movsb
lret
xlat
imul
cld
inc
sub
out
gs
js
push
push
inc
insb
in
lods
lods
pushf
add
and
xchg
arpl
sbb
inc
ds
fisubl
adc
and
mov
js
pop
and
test
sub
shll
cwtl
lock
clc
int3
js
xchg
jne
js
rep
sub
loope
repnz
push
out
inc
scas
mov
add
daa
pushf
pop
jl
and
mov
cmp
add
mov
shll
insb
loopne
pop
push
pop
mov
adc
or
scas
lds
lea
xchg
sbb
sar
popa
std
xor
imul
lcall
lds
fnstcw
inc
sbb
xor
adcb
fst
mov
ja
mov
cmc
jns
mov
jno
repz
das
or
mov
into
scas
bswap
icebp
orb
into
or
push
pop
cld
pop
pop
sub
cwtl
cmp
sbb
sbb
mov
mov
lods
push
addl
jne
loop
sarl
pop
mov
jne
or
aam
cmp
xlat
ljmp
cwtl
push
repnz
mov
ret
sbb
imul
repz
cmc
aam
mov
mov
js
sub
cli
cmp
sbb
inc
dec
scas
jnp
stos
scas
dec
add
sub
gs
leave
or
addb
fucom
gs
push
int3
add
jmp
in
imull
stc
aam
mov
or
mov
scas
aad
adc
xlat
jno
ret
jle
xchg
aam
jno
mov
sbb
mov
cmp
jno
push
imul
xor
push
sbb
xchg
mov
fidivrs
push
jl
dec
and
and
inc
loopne
pop
subb
xor
xor
out
jb
test
jne
ret
jne
mov
sub
mov
out
mov
mov
pop
jle
loopne
or
sti
test
rcrl
jno
push
inc
pushf
test
add
je
in
mov
out
arpl
testb
sbb
sub
outsb
fnsave
mov
jae
insb
add
fistpll
inc
enter
mov
icebp
pop
ret
sarl
in
leave
mov
test
imul
dec
sbb
mov
mov
das
ficomps
push
sbb
inc
cwtl
sub
push
xchg
add
imul
outsb
jnp
push
jge
sbb
mov
insb
jns
xchg
movsl
jbe
bound
call
enter
xchg
stos
flds
movsl
and
psrlw
nop
pop
adc
jecxz
aad
cmc
dec
add
push
ja
popf
push
lahf
mov
insl
push
xor
pop
dec
mov
ret
and
inc
or
xor
jle
insl
iret
xchg
sahf
ljmp
outsl
out
cwtl
jle
stc
lds
adc
mov
mov
ds
sub
test
mov
sub
sarb
movsl
push
loopne
addr16
add
enter
jbe
es
int3
cld
cmp
mov
jp
mov
lahf
ss
insb
inc
cmpsb
jecxz
das
add
adc
in
cmp
sbb
jg
scas
in
hlt
nop
es
dec
out
cld
mov
push
and
xchg
scas
cmp
rcrb
xchg
sub
aam
icebp
xchg
sbb
test
and
pop
les
sbbl
sbb
jmp
jnp
popa
push
hlt
push
push
out
shl
movsb
pop
pop
pushl
or
adcb
xor
out
out
les
mov
loopne
mov
pop
mov
pop
inc
sub
xchg
pop
je
jno
dec
push
mov
adc
notb
add
cli
jle
stos
testl
sub
insl
push
imul
jecxz
xor
lock
inc
dec
les
imul
stos
dec
cli
adcb
push
fstps
cmp
cmp
ljmp
lods
jno
loopne
inc
or
out
inc
cmc
cmp
xchg
insl
xchg
inc
fs
xorb
cld
popa
gs
adc
rorb
jmp
sub
and
xor
jg
sbb
mov
daa
cmp
sub
inc
leave
inc
int
sbb
fildll
gs
ljmp
inc
insb
rolb
and
cwtl
icebp
ss
roll
or
jge
jmp
mov
jo
cltd
pop
aas
fstl
aad
mov
mov
shrb
sbb
aam
xor
adc
add
loopne
xchg
cmp
push
rorl
cmp
jge
xor
out
mov
pop
xor
lods
xchg
push
scas
stc
cld
scas
ljmp
mov
movsl
push
movsl
outsl
jl
test
adc
push
sbb
sub
pop
mov
add
push
adc
jae
lcall
ret
xchg
adc
sti
xor
cmp
jb
lahf
or
or
aaa
and
sub
mov
mov
shlb
insb
fisttpll
xchg
clc
orl
addb
mov
sub
repz
lods
inc
xchg
mov
loop
jle
mov
add
push
or
fdivr
push
in
sti
inc
adc
jns
mov
out
pushf
sahf
xchg
and
xor
outsl
out
mov
dec
jecxz
adc
mov
push
push
fbld
jmp
push
cmpsb
inc
jb
adc
mov
xorb
fiaddl
fst
lea
add
lds
mov
dec
or
xchg
dec
mov
xchg
mov
sbb
adc
mov
mov
mov
mov
lds
int
aad
push
pushf
jg
cmp
popa
inc
ljmp
push
push
or
gs
pushf
cmp
cmp
jl
inc
cltd
cmp
in
sbb
js
stc
rorb
int
push
adc
jnp
jno
xchg
movsl
lock
out
mov
rcll
inc
mov
adc
fistpl
cmpsb
cli
lods
xchg
jl
xchg
jl
cli
jb
popf
mov
push
pop
sbb
sub
xchg
stos
add
sub
lcall
rorl
arpl
popl
fstpl
pusha
popf
test
aaa
dec
in
mov
sub
cld
cld
xchg
in
sahf
scas
jo
ret
inc
in
test
packsswb
adc
out
rolb
pop
cltd
js
pusha
popa
lret
or
inc
and
call
mov
pop
mov
dec
scas
lods
daa
adc
pop
lds
loop
cmp
jmp
insb
call
mov
es
cmp
mov
sbb
push
inc
sbb
and
imul
mov
dec
jnp
mov
cmp
mov
loop
sub
sub
pop
cmpb
or
push
ds
mov
inc
in
pop
pcmpeqw
int3
call
push
xor
outsb
jl
jbe
sarb
dec
push
or
mov
pop
sub
insl
aaa
cmp
les
push
dec
push
dec
push
and
push
xchg
int3
or
inc
xor
in
inc
push
sbb
cmp
adc
negl
xor
roll
sbb
cmc
outsb
push
jle
or
adc
dec
cld
mov
add
mov
test
push
push
std
cwtl
mov
jmp
adc
adc
scas
iret
push
test
movsl
adc
imul
pushf
fisubrs
pop
sarl
and
pusha
lds
push
gs
je
lock
bound
hlt
pop
aas
mov
mov
adc
cmc
mov
or
xor
mov
test
mov
shll
push
jmp
ja
mov
mov
sub
loopne
pop
sub
mov
jl
mov
out
rcrb
inc
shrb
cmpb
rclb
mov
mov
outsb
stos
cmp
and
jo
mov
dec
cltd
push
xchg
sbb
jne
repz
stc
push
or
leave
push
int3
mov
pop
ja
mov
xor
aaa
pop
and
iret
fwait
push
jle
adc
push
mov
push
int
outsb
push
mov
in
ret
push
mov
mov
imul
rorb
out
sbb
add
das
xchg
in
jg
aaa
pusha
ror
fistpll
and
sub
jl
out
push
repz
ds
test
jle
mov
inc
xchg
pop
leave
into
sub
cmpsl
subb
addr16
fs
sbb
lret
push
insb
adc
jno
push
arpl
add
jmp
push
push
adc
mov
and
and
fcoml
cmp
sahf
loopne
jno
jecxz
shll
sbb
sbb
dec
in
dec
les
xchg
sti
dec
jle
mov
mov
js
aas
push
fwait
sbbl
mov
xchg
inc
mov
xchg
test
or
pop
cmc
mov
fsubl
sbb
out
mov
xchg
loop
insl
leave
add
mov
add
mov
mov
rorl
movsb
pop
jle
outsl
je
push
lahf
dec
fs
negb
mov
out
scas
push
cmp
hlt
push
xor
lock
mov
sub
hlt
pushf
push
push
mov
mov
idiv
sub
test
bound
mov
out
scas
mov
hlt
fists
sahf
pop
add
idivl
bound
mov
jo
push
fcomip
sahf
push
cli
js
mov
scas
mov
mov
push
cld
mov
pop
xor
js
je
ljmp
sub
sbb
dec
scas
sbbl
rorb
pop
movsb
xchg
jns
push
and
xchg
outsb
je
pop
sahf
push
shr
inc
xchg
or
aam
mov
xchg
shr
divb
pop
inc
les
adc
cmp
data16
mov
push
pop
xchg
mov
pop
sahf
movsb
inc
push
inc
dec
cli
scas
mov
adc
push
xor
dec
cmp
jge
push
inc
test
mov
mov
pop
sub
mov
ds
push
fdivr
into
cmpsb
mov
ja
pop
cwtl
out
das
fisubl
adc
jmp
es
sub
add
cli
cli
ret
jae
cmp
xor
mov
data16
or
daa
aam
xchg
push
daa
hlt
jecxz
adc
test
and
inc
lcall
xchg
or
mov
movsb
pop
lcall
cmp
fiadds
jb
das
cmpsb
addr16
stos
xchg
pusha
outsl
push
movsb
es
test
fbld
adc
movsb
lret
addr16
cmpsl
mov
dec
xchg
shl
fldln2
cmp
push
sti
testl
aad
or
or
xchg
testb
das
imul
pop
pop
leave
data16
add
inc
fidivrl
mov
adc
shrl
adc
lea
sub
test
pop
or
cmp
aad
mov
and
dec
sbb
xchg
imul
mov
cmpsl
leave
lods
add
push
mov
shl
out
fwait
xor
and
cmp
in
lcall
enter
pop
mov
or
ret
adcb
enter
addb
inc
push
inc
popa
ds
or
pop
gs
adc
add
mov
aaa
and
pop
dec
sbb
int
dec
dec
xor
pop
inc
sbb
push
stc
inc
ss
mov
test
add
lahf
xchg
movsb
ficomps
loope
imul
push
fists
scas
xor
movsl
cmpb
divb
jmp
xor
out
mov
fbstp
sarb
lcall
and
dec
stos
push
sub
mov
ja
pop
popa
fs
mov
lods
inc
inc
push
mov
xor
lods
fistpl
sub
out
or
ja
lea
and
ja
pop
inc
mov
sub
pop
jmp
movsb
xor
jmp
sbb
xor
or
mov
xor
push
or
xchg
lods
insl
inc
xchg
xor
or
movsb
inc
out
inc
mov
jg
mov
xchg
daa
mov
mov
pushf
or
in
push
inc
xor
idivl
lret
and
mov
jp
ds
sub
shlb
popa
push
mov
cwtl
jl
in
mov
add
cwtl
inc
xor
xchg
push
sar
mov
arpl
mov
mov
dec
addl
test
mov
or
rorb
in
dec
jns
cmpsl
insl
sti
pushf
xlat
lods
dec
and
cmp
inc
popf
fcomps
les
sub
jecxz
cmpb
sub
pushf
adc
and
imul
jnp
je
push
mov
pop
jbe
xor
sub
jns
fldenv
push
mov
leave
jmp
pop
adc
mov
mov
loope
stc
lret
mov
sub
mov
int
jne
bound
cmovl
jp
mov
jo
lods
lock
mov
mov
ret
lods
fldenv
loopne
push
adc
adc
lea
add
jge
add
dec
ja
loope
loope
xchg
jbe
rorl
lea
stc
test
mov
mov
outsl
xor
push
ss
mov
adc
and
mov
in
loopne
in
xchg
das
xchg
cmp
sbb
pop
jns
fdivp
lds
std
ds
sti
sub
xchg
scas
push
cltd
shll
loope
jmp
adc
mov
enter
pusha
cmc
lods
xchg
dec
in
xchg
push
nop
jge
or
testl
sub
sub
mov
mov
mov
cli
mov
aaa
jo
xchg
into
scas
mov
repnz
dec
ret
inc
stc
push
pop
scas
push
cmc
movsl
cmc
or
adc
mov
gs
pop
jg
frstor
xchg
popa
push
sbb
movsl
sbb
int3
and
cmc
ljmp
cli
mov
pop
imul
cmp
das
xor
in
inc
int
cmpsl
mov
cmp
adc
jne
sub
shrb
mov
popa
gs
lret
std
pop
push
xorb
cmp
ret
dec
add
fldcw
jl
and
out
pop
push
xchg
add
push
stos
push
outsw
mov
push
push
repnz
pop
push
pop
loop
js
lods
xchg
jge
lock
outsl
push
inc
sub
andb
out
scas
hlt
shlb
out
insb
repz
mov
cli
jecxz
ret
cmp
in
sbb
xchg
dec
mov
movsb
sbb
mov
dec
inc
dec
pop
test
pop
in
fs
icebp
mov
lods
imulb
xor
cmp
cmc
adc
iret
add
in
mov
scas
inc
imul
or
push
pusha
out
mov
sub
out
rcrb
repz
inc
push
push
pop
mov
lret
mov
mov
jb
lret
or
cli
jg
aam
mov
or
inc
pushf
rclb
sbbb
xor
adc
sub
adc
loop
int
push
jns
loope
adc
iret
dec
repnz
xchg
sbb
push
fnstenv
sub
xchg
jg
sub
pusha
cltd
rorb
cmpsb
jecxz
mov
loop
jbe
jnp
mov
inc
ret
mov
imul
pop
repz
cld
stc
pop
mov
add
mov
dec
aad
aas
xor
xchg
pop
sbb
mov
cmp
fistps
adc
sbb
sub
in
int3
movsl
xchg
xchg
jmp
mov
outsb
jbe
in
fwait
sbbl
sbb
add
aam
lahf
jno
cli
jno
pop
pop
dec
mov
movsb
sub
jmp
out
ret
sbb
in
add
or
add
jnp
xor
out
adc
pop
or
jb
mov
aad
xor
popa
in
ret
test
insl
jp
fimull
test
fstps
pusha
jg
adc
cmpsl
cmp
fisubs
into
pop
imul
lock
sub
cmp
dec
insb
inc
lret
mov
pop
mov
jp
pop
mov
adc
cmp
aas
mov
push
das
in
aaa
dec
sub
test
ljmp
lock
nop
xor
or
xchg
xchg
add
leave
sbb
pop
cmp
mov
loop
push
sbb
imul
jecxz
stc
idivb
rclb
incl
das
stos
xlat
cmp
lret
mov
lahf
push
adc
mov
mov
mov
sahf
add
pop
or
mov
movsb
pop
sbb
mov
jmp
sub
add
jecxz
inc
imul
stos
mov
jae
xchg
inc
add
mov
lahf
leave
jnp
in
aaa
pop
sub
adc
in
pop
mov
cltd
xchg
jecxz
push
and
push
or
loope
stos
xor
mov
push
cwtl
cmp
jmp
popf
es
sub
loop
push
dec
inc
stos
jge
pop
andl
inc
fistpl
jnp
inc
shlb
popa
cmp
int
push
outsb
push
xor
pusha
sbb
and
ja
cmpsl
add
push
adc
jnp
mov
mov
cmp
mov
cmpsb
es
outsb
icebp
test
in
push
or
and
clc
adc
addb
mov
test
or
out
les
mov
daa
insl
inc
sbb
test
mov
or
nop
dec
lahf
cmp
inc
sbbl
dec
loop
xlat
leave
out
push
cmp
jg
mov
jl
fwait
int3
aad
jns
in
bound
xchg
out
call
popf
cld
adc
sbb
pop
int
and
jnp
outsl
mov
mov
dec
cmpsl
xor
push
push
xchg
imul
jl,pt
jp
clc
movsl
sarb
fldcw
mov
repz
test
in
mov
and
shlb
xchg
mov
fcompl
lahf
mov
adc
pop
pushf
leave
sub
cld
lret
push
jl
shll
cmp
add
movsb
or
jne
js
fisubrs
sub
inc
jb
adc
jecxz
loopne
cmpsb
mov
sbb
inc
add
xchg
ja
inc
jno
aaa
jmp
mov
lahf
leave
jge
push
push
bound
lds
pop
add
jbe
dec
pushl
xor
inc
movsb
stos
xchg
cmp
cmc
cli
les
add
xor
sbb
sbb
add
out
or
addl
jmp
xchg
xchg
rorb
xchg
sub
inc
sbb
int3
mov
inc
pop
lods
lcall
cmpsl
mov
jmp
lret
hlt
gs
add
xor
notb
cmp
fdiv
hlt
in
fadd
pop
mov
mov
mov
shrl
loope
xchg
in
sarl
icebp
jmp
cmpsl
int
adc
int
idivl
xlat
iret
and
add
jo
fldcw
inc
jmp
xor
push
or
add
sub
movsb
mov
pop
and
adc
and
int3
add
mov
sbb
cmp
movsl
cmpsb
cli
mov
jp
inc
int
cmpsb
movsl
inc
mov
ss
adc
dec
mov
pop
dec
fneni(8087
rcrb
testb
bound
cmpsb
mov
push
push
pop
jmp
xchg
push
inc
or
add
sbb
push
mov
or
das
mov
test
imul
xor
fs
shrb
nop
jmp
sbb
push
xchg
rol
fstl
adc
xchg
ret
and
sbb
cmpb
subl
ss
repz
and
movsb
int3
dec
out
ds
ds
test
outsb
out
test
xor
pop
cmp
pop
fs
sbb
inc
pop
xor
pop
leave
push
repnz
sbb
outsl
mov
ja
addr16
loop
pop
jle
andl
dec
jne
mov
inc
sub
aas
pop
mulb
sub
mov
and
and
out
mov
or
jno
cmp
mov
scas
pop
or
and
repz
aaa
xchg
je
sahf
and
popa
mov
sub
lock
xchg
jl
sti
lahf
mov
push
cmp
subb
add
cmp
mov
mov
hlt
pop
out
push
inc
inc
fisttps
add
js
mov
cmpsl
sbb
mov
loope
and
inc
push
pushf
out
sub
fwait
test
or
shlb
mov
popa
cmp
lods
leave
into
lods
xor
and
iret
adc
fnsave
in
test
stos
and
xor
add
dec
ret
jno
sbb
sarl
jmp
mov
movl
jae
dec
pushl
ret
dec
sub
and
fwait
in
loopne
dec
mov
cmp
jg
push
clc
in
repz
je
push
jbe
dec
scas
mov
xor
push
mov
cld
lods
shll
out
jp
xor
mov
adcb
adc
lods
add
mov
inc
jns
arpl
mov
addr16
cs
or
cmp
pop
jb
push
test
pop
push
rcr
pop
stos
mov
push
mov
gs
push
add
loope
bound
lea
xchg
jo
mov
inc
dec
jne
jge
and
mov
push
addr16
addr16
out
testb
mov
loop
xchg
aad
sar
push
jbe
cmc
jg
sbb
cmpl
clc
andl
xor
mov
sahf
rcr
mov
and
pop
hlt
cmp
pop
mov
sbb
out
dec
jge
xchg
fisubrl
rolb
dec
and
mov
dec
jecxz
pushf
mov
mov
daa
xlat
mov
cmp
into
lods
xor
fcoml
jge
mov
mov
cmp
adc
adc
aas
pusha
outsl
add
xchg
sub
mov
cs
or
or
add
add
push
xchg
inc
fs
ret
xor
adc
and
adc
lods
ss
je
jp
pop
popf
xchg
jp
add
daa
mov
aam
test
cli
je
sub
cli
enter
cmpsb
xchg
push
xchg
push
sbb
mov
lea
push
cmp
sub
push
push
push
add
mov
add
mov
nop
mov
daa
xchg
and
mov
cmp
and
arpl
inc
mov
jbe
in
jle
in
mov
in
ja
jge
and
fmuls
hlt
mov
bound
fildll
mov
mov
push
out
ror
inc
push
jp
and
dec
subb
mov
aaa
jno
sbb
push
jb
pop
outsb
out
xor
xorb
sbb
fisubrs
sahf
ret
imul
sbb
jle
cmp
mov
push
xor
lcall
fcom
fsub
jecxz
pushf
add
outsl
jne
dec
in
inc
idivl
enter
clc
insb
popa
mov
in
fsts
jns
lock
in
sub
and
add
fiaddl
mov
sbb
jae
push
ss
fs
sub
stc
icebp
cmp
sub
inc
mov
out
inc
pop
mov
push
sbb
clc
xchg
pop
imul
fimull
int3
lret
or
shlb
xchg
jb
in
mov
and
xchg
es
adc
xor
mov
mov
push
vcvttps2dq
lods
movsl
test
jne
ljmp
inc
lock
shlb
ret
test
scas
shlb
pop
xchg
xor
jb
dec
adc
sbb
divl
mov
jnp
mov
sahf
out
push
sbb
daa
icebp
ja
mov
lea
xor
mov
pop
or
xchg
xor
insb
jne
sarl
sbbl
orl
sub
cmp
in
and
out
sbb
add
add
push
out
stos
mov
stos
jnp
lcall
mov
int
or
in
sahf
sbb
imul
lahf
sbb
mov
test
push
dec
into
or
push
cmp
hlt
movq
cmp
dec
push
orl
jae
movsb
xor
notl
into
lret
addb
popa
adc
hlt
into
cmpsl
add
pop
push
ret
push
pop
mov
push
insb
pop
and
icebp
mov
test
or
mov
jmp
jecxz
jno
js
dec
mov
or
add
xchg
or
out
imul
jmp
pop
lsl
test
dec
mov
nop
xchg
mov
cwtl
sub
subl
or
testb
xor
dec
nop
push
je
xchg
mov
enter
cli
in
fbld
push
mov
gs
dec
shll
lds
out
push
pop
pop
inc
dec
inc
mov
adc
lret
subb
jle
int3
xchg
fwait
int3
fwait
test
mov
sbb
mov
add
jl
mov
pop
loope
es
ja
or
jecxz
inc
jle
adc
sub
sbb
aam
xchg
mov
pop
vmovups
or
mov
inc
sarl
call
leave
xlat
imul
sbb
add
es
sbb
or
push
loope
xchg
andb
xchg
dec
lods
out
leave
lret
sbb
insb
xchg
inc
pop
stos
add
xchg
std
xor
insl
sbb
mov
mov
adc
sbb
mov
lock
jl
add
cs
pop
pop
js
mov
push
fnstsw
mov
mov
jne
mov
sbb
fidivrl
mov
mov
add
fcmovnbe
cmc
inc
rcr
inc
bound
jo
loope
scas
xchg
daa
sbb
jbe
aam
cmp
sbb
and
xchg
xor
dec
ret
imul
push
and
and
xchg
xchg
pop
jns
notb
scas
mov
insl
shrl
pusha
and
nop
fmuls
cmp
add
mov
mov
lcall
pushf
adc
fsubr
outsb
pop
pop
ja
popf
loopne
push
js
inc
or
push
jno
popw
and
fists
mov
je
loopne
xchg
mov
push
mov
xchg
jb
mov
or
add
hlt
inc
mov
int3
mov
arpl
fsubrl
imul
ss
gs
mov
aas
hlt
sti
jle
das
ja
aam
lret
shrb
mov
out
movsl
mov
nop
jnp
jmp
mov
xlat
test
and
nop
jb
sbb
sub
add
pop
jnp
mov
mov
jno
aaa
sti
pop
out
xlat
movsb
notl
cwtl
inc
test
enter
push
and
popf
xor
daa
adc
push
cmp
shr
mov
repnz
mov
mov
xchg
cmp
ret
or
mov
test
mov
add
outsb
mov
and
push
jae
out
jne
mov
outsl
lock
pop
notl
movsl
cmpsb
stos
scas
cmpsl
fidivrs
out
or
and
shrl
mov
cli
das
pop
or
mov
inc
adc
ds
gs
sub
or
jg
stos
mov
dec
jbe
adc
inc
negb
frstor
add
lds
arpl
mov
mov
mov
loope
sar
jae
sub
inc
xchg
sub
mov
scas
add
iret
jl
fcmovnbe
sub
fcompp
mov
jle
test
inc
jl
jns
mov
and
loopne
and
adc
mov
outsl
fisttpll
stos
outsl
jbe
std
in
out
ss
lea
outsb
lcall
jge
xchg
cmpsb
inc
push
and
jbe
popa
dec
fisubl
lods
jns
xchg
adc
fdivl
mov
sub
insl
imul
xor
inc
inc
in
xchg
and
mov
sbb
addb
dec
adc
mov
popf
pcmpgtb
rol
inc
fcomip
jmp
out
xor
and
mov
jne
push
mov
xchg
cli
dec
loope
push
outsb
jmp
mov
cmp
pop
mov
fsubr
lea
and
call
loop
mov
push
btr
mov
shlb
add
ret
fisubs
sbb
stc
clc
lea
test
sub
aam
sbb
push
inc
or
popa
repnz
stos
lret
xor
jb
imul
xchg
pushf
cmpsl
adc
mov
test
push
fcomi
push
shlb
stos
push
mov
push
jl
mov
fwait
in
push
mov
xchg
inc
dec
lcall
iret
jnp
scas
subl
xor
data16
or
cld
pop
aaa
cmp
add
jns
xchg
into
jb
out
jb
jae
pop
ficomps
push
dec
sub
dec
cmpsb
xchg
ljmp
movsb
inc
mov
fs
add
gs
pop
sbb
nop
cmp
faddl
daa
xor
sbb
push
inc
sub
fadds
inc
inc
jb
int
into
imul
ds
or
out
call
test
in
aas
xor
adc
fwait
jecxz
rdmsr
insb
inc
or
add
ret
or
leave
cmp
mov
push
imul
jge
push
gs
dec
icebp
mov
pop
add
ja
arpl
cmp
pop
out
add
test
jl
mov
out
test
loopne
test
into
add
cmp
cwtl
lock
imul
mov
bound
cmovo
test
mov
xchg
scas
mov
ss
cmpsl
pop
pop
fs
aam
pop
daa
ja
sti
insl
aaa
pusha
inc
dec
sub
lahf
ds
xchg
int
lods
lock
push
cwtl
in
lret
enter
dec
sarb
int
scas
pop
out
das
shlb
dec
sub
sub
lcall
out
les
mov
stos
cmpb
push
inc
test
push
in
std
xchg
pop
lds
jmp
fwait
pop
clc
jb
xchg
xchg
stos
push
out
je
mov
dec
dec
or
rcr
js
jns
popf
jl
pop
pop
int3
push
addr16
pushf
xor
fdivs
ret
inc
sbb
mov
mov
imul
int
mov
dec
hlt
add
es
inc
testl
loopne
enter
movsb
inc
test
enter
rcrb
push
push
sbb
fsubrp
test
cwtl
pop
scas
fcoms
mov
push
das
jp
sbb
repz
and
push
in
jae
push
pop
sub
jae
ss
shr
xchg
push
cwtl
sub
push
fisttps
jmp
mov
cmc
pop
fdivs
lock
xchg
rorb
cmpsb
jns
fadds
ljmp
setp
sbb
sbb
ja
popa
xchg
cmp
mov
xor
pop
push
adc
add
inc
int
lahf
ret
push
adc
jo
in
arpl
xlat
jle
addr16
out
sub
insl
sub
sbb
dec
addr16
and
fcmovb
test
pop
iret
or
aam
mov
xchg
les
inc
fidivrl
jo
movsl
and
dec
outsb
mov
inc
dec
xchg
jnp
notl
out
lcall
jb
rcll
imul
pop
cli
xor
mov
add
xchg
lea
fidivl
adc
cwtl
ds
std
movsl
addl
cmpsb
fildll
pop
jl
jge
or
sbb
dec
push
sbb
fcom
and
jns
lock
aad
cli
loope
aad
inc
pop
sbb
shl
dec
pop
fwait
mov
lds
mov
sbb
lcall
gs
and
es
fdivs
adc
mov
movsb
les
dec
jp
jae
loope
test
std
xchg
ja
sub
xchg
loopne
xchg
cltd
xchg
ret
pushf
ja
aaa
pop
or
add
ljmp
fbld
hlt
inc
sbb
fs
test
fildl
bound
jo
mov
lods
mov
xor
dec
mov
jb
adc
xor
repz
and
sub
leave
and
les
adc
sbb
pop
dec
gs
jge
or
xor
pusha
lea
mov
push
leave
and
mov
lret
imul
mov
ja
test
inc
jmp
push
shll
fisubrs
stos
push
inc
ss
arpl
cmp
inc
fldcw
sbb
out
push
outsb
jne
subl
pop
xchg
test
mov
bound
stc
or
out
inc
mov
add
cmpsl
inc
cmp
jmpw
mov
adc
jmp
mov
xor
push
pop
stos
sbb
cmp
cmp
adc
inc
mov
leave
mov
sub
xchg
mov
popa
dec
mov
sub
dec
dec
out
test
clc
mov
mov
xor
sub
dec
adc
mov
xchg
pop
sbb
push
pop
push
lods
lods
dec
pop
repnz
test
jp
xchg
leave
cltd
cmp
xlat
jl
fwait
mov
into
sub
push
mov
mov
mov
imul
sub
in
fimuls
ret
imul
psrad
or
lcall
xchg
stos
fwait
ja
test
je
repnz
mov
in
mov
mov
xchg
je
lret
popf
add
mov
lcall
or
fisttpl
mov
dec
xchg
inc
add
jle
cmp
subb
jo
into
mov
sbb
hlt
mov
int3
pop
fdivr
ficoms
inc
jae
sbbl
popa
out
stos
enter
lret
push
jnp
mov
nop
pop
push
aas
gs
je
mov
xlat
ss
repnz
mov
jp
enter
xchg
jl
mov
idivl
cmp
pop
sti
cltd
mov
lds
out
xchg
dec
pop
daa
xor
lods
insl
xor
call
sahf
xorb
push
adc
aad
mov
cld
xor
imul
stc
pop
pushf
jne
cs
fisubrs
mov
loopne
cltd
xchg
pushl
lock
xchg
aaa
xlat
inc
lcall
into
mov
or
stc
sub
pushf
in
movsl
or
addl
mov
mov
jnp
popf
pushw
enter
xchg
in
adc
pop
and
dec
inc
mov
shr
sub
insl
movsl
dec
xchg
push
imull
mov
ret
sbb
xchg
les
cli
push
jecxz
pushf
ds
mov
pop
add
pop
push
inc
jno
daa
pop
adc
cmp
ret
mov
fwait
loopne
rorl
imull
call
scas
lcall
test
mov
jmp
movzbl
mov
cmp
addr16
sub
outsb
mov
out
and
jnp
ja
insb
ds
xor
adc
enter
pop
lcall
std
inc
test
icebp
dec
pop
das
add
mov
dec
adc
cmp
and
movsb
movsl
mov
mov
lcall
ss
daa
mov
mul
aas
jecxz
inc
add
ret
pushl
je
adc
adc
in
xchg
adc
pop
add
fcomp
inc
xchg
shlb
fidivl
inc
in
mov
pop
xor
mov
sub
adc
inc
mov
stos
or
jmp
sarb
sub
leave
push
xor
fcoml
ffree
fwait
call
loop
jp
xchg
int
in
add
xchg
fwait
dec
pop
push
andb
cltd
out
adc
int
mov
lret
add
stc
dec
jae
push
cmp
sbb
xchg
ret
ret
and
jno
ljmp
jns
jae
pushf
or
mov
call
jne
gs
xchg
sub
or
lock
xchg
jo,pn
mov
sahf
mov
test
dec
mov
into
pop
jae
in
sub
test
out
popf
sbb
fmull
mov
stc
lock
sub
scas
aas
xchg
jb
dec
push
cmpsl
popa
push
jne
dec
inc
movsl
test
movb
pop
test
mov
cmpsb
aas
pop
sbb
fst
mov
jae
xchg
xchg
inc
mov
push
xor
ljmp
add
mov
pop
pop
push
lret
test
lods
dec
or
fwait
jns
scas
dec
in
mov
dec
xor
sti
aad
mov
mulb
jmp
adc
xchg
mov
mov
adcl
fimuls
mov
cmp
ficoml
xor
xlat
sub
iret
sub
js
stos
ret
pop
mov
mov
mov
add
pop
jg
mov
fdivp
xor
ss
dec
xchg
cltd
fidivrs
mov
rorl
jbe
add
push
into
outsl
das
push
and
push
mov
mov
cmp
stc
inc
adc
push
adc
sarb
xor
int
add
mov
xor
cmp
push
mov
lret
ja
adc
lahf
fimuls
mov
inc
shll
insb
mov
dec
xlat
loopne
movsb
mov
pop
cmp
push
pop
je
in
adc
dec
pop
stos
aam
movsl
mov
adc
adc
sub
dec
mov
repz
xchg
adc
js
xchg
pop
add
out
mov
adc
mov
xchg
lods
mov
and
add
clc
mov
ja
mov
repnz
mov
ds
fidivrl
mov
adc
dec
insb
addr16
or
ljmp
iret
cmpsl
fistps
icebp
das
or
dec
pusha
call
sub
movsb
inc
std
sahf
iret
adc
xor
pop
and
movsb
sbb
or
les
jns
test
outsl
clc
cmp
push
mov
hlt
and
roll
aad
clc
mov
cs
push
mov
mov
ss
push
and
daa
xor
sub
xchg
in
or
cmp
xchg
adc
jnp
or
pop
cmc
inc
sub
fwait
mov
mov
fistps
mov
ds
xchg
mov
jne
jnp
and
dec
sbb
in
add
aam
into
sbb
inc
push
in
fs
mov
jne
mov
rcrl
xchg
jecxz
pop
jne
out
jb
and
cmpsl
movsl
mov
stc
ds
aad
push
insb
nop
or
push
lds
and
pop
xchg
push
sub
or
lcall
jl
out
lods
ret
test
or
lds
mov
rorb
mov
pop
jge
into
mov
ftst
mov
divl
fadd
inc
mov
add
js
jp
sti
outsl
sbb
push
cltd
pop
mov
jne
mov
pushl
and
jb
divl
mov
cmp
mov
sbb
stc
cltd
out
sbb
or
insb
arpl
mov
fcmovnu
pop
pop
jg
mov
std
push
mov
adc
mov
lret
xchg
out
test
jnp
inc
jno
xor
rorl
push
mov
add
add
dec
lea
xchg
mov
adc
sub
out
or
mov
pop
jnp
movsl
dec
iret
jecxz
mov
push
jp
divl
push
mov
fdivs
lahf
mov
and
test
xor
xchg
clc
mov
in
sarb
sub
out
aad
popa
jle
xchg
or
daa
loopne
xor
ret
add
mov
xchg
cld
lret
popf
add
call
pop
and
popa
std
aaa
hlt
cmp
cwtl
pop
inc
jns
xorl
imul
jp
push
xor
jp
push
cmpsb
test
or
lahf
lods
inc
imul
outsb
stos
aam
cld
and
pusha
cmpsl
sub
mov
insl
dec
mov
fs
stos
or
jbe
cmpsl
ffree
add
xor
push
push
jmp
in
jne
mov
adc
dec
das
cmp
rorl
shll
leave
mov
cmp
push
fdivrl
add
mov
adc
out
pop
or
std
js
push
dec
xchg
push
pop
out
adc
lea
ds
ret
inc
adc
xchg
dec
sbbb
or
bnd
push
or
adc
xchg
pushf
ds
lret
gs
push
mov
sub
add
mov
pop
clc
jecxz
aaa
push
iret
sub
cmp
es
cwtl
push
scas
sarl
lret
xor
xor
sarb
push
lcall
stos
mov
push
jmp
dec
adc
stos
loope
cmpsl
jge
gs
push
xchg
jo
filds
and
ret
cli
or
mov
in
out
out
cmp
enter
test
sub
and
cmp
or
push
inc
aad
jbe
stos
dec
insl
jae
dec
sahf
push
sbb
ljmp
rolb
sub
inc
fcmovnu
xor
lcall
bound
inc
test
mov
popa
in
mov
bound
xchg
into
mov
rcrl
adc
push
testb
in
push
jecxz
dec
inc
jecxz
mov
testb
fs
scas
cmc
xchg
dec
subb
std
mov
sub
stos
push
rcrl
jmp
pop
cmp
cs
test
cmp
inc
pop
push
lock
inc
jbe
push
sbb
mov
vpsraw
lcall
testb
xor
xchg
sub
adc
popf
mov
xchg
outsb
pop
mov
fdivp
inc
mov
pop
inc
leave
imul
cmp
pop
fbld
in
sbb
enter
mov
push
rcr
jno
sbb
mov
xchg
in
and
aaa
xchg
xor
cmpsl
lds
pop
insl
xchg
or
in
imul
xor
leave
js
push
or
loop
popf
xchg
sarl
add
hlt
mov
push
lret
mov
xor
outsl
cltd
fcmove
jb
data16
hlt
call
push
arpl
insb
jmp
fisttps
int3
dec
xor
jl
jge
insb
and
popa
pop
pop
adc
adc
ret
or
fstl
into
loope
mov
jmp
mov
cmp
ljmp
out
andl
std
rcr
mov
and
call
outsb
shr
in
pusha
sar
sub
insl
and
push
sub
sbb
cmp
xlat
movsl
fsubrl
or
dec
mov
nop
outsl
sti
and
jp
test
repnz
xor
enter
mov
orl
push
lcall
xchg
aas
test
out
decl
xor
js
adc
xor
sbb
test
gs
mov
stos
inc
mov
sar
int
xchg
cmp
lret
mov
jp
stos
xchg
stc
push
inc
adc
push
cwtl
adc
inc
je
in
outsb
cmp
in
mov
cmp
adc
push
in
iret
shrl
lret
mov
jg
pop
scas
inc
into
popa
jecxz
xchg
mov
jmp
or
arpl
les
sub
and
sbb
unpcklps
sbb
loopne
movsl
rclb
daa
push
xchg
mov
add
pop
mov
sbb
shrb
cltd
pop
imul
pop
pushf
and
mov
push
imulb
or
xor
sahf
rcll
frstor
cltd
daa
not
inc
int
cmp
lcall
sub
mov
shlb
loop
or
out
add
mov
ja
sbb
insb
loop
sbbl
sbb
mov
aas
aam
ret
push
sub
and
test
mov
pop
outsb
sub
mov
and
hlt
dec
nop
jnp
and
pop
dec
scas
jmp
bound
dec
mov
and
stos
mov
jmp
loop
leave
fsubr
out
jno
dec
div
sbb
jns
push
ds
scas
mov
movsl
pushl
jae
mov
sbb
ret
cltd
nop
jg
mov
out
out
lahf
inc
or
mov
adc
cltd
cmpsb
and
xor
cmp
in
hlt
xchg
pop
mov
cmp
sbb
and
xchg
mov
cmp
pop
adc
adc
pop
xchg
push
imul
add
push
std
cltd
dec
sub
cmp
aam
sub
sbb
rolb
popf
nop
mov
imul
sar
xor
jmp
xor
je
dec
cmp
jb
mov
jg
dec
sub
out
lret
or
push
cwtl
mov
sub
leave
loope
add
popf
and
dec
xchg
shl
scas
xchg
jae
pusha
das
xchg
xchg
imul
and
xchg
dec
pushf
test
shll
ds
imul
loope
xchg
and
push
push
add
pop
test
xor
dec
or
test
shrl
pushf
scas
mov
loope
pop
popf
xchg
mov
jno
clc
cmp
imul
sbb
pop
pop
or
stos
lea
mov
sahf
in
lahf
testb
adc
add
inc
rorl
mov
ja
nop
xor
sbb
push
jge
sti
clc
and
lahf
cmp
jo
shll
enter
jge
aaa
jne
dec
fwait
sub
roll
mov
push
xor
lods
test
mov
divb
in
fimuls
mov
jp
andb
and
std
inc
leave
pop
add
xor
test
and
cmpsl
std
sbbl
mov
inc
jne
or
pop
ss
or
outsb
arpl
fdivrl
cmp
dec
bound
xor
sbb
push
mov
or
and
pop
pop
aas
sub
push
sub
jae
fmulp
push
pop
in
mov
xchg
rclb
fs
cmp
pop
inc
data16
dec
xor
jo
into
scas
addr16
stos
xor
inc
and
xchg
cmp
and
in
clc
push
loop
lea
jno
mov
mov
jbe
cld
test
aam
dec
and
sbb
adc
negl
jno
inc
out
in
xlat
adc
pop
fsub
mov
inc
outsb
sub
lods
push
filds
mov
pop
jbe
mov
mov
and
arpl
inc
inc
sarb
jg
jae
inc
inc
cld
int3
jge
mov
inc
cmp
cmc
or
lock
push
jb
shlb
fcmovnb
ss
xlat
pushl
or
inc
push
int
xor
cmpsb
lods
add
das
sub
out
mov
lcall
inc
pusha
push
sbb
jmp
idivb
push
inc
xor
add
push
ljmp
repnz
sbb
ret
cwtl
scas
out
adc
inc
imul
jecxz
dec
add
or
fsubs
xchg
clc
dec
sub
out
jne
jl
icebp
movsb
sbb
in
mov
jnp
scas
mov
xor
call
add
xchg
shlb
or
push
cmpsl
mov
lock
sti
push
aad
sub
push
push
mov
lret
dec
xor
cmp
pop
scas
sbb
pop
cmpsl
lods
pop
push
ficomps
push
mov
xor
sub
sub
or
ficoms
cs
push
popf
pop
sub
inc
mov
fnsave
push
test
or
les
xchg
push
and
jb
sub
bound
rcr
mov
mov
xchg
adc
rcrb
mov
fwait
and
cmp
pop
cmpsl
divb
sub
pop
jb
push
pop
add
pop
mov
btc
jg
call
and
movsb
icebp
mov
cltd
fs
aas
aaa
pop
addr16
push
aam
jp
shrl
mov
outsb
fdivrs
jg
cmp
mov
adc
leave
jnp
dec
aam
sub
jge
jge
jmp
inc
pushf
mov
add
mov
xor
nop
inc
inc
sbb
fiadds
dec
mov
mov
cmp
repz
sti
testb
sbb
lock
lea
outsl
mov
lods
pop
jae
push
out
jne
in
hlt
xor
xor
xchg
out
loopne
pusha
sbb
mov
and
in
adc
sub
xchg
ret
mov
invd
cmc
sti
xor
add
outsl
mov
push
xlat
xchg
xchg
jno
fsubrp
mov
test
xchg
pop
or
fmuls
jae
xor
loop
cld
data16
pop
insb
mov
and
xchg
shl
push
dec
xchg
mov
je
pop
adc
movsl
in
into
push
mov
xor
loopne
cli
popa
sbb
adc
cld
fadds
iret
jo
adc
sbb
push
jnp
jmp
js
push
lret
xor
roll
xchg
jmp
mov
cmp
leave
out
mov
test
subl
push
cmc
add
and
dec
pop
mov
xchg
je
pop
pop
popa
xlat
mov
cltd
leave
xchg
fs
lea
dec
andps
fadds
mov
push
fwait
and
push
loop
cmp
add
sub
add
ljmp
gs
xor
jmp
or
or
aas
fisttpll
add
and
gs
cmp
mov
add
add
pushf
xchg
mov
push
ja
bound
imull
xchg
jecxz
mov
cmp
lret
and
fdivrs
and
xor
push
and
and
mov
mov
lds
and
adc
jle
mov
xchg
mov
ret
mov
out
cmp
or
mov
or
out
aas
fidivrs
and
or
xor
pop
mull
add
xchg
cmpl
adc
movsl
mov
out
shlb
andb
fs
test
adc
in
jmp
scas
dec
pop
outsl
xor
popa
mov
cmp
lret
ljmp
inc
repz
pop
cmp
dec
mov
imul
mov
lahf
add
cmp
mov
xchg
je
pop
and
test
stc
xor
enter
pushf
inc
jno
hlt
push
adc
lock
mov
cmpsl
push
mov
lds
test
mov
mov
sbb
andl
sub
sbb
fwait
mov
sti
cmp
cli
adc
ficoml
mov
fmull
nop
xchg
insb
push
je
xchg
mov
cld
not
fstps
or
pusha
dec
imul
sbb
and
loope
loop
xor
mov
and
cld
ss
sub
cmp
pop
lods
test
dec
pop
add
xchg
out
movsl
sti
xchg
mov
in
cmp
jbe
push
mov
cmp
mov
mov
mov
stos
xchg
sub
push
inc
mov
lds
stos
xchg
ss
in
call
push
dec
and
pop
xor
es
inc
shl
adc
idiv
out
aad
xlat
pop
push
lahf
divl
jl
sub
pop
push
out
popf
lret
outsb
push
xor
inc
add
out
mov
add
jmp
out
sarb
add
dec
adcb
mov
mov
jno
mov
enter
push
pop
or
insb
adc
rcrb
test
test
test
fisubrs
and
push
add
push
mov
addb
ja
xchg
bound
stos
stos
scas
testb
ret
stos
negl
dec
pop
in
cmp
mov
add
push
data16
daa
cmc
sbbl
lock
rol
push
mov
xlat
add
pop
sub
lods
dec
std
enter
ja
je
iret
inc
aas
out
das
or
sbb
pop
add
ss
bound
sub
aas
sbbl
mov
fists
add
mov
pop
or
lds
iret
mov
movsb
hlt
sar
xlat
inc
mov
mov
jl
push
inc
adc
aad
aas
loope
dec
cld
rcr
movsl
iret
lahf
push
sub
fs
cld
sti
or
inc
xchg
lds
cmp
push
inc
test
sbbl
rclb
inc
cmp
jo
popf
mov
out
cmp
cmp
adc
sub
repz
or
mov
sbb
in
lret
jne
mov
mov
pop
jo
xor
xchg
orb
fwait
xor
cmp
rcll
into
pop
pop
in
je
push
inc
xor
push
cwtl
mov
stc
movsb
push
xchg
sbb
pop
sarl
mov
mov
add
xchg
push
out
or
rep
pop
jle
push
xor
fcmovne
lods
xchg
cltd
in
cmc
iret
inc
or
mov
or
movb
and
jg
mov
es
xor
les
push
adcb
or
sbb
sub
push
ret
out
ret
add
xor
jmp
clc
push
bound
mov
mov
adcl
push
inc
adc
fwait
inc
and
add
les
add
dec
es
mov
arpl
test
in
xchg
fstp
jp
cmc
push
out
int3
xchg
bound
pop
pop
clc
in
iret
outsl
adc
push
lahf
mov
or
orl
fs
lahf
and
lea
in
jo
push
add
sub
aas
push
out
push
maskmovq
mull
out
rorl
mov
out
xchg
sub
xlat
test
xchg
dec
push
cmc
jge
jns
stc
roll
xchg
in
pushf
push
inc
dec
movsl
xchg
or
xchg
inc
in
sbb
enter
sub
push
add
in
je
scas
shll
nop
sub
rdpmc
jno
xor
sbb
jmp
leave
pushf
and
push
addb
xchg
inc
testb
and
lea
sub
mov
or
inc
js
jle
push
iret
insl
cmp
ja
scas
adcb
pop
cld
mov
pop
addr16
call
xchg
mull
jne
cmp
add
inc
or
add
test
mov
popf
loopne
leave
sub
sub
arpl
cmp
jmp
push
mov
push
fisubrl
fs
xor
iret
outsb
pushf
outsl
repz
addl
dec
cmpl
jns
xor
dec
popa
or
dec
mov
pop
sub
mov
stos
pop
lcall
sbb
mov
adc
and
lret
xor
popf
xor
dec
xor
sbb
xchg
std
scas
jmp
or
lods
cmpl
scas
jmp
loop
lahf
xchg
cmp
pop
pop
mov
mov
xchg
and
ret
loop
sbb
push
lret
and
bound
in
pop
outsb
mov
fwait
or
sub
sarl
lds
mov
add
xchg
rolb
jns
fildll
mov
test
jne
jo
cli
pop
imul
pop
cmpsl
inc
fyl2xp1
lcall
aam
cli
mov
cmp
xchg
mov
mov
test
fdivl
pop
mov
fsts
xor
scas
outsb
lahf
in
insl
add
testl
movsl
push
add
and
push
lods
dec
fmul
pop
mov
cmp
mov
not
mov
sbb
dec
mov
mov
adc
mov
pusha
push
inc
ror
sub
xor
xor
dec
inc
es
cwtl
into
aam
inc
cmp
dec
xchg
bound
mov
lcall
andb
lods
push
cmpl
sbb
mov
xchg
popa
cmpsb
data16
dec
insb
cld
mov
push
imul
sub
fdivl
ljmp
fdivs
inc
sub
xchg
sbb
aad
or
add
loop
pop
shrd
jle
outsb
inc
push
or
push
insl
pop
mov
cmp
rcll
inc
push
out
insb
jg
in
xchg
pop
shrb
sub
aas
jae
xlat
fidivl
xor
fucom
sbb
cld
scas
push
pop
mov
movsb
lock
sahf
inc
leave
lcall
mov
push
aad
push
lods
and
sbb
and
enter
ret
jo
cli
sub
adc
pop
push
pop
push
fdivs
mov
cmpl
inc
and
lds
sub
out
xchg
mov
dec
lds
jmp
lea
lcall
idivb
push
xor
or
push
movsb
sbb
xchg
sar
cli
imul
mov
das
mov
push
dec
imull
adc
rclb
inc
xorl
ds
cmp
cmp
mov
and
sbb
mov
push
or
sbb
outsb
lret
mov
xor
enter
push
shl
add
mov
loope
adc
inc
test
test
push
jo
mov
repz
add
repnz
fs
mov
adc
add
push
dec
sbb
mov
push
movsl
mov
xchg
loope
leave
inc
xor
pop
and
xchg
xlat
mov
pop
xchg
cmp
fimull
ds
xchg
je
push
dec
cmc
sbb
xchg
adc
and
popa
jg
mov
xor
inc
xor
pop
aam
push
pop
dec
shll
pop
loope
push
jle
adc
shrb
pusha
rolb
mov
loop
nop
sar
sarl
rolb
scas
cmp
xor
inc
cmp
and
testb
xchg
jp
mov
xor
es
in
pshufw
cmp
jmp
shrl
movsb
lret
lds
leave
push
push
ret
inc
in
ret
insl
xchg
test
add
adc
push
cwtl
sbb
ds
lcall
into
or
xchg
push
sahf
out
dec
out
call
pop
sub
push
lock
cmp
inc
dec
test
or
jp
inc
in
jg
outsb
adc
add
adc
jmp
out
sbb
and
adc
lods
xchg
std
movups
jbe
mov
iret
rcrl
xorl
pop
clc
daa
cwtl
sub
int
fs
or
movsb
je
test
xchg
push
push
adcb
cmp
ljmp
mov
jmp
push
mov
test
gs
dec
out
fadd
adc
stos
cmc
mov
loope
cmc
sub
fbld
loop
cld
xor
das
repz
fldcw
sti
jp
mov
jecxz
and
add
jmp
into
jo
adc
stos
mov
adc
std
enter
flds
cmp
inc
addl
cmpsb
jns
sbb
data16
push
jl
aas
insb
imul
fcoml
jnp
fwait
cmp
pop
pop
negl
insl
xchg
or
xor
mov
mov
cmpsl
pop
dec
dec
rorl
imulw
xchg
cmpsb
jbe
outsl
int
in
mov
mov
mov
jg
jmp
push
inc
ds
push
push
mov
int
outsl
mov
movsb
jo
cltd
xlat
or
inc
inc
fwait
lret
adc
or
mov
inc
push
mov
and
test
xchg
mov
sbb
xor
pop
mov
fwait
adc
push
mov
pop
push
in
jl
adc
xor
push
add
sub
push
sub
out
rcrb
and
xlat
aam
fwait
push
lcall
or
mov
movsl
add
and
arpl
mov
cwtl
cmp
loope
sbb
outsl
nop
mov
lds
mov
xchg
movsl
outsb
std
jb
sub
lret
mov
sbb
push
pop
test
push
les
sarl
sbb
loope
stos
or
xor
mov
mov
mov
jl
xor
ss
hlt
hlt
push
sahf
lea
fdivr
lcall
adcb
pop
xor
je
pusha
inc
rclb
jge
insb
mov
jmp
or
lea
data16
cs
push
push
mov
mov
or
and
lea
push
lret
into
push
out
cmp
pop
mov
jnp
mov
dec
pop
mov
cmpl
lahf
and
push
iret
fldenv
push
subl
stos
pop
cmpsb
adc
pusha
mov
ret
or
lds
jbe
gs
push
stos
or
pop
arpl
xchg
loope
xchg
jmp
inc
fmul
jg
dec
mov
sbbb
iret
pusha
mov
mov
jmp
sti
inc
push
mov
in
movsb
ds
pop
mov
xchg
pop
jecxz
insb
outsb
inc
loopne
popf
inc
mov
incl
notl
idivl
outsl
data16
xchg
setbe
test
push
jle
loopne
xor
lods
or
mov
fidivrl
sbb
push
in
jl
push
push
out
add
or
andb
push
sbb
int3
mov
clc
subl
xchg
decb
mov
and
and
pusha
lea
jmp
jge
mov
lret
lea
mov
mov
mov
dec
sqrtps
adc
sti
scas
fdivrs
pop
test
cmp
ds
mov
xor
add
movsl
adc
mov
mov
xor
adcl
pop
testl
jne
test
sbb
xchg
incb
incb
jp
repnz
ret
lods
test
in
or
fidivrl
in
sbb
lret
ljmp
imul
out
cmpps
mov
and
enter
mov
sbb
shl
dec
in
fisttpll
cmp
sub
subb
sbbl
add
adc
jns
push
fs
mov
insb
xor
push
sbb
jne
add
pop
outsb
add
enter
mov
xchg
push
push
insl
mov
faddp
push
adc
fldenv
xchg
cmpb
sub
or
cmp
or
fwait
or
pushf
cmpsl
int3
loope
cmpsl
mov
dec
dec
sbb
inc
outsb
mov
xchg
ja
jle
iret
aad
into
sbbl
dec
adc
sbb
into
les
sub
sbb
jbe
adc
fsubr
mov
dec
mov
shrb
loopne
or
stos
lods
xor
jo
xor
jnp
dec
addr16
lea
rcr
push
mov
sbb
pop
mov
pusha
aaa
stc
push
push
xchg
loopne
movsb
pusha
lea
push
mov
pop
jns
gs
inc
lret
vpsubusw
in
cmpsl
inc
mov
ljmp
pop
cltd
push
popa
in
enter
pop
insb
lret
mov
mov
cmp
lret
mov
pusha
add
dec
out
shrb
mov
mov
cmp
outsl
dec
movd
fisubl
adc
or
stos
inc
sti
mov
cmp
repz
lahf
fsubrl
xchg
pop
std
inc
pop
push
rorb
and
out
in
cmp
dec
push
dec
pop
out
mov
add
test
adcb
pop
xadd
add
xor
cmp
insl
imul
sub
mov
lahf
out
sbb
sub
push
adc
and
push
xchg
jne
std
adc
xchg
les
aas
pop
push
shlb
addb
gs
push
mov
xchg
sub
lods
rorl
fimuls
clc
xchg
je
outsb
mov
sub
mov
add
shlb
mov
out
lods
int3
inc
cmp
insl
adc
mov
mov
loope
outsb
rol
xor
mov
pop
mov
nop
lods
sbb
xchg
sub
mov
jne
or
in
bound
cld
push
mov
xchg
cmp
add
and
mov
xchg
rcrb
jno
mov
movsl
jns
imul
test
cwtl
add
clc
or
push
mov
jo
cmpsl
jp
lahf
cmp
ret
xor
mov
out
push
and
push
mov
cmp
loopne
cmpsl
addr16
imul
loop
mov
xchg
nop
lret
sahf
out
shlb
das
jp
push
lods
mov
and
ds
cmc
aad
insb
cmp
aam
and
rorb
push
pop
das
pushf
cltd
dec
cmp
stos
cmp
loope
jnp
in
enter
push
add
in
in
lcall
sbb
sbb
jne
idiv
repnz
push
or
clc
cltd
int
mov
and
push
mov
xlat
inc
adc
mov
aaa
sub
mov
and
lea
xchg
xor
sbb
je
push
xor
xor
or
mov
ljmp
add
in
push
or
push
jecxz
pop
or
fdivrl
fnstsw
test
das
jle
repz
lock
shl
mov
push
cs
push
mov
mov
mov
mov
movsl
add
xor
dec
pop
or
lret
shl
mov
test
inc
jae
xchg
push
mov
adc
mov
ret
adc
dec
add
jle
sbb
push
fsubr
and
sbb
push
mov
xchg
xor
outsl
dec
stos
jnp
daa
pmaxub
xlat
popf
inc
bound
lods
out
dec
mov
or
push
mov
hlt
arpl
push
and
dec
and
out
xchg
ror
js
cmp
cmp
and
loop
das
jecxz
mov
add
loope
sub
insb
mov
lea
mov
popf
ja
nop
sahf
add
fisttpl
xchg
dec
adc
or
insl
lret
adc
pop
scas
fisubrs
repnz
pushf
hlt
sbb
lock
push
lods
push
js
mov
dec
insl
shl
outsl
jnp
mov
xor
xchg
int3
and
aas
mov
mov
xor
je
call
cmp
pop
sahf
xor
out
idivl
push
hlt
enter
sub
cli
xor
inc
rclb
lock
and
jbe
sub
xor
push
mov
les
in
pushf
cmp
sub
int3
insb
sahf
shrl
hlt
mov
add
push
or
std
pop
daa
inc
jmp
dec
sbb
mov
jb
loop
xor
mov
aas
aad
mov
lret
inc
int
addr16
stc
loop
scas
push
nop
into
mov
loope
sahf
sahf
mov
xor
adc
and
popf
std
mov
jp
aaa
and
repz
sahf
and
jnp
adc
jmp
gs
cwtl
push
jo
mov
and
fsubl
outsb
aaa
cmc
lahf
add
mov
sub
out
rorl
shr
addr16
test
cmp
div
mov
cwtl
fsubl
mov
negl
sub
push
leave
fildl
cmovs
packuswb
in
dec
cmpsl
int
daa
push
pop
jno
testb
hlt
adc
jp
add
push
jmp
subb
or
addl
sub
enter
push
js
jle
in
scas
in
xor
sbb
movsl
shr
movsl
cmpsb
outsl
sub
lock
outsb
dec
mov
cs
jbe
jg
dec
sub
sbb
aam
sahf
sub
sub
rcll
xlat
add
outsl
sub
mov
fcmovnb
in
inc
mov
mov
and
negb
notb
mov
repnz
xchg
dec
fwait
mov
cmpsl
lock
mov
pop
cli
and
xor
mov
mov
or
test
mov
xchg
mov
add
jbe
pop
mov
aaa
inc
mov
lahf
adc
push
xchg
jmp
ljmp
dec
pop
fmuls
imul
push
add
mov
mov
mov
les
sub
or
cmp
inc
hlt
jmp
out
out
fildl
imul
lret
ja
pop
cmc
aas
mov
fcompl
lods
mov
cld
es
mov
popa
and
and
xchg
sub
push
ret
out
sahf
inc
xor
inc
sub
outsb
jge
test
in
or
int3
mov
inc
pusha
mov
pop
jmp
xchg
outsl
fs
push
adc
in
push
dec
adc
push
movsl
xlat
cmpsl
sti
mov
pop
adc
pop
imul
xchg
mov
add
mov
or
pop
xchg
dec
bound
add
popa
push
xchg
dec
xchg
dec
ja
jbe
inc
scas
int
into
lods
stos
mov
xchg
mov
pop
incb
mov
mov
sub
push
xchg
inc
or
les
insb
mov
cmpsl
mov
dec
fwait
push
sar
outsl
loop
subl
test
xor
clc
pop
sbb
into
add
pop
in
stos
lods
stos
out
ret
cld
aaa
jmp
subl
lods
pusha
pop
fisubrs
sahf
push
mov
xchg
iret
push
hlt
push
lods
push
jp
pop
jbe
lods
pop
das
mulb
aas
cmpsb
pop
cmp
jmp
lods
andb
dec
pop
movsl
pop
pop
andl
lods
inc
stos
es
ret
mov
popa
mov
in
xchg
adc
in
leave
mov
mov
testb
aaa
aam
sbb
inc
dec
pop
or
xor
and
xor
sub
mov
fdivl
sahf
cli
stos
fs
arpl
mov
mov
outsl
mov
cwtl
iret
stc
sbb
jnp
push
loop
icebp
jb
loopne
pop
mov
mov
dec
loope
cld
sub
andl
jns
icebp
push
sahf
push
fidivl
jbe
into
or
or
int
xor
cmp
imul
adc
shr
inc
aas
pop
scas
rol
fs
dec
xchg
test
jno
call
lock
xchg
sarl
bound
or
mov
cli
sbb
xchg
mov
mov
and
mov
in
es
je
call
aaa
testb
pop
cltd
and
ss
lods
cmpsb
xchg
inc
stos
add
mov
gs
jae
mov
scas
shl
push
mov
dec
js
add
cmpsl
cmp
movsb
fcmovu
lea
sbb
mov
mov
adcb
push
imulb
mov
mov
cmp
mov
pushf
jg
mov
adc
pop
popa
pop
pop
fst
jge
scas
je
xor
cltd
push
xor
cli
and
flds
movsb
add
out
pop
push
cltd
aam
mov
pushf
test
mov
xor
adc
push
xchg
mov
xchg
cwtl
in
nop
in
data16
and
dec
mov
in
mov
out
mov
icebp
sbb
sub
pop
addr16
push
shlb
dec
insb
jne
cli
add
mov
or
dec
test
or
enter
ja
jns
xchg
xchg
orb
cmp
shlb
inc
add
push
aaa
sbb
mov
mov
scas
out
inc
repnz
sbb
mull
out
jle
cmp
daa
sbb
lock
xchg
mov
pop
mov
loopne
into
fcmovnbe
stos
mov
ss
inc
or
popa
es
clc
negb
test
xchg
jne
subl
xchg
das
xor
mov
push
inc
fimuls
daa
sarb
mov
jne
repz
fistpl
mov
jae
mov
mov
loope
aad
aad
mov
int
add
sbb
aad
mov
clc
sub
mov
push
int
mov
jp
add
out
mov
push
xchg
std
lcall
and
cwtl
int
xchg
hlt
or
sub
xchg
add
pop
pop
cmp
xor
fcomps
pop
pop
rcrb
js
mov
mov
push
xor
adc
leave
aas
ds
nop
mov
push
add
adc
jbe
cmp
cmp
test
mov
ficompl
and
xchg
insb
mov
out
stos
push
pop
mov
sbb
sub
aaa
ret
xorl
mov
in
adc
jbe
fists
dec
adc
lret
and
jg
adc
pop
or
mov
jnp
xlat
cmp
stc
xlat
adc
out
mov
out
sarb
rcr
stos
loop
cmp
dec
xchg
mov
xchg
xchg
loope
fwait
inc
xchg
adc
adc
and
negl
pusha
outsl
mov
js
push
mov
cld
js
or
out
movsl
fdivrl
call
iret
or
es
cmc
jnp
enter
pop
stc
xor
mov
iret
and
test
jo
add
loopne
ror
xorl
sub
cwtl
sub
in
or
incb
test
mov
stc
push
inc
fwait
pusha
jne
dec
inc
ud2
xor
das
sbb
add
ror
inc
icebp
fildll
pop
or
xor
xchg
rolb
dec
jbe
xor
mov
add
repz
shrb
xor
add
shlb
cmpsl
out
push
lods
ljmp
popa
jle
ret
shll
imul
arpl
mov
pop
inc
pop
lret
and
vcmpps
incl
fiadds
sbb
test
or
lcall
fidivrl
push
pop
sub
jecxz
outsb
push
lds
aas
sarb
into
sub
pop
jle,pn
iret
xchg
lret
aas
cmpsl
mov
sbb
jmp
sbb
jo
push
mov
mov
mov
sahf
aad
js
mov
test
fidivrs
mov
sbb
out
or
pop
lcall
repnz
ss
push
xchg
or
test
or
addr16
fcomps
or
leave
addr16
push
cmp
and
pop
inc
test
pop
adc
push
xor
jp
pop
jle
mov
cmpb
xchg
pop
loop
pop
jmp
mov
ljmp
cmpsb
jle
sbbb
int3
mov
and
or
stos
sub
xor
mov
popf
leave
ret
mov
sbb
inc
fdivs
mov
int3
test
filds
sub
sub
js
fsubrs
push
inc
push
mov
ljmp
add
inc
or
inc
jg
in
sbb
outsb
xchg
in
push
bound
shr
jo
psubsb
sbb
mov
ss
sub
lods
loopne
aam
rclb
cmp
pop
imul
jbe
fsubl
pop
repnz
rolb
icebp
testl
cmc
jge
dec
ret
int
loopne
fistpll
push
insb
daa
sbb
mov
shll
iret
pusha
jnp
dec
dec
js
js
lret
cltd
inc
pop
les
mov
cmp
push
js
dec
sub
pop
dec
sub
inc
adc
ss
cmpsl
pop
shll
js
in
into
imul
adc
fsts
mov
mov
sbb
pop
lock
push
scas
aam
xor
stos
pop
or
dec
imul
lock
push
js
aam
addl
rcrl
fsub
jnp
cmp
das
jle
popf
insl
push
stc
cli
arpl
out
in
gs
dec
shlb
mov
or
pop
ljmp
mov
rcrl
fildll
sub
sub
imul
ja
sub
inc
and
cmp
roll
jo
subl
sub
cmp
xchg
lahf
and
sahf
cld
cmp
hlt
cld
out
dec
repz
into
xchg
push
fisttpll
sub
ljmp
cs
mov
cs
fcmovbe
not
dec
loopne
jle
and
fistpll
stos
pop
push
pslld
sahf
sbb
stc
arpl
add
mov
sahf
adc
cmpb
or
iret
clc
dec
mov
mov
addr16
dec
push
jle
mov
sbb
add
flds
out
icebp
ja
fbld
mov
repz
jno
imul
xchg
jl
mov
stos
pop
jecxz
adc
xchg
mov
pop
push
imulb
scas
and
rol
push
enter
jge
jne
or
mov
movsl
adc
xor
mov
cmc
pop
out
movsb
mov
dec
shl
jge
pop
mov
sbb
test
faddl
lret
fsubrs
cmc
push
adc
loopne
jle
pop
xor
fcomi
sarl
aam
mov
dec
test
inc
mov
lods
sub
pop
stos
loope
adc
add
push
adc
inc
jbe
outsl
pop
nop/reserved
roll
pusha
mov
mov
addr16
jle
dec
push
mul
push
cmpsb
pop
mov
inc
inc
mov
flds
xchg
add
push
scas
bound
or
and
ljmp
imul
repnz
and
mov
pop
insb
insl
outsb
aaa
mov
push
cltd
das
pop
cmpsb
xor
fs
inc
cmp
imul
push
sub
mov
loope
push
cmp
add
rclb
jge
lock
cld
scas
pop
loopne
cli
inc
push
and
in
or
cmpsb
lea
dec
rolb
mov
xchg
mov
push
xlat
mov
es
push
xor
sub
pusha
push
mov
cmpsl
insl
lahf
sbb
xchg
cmp
push
fld
lods
mov
std
or
and
repnz
test
mov
xchg
xor
iret
lods
push
out
dec
faddl
mov
xchg
pushf
push
sbb
inc
pop
sub
sbb
lret
add
mov
mov
mov
das
insl
insb
lds
push
sahf
fists
and
shlb
adc
int3
rcr
mov
mov
and
iret
frstor
jbe
sub
add
xchg
ret
jg
dec
inc
xchg
cs
inc
mov
xor
lods
xor
andl
and
or
ljmp
add
cmpsb
fisubl
or
les
jg
ret
fcoml
sbb
popa
push
mov
mov
push
xchg
cld
addr16
and
test
scas
ret
mov
out
xor
jnp
push
stos
xchg
xor
cmc
sahf
xchg
or
cmpsb
pop
pop
xor
mov
mov
mov
aad
or
cmpl
adc
cmpsb
add
xor
fnstenv
push
fisubl
inc
xor
add
push
inc
out
or
outsl
mov
movsb
gs
or
mov
iret
push
mov
int
jg
test
xchg
ficoms
loopne
or
out
and
inc
dec
or
andl
inc
ret
lcall
cmpsb
jnp
dec
out
or
mov
or
scas
mov
jns
mov
daa
lret
stc
test
out
test
mov
mov
repz
jb
mov
xchg
push
sub
in
in
jno
jb
jns
xcrypt-cbc
cmpsl
xchg
jno
in
xor
jns
insl
fnsave
lds
fnstenv
test
push
lret
mov
out
push
fiadds
mov
int
jge
clc
mov
call
adc
in
mov
test
in
je
ss
mov
sub
pop
aad
push
sarl
out
cmc
insl
mov
dec
es
pushf
push
icebp
add
sub
arpl
add
lret
ret
movsl
push
push
cltd
xor
filds
inc
mov
push
jl
test
mov
inc
mov
fsubl
add
movsl
popf
loop
sbbb
xor
test
cmp
cmp
outsl
xlat
lret
imul
fs
rsm
adcl
call
mov
xchg
and
aas
push
xchg
hlt
popa
push
rcrb
push
std
pop
push
imul
out
cmpb
lahf
cs
orb
mov
aam
dec
jle
add
mov
sub
call
test
adc
dec
cmpsb
aam
mov
ret
pop
pushf
cld
pusha
fldl
dec
loop
or
sub
test
pop
adc
pop
adc
and
bound
inc
cmp
mov
sahf
pushf
jmp
pop
hlt
in
mov
mov
pop
aam
cmp
cmp
mov
movsb
loopne
faddl
mov
cmp
jle
test
or
mov
out
in
movl
stos
fwait
and
popa
cs
cmpb
mov
jne
out
shl
dec
xchg
adc
jbe
pop
rorl
ret
into
dec
stos
rep
inc
cmp
cmpsb
mov
loopne
inc
jnp
or
sub
push
hlt
lahf
sbbb
arpl
ret
xchg
call
popa
imul
out
outsb
sarl
popa
lds
push
add
std
sub
shrl
jnp
iret
das
push
popf
inc
movsl
xor
movb
inc
bound
aad
es
mov
mov
dec
fmull
lods
stos
pop
adc
ds
cmp
inc
aam
adc
lahf
mov
inc
mov
mov
dec
gs
fmuls
cmp
inc
lahf
push
xchg
dec
hlt
lea
popa
lock
popf
outsb
mov
fs
jae
jae
pop
lods
inc
cmp
icebp
enter
bnd
xor
sbb
fsubp
xchg
aad
and
int3
bound
inc
inc
lods
pop
scas
mov
xor
add
and
xor
popf
add
mov
or
xchg
int3
mov
cmpsl
xor
or
fildl
test
test
adc
daa
ret
imul
jg
pop
dec
icebp
inc
push
sbb
mov
ljmp
push
mov
sub
mov
and
or
aaa
mov
lret
jmp
sbb
mov
bound
lods
out
pushf
repz
rorb
out
imul
jno
jecxz
call
pushf
ja
sti
hlt
inc
adc
repnz
dec
jge
scas
shrl
sbb
xor
push
push
push
testb
lods
movsb
filds
pop
test
mov
ss
sbb
sub
cmp
cmc
lret
lret
jne
jecxz
and
pop
adc
add
js
sbb
push
out
hlt
lcall
xor
test
push
add
shr
push
push
adc
add
pusha
inc
std
inc
jl
les
js
push
js
dec
pop
pop
js
xchg
ljmp
cmc
lret
cmp
and
mov
sub
mov
jmp
dec
and
xor
insb
movsl
or
dec
insl
pop
push
and
dec
rcrl
cmc
adc
jo
dec
dec
imul
pop
mov
je
adc
mov
iret
stos
movsb
lock
mov
fisubrs
ja
mov
dec
adc
mov
pop
mov
daa
jp
adc
cmc
jo
jmp
lahf
mov
push
incb
aaa
repz
hlt
mov
adc
inc
fnstsw
pop
mov
add
loope
sbb
xchg
sahf
sbb
int3
push
dec
xchg
leave
ljmp
out
mov
cmp
sti
cmp
fs
in
std
jae
loop
pop
in
sub
scas
sbbw
inc
js
add
xchg
inc
xchg
jb
xor
push
jbe
sub
loopne
repnz
xchg
pusha
repz
sub
pusha
imul
or
mov
popf
mov
jb
fnstsw
rcrb
out
mov
jbe
mov
incl
jns
mov
xchg
cmp
pop
push
dec
mov
pop
ret
push
xor
mov
push
sbb
js
mov
in
mov
fisubs
std
shlb
jle
dec
iret
ret
jge
push
es
ljmp
mov
orb
je
dec
mov
inc
mov
and
mov
int
or
pop
jo
cs
shrl
sbbl
mov
movsl
nop
stc
js
scas
ss
or
stc
mov
clc
pushf
stos
cmp
push
cmpb
aad
out
push
je
fsubrs
rol
add
dec
pop
push
mov
xchg
or
sar
cs
jecxz
dec
pop
xchg
leave
mov
xor
aad
jp
mov
std
sti
int
pop
lret
ret
pop
mov
mov
rorb
dec
lods
push
push
sti
mov
and
and
out
or
orl
dec
jmp
stc
jae
fdivrs
scas
fsts
jmp
arpl
sarb
rclb
xchg
sarl
pop
mov
dec
sbb
mov
subl
xchg
call
into
stos
lea
push
stc
ss
into
mov
test
das
imul
fadd
push
hlt
pop
and
lcall
and
jno
int
xchg
mov
mov
fs
adc
xchg
insb
jno
xchg
adc
icebp
fiadds
notl
int
mov
pop
clc
push
adcb
jge
rcll
fs
insl
cli
in
scas
add
pusha
outsb
lea
lahf
or
jle
xor
xor
inc
mov
push
adc
scas
mov
icebp
sub
repnz
fs
xchg
insb
jns
subl
sub
lock
xchg
push
xor
and
cld
in
pop
sub
subb
loope
mov
sub
fadd
leave
fistl
inc
xor
push
popl
pop
cli
jae
mov
ja
xchg
icebp
les
arpl
cmp
stos
iret
mov
jle
cmp
js
js
mov
lea
dec
sahf
out
cmc
add
cmp
pusha
push
hlt
in
add
sub
inc
sub
push
inc
cmc
jle
jnp
cld
ret
xchg
lods
clc
bswap
sub
cs
mov
popa
pop
push
loope
addl
sbb
repz
lods
les
push
ret
and
rcrb
inc
mov
dec
sub
fadds
mov
leave
mov
sub
jp
cltd
scas
sbb
lahf
sbb
out
push
stc
adc
stos
push
mov
shlb
adc
sub
imul
xchg
xchg
pop
mov
outsb
clc
sbb
xchg
mov
push
jae
aas
mov
outsb
scas
daa
lahf
mov
inc
mov
xacquire
mov
add
addr16
orb
mov
cmp
xchg
pop
cmp
mov
or
xchg
dec
jo
repnz
inc
pop
pop
call
mov
xchg
jmp
sbb
addr16
aas
loop
mov
sub
mov
mov
mov
dec
fwait
mov
rorb
xchg
sub
inc
xor
jne
adc
nop
lock
jnp
jg
push
aas
pop
std
jo
lret
push
rorb
fsubrs
out
and
popf
xchg
jmp
aam
cld
mov
pop
arpl
rclb
inc
push
pop
xor
or
jg
or
daa
int
fildll
jp
push
divb
fildll
xchg
xchg
add
test
adc
xor
cmpsb
mov
xlat
aam
and
mov
rcrb
cld
sub
stos
test
shrl
outsb
jne
mov
jge
icebp
js
or
add
les
dec
test
fwait
dec
xor
dec
jp
in
sbb
cli
shlb
fimuls
xor
das
in
jbe
xlat
stc
adc
xor
aam
jecxz
jno
lods
lods
and
clc
cmc
xchg
cmc
scas
dec
jne
clc
push
test
insb
lret
xor
paddsb
inc
jecxz
mov
mov
mov
ss
sbb
pop
bound
rcll
push
jne
movl
sbb
mov
sub
jae
xor
loopne
dec
jl
test
cli
int3
dec
ss
mov
aam
test
fadds
scas
mov
jmp
or
push
or
xchg
push
js
popf
pop
subl
add
push
mov
inc
add
lods
jne
rcr
ret
repz
pushf
mov
lock
xor
hlt
ljmp
repnz
das
pushf
mov
cwtl
ss
mov
jge
incb
cltd
inc
bt
mov
iret
hlt
add
je
jne
scas
sub
fldt
out
pushf
das
xchg
imul
rolb
and
mull
shrb
add
jle
insb
stos
js
push
clc
orb
mov
xchg
fistpl
lahf
leave
ds
add
mov
dec
add
clc
out
rcrl
pop
pop
mov
cld
in
dec
jo
adc
mov
inc
stos
mov
and
mov
mov
dec
pop
pop
pop
sahf
icebp
mov
out
xchg
sarl
sub
fbld
mov
ret
and
mov
jnp
rep
into
outsb
cmc
aas
mov
cmpb
jmp
in
iret
inc
roll
or
stc
das
test
mov
lods
push
lahf
gs
jbe
or
or
sub
faddl
lea
movsl
pop
or
pop
xor
inc
xchg
jae
inc
sub
mov
mov
je
mov
push
jmp
movsb
js
xchg
pop
cmp
mov
push
inc
dec
fsub
push
xchg
ss
xor
push
mov
push
test
mov
push
jb
lods
adc
jae
ret
lock
sbb
inc
out
jmp
xor
pop
xchg
inc
jg
fwait
push
scas
adc
fldcw
movsl
insb
pop
or
cwtl
lahf
shlb
sbb
mov
pop
sub
push
setns
xor
aad
fs
idivl
mov
test
xor
xor
xchg
mov
pop
shl
cmc
mov
sub
mov
sub
rcrl
mov
push
and
addr16
sbb
movsb
adc
rep
outsl
cmp
divl
cmp
icebp
xchg
jmp
mov
inc
mov
outsl
rorb
in
les
bound
push
cmp
pusha
int
mov
loop
aaa
cmp
xchg
lcall
xchg
mov
sub
inc
mov
adc
xchg
adc
xor
or
icebp
test
inc
inc
xchg
scas
lds
mov
dec
push
sbb
shlb
and
cmpsl
adc
call
pop
jle
inc
inc
stos
mov
ficoml
shl
loop
mov
pop
js
in
data16
pop
ja
cmpsb
xor
adc
push
xchg
in
ljmp
push
sub
add
xor
dec
jle
je
cmp
stc
push
mov
xchg
arpl
out
lcall
xor
pop
faddp
cmp
lret
xchg
sbb
insl
mov
push
fs
ss
fidivrl
stos
pop
fwait
sub
sub
fstpt
add
scas
sub
imul
mov
paddsb
mov
xor
fistpll
and
sbb
xchg
pushf
adc
push
jb
loope
orb
js
push
add
imul
xchg
mov
mov
lods
xor
test
xchg
sub
daa
inc
dec
jae
push
clc
mov
xor
inc
push
jo
scas
pop
mov
pop
aas
in
push
adc
xlat
out
lret
stos
rcrb
jle
jne
xchg
imul
ja
ds
nop
cli
mov
lret
jle
fnstcw
addr16
fsub
shrb
gs
lret
test
mov
mov
scas
pop
js
sbb
lret
push
xchg
sti
mov
jb
mov
pop
call
fs
outsb
mov
adc
in
call
mov
jecxz
jg
push
xor
adc
insl
xchg
mov
fadds
icebp
or
pushl
cmpsl
divb
xchg
aad
push
push
js
mov
push
std
ss
and
push
jnp
jl
and
dec
lock
mov
push
daa
jmp
pop
xor
mulb
loopne
mov
jg
std
idivl
fisubl
aas
out
xchg
xor
pop
cli
pop
xor
aas
pop
mov
mov
insl
push
out
sub
dec
int3
sbb
cmpsl
data16
mov
jmp
jnp
lods
mov
int
flds
cld
sub
test
inc
adc
lds
push
movsb
jne
add
inc
arpl
fbstp
xchg
lret
pop
push
insl
jno
out
jecxz
mov
mov
aad
jg
sub
inc
mov
pop
out
pop
jp
int
int3
ret
cmpl
mov
pop
js
mov
lods
sahf
scas
dec
js
and
mov
jmp
mov
ds
loopw
aaa
xchg
js
sub
loop
sub
cltd
or
dec
pop
xchg
or
mov
pop
les
ret
jl
mov
mov
test
std
mov
ret
sbb
inc
dec
lods
jmp
mov
push
add
mov
inc
leave
and
and
dec
and
fldl
fcmovnu
cmc
test
inc
addl
cmp
stc
pop
out
xor
test
ds
mov
cs
stos
lea
xchg
push
sbb
or
cmp
jns
fcmove
loopne
push
stos
lds
fmuls
popa
shll
pop
cwtl
inc
lods
out
dec
and
bswap
xlat
lods
jg
mov
push
leave
jne
movsb
les
iret
aaa
mov
sbb
dec
clc
daa
call
pop
dec
pop
dec
lret
movsb
or
scas
fsubp
cltd
push
sbb
sahf
fs
jge
pop
pushf
mov
mov
insb
inc
xchg
sbb
inc
jle
jne
lock
fistpll
sbb
sbb
sub
je
lock
push
adc
xchg
mov
fs
sbb
outsb
push
in
inc
sub
cmp
cmp
xchg
in
popf
pop
or
sbb
imul
mov
dec
xor
out
xor
dec
ret
push
and
mov
dec
sbbl
pop
dec
mov
test
and
ss
mov
push
jbe
xchg
lods
inc
dec
or
inc
lods
adc
jle
test
stos
test
pop
in
data16
mov
add
mov
insl
loopne
dec
jge
xlat
dec
push
xor
add
movsl
loopne
xchg
cli
or
std
mov
lret
jbe
fwait
in
pop
or
inc
sub
imul
testl
jecxz
jge
and
leave
repz
jne
jecxz
or
test
sub
and
push
insb
mov
adc
inc
xchg
lods
add
push
call
leave
and
imul
mov
divl
movsb
in
in
dec
pusha
fwait
sarl
cmpsl
int3
sub
lcall
jl
jle
sahf
push
push
sbb
pop
fwait
mov
outsb
mov
lcall
lahf
fcomps
cld
xchg
rolb
rcr
pushf
mov
repz
jne
adc
and
test
and
push
pop
jecxz
repnz
popa
lods
adc
hlt
adc
xchg
imul
pop
sbb
js
aas
arpl
lock
sub
lods
or
xlat
cltd
mov
cmp
pop
flds
ljmp
test
jecxz
add
xor
add
or
test
scas
push
arpl
dec
cmp
cmp
int
add
ret
divb
xor
fstps
add
mov
sbb
xchg
fwait
pop
sbb
jnp
mov
pop
push
insl
or
mov
popf
xor
sbb
pop
cmp
jne
mov
cmp
movsb
ja
dec
or
jno
pop
stos
and
sub
leave
pop
outsb
stc
pop
dec
cmc
bound
in
outsb
loop
in
fisubrs
mov
pop
movsb
pop
fwait
sbb
push
imul
scas
mov
xchg
test
mov
int
arpl
xor
lret
adc
adc
dec
xchg
fisubs
shll
test
adc
cmpsb
inc
jp
sbb
xchg
leave
jle
push
ds
repnz
inc
ljmp
loope
mov
fcmovb
add
mov
cli
repz
pop
leave
enter
loopne
addl
adc
mov
outsl
dec
notb
jnp
ror
adc
ljmp
mov
loop
aaa
stc
and
cmp
and
or
cmp
pop
pop
inc
inc
mov
adc
test
ja
pop
cwtl
pop
pop
movsb
add
pop
repz
xchg
repnz
addr16
jle
inc
ds
mov
in
mov
add
fsubrl
cli
pushl
test
cmpsb
cs
dec
shrb
xchg
imul
mov
notl
push
jle
pop
cs
lret
sub
sub
out
adc
push
push
xchg
dec
mov
push
xchg
lret
sub
cmp
lea
push
out
jbe
and
add
and
sbb
in
lret
out
xchg
adc
cmpsb
rcrb
sub
cltd
jno
aaa
ret
test
bound
dec
push
push
jl
lds
in
inc
popf
lret
xchg
mov
adc
daa
sti
adc
pop
or
pop
fcmovb
or
out
out
iret
mov
mov
lahf
add
cltd
mov
xchg
jp
shll
pop
int3
add
jbe
mov
jbe
jbe
push
je
mov
int3
lea
lds
jmp
clc
mov
fwait
imull
icebp
sbb
aad
and
leave
inc
fdivrl
loopne
xor
out
add
mov
or
in
nop
pop
pushf
adc
daa
fucomi
bnd
filds
divl
pop
fisubs
push
dec
add
es
inc
movl
sti
push
sub
mov
ficompl
mov
and
inc
lods
sub
or
push
je
xchg
cmp
push
ret
test
inc
sbb
xchg
push
imul
stos
sub
pop
test
cltd
lret
jb
in
ret
mov
xor
xchg
aam
test
imul
dec
scas
iret
xchg
leave
sarl
cwtl
je
xor
push
jecxz
mov
cld
mov
cmc
pop
and
shld
pop
hlt
push
xorb
push
sub
sbb
mov
jne
add
sub
cmp
add
movsl
mov
scas
bswap
pop
sub
aas
adc
movsb
xchg
pop
sub
cmpsb
repnz
xorl
loopne
jno
loop
cmp
aad
adc
push
and
or
roll
mov
cmp
fbld
push
popa
pop
scas
or
stc
jp
leave
xchg
mov
and
mov
mov
mov
sub
ret
imul
out
aam
inc
jge
movsl
lret
sub
xor
mov
ds
xor
pop
adc
xchg
adc
sbb
inc
cld
mov
outsl
dec
mov
icebp
sbb
jns
push
fstl
pop
gs
shl
call
jb
mov
lock
stc
addr16
cmp
mov
jp
cmp
jo
lret
cwtl
loop
xor
dec
inc
mov
in
xor
pusha
ljmp
xor
dec
es
inc
xchg
push
mov
cmp
mov
test
inc
repz
pop
dec
ror
movsl
cmp
and
pop
shlb
mov
hlt
jne
cltd
adc
rcr
mov
push
ret
imul
fsub
out
lock
pop
insb
mov
xor
pop
xchg
xor
xor
pop
jp
dec
or
mov
sub
and
mov
js
hlt
movb
aam
dec
sub
pop
std
xchg
out
inc
rcll
sub
jo
mov
push
enter
int
adc
inc
push
jl
aad
mov
dec
jbe
and
imul
ss
sub
arpl
cmp
sub
jne
imul
es
push
push
mov
cmp
jns
loopne
fs
aad
push
add
pop
or
test
into
lcall
arpl
sbb
sub
ja
scas
lcall
ljmp
jo,pn
ljmp
sbb
xchg
fwait
cmp
nop
shlb
xchg
mov
sarb
jns
pop
xchg
lods
jmp
push
aad
mov
adc
sbb
hlt
xor
scas
xor
jne
shl
or
and
xor
or
insb
cld
into
adc
fidivs
repz
mov
cmc
enter
nop
cs
pop
fsubp
jb
rorb
jnp
pop
xchg
and
imul
sti
out
rcrl
push
sbb
jns
out
or
push
mov
dec
ljmp
mov
ret
cmp
dec
sub
mov
adc
pusha
pop
pop
idivl
repnz
adcl
push
repnz
jae
cwtl
xor
xchg
pusha
shll
in
or
insb
adc
jl
jp
mov
movsl
mov
arpl
inc
add
cmp
jg
mov
push
inc
ficoms
mov
mov
ds
push
sbb
mov
jne
mov
mov
rcl
mov
cli
adc
xchg
loopne
ljmp
sbb
ds
inc
mov
ret
push
imul
xlat
bound
scas
mov
and
push
inc
mov
xor
psubw
sub
mov
lds
fisubs
test
pop
adc
ss
leave
pop
clc
in
ja
ljmp
add
into
cmpsl
out
mov
mov
add
push
sbb
leave
mov
je
arpl
xchg
add
negb
jge
dec
or
mov
jecxz
leave
das
push
inc
push
stos
lock
lcall
cmp
in
sub
pop
mov
outsl
dec
js
hlt
xchg
adc
jle
rcrb
cmp
xchg
scas
sbb
adc
stc
dec
xor
cld
push
lcall
push
and
sbb
dec
sbb
or
mov
addr16
cmp
cmp
mov
lods
add
cmp
push
push
inc
fsub
sarb
and
inc
sarl
xchg
test
out
sub
inc
je
xor
mov
test
mov
inc
in
mov
mov
sub
sbbl
mov
or
and
adc
push
pop
push
scas
xor
sub
push
ret
pop
lods
das
incb
stos
mov
pusha
ss
jns
out
data16
icebp
iret
pop
mov
mov
addr16
dec
data16
ret
cmp
pop
hlt
popa
mov
cwtl
clc
icebp
shr
movb
ja
test
scas
jge
cmpsl
mov
and
aam
adc
data16
dec
jecxz
testb
rcrb
loope
test
push
cli
dec
mov
jne
mov
ficompl
or
mov
add
push
sahf
xchg
xor
int3
cmp
in
adc
xor
mov
pop
arpl
out
sub
mov
popa
movsl
mov
enter
dec
outsb
pop
mov
mov
jl
jns
pop
pop
mov
cltd
sbb
ss
sub
scas
mov
int3
mov
lods
pop
cmp
ret
xor
bound
fdivrs
popf
loope
cltd
inc
clc
scas
cli
adc
aad
out
xor
stos
dec
push
pop
xchg
and
addr16
add
scas
sub
jl
stos
sti
mov
ret
fstpt
cmp
adc
inc
xor
aam
aam
mov
adc
in
or
push
dec
insb
pop
inc
aam
adc
inc
mov
xor
cmpsl
repnz
or
pop
test
enter
dec
inc
ret
ljmp
dec
fdivrs
adc
mov
pmaddwd
scas
jae
mov
arpl
cmp
pusha
fistps
sbb
push
inc
or
or
hlt
test
std
xor
inc
mov
dec
mov
je
mov
cmp
push
push
xor
sbb
xchg
mov
jmp
jl
inc
push
je
cmp
sti
xor
mov
subl
push
inc
stos
imul
aaa
and
addr16
ds
stc
cmp
scas
push
call
jae
scas
push
fs
push
and
mov
insl
test
sbb
mov
notb
dec
mov
outsl
nop
push
push
mov
adcl
bnd
rcll
jae
mov
xlat
int3
mov
out
clc
mov
add
inc
das
push
jnp
divl
sub
clc
jns
xchg
push
adcb
cli
pop
sbb
push
hlt
data16
repnz
mov
cmp
mov
loope
mov
iret
fs
mov
mov
sbb
add
xchg
mov
xor
cmp
xchg
lret
arpl
enter
xchg
adc
xlat
xchg
mov
mov
iret
dec
in
movsl
pop
xor
add
imul
std
sarb
in
sbb
test
test
adc
pop
loopw
xchg
push
push
subb
dec
mov
xchg
sti
cld
pop
xchg
sarl
mov
push
xor
adc
pop
dec
enter
mov
aam
dec
push
or
nop
gs
adc
pop
ja
jmp
xchg
pop
and
sahf
push
subl
push
and
push
daa
scas
dec
mov
call
outsb
mov
insb
stos
dec
test
pop
mov
imul
dec
inc
cmp
mov
mov
gs
cltd
jne
xchg
or
jl
mov
cmovne
pop
cmp
test
jbe
xor
xor
iret
sub
cmpsl
adc
and
sbb
dec
cmp
in
shlb
aaa
adc
inc
cmp
je
repnz
sbb
add
sahf
xchg
and
push
call
fsubl
pop
xchg
mov
insb
insb
ret
jg
pop
mov
jno
in
cmp
add
and
xchg
lret
insl
cmp
es
int
daa
inc
vcvttsd2si
test
and
dec
sub
mov
lods
add
daa
and
mov
addb
test
out
cmc
mov
or
aas
ds
xchg
mov
in
filds
and
jnp
insl
stos
push
shlb
fs
push
ljmp
cmp
add
test
insl
ret
movsl
adc
test
xchg
inc
idivl
dec
fistpl
and
sub
sbb
enter
inc
sbb
andl
adc
push
add
push
ret
out
fwait
mov
add
addr16
loopne
lds
fwait
inc
add
jns
sbb
adc
sbb
or
das
shrb
mov
testb
xor
adc
popf
popf
dec
out
xor
das
pusha
cmp
cmp
jmp
es
jge
fldt
jecxz
std
ja
xchg
cmp
jecxz
jne
adc
pop
inc
aad
jp
add
xor
add
jo
fsubr
sbb
pop
push
shlb
lods
test
outsl
ret
test
sti
mov
lods
dec
fidivrs
push
and
inc
dec
or
xchg
or
inc
aas
mov
fisubrs
cmp
gs
repnz
addr16
mov
xchg
xor
mov
popf
cmpsl
pushf
cmp
cmc
stos
xchg
pop
dec
popa
scas
idivb
jle
lea
pop
xor
test
jge
ret
cltd
aad
and
inc
outsl
inc
jmp
add
cmc
add
arpl
fdivl
fnsave
shlb
xchg
ret
popf
mov
jmp
cmp
insb
xor
mov
pop
xchg
lret
inc
cmpsl
dec
scas
sti
pop
cwtl
lods
and
and
cmc
out
pop
jno
sar
mov
sub
dec
testl
xchg
xchg
outsl
and
adc
cltd
or
fistps
arpl
ret
ret
push
js
insb
sar
mov
dec
scas
popf
and
xchg
mov
cwtl
cmpsl
lret
or
push
loop
js
inc
push
call
lods
inc
sub
mov
sub
lcall
and
pop
out
outsb
fs
int3
scas
xchg
in
lock
scas
int
call
inc
ret
and
ret
pop
sbb
mov
in
xor
pop
mov
iret
ret
lret
xchg
mov
mov
in
aad
inc
sbb
xor
push
aas
or
dec
test
add
loopne
stc
cmpsb
fiaddl
incb
jge
mov
xor
test
lods
pushf
pop
mov
adc
dec
mov
push
jg
cld
arpl
stos
push
and
push
mov
sbb
push
inc
xor
add
adc
ret
mov
jae
cli
mov
jge
dec
adc
adcb
scas
mov
mov
out
xor
scas
adc
mov
adc
in
addr16
out
jmp
test
imul
in
jne
push
out
jns
lret
dec
les
das
push
fscale
adcl
imul
pop
dec
cmp
mov
mov
inc
ljmp
mov
xchg
mov
insl
pop
add
adc
mov
mov
push
out
test
pop
push
pop
pop
gs
jge
jbe
mov
xchg
add
fistps
lea
stos
pop
inc
xchg
out
rorl
mov
data16
out
or
adc
and
jb
cmc
sbb
fistl
ret
ljmp
sbb
ret
xchg
cmpsb
cmc
mov
sbb
out
ljmp
dec
dec
mov
cmpsb
push
shl
inc
lods
and
sub
repz
insb
mov
adc
push
mov
lcall
jne
inc
mov
in
mov
adc
idivb
and
and
or
fadd
mov
and
lods
push
in
ljmp
dec
aaa
cli
dec
mov
out
pop
mov
inc
mov
jb
xor
scas
sbb
mov
ds
or
dec
clc
pop
ret
cltd
outsb
into
xor
popl
rcrl
mov
nop
push
ljmp
test
add
xchg
outsl
add
jae
adc
test
xor
sub
sub
loopne
mov
rcr
lock
xchg
test
insb
cs
arpl
jns
jae
jge
lcall
repnz
in
mov
push
pop
sbb
mov
ljmp
and
pop
mov
loopne
add
xchg
push
mov
fistpl
jbe
mov
sbb
shl
jecxz
add
imul
in
inc
mov
and
lret
jmp
sub
ds
jg
or
ss
cmp
in
rcr
and
xchg
pop
sbb
xchg
fstps
inc
mov
lea
xor
mov
mov
xor
cli
cld
arpl
or
loop
mov
jae
inc
push
fidivrs
vpand
mov
push
or
test
mov
pop
stos
ss
jge
push
xchg
fs
or
int
arpl
jmp
je
mov
test
or
pop
mov
sbb
jnp
sbb
dec
fchs
and
mov
fsubr
push
xchg
jnp
push
mov
add
daa
xlat
push
and
lcall
cmp
mov
mov
inc
mov
std
adc
add
lcall
push
clc
cli
les
push
jle
sub
lods
pop
iret
popa
sbbl
push
das
ret
clc
int3
push
icebp
fstpl
and
mov
icebp
pop
cltd
test
out
jge
movntps
das
call
stc
or
testl
in
dec
bound
mov
hlt
sbbl
cli
inc
stos
adc
ret
enter
arpl
jge
sbb
sbb
ja
pop
into
fs
loopne
and
sbb
add
cmp
xor
cs
jne
and
sarb
repz
aam
inc
dec
xlat
push
dec
fstpt
mov
lds
lret
aam
inc
test
arpl
sub
pusha
mov
jae
jp
cmpsb
mov
in
xchg
stc
mov
out
test
cmp
in
pop
sbb
pushf
pop
sarb
lods
rolb
xor
sub
popa
or
jmp
lea
int3
loope
in
addr16
enter
sub
cmp
leave
mov
sbb
fcoml
shll
aas
push
and
and
aas
shlb
repnz
jo
cmp
mov
push
shrb
or
idivb
mov
pushf
stos
lahf
cmp
jne
mov
test
in
cmpsb
out
es
jle
mov
jmp
cmova
mov
imul
dec
push
pop
fcoms
scas
or
push
push
repnz
sbb
jne
les
and
mov
jne
pop
and
adc
fnstcw
or
insb
pop
adc
aad
rolb
sub
in
push
xchg
mov
mov
lahf
and
mov
test
das
sub
ret
sub
mov
xor
lods
daa
insl
icebp
sub
outsb
or
or
orb
xchg
mov
push
mov
inc
add
push
fdiv
shll
push
outsl
data16
mov
sub
cltd
pop
mov
jecxz
dec
mov
arpl
push
gs
sbb
in
rcll
in
std
movsb
ja
pop
dec
mov
or
imul
shlb
clc
fstpt
dec
xchg
push
gs
pop
mov
cmp
gs
jecxz
mov
rcrb
arpl
add
lods
ret
out
mov
jmp
in
xor
int
xchg
inc
imulb
mov
jno,pt
pop
in
sub
sti
scas
nop
cld
insl
adc
ljmp
jno
in
fld
sarl
aad
sti
rcrl
ret
sahf
pop
cmp
xabort
add
stos
or
data16
sbb
aam
lods
jb
inc
xchg
movaps
dec
adc
dec
loop
mov
pusha
xchg
mov
mov
aaa
mov
jae
push
inc
pop
ljmp
jecxz
mov
cmp
ja
xchg
and
pop
add
jae
in
add
jo
rclb
sub
sub
xor
xor
push
push
cmp
jns
call
test
cmp
mov
mov
pop
mov
jg
fs
cld
jnp
inc
loope
pop
or
mov
and
popa
ret
mov
cwtl
les
imul
mov
and
stos
xchg
or
add
xor
out
into
and
lods
or
inc
pusha
xchg
shrl
fildll
mov
vmovshdup
push
mov
test
aas
in
and
pushf
bound
sbb
dec
sub
jmp
mov
pop
sub
in
aam
cmpsb
cld
and
mov
insb
daa
inc
mov
push
inc
or
dec
mov
mov
xor
jle
movsb
adc
adc
ret
imul
cmpsb
xchg
ja
sbb
mov
out
aas
shl
fnstenv
xchg
mul
mov
divb
fsubrs
sub
and
xor
or
sbb
xchg
dec
loope
or
outsl
imul
cltd
push
int
enter
ljmp
cmp
cwtl
mov
jo
xchg
pop
sub
aam
jo
loopne
clc
push
jbe
and
pop
xchg
scas
mov
mov
cmp
jae
rorl
add
hlt
sub
bound
out
das
iret
add
aas
jae
and
shll
pushf
cltd
int3
cmp
repnz
cmp
add
inc
and
bnd
xchg
mov
arpl
and
jb
data16
pop
lret
aam
fisttps
add
aam
mov
cltd
mov
mov
sub
mov
repz
rcrl
inc
push
mov
repz
mov
adc
iret
test
xor
sbb
rolb
test
xchg
sets
lock
sub
cwtl
icebp
loopne
iret
xchg
call
mov
punpcklbw
mov
lcall
xor
jmp
fidivs
add
lgs
hlt
lods
sbb
inc
xchg
push
push
dec
adc
test
mov
leave
imulb
and
xchg
push
and
mov
push
adc
sub
lea
loop
shlb
outsb
inc
rol
sbb
mov
outsl
mov
shl
push
inc
xchg
test
stos
mov
int3
or
test
movl
or
jne
push
jl
xor
xchg
loopne
jne
push
nop
xor
xchg
inc
loop
ret
pop
sub
or
int
outsl
mov
pop
adc
lods
pop
and
cmp
mov
lret
ud1
pop
inc
sub
sar
addl
dec
mov
dec
dec
loop
mov
xchg
das
pop
adc
xlat
repnz
pop
adc
jp
push
jl
notb
jl
divb
sbb
test
xchg
aad
mov
negb
jae
push
cltd
cs
jae
pop
cmp
je
push
sub
inc
add
les
jmp
aam
popa
dec
sub
movsb
stos
enter
mov
insl
inc
enter
mov
stos
push
mov
std
ljmp
or
push
fcmovnu
adc
and
add
dec
adc
or
fisubl
fdivrl
inc
repnz
inc
cli
mov
xchg
mov
sbb
iret
in
push
sub
or
add
jecxz
shll
dec
cltd
sub
jno
shrl
xchg
mov
xor
ljmp
loop
movsb
jle
loope
nop
mov
mov
mov
fists
loopne
cmp
sar
incb
stos
cmp
mov
adc
cmp
mov
jp
mov
popf
pop
xchg
les
orb
hlt
push
sti
fnsave
xchg
test
cmpsl
xor
sub
push
add
cs
inc
xor
or
mov
cmc
sub
bound
sbb
mov
pop
pop
inc
and
in
xorb
dec
mov
jge
mov
fs
dec
insl
cltd
je
pop
add
daa
inc
call
sbb
mov
pop
loopne
xor
jle
lcall
jae
test
pop
and
sbb
ja
outsb
cmp
ja
sti
xchg
cmc
ror
shl
into
rol
leave
or
or
arpl
mov
ret
test
mull
dec
pop
jne
sub
xor
jb
ret
fildl
lcall
mov
inc
ss
mov
std
test
bound
dec
lcall
fmull
xor
jecxz
test
loope
in
adc
xchg
sub
fdivrl
add
je
bound
inc
or
jg
mov
mov
xchg
or
int
jo
jle
repnz
dec
dec
mov
ret
ficoml
movsl
hlt
jb
xlat
in
xor
jo
and
or
mov
pop
push
dec
push
rcl
les
mov
arpl
mov
or
xor
and
mov
imul
pop
adc
mov
aas
leave
jle
fwait
mov
xchg
inc
stos
push
in
pop
dec
or
jl
jle
jg
cltd
xchg
ljmp
scas
lret
pushw
into
xor
cmpsb
jmp
xor
mov
insb
jne
push
sbb
call
stos
add
out
jl
aad
fadd
arpl
push
test
mov
xor
movsb
push
call
ret
pop
push
rorl
cltd
xor
cli
iret
jb
aas
fs
lcall
cwtl
cmp
mov
mov
push
cmp
jno
pusha
insb
jae
call
mov
lods
and
mov
int3
sbb
mov
loopne
movsb
insl
xor
testl
loope
fstpl
out
mov
test
dec
sbb
cmp
in
adc
notb
pop
repnz
das
ret
jno
jne
pop
push
nop
xchg
mov
sbb
inc
jmp
add
dec
xchg
cmp
in
pop
mov
or
adc
or
push
mov
pop
push
jno
fidivs
dec
es
or
cwtl
jmp
pop
push
push
cmpsb
aaa
jp
sub
jb
in
push
adc
rcll
cmp
cltd
mov
jb
lods
ds
fwait
jg
mov
jl
fisttpl
loop
dec
out
xchg
out
or
enter
lret
lahf
in
cmpsl
adc
aaa
in
sub
lea
xor
pushf
add
les
fisubl
cmp
add
enter
dec
rcrl
sahf
mov
gs
mov
pop
les
mov
ja
repnz
jmp
std
in
mov
mov
aas
pop
sub
jnp
xor
sbb
push
add
add
push
enter
ljmp
jg
popf
sbb
data16
mov
stc
cmpsb
lods
cmp
push
nop
jge
pushf
cmp
test
test
rorl
dec
les
jecxz
pop
fadds
push
and
adc
push
xchg
mov
sbb
inc
mov
xor
cs
cmpsl
sub
pop
push
mov
sahf
repz
imul
out
dec
ss
cld
lcall
mov
lea
mov
addb
ljmp
mov
jne
dec
jne
pop
push
cmp
pop
cmp
faddp
mov
orl
mov
mov
lret
ret
or
add
mov
clc
movsb
imul
out
mul
insl
xchg
mov
xchg
aas
xchg
adc
fadd
icebp
frstor
mov
push
leave
int
add
push
in
int3
mov
out
insl
scas
ja
scas
fwait
cs
mov
test
dec
xchg
movsl
mov
push
in
pop
notl
mov
mov
sbb
fistpll
inc
jmp
pop
fs
pop
adc
push
sub
in
out
enter
dec
push
bound
cld
xchg
sbb
mov
inc
fdivrs
neg
or
stos
lret
mov
xchg
and
loope
or
das
rclb
test
or
push
cmpl
push
jae
cmc
in
mov
xchg
dec
jb
xchg
loopne
mov
lods
adc
add
mov
inc
pop
inc
cmp
out
icebp
fimuls
sub
jo
cwtl
mov
add
aad
and
push
pusha
in
mov
inc
mov
fbstp
nop
loop
pushf
cmpsl
sbb
aas
movsb
clc
jecxz
push
push
jo
je
cmp
test
stc
sub
arpl
shll
inc
dec
ficompl
mov
mulb
outsl
mov
pop
fs
lcall
in
and
out
inc
scas
enter
inc
scas
xchg
mov
test
bound
es
in
insl
and
pop
mov
mov
jne,pt
movsl
mov
jno
orl
jle
inc
lods
out
lcall
imul
sub
push
push
ja
mov
xchg
loope
sub
push
dec
jl
xor
movsl
loop
lret
and
popa
aaa
es
ja
mov
pushf
sub
arpl
shlb
loopne
pusha
push
mov
andl
movsl
call
mov
movsl
xchg
lret
mov
dec
jne
mov
jo
fst
enter
xor
jl
imul
add
incb
out
sbb
dec
xlat
pop
push
jge
addb
into
and
mov
push
lea
mov
shl
test
leave
fpatan
rcll
xor
or
aad
xchg
je
cmpsl
popf
outsl
mov
xchg
aaa
loop
bound
lds
insb
mov
test
out
xor
inc
insl
or
add
jo
xor
fisubrl
clc
sti
incl
xchg
data16
xchg
fdivrs
bound
add
sbb
push
xchg
les
out
dec
push
cltd
mov
pop
xchg
jmp
xchg
mov
bnd
cmp
mov
fistpl
mov
mov
shr
mov
jle
adc
lcall
out
dec
adc
mov
jp
lods
repz
cmp
xor
mov
jno
popa
pop
mov
mov
scas
test
xchg
out
movsl
and
repz
add
jle
lea
les
pop
mov
sub
arpl
fwait
and
test
dec
mov
sbb
xchg
lret
xchg
cmp
dec
imul
popa
sahf
fs
bound
addl
ss
dec
and
push
ret
adc
xor
dec
sar
imul
out
repz
xchg
scas
and
fisttps
ljmp
push
nop
sbb
xchg
or
or
ret
sarl
mov
shll
mov
sarb
push
jmp
jno
movsl
pop
sbb
pop
pop
inc
cmp
rolb
mov
and
pop
fsubrl
pop
or
add
adc
movsl
mov
add
scas
fldcw
ljmp
mov
mov
lret
es
mov
data16
and
xor
in
mov
fs
push
push
fcmovnbe
repnz
bound
out
enter
rol
mov
data16
adc
decl
sbb
pop
repz
test
addr16
jno
shrl
dec
icebp
mov
imull
jmp
xor
test
dec
lahf
faddp
mov
jns
inc
mov
js
sbb
mov
nop
mov
sbb
repz
mov
push
iret
test
xchg
in
es
popa
jne
fistps
subl
adc
clc
dec
pop
push
mov
push
or
insl
cmp
push
push
iret
xchg
adc
nop
and
xchg
ret
adc
inc
jno
mov
xor
rcr
aad
push
icebp
movsl
or
inc
stos
push
loop
pop
cmpsb
std
inc
popf
push
movsb
in
jbe
pop
into
aam
adcb
xchg
ss
in
out
dec
pop
and
ret
cmp
pop
sbb
lcall
lds
fsubs
pop
cmp
jmp
push
dec
lock
rcrl
pop
dec
mov
xchg
jmp
sub
fld
idivl
mov
test
aas
push
cld
inc
imul
lds
rolb
call
mov
mov
cmc
loope
div
mov
pop
mov
xor
jg
call
xor
sub
out
xor
xchg
or
adc
xlat
mov
cmpsl
shll
sub
stc
cmpsb
or
cs
xchg
imul
xor
push
sbb
mov
stos
popf
outsl
pusha
or
xor
cmp
ret
das
xchg
cmc
or
and
pop
push
mov
xchg
inc
add
push
cmp
lods
xlat
sti
xor
jo
add
sbbl
dec
rorl
push
enter
int3
lcall
aas
int3
adc
cli
adc
jb
push
adc
mov
push
mov
push
lds
mov
std
jle
gs
rcl
sub
in
and
les
mov
and
fsincos
ror
data16
shll
push
icebp
shrl
in
in
sub
sbb
pusha
cli
ret
xchg
rolb
fists
dec
into
pop
sahf
jae
xlat
aad
in
add
fisttpll
push
cltd
jno
xor
pop
jecxz
popf
push
test
fsubl
aam
in
pusha
je
xchg
inc
push
mov
repz
push
inc
loope
add
ret
pop
push
sub
lds
ljmp
fnstsw
scas
int
ds
dec
xlat
inc
fnstsw
mov
cld
fnstcw
dec
adc
and
inc
mov
pop
loop
subb
push
xchg
jle
and
pop
xchg
inc
fnstcw
sbb
out
or
push
mov
mov
xor
lods
int
add
jo
xor
pop
adc
or
iret
lock
ret
lahf
lock
jmp
pop
mov
mov
push
fsubl
fbstp
fmull
mov
jg
fsubrs
adc
cmp
cmpsb
sbb
sahf
mov
cwtl
push
cltd
ret
cmp
inc
scas
ss
aas
mov
xchg
inc
push
cmp
clc
push
lret
and
cmpsl
cmp
mov
pop
lock
sub
push
sbbl
dec
daa
xorb
add
aas
test
push
xchg
sub
pop
fbstp
arpl
repz
add
adc
cmc
push
push
mov
dec
sarb
or
xor
mov
iret
pop
shl
and
lods
pop
iret
or
mov
aam
or
adc
jo
fsts
xor
outsl
scas
popa
test
sbb
inc
xor
lcall
dec
and
aam
mov
add
test
push
icebp
jns
aad
push
dec
or
mov
aad
cmp
xlat
jne
loop
pop
jge
dec
jle
jb
jne
mov
imul
out
into
test
inc
mov
out
and
loop
adc
dec
clc
jae
dec
pop
in
test
adc
adc
std
inc
jno
xchg
lds
add
popa
out
repnz
cmp
add
mov
add
dec
jle
gs
add
or
or
fisubs
xor
xchg
xor
daa
mov
xchg
and
pop
lock
mov
popf
fidivl
scas
sbb
ja
mov
inc
inc
insb
sub
mov
or
sub
inc
sahf
negb
arpl
xchg
xchg
mov
dec
dec
push
dec
hlt
into
and
fwait
ss
addr16
outsl
sbb
jecxz
pop
sbb
pop
and
sbb
orb
cwtl
aam
xchg
mov
leave
enter
adc
mov
out
adc
sbb
mov
cmp
shr
in
pop
cmc
hlt
mov
xlat
iret
push
pop
bnd
jle
jnp
dec
cmpsl
in
icebp
add
mov
sub
arpl
lods
add
pop
adc
fsts
mov
fldt
int3
popa
iret
adc
sub
xchg
fistpl
and
pop
lahf
mov
dec
push
faddl
lcall
sar
mov
fdivrs
lods
idivl
adc
clc
inc
push
jmpw
mov
mov
sub
dec
push
sbb
lcall
subl
or
mov
xor
mov
shlb
clc
dec
add
mov
out
push
shrb
pushf
int3
xchg
aaa
pop
jo
stos
xchg
inc
ja
out
push
jle
fsub
fistl
jo
or
scas
popa
daa
xorb
dec
jae
dec
inc
bound
imul
imul
adc
dec
loop
mov
fildll
stc
jecxz
mov
or
lods
cmp
cwtl
xchg
add
pop
add
push
pop
aaa
cs
xor
or
mov
ficompl
insb
aad
andb
pop
ror
xchg
xchg
aam
nop
pop
adc
lds
jnp
jo
sbbb
xor
and
push
imul
sbb
adc
mov
push
sbb
mov
pop
mov
iret
shll
jmp
lds
adc
cwtl
dec
loop
add
in
bound
jo
jnp
mov
test
sub
or
adc
xchg
addr16
cmp
fbstp
sti
mov
pop
in
adc
je
fisubs
je
int3
pusha
dec
push
test
loopne
xchg
sti
fst
inc
mov
fsubrs
xchg
or
cmc
mov
cmc
mov
hlt
aam
icebp
pop
call
inc
push
sub
jmp
mov
sub
ss
jo
lcall
imul
clc
ss
stc
mov
mov
inc
push
mov
insb
mov
push
cmp
xchg
je
jae
sbb
orl
xchg
adc
je
fcmovnb
mov
or
mov
stos
jns
jg
subl
cmp
cmp
and
sub
push
push
mov
mov
xorb
mov
dec
bnd
pop
adc
cmp
jle
add
sarb
or
ds
push
xchg
cmp
pop
inc
push
dec
mov
dec
movsl
xor
adc
pop
add
lods
mov
push
gs
inc
insb
add
rcpps
out
sbb
cmpsl
push
imul
push
shll
jns
repnz
std
lock
xchg
add
adc
mov
fwait
sub
in
dec
xchg
insb
shrl
adcl
xchg
ss
imul
lret
arpl
leave
mov
ljmp
or
and
mov
mov
fwait
add
outsb
mov
sbb
or
das
call
inc
mov
fdivrs
add
dec
in
mov
push
fcmovnu
xchg
pusha
inc
xor
inc
outsl
add
push
int
loopne
insb
xorl
inc
mov
jo
mov
push
sbb
js
xor
push
mov
dec
push
les
test
nop
lcall
xchg
cmp
xchg
jmp
pushf
mov
inc
nop
mov
call
idivb
xor
sub
out
int
adc
jnp
dec
cmp
rclb
jns
call
outsl
mov
jmp
pop
inc
ss
test
ja
mov
jno
fs
xor
mov
fmull
repnz
push
ret
and
scas
mov
push
jecxz
aas
nop
sub
jne
pop
shll
and
jl
popf
bound
jnp
dec
sbbl
sbb
fmuls
jns
incl
pop
lahf
push
mov
aad
sub
push
mov
add
push
sub
push
jle
iret
or
mov
int3
or
subl
ret
pshufw
lahf
insb
ficoml
es
icebp
mov
lock
in
jae
addr16
pop
xor
insl
out
fnsave
psadbw
inc
xor
xor
lcall
das
mov
into
cwtl
inc
iret
sbb
or
pop
mov
aam
xchg
jo
pushf
dec
outsl
mov
int3
inc
sarl
rcrl
andl
sbb
movsb
int
jbe
adc
or
jecxz
or
ss
cmpsb
in
push
ljmp
xor
jb
and
inc
xorl
or
inc
rcrb
and
subb
repz
cmpb
mov
das
pop
in
mov
dec
outsb
add
push
and
cmp
pop
xchg
aaa
mov
adc
data16
sub
daa
popa
add
lods
sbb
lahf
popf
lods
sbb
test
xchg
popa
sub
dec
ret
or
cmpsl
push
loop
in
in
inc
out
sbb
jo
cmp
stos
shl
lret
pop
bound
and
jmp
push
sbb
add
arpl
push
sub
cmpsl
aaa
das
or
inc
sub
sub
push
testl
scas
sub
xchg
mov
jmp
jnp
loope
lcall
in
and
int
test
pop
inc
xor
imul
mov
mov
loopne
inc
negb
stos
mov
sbb
sbb
ret
mov
push
gs
ds
rcrb
mov
and
js
xchg
std
hlt
and
mov
sbb
cli
pop
rcll
insl
in
jmp
loopne
movsl
mov
adc
adc
movsl
movsb
sbb
popa
xor
test
popa
sbb
push
jb
jmp
ds
cmp
shrl
xchg
dec
cmp
jle
sbb
push
popf
addr16
pop
cmp
hlt
jbe
mov
test
andl
jno
lret
xlat
mov
addr16
mov
xor
sbb
mov
psubd
out
jg
popa
cmp
lods
mov
and
cmp
mov
notl
lret
adc
or
push
scas
push
es
sbb
mov
jg
lcall
movsl
inc
test
add
scas
outsl
sub
bswap
push
pop
cli
inc
pop
xor
cmp
aas
mov
imul
ret
pop
jb
ja
pop
jbe
shl
lods
test
sub
into
cmp
pop
xchg
int3
adcl
jb
lea
push
fisubs
add
push
imulb
mov
inc
pop
lods
adc
arpl
in
cmp
push
jle
mov
nop
out
xchg
fistpll
add
xor
or
inc
int3
adc
pop
dec
adc
push
mov
xlat
xor
and
add
pop
jmp
sub
dec
dec
inc
cmp
inc
movsl
pop
inc
insb
jbe
xor
loop
mov
jp
dec
lcall
out
repz
mov
stos
and
xor
hlt
stos
push
sbb
jmp
nop
add
push
mov
les
and
sbb
inc
or
bswap
or
daa
mov
mov
std
cmp
pop
jl
push
sbb
and
sbb
les
adc
popf
xchg
arpl
sub
icebp
jb
stc
adc
into
xchg
rorb
pusha
push
pop
xor
lods
xchg
cwtl
adc
jg
aad
movsb
in
dec
fs
pop
sbb
aad
dec
stos
jl
ret
push
cmpsl
jge
int
jmp
and
fcmove
into
fcmovne
sbb
mov
add
adc
in
jl
push
aas
loopne
aad
ret
pop
rclb
mov
les
jle
in
mov
es
xor
xchg
aad
xchg
lea
insl
mov
sub
jb
mov
es
cmp
add
out
push
in
lea
ja
imull
cmp
stc
xchg
mov
xchg
scas
std
push
pushf
xor
mov
fisttpl
sub
shlb
xor
jne
fcmovnb
outsl
jle
xor
mov
sbb
icebp
lods
push
outsb
pop
sub
addr16
push
test
out
or
ror
call
xor
pusha
jge
pop
jmp
mov
cmpsb
jnp
bound
ret
push
sti
inc
push
out
and
pop
fisubrs
lock
out
sti
mov
dec
jae
pushf
adc
mov
jp
inc
scas
outsb
jo
shrl
leave
jle
das
or
out
lea
shrb
and
ret
adc
xchg
xlat
mov
test
dec
xchg
lret
mov
outsl
jnp
cmp
cmp
and
lods
mov
lods
adc
rcll
mov
mov
mov
in
int3
test
mov
jg
jg
inc
movsl
and
shlb
mov
xor
int3
daa
push
pop
das
mov
rcll
inc
rclb
std
cmp
enter
setnp
add
mov
jp
push
mov
sti
out
push
sbb
xor
dec
cld
rcrl
pop
dec
add
jl
cltd
mov
mov
xchg
add
jb
rcll
ljmp
repz
cld
aas
hlt
mov
clc
repz
xchg
lods
sbb
inc
mov
stos
bound
cmp
xchg
or
xor
iret
jne
xchg
push
xor
pushf
xchg
fdivp
sahf
push
outsl
pop
mov
or
js
stc
shl
xchg
outsb
cmp
mov
jle
push
and
dec
out
mov
lods
test
ss
sbb
stos
pop
out
pop
inc
xchg
addr16
jp
ret
push
dec
leave
sbb
ret
cwtl
add
pop
inc
inc
cmc
cmp
lcall
mov
fisubs
lcall
and
dec
in
fucomi
push
stos
mov
mov
dec
mov
fbld
mov
lock
inc
jnp
cmpsb
fldl
adc
adc
mov
add
mov
mov
ret
add
imul
add
sbb
mov
dec
mov
sahf
dec
ret
xchg
adc
cmp
xchg
in
mov
test
cmc
shrl
ds
cmpps
clc
mov
pop
mov
mov
movsl
mov
je
mov
rcrl
jg
outsl
jns
inc
jmp
xor
sahf
lahf
dec
loope
mov
ja
xchg
fsubs
pop
push
sub
mov
or
cmp
xchg
pop
fdivrs
inc
or
insb
outsb
mov
shrl
fistps
or
pop
adcl
and
and
std
adc
aaa
ja
out
mov
inc
cltd
inc
insb
fwait
aas
cs
js
push
and
roll
in
add
ret
xchg
lock
inc
jmp
add
push
decb
sub
cs
test
pop
xchg
jmp
stos
jno
mov
rclb
pop
dec
pop
mov
repnz
mov
pop
mov
fucomi
popf
mulb
lock
push
pop
inc
ret
pop
sbb
lret
outsb
rcl
cltd
and
inc
dec
sahf
jl
xor
mov
push
fisttps
dec
outsl
shll
ds
pop
das
cmp
loopne
xchg
sti
leave
pminub
daa
mov
xorl
inc
xchg
popa
das
xchg
ret
push
movaps
lcall
push
in
lods
fstpt
enter
sbbb
dec
or
adcl
and
cmpsb
and
add
ret
cmpl
add
jbe
cmp
out
aam
and
add
xchg
sub
inc
les
test
pop
xor
scas
sbb
mov
sahf
mov
mov
cmpsl
out
das
mov
notl
xor
cmp
lock
sub
cmp
cli
je
in
in
add
add
jge
lahf
adc
inc
mov
add
aas
les
pop
mov
push
fnsave
add
and
jle
and
cmpsl
or
pushf
loopne
add
push
pop
or
xor
das
stos
adcb
dec
sbb
sub
test
xchg
cld
xor
xor
sub
decl
xor
outsb
push
bound
fwait
add
xor
mov
in
out
mov
cmp
jns
adc
test
mov
adc
gs
or
out
loope
jg
ss
outsb
ss
subl
jge
xchg
sub
dec
fistl
cli
mov
fstps
mov
std
fldl
movsb
icebp
mov
jmp
hlt
out
jne
mov
and
clc
sub
xchg
push
rcll
rol
outsb
lcall
dec
dec
mov
out
aas
or
in
and
xchg
push
ret
and
mov
xchg
rorb
sbb
aam
push
clc
xor
mov
inc
ficoml
in
and
fnsave
test
pushf
adc
xchg
scas
dec
sub
call
jb
xchg
js
inc
bound
test
shll
and
pop
std
aaa
mov
add
mov
rcr
out
inc
mov
cli
lcall
addr16
jo
cmp
pop
out
test
inc
pushf
jb
stos
xor
pop
inc
mov
mov
fists
in
cmp
sbb
in
mov
mov
adc
push
mov
movsl
xor
and
or
mov
pop
repz
imul
sub
jle
shrl
shlb
mov
rolb
mov
addr16
cmp
add
data16
push
dec
imulb
xchg
xchg
stc
jb
in
cmp
cmp
push
sbb
dec
cmpsl
ss
movsl
hlt
push
mov
addr16
mov
push
xor
add
lahf
notb
jp
sub
in
cli
fcoml
rorl
push
mov
or
lret
cwtl
mov
mov
lret
outsb
imul
fiaddl
cwtl
pop
js
js
inc
repnz
scas
mov
xchg
add
ss
sbb
test
pop
pop
stc
lods
sbb
in
inc
mov
fstl
in
pop
cli
ds
jo
pop
mov
loop
add
jge
jo
repz
cmpsb
inc
fildll
push
xchg
add
and
or
pushf
insb
int
out
add
inc
mov
pop
and
mov
mov
shrl
xchg
fbstp
sub
in
push
adc
arpl
insb
mov
jne
sub
sbb
fdivl
fsubl
adc
call
movsl
and
sahf
jnp
sub
pushf
stos
imul
mov
cmpsl
jle
cmpsl
jg
pop
mov
push
cmp
cmp
orl
mov
jno
dec
loope
cld
push
and
out
or
lcall
addr16
pop
outsl
lahf
rclb
lahf
sub
pop
fistps
xchg
hlt
fnstsw
xchg
mov
outsb
or
mov
insb
mul
aad
mov
inc
mov
add
mov
rcr
in
fcmovne
imul
repz
loop
sar
dec
inc
test
xor
leave
mov
stos
mov
jmp
jnp
xchg
cwtl
icebp
ljmp
ja
and
fiaddl
jne
dec
mov
inc
ss
inc
sbb
enter
nop
outsl
adc
push
adc
in
push
inc
ds
mov
imul
scas
rcr
cld
sahf
faddl
cld
sbb
lock
popf
mov
lods
in
cvtps2pi
adc
je
push
jne
xlat
sub
fimull
or
test
sti
out
push
dec
mov
sbb
popa
or
jecxz
xchg
rolb
sahf
sti
xchg
pop
dec
mov
jnp
xchg
mov
push
jo
or
cli
pop
xchg
xchg
fnstenv
add
or
call
xor
rolb
and
in
cld
mov
fnsave
xchg
and
mov
nop
popf
pop
in
pop
insl
out
scas
adc
dec
sti
push
decl
repz
mov
fsubp
in
add
add
lock
mov
lahf
cmp
fistpl
xor
lock
stos
inc
sub
sbb
dec
lcall
inc
popf
dec
add
ds
idiv
mov
mov
pop
int
testl
or
inc
jne
inc
jno
rclb
shr
jb
cwtl
mov
push
dec
add
or
out
notl
adc
stos
sti
mov
in
loopne
xchg
mov
loopne
sbb
stos
repnz
sbb
sbb
lods
out
add
or
add
loope
cmp
pop
imul
int3
xlat
adc
mov
sub
jns
scas
mov
das
sbb
mov
data16
push
xchg
inc
mov
test
sti
inc
xor
xlat
mov
es
enter
pop
jle
add
adc
jle
pop
push
lret
rcr
pop
arpl
test
sarb
int3
cmpsb
ja
mov
mov
inc
pop
fldt
lds
push
sbb
push
lahf
push
lods
xchg
leave
dec
pop
dec
push
or
adc
ret
repz
insl
xadd
sub
sub
or
xchg
inc
pop
es
hlt
pop
aam
in
mov
cmp
int
sub
or
or
mov
xchg
daa
mov
push
push
pusha
ret
movsb
or
sub
call
sbb
aas
pop
jnp
lret
sahf
xor
int
aas
pop
fistps
cmc
or
shll
and
ret
cmp
pop
popf
push
mov
add
das
lahf
lret
dec
xchg
pop
xor
cmpsl
push
or
inc
push
dec
xchg
mov
arpl
mov
jmp
jg
iret
or
fs
xchg
dec
add
xchg
sub
xchg
jo
fsubrl
mov
les
ds
jae
pushf
sbb
jb
test
repz
mov
jge
or
fs
add
jg
fs
pop
sti
or
ss
push
xchg
mov
sub
lods
imul
xchg
xchg
loopne
lea
ret
cli
sbb
cmp
or
mov
push
dec
jbe
scas
xor
add
jae
cmp
rol
dec
jbe
movsb
ret
mov
adc
adc
inc
fsub
gs
push
out
cmp
pop
push
shlb
dec
cmpsb
outsl
ds
lret
fidivl
xor
xchg
dec
and
inc
lock
sbb
add
cmpsb
loopne
rcll
cmp
pusha
aas
push
add
xor
pop
jmp
xlat
and
rcr
sbb
sbb
inc
jl
repnz
decb
inc
mov
xchg
les
outsl
cmp
nop
xor
subb
cmp
mov
and
cmp
clts
mov
cmpl
mov
and
mov
decl
cmpsl
jne
lret
aad
hlt
pop
sbb
stos
add
xor
or
and
dec
cwtl
int3
lahf
push
shll
or
out
enter
sti
lods
push
js
inc
mov
sub
aaa
mov
loope
sbb
xchg
jmp
pop
xchg
je
xchg
dec
sub
aas
jmp
pop
jge
popa
sbb
mov
cmp
lret
push
xchg
in
in
jecxz
cmp
pop
jecxz
out
test
cmp
sub
xor
ffree
arpl
sub
out
mov
pushf
cmp
push
jno
adc
es
adc
jle
rorl
or
cli
jmp
cwtl
mov
jl
sbbb
js
lret
xor
insb
popa
add
in
mov
push
or
xchg
pop
xchg
shlb
cmpsl
pop
decb
jecxz
push
inc
xor
mov
pop
cmp
and
xchg
inc
pop
pop
pop
push
ret
inc
mov
jge
mov
pop
or
jns
bound
xchg
mov
lcall
ja
repnz
xor
mov
mov
push
xor
scas
mov
push
mov
mov
dec
push
add
inc
cld
jle
scas
jo
jnp
cmc
mov
int3
add
movsl
or
je
test
and
dec
xchg
sarb
popf
std
mov
inc
sbb
mov
test
mov
adc
inc
dec
das
lods
cmc
push
daa
mov
jno
jbe
mov
sahf
not
decl
xchg
sbb
adc
mov
mov
mov
mov
outsl
add
out
aaa
ret
mov
cwtl
adc
cli
ret
add
and
call
pop
xchg
cmp
inc
xchg
into
sbb
fsubrl
lods
clc
ss
and
push
popa
jge,pn
xchg
in
test
loopne
ficomps
or
pushf
addl
adc
cmpsb
push
ss
mov
jmp
pop
andl
dec
mov
daa
xor
icebp
jle
mov
cmpsb
dec
xchg
dec
out
addr16
ret
pusha
sbb
sbb
daa
lods
fildll
xchg
push
inc
repnz
and
jg
jp
add
mov
int
adc
je
mov
lea
mov
sbb
adc
popf
add
imul
jge
mov
ret
in
scas
dec
aas
sbb
outsb
cmc
jge
xchg
testb
lds
loope
or
xor
xchg
mov
mulb
cwtl
xchg
fsincos
incb
pop
aaa
dec
in
mov
cmp
addr16
and
lcall
dec
push
dec
daa
test
ficomps
shr
repz
or
gs
cwtl
imul
sub
ror
pop
xor
sbb
adc
push
aam
shll
push
imul
adc
xchg
in
imul
es
insl
xchg
outsl
or
mov
or
mull
stos
xchg
lock
in
das
adc
push
divb
mov
orl
ja
aas
leave
mov
mov
aam
sbb
int
aad
mov
mov
insl
sbb
cmp
or
shl
jnp
test
jb
cmp
in
mov
push
cmp
and
test
pushf
scas
push
mov
pop
sbb
mull
enter
pop
popa
lahf
and
dec
fsts
and
mov
pop
outsl
jb
jg
arpl
outsb
data16
ja
rcl
xchg
call
xchg
mov
lods
gs
std
adc
xchg
xchg
out
in
incb
push
ret
psraw
cmp
test
add
cld
clc
or
jp
jmp
jnp
jle
cmp
ljmp
mov
sbb
dec
cli
sbb
sbb
dec
jne
mov
pushf
imul
iret
shlb
aam
sbb
mov
arpl
add
dec
test
xlat
mov
mov
adc
sbb
mov
jle
outsb
jmp
adc
int
mov
or
jecxz
inc
mov
in
add
fs
repz
jmp
repz
pop
adc
xchg
mov
push
push
lock
sarb
sub
ja
push
sbb
shlb
fnstcw
std
or
and
bound
mov
jo
jg
dec
data16
lcall
inc
pop
aad
pop
jecxz
sbb
jae
aam
aam
or
xchg
jg
add
subl
jmp
cs
sbb
cmp
insb
push
cmp
xchg
das
bound
adc
and
test
mov
mov
cld
lods
mov
in
fiadds
cmp
or
mov
push
fmulp
xorb
xchg
cli
mov
mov
sbb
ljmp
rcr
iret
repz
mov
mov
or
mov
jecxz
xchg
and
push
cmpsb
mov
xor
or
clc
das
icebp
adc
jecxz
push
mov
nop
sti
and
or
test
pop
push
int3
xchg
iret
inc
mov
and
inc
sahf
daa
fmuls
mov
add
popa
sub
jno
cmp
jle
out
cltd
cmc
mov
divb
mov
cld
fs
cmp
js
cmp
jmp
lods
xchg
cmp
iret
and
fldt
not
loop
adc
rcr
xor
mov
fs
push
jns
jb
jo
push
mov
stos
mov
mov
stos
push
mov
pop
xor
jbe
or
mov
in
push
pop
repz
adc
arpl
or
sti
dec
adc
xor
xchg
sbb
lahf
pushf
pop
pop
cli
or
sub
stc
jnp
mov
aam
mov
push
mov
mov
scas
sbb
hlt
jae
rolb
sbb
xchg
ficoml
push
or
xchg
imul
push
ret
cmpsb
or
scas
into
pop
rclb
push
sbb
call
mov
jmp
mov
inc
pop
cs
data16
lcall
pop
popf
xor
cli
dec
xchg
lods
pop
jno
mov
in
jl
lcall
cs
mov
popa
and
cmove
ja
push
xor
sbb
push
xorl
ljmp
or
xor
jne
sub
std
cmp
sub
ffreep
movb
and
rcrb
jno
lcall
leave
and
pop
ja
jae
nop
icebp
dec
enter
test
sub
lahf
or
or
mov
push
inc
outsb
lcall
pop
out
xor
ss
bound
push
mov
mov
sbb
int3
dec
add
pusha
push
push
jmp
cli
loopne
push
in
mov
fstps
mov
lret
jmp
ret
aam
daa
cwtl
sbb
mov
or
test
pop
movsl
adc
cmp
stos
iret
sub
inc
aad
xor
ss
jo
sub
mov
mov
arpl
movsl
cmp
mov
add
popf
cwtl
test
sub
lcall
push
testb
btc
test
dec
xchg
cmp
dec
and
rclb
mov
mov
in
scas
xchg
xor
xor
jl
push
cwtl
and
fdivrl
push
and
jae
mov
lret
push
sti
dec
pop
fadds
inc
and
psubb
aad
xor
pop
dec
dec
stc
dec
pop
xchg
inc
mov
pop
or
rcrb
arpl
imul
adc
andl
imul
ja
js
mov
dec
cmp
inc
push
mov
push
daa
or
or
cld
fiaddl
mov
add
jne
dec
rcrl
xchg
insl
mov
repnz
call
mulps
mov
pop
ss
lods
or
jne
adc
xchg
mov
ret
mov
add
dec
int
cwtl
insb
lods
pop
sub
mov
mov
fsubrs
mov
nop
xchg
jle
mov
jb
imul
mov
pop
jns
outsb
inc
pop
push
inc
lret
clc
push
or
shrb
mov
and
jne
adc
iret
xor
rcrb
add
mov
xor
jp
scas
fldcw
add
movb
pushf
jns
jge
push
ret
iret
mov
mov
callw
sub
testb
loope
stos
sub
xlat
cmp
pop
add
ret
cmp
or
lds
jmp
push
or
ret
imul
xchg
addr16
scas
loope
pop
sub
cltd
pop
test
negb
popa
test
xlat
int
xor
jb
dec
dec
pop
test
cmp
dec
jp
or
shlb
or
and
mov
dec
and
js
jmp
mov
loope
cmpsb
add
aad
inc
dec
jo
push
repnz
aas
and
pop
fisubrs
adc
sub
ds
pushf
lcall
shrb
es
and
mov
ss
cmp
repnz
pop
dec
stos
mov
enter
add
sub
or
pop
iret
add
clc
ljmp
xchg
inc
mov
or
in
push
add
mov
lods
rorl
jge
stos
xor
xor
and
inc
out
add
dec
jb
push
xchg
out
lret
fimuls
lods
or
mov
das
push
cmpsl
jbe
int
lahf
in
push
pop
lahf
leave
or
mov
dec
out
sbb
stos
aad
cmpsb
mov
add
cltd
loopne
mov
imul
adc
lds
xchg
lds
sub
enter
inc
mov
mov
mov
dec
inc
loopne
dec
mov
mov
or
iret
test
push
lods
jb
dec
in
mov
bound
pop
sbb
push
inc
xchg
pop
test
lcall
orl
push
lods
jbe
mov
pop
mov
fwait
jecxz
pop
aam
test
jle
scas
inc
xchg
sbb
sahf
outsl
push
incl
imul
nop
nop
xchg
sbb
jb
pop
sbb
mov
mov
stos
lods
in
mov
in
jp
out
mov
cmpb
gs
or
in
pop
addl
out
push
daa
mov
mov
xchg
not
add
jbe
pop
xchg
scas
or
xchg
sub
jae
xchg
inc
fdiv
dec
addb
scas
sbb
int
or
push
or
push
negb
dec
jl
insl
inc
mov
mov
jnp
sarl
jne
dec
stc
cltd
sbb
popa
fldpi
scas
xor
add
cld
and
xor
rol
fadd
frstor
out
or
mov
je
incl
mov
push
test
dec
lcall
push
sub
and
enter
cmc
push
mov
shrb
jp
dec
lret
jecxz
xchg
outsl
inc
or
fisubrl
adc
out
out
pop
outsb
outsl
in
imul
mov
lret
xor
fsubs
outsl
jae
ret
mov
push
inc
dec
pop
ret
mov
lods
pop
test
and
push
cli
jns
fucom
pop
mov
mov
fucompp
xchg
cld
insl
pop
es
cltd
addl
clc
and
dec
mov
push
adc
adc
gs
inc
pop
sub
call
aam
rclb
or
fsubs
pop
repnz
jne
inc
dec
inc
push
fisttpl
sub
push
rolb
rol
rcll
test
mov
das
add
push
mov
sub
repnz
out
adc
mov
cmpsb
jb,pt
xchg
mov
pushl
adc
cs
sarb
jg
mov
cmc
mov
mov
cmpsb
out
sbb
and
insb
test
mov
dec
lock
lea
xchg
out
movsl
mov
or
or
outsb
ds
aaa
add
js
xor
inc
xor
jb
pop
pop
arpl
js
pop
push
test
lahf
outsb
xchg
push
add
adc
ret
bound
fwait
rcrl
sbb
jbe
in
dec
rcrb
dec
push
cwtl
sbb
out
stos
cmp
and
jg
xor
cld
sbb
mov
xchg
dec
out
add
pop
shrl
pushf
inc
cmp
shrb
xchg
pop
add
mov
scas
jne
jp
stc
mull
xorl
push
add
ror
aas
cli
pop
xchg
pop
push
ljmp
clc
mov
pop
lods
mov
xor
mov
jp
or
orb
adc
imull
push
jnp
in
stos
mov
cltd
aaa
mov
popf
mov
xchg
fbstp
push
jge
fistpl
xchg
xchg
in
daa
scas
jae
xchg
jp
adc
cmp
mov
lods
pop
dec
hlt
push
pop
fcmovne
inc
and
fldenv
push
arpl
mov
gs
sub
jb
lahf
ret
mov
sub
pop
inc
mov
pop
sub
push
pop
adc
movsl
jb
dec
dec
dec
inc
fimuls
lcall
sub
jl
adcb
mov
pusha
mov
or
mov
push
xchg
jno
push
ja
mov
sub
jmp
push
lods
sbb
push
push
mov
cmp
sub
mov
dec
or
loope
fistps
jp
and
xchg
add
fiaddl
pop
mov
mov
and
cld
lcall
sbb
cmpsl
inc
cmp
idivl
pop
mov
jge
enter
dec
mov
outsl
sub
sbb
xor
and
adc
dec
and
arpl
xor
mov
jle
stos
xor
dec
pop
pop
pushf
cmp
push
push
lahf
pop
leave
insl
cmp
xlat
push
jne
jbe
xor
orl
test
push
cmp
fstpt
inc
push
dec
sbb
movsb
adc
jne
out
nop
pop
mov
sbb
add
dec
inc
movsb
frndint
jp
stc
enter
scas
cld
push
dec
and
xor
pop
mov
jmp
or
inc
leave
xor
push
shll
loopne
jo
push
mov
sar
push
mov
arpl
ss
dec
cmpsl
es
xchg
jle
pop
sti
ror
sbb
pop
repnz
int
mov
pop
dec
jns
loop
mov
adc
mov
aaa
shr
enter
cli
dec
imul
fadds
fsubrs
cmpsb
xchg
or
leave
hlt
lahf
adc
fisttps
repnz
cli
xchg
fildll
mov
dec
xor
pop
add
mov
mov
iret
adc
imul
insb
je
fistps
cmpsl
push
xor
mov
sbb
cwtl
mov
jno
jg
and
pushf
jge
pop
loopne
pop
notb
push
idivl
inc
or
clc
push
pushf
or
fdiv
jl
gs
pop
xchg
int3
lahf
push
jb
jo
mov
ja
scas
cwtl
mov
xor
fdivl
add
add
cmp
scas
jmp
imul
aas
sahf
gs
cs
daa
mov
movsl
push
xor
inc
ja
out
cmp
pop
sub
xchg
or
mov
cltd
add
js
pop
mov
cmp
pop
xchg
sub
jecxz
inc
jg
cmp
js
insl
stos
sub
jbe
ja
out
jl
ficompl
ret
cmpb
test
jl
lret
add
mov
jae
jns
es
and
inc
add
adc
pop
and
xor
jno
rcll
xchg
and
pop
xchg
jne
mov
xchg
rolb
push
sub
stc
into
imul
daa
fildl
mov
fidivrs
sub
jne
iret
into
shl
imul
xchg
data16
mov
mov
cli
xchg
xchg
jg
mov
inc
mov
sbb
shr
das
in
in
mov
and
iret
lea
adc
xor
shlb
arpl
sbb
fcomi
fwait
jmp
shll
call
pop
pop
xchg
arpl
das
jae
sarl
jbe
xchg
jg
add
pop
scas
mov
adc
gs
pop
adc
clc
lret
and
js
hlt
mov
imul
xor
sahf
stos
cs
movsl
imul
mov
mov
mov
jbe
lret
inc
cmp
out
and
mov
stos
xchg
ljmp
adc
insl
push
dec
sub
daa
mov
mov
roll
lret
mov
or
push
loope
ret
add
push
fisttpl
mov
adc
test
je
in
je
sub
lods
dec
or
cld
and
clc
decl
rorl
es
mov
dec
mov
pop
mov
lret
aas
jmp
add
insb
insb
jmp
popf
pushf
fcmovnu
push
cltd
or
rorb
inc
pusha
add
dec
shl
ja
loopne
inc
xchg
icebp
cmpb
or
out
enter
cmp
cmp
push
and
loopne
push
test
pop
ds
add
loop
dec
or
js
jbe
lods
fisttpl
lret
jno
fcomp
cmp
cmpsb
test
addl
cmc
out
nop
push
arpl
dec
lcall
mov
pop
loop
outsl
jmp
rol
mov
adc
lea
scas
adc
clc
pushf
arpl
add
imul
xchg
fstpl
fcom
jl
inc
or
jmp
inc
js
adc
push
jb
in
add
or
inc
into
mov
push
ficoml
cmp
mov
cmpsb
xor
ja
xorps
adc
cmp
jno
ret
sub
rclb
cld
out
in
icebp
int3
sbb
ret
sub
into
stos
xor
mov
ret
lahf
out
aaa
push
or
xor
or
out
sahf
test
and
out
xchg
sbb
mov
fsts
xchg
xchg
loope
je
xchg
repnz
dec
cmp
xchg
mov
pop
push
xor
hlt
addr16
pop
dec
or
or
pop
out
pop
sub
cld
fcompl
xchg
push
cmc
fwait
mov
rolb
and
and
pushf
sub
pop
cmpsl
mov
or
dec
push
imul
cltd
std
cmp
std
mov
lea
xchg
pop
pop
adc
fyl2xp1
pop
fwait
xor
mov
and
add
xor
push
mulb
or
test
call
gs
push
in
pop
sub
pop
in
xchg
inc
cmp
add
dec
or
and
or
cmp
mov
mov
mov
lods
mov
insl
or
xor
xor
test
aad
push
push
loopne
xor
or
popa
inc
adc
loop
ja
dec
rorb
int
push
lds
jmp
jno
cs
arpl
xchg
xchg
dec
jne
adc
gs
pop
fwait
cmp
addb
sbb
repz
push
pop
adc
rolb
adc
push
cld
push
or
adc
and
jp
mov
jp
idiv
loope
adc
scas
mov
add
sbb
sub
in
sbb
jg
rcrb
add
into
js
sbb
mov
fisubrl
jns
dec
lds
iret
push
mov
mov
leave
and
popa
aaa
lea
jl
adcl
lds
imul
inc
notl
pop
push
pop
je,pn
adc
dec
insb
jno
xor
adc
jl
inc
sub
test
push
aas
bound
cwtl
call
add
push
loope
lds
sub
xor
sahf
dec
rclb
ja
insl
insb
imul
ss
ljmp
dec
aaa
sbb
mov
pop
sti
pop
stos
sub
jge
or
sbb
pop
dec
and
pop
imul
in
pop
fs
lods
repnz
sub
sahf
test
add
insl
or
cmpsl
push
setno
test
leave
rcrl
push
in
fsubs
push
dec
mov
shll
xchg
lock
out
int
aaa
test
lret
scas
or
cwtl
add
lret
arpl
add
jl
jb,pt
or
dec
xlat
mov
gs
int3
shl
lahf
or
rcll
sub
ret
ret
pop
popa
cmp
outsl
iret
pop
mov
lret
test
imul
sahf
mov
xchg
and
arpl
cmp
cmc
mov
inc
xchg
in
inc
pop
rcl
cmp
outsl
sub
scas
dec
pushf
push
out
jl
inc
lock
cmp
xor
aaa
aad
loop
xor
sbb
xchg
push
pop
sahf
adcl
js
test
pop
mov
pop
jae
push
lcall
test
mov
inc
and
pop
mov
xor
jmp
insl
xor
xchg
and
outsb
lods
mov
lret
add
push
xchg
enter
cmp
cmpsl
or
add
out
pop
jmp
xorb
lods
xchg
in
dec
pop
pop
imul
mov
sbb
dec
or
adc
dec
repnz
xor
jo
and
addr16
daa
or
std
pop
xchg
cs
ljmp
aas
shrl
mov
sub
mov
daa
and
dec
incb
aam
jle
rcrl
sbbl
in
push
and
add
call
repnz
icebp
cmc
mov
cmp
cmp
mov
ret
insl
pop
mov
inc
int3
push
jle
hlt
popf
mov
push
xor
sbb
push
into
fidivrl
cmp
leave
aam
cmpsb
dec
mov
or
sub
shll
ja
movsl
mov
rorl
lds
or
std
push
inc
loop
movsl
push
mov
inc
test
jecxz
stos
rcl
dec
mov
testb
loop
jmp
popa
adc
mov
mov
iret
mov
sbb
je
cli
xor
repnz
insl
push
sbb
in
push
mov
int3
in
dec
adc
push
dec
shll
lea
dec
lea
push
or
ds
daa
mov
and
dec
addr16
test
cli
adc
jae
insl
stos
test
outsb
fucomi
pop
dec
and
das
mov
cmpsl
test
cwtl
mov
stos
push
bound
mov
fistpll
jge
xor
repz
inc
pop
dec
jne
pop
ret
das
sub
mov
dec
in
pop
jae
fistl
call
into
inc
dec
dec
enter
pusha
js
mov
jmp
lret
shlb
movsb
arpl
cwtl
inc
jno
sbb
decl
adc
push
inc
aam
and
rcrb
xor
mov
mov
sbb
in
xchg
xchg
pop
fcom
jno
sbb
inc
and
sbb
mov
dec
push
jae
js
std
or
dec
add
push
lock
mov
cli
sub
xorb
push
dec
mov
in
jns
insb
sub
mov
cmp
fwait
inc
ret
xchg
jns
lods
in
rol
mov
or
repz
pop
dec
fldenv
xor
rcrb
in
push
in
sub
fldpi
rcll
mov
mov
je
into
jbe
jns
nop
pop
push
add
sub
add
into
cmp
test
pop
jle
xchg
clc
bound
xor
notl
xor
mov
adc
ret
push
xor
into
or
pop
fwait
mov
adc
in
push
jnp
nop
push
cmp
test
or
mov
sub
pop
mov
loope
jae
sti
push
jno
enter
xor
pushf
sbb
mov
dec
lods
xor
shlb
insl
cld
loop
mov
inc
jbe
lds
xlat
mov
sti
jecxz
fidivrl
jge
jae
jmp
loopne
inc
loope
mov
mov
divl
cmp
ss
add
lea
je
insl
xlat
push
in
and
lods
push
fcomps
sub
adc
jp
in
adc
test
jge
push
cmp
sbb
push
nop
add
sub
decl
shll
mov
pop
adc
push
movsl
jp
or
enter
aaa
pusha
iret
lcall
stos
cmpsb
out
ret
cmp
xchg
mov
xor
or
testb
lods
jbe
add
or
jp
jne
in
push
mov
les
ret
and
pop
movsl
mov
jg
hlt
inc
hlt
xchg
mov
data16
adc
leave
iret
inc
in
aad
aam
mov
xor
ss
dec
insl
iret
aam
lods
div
xchg
push
push
inc
cmp
scas
inc
mov
js
hlt
cli
push
add
cmp
xchg
adc
enter
cmpsb
add
sti
mov
pop
pop
pop
inc
mov
rol
mov
pop
iret
int3
adc
adc
pop
ds
xlat
dec
test
jae
cld
xchg
lahf
jno
out
xor
es
push
inc
cmp
test
push
cmpsl
adc
inc
ficoml
dec
or
loop
jecxz
lock
cmp
es
push
adc
orb
xor
sbbb
push
cmp
add
in
out
decb
pop
imul
fidivrs
add
inc
in
test
sub
sbb
adc
mov
call
dec
sti
aad
jb
clc
sub
popa
cld
mov
cwtl
pop
inc
and
xor
lods
sub
pop
stos
stos
es
mov
inc
cmp
lret
outsb
sub
or
leave
sbb
xchg
icebp
loope
test
or
cmpsl
xor
fdivs
pop
xor
sahf
pop
lcall
insb
inc
adc
gs
jne
enter
mov
mov
sbb
icebp
and
sbb
pop
adc
ja
jle
cwtl
and
int
lds
ret
es
sub
adc
sbb
adc
sti
loop
cmp
xor
clc
cmp
popa
clc
pushf
leave
fdiv
aaa
mov
push
out
jl
push
aad
std
jg
clc
and
bound
mov
mov
and
cmp
pop
mov
imul
pop
inc
mov
iret
stos
jns
lock
scas
xchg
mov
cvttps2pi
xchg
lahf
jne
out
lods
sub
popf
nop
pop
aad
mov
pop
pusha
mov
jl
push
adc
pop
push
scas
pop
movsl
mov
enter
cmp
inc
cmc
icebp
fcoml
xor
clc
lods
mov
inc
mov
jl
cltd
fimuls
and
cmp
scas
jg
jmp
inc
ret
lahf
dec
stos
xor
push
push
xchg
lods
loop
mov
sub
jp
dec
jg
int
pop
fnstcw
gs
addr16
jecxz
je
cmpb
out
mov
cmpsl
cmpb
pop
jbe
dec
fs
sbb
lods
ficoml
pop
scas
or
ja
or
cltd
popf
imul
and
mov
das
sbb
xor
nop
sub
push
icebp
lods
cld
adc
out
movsb
ja
mov
imul
and
or
orl
inc
loop
gs
arpl
fidivs
dec
sub
sbb
rclb
add
rcr
lods
out
add
or
repnz
scas
adc
pop
sub
scas
jnp
mov
push
outsb
scas
imul
pop
mov
decb
dec
mov
mov
outsl
testl
pop
sub
int
push
or
jbe
cltd
das
fldt
mov
push
in
lret
and
mov
pop
xchg
sbb
and
pop
mov
lods
enter
scas
push
aas
mov
pop
leave
sbb
into
mov
ret
inc
sub
aas
and
inc
and
movsb
sbb
push
enter
pop
sbb
shrb
xor
bt
and
add
add
mov
cmp
sarb
jle
rorl
mov
xchg
call
xor
vprotd
sbb
lods
mov
in
jne
enter
adcl
pop
and
push
bound
adc
add
je
int3
xlat
lcall
push
lds
mov
sub
jg
lds
xor
imul
or
int
xchg
or
aad
shll
mov
adc
iret
rcl
inc
sbb
fmull
outsl
adc
push
push
xchg
out
out
mov
ret
cmp
or
addr16
lea
mov
sub
movswl
lock
test
push
add
and
in
mov
stc
test
sub
jb
lahf
leave
es
jnp
lret
in
pop
fcoml
xchg
inc
pop
gs
fs
inc
test
out
mov
sbb
repz
cltd
dec
sub
ds
lods
jl
test
hlt
jmp
xchg
or
cmp
jns
dec
sar
icebp
aam
xchg
repz
jae
mov
mov
fxam
or
bound
movsb
sub
and
fwait
jne
sti
jb
pop
stc
or
push
adc
cltd
jecxz
push
negl
sub
jne
popa
gs
push
fsubrs
mov
add
int3
cmp
gs
or
cwtl
leave
testl
filds
xchg
lods
and
sbb
adc
sahf
sbb
add
jg
adc
fistl
lcall
add
out
sbb
cmp
cmp
arpl
loope
call
into
and
add
push
inc
and
push
rcr
mov
pop
xchg
mov
xchg
sub
shlb
pop
nop
insl
in
stc
add
pop
in
testb
sub
inc
sub
jmp
xchg
shrl
imul
mov
push
ror
sub
test
jl
aam
dec
insb
ret
je
dec
and
rol
push
loopne
je
je
sbb
rorl
shr
adc
data16
cmpsb
inc
lods
mov
rorl
aad
icebp
mov
jo
es
daa
xchg
mov
sbb
xor
mov
sub
sub
xchg
aaa
sbb
int
sub
sbb
add
shlb
jbe
push
bnd
sbb
mov
jp
sub
in
mov
loop
pop
dec
dec
inc
or
dec
inc
jae
icebp
sub
xor
sub
jbe
aad
mov
mov
mov
sbb
cmpsl
or
mov
scas
popa
int3
sbb
lds
mov
dec
add
xchg
fwait
or
insb
or
jp
mov
iret
fidivrl
inc
pop
ljmp
sbb
dec
or
leave
pop
dec
int
repz
and
lret
mov
xlat
pop
jp
lahf
ret
aam
daa
data16
add
data16
imul
inc
adc
push
adc
sti
insb
loop
test
dec
call
jno
rcl
xor
push
out
jle
add
std
pop
and
in
ljmp
repz
and
xchg
int3
lret
popa
mov
and
ja
xchg
push
lcall
shrb
repnz
cwtl
daa
pop
nop
or
jbe
fs
pusha
pop
add
data16
mov
sahf
mov
sarb
xor
dec
xor
xchg
lahf
out
sub
jl
jl
pop
cmp
xchg
pop
jns
scas
insl
aam
imul
nop
pop
sub
fmuls
lret
add
jle
cmp
arpl
xor
and
lods
push
pushf
push
daa
lds
or
clc
scas
sub
add
mov
sbb
dec
mov
pop
lahf
sbb
cmp
hlt
popf
xor
int3
and
sar
inc
push
int3
xor
mov
mov
or
jae
lods
or
repnz
inc
xor
dec
mov
adc
insb
cmp
mov
sub
clc
xchg
xor
enter
into
ds
cltd
cmpsb
jae
inc
and
xchg
add
sub
pop
flds
int
dec
dec
add
loopw
sub
scas
mov
push
jb
mov
xor
idivl
mull
jp
push
je
and
imull
cmp
jne
pop
dec
push
test
and
pop
loopne
push
push
mov
incb
mov
inc
inc
sbb
push
fldenv
mov
lret
iret
aam
adc
mov
fwait
rorb
push
int
add
inc
adc
in
inc
cmpb
add
cmp
mov
and
pop
sar
cmpsl
in
adc
addb
mov
mov
int3
jae
or
ljmp
mov
adc
mov
mov
es
adc
mov
daa
add
outsb
jns
test
js
pop
mov
xor
xor
mov
fiaddl
fcoml
fwait
hlt
xor
mov
or
imul
aaa
dec
and
int3
mov
aas
std
push
pop
jl
jle
std
jb
jge
shrl
call
rolb
pop
mov
add
jb
adcb
popa
pushf
lods
shl
xor
cmpb
sbb
mov
dec
sub
ret
pop
push
push
scas
inc
test
shll
push
movsl
or
fwait
pop
pop
clc
jo
push
or
sti
and
cltd
test
pop
mov
mov
xor
mov
mov
mov
decb
add
mov
jae
push
lock
jmp
mov
repz
popf
adc
scas
orl
cmp
xchg
xchg
mov
test
clc
lds
scas
sub
ffree
icebp
fsubrs
xchg
adc
ljmp
ret
movsl
dec
dec
jecxz
ljmp
jge
fwait
inc
inc
jmp
ret
test
loope
dec
mov
out
shrl
mov
inc
jae
imul
into
out
adc
pop
jbe
mov
sbbl
push
pop
cmp
push
push
dec
add
push
cwtl
popf
inc
lods
mov
pusha
xor
sub
mov
cmp
stos
cli
add
push
pop
aad
pop
xchg
pop
rclb
repnz
notb
cld
sbb
lcall
out
test
sub
int3
addr16
mov
mov
dec
out
stos
iret
xor
rcrb
cmp
xorb
mov
push
rcrb
mov
mov
mov
or
mov
in
loopne
dec
mov
fisubs
and
inc
xlat
fstpt
mov
rcll
loope
in
mov
mov
bound
call
xchg
cltd
sub
aas
jmp
imul
mov
jae
jb
cltd
sarb
xor
push
adc
leave
movsb
clc
xchg
lahf
movsl
inc
fmull
sub
push
mov
les
std
test
pop
addr16
into
hlt
sbb
sub
pop
or
js
es
andl
mov
lcall
cwtl
adc
popa
adc
sbb
and
add
not
add
pop
lea
lea
push
mov
daa
mov
jno
dec
adc
push
sbb
pop
ret
xor
pop
pop
xchg
jne
xor
push
fnstcw
scas
and
shlb
nop
fisubrl
hlt
push
pop
outsb
lahf
fsts
jbe
add
lcall
dec
repz
push
mov
lods
xor
dec
dec
into
mull
jg
mov
mov
push
dec
ljmp
int
stc
or
clc
dec
xchg
mov
jmp
or
and
fs
cltd
shrd
cmp
ds
movsb
in
pop
cmpsb
daa
shll
cmp
add
inc
mov
cs
bound
inc
into
std
push
icebp
or
pop
jns
arpl
subb
cld
pushl
in
pop
dec
enter
jno
dec
adc
popa
test
in
ret
pop
adc
pop
jae
aad
in
insb
xchg
sahf
mov
dec
ret
lea
out
shll
das
jmp
mov
lcall
and
imul
mov
cwtl
push
mov
cmpsb
into
sbbl
push
xor
insl
push
push
push
push
dec
add
lea
push
jnp
std
mov
or
stc
movsb
sub
lahf
stos
and
shlb
sub
insl
mov
pop
dec
adc
add
add
xor
or
push
jne
fildll
or
cmp
clc
xchg
lcall
sbb
out
cli
fsubl
lcall
sub
ud0
pop
sub
imul
fwait
insl
sub
jl
dec
les
data16
mov
cmp
outsb
ljmp
repnz
inc
and
icebp
pop
cmpsl
xor
lret
es
mov
out
or
jbe
dec
jp
jp
aas
jbe
sbb
out
fadds
hlt
insb
mov
std
adc
or
pop
push
or
sti
xor
cltd
lcall
bound
in
xor
call
popf
cmp
add
leave
cmp
inc
ret
arpl
jnp
sub
xchg
cld
fisttpl
dec
adc
shrb
decl
stos
inc
mov
xor
test
stc
adc
inc
xchg
rcrb
in
aaa
aas
test
dec
ja
fs
cmp
dec
mov
out
lods
xlat
dec
lods
cmpsb
stc
push
or
cltd
inc
or
adc
hlt
mov
sub
movsl
icebp
ja
les
int3
insl
in
pop
movsl
inc
in
jno
cltd
add
lcall
out
mov
lcall
fisubs
jne
iret
xchg
call
scas
push
pop
bswap
scas
mov
sbb
arpl
lret
jae
mov
push
jns
lcall
repz
fists
test
xchg
pop
xchg
xchg
ret
push
mov
iret
mov
pop
into
icebp
loope
leave
popf
aam
xlat
jno
popf
rcl
xchg
add
test
adc
pop
in
loope
push
outsb
push
cmpl
sbbl
call
pop
sub
test
scas
mov
outsl
adc
jecxz
fidivs
dec
sbb
ss
adc
xchg
lahf
xor
inc
sub
push
inc
mov
and
subl
sbbl
or
xchg
mov
ret
cmp
rorl
dec
mov
jg
pop
xchg
icebp
pop
nop
mov
test
lahf
pop
sbb
in
jne
outsb
xor
adc
lret
lcall
imulb
mov
sbb
loopne
cmp
je
jle
addr16
cmc
aam
inc
xorl
mov
sbb
icebp
stos
jecxz
xchg
sti
and
rorb
mov
rcrl
pop
sbb
and
movsb
sti
dec
push
pop
add
ss
sti
rol
cli
pop
out
sysret
sub
jg
sub
adc
or
daa
xchg
push
jl
les
enter
jb
xchg
mov
adcb
pop
ja
das
or
into
dec
or
ja
fildl
cmp
sti
xchg
clc
imul
stos
or
mov
adcb
cmp
mov
out
mov
xor
int
aam
cmp
pusha
mov
push
les
adc
pop
mov
movsl
pop
out
in
andl
adc
mov
and
jg
cli
jb
test
xchg
popa
or
xorb
mov
inc
je
add
icebp
repz
out
outsl
je
rorl
cltd
mov
subl
sbb
outsl
xchg
test
jae
in
and
scas
inc
pop
lret
or
push
ljmp
mov
sbb
xor
popf
hlt
xor
lcall
mov
add
test
test
add
cmp
jnp
xor
mov
push
xchg
insb
mov
test
ja
cvtpd2ps
jbe
lret
and
js
arpl
loop
dec
mov
jp
xor
jmp
mov
iret
xor
decl
scas
push
stc
das
xchg
xchg
mov
sbb
pop
int3
jle
cs
fsubrl
inc
shrl
clc
sbb
jne
scas
xchg
sub
dec
adc
and
int3
or
mov
dec
shll
cmp
cltd
es
jb
or
sarb
add
pop
stos
xor
std
jae
fwait
mov
add
lea
fadd
fistpll
jge
fdivs
mov
add
push
fdivrl
imul
stos
adc
add
sub
fistps
inc
lahf
shll
inc
cmp
iret
dec
arpl
sub
int
or
enter
jne
fsubrs
mov
ret
subl
push
inc
das
std
mov
push
sahf
sbb
pop
out
and
push
cld
lcall
insb
pop
or
stos
hlt
outsb
les
das
push
bound
dec
xchg
dec
cld
gs
popa
pop
cmp
sub
fnsave
push
loopne
or
jl
stc
ret
push
shlb
add
fidivl
sti
std
mov
xchg
pusha
sbb
jb
or
popa
out
loopne
mov
pop
push
jle
lcall
into
insb
or
push
ret
fs
push
mov
or
lahf
sbb
xchg
js
loop
pop
adc
ja
sbb
xchg
stos
add
jl
sbb
cmp
xor
dec
lahf
cmp
push
orb
imul
lahf
mov
jns
xor
pop
les
mov
rol
mov
stos
hlt
test
adc
rcr
dec
jle
lods
push
loopne
inc
push
push
xor
cwtl
stos
mov
adc
mov
es
cmpsb
jmp
icebp
push
add
aad
sti
jecxz
mov
push
mov
dec
ret
push
pop
movsb
mov
arpl
xchg
and
orb
push
ffreep
scas
fbld
push
jb
ret
mov
push
cmp
jno
push
or
xor
insb
pop
pop
cmp
ss
mov
mov
out
xchg
add
push
repnz
sbb
adc
aas
sbb
push
int3
inc
jno
jns
je
mov
mov
xor
and
mov
repz
xlat
inc
adc
or
loope
push
out
inc
in
shll
push
iret
or
sbb
dec
mov
in
enter
test
call
jb
lret
aad
jae
xchg
out
adc
mov
jl
fisubs
add
xor
aam
repz
and
pop
cwtl
das
enter
push
inc
lods
and
mov
lock
mov
je
push
inc
or
mov
mul
add
mov
mov
adc
push
mov
nop
stc
push
push
sub
pop
aaa
idivl
insl
and
cmpsb
dec
pop
jne
out
jo
pop
add
xchg
lea
adc
sub
mov
pop
push
enter
imul
rcll
scas
xlat
loopne
dec
mov
stos
arpl
jo
jp
jnp
iret
lret
loope
fstps
jmp
rcrb
and
bound
lods
in
push
inc
sahf
jne
pushf
and
xchg
xor
push
leave
pop
mov
test
cmp
iret
movsb
sub
mov
mov
mov
fnstenv
dec
mov
push
push
fwait
rolb
cmp
xor
pop
imul
and
sarl
int3
pop
adc
push
mov
insl
mov
xchg
fld
sub
loope
dec
jne
fidivrs
mov
push
mov
cmp
cmpsl
and
sub
mov
out
sbb
loopne
or
add
mov
andl
inc
and
mov
xchg
mov
xchg
xor
push
fildll
aaa
sarl
sub
mov
dec
loope
jge
mov
and
mov
movsb
mov
adc
dec
mov
mov
xor
sbb
push
or
inc
xchg
xchg
sub
test
ficoms
mov
jnp
mov
sahf
xor
mov
nop
dec
pusha
pop
mov
fwait
lret
lret
cltd
arpl
call
aaa
mov
sbb
cli
push
jg
das
pop
in
lea
pop
pop
in
xor
outsb
xchg
inc
pushl
sub
cld
xor
cli
sahf
data16
mov
mov
inc
scas
divl
sarb
xchg
mov
fidivl
xlat
jbe
cltd
loope
sbb
sarl
fstl
pusha
push
adc
aas
test
stc
add
jle
push
xor
shrl
xchg
outsl
inc
enter
mov
jb
pop
or
pushf
lret
mov
sbb
aad
jns
cltd
int3
dec
stos
mov
shlb
jns
out
cwtl
mov
sub
dec
fwait
scas
xchg
push
pop
ss
push
lods
xchg
push
xor
sub
mov
and
sahf
add
pop
xor
jns
iret
jg
aam
or
rcrl
push
dec
sbb
testl
and
mov
sub
adc
xchg
pop
icebp
pop
cwtl
cmp
inc
pop
into
dec
jp
stos
ret
mov
shlb
dec
inc
lods
cli
push
jno
lds
jb
pusha
inc
xor
popf
sub
mov
jge
inc
pop
cmpsl
xlat
jecxz
insb
pop
enter
jl
nop
cmp
clc
jge
pop
add
out
das
xlat
mov
xchg
jle
mov
push
inc
xchg
je
add
fnclex
push
cmc
xchg
cmp
imul
test
jg
test
jnp
shll
stos
xlat
inc
xlat
and
into
sahf
out
and
cmp
mov
ljmp
adc
lods
sti
mov
mov
nop
mov
mov
cmpsb
xchg
mov
add
ja
shrb
dec
and
hlt
sahf
xchg
fcmovnbe
adc
in
rcl
jbe
mov
mov
decb
sub
pusha
addr16
push
xorl
cmp
sbb
daa
xchg
and
xchg
and
and
mov
mov
faddl
ret
aaa
mov
bound
pop
lcall
cmp
test
sub
jecxz
mov
mov
lods
mov
andb
cmp
jmp
sub
ljmp
leave
push
adc
lret
pop
pop
enter
jns
jecxz
jge
cmp
aas
das
add
cmpsl
pushf
dec
out
jmp
push
xchg
aad
mov
imul
pop
jmp
sub
scas
mov
aaa
push
repz
mov
pusha
int
lahf
cmpsb
aaa
dec
mov
movsb
lcall
insl
cli
pushf
mov
jmp
ror
loopne
sbb
fnsave
adcb
decl
out
sti
xchg
jmp
mov
sbb
pop
and
sbb
in
jl
mov
ret
xchg
rcll
ror
push
lea
popf
jle
pop
mov
mov
inc
negb
sahf
scas
jp
ds
bound
fists
or
or
cmpsb
je
cmc
cmp
xchg
sbb
or
and
mov
xor
push
jecxz
jp
stos
pop
xchg
or
das
push
push
stos
sarl
mov
std
cmp
cmp
shufps
inc
and
and
mov
mov
mov
xor
pop
dec
push
xlat
ja
imul
fcoml
mov
stc
lcall
insl
in
js
jbe
jb
mov
rcrb
int
dec
jno
das
pop
push
cmp
pop
jb
inc
aaa
pop
mov
mov
gs
addl
int
out
push
out
rcr
call
rorb
aam
cmc
pop
jmp
cmp
fsts
ret
pop
adc
mov
inc
ret
outsl
jo
add
pop
imul
xchg
fwait
outsb
pop
mov
inc
sub
out
outsl
mov
dec
insb
cmp
push
pop
mov
out
jns
std
loop
inc
sbb
mov
adc
popa
jecxz
dec
fnstcw
fxch
lods
test
mov
pop
jge
int3
arpl
out
push
dec
out
inc
cmp
mov
mov
cltd
jp
clc
imul
add
loop
mov
sub
xchg
in
sbb
pop
xchg
lcall
push
xlat
and
or
into
imul
adc
jo
inc
mov
dec
faddl
add
xor
stc
mov
mov
jmp
jnp
pusha
mov
push
shrb
push
arpl
mov
addl
or
sti
sub
jge
sub
loope
cmp
mov
push
shll
or
dec
jne
cmp
or
sahf
rorb
sbb
retw
mov
cli
divb
cwtl
inc
js
ljmp
xchg
sub
jns
shlb
jne
jno
push
jl
pop
insb
into
dec
lea
test
in
mov
inc
xor
icebp
test
mulb
imul
push
jmp
shlb
sbbb
push
loop
idivb
and
mov
cmp
xchg
and
out
insb
sub
push
fdivl
sub
jne
xlat
andl
cmc
imul
ret
xor
lds
mov
outsl
out
sub
imul
lods
fcoms
gs
mov
pop
pop
fldl2t
adc
cmpl
jne
je
add
cs
pop
das
and
mov
mov
leave
fisttpll
stos
addl
mov
mov
cld
loopne
fstpt
mov
fsts
lock
xor
aad
jmp
pusha
xchg
rclb
ret
or
mov
sub
lahf
mov
cwtl
insb
xor
imul
and
in
dec
dec
jne
out
jg
addr16
icebp
scas
cld
lret
xor
fdivs
dec
pop
fidivrl
jb
push
inc
and
push
pushw
mov
jecxz
jne
mov
shlb
jge
pushf
xchg
pushl
add
mov
push
xchg
in
pop
popf
sahf
and
incb
mov
shrl
call
sub
cmpsl
ljmp
lock
or
repnz
call
out
or
or
jns
lods
ljmp
test
and
les
test
test
mov
jbe
jmp
xor
cmp
aam
ja
mov
add
mov
and
xlat
or
adc
push
in
roll
aam
push
xchg
dec
sub
fwait
sub
pop
or
push
or
sarb
fnstsw
or
pop
cmp
xchg
or
and
add
data16
mov
xor
fwait
jmp
rcrl
mov
push
xor
push
shll
int3
ret
sbb
pop
sub
mov
jne
sahf
mov
inc
dec
mov
sub
movsl
jmp
rorl
sbb
inc
fs
mov
push
mov
jbe
mov
es
movsb
sbb
repz
and
xchg
dec
mov
jecxz
shl
pop
out
cltd
mov
jp
mov
ja
mov
fs
icebp
mov
data16
xchg
cmpsl
xchg
xchg
ror
push
mov
sbb
jle
sub
push
adc
xor
xchg
addr16
or
psubusb
or
insb
loopne
adc
jp
xchg
lock
jo
daa
mov
add
rolb
pop
push
xor
pushf
mov
data16
pop
clc
jge
stos
jecxz
jg
dec
mov
push
cmpsl
imull
inc
dec
sub
jg
sub
ret
xor
push
xchg
js
lahf
fsubs
mov
xchg
xchg
xor
add
das
sub
push
mov
ret
ret
rolb
inc
or
les
adc
les
shrb
cld
movl
out
hlt
les
cmp
cmp
mov
stos
aaa
and
sar
mov
and
jo
dec
cmc
clc
subb
mov
mov
and
cld
mov
sarb
nop
cld
jo
pop
das
cmp
test
add
popa
cmpsb
cmp
test
or
sub
inc
mov
popa
std
pop
bound
lods
ljmp
cmp
repnz
sbb
rorl
jg
sbb
pushf
and
inc
fdivl
sahf
jne
push
and
dec
pusha
rorb
pop
ret
add
push
cmp
inc
adc
fs
xorb
push
sbb
loop
gs
out
xor
jae
ret
push
pop
dec
in
hlt
cmpsl
push
test
xor
dec
adc
push
les
popf
cmp
gs
js
push
adc
jmp
push
lret
jecxz
mov
pop
xor
lret
mov
daa
jmp
mov
jmp
jp
mov
aaa
lods
je
les
test
pop
mov
fs
movsl
xchg
dec
mov
mov
jge
or
push
fwait
lcall
push
scas
pop
mov
mov
add
sbb
jno
mov
pop
in
filds
mov
addb
cs
mov
xor
cli
mov
dec
std
xchg
push
pop
pop
pop
mov
ljmp
sarb
dec
ja
lcall
popf
js
mov
subl
gs
in
dec
lret
stos
push
ss
push
nop
neg
pop
into
js
cmp
fwait
mov
hlt
or
leave
mov
jle
pop
mov
mov
xchg
repnz
inc
xor
es
sub
repnz
iret
mov
add
clc
gs
lds
leave
cmp
and
cmp
in
sti
out
adc
pop
hlt
jmp
pushf
rcl
jns
adc
and
pop
stos
int3
adc
pop
das
repz
xor
or
arpl
jg
push
pop
push
rcrb
jae
mov
push
fwait
pusha
and
jl
out
pop
rclb
push
mov
xchg
sub
aad
mov
icebp
rcl
std
in
sahf
fidivrl
sbbb
imul
lret
jmp
adc
test
mov
adc
pop
jp
imul
incb
cs
xorb
cmpsl
popf
daa
xchg
lods
int3
fsubs
xor
mov
movsb
sbbl
pusha
repz
lret
lds
insl
dec
push
pusha
shrb
xor
movsb
inc
ljmp
fstpt
loopne
sahf
jne
mov
mov
test
push
sub
xchg
outsb
scas
jnp
data16
nop
mov
rorb
mov
push
adc
leave
movsb
inc
mov
mov
sarl
jae
cmpsl
pop
xor
xchg
or
hlt
hlt
shlb
into
add
inc
and
sub
fwait
pushf
data16
jae
sbb
cmp
insb
fisubl
fsts
jnp
in
xchg
add
in
xchg
jmp
js
sbb
jae
roll
jae
loope
jmp
mov
sub
xchg
xchg
ljmp
jo
test
mov
fsubrl
and
pusha
repz
mov
out
sbb
mov
add
and
dec
repz
pop
mov
movsl
mov
jmp
or
sbb
or
mov
in
pop
scas
jge
lock
or
inc
mov
fadds
insl
pop
jp
mov
ds
pop
pop
cli
call
jl
rcrl
jae
in
jb
jl
jmp
mov
movl
mov
sbb
pop
es
in
sbb
sbb
or
ret
mov
and
ret
scas
pop
int
cmp
imul
mov
push
ror
nop
pop
adc
xor
and
out
repnz
adc
and
xchg
call
loopne
cmp
mov
pop
pop
xor
test
add
inc
roll
jp
mul
dec
dec
sbb
and
push
ljmp
dec
add
mov
sti
ret
mov
jle
hlt
jne
xchg
adc
lods
lahf
inc
rorl
inc
in
inc
dec
xchg
inc
sub
imul
jo
mov
pop
cltd
rcrb
outsl
inc
bound
mov
lods
xchg
jo
sub
sub
lods
outsl
fsubrs
jp
addr16
addr16
jmp
push
mov
xchg
loope
push
push
lret
pop
lock
cmc
sbb
push
in
inc
pop
adcb
xor
jge
jo
sbb
jmp
stos
aam
xchg
jno
lret
mov
insl
fwait
mov
pop
xor
test
fcom
pop
mov
popa
fwait
push
push
ja
leave
mov
fbld
fldenv
shll
lods
or
dec
inc
adcb
lret
mov
in
adc
cltd
ja
mov
out
mov
les
mov
xchg
push
mov
nop
mov
mov
lods
cmp
aam
loopne
and
into
jnp
pushf
inc
sub
hlt
dec
and
loop
fbstp
stos
inc
mov
nop
stos
mov
cmp
dec
cmc
mov
sub
outsb
fstpt
mov
loop
mov
repz
pop
adc
dec
cmp
test
js
clc
mov
out
adc
enter
inc
or
add
rolb
call
jbe
push
xchg
pop
and
pop
call
push
icebp
xor
mov
jecxz
cmpsl
ds
push
insl
testl
sbb
push
int
jno
or
mov
frstor
sub
xchg
fsubr
les
loopne
xchg
and
cmpsl
sub
lahf
in
cbtw
mov
or
xchg
test
jmp
pop
inc
loopne
and
pop
xlat
push
mov
pusha
adc
call
dec
adc
shrl
adc
aam
jae
loope
push
out
or
cmpsl
incl
call
fstps
test
aad
pop
xor
flds
dec
xor
mov
or
test
sar
popa
push
orl
clc
mov
dec
cmc
and
adc
jnp
js
addl
jmp
jae
add
mov
jbe
add
mov
jb
push
stc
cmp
jns
dec
dec
mov
or
mov
and
adc
clc
inc
loopne
add
xchg
jo
mov
insl
aam
sub
push
xchg
mov
call
adc
shrb
addb
out
sub
jb
push
xchg
aam
push
fs
sahf
push
test
sti
sub
xchg
push
addr16
ss
stos
fisubs
push
lcall
jo
lret
mov
mov
push
cmp
mov
sub
cltd
jge
xchg
pop
xorl
lcall
add
pusha
ljmp
adc
insb
loope
xor
ret
push
add
sbb
sbb
repnz
sub
bound
inc
mov
pushf
daa
out
cmpl
push
lea
ds
into
xor
aad
mov
arpl
and
pop
sub
add
cmp
shll
das
mov
je
dec
mov
pop
cmp
mov
mov
sub
mov
fistl
adc
mov
popa
mov
or
lret
cmp
push
lock
xor
dec
inc
add
outsb
sub
sbb
dec
loop
loop
or
imull
lahf
rcl
mov
sub
inc
test
jnp
mov
cmpsb
dec
aad
nop
or
adc
xchg
push
mov
fiaddl
pop
xor
je
mov
dec
or
and
inc
and
mov
sbb
sahf
sbb
in
sub
cmpsl
mov
fstpt
xchg
lods
enter
xchg
repz
les
mov
dec
jmp
lds
std
push
push
pop
xchg
push
jp
in
insb
loopne
or
pop
ret
mov
xchg
call
in
pop
call
cmp
mov
iret
mov
mov
les
cwtl
cmp
test
sub
pushl
pushf
dec
xchg
and
jno
push
xchg
clc
xchg
xchg
pop
pop
or
test
or
popf
movsb
sbb
jle
sti
call
dec
mov
lret
mov
push
test
xchg
pushf
imul
daa
ret
fwait
xchg
sbb
pop
inc
stc
push
ds
sub
pusha
fs
push
mov
loope
push
xlat
repz
pop
push
add
jae
dec
mov
mov
cmc
cmc
negl
out
add
or
nop
xchg
in
nop
adc
jnp
sahf
in
adc
insl
movsb
and
into
adc
dec
out
int3
out
adc
pushf
rcl
out
outsb
mov
test
data16
push
clc
mov
sbb
ss
jmp
ljmp
jae
push
addr16
daa
xchg
je
lahf
in
xchg
mov
push
sub
adc
adc
dec
xchg
mov
shrb
fsub
push
sub
js
test
out
dec
mov
push
sbb
popf
pop
test
pop
pop
pushf
bnd
dec
cld
popf
shr
jne
pop
lock
pop
lret
sbb
cmp
mov
inc
xor
jmp
jg
scas
mov
iret
dec
mov
push
add
stos
inc
mov
loope
pop
std
std
xor
pop
js
mov
out
jl
pusha
pop
sbb
popa
cwtl
cmp
mov
test
stos
pop
mov
test
idivl
sti
nop
scas
mov
mov
inc
mov
sub
cmp
rorl
sub
pop
lea
mov
scas
lret
xorb
inc
andl
mov
and
and
clc
std
fisubrs
xor
dec
cmp
xchg
add
sti
mov
mov
adc
lods
out
dec
fisttps
in
insl
nop
xchg
sti
mov
sbbb
mov
xor
cmp
rol
xorl
add
cld
xchg
andb
jbe
adc
xor
fsubl
pusha
lcall
inc
ficoml
adc
pop
cmp
cmp
xchg
and
push
rclb
inc
sub
repz
xor
cmp
jmp
and
shl
adcl
xchg
int3
pop
jmp
outsl
xor
ret
mov
notb
test
sbb
mov
push
out
sub
jle
jno
test
int
sarb
pop
mov
adc
stos
test
clc
mov
scas
pop
xchg
jne
fimull
lret
fsubrl
xchg
sbb
jo
adc
arpl
mov
ret
je
icebp
nop
push
movsb
inc
scas
mov
and
push
jge
outsl
ficoms
push
pop
jl
stos
xor
and
and
rolb
ds
add
mov
push
add
push
repz
fsts
sub
mov
jmp
in
fabs
adc
xchg
dec
push
push
lcall
stc
ss
daa
push
jb
lret
out
adc
mov
movsl
push
and
mov
and
jg
lcall
pop
xor
xorb
je
mov
jmp
jno
jb
ret
sbb
xor
push
je
xchg
pushf
mov
push
gs
imul
dec
inc
dec
inc
and
push
test
clc
or
adc
sbb
fcoms
test
jmp
dec
in
mov
mov
test
dec
filds
das
mov
lahf
dec
jb
hlt
mov
or
jl
jl
xor
in
xchg
dec
adc
sbb
in
or
jno
imul
sbb
adc
mov
fcompl
es
pusha
jne
pop
dec
je
and
call
shrl
fadds
inc
sub
and
dec
push
mov
daa
mov
movsl
in
dec
inc
inc
shll
xor
dec
dec
fs
sti
fistpll
inc
mov
jl
dec
pop
mov
sbb
lods
dec
mov
sub
pop
cmp
add
jbe
xlat
fstpl
mov
push
mov
xor
mov
mov
push
ljmp
mov
and
lock
inc
mov
mov
cmp
push
xlat
sbb
xchg
insl
jo
cmp
lods
pop
sub
or
fdivs
inc
loop
mov
stos
cmp
es
movl
mov
cmpsb
andb
jae
je
scas
dec
cmpsl
cmp
inc
ja
orl
dec
jle
icebp
jp
and
xchg
push
add
test
and
cltd
call
and
es
push
testl
ret
dec
cld
mov
xchg
sub
rorl
xor
rolb
psubusb
lds
push
dec
push
inc
jne
xor
test
test
out
xchg
mov
pop
pop
or
xchg
xchg
imul
popf
xor
aas
cmp
loopne
push
test
rcrl
popf
in
fprem
xchg
jp
jb
mov
adc
cmp
cmc
shl
jns
mov
xor
std
xchg
push
mov
andl
dec
pop
adc
sub
mov
insb
repnz
in
test
push
ficompl
mov
loop
add
inc
jbe
hlt
loopne
in
push
adc
inc
int
sbb
add
sbb
jnp
add
mov
inc
cmp
sbbb
sub
jg
cwtl
adc
rolb
dec
mov
mov
test
add
pop
xor
inc
fstpl
add
mov
test
cltd
cmp
test
testb
fcomps
jne
inc
mov
jns
and
sub
movsl
adc
sbb
adc
and
adc
xor
out
sbb
jne
push
aam
scas
pop
cmp
adc
jmpw
xor
addb
cmpsb
cmp
and
or
sbb
stc
enter
pop
dec
xchg
jne
dec
rcrb
pop
pop
lcall
imul
iret
addr16
cld
in
xor
add
in
lock
inc
ret
xchg
nop
or
mov
lret
repnz
push
inc
cmp
aam
mov
push
das
cwtl
jnp
xor
push
dec
ja
popa
es
pop
and
subb
xchg
ljmp
cmp
ficoms
mov
dec
dec
push
std
mov
push
dec
push
cmp
outsb
cli
popf
aam
insb
pop
aam
gs
jecxz
jle
mov
add
int3
mov
mov
add
jbe
jo
mov
arpl
or
int
dec
adc
push
popa
dec
imul
ret
flds
sbbb
mov
leave
aaa
in
jle
pcmpeqw
inc
dec
dec
mov
lret
push
scas
in
cmp
shl
bound
stos
ret
popf
call
mov
dec
std
rorb
aad
cmp
mov
jne
ljmp
repz
and
mov
mov
pop
inc
enter
enter
pushfw
movsl
insl
mov
loope
or
aas
loope
mov
pop
cmp
add
imul
outsb
scas
cwtl
cmp
cmpsl
loopne
push
vmwrite
jl
push
outsb
out
inc
icebp
mov
dec
jae
ljmp
pop
rcr
cs
lock
push
push
xor
cmpsb
xchg
sarb
jl
movsb
jbe
loopne
clc
jbe
lods
sbb
into
les
mov
repnz
cli
lock
call
xchg
xor
out
mov
mov
inc
cltd
push
sti
scas
push
mov
mov
xchg
mov
negl
or
fldl
mov
stc
lods
xsavec
jno
lods
pop
test
push
push
pop
addl
xchg
lret
jmp
push
add
loopne
icebp
or
xlat
cltd
adc
xchg
outsl
xchg
and
xor
jns
jae
aad
aas
cmp
xor
jnp
push
in
and
cwtl
xor
and
or
push
mov
scas
addl
xchg
int
jge
int
jmp
test
mov
js
test
xchg
cltd
ss
fnstsw
cmp
mov
ret
into
cltd
aas
cmp
sub
out
mov
pop
inc
cwtl
test
loope
cs
shll
cli
imul
cli
xlat
add
bound
testl
cmp
test
push
mov
push
or
jmp
shl
lcall
mov
sub
imul
clc
aam
arpl
sbbl
mov
ret
push
inc
mov
xchg
mov
call
lods
daa
shrl
jnp
cmpsl
stos
jge
or
jns
inc
mov
xchg
stc
push
cmp
xadd
mov
stos
xor
clc
or
or
test
stos
fsubrs
sub
xor
cmpb
inc
inc
xor
cmp
repz
in
and
pop
mov
or
push
imul
rclb
loope
and
mov
inc
rdmsr
and
lret
jmp
or
sub
fistps
dec
data16
sbb
aas
xchg
sub
adc
push
cltd
push
in
dec
cmp
pusha
test
xor
fucom
int
pop
inc
jnp
das
inc
push
icebp
and
pop
fldt
cmp
inc
cmp
sbb
shll
mov
xchg
pushfw
mov
pushf
sub
xchg
iret
and
repnz
imul
loop
fdivs
stc
rcrl
jecxz
jbe
jmp
pop
lahf
cmp
js
dec
in
mov
insb
push
adc
push
lds
pop
xor
pop
pusha
or
popf
push
fsubp
push
mov
xchg
rolb
jnp
sti
jle
enter
pop
pop
xor
xchg
adc
fldcw
dec
sahf
sub
cmp
movl
idivl
ss
shll
or
fwait
sbb
loop
lcall
add
test
add
loope
popf
sub
test
stos
xchg
fcomps
jb
and
xchg
pop
fildl
iret
push
jbe
xchg
jnp
stc
cmp
cmpsl
adc
and
movsl
cld
mov
cmp
xchg
gs
addr16
out
mov
mov
cmpsb
mov
arpl
inc
lods
push
push
pop
mov
or
test
std
jmp
adc
adc
mov
adc
loopne
pop
cwtl
scas
xor
iret
js
inc
and
test
cld
out
pop
sub
adcb
push
out
inc
daa
xor
dec
push
pop
std
stos
verr
leave
ja
lea
jae
mov
rep
cmp
pop
or
ret
fcomps
out
adc
xlat
xchg
lret
xor
cmpb
dec
jge
enter
add
ret
imul
xchg
sti
mov
aaa
test
mov
mov
xor
mov
iret
xchg
jge
mov
scas
xchg
dec
inc
mov
sbb
mov
lods
mov
xlat
mov
outsl
pop
aad
sahf
out
xchg
lock
add
add
cmpsl
lcall
or
lcall
pop
jecxz
add
sbb
decb
and
pop
js
push
sbb
jmp
dec
dec
mov
ss
push
leave
int3
jb
imul
dec
pusha
inc
xchg
cmp
mov
test
clc
add
mov
push
jecxz
inc
and
mov
out
pop
imul
push
pop
sub
div
imul
xchg
jne
cmp
cmp
out
test
or
mov
aad
sub
cmpsb
mov
mov
dec
cmpsb
push
cmp
and
repnz
pop
loopne
cmpsl
cmp
mov
mov
lret
scas
or
clc
xchg
aad
add
lret
pop
cmpsl
movsl
lods
push
lds
or
aas
xchg
test
hlt
lds
stos
mov
popf
jnp
arpl
adc
dec
xor
test
out
shll
pop
int3
ror
repz
push
jbe
push
in
das
lcall
cmp
dec
sbb
xor
fnsave
repz
mov
popl
xlat
mov
leave
ffreep
xchg
pop
mov
sub
inc
int3
icebp
sbb
cli
ss
fstenv
mov
lods
sub
mov
pushf
mov
fidivl
mov
stos
sub
jo
mov
mov
xchg
mov
mov
rcl
inc
mov
jae
jne
xchg
and
cmpsl
pop
mov
out
ds
dec
mov
cmp
fsubs
inc
cwtl
sub
and
pop
xchg
inc
sub
and
and
leave
aas
adc
repz
sbb
mov
outsb
mov
sbb
pushf
rorb
rclb
xchg
xchg
popa
and
and
sbb
xchg
inc
jne
sbb
setbe
and
sbb
mov
cs
and
xchg
movsb
movsl
call
out
ljmp
cmp
das
inc
add
sbb
clc
scas
sarl
xchg
add
or
pop
adc
fwait
leave
loopne
call
xchg
icebp
cmc
mov
call
stos
adc
fcomps
je
xorb
in
lock
cld
enter
mov
inc
cld
enter
mov
js
inc
andl
pop
imul
lds
insl
adc
sub
in
stos
loopne
out
clc
call
negb
shl
pop
mov
jle
mov
orps
mov
iret
adc
mov
mov
mov
push
jbe
xlat
stc
addr16
int3
mov
cwtl
mov
cmp
push
ror
in
cmp
mov
lcall
test
iret
pusha
rclb
dec
mov
pop
pop
inc
cli
add
in
loope
jge
pop
fmull
js
mov
leave
adc
dec
loop
hlt
and
jb
jg
push
dec
fimuls
cmp
xor
loope
idiv
push
lds
sub
add
jno
sbb
inc
clc
xchg
xor
cmp
insl
in
shrl
and
xchg
jnp
push
fcompl
out
sar
enter
xchg
sbb
lret
lcall
and
dec
roll
mov
jb
mov
ficomps
mov
mov
ret
cwtl
cmp
cmp
insl
cli
cld
jae
pop
gs
aam
in
jns
mov
adc
scas
lds
daa
sbb
mov
cmp
call
dec
sbb
fdivs
sbb
jb
pop
idivl
mov
lcall
aas
add
xor
lock
adc
xchg
loope
jg
rclb
mov
dec
sahf
dec
adc
das
cwtl
out
lret
cmp
mov
notl
adc
push
xor
call
adcb
mov
push
or
stc
lcall
xchg
cmp
mov
pop
sarl
mov
push
or
dec
std
add
dec
fisttpl
sub
xor
loop
sbb
test
or
jl
xchg
or
xorl
add
ss
dec
enter
mov
in
dec
xchg
push
dec
or
mov
jbe
jmp
fimull
aad
push
dec
push
xchg
sbb
loope
ret
cmpsb
popa
js
clc
pop
xchg
jmp
mov
aaa
aas
lock
cmp
inc
xlat
push
icebp
or
pop
sub
fs
xchg
std
and
xchg
test
mov
add
imul
lock
out
popa
xor
jg
out
mov
or
mov
ret
outsb
iret
shll
cmp
stos
movsb
mov
orb
jbe
adc
cmp
mov
mov
loop
jge
js
cmpb
int
iret
inc
push
ror
inc
out
adc
int3
add
dec
insb
pop
cmp
pop
inc
rcrl
fisubs
pop
faddl
mov
mov
ja
insl
cmp
repnz
and
nop
insb
incb
xchg
xor
jne
add
mov
fs
lret
push
adc
jmp
test
bound
lds
lretw
xchg
push
insl
std
fwait
dec
daa
loope
jae
jbe
ss
mov
shlb
pop
inc
cmpsl
dec
pop
sbb
scas
pop
jb
sub
popa
adc
add
push
sub
pop
int3
sbbb
mov
or
and
xor
dec
test
fadd
jge
mov
add
xor
add
popa
xchg
mov
sahf
test
push
stos
int3
in
pop
or
inc
mov
push
and
adc
in
lea
scas
mov
pop
sbb
decl
pop
sub
cltd
add
xorl
fistps
xlat
lret
pop
lret
inc
mov
aas
addl
xor
jle
adc
cwtl
pop
shll
jecxz
es
sbb
cmp
es
pushf
adc
pmulhuw
aas
inc
dec
cmp
push
js
and
addr16
and
js
jae
and
jle
repnz
pop
and
ja
pusha
adc
les
sbb
jno
xchg
jbe
call
les
out
fs
push
jmp
dec
push
mov
movsl
xor
dec
call
pop
pop
xchg
fstps
rcrl
jne
jge
insb
ret
andl
jg
xchg
jp
in
ljmp
jno
push
gs
in
sub
mov
cmc
jne
js
mull
jecxz
jne
mov
jge
lret
adc
jbe
pop
popf
and
or
xchg
and
popa
dec
sbb
out
or
scas
cmp
stos
pop
mov
cmp
and
aas
xor
push
sahf
outsb
fdivs
xor
fprem
jnp
pop
add
jnp
ficoml
pusha
in
aaa
aad
sbb
out
fidivrl
and
test
int3
mov
int3
ret
lea
mov
push
imul
push
das
and
add
fcompl
ja
inc
pop
or
cmp
cld
sbbl
pop
push
push
lock
jp
jno
insl
push
cmc
or
xchg
sbb
insl
push
cmp
mov
dec
lock
daa
pop
insl
cltd
addr16
inc
enter
jbe
push
cmp
push
adc
test
dec
enter
rcl
jp
mov
nop
mov
roll
out
into
jbe
sub
or
xchg
arpl
ja
sub
xchg
outsb
sahf
adc
ljmp
stos
cltd
xchg
pop
hlt
add
stos
mov
xor
ret
push
cltd
shll
rol
fs
sub
fs
sar
mov
xor
push
push
adc
repz
mov
adc
jmp
inc
in
jns
push
pop
pop
loop
mov
or
popf
xchg
add
cltd
in
push
sub
test
call
cmpsb
push
add
mov
mov
int
sahf
sbb
in
test
into
xchg
bound
push
xchg
sbb
pop
arpl
std
jmp
mov
jo
aas
jp
pusha
sarl
mov
cmovne
shrb
or
enter
fwait
mov
mov
es
pop
mov
jne
scas
mov
js
orb
mov
jl
in
or
addl
lret
es
test
test
std
jecxz
adc
inc
and
push
xchg
test
iret
push
push
rolb
jae
imul
mov
test
pop
mov
rcl
rcr
xor
xor
or
loop
jecxz
mov
daa
mov
jbe
or
push
inc
out
sbb
les
sub
imul
sbb
adc
mov
push
fwait
into
outsb
mov
mov
es
leave
sbb
cwtl
inc
jmp
dec
popa
adc
fstps
stos
xchg
or
orb
jg
test
xchg
or
repz
fcoml
movsl
inc
or
call
ss
je
aam
sahf
or
shrb
les
arpl
repnz
in
insb
cmpl
iret
enter
mov
jge
icebp
hlt
xorb
pop
xlat
sbb
push
aas
negl
mov
adc
ljmp
jle
push
ret
inc
jle
inc
repnz
pop
push
loopne
lods
inc
arpl
not
dec
gs
xchg
divl
jns
adc
shlb
or
mov
in
es
iret
xor
cmp
ja
lahf
insl
test
xchg
xchg
mov
fisubrl
insb
aam
mov
or
xchg
jbe
int
mov
dec
je
push
mov
or
lods
cmp
clc
mov
test
sbb
cmp
int
and
xchg
mov
out
sbb
inc
push
or
fmul
fimuls
pop
adc
nop
adc
addl
aam
push
leave
jnp
xor
push
into
iret
cmp
push
xchg
cs
daa
aad
sub
cmpsl
lea
decb
ja
sbbl
and
clc
inc
icebp
and
sahf
fst
mov
mov
inc
and
xor
daa
mov
jp
push
cmpl
lea
mov
sbb
cwtl
xchg
xchg
movsl
icebp
mov
mov
jge
mov
out
jnp
stos
iret
mov
sbb
xlat
push
imul
pop
in
das
jecxz
aaa
add
jp
in
sahf
push
mov
mov
push
cmpsl
icebp
xor
mov
add
popa
jle
mov
mov
inc
rclb
inc
xchg
ret
bound
and
js
xlat
jb
xchg
jo
test
cmp
xor
jge
mov
dec
xor
xchg
aaa
scas
mov
dec
push
repz
test
inc
adc
pop
fbstp
dec
dec
imulb
iret
nop
mov
lahf
sub
mov
xchg
je
cmp
insb
mov
mov
and
sti
push
xchg
jae
jnp
stos
sub
orl
add
pop
mov
mov
jb
mov
out
xchg
push
test
je
push
jmp
loop
mov
mov
adc
cli
and
inc
pop
dec
cmp
jne
ljmp
mov
cwtl
cmp
jle
cwtl
mov
push
cmc
lods
sbb
xorl
and
push
dec
outsl
xchg
sub
imul
lods
mov
jecxz
out
jmp
and
or
add
fists
xchg
insl
aam
inc
sarb
xchg
jp
fbstp
fdivr
popf
sti
daa
ror
sub
ret
lods
or
imul
cld
push
or
and
das
sti
mov
ret
lahf
ja
or
insl
addb
adc
and
fistps
dec
adc
fistps
or
cmp
lcall
pusha
xchg
test
sub
push
rolb
mov
call
call
push
mov
xchg
sti
dec
cmp
inc
in
popf
fcomps
and
bound
ljmp
and
sub
mov
cltd
mov
xor
xchg
cmp
xchg
fsubrl
pop
aam
inc
add
aas
xchg
arpl
mull
xor
test
and
push
cli
cmp
xor
pushf
test
sub
or
ljmp
mov
pushf
mov
insl
data16
std
call
push
cmp
insb
jg
sbb
xchg
push
in
push
std
push
enter
or
push
cwtl
sbb
xor
sub
dec
or
dec
xchg
mov
not
outsl
aam
sti
push
outsl
adc
test
or
pop
add
dec
dec
push
mov
add
fs
mov
mov
sahf
xor
cld
ljmp
push
mov
jo,pn
pop
pop
pop
mov
iret
fbld
and
xchg
dec
js
dec
mov
or
sbb
lret
pop
mov
mov
sub
and
clc
movsb
cmpsl
ja
jb
and
out
push
push
mov
inc
sbb
out
pop
xor
push
setne
fs
ficoml
mov
sti
sbb
mov
jnp
pop
lds
push
outsb
pop
sbb
mov
orl
push
jl
loopne
add
jo
in
je
scas
pop
xlat
pop
push
pop
mov
andb
jo
scas
test
cli
pop
pushf
jle
fs
dec
stos
cmc
icebp
push
dec
hlt
adcl
cld
push
jmp
push
inc
inc
mov
push
sbb
lret
add
adc
mov
sbb
inc
push
insl
lock
fdivs
lock
xor
cmp
and
jmp
pop
call
sub
pop
fidivrl
std
push
les
push
mov
int3
in
xchg
mov
mov
jge
loop
xchg
into
add
add
cmpsl
push
mov
mov
movsb
int
fdivr
in
aam
xor
sbb
and
adc
lret
in
pinsrw
or
ss
movsb
std
xchg
bound
dec
testl
roll
push
ss
cltd
add
xchg
inc
pop
call
dec
add
xor
sbb
xlat
pop
pop
nop
ljmp
pop
add
mov
pop
mov
leave
pop
sbb
andl
cld
push
sub
mov
mov
mov
or
pusha
mov
mov
cmp
cmp
mov
or
rcrl
cltd
cli
arpl
push
sbb
test
dec
lds
mov
mov
push
push
pop
iret
dec
popf
mov
or
cmpsl
aas
and
sbb
mov
cs
pusha
add
dec
or
bound
add
insb
cmp
add
or
adc
stc
pop
jae
adc
inc
mov
mov
aam
add
jae
dec
sbb
test
mov
and
bound
sub
or
mov
pop
mov
loopne
test
mov
cld
push
rcrl
sbbl
xchg
mov
xchg
cwtl
mov
add
lret
test
das
mov
push
pushf
cmp
xchg
jnp,pt
xchg
or
pop
sub
add
loopne
pop
std
jb
scas
in
rol
sub
mov
imul
push
or
mov
stos
cmp
xchg
jb
xor
test
xchg
rcrb
mov
mov
out
loop
outsb
adc
dec
pop
stc
or
jp
jo
push
nop
dec
cli
daa
test
stos
mov
mov
push
xor
xchg
mov
push
pop
add
xor
mov
movsl
jnp
lahf
das
scas
sub
cltd
sbb
sub
mov
dec
les
loop
out
in
rcr
jecxz
dec
xchg
les
jne
push
out
daa
jl
pushf
scas
mov
repz
jo
add
inc
repz
sbb
ljmp
fs
push
nop
mov
dec
loop
jl
pop
lahf
mov
pop
and
addr16
dec
cmp
jl
mov
sbb
fidivl
mov
and
mov
lock
pushf
pop
inc
mov
hlt
stos
lock
je
push
cmp
cwtl
out
or
nop
pop
jge
cmp
leave
ficoms
decb
pusha
insl
fisubl
lahf
mov
mov
inc
jae
adc
shl
jg
fistl
ret
lock
push
cld
ss
outsl
movsl
jbe
mov
cltd
adc
call
xchg
pop
sbb
in
pop
jo
add
ljmp
mov
mov
mov
lods
int3
and
xchg
and
add
sarb
sbb
ja
das
dec
push
lahf
jae
movsb
cwtl
gs
faddl
sbb
mov
add
sti
and
shr
cwtl
pop
movsl
or
rcll
rorl
pop
push
cmpsb
in
cli
test
adc
daa
scas
inc
pop
dec
pop
xor
jnp
aaa
xchg
or
pop
or
inc
jmp
fcompl
pop
mov
pop
lea
jae
push
loop
cmp
dec
adc
rcll
inc
jge
mov
into
xor
push
in
stc
adc
mov
inc
push
inc
jb
addb
xchg
mov
cmp
aad
push
mov
iret
sbbl
dec
bound
cmpsl
rcll
adc
add
push
outsb
add
mov
push
xchg
xchg
aaa
cltd
les
js
lds
xor
add
mov
sbb
loopne
addb
push
cmp
les
jo
jnp
push
cmpsl
divb
cmp
sub
ljmp
pop
lret
popf
add
pop
xchg
cmp
jg
clc
inc
or
ds
je
aas
leave
int3
push
push
nop
push
cltd
cmpsb
in
pushf
and
flds
xor
and
xor
mov
jl
pop
aad
cmp
push
daa
pop
ss
imul
icebp
cli
inc
mov
stc
ret
fidivl
cld
mov
int3
std
cmpsl
add
movsb
fwait
mov
lret
imul
inc
sbb
imul
out
add
rcr
iret
adcb
int3
stos
push
insl
pushf
stos
cmp
jecxz
out
sub
push
stos
lahf
dec
sti
mov
aad
sub
les
por
pop
je
andl
arpl
shl
inc
and
mov
call
addr16
pop
ds
mov
in
in
mov
mov
gs
jecxz
push
push
cmp
mov
insb
lahf
push
and
mov
mov
cmpsb
add
dec
mov
into
push
and
mov
insb
test
loope
and
pop
in
xlat
xor
xor
dec
cwtl
ret
and
pop
out
js
popf
push
loope
jns
jno
cli
xorb
ret
jns
adc
jae
mov
jnp
pop
inc
inc
fcoml
mov
mov
sti
push
push
and
add
dec
lret
xchg
jp
test
std
lret
xchg
cld
lcall
and
or
inc
push
and
sbb
jnp
stos
or
xchg
loope
adc
jg
jle
scas
or
add
addb
add
pushf
pop
xor
pop
nop
xor
lock
testb
stos
inc
fnstenv
cmpsb
andb
sbb
push
rcl
xor
rdmsr
push
mov
fidivrs
cmpsl
lods
gs
sbb
fs
cmp
test
out
dec
les
lods
xchg
lods
mov
std
or
mov
out
aam
ja
movsb
push
push
xchg
xor
into
in
mov
jb
ss
in
push
daa
bound
cmp
pop
cli
mov
lock
adc
movsb
push
ljmp
mov
stos
mov
jae
dec
jp
mov
cwtl
lods
mov
mov
adc
mov
notb
push
inc
push
and
addb
sub
dec
data16
jecxz
mov
mov
jecxz
jno
pop
orb
icebp
push
ds
in
inc
jns
push
into
cwtl
mov
sub
out
adc
hlt
mov
lds
dec
pop
or
jne
stos
int3
iret
and
test
stos
add
adc
and
adc
xchg
cmp
adc
or
cmp
shll
dec
push
and
testl
jmp
cmc
jb
cwtl
test
adc
pop
sub
push
sbb
mov
fstp
xchg
mov
mov
pop
in
ret
fadds
daa
adc
fcmovb
sub
jne
cmp
adc
push
into
dec
sbb
lods
insl
test
pushaw
sbb
out
inc
leave
jecxz
movsl
idivb
mov
ljmp
sahf
insb
pop
cwtl
push
lcall
dec
xor
inc
cmp
dec
mov
xchg
scas
enter
lds
sbb
mov
std
icebp
icebp
inc
xor
arpl
cmc
dec
sbb
xchg
aam
cmp
stc
xchg
les
and
dec
out
sbb
mov
push
repnz
gs
lret
aad
nop
or
rolb
jno
test
insb
jbe
addl
divb
es
mov
cmp
stc
push
dec
push
mov
pop
jae
push
popa
dec
and
rol
pop
imul
in
cwtl
sbb
orl
inc
lret
nop
xor
sbb
out
mulb
inc
lea
adc
or
inc
rolb
jb
popa
pop
jnp
push
lods
adc
mov
dec
or
daa
daa
addr16
pop
inc
pop
pop
sbb
adc
mov
and
adc
cwtl
push
push
jbe
in
or
sbb
imul
jnp
popf
mov
int3
jo
inc
imul
mov
mov
movl
xchg
add
adc
movsb
dec
mov
dec
xacquire
stc
loope
push
push
push
add
outsl
fistpl
dec
and
push
push
sub
add
lcall
mov
cmp
xchg
mov
andl
lret
aas
lock
xchg
loop
jo,pt
test
xlat
ret
les
push
cmp
jp
fdivl
fisttpll
scas
fsubrp
sub
mov
sub
jo
xor
sub
out
and
lahf
and
dec
loop
scas
ret
jl
xor
movsb
sub
mov
push
std
sub
rorl
addr16
jne
mov
add
sbb
jecxz
ss
push
xor
enter
mov
or
cld
lds
out
lcall
mov
das
push
sub
and
push
sub
mov
mov
jge
mov
push
dec
fcoml
push
iret
andb
xor
iret
clc
push
adc
adc
push
pop
aas
fnstcw
daa
call
fistl
rcr
scas
rcll
cmpsl
jne
in
xor
ret
dec
push
pop
ljmp
fwait
cli
inc
adc
scas
testb
in
fs
lret
aad
aas
repz
pusha
outsl
les
mov
inc
add
aam
or
int
or
mov
and
xchg
cltd
cmpb
lret
pop
pop
sub
out
icebp
mov
push
lds
repnz
mov
scas
sbb
xor
jmp
mov
negl
adc
push
and
pop
idivl
mov
clc
xor
outsl
push
lret
fdivp
fidivrl
into
pop
xlat
inc
and
aas
sub
sub
lock
cmc
mov
adc
xchg
pushl
inc
dec
ficompl
fdivrs
push
xchg
mov
sub
mov
and
add
mov
inc
push
cli
xchg
mov
add
test
mov
jo
jnp
adc
imul
adc
sbb
pop
sti
addl
jno
pop
xchg
loop
mov
push
es
pushf
sub
push
pop
pop
popf
dec
loop
sti
push
cmp
enter
int
sbb
adc
sbb
addr16
div
aam
sub
mov
cmpsb
mov
call
nop
xor
sub
cmp
ja
scas
lods
pop
add
jno
xor
sub
fnstsw
cmp
imul
cmc
add
mov
imul
outsl
sub
pop
in
add
fistpll
jae
testl
fdivl
rcrl
call
repz
push
outsb
xor
out
iret
sub
sbb
std
aaa
push
mov
lret
aas
mov
enter
inc
pop
and
data16
mov
cmp
inc
xchg
sbb
hlt
dec
inc
push
in
adc
jnp,pt
jb
pushf
sub
inc
es
clc
pop
push
rcll
out
cmp
sub
in
xchg
mov
mov
out
mov
iret
push
pop
mov
inc
cmp
xor
fwait
cmpsb
in
rorl
push
and
jne
pop
xor
mov
mov
lods
rclb
dec
int3
js
mov
rclb
test
movsl
pop
xchg
cld
pop
mov
xchg
outsb
jle
mov
mov
out
sbb
pushf
mov
loope
scas
add
int
and
add
and
dec
pop
dec
mull
stc
jmp
pop
sub
loope
data16
xchg
enter
nop
push
inc
sub
cltd
dec
aam
push
mov
das
jecxz
jbe
frstor
movsl
imul
push
push
js
fdivrl
dec
sahf
adc
subb
mov
mov
jge
adc
mov
fsubrs
adc
pop
dec
bound
leave
fidivrl
dec
cmp
xchg
pop
mov
notb
or
test
and
scas
lea
lret
xchg
ret
sub
lds
lahf
or
out
dec
cmp
cmc
mov
and
jns
mov
pop
fsubrl
push
das
pushf
push
add
enter
jae
sbb
push
hlt
cmp
test
inc
xor
mov
dec
lods
or
mov
sbb
testl
aad
jge
pop
or
push
pop
jno
or
sbb
xor
mov
aaa
or
int
test
xchg
jns
jl
push
mov
fdivrp
movsb
stos
mov
dec
xor
insb
pop
push
cmp
cld
in
popa
add
push
mov
jbe
shrb
test
stos
push
insb
or
jo
jmp
lea
test
mov
xchg
aaa
stc
aam
scas
popf
and
dec
mov
icebp
out
jmp
test
lea
pop
pusha
ja
fidivrs
clc
pop
xlat
sub
sarl
mov
xchg
cmp
lds
cli
mov
xor
jmp
push
inc
ror
movsb
outsl
arpl
dec
dec
cmp
nop
js
or
shrb
imul
xor
dec
js
push
lods
xchg
pusha
iret
jnp
lcall
jae
lcall
divb
jnp
pop
add
lock
inc
cmp
andb
iret
pop
push
mov
out
loopne
dec
fwait
sub
sub
scas
stos
mov
pop
sahf
sub
jp
into
loopne
mov
iret
int3
das
adc
int
mov
jle
cmp
ret
jae
xor
pop
jnp
inc
insl
jmp
dec
dec
jbe
jmp
mov
add
scas
lcall
mov
outsl
adc
push
andb
add
and
push
leave
cmp
testb
lea
cli
and
add
je
mov
pop
loope
mov
in
in
fwait
xchg
pusha
lret
mov
rolb
lea
aad
mov
xor
or
adc
in
mulb
xchg
ss
leave
bound
cwtl
and
fdiv
and
inc
int3
nop
adc
xor
adc
cmc
cmpsb
scas
fisttps
push
in
adc
fmull
es
xchg
xor
push
pushf
fldt
cmp
inc
bound
fimull
hlt
cs
pushf
out
mov
mov
dec
leave
mov
sub
adc
into
loop
in
shl
sub
or
xor
pop
mov
je
aad
out
adc
xchg
stos
pop
mov
lahf
mov
jbe
je
insb
fbld
cmp
stc
mov
iret
cmpb
push
fcomip
aad
stc
ja
test
or
fimuls
shlb
push
push
mov
int3
sbb
mov
xor
and
pop
mov
ljmp
hlt
inc
sahf
cmp
outsl
mov
das
or
addr16
bswap
fwait
pop
out
push
inc
or
loopne
pop
push
ret
aas
hlt
fwait
sub
add
mov
in
outsl
push
xchg
test
xchg
ja
aam
push
adc
fwait
das
jns
push
mov
jmp
inc
in
ds
cmp
fdivp
fldl
and
mov
jge
and
fstpt
xor
test
sbb
xor
add
mov
mov
js
mov
idivl
jmp
push
lea
outsb
dec
scas
emms
out
cmp
test
push
xor
xchg
movsb
movsl
outsb
push
outsl
adc
push
in
cmc
add
adc
das
fld
xor
ret
push
pop
add
add
add
push
jb
pop
in
insb
fmull
or
cmp
jbe
jp
insb
enter
icebp
jns
pop
lds
jg
jg
jns
inc
inc
fildll
add
jne
mov
push
inc
adc
out
lea
sbb
push
daa
dec
adc
xchg
out
mov
popa
bound
nop
repz
or
popf
or
ss
dec
jne
call
in
jno
movsl
rol
imul
fisubl
push
lret
mov
pop
mov
and
sar
sbb
mov
data16
xchg
jl
enter
inc
scas
cld
pop
arpl
and
adc
outsl
into
adc
dec
fisubrl
rcrl
subb
insl
aad
jbe
xor
shll
sbb
add
rcpps
mov
fs
aas
jmp
xor
mov
dec
dec
cmp
cmpsb
mov
pop
jp
dec
xor
jbe
leave
and
hlt
jmp
shlb
pop
clc
sbb
mov
hlt
push
or
dec
xchg
and
fisubs
jp
inc
sub
sbb
cmp
out
push
adc
cwtl
push
fsub
addr16
vmovss
adc
lods
jp
mov
adc
mov
test
mov
lock
addr16
xchg
inc
dec
ret
imul
sahf
push
dec
xchg
xor
aam
adc
cld
in
cmp
leave
inc
dec
pop
loopne
sbb
mov
mov
pop
frstor
rcll
testl
or
pop
xor
arpl
jp
test
popf
inc
inc
imul
jecxz
dec
outsb
mov
insl
test
push
pusha
xchg
adc
mov
mov
sub
push
xchg
call
adc
es
jecxz
fdivl
jnp
xchg
inc
sub
and
sub
outsl
mov
mov
aaa
iret
xchg
push
jmp
daa
and
shll
and
sbb
scas
cmpsl
mov
mov
pop
cmp
mov
shlb
out
jmp
jo
mov
lcall
fwait
das
into
rorl
and
ss
jb
and
cld
pusha
mov
cmpsl
gs
std
cltd
add
pop
mov
fdivr
jmp
xchg
fwait
xor
push
outsl
cs
lock
jnp
test
call
lea
inc
das
icebp
adc
xchg
mov
sbb
dec
cmp
mov
or
jle,pt
xchg
je
jp
cld
icebp
dec
inc
cwtl
xchg
push
sub
arpl
fmulp
pop
popf
je
testb
pop
fisubs
shrb
cmp
mov
inc
aaa
xchg
cli
test
leave
movsl
xchg
in
inc
cmp
cli
or
mov
mov
imul
mov
test
adc
xchg
rcl
add
and
jmp
lret
movsl
cmp
scas
mov
inc
sbb
scas
jns
fistps
pop
test
jo
mov
push
sbb
add
pop
xlat
pop
jb
inc
or
mov
jp
jnp
ss
xchg
test
outsb
xchg
sub
nop
push
mov
adc
xor
jp
insl
sbb
dec
sub
mov
add
daa
lcall
fdivr
ja
sub
ja
in
popf
dec
rclb
mov
outsb
imul
cmp
fcomp
jne
pop
mov
sbb
mov
pusha
sub
cltd
dec
mov
lret
mov
fs
mov
repz
fadds
adc
shrb
cltd
shlb
int3
mov
cld
rcrb
xor
fmuls
pop
das
adc
test
decb
les
jmp
or
scas
lret
movsb
lds
push
jne
xchg
jae
aam
jl
not
or
scas
mov
jns
fwait
movsl
nop
jns
mov
push
fwait
sbb
cli
jmp
sahf
fidivrs
ss
jecxz
xorl
xor
inc
loope
sbb
push
addl
jo
dec
test
and
leave
lret
ret
sub
pop
in
fldenv
pop
or
addr16
pop
insb
jne
movsl
sub
mov
out
mov
sbb
loopne
mov
xor
fmuls
inc
call
shlb
xorl
loope
pushf
push
cli
repz
jns
jp
cmp
js
xchg
xchg
dec
jmp
scas
je
lods
adc
xor
mov
or
in
data16
push
adc
jle
mov
sbb
test
add
sub
les
fisubrl
pusha
data16
xchg
xor
cltd
fmull
je
or
insl
xchg
push
sub
negb
xor
cltd
outsl
outsl
pop
jp
dec
insl
aas
dec
jbe
pop
aas
mov
adc
sub
fs
divl
push
orb
nop
ret
add
movsb
mov
xor
into
call
and
rorb
shl
push
popf
cli
mov
fwait
into
xchg
cld
mov
inc
add
bound
cs
jno
mov
mov
and
clc
aam
xlat
xchg
in
scas
repz
addr16
and
dec
out
test
cs
mov
adc
lret
pop
cli
lds
sahf
sbb
xchg
push
cltd
int
addr16
jo
pusha
test
push
outsb
jmp
sub
cs
cmpb
fwait
rolb
aaa
or
shlb
mov
imul
xor
push
aaa
or
sub
mov
jo
sbb
ret
popf
bound
lcall
mov
jbe
inc
sub
pop
jb
ret
pushf
dec
mov
hlt
ja
bound
pop
andb
fs
and
push
mov
xchg
sbb
fiaddl
lock
xor
inc
loop
lahf
inc
out
mov
or
scas
push
fidivl
inc
or
mul
insb
sarl
xor
mov
mov
cmp
inc
jo
movsl
mov
inc
xchg
pop
repnz
adc
int
rcl
xchg
cmp
inc
in
rcpps
mov
icebp
lock
rcll
out
jne
xor
push
add
add
andb
bound
sub
cmp
fimuls
je
je
out
in
mov
and
xlat
xlat
mov
adc
fwait
js
mov
pop
sub
stos
mov
out
jne
xchg
pusha
or
into
mov
sahf
ja
lods
in
in
int3
aam
aad
mov
in
push
dec
repz
mov
ret
ja
and
rorl
repz
addr16
idiv
pusha
insb
pop
inc
sub
jp
push
js
js
int3
push
rolb
out
stos
xchg
aad
jnp
cmp
pop
mov
and
jne
dec
xor
mov
and
shl
inc
xchg
mov
mov
repz
pusha
push
mov
xor
idivl
mov
ja
and
jae
fstpt
adc
leave
push
pop
mov
icebp
sub
dec
sbb
pop
sub
lahf
inc
mov
cmovnp
sub
insb
movb
dec
xchg
xor
sbb
sub
sahf
lahf
test
push
ljmp
jge
ret
or
dec
push
jmp
push
xchg
out
cmpsl
and
gs
pop
fwait
xor
xor
int3
jns
out
test
mov
mov
not
or
aam
int3
and
icebp
sub
shll
mov
out
jbe
add
mov
cmp
jmp
stos
test
mov
dec
xorb
add
stos
insl
enter
pop
push
data16
xor
add
jl
and
sub
xchg
and
arpl
std
mov
bound
sbb
outsl
imul
mov
jmp
cli
push
ret
and
mov
push
popaw
and
lret
sbb
std
dec
inc
mov
dec
mov
mov
cmp
add
push
jne
ret
add
sbb
ss
pop
ret
pusha
into
sub
or
lret
sbb
and
pop
test
sbb
jp
pop
test
sub
shr
insl
movsb
repz
ds
fdivl
dec
test
rolb
mov
xchg
sub
test
rcll
leave
adc
jg
dec
mov
sbb
test
cmc
mov
call
adc
jno
xchg
ffreep
outsl
pusha
loope
addb
pop
aam
daa
inc
sbb
add
ret
shl
dec
add
dec
pushf
and
mov
loopne
arpl
fcmovbe
sub
push
push
sub
sbb
movl
shlb
incb
leave
notb
mov
sub
cli
pop
scas
aad
iret
jp
andb
dec
pop
inc
int
or
sbbl
pop
mov
add
ja
call
lods
test
in
into
and
bound
cmp
dec
cmpsl
inc
jbe
div
sarl
jmp
dec
inc
pop
fwait
test
and
jle
pop
pop
rclb
jb
push
dec
stc
or
pop
sub
and
push
cmpb
xorb
jno
mov
dec
mov
lret
adcl
loopne
rol
pop
or
cmpsb
pop
add
or
fbstp
cmp
mov
mov
sbb
rcrb
out
fsubr
xchg
cmp
icebp
inc
ret
mov
xor
adc
xchg
pop
push
and
cmove
je
stc
shlb
mov
cmp
lcall
jle
cmp
sbb
cwtl
lret
lret
inc
cs
mov
ds
arpl
icebp
into
ss
cmpsl
shll
jae
or
pop
xlat
and
lret
jl
push
orl
cmpsl
mov
pop
sahf
jg
out
mov
push
xchg
loope
push
iret
jb
mov
hlt
std
aam
xchg
mov
aam
xchg
mov
inc
cltd
or
mov
movsl
push
sub
mov
or
ficoms
lods
js
js
lcall
push
out
imul
orl
jg
arpl
xchg
out
stc
fdivs
xor
outsb
or
and
iret
jle
or
fidivs
or
push
mov
dec
cmpsl
and
aas
fs
pop
adc
xlat
jp
mov
pop
dec
xlat
clc
inc
test
pop
fadds
push
mov
push
inc
mov
adc
sub
cwtl
jnp
push
clc
call
inc
aaa
jecxz
out
cmp
inc
jmp
sub
add
inc
mov
hlt
ficoms
lock
xor
cmp
adc
pop
xchg
test
mov
mov
sbb
sub
pusha
jnp
push
movsl
negb
enter
lock
xor
dec
in
daa
mov
pop
std
jl
fistl
sahf
scas
dec
jno
or
sbb
stc
xor
sahf
xchg
push
xchg
inc
test
push
inc
popa
mov
cmp
and
into
mov
das
out
jbe
out
cmc
dec
dec
mov
test
inc
loop
add
mov
je
mov
hlt
cmpsb
sbb
cmp
dec
pop
cmp
stc
out
cltd
cmc
int3
mov
daa
popf
inc
and
lahf
jno
mov
pop
or
mov
xchg
add
pop
shrb
in
loop
lret
sub
cmp
or
daa
inc
or
cmpsl
adc
xor
mov
lods
push
add
lret
sbb
bnd
incb
popf
push
shll
mov
test
sti
xor
inc
pop
int
dec
hlt
enter
lcall
sub
add
insb
mov
sub
add
xor
jns
xlat
pop
xor
popa
xor
push
inc
mov
cmp
out
cmp
cmp
pop
push
pop
cltd
loopne
lea
and
push
loope
fwait
mov
negl
xor
hlt
fidivl
add
adc
mov
lahf
xchg
xchg
or
jl
jle
pop
jo
jb
aad
nop
hlt
cli
into
fsubrl
pushf
and
mov
loope
inc
or
mov
arpl
mov
sub
test
call
rcrb
adc
clc
addr16
std
mov
lret
shlb
outsl
movsl
sbb
xor
lahf
nop
or
je
fst
and
mov
repz
xlat
or
lret
jecxz
or
pop
test
lss
lcall
jl
push
inc
push
pop
push
cld
sbb
out
das
pop
mov
dec
adc
sub
sahf
clc
daa
leave
addr16
xor
mov
push
data16
stos
inc
push
xchg
imul
stc
out
mov
sbb
punpckhwd
push
xchg
clc
insl
cmc
loop
enter
or
xchg
push
bound
sbb
std
aas
fdivrs
add
pop
xchg
sti
into
sbb
jns
lahf
xor
out
test
add
sbb
sbb
push
or
jbe
test
and
mov
dec
cmc
test
dec
and
fdivr
orb
stos
mov
pop
sub
inc
mov
stos
xor
inc
push
loope
mov
push
adcb
pop
xchg
ds
pop
push
push
xchg
test
mov
int
in
jnp
sti
leave
add
mov
push
mov
mov
xlat
aaa
adc
icebp
mov
out
mov
pop
add
dec
daa
inc
in
xchg
pop
mov
mov
adc
sbb
subl
data16
adc
inc
test
daa
and
cmpsb
mov
add
xor
mov
mov
xor
enter
inc
movsl
mov
movsb
push
arpl
mov
andl
fs
imulb
inc
pushf
inc
es
lahf
adc
dec
mov
push
sub
negl
or
lcall
subb
insl
aas
repnz
xchg
iret
mov
xor
sti
aaa
push
sbb
test
bnd
or
mov
pop
and
test
test
mov
push
aaa
sub
xor
mov
repz
push
xchg
lock
out
inc
pop
push
mov
and
mov
in
pop
mov
cmp
into
movsl
mov
cmp
cltd
cmp
xor
and
xchg
xor
push
test
outsb
push
push
and
clc
pop
mov
aas
dec
mov
or
mov
mov
lcall
jmp
test
movsl
inc
sub
aam
jl
js
movsb
pop
cli
imul
lcall
popa
and
push
xchg
jne
iret
repz
std
call
roll
adc
add
pop
fsubl
inc
and
nop
inc
popf
xchg
mov
pop
in
nop
xor
mov
or
outsb
xlat
inc
clc
lds
mov
mov
mov
and
mov
sbbb
jo
push
cmp
fsubl
sbb
inc
rorb
hlt
ret
dec
pop
xchg
clc
inc
hlt
cmpsl
push
dec
test
lea
push
ja
inc
adc
fdivrp
leave
int
jg
int
aaa
insl
loopne
dec
inc
cmpsb
mov
gs
aad
pop
and
nop
push
mov
xor
outsb
decl
je
dec
xchg
stc
mov
aas
int3
lods
xchg
sub
sub
xchg
push
push
gs
ret
negl
xor
cli
sbbl
pusha
stc
xchg
int3
mov
mov
fisttps
adc
js
sub
jae
mov
push
pop
push
xchg
sbb
mulb
mov
jb
in
sbbl
pop
insb
sub
pop
shl
xor
loope
sti
mov
mov
je
sbb
popa
and
gs
mov
jnp
in
sub
test
shlb
mov
mov
loope
sbb
repnz
clc
mov
es
sbb
sbb
add
pop
add
sbb
lcall
fdivp
out
or
mov
dec
cmp
call
lods
push
out
push
dec
sahf
xchg
xchg
popa
imul
fiadds
add
dec
xchg
ja
sub
rolb
lcall
xchg
add
jbe
and
fs
test
cmp
mov
and
das
cli
xchg
sbb
jbe
and
or
lds
popa
pop
sbb
xor
inc
aad
xor
cmp
int
xchg
or
aaa
cli
enter
mov
mov
mov
inc
xchg
adc
mov
shlb
sub
push
idivl
mov
ret
push
pop
pop
jg
repz
pop
cmpsl
cs
out
xchg
xchg
pop
add
sbb
gs
sub
dec
xor
ret
adc
cmp
ss
vmwrite
andb
cs
adc
add
mov
out
pop
sarb
popa
mov
or
cmp
outsb
pop
jae
cmp
or
shll
repz
or
adc
jg
add
lcall
mov
aaa
mov
cs
mov
pop
out
pop
lahf
insb
out
fadds
fidivs
repnz
xlat
leave
xchg
lds
call
lods
fisubrl
sahf
push
push
into
test
insb
jecxz
xor
fidivrl
push
pop
fsubrs
pop
ficomps
jg
repz
xchg
dec
shl
mov
inc
rorl
xchg
pop
mov
adc
dec
int3
fst
rol
pusha
fimull
mov
pushw
mov
nop
add
cmpb
fistpl
add
repnz
xchg
adc
xchg
add
xchg
sub
push
aaa
push
mov
gs
sub
loope
lds
pusha
rclb
out
fwait
mov
sbb
lea
pop
inc
sub
dec
fmuls
ds
and
scas
cmp
cmpsl
sbb
mov
scas
arpl
outsb
test
push
loopne
xor
push
in
fisubrl
sbb
and
or
jp
in
pop
or
sub
push
adc
mov
sarl
cmp
bound
or
mov
cmp
test
and
mov
scas
andb
xlat
mov
in
push
mov
pop
cmpsb
and
in
dec
pusha
and
sbb
xchg
xor
sub
add
iret
xchg
xor
inc
push
push
mov
fucom
sar
mov
hlt
mov
pop
test
fs
cmp
cmp
in
lods
fists
ljmp
pop
sub
lock
dec
and
xchg
iret
sbbb
jo
sub
jl
ja
add
rcl
cmp
mov
jne
mov
clc
lcall
ror
test
and
in
add
mov
adc
mov
in
movsl
neg
jae
test
mov
xor
sub
xchg
aas
push
add
pop
mov
je
outsl
xor
sahf
testl
dec
ljmp
cmp
dec
sbb
cmpsl
pop
loopne
cmp
scas
jae
lcall
sarb
mov
push
pop
and
xchg
dec
or
mov
js
pop
shll
stc
in
dec
fdiv
or
ljmp
mov
fdivrp
mov
cld
push
xchg
aas
push
cmp
or
mov
and
popa
filds
pop
inc
xor
jno
pushf
adc
idivl
je
lds
clc
cmpsb
xlat
sub
xor
xchg
jne
rorb
jge
std
adc
movsb
in
into
imul
mov
push
add
sub
ljmp
ret
xchg
outsl
cmpsl
mov
and
std
push
xchg
sbb
and
push
inc
mov
negl
cmp
cmp
or
xchg
js
sub
inc
push
xchg
add
je
mov
mov
rclb
loop
mov
inc
sub
inc
jmp
mov
pop
mov
ret
push
xchg
ret
push
dec
ja
in
fs
jo
test
lods
push
push
xor
dec
mov
sti
lods
push
xor
cmp
outsl
jmp
pop
xchg
xchg
mov
gs
imul
mov
movb
cmp
adc
ja
pusha
jne
cmp
mov
jge
lods
xlat
outsl
shlb
jle
inc
jae
int3
stos
ucomiss
push
pop
inc
cmp
into
adc
dec
inc
lahf
int3
enter
fisubl
xchg
aas
sub
and
in
sub
test
push
shll
fsubl
and
imul
push
lods
out
insb
push
pop
js
cwtl
pushf
aad
insb
inc
cmp
movb
push
stc
sbbb
aaa
add
mov
push
ret
cmc
or
clc
pop
adc
mov
xchg
stos
imul
inc
mov
pop
mov
push
jae
xor
cltd
je
imul
pop
cmp
mov
mov
add
push
jb
adc
mov
jmp
jns
ja
adc
pop
pop
data16
fiaddl
xor
loopne
in
dec
mov
push
insl
sbb
add
pop
fwait
push
mov
dec
lea
sar
jns
or
pop
aad
xchg
mov
or
adc
add
aas
lcall
sbb
movsb
mov
pop
or
cld
daa
es
inc
xchg
mov
enter
pop
scas
pop
popf
or
dec
fcompl
inc
cwtl
mov
fcomi
outsb
js,pn
aad
mov
test
push
mov
arpl
out
push
jnp
iret
mov
repnz
jne
cmp
jle
adcb
test
out
dec
cmpsl
js
out
lods
xor
scas
rolb
ficomps
mov
xchg
or
loop
cmp
enter
push
add
jecxz
and
xchg
xor
adc
sub
mov
cli
cmp
dec
mov
xlat
fstpl
jl
test
std
pop
lret
or
imul
imul
and
rorb
cmp
mov
in
incl
mov
sub
out
push
cmc
inc
cmpsb
add
scas
cld
push
xchg
and
mov
xchg
insb
pusha
adc
mov
xchg
ret
test
jge
lahf
xor
je
popa
aam
xlat
cs
pop
and
add
scas
xor
ja
push
movsb
jbe
mov
xlat
dec
mov
cmpsl
or
adc
xor
fcompl
adc
scas
adc
cmpsb
sub
icebp
lds
imul
mov
movzbl
sbb
fsubrp
das
xchg
dec
cli
popa
repz
aas
mov
mov
test
jns
aas
mov
sub
repz
cmc
cld
jp
xchg
inc
pop
les
rolb
dec
mov
adc
push
push
fildl
add
pop
clc
repnz
xor
loopne
sahf
mov
mov
jg
ss
cmp
aaa
rcrl
shrl
mov
std
pop
xchg
lahf
gs
sbb
ljmp
push
in
jbe
int
jle
lret
ds
fidivs
xchg
ret
mov
mov
or
mov
cmp
mov
pop
sub
xor
push
pop
cmpsl
mov
or
orb
stos
pusha
mov
sub
fstpt
jae
and
jno
push
sahf
aad
ja
or
xchg
or
das
sbb
out
bound
test
lahf
xor
mov
imul
fildl
jmp
popf
push
dec
push
ret
xchg
cli
pop
pop
das
jmp
push
and
pop
jecxz
mov
aam
mov
test
xchg
jbe
jmp
dec
sub
lret
pop
cmp
pop
adc
stc
fucomi
jno
add
into
icebp
insl
mov
xchg
dec
push
mov
mov
pop
mov
filds
cmp
inc
call
sbb
xlat
int3
mov
stos
in
mov
mov
in
test
sbb
popa
sbb
std
sub
dec
adcl
mov
fcomps
insb
in
mov
mov
ss
or
xor
gs
arpl
sbb
jg
xlat
ret
dec
ss
pop
or
or
mov
jecxz
mov
or
add
push
bound
xchg
cmpsl
push
mov
enter
dec
in
jno
fwait
cmp
and
fdivl
adc
sti
in
int3
popa
push
shll
cli
dec
add
xlat
sahf
mov
mov
add
lret
adc
out
xor
fs
shl
cmc
out
test
pop
fsubrs
lahf
fs
shrl
decl
sbb
cli
pop
push
leave
jnp
or
adc
xchg
and
lcall
or
and
insl
or
xlat
lods
test
jne
in
jb
sbb
mov
cmc
jns
cmp
in
icebp
jl
adc
cmpsl
bound
add
inc
push
fwait
mov
call
pop
cli
stc
fldt
push
cmp
adc
out
insl
int
inc
sbb
cmp
inc
or
and
in
adc
or
pop
test
mov
sti
mov
adc
testb
mov
mov
ret
inc
or
stos
inc
out
fmull
fidivl
dec
sub
cld
sahf
and
rcl
pop
push
add
aam
fldt
ss
cs
push
rolb
or
arpl
cmpsl
inc
mov
mov
rorl
mov
cmp
adc
jo
pop
aaa
fs
subl
lds
sbb
rcl
jne,pn
jne
lahf
push
bound
test
adc
adc
jg
sbb
inc
adc
in
sbb
sbb
sub
mov
js
lock
fwait
pop
lods
inc
das
adc
pop
mov
pusha
jb
push
jns
mov
popf
movsb
inc
outsb
add
push
pop
pop
ret
add
std
insl
fstl
jno
xchg
jbe
mov
sbb
inc
xor
and
test
cmp
mov
sbb
jmp
js
jg
mov
xor
cld
das
add
adc
and
insl
fucom
jge
sbb
ret
xlat
mov
nop
loope
jecxz
rorb
lcall
pop
ja
jecxz
test
mov
sbb
add
int
xor
xchg
adc
aaa
jne
mov
les
xchg
dec
pop
lea
lea
out
ds
sbb
mov
jecxz
sbb
dec
fildl
shrb
lret
jae
mov
ja
xchg
mov
add
daa
push
mov
je
adc
insb
xchg
mov
cmpsb
fisubrs
dec
idiv
lret
adc
in
xchg
mov
pop
mov
rcrl
andl
pop
aam
pop
pop
pop
ds
xchg
rorl
dec
stc
mov
iret
xor
aas
jecxz
mov
aad
jp
pop
dec
jno
stc
mov
and
js
imul
mov
push
sbb
xlat
or
mov
mov
jp
lods
mov
pop
mov
scas
dec
out
pop
add
mov
fisubs
loopne
pop
out
clc
push
mov
sti
jecxz
into
jbe
fimull
iret
xchg
jnp
xor
aad
fnstsw
adc
dec
or
sub
sti
adc
out
mov
cmp
jb
ds
mov
cmpsb
mov
mov
mov
movsl
push
jb
scas
mov
fistpl
lahf
imul
fcmovnbe
or
jae
sbb
inc
ja
lcall
js
cs
and
dec
sbb
cmp
popf
inc
sbb
in
pop
or
es
jo
push
out
xchg
in
jle
cmpl
pop
lretw
out
cmp
and
cwtl
fwait
mov
mov
cmp
pushf
cmpsb
sti
hlt
cmp
sub
in
adc
or
pop
ljmp
inc
fdivl
lods
push
in
mov
stc
repnz
xchg
adc
mov
aaa
or
jge
in
cwtl
cmp
sub
cltd
xor
inc
stos
inc
pushf
int
fstps
rcl
lds
add
cli
lcall
frstor
mov
outsb
mov
hlt
gs
dec
push
cmp
das
cmp
and
insl
and
loope
pop
shrl
pop
pop
cmp
xor
mov
xchg
mov
mov
jb
sahf
xor
mov
hlt
add
xor
jmp
xchg
mov
adcl
fimuls
lahf
cli
adc
push
ljmp
arpl
push
or
mov
std
inc
es
adc
rcrb
imul
jl
sub
cmpsl
cmp
scas
fimuls
mov
inc
scas
add
in
cmp
pushfw
ljmp
add
ret
stos
mov
xchg
fwait
mov
movsl
out
xor
xchg
lods
lds
fmuls
xor
dec
mov
pop
xchg
ja
xor
int
pusha
pop
push
or
inc
jmp
sub
mov
lods
and
arpl
aad
push
repz
xor
fwait
ss
imul
sbb
xchg
dec
or
gs
sbb
or
mov
std
int
icebp
ror
pop
sbbl
inc
ret
out
and
repnz
shrl
or
xchg
cmp
dec
jne
push
push
xor
jnp
inc
out
pop
out
cmp
mov
shll
insl
mov
mov
sbb
dec
aam
adc
or
push
pop
in
popf
cmp
inc
clc
mov
push
lods
fcoms
loop
stos
sub
sub
subb
mov
inc
test
pop
leave
pusha
jo
clc
cmp
int3
sub
push
iret
cmp
and
dec
pop
xor
dec
mov
mov
cmp
cmp
fsubrl
lcall
test
sahf
shrb
mov
addb
out
data16
lahf
icebp
popf
outsl
mov
xor
imul
mov
mov
mov
vmptrst
push
push
dec
dec
dec
lret
imul
cmpsl
jle
adc
mov
xor
mov
lock
pop
jge
test
lret
fdiv
or
lock
imull
repz
rcll
addr16
out
fnsave
stos
stos
inc
adc
loop
aad
scas
mov
pop
mov
lret
pop
arpl
fdivrs
imul
add
mov
push
jae
jecxz
decb
insl
cmpsl
cld
and
push
add
mov
and
adc
push
inc
jno
jle
mov
sub
daa
pop
xchg
imul
mov
sub
adc
stos
add
call
out
pop
sbb
leave
jne
dec
test
stos
loope
ds
sbb
jns
inc
popf
add
dec
pop
addr16
add
jecxz
inc
fstpt
in
ljmp
lret
rcrb
push
pop
mov
ljmp
cmpsl
dec
dec
mov
cs
repz
out
mov
xor
js
outsl
fmuls
push
sbb
mov
cmp
add
rcr
push
daa
cmp
icebp
std
mov
daa
add
push
pop
popf
cmpsb
jnp
pop
push
jg
clc
cmpsb
push
idivl
rorl
jmp
mov
out
push
push
xorl
js
cmp
aad
clc
push
lock
mov
jns
ss
inc
cmp
jo
pushf
sahf
sub
decl
sbb
sarl
xchg
test
popa
xchg
add
sbb
push
enter
add
xchg
push
jp
sub
jle
scas
mov
push
adcb
mov
test
inc
xchg
bnd
adc
das
dec
pop
aas
rcrb
inc
mov
loope
ja
dec
inc
sub
xor
aas
scas
cld
jg
rorl
in
xchg
pusha
es
cmpsb
push
test
test
leave
pop
shll
loope
in
adc
icebp
mov
xor
inc
xchg
xor
mov
addr16
outsb
push
arpl
cmp
xlat
ret
lods
lea
in
ja
js
mov
hlt
hlt
or
add
jo
dec
ficoms
xchg
mov
adc
mov
pop
push
mov
mov
stos
movsb
imul
push
push
jecxz
inc
mov
mov
fwait
adc
je
and
mov
or
add
jg
sbb
xor
mov
mov
seta
pop
out
cmpsb
divps
ret
in
les
nop
shrb
mov
andb
xor
xchg
mov
test
stos
adc
pop
or
adc
sub
mov
std
add
mov
popf
jno
dec
iret
sub
lods
lods
fs
popf
fisubl
push
push
dec
xchg
cmp
int3
lods
jno
nop
out
or
arpl
fcmovu
int3
lcall
fadds
movsl
sub
int3
push
add
push
icebp
dec
outsl
adc
mov
cmp
outsb
mov
stos
dec
xchg
inc
or
and
and
stos
ljmp
adc
aad
push
movl
and
data16
out
adc
inc
add
out
sub
rcl
xchg
mov
pop
add
inc
adc
pop
aas
addb
roll
dec
rcll
sbb
inc
sbb
out
popf
loopne
cmp
in
xchg
mov
roll
sbb
pop
lcall
rcrl
mov
loope
mov
pop
push
add
xchg
dec
lret
insl
pop
or
push
mov
lods
lret
repz
mov
fwait
dec
aam
in
fs
xor
push
dec
and
cmc
stc
arpl
stos
jge
cmpsb
push
pop
sub
inc
mov
inc
data16
outsb
pop
jecxz
cmc
cmp
adc
aas
cmp
xchg
mov
out
rolb
xchg
mov
jnp
repnz
mov
stos
out
add
mov
adc
jb
xor
mov
sbb
enter
push
sub
jae
cmp
in
bound
jle
mov
and
loope
inc
jp
add
jg
mov
mov
add
xor
ret
cmp
sbb
mov
jb
inc
loope
pop
and
nop
ret
dec
jecxz
loopne
test
dec
xchg
push
mov
icebp
popa
adc
ret
xchg
rcrb
scas
popf
fidivrs
fwait
push
sub
or
adc
repz
xor
mov
xchg
in
lahf
sahf
dec
fisubl
mov
in
movsl
iret
test
push
sub
inc
mov
pop
pop
popl
leave
jmp
rcrb
mov
mov
push
mov
ss
sub
imul
leave
adc
ucomiss
xor
add
mov
pop
movsl
cmp
call
clc
in
sub
adc
js
jp
and
sub
add
imul
fcmovnbe
sbb
mov
cmpl
in
popa
jae
test
adc
or
shll
dec
orl
dec
pop
and
jl
mov
loop
and
dec
icebp
lds
mov
mov
out
rorb
inc
add
pop
pop
push
xchg
fmuls
cmp
jecxz
std
inc
push
test
adc
gs
jno
jmp
lcall
adc
adcb
in
out
mov
aad
mov
inc
lea
or
mov
rolb
inc
xchg
jmp
repz
sbb
cmpsl
jg
icebp
fs
movsl
out
mov
or
cmpsb
mov
fwait
cwtl
inc
mov
movlps
xchg
aam
in
rorl
or
xlat
add
shll
popa
scas
lods
mov
fbstp
cmp
pop
ffree
daa
xchg
popl
xor
shr
xchg
testl
mov
dec
xchg
mov
daa
jno
cmp
xchg
scas
lds
inc
fs
adc
fidivs
inc
adc
dec
test
jmp
xchg
sub
jmp
scas
les
into
dec
and
cwtl
mov
mov
sbb
rol
inc
scas
jns
dec
pop
mov
mov
or
mov
and
xchg
xor
push
lds
xchg
inc
clc
xchg
std
insb
insl
mov
xchg
imul
pop
and
or
pop
pop
dec
scas
mov
jne
mov
or
adc
mov
pop
and
inc
xchg
stos
hlt
dec
mov
lods
rcll
icebp
insl
cmp
stos
xchg
ja
jnp
or
push
idiv
or
push
test
dec
fadd
add
xchg
push
scas
ja
push
icebp
or
jmp
popf
push
aam
repnz
in
dec
addr16
mov
xor
rolb
pop
mov
or
mov
dec
or
jo
leave
sahf
jbe
jle
fdiv
fisubl
idivb
cmp
sbb
push
cmp
mov
arpl
loop
mov
inc
repz
xor
inc
mov
lret
negb
push
mov
sub
data16
out
inc
test
mov
add
xor
in
std
adc
mov
and
stos
push
cmpsl
cmp
push
pop
in
inc
and
pop
inc
pop
and
clc
jno
jbe
or
push
adc
mov
stc
es
in
scas
adc
jecxz
dec
clc
loopne
insb
and
cmp
shlb
stos
or
mov
fs
push
in
ds
push
cmp
xchg
xor
outsl
into
pop
popa
les
shl
cmp
int
or
mov
mov
jb
dec
jbe
loopne
outsb
cld
addr16
outsl
and
insb
repnz
inc
shrl
outsl
or
inc
std
inc
push
int3
orl
cmp
jno
jb
cltd
imul
pop
leave
add
push
movsl
cmc
cmc
mov
mov
sti
pop
idivb
ja
scas
add
pop
pop
das
push
cld
pop
ret
shrb
mov
aaa
jns
add
outsl
sub
cld
movsb
lret
inc
jle
fldl
pop
leave
lock
cld
call
push
pop
inc
cmp
inc
sub
jge,pt
cmc
add
scas
mov
add
dec
ret
mov
rcll
arpl
inc
push
adc
pop
stos
jno
mov
and
movsw
iret
sahf
movsb
dec
push
push
xchg
fistpll
jmp
gs
lret
push
sub
fs
and
cmp
jae
leave
fdivrs
subl
incb
mov
ds
push
xchg
jbe
sub
add
xchg
shr
hlt
loope
scas
inc
xchg
push
xchg
pop
stc
pop
adc
aas
hlt
test
dec
lea
movl
sub
pop
das
shll
cli
sub
test
jmp
xchg
stos
push
test
mov
lret
sbb
inc
sti
sub
in
pop
xor
stos
and
hlt
pop
and
lahf
popa
pop
pusha
arpl
sahf
call
in
mov
cltd
cmc
lahf
jle
loop
xorl
out
mov
cwtl
mov
lret
imul
lods
ja
aas
loop
idivl
jl
pop
mov
loope
cmp
sbb
shlb
sbb
and
cmp
mov
jo
call
out
in
dec
es
ficompl
loopne
pusha
shl
pop
adc
sbb
pop
jmp
in
mov
add
push
rolb
bound
test
imul
adc
sbb
add
sbb
pop
outsb
jle
out
mov
xchg
cltd
dec
xor
add
lods
dec
idivl
xchg
adc
xchg
mov
roll
das
addb
sub
out
inc
orl
mov
mov
push
int3
popa
mov
ror
or
xchg
mov
cmpsb
insb
sbb
mov
xor
sbb
add
jecxz
sbb
repz
mov
leave
jle
add
dec
cmp
cli
out
outsl
lea
mov
sbb
ja
adc
push
cmpsb
mov
inc
xor
cwtl
inc
dec
dec
fildll
adc
js
sti
insb
lock
popf
pop
gs
orl
push
add
mov
sbb
fisttpll
mov
inc
mov
test
pusha
fs
cmp
imul
and
pop
mov
les
cmp
fldt
cmp
push
testb
pop
lret
mov
iret
stos
jbe
arpl
cmp
mov
mov
movsl
push
sub
cmp
ret
push
das
lods
add
or
aas
xlat
and
cmpsb
mov
adc
test
ljmp
in
xchg
test
and
cmpb
fidivrl
inc
mov
sbb
inc
push
js
sbbl
clc
cmp
movsl
insl
cmp
ss
dec
jge
add
jp
pop
push
add
fsts
insb
mov
arpl
popf
push
pop
jge
aad
push
mov
clc
das
dec
push
jne
imul
in
or
insb
cmp
movsl
push
and
sub
hlt
adc
ljmp
data16
pushf
fisttpll
mov
icebp
pop
sbb
scas
sub
sbb
sub
call
cld
or
push
adc
insl
fwait
or
mov
cmp
xchg
inc
or
xor
push
xchg
xorb
push
fwait
dec
popl
dec
dec
enter
jnp
dec
loopne
les
jp
cmpsl
mov
mov
pop
pop
mov
fiadds
and
push
outsb
push
stos
mov
xchg
addb
loopne
mov
ds
std
jge
int3
mov
nop
dec
stos
fimuls
pop
and
mov
mov
cmp
cli
int
outsb
popl
jo
loopne
ss
dec
jmp
inc
loopne
push
mov
push
repz
in
add
clc
inc
fidivrl
ds
inc
call
mov
lock
in
xor
jg
jl
loopne
push
in
ss
xorl
mov
jnp
jne
into
scas
test
insl
mov
sti
shl
jle
jg
lods
pop
lods
jecxz
push
xchg
fwait
mov
outsb
sti
sub
jae
sti
inc
lret
out
rolb
mov
sbbl
ljmp
push
les
push
rorb
and
jecxz
daa
adc
jecxz
ficoml
ds
sub
outsl
inc
cmpl
xchg
xchg
xor
fldl
mov
push
jmp
loope
cmpsb
pop
dec
push
xor
pusha
mov
xchg
jge
mov
xchg
insb
cs
mov
out
cmovs
ret
xchg
mov
cmp
mov
push
pop
test
mov
jns
xor
mov
and
mov
fbstp
xor
pop
xchg
push
push
sub
dec
add
data16
mov
mov
sbbb
leave
mov
pop
mov
in
sbb
es
aaa
andb
or
pop
pop
adc
ret
bound
popa
out
std
push
dec
movsl
cmp
jl
sti
xchg
icebp
insb
push
dec
lret
lret
jmp
xor
lretw
xchg
iret
in
jns
sahf
jno
sti
fwait
jnp
std
cwtl
aam
jmp
mov
xor
cltd
in
and
rorb
enter
add
pop
push
xchg
mov
sar
or
cld
inc
movb
das
ret
xor
xchg
jb
sub
popf
adc
cwtl
push
mov
jns
lods
in
aas
and
inc
add
shlb
loope
jl
sub
loope
cmp
add
mov
and
adc
jmp
neg
jne
mov
sahf
lods
cmp
xor
inc
mov
mov
mov
jl
mov
sbb
icebp
out
insl
out
data16
wbinvd
out
addr16
ss
test
adc
lods
insb
dec
add
ja
push
xchg
lret
cwtl
pushf
lahf
xlat
xor
arpl
cmpb
xlat
and
shlb
pop
xchg
stos
jnp
mov
and
sub
andb
dec
fs
repz
mov
popa
xchg
lds
xor
stc
into
ljmp
in
fucom
jp
rcrb
jo
inc
lds
frstor
mov
or
inc
cld
cmp
pop
loope
push
std
aad
ds
dec
xchg
push
out
jge
sbb
aam
lcall
enter
jnp
jge
jmp
aad
loope
bound
xchg
imul
ss
add
jecxz
jno
cmc
inc
pop
fwait
sbbl
gs
dec
and
aas
inc
mov
test
lea
std
andl
es
mov
ja
fists
ljmp
rol
cmp
sub
adc
sahf
addr16
mov
imul
hlt
or
fsubrl
test
mov
xchg
incb
fsubl
add
in
mov
and
aas
mov
and
jmp
or
xchg
mov
push
mov
push
mov
sbb
adc
and
popa
sub
mov
iret
outsb
stos
rorb
call
xchg
push
push
and
imul
in
movsb
sub
add
cmpsl
fidivs
sbb
mov
mov
lds
das
repnz
mov
cli
mov
dec
mov
push
ja
ljmp
das
jno
iret
push
rcrl
jge
inc
xor
add
inc
mov
jnp
mov
jmp
adc
sbb
add
daa
dec
or
dec
decl
out
mov
jns
rol
ljmp
ret
xor
cmp
stc
mov
repnz
add
cwtl
cmp
pop
mov
sbb
sub
inc
iret
adc
push
cli
xor
cmpsb
adc
jnp
jecxz
fwait
adc
mov
aad
xchg
fistpl
cmp
pop
mov
pop
imul
gs
pop
pop
enter
sub
sub
push
fsts
lds
or
or
fnstcw
jmp
scas
test
fldt
loop
movsb
insb
fstpt
dec
pop
nop
cmp
xor
mov
mov
loop
jae
arpl
mov
adc
jmp
mov
adc
imul
sbb
inc
lea
pop
push
in
sti
inc
lds
bound
adc
andb
push
loop
push
mov
cmc
idivl
sbb
jb
dec
mov
ss
repnz
rclb
dec
jge
pushf
sbb
mov
popf
dec
xlat
jbe
adc
out
aas
adc
jnp
shl
xor
mov
cmpsb
cmc
cmp
test
push
and
data16
sti
test
lods
sbb
int
jecxz
mov
mov
incb
int3
mov
test
xlat
nop
mov
xor
jmp
push
loop
and
sbb
fs
mov
loopne
stc
ffreep
cmp
pop
cmp
add
mov
test
dec
jg
imul
fwait
rclb
push
push
imul
mov
xor
sub
loop
mov
lods
dec
cmc
fwait
ja
pop
inc
dec
mov
in
dec
xor
shl
xlat
loop
dec
mov
arpl
jg
ja
shl
dec
into
cmp
pop
fcmovnu
jecxz
or
packuswb
ljmp
jp
sarl
mov
repz
sbb
push
xorb
popf
mov
dec
xchg
xchg
stos
dec
test
mov
iret
sub
addr16
pop
sub
sbb
dec
ret
enter
mov
xlat
cmp
adc
push
and
sub
out
insb
adc
sbb
pop
pop
add
inc
push
mov
jno
rcrl
clc
adc
outsb
inc
je
jno
add
stos
adc
pop
add
and
out
mov
neg
mov
leave
in
bound
cmp
outsl
lods
mov
fistps
jae
mov
ja
in
lods
rorl
in
mov
pusha
sbb
mov
and
jl
subb
add
adc
repnz
xlat
sbb
lods
inc
lcall
iret
or
cmp
loopne
cld
or
lods
insb
fdiv
std
mov
jbe
xchg
sbb
clc
dec
mov
in
mov
in
pop
jle
insl
outsl
loop
cmp
mov
adc
xchg
mov
out
pop
inc
cli
jg
rol
sbb
dec
rcr
aam
sub
outsl
jge
dec
and
mov
enter
es
lret
add
aam
adc
insl
clc
adc
mov
andl
inc
jbe
cmp
xchg
inc
pop
lock
push
cmpsl
mov
call
sub
mov
inc
iret
mov
jb
dec
and
xor
mov
gs
lcall
aam
jo
cwtl
sub
dec
cli
imul
mov
ja
leave
adc
jl
js
push
add
push
into
xchg
jmp
cmp
in
sarl
sub
dec
mov
loop
sbb
jb
push
dec
dec
fwait
mov
stc
jb
vpcmpeqb
xor
push
xor
imul
fmull
aam
pop
cmp
push
pop
test
jmp
mov
aam
outsb
sub
je
jb
push
push
fsubr
mov
cmp
fstpt
jl
out
xlat
dec
mov
cmp
mov
mov
dec
andl
and
daa
pop
lret
pop
mov
test
es
xchg
mov
jp
add
xor
sti
push
scas
inc
lds
sub
mov
and
sbb
and
pop
cmpsl
enter
cvttps2pi
cmp
divb
incb
xchg
push
outsb
mov
jno
ja
inc
add
inc
inc
cmpb
repz
push
adc
rcl
inc
and
xor
and
pop
xor
jne
int3
xchg
pusha
ret
xlat
movb
mov
movsb
out
mov
cld
jg
adc
cmp
mov
test
or
or
jge
js
jle
xor
add
repz
movntq
out
popa
xor
jecxz
es
sub
out
andb
sbb
outsb
stos
out
js
add
aaa
aam
cwtl
xchg
dec
jmp
mov
int3
xorl
shll
movsb
andl
cwtl
pop
jp
cli
push
and
add
pop
mov
addr16
shl
and
or
xor
pop
inc
add
and
cmp
test
lods
mov
jnp
xchg
xor
testl
dec
dec
repz
test
ja
lods
mov
cmpsl
je
sbb
arpl
mov
sbb
jnp
inc
xchg
mov
test
lods
add
jmp
bound
xor
sbb
xchg
push
push
jg
mov
xchg
test
nop
xor
mov
pop
or
fnsave
repz
int
add
cmpsb
mov
jp
sub
add
fidivrl
xlat
push
sub
bound
mov
mov
popa
dec
nop
sub
or
xor
xchg
sbb
leave
inc
test
es
hlt
outsb
push
cmp
or
jae
mov
imul
jbe
mov
test
repnz
cmp
test
mov
fisttpl
jo
scas
mov
sbb
pop
int
jb
pop
insb
pop
arpl
xchg
dec
dec
push
mov
ljmp
cs
dec
xor
cmp
out
cld
aaa
cmpl
fstps
cs
loop
js
pop
and
mov
or
xchg
data16
cmpsl
xchg
pop
cltd
push
pop
mov
dec
fwait
mov
push
repz
push
lods
mov
bound
cltd
pop
or
jl
arpl
bnd
cmp
jo
lahf
mov
das
xchg
arpl
mov
sub
lcall
test
lcall
insb
jo
loope
das
sbb
sbb
xchg
push
aam
pop
int
dec
jle,pn
in
stos
sub
inc
mov
sbb
insb
lret
lret
call
outsl
negl
push
sbb
mov
and
jmp
lds
push
pop
xchg
jb
enter
mov
push
pop
mov
std
lret
ja
add
push
or
mov
fwait
sbb
ja
jnp
dec
sub
sub
insb
ljmp
cli
xchg
xor
inc
sbb
in
mov
or
fs
xlat
xor
lock
or
and
and
fisubs
ret
ret
or
fsubs
pop
xchg
repnz
lds
ret
sbb
in
cli
loope
xor
enter
dec
out
loope
inc
aaa
push
push
movsb
pop
jp
jg,pn
mov
mov
mov
rcrl
aad
insb
pop
daa
dec
out
inc
bnd
mov
dec
pop
push
pop
sbb
repz
ljmp
sbb
or
clc
imul
out
mov
arpl
push
jnp
outsb
cmp
sbb
addb
mov
mov
je
sub
imul
or
dec
cmp
insl
cmp
xor
adc
mov
insl
adc
stos
mov
push
addr16
sub
lret
fisubrs
leave
ja
repz
js
das
je
repz
daa
xchg
or
rolb
movsb
or
leave
push
adc
jg
popf
cwtl
mov
dec
out
push
outsb
jo
sub
in
popa
mov
push
stos
fwait
xchg
add
fidivs
jno
stos
mov
ja
vcvttps2dq
fmuls
int3
sbb
and
cmpsb
hlt
sub
imul
mov
xor
push
orb
je
sbb
push
or
mov
sub
dec
jmp
ret
add
jp
mov
mov
mov
xor
punpckldq
pop
jbe
cwtl
adc
adc
fmulp
cli
adc
rcl
stc
dec
sti
xchg
pop
pop
adc
inc
xor
fs
cmp
mov
sar
call
xchg
mov
pop
jbe
push
test
jg
int
adc
xchg
sbb
loop
mov
mov
hlt
fwait
xchg
enter
scas
rolb
scas
lret
pop
push
out
dec
js
push
call
repz
addr16
sub
mov
lahf
dec
dec
dec
pop
shl
fnstsw
sbb
sub
pop
addr16
xor
rclb
and
shr
dec
push
adc
sahf
inc
stos
out
xchg
nop
adc
inc
lods
xorl
mov
test
mov
push
xchg
mov
mov
mov
test
xchg
test
or
add
or
jp
jns
lea
sbb
hlt
icebp
jb
mov
inc
pop
stos
stos
push
aas
pop
ss
xchg
loop
sub
pop
inc
je
ss
les
lret
inc
mov
sub
cmp
mov
cltd
sub
fmull
adc
sbb
ds
adc
adc
sti
inc
add
leave
jle
ss
fdivs
add
sbb
add
jbe
mov
cmpsb
cld
mov
cmp
pushf
mov
mov
jne
jne
mov
push
frstor
push
repz
gs
jle
dec
mov
add
call
pop
lock
test
iret
sbb
sti
adc
imul
insb
jb
mov
test
inc
into
fsts
or
ds
pop
adc
insb
xchg
jge
in
mov
mov
movsl
adc
addr16
adc
pop
dec
xchg
shlb
mov
scas
or
jno
mov
cmp
jmp
push
negl
call
lret
adcb
mov
cmp
inc
mov
outsb
iret
pop
js
fcmovu
mov
mov
lea
dec
add
adc
sbb
cmp
dec
pop
mov
sbb
lods
outsb
or
aas
inc
mov
dec
jnp
add
mov
clc
pop
mov
movb
scas
pop
scas
inc
movsb
daa
iret
clc
push
cmp
sub
xlat
adc
add
bound
mov
sbb
stc
add
cld
lods
test
loope
in
out
jo
adc
push
shlb
xchg
inc
std
mov
add
popf
mov
inc
stos
pop
xor
xchg
push
mov
shr
outsl
cld
xchg
scas
loopne
vmovdqu
scas
add
daa
cmp
hlt
stc
int
dec
les
stos
dec
in
mov
scas
xor
add
jg
push
or
push
int
add
jmp
cmpsl
stos
mov
outsl
cli
idiv
dec
push
or
icebp
lock
pop
imul
xchg
imul
and
inc
ret
mov
mov
push
jmp
ret
and
mov
xor
fdivrs
fistl
rorl
mov
sub
orl
mov
pop
xlat
jp
adc
enter
cmp
mov
mov
pop
shll
jge
and
outsl
push
pop
push
jae
rclb
pop
cltd
inc
pop
cs
dec
xor
ror
push
sbb
xchg
mov
xor
fnstcw
iret
fmul
xchg
or
outsl
dec
aas
lahf
icebp
lret
in
or
addr16
sub
adc
cmpsb
and
push
cld
pop
aaa
fistps
jo
add
leave
js
and
fbstp
jmp
mov
or
pushl
pop
or
dec
cltd
add
push
dec
ja
cmc
subb
jecxz
push
sbb
popa
adc
inc
push
pop
cmp
aam
mov
rcll
ds
jge
leave
ja
rolb
cmpb
insb
xor
lea
inc
mov
xchg
popa
jno
push
lea
jp
insb
push
cmpsl
movsb
jle
mov
pop
in
mov
imul
dec
notb
jmp
pop
xchg
inc
pop
sbb
int
inc
mov
das
cmp
adc
jmp
lfs
or
xor
pop
insb
mov
pop
data16
fnsave
mov
ss
push
mov
inc
mov
cmpsb
sbb
push
mov
ljmp
push
out
inc
lods
vpperm
push
andl
popf
inc
or
adc
cmp
aas
push
lret
pop
cmp
xchg
mov
adc
xorb
mov
mov
test
mov
sti
jle
ljmp
pop
mov
jp
stc
or
add
andb
mov
int3
outsl
scas
ss
jle
ljmp
pushf
push
lea
fwait
stos
dec
push
dec
lcall
sub
jne
mov
rcr
xchg
jecxz,pt
mov
out
mov
jo
adc
cmp
jle
jecxz
push
xchg
xchg
jl
mov
pushf
subb
test
and
add
push
repz
stos
pop
add
rolb
and
xor
pop
push
scas
popf
pop
je
je
stos
inc
sbb
jno
pop
pop
ljmp
rolb
xchg
sub
pop
shll
hlt
xor
push
outsb
jecxz
or
sbb
fdivs
cmc
or
push
mov
addr16
xor
xor
adc
out
or
or
cmpl
push
mov
lahf
pusha
sub
and
nop
push
mov
adc
xor
inc
push
push
aaa
xchg
pop
fstpl
aaa
pop
adc
mov
sub
xor
ja
cmp
xor
add
call
add
test
cmpsl
xorl
les
vunpcklps
sub
sti
push
std
sub
lock
mov
in
fs
and
sahf
ror
or
fwait
pop
test
or
jge
add
rcrl
pop
add
test
mov
hlt
and
ja
add
add
stos
gs
faddl
out
enter
imulb
lahf
xchg
mov
in
mov
cmp
in
cld
dec
ljmp
mov
enter
lcall
mov
push
mov
imul
ljmp
aam
inc
test
sbb
xor
fcmove
push
and
in
aaa
stos
sub
inc
hlt
or
nop
ret
pusha
mov
and
es
push
and
xchg
test
aas
adc
js
mov
ret
fwait
lock
lahf
fwait
inc
cs
jno
aam
jl
sub
loope
mov
xchg
hlt
pop
bound
in
clc
push
dec
push
fsubl
popf
scas
xchg
scas
out
xchg
inc
pop
jns
pop
sub
out
mov
jb
cmp
or
sbb
shlb
mov
test
dec
dec
lock
aas
xor
out
rolb
lret
cmp
mov
adc
cld
enter
sub
add
and
cli
jb
pushf
cmp
test
fiaddl
inc
inc
add
loope
mov
mov
out
stc
mov
mov
int
jbe
lds
fxch
leave
adc
movsl
out
mov
mov
fldenv
and
out
lret
aad
jecxz
nop
cltd
test
add
push
sbb
popa
xchg
fildl
ret
outsb
and
inc
pop
sbb
stos
into
push
push
jmp
push
cs
addb
cmp
add
cltd
lods
or
movsb
out
cs
push
adc
inc
jno
mov
out
cmp
sub
lret
outsb
cmp
mov
mov
jns
xor
jne
mov
and
pop
inc
jge
and
xchg
or
scas
mov
add
aas
ret
push
dec
aaa
add
decl
test
insb
ret
pop
jne
jl
xor
sub
jmp
test
jne
inc
jno
pop
jb
inc
cmpsl
or
outsl
mov
jo
mov
scas
incl
scas
lods
sub
push
shl
push
ret
lret
xor
xchg
or
mov
pop
imul
test
or
hlt
subl
and
cs
outsl
pusha
movb
mov
pop
jmp
pop
and
call
sbb
test
out
imul
xchg
lcall
sbb
jae
dec
rcrb
and
pop
test
int
ja
cmp
dec
pop
jmp
fisubl
jo
adc
pop
dec
xor
and
imul
rorb
outsb
mov
or
fisubl
jo
mov
into
loope
xchg
test
roll
lds
mov
mov
xchg
es
push
movsb
adc
xchg
sarb
lock
push
ljmp
mov
xchg
enter
rclb
in
mov
jge
and
mov
test
insb
repz
repz
adc
mov
in
filds
dec
cmp
xor
xor
add
sub
fisubl
mov
dec
sub
add
test
push
mov
jecxz
js
mov
arpl
xchg
insl
mov
xor
fdivs
jne
dec
push
add
das
ret
in
mov
inc
xchg
xor
adc
sahf
lret
lea
lcall
pop
repz
dec
loopnew
loopne
sti
fstp
cmp
iret
cmp
push
sar
add
dec
mov
xor
stos
xor
sub
popf
cmp
adc
mov
jle
out
int
mov
jae
imul
mov
mov
clc
ss
loop
cmp
jns
xor
scas
adc
pop
pop
xor
jecxz
adc
push
xchg
mov
xlat
unpcklps
mov
lret
sub
nop
dec
push
into
cltd
ds
in
fnstcw
pop
int3
or
add
mov
add
loop
out
pop
pushf
in
inc
std
push
addr16
stos
jae
mov
inc
sbb
in
cmp
mov
scas
sub
jl
loopne
xor
mov
pop
adc
ds
xorb
imul
je
jns
jns
sub
xor
mov
xor
hlt
scas
fdivs
insb
jp
into
inc
add
adc
jmp
int3
lret
pop
mov
sti
inc
es
cmpsb
ret
les
cmpsl
push
add
adc
sbb
iret
js
jl
inc
mov
mov
scas
jbe
lret
mov
mov
iret
out
rep
in
adc
adcl
inc
mov
mov
xchg
add
cld
jne
jno
enter
jl
or
stc
imul
in
int3
or
aaa
xchg
sub
add
inc
bound
aad
into
sbb
in
sub
fisttps
push
stos
mov
jecxz
inc
add
cmp
inc
mov
imul
cltd
insb
popf
pop
in
sbb
mov
pushf
fists
cmp
cwtl
sahf
adc
jmp
mov
xchg
lods
mov
ror
sbbb
addr16
mov
gs
sbb
adc
sbb
call
dec
xchg
pop
mov
lcall
jns
ret
scas
add
jne
es
and
sbb
jnp
fisubl
aam
not
fdivrs
mov
daa
loope
rclb
loope
loop
dec
push
es
mov
pop
xor
mov
icebp
rorb
push
or
mov
roll
out
mov
adc
cmpsb
pop
ljmp
mov
sub
pop
push
popa
xchg
sbb
fdivrp
pop
adc
outsl
stos
cmp
testb
mov
cmp
push
test
sarl
cli
mov
jo
clc
xorl
jae
xchg
jle
out
lds
fs
mulb
stos
cmp
jo
cs
cmp
adc
scas
pop
inc
gs
push
data16
dec
dec
popa
mov
inc
stc
sub
push
je
sub
add
imull
xchg
or
mov
push
in
imul
lret
shrl
out
out
dec
insl
shl
lock
in
jno
pop
jecxz
stos
aad
sbbb
test
xor
push
sbb
imul
jmp
or
cmc
lcall
arpl
repz
test
fwait
stos
push
ret
mov
push
sahf
cld
xor
out
test
lret
and
shlb
jno
cmpsb
loop
xchg
push
fbld
or
mov
ljmp
xor
shll
cmp
dec
js
subl
mov
aaa
rcrb
cld
sub
cltd
leave
outsb
aaa
ret
les
test
adc
lcall
insl
stc
jge
mov
std
js
dec
mov
sbb
shl
sbb
sti
test
push
mov
lods
mov
adc
out
add
mov
jae
mov
ja
rcr
scas
imul
sbbb
shrl
in
mov
sub
xorl
push
subb
xor
push
popf
add
sbb
jae
js
imul
push
sub
std
xorl
inc
xor
daa
jle
bound
data16
arpl
sbb
mov
inc
push
adc
dec
dec
mov
push
xchg
push
xchg
or
sub
scas
mov
movsl
mov
xchg
mov
push
push
and
cmp
and
dec
push
xor
dec
insb
cs
dec
in
orl
aad
aad
jne
stos
mov
add
push
jmp
push
popf
negl
dec
mov
dec
push
bound
and
sbb
imul
stos
aas
outsb
lret
call
inc
sub
repz
gs
pop
lods
nop
int3
jo
sbb
jmp
je
call
outsl
pop
lods
adc
lcall
ja
stos
mov
fcompl
addr16
or
sbb
pop
mov
fs
xor
cmp
in
push
mov
jnp
aam
adc
pushf
cltd
mov
int3
xchg
pop
stos
or
sbb
adc
xchg
test
mov
in
cwtl
sub
fs
cli
sub
cmp
sbb
adc
outsl
or
push
ret
rolb
pop
xchg
cmp
mov
test
pop
mov
mov
iret
sbb
xorl
gs
arpl
mov
movsl
xchg
imul
pop
cmp
xor
sub
jb
mov
cli
je
dec
clc
xchg
test
dec
jmp
bound
pusha
in
fs
push
iret
stos
pop
inc
mov
dec
mov
out
es
adc
mov
mov
rcr
daa
mov
push
xor
and
cmp
mov
mov
pop
cmc
mov
stos
ret
mov
mov
dec
loopne
sub
add
xor
fistps
fisubrs
repnz
push
sub
in
lods
cmc
sub
popf
inc
je
repz
xor
jmp
stos
shrb
sahf
xor
inc
cmp
cmp
arpl
push
cmpsl
imul
and
ret
aad
adc
xchg
mov
xor
inc
mov
scas
loop
mov
and
mov
xor
cmc
mov
cmp
pop
adc
sub
dec
xor
cmp
ja
stos
dec
or
mov
pop
dec
int3
rcrb
in
mov
std
sub
jns
iret
repnz
cmpsb
mov
xchg
jae
mov
inc
add
xchg
incl
pop
gs
dec
bound
xor
fadds
jno
nop
je
sub
scas
and
mov
fcmovnu
mov
mov
shlb
popa
fdivrl
mov
xor
mov
sub
hlt
insl
cmp
in
mov
popa
pushf
sbb
sbbl
add
add
sub
fsubl
jne
xchg
arpl
rolb
and
out
dec
loope
cmp
xor
stc
ret
sub
pusha
pushf
xchg
xlat
mov
test
out
inc
lods
cmp
mov
fcmovb
test
xor
fwait
jo
ds
push
scas
and
push
lock
inc
sub
ss
clc
pop
or
ss
adc
push
adc
pushf
xchg
pop
jnp
push
adc
arpl
push
rorb
mov
xchg
dec
rcr
sub
xlat
dec
xor
xorb
push
lods
inc
lea
adc
xchg
divl
xchg
aam
mov
pop
sahf
inc
insl
dec
clc
xchg
push
fsubr
or
cmp
scas
fadd
montmul
cmpsb
add
scas
and
jecxz,pt
movsb
cmpsl
cmp
ror
sbb
std
or
fs
stc
pop
cli
sbb
mov
push
cltd
pop
inc
push
out
imul
adc
in
into
and
ret
push
insb
fsubrl
inc
sti
outsb
cld
popa
into
push
add
xor
push
jmp
sub
loop
mov
mov
mov
dec
xchg
pop
inc
and
sti
cld
mov
out
sub
subb
or
nop
xchg
push
xor
divb
scas
mov
jns
jbe
or
mov
xchg
sbb
inc
jp
cmpsb
dec
subb
add
xlat
lret
pop
fcomip
ror
ret
xchg
pop
insb
ss
imulb
lret
or
jne
or
stos
sub
mov
aas
adcl
push
lret
xor
fbld
mov
mov
adc
mov
xor
test
xor
pusha
mov
mov
insb
inc
ja
adc
dec
aas
loopne
push
in
mov
xor
ficomps
ds
clc
imul
pop
push
out
jae
loope
mov
jl
imul
jne
shrb
out
jl
xchg
adc
xchg
push
mov
shl
sub
inc
mov
jp
adc
add
fldl
cli
push
mov
inc
push
pop
adc
insb
jns
pop
mov
mov
xchg
nop
sti
pop
aaa
add
push
pop
imul
xchg
pop
xor
push
and
mov
xchg
dec
sbb
cmp
out
ds
add
sbb
test
sub
idivb
fisubl
push
inc
xchg
mov
mov
cs
mov
test
lret
sbb
aaa
aam
jl
mov
inc
sbb
mov
pusha
out
repz
lds
pop
movl
xchg
aas
sbbl
daa
test
iret
fistpl
roll
movsb
mov
gs
mov
jge
fdivr
xchg
test
push
adc
cmp
mov
mov
mov
lret
dec
and
in
cli
filds
daa
lcall
mov
dec
cmp
stos
jle
cmp
xchg
int3
andb
add
repz
inc
cmpsl
push
in
or
xchg
pop
mov
xchg
dec
pop
dec
mov
and
rclb
mov
gs
pushf
fld
fstpt
jmp
lcall
test
ljmp
sub
xchg
flds
fsubp
out
sub
lods
inc
push
or
stos
cli
and
les
scas
xor
cmp
cmp
repnz
loope
shrb
ljmpw
cs
cmp
push
movsb
mov
cmpsl
aad
loope
lret
mov
lea
stos
clc
or
lock
std
lcall
nop
rcl
insb
xlat
arpl
xor
lret
push
hlt
add
mov
addb
adc
push
and
cmpsl
sbb
pop
mov
and
mov
mov
jmp
aam
stos
mov
shld
mov
xor
das
aas
mov
fs
inc
ret
and
mov
out
das
mov
jae
scas
inc
mov
jmp
push
adc
dec
into
pop
fstpt
nopl
mov
or
addl
lds
int
je
pop
adc
stos
or
es
call
lea
test
adcb
les
cmovb
pop
sbb
jg
icebp
cli
or
pop
mov
sahf
test
arpl
pop
fimull
or
pop
adc
scas
mov
mov
xchg
imull
jg
movl
mov
aas
cmp
sbb
add
dec
lods
inc
cmpsb
fs
push
ja
jo
xlat
stc
aam
cmp
repz
mov
cltd
or
xchg
movsl
jp
insb
mov
lret
sub
out
loop
rorl
xchg
push
pop
pop
jno
jmp
cmp
sahf
js
mov
or
push
iret
xor
inc
shl
sbb
sti
mov
popf
cmpl
fsubs
inc
dec
cltd
stos
push
add
jle
call
sahf
lret
and
cmp
and
aaa
cmpsl
inc
cmp
std
mov
nop
mov
pop
cmp
dec
or
mov
stos
cmp
outsl
mov
inc
jle
xor
add
add
jg
aam
rcrl
adc
mov
sub
ljmp
sbb
popa
cld
aas
in
mov
inc
loope
sbb
int
shlb
icebp
shlb
jbe
dec
pop
inc
adc
cltd
jp
xchg
out
std
adc
int3
leave
push
lods
fsubrs
pop
pop
xor
and
pop
out
test
cld
cwtl
xor
add
ja
sbb
dec
jo
mov
xor
cmp
scas
movsb
outsb
cli
mov
add
push
stos
aad
outsl
jnp
popf
and
mov
dec
jmp
ja
cmc
dec
mov
cmpsl
or
sbb
stos
mov
in
icebp
dec
cld
cmpsb
sub
ja
lret
xchg
jno
ljmp
push
pop
testl
pop
mov
xor
aas
es
or
push
push
adcb
mov
push
adc
push
jb
xor
pop
aad
sub
cld
jle
lods
loopne
jae
pop
out
fsubrs
sarb
movsb
adc
xchg
push
je
lods
sub
sub
sub
punpcklwd
das
mov
jo
inc
pop
test
pop
out
js
add
and
test
dec
inc
push
mulb
mov
es
mov
imul
sbb
sbb
fsub
test
xchg
cmp
fcmovb
pop
dec
jmp
xor
clc
lods
sub
pop
fidivrl
repz
lret
mov
cmpsb
mov
mov
sbb
int3
mov
mov
cld
test
mulb
out
sub
jo
cmc
pop
test
push
xchg
int
xchg
xlat
test
pop
and
sbb
mov
pop
push
arpl
lods
into
inc
andl
test
jle
repz
aad
jecxz
sub
adc
sub
in
push
aaa
or
subb
cmpsb
mov
ret
jp
sub
aas
push
cmpsb
jl
push
mov
pusha
jle
mov
aad
xchg
aad
jmp
inc
scas
cmp
movsb
ficompl
shl
test
and
pop
mov
scas
push
icebp
mov
gs
pop
nop
int
sti
jne
inc
or
cld
sub
sti
loopne
addr16
scas
test
das
movsl
stos
add
xchg
lea
sahf
and
aad
adcb
push
cmp
add
xor
push
hlt
jmp
inc
mov
xor
lods
shl
fcomi
sbb
rorb
fs
lods
xlat
cmpsb
xchg
out
pop
xchg
xor
mov
sub
mov
jl
sub
pop
mov
inc
mov
and
insb
jo
imul
pop
mov
pop
push
lahf
sbb
mov
adc
outsb
xor
pusha
push
aad
sbb
insl
and
call
lods
cmp
xor
inc
xor
addr16
rcrl
int3
and
inc
jno
orb
loopne
decb
lahf
shrl
mov
pop
push
shlb
rcll
insl
rclb
dec
incb
arpl
push
pop
adc
xchg
subl
es
xor
cs
cmc
cmpsb
xchg
or
out
add
mov
outsl
sbb
daa
xchg
jns
dec
push
mov
aas
mov
push
mov
dec
or
inc
pop
aad
bound
gs
pop
inc
icebp
insb
fs
rclb
loopne
out
sti
cmpsl
repnz
pop
enter
mov
add
mov
cmpsb
dec
iret
lret
sub
mov
fs
xlat
je
gs
push
mov
insb
inc
je
hlt
mov
mov
lea
pop
iret
mov
jg
mov
cmp
cmp
dec
int
or
sbb
hlt
jbe
fldcw
inc
mov
adc
mov
mov
jmp
jo
clc
out
xorl
jge
in
dec
cmpsl
subl
out
jecxz
stos
inc
mulb
mov
or
cltd
cmpsl
push
and
add
push
enter
stos
xchg
negl
sub
sbb
fcomps
out
jge
mov
jnp
push
sbb
inc
pop
js
cmc
addr16
call
cmpsl
jp
mov
iret
sbb
xchg
in
pop
pushf
scas
fwait
in
out
and
pop
dec
bound
loope
pop
push
xchg
test
jne
lods
js
aas
cmc
xor
mov
in
cmp
push
jo
notl
repnz
insl
push
inc
sahf
mov
cmc
imul
push
in
iret
mov
push
jg
enter
xchg
repz
inc
insl
or
xchg
mov
ja,pn
vgatherdps
repnz
aad
xchg
insb
mov
cwtl
cli
or
ljmp
mov
sub
or
sbb
out
adc
lock
sbb
mov
cli
das
stc
inc
xor
rol
xor
hlt
mov
aas
jno
dec
scas
jecxz
pusha
inc
ret
and
fcomi
fdivr
shlb
push
lahf
add
jg
add
adc
inc
push
xor
xor
loopne
sbb
or
inc
pop
sub
cltd
lea
dec
fisubs
fisttpl
pop
shl
fs
popf
arpl
lods
or
ret
or
lcall
and
or
mov
je
jmp
frstor
sub
or
call
int3
pusha
fidivrl
pop
out
rcrb
lcall
iret
imul
out
mov
xchg
mov
xchg
pop
shrb
xchg
adcb
jns
fdivrs
ret
xchg
or
lret
gs
mov
xlat
and
pushf
sub
adc
mov
bound
lea
push
push
mov
xchg
jle
xchg
xchg
sbb
mov
out
movsl
pop
imul
push
xchg
cli
push
test
jnp
jo
pop
push
cmpsl
jecxz
mov
cmp
cld
aam
add
mov
iret
shlb
leave
push
aad
sahf
aaa
sbb
cli
pop
pop
push
bound
mov
dec
mov
jecxz
cs
cmp
xchg
lret
xchg
ja
lds
jl
mov
xchg
loope
or
mov
negl
js
lods
and
adc
movsl
or
in
adc
vandps
pop
xchg
dec
in
inc
mov
sub
mov
mov
cmp
push
sub
hlt
and
repz
xchg
ss
inc
scas
lcall
inc
ret
mov
pop
subl
inc
dec
pop
sbb
inc
test
push
fiaddl
or
clc
outsl
pop
cmpl
insl
push
bound
rorl
push
dec
inc
xor
mov
add
dec
jge
xchg
ds
or
test
stos
sbb
test
jg
push
insb
mov
mov
mov
mov
shlb
sub
addr16
arpl
xlat
cmp
aad
clc
imul
cld
mov
in
jp
bound
iret
xchg
mov
call
call
mov
mov
jmp
and
pop
loopne
sub
das
iret
repnz
jecxz
lds
andb
jo
pop
loop
xlat
in
xchg
cmp
and
enter
cmpsb
sub
inc
or
mov
les
outsb
es
std
test
jo
xor
jl
inc
mov
push
iret
int3
mov
jl
mov
or
mov
push
jo
push
insl
dec
pop
enter
ja
sar
cmp
jo
shl
in
loop
clc
daa
xor
add
fistps
jp
jmp
jmp
xor
pop
sub
jmp
pop
stos
jno
cmp
fcomp
loopne
push
inc
out
in
xchg
jbe
shll
cmpsl
ficoml
dec
and
push
or
popa
xor
andb
test
jecxz
dec
inc
dec
mov
scas
imul
jno
push
push
push
pop
lret
xor
or
std
jle
jecxz
cld
adc
and
sbb
xchg
out
push
sbb
fnstsw
xchg
inc
xchg
imul
out
cmp
aaa
aam
mov
sub
push
out
ds
popa
sbb
inc
cltd
sbb
les
ds
or
lret
cld
out
inc
add
dec
idivl
add
or
in
mov
std
fnstenv
and
mov
mov
pop
imul
pop
xor
and
or
insb
mov
jge
testb
jbe
cld
inc
cmp
mov
scas
jp
mov
dec
jecxz
negb
jnp
mov
inc
loope
dec
rorl
lods
icebp
iret
fs
rolb
rcrb
cli
jno
xor
adc
test
xchg
pushf
repnz
sub
inc
sub
mov
xchg
inc
test
enter
xchg
icebp
mov
sbb
pop
jmp
jo
add
pop
aas
or
xchg
sub
movsl
dec
mov
sub
adc
movd
int3
cld
and
xchg
int
jno
add
mov
or
shl
mov
mov
movb
das
push
dec
jns
pop
or
xlat
xor
sub
ljmp
or
hlt
scas
mov
sub
jmp
outsl
cmp
test
mov
leave
mov
xchg
or
lock
pop
add
outsl
pop
jno
aam
cmp
jae
cmc
mov
nop
inc
cmp
jp
loope
fwait
or
xorb
mov
dec
mov
stos
jp
in
ljmp
push
ja
orps
xchg
shlb
ss
popa
out
fmulp
lahf
pop
shl
jmp
lret
cmpl
repz
jno
mov
mov
pop
shl
movl
in
cmp
ret
sub
add
pop
lds
push
fsts
add
mov
popa
adc
lods
push
mov
sahf
jle
movsb
scas
add
dec
mov
cmp
shrl
lahf
jmp
addr16
adc
add
adc
ret
push
dec
fs
das
mov
mov
ficoms
and
dec
push
xchg
andnps
into
stos
mov
out
sahf
icebp
push
fmuls
add
das
sbb
enter
ret
sub
mov
fnstsw
jle
and
jno
pusha
jnp
jmp
xchg
sti
push
inc
outsl
aaa
jmp
lret
inc
mov
std
fs
dec
sbb
call
jle
stos
jl
inc
jmp
movsl
lahf
push
imul
shlb
mulb
sub
addr16
and
inc
pop
sbb
mov
cltd
mov
mov
mov
shl
ja
mov
cltd
in
shrl
xchg
pop
xor
rcrl
push
sub
loopne
and
mov
jbe
icebp
pop
aaa
subl
dec
and
into
stos
xor
inc
repnz
add
lahf
gs
rorl
pop
sbb
and
mov
cmpsl
addr16
or
ret
faddl
or
jl
stos
adc
jecxz
movsl
dec
aas
add
mov
mov
jl
push
adc
cli
jecxz
cmp
jo
imul
jo
xor
sbb
inc
cmp
out
xor
and
aam
orl
push
fs
adc
or
push
fisubrl
adc
in
mov
xchg
stos
mov
addr16
mov
add
xchg
mov
cmpsl
fcomps
fldenv
fidivrl
stc
cmp
cs
insl
jae
mov
inc
inc
aad
jl
xor
sbb
test
gs
ficoml
ret
pop
adc
pop
adc
cmpsl
shlb
sbb
sub
fbld
mov
xchg
or
xchg
mov
inc
xor
pop
jmp
shlb
iret
nop
push
add
inc
dec
add
outsl
out
nop
cmc
cltd
sti
jp
and
and
mov
bound
push
cmpsl
testb
ds
and
addr16
push
sub
cmc
loopne
xchg
push
add
cli
sbb
adc
cmp
cmp
xchg
ret
xchg
push
js
pop
fucomi
in
pop
in
sbb
push
aad
cs
test
dec
jo
inc
scas
rolb
xor
mov
aad
shl
pop
fdivs
dec
aas
stos
sti
fstpt
fs
push
cld
cmp
mov
push
jg
shlb
and
inc
mov
push
fiaddl
jmp
aas
pop
mov
mov
adc
cmpsl
daa
pushf
push
ret
pop
jne
mov
push
cmp
mov
sbb
data16
rorb
mov
xor
pop
mov
jl
test
xor
cli
and
xor
outsb
mov
test
dec
sbb
pop
mov
mov
testl
sub
mov
xchg
cli
cmpsb
imul
aaa
cmc
lahf
mov
mov
repz
fs
xchg
popa
pushf
fadds
mov
jp
sub
enter
testw
or
je
popf
jmp
dec
lahf
inc
mov
mov
ja
fwait
mov
int3
push
push
ret
inc
mov
adc
ja
imul
mov
mov
jecxz
xchg
add
cmp
in
push
sbb
inc
push
dec
sbb
call
je
cmp
mov
cwtl
sbb
xchg
lret
add
pushf
inc
or
mov
pop
mov
test
shrb
jmp
pop
cwtl
stos
sahf
adc
inc
cld
lret
add
mov
int3
pop
out
sahf
icebp
insb
filds
and
jecxz
push
lods
scas
pop
and
or
mov
push
adc
jb
pop
xchg
repnz
jbe
lcall
and
xchg
sub
inc
enter
leave
mov
insl
fidivs
rcrl
lret
jle
or
addl
fidivrl
xor
cld
mulb
sub
js
fwait
inc
cmpsb
movsb
mov
sti
mov
jg
scas
xor
dec
sub
hlt
and
cmc
mov
inc
sbb
and
daa
push
cmpsl
lea
mov
fiaddl
pusha
inc
popf
pop
sub
pop
rcll
mov
stos
push
sbb
lea
divl
pop
stos
jecxz
shlb
jae
jp
add
arpl
mov
cmp
xchg
xor
inc
aaa
pop
ret
es
xchg
mov
out
cmp
mov
add
jnp
xor
je
mov
lcall
adc
inc
scas
jge
cwtl
mov
jae
das
jle
addr16
sahf
lea
dec
xchg
loope
mov
lods
fnstenv
enter
and
sbb
inc
stos
adc
jb
sahf
mov
inc
xlat
and
push
mov
out
imul
pop
les
push
inc
add
lock
cmpsb
or
or
push
scas
rolb
xchg
in
sbb
dec
mov
test
lock
ret
cmp
mov
mov
in
mov
pop
enter
inc
add
dec
adc
fcoml
std
fcmovnbe
pop
pop
xor
sbb
hlt
mov
lock
ds
addb
loopne
and
mov
enter
jmp
xchg
es
jg
add
movsb
pop
lods
jbe
xchg
je
xchg
test
mov
enter
ds
lea
popa
lods
xor
ficompl
stos
adc
jl
es
mov
pop
pusha
dec
fsubl
lret
sbb
in
inc
adc
pop
xchg
add
cltd
pusha
lahf
fdivs
pop
clc
insb
and
jne
xchg
int
loope
cli
xor
sahf
shr
mov
gs
lods
push
cmp
stc
pop
shlb
inc
sub
mov
push
pop
cmc
fnstcw
aam
in
pop
out
cs
or
jne
push
cmp
cld
.byte
.byte
.byte
