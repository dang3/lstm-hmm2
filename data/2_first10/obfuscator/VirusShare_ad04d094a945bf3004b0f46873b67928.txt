push
call
ret
ret
repz
les
mov
xor
cltd
fwait
adc
xor
push
jno
pop
dec
iret
xchg
sub
jns
inc
mov
enter
pop
popw
movsb
xor
xlat
in
dec
iret
js
and
in
ret
fiaddl
mov
pop
sarb
pop
imul
dec
add
nop
outsb
cmp
outsl
rcll
loopne
jns
int3
push
sub
cs
ret
or
xor
or
inc
out
dec
into
push
stc
fcmovnb
mov
push
std
rol
or
pop
cmpsb
outsb
mov
adc
mov
dec
or
fstps
mov
jb
lret
pop
jne
jno
mov
js
add
test
shll
xchg
add
test
movsl
loope
sbb
stc
cld
mov
aad
and
mov
inc
or
enter
stos
sbb
fldl
cs
adcb
sbb
jbe
lcall
xlat
push
push
outsl
pop
icebp
pop
sub
jno
lods
mov
stc
push
mov
fwait
add
cmp
inc
fsts
inc
mov
or
aaa
cmp
mov
outsb
pusha
cmp
repnz
lret
ds
pop
repnz
mov
mov
mov
mov
mov
cmp
das
jbe
les
jae
jno
aad
cmp
xchg
dec
mov
xor
mov
or
lea
dec
cmpsb
movsl
pop
sub
loop
pusha
lcall
bound
ror
pusha
sub
sbb
push
sbb
sahf
ret
xor
lret
add
sub
pop
aas
jp
mov
in
stc
test
dec
inc
daa
sbb
aaa
js
xchg
and
loop
add
or
sbb
inc
sub
mov
push
mov
outsb
mov
xor
adc
test
and
sahf
loopne
push
mov
jne
xchg
push
scas
jmp
xor
sbb
mov
repz
repnz
pop
mov
adc
push
adc
push
adc
mov
mov
push
fsts
int
or
les
mov
ret
clc
adc
lahf
mov
in
pop
mov
jmp
jmp
push
pop
xor
adc
and
adc
iret
je
add
jbe
cmp
jns
push
jo
cmp
mov
xchg
lret
mov
inc
jne
or
add
es
add
lds
jmp
sub
adc
jae
aas
inc
sbb
aas
test
sarb
push
add
pop
repnz
xchg
out
fnstcw
int
sbb
xchg
into
inc
dec
lea
add
lret
lods
add
cmp
mov
popa
and
aaa
jbe
fistpll
cmp
inc
insb
pop
lock
inc
adc
enter
ja
cwtl
repz
aas
shlb
mov
sahf
ja
add
mov
sbb
or
xor
mov
daa
or
adc
and
xlat
shl
sbb
mov
xor
push
aad
and
and
ja
mov
xor
data16
pop
stc
add
shll
rcrb
jne
xor
jmp
mov
test
loop,pt
jnp
push
std
in
xor
jge
ja
lret
xor
icebp
inc
movsl
sbb
pop
mov
pop
mov
dec
mov
sbb
add
stos
xchg
dec
mov
int
scas
adcb
out
mov
stos
sbb
push
sub
add
insl
inc
pop
sbb
pop
lods
cmpb
jmp
or
loope
cltd
std
fwait
push
clc
fisttps
xlat
push
outsb
aad
pusha
gs
sar
dec
xchg
in
imul
xrelease
push
xor
notb
or
in
cmpsl
and
js
test
fwait
sub
cmc
sbb
sbb
xchg
or
or
pop
ja
add
jmp
mov
jnp
add
fdivp
dec
sahf
pop
push
ja
js
mov
test
stc
push
out
lcall
test
hlt
jne
sub
inc
fldt
cld
and
shlb
fisubs
cwtl
xchg
jns
xor
and
jnp
push
mov
or
xor
mov
shrb
inc
nop
pop
in
pop
popl
mov
inc
jle
mov
out
mov
jmp
jle
fldt
pop
pusha
daa
pop
call
ret
mov
add
jnp
int3
ja
xchg
inc
fwait
mov
dec
inc
aam
mov
lods
fcoml
test
stos
out
xor
cmp
adc
js
xor
jl
bound
sahf
rcrb
fistpl
pop
sbb
sub
inc
adc
mov
cmpsl
fmull
stos
and
mov
cmp
out
mov
jne
stc
fistps
pop
pop
sub
add
addr16
inc
pusha
mov
xchg
inc
call
arpl
mov
fdiv
pop
inc
out
add
cwtl
gs
add
js
mov
xchg
push
je
or
imul
xchg
test
loope
mov
adc
movsl
push
enter
xor
or
add
cmp
xchg
cmp
into
mov
and
jg
push
add
jecxz
subb
xchg
pop
daa
loope
sbb
rclb
lock
mov
rorl
add
add
adc
xchg
inc
out
adc
lds
dec
test
xchg
inc
pop
push
mov
dec
arpl
std
aam
sub
jecxz
xor
fs
stos
iret
sahf
fidivs
push
test
test
into
push
cli
cltd
nop
int3
push
inc
dec
rcrl
orl
jp
mov
fstpt
cmp
sbb
add
sub
or
push
mov
push
add
pop
xor
jmp
inc
sub
aaa
loopne
add
sarl
or
sub
xor
xchg
jbe
pop
jecxz
jno
pop
xchg
xor
rcrl
cmc
lock
push
push
xchg
rcrl
xchg
mov
xchg
hlt
fidivs
out
fsubl
cltd
mov
mov
adc
dec
pushf
push
dec
jg
push
xchg
mov
sbb
out
andl
fisubrs
push
repz
loopne
xorps
mov
ret
lock
dec
add
pop
in
rcrl
jg
daa
push
fdivl
pop
aaa
pop
movsb
nop
push
ss
loop
mov
xchg
jns
fsubs
mov
nop
cmp
js
jnp
lods
ja
push
lret
in
pop
xor
mull
pop
sub
fldt
rclb
testb
mov
test
push
dec
jp
iret
int
sub
cld
pop
dec
fisubrl
push
adc
js
xor
gs
popa
stos
sbb
inc
out
rcrl
add
xchg
xor
add
fwait
jp
fwait
xchg
fldcw
nop
pusha
mov
push
add
xor
repnz
add
mov
cmpsb
std
cmpsl
leave
mov
adc
sub
pop
dec
pop
sub
in
add
popl
pop
cli
push
ja
and
arpl
jbe
xor
push
pop
push
sahf
dec
jmp
lea
in
ret
fimuls
icebp
loopne
or
pop
loopne
int
shll
sbb
loope
pop
ja
lahf
je
mov
dec
mov
popw
mov
out
fs
sub
sbb
inc
in
cmp
mov
and
scas
lds
iret
dec
push
adc
jge
imul
movsb
sub
outsl
dec
data16
jnp
popa
fs
imul
inc
roll
pop
pop
xchg
mov
test
repnz
jne
xor
push
into
gs
jne
mov
out
dec
pop
dec
push
filds
push
ds
roll
lret
jl
lods
outsl
test
jnp
jge
mov
out
std
jp
lret
popa
in
pop
dec
push
push
cmp
lcall
jnp
out
jmp
popf
jne
mov
dec
clc
cmpsb
loop
cmpsb
je
rcl
mov
pop
shl
sbb
ret
cs
push
das
sub
dec
jbe
sub
adc
arpl
jg
daa
inc
dec
fs
in
mov
ljmp
out
xchg
jae
push
rcll
adc
cmc
shll
sti
int
gs
add
dec
les
pop
pop
lock
lahf
aad
jbe
push
addr16
mov
das
jbe
lret
ss
jmp
jns
fucomip
das
dec
xchg
je
pop
stc
iret
fcmove
scas
std
shrb
push
push
mov
fbld
jae
jno
adc
shl
sub
cmp
iret
andb
andb
inc
add
inc
ret
dec
pop
out
test
idivl
inc
mov
popf
adc
lret
out
push
subl
or
out
ret
daa
or
outsb
aam
pop
in
sub
add
mov
ja
cmpsl
adc
ss
inc
inc
fsubl
movsl
clc
inc
outsl
loopne
mov
mov
mov
adc
in
cli
dec
icebp
push
insb
sti
jg
insb
mov
jae
adc
and
mov
sbb
lods
fwait
imul
cmpsb
mov
cmpsb
push
lret
movsb
jno
pop
xor
xchg
and
cli
mov
xchg
push
cwtl
shlb
jb
out
lods
fdiv
push
in
out
mov
pop
jns
xchg
mov
mov
cld
or
inc
popf
inc
mov
sub
mov
std
cs
pop
push
bound
cmp
or
out
jno
loopne
dec
test
mov
fcomps
cmp
mov
xchg
pop
mov
inc
or
lret
ftst
call
daa
inc
xchg
adc
sbb
pop
cmpsl
mov
rcr
lcall
add
fisubl
or
out
and
push
pop
inc
adc
and
sbb
in
inc
test
mov
or
int3
push
cmp
insb
insb
xor
xchg
insb
mov
loope
loope
adc
or
movsb
movsl
les
xor
shrl
jno
mov
movhps
pop
inc
fmull
sarl
fidivrl
leave
mov
or
popf
rcll
jno
lret
xor
aas
fcompl
cwtl
push
pop
nop
pushf
adc
aad
daa
xchg
fistpll
pop
fistps
sub
dec
sar
pop
cmp
sub
and
bound
stos
xchg
cmp
pop
lods
sub
xor
enter
out
imul
pop
mov
fisttps
mov
xchg
push
cmp
loopne
or
mov
popa
sahf
xchg
pop
test
mov
add
mov
roll
sub
faddl
std
mov
movsb
push
mov
or
and
mov
in
cltd
sub
mov
ljmp
pop
and
jne
push
loope
cs
mov
insl
mov
push
dec
ja
push
stos
mov
jbe
ficomps
sub
out
sbb
pusha
xchg
ja
mov
sahf
or
and
mov
pop
into
test
and
stos
shrb
std
jp
jl
int
je
push
ret
mov
cmpsb
outsb
push
lcall
jno
and
xchg
mov
fcompl
adc
cmpsl
std
mov
in
imul
rcrb
push
insb
es
aad
add
pushf
jmp
sar
lahf
pop
mov
jmp
stos
pop
popf
std
loope
jle
fstps
out
lahf
fsubr
mov
mov
ds
xchg
js
fdiv
cli
mov
mov
in
and
ds
dec
push
orb
inc
stos
outsl
loopne
fisttps
adc
mov
adc
enter
dec
push
push
mov
jp
or
jo
fwait
sub
xchg
mov
cltd
and
or
mov
sub
cli
mov
inc
imul
nop
dec
mov
test
adc
setge
or
mov
push
or
int
lahf
cmpl
lret
jo
dec
roll
stos
cmp
in
mov
or
sti
outsl
sbb
sbb
and
lcall
jbe
jle
xchg
inc
out
jecxz
adc
xorl
jp
push
add
push
fmull
adcl
sar
in
or
mov
and
mov
loop
lret
imul
mov
and
mov
adc
add
sbb
nop
xor
cmp
sub
lods
xor
aad
and
pop
jo
add
arpl
cmp
cmc
mov
stos
cmc
adc
sbb
jl
mov
pop
xchg
mov
inc
xchg
js
sub
popa
outsb
fwait
test
stos
mov
push
loopne
mov
int3
or
lret
push
dec
inc
outsb
fsubrs
push
cmp
popf
decb
xor
xor
inc
jp
aam
adc
xchg
and
xlat
repz
aas
xor
push
ret
sub
mov
into
jnp
sbb
xchg
int
subb
jmp
jbe
xchg
jne
loopne
ljmp
lds
sbb
mov
loop
xor
fcmovu
push
lahf
addr16
pop
out
pop
mov
icebp
outsb
je
push
mov
add
shll
lock
cmp
aaa
sbb
repz
push
out
mov
adc
out
in
adc
int
test
insl
push
movsb
adc
push
ret
sub
adc
xor
gs
scas
mov
lret
popf
adc
add
mov
push
mov
pop
sub
inc
ret
dec
xor
daa
sbb
out
scas
push
xlat
mov
lods
loop
test
xchg
mov
arpl
rorb
cmp
pop
push
and
cmp
je
arpl
out
jecxz
mov
and
xor
std
pop
fldl2t
data16
xlat
mov
sarl
pop
out
movsb
jg
inc
jbe
add
mov
sti
hlt
xchg
nop
lds
dec
jecxz
jnp
sti
jae
xor
mov
inc
push
shrb
shl
inc
aam
or
xor
adc
movsb
xchg
aad
stos
in
pusha
movsb
inc
hlt
insb
sti
stc
insb
push
aaa
scas
push
cmp
jl
out
xor
xchg
lock
int3
mov
pop
test
mov
daa
fsincos
popa
out
hlt
cmp
repnz
cmp
mov
push
jb
shll
pop
push
scas
inc
cmc
orb
xor
loopne
test
aad
push
jmp
loope
cs
sti
cmp
inc
stc
daa
cli
inc
in
jnp
mov
sub
push
adc
mov
lcall
aam
insl
test
pop
dec
adc
pop
xor
loopne
pop
or
hlt
jg
inc
ret
mov
pop
mov
ret
test
dec
data16
outsl
add
cmp
lret
std
jns
adc
arpl
xor
std
xchg
sub
inc
push
jb
shrl
mov
popa
sarb
xor
and
loop
enter
and
and
icebp
sbbb
sbb
dec
inc
lahf
and
mov
jmp
loopne
in
dec
loopne
shll
divb
psadbw
xchg
xorb
dec
in
pusha
sub
test
push
mov
or
out
xor
fdivrs
inc
push
stos
mov
aaa
sbb
movsl
mov
and
push
sbb
push
mov
push
sbb
ss
jmp
and
pop
data16
sbb
ss
xchg
sub
adc
jbe
or
imul
mov
inc
adc
in
gs
cmc
xor
popf
push
fcomps
mov
sbb
and
lret
sahf
push
ret
sarl
push
cs
pop
mov
loopne
lock
push
std
sub
insb
mov
mov
mov
cltd
out
cmp
lods
out
jb
dec
push
sub
js
inc
jne
pop
sbb
sarl
push
dec
test
js
or
jmp
lcall
rclb
adc
push
sub
sbb
xor
pushf
inc
mov
jbe
out
movsb
dec
mov
pop
cld
adc
xor
test
push
dec
mov
xlat
lock
xchg
iret
xchg
cmp
cld
jl
cs
cs
cmp
fwait
cld
out
sbb
cmpsl
jns
push
cmp
or
outsb
xor
sbb
push
lcall
sub
mov
loop
int
stos
jg
lods
icebp
roll
leave
iret
pop
test
test
or
pop
arpl
cmpb
sub
lret
xchg
jne
adc
scas
mov
mov
stc
sar
xchg
push
add
xchg
inc
pop
cs
dec
add
repnz
xchg
cmp
pusha
outsl
nop
xor
and
fnstenv
sub
das
push
into
and
repnz
rorl
ljmp
push
aas
cld
jg
mov
jo
loopne
jne
movsl
add
jl
push
movsb
adc
or
jp
add
fnstsw
test
mov
dec
lods
mov
inc
sub
inc
aas
inc
addl
ret
add
jp
notl
xchg
dec
inc
cmp
fstpt
and
enter
adc
fistpll
icebp
loop
xchg
test
cmp
xor
inc
gs
mov
push
ret
es
out
mov
fcomi
mov
je
dec
jno
fwait
push
sahf
lods
in
test
aad
inc
sub
xor
test
sub
cli
mov
icebp
ucomiss
test
mov
add
jns
es
pop
sbb
rcrb
mov
inc
add
mov
pop
push
dec
ret
jecxz
mov
push
icebp
push
pop
pop
pop
loope
sahf
cmc
sbb
push
mov
in
mov
or
dec
fidivl
int
mov
or
and
arpl
inc
sub
inc
repz
or
mov
cmp
xchg
js
xchg
fucomi
mov
sbb
jecxz
cmp
call
popf
inc
testb
aam
out
in
cmp
out
rolb
inc
lock
mov
sub
sarl
pop
andl
jmp
es
outsl
xor
pop
pushf
jmp
dec
in
xchg
inc
pop
xchg
arpl
mov
or
jo
jae
popf
and
imul
in
push
ret
dec
cli
adc
inc
mov
mov
movsl
jmp
mov
xor
faddp
pop
shll
dec
fwait
ret
sbb
lcall
lods
mov
xchg
jne
add
sbb
xchg
cmp
leave
adc
es
pusha
xchg
in
pop
int
loop
mov
add
lds
add
test
add
int3
cmp
loopne
push
push
push
mov
push
fcmovne
xlat
shl
adc
outsb
or
cli
aad
jge
add
loopne
jno
sub
jl
icebp
ja
cmp
leave
cs
push
mov
mov
mov
dec
jg
scas
es
daa
dec
adcl
sub
xor
mov
mov
sbb
out
xor
mov
icebp
stos
addr16
lds
sub
in
fdiv
mov
inc
dec
in
mov
psubd
jecxz
clc
cli
push
xor
out
lret
cmp
adc
insl
stc
in
shll
xchg
and
mov
aad
repnz
mov
xchg
dec
stc
push
adc
lret
icebp
rorl
xchg
hlt
mov
in
adc
mov
data16
sbb
test
or
out
sbb
lods
mov
mov
jl
mov
jg
sbb
cwtl
dec
lahf
jle
mov
mov
push
and
ret
out
cmp
xor
add
jmp
fnstenv
add
fisubs
ficoml
out
sbb
xor
pop
cs
inc
push
jle
cmp
insb
add
and
leave
sahf
push
cmp
push
mov
cli
sbb
inc
xlat
repz
sub
inc
mov
movsb
push
mov
push
add
inc
sub
orb
pop
and
xchg
cltd
mov
sbb
aad
imulb
xor
jnp
cmpsl
out
cltd
leave
cli
cmp
dec
std
inc
dec
sub
fnstenv
sbbb
or
gs
adc
in
sbb
rcrl
lods
pop
ja
rcll
inc
xchg
mov
inc
jne
pop
out
adc
mov
pop
loop
sub
jg
mov
js
push
xlat
cmp
sub
lea
push
icebp
fadd
xchg
cwtl
cwtl
jne
xor
cmp
inc
xor
lods
sub
mull
fisubrl
push
cmp
mull
mov
in
adc
and
jbe
or
push
inc
pop
adc
cmp
dec
cmpsb
jne
inc
stos
or
jmp
xor
add
xchg
bound
sbb
jmp
xor
insb
les
lods
cli
dec
dec
ja
fadd
inc
je
repz
adc
pop
xchg
pop
pop
dec
inc
fmuls
add
aaa
or
fucomip
test
adc
lretw
jmp
inc
je
mov
scas
fucomp
fs
sub
mov
mov
rcl
out
iret
cmp
fsubl
or
xor
mov
lahf
setne
and
xchg
repnz
idivb
jecxz
jno
and
cltd
aas
sub
sub
xlat
xchg
or
or
dec
push
stos
xchg
xchg
adc
jle
mov
das
pop
nop
mov
jno
fadds
test
enter
gs
xchg
jae
jmp
loop
out
lret
jno
mov
sub
fsqrt
jb
outsb
out
jecxz
mov
push
or
jecxz
aam
sarl
dec
cmp
shrl
mov
adc
dec
xor
test
loop
or
jb
cmpsl
push
ss
test
int3
and
jns
in
pop
cli
insb
aaa
cmp
ljmp
out
fisttps
icebp
jnp
cmpsl
pop
je
add
xor
dec
jl
sub
lods
xlat
or
cs
jl
jno
mov
int
mov
pop
rclb
push
ret
mov
or
sub
push
iret
shrl
cmp
movsl
repnz
mov
dec
jp
or
outsb
int3
xor
mov
add
andb
push
sbb
clc
icebp
sub
rcrb
sar
or
cmc
push
test
jg
xchg
rolb
cmp
repnz
fcoms
sub
push
stos
inc
test
test
scas
in
xor
cmp
push
sbb
sbb
les
imul
and
and
dec
fcmovbe
addb
add
leave
xor
shll
xor
je
addr16
dec
adc
ja
mov
stos
pop
mov
out
fstpl
mov
sarb
popf
mov
test
pusha
pushaw
mov
xchg
jge
pop
fsubrl
sti
mov
mov
dec
inc
das
and
lret
popf
fdivr
xor
mov
fiadds
sub
jno
das
sub
mov
push
ss
loope
xor
outsl
loop
sub
pop
cmp
pop
call
sbb
cmp
test
add
int3
add
pop
mov
mov
push
push
push
scas
call
pop
adc
mov
xlat
adc
daa
std
cld
rolb
scas
sbb
lret
jl
outsl
js
inc
popa
scas
mov
xchg
push
lods
fisubrs
jmp
mov
call
insl
rorl
xor
or
push
cld
cmpsl
popl
sub
pop
in
outsl
lds
push
std
in
mov
push
test
pop
cs
push
js
pop
jmp
xor
inc
adcl
jge
add
addb
adc
shlb
and
fldenv
ds
popf
pop
or
mov
mov
push
test
and
lcall
push
cmpsb
adcb
int3
jl
dec
or
in
jbe
cwtl
enter
sbb
gs
in
stos
push
iret
sbb
sbb
inc
mov
cmpsb
adc
lods
push
movsl
inc
inc
xor
testb
test
jnp
xlat
jae
push
xchg
les
sub
cmc
xchg
adc
xor
sbb
and
cwtl
cmp
mov
xchg
inc
xorb
hlt
loop
mov
pop
push
and
pop
lret
in
int
cmpsl
mov
ret
movsb
bswap
test
aas
mov
mov
les
push
jae
xchg
out
ljmp
mov
das
dec
fmuls
lods
mov
aam
push
fnstsw
mov
shlb
sub
jmp
ja
ret
jge
jg
ja
in
jns
push
and
xor
jnp
push
pushf
pusha
in
sbb
adc
pop
add
int3
push
push
lret
mov
shll
push
sub
mov
pop
mov
xchg
jns
es
icebp
sbb
mov
ds
fnstenv
jne
mov
xlat
in
fcomp
mov
cli
push
incl
mov
or
or
jp
rcrl
dec
mov
loope
push
jecxz
repz
mov
and
mov
ror
test
mov
sbb
call
pop
bound
stc
fwait
aas
les
jg
sbb
push
fbstp
fmuls
lret
negl
push
call
cltd
orl
scas
imulb
push
pandn
mov
insb
fwait
push
sahf
adc
and
xor
insb
xchg
add
cmp
sbb
xchg
and
adcb
dec
and
mov
out
xchg
out
jmpw
lods
shl
pop
sahf
testl
mov
fs
mov
test
int3
shrl
adc
bnd
into
stc
pop
fbld
xorb
and
mov
adcl
xchg
add
pop
pop
inc
scas
inc
cmp
pop
xor
push
xchg
pop
sbb
fisttps
add
cmp
les
int
xchg
cmp
jecxz
cmp
push
cmc
outsb
pushf
xchg
outsb
addr16
mov
shrl
cmpsl
sbb
fsubrs
jbe
xchg
jmp
add
lahf
js
inc
or
push
lods
scas
push
nop
fcoms
or
shrb
adc
in
aam
push
mov
and
dec
jnp
xor
pop
sub
cltd
mov
xchg
ret
xchg
and
outsl
enter
lea
mov
jg
out
fdivrl
push
push
adc
cmp
jle
test
mov
sbbb
adc
lcall
imul
decb
jbe
xor
les
dec
daa
mov
push
mov
scas
pop
add
sub
addr16
shufps
mov
insl
les
push
add
pop
test
lret
dec
push
sbb
stc
stos
bound
mov
jg
test
cmp
push
hlt
mov
rorl
jo
lahf
fisttps
scas
inc
and
push
call
mov
iret
jmp
mov
data16
cld
in
stc
mov
inc
jge
inc
int
fistpl
stos
adc
in
inc
faddl
add
xor
push
es
pop
stos
or
lea
fnstcw
call
mov
jno
mov
add
adc
addr16
and
pop
and
aas
aaa
das
in
std
in
fisubrs
pop
iret
adc
les
mov
inc
cmp
imull
ljmp
push
inc
fs
loope
or
adc
aad
fdivrs
sbb
js
movsb
paddd
and
xchg
push
dec
mov
leave
outsl
sub
xor
pop
lds
out
shl
add
add
cmpsb
inc
dec
xchg
inc
dec
sub
jg
ficompl
cmp
sub
out
aam
fidivrl
in
mov
jae
mov
cmpxchg
and
jbe
das
loope
inc
jne
xchg
ljmp
add
mov
in
ror
and
clc
or
addr16
push
rclb
mov
push
outsb
test
dec
fisubl
jnp
pop
mov
pop
push
dec
ret
mov
arpl
and
or
push
mov
dec
shrl
jo
rorl
xor
xchg
pop
lahf
mov
or
xchg
mov
mov
shrl
gs
fs
jnp
pop
pop
adc
sbb
cmp
dec
inc
and
dec
and
xor
insl
je
test
nop
andb
stos
mov
lds
push
push
mov
cmp
jmp
jo
xchg
cmp
mov
shlb
add
cmpl
push
jae
dec
icebp
test
sub
adc
mov
int3
roll
cltd
push
add
sub
pop
movsl
aam
cmp
cwtl
mov
jmp
fildll
sbb
movsb
je
repnz
sub
mov
jecxz
aad
mov
stos
jp
int
dec
aaa
push
pop
mov
aaa
mov
cli
jns
xchg
test
int3
jle
mov
stos
cmpb
fbstp
sbb
imul
dec
sub
mov
rorb
jp
test
andl
jbe
mov
lret
push
int
cwtl
sbb
push
scas
mov
inc
jns
and
or
loopne
mov
into
push
jbe
lods
inc
cmp
jle
pusha
and
push
inc
inc
mov
push
pop
push
sahf
xor
xor
sub
div
inc
bnd
je
in
push
imul
rcrb
es
sbb
out
push
jge
add
ds
loopne
dec
lods
fs
fcomi
testb
cwtl
ja
cmp
jno
push
shrb
xlat
arpl
mov
pop
adc
push
push
decb
rcll
mov
js
imul
add
dec
nop
xchg
push
repnz
push
repnz
sti
test
pop
popa
xor
dec
loop
inc
push
push
sub
and
lcall
fwait
sbb
repz
mov
shlb
in
pushf
jg
mov
lahf
and
imul
in
pusha
nop
cmpsb
inc
inc
aad
jo
fimuls
in
jne
jmp
ljmp
xchg
cmp
pop
fistpl
add
and
in
pop
inc
mov
scas
xchg
pop
pushf
loopne
enter
dec
adc
sbb
leave
push
out
sub
cli
sub
lods
shr
ror
push
orl
je
sbb
cmc
mov
ds
lcall
imul
xor
incb
sub
adc
rcrl
jp
das
mov
mov
xor
mul
mov
jmp
rep
in
insb
mov
int3
pop
pop
push
test
mov
aad
loop
fs
lcall
mov
sub
jnp
sub
lahf
rep
repz
movsl
data16
movsb
fidivrs
xor
ret
rolb
push
aaa
fimull
sub
jmp
pop
push
sbb
mov
mov
jae
adc
mov
aad
in
rcr
cld
fdecstp
addb
imul
mov
fs
test
repnz
inc
adc
loope
jae
bound
test
int3
cmp
sub
pop
sbb
sarb
jl
cltd
rcrb
lods
test
mov
call
in
sub
out
mov
lods
dec
cmp
ja
xchg
mov
adc
pop
and
shlb
loope
or
mov
pushf
push
dec
adc
add
jb
xor
fcoms
or
ret
mov
sbb
xor
jno
mov
stos
nop
and
mov
subb
aam
dec
jnp
idivl
mov
push
mov
mov
lret
inc
int
push
mov
sbb
es
nop
add
iret
pop
add
in
roll
dec
or
fstp
or
mulb
dec
out
out
rclb
in
mov
les
push
cltd
push
sbbl
test
sbb
sub
loope
or
or
mov
into
daa
roll
incl
in
shl
xchg
lods
jb
sub
sub
fwait
insb
sbb
insb
fwait
sahf
movsb
scas
scas
jmp
out
sub
sub
push
nop
test
xchg
mov
add
dec
out
aad
out
sbb
fists
jecxz
add
mov
data16
ret
mov
loop
nop
mov
xchg
nop
add
orl
jae
shlb
dec
movsb
outsl
jae
sub
pop
adc
js
insl
cwtl
dec
cs
xor
jmp
repz
inc
pop
sub
push
jnp
hlt
test
mov
inc
cltd
mov
jg
push
movsl
lret
adc
xchg
mov
call
cli
insb
ret
mov
lret
ljmp
sub
rclb
cltd
jmp
outsb
js
dec
arpl
movsb
loope
adc
sbb
jmp
jge
adc
or
scas
jb
insb
mov
ljmp
mov
add
int
fiadds
and
outsl
push
popa
pusha
aas
rorl
outsb
fildll
daa
push
dec
xor
or
cmp
pop
push
cmc
sbb
and
add
add
mov
movsl
aaa
ljmp
or
lcall
mov
cmp
fists
imul
sub
ss
cmp
or
sub
push
push
lea
insb
jne
xchg
push
dec
loop
push
imul
sbb
sub
pop
hlt
das
ud2
insl
sub
jae
cli
inc
hlt
bound
sub
push
daa
mov
mov
js
inc
insb
dec
mov
aaa
pop
stos
ficomps
xchg
loope
shl
pop
ds
add
push
pmuludq
xor
mov
mull
popa
test
mov
cmp
inc
in
mov
or
in
imul
imul
jbe
filds
aas
or
or
lahf
cmp
test
sbb
sub
push
adc
stos
inc
and
pop
mov
mov
dec
push
sbb
push
movsb
push
pop
imul
dec
rolb
cmp
shrb
jmp
dec
jo
mov
fists
jp
push
or
pop
cli
dec
xchg
stos
cld
ret
sahf
dec
out
pop
or
imulb
inc
inc
je
xchg
ja
je
stos
jecxz
cltd
mov
add
jo
inc
jno
test
sbb
cli
icebp
cmpsb
mov
inc
mov
popf
adc
cmp
and
jbe
out
push
inc
fbld
daa
cld
mov
xchg
shll
fbld
mov
popf
sbb
aad
xchg
or
rclb
icebp
cltd
dec
lahf
into
fistps
stc
add
int3
adc
cmp
aaa
adc
mov
cmp
lcall
dec
xlat
xorb
mov
out
add
xor
cli
cmpsb
aam
out
inc
dec
xor
sub
ds
xchg
mov
push
arpl
xor
out
add
adc
sbb
mov
mov
jmp
nop
push
sbbb
loope
mov
dec
cmc
in
int3
inc
rcr
outsl
scas
or
add
push
insl
inc
stos
pop
jecxz
pop
xchg
ss
or
cmp
cltd
inc
lret
fs
insb
add
cmp
scas
jl
test
or
testl
je
push
and
imul
jge
inc
cltd
push
enter
icebp
cmp
xchg
das
xchg
cltd
shll
xchg
push
push
mov
int3
lret
mov
xchg
movsb
add
rol
xchg
loope
cmc
es
std
insb
add
fcoml
aad
bnd
test
not
repz
in
mov
push
and
js
pop
jp
les
ficomps
subps
push
xor
ficomps
xor
cmp
and
mov
aas
mov
insb
pop
inc
jl
in
cmpsl
sbb
inc
sub
mov
das
fwait
jae
test
orb
pop
addl
fs
xchg
jae
out
aaa
adc
xor
xor
push
sbb
mov
jecxz
repz
out
dec
mov
adc
xlat
out
icebp
fcomps
push
jecxz
enter
jno
aad
cltd
test
adc
sub
sbbb
sub
sti
cmpsb
xor
hlt
mov
or
clc
movsl
fadds
sub
call
push
in
jg
add
enter
xchg
into
dec
cwtl
ljmp
xlat
cmpsb
push
push
test
loop
dec
testb
jp
shrl
dec
mull
inc
out
int
mov
jg,pn
in
sarb
shrb
lock
popf
xor
sarb
cmpsb
aas
cwtl
xor
pop
xor
fidivl
in
mov
mov
or
seta
dec
pusha
jno
ret
aad
aam
stos
sub
xchg
sahf
push
fs
xor
cmp
popa
inc
cmpl
aam
jl
or
movsb
xlat
push
inc
js
iret
sti
sbb
insl
popf
jns
xchg
push
xlat
movsl
into
jmp
mov
xor
dec
or
out
int3
dec
arpl
xor
mov
mov
mov
mov
imul
pop
push
shrb
xor
xchg
xlat
dec
mulb
clc
xor
xor
mov
dec
lods
jne
loope
xchg
adc
cmp
and
mov
or
shrb
xchg
ja
fidivrl
in
pop
mov
xor
lods
stc
adc
rorb
inc
pop
adc
test
sbb
xchg
push
in
mov
into
movsb
out
xor
frstor
enter
fildll
jge
cmp
jnp
sub
pop
shll
cmpsl
and
aas
dec
pop
mov
xchg
or
sbb
push
negb
int3
mov
add
imul
stos
mov
js
aad
xchg
pop
mul
cmp
mov
fimuls
and
imul
push
cmp
fnstsw
into
les
enter
cmp
dec
adc
aad
in
int3
js
inc
adc
xlat
pop
pop
roll
lods
or
or
jnp
test
sub
jo
insb
iret
stos
mov
sbb
mov
inc
ss
fisttpll
push
xor
lock
mov
cmpsl
in
cmpsb
inc
jae
shrb
jp
mov
enter
enter
popf
fnstenv
out
pop
cmp
stos
pop
and
jle
cwtl
push
adcl
cmp
jmp
mov
ds
mov
cmp
daa
ds
dec
xor
movsb
xor
inc
sahf
xlat
les
scas
mov
out
xlat
or
pop
into
mov
jge
push
jg
mov
cmp
push
jg
mov
xchg
pop
mov
sbb
outsb
loope
aad
ficompl
push
push
cmp
sbb
jne
pop
cli
inc
loop
cltd
lods
cmp
pop
js
ja
cmpsb
clc
push
push
js
adc
std
add
pop
btr
rol
or
out
lcall
popf
push
pop
add
dec
mov
cmp
fwait
pusha
jg
adcl
es
pop
push
jmp
adc
mov
repnz
inc
outsb
dec
inc
push
xchg
test
xchg
mov
adc
mov
leave
insb
jne
adc
or
pushf
xchg
dec
or
in
mov
imul
gs
test
push
mov
push
fldenv
inc
jae
iret
sti
cmp
das
mov
push
xchg
mov
repnz
sub
xor
adc
gs
sub
mov
adc
or
call
jmp
jmp
or
leave
movsl
push
es
and
daa
pop
in
popf
lods
pushf
adc
inc
jecxz
or
mov
outsl
js
repz
mov
pop
icebp
inc
lods
out
jp
xor
mov
cmp
aad
out
and
push
jb
outsb
xor
bound
popf
xor
mov
ljmp
mov
mov
xor
or
mov
into
mov
xchg
das
xor
add
add
cmpsl
in
pushf
pop
push
pop
mov
pop
jge
std
test
or
cmc
cmp
pop
rorl
jnp
add
inc
sub
punpcklwd
sbb
fistpll
cld
dec
push
sbbb
mov
sub
into
repz
xchg
es
cwtl
in
sarb
xchg
dec
outsl
xchg
test
mov
ror
filds
cs
xor
push
loopne
pop
lock
in
cmp
fidivs
adc
or
inc
lods
xchg
shlb
push
add
inc
mov
int3
es
mov
lea
sub
jb
sbb
dec
sti
cs
pop
scas
jmp
xor
loop
ljmp
into
dec
ss
aaa
loopne
rorb
fistl
aas
inc
mov
cmc
mov
or
out
in
sub
adc
leave
mov
jnp
adc
mov
loop
pusha
repz
sub
test
push
push
test
jbe
mov
and
push
mov
clc
mov
xchg
and
imul
cmpsb
push
xor
jae
mov
adc
mov
push
lcall
xlat
mov
filds
pop
sbbb
mov
pop
in
dec
push
das
xchg
mov
sahf
jge
ffreep
das
push
cmpb
xlat
aam
xchg
and
lods
xor
sbbb
pop
pusha
mov
mov
shrb
insb
xor
cmp
cltd
and
mov
pop
scas
hlt
data16
jo
mov
inc
push
in
in
rol
aad
out
int
mov
xor
stc
sbb
jo
hlt
push
adc
and
shlb
into
sub
add
shl
jmp
push
push
loopne
or
inc
xor
aam
mov
mov
lock
icebp
fsubp
arpl
rclb
sub
mov
jmp
cs
fcompl
adc
loopne
adc
xchg
sbb
or
mov
or
ret
sub
ljmp
or
push
jae
or
xlat
sahf
mov
push
fstpl
in
sbb
lcall
and
neg
mov
mov
ljmp
sub
test
rorl
cmp
inc
int
mov
adc
pop
shrl
mov
stos
mov
xor
gs
mov
pop
lahf
xchg
test
jge
fsubs
lahf
inc
ret
movsb
icebp
adc
out
imul
scas
addr16
push
or
std
adc
cmp
xchg
inc
scas
insl
leave
mov
movsb
pop
ja
es
sti
dec
ljmp
mov
pop
repz
sahf
pop
inc
andl
js
add
js
mov
mov
pop
cltd
test
les
call
sbb
adcb
adc
mov
dec
jle
es
loope
sub
mov
inc
cs
inc
pop
fdivrl
cmp
sbb
mov
xchg
pop
xor
adcl
jmp
add
adc
inc
dec
inc
push
push
mov
sub
into
adc
push
loope
aad
xchg
sbb
lods
pushf
mov
ds
icebp
bound
push
int
shl
addr16
and
nop
cmp
test
push
xchg
lret
dec
fadd
sbb
xchg
int
jl
mov
ror
mov
sarb
in
aas
mov
pop
or
outsl
xor
cwtl
repz
mov
insb
adc
cmpb
frstor
cmp
jnp
jno
pop
mov
cmp
xchg
jge
push
pop
or
dec
pop
push
out
icebp
mov
nop
push
pop
mov
mov
and
xchg
lea
xchg
mov
loopne
in
ss
mov
cmp
push
inc
int3
std
mov
lret
lods
dec
pop
jno
pop
fs
mov
clc
dec
mov
adc
mov
into
loope
imul
add
xchg
scas
adc
adc
add
lods
push
dec
adc
insl
pop
mov
mov
push
lds
jge
jnp
sub
add
xchg
mov
aam
add
repz
inc
pusha
sbb
mov
int3
add
out
fidivrs
dec
out
test
les
mov
ficomps
je
int
and
pop
mov
mov
adc
sub
movsl
pop
popa
fldcw
out
mov
push
outsb
daa
xor
mov
cmp
in
popf
inc
mov
mov
int
cmpsl
pop
xor
jbe
addl
cs
ds
xor
xor
aas
cltd
aam
repz
or
jae
xor
xchg
orb
lcall
jmp
jle
shl
jmp
push
push
and
mov
xchg
outsl
push
hlt
inc
push
leave
xchg
xchg
ds
mov
inc
cs
shll
push
negb
xor
pop
test
pop
insb
xchg
insl
cs
mov
mov
cmp
outsb
mov
jmp
flds
shlb
imul
dec
movsl
in
loop
push
mov
mov
mov
test
faddl
push
cmpsb
test
add
push
and
pushf
sahf
lea
xor
es
jge
into
sahf
xchg
in
sbb
xchg
mov
inc
pop
lods
inc
push
jle
fnstcw
jno
cmpb
clc
out
push
cli
add
add
ds
xchg
fistpll
inc
and
or
push
sahf
cmp
sub
add
push
xchg
mov
or
cmp
cld
hlt
push
push
inc
pop
jecxz
enter
lock
mov
mov
sbb
in
mov
adcl
jle
mov
pop
ljmp
call
lock
mov
sbbl
popf
test
add
and
sbb
ror
jg
mov
inc
pop
mov
xor
pop
sbb
adc
scas
mov
jecxz
rclb
ret
and
adc
cmpsl
aad
push
pushf
bound
pop
mov
rclb
js
jnp
pop
mov
jp
aad
dec
dec
addb
ds
stc
ss
xchg
insb
xor
int
iret
dec
fwait
test
xchg
adc
imul
push
add
out
mov
add
mov
ds
ss
movzwl
lods
and
jecxz
sahf
and
jno
fninit
xor
leave
ja
pop
stos
mov
pop
lds
in
pop
mov
sub
push
cmp
psubusw
jne
loop
out
or
arpl
fdivs
push
pop
dec
push
jno
jl
jmp
add
pop
fiaddl
cmpsl
pop
jle
lods
xchg
shlb
out
pushw
pushf
loop
icebp
push
xchg
mov
repz
adc
loope
bound
aam
cli
pushf
mov
aaa
push
stos
jl
mov
out
dec
or
outsl
jl
xchg
out
aad
sbb
cld
gs
lret
pop
add
push
leave
xchg
add
sbb
addl
cmc
stc
test
cmpb
sub
xor
push
popf
pusha
cmc
mov
jecxz
mov
in
or
std
and
sbb
mov
jns
lea
dec
mov
nop
push
fisubrs
aad
dec
mov
sarb
pop
rcl
je
xorl
ficompl
push
sub
xor
mov
test
out
stos
cwtl
dec
push
cmp
xchg
ret
out
loope
pop
aad
xchg
shl
jns
ljmp
push
push
push
pop
inc
test
inc
fwait
add
and
adc
lods
lcall
in
jg
inc
pusha
jmp
jno
adc
outsb
jmp
fwait
mov
mov
cwtl
addr16
lock
jno
sub
jmp
cmp
jmp
mov
scas
adc
xchg
inc
ds
jae
push
cli
push
pop
insl
mov
and
cmpsl
lods
xor
bnd
add
sub
jo
daa
jl
pop
popa
jl
inc
jne
imul
lods
out
daa
cmpsl
sti
inc
and
jns
rolb
into
mov
dec
hlt
or
hlt
push
ret
ret
cmc
aam
mov
sub
xorb
or
and
fs
xor
lret
sahf
iret
pop
lahf
push
or
xor
scas
loop
or
adc
popa
jmp
js
mov
mov
mov
add
ljmp
sti
xchg
bound
outsl
loope
pusha
incb
mov
cmp
xor
mov
movsb
jnp
jno
xor
rcrl
and
mov
xchg
jnp
adc
and
in
dec
cmc
sti
jb
jb
lods
and
push
pop
or
sub
dec
cmpl
enter
xchg
push
std
pop
bound
and
or
pop
mov
int3
popa
in
jg
jo
mov
sub
pop
adc
mov
sbb
or
test
mov
shl
cmpsl
mov
out
enter
sbb
test
pop
dec
adc
decl
pop
test
mov
mov
clc
and
ret
or
push
pop
imul
ret
stos
pop
test
push
adc
sub
lods
xchg
push
addr16
xchg
and
cmp
mov
pop
pusha
inc
add
mov
popa
bound
sbb
lret
sbb
mov
cmpsb
and
push
movsl
aad
cld
and
add
pop
add
or
mov
dec
mov
repnz
lock
and
enter
les
lahf
cmp
cmp
loopne
mov
repnz
mov
addr16
jge
cmp
mov
lds
fcoms
insl
mov
xor
mov
inc
in
sub
pop
imul
and
pop
inc
inc
in
and
aam
or
push
rorl
aam
or
jae
js
inc
cmpsb
jb
int3
xchg
icebp
or
pop
sbb
out
in
scas
add
xor
or
and
xor
icebp
outsb
adc
lcall
xor
add
call
lret
fistl
nop
sbb
jns
push
lahf
dec
bound
imul
lret
mov
scas
push
pop
or
mov
mov
rol
in
pop
mov
dec
xchg
add
lahf
or
jecxz
scas
das
data16
jnp
jns
jns
stos
add
xchg
push
mov
mov
mov
inc
call
stc
repnz
mov
xchg
rcr
xchg
mov
push
mov
std
das
sbbl
scas
push
lods
adc
or
adc
and
jle
js
dec
pop
out
sarl
dec
ret
cmp
cli
jg
mov
es
cs
pop
xchg
ja
das
inc
cmp
in
mov
sub
cltd
lds
inc
mov
or
xchg
cmpsb
push
aam
or
ja
cld
jl
mov
dec
mov
push
ret
jnp
arpl
cmp
cmp
mov
pop
bound
pop
ljmp
xor
hlt
adc
ficoms
xor
mov
es
and
mov
test
icebp
loope
inc
jge
int3
xlat
jns
xor
jecxz
xor
mov
insl
push
add
bound
mov
jae
jo
cltd
leave
xchg
aas
xor
pop
jbe
pop
addr16
hlt
sub
push
jno
cmc
in
cmp
jne
mov
mov
pop
sbb
adc
sbb
test
or
je
in
mov
lcall
ficoml
push
inc
in
ja
orb
add
test
shr
sub
aad
ja
sbb
push
js
cmc
cmp
addb
ds
or
data16
jp
aas
cmp
stc
ds
or
inc
mov
mov
loope
dec
xchg
pop
fnstenv
lahf
arpl
clc
jg
mov
call
mov
test
mov
in
jmp
lods
inc
pusha
sbb
pop
popa
lock
les
jnp
out
jge
stc
pop
xchg
and
clc
addr16
mov
js
xrelease
inc
shll
xchg
cltd
sahf
push
sarb
cmc
xchg
testl
mov
push
fistl
loop
push
movsb
sbb
mov
fs
pop
out
sub
in
add
add
mov
and
xchg
mov
inc
mov
jmp
loopne
ljmp
andb
repnz
mov
dec
fwait
or
imul
push
js
xchg
dec
mov
in
mov
push
inc
inc
mov
test
push
xor
dec
repz
call
xor
jge
sbb
and
pop
mov
inc
sahf
aad
fdivrp
shrb
je
xchg
mov
lea
xor
mov
mov
mov
xchg
or
inc
nop
ljmp
or
leave
xchg
mov
mov
sub
cmp
mov
bound
xor
imul
or
int3
inc
pop
sbb
in
inc
hlt
aad
adc
mov
negl
dec
xchg
fdivr
nop
pop
sbb
jmp
jns
sbbb
push
data16
dec
orl
stc
lds
loop
sbb
ficomps
gs
add
xor
dec
fdiv
mov
pop
xor
and
movsl
xor
lcall
xor
gs
xchg
xchg
outsl
cmp
or
jl
into
insl
int
add
xchg
push
cltd
jae
inc
cwtl
fnstcw
sbb
jl
mov
push
inc
or
arpl
imul
push
cmp
das
test
in
xchg
mov
js
movsb
xor
mov
dec
mov
ret
xor
adc
or
jns
sbb
push
pop
add
cwtl
dec
sbb
test
dec
push
test
jmp
fists
mov
and
stos
stos
xlat
jbe
lock
mov
add
push
arpl
les
inc
mov
jae
mov
cmp
dec
and
in
clc
add
lcall
jns
mov
and
lods
xchg
or
push
sbb
in
jmp
lret
xchg
addr16
aas
xchg
fwait
das
push
xchg
adc
mov
pusha
jo
cmp
inc
scas
xlat
pop
jmp
fnsave
xadd
or
pop
push
and
and
jg
std
and
pusha
ss
icebp
mov
xchg
and
add
icebp
mov
push
dec
movl
mov
and
mov
outsb
lods
or
jle
sub
fisttps
leave
jl
pop
shl
sti
inc
pop
xor
cs
adc
mov
xchg
sti
mov
stc
and
cmc
xorl
or
mov
xor
dec
cmp
or
dec
outsb
decb
adc
jge
xor
or
jle
pusha
mov
or
and
aaa
movsl
adcb
insl
add
ja
rcrb
inc
aad
in
pop
sub
pop
mov
es
rclb
mov
mov
mov
inc
xchg
rcl
adc
loope
pop
mov
ficoms
sub
sbb
lret
shll
fbld
lods
into
mov
xchg
inc
cmp
stc
mov
push
fdecstp
cmpsl
mov
pop
movsb
xchg
and
sbb
jmp
stos
scas
adc
movb
lock
je
shlb
into
push
cs
ljmp
pop
mov
sub
dec
xchg
sbb
pop
pusha
out
lods
push
sbb
mov
rcrb
pop
std
adc
or
popw
insb
jbe
inc
popf
dec
fldl
mov
push
add
jne
stos
xchg
mov
sub
cmpsb
push
fmulp
mov
pop
fstpt
lods
dec
in
cmp
scas
arpl
nop
jp
pop
sub
sub
js
stos
push
dec
push
test
mov
pop
imul
in
repz
push
jo
sub
mov
sahf
push
sbb
mov
rcll
frstor
mov
or
pusha
dec
cmp
jb,pn
push
mov
lods
xor
jecxz
jmp
loop
and
dec
inc
pushl
mov
jge
or
daa
insl
sbb
lret
daa
sbb
xlat
cmpsb
mov
xchg
mov
or
cmp
shrl
sub
mov
fcompl
rorb
nop
rorb
push
cs
push
fnstenv
add
ret
sbb
mov
jg
jg
das
lret
jno
mov
and
or
jg
std
pop
inc
cltd
rcrb
jmp
xchg
xchg
sbb
pop
mov
push
mov
dec
in
push
adc
jecxz
mov
inc
lret
ja
call
jp
data16
jge
and
xor
xchg
pop
fsts
push
cltd
dec
sub
jl
movsb
jge
sbb
inc
test
rcll
out
and
sbb
xchg
cltd
dec
les
sbb
sbbl
mov
push
fbstp
iret
fdivl
aas
cmp
pop
pop
nop
sub
and
xchg
movsb
inc
xor
pop
insb
lret
add
mov
mov
mov
and
ret
adc
inc
push
out
inc
adc
pushl
dec
lea
pop
daa
jb
push
jo
sub
sbb
jge
sbb
xchg
jb
cmp
mov
pop
mov
ds
cmc
dec
rclb
leave
pusha
lahf
push
jmp
jo
movlps
aas
mov
repnz
pop
popa
and
xor
jne
ret
xor
pusha
cltd
adc
sub
push
popa
add
mov
dec
repz
push
ljmp
mov
scas
dec
adc
push
testb
inc
sti
inc
ljmp
sbb
inc
push
in
pextrw
test
push
hlt
add
jl
fs
fisttpl
test
or
lcall
mull
mov
sbb
mov
jno
das
sub
loopne
cmpsb
xor
jo
or
popa
shlb
and
ficompl
sub
and
int
pusha
fs
inc
test
pop
add
pop
int3
jno
xchg
fstl
jbe
rorl
cmp
inc
ds
es
sbb
mov
int3
orl
nop
add
jne
mov
aam
jbe
mov
pusha
jmp
fimuls
aaa
dec
adc
rcrb
inc
mov
mov
fistps
shlb
mov
aas
sub
call
fistps
pop
loopne
ja
movsb
lcall
ss
gs
pop
dec
sub
out
add
hlt
push
cs
pop
dec
das
lret
stc
imul
lods
out
sub
mov
fmuls
push
cmp
jl
inc
fcoml
into
dec
lcall
cld
or
jo
pop
out
scas
fs
adc
inc
push
repz
mov
repnz
and
dec
loop
outsl
dec
test
loop
repnz
popf
xlat
in
lods
pop
cmp
mov
mov
or
or
pusha
or
or
xchg
sbb
jnp
fildl
add
or
shr
add
xchg
aas
jno
lahf
pop
cmp
push
jp
mov
shlb
or
adc
pop
ret
push
int
sbbb
jl
hlt
icebp
jle
sbb
in
call
pusha
mov
dec
xchg
add
cltd
test
aam
or
out
jne
mov
xor
test
dec
shl
mov
xor
push
xchg
flds
xor
dec
xor
lock
inc
and
cmp
inc
mov
in
jge
adcl
xchg
popa
cmp
push
pop
lcall
lcall
iret
jbe
dec
pop
pop
mov
repz
out
rorb
and
jge
push
lods
testb
lods
xchg
movswl
inc
int3
out
mov
insb
ss
push
mov
in
loopw
xor
pop
mov
adc
fisttps
add
int3
cmpsl
xchg
push
leave
test
jmp
stc
sbb
test
inc
xchg
cwtl
cld
je
les
enter
push
or
or
xchg
and
xor
fcoml
es
pop
fwait
sub
mov
xchg
shl
or
xor
push
das
aaa
pop
xor
dec
shlb
push
mov
lret
xor
sub
cmp
inc
stos
mov
pop
pop
push
roll
or
mov
jne
popa
dec
add
sub
std
popa
rcll
inc
imul
and
add
pusha
roll
mov
je
cmp
sti
jno
adc
je
decb
cld
jl
jge
xchg
dec
adc
stos
pusha
xchg
ret
jnp
icebp
fdiv
inc
out
jno
cltd
in
movl
iret
xchg
push
movq
xor
ja
lret
call
push
hlt
push
mov
inc
or
cmpsb
sub
aam
lds
mov
es
or
sbb
decl
jne
iret
pop
sub
inc
lahf
mov
stos
jmp
pop
cli
push
mov
lock
enter
dec
sub
mov
pop
inc
jo
ds
nop
loopne
push
ss
xor
jb
push
mov
xchg
and
or
insb
jle
insb
jmp
aam
lret
enter
popa
sbb
inc
pop
popf
push
add
xchg
sbb
daa
mov
out
repz
jg
adc
rolb
inc
and
pop
sub
lock
rcrl
lods
and
ss
add
xor
add
dec
push
cmpb
int3
mov
sbb
lahf
add
mov
negl
popa
mov
sub
out
pop
mov
cmp
sbb
in
xchg
nop
ds
xchg
xchg
stos
jb
adcb
es
and
adc
xchg
in
inc
cmp
lret
jae
aad
sub
sub
mov
push
push
fwait
in
je
pop
hlt
cmp
ret
cmp
pop
jp
mov
push
out
sub
fcmovnb
push
cmp
test
and
das
or
pop
inc
lock
sahf
add
sub
mov
js
call
test
dec
add
sub
lods
add
sti
mov
popa
sbb
add
pusha
outsl
popa
into
les
sub
icebp
fldl
repnz
mulb
imul
sbb
out
testl
fs
cmp
cmp
cmp
les
sbbb
gs
outsb
add
cmc
clc
fld
aaa
push
cmpsb
jb
into
filds
jnp
subl
cmp
jb
push
mov
icebp
jmp
mov
ret
dec
and
test
adc
or
cmc
dec
scas
sbb
arpl
ret
clc
in
sub
lret
sub
mov
rcl
or
lds
adc
sub
inc
push
adc
fcompp
push
jae
xchg
xor
arpl
shrl
arpl
mov
gs
outsl
jno
cmp
push
xor
cs
sti
lret
js
inc
paddusb
es
cmpsb
imul
cmp
data16
ja
mov
lds
clc
lea
sti
negb
popf
jg
sbb
lea
fs
sub
jl
xor
push
cmp
dec
sbb
mov
sub
fwait
jnp
mov
call
pop
andl
mov
mov
jbe
stos
adc
push
pop
rclb
lea
scas
lcall
aas
mov
mov
add
addl
fs
mov
movsl
cmp
popa
mov
in
ds
loopne
cwtl
jbe
cmp
cmpsb
cli
mov
fisubs
test
scas
gs
xor
mov
xchg
adc
je
aas
mov
aaa
icebp
rorl
aas
fwait
cmp
xor
mov
stc
stc
int3
cmp
mov
mov
arpl
cvtps2pd
je
mov
mov
stos
add
adc
cmpsb
mov
add
test
xchg
icebp
cwtl
in
xchg
xchg
inc
ror
inc
dec
ljmp
jmp
jl
je
add
push
and
or
fdivs
pop
mov
js
push
jae
cmp
repz
leave
test
rorb
adc
outsl
insb
inc
insl
dec
jae
or
sub
fwait
rcll
adc
mov
daa
inc
push
aad
xor
and
ret
rcr
cmp
jl
repnz
cli
clc
negb
lret
xchg
aad
repz
jecxz
inc
cli
das
add
inc
popa
adcl
push
movsb
cltd
xchg
inc
jae
xor
inc
cmp
out
add
xchg
inc
das
je
pop
stc
cmp
mov
gs
push
movsl
inc
and
jns
clc
inc
or
sub
xor
das
and
fs
in
test
fs
xor
fcom
jecxz
cmp
test
adc
pop
and
aas
lds
dec
ds
rol
mov
add
stc
push
and
call
dec
cmp
rcll
mov
or
nop
imul
xchg
pop
push
insl
ljmp
dec
aas
popf
into
jge
and
pop
dec
fnstsw
mov
iret
out
cmpsl
mov
sbb
cli
cmpb
push
push
sub
jns
xchg
xchg
jg
fwait
das
popa
jmp
js
adc
push
lods
negl
inc
movsb
jmp
adc
sbb
sahf
sub
mov
rcr
insb
and
cltd
iret
js
fcmovnb
dec
imul
fistpl
jl
mov
pop
add
inc
xor
test
mov
mov
into
cmp
cmc
cmp
popf
mov
push
mov
fadds
add
iret
orl
jmp
pop
cmp
ret
aaa
aaa
pop
and
cmp
jle
pop
xchg
push
inc
push
andb
push
mov
sahf
je
loope
fisubrs
sbb
push
in
aaa
pop
out
shr
cmp
cmp
jl
movsl
rcrl
mov
xchg
xlat
mov
jns
or
and
jmp
inc
jecxz
inc
mov
pop
std
in
dec
inc
adc
stos
stos
rcrb
cwtl
fwait
xchg
jle
lock
or
mov
mov
cmpsl
push
or
daa
mov
lcall
sbb
xor
jne
cmp
or
xor
lea
pop
or
cmpsb
push
xchg
mov
adc
sbb
xor
push
adc
out
pop
push
lcall
pop
aas
test
adc
fwait
js
pop
cltd
lock
jae
insl
sbb
mov
mov
in
xchg
push
xchg
sar
jl
and
mov
leave
call
shlb
push
xor
imul
in
scas
jns
fdivrp
and
jae
lock
push
mov
push
adc
je
jbe
daa
outsb
insb
cmp
lods
xor
dec
inc
and
xchg
cli
push
insl
adc
dec
inc
push
and
fcoms
fbstp
into
cmpsl
rorb
mov
test
in
jnp
lods
nop
mov
mov
mov
rorb
or
cmp
mov
divb
sbbb
orb
pop
xchg
push
iret
sub
pop
movsl
pop
mov
jge
mov
cmpsl
das
les
call
push
xchg
lret
in
fisubs
int
dec
jecxz
push
rcrl
nop
stc
xor
rcll
outsl
pop
inc
xor
fstl
int
pushl
insl
adc
ljmp
fiaddl
dec
push
or
fchs
mov
gs
add
mov
adcl
sbb
jns
mov
das
pop
cmp
inc
fidivl
mov
push
data16
sti
push
dec
loopne
mov
popa
mov
cmp
mov
loope
mov
cmp
jnp
and
adc
xor
bound
inc
ret
xlat
js
popa
mov
xlat
push
sti
das
adcb
ret
jl
popf
pop
iret
lcall
xor
cwtl
and
cmpsl
mov
jb
arpl
ljmp
repz
test
dec
jb
xchg
jp
jmp
mov
out
mov
ljmp
rcrb
jno
xchg
sub
mul
pcmpgtb
and
and
cs
aaa
lock
mov
icebp
mov
push
popa
inc
sbb
pop
xchg
lods
xchg
push
aaa
stos
xchg
jnp
sbb
jo
push
stos
mov
in
nop
xor
or
push
add
dec
lock
push
lret
add
pop
pop
push
jmp
or
lock
icebp
out
cmove
stc
xchg
into
push
out
gs
adc
es
mov
mov
data16
add
pop
lods
sbbl
xchg
repnz
and
cmpsl
aad
aam
jge
pop
cmc
rcrb
fdivp
insl
pop
push
mov
add
lea
xor
pop
add
inc
je
push
test
push
pop
lea
xchg
push
out
js
jmp
sbb
out
hlt
into
std
subb
add
dec
xchg
dec
xchg
shr
ret
cld
popf
out
pop
out
rcl
cmp
rcrl
enter
bound
inc
addr16
push
pusha
adc
je
cmp
out
dec
xchg
push
sarl
jecxz
jo
mov
mov
insl
and
mov
fadd
and
mov
and
aad
adc
test
shl
gs
xchg
sbb
cwtl
test
xchg
add
push
ljmp
cmpsl
xor
xor
divb
stos
adc
das
das
test
pop
inc
mov
aam
pop
inc
into
adcb
cmp
pop
xchg
fs
or
sbb
es
mov
test
icebp
sbb
mov
in
fildl
movsl
jae
stos
xchg
sbb
movsl
push
adc
dec
gs
in
or
fs
cmpsl
or
out
bound
jl
jmp
xchg
fistps
push
pop
jmp
repz
rcr
mov
adc
xchg
test
movsl
arpl
push
cmp
mov
cmc
cmc
inc
lock
ljmp
jecxz
or
repz
mov
dec
inc
xchg
das
and
or
test
addb
icebp
cmc
sbb
xor
std
stos
cs
sub
push
xor
xchg
fs
and
sub
stc
ja
mov
lss
ja
out
jns
push
jp
fdivrs
cs
jb
call
and
popa
js
jb
orl
jae
cmp
jl
outsb
outsl
adc
xchg
jne
in
push
lcall
ret
loope
inc
xor
iret
pop
jnp
mov
fisttps
pusha
mov
mov
ja
inc
mov
jp
in
xchg
cmp
lret
dec
in
adc
cmc
xchg
jb
rcr
pop
add
in
std
imul
test
pop
sbb
test
js
mov
xchg
pop
int3
ja
push
xchg
jo
adc
in
lcall
test
dec
inc
dec
out
xor
popa
push
ror
add
jmp
sbb
test
xor
mov
pop
scas
out
pop
sub
xor
pop
push
add
push
push
xchg
loope
pop
pop
xchg
rclb
or
add
jne
xor
add
pop
jo
lods
pop
int
mov
mov
cwtl
subl
out
nop
iret
cltd
shll
jne
inc
pushf
sub
pop
pop
enter
add
fmull
lea
rcl
sub
add
xchg
call
inc
or
mov
cwtl
sub
aaa
rorb
adc
aas
or
shll
fisttpll
in
push
mov
xor
out
mov
rcll
mov
jbe
xchg
ret
and
or
sub
and
sub
inc
out
jno
dec
loopne
xchg
add
inc
leave
adc
pusha
pop
popa
mov
clc
adc
push
push
or
sub
jb
dec
arpl
cld
rcll
or
jle
and
cmp
push
arpl
testl
pop
fimuls
pusha
loope
xor
imul
shl
lds
inc
int3
and
imul
negl
jmp
xor
push
rcll
mov
jnp
mov
sbb
aad
out
lret
cmp
push
in
outsb
mov
incl
mov
mov
dec
sub
mov
xor
mov
cmp
scas
pop
call
jge
divl
and
fucomi
fistl
cmp
fs
aas
imul
mov
int
popf
mov
imul
xchg
sbb
insb
pop
push
test
push
pop
inc
adc
adc
xchg
sub
stos
xchg
outsl
mov
sarb
pop
xchg
pop
cwtl
jo
in
faddp
mov
push
rcll
bound
sti
stos
sar
mov
js
inc
xchg
xor
pop
enter
je
cwtl
mov
arpl
fstps
outsl
push
lods
and
lea
std
mov
push
sarl
cmp
mov
adc
shrb
stos
push
icebp
jg
cmp
ja
cltd
imulb
out
sub
int
fimull
daa
int3
xlat
fiaddl
movb
cmpsb
xor
or
in
jmp
cltd
dec
mov
imul
imul
imull
pop
inc
add
cmpsl
or
daa
inc
or
nop
sahf
add
inc
lcall
pop
push
sbb
enter
bound
leave
out
lahf
jae
imul
orb
punpckhbw
inc
lea
xchg
sbb
out
sub
bound
rclb
lret
push
and
aaa
jo
jl
mov
popa
mov
lcall
out
ljmp
push
add
repz
insl
dec
mov
jmp
jno
mov
mov
bound
insl
jmp
out
or
pop
adc
inc
jl
or
sub
mov
ss
lds
sub
lcall
jle
adc
mov
cmp
int3
and
jle
lea
loopne
in
xor
jl
lcall
ljmp
int3
hlt
xor
push
or
adc
sti
inc
dec
sub
clc
movsl
jl
imul
jmp
aaa
hlt
and
ret
jb
jle
xor
push
lds
std
or
je
mov
cmp
mov
mov
push
andl
inc
mov
push
push
fmull
xor
sbb
pop
dec
mov
sbb
icebp
imul
inc
xchg
add
dec
sbbb
sti
or
nop
sbb
or
mov
jge
cs
xor
inc
dec
lret
pop
mov
dec
mov
clc
pushl
fstpl
push
pop
or
subl
cpuid
int3
xor
into
nop
mov
lods
push
add
ja
test
xchg
and
mov
std
push
cmp
xor
jmp
mov
inc
lods
adc
lret
rcll
ss
cmp
mov
movsb
push
fisttpll
in
mov
sbb
ds
xchg
and
jnp
push
ss
cmp
ds
jo
jg
jno
int
mov
cli
mov
std
stos
dec
push
orb
fdivs
lods
cmc
sub
imul
int3
enter
shrb
dec
pmaxsw
dec
xor
cltd
mov
shlb
inc
sbb
sbb
lea
fsubrl
ja
movsb
test
sbb
imul
pop
stos
movsl
lahf
xor
pop
fists
das
xchg
out
fsubl
add
push
aas
mov
push
jo
jmp
xchg
xor
xchg
ja
cmpsl
outsb
inc
xor
xchg
jb
lret
es
push
es
and
lock
mov
xchg
das
stos
jg
loop
in
mov
js
clc
test
xor
popf
adc
inc
mov
les
xchg
outsl
lcall
popf
sub
arpl
daa
jmp
add
sub
gs
sarb
cmp
fscale
mov
mov
sbb
hlt
and
lea
and
fiadds
lret
mov
sub
movsb
add
movsb
fistl
mov
inc
adc
into
sbb
push
mov
test
pop
jmp
in
aad
mov
fildll
cmpl
mov
in
inc
add
mov
pop
add
scas
dec
xchg
adc
pop
cmp
mov
mov
enter
sbb
pop
mov
sub
mov
mov
jns
pop
vpshab
testb
pushf
sbb
lret
lea
xchg
xlat
call
mov
mov
inc
cmp
icebp
push
in
add
add
lea
inc
cli
mov
push
adc
mov
push
inc
cmc
cmp
sti
je
xchg
dec
push
and
cmp
ja
jecxz
lea
xor
aam
dec
test
cmp
push
mov
lcall
hlt
adc
xchg
cmp
incl
shl
les
neg
pusha
xchg
cwtl
pop
adc
adc
cwtl
mov
jns
lods
xor
loopne
inc
dec
and
adc
cltd
inc
cmc
mov
dec
xchg
cmpsl
stc
cli
bound
xchg
popa
dec
idiv
adc
shl
push
fucomp
jge
pushf
loop
sar
pusha
stc
aad
mov
in
lret
mov
mov
and
push
push
xor
mov
es
fsubrs
enter
stc
in
dec
mov
ret
push
dec
or
pop
hlt
out
inc
mov
xor
das
xor
shl
mov
cmp
inc
cwtl
pop
mov
into
pop
fimull
lret
mov
stc
iret
int3
pop
decl
ror
xor
ljmp
xlat
xchg
in
dec
or
shrl
fsubrl
mov
lock
and
mov
ds
sub
mov
js
lock
xorl
mov
xchg
adc
xchg
jae
call
and
push
jecxz
icebp
insb
js
push
loopne
mov
sub
push
cld
test
adc
aam
xchg
push
mov
adcb
mov
cltd
sub
cli
inc
adc
mov
jnp
loope
pop
push
push
jl
ret
push
mov
xor
fs
orb
popf
stos
push
aad
jnp
daa
jae
sbb
ja
sub
enter
sub
daa
push
repnz
sbb
add
inc
add
or
mov
out
xchg
das
out
int
lods
jmp
jne
daa
push
popa
shr
and
xchg
mov
dec
leave
jb
mov
cmpsb
in
insl
rorb
jp
mov
mov
cmp
dec
mov
shll
sub
and
xchg
cld
xchg
test
jb
fs
lret
adc
push
pop
idivl
lea
jp
lock
ds
jnp
adc
adc
mov
inc
or
es
pop
fdiv
xchg
gs
sbb
fdiv
dec
jae
cmp
jae
inc
inc
xor
or
les
inc
adc
mov
mov
mov
push
scas
jge
shll
je
sbb
jge
cmp
aad
xor
pop
int
mov
scas
std
mov
sbb
je
adc
cltd
push
imul
sbb
mov
das
add
add
sub
fisubrl
pop
addr16
das
aam
adc
push
xor
pusha
adc
sbb
mov
pop
push
sub
mov
sbb
pusha
idiv
stc
adc
cmp
mov
push
inc
out
lret
in
insl
jns
or
imul
and
jecxz
ja
rorb
bound
add
loop
jg
adcl
push
adc
sbb
outsl
mov
mov
cmpsb
int
push
xor
push
or
xorl
out
fxch
or
aaa
xor
imul
inc
dec
es
mov
stos
sub
out
mov
mov
add
daa
sar
add
jo
adc
icebp
mov
xlat
and
mov
push
pop
dec
insb
push
inc
das
out
xchg
imul
jmp
fs
push
cltd
int
inc
dec
pop
jb
push
jp
mov
lods
dec
arpl
jg
lcall
jle
cmp
into
mov
mov
add
scas
fs
jb
cmc
popf
test
sub
inc
stos
cmp
push
shlb
lahf
daa
sahf
fndisi(8087
xor
add
inc
dec
mov
leave
rcrl
in
subl
addl
xor
ret
gs
pop
push
shlb
cld
push
std
add
pop
or
sbb
sub
lahf
bound
fnstsw
mov
or
test
shll
imul
push
cmpsb
mov
mov
ss
xchg
and
arpl
add
filds
xchg
int
xchg
inc
dec
loop
aam
push
cmp
repz
idivb
ja
std
add
pop
sahf
cmp
andb
aaa
rclb
add
mov
push
testb
inc
call
jno
sbb
push
mov
fucomi
stc
push
xchg
adc
pop
jecxz
sahf
jb
fs
cmp
decl
inc
fisttps
in
lahf
das
adc
xchg
incl
pop
mov
sbb
sahf
in
jge
jg
pop
decl
mov
pop
testb
aaa
pop
call
ss
sbb
xchg
ss
pop
clc
in
jnp
cmp
fwait
rcl
daa
loope
movsb
jnp
dec
sub
push
out
xor
outsl
popf
xchg
dec
fucom
add
shll
shr
int3
sub
insb
sub
adc
jbe
movsl
sub
loope
insl
out
jp
loopne
daa
fnstsw
push
in
xor
loopne
mov
aam
xorb
clc
xchg
cld
pop
add
mov
sub
movsl
out
sub
inc
clc
add
je
sbb
push
popf
outsl
ds
movl
in
fld
xor
jp
inc
daa
add
sbb
xor
and
shl
mov
test
jo
cmpsl
xlat
adc
repz
push
fisubs
xor
adc
lahf
mov
pop
aad
in
subb
popf
cmp
addr16
mov
inc
jle
xor
mov
mov
push
pushf
jo
fistps
mov
push
lret
or
mov
xor
adc
scas
daa
shr
sub
dec
inc
xor
pusha
repz
filds
jl
ficoms
sub
bound
mov
xchg
mov
add
mov
xor
movsb
xchg
imul
xchg
jno
sbb
or
movsl
jp
inc
testl
inc
or
push
test
sbb
int
mov
sbb
xor
ljmp
sahf
lret
xor
pop
pop
jl
scas
xchg
iret
dec
cmp
popa
and
aas
mov
add
pop
jge
and
push
test
cwtl
push
sti
dec
pop
inc
sbb
pop
dec
sbb
clc
inc
cmp
push
mov
adcb
add
popf
dec
lcall
add
jle
je
stos
dec
sub
mov
out
add
stc
xor
pop
fbld
sub
aam
sbb
add
sbb
lea
fs
movsb
sbbl
or
int
inc
faddl
jle
fcomps
and
jg
cld
mov
xor
jmp
movsb
sbb
xlat
jns
xchg
outsb
clc
pop
test
sbb
popa
or
das
jmp
ja
pop
xor
imul
fwait
pop
xor
inc
push
test
addr16
push
mull
mov
stos
xor
jle
xlat
clc
cmc
mov
rcr
mov
cmpb
mov
leave
imul
xor
pop
mov
push
xorl
loop
lds
or
push
fildl
jnp
adc
xchg
pop
in
pop
adc
popf
xor
jmp
pop
add
sub
cwtl
push
fidivs
stc
dec
jecxz
jno
jg
add
je
adc
xor
sbb
stos
xchg
pop
aad
cld
xchg
mov
jecxz
mov
int3
jle
shl
lds
testl
rorb
je
and
jl
xor
add
pop
and
cmp
loope
pop
ja
sub
add
inc
mov
pushl
popf
mov
xchg
inc
jmp
lea
pop
fnsave
adc
repz
push
xlat
pop
add
in
leave
ljmp
les
xchg
adc
fidivrl
sar
and
test
pop
add
sub
jbe
bound
add
call
fimull
ds
add
and
loop
ret
xor
test
push
loop
aaa
xchg
inc
sbb
jmp
data16
sbbb
adc
push
sbb
test
ss
je
mov
adc
push
sbb
push
adc
add
out
mov
lcall
or
or
fs
push
int3
je
cltd
mov
or
xchg
push
imul
faddl
and
loop
or
fldl
sub
adcb
push
sbb
cmp
lds
stos
jae
xchg
jno
sarb
mov
adc
mov
cmpsl
cs
aam
mov
popf
push
leave
orl
out
imul
sbb
xchg
push
das
dec
mov
push
es
jecxz
outsb
mov
push
xchg
stc
adcb
enter
and
inc
sub
aas
dec
add
or
js
lea
lret
push
out
lret
jecxz
pop
dec
sub
mov
test
xor
xchg
repnz
or
rol
xor
sti
adc
xor
idivb
movsb
fidivrs
mov
cmp
and
adc
lret
and
bound
movsl
inc
lahf
jbe
je
cmpsb
pop
loopne
subl
pop
pop
cmp
addr16
repz
dec
rcl
mov
je
ljmp
icebp
jecxz
rorb
mov
sbb
xchg
lds
cltd
mov
mov
xor
sub
adc
jnp
imul
pop
in
jno
lea
popa
sbbb
mov
inc
sub
test
mov
xor
test
in
push
icebp
hlt
sub
cmp
int
movsl
jb
sarb
sarl
xchg
mov
or
adc
adc
mov
mov
and
idivl
daa
inc
dec
cld
sbb
push
sub
loopne
iret
subl
dec
test
ljmp
xor
mov
ss
xchg
imul
out
xor
xor
xchg
insb
fcmovb
push
xchg
scas
cwtl
sti
lock
push
jg
xchg
jl
imul
inc
push
xchg
mov
sti
inc
sub
or
iret
bound
stos
add
jbe
ljmp
lret
popa
cmp
and
daa
xchg
jbe
sub
push
mov
idivb
mov
sub
push
outsb
aam
sub
cmpsb
icebp
add
mov
mov
data16
lret
cmpsl
or
clc
xor
push
call
pop
packuswb
adc
xchg
pop
or
dec
or
inc
xchg
pop
jno
inc
clc
hlt
aaa
dec
movsl
push
outsl
pop
js
and
jg
pop
ret
sbb
mov
push
push
ss
adc
bound
inc
sub
and
mov
std
add
aaa
in
xchg
cli
push
lea
imul
push
repnz
les
push
xchg
jo
or
lcall
jae
jmp
ja
repz
push
test
repnz
popa
pop
add
lcall
jl
cmp
fisttpll
test
jl
js
loope
outsl
cli
add
pop
repnz
cmp
inc
pop
xor
ds
test
lret
rcrl
add
punpckldq
xchg
mov
cmp
sub
pop
les
fnstcw
fnstenv
daa
bound
dec
enter
out
inc
fbstp
mov
sub
push
cmp
aas
or
dec
add
sub
xchg
stc
stos
pop
sbb
int3
subw
sub
test
or
test
clc
fiaddl
movsb
mov
xchg
lahf
and
xchg
xor
cmpsl
cs
sub
std
sub
out
rcrb
jnp
shll
dec
sbb
pop
je
adc
leave
jns
rcrb
pop
int3
daa
cmp
lahf
add
imul
out
outsb
insb
flds
or
xchg
mov
mov
xor
loope
jnp
jo
pusha
adc
movsb
mov
add
jg
fisubrl
sub
and
mov
fistps
mov
cmpsl
roll
sti
xbegin
mov
xor
push
mov
je
mov
add
addr16
popa
aaa
mov
mov
mov
mov
sbb
pop
lahf
test
sub
push
aam
mov
and
xchg
iret
imul
inc
xlat
sti
sti
hlt
lock
and
ljmp
pop
jmp
ret
sahf
and
mov
pop
jp
fidivs
lahf
push
jmp
fimuls
add
les
mov
pop
and
cld
movsl
mov
arpl
movsb
inc
aaa
sub
scas
add
inc
lahf
xchg
inc
sbb
cmp
pop
adc
sub
sbb
jp
les
ret
dec
mov
jns
insb
sbb
pop
int3
lcall
push
jge
sahf
movsl
sarl
je
pop
mov
dec
adc
hlt
sbb
adc
int
pop
scas
sub
ffree
cmc
shll
pcmpgtb
lcall
mov
jne
daa
fstps
xchg
sarl
xor
loopne
xchg
xchg
outsb
icebp
adc
add
popa
cwtl
cmp
or
dec
mov
mov
stos
stos
ljmp
jae
and
pop
mov
fwait
shr
inc
push
shll
pop
mov
test
sbb
std
jns
call
adc
xlat
fcmovnu
rorb
pop
cltd
pushf
int3
cmpsl
addr16
add
push
inc
loopne
out
mov
lret
and
sbb
push
popa
dec
or
sbb
jns
andl
add
jg
jge
xor
mov
call
inc
mov
mov
movsl
ror
imul
jbe
call
sbbl
xchg
or
push
shll
es
xchg
jo
push
rcrb
aad
sahf
push
int3
or
dec
mov
and
insl
sub
push
aad
shlb
cmp
sub
shrl
sbb
push
nop
mov
xor
mov
cli
add
xchg
sub
and
xchg
mov
add
push
push
iret
test
fcmovne
sahf
jg
add
jl
ret
mov
fwait
clc
std
xchg
fdivs
dec
jbe
orb
add
mov
addr16
sub
imul
cmp
xor
cmp
mov
inc
mov
push
jecxz
xchg
mov
mov
fsts
push
dec
push
shrb
xor
mov
xchg
in
lret
aad
mov
xor
shrb
mov
pop
shlb
add
lods
stos
mov
sub
xor
push
pop
pop
jmp
mov
adc
jb
fsubp
push
add
xchg
mov
add
ljmp
adc
scas
jno
rclb
lock
sub
sti
xchg
pop
bound
int3
jge
pop
jl
loope
inc
dec
or
or
mov
insl
sbb
pop
xor
or
push
call
scas
shl
pop
test
inc
lcall
dec
mov
mov
shr
nop
sbb
mov
dec
xchg
mov
in
sbb
mov
dec
inc
ja
push
xor
cmp
inc
insb
push
cmpsb
dec
jl
jae
or
shl
mov
or
ret
lock
sbb
stos
stos
rcrl
imul
test
sti
xor
stc
add
clc
clc
pop
sbb
jns
lods
push
sbb
repnz
lods
cmp
inc
ret
pop
cld
cmp
mov
jns
aaa
ret
xor
jnp
or
xchg
shrb
jecxz
sub
push
cmp
or
repz
inc
aas
pop
jecxz
dec
xchg
aam
pop
sbb
stc
jb
add
pushf
pop
jnp
loope
aad
adc
pop
and
jns
xor
adc
dec
adc
movsl
mov
daa
je
xchg
mov
jmp
inc
push
mov
mov
mov
pusha
test
inc
nop
jle
xchg
clc
cmp
fwait
out
stos
popf
cmp
cs
sbb
out
pushf
or
jne
xchg
push
js
test
int
fldl
inc
pop
or
push
stc
jns
ss
cmp
mov
and
fildl
jecxz
dec
adc
xlat
sub
mov
out
mov
push
push
call
mov
xchg
addr16
sbb
clc
pop
int
shlb
push
lock
test
jle
sub
pop
xlat
mov
shll
pop
dec
fldenv
lds
jns
mov
arpl
sbb
pushf
leave
out
cmp
loop
sbb
stos
lds
cmp
pop
and
fstpt
stos
push
das
xlat
cmpsb
jg
clc
fstpl
mov
punpckhdq
cmp
and
bound
pop
ss
sbb
testl
mov
xchg
dec
inc
cwtl
mov
sub
push
aad
push
fldl
sub
inc
cs
imul
cwtl
pop
int3
xchg
cmp
shrl
sahf
scas
divb
in
push
loope
pop
mov
hlt
int
in
in
xchg
sub
repnz
bound
rcrb
sahf
dec
stc
and
les
in
setb
fwait
cmp
scas
xchg
lods
fimull
add
xchg
inc
leave
and
inc
sbb
mov
in
mov
add
leave
addb
rcl
sub
pop
xchg
mov
sub
es
outsb
fldpi
pop
popf
lcall
sbb
in
test
jno
cmp
movsb
sbb
pop
inc
out
xchg
into
jp
enter
daa
pop
xor
cs
push
cltd
test
dec
and
iret
ds
popa
aam
ss
in
inc
mov
inc
mov
mov
fwait
arpl
mov
dec
ds
out
inc
adc
pushf
pop
xchg
sub
mov
and
push
inc
push
push
lock
sub
rdmsr
cmp
mov
imul
mov
xchg
aaa
xchg
sarl
ds
mov
push
fcoml
push
adc
mov
ds
cmpb
das
aaa
xchg
pop
push
push
xlat
jne
loope
movsb
jl
iret
lea
mov
sub
cmp
pushf
test
das
std
nop
sahf
dec
or
adc
addb
clc
sub
ss
outsb
or
call
shl
mov
add
dec
sbb
repnz
imul
pop
mov
pop
testb
sbb
xchg
xchg
iret
inc
into
mull
add
cmpsb
or
jg
xor
cmp
imul
repz
insl
rcrb
fstps
lahf
cmp
push
aad
or
out
nop
data16
push
sub
xor
int
sysenter
outsb
mov
mov
dec
daa
xchg
rorl
pop
and
xchg
pop
jno
dec
rcrb
fldcw
int3
rcrb
negb
int3
bound
adc
mov
mov
add
xor
jge
mov
std
and
jnp
out
shl
cli
lahf
xor
sub
stc
hlt
hlt
addr16
push
jns
pop
or
pop
subb
jg
clc
leave
ljmp
lahf
or
push
mov
data16
and
mov
into
cmp
scas
add
insl
fstpt
das
in
fs
adc
jae
fisubrs
and
dec
js
dec
adc
inc
shl
or
mov
outsl
jge
test
cmpsb
add
dec
pusha
imul
inc
ss
cmovns
cwtl
popa
sub
lret
gs
movb
stos
mov
outsl
jo
xchg
fs
sub
jno
dec
data16
out
ja
out
and
xor
lds
xor
subb
fwait
rcll
adc
int
xchg
int3
xchg
jne
jae
sub
inc
dec
icebp
and
fcoms
sub
jb
jge
mov
aam
sbb
push
ffree
scas
outsb
sbb
sbb
xor
popa
ljmp
stos
dec
cmp
push
cmp
adc
ret
dec
xchg
rcrl
mov
add
ja
stos
fidivrl
pop
rcrl
inc
pop
xchg
adc
sbb
jmp
jo
jecxz
add
rorl
or
mov
jo
mov
xchg
les
rclb
sahf
inc
pop
xchg
adc
imul
fcompl
enter
xchg
push
pop
lahf
cwtl
lcall
lret
lahf
pop
push
andb
loop
arpl
faddl
push
dec
aas
cwtl
jno
mov
mov
push
mov
aaa
out
adc
ss
cmp
adc
cmp
and
jae
cld
jle
jg
sbb
fsubr
stos
rcrl
stc
add
jns
lret
cmc
add
fucomp
jge
push
test
xchg
sbbb
nop
cmp
negb
push
scas
enter
fdivs
aaa
aas
mov
shlb
adc
add
inc
sbb
jb
fsub
mov
xchg
or
jecxz
or
stos
xor
mov
in
xchg
es
icebp
sbb
sti
daa
lcall
sub
fnstenv
imul
inc
xor
pusha
scas
cwtl
jno
mov
dec
insl
repz
arpl
add
shl
inc
ret
cmp
jg
sbb
fnstsw
jge
cmpsl
jne
out
push
sub
pop
adc
mov
or
mov
cmp
jp
dec
cmp
push
cmpb
cwtl
in
out
shlb
or
dec
insl
adc
gs
les
pop
lds
dec
xor
ffreep
das
test
xlat
out
or
shlb
aas
movsl
inc
pop
push
dec
push
and
jno
outsl
cmpsb
test
mov
cld
jbe
cs
movsb
lahf
mov
or
pop
pop
dec
addr16
outsb
xorb
aaa
scas
je
cmp
cmc
pop
add
xor
mov
nop
cmp
out
ja
clc
sbb
in
jae
cmpsb
cmpb
lods
repz
in
je
js
aad
jnp
jl
idivl
ret
sti
xorb
icebp
dec
xor
and
test
pop
jno
jle
sarl
jo
ret
out
sbb
cmp
lock
dec
cwtl
mov
sub
sbb
jl
loop
mov
lcall
outsl
loope
notb
in
jecxz
and
and
sbb
sbb
scas
jge
mov
mov
scas
push
test
mov
fs
ret
xor
es
xchg
fidivl
insb
pushf
call
inc
xchg
stos
cmp
and
aam
and
xor
pop
popf
jbe
xchg
jmp
test
push
lods
out
mov
addr16
cwtl
je
xor
or
mov
stos
jb
lds
stos
inc
cmpsb
imul
push
insb
xchg
scas
xchg
sbb
test
andb
cwtl
mov
fistl
mov
imul
sbb
jb
loopne
iret
loopne
mov
es
repz
div
cmp
in
lods
lahf
jle
mov
mov
loope
jae
addr16
sub
jecxz
xchg
xchg
xor
jecxz
ss
subb
scas
sub
ret
cmc
mov
call
xchg
mov
clc
lods
daa
test
lret
xchg
test
adc
push
inc
and
mov
xchg
aad
cli
lahf
mov
sbb
fildl
pop
fwait
add
push
cmc
mov
inc
pop
dec
call
stos
mov
cs
leave
jbe
mov
and
stc
mov
lret
mov
bound
and
xchg
jecxz
push
in
fcoms
mov
mov
fisubrs
xor
sub
test
pop
sub
jp
mov
xchg
jg
fimull
cmp
stos
fisubl
adc
inc
inc
pusha
adc
xchg
loope
imul
dec
fidivrs
test
jecxz
jecxz
outsb
orb
iret
mov
ret
dec
push
mov
adc
jmp
push
repnz
sbb
test
adc
adc
shll
push
fists
jp
pop
sbb
adc
stos
ljmp
stos
mov
and
push
mov
imul
ret
popa
sbb
shr
lods
into
mov
fxch
add
arpl
mov
addr16
sub
jb
jb
out
in
aaa
mov
dec
movsl
xchg
sbb
loope
or
in
push
mov
sbb
cmpsb
and
aam
testl
pop
insb
addr16
mov
scas
jmp
das
pushf
push
ret
vandnps
mov
and
les
sub
adc
shrl
jns
cli
scas
dec
cmpsl
xchg
bound
mov
fsubrs
aaa
and
inc
int
lods
fistpl
mov
cmpsl
xor
jnp
std
out
jecxz
and
pop
out
out
mov
push
aad
cwtl
xchg
sbb
pop
dec
stos
sbb
push
pop
bound
push
mov
push
fwait
mov
or
mov
cmp
lret
sarb
shll
sbb
pop
ss
dec
xor
fs
sbb
xor
mov
mov
xor
fs
lret
mov
in
in
test
leave
daa
pusha
xchg
sub
or
mov
xchg
sbb
imul
push
pop
lods
mov
test
inc
pop
lret
movsb
mov
btr
out
jae
lods
pop
test
test
pusha
jecxz
cmpsl
sub
fs
and
xchg
jno
enter
inc
out
das
icebp
cmp
aad
xor
sub
sub
cmp
push
mov
popf
je
xor
mov
sbb
addr16
lods
imul
fcompl
out
aam
cmc
inc
cmovle
sahf
jmp
and
mov
adc
sbb
out
push
aad
xor
fmull
mov
mov
mov
cmp
outsl
xchg
xchg
ds
inc
cmp
call
inc
mov
add
or
inc
dec
sti
data16
mov
ret
sub
mov
icebp
lds
js
xchg
adc
or
add
mov
test
mov
imulb
xchg
loope
enter
jo
push
mov
push
shlb
mov
lcall
pop
adc
sub
sbb
mov
lret
sub
fwait
mov
test
in
dec
pop
iret
lahf
data16
sarl
inc
lds
xor
pusha
das
mov
lods
or
push
jge
ret
sbbl
sub
gs
inc
inc
push
lods
fsubrl
mov
divl
daa
test
jnp
clc
lret
leave
and
inc
and
add
mov
lea
jmp
dec
mov
std
mov
xlat
lcall
mov
gs
into
mov
inc
enter
xor
insb
dec
lods
xchg
fwait
sahf
sbb
lcall
jbe
push
or
arpl
sub
outsl
sub
dec
lods
shrl
adc
test
pop
mov
xorl
int
lods
cmp
outsl
mov
jae
lea
dec
mov
and
mov
xchg
add
push
imul
cwtl
mov
jne
xchg
adc
or
cmp
dec
aaa
test
sar
fnstenv
icebp
xor
cmp
out
ret
add
mov
inc
inc
push
pop
int
rcl
inc
mov
push
xchg
stos
pop
jle
test
aas
xchg
dec
xchg
movsb
outsb
push
test
xlat
xchg
or
or
or
cmp
mov
jle
pop
jl
stos
xchg
idiv
dec
sar
sbb
adc
fdiv
sarl
pop
pusha
lock
int
inc
sbb
mov
jbe
jle
fucom
sbb
xchg
dec
pop
les
cmc
int
push
mov
and
sti
lret
aaa
lahf
adc
cmc
sahf
ss
push
rolb
loopne
adc
dec
adc
jp
ret
leave
add
loope
fistpl
push
fwait
out
insl
fistpll
jb
addr16
test
xchg
jne
jne
jl
and
jmp
mov
sbb
outsb
mov
dec
push
lcall
aaa
verr
repnz
testb
push
xchg
sbb
lds
jne
lret
pop
gs
mov
cmpsb
xor
jb
ds
cmp
leave
adc
cmp
and
daa
ret
lock
push
xor
out
lcall
mov
add
cmpsl
hlt
dec
test
xchg
movsb
mov
xor
popf
mov
pop
iret
sub
push
or
mov
popa
xor
xor
lcall
and
int3
mov
aaa
or
jge
mov
incb
fsubs
clc
inc
dec
adc
test
and
mov
xchg
pusha
inc
jae
pop
xchg
and
push
in
xor
adc
mov
mov
and
rcrb
das
cmp
mov
lods
jecxz
push
mov
lods
and
aam
insl
cmpsl
cmp
fucomp
shr
mov
fs
fpatan
test
rol
test
push
shlb
test
test
sub
mov
sti
mov
in
add
jecxz
push
enter
xchg
add
push
cmp
xlat
shlb
inc
in
inc
in
mov
cld
test
xchg
test
or
mov
mov
filds
inc
xchg
cld
setno
iret
cmp
jbe
mov
jl
push
bound
cs
bound
mul
nop
stos
iret
mov
sbb
dec
int3
adcb
mov
addr16
gs
cmc
pop
mov
mov
stc
dec
sub
test
fs
xor
std
into
sub
ja
es
adc
idivb
hlt
pop
out
outsl
pop
ljmp
pop
loop
cmpsb
mov
adc
cwtl
or
cli
mov
das
ja
orb
mov
ss
mulb
in
enter
cmp
loopne
cmp
cs
push
cmp
push
add
daa
adc
and
vmulps
insl
and
xchg
das
dec
pop
repnz
pop
pop
and
aas
jmp
and
mov
add
cmp
mov
daa
dec
or
arpl
fimuls
dec
addl
and
push
ja
outsl
mov
xchg
stc
add
dec
subl
pop
sub
call
dec
mov
stc
jnp
push
jb
or
dec
aam
mov
adc
inc
fwait
mov
test
sbb
mov
sbb
inc
out
lret
and
js
mov
mov
fdiv
ljmp
push
addr16
cwtl
call
es
xor
add
in
cmp
sbb
jp
xlat
sbb
ja
insb
cli
cmp
in
insl
jns
jne
lcall
mov
outsb
bound
jb
jno
popf
in
sub
int
jno
lds
outsl
adc
inc
and
movsl
insb
jge
push
add
pop
lcall
or
orl
jge
sub
gs
jns
imul
jp
or
mov
inc
xlat
xchg
jae
jle
inc
jg
mov
in
xor
jb
xor
xchg
mov
cmp
mov
cmp
rcll
pop
mov
arpl
sbb
xchg
rclb
call
call
ret
jbe
ljmp
lret
loopne
jecxz
enter
push
cmp
mov
xchg
in
pop
into
push
aas
xchg
push
shll
lahf
or
sbb
push
push
mov
lret
dec
mov
int
icebp
and
les
mov
mov
xchg
dec
xchg
xchg
scas
adc
jo
jg
sbb
gs
jnp
cli
fidivrs
enter
lds
inc
daa
dec
sbb
int3
push
or
ds
inc
ret
sbb
push
nop
mov
xchg
jmp
jo
addr16
int
les
jp
inc
shr
adc
xor
mov
push
mov
gs
add
dec
mov
int3
add
cmp
xchg
jbe
subl
aam
jge
push
mov
pop
leave
jl
adc
loopne
inc
lods
aam
xchg
mov
and
lcall
and
daa
test
jp
aam
int3
xlat
jl
imul
out
mov
push
out
sarl
and
out
fistl
lea
rcrb
jns
sbb
jge
inc
cmpsl
jb
and
xchg
or
in
das
imul
movsl
and
jg
addr16
push
xchg
mulb
and
push
cmp
jmp
mov
pushf
std
sub
mov
in
out
xchg
jnp
jg
enter
mov
nop
inc
inc
cmp
arpl
mov
imul
shrb
arpl
push
cmc
jmp
out
ljmp
shlb
adc
push
mov
xchg
dec
incb
outsb
pop
pop
test
das
call
shlb
cmp
jl
xchg
sbb
mov
xchg
push
cmpb
insb
mov
in
das
lcall
cmp
mov
bound
pop
jecxz
inc
add
js
nop
mov
or
test
rclb
popf
mov
test
in
jle
xchg
lods
jnp
push
pop
lea
iret
pop
jg
fs
bound
jno
mov
dec
mov
popf
lds
insb
mov
mov
lea
aad
int
pop
pop
adc
or
dec
pop
add
mov
mov
adc
push
inc
push
xchg
xor
push
mov
out
int3
jb
add
pop
subb
aas
lds
mov
pop
sub
pop
lock
mov
sub
stos
dec
mov
xor
and
mov
ljmp
xchg
into
lret
jae
and
inc
repnz
inc
ds
lret
or
into
inc
add
jbe
xchg
jp
pushf
mov
loopne
lock
mov
test
mov
jge
sub
jmp
ficoml
pop
arpl
cmp
dec
sub
xchg
mov
rorl
push
cmpsb
shll
mov
cmpsb
xchg
sub
and
test
jb
mov
add
push
pushf
cmp
push
fwait
push
or
and
or
push
arpl
mov
lock
xchg
xlat
scas
in
aad
inc
jnp
in
or
jb
out
divb
inc
dec
jne
add
popf
popf
jo
dec
sub
call
jecxz
call
jne
ss
pop
or
iret
mov
ss
or
xchg
mov
call
cmp
mov
js
or
pop
dec
mov
fldenv
sbb
jmp
xor
or
mov
in
retw
out
jp
cmpsb
insb
mov
inc
mov
sarl
insb
jecxz
xlat
inc
sub
dec
cmp
xor
inc
ret
lea
imul
sbb
add
pop
sahf
fists
xlat
insb
push
mov
ret
les
ja
jb
or
cmc
clc
fdivs
push
xchg
lret
std
scas
les
sub
add
mov
push
in
jg
sub
or
mov
add
imul
insb
sbb
or
sub
xchg
cmp
xchg
pop
movsl
cmp
aaa
ds
dec
data16
call
lcall
addl
xlat
cmp
adc
enter
sahf
sbb
or
fs
sarl
push
scas
cmp
jle
add
pop
aad
addr16
sbb
loopne
or
adc
iret
insb
jge
push
ja
rcr
dec
mov
push
pop
mov
xchg
sti
xor
les
add
adc
or
xlat
adc
ret
ss
nop
fwait
sub
jbe
or
cmp
out
imul
bound
dec
jmp
and
add
pop
or
ror
cltd
add
lods
out
enter
outsl
scas
ds
xor
dec
push
or
fwait
in
insl
push
jb
idivl
xchg
mov
testb
jmp
mov
repnz
and
mov
mov
pushl
out
and
mov
ja
arpl
add
aas
xchg
lods
call
les
xchg
sbb
or
mov
push
test
sub
mov
pop
sti
imul
std
pop
icebp
sbb
hlt
pop
test
test
test
mov
xchg
xlat
add
fisttps
dec
push
in
dec
push
inc
dec
lock
inc
jg
fs
ljmp
inc
fwait
and
dec
cld
push
imul
xchg
jb
popa
fstps
jp
mov
push
mov
pop
lcall
loopne
test
pop
lds
lea
jns
push
push
ret
adc
mov
push
mov
cmpsl
add
push
mov
or
adc
imul
mov
dec
cmpsb
out
or
mov
cs
cmp
loope
xor
dec
jp
dec
pop
mov
or
insl
adc
xchg
into
fisubs
sti
das
sbb
push
divl
cwtl
loope
aaa
ret
lcall
inc
pop
test
inc
pop
mov
ds
xchg
sbbb
in
jg,pt
insb
pop
cmc
inc
mov
loopne
sbb
or
jo
in
push
rcr
cli
mov
subl
add
aam
loope
in
aas
xor
incl
shlb
jo
aas
inc
imul
jecxz
mov
mov
rorb
xchg
jmp
sbb
into
je
dec
mov
lock
sti
and
loope
movl
cmpsl
cltd
xor
cltd
je
in
push
addl
jecxz
testb
mov
adcl
adc
pushf
inc
xchg
xchg
xchg
cmp
lods
xchg
dec
lcall
fsubl
jecxz
inc
push
jo
je
mov
outsb
scas
es
in
push
or
jl
cltd
inc
int3
mov
stc
loope
fwait
or
int
push
push
repnz
aas
aaa
sbb
or
xchg
out
inc
mov
mov
and
stc
jl
push
pop
in
cmp
xor
ljmp
mov
iret
fiadds
mov
movsb
ss
scas
out
fidivs
dec
xchg
dec
pop
mov
or
fistpl
pop
sub
sub
sbbl
movsb
dec
rorl
inc
inc
cmpsl
aas
jecxz
into
aas
inc
jae
sub
jmp
inc
in
nop
std
fs
lahf
xchg
jp
dec
and
cmpsl
cwtl
subb
std
inc
mov
mov
repz
pop
adc
xor
repnz
inc
mov
int3
pusha
jle
dec
xor
pop
lds
inc
rcll
popf
adc
mov
out
shrl
hlt
jp
outsl
fs
fadd
adc
lret
pushf
inc
emms
fisubs
pop
inc
xor
out
fbstp
pop
enter
xor
fstl
cmpsl
push
dec
addl
out
pop
mov
sahf
or
jbe
or
cmp
cs
adc
push
mov
pop
dec
add
call
lods
in
dec
jnp
dec
pop
adcl
aaa
and
dec
jle
cmp
es
movsl
test
lock
movsb
cmp
lds
test
fisubl
imul
pop
inc
icebp
ss
add
dec
xorb
add
fsubrl
shll
jp
cs
insb
xchg
lods
outsl
inc
out
lds
out
nop
dec
inc
scas
pop
sub
inc
adc
or
mov
addb
cld
cmpsb
sbbl
pop
in
mov
adc
clc
xor
arpl
or
stos
fwait
pop
fstpl
dec
fsubr
xor
jb
xchg
adc
add
lock
lcall
jge
push
push
cmp
dec
jno
mov
mov
das
gs
daa
and
imul
cltd
sar
stos
cs
test
xchg
cmp
add
ror
int3
jo
cmc
pop
mov
inc
shl
es
lods
cmp
inc
lods
cmp
gs
xlat
inc
insl
xchg
cltd
cmpsl
or
jg
iret
sub
pusha
out
xchg
xor
out
add
mov
xor
push
lods
cld
mov
cmpsl
and
data16
into
aaa
cltd
dec
lcall
pop
enter
ljmp
mov
inc
ljmp
dec
out
pop
push
outsb
jle
data16
sub
mov
into
ret
mov
mov
or
xchg
inc
mov
mov
push
imul
test
cli
fucomi
dec
fisttpl
xor
pop
ja
or
int3
and
out
jno
add
sub
jl
mov
cmp
jmp
cmp
orb
pop
paddq
movsl
icebp
aas
orl
out
push
xchg
hlt
ret
outsl
or
push
dec
push
loop
cmp
sub
add
js
jge
push
or
les
scas
mov
dec
repz
loope
cmpsl
jne
pop
mov
pushf
mov
xchg
cwtl
into
scas
mov
dec
rol
cltd
pop
loop
cmp
xchg
mov
es
lods
push
jnp
loope
mov
adc
ret
hlt
adc
pop
and
jo
aam
push
loope
rcrb
mov
adcb
mov
push
filds
gs
push
sarb
pushw
das
and
icebp
cltd
pop
mov
cmp
sub
pusha
sbb
in
shll
popa
pop
mov
jns
and
inc
in
adc
sti
xchg
ret
mov
dec
xor
jo
cmpl
mov
lret
inc
test
cwtl
cmp
mov
jl
arpl
mov
in
mov
movsb
sahf
imul
sahf
iret
pop
dec
adc
sub
mov
shrb
mov
stc
cwtl
or
cmp
testb
mov
inc
xchg
mov
aam
les
ja
mov
out
je
fsubrp
mov
adc
inc
or
add
jno
and
inc
pop
and
xchg
adc
lret
sub
inc
push
xor
cmpsl
repz
mov
addr16
mov
out
xchg
enter
ret
push
sbbl
lock
or
jnp
pop
push
pop
int
popf
lret
and
scas
es
adc
inc
xlat
nop
push
int
outsb
sbb
bound
das
test
jp
pop
fdivl
mov
lock
popf
inc
adc
mov
roll
xor
inc
call
pop
mov
mov
pop
loop
add
xor
jmp
pop
repz
movb
push
jo
and
shrb
jno
inc
and
mov
movsl
add
mov
imull
add
aam
dec
adc
pop
pop
or
ss
stc
inc
test
cmp
jg
mov
sbb
mov
inc
aam
test
dec
repz
dec
mov
or
mov
aam
or
stos
xchg
scas
imul
add
add
inc
mov
sbb
lea
mov
cmp
aam
mov
in
andl
sbb
and
xlat
inc
lcall
and
sbb
test
icebp
enter
adc
roll
mov
mov
dec
lods
or
xchg
xor
adc
jecxz
jge
xchg
shrl
lods
ljmp
bound
sub
mov
and
inc
and
scas
enter
cmp
push
mov
stos
xlat
lods
loop
mov
popa
inc
mov
jp
pop
ret
mov
fucomip
aas
sbb
popa
pop
ret
pusha
aam
imul
push
in
pop
inc
jp
pop
cmpb
out
cld
gs
hlt
dec
xor
dec
ret
sbb
ds
scas
bound
nop
dec
das
popa
sbb
sub
inc
add
add
dec
sbb
push
adc
xchg
and
jmp
loope
cld
inc
xchg
xchg
or
clc
enter
jmp
add
ret
aad
adc
imul
and
jnp
adc
sbb
or
or
dec
stos
cld
aaa
leave
fs
pop
inc
xchg
lret
je
cld
stc
cmp
cwtl
fucomp
int3
mov
cmpsb
je
or
rcr
and
cs
mov
xor
jo
jnp
mov
and
inc
stos
in
push
mov
insb
lret
mov
jp
mov
nop
in
xchg
mov
adc
repnz
aam
fadds
pop
dec
cltd
daa
cmp
push
push
aas
pop
repnz
xchg
push
repz
stos
aad
sub
jp
popa
inc
jecxz
adc
mov
fiaddl
fsubrl
and
mov
push
pop
xchg
adc
jnp
fisubl
push
adc
push
imul
jb
jmp
fs
sbb
jmp
lock
lahf
and
das
ret
neg
jae
pop
add
scas
inc
mov
mov
addb
iret
pop
stc
leave
fs
push
jno
je
lcall
mov
mov
cwtl
mov
cmp
sub
hlt
lret
jle
dec
les
mov
das
lods
outsl
adc
aam
movsl
mov
mov
cmp
lcall
dec
daa
stos
ds
push
sub
negb
sub
sbb
mov
std
mov
dec
pop
ss
fmull
xor
jecxz
mov
inc
mov
add
mov
in
outsl
mov
adc
inc
into
xor
jp
mov
push
ja
or
fisubl
mov
scas
cltd
loope
repnz
pop
inc
imul
cmp
push
sbb
jns
inc
xor
push
cmp
cwtl
push
dec
repnz
lret
push
movsb
ds
lcall
jg
aas
dec
outsl
mov
cmp
repnz
les
add
jle
xor
imul
jno
adc
mov
inc
int
pop
mov
sub
fldt
imul
or
int3
clc
rcrb
loop
xchg
sbb
out
sub
xchg
jecxz
fsubrs
fs
sub
mov
lahf
add
xchg
or
nop
leave
or
sub
jl
push
icebp
pop
mov
push
push
es
mov
mov
cmp
dec
and
jge
dec
or
fmull
mov
dec
xor
sbb
arpl
mov
inc
out
fisubrs
and
jp
fsubrl
lret
add
cmc
push
mov
cmp
cs
or
jg
mov
push
mov
adc
fiaddl
dec
pop
mov
dec
jns
push
movsb
stos
mov
sub
push
movsl
call
stos
sub
in
insl
out
push
mov
int3
aam
or
jo
push
clc
sahf
gs
movsl
mov
jge
js
rolb
enter
inc
xor
jne
sahf
sbb
imul
mov
bound
mov
mov
mov
imul
stos
add
lcall
xchg
mov
negb
cltd
call
push
out
inc
jmp
dec
or
and
mov
mov
pop
scas
jno
cld
cmp
clc
stos
lea
dec
dec
mov
repz
outsl
pop
and
and
cmp
lock
in
mov
inc
loope
scas
cli
arpl
xchg
mov
int
mov
imul
ljmp
mov
test
outsb
pop
inc
lea
cmpsl
jle
xlat
int3
js
stos
dec
dec
jnp
std
sti
movsl
pusha
inc
sbb
sub
dec
inc
pop
pop
xor
xor
cli
into
mov
insl
mov
out
push
loope
pop
shl
daa
mov
cs
dec
data16
mov
aaa
ss
fbld
xchg
sbbl
shrl
xchg
pop
leave
sbb
ljmp
lds
test
cmpsb
test
xchg
scas
push
push
int
sub
inc
sbb
sbb
adc
xor
dec
pop
jmp
je
xchg
mov
push
pop
push
xchg
movsl
cmp
enter
dec
add
mov
cmc
pop
cltd
insb
lods
mov
push
cmpsl
ret
jae
push
push
daa
add
mov
jmpw
xchg
ljmp
fdivrs
inc
cwtl
fldt
fldt
push
mov
adc
push
dec
push
fsubp
loopne
popa
pop
dec
lret
inc
icebp
inc
ss
dec
mov
xlat
sbb
aam
inc
cmp
hlt
adc
ret
dec
daa
shl
enter
sbb
idivb
push
insb
es
aas
out
add
xor
pop
sbb
mov
and
test
loop
lea
push
cli
mov
jno
in
jg
add
inc
inc
dec
inc
pop
pop
pop
lods
mov
cmc
or
mov
push
stc
out
cmp
sbbb
decl
sub
data16
popl
in
mov
shl
cltd
repnz
xor
dec
aam
cmp
push
xchg
jge
dec
fiadds
jnp
jmp
lea
clc
call
ret
scas
jecxz
ja
aam
cs
out
jecxz
fisttpll
cmp
sbb
out
xor
ret
pop
lahf
mov
and
inc
and
xchg
test
sbb
inc
inc
test
mov
cs
cli
xchg
mov
jp
std
cmp
push
push
sbbb
sbb
ljmp
xchg
and
test
sbb
mov
dec
daa
push
pop
pop
fnstsw
mov
dec
test
out
push
aad
rcrl
push
push
push
arpl
inc
push
pusha
inc
ss
aaa
push
ljmp
cmpsb
insb
rcrl
adc
add
lret
adc
or
xchg
inc
loopne
dec
rcrl
sarl
fnsave
or
pushf
popw
rcrl
xchg
and
xor
jne
arpl
das
or
lcall
lret
dec
dec
jg
pop
pusha
adc
sbb
dec
fwait
or
arpl
js
pop
shrl
mov
xor
movsl
xchg
sub
fdivr
insb
test
cmpsl
out
cltd
add
mov
dec
std
mov
out
test
pop
clc
out
into
add
scas
and
inc
xor
dec
flds
xchg
mov
call
xchg
lret
xchg
pop
sar
push
adc
pop
sub
lcall
testb
popf
clc
roll
aas
sub
add
add
xchg
sub
ret
push
icebp
fistpll
aam
mov
shl
call
hlt
ljmp
cwtl
push
aas
mov
es
push
stc
jl
fsts
inc
std
adc
fimull
fdivrs
popa
xor
insb
mov
ss
cmp
outsl
insb
addr16
addb
adc
popa
xlat
repz
push
mov
sbb
mov
jno
or
inc
out
xor
jp
dec
sbbl
rorl
lahf
aam
sbb
repnz
int3
out
into
dec
pop
fidivrs
xchg
pop
test
fnsave
or
lds
pop
fs
sbb
mov
fwait
scas
add
out
mov
mov
adc
and
dec
xlat
shl
rcr
jg
sub
cmp
loop
cmp
adc
rorl
fsubrs
inc
outsb
sarb
or
pop
mov
mov
dec
decb
cmp
mov
jno
aaa
imul
inc
inc
ret
aas
daa
dec
jl
mov
jg
stc
lahf
or
or
pop
sbb
mov
out
xchg
pop
mov
out
cmpsb
andl
movsb
gs
fidivl
sub
pop
mov
shrl
ret
hlt
xor
mov
jns,pt
fdivl
mov
cmp
ljmp
subl
xlat
je
addb
push
sbb
and
xlat
jmp
lds
push
push
dec
orb
fsubrp
mov
outsb
ss
jecxz
or
shlb
stc
jmp
icebp
fucom
ja
aam
mov
cltd
jno
mov
jno
xchg
sahf
ret
lock
imull
pop
pop
mov
jo
sub
jmp
out
out
in
mov
mov
popf
add
sub
nop
imul
sbb
xchg
pop
dec
adc
and
xchg
inc
cmp
cwtl
shll
cmpsl
inc
pop
rcll
ja
je
mov
jmp
aaa
mov
mov
pusha
add
xchg
cwtl
aad
mov
cmp
inc
fbstp
jae
xchg
jp
pop
pop
lods
sbb
outsl
stos
pop
test
jge
inc
add
ljmp
je
fidivrs
push
mov
mov
pop
mov
mov
mov
push
cwtl
xchg
lea
arpl
push
sub
fldcw
and
add
pop
and
mov
ja
dec
lret
mov
add
jae
ds
int3
enter
pop
mov
push
add
in
fisubrl
mov
subb
jl
push
fdivrp
mov
shrl
xlat
gs
sub
sbb
fiadds
call
mov
hlt
sub
aas
push
xor
imul
xor
dec
rcll
jbe
aaa
fildll
cltd
adc
cmc
cs
mov
fs
inc
xchg
cs
mov
shll
test
stos
push
push
mov
mov
int3
fadds
test
jbe
rcll
shlb
test
test
rcrl
stc
into
mov
mov
adc
sbb
mov
jg
sub
jmp
mov
aas
add
test
adc
pop
xchg
jne
sub
out
pop
jns
xchg
mov
scas
mov
test
sub
push
sub
popa
popa
pop
inc
lret
cmp
jecxz,pt
dec
mov
inc
dec
imul
xorb
movsb
in
iret
jnp
mov
add
int
sbb
cmp
mov
mov
sub
xchg
pop
jl
jp
dec
inc
clc
cmp
sahf
gs
aas
dec
cmpsl
sbb
cmp
iret
or
lahf
jb
jno
fistps
adc
adc
shl
jns
mov
loope
cltd
pop
pop
push
jecxz
lea
push
dec
cld
add
jg
out
cmpb
and
insb
int3
addb
ds
sub
lahf
jno
dec
fwait
rorl
sub
mov
sbb
std
popf
and
int3
jb
movl
and
cltd
insb
movlps
jge
aad
dec
fcomps
inc
rorb
iret
ret
aas
in
sbb
mov
test
push
jle
aas
pushf
and
mov
xor
std
mov
test
in
sbb
lret
ljmp
push
xchg
jmp
loope
hlt
xchg
xchg
les
inc
ds
pushw
mov
mov
mov
mov
cmp
adc
nop
out
sbb
lret
clc
shrb
les
popf
jae
hlt
lret
sub
mov
imul
jecxz
dec
in
cmp
popf
jne
pop
cmp
dec
clc
out
js
jb
pushf
pop
inc
and
sub
xchg
mov
test
sarb
iret
xor
jo
sub
dec
cmp
cli
pop
cmp
dec
repz
mov
xchg
ss
out
lods
insb
fiadds
dec
inc
jae
je
clc
stc
mov
into
andl
in
pop
sub
mov
fldlg2
add
in
jo
divb
sub
gs
or
xor
xor
les
mov
sbbl
ror
ficoml
jge
sbb
xchg
jmp
mov
cmp
push
sbb
aam
push
mov
pushf
enter
push
pushf
jg
imul
bnd
leave
and
push
mov
cmp
clc
mov
pop
test
cmp
and
ljmp
xor
loop
inc
pop
push
bound
or
sub
fildl
add
and
mov
shl
dec
adc
iret
sarl
dec
in
mov
jns
sahf
inc
inc
and
aaa
xchg
sbb
add
and
cmp
mov
repz
ljmp
clc
lock
inc
inc
sub
insb
pop
aad
rcrb
daa
sub
push
out
test
popa
stc
shrl
arpl
add
mov
sub
mov
outsl
dec
cmpsl
scas
in
or
bound
sub
xchg
daa
or
mov
cmp
sbb
lcall
leave
pop
jae
stos
mov
lods
mov
test
scas
pop
push
aas
push
pop
jnp
xchg
lods
xor
popf
and
mov
mov
sahf
mov
inc
inc
rcrl
rcrl
insl
fs
je
pop
mulb
nop
push
add
mov
lds
inc
out
sahf
add
mov
add
push
xchg
jmp
aad
cmp
fmuls
cmp
dec
push
enter
jmp
icebp
mov
mov
jmp
add
aas
xor
imul
ja
aas
xchg
mov
dec
jae
mov
lods
out
lahf
mov
jne
cli
pushf
ljmp
aaa
loop
icebp
lret
decb
imul
mov
cmpsb
adc
in
imul
add
dec
lahf
jecxz
fiaddl
xchg
rclb
leave
mov
xor
jns
xchg
mov
xchg
dec
xor
xchg
inc
mov
rolb
push
mov
pop
sti
mov
decb
insb
lahf
loopne
push
outsl
call
pop
repnz
pop
and
test
inc
add
adc
pushf
test
mov
dec
fsts
mov
push
jns
cmp
lcall
mov
inc
rcrb
gs
mov
push
sti
dec
adc
scas
push
es
fwait
lahf
jnp
dec
mov
les
cmpsl
cmp
in
push
test
fildl
mov
in
aad
xor
adc
shrl
cld
mov
nop
pusha
adc
or
test
cmp
outsl
jns
inc
int3
cmp
push
or
add
and
mov
out
sub
daa
fimuls
adc
out
ds
icebp
or
xchg
stos
or
ret
into
pushf
mov
fcoml
rorb
inc
xchg
repz
inc
pop
bound
je
adc
xchg
ljmp
aaa
shrl
mov
pop
les
xor
inc
fsubs
arpl
imul
in
jge
gs
aaa
xchg
push
push
pusha
shrb
xchg
mov
popa
jg
adc
mov
imul
sub
pop
outsb
in
mov
add
lret
ds
add
and
addr16
dec
push
stc
ds
cmpsb
pushf
sbb
daa
xchg
dec
mov
pusha
pusha
sbb
mov
ss
out
cmc
pop
loopne
mov
arpl
xchg
cmp
sub
adc
mov
or
pop
mov
in
push
jmp
test
lahf
rorb
aad
sub
aas
or
cmp
std
scas
mov
rcrb
lock
or
imul
push
cmpsb
jecxz,pn
mov
adc
loop
xor
lea
cmc
mov
xor
inc
mov
push
xor
pop
mov
adc
nop
cmp
jne
es
sbb
sub
jge
das
popa
inc
pop
mov
adc
or
mov
push
jae
mov
pop
xor
dec
sbb
push
xor
pop
movsl
les
inc
fisubs
lcall
bound
push
fcomp
xchg
test
pop
cmc
scas
shl
out
pop
add
push
mov
test
leave
sbb
push
xchg
dec
stc
call
js
or
call
jns
aaa
jge
and
and
dec
jae
lcall
dec
mov
imul
push
jnp
mov
popa
sbb
popf
mov
roll
add
fcoms
popa
jl
decb
pop
mov
jg
xchg
mov
cmp
add
shrl
jnp
cmp
loopne
fiaddl
jmp
cmp
adc
dec
negl
or
mul
cld
sub
call
cmp
or
push
sti
sub
les
jb
pop
sub
mov
inc
adc
mov
mov
push
mov
aaa
add
mov
mov
icebp
sbb
inc
dec
fldcw
push
aam
loopne
int
mov
mov
gs
and
dec
notl
or
mov
lods
or
leave
jne
repz
dec
add
je
popf
les
movsb
push
inc
adc
xor
inc
xchg
out
loope
push
sub
mov
cmp
pop
xchg
cli
data16
lret
insb
loop
and
sbb
loope
fistl
mov
scas
out
pop
xchg
add
cmp
das
fisttpll
dec
xchg
mov
mov
mov
pushf
into
iret
mov
push
pop
int
adc
movsl
mov
pop
jb
jmp
test
push
je
int
xchg
jmp
cmp
rcrl
sbb
jo
dec
jle
mov
loope
fs
pop
popf
and
addb
pop
cmp
aaa
ret
pop
js
push
mov
cmp
push
xchg
das
adc
cmc
mov
xor
lds
xchg
pop
or
loop
dec
inc
mov
push
enter
jle
add
adc
push
jb
dec
repnz
ret
cmp
or
stc
test
adc
dec
aaa
loope
and
ljmp
push
cmc
ret
cli
lahf
cltd
sbb
mov
mov
push
es
cmpsb
shll
scas
fwait
mov
sub
popa
mov
insl
inc
mov
xor
clc
xchg
cmp
inc
add
clc
jbe
push
sbb
adc
jb
pusha
scas
mov
lcall
sub
sbb
mov
cmp
cmpsb
pop
xchg
push
pop
xor
adc
xor
testb
leave
std
add
push
shrb
fdivs
enter
jp
pop
sub
mov
ljmp
test
fistl
mov
pushf
adc
cwtl
inc
fs
mov
sub
div
add
cs
and
jle
mov
outsl
adc
int
sbb
lds
jg
stos
xchg
sbb
mov
push
jmp
jmp
mov
mov
push
and
movsb
add
push
mov
or
mov
inc
cmp
push
mov
daa
imul
xor
push
mov
jmp
fsubs
adc
lahf
pop
insl
dec
jne
enter
movsb
mov
in
ja
mov
mov
ret
lahf
sarb
pop
mov
out
xlat
lea
hlt
cmc
jecxz
and
inc
out
inc
repz
jno
mov
in
xchg
das
inc
xor
pop
push
cwtl
sbb
jg
mov
jnp,pt
sbb
xchg
dec
cmp
mov
cmpl
push
jns
dec
insb
mov
mov
mov
bound
out
mov
add
scas
mov
mov
jne
or
push
lret
adc
loopne
fisttpll
mov
adc
xor
js
inc
sbb
jbe
in
add
jae
inc
pop
pop
push
js
cmpsb
lret
sbb
pushf
insl
cltd
sbb
dec
sub
lcall
mov
sbb
pop
push
addr16
add
add
cmp
sbb
jp
xchg
in
push
fsubl
jecxz
add
mov
imul
adc
mov
cmp
or
fimuls
pop
dec
mov
out
jo
xchg
in
imul
call
push
fcmovu
dec
hlt
fisubl
mov
push
cmp
lahf
lea
aas
add
jb
cmp
pop
lcall
pusha
mov
dec
adc
jg
shrb
sbb
mov
outsl
mov
xor
dec
out
cmp
and
xchg
xor
adc
sbb
jbe
push
jle
sub
xor
mov
mov
std
push
inc
add
and
adc
sarl
jmp
out
xor
shll
int3
jno
inc
sub
fistps
pop
loop
jge
adc
xlat
sub
inc
cmp
mulb
movsb
inc
loop
loopne
push
sbb
pop
in
or
ret
or
pop
jno
fcmovbe
cmp
lea
xchg
js
faddp
mov
push
fsubp
xchg
ja
add
and
sub
lret
mov
addl
or
enter
int
or
xor
mov
les
les
pop
aas
add
movsl
test
daa
mov
jo
mov
icebp
xchg
jp
cmp
das
inc
lds
stos
push
xor
push
adc
icebp
inc
inc
in
mov
add
push
in
jp
dec
inc
inc
data16
icebp
in
cmpsl
sbb
cli
out
push
mov
in
sbb
sub
add
xlat
scas
push
mov
push
xlat
lods
inc
adc
aam
jg
jae
mov
sub
cs
insl
dec
inc
int3
sti
ljmp
inc
call
fstpl
or
movsl
jge
dec
and
jle
add
lcall
leave
cwtl
mov
jne
adc
push
jns
cli
ret
push
cli
xchg
into
mov
add
adcb
sub
inc
mov
push
jl
shl
in
xor
out
out
inc
mov
push
lock
jns
cmp
pop
jns
push
sti
aas
sub
dec
lea
rcl
int3
insl
mov
sbbb
aaa
ret
stos
lret
pop
jb
shrb
enter
adc
sub
xchg
arpl
push
inc
pop
xlat
test
jmp
dec
jb
mov
and
es
adc
mov
fbld
add
jns
jmp
ljmp
or
mov
xor
inc
mov
dec
out
clc
xor
js
icebp
sahf
fstp
adc
xor
or
cltd
sti
insl
popf
popf
adc
movsb
pop
fwait
pushf
and
in
arpl
stos
mov
shrb
fdivr
insb
mov
repz
in
mov
xchg
mov
xor
sub
xor
and
jbe
stos
or
xor
insb
repnz
in
mov
pop
out
pop
or
jl
sub
jmp
xchg
out
pushf
sub
in
out
in
bound
jge
out
repnz
jl
dec
int3
xchg
stos
scas
inc
jno
xchg
pop
xchg
arpl
mov
lods
iret
arpl
dec
lea
in
in
mov
mov
ds
push
icebp
jnp
xchg
lods
inc
xor
fwait
sbb
sarl
shll
adc
es
cmpb
aam
cmc
cltd
enter
xor
or
jno
imul
pop
mov
idivb
jno
outsl
andl
popa
int3
sahf
jle
mov
mov
test
movsb
and
dec
and
lods
add
rcrl
into
lods
xor
and
stos
jns
dec
xchg
add
inc
stos
iret
sub
pop
dec
leave
out
imul
mov
popa
or
mov
or
daa
sbb
jle
mov
int3
lahf
cmp
pop
and
bound
add
hlt
xor
add
sbb
cs
inc
addb
movsl
in
fsts
mov
nop
and
pop
mov
addr16
sahf
inc
pop
fadds
ds
add
mov
je
inc
pop
rorl
adc
mov
or
sub
movsb
sbb
leave
out
xchg
enter
pop
sbb
das
pop
stos
dec
jge
incb
xor
pop
jmp
push
sahf
push
inc
aam
xor
mov
jns
xor
repnz
add
subb
ljmp
xor
mov
or
out
pop
ljmp
loopne
or
in
movsl
insb
or
ret
loop
adc
adc
xor
sub
jmp
push
mov
iret
out
adc
rcr
clc
mov
cltd
xchg
out
mov
jmp
jns
cwtl
pop
jo
mov
sub
ljmp
loope
lret
xor
pop
xchg
xchg
cmpsb
mov
jns
adc
xchg
jo
push
jl
int
jge
ret
adc
jnp
sbb
movsb
mov
dec
push
pop
and
fs
andps
stos
sbb
rorb
jns
orl
stos
or
jg
sub
mov
add
pop
test
xchg
into
add
mov
xchg
sbb
add
cmpxchg
fnsave
jo
jae
jmp
xor
adc
push
cmpsl
sahf
sbb
daa
inc
mov
test
and
pop
mov
mov
add
or
mov
sahf
adc
mov
push
dec
cmp
mov
sbb
lods
jp
and
lock
les
mov
dec
jne
pop
in
inc
dec
les
or
mov
ja
andb
cmp
in
movsb
fstpt
pop
mov
outsb
outsl
adc
mov
lcall
iret
xchg
mov
or
add
jae
push
daa
fisubrs
push
add
outsl
sarb
xor
in
fisttpl
cld
stos
js
mov
push
inc
push
inc
shlb
jns
pop
adc
mov
sbb
sti
push
jle
inc
in
push
push
mov
movsl
dec
jmp
ficompl
or
icebp
xor
push
mov
lahf
mov
inc
push
out
setbe
xor
dec
jo
out
sahf
mov
bound
leave
jg
xor
shrb
mov
xor
xor
int
jl
pop
repnz
mov
mov
and
leave
pop
sbb
or
fmulp
jl
subl
test
cltd
dec
into
rorl
outsl
pop
add
xchg
enter
inc
int
insl
mov
out
adc
xor
adc
movsb
insb
lods
cmp
dec
mov
mov
aas
jb
jbe
loopne
mov
adc
sub
xor
dec
jge
dec
adc
adc
arpl
adc
mov
push
push
repz
cld
add
mov
movsl
inc
mov
xor
mov
outsb
gs
stos
mov
xor
hlt
push
insb
jp
jl
inc
cmp
sbb
call
push
loope
into
scas
mov
jl
jne
jecxz
mov
ljmp
enter
loope
loopne
call
fldenv
rclb
fnsave
cltd
push
les
xchg
xchg
gs
jb
fistpl
and
out
add
cltd
sub
shrb
test
repnz
nop
popf
adc
flds
pop
xchg
test
filds
in
mov
adc
jl
flds
in
push
xchg
adc
sbb
das
in
orl
data16
and
mov
and
je
or
mov
push
cld
push
xchg
xor
iret
enter
aas
or
rolb
cmc
pop
push
pop
inc
xor
adc
push
test
dec
push
stc
cltd
dec
out
ljmp
cmc
jp
leave
mov
or
and
mov
sub
cmp
lds
dec
fucomip
sub
lret
pop
xor
and
insl
sbb
mov
test
mov
dec
enter
into
push
pop
mov
rolb
daa
fcmovnu
jno
fwait
sahf
lods
adcb
cli
pop
rcl
or
int3
jecxz
xor
or
outsl
hlt
sub
test
mov
les
andl
add
pop
ret
add
sub
and
cwtl
push
aad
pop
jns
sbb
xor
jb
dec
outsl
mov
xlat
cmp
popf
adc
push
sbb
jle
or
fcmovu
sub
roll
and
divb
cmp
xor
pop
mov
test
push
mov
push
decl
aad
mov
jp
xor
xor
jnp
out
adc
cmp
int3
push
scas
mov
mov
insl
mov
xor
pop
mov
adc
xor
into
out
mov
add
pop
adcb
cmp
and
xlat
sbb
faddp
std
sub
sbb
pop
pop
push
xchg
int
adc
mov
xchg
sbb
fcoml
push
push
fmull
xor
shlb
mov
xchg
popl
push
insb
pop
lods
mov
cmp
sbb
jno
mov
insl
shr
inc
adc
in
xchg
mov
xchg
cwtl
paddd
pop
push
arpl
mov
cmp
push
adc
dec
mov
push
dec
xchg
sub
xor
jne
nop
in
shrb
adc
out
jmp
lcall
pop
int3
stc
jmp
pop
jge
out
xchg
in
push
jae
iret
cmc
popa
lret
mov
stc
in
xor
out
sub
lea
mov
inc
insb
mov
xchg
fdivrp
ret
xor
lock
fldt
pop
test
jne
dec
xor
leave
mov
xchg
push
loopne
cmc
add
mov
xlat
inc
loope
sbb
testl
stc
lods
xchg
sbb
leave
in
adc
ljmp
cmp
inc
jp
dec
out
or
mov
mov
cmpsb
out
mov
inc
lcall
adc
xchg
hlt
pop
mov
jb
mov
dec
cwtl
jge
pop
out
ds
mov
movsb
pop
ret
in
mov
pusha
adc
outsb
pusha
lock
pop
and
pop
and
inc
mov
push
fisttpl
pop
xlat
jmp
push
xchg
mov
adc
dec
and
pusha
stc
pop
in
push
in
mov
mov
mov
lods
or
dec
add
imul
and
stos
popf
dec
imul
xor
out
insl
mov
mov
xadd
pushf
xchg
imul
xor
lea
movsl
xor
in
sub
bound
jb
sub
pop
movsl
in
adc
inc
es
or
xor
jb
add
icebp
or
imul
das
rol
scas
xor
fsub
loopne
lret
loope
sti
movsl
orb
cmp
jp
sti
inc
xor
add
fmulp
sti
je
int3
sbb
mov
xlat
or
jecxz
xchg
lcall
repz
loop
cwtl
push
test
jg
adc
cmp
dec
push
mov
and
movsl
dec
pushf
ret
aad
pop
xchg
xor
shrb
lods
cmp
xchg
outsb
fisttps
mov
fwait
xchg
out
sub
xor
mov
cmp
lds
dec
jmp
pop
mov
or
lds
stos
inc
adc
dec
int
mov
add
adc
stos
rcrl
movsl
mov
or
data16
push
mov
pop
xor
pop
cmp
aaa
xchg
mov
montmul
cmpsb
test
movsb
scas
mov
stos
mov
jae
out
loopne
ja
loopne
xchg
scas
and
mov
and
mov
push
pop
jne
xchg
xchg
mov
iret
mov
and
mov
lea
incb
inc
imul
imul
movsb
outsl
push
popa
push
ljmp
inc
popa
xor
ja
adcb
enter
or
out
cld
mov
stc
icebp
shll
pop
mov
out
scas
in
xchg
jecxz
add
push
sarl
mov
mov
jge
push
and
movl
mov
lods
and
jae
inc
jge
pop
and
cli
inc
push
cmp
js
pop
jbe
sahf
gs
adc
cmp
prefetch
mov
jns
or
test
dec
or
iret
insl
or
jecxz
add
loope
jge
in
test
xor
fwait
shll
add
enter
mov
out
pop
cmp
xchg
cmpsb
rcrl
mov
inc
pop
jle
sub
push
decl
xor
out
jbe
mov
subb
sbb
inc
push
shll
in
jg
push
mov
testl
enter
out
enter
btc
fs
xchg
xchg
pop
cmp
jno
xlat
add
mov
pop
fbld
xchg
cltd
loope
arpl
mov
push
mov
inc
jge
mov
sub
int3
xchg
loope
in
out
incl
es
outsl
jmp
gs
pop
sub
adc
mov
lock
or
or
in
add
ret
out
pop
bound
adc
mov
lcall
or
xorl
ljmp
int3
fwait
and
in
test
cmp
mov
mov
sarl
push
leave
xor
cltd
int
pop
sti
push
subl
sbb
pop
aas
dec
sub
loope
orb
mov
cld
pop
ss
imull
pop
mov
xchg
lods
sbb
loop
xor
xchg
outsl
mov
nop
aas
sahf
dec
outsb
lock
adc
or
fstp
inc
cmpsb
adc
pop
lock
dec
adc
or
lea
mov
inc
outsb
pop
in
test
or
push
je
inc
leave
out
aaa
adc
xchg
mov
popa
cmpsl
sub
lds
shlb
mov
sbb
clc
arpl
fldpi
and
inc
jecxz
adc
call
sbb
pop
mov
unpcklps
lods
gs
xchg
popf
shl
ret
leave
pop
mov
pusha
cld
test
test
out
dec
popf
lahf
in
leave
sahf
push
imul
or
roll
sbb
pop
sbb
push
aam
in
push
aas
mov
push
xor
std
mov
repnz
inc
cmpsl
int
xor
sbb
outsl
jmp
ss
ljmp
scas
add
jbe
mov
sbb
push
scas
fldl
mov
fnstenv
xor
jo
or
lret
loop
push
and
inc
push
pop
xlat
pop
dec
bound
add
xor
pop
scas
or
fwait
shll
push
push
pop
xchg
push
pop
and
xchg
push
test
jbe
mov
or
push
mov
out
ret
popf
sbb
mov
cmp
jne
scas
mov
cwtl
xor
inc
lock
mov
sbb
add
dec
cld
xor
dec
fnstcw
pop
sbb
mov
insb
in
mov
insl
sub
pusha
stos
mov
sub
cld
testb
pop
in
iret
push
jo
repnz
jecxz
imul
push
adc
lods
xchg
pop
adcl
jl
sbb
out
sbb
cmpsb
aam
pop
rcrb
aas
dec
cld
sub
aaa
and
popa
sub
inc
cmp
mov
sub
loope
dec
into
in
or
mov
add
in
dec
mov
sbb
mov
aas
popa
test
inc
adc
mov
lods
inc
sbb
scas
daa
pop
cmp
out
ret
cmp
shrb
ficoms
dec
movsb
in
mov
inc
lcall
aas
xchg
repz
in
divb
das
mov
mov
inc
xchg
add
fs
adc
fsub
jecxz
jo
jb
arpl
mov
pop
add
mov
leave
iret
inc
pop
push
jg
ret
xor
cli
push
addr16
mov
mov
mov
sbb
pop
jbe
shlb
fisubs
pop
xchg
sbb
xchg
adc
repnz
test
and
pop
pop
inc
fisubrl
fwait
ss
add
xlat
bound
shll
mov
sub
sbb
adc
push
mov
div
cmp
scas
lods
pusha
push
dec
push
mov
mov
add
mov
std
arpl
mov
popf
or
mov
xchg
stos
rcrl
jl
lret
addr16
mov
out
outsl
fwait
lret
push
mov
push
enter
mov
loope
mov
mov
mov
xchg
in
lahf
jno
inc
adc
repnz
mov
lods
pop
sarl
rorb
or
popf
nop
imulb
ljmp
sub
shrl
stos
sub
adc
fucom
fs
in
shrl
inc
jns
cmp
pop
lods
repnz
dec
xchg
adc
add
dec
pop
xor
sub
cmp
fstpl
push
fnstsw
dec
xchg
insl
push
pop
sahf
xlat
mov
in
arpl
rorb
jae
test
jne
dec
mov
sahf
iret
mov
nop
inc
xor
push
pop
and
fucomp
pop
insl
mov
mov
movsb
enter
pusha
stos
jmp
and
mov
pop
aaa
loope
mov
scas
test
lret
pop
mov
lods
cmp
and
push
sbb
scas
mov
ret
pop
or
stos
fwait
dec
pop
pop
or
cmp
mov
cli
sbb
hlt
cld
sub
dec
pop
or
lock
dec
loopne
pop
test
adc
push
mov
jno
fbstp
cmpsl
pop
stc
sahf
add
in
popa
jecxz
cltd
mov
cli
mov
call
dec
fwait
or
add
add
fucomp
test
aam
inc
pop
in
out
jo
xor
rcr
pop
xchg
mov
out
movb
sahf
xor
jns
mov
test
andb
cltd
mov
mov
jo
inc
push
popa
xor
loope
jecxz
xchg
inc
lcall
ljmp
push
bnd
jmp
push
mov
adc
mov
inc
xchg
jp
sbb
inc
push
imul
pop
adc
lock
push
in
lahf
xor
mulb
hlt
aaa
dec
sbb
xchg
lret
xchg
pop
jne
ret
pusha
or
jle
in
sub
push
xchg
rcrl
pop
hlt
add
scas
inc
or
loop
lea
incl
dec
stos
movsl
or
les
imul
repnz
mov
mov
cmp
adc
mov
shlb
sti
mov
shll
jecxz
xor
lret
mov
pop
mov
mov
jle
pop
loopne
stos
jp
push
push
mov
mov
fidivs
scas
test
xor
aas
jnp
data16
push
and
fiadds
nop
adc
sub
mov
mov
add
aam
ret
cmp
insl
rolb
push
add
js
imul
xorb
sub
jge
xor
loop
mov
push
mov
and
jb
xchg
inc
xchg
and
dec
je
in
push
repnz
scas
sub
jo
adc
cmp
hlt
ja
inc
mov
cmp
push
daa
enter
jle
cltd
test
iret
adc
push
fimull
mov
dec
adc
addl
fdivr
ss
inc
mov
rcll
into
and
cmp
mov
hlt
jmp
pop
and
lds
inc
sub
ret
pop
xor
sbb
xchg
shrl
leave
lods
jle
in
int
mov
rcrl
mov
sub
lahf
rcrb
mov
js
data16
mov
pop
loope
jns
add
pusha
mov
xchg
aas
das
mov
out
cwtl
lret
mov
sbb
xchg
daa
mov
les
jnp
xchg
jne
ss
xchg
jmp
jb
push
repnz
lahf
movsb
mov
test
pop
shld
sub
add
stc
dec
in
fyl2x
sarb
scas
adc
xor
lods
adc
mov
fisttpl
push
push
in
sub
inc
lahf
and
insl
sub
out
shlb
dec
js
std
dec
test
or
jge,pn
xchg
popf
lds
mov
stc
cltd
int
jmp
rcll
test
sti
cmp
mov
xchg
out
pop
pop
test
cmp
sbb
test
dec
scas
into
jns
out
pop
xor
dec
xor
mov
push
outsl
cmpsl
ret
sti
ss
adc
sbb
dec
dec
iret
and
fwait
loope
arpl
addr16
jo
xchg
add
fs
push
sub
pop
mov
xor
lea
sub
inc
pop
movsl
mov
push
imul
and
pop
mov
orb
nop
xchg
icebp
inc
add
inc
fidivrl
and
mov
xor
xchg
cmp
push
enter
mov
xchg
sahf
loop
mov
push
imull
outsb
rcll
test
mulb
adc
rclb
das
dec
and
call
mov
or
repnz
aam
sub
imul
dec
push
push
inc
mov
push
out
sub
jb
push
popf
ja
pop
jmp
xlat
fldcw
popa
mov
cmc
pushf
xchg
leave
or
add
xor
push
daa
mov
pop
adc
push
mov
inc
xor
sub
add
dec
mov
add
mov
ret
loop
data16
push
push
mov
xor
ret
sub
and
setb
add
pop
in
xor
inc
mov
cmp
push
push
fmuls
xchg
mov
pop
into
and
aas
test
xor
adc
sbb
clc
repz
mov
icebp
loopne
insl
pop
xchg
dec
mov
mov
dec
cmpsb
bound
cmp
jae
jge
lcall
test
stc
fistpll
mov
xor
inc
lret
in
sahf
mov
mov
pop
jmp
mov
sbb
dec
mov
mov
push
cmp
xchg
insl
jmp
sbb
daa
sub
leave
rorl
push
out
jl
or
cmp
xchg
test
movsl
dec
stos
shll
and
pusha
dec
sbb
cmp
ficomps
mov
mov
repz
jne
fmull
les
icebp
cmp
mov
inc
xor
jl
das
xor
and
pop
lea
jg
hlt
inc
mov
pushf
adc
and
add
ffreep
shll
sbb
js
inc
outsb
or
ds
in
out
not
gs
out
fidivl
add
jbe
pop
subl
testb
out
push
test
or
mov
pop
rcl
in
insb
popa
loope
scas
stos
ror
lahf
push
repz
push
es
lret
sub
pop
pop
addr16
pop
dec
les
popf
push
xlat
je
cltd
mov
xchg
iret
cmp
dec
sbb
fidivl
fisubrl
mov
mov
mov
pop
aam
lahf
mov
je
xlat
in
mov
lea
fimuls
fildll
mov
xchg
mov
aam
out
push
inc
es
and
jne
cmpb
push
add
add
insb
jns
jle
mov
jns
sbb
sbb
xchg
fildl
or
sbb
mov
mov
jo
inc
and
and
adc
xchg
repnz
outsl
mov
jecxz
pop
and
sbb
cmp
out
das
mov
jno
loope
fdivrl
xchg
rcll
scas
gs
add
cwtl
pop
pop
fiaddl
cwtl
lock
faddp
sahf
cs
stos
les
into
bound
lock
addr16
push
xchg
mov
lds
test
push
and
jno
insb
mov
out
and
lds
hlt
imul
jne
jp
leave
lds
xor
adc
jo
xchg
in
out
mov
fnstcw
shll
in
shrb
imul
roll
loop
lcall
es
jo
push
xchg
mov
jp
add
xchg
jo
sar
lock
shll
inc
and
imul
enter
nop
jno
movsb
cmp
out
cmp
fsts
push
int3
sbb
shl
leave
ret
sub
dec
or
lods
icebp
jno
xlat
outsl
dec
sub
lahf
lock
add
xchg
pop
sbb
sti
cmp
clc
xchg
xchg
and
xor
repnz
fisttpll
cmp
enter
imul
pop
jne
inc
sub
mov
shrb
sti
inc
jle
add
popa
xor
ljmp
xor
stos
arpl
int3
outsb
notb
adc
mov
push
inc
push
or
imul
test
and
in
or
jg
cmpsb
and
mov
mov
insb
push
je
push
cmpsb
scas
add
and
xchg
sti
lret
testb
loope
push
lock
mov
jae
insl
imul
mov
test
pop
and
pandn
mov
sub
mov
out
loope
xor
mov
cmp
fstpt
add
rolb
mov
scas
jecxz
xchg
test
sbb
ja
add
mov
jno
inc
enter
arpl
adc
pop
fwait
rolb
int3
lret
jle
out
daa
out
outsb
in
inc
mov
sbb
xor
mov
xor
lret
ja
add
sub
push
sub
rcrb
shl
adc
lret
testl
push
fisttps
or
negl
or
movsl
leave
mov
push
leave
jnp
cmc
lcall
pushf
cmp
sub
inc
daa
dec
inc
dec
dec
fmul
inc
hlt
jle
test
xor
mov
push
cmp
fildll
push
mov
mov
enter
cmp
movsb
lods
jecxz
pushl
testl
jne
dec
jl
dec
sahf
and
xor
jnp
leave
cwtl
aad
dec
sarl
pop
adc
fisubrl
in
inc
pop
or
test
push
outsl
ficoms
and
jl
mov
inc
or
test
xchg
lcall
xchg
icebp
ficompl
mov
jbe
push
pop
xor
ss
enter
sub
sbb
push
inc
dec
jo
dec
and
jg
mov
sub
and
movsb
mov
inc
dec
sub
insl
repz
push
jns
pushf
ljmp
movsb
outsl
sbb
mov
out
or
pop
test
mov
mov
cmpsl
push
icebp
sub
outsb
xchg
lds
lods
jmp
aad
cli
cmc
adc
adc
mov
xlat
lock
fists
std
jp
stos
jle
idiv
xchg
arpl
mov
mov
pop
mov
repnz
adc
pop
inc
pop
add
jno
push
jne
mov
cmc
inc
out
stos
jl
fucomi
clc
cmpsl
and
in
jge
jecxz
lea
cmp
or
xchg
xlat
cltd
je
mov
lods
test
push
test
mov
andl
fldenv
mov
cmp
roll
jb
test
in
cli
push
sub
cmc
xor
neg
adc
in
aas
test
mul
movsb
mov
xor
or
inc
adc
stc
mov
lods
ret
nop
jnp
xor
add
sub
ficompl
pusha
xor
xchg
mov
out
or
mov
mov
jge
jge
add
mov
ljmp
out
fidivs
push
sub
sub
sti
mov
arpl
arpl
cld
iret
sbb
fcomps
dec
xchg
in
sahf
cmp
popa
les
jecxz
enter
cmpsb
aaa
gs
inc
popf
es
xchg
stos
pop
push
aaa
sbb
icebp
push
or
add
jb
sbb
pop
lret
mov
shl
addr16
enter
push
pop
cmpsb
movsb
pop
fdivrl
mov
sub
pop
iret
cld
or
sbb
and
cmpsb
pop
or
imul
rclb
add
dec
push
out
rorb
and
stc
jmp
aad
jmp
std
add
flds
subb
add
loop
ss
daa
push
push
sbb
test
in
pop
lret
add
xlat
stc
sub
mull
push
pop
lahf
pop
or
nop
fidivrs
mov
aam
inc
rorl
dec
ja
pop
loop
mov
xor
cmp
xchg
or
std
mov
or
inc
addr16
or
rcll
cmp
sub
push
adc
out
pop
scas
push
imul
mov
stc
out
or
adc
rcl
cmp
mov
ljmp
jmp
lret
mov
jecxz
lret
jno
mov
mov
and
fwait
xor
xchg
sbb
push
mov
jnp
sbb
jcxz
shll
dec
cli
push
or
pop
adc
test
dec
xchg
frstpm(287
pop
fbld
lods
enter
sbb
pushf
test
out
adc
push
jns
fstp
mov
dec
push
mov
iret
adc
insb
enter
mov
jnp
cmp
stc
ja
out
sub
sbb
sbb
js
pop
ss
aad
mov
loopne
jecxz
lcall
sbb
xchg
gs
iret
jns
sbb
xchg
mov
ja
jb
sbb
into
test
mov
mov
adc
stc
mov
mov
mov
rorb
nop
adc
mov
push
sub
movsl
cvtdq2ps
outsb
dec
xor
dec
aam
dec
cld
and
leave
inc
pop
iret
es
jp
int
and
mov
cmp
cmp
iret
mov
push
sbbb
loop
sti
nop
sbb
adc
repnz
adc
and
repnz
push
dec
pop
popf
filds
fistl
sub
ljmp
sub
pop
adc
xchg
mov
or
jne
dec
test
movsl
xchg
mov
fsub
sub
out
cmpsl
lds
jns
and
or
dec
sub
add
mov
ret
out
mov
adc
adc
or
jmp
daa
mov
xlat
sti
scas
or
je
inc
iret
xchg
out
scas
in
inc
mov
imul
mov
xchg
fs
xor
aas
dec
outsl
in
pop
jg
movd
sbb
adc
mov
aaa
jg
add
adc
push
pop
pop
inc
or
inc
mov
clc
aas
imul
push
fcoms
mov
push
push
sbbb
into
mov
test
mov
popf
lret
add
jmp
jg
cwtl
inc
aam
scas
jb
inc
mov
sbb
ds
incl
mov
ljmp
xor
aaa
mov
jne
test
ds
rolb
in
mov
cmp
fistl
bound
repnz
loop
aad
fildl
or
cmp
or
clc
push
and
sarl
push
pop
or
test
pop
cli
xchg
cmpsb
dec
cwtl
enter
into
xor
cmpsb
cmpsb
mov
aam
cmp
jmp
data16
arpl
cli
xor
iret
push
les
ficomps
leave
lret
adc
repz
xchg
lret
push
js
imul
jns
out
xchg
jno
xchg
lods
or
pusha
movsb
ror
adc
lods
sbb
xor
sbb
dec
xor
push
outsb
adc
xchg
push
outsb
mov
data16
movntps
dec
outsl
pop
cwtl
shl
in
test
mov
rorl
dec
mov
mov
adc
push
pop
xchg
lods
xlat
and
roll
lcall
std
popa
xor
outsb
push
sbb
lds
int
dec
lods
out
int
insb
iret
aam
xor
lods
les
aad
push
out
stos
adc
adc
and
push
adc
cmp
add
fimuls
add
jno
in
sbb
xchg
out
mov
sarb
popf
lds
sar
push
push
pop
jbe
mov
les
int3
shlb
inc
ficoml
adc
push
loope
mov
adc
pop
out
pop
ljmp
adc
xor
clc
push
lret
fiadds
in
jp
outsb
scas
mov
mov
repnz
push
std
xor
mov
loopne
xchg
clc
jecxz
pop
mov
push
lret
mov
leave
jb
call
xchg
add
jecxz
int3
jg
push
lods
mov
add
push
nop
pop
jns
add
cwtl
dec
sub
mov
xor
cmp
call
sti
push
xlat
lret
test
mov
push
out
or
les
inc
aas
xchg
es
ss
imul
mov
jp
jmp
icebp
loopne
cmp
loope
and
shll
sub
cmpsl
out
pop
sub
adc
scas
enter
repnz
std
fwait
dec
mov
arpl
jmp
cli
int
fs
xchg
out
sbb
jno
mov
push
adc
ds
adc
aas
mov
pop
and
int3
dec
mov
inc
clc
jb
test
gs
cmpsb
fisttpl
mov
lods
pushl
pop
sub
lods
ret
inc
in
add
pop
repnz
sarl
inc
aad
aam
mov
and
xchg
sbb
mov
es
push
enter
clc
inc
add
or
sarl
test
mov
push
popa
aad
pop
push
cmc
inc
inc
rorb
out
sub
pop
sbb
fwait
xchg
call
in
movb
loop
out
sbb
xchg
xor
jg
stos
mov
in
add
or
ret
push
std
fildll
outsb
int
popf
push
mov
lret
mov
lods
jmp
addr16
pop
nop
dec
pop
or
arpl
out
rorl
dec
sub
sub
pop
enter
dec
rclb
jge
fwait
pop
jl
add
cmpsl
out
jae
hlt
fsubrp
inc
imul
jecxz
mov
jl
movhps
std
jle
jge
clc
lock
das
pusha
sbb
push
push
pop
sub
stos
cmp
cmp
mov
addr16
pop
icebp
jge
or
rclb
movsl
ja
cli
jg
or
imul
sbb
add
jmp
pop
jb
xchg
cmpsl
push
in
mov
and
pusha
das
and
push
xchg
mov
subb
test
fdecstp
inc
call
rolb
pop
je
leave
jmp
out
mov
daa
adc
mov
or
pop
repnz
push
dec
mov
cwtl
lds
sub
mov
rcll
pop
fcom
pop
pushf
movsl
cmp
sub
and
mov
gs
sbb
imul
and
outsb
cs
and
in
sbb
jl
push
push
mov
sbb
adc
add
mov
insb
icebp
js
loope
imul
add
mov
enter
jb
dec
mov
repz
add
out
aas
dec
cltd
es
call
mov
hlt
or
aas
jns
cld
or
inc
mov
and
in
add
outsb
add
roll
or
inc
in
pop
jo
into
clc
lds
movsl
and
rcrb
loop
or
jg
cwtl
pop
out
jae
add
test
jno
mov
sbb
jbe
sbb
xchg
js
adc
fadd
pop
mov
mov
inc
cmc
fnstsw
push
jo
jo
xchg
pop
aaa
inc
add
pop
push
scas
loope
and
or
outsb
or
inc
jge
jp
mov
jecxz
xchg
add
jle
je
sbb
cmpb
or
mov
fadds
sub
adc
enter
cmpsb
push
leave
pop
rcl
cli
jp
push
lea
mov
mov
jmp
mov
loopne
jp
add
and
nop
push
pop
outsb
adc
or
push
sbb
stos
lea
in
imul
and
sub
int3
cmpsl
mov
fidivs
add
lahf
mov
repnz
xor
xor
in
ds
inc
cmp
and
pop
ficomps
push
xchg
jmp
push
mov
bound
stos
movsb
jo
xor
mov
or
sbb
pop
dec
jns
adc
mov
lea
arpl
rcll
xor
mov
add
mov
nop
xlat
stos
push
push
xchg
aas
lahf
stos
loope
pop
popf
fidivrl
mov
add
or
and
dec
cmp
mov
loopne
push
lret
stc
or
lods
cmp
into
push
mov
in
mov
adc
jecxz
enter
cmp
in
inc
inc
sbb
lods
cwtl
ret
push
lret
into
cmp
sbb
and
sti
faddl
push
insb
adc
push
push
mulb
fucomi
dec
jae
lods
push
cwtl
out
arpl
iret
inc
cmp
das
sub
movsb
add
and
test
aaa
add
cmp
decl
xchg
in
adc
punpckhwd
dec
mov
cli
pusha
xchg
add
out
pop
mov
shrl
lods
daa
cwtl
add
out
inc
or
xor
movsl
or
lcall
mov
popa
call
xor
shrl
fstl
leave
push
sbb
movsl
sub
lret
xchg
cmp
hlt
enter
mulb
in
pop
pop
xchg
or
das
mov
push
sahf
aaa
jo
cmp
cs
insb
sarl
movsl
and
cmpsb
or
push
mov
out
repz
movsb
ja
loop
pop
or
test
repnz
imul
sahf
bound
mov
inc
cmp
in
sbb
jl
adc
rorl
jmp
loop
ja
pop
push
lock
imul
adc
std
xlat
lret
ficoml
pop
dec
fdivp
loope
sbb
dec
push
sbb
pushf
andl
popf
sbb
scas
rclb
mov
adc
sbb
pop
repz
pop
pop
mov
jle
nop
stc
adc
sub
push
mov
lods
je
dec
aam
push
fwait
push
shll
subb
dec
xchg
adc
mov
or
inc
enter
iret
imul
fldl
testl
movsl
fs
adc
idivb
cmp
jecxz
je
pop
popa
xchg
fnsave
insb
jb
loop
and
cmp
pop
mov
jnp
shll
jle
xor
nop
cwtl
sti
lret
xor
mov
jb
jge
adc
and
ljmp
stos
dec
pop
shll
lock
aaa
cmp
mov
shl
xchg
inc
jns
jb
jecxz
and
adc
repz
dec
in
movsb
add
mov
rorl
outsb
cmp
lret
mov
sbb
adc
fwait
mov
loope
dec
mov
mov
push
mov
aaa
imul
faddl
mov
sub
rcll
insl
mov
or
dec
adc
arpl
mov
push
scas
and
add
or
add
fstp
leave
mov
ret
jg
out
jle
xchg
push
pop
cmp
sub
sub
out
jmp
gs
outsb
xchg
imul
inc
inc
test
xor
js
cmpsb
or
ja
jp
dec
lahf
aam
inc
mov
xchg
lods
jo
pop
cmp
xchg
fwait
add
imul
add
inc
leave
imul
std
xchg
fidivrs
test
push
mov
sbbl
out
pop
xlat
pop
mov
sbb
or
mov
movsl
xor
xchg
adc
mov
jmp
divb
das
sar
lock
data16
jecxz
jg
pop
mov
fdivrl
pushl
lahf
ljmp
shrl
shll
push
fmull
roll
outsl
es
cmpsl
adc
add
arpl
sbb
mov
xchg
push
cmp
xchg
jne
mov
ss
mov
loop,pn
int
sbb
fsubr
push
bound
ljmp
bound
hlt
or
gs
mov
adc
mov
push
pushf
mov
xor
sub
ljmp
push
das
push
pop
add
outsl
xchg
adc
rcll
mov
adc
push
outsl
xchg
xchg
cmp
sbb
testl
inc
mov
stos
mov
hlt
xchg
test
movsb
xchg
hlt
dec
out
test
jb
jno
xor
std
gs
jg
mov
scas
bound
into
pop
mov
scas
lret
bound
sub
mov
or
or
sub
cwtl
cmp
loop
cmp
and
inc
into
mov
xchg
cmp
push
jo
and
or
mov
xor
add
pusha
enter
sti
cld
sbb
sbb
mov
cwtl
inc
mov
stc
aad
jp
popf
or
xor
loope
sbb
fwait
test
push
dec
and
xor
cmpsl
adcl
addr16
cwtl
inc
jecxz
dec
pop
or
mov
loop
or
out
aad
pop
in
and
mov
mov
or
inc
pop
pop
fs
push
stc
cld
daa
pop
out
sbb
jno
cltd
call
dec
cmpsb
pop
daa
jge
pushf
jg
clc
jnp
fimull
hlt
cmp
in
ret
out
stc
cmp
subl
jbe
sub
push
cmp
pop
hlt
xchg
jo
sub
push
std
push
int3
adc
ds
and
mov
or
int3
sub
aas
out
test
inc
pusha
fistps
add
int3
and
mov
mov
cmp
or
push
in
dec
pop
pop
xchg
cs
outsb
xchg
mov
repz
ja
jl
sbb
ss
insb
outsl
jge
out
sbb
or
cmpxchg
test
dec
sub
fs
xor
cld
int
les
stos
data16
shlb
adc
shr
mov
add
sahf
imul
inc
inc
mov
leave
or
ljmp
iret
inc
loopne
and
add
mov
shlb
addr16
dec
push
jg
push
imul
mov
inc
jg
mull
insb
out
mov
xchg
xchg
mov
push
daa
outsb
dec
cs
add
jg
das
das
test
sbbb
movsl
dec
mov
gs
pusha
iret
int
mov
lds
gs
xchg
jle
fsubrl
in
mov
repnz
adc
mov
mov
sbb
jo
movsb
push
out
sbb
xchg
cmp
jp
jle
sbb
jns
xchg
xchg
rcrb
pusha
sahf
xchg
mov
mov
jae
outsb
adc
push
lret
cmp
and
and
in
xlat
ss
das
repnz
ja
xchg
add
mov
add
call
into
cltd
pusha
lock
int
add
jno
sub
or
outsl
push
pop
mov
mov
xor
test
dec
cmp
jp
sub
sahf
pop
ja
fsubrp
addb
mov
pop
lock
push
into
scas
mov
in
lods
pushf
int3
dec
pop
xchg
lods
jmp
pop
xchg
mov
mov
adc
add
loope
push
xlat
lods
xchg
sub
rolb
mov
mov
pusha
inc
mov
or
jae
jg
out
outsl
adc
and
lds
fwait
cmc
push
rol
mov
add
sub
add
adc
cltd
aas
inc
test
jecxz
dec
pop
jnp
jmp
dec
sub
rorb
mov
pop
test
arpl
add
xchg
in
or
push
mov
div
mov
call
out
repz
fsts
lds
inc
iret
cmpsb
xor
sbb
daa
sbb
push
dec
ss
fs
pop
int
add
bound
fsubrs
aas
push
xor
mov
cmpsl
adc
or
cmp
movb
enter
lds
je
inc
cmp
adc
sti
aam
xor
lret
test
mov
mov
loopne
xchg
cmp
pop
arpl
sahf
int
sbb
and
mov
outsw
xor
push
sub
fisttpll
push
or
pop
adc
pusha
mov
xor
mov
dec
fdivrp
lret
mov
bound
repnz
jnp
push
pop
arpl
test
aam
cltd
test
movl
xorb
jbe
int3
inc
adc
xchg
inc
pop
jo
push
jo
bound
imul
mov
aaa
adc
aam
es
mov
mov
push
adc
inc
adc
insl
dec
dec
je
loope
push
adc
jecxz
dec
out
pop
insl
pusha
pusha
xor
adc
xor
aam
mov
xor
loopne
dec
loope
clc
cwtl
imul
sub
insl
xor
push
adc
jne
mov
outsl
xchg
adc
xchg
sbb
lock
test
data16
push
xchg
pop
or
push
clc
mulb
call
mov
icebp
xor
and
push
imul
stos
inc
repz
inc
hlt
inc
inc
mov
arpl
in
das
or
mov
and
ss
clc
loopne
mov
dec
jg
inc
inc
push
stc
inc
in
push
xlat
jo
mov
test
push
and
lcall
popa
or
popf
out
mov
int3
insl
in
ja
dec
movsb
mov
imul
enter
mov
negb
push
push
cwtl
shl
icebp
or
test
mov
icebp
out
fbld
out
pop
add
xchg
call
iret
sbb
mov
roll
hlt
out
addb
pop
push
xchg
hlt
movsl
push
cli
inc
xchg
push
rcrb
gs
ret
icebp
lahf
popf
pop
lods
and
inc
rorb
lods
push
ja
adc
pushf
mov
mov
test
mov
popf
adc
mov
mov
jo
dec
or
cli
pop
dec
mov
out
xchg
push
ret
xor
pop
cmpl
xor
nop
mov
mov
jo
xlat
and
mov
cmpsb
and
dec
lcall
xor
daa
orl
iret
dec
mov
cmc
hlt
addr16
push
fmull
sbb
or
ja
sbb
les
xor
fs
lods
mov
inc
add
repnz
xchg
xor
lock
adc
fmul
inc
in
or
sbb
mov
inc
out
cmp
mov
lock
jl
xlat
lds
push
mov
mov
cmp
dec
ja
or
loopne
ret
xchg
jns
xchg
insl
je
dec
cwtl
mov
sbb
jmp
pop
outsl
out
in
testl
adc
movsl
sub
sbb
xchg
lret
mov
subl
pop
insl
pop
fbstp
sub
rcrl
mov
jl
fstpt
and
sarl
cld
fsts
aas
sbb
outsb
test
jno
fwait
adc
jo
fldenv
xchg
add
lds
xchg
stos
pop
dec
insb
inc
mov
mov
out
daa
pop
stos
inc
push
mov
loopne
stos
repnz
ret
xor
lcall
adc
fisubrs
mov
sbb
movsb
iret
ret
es
and
daa
mov
sbbl
in
push
sbb
inc
push
shrl
dec
xchg
test
jg
inc
das
ja
mov
mov
mov
pop
sahf
mov
sub
jae
add
cs
mov
in
aas
pop
xchg
fisubs
push
adc
inc
mulb
push
dec
xchg
lcall
int3
cmp
aad
jbe
shll
inc
mov
repnz
sbb
out
lods
add
fidivrs
jmp
fdivrs
dec
xor
clc
test
mov
mov
icebp
pop
test
daa
loope
imul
lahf
mov
call
scas
push
pop
es
mov
cmp
jno
in
pop
push
mov
mov
out
in
xchg
xchg
inc
in
xlat
push
lcall
mov
jbe
lcall
and
xor
cwtl
cmp
sarb
push
push
aas
movl
mov
test
call
mov
popf
gs
sbb
in
sub
push
pusha
orb
lahf
loopne
sub
cmp
xor
sub
sahf
jge
faddl
ljmp
mov
ret
stos
dec
inc
xor
jg
shll
adc
mov
and
sbb
mov
mov
sub
or
xor
cmpb
repnz
jmp
push
adc
dec
sub
sbb
mov
stos
add
stc
ja
cs
or
or
and
cmc
popa
cmpsb
in
or
adc
andl
add
inc
movsl
mov
jecxz
repnz
jle
imul
pusha
xor
inc
insl
fwait
push
mov
je
xor
std
outsl
pop
and
pop
loope,pt
loop
lock
insl
mov
jecxz
dec
cmc
mov
inc
js
mov
subb
sub
xchg
ret
movsb
mov
stos
lock
cmp
adc
aad
mov
sahf
push
dec
inc
pop
xchg
lret
mov
mov
stc
hlt
push
scas
out
lret
jno
pop
popa
call
sbb
sbb
faddl
cmp
push
sbb
pop
xor
imul
mov
or
push
sti
and
js
popa
adc
mov
scas
sub
and
sbb
pushf
ret
pop
or
sbb
lods
aas
xchg
loop
dec
addr16
push
push
pop
mov
cmc
inc
jne
int
xlat
push
dec
mov
adc
in
psubsb
es
sub
pop
insb
jns
jecxz
inc
xor
pusha
insb
add
stos
mov
jmp
inc
cmp
roll
push
cli
sub
in
ret
ret
sub
mov
clc
and
dec
sbb
xchg
data16
lds
cmc
pop
clc
add
jmp
jne
int3
cmpsb
repnz
push
push
into
shll
jg
lret
jae
pop
das
cmp
pop
in
mov
cld
sub
mov
ss
mov
into
and
mov
pop
js
mov
mov
hlt
loop
push
imul
into
or
cmp
jl
xor
fistl
fdivp
daa
xlat
or
push
push
dec
jg
pop
popa
mov
mov
mov
jle
jae
jle
push
aam
mov
cmp
lret
jns
negb
xor
cltd
mov
inc
xor
testb
xor
rolb
scas
cmp
outsl
sti
push
xchg
xchg
xor
cmp
pop
mov
push
inc
sbb
aas
mov
jns
jmp
imul
call
shrl
push
cmpsb
xor
fsubs
and
fstl
test
pop
inc
add
rcrb
in
fimull
sub
xchg
jbe
test
xchg
roll
xor
test
int
xchg
jle
adc
testb
jecxz
aam
cld
push
pop
fidivl
inc
negl
xchg
or
sbb
add
insb
mov
lahf
icebp
adc
js
adc
test
arpl
xor
and
or
jge
dec
jo
sbb
mov
add
daa
mov
repz
icebp
adc
movups
jae
cltd
or
mov
mov
sahf
cmp
insb
mov
xor
fmull
je
inc
daa
jo
idiv
addr16
repz
stos
clc
adc
fidivs
pop
das
mov
repnz
adc
jg
loop
inc
test
rolb
or
lods
xchg
push
xchg
adc
dec
pusha
jmp
rcrl
pop
fld
push
leave
jbe
test
pop
mov
stos
jnp
mov
lods
or
int
cmp
push
push
xor
add
and
add
lret
mov
test
scas
dec
xchg
sbb
repnz
jmp
movsl
add
ds
bound
lret
jle
add
cmp
ljmp
cmpsb
push
push
pusha
imul
pop
popa
and
stc
jae
outsl
shrl
add
adc
xor
sti
jno
mov
movsb
and
mov
xor
inc
nop
mov
and
or
loope
cmp
xor
cmc
jnp
sub
xor
cmp
xor
xor
and
cmp
dec
inc
sub
pushf
inc
insb
mov
push
out
push
sahf
lock
aad
inc
nop
mov
or
and
sub
imul
jmp
dec
or
sbb
repz
xor
push
repnz
jge
outsb
inc
adc
mov
cmp
cmc
pop
pusha
mov
xchg
xchg
nop
fcoml
jg
pop
cmp
inc
xchg
aad
mov
fldt
fs
jnp
ss
fadd
add
sti
icebp
ljmp
jmp
sub
mov
cmc
mov
and
xchg
in
mov
xchg
dec
sbb
lea
jle
cmpsb
mov
dec
nop
sbb
ds
push
mov
jo
push
sti
out
outsl
lret
mov
xor
ret
pop
or
mov
stos
push
scas
sti
es
xchg
xlat
cli
jb
mov
xor
sub
pop
push
push
pop
dec
cmp
inc
out
iret
pop
jne
out
add
pop
cmc
xchg
sub
mov
adc
mov
ret
sahf
pop
inc
xor
pushf
jle
mov
je
aad
and
psrlw
insl
xchg
imul
les
mov
enter
dec
cmp
push
pop
mov
dec
xchg
jg
and
sub
mov
test
je
aam
ret
add
loope
testl
pop
cmpsl
and
xlat
adc
push
mov
push
or
adc
jl
pop
mov
div
inc
fst
push
jmp
ret
jge
and
mov
push
sbbl
jnp
inc
jae
xchg
jg
xchg
xchg
test
add
cld
sbb
lret
push
xorl
mov
pop
and
mov
add
mov
ja
mov
mov
cwtl
pop
mov
add
cltd
addb
imul
add
adcb
outsb
adc
out
ret
xor
scas
lds
sbbb
clc
xor
testb
lret
dec
mov
outsl
pop
mov
jnp
out
and
repz
adc
jle
pop
push
aaa
mov
or
or
dec
adc
loope
jle
enter
fldl
xchg
pop
add
dec
pop
imul
imul
andb
int3
pop
push
and
out
repz
mov
mov
sti
bnd
pop
xchg
mov
inc
jno
movsb
push
mov
jp
pop
test
push
sahf
fisttps
movsb
jbe
in
jbe
pop
xchg
sbb
fwait
jle
js
lods
jl
sub
scas
jmp
or
mov
add
sub
cmpsb
and
bound
movsb
js
aam
xchg
cli
lds
pop
push
mov
movsb
jp
jns
sub
xchg
xchg
xchg
pop
push
stc
xchg
cs
bound
mov
sub
lods
jne
shlb
and
jmp
mov
leave
mov
out
sub
fildll
mov
enter
mov
xor
ja
push
sub
adc
mov
les
mov
push
xlat
imul
xlat
or
mov
inc
and
cld
pusha
dec
mov
rcll
inc
pop
outsl
mov
add
fwait
lds
xchg
xor
cltd
test
ficomps
adc
xchg
out
jno
mov
repz
jmp
jecxz
sbb
test
add
push
sbb
daa
jb
push
ret
push
sub
jb
lea
movsb
das
cmp
aas
dec
loope
loope
das
ret
jecxz
lods
mov
push
push
pop
clc
xchg
test
shll
ds
jo
dec
repz
and
lock
jmp
mov
jle
push
jge
cmpsb
jmp
xchg
mov
ss
stos
shr
in
jmp
mov
ss
test
and
dec
clc
inc
dec
jne
mov
in
lret
loope
repz
mov
cmp
adc
add
loop
out
mov
std
inc
aaa
das
or
dec
loope
and
mov
testb
stos
dec
popf
dec
inc
add
jmp
fadds
cmc
dec
adc
cmp
cs
bound
mov
push
in
insb
or
jge
mov
or
pop
clc
out
adc
jmp
cs
push
aas
push
shrl
addr16
pusha
sub
mov
xlat
dec
cmp
mov
mov
xchg
push
ljmp
gs
lcall
out
dec
ret
stc
out
popf
repnz
test
jge
sub
adc
adc
cltd
dec
imul
sbb
xor
xchg
xchg
scas
mov
dec
jp
xchg
add
push
and
sub
cltd
mov
or
jns,pt
xchg
pop
add
loope
ja
pushf
mov
jno
dec
sub
les
fildll
leave
in
inc
adc
add
inc
popf
sbb
push
mov
nop
in
fimull
cltd
ret
stos
jecxz
sbb
cld
sub
cmp
mul
int3
push
jg
daa
in
cltd
push
or
adc
mov
or
outsb
cmpsl
adcb
rcl
push
xor
ficomps
sahf
ret
mov
in
sahf
pop
ret
push
fidivs
mov
shl
mov
sub
jl
insl
push
cmc
and
add
xchg
shll
adc
fsts
test
subl
loop
mov
jg
xchg
xchg
pop
fmull
and
repz
lahf
lods
mov
push
lret
mov
dec
and
movsb
mov
fadd
xor
cmp
pop
shrb
repnz
jl
jb
sti
inc
sub
cmc
sbb
dec
mov
mov
jae
inc
sti
addr16
scas
adc
lcall
mov
jbe
inc
cmp
push
fnsave
sbb
pop
jo
popa
loopne
mov
inc
push
pusha
lret
sbb
cs
scas
hlt
mov
mov
push
imul
sub
lahf
jmp
fs
xor
sbb
xor
int3
incb
jl
and
cs
cmp
outsl
ret
add
push
test
sub
out
pop
stos
add
add
jno
push
mov
iret
push
mov
lahf
aam
fcomps
daa
das
mov
popa
ds
and
sub
fnstcw
mov
leave
cmp
cmp
pop
maskmovq
divl
into
jmp
push
and
stc
scas
fwait
in
sbb
add
loopne
jno
add
push
mov
seta
sub
inc
mov
cmp
lret
xchg
add
push
ljmp
mov
ficoml
clc
sbb
arpl
mov
lret
add
cmp
sahf
imul
pop
mov
popa
mov
movsb
lret
and
aad
and
sub
int
jbe
ret
rcrb
xor
popa
sbb
out
icebp
repz
call
cmp
mov
push
cmpsl
mov
addr16
cmp
jecxz
mov
lods
jp
out
mov
in
dec
inc
or
push
push
stos
pusha
aad
lods
in
addr16
sahf
std
inc
ret
mov
add
mov
inc
lret
jbe
mov
out
decl
roll
std
clc
sbb
add
mov
out
jecxz
sarb
in
add
in
cld
sub
enter
push
xlat
mov
or
lods
inc
mov
fstps
xor
mov
jecxz
cltd
inc
bound
sahf
dec
cltd
fisubrl
and
and
loop
cld
xlat
cmova
jne
or
jbe
sub
adc
adc
cmpsb
mov
es
aad
aam
cmp
icebp
lods
sub
mov
stos
sbb
fildl
test
fwait
sahf
lcall
xor
out
mov
into
cmc
xchg
lock
fsubr
icebp
test
lret
arpl
loopne
test
arpl
pushf
lcall
dec
popl
mov
decb
outsl
jecxz
ret
loope
xchg
xor
mov
jno
sub
mov
xor
lock
inc
pushf
mov
dec
xchg
jg
lcall
lods
ficoms
sub
int
stos
sub
pop
clc
xchg
out
cmpl
pop
popa
mov
movsb
into
dec
jge
jns
sub
sub
and
mov
sub
out
lods
test
cmpsb
mov
fcomps
pop
gs
je
mov
addb
bound
pop
and
sbb
cli
mov
aas
jp
ret
add
adc
sbb
scas
add
shrb
outsl
adc
xchg
jmp
adc
sbb
pop
bound
fldlg2
loope
test
mov
cmp
andl
loope
inc
imul
rolb
out
push
mov
pop
dec
outsb
loopne
mov
xchg
jg
into
mov
mov
mov
pop
cmpsl
inc
jg
and
and
out
out
ret
fsub
clc
push
lock
outsl
sbb
push
daa
fimull
or
decb
mov
push
jnp
insb
js
mov
and
jecxz
and
sbb
cmp
cmp
pop
fs
outsl
icebp
mov
and
add
shl
in
push
jb
cmp
punpcklbw
ja
inc
or
rol
sbb
and
es
rorb
dec
loopne
pop
dec
and
xchg
out
fwait
pop
movsl
clc
mov
xchg
sahf
mov
cmpsl
pop
and
jle,pn
int
push
cmpsb
pop
jbe
lock
cmp
inc
pop
das
lret
mov
sub
idivl
loopne
and
jl
adc
scas
ret
xchg
add
pop
xchg
aaa
repnz
ficompl
xchg
jne
jnp
test
xchg
out
int3
sub
jge
mov
scas
lods
and
lahf
add
test
push
cli
xchg
test
mov
sbb
mov
mov
ret
cmp
hlt
adc
dec
daa
imull
mov
xor
pop
movb
and
or
lea
sbbl
mov
lea
and
dec
out
fidivrs
mov
dec
lret
sbb
int
jns
ja
jecxz
stc
mov
shll
xchg
adc
dec
ja
or
cmp
daa
adc
imul
mov
cmpsl
shlb
pop
insl
push
push
call
stc
push
inc
dec
fs
hlt
push
std
mov
cltd
movsl
mov
jno
std
aad
xchg
cmp
pop
fsubrs
jbe
sub
into
in
add
inc
js
inc
stc
or
add
jne
sbb
and
push
fwait
test
push
sub
or
loope
sub
imul
inc
mov
push
into
test
outsb
decl
cmpsb
in
and
push
xor
nop
lahf
int3
xchg
andnps
lods
cld
popf
and
pop
pop
sub
movsb
xchg
xchg
int3
or
sub
mov
andl
ret
and
adc
idivb
out
mov
inc
pop
stc
data16
iret
inc
add
fsts
das
popf
stos
lea
movl
add
lods
jnp
dec
mov
call
xor
call
xchg
add
dec
lahf
pop
test
stc
pop
hlt
cmp
pop
jge
arpl
sub
orb
mov
cmp
ret
add
inc
mov
and
or
out
stos
xchg
cmp
std
stos
faddl
std
je
add
ljmp
push
cmp
sarl
jecxz
in
aad
jmp
lods
mov
sbb
or
dec
and
adc
push
mov
jno
xchg
fwait
mov
cld
std
insl
std
adc
cmp
lahf
and
sbb
adc
pop
ds
pop
rolb
jmp
mov
cmp
or
xor
jle
jnp
ret
imul
js
mov
iret
stos
int3
xchg
cmp
mov
adc
notb
add
hlt
pop
mov
push
sub
repz
jne
lahf
dec
pop
sahf
jl
push
shll
push
cmpsb
mov
sub
adc
inc
imul
and
and
mov
push
add
arpl
push
test
mov
dec
mov
mov
inc
push
inc
subl
sbbb
leave
and
stc
xchg
call
mov
and
push
sbb
xchg
cmp
push
xchg
jmp
insl
mov
ret
cli
loop
in
sbb
mov
cmp
mov
jp
shll
sbb
dec
stos
cmp
in
mov
es
sub
aaa
add
jnp
pop
cmpsl
loope
out
dec
stos
rcll
adc
ret
cltd
sahf
push
mov
jle
stos
in
push
dec
inc
cs
jmp
add
sub
out
out
repnz
pop
cmc
mov
pop
push
pop
je
enter
xchg
sub
pop
mull
fwait
jp
test
or
mov
adc
cmc
loope
xchg
repnz
sbb
push
add
add
in
jl
cmpsb
cmp
xlat
or
xor
test
fs
xchg
xchg
iret
xor
mov
arpl
dec
subl
bound
call
xor
dec
ficompl
pop
mov
xorl
ret
mov
das
sbb
inc
fcompl
adc
sub
cmc
sub
mov
loopne
xchg
pop
inc
call
add
or
dec
je
xchg
sahf
cs
cwtl
jl
vmwrite
push
mov
cmp
xor
popa
push
jle
xchg
leave
fbld
repnz
fwait
add
int3
jp
push
cmpsl
outsb
shrb
jbe
sbb
adc
movsb
jge
add
mov
sub
out
leave
loope
mov
cmp
and
dec
sub
and
and
add
jle
xor
mov
std
jb
lcall
rcrl
ret
mov
scas
shll
lods
fdivs
lahf
pop
icebp
lock
cmp
xor
xchg
enter
push
test
lret
cmp
ror
aad
lock
aas
push
or
frstor
sbb
and
xchg
call
or
pop
scas
fnstenv
mov
push
pop
sub
mov
pop
movsl
daa
sarb
stos
sub
cli
cwtl
add
sti
in
fisttpll
inc
push
arpl
lods
movsl
in
xchg
xor
lock
stos
jno
lods
movsl
xorl
jg
jne
aas
pop
test
fmul
cmpsb
xchg
lahf
shll
sub
imul
jnp
insl
fisttpl
lods
lahf
bswap
jae
push
popf
inc
rorl
pusha
pop
jp
sbb
outsb
mov
push
push
out
sub
pop
adc
hlt
dec
aam
imul
lea
outsb
add
and
shll
jbe
nop
in
ljmp
lods
mov
clc
jp
push
push
mov
mov
sbb
mov
scas
sub
push
out
lahf
orl
sbb
into
jbe
ficoml
xchg
xchg
call
std
negl
adc
xchg
repnz
inc
mov
lret
or
sub
jnp
insb
aad
xor
push
test
xor
int3
dec
cmp
movlps
lods
inc
sub
sub
nop
rclb
mov
sbb
jns
outsl
xchg
mov
cmp
mov
add
pop
in
mov
lods
dec
jb
cwtl
ret
mov
dec
mov
imulb
cmc
xor
dec
mov
xor
or
sbb
adc
inc
xchg
ret
mov
jno
outsl
mov
icebp
dec
dec
sahf
jo
jnp
cmp
insl
sbb
int
in
mov
aaa
sbb
mov
mov
ret
sbb
loop
xor
into
adc
dec
cltd
leave
jecxz
test
xor
ljmp
out
loopne
cld
bound
or
jl
sbb
pop
mov
movsl
jecxz
push
mov
jns
jge
inc
std
or
mov
adc
es
jecxz
sub
sub
dec
pushf
xchg
or
jg
js
adcl
lods
loop
jne
test
and
push
fwait
imul
fisubs
mov
dec
jo
lds
sbb
pop
out
push
cs
xchg
mov
sbbb
gs
rolb
rcrl
clc
test
sub
lret
inc
push
loope
mov
xlat
in
mov
adc
inc
stos
push
adc
dec
pop
dec
dec
fcoms
rcl
ja
jae
sahf
add
and
inc
repnz
aaa
push
cltd
sbb
dec
xchg
or
iret
scas
inc
imulb
xchg
sub
loopne
xor
dec
fs
fstpt
loopne
in
lods
xchg
inc
int
push
xchg
pushl
mov
lcall
jmp
pushl
push
pusha
mov
mov
lock
jle
out
mov
inc
movsb
lahf
inc
mov
mov
sbb
push
and
pushf
dec
inc
fstps
ret
adc
adc
sbb
test
jo
notb
mov
jmp
mov
insb
scas
xor
aam
mov
xchg
mov
xchg
sub
sub
orl
inc
pop
lret
movsb
add
or
imul
shll
lahf
adc
adc
fisttpl
push
cmp
cmp
and
xchg
add
cmpsw
pop
cmp
lods
lods
cmp
loopne
loopne
jg
mov
jo
stc
icebp
cmpsl
xor
call
stos
mov
sbb
loope
faddl
cs
ret
add
add
inc
ret
js
ret
dec
pop
aad
mov
pop
inc
jmp
jle
loop
fstpl
mov
addr16
outsl
mov
ret
mov
lcall
fwait
iret
jge
mov
jp
push
insb
pop
jne
movsb
imul
jle
mov
arpl
icebp
pusha
fistl
pop
cmpsb
xor
mov
adc
rcl
imul
sahf
jp
enter
pop
loope
push
shrb
sbb
mov
mov
fs
mov
dec
ds
push
jbe
push
loop
fildl
or
das
mov
adcb
rcrl
dec
pop
imul
xchg
cmpsl
adc
aam
ljmp
mov
loopne
insl
fstl
ror
push
lret
cmp
xchg
sub
and
jmp
int
xchg
jl
add
outsb
pop
xorb
rcll
sbb
enter
outsb
aas
push
add
loop
mov
pop
dec
add
xlat
add
mov
jmp
adc
dec
fwait
pop
sbb
adc
inc
pop
imul
xchg
ret
and
mov
scas
mov
insl
sbb
leave
clc
jge
sub
push
mov
mov
movsl
test
adc
mov
sbb
testl
mov
loope
nop
in
sub
jns
push
or
gs
xchg
dec
push
insb
push
or
mov
inc
cwtl
sbb
or
lahf
cmpl
pop
psraw
or
or
mov
dec
cli
sti
lsl
xchg
sahf
iret
imull
jle
test
inc
adc
sahf
xchg
push
jno
fidivs
jo
push
or
xor
lret
jnp
shlb
push
aas
xchg
divl
ds
or
and
mov
into
cld
mov
movb
jne
repnz
mov
mov
xor
or
and
xor
out
insl
mov
dec
jns
jp
div
stos
push
cmpsb
inc
sub
jbe
mov
sbb
test
fnsave
out
fisttpll
adc
xorl
test
out
push
sub
pop
dec
in
xchg
push
mov
mov
pop
jae
mov
pop
outsb
push
mov
jne
imul
sbb
lods
adc
inc
bound
xchg
mov
sbb
add
cwtl
jmp
push
push
dec
sti
xchg
mov
rcr
divb
rol
dec
or
std
pop
daa
insl
cmp
lea
gs
dec
cmp
push
mov
pop
sub
lahf
sti
jbe
xor
fdivrl
mov
insb
pop
ret
jp
ja
repz
dec
lahf
insb
jb
cmp
mov
or
add
cltd
mov
xchg
fdivrl
sbb
jl
outsb
mov
pop
xchg
dec
mov
mov
outsb
jg
mov
cmpsb
int3
pop
fwait
jno
adc
cmp
mov
js
pop
cmc
cmpsb
dec
loopne
repnz
mov
cmp
insl
mov
pop
int
dec
xchg
jl
insl
adc
fdivrl
sbb
insl
inc
jo
es
pop
ja
mov
insb
pop
pop
push
sbb
in
lret
xchg
or
xorl
das
stos
jno
outsl
insl
sbb
inc
aas
mov
movsl
mov
add
fldt
movsl
dec
sub
and
sub
jecxz
sub
pop
mov
adc
icebp
pop
and
lret
pop
jge
aaa
push
shr
ret
int
push
cmp
xchg
je
jne
jae
je
sahf
inc
jl
pop
sti
dec
adc
scas
mov
iret
or
jecxz
iret
lds
adcl
sbb
gs
jns
idivl
lahf
bound
mov
daa
dec
lcall
das
jg
enter
das
mov
stos
mov
mov
push
push
scas
add
sbb
fs
fucomip
xchg
int
xor
mov
arpl
shrl
je
push
add
repz
ss
push
inc
dec
out
xor
inc
xchg
adcb
or
lods
xor
mov
scas
xchg
incl
push
stc
pop
loopne
in
dec
cmp
mov
xchg
cmp
cltd
and
sbb
xchg
push
push
aam
mov
in
sbb
cmc
push
repz
cmpsl
mov
push
mov
jne
xchg
xor
adc
imul
in
or
sahf
jl
fdiv
mov
jno
jge
js
ret
les
inc
rolb
std
jl
addb
cmpsb
rcrb
jno
fs
popf
dec
sbb
dec
mov
adc
idiv
stos
imul
negl
push
jnp
inc
fbstp
pushf
xor
in
and
jb
xchg
imul
lcall
jmp
fnstenv
add
push
dec
pop
and
mov
aam
mov
cmpb
xor
inc
icebp
in
mov
mov
insb
pop
mov
out
jmp
dec
mov
jbe
push
subl
pop
ja
data16
mov
push
mov
pop
jg
lret
adc
xor
inc
xchg
mov
lds
jae
mov
jbe
or
push
xchg
arpl
pop
cld
mov
sub
out
xchg
mov
dec
out
jecxz
subb
dec
pusha
in
cs
inc
cmp
pop
pop
outsb
movsb
test
pop
fucomip
xchg
pop
in
ret
rorb
or
inc
pop
cmp
std
fbld
dec
ds
test
mov
loope
push
xor
stos
cli
adc
nop
test
pop
sub
fwait
lock
fsubs
cmp
nop
mov
dec
in
cmp
call
jp
loopne
mov
mov
inc
movsb
pop
sbb
mov
mov
and
xor
shrl
fisubs
push
mov
aaa
adc
mov
push
pop
out
push
jb
push
inc
or
stos
dec
outsl
fsub
mov
mov
add
inc
pop
xchg
cld
fwait
pop
pusha
jg
mov
lcall
imul
pushf
pop
mov
inc
ja
mov
aam
iret
add
jge
xor
fidivs
dec
dec
fbld
jecxz
xor
loop,pn
shl
mov
pop
cmp
sub
shl
mov
cli
jg
add
lea
xchg
cmp
jmp
push
lea
and
mov
lock
pop
xchg
cwtl
in
dec
int3
cmpsl
inc
aam
jns
mov
mov
mov
fstl
lock
into
cmp
into
ja
push
jle
inc
repnz
jg
push
dec
out
add
mov
xchg
movsl
inc
into
dec
out
lds
sbb
adc
xchg
push
adc
xor
dec
hlt
sti
mov
sub
aam
push
adcl
iret
dec
push
pop
lods
mov
mov
xchg
push
int
cmpsb
jecxz
ss
jo
push
fcmove
xchg
lret
mov
adc
lahf
sarb
ss
lods
mov
out
daa
xlat
pop
mov
sbbb
mov
jo
xor
sub
dec
add
sub
pop
jns
adc
xor
lea
xchg
add
adc
or
adc
repz
jmp
pop
jbe
jbe
int
xchg
or
sbb
adc
mov
lcall
scas
sbb
loope
in
pusha
std
jno
and
mov
mov
mov
push
mov
mov
and
adc
jecxz
dec
aad
subb
and
sbb
stos
movb
dec
sahf
bound
lret
xchg
subl
filds
daa
mov
sbb
outsb
adc
or
mov
outsb
cmp
push
pop
xor
enter
repnz
push
fs
inc
mov
lods
das
and
es
inc
ret
leave
mov
and
loop
stos
push
ljmp
add
lds
inc
in
aam
add
push
icebp
aaa
mov
or
adc
cmpsl
mov
mov
in
ljmp
xor
arpl
icebp
mov
pushf
cmp
xchg
pushf
shlb
imul
inc
std
cmpsb
mov
push
rcll
xchg
cltd
insl
jbe
lock
cmp
js
popa
inc
mov
int
lret
loop
lcall
push
sbb
xchg
movsl
inc
cmp
mov
mov
ret
sahf
scas
cmp
mov
cmp
inc
adcb
scas
test
outsb
imul
push
test
mov
jmp
pop
int
mov
xor
jle
es
or
or
les
cmpsb
rolb
push
inc
or
mov
push
lds
imul
insl
jle
and
dec
shrb
loop
push
sub
xor
inc
pop
out
fdivp
int
insl
or
xlat
enter
sub
dec
clc
mov
xlat
push
mov
out
repnz
out
ret
push
jae
imul
mov
inc
xchg
mov
mov
sbb
sbb
lea
mov
mov
lea
pop
stos
je
sub
jns
pop
pop
mov
mov
pop
lock
rorb
sbb
sbb
sub
test
outsb
sub
enter
mov
cwtl
sbb
jo
out
imul
sti
pop
dec
loopne
leave
sti
pop
in
sub
not
cmp
push
insl
pop
in
add
mov
push
ljmp
dec
dec
xchg
fwait
divb
int3
std
nop
repz
pop
xchg
leave
inc
or
andb
fistpl
inc
sub
and
js
or
jnp
bound
test
test
jg
push
push
shrb
jp
ss
repnz
mov
in
daa
pusha
xor
scas
or
cmp
sbb
aas
dec
inc
and
xlat
push
cmpsb
insb
dec
into
mov
repnz
aam
dec
notb
mov
rcr
repnz
jno
pop
inc
push
inc
cmc
pop
enter
mov
sub
push
inc
hlt
mov
test
stc
mov
lahf
add
and
cmp
mov
pop
test
daa
xor
pop
lods
rdpmc
or
push
xchg
sub
lds
push
imul
loop
pop
cmp
jbe
jl
andl
cs
lds
mov
jg
data16
jle
insl
lret
ret
lods
icebp
pop
sahf
mov
dec
into
loopne
jle
xor
testl
popa
mov
dec
cmp
movsl
fildl
jg
rcll
adc
cmp
jo
clc
mov
dec
notl
mov
jno
mov
xchg
mov
xor
adc
push
jno
cmc
es
in
test
sub
sub
jns
push
jb
mov
pushw
jnp
lret
push
jbe
sub
jbe
lea
and
dec
loop
cli
stos
stos
repz
scas
outsb
sub
pop
mov
jae
cmp
adc
cmpl
out
and
and
imul
fisubl
in
push
in
cmp
lcall
mov
addr16
or
dec
cmc
test
cmp
mov
push
clc
jbe
insb
mov
icebp
stos
mov
fidivs
jp
loop
mov
repz
fs
std
js
outsl
int
dec
sbb
je
in
std
sbb
out
pop
xchg
jge
jb
push
int3
mov
enter
scas
leave
and
add
mov
or
and
push
lods
lds
cmp
scas
andl
mov
sbb
fsubp
in
das
adc
mov
push
push
mov
add
cmp
add
jnp
pop
out
sub
or
out
push
addr16
xor
in
or
mov
sahf
mulb
test
sbb
jp
rcl
lret
push
mov
fisttpl
test
insb
jb
lret
or
and
add
in
lret
xor
cmp
jle
adc
push
loop
mov
dec
sbb
push
movsb
and
jb
jae
xlat
xchg
mov
daa
mov
adc
xchg
pop
in
sbb
setge
mov
mov
jno
dec
sar
xchg
or
rol
int3
mov
subb
shrl
in
add
lods
or
sahf
push
sub
pop
mov
daa
cwtl
iret
inc
dec
dec
adc
xchg
jmp
inc
shlb
sbb
ficompl
mov
mov
lret
in
pop
add
inc
pushf
mov
fnstsw
or
popa
in
sarl
push
lods
cmp
lods
pop
sbb
js
sub
stc
pop
ljmp
inc
inc
and
mov
rolb
sbb
sub
inc
popa
xchg
pop
inc
inc
int3
or
movsb
pop
mov
loope
mov
movsb
sub
clc
dec
int3
and
jnp
ljmp
rclb
jo
pop
pop
jb
sbb
mov
push
push
cmp
mov
adc
push
xor
cmp
jbe
push
dec
push
xchg
and
popl
mov
icebp
sarl
pop
dec
xlat
adc
ds
or
outsb
cmpsl
cmp
add
stc
push
movd
and
test
loope
mov
mov
lahf
mov
iret
xor
dec
dec
ljmp
out
in
shlb
fstl
and
cs
and
pop
dec
daa
repz
pop
jl
xor
push
mov
cmpsl
div
stos
push
dec
shrb
mov
out
cmpsb
or
push
xchg
sub
sti
add
dec
push
xchg
testb
ja
push
adc
jo
xchg
sbb
pop
mov
mov
ljmp
mov
mov
hlt
mov
imul
add
jle
jp
mov
sbb
popf
xchg
js
push
cwtl
mov
hlt
filds
xchg
addr16
cmpb
iret
movsl
aas
pop
xchg
test
push
inc
int
repnz
rcr
stos
jae
inc
sahf
and
pop
jecxz
push
outsl
sub
mov
or
fistl
pop
xchg
insl
lds
scas
mov
mov
cmp
movsb
lods
rcrb
and
or
adc
xlat
mov
add
mov
lea
adc
sti
and
add
pop
mov
or
pop
movsl
push
pusha
imul
add
push
inc
test
and
mov
les
mov
sti
or
das
out
push
push
lock
adc
xor
cmp
pmulhuw
pop
movsb
fidivs
push
or
loop
cmp
sbbb
out
jg
inc
add
enter
mov
pop
and
into
sub
nop
add
mov
aaa
js
out
cmp
lahf
mov
iret
cld
pop
in
mov
pusha
rclb
jb
popa
sub
xchg
push
into
sub
loop
add
adc
cmpsl
rcrb
js
and
jo
add
sub
aad
xor
cmc
lock
dec
sub
inc
mov
push
mov
jp
int
mov
repnz
sbb
pop
loope
scas
pop
pop
inc
jecxz
lea
addl
add
cli
imul
xor
xchg
pop
lds
lret
and
ljmp
and
xchg
into
sub
lret
cmc
je
xchg
ret
xchg
dec
mov
addr16
and
push
std
cmp
lret
sub
leave
dec
inc
hlt
xchg
pop
rcrl
nop
sub
stc
jmp
pop
stc
sub
in
xor
push
push
fisubrl
daa
pop
and
mov
add
out
dec
xlat
popf
cmc
cmp
fst
xor
jge
outsb
sahf
lock
es
mov
cmp
aam
xchg
lods
mov
sub
imul
sti
aam
mov
int3
out
push
rcrb
or
sbb
into
mov
cmpsb
mov
mov
mov
aam
inc
xor
movswl
inc
push
sbb
fisubs
mov
ret
add
xchg
sub
in
repnz
jb
cs
loope
in
shlb
mov
imul
dec
mov
fs
rcrb
xchg
stos
adc
cltd
add
inc
mov
fwait
sti
pop
mov
mov
cmp
xchg
ds
scas
pop
pop
insb
mov
sbb
mov
rcrl
sub
pop
push
jne
push
ds
addb
xchg
mov
test
aaa
adc
stos
repnz
insl
pop
mov
scas
inc
jmp
sbb
xor
or
in
xchg
push
sub
sbb
jb
add
scas
fsubp
fistpll
mov
adc
test
jmp
rcl
adc
fisubl
pusha
outsb
aad
dec
add
adc
dec
adc
mov
jo
outsb
sbb
cmpsb
cmp
xor
jge
fdivrs
test
les
clc
mov
mov
arpl
adc
enter
cltd
and
adc
in
jp
pusha
cwtl
arpl
fisttps
mov
out
and
pop
xor
dec
cmpb
inc
push
mov
mov
int3
and
xchg
loop
cltd
dec
fbld
pop
mov
sub
jl
mov
aaa
push
insb
jnp
cs
out
cs
movntps
sbb
scas
mov
rcll
ja
push
aad
xor
popf
lods
push
sbb
pop
cmp
ror
dec
push
clc
mov
cltd
das
mov
mov
add
mov
xchg
mov
out
ja
ret
xchg
sbb
iret
and
pop
mov
jnp
cltd
fwait
les
or
add
dec
inc
repnz
pmulhw
outsb
lds
jno
add
dec
add
clc
bound
pop
into
mulb
ret
cmpsl
mov
ja
hlt
push
negl
adc
fs
fidivs
pop
fxch
xor
pop
cld
int3
pop
stc
or
movsb
les
sbb
loope
pop
lahf
push
xchg
stos
insb
idivl
jo
adc
pop
adc
bnd
testl
push
les
scas
lods
aad
fildl
call
les
out
dec
ret
mov
popf
mov
ffreep
sti
les
jae
cmp
sbb
scas
mov
pop
fsubrs
cmpb
sub
outsb
sub
and
ss
xor
adc
ljmp
pushf
jmp
jle
fcompl
stos
sahf
fldenv
adc
sbb
les
loop
mov
ljmp
lods
pop
cmp
imul
mov
sub
adc
adc
dec
xchg
mov
and
xlat
xchg
jae
xchg
sbb
mov
mov
xchg
fidivs
add
and
cmpsb
mov
lahf
lret
xchg
pusha
lcall
mov
call
pshufw
mov
lods
call
or
out
xorb
mov
aas
outsl
cmpsb
adc
mov
sbb
jno
js
adc
fcompl
sub
lcall
iret
test
adcl
iret
jno
mov
mov
shrb
in
rcl
cmc
lods
inc
lcall
jne
arpl
pop
mov
mov
repz
dec
adc
test
sbb
mov
adc
add
cmc
fnstsw
aad
popa
mov
and
inc
jae
xor
js
xchg
incb
pop
mov
jmp
push
ja
sub
sbb
pop
subl
sub
in
lods
add
mov
les
cs
adc
push
imulb
call
jmp
aas
cmp
rcll
dec
lock
jns
jl
mull
cmp
fsubs
fistps
push
in
and
push
mov
pop
in
cs
jmp
mov
dec
push
imul
xchg
out
gs
jne
arpl
xor
pop
cs
movsl
pop
jp
or
pop
jecxz
clc
rorl
hlt
mov
mov
jbe
lahf
sbbb
adc
xor
mov
sbb
mov
jmp
das
popf
pop
pop
cmp
ds
bound
shrb
push
xchg
adc
out
pop
xor
xchg
stc
inc
and
xchg
popf
nop
adc
sbb
mov
popa
and
jl
mov
cmp
jmp
imul
jb
inc
sbb
je
jns
pop
ss
pop
mov
add
ja
test
and
jge
outsl
mov
mov
push
adc
fst
and
fisttpll
movsl
jno
cmp
icebp
pusha
jbe
loope
mov
mov
fdivl
or
xor
icebp
mov
cwtl
mov
jmp
sub
push
or
sub
jg
insl
into
jnp
or
ljmp
jecxz
mov
rcrl
pop
les
add
popf
push
pop
scas
jp
add
fstl
lods
scas
and
daa
cmp
jns
cmp
mov
icebp
out
fists
and
sahf
adc
jnp
jmp
xchg
push
pop
cld
or
add
mov
add
enter
sbb
int3
inc
cli
dec
sub
inc
mov
aas
loop
adc
sbb
push
mov
pop
pop
test
push
or
insb
cmp
ss
jno
push
xor
cmp
test
dec
or
mulb
into
mov
fidivrs
aaa
shlb
jns
sbb
fisttps
pushf
and
not
cli
pop
into
cmp
and
ud1
pop
mov
or
add
bnd
jmp
dec
in
dec
and
xor
std
mov
cmc
lods
adc
cmp
lahf
jb
xchg
xchg
sbb
ljmp
pop
pop
mov
jne
jecxz
ljmp
jmp
movsb
cmp
lds
cmp
adc
nop
mov
mov
cmp
loopne
push
imul
dec
sbb
sub
outsl
dec
jmp
mov
sbb
cwtl
mov
pop
fildl
fidivrs
imul
out
fildll
fsubl
ja
jecxz
arpl
adc
lds
inc
popa
mov
in
cmp
cltd
push
adc
dec
add
xchg
ljmp
jno
mov
addr16
shrl
mov
mov
sbb
and
mov
sti
mov
pop
pop
push
insl
jecxz
jmp
mov
and
sub
ja
or
push
lods
call
inc
xchg
pop
jl
repnz
dec
pop
repnz
das
xor
aad
mov
loop
mov
test
cmpsl
scas
rolb
xchg
mov
or
pop
seto
shlb
mov
in
loop
sbb
inc
mov
in
push
std
aad
or
mov
dec
fidivrl
jmp
adc
adc
frstor
or
push
mov
test
out
shr
fstp
mov
and
mov
aad
jge
or
in
mov
push
fidivl
jnp
fcompl
in
insl
pop
out
or
mov
pop
xor
mov
pop
icebp
loopne
insl
in
mov
mov
out
adc
addl
shll
mov
sbb
pop
scas
insl
into
push
xchg
test
ret
push
shl
cltd
mov
cwtd
test
push
inc
cld
cltd
test
lahf
enter
xchg
inc
negb
outsb
shrb
insl
leave
loope
or
jo
or
xchg
pushf
sub
mov
loope
movsl
imull
sbb
mov
sbb
jae
dec
popl
mov
in
adc
jmp
orb
and
sbb
cmpsl
out
std
inc
and
lcall
clc
aad
and
bound
sbb
in
popf
insb
js
sub
lcall
inc
mov
fstpt
adc
fimuls
das
cmpsb
jle
stos
ret
adc
int3
popf
push
mov
and
movhps
push
fdivl
dec
push
insl
sbb
repnz
jae
xor
ljmp
adc
inc
inc
icebp
xor
icebp
and
push
dec
cmp
rcrb
lods
sbb
cmc
xchg
sbb
mov
cmp
ret
fldt
in
rcr
mov
fistl
int3
hlt
and
inc
aas
sbb
negl
push
gs
scas
xchg
push
cltd
ret
cvtps2pi
push
cltd
sbb
xorb
scas
push
in
leave
or
fwait
add
sbb
mov
fildl
sbb
inc
repz
jl
or
xchg
leave
fisubl
roll
test
xchg
loop
fs
jmp
pop
xchg
xchg
add
sub
xor
fld
sbb
sub
cmp
xchg
jmp
pop
lock
fwait
xchg
outsl
mov
jne
cmp
imul
or
mov
lock
aas
inc
inc
xor
fs
dec
or
mov
cmp
outsl
mov
arpl
je
mov
mov
repz
cmp
add
mov
add
ret
or
fxch
and
lret
jmp
iret
out
ljmp
addr16
daa
push
int3
data16
inc
shr
lcall
ss
or
mov
hlt
cmp
jbe
jl
mov
cwtl
daa
in
iret
loop
inc
mov
mov
lds
pop
mov
jl
cltd
mov
xchg
cmpsb
pop
in
insb
fadd
dec
loop
in
outsl
mov
adc
fadds
cmc
push
sub
push
out
imul
gs
sbb
mov
mov
sbb
add
out
lods
and
jle
push
mov
push
dec
add
jns
adc
mov
mov
add
mov
int3
mov
sbb
fsubr
mov
and
lods
das
adc
ds
lds
icebp
jp
loope
pop
sbb
dec
sub
sbb
cmp
pop
fdivl
fwait
cmp
es
mov
sti
cmp
or
xor
sbb
inc
testb
or
ljmp
cld
mov
lahf
mov
xor
mov
icebp
lock
push
jno
mov
sub
int
push
pop
test
test
push
push
sbb
jae
lock
cmpsb
out
mov
int3
mov
jg
sbb
mov
mov
adc
pop
or
xor
jbe
cmp
cmp
sub
repnz
push
inc
pop
or
insb
hlt
cld
pushf
sbb
adc
mov
cmpsl
in
inc
add
mov
push
dec
mov
mov
insb
popf
or
or
push
movsl
test
daa
fstl
sub
or
call
das
cli
lcall
xchg
mov
into
not
pop
and
inc
jp
sub
enter
adc
xor
mov
jmp
adc
xchg
mov
cmp
ret
adc
pop
push
jge
adc
mov
scas
add
ljmp
dec
cmp
icebp
push
mov
push
hlt
jae
popf
mov
xor
jb
outsb
ret
push
dec
jns
push
int
push
cmpsb
push
push
dec
xchg
lret
cli
xchg
ret
aam
add
loope
dec
or
pop
es
jg
dec
or
jecxz
add
shrl
js
xchg
insl
cmpsb
dec
hlt
imul
movsb
add
lahf
jecxz
cmp
inc
int3
cwtl
push
lock
adc
ja
pop
jo
mov
cmp
shll
or
and
jne
fnstsw
insl
lods
in
in
stos
mov
mov
roll
outsl
mov
outsl
mov
push
xchg
push
cwtl
sbb
inc
adc
in
jns
es
dec
pop
fcomps
xchg
arpl
movsl
insb
and
flds
dec
push
jne
push
dec
ret
push
and
sbb
adcl
fsts
adc
jnp
mov
fnstenv
dec
cmp
mov
push
das
mov
push
lods
sub
out
clc
lea
outsb
gs
icebp
add
xchg
push
movsl
xchg
into
aad
xchg
jl
outsb
test
icebp
mov
movsl
les
inc
pop
sahf
out
xchg
push
mov
test
jae
jle
cwtl
lahf
push
jl
mov
js
clc
xchg
mov
loop
xor
repnz
sbb
sub
ss
sub
lea
testl
mov
sbb
decl
sbb
push
call
sub
add
mov
stos
jge
popa
mov
popf
add
or
dec
leave
test
cs
fildl
xor
jns
fidivl
fsubrs
sub
push
popa
push
outsl
pop
push
add
inc
fs
rcll
popa
sub
mov
jnp
jae
xchg
cwtl
pop
pop
rcrl
push
mov
std
outsb
and
les
outsb
jp
cmp
xchg
push
mov
dec
outsb
mov
jo
pop
mov
jge
xchg
movsb
ljmp
mov
dec
jb
sub
outsl
subl
mov
cmp
and
test
sub
cmp
ljmp
cmp
xor
ret
lret
aad
sub
sbb
xorps
cmp
and
je
push
gs
in
mov
aas
loope
inc
xchg
adc
sti
add
enter
into
inc
sti
or
adc
pop
bound
into
and
inc
dec
jns
mov
mov
cmp
repnz
jne
es
sbb
pop
shlb
mov
jns
repz
push
add
stos
push
sub
cmp
out
sbb
or
ret
loope
outsl
push
fcoms
pop
out
ret
outsb
les
mov
icebp
lcall
ds
and
leave
jno
xor
mov
xor
div
cli
cmp
xchg
pop
dec
inc
adc
loop
sbb
rcl
or
cmpsl
es
leave
push
mov
jg
mov
dec
pop
pop
mov
or
fdecstp
repz
lds
pop
mov
cli
sub
or
ficompl
mov
inc
push
mov
push
ljmp
movl
inc
fsubl
cltd
and
lcall
dec
pop
outsb
jbe
inc
data16
dec
addps
dec
insl
sahf
mov
popf
popf
es
dec
test
lods
mov
cmp
sub
in
in
cwtl
js
cmp
mov
popa
xchg
mov
aaa
and
cwtl
push
shll
lock
outsb
push
and
or
pop
sbb
data16
and
vmulps
push
sub
cmpsb
mov
mov
lea
lock
popw
xchg
add
inc
inc
or
xchg
loopne
inc
loop
pusha
sub
mov
std
loope
inc
xchg
jecxz
sti
scas
fs
and
incl
xchg
sbb
sbb
mov
push
dec
popa
lock
das
mov
pop
cwtl
sti
and
mov
sub
fistps
call
mov
ret
mov
test
xchg
movsl
in
fstp
idivl
cmp
inc
or
dec
lahf
fistpl
or
xor
incb
lock
sbb
or
cmpsl
dec
loop
fisubs
pop
call
xchg
or
push
sbb
adc
sarl
inc
xor
scas
xchg
mov
test
sbb
mov
mov
lahf
ret
mov
add
push
ja
adc
adc
ja
add
mov
sahf
out
lock
and
fldt
push
push
mov
mov
sub
daa
iret
sbbb
push
lret
call
iret
mov
bound
or
dec
push
and
xchg
or
dec
outsl
gs
repnz
cli
push
in
stos
or
sbb
xor
mov
jmp
adc
inc
xlat
mov
xchg
mov
pop
aas
and
lods
aam
lea
adc
mov
stos
jge
or
int
xor
dec
in
insl
jne
lret
sbbb
stos
hlt
lahf
dec
adcb
push
stc
inc
dec
push
xchg
add
lret
cmp
jnp
and
xor
sbb
movsb
pop
push
aas
popa
and
mov
fs
cmp
xchg
out
xchg
es
scas
in
xor
test
into
adc
xor
rorb
cmp
jns
or
out
daa
jnp
cwtl
rcll
sbb
jle
sub
jl
popa
mov
mov
jmp
das
hlt
lods
jg
jo
cmp
jno
out
add
xor
push
jmp
jge
push
mov
hlt
inc
mov
mov
cmp
lock
scas
mov
incb
mov
adc
dec
lods
scas
lods
mov
pop
cmpsl
fxch
in
or
and
lcall
fdivrp
in
movsb
xchg
test
std
aaa
scas
xchg
sub
les
ficompl
pop
dec
xchg
mov
dec
test
sub
jp
dec
inc
sbb
mov
insl
pop
sbb
add
jne
das
xor
iret
jbe
lea
or
aad
nop
pop
and
mov
cmpsl
sbb
inc
cmp
popa
or
int3
in
lret
or
lods
or
mov
aas
add
out
jns
adc
xor
mov
test
add
inc
cs
loope
xchg
mov
shl
es
int
mov
push
les
gs
jmp
dec
imul
or
cmpsb
shl
cld
xor
clc
mov
xchg
mov
out
mov
aas
and
mov
icebp
push
je
mov
lcall
pop
mov
jge
bound
outsb
mov
xor
jne
je
outsb
inc
outsb
pop
jmp
mov
inc
push
jmp
loopne
loopne
push
jge
xor
mov
shl
mov
push
jb
repnz
lret
dec
and
dec
popf
hlt
push
and
inc
in
cli
test
mov
das
mov
adc
push
push
call
lds
nop
inc
nop
xor
and
sub
cmc
adc
test
pop
enter
xor
lret
loopne
xlat
jl
adc
fmull
js
cmp
mov
fs
and
xchg
jge
mov
mov
cli
idivb
sbb
hlt
sbb
add
icebp
xor
mov
ds
push
in
push
add
insl
mov
jo
dec
test
or
dec
pop
mov
or
pop
mov
gs
cmp
add
cld
popa
add
lret
mov
lods
add
stos
repz
inc
lods
mov
or
addr16
rorl
cmp
in
add
sub
mov
inc
popf
lret
out
cmp
sub
lds
sub
cmp
sbb
inc
stc
lea
mov
jge
xchg
xchg
ja
mov
enter
and
mov
andl
sbb
fildll
add
repnz
or
add
adc
aaa
mov
js
pop
fsubl
xchg
dec
imul
sahf
jmp
sub
ror
xor
fs
mov
ds
test
ljmp
mov
mov
int
icebp
push
mov
stos
mov
push
cmp
cmc
and
out
add
dec
pop
addr16
cmp
dec
sti
adc
mov
fldenv
xor
mov
call
imul
sbb
sub
popa
xchg
jl
shl
xchg
jmp
cmpsb
pop
into
mov
dec
insb
sbb
bound
adc
push
jecxz
jp
cltd
add
pop
in
fld
jmp
ljmp
pop
push
push
jae
outsb
pop
ss
mov
cmp
lock
xchg
lcall
repnz
cltd
dec
pop
adc
pushf
mov
in
movsb
cwtl
push
aaa
out
xchg
gs
inc
ja
mov
jo
inc
dec
rclb
mov
pop
mov
roll
mov
ret
mov
dec
dec
lods
inc
jecxz
xor
jecxz
iret
in
push
jnp
sarb
xorl
xor
gs
pop
push
sti
mov
icebp
insb
adc
fisubrl
cmp
xchg
mov
fadds
jmp
mov
in
stos
jo
aas
xchg
mov
adc
mov
call
js
dec
and
dec
iret
jnp
lret
cmp
imul
add
mov
or
stc
aad
dec
inc
mov
cmp
mov
xchg
xor
andl
repz
push
scas
pop
pop
pop
xchg
adc
mov
test
cmpsb
cmp
jnp
mov
cmp
or
lock
jp
insl
sub
push
fildll
sbb
xor
pop
aad
push
test
and
js
rolb
sbb
inc
push
stos
enter
push
sbb
dec
jp
push
add
inc
arpl
xor
mov
shrl
jecxz
daa
inc
inc
dec
cmc
std
std
hlt
sub
jge
xor
sbb
in
fidivs
cli
rcrl
test
roll
filds
movsl
ss
xor
gs
sub
sub
add
loope
push
mov
shrb
imul
scas
sbb
add
movsl
repnz
mov
cmc
push
or
rcrb
ljmp
pusha
fbstp
lods
or
adc
cmp
adc
jge
adc
adc
dec
inc
fdivr
call
pop
shl
add
and
xchg
xchg
xchg
ds
jnp
jg
lahf
imul
out
or
adc
xorl
mov
js
xor
imull
scas
in
arpl
fwait
sbb
mov
mov
cld
imul
cs
mov
mov
or
mov
jb
sti
jo
fsubrs
xor
jl
sbb
pop
stos
fwait
sub
pop
xlat
test
movsb
mov
aas
shl
into
enter
repnz
cli
push
ss
aad
bound
les
imulb
dec
push
jp
add
pop
xchg
xchg
pusha
sub
xlat
push
mov
or
mov
cmp
call
cmp
mov
cmp
push
sbb
inc
cs
pusha
repz
mov
push
mov
jl
adc
mov
sbb
repz
cmp
pusha
shll
push
push
mov
jp
xorb
rorb
adc
cmpsl
adc
add
adc
add
xchg
inc
jnp
sub
insl
lret
adc
push
xor
sbb
jmp
repnz
sbb
cmpb
popa
sbb
mov
jae
test
xchg
out
lcall
fdiv
or
in
dec
mov
popa
loope
imul
aam
in
push
mov
repz
mov
xchg
xchg
ret
ret
jno
mov
fildll
pop
and
mov
sarb
nop
and
cld
outsb
in
xor
jae
ljmp
cmp
sti
mov
mov
data16
jecxz
xchg
ficompl
jne
push
pop
lea
sbb
jmp
jmp
sub
rorb
sub
jg
sub
mov
sub
out
cmpsl
sub
adc
dec
inc
dec
std
fildl
mov
xchg
dec
loop
pop
sbb
pushf
and
ror
das
in
ja
sarb
jno
mov
inc
sbb
sub
scas
inc
cmp
inc
sbb
add
mov
rclb
scas
loopne
push
sbb
mov
cmp
pop
ret
mov
add
pop
jge
shlb
jge
mov
ds
imul
inc
insb
lret
rorb
mov
or
mov
inc
std
ljmp
add
inc
fistl
cli
sbb
pop
fidivl
cmp
push
fs
outsb
and
fimuls
pop
outsl
popf
xor
pop
pop
add
leave
addr16
lds
or
fwait
add
sbb
push
fldcw
lods
aam
in
mov
fbld
mov
jb
push
sub
call
pushl
lods
add
push
dec
cmp
aad
sub
in
divb
or
ficoml
xchg
cmp
pop
ret
iret
ljmp
and
mov
leavew
or
arpl
arpl
sub
mov
mov
or
movsl
fsubrs
neg
aad
xchg
enter
mov
frstor
pop
sub
aam
jg
pop
aam
xchg
addb
daa
add
icebp
lret
jecxz
pusha
scas
cli
je
rorb
dec
stc
loop
popa
jae
in
enter
scas
outsb
inc
jne
add
mov
rcr
leave
or
jmp
das
and
fbstp
in
jle
bound
inc
inc
nop
cld
call
dec
push
jp
pop
roll
pop
adc
cmc
mov
pop
dec
ret
push
and
scas
pop
clc
cmp
mov
sbb
xchg
into
xor
push
pop
cltd
inc
xlat
rcrb
popf
mov
mov
jns
std
push
pushw
ja
in
stos
xor
or
jmp
inc
pushf
push
addb
pop
fistps
inc
or
in
insl
outsb
cmpsb
pop
lods
mov
add
lock
push
jnp
aam
jno
insb
nop
cs
cs
xchg
dec
out
xor
push
mov
int3
jnp
add
popa
loope
inc
add
sub
and
int
lcall
xor
lcall
xor
call
scas
jae
lahf
adcb
in
insb
xchg
cli
pop
and
pop
or
das
pop
adc
mov
test
jnp
imul
icebp
mov
scas
fisubl
adc
fldt
cmp
jno
ss
push
xchg
mov
lret
jl
faddl
adc
fsin
ds
xchg
call
inc
aas
insb
or
cmpb
out
dec
iret
jl
sub
inc
loop
pop
scas
daa
jb
add
icebp
pop
push
xchg
das
mov
int3
out
pop
rorb
mov
add
sub
fstps
imul
or
data16
scas
add
fs
push
sub
mov
movsb
mov
pop
dec
sahf
push
pushw
cli
add
int3
mov
xchg
sub
arpl
bound
rolb
addr16
mov
mov
cltd
jge
mov
xlat
mov
push
mov
shrb
mov
decl
int3
aam
test
lgs
and
sbb
mov
inc
shll
push
mov
jnp
pop
pop
mov
push
shrl
mov
adc
adc
mov
lret
lods
fistpl
add
mov
cmp
lret
mov
pop
shlb
mov
clc
mov
lods
and
in
push
push
add
sti
fmuls
pushf
mov
dec
mov
inc
cmp
cli
dec
inc
in
mov
lret
fistps
stos
pop
fiadds
xlat
imul
sbb
roll
outsl
in
aam
sbb
xor
fadd
in
cmpsb
sbb
jno
and
and
icebp
pop
in
inc
push
pop
mov
mov
sahf
stc
pop
inc
or
sub
icebp
inc
mov
pop
aad
sti
pusha
cltd
mov
pop
out
insb
loope
es
shlb
sub
mov
mov
fsubrs
jne
adc
or
imul
mov
addr16
and
gs
jne
push
fidivrl
or
test
in
out
add
in
inc
imul
clc
or
fstl
imul
es
rorl
or
jo
movb
insl
cmp
lods
fstpl
fwait
add
cltd
mov
stos
inc
pop
rorl
push
jnp
outsb
mov
xor
jns
mov
xlat
add
xor
test
loope
aam
pop
lea
xchg
add
jl
fyl2x
jge
and
jo
fldt
sbb
push
dec
in
add
xchg
jge
ljmp
mov
xchg
int
clc
fstps
lods
test
insb
xor
add
mov
scas
xchg
sbb
pop
in
fdiv
jg
mov
enter
and
xorl
sti
cmp
xchg
mov
cli
hlt
les
add
testl
cwtl
pop
dec
jnp
or
push
aad
mov
pop
xor
add
shrl
daa
aas
mov
out
int3
push
fst
and
dec
cmpl
push
movsbl
push
ljmp
imul
pop
movsl
cmp
call
and
sbb
pop
sub
movb
xchg
and
jle
cmc
sti
dec
fiadds
out
pop
adc
lods
ja
cmp
ret
or
pop
pop
in
mov
icebp
or
xor
mov
fstpt
clc
iret
cmp
cld
push
stos
arpl
cmpb
pusha
shrl
sub
dec
sbb
dec
xor
cmpsb
adc
mov
mov
mov
or
out
mov
clc
daa
out
inc
pop
jecxz
xor
fimull
or
dec
fs
inc
jp
inc
xlat
sbb
mov
and
subb
sub
add
movsb
cs
subl
mov
sbb
fdivl
mov
dec
movsb
mov
addr16
lods
or
xorb
ret
cmp
xchg
pop
add
scas
popf
je
push
xchg
pop
sub
out
out
push
mov
mov
mov
bound
sub
test
xchg
shll
dec
sub
add
cld
stc
or
stc
cmp
push
mov
adc
stos
mov
sbb
loopne
mov
mov
repnz
or
pop
jnp
ret
sti
or
sub
repnz
add
and
scas
movsl
pop
sbb
mov
xorb
mov
jmp
mov
inc
sub
cmc
cmp
sub
ret
xchg
xchg
es
clc
rcrl
test
jge
repnz
stos
ljmp
pop
nop
jmp
popa
jae
cmp
jo
mov
out
aas
jmp
imul
pop
lods
inc
mov
lds
pusha
push
push
gs
jp
flds
mov
lea
sub
mov
aaa
pop
outsl
or
fcoms
andb
and
mov
mov
adc
add
fcompl
jnp
cltd
test
push
push
xlat
mov
aam
jns
add
pop
and
xchg
clc
push
jns
movsb
xchg
mov
mov
or
test
pop
sti
dec
mov
xchg
loopne
jmp
sti
sub
push
add
stos
lcall
shrl
cli
sbb
adc
clc
out
enter
lcall
and
inc
mov
adc
adc
mov
inc
ja
jge
mov
ljmp
pop
fisttpll
pop
sarb
adc
cmp
fcomi
mov
cmc
pop
aaa
adc
pop
es
sub
cwtl
lret
jb
rcrl
push
cmp
dec
clc
or
andl
je
std
and
adc
inc
movsl
push
mov
clc
add
cwtl
test
testl
pop
lea
mov
into
pop
leave
push
dec
fisubs
jp
test
jnp
cmp
shl
repz
enter
add
leave
sub
fidivrs
mov
mov
dec
in
test
pop
nop
push
pop
hlt
es
xchg
cmpsb
mov
mov
mov
test
xchg
stos
pop
xor
mov
fsubs
push
mov
mov
jnp
scas
outsb
lcall
jnp
imull
mov
je
xchg
je
pop
dec
in
xor
into
icebp
sub
loope
es
and
lret
sbb
fadd
xor
test
inc
nop
bound
fwait
mov
int3
dec
jns
mov
out
movsb
add
cld
sub
cmpsb
mov
or
out
inc
fs
inc
bound
divb
mov
push
inc
adc
shr
sti
pusha
cs
fistl
push
test
jb
adc
pusha
inc
sub
fisttpl
cld
push
xchg
and
xchg
add
out
fxch
ljmp
popf
pop
jae
or
mov
popa
mov
shrb
fs
icebp
mov
out
dec
in
or
mov
cltd
adc
jb
and
sbb
lock
cld
and
cwtl
jbe
cmp
xor
add
out
inc
mov
addr16
sub
scas
jo
imul
movsl
mov
out
imul
mov
add
into
loope
pop
xchg
popa
mov
ds
adc
aas
push
aam
repnz
cmc
sbb
aas
pushf
fiadds
data16
mov
rcrb
ret
sti
test
nop
push
mov
jne
dec
jecxz
test
cmp
inc
sti
hlt
fldl
adc
sbb
dec
loopne
cld
mov
addr16
mov
sahf
push
mov
inc
lds
mov
and
pusha
test
push
sbb
cmp
insl
mov
dec
jbe
add
lods
inc
popf
aaa
shr
orb
cmpl
and
andl
mov
mov
jns
data16
ss
adc
xor
nop
popf
jmp
dec
repz
mov
movsl
icebp
shlb
or
in
call
sub
cmp
jecxz
in
sbb
xchg
mov
sbb
aas
bnd
mov
mov
mov
push
sbb
mov
jne
jb
cmp
sub
cmp
fs
mov
iret
xchg
stos
cmp
mov
mov
xchg
cs
and
jge
mov
movsl
pop
scas
ljmp
insl
xchg
or
cmpsl
cs
in
sub
pop
mov
mov
stos
test
cmpsb
pop
in
pop
std
gs
or
pop
mov
pop
sbb
lods
inc
push
xrelease
pop
leave
outsl
ret
or
xrelease
fidivrl
jle
dec
daa
daa
adc
xlat
in
mov
imull
add
or
addr16
imull
push
cmc
push
xchg
xchg
lods
jbe
cmpsb
mov
cltd
negl
inc
les
es
pushf
and
in
lret
jle
testl
dec
sahf
movsb
movsb
push
sti
lods
mov
cld
dec
sti
aaa
stos
out
cmp
pop
out
aas
cld
mov
gs
in
fidivrs
dec
bound
mov
repnz
lcall
xchg
mov
cmp
loop
loope
mov
xchg
mov
cmp
lds
jp
sub
test
mov
or
cwtl
push
lods
xchg
cltd
mov
mov
add
or
and
mov
imul
push
add
imull
fstps
fcom
xor
add
leave
mov
js
lea
repz
mov
adc
push
mov
pushf
mov
push
inc
test
xchg
xchg
jecxz
fcomps
insb
aas
push
mov
jge
pushf
mov
xchg
mov
repnz
fs
add
outsl
jae
mov
lea
mov
push
lahf
cs
ss
rorb
mov
fs
dec
cmpb
test
ret
test
inc
add
ss
adc
paddd
adc
sub
jmp
mov
sbb
jp
jl
orb
js
arpl
adc
lock
mov
mov
sbb
or
fistpll
push
jae
lods
xor
std
or
push
icebp
lcall
jecxz
aad
sub
inc
aad
fbstp
sbb
test
push
add
fbstp
push
mov
push
loopne
dec
loop
jmp
push
lret
lret
lods
mov
inc
arpl
add
push
sbb
je
sub
rcll
and
xchg
jae
sub
xor
out
mov
fdivl
cs
inc
push
loop
push
lds
imul
mulb
fs
test
cli
sar
dec
lds
sub
jp
pop
dec
in
sbbl
js
repnz
cmpl
in
dec
ficompl
dec
push
mov
or
xchg
jbe
jno
hlt
jns
mov
cmp
rcll
outsb
push
sub
cmc
mov
and
cmp
mov
aaa
test
outsl
push
push
stos
pushf
inc
icebp
fcoml
lock
or
lock
xchg
mov
shlb
add
cmp
pop
lea
ret
push
adc
xchg
imulb
mov
cmp
test
or
xchg
mov
pop
sbb
xchg
sub
les
out
add
push
pushf
sbbl
jg
mov
and
jne
ret
adc
jno
roll
mov
lret
mov
jne
push
mov
adc
test
cld
movsl
bound
stos
adc
loop
sbb
arpl
mov
iret
sarl
ss
dec
rcll
push
sti
sbb
mov
and
add
insb
add
cmp
loopne
inc
enter
fsubrp
popf
push
sahf
insl
in
sbb
mov
lret
pop
mov
dec
ja
mov
int3
adc
incb
loop
movsl
push
dec
and
in
bound
push
clc
xor
cmp
mov
xchg
mov
xchg
or
lahf
outsb
std
pop
leave
jbe
jo
sahf
fcoml
stc
cmp
or
mov
jne
push
jl
xchg
fimull
xchg
nop
std
xchg
mov
push
aad
pop
jns
mov
adc
in
push
orb
notl
pop
pop
insb
stos
pmuludq
pop
add
sbb
push
cli
fdivrp
ss
js
shlb
pop
into
out
push
jb
adc
rorl
mov
jp
nop
add
push
insl
jmp
sarl
xor
mov
arpl
dec
or
lahf
out
jb
adc
mov
call
aam
sbb
cltd
inc
mov
dec
les
mov
imul
outsb
mov
jo
leave
cld
inc
mov
jne
mov
mov
je
in
addr16
sub
pop
sub
mov
aam
pusha
stos
adc
js
stos
adc
int
mov
enter
xor
add
xchg
push
test
jge
sub
icebp
lcall
add
fdiv
cld
xor
adcl
mov
sub
cs
cmc
nop
mov
mov
and
jne
es
in
push
imul
add
and
push
cmp
sub
in
int
lods
int3
push
inc
clc
stc
dec
lock
enter
jmp
test
dec
daa
js
jne
push
adc
or
inc
add
out
inc
in
sti
mov
mov
adcb
pop
aad
imul
lcall
sbb
add
inc
mov
popf
insb
xor
xchg
insb
mov
lret
push
pop
sbb
and
jb
push
xor
mov
xchg
push
sbb
jmp
adc
cmp
in
push
push
xor
lods
cmpsl
cmpsb
lods
dec
jae
jne
test
out
jg
sbb
rorb
sub
popf
sbb
or
xor
dec
lods
and
xor
xor
mov
ret
inc
fmuls
stos
dec
push
insl
adc
adc
dec
pop
divb
sub
adc
inc
pand
aaa
data16
pop
add
push
add
cmp
rclb
xor
sti
out
cli
push
mov
and
sub
cmc
call
popa
out
xchg
sbb
ss
pop
ds
es
or
fs
dec
lods
imul
fnsave
pmullw
mov
cltd
mov
out
jmp
ss
test
sub
xchg
cwtl
loopne
or
adc
pop
cld
nop
pop
fwait
cmp
sbb
xchg
popf
and
dec
mov
jnp
in
iret
jg
out
popa
imul
les
es
inc
mov
xchg
sahf
sub
and
mov
pusha
sub
jns
rol
cmpsl
push
mov
inc
fs
lret
add
out
xchg
ljmp
and
push
mov
jb
xchg
fwait
cli
dec
jle
data16
sub
cmp
loop
jnp
lea
dec
iret
jg
mov
inc
shll
shl
ret
gs
push
sub
in
push
xchg
fs
scas
mov
lret
push
push
leave
in
cmp
int
clc
adc
lcall
sub
je
or
adc
mov
test
cmp
jg
xchg
rcrb
xchg
mov
mov
jg
subl
aam
add
push
cld
adc
insl
and
sub
int
mov
scas
cmp
and
mov
mov
aad
into
mov
fwait
push
cmpsl
lcall
mov
xchg
mov
sbb
in
add
xchg
dec
les
das
into
add
sbb
fldenv
cmp
fs
xor
incl
in
fimull
pushf
out
scas
sub
mov
fmull
ljmp
push
fwait
add
sub
xlat
sti
aas
test
sbb
fmuls
jp
cwtl
cmpsb
adc
sub
push
mov
mov
sbbb
movsb
mov
shrl
subb
call
lahf
push
clc
push
loopne
sbb
push
xor
xorb
test
cs
add
mull
mov
push
cmc
idiv
lods
hlt
fsubrl
jg
cli
addr16
dec
xchg
push
aas
dec
mov
sub
ds
jp
and
inc
adc
dec
jg
pop
or
or
cmp
add
xchg
in
mov
push
jmp
les
and
test
js
sub
xchg
push
shll
or
sar
cmp
push
fistps
unpcklps
fldl
inc
fsubrl
push
imulb
cmp
in
aam
xchg
xchg
push
push
cmp
pop
sub
pop
mov
je
xchg
cmp
jmp
push
jl
push
rolb
insl
js
cmp
sub
ljmp
or
mov
pop
jle
xchg
imul
mov
sahf
pop
pop
and
or
jmpw
and
or
jb
add
jg
sti
loop
loope
and
and
into
cmpl
arpl
and
es
mov
lock
sbb
push
in
ljmp
iretw
rorb
cld
push
lret
addr16
jge
push
mov
mov
xchg
mov
mov
es
push
shr
mov
loope
mov
cs
and
pop
xor
pop
cld
pushl
xchg
mov
inc
jns
xchg
insb
cs
shr
cmpsl
mov
xlat
insl
lret
ss
in
mov
jmp
mov
inc
in
fidivrs
mov
out
sti
pop
sbb
sbb
inc
cmpb
fcompp
loope
out
inc
pop
mov
imulb
push
movsl
sbbb
and
ret
mov
push
cmpsl
inc
repz
cmp
jbe
dec
inc
sbb
sti
pop
push
into
pop
pop
sarb
pop
bound
mov
jb
lods
popf
inc
xchg
icebp
loop
push
outsb
pop
sub
imul
mov
pop
sarl
les
dec
sub
mov
cwtl
xchg
popf
add
test
xor
inc
lahf
inc
adc
lcall
ja
dec
lahf
out
shll
xor
les
or
in
jmp
and
sarb
add
xchg
shll
outsb
cmpl
popf
xchg
xor
mov
sbb
orl
push
sub
into
pop
mov
mov
sbb
shlb
cmp
mov
ljmp
mov
jbe
mov
sub
cltd
cmpsl
rclb
mov
repnz
jle
and
loop
push
add
stos
pop
pop
xchg
rcrl
in
cwtl
je
cmp
add
test
clc
pop
jp
sub
arpl
out
sti
mov
cmpsb
stos
xor
arpl
jg
adc
cmpsl
push
mov
mov
pop
popa
leave
addr16
sub
add
aas
mov
sub
lahf
lods
push
into
and
leave
insl
cmp
pop
mov
mov
jbe
sbb
movsb
addb
inc
add
inc
cmpsb
sub
push
jmp
sbb
testl
in
pusha
mov
push
xchg
cmpsl
icebp
sbb
dec
jne
pop
cltd
subb
add
or
jns
fdivp
adc
popa
cltd
popf
mov
jne
sub
or
mov
out
push
xlat
movsb
fwait
pop
xchg
dec
lcall
cmp
adc
adc
fildl
cli
inc
fcmove
or
or
mov
mov
xor
cmpb
das
adc
fldenv
mov
lods
mov
fdivp
out
dec
jne
mov
sahf
in
out
cmp
or
and
inc
jp
xor
fdivp
adc
cmpsb
mov
mov
sub
loope
pusha
adc
add
jmp
inc
movsb
mov
les
jl
fwait
lea
shlb
negb
inc
and
sar
insb
incb
sbb
sub
icebp
in
fsubrl
pop
xor
out
sti
push
jns
gs
add
mov
fisttpll
pop
adc
pop
xchg
sarl
dec
jle
lock
mov
lods
adc
es
sarl
push
cld
add
xchg
insl
sbb
les
jns
pop
pushf
or
or
mov
lods
bnd
xchg
push
mov
pop
cmc
dec
jle
cli
imul
rorb
test
ljmp
clc
dec
xchg
add
push
mov
pop
mov
sarb
ljmp
xchg
inc
sarl
sub
insl
dec
push
imul
add
cmp
in
ss
mov
cli
cmp
mov
inc
mov
add
push
and
mov
mov
je
gs
pop
cmp
arpl
stc
arpl
sbb
pop
jne
shll
movsl
repnz
sti
jae
lret
and
xor
or
arpl
mov
mov
xor
cmp
flds
fwait
sub
int3
dec
jbe
add
jle
and
repz
or
sbb
call
or
adc
fwait
aas
cmp
mov
out
testl
push
sbb
arpl
fcomp
ds
fs
mov
ret
or
adc
xor
in
pop
push
pop
inc
jbe
mov
mov
data16
int3
lock
data16
lret
mov
in
popf
or
scas
dec
xor
jno
pop
pop
cmp
in
xor
jp
std
daa
sbb
push
and
push
fsubrp
dec
out
pop
lods
add
dec
mov
mov
xor
dec
mov
aaa
sub
pop
pusha
dec
lea
inc
or
inc
inc
sbb
pop
cmc
icebp
insl
out
sbb
fs
lcall
dec
mov
cwtl
fsubl
mov
lea
push
jle
sub
cmp
dec
xor
lret
cmp
pop
jle
lods
push
outsl
into
dec
ficoms
hlt
inc
fistps
adc
xchg
notb
pop
std
les
push
adc
imull
xchg
out
add
sbb
jecxz
out
mov
stos
sub
xchg
fdivrs
negl
adc
jnp
xlat
ljmp
cmp
into
iret
sub
arpl
push
arpl
cltd
add
outsb
and
add
jmp
or
sbb
jnp
mov
mov
clc
ds
pop
rcll
or
into
test
and
mov
xchg
jae
xchg
dec
mov
pushf
test
and
pop
addb
movsl
add
sbb
loope
sub
rorb
divb
cmp
sbb
gs
aam
repz
mov
mov
js
dec
push
lods
test
inc
sbb
inc
pop
out
mov
insl
push
aaa
and
inc
call
leave
scas
mul
or
or
xor
push
dec
lds
and
jo
dec
popa
iret
test
adcl
test
pushf
and
jnp
adc
adc
nop
stos
add
jmp
xchg
getsec
or
add
adc
scas
sbb
lcall
cmp
pop
out
jb
pop
sti
jns
test
push
mov
shr
lcall
jnp
aas
dec
stc
jae
push
add
xchg
pop
dec
lods
cmpsl
inc
mov
adc
mov
sub
jge
stos
inc
push
push
mov
jae
out
pusha
inc
sub
cmpsl
cmp
aam
xchg
mov
test
jl
mov
out
jns
inc
fdivl
and
enter
push
mov
pushf
lret
jbe
pop
xchg
movsl
xchg
test
lret
push
movsl
jbe
loopne
inc
adc
fnstsw
xchg
fmul
jl
mov
sub
ja
xchg
adc
adc
jmp
jl
pop
pop
sbb
iret
inc
insl
jo
sti
rorl
mov
mov
cwtl
mov
mov
pop
jl
repz
push
test
outsl
out
adc
fsubs
imul
sbb
rorb
js
jecxz
xor
mov
sub
outsl
fsubrp
ret
repnz
les
mov
addr16
mov
test
lahf
fsub
inc
icebp
adc
mov
sub
xchg
push
jne
or
and
test
pushf
movsl
inc
in
insb
test
pop
lret
mov
sbb
xor
jns
fistl
sub
pop
pop
cmp
mov
sbb
sub
xchg
lea
pusha
mov
xchg
shr
movsb
clc
lock
sub
inc
jne
pop
lret
into
push
arpl
ds
and
dec
icebp
mov
dec
std
sbb
das
jno
pop
daa
sbb
xor
push
ss
mov
jae
sub
lret
test
icebp
cli
pushf
mov
sahf
cmpsb
mov
iret
leave
and
inc
dec
xchg
insb
sbb
int
cltd
outsl
pop
and
jbe
fcomps
pop
sub
sbb
xchg
es
pop
ret
mov
sbb
lcall
out
add
aaa
sahf
cmp
push
into
cld
inc
out
xchg
movsb
cltd
shrl
push
das
sbb
repz
ja
cmp
test
mov
or
repnz
push
jnp
cwtl
cltd
lcall
adcl
jg
sahf
sbb
jb
out
mov
dec
cmp
repz
xchg
sub
aas
ds
movsb
dec
aas
lret
sbb
out
cmp
xor
xchg
push
das
xchg
dec
imul
iret
arpl
mov
sahf
negl
cld
sbb
lods
insb
cmc
or
jp
inc
xchg
or
push
lret
mov
inc
in
mov
xchg
aad
sti
stos
push
push
xlat
pop
ss
daa
das
leave
xor
pop
cmpb
scas
lds
cmpxchg
lret
lods
cld
xchg
test
dec
popl
jnp
inc
push
jge
pop
cmp
sub
dec
jmp
shlb
movsb
xchg
add
fstl
ljmp
dec
sbb
add
or
and
addb
mov
jbe
xchg
or
daa
insb
push
sub
xchg
add
or
sub
gs
cmpsl
cmpsl
outsb
pop
cmpsb
sbb
loope
and
mov
ljmp
ljmp
cmp
sub
adc
jmp
or
mov
dec
push
xor
in
add
jmp
aas
negl
and
jg
push
xor
pop
mov
ljmp
ja,pt
shlb
sahf
jp
lret
cmp
push
jo
int
adc
and
js
xchg
les
inc
hlt
lock
mov
push
jle
mov
test
sub
loope
pop
sub
test
adc
push
fdivl
mov
add
mov
mov
and
in
iret
imul
test
out
cs
push
xchg
scas
sub
out
xor
inc
pop
xor
and
cmp
mov
inc
sub
jnp
mov
xor
popf
loope
mov
mov
cmp
and
push
mov
movsb
pop
lds
pop
add
jbe
inc
dec
je
shlb
mov
out
push
mov
sbb
add
push
out
cltd
xor
dec
stos
jne
push
mov
pop
push
aam
add
out
int
adc
cmp
in
mov
nop
sbb
sub
cmp
mov
xor
add
outsb
fistl
add
jno
sbb
jnp
sub
and
fwait
lock
subb
and
test
cltd
jns
sbb
jge
sbb
push
adc
ret
sarb
out
add
mov
xor
es
int
mov
mov
rorb
fcompl
ja
loop
cmc
mov
in
aas
xchg
in
or
movsl
jns
jp
shll
add
xor
xchg
ret
mov
push
loop
lahf
or
inc
jae
inc
xlat
xor
cmp
mov
xchg
pop
sbb
gs
in
mov
sti
jnp
adc
mov
cmp
push
int
imul
adc
dec
jle
icebp
fld
mov
push
or
dec
sbb
enter
add
jge
add
pushf
fildl
pop
xor
xchg
sbbb
xchg
fcomps
jge
ja
mov
fiadds
roll
inc
xor
pop
outsl
jmp
dec
clc
push
fwait
push
add
and
into
xchg
les
sbb
push
fcoms
pop
push
data16
bound
mov
mov
mov
dec
jae
pusha
and
add
xor
jle
jmp
fstps
hlt
mov
sahf
xchg
push
aad
fcoml
dec
andl
ljmp
cmp
out
sub
fimull
jl
addr16
test
fadds
pop
jg
lods
jge
mov
sahf
ja
test
fstpl
icebp
daa
aad
mov
rcrb
aas
ja
adc
push
lcall
roll
ret
test
fcmovb
mov
xor
jle
lock
imul
shll
jg
cmp
pop
bound
inc
mov
jmp
imull
aaa
push
mov
xor
fisubrl
ret
sub
sub
mov
fstl
and
insb
ss
mov
ja
and
xlat
sarl
or
sub
sub
nop
cld
cli
leave
mov
adcl
fs
sbb
pop
pop
lret
sbb
pop
test
mov
ja
mov
fisubrs
fnstsw
imul
fwait
push
xchg
mov
pushl
outsl
mov
cmp
ret
cmpsb
rorb
sbb
and
sub
sar
mov
js
and
push
scas
jg
push
mov
sbb
xor
mov
rolb
cmp
lods
lret
dec
xor
loope
ret
jae
shrb
mov
jge
sbbl
cmovl
js
jp
inc
sub
enter
sub
pushf
adc
and
bound
or
adc
pop
adc
test
push
sbb
mov
pop
das
es
sub
les
in
xchg
sbb
jo
or
call
mov
xor
adc
and
pop
mov
inc
inc
sub
and
sahf
shr
call
dec
dec
mov
or
dec
bound
push
aaa
imul
ja
leave
sub
pusha
jl
dec
pop
shll
cwtl
lret
jbe
add
mov
call
out
sahf
jns
ss
lahf
mov
out
mov
lret
fs
or
fisubrl
xchg
mov
sahf
imul
clc
inc
sbb
sbb
inc
cmp
or
sbb
test
mov
arpl
mov
sti
jbe
lret
rorb
cmpsb
and
shlb
push
ret
sub
negb
das
out
in
mov
out
jno
aaa
adc
pushf
lahf
loope
mov
pop
sahf
pushf
fidivrs
repnz
xor
out
pop
mov
add
iret
push
scas
xor
push
mov
mov
fbld
fnsave
push
adc
mov
int3
cmove
cmp
icebp
add
push
mov
fcmove
inc
pop
xchg
int3
js
jle
popa
insl
aas
adc
xchg
jmp
daa
xchg
das
mov
nop
std
fcmovnu
push
dec
and
cld
push
enter
push
xchg
int3
cld
cmp
or
decl
in
jl
int
sub
or
sub
movsb
mov
or
cmp
call
jecxz
jecxz
loop
sub
test
lcall
test
cmp
daa
pop
pop
ret
pushl
sub
jae
adc
int
push
mov
inc
loope
or
enter
les
jae
hlt
xchg
sub
and
or
sub
int
jae
loope
gs
icebp
lock
ja
add
in
sti
loopne
xchg
push
cmp
rorl
sbbb
adc
xchg
out
lea
incl
mov
mov
cmp
enter
mov
fcompl
cld
xchg
rorl
mov
pop
popa
mov
add
sbb
xlat
xlat
inc
and
lret
sti
jae
adc
lea
fwait
sbb
add
enter
test
xchg
jne
inc
jnp
outsb
mov
sub
push
push
je
ret
dec
push
addr16
and
xchg
xchg
cmpsl
dec
mov
imul
lods
out
ret
loop
xchg
xor
js
cmp
pusha
ss
mov
lods
mov
orl
jo
pop
mov
or
and
dec
cmp
imul
lret
bound
movsb
inc
cmp
in
xor
push
xchg
push
dec
fyl2xp1
dec
mov
fnsave
dec
jmp
lods
pop
repnz
pop
lret
daa
lods
mov
movsb
shll
dec
in
in
sub
add
xor
mov
add
test
rorl
inc
pusha
or
call
call
mov
xlat
mov
ja
cld
lea
out
and
inc
mov
push
push
aad
dec
fisubrs
dec
cmp
out
jne
pop
lahf
jnp
mov
cmpsl
lea
popw
adcb
and
xchg
jge
or
or
pop
jp
and
scas
lods
mov
bound
inc
pop
push
les
dec
sub
in
out
std
mov
sub
sub
mov
lahf
ja
sub
jo
or
mov
xor
fldl
inc
sbb
jle
shll
hlt
and
inc
sbb
mov
push
nop
ljmp
xchg
mov
cmp
rdpmc
sub
notl
cld
pop
push
xor
in
push
xchg
mov
in
pop
loop
lret
dec
out
mov
jecxz
pop
ja
pop
mov
mov
jg
or
call
mov
jo
loope
lea
enter
adc
cld
ja
cmpsl
push
scas
jne
es
or
cmp
jmp
fisubl
imul
jno
mov
sti
sbb
add
fists
mov
rol
push
mov
imul
dec
push
dec
xchg
jnp
repz
mov
cmp
mov
test
in
jg
pop
cmpsl
and
cs
mov
or
shl
mov
aaa
dec
mov
mov
mov
add
cmp
jmp
adc
into
mov
mov
arpl
cmp
xor
fdiv
rolb
push
sbb
mov
or
mov
faddl
push
sub
cmp
loop
xchg
scas
das
sahf
cwtl
inc
or
xchg
into
sbbb
cmp
pusha
cmc
ja
add
mov
push
flds
cmp
dec
jl
fxch
les
push
clc
and
lods
lods
push
cmp
incl
push
les
mov
sbb
out
and
mov
dec
inc
jecxz
enter
push
bound
add
popf
fsts
fiadds
int
cs
mov
mov
std
push
out
mov
loope
addr16
push
cli
mov
and
imul
and
rolb
lret
sub
pop
nop
dec
dec
jle
repnz
fadds
add
fstpt
in
jne
stos
mov
out
mov
xchg
xchg
shl
rorb
inc
lcall
adc
sub
jmp
mov
cs
idiv
add
inc
cli
push
test
pop
sbb
faddp
out
dec
js
push
gs
jb
cmp
push
xchg
mov
xor
jg
fstpl
and
js
cmp
movsb
lahf
jne
jle
fsub
mov
mov
insl
and
nop
add
shll
pop
scas
cwtl
hlt
repz
xorb
scas
jno
fxtract
movsb
repnz
ja
outsb
push
mov
sub
gs
cmp
aam
loop
loopne
cmp
in
mov
int
pop
mov
lret
aaa
cmp
xor
stos
mov
sbb
sbb
lcall
push
inc
stos
mov
aas
lock
test
leave
fcoml
jp
test
xchg
out
push
or
jmp
aad
out
jge
cmc
add
xor
push
movsl
stc
lahf
subl
andb
xchg
repz
sub
cld
sub
pop
pushf
out
movsb
hlt
jno
outsl
je
jecxz
in
dec
sbb
inc
rolb
lret
repnz
push
icebp
xchg
xchg
icebp
jno
push
mov
ljmp
xchg
pop
sbb
lcall
popa
outsb
filds
xor
fisttps
sub
hlt
push
xor
je
cwtl
pop
and
ds
clc
enter
push
pop
sub
out
push
mov
jge
fldcw
out
pop
pop
jmp
mov
aam
xchg
insb
adc
ljmp
pop
dec
adc
add
mov
hlt
lahf
mov
mov
adc
lea
lods
jmp
and
out
inc
mov
loop
ss
mov
in
xor
sbb
cmp
lahf
xchg
into
in
push
mov
loopne
ss
shlb
shrb
test
add
jne
or
add
out
add
sbb
and
push
divl
ds
xlat
ds
pcmpgtw
mov
xor
adc
mov
out
cmp
pop
and
pop
adc
jns
mov
repz
mov
fs
mov
jo
addr16
pcmpgtw
sbb
in
imul
subb
jmp
fcoms
scas
add
rcrb
jnp
mov
cwtl
pop
push
push
lcall
push
outsb
lods
cmp
pop
mov
pop
or
je
rolb
cmp
das
outsl
js,pn
fnstcw
aas
ja
in
roll
pop
in
jge
adc
mov
xor
sarb
add
dec
das
lret
ljmp
ljmp
mov
xchg
xor
mov
addb
int3
pop
std
jae
sbb
add
push
add
xor
das
mov
pop
push
test
fstpt
cmp
iret
sti
dec
hlt
xor
xor
mov
shrl
testl
mov
mov
inc
add
xor
cmp
or
das
aad
lds
pop
rorl
sub
gs
data16
inc
or
jp
ds
jp
rclb
div
xlat
testb
push
jle
mov
shl
xchg
aam
push
inc
iret
dec
imul
sbb
mov
sbb
and
dec
or
sti
xor
test
xor
into
mov
insb
test
fistpl
subb
enter
lods
ds
or
push
in
fcoml
jge
xchg
rcr
jbe
scas
testl
out
push
xchg
cmpsl
fistpl
inc
es
aam
xchg
js
out
cltd
xor
sbb
je
add
push
sti
cmovle
and
xor
outsb
ret
test
fucom
js
andps
and
mov
mov
and
mov
sub
sub
test
dec
fisubl
or
pop
out
and
out
test
shll
stos
adc
imul
or
rcrb
in
or
sti
mov
fmull
and
sub
and
stos
inc
push
flds
data16
xchg
cmp
out
or
rcrl
lods
out
stos
mov
test
push
or
cmp
js
xorl
xor
cmc
xchg
xchg
push
test
pop
aad
aaa
adcl
lret
ret
pushf
lret
shr
mov
inc
xchg
lea
jg
mov
hlt
jmp
fdiv
je
and
mov
mov
outsb
lret
sbb
adc
mov
mov
stos
in
inc
clc
add
enter
cmp
inc
pushf
jmp
daa
in
pop
dec
cwtl
mov
popa
outsb
shr
ds
mov
push
cmpb
push
pop
xor
lods
or
loop
push
jmp
repz
negl
cwtl
int
cmc
or
sbb
and
inc
test
adc
push
ds
mov
pop
call
jmp
es
icebp
arpl
pop
pop
mov
xor
or
leave
mov
xor
and
das
add
roll
pop
cmp
mov
pop
enter
dec
std
es
push
sub
push
and
mov
jnp
sub
sbb
insl
andl
lds
aas
aaa
mov
cmpsb
mov
stos
pop
decl
jno
mov
lahf
mov
and
jmp
inc
mov
mov
or
rclb
ret
adc
mov
mov
dec
scas
push
or
inc
dec
adc
push
add
fcoms
or
mov
out
stos
lock
in
sbb
fistpll
pop
arpl
aaa
popa
mov
clc
pop
mov
push
mov
popf
test
subl
sub
jns
fisttpll
adc
cmovg
pop
and
iret
fcompl
push
xchg
xchg
sbb
std
loopne
imul
push
pop
aad
sub
fwait
push
aaa
mov
sub
cmp
push
dec
dec
push
sub
adc
jmp
sub
sub
test
push
dec
aaa
cltd
lds
mov
sarb
cmp
repz
je
stc
jecxz
xchg
notb
repnz
inc
repz
jmp
mov
add
cwtl
aam
sbb
int3
cwtl
xchg
push
pop
fstp
pop
jbe
int3
pusha
xor
add
dec
pop
xchg
jecxz
cmpsb
fwait
dec
cmpl
aas
cli
shr
pop
popf
jp
ret
mov
outsl
sti
jno
mov
fwait
cltd
mov
mov
sbb
push
data16
iret
popa
pop
test
jl
fdivrl
gs
leave
loop
jae
inc
push
fs
push
sbb
leave
pop
pop
icebp
xor
push
pushf
jnp
sbb
dec
in
mov
orb
fdivrs
and
sub
or
call
fidivrl
sbb
fwait
mov
loopne
lret
inc
adc
data16
repz
popf
inc
mov
xorl
push
in
sub
int
xor
fs
pop
jle
add
adcb
cmp
fisubrl
fstps
mov
gs
stos
mov
fwait
sbb
pop
cmc
push
addl
push
push
jge
pop
pop
jecxz
cmp
gs
std
je
sub
mov
mov
sbb
jo
push
fbstp
mov
push
sahf
das
fisubs
aas
xchg
inc
sub
dec
insb
aam
xor
push
sti
xchg
mov
dec
stos
jno
adc
add
rorl
pop
test
shl
shll
push
add
fisubrs
iret
je
popf
jge
adc
push
fs
mov
adc
es
dec
mov
xor
jecxz
xchg
sub
mov
cld
jno
or
add
pop
cs
add
xor
sarb
push
and
popf
adc
adc
scas
stos
loopne
mov
cmp
mov
fbld
pop
repnz
mull
sub
js
push
add
xor
jns
test
sub
push
dec
sub
xchg
jecxz
int3
mov
and
sbb
in
insb
xor
ljmp
pop
push
cli
nop
add
ss
and
jle
dec
dec
in
cli
xchg
or
out
xchg
add
ftst
mov
dec
xor
lea
rclb
sti
aas
fisttpl
add
push
fstps
pop
mov
ret
cwtl
insb
imul
std
jecxz
cmc
cmp
incl
nop
cmp
lcall
push
out
nopl
outsl
call
nop
fbld
je
jns
loopne
ds
into
std
adc
inc
push
xor
addr16
mov
cmpl
shlb
out
pop
jecxz
mov
js
repnz
adc
add
adc
pushf
test
xlat
stc
out
dec
divb
out
jmp
xchg
je
in
sub
push
data16
or
or
or
mov
cwtl
dec
aas
mov
fisubrs
cwtl
adc
jnp
jp
mov
mov
push
add
inc
pop
scas
lock
adc
lock
sub
test
mov
in
repz
aas
cmp
outsb
test
fdiv
xchg
fdivs
push
lock
jb
orb
gs
pusha
outsb
xchg
dec
or
repnz
push
mov
cmp
loopne
jp
add
fdivrl
push
mov
hlt
notl
jmp
dec
test
sub
lret
push
mov
daa
and
cltd
sub
jnp
add
jo
in
push
xchg
jbe
iret
mulb
cmp
aam
cmp
into
sbb
cmpsb
push
gs
or
arpl
adc
mov
sarl
lret
sub
out
xchg
imul
inc
pop
pop
rcll
insb
icebp
xchg
jns
lret
jecxz
mov
pop
dec
cmpsb
in
and
adc
in
jge
mov
mov
jns
sbb
ljmp
cmp
stos
push
add
push
sub
out
adc
fwait
add
push
push
sub
adc
pushf
pop
jno
pushf
jle
add
cmpsl
jb
clc
fnstenv
mov
data16
mov
dec
mov
mov
cld
push
lds
mov
ja
dec
scas
gs
xchg
rol
outsl
add
shr
mov
mov
xor
fdivp
lods
add
sar
push
adc
pop
fsubrs
daa
lea
pop
pop
stos
mov
stc
pop
jge
cmp
mov
orl
xchg
xchg
add
movsbl
dec
push
lahf
rcll
mov
mov
sub
icebp
and
dec
scas
mov
insb
sub
adc
inc
xchg
cmp
int
cli
or
xchg
mov
sbb
ror
mov
jo
xchg
repz
js
cmp
out
cmp
loopne
pusha
dec
test
ds
lahf
jg
jne
int3
jb
sub
shll
inc
mov
or
push
cmp
loop
or
push
inc
out
push
addr16
inc
pop
xchg
movsb
insb
movsl
inc
inc
dec
sbb
daa
push
xchg
push
push
int3
mov
cmp
fsubp
or
mov
push
jnp
stos
popf
push
in
sbb
rorb
xchg
mov
xchg
or
mov
in
rcll
mov
sarb
cmpsb
sub
lock
cmpsl
ret
sub
les
subb
jae
sbb
or
adc
ds
xchg
les
out
jmp
xor
data16
jmp
add
push
outsl
pop
ret
xor
into
ret
shlb
and
sub
add
inc
sbbb
xchg
jp
mov
in
pop
mov
aam
inc
test
mov
shl
or
movhps
test
inc
jb
sti
mov
fdivrl
or
ja
cmpb
cmp
or
pushf
jge
loope
dec
cmp
notl
lods
test
push
rep
xchg
scas
fmul
mov
sub
mov
test
xchg
dec
sbb
add
jb
pop
in
jo
lret
lods
in
lock
pop
loop
out
test
out
ret
sub
push
sub
das
repz
outsb
mov
pusha
mov
std
jae
mov
int
imul
xchg
mov
aas
and
sbbl
shl
inc
hlt
inc
sbb
sub
sbbl
add
js
sbb
mov
mov
mov
fbstp
jle
or
stos
test
push
imul
cmpl
add
cld
mov
mov
add
push
jge
mov
mov
push
andl
sahf
xor
mov
cld
jp
cmp
mov
jmp
pop
dec
pop
mov
int3
notb
gs
sbb
or
shl
xchg
lret
mov
into
mov
or
jl
jns
inc
jno
pop
inc
dec
cmc
aam
and
push
cmpsb
out
sub
nop
pop
or
mov
pop
ss
mov
stos
push
daa
mov
stc
cmp
ljmp
cmp
movsl
cs
pop
and
iret
jle
push
ss
mov
mov
je
mov
sbb
sub
xchg
jecxz
pop
jge
xchg
jecxz
jl
imul
out
xchg
inc
jge
jbe
add
pop
test
int3
xchg
xchg
shll
pop
push
mov
cmp
insb
xchg
call
fdivrl
sub
cmp
add
inc
ror
sbb
test
aad
push
enter
call
cmc
push
mov
lahf
inc
pop
push
fmull
fdivrl
sub
mov
cmp
jbe
cmp
sub
in
insb
imul
std
mov
or
outsl
mov
jno
and
arpl
adc
mov
enter
ret
lods
filds
mov
add
jne
popa
mov
out
push
cmpsl
orl
fldl
cmpsl
push
addl
or
fidivl
in
pop
lcall
jp
stos
jns
test
inc
outsb
mov
aam
jp
dec
imul
outsb
imulb
jecxz
mov
movsb
jecxz
aas
lds
outsb
jo
xchg
adc
inc
lea
mov
inc
lods
sbb
cld
mov
out
aaa
mov
fcoms
adc
imul
inc
test
jns
lret
pop
js,pt
jns
push
dec
adc
iret
inc
add
bound
adc
mov
mov
xlat
out
mov
repnz
xchg
xor
sbb
jmp
jmp
scas
popa
shrl
mov
lods
ss
out
pop
loopne
cmpsl
shlb
leave
push
mov
out
push
cmp
xorb
pop
stos
inc
sarl
jl
push
mov
jecxz
or
outsb
push
loopne
test
push
push
mov
pop
mov
pop
pop
pop
adc
cwtl
and
push
and
inc
call
jae
std
ror
mov
push
loop
inc
icebp
adc
ss
pop
add
repnz
cmpl
test
add
test
jne
das
int
pop
sti
push
push
jae
pop
or
insl
icebp
pop
out
fldcw
mov
ss
cmc
mov
sbb
xchg
dec
pop
fcompl
aaa
pop
sub
jg
xor
push
add
bound
loop
aam
arpl
xorl
jbe
mov
shl
fcoml
je
push
hlt
rcl
xchg
inc
ss
test
lea
lock
sbb
inc
sbb
sub
imul
push
aaa
sub
fidivs
sub
add
ficompl
fidivs
inc
cmpsl
out
xrelease
dec
nop
lahf
je
inc
rorb
jl
jmp
sub
xorl
psubusb
xlat
pop
push
jnp
pop
and
ljmp
fdivrl
cmpsb
out
shr
je
outsl
jno
test
pop
sbb
in
int
outsb
lahf
jno
xchg
gs
dec
pushf
mov
fdivrl
xor
outsb
push
test
pop
xchg
in
popf
stc
sbb
xor
pop
int3
pusha
fisubl
and
adc
add
cmc
je
push
mov
cld
les
popf
add
fcompl
rorl
inc
mov
shl
sub
sahf
shlb
arpl
adc
mov
aaa
scas
mov
sbb
das
leave
imul
cmp
leave
cmp
lds
sub
dec
sub
mov
loopne
xchg
adc
or
push
daa
push
lods
test
idivb
lock
cmc
out
lcall
jae
fdivr
mov
mov
jae
cmpl
ret
mov
mov
pop
fnstenv
cmp
jo
bound
jnp
or
jo
jbe
or
fdivl
pop
pop
popa
adc
lea
ucomiss
into
out
pushf
jmp
lods
fdecstp
dec
mov
iret
vpermps
adc
adc
mov
cmp
mov
test
or
sub
daa
mov
rclb
xchg
jg
or
pop
sbb
and
mov
rorb
and
and
repz
sbb
sbb
cmpsl
mov
xlat
ja
pop
and
cld
mov
popa
xchg
add
jl
cmpb
mov
xor
aam
xchg
movsl
in
push
xchg
popf
mov
push
cs
or
add
adc
and
cltd
jno
xor
out
cmp
sar
xor
test
adc
jle
push
add
inc
dec
imul
jl
insb
and
push
adc
pop
test
mov
outsl
ret
jecxz
pop
clc
sub
xchg
add
bound
test
adc
cmpsl
mov
mov
int
jp
ss
loop
aad
sub
popf
dec
xchg
in
arpl
clc
pop
dec
xchg
ror
outsb
sahf
fwait
cmc
mov
imul
ds
xchg
pusha
sub
cs
movsb
cmp
jbe
gs
mov
or
push
and
add
out
jle
xchg
stos
fadd
les
jbe
push
orl
addr16
into
mov
mov
sub
xor
fcomp
rol
stc
jnp
hlt
fcomip
in
cmp
cli
mov
jg
mov
push
sahf
loop
mov
mov
adc
pop
and
stos
ficoms
lea
push
push
or
movsl
sbb
loop
or
stos
sbb
xchg
xor
sub
in
push
insb
mov
push
dec
fstl
adc
push
ret
stos
fldl
jne
jo
ficomps
rolb
xor
fsts
mov
inc
decl
inc
pop
jb
pop
add
cmp
imul
sbb
adc
sub
in
test
mov
sub
mov
dec
add
loope
pop
mov
aad
adc
sbb
mov
idivb
inc
or
xchg
add
inc
loope
mov
push
and
outsl
int
pop
in
cmp
mov
lret
mov
inc
sub
rcrl
imul
mov
or
push
xor
repnz
in
in
cmc
aam
enter
push
add
push
jno
mov
movsb
test
inc
mov
fisubs
lcall
sbb
aam
adc
mov
push
mov
pusha
loopne
sbb
jmp
out
push
sbb
inc
enter
cwtl
dec
int3
scas
pop
cmpsl
clc
ss
xchg
push
repz
int3
xor
dec
dec
jecxz
popa
and
cmp
push
rcrb
into
inc
lret
lock
sub
mov
sub
push
call
cltd
lods
in
stc
in
popf
dec
out
jno
not
adc
xchg
ss
aas
inc
js
sub
inc
out
out
jb
mov
add
addr16
loopne
push
sarb
rcr
loopne
int3
lds
mov
inc
push
nop
mov
cmp
dec
clc
setns
shl
mov
rorl
mov
mov
stos
mov
movsb
ss
imul
adc
jb
cmp
int
sub
xchg
test
sub
adc
fsts
pop
jp
lret
scas
in
or
xor
addb
hlt
sub
xchg
jp
lahf
mov
lea
pop
push
js
fwait
jp,pt
mov
sbb
jcxz
les
and
sti
ja
aas
aam
in
repz
shlb
mov
cmp
lea
inc
dec
lds
inc
iret
repz
lods
dec
sarl
push
mov
int
lods
jne
fs
sbb
push
mov
sbb
in
xchg
xor
pop
sub
xor
mov
in
add
leave
addl
xor
cmp
and
test
dec
mov
ljmp
arpl
xor
adc
loopne
ret
mov
dec
adc
fwait
xor
sbb
jecxz
sub
xchg
adc
add
jo
add
fidivrl
sbb
jmp
xchg
enter
mov
arpl
shlb
scas
sbb
pop
shlb
sub
sub
mov
jb
and
mov
pop
test
aad
mov
fisubs
mov
sbb
incl
sub
add
sub
and
loope
pop
ljmp
bound
gs
cmp
daa
or
sbb
test
insl
sarl
or
pop
data16
pop
pop
dec
shl
data16
pop
jge
pop
aam
popa
cmpsl
mov
ret
sti
cld
pop
movsb
add
out
jns
push
sbbb
jge
iret
mov
dec
add
xlat
dec
mov
sbb
adcl
scas
cmp
push
scas
or
iret
sti
mov
and
movsb
gs
xchg
mov
and
lret
push
data16
enter
adc
push
xchg
xchg
in
jnp
movzwl
mov
repz
ljmp
sbb
or
sbb
mov
gs
cmp
and
xchg
pop
mov
in
shll
out
add
jne
in
lret
sub
pop
jmp
imul
sub
push
aas
add
jp
xchg
cmpsl
adc
test
dec
and
data16
pop
sbb
add
flds
mov
repz
adc
repnz
mov
fisttpl
into
pop
cltd
enter
das
lcall
sbb
xor
or
mov
mov
sti
jns
xchg
sub
push
push
fldenv
movsl
push
in
mov
mov
lret
shl
popf
adc
pop
mov
adc
mov
ss
int
cmp
jne
or
into
mov
icebp
mov
sti
push
movups
out
xchg
pop
and
mov
and
inc
loop
dec
xchg
push
data16
scas
arpl
nop
cmc
mov
inc
pop
cltd
loope
push
stc
imulb
stos
xor
sbb
add
jge
popa
jp
jle
mov
xchg
adc
outsl
mov
aad
adc
int
push
iret
bound
inc
hlt
movsl
int3
repz
inc
pop
insb
loope
loope
jnp
and
jb
sti
dec
popf
gs
ficompl
inc
fcoms
mov
or
andl
and
into
ficoms
fdiv
push
std
movsl
pop
testl
xchg
ror
mov
xor
mov
imul
mov
jp
dec
push
rep
lds
jo
stos
push
pop
sbb
and
sub
and
cli
cmpl
pop
add
mov
or
pusha
jmp
mov
sub
mov
daa
mov
inc
xor
std
jle
xchg
push
adc
in
mov
jecxz
xor
sub
and
and
loope
pop
mov
inc
ljmp
arpl
xor
xor
mov
in
and
insl
stos
lcall
adcl
addr16
stos
dec
fwait
mov
add
push
push
adc
movsb
push
fimuls
pop
jnp
or
call
addr16
int
xchg
mov
rolb
dec
lock
cwtl
add
data16
outsl
inc
xchg
xlat
cmp
xorb
cli
ds
stos
sub
push
adc
mov
int
push
adc
pop
popf
sbb
loop
nop
mov
jmp
aad
lock
lock
lods
jl
xchg
mov
cmp
lds
cmp
mov
jg
sub
mov
int3
sub
add
inc
stos
das
in
jecxz
fldt
icebp
cmp
add
xchg
movsl
add
pop
adc
cltd
std
cmp
xchg
out
push
cmp
dec
xor
daa
push
bound
jle
xchg
leave
rolb
fsubl
adc
mov
lea
lock
call
cmpsb
mov
lea
idivb
xlat
push
addr16
lea
pop
lret
jo
icebp
and
inc
stos
xchg
leave
mov
inc
push
sub
in
adc
sbb
mov
and
clc
scas
mov
lret
loope
ds
rorl
dec
pusha
daa
mov
pop
or
fldenv
pop
add
and
sbbl
test
mov
shll
pusha
repz
sahf
push
mov
iret
jl
dec
push
mov
fsubrl
adc
out
mov
pop
jbe
pop
mov
jecxz
or
jle,pn
cmp
stos
scas
js
nop
xlat
xor
cwtl
mov
push
bound
fcompl
addl
mov
adc
pop
sub
mov
push
xor
push
push
push
stos
insl
mov
dec
movsl
sti
xor
js
stc
mov
sub
into
jmp
fcmove
dec
lret
pop
inc
xchg
xchg
mov
jb
dec
or
int3
std
je
lods
fnstenv
mov
sub
xchg
mov
inc
mov
fildll
iret
ljmp
add
fmull
lea
dec
cmp
fists
aas
push
adc
jae
mov
cmpsl
rcr
popa
sub
pusha
or
jae
adc
movsl
in
hlt
inc
sti
xchg
repz
fnsave
aad
in
sub
insb
add
mov
in
mov
icebp
pusha
push
dec
cli
pop
rclb
bound
sbb
pop
out
xchg
lock
dec
mov
cs
clc
mov
pop
mov
jo
subb
popa
fiaddl
sub
mov
pop
jo
push
jle
dec
adc
popa
sarl
ret
push
jle
xor
into
cmp
jo
push
pushf
es
inc
lret
mov
daa
push
sub
mov
arpl
stos
sbb
mov
mov
aam
mov
mov
out
stos
fstpl
xchg
enter
pop
inc
fcmovnb
ficoms
jo
xor
mov
js
std
daa
jmp
jno
into
notb
inc
sub
mov
add
mov
lods
dec
mov
push
lahf
xchg
js
hlt
in
mov
dec
ftst
push
lret
mov
mov
ret
iret
xchg
aam
imul
int
in
push
lea
xor
fisttpll
jae
dec
mov
mov
pop
clc
call
ret
xor
es
mov
xor
cmc
adc
cwtl
fidivl
cmc
cmpsb
scas
mov
movsl
cwtl
jno
xchg
pop
hlt
mov
repnz
push
jae
push
movsb
addr16
mov
lahf
or
adc
mov
dec
dec
lock
je
lods
insb
out
push
xchg
push
sub
jp
ja
fdivl
pop
pop
cmp
sbb
dec
pop
fstp
int
cltd
push
mov
cvtps2pd
loop
fiaddl
inc
mov
adc
lock
and
jmp
jnp
in
lods
push
and
popf
aaa
pop
pop
mov
push
out
adc
popa
or
xchg
jp
add
add
sbb
cmp
cmp
jns
sub
mov
arpl
push
insb
lret
lods
push
ljmp
push
ror
inc
stc
push
jae
mov
xor
int3
std
test
cld
ja
rorl
or
dec
mov
and
pop
popf
pop
stos
mov
punpckhbw
mov
jns
pop
gs
aas
cltd
imul
xchg
or
or
cmp
jp
testb
inc
imul
push
stc
or
mov
loope
pop
popa
std
jl
call
xor
inc
out
xchg
jno
and
out
cmp
pop
pusha
mov
mov
fldl
xchg
mov
out
fiaddl
or
push
cmpsb
test
into
mov
mov
and
pop
cmpsb
add
pushl
cmp
out
jp
es
rolb
xor
in
lods
pop
mov
arpl
outsl
xor
mov
xlat
pop
mov
loopne
loope
inc
incl
icebp
fisttps
test
jg
xlat
dec
arpl
push
inc
pusha
adc
andb
jp
xlat
daa
pop
and
push
mov
jbe
cmp
dec
pop
xor
adc
push
xor
in
arpl
inc
cmp
mov
clc
pop
pusha
fidivs
xor
enter
hlt
push
negb
cld
add
aam
lods
add
pop
pop
jne
push
mov
dec
arpl
adc
and
inc
lods
hlt
mov
je
ja
lahf
push
imul
ss
int
out
pop
push
xchg
sub
xor
filds
xchg
xor
into
lods
mov
stos
test
cmp
outsb
in
sub
jle
jne
push
and
in
test
pop
addb
push
mov
lahf
jmp
sysexit
xor
mov
jg
outsb
adc
mov
movsb
pop
push
loop
int3
sbb
and
in
xchg
jb
aad
cmpl
shrb
imul
sbb
pop
sub
xchg
je
push
pop
sbb
jle
mov
push
hlt
sbb
xchg
push
add
jp
push
ljmp
sub
mov
sahf
outsb
popf
lods
inc
loopne
push
mov
xchg
jb
leave
mov
jg
mov
push
sub
push
or
sbb
gs
push
add
pop
mov
jnp
push
call
subb
into
and
dec
xchg
sub
mov
movsb
add
cltd
cmp
dec
fidivs
push
dec
mov
aam
cmp
cmp
mov
xchg
jno
or
mov
fidivrl
push
sbb
or
out
popa
ja
xchg
scas
enter
add
out
popf
add
insl
xor
imul
out
mov
ss
xor
insb
mov
push
mov
shrl
mov
dec
aaa
mov
insb
mov
pop
and
jg
shll
popa
push
adc
dec
sbb
inc
cmp
into
sub
mov
jle
and
inc
repz
adc
push
jmp
push
sti
mov
or
stc
or
jecxz
pop
pcmpgtd
sbb
sub
imull
sub
push
jg
push
pop
in
and
push
add
lods
movsl
imul
mov
adc
int3
les
sti
call
sbb
dec
rorl
test
cmp
addb
jns
jp
or
inc
xchg
mov
cmp
sbb
lods
xor
sub
repz
test
xchg
cmp
mov
mov
fadds
pop
iret
xor
adcb
pop
cmp
add
mov
addr16
mov
lret
aad
sub
jp
xchg
addl
roll
shlb
incb
xchg
sbb
iret
out
sahf
xor
push
pop
or
dec
xchg
fbld
rcl
push
int
scas
outsl
xor
fsub
cmp
aad
das
ret
test
pop
lcall
mov
movb
out
or
popa
inc
push
ds
mov
mul
sahf
mov
adc
or
pusha
nop
daa
push
in
das
xchg
std
fwait
xlat
adc
adc
fcoml
aaa
lcall
jecxz
mov
sbb
dec
xchg
and
sub
inc
aas
mov
push
outsl
cmp
xchg
rclb
inc
mov
pop
cmp
outsb
fs
in
subb
shll
ret
push
stos
xchg
inc
int3
lahf
add
stos
xchg
lret
mov
out
hlt
das
push
mov
inc
mov
cmpxchg
dec
movsl
mov
rcr
mov
mov
mov
ds
push
mov
sbb
sub
gs
ret
mov
lahf
lcall
mov
and
jae
lock
fdiv
mov
and
hlt
mov
sbbb
ret
and
push
sarl
cmpsb
notl
mov
dec
xor
rolb
pop
and
popf
lods
cmpsb
mov
push
jle
cli
repz
or
mov
or
sbb
and
loop
repnz
inc
adc
dec
sarl
xlat
lahf
pop
test
cmpsl
mov
cmpsb
in
enter
pushf
enter
cmpsl
add
pop
cld
outsb
mov
xor
or
sub
sub
cmp
lret
mov
pop
sub
imul
mov
xorl
xlat
inc
loop
push
call
jae
xchg
flds
cmp
in
inc
jo
push
test
mov
data16
out
add
arpl
xchg
popa
jne
negb
outsb
cld
push
cmpsb
jle
hlt
je
sub
nop
icebp
in
mov
add
mov
lret
sbbl
dec
setbe
or
adc
dec
loop
out
cli
movsb
and
xchg
cmp
jae
lret
mov
cwtl
xor
mov
arpl
imul
gs
lret
ficomps
ja
mov
pop
jo
xchg
pusha
pusha
mov
pop
jbe
fidivrs
xchg
sarb
lea
cli
mov
jne
mov
lods
dec
xor
scas
andb
jge
cmpsl
or
dec
nop
dec
push
mov
ficoml
inc
ds
je
out
inc
mov
roll
mov
imul
jecxz
and
push
std
adc
push
das
pusha
inc
dec
add
mov
add
dec
arpl
or
dec
fbstp
lods
xchg
adc
mov
mov
popa
sub
outsl
add
xor
cltd
push
outsl
inc
inc
push
cmpxchg
jns
adc
push
insb
push
addr16
mov
jle
pusha
jnp
in
cmpsb
mov
cmp
lods
mov
pop
add
mov
inc
adc
mov
out
stos
shrb
mov
stos
pushf
in
movsl
cmpsb
sbb
inc
test
push
cmp
insl
fnstcw
cmp
test
cmp
in
addb
popf
and
add
sub
cmpsb
adc
push
stc
mov
cmp
dec
sub
stos
pop
xor
ss
dec
inc
lods
mov
pop
sahf
or
cli
fildl
xor
pop
cmp
movsb
mull
pushf
fadds
enter
leave
mov
adc
cmp
sbb
push
sub
fimuls
outsb
jecxz
repnz
insb
fidivrs
jb
jle
add
or
or
mov
pushf
adc
or
pop
xchg
pop
loop
mov
out
in
push
xor
cmp
das
xchg
push
mov
sahf
push
andb
xlat
xchg
loop
adc
push
xor
test
out
out
test
bound
out
and
jg
cmp
rorb
filds
or
fcomps
jo
and
pop
sbb
out
dec
lods
xchg
jle
scas
test
aaa
cmp
repz
inc
icebp
xor
jmp
pop
cmp
mov
sub
data16
mov
sub
jb
xorl
xchg
sbb
jmp
aad
xchg
rcrl
fcmovb
cmp
sbb
lock
cmp
andl
cmp
sub
mov
pushf
repz
push
inc
sub
loope
mov
pop
xchg
lahf
jne
mov
pop
jbe
inc
stos
fstl
fidivrl
ficoms
xchg
mov
xchg
sar
aaa
mov
lahf
pop
in
xchg
xor
mov
mov
xchg
inc
arpl
imull
jne
es
jge
cmp
lret
lds
rcr
fucom
test
xchg
hlt
push
pop
sbb
aaa
insl
jle
xorl
rcll
mov
andb
jno
leave
ret
jae
mov
push
repz
leave
std
and
mov
lea
fstps
sub
fistl
pop
mov
imul
ds
push
or
mov
adc
repnz
arpl
mov
fs
add
pop
addl
lret
andb
sbb
add
add
loope
adc
pop
sub
daa
pop
test
cmc
add
and
data16
js
mov
out
sub
inc
cmpsb
dec
iret
mov
push
cmpsl
cmp
pop
or
cli
xchg
inc
cmpsb
ret
cmp
popf
lds
inc
push
fninit
fwait
dec
pop
insl
test
inc
das
add
test
sti
sbb
sub
int3
xchg
leave
push
hlt
loope
cs
xor
cmc
mov
mov
or
adc
xor
push
ds
cmp
push
idivb
arpl
mov
movsb
pop
jns
data16
bound
ljmp
mov
std
loopne
clc
inc
mov
fdivs
adc
pop
inc
and
movsb
out
pop
cld
inc
mov
xchg
lcall
mov
je
inc
pop
push
add
inc
add
lock
mov
cwtl
add
adc
cltd
jle
xchg
xchg
movsb
pop
clc
push
orb
scas
inc
sbb
mov
loop
inc
push
inc
push
ljmpw
lret
pop
cld
mov
sub
adc
daa
outsl
iret
jo
subb
sub
pop
adc
cmp
out
adc
inc
add
sub
mov
jg
mulb
in
popf
mov
aaa
sbb
mov
add
dec
shr
add
cmpsl
test
push
std
test
fs
mov
sbb
cmp
jne
mov
jb
insl
jle
rcrl
shl
cltd
dec
inc
jns
pop
popa
jo
cmp
imul
testl
mov
subl
cmpsl
cmp
test
lcall
fldl
mov
insb
adc
add
ds
out
aad
inc
lods
sub
xor
idivl
bnd
xchg
sbb
jbe
sub
sub
fimuls
mov
pop
adc
sbb
mov
test
mov
inc
push
mov
aam
test
xchg
adc
adc
xor
shrb
mov
leave
stc
test
or
mov
es
adc
into
inc
fcompl
sahf
test
sbb
mov
fstpt
dec
data16
xchg
inc
push
pop
lock
lods
pop
dec
daa
or
sub
dec
cmp
scas
adc
std
jo
sub
cmc
test
out
sti
push
jmp
adc
fisttpl
mov
insl
ret
fwait
pushf
addl
push
out
popa
imul
into
cmpsb
and
repnz
mov
pop
push
lock
repnz
stc
inc
jno
dec
movsb
adc
mov
enter
xlat
mov
aas
cmp
or
or
lret
out
movsb
daa
xlat
cmp
push
aaa
cmp
cmp
add
es
test
negb
push
dec
mov
cld
stos
mov
scas
lock
loope
bound
inc
test
lock
lret
dec
dec
add
rcrb
push
jp
decb
mov
and
mov
or
push
pop
aad
add
std
out
or
jae
imul
ret
sahf
and
cwtl
or
dec
addr16
push
cwtl
lods
dec
adcl
in
rcrl
andl
pop
mov
mov
insl
push
int3
cmp
es
pop
mov
cmc
imul
and
scas
into
inc
shl
flds
push
stc
jns
xor
in
push
adc
push
mov
jnp
cs
mov
ret
inc
mov
imul
or
out
push
lea
stos
sbb
hlt
mov
lret
cmp
mov
mulb
cmp
dec
pop
out
xor
pop
or
repnz
sub
mov
std
xor
iret
loopne
inc
jecxz
mov
mov
sbb
inc
movsb
mov
mov
inc
nop
mov
push
push
add
hlt
lahf
or
es
mov
adc
mov
and
adc
test
mov
xchg
pop
cltd
pop
xchg
adc
jae
movb
or
xchg
xchg
and
push
add
cltd
sub
mov
mov
scas
xor
xlat
mov
xor
jmp
or
cmpsl
push
push
push
sbb
mov
mov
xchg
jns
lock
lret
mov
in
jno
xor
daa
or
lea
lods
inc
lret
pop
inc
cli
in
lret
cmp
call
sbb
cltd
pop
xchg
pop
and
mov
and
test
cli
xchg
movsb
jecxz
pop
adc
sub
fcmovu
adc
test
push
mov
scas
dec
add
cmpsb
inc
push
movsb
inc
scas
and
imul
xchg
scas
jl
xorb
push
cmpsl
mov
jl
addr16
pusha
out
sub
lahf
jo
jge
mov
mov
push
aaa
jns
out
and
sub
jl
ljmp
lods
lret
push
xor
mov
xchg
inc
jge
flds
fmuls
cltd
mov
stc
fimuls
cmp
adc
sbb
loop
fincstp
in
or
dec
popa
pop
and
fsubl
movsl
cmpsb
test
push
mov
movsl
jl
sub
push
xor
inc
ds
pop
fwait
cli
push
bound
xorl
popf
push
lds
xchg
inc
cltd
in
sarl
push
insl
sbb
jnp
rcrl
mov
inc
std
jmp
dec
ds
sahf
pop
in
push
ja
aaa
addr16
xor
idiv
cmpsb
sbb
mov
lcall
and
push
add
rol
aas
fisubrs
je
aas
mov
sub
cmp
pop
xor
fisttpl
jbe
filds
sub
or
pop
xchg
stc
or
push
nop
xor
test
test
mov
sbb
rcll
or
xor
call
jmp
rcl
test
adcl
imul
stos
push
scas
aaa
pop
loope
aaa
sbbb
std
sub
push
pop
xor
aad
lods
lds
jmp
push
ret
dec
movsb
xchg
pop
jmp
adc
lea
sbb
adc
xchg
mov
nop
mov
xchg
aaa
fistps
test
mov
jnp
test
push
rclb
sbb
roll
clc
xchg
sub
dec
adc
sub
mov
in
mov
movsl
mov
je
add
enter
nop
inc
fwait
int3
sbb
adc
rclb
pop
rcll
in
jo
mov
or
pop
dec
je
subb
inc
adc
adc
les
and
test
adc
lock
xor
adc
or
mov
pop
and
push
in
xlat
xor
dec
mov
into
andb
jns
add
and
int
pop
xchg
jne
shll
adc
inc
mov
pop
xor
imul
inc
pop
in
test
fs
push
popa
in
shrl
and
or
push
in
lods
out
xor
sti
aam
cmp
imul
jns
mov
push
iret
add
lods
push
sbb
mov
stos
or
stos
mov
add
xchg
mov
std
outsb
inc
data16
andl
xchg
jle
cmp
sub
jnp
push
xchg
lahf
ja
notl
sbb
ret
je
cmc
xchg
fwait
bound
mov
addr16
push
inc
dec
or
fcmovne
test
cmp
iret
imul
cli
movsb
loope
aad
sbb
pop
cs
ss
cs
pop
jo
xor
xor
ret
divb
ds
mov
mov
jo
mov
lea
sbb
ds
andb
std
dec
or
out
dec
sarb
xchg
mov
xchg
xchg
dec
sbb
pop
adc
inc
daa
cmp
jns
call
jbe
outsb
sub
int3
fwait
iret
pop
cwtl
mov
push
js
lock
pop
mov
push
ja
xchg
addr16
and
loopne
dec
fnstsw
mov
imul
ljmp
insb
or
les
movsl
sahf
cs
in
inc
popa
sub
in
dec
aas
mov
je
out
ljmp
push
out
stc
call
inc
jp
sub
jnp
add
push
add
pop
icebp
insl
cmp
mov
loopne
ljmp
mov
pop
mov
inc
xchg
insl
xchg
xor
je
ret
imul
pop
in
jecxz
lea
pop
sar
lahf
gs
push
push
jge
aad
cwtl
sub
mov
das
cld
aad
push
mov
add
mov
int3
push
adc
cmp
gs
das
inc
xchg
adc
mov
loop,pn
sub
jb
and
data16
loop
in
insl
push
xchg
aad
mov
push
push
sub
xchg
xchg
push
dec
andl
sbb
dec
outsb
sbb
pop
inc
orb
xor
aaa
add
daa
popf
pop
inc
xchg
mov
insb
adc
xchg
pop
pop
ss
sbb
in
data16
push
mov
flds
orl
xchg
cmc
cli
les
or
lods
or
lret
movsb
fnstsw
pop
mov
aad
xchg
dec
les
cmp
jnp
clc
outsl
jno
and
sbb
push
into
sub
stos
mov
push
fidivrl
rcrb
aas
insl
inc
cmp
and
aad
sbb
xor
pushf
push
das
arpl
test
pop
les
arpl
jl
orl
mov
je
movsb
insb
test
call
adc
add
push
inc
push
push
js
dec
mov
push
or
pop
mov
mov
aaa
cmpsb
scas
jb
inc
ror
loope
sti
adc
push
call
jp
jo,pn
shlb
das
enter
loope
and
xchg
ja
std
iret
cmpsb
cmpsb
dec
cmp
jmp
pop
adc
jno
pop
adc
sub
sub
xchg
mov
pushf
pop
inc
xchg
mov
negb
dec
adc
mov
ret
xchg
loop
aam
lods
std
pop
fdivl
nop
scas
cmpb
lret
xchg
pop
call
xchg
aad
xor
les
hlt
dec
insl
call
fcomps
out
loopne
inc
push
jmp
fucomip
test
inc
inc
sbb
pop
pop
fdiv
sub
add
lea
mov
cwtl
inc
fmuls
or
imul
sbb
scas
cmpsb
mov
rcll
js
cmpl
sub
xchg
ret
test
cli
fldt
cmpsb
xor
das
xor
pop
cwtl
sbb
jmp
pop
xor
nop
subl
ja
cmp
je
xor
js
xchg
push
inc
fidivrs
addr16
dec
aas
cmc
lcall
xorl
movsl
ret
lret
add
add
les
push
mov
xchg
ret
mov
inc
jmp
cli
cwtl
fisttps
xchg
inc
dec
stos
sub
divb
inc
add
xor
adc
aad
dec
adc
ja
insl
adcl
cs
xchg
jl
daa
leave
jmp
mov
ret
push
sti
adc
xor
add
mov
mov
pop
mov
sub
arpl
addr16
xor
jecxz
or
imul
jne
mov
je
aam
add
mov
pop
call
jns
push
xchg
roll
inc
enter
rcrl
arpl
mov
aad
push
aam
repz
fistps
or
out
out
sub
mov
sbb
adc
jmp
mov
repnz
cmc
push
jle
cmpsl
fidivs
push
mov
fnstcw
aam
and
lods
jg
xchg
mov
iret
cwtl
adcl
test
add
lcall
cmp
nop
mov
xchg
pop
mov
out
xchg
inc
cmp
xchg
out
lret
sbb
call
jns
gs
stos
arpl
mov
cltd
mov
jns
push
pop
adc
add
mov
loop
mov
cmpsb
pop
or
jnp
dec
bswap
cmp
jb
out
mov
jmp
xor
lcall
jnp
pop
imul
sbb
push
cmpsb
dec
sub
or
cmp
sub
gs
xor
fwait
repnz
lods
movsl
call
sbb
jo,pt
sub
push
addr16
bnd
xchg
std
adc
pop
xchg
dec
mov
sbb
notl
jb
pop
add
inc
scas
inc
adc
idivl
mov
xor
xchg
mov
inc
inc
popa
and
scas
mov
push
daa
or
jo
mov
hlt
and
dec
std
inc
xlat
mov
dec
push
repnz
mov
xor
jns
les
sub
popf
push
xor
data16
arpl
inc
dec
dec
adc
sub
jmp
imul
xor
incb
sbb
mov
cmpsl
int
sub
sbb
dec
and
add
sub
mov
cs
outsl
enter
data16
lock
mov
and
mov
outsb
enter
insl
cmp
mov
or
test
add
insl
lods
and
adc
aaa
sub
push
dec
jmp
inc
push
loop
punpckhbw
mov
das
inc
and
subl
adcb
sbb
dec
out
add
dec
shlb
sbb
mov
popf
fcomps
lahf
repz
xor
repz
push
and
outsb
and
scas
add
sbb
dec
ret
jo
push
mov
push
arpl
xchg
mov
jmp
or
das
aas
sbb
adc
popf
jl
push
jmp
out
cmpsb
xchg
test
sbb
mov
int
aad
xchg
sbb
sbb
scas
push
cmc
jb
fdivrs
into
or
jecxz
dec
jno
add
jbe
pop
fcoml
test
jne
jo
es
testb
mov
divl
push
addr16
add
xchg
mov
fwait
out
push
fadd
test
mov
xorb
call
pop
xorl
jae
loope
movsl
imul
mov
xchg
insb
shr
in
or
movsl
lods
test
push
and
mov
xchg
cmpl
mov
cmc
int
mov
iret
int3
jns
jge
sub
pop
js
mov
arpl
aam
loopne
das
sub
scas
xchg
lahf
inc
or
sub
adc
dec
sub
mov
mov
rcrb
jo
and
cmpsl
sbb
sbb
jecxz
add
lods
cmp
pop
test
pop
and
mov
inc
rclb
sbb
les
lock
loop
mov
stc
ljmp
xor
lds
inc
inc
add
inc
cmc
into
les
sub
mov
mov
mov
inc
outsb
xor
cli
popa
xor
or
mov
fldl2t
test
bnd
std
push
cwtl
xchg
adc
and
cmp
xor
aad
mov
iret
test
cltd
mov
je
xor
and
xchg
adc
and
loope
leave
add
iret
daa
shlb
mov
cmp
xchg
test
pop
leave
and
shlb
jbe
outsl
in
lret
into
push
lock
rorb
dec
les
inc
mov
push
loop
mov
mulw
push
mov
mov
xchg
out
or
icebp
sub
sub
xlat
sahf
mov
test
into
xor
mov
add
xchg
cmp
fstps
sarb
lret
cwtl
mov
xor
fnsave
test
outsb
sub
add
sbb
push
inc
cld
adc
sub
jbe
push
movsl
xorl
pop
sub
cwtl
jecxz
stos
push
inc
add
jnp
or
int3
fisubrs
imul
jp
cmp
fmuls
pop
dec
ret
cmpsl
and
out
sub
stos
or
test
lea
add
cmp
pop
inc
jne
ldmxcsr
rol
sub
jecxz
daa
or
dec
xor
push
xchg
pushl
mul
mov
inc
sbb
daa
xchg
jae
data16
mov
xor
xchg
xchg
push
sahf
and
mov
or
cmpsb
push
mov
inc
xchg
sbb
fldenv
pop
xchg
ds
repnz
xchg
mov
and
jo
addr16
outsl
jb
mov
cmp
sbbl
sub
push
sub
inc
jns
xchg
mov
mov
fucomip
pop
adc
xchg
or
xor
loope
data16
pop
std
xchg
call
es
jmp
int3
mov
and
cmp
in
mov
dec
mov
es
or
test
jnp
icebp
or
inc
outsl
or
stos
and
fcoml
mov
out
xlat
and
cmpb
sbb
lds
adc
push
inc
pop
fs
adc
dec
push
mov
xchg
lahf
insl
aam
loope
sub
sbb
pop
in
cmpsl
aad
lods
push
cltd
push
sub
roll
cmp
imulb
cli
inc
out
test
dec
loope
mov
cmpsl
loopne
xor
lock
std
std
jp
repnz
fwait
mov
out
inc
dec
or
ss
std
xchg
dec
test
call
sub
jne
cmpsl
and
loope
gs
repz
jp
fs
and
sub
dec
cmp
dec
mov
repz
mov
fneni(8087
jnp
rcrl
mov
sub
ret
mov
mov
add
pushf
sub
stos
pop
jno
pushf
test
aaa
sub
lock
jb
jecxz
stc
dec
jbe
sub
xlat
mov
jmp
sti
jp
pusha
std
or
mov
js
mov
pop
jb
pushf
stc
add
out
aaa
xchg
mov
sub
and
mov
or
fucom
stos
ffreep
bswap
add
sub
push
xor
lds
adc
imul
mov
outsb
jle
popf
xor
sub
pop
pop
call
mov
xchg
cmp
add
inc
inc
inc
inc
je
push
push
cmc
sbb
jg
shrl
xchg
sahf
push
les
std
mov
scas
mov
testl
xorl
fiaddl
or
dec
add
test
mov
jbe
sub
mov
out
jmp
xchg
push
add
mov
cli
mov
push
iret
mov
adc
push
in
or
imul
push
xchg
scas
mov
fwait
sub
mov
pop
jne
call
into
jle
jae
clc
adc
jnp
mov
out
dec
cmp
lahf
pop
xchg
or
jmp
imul
push
stos
daa
jl
pop
in
lds
adc
insb
imulb
test
mov
outsb
ss
mov
in
inc
sub
fstpt
add
lods
adc
cmp
daa
data16
fisttps
mov
lret
stc
jge
sti
ja
iret
shll
pop
mov
mov
inc
inc
lret
int3
hlt
add
jecxz
mov
mov
inc
popf
dec
fcmovne
lock
int3
push
xor
inc
je
into
ficoml
jg
add
xlat
mov
insb
lcall
mull
pop
addr16
or
or
sub
push
or
and
dec
mov
inc
roll
jle
pusha
cmc
movsl
cmp
test
adc
pop
mov
jg
cmp
mov
lods
aas
xchg
push
xchg
cmp
cwtl
xorb
push
xlat
scas
xor
les
xor
dec
jmp
dec
nop
enter
les
cs
mov
orl
sarb
adc
push
int
or
mov
std
lods
or
sub
icebp
adc
cmp
stc
adc
cltd
jne
mov
mov
push
lcall
es
fs
push
xor
ss
and
out
daa
inc
mov
lret
xchg
jmp
lds
hlt
outsb
sbb
scas
mov
jge
in
leave
xor
popa
fcompl
addr16
imul
test
cltd
movsb
gs
cltd
fcoml
cmpsb
pusha
mov
sbb
cltd
dec
xchg
push
cld
imul
sub
add
out
fisubs
jbe
daa
sar
fbld
inc
rorb
pop
movsb
pop
push
shr
sbb
repz
dec
dec
pop
sarb
pop
xchg
filds
iret
sub
mov
mov
dec
jo
dec
mov
int3
out
stos
push
jmp
push
add
mov
adc
bound
xchg
sub
mov
gs
add
outsl
pop
inc
sarl
cltd
in
nop
popf
jns
push
jmp
inc
push
das
rolb
push
cmp
mov
ljmp
sub
hlt
jbe
xchg
mov
outsb
enter
adc
sti
popf
daa
arpl
add
jle
ror
aam
rep
test
xchg
sahf
ss
loop
test
daa
pop
xor
mov
pushf
test
fsubs
xlat
lret
push
ror
mov
xchg
cld
repnz
fildll
stos
dec
daa
xor
push
lret
das
aam
inc
adc
sbb
lods
fbstp
shrl
xchg
cli
push
daa
push
pop
dec
and
roll
pop
inc
and
pop
lret
push
outsl
ljmp
xchg
adc
push
dec
pop
sub
enter
gs
mov
xor
cmp
loope
lret
mov
or
gs
add
data16
rolb
xchg
jbe
lea
outsb
testl
jle
cmp
xchg
loope
not
push
pop
mov
cmp
in
pop
out
dec
arpl
dec
cmp
lods
pop
rolb
stos
inc
mov
mov
jl
cld
jge
jo
or
sbb
dec
je
jae
mov
dec
movsb
ret
ljmp
popa
fs
lahf
mov
sbb
ror
dec
or
push
cltd
lahf
arpl
ret
xchg
lea
pop
out
sbb
xchg
movsl
lret
xor
mov
mov
sub
jmp
push
lock
pop
cmpsl
mov
fwait
mov
mov
sbb
js
jae
xor
stos
iret
add
sti
dec
call
lahf
movsb
and
fcmovbe
fbstp
or
adc
sub
pusha
mov
loop
pop
mov
sub
leave
ds
mov
enter
pusha
mov
push
and
cmp
push
aas
scas
xchg
das
cmp
cmp
scas
xor
cltd
movsl
cmp
xchg
loopne
pop
or
dec
sub
pop
pop
rorb
int
cmp
pop
xor
test
mov
imull
mov
cmpsb
call
mov
adc
js
mov
lds
daa
scas
push
inc
ret
insl
lods
cld
stc
bound
adc
xor
or
or
mov
cs
mov
movsb
push
sti
dec
sub
scas
inc
xor
pop
fstl
or
mov
dec
lods
test
pop
push
jne
cmc
lods
mov
add
sbbb
xchg
mov
cltd
sub
or
mov
and
or
mov
add
je
cmp
jmp
cmp
les
ja
psubw
stc
pop
xor
insb
dec
dec
push
jns
add
rcrb
push
cmp
sub
cs
mov
dec
add
loope
or
mov
sbb
lock
cmp
sub
cmpsl
jb
dec
push
int3
inc
addr16
push
add
in
cltd
sub
arpl
sbb
push
mov
add
fsubrl
add
push
cmpsl
incl
push
rcrl
cmp
aam
add
mov
push
out
jno,pt
push
or
hlt
inc
xchg
mov
cmpsb
inc
pop
test
and
cmp
xor
adc
int3
dec
xchg
pop
ret
push
cmpsl
inc
insl
arpl
mov
mov
das
test
clc
pushf
sbb
or
jb
inc
mov
sbb
push
pusha
jmp
loope
jbe
mov
negl
outsl
pop
fs
and
xchg
add
in
icebp
lea
mov
inc
or
dec
cmp
stos
xor
scas
pusha
sbb
xchg
ds
mov
sub
or
mov
mov
pop
out
fcompl
sbb
out
mov
in
cmp
fstps
sti
mov
enter
pop
lock
push
xchg
and
pop
mov
inc
test
xor
ljmp
inc
jb
fstpt
sbbl
outsb
xor
mov
imul
or
mov
test
sub
ljmp
xor
and
in
movsl
xchg
enter
mov
je
push
cs
and
cmpsl
xor
repz
insl
sahf
into
mov
sub
aad
scas
subb
cmp
lea
jo
inc
and
inc
pop
add
rcr
inc
icebp
sub
cltd
pop
int3
out
adc
xchg
cmp
dec
jnp
push
les
dec
lods
pop
nop
jb
lret
out
adc
sub
add
cmpsb
stc
xchg
popa
push
jl
push
aam
loope
aas
xchg
cli
adc
jb
mov
outsb
jns
testl
cmp
adc
cltd
sub
mov
lret
cmc
pop
pop
jle
ror
push
pushl
xor
jns
xor
adcl
arpl
in
push
or
leave
out
mov
push
scas
loope
add
out
movsb
clc
pop
adc
cmc
ret
js
push
ds
ficoms
insb
mov
pop
pop
dec
cmp
sbb
mov
adc
mov
and
cwtl
in
jp
mov
fnstenv
call
cs
imulb
xor
data16
cmp
dec
adc
sahf
jae
jmp
dec
sub
cwtl
push
cli
bnd
sub
inc
addb
mov
cmp
std
test
insl
fdiv
push
scas
xchg
test
mov
imul
cmp
mov
fadds
mov
insb
fidivs
icebp
icebp
out
push
xchg
add
xor
dec
ret
mov
mov
test
cmp
fcmovnbe
test
inc
loop
addl
and
pushf
leave
inc
xor
hlt
je
popa
lret
lcall
int
mov
or
loope
sbb
into
add
and
dec
jp
ds
sub
pop
pop
and
std
enter
das
aam
fmull
leave
in
fsubrl
mov
push
mov
cli
mov
inc
fdivl
mov
fists
shll
sahf
mov
out
xor
pop
out
mov
mov
push
in
push
dec
or
push
xchg
jne
mov
cmp
sar
data16
rcl
loopne
mov
inc
cmpl
aas
cmp
mov
jno
mov
into
sbb
dec
cmp
mov
xchg
lods
jo
decl
jb
xchg
sahf
and
inc
nop
mov
dec
iret
mov
adc
cs
ja
sbb
mov
adc
das
push
mov
mov
in
ret
gs
add
push
lock
pop
add
mov
outsl
loope
cmp
js
scas
mov
jmp
jg
aam
popa
pop
mov
shll
mov
push
sbb
sub
inc
add
mov
sub
and
mov
jp
popf
std
xchg
xchg
xor
cmpsl
jno
mov
inc
scas
pushf
xor
in
sub
ljmp
imul
jns
int3
dec
jecxz
stc
ss
mov
jae
mov
sbb
mov
lahf
and
mov
lds
and
adc
pop
mov
repz
cmp
mov
xchg
jmp
fsubl
repnz
sbb
and
xchg
cmp
mov
jno
push
jae
add
call
lock
call
cmp
js
cmc
movsl
std
test
xor
sarb
les
xchg
dec
test
sub
adc
push
clc
movsl
pop
inc
test
sub
popf
repz
pop
mov
push
mov
mov
push
out
int3
pop
scas
std
enter
rorl
sub
pop
stos
mov
out
push
adc
jnp
pop
dec
jmp
pop
dec
inc
inc
mov
dec
pop
lret
fistps
push
adc
cli
iret
inc
lahf
shrb
cmpsl
and
xor
out
cmp
or
push
movsl
pop
add
and
jb
rclb
pop
incb
xchg
or
int
mov
pushf
int3
call
bound
vcvtps2dq
mov
inc
xor
mov
dec
out
and
lahf
cmpsl
sbb
mov
inc
mov
rolb
sbb
stos
bound
sub
sbb
dec
mov
mov
lock
jb
dec
arpl
nop
adc
insb
fildll
cltd
sub
inc
repz
andl
xchg
mov
stos
dec
mov
dec
jae
out
arpl
popa
xchg
in
out
and
add
ljmp
addb
pop
pop
sub
inc
mov
pop
aaa
cmpsl
add
dec
xchg
adc
insl
lcall
push
jnp
enter
mov
jb
mov
lret
push
lds
push
add
and
cmp
leave
stos
je
stc
out
cmp
inc
sub
subb
jns
cmpsb
mov
push
inc
decb
in
in
aam
or
push
movsl
negb
cmp
cmp
xor
add
cmc
sarl
fsubr
jbe
jne
jmp
inc
mov
mov
or
lahf
pop
adc
fisttps
and
in
cmp
mov
push
fs
inc
mov
imul
inc
int3
inc
dec
inc
mov
cmp
and
push
pop
xor
push
fsubs
test
inc
and
cmpsl
inc
pop
mov
cmp
jge
jle
test
fimuls
sub
lahf
pop
aas
roll
gs
mov
cmp
adc
jmp
xorb
sub
and
adcb
dec
mov
mov
mov
sbb
or
das
in
mov
fwait
jns
xor
call
adc
jns
sbb
insl
jns
jae
jmp
dec
stc
stc
scas
aam
and
or
sbb
outsb
inc
mov
add
pushf
push
lea
out
dec
mov
in
sub
int
in
in
mov
inc
push
cs
mov
aam
call
add
lret
mov
add
loop
adc
jb
xor
je
push
movsl
inc
push
mov
sub
pmulhuw
addr16
xchg
lret
push
sbb
push
imul
lods
mov
dec
push
das
inc
mov
jg
and
xchg
adc
jo
xchg
xor
lret
imul
addr16
mov
outsl
repnz
cli
data16
inc
mov
add
xor
inc
inc
sub
add
fcoml
push
arpl
lods
jae
push
or
xchg
repnz
orl
mov
std
fildll
in
das
push
cmc
xor
xchg
dec
out
push
jbe
insb
push
cmp
pop
push
inc
sub
scas
lahf
xor
pop
in
loopne
dec
inc
pop
mov
int3
lock
xchg
scas
push
enter
mov
inc
stos
popf
in
mov
imul
loope
fstpl
lea
inc
and
rcrb
mov
jge
frstor
imul
push
mov
mov
insl
sub
xchg
fstl
lods
test
out
insb
xor
sbb
xlat
clc
cmp
jle
leave
mov
dec
dec
xchg
cs
scas
pop
sub
call
jecxz
fcoms
fiadds
mov
xchg
int3
pop
jp
fmull
mov
testb
outsb
sub
add
xorb
xor
fisubrs
repz
xor
inc
mov
dec
addr16
push
push
add
adc
addr16
ds
mov
pop
jne
jg
sarl
imul
push
xchg
popf
pop
pusha
sub
adc
push
xor
enter
fmuls
pop
adc
cld
nop
adc
or
lods
jecxz
aad
fwait
aad
cltd
cmp
sahf
andb
std
sub
xchg
aad
add
jae
mov
push
jg
shl
hlt
repz
dec
nop
sub
pop
clc
mov
pop
adc
rcrl
lods
mov
in
ret
sbb
pop
test
sti
enter
pop
in
dec
ds
ljmp
test
xor
jmp
and
lcall
and
jae
push
add
mov
test
push
jae
dec
ljmp
dec
out
jg
jno
adc
xor
fsts
in
pop
cwtl
xchg
mov
jbe
push
lret
arpl
xor
aas
mov
loop
call
repz
sbb
adc
movsb
fs
jbe
sbb
mov
rcrb
dec
std
andb
or
or
rcll
inc
sarl
in
cwtl
adc
sbb
es
into
cs
cmp
jno
pop
std
in
in
mov
lods
sub
and
addr16
pop
push
push
jle
push
add
aas
or
xchg
cwtl
es
xor
xchg
sbb
test
loopne
cmpsl
xor
int3
mov
filds
add
add
add
and
enter
mov
push
int
mov
adc
adc
dec
inc
mov
in
popa
pushl
pusha
ret
or
and
pop
inc
push
int
mov
in
enter
mov
inc
fs
jne
jnp
pop
jge
sti
jmp
sub
mov
loope
xchg
aas
add
mov
xchg
mov
inc
xorl
xchg
inc
jnp
jno
ss
pop
push
sahf
mov
test
scas
xlat
xor
sbb
ret
fistpll
leave
jnp
xchg
lret
cmp
adcb
es
xor
sbb
mov
jns
inc
xchg
jg
or
lods
cmpsb
add
pushf
or
lods
adc
xor
add
lods
stos
jnp
mov
jno
cltd
xchg
xchg
loope
lods
in
cmpsb
adc
pop
pop
sub
nop
mov
cmpsw
lea
jne
push
push
fisubs
push
mov
clc
pushf
pop
jae
stos
push
push
jnp
push
xchg
pop
xchg
fdivs
pusha
sbb
fildl
add
fstl
add
mov
pop
dec
sarl
popa
push
fcompl
sbb
pop
jp
inc
pop
out
divb
jo
mov
arpl
test
sub
and
mov
cli
mov
cmp
hlt
jg
jbe
push
pop
and
jp
in
mov
ljmp
jle
aas
sub
test
inc
xorb
jns
sbb
in
and
mov
sbb
xchg
sbb
cs
sarl
outsb
out
js
xchg
pop
push
daa
sahf
pop
xor
test
insb
pop
repz
test
into
adc
or
enter
sub
xor
xor
xchg
lret
xchg
sub
mov
cmc
or
pusha
jg
movb
mov
dec
into
std
pop
fisubrs
out
push
jae
add
sub
test
mov
adc
enter
jecxz
lret
xor
sahf
les
dec
or
mov
or
mov
nop
ljmp
jecxz
es
ret
adcl
out
pop
sbb
jns
sahf
mov
push
jg
or
fidivl
ja
push
lahf
and
sbb
daa
jo
and
add
mov
mov
and
mov
dec
xorl
ja
fimull
repz
mov
stos
mov
add
hlt
jns
adc
in
jg
stos
or
cwtl
inc
dec
ss
or
jne
pop
lds
in
add
and
ljmp
scas
xor
lds
test
add
mov
dec
aam
fdivp
jge
inc
das
out
jns
xor
jg
stc
mov
shrb
arpl
popf
mov
jns
pop
push
inc
mov
inc
push
stos
sub
out
or
and
push
xor
out
dec
stos
mov
loop
mov
insb
dec
jno
push
jecxz
mov
add
dec
mov
push
push
cli
sbb
test
and
push
and
xchg
mov
push
xor
sbb
inc
popa
cmp
sbb
jnp
sub
rolb
xchg
push
das
insl
or
xchg
out
or
fisubl
sar
mov
bound
pop
sbbb
out
arpl
loopne
xchg
clc
mov
movsb
popa
mov
pushf
jecxz
xchg
scas
mov
cwtl
clc
lea
jge
xor
test
jno
imul
and
mov
sbb
or
fdivrl
sbb
add
mov
ror
sub
cmova
in
jmp
push
pop
cmc
lock
std
bound
test
in
sbb
inc
cmc
mov
add
dec
pop
ret
fs
sub
test
loopne
cwtl
inc
push
loope
pop
fld
sub
cmp
shl
pop
scas
test
sub
in
sub
and
pop
dec
lds
or
mov
pop
jno
lret
and
mov
std
push
das
sbb
js
xor
push
mov
mov
pop
ficoml
xor
hlt
mov
addb
int
sub
movsl
adcl
cmpsl
push
mov
insl
adc
add
testb
jg
jecxz
push
pop
pop
lea
xor
cmp
lds
in
imul
andb
sub
ror
outsb
int
pop
imul
pop
mov
or
mov
mov
push
mov
insb
repnz
adc
cmp
mov
sub
mov
mov
push
gs
daa
rol
add
pusha
sub
lods
mov
adc
fdivp
in
and
ja
xor
scas
fsts
xor
adc
std
jcxz
test
jne
fnsave
push
out
xor
mov
dec
xlat
ljmp
add
insb
test
std
mov
push
lods
dec
mov
xor
stos
and
inc
iret
sbb
jl
and
ficoml
outsb
movsl
xchg
out
push
and
mov
lcall
ljmp
test
ja
pop
mov
mov
cmpsl
cld
daa
sbb
fldcw
pop
pop
push
push
cmp
pop
xchg
arpl
cmc
lcall
push
xor
mov
out
cmp
call
xor
or
mov
xor
and
cmp
leave
push
mov
std
push
js
dec
fnstcw
xchg
or
mov
push
out
test
in
out
mov
push
adc
jnp
lea
dec
jno
cmp
cmpsb
lahf
push
movsl
cmp
leave
ret
or
mov
iret
les
pushf
mov
pop
lcall
push
inc
rolb
sub
movsb
mov
mov
dec
aam
adc
cmp
jb
aad
sti
rcrl
pop
fsub
push
int
sti
jae
pop
stos
xor
mov
adc
xor
add
out
dec
mov
jnp
sub
leave
testl
mov
mov
push
popf
inc
or
dec
bound
sub
roll
mov
sub
popa
icebp
imul
or
loopne
add
sub
pop
and
pop
cmpl
test
bnd
fstps
enter
mov
push
or
cmp
mov
cwtl
mov
aad
stos
push
jbe
jae
mov
fldl
mov
imul
aas
inc
scas
ret
xlat
jecxz
out
in
int
cld
mov
lret
ficoml
jnp
pop
dec
inc
push
fadds
xlat
addr16
loopne
fs
push
or
hlt
ds
out
jae
lret
insb
addr16
cmpsb
mov
sbbb
in
jle
neg
mov
add
push
xchg
into
add
or
cmp
ss
add
dec
pop
sub
gs
inc
jo
and
ret
adc
mov
rol
dec
adc
sbb
xchg
or
movsl
addr16
bound
mov
insb
movl
lods
xchg
or
clc
andl
call
in
dec
or
das
lods
push
adc
pop
mov
es
cli
jmp
cld
or
sarb
cltd
pushf
test
or
fbstp
cmp
add
sahf
jae
repnz
in
dec
jle
add
in
movsb
inc
add
xor
shl
ficoms
stos
sbb
pop
int
jne
hlt
movsb
adc
pop
push
or
iret
push
mov
mov
ja
mov
pop
inc
movl
xchg
adc
pop
jo
sub
jbe
inc
movb
ljmp
dec
lret
and
xchg
pop
add
sbb
xchg
stos
and
lret
das
leave
ds
jno
cmp
cmp
cmp
pushf
xchg
das
nop
jae
dec
dec
pop
xchg
sbb
sbb
mov
call
lds
lea
or
dec
das
fsubr
and
arpl
xchg
inc
lret
adc
stc
cs
pop
mov
adc
push
sub
lcall
jbe
xor
and
pop
sub
jg
rcl
add
pop
inc
rcl
stc
xor
mov
inc
mov
rorb
fistpll
pop
in
xor
xchg
or
mov
sbb
shl
call
mov
data16
adc
pop
adc
mov
cli
adc
cs
inc
or
bound
into
cmp
outsb
dec
add
negb
or
hlt
fcmove
cs
test
jg
inc
push
lods
mov
sahf
repz
add
ljmp
sbbb
jmp
jbe
push
test
dec
dec
xor
xor
pop
add
push
arpl
sbb
jg
push
mov
lret
sub
adc
mov
insl
pop
inc
in
ljmp
pop
aad
mov
lret
insb
jnp
cwtl
pop
in
adc
daa
push
cmpsl
mov
xchg
les
pop
mov
jb
in
xor
adc
mov
mov
dec
jb
ret
xchg
shll
mov
and
outsl
cmc
xchg
ja
sub
lcall
adcl
fstl
sbb
push
mov
ja
mov
pusha
arpl
aaa
jmp
add
or
arpl
rcr
shll
inc
xchg
ss
ja
and
mov
fs
push
pop
jecxz
jecxz
shrb
push
in
mov
pop
pop
lds
add
xchg
imul
test
sub
mov
jl
orb
ljmp
mov
xchg
pop
cmpsb
adc
mov
int
pop
je
in
pop
jmp
lea
xor
adc
pushf
xor
jae
add
outsl
inc
dec
xchg
gs
cmc
dec
dec
or
mov
sub
jns
or
out
xchg
cmpsl
std
js
add
push
mov
pop
aaa
inc
adc
je
out
dec
ljmp
pop
push
adc
ljmp
in
mov
sbb
out
popf
bound
sub
stc
movsb
es
and
mov
in
movsl
mov
js
cli
hlt
pop
xor
xchg
addl
xchg
jge
cmp
mov
je
cmp
daa
mov
imul
jae
mov
lret
push
pop
js
add
repz
inc
push
jle
icebp
and
shlb
lods
adc
xlat
cmp
dec
cwtl
and
mov
jl
add
adc
push
dec
jno
aam
push
call
gs
test
jae
adc
and
push
pop
push
out
icebp
dec
insl
add
std
aas
xchg
xlat
je
pop
adc
les
push
roll
lods
in
pop
jp
cli
popa
mov
in
mov
sbb
fldl2e
and
sub
inc
iret
mov
mov
mov
ret
fsubrl
mov
xchg
scas
cld
mov
lret
arpl
and
div
pop
out
mov
xchg
jb
sbb
addr16
cmp
pop
jne
inc
fidivl
cwtl
testb
or
pop
retw
sbb
cmpsl
jp
push
and
xor
mov
mov
xchg
movsl
push
push
cmp
bound
pushf
imul
fldcw
mov
xor
adc
inc
pop
mov
shrl
sbb
int3
test
fwait
loope
sarb
ficompl
dec
shll
enter
fstps
out
push
xchg
pop
dec
jbe
dec
outsl
jbe
add
sbb
xchg
xor
cwtl
add
int
cmp
scas
sbb
jecxz
aad
pop
test
mov
out
subl
lods
std
lret
pop
push
aam
sbb
dec
mov
add
and
mov
imul
push
fcoml
mov
and
sub
icebp
andb
xchg
fsubrs
xchg
mov
addr16
add
icebp
cmp
jl
int3
push
inc
int
xchg
mov
add
jo
adc
xchg
xor
into
testb
orb
int3
sbb
lahf
push
popa
jle
mov
xor
add
out
std
jno
rclb
fsubl
xor
and
addr16
fs
mov
ret
sub
loope
mov
dec
mov
dec
sahf
rcrl
mov
jle
mov
lcall
es
xchg
mov
jecxz
pop
or
mov
rorb
push
pop
xchg
lods
push
movsl
repz
xchg
cli
loope
out
int
lret
inc
sub
lods
aas
cmp
loopne
mov
sbb
ror
mov
dec
rorl
and
repz
or
mov
inc
test
sub
mov
mov
pop
dec
adc
mov
xchg
and
sbb
hlt
pop
insl
and
lock
shrb
js
adc
pop
inc
sub
or
cmpsb
ret
mov
lret
mov
data16
adc
cmp
pop
fcoml
sahf
fwait
je
leave
and
cmp
inc
sub
cmpsb
sub
add
mov
ds
jle
int
out
jmp
jl
cmp
add
std
mov
testl
dec
mov
repnz
xchg
mov
sarb
sahf
mov
xor
in
in
fmulp
pop
mov
push
dec
adc
adc
rclb
cld
cltd
jno
cmpsb
out
add
adc
shll
dec
shlb
popa
jae
adc
ss
gs
stos
push
mov
adc
jns
fildll
or
mov
int
push
int
and
add
ss
lds
fs
push
fdivl
mov
push
adc
setle
adc
sub
sub
sbb
cmp
push
mov
loop
stos
sahf
push
enter
in
js
mov
add
mulb
call
cmc
lock
pop
rorl
stos
pop
pop
sbb
in
not
leave
mov
mov
mov
stc
iret
shll
out
jae
push
outsb
mov
pushf
mulb
popf
mov
dec
adc
outsb
out
add
not
sbb
inc
xchg
das
out
or
xchg
add
roll
insl
loope
stos
push
movl
sbb
sbb
movsl
jb
imul
jmp
mov
add
sub
inc
inc
mov
push
pop
notb
mov
std
dec
or
mov
dec
add
hlt
fildl
out
std
outsb
mov
std
and
xor
sub
push
insb
out
cmp
and
adc
arpl
or
sub
add
inc
lcall
xor
pushf
lahf
xchg
push
int3
sub
es
les
xchg
cmpsl
movsl
xor
inc
pop
outsb
add
xchg
pop
je
pusha
pop
mov
xor
xchg
xor
pop
fsubr
fcomps
mov
dec
pop
xchg
mov
addr16
xchg
cmpsl
mov
addr16
xlat
mov
sbb
shlb
popf
xor
nop
add
aas
mov
xchg
nop
jne
imul
mov
inc
in
jb
fcom
aaa
sub
add
fs
dec
lock
call
int3
into
pop
inc
inc
inc
int3
inc
and
es
popf
mov
stos
mov
push
out
popa
inc
or
and
sub
shl
jne
push
gs
mov
mov
in
push
jbe
leave
enter
js
outsb
fcoms
pop
ret
cmpl
mov
lret
mov
lret
imul
mov
fwait
hlt
push
repz
and
and
jo
inc
inc
push
jb
jae
push
jb
popf
test
fcoms
lock
inc
nop
jo
stos
xchg
clc
notl
jno
mov
test
insb
pusha
add
push
dec
xor
stos
jnp
cs
test
loope
clc
shrl
jno
mov
sub
cld
out
cmp
xchg
ss
mov
pop
js
aaa
ja
data16
ficomps
in
push
add
fs
push
jns
inc
dec
pop
test
mov
aad
idiv
pop
xor
xor
mov
mov
mov
icebp
xor
dec
add
es
jo
testl
cwtl
jnp
pop
mov
gs
imul
pushf
stos
add
andl
pop
or
sbb
lcall
push
push
and
fisttpl
dec
push
adc
hlt
out
movsl
cmp
movsl
jns
mov
dec
mov
fidivl
pusha
subb
stc
and
arpl
push
lods
pop
adc
xchg
or
ret
cld
cltd
inc
or
cmp
and
jae
push
mov
sahf
jle
xchg
inc
clc
sahf
jmp
and
test
scas
into
lock
xchg
fdiv
adc
dec
xchg
repz
jl
loopne
push
xor
mov
cs
jno
push
inc
test
fstpl
int
aam
inc
and
lcall
scas
or
add
and
push
jno
pop
mov
filds
mov
mov
cmp
or
enter
test
inc
pusha
loopne
cmp
js
lcall
or
call
dec
mov
mov
gs
inc
mov
into
xchg
mov
mov
adc
jns
push
xchg
rol
sub
stc
push
lahf
test
movsb
inc
sbbb
jmp
xchg
jge
cmpsb
mov
mov
pop
or
aad
into
cs
inc
adc
mov
mov
adc
add
cmpsl
mov
mov
dec
cmp
enter
shlb
xchg
or
sub
add
inc
loopne
ds
jbe
xlat
repnz
mov
push
les
and
cli
insb
shll
or
aad
pop
cwtl
aaa
loop
dec
mov
sub
inc
loop
inc
and
sub
sub
sbbb
cwtl
movsb
insl
fldl
lret
lcall
aaa
leave
mov
and
jl
adc
mov
xchg
addl
xor
mov
mov
mov
stos
adc
in
jnp
cld
leave
icebp
test
pop
xchg
lret
inc
or
lret
sub
xchg
movsl
maskmovq
idivl
nop
pop
inc
cmp
test
lds
mov
jp
cwtl
add
and
ret
push
aad
push
cs
ret
shlb
nop
or
and
cld
fisttpll
jae
xor
imul
add
mov
std
pop
mov
repz
out
adc
pop
xor
and
imul
cmpsb
aaa
push
xor
sbb
adc
mov
stos
enter
sub
push
loope
mov
std
mov
pop
mov
pushf
pop
out
mov
and
xorb
xchg
scas
imul
aaa
fsubrs
dec
lods
inc
sbb
add
adc
pusha
sbb
arpl
xchg
sbb
fwait
std
sbb
mov
xorb
mov
push
mov
push
outsl
and
inc
mov
mov
sbb
addr16
dec
mov
daa
jp
scas
fisubrl
movsb
xor
pop
shl
scas
add
int3
ss
mov
loopne
lock
xor
stos
sub
jg
ficoms
pop
dec
sti
stos
dec
and
mov
int3
inc
or
pop
mov
mov
in
mov
dec
mov
mov
xchg
dec
lods
sub
sbb
frstpm(287
or
xchg
test
jle
das
push
test
movb
mov
xor
and
das
and
pop
cmp
xchg
push
out
fidivrs
jmp
nop
xchg
dec
inc
dec
mov
cli
pop
add
rcrl
inc
idivl
cmpsl
in
or
in
mov
xor
lcall
dec
fisubrl
notb
add
imul
push
mov
imul
out
adc
out
xlat
dec
push
jno
sbb
push
sub
mov
lods
dec
fs
push
cmpl
pop
dec
xor
ret
mov
stc
int3
add
shrl
push
lcall
or
pop
fstpl
jb
jle
mov
sbb
sarl
cs
inc
mov
les
fstps
jns
mov
inc
xchg
insb
dec
int3
sub
repnz
fsubrs
add
ficoms
dec
cltd
push
or
jg
cltd
cmp
mov
fnstcw
and
hlt
xor
in
dec
push
ds
int
xor
or
hlt
mov
cld
jo
call
inc
lds
xchg
out
push
lods
cmpsb
imul
pop
cmp
jle
or
rcrb
sti
in
fstps
mov
icebp
push
inc
inc
cmp
push
dec
mov
mov
cwtl
test
addr16
rcl
pushf
ja
sbb
scas
mov
es
and
pop
sbb
xor
movsb
out
push
mov
inc
mov
stc
mov
dec
jae
mov
push
fsubrl
xchg
sub
in
push
in
cmpsl
push
filds
jae
cmp
xchg
cmp
and
ja
adcb
arpl
mov
adc
or
icebp
jns
sahf
lds
xor
pushf
and
adc
fiadds
or
rcrl
mul
or
out
mov
mov
leave
xchg
push
or
sbb
cmp
jae
dec
sarb
imul
fistl
in
pushf
sub
xorb
cs
lcall
outsb
cmpsl
add
jo
mov
les
xor
imul
xlat
xlat
pop
leave
pop
pop
jp
jo
shl
outsl
inc
and
dec
in
icebp
or
dec
stos
cmpsb
xor
mov
mov
jb
xor
mov
movsl
mov
mov
iret
jnp
fimuls
jb
cmp
or
cmc
jg
xor
add
cmp
adc
cwtl
adc
add
xor
or
jns
fnstsw
add
push
test
xor
in
mov
xchg
dec
push
adc
inc
arpl
movsl
shlb
sahf
jp
es
mov
call
cmp
push
mov
outsb
out
inc
das
add
in
aas
std
test
mov
pop
mov
sub
nop
fisubl
hlt
push
jl
bound
fst
cld
ljmp
push
test
jno
push
push
xor
pop
andb
xchg
ds
andl
pop
leave
ljmp
out
mov
mov
mov
xor
in
das
fidivl
or
test
sub
cmc
and
jo
pop
lods
nop
js
pop
mov
dec
or
push
fs
mov
mov
pop
add
in
cmp
inc
and
mov
mov
data16
frndint
in
insb
jle
adc
cli
push
add
xchg
jge
gs
in
pop
mov
dec
mov
mov
out
pop
in
es
psubusw
lea
dec
rcll
pop
enter
testl
les
lahf
jmp
xchg
aaa
mov
fstpt
push
mov
sahf
arpl
sti
xor
sbb
insb
inc
test
arpl
xchg
aaa
sbb
add
mov
aaa
mov
cltd
fldcw
sbb
into
into
sarb
imul
dec
jle
fld
pop
add
repnz
rclb
push
mov
imul
daa
shl
pusha
xchg
movsl
jne
push
mov
push
sbb
mov
ja
jg
popa
sub
sbb
xlat
pop
sbb
lret
jo
jo
in
xchg
in
div
sbb
jmp
jno
insl
sub
rcr
dec
mov
sbb
decl
mov
xorl
aam
xchg
push
dec
rcll
std
lret
inc
cli
ret
or
arpl
add
jne
cmp
pop
sub
and
cmc
ds
cmp
sti
bound
out
lods
and
sub
jb
xor
nop
xchg
fcmovne
push
out
shll
pop
dec
divl
cwtl
mov
outsb
xchg
add
mov
shlb
outsl
adcb
lret
test
xor
in
in
push
or
icebp
jmp
jo
rclb
mov
mov
xor
mov
out
insb
lcall
in
xchg
and
inc
mov
int3
adc
mov
fwait
aad
insb
in
mov
xor
jg
mov
shrb
cmpl
aas
int3
mov
push
dec
aam
mov
stos
clc
or
data16
pop
je
aas
pop
jno
mov
pop
das
sbb
xor
sbb
ss
fidivrl
push
xlat
cltd
xchg
test
inc
scas
ljmp
ss
xor
scas
mov
xchg
mov
cmp
pop
mov
adc
rcll
cwtl
inc
in
cltd
or
push
pop
pop
mov
add
mov
test
lret
or
movb
add
or
pop
les
mov
xchg
mov
lods
mov
je
xor
stc
out
adcl
ljmp
scas
adc
xor
jo
sahf
in
data16
iret
sbb
jp
and
and
or
jecxz
orl
add
scas
testl
dec
aad
cmp
inc
mov
dec
jp
mov
and
imul
push
mov
inc
pop
rcl
xchg
cmp
jp
lahf
mov
sarl
ja
mov
jns
jb
and
inc
lock
xchg
and
add
pop
test
sahf
mov
iret
in
xchg
sbb
stc
push
push
sbb
ret
hlt
inc
jns
cmp
movsl
jmp
adc
ja
pop
dec
scas
sub
stos
aas
lods
jns
stos
xchg
adc
pop
outsl
sti
insl
jl
mov
cwtl
testb
inc
mov
pop
jne
fidivs
call
or
pop
fdivs
leave
jns
xor
hlt
frstor
mov
xchg
sbb
jb
sarb
fscale
outsl
out
andb
push
push
lret
pushf
imul
roll
mov
or
or
fisubs
jo
dec
dec
fists
xor
and
int
mov
or
push
adc
add
in
mov
push
push
mov
mov
iret
adc
inc
lods
mov
insl
and
ja
lahf
cmp
pop
sbb
add
imul
add
enter
sar
data16
ja
lea
cmp
ficoml
mov
pop
xor
push
leave
xor
in
in
lahf
and
cmpsb
xor
jno
cmp
mov
scas
imul
or
js
xchg
and
mov
mov
push
sub
in
stc
jbe
loopne
xchg
jge
stos
xlat
scas
push
pop
xchg
sbb
lea
add
adc
adc
shll
xchg
inc
jo
pop
enter
loop
rcrb
xchg
hlt
jp
mov
fstpl
ret
aaa
sbb
push
fcomi
jae
jl
adc
or
xchg
das
insb
test
loop
or
fidivs
inc
in
sub
subl
fcmovnbe
daa
fisubrs
insb
jo
sub
or
fistpl
repz
lret
sub
xor
stos
or
int3
cwtd
test
mov
fwait
cmpsl
fldl
push
pop
xchg
mov
lods
cld
fistpl
stos
push
cmpb
out
jge
rolb
das
sub
stos
cmpsb
nop
ret
test
pop
inc
aas
scas
in
cmpl
pop
push
gs
inc
lods
scas
pop
sub
outsl
push
fcomp
bound
add
push
jno
ret
fstpt
das
and
leave
ret
and
inc
xchg
sbb
fnsave
or
mov
stos
push
pop
addr16
jne
or
mov
mov
mov
iret
cs
jb
lods
nop
pop
push
pop
arpl
add
add
leave
mov
lcall
scas
into
cmpsl
cltd
subl
and
or
mov
loopne
nop
mov
adc
sub
add
push
dec
iret
mov
data16
ljmp
push
imul
sub
or
int3
adc
sbb
scas
mull
aam
jno
pusha
and
pusha
xor
xchg
lret
xchg
cltd
mov
pushf
jne
test
cmpl
jp
pop
cmc
popl
bound
adc
fsubp
xchg
fdivrs
std
push
jecxz
push
insb
cmp
cvttps2pi
cmp
dec
or
cmp
in
out
testl
xor
jmp
lock
lock
sub
outsb
es
in
loope
shrl
pop
push
and
int
mov
nop
imul
xor
sbb
push
sbb
xor
jg
loop
bound
js
push
fscale
test
adc
mov
leave
lahf
hlt
movsb
shrl
cmc
cld
add
lahf
int
dec
sahf
sub
and
cli
ds
add
or
jne
out
lahf
push
or
mov
popa
repnz
aad
adc
aaa
stc
imul
mov
loop
add
sub
cmc
cltd
mov
jg
mov
and
mov
pop
push
iret
xchg
je
mov
addr16
ljmp
or
and
and
pop
and
sbb
test
ret
pop
xchg
or
mov
jle
ret
stos
test
and
out
cmp
out
adc
pop
xchg
mov
mov
cltd
jle
xor
stos
jl
sub
dec
das
or
xor
outsl
popa
inc
xchg
pop
sbb
cmp
clc
and
mov
shl
imul
sub
add
repnz
mov
jecxz
outsb
dec
ja
jae
mov
ror
neg
push
ljmp
aaa
push
inc
lret
scas
xchg
xchg
xor
loope
pop
xchg
rolb
shlb
inc
push
aam
dec
sbb
dec
jecxz
cmp
sbb
int
xor
push
cmp
and
pop
mov
push
jnp
call
xor
enter
movsb
out
popf
ret
movsb
stc
xchg
repnz
mov
orb
jecxz
sbb
xlat
add
push
adc
mov
inc
lods
lds
cmc
pop
xchg
xchg
push
lods
imul
cmp
add
or
inc
fwait
mov
ss
int
sub
mov
loopne
decl
sahf
mov
jae
test
xor
inc
mov
mov
fisttps
add
mov
pop
insl
stos
lods
xor
js
add
sbb
mov
notb
add
aaa
xlat
clc
inc
sub
cld
cmp
sub
push
jle
fcomps
add
sbbl
pop
test
adc
int3
in
sbb
add
xor
lret
bound
mov
adc
jle
cltd
and
cwtl
fimull
ret
push
ds
aaa
arpl
sub
push
sbbb
nop
push
xchg
call
xchg
movsb
push
dec
fsubrs
mov
xchg
sarl
mov
sub
test
ja
ss
sar
inc
adc
jns
xchg
aas
and
sbbl
test
push
int
add
sbb
es
sbb
pop
xchg
mov
pop
xchg
add
mov
fdivrp
mov
das
scas
cmp
lods
out
xchg
fdivrs
sub
inc
cmp
cmp
mov
icebp
and
adc
in
fyl2xp1
xor
pop
inc
push
adc
sbb
enter
push
push
into
test
cmpsl
clc
popa
daa
aam
xor
inc
xor
fstpt
sti
fcomp
shl
mov
xor
sbb
cmp
mov
jns
loope
jge
incl
arpl
pop
push
inc
fildl
pusha
inc
sub
loope
xchg
jbe
push
pusha
pop
out
pop
mov
cwtl
cmpsl
and
ss
ficoms
addb
stc
mov
cmp
jle
dec
adc
sub
test
sbb
cmpsb
loopne
enter
repz
call
push
dec
xor
xchg
iret
ss
not
xchg
jne
dec
jg
int3
das
mov
jecxz
adc
inc
adc
mov
xor
test
xchg
xorl
sbb
xchg
fwait
pop
bound
popa
mov
out
add
sub
in
sub
pop
mov
jle
mov
ret
or
add
pop
jle
xchg
fsubrl
aam
inc
fistpl
movsb
sti
adc
push
mov
sub
xchg
dec
inc
insl
out
shl
push
cmpsl
pop
sbb
cs
rorb
and
jg
nop
mov
push
mov
jo
cmp
ds
sbb
cmp
icebp
jle
out
ljmp
out
cmpsb
xchg
add
pop
sub
ljmp
hlt
xchg
in
pushf
roll
xchg
and
sahf
add
inc
in
scas
cmp
jp
fildll
roll
pop
pop
add
adc
lods
jbe
pop
shrb
sbb
pop
xor
data16
gs
popa
lret
stc
mov
stos
push
jp
icebp
cs
pop
push
pop
jecxz
lea
jbe
jl
mov
test
jo
dec
dec
loope
movsb
or
adc
sub
mov
fisttps
jno
out
stos
inc
scas
rclb
inc
mov
cltd
add
xchg
mov
mov
and
xor
in
jbe
adcl
imul
xchg
mov
sub
clc
jl
mov
jp
add
ret
inc
cmp
or
or
xchg
in
pop
fnstenv
je
repnz
mov
inc
xor
cmpsl
add
sub
sti
in
pop
push
dec
testb
test
nop
push
mov
int
lret
sub
mov
cmc
mov
adc
pop
jge
mov
xchg
jno
add
and
or
or
and
dec
cwtl
cmp
bound
adc
lcall
push
adc
xor
mov
cmp
mov
test
pushf
test
call
inc
mov
mov
out
jl
jae
daa
xor
mov
mull
cmp
sbb
jns
pop
and
div
lea
pop
cmpsl
mov
jmp
std
fidivrl
in
scas
lret
or
push
mov
push
in
daa
inc
and
dec
xor
mov
sbb
outsl
inc
stos
push
jmp
stos
loope
dec
pop
pop
hlt
jb
xor
fadds
mov
jge
loop
adc
adc
mov
inc
das
addr16
pop
lds
or
mov
pop
test
mov
daa
mov
into
int
inc
outsl
mov
stos
pop
lret
cmp
out
push
es
lahf
repz
add
mov
loopne
aaa
mov
les
push
imul
cmp
add
popf
pop
adc
and
loope
mov
aas
cltd
mov
out
addl
and
scas
inc
arpl
pop
aad
dec
in
fldcw
je
cmp
cmpsl
mov
imul
dec
push
cmp
repnz
aaa
xchg
iret
xchg
leave
jb
mov
cmp
and
sbb
test
ljmp
push
cmp
fwait
and
xor
std
mov
sbb
sub
push
sbb
mov
dec
mov
les
mov
sti
inc
pop
push
jp
mov
push
aas
sarl
mov
dec
mov
mov
loop
dec
xchg
orb
or
jno
test
cmp
add
mov
popa
sub
cmp
loope
mov
in
inc
dec
fistpll
adc
int
mov
mov
cmp
lods
xchg
iret
lock
sub
cmp
aas
hlt
inc
push
pop
inc
call
jle
jnp
xchg
or
sti
loopne
loopne
fwait
dec
push
fistpl
jecxz
mov
data16
inc
subl
in
imul
sub
jge
shll
ret
call
push
adc
ja
adcl
dec
std
dec
xchg
adc
movsb
cmp
push
outsb
popa
jl
lahf
pop
shrb
add
popf
fistpl
stos
outsb
xchg
ret
int3
lret
mov
cs
xor
lds
xorl
mov
pop
mov
addb
lods
andl
sbb
stos
jbe
sub
or
mov
pushf
scas
rcrl
dec
add
outsb
pop
clc
ret
fwait
aas
and
gs
out
xchg
shrl
data16
lcall
sahf
mov
sub
cli
cmp
push
adc
jmp
stc
ret
and
call
negl
mov
jo
mov
std
jne
mov
scas
cmpsb
sbb
xor
adcb
movsb
or
pop
sarb
fdivs
in
push
cmp
jns
mov
mov
jg
pop
lret
fcomps
xor
movsl
pop
adc
out
fadd
stos
mov
fiaddl
iret
int
cmp
cld
sub
cmp
sub
call
inc
adc
push
adc
lahf
cmpsb
sub
mov
leave
mov
and
fyl2x
aam
xchg
int3
fdivrs
inc
xchg
loop
aad
lret
shrb
int3
jge
stc
jmp
xchg
shll
mov
add
xchg
stc
out
add
mov
test
fstl
iret
mov
xor
cmp
in
jb
xor
nop
shll
lock
jecxz
mov
xor
sub
insb
stc
movsb
dec
fistl
in
mov
fsubrl
dec
mov
xchg
push
cmp
xchg
dec
sbb
adc
dec
aad
ds
popf
sub
inc
cmpsb
adc
lea
inc
ret
inc
pop
mov
xlat
dec
movsl
pusha
movsl
out
es
xor
dec
movsb
divl
andl
cmc
and
sub
xchg
int
dec
cmp
cltd
add
pop
pop
and
pop
push
jmp
inc
inc
fs
fldenv
test
jbe
out
adc
call
in
mov
or
add
popa
push
in
ss
mov
xchg
dec
int3
lea
das
mov
test
mov
xchg
xchg
lods
pop
xchg
pop
mov
test
inc
xchg
push
mov
addb
pop
push
sahf
push
pusha
push
dec
jecxz
test
or
add
fsts
ja
dec
mov
stos
mov
sarb
enter
push
stc
and
call
sub
inc
pop
cs
dec
and
test
mov
lcall
bnd
fdivrs
dec
loope
jo
sbb
jbe
into
jl
cmp
mov
dec
mov
dec
adcl
stos
je
cmp
mov
pop
mov
sahf
inc
pop
and
sahf
in
add
sub
inc
enter
lods
in
fcoml
aaa
mov
stos
mov
out
sbb
cmc
jp
in
mov
loope
add
pop
aas
clc
mov
insl
pop
push
mov
mov
inc
fs
sub
stos
dec
cmp
push
pop
or
dec
xchg
imul
pop
or
push
stos
add
mov
or
scas
mov
loope
mov
call
lods
imul
push
movsb
out
mov
orl
adc
adc
lods
fidivl
pop
or
and
push
dec
push
daa
insl
or
inc
adc
jmp
dec
xor
add
mov
into
lret
cmp
dec
int
jecxz
adc
jg
lock
mov
mov
mov
inc
ljmp
pop
sub
dec
into
shrb
pop
dec
fmul
je
aas
cmp
ret
aaa
mov
leave
inc
stc
scas
mov
sub
int3
pusha
mov
pop
or
rcr
js
mov
or
xor
aas
pop
xchg
lahf
pop
sub
mov
push
out
pop
push
out
lcall
adc
mov
rcrb
push
push
cld
outsl
in
push
lret
sahf
inc
and
fs
xchg
loopne
pop
xchg
mov
cli
ds
add
sbb
adcl
jo
jns
mov
adc
inc
iret
cmp
xor
cmp
dec
or
aaa
dec
jns
sub
and
ss
test
test
js
mov
movsl
in
popf
sbb
mov
dec
lock
addb
sti
and
cs
jmp
movsl
es
scas
in
repnz
decb
rcrb
negb
ficoml
adc
ret
jmp
in
nop
fs
test
mov
mov
and
sub
push
jbe
lret
mov
sbb
neg
pop
mov
lea
inc
cwtl
scas
jl
popa
jae
jmp
fadds
sub
cmpsb
pop
add
and
mov
rcrl
mov
dec
cmp
std
mov
fsubr
mov
mov
sub
sub
andb
in
popa
add
rcrb
and
mov
cmp
flds
stc
push
xor
daa
sbb
cmp
fxch
dec
and
in
xchg
jns
loop
jmp
and
int
cltd
push
cmp
aam
mov
fists
fsubr
roll
mov
aaa
cs
jne
stos
and
aam
xor
xlat
test
inc
mov
insl
es
cmpsb
dec
dec
jae
push
add
or
or
out
mov
test
enter
fs
loopne
pop
out
fdiv
cmp
lcall
ffree
mov
mov
in
cs
jns
leave
dec
dec
xchg
add
mov
sti
in
push
decb
mov
mov
arpl
pop
shll
sbb
cmp
xor
enter
cmp
push
add
mov
push
test
xor
dec
dec
sbb
lock
pop
aad
dec
es
cli
iret
call
nop
xlat
das
and
nop
js
in
xor
add
jno
or
mov
daa
loope
pop
sub
fisubrs
bound
add
xchg
mov
bound
ret
jle
mov
in
xor
out
mov
or
dec
lret
inc
xor
mov
out
jg
sahf
ds
cltd
dec
repnz
lahf
inc
popl
imul
lcall
jmp
sub
rorl
pop
push
xor
adc
leave
jge
ret
add
xor
cmp
mov
out
mov
test
pop
mov
sub
mov
divb
dec
inc
or
jb
in
cmc
push
push
pop
cmp
dec
cmp
gs
add
repz
dec
fwait
pop
jbe
lret
bound
mov
iret
in
js
lcall
test
pop
jb
push
mov
mov
bound
add
xchg
pop
cs
jecxz
ja
loope
popf
dec
test
jne
lret
xor
adc
xchg
orl
mov
sbb
in
sbb
lea
pop
pop
xor
stc
notl
cltd
iret
mov
or
jle
adc
xchg
pop
mov
jae
xchg
fstpt
pushf
and
pusha
sub
and
pop
push
dec
das
sub
cs
decb
movups
push
mov
mov
add
dec
or
fisubrs
sti
out
pop
jo
arpl
push
repz
push
mov
add
js
gs
jno
jne
call
or
inc
cmp
insl
pop
into
in
lds
mov
jecxz
adc
inc
and
insl
adc
mov
or
iret
test
gs
lret
dec
and
dec
pop
fs
iret
cwtl
fs
mov
imul
out
xlat
push
ret
adc
dec
int
push
lret
jno
popa
iret
lea
mov
pop
lock
in
xchg
outsb
sbb
mov
and
sarb
or
jg
or
mov
sub
xor
ljmp
lcall
out
adc
add
ret
pop
or
cmp
jmp
leave
add
adc
daa
sbb
xor
adc
push
and
cmpsb
add
cwtl
pushf
nop
dec
add
popf
sbb
jp
aas
xor
dec
add
pop
xor
fs
popf
fiaddl
mov
in
jne
shll
and
inc
scas
jbe
movsb
mov
rorl
icebp
stc
add
inc
pushf
xchg
mov
in
adc
cld
cmp
or
sarl
adc
adc
icebp
jge
mov
jle
sbb
mov
jmp
jp
test
movsl
outsb
mov
and
loopne
pushf
mov
out
cmp
sbb
push
arpl
jae
adc
lret
inc
loop
aas
int3
gs
push
push
fidivl
inc
js
xor
imul
dec
gs
mov
pusha
int
testl
cpuid
pushf
push
adc
test
pop
jecxz
dec
dec
fdivr
fs
lods
push
cmpsl
and
in
scas
fidivrs
push
es
pop
adc
mov
cmc
cmc
add
mov
shrb
sbb
mov
stc
sub
rcr
fldenv
xor
adc
sub
adc
sub
cld
pusha
xchg
cwtl
cli
out
mov
sub
lds
lahf
dec
xchg
popl
add
fistps
push
or
jge
fisubrs
in
sub
xchg
jl
dec
mov
repz
in
pop
ret
jne
xor
pop
mov
pop
adc
js
rcl
mov
mov
in
mov
xor
push
or
lea
jp
daa
in
sbb
inc
jecxz
ret
mov
jo
dec
mov
pop
jno
mov
pop
clc
daa
test
cltd
add
add
mov
repz
fmull
jbe
cltd
jmp
cs
shrl
test
and
iret
add
cmp
add
dec
cmp
dec
les
mov
inc
sbb
inc
adc
idiv
shlb
jmp
std
inc
sub
in
adc
aaa
sbb
mov
int
xor
outsb
fstl
add
or
push
jnp
in
mov
sbb
mov
xor
fistpll
and
incb
pop
je
mov
push
bound
and
lds
mov
jmp
cmc
jecxz
les
addr16
pop
and
sbb
pcmpgtd
cmpsl
xchg
mov
jmp
in
leave
mov
outsb
mov
sub
les
jl
into
pushf
sub
sbb
jl
int3
aas
mov
sbb
push
stos
scas
dec
dec
adc
inc
lret
inc
add
pusha
jp
mov
daa
mov
and
add
jo
fstpl
gs
adc
enter
push
add
testl
push
shrb
jne
outsb
pop
cmpsl
push
insb
dec
pop
aaa
fmul
jg
mov
sbbb
pop
je
ljmp
fldcw
xchg
or
mov
imul
clc
jge
fisubrs
and
cld
rolb
jge
fsubl
and
out
in
pop
cmp
push
in
jle
test
pop
cmp
scas
ja
fcmove
jo
xor
and
adc
pop
xchg
and
ds
mov
adc
mov
repz
mov
sub
jmp
loop
out
or
ljmp
add
jbe
fidivs
pop
sub
mov
nop
add
dec
pop
out
adc
pop
mov
cwtl
out
iret
adc
jg
std
dec
sbb
pop
mov
insl
sbb
xlat
incb
pop
js
fcompl
push
bound
jo
mov
pop
jbe
cmp
cwtl
jmp
movsl
cmc
scas
cld
shlb
js
inc
ljmp
pop
loopne
and
insb
sub
clc
aas
sub
xchg
loop
pop
add
jno
orb
xor
pop
lret
xlat
or
hlt
jmp
jno
dec
mov
in
mov
sub
bound
pextrw
sub
adc
add
adc
sbb
mov
daa
push
clc
add
bound
mov
fcoms
inc
inc
sbb
mov
xchg
sub
add
int
imul
inc
xor
lds
jle
stos
lods
imul
lret
sahf
lods
inc
test
insb
imul
jp
push
push
pop
jl
or
lods
mov
mov
pushf
inc
ret
sbb
cmpl
daa
mov
sti
mov
aaa
sub
data16
dec
data16
xchg
out
mov
sti
stos
add
xor
adc
sbb
inc
aad
and
stc
xchg
test
jmp
or
movsb
cmp
jo,pn
push
movsb
inc
xor
or
lock
and
shrb
sub
sbb
cltd
xchg
pop
in
pop
push
xchg
test
test
push
xor
inc
and
rorb
lret
mov
imul
aad
call
loope
stc
jle
fbld
jo
mov
fldl
jle
out
outsl
into
jne
xor
mov
ljmp
mov
mov
push
enter
iret
push
adc
push
je
subb
scas
mov
fists
lea
hlt
faddl
jno
push
push
push
mov
jle
xor
mov
push
jge
dec
xchg
or
or
pushf
js
mov
xchg
cmp
arpl
addr16
pop
pusha
sub
je
mov
mov
jo
mov
add
adc
jb
gs
lods
int
shrb
pop
xlat
mov
sub
movb
adc
adc
ss
xchg
mov
xchg
xor
push
jecxz
sub
gs
into
das
pop
lret
add
push
lea
jo
outsl
lret
xchg
dec
cmp
xor
sub
gs
cmp
mov
cmp
roll
bound
iret
jp
push
movsb
loop
std
sbb
inc
mov
sub
cwtl
mov
cmp
pusha
adc
dec
xchg
insb
mov
mov
push
call
jl
sub
shrb
enter
fisubs
lock
rcr
or
lds
sbb
mov
pushf
mov
jno
stos
cmp
mov
data16
sahf
mov
inc
sbb
ret
es
sbbb
mov
jno
add
inc
andl
mov
testl
inc
dec
cld
cmp
ret
jno
in
inc
inc
movsb
sbb
sbb
pop
mov
je
xchg
inc
js
fcmovnu
loopne
mulb
xor
dec
add
data16
mov
pop
fwait
repnz
lahf
in
xchg
and
cmp
jge
loop
or
je
fistps
icebp
rorb
mov
jp
xchg
mov
lret
mov
push
jge
pop
daa
push
out
pop
icebp
mov
dec
mov
hlt
jmp
insl
hlt
outsb
pcmpeqb
cs
or
jnp
adc
xchg
popf
popa
pshufw
leave
push
sub
jecxz
xchg
imul
sub
addr16
test
sbbl
add
iret
fxch
inc
dec
clc
pop
test
jnp
adc
jmp
xorb
ds
into
dec
icebp
in
xchg
or
or
repz
pop
or
jb
and
insl
fisttpl
dec
or
xchg
sbb
dec
mov
or
in
xchg
ljmp
and
cmpsb
xchg
lret
mov
ficoms
orb
sub
xchg
cmp
hlt
pop
push
rcr
xor
mov
clc
ss
ljmp
cltd
mov
mov
pop
sti
jmp
lea
stc
lock
add
test
push
into
int3
pusha
push
push
xchg
es
jecxz
popf
in
mov
idivl
ss
push
sbb
sub
sar
out
int
pop
int
adc
mov
jl
mov
cmp
fs
lret
out
ljmp
inc
ds
mov
add
pop
cmp
inc
fs
push
in
pop
jbe
cmp
std
fcompl
scas
test
enter
jnp
outsl
adc
das
cltd
bound
mov
and
push
pop
cltd
insb
cmpsl
inc
ds
mov
sbb
or
dec
adcb
jb
sarb
inc
inc
aad
cmpsb
xchg
jecxz
sahf
movsb
add
stc
repz
ja
inc
int
sar
push
jle
dec
xor
mov
pop
xchg
add
es
icebp
add
icebp
es
dec
in
jge
cmp
mov
int3
pop
stos
add
mov
mov
mov
and
aaa
sbb
lcall
adc
mov
popa
fwait
in
mov
mov
adc
loope
sbb
fsubl
mov
push
mov
inc
arpl
or
stos
mov
mov
sbb
pop
aad
xlat
jecxz
fistpll
lea
mov
cmpsb
and
adc
adc
adc
lds
out
push
jg
add
leave
pop
sub
adcl
ljmp
dec
arpl
fidivrs
mov
or
jl
mov
or
or
std
fnstenv
add
loop
push
lods
cli
ret
inc
xorb
mov
xor
in
dec
jo
push
dec
dec
lcall
cmpsl
or
jl
loope
leave
jne
xchg
push
pop
enter
mov
outsb
xchg
pop
push
ljmp
dec
outsb
les
cmpsb
sbb
lahf
test
sub
fnstcw
add
data16
mov
xchg
imul
xor
arpl
push
ljmp
in
pop
mov
daa
xchg
pop
jmp
rcrl
cmp
jecxz
or
lret
leave
das
cmp
dec
sbb
insb
lret
movsb
sbb
in
nop
cmp
mov
std
dec
sub
mov
mov
or
push
cs
or
jns
daa
mov
cmpsb
outsl
cmp
mov
mov
popf
leave
jmp
subl
sub
xchg
pusha
lret
rcll
mov
dec
ljmp
aaa
cmpsl
push
ljmp
fwait
imulb
add
mov
xchg
outsl
in
mov
cmp
lods
testl
push
rorb
xchg
xchg
subb
cmp
scas
adc
dec
cld
mov
mov
sub
stos
ljmp
xorb
hlt
or
mov
mov
sbb
cmpsb
pop
pop
hlt
mov
sub
add
insb
loop
mov
out
int
jns
out
jae
test
adc
and
dec
mov
inc
mov
xorl
call
fcomp
mov
or
rclb
dec
bnd
inc
cltd
aas
subl
or
xor
push
arpl
or
pop
inc
mov
pop
and
repnz
mov
push
arpl
push
pop
insb
hlt
jmp
mov
lahf
dec
sub
pop
arpl
ret
orl
mov
repnz
mov
adc
mov
adc
mov
daa
mov
mov
leave
push
inc
insb
idiv
pop
and
repnz
cs
jb
sub
insb
jge
fwait
push
movsb
scas
mov
scas
mov
cli
pop
ret
scas
lods
and
adc
std
push
or
jno
dec
sub
scas
out
repnz
lea
in
dec
mov
jnp
cltd
mov
movsl
lods
mov
pusha
int3
sahf
and
push
pop
cmc
cmp
test
ljmp
lcall
repnz
fnstsw
aaa
in
xchg
jne
mov
aaa
pop
aam
sahf
pop
lahf
or
inc
jg
xor
inc
lret
faddl
pop
push
movsl
and
loopne
rcr
nop
mov
jp
adc
sahf
adcl
pop
rcl
lcall
btc
lds
shrb
fnsave
cmc
inc
fdivrl
mov
and
xchg
add
mov
into
or
mov
je
xchg
loopne
aaa
lahf
fdivl
mov
add
fwait
mov
int
sbb
add
xchg
xor
popf
mov
sbb
xchg
pusha
addr16
jb
sub
add
lret
or
xchg
fistpl
int
in
pop
add
lods
jae
add
icebp
call
mov
push
adc
stc
dec
int3
gs
mov
mov
sub
sbb
jae
mov
and
das
mov
or
mov
ds
arpl
pop
inc
inc
aam
enter
fadds
inc
inc
hlt
sbb
sub
orl
adc
mov
aad
and
bound
xlat
or
popa
ja
lahf
mov
imul
sti
mov
ret
bound
push
adc
push
sub
enter
jg
dec
or
and
pop
cwtl
leave
sub
dec
out
hlt
test
lcall
lahf
mov
xchg
jns
jae
out
inc
xor
mov
xor
add
fwait
ja
inc
bound
cmp
jmp
ja
lret
mov
dec
cmp
fiadds
pop
shll
repz
sbb
jp
ja
add
push
pop
shll
pushf
testl
jp
test
xor
rcrb
std
scas
pushf
cmp
call
aas
in
push
lods
dec
and
inc
shrb
mov
cmpsb
sbb
or
repnz
imull
xchg
sub
inc
stos
mov
mov
mov
inc
lcall
movsb
popa
jle
push
sahf
ret
nop
push
adc
and
add
push
sub
addb
loope
mov
mov
xor
je
add
lcall
push
jb
mov
lret
jmp
sar
test
mov
stc
in
lcall
test
add
clc
fidivrl
inc
lcall
xchg
scas
ret
adc
pop
pushl
test
push
fwait
xchg
mov
push
stc
jge
add
es
fadd
pop
adc
inc
adc
test
cmp
movsb
fdivs
loop
jmp
push
lods
mov
aaa
adc
xor
dec
pop
or
sbb
into
mov
add
push
mov
mov
out
inc
or
lret
or
cltd
jae
push
mov
mov
push
xchg
lock
rclb
std
inc
lods
pop
fistpl
xor
les
fsubs
cmpb
repz
loopne
and
loop
mov
insb
data16
jmp
xor
repnz
rorl
fs
std
jg
inc
mul
fsubr
jmp
lahf
or
xchg
adc
insl
pop
rolb
fwait
test
mov
int3
int3
nop
das
mov
ret
mov
movsb
adc
fwait
push
repz
xchg
xchg
dec
data16
xchg
mov
mov
std
enter
mov
or
divl
mov
xchg
and
enter
or
cmc
mov
adc
mov
gs
add
out
xchg
out
movsl
push
add
jns
jg
lret
in
cmp
and
mov
lcall
stos
mov
loope
cmp
outsl
jns
ret
stos
icebp
add
test
xor
push
int
push
test
jp
or
cwtl
rcll
sbb
iret
cld
pusha
scas
or
push
xchg
lock
in
push
mov
loopne
icebp
mov
testb
ss
rolb
addb
jno
mov
dec
cmc
imul
fwait
mov
mov
and
add
sbb
div
movsb
shrb
sub
inc
add
adc
in
add
outsb
ret
sub
aad
addr16
push
dec
stc
inc
rcrb
sub
and
dec
aaa
lret
sub
xor
into
cmp
jg
enter
rcll
mov
test
dec
or
push
sarl
adc
lods
pop
pop
push
push
jp
or
push
adc
cmp
in
jmp
icebp
shl
adc
rorb
pop
mov
mov
inc
or
sbb
xchg
xchg
push
push
jmp
sbbl
sbb
shl
popa
call
test
cltd
repnz
xchg
xor
mov
and
jmp
mov
push
inc
mov
sub
mov
addl
out
cmpsl
adc
adc
xchg
adc
dec
lret
inc
rorl
shll
ljmp
inc
xor
ret
cmp
popf
out
sub
pop
jge
lock
inc
pusha
ja
adcl
push
jle
sbb
xor
dec
ret
insb
cmp
inc
lods
loop
mov
fisubrl
les
aas
movsb
push
xor
mov
sbb
and
add
cmp
test
fnstsw
in
xchg
add
int3
jns
movsb
lahf
aam
jg
cli
imul
mov
les
aas
jno
loopne
add
ds
xchg
stos
xchg
cltd
aas
push
movsl
lret
out
popf
sbb
sbb
push
mov
adc
push
or
loop
mov
cmc
dec
fwait
stos
pop
hlt
mov
and
mov
xchg
das
inc
loopne
shlb
int
pop
or
rsm
leave
mov
mov
jmp
xor
sbb
mov
lcall
dec
fdivs
pop
inc
xorb
adc
sahf
jns
mov
xor
dec
xor
lret
mov
into
push
adc
push
cli
lret
push
mov
lret
push
pop
or
push
movsb
mov
int3
add
add
cmp
pop
rolb
imulb
hlt
cld
xchg
fsubrl
sbb
sub
jecxz
stos
adc
aad
btr
pusha
xchg
jg
loopne
pushl
cli
mov
and
inc
xchg
jbe
lahf
cmp
xor
mov
rorb
pop
int3
push
js
out
inc
mov
adc
shll
cltd
lds
xchg
test
cmp
pop
add
test
sbb
push
sub
fs
pusha
xor
std
incl
sbb
sbb
sbb
push
setl
sub
fidivs
or
cmp
mov
dec
mov
xchg
mov
adc
push
push
pop
jae
shrl
mov
mov
movl
iret
or
cli
popf
lock
xor
ss
mov
enter
dec
push
mov
stos
pop
sar
fdivl
xchg
sub
aam
jl
pop
insb
jno
or
xor
pop
imul
lcall
rorb
std
sbbl
sti
and
jg
cmp
loop
sub
fcomps
testb
lods
sti
mov
es
jp
in
mov
pushf
fmulp
pop
jp
adc
pop
aad
leave
add
inc
jp
int
dec
push
jne
mov
addl
pop
push
push
jnp
mov
pop
mov
xor
gs
sar
pop
nop
pusha
imul
sub
setne
insl
pop
and
mov
pop
dec
in
jg
dec
dec
mov
cltd
pop
lods
jge
push
sub
loope
push
data16
add
cwtl
pop
mov
dec
f2xm1
pop
add
int
fsubrs
nop
dec
repnz
in
aaa
mov
movsl
dec
add
iret
lret
xchg
cmp
je
or
xchg
cmp
mov
or
push
popa
aam
sub
sbb
loopne
mov
in
fadd
xor
nop
mov
push
loop
fcoms
movsl
int3
std
cbtw
scas
jl
pop
in
inc
add
lods
mov
and
inc
repz
cmp
sbb
inc
ret
mov
ss
add
mov
insb
dec
shll
xor
testl
pop
jp
in
ja
and
push
sar
psadbw
std
and
int3
cmpb
fsubs
movsb
push
inc
gs
les
outsb
and
fsubp
popf
arpl
add
lcall
int3
sub
ficoml
test
jo
clc
lea
mov
pop
xchg
jnp
mov
pop
or
hlt
loop
and
or
sub
sub
jle
aam
inc
mov
push
test
mov
ss
push
dec
rorb
add
std
sbb
aaa
fucomp
or
dec
lcall
inc
ret
mov
sbb
shlb
testl
dec
repz
sub
mov
hlt
stos
test
xchg
mov
sbb
mov
clc
and
xchg
lock
into
test
sbb
lahf
mov
or
je
sub
sub
incl
or
int3
inc
add
add
roll
push
or
push
out
xor
gs
inc
jmp
clc
orl
push
hlt
add
es
mov
adc
sub
and
cld
inc
maskmovq
imull
pop
inc
in
je
test
fdivrs
jne
xor
cmp
and
pusha
insb
jp
inc
mov
hlt
xchg
aad
imul
jb
sub
xchg
push
push
jecxz
mov
mov
movsl
or
pop
sub
sbb
push
dec
imul
and
jge
jbe
xlat
data16
xchg
mov
jecxz
bnd
lret
or
in
mov
xchg
cmp
xchg
jnp
lret
fcmovu
divb
pusha
sbb
and
mov
mov
jns
dec
lcall
fstps
mov
push
mov
push
xor
push
ret
lret
clc
and
xchg
lahf
addr16
pop
std
cmpl
cmp
in
stos
fnsave
dec
dec
sbb
pusha
mov
xlat
dec
popf
imul
push
insb
xor
int3
test
scas
sbb
jmp
cld
dec
arpl
mov
std
ss
push
decl
stc
add
rol
repz
scas
imul
or
leave
rol
jo
pop
lahf
push
in
jmp
es
not
xchg
in
jg
inc
inc
int
pop
sub
mov
dec
loop
jns
push
cltd
adc
fwait
leave
xor
xchg
mov
in
pop
ja
ret
mov
es
sbb
add
scas
add
rep
mov
add
jge
aas
or
stos
add
lock
dec
test
fistps
sub
pushf
xchg
fwait
fwait
insl
xchg
jp
xor
pop
sahf
mov
inc
sbb
jo
pop
or
mov
adc
fstps
lret
out
ret
dec
cmp
cwtl
inc
out
pop
or
inc
inc
fiaddl
sbbl
mov
pop
ss
andb
jge
out
out
aaa
mov
jl
mov
xor
sbb
push
in
adc
leave
mov
arpl
jne
int3
jl
out
pop
xor
add
jnp
cmp
and
clc
xchg
call
add
shrl
ror
sbb
pusha
mov
inc
jge
ss
pop
test
adc
lods
jne
mov
fisubrs
xchg
fstl
or
inc
das
arpl
pop
in
outsb
and
mov
aad
lret
int
jmp
stos
and
jnp
jle
push
and
mov
out
loopne
fstpt
hlt
mov
push
sahf
and
popf
mov
js
out
loop
xchg
imul
daa
push
ss
cltd
pop
dec
xchg
shr
adc
xor
jle
rorl
sub
or
and
adc
dec
popa
jmp
sub
lcall
fwait
outsb
movsl
testl
pop
mov
sbb
mov
sub
ljmp
clc
out
stos
rcll
mov
pop
sbb
or
int
cwtl
movsb
andb
idiv
mull
adc
in
xchg
and
pop
sub
add
lahf
adc
cmpsl
in
adc
shll
test
mov
xor
fstpl
sub
test
xor
divl
push
cmpsb
test
pop
push
idiv
js
pop
dec
lock
test
frstor
dec
lds
shr
jge
iret
test
and
and
shl
add
xchg
mov
add
push
jp
sub
sbbb
test
inc
xchg
ret
jecxz
inc
jno
imul
mov
mov
scas
push
cwtl
sahf
xchg
out
roll
sarb
jp
ss
std
mov
ja
in
out
stos
mov
jno
imull
jmp
mov
sub
mov
jge
jns
and
and
insb
jg
mov
mov
dec
xchg
scas
leave
xchg
lret
js
inc
cmp
and
cmpsb
push
inc
mov
repz
push
pop
ficoms
push
push
ds
inc
xchg
jnp
orl
add
dec
out
pop
std
mov
inc
es
divl
xor
pop
cs
adc
ret
shrl
and
lods
push
jg
xor
arpl
mov
addr16
lods
sbb
mov
cld
je
add
fwait
pop
push
pop
mov
loop
rorl
aam
jecxz
hlt
push
ficompl
std
shr
icebp
or
in
das
mov
pop
outsl
lea
mov
mov
jns
pop
fs
push
dec
addl
call
cld
push
iret
and
scas
mov
xchg
popf
movsl
xchg
hlt
cld
icebp
js
mov
jno
scas
lods
pusha
xchg
xchg
push
pop
cmp
cld
cmc
mov
push
xchg
enter
cmpsb
push
mov
out
insb
mov
cmc
adc
jo
or
mov
negl
cwtl
stc
enter
and
adc
lods
movsb
jns
jbe
std
mov
insl
dec
pop
sbb
push
stos
mov
xchg
xor
mov
ret
xchg
lret
bound
and
gs
add
je
mov
cmpsl
imul
xchg
push
les
push
cld
outsb
mov
addr16
scas
lss
pusha
or
pop
inc
in
andl
mov
sub
mull
jne
iret
jbe
cmp
lret
mov
dec
inc
and
xchg
lahf
cmp
push
cs
mov
out
push
xor
out
sbb
in
mov
mov
xchg
fcoml
sbb
out
jl
xor
jmp
fidivrl
leave
insl
loop
mov
scas
repnz
ftst
push
inc
repz
add
cmp
fldl
xchg
cmp
test
ljmp
shrb
push
ret
push
xchg
cld
nop
mov
enter
lds
in
mov
scas
imul
jne
jle
dec
dec
mov
out
dec
mov
sbb
lahf
add
mov
cmp
pop
iret
loop
nop
loop
cmp
cmp
loopne
psubd
dec
stc
lret
adc
int3
lcall
inc
call
movsb
int3
pop
pop
xor
aam
popa
int3
mov
sbb
mov
cltd
adc
lea
add
inc
xlat
cmp
in
sbb
fcmovne
mov
test
push
movsb
cltd
xlat
lods
mov
and
push
lds
cli
outsb
iret
jnp
fldenv
or
cmp
lock
mov
cmpsl
mov
mov
push
jecxz
xchg
xor
mov
in
movsb
dec
lods
shll
jg
das
rcrl
jb
lahf
dec
std
xor
sub
adc
not
cmp
es
cld
inc
das
aam
ret
mov
out
mov
arpl
jb
jns
enter
ja
sbbb
icebp
or
jnp
sub
cmpsb
push
mov
in
mov
test
cmp
in
cmp
stc
or
lods
jae
fidivrl
outsb
push
movsw
cmp
fwait
mov
iret
sti
dec
push
into
imul
sbb
jnp
insb
ljmp
push
inc
subb
out
xchg
lahf
mov
enter
sub
pop
inc
pop
jg
pop
xor
sub
pop
add
xchg
shll
mov
adc
in
push
mov
popf
xchg
inc
addr16
aam
pop
scas
push
clc
sbb
pop
aaa
test
rcrl
sbb
sbb
cmp
mov
mov
cmp
sar
sarb
int3
cli
push
aam
sbb
pop
pop
sub
outsb
imul
addb
cmp
lret
imul
imul
jo
lock
in
test
dec
mov
push
lock
cmp
mov
xchg
fs
mov
jnp
pushl
pop
cmpsb
push
rcl
loop
or
add
lods
loopne
add
insb
adc
cmp
push
cmp
jmp
mov
stos
jp
lea
xchg
inc
pushf
loop
mov
mov
dec
push
aas
imul
and
push
in
pop
es
sbb
jmp
jns
jne
cmp
lods
mov
aaa
sub
xchg
sti
or
jmp
in
or
and
movsl
pop
ficompl
xchg
pop
mov
xchg
fdivr
cwtl
clc
and
repz
and
mov
jecxz
or
fiadds
addl
cwtl
mov
clc
inc
movsl
sub
mov
mov
mov
push
lahf
and
dec
or
jg
lds
sarb
mov
shlb
push
lret
enter
das
mov
jg
cmpsb
addr16
xor
inc
mov
rcr
gs
adc
dec
xadd
sub
push
insl
sub
jo
jle
fdivs
ffree
sbb
and
out
jns
adc
arpl
aam
or
mov
fadds
ss
fdivp
lret
add
call
add
dec
mov
dec
push
aas
icebp
jns
lcall
jmp
shl
and
mov
jp
push
or
divb
lea
fcmovne
les
and
or
jecxz
inc
sbb
sub
jmp
fnstenv
aas
mov
cmpsl
xor
lret
pop
xchg
aaa
mov
push
push
and
push
aaa
sahf
or
sub
cld
mov
in
pop
lock
mov
loope
jbe
and
xchg
out
mov
idivl
push
int
xor
or
and
outsb
mov
or
sub
xor
call
sub
add
mov
ret
fnsave
xchg
ret
bound
or
and
dec
in
sbb
gs
adc
dec
scas
mov
xchg
pop
movsb
insl
mov
dec
ds
inc
pop
fs
and
mov
and
mov
or
adc
data16
insl
cltd
mov
push
lahf
jle
cmp
es
xlat
dec
movsb
cmc
clc
mov
int3
sub
dec
sbb
mov
repz
out
imul
stc
xor
cld
decb
loope
and
dec
xlat
xor
sahf
push
leave
jl
cld
out
insl
jb
in
outsb
out
popa
movsb
enter
inc
insl
inc
shl
cmove
outsl
test
je
push
jo
int3
sbbb
int3
dec
or
int
test
bound
fiadds
xor
lods
aaa
lods
adc
xor
mov
mov
cmp
mov
repnz
and
cmp
push
mov
int
fwait
dec
push
mov
mov
inc
out
mov
xlat
movsl
push
xchg
out
roll
jecxz
lahf
pop
loopne
sbb
xchg
mov
add
stc
sar
pop
jo
lret
fmull
sbb
stos
dec
mov
xchg
outsb
mov
fwait
shll
mov
ret
imul
and
adc
sub
cmpsl
ficoms
aas
cmp
and
cmpsb
dec
dec
or
push
aaa
cli
sub
inc
outsb
mov
or
mov
dec
data16
pushf
js
test
dec
js
and
lret
pop
pop
cmp
test
dec
hlt
shlb
bound
mov
cmp
sbb
inc
pop
outsl
dec
xchg
inc
test
movsb
movsl
cld
push
push
mov
data16
add
mov
mov
adc
cltd
lods
imul
pop
clc
or
movsl
xchg
and
inc
pop
pop
cltd
push
stos
sub
nop
int
incb
push
mov
inc
add
leave
rcrb
imul
xchg
faddl
popa
lods
add
mov
push
inc
cmp
popa
and
gs
dec
movsb
cmp
sub
adc
cmp
fmul
cmp
push
add
sbb
xor
and
ss
scas
xchg
inc
mov
in
add
sub
testl
jmp
int3
cmpsb
loope
pop
imul
cmp
xchg
fbld
adc
fnstcw
jae
popf
inc
jp
shlb
test
ret
mov
jmp
xor
std
push
dec
mov
cmp
or
mov
fwait
enter
rcl
mov
push
stos
push
mov
dec
adc
xor
or
or
or
mov
fidivs
push
mov
aam
lea
mov
adc
repz
loopne
sbb
lret
data16
or
in
adc
sbb
and
xor
pusha
xchg
xchg
dec
mov
pop
mov
jmp
and
mov
push
mov
sbb
pop
cmc
push
insb
dec
jb
cmpsl
pusha
mov
popf
shl
add
out
or
sti
fcmove
jmp
cmp
cmp
or
testl
mov
xor
aad
sub
jle
mov
pop
and
mov
out
xchg
or
outsb
cld
sbb
fstpt
test
insb
filds
xorl
lahf
enter
lods
repz
jecxz
cwtl
outsl
or
and
ljmp
cmp
das
rolb
nop
shlb
sbb
xchg
pop
push
sahf
inc
mov
inc
push
jns
mov
cmp
add
mov
cmp
cmp
sub
lea
mov
imul
into
fcmove
cld
add
mov
dec
ljmp
outsb
gs
in
adc
mov
lret
rorl
iret
aad
adc
or
arpl
das
xchg
jecxz
mov
sbb
subl
xor
pop
mov
mov
mov
inc
push
push
mov
int3
dec
and
out
mov
movsb
mov
lea
pop
lods
xlat
sti
gs
shr
sub
cld
adc
sbb
scas
je
xor
test
testb
fcomps
les
enter
popa
fdivl
lods
fisubrl
fldcw
mov
xchg
inc
fiaddl
outsb
stos
adc
loopne
pop
in
cmp
ss
and
inc
hlt
mov
mov
jnp
push
push
cmp
insb
imul
std
xchg
lcall
xchg
adc
std
or
mov
rcrb
outsl
mov
fidivs
insl
in
sbb
cltd
test
lods
sbb
add
shrl
add
push
xor
mov
mov
jno
out
dec
ret
jnp
inc
and
xchg
stos
js
jae
sub
sti
lahf
inc
lcall
jmp
mov
cmc
fs
jae
mov
icebp
je
ja
testb
rorl
out
mov
xor
push
dec
sub
and
adc
xor
sbb
push
imul
outsb
fistl
mov
inc
jne
xor
mov
shr
repnz
in
mov
pop
stos
rcrb
outsb
and
pop
into
out
test
or
inc
push
sub
ret
imull
or
pop
outsl
mov
outsl
ds
fstpl
movsb
jp
inc
les
inc
shl
and
cmpsb
cmp
sbb
adc
push
movsl
sbb
inc
addl
insb
mov
das
stos
mov
dec
jmp
jb
movb
dec
xlat
nop
les
adc
inc
push
jge,pn
pop
js
inc
jp
jmp
xchg
sahf
mov
nop
jle
rolb
lret
imul
arpl
adc
mov
stc
fstps
ret
mov
pop
fucomp
faddp
mov
fisubrs
std
das
imul
dec
jmp
push
cs
mov
icebp
xlat
mov
inc
test
mov
sti
mov
lods
mov
adc
aas
ret
cmpl
jae
fistl
or
stc
leave
sub
cmpsb
pop
inc
cld
adc
jb
jns
mov
xchg
push
dec
shll
mov
mov
test
addr16
gs
or
push
mov
call
int3
aaa
mov
aaa
adc
outsl
imulb
jns
cltd
inc
ficoms
imul
pop
outsb
sub
aaa
add
sbb
ds
stos
sbb
insl
xor
test
jmp
movsb
rclb
fdivr
cmp
add
cwtl
jl
inc
pop
out
mov
xchg
bound
push
cmp
lret
mov
inc
int3
leave
in
xor
pop
and
mull
push
aas
cmpsl
push
mov
add
jo
scas
dec
shlb
cmpsb
rol
ljmp
divl
adc
xor
orb
in
loop
xchg
inc
push
xorl
fidivrl
gs
inc
pop
xchg
add
xor
mov
push
mov
loop
mov
xchg
test
pop
sar
in
inc
inc
adc
mov
inc
cmp
jb
icebp
bound
fnsave
aad
and
mov
outsb
lahf
jnp
push
lods
mov
jge
push
in
sub
fdivrs
dec
sub
dec
adc
pop
sbbl
lret
jge
into
add
sub
popl
pop
fs
popf
loope
lds
fmull
inc
les
scas
cli
jae
cltd
push
mov
cmc
je
or
out
std
adc
sub
pop
das
adc
stos
add
xchg
faddl
js
imul
mov
and
pusha
out
mov
pop
aas
icebp
mov
icebp
cmp
in
js
mov
and
jae
les
outsb
pushl
cwtl
mov
out
pop
test
xchg
xor
sub
cmc
lret
push
divb
jne
mov
or
mov
dec
movsl
xchg
pushf
roll
jae
xor
js
or
mov
dec
repnz
sbb
mov
xor
data16
jne
push
pop
sub
inc
push
pop
mov
cwtl
movsb
scas
push
pop
cmp
divl
je
push
les
fsubrs
xchg
push
adcl
mov
loope
int3
jmp
test
mov
jae
adc
cmp
pusha
add
scas
bound
ret
ja
xchg
aad
cmp
scas
daa
stc
jo
jle
stos
mov
sar
adc
ss
mov
pushf
int
inc
push
jb
gs
lcall
jnp
aas
fs
adc
mov
add
mov
outsb
out
cmp
stos
mov
push
xlat
std
aas
ss
mov
inc
or
test
cli
orb
sbb
mov
or
push
xor
daa
jmp
inc
int3
jbe
out
insb
jo,pt
add
inc
mov
or
push
dec
push
mov
push
int
sbb
shlb
pop
test
push
push
sbb
xchg
test
ljmp
mov
std
jo
test
jne
pushf
decl
mov
dec
adc
jo
jno
flds
mov
mov
fcmovu
fs
sarl
nop
pop
stos
shll
jne
out
xor
cmp
adc
repz
dec
lcall
or
in
es
out
test
cli
jbe
pop
jo
jg
jecxz
mov
in
out
xchg
cs
pop
clc
and
pop
jmp
sbbb
add
mov
and
rcrl
andl
jl
dec
test
jge
jmp
stc
jne
inc
fiadds
loope
pushf
mov
stc
xchg
fs
je
inc
xor
or
enter
xor
xor
hlt
orb
or
pop
mov
dec
leave
xchg
in
xchg
movsl
push
cmp
sbb
std
fwait
sbb
xor
das
test
mov
add
sbb
xor
add
fnstenv
call
aad
rorl
rorl
jecxz
sub
das
aam
pop
push
js
and
in
mov
inc
pop
cmp
popa
mov
push
std
out
push
mov
lea
lret
add
sti
test
incb
cmp
jns
add
push
lea
inc
jecxz
jbe
cmp
in
sarl
sub
in
in
cmpsl
fnstsw
sbb
xchg
push
sbb
mov
outsb
adc
cmpsb
scas
cmp
xor
outsb
jl
jne
andl
xabort
pushf
out
xchg
push
adc
gs
sbbb
cmpsb
adc
mov
mov
sbb
push
iret
jno
xor
sbb
fcmovb
rorl
sub
fistps
mov
sbb
testb
lret
mov
jmp
xor
inc
ret
and
pop
add
in
dec
sub
inc
push
icebp
test
js
and
push
jl
fdivrs
xchg
xor
add
subl
add
fcomps
out
stos
test
pcmpgtb
dec
xchg
movsb
popa
or
out
bound
xor
cmc
dec
lahf
mov
cmp
addr16
aas
push
mov
imul
inc
icebp
jo
pop
pop
clc
xor
sbb
rclb
stos
cmp
xchg
xor
test
fdivs
icebp
pop
lret
xchg
xor
aad
and
or
ret
aaa
shlb
xchg
xchg
jge
cmpsb
pop
loope
xor
lock
in
push
add
cmp
add
pop
sub
and
mov
mov
call
out
and
in
inc
or
dec
inc
enter
jae
nop
jle
inc
or
and
rorl
vmovapd
adc
repz
rcr
xchg
cmp
inc
push
jmp
pop
clc
add
or
or
cmp
sub
arpl
sbb
dec
jg
ljmp
cmp
scas
pop
dec
mov
mov
mov
cmp
ds
pop
test
fidivl
pop
pop
mov
arpl
mov
mov
sbb
test
mov
fwait
in
idiv
adc
and
loope
mov
fisubrl
je
sub
clc
mov
int3
ja
jge
jnp
sahf
fwait
push
shrb
inc
loopne
jg,pn
sbb
popa
add
orb
and
mov
stos
adc
aam
mov
add
pop
jae
fmull
xor
pop
sbb
fs
aad
mov
cmp
scas
in
mov
and
imul
outsb
aad
gs
std
pop
pop
xchg
or
inc
xchg
stos
push
mov
stos
cld
sti
inc
add
or
in
xor
stos
push
xor
sbb
sbb
aaa
adc
mov
movsb
subl
fst
leave
aad
jp
in
push
aaa
outsb
insb
mov
sarl
sbb
add
call
pop
jp
aam
inc
into
dec
rcrl
pop
jbe
rcl
lret
fwait
push
enter
mov
or
rcrl
mov
sub
xor
mov
aas
mov
dec
mov
fadd
rolb
jle
and
push
mov
mov
dec
sbb
mov
add
mov
mov
sub
add
add
cwtl
movsl
iret
loop
movsb
xchg
cmp
push
inc
push
and
cmpl
xchg
lcall
mov
fadds
sbb
or
cmp
enter
icebp
sahf
fs
and
test
and
ffree
mov
add
scas
add
add
fstps
mov
movd
jbe
lods
or
xchg
sbb
shlb
cmp
test
pop
frstor
aas
add
sarl
push
cmp
into
lret
shlb
mov
loopne
jg
leave
ret
sbb
invd
mov
in
imul
jne
jg
lahf
dec
adc
repz
int3
xor
in
hlt
xchg
scas
inc
pop
add
push
out
and
and
or
testl
mov
hlt
mov
sub
js
xchg
adc
jge
ss
pusha
pushf
mov
xchg
sub
test
inc
mov
push
pop
popa
call
xlat
push
leave
and
push
insb
std
imul
ja
jb
or
popa
pop
mov
test
out
ret
dec
inc
in
aas
add
xchg
sub
mov
pop
inc
jg
mov
mov
ror
add
nop
xor
mov
add
xchg
jb
mov
stc
mov
hlt
maxps
test
adcb
mov
enter
sbb
sub
outsb
cmp
mov
les
stc
repz
pop
or
jnp
mov
inc
loope
mov
add
mov
aas
jne
cmpsb
add
and
enter
and
out
push
pop
rcl
xchg
jnp
push
mov
in
nop
cwtl
outsb
push
add
insl
mov
in
sbb
outsl
jae
inc
movb
repz
lock
push
imul
jmp
mov
mov
push
mov
addr16
gs
jbe
fadds
jge
xchg
push
aad
clc
jno
mov
sub
xor
stos
out
lcall
lea
out
add
int3
xor
and
mov
cmc
cmpsb
js
xchg
rorl
loope
int3
movsb
lret
jns
mov
xchg
xchg
data16
cmp
sub
ss
fldenv
push
push
xlat
insl
vpdpwssd
leave
or
add
pop
mov
and
sub
jg
jns
xlat
jmp
lods
adc
mov
push
push
push
ret
push
jbe
sbb
bound
xchg
mov
pop
mov
outsl
xor
pusha
mov
int
jg
imul
adc
cmp
push
pusha
add
dec
cmp
das
pop
jg
int
scas
sbb
lret
dec
mov
test
call
imul
aad
cmp
xor
or
or
or
xchg
loop
sbb
xor
sub
sbb
xorb
add
ss
sub
xchg
inc
pop
pop
rol
rcrb
xchg
stc
cmp
mov
push
cmp
mov
scas
pop
mov
shlb
jecxz
xchg
cs
push
cmp
or
inc
mov
pushf
xchg
mov
xchg
push
inc
in
xor
jl
adc
lds
jge
push
stos
test
lods
shlb
sub
adc
mov
pop
inc
outsb
jg
gs
inc
fwait
jo
dec
xchg
dec
mov
xor
jbe
ja
rolb
ds
aad
dec
daa
in
xor
xor
xor
jg
loop
fmulp
push
dec
pop
test
cmp
out
jb
inc
mov
xor
cmp
mov
ds
dec
cmp
call
call
insb
stos
sub
inc
sti
in
jmp
arpl
es
popf
mov
adc
inc
ljmp
ret
inc
sub
cmp
adc
adc
loopne
ja
call
lcall
pop
icebp
aaa
sub
arpl
push
inc
push
loop
je
mov
out
das
test
xchg
scas
add
stc
jmp
add
aas
out
shll
add
in
dec
shll
and
sub
add
mov
ret
push
iret
or
mov
mov
insb
sub
cmpsb
pushl
stos
rorl
fdivp
mov
dec
rorb
adc
mov
xchg
outsl
in
rolb
sbb
sub
popa
jnp
mov
decl
mov
std
inc
xchg
dec
cmc
mov
sbb
in
dec
or
lods
mov
shrb
push
jecxz
pop
mov
lret
mov
imul
lods
fildll
inc
lods
or
mov
hlt
inc
dec
sub
mov
arpl
in
mov
in
xor
sbb
xchg
lock
out
or
push
int3
loopne
aam
adc
or
sub
aad
add
aaa
rol
xchg
in
sahf
ss
jns
arpl
aas
inc
xor
dec
push
outsl
mov
and
imul
pusha
push
push
jl
xchg
call
add
fs
icebp
sbb
dec
or
dec
repnz
xor
out
cmp
and
shll
lea
jg
test
jno
jl
in
jmp
jae
add
adc
or
xchg
fsub
scas
cwtl
adcl
mov
xlat
std
sbb
cmpl
pop
outsl
xchg
hlt
sbb
loope
in
xor
in
sub
jb
or
push
cltd
push
test
addl
cmpsb
arpl
daa
inc
or
jo
ret
lret
lods
ja
jae
mov
mov
xchg
sub
mov
test
ds
mov
pop
sti
test
mov
in
inc
xchg
sub
cmc
sbb
lcall
add
popf
sub
mov
sbb
repnz
filds
sub
test
push
lods
sbb
das
pop
jae
add
xchg
jmp
cmp
pop
and
data16
and
ja
cmc
sub
out
jmp
mov
and
jne
sbb
add
mov
outsl
lret
sub
ljmp
mov
inc
adc
scas
fistpl
adc
push
sbb
jno
jmp
add
mov
in
mov
push
in
dec
mov
dec
ja
popf
mov
shll
call
adc
mov
mov
lret
cmp
jecxz
pushf
clc
sbb
push
imull
dec
cmp
push
push
outsb
cmp
lret
dec
jg
cmp
lahf
loope
cmp
jg
or
lods
or
xchg
ret
and
ja
nop
es
fdivs
clc
out
dec
jnp
aaa
in
dec
inc
shll
xor
fwait
mov
sahf
leave
ja
loopne
addr16
shlb
dec
movsl
pop
xor
cld
add
into
xchg
icebp
clc
flds
lods
fadds
sahf
sbb
inc
lahf
pop
jp
sbb
out
xor
mov
bound
je
daa
fwait
jecxz
xor
mov
ja
pop
jno
xor
pop
add
sub
xor
inc
sbb
xor
sahf
jecxz
pop
fldenv
and
push
pop
icebp
out
dec
xorb
std
dec
mov
pop
icebp
rcrl
in
and
inc
dec
mov
hlt
sbb
pop
xlat
or
mov
aaa
xchg
jl
imul
mov
mov
aas
or
mov
and
sti
test
jb
inc
in
mov
mov
enter
cmp
jae
outsl
cmp
sahf
jo
insb
lods
jns
rcl
insb
addr16
out
dec
dec
mov
jl
pop
gs
fsts
pop
xchg
sbb
test
test
mov
xor
dec
dec
cltd
inc
adc
mov
adc
into
pop
stos
fcmovbe
and
loope
aad
jae
hlt
xchg
and
jl
ljmp
and
jle
in
andb
xlat
sbb
popa
cmp
pop
rorl
dec
lret
stos
sbb
jge
cmpsl
std
jns
movsb
cmpsl
or
pop
dec
xchg
in
inc
mov
dec
dec
sub
stos
lcall
andl
test
movsb
popf
xor
cmpsl
inc
fbstp
mov
mov
mov
mov
sahf
xchg
push
sbb
movsb
xor
push
out
ss
pop
inc
jmp
out
test
pop
testl
pop
outsl
mov
cltd
aaa
jb
pop
adc
jns
pop
repnz
out
mov
push
lock
jge
jecxz
imul
mov
or
jb
mov
mov
dec
shlb
lcall
add
js
lds
rol
adc
mov
fmuls
xchg
insb
out
inc
xor
roll
mov
push
jmp
xchg
or
sarl
nop
and
mov
in
mov
push
pop
inc
hlt
jo
movsl
cmc
sub
xor
sar
push
mov
test
and
dec
dec
je
pop
xchg
popa
mov
int3
hlt
ljmp
sub
push
scas
fsubrs
fisttpl
xor
sub
mov
xor
inc
inc
popa
out
adcl
cmpsl
sbb
lods
imul
xchg
insl
jbe
jg
and
test
sbb
lock
negb
pop
xchg
scas
jl
pop
popl
pop
pop
insb
bound
rcr
in
ja
pop
fstl
jmp
cltd
icebp
pop
sub
js
inc
test
loopne
jle
xchg
xlat
lcall
ss
bound
lret
clc
mov
sub
push
dec
and
lret
jns
fwait
sbb
lock
jae
fmuls
leave
jns
cmp
pop
xor
xchg
nop
dec
std
dec
cs
in
in
push
scas
add
popa
push
xchg
mov
popa
adc
fs
jb
and
mov
cmp
out
mov
ja
lcall
adc
stos
add
pop
test
int
jmp
ljmp
mov
mov
iret
imul
mov
stos
call
and
negb
loop
mov
fmul
sbb
sbb
call
mov
mov
mov
das
cltd
rclb
or
loop
cmpsb
mov
sbb
mov
push
dec
jne
in
jmp
jno
loop
cwtl
jns
sbb
xchg
jne
inc
inc
cs
popa
mov
inc
and
sub
and
jp
ss
ss
jge
pop
and
loop
loope
mov
lods
mov
dec
neg
mov
dec
xor
or
mov
rorl
mov
repz
test
mov
sbb
lea
mov
je
cmp
outsb
out
imul
loop
adc
repz
arpl
daa
jmp
lahf
mov
out
shll
hlt
mov
scas
int
mov
into
jecxz
int3
push
fstpt
sti
stos
jecxz
xchg
pop
iret
cmp
push
mov
hlt
mov
into
bound
pop
or
push
adc
je
add
add
or
iret
daa
addl
xor
cmc
ljmp
sbb
addr16
inc
cmpsl
std
jb
xor
or
pop
xchg
scas
cmc
pop
jl
inc
mov
mov
and
jle
les
icebp
in
sub
mov
mov
stc
repz
icebp
push
pop
sub
and
push
push
scas
sub
mov
lret
shll
in
stc
xchg
xor
jae
dec
pop
sbb
insb
loopne
daa
ja
in
push
mov
rcl
mul
adc
vpabsb
loope
lahf
mov
in
mov
gs
call
pop
dec
inc
cmp
int
stos
inc
fwait
inc
lret
sbb
sub
push
test
repz
mov
repnz
lock
les
ss
add
sub
fists
imull
dec
and
out
push
or
imul
push
mov
pushf
es
xchg
ret
call
pop
sahf
aas
push
push
ret
into
mov
fs
pop
mov
adc
je
cmp
mov
mov
dec
les
mov
lahf
adc
adc
sub
movsb
mov
cs
fs
dec
mov
je
jmp
inc
sub
inc
and
mov
fstl
and
mov
mov
dec
stc
sbb
cmpsl
pop
jae
dec
ljmp
sbb
add
pop
out
fsubrs
lcall
fiaddl
out
adc
cli
jecxz
mov
push
stos
jno
dec
fidivrs
cmp
cmp
inc
ljmp
inc
scas
addr16
ret
jl
mov
std
xor
push
push
xchg
movsb
pop
push
repnz
cld
popa
mov
dec
bound
xchg
cmc
pop
lea
cmp
ja
dec
ud2
test
pop
in
sbb
cmpsb
stos
mov
int3
dec
aaa
cli
punpcklwd
mov
xor
jle
cld
lcall
push
cmc
ret
inc
pop
mov
lock
push
js
or
or
in
sbb
add
rcrl
jp
hlt
incb
in
jmp
popf
sbb
and
or
sbb
enter
mov
int3
int3
sub
jnp
jno
and
cmp
push
je
jb
mov
adc
jecxz
scas
mov
dec
std
add
lods
cmpl
sbb
movsl
mov
int3
adc
push
mov
gs
inc
lea
inc
or
jecxz
xor
jmp
mov
sub
cmp
es
shr
andb
sarl
xchg
daa
shl
enter
cmc
mov
loopne
mul
data16
mov
mov
jp
sub
paddsw
outsl
cmp
lret
xchg
mov
dec
jg
test
mov
cwtl
mov
lahf
xchg
faddl
cmp
rorb
jge
ret
jg
ficomps
inc
insl
popf
stos
int3
loopne
mov
fcomi
sbb
xchg
sahf
hlt
scas
rol
sub
and
sub
in
stc
mov
add
sub
and
fucompp
outsb
pop
jp
andl
test
mov
test
or
sbb
pop
jb
push
aaa
fildll
xchg
daa
aam
push
add
jb
and
mov
mov
cmc
jbe
mov
aas
cmp
and
inc
push
or
aaa
std
mov
fisubrs
call
mov
pusha
xchg
scas
scas
imul
daa
movsl
jns
sub
ljmp
jp
xor
icebp
push
mov
and
gs
sahf
sbb
pop
faddp
or
cltd
or
or
adc
push
dec
dec
mov
shrb
inc
incb
sbb
int3
cmpsb
sub
inc
test
je
mov
xchg
clc
lcall
in
pop
inc
jb
inc
jecxz
jnp
add
cmp
xchg
push
mov
jecxz
fsubrp
notb
mov
dec
std
mov
pop
add
and
pop
xchg
jmp
loopne
adc
daa
pop
jecxz
xor
or
outsl
pusha
cmp
jg
pop
jns
lcall
faddl
sbbb
das
mov
lret
sub
cwtl
sarb
dec
mov
clc
aas
outsb
mov
lods
into
inc
jbe
pop
aam
mov
add
mov
dec
pop
lods
out
fnstenv
rcll
loop
pushf
add
fst
mov
fistl
xchg
jmp
pop
daa
rolb
mov
sbb
adc
and
lods
sbb
mov
xchg
add
repnz
outsl
pop
cli
in
filds
cs
cld
xchg
ficoms
sbb
sbb
cwtl
and
and
add
or
das
push
and
das
push
mov
pop
push
cmp
or
mov
or
addr16
dec
xor
xlat
int3
dec
push
xchg
xchg
lods
sub
cwtl
testb
pop
push
shrl
xchg
mov
xchg
ljmp
sbb
stos
les
outsb
xchg
and
mov
adc
push
pop
in
fwait
test
mov
cmp
mov
jnp
cmpsb
mov
into
fcomp
pop
adc
aaa
push
mov
dec
shl
or
popa
sbb
cmp
adc
mov
scas
fwait
mov
xchg
pop
mov
xor
inc
fwait
imul
stos
hlt
call
push
and
push
mov
inc
jecxz
mov
mov
xchg
and
adc
arpl
mov
mov
add
rorb
add
xchg
xor
das
xchg
subb
cwtl
pop
and
test
test
test
xchg
pop
ret
nop
test
push
out
xchg
cwtl
aas
cmp
fildll
mov
sbb
mov
or
xchg
and
lcall
sub
jg,pn
pop
stos
fcoml
ror
bound
xchg
ljmp
movsb
xor
imul
xchg
fisubs
mov
adc
xchg
mov
adc
mov
clc
imul
rcl
fimuls
sub
data16
mov
push
cmp
in
imul
dec
and
push
pop
mov
xorb
add
ret
stc
ljmp
cmc
xorl
xchg
add
add
add
es
jo
test
xlat
lock
and
sbb
mov
inc
ficoml
dec
cmp
in
mov
jbe
push
jg
jns
decb
xor
add
das
in
gs
je
dec
jno
mov
bswap
inc
movsl
inc
sti
int3
push
xor
cmp
clc
push
dec
nop
jb
lea
ss
mov
adc
mov
divb
arpl
sub
in
inc
inc
mov
and
push
mov
lret
pop
mov
fcoms
das
xor
in
add
shll
mov
js
mov
xchg
out
loopne
cmp
jle
cmp
loopne
cmpsl
ja
jmp
jge
aam
scas
mov
fisubrl
pop
or
mov
in
das
add
call
lds
popf
ret
insl
bound
dec
jne
mov
or
cmp
nop
adc
loop
rcll
inc
xchg
mov
hlt
or
lret
inc
iret
xor
cmpl
add
popf
sub
xchg
enter
mov
mov
cmpl
or
cwtl
jne
fstps
sbb
cmp
xchg
imul
je
lret
arpl
cmp
pop
es
pop
mov
mov
xchg
jg,pt
add
xchg
pop
scas
call
pop
cltd
call
aad
cmp
mov
push
mov
cmp
outsl
mov
xor
pop
mov
fisubl
mov
cmp
les
adc
xchg
fnstcw
mov
lea
inc
jbe
mov
insl
adc
shlb
sub
push
mov
enter
loope
fnsave
mov
cltd
push
out
mov
xchg
add
lea
cli
lods
icebp
adc
shll
gs
insb
test
adc
sub
inc
and
loopne
push
sti
cli
dec
call
cmc
notb
cmc
xchg
mov
jbe
mov
or
xchg
sbb
stos
rclb
cmp
add
push
sbb
ror
ljmp
lea
int3
addr16
ljmp
mov
mov
jmp
scas
into
jo
mov
and
ret
rcrl
pop
push
lock
push
cli
push
mov
outsb
test
pop
mov
jno
pop
pop
rcll
das
sbb
in
sub
dec
pop
jmp
xchg
testb
lods
mov
call
fcompl
ret
pusha
shll
les
mov
jmp
cmp
push
dec
or
mov
push
adc
mov
fsubs
mov
fnstenv
inc
pop
mov
mov
rolb
and
mov
es
mov
pop
ds
out
push
jae
rolb
and
cmp
test
xchg
dec
sub
loopne
ret
in
mov
dec
dec
inc
cmp
jae
lahf
sbb
and
or
leave
jb
inc
test
sub
leave
fwait
lret
cmp
test
bound
or
xchg
clc
and
sbb
push
mov
mov
or
lods
ret
xor
jg
fs
mov
or
and
andb
mov
dec
sbb
test
push
jo
and
sbb
cli
jp
andl
push
push
mov
mov
jmp
lret
mov
lock
push
leave
xor
cmc
jno
das
lods
lcall
mov
mov
mov
scas
dec
cmp
pop
ret
xchg
les
mov
jg
call
pop
push
lahf
adc
lds
scas
aaa
xchg
adc
mov
pusha
enter
xchg
adc
jae
push
lret
mov
jp
ret
sbb
adc
stos
mov
mov
orl
jmp
mov
jp
loope
push
loop
add
mov
iret
pop
sahf
imul
fwait
lea
dec
pop
fisttps
or
or
int
cmp
sbb
dec
inc
testb
decb
mov
imul
xor
push
fs
insl
dec
or
pop
and
cs
imul
jbe
clc
bound
inc
scas
into
xchg
add
jmp
pop
out
jge
fwait
inc
stos
and
nop
cltd
ret
jg
stos
add
cltd
stos
fwait
inc
mov
add
xlat
shl
ja
sbb
dec
jg
push
aaa
gs
pop
mov
push
or
inc
ficomps
inc
dec
pushl
loopne
jecxz
push
jbe
loope
out
mov
mov
cmpb
jg
mov
xchg
sbb
sub
sub
jp
add
inc
test
cmp
pop
sbb
xchg
push
ljmp
cmp
sbb
mov
push
add
sahf
sbb
testl
pop
pop
ljmp
cmp
subl
cmp
adc
fwait
or
test
subl
negb
and
push
pop
sbb
and
sub
push
cwtl
imull
fnstsw
dec
aam
popa
inc
dec
sbbb
inc
jo
leave
sub
aaa
inc
lahf
icebp
mov
test
insl
dec
orb
jge
jns
xor
adc
daa
sub
stos
sbb
add
add
sub
adc
add
aas
mov
pop
pop
push
add
test
sbb
adc
mov
dec
dec
xlat
scas
push
cli
dec
lea
xorb
fisubl
push
push
mov
out
and
jb
out
push
popa
daa
sub
movsb
add
pop
outsb
cwtl
dec
ret
mov
ret
movsb
add
int
mov
mov
cld
insl
bound
adcl
mov
cmp
aas
enter
das
cmpxchg
rorb
aas
pop
jle
fadd
repz
cmp
test
mov
sbb
pushf
jecxz
aam
stos
cld
push
shr
inc
stos
mov
lods
test
mov
sbb
outsl
imul
fistpll
stos
cmpsl
cmp
dec
push
cltd
jns
lods
pop
ds
xor
bound
scas
xor
mov
inc
cmp
test
test
pop
mov
loopne
das
add
jae
cmc
test
push
cmp
repnz
mov
int
out
jecxz
in
ja
and
pop
jle
andb
movswl
mov
dec
fxch
ret
mov
mov
repz
das
ss
xchg
mov
or
mov
dec
scas
cmpsl
ffreep
notl
sub
out
mov
dec
inc
jb
stc
push
ljmp
in
cmp
adc
cmp
and
jne
adc
pop
and
aas
inc
pushf
mov
cld
gs
and
outsl
mov
jo
pop
in
pop
lcall
mov
repz
enter
xchg
sbb
ljmp
jge
mov
jle
pop
flds
and
dec
enter
cmp
stos
cmp
or
adc
sub
add
or
out
sbb
mov
and
fisttps
scas
push
out
adc
outsl
aam
mov
mov
add
inc
in
jg
in
push
cli
mov
movsl
jecxz
es
bound
inc
xor
and
bnd
jbe
es
sbb
test
lods
jno
mov
sub
mov
fistpl
push
lods
popa
sbb
lret
lods
add
aas
pop
repnz
leave
int
jno
fnstenv
notb
mov
rcrb
add
stos
std
push
ljmp
lods
enter
ficomps
scas
out
pop
sbb
mov
frstor
mov
pop
loop
addb
lcall
xchg
inc
dec
push
add
aam
push
data16
mov
shlb
inc
xor
cmp
sub
xlat
push
pushf
sbb
dec
pop
sbb
adc
fstps
mov
fidivrl
jge
out
push
cmpsb
mov
lcall
mov
ds
out
cmp
arpl
iret
icebp
inc
fdivl
sahf
in
bound
mov
push
popf
leave
jno
and
cmpsl
xor
cltd
or
and
sub
lods
lret
xchg
mov
test
insb
nop
pop
or
cmp
out
pop
fisttpll
test
xchg
push
gs
inc
test
hlt
call
repnz
int
das
pop
test
out
shll
test
xor
push
jns
lret
xchg
lock
jo
or
xor
jle
mov
enter
in
pop
jno
pop
je
push
pop
inc
mov
sar
stos
in
mov
mov
gs
outsb
ljmp
jp
fidivl
push
pop
fldenv
mov
lods
nop
and
and
mov
int
or
xor
xor
sub
cwtl
mov
add
js
insb
jno
pop
add
mov
nop
mov
push
adc
int
sbb
sbb
cmp
sbb
jo
mov
das
call
push
aaa
mov
in
cmpb
insl
std
xchg
orl
mov
sbb
jno
out
push
out
sbb
sub
jne
and
xchg
push
and
cmp
es
jno
sti
push
cwtl
lret
enter
ja
pushf
adc
lea
in
mov
mov
sub
aaa
lods
or
shlb
std
or
or
add
into
pop
je
std
and
pop
int
pusha
movsb
xchg
xor
mov
popa
lods
mov
dec
mov
sbb
mov
fcmovnb
fdivl
mov
sub
xchg
add
mov
insl
add
out
enter
imul
mov
mov
adc
mov
lds
pop
mov
adcb
xchg
sub
pop
sub
dec
mov
cmp
stos
movsl
loope
cmpsb
mov
mov
lea
jb
sbb
xor
xlat
lea
xchg
sar
push
adc
test
dec
cmc
subb
jle
pop
shl
cmp
jecxz
iret
movsb
and
jnp
push
pop
test
or
pop
loop
sti
sbb
js
out
lods
cmp
es
and
jo
xchg
or
mov
in
adc
adc
xchg
es
in
shlb
sbb
xor
popf
xchg
icebp
mov
pop
or
cmpsl
insl
lret
jecxz
rcr
mov
jmp
hlt
cmp
scas
push
inc
lock
cmp
testl
js
movsl
lods
lea
dec
aam
cli
sbb
mov
cmp
mov
mov
xchg
pushl
cmc
loopne
movsl
adc
cmp
test
xchg
std
dec
ret
lret
xchg
in
lds
mov
pop
xchg
nop
mov
out
cs
sbb
pop
ror
adc
lret
dec
push
jg
xchg
nop
out
into
ficoml
test
out
shl
rcrl
rclb
je
mov
push
push
aad
movsb
rclb
lock
pop
arpl
lret
test
ds
add
add
add
rorl
leave
cmp
push
inc
out
mov
fs
js
fcoml
and
addr16
imul
lds
push
shrl
xor
inc
loope
pop
mov
cmp
cli
jle
lahf
xor
sbb
arpl
mov
and
int3
and
test
adc
mov
mov
lods
lahf
ficomps
hlt
push
pop
lock
mov
popa
and
mov
xor
xchg
xchg
add
dec
mov
stc
add
cmp
adc
bound
sbb
call
fnstcw
mov
out
and
sub
adc
pop
lock
push
stos
jne
jno
dec
and
sub
ja
insb
imul
insb
dec
mov
enter
jne
mov
stos
dec
adc
mov
jp
jl
orl
lods
mov
mov
cmp
push
mov
pushf
add
pushf
pushf
imul
popf
xchg
lds
and
lret
out
jo
imul
xchg
push
dec
stc
es
in
testl
arpl
xchg
int
pushf
dec
adc
or
jo
call
or
and
push
sub
out
mov
xor
or
xchg
in
jo
in
mov
cmc
outsl
xchg
and
orb
movsl
imul
push
push
popw
xchg
add
scas
xchg
pop
cmpsb
adc
repz
call
test
pop
dec
sub
inc
pop
pop
je
inc
pop
es
mov
or
rcll
xor
ret
addb
imul
test
test
or
cmp
out
ss
push
xor
js
inc
pop
mov
cmp
xlat
fdivs
mov
mov
repz
out
sub
mov
addr16
cmp
mov
ds
rcll
aad
inc
jle
loop
outsl
cwtl
pop
xchg
cmpsb
ret
outsb
repz
sub
dec
mov
push
mov
lods
dec
lcall
inc
mov
add
in
adc
outsb
in
outsb
add
inc
lcall
ss
fbld
icebp
movlps
adc
pop
dec
lret
in
push
xor
inc
lcall
xchg
inc
negb
push
out
add
pop
fdivr
push
fbstp
je
jae
gs
dec
call
inc
inc
ja
outsb
frstor
cmp
shrl
aam
push
decb
jne
push
push
int
mov
movsb
ss
cmp
push
addl
mov
jo
cmp
ficoml
cld
pop
push
out
mov
push
movsl
pop
sbb
ret
jb
lcall
mov
push
je
jae
lods
jg
mov
push
pop
push
ficompl
lock
ret
fcomps
cs
mov
adc
xchg
mov
fs
push
jp
nop
sub
and
sub
sbb
xor
out
push
sub
insb
mov
or
dec
and
add
cmpb
clc
lcall
jmp
push
out
negl
adc
push
xchg
cmp
fwait
in
xor
repz
pop
clc
add
fisttps
adc
fsub
aaa
adc
int
lcall
add
cmpsl
lods
leave
iret
sbb
aas
push
leave
aaa
xor
sub
clc
pusha
push
jmp
dec
sub
fstpl
sub
mov
in
js
pop
aam
mov
in
lahf
mov
cmp
mov
adc
imul
fwait
test
mov
not
mov
ret
in
mov
es
js
and
inc
xchg
jns
mov
test
ret
pop
pusha
fstl
out
add
inc
popa
insl
aaa
into
cmpsb
popa
rorb
loop
out
cmp
xor
repz
xchg
arpl
push
mov
ss
lret
loop
or
sbbl
mov
fwait
andb
hlt
adcb
jnp
stos
dec
mov
fnstsw
pop
mov
stc
xchg
leave
dec
pop
push
std
xchg
cmp
je
stos
es
adc
sbb
outsb
out
imul
insl
fimull
bound
insb
mov
xchg
lret
mov
neg
adc
push
enter
xor
jl
or
jns
dec
hlt
inc
mov
adc
insl
mov
enter
sarb
xor
xor
pop
stos
xchg
xchg
in
in
jo
ss
inc
lods
mov
test
mov
xchg
mov
popa
push
xor
inc
dec
cmpl
xor
push
lods
ret
add
mov
xchg
fcompl
popf
push
sub
cli
mov
rorl
adc
inc
enter
sbb
add
aam
push
hlt
mov
mov
push
add
push
mov
ss
jg
add
inc
ret
pop
xor
clc
pusha
fnsave
scas
iret
sbb
inc
les
dec
jns
jle
data16
ret
xchg
xchg
jg
mov
notl
roll
movlhps
into
data16
xchg
mov
stos
mov
jl
sbb
mov
mov
jle
adc
push
push
mov
and
push
cmp
push
jl
icebp
mov
mov
and
jle
xlat
aad
fwait
jecxz
mov
stos
add
xlat
stos
imul
cmp
mov
es
pop
sub
insl
popa
and
cmc
push
mov
jns
inc
pop
mov
les
jmp
sbb
andb
xlat
stos
mov
insb
sbb
lods
ljmp
adc
push
cmp
outsb
es
cmp
insl
mov
aad
imul
inc
repnz
cmpsl
jbe
ja
jo
decb
scas
jmp
rorb
jg
sbbb
mov
jmp
shr
sub
jae
sub
sub
fisttps
sbb
xchg
and
mov
inc
fiaddl
dec
call
mov
pop
aad
jnp
aas
mov
sub
sbb
das
lahf
mov
pop
cltd
xor
std
mov
imul
jo
adc
dec
popa
add
loopne
aad
mov
sarl
pop
sub
mov
dec
popa
icebp
and
les
xchg
ljmp
push
xor
cmc
nop
jno
mov
push
mov
inc
std
lds
cwtl
repnz
mov
mov
mov
push
fidivrl
cmp
pop
idivb
cmp
or
popf
mov
mov
sbb
or
and
push
lods
adc
pop
int
dec
dec
jnp
sbb
test
fld1
push
jb
aas
and
xchg
jge
aas
sbb
adc
hlt
stos
push
jl
pop
pop
ret
push
sbb
loopne
push
mov
fwait
jl
jb
push
rorl
in
mov
mov
jg
inc
or
int3
sbb
xlat
pop
jmp
popa
adcl
jmp
mov
add
sub
mov
test
pushf
scas
push
push
jge
pop
inc
lret
mov
roll
aam
jge
test
xor
js
shll
push
add
rclb
jecxz
fisttps
call
cltd
nop
jecxz
test
inc
cmp
fmull
fucomp
xchg
xlat
inc
int
insb
imul
inc
dec
jo
test
sti
or
fnstenv
push
sbb
pop
push
xor
lods
fstpl
mov
mov
adc
lods
leave
cmovo
sub
cmp
test
gs
testl
arpl
or
in
out
loopne
xchg
jge
inc
cmp
addr16
mov
std
adc
fbld
iret
ret
adc
decl
push
std
ret
mov
cmp
inc
add
in
mov
mov
mov
mov
inc
inc
pop
lea
into
cmp
mov
sbb
lcall
mov
in
enter
dec
sub
flds
xchg
idivb
mov
lods
sub
stc
cmp
jns
fdiv
mov
cmpsl
dec
clc
popa
xchg
cmp
stc
mov
stos
fstps
mov
pop
mov
xchg
sub
enter
jle
add
dec
cmp
imul
push
sbb
push
adc
pop
stos
or
xchg
je,pn
jnp
ds
mov
imul
popf
stc
mov
addl
lcall
xor
sahf
or
xlat
mov
add
ljmp
ret
jl
test
leave
cltd
test
imul
das
sub
xlat
call
mov
mov
jbe
jb
push
mov
push
faddl
btr
aas
add
pop
xchg
repnz
push
pop
adc
pop
out
xchg
inc
test
daa
out
fucomp
pop
test
dec
fneni(8087
push
adc
adc
jno
push
lahf
loop
in
loopne
pop
imul
ret
pop
test
push
push
mov
and
out
xchg
xor
insb
outsb
addl
xor
xchg
cmp
adc
inc
cltd
test
cwtl
movd
jns
pop
or
cmpsb
push
lock
push
push
jmp
test
xchg
and
jno
mov
rcll
aad
das
add
pusha
clc
addr16
clc
lock
cld
imul
xor
and
loope
mov
data16
mov
arpl
jo
inc
pop
xchg
addr16
mull
sub
dec
sub
sub
hlt
aam
shrl
in
xchg
or
xchg
mov
sub
outsb
jbe
push
mov
dec
int
in
push
push
ss
xchg
xchg
cmp
in
movsl
cmp
in
mov
fidivs
lea
int
sbb
repz
mov
insb
decl
sbb
mov
lock
fbld
add
fcoms
aam
and
dec
fsubr
mov
std
sub
xor
pop
pop
mov
stos
shlb
cmp
dec
or
cmpsl
adc
mov
lods
pushl
add
fldt
mov
aam
xor
bound
or
jl
enter
mov
sub
fwait
add
push
lahf
lret
mov
sar
jmp
scas
pop
out
es
sbbl
stos
sbb
ds
xor
dec
ljmp
mov
add
sbb
adc
shlb
psrlq
cli
inc
or
pop
ja
dec
fdivs
and
lea
lret
out
push
push
pop
push
mov
dec
jb
fcmovu
mov
sarb
cs
xchg
into
pop
mov
lret
push
add
lret
or
mov
mov
push
imul
cmp
dec
leave
add
ja
sub
dec
pop
shlb
push
cmp
pop
add
inc
mov
shl
and
mov
push
push
pause
dec
jno
sub
xlat
or
stc
or
cmp
movsb
or
sub
pop
pushf
das
pop
push
rclb
pop
lds
repnz
movsb
movsb
add
cmp
out
leave
pop
adc
add
cmp
flds
jp
fwait
adc
aas
sbbb
xchg
jg
sbb
xor
movsl
loope
jmp
stos
lock
repz
in
shrb
dec
mov
in
or
scas
scas
adc
pop
jp
lods
negl
clc
fnsave
mov
int
mov
packuswb
or
fistpll
lods
call
pop
repz
repnz
es
mov
ret
lahf
jb
add
dec
push
jg
je
sarb
adc
scas
xchg
jns
lods
mov
xor
das
or
push
pop
ljmp
push
popf
ss
adc
loop
adc
or
cmc
fmuls
lock
int
xchg
pusha
cmp
fcoml
mov
mov
and
lea
movsl
sbb
mov
pushl
pop
sbb
loopne
adcb
cmp
add
push
pop
sbb
jb
js
and
popa
cmp
jns
adc
dec
push
sub
pop
rolb
mov
cmp
sub
fsubs
roll
adcb
adc
xor
in
mov
and
or
xchg
cmpsb
outsl
jne
pop
inc
sbb
inc
js
jb
lret
enter
out
aaa
xchg
pop
fnstsw
dec
jle
loopne
sbb
cmp
adc
roll
mov
mov
dec
sti
xor
xchg
pop
scas
jmp
leave
pop
rcll
jcxz
ljmp
bound
push
fcoms
mov
jns
pop
jae
add
or
push
leave
pop
fisubrl
pop
sbb
jne
shrl
je
or
sbb
sub
jo
rclb
lret
or
and
push
xor
imul
xor
das
lret
jo
dec
push
xlat
scas
push
ljmp
testb
mov
dec
psubw
dec
popf
adc
push
mov
leave
jb
ljmp
fcmovnu
jmp
xchg
adc
das
in
xlat
sbb
pop
call
xor
xchg
dec
pop
mov
jno
cmp
pusha
enter
xchg
les
lret
fstpl
add
imulb
inc
nop
or
push
pop
cmpsl
negl
lea
sbb
test
push
fistpl
push
fidivrl
jmp
sbb
mov
and
data16
les
clc
lea
cs
inc
inc
add
adc
cwtl
and
inc
inc
aam
orb
sbb
jge
mov
xor
pushf
jmp
negb
shll
outsl
cmpsb
jbe
sahf
in
jnp
push
ja
dec
out
rolb
test
add
rorl
repz
dec
in
aam
pop
jb
mov
inc
push
push
mov
jecxz
push
jge
arpl
mov
sbb
mov
cli
sub
pop
out
ror
and
rolb
ficompl
mov
popa
xor
daa
inc
sbb
mov
push
jp
pop
mov
dec
jb
adc
or
lds
sbb
jg
jl
cmpsb
shlb
push
imulb
cwtl
jmp
mov
sbb
cli
pop
orl
inc
push
push
pop
lea
mov
mov
mov
ja
push
and
stos
jae
rcll
ret
jmp
int
sub
push
ds
xchg
mov
mov
or
insl
adc
add
testl
cmpsb
adc
idivl
dec
lret
sub
jle
jb
xlat
adc
insb
jb
fwait
adc
outsl
insb
out
ss
push
cmp
imul
rclb
int
sbb
stc
mov
insl
xor
ds
xchg
jg
dec
jl
subb
jbe
fstps
shlb
mov
test
add
sbbl
rorb
int3
jg
xchg
sbb
jg
movsb
cmp
push
mov
hlt
scas
inc
repnz
xor
jecxz
lock
sbb
fistpl
push
pop
mov
lahf
sub
nop
daa
aad
or
mov
adc
fidivrs
shll
dec
divb
mov
xchg
cmp
dec
xchg
push
adc
out
sbb
dec
loopne
cmp
xchg
fwait
add
jge
push
mov
adc
xchg
adc
and
dec
mov
minps
cmp
xchg
imul
pop
xchg
or
adc
xor
int3
push
aam
test
inc
dec
push
cmp
cltd
xchg
stos
mov
push
xchg
movsl
cwtl
in
cld
dec
clc
jne
rclb
or
into
lahf
out
cltd
ret
inc
cs
hlt
mov
jmp
enter
sti
bound
hlt
outsb
mov
iret
dec
add
mov
mov
and
and
cmpsb
jg
adc
les
pop
dec
fwait
in
or
mov
xchg
nop
or
inc
mov
mov
xchg
imul
sub
movsb
sub
dec
sub
cmc
leave
out
xor
jl
iret
cmpsb
scas
sbb
out
or
or
fdivrl
pop
mov
sub
test
lcall
push
push
push
xchg
fsubp
xchg
out
ljmp
faddl
out
repnz
stos
cmpsb
inc
jle
mov
adc
cmpsb
or
movsb
dec
hlt
mov
lahf
cltd
aam
repnz
xchg
out
mov
mov
loope
popf
iret
mov
mov
out
scas
fcmovnu
sbb
icebp
push
fidivs
mov
cmpsb
xchg
mov
dec
mov
pop
dec
cmpsb
pop
sub
jecxz
jl
hlt
pusha
outsb
in
mov
in
xchg
jbe
mov
mov
push
notl
aad
lock
mov
adc
mov
mov
jl
dec
and
cmpsb
pop
add
out
test
ret
fwait
jl
fs
cmp
pop
mov
lret
jecxz
not
jmp
jo
test
outsl
jb
mov
jp
dec
aas
movsl
ja
in
std
scas
xor
push
in
popa
popf
inc
inc
xchg
ljmp
das
mov
push
inc
adc
popa
xchg
mov
dec
cmp
daa
lret
xchg
adc
mov
cmp
lea
popa
lds
cmp
jmp
sub
mov
call
into
adc
push
mov
cmp
movsl
cmp
adc
cmp
jb
adcl
sub
mov
mov
push
mov
mov
or
xor
imul
mov
or
inc
testl
lds
sbb
lds
movsb
repz
pop
sbb
scas
lret
std
mov
lret
jno
push
push
daa
dec
or
adc
and
add
dec
das
dec
in
sbb
xchg
jp
push
cld
lret
std
sbb
ja
cmp
es
clc
mov
push
mov
xor
push
outsb
jnp
and
cmp
jl
sti
jmp
fcmovnbe
outsb
les
roll
mov
dec
cmc
aas
add
jl
insb
sbb
push
jbe
add
ret
out
mov
fidivl
call
fwait
add
jmp
loopne
movsb
ret
inc
fsubl
push
push
mov
sbb
ss
aaa
add
sbbl
sub
inc
jl
call
pop
cmpsb
pop
jl
xchg
nop
cmp
adc
push
or
pop
mov
faddl
lea
roll
jnp
shl
lahf
test
pcmpgtb
dec
sub
push
aaa
push
xchg
shl
pop
outsb
xchg
push
adc
lret
or
ja
shrl
enter
and
ljmp
push
sub
mov
sbb
push
outsl
jge
jne
sbb
dec
mov
ret
aad
hlt
dec
lahf
add
loopne
mov
mov
fcmovnbe
loope
mov
ret
gs
dec
repz
aaa
cmc
fdivs
mov
and
and
mov
ja
adc
cmpsl
fisubs
mov
inc
rolb
aaa
test
bound
pop
xchg
cmp
dec
shlb
or
cmp
out
fadds
or
mov
out
adc
xchg
lret
xchg
add
fs
adc
inc
scas
cmp
sbb
or
test
mov
push
xor
pushf
jmp
mov
ja
cltd
inc
and
lret
mov
enter
bound
rol
int3
jge
aam
cmpsb
inc
mov
sbb
adc
add
push
or
and
insl
fildl
das
in
adc
aas
movsl
pop
jnp
jno
lret
and
ljmp
xchg
cmp
adc
rcrl
sub
ret
in
mov
add
jl
xchg
loop
das
mov
fwait
fwait
add
sbb
out
push
inc
push
jecxz
push
xchg
pop
cmc
mov
adc
or
mov
fbld
lcall
xor
and
sub
into
dec
mov
push
sbb
outsl
imul
orl
int3
ds
xchg
sbb
pushf
imulb
jl
sysret
push
mov
clc
int
or
mov
pop
add
mov
xor
out
adc
call
ret
mov
sti
push
test
lods
push
xchg
add
inc
arpl
lds
sbb
gs
mov
ret
cmp
call
push
sarb
mov
fildl
add
imul
push
xlat
std
jbe
inc
xor
cmc
adc
aad
test
and
popf
push
lret
addr16
adc
leave
hlt
jle
mov
cmp
xchg
mov
xchg
jne
add
ror
xchg
push
scas
into
push
sarl
push
mov
fwait
adc
cld
dec
add
cmc
mov
xor
mov
loope
daa
dec
dec
das
inc
scas
prefetcht0
mov
je
push
mov
sub
mov
popa
xlat
jge
mov
xchg
loopne
sbb
pop
or
test
jg
dec
out
cli
jne
outsb
movsl
roll
iret
sbb
cli
ljmp
test
push
cli
cs
idiv
fwait
and
imul
pop
dec
jbe
sti
andl
and
xlat
fcomps
adc
lods
pop
inc
sub
xor
sbb
push
fisubrl
out
lods
mov
daa
in
add
sub
int3
and
or
xchg
adc
pop
mov
inc
mov
popf
pop
out
pop
pop
push
leave
or
mov
cmp
in
xor
ja
or
je
or
mov
popf
xchg
enter
sti
stos
test
sbb
shll
in
pusha
and
ja
add
lock
xchg
mov
rol
flds
jp
xor
jno
daa
push
fsubl
into
cwtl
das
shl
xchg
mov
add
sub
dec
cmpsb
cmp
cwtl
push
or
aas
notl
xlat
shl
pushf
in
dec
cmc
mov
std
ret
and
jb
std
mov
xor
int
sub
mov
fimull
es
dec
repz
test
loope
and
add
mov
mov
leave
pop
in
inc
xchg
fistps
push
shll
cmp
push
pop
jecxz
xchg
scas
rol
pop
mov
mov
mov
pop
mov
or
mov
leave
push
mov
and
rcrb
outsb
inc
sbbb
repz
mov
mov
push
or
shrb
stos
stos
add
pop
add
mov
xor
pop
cmpsl
test
mov
iret
sub
call
iret
sbb
inc
aas
loopne
cmp
jbe
sti
sub
cld
cli
jae
jecxz
pop
pop
fwait
sub
sbbb
lods
and
rcll
out
xchg
inc
push
ret
xchg
lods
jl
cli
push
scas
ja
adc
jns
leave
fdivrs
leave
into
jge
cwtl
roll
lahf
push
loopne
jge
cmpsb
inc
ja
inc
lahf
sub
mov
jb
jno
es
or
popa
push
shll
outsb
rolb
loop
pop
orb
aam
rorb
fldl2t
lods
mov
inc
dec
insb
out
xorb
pop
std
dec
std
adc
jge
jmp
mov
dec
and
clc
stos
fwait
push
insl
push
mov
scas
xchg
cmp
movsb
mov
sbb
stc
push
cwtl
movsl
xchg
fstpl
pop
mov
inc
outsb
ret
sbb
mov
das
xchg
das
and
mov
addr16
push
push
dec
sub
aaa
lret
jns
insb
jg
mov
std
data16
mov
test
xlat
pop
xchg
repz
sub
cwtl
jns
pop
ja
xchg
xor
mov
push
mov
push
shlb
jp
in
scas
xor
lods
xchg
shl
push
inc
lds
jecxz
ror
inc
sub
cmpsb
out
and
nop
mov
jecxz
cmp
fbstp
mov
in
jge
jmp
mov
repz
sti
xor
add
imul
out
pop
cmp
movsb
cltd
mov
pop
mov
mov
cwtl
cltd
clc
cmp
gs
cwtl
sub
and
insb
cwtl
sub
jge
sub
scas
loop
and
mov
inc
lods
xor
dec
subl
jp
add
mov
mov
pusha
cmp
jecxz
inc
or
or
fldcw
add
mov
push
xor
in
sahf
cmp
lods
pmuludq
sarl
cltd
mov
sub
ljmp
sbb
xor
pop
push
push
pop
xor
add
int3
and
cmp
and
arpl
ret
aas
xchg
dec
mov
pop
push
imul
add
out
jo
ret
inc
push
xchg
mov
roll
psubb
add
jns
aam
ret
dec
or
lea
mov
cmp
lret
ljmp
mov
cmpsb
es
xor
xchg
scas
aaa
dec
mov
imul
xor
jns
mov
sub
test
movsl
sbb
in
push
mov
jo
xchg
and
cmp
bound
jo
in
cmpsb
movsb
sbb
pop
mov
jo
into
xor
mov
xor
addr16
in
movsb
pop
mov
pop
mov
ret
pop
hlt
repz
popa
pusha
incl
jl
jo
mov
xchg
pop
adc
jg
mov
mov
and
lcall
jl
sbb
ljmp
adc
cmp
add
lea
movsl
leave
std
cmpsb
test
fstpt
nop
mov
loopne
ds
lret
mov
vcomiss
int3
inc
sbbl
jno
aaa
out
or
bound
int
pop
ud0
xchg
mov
dec
xor
repz
test
int
xchg
push
sti
xchg
mov
andl
call
out
or
ss
jns
xlat
mov
call
inc
adc
inc
jp
stc
out
dec
or
and
inc
int3
xchg
stos
jae
adc
mov
pop
mov
xchg
rol
in
out
sub
mov
mov
sub
out
movsl
jecxz
loope
xchg
xchg
jns
out
js
stc
pop
shlb
cmp
clc
push
dec
jbe
xchg
or
cli
sbb
sbb
cld
push
push
pushf
mov
mov
pop
roll
mov
lods
sub
cmp
sbb
jl
and
hlt
adc
nop
lcall
sbb
xchg
sbb
dec
pop
mov
cld
xor
sub
pop
fdivs
cmp
mov
fidivrl
scas
aaa
inc
dec
jae
sub
rcr
mov
aam
push
cmc
fs
fcomps
dec
push
adc
dec
push
rclb
add
rolb
sub
jns
add
addr16
inc
pusha
pop
sub
nop
icebp
xchg
cltd
aas
sub
jecxz
cmp
xor
fnstcw
mov
negb
shlb
scas
xchg
ret
mov
jne
lods
iret
mov
jbe
xchg
rcr
imull
clc
pop
movsb
test
sub
adc
mov
dec
xchg
lahf
sub
cmpsl
sub
cld
pushf
dec
sub
xchg
lods
sbb
mov
push
push
rclb
push
nop
cwtl
aaa
cmpsb
fwait
pop
je
xchg
out
mov
sub
lds
leave
pop
ret
addr16
les
or
sbb
insl
frstor
add
pop
adc
stos
cmpsl
pop
mov
cmp
test
leave
jno
scas
notb
fildll
movsb
mov
xor
xchg
orl
and
dec
out
daa
je
repnz
xor
xor
in
fstpt
xchg
mov
push
jnp
shll
int3
or
push
in
popa
fldln2
sbb
adc
loop
adc
fbstp
push
add
pand
addr16
and
shl
jns
sub
mov
aam
jae
jns
adc
xchg
shrl
push
jne
mov
shl
xor
push
scas
jle
mov
sarl
mov
jae
mov
pop
pop
aaa
out
add
adc
or
rclb
jl
push
xchg
xchg
cltd
pop
xchg
jo
push
inc
xchg
jg
dec
rorb
lock
testb
imul
add
xchg
ret
les
fwait
sub
shll
imul
inc
cmp
jecxz
stos
cmp
in
inc
cmpsb
xchg
into
cmp
inc
push
mov
or
jns
sarb
jnp
fildl
in
push
jp
fsts
mov
adc
and
adc
out
pushf
in
mov
sub
cmc
jg
ljmp
xchg
aad
or
jo
leave
std
sub
xlat
out
sbb
sub
push
push
scas
hlt
and
add
xchg
sub
test
or
stc
push
inc
lock
repnz
cld
inc
into
mov
movsb
jns
ja
xor
mov
out
addr16
push
imul
push
mov
ja
pop
outsb
mov
test
xlat
cli
sbb
loope
shrl
movsb
pop
jnp
cli
enter
and
test
das
or
dec
xor
mov
mov
jo
lahf
jl
fs
xchg
stc
test
aad
xchg
aas
xchg
fimull
or
ficoml
cmp
in
sub
jp
mov
jnp
mov
or
inc
aas
jb
xchg
movsl
mov
stc
outsl
jo
jne
repnz
shll
mov
test
adc
dec
sub
mov
clc
inc
ljmp
mov
dec
nop
cmp
push
sub
inc
add
scas
cmc
fwait
xor
xor
inc
pop
pop
mov
out
mov
pop
jne
fidivrl
adc
dec
pop
lods
pop
adc
scas
jmp
pop
push
inc
clc
push
inc
mov
jbe
js
fidivs
cmpsb
xchg
xor
adc
dec
pop
jp
sub
xchg
mov
ljmp
mov
rcrl
daa
out
jbe
mov
cmp
cmc
mov
cwtl
lcall
mov
in
push
std
dec
add
sub
sbb
inc
fs
pop
ret
and
pushf
test
cmp
push
fbld
mov
inc
addr16
aaa
xchg
imul
mov
add
fsubrs
imul
es
addr16
cmp
xor
mov
call
xorl
mov
adc
pushf
call
mov
pop
cmpsb
cmp
sub
pop
mov
or
and
pop
fs
scas
inc
shlb
mov
mov
movsl
cmpsb
cmp
mov
jle
cli
push
push
cmp
xchg
mov
cwtl
cwtl
cmp
mov
fisttpl
clc
sarb
lods
imulb
xor
push
mov
enter
mov
inc
roll
and
mov
mov
dec
inc
in
add
lret
ja
std
daa
pusha
lcall
popa
xchg
jmp
imul
push
pop
in
xor
pop
xchg
push
and
fcmovnu
lock
cmpsb
jns
sbb
cmp
push
aad
fistpl
popf
adc
inc
jb
sbb
imul
pop
push
or
mov
xlat
mov
or
or
cld
cmp
cmp
or
xchg
pop
push
and
jns
pop
imul
xor
xchg
mov
and
mov
mov
bound
dec
sbb
ljmp
arpl
test
cmp
inc
insb
mov
shrl
xlat
jl
repz
sub
dec
fldcw
mov
aas
out
cmp
out
out
data16
adcl
arpl
inc
add
push
push
fsub
out
lret
push
xchg
stc
scas
xor
dec
inc
pop
xchg
sbb
fcmovnbe
test
movsl
testl
cmp
call
xchg
loopw
pop
stc
mov
psllq
popf
bound
ljmp
fcomps
push
mov
popa
xlat
jnp
xchg
aas
sar
in
lret
add
jg
inc
cmpsb
push
lahf
sbb
xchg
leave
int3
xor
fdivrs
jle
jg
mov
pop
hlt
xchg
jle
gs
and
pushf
nop
data16
fwait
pop
mov
aam
pop
sub
add
stos
enter
sbb
or
xchg
inc
fldl
sub
ficomps
add
push
sub
rorb
aad
in
mov
push
mov
nop
call
xchg
dec
ds
xor
jnp
out
pop
fdiv
icebp
push
pop
aaa
ret
sahf
mov
ja
dec
cld
mov
int3
cmc
mov
in
ja
fidivs
dec
fidivrs
add
imull
mov
xor
out
movsl
push
imull
in
cmp
pmaddwd
lea
pop
lock
test
psrad
push
out
inc
dec
mov
or
jg
sbb
xchg
dec
dec
daa
aam
nop
loope
jl
sti
repnz
inc
js
and
push
or
mov
xor
mov
bound
clc
fisttps
imul
loopne
mov
cli
xor
loop
mov
jnp
rcrb
mov
jnp
fwait
pop
sarb
and
and
shr
add
inc
nop
imul
inc
pop
aaa
in
sahf
push
fldpi
sete
dec
or
repz
xor
pop
fisubrs
jne
add
fwait
cmpsb
push
mov
or
dec
sbb
jno
pop
out
scas
inc
jmp
and
add
adc
int3
shll
popf
mov
sbb
std
inc
out
cs
outsb
out
xor
mov
lods
xchg
outsb
xor
mov
push
inc
push
and
shll
lcall
xor
pop
popf
je
fistpll
lock
pusha
pop
mov
xchg
jp
ret
mov
loope
cmc
test
mov
and
xchg
pop
inc
arpl
add
shll
mov
push
jge
and
out
mov
jle
mov
cmp
or
lods
je
repz
push
fucomip
xlat
push
cs
test
ljmp
in
pusha
jae
dec
ss
out
cmp
icebp
mov
mov
ret
cmpsl
inc
scas
cmp
push
add
jae
jo
and
jne
ret
fistps
mov
inc
dec
xlat
pop
imul
xor
sbb
enter
lret
icebp
outsl
cmp
iret
jne
cmpsl
mov
sti
lea
cmp
stos
inc
xor
lret
cwtl
out
pop
pusha
jb
jb
les
lods
ljmp
push
shlb
insl
iret
and
shll
test
push
rcl
hlt
mov
sbb
stos
cmp
pop
xorb
jnp
es
and
addb
in
jae
mov
cld
daa
adc
jbe
pop
loope
sub
mov
rorl
and
xchg
icebp
shll
loopne
push
cmc
je
dec
lods
scas
ret
jo
mov
jecxz
pop
cmpsb
fisubl
in
lcall
lds
pop
jnp
pusha
adc
inc
in
mov
sub
scas
add
or
jne
out
add
mov
mov
cmc
enter
push
or
sub
inc
pusha
inc
loopne
pop
loope
scas
fbstp
movl
in
outsb
ret
push
and
outsl
hlt
out
addr16
stc
mov
cld
dec
aam
adc
rcll
icebp
cld
pop
pop
mov
dec
adc
or
jae
or
movsl
jmp
sbb
and
das
add
xchg
mov
out
fcompl
sbb
into
mov
mov
and
add
ja
push
movsl
into
mov
sbb
stos
pop
inc
or
add
mov
lds
int
inc
repz
les
popf
ljmp
leave
mov
scas
int3
dec
lods
xorb
sbb
aam
jno
push
lods
out
and
cltd
fstpt
adc
adc
stos
mov
or
xlat
sbb
adc
cmpb
push
mov
adc
scas
or
adc
ret
dec
xor
aad
repnz
mov
insb
pop
adc
out
loop
fildll
adc
sub
inc
outsb
loope
or
xchg
mov
sbb
adcb
je
pop
mov
mov
ljmp
sbbb
clc
mov
inc
push
std
and
mov
pusha
adc
xchg
sbb
xor
or
cmpsl
pop
pop
pcmpgtb
call
mov
pop
jno
outsl
sbb
xchg
push
push
sub
scas
dec
xchg
jl
or
or
imul
shll
add
jmp
sub
mov
shlb
insb
ljmp
and
outsb
inc
push
mov
jnp
inc
sbb
bswap
enter
sbb
cmp
sti
fildll
mov
or
int3
mov
mov
and
pop
push
and
movsb
negl
xchg
movaps
push
ja
scas
sbb
mov
mov
pop
jb
mov
sub
sub
cmc
ret
icebp
cmc
dec
fcmovnb
fidivs
dec
xchg
arpl
divl
cmpsl
adc
ds
mov
or
rcl
jmp
pop
and
out
and
lock
mov
repnz
int3
mov
fisubrs
jns
inc
out
jo
cli
cmpsb
xor
and
mov
sbb
std
mov
jg
lods
je
pop
cmp
xor
add
and
bound
or
or
cmc
iret
jge
push
sbb
mov
jg
inc
cltd
lods
xchg
aam
jle
mov
dec
or
enter
cltd
cld
fldt
jle
stc
mov
lret
test
ficomps
outsb
xchg
pop
pop
std
xchg
push
sbb
inc
scas
sub
mov
inc
enter
movsb
into
es
and
cmp
cmp
add
or
ret
xchg
subb
stos
or
test
das
out
push
sbb
mov
jle
in
out
inc
test
push
pop
aaa
repnz
add
inc
outsl
sbb
mov
xchg
xor
sbb
mov
fisubrs
sub
or
add
aas
inc
sbb
js
cmpb
js
in
xor
adc
pop
lcall
jmp
fwait
pop
xchg
gs
loop
js
loopne
scas
sub
push
jmp
sub
jns
jmp
ss
outsl
inc
loopne
shl
test
mov
jne
lret
mov
repnz
jmp
push
sub
lret
je
scas
push
imul
repz
dec
aam
sbb
jl
lret
fsub
dec
adc
or
fsubr
mov
ds
cmp
xchg
push
test
sarb
pop
push
stos
sbb
xchg
es
ror
pop
cmp
push
xor
mov
mov
fwait
popa
jmp
inc
test
ret
lahf
lahf
aas
mov
sbb
adcl
ja
lea
sahf
push
outsl
rcrl
insb
icebp
mov
xor
fst
cmp
adc
adc
dec
or
jmp
adc
xor
ds
ja
ss
pop
push
loope
aam
push
les
mov
dec
push
sub
pop
push
mov
js
mov
loop
inc
or
fldcw
adc
loop
shrl
fsub
push
mov
fmuls
add
out
imul
clc
mov
or
lods
ljmp
inc
pop
outsb
test
and
mov
add
enter
cmp
sbb
xor
xor
xor
movsl
lods
mov
loop
mov
scas
adc
lods
stc
in
dec
cmp
cmp
rcrb
outsl
clc
jbe
test
inc
out
lock
popa
xor
cli
test
outsl
cmpsb
mov
sbb
dec
and
insb
cmp
fildl
in
mov
mov
test
and
xchg
inc
popa
push
call
add
adc
mov
orb
cmp
out
and
pop
scas
push
adc
les
and
bound
cmp
imul
mov
addr16
in
adc
dec
and
pop
test
lods
mov
sub
cmp
fidivrl
roll
pop
lahf
dec
xchg
mov
mov
cmp
push
shlb
pop
and
aam
or
mov
loop
jnp
lods
mov
test
xor
cmc
or
jbe
cwtl
adc
testb
fldl
icebp
adc
cmp
cmpsl
inc
xor
jmp
loop
scas
ss
pop
into
lret
les
mov
aas
imul
and
aad
pushf
jbe
push
pop
pop
pop
and
add
mov
cmpsb
xchg
inc
je
and
fdivrl
push
sub
bound
xlat
mov
push
and
setle
lods
sahf
mov
cs
pusha
adc
add
out
popf
addr16
clc
js
ret
add
mov
outsl
cmp
adc
xor
bound
jnp
mov
leave
jno,pn
outsb
aaa
jae
cmp
in
js
pop
ss
sahf
and
xchg
leave
cmpsl
and
decb
dec
push
pop
or
pop
jmp
jg
adc
sub
mov
outsl
and
adc
loopne
xchg
call
pop
pop
in
stos
int3
pop
mov
test
dec
repnz
push
sub
dec
popa
lock
mov
adcl
into
cmpl
push
inc
mov
add
aaa
stc
mov
or
mov
mov
fistpl
jp
incb
fbstp
repz
pop
inc
mov
mov
xchg
mov
push
pop
dec
je
movsb
incb
mov
repz
cmc
mov
idivl
outsb
push
int
inc
jne
jmp
push
push
xchg
mov
sbb
enter
je
aaa
je
adc
jbe
mov
enter
fwait
sub
call
fldt
xor
dec
aam
fdivs
inc
cli
imul
in
xchg
ds
dec
xor
hlt
and
and
and
cmp
loop
mov
inc
sub
xor
fidivrs
dec
fdivp
mov
das
cli
xchg
cld
sahf
test
loopne
push
je
cmp
in
sbb
mov
pop
mov
or
jae
adc
mov
mov
dec
push
jl
pop
cwtl
dec
das
mov
sbb
add
jmp
jp
dec
loope
mov
int3
push
dec
mov
xchg
out
lahf
das
adc
mov
and
add
mov
pop
mov
lea
test
xchg
push
pop
cmp
scas
mov
xor
jl
imul
push
push
cs
mov
loopne
adc
lret
jns
scas
sbb
mov
test
fildll
loopne
call
sbb
inc
popa
mov
aam
bound
std
xor
or
jo
push
sbb
adc
mov
cs
jg
mov
popa
sbb
lods
and
jp
adc
hlt
mov
loop
out
and
pop
test
in
sub
jmp
pusha
mov
test
xor
mov
sub
in
add
or
pushf
or
sbb
out
lock
daa
sub
insl
push
add
out
nop
shrl
addb
push
or
sbb
and
mov
out
cmp
xor
push
or
add
jbe
sub
inc
push
dec
push
aas
addb
xor
pushl
or
inc
jl
adc
mov
ds
stc
test
cmc
mov
adc
push
and
pop
mov
pusha
or
fcompl
inc
je
inc
das
shl
repz
lock
lahf
adc
xchg
xchg
and
mov
lds
xor
fldenv
cmp
adc
fists
scas
fcmovnbe
ret
or
sbb
imul
mov
adc
xchg
jb
jmp
or
mov
pop
cmp
pop
pusha
das
sub
daa
inc
cmp
in
and
mov
and
repnz
outsl
scas
jge
pop
cmpsb
xor
sbb
pop
rorl
pop
pop
push
lret
pop
rorl
sub
adc
js
jmp
jmp
cld
and
addr16
or
push
into
pop
pop
clc
sbb
dec
pop
je
outsl
push
push
cwtl
and
xchg
push
fsubl
es
and
mov
jp
sbb
ja
mov
pop
jnp
ss
ljmp
xchg
ret
addr16
out
mov
push
sub
cmpsl
push
fcmove
stc
and
lods
js
mov
push
je
in
aaa
sub
xor
cltd
lods
or
xor
push
inc
jo
scas
lret
loope
dec
mov
jmp
pop
scas
or
out
mov
inc
push
add
dec
pop
lret
and
test
jecxz
into
sahf
pop
test
and
or
sbb
or
or
pop
ficompl
mov
and
pushf
jb
jne
jae
loope
mov
cmp
jne
fldt
add
mov
pushl
push
sbb
je
nop
nop
aam
aam
fsubs
jmp
inc
mov
ja
mov
mov
arpl
cmp
sbb
sbb
ds
sbb
lods
xchg
mov
push
loope
inc
cli
xchg
rcrl
ds
lods
scas
adc
push
jno
jne
push
and
sbb
fs
pop
or
add
cmp
popa
pusha
push
push
xor
nop
filds
fcompl
xchg
movsl
sbb
insb
jno
and
xchg
push
pop
add
lret
or
xlat
daa
mov
dec
pop
movsl
test
pop
popf
mov
xor
fbld
ljmp
test
imul
pop
shrb
mov
fwait
mov
mov
jo
arpl
jnp
pop
subl
rclb
rdmsr
aam
push
dec
xchg
push
cwtl
int
outsl
xchg
pop
leave
pop
mov
sahf
pop
fsubrl
std
mov
mov
inc
pop
ds
insb
jo
mov
sub
cs
mov
movsl
stc
in
outsl
add
rorl
jl
repz
or
fsubrp
xchg
dec
dec
add
loop
in
jbe
cs
mov
mov
dec
out
lcall
mov
xor
xchg
jno
pop
push
dec
lods
cmc
sbb
es
sub
popa
pop
fcmove
add
test
jae
add
insb
loopne
pop
xlat
push
js
out
aaa
mov
or
sti
jnp
cmpsb
sbb
pusha
cwtl
ljmp
mov
stos
lods
cs
inc
je
sub
push
sbb
test
inc
sub
icebp
ja
inc
inc
mov
in
jp
loop
xlat
push
loop
data16
mov
int3
adc
xor
xchg
add
inc
push
dec
push
hlt
int3
pop
mov
test
sbb
xor
cmp
lock
pushf
andl
pop
cmpsb
ficoms
inc
or
mov
ret
hlt
mov
mov
test
xor
sub
stos
pop
add
aad
fiaddl
lods
sti
dec
sbb
cs
dec
mov
hlt
push
lcall
mov
mov
out
jo
ljmp
addr16
aad
adc
rcrl
outsl
and
sbb
insl
push
jge
das
dec
mov
in
imul
or
mov
or
push
mov
adc
xchg
add
sub
xor
popf
or
ljmp
xlat
int3
adc
scas
dec
orb
insl
adc
sbb
loopne
aas
mov
cmp
xor
jmp
cwtl
adc
jp
or
out
sbb
insb
mov
ret
sbb
cmp
push
jmp
lret
xchg
das
mov
mov
ja
jmp
insl
shr
dec
jb
and
pop
sub
inc
cmp
pop
or
leave
xor
fs
shrl
mov
sub
popf
mov
gs
testb
mov
xchg
rcl
es
and
out
sbb
push
fs
mov
aad
cmp
add
pop
or
dec
and
jge
fimuls
sub
xchg
xchg
test
jp
fstpt
jl
and
pop
jbe
nop
subl
xlat
cmc
inc
shlb
adc
sbb
pop
addb
mov
lret
and
push
mov
cmp
pushl
adc
pop
call
ljmp
mulb
or
push
push
push
cmp
js
pop
aam
and
jp
xchg
sub
test
ja
repnz
icebp
jnp
loop
push
sbb
enter
enter
push
push
subl
shlb
or
jnp
or
shl
addr16
inc
jl
mov
or
out
xor
cmp
rolb
aad
imul
jo
sub
ja
xor
xor
push
pop
fsubrl
aam
push
repz
add
fwait
ror
xlat
bound
push
mov
mov
mov
notb
cwtl
roll
sahf
mov
push
pop
je
inc
ret
pushf
adc
mov
cmp
in
mov
arpl
mov
andl
jl
cltd
insl
shrl
pop
and
and
mov
das
dec
rorl
insb
xchg
fwait
inc
aad
fcmovne
ret
lds
xor
push
inc
clc
fwait
mov
jae
insb
outsl
lock
das
cmp
sahf
adc
ds
outsb
xchg
nop
test
jbe
mov
jne
rclb
pop
stc
push
pushf
push
sub
xor
and
cmp
xchg
rcl
mov
or
jnp
xchg
in
and
or
adc
mov
ss
out
bound
sti
and
mov
jbe
add
xlat
push
repnz
cmp
sbb
xor
push
fnstenv
ljmp
and
int3
add
mov
sbb
xor
stos
add
or
cmp
popf
mov
outsb
testb
ja
or
js
ljmp
dec
std
and
cs
fcomip
mov
mov
lock
xor
popa
aam
or
add
push
sti
push
and
shl
mov
pop
testb
adc
pop
stos
mov
cs
or
sti
js
xchg
shrl
xor
add
sub
xor
test
in
lods
cmpsl
cmpl
ja
adc
cmp
dec
decb
in
cmp
aad
faddl
iret
lahf
out
inc
insb
stos
pop
jle
movsl
sub
jle
in
icebp
push
xchg
inc
dec
pop
mov
cmp
or
inc
leave
xchg
cmp
or
popl
lods
in
jnp
push
imul
fmul
rolb
dec
movsl
xor
shl
pusha
leave
loop
push
adc
clc
std
push
jg
dec
lods
ret
dec
aam
into
mov
lcall
sar
pop
mov
orl
sarl
push
icebp
loopne
pop
sub
sub
adc
jne
lret
insb
jnp
rcrb
out
mov
inc
cmp
scas
les
sbb
in
xchg
xor
adc
adc
add
lcall
popa
jbe
sahf
sti
stc
and
repz
jae
out
sub
mov
lcall
out
movsl
inc
inc
jl
or
mov
xchg
jecxz
mov
into
loopne
das
jl
loopne
pop
xchg
insb
nop
adc
mov
push
icebp
test
data16
inc
and
js
cmp
sbb
cmp
sub
push
fwait
mov
and
sbb
addr16
mov
jb
test
loopne,pt
gs
xor
rclb
add
fucom
ja
sti
test
mov
jl
push
lea
push
adc
cmp
and
dec
shr
jbe
aad
lods
cmpsb
sub
sub
pop
ss
mov
sub
xorl
mov
lds
sub
xchg
and
dec
cmpb
mov
sub
fstpt
xor
daa
out
jae
mov
fwait
xchg
aam
xchg
repnz
mov
cli
lea
into
xor
lret
js
lds
mov
jno
xor
dec
das
movsb
sbb
movsl
pop
iret
dec
jb
add
pop
sub
mov
sub
into
cmp
fstl
pop
ja
int
or
aad
pop
push
setg
in
jne
arpl
mov
gs
insl
jl
push
mov
leave
movsl
neg
arpl
enter
push
movsb
xchg
pop
loopne
mov
jno
and
sbb
push
insl
adc
mov
add
mov
addr16
jl
nop
or
mov
pop
mov
xchg
data16
xchg
das
leave
push
add
cmp
popf
out
xor
je
inc
pop
dec
pop
sub
adc
dec
mov
mov
jmp
mov
mov
jmp
mov
xchg
pop
popa
sbb
mov
mov
cwtl
add
sarl
lcall
arpl
js
cmp
fcomi
push
jns
push
push
or
fistl
outsl
inc
push
push
sbb
push
cmp
mov
ficomps
lods
sbb
or
xor
xchg
leave
jo
bound
adc
ret
adc
push
out
insb
adc
push
push
out
pop
xchg
jb
ds
in
dec
xlat
push
dec
xchg
cwtl
call
stos
pushf
sbb
lds
jo
lret
push
fnstcw
call
sub
cltd
lcall
test
cmpsb
enter
rolb
call
inc
imul
cmpsl
cmp
or
inc
aad
jge
adc
and
js
loopne
jae
int
mov
add
pop
pop
dec
jae
push
icebp
movsl
sub
xchg
lods
adc
icebp
stos
add
lea
mov
inc
cmc
ficompl
push
in
sbb
cwtl
in
cmp
xchg
ja
shrb
inc
ficoml
in
arpl
dec
icebp
and
jle
jbe
or
imul
lea
mov
pushf
pop
int3
inc
pop
je
mov
add
sub
je
ret
int
add
add
xchg
adc
stos
movsl
pop
mov
repz
or
iret
xor
push
je
inc
loopne
push
icebp
ret
outsl
mov
pop
outsl
stos
lea
lods
imul
adc
popa
outsb
cmp
sbb
inc
mov
enter
stos
jmp
dec
jbe
outsb
enter
cltd
cmp
jecxz
addb
mov
notl
add
mov
in
pop
cmpsl
adc
push
jecxz
jns
sbb
adc
add
and
add
or
addl
or
cmp
xchg
sar
xor
inc
mov
mov
mov
fs
mov
jb
adc
hlt
ror
mov
lds
push
sbb
inc
cmpsl
mov
jl
pop
push
sub
push
fists
dec
xor
jg
inc
dec
mov
push
dec
enter
sub
arpl
cmp
rcll
loopne
jb
and
xchg
and
adc
iret
xor
fadds
xor
xchg
or
scas
sub
lods
mov
xor
stc
pop
mov
adcl
dec
jmp
dec
xor
lods
mov
pop
inc
cli
jb
fcoms
dec
dec
cmp
pop
pop
jg
pop
neg
pop
add
je
mov
or
iret
pop
push
mov
sub
dec
push
pop
or
jle
pushf
or
js
imulb
push
push
and
dec
pop
lret
or
mov
mov
dec
repz
loopne
pop
xor
stos
dec
pusha
mov
inc
mov
aad
js
fdivrl
jmp
inc
xlat
mov
int
aam
pop
ficoms
ds
cmp
cmp
xchg
je
out
mov
xor
movsl
ljmp
jg
imul
ror
mov
xor
in
jl
lcall
sarl
out
out
loope
and
dec
mov
jmp
lock
push
inc
int3
push
das
pop
outsl
adc
in
sbb
out
push
jne
cpuid
xchg
mov
lahf
dec
sub
rcr
add
ret
pop
insl
and
sub
or
pop
cmpsb
push
cmpb
cmp
outsl
pop
jg
jno
cltd
out
pusha
gs
inc
repz
inc
mov
xchg
into
ror
sbb
sbb
mov
idivb
jnp
addr16
js
inc
das
jle
mov
ret
call
test
push
ret
mov
movsl
mov
mov
leave
inc
xchg
in
or
popf
aaa
mov
push
adc
sti
mov
and
shlb
in
and
aad
adc
cmpsb
xlat
mov
lret
int
loopne
out
push
xor
add
add
xchg
push
add
sub
je
lods
mov
and
sbb
int3
mov
xchg
xchg
jne
xchg
insb
sbb
stos
test
mov
jno
lret
nop
push
jnp
xlat
shll
xchg
je
std
push
and
pop
test
inc
hlt
cmp
add
dec
dec
icebp
mov
jp
clc
or
add
leave
xorb
addr16
and
fstpt
mov
xchg
pop
std
add
xor
aam
mov
sbb
or
pop
adc
pop
in
xchg
or
push
into
pop
sbb
sbb
and
or
pop
push
clc
je
jle
arpl
inc
jb
test
jp
jnp
xor
inc
addb
pop
imul
mov
jo
push
sbb
fcmove
jg
sarl
cmpsb
pushw
xchg
and
mov
pop
or
mov
gs
cmpsb
movsl
mov
pop
clc
or
mov
sbb
nop
or
cmp
jne
loopne
fwait
push
popa
mov
xchg
jp
pop
jecxz
cmp
ljmp
mov
dec
inc
sbb
imul
push
adc
xchg
jo
adc
add
adc
mov
xchg
push
cmp
scas
fnstsw
rol
inc
sbb
pushf
xor
fnstcw
enter
mov
imul
sbb
add
sarb
jmp
test
jne
js
mov
push
pop
je
aas
inc
push
ror
cld
data16
mov
cmp
clc
jne
in
je
js
aas
add
push
test
xor
mov
test
and
incl
mov
dec
popa
xchg
mov
mov
dec
lods
test
aam
adc
pop
push
sahf
push
js
popf
stc
bound
mov
dec
push
xchg
addb
fcompl
dec
mov
cmp
ret
sarl
mov
cmp
daa
pop
mov
dec
loop
out
mov
add
pop
mov
sub
cltd
test
aam
xorl
rcrl
ljmp
stc
sbb
repz
outsb
sbb
test
jmp
and
add
sub
ds
daa
add
in
lcall
jnp
shll
jecxz
gs
sub
inc
repnz
cmp
pop
inc
in
orb
ss
sbb
in
inc
mov
dec
ret
mov
fldt
jae
dec
inc
enter
and
aad
add
lods
out
mov
cmpsb
mov
cmc
adc
mov
imull
sbb
nop
push
enter
push
sbb
shl
lds
inc
jne,pt
xor
jo
push
lret
add
loopne
mov
lea
nop
test
push
and
aad
cmpsl
and
mov
call
push
or
cwtl
mov
fmul
xor
jne
jo
in
and
mov
push
and
push
mov
xchg
sub
or
add
push
and
push
push
stos
in
subl
add
arpl
push
mov
pop
mov
nop
pusha
mov
lret
sbb
mov
or
bndstx
xchg
in
fisttpl
ficoml
and
push
add
fwait
jecxz
jae
pop
pop
mov
test
push
xchg
xchg
sub
aas
ljmp
xchg
pop
pop
lds
add
mov
mov
mov
cmpsb
sahf
sub
clc
mov
mov
add
inc
enter
ret
mov
jno
ja
mov
dec
mov
xchg
mov
mov
cmc
and
loop
fidivs
shr
lods
and
push
xor
movl
ja
or
xchg
xchg
ja
aam
rcrb
mov
mov
les
es
loopne
clc
fs
mov
mov
aas
test
ror
mov
push
jg
push
inc
jae
test
inc
jp
ljmp
fists
push
and
ds
pushf
aam
add
sbb
test
sbbl
dec
or
xchg
les
dec
loop
xor
out
sbb
or
push
push
xchg
mov
pushf
or
sub
cmpsb
ret
xchg
cltd
out
and
dec
inc
pushf
fucomi
or
cmpsl
mov
push
scas
sbb
sub
movsl
pop
xchg
repz
jns
je
into
push
cltd
dec
aaa
push
inc
or
mov
scas
sub
test
in
cltd
xchg
lock
loop
xchg
cld
lods
in
cltd
sbb
jae
sbb
imul
sbb
arpl
inc
dec
fstsw
inc
mov
int3
xchg
fdivp
xchg
mov
jae
pop
cmp
mov
lds
mov
sub
cmp
dec
arpl
fldcw
leave
movsb
and
sub
repz
mov
jl
add
or
stos
sbb
movsb
cmp
lret
outsl
mov
and
fmuls
ja
mov
sub
adc
in
jns
call
xor
xchg
cmp
jb
xor
nop
cmc
ja
fistl
aad
sbb
sbb
es
movsl
jp
and
lods
stc
jecxz
roll
push
lds
ret
divl
mov
imul
cmp
cmp
jae
sub
ljmp
loope
jmp
push
imul
bound
mov
and
dec
pop
test
test
inc
movsb
lods
xchg
mov
sbb
out
cs
cmp
and
pop
test
fsubrl
scas
rclb
mov
cmp
data16
pop
adc
pop
movsl
sub
aas
das
or
sbb
cld
or
xor
xorl
mov
xor
pop
repz
test
cwtl
mov
gs
gs
xchg
mov
stc
jecxz
fstpt
cmp
rcl
clc
cmp
out
push
imul
and
lock
insb
clc
sbb
out
xchg
test
jmp
sub
add
cs
jno,pn
sbb
cltd
data16
jmp
inc
inc
jbe
xor
popf
nop
outsl
inc
cmc
xor
dec
xchg
cmp
cs
cmpsb
int
rcll
push
out
roll
out
xchg
test
int
jp
cmp
popf
jnp
lcall
lret
push
movsb
xor
xchg
pop
cmp
test
outsl
inc
add
imul
or
sub
sbb
jge
or
cmpsl
jp
mov
stos
push
or
andl
adc
push
add
orb
adc
xorl
shl
sbb
call
cmpsl
lods
cmpsl
dec
sub
mov
imull
pop
pop
cs
adc
push
out
cmp
sub
das
out
cltd
jae
push
and
xchg
pop
sahf
cmpsl
jp
pop
dec
cmpsb
lods
cmpsl
adc
cmpsb
ljmp
adc
adc
sub
cs
es
cmp
mov
out
push
jl
inc
enter
or
jle
cmp
adc
sbb
pop
sahf
mov
mov
testl
mov
jo
mov
xchg
pop
fistps
stos
je
pop
sub
lock
int3
sbb
popf
dec
mov
test
mov
lods
fildl
sbb
cltd
adc
lock
test
dec
into
mov
pop
sar
out
out
inc
jp
imul
mov
mov
add
and
shll
rorl
std
mov
jmp
ret
sub
fnstcw
js
mov
mov
test
test
and
xor
enter
cld
es
outsl
arpl
jecxz
jne
jb
mov
adc
lods
sub
mov
test
fmuls
mov
mov
xor
jno
rcrl
cmp
rep
popf
std
into
test
addr16
cmpsl
cmp
loop
lcall
inc
shrl
jg
jns
fwait
pop
jb
int
bound
in
pop
pop
add
jnp
xacquire
push
mov
incl
push
pop
mov
or
and
mov
loop
cmp
cli
or
lret
cmp
movsl
pop
mov
sub
inc
iret
lock
les
je
in
add
adc
divb
fstl
add
jbe
imull
add
lret
jecxz
mov
add
push
cmpsb
bound
mov
lret
imul
adc
and
and
mov
loope
xchg
cmc
dec
cmp
bound
mov
inc
aas
cmp
loop
aaa
pop
mov
adc
pop
mov
inc
jl,pn
dec
mov
lds
insb
mov
add
lcall
mov
shl
xchg
jae
cmpsb
out
flds
test
fdivl
bnd
fs
je
sub
pop
in
inc
fstpl
cmpsb
loop
or
jno
mov
dec
jle
push
jp
loop
enter
inc
mov
mov
nop
movsb
daa
fdivs
fdiv
xchg
fsubl
jno
fistpl
xchg
repz
adc
jmp
push
cwtl
xor
adc
dec
jp
jo
shrb
int
mov
adc
push
fisubs
pop
pop
outsb
shrl
clc
mov
jge
movsl
add
mov
aaa
js
stc
ret
das
cmp
popa
push
jne
xchg
and
dec
out
add
inc
iret
mov
insl
pop
mov
adc
jbe
sbb
stos
mov
or
rcrb
xchg
pop
imul
cld
jl
mov
jnp
mov
and
cmp
sub
xor
loopne
cwtl
push
in
mov
lds
inc
pop
sub
aaa
inc
pop
xor
sarb
lea
pop
cld
mov
in
jp
cwtl
jno
jl
stos
mov
daa
adc
loope
lods
sarl
aas
lret
leave
gs
lea
mov
jmp
inc
add
push
push
sub
das
mov
adc
call
and
xor
cmp
xor
lret
cs
add
push
pop
xchg
and
adc
push
aam
add
pop
leave
test
cmc
testl
bound
mov
mov
sbb
fisttpll
subl
inc
jmp
sub
test
shll
int
push
incl
push
jae
aaa
out
mov
adc
pop
hlt
bound
inc
icebp
fsubrs
and
shrd
push
mov
cli
push
xor
push
stos
add
xchg
mov
sub
js
adc
fisttpl
inc
mov
cmp
xor
xchg
cmpl
cmpb
adc
aam
pop
fsubs
xorl
mov
aas
rorl
adc
mov
mov
arpl
or
movsb
cs
out
or
fimull
rcrl
jno
fsubr
dec
rorb
lcall
lods
mov
enter
mov
cmp
cmp
cli
in
fs
push
sbb
adc
mov
and
sub
mov
jno
insl
into
sti
dec
inc
sar
cli
inc
cmpsl
imul
push
pop
mov
pusha
out
and
mov
inc
movsl
cmp
adc
mov
fbld
test
addl
clc
pop
dec
test
lcall
jo
insl
fnsave
xlat
lods
adc
or
dec
mov
xchg
in
push
dec
cltd
and
mov
arpl
in
std
xchg
addr16
jno
and
and
and
inc
pushf
jecxz
dec
xchg
mov
nop
adc
lcall
push
inc
push
popa
cvtps2pd
jo
stc
stos
aas
data16
sub
test
ss
jo
fistl
test
pop
mov
xor
loope
repz
subb
xlat
xchg
and
adc
mov
cmp
cmc
dec
pop
adc
insl
adcl
out
xor
hlt
call
dec
mov
mov
push
push
int
out
shrb
es
xchg
add
fwait
cmc
lret
ja
test
pop
and
int
sbb
repnz
subl
sbb
cmp
push
fnstenv
lcall
jbe
mov
nop
dec
sub
push
xchg
cmp
sti
dec
icebp
aas
mov
mov
xchg
mov
setns
xor
shl
mov
fldenv
jb
iret
insb
jp
wbinvd
nop
fs
pop
or
mov
mov
stos
and
loopne
les
xchg
into
dec
cs
mov
arpl
adc
sar
and
sub
add
cwtl
xchg
or
xchg
movsb
push
pop
or
imul
es
lock
add
cmp
jle
jae
cmp
adc
xor
les
cltd
out
test
inc
push
push
cmp
jae
sbb
or
fstpt
fstp
jge
cmp
mov
adc
inc
push
cmp
xchg
and
mov
adc
xor
dec
or
xor
inc
xchg
sub
lods
aas
sub
outsl
lret
mov
lret
mov
lods
mov
shlb
icebp
jae
cmp
adc
testl
pop
cmpsl
sbb
scas
mov
popa
fwait
sbb
cmpsl
cmpsl
in
cmp
xor
dec
sub
inc
push
test
jnp
cmp
cmpsl
adcl
outsl
nop
xor
ss
rep
in
dec
or
popa
cmp
xchg
loopne
xor
test
stos
and
cmpsl
je
pop
inc
movsl
lods
xchg
sti
insl
arpl
xchg
mov
dec
pushf
jmp
pop
or
ljmp
sub
cmp
out
cmp
and
fwait
mov
shl
add
lret
mov
mov
int
dec
bound
outsb
pop
repz
xchg
jecxz
mov
jmp
sbb
mov
scas
icebp
in
jecxz
ja
cli
inc
jae
lret
fsts
clc
mov
push
mov
add
and
cmp
ljmp
in
sbb
loopne
sub
shlb
xor
cmp
rorb
dec
add
ret
mov
sub
jmp
outsb
xchg
jl
push
sti
or
rcrb
dec
test
mov
jmp
sbb
addb
lahf
push
dec
and
lods
sub
fstpl
shr
adc
cmp
xchg
outsl
cs
adc
mov
push
sbb
xchg
ret
jo
push
xlat
sub
aaa
jns
and
addr16
adc
xor
hlt
cli
sbb
or
jno
das
orl
lcall
jno
aad
mov
faddl
and
mov
mov
and
jle
sub
test
movb
xor
cli
and
rcll
mov
sub
das
inc
lcall
in
les
cmp
pop
outsl
pop
mov
cltd
cmp
test
lds
lret
jge
lret
es
mov
inc
xor
fsubs
in
mov
ljmp
gs
add
lret
and
es
arpl
repnz
cmp
or
in
mov
std
scas
imul
ss
lods
stos
frstor
cwtl
ret
dec
jbe
or
mov
stos
push
sti
test
mov
push
cmp
pop
js
mov
dec
shl
cmpsb
movsb
sub
in
aas
cmp
jne
dec
loope
imul
push
xorb
xchg
xorl
xor
push
in
jge
lods
inc
fsubrl
dec
sub
addr16
mov
cli
fcoms
push
inc
xor
iret
int
and
lcall
pop
test
in
mov
pusha
mov
fisubl
jne
bswap
sbb
xchg
jg
fwait
pop
ret
dec
mov
js
sub
mov
xor
xor
sub
xchg
mov
xor
add
je
add
mov
adc
rcrb
scas
stos
mov
mov
jae
shl
fnstcw
shl
fs
pop
in
cmp
sbb
and
xchg
cmp
stos
mov
imul
push
lret
cmp
enter
jmp
loope
mov
js
xchg
inc
insl
mov
mov
push
adc
push
insb
jmp
pop
push
ret
out
push
lret
loop
inc
das
xor
cmp
aam
shll
pop
outsb
jne
rcrb
push
ss
loope
out
push
inc
shrl
sub
inc
xchg
adc
lods
mov
dec
adc
push
pop
and
mov
jmp
divl
iret
push
jae
adc
xor
adc
enter
sub
add
int
jb
or
sarb
xchg
es
sbbb
lahf
fcompl
xor
iret
fiaddl
shrl
adc
push
xchg
lods
jecxz
inc
mov
cmp
dec
clc
js
xor
in
int
pop
in
xlat
mov
adc
in
xchg
add
loopne
sub
adc
ljmp
pop
mov
fwait
lret
into
das
or
iret
jbe
xor
mov
dec
push
pushl
push
sarl
or
xchg
mov
inc
and
or
dec
dec
roll
adc
test
jecxz
lahf
test
mov
pusha
aas
and
pop
or
sub
and
ss
pop
jbe
cwtl
xchg
dec
cmp
jp
popf
int3
int3
and
rcll
scas
fcoms
cmp
add
or
push
xor
pop
shr
push
int
cld
scas
rcrb
inc
jne
xchg
mov
out
mov
shl
xchg
xor
rolb
pop
aas
pushf
dec
psrad
mov
jg
jno
cmp
pop
rorl
push
sub
ret
xchg
and
add
mov
mov
pop
lahf
add
xor
sbb
sub
lret
inc
fsin
sbbb
xchg
outsb
cli
sub
mov
lods
cmp
xor
sbb
fisubs
cmp
stos
sti
sub
fldenv
and
sub
lock
push
mov
xchg
inc
stos
xchg
jmp
subb
icebp
jnp
imul
in
and
mov
es
jns
xchg
jmp
test
into
and
lahf
pop
std
jae
or
rorl
sbbb
loopne
test
jns
xchg
jb
mov
imul
lock
ficoml
outsb
pop
scas
std
pop
outsl
push
add
push
fdivr
imul
sbb
ljmp
pop
js
sbb
and
mov
push
jbe
mov
add
fwait
cmp
ftst
in
shl
in
test
aad
in
xor
out
sub
es
mov
out
adc
pop
rol
mov
pushf
testb
sbb
stos
add
xor
daa
pop
lcall
xor
ds
out
cli
or
lods
iret
jle
bound
mov
push
repz
lea
repz
inc
fcmovbe
pop
jns
ja
ja
stos
mov
mov
pop
sbb
mov
lret
pop
jns
pop
je
pop
lcall
fmull
dec
fmuls
addr16
mov
loope
push
mov
test
cwtl
ret
enter
addr16
out
andb
iret
jno
notb
xchg
sub
xchg
arpl
and
outsb
sub
sbb
jge
add
test
sub
mov
sbb
mov
xchg
in
aas
jmp
prefetcht1
mov
inc
jmp
push
adc
mov
mov
and
icebp
aaa
jnp
mov
xchg
fidivrs
adc
fwait
movsl
add
loopne
andb
sub
mov
and
test
in
inc
out
inc
pop
push
add
cmpsl
out
dec
icebp
or
mov
cld
sub
push
stos
jae
out
out
lret
fs
lret
cmp
je
lcall
or
ljmp
outsb
movsl
sbb
mov
addl
xchg
loopne
xor
mov
andl
fstp
mov
rep
mov
dec
sbb
loopne
jb
cmp
or
dec
mov
pop
insb
mov
lods
nop
out
orb
push
and
sub
sub
test
fadds
leave
aad
mov
push
sub
xor
aam
nop
cmp
aad
lods
sbb
or
pop
fwait
shr
jg
aaa
push
movsl
push
js
aad
imul
scas
out
cs
sti
lret
sbb
std
ljmp
aam
xor
or
hlt
or
fsubrs
and
enter
cmp
icebp
add
lock
jnp
movsl
adc
add
xchg
mov
movsb
push
stos
andb
out
pop
jno
or
add
fisttpll
in
pop
shr
imul
mov
cmp
cmc
in
call
lods
ss
das
arpl
int3
je
push
ret
jnp
in
push
add
in
andb
stos
or
xor
sub
jge
mov
jmp
and
inc
fsts
cmp
mov
stc
lret
scas
test
mov
ljmp
lahf
cmp
sbb
int
out
jae
int3
adc
test
xor
adc
aad
fsubrs
sub
test
mov
pop
rorl
push
xor
lds
daa
cmp
mov
pop
jecxz
push
push
mov
call
daa
andl
and
cmp
xchg
add
or
icebp
rcrl
mov
les
mov
push
push
xchg
push
es
sbb
pop
cmpsb
add
not
push
xchg
mov
lods
inc
jmp
lods
or
inc
nop
insb
jp
inc
jo
jbe
xor
out
inc
adc
imul
xchg
imul
lds
or
pusha
jb
xchg
stos
mov
or
add
xbegin
test
pop
jae
jne
xchg
gs
sbbl
xorl
into
imul
imul
imul
into
in
jnp
mov
or
popf
mov
dec
xor
cmp
movsb
dec
mov
outsl
jmp
pop
in
pop
js
sub
cmp
xor
xchg
cld
orb
int3
popl
je
xchg
mov
adc
in
fucomip
push
jns
sub
mov
outsl
js
xor
std
icebp
jns
shrl
out
in
inc
into
icebp
push
adc
movsl
mov
iret
add
test
dec
adc
test
jg
hlt
cmp
mov
iret
add
add
and
loopne
mov
mov
dec
push
rol
rclb
sub
shlb
push
enter
into
sbb
mov
cld
sub
add
divl
jae
into
jle
xchg
adc
cmp
sub
dec
lahf
mov
stc
aam
dec
data16
scas
lock
test
xor
stos
mov
pop
iret
mov
add
mov
inc
jb
push
mov
mov
loope
inc
mov
fisubs
clc
pop
fistpl
adc
shlb
fistps
jb
pop
xchg
movsb
mov
mov
lods
sub
push
arpl
xbegin
fdivrs
pop
and
pop
std
and
in
push
or
ja
xchg
shll
sbb
scas
rol
std
loopne
nop
xor
and
push
jae
pop
xor
pop
adc
call
mov
stos
out
dec
dec
push
and
test
outsl
popf
rcrb
mov
dec
pop
mov
daa
addr16
cmp
stos
dec
cli
pop
push
jl
lea
out
mov
inc
lret
fisttpl
dec
scas
es
addl
testb
cmpsb
test
mov
jae
jb
lods
mov
in
aaa
sahf
fstl
push
scas
pop
aad
mov
popf
xchg
insb
inc
push
js
popa
mov
and
cmpsb
call
in
add
mov
dec
inc
lret
jmp
xchg
xchg
cmpsb
sti
movsl
jge
lds
cmp
fwait
cmp
out
xchg
sbb
je
pop
xchg
scas
scas
outsl
adc
insl
sbb
pop
data16
adc
mov
aad
subb
daa
lret
into
inc
sub
daa
xor
imul
insb
add
gs
cld
sbb
or
imul
sahf
mov
movsl
js
ficompl
loop
mov
imull
cmp
jno
add
sub
or
fstps
push
inc
inc
aam
dec
push
mov
lcall
aad
push
sahf
inc
mov
xchg
xchg
sahf
pop
sbb
test
jle
call
dec
sahf
out
push
sbb
pushl
dec
mov
and
into
es
or
and
jle
in
rcrb
lods
inc
rorl
ljmp
daa
sub
mov
outsl
dec
push
js
push
sarb
jb
adc
in
dec
jge
daa
and
je
xchg
cltd
and
sub
ljmp
mov
int3
pop
repz
xchg
xchg
insb
cmp
or
mov
sbb
cli
test
mov
sbb
adc
stos
sahf
push
popa
imul
xchg
push
add
cmp
xor
fildll
pushf
jb
movsb
xor
xchg
sub
jb
sub
mov
push
and
fstpl
jge
cmp
fmull
lea
stos
mov
adc
xchg
cmp
or
push
xor
push
jno
lret
adc
icebp
cmpsb
movsb
add
jp
mov
push
cmp
sbb
sarb
dec
mov
dec
in
add
dec
icebp
xchg
mov
aam
mov
mov
mov
lret
cli
rclb
xor
adc
pop
xchg
dec
std
cmc
pop
scas
jno
cmc
dec
add
push
lcall
sbb
mov
jecxz
pop
cwtl
jae
xor
aaa
loopne
jmp
xor
mov
jbe
ljmp
or
mov
push
xlat
lahf
jo
xor
jnp
dec
or
loop
inc
mov
cmp
nop
add
pushf
mov
xchg
push
insb
pop
neg
dec
in
jmp
adc
sbb
push
push
add
lds
bound
dec
cmp
fnstsw
sti
test
sbb
js
cmpsl
adc
and
je
jo
jno
xchg
in
in
and
je
fmul
add
movb
xchg
jmp
mov
int
xchg
ficomps
push
testb
stc
shrl
mov
mov
cmp
clc
mov
sahf
pusha
mov
push
stos
jbe
ss
dec
imul
lcall
lea
inc
in
mov
add
xchg
iret
fstpt
and
cmp
addl
adc
adc
sbb
lods
push
add
or
ljmp
cmp
dec
inc
nop
lahf
nop
in
int
ja
test
stos
test
loop
or
jns
mov
mov
xchg
in
mov
sahf
test
adc
xor
jnp
xlat
adc
addl
insl
and
cmp
add
fs
int3
pop
xchg
cmpsl
and
adc
add
insl
subb
inc
cwtl
fimull
mov
add
cmp
sbb
push
scas
insl
inc
clc
js
push
test
xchg
push
lods
add
imul
data16
xor
pop
jno
push
cld
mov
lods
xor
sbb
iret
test
aas
push
sbb
push
icebp
adc
cld
popf
imul
in
scas
or
or
push
iret
and
orb
or
jb
xor
les
cmc
lret
gs
fdiv
adc
and
iret
loope
or
push
aas
mov
dec
popa
mov
scas
dec
or
jnp
push
inc
sbb
mov
inc
xchg
pop
cltd
rolb
jno
xor
outsl
mov
dec
ficoms
mov
inc
sub
lret
xchg
mov
pop
data16
shll
sub
shrl
in
xchg
sbb
gs
enter
das
mov
dec
mov
push
fldl
push
stos
mov
jg
add
adc
shld
fildll
inc
loopne
outsl
inc
enter
ret
outsb
push
enter
add
mov
xlat
xchg
inc
popa
js
push
add
dec
mov
mov
cmpsb
mov
and
pop
loopne
std
dec
inc
outsb
dec
dec
stos
add
dec
es
mov
sub
sbb
adc
push
adc
imul
fldt
lods
imul
ds
mov
mov
js
or
mov
in
loope
outsl
lret
or
xor
mov
js
fadds
sbb
push
je
dec
mov
pop
je
and
fs
cmp
lods
shrl
sahf
xchg
aad
lret
jns
scas
jg
mov
cmpsb
inc
mov
addr16
add
jae
test
sub
jl
xor
lods
lret
insl
loopne
pop
imul
outsb
xor
sbb
jns
jp
or
push
jns
push
mov
loop
icebp
aad
lea
push
push
push
sub
aaa
pop
fnstcw
add
jecxz
ja
ljmp
mov
pushf
adc
fmull
mull
jl
or
xchg
cmp
pop
sbb
sti
cmp
xchg
pusha
aad
xchg
or
aad
mov
jecxz
jnp
js
int3
in
sub
and
pop
subb
pusha
pop
sar
sub
sub
pop
lahf
mov
sub
fldcw
das
mov
pop
enter
xor
addr16
stc
xchg
mov
add
fstpt
ror
into
loope
arpl
xor
mov
test
or
rcr
gs
xor
add
das
pop
sahf
or
and
sub
clc
fsubrl
dec
jmp
loopne
rorb
dec
xor
lret
scas
or
lret
sarl
push
jno
xchg
stos
stos
push
sub
ficoml
push
shll
add
dec
dec
fimull
cmp
xchg
push
test
sub
clc
jae
insb
jb
ja
scas
pop
xchg
or
mov
mov
insl
adc
test
push
jae
pop
push
in
jecxz
popa
enter
mov
int
add
jmp
icebp
ret
shll
adc
fisubl
repz
mov
nop
pop
or
xchg
pop
jecxz
popa
insb
jp
mov
xchg
neg
jae
xlat
lret
imul
pop
sahf
and
push
std
and
loop
pop
cmpsb
add
or
sbb
mov
pop
std
adc
inc
inc
ret
mov
or
and
stc
jg
mov
les
push
cwtl
lcall
in
shl
jle
fwait
xor
cmp
or
mov
imul
ret
mov
inc
popf
dec
push
jle
pop
sbb
mov
mov
test
stc
sbb
jno
or
mov
ljmp
xchg
mov
xchg
loopne
mov
imul
bound
push
push
xchg
in
adc
js
mov
or
mov
lret
addr16
dec
inc
add
jmp
push
cmp
ljmp
lods
imul
add
idivl
mov
sbb
add
add
imul
gs
hlt
mov
lcall
inc
lahf
pop
push
sbb
sbb
in
clc
into
std
cmp
lret
cs
test
dec
fcompl
je
es
vprotq
cmp
ret
in
movsl
and
ret
jns
jb
dec
push
movq
out
das
scas
lret
jecxz
out
mov
sbb
push
push
mov
pop
pop
test
xchg
or
out
xchg
daa
mov
out
pop
mov
inc
cld
xor
sbb
jo
jmp
fwait
jmp
adc
inc
das
jmp
dec
fs
insb
pop
push
and
insl
aam
cmp
inc
adc
popf
dec
sbb
test
out
jb
cmpsb
dec
mov
jmp
mov
xchg
cwtl
les
mov
out
cmp
mov
out
jmp
out
movsb
mov
push
sarl
repnz
pop
lock
fscale
imul
xor
add
mov
jbe
mov
push
in
std
loop
mov
adcl
mov
push
repz
pop
or
xor
push
push
push
pop
pop
movsb
jecxz
mov
mov
inc
jp
xchg
outsl
or
push
movsb
inc
int
andl
and
das
jbe
faddl
mov
inc
outsb
jo
xchg
mov
mov
mov
dec
push
aas
jp
cmpsb
jno
dec
jle
aaa
les
add
rcrl
mov
cmp
in
pop
pop
pop
rorl
jno
icebp
sbb
cltd
loope
in
jle
aas
xchg
shlb
mov
xor
sub
mov
push
subl
imul
and
test
lea
shrb
pop
int
mov
jg
jb
push
jmp
or
jae
ret
and
adc
fnstsw
mov
push
push
cmp
std
insl
cmpsb
out
cmp
add
pop
xor
negl
mov
popf
cmp
fsubs
push
inc
es
adc
lcall
xor
jmp
or
or
lahf
push
sub
lret
adc
ja
xchg
xchg
test
repz
popa
cmp
sub
xor
xor
jge
sbb
push
mov
in
aam
ljmp
pop
mov
cmp
nop
pop
std
icebp
jno
shrl
xlat
jp
inc
movl
fs
add
push
pop
cmp
lods
fidivrs
dec
movsb
cwtl
enter
pop
test
fcoms
nop
inc
enter
mov
adc
add
in
add
cwtl
jl
mov
xchg
pushl
sub
addr16
or
ss
jne
add
sbb
outsb
mov
inc
mov
das
push
jo
jns
dec
das
adc
popf
mov
fisttpl
adc
mov
stc
xchg
jb
test
fdivr
imul
push
fstpt
inc
cmp
dec
fadds
rolb
std
push
or
adcb
cmp
jae
xor
ret
xchg
adc
std
xor
mov
ja
mov
fdivrl
push
outsl
push
jno
mov
and
cmpsb
inc
push
les
and
pop
imul
aam
dec
jo
mov
out
lret
test
rolb
test
in
movsl
daa
or
mov
imul
xchg
and
pop
or
push
inc
std
mov
pushf
pop
inc
add
and
daa
arpl
lock
mov
xchg
cmp
dec
jle
mov
sbb
sarb
sub
out
lahf
stos
test
jge
lahf
add
mov
scas
in
add
orb
loope
in
iret
or
fnstenv
pop
outsl
mov
sti
lods
mov
repz
loope
aas
in
loopne
or
sbb
mov
loope
mov
and
xchg
xlat
pop
jno
cmp
dec
sahf
stos
add
jb
fs
cmp
cmpsb
cmp
xorb
jge
add
jmp
push
repz
xor
loop
and
ss
inc
lock
sbb
mov
dec
imul
data16
in
mov
insl
mov
gs
ljmp
outsl
dec
pop
push
int3
cwtl
mov
fwait
mov
les
fs
fdivs
push
push
cmp
imul
and
xor
fidivl
mov
xchg
cmp
inc
movl
push
pop
and
xor
cwtl
mov
sbb
push
lods
sub
adc
fwait
push
movl
pop
cld
out
jb
xchg
or
lret
mov
add
test
fidivl
push
mov
fstpl
dec
js
dec
xlat
test
and
aam
cwtl
repnz
gs
sbb
or
lret
push
mov
or
xchg
add
jg
xchg
mov
les
cld
je
inc
xlat
dec
shll
add
or
pop
insb
pop
inc
add
mov
push
cmp
leave
jb
adc
inc
mov
in
js
fcmovu
pop
repnz
jbe
lds
lret
lock
cwtl
out
ja
inc
ficompl
sbb
push
jecxz
call
jmp
jecxz
push
or
push
push
dec
cli
inc
sbb
fcoms
jecxz
jb
xchg
popa
lret
scas
aaa
fbld
mov
adc
mov
cltd
leave
dec
or
mov
ficomps
jb
xchg
xchg
dec
mov
cmp
sti
xchg
adc
cltd
js
addl
lret
mov
mov
jmp
push
shr
sbb
xchg
and
or
mov
push
dec
ja
stc
sub
arpl
mov
sub
xchg
cmpsl
jl
cld
lret
scas
ss
fisubl
in
jp
xlat
and
in
popa
fwait
push
cmp
pop
cltd
in
movsl
push
dec
dec
push
arpl
sbb
xlat
pop
daa
fdivl
push
and
xchg
xchg
les
xchg
stos
sub
xchg
test
jae
add
push
jmp
loopne
outsb
or
jle
jg
push
and
pop
mov
mov
cmp
test
mov
xor
nop
pop
or
imul
jge
push
in
xor
xchg
pop
call
aas
inc
sub
popa
cmp
lods
fsubrs
fsts
push
lea
roll
jb
mov
lahf
cld
ror
loopne
xlat
push
out
in
add
jp
cmp
lahf
clc
push
fstpl
jb
fidivl
dec
imul
mov
add
hlt
xlat
sub
int3
xor
les
fs
repz
jnp
ficomps
inc
iret
sub
dec
mov
xchg
je
mov
clc
imul
orb
xor
aas
mov
mov
sti
test
call
shrl
pop
mov
jae
fiadds
sbb
data16
sbb
jp
pushf
insl
jp
mov
fxch
test
mov
cmp
roll
jns
fdivl
movsb
cmp
inc
push
lahf
xor
jmp
pop
pusha
xchg
inc
rorl
cwtl
push
es
rcrb
xlat
mov
jno
cmp
aaa
mov
test
rclb
aaa
test
mov
and
ljmp
ficoms
movsl
xor
adc
scas
jle
inc
mov
xchg
sbb
fs
bound
imul
call
lretw
fsubr
and
loop
mov
pop
jnp
sbb
cmp
pop
add
xor
mov
imul
push
lea
mov
pop
aaa
in
xchg
imul
popa
adc
pop
jnp
dec
mov
push
in
test
in
daa
mov
xlat
mov
out
test
lahf
mov
cmp
nop
inc
in
out
push
jae
dec
popf
xor
mov
cmp
xor
or
or
cmp
pop
mov
or
add
fwait
cmp
adc
sbb
ret
adc
cs
rcrl
jbe
cmp
jns
mov
dec
adc
gs
mov
stos
jae
mov
push
enter
push
inc
rclb
ja
cmp
outsl
add
fistl
pop
in
daa
xchg
or
fcomip
std
pop
adc
movsl
xchg
out
dec
mov
xor
jecxz
push
add
ja
mov
mov
lea
out
pop
inc
stos
jb
aad
add
dec
lock
cmpsb
out
fcmovnbe
lret
insl
fucomi
out
mov
xor
push
lods
pop
mov
lods
jle
insb
pushf
mov
sbb
adc
or
lea
jne
adc
loope
or
stc
pop
adc
mov
cmp
push
jmp
pop
aas
inc
mov
aam
push
mov
out
jnp
adc
outsb
add
adc
insl
jmp
dec
daa
leave
in
jns
pop
adc
xor
jp
cli
push
loopne
sbb
push
test
push
inc
test
imul
ja
repz
rcll
or
push
push
add
sahf
ds
jp
fcmove
imulb
cmpsl
and
xor
cmp
and
jmp
xchg
das
call
push
mov
xchg
leave
aas
gs
or
jae
dec
and
jp
aad
sub
mov
cmp
sub
cmpsl
and
adc
iret
mov
mov
dec
les
pushf
fnsave
jl
inc
je
addr16
iret
inc
jp
fimull
or
fs
addr16
mov
daa
cmp
and
mov
fwait
and
cmp
add
icebp
jg
das
sub
inc
xchg
ret
xchg
sbb
notb
sub
cld
mov
dec
ficoms
cs
pushf
imul
inc
push
sub
scas
mov
iret
xchg
sub
cmp
nop
inc
jns
mov
mov
cltd
lret
mov
mov
sahf
jle
xor
xor
out
jb
out
push
cmpb
pmulhw
stos
push
push
push
scas
mov
dec
inc
jp
dec
cmp
cmp
lahf
icebp
adc
mov
adc
jbe
add
sbb
hlt
cmp
inc
xor
cmp
pop
xchg
adc
fmuls
xchg
cmp
mov
enter
adc
adc
or
push
loop
add
adc
mov
pop
jecxz
mov
pop
inc
mov
scas
xchg
out
insl
push
fcmovu
cmpsb
xchg
lds
xchg
inc
in
mov
iret
dec
dec
push
out
push
xchg
jbe
inc
dec
adc
jge
es
loope
ret
movb
ret
idiv
xchg
mov
and
xchg
dec
inc
add
sub
push
imul
jp
cmpsb
jle
stos
in
repnz
aad
sub
popa
xchg
fldt
mov
dec
pop
adc
daa
je
sbb
movsl
std
jnp
xor
test
and
ljmp
fidivrs
negl
outsb
rcll
les
sarl
adc
mov
lahf
outsb
mov
pusha
adcl
stc
inc
mov
ds
adc
sahf
sub
xchg
mov
mov
rclb
cmp
xchg
fdivr
mov
xorb
adc
stc
mov
add
xchg
aam
ret
xchg
xchg
xchg
dec
inc
jbe
das
jecxz
mov
cmpsb
out
mov
fwait
inc
and
mov
call
out
test
into
test
cwtl
push
cltd
mov
out
inc
and
inc
imul
inc
fs
mov
xchg
cmp
or
push
outsl
adc
mov
cmpsb
and
cld
aas
hlt
and
add
adc
les
dec
add
jno
sbb
dec
sbb
in
and
sub
call
mov
adcb
dec
call
imul
jns
adc
lock
or
dec
sub
mov
ljmp
test
in
fnstcw
int3
sahf
int
sub
lahf
or
mov
into
addl
push
or
in
push
dec
fs
fcoml
mov
mov
and
imul
jb
jg
mov
xchg
repnz
ss
addr16
cwtl
dec
inc
xchg
mov
cmovns
jge
xchg
xchg
mov
and
push
dec
cwtl
inc
xchg
aam
rolb
sbb
mov
push
pop
inc
push
lret
mov
stc
jno
int3
jmp
xchg
add
sub
jb
mov
or
cld
jno
ror
pushw
or
aad
pushf
jg
mov
sqrtps
clc
cmp
mov
xorl
out
out
inc
inc
cld
fcomi
shll
cs
ja
or
ss
push
cmp
push
sahf
mov
lds
xor
imul
sbb
push
js
stos
pop
sbb
adc
int
repnz
sub
int3
adc
xchg
inc
push
sbb
and
xchg
and
clc
xor
enter
pop
loop
cmpsl
clc
lods
push
sti
sbb
pusha
stos
and
xchg
add
sti
xchg
push
imul
cmp
pop
aaa
lret
sbb
call
lock
roll
aaa
test
pop
dec
jno
pop
popa
sub
dec
outsb
cmp
inc
mov
adc
adc
sbb
test
and
test
mov
outsl
jmp
fucomip
push
push
adc
outsb
inc
mov
xchg
call
movsb
push
sub
adcb
aam
and
add
gs
and
sub
lahf
je
xor
push
adc
pop
aas
push
repnz
popa
xchg
pop
pop
lahf
out
xor
push
sbb
stos
lds
aas
gs
push
ds
in
cmc
or
test
xchg
jl
dec
daa
dec
jnp
jp
mov
xchg
cmpsb
xor
xor
and
mov
ss
and
pop
add
adc
sbb
push
lret
mov
jae
cmp
fstl
and
and
sbb
fs
fldl
and
je
xor
cwtl
sahf
jge
in
inc
push
dec
xchg
dec
xchg
lds
jmp
sahf
int3
xchg
out
pop
push
inc
fiadds
jecxz
adc
cmpl
popf
fyl2x
inc
shrb
aas
lock
mov
pop
hlt
dec
mov
xchg
mov
or
pop
dec
movsl
sub
sub
jns
nop
pop
and
es
jae
push
dec
bound
dec
enter
mov
xor
push
rclb
pop
mov
xchg
inc
lret
and
cli
push
outsl
leave
pop
cwtl
xor
push
fcomps
lahf
add
sbb
jmp
dec
cmp
or
int
movsl
lret
dec
adc
outsb
add
stc
shlb
das
cmpsl
imul
fimuls
ss
xchg
lret
inc
mov
lods
out
xor
imul
xchg
pop
out
ja
arpl
mov
jnp,pt
fadd
inc
and
adc
rcrl
sbb
jae
addb
fnsave
xchg
xchg
cmp
push
daa
cltd
jl
lods
add
mov
fisttpl
jp
push
shlb
aaa
sbb
das
push
arpl
jns
pop
je
cli
je
les
cmpsl
sbb
and
insb
mov
stos
push
mov
jp
loop
movsb
imul
push
or
xchg
push
in
adc
test
insl
cmp
adc
andb
xchg
dec
cmc
loope
inc
mov
fldcw
lods
clc
ja
push
inc
push
test
push
mov
mov
fwait
mov
mov
lret
pop
sti
cmp
int3
cmp
dec
out
pop
jnp
in
push
lcall
inc
sahf
xor
jp
push
cmp
lret
push
jp
xor
sub
mov
mov
mov
std
sahf
jnp
js
pop
in
out
lcall
ss
inc
jnp
or
int
stc
imul
ffreep
outsl
xchg
xor
push
addl
scas
cli
pop
pop
jg
lea
cwtl
test
int3
fwait
cwtl
cli
dec
sub
push
incb
add
leave
enter
sub
and
aaa
mov
aaa
imul
xchg
ss
mov
js
push
push
or
cmp
mov
push
or
xchg
imul
pop
pop
sbb
in
jl
mov
or
push
add
cmp
add
fistps
add
or
out
mov
sbb
jae
out
sub
jnp
push
pop
pop
inc
push
mov
jmp
scas
es
mov
je
push
xor
cmc
lea
mov
insb
lea
bound
xor
repnz
xor
lods
std
sub
negb
inc
ds
xchg
into
dec
xlat
sub
jo
cmp
sub
mov
xlat
push
lahf
outsl
shll
adc
loopne
aas
out
xchg
or
add
rcrl
xchg
pushf
pop
pop
and
jecxz
push
jl
fnstcw
mov
jae
cmp
ss
adc
std
sub
and
das
adc
or
mov
pop
push
push
mov
mov
fisubrs
or
jp
fcompl
imul
icebp
adc
hlt
cli
dec
or
sbb
insl
mul
cmp
sbb
sbb
or
inc
adc
jmp
xor
clc
clc
movsb
adc
jno
stos
add
cmp
les
cmpsl
xchg
dec
add
stc
and
pop
sub
in
popf
sahf
pushf
push
negl
and
or
push
mov
push
adc
add
mov
iret
adc
push
call
jmp
cmc
lea
push
pop
push
jg
or
ja
in
add
push
inc
addr16
popf
jno
pusha
mov
lret
arpl
mov
mov
push
in
or
test
lret
arpl
mov
sbb
mov
lds
fdiv
scas
sub
lods
mov
mov
and
in
mov
add
mov
add
mov
cmc
cltd
je
sbb
adc
fstpl
aam
xlat
rsqrtps
clc
mov
mov
imul
fsubrl
jbe
xorb
nop
jecxz
push
xchg
subb
add
faddl
mov
inc
jbe
mov
test
push
xchg
cmp
fistpl
mov
jnp
in
mov
and
push
and
add
mov
sbb
cmp
aas
sub
mov
inc
push
xorb
fadds
outsb
enter
pop
pusha
out
sar
dec
inc
adc
jns
int
hlt
mov
push
lret
adc
test
xchg
add
loope
clc
xlat
pop
mov
popf
mov
mov
adc
add
mov
and
jns
xchg
ret
jbe
mov
push
dec
stc
push
inc
lret
clc
push
push
iret
ret
sbb
orl
cmp
popf
je
js
in
cmpsl
mov
xor
shll
cltd
cmc
in
shr
push
lods
sahf
out
xchg
cmc
mov
pop
inc
outsl
jg
ss
adc
aaa
mov
sbb
dec
out
cmp
sbb
aas
insl
pusha
ljmp
fucomip
cmc
jge
test
out
jp
addr16
dec
fwait
sub
daa
mov
scas
push
das
testl
imul
mov
shlb
aam
ret
loopne
inc
mov
gs
ret
inc
push
xchg
pop
mov
sub
stos
and
aaa
in
sbb
lods
mov
adc
jmp
dec
inc
dec
testb
jp
loopne
dec
pop
jns
xchg
add
jns
xchg
sti
addr16
fwait
sub
lock
pop
push
lcall
subl
and
cli
insb
aam
pop
cmc
cmp
mov
pusha
popf
add
fstp
int
mov
xlat
mov
test
call
mov
out
push
imul
mov
push
ret
and
and
and
outsb
outsb
mov
lea
push
and
xchg
or
pop
cltd
cmp
bswap
jle
push
add
daa
in
stc
popf
shrb
cmp
leave
mov
mov
std
fdivr
int
out
repnz
int
cmp
pop
in
xchg
push
cmp
inc
jb
adc
or
jo
icebp
mov
lahf
fldl
mov
dec
fmulp
negl
and
sti
notb
add
out
mov
and
mov
scas
ds
xchg
jp
sbb
in
ret
dec
repnz
xor
neg
xlat
push
dec
adc
jl
shlb
fs
xor
rorb
shrb
stc
daa
imul
jnp
cs
ret
push
test
push
pop
shr
je
lcall
mov
fldl
nop
cmpsb
aad
xlat
mov
ja
popl
in
xchg
mov
in
xchg
cmp
cmpsb
xor
out
xchg
push
or
mov
movsl
ljmp
mov
sbb
fistpl
xor
jg
rcl
daa
rcl
lcall
mov
or
lods
loopne
repz
cmp
inc
and
xor
add
pop
push
or
andb
fidivs
cli
pop
pushf
lret
dec
fdivrl
rolb
popf
xor
fwait
cwtl
inc
sub
mov
das
test
insl
push
xor
dec
add
mov
mov
repnz
mov
enter
cs
pop
cmovne
mov
cmp
sti
outsb
push
mov
cmp
mov
cmp
mov
mov
dec
inc
test
movsl
push
lret
sub
imul
pop
mov
fsts
out
mov
add
enter
in
clc
sbb
into
sbb
out
fcoms
lods
mov
jo
mov
adc
xlat
cmp
int
aas
mov
in
sahf
mov
aaa
dec
fdivl
mov
int
lahf
insb
dec
cmpsl
mov
mov
test
in
cmp
xchg
jbe
dec
movsl
xor
sub
cltd
dec
int3
or
nop
testl
jecxz
aas
and
jbe
mov
mull
jbe
pushf
test
cmp
push
or
testb
xor
inc
cmp
fwait
in
int3
aaa
or
adc
pop
mov
push
lods
mov
out
popf
std
sbb
leave
jb
fisttpl
cmp
push
jge
jo
dec
cmp
xchg
xor
ds
outsl
add
outsb
loope
inc
and
cli
rorl
push
mov
jb
daa
mov
fisttpl
jp
mov
ss
sub
push
xchg
jp
mov
enter
mov
cmp
aad
jno
sub
fidivs
out
cmc
mov
xlat
or
dec
inc
out
mov
adc
in
fistpll
sti
repz
pop
and
sar
pop
les
scas
adc
fcmovne
sub
inc
xchg
sbb
aaa
sub
and
mov
enter
aas
sbb
xor
dec
xchg
das
dec
pop
testb
xor
fisttpll
xor
iret
xchg
icebp
into
jnp
ficompl
cmpsl
xor
sub
and
movsl
lods
addb
in
jmp
sub
fisttpl
xchg
mov
cwtl
xchg
adc
out
dec
repnz
push
xor
sub
adc
pop
cld
addr16
jne
test
xor
or
shl
mov
add
cmpsb
mov
jle
stc
stos
js
cltd
adc
xchg
imul
cmpsl
in
or
cltd
stos
inc
decb
or
out
xor
movsb
dec
lcall
pop
xchg
pusha
test
xor
xorb
xadd
ret
outsl
xchg
arpl
cmp
sarl
popf
std
add
xor
leave
cmpxchg
cld
movb
jns
mov
addr16
and
int
pop
in
out
gs
xor
adc
sbb
aad
popf
lahf
push
pop
cmpsb
xchg
and
sbb
gs
mov
pusha
leavew
lret
imul
add
pop
mov
fistpll
mov
or
inc
sbb
fldcw
push
inc
push
push
push
ss
mov
dec
push
mov
sub
out
xchg
jbe
mov
out
fnstenv
inc
add
lock
sub
in
mov
jne
in
sub
cmp
lret
or
fmulp
and
out
popa
in
scas
bswap
outsl
push
leave
xchg
fadds
test
sbb
push
inc
lods
pop
sub
aad
cmp
lods
sub
pushaw
adc
cmp
push
outsb
add
gs
adc
and
push
inc
rcr
push
mov
iret
ret
aas
mov
jo
add
xchg
push
stc
push
jecxz
xor
xchg
repnz
mov
push
pop
push
or
mov
popf
lret
push
rcr
push
fisubs
scas
adc
cli
hlt
sub
mov
mov
xlat
aad
fistpl
pop
push
xorl
mov
xchg
xchg
lahf
lds
sub
stos
sar
in
xor
mov
sub
jle
push
jg
inc
frstor
rclb
and
rorb
imul
mov
mov
xor
icebp
sub
fimuls
add
pop
in
sbb
js
es
and
mov
jmp
inc
data16
hlt
inc
add
insl
insl
outsb
ljmp
inc
es
dec
sbb
inc
push
push
adc
jb
mov
cmp
add
sub
mov
pop
inc
mov
mov
cmp
pushl
das
and
jge
insb
sbb
and
cmp
or
pop
mov
push
int3
mov
imul
pusha
int
mov
xor
rorl
push
dec
sbb
jp
sub
inc
dec
fisubrl
aaa
jge
pop
jmp
adc
sub
adc
fwait
fwait
stos
sbb
cmp
mov
and
push
mov
out
push
jne
pop
dec
cmpsb
inc
pop
adc
jnp
jmp
pop
mov
dec
int
jle
or
andb
negb
popf
int3
aad
clc
loopne,pn
ljmp
aam
and
adc
pop
lds
mov
popa
jmp
xchg
pop
mov
icebp
mov
sub
inc
adcb
inc
xor
icebp
inc
outsb
enter
cli
imul
or
inc
imul
insl
mov
unpckhps
icebp
pushf
mov
js
js
adc
ds
pop
cld
out
popa
mov
pop
and
sbb
dec
aam
test
mov
addr16
hlt
xor
sub
imul
cmp
xor
adcb
jmp
mov
out
add
mov
xchg
inc
out
push
sbb
in
inc
cltd
dec
int
in
lret
in
mov
lds
jle
or
add
movsl
mov
mov
adc
jbe
jns
mov
fbld
dec
push
sbb
dec
stc
dec
xor
loopne
das
dec
or
inc
inc
out
and
enter
mov
adc
in
sub
jno
pushf
icebp
xchg
int
sub
and
call
sub
loopne
fsubrp
outsl
sbb
xor
mov
adc
sub
test
cmp
xchg
in
cltd
and
mov
add
gs
fnstsw
jne
jnp
sub
in
rcrl
xor
xchg
daa
roll
pushf
mov
push
testl
arpl
xchg
outsb
inc
insb
push
pushf
mov
mov
cs
pop
cmp
lahf
mov
xchg
subl
jbe
jl
or
popa
push
dec
xor
and
push
in
scas
push
pushf
or
lock
mov
cld
mov
cld
cmp
mov
fdivs
cmp
mov
fdivl
test
mov
add
daa
mov
sbb
loopne
insl
jecxz
jge
fsubs
insl
adc
imul
psrlq
ja
xchg
add
inc
xlat
lret
add
sub
test
adc
or
push
add
cmc
jne
bound
or
cmpsl
das
mov
fdivp
iret
test
dec
pop
jns
dec
leave
mov
fwait
mov
jge
negl
mov
xchg
sbb
dec
shrb
bound
and
stc
push
xchg
ja
pop
jno
xor
xchg
lds
and
xchg
add
shll
call
scas
or
ds
insb
pop
iret
jecxz
push
pushf
xlat
cmp
out
daa
lret
outsb
out
or
jne
jne
jmp
jnp
adc
sbb
in
xchg
push
sub
popa
ja
inc
pop
sbb
push
mov
rcrl
fsubl
dec
mov
mov
sbb
popl
jns
jecxz
icebp
pop
popa
bound
mull
jecxz
scas
push
push
daa
imul
push
cltd
mov
lods
pushf
nop
push
cli
fisubrl
inc
xchg
in
ret
leave
fstpt
cltd
xchg
out
out
push
repz
dec
int3
or
loopne
xor
fmul
add
xchg
sti
sarb
pop
cwtl
pusha
adc
imul
call
lcall
dec
lret
rcrl
jne
pop
push
pop
or
sub
int
stc
outsb
pushf
xor
popl
pop
inc
jg
or
jmp
or
aam
dec
push
ret
pop
inc
sub
sbb
aad
out
stos
repnz
cmp
outsb
xor
insl
xor
mov
cmp
vmread
add
mov
dec
sub
dec
inc
clc
and
xor
out
push
test
std
jbe
cmp
inc
push
adc
cmp
loopne
pop
jae
cld
ss
and
ja
sub
add
enter
dec
xchg
mov
sub
cmp
push
cs
pushl
pop
outsl
and
movb
add
jecxz
shlb
inc
mov
adc
push
hlt
jno
sbb
iret
mov
mov
and
jo
mulps
js
loopne
pop
xor
icebp
mov
imul
add
xor
daa
in
cltd
xchg
cmp
fsubl
popa
inc
ffree
mov
pop
add
push
cmp
shll
sbb
sbb
fcomps
xchg
pushl
aas
add
adc
sub
sbb
into
aas
jle
popa
popf
sbb
inc
jecxz
rcl
jo
cmp
stos
out
ds
je
outsl
testb
xor
gs
cmc
xchg
cltd
jbe
jne
add
fdiv
fisubl
add
call
push
xor
push
lahf
jnp
or
push
dec
bound
xchg
dec
fstps
sbb
sahf
repnz
add
scas
pop
sahf
loopne
aam
cmp
and
test
sub
sub
shll
push
mov
pop
test
popf
lea
imul
sarb
sub
push
dec
fadds
jle
jb
or
inc
sbb
ss
sub
clc
stc
push
aam
mov
or
pop
cmp
lea
jbe
ficompl
fucom
mov
inc
or
dec
add
mov
les
jo
inc
mov
or
inc
mov
and
pop
popf
addr16
out
cmp
mov
test
jno
loopne
xor
addr16
idivl
adc
pop
and
ds
inc
mov
fisttpl
jle
in
sbbb
test
jb
lds
fsub
cmpsl
fxtract
xor
sarb
addr16
xchg
loopne
cmp
cmc
cli
xor
jns
inc
sbb
mov
call
adc
int3
pop
inc
shlb
adc
bswap
stos
add
jae
mov
dec
sub
pop
pop
shrl
or
icebp
loopne
in
in
cmp
mov
dec
rcrb
sub
sub
fcoml
fistps
push
imul
mov
gs
divb
hlt
jmp
sub
xor
out
pusha
call
mov
xchg
mov
lcall
sbb
sahf
pop
sub
es
mov
scas
cli
test
lret
mov
inc
out
mov
inc
stc
test
sbb
sti
lock
mov
std
pop
pop
insb
or
push
adc
rcrb
lahf
loope
ljmp
cmp
outsb
mov
test
cmp
push
cmpl
into
lea
fimuls
test
jb
aaa
int
cmpsl
or
xlat
sub
push
xlat
push
mov
popa
pop
clc
jl
xchg
pusha
ss
adc
cwtl
xor
es
icebp
pop
hlt
clc
mov
fs
adc
mov
sbb
cmpsb
jae
jo
cld
xor
sarl
adcb
test
ds
aad
inc
xor
inc
test
lods
sub
and
subl
cmp
movsl
ja
lods
push
xchg
rcll
or
mov
loope
outsb
repnz
and
ljmp
pushf
clc
in
adc
mov
pop
pusha
xor
stos
jp
pop
sti
mov
loope
test
icebp
cmpsl
nop
in
mov
mov
aas
adc
jmp
leave
mov
je
adc
xor
inc
leave
lahf
es
inc
pop
out
dec
inc
xor
test
cmp
push
ret
stos
jo
lret
sahf
lcall
test
inc
mov
and
jnp
jne
inc
into
sahf
hlt
pop
negl
inc
bound
mov
sub
cmpsb
or
xchg
bound
adcb
xchg
xchg
loopne
lods
push
cli
dec
inc
test
adc
fxtract
jno
jne
addr16
repnz
in
ljmp
pop
jb
loopne
mov
pop
fmull
pushf
sti
adc
or
push
lds
int
int3
dec
popf
cmp
rcrl
into
lret
lret
fdiv
fildl
push
push
sarb
aam
xchg
ja
lods
aaa
sbb
inc
lods
push
mov
outsb
out
shl
inc
dec
fsubs
or
daa
mov
pop
jns
negb
test
mov
cld
inc
jle
ss
je
fnsaves
in
int3
mov
and
fs
pop
imul
hlt
mov
hlt
push
inc
add
pop
outsl
fcoms
mov
adc
mov
mov
adc
pop
addr16
mov
fcoms
ljmp
adc
mov
imulb
js,pt
push
mov
push
mov
mov
bound
pop
xorl
sbb
enter
out
sbb
mov
nop
mov
bound
jno
sub
jecxz
and
sbb
push
jmp
mov
orl
jb
xor
lcall
or
lahf
vrcpps
std
iret
mov
das
sbb
or
insl
mov
jno
xor
lahf
cmc
sub
push
out
dec
aas
cmp
adc
outsb
dec
cld
mov
add
push
stos
inc
xchg
loop
outsl
ss
lret
stos
in
call
mov
into
movsl
les
dec
push
mov
je
jo
dec
add
push
sahf
push
adc
in
mov
testb
pop
dec
sbbb
and
push
in
adc
sbb
call
mov
arpl
jmp
sarl
cmp
mov
push
xor
xchg
pop
adc
inc
test
pop
insb
aaa
shr
test
push
push
xor
mov
mov
cmp
mov
or
inc
jne
stos
outsb
bound
stc
xchg
mov
mov
imul
in
into
lods
sub
mov
les
es
aaa
in
popa
sub
pushf
mov
leave
or
pushf
repz
dec
adc
arpl
dec
jmp
lcall
cmpsl
fnsave
iret
push
xchg
xchg
dec
cmp
xor
fisubrs
into
add
sub
pop
jne
int3
xor
cwtl
rolb
inc
inc
jb
mov
js
and
mov
sbb
notl
popf
orb
pop
push
insb
push
mov
scas
jns
imul
pusha
ja
cwtl
mov
xor
std
sbb
lea
dec
push
test
test
push
or
inc
sbb
lretw
fcmovb
fidivl
sahf
imul
test
jne
dec
test
je
pop
and
movsb
jle
sbb
xchg
pop
lcall
adc
cltd
sbb
cmp
call
mov
push
cwtl
ds
iret
cli
fbstp
lcall
lods
icebp
xchg
fiaddl
fstpt
imul
fs
jbe
sub
xchg
cmp
es
jecxz
pop
cmp
mov
mov
sub
stos
and
dec
decb
repz
lea
stos
rclb
lods
cmp
dec
adc
ja
das
mov
and
mov
dec
xor
adc
inc
sbbb
push
mov
jbe
insl
lret
movsb
cwtl
subl
in
add
cmp
and
dec
dec
mov
mov
push
in
mov
jmp
test
mov
subb
inc
mov
es
or
aad
adc
mov
leave
xor
xchg
fsubrs
lcall
mov
and
xor
adc
lret
in
mov
lahf
sub
xchg
cmpsl
xchg
mov
cmp
adc
fcomi
fstpt
inc
pusha
xchg
lret
outsb
dec
push
bound
adcb
arpl
shll
add
addr16
aad
pusha
ja
mov
adc
out
pop
mov
push
fistpl
ret
fisttps
pusha
lock
out
inc
call
xor
in
cmp
jmpw
mov
sbb
jb
std
out
mov
xchg
jge
xchg
lahf
pop
mov
push
mov
fcoms
fdivs
xchg
push
adc
mov
jae
jp
or
and
jns
notb
and
sbb
stc
push
imul
scas
je
test
les
nop
and
push
sarb
xor
push
mov
cmpsb
andb
cmc
mov
jbe
std
test
movsb
xchg
mov
sub
pmaxub
inc
mov
lret
dec
test
lds
es
mov
pop
fsubrs
sub
mov
sub
aam
sub
and
les
xor
test
data16
sub
or
lahf
pop
subb
xor
adc
enter
or
push
jo
cmpb
shrb
or
sbb
scas
in
test
push
pop
sub
cmp
mov
rorl
addb
xor
insl
ss
jecxz
movsl
lods
mov
in
sub
cwtl
fucomp
mov
rcrl
or
sub
popa
jno
imul
repnz
fcmovb
or
dec
dec
inc
pop
pop
pop
adc
push
pop
sbb
mov
shl
mov
cmp
aaa
cmc
or
pop
dec
imul
sbb
iret
arpl
cmp
aam
or
push
lds
ret
scas
imul
imul
push
xor
loopne
mov
fcomp
dec
lret
dec
mov
add
adc
shll
and
jp
cli
dec
sbb
int3
push
sub
imul
bts
fnsave
les
out
loop
jg
rolb
mov
push
sub
sar
jl
jae
flds
mov
testb
insb
mov
or
int
clc
fnstenv
jge
sub
cmp
jbe
jns
sti
stos
mov
in
add
inc
mov
lods
mov
xchg
mov
sub
jmp
lock
movsb
lahf
sub
inc
add
rcll
dec
clc
mov
idivl
cmp
jge
add
jmp
xor
cmp
sub
fsubrs
mov
jge
xchg
jp
xor
mov
push
jl
inc
jmp
scas
in
xorb
daa
mov
and
sbb
lods
arpl
xor
std
push
test
outsb
xchg
mov
in
dec
insb
push
cmpsb
xchg
adc
repnz
aas
xchg
loopne
fisubl
int3
addb
insl
arpl
imul
pop
pop
and
mov
test
aad
mov
sahf
add
popa
fidivrs
leave
xchg
test
dec
les
pusha
fstpl
iret
cmpsl
aam
cmpsb
jbe
jnp
pop
jnp
jae
push
les
xchg
fwait
stos
push
sub
mov
jp
push
xor
in
sub
mov
lcall
inc
xor
popa
mov
jbe
cmp
inc
dec
mov
sbb
std
or
fisttpl
inc
aad
divb
pop
cwtl
or
dec
hlt
jmp
mov
int3
arpl
cmp
movsl
sub
cmp
mov
sbb
and
ret
cltd
jmp
fldcw
int3
adc
outsb
xchg
push
into
mov
inc
inc
xor
mov
push
xor
ffree
addb
xchg
sbb
clc
mov
or
sbb
jge
jno
or
cs
shl
sbb
enter
inc
ss
push
and
test
test
shll
daa
dec
and
mov
enter
jae
and
les
cmp
mov
dec
sbb
adc
out
lock
jne
push
fildl
jle
add
ret
daa
inc
pop
sbb
inc
add
cmpsl
pop
pop
push
sub
icebp
xor
divl
mov
jge
mov
pop
loopne
mov
cld
mov
sbb
mov
push
push
push
rep
lahf
dec
rep
mov
xchg
sub
dec
jge
aas
xchg
outsl
sbb
xor
cmpsb
or
out
fists
mov
fidivl
dec
repz
movsl
iret
cmp
adc
xchg
add
push
pop
inc
mov
jae
or
lea
add
or
es
outsb
add
leave
scas
test
sbb
and
int3
xchg
ficompl
mov
test
pop
pop
mov
aaa
subb
fiadds
cwtl
lods
out
lret
aam
jb
and
jne
push
lcall
pop
push
cmp
mov
out
mov
jmp
mov
test
out
jbe
or
cmpsb
jmp
fldt
jne
cmp
push
and
and
addr16
xchg
cs
stos
gs
inc
cmp
pop
scas
fwait
je
and
ds
ret
scas
cltd
inc
push
fdivl
or
sub
and
dec
jmp
mov
xchg
call
pop
cmc
jge
ret
jg
xorb
jo
arpl
enter
push
bound
lahf
and
xlat
jae
leave
push
mov
xchg
mov
test
sub
mov
fs
std
push
xchg
clc
mov
movsb
pop
pop
ss
xlat
shll
sbb
cmc
mov
fcompl
lds
sbb
cmp
test
mov
xchg
daa
js
jno
imul
nop
testl
fnstsw
in
and
orl
dec
loop
xor
inc
out
or
lods
shlb
scas
xchg
pusha
cmp
mov
sub
adc
inc
and
pusha
add
inc
pop
jnp
mov
lds
int3
add
popf
sbb
lret
dec
mov
pop
rclb
cs
ds
dec
sti
popf
cmp
mov
mov
sbb
movsb
cmpsl
dec
hlt
mov
out
push
lcall
jmp
and
fldl
add
push
inc
or
cld
jg
jecxz
adc
push
addr16
adc
xor
sbb
int
fists
or
adc
jns
sbb
inc
pop
iret
mov
addl
daa
sub
sbb
mov
rorb
xchg
imul
fwait
mov
mov
and
addl
in
fcomip
test
dec
loop
mov
or
test
inc
lahf
inc
pop
fnstsw
xorb
pop
sbb
dec
scas
aaa
pop
out
imul
fistpl
add
pop
pop
xor
nop
lahf
outsl
push
lcall
xor
cmp
repnz
incl
lds
scas
fwait
mov
mov
shrl
in
mov
cli
inc
jmp
fwait
or
ss
addb
adc
sti
pop
inc
fldt
push
mov
adc
cli
shrl
adc
mov
test
xchg
stos
pop
insb
or
dec
and
pop
and
sbb
mov
jle
xchg
pop
add
lods
cmc
xchg
test
add
data16
stos
xor
fs
adcl
int
or
mov
fnsave
imul
dec
jp
sbb
lea
ret
mov
jle
or
pop
popf
or
jecxz
stc
sbb
scas
je
rolb
mov
cmp
stos
pop
orb
inc
cmpsb
test
pop
lea
cmp
leave
aam
nop
mov
fnstsw
out
xchg
psrld
lods
imul
mov
out
dec
aas
mov
mov
ljmp
test
cmp
fimuls
jnp
mov
inc
cmp
jo
imul
sbb
mov
stc
out
movsb
lahf
xchg
adc
sbb
push
mov
add
mov
pop
add
fdivrl
repz
sub
mov
int3
mov
in
and
sub
and
mov
and
dec
cmp
pushf
xor
inc
iret
shlb
push
ficoms
arpl
pop
mov
jl
daa
test
mov
pop
push
out
scas
std
pushl
sbb
or
into
jb
fcompl
xchg
push
daa
mov
and
sti
mov
pop
xchg
stos
lods
mov
mov
dec
into
dec
and
mov
jnp
jmp
in
xchg
xchg
or
jmp
loope
js
mov
or
adc
aam
sbb
scas
lahf
add
mull
pop
jg
push
addr16
notl
jb
dec
fisubl
push
es
add
pop
push
mov
cld
add
xchg
inc
jns
idivl
lds
xchg
xchg
xchg
shll
not
into
mov
lds
xlat
inc
xchg
mul
lahf
sbb
fs
xor
movsl
leave
mov
sub
or
mov
push
sub
sbb
aaa
mov
iret
xchg
sub
cmp
enter
es
jbe
out
add
testb
pop
scas
and
xchg
das
mov
sbb
loope
ret
lds
xchg
std
add
push
fistpl
movsl
int
dec
rcll
push
sahf
lock
or
into
cltd
addr16
and
and
lea
lods
mov
mov
mov
xor
pop
mov
push
inc
insl
jmp
addr16
pop
inc
icebp
xchg
leave
ss
rcrb
inc
xlat
insl
int
cld
inc
push
into
loope
je
inc
repz
xchg
pop
pop
mov
pop
pusha
lods
dec
push
es
in
outsb
pop
push
mov
lods
mov
adc
mov
push
pop
and
add
push
sahf
jge
setle
scas
outsb
mov
push
adc
subb
je
lock
mov
cs
or
in
je
sub
dec
lods
add
fidivrs
dec
shlb
or
mov
or
mov
ficoms
or
frstor
popa
fisubl
adc
cmp
inc
jo
pop
and
mov
push
xchg
in
repnz
ss
mov
mov
rcrl
pop
sti
xor
mov
fstps
xor
je
mov
sbb
sbb
data16
mov
jo
sbb
mov
movsl
add
mov
sub
or
jne
in
lds
shll
jnp
sarb
or
inc
mov
psubusb
out
or
mov
inc
rcrb
jbe
insl
jp
and
and
pop
popf
in
inc
or
lock
pop
mov
sbb
adcb
xor
push
push
inc
sub
movsb
mov
cmp
scas
jmp
loope
test
jne
mov
imul
jnp
dec
jmp
aam
lcall
sbb
daa
pop
pop
mov
repz
xchg
pop
adc
xor
mov
repz
imul
xchg
lret
mov
fs
popf
lret
sbb
sub
push
mov
shrl
mov
shrb
cmp
out
mov
andl
pop
icebp
out
jg
xchg
icebp
mov
fs
aad
xchg
loope
sub
repnz
cwtl
push
adc
push
mov
lock
xlat
pop
and
hlt
mov
push
dec
sub
in
sbb
adcb
mov
insl
int3
out
fwait
pop
ret
xor
xchg
cmp
icebp
rep
sub
pop
clc
sbb
fs
xlat
test
jne
xor
in
or
dec
jnp
push
das
inc
jae
or
loope
xor
add
or
aad
mov
sbb
jl
mov
fsub
ljmp
jl
xchg
mov
stos
mov
orl
adc
push
cmp
lret
xchg
fucomi
pmaddwd
fnstenv
out
rcrl
repz
jmp
add
gs
ret
pop
daa
sub
or
push
mov
dec
jns
shl
xor
jae
sbb
imul
push
shlb
fldenv
pop
push
jecxz
fsubp
sub
or
cmpsl
mov
sar
adc
and
ss
xchg
stos
inc
adc
repnz
sub
push
scas
pop
pop
rorb
aaa
inc
lea
je
ret
sbbl
add
jno
pop
sbb
arpl
pop
lods
cmpsl
xor
notb
jae
jmp
xchg
lods
cmp
aas
mov
xchg
mov
aad
pop
pop
shll
add
pop
add
nop
push
and
mov
fs
jecxz
sbb
and
adcl
inc
xor
add
imull
mov
and
sbb
jno
add
push
cltd
mov
or
stos
decb
ljmp
xor
pop
mov
imul
or
je
dec
lret
pop
cmp
xor
and
mov
cmpsl
clc
cmp
sbb
pop
pop
cmp
in
sti
push
hlt
inc
cwtl
cmp
sahf
xlat
popf
gs
mov
leave
pusha
inc
pop
xor
mov
and
in
push
add
jo
cmpsb
ret
add
scas
mov
lea
cli
dec
mov
xor
mov
mov
daa
jle
sub
xor
jno
mov
mov
or
test
jne
daa
insb
enter
sub
mov
or
ret
jnp
inc
mov
loopne
in
xchg
rcrl
push
andb
xchg
int3
pop
pop
adc
push
mov
pop
test
mov
mov
sbb
jecxz
push
aaa
addb
ficoms
mov
xchg
mov
jp
pop
push
xlat
push
es
push
scas
loope
cld
lock
popa
fmuls
into
pusha
sbbb
mov
cmp
iret
xchg
cmp
adc
jnp
jnp
stos
mov
pop
fidivs
insb
inc
add
inc
pop
test
fcoms
adc
inc
inc
xor
outsb
dec
aas
and
movsl
fs
sub
dec
push
xorl
mov
test
lods
sub
aam
rcll
push
loope
bound
push
mov
addr16
pop
add
rol
push
cli
push
jmp
sbb
cmp
pop
dec
ja
cmp
inc
jo
loope
ret
out
lods
pop
test
int
jg
sbb
sub
inc
cmp
cltd
push
inc
stos
arpl
mov
imul
fbld
mov
rcl
fists
or
mov
sbb
stos
aas
out
adc
pop
ja
aad
or
sbb
add
pop
stc
dec
jne
pop
lock
test
xor
js
in
add
adc
pop
das
sbb
stos
add
mov
ficoml
mov
xor
mov
mov
push
adc
lods
xlat
mov
inc
add
cmp
cmpl
std
xchg
aam
stos
lcall
adc
mov
lret
mov
jns
lods
dec
mov
push
adc
test
cmpsb
scas
jmp
xchg
nop
lcall
dec
ds
lds
push
and
lahf
cmp
loope
hlt
cli
lods
xor
cld
iret
hlt
jns
xor
iret
xlat
and
sub
fwait
cltd
jne
sahf
lcall
loope
nop
inc
jnp
mov
ja
imul
adcb
sbb
adc
dec
jp
cmc
push
pop
cmp
mov
call
or
xor
jecxz
sub
pop
sbb
mov
push
cmovne
pop
ds
cmpsl
in
insl
les
mov
jae
mov
ss
leave
and
daa
roll
decb
outsl
out
adc
hlt
pusha
addr16
lcall
sti
xchg
in
jbe
cwtl
push
and
das
add
fnstcw
mul
test
or
std
fldl
sub
cs
add
xor
pop
push
add
outsl
mov
lock
dec
sti
xchg
movsl
test
sti
cltd
test
jo
dec
shll
outsb
jmp
cltd
mov
adc
cmp
cmp
dec
aad
insb
out
and
repnz
dec
rcll
es
add
jnp
ret
addr16
flds
jmp
std
cmp
or
mov
pop
jmp
push
addr16
loopne
cmc
jne
push
aad
fcompl
pop
adc
imul
packsswb
mov
sbb
shll
insl
das
cmc
loopne
sub
std
shr
xchg
aas
cmp
fadds
int
rclb
or
jmp
imul
pop
jl
or
add
or
sub
rcll
test
dec
and
ret
push
inc
movsb
pusha
lea
and
pushf
mov
loope
jl
aad
sbb
ljmp
mov
ret
rcrb
popf
lods
or
out
cmc
mov
and
or
popa
sub
mov
xchg
popf
sbb
imul
dec
testl
and
sub
inc
push
xchg
cmpsb
ss
mov
jmp
scas
xor
sub
cmp
push
stc
xor
xor
mov
mov
xchg
jns
rorb
sti
mov
hlt
mov
out
pop
out
pop
xor
mov
aaa
cwtl
jge
out
add
add
cmp
push
mov
cld
mov
inc
scas
jge
loopne
enter
add
repnz
push
enter
fdivs
ja
sbb
dec
decb
sub
clc
push
jmp
gs
aam
jl
mov
stos
in
shrl
dec
in
arpl
jno
incb
je
pop
adc
ss
loope
dec
xchg
bt
adc
movsb
inc
sub
test
pop
cmp
aas
push
adc
pop
add
mov
mov
add
adc
into
or
sbb
mov
inc
push
inc
scas
imulb
push
xor
jl
xchg
fdivl
inc
in
cmp
in
or
pop
insl
cmpsb
cltd
xchg
push
movsb
shr
xchg
add
inc
mov
fwait
mov
jp
leave
popa
loopne
push
in
dec
scas
sti
aam
push
aad
nop
adc
and
popl
lret
inc
shlb
in
dec
sbb
or
leave
and
mov
sub
mov
sbb
dec
test
jb
xor
adc
xlat
fs
cmp
rorl
mov
call
mov
xlat
out
inc
ljmp
orl
xchg
and
adc
jg
inc
movsb
jo
xchg
pushf
dec
lcall
fs
adc
inc
inc
mov
pop
push
loopne
sbb
rorl
adc
mov
movsl
adc
add
ljmp
les
or
mov
loopne
insl
ret
loope
pusha
mov
repnz
adc
aad
sub
add
jae
jmp
cmp
jb
lahf
cli
adc
inc
sbb
test
add
and
mov
sbb
ljmp
sbb
popa
daa
imul
outsb
push
outsb
push
jo
lea
lcall
jnp
mov
ret
divb
and
add
fs
push
xor
push
mov
rclb
fdivl
int
mov
je
jl
leave
mov
icebp
inc
fwait
pop
ret
push
into
xchg
imul
in
lcall
je
in
xchg
and
rcll
test
mov
repz
out
jb
add
pop
mov
movsl
movsb
mov
adc
mov
pop
mov
std
ret
push
lea
pop
in
movsb
jmp
test
cli
inc
bswap
mov
pop
lea
jp
shll
jb
movsb
jmp
sub
sbb
out
inc
and
out
cs
fdivl
mov
mov
das
lea
sub
mov
insl
mov
cmp
mov
pop
hlt
xchg
cmpsl
aas
and
mov
adc
mov
push
pslld
imul
roll
add
fdivrs
jle
xor
push
enter
xchg
push
jo
roll
or
and
push
sbb
pop
cmp
mov
dec
sbb
lods
addl
getsec
in
inc
jmp
in
fiaddl
push
rcrl
or
push
jmp
int
out
mov
stos
lods
or
into
lret
fs
xchg
sub
nop
scas
clc
mov
cmp
or
xchg
mov
push
cmp
sahf
cmp
test
push
rorb
adc
shlb
call
popf
and
fnstenv
popa
sub
inc
lcall
mov
pop
xchg
lcall
shrl
pop
mov
mov
shrb
dec
into
dec
imul
gs
fwait
aas
rcl
lcall
dec
jbe
xchg
push
pushf
test
or
repz
jl
push
sbb
test
mov
cwtl
xor
fwait
hlt
repz
push
fxch
mov
xchg
pop
loop
dec
pop
dec
movsb
fimuls
js
pop
xor
scas
mov
es
mov
jae
pop
mov
sub
ss
scas
loopne
mov
insl
xor
in
xlat
push
loopne
xor
mov
in
loope
mov
cmp
cmpsl
std
cli
sarl
mov
and
or
push
mov
sub
fwait
jns
mov
decb
jg
sbb
fidivl
mov
jb
stos
test
add
int3
push
mov
or
jge
js
cvtpi2ps
in
das
cld
int
dec
pushf
outsb
out
insb
es
adc
shll
or
xchg
adc
sbb
xlat
pop
bound
push
ljmp
mov
sahf
push
pusha
rorl
idiv
out
inc
sub
cwtl
pop
or
outsb
ja
inc
mov
bound
sub
push
clc
pop
xor
lock
arpl
push
fisubs
stc
mov
mov
jecxz
push
xchg
pop
sbb
and
push
jle
xor
popa
mov
or
dec
test
add
pop
inc
lret
cmp
jecxz
xchg
fcmovne
jecxz
push
add
cli
dec
mov
cmp
xorb
push
dec
fidivs
call
bound
addr16
int
mov
lea
push
sti
xchg
sbb
test
repz
add
iret
sbb
dec
jmp
mov
outsl
or
push
scas
test
enter
push
lcall
xor
pop
cmp
mov
lret
outsl
jge
and
shrl
and
cmp
das
loopne
out
cli
stc
int3
xor
mov
cmp
xor
arpl
fistps
inc
pop
cld
int3
jle
les
lock
pop
xor
mov
fcoms
popa
xchg
jp
jmp
cmc
in
psrlq
repnz
push
jne
iret
jo
jae
jne
cli
push
mov
mov
jbe
xchg
lods
test
jg
xchg
xchg
test
mov
sub
in
in
adc
mov
add
nop
inc
inc
stos
insb
xor
fldcw
mov
sbb
addr16
imul
dec
jb
aam
mov
aam
sbb
orl
lds
repz
insb
lret
xchg
xchg
xchg
push
stos
dec
adc
lret
and
ja
xor
inc
mov
sbb
out
ficoml
fnstsw
pop
cmp
adc
adc
ss
lcall
daa
cmp
push
movsl
mov
in
xchg
arpl
mov
or
inc
stos
or
bound
add
sti
jb
or
inc
sbb
fadds
xor
jb
fwait
push
or
cltd
jge
cs
fnstsw
test
fsts
jne
mov
aad
movsb
std
mov
cli
adc
and
add
icebp
ret
and
dec
sti
cmpsb
les
xchg
movl
lock
lods
mov
imul
push
push
add
loop
cmp
clc
aad
sbb
sub
inc
lea
nop
ret
lahf
movsb
shll
nop
xor
or
and
adc
add
rolb
or
rcrl
insb
sti
jnp
subb
xor
cs
inc
lret
repz
in
aad
mov
fstps
lds
xchg
lods
cmp
dec
adc
and
daa
xor
iret
cltd
out
out
and
cmpsb
ds
xchg
into
icebp
pop
std
xchg
es
mov
fildll
pop
sbb
jp
jg
dec
leave
popf
sub
mov
push
dec
ret
lea
cmpsb
in
aad
sub
push
fdivrp
push
idiv
int3
out
mov
sub
xchg
pop
pop
adc
stos
int
cmp
add
inc
add
pop
and
nop
fldcw
jmp
sahf
add
mov
jno
ds
out
and
popa
jecxz
rclb
cwtl
mov
adc
loopne
pop
xor
hlt
adc
add
sbb
out
ljmp
rorb
ficoms
push
mov
pop
popa
mov
fwait
fidivrl
jb
xor
push
je
stos
mov
ljmp
jl
jle
sar
adc
mov
jmp
inc
lock
cmc
push
adc
jns
out
movsb
stc
sbb
rcrb
incl
xor
cmp
loope
mov
inc
push
xor
dec
cmpsl
out
into
sti
insl
stos
lods
jb
or
jne
inc
cmpsl
scas
mov
inc
sbb
and
xor
pop
icebp
test
loop
repnz
sahf
repnz
inc
test
mov
dec
cli
pop
div
or
bound
push
iret
sub
nop
dec
pop
scas
xchg
ja
ret
sbb
pop
outsb
dec
dec
mov
fdivrs
test
gs
sub
lock
dec
push
ljmp
push
int3
mov
or
bound
or
movq
in
sub
jno
mov
insl
cmp
cmpsl
push
mov
daa
jge
xlat
mov
es
call
jno
movsb
out
bnd
pop
dec
pop
out
dec
sbb
lock
pop
push
nop
mov
inc
mov
mov
cmc
ljmp
cmp
xchg
aas
fidivl
adc
mov
scas
loop
in
sbb
mov
inc
jge
leave
push
out
add
repnz
fistl
mov
cmp
xor
pusha
or
or
mov
mov
or
dec
mov
sbb
imul
cld
and
adc
movsl
lahf
popa
and
adc
call
aaa
loop
shlb
gs
imul
iret
dec
jne
push
pop
and
test
sbb
test
js
mov
sbb
add
pop
daa
insl
inc
test
push
aaa
ja
out
xchg
cmp
out
pop
mov
cmp
pop
aad
ja
and
je
addl
repz
je
sub
popa
push
jae
fistps
imul
add
jmp
xor
sub
test
push
mov
mov
stc
stos
paddusw
es
sub
sub
adc
cmp
xor
mov
gs
jecxz
in
lock
outsb
lret
rcrl
cmpsb
out
jecxz
xchg
outsl
aad
sbb
pop
mov
push
aaa
sti
sub
cs
and
jnp
dec
pop
out
pop
xor
dec
int3
or
sub
pop
cmp
ljmp
pop
out
shrl
cmp
pusha
je
adc
inc
mov
sarl
les
push
pop
mov
jns
divl
or
dec
ds
xchg
jge
ss
mov
cld
mov
rcrb
dec
sbb
pop
xchg
out
fstpl
push
jb
inc
movsb
mov
adc
xor
push
mov
or
jae
stos
or
cmpsl
ljmp
scas
negl
cmp
push
adc
cli
mov
xlat
cld
dec
imul
jno
or
lods
mov
in
imul
les
test
nop
lret
mov
cmpsb
push
insl
insb
mov
loopne
loopne
push
and
scas
movsl
popf
and
cwtl
dec
and
je
lds
test
push
mov
xor
mov
pop
test
insl
dec
cmp
fdivrs
pushf
pop
lcallw
mov
add
jbe
idiv
imul
outsl
sahf
ja
es
in
mov
sub
mov
pop
fdivr
loope
sub
fisubrl
mov
pop
pop
inc
jp
dec
xor
cmpsb
aam
pop
imul
and
push
into
pushf
jo
push
cli
out
mov
xchg
sti
sbb
cmc
movsb
int
dec
jno
mov
call
jmp
mov
imul
mov
stc
xchg
call
push
add
push
andb
aaa
data16
mov
cmp
in
cmp
jns
pop
in
call
clc
loopne
test
sbb
test
dec
mov
repnz
mov
fdivrs
lods
lcall
inc
daa
in
leave
xchg
xchg
xchg
cmc
pusha
sahf
and
xchg
fisubrs
add
stc
pop
loop
pop
or
mov
push
loop
mov
ret
sub
in
dec
filds
mov
sbb
out
insb
fwait
pop
or
or
jne
ret
xor
add
addl
sbb
pop
popa
test
pop
push
inc
stc
test
shrl
mov
dec
sbb
int
jecxz
lret
in
jle
jmp
int3
xchg
test
jae
inc
mov
inc
enter
fldenv
nop
sbb
movsl
sbb
les
cmc
out
cmp
lea
scas
fnstsw
dec
stos
addr16
cwtl
xor
cs
mov
lea
fistpl
sbb
rorb
push
daa
clc
push
mov
dec
fldl
ja
je
aas
dec
lret
push
dec
adc
andl
inc
push
in
lea
jns
push
fs
sbb
pop
mov
icebp
add
and
push
mov
test
inc
ficoms
mov
out
test
mov
and
and
sbb
stc
dec
xchg
cmp
mov
shll
mov
jns
int
ja
fisttps
out
xchg
push
sbb
sbb
inc
pop
fs
adc
lods
jl
and
pop
push
cmpsl
sub
cmp
leave
mov
sbb
cmc
jo
cmp
inc
iret
mov
push
incb
cmpsl
mov
cli
xchg
mov
cmp
xor
cmp
inc
cmc
and
fs
sbb
mov
mov
jae
repnz
hlt
mov
mov
pop
sbb
cmp
pop
sbb
sarl
mov
arpl
jecxz
lret
and
lahf
enter
out
xorl
sub
dec
addl
jle
sbb
clc
mov
pop
xchg
int3
js
inc
iret
jns
iret
outsb
mov
sbb
movsl
mov
cmp
mov
jo
push
imul
pop
adc
push
mov
shll
mov
and
arpl
sbb
gs
jg
insw
jmp
dec
ss
jge
bound
test
test
xchg
test
mov
sub
pop
inc
jne
in
pop
ja
aam
push
enter
dec
repz
movsb
and
out
adc
dec
push
sbb
cmp
cmpsb
xchg
and
inc
jae
push
pop
sbb
jp
in
bound
popf
in
arpl
push
mov
scas
test
jbe
pop
push
or
sbb
test
mov
imul
repz
inc
mov
xchg
xor
icebp
int3
add
mov
inc
shlb
jecxz
aam
lods
cmp
stos
pushf
movsb
dec
dec
xlat
call
mov
xchg
push
push
pop
sub
jle
or
ja
hlt
jo
imul
jo
xchg
pop
shlb
lds
push
setb
add
jnp
mov
shrl
cmp
mov
mov
mov
dec
sub
lock
fldl
add
cmp
mov
adc
and
adc
dec
lahf
lods
aaa
orl
loop
adcb
cmp
add
imul
inc
xchg
sub
lea
dec
pop
cli
sbb
push
iret
push
or
lods
into
jge
outsb
jo
adc
stc
push
ss
imul
in
call
std
sbbb
jnp
sbb
iret
jge
or
sbb
flds
push
jle
jecxz
mov
add
lcall
xor
jnp
xchg
jmp
out
and
dec
arpl
loope
xlat
cmpsb
sub
cs
imul
push
push
xchg
push
cmpsb
imul
cmp
fistl
dec
fwait
mov
pop
xchg
enter
mov
lock
fwait
repz
scas
out
pop
pusha
mov
xchg
or
xchg
scas
in
loope
ficoml
sbb
lea
jno
roll
fdivrl
rol
in
bnd
frstor
fsubrp
and
int3
test
lods
ss
lret
out
xor
pop
inc
inc
sub
pusha
cmp
sbb
stos
mov
movb
add
test
rorb
add
psrlw
int3
test
sti
or
adc
inc
cmp
jecxz
ds
das
scas
lods
sub
out
aam
inc
ja
cmp
dec
inc
insl
jp
repnz
xchg
pop
and
add
dec
or
sub
insl
mov
in
daa
enter
mov
pusha
into
add
jl
jl
or
lods
push
sub
fldcw
pop
add
push
subl
es
bound
pushf
sub
movsb
incb
dec
pop
xor
ljmp
shrl
in
outsl
push
push
jmp
sbb
xor
es
add
dec
and
js
dec
sub
and
xlat
test
rorl
dec
add
daa
mov
and
or
das
orb
bound
sbb
xchg
cmp
es
mov
dec
mov
scas
xor
and
cmpsb
lods
push
hlt
ret
aad
and
push
inc
js
adc
lods
mov
cmp
adc
pop
sahf
std
cmp
mov
sbb
jno
xchg
xor
cmpsb
push
addb
dec
adc
mov
sbb
cs
aad
or
movb
jb
lret
cli
incb
test
xchg
pop
imul
shlb
inc
jp
cltd
xor
int
int
icebp
or
jg
lods
sbb
pop
or
mulb
mov
dec
flds
call
mov
repnz
mov
mov
mov
jb
aaa
mov
sub
and
stos
pop
icebp
clc
repz
add
sahf
push
sub
and
pop
mov
cltd
dec
xchg
ljmp
cmpl
push
dec
fnstsw
stos
shrb
push
notb
fisubs
lods
sbb
mov
lods
or
add
data16
mov
ja
jbe
aas
xlat
addr16
and
and
je
movsl
movsl
push
shlb
pusha
fiadds
push
loop
loopne
in
xor
inc
mov
push
or
pop
mov
adc
testl
pop
aad
adc
sub
sbb
xchg
push
ds
push
mov
addr16
push
dec
inc
test
inc
mov
jbe
cmp
xchg
fwait
and
shl
shr
sbb
jmp
aam
insl
mov
arpl
xlat
pop
cli
cmpsl
sub
insb
sarw
sbb
mov
cwtl
sub
sahf
push
in
pop
pop
daa
clc
push
add
sub
mov
es
push
add
jecxz
mov
hlt
fxch
adc
and
add
js
in
mov
mov
cmpb
aam
aas
jb
pavgw
xor
mov
lds
aaa
jmp
push
rolb
dec
and
movsb
or
push
ret
clc
stos
mov
out
adc
aam
out
data16
xchg
jle
xchg
jecxz
mov
ret
lods
mov
outsb
cmp
out
aaa
data16
inc
mov
stc
inc
jne
mov
jmp
imul
notl
inc
mov
sbb
out
push
or
and
out
sahf
mov
xorl
divl
adc
dec
cmp
nop
pop
cmp
cmp
add
jns
in
and
and
inc
mov
negb
mov
lret
cltd
inc
mov
cli
jge
inc
push
outsl
sub
xchg
jo
sbb
js
sbb
and
adc
xchg
xchg
stos
cwtl
mov
loopne
mov
outsl
add
rorl
fninit
loope,pn
sti
cmpsb
int
add
adc
inc
iret
and
fstpl
movsb
xchg
xchg
jnp
insb
rcrl
push
js
lret
cltd
mov
pop
cltd
and
mov
movsb
aas
mov
fildl
out
add
rcl
mov
xor
dec
loop
lahf
xchg
sbb
xor
mov
dec
xor
ss
mov
or
push
xchg
push
or
pop
dec
andl
cmc
in
gs
mov
and
pop
pop
and
pusha
sub
repz
add
insl
mov
mov
adc
loopne
loope
or
cmp
in
mov
mov
sub
ret
mov
imul
adc
pop
jge
xor
add
and
cmp
cmp
stc
xor
lock
outsb
mov
inc
jecxz
or
stos
dec
dec
cld
iret
ret
popa
out
mov
cltd
fdivl
mov
cli
pusha
shll
movsl
push
icebp
lods
xchg
push
mov
sbb
pushf
mov
pop
daa
adc
je
jl
jg
mov
test
sbb
and
rolb
js
rolb
push
inc
lret
mov
fmulp
sub
mov
int3
nop
lock
lock
mov
nop
dec
mov
xor
lds
mov
cmpsl
jne
jecxz
jge
inc
xchg
mov
andb
lds
icebp
bound
icebp
dec
sbb
stos
rorb
rcrb
lret
andl
divl
hlt
xchg
ljmp
xlat
xor
pushf
fidivl
dec
loopne
mov
test
mov
shr
dec
cmp
inc
cmp
push
bound
xor
shrl
adc
in
sbb
pop
push
or
mov
into
sub
mov
cmpsl
mov
daa
dec
push
mov
daa
enter
test
fbld
insb
clc
and
sbb
mov
out
repz
push
xchg
mov
sub
sub
fidivrl
cmp
loop
mov
mov
push
jge
popf
inc
xor
cmpb
jecxz
mov
out
or
inc
mov
icebp
data16
sbb
pop
xchg
clc
leave
push
mov
punpcklwd
mov
std
cli
mov
push
sub
sbb
cld
mov
mov
pop
push
adc
lret
ja
push
mov
in
int
and
push
test
and
or
pushf
adcb
pop
xor
xor
cmp
adc
sahf
jmp
inc
push
cld
fstl
dec
xor
in
push
pushf
dec
inc
or
push
xchg
pop
loopne
aad
jecxz
ret
jns
rolb
test
sahf
es
imul
fldenv
neg
fnstenv
adc
jne
ja
cmp
out
add
and
das
xchg
bound
inc
in
daa
nop
fsts
cmpsb
addr16
mov
jo
mov
pop
in
data16
xor
mov
dec
dec
jmp
add
scas
subb
cmp
inc
dec
in
cmp
rorl
aam
and
mov
push
in
and
cld
icebp
xor
gs
xor
leave
daa
fstpt
cpuid
mov
xchg
xchg
mulb
inc
mov
je
ret
mov
negb
mov
mov
mov
xchg
push
inc
dec
xchg
pop
xor
in
xor
cmp
jmp
les
cs
cmp
pushf
stos
jns
add
push
adc
data16
jmp
movsl
scas
lds
mov
mov
cs
movq
jmp
fildl
lret
popa
sti
popf
aam
ret
les
fs
lahf
mov
mov
fiaddl
mov
faddl
rorb
push
cmp
mov
xchg
pop
incb
jle
or
out
loop
inc
ja
xchg
or
xor
push
xchg
or
test
aam
rol
test
jecxz
mov
cmp
sti
loopne
mov
sub
adc
imul
scas
into
stos
mov
test
mov
jmp
mov
repz
xlat
push
adc
mov
nop
shl
pop
js
insb
jno
aas
inc
movsl
faddl
cmp
repz
and
inc
push
ss
scas
or
negl
lock
dec
mov
fildl
das
mov
in
jmp
cld
jne
cmpsl
inc
push
push
mov
sub
cmp
aam
and
cld
or
xchg
and
jecxz
sub
xchg
ss
lcall
or
push
mov
mov
sbb
dec
repnz
in
sub
add
rcll
in
fidivrs
pop
xchg
jnp
in
nop
fidivrl
push
mov
xchg
sbb
adc
sub
rclb
jmp
xchg
pop
and
pop
sbb
add
adc
icebp
and
shll
sahf
jo
mov
test
pop
inc
icebp
orb
lret
div
movsb
jbe
add
ret
jns
leave
xchg
lret
pop
mov
or
xchg
cmp
cltd
mov
or
imulb
lods
pushf
or
mov
adc
xchg
dec
and
jg
popa
jnp
mov
xchg
xchg
fldl
or
xchg
es
adc
cmc
cmp
xor
pop
lahf
mov
outsl
mov
jb
cmpsb
idivl
push
imul
faddl
cwtl
mov
mov
out
sub
pop
mov
arpl
xor
lods
add
sti
xor
push
rolb
push
int3
insb
push
mov
mov
ja
aas
cmp
add
pop
leave
les
es
sbb
sub
dec
cmp
shrl
ret
ljmp
imul
add
lods
nop
and
mov
inc
das
push
mov
dec
fsubs
repz
mov
and
pusha
cmpsb
out
mov
sbb
jge
fldl
fildll
or
jp
jp
pop
or
jg
xchg
mov
out
cli
pop
ss
jg
cmpsb
xchg
lret
sbb
xchg
das
push
adc
jp
mov
or
rcl
enter
sahf
xchg
insb
scas
cmp
sbb
mov
jne
test
ljmp
and
inc
and
fldenv
rorb
jp
fsubs
fnstsw
ss
or
xlat
push
add
cmp
sub
sbb
pop
pop
xorl
dec
xchg
xchg
sti
mov
cld
call
sbb
jb
sarl
lret
xchg
sbb
dec
aad
loop
es
mov
test
mov
sub
jae
xorb
lock
mov
sbb
shlb
pushl
add
cmpsb
in
mov
ljmp
inc
jo
sarb
ljmp
inc
stos
xchg
pop
retw
xchg
fisttpll
cmp
mov
adc
xor
jb
adc
sbb
enter
push
mov
dec
rclb
cwtl
loop
lds
xlat
pop
adcl
call
sbb
mov
xchg
iret
sbb
pop
pop
pusha
aad
in
inc
dec
cmp
mov
ss
sbb
rorb
sbb
xor
lea
mov
outsl
outsl
sbb
and
lahf
adc
orb
push
addr16
sbbb
xor
and
mov
ret
mov
arpl
xlat
ss
mov
popa
cltd
enter
outsb
mov
and
jecxz
pop
xor
cld
dec
shlb
dec
push
pop
pop
mov
xchg
cwtl
fidivrl
pushf
push
adc
leave
mov
aad
hlt
ja
xchg
and
mov
std
cmp
fwait
js
ret
push
pop
in
xor
push
dec
aaa
mov
test
mov
mov
lock
lcall
ljmp
cmp
xchg
lock
das
and
adc
dec
sbb
shlb
cltd
or
jg
sub
movsb
inc
push
push
ror
test
mov
test
push
dec
sub
push
pop
pop
jns
xor
sub
push
cmp
mov
out
jmp
pushf
dec
xorb
ljmp
das
mov
dec
inc
in
addl
sub
xchg
pop
js
cld
fistpl
movsb
inc
fcomps
fcoms
inc
stos
sbb
mov
cmpsl
mov
test
stos
mov
inc
ret
icebp
les
movsb
fnstsw
sbb
add
push
lods
sbb
or
xchg
dec
sub
lcall
inc
sub
inc
js
push
add
mov
mov
dec
dec
je
test
fsts
mov
inc
fldl
pop
imul
add
mov
dec
mov
jns
push
scas
es
and
cmp
jp
pop
adc
adc
add
int3
pop
adc
jge
lds
scas
xchg
ror
add
mov
fsubrs
push
xchg
bound
push
imul
xor
pop
push
mov
sub
insl
push
loop
push
in
ret
cmp
movl
push
in
jne
xlat
pop
push
add
pushw
inc
imull
cltd
xchg
push
sbb
push
push
ret
adc
cmp
arpl
pop
mov
push
push
push
pop
and
in
in
mov
cmp
in
and
shlb
sarb
xlat
ret
inc
inc
jbe
ja
leave
mov
lahf
in
cmc
imul
jmp
inc
lds
aad
pop
sbb
lcall
cmp
je
and
outsb
push
jl
shrl
inc
xchg
and
xor
cwtl
ja
aaa
out
mov
jecxz
jmp
icebp
and
movsb
push
enter
and
lahf
adc
pop
fmuls
in
add
fdivrl
hlt
adc
inc
pop
pusha
jecxz
aad
fisubs
inc
jle
leave
enter
cs
push
cs
mov
mov
dec
mov
out
inc
lds
jle
into
adc
loope
loope
cld
loopne
mov
push
push
mov
stos
inc
pcmpgtw
jo
insb
jnp
cmp
sub
popa
and
andb
push
ret
in
sub
jg
dec
iret
xlat
popf
sti
int3
mov
dec
xor
fistpl
cmovs
mov
sbb
xchg
sub
imul
movsb
frstor
mov
cs
in
dec
dec
inc
fiaddl
pushf
call
cmp
outsl
pop
leave
les
aad
sub
mov
mov
jmp
fsubrs
pop
pop
jno
ret
mov
xor
lds
mov
cmp
leave
sbb
inc
sub
jbe
xchg
je
jmp
pop
repnz
enter
ret
cmp
mov
fnsave
xchg
movsl
in
in
jecxz
xor
push
je
or
mov
and
repnz
and
xchg
cmpsl
faddl
or
int3
mov
out
divb
xchg
int
das
test
xor
inc
movsb
std
add
jo
xor
ficoml
lahf
dec
push
aaa
ss
test
or
jmp
lods
or
mov
lods
lds
pop
outsl
arpl
jecxz
mov
mov
xchg
sbb
dec
sbb
push
insl
inc
sub
ds
in
call
add
inc
lcall
ja
add
out
or
add
inc
and
inc
adc
add
pop
sarl
pop
cmc
imul
mov
inc
sbb
sbb
shlb
dec
or
mov
sub
cli
int3
push
cmp
ja
dec
mov
and
je
push
inc
sarb
notl
sbb
sub
xchg
out
or
xchg
addb
or
xor
push
imul
push
in
dec
xor
pop
insb
imul
cmpsb
mov
dec
cmp
adc
out
ja
sbb
adc
and
cmpsl
mov
gs
insb
xchg
cs
and
xchg
std
jmp
outsb
lock
xor
test
mov
cmp
mov
jle
gs
cmp
or
rcr
xchg
out
fcmovnb
jbe
iret
and
adc
mov
mov
sbb
push
in
push
mov
test
shrl
xchg
bound
add
jle
inc
cltd
sbb
es
mov
push
call
imul
movsb
push
mov
mov
nopl
adc
jae
push
das
cmpsl
xchg
subb
cli
repz
xchg
xor
cld
jg
in
and
add
push
addl
andb
fbstp
dec
jno
or
adc
mov
cmp
adc
push
jbe
pop
icebp
xor
pop
js
pop
jmp
jns
enter
adc
sub
dec
setb
test
ss
fistl
jg
and
addr16
loop
sti
dec
mov
in
popf
xor
push
cmpb
sahf
push
lock
mov
rclb
test
dec
and
push
mov
mov
jecxz
aad
int
jecxz
into
cmpsl
sub
scas
jae
pop
test
pop
push
stos
mov
les
das
cmp
stos
enter
cmp
xor
cmp
fucom
rcll
xchg
sub
pop
dec
push
or
xchg
gs
loope
dec
shll
cmpsl
dec
sbbl
xor
cwtl
ret
popf
out
daa
jg
shlb
popf
roll
bnd
ds
sbb
mov
mov
mov
push
mov
in
lahf
push
inc
sar
leave
push
jae
mov
add
and
and
xchg
dec
add
mov
and
adc
xchg
push
rcrb
pop
ret
push
shl
repz
push
ljmp
jnp
sub
shrb
add
mov
icebp
push
xchg
aas
subb
xor
lods
pshufw
and
clc
inc
fmuls
jo
xor
addr16
shlb
push
sti
lock
or
or
jle
or
das
call
rclb
pushf
adcb
push
or
sbb
jle
mov
test
jo
jle
mov
jp
rorb
out
or
mov
mov
cmpsl
lret
mov
adc
sarl
ds
stos
cmpsl
mov
cli
push
dec
xchg
mov
mov
push
ret
jp
inc
pop
xchg
xchg
xchg
push
popa
int3
jnp
das
jmp
add
xchg
cli
cmp
outsl
test
jnp
xor
xchg
or
fdivr
jne
xchg
mov
scas
add
into
xor
mov
jne
push
xchg
mov
cmp
jmp
fdivl
divl
lea
mov
stc
std
dec
fstl
shl
sbb
lods
lods
ss
bnd
rcr
pop
pusha
rcl
sub
jecxz
shl
xchg
inc
mov
xor
and
xorl
xchg
movsl
sub
or
mov
ret
cmc
mov
xchg
aad
lea
pop
and
out
shll
ja
push
push
rcr
mov
aad
or
fcoml
and
out
jg
dec
inc
mov
cmp
push
add
jbe
or
out
hlt
dec
addr16
fstps
cmp
into
pusha
imul
xchg
aas
pop
push
sub
jmp
inc
seto
popl
cmc
mov
ret
cmp
push
fldt
pop
sarl
aaa
and
cmp
int3
push
jb
sarl
test
jae
cli
xlat
dec
sbb
shrl
mov
cli
inc
mov
lahf
fidivrs
cmp
popa
les
stos
outsb
pusha
jne
dec
cmp
movsl
repnz
mov
jne
jnp
or
add
and
xchg
jge
lock
fidivrs
lcall
xor
or
and
or
jb
lahf
xchg
cmpsb
mov
ficomps
shlb
add
mov
dec
push
push
dec
test
mov
add
mov
ja
xor
pop
mov
cmp
push
jno
cwtl
pop
ss
mov
clc
dec
xor
ja
inc
push
jo
shlb
cs
or
hlt
pop
dec
out
mov
std
repnz
incb
jge
mov
ror
cmpsl
adc
loope
dec
sbb
add
lods
lahf
mov
jp
movaps
ffree
mov
inc
push
jbe
into
dec
mov
push
decb
or
jmp
pop
push
aad
cmp
or
call
mov
lods
adc
sahf
cmp
jg
adc
or
sub
outsb
repz
js
insl
xchg
test
add
out
add
sbb
aas
in
aas
out
push
fs
jecxz
and
movsb
mov
xor
xchg
adcb
scas
fists
mov
out
call
ja
nop
lods
push
mov
cmpsl
in
stos
out
mov
pop
push
insl
leave
mov
jecxz
sub
fistps
dec
pop
pop
pop
scas
inc
xchg
in
int3
cld
adc
sti
jae
hlt
jb
dec
inc
mov
pop
mov
hlt
cmpsb
cmp
js
aaa
sahf
into
dec
fildl
fimuls
mov
ret
aaa
es
and
insb
xor
leave
sbb
ja
push
push
mov
xacquire
xchg
jnp
mov
xor
jp
or
or
jae
jl
push
aam
sub
xor
scas
les
push
mov
lea
mov
sahf
sub
je
stc
lods
stc
pop
in
sti
mov
cmp
mov
cmpsb
sbb
xlat
clc
xor
cmpsb
stos
daa
loopne
icebp
clc
int
loop
push
sbb
clc
imull
fwait
orl
pop
inc
and
fs
stos
push
xchg
rol
leave
add
lods
pop
pushf
and
sbb
inc
cmpl
stos
mov
fwait
adc
mov
xchg
push
and
and
pop
pop
and
cmp
pop
ret
add
call
mov
push
push
stc
rcr
push
mov
ficoml
dec
jae
fsubl
dec
das
dec
or
aas
data16
mov
ret
cmp
pop
inc
pop
adc
adc
push
inc
cmp
jbe
xor
call
or
lcall
pop
sub
jnp
lods
jae
daa
lea
jno
daa
in
in
push
push
mov
mov
xor
cli
adc
xor
cmp
push
lret
fldt
in
fmul
notb
sub
enter
and
push
mov
out
sbbb
jl
imul
lea
mov
lahf
decl
and
imul
lahf
jge
ljmp
lea
fdivl
inc
int3
insb
xchg
or
and
cltd
mov
adc
gs
mov
sbb
push
js
adc
popa
or
scas
pop
js
sub
gs
sarb
insb
hlt
std
mov
arpl
rorb
jbe
ss
cwtl
pop
ret
push
jnp
ret
jno
cmp
iret
mov
adc
xchg
in
xchg
dec
xchg
ret
sbb
andb
stos
setnp
pushf
ljmp
orb
mov
rclb
nop
shll
out
test
imul
in
repz
xor
push
addb
rcrl
sub
add
xor
xorl
add
mov
xor
imull
push
mov
outsb
mov
cli
mov
add
mov
push
fstp
cld
sub
lret
fbstp
rorb
xchg
pushl
xor
push
fnsave
push
aam
mov
cmp
inc
xchg
xchg
mov
jns
dec
adc
cmc
inc
dec
sahf
ja
gs
nop
mov
in
mov
mov
dec
xchg
ljmp
or
jmp
clc
lret
inc
sub
mov
loop
cmpsl
sbb
pop
shrb
add
inc
movl
adcl
xor
pop
int
sub
dec
fs
aam
in
rcrl
jae
outsb
or
es
lds
scas
inc
push
in
addr16
adc
sub
aas
mov
cli
rcr
adc
pop
into
pop
in
out
testl
je
xchg
aad
jbe
rcrl
xchg
out
xchg
mov
gs
mov
xor
and
mov
cmc
add
inc
mov
or
outsb
cs
int
outsl
push
popf
lahf
mov
out
fs
neg
cmp
inc
cmp
iret
movb
xorb
movsl
dec
and
xor
adc
sbb
fadd
xor
movsl
adc
test
lods
out
mov
rolb
test
add
pop
xor
xlat
mov
add
shlb
in
jbe
lea
cmpb
pop
rcll
xor
xchg
pop
sbb
pushf
pop
xor
cmp
test
daa
aas
xor
loope
add
gs
sbb
test
push
inc
inc
aaa
push
xchg
sub
dec
and
decb
mov
mov
rolb
fs
xchg
dec
bound
call
mov
xchg
imulb
push
mov
jp
ret
into
fcoml
push
arpl
or
shll
sbb
shlb
xlat
out
mov
ja
aas
pop
fiadds
data16
insl
pop
pop
mov
shll
adc
nop
jg
inc
push
inc
xor
mov
in
mov
nop
sub
jmp
cltd
add
cmp
clc
inc
fildll
sbb
jg
jmp
dec
push
inc
or
push
adcb
xor
mov
jae
jp
push
push
iret
add
std
pop
xor
lock
pop
in
sahf
jmp
mov
push
or
fsubr
xor
popf
dec
hlt
hlt
call
out
or
jmp
jo
lea
jne
or
add
mov
xchg
jecxz
fwait
stos
shlb
and
inc
jle
and
pop
mov
es
jl
int3
repz
adc
pop
popf
dec
data16
inc
pop
xor
in
cmp
in
loop,pt
lcall
pushf
push
out
pop
sarb
cmp
mov
outsl
push
inc
lcall
sbb
sub
sbb
shlb
xlat
icebp
jo
cltd
imul
adc
jo
mov
sub
mov
bound
scas
popa
bnd
es
pop
into
popf
mov
mov
std
pop
movsl
shlb
pop
out
andl
ljmp
popa
mov
or
stc
stc
dec
scas
call
iret
xor
dec
xchg
into
cmpsl
fmulp
jge
dec
lret
shlb
call
mov
mov
lcall
mov
mov
mov
sbb
fs
hlt
dec
cmp
add
pop
sub
add
add
pushw
mov
jo
sti
sub
or
inc
push
sbb
inc
cmp
sbbl
dec
stos
and
push
sti
lock
and
add
lcall
orl
inc
lret
push
inc
aaa
fimull
dec
mov
inc
jo
mov
mov
imul
mov
hlt
lret
or
inc
testb
push
mov
lret
cltd
lret
lahf
repz
xor
inc
mov
push
cmp
pop
int3
pop
gs
cmp
jae
sub
leave
repnz
arpl
mov
or
lcall
mov
xor
pop
ljmp
mov
fidivrs
clc
xor
mov
in
out
push
or
mov
lcall
popf
adc
jb
cmpsl
inc
jp
out
std
push
out
pop
push
lods
lret
xchg
mov
push
xchg
cmp
lret
xor
fdivl
or
inc
pusha
addl
adc
mov
sti
testl
aad
sub
xor
jo
out
jg
mov
mov
sub
sub
mov
mov
inc
ss
arpl
call
popf
bound
xchg
inc
cmpxchg
ret
cli
push
inc
cmpsb
jmp
cmpsb
pop
inc
jno
fcmovne
and
adc
scas
sbb
and
repz
in
pop
in
es
ds
adc
loopnew
out
mov
ja
addr16
pop
add
pop
movsl
xor
mov
fnsave
dec
sub
xchg
in
and
fs
out
push
sub
mov
jno
sub
in
dec
mov
stc
inc
cmpsb
push
aas
outsb
sbb
mov
mov
sbb
test
das
add
add
iret
inc
test
push
push
mov
pop
loope
inc
lret
mov
cmp
push
sub
rcll
xchg
leave
push
inc
or
inc
mov
insl
gs
fildll
pop
push
das
mov
jg
xchg
mov
fisubs
negl
rcl
cmp
repnz
out
mov
jg
dec
sarl
fsubrs
cmp
push
push
mov
scas
cmp
mov
ds
adcb
lret
loope
mov
aad
or
jle
rcr
sti
mov
subb
loopne
adc
std
test
lds
fldl
and
aas
jns
int3
aaa
jl
cmp
sbb
es
rorb
cmpsl
xor
cmpl
push
dec
pop
push
stos
xor
jns
jnp
inc
pop
dec
fwait
and
mov
je
hlt
or
cmp
fidivs
lock
jge
adc
cmp
jns
je
jl
sub
add
in
xchg
xor
mov
xor
mov
inc
repz
outsb
push
add
das
jle
sub
jle
push
push
adc
addr16
inc
ljmp
mov
fdivrl
sbb
ja
das
insb
sub
pop
adc
sahf
cmpb
add
add
aaa
or
dec
and
dec
mov
mov
shll
adc
cli
push
sub
inc
push
nop
mov
add
jge
pusha
nop
orl
cmc
lret
add
bound
dec
xchg
pop
test
insb
iret
sub
mov
fisubl
ret
xor
xchg
aam
fidivl
xchg
loopne
push
jg
nop
xor
or
xor
cld
and
mov
add
inc
dec
inc
add
pop
xor
je
pop
lcall
mov
call
arpl
movsb
push
push
mov
pop
imul
adc
pxor
jns
out
jg
sub
add
rcrb
or
sahf
lock
dec
pop
repnz
divl
cltd
jmp
pop
push
in
xor
pushf
pop
fisttpll
aam
inc
nop
sbb
sbb
addr16
or
aam
aas
ja
cmc
ret
fisttpll
int
scas
shll
lds
daa
and
or
xchg
sbbb
pushf
movsl
aam
iret
sbb
pop
daa
dec
mov
call
repnz
push
shrb
cltd
pop
jg
test
mov
pop
cmp
in
push
pushf
push
addb
or
xor
iret
cmp
or
idivb
xchg
arpl
pushf
cmp
inc
or
jl
jbe
and
push
stos
test
push
fisubs
sub
int
scas
leave
cli
xchg
fcmovnu
or
aam
insb
sbb
xchg
pop
sarb
incl
lea
in
decl
pusha
in
sbb
daa
aad
ficoml
push
push
pop
sbb
pop
jg
mov
jne
xor
mov
mov
dec
aaa
dec
out
xchg
adc
xor
fwait
sub
lahf
sahf
js
out
daa
adc
xchg
adc
xchg
mov
or
jnp
mov
or
aas
adc
jl
popa
gs
or
cli
repz
mov
ljmp
push
mov
outsl
inc
sbb
je
mov
adc
cltd
pop
push
xor
imulb
std
movsl
fnstsw
jb
ds
test
lret
xor
pop
jle
jbe
pop
add
mov
xor
sarb
push
or
push
shlb
push
mov
inc
pop
mov
es
fcom
mov
loop
shrl
mov
ljmp
clc
arpl
mov
pop
in
idivl
jne
pushf
xlat
xor
cld
push
adc
imul
imul
hlt
movsl
fcmovne
cmpsl
aaa
into
add
pop
jp
out
dec
ror
faddp
jmp
fisttps
incl
sti
sbb
xchg
rep
in
data16
loop
mov
outsb
push
push
jp
sub
dec
mov
pop
out
hlt
ljmp
jae
xor
add
cmpb
data16
cmpsl
and
cmp
rorl
daa
xchg
mov
mov
in
xchg
test
sub
les
mov
icebp
inc
mov
cld
xchg
jne
ret
je
clc
pop
xor
xchg
movsb
jno
xchg
popl
stos
jb
xor
stos
jp
xor
sbb
fdivrs
and
push
xchg
movsb
mov
lods
or
sbb
cmpsl
and
imul
test
test
pop
js
mov
jnp
xor
stos
dec
ja
lret
mov
mov
divb
add
inc
rclb
outsb
xchg
jnp
xlat
rorb
sub
pop
rcl
adc
inc
dec
cltd
shrb
test
cmp
ja
jae
sub
gs
cmpsl
xchg
pushf
adc
cmpb
push
or
insb
push
into
xor
mov
fadds
add
mov
sahf
mov
or
stos
ljmp
int
mov
bound
outsl
dec
outsl
push
or
mov
pop
and
sti
jo
mov
xlat
mov
daa
insl
aaa
jnp
cmc
insl
popf
fisubs
cmpsl
cmpsb
fxch
aad
insl
push
cld
dec
inc
jmp
cmp
lret
mov
push
inc
mov
mov
in
push
movsl
pop
cli
sti
pushf
cwtl
cs
add
rorb
jle
sbb
dec
mov
das
jle
fwait
sbb
scas
ljmp
daa
sbb
inc
orl
adc
call
xor
adc
in
adc
out
imul
test
mov
cmpsb
dec
xchg
sub
sub
fsub
inc
sub
inc
sub
adc
pop
aam
or
adc
cli
and
jmp
daa
lods
mov
orb
ljmp
adcl
mov
into
int
xlat
pop
lcall
pop
cmp
and
int
push
aad
rcl
push
ret
leave
xchg
and
iret
xlat
stc
std
xor
shrl
sbbl
ficoml
inc
neg
or
seto
cmp
add
test
aad
stos
push
mov
push
jecxz
inc
faddl
loope
ficoms
ss
fsts
xchg
or
imul
push
sub
mov
mov
iret
movsl
jnp
push
or
test
pop
xchg
push
jne
push
adc
cmpsl
ret
mov
fmul
pop
and
daa
incl
repz
dec
pop
loope
mov
jmp
add
int
xchg
lahf
divb
or
and
xchg
je
mov
fistl
fiaddl
inc
pop
js
jne
mov
push
js
dec
pop
call
shrb
cmp
fcoms
adc
cmp
pop
xchg
loopne
std
xlat
xor
pop
pop
call
sub
aam
rcrb
and
add
test
pop
sub
and
aaa
cld
pop
mov
push
aad
in
dec
sub
fidivrs
push
jp
incl
outsl
fs
mov
mov
ds
cli
xor
jmp
add
fwait
aad
mov
and
inc
add
dec
cwtl
jbe
loopne
mov
pop
xor
sub
mov
adc
inc
mov
test
mov
or
popf
aad
daa
lret
sub
fsubrl
jo
sarb
incb
mov
pop
dec
outsb
mov
aaa
lcall
cmc
pop
jmp
out
jp
fistl
lret
lods
int3
int3
shrb
mov
xorb
dec
push
cld
and
and
rcr
fwait
xchg
inc
cmp
or
dec
or
test
or
mov
lret
iret
fnsave
ljmp
sub
inc
filds
push
addr16
fdivrs
lds
mov
ljmp
dec
fucomi
std
and
push
daa
push
ja
rcrl
fidivl
and
cs
dec
mov
sbb
add
lcall
mov
mov
inc
daa
xor
pop
fidivl
repz
or
into
xchg
insb
push
pop
jge
shlb
pop
sub
add
adc
dec
jo
adc
sub
int3
mov
cmp
repz
mov
aaa
or
fistps
ror
inc
in
insb
dec
push
adc
and
icebp
mov
sub
xor
jecxz
or
pop
push
movsb
and
or
push
insl
call
cmc
imul
adc
dec
rclb
aas
hlt
or
ret
mov
fdivl
sarl
cmpsb
int3
cltd
inc
popa
gs
inc
cmpsl
stos
repnz
mov
pop
and
push
dec
mov
mov
int3
je
mov
xchg
fisubs
outsb
jne
jl
pop
cli
stos
add
fimull
push
das
js
jnp
adc
mov
scas
and
frstor
sbb
nop
push
mov
outsl
push
adc
mov
stos
lea
mov
mov
lds
push
sub
fbld
dec
mov
cmpsl
scas
rclb
lods
ret
shrb
jno
dec
jp
or
rcrl
xchg
mov
lahf
pop
mov
sti
jbe
test
hlt
xchg
sahf
es
xchg
add
or
in
dec
jg
xor
mov
lods
mov
adc
push
nop
aam
cli
jns
mov
outsl
sahf
mov
mov
lcall
mov
pop
aaa
mov
addr16
cmp
scas
jl
mov
fnsave
sbb
push
or
adc
mov
pop
int3
cltd
js
mov
das
push
mov
jge
aam
fstps
and
add
and
mov
test
dec
cli
adc
pop
push
xor
push
shl
add
adc
in
fildll
cwtl
shr
jl
and
pop
mov
fldt
es
dec
cvtpi2ps
imul
mov
mov
scas
pop
xor
or
rcrl
xchg
das
pop
sbb
popa
fwait
lods
lret
pop
scas
mov
xchg
imul
enter
ret
out
dec
nop
mov
pop
fxch
mov
sbb
push
push
push
int
outsl
add
shl
sbb
jb
or
int3
int3
fcompl
xor
push
sbbl
add
jne
pop
and
inc
mov
mov
rol
mov
adc
ljmp
cmp
pop
test
movsb
mov
push
push
in
xor
add
push
and
sub
popf
mov
test
dec
adc
std
stos
cmp
loopne
pop
jg
xor
inc
mov
aas
add
or
inc
imul
fs
jo
mov
dec
jl
or
enter
push
iret
lea
sub
add
cmpsl
call
xor
pop
xchg
cltd
fstps
sahf
test
lret
stos
and
lret
jb
cmc
xor
iret
daa
push
adc
sbb
jne
popf
data16
notrack
inc
mov
in
xor
and
rorb
into
pop
cmp
mov
mov
pusha
shrl
daa
xchg
inc
fldln2
outsl
sub
jge
adc
mov
cltd
testl
cmp
cld
fs
lods
popf
lods
sub
addl
fcmovnb
stc
or
pop
sbb
inc
jle
push
and
leave
dec
and
cmp
ss
add
insl
mov
cs
jb
fs
and
mov
daa
cs
jbe
sbb
imul
dec
adc
add
push
mov
es
dec
xor
shlb
mov
scas
xchg
lea
push
shr
mulb
pop
dec
es
pop
in
pop
dec
mov
and
mov
add
and
dec
xchg
cmp
ds
jne
scas
cltd
enter
dec
sub
inc
popa
pop
push
push
mov
jmp
pop
and
cltd
fisttpll
inc
in
lds
adc
in
mov
xor
dec
in
push
out
lret
das
out
jl
add
out
pop
add
enter
or
daa
nop
xor
pop
pop
test
in
xor
mov
leave
mov
std
fstps
mov
test
sbb
and
sub
dec
int3
cmp
mov
aad
in
lret
xchg
pop
hlt
loope
lret
mov
pop
mov
mov
and
test
call
xchg
inc
cli
push
imul
mov
cmpsb
ja
rcll
cmp
ss
movsl
mov
push
cmp
bound
xchg
mov
dec
sbb
nop
push
inc
pop
cmp
imul
adc
fiaddl
scas
jmp
xchg
mov
pop
jmp
mov
jmp
outsb
mov
and
mov
into
push
mov
orl
aaa
or
aad
bound
je
cmp
arpl
cmpsl
push
cmp
jg
jmp
push
sbb
movsl
xchg
sbbb
mov
dec
dec
imul
cmp
js
and
xchg
pop
add
shld
xorl
popa
addr16
cmp
mov
repnz
xor
stc
movl
and
xor
adc
adc
mov
sbb
jo
fwait
lods
xor
enter
data16
push
sbb
jno
sahf
loope
sub
pop
cmp
ret
rcr
inc
in
popf
pop
imul
sub
in
jg
pop
inc
cmp
mov
test
cmp
ret
xor
pop
insl
xchg
incl
sub
leave
jo
arpl
and
dec
movl
sub
adcb
cld
mov
scas
or
mov
and
sub
cmc
push
imul
in
push
movsl
movsl
icebp
roll
xchg
xorb
cli
jg
loop
ret
cwtl
sbb
loop
out
and
adc
mov
push
lret
divb
cli
lods
inc
mov
ss
add
pop
dec
push
dec
stos
add
cmc
jnp
and
xchg
jb
fiaddl
stos
mov
xor
nop
pop
out
push
ficompl
dec
in
gs
add
test
inc
adcl
push
div
in
div
mov
sbb
cmp
test
sub
aaa
je
movsb
fldenv
adc
pop
mov
data16
enter
xor
scas
push
xchg
aad
inc
mov
in
xchg
lea
mov
lret
push
pop
mov
push
or
mov
push
add
sub
js
xor
insl
sbb
das
mov
and
cmp
adc
pop
mov
pop
adc
outsl
pop
cli
mov
jl
sahf
and
fstpl
andl
add
pop
test
dec
add
jo
cmp
imul
lds
cmc
adc
repnz
fwait
and
jle
mov
repnz
mov
ljmp
jae
idivb
xor
bound
or
incb
push
jae
aad
pop
jb
lods
fstpl
sbb
das
xchg
cmp
cltd
cmpsl
scas
and
sbb
push
and
cmpsb
mov
stos
xchg
pop
fmul
aam
ror
fldenv
xchg
mov
pop
pusha
pop
and
ss
jl
dec
jg
je
cmp
in
and
mov
outsl
push
fstl
iret
add
mov
les
iret
pop
addr16
outsl
pop
or
or
scas
bound
in
sub
mov
lods
loop
adc
pop
sarb
and
jl
andl
jmp
and
aad
jg
lods
mov
out
sub
enter
cmpsl
nop
mov
inc
fcomps
pop
sti
push
mov
int3
mov
arpl
push
mov
lods
xchg
int3
lods
or
lea
mov
mov
fcoml
mov
lea
mov
jle
test
jmp
jge
enter
mov
data16
imul
jns
imul
into
push
mov
and
mov
std
fucomp
stc
push
mov
aam
dec
jae
popa
cmpsl
psllq
fnstsw
mov
aad
mov
pop
into
jno
push
stos
aaa
mov
xchg
shlb
in
pop
gs
mov
xchg
jle
dec
sbb
rorb
pop
sahf
sbb
xor
bound
push
scas
sub
push
or
mov
je
cmp
adc
ficomps
fs
xlat
lea
jb
or
std
mov
xor
lahf
push
pusha
push
push
inc
sbb
mov
aas
add
mov
stos
call
lods
imul
push
jne
lock
or
nop
xchg
loope
js
iret
inc
gs
test
dec
jge
pop
xchg
stos
mov
mov
ss
cmpsb
dec
and
cwtl
inc
push
shll
pop
outsl
xor
shlb
xlat
fnstcw
dec
push
adc
push
and
xchg
xor
gs
xor
leave
or
sub
imul
push
aad
insl
sbb
cs
repz
dec
or
lret
adc
inc
sbb
fdivrl
jge
fsubl
testb
fs
inc
sbb
cld
pop
push
jge
pop
and
mov
jecxz
jne
loope
jo
fmuls
sub
loop
dec
aad
or
sbb
push
mov
das
xchg
sbbl
or
lds
shlb
xchg
or
and
sbb
loop
sbb
cltd
pushf
sub
or
jno
sbb
dec
xor
test
cli
rorl
mov
sub
mov
mov
or
insl
sbb
and
hlt
shrb
pop
je
lods
test
push
xor
inc
or
aas
dec
xor
sti
xchg
movsb
rolb
jge
pop
sub
mov
push
ret
fldl
mov
fidivl
pop
pushf
jp
in
test
outsl
call
bound
xchg
popa
lcall
or
xchg
cld
test
rorb
and
arpl
and
je
or
stc
jae
adc
push
dec
cmp
xor
dec
pop
adc
jbe
addr16
adc
mov
rcrb
push
aam
sbb
mov
jns
mov
addr16
mov
repnz
inc
mov
adc
out
dec
fsubrs
sarb
mulb
or
enter
mov
into
jg
push
jno
mov
cmp
in
sbb
and
pushf
into
sub
xchg
repnz
gs
in
mov
gs
mov
inc
inc
test
mov
and
mov
mov
mov
mov
cwtd
sbb
das
sub
or
or
pushf
cmpsl
int
ss
cld
xor
mov
mov
mov
dec
sbbb
je
js
enter
das
ret
jno
arpl
call
mov
aam
lds
xor
dec
or
adc
xchg
and
cmp
fistpll
dec
pop
rolb
cwtl
fbld
jo
mov
xchg
pop
shlb
push
pop
xchg
xchg
dec
mov
push
mov
mov
cmp
divb
rol
mov
xchg
mov
daa
repnz
pop
aas
ret
sub
popa
sub
imul
movsb
xchg
pop
fucomip
leave
outsl
push
popf
iret
xor
es
inc
pop
and
ja
aaa
pop
jg
mov
jns
rcl
dec
js
ljmp
je
or
xor
ja,pt
cmpsl
adc
jp
cs
inc
in
push
ljmp
dec
dec
xor
mov
cmc
mov
inc
mov
and
mov
cmp
cmp
mov
mov
outsb
adc
daa
xchg
jae
adc
cli
es
enter
mov
mov
in
mov
push
cwtl
sub
mov
adc
orps
mov
test
push
sub
mov
push
cltd
test
in
push
or
lods
xlat
mov
mov
hlt
popf
sbbb
fstl
jo
nop
mov
xchg
loopne
shll
inc
push
cmp
sub
repz
add
loopne
rep
ljmp
mov
popf
je
jo
xlat
inc
frstor
repz
mov
daa
mov
jmp
jnp
roll
adcl
sub
test
les
mov
ds
cmpsb
fists
loopne
fsubs
mov
outsl
pop
pop
push
xchg
xor
jecxz
sbb
cwtl
sub
xor
ret
push
mov
dec
aad
pop
jge
in
xchg
cwtl
xor
fistpll
mov
pop
insl
out
sub
aam
mov
jmp
shll
test
adc
xchg
push
inc
orb
inc
jle
bound
and
cmp
dec
jbe
or
lods
sahf
les
jle
xor
adc
lret
sbb
leave
jle
stc
jge
pop
push
sbb
mov
notb
jge
add
pop
lcall
jo
dec
adc
sti
loop
or
push
cld
mov
or
dec
movsl
push
mov
xchg
dec
std
dec
cwtl
es
mov
movsb
jae
popa
mov
mov
or
and
add
leave
inc
ret
pop
movq
and
fdiv
lahf
jne
ret
adcb
sbbb
or
lods
aam
mov
and
sub
fiaddl
in
add
add
sbb
add
dec
lcall
jecxz
xchg
pop
orb
push
pop
pusha
and
popl
adc
xorb
cmpsl
or
insb
stc
pop
jns
inc
or
xchg
mov
mov
jo
mov
gs
clc
pop
hlt
xchg
mov
test
mov
in
push
cld
aad
mov
xchg
jb
and
jle
xor
das
pop
jno
mov
cmp
inc
cmp
sbb
push
push
dec
fxch
add
mov
outsb
pusha
in
mov
dec
repz
out
xchg
lret
sbbb
jae
repz
push
outsl
cmpsl
loope
iret
data16
pop
repz
pop
cmp
dec
fs
add
adc
aaa
nop
dec
jmp
lock
xchg
int3
add
insl
out
xchg
adc
dec
cmp
cmp
jge
inc
testl
cmpsb
xchg
gs
xor
sbb
cmpsl
mov
xor
ss
mov
xor
dec
jbe
ss
sub
mov
cli
in
xor
and
leave
jmp
pop
mov
sahf
xchg
sub
sbb
or
and
sub
sub
dec
aam
xor
test
pushf
popf
call
adc
mov
pop
aas
rcrl
addl
jge
orb
sbb
shll
mov
ret
pop
in
cmp
addl
in
in
xor
xor
aas
pop
jnp
ret
ficompl
mov
push
push
stos
inc
fidivs
lods
pop
cld
sbbb
sbb
cs
cmp
inc
mov
add
je
insb
push
mov
xchg
jl
xchg
jg
push
adc
cli
hlt
jle
xor
cmc
inc
popf
test
imul
test
xchg
pop
andb
ret
mov
or
pop
push
das
je
jno
ds
outsl
in
mov
push
scas
adc
cmpl
clc
pop
add
sbb
test
cmp
rcrb
clc
pop
xor
mov
jbe
push
lock
nop
ret
cltd
lret
add
jns
ja
jb
cltd
mov
stos
xchg
add
xorb
imul
pop
rclb
sti
lds
jmp
fidivrs
stos
sbb
push
sbb
addr16
mov
and
in
sub
sub
das
orl
nop
adc
dec
and
mov
mov
cmp
pop
inc
and
nop
loope
call
cld
icebp
sub
mov
arpl
cmp
hlt
dec
push
scas
imul
sub
jnp
pushf
mov
fcmovbe
cmp
add
jns
mov
xor
adc
xchg
std
jle
fildl
std
jne
cmpsl
test
mov
adc
les
addr16
cmp
stos
les
mov
inc
orl
in
imul
inc
out
mov
das
or
cwtl
sub
inc
jge
insb
cmp
daa
addr16
and
das
lcall
add
dec
adc
pop
fwait
dec
mov
daa
int
or
clc
es
jne
lahf
test
inc
lods
in
test
mov
push
imul
mov
ljmp
fstpt
mov
lret
jge
xor
adc
shl
push
cld
jno
cmpsb
shll
xor
add
shll
test
adc
je
sbb
je
mov
dec
push
xchg
fisttpl
iret
nop
dec
sbb
push
add
cmp
movsl
pop
shll
aam
cmpsl
sub
lahf
pop
movsb
jmp
pop
or
loope
jb
sbb
sbb
cli
sbb
push
xor
and
pop
stos
dec
filds
ljmp
xchg
imul
cmp
jo
lods
dec
insb
imul
sub
xchg
mov
cmp
movsb
fildl
mov
jg
lods
xor
into
shrb
pop
adc
inc
sbb
inc
gs
addb
out
jmp
mov
or
push
jns
fstpt
ficompl
lds
lea
subl
add
cmc
aas
fldcw
in
ss
and
push
stc
jle
dec
pop
push
mov
jge
mov
xor
movsb
mov
dec
dec
sub
mov
out
ljmp
cmp
out
lahf
adc
call
pop
adc
add
sbb
mov
nopl
mov
shr
repz
clc
jge
stos
xor
popa
fdivs
jno
mov
xor
or
mov
pop
test
cmpsb
imul
pusha
push
mov
fnsave
mov
add
mov
jle
iret
push
pop
aam
cmp
decl
rolb
add
mov
mov
xchg
fsub
in
push
loopne
dec
pushf
and
push
fwait
push
cltd
cmp
int
mov
xchg
lods
sbb
test
ret
cwtl
dec
gs
push
outsl
cld
test
repnz
mov
shl
cmpsb
dec
out
add
xchg
xchg
into
mov
test
out
aas
dec
repnz
pop
jg
repnz
lret
cmp
ds
nop
sub
xchg
ds
fmull
cmp
mov
xor
mov
js,pt
or
xor
cmp
gs
mov
mov
fucomip
xor
mov
and
es
jp
gs
sub
fstpl
and
ret
iret
inc
mov
add
xor
xchg
or
or
pop
pop
jnp
jg
xchg
icebp
inc
fwait
xchg
mov
in
inc
xchg
or
mov
adc
fs
roll
fldenv
loop
adc
xchg
mov
cli
cmp
add
lret
loopne
fld
mov
jbe
or
out
sbb
aad
fnstsw
mov
xchg
sbb
loop
out
cmc
add
into
sbbb
stc
mov
and
mov
in
cmp
jb
mov
jnp
das
adc
cltd
lods
sbb
dec
int3
std
mov
push
cld
cs
test
sbb
jecxz
pushf
push
aas
adc
jns
adc
mov
das
ret
in
xorl
or
dec
and
sarl
xchg
out
dec
jnp
dec
enter
and
movsb
add
ds
stos
adc
icebp
pop
sti
test
and
and
cmp
pop
icebp
in
pop
xchg
in
mov
jle
sbb
xchg
ja
cld
nop
add
jmp
lret
jp
lea
lock
je
test
push
mov
adc
mov
shll
dec
and
xor
and
jae
in
cmc
jmp
imul
shrl
mov
int
std
in
ret
jo
addr16
sbb
mov
add
outsl
and
cmc
jge
aad
pop
imul
mov
jo
es
out
sahf
out
push
add
movsb
adc
push
rcl
fiadds
shl
xchg
aaa
mov
inc
jge
cmp
subb
xchg
fs
jne
jne
out
imul
pop
pop
mov
mov
mov
mov
imul
add
xor
inc
pop
and
es
scas
in
mov
sub
push
loop
sub
adc
push
scas
mov
aaa
cs
nop
jmp
add
cltd
or
mov
aas
in
sub
enter
pop
xor
xchg
mov
adc
jmp
popa
es
mov
or
daa
push
loope
stc
lods
cmp
pop
cmp
sub
lds
in
aam
ror
lret
mov
out
mov
iret
incb
pop
jb
icebp
dec
shlb
aas
in
pop
mov
test
or
mov
lock
xor
pop
jmp
xchg
ret
inc
mov
xchg
arpl
add
sub
xor
inc
lods
ficoml
xor
and
ret
xor
js
xchg
push
into
mov
hlt
push
fidivrl
mov
fmuls
inc
out
push
xchg
push
xchg
inc
dec
mov
cmpsl
push
incb
pop
ja
cmp
out
sub
les
xchg
inc
jle
outsb
mov
mov
lcall
push
add
or
rorl
jnp
cwtl
xlat
add
addr16
stos
lock
sti
out
xchg
mov
mov
and
mov
lock
mov
sub
jo
lcall
add
push
xor
jb
mov
pop
jnp
xor
movsl
mov
test
dec
leave
mov
cmc
outsl
ret
je
lea
fwait
add
mov
xor
xchg
loope
sbb
shrb
pushf
imul
insb
sub
repnz
mov
insl
jle
or
push
stos
mov
loopne
xor
xchg
dec
cwtl
jle
cmp
ret
cs
idivl
test
xor
inc
adc
in
adc
mov
popf
xchg
mov
mov
movsl
repz
mov
shll
push
inc
jo
repnz
aad
out
notl
inc
jp
push
mov
sbb
push
lock
pop
sahf
add
subw
popf
mov
scas
outsl
push
mov
js
inc
ss
add
or
adc
insb
cld
mov
inc
adc
rcrb
ret
xor
adc
iret
adc
push
pushf
adc
addr16
bound
or
sbb
fisubrs
lea
cmc
cli
fcoms
adc
sbb
sbb
roll
stos
jbe
jecxz
jno
shll
hlt
ds
push
dec
inc
pop
fstps
or
jno
and
pop
daa
das
fsts
fstl
dec
jnp
xor
pusha
out
addr16
lret
sub
sbb
and
jo
mov
xchg
jp
push
outsl
xchg
cmp
movsb
add
mov
dec
mov
add
inc
xchg
es
shrb
xchg
fisubl
andps
aas
cmp
xchg
gs
popl
push
mov
jns
jae
pop
arpl
and
cmpsb
and
out
mov
sbb
rol
imul
mov
mov
jne
pop
dec
sub
ficompl
cli
push
test
imul
push
jg
or
add
xchg
push
xchg
dec
popf
sahf
jb
mov
jge
test
mov
inc
inc
and
fstp
sub
push
mov
daa
shll
imul
popf
clc
stos
fdivrp
and
repz
loop
mov
cmc
lea
inc
popa
jmp
sahf
popa
xchg
add
or
stos
inc
faddl
mov
stos
xor
cmp
xchg
leave
push
mov
lods
mov
inc
cmpsl
sub
add
inc
sbb
or
xchg
xchg
jnp
cs
sete
inc
mov
jp
icebp
sub
xor
xor
push
xor
mov
fimull
inc
popa
mov
loop
pusha
mov
cli
jo
lret
and
mov
test
icebp
jl
or
jbe
stos
std
cld
dec
jbe
loope
mov
fidivl
rolb
das
nop
sahf
xor
xor
jmp
cmp
jae
mov
pop
inc
in
repz
loop
popf
xor
mov
and
cmp
jecxz
add
pusha
daa
sbb
repnz
xor
out
push
fs
into
inc
xchg
jmp
mov
jg
pop
loope
ret
inc
rorb
ficoms
cmp
cmc
xor
lcall
and
add
xchg
xor
jbe
mov
lea
inc
inc
in
aaa
inc
sub
mov
out
inc
or
inc
mov
fldl
cld
outsb
outsb
adcl
into
imul
xor
sub
pop
dec
test
imul
arpl
movsl
mov
jns
adcb
movsl
push
and
sub
out
adc
sub
push
push
jae
push
stos
sub
call
sbb
outsb
pushl
mov
das
xor
xchg
lea
xor
test
stos
mov
pop
ret
ret
filds
jne
xchg
or
pop
test
dec
test
je
and
sbb
jg
mov
popf
cmp
pop
inc
mov
pop
adc
cmp
loop
push
dec
loopne
adc
sahf
loope
inc
add
les
out
and
inc
ds
lock
out
mov
mov
stos
aaa
pop
dec
xchg
mov
xchg
cmp
pop
fwait
mov
jge
lods
daa
pop
xchg
lods
adc
adc
push
fs
lea
jmp
in
xchg
xor
cmpsb
out
push
test
mov
jecxz
cmp
les
push
icebp
jl
fldenv
ret
push
push
insl
mov
cmpsb
mov
xchg
dec
jae
cmp
push
jo
pushf
hlt
push
mov
icebp
xor
je
jmp
xchg
nop
ljmp
stc
add
xor
mov
clc
xor
jnp
or
mov
stos
mov
xchg
out
dec
fidivs
cmpsb
cwtl
cli
jo
cs
adc
aas
stos
sbb
popa
jmp
push
push
in
push
jae
lods
movsl
mov
jbe
mov
adcb
in
std
mov
pop
rol
pop
scas
cmp
xchg
inc
jnp
insl
xor
jmp
outsb
aad
lahf
stos
mov
insb
xchg
sub
cld
mov
pop
and
ret
dec
daa
ja
cmpsb
xchg
into
int
cli
dec
test
add
aam
mov
pop
cmp
and
mov
outsl
mov
lods
pop
or
ljmp
addl
add
stos
add
jp
xor
sub
sbb
mov
cmp
subl
fdivrs
xchg
push
std
pusha
xchg
mov
xor
add
lods
sub
repnz
dec
insb
mov
mov
pop
es
sub
sub
aad
mov
push
and
aad
xor
cmpsb
rclb
lret
sahf
hlt
fbld
adc
in
in
and
mov
sub
inc
cmovae
out
push
ds
ret
mov
jae
mov
leave
aad
loope
jl
jbe
inc
cmp
add
add
cli
int
das
lahf
outsl
mov
gs
pop
xchg
push
push
adc
mov
rorb
pushf
inc
push
imul
sbb
sahf
call
fnstsw
pop
ret
adc
mov
int
jl
sbb
jno
das
test
stos
cld
cltd
xor
imul
mov
icebp
push
inc
jnp
dec
pop
int3
mov
imul
data16
xchg
fisubrl
mov
lds
sbb
ja
adc
mov
pop
sar
cld
inc
cwtl
cmc
push
mov
xchg
sub
jb
mov
daa
mov
rolb
int
gs
xchg
or
sub
dec
push
fstps
sbb
lea
aad
cmp
pop
lret
stc
lds
jno
sub
das
lret
aad
inc
or
fs
nop
lea
or
daa
adc
negb
push
cs
stc
adc
pop
inc
add
test
in
mov
xor
insl
xlat
imul
xor
xchg
bound
jo
and
or
mov
push
mov
pushf
jge
movsb
shrl
add
mov
fldt
push
jno
mov
lcall
or
xor
lock
pusha
mov
dec
inc
addr16
cld
ficomps
ds
shl
and
arpl
push
push
jp
xchg
mov
les
cmp
leave
negl
out
aaa
jne
faddp
sti
sub
mov
addb
int3
adcb
push
loopne
pop
frstor
outsb
pop
loop
repnz
sbb
mov
xchg
pop
mov
out
aam
mov
mov
cltd
fisubrs
shlb
push
je
cmp
inc
xchg
aad
stos
mov
aad
dec
adc
push
dec
bound
pushf
dec
lods
jecxz
cmpsb
fxch
inc
mov
fistl
add
jge
push
lahf
jge
jbe
jns
shl
push
cmp
in
pop
in
or
mov
mov
in
fstpt
js
shr
insb
cmpsb
cmp
inc
inc
out
loopne
loopne
cmp
fs
mov
clc
fldenv
dec
push
popa
sbb
subb
push
lret
popa
pop
jg
clc
pushw
inc
sbb
cmp
jp
mov
sub
cmp
push
out
movsb
insb
push
jno
mov
add
and
push
movsw
test
mov
out
jb
and
mov
mov
and
pushf
fdiv
and
movsb
test
mov
ljmp
movsl
pop
pop
mov
and
arpl
and
cmp
mov
or
fstps
dec
add
dec
mov
jmp
mov
cmp
sbb
mov
dec
inc
cmp
dec
push
icebp
cld
out
inc
lahf
jne
idivb
in
or
adc
ja
sbb
mov
std
mov
xchg
in
out
loopne
mov
ljmp
js
mov
rclb
repz
insb
sub
lahf
cmp
stc
insb
cmp
cmpsl
addb
sahf
insb
mov
adc
loop
sub
mov
xor
das
mov
push
fwait
xchg
repnz
mov
int3
cmc
or
stc
push
push
nop
pop
jecxz
insb
test
mov
in
and
mov
pop
xlat
stc
imul
dec
aas
mov
clc
cmpsb
iret
add
cld
int
repnz
jecxz
mov
sar
popf
sub
cmp
mov
aaa
pop
xor
jnp
xor
out
pop
xchg
in
add
cmpsl
js
mov
adc
push
cld
push
dec
in
ss
idivb
gs
stos
mov
aam
mov
cmpsb
jmp
out
and
cmc
pop
xchg
pop
hlt
cs
or
or
pushf
popa
cmpsl
jle
pop
xchg
adc
cltd
lcall
sbb
cltd
pop
ljmp
cltd
push
xchg
sbb
movsl
aaa
insl
xchg
lock
mov
xor
fwait
test
add
jnp
loop
dec
cmp
mov
mov
and
xchg
xchg
popf
mov
rorl
jne
cwtl
pop
cld
jecxz
push
pop
cs
push
lahf
mov
mov
in
mov
sbb
loopne
fxch
inc
sub
rcll
test
mov
push
das
repnz
jae
mov
cli
and
sahf
fcomp
pop
neg
sub
inc
add
mov
xlat
in
pop
mov
push
lods
or
fldl
mov
das
mov
cwtl
adcb
rcrb
cmp
orl
cwtl
adc
cmpsl
sbb
bound
fxch
cmp
stc
fdivs
push
aas
rcr
out
fidivl
lahf
ja
pop
repz
outsl
in
insb
nop
add
pop
and
pop
daa
or
imul
inc
sub
in
rcll
addr16
popa
in
fisttpll
mov
pop
imul
inc
loopne
rcrl
pop
cmp
js
add
mov
push
das
jbe
dec
loop
adc
mov
int
fadds
mov
dec
in
nop
cmc
iret
fidivs
insb
pop
sub
xlat
neg
andl
sti
sub
mov
push
imul
jns
popl
mov
mov
mov
pushf
mov
fists
push
rolb
movsl
fisubs
inc
mov
xchg
jbe
and
aam
jno
mov
cmp
out
aam
loop
fucomip
fnsave
pop
popa
into
add
mov
and
dec
jbe
jl
add
xlat
addl
push
aaa
leave
add
push
xchg
pop
es
inc
adc
inc
inc
sub
aaa
xor
nop
into
outsl
mov
js
test
push
imul
imul
outsb
lret
aaa
mov
stos
push
jp
ret
dec
stos
push
xor
js
jl
cmc
ror
movsl
lret
push
adc
lahf
inc
loope
mov
mov
js
sti
mov
daa
pushf
fwait
ss
dec
push
push
lcall
sub
cmpsl
mov
ret
xor
sub
jo
fstl
mov
mov
mov
push
or
push
mov
fcomps
push
mov
push
sbb
pushf
pop
mov
addl
mov
js
adc
mov
xchg
pop
and
icebp
adc
pop
push
loop
xor
or
mov
notb
cmp
test
imul
jnp
mov
lds
nop
mov
sbb
add
popf
xor
dec
pop
push
xchg
mov
xchg
pop
call
or
flds
imul
and
add
rcll
mov
int3
and
cld
jb
push
adc
je
add
popf
or
pop
inc
aad
stc
mov
nop
test
aam
sahf
cmpsb
mov
stos
xchg
sbb
test
push
push
sbb
jo
sbb
cmpsl
outsl
lock
stos
xor
mov
mov
xor
arpl
fistpll
repz
push
dec
jmp
popa
jbe
lds
push
arpl
lea
adc
and
cmp
pop
mov
and
push
call
dec
mov
cmp
in
cmp
or
into
test
mov
loopne
push
mov
outsb
aam
mov
lahf
xor
push
mov
mov
add
mov
jg
mov
mov
xchg
jge
cmp
xchg
adc
xor
adc
outsb
test
jl
les
data16
jno
xchg
hlt
fidivl
sbb
out
mov
push
sub
sti
popl
in
cmpsb
outsb
outsb
insb
movsl
mov
adc
cwtl
and
mov
ljmpw
fdivl
jmp
cmpsl
lock
xor
and
cli
stos
mov
fiaddl
pop
jb
jne
and
std
scas
cltd
data16
lret
push
dec
bound
sahf
push
out
daa
addr16
sti
out
or
xchg
sarb
sub
outsl
mov
adc
xchg
mov
or
jns
mov
push
daa
adc
cwtl
loope
add
add
jae
inc
hlt
insl
mov
mov
dec
mov
adc
jl
imul
shl
scas
push
adc
ret
push
mov
insb
sbb
lods
stos
imul
ja
mov
mov
mov
jg
jnp
in
cmp
stos
mov
idiv
mov
xor
cmp
jge
inc
dec
xor
pop
push
sti
or
xor
addb
push
shll
dec
insb
adc
sbb
mov
fidivrl
sub
adcb
out
xor
add
add
sbb
push
mov
enter
pop
xchg
lret
rcrb
movsb
int
inc
in
adc
push
pop
ljmp
and
hlt
mov
jnp
and
fbstp
xor
out
out
jbe
push
mov
cmp
push
fnstcw
imul
ret
dec
das
stos
mov
push
inc
xchg
pop
pop
imul
ficompl
xchg
adc
xchg
subb
add
push
repnz
out
mov
lret
insl
add
jb
sub
dec
jns
cmpsl
dec
jg
fcoms
daa
jle
daa
sub
xchg
push
push
cmpl
push
inc
inc
push
ljmp
pop
scas
ds
sahf
add
jnp
ds
mov
cmp
dec
jp
gs
xchg
dec
stos
sub
sub
lea
loopne
adc
setnp
fbstp
int3
dec
movsb
outsb
jbe
sub
dec
mov
ret
push
push
add
into
add
xchg
add
nop
outsb
mov
and
cwtl
inc
adc
mov
pop
mov
lock
mov
mov
loop
in
imul
inc
fstpl
xchg
cmp
aas
jb
fdivs
jp
cmpsb
inc
push
enter
mov
push
or
imul
imul
fsubl
dec
dec
arpl
xor
jne
stos
jle
cmp
push
cli
jge
shlb
icebp
adc
sub
jne
mov
mov
fldt
pop
shlb
fsubrl
pop
nop
sub
jnp
lods
sub
ret
icebp
xchg
cmp
dec
push
xor
cmp
push
gs
push
dec
test
mov
lea
or
push
add
cld
mov
shlb
adc
lcall
sub
push
aaa
mov
lcall
daa
aad
ljmp
dec
iret
cmpsl
jl
inc
or
push
insb
push
or
insl
lock
dec
sti
repnz
gs
je
push
add
test
test
hlt
push
inc
sbb
inc
inc
les
enter
inc
jecxz
loop
and
out
xchg
in
xorb
test
out
inc
jae
sbb
mov
jno
inc
cld
rolb
lds
mov
mov
mov
push
jecxz
ss
popl
push
ljmp
lcall
mov
jne
or
fxtract
aaa
pop
jl
pop
cmpsb
xchg
mov
iret
shrl
push
adc
and
subb
popf
adc
in
mov
ljmp
ds
dec
mov
xor
fdivs
lods
mov
mov
xlat
sub
mov
test
loope
out
adc
sub
movl
mov
push
out
fwait
cmp
mov
data16
icebp
inc
out
shr
ja
sarb
inc
mov
fwait
jp
icebp
out
xchg
jp
jle
enter
dec
push
mov
ret
jp
xor
xchg
push
sti
and
icebp
mov
mov
outsl
dec
mov
fwait
cmpsb
js
jmp
cmc
fcom
add
jno
or
mov
and
inc
cmp
sbb
dec
dec
push
imul
pop
aas
xor
sub
rdmsr
or
sti
fs
jg
movsb
mov
aaa
andb
insl
pop
mov
xchg
iret
adc
push
lcall
mov
rcrl
cs
mov
or
mov
lret
scas
adc
mov
mov
xor
mov
dec
ljmp
jecxz
cli
outsb
add
fisubs
in
jne
cmp
xchg
xchg
aam
pop
xchg
mov
adc
das
sbb
sahf
test
mov
dec
or
mov
lods
mov
test
xchg
adc
aam
mov
jmp
cmp
pop
das
sbb
add
push
sub
clc
jmp
cli
mov
mov
xchg
dec
popf
mov
add
orl
and
sahf
lret
cli
test
les
stc
dec
pop
dec
ret
push
lcall
out
in
cmp
cmc
cmpsl
sub
cmpsl
sbb
cld
ret
aad
xlat
xor
lret
daa
inc
je
lahf
inc
mov
movsb
xor
loope
cld
or
and
outsb
ss
inc
test
or
and
daa
stos
pop
jnp
out
out
xchg
cmpsl
rcrb
xor
rcrb
mov
xor
jecxz
jns
sbb
lahf
add
jmp
and
lock
and
popa
cmp
nop
idiv
mov
sti
popf
pop
jno
sbb
enter
out
mov
cmp
out
push
lcall
subb
sarb
divl
fdivrl
ss
into
icebp
mov
ret
sub
mov
pop
fsubs
out
push
and
mov
sub
fwait
jae
hlt
test
mov
jnp
xor
and
in
cmp
stc
adc
loope
push
imul
add
pop
or
fs
out
and
push
xchg
ret
dec
xchg
xsha1
cmpsb
dec
adc
adc
pop
or
add
mov
jle
outsl
jne
pop
inc
sbb
movsl
jmp
xchg
test
cmp
stos
jno
mov
cmp
test
lret
repnz
shrb
loop
add
adcl
mov
inc
mov
xor
sub
push
movsb
ret
sbb
pop
insb
stos
nop
daa
xor
jo
mov
sbb
shr
push
cmp
sbb
mov
xlat
mov
vmovupd
fidivrs
rcll
inc
push
adcb
call
lcall
pop
pop
lahf
fimull
daa
mov
mov
daa
push
jmp
jmp
jnp
push
inc
add
js
dec
cli
dec
je
and
fiaddl
mov
cli
insb
movq
mov
movsl
out
xor
testb
ret
mov
xlat
inc
push
movsb
mov
in
setle
add
add
and
mov
add
movsb
ja
and
inc
adc
mov
adc
push
pop
push
pop
in
mov
cld
stos
pop
int
cli
inc
addl
lds
fdivrs
in
insb
mov
gs
ds
jo
clc
push
es
adcl
lcall
std
dec
sbb
adc
sub
cmp
sub
loope
jbe
or
or
daa
push
adc
jp
loope
aas
sbbl
ds
sub
aas
fcomps
aaa
test
int
mov
pushf
cmp
jnp
idivb
es
retw
lcall
loopne
outsl
hlt
pop
xchg
dec
xchg
js
and
cmpb
jbe
mov
sub
jne
outsb
xor
cmp
lcall
daa
jg
aas
test
sub
xchg
ljmp
push
sarl
movsb
inc
mov
cmpsl
insb
ljmp
aam
lods
jo
mov
in
andl
inc
xchg
loop
lcall
dec
ss
scas
fldl
cmp
cmp
les
xor
jmp
jbe
fnstsw
fsubr
popa
sbb
iret
fcmovne
jns
xlat
push
hlt
cli
stos
lods
sub
jl
mov
negl
dec
push
pop
aad
aas
pop
bound
sbbb
or
add
outsl
mov
mov
mov
sub
xor
and
int3
shll
xor
mov
pop
or
jne
dec
pop
mov
push
pop
jnp
call
fisubs
aam
es
mov
ss
push
popa
pop
lret
stc
push
test
mov
cmp
orb
inc
or
ret
xchg
or
pop
sbb
pop
jnp
xchg
push
test
scas
lahf
sbb
sub
loop
nop
test
ja
and
cmp
or
jno
adc
in
dec
jg
and
call
mov
outsb
data16
lods
add
and
mov
cmp
sub
jmp
in
mov
sub
or
loopne
sub
mov
movsl
adc
lret
sbb
sub
js
mov
lret
imulb
add
out
push
sbb
inc
pop
mov
pop
ds
pop
xor
sub
inc
mov
add
sarl
fs
call
sahf
testl
jmp
cmc
aam
ret
or
dec
mov
scas
insb
lods
dec
out
and
out
or
icebp
xor
es
test
shll
lods
push
lret
jb
fisubl
pop
mov
dec
repnz
pushf
into
nop
xchg
test
xchg
test
pop
adc
push
mov
fisubrl
cs
ja
mov
faddp
subb
insl
jecxz
filds
popf
sbb
xchg
pushf
cli
daa
ja
fbstp
daa
sbb
fcompl
adc
mov
xchg
adc
lahf
cmpsl
mov
les
mov
pop
cli
insb
mov
and
inc
sbb
mov
xor
and
push
pop
xor
cmc
mov
daa
inc
sub
fisttps
mov
jb
cmp
push
cltd
xchg
in
jb
mov
les
shrb
jle
into
stos
cmpsb
sbb
push
inc
xor
add
scas
lea
add
gs
and
mov
pop
xlat
dec
adc
pop
test
movsb
mov
daa
inc
std
sub
aam
fsubrl
dec
mov
je
aas
or
fcmovnu
add
cs
orb
adc
push
imul
lret
sbb
out
jo
ds
inc
add
cwtl
fsts
int
add
dec
fisubl
ljmp
pop
and
outsl
inc
aaa
psubw
and
fisttpl
dec
pop
xchg
pop
cmc
cmp
fcmovnb
out
mov
xor
in
stos
adc
jnp
or
addr16
fisttpl
dec
mov
add
mov
push
mov
mov
imul
movsb
das
fs
pop
stc
sbb
imul
and
lahf
pop
arpl
daa
lods
or
pushl
fstp
push
dec
sbb
pushw
gs
and
mov
push
add
sub
stc
jae
jmp
and
lret
xchg
cmpsl
push
popf
rcrl
repnz
repnz
xchg
jmp
daa
add
popa
add
enter
popf
push
cli
add
jo
sbb
adc
mov
mov
sahf
aad
mov
sahf
mov
in
daa
pop
push
xchg
sbb
pop
stos
pushl
shll
lock
popf
add
das
cmc
lcall
loopne
inc
bound
adc
or
adc
loop
jge
dec
pop
sahf
jne
sbbl
sub
xor
andb
je
pop
fsubr
push
fcomi
bound
xor
adc
push
popf
clc
mov
mov
imul
jnp
sbb
mov
jae
aaa
jnp,pt
cmpsb
jecxz
hlt
aaa
or
aam
push
mov
pusha
mov
sub
sbb
xchg
mov
pop
ret
stos
sub
call
fs
push
cmp
cmpsl
cld
adc
xor
dec
sbb
in
add
xor
mov
and
cmp
inc
ss
call
cli
mov
pop
fsts
in
das
shl
ss
cmpsb
jae
and
out
lret
sub
adc
inc
mov
scas
iret
pop
leave
icebp
outsb
mov
ret
cmp
sub
js
bound
add
jbe
lahf
insb
mov
test
mov
add
repz
xlat
insb
xchg
xchg
jp
scas
icebp
cmc
roll
mov
pushf
pop
push
leave
and
addr16
sbb
inc
sub
mov
call
cltd
jl
rcll
addr16
hlt
cld
stc
jne
aam
in
xor
imul
xchg
cmp
negb
mov
mov
pop
push
mov
dec
mov
xor
jl
fcompl
xchg
push
jae
pusha
stos
xor
sbb
ss
imul
rcrb
stos
cmp
jecxz
mov
jae
cmp
cmp
rcl
stos
leave
ja
lds
daa
cmpb
cmp
lcall
or
pop
sbb
mov
jle
lods
push
into
and
icebp
fldenv
inc
mov
add
or
adc
mov
sbb
es
rol
lods
mov
pop
jge
jno
ds
int3
jo
pusha
in
dec
jle
push
pop
adc
sbb
iret
xor
xor
mov
sbb
pop
sub
aas
mov
sar
insb
jp
ss
and
jns
aad
outsb
add
nop
xchg
ret
jge
lahf
pop
push
push
jmp
or
push
stc
xchg
xchg
jbe
lcall
lock
pop
or
mov
push
bound
fwait
pop
mov
mov
lret
jmp
orb
imulb
mov
iret
sub
outsb
aaa
rcll
imul
inc
push
and
adc
ljmp
pop
xlat
cmp
mov
sub
or
popf
stos
sub
scas
or
loopne
push
jno
sbb
push
iret
jb
pop
push
jns
out
sbb
pop
and
dec
pop
xor
cmpsb
xlat
cli
jae
adc
loop
pop
cmp
sbb
out
lahf
fs
fs
leave
in
dec
pop
cmp
add
add
xchg
lds
jo
push
out
jl
out
pop
test
ret
das
jae
lcall
adc
and
loopne
je
enter
pop
pop
test
out
add
test
scas
xchg
fidivs
lret
xchg
mov
clc
push
jp
pop
xor
out
in
outsb
push
into
andl
subb
or
pop
out
mov
mov
or
out
jnp
pop
xchg
lods
aam
sub
cltd
into
je
inc
fadds
inc
add
scas
stos
or
mov
cmc
adc
adc
jae
fsubl
je
cwtl
notl
int3
and
mov
sub
hlt
push
adc
cs
adc
adc
rcr
fadds
int
leave
and
and
repz
dec
fwait
and
jg
call
call
hlt
mov
push
xor
sbb
std
shlb
lods
fstpt
or
lret
ficoml
andl
pop
outsl
mov
dec
rolb
ds
adc
divl
mov
lods
pop
int3
cmpsl
inc
xchg
adc
dec
into
rcrl
adc
mov
mov
and
xor
mov
adc
js
mov
scas
mov
pop
adcb
arpl
xor
push
sbbl
lods
repz
jmp
pop
shll
mov
xor
inc
adc
jl
inc
sub
mov
out
mov
sub
xor
sahf
daa
pop
add
lret
sub
mov
out
mov
xor
inc
inc
mov
movsl
pop
cwtl
and
jmp
lods
mov
inc
jo
xchg
scas
adc
jmp
push
pop
movsb
push
fwait
shrb
or
outsb
cld
or
inc
inc
xchg
into
jp
mov
jle
adc
subb
pusha
data16
rcrl
sub
jp
push
xchg
fsubl
lret
pushf
loope
mov
mov
insl
jge,pn
xor
shrb
test
pusha
inc
or
sub
cwtl
xor
int
scas
sub
or
int3
xchg
pop
xchg
inc
scas
push
mov
cmpl
cmp
aas
cmpsl
jle
fistl
mov
cmp
filds
sbb
mov
lret
mov
add
repz
and
dec
and
dec
aam
pop
push
cwtl
push
adc
cmp
cmpsl
daa
add
je
rol
fnstsw
jbe
call
sbb
cmp
mov
cmp
mov
mov
pop
decb
sbb
shll
push
mov
aad
fiadds
dec
jle
icebp
or
sarb
push
addr16
push
jle
adc
adcb
push
xor
inc
add
push
out
xor
push
pop
xor
in
sub
dec
test
mov
mov
cmpsb
ljmp
xlat
sarb
outsl
mov
fiadds
jp
xchg
addr16
loop
into
xchg
lds
repz
jmp
stos
daa
fistpll
adc
pop
xchg
push
dec
mov
sub
add
lock
xchg
cmp
mov
xor
mul
pop
mov
mov
mov
cmp
addr16
icebp
roll
call
cmp
sbb
int
cmpl
test
xchg
push
jb
dec
cld
and
in
mov
lret
imul
ss
push
lret
int
pushf
mov
fistpll
add
jp
in
pushf
sbb
push
xor
push
fistl
sub
jl
nop
cmp
ds
lock
cwtl
les
or
and
je
mov
imul
rclb
lods
inc
push
sub
cltd
cmp
inc
stos
fdivrs
insb
mov
inc
mov
ss
mov
call
cmpsl
ljmp
inc
dec
mov
fwait
mov
mov
adc
add
fsubrs
cs
subb
test
insb
adc
scas
or
mov
xchg
ds
push
shld
xlat
outsb
pop
fcomps
test
leave
stc
push
into
sbb
jg
sub
iret
dec
dec
sbb
mov
lahf
cld
mov
mov
dec
mov
cmpsb
lock
das
cld
in
ljmp
jl
sub
into
iret
test
outsl
adc
mov
push
rcll
loope
xchg
lret
cli
mov
test
inc
push
pop
arpl
xchg
aas
mov
adc
popf
mov
mov
mov
push
push
lea
jnp
aas
clc
pop
cli
fsubl
inc
jno
scas
adc
push
sbbb
xchg
push
mov
leave
fimull
mov
repnz
sbb
ljmp
jo
adc
mov
push
dec
scas
lcall
xchg
in
mov
add
outsl
and
dec
ret
push
xor
sbb
xchg
shl
ss
imul
adc
sub
fstps
adc
xchg
scas
fcmove
push
jp,pt
aad
and
push
sbb
call
inc
jbe
pusha
and
sub
lret
inc
hlt
pop
fs
or
jmp
xor
cmp
mov
jg
jae
shrb
push
fdivrs
cmp
jecxz
daa
push
pop
pop
cmpsl
inc
incb
dec
mov
pop
lock
packsswb
mov
hlt
out
ljmp
push
insb
jns
sbb
lods
mov
int
fldenv
xchg
mov
mov
mov
rclb
cmp
inc
cmp
or
adc
mov
hlt
push
push
in
pop
mov
pop
cmp
mov
fistps
sbb
jecxz
js
cmp
int
test
push
cmp
cltd
lcall
pop
mov
sbb
and
fisubl
mov
xor
call
int3
dec
pop
or
jmp
mov
sub
arpl
das
cmp
jp
mov
mov
inc
and
mov
scas
jb
cmp
insl
cmp
lods
gs
inc
mov
int3
out
div
pusha
ret
cltd
out
sbb
adc
cmpb
sub
xchg
sti
insl
mov
cmp
mov
bound
imul
add
cwtl
adc
and
or
or
cld
pop
jmp
subl
cltd
stc
lea
leave
lods
lds
add
mov
jl
rcll
fbstp
out
mov
mov
jno
loopne
ja
movsl
jl
mov
push
dec
inc
jmp
mov
std
xlat
in
popa
inc
pushf
mov
scas
cmp
lock
mov
sub
fsts
xchg
fmul
mov
leave
xchg
push
pop
sbb
mov
sbb
data16
shll
negl
data16
sub
shll
es
xchg
aam
adc
test
jne
xor
pusha
push
fwait
sbb
dec
sbb
repnz
sub
and
shrb
aad
jnp
sbb
xchg
push
adc
ljmp
cmc
mov
sbb
pop
rol
enter
push
sahf
adc
push
fsubrl
push
fidivs
repnz
icebp
lret
loopne
aas
inc
add
ljmp
xchg
or
stos
stc
xchg
aaa
cli
call
xchg
aam
push
fcoml
sbb
xor
ret
adc
lcall
ljmp
jbe
pop
mov
mov
aam
pop
inc
aam
xor
sbb
sbb
cld
test
and
imul
xchg
nop
rcr
mov
xchg
insl
outsb
roll
loope
fdivs
jo
cmpsb
xchg
jbe
jmp
jg
scas
cmc
jne
in
and
adc
xchg
push
and
dec
cmc
mov
xchg
sub
lds
mov
and
ret
fdivs
aad
lret
cmpsb
lcall
pop
aam
cs
aam
ds
lods
sbb
es
mov
hlt
push
nop
push
adc
aaa
ss
lock
mov
adc
adc
inc
mov
fcomi
out
adc
sub
sub
adc
aam
adc
out
clc
scas
nop
jmp
inc
lods
xlat
mov
sahf
les
sub
dec
insl
and
out
shlb
jns
in
push
imul
cmp
pop
and
push
dec
into
mov
mov
jge
pop
and
and
jnp
adc
dec
cmpsb
leave
xchg
sahf
jp
das
cmp
bswap
inc
ds
xchg
xchg
mov
rolb
push
or
adc
aas
enter
jnp
or
mov
cmp
inc
dec
lock
push
movsl
es
adc
clts
push
mov
pop
lock
fldlg2
or
stos
addr16
insl
xchg
das
rorb
rcll
fimuls
mov
jge
aad
aaa
fs
sbb
add
dec
sub
lcall
adcb
add
ss
and
or
add
jne
cli
jmp
in
add
cli
push
xor
or
adc
mov
data16
pop
adc
mov
dec
shlb
dec
mov
shrl
mov
sbb
rorb
pop
and
loop
nop
jno
mov
test
and
ss
jbe
fists
das
inc
mov
pop
cmp
push
rorb
pop
mov
inc
jae
daa
inc
adc
add
stc
pop
mov
mov
xchg
fwait
rcl
dec
push
jge
mov
xlat
lahf
fwait
mov
mov
mov
popa
push
dec
mov
xchg
xor
mov
icebp
sbb
int3
add
xchg
pop
or
mov
std
adc
notb
aas
sti
mov
pop
dec
cmc
ret
or
cmpsb
add
les
or
pusha
sbb
rcl
mov
int
sub
imull
xchg
out
into
out
arpl
push
test
aas
test
cmpb
xor
jb
dec
imul
test
cmpl
mov
adc
clc
jb
rcr
sbb
pop
sub
push
shrb
push
mov
or
int3
in
xor
divl
data16
lock
mov
mov
xchg
popf
cmp
or
aam
mov
leave
push
movsb
popf
into
icebp
popf
ficompl
loopne
int3
mov
cmp
loopne
cmpb
lock
loopne
mov
and
ja
adc
and
leave
incl
push
push
mov
jle
fs
mov
push
adc
decl
pop
out
mov
mov
iret
sti
push
out
out
incb
push
jle
or
mov
insl
clc
dec
jne
add
loope
cmp
data16
test
and
bound
sbb
adc
cwtl
ffreep
ljmp
mov
cmp
in
leave
je
out
es
daa
xchg
or
shll
cltd
es
mov
int
in
dec
cmp
mov
das
inc
mov
push
pusha
lret
mov
jg
lods
fsts
test
push
repz
pop
out
inc
movsb
xor
fucomp
rcr
leave
pop
or
add
test
shrb
xor
neg
mov
sbb
jno
mov
mov
jmp
xchg
divl
jp
or
cmp
cmp
addl
inc
ja
insl
mov
push
negb
ret
sub
push
addr16
adc
jo
int
jl
shll
cmp
pusha
fs
int
stos
mov
sahf
aam
sbb
les
mov
and
jns
pop
call
inc
hlt
inc
cltd
subb
ret
pop
mov
ja
push
sub
outsl
sahf
pusha
jmp
insl
jns
insb
lret
add
cmc
sbb
push
lds
fistpll
fdivl
add
int3
out
into
xor
imul
in
inc
pop
pop
xor
ja
in
jl
out
push
shrl
inc
pop
mov
imul
xor
add
lahf
mov
std
movsl
loope
jbe
idivb
loope
movsl
not
pop
xchg
movsb
fbld
icebp
adc
push
push
push
outsl
add
dec
stos
jbe
or
sbb
xchg
xchg
xchg
imulb
imul
mov
popfw
jmp
dec
scas
repnz
or
stc
dec
and
arpl
es
fwait
outsb
jo
jbe
push
ja
mov
xchg
jo
ss
inc
xor
mov
mov
pop
mov
jg
mov
sub
cmp
insb
adc
fidivrs
jbe
mov
jae
or
mov
div
xchg
lds
je
idivl
call
lcall
xchg
aas
xchg
inc
push
int
ja
scas
pop
pop
mov
fsubrs
lret
test
mov
je
mov
jge
int
mov
jno
mov
rcll
shrb
cli
add
ret
dec
push
call
clc
rcrb
mov
pop
xor
inc
inc
loope
xlat
orb
push
loope
jno
push
mov
and
add
sub
arpl
cmp
jle
mov
and
or
ret
jg
pop
test
daa
rolb
xchg
pusha
fnclex
cltd
lahf
xchg
jp
ret
shlb
shll
inc
lret
or
outsb
pop
ficoms
dec
mov
pop
test
dec
mov
pop
ret
shlb
sbb
scas
imul
push
ss
hlt
repnz
mov
shrl
pop
movsl
icebp
dec
ss
call
out
inc
loopw
dec
fwait
insb
stos
loop
std
mov
xlat
rcll
in
nop
divl
in
addr16
jge
push
rorb
lcall
xchg
leave
icebp
mov
mov
insb
das
movsb
mov
lods
sbb
je
add
pushf
mov
jmp
jle
add
cwtl
cltd
mov
into
inc
fidivrl
mov
mov
bound
scas
jl
adc
dec
notl
mov
jecxz
dec
idiv
dec
fisttpll
test
lcall
outsl
lcall
dec
stos
lods
or
push
dec
pop
sbb
or
inc
inc
or
inc
arpl
movsl
xchg
int3
sbbl
and
rcl
xchg
pusha
mov
movsl
cli
push
dec
inc
cmp
dec
mov
cli
sub
aas
pop
sbb
sub
insl
pop
push
outsb
and
das
jne
int
xchg
arpl
push
mov
and
jae
pop
cmp
sar
inc
cwtl
mov
aaa
inc
mov
ljmp
jl
mov
sbb
pop
outsl
inc
leave
fucomp
ja
pop
jmp
out
pop
dec
shl
xchg
lret
rorb
jmp
outsl
fs
movsl
fsubrs
fisttpll
mov
lcall
xchg
add
inc
cmp
jecxz
test
int3
pop
mov
test
scas
adc
sub
lock
adc
cs
cmpsl
mov
pop
adc
mov
fs
lcall
pop
jno
or
dec
pop
dec
xchg
aaa
jno
fldcw
imul
sub
hlt
jmp
jmp
mov
sub
repnz
add
mov
xorb
repz
clc
pop
push
repnz
sub
imull
cld
jmp
pop
xor
rcrb
sub
jg
cli
outsb
into
enter
data16
outsb
xchg
cli
les
push
mov
mov
rcrb
pop
mov
aas
cmp
dec
jmp
ficomps
mov
outsl
xor
sbb
mov
adc
and
out
or
jmp
je
das
dec
adc
incl
sub
call
js
popf
popf
fidivs
mov
mov
or
add
cmpb
jle
jecxz
xchg
cwtl
and
cmpsl
fwait
lea
fldl
stc
pushf
lahf
sbb
push
inc
test
in
icebp
xchg
add
push
cmp
jno
jle
mov
dec
jg
gs
rolb
fidivrs
add
xlat
sbb
dec
sbb
aas
xor
jae
sub
and
push
out
dec
sahf
arpl
add
sub
jb
flds
ljmp
dec
setbe
pop
jp
enter
aad
and
mov
movsb
adc
mov
cmp
mov
pusha
push
inc
hlt
fwait
sbb
mov
jno
sar
mov
mov
cmp
push
xchg
adc
repnz
push
out
cwtl
pop
dec
inc
out
adc
xchg
aas
mov
jp
int3
inc
mov
out
inc
decb
ja
rorb
movsl
lcall
xchg
std
scas
shr
sbb
je
sarb
inc
or
sub
xor
into
clc
xlat
pop
pop
mov
popa
nop
push
push
add
push
ret
mov
cwtl
outsb
mov
pop
ret
fwait
pop
jo
loop
ffree
add
pop
jmp
adc
scas
mov
shlb
imul
pop
dec
fistl
adc
jb
and
and
jae
daa
jno
inc
fidivrl
iret
push
xor
or
repz
testl
scas
inc
jbe
and
fistps
xchg
adc
and
icebp
shll
xchg
push
adc
cmp
test
mov
pop
adc
aad
in
mov
mov
add
es
inc
in
aam
loope
imul
hlt
adc
jmp
jp
into
adc
ret
js
out
je
sbb
lods
mov
cmpsb
pop
pushf
popl
xorl
dec
or
push
pusha
loopne
or
aam
push
lret
ret
dec
daa
pusha
gs
and
aaa
adc
adc
stos
or
cmpsl
dec
adc
mov
add
stos
mov
flds
jecxz
stc
bnd
add
mov
cmp
mov
xchg
inc
jb
push
into
out
lcall
and
cmpsb
push
loopne
xchg
xchg
sub
or
adc
or
leave
mov
dec
sub
jb
mov
push
mov
inc
xchg
stos
xor
mov
scas
mov
nop
push
or
push
lods
mov
loopne
out
cmp
dec
bswap
sub
loope
cmc
stc
test
lea
and
lock
prefetch
add
xor
pop
leave
aam
je
adc
rcl
push
sub
lock
or
push
inc
adc
scas
icebp
mov
iret
adc
js
mulb
adc
dec
mov
xchg
shl
mov
roll
div
dec
pushf
xchg
cmp
adc
movsl
insb
stos
jge
sub
shll
cmpsl
imul
cmp
mov
scas
out
jmp
ret
dec
and
fidivrs
mov
popf
mov
xchg
test
pop
cs
enter
add
jmp
push
bound
cmp
push
jge
jne
mov
adc
pop
push
mov
icebp
data16
les
lret
cmp
out
pushl
outsb
into
pop
icebp
pop
xchg
insl
jl
inc
push
imul
dec
fidivl
mov
leave
out
inc
hlt
push
sbbl
aad
int3
mov
leave
dec
dec
repz
ds
mov
cmp
lods
add
add
push
push
mov
sti
mov
stos
push
cld
or
xor
mov
test
push
jg
push
jae
inc
xchg
dec
sbb
and
fldl
jo
mov
nop
dec
loop
in
sbb
ret
ret
jbe
mov
cld
fwait
lret
sub
push
scas
mov
push
ret
or
jo
in
sbb
pop
inc
mov
int3
mov
push
inc
aaa
fmul
or
lock
hlt
rclb
sbb
mov
dec
and
cmp
testb
in
fists
and
and
pop
mov
mov
dec
push
xchg
sub
push
or
sbb
adc
aaa
call
adc
leave
aam
mov
dec
add
xlat
jecxz
and
shll
in
dec
jg
ret
iret
dec
cmp
add
mov
jmp
std
push
push
inc
inc
xchg
cs
outsb
clc
pop
jne
jbe
lods
pusha
cli
mov
cwtl
cmpsb
lcall
adc
aaa
jmp
mov
jb
push
sti
es
stos
pushf
mov
push
lods
add
inc
cwtl
cs
jb
inc
inc
jge
rorl
adc
and
push
jmp
fs
cmpsb
pushf
xor
pop
lret
dec
mov
icebp
pop
test
push
int
jmp
or
mov
or
xchg
add
jecxz
ljmp
aam
push
shll
xlat
xchg
jle
fadds
sub
jp
jge
xchg
add
cmc
cmp
aaa
cmp
and
mov
fistpl
push
sub
jecxz
rcl
pop
dec
in
loop
xchg
call
mov
inc
mov
adc
push
jns
xchg
ret
cltd
pusha
cli
cltd
lock
je
cmp
xchg
jge
xchg
scas
and
out
pop
mov
gs
cmc
call
mov
call
ljmp
pop
sbb
xor
mov
jecxz
xor
xchg
sub
mov
push
ficoms
adc
adc
aas
jge
aad
hlt
loop
popa
mov
sub
mov
sub
dec
inc
and
mov
fistpll
insl
cli
shlb
mov
test
xlat
jo
mov
xchg
test
cmp
orl
std
lret
cs
cld
arpl
fistpl
js
gs
lock
mov
into
pcmpeqb
mov
test
add
push
lock
push
jbe
lea
lret
xor
cmp
jp
mov
mov
sti
or
lods
pop
sub
jns
sbb
mov
loop
xlat
mov
inc
fstl
out
mov
cs
sbb
fsubp
sub
andnps
mov
stos
scas
jg
adc
imul
stc
je
outsb
dec
dec
mov
mov
arpl
sahf
dec
cmpsl
ja
cltd
push
loope
xchg
ficoms
outsb
clc
or
and
fisttps
or
adc
enter
es
aas
and
rorl
adcb
data16
jmp
jns
inc
loope
xchg
call
aaa
test
jbe
jns
lret
int3
mov
ret
int3
pop
xchg
test
sub
push
cmp
popa
test
gs
xor
aam
push
out
push
jns
xchg
movsb
shll
and
mov
inc
and
out
imul
inc
push
jno
sub
pop
mov
jno
push
xchg
sbb
out
pop
pop
loope
fwait
popa
mov
cmpsb
rorl
dec
mov
inc
sbb
mov
sbb
call
pop
adc
fwait
jle
js
dec
cmpsb
cli
int
iret
repz
pop
jp
cltd
xor
lods
ss
lret
in
aam
aad
lret
add
pop
sub
data16
repz
jnp
dec
ss
mov
imul
and
inc
aas
call
pop
add
xchg
dec
adc
rcr
insl
jecxz
sahf
pop
inc
and
jl
addr16
lcall
and
call
in
pop
mov
sub
sbb
test
pop
sub
xchg
push
lods
testl
call
call
pop
cmpsb
aad
enter
mov
andl
fwait
and
pop
add
mov
jg
push
ret
mov
mov
lods
dec
lods
cmp
pushl
xchg
aas
shlb
dec
xchg
rolb
inc
xchg
ror
sbb
adc
call
notl
call
in
sbb
pop
mov
sti
leave
cwtl
inc
xor
or
fwait
mov
add
cli
movsb
pop
jg
dec
lods
dec
idivb
mov
xor
pop
and
sub
inc
xchg
push
xor
aas
fwait
lods
pop
or
and
fisttpl
xor
mov
cmpsl
and
inc
cld
or
push
das
lcall
push
pop
daa
stos
xor
xchg
pop
and
fcmovnu
jmp
bt
fstl
mov
pop
fwait
pop
cmp
out
mov
pop
test
movsl
push
jmp
pop
imul
or
mov
leave
dec
xchg
outsb
adc
seta
stc
jns
das
sti
cmpsb
jle
jns
fwait
mov
and
insb
addr16
jge
decb
cmp
xor
adc
jo
pusha
into
mov
mov
pushf
push
sarl
sti
dec
std
jmp
scas
aaa
mov
mov
popf
out
push
stos
adc
inc
inc
add
mov
leave
inc
dec
aas
sarl
sub
inc
add
lds
jne
jl
mov
lret
fstpl
cmpsb
jmp
inc
cmpl
jmp
mov
and
lret
sub
addr16
ficomps
and
sbb
cmc
int
nop
inc
test
out
popf
outsl
repnz
pop
push
enter
sub
leave
mov
cld
push
jnp
rcrl
cmp
pop
in
pop
and
cld
frstor
cwtl
mov
cmpsl
stos
cli
jnp
adc
test
sbb
jle
icebp
xchg
testl
shll
repnz
lock
shlb
mov
pop
xchg
cmp
and
shlb
scas
repnz
ljmp
mov
in
push
sbb
add
popa
data16
pop
shlb
adc
sub
in
or
hlt
imul
out
addr16
leave
inc
je
js
or
add
push
shl
repnz
push
scas
nop
push
mov
push
stos
jns
iret
stc
call
jno
mov
push
addr16
popl
cmpsw
jecxz
inc
rcl
xor
mov
sub
repnz
ja
dec
inc
fidivs
js
cltd
push
cltd
lds
loope
in
mov
xchg
mov
js
pushw
xlat
sbb
jo
inc
push
push
jg
push
dec
inc
inc
das
shll
leave
mov
fs
sbb
mov
adc
mov
push
jp
or
mov
mov
test
stos
cwtl
mov
repnz
xchg
clc
pop
pop
rcll
test
xor
jne
aad
rcr
out
push
pop
inc
hlt
aas
mov
mov
inc
push
mov
mull
iret
orl
dec
lods
cmpl
not
fxch
sbb
movsl
and
mov
insl
pop
dec
pushf
loop
xlat
jo
adc
cmp
jno
popa
mov
bound
cmpsb
pop
lcall
xchg
xor
mov
cwtl
jb
movsl
std
jmp
movsb
add
xor
sbb
dec
inc
add
ret
into
adc
cwtl
xor
sub
inc
mov
loop
xchg
inc
push
cmp
adc
pop
lret
cld
mov
in
cmpsb
jns
shll
sbb
sub
dec
xchg
sub
mov
sahf
lds
adc
into
cmpsl
xchg
inc
push
pop
addr16
jo
pop
mov
pop
ret
or
fsubrp
jg
out
push
xor
pop
bound
fsubs
shlb
test
jns
in
jns
aad
stos
loop
push
and
sbb
add
lret
dec
xchg
pusha
mov
cs
mov
adc
aaa
cltd
push
xor
fistpl
jl
jb
in
mov
adc
mov
add
cs
mov
adc
sbb
xchg
add
ja
dec
mov
or
repz
and
movsl
daa
popf
lcall
punpckhwd
xor
adc
jp
xor
xchg
jp
pop
jb
adc
add
push
popf
xchg
sbb
cwtl
pop
fdivrl
mov
rcll
pusha
xor
inc
and
js
loope
dec
movsb
sbb
dec
inc
jne
xchg
int
test
cmpl
sbb
mov
das
push
data16
fcmovbe
inc
jg
inc
sti
iret
mov
fsubrs
xchg
jp
out
in
pushf
fisttpl
ljmp
xlat
jp
mov
jmp
int3
test
inc
lahf
daa
je
arpl
shl
xor
and
enter
inc
mov
jmp
sarb
popf
ja
aad
icebp
xchg
mov
xor
adc
shll
js
mov
js
loope
push
sub
sahf
or
clc
dec
add
mov
sub
xchg
add
push
test
cmp
cmc
push
into
jno
shrl
pusha
cmp
jmp
push
ret
ret
cmp
leave
stos
sahf
xor
sbb
mov
bound
das
mov
aad
enter
push
mov
pop
pop
test
dec
or
subl
push
jmp
not
insl
cmpsl
inc
ret
cmp
hlt
mov
pop
cs
pushf
icebp
shl
and
les
into
aad
sub
popf
mov
fsubrs
fs
mov
imul
jno
lods
pcmpgtb
xchg
and
xchg
lods
loope
fstpt
add
dec
or
pop
mov
mov
ret
jnp
cmp
inc
les
loop
and
cs
pop
xor
cmp
xchg
xchg
test
repnz
inc
mov
push
inc
in
push
jmp
mulb
sbb
addr16
mov
arpl
dec
mov
pop
cs
mov
clc
xchg
xor
mov
and
mov
or
scas
mov
xchg
push
pop
mov
clc
and
pop
dec
mov
pop
out
jae
out
add
scas
xchg
inc
das
and
and
pop
xor
testb
xchg
fiaddl
jns
negl
push
mov
int
mov
in
mov
ja
mov
cmpl
jae
lea
incb
adc
dec
mov
and
xchg
lcall
int3
push
arpl
andl
jno
jbe
push
je
orb
stc
mov
fidivrl
movsb
dec
xor
mov
and
inc
leave
jmp
stos
ficoml
fs
clc
mov
push
shl
dec
jne
mov
enter
shlb
mov
xor
cmp
mov
data16
pop
or
fs
daa
xor
and
lcall
out
sbb
push
test
sarl
cmpsb
inc
pop
ss
aaa
add
jbe
hlt
sbbl
data16
or
mov
cltd
jnp
mov
popa
mov
test
and
andb
adc
add
int
jne
or
mov
adc
pushf
popf
cmp
cmp
mov
addb
hlt
mov
or
and
scas
add
sub
lods
inc
js
imul
adc
lcall
movsl
or
dec
inc
leave
cli
xchg
and
imul
shll
xlat
in
in
adc
mov
ja
cmp
movsb
add
movsl
inc
sub
repz
cmp
jae
stos
aam
mov
std
adcl
lcall
add
push
nop
pop
mov
cmpsl
or
push
pop
pop
xchg
ds
xchg
mov
push
mov
push
orl
push
add
or
mov
ds
sub
cld
sub
dec
xchg
inc
or
mulb
push
cltd
shll
setp
je
int3
int3
dec
stos
push
inc
scas
mov
arpl
shrl
data16
ficompl
gs
cmp
xchg
test
cmp
sbb
pushf
cli
sbb
adc
or
shr
in
jne
dec
push
mov
lahf
cmpsl
cs
scas
insb
repnz
fnstenv
cld
mov
dec
or
adc
repz
cmp
mull
sbb
inc
xchg
test
cmp
xchg
lds
sub
sbb
ljmp
inc
dec
xchg
aad
and
mov
push
mov
pop
movsb
fucomi
jnp
or
shll
je
fs
bound
repnz
test
scas
jle
imul
mov
cmpsb
push
nop
inc
inc
mov
push
add
testl
out
jb
dec
mov
xchg
mov
inc
icebp
in
fldenv
lahf
xorl
les
imul
movsl
xchg
ljmp
jl
addb
daa
ds
mov
adc
sbb
fwait
pop
test
adc
pusha
mov
sbb
xlat
add
inc
ret
test
cmp
imul
aam
jnp
cmp
xchg
mov
pop
fidivrl
out
add
in
test
inc
sub
mov
out
cmpsl
mov
xor
xor
es
add
push
lock
pop
ficoms
adc
mov
cmpsb
sbb
lea
lods
popa
inc
push
cmp
push
jle
pop
sub
mov
adc
hlt
pusha
ss
inc
mov
mov
inc
popa
and
gs
push
outsb
rolb
dec
mov
xor
sbb
outsb
mov
xor
jno
mov
mov
add
and
dec
cmp
fistpl
lahf
rolb
mov
outsb
inc
pop
or
out
or
lret
test
inc
pop
in
xchg
mov
push
dec
sub
mov
dec
outsl
fidivrs
call
cmp
pop
push
sub
mov
push
mov
xchg
aaa
mov
push
mov
out
inc
int
ds
in
inc
or
sbb
ret
cmp
xchg
lahf
push
je
mov
jle
push
dec
idivb
aas
movb
xor
adc
frstor
jge
push
inc
rolb
inc
mov
js
mov
jmp
into
adc
sbb
mov
push
xchg
repz
jo
jmp
dec
or
mov
xchg
sbb
cmpsb
ss
lcall
pop
test
aaa
inc
mov
stos
push
ljmp
fadd
and
jns
or
inc
leave
or
sub
sbb
enter
imul
xchg
call
dec
sbbb
stos
adc
mov
aad
push
imul
cmp
andl
jo
xor
stos
fsts
lock
scas
push
jge
mov
add
jno
in
mov
rorl
inc
rcll
ljmp
inc
adc
cld
sbb
stos
or
push
dec
adc
mov
out
imul
cmp
stc
in
call
jb
ljmp
bound
fistps
mov
je
xor
xchg
xchg
popa
jge
out
lods
sti
inc
fisubl
fsubs
jle
lock
cli
imul
loop
out
dec
push
test
fs
jno
movsl
adc
cwtl
jl
stos
pop
push
aad
mov
loopne
mov
loopne
ret
js
jle
mov
sub
in
stos
mov
jbe
pushf
sbb
mov
aaa
ja
dec
cmp
int
adc
lea
iret
xchg
push
shrb
mov
xchg
insb
jae
mov
xor
mov
xchg
fwait
dec
pop
mov
pop
js
clc
icebp
cmpsb
mov
jmp
pop
sub
push
mov
mov
xchg
add
out
loop
call
sub
push
sbb
and
dec
add
dec
xchg
jo
mov
xchg
test
inc
clc
xor
xlat
xchg
aam
popa
lret
repz
xor
lea
pop
jmp
addr16
adc
xchg
xchg
ret
jbe
in
jns
mov
fidivrs
xorb
mov
or
sahf
cmpsb
mov
cmp
ja
bound
pop
cmp
fs
adc
ret
js
out
loope
xchg
mov
inc
frstor
out
pop
mov
and
in
adc
pushf
cmpsb
ret
mov
stos
push
xchg
test
in
sub
popf
lock
nop
push
jge
movl
mov
sub
pop
cmp
push
enter
cmp
nop
mov
push
jmp
test
ds
inc
sub
xchg
stc
test
sbb
testl
aas
out
fdivrs
stc
mov
jecxz
add
push
jmp
int
ljmp
xchg
bnd
lahf
mov
mov
movl
std
inc
mov
bound
inc
pop
pop
xor
repz
loopne
dec
and
xchg
jmp
loop
xor
pop
push
fisttpl
mov
adc
aas
lods
dec
mov
cmc
mov
test
into
lds
test
imul
pop
mov
mov
lods
stos
mov
add
adc
ret
stc
jne
push
jge
cmp
stos
daa
adc
subl
mov
cwtl
add
xchg
xchg
adc
xchg
push
sub
in
adc
dec
out
cmpl
pop
rolb
mov
mov
adc
adc
pop
jae
dec
sub
lods
call
scas
hlt
push
ret
xor
into
mov
sub
pop
loopne
hlt
clc
stc
repz
mov
dec
popf
mov
repnz
xor
data16
adc
mov
cmp
je
in
lods
mov
in
sbb
cltd
pop
jmp
push
inc
insl
inc
fwait
out
xchg
push
ljmp
negl
mov
adc
and
inc
mov
out
aam
xchg
jl
sarl
xor
mov
xchg
and
xchg
mov
enter
adc
loopne
imul
mov
jecxz
push
jecxz
ficoms
jb
or
cwtl
fsubs
cmc
jge
daa
xchg
mov
jo
jl
mov
int
cltd
clc
mov
scas
mov
daa
movb
xchg
inc
and
filds
in
mov
test
aad
jl
mov
loop
loopne
push
enter
ret
push
addr16
movsl
insb
sarb
dec
ret
or
adc
cmp
int3
push
xlat
insl
xchg
scas
push
cmp
loop
add
test
inc
call
icebp
mov
sbb
xor
lcall
xlat
mov
fistl
xor
inc
scas
es
shll
imul
push
loopne
add
mov
es
xchg
or
pop
xlat
cmpsb
bound
stos
xor
cwtl
pop
test
lret
sub
out
pop
fidivs
rcll
or
test
out
jbe
and
cmp
mov
adc
fisubrs
pop
fs
outsl
and
pushl
cmp
mov
in
mov
jmp
xor
cmp
shll
lahf
jae
ds
jbe
adc
xchg
mov
sub
out
pop
xchg
jns
incl
push
sbb
lock
xchg
push
int3
cmp
push
inc
stos
pop
pop
cwtl
sub
xchg
mov
out
loope
pushf
push
in
push
fnstenv
loop
push
cwtl
xlat
lock
push
out
ljmp
dec
cmp
cltd
lock
xchg
pop
shrl
mov
fcmovu
ret
lret
aas
insl
leave
mov
ret
add
pop
or
jae
aas
in
inc
aas
test
cmp
inc
test
mov
in
xchg
jnp
dec
ret
inc
ds
fdivrs
add
inc
dec
pushl
arpl
jae
iret
mov
bound
loopne
cld
jmp
xor
ljmp
adc
jge
adc
outsl
ret
dec
scas
sbb
bound
fs
in
stos
sti
lods
js
leave
vmovddup
fldt
mov
mov
adc
mov
vpcmpeqw
mov
lea
test
roll
sbb
mov
push
jle
movsb
popf
inc
mov
mov
cld
jmp
pop
add
inc
repnz
subl
inc
pop
inc
repz
fistpl
jnp
jnp
clc
sub
push
nop
orl
xor
sbb
pop
adc
cmc
pop
les
push
insb
leave
stc
mov
icebp
dec
sbb
cmp
in
inc
mov
ljmp
mov
adcw
repz
xchg
pop
xor
pushf
inc
xchg
cmp
or
dec
xchg
mov
fs
flds
addr16
adc
les
sti
lahf
sar
xor
jecxz
fcoms
xchg
push
inc
dec
sbb
call
or
outsl
mov
stos
push
mov
hlt
repz
pop
cmp
inc
cli
mov
outsb
push
lahf
add
jae
push
push
and
je
lea
in
or
lret
jbe
sub
jbe
mov
add
pop
orl
sbb
ja
call
push
jo
lret
xor
aas
pop
cmp
dec
dec
jbe
sbbl
jb
sbb
adc
cli
scas
jnp
ljmp
sub
lret
aas
adc
push
xor
pop
dec
push
in
dec
mov
pop
pop
sbb
mov
mov
dec
ja
out
add
inc
adc
cld
lds
enter
mov
jg
fiadds
pusha
mov
or
xlat
adc
push
mov
movsl
dec
cmp
pop
out
add
int
mov
aaa
cli
and
mov
leave
ja
popf
jg
xchg
xchg
jl
bound
ljmp
push
mov
movsb
mov
shll
and
idivb
jno
dec
or
adc
mov
add
jg
jmp
and
mov
xor
dec
insl
sub
inc
icebp
cmp
jns
icebp
lods
mov
adc
outsl
xchg
pusha
sub
add
dec
fwait
xor
icebp
rcrl
pop
push
jecxz
mov
adc
or
and
mov
push
adc
xchg
imul
cmp
add
pop
cld
and
cmp
popl
cs
insb
rcr
add
bound
xchg
mov
add
outsb
cmc
dec
andb
cwtl
aas
daa
or
ret
aad
cld
push
es
xchg
adc
popa
call
pop
xor
lds
inc
xchg
xor
cltd
into
or
mov
pop
jmp
rcl
adc
sti
or
repnz
dec
mov
cmp
fnstcw
das
mov
pop
repz
push
mov
and
adc
mov
orl
xor
insb
add
mov
stc
dec
clc
inc
test
mov
jmp
and
dec
imul
mov
xlat
rorb
mov
mov
xor
aaa
iret
fidivs
add
and
lret
int
mov
lods
lret
adc
mov
movsl
int
sbb
and
mov
or
out
out
xchg
dec
rcll
pop
cltd
test
pop
xchg
popf
movsl
sub
leave
jecxz
rcrl
sbb
aaa
sbb
inc
mov
popf
aas
jo
fs
jno
repz
or
push
test
add
cmp
les
sub
jecxz
and
rorb
inc
sbb
test
xor
sbb
push
push
stos
enter
aam
fbstp
push
clc
es
test
cmpsb
mov
orl
lret
add
sbb
cmp
imul
pushf
xchg
dec
fidivs
test
sub
movsb
movsl
lods
push
sbb
inc
inc
or
rorl
mov
cmp
jne
fdivs
lods
jg
push
je
xchg
fisubrl
rorl
dec
xor
adc
adc
sbb
mov
jle
inc
ja
add
scas
jecxz
in
clc
iret
insl
fwait
ja
mov
xor
or
cmc
jp
lods
xor
or
xor
insl
negl
setb
ret
cld
shlb
mov
add
gs
push
ja
or
mov
lcall
mov
pop
mov
push
push
push
cmp
sub
pop
inc
xchg
ret
pop
dec
arpl
outsl
or
in
sub
ds
xchg
test
and
flds
dec
rorb
and
pop
lret
sbb
aad
repz
sti
out
add
push
repz
cmp
and
scas
jecxz
mov
movsb
xlat
fisttps
cld
les
cmp
xchg
pop
pop
mov
mov
subb
mov
pop
dec
mov
jb
cmpsb
cwtl
insb
mov
jno
mov
mov
dec
inc
xchg
lahf
outsb
aam
or
bound
out
jne
and
clc
pusha
shll
in
mov
push
orl
idivb
out
xchg
jbe
inc
movsl
scas
push
adc
mov
jg
mov
int3
aam
cmp
lahf
mov
test
add
mov
cmp
sub
xchg
mov
or
dec
cwtl
test
das
or
std
icebp
lds
sub
push
daa
daa
in
aad
pop
pop
xchg
sub
fadd
jb
aam
mov
mov
roll
mov
or
je
cmp
cmp
lods
cmp
dec
stc
ja
mov
sbb
in
subl
inc
ret
out
pop
test
pop
mov
test
dec
xlat
cmc
out
movsb
out
sbb
pop
cmpsb
insb
pop
dec
addr16
test
sub
and
test
inc
in
push
fimuls
sbbb
cmp
adc
int3
mov
adc
add
add
popa
icebp
push
je
ljmp
dec
nop
jg
mov
xor
cmc
test
jge
popl
stc
iret
or
jbe
mov
imul
insb
cmp
cmp
pop
add
gs
or
jp
push
pop
mov
lock
xlat
icebp
in
shrb
xchg
arpl
xchg
sub
movsl
out
push
cli
cmp
jns
mov
aam
inc
mov
inc
mov
aad
test
arpl
testb
sub
je
shlb
test
mov
mov
inc
in
push
inc
imul
inc
test
fbld
jle
dec
add
xchg
lea
lods
inc
packuswb
fnstcw
and
mov
mov
out
flds
sbb
gs
jae
notb
ret
inc
stos
mov
mov
dec
pop
or
jae
jb
pop
adc
cltd
aas
jae
adc
fxtract
inc
das
adc
das
pop
xchg
mov
pushf
adcb
xchg
xchg
test
sub
sub
das
arpl
movsb
mov
xchg
jbe
fstpl
or
sub
cwtl
out
push
or
test
push
sti
aad
mov
lea
mov
or
dec
xor
les
adcb
subl
xchg
int
jnp
or
popf
std
in
sbb
or
cmpsl
sub
sub
mov
cmc
xor
daa
pop
pushf
and
sbb
in
dec
cmpsb
sbb
loope
test
iret
out
mov
inc
cwtl
sbb
popf
or
sub
stos
mov
and
add
icebp
fnstenv
popa
mov
lds
sub
rclb
mov
aaa
mov
mov
sbb
lds
lds
jle
fsubl
jmp
sbbl
jmp
sti
mov
xchg
push
and
pop
es
les
call
xor
push
ret
adc
or
mov
shll
cmpsb
gs
divb
jo
mov
push
outsl
je
insl
cmpsl
insb
ret
jbe
fstl
dec
add
push
mov
jns
mov
minps
push
jnp
jno
push
mov
cld
add
test
sub
arpl
inc
loop
js
cmp
push
mov
mov
bound
imul
sub
ficoms
fdiv
push
sar
inc
add
push
jge
or
push
cmp
mov
mov
fiaddl
lea
ret
adc
js
int
xor
and
push
sbb
popa
cmc
repz
pop
adc
sub
leave
adc
pop
daa
loopne
mov
pop
mov
loopne
in
pop
sti
push
sahf
jmp
out
xchg
inc
divl
xlat
fstl
pusha
pop
fmul
dec
popa
mov
jae
sbb
or
pusha
push
test
add
pop
mov
std
pop
jge
out
mov
inc
daa
dec
outsl
sub
cmp
enter
mov
sub
out
xor
je
and
fadds
pop
orb
movsb
pop
push
cmpsl
or
or
iret
imul
mov
push
add
sbb
repz
inc
jns
dec
cld
dec
std
push
mov
popf
fsubrl
insl
in
mov
pop
xor
sbb
cld
add
add
and
jb
test
mov
adc
sbb
outsb
faddl
adc
outsb
mov
jo
cld
dec
cli
hlt
jae
sbb
fwait
push
push
cmp
in
jge
stos
mov
mov
sahf
imul
and
repz
fst
rorb
jecxz
rcl
xor
xchg
mov
sbb
lahf
or
pop
xor
out
mov
and
push
xchg
xchg
orb
popf
aaa
aam
cmpsl
cmpsl
sbb
xchg
inc
fstps
repnz
out
imul
pop
cmp
cli
xor
dec
call
cs
jbe
js
int3
outsl
loop
jp
jnp
incl
sub
sbb
and
mov
out
mov
sahf
out
mov
cmp
andl
cld
fdivs
arpl
sbbb
ja
mov
mov
inc
cli
loopne
mov
sbb
mov
hlt
jne
push
dec
sbb
inc
fistl
andb
xor
dec
outsl
je
fidivrl
stos
in
mov
sti
out
sbb
fnsave
jecxz
cmp
push
lahf
jg
leave
daa
mov
push
sbb
dec
into
add
pop
inc
out
mov
jmp
stos
movsb
dec
neg
inc
nop
stos
sbb
std
lods
test
xchg
outsb
lea
mov
xchg
aad
cmp
xchg
out
clc
xchg
leave
pop
mov
jno,pt
cmp
lahf
mov
data16
sub
jmp
mov
test
sbb
or
xor
sbb
pusha
mov
nop
popa
fwait
sub
aam
lahf
in
fs
mov
gs
mov
outsb
lret
inc
xor
test
and
or
adc
shrl
not
adc
mov
push
mov
lret
dec
xlat
add
cmp
outsl
inc
cmc
xor
orb
jge
ficompl
ja
xor
mov
jg
mov
cmp
cmp
aas
push
insb
jp
mov
mov
adcl
jns
mov
cmp
js
xor
push
cltd
stos
push
push
aaa
fisubs
into
enter
inc
loop
xchg
xchg
cmpsl
push
aad
ja
cmp
or
dec
cmp
or
in
test
lret
movsl
orl
repnz
subl
push
es
mov
xor
in
mov
mov
mov
xchg
iret
sub
pop
lods
or
out
fs
pusha
dec
or
xchg
mov
pop
out
in
dec
cmp
sub
sarl
push
cmpsl
pop
push
jnp
cld
outsb
or
fnsave
out
and
add
stos
into
and
incb
das
sti
scas
test
aas
and
div
mov
pusha
movsb
out
stos
fwait
ret
jl
xchg
pop
mov
mov
hlt
mov
pushf
fiaddl
dec
fiaddl
push
ds
sahf
lret
dec
add
cld
cmp
dec
bound
jle
jae
jp
hlt
mov
lock
xlat
jl
addr16
adc
jo
push
aam
in
in
in
popa
push
xchg
jmp
stc
movsl
leave
les
ljmp
add
mov
and
sbb
ja
inc
and
add
cmpsl
in
mov
xor
in
push
sub
cmp
mov
push
leave
testl
jl
std
mov
mov
mov
ss
dec
ljmp
cmp
inc
mov
xsaves
xor
subl
mov
xchg
nop
dec
jnp
mov
cmp
mov
push
mov
mov
iret
mul
test
mov
push
test
js
sbb
insl
mov
push
jg
aam
pop
jp
cmp
gs
mov
jno
mov
dec
dec
test
push
mov
pop
cs
scas
mov
sbb
into
lock
push
jns
imul
pop
not
inc
sahf
ss
in
pop
adc
cmp
lea
lea
stos
xlat
jge,pn
shrb
pusha
test
or
cmpsb
hlt
sahf
jmp
jnp
jo
aad
rcl
rorl
pop
lret
jns
sub
or
xchg
lret
stos
les
addl
jnp
sub
dec
sbb
iret
test
cmp
add
ret
call
out
roll
adc
xor
adc
adcb
aad
adc
addb
loope
pop
sarb
cmp
push
pop
jno
cmpsl
dec
push
ret
dec
dec
jge
adc
sbb
ljmp
jmp
lods
dec
pop
sbbl
movsl
ret
pop
mov
lahf
ret
shlb
inc
call
push
fs
sahf
negb
pop
rep
fidivrs
jp
leave
mov
test
mov
jge
mov
mov
outsl
in
ds
stc
jl
aad
movsb
test
cmp
testb
mov
loope
cld
movsb
stos
cli
call
sub
push
mov
stc
jne
lcall
cmp
add
mov
sbb
test
inc
out
pop
mov
hlt
rcl
mov
insl
dec
jl
popf
clc
nop
stc
xor
or
int3
inc
int
into
xor
mov
mov
dec
into
in
pop
xor
test
lcall
xchg
movsl
repnz
mov
lcall
mov
xor
das
fwait
sarb
movsl
push
in
pop
mov
sub
insb
push
aad
fadds
inc
push
insl
cmp
sbb
lret
inc
jne
push
sub
inc
lret
fldenv
xchg
and
push
loopne
sub
inc
jl
insb
mov
fwait
out
imul
popf
and
lret
sti
jne
out
jle
out
je
iret
je
movsb
sub
dec
mov
pop
leave
xchg
mov
xor
jae
test
enter
out
scas
xor
mov
fnstcw
out
test
jnp
std
out
mov
adc
jae
into
jnp
sub
cwtl
xorb
sarb
inc
lock
mov
adcb
xor
jmp
push
insl
outsb
movl
pop
dec
imul
in
fwait
jno
push
or
inc
jge
icebp
lds
lods
adc
push
jnp
cmp
lcall
push
dec
push
mov
lods
stc
hlt
and
pop
test
and
test
nop
scas
lret
mov
and
mov
mov
lret
pop
xchg
jg
xor
jbe
push
mov
or
add
lret
into
scas
call
in
sub
repnz
pushf
lods
push
pop
inc
mov
sub
subl
stc
inc
xlat
jge
or
imul
xchg
aaa
jl
push
pop
pop
pop
lea
or
cmp
or
loope
add
xor
inc
xor
ljmp
pop
mov
ss
das
and
enter
shlb
out
inc
push
mov
push
les
aas
fs
adc
dec
sbb
icebp
cmp
das
pusha
enter
pop
mov
adc
popa
cmpsb
pushf
mov
mov
cmc
movsb
and
jbe
pop
push
pop
mov
pop
das
sbb
push
adc
lods
popa
inc
mov
ret
mov
add
dec
mov
fs
mov
sub
leave
add
loopne
mov
mov
jge
add
cwtl
inc
pop
jnp
fstps
lret
and
cmp
xor
add
mov
sbb
xchg
or
push
ss
xchg
sub
dec
lret
stos
cs
cmp
nop
aaa
and
enter
test
scas
cmpsl
out
xor
sti
fmull
std
pop
call
dec
lret
fcmovb
cs
push
pop
add
cmp
pop
mov
lret
inc
cmp
pop
xor
lret
jae
xchg
push
shll
std
adc
inc
and
pop
data16
inc
cmpsb
in
add
outsb
outsb
popa
loop
mov
mov
push
cmpsb
xor
mov
call
aam
mov
xchg
push
inc
dec
push
jg
adc
add
popf
dec
mov
fstp
jecxz
add
cmpsl
mov
adcl
loop
call
dec
cwtl
mov
sahf
test
in
mov
ljmp
push
loopne
mov
adc
rcr
out
lea
mov
push
and
ss
jne
push
aaa
cwtl
test
jno
mov
cmp
pop
mov
addr16
push
cs
addl
lret
arpl
test
stos
icebp
jo
push
mov
inc
rorl
call
mull
sbb
push
push
roll
fsubrl
aad
mov
cli
movsl
lods
jbe
mov
out
lahf
subb
push
inc
add
leave
jecxz
mov
andb
jb
shll
adcl
mov
dec
jp
lods
test
or
into
jnp
inc
cmp
xchg
mov
es
mov
repnz
jge
xchg
xchg
jg
cmp
popa
sub
xchg
loope
xchg
fsubs
lret
mov
xchg
outsb
pusha
arpl
mov
add
mov
call
nop
push
mov
inc
inc
dec
cmp
xchg
add
xchg
adc
or
xchg
aaa
loop
lahf
add
xchg
push
test
xchg
lret
add
mov
jmp
shlb
push
int3
iret
push
push
jmp
dec
das
fldcw
nop
ss
lock
push
sbb
mov
lcall
jge
in
sarl
loop
gs
mov
div
lea
adc
mov
mov
loope
xchg
jb
aad
out
sub
test
mov
rcrb
mov
data16
xor
jbe
jmp
rcl
cli
out
cmp
mov
test
into
jno
push
jns
testb
fistpll
sbb
sbb
insb
jbe
fsubl
out
mov
dec
out
and
xchg
nop
int3
jbe
movsb
sahf
arpl
xchg
dec
jnp
xchg
xor
jge
pop
and
pop
shl
and
test
cmp
jl
sahf
insb
pop
pop
bound
mov
pop
jb
add
jns
sub
mov
pop
in
xor
inc
scas
dec
ret
jl
pop
les
das
aad
fistpl
daa
insb
cmp
call
mov
mov
fs
inc
pop
cwtl
pop
das
into
mov
cli
sbb
push
imul
std
mov
cli
imul
jae
data16
in
dec
addr16
loopw
arpl
jnp
adc
fimull
jb
jp
adc
lds
out
adc
mov
push
jge
inc
fdivrs
cmp
sub
lds
gs
or
adc
insb
mov
cmc
pop
roll
cld
cmp
xor
scas
jno
shlb
mov
xor
cmp
fcmovbe
iret
mov
cmp
das
push
das
mov
sbb
dec
std
loope
pop
hlt
insl
out
clc
sub
add
sub
xor
data16
fwait
test
or
test
sbb
das
jo
sbb
xor
sbb
sbb
xchg
mov
pop
dec
gs
lods
cld
mov
pushf
ds
rcrl
cmpsb
jg
out
icebp
ret
pop
data16
mov
repz
pop
lods
mov
and
cmp
xchg
sub
js
push
pop
pop
dec
mov
lods
lcall
mov
lea
add
or
fcomps
clc
mov
xor
pushl
cmp
stos
mov
movsl
aam
pop
fsubs
cmp
adc
cmp
cmpb
adc
stos
inc
sub
sbb
sbb
ret
cltd
sarl
mov
bound
mov
outsb
inc
ss
std
out
mov
jne
and
and
pop
sbb
cmp
cwtl
cs
pop
lods
ljmp
cld
sti
xchg
mov
fcmovnu
mov
mov
adc
or
test
out
sub
cmc
movsb
and
inc
fildll
jno
ret
sbbb
lcall
push
mov
imul
orb
sub
out
sub
out
xor
out
leave
jecxz
mov
test
mov
and
negb
ret
inc
test
loopne
cld
adc
cmp
scas
aaa
cmp
lea
out
test
sbb
std
adc
jle
pop
add
jecxz
jns
xchg
pop
add
lods
outsb
mov
push
xor
and
add
pop
and
and
out
dec
lret
pop
sub
lahf
shll
into
test
mov
int
test
xchg
jmp
insl
outsl
mov
fs
nop
xchg
cmp
bound
or
and
in
sub
ds
xchg
mov
mov
div
cmpsb
fst
push
loop
enter
lret
xlat
das
add
mov
pop
rclb
fildll
lret
inc
mov
int
mov
cs
sub
in
jnp
sbb
movsb
insb
push
nop
adc
xchg
mov
push
cltd
popa
and
and
jp
mov
push
fwait
xchg
inc
jbe
push
dec
stos
inc
fwait
and
cmp
inc
out
jne
scas
mov
jo
cmpsb
dec
dec
stos
shll
pop
mov
adcb
push
adc
arpl
stos
cpuid
push
pop
adc
stos
loopne
nop
ret
sub
arpl
dec
imul
mov
dec
xchg
cmp
push
bound
pop
pop
pop
nop
adc
or
sub
mov
xor
or
cmp
icebp
loop
pop
sub
inc
mov
mov
ja
popf
sbb
push
subl
ret
xor
push
jnp
call
dec
or
and
mov
xor
jge
movsl
pop
or
jo
cmpsb
jecxz
pusha
cmpsb
mov
mov
movsb
push
cs
hlt
mov
jbe
stc
mov
adc
ficoml
inc
hlt
or
mov
insl
je
and
int3
and
add
and
sbb
pop
pop
sub
sub
mov
pop
mov
stc
call
mov
daa
or
out
sub
lret
sbb
sbb
popa
cmc
pop
ss
mov
lcall
xor
imul
adc
jnp
mov
pushf
pop
push
and
pop
add
and
adc
xorb
in
es
mov
xlat
mov
shll
sub
xor
mov
jmp
movsb
pop
sub
lock
mov
out
xchg
cld
cltd
lret
inc
std
test
ret
arpl
mov
sbb
adc
sbb
outsb
push
dec
jb
adc
shll
jl
int3
adc
in
mov
int3
test
mov
int3
lds
jmp
insl
add
pop
call
pop
in
push
mov
dec
ja
jmp
out
sbb
enter
fstps
xor
mov
xchg
add
addr16
in
int3
push
test
xor
or
or
push
icebp
fisubs
pop
shlb
xor
ret
loop
imul
pop
mov
in
adc
imul
jne
popf
jbe
jo
sub
data16
bound
cmpsb
cmpsl
mov
ljmp
dec
xor
test
xchg
frstor
mov
push
mov
fimuls
mov
testb
outsb
cmc
xor
jecxz
pop
inc
sub
mov
xchg
out
cmp
test
or
bnd
or
sub
test
test
mov
mov
imul
jno
xor
sbb
push
insb
addr16
sbb
lds
cmp
out
mov
jecxz
add
adc
pop
lcall
mov
icebp
ja
xchg
dec
mov
jge
fsubs
inc
insb
push
subb
out
push
mov
in
or
pop
popf
add
pop
cmp
outsl
cli
mov
sahf
scas
mov
cs
call
ja
mov
pop
mov
frstor
mov
mov
push
cld
mov
sbb
out
push
xor
pop
pop
sub
int
sub
push
cli
insl
jg
lea
and
sbb
add
inc
mov
mull
and
or
sbb
push
cmp
ret
adc
shrl
mov
push
mov
lods
xchg
mov
insl
int
or
pop
and
inc
cmp
sarl
push
xor
or
pop
jno
test
mov
dec
jbe
push
cli
dec
rorl
or
push
shlb
jg
mov
xchg
xor
jp
jecxz
inc
sarl
and
pusha
xchg
movsb
jp
in
sub
mov
outsl
jbe
pop
jecxz
push
cmpsb
cmp
xor
mov
xlat
xchg
int3
rolb
inc
and
mov
xchg
pop
pusha
xor
push
mov
jne
fildl
out
test
xchg
cld
ret
push
pop
mov
fmuls
orl
fdivs
xor
lahf
popa
sahf
jnp
push
xorl
sub
pop
cmp
mov
iret
cmp
lds
fsubr
mov
fdivrp
sub
sub
pushf
mov
cmc
sqrtps
je
xchg
dec
mov
out
xchg
je
mov
in
in
leave
sbb
arpl
jp
push
icebp
data16
dec
mov
sbb
inc
cmp
mov
test
enter
ret
push
mov
add
adc
das
sub
xchg
and
xchg
add
or
fsubrp
repnz
out
mov
adc
movsb
inc
xor
fisubl
pop
push
and
dec
push
sbbb
and
scas
stos
call
icebp
sub
popa
push
repz
scas
int3
cmp
lret
xor
aam
hlt
insl
pop
dec
movsl
dec
aam
xor
push
jne
push
pop
hlt
call
pop
xchg
cwtl
repz
in
add
cmpl
test
adc
and
fistpll
dec
in
loopne
icebp
xor
or
sub
ljmp
jno
and
add
jle
push
je
aad
or
and
test
jne
and
cmpb
and
or
stos
pop
lcall
enter
mov
aad
sbb
shrb
jmp
pop
jp
mov
pop
pushf
sub
mov
jns
repnz
cmpb
hlt
inc
sbb
lahf
cmp
cmp
push
jae
dec
je
adc
aam
xchg
sahf
or
cmc
adcb
lock
inc
hlt
test
xchg
adc
ss
and
inc
ljmp
addr16
jle
push
xchg
pushf
adc
loopne
scas
mov
jle
adc
sahf
cmp
cmp
pop
fistpll
mov
in
sbb
jmp
cmpsl
in
sbb
and
mov
mov
inc
aas
and
jbe
call
test
das
sti
cli
clc
jmp
in
mov
fstp
sub
jne
int3
shr
adcb
dec
in
in
shlb
mov
xor
inc
imul
mov
js
cltd
outsb
mov
pop
push
cli
sbbl
cwtl
cs
in
jbe
in
jae
mov
idiv
xor
adc
pop
lahf
stc
adc
pop
and
fldcw
cmp
das
jno
and
fimuls
pop
testl
push
sbb
jmp
inc
inc
xlat
xor
out
mov
dec
and
pushf
lea
cmp
daa
int3
pop
outsb
aas
jae
and
or
xchg
stc
xor
adc
imul
mov
stos
and
insl
xchg
loope
ljmp
imul
fadds
sbb
adc
sbb
nop
cwtl
cmpsb
insl
mov
xchg
push
jno
lea
dec
test
lods
andb
inc
lea
cmc
or
in
inc
xchg
sbb
sbb
loopne
jns
je
jnp
sbb
xchg
negb
pop
stc
loop,pn
jb
mov
ret
lea
nop
xor
dec
jl
aaa
imul
les
xor
cwtl
aaa
and
jge
sub
sbb
les
xor
fndisi(8087
pop
bound
mov
push
cmp
adc
or
sbb
cmp
dec
testb
or
mov
jecxz
mov
gs
cmp
test
dec
mov
fstpt
push
sub
cmp
mov
lcall
lods
imul
sub
jecxz
dec
pandn
xchg
fsubrl
mov
cmp
fdivrs
aaa
mov
mov
and
xor
xor
adc
clc
cmp
imul
sbb
clc
push
push
inc
mov
arpl
jns
cmc
cmpsb
lahf
xor
iret
in
hlt
xchg
xlat
scas
loope
fwait
xchg
fs
movsb
loope
cmpps
jp
in
rcrl
cmp
cmp
arpl
out
sub
out
lods
mov
leave
movsl
pop
iret
ret
repnz
dec
xor
push
cmpsb
inc
mov
dec
rolb
sbb
cmc
xor
sub
in
fldcw
mov
addl
out
push
enter
hlt
mov
insl
lods
add
inc
jnp
sti
xor
bnd
jg
fst
pop
sbb
popa
fwait
cmpsl
cs
shr
fisubrl
push
pcmpeqw
xchg
xor
clc
in
xchg
pushf
pusha
int3
je
loopne
popf
sti
sbb
pop
call
cmp
jle
jne
inc
mov
push
xchg
fwait
pop
loope
jnp
pop
push
movsb
or
in
ret
scas
jne
jp
pop
xor
out
sahf
cmp
pop
fnstcw
and
push
cwtl
int
outsl
and
dec
inc
hlt
adc
cmpsl
call
mov
clc
pushf
les
pop
int
push
test
lahf
add
add
scas
out
or
fucom
and
cmp
jp
sbb
js
adc
dec
or
in
xor
ret
sub
mov
in
mulb
inc
fistpll
pusha
mov
dec
pop
cli
push
inc
insl
sub
hlt
int3
pop
mov
mov
push
push
pushf
adc
xor
in
xchg
inc
adc
stos
sbb
mov
xchg
jae
or
rclb
fnstenv
lods
pop
ja
jecxz
dec
lds
jns
mov
xor
mov
adcb
cmc
mov
fwait
out
xor
popf
notb
cmc
lret
push
jbe
jecxz
popa
clc
mov
inc
ja
pop
mov
mov
cld
xchg
cmp
cmp
pop
xor
add
ja
das
dec
mov
inc
cli
lea
sub
jo
push
ss
push
stos
cmp
mov
or
mov
jno
push
jno
pop
rol
adc
dec
fmulp
mov
repnz
pop
inc
mov
pop
ficomps
dec
sub
ficompl
scas
pop
push
sahf
cltd
lahf
pusha
outsl
jae
std
cmp
sub
sbb
aas
js
sub
xchg
test
mov
jl
adc
test
mov
es
and
mov
sub
subl
aam
jp
mov
ss
sbb
mov
or
mov
cmp
aad
aaa
mov
jge
testb
jmp
xchg
dec
in
pop
ret
icebp
mov
bswap
cmp
mov
xchg
bound
leave
movsb
idiv
pop
mov
popf
inc
iret
pop
mov
xor
mov
in
stos
pop
xor
and
daa
lods
pop
neg
loopne
push
and
outsl
outsb
nop
add
aad
adcb
inc
leave
push
sub
mov
shl
sub
ret
ljmp
xchg
xchg
mov
insb
shll
das
xchg
inc
cmp
or
pop
in
in
fdivs
pop
negb
ss
sub
leave
push
sbb
push
das
mov
std
lret
inc
jp
sub
cmp
pop
xor
mov
orb
enter
inc
xor
inc
sub
inc
mov
ss
push
js
add
mull
jnp
push
and
sbb
dec
add
adc
xorb
shrl
xor
mov
add
mov
push
mov
inc
scas
sub
xor
mov
push
mov
push
push
ficoms
inc
shlb
std
fldcw
fstps
ljmp
mov
jge
in
push
push
xor
sbb
cmp
mov
repnz
adc
adc
minps
mov
jmp
jae
inc
mov
push
pusha
sbb
cld
sahf
sub
push
sub
pop
xor
dec
inc
dec
scas
adc
inc
imul
sbb
push
adc
dec
add
and
sahf
cmpsl
sbb
pop
cmp
inc
lock
pop
enter
pop
mov
insb
jecxz
push
dec
testl
out
and
dec
fimuls
rcr
inc
push
daa
and
jae
popa
clc
jne
or
xorl
xchg
pop
std
sarl
sub
push
push
hlt
push
movsl
xchg
movsb
test
pop
fstpl
xor
push
inc
adc
aam
aaa
stos
cs
mov
cli
cli
xchg
into
in
lods
xchg
mov
inc
fimull
mov
leave
jns
push
jo
out
fwait
pop
insb
jmp
hlt
mov
aas
icebp
faddl
and
movsl
or
mov
test
rol
pop
idivb
lcall
fcomps
pop
jae
dec
push
lret
mov
mov
sub
jno
or
cltd
aad
and
or
arpl
cwtl
or
gs
movsb
push
sub
xchg
pop
lods
mov
and
sbb
cltd
xchg
test
fisubl
xchg
mov
inc
rorb
add
insl
mov
out
filds
fcmovb
fimull
push
cmp
sbb
or
mov
add
xor
or
cmp
pop
inc
sub
cmpl
push
lret
inc
mov
or
pusha
aad
lods
adc
adc
lds
insl
cli
idivl
shrb
movsb
xchg
fidivl
popf
in
push
mov
outsl
aas
adc
stos
push
adc
xchg
and
jae
addr16
mov
mov
lahf
add
mov
push
scas
cwtl
xchg
repnz
xchg
pusha
repnz
call
mov
mov
lods
out
lret
in
repnz
mov
dec
call
xor
out
lahf
rclb
dec
jecxz
xor
inc
loopne
daa
dec
es
loopne
adc
pop
dec
push
test
repz
mov
idivb
jnp
jne
shlb
mov
xor
cmpsl
imul
xchg
les
les
insb
adc
mov
mov
jl
xor
mov
movsl
fisttps
dec
aam
pop
mov
push
lea
sqrtps
sub
aas
fwait
inc
das
or
call
add
dec
xor
dec
jns
aas
xchg
popa
jb
mov
sbb
lds
jle
adc
out
push
dec
fldt
sbb
xor
movsb
mov
fists
lret
push
mov
bound
adc
stos
test
cmp
bound
mov
push
les
lea
xchg
push
outsl
or
je
jp
addl
neg
xchg
cmpsb
nop
cmc
cmp
inc
lods
out
ds
mov
and
mov
leave
aaa
in
pop
mov
mov
jnp,pn
mov
push
cmpsl
lea
mov
fwait
shll
or
add
sub
xor
rcll
xchg
mov
mov
testb
fsubrl
adc
scas
jo
lret
and
mov
xchg
mov
rorb
aad
sahf
xor
add
iret
lds
mov
mov
ret
and
xor
sub
mov
dec
pusha
cmp
lahf
cli
outsb
mov
loope
popa
test
dec
push
ds
testl
inc
cmp
cmpsl
aas
cmp
aas
dec
jl
movsb
out
pop
sub
stos
pop
fisubl
test
fwait
out
popf
stc
mov
mov
inc
ret
adc
scas
in
jl
ja
inc
stos
push
xchg
and
das
cli
sub
sbb
mov
lock
sahf
mov
mov
jl
or
push
sub
cld
sub
sahf
pushf
and
jno
ret
mov
sbb
inc
inc
push
and
xchg
inc
xchg
mov
repnz
out
add
pop
xchg
inc
and
cltd
cmp
add
fninit
add
ljmp
jbe
pushf
jmp
daa
lods
les
scas
mov
inc
push
cmp
jb
inc
out
xchg
xchg
or
sarl
sbb
fcompl
jnp
and
xor
pop
sub
xor
ret
push
xor
sbb
rol
pop
test
jge
sbb
pop
xlat
lcall
jb
fsub
mov
or
jl
sub
sub
stos
stos
ds
add
stc
es
je
or
and
rclb
push
or
sub
in
push
fs
lods
or
inc
cwtl
mov
jge
push
movsl
rolb
push
insl
xchg
push
das
fwait
dec
mov
cltd
jmp
sahf
iret
pop
ret
dec
stos
cli
pop
pop
scas
aaa
andb
ss
test
std
fldl2t
and
inc
es
xchg
cmc
fsts
mov
mov
lods
jae
nop
addr16
in
dec
mov
cmpsl
xchg
dec
lahf
scas
mov
das
pop
stos
fwait
in
pop
lret
and
inc
cwtl
mov
dec
add
out
bswap
xchg
pushl
or
dec
stos
test
icebp
or
lea
aam
lcall
out
lea
pop
xchg
fcompl
jp
inc
daa
aaa
lcall
sbb
stc
mov
xor
es
cli
push
cmp
adc
loop
repnz
gs
test
sarb
sbb
jp
dec
cmc
das
xchg
or
add
dec
inc
int3
sub
sbb
js
imul
mov
pop
ds
lea
mov
jne
jmp
les
mov
daa
or
adc
sbb
popa
into
mov
xchg
jb
and
inc
inc
pusha
arpl
fildl
xor
dec
jbe
rcl
pop
inc
mov
xchg
and
imul
cmp
aad
jmp
xacquire
aam
mov
sahf
cmc
aad
lods
jge
sbb
fcompl
imul
sahf
mull
xchg
sub
ficomps
mov
jmp
dec
xchg
sysexit
subb
pop
add
je
rolb
popl
mov
std
mov
lods
rclb
xor
in
jbe
mov
fistpll
fidivs
xchg
sbb
pop
pop
or
xor
sbb
cmpsl
out
out
je
sub
add
mov
popf
push
outsl
movsb
fcomi
cmpb
jle
test
popa
sbb
insl
mov
mov
out
int3
mov
mov
dec
cmpsl
movsl
pop
cmp
push
std
or
jecxz
xor
loopne
xchg
cmp
sub
mov
mov
int3
jno
dec
enter
rcll
arpl
push
sub
lods
es
add
fbld
popf
mov
jne
sub
fwait
jo
lahf
cwtl
mov
aas
mov
in
jg
addr16
test
in
xor
subb
xchg
out
ds
add
mov
fs
jns
mov
inc
testl
mov
cltd
leave
ss
leave
jno
lea
fwait
rorl
mov
out
fnstenv
inc
rclb
xlat
sar
xchg
and
adc
inc
sarl
mov
and
xor
push
dec
sbb
ja
pop
cli
in
xchg
xor
iret
jp
loope
lret
dec
dec
lret
and
lcall
mov
test
call
mov
mov
enter
mov
mov
mull
mov
loopne
cmp
push
mov
mov
insb
int3
sbb
cmpsl
add
mov
pop
cmpsl
and
out
xchg
cmp
loope
notl
mov
inc
inc
mov
popf
cmpsl
xchg
js
cs
add
clc
push
sahf
repnz
in
sub
pop
dec
mov
test
stos
testb
xor
aas
cs
je
insb
dec
push
lcall
mov
pusha
adc
xor
repnz
mov
sti
jle
mov
cmp
or
ja
xchg
xchg
cmpsb
mov
loop
int
pop
push
movsl
inc
mov
jns
test
jmp
fistpll
mov
inc
mov
sbb
jge
sbb
jmp
and
das
daa
sub
mov
movsb
or
mov
lods
xchg
push
lods
ret
icebp
mov
xor
iret
insl
xor
fisubrs
stc
and
mov
xor
xor
and
lret
mov
ret
dec
ficoml
xor
nop
movsb
inc
mov
cmpsb
sahf
scas
lret
adc
or
push
in
stos
mov
rcrl
xchg
add
fdiv
xor
or
push
repz
lods
adc
cltd
fs
daa
out
ljmp
jl
addb
stos
xor
fistps
rcll
int3
jmp
jno
aas
filds
adc
testl
mov
jnp
mov
popf
sbb
xchg
dec
pextrw
movsb
xchg
mov
stc
adc
fldcw
adc
popa
dec
jmp
int3
insb
icebp
lcall
lahf
es
dec
xor
push
dec
sbbb
lods
mov
jmp
xchg
xchg
mov
mov
jnp
pusha
cwtl
mov
dec
dec
push
sub
out
inc
arpl
std
jmp
enter
shll
into
cmp
movsl
pushf
cmpsl
adc
mov
jns
sub
xchg
dec
leave
adc
xor
mov
or
mov
enter
mov
mov
ret
jae
mov
mov
xor
mov
jle
push
adc
mov
mov
in
xchg
or
dec
int
outsb
mov
cli
jb
pop
add
push
xchg
add
push
testb
or
jb
and
orb
sub
xchg
cmp
dec
cwtl
mov
outsl
ret
inc
loop
call
nop
mov
pop
pop
icebp
shlb
popf
xor
call
pop
icebp
dec
sub
vmovhpd
popa
mov
bound
dec
or
pop
scas
xchg
stc
mov
repnz
aaa
adc
cmp
jb
sub
roll
mov
ja
js
mov
rorb
jb
es
mov
cmc
rcrb
add
or
fld1
add
sbb
jb
pop
popa
lea
fwait
cmp
test
fcmovb
or
xchg
xor
xchg
jne
and
jle
lahf
insb
adc
inc
jecxz
xlat
pop
jl
sbb
xchg
inc
dec
mov
push
add
dec
ret
lret
imul
in
cli
push
jge
push
sahf
sub
sbb
lahf
sbb
outsl
cmp
jb
test
lcall
rorl
sub
popa
ds
dec
sti
or
pop
test
cltd
sub
je
outsl
mov
mov
js
jns
mov
jmp
aam
divl
cmp
inc
inc
cmc
pop
icebp
cltd
fisttpll
ffree
add
cmp
leave
lods
xchg
jnp
sub
lds
or
dec
and
mov
jge
dec
insb
popa
hlt
pop
insl
lods
add
fwait
scas
repz
js
lds
mov
mov
jns
outsb
jns
clc
ja
dec
cmp
ficompl
mov
add
mov
sub
ja
hlt
pop
sbb
pop
mov
push
cmp
sbb
leave
aad
sbb
out
mov
sub
loopne
jle
mov
cld
cwtl
in
popa
jns
fs
mov
out
icebp
inc
mov
imul
sbb
stos
call
xor
add
addr16
repz
and
clc
clc
pop
test
or
sub
and
pushf
jb
sub
and
sub
cmp
mov
push
popf
shlb
fucomp
mov
cmp
jp
shr
jb
or
pop
js
sub
push
add
pushf
insl
xchg
mov
xchg
push
test
cmpsl
fisttps
fdiv
xlat
inc
mov
inc
sahf
pop
mov
loope
pop
push
and
mov
fs
inc
call
mov
jecxz
mov
and
cwtl
cli
leave
push
lods
sbb
sub
js
mov
add
lea
mov
data16
fldcw
lret
nop
pusha
cli
fcoml
add
aam
iret
sbb
or
test
pop
faddl
pop
jl
imul
test
mov
sbb
fcomps
xor
jo
fwait
imull
sbb
gs
dec
or
lret
test
lcall
jns
testb
test
jp
or
notl
push
shrl
inc
xor
call
popa
ss
pop
aaa
push
loope
xor
sub
and
fsubs
jecxz
xchg
cli
insb
jne
jnp
shll
out
inc
mov
mov
test
call
out
and
dec
mov
repz
dec
lcall
pop
cmp
das
push
pop
xchg
sbb
dec
dec
addr16
mov
sub
cmpb
jmp
push
mov
xorl
outsl
cli
divl
adc
inc
push
lahf
sub
push
mov
scas
xor
fisubrs
mov
pushf
sub
loope
gs
rcr
pop
js
push
je
lds
jnp
dec
pop
test
dec
cltd
mov
xchg
and
ss
inc
cmp
cmpsb
cmp
insl
decb
iret
add
scas
or
pop
mov
das
sbb
inc
or
inc
mov
outsb
sahf
ljmp
ficomps
add
push
push
inc
xchg
ret
lcall
daa
pop
jle
mov
sub
test
shll
mov
and
xchg
mov
subb
lods
movsl
and
mov
and
xor
sahf
adc
cmp
xchg
repnz
lret
pop
push
jo
mov
push
xchg
sbb
ljmp
or
in
cld
mov
das
xor
push
frstor
cli
fstpt
in
mov
jb
js
aas
inc
negb
push
in
aaa
pop
cmp
shll
repnz
adc
sahf
pop
fcoms
rcrl
cmpsb
cltd
test
xor
aaa
push
and
loop
cs
and
lahf
leave
push
jno
movsb
jne
jns
loopne
sbb
jl
pop
mov
cld
stos
cmp
add
incl
and
pop
fwait
aaa
xchg
outsb
and
sub
mov
mov
pop
mov
int
in
iret
ja
xor
cmp
push
fmull
in
pop
sarb
les
test
mov
or
pop
xor
outsl
and
jg
mov
xor
fildll
push
dec
lods
xor
aam
cmpb
cmp
sbb
inc
test
pop
mov
and
inc
sbbl
mov
jb
ljmp
and
xchg
push
pop
clc
out
incl
cs
hlt
in
into
mov
fmul
add
insl
jne
ror
ffree
arpl
mov
mov
dec
and
es
pop
sar
sub
fidivrs
add
flds
int3
mov
rorb
ja
movsl
xchg
xor
popf
jae
sbb
mov
sub
pop
xor
xchg
out
nop
pop
push
movsb
out
dec
push
jb
adc
push
stos
outsl
pop
mov
stos
in
adc
arpl
scas
mov
push
push
orb
int
dec
jae
xor
cmp
sub
cltd
or
mov
fiadds
leave
cltd
jge
popa
pusha
daa
mov
dec
push
cmp
lcall
jnp
insl
pusha
jae
sbb
mov
and
cld
sub
shll
mov
stos
leave
dec
test
pop
jns
push
mov
push
es
popa
jbe
inc
adc
bound
push
std
cli
and
out
jb
mov
test
xchg
lock
cmpsb
pushw
mov
in
fwait
cwtl
sub
or
mov
mov
xchg
mov
add
jo
cs
fistpl
jg
out
cmp
or
dec
push
out
into
pop
addr16
xchg
jl
push
or
dec
pop
in
mov
push
arpl
mov
push
jns
fsubr
cmp
mov
pop
mov
daa
iret
sbb
push
push
es
cltd
fs
jbe
push
or
or
adc
lahf
xchg
mov
cli
xchg
mov
push
xchg
pop
or
or
in
int3
pop
sti
pusha
add
addr16
inc
and
in
sub
jae
rcrl
push
push
push
cmpsl
mov
xchg
adc
push
fs
test
dec
mov
mov
push
xor
pop
fs
cld
sbb
jne
iret
int
xchg
mov
je
pushf
or
lahf
dec
and
ret
xor
mov
jae
ret
popw
test
cli
pop
xor
stos
xchg
dec
cld
int3
imul
in
jae
and
adc
push
cmpsl
dec
xlat
adc
shl
sti
lret
cmp
mov
sub
push
fs
inc
xchg
xchg
test
inc
fdivl
cltd
ljmp
inc
push
push
adc
mov
jge
sub
fxch
sahf
or
sub
cmp
cltd
aad
int3
fisubl
xor
xchg
or
pusha
loop
cltd
dec
mov
dec
and
sbb
sub
addl
popl
push
insl
sbb
leave
daa
std
or
cmp
pushf
icebp
xchg
push
dec
xor
cmpsl
scas
adcb
xor
dec
sbb
push
pop
xchg
cmp
adc
inc
ret
jge
pop
je
and
test
mov
negl
sub
sub
ret
inc
cmc
xor
das
imul
mov
xor
inc
sbb
dec
imul
mov
push
mov
xorb
dec
lea
mov
cmpsb
jno
mov
sarl
ja
faddl
outsl
cmp
sub
inc
mov
push
xlat
out
in
mov
inc
ss
ds
in
in
inc
test
sub
pushf
mov
pop
sbb
fstpt
test
in
aas
xchg
push
xor
rclb
es
in
pop
push
movsb
inc
loop
mov
outsb
inc
inc
dec
andb
dec
jl
popf
cmc
int3
negb
jnp
xchg
mov
std
ret
adc
mov
lret
addr16
mov
in
pop
aas
iret
mov
sbb
jg
push
jmp
movsb
into
dec
mov
fcomi
mov
lods
and
jne
add
jbe
sbb
aad
scas
lds
or
mov
mov
adc
mov
pop
adc
cmpsb
push
stos
pop
cmp
pop
dec
push
out
fsubl
mov
out
pushf
adc
push
mov
jmp
dec
mov
inc
andl
imull
xor
mov
lcall
xchg
shl
sbb
loop
cmp
pusha
int3
fs
or
lods
or
or
test
out
pop
mov
mov
xor
or
shld
sbb
lea
lret
subl
push
mov
ret
shll
out
push
push
sbbb
test
xchg
in
fcmovu
imul
pop
lock
xchg
xchg
test
push
test
push
mov
push
decb
cmp
rcrl
jl
add
int3
jo
inc
and
mov
dec
cmp
adc
xor
sbb
inc
pop
jge
xor
cmpsl
xor
add
in
mul
push
mov
jb
out
clc
ret
mov
push
in
cltd
mov
jne
jno
aas
mov
sub
mov
lret
int3
sbb
mov
dec
cmpsl
cmc
rcrb
shl
jmp
mov
imul
out
fcomip
fnstsw
add
insb
dec
imulb
xor
stos
sub
push
jno
dec
pop
push
adc
push
enter
shl
lods
and
in
js
pop
sbb
push
into
lcall
out
mov
test
imul
xchg
jp
iret
push
movsl
out
pop
pop
or
add
fldcw
pop
dec
mov
aas
push
mov
stos
out
jl
nop
mov
lea
mov
mov
int3
ret
test
jl
push
xchg
xchg
sbb
jno
cwtl
pop
jge
test
aam
or
dec
inc
popf
jne
inc
mov
sar
scas
jmp
push
aaa
xor
xacquire
addr16
orb
cli
jg
mov
cmp
xchg
inc
ret
jb
popa
out
jp
cmp
push
outsl
outsb
int
jnp
sarb
dec
cs
jl
orb
add
sahf
inc
sub
sbb
ret
cltd
int3
movsl
loope
ror
inc
cwtl
mov
ljmp
out
sbb
or
js
xchg
sbb
dec
mov
mov
mov
mov
lret
mov
xchg
dec
jl
push
cmp
pop
jno
enter
mov
pop
cmp
cmpsb
xchg
test
and
xchg
mov
out
test
pop
sar
push
push
mov
and
jno
repz
iret
aaa
jg
rcl
pop
mov
jp
in
loope
xchg
fdivl
cmp
cmp
ret
mov
and
repnz
fcoml
jnp
cmp
pop
jge
mov
es
int
ljmp
ret
cmp
leave
in
push
es
push
sub
cwtl
mov
imul
cs
sub
xchg
mov
mov
loopne
fwait
inc
repnz
out
pop
jno
or
push
xchg
sbb
xor
jo
bound
adc
inc
cmpl
inc
js
lods
jnp
icebp
mov
cmpsl
sbb
sbb
das
lods
aas
push
stos
jnp
pop
xchg
flds
add
or
aad
mov
or
rcrl
push
inc
fwait
jnp
adc
mov
adc
jnp
sbb
ret
mov
cmp
aam
dec
fidivrs
insb
out
icebp
sarb
or
sub
dec
xchg
mov
and
fisubrs
and
xor
enter
sbb
sub
out
xchg
and
lahf
push
mov
push
into
inc
loopne
pop
test
jle
mov
iret
pop
lret
lods
notb
sub
jne
jg
lods
push
pop
popf
xor
mov
jbe
mov
jno
fdivrp
push
cwtl
scas
scas
lcall
mov
push
jge
push
inc
xor
add
mov
adc
hlt
popf
cld
loope
mov
jns
fldl
arpl
xchg
xchg
and
and
cld
fiadds
add
imul
test
sub
leave
fs
aad
and
xlat
fldenv
repz
das
inc
mov
lods
clc
pop
push
xchg
mov
std
ss
test
in
inc
mov
and
adc
rclb
outsb
fdivs
xor
fs
or
loopne
sbb
imul
mov
xor
adc
lahf
int
cmp
aad
icebp
ja
imul
idiv
jo
cmpsl
aas
push
mov
rcl
scas
pop
pop
inc
inc
jle
mov
enter
decb
cmp
iret
push
ds
adc
push
fstpt
movsl
test
cmpsl
jle
xor
aas
push
popf
mov
sbb
mov
push
aad
add
push
sbb
leave
lods
ss
testl
icebp
mov
inc
aad
push
xor
mov
xchg
addr16
mov
jae
out
xor
daa
pop
addr16
aaa
lret
dec
sbb
push
push
mov
aad
lods
int
xchg
lods
inc
pop
fnstsw
xchg
xor
sub
js
jo
aam
mov
add
mov
stos
outsl
cltd
insb
lahf
loop
pushf
inc
jle
mov
cmp
lret
fistpll
outsl
xchg
movsb
stc
mov
into
repnz
cmp
les
iret
cmp
hlt
pop
aam
in
pop
shrl
xor
mov
adc
xor
cmp
inc
rol
pop
fdivp
in
ja
add
dec
xor
mov
cmp
jnp
xor
pusha
fdivp
test
adc
jecxz
xchg
xchg
daa
push
or
imul
daa
jle
loopne
cmc
cmp
rcll
mov
mov
mov
call
pop
sbb
add
in
js
or
jnp
mov
jl
cmp
repz
sub
gs
cmp
mov
scas
sub
clc
stos
imul
test
shlb
and
test
sbb
push
adc
xchg
leave
aas
inc
push
ret
out
scas
loope
imul
jns
int3
pop
cmp
stos
cmp
jecxz
fwait
xor
out
fisubs
dec
push
dec
test
pop
or
push
or
ficompl
push
pop
xor
mov
inc
cmp
fs
or
into
sub
pop
icebp
shll
and
outsl
push
popf
mov
xchg
lods
inc
sub
pushf
mov
push
out
ja
mov
sub
add
jle
pop
push
adc
nop
cmovs
decl
dec
jb
or
outsb
into
cmpsb
jae
stc
sahf
xor
xor
mov
sbb
insl
rolb
mov
adc
mov
add
iret
les
pop
sub
and
out
ret
mov
iret
or
sbb
fs
fistpll
in
scas
std
fcompl
add
fnstsw
in
jle
cmp
mov
adc
mov
sub
sbb
rcll
and
std
push
dec
repz
push
mov
stc
and
outsb
into
enter
lcall
movb
into
push
outsb
rcll
dec
add
xor
fwait
popf
idivl
hlt
call
pop
pop
add
or
arpl
lods
or
pop
mov
and
in
xor
cwtl
fs
pop
shlb
and
lahf
enter
mov
sbb
cli
test
aaa
stos
ret
inc
mov
jle
sub
test
lret
jnp
and
adc
lods
lahf
adc
jae
xchg
movsl
daa
mov
pop
sbb
xor
jno
adc
je
cld
adc
add
into
int
stos
sub
mov
fidivrl
imul
loope
inc
leave
xchg
jle
aam
adc
jne
orb
jne
popa
aad
pop
xor
fldenv
leave
xchg
testl
xor
pusha
ret
adc
and
repnz
mov
data16
sbb
pop
mov
stos
shl
cwtl
int3
xchg
mov
out
cmp
mov
push
into
out
aam
in
enterw
push
jecxz
adc
lods
aaa
insl
mov
mov
or
repnz
mov
push
xor
sbbb
jo
or
cmpsl
add
mov
mov
out
scas
ret
sti
and
jp
adc
aaa
xor
fwait
mov
lods
push
fldenv
add
imul
int
or
das
cwtl
cmp
push
jge
hlt
xor
test
arpl
or
lds
xlat
xchg
xor
fmull
daa
pop
stos
mov
sbb
in
lret
orps
scas
and
jmp
mov
cmp
ljmp
dec
gs
xlat
xchg
shlb
iret
or
pop
repz
aaa
dec
dec
imul
push
iret
sub
in
adc
divl
mov
push
cmc
leave
cmp
xor
sbb
imul
movsl
or
cs
sbb
mov
pop
cli
jb
xchg
push
push
ret
outsl
popf
icebp
jp
nop
repnz
iret
ret
jle
sub
inc
fucomip
neg
rcrl
xor
jb
int3
dec
push
cmpsl
ss
cld
dec
mov
in
in
popa
cmp
incb
repnz
out
mov
ret
mov
jne
jmp
movsb
test
xor
out
or
mov
lret
push
adc
aam
iret
decb
cli
jmp
fwait
out
xchg
cmp
mov
cmp
jo
push
xor
xor
fwait
cld
movsb
scas
stos
das
push
push
xchg
popa
cmp
push
stc
aam
cmpsb
scas
jmp
push
cmp
je
adc
popf
les
in
xchg
pop
ret
lret
adc
je
fcomi
mov
out
in
add
jns
test
int3
inc
std
mov
lahf
sub
movsl
stos
or
call
jbe
insl
inc
clc
cwtl
lods
add
es
lea
leave
jns
jmp
inc
negl
test
ret
mov
inc
sub
sbb
mov
and
mov
cmp
aad
int3
sub
fwait
aad
in
sbb
orl
add
mov
fdivrs
adc
xchg
mov
sub
add
in
mov
mov
add
pop
push
es
iret
ds
out
push
sarl
test
pop
lock
cmp
mov
inc
push
pushf
push
mov
inc
jo
cmp
adc
inc
pop
xlat
inc
shll
inc
xchg
mov
es
xor
loopne
ljmp
xchg
jns
pop
orb
jg
ss
sbb
sub
sarb
inc
inc
inc
lret
outsb
xchg
mov
aaa
add
mov
arpl
fs
test
or
arpl
lahf
jb
pop
sbb
mov
aaa
inc
sti
push
test
xor
mov
mov
jge
leave
popf
in
and
xchg
xlat
addl
outsb
pop
sub
jl
mov
mov
test
test
jae
outsb
stos
mov
mov
imul
jnp
mov
xchg
test
stos
push
mov
repnz
xchg
mov
cmp
inc
lock
clc
cmpl
mov
jb
adc
pop
dec
xchg
add
xorl
push
xor
add
or
sub
ret
mov
adc
mov
outsl
mov
jne
mov
data16
add
cmpsb
jae
filds
cmpsl
sbb
out
clc
js
inc
pop
push
sahf
pop
filds
in
aam
or
adc
movups
jle
mov
inc
xchg
ret
dec
jg
and
or
lret
mov
and
call
mov
sub
dec
jmp
leave
lahf
xchg
inc
jns
outsl
and
cld
push
rclb
cmc
push
push
pop
cld
lahf
push
inc
or
or
pop
outsl
shrl
iret
and
lret
push
fisttpl
lods
in
mov
aas
adc
sub
mov
push
inc
push
add
xchg
decl
push
fs
iret
push
and
mov
xor
and
jo
mov
sub
mov
adc
dec
push
leave
ret
cmpsl
jo
stos
das
push
sub
and
fs
jnp
mov
stc
int
mov
sbb
add
adc
aam
and
scas
mov
out
or
testb
xor
mov
lock
push
mov
cmp
adc
sbb
jge
btr
jbe
xchg
or
daa
sar
ds
insl
and
xchg
mov
pusha
push
pushf
sbb
push
fldcw
or
sbb
sbb
mov
hlt
dec
add
or
mov
outsl
fnstsw
dec
mov
add
aad
add
popa
mov
ljmp
inc
inc
sbb
int3
pop
xor
mov
add
add
js
jl
xor
ficoml
iret
fsts
inc
dec
inc
js
push
mov
fwait
add
outsl
and
dec
jo
xorl
pushl
test
mov
ror
pop
xlat
or
mov
dec
cs
ret
repz
xchg
nop
lcall
dec
jbe
test
movsl
sbb
mov
push
test
das
and
cmp
pop
std
pop
stos
mov
and
push
out
add
xor
dec
push
or
mov
cmp
bound
repz
cmp
mov
inc
cs
dec
arpl
sti
mov
fbstp
sub
cmp
push
cld
adc
sbb
ret
stc
aaa
nop
lods
popf
jno
mov
push
out
insl
jno
pop
loope
sbb
aam
push
fistl
repz
fldenv
outsl
mov
push
jnp
sbb
xchg
sbb
stc
xor
cmp
mov
jbe
rolb
sub
rclb
lret
imul
fistl
sub
adc
popa
sti
cld
jne
cmpl
cmp
stos
and
movsl
or
test
movsl
shrb
iret
in
loop
mov
outsb
loop
xor
xchg
lret
adc
xchg
call
and
mov
jo
mov
inc
push
std
xor
xor
dec
jl
shll
inc
sbb
popf
pop
pop
out
ss
sbb
sbb
cmpsl
sbb
ljmp
aas
sub
mov
test
adc
sub
jle
js
adc
xchg
sbb
mov
inc
out
sub
cmp
ja
mov
lods
pop
and
pushf
pop
imul
addr16
or
mov
out
lret
pop
loop
lret
cmp
ds
jnp
dec
rcrl
setl
pop
mov
aaa
and
pop
xchg
jo
loop
subl
mov
mov
mov
insb
mov
xor
dec
inc
je
cmp
push
or
lahf
adc
push
lcall
mov
cltd
ror
fisubs
pop
push
mov
pop
lods
sbb
imul
sbb
sbb
inc
inc
push
xor
sub
mov
xor
push
jmp
jb
pop
data16
cmpsb
dec
pop
lea
inc
imul
dec
cs
jb
ud1
pushf
push
pop
sbb
enter
inc
stos
pop
and
ret
out
out
ret
cmpb
in
mov
lock
cmp
jp
jl
dec
mov
push
xor
mov
dec
sbb
dec
nop
call
scas
sub
hlt
stc
mov
xlat
divl
jns
cmpsl
outsb
or
sbbl
es
adc
mov
clc
or
dec
mov
add
cmp
scas
sbb
mov
into
mov
jo
cmp
les
arpl
jne
aad
dec
fwait
push
jo
imul
lods
cmpsb
adc
insl
mov
lret
in
mov
je
hlt
rclb
lea
sub
xlat
add
movsb
cwtl
or
sbb
jp
adc
popa
rolb
mov
daa
jle
inc
loop
cli
lahf
or
push
testb
repz
hlt
negb
lret
ret
push
ja
ja
push
jp
insl
xor
repnz
jnp
icebp
sbb
inc
and
dec
pop
mov
call
dec
aad
lret
pop
sbb
adc
rcr
xor
cmovo
fidivrl
insl
into
mov
mov
sub
scas
fwait
sbb
mov
testl
sbb
bound
gs
xchg
fdiv
insb
insl
mov
pop
pop
mov
jp
fcomip
jb
push
gs
fwait
sub
imul
ljmp
inc
nop
movaps
hlt
mov
es
insl
aas
push
in
push
fcmovnu
sub
fwait
mov
insb
xchg
sub
jo
push
inc
jl
das
fidivrs
push
dec
xor
fs
mov
mov
dec
loop
popf
sbb
sahf
stos
and
jl
xorb
jg
jmp
stos
sbb
mov
mov
movsl
sbb
xor
mov
mov
out
or
pop
mov
jmp
pop
lcall
arpl
rcll
loopne
into
ja
leave
push
outsb
les
mov
aad
jae
jno
into
inc
loop
or
cmp
add
into
iret
jo
pop
adc
int3
mov
push
sbb
sub
cs
test
xlat
dec
out
sub
sub
jle
cmpsb
pop
jae
pop
movsb
aam
outsl
nop
mov
add
jge
sbb
mov
pop
mov
dec
mov
adc
sub
mov
pop
ja
outsb
out
mov
repz
lret
adc
jl
flds
or
mov
push
push
incl
clc
dec
jno
xor
push
mov
fcmovne
cli
ds
sbb
subb
cli
ss
mov
dec
ss
jb
rcr
into
out
pop
jb
ss
pop
stos
push
stos
cli
xchg
push
push
cmp
mov
subb
test
xor
ret
xchg
int3
pop
mov
cld
cmp
mov
mov
testb
mov
lods
leave
and
inc
adc
pop
and
sbb
mov
sbb
scas
add
clc
lods
push
sub
push
gs
pop
hlt
repnz
sbb
or
sbb
pop
inc
add
jl
data16
cwtl
inc
push
xorb
or
push
mov
fldcw
test
sub
push
lret
out
arpl
mov
fwait
scas
shll
imul
jmp
cmp
cmpsb
stc
mov
repnz
aas
pusha
push
push
das
adc
add
mov
xor
xor
test
test
push
outsb
xor
incl
mov
sub
push
adc
int3
pop
inc
and
pop
rcrb
divl
xor
adc
or
pop
cmpsb
mov
adc
mov
call
in
and
outsb
sub
aam
mov
ret
enter
xor
mov
jle
cmp
loop
and
jge
mov
into
test
cmpsl
mov
pop
lea
xchg
jb
fsubrl
cltd
jns
mov
mov
in
pop
adc
je
cld
mov
ja
adc
push
hlt
push
cli
or
or
add
fcomp
cli
repnz
test
enter
and
push
pop
pop
je
dec
pop
iret
dec
dec
das
ret
int3
in
outsb
fcmove
imul
shrb
jle
cmpsl
push
or
fstps
or
sti
outsb
add
dec
cmp
das
out
or
lcall
es
jbe
aad
push
cmc
fdivrl
mov
pop
add
or
fwait
cs
andl
ret
into
push
mov
jge
mov
dec
lret
stos
hlt
out
rclb
xchg
scas
push
daa
cld
jge
add
mov
aaa
mov
mov
mov
inc
cltd
out
scas
add
test
or
xchg
cmp
in
sbb
pop
push
inc
sub
jmp
pop
imul
mov
sahf
cltd
call
and
add
arpl
sub
ja
test
sbb
add
nop
mov
xchg
mov
inc
inc
mov
lret
out
fstpt
mov
shlb
cld
loope
mov
push
cmp
in
mov
pop
or
fwait
and
mov
pop
fbld
xlat
or
push
in
lret
pop
pop
dec
jne
pop
jnp
cli
ljmp
out
push
sbb
icebp
xorb
popf
insl
cli
lahf
xchg
movl
sub
adc
push
jecxz
jae
xorb
mov
pop
repnz
out
int
stos
in
movsb
mov
cwtl
arpl
push
mov
cmpsb
popa
std
pop
xchg
in
in
add
jne
jp
or
jae
lret
lock
cmc
pop
dec
inc
ds
jmp
sub
add
cmp
mov
inc
adc
jo
sahf
xchg
leave
inc
pop
movsl
cmp
jne
adc
xchg
cmpsb
push
inc
loop
mov
popa
clc
xchg
sbb
sub
and
cmpsb
pop
or
js
call
dec
fucom
nop
out
clc
das
test
fistps
lock
arpl
pop
pop
pop
in
ljmp
fistl
lea
push
sub
in
push
dec
into
data16
stos
pushf
xor
inc
sahf
sub
xor
fdivs
push
mov
out
and
pusha
inc
xchg
mov
in
movsb
testb
mov
sub
adc
loop
mov
adc
pop
cld
outsb
cltd
jae
fisttps
cmpsb
ret
dec
mov
jp
push
mov
jge
inc
mov
push
inc
and
aam
popa
and
data16
or
int3
mov
pop
sbb
cmp
cmpl
jb
outsl
push
call
add
sbb
das
addr16
and
mov
xor
mov
mov
lods
or
pop
mov
mov
ss
mov
data16
adc
lret
bound
dec
sbb
pop
push
inc
cmpsb
aad
sub
mov
jmp
cmp
hlt
pop
inc
imul
cld
add
dec
insb
imul
mov
call
movsl
mov
sbb
adc
xchg
repnz
and
jmp
or
das
adc
push
imul
std
xchg
test
push
mov
negb
mov
inc
fwait
ljmp
outsb
cmp
pop
test
clc
int
dec
pop
or
xchg
sbb
loope
adc
aaa
pop
ss
inc
mov
xchg
jnp
fmuls
sub
dec
stos
in
inc
xlat
sub
adc
sub
mov
pop
test
xor
gs
aaa
aaa
jle
fwait
les
push
in
imul
mulb
mov
dec
cmp
mov
inc
ljmp
lcall
and
out
xchg
dec
adc
fildl
add
mov
cmpsl
pop
aam
aad
gs
stos
sub
leave
scas
arpl
dec
inc
sahf
push
xchg
in
mov
mov
sub
dec
mov
sub
into
sub
aaa
roll
or
repnz
roll
paddd
je
xchg
aas
sbb
xor
stos
dec
mov
jmp
nop
push
inc
mov
and
test
popa
pop
add
sub
stc
imul
sahf
addb
jmp
add
int3
sti
dec
mov
sub
dec
cmpsl
stos
lahf
movsl
inc
sub
vmovlpd
pop
outsl
leave
dec
push
jno
mov
mov
mov
jno
mov
mov
js
fwait
jnp
cmp
test
rcl
adc
mov
das
mov
xor
cltd
xor
xchg
sub
push
xchg
into
mov
sti
popa
pushf
sbb
sub
loopne
fistps
ficoml
xchg
in
inc
pusha
adc
sub
insb
test
push
cwtl
jb
mov
adc
rorl
adc
dec
mov
cwtl
xor
xor
push
mov
jbe
mov
mov
cmp
fadd
lahf
ss
insl
lock
add
cmp
not
iret
pop
adc
arpl
jmp
xor
sub
push
sub
imulb
ds
enter
lret
ret
stos
inc
imul
pop
gs
jp
xchg
fucom
test
repz
jbe
stos
mov
pop
das
sbb
cwtl
xor
sub
test
adc
test
push
pop
xchg
mov
push
repnz
rol
addb
movsb
mov
fiadds
pop
xchg
sbb
dec
xor
sub
mov
push
mov
adc
inc
jmp
cwtl
mov
and
lea
cltd
pop
adcb
pop
jnp
dec
or
fsubrs
xor
or
rcrl
sti
adc
inc
movl
ljmp
jecxz
hlt
into
je
mov
mov
jl
or
dec
int3
xchg
push
outsb
pop
xchg
imul
or
jne
xchg
xchg
lret
cmp
in
rol
mov
push
imul
cmc
ret
mov
int3
pop
stc
xlat
xor
aaa
or
pop
cmp
shr
out
xor
inc
movsl
xorl
sbbl
push
sbb
mov
hlt
popf
lock
push
mov
pusha
fstpl
cmp
repz
cwtl
jl
inc
aad
mov
dec
test
adc
ret
mov
push
pop
bound
and
test
jecxz
daa
scas
pop
mov
jl
pop
jecxz
clc
push
stos
push
push
jg
arpl
jecxz
xchg
sub
cwtl
mov
lock
loop
push
cmp
push
gs
jecxz
and
ja
sub
imul
pop
jp
push
dec
xor
xor
and
ja
pop
js
pop
jb
pusha
sub
mov
and
dec
lahf
add
jbe
ret
push
or
pop
push
sub
jb
cmpsb
enter
adc
sbb
mov
mov
mov
pushl
les
scas
sbb
mov
lret
and
fs
and
loope
js
jne
repnz
iret
cwtl
loop
sub
or
loope
cmp
xor
in
mov
pop
or
xchg
es
test
xor
stos
nop
add
je
jge
adc
dec
fdivs
push
out
mov
push
jbe
or
lahf
xchg
cmp
jge
fstl
xchg
fmuls
jp
je
je
mov
es
inc
sbb
xchg
pop
adc
loop
sbb
jp
push
pusha
ficomps
lock
aas
dec
test
cmp
sarl
out
and
cli
dec
shrl
or
arpl
xchg
or
jp
push
and
mov
std
pop
shrb
push
sbb
xor
data16
sub
push
std
pop
orl
iret
aas
dec
xchg
and
xor
lods
movsl
sbb
sbb
fcoml
mov
xor
mov
iret
inc
pop
call
cmpsb
mov
jnp
in
sub
mov
aaa
push
clc
shl
call
xchg
and
add
ss
scas
pop
les
movsl
xchg
jmp
xchg
pushf
and
push
sbb
lea
pop
jmp
aam
and
loopne
mov
push
jbe
fs
mov
add
in
adc
cmp
mov
fidivl
push
mov
pop
aaa
adc
call
call
pop
push
loop
fidivrs
mov
mov
nop
xchg
testb
cmpsb
in
sahf
cwtl
inc
sub
subl
add
pop
sahf
fcmovnb
in
movsl
cmp
imul
sub
sbbb
xlat
cmp
push
int3
or
into
adc
je
mov
daa
cld
das
fs
shll
adc
or
ret
pop
in
sub
inc
adc
xchg
sub
shll
imul
jecxz
mov
adc
mov
jne
mov
leave
movsb
sahf
hlt
add
dec
cmp
push
xor
cmpsl
xchg
add
ficoml
in
sub
out
push
jle
push
xor
std
cmp
or
daa
ficoms
test
jp
scas
add
inc
pop
ror
cmpsb
adc
push
push
adc
in
adc
hlt
in
xchg
xchg
std
es
inc
lahf
jnp
jle
dec
mov
inc
das
xor
clc
cmp
lahf
push
push
insb
sub
dec
cmp
test
ja
cli
inc
pop
aaa
lea
in
adc
movb
daa
add
ret
push
js
cli
push
and
js
imul
stos
insb
fsts
movsl
xchg
add
fcmovnu
push
inc
fstpl
shlb
pop
insb
pop
pop
ja
inc
inc
push
inc
movsl
inc
mov
cmc
push
jg
and
in
mov
jle
pop
mov
cmpsl
ret
mov
cmp
in
scas
sti
jb
test
in
mov
or
sbb
cld
lds
arpl
hlt
adc
testl
cmpb
stc
inc
mov
jnp
addb
xchg
shrl
in
and
repz
filds
jmp
adc
aaa
aas
mov
sub
je
push
push
dec
scas
mov
imul
lcall
test
inc
or
push
inc
mov
sub
or
scas
popf
cmc
lahf
jecxz
andb
imul
pushf
mov
stc
shrl
mov
cmp
dec
sbbl
pop
sbbb
cltd
or
inc
sbb
mov
add
repz
adc
dec
lods
mov
movsb
call
mov
pop
add
popa
lret
mov
adc
sub
and
sub
xchg
add
inc
or
or
xor
mov
mov
mov
loope
imul
jl
shll
adcl
jns
pop
insb
in
iret
sub
and
jmp
stc
or
jmp
movsb
xchg
repnz
cli
or
rcrl
aad
es
fbstp
sbb
push
stos
je
rcrb
pop
mov
adc
ret
imul
or
mov
fdivs
sub
into
mov
adc
mov
mov
xor
inc
xlat
xlat
daa
mov
adcb
in
sti
subb
das
mov
arpl
movsb
and
insl
inc
test
push
dec
xor
andb
jnp
jge
int
shll
inc
adcb
arpl
enter
icebp
add
pop
mov
pop
ret
mov
sub
dec
push
xchg
nop
cmpsb
int3
pop
fsub
mov
pop
push
test
int3
movnti
imul
mov
mov
fprem1
lock
iret
push
movsb
xor
jle
test
pop
adc
in
mov
testb
gs
mov
and
dec
mov
mov
sbb
cmpsb
in
pushf
lret
add
imul
or
jns
mov
dec
cmp
and
sub
mov
xchg
bound
mov
xchg
xchg
add
adc
dec
pop
push
shll
ret
out
scas
movsb
lds
lods
nop
es
push
sub
pop
inc
test
jb
mov
aas
xor
mov
dec
lret
dec
mov
in
jge
push
jae
inc
sti
arpl
jl
mov
push
jno
sbb
stos
xchg
das
push
mov
stos
add
sbb
outsl
iret
inc
lods
mov
fistps
xlat
lcall
lret
scas
aad
test
cwtl
cmc
or
popa
sub
mov
sub
push
rol
int
out
sahf
mov
push
data16
push
cmp
fidivs
add
repz
mov
mov
pop
loope
xchg
inc
lea
in
sub
sub
push
xor
xchg
jb
cmp
iret
lds
dec
cltd
xchg
shrl
push
mov
pop
mov
jb
popf
mov
or
gs
push
xchg
and
xor
or
out
jnp
fiadds
cltd
and
xchg
jmp
add
imul
push
cld
out
cpuid
stos
mov
sti
cmpsl
xchg
mov
fsub
gs
cmp
fimull
ja
dec
dec
dec
pusha
xor
push
xor
and
push
push
imul
pop
jmp
or
ljmp
mul
mov
loopne
rcll
sbb
and
jbe
loop
leave
ret
aaa
fisubl
leave
ljmp
adc
daa
add
fldlg2
lcall
xor
xchg
lds
call
inc
cmp
add
aad
xchg
sarb
imul
inc
fisubs
sbb
mov
push
sub
loop
outsl
sti
lahf
lcall
jnp
jmp
test
cmp
cmp
dec
mov
je
lods
test
xor
lahf
or
pop
jmp
lock
repnz
js
sub
js
lret
push
jge
out
and
pop
pop
cltd
dec
lret
cmp
addr16
loope
ja
fadds
nop
mov
cmp
jbe
cld
lret
sub
adc
fwait
mov
mov
lret
jne
mov
nop
mov
mov
mov
mov
bound
xchg
jge
addr16
cmp
loope
in
imulb
faddl
add
ljmp
push
stos
cmp
mov
mov
imul
push
and
jg
dec
fs
addr16
lock
mov
sub
lahf
and
das
push
fdivrl
mov
or
lret
es
or
into
xchg
cmpb
inc
pop
aam
pushl
lods
lcall
sahf
mov
sarl
or
out
adc
xor
adc
aad
pop
cli
cmp
cs
sub
iret
popa
rcll
xor
mov
xchg
cmp
mov
sub
jb
fiaddl
or
insb
cs
inc
std
mov
or
pop
mov
jg
cmp
dec
inc
imul
fwait
aad
or
or
jle
sbb
int3
psubd
and
pop
roll
mov
mov
int
mov
out
xchg
or
out
ss
ret
scas
xlat
std
push
out
icebp
dec
jb
gs
or
xor
mov
flds
jge
mov
cmpsb
jbe
add
sti
test
and
sub
jge
in
leave
cmpsl
or
sbb
adc
xor
mulb
push
popa
into
insb
xchg
push
cmp
sub
add
cltd
pusha
push
and
xlat
mov
ret
cmc
jns
mov
push
movsl
adc
clc
aam
and
les
inc
or
push
mov
inc
xor
aam
or
dec
bound
shlb
adc
loopne
jnp
loop
cmc
popf
sbb
in
repz
inc
cld
jp
cld
out
and
inc
and
jne
into
or
mov
sub
movsb
pop
jns
imul
add
inc
and
sbb
adc
mov
pop
push
mov
or
mov
stc
pushf
inc
xchg
lds
lcall
mov
push
jae
lret
xor
dec
mov
push
push
cmp
mov
in
inc
inc
loop
out
or
sbb
jge
and
jne
sbb
aaa
sahf
dec
insl
ds
inc
out
in
insl
jge
cmp
pop
adc
popf
sub
in
pusha
imul
frndint
push
stos
rcrb
clc
loop
loop
cmp
or
push
ret
push
enter
arpl
addr16
in
mov
pop
addb
sti
in
sub
pusha
add
das
adc
enter
cmp
xchg
jno
and
mov
adc
icebp
shrl
xchg
sub
or
pop
mov
fstl
mov
jno
cmpb
add
adc
push
sub
movsb
jl
push
inc
add
sbb
pop
aad
cmp
push
loopew
cld
cmp
cli
mov
push
pusha
cmp
add
xor
cmp
cmp
mov
mov
push
stc
xor
cmc
xchg
lret
ss
rcrl
mov
sarl
jecxz
mov
xchg
mov
jle
add
pushw
mov
sbb
lods
fldcw
fwait
and
xor
and
cmp
es
and
mov
add
or
fdivl
in
sub
or
or
mov
mov
cmp
stos
mov
mov
popf
mov
mov
pop
in
ret
stc
xor
roll
dec
adc
push
das
call
stos
or
int3
aad
fwait
je
sar
push
mov
orl
mov
mov
into
or
rcrb
int
cmp
sti
cs
lods
dec
mov
shlb
inc
pop
shrd
movd
lahf
adc
gs
movsl
mov
adc
jmp
iret
xor
mov
pop
mov
test
inc
ror
imul
faddl
and
or
dec
push
mov
test
inc
repnz
nop
rorl
lods
dec
aam
jne
push
dec
cmp
add
sarb
sub
inc
sub
orl
ja
mov
xor
mov
jnp
inc
out
xlat
inc
mov
xchg
ljmp
sbb
dec
outsl
dec
loop
pushf
push
test
pop
jbe
sbb
js
push
test
pop
rcrl
adc
adc
xor
test
clc
sub
int
mov
enter
and
jl
sub
push
shl
sub
dec
lret
jo
dec
adc
idiv
test
mov
jge
mov
and
cmp
lret
sub
add
and
mov
jbe
mov
jo
outsl
cmp
jo
fisttps
lcall
pop
jno
mov
popa
dec
ret
adc
xchg
rcll
loope
int3
xchg
mov
sub
jns
cmp
loope
sub
lds
arpl
mov
out
cmc
inc
movsl
jmp
daa
dec
xchg
mov
sbb
jno
xchg
pop
cwtl
daa
sub
lahf
addb
into
jns
lret
xor
pop
adc
inc
mov
ds
test
and
jecxz
cmpsl
cmpsl
cmp
jmp
sbb
jno
fisttps
xchg
push
and
cltd
or
repnz
add
mov
mull
xor
fldcw
push
fists
daa
cltd
jne
ret
outsb
aaa
or
sbb
js
jns
fimuls
xchg
pusha
jmp
movl
scas
jae
gs
sub
jg
aad
sbb
jg
xchg
lods
loop
lock
mov
xor
addr16
sti
adc
xchg
popa
das
insl
dec
sbb
inc
push
fs
loopne
popf
enter
sbb
push
into
mov
ljmp
fcomi
call
push
addl
loopne
in
stc
ja
jno
mov
fnstenv
dec
jmp
inc
aaa
pop
shlb
adc
mov
dec
std
fidivrl
fwait
out
inc
pusha
aam
and
dec
push
jae
test
je
lods
pop
inc
int
or
int
xor
popa
dec
iret
outsl
xorb
jb
mov
mov
push
add
aad
jno
je
cmp
movsb
fdivr
ja
sbb
mov
and
adc
sub
jae
imul
out
add
jo
add
mov
xchg
int
or
je
push
jp
xor
xchg
rorb
sti
fisubs
lods
in
sbb
push
cmp
arpl
cli
lock
sar
sub
pop
sub
mov
mov
loope
lret
sbb
mov
xor
sub
mov
mov
mov
bound
adc
cmp
mov
pop
imul
push
loop
out
mov
into
lods
push
pop
loop
decb
jno
pop
xor
mov
xor
lods
icebp
add
dec
sahf
adcb
test
aas
push
mov
fs
imul
or
mov
xchg
mov
mov
jo
pop
outsb
jg
cli
xor
out
in
jg
rcrb
push
mov
sub
sbb
inc
rcl
imul
dec
loopne
sub
inc
aas
movsb
ret
shl
cmp
inc
aaa
out
lea
fs
cmp
mov
inc
and
and
das
in
cwtl
mov
dec
or
test
loope
mov
mov
mov
test
xchg
mov
cwtl
mov
fs
push
fisttps
and
ucomiss
into
scas
pop
and
jle
orb
inc
xor
stc
shrb
push
shll
pop
mov
stos
test
cmpsl
inc
andl
ficoml
pop
dec
insb
scas
ljmp
cmp
mov
loopne
pusha
jp
negl
adc
dec
pop
jo
jp
pop
gs
mov
outsb
cmpsl
mov
test
dec
cmp
adc
pop
cmp
jmp
mov
out
add
icebp
lret
sbb
cmp
lret
stos
xchg
pop
sub
add
pop
mov
push
add
int3
cld
lock
jne
lea
out
in
repz
fwait
orl
cwtl
orl
jne
sbb
movsb
stos
xchg
push
jo
fistps
push
pop
or
cmp
cmpsl
mov
cmp
or
push
ja
adc
adc
dec
or
in
mov
mov
loopne
xchg
scas
pop
mov
lea
push
push
mov
mulb
sub
lret
jge
int
mov
or
daa
ds
insb
push
or
jno
sbb
mov
pop
cltd
inc
mov
fidivl
inc
movb
filds
dec
pusha
dec
lock
jbe
jle
jp
inc
adc
push
push
icebp
push
cltd
inc
xchg
inc
ljmp
sub
shlb
pop
in
movl
insb
jne
mov
fstp
add
pop
xchg
outsb
cli
pop
or
je
lods
jmp
sbb
xchg
and
dec
dec
aad
sbb
in
pop
scas
pop
fdivs
xchg
jb
ss
cmp
push
fdiv
icebp
shld
aaa
sub
add
add
std
std
xchg
xchg
sbb
jle
nop
or
or
push
call
test
mov
shl
dec
inc
push
test
xor
iret
mov
dec
jbe
xlat
jnp
inc
dec
or
repnz
neg
test
cmp
fucomip
clc
out
lods
repnz
das
xchg
test
and
mov
ret
jae
cmp
not
cmp
dec
jnp
fs
icebp
jae
lcall
daa
pop
sti
pushf
das
lret
dec
js
xchg
cmpsb
clc
int
dec
cmp
enter
and
test
inc
push
adc
in
imul
dec
test
pop
lcall
addr16
cmp
pop
ljmp
pop
and
clc
and
ud1
pop
bound
mov
push
ja
sub
dec
cli
mov
cs
fmull
cltd
push
loop
mov
adc
enter
adc
push
pop
and
add
hlt
sbb
or
sbb
inc
sbb
pop
and
mov
lahf
mov
cld
mov
mov
lods
dec
mov
mov
test
add
cli
stc
and
in
das
popa
push
or
mov
xor
fcompl
test
mov
stc
jb
push
dec
rcr
rcrb
xchg
js
sbbb
add
jmp
cmc
adc
std
adc
out
xchg
lea
or
cmp
pop
test
fs
inc
cmpsl
pop
jno
imul
sbb
enter
aaa
imulb
push
add
jle
out
movb
push
outsb
jb
pop
dec
cmpsb
mov
mov
mov
movsb
mov
mov
xchg
jecxz
out
mov
ja
stc
push
or
mov
xabort
sahf
dec
sub
adc
jno
pop
add
push
mov
mov
push
xor
mov
lock
insl
adc
mov
pop
ds
xchg
sahf
sbb
fwait
insl
adc
movups
mov
mov
lcall
and
adc
int3
jae
mov
fdivrs
std
cmp
mov
ret
icebp
xchg
cmp
dec
sbb
mov
sub
xchg
push
sub
cmc
mov
mov
sbb
xor
sub
ret
push
cmp
push
add
pop
mov
test
outsl
mov
adcl
stos
movl
xor
sti
and
pop
mov
dec
insl
add
in
add
jg
and
xchg
mov
mov
inc
in
mov
pop
xchg
jle
adc
and
movb
dec
and
jge
inc
push
mov
mov
repz
push
cmp
lret
push
jo
testb
fistpll
std
popa
in
xchg
pop
mov
inc
and
sub
dec
or
mov
mov
shll
fidivrs
push
outsb
cmp
or
aam
pop
nop
test
jg
arpl
mov
push
add
psrlw
mull
int3
jnp
xchg
dec
cmp
mov
mov
pop
mov
rorb
je
loopne
aas
inc
leave
stos
push
push
pusha
lock
mov
insl
rcr
jp
add
inc
cmpsb
push
pusha
into
add
pop
push
add
flds
stos
sub
lahf
cmpsb
inc
ficompl
popa
movsb
dec
fistps
cmp
fiaddl
clc
lea
insl
push
xchg
sbb
int
inc
repz
roll
pop
nop
js
jb
lea
sub
or
dec
hlt
fnstsw
fdivr
aad
and
adc
push
es
test
std
lods
or
pusha
cmpsb
cltd
in
xchg
pop
sub
xlat
lea
imul
cmpsl
neg
lods
lods
xchg
pop
jo
rol
je
mov
in
pop
sahf
ljmp
fildl
xlat
and
ds
xchg
jl
xor
jb
pop
les
dec
or
fdivrl
jno
push
aaa
das
jne
adc
push
xchg
mov
mov
push
mov
mov
dec
cmp
adc
sbb
mov
jnp
lret
push
dec
nop
or
dec
mov
fists
xlat
loope
sbb
jmp
push
jp
add
ret
insl
cmp
sbb
push
fmull
mov
out
push
mov
fisttps
jp
inc
lahf
out
aas
add
arpl
cld
mov
cmp
pop
sub
in
notl
pop
mov
push
movsl
and
pop
ja
xchg
icebp
sbb
dec
cmp
mov
cwtl
mov
aam
xlat
das
mov
mov
stos
daa
add
pop
int3
fnstenv
pop
cmc
sub
xor
fidivrl
addb
jae
lret
addl
sub
cmp
sub
sbb
das
test
sbb
jnp
push
lahf
mov
stos
sub
mov
xchg
xlat
add
dec
mov
jp
aam
xchg
adc
outsl
shl
and
xor
outsl
cltd
imul
rcl
stc
xchg
sahf
inc
pop
cld
xchg
hlt
subl
les
add
ret
aas
mov
pop
mov
outsb
nop
test
outsb
mov
lea
in
push
idivb
xor
add
mov
popa
dec
xchg
jle
or
push
sbb
loope
dec
and
xchg
pop
xor
shlb
rorb
outsl
std
xor
jl
push
cmpsb
mov
jno,pt
sbb
or
out
xorl
popf
stc
and
stos
mov
in
clc
xor
jo
es
xlat
fs
push
lret
pop
pop
fldt
jae
jle
or
arpl
aam
dec
stos
lret
inc
popa
inc
xor
cwtl
fcomps
push
jp
stos
repz
cwtl
pop
enter
shrl
lret
cmp
jae
sbb
clc
fscale
inc
adc
jl
icebp
xchg
les
movb
rorl
cmp
lods
out
push
sub
call
arpl
pop
popa
shrl
xor
std
cwtl
rol
lret
cmpsl
sahf
pop
fistl
sbb
sti
xor
pushf
pop
ret
shrb
mov
and
lea
adc
fsubs
sbb
pop
nop
pusha
lcall
scas
jp
mov
lret
bound
stc
fcoms
cmp
lock
push
inc
hlt
movsl
lods
push
xor
push
pop
js
jnp
test
loopne
int3
pop
adc
int3
sub
in
out
dec
mov
xlat
pop
cmp
std
enter
xor
or
mov
push
enter
inc
shrl
sbb
inc
jl
jbe
inc
es
daa
fisttpl
jne
cli
cmp
mov
pop
mov
xchg
call
sub
es
ja
mov
jne
pop
jg
insb
ljmp
dec
mov
pop
into
ficomps
xlat
and
arpl
jl
mov
popa
pop
inc
adc
jmp
push
mov
push
fimull
fcoml
cmp
faddl
int
sbb
outsl
lcall
fs
fld
out
ljmp
and
xor
dec
nop
and
enter
mov
cmp
push
dec
jg
cmpl
mov
sahf
xchg
or
daa
sub
dec
dec
lods
or
pop
jnp
or
jnp
adcb
sbb
into
dec
fldt
lods
je
shll
xor
rcll
inc
movsb
std
mov
aam
pop
xor
popf
das
scas
lock
and
inc
mov
pushf
dec
rolb
rclb
cmpsl
test
ss
jns
or
cltd
inc
out
int
add
xchg
add
push
sbb
pop
mov
lahf
mov
sti
cmc
test
stc
pop
xchg
dec
push
pop
xchg
test
je
fmull
aam
inc
pop
xchg
lock
out
xor
push
mov
aas
adc
pop
mov
adc
xlat
fs
cmp
dec
pop
xlat
lods
imul
inc
addl
pop
lods
jl
ljmp
or
imull
push
call
call
lods
dec
and
push
mov
xchg
adc
xchg
fwait
cld
xor
mov
pop
enter
inc
stos
js
mov
push
fldenv
ss
and
push
orb
cmp
hlt
sbb
and
dec
lds
or
lds
cmp
hlt
jo
out
push
inc
sub
repnz
mov
dec
and
daa
jb
push
cmpsb
into
iret
je
insb
push
jbe
sti
shll
pop
mov
mov
push
out
jbe
in
xchg
cmc
inc
cwtl
xor
mov
push
std
xor
popf
repz
cmp
push
mov
mov
sub
mov
inc
xchg
dec
pop
enter
arpl
add
mov
xor
out
setae
leave
repnz
pop
xor
test
adc
jae
leave
je
or
cmp
push
out
mov
das
sbbb
sbb
xchg
mov
dec
add
jle
adc
adc
jge
mov
fxch
dec
mov
iret
loope
or
repnz
inc
int3
xor
mov
das
dec
jge
je
sti
shrb
dec
adc
fldcw
adc
mov
addl
ljmp
push
stc
sbb
pop
bound
lret
in
inc
mov
jle
and
je
inc
pop
movsb
mov
lahf
xchg
or
push
xor
fdivs
inc
imul
and
xor
mov
aas
popf
push
push
jb
imul
sbb
je
pop
push
loopne
mov
ret
adc
pop
lods
and
je
std
or
ja
fisubs
stos
outsl
dec
outsb
adc
inc
cmp
arpl
pop
or
stc
aas
adc
lcall
jae
sub
imul
mov
dec
data16
call
lods
cmp
lds
mov
and
mov
lds
hlt
push
loopne
lock
movsl
fsubrs
jb
leave
and
bound
pusha
lods
cmp
subb
iret
shlb
add
cmpsl
scas
int3
push
push
and
fs
lahf
push
aas
gs
dec
or
add
xlat
sti
or
cmp
gs
dec
in
lcall
push
push
ja
pop
mov
jecxz
push
sub
xor
xchg
inc
les
pusha
add
xor
roll
fiadds
lret
nop
dec
insb
mov
nop
sbb
les
push
cmc
sub
lcall
je
addl
push
clc
fcoms
aaa
pop
push
pop
mov
cmp
les
adc
pop
into
cmp
outsl
sahf
sbb
mov
pop
aaa
xchg
xchg
push
in
insl
xorl
push
pushf
and
mov
mov
adc
enter
push
loop
stos
push
cmp
mov
mov
out
mov
and
fadd
imul
xor
jge
lock
jae
push
test
paddw
push
mov
add
stos
jb
mov
les
mov
push
lods
faddl
aaa
aas
mov
mov
pop
mov
outsl
testb
jne
addr16
lcall
aaa
mov
cmpsl
mov
cwtl
add
jbe
jnp
fcoml
adc
dec
xor
scas
lods
push
lods
sub
jmp
sub
jo
test
sbb
out
pop
fsubl
and
ja
sbb
loopne
or
icebp
bnd
test
and
jmp
dec
inc
in
inc
jo
cmp
shlb
out
mov
mov
lea
cs
xor
mov
fists
in
adc
outsb
test
outsl
mov
inc
add
mov
push
movsb
out
je
or
mov
add
jae
mov
mov
shll
imul
leave
lock
pop
pop
popa
inc
aaa
pop
dec
sbb
inc
out
jno
cmp
dec
movsb
adc
aad
jo
idivl
add
or
mov
adc
in
add
pop
mov
jns
or
clc
imul
mov
ja
lret
cmp
adcl
sarb
inc
mov
add
xor
dec
cmp
or
sub
fwait
hlt
jns
inc
mov
arpl
aam
or
insl
out
mov
decl
mov
or
push
sti
call
dec
lret
fistps
pop
cli
shll
scas
adc
sub
fldl
sahf
cmp
aas
fisttpl
popa
negl
jne
mov
cmpsl
jae
pop
add
jl
jmp
aaa
fcmovnbe
xor
and
cwtl
lods
pop
mov
pop
mov
mov
inc
out
lcall
adc
add
push
xchg
lea
adc
push
xchg
mov
ja
mov
pop
lret
or
cmpsl
jns
fxch
cmpsl
cmpsb
es
testb
js
or
pop
and
cwtl
mov
dec
and
adc
push
add
jb
pop
mov
je
push
lock
cli
dec
imul
cs
loopne
out
inc
ret
mov
jl
pop
cmp
cmp
mov
or
jbe
nop
bound
and
sarl
pop
fisttpl
adc
dec
fisubrl
scas
pop
rcrb
dec
cmc
inc
push
mov
scas
push
xchg
nop
jmp
cmc
cwtl
jle
lcall
mov
sub
cmpsb
cmpsb
loope
fisttpll
dec
jge
dec
mov
cmp
jmp
xchg
scas
data16
es
jns
arpl
push
jecxz
loope
pushf
sbb
jnp
out
xchg
xchg
rorb
popf
ja
iret
dec
xlat
add
jge
jbe
cmpl
adc
jae
jl
fists
ret
mov
testb
adc
xlat
or
push
test
mov
inc
daa
loopne
nop
rol
daa
cmp
xor
push
data16
jmp
inc
dec
movsb
orb
inc
adc
int3
xchg
outsl
ficoml
xchg
shlb
xchg
sbb
bound
frstor
pop
push
mov
add
adc
jae
xor
pop
inc
xchg
es
jno
cmp
xor
mov
mov
pop
push
test
xor
std
movsl
xchg
xor
sti
stc
push
sbb
cmpsl
jne
cmp
fucomp
xlat
in
filds
loopne
xorb
or
jns
ja
add
sub
sar
daa
test
pop
das
dec
cmpsl
nop
jbe
aam
push
xlat
or
jae
jno
hlt
sarl
arpl
outsb
out
fists
scas
adc
sbb
pop
mov
cmpsb
vmread
jno
shll
test
lods
pop
adc
cmp
pop
dec
orb
popa
and
int3
idiv
imul
movsb
xor
push
je
xor
xchg
fcmovne
ret
lods
ss
mov
xlat
js
xor
add
push
data16
mov
mov
mov
sbb
sbb
into
or
xchg
adc
jle
test
jecxz
pop
hlt
das
mov
sbb
jge
in
lret
xchg
aas
mov
bound
inc
cli
adc
jmp
mov
lods
iret
add
repnz
inc
or
dec
xchg
cld
xchg
mov
daa
arpl
lret
xor
mov
sahf
push
adc
je
sti
xor
inc
stc
dec
add
push
jl
sti
xor
out
shlb
insl
jno
inc
outsb
testl
pop
xchg
add
xor
jb
jle
jae
out
xor
ja
addl
jl
out
cmp
mov
push
je
inc
push
cmp
mov
xlat
stos
xchg
cli
and
ds
mov
push
arpl
mov
mov
push
stc
call
aad
vpminsw
int3
mov
popa
test
and
mov
inc
ret
dec
xchg
lret
and
adc
aad
mov
jnp
xor
bound
or
sub
or
inc
adc
jns
daa
jae
mov
push
inc
dec
ficompl
sub
adc
add
and
jecxz
xor
iret
jg
push
dec
fs
dec
out
push
sub
push
fwait
pushf
jle
sub
push
nop
std
adc
dec
stos
iret
adc
and
test
ljmp
repnz
scas
sub
fdivp
jp
xlat
bound
and
std
mov
xor
lods
add
sbbb
cmc
scas
imul
pinsrw
adc
push
cltd
pop
dec
stos
lahf
icebp
fmull
or
inc
or
dec
cwtl
cmc
xchg
cs
and
mov
insb
lahf
jae
pop
es
jbe
push
andl
pusha
mov
mov
std
add
cmp
or
or
or
repz
test
jmp
into
ja
dec
push
xor
and
rcll
aam
in
cmp
inc
insb
fnstsw
xchg
lods
inc
inc
push
icebp
rorb
dec
cmp
repz
popa
mov
repz
xor
inc
lcall
xchg
jg
into
ret
push
add
xchg
daa
fdivrl
dec
gs
push
int
pop
push
jl
stos
inc
or
pop
fsts
xchg
imul
mov
jnp
lahf
fildll
dec
pop
or
lea
sbb
xchg
mov
and
iret
call
pop
ret
loopne
or
je
dec
loopne
sbb
sti
enter
dec
movsb
cmp
lret
fidivrl
jmp
addr16
movl
ret
xlat
jno
decb
mov
dec
and
jmp
pslld
icebp
or
mov
fdivl
jbe
stos
push
ficoms
lret
out
jb
lahf
or
xchg
and
mov
negb
fsubl
xor
popa
repnz
imul
xchg
sbb
push
xor
aad
jl
or
add
jnp
jne
popa
maxps
fxch
adc
repnz
pusha
in
popa
jns
inc
movb
in
mov
push
cmp
push
jmp
jnp
sarb
aad
or
out
scas
sbb
jmp
and
inc
popf
popf
cmp
fldenv
dec
rorb
sub
ret
maxps
dec
adc
outsb
mov
and
jns
aam
ret
and
add
add
movsb
pop
pop
adc
xor
push
ss
xchg
mov
into
mov
xchg
xchg
aas
popa
and
aaa
and
jo
out
fdivs
xor
jle
mov
sub
in
test
and
sub
xor
repnz
test
bndldx
aam
mov
pop
push
mov
sub
in
rcll
and
mov
fstpl
push
aad
mov
adc
and
jmp
ljmp
addr16
xchg
test
cltd
sbb
or
adc
sub
or
lcall
cltd
push
jmp
std
roll
dec
inc
das
mov
mov
sbb
pushf
aad
jne
cmp
outsb
xor
ret
int3
arpl
ds
filds
les
mov
mov
mov
xor
pop
cltd
pushf
test
cs
fiadds
jae
push
mov
push
out
jmp
add
mov
dec
out
pop
pop
cli
sub
popf
stos
jnp
and
dec
add
push
jno
mov
push
adc
dec
cmc
out
mov
cmpl
pop
add
sub
cmp
sbb
add
pop
in
test
cld
fdivl
xchg
mov
push
lret
incl
sub
loop
push
xlat
sub
mov
push
fsubs
outsl
es
jg
loopne
dec
fcomi
add
arpl
or
cwtl
sub
outsb
jmp
pop
mov
and
scas
jae
mov
in
mov
jp
or
in
mov
xor
pop
sub
xor
xor
je
rcrb
xlat
cmp
lret
adc
adc
pop
leave
push
sbb
xor
jo
push
sbb
out
dec
test
vpunpckldq
cli
add
add
fwait
or
mov
popa
mov
aaa
cmpsl
mov
scas
int
dec
jne
xor
call
push
popl
or
pop
int
aad
and
rcr
mov
arpl
fcomps
jbe
cmp
jg
jmp
pusha
jne
fisttpll
cmp
out
inc
das
jg
mov
mov
sahf
insb
mov
xlat
aam
mov
pop
cltd
aad
push
imul
dec
sub
mov
add
mov
push
sti
xor
and
push
push
xchg
fchs
mov
scas
inc
mov
inc
shlb
ds
scas
mov
aas
jb
mov
nop
mov
js
popa
fsubs
and
fildll
fistpl
leave
movsb
incb
rolb
xchg
cmc
lea
nop
lods
pop
add
out
jns
shlb
ret
add
hlt
fldenv
cmpsb
test
xchg
cltd
jbe
sbbl
lea
xor
repz
cmp
sbb
or
iret
out
rcrl
out
xor
cmp
pop
pop
mov
mov
adc
into
add
hlt
mov
scas
outsl
adc
push
imul
stos
inc
pop
pop
or
lods
inc
movsl
jns
dec
add
or
loop
fs
jmp
and
leave
lret
mov
jno
out
add
fdivrl
sub
outsl
and
add
or
sbbl
sarl
pop
test
movsb
push
push
add
inc
cmp
js
iret
aaa
sbb
subl
mov
ss
mov
adc
aaa
mov
in
jno
ret
hlt
xchg
lods
jmp
shrb
es
mov
jae
orl
test
roll
das
pop
sub
jp
jns
lret
xor
jge
jmp
and
cmp
and
popa
add
mov
pusha
mov
hlt
or
mov
cli
mul
test
mov
insl
sbb
xlat
push
std
mov
xorl
add
sbb
dec
enter
lock
ret
out
in
incl
decb
jne
push
add
out
push
sub
dec
std
adc
ret
iret
into
in
call
push
xchg
ss
dec
stc
adc
mov
int
dec
push
scas
aas
jmp
and
sbb
or
rolb
jno
xchg
add
sub
in
jns
xor
mov
sub
out
sbb
jnp
push
outsl
push
and
pop
call
cmp
push
or
bound
cltd
sub
sarl
xor
imul
popf
lcall
jge
or
dec
sbb
lock
pop
cwtl
xchg
fidivs
cmpsl
into
xchg
add
xor
jno
jne
pop
push
test
ret
adc
mov
push
and
adc
sub
xorb
aad
inc
in
jb
lds
inc
filds
pop
mov
clc
jb
sbb
jl
and
inc
mov
ret
sahf
test
sbb
aas
cmp
jne
inc
lds
packuswb
scas
stc
mov
lret
daa
inc
jbe
add
insb
bswap
sub
push
push
stos
add
sub
mov
arpl
inc
stc
or
lcall
push
push
inc
or
roll
sti
and
rorb
popa
fnstsw
or
jg
push
adc
xor
cmp
xor
mov
sarl
mov
jo,pt
mov
sbb
and
cli
rcll
mov
xchg
dec
pop
fcoml
xchg
ss
adc
out
out
mov
adc
sbb
or
jecxz
lds
add
push
mov
loopne
xor
push
adc
adc
addl
imul
dec
push
push
sub
out
outsb
pop
test
xchg
std
mov
mov
cmpl
scas
stos
xor
sti
push
dec
pop
or
adc
out
cwtl
cwtl
decb
leave
or
das
cmp
pop
lods
insl
push
jp
dec
pop
jecxz
divb
dec
daa
lret
lcall
movsl
popa
and
cltd
pop
ret
fbld
sbb
repnz
ss
iret
and
xchg
lods
xchg
filds
mov
sbbl
int3
pop
int3
pop
mov
jg
notb
xor
cmp
nop
lea
mov
mov
adc
out
dec
mov
mov
push
jg
jno
mov
mov
shll
mov
or
xor
jp
jmp
or
sub
hlt
xorb
xchg
dec
popf
sbb
or
repnz
and
lods
inc
and
adc
mov
sbb
xor
lahf
mov
add
lret
xchg
mov
push
jp
mov
mov
adc
arpl
push
jmp
cmp
aam
adc
jmp
mov
shll
leave
nop
add
imul
lcall
scas
mov
adc
or
popa
xchg
dec
inc
mov
push
push
loope
nop
xchg
inc
mov
or
fwait
mov
push
push
out
xor
rcr
out
xchg
sbb
pop
xrelease
outsb
mov
mov
and
dec
dec
sub
pop
addr16
adcb
leave
in
push
out
lods
lret
cli
je
fdivs
jns
lea
cmpsb
push
stos
sbb
stc
push
mov
mov
cs
cltd
stc
and
aas
jle
sub
xchg
fwait
push
shrb
mov
pusha
cwtl
mov
bound
xor
adc
xchg
inc
and
add
lret
pusha
test
xchg
dec
mov
fstpt
dec
aas
adc
sbb
inc
dec
adc
ret
jns
xor
dec
call
mov
popf
rcr
lock
leave
lods
adc
outsl
enter
mov
jo
adcb
cs
pop
mov
and
enter
jg
sbb
movsb
mov
add
cwtl
out
xchg
and
xor
jp
out
xor
mov
int
inc
cmp
loope
adc
push
xor
repz
jmp
adc
sub
jae
popf
inc
sbb
or
sbb
rolb
jbe
xchg
mov
mov
sub
push
test
mov
in
gs
xchg
aas
movsl
fisttpll
aam
xchg
lea
adc
loop
mov
out
dec
repnz
scas
xchg
or
test
xchg
std
into
sub
fistps
mov
xor
pop
sar
in
in
ds
mov
inc
mov
and
insl
sti
out
xor
pop
adc
jg
xchg
cmp
dec
adc
jo
add
xor
mov
or
adc
in
divb
stos
pop
sub
push
inc
sti
sub
bound
jns
push
ret
cmc
jl
data16
pop
add
cmp
pop
sbb
jmp
mov
sbb
mov
adcl
mov
pop
and
insb
cmp
in
sbb
popf
addb
je
or
inc
push
lcall
sub
jno
jo
xchg
mov
test
jp
xchg
jl
jg
mov
and
and
enter
lock
adc
leave
fcoml
jle
pop
out
xor
or
int3
inc
adc
sbb
pop
pushf
cmpsb
push
mov
adc
xor
ds
pop
sub
xchg
adc
call
pop
xor
cmp
daa
mov
fucomi
jb
dec
push
xchg
xchg
loopne
sti
or
inc
fldcw
loop
aad
ficoms
push
or
jmp
pusha
imul
es
cmp
bswap
add
popa
cmpsl
ret
xchg
mov
imul
out
mov
loope
sbb
inc
xchg
fabs
sbbb
fs
lock
insb
mov
fs
adc
lods
push
pop
cmp
jae
in
testl
pop
data16
jl
adc
push
fldcw
mov
outsb
mov
pop
jmp
stc
cltd
stc
pop
clc
out
pop
lods
adc
xor
lea
push
inc
stos
or
loope
out
sti
insl
jbe
mov
leave
data16
clc
mov
lcall
fwait
pop
dec
addl
mov
add
mov
sbb
mov
stc
sahf
arpl
insl
push
pop
cwtl
mov
pop
dec
pop
add
jo
dec
iret
rcll
and
fwait
adc
movb
ficoms
xchg
mov
mov
xor
sub
mov
adc
inc
jae
mov
test
sub
leave
jl
or
aam
or
lods
test
int
daa
arpl
repz
int3
push
lods
dec
xchg
add
dec
aam
imul
dec
in
jo
aaa
or
push
jno
sbb
push
cmp
or
add
out
sbb
jo
mov
movsb
inc
iret
into
xor
fsubl
push
aad
lock
cmp
loop
ret
xor
jge
mov
push
cvtps2pd
push
sbb
sub
and
movsl
sub
aam
scas
or
cmpsb
ret
mov
pop
out
jbe
dec
and
inc
sub
pop
and
jg
sbb
arpl
jne
push
mov
push
mov
loope
jbe
xchg
mov
mov
mov
push
cmp
and
cmp
sub
mov
test
jle
stos
daa
push
and
fcompl
into
cltd
cmp
dec
lcall
pushf
or
cmpsl
inc
leave
enter
xchg
fwait
movsb
mov
mov
push
dec
xchg
push
and
xchg
lret
mov
mov
ja
adc
pop
int
loopne
insl
sbb
sbb
aaa
sbb
mov
xor
aam
imulb
or
ret
adc
outsb
pop
fcmovbe
pop
mov
cmp
jmp
push
es
aad
aad
shll
mov
xlat
int3
out
adc
stos
gs
adc
add
push
dec
arpl
lret
xchg
mov
dec
popa
xchg
xchg
xor
jecxz
jae
adc
fnstcw
xor
leave
cmc
pusha
lcall
mov
loop
cmp
outsb
ret
lret
lret
xchg
pop
pcmpgtw
loop
xor
inc
inc
and
or
lahf
test
aaa
add
out
notl
ret
or
sub
xchg
pop
std
and
out
jbe
bound
and
sbb
std
sub
sarl
imul
jmp
mov
in
in
fwait
sbb
add
les
sbb
iret
add
and
cmp
sbb
lods
mov
arpl
adc
inc
add
dec
jb
xchg
adc
aas
icebp
gs
loopne
scas
xor
outsb
out
loopne
cs
test
mov
sbb
mov
iret
mov
in
jnp
dec
sbb
adc
fdivl
push
shrl
cmp
dec
ljmp
fisttpl
and
pop
das
in
xchg
xorl
mov
or
dec
push
sub
pop
aam
sbb
xor
xchg
cmp
fsubrl
popf
and
int
sarb
arpl
xor
sti
icebp
jmp
out
pop
dec
dec
scas
imulb
add
std
loopne
addb
movsb
sbb
sub
add
inc
or
jge
jmp
aad
popa
pop
outsl
add
jp
outsb
and
arpl
loope
mov
daa
loop
cmp
mov
push
mov
jnp
mov
sti
mov
add
adc
inc
jle
add
dec
and
insb
sub
lcall
lds
into
jl
xor
data16
pop
sbb
lret
pusha
in
hlt
jg
inc
pop
ljmp
mov
out
loopne
stos
cmp
lret
fiaddl
clc
and
roll
pop
push
rcrb
pop
sub
mov
aas
sbb
jle
lea
icebp
popa
mov
les
popa
jg
rclb
ret
call
dec
addr16
xchg
pop
push
cmpsl
jne
es
jae
add
mov
aaa
or
adc
push
adc
rcrl
lret
mov
insl
aaa
xchg
or
lods
and
movl
cs
nop
ret
inc
rcll
jb
pop
or
loop
cmpsl
lcall
clc
fmuls
and
cltd
inc
adc
mov
xor
and
clc
jo
arpl
jbe
xchg
pop
inc
out
adc
push
repnz
xchg
jo
inc
pop
cmp
outsb
inc
cs
push
mov
rolb
stos
div
inc
jecxz
pop
sbb
dec
test
inc
mov
mov
data16
ss
xchg
jmp
add
inc
mov
je
cs
int3
push
sub
cld
sahf
inc
adc
or
lds
push
out
in
pop
xchg
jecxz
add
test
mov
jmp
mov
pop
jno
sub
repz
fistl
stos
sbb
cmp
adc
shl
mov
clc
les
mov
rcll
stos
pusha
iret
cli
mov
cmpl
mov
xchg
testb
dec
shll
sub
xor
jb
pop
stos
push
mov
pushf
fnstsw
cltd
mov
mov
or
in
xor
cmp
insb
mov
sbb
ljmp
jno
adc
cmp
stos
sti
xor
leave
mov
sti
mov
inc
xlat
xlat
das
cmp
shll
cmpsb
test
pop
dec
sub
push
int3
mov
loopne
cs
add
push
xor
and
adc
int
insb
mov
xchg
daa
insb
into
xor
add
and
xchg
inc
cmp
xor
xor
xchg
cltd
scas
mov
sub
outsb
pusha
or
repnz
push
adc
adc
jecxz
dec
test
out
in
mov
popf
pop
insb
ret
xchg
sub
add
loop
cs
cltd
movsb
or
frstor
daa
aaa
or
or
mov
rorb
cmp
shll
fdivrl
jno
sbb
add
pop
jne
cmp
sub
sub
mov
loopne
es
mov
loope
mov
xchg
fisttpll
int
arpl
js
rcrb
xor
adcb
dec
xchg
ret
fwait
cmp
sbb
scas
push
pop
sbb
sbb
mov
adc
push
bound
dec
sarl
xchg
or
insb
call
lret
nop
in
fildl
sub
add
add
popf
aas
or
jno
jno
aad
shl
inc
aas
jb
push
jge
notb
or
mov
sar
cmp
ret
push
push
pop
mov
fnsave
loopne
test
cld
cmpsl
mov
jnp
and
pop
nop
mov
mov
nop
xor
inc
rclb
sub
jge
jnp
fsub
mov
xchg
loopne
xchg
outsb
jne
fsubrs
rclb
mov
mov
cmp
jg
and
jb
sbb
cmp
jne
mov
pop
sub
xchg
add
or
sbb
sarb
lahf
loope
mov
pop
mov
sbb
mov
js
jo
jl
insl
imul
mov
std
mov
pop
mov
dec
and
mov
cmpsb
aas
adc
adc
inc
inc
lahf
mov
push
mov
jmp
xchg
rorb
popf
lret
bnd
or
movl
fadds
insb
out
jne
xor
aad
pushf
aas
add
aas
mov
dec
mov
clc
mov
inc
add
sbbb
int3
jno
adc
pop
sub
push
sbb
sbb
mov
daa
popf
pop
mov
mov
ret
pop
cld
es
fisubs
jmp
int3
outsb
jmp
sub
loop
sahf
imul
scas
jmp
lea
jno
test
sub
inc
mov
or
push
cs
test
lcall
pop
movsl
adc
testb
inc
test
jnp
rorl
rolb
pushf
mov
sbb
adc
push
lds
leave
js
xor
stos
imul
mov
fcoml
call
xchg
into
or
jb
or
test
xor
mov
ds
add
add
mov
leave
push
bound
and
jge
mov
iret
adcb
jg
pop
xor
xor
mov
lock
push
lock
mov
subl
sbb
and
jmp
mov
push
mov
arpl
out
and
mov
adc
imull
or
nop
inc
fcoms
add
in
cmpsl
jbe
add
pop
lds
xchg
jl
jbe
inc
shlb
data16
out
jne
pusha
push
sub
test
inc
sbb
fildl
lahf
and
add
shl
pop
stc
shlb
adc
xchg
repnz
aam
inc
pusha
and
leave
inc
and
mov
and
inc
stos
sahf
push
sbb
dec
int
clc
mov
outsl
es
enter
adc
icebp
xor
push
add
ds
test
mov
mov
and
popa
jg
adc
cmpsb
movsb
push
lcall
push
push
loopne
cltd
mov
pmullw
das
add
adc
imul
cmp
mov
sbb
jo
ror
sub
pop
cmpsl
ret
mov
fimuls
mov
push
bound
test
out
pop
fisubrl
push
pop
arpl
sub
call
dec
push
iret
pusha
push
xor
pop
movsb
pop
pusha
lret
or
jno
lcall
push
jg
sub
mov
out
jmp
adc
aam
pop
mov
mov
and
sbb
lods
aad
fbld
pop
and
mov
dec
lock
add
jnp
push
loope
push
mulb
movsb
inc
or
xchg
pop
and
mov
pushf
imul
ret
mov
lods
mov
pop
mov
scas
add
sbb
lahf
sbb
mov
sbb
or
lahf
jo
loop
das
mov
test
adcl
clc
mov
andw
jmp
mov
fists
or
outsb
popf
jl
cmp
jb
and
inc
mov
xchg
dec
stos
xchg
inc
cmpsl
and
js
loope
cmp
push
pop
lods
scas
fcmovnbe
call
xlat
inc
cmp
into
sbb
and
xchg
adc
adc
mov
or
loop
and
aas
or
push
ja
add
mov
shll
out
fists
cld
ss
xchg
aas
je
inc
mov
test
adc
enter
lods
mov
xchg
mov
jns
push
loop
inc
shlb
loope
mov
repz
mov
test
and
jecxz
arpl
xlat
movsl
and
jae
sub
mov
mov
sbb
adc
xor
pop
movsb
mov
rcrl
mov
or
push
pop
test
xor
dec
cmp
dec
xchg
mov
les
mov
adc
jecxz
dec
repnz
das
inc
mov
xor
hlt
sub
pusha
adc
es
inc
pop
and
sub
lret
add
insl
pop
rcrl
dec
sti
push
insl
push
xchg
ds
and
sbb
pop
movsb
outsb
movsb
add
sbb
outsl
push
sub
ret
roll
stos
jae
outsb
mov
test
call
pop
jle
mov
sbb
roll
rcrl
filds
mov
cmpsl
aam
mov
test
xchg
push
xor
mov
loopne
xchg
xor
daa
mov
xchg
pop
pop
xor
lods
daa
jo
iret
and
enter
nop
mov
pop
dec
dec
push
lret
bound
xor
iret
mov
hlt
xchg
xorl
loopne
xlat
mov
adc
andl
stc
iret
insb
stc
inc
shl
jge
or
fstl
das
sbb
sub
call
call
jmp
jg
jnp
sub
push
cmp
dec
fwait
fs
mov
leave
jo
xor
sub
pop
jnp
inc
dec
lods
cmovge
in
shl
outsl
lods
add
add
mov
cwtl
lret
mov
jno
in
push
mov
movb
mov
pop
negl
mov
push
into
sbb
ja
sub
dec
fs
xor
loop
push
cmpsb
outsb
imul
fdivrl
clc
sbb
movsl
or
lret
jne
pop
sub
cltd
inc
sub
mov
mov
loopne
and
push
push
and
mov
xor
cwtl
and
and
xchg
xor
in
mov
int3
inc
enter
mov
or
mull
cmp
lock
jl
inc
dec
jae
cld
mov
jecxz
jb
dec
mov
or
pushf
adc
sbb
xchg
mov
or
inc
lds
in
imul
dec
ret
out
dec
mov
mov
shrl
mov
mov
lods
push
and
and
sub
sbb
stos
jmp
xorb
xor
clc
lods
xchg
xorl
ret
add
pusha
dec
dec
push
sub
sub
and
stos
xchg
jl
std
std
mov
jp
fwait
add
cmp
xlat
push
lret
push
stos
mov
loop
faddl
fwait
pop
sbb
adc
or
dec
fnstenv
mov
imul
sub
mov
pop
imul
cltd
clc
xor
mov
push
ja
push
jg
or
jbe
push
jl
jecxz
mov
mov
fbld
icebp
sarl
in
je
cmp
ror
loope
ds
or
aam
inc
insb
and
push
out
inc
pop
sbb
cmpsl
negb
add
add
aaa
ja
xor
push
or
test
mull
add
mov
push
sbb
lock
repz
ds
in
add
or
cs
fstps
imul
cmpsl
int3
xor
fs
push
stos
add
inc
stc
inc
ja
scas
outsl
dec
or
push
mov
xchg
push
movsl
dec
xchg
sub
loope
pop
insl
lods
fs
cmp
ds
inc
mov
cmpsl
roll
pop
xchg
jns
popa
lret
jg
sub
sbb
flds
xor
sbb
or
iret
adc
mov
pop
imul
jno
outsb
dec
dec
or
mov
outsl
cmp
adc
mov
cmpsl
fstpt
mov
jns
mov
adc
cmpsb
sar
or
xrelease
arpl
idivl
fiadds
inc
clc
hlt
loop
adc
pop
lret
fidivl
push
test
jns
and
jo
into
adc
mov
or
and
sbb
sub
fimuls
sub
aas
popa
mov
dec
xchg
cmp
jnp
fdivrl
lcall
idivl
scas
xchg
sti
push
jge
imul
mov
aaa
sarb
movsb
aaa
cmpsb
mov
add
xchg
and
inc
mov
jno
pop
and
push
shr
xchg
testl
in
fdivs
mov
jle
mov
push
xor
call
shrb
jnp
xchg
hlt
add
incl
rol
flds
fmul
insl
rcrl
aad
ret
lods
jno
sub
insb
xchg
xchg
jnp
fildl
imull
clc
dec
push
mov
jg
mov
outsb
push
push
mov
lret
gs
sbb
loopne
mov
iret
inc
scas
addr16
cli
sub
and
jge
ret
cltd
mov
test
lret
cmp
aad
int3
les
cmc
int3
mov
scas
mov
loope
imul
inc
lods
ret
call
roll
or
adc
add
lret
jp
inc
inc
fs
rclb
lods
dec
int
mov
push
xchg
ja
jne
adc
push
bound
pop
xor
jmp
aam
mov
inc
sbb
dec
fnsave
mov
mov
sub
test
push
test
bound
mov
mov
xor
sub
addr16
sahf
push
push
jle
fcmovu
pop
jl
scas
sti
mov
mov
and
push
cmp
mov
push
inc
nop
jno
imul
aas
or
incl
hlt
push
shrl
pop
cmp
cli
pop
arpl
add
shlb
dec
push
out
dec
mov
or
xor
inc
or
inc
dec
sub
stc
ficoml
adc
jae
cmp
fst
pop
test
ss
cmpsl
xchg
add
mov
jl
jo
data16
cld
push
out
icebp
andl
dec
mov
int
xlat
and
fmull
push
mov
psubusw
mov
outsb
sub
and
inc
jne
addr16
mov
movb
cld
xchg
loop
iret
sub
jb
cli
xor
enter
and
add
jno
xchg
rcrl
pop
cs
inc
cs
jmp
inc
loopne
in
out
leave
dec
mov
int3
loope
push
inc
inc
inc
or
dec
pusha
test
sub
add
adc
imul
subb
add
clc
cltd
or
ficoml
cli
xchg
fsubr
pop
mov
cli
les
lcall
sbb
aam
sub
bound
lret
dec
fnsave
inc
push
xchg
inc
int
mov
cmp
daa
push
mov
xchg
in
push
mov
cs
ds
inc
bound
out
mov
lret
mov
ds
dec
xchg
cwtl
pusha
or
push
mov
jo
xorl
xchg
aam
insb
and
mov
insl
mov
add
test
and
push
les
mov
sbbl
insb
sbb
push
ds
test
xchg
jmp
cmp
test
xchg
add
cs
hlt
push
cmpsb
lods
sar
jl
test
lds
sbb
in
aad
pop
inc
imul
jne
xor
push
addb
rcrb
mov
push
and
pop
mov
pop
and
movsl
mov
stos
jbe
xor
add
sub
mov
mov
outsb
xchg
cmp
mov
adc
aad
inc
inc
pusha
movsb
lret
sahf
push
cmp
xor
mov
mov
sbb
scas
adc
cmp
push
xor
ss
sbb
cmp
jb
test
hlt
fimull
push
les
lret
and
addr16
daa
mov
mov
aas
push
jle
cmp
sub
pop
adc
mov
mov
ds
adc
push
leave
cltd
or
or
jp
and
dec
loop
sub
cmp
out
dec
and
jmp
mov
outsb
nop
and
sbb
shll
in
jbe
mov
xlat
dec
sti
pop
iret
sbbl
xor
fildll
sbb
xlat
fiadds
stos
aam
out
mov
dec
push
lcall
addr16
add
orb
xchg
mov
out
arpl
push
in
scas
ss
xchg
pop
dec
stos
sbb
nop
mov
aam
mov
cmpl
testl
out
lcall
daa
mov
jle
push
cmp
dec
add
shlb
mov
inc
mov
add
or
lds
mov
jnp
sub
cwtl
mov
lahf
mov
add
lock
add
cmc
and
pop
adc
in
jge
cmp
iret
lcall
mov
test
popf
je
jecxz
pop
aam
mov
loope
dec
outsb
add
cmpsl
lahf
pop
das
mov
sbb
push
popf
sbb
imul
int3
mov
out
out
pop
xchg
adc
mov
jg
cwtl
mov
lret
cmp
mov
pop
cmc
test
out
pop
mov
sbb
jno
dec
test
fsubr
mov
mov
mov
jmp
dec
mov
xor
xor
pusha
sbb
and
and
les
mov
adc
sbb
lcall
leave
lds
mov
ret
cmpsb
mov
mov
sub
ss
adc
into
mov
scas
cmp
les
jmp
and
or
data16
jb
rolb
aam
lahf
add
hlt
lahf
nop
dec
lods
decb
xor
jecxz
adc
xor
cmp
push
lea
pop
rcll
adc
or
push
mov
cmp
jns
xlat
and
jns
clc
call
inc
mov
inc
arpl
lret
cli
mov
sub
sahf
inc
aaa
dec
mov
xor
cld
and
jp
push
out
push
xor
dec
aam
mov
xor
and
shll
int3
in
test
in
sti
sub
push
cmpsb
iret
scas
js
push
jp
jl
mov
adc
ficoml
sti
decb
in
lret
stos
cmp
iret
mov
dec
cmpl
clc
sbb
sub
in
aam
pop
ss
cmp
jnp
popf
shr
addr16
mov
lock
or
in
push
cmpsl
sub
inc
cmc
mov
add
in
lock
rcrb
mov
xchg
lcall
gs
pop
jge
xchg
mov
xor
pop
stc
stos
mov
lods
sub
loope
pop
addr16
jle
dec
adc
lods
mov
es
inc
push
adc
ss
adc
pop
jecxz
ds
sbb
mov
loop
xchg
in
push
jecxz
sub
cltd
inc
roll
les
insb
iret
arpl
filds
imul
testl
enter
ss
mov
add
pop
mov
sub
mov
push
fsubrs
ficoms
pop
je
fwait
xor
cmp
mov
jo
xor
mov
fistl
or
test
jae
push
and
pop
ljmp
call
imul
xchg
notb
sub
jmp
imul
push
sub
ljmp
xor
les
jecxz
sbb
js
push
mov
ss
ret
repz
ficomps
in
rorb
push
cmp
lcall
std
push
call
aam
mov
jmp
add
cmpsl
rorl
add
je
inc
sub
or
es
or
adc
dec
push
add
xor
fdiv
ret
cmp
scas
shll
repz
aaa
pop
jge
test
movsb
xchg
adc
xchg
sub
cmpsb
jl
arpl
mov
mov
xchg
push
imul
xor
cmpl
pop
pop
and
pop
and
dec
push
popa
out
inc
jae
mov
shrl
adc
out
jnp
icebp
je
mov
jg
push
mov
dec
mov
lds
lods
add
fistl
popf
adc
jo
add
dec
mov
sub
popa
orb
jp
xchg
jmp
jbe
testl
jg
sahf
push
sarl
lret
repz
adc
pop
or
cmc
mov
cwtl
jge
into
mov
adc
out
rcrl
ja
ret
add
adc
fildl
aaa
push
push
pop
fldenv
imul
mov
push
lods
push
icebp
lcall
addb
push
leave
jne
dec
inc
data16
popa
or
add
mov
aad
aam
test
cmp
fdivs
cmp
fcoml
loope
daa
add
leave
mov
cmp
inc
iret
adc
inc
test
test
jae
inc
lods
cmpsl
loopne
outsb
shll
imul
test
aad
out
mov
push
xor
xor
mov
adc
test
imul
mov
add
and
mov
pop
mov
sub
std
dec
sub
jmp
xchg
mov
loop
std
vminss
cmpsl
int3
sub
cmp
arpl
iret
mov
jp
fnstsw
mov
adc
paddb
xor
lret
mov
mov
xchg
inc
sahf
lahf
jp
jnp
dec
or
aaa
das
in
je
loopne
stos
and
push
gs
jle
decb
push
xchg
lds
test
sbb
jmp
mov
jns
rcrl
mov
pop
inc
or
fnstsw
out
inc
adc
mov
pusha
dec
pusha
and
dec
pop
mov
mov
cld
or
ljmpw
lcall
in
push
push
mov
pop
xchg
incb
xor
cld
sub
rolb
ret
mov
lea
aaa
adc
cwtd
xchg
cmpl
ja
pusha
lret
push
fstpl
xchg
mov
std
inc
sub
xlat
or
push
lods
in
and
jns
stos
pop
faddl
inc
ret
shl
sarl
sbb
test
dec
add
and
xchg
or
cmc
mov
test
fisttpl
adc
negl
add
sbb
mov
mov
push
push
sarl
stos
cmp
lahf
inc
rorl
push
sub
pusha
fisubrl
push
xor
dec
mov
mov
imul
inc
dec
push
inc
lods
mov
inc
ds
fldl
enter
sbb
pop
add
xor
daa
bound
cmp
pop
mov
or
shlb
add
lock
faddl
mov
int3
jp
pop
add
xchg
dec
mov
push
ljmp
ret
nop
inc
mov
pop
outsb
jmp
in
xchg
loope
inc
ss
pop
mov
std
adc
push
or
pop
lcall
add
sbb
xchg
popa
test
and
in
pop
bound
dec
sub
jecxz
sbb
mov
push
sarb
stc
repnz
ret
into
and
and
and
clc
jge
test
stc
jl
sub
sbb
js
add
cmpsb
inc
mov
adc
call
or
mov
and
insl
xor
loope
sahf
insl
sub
leave
adc
pop
fwait
mov
sub
mov
sbb
ljmp
adc
pop
add
jne
bound
rol
imul
jne
push
and
jae
and
out
push
lret
mov
stc
jo
lods
ret
or
cmpsb
lods
and
cmc
jmp
and
push
mov
add
fistl
pop
mov
js
xchg
dec
push
lahf
std
nop
ds
lods
out
test
sub
and
pop
push
cmc
or
xor
notb
or
jo
jl
sbb
mov
loope
dec
or
pushf
xchg
xchg
jns
call
jns
push
mov
cmp
sarb
pop
xchg
add
mov
or
xorb
mov
imull
jbe
jnp
cmpsl
pop
cmp
xor
and
cltd
pushf
or
cmpsl
scas
out
or
fprem1
mov
int
loop
xorl
push
add
enter
and
and
jp
jnp
and
mov
adc
fnsave
or
xor
pop
xor
outsb
shrl
add
stc
jo
es
stc
jo
in
adc
xchg
sbb
int
lods
aam
add
inc
nop
lea
dec
jp
and
pop
sbb
bound
mov
je
adcb
in
mov
and
adc
jae
rcll
fstpl
cmp
push
or
hlt
push
add
jae
lret
jnp
in
xchg
pop
in
sub
enter
dec
cwtl
push
jns
cmp
xlat
pop
rolb
in
and
mov
imul
dec
mov
aam
aad
mov
xadd
or
fs
mov
stos
add
adc
es
or
xchg
iret
adc
mov
and
mov
dec
loopne
jg
enter
cmp
mov
push
stos
inc
or
testl
xorb
loope
xor
scas
pop
xchg
jg
push
fisttpll
sbb
or
sbb
nop
stos
jno
mov
sahf
mov
jg
xlat
adc
testl
jp
fldz
fidivrl
in
inc
outsl
dec
stc
scas
add
jp
push
mov
mov
cmp
ds
out
test
insl
addr16
adc
push
push
pop
movsl
imul
or
dec
lcall
pushl
mov
shr
stos
daa
sbb
clc
xchg
aaa
jecxz
adc
mov
inc
mov
clc
mov
inc
xchg
jl
popl
lret
add
pop
xchg
push
pop
jl
out
lods
aas
enter
or
xor
fistl
jb
xor
sbb
or
pop
mov
in
pop
fs
add
and
lcall
pop
xor
inc
jns
pop
jle
dec
mov
data16
pop
sbb
out
push
dec
mov
inc
test
mov
jns
pop
sbb
or
aam
stos
iret
arpl
mov
lods
xchg
lret
add
stc
jl
mov
jb
sub
mov
push
fldenv
mov
xchg
in
dec
dec
ret
dec
xor
fstps
mov
sub
push
pusha
sbb
adc
xor
inc
jne
xchg
mov
call
push
rcl
xchg
icebp
xchg
dec
fadds
data16
push
hlt
outsl
cli
jge
mov
fistpll
nop
xor
cmc
out
adc
push
je,pn
xchg
cmp
lods
xchg
lods
mov
jmp
iret
mov
and
movl
sbb
push
jb
gs
xlat
fbstp
cmp
jmp
push
mov
je
pushf
cwtl
xchg
dec
enter
fldenv
gs
pop
or
stos
adc
inc
mov
push
xchg
test
repnz
cmp
jne
repz
inc
push
xchg
mov
lahf
popa
bound
out
lret
cmp
push
push
push
sbb
jmp
mulb
jo
mov
jp
mov
imul
push
and
jg
rorl
rorl
xchg
cmp
mov
pop
in
mov
sbb
mov
mov
push
shrw
scas
add
xor
push
inc
jecxz
cmp
cmc
out
and
dec
popa
dec
mov
sbbb
cmp
ja
in
inc
data16
sub
push
test
pop
cmc
inc
inc
sbb
mov
outsl
mov
mov
sbb
mov
xor
mov
mov
jnp
lds
jb
or
ret
sbb
cmc
xor
mov
outsl
push
fldenv
stos
int
shlb
shr
pop
mov
mov
push
xlat
int
mov
inc
enter
jp
pop
jb
jl
lret
pop
andb
fistl
xchg
addl
dec
or
das
insb
xor
add
push
das
out
in
imul
enter
jne
dec
mov
icebp
or
mov
bound
leave
in
arpl
testl
test
bnd
fsubrl
out
push
cmp
cs
pusha
aam
push
sbb
or
add
mov
sti
mov
inc
push
or
stc
std
add
in
imul
popf
or
pop
xchg
and
imul
adc
push
ret
xlat
pop
xor
jecxz
jae
shr
scas
jecxz
sbb
xor
test
xchg
mov
xor
push
sbb
sti
adc
pop
insb
lea
call
into
xor
je
into
inc
jae
or
in
and
and
xor
mov
xor
js
sub
xchg
xchg
stc
inc
sub
add
sbb
popf
rcll
insl
mov
cmp
xchg
mov
addr16
xlat
adc
test
int3
add
jecxz
sahf
lds
jb
mov
fistpll
push
cwtl
lret
pop
mov
mov
loopne
lock
addb
ljmp
xchg
fs
lea
inc
cli
push
xor
jno
mov
aam
into
xorl
pushf
push
xchg
mov
icebp
mov
dec
xor
mov
mov
pop
ffree
aad
jne
test
inc
fisubrs
xchg
add
pop
and
dec
jno
inc
mov
add
mov
std
jg
test
pop
leave
dec
add
das
or
fiaddl
test
call
cmc
cmp
jl
add
pop
inc
xchg
cs
xor
loopne
dec
insb
mov
pop
lret
xchg
mov
cmp
or
popa
mov
pop
out
dec
jae
outsb
xchg
xchg
jmp
outsl
jno
inc
xchg
stc
stc
sbb
mov
mov
inc
cld
mov
pop
push
pop
movsb
test
data16
cmpl
sbb
fidivl
inc
mov
lods
mov
cmp
movsl
or
sub
lods
arpl
dec
aam
xor
lret
dec
mov
mov
or
ja
cmpsl
stos
std
in
ljmp
popf
fdivrs
mov
jp
sub
insb
js
mov
pop
pop
popf
mov
loop
ljmp
pop
subb
xor
mov
dec
ss
rcrl
add
mov
pop
cltd
lahf
mulps
jns
pop
dec
je
push
in
icebp
cmp
cld
adc
inc
bt
hlt
push
jg
movsb
push
jns
mov
aam
lds
push
or
aas
enter
adc
rcrb
test
imul
fldcw
jl
adc
mov
add
ds
and
mov
xchg
inc
mov
pop
pop
mov
mov
stos
mov
sarl
popa
cmpsl
popa
sbb
daa
test
pop
or
cmp
cmp
mov
mov
jae
das
adc
fsubrl
fsubrl
or
pop
cwtl
repz
movsl
xchg
loope
xchg
push
loop
mov
ror
shll
movsb
mov
movsb
aam
lods
lock
adc
insb
fsts
insb
jp
push
adc
adc
dec
data16
xorl
aaa
aas
aam
or
adc
sbb
push
and
pop
repnz
mov
rcll
add
mov
jb
adc
repnz
shrl
mov
repz
sub
and
pcmpeqb
mov
mov
push
sub
mov
xor
and
push
sub
push
inc
mov
insl
cmp
test
stc
push
adc
jmp
outsl
add
mov
inc
jg
dec
sub
adc
and
add
jmp
cmp
mov
fldt
cmpb
sbb
rcrb
mov
ja
dec
mov
inc
fbld
push
testl
out
subb
jg
xor
lods
ret
push
outsl
sbb
push
adc
lahf
rcrl
sbb
add
hlt
pop
lret
cmc
pop
out
jle
and
mov
mov
xor
pop
jne
or
push
push
mov
mov
dec
lcall
in
lcall
sti
loop
mov
fbld
and
ss
lahf
in
xchg
sub
jne
clc
ret
xlat
mov
out
icebp
and
xchg
movsl
dec
pop
insl
in
gs
jl
in
cmp
pop
imul
pop
out
rcrl
shlb
sti
not
mov
fistps
and
mov
jmp
out
sub
pop
add
mov
cmpb
cmpsb
and
sbb
mov
inc
or
fwait
stos
cld
ret
jb
push
rcrl
jmp
mov
or
sbb
fisttpl
ret
xchg
sub
adc
rorb
lret
clc
scas
xor
aad
in
es
leave
cmp
ss
sbb
psubb
inc
dec
fs
int3
sbb
push
jne
mov
xor
stos
lahf
or
mov
int3
stc
enter
incb
pop
inc
ljmp
enter
mov
lods
inc
roll
xlat
rorb
jle
and
aaa
jl
bound
das
scas
cltd
sbb
mov
and
xchg
xor
test
imul
rol
icebp
xor
push
jle
add
cmp
insl
jp
repz
pusha
adc
popf
cmp
es
scas
aam
in
pop
jl
mov
ret
adc
ds
inc
add
jno
jge
or
push
popf
ret
fdivrs
mov
inc
or
psllw
ljmp
dec
jge
pusha
sahf
pushf
mov
jae
mov
fildl
cmp
out
add
and
mov
mov
pop
sub
sub
imul
mov
push
inc
and
add
out
test
shrb
and
cmp
mov
pop
sbbl
nop
decb
push
pop
add
lods
adc
mov
sbb
loope
jge
sbb
cmp
sbb
lods
jno
insl
adcb
inc
sarb
push
test
sbb
lret
mov
inc
push
movsb
dec
or
addr16
xor
lahf
insl
xor
cli
cli
ljmp
dec
mov
int3
arpl
pop
xchg
xchg
dec
pop
pop
sahf
xchg
lock
shl
daa
pusha
mov
out
test
in
inc
lret
movb
dec
test
fwait
dec
das
cs
inc
and
gs
mov
and
cmp
sub
sahf
loopne
fwait
std
xchg
rclb
sub
adc
xchg
sbb
mov
and
ret
popa
sbb
in
jae
add
mov
cmp
movsb
xor
jnp
mov
popa
xchg
mov
xchg
addr16
mov
xchg
xchg
xchg
sub
pop
inc
arpl
fsubrs
fsub
hlt
mov
js
adc
fisttpll
test
cld
loopne
jg
sub
inc
data16
or
icebp
lock
cltd
sub
push
int
pushf
push
or
and
out
and
sbb
leave
int3
roll
pop
jl
pop
mov
sbb
stc
out
repz
int3
add
pop
stos
mov
dec
add
or
cmpsb
scas
fnstcw
insl
inc
jnp
sarl
jmp
mov
hlt
fs
xchg
and
stos
xchg
sub
xchg
jecxz
push
lcall
inc
leave
test
jle
mov
cli
push
dec
or
mov
divl
pop
adc
push
test
push
xlat
adc
bound
call
fwait
aam
cmp
in
enter
in
pop
add
adc
mov
jb
mov
and
xchg
je
mov
lods
lods
or
pushf
and
xchg
cmp
ret
mov
leave
add
cmp
fcmovb
je
js
push
scas
and
mov
lahf
inc
add
fsubr
sbb
sub
lret
test
sub
fwait
pop
rclb
ljmp
cli
xchg
movsl
sub
aam
adc
pushf
cmpsb
dec
cmc
nop
call
sub
negb
movsb
leave
subl
sahf
fmul
rcrl
push
push
js
es
mov
loop
pop
dec
inc
lahf
pop
subb
jno
mulb
stos
sub
cwtl
mov
gs
jbe
sti
test
dec
add
shlb
mov
insl
std
dec
xor
shrb
mov
cmp
fmull
cmp
jecxz
fidivl
mov
rcrl
mov
and
insb
into
xor
mov
fs
lret
mov
mov
xor
xchg
pop
pop
outsl
xor
repz
mov
pushf
xchg
mov
sub
cmpsb
js
mov
sub
insb
push
mov
cli
in
pop
test
push
int
lods
aas
decb
or
ffreep
loopne
mov
cltd
iret
int
xlat
cmp
andb
push
repz
aam
pop
pop
popf
ret
popa
imull
stos
mov
testb
dec
scas
push
mov
jno
mov
loope
cmp
xchg
sub
xchg
inc
push
int
jne
dec
inc
pushf
in
pushf
fdivrs
add
int3
cli
push
xchg
iret
cs
mov
mov
sub
cmpl
jae
pop
sub
ret
cwtl
add
stos
sbb
cmp
pop
jnp
jno
xchg
push
daa
lcall
popl
jo
jne
push
insl
xchg
rorl
sub
push
insb
scas
mov
lds
aam
and
aas
gs
xor
and
add
cli
shlw
clc
dec
int
mov
push
lock
into
cltd
cmpsl
inc
negl
dec
adc
pop
inc
testb
xchg
out
xchg
sti
ss
outsb
aad
fists
faddl
sub
imul
cltd
int
movsb
dec
cwtl
cmpsl
in
jp
push
test
outsl
ret
jb
popf
dec
mov
xchg
idivl
sbb
fldt
xlat
xchg
dec
and
enter
xor
insl
addr16
flds
cmp
pusha
test
inc
cmp
cmp
outsb
add
fiadds
lock
out
mov
xor
mov
ljmp
cmc
mov
imul
shrb
ljmp
pusha
pop
cmp
enter
adc
or
dec
cmp
das
loopne
mov
pop
sub
popf
icebp
lret
mov
pop
sbb
dec
mov
pop
pop
cs
icebp
shrb
cwtl
adc
fisubs
arpl
inc
js
mov
scas
adc
ja
cmpsb
data16
ds
jae
inc
pop
outsl
dec
adc
adc
mov
cmp
mov
cmp
pop
inc
inc
clc
js
leave
movsb
int
mov
lret
fcomip
out
mov
pop
mov
dec
adc
inc
jno
in
pop
mov
mov
cld
fistl
aam
mov
mov
push
mov
sub
aad
push
pmaddwd
imul
sub
fucomp
mov
jge
cmp
in
fiaddl
mov
and
mov
or
sub
sbb
mov
aas
cmpsb
jnp
lahf
sub
in
and
jo
mov
sub
popf
push
fcmovnu
es
int3
lahf
jle
aad
dec
stos
stc
cmc
test
mov
in
mov
ret
xor
sub
and
lock
fdivl
pop
adcb
shlb
cmp
mov
inc
mov
xchg
inc
movsl
xchg
mov
out
hlt
sbb
adc
jo
lret
jno
bound
fwait
dec
mov
jnp
fldenv
call
dec
cmp
dec
rcrb
dec
push
orb
dec
jg
mov
push
lahf
sub
mov
cmpsb
lods
adc
jns
inc
stos
inc
xor
xchg
or
cmpb
test
sti
mov
mov
jp
fimuls
dec
sbb
das
jle
xor
call
xor
fdivs
test
call
jbe
add
lcall
jle
mov
fs
cmp
add
scas
cmp
aaa
mov
xchg
mov
push
daa
and
xor
into
rclb
jg
xor
scas
and
jne
lock
sbbl
or
idivb
in
jecxz
adcb
push
lcall
shrl
lret
mov
jb
cltd
add
inc
loop
leave
adc
fcmovnu
pop
dec
jbe
lret
dec
insl
clc
add
ss
in
and
andb
fsts
aad
jbe
imul
fcompl
imull
fucomp
pop
push
daa
inc
dec
mov
mov
dec
and
ret
popa
pop
cltd
test
test
shrb
aaa
sbb
xchg
es
int
pop
lods
rcrb
pop
xor
and
mov
cld
ds
stc
xchg
enter
xchg
jle
idivb
adc
pop
mov
xchg
enter
mov
cmc
sbb
addb
mov
mov
sbb
inc
cmp
or
repnz
dec
das
mov
ds
lds
outsl
jl
cltd
add
mov
inc
jge
pop
shrl
sub
xchg
xchg
ret
loope
pop
sub
stos
arpl
adc
mov
aas
dec
mov
out
jecxz
and
or
data16
nop
ds
shl
shrl
push
and
pop
repz
movsl
cmpl
stos
fmuls
shll
dec
repz
or
xchg
add
adc
jp
mov
out
inc
aam
mov
sub
jmp
adc
xor
roll
aas
mov
jnp
rep
scas
mov
push
aam
popf
sbb
movsb
sub
int
mov
pop
fimuls
pop
ljmp
jle
int
pusha
inc
inc
lea
dec
sbb
and
jge
popa
ds
ljmp
push
push
rcrl
xchg
popl
fisubrs
test
aaa
adc
adc
mov
fs
xor
inc
xchg
iret
sbb
hlt
mov
pushf
push
pusha
insb
dec
push
stos
adc
scas
mov
jp
jae
pop
xor
push
cli
pop
jecxz
cmp
sbb
xchg
fs
adc
xchg
outsb
cmpsb
lea
or
jne
pushf
mov
and
fistpl
popa
cltd
fsubl
inc
mov
xor
daa
ljmp
aas
js
pop
adc
cltd
mov
jnp
and
ljmp
sub
pop
inc
jle
xor
in
add
mov
mov
sub
es
fisubrs
pop
mov
xor
jb
mov
rorl
call
dec
testb
mov
nop
add
cmp
mov
cmc
push
push
cmp
jl
dec
jb
push
nop
add
out
adc
dec
scas
jno
or
mov
sbb
mov
adc
and
cli
addr16
aas
rcll
aaa
pop
cmp
push
scas
and
out
xchg
mov
fldl
dec
xchg
sbb
cs
jb
dec
test
jns
cmp
std
fdivrs
sahf
pop
cmp
mov
sbb
pop
push
out
enter
fsts
rclb
iret
jle
mov
adc
dec
and
cltd
repnz
test
ret
shr
jb
lahf
mov
ljmp
sub
testl
and
push
hlt
fs
push
divb
cmp
lret
add
cmc
push
sub
in
and
xor
adc
adc
jnp
cmpsb
dec
popf
xchg
leave
or
jmp
xorl
ds
lcall
test
lahf
fildl
js
jae
cmc
or
xchg
push
loopne
rclb
imul
insb
dec
mov
sub
popf
pop
or
mov
call
mov
inc
dec
loop
inc
pop
jb
test
jecxz,pt
loopne
lods
cmp
sub
jle
push
jg
push
dec
cmp
adc
push
add
mov
decb
or
je
cmp
out
nop
sub
lcall
push
dec
repnz
scas
into
repnz
icebp
pop
mov
fs
xchg
lahf
jnp
dec
std
xchg
inc
movsl
ds
cmp
add
sub
inc
sbb
xchg
mov
lret
test
enter
jle
mov
in
mov
int3
icebp
testl
jmp
pop
stos
push
xor
lret
lock
cmp
cmp
lcall
daa
adc
lock
test
mov
and
pop
gs
inc
insl
in
movsb
xlat
or
movsb
cmp
sub
sbb
mov
mov
int3
xor
xchg
xchg
add
xchg
scas
leave
mov
cli
inc
mov
jo
push
aas
fwait
or
das
cmpl
sbb
push
xchg
in
lcall
dec
sbb
sti
lods
rcrl
xchg
outsl
jns
xchg
stos
xor
repz
pusha
out
pop
aaa
mov
imull
fs
fnstsw
add
mov
jae
bound
or
ds
and
leave
std
cs
out
jge
add
mov
push
flds
mov
into
cmpsb
adc
pop
or
stc
fcmovnu
fnstenv
and
sub
jb
out
xchg
inc
imul
pop
stc
out
aas
cmpb
mov
inc
bound
jmp
fnstenv
sbb
dec
ret
jecxz
fdivl
in
mov
xchg
pusha
ss
ds
cmp
or
jnp
mov
pop
out
mov
cmpsl
or
in
lahf
dec
movsb
jmp
adc
movsb
xchg
adc
lock
addb
imul
mov
adc
data16
lret
lods
jns
xor
mov
pop
xchg
sub
inc
xchg
ljmp
mov
in
dec
int3
std
push
inc
and
push
dec
fnstcw
in
arpl
inc
inc
loop
and
sbb
data16
setbe
gs
xchg
call
andl
sahf
les
mov
rorl
cmc
cmp
xor
in
sub
inc
outsb
das
fmuls
loope
rcrb
pop
push
rclb
lock
sbb
xor
aas
mov
and
push
push
rcl
or
clc
mov
mov
adc
dec
dec
sar
iret
test
xor
imul
in
sti
sti
mov
mov
inc
sub
dec
outsl
mov
rcrl
lock
or
xchg
sub
fwait
cmc
mov
gs
xchg
test
shl
mov
ljmp
adcb
mov
leave
and
sbb
xor
xor
push
sbb
cmp
adc
jmp
les
int3
or
outsl
sbb
xchg
test
add
daa
and
insl
push
rcrb
xor
ljmp
xor
ljmp
push
mov
gs
lret
mov
pop
cli
xchg
sbb
aam
jb
cmp
inc
push
lahf
push
call
lods
ja
push
dec
fistl
in
push
inc
fnsave
dec
fisubs
aam
mov
sti
xchg
test
xchg
ja
fs
cmpsl
cmp
inc
add
jmp
ss
dec
pusha
nop
ret
cli
mov
mov
dec
inc
mov
shll
and
sub
lds
jbe
aam
fildl
out
adc
and
jns
aam
rorl
mov
daa
negb
das
mov
cltd
pop
in
or
push
sbb
repz
movsl
ror
inc
fisubl
andl
mov
mov
xchg
incl
lods
cmp
iret
inc
cld
std
jl
sbb
movsl
je
mov
pop
cltd
das
rcl
xor
push
ss
int
mov
mov
and
mov
xchg
and
push
cvtps2pi
sbb
insb
pop
mov
mov
rorl
pop
pushfw
pushf
pop
mov
sbb
test
mov
and
ljmp
inc
lret
repz
mov
cltd
jns
xor
aaa
jns
add
and
scas
bound
mov
fwait
pop
add
addr16
xchg
push
mov
shll
adc
push
mov
dec
add
pop
subb
mov
pop
cmp
sub
stos
jecxz
test
enter
dec
in
shlb
pop
in
hlt
dec
mov
pop
jge
iret
jp
enter
push
out
out
jmp
mov
dec
xchg
out
xorb
flds
jge
out
aaa
ficoml
outsl
push
mov
adc
lds
xor
ljmp
cmp
cmp
aad
adc
daa
jmp
sbb
dec
lds
mov
adc
and
xorb
push
mov
add
pop
out
pop
adc
repnz
pop
dec
add
jns
test
add
call
lcall
std
adc
add
aaa
push
iret
push
fstl
adc
repnz
test
mov
int3
push
out
cmp
push
xchg
sub
jge
push
mov
push
call
add
repz
repnz
adc
test
push
mov
fs
xor
or
es
pushf
das
into
es
mov
mov
test
aam
repz
loopne
mov
out
jno
xor
rcrl
xchg
repz
les
cmpl
xor
mov
arpl
mov
mov
pop
pop
in
loope
mov
cli
fs
fdivl
into
push
stos
je
arpl
inc
rcpps
cmp
lds
jg
xor
cwtl
out
loopne
sar
ror
outsb
addr16
bound
mov
aam
pop
ss
outsl
movsb
add
sub
xchg
cmp
movsl
sub
mov
outsb
inc
and
inc
add
int3
add
scas
sti
adc
int
int
or
and
test
push
dec
scas
and
fwait
sahf
iret
mulb
fstl
mov
jns
pop
aas
xor
pop
gs
mov
mov
inc
xchg
sbb
cmp
cmp
outsl
sub
dec
push
adc
or
xchg
ljmp
push
push
add
adc
mov
gs
xchg
push
dec
loop
incl
dec
cmp
imul
push
movsl
push
or
ljmp
mov
mov
or
mov
rclb
push
inc
das
push
test
xchg
dec
sbb
mov
mov
lock
cmp
ret
dec
out
mov
scas
sub
mov
mov
test
shlb
imul
push
shll
dec
out
mov
add
arpl
je
or
notb
imul
sbb
out
or
ss
shl
sbb
loopne
lods
mov
shlb
sbb
pop
aad
push
std
rolb
add
stos
mov
dec
pusha
or
sub
int3
inc
push
cwtl
and
shlb
bswap
vmovmskps
imul
inc
xchg
in
mov
in
add
xchg
imul
mov
rcrl
cmp
pop
in
xchg
jl
push
xchg
shll
pop
out
pop
xchg
orb
push
jae
ss
test
jne
fwait
xchg
loop
nop
push
rcl
pop
outsl
xor
push
sub
cmc
loop
arpl
pushf
ret
push
dec
sti
call
arpl
out
sarb
xchg
.byte
sbb
add
cltd
sbb
add
push
xlat
mov
sub
jb
in
inc
outsb
sub
stc
or
sbb
dec
ret
repz
push
add
mov
out
xor
sbb
or
mov
xchg
ss
inc
sahf
jno
inc
dec
ljmp
jae
lds
xchg
and
pop
icebp
lods
sbb
rolb
mov
ret
xlat
orl
bound
adc
inc
pushf
jle
mov
scas
imul
pop
adc
rolb
es
out
xor
and
mov
xor
arpl
xchg
mov
rol
das
ror
inc
test
push
loope
mov
pop
sub
dec
xchg
insl
mov
ret
rorl
in
xchg
push
pusha
push
pop
sbb
mov
xchg
push
in
xchg
in
lock
pop
xchg
push
or
repz
inc
push
imul
leave
mov
xor
sti
sti
dec
jg
or
lret
orb
jmp
jne
repnz
adc
dec
in
or
test
pushf
dec
jns
fstpl
dec
lret
sbb
dec
and
mov
dec
loope
scas
mov
fcoms
mov
xor
inc
mov
lods
repnz
cmpsl
cmp
stos
sbb
add
in
sarb
inc
or
push
add
dec
aaa
sub
mov
cmc
test
mov
cmpsb
xor
jnp
pop
insl
shr
arpl
mov
add
sub
cmc
pop
mov
jge
jp
sbb
and
push
stos
scas
pop
lods
dec
mov
sub
ljmp
das
cmc
ret
sub
outsb
popa
jns
inc
icebp
shrb
stc
movsb
cmp
jl
stc
int3
mov
fstl
mov
sti
pusha
jecxz
imul
iret
jmp
pop
imul
jmp
jge
sbb
or
std
fldcw
in
psadbw
mov
sarl
jecxz
add
sub
push
xor
xchg
cli
sahf
int3
mov
xchg
and
faddl
jb
push
adc
xchg
inc
jae
add
sbb
lret
dec
fcom
popf
inc
add
lea
add
adc
inc
cs
loopne
jns
xor
mov
xor
in
jb
testb
outsb
xchg
jecxz
cld
mov
pushl
pop
jnp
mov
mov
push
movsl
mov
lods
xchg
test
lock
jae
ja
mov
add
insl
cmp
and
fwait
pop
sub
imul
push
iret
adc
lret
sub
ror
xor
call
insb
inc
add
insb
pop
lock
repnz
add
fldl
pop
sbb
orl
fldt
fdiv
xor
sub
mov
xchg
xorl
aad
mov
pop
xor
lods
jnp
jae
lcall
mov
outsb
loopne
arpl
jo
aaa
mov
data16
jne
cmpb
dec
pop
mov
jno
adc
cmpxchg
test
add
xchg
je
sarb
cmc
pop
hlt
fidivs
push
xchg
dec
pop
shlb
in
test
dec
int
icebp
cmp
mov
aad
inc
jb
mov
rclw
xchg
adcb
pop
push
push
mov
repnz
je
sbb
jo
lahf
out
and
and
push
inc
add
jne
push
cli
inc
repnz
jl
sbb
mov
jle
repz
inc
add
inc
in
mov
gs
sti
and
sbb
fbld
out
dec
loop
cmp
or
pop
repnz
movb
mov
mov
outsb
jne
xor
pushf
pop
sbb
and
or
leave
and
rep
or
test
push
sbb
push
gs
in
andl
mov
fildl
or
mov
xchg
ljmp
stos
mov
repnz
pop
xchg
dec
ret
xchg
lcall
push
fistpl
cld
popf
fwait
sub
pop
les
iret
in
cltd
push
scas
daa
pop
or
mov
clc
adc
fistl
fists
jne
into
and
xor
loopne
cmc
dec
xchg
push
int
insb
and
cmp
out
enter
adc
fidivl
test
test
out
fst
jge
pop
lock
inc
call
imul
out
lret
lahf
mov
fwait
outsl
stos
cmpsl
cmpsb
xchg
mov
fwait
insl
adcl
lret
fs
in
xor
cmp
in
mov
pusha
or
outsl
push
jmp
mov
push
icebp
adc
mov
in
mov
pop
pusha
and
rcl
les
or
mov
jp
call
out
pop
cmp
inc
jne
imul
or
ja
fldl
testb
dec
sbb
out
jns
lret
in
in
enter
pop
stos
pusha
daa
add
and
fistpll
mov
insl
imul
ja
or
arpl
inc
inc
iret
push
scas
fidivrs
and
pop
cmp
sbb
mov
xor
mov
.byte
.byte
.byte
add
dec
add
dec
add
xor
adc
dec
add
xor
xor
add
add
pusha
cmpsl
cmp
add
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
xor
add
js
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
or
add
and
add
pusha
cmpsl
cmp
add
add
or
add
push
or
cmpb
add
push
add
subb
push
or
addb
add
pushf
or
xorb
add
mov
add
add
add
rorb
add
fimuls
add
add
add
add
add
inc
add
addb
add
pusha
cmpsl
cmp
add
add
add
add
clc
or
sbbb
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
mov
sub
add
mov
sldt
mov
sldt
rolb
sub
add
call
sldt
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
lock
add
or
add
and
add
cmp
add
push
push
add
push
sldt
addb
addb
add
cwtl
push
add
pusha
cmpsl
cmp
inc
outsl
insl
gs
add
adc
xorb
add
inc
or
and
add
clc
push
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
pop
add
sub
add
inc
pop
add
pop
pop
add
jo
add
mov
add
mov
add
add
cmp
add
add
add
add
push
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
mov
or
xor
add
in
or
xor
add
sbb
add
dec
mov
add
andb
add
add
call
add
add
add
add
add
insb
stos
or
rolb
add
cmp
or
rolb
add
or
or
rolb
add
fsubrl
add
lods
mov
add
add
add
add
add
add
add
add
add
or
call
add
add
add
add
popf
or
test
add
lods
les
add
add
add
or
in
add
in
or
in
add
add
leave
or
js
add
dec
int
add
rorl
add
add
add
add
movsb
rorl
add
add
xlat
or
add
add
adc
or
enter
or
call
add
add
add
add
fisttpl
add
add
add
add
js
or
faddl
add
push
loop
add
add
add
add
in
in
add
add
clc
jmp
add
jl
or
mov
add
sub
or
sbb
add
add
add
add
add
add
add
or
sub
add
nop
stc
or
mov
add
add
add
add
or
mov
add
aam
or
les
add
cwtl
add
and
add
mov
add
add
or
loopne
add
mov
or
add
add
add
mov
add
add
add
enter
adc
add
fcoml
or
adc
add
lock
adc
add
add
or
adc
add
and
or
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
push
add
add
add
push
add
add
or
inc
add
push
add
push
add
push
add
inc
add
add
add
dec
add
add
inc
add
add
inc
add
push
add
inc
add
inc
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
sbb
mov
cltd
cltd
cwtl
add
in
push
stc
inc
test
pop
fildll
inc
test
jle
sub
xor
cwtl
push
rorb
pop
mov
mov
mov
shl
divl
fisttpl
lahf
nop
clc
jmp
fdivrl
aam
rcrl
jne
daa
mul
call
lock
lcall
mov
in
lcall
jle
xchg
ljmp
xchg
movsb
xor
pop
mov
mov
ja
ret
int3
inc
pop
aaa
orl
push
std
xchg
ret
in
mov
dec
es
aam
aas
hlt
dec
jb
dec
xchg
loopne
lret
int
leave
mov
insl
ss
movsb
mov
aad
in
mov
dec
sub
and
inc
and
mov
and
sti
out
pop
and
cld
sub
pushf
xor
lcall
daa
pop
fs
loop
mov
sbb
repnz
imul
shll
scas
mov
pop
movsb
pop
cli
pop
stos
mov
sbb
enter
loop
cmp
aam
iret
and
imul
nop
cs
out
shll
dec
mov
call
dec
loope
pop
mov
addb
fstpt
inc
pop
addr16
fildl
xor
cmp
xor
mov
inc
sub
aas
xlat
xor
xchg
jb
pop
cwtl
ds
inc
ja
jp
inc
pushf
push
daa
mov
fsubs
cmp
bound
mov
adc
cmp
movsb
mov
es
sub
shll
nop
jno
push
inc
lods
dec
push
lret
std
pop
mov
je
fs
sahf
inc
cmp
stos
jmp
out
cmp
rcll
insb
mov
ret
les
cwtl
jns
pop
add
stc
mov
out
repz
testl
fldl
add
in
gs
cmpsl
sahf
push
andb
fldt
ds
xchg
dec
scas
pop
call
push
mov
xor
cmpl
or
dec
nop
repnz
loope
sbb
lea
insl
rcl
mov
push
and
scas
mov
es
mov
call
inc
inc
push
add
mov
dec
inc
fwait
or
jno
je
enter
int
in
add
xor
mov
popa
or
and
pop
inc
out
insb
pop
out
and
mov
fisubrl
imull
lret
cmp
popf
pop
cs
jge
les
ret
insw
iret
popf
jecxz
xchg
shr
and
jecxz
pop
lea
negb
sub
imul
cmc
pop
fs
dec
sbb
push
cwtl
adc
imul
mov
jae
fbstp
mov
ss
popa
sbb
push
mov
mov
mov
dec
lcall
imul
xchg
in
add
jo,pt
mov
mov
adc
das
xchg
in
or
data16
jmp
ficompl
sbb
dec
cmp
inc
or
clc
sub
push
push
bound
inc
xchg
xor
iret
out
imul
popa
mov
inc
mov
stos
pop
jmp
xor
jmp
in
xor
xchg
or
shlb
mov
or
or
xor
xchg
ss
out
outsb
into
fmulp
mov
xchg
jae
push
pop
int
xor
notb
push
or
mov
push
cmp
inc
sbb
inc
sub
sub
cmc
arpl
adc
cmp
mov
shll
sbb
repnz
fldenv
sahf
xchg
pop
fildl
sbbl
adc
and
mov
dec
sub
push
stos
js
repz
xlat
pusha
cmc
jle
cmpsl
out
sbb
rclb
lret
adc
aas
and
out
data16
xor
sub
cmp
xor
movsl
pop
dec
mov
mov
cltd
dec
cs
cmp
js
cmp
mov
scas
xchg
fsubr
dec
aam
push
inc
insl
cmp
push
mov
aad
add
mov
or
scas
cmpsl
faddl
lea
dec
push
cmp
inc
leave
cltd
fildl
jns
add
out
xchg
xchg
hlt
jns
hlt
cmpsb
into
cmp
dec
xchg
enter
pusha
cmp
aad
dec
mov
mov
fstps
inc
movsl
dec
sbb
mov
cmp
andl
repz
xchg
xchg
adc
xchg
notl
inc
jns
jmp
pop
cmp
xor
cs
push
popf
rcr
mov
fnstsw
sub
xchg
jns
je
adc
xchg
fs
push
test
shlb
repnz
idivl
inc
mov
sub
mov
mov
mov
mov
mov
cmpsb
push
aad
or
mov
leave
icebp
iret
mov
push
idivb
ret
test
push
std
cmp
dec
xchg
int3
aas
push
add
lock
sub
lcall
jno
cmp
out
in
hlt
inc
jmp
sub
push
int
dec
and
popa
xchg
and
mov
and
cmp
push
pop
imul
xor
enter
jo
roll
test
in
cmp
jo
jno
or
in
and
insl
int
mov
jne
dec
call
ss
mov
or
mov
xor
out
ds
jns
dec
fwait
add
lods
sbb
inc
mov
sub
out
pop
movsb
add
sbb
dec
dec
mov
daa
pop
sahf
or
inc
cltd
repz
sub
in
pop
inc
cmpsb
mov
mov
dec
mov
mov
add
jg
pop
fstp
sub
cmp
ja
add
push
mov
enter
dec
cmp
imul
movsb
cmp
cmp
or
jle
movsl
mov
mov
rorl
in
and
push
pop
imul
push
dec
dec
sbb
ret
call
pop
ds
xchg
pop
sbb
sbb
les
jb
or
cmc
cmp
xchg
pop
movntq
out
and
inc
push
mov
das
jp
mov
inc
pushf
mov
mov
cmc
xchg
scas
sub
lock
mov
stos
push
push
ljmp
movsb
mov
pop
ss
xchg
aaa
shlb
inc
movl
pusha
sub
imull
sub
repz
mov
rorl
filds
addr16
push
push
outsb
cmp
mulb
jbe
jecxz
fs
cmp
and
enter
xchg
adc
fmul
inc
and
ja
xchg
push
push
loope
subb
lret
mov
cmpsb
jge
out
das
push
divb
aad
xchg
out
cmc
imul
icebp
or
iret
or
adc
dec
inc
inc
out
mov
pop
xor
lret
data16
mov
sub
loop
dec
push
push
shll
mov
cmp
push
clc
and
push
xor
fwait
mov
nop
imul
sti
pushf
std
sarl
cwtl
pop
pop
ds
fs
mov
pushf
dec
mov
push
ret
xor
ja
mov
je
out
mov
push
push
mov
fisttps
pop
push
inc
inc
lods
mov
push
subl
sub
mov
lock
inc
decl
jne
inc
rcll
sub
xor
in
pcmpeqd
pop
stc
out
sub
rcl
lahf
add
cmpsl
xor
push
push
dec
pusha
mov
sti
jbe
lds
cmpsl
outsb
mov
hlt
jae
xchg
addr16
leave
out
dec
pop
dec
ds
ffree
xor
dec
loope
das
pop
mov
mov
mov
orb
inc
cmc
ja
aaa
fsubr
in
hlt
sbb
data16
push
or
ss
sbb
rclb
ds
dec
and
movsl
pop
xlat
into
sub
sbb
out
cmpsb
sub
iret
sahf
or
jge
push
aaa
nop
xchg
add
push
and
in
sub
das
jle
pop
lods
cmpsb
push
fdivs
dec
mov
jecxz
subb
pop
mov
xchg
push
nop
sub
inc
lock
or
adc
lock
adc
dec
jmp
push
lock
mov
shl
or
push
cmp
and
out
mov
inc
pop
out
lret
dec
push
cmp
iret
popf
jnp
popl
xchg
inc
or
rcll
cmp
xlat
xor
sub
push
xchg
lods
cmpl
xor
popf
out
dec
fucomp
fwait
and
fsubs
sarl
push
and
rorl
adc
enter
push
xchg
pop
test
jle
xchg
adc
cli
sbb
mov
push
pop
adc
das
xchg
mov
out
fisubrs
jmp
fildll
xchg
and
mov
mov
sar
sub
add
add
adc
jno
inc
push
in
push
push
or
in
sti
out
sbb
xchg
inc
hlt
cmp
xchg
inc
pop
mov
leave
scas
sbbb
outsb
dec
sbb
push
xor
movsb
jl
jno
aad
cmpsb
dec
sbb
sub
fmuls
fbld
inc
xchg
sub
xchg
inc
add
push
sub
push
push
xlat
push
bswap
stos
mov
shrl
inc
shl
jb
insb
sbb
adc
jne
mov
pusha
pop
adc
or
pop
div
fidivl
and
push
pop
pushf
sub
jnp
arpl
adc
dec
icebp
pop
mov
push
jge
mov
mov
jmp
xor
outsb
xchg
js
push
mov
sbb
outsb
test
sti
leave
push
mov
push
lods
mov
imul
mov
lds
iret
bound
mov
push
and
mov
or
mov
xchg
inc
fmull
dec
aad
jnp
imul
jae
stc
mov
jp
and
out
xor
mov
sbb
lea
dec
inc
lea
loop
aam
inc
xchg
fsts
fcoml
sti
add
cmp
mov
gs
pop
mov
push
stos
push
cmp
mov
loope
je
das
lahf
leave
dec
loopne
ds
arpl
inc
jb
jnp
dec
sbb
test
aas
xlat
loopne
in
sti
repz
dec
push
jmp
int
jns
mov
mov
mov
push
aas
inc
inc
push
std
clc
sbb
push
aaa
sub
lds
mov
push
das
inc
cmpsb
sbb
xchg
test
popa
in
lret
out
push
add
in
jp
xor
pop
stc
adc
fildl
mov
dec
lock
push
int
cmp
fs
popa
add
repnz
sahf
movsl
and
lcall
xor
popf
pop
fistps
lock
push
mov
fisttps
push
cmpsl
adc
add
push
push
repnz
mov
sub
jae
je
movsb
arpl
loop
iret
mov
je
in
pop
jbe
pop
xchg
aaa
outsl
lds
jb
cwtl
inc
test
dec
test
and
xor
in
mov
lahf
xchg
mov
fdivs
inc
cmp
or
in
nop
jb
jnp
fimull
dec
push
inc
sub
stos
xlat
xchg
push
xchg
das
or
xor
add
scas
add
out
sahf
and
out
icebp
push
rep
shlb
cmp
sub
sbb
jns
andb
jne
les
insl
push
or
mov
mov
daa
adc
cltd
addr16
inc
adc
vunpcklps
rorb
sbb
into
test
add
mov
sbb
push
jge
cmp
jle
mov
icebp
stc
mov
lds
cmp
bound
dec
add
and
outsl
cmp
or
pushf
arpl
cmp
sbb
jge
iret
inc
push
adc
test
daa
lds
lods
jns
aad
sub
psubusb
adc
sti
add
mov
sbb
jecxz
sbb
mov
jne
pop
in
push
dec
jae
dec
lret
mov
add
sbbl
jno
mov
xchg
inc
xor
sahf
icebp
or
sbb
sbb
xor
xor
nop
outsl
in
movsb
pushf
lock
mov
jae
push
dec
or
js
mov
add
mov
mov
xor
or
pushf
je
adc
xchg
insl
inc
je
dec
out
stos
shrl
xchg
and
cltd
mov
test
or
inc
and
loopne
cld
adc
std
mov
xor
scas
out
repnz
aas
in
lock
repnz
adc
enter
imul
pop
into
add
mov
sub
push
in
inc
ret
pop
jbe
dec
mov
das
jo
std
sub
cs
inc
adc
pusha
cmpl
and
dec
or
mov
jle
mov
sbb
int3
mov
lock
inc
xchg
in
add
mov
jp
sub
je
xor
iret
mov
inc
addr16
scas
xor
ss
inc
jge
and
inc
dec
sarb
orl
inc
mov
mov
pop
or
adc
jae
ds
std
jne
or
pop
mov
cmp
mov
in
loopne
pextrw
dec
psraw
mov
sub
and
push
and
sbb
dec
clc
shll
clc
lret
pop
sti
aad
sbb
sbb
bound
xchg
outsl
rcrb
mov
push
loop
lods
test
popa
sub
lods
inc
rcr
and
mov
out
push
idiv
mov
call
xchg
data16
mov
movsb
add
inc
rolb
cld
cs
inc
insl
popa
insl
push
push
stc
pop
push
dec
mov
sbb
pop
and
pop
test
xor
lahf
adc
pushf
or
aas
in
sahf
cwtl
jne
mov
inc
faddp
pop
lret
inc
pushf
adc
sub
cmp
mov
xor
jge
out
js
adc
rolb
sbbl
mov
add
xor
push
mov
into
cmp
jl
add
cmp
cmp
sub
fwait
repz
ret
pop
dec
pop
mov
push
sub
mov
loopne
movsb
pushf
inc
push
jnp
pushl
test
jle
sbb
mov
and
movsl
imul
iret
push
jae
cmp
idiv
cmp
stc
fs
adc
aas
jns
pushf
pop
add
cmp
outsb
repnz
clc
sub
pop
lods
jge
popa
lock
pop
test
aad
ss
sbb
push
testl
inc
adc
nop
pusha
popa
mov
pop
ret
mov
imul
jmp
int
clc
aaa
fistps
mov
push
sbb
mov
int
sbb
push
ss
or
adcb
fistps
pop
iret
push
pop
mov
cltd
je
pop
popf
faddl
mov
mov
outsb
push
or
fidivrl
pusha
push
das
inc
cmpsl
pop
je
xchg
daa
movsl
std
jmp
xlat
iret
cmp
ss
adc
out
stc
cmp
sbb
rcr
je
cmp
es
inc
inc
mov
dec
and
or
adc
into
dec
cmp
inc
into
stos
mov
mov
iret
pop
xor
cli
decl
mov
test
sbb
xchg
push
mov
das
mov
sbb
jmp
jbe
jbe
mov
dec
mov
xchg
pushf
testl
mov
jg
sub
and
aas
inc
int
xchg
push
inc
push
shl
push
and
dec
aam
mov
xchg
push
mov
jo
mov
fcom
popf
sub
outsl
or
mov
mov
sub
shr
out
pop
mov
mov
xchg
and
xchg
insb
push
out
sub
fcom
jle
pop
pop
popf
mov
or
repnz
jno
repz
daa
sarb
mov
ss
or
jo
push
ja
xor
fbld
dec
repnz
push
mov
mov
xchg
imul
xlat
inc
sbb
mov
sub
pop
add
push
pop
repz
cmovo
js
aad
sbb
ljmp
xchg
mov
jb
test
and
rcrl
push
jnp
pop
stos
or
jne
sub
pop
iret
enter
dec
jae
jb
jl
jns
insb
pop
mov
sbbl
xchg
add
out
fists
js
frstor
sub
add
outsl
mov
jbe
idivb
mov
sub
sub
mov
or
adc
mov
mov
mov
pop
stc
leave
xor
and
cwtl
fwait
and
xchg
imul
mov
lahf
cmpxchg
inc
inc
fmuls
pop
push
sbbb
testb
ds
sbb
aam
xchg
mov
movsl
mov
out
push
sbb
fucomi
mov
push
jo
daa
sub
hlt
or
mov
pop
mov
fcompl
fwait
mov
xor
dec
jbe
push
or
sarb
mov
jmp
adc
dec
adc
jmp
bnd
and
cmpsl
add
mov
test
or
jbe
jmp
xchg
fcmovu
loope
loop,pt
and
aad
insl
add
mov
js
loop
dec
mov
pop
mov
mov
xlat
lods
add
or
xchg
ret
jge
push
je
lret
or
leave
test
das
popf
stos
or
popf
sub
cmp
jo
negl
xorl
andb
inc
inc
add
je
push
cltd
lahf
mov
sar
inc
stc
inc
pushf
je
enter
lock
int
shll
xchg
push
inc
mov
sub
sbb
mov
sub
mov
inc
xor
jb
hlt
mov
mov
sbb
pop
push
push
sub
xor
mov
lret
inc
jbe
and
ljmp
sub
adc
lods
ja
or
loop
or
insl
lret
cmpb
jbe
sub
sbb
jmp
lret
xor
ret
cli
jnp
sbbb
int3
sarb
fdivrs
jae
lock
jns
inc
sub
scas
insb
mov
fs
or
mov
dec
mov
inc
lret
or
pop
jbe
dec
mov
inc
cltd
cmpsb
inc
push
dec
xchg
jecxz
pusha
push
push
cmp
ss
mov
int3
push
push
pop
sbb
cli
data16
cmp
jo
adc
movd
shrb
in
movb
fsubrs
jg
ret
aad
inc
jae
fsubr
xor
xchg
repnz
stos
lret
scas
push
fs
lock
mov
dec
inc
mov
lahf
ss
je
add
std
inc
cmpsl
pop
xchg
insl
sub
or
push
pop
pop
push
inc
dec
scas
cmpsl
mov
inc
call
fiaddl
inc
xchg
and
xor
sti
andb
and
mov
mov
mov
sub
fwait
bound
xor
add
repnz
leave
push
mov
stos
push
rcr
jecxz
add
xchg
or
adc
xchg
lret
test
out
cmp
les
inc
js
mov
push
dec
clc
or
rcll
push
xchg
orb
or
mov
push
out
sub
jne
cmp
bnd
xor
sahf
sbb
out
es
jne
xor
ret
jmp
jle
xchg
lret
jo
mov
mov
jne
pusha
mov
xor
sar
or
repnz
sub
addr16
sub
or
cwtl
sbb
push
pop
hlt
pop
push
fisubs
inc
gs
outsb
test
inc
icebp
pop
cmp
lods
adc
shlb
push
inc
pop
dec
fsubrs
addr16
cmpsl
pop
orb
adc
cmp
cwtl
jbe
xchg
stos
lods
outsb
pushf
jo
add
add
stos
data16
cmp
jns
cmp
cld
leave
cmp
xor
mov
mov
or
flds
ja
sbb
add
insl
mov
fwait
outsl
mov
mov
lret
frstor
jmp
cld
ds
rcrl
xchg
stos
sub
scas
into
loopne
faddl
js
cmc
sbb
sbb
pop
jno
and
push
adc
mov
daa
test
into
das
test
vdivss
fwait
pop
pop
testl
orl
fcmovne
lea
dec
test
inc
inc
gs
aad
and
ffree
in
scas
into
cmp
and
cld
pop
add
pop
adc
in
or
outsl
into
insl
movsl
loop
mov
inc
data16
lret
sbb
mov
jmp
mov
les
jae
stc
out
adc
arpl
repnz
xor
dec
mov
mov
out
cmp
psllw
mov
cmp
fs
test
push
out
adc
pop
xlat
adc
sbb
inc
mov
ljmp
cmpsl
sbb
popf
dec
idiv
push
dec
repz
mov
hlt
cs
out
inc
dec
pop
insl
jbe
inc
ret
sbb
scas
ret
pop
and
and
inc
movsb
sub
test
pop
inc
xchg
sub
add
sahf
test
lods
adc
cmp
test
cmc
sub
sbbl
out
out
mov
jecxz
dec
cwtl
pop
lret
clc
outsb
mov
test
pop
inc
add
loope
adc
test
jge
ds
xchg
clc
sub
pminub
pop
pop
in
ds
jp
jns
loop
addb
sbb
gs
mov
inc
xor
mov
cld
enter
jno
imul
shl
iret
dec
out
cmp
jecxz
add
leave
mov
ret
pop
stos
push
call
jl
cmp
lds
dec
fildl
jo
and
sbb
lret
imull
pop
fsubrl
imul
mov
or
or
std
addr16
out
mov
mov
dec
dec
enter
fwait
xchg
push
xlat
push
dec
divl
add
pop
insl
int
imul
cmpsb
or
out
aam
inc
jmp
ret
push
sub
fistl
rorb
push
mov
lahf
movsb
adc
outsl
mov
jne
mov
mov
push
int
nop
out
mov
icebp
mov
in
mulb
mov
int3
pop
adc
mov
ret
add
or
mov
daa
mov
daa
mov
addr16
mov
mov
mov
xor
outsl
movsl
lret
xchg
sbb
mov
ljmp
and
aad
push
adc
rorb
sbb
fbld
or
out
xorl
inc
pop
xor
sbb
xorb
adc
outsl
mov
pop
push
sbb
adc
aaa
addr16
xor
fwait
jp
adcl
lret
in
into
loopne
or
lods
xor
push
cld
jl
movl
mov
js
stos
sbb
add
jecxz
shl
add
push
xor
pop
jno
shrb
jge
inc
clc
arpl
test
int
pop
aas
and
push
shlb
dec
or
or
and
fsubr
jle
jb
and
repnz
push
mov
cmp
adc
ss
and
rcrl
mov
push
inc
lret
pop
int3
test
test
add
jmp
cmpsl
stos
cmpsl
mov
mov
lods
inc
jbe
jmp
sub
adc
out
movsl
mov
add
in
aam
shrb
or
adc
pop
push
test
fbstp
jmp
push
add
ja
mov
loopne
inc
push
or
movsb
lret
jb
addr16
adc
dec
mov
push
mov
test
or
cmp
push
loope
inc
cmpsl
lods
sarl
ss
sub
in
and
jmp
push
push
and
sbb
cmpsb
in
call
js
or
add
scas
test
ja
xlat
dec
jge
std
pop
das
sbb
push
test
in
bound
fnstenv
icebp
stos
lcall
dec
and
pusha
out
mov
sbb
lods
call
xchg
xchg
or
inc
xchg
adc
xchg
add
mov
and
arpl
pop
icebp
test
out
or
loope
adc
fucomi
fists
and
sub
sti
and
xor
ds
in
movsb
pop
mov
mov
imul
faddl
sahf
int3
int
pop
loope
test
ret
in
xchg
or
mov
out
xchg
xchg
vpxor
loopne
insl
cmp
xchg
or
data16
dec
jbe
sub
out
arpl
dec
or
adc
cmc
ljmp
jns
repnz
lea
in
lcall
pop
arpl
push
jb
aam
mov
and
xor
xor
outsb
push
rcrl
and
scas
stos
lret
std
mov
imul
mov
and
mov
stc
rcrl
sub
or
pop
nop
in
cmp
shr
pop
sbb
loope
mul
push
push
cmpsl
rorb
test
mov
sahf
xor
popa
xor
pop
fnstenv
shlb
mov
scas
hlt
mov
sub
repz
jnp
jne
push
inc
rclb
and
adc
inc
loope
jnp
push
test
adc
gs
shll
outsl
inc
add
ret
sahf
fidivl
call
xor
mov
jno
lock
pop
pop
leave
push
sub
fdiv
lahf
lret
fsts
popa
inc
mov
dec
out
adc
push
out
pop
lret
js
sti
xchg
filds
xchg
pop
cmp
dec
xlat
push
jmp
lds
icebp
or
je
into
insl
or
and
pop
ror
cli
cwtl
inc
pop
stos
mov
loope
xchg
mov
mov
add
fwait
gs
fstl
adc
cmc
pop
cmpsl
repz
fdivs
lcall
int
xchg
cwtl
cltd
sbb
clc
dec
std
ja
pop
test
out
sbb
hlt
dec
fstps
movsb
movsb
imul
mov
push
xor
shll
out
cmp
cmp
aas
pop
leave
cmp
pop
test
pop
in
je
arpl
int
add
and
stos
mov
enter
mov
cmpb
fadds
mov
xchg
and
enter
mov
adc
imull
push
xor
cmpsl
outsl
cmp
jbe
lret
jp
cmp
pop
dec
ljmp
mov
shrb
mov
fcmovnu
sbb
fwait
test
sbb
cmc
push
xor
push
push
mov
test
in
stos
inc
mov
mov
cmp
mov
data16
or
push
insb
outsl
push
xlat
repnz
leave
dec
ljmp
test
orb
outsb
dec
push
hlt
xor
and
pop
loop
std
xchg
aad
cmp
mov
inc
scas
sub
mov
pop
dec
lods
sbb
xor
pop
mov
sar
int3
dec
repnz
andps
or
jae
dec
ljmp
cld
aad
roll
adc
push
insb
pop
bound
mov
fidivs
les
sbb
addr16
pop
jno
push
in
jae
jno
push
push
pop
sub
adc
aas
sub
inc
iret
and
std
sub
mov
add
pop
aam
push
aaa
mov
inc
mov
mov
.byte
sbb
.byte
adc
inc
mov
mov
add
mov
add
xor
faddp
das
aam
dec
nop
sbb
fnstsw
cs
fdivp
mov
popa
sti
mov
xchg
and
imul
inc
mov
int
jno
adc
xchg
fisubl
sahf
lcall
jne
cmp
test
cmpb
mov
sbbl
outsb
rcrl
jle
jnp
clc
mov
or
xor
lcall
repnz
mov
mov
cmp
jge
inc
movsl
cmp
jnp
scas
out
shll
lret
push
mov
ficomps
pop
jmp
out
xchg
or
or
inc
std
stos
pop
mov
fbstp
insl
sbb
add
mov
push
stc
popa
sbb
inc
aam
and
in
std
cmp
or
into
cmpsb
std
clc
daa
jmp
adc
xchg
xor
inc
pushf
adc
xor
jae
ret
or
in
test
cmp
mov
ljmp
push
mov
loopne
popa
std
pop
and
sub
stos
jmp
imul
push
mov
dec
mov
or
les
mov
and
fsubp
pop
lcall
rorb
xchg
mov
cmpsl
mov
divps
aad
add
jecxz
fsubl
out
xchg
outsl
mov
xor
int
mov
scas
mov
mov
iret
int3
jge
es
aam
movsb
popw
lods
adc
orb
inc
negl
push
aaa
cmp
lods
cs
test
inc
test
lahf
daa
enter
pop
mov
sub
sbb
.byte
mov
and
adc
xor
into
pushf
cs
ds
xchg
out
jno
jae
mov
insb
fwait
xor
rorb
sub
ret
lahf
add
or
lahf
out
ret
adc
lret
cmp
mov
inc
and
gs
mov
jecxz
ficompl
cmp
push
add
mov
push
sarl
sbb
xchg
mov
in
sahf
inc
fimull
add
sarl
outsb
mov
pop
push
cmp
add
inc
lcall
lods
sbbl
jo
pop
mov
jae
lock
sbb
inc
repnz
dec
popf
js
jbe
xlat
jg
dec
pop
mov
cmp
jbe
clc
data16
rolb
icebp
cmp
adc
shl
subl
push
les
into
inc
ds
iret
push
mov
add
icebp
into
mul
pusha
add
sbb
ja
test
adc
je
sbb
call
mov
cltd
inc
cmp
jnp
push
dec
or
or
xor
mov
push
push
pop
out
lods
aad
and
and
cmp
mov
dec
mov
test
in
mov
xchg
outsb
ja
fists
mov
cltd
mov
bound
ljmp
sbb
dec
mov
lea
mov
xchg
sarl
insl
mov
and
out
push
outsl
rcl
xchg
mov
jno
pushf
add
mov
dec
push
sub
ret
or
addr16
jns
frstor
lret
leave
lds
outsl
inc
pop
into
jbe
mov
mov
adcl
es
adc
sbb
testl
add
adc
movsl
and
shrl
aaa
cmp
xchg
outsl
and
aam
aaa
movb
testb
aaa
or
adc
repnz
icebp
mov
jge
add
pop
inc
les
mov
aad
sub
mov
outsl
mov
xchg
rcrl
repnz
jae
lods
jae
xor
mov
fstl
or
aam
mov
xchg
sbb
sub
xchg
mov
ret
push
push
out
sahf
test
xor
sti
nop
and
push
stos
pusha
mov
sbb
flds
into
in
push
mov
add
outsb
push
and
dec
inc
imul
lret
mov
aad
outsl
mov
stc
jns
sbb
pop
mov
mov
idivl
sbb
or
push
jb
sub
scas
or
decl
cli
adc
das
test
mov
outsl
fbstp
and
mov
adc
dec
fiadds
popa
inc
sbb
repz
inc
mov
xor
sarl
adc
popf
jbe
fildll
test
rolb
cmp
push
aad
xchg
mov
xchg
push
inc
xor
pop
stc
cli
mov
sti
loopne
cwtl
lret
mov
sub
mov
mov
mov
cltd
iret
dec
loop
mov
out
fmul
cmp
enter
int3
addr16
or
push
inc
push
dec
xor
inc
or
lahf
and
addr16
xor
inc
sbb
decb
loope
movsb
fwait
in
sub
aaa
fnstcw
insl
adcl
icebp
sbb
dec
cmpsl
jg
sbb
pop
xor
fisubrs
subl
negl
sti
mov
xor
and
jmp
push
test
push
cmp
xchg
jmp
das
mov
cltd
pop
cmp
cli
jl
xchg
aas
in
faddl
and
icebp
xchg
jl
in
andl
jp
pop
xchg
ret
arpl
imul
pushf
push
dec
stc
jb
insl
aaa
dec
lret
cmovae
xor
les
inc
lcall
or
cmc
xchg
cmc
add
jl
lret
inc
xor
mov
jmp
js
pop
lret
mov
cmp
int3
sub
shl
and
and
jne
icebp
jns
push
leave
inc
fists
or
mov
cmp
lods
cvtpi2ps
rorb
js
mov
cmpsb
push
fsubr
mov
rorl
xor
in
sti
mov
jae
in
jbe
mov
not
or
inc
lods
adc
adc
enter
movsl
xchg
pop
jge
sarb
ss
lret
aam
jns
pop
pop
dec
notl
mov
mov
into
outsb
cmp
jp
sub
stos
mov
mov
jnp
scas
cmp
shrl
mov
pop
lret
or
ret
adc
test
subl
outsl
jge
dec
mov
mov
mov
cs
dec
movsl
lock
and
aad
dec
test
aas
sahf
mov
inc
insb
mov
insb
jmp
filds
push
ret
enter
or
mov
adc
mov
push
call
inc
scas
or
out
int3
mov
filds
push
test
and
mov
mov
push
mov
ret
push
je
dec
fsts
add
push
iret
mov
fidivl
sub
sbb
cmp
not
xchg
mov
in
add
push
fs
out
fstps
and
daa
fmuls
pop
sbb
frstor
cmpsl
inc
dec
push
in
jmp
fists
loop
push
sub
pop
inc
pop
das
mov
orb
ret
xor
mov
stc
lret
pop
fidivrl
inc
addr16
mov
mov
into
pop
ror
add
mov
push
or
cltd
popa
jb
nop
and
fs
data16
mov
inc
mov
mov
pop
clc
push
inc
loopne
lods
rcrb
bound
aaa
xchg
cmc
dec
vpaddd
mov
pop
outsl
adc
push
or
fadd
mov
push
loop
test
dec
imull
sub
inc
out
pushw
jl
pop
ljmp
mov
pop
mov
inc
leave
mov
fwait
lea
es
xchg
pop
call
repnz
in
xchg
push
mov
xchg
jmp
loope
int
scas
jmp
arpl
cmp
imul
push
ds
mov
gs
leave
idivl
xchg
test
or
in
mov
into
xchg
imul
push
xor
ljmp
lret
jmp
shrl
pop
xchg
xcrypt-cfb
cmpsl
in
test
xor
js
jp
testb
outsb
lcall
sbb
jp
push
mov
or
ficomps
pop
in
xchg
ljmp
fdiv
dec
fidivl
ficoms
std
mov
stc
pop
push
popf
sti
push
mov
pop
in
fildll
mov
jno
dec
outsb
jnp
xchg
out
inc
or
add
adc
shll
xchg
push
pushf
mov
sub
aaa
jl
icebp
scas
inc
xor
js
sub
into
add
mov
lcall
pop
jnp
fs
or
repz
dec
sub
push
sub
out
push
pop
mov
mov
jmp
ds
sub
pop
sub
push
mov
jmp
daa
loopnew
std
ret
mov
lcall
lock
mov
sbb
and
push
adc
dec
cmc
fistl
shrl
in
inc
jecxz
pop
vpperm
and
push
mov
daa
imul
jl
dec
mov
aaa
je
sti
aas
outsb
jl
roll
movsl
cmp
mov
cli
lret
fisubrs
jo
push
and
push
cmp
sti
xchg
test
inc
push
inc
es
add
jl
and
cmp
rcrb
xor
xor
movsl
mov
dec
xchg
loop
push
out
cmpl
call
sub
mov
sbb
xchg
fcomps
adc
lret
pop
iret
aam
les
subb
sbb
shlb
nop
dec
sub
orl
das
xor
test
fdivr
pop
rcll
mov
cmp
ja
insb
shl
pusha
rol
xchg
cmc
js
pop
pop
push
jge
sti
inc
sub
sbbl
xor
jb
mov
fwait
rcrb
gs
push
std
in
test
push
ja
ret
xchg
sub
leave
push
leave
push
test
xlat
ret
imul
fdivr
add
jmp
xchg
out
push
js
cmp
sbb
pop
adc
push
jg
fmuls
inc
lcall
xchg
or
push
and
roll
jmp
aad
xchg
sub
jnp
fdivl
pop
push
outsl
repz
test
pop
xor
ficomps
lahf
push
insl
in
adc
leave
push
cmp
cmpsl
pop
sub
call
pop
and
loopne
xchg
sti
fdivrp
and
xor
fnsave
inc
xchg
and
shlb
loope
ret
mov
loop
inc
popf
jae
sub
bound
addr16
outsl
xchg
xchg
popf
icebp
mov
dec
arpl
cltd
lds
pop
lock
scas
xchg
mov
dec
outsb
pop
xor
mov
push
movsb
out
icebp
push
mov
pop
cmp
cmp
cmpsb
mov
cmpb
loopne
rcrb
mov
cmp
movsl
jg
sbb
rclb
sbbb
dec
jno
es
adc
cmp
pop
sbbb
adcl
in
aad
dec
adc
lds
pop
cmp
testl
js
and
lahf
sarb
pop
jp
mov
mov
add
jbe
adc
mov
push
divl
test
push
pop
cmp
shrb
and
sub
cmc
daa
dec
test
fucomip
mov
ss
and
lcall
push
mov
add
push
and
push
push
sub
cmpsl
les
mov
cld
test
lds
test
int3
loopne
jp
mov
mov
fistps
add
fs
jns
nop
mov
mov
inc
mov
push
inc
test
aaa
push
add
xchg
adcl
enter
std
testl
xchg
cmp
mov
xlat
mov
and
pushf
pop
cmp
in
int
scas
js
dec
sbb
xchg
jo
arpl
stos
ret
mov
and
rolb
xchg
subl
xchg
addl
enter
arpl
fdivl
sar
pop
xorb
ljmp
push
loopne
jmp
vmulsd
mov
adc
xchg
inc
jg
gs
push
or
pop
jge
mov
andl
js
add
pop
inc
scas
test
mov
int3
test
and
inc
or
mov
xchg
xor
pop
dec
les
in
sbb
clc
je
xor
out
mov
jo
jnp
aam
js
repz
pop
imul
inc
in
dec
xchg
mov
in
sub
bound
xchg
xor
or
std
fiadds
adc
mov
imul
call
sub
rcrb
inc
pop
out
out
pop
jb
aam
repnz
fdivl
and
add
sub
mov
fs
add
adc
adc
out
pop
xor
cli
xchg
xor
pop
and
add
das
adc
push
in
push
adc
add
movsb
sti
xchg
int3
outsl
shrl
xor
fnstcw
pop
push
int3
out
or
and
sbb
dec
mov
test
push
fistl
loop
insb
mov
adc
jns,pt
idivl
leave
push
sbb
cmp
and
mov
inc
inc
adc
xlat
mov
repnz
add
dec
cltd
adc
xchg
loop
cmpsl
push
rcrb
arpl
mov
adc
cwtl
mov
mov
sub
jnp
mov
stos
push
mov
mov
stos
and
icebp
daa
mov
pop
adc
xor
popa
cltd
fisttpll
aad
mov
stos
or
jmp
icebp
xchg
fnstcw
lods
jmp
or
mov
xor
mov
adc
inc
sub
jmp
in
jbe
cmp
dec
mov
lds
add
in
adc
mov
push
push
data16
cltd
xchg
mov
jbe
pop
or
shll
enter
jo
rcrb
dec
nop
out
inc
jae
adc
test
push
pop
sbb
sbb
es
and
mov
cmp
mov
repz
js
out
add
pop
call
mov
test
in
into
loop,pt
cmc
xchg
je
jne
xor
pop
test
xlat
clc
mov
in
test
int
in
repz
jns
int3
cmp
pop
inc
cmp
fst
push
push
lock
into
dec
jnp
movsb
sbb
repz
xorl
enter
push
xchg
mov
dec
push
andl
xor
scas
or
in
scas
lcall
call
push
gs
stos
testb
ja
ja
call
pop
loopne
out
popf
or
out
sti
in
bound
or
insl
jns
sbb
inc
cmpsb
cli
push
mov
push
sbb
iret
adc
and
dec
lea
xor
dec
cmc
mov
sbb
cli
outsl
cli
out
mov
inc
mov
add
pop
and
push
mov
outsb
cmp
adc
dec
fs
jl
arpl
inc
pop
lahf
xchg
mov
pop
add
mov
cli
push
jecxz
daa
cli
scas
mov
std
xor
or
lahf
repz
cmp
pop
shrb
divl
dec
pop
stc
xchg
lock
push
cmp
push
cltd
enter
pusha
stos
xchg
dec
insb
jns
dec
lods
enter
push
scas
jo
cmp
jl
dec
mov
shlb
xchg
mov
add
xchg
add
xchg
inc
push
pop
sahf
jo
jecxz
mov
cmp
stc
jl
out
.byte
loopne
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
add
addl
jle
sub
jmp
jno
xlat
les
cs
pop
gs
push
call
hlt
sbb
fidivrs
adc
pop
pop
add
movzwl
mov
add
mov
pushl
push
jns
mov
pop
pop
xor
sub
mov
add
jo
push
mov
pop
mov
mov
sub
mov
add
dec
jne
push
movswl
pop
jmp
mov
mov
jmp
mov
scas
dec
fsub
mov
inc
je
adc
xor
mov
in
inc
or
xor
mov
mov
dec
sahf
cmp
fstl
es
dec
and
ret
sub
shl
mov
aad
aad
sbb
push
sbb
call
add
sub
xchg
stc
sub
nop
xchg
nop
mov
push
adc
cmp
sbb
adc
outsb
add
ret
lret
or
roll
fists
or
cmp
pop
xchg
cmp
inc
out
cmp
and
and
cwtl
mov
js
movsb
mov
inc
mov
mov
inc
test
mov
mov
adc
adc
cmp
les
dec
mov
test
and
cmp
inc
or
adc
lahf
cltd
aad
or
pop
adcl
sbb
ss
insb
ret
nop
sbb
pop
ret
jbe
pop
ret
pop
or
pop
pop
or
jecxz
hlt
pop
adcl
ret
pop
orl
inc
jge
nop
lret
ret
xchg
add
jg
add
in
mov
xchg
xchg
mov
pop
and
rcl
adcb
pop
daa
stos
das
iret
fnstsw
lret
mov
cli
adc
or
xchg
pop
ret
pop
add
ret
pop
icebp
enter
lea
adcl
inc
dec
sub
mov
ret
rcll
out
fisttpll
cmp
scas
iret
sbb
pop
je
dec
add
push
jne
neg
imul
add
and
rolb
push
cmp
push
cmp
xor
pop
lcall
fisubrl
jl
imul
int
stos
scas
je
cmpsb
lods
and
pop
je
mov
imul
aas
push
push
xchg
test
mov
pop
loop
pop
movsl
inc
insl
push
jno
cmp
ss
push
out
hlt
push
mov
out
mov
neg
mov
lods
shlb
mov
jnp
pop
pop
xchg
sarl
sub
fwait
neg
imul
imulb
shrl
fisubrl
jne
js
xchg
lret
test
push
leave
mov
rcl
xchg
loopne
mov
mov
sbb
push
xchg
in
xchg
jb
xor
sub
test
sbb
lret
test
divb
data16
sub
sub
outsl
nop
popa
imul
sub
dec
lahf
add
pop
call
sub
sub
xor
out
lret
test
das
and
lret
popf
andl
test
inc
mov
gs
mov
ret
incb
pop
push
pop
xchg
into
fdivs
inc
pop
cmp
push
and
mov
jg
test
mov
test
mov
adc
inc
pop
pop
mov
and
add
sbb
std
testl
adc
inc
pop
pop
mov
inc
pop
fdivr
inc
pop
fdivr
sub
mov
push
int
imul
hlt
inc
pop
sbb
repnz
inc
nop
aam
sub
jb
incb
hlt
in
push
pop
test
inc
jge
movsb
mul
stos
lods
rcll
push
hlt
notb
jge
fsubrs
fmuls
dec
pop
fdivr
das
pop
add
pop
fdivr
into
fcom
incb
push
or
fdivr
inc
loopne
loop
pop
push
incb
cwtl
push
inc
dec
fdivr
mov
pop
jb
mov
pop
adc
pop
fdivr
into
fsubr
incb
xor
out
fmuls
ret
incb
pop
int3
fsubr
incb
adc
int3
fcoms
xor
repz
add
or
dec
repnz
aad
pop
fmuls
pop
dec
push
bound
fwait
stos
or
inc
addb
inc
pop
push
gs
jno
loope
dec
push
xor
sub
pop
fdivr
int3
test
sbb
inc
sub
je
adc
sar
inc
pop
push
incb
push
addl
dec
pop
push
bound
lcall
inc
hlt
pushf
icebp
sbb
sbb
push
inc
repnz
int3
fcomps
incb
adc
lock
jge
fadd
das
pop
jb
das
pop
imul
push
fdivrs
pop
jb
adc
daa
rolb
push
inc
pop
fdivr
test
incb
fdivr
inc
mov
and
sahf
cmc
mov
pop
cmovae
ljmp
or
loop
ja
xchg
pop
ljmp
or
incb
xchg
iret
ja
xchg
test
or
xchg
inc
xor
mov
dec
ljmp
rep
cmp
lods
mov
mov
inc
cltd
in
loope
inc
pop
fiaddl
adc
sbbl
cmp
mov
aad
imul
incb
fiaddl
adc
mov
push
inc
rep
cmp
mov
adc
or
sub
ret
scas
movsl
add
mov
repz
int
inc
incb
fdiv
xchg
test
or
xchg
inc
xor
mov
dec
ljmp
pop
lea
jp
xlat
incb
scas
aaa
adc
or
sub
ret
scas
gs
mov
pop
pop
mov
insb
sub
popf
sbb
fsub
mov
push
mov
les
or
insb
sub
popf
sbb
mov
sub
jno
imul
fdivr
inc
pop
push
cmp
inc
cs
inc
pop
push
fdiv
inc
cmpsl
pop
and
mov
push
loope
pop
fmuls
add
ffree
cmp
ds
inc
pop
fdivs
xor
incb
pop
fldl
or
inc
pop
fcom
dec
pop
fdivr
in
fistpl
scas
mov
scas
cmc
inc
pop
push
int3
popa
pop
rorb
pop
or
push
inc
sub
sbb
ficompl
std
lods
aam
int3
popa
adc
xchg
sbb
dec
sbb
testl
cmc
hlt
push
sbb
push
jnp
xchg
xchg
mov
icebp
jbe
out
xor
pop
out
sub
mov
lods
sub
push
lock
mov
pop
rorl
shrb
pop
fdivr
inc
pop
fdivr
inc
pop
fdivr
inc
pop
fdivr
inc
pop
fdivr
inc
pop
fdivr
inc
pop
fdivr
inc
pop
xchg
inc
cmp
xchg
testl
fdivr
inc
pop
fdivr
add
sub
pop
fidivrs
dec
pop
sub
pop
fdivr
inc
pop
fdivr
inc
pop
fdivr
inc
pop
fdivr
inc
pop
scas
ret
jbe
xor
dec
push
xchg
mov
sbb
sub
push
mov
sti
push
cmp
sub
loop
shl
divl
aam
mov
xor
xor
lods
pop
movsl
aad
std
sbb
inc
jmp
scas
punpcklwd
jne
call
bound
testl
and
xor
and
xorl
pushf
add
push
dec
inc
scas
scas
or
in
jb
adcl
rclb
mov
inc
fucomip
lods
in
insb
lea
jecxz
cmovb
jge
int
xor
les
add
push
xchg
adc
subl
ds
cmp
sub
std
xchg
dec
pop
stc
inc
and
lods
dec
movsb
out
jb,pn
inc
sbb
fstl
sarl
cmp
mov
loop
idivb
clc
sarl
cmp
lods
aaa
push
iret
int3
inc
cmp
dec
lods
rorl
push
imul
mov
fdivs
mov
xor
and
gs
stos
jnp
jge
adc
xor
xor
cmpl
lret
pop
mov
adc
aad
dec
xlat
rorb
mov
cmpsb
in
int
flds
testb
mov
add
sti
clc
clc
icebp
out
shl
sbb
rcll
mul
pop
loop
xchg
ja
mov
jb
test
divb
push
popl
jl
aam
ret
lcall
mov
jge
adc
ret
push
ljmp
xor
daa
ds
dec
movsb
mov
xchg
xor
xchg
or
jb
mov
mov
leave
adc
js
jge
mov
adc
imul
stos
out
repnz
add
inc
hlt
xchg
fisttps
dec
pop
dec
cltd
popf
push
les
jb
lds
cmpl
mov
and
sti
lret
add
cmp
mov
movsl
test
and
push
ret
mov
lea
jl
out
adc
pop
cmpsl
add
add
and
adc
je
jne
leave
pop
and
dec
inc
or
mov
cwtl
dec
pop
adc
dec
xor
cmpsb
mov
sub
xor
adc
mov
das
cmp
add
cmp
sbb
popa
cmp
loop
das
push
push
stc
push
jne
xchg
add
push
out
sub
or
repnz
inc
sub
push
adc
addl
fwait
outsb
mov
add
icebp
testl
or
sbb
fdivrp
mov
f2xm1
lods
sub
xor
bound
test
add
add
add
or
add
add
dec
add
dec
add
xor
adc
dec
add
pushf
or
cmp
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pushf
or
hlt
fwait
or
lods
pushf
or
rcrb
add
pushf
or
lds
add
gs
insb
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
pushf
or
add
add
cli
pushf
or
add
add
adc
add
add
push
push
js
arpl
gs
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
sbb
add
add
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lea
add
add
add
add
cli
cli
jbe
dec
cmc
in
jp
pop
mov
leave
ss
rolb
jecxz
jb
xor
jl
sub
inc
ss
bnd
fwait
sub
or
stos
mov
repnz
adc
sti
mov
inc
aad
cmc
stos
imul
fdivrl
mov
adc
out
cltd
mov
pop
out
fidivs
fists
idiv
jle
or
testl
push
mov
push
adc
mov
xchg
rclb
aad
jne
std
stc
cld
cmpsl
cmpsl
ss
add
xorl
xchg
mov
js
dec
ret
push
xchg
ss
and
jo
lret
lahf
stos
cmp
mov
jns
out
cmpsb
pop
sbb
ljmp
jnp
je
add
enter
mov
xor
pop
outsl
dec
bound
pop
dec
rcrb
push
cmp
or
or
dec
push
movl
inc
and
pop
aam
fmul
xor
or
and
sbbl
cli
cli
inc
xor
jbe
mov
sahf
sub
mov
pop
lock
cli
lret
in
pop
add
xchg
xor
jae
movsb
mov
das
nop
movsl
iret
inc
mov
inc
aam
sbb
lds
clc
push
and
pop
test
cwtl
cmp
push
jmp
push
jns
mov
insb
cli
xchg
push
pushf
ja
jl
xchg
pushf
nop
nop
cmpsl
fs
jns
jae
loope
hlt
sbb
fcmovnu
aas
sbb
sbb
sbb
jl
mov
add
cwtl
push
push
rcrb
stc
sub
fcmovb
fwait
pop
stc
outsl
push
in
push
inc
xchg
int3
jp
xor
jno
pop
inc
adc
cld
int3
xchg
enter
mov
or
cmp
sbb
jmp
xor
or
cmpsb
je
addr16
push
arpl
cltd
lock
push
jl
test
es
jmp
aas
in
out
mov
fstp
out
adc
mov
mov
int3
std
icebp
pop
les
fdivl
pop
sbbl
xchg
inc
not
push
sub
mov
stos
fisubrl
cmpsb
mov
arpl
shll
pushf
xchg
jle
cltd
cmpsl
loope
inc
ljmp
pop
std
sub
lahf
addr16
jle
xor
pop
sbb
testl
les
fdivrs
cmpsb
arpl
pushf
lret
pop
stos
or
dec
cmp
inc
stos
lret
mov
sub
jg
shrl
mov
fsubrs
xor
push
jge
adc
test
mov
sbb
js
mov
iret
cmpsb
fisttpll
ja
xchg
and
xchg
sub
ret
cmp
push
xor
out
and
add
insb
xchg
lcall
pop
lods
out
insl
and
sar
stc
and
inc
cmp
jo
lock
repz
push
shlb
xchg
and
mov
bound
loope
mov
adc
mov
xor
icebp
dec
lret
xor
jb
or
inc
push
sbb
cltd
shrb
mov
ljmp
jmp
test
or
call
pop
dec
rcr
sub
xchg
int
outsb
sub
push
mov
cmp
es
jae
repnz
mov
mov
xchg
and
fadds
cmp
cmp
fisttpll
add
loope
jg,pt
ret
sti
jg
jmp
gs
pop
jno
sahf
gs
rclb
xorl
subb
cli
fisubl
xchg
jg
lods
cs
lds
sbb
push
dec
lods
in
jns
fnstenv
icebp
jae
xor
outsb
loop
sbb
and
ret
and
call
enter
push
adc
adc
jb
andl
clc
mov
and
stos
sbb
aad
roll
add
inc
mov
sti
cs
ror
lds
dec
xchg
lret
mov
das
lea
sbb
aas
pop
push
jb
ss
bound
adc
jnp
leave
fs
pop
cmpsl
pushf
sbb
nop
push
push
inc
test
insb
arpl
xchg
pusha
sub
sbb
dec
xor
cltd
adc
fwait
and
ds
push
loopne
ja
xor
mov
pop
add
addr16
xchg
pop
repnz
jle
in
andb
imul
test
cs
test
fcmovb
mov
scas
loopne
pushf
sbb
mov
pop
ljmp
roll
sbb
inc
negl
ret
mov
int3
push
ret
mov
lods
inc
lods
mov
loop
xchg
xchg
xor
push
adc
ficoml
ja
test
cld
adc
out
and
and
out
sub
in
pop
xchg
in
dec
test
arpl
inc
addr16
in
clc
sbb
pop
xor
lock
mov
sti
cmp
push
sbb
dec
jne
icebp
sub
mov
aam
fisttpl
in
stc
push
outsl
out
pop
pop
insb
bound
jne
cmc
aaa
rcrw
inc
lahf
xchg
imul
lock
add
popa
pop
jbe
xchg
sti
andb
mov
aas
or
mov
shr
mov
test
call
ds
jo
in
adc
into
add
and
addr16
dec
out
clc
pusha
fdivs
dec
int
call
out
add
test
clc
cmp
mov
add
add
dec
repz
out
lret
enter
cwtl
shrl
mov
inc
insb
or
repnz
es
cmp
arpl
enter
mov
push
cmpl
cld
pushf
push
test
lods
adc
scas
sbb
dec
lahf
shl
cwtl
cld
and
xchg
sbb
dec
cmc
lds
inc
mov
mov
hlt
mov
push
xchg
push
fiadds
xchg
out
cmpsl
jge
mov
daa
cmpsl
xor
jp
pushf
lahf
movsb
sub
adc
ds
nop
jo
sahf
cmpsb
insb
mov
jb
int3
fidivrl
dec
arpl
iret
inc
push
push
mov
ror
pop
fistpll
pop
imul
ja
clc
inc
in
pop
pop
cmpsb
sbb
outsb
cmc
stos
jb
push
shr
cltd
pop
mov
mov
sub
fs
push
mov
or
ret
cmp
xor
sub
jge
or
inc
push
jo
outsb
and
test
es
icebp
ljmp
fdivrl
and
arpl
inc
fsubp
aaa
cmp
mov
jg
jnp
jae
cmp
jle
push
loop
cmp
mov
and
mov
insb
stos
mov
ret
jno
shl
or
sub
fcmovbe
mov
mov
mov
test
mov
mov
adc
fisttpll
addr16
lret
sbb
adc
xor
xchg
cmc
and
in
addr16
mov
addl
mov
lcall
xor
aad
xor
xor
fsubp
adcb
mov
mov
xor
xor
shl
enter
aaa
inc
nop
rol
clc
lds
outsl
leave
cld
sub
cld
mov
inc
mov
daa
ret
shlb
and
and
jbe
sbb
cmc
mov
ficoms
sbb
push
out
push
pop
ds
sbb
pop
push
adc
xchg
xchg
outsb
xchg
mov
push
xchg
ret
std
and
lock
mov
cmp
sbb
xor
mov
repnz
scas
xchg
adc
mov
xchg
sbb
aad
js
and
sbbb
lcall
mov
pop
push
out
pop
mov
and
and
inc
sbb
jbe
ret
in
jb
scas
inc
and
scas
mov
outsl
ror
push
faddp
imul
rcl
and
pop
jp
cltd
aaa
cwtl
fldt
jge
jns
js
movsl
mov
inc
or
jge
mov
push
mov
mov
lcall
add
lret
mov
push
popa
inc
jae
ss
leave
sahf
xchg
sub
push
inc
jnp
xchg
add
jbe
cmc
adc
incb
inc
mov
cmp
and
dec
daa
mov
bound
push
and
sbb
xor
xchg
sbb
lea
jmp
xchg
cli
inc
mov
mov
mov
and
movsb
mov
jb
in
lock
pop
stos
push
lcall
into
call
inc
das
sbb
int3
ret
mov
sbb
cmpsb
addr16
gs
mov
outsb
cmp
mov
mov
xor
iret
outsl
xor
pop
jle
imulb
cltd
out
pop
xchg
imul
xchg
cmp
sub
stos
mov
adc
testb
and
lret
jl
mov
dec
iret
sub
mov
jecxz
mov
cltd
jmp
add
dec
inc
push
dec
push
jns
xchg
call
cmp
push
es
shll
aad
and
xor
adc
jge
mov
and
movsl
es
les
cmp
fcom
mov
cmp
icebp
sbb
fidivl
xchg
inc
cmpl
repz
inc
mov
jg
cmp
orl
lahf
jle
pop
pop
push
nop
or
into
movsb
lret
enter
icebp
pop
mov
rorb
add
mov
cmpsl
icebp
fbld
dec
inc
les
push
jns
shrb
mov
push
int
in
push
inc
mov
mov
add
aad
int3
clc
sbb
lcall
jecxz
fisubs
jno
pushf
lods
push
out
mov
lods
popa
pop
sbb
mulb
fists
dec
gs
xchg
dec
pop
sub
imul
sbb
sub
cmp
sub
cs
cmp
fstpt
scas
sti
insl
addr16
clc
xchg
push
jl
jo
mov
or
dec
cmp
jp
xchg
push
dec
sub
jl
xchg
inc
mov
lahf
and
mov
dec
fsubrl
cmpsb
cmp
add
xor
xchg
fisubs
das
pushf
das
or
adc
cmp
mov
push
sub
xchg
xor
sub
cwtl
pop
bound
call
test
dec
sarl
push
jp
jnp
sub
and
mov
pop
mov
mov
fisttps
sti
fcomip
add
dec
aam
hlt
sub
xchg
or
mov
inc
les
adc
inc
push
test
cmpsb
call
scas
lret
pop
cmpsb
lods
test
dec
push
xor
mov
stos
leave
lods
sub
insl
in
imul
fisubs
sbb
shll
les
xor
adc
lret
mov
pop
add
movb
xor
dec
push
orl
xor
xlat
sbb
inc
jmp
data16
insb
jecxz
test
icebp
in
cmp
icebp
sbb
or
rcrl
fistps
jne
jle
insl
or
mov
dec
push
hlt
and
cli
pusha
mov
adcl
push
push
inc
cmpl
sahf
dec
mov
sub
xor
mov
xchg
mov
loopne
sbb
mov
cld
xor
rcll
into
stc
imul
jb
loope
dec
or
stos
inc
pop
addr16
stos
cmpsl
jbe
push
leave
adc
aam
mov
xchg
movsb
mov
sbb
loope
or
pop
adc
and
xor
clc
jo
int3
inc
sub
mov
je
xor
cli
mov
movsl
xchg
xor
sbb
pop
mov
testl
sbb
and
sub
aam
sbbl
sbb
movsb
pop
push
or
or
dec
mov
call
mov
cmp
jo
xor
jae
jne
and
pop
push
fidivl
or
jge
leave
cmpsb
cmp
sbb
vmovupd
cmpsl
cmp
cmp
jb
popa
ja
and
pop
sar
inc
cmpsb
out
lret
pop
repnz
shrl
mov
sbb
push
ffree
mov
fstpt
rorl
rorb
and
pop
xchg
rclb
test
sbb
out
nop
fsubrs
les
and
repz
mov
fcmovnb
sti
adc
out
xchg
sbb
xor
out
loope
imul
test
fadds
pop
aam
push
xchg
fisttpl
sub
ficoms
inc
jmp
inc
int
jge
or
mov
test
push
mov
cli
mov
dec
dec
in
dec
mov
cmp
ret
inc
data16
add
dec
ljmp
call
sbb
pop
inc
repnz
ret
lret
repnz
mov
pop
dec
test
sub
push
test
pushf
std
test
stos
shl
shrb
xchg
mov
mov
xor
test
push
mov
adc
dec
mov
loop
insb
test
fsubrl
hlt
cmc
or
pop
sarl
mov
or
adcl
xchg
and
scas
insb
or
repnz
sub
fwait
les
mov
ror
jb
cmp
insl
int
fisttps
iret
lods
or
leave
out
xor
pop
in
mov
andl
outsb
aaa
jp
out
out
shlb
outsl
insb
inc
xchg
in
jp
les
xchg
call
mov
pushf
sub
mov
rcrb
jmp
push
popf
repnz
je
repz
jp
push
std
div
inc
lds
fdivl
sbb
jae
cmp
pop
mov
pop
adcl
sub
jp
sub
mov
and
mov
pop
mov
nop
push
sub
push
inc
push
inc
mov
sbb
sub
pop
jns
mov
jo
fsub
and
pop
sbb
sub
daa
jg
scas
roll
jne,pt
mov
loope
sub
fnstcw
jno
mov
fsubrp
or
sub
call
out
test
inc
xor
xorb
js
roll
scas
sub
push
sub
mov
mov
iret
sub
and
lahf
xchg
add
insl
stos
pushf
mov
pop
xor
rol
mov
pop
push
sbb
test
cmpsb
push
sbb
mov
cmp
add
rcrl
jae
fmuls
ret
dec
fld
mov
test
sahf
movsl
sti
cmc
sbb
inc
sbb
call
gs
gs
push
dec
pop
xlat
into
cmp
fs
and
or
add
stc
ret
xchg
in
dec
mov
add
xchg
or
fxch
push
pop
mov
shll
jp
sbb
mov
ds
jne
push
fnstenv
sbb
bound
sbb
jnp
mov
push
push
xchg
push
repnz
pop
das
adc
mov
xlat
xor
jne
decb
dec
xor
fadd
pop
pop
xchg
cmpb
inc
jge
push
repnz
mov
jmp
leave
inc
or
ljmp
and
pop
mov
add
in
and
nop
cltd
mov
xor
ds
aas
aam
dec
test
jg
test
loop
mov
subl
cs
ret
cmpsb
mov
movsb
iret
push
jecxz
jne
adc
mov
add
inc
dec
out
xchg
fdivs
jnp
sbb
movsl
jmp
inc
add
mov
sbb
sub
inc
jb
test
into
and
out
xchg
ljmp
iret
shrl
add
mov
adc
int3
lcall
mov
gs
jp
imul
loop
idivb
xlat
sub
inc
sbb
pop
xchg
xchg
ds
inc
dec
sahf
enter
ficoml
adc
cmp
xor
cltd
push
adc
push
aaa
pop
je
cmp
inc
mov
lcall
add
mov
mov
cmp
xchg
aad
inc
jle
lods
sub
pop
in
ljmp
add
xor
cmc
add
outsl
add
xchg
push
lock
pop
fisubrs
call
dec
out
pop
cltd
pop
add
das
adc
mov
in
and
inc
sbb
rorb
std
jb
ffree
mov
adc
mov
iret
mov
add
int3
jb
call
jnp
xchg
add
fwait
mov
lds
lcall
mov
mov
lret
pop
aas
add
jl
dec
cmp
mov
and
inc
loopne
jecxz
scas
cli
dec
js
ja
cld
push
imul
ss
add
sbb
inc
push
xchg
in
ljmp
repz
outsb
jecxz
movsb
movsl
push
mov
ret
push
jecxz
imull
mov
imul
stos
rclb
xor
push
jle
lds
ja
cli
jns
into
movsl
daa
insl
dec
lcall
or
aas
pop
sub
push
stos
mov
orb
cmp
mov
ljmp
xor
mov
mov
cltd
dec
int
cmc
mov
into
xchg
add
in
pop
lea
jno
lret
mov
adc
xchg
mov
jnp
loopne
jp
mov
push
rcl
push
inc
or
dec
negl
in
xor
fbstp
call
movsb
cmp
inc
out
xchg
lcall
fnsave
mov
add
sahf
or
or
inc
xchg
imul
sarb
mov
and
negb
dec
icebp
jle
out
stos
pop
mov
pop
sub
aas
lea
bound
and
jle
sti
or
and
adc
and
pop
push
fsub
mov
jne
cld
cmp
mov
xchg
in
xchg
fisttpll
jnp
add
popa
shrb
mov
into
aaa
xor
repnz
nop
sbb
ret
jmp
mov
fcomp
leave
mov
dec
cltd
sbb
inc
push
rcrb
js
push
fsubl
mov
jne
nop
call
fidivrs
dec
pop
add
mov
xor
fdiv
test
pop
sbbl
das
adc
mov
clc
jo
inc
adc
add
movsl
add
cmpsb
push
and
pop
sbb
adc
popa
adc
and
in
and
push
arpl
xor
imul
and
sub
jb
push
cmp
sub
in
cbtw
sbb
dec
movsb
and
movsb
add
clc
in
fistl
and
out
or
sti
mov
stos
lcall
inc
pop
push
jl
out
mov
lds
stos
pushf
jns
loopne
mov
push
lret
push
sbb
iret
int3
xor
push
fnsave
in
lahf
js
jmp
pusha
lcall
add
lds
push
out
rclb
inc
repnz
hlt
push
pop
cmp
mov
xor
arpl
pop
scas
mov
push
add
jno
cld
cs
jnp
xchg
jmp
push
cmp
fisttpll
sbb
loop
ret
mov
push
cmp
in
add
push
cmp
cli
mov
sahf
lcall
inc
mov
daa
inc
push
mov
stos
lock
push
pusha
mov
nop
mov
enter
aad
imul
pop
movsl
test
push
adcb
xor
mov
fsubrs
into
xor
mov
mov
mov
dec
pop
fsubs
xor
shll
or
outsb
mov
fstps
imul
stos
dec
jne
out
das
sahf
mov
cld
mov
outsb
mov
mov
lds
cmpsb
add
sub
mov
jecxz
lods
and
popa
mov
cltd
fisttpll
mov
sub
and
mov
xor
rcrb
test
sahf
fwait
pop
push
xchg
cmp
repnz
out
out
pop
aam
imul
jb
aam
mov
push
stos
or
bound
xchg
mov
inc
and
jl
jecxz
adcl
pop
adc
add
aas
xchg
out
pop
xlat
pop
mov
aam
lret
push
xchg
outsl
mov
cmpsl
out
push
add
divb
jmp
sub
fldt
push
enter
scas
xor
das
cmc
dec
out
adc
cli
shrb
fsubp
jge
in
inc
dec
sbb
push
xchg
add
add
in
sti
fs
jecxz
mov
inc
jmp
fimuls
xlat
lods
pop
jne
das
inc
cmp
faddl
or
xchg
fisttpl
xchg
cmp
out
jns
shr
sbb
mov
inc
sbb
pusha
test
jmp
jg
fstpt
pop
fnstcw
xchg
and
aas
push
xchg
pop
scas
mov
push
clc
ja
jno
out
cmpsb
hlt
movsb
jp
push
fsub
jmp
sub
mov
lods
cs
into
inc
lahf
or
aam
rorl
cmc
inc
sub
inc
scas
loop
mov
and
push
mov
jns
xlat
lret
lds
and
fs
dec
imul
andl
cld
mov
inc
cmp
push
mov
and
mov
test
testb
ljmp
push
lds
mov
xlat
xor
mov
xchg
scas
push
jns
int
mov
push
das
pop
mov
mov
sub
pop
ja
or
bound
mov
outsl
mov
sub
rclb
lea
fwait
push
lea
scas
sbb
out
pusha
sub
xor
mov
xor
push
ds
int
mov
rorl
dec
and
xchg
mov
test
pushf
repnz
out
fs
out
xchg
call
pop
in
sbb
andl
push
pop
jae
pusha
repz
rorl
inc
and
push
jbe
mov
adc
cs
dec
sbb
loope
push
lea
outsl
test
xor
lcall
xchg
bound
sbbb
pop
pop
outsl
push
test
jmp
adc
sbb
ret
cmc
xor
cmp
aaa
std
sbb
jo
mov
rcl
cli
or
scas
lods
xchg
jl
xor
divl
xchg
aad
push
insb
pop
out
mov
inc
xchg
popa
pop
adc
push
jne
popa
movb
mov
cwtl
int
xor
lcall
push
mov
sbb
jne
imull
pop
stos
aam
add
xor
loope
bswap
inc
insb
cli
aaa
xchg
push
inc
adc
in
xlat
fisttpl
ret
lds
add
and
jne
arpl
repnz
mulb
inc
xchg
movsb
movsl
push
movsb
adc
sub
cmp
sbb
xchg
rclb
stos
enter
inc
push
popa
cmp
xchg
mov
scas
movb
pop
in
and
mov
subb
iret
shlb
fmuls
push
daa
and
inc
pop
call
ljmp
push
stos
push
adc
sbb
jp
adc
or
fsubs
jg
jb
lret
bnd
cli
insl
adc
das
mov
out
ja
mov
rep
aas
scas
stos
xlat
loopne
stos
call
sahf
out
xor
insl
dec
mov
xchg
sar
cwtl
scas
cmp
loop
hlt
mov
push
inc
dec
fildll
dec
repnz
sub
jp
notw
jno
sbb
andb
pop
mov
jns,pt
jl
push
inc
jl
fisttpl
push
add
clc
jb
pop
mov
push
lea
popf
adc
mov
xor
scas
lds
mov
test
mov
inc
adc
cmp
enter
int
rcr
sarb
shrd
jbe
mov
xchg
inc
jp
cmpsb
or
fstpt
in
or
push
xchg
stos
xor
and
jne
xchg
adc
movsl
shl
cmpsl
and
fnstenv
lret
sbb
cmp
rcrl
or
loopne
mov
pop
sbb
cmpsl
push
aaa
rorb
lahf
aaa
jb
fdivrl
pusha
adc
dec
xor
pop
fcmovnu
clc
mov
out
push
push
push
sar
mov
push
jne
push
fisttpll
or
inc
gs
push
and
mov
or
pop
popa
and
cmc
jbe
pand
sbb
dec
out
das
bound
push
xchg
mov
bound
dec
shrb
test
cmp
in
inc
mov
xchg
push
mov
sbb
cmp
stos
push
and
push
push
and
pop
sbb
lret
push
mov
inc
or
add
push
cwtl
mov
xor
sbb
or
dec
rcrb
femms
adc
arpl
aaa
loopne
popa
inc
inc
dec
into
push
das
cmp
inc
aaa
cld
enter
aam
nop
inc
cmc
repnz
xor
xchg
test
out
xchg
or
sbb
mov
fstl
das
add
ja
push
or
mov
mov
clc
js
mov
lods
pop
mov
pusha
mov
xor
leave
jae
into
fs
addl
stos
adc
cmc
or
inc
mul
jns
and
mov
sbb
cmpsb
ja
pop
jnp
jl
lea
je
sub
mov
loope
out
testb
pop
test
in
pusha
xor
xchg
adcb
and
dec
ljmp
test
or
jbe
pop
xor
and
lock
mov
insb
add
dec
out
jnp
and
fs
cmpsb
out
push
push
mov
shll
push
push
inc
sbb
or
mov
pop
or
fstps
negl
inc
out
jns
and
inc
push
les
in
shlb
test
mov
sahf
inc
fdivs
testl
leave
popa
aam
jbe
insb
popa
je
cmp
cmpsl
icebp
test
xchg
cmp
dec
cld
in
test
sbb
into
sub
xchg
ljmp
xorl
cmpsb
jbe
mov
cli
mov
add
dec
bound
cmp
es
clc
lea
out
mov
and
mov
sbb
sbb
adc
aaa
xor
arpl
bswap
stos
aad
sbb
movsb
gs
repz
push
outsb
mov
call
fistl
iret
xchg
addb
jno
inc
jb
pop
jmp
jne
cmpsb
out
mov
das
dec
in
xchg
ljmp
and
imul
lcall
loope
jno
stos
lods
add
mov
lds
push
mov
xchg
ret
repnz
inc
les
sbb
mov
js
push
mov
js
jae
xor
lret
xchg
rcrl
xor
mov
mov
push
shlb
and
push
lods
add
and
xchg
rorl
xchg
push
mov
cmp
jecxz
dec
nop
dec
mov
push
out
fisttpll
and
push
shll
lcall
adc
xchg
xchg
nop
and
int
mov
mov
jl
out
les
lret
test
cmp
mov
and
push
add
rolb
call
mov
xor
lock
sarb
and
adc
xchg
mov
mov
test
dec
fs
imul
pop
mov
fstps
add
ljmp
dec
arpl
push
push
rol
paddw
cli
or
and
jl
jno
iret
add
adc
or
out
xchg
adc
lds
into
rolb
push
jle
stos
cmp
icebp
xchg
sub
push
sbb
fwait
mov
push
and
cltd
ds
idivl
push
xchg
movsb
mov
test
shl
into
stos
cmp
mov
push
add
pop
outsb
arpl
shrl
mov
dec
neg
xchg
int3
jne
push
ficoms
fdivl
pop
pop
ret
push
xchg
fildll
pop
repnz
rclb
outsb
mov
out
int
sbbl
sbb
leave
insl
mov
orl
in
ret
add
adcl
pop
dec
dec
cltd
lcall
inc
cltd
shr
add
push
call
int3
dec
push
out
cmpsb
dec
cwtl
xor
xlat
or
pushf
pop
ja
lea
lcall
cmpsl
flds
add
clc
aas
hlt
test
jp
push
pop
push
out
rol
xchg
fcmovb
dec
and
cmp
xchg
ds
pop
mov
pop
or
cmp
mov
aad
adc
add
in
sbb
mov
inc
mov
test
iret
adc
icebp
push
arpl
loopne
xor
pop
jl
cli
cmp
push
add
jl
lods
push
sub
adc
je
scas
xchg
pop
xchg
scas
addr16
mov
dec
mov
adc
cmp
mov
sbb
idivl
loopne
cmpb
fcomps
pop
jno
jl
enter
adc
int
inc
sbb
ret
testl
in
jge
adc
xchg
fcmovnbe
xchg
scas
repnz
rolb
xor
lret
jae
push
or
jno
xchg
test
mov
ss
add
mov
incb
ds
pushf
sbb
jno
test
adc
pop
mov
test
add
pop
mov
rcll
or
mov
aam
out
in
push
mov
in
xlat
out
push
movsl
subl
nop
sbb
out
push
das
stos
xchg
stc
notl
jge
push
pop
jb
xchg
iret
pop
or
mov
bound
scas
rcll
xchg
pop
jecxz
mov
add
repz
pop
imul
test
dec
mov
cmp
out
sbb
movsb
inc
popf
pop
test
sub
mov
xchg
pop
or
fidivs
cwtl
mov
jne
hlt
inc
inc
data16
cltd
dec
stc
arpl
into
mov
popa
and
mov
sub
dec
mov
scas
adc
mov
stc
mov
xchg
mov
pop
cmp
mov
mov
dec
push
lds
cmp
scas
jbe
pop
imul
dec
cs
leave
dec
stc
adc
js
lcall
mov
sti
in
outsl
scas
xlat
xlat
lcall
adc
hlt
pusha
jecxz
xchg
xor
fstl
mov
jl
xchg
pushf
inc
cmp
bound
cmp
mov
add
pop
fistpl
xchg
sbb
outsb
paddsw
mov
iret
sub
sub
push
xor
cli
rorl
scas
sub
js
or
test
and
jo
clc
subl
insl
xchg
push
cli
out
loope
dec
scas
pop
test
gs
stos
add
sub
inc
in
leave
mov
xchg
pop
mov
jne
lret
ret
fidivl
fwait
jnp
mov
rcrb
ficompl
pop
repz
xor
movsl
cmp
adc
ja
ja
push
clc
cli
or
or
mov
sahf
daa
xor
pop
add
loope
dec
leave
loop
std
stc
enter
cmpsb
inc
pop
data16
pop
mov
sub
pop
testl
data16
mov
shrl
loop
sub
inc
jge
and
push
inc
addr16
pusha
inc
jns
cs
adc
xlat
pop
cmp
imul
mov
or
mov
jp
lds
in
dec
lock
mov
fbstp
lods
cmp
pusha
adc
outsb
sti
inc
pop
nop
js
das
or
xchg
in
and
repz
add
pop
rcl
cld
adc
push
sbb
ret
mov
xchg
test
inc
pop
iret
cld
and
push
jne
addr16
outsb
nop
fnsave
fwait
sub
loopne
fsubr
xchg
int
out
mov
in
cmc
inc
jg
inc
inc
xchg
mov
inc
mov
test
std
dec
rcrl
hlt
imul
aad
clc
fadd
sub
pop
sub
cmpsb
adc
movsl
or
mov
loop
adc
fs
les
sbb
in
mov
bound
jne
xor
test
sbb
aam
lcall
inc
cmp
pop
icebp
lods
add
and
sbb
jl
repz
push
jmp
jns
sti
or
xor
adc
data16
adc
stos
sbb
lret
fldt
or
orl
inc
rorl
jns
jp
push
fbstp
lret
in
xchg
add
push
loopne
inc
dec
xlat
mov
imull
and
dec
push
and
movsb
aam
xor
inc
jge
adcb
call
out
lock
es
or
insb
mov
into
mov
sbb
mov
nop
xchg
adc
xor
out
xchg
adc
dec
cmp
pop
hlt
pop
push
push
pop
loope
gs
in
gs
adc
out
xchg
stos
and
cld
loope
and
pop
stc
push
gs
push
scas
cmp
iret
imul
clc
add
inc
xchg
pop
lea
stos
sti
xor
add
loop
sub
mov
pop
or
mov
test
and
jne
xor
push
sbb
pop
add
bound
in
mov
xchg
or
ja
pop
sbb
ja
dec
mov
mov
adc
cmp
jns
jno
scas
sub
cmp
frstor
clc
sbb
jo
push
out
int
sti
lahf
ficoms
xchg
pop
aad
xchg
mov
popf
cld
mov
xchg
imul
mov
aad
push
dec
xchg
sti
inc
inc
jae
pop
mov
adc
sub
push
jne
loopne
stos
cmpsb
addr16
jno
mov
or
inc
pop
sbb
add
mov
adc
loopne
lds
test
cli
pop
xor
xchg
adc
test
scas
cmp
cmpsl
mov
pop
pop
adc
jecxz
test
stos
sub
andb
and
mov
sub
push
addb
cmpsb
jne
mov
mov
add
clc
sub
push
in
loop
add
sub
jp
sbb
sahf
gs
cmp
push
addr16
jge
mov
cmp
push
or
out
xor
cmp
imul
popf
cmp
xlat
movsl
mov
mov
cmpsb
inc
xchg
ret
or
ror
aaa
sbb
mov
sub
pusha
xor
unpckhps
mov
hlt
shll
fs
mov
mov
fsubp
mov
shrl
or
insb
xor
popf
add
mov
out
daa
cld
jl
and
xchg
ror
std
xchg
push
in
jnp
js
fistpl
jns
ret
inc
sbb
mov
mov
add
loop
push
test
aad
jnp
add
cmp
dec
movsb
cwtl
std
fldt
pop
mov
jmp
or
xchg
iret
jg
mov
leave
jbe
inc
ja
sub
jg
pop
mov
inc
or
jl
push
andl
push
rcr
and
jge
lahf
push
stos
fistps
inc
leave
shrl
ss
hlt
fisttps
add
mov
push
ror
out
adc
mov
mov
scas
test
jb
adc
and
cmpsl
sub
test
loop
jecxz
sarl
imulb
fisttpll
nop
xchg
cwtl
roll
movsl
sbb
push
lods
or
pushw
js
and
daa
ja
ja
fcomi
addr16
idivb
mov
sahf
mov
sub
sbb
in
sub
add
sbbb
push
sub
dec
mov
pushf
sub
xchg
movsl
movsl
xchg
cwtl
jmp
shrl
loop
ds
fincstp
adc
push
decl
pop
adc
mov
cmp
out
jmp
out
jp
call
and
cltd
xchg
test
xor
and
movsl
es
jnp
sub
mov
out
shlb
xor
out
pop
insb
testl
fstpt
nop
dec
cmpsb
test
add
mov
cmpsb
lods
and
cwtl
and
enter
mov
adc
std
and
imul
cmp
pop
test
fstl
mov
int3
adc
jbe
mov
mov
xor
xor
fldenv
gs
stc
sbb
cmp
push
xchg
shrl
push
fldlg2
add
es
xchg
and
push
icebp
lods
ret
xchg
fwait
mov
popf
aad
into
in
adc
inc
lret
in
mov
lret
div
arpl
stc
push
cmp
ss
push
data16
pop
or
cmp
pusha
lea
stos
fadds
dec
hlt
fdiv
fbld
mov
mov
imul
fbld
leave
add
dec
or
lret
insb
sub
add
sbb
add
push
pop
ret
repz
andb
sbb
dec
stos
jo
jne
and
mov
das
cmpb
and
add
xchg
add
and
mov
shrl
pop
push
sbb
xchg
icebp
xor
sub
push
cmpsl
ss
lods
call
mov
xchg
cwtl
mov
lea
lea
xchg
hlt
aad
and
inc
pop
loope
insl
aam
mov
inc
int
mull
ljmp
lret
orb
scas
lahf
loope
pop
popf
add
jb
int3
arpl
decb
loopne
mov
sub
js
push
mov
pop
movntq
xchg
sbbb
es
sahf
xchg
fprem
jo
fisubrs
rcrb
mov
adc
enter
sub
mov
fxch
in
in
aam
in
mov
mov
adc
cmc
enter
into
adc
push
pop
xchg
dec
jae
dec
fcoms
and
jb
pop
sub
sub
imul
dec
subb
repz
mov
xchg
xor
xchg
and
fidivl
mov
addr16
cmp
fstpl
mov
das
mov
cmp
popf
mov
sub
jo
mov
jb
fstl
inc
sti
arpl
pop
adc
or
inc
mov
enter
mov
dec
rorb
inc
lret
jg
jns
mov
mov
in
add
ja
ss
dec
es
cmp
frstor
std
sbb
fs
jne
inc
hlt
insl
push
imul
sbb
cmp
pusha
cli
sbb
xor
ljmp
adc
pop
je
popa
icebp
inc
add
or
mov
and
push
cmc
scas
push
sti
out
push
gs
call
cmpsb
xchg
inc
pop
scas
cmp
loopne
es
in
fidivs
sar
xchg
xchg
bound
jbe
pop
inc
movsb
lret
sbb
pop
jle
mov
loopne
in
ds
bound
push
mov
cli
lock
addr16
xor
fsubrs
mov
and
je
pop
adc
ret
lahf
xorl
cmpsl
pushf
outsb
les
clc
sub
jge
shrl
lcall
bound
aaa
mov
jnp
xchg
jb
fstps
or
xchg
test
push
mov
fxch
mov
sub
sub
sti
xchg
inc
xor
sbbb
xchg
mov
aaa
negb
cltd
hlt
mov
test
in
pop
and
mov
lahf
mov
pop
imul
andb
dec
in
dec
out
inc
imul
or
cltd
pusha
not
cwtl
cmp
pop
jp
jae
xchg
mov
mov
or
xchg
cmpsl
loopne
fdivrl
clc
sub
sub
adc
dec
cmp
nop
nop
jecxz
push
push
lahf
int3
sbb
xor
ret
sbb
cmp
dec
pop
lahf
pop
xchg
std
sbb
insb
mov
aad
sbb
inc
icebp
jl
shl
insb
mov
push
pop
cwtl
and
xor
int
sub
xor
jno
stos
mov
mov
mov
adc
jmp
sarb
paddsb
imull
pop
xchg
stc
dec
fldcw
fidivrs
jnp
pop
insl
add
mov
or
aad
std
sbb
lods
repz
mov
dec
jl
xchg
xor
inc
adc
mov
push
inc
hlt
jge
stos
xchg
adc
xchg
scas
mov
jnp
lea
cs
test
mov
mov
push
push
scas
jo
push
lcall
dec
fcmovnu
pop
fstps
mov
mov
lods
pop
mov
adc
xchg
int
jns
outsl
push
mov
mov
dec
stc
mov
es
fldenv
inc
push
jnp
stc
adc
mov
mov
lret
rclb
inc
cmp
and
fs
je
andl
jnp
arpl
cmp
cmp
push
daa
std
cmp
push
pop
scas
and
cmp
repnz
das
pop
adc
test
aad
pop
jne
fistpll
out
mov
cmp
int
dec
mov
lret
popa
inc
mov
mov
push
xor
xchg
pop
inc
pop
mov
pop
lock
jmp
add
imul
sbb
test
adc
push
pop
fisubl
imul
cmp
mov
ja
out
adc
cltd
ret
fadd
bswap
in
jg
xchg
lods
sbb
push
fdivrl
mov
mov
jb
mov
fwait
lock
or
fs
sub
cmp
frstor
jbe
in
les
dec
ret
cli
loopne
cmp
adc
lahf
sbb
mov
mov
xor
inc
cmp
pop
aaa
out
jb
jno
lock
xchg
mov
ja
cmp
inc
incl
in
dec
shlb
pushf
mov
inc
sub
test
clc
push
and
mov
push
mov
mov
add
outsb
imul
push
into
lcall
mov
cmpsl
ja
and
addr16
xor
outsb
pop
sti
or
push
sub
nop
in
nop
testl
mov
mov
cmc
dec
stc
jne
rcrl
in
es
je
inc
mov
mov
adc
aas
je
lds
dec
sbb
sub
aas
jmp
loope
fcompl
cmp
cmp
loop
popf
xorb
mov
add
jmp
cltd
push
mov
jp
hlt
sub
push
xchg
imul
sarl
fimull
mov
pop
mov
lahf
push
xor
mov
int3
jp
and
pushf
sbb
mov
push
inc
xchg
dec
add
int
xchg
fs
mov
shll
jl
into
sahf
sbb
test
inc
mov
icebp
jae
lahf
xchg
pop
cmp
push
sbb
mov
cmp
mov
in
cld
sbb
scas
in
or
shll
aam
ror
js
xor
enter
push
in
daa
pop
movsb
imulb
ja
mov
and
jle
into
je
inc
fdiv
stc
aam
cs
sbb
les
arpl
sub
std
sub
sub
je
ret
test
loope
or
fs
orl
stc
inc
ljmp
adc
inc
push
loop
filds
loop
movb
aad
scas
pop
shll
pop
rorb
fidivrl
mov
lea
addl
imul
xor
mov
jno
pop
fs
and
mov
inc
sbb
ja
push
mov
mov
loop
mov
int
stos
bt
jp
adc
xchg
and
push
icebp
push
fs
xor
push
fisttpl
or
mov
fstps
ficompl
mov
cmpsb
idivb
mov
cmp
bound
xchg
and
add
pushf
jp
sub
mov
xchg
test
adc
pop
outsl
pusha
or
lock
cmp
fsub
test
sbb
lea
jg
decb
jo
mov
xchg
mov
sub
fdiv
sbb
jmp
jae
push
mov
ds
push
lea
push
cmp
insb
idivl
adcl
jae
inc
cwtl
dec
adc
adc
enter
cli
mov
hlt
sub
jecxz
jo
lods
cld
sarb
lods
and
dec
dec
imul
jle
cmpsl
or
shlb
mov
outsl
enter
test
xor
xor
add
lods
push
xlat
push
mov
stc
dec
and
sub
or
out
mov
or
push
mov
cltd
adc
jae
push
daa
or
test
pop
and
pop
cmpsl
adc
loopne
test
repz
mov
call
bound
xchg
sar
dec
insl
add
lods
imul
xchg
mov
and
pop
in
inc
mov
test
dec
ljmp
inc
dec
jnp
jg
xchg
jb
lea
ds
jne
xchg
and
push
imul
add
arpl
out
mov
mov
stos
daa
mov
imul
movsl
movsb
leave
mov
nop
jo
xchg
jecxz
ss
js
in
sbb
sbb
jl
fs
pop
jle
mov
mov
add
fs
push
jmp
push
shrb
bnd
inc
stos
cli
rcll
cmp
jmp
cli
jo
inc
adc
std
in
mul
jo
jbe
mov
out
mov
jbe
or
or
ljmp
leave
mov
pop
rcrb
xor
daa
xchg
mov
or
jne
cmpsl
mov
in
add
daa
cmp
xchg
mov
push
push
push
jge
in
addr16
jge
mov
pop
pop
push
in
mov
adc
repz
in
and
std
mov
mov
or
inc
in
or
ret
cmc
test
repnz
mulb
dec
cs
icebp
jbe
repnz
aas
xor
daa
jmp
out
ja
jp
mov
lock
sti
push
or
pop
mov
or
mov
jns
and
cmpsb
ret
mov
mov
mov
jb
mov
jl
popl
and
push
arpl
add
sub
into
xor
xchg
mov
ret
gs
ficompl
gs
mov
sbb
sub
inc
ficoms
mov
outsb
jo
mov
push
jno
ficoms
jns
outsl
cmp
push
lods
cmp
call
mov
sbb
bound
fistl
hlt
adc
jbe
das
pop
add
stos
repz
cmpsl
xchg
adc
mov
pusha
movsb
setne
in
shl
arpl
aas
cmp
je
and
out
stos
ror
out
fdivrs
sti
jno
loop
lret
mov
std
clc
cmp
and
mov
adc
cmp
adc
xor
push
lea
dec
les
mov
pop
leave
testb
fnstsw
jg
lods
enter
mov
xchg
int
scas
pusha
gs
lock
mov
into
mov
shrl
sub
dec
push
mov
mov
or
and
stc
or
jno
fldcw
push
rorl
flds
mov
cmp
repz
jb
out
xchg
mov
push
cmpsb
adc
mov
or
add
pop
jge
add
mov
cwtl
sub
xchg
xchg
sarl
cmc
push
bound
inc
fwait
imul
push
dec
cmp
scas
mov
and
shrb
push
and
mov
outsl
and
out
xlat
aam
dec
mov
lods
mov
dec
lahf
lods
cmp
fadd
rorl
mov
in
sbb
dec
lret
or
pop
pusha
arpl
arpl
inc
test
cmpsb
xorl
jne
adc
cmp
xchg
mov
jae
fwait
cmp
inc
dec
xor
inc
inc
cmp
clc
sarl
outsb
xor
ss
jne
dec
cmp
cmpsb
dec
push
movsl
mov
push
mov
fldt
ds
sub
and
lahf
fistps
dec
in
jno
jmp
imul
inc
je
sbb
cmp
add
arpl
pop
mov
xor
mov
adc
test
mov
movsb
mov
jecxz
and
adc
lret
adc
repz
cmp
cmp
sbb
and
stc
inc
cs
inc
out
sub
mov
insb
adc
test
es
into
stos
fsubr
cld
insl
adc
xor
xchg
lds
pop
push
inc
orl
in
cmp
pop
pop
and
adc
xchg
sbb
xor
gs
cmpsb
xor
jle
pop
jmp
data16
cmpsl
sub
out
inc
cmpsl
popf
int
sahf
in
jnp
nop
sti
imul
inc
jo
negl
stos
xor
cwtl
mov
push
sarb
mov
pop
sti
cmpsb
inc
cmp
mov
cld
dec
xor
mov
imul
scas
adc
jno
adc
js
jo
fisubl
enter
xchg
push
in
adc
fldcw
test
mov
out
addr16
test
lods
rcll
pop
out
inc
xor
push
fldt
test
sbb
ds
js
in
addl
sub
xchg
sbb
inc
sub
mov
push
iret
xchg
cmp
fnstenv
sub
daa
mov
repnz
stc
loop
insb
out
jns
pop
loopne
leave
dec
jecxz
test
fwait
in
push
mov
stos
adc
lods
push
xchg
ss
ds
push
sbb
or
div
in
mov
in
pop
movsb
je,pt
mov
cmp
push
pop
jecxz
sub
xchg
mov
jbe
pusha
pop
mov
data16
jb
movsb
test
test
int
outsl
repnz
mov
push
in
sbb
inc
cltd
pop
mov
icebp
invd
insl
and
jle
mov
jecxz
mov
cmpsb
push
xor
inc
mov
stos
inc
sbb
sub
or
hlt
dec
loopne
in
sbb
or
pop
lea
inc
mov
mov
xlat
out
push
sub
fidivl
daa
pop
sub
or
mov
sub
mov
sub
out
add
push
in
mov
call
pop
mov
lret
mov
push
mov
mov
push
mov
inc
das
in
in
add
pop
dec
jp
pushf
mov
mov
cltd
ja
in
or
sahf
dec
negl
xor
jmp
pushf
mov
out
push
fwait
subl
mov
and
mov
pop
push
xlat
test
or
aaa
adc
add
arpl
sub
inc
sbb
sub
aam
dec
add
int3
insb
lock
mov
mov
cmc
sub
repz
andl
stos
dec
mov
jle
adc
push
fldl
cld
push
cmp
pop
lret
jg
add
inc
repnz
pusha
pop
jnp
sbb
repz
xor
pop
repnz
rclb
rcll
test
mov
adc
neg
sbb
mov
xchg
adc
ja
push
mov
xchg
adc
stc
shll
das
insl
int
fimuls
outsl
mov
xor
sti
outsb
pop
push
mov
cmp
jmp
jp
xchg
dec
pop
pop
dec
mov
inc
xchg
aam
shlb
xchg
cmpsl
repnz
mov
push
push
je
fsubs
popf
rol
mov
cmp
add
daa
and
push
add
sbb
jne
pop
xchg
fldcw
out
dec
fists
gs
sti
dec
sti
shlb
out
push
xchg
xchg
xor
pop
pop
movsl
cmpsb
jle
out
and
xor
sub
sbb
sub
lock
xchg
clc
inc
out
enter
mov
mov
mov
rcr
and
icebp
adc
repz
cmp
push
bound
ja
push
or
sub
pop
sbb
sbb
adc
jne
mov
sbb
int3
inc
test
je
add
mov
subb
sbb
push
inc
jo
and
and
push
jnp
out
adc
or
mov
lret
hlt
fmuls
xor
aad
pop
mov
push
or
ja
nop
xlat
cmp
fsub
xchg
sahf
cmc
sbb
add
push
out
push
mov
sbb
pusha
in
loop
inc
rcll
mov
test
jp
jmp
ja
daa
insb
out
enter
test
jbe
mov
xor
mov
and
lock
dec
pusha
cmp
jnp
xor
scas
hlt
test
cmp
outsl
in
decl
in
nop
jecxz
lea
cld
cmpsb
jl
push
dec
xchg
or
xchg
cmc
cwtl
cltd
and
aaa
push
int
aam
cmpl
cmp
and
push
out
loope
lret
ret
imul
mov
mov
cmp
idiv
mov
jge
ror
cmpsl
dec
and
add
pop
push
std
sahf
lea
mov
xor
sub
das
fldz
mov
xlat
dec
cmpsb
jo
jecxz
inc
imul
mov
mov
rorb
lret
mov
xchg
enter
ret
cmc
xor
adc
cmp
jns
sub
ss
pop
ret
jmp
lods
mov
add
and
mov
js
xor
push
or
push
inc
sarl
stos
icebp
fisttps
testl
shll
insb
and
or
jmp
inc
mov
push
dec
jp
xchg
sub
and
fimuls
imul
cmp
xchg
adc
es
add
mov
add
orb
pop
loopne
cmp
lds
movsl
jbe
jne
xchg
test
or
add
mov
jge
pop
xlat
and
xchg
lds
xor
jne
lock
ljmp
jmp
outsb
iret
xchg
xchg
xchg
dec
push
inc
lahf
das
fwait
adc
push
lret
es
movsb
mov
or
dec
xchg
aad
inc
cmpsl
and
repnz
imulb
lock
decb
jns
fstl
dec
insl
out
inc
push
and
test
mov
fs
xor
cmp
nop
repnz
adc
bound
popa
push
mov
int
or
xor
arpl
pop
leave
add
inc
jl
scas
jl
add
sbb
gs
dec
adc
cmp
pop
jns
ret
adc
arpl
sbb
jo
xor
xchg
mov
dec
and
stos
sbb
imul
cmp
xchg
lods
lea
jl
sbb
out
and
or
and
roll
aaa
filds
cwtl
add
sbb
pop
jnp
cmc
adc
inc
loopne
mov
xor
add
pop
pusha
mov
inc
pop
adc
mov
mov
loope,pn
test
inc
fs
scas
add
add
or
cmpsb
pop
cld
push
ret
pushf
fs
jl
fsubr
in
lock
jnp
ds
dec
push
or
dec
mov
sbb
cmpsl
xchg
std
in
imul
push
test
lds
ljmp
inc
jge
push
xchg
dec
in
cmp
adc
mov
mov
or
aad
and
fwait
out
aad
fildll
test
pop
cmp
or
negl
shrb
sbb
leave
insl
pop
shl
cs
das
jle
and
mov
rorb
add
dec
int
dec
dec
mov
sub
shrl
das
xor
sub
pop
pop
add
nop
xchg
cwtl
jns
shrb
into
mov
push
repz
jg
fst
inc
movsb
jbe
andb
mov
cwtl
rcr
inc
mov
push
pop
inc
inc
sub
mov
int3
mov
mov
inc
xchg
inc
loop
in
sbb
mov
sub
das
push
in
cmp
daa
aas
dec
mov
aam
sub
jge,pt
lea
mov
fimuls
push
out
add
in
push
je
mov
scas
outsl
scas
jo
fimuls
xor
imul
ss
and
pop
lea
flds
sub
movsb
push
and
mov
mov
stos
dec
xor
fstl
scas
rorb
lods
arpl
cmc
pop
out
pop
cmp
jg
sub
sbb
call
mov
aad
sti
out
jbe
dec
insl
xor
and
cld
mov
xor
shrl
scas
in
sti
bound
sbb
push
pop
adc
add
dec
sahf
test
jns
jo
aaa
fidivs
sub
es
mov
or
rcr
insl
std
imul
lcall
inc
leave
push
subl
push
and
xchg
lds
lea
inc
sub
mov
aam
dec
push
pushf
stos
xor
fdivrp
cmp
sar
bound
jns
arpl
ret
add
mov
dec
xor
ljmp
xor
cs
fxam
mov
mov
jle
pop
xchg
orb
fistpl
mov
push
call
xchg
call
sbb
shll
xchg
mov
push
inc
andl
lock
loopne
sbb
rclb
fidivs
pop
xor
sub
cmpsl
mov
mov
inc
push
sbb
loop
cmp
mov
push
mov
fidivrl
or
adc
pop
std
cmp
aaa
jns
mov
push
dec
data16
sbb
loopne
jno
popa
repz
xchg
movsl
sbb
aaa
and
adc
adc
add
xor
mov
aas
inc
out
aad
cli
popf
mov
fcomip
mov
js
jmp
pop
es
push
lods
cltd
inc
mov
test
jle
jae
dec
push
cmp
sub
ss
in
leave
jno
mov
sahf
xor
xchg
out
inc
xor
es
mov
cmp
outsb
xor
sbb
testb
inc
jp
push
les
cmp
cmpsb
cmp
aad
pop
pop
dec
mov
cmpsl
cltd
mov
clc
dec
jecxz
sub
orl
fs
mov
pop
out
sub
xor
inc
inc
fwait
jae
jg
scas
cmpsb
addr16
push
ret
into
adc
and
sbb
add
movsl
outsl
rolb
out
in
pushf
cld
pop
jbe
les
add
add
jg
arpl
mov
mov
mov
ret
and
pop
dec
je
sub
add
cmpsl
pop
mov
mov
stos
call
sub
pop
shll
cmp
sub
int
fiadds
mov
and
push
in
or
xchg
xchg
in
mov
inc
lods
movsl
movsl
inc
mov
pop
fwait
or
xchg
push
mov
scas
adc
jns
fsubl
xor
scas
ret
repz
dec
jp
add
leave
sbb
loope
inc
jno
adc
jne
ret
test
cmpsl
xor
cli
push
outsb
and
mov
jl
xchg
js
mov
cwtl
aas
sbbl
mov
repz
adc
es
andl
pop
xchg
pop
lds
jae
dec
cltd
ds
mov
test
dec
mov
or
insl
test
cwtl
subb
or
mov
or
add
dec
dec
ds
call
adcl
cli
rolb
adc
lgs
adc
dec
sub
mov
sbb
pop
inc
or
xor
ficoml
jne
clc
xchg
adc
inc
fst
cmpsl
push
aas
sbb
push
xchg
jmp
pop
xchg
outsl
jb
dec
add
jb
pop
inc
add
jp
fs
dec
xor
cmc
cwtl
inc
pusha
push
push
push
xor
scas
push
cwtl
cli
pop
into
jne
sbbb
mov
fwait
aad
mov
call
mov
out
pop
mov
or
jecxz
xchg
outsl
jns
or
sahf
jb
mov
push
push
and
mov
cmpsb
adc
sub
in
outsb
sahf
adc
or
rcll
lods
and
popf
popf
jno
sub
rorb
dec
or
pop
xchg
xchg
dec
mov
mov
mov
xchg
notb
test
lds
xchg
push
push
pop
icebp
inc
and
push
cmp
test
test
sti
test
int3
xchg
cli
xchg
out
push
ret
or
mov
sbb
aas
mov
pop
mov
mov
push
pop
adc
jmp
test
mov
out
scas
sbb
mov
pop
cs
scas
pop
pusha
xchg
outsb
shr
cmc
les
icebp
rol
leave
neg
adc
and
push
cld
xchg
sbb
cmp
sub
orl
mov
add
and
sub
lcall
jl
add
pop
mov
stos
cmp
out
sbb
add
jp
daa
dec
sub
push
add
dec
jae
cmc
fsubp
mov
pop
or
mov
jns
dec
pop
xchg
clc
addb
les
adc
mov
adcl
sub
push
push
jecxz
loope
xchg
int
sbb
in
jb
xchg
jno
mov
loope
sub
ss
ds
push
xor
orb
popa
lock
popf
add
adc
inc
movsl
add
dec
sbb
scas
pop
xorl
cmc
insb
fmull
subb
dec
dec
cli
iret
pop
dec
ret
adc
fdivrs
dec
xchg
fwait
outsb
clc
mov
shll
and
xchg
adc
rcrb
or
outsb
push
mov
scas
jo
sub
cmpsb
jg
lock
and
test
inc
rolb
in
jno
xor
je
mov
sub
les
fisttpll
rorb
adc
and
jmp
pushf
sub
enter
mov
bound
sar
jmp
stc
mov
xor
add
test
int
mov
push
adc
dec
clc
ljmp
les
lock
in
cmc
adc
xor
stos
cmp
add
cmpsl
jns
sbb
jne
mov
loopne
insb
push
mov
mov
xchg
inc
fisubrs
inc
imul
loope
fdivr
pop
push
fistl
das
into
xchg
sahf
stc
imull
sub
pop
mov
fadds
jge
mov
push
ss
push
or
jae
xchg
jnp
sbb
push
xor
adc
mulb
shr
cmp
mov
sbb
js
cmpsl
mov
jae
faddl
mov
shll
lods
out
dec
insb
sub
xchg
and
add
jno
je
movsl
scas
add
mov
daa
lahf
pop
out
mov
adc
adc
rorb
xorl
and
xchg
lcall
add
push
mov
daa
cld
jl
push
mov
hlt
and
pop
icebp
pop
outsl
inc
cmp
les
pop
sub
ret
idivl
mov
mov
fsubl
fs
cli
cmp
lahf
int3
adc
pushf
addr16
sbb
pop
and
add
aam
outsb
mov
and
mov
lods
hlt
cmc
mov
test
mov
inc
sub
mov
mov
mov
dec
pop
mov
jg
xor
mov
push
and
mov
xchg
jle
cwtl
pop
pop
negb
movsb
add
pop
std
dec
cwtl
les
subb
test
gs
push
inc
das
adc
inc
movsl
inc
js
les
jno
adc
jnp
xchg
mov
xor
and
inc
dec
call
call
leave
jns
mov
dec
push
push
sbb
sbb
mov
lret
movsl
or
aas
mov
movsb
fisubl
adc
outsb
shlb
or
gs
cmpsb
in
jnp
in
lods
xchg
pusha
jnp
lock
lret
pop
mov
loopne
pop
mov
jp,pt
mov
mov
mov
mov
test
or
jo
dec
outsb
sub
push
xor
stos
fistpll
cli
out
ret
jl
dec
shl
mov
insb
adc
jmp
sub
sbb
shlb
sub
xor
iret
loop
sbb
gs
test
mov
imul
stos
or
xor
nop
stos
mov
jo
cli
dec
stos
lods
ljmp
sbb
mov
push
stos
jg
lock
jb
jp
push
repz
pop
orb
enter
es
push
and
add
inc
push
rorl
push
jae
inc
dec
inc
xchg
in
cmp
icebp
sbb
or
lret
dec
push
subb
std
or
jbe
dec
inc
in
outsl
aaa
cmpsb
sbb
push
sub
notl
scas
ja
out
popf
aas
into
movsb
and
xor
push
ret
js
aad
and
rcrl
xchg
push
pusha
jl
lcall
adc
inc
dec
in
movsb
cmpsl
push
add
enter
fwait
and
fstpl
std
sbb
fwait
lcall
and
daa
fisttps
clc
adc
adc
std
stos
shl
pop
into
xlat
in
jecxz
dec
hlt
and
fxch
push
mov
pop
addr16
pop
mov
and
xchg
enter
dec
or
mov
jo
adc
add
sbb
enter
dec
loope
imul
or
xor
fistpll
xor
sub
and
insb
nop
loop
das
sbbl
inc
lret
fadds
inc
xchg
xlat
add
shrl
and
mov
mov
mov
loop
hlt
sub
cmp
mov
pop
cmp
cmp
inc
ret
pmuludq
int
dec
ljmp
or
xlat
xor
and
imul
push
adc
repnz
into
lcall
mov
cmp
mov
bound
or
aam
adc
call
or
and
or
movsl
pop
sub
cmp
and
cmpsb
jl
out
in
jg
and
dec
pop
jecxz
mov
cmp
fdiv
cmpsl
or
pop
add
mov
out
gs
or
cld
adc
dec
dec
shrl
stos
mov
dec
adc
lretw
in
adc
mov
or
xor
jo
cmp
pop
imul
sbb
fsubl
inc
clc
loope
xchg
sub
or
test
pop
inc
cmpsb
mov
outsl
mov
or
outsb
cmc
test
add
pushf
sub
mov
sbb
xor
pop
repnz
sub
enter
push
dec
fstpt
inc
mov
xchg
outsb
xor
jbe
es
scas
cmp
out
inc
in
xchg
loope
or
gs
mov
lahf
push
cmpsl
sahf
cmpsl
out
jle
les
sub
sub
adc
push
pop
bnd
xchg
fisubl
ficoml
pop
mov
lock
dec
mov
fistpll
lods
cmp
mov
push
leave
clc
inc
insl
divl
xchg
pushf
repnz
mov
inc
jecxz
scas
cwtl
cmp
mov
jnp
lret
xchg
fldenv
cmc
fadds
aaa
add
adc
sti
lret
mov
cmp
vpsubw
popf
dec
jbe
mov
sub
mov
sbb
xchg
repnz
xorb
mov
sbb
or
push
insl
lock
xor
cltd
gs
nop
icebp
xor
xchg
imul
inc
pop
enter
out
lcall
les
adc
adc
cmp
inc
movsl
mov
and
outsl
add
cmp
lahf
dec
mov
pop
out
pop
push
mov
push
mov
mov
mov
mov
lods
imul
dec
test
lahf
repnz
inc
or
mov
push
pop
pop
adc
or
sub
inc
mov
mov
repnz
mov
fisttps
and
xchg
sub
pop
mov
mov
adc
push
dec
aad
lahf
aaa
mov
push
mov
sub
fsub
jecxz
outsl
adc
jge
psllw
jg
push
clc
aam
call
cld
xchg
mov
inc
aaa
xor
or
ret
add
lea
mov
push
mov
or
scas
cmp
loopne
cwtl
ret
fsubrl
mov
lret
ljmp
mov
daa
nop
insb
xchg
jp
jbe
mov
ja
and
jge
cltd
inc
mov
cmp
cld
push
xchg
lret
das
add
ds
imul
test
cli
and
leave
fidivs
int3
sbb
xchg
xlat
iret
data16
jae
mov
test
std
adc
js
jbe
nop
xchg
dec
xor
push
pop
mov
outsl
pop
xor
mov
insl
pop
outsl
addb
pop
inc
jne
enter
cli
ret
xchg
scas
pushf
loopne
insb
jae
orb
inc
jne
jnp
push
out
inc
mov
filds
shlb
out
xor
ret
push
repz
fwait
popf
push
shl
add
jb
jmp
je
cli
xchg
out
push
cmp
and
fldt
jmp
andl
test
filds
andl
rorb
jecxz
xor
mov
mov
add
arpl
xor
addl
or
repnz
divb
rol
pop
sarb
pop
notb
jno
hlt
cmp
add
or
push
add
jmp
xchg
inc
push
jmp
movsl
ss
pop
xlat
pop
adc
push
adc
jns
imul
ss
mov
and
cmp
fidivs
cmc
mov
pushf
jbe
lcall
xchg
and
ds
mov
pop
push
mov
je
call
je
dec
jle
dec
push
jecxz
in
dec
push
icebp
ret
jnp
leave
jbe
xchg
cltd
cwtl
imul
xchg
inc
inc
out
into
jecxz
clc
xchg
adc
or
cmp
cltd
push
xchg
ss
jge
call
pop
or
cs
dec
mov
cmp
mov
and
inc
adc
and
mov
adc
adc
ret
int
scas
mov
movsb
sub
jb
pop
sbb
push
mov
lods
push
adc
ds
pushf
adc
add
sub
shrl
mov
cld
pop
adc
jns
pop
push
xchg
in
fsubrs
gs
cmp
xor
pop
jmp
subb
outsl
sarb
out
push
stos
in
fisttps
nop
rcr
loopne
or
sahf
in
adc
and
jge
pop
pop
add
xor
mov
jbe
jnp
pop
rep
movsb
loop
sbb
lret
ret
mov
push
lods
mov
push
dec
negb
pop
shll
xchg
int
add
mov
ljmp
cmp
scas
cs
add
mov
add
dec
sahf
sub
imul
call
sub
sub
jb
dec
push
into
adc
xor
push
adc
mov
fildll
inc
push
enter
int3
shrb
cmp
bound
shlb
std
cltd
sbb
push
jae
mov
sar
mov
add
lods
pop
subl
dec
ficoml
in
scas
mov
push
jmp
aas
ss
push
xchg
dec
pop
cli
xor
pop
push
jp
scas
es
pop
dec
xlat
into
xchg
orl
in
test
hlt
pop
pop
mov
and
pop
rorb
sbb
xor
sub
lahf
jae
mov
inc
push
pop
pop
xchg
arpl
int3
outsb
push
pop
mov
cmpsb
stos
sbb
add
jg
lock
inc
shlb
add
pop
imull
and
mov
sbb
sub
rcll
pushf
int
jmp
push
fistpll
int
mov
les
lahf
pop
and
jb
or
xchg
ljmp
sub
lds
mov
adc
loope
inc
outsb
aad
scas
pushf
push
aaa
mov
mov
int
int3
in
push
outsb
shrl
cld
cmp
mov
das
push
loope
cli
lahf
fstps
lods
xchg
jbe
sbb
adc
jl
add
mov
in
mov
jne
adc
addr16
mov
lock
cmp
push
mov
jns
and
dec
lea
inc
rcrl
or
xchg
lea
mov
arpl
pushf
in
gs
xchg
cli
dec
adcb
insl
mov
incb
pop
fwait
in
push
out
push
mov
push
inc
mov
icebp
add
ud1
sbb
cltd
mov
sub
sarb
test
inc
mov
mov
in
jg
pop
adc
pop
lret
jmp
cli
scas
call
or
mov
push
push
push
mov
stos
inc
enter
dec
int3
sub
jb
mov
fstp
daa
mov
xorb
pusha
jbe
inc
adc
dec
push
push
scas
ret
dec
xchg
mov
or
xchg
fwait
aas
cmp
mov
mov
and
fldenv
inc
add
mov
nop
mov
popf
cli
push
outsb
mov
jg
ljmp
xchg
leave
ljmp
jecxz
sbb
or
push
imul
inc
jg
push
pop
pusha
cmc
mov
xor
push
push
cld
cmp
and
loope
jmp
dec
push
cli
inc
mov
or
out
repnz
push
hlt
inc
dec
mov
mov
fiaddl
ds
push
sbb
psrad
cmp
int
movsb
std
in
rcr
aam
mov
sar
jge
mov
mov
xor
out
ficoms
insl
or
jle
in
inc
aad
hlt
jnp
cld
iret
xchg
push
ss
cmpsl
add
xor
dec
or
jl
rcrb
les
in
clc
dec
push
adc
push
mov
jge
inc
movsb
lret
push
push
aad
cmp
mov
pop
push
movsl
adc
mov
jbe
sub
xlat
adc
popf
dec
jae
sbb
lock
xor
and
cmp
xchg
ficoms
addr16
and
jmp
push
add
mov
fld
sti
das
lock
cmc
cmpsb
mov
mov
mov
mov
insl
repz
test
jne
mov
pop
insl
inc
xor
fwait
cli
dec
jle
imul
fimull
orb
pop
in
dec
add
mov
imul
mov
int3
mov
std
dec
push
movsb
sbb
es
lret
sub
mov
sub
mov
mov
js
scas
lock
outsl
cmp
iret
mov
data16
cmpsb
mov
cwtl
pop
stc
call
xorl
xorl
call
movsl
xchg
cmp
dec
xlat
fmulp
imul
mov
sti
loop
add
dec
shrl
addl
inc
adc
pusha
stos
add
cmp
mov
fucomi
mov
dec
les
into
add
lods
cmp
neg
jp
sbb
mov
jge
mov
and
push
fnstsw
jo
data16
inc
push
adc
cmp
lods
in
sbb
fcomps
cmp
add
push
cmpsl
ja
bound
xor
fdivrl
pop
leave
ljmp
xchg
dec
test
push
sub
sbb
int
cmc
loop
aas
int
imul
jns
stos
mov
in
jne
and
add
das
stc
in
xchg
sub
sub
push
pop
dec
pop
or
icebp
xchg
cmpsb
cli
das
pop
arpl
lods
nop
inc
fldenv
fisttps
cli
adc
jp
sbb
lea
daa
out
and
or
adc
les
inc
cwtl
inc
pop
push
mov
cmp
aam
mov
add
ljmp
push
push
jge
add
sarb
push
sub
push
insl
fimull
inc
xor
call
popa
pop
xchg
fwait
pusha
cmp
lret
inc
jmp
fildl
lods
es
xchg
add
out
std
xor
sbb
cltd
mov
xor
lcall
test
jo
add
xchg
jge
call
rolb
jmp
ffreep
xlat
fistpll
mov
sbb
sub
mov
enter
push
jp
test
sti
or
xor
and
aaa
xchg
aas
inc
sub
push
xchg
mov
pusha
popa
push
sbb
in
xor
repnz
inc
push
cld
push
push
ret
fisubrs
and
add
lds
mov
lahf
xor
pusha
xchg
inc
mov
mov
xchg
or
cmp
jae
xchg
xor
inc
out
inc
add
add
jnp
fistpll
mul
js
enter
xor
lahf
imul
not
cmp
les
divl
test
sbb
cmp
inc
js
jmp
push
addr16
mov
aas
jb
sbb
pop
push
adc
push
mov
inc
test
mov
sub
out
xor
insl
movsb
push
mov
sbb
out
push
and
js
mov
dec
dec
fildll
add
push
mov
lret
push
xorb
movsb
sub
ret
push
xchg
lock
push
pop
pop
push
xchg
movsb
mov
inc
sub
cmp
mov
jns
push
ficompl
aas
inc
mov
loopne
and
cmp
adc
cmpsb
pop
or
fnstenv
pushf
inc
add
enter
int3
jb
repnz
pusha
xchg
sbb
pushf
mov
or
xchg
addr16
jne
inc
movsb
cmpsb
lret
icebp
shll
sbb
shrb
inc
adc
test
mov
push
rolb
inc
hlt
in
mov
add
mov
add
mov
xchg
cmp
inc
pop
inc
bswap
cmpb
and
add
int
and
or
sub
mov
div
cld
or
in
inc
lret
rorl
cmc
add
ja
push
sub
repz
xchg
push
add
sub
push
mov
push
add
xorl
bound
mov
jecxz
push
dec
sbb
push
sbb
jp
jno
es
std
mov
divb
cmpl
dec
je
cmp
push
xchg
inc
dec
out
test
adc
into
mov
jg
cmpsl
test
or
add
leave
mov
fnstsw
and
mov
lods
pop
jae
addr16
movd
mov
pop
jne
mov
pop
and
mov
add
mov
call
loopne
and
in
cmp
push
packsswb
arpl
jmp
divb
mov
adc
or
sbb
xchg
and
test
jb
jg
mov
lods
loope
ss
outsb
test
mov
mov
cmp
repnz
in
or
or
pop
push
push
mulb
inc
xchg
ss
mov
xchg
sahf
out
lods
out
inc
clc
sub
or
mov
scas
pop
mov
ss
ds
iret
xchg
out
iret
shll
cs
mov
icebp
fcmovu
dec
pop
inc
push
decl
sti
shl
xchg
add
cmp
fbstp
in
call
mov
mov
sbb
dec
cs
lcall
enter
adc
sbb
sub
pop
xchg
in
aam
out
xor
nop
test
add
inc
sbb
ret
or
dec
pusha
in
arpl
or
jb
out
in
subl
push
lret
dec
jle
xor
imul
sub
movsb
push
add
mov
sbb
test
inc
lods
push
cmp
lock
bound
xchg
pop
js
adc
repnz
mov
movsl
lds
sub
push
leave
xchg
out
test
mov
and
js
dec
adc
jg
mov
or
outsb
ret
lcall
dec
outsl
push
leave
or
cmp
sbb
mov
popa
and
or
int3
mov
xchg
movb
ja
jp
sbb
sub
stc
mov
lods
xchg
jp
push
push
xor
push
std
nop
dec
add
push
cs
test
xchg
jae
or
popf
inc
push
pop
mov
sbb
roll
mov
fnstcw
icebp
repnz
lock
out
aad
adc
cmp
cmc
ss
out
jle
fadds
popf
nop
xchg
lret
inc
dec
dec
sub
xor
inc
xorl
dec
movsb
aam
mov
sbb
in
add
movsb
mov
popf
lret
enter
mov
sarb
or
mov
lock
popf
mov
clc
test
je
pop
push
cmc
dec
mov
scas
cld
aas
js
mov
arpl
dec
in
pop
ds
xchg
mov
mov
daa
add
mov
sub
ficoms
negl
popf
cmp
mov
shr
xor
mov
ret
pop
add
insl
adc
xchg
into
xchg
xor
mov
shr
in
std
push
pop
decl
adc
rorl
push
rorb
mov
pop
out
xor
xchg
das
out
mov
push
pop
aad
call
test
ss
hlt
xchg
pop
mov
fwait
pusha
aas
jecxz
test
mov
jmp
push
dec
ljmp
xchg
mov
push
fwait
jg
stos
mov
das
add
sbb
push
add
fdivl
mov
scas
mov
test
sub
lock
and
cmp
xchg
cs
push
dec
pop
aam
jnp
arpl
je
fsubrl
scas
and
ljmp
or
aas
lret
stc
cmpsb
mov
enter
aas
pop
gs
mov
shll
inc
arpl
filds
push
push
mov
scas
ffree
out
cwtl
leave
in
sub
push
xor
out
inc
iret
hlt
pushf
adc
movsl
sti
cmp
jl
or
pop
lret
sbb
adc
adc
out
js
xlat
push
dec
mov
cld
in
and
sbb
mov
lahf
mov
fstpt
call
mov
js
push
in
mov
jbe
les
cmpb
call
aas
push
mov
xchg
jg
pop
sbb
pop
out
mov
in
divb
mov
pushf
jo
popa
mov
int3
mov
adc
lods
stos
outsl
inc
xor
cmpsb
jg
lahf
ljmp
xchg
xchg
popf
int3
fistpll
sbb
ret
cmpsl
and
push
lods
fidivl
sbb
ds
sar
dec
mov
push
loop
pop
jmp
stos
pop
mov
sub
scas
push
pop
nop
stos
rcl
xchg
addr16
adc
push
fstps
jne
test
scas
sbb
fisubrl
xchg
in
jnp
sbb
int3
adc
mov
pop
bound
loopne
adc
ret
or
lds
std
popf
pusha
or
sbb
sbb
mov
jmp
push
jmp
js
xchg
daa
into
jnp
mov
lea
clc
sbb
or
aaa
or
aaa
rorb
roll
pop
push
dec
fldenv
test
orl
sub
sbb
push
dec
aad
xchg
cmc
loop
sbb
sbb
cmp
sub
js
sbb
shll
pop
dec
imul
addr16
and
jl
rclb
leave
testb
sub
cmp
sarl
incl
shl
addr16
push
jge
mov
es
adc
cmp
pop
xor
int3
in
sbb
sbb
gs
mov
jmp
sbb
sub
scas
xchg
gs
mov
sbb
js
sub
ss
add
cmp
mov
pop
cltd
jmp
pop
sbb
jl
pushl
insb
mov
pop
push
cmp
fadd
test
dec
or
sbb
mov
mov
xor
push
sub
out
xchg
mov
sbb
pop
mov
in
add
out
adc
mov
rcrb
cli
sbb
push
inc
sub
add
pop
and
push
xchg
dec
lods
pop
and
add
cmp
sub
aam
in
inc
sub
js
cwtl
jmp
leave
cmp
sbb
fdivrs
add
repnz
push
dec
imul
mov
sbb
popf
lret
mov
or
jge
out
and
popf
loop
stc
mov
push
leave
mov
pop
cmp
xor
fdivr
in
adc
sub
lea
sub
mov
pop
mov
fcmovne
jmp
cmp
shll
shlb
std
fdivrl
inc
loop
insb
xor
xor
or
cmp
lret
and
sbb
inc
scas
repz
adc
add
mov
in
mov
arpl
ljmp
adc
xchg
out
inc
adc
mov
push
and
fs
lea
mov
sub
and
popf
xor
call
sahf
push
xor
sbbb
xor
lahf
push
dec
outsb
loopne
add
inc
inc
int3
and
fldcw
adc
pushf
rolb
sub
ficoms
out
sbb
lret
add
mov
inc
es
mov
push
call
or
cmp
pop
xchg
pusha
cs
ljmp
mov
inc
scas
or
ret
xchg
out
dec
push
cmp
aam
pop
f2xm1
xor
xchg
push
icebp
movsb
in
pusha
ja
jo
cmp
nop
or
imul
pop
js
cmp
sub
rcr
pop
sti
bnd
data16
add
cwtl
push
ljmp
jle
and
adc
stc
imul
or
in
inc
loop
sahf
cmpsb
jmp
imul
or
inc
clc
aam
ja
cld
cmc
insb
xlat
iret
xchg
insb
fisubs
or
jae
sti
int
mov
loop
xor
lods
adc
insl
popa
xchg
fs
dec
push
or
lods
mov
pop
hlt
mov
cmp
fs
pop
jle
ljmp
push
or
rorl
sub
cli
lret
push
ss
dec
lock
test
sbb
jnp,pn
and
repz
mov
push
sbb
insl
outsl
sbb
and
dec
clc
lahf
or
inc
inc
test
movsl
xchg
sti
in
outsb
xor
and
pop
sbbl
rcll
adc
jmp
mov
push
cwtl
mov
icebp
pop
js
xorb
repnz
and
test
pop
push
dec
shlb
daa
enter
insl
xchg
cmpsl
repnz
jecxz
mov
jbe
shlb
mov
xchg
sub
imul
cs
aam
pushf
sub
clc
daa
xchg
rorl
mov
dec
mov
int3
je
and
pcmpgtb
das
loop
call
cmc
shll
mov
stos
rcr
xor
nop
leave
sbb
mov
js
rcrb
stos
pop
ss
into
mov
sahf
pop
pop
xchg
xchg
cmp
or
pop
shrb
fsubrs
xchg
ret
mov
adc
sbb
aam
xlat
imul
mov
mov
sbb
xlat
dec
ret
jl
mov
lods
push
dec
adc
mov
movsl
dec
test
jns
xor
push
mov
gs
movsb
pusha
jmp
lea
jno
loope
lahf
xchg
loopne
fwait
loope
xorb
loopne
jns
inc
andb
int3
and
test
mov
test
xchg
jmp
ret
push
cmp
and
jl
mov
push
outsl
cltd
pop
adc
js
xchg
pushl
je
dec
outsb
ficompl
imul
fwait
and
inc
push
loopne
xchg
and
mov
adc
in
push
popa
stos
and
push
insl
insb
jmp
icebp
pop
xor
roll
aad
sub
aas
cld
xor
fsub
mov
pop
dec
dec
and
scas
out
jge
orb
pop
ror
mov
loopne
pusha
fldt
stc
out
insl
js
xor
testl
xchg
push
xor
out
ljmp
push
pop
mov
aaa
fmuls
xor
mov
mov
jl
jecxz
gs
pop
jb
or
test
mov
rep
mov
cld
add
cltd
shll
cmp
pop
out
pop
jmp
inc
iret
loopne
sub
dec
aas
shrl
mov
iret
add
mov
dec
test
sub
or
lcall
movsl
xchg
mov
xor
pop
ja
cwtl
add
and
stos
jge
std
inc
inc
cmp
dec
jno
jmp
mov
outsl
adc
popf
outsb
add
icebp
and
sbb
push
pop
cwtl
add
sub
jae
pop
fcmove
adc
xchg
mov
popa
xor
call
fimuls
mov
add
popa
mov
xchg
aas
rcrl
dec
mov
dec
add
in
fwait
out
pop
xchg
in
adcb
mov
or
out
add
cli
pop
lds
xor
mov
mov
xchg
push
inc
or
pusha
ret
pop
pop
cmpsl
inc
shrb
scas
ret
inc
mov
cmc
in
lds
cmp
and
inc
bound
stos
les
int
lods
jmp
mov
lret
jecxz
sbb
ror
nop
je
adc
repnz
push
mov
pop
cmp
fstps
inc
xchg
inc
pusha
adc
orb
repnz
push
push
xlat
inc
sbb
mov
stos
pop
xor
in
fidivl
sub
out
xchg
cmp
push
out
jecxz
je
add
cmp
inc
sub
adc
cli
adc
stos
movd
hlt
pop
mov
jp
setne
insl
lea
popf
xor
leave
inc
mov
lds
xor
test
fists
and
rcrl
pop
cs
lea
fstp
in
mov
cli
lods
cli
cli
cmp
fistps
movsl
xchg
cmp
push
and
pop
outsl
lds
inc
sbb
lea
sbb
mov
cmpsb
dec
add
xor
dec
leave
insl
add
mov
xor
js
js
sub
inc
aam
mov
movsb
mov
jg
jmp
dec
cwtl
cmp
lods
ret
scas
lret
cs
repnz
push
pop
xor
enter
add
test
cmp
xor
out
fxch
jle
lret
sbbl
cld
sbb
cmpsl
inc
cmpsb
adc
cwtl
dec
mov
aas
mov
mov
mov
xlat
loopne
cmc
pop
or
dec
mov
sub
icebp
hlt
push
lahf
sti
dec
add
in
jg
jae
dec
sub
sbb
pop
stc
pop
and
add
cmp
dec
in
arpl
hlt
mov
and
mov
add
sbb
adc
sub
pushl
sbb
enter
and
pop
mov
push
in
bound
jecxz
inc
bound
ss
scas
shlb
inc
inc
iret
jb
stos
mov
rcrb
push
mov
push
or
pop
inc
in
in
xchg
shll
or
es
jbe
sbb
pop
mov
mov
movsl
mov
shlb
shll
fstl
mov
cmp
mov
sbb
jecxz
in
cmc
out
and
dec
cli
popf
or
popa
loop
ss
jae
and
add
cmp
rorb
sahf
int3
das
add
aam
out
mov
fsub
test
mov
and
movsb
jo
adc
xchg
jg
divb
out
push
and
pop
mov
jo
jns
push
insl
cs
inc
addr16
xchg
sbbl
xor
mov
mov
adcb
dec
lcall
test
cmp
pop
push
cmp
inc
mov
insb
adc
xchg
adc
jl
arpl
and
jo
mov
scas
mov
mov
sbb
or
dec
and
add
inc
scas
fs
incb
std
xlat
jle
mov
shrb
je
inc
fwait
dec
js
scas
sbb
jno
mov
push
pop
inc
rolb
pop
jns
pushf
fwait
pop
push
mov
stos
cmp
sahf
inc
sbb
int3
dec
fmuls
pushf
mov
hlt
jecxz
stc
dec
out
dec
test
sub
loope
pause
repnz
or
fnstcw
adc
adc
call
sti
leave
xchg
or
insl
mov
sahf
adc
out
xor
gs
mov
pop
cld
cmpsl
int3
sub
inc
dec
cmp
pop
leave
scas
fwait
mov
dec
jecxz
inc
push
dec
or
inc
mov
adc
aam
jmp
aas
mov
sbb
mov
out
ljmp
inc
sbb
pop
bound
sub
push
daa
adc
mov
imul
pushf
lds
pop
pushf
pop
xchg
mov
mov
inc
adc
mov
jno
push
jnp
add
enter
mov
lods
mov
mov
lret
add
push
xlat
xor
js
in
inc
lds
fs
inc
add
cmp
inc
ret
shll
inc
or
int3
mov
mov
xchg
je
xlat
xor
sub
icebp
fldt
sahf
adc
aaa
push
mov
jae
decl
push
xchg
out
push
xchg
xchg
dec
push
faddl
sahf
sbb
popf
push
adc
mov
out
add
add
test
mov
movsl
pusha
adc
cmpsb
lds
push
jne
rclb
loope
jno
mov
cmc
cmp
mov
int
sbb
xchg
mov
ret
popf
js
ja
mov
mov
mov
cltd
idivb
cmp
outsb
and
mull
es
lret
fincstp
aas
fxsave
xchg
mov
fstl
adc
fsts
leave
popf
push
cmp
aad
iret
bound
mov
ret
insb
inc
js
das
pop
inc
into
mov
push
sbb
mov
push
lcall
insl
loope
insl
arpl
fwait
pusha
stos
jmp
test
mov
xchg
dec
mov
fildll
jmp
icebp
push
adc
lea
dec
add
pop
jl
inc
int3
jge
sar
xchg
into
fisubrl
test
add
jl
push
push
cmpsl
pop
xor
mov
sbb
xchg
pop
push
mov
jmp
and
mov
cmc
loop
jnp
inc
pop
lods
ja
push
enter
mov
xchg
inc
mov
popa
inc
push
xchg
push
jge
stos
out
cmpb
add
movsl
js
arpl
popf
pop
pop
and
ja
in
pop
test
inc
add
test
mov
jp
lods
inc
mov
sbb
jle
or
jo
test
or
cmp
sub
dec
inc
iret
repnz
mov
push
daa
mov
cld
mov
rcrb
decb
ss
mov
insl
fwait
xchg
sti
sti
pop
jmp
cmp
jo
xor
and
test
pop
add
xlat
dec
popf
ja
stos
and
mov
mov
cmpb
fcompl
outsb
mov
mov
jg
ds
loope
cmpsb
mov
mov
je
and
sti
mov
cmpsl
xchg
pop
outsb
mov
and
jl
cltd
aam
push
inc
and
add
inc
fdivs
add
and
divl
insl
out
insl
outsb
jbe
lea
pop
mov
jb
aas
insb
mulb
repz
mov
mov
outsb
loopne
test
pop
test
mov
inc
mov
ffreep
stos
cmp
mov
pushf
pop
aam
xor
inc
mov
aad
push
push
out
adc
mov
xchg
out
xchg
push
push
cs
inc
pop
or
pop
test
or
sbb
test
shr
mov
out
pop
mov
push
ror
mov
xor
out
sbb
xchg
add
mov
out
data16
cmpsb
jle
js
pop
lea
fwait
arpl
xor
sub
jne
push
pop
lret
and
add
pop
or
movntq
out
inc
lds
mov
push
or
shr
lods
call
and
and
nop
mov
in
jg
jmp
sbb
pop
cmc
and
ret
sbb
cmp
cld
pop
fnstsw
xorb
pop
xchg
call
dec
clc
add
ljmp
dec
das
mov
push
push
push
mov
inc
test
insb
vorps
xor
mov
cltd
inc
and
mov
ret
mov
cmp
test
pop
pop
jp
inc
cmc
sahf
sbb
mov
cmp
and
sbb
rolb
xor
xchg
ds
mov
lods
jle
jbe
test
or
inc
mov
xchg
or
push
dec
fidivrl
adc
xchg
sti
pushf
sbb
mov
push
push
stos
pop
gs
cmpsb
jmp
insb
mov
lret
les
and
test
xor
addr16
jg
cltd
mov
outsl
dec
std
add
xchg
sub
sbb
xchg
lods
mov
or
sbb
nop
jno
aam
jno
sub
push
dec
jg
jl
pop
out
test
imull
dec
gs
push
mov
dec
xchg
inc
inc
sbb
push
int3
mov
cmp
int
stos
adc
pop
dec
dec
icebp
shlb
sub
xchg
das
jo
icebp
xchg
or
pop
sbb
rcl
movsb
sahf
xor
in
mov
mov
repz
mov
scas
loopne
enter
cmc
xchg
xlat
sahf
inc
insl
daa
out
jae
lcall
pop
jo,pt
and
jg
or
popa
and
or
xchg
pushf
push
in
or
or
pop
pop
repnz
jg
cmpsl
add
push
xor
jecxz
das
dec
je
sti
ljmp
stc
mov
icebp
lock
mov
push
lcall
aaa
iret
add
mov
cli
out
rcr
adc
dec
mov
leave
enter
xor
sahf
ja
pop
push
cmp
mov
test
clc
xchg
call
xor
cmp
or
pop
out
mov
out
mov
andl
lret
inc
lods
insl
pop
mov
bound
xor
icebp
in
push
and
sarl
inc
mov
push
stos
popf
lods
xchg
imul
popa
or
loop
int
shlb
pop
adc
dec
dec
jbe
and
push
insb
data16
or
xor
and
pop
cmp
loop
in
sub
cli
push
sub
jecxz
jo,pn
mov
cmp
nop
out
in
js
mov
mov
push
out
mov
ja
lods
ljmp
xor
outsb
mov
add
mov
jae
dec
or
out
leave
into
sub
aas
aaa
sti
outsb
push
ss
mov
ja
push
stc
xorb
push
xor
inc
sti
and
cmp
sub
cmpsl
mov
add
cmp
xchg
mov
out
xchg
pop
xor
xor
outsb
lret
mov
xor
ds
mov
cli
das
pop
out
ret
int
ss
mov
pop
mov
xchg
mov
or
in
xor
and
ret
push
pop
xchg
mov
addb
xor
out
pop
mov
aad
sahf
jl
into
mov
xor
cmp
mov
int
sub
mov
jmp
das
leave
scas
aam
xchg
or
mov
lds
cmp
lea
test
sbb
test
outsl
jne
mov
pop
xor
cmp
adcl
push
mov
and
stos
call
xor
inc
jnp
jmp
dec
sub
inc
out
lcall
cmp
cltd
jae
xchg
shll
xchg
cmpsb
add
loope
gs
and
repnz
add
xor
jne
les
or
jp
imul
ror
jmp
negl
cmp
pop
mov
push
mov
fmul
sbb
outsb
xchg
ljmp
push
xchg
aaa
dec
mov
int3
jnp
imul
cltd
push
dec
shl
lahf
iret
inc
outsb
push
cwtl
mov
ljmp
repz
inc
lahf
push
push
lret
scas
or
addr16
xor
push
mov
jecxz
cmp
imulb
outsl
or
dec
rorb
js
jae
ss
mov
push
sbbb
ja
adc
test
or
or
loope,pn
or
mov
xor
sub
push
in
out
pop
sbb
mov
orb
in
add
icebp
dec
loope,pt
dec
inc
sbb
dec
stos
mov
fs
add
loopne
mov
xlat
je
cli
fisubs
stos
push
pop
jmp
mov
mov
sub
inc
jo
pop
data16
jle
xchg
mov
cmp
int
insl
insb
jle
iret
mov
test
push
or
ret
xor
lret
mov
or
or
cmpsl
call
pop
push
incl
lahf
out
ret
sti
push
pusha
clc
aaa
popf
and
loope
lds
clc
movsl
mov
jae
or
push
cmp
pop
cld
mov
stos
fdivrl
push
mov
push
inc
dec
idivb
rolb
mov
stos
repnz
addr16
mov
and
fcoms
mov
cmp
xor
cmc
lock
and
cmpsl
add
and
pop
pop
insb
mov
jno
aad
sub
out
test
fcmovnu
push
pop
popl
loope
push
jg
jns
nop
mov
dec
push
jecxz
js
sub
hlt
or
scas
add
imul
jle
or
mov
and
fimull
sub
arpl
inc
push
dec
jge
mov
fadd
dec
dec
sub
scas
mov
leave
inc
inc
jne
push
pusha
xor
or
add
loop
and
dec
add
test
orl
sub
pop
pop
push
xchg
sti
jne
mov
icebp
ret
jecxz
movsl
add
mov
pop
lret
xchg
repz
outsb
sub
pop
insb
add
inc
xor
pop
dec
sahf
pop
movl
dec
xchg
add
sub
gs
sub
xchg
push
ret
xor
mov
lock
adc
stos
jae
mov
mov
lods
pop
loope
sub
in
jle
fcmovb
jne,pn
xchg
int3
int
inc
jnp
or
push
push
mov
or
xor
call
xchg
movsl
jae
outsl
mov
push
pop
xchg
stos
adc
inc
bound
mov
popf
repnz
sbb
insl
xchg
aas
js
cs
cmpb
adc
push
push
je
aad
lea
xchg
and
std
testl
add
lea
xorb
jle
mov
cli
ret
orl
mov
lds
fnstcw
sub
popf
adc
loope
adc
int3
mov
lea
xor
in
xor
inc
cld
out
cmp
xchg
insl
mov
jp
std
jbe
push
adc
jp
sub
lcall
stos
lods
movsb
lods
jbe
std
sub
leave
mov
and
nop
inc
sub
icebp
mov
dec
sbb
pushf
add
lds
pushf
cmpsl
mov
es
pop
sahf
mov
sub
or
cli
mov
popf
push
inc
loop
aam
std
mov
or
xchg
mov
xor
jge
call
and
push
shrd
mov
add
sbb
mov
xlat
inc
cmc
lea
jnp
and
fs
or
and
sbb
test
or
imul
rcrb
lret
fs
ss
lock
loopne
dec
test
rcrl
incl
or
adc
imul
adc
fwait
scas
lcall
ffree
mov
nop
mov
jo
and
fistpl
mov
mov
ds
pushf
aaa
movsb
arpl
cwtl
shlb
sub
cmp
ja
cld
and
clc
sub
cli
xor
sbb
or
ja
mov
lret
hlt
mov
test
lcall
adc
in
sti
ror
aad
pop
xor
mov
test
ret
mov
dec
mov
cmpsb
jp
gs
xchg
insl
adc
jmp
rcr
jb
sbb
xor
sti
or
das
xchg
lret
sbb
sub
xor
dec
outsb
orl
and
cld
sub
ja
jbe
test
push
xor
mov
xchg
outsb
outsl
push
or
jo
pushf
push
les
inc
lods
mov
jle
stos
int
testl
jmp
movsl
dec
test
lret
or
in
jnp
repz
das
mov
cmp
stos
cli
out
and
in
jecxz
mov
pop
pop
or
out
and
push
mov
mov
pop
out
jg
add
xchg
subl
aam
push
in
aam
addb
sarb
movsl
dec
into
push
mov
mov
dec
nop
mov
cmc
das
sarl
cmp
sub
jg
push
xchg
xchg
inc
insb
mov
gs
cmp
pop
pop
push
cmpsl
inc
rcrl
xor
aad
cmpsl
test
push
jmp
sub
adc
sbb
lret
mov
imul
dec
inc
iret
hlt
xor
cld
jo
std
test
js
ja
imul
dec
adc
pop
shlb
sahf
and
jecxz
push
arpl
addr16
popf
out
imul
pop
out
sub
clc
das
stos
bound
mov
pop
jp
idivl
adc
jne
aaa
or
rorl
sbb
repz
push
test
pusha
and
fisubrl
or
repz
pop
dec
clc
data16
call
sub
lock
sbb
mov
push
iret
popa
out
movsl
test
dec
jne
loop
rcl
push
adc
je
adcl
in
fstl
push
jo
cmpsb
cmp
xchg
xor
jle
lock
jge
lods
pusha
stc
push
or
nop
mov
adc
enter
mov
sbb
push
int
or
and
movsb
push
and
push
adc
and
imul
out
pop
insl
push
mov
ds
add
test
cmc
testl
pop
pop
outsl
push
mov
mov
inc
test
or
aam
bound
xchg
dec
test
xchg
mov
or
pusha
mov
adc
cmp
ljmp
sbb
ret
enter
push
mov
shrl
je
fmul
dec
push
push
add
out
ja
lods
jno
add
incl
lcall
jmp
mov
pop
xor
add
shl
imul
int
aam
repnz
frstor
jecxz
shlb
pop
pop
cmp
xchg
push
ss
sbb
sbb
movsl
loopne
sub
xor
dec
xchg
or
shlb
cmovno
insb
imul
lods
push
lds
xchg
sbb
adc
fldcw
fwait
xchg
bound
lods
lcall
jnp
popa
iret
xchg
in
lret
add
jecxz
mov
cmp
and
push
aad
in
mov
sahf
jb
shlb
ret
xor
into
mov
adc
adc
in
jecxz
push
jmp
aam
sbb
dec
gs
push
mov
mov
ljmp
dec
mov
or
sub
cmp
fwait
inc
dec
pusha
test
cs
xchg
mov
inc
adc
fs
jle
and
cwtl
out
cmp
pop
add
lods
in
int
test
stos
jae
iret
repz
insl
test
mov
mov
lcall
or
jae
fnstcw
jo
sahf
imulb
leave
shlb
test
xchg
mov
pop
sahf
nop
cwtl
mov
mov
jge
iret
dec
fsubrs
sbb
iret
and
je
jl
mov
pop
faddp
pop
xor
lock
movsl
int3
out
daa
loopne
mov
sahf
mov
inc
or
dec
cmp
mov
add
cmp
or
lcall
iret
loope
out
pusha
dec
or
lret
mov
ret
gs
das
cwtl
test
and
stos
pop
movl
sub
cmp
shrl
stos
dec
je
mov
mov
inc
lret
call
adcl
adc
mov
lea
cmpsl
mov
jo
push
ja
inc
pop
mov
fwait
sub
bnd
cltd
and
pop
xchg
mov
lcall
hlt
mov
mov
jbe
dec
jb
repz
jmp
xor
cmpb
fildll
mov
xchg
xor
lea
iret
leave
add
and
and
inc
into
in
lods
fadd
rclb
mov
sbb
adc
push
movsl
lret
dec
cmp
push
or
xchg
test
mov
pop
jb
mov
push
aad
out
add
in
cmpsl
jns
pop
mov
sbb
adc
dec
add
aam
stos
push
test
int
inc
xchg
cmpsb
faddl
pusha
add
daa
cmp
out
bnd
into
mov
xchg
add
int
clc
lods
mov
lods
dec
mov
out
push
sysenter
mov
cmp
clc
ss
lahf
jle
fdivs
pop
jae
xor
es
add
loop
xchg
imul
mov
jno
lds
mov
adc
dec
push
sub
pop
testl
push
int
pop
adc
lods
lods
sbb
inc
or
fucomp
nop
ljmp
ud0
fs
rorl
ss
arpl
aaa
insb
mov
sarb
repz
dec
out
int3
cmp
xor
sub
cmc
jle
nop
dec
mov
icebp
dec
add
orb
dec
dec
out
test
fsubr
imul
mov
imul
call
cmp
add
pop
sahf
arpl
sbb
mov
fsubr
push
jbe
in
adc
mov
sahf
int
mov
sub
pop
or
jne
pop
sbb
lods
scas
iret
push
mov
inc
lcall
scas
rcrb
adc
lods
adc
mov
mov
shl
arpl
jl
iret
test
add
scas
sub
std
sub
push
ja
or
pop
or
lret
cmp
nop
inc
mov
xlat
ja
push
adc
fisubrl
adc
push
movsb
xor
test
cmpsl
push
sbb
frstpm(287
xor
ret
movsl
int
sub
push
xchg
jmp
icebp
test
adc
add
pop
popf
xchg
xchg
xchg
mov
outsl
test
cltd
and
loop
stos
jecxz
ja
cmpsl
dec
faddl
pop
xor
cld
ja
sbb
test
gs
push
into
lret
push
pop
jbe
sti
sbb
add
xor
sub
and
loope
sbb
mov
xchg
mov
repnz
xor
addl
dec
pushl
mov
mov
jge
call
fwait
ja
scas
xor
js
inc
add
pop
movsl
jmp
stos
add
sbb
mov
repnz
push
jno
adc
popa
shr
mov
push
aam
pushf
dec
paddusw
xchg
test
in
mov
mov
dec
cli
lock
adcb
nop
push
push
mov
mov
adc
inc
or
fsubrs
mov
sub
pop
test
push
loopne
mov
xchg
enter
cltd
jecxz
in
jo
mov
or
adc
notb
dec
pop
nop
push
push
mov
lock
into
clc
lods
mov
adc
push
add
aas
adc
adc
cmpsl
aad
aad
adc
jg
fstl
imul
push
jb
mov
test
insl
jl
addr16
xor
push
movsb
xchg
mov
adc
xchg
out
xrelease
dec
in
mov
xchg
outsb
inc
popf
pop
add
cmc
int3
mov
and
push
xchg
fstl
inc
out
pop
lds
dec
dec
int3
mov
jl
lret
idivl
pushf
mov
pop
pop
aas
shrb
mov
jns
mov
mov
scas
int
movsb
lds
cwtl
pusha
out
sbb
inc
push
lods
imul
leave
pop
jbe
fstpt
adc
aaa
cmp
int3
mov
push
pop
pop
adc
pop
push
mov
adc
pop
mov
sub
ret
lods
nop
jle
cmp
fisubs
mov
rcrl
pop
or
sub
jl
xchg
pop
push
lahf
dec
rcll
shr
inc
test
cs
iret
ret
push
push
xchg
xchg
loope
or
cmp
xor
lods
cmp
cmc
adc
in
mov
adc
lock
aam
test
stc
xor
pop
loope
cmpl
inc
push
outsb
dec
popa
sbb
into
cmp
sbb
lds
mov
and
jge,pn
push
adc
out
or
loop
in
lret
jle
and
and
js
mov
data16
or
jnp
ficoml
sbb
imul
repz
mov
out
or
pop
or
or
arpl
cmovp
xor
inc
mov
fxsave
cltd
xor
mov
add
fistpll
adc
cmp
outsl
imul
mov
mov
sub
xlat
sub
ret
pop
inc
mulb
aad
xor
daa
out
xchg
shl
roll
loope
push
mov
and
lods
or
fstps
cmp
jmp
push
push
jb
or
jmp
xor
lods
and
into
dec
repz
lcall
cmp
lahf
and
into
cmp
push
pop
in
pop
movsl
mov
xchg
lret
inc
pop
dec
pop
mov
mov
aam
lret
imul
mov
sahf
push
jl
dec
xor
xchg
mov
testb
fldcw
fsubr
fadd
fabs
std
mov
mov
jge
dec
mov
sub
cltd
cwtl
push
test
pop
mov
sbb
mov
movsl
ffreep
xlat
mov
stc
test
jo
jbe
ja
insb
pop
xor
add
jge
mov
and
push
dec
dec
dec
pop
xlat
scas
pop
sbb
lcall
lahf
push
pop
jnp
clc
or
ja
pop
mov
pusha
jno
test
out
cmpsb
add
sub
jmp
je
jbe
dec
pop
lret
adc
xchg
out
pop
cltd
sbb
lcall
pop
dec
add
leave
xor
repnz
xchg
or
pop
mov
jnp
loopne
mov
stos
jns
fbstp
lock
mov
push
dec
push
xchg
aam
stos
mov
scas
xchg
cmpsb
sbb
inc
sahf
cmp
sbb
adc
outsl
mov
sbb
sub
aaa
pop
cmp
cli
or
movsb
mov
stos
push
in
and
loope
data16
mov
mov
jl
mov
adc
lea
aas
cld
inc
dec
xchg
sub
pushf
shrb
adc
add
lret
cwtl
sbbb
jecxz
push
pop
pop
xchg
ds
dec
sbb
add
cld
push
mov
push
push
jg
adcl
mov
sbb
inc
pop
insl
icebp
iret
mov
gs
fmul
movsl
jbe
scas
push
xchg
xchg
pop
add
pop
leave
lret
mov
adc
rcl
cmp
mov
cltd
mov
and
push
dec
push
in
jle
jo
leave
shl
nop
or
mov
sbb
mov
mov
inc
ds
sahf
lret
es
cmpsb
mov
cmc
inc
call
out
or
addl
pop
idivb
clc
adc
cli
jecxz
lods
sbb
pop
adc
mov
sub
sbb
clc
mov
mov
pusha
ds
adc
dec
cmpb
inc
in
pop
jl
xor
mov
mov
cwtl
ds
aas
sbb
add
insl
inc
cmp
add
aas
rcr
out
shrl
stos
add
lret
outsb
xor
jno
xchg
add
aad
insl
inc
sbb
xchg
sub
adc
inc
inc
das
push
in
xor
ja
mov
lods
repz
cmpsl
iret
mov
cmp
test
xchg
dec
inc
lcall
adcl
dec
inc
lods
fwait
clc
xor
sub
cmp
jo
pop
pop
push
js
test
sbb
sbb
pop
mov
pop
jne
ret
lret
in
popf
loope
test
sbbb
push
int3
mov
add
mov
lret
sub
sub
in
andb
mov
xor
aaa
loope
inc
stc
adc
lods
xor
push
jmp
jbe
jmp
lret
andb
cltd
in
dec
rcr
es
sbb
jb
xor
ret
mov
inc
sub
ja
leave
dec
and
movsl
test
dec
int3
pushf
mov
out
mov
jns
inc
mov
and
addr16
ss
mov
pushf
sub
and
add
xchg
ljmp
mov
add
leave
sub
xchg
sub
pop
test
mov
pop
test
adc
shrb
inc
inc
ja
mov
dec
push
cwtl
jno
popa
xor
dec
inc
dec
push
popl
or
push
mov
test
sub
scas
fwait
inc
mov
mov
sahf
inc
xor
data16
dec
rcrl
add
cs
xchg
out
jmp
sbb
inc
dec
gs
lret
imul
mov
into
or
or
mov
mov
je
pop
sub
jno
jle
sahf
lds
push
movsl
testb
mov
int
in
fsubrs
int3
pop
push
xchg
popf
std
scas
or
sub
dec
inc
dec
jg
mov
test
adcb
fisubrl
pushf
fdivrl
test
mov
fwait
mov
xchg
pop
add
xlat
jns
jge
out
mov
cmp
fidivrl
jbe
xchg
dec
mov
add
jecxz
leave
mov
and
aas
jg
adc
outsl
test
mov
enter
scas
test
js
sub
int3
add
jo
jo
mov
xchg
or
movsl
mov
lcall
int3
inc
decb
popa
inc
dec
push
mov
les
sahf
sbb
pop
rolb
cmp
and
dec
add
pushf
mov
add
inc
adcl
jb
cmp
adc
lods
mov
fs
mov
inc
sub
jns
sub
rol
sub
mov
mov
jmp
outsl
test
dec
xchg
lock
fdivs
mov
xor
arpl
cltd
adcb
fwait
test
pop
rolb
pop
icebp
sbb
test
in
dec
fsubrl
mov
cld
jbe
push
and
imul
add
mov
dec
int
ljmp
dec
sti
adc
movsb
iret
mov
arpl
add
stos
cmpsb
rcll
dec
push
repz
pop
movsb
pushl
dec
lock
lods
cmp
aas
repnz
pushl
int
mov
push
mov
pop
lcall
mov
aam
dec
push
data16
lds
sbb
cmp
test
addl
je
mov
dec
push
mov
push
or
push
shlb
push
adc
test
and
cmp
cwtl
je
or
jnp
ret
pop
das
fisttpl
sahf
fstps
cwtl
loopne
xor
add
add
in
repnz
fsts
jmp
mov
and
loopne
mov
sub
push
aad
xchg
pop
cmp
out
ds
jmp
xor
xor
and
popf
es
or
cmp
dec
test
jbe
mov
xor
enter
xchg
dec
mov
mov
dec
dec
dec
pop
ja
loope
adc
mov
dec
fs
push
rcrl
jo
or
into
mov
pop
add
pushf
in
and
push
testl
ja
les
xor
pop
sarb
aam
cli
mov
and
xor
cmp
inc
leave
mov
push
pop
push
mov
dec
inc
rorb
lea
sbb
andb
sti
inc
fstpl
and
jb
or
aaa
jae
jecxz
jle
mov
and
sub
pop
pop
repz
ret
outsl
xchg
pop
lds
shr
xchg
dec
movsl
mov
fldenv
aas
je
mov
insb
cli
jmp
sahf
aaa
fsubrs
cmp
mov
cmp
test
addb
adc
mov
inc
inc
sbb
pop
push
in
sbb
pop
loopne
cld
pop
jl
nop
fnstenv
push
lret
lahf
inc
and
push
das
pop
int
xorl
xchg
jne
ja
mov
mov
xor
pop
addl
not
inc
dec
and
mov
aad
cmp
notl
inc
mov
cmp
das
mov
mov
pop
scas
lock
jae
movsl
pushf
in
push
and
fucomi
pop
int3
test
hlt
inc
pop
sub
pop
pop
lcall
add
aaa
pop
scas
push
cmp
adc
leave
test
adc
push
push
fsubp
dec
loope
sub
in
leave
movsl
cmp
mov
fadds
mov
mov
scas
sbb
jmp
dec
ds
sbb
fs
push
add
xchg
pop
xchg
aaa
popf
repnz
cmp
sbb
push
in
fmul
adc
lods
insb
pop
mov
loope
pop
adc
test
fs
dec
cmp
pop
and
mov
xchg
fnsave
mov
popl
lock
jnp
and
rclb
mov
mov
mov
mov
idiv
mov
arpl
inc
cld
cltd
cs
daa
mov
jmp
xchg
rorb
and
sbb
sub
test
out
rorl
or
aad
sbb
push
cmpb
hlt
mov
popa
rcll
push
sti
push
cs
sub
call
dec
rorb
xor
idivb
pusha
int
insl
call
sbb
xor
std
out
sbb
add
iret
xor
rclb
mov
loope
out
or
cli
mov
sbb
inc
dec
cmpsb
dec
popa
mov
leave
lcall
pop
call
ja
or
xor
or
loop
and
inc
push
psubw
inc
push
popf
dec
sub
out
mov
iret
cmpsb
push
or
sbb
pop
mov
push
mov
mov
sub
xor
cwtl
mov
pop
scas
sub
popa
ljmp
test
insb
icebp
lods
in
lahf
inc
stc
pop
fcoml
fdiv
jg
dec
pop
or
inc
mov
push
adc
fnsave
mov
mov
jmp
mov
dec
mov
sub
jno
adc
xchg
mov
fs
add
imull
mov
data16
xchg
push
push
aam
test
cltd
mov
jae
in
lods
jmp
pop
dec
inc
mov
dec
lcall
scas
xchg
and
fdivs
sub
data16
fdivrs
jl
movsb
xchg
aam
fs
inc
test
add
imul
jbe
or
and
cmpsb
or
lret
fidivrl
pop
xorl
push
xor
cmpsb
add
sbb
call
fadd
jb
xor
in
jno
test
mov
xchg
insl
pusha
std
push
mov
movl
shlb
or
pop
adc
lods
or
xchg
jecxz
xchg
fstpl
jno
cmpsb
dec
loopne
xchg
pop
gs
pop
cltd
pop
pop
ja
clc
or
mov
push
movl
ljmp
xor
pop
int
rcr
add
jle
push
sub
jg
cltd
ret
inc
sbb
or
aad
loop
test
adc
or
dec
push
adc
je
jnp
xor
sbb
insb
test
idiv
or
out
adc
sti
test
lds
lret
or
jo
test
add
pop
loopew,pn
lock
mul
lods
mov
mov
jnp
test
test
jb
out
data16
adc
jp
bound
fcomps
mov
sbb
jmp
xor
pop
popf
les
test
xor
lcall
sbb
jae
mov
fistpl
and
addr16
jns
in
mov
push
mov
pusha
in
inc
test
cld
stos
arpl
mov
adc
stc
pushf
sub
cmpl
imul
icebp
sarb
das
jns
sahf
mov
dec
pop
sbb
hlt
gs
xchg
add
push
xchg
mov
push
enter
cli
mov
xchg
je
xchg
dec
test
sub
push
mov
outsl
nop
dec
lcall
incb
ja
negb
sub
or
cwtl
arpl
ds
dec
push
js
pop
inc
out
rcrb
xchg
arpl
jl
mov
insb
in
mov
xchg
sti
mov
arpl
push
loop
mov
imul
repnz
adc
ret
xchg
in
clc
flds
pop
sub
in
sarb
sub
cmp
push
sbb
pop
xor
sub
pop
xchg
jb
push
pop
test
adc
cltd
dec
dec
push
dec
mov
dec
lods
adc
and
mov
xor
fadds
ret
sbb
inc
clc
jecxz
inc
xor
jo
insb
lods
adc
push
push
inc
je
push
inc
dec
imul
fs
or
xchg
je
or
test
fiadds
cwtl
in
jp
stos
popa
xor
push
ss
aam
dec
mov
fisubs
fwait
jne
loope
push
cltd
pop
ret
xchg
jl
xchg
insb
xchg
sbb
cmp
stos
icebp
jb
dec
jo
xor
jmp
outsb
add
popa
push
jmp
cltd
mov
add
int
pop
inc
sbb
test
sbb
sub
xchg
or
arpl
push
cmpsb
fidivrs
pop
enter
je
call
stc
add
in
jb
add
pop
idivb
mov
or
mov
sub
out
rolb
pop
pop
jmp
xchg
sub
fldt
orl
jecxz
not
push
jp
inc
dec
fbld
xor
lods
jp
adc
enter
shr
mov
mov
or
scas
repnz
push
je
or
pop
popa
pop
or
fisttpl
stc
into
jbe
je
pop
cmp
mov
mov
or
push
push
and
insl
rcrb
or
push
jg
jecxz
dec
fisubrs
cmp
lock
xorb
or
outsb
and
ret
repnz
lock
mov
xor
pop
es
adc
sbb
and
movsb
xchg
incl
in
hlt
mov
iret
dec
int3
pop
jp
std
mov
cli
mov
xor
fidivrl
test
mov
movups
push
fadds
in
int3
repnz
mov
leave
lret
sarl
popa
lock
dec
ljmp
and
enter
data16
dec
mov
push
es
pop
call
xchg
mov
jns
iret
cmp
mov
jnp
icebp
aaa
mov
push
jmp
and
nop
iret
and
or
add
push
and
cmpsl
ss
or
popa
test
add
jg
xorl
mul
jmp
outsl
push
vpcmov
aam
gs
mov
stc
orl
sub
repz
fstp
je
push
mov
jp
mov
push
add
push
jl
dec
xchg
xlat
ret
enter
add
ror
mov
outsl
fisubs
aaa
cld
dec
jge
addr16
jle
add
xchg
push
popa
mov
into
out
sub
cmc
mov
sarl
lea
es
mov
in
adc
jp
mov
pop
das
jo
sub
int
pop
outsb
lock
mov
divl
sarl
inc
andb
dec
xchg
pop
jne
mov
sub
push
add
sbb
bound
into
fsubs
xor
pushl
mov
dec
fs
shlb
cmp
sub
xchg
popa
mov
inc
fdivrs
mul
pushf
xchg
iret
mov
sbb
iret
dec
jnp
fsub
ret
sbb
aas
fiaddl
jae
in
push
mov
pop
sub
insb
fcomip
push
inc
adc
sub
or
ret
pop
jb
fstps
adc
lds
or
pushf
and
add
mov
xor
pop
mov
adc
cli
shr
out
cmp
aaa
movsl
lcall
xchg
xchg
adc
dec
cli
or
orb
push
mov
sub
popf
push
adc
pusha
aad
jge
pop
jb
adc
inc
or
sub
dec
scas
lods
jns
les
dec
fwait
jecxz
sub
rolb
ret
push
mov
push
pop
shll
or
xchg
loop
call
fldt
lret
lret
aas
test
cli
push
add
popa
pop
test
js
ds
lock
lods
stos
push
movsb
ss
mov
adc
enter
idivl
mov
pop
insb
add
push
call
loopne
ds
mov
mov
es
dec
mov
fs
in
orb
xchg
xlat
lret
dec
xor
gs
stos
xor
xor
stos
cmp
ret
add
add
xchg
sbb
xsha256
cmpsb
adc
xor
rorb
dec
mov
into
lods
xchg
loop
dec
outsb
xchg
out
int3
aad
cwtl
bound
add
mov
cld
out
xchg
fs
jecxz
iret
jnp
cld
into
sub
imul
jp
test
into
and
xor
add
xchg
xchg
fcmove
push
lcall
dec
ss
fisubrl
mov
sti
data16
lcall
pop
bound
aad
repnz
ss
adc
in
data16
cmp
pop
aaa
lea
jle
push
xor
imul
stos
mov
jnp
sbb
mov
mov
sbb
fistpll
pop
push
pop
into
leave
sysexit
pusha
push
ds
je
cmp
add
jno
mov
inc
pop
push
ss
xchg
xchg
aam
shrd
insb
pop
popf
loop
push
cmp
js
jle
lock
add
push
mov
fmuls
mov
xchg
pop
and
ss
insb
fisubrs
orb
fstps
scas
or
push
mov
xor
cmp
pop
ds
cmp
inc
sub
push
push
sbb
and
into
movsb
dec
mov
fwait
movsb
lret
jle
adc
cs
test
imull
sarl
lahf
pop
ljmp
jp
jae
leave
push
ds
xor
xor
adc
ficompl
rorb
arpl
inc
add
sub
and
adc
jge
pop
mov
mov
mov
nop
add
adc
fsts
jns
movsl
mov
adc
add
daa
mov
lock
ljmp
push
jnp
push
cltd
push
jmp
enter
dec
dec
test
lret
add
addl
pop
fwait
fwait
jecxz
cmp
or
cmpb
adc
xor
aam
adc
mov
sarl
adc
mov
add
push
aas
sbb
jns
xlat
xchg
pop
js
pop
mov
or
pop
vmulps
fidivrs
adc
int3
push
xchg
cli
and
cs
jmp
xchg
mov
sub
pop
cltd
xlat
sbb
enter
cmpl
or
jo
roll
sub
es
sbb
jne
xor
sbb
loope
scas
push
leave
or
and
mov
sub
popa
jmp
out
mov
icebp
movsl
test
loop
jns
outsb
popl
pushf
mov
add
mov
sbb
leave
lock
push
ret
mov
repnz
shll
int3
cli
stos
xchg
jbe
sbb
outsb
mov
cmpsb
repz
in
pusha
dec
sub
mov
popf
js
pusha
xor
fdivrl
push
stos
sbb
jae
addr16
push
aam
xchg
je
pop
sub
outsl
pop
xor
outsb
mov
or
outsl
push
add
push
ds
jbe
push
xchg
or
fldenv
cmp
test
push
cmp
push
loope
dec
sbb
xchg
icebp
adc
pushf
dec
in
pop
iret
cmp
out
mov
or
shrl
mov
loopne
xchg
jb
popf
cmp
shll
loope
repnz
stc
add
iret
aaa
adc
sbb
sub
les
push
pop
arpl
shll
test
inc
push
inc
inc
mov
pushf
push
fisubrl
lods
sbb
inc
mov
push
xor
or
pop
sbb
xchg
insb
fnstcw
xchg
xchg
add
xor
loope
in
inc
insb
xchg
push
xchg
std
adc
or
or
sub
mov
aaa
inc
and
xchg
fs
sbb
push
inc
and
lcall
adcl
and
addr16
and
sbb
dec
jl
cmpsb
dec
mov
cmp
add
aad
sub
adc
fbld
dec
xchg
mov
cmp
test
inc
jmp
sub
push
loope
jp
mov
mov
rol
xchg
gs
subl
pop
packuswb
dec
inc
sahf
pop
adc
mov
or
sbbl
jns
enter
add
mov
xchg
mov
insl
lods
push
ret
lods
mov
psubsw
into
mov
aas
mov
adc
cli
rcll
cmp
fisttps
add
out
ss
fmuls
cmpsl
ja
int
xor
arpl
mov
test
push
lahf
jb
loop
in
mov
xlat
cmp
adc
inc
jmp
add
int3
stos
leave
pushl
das
movsl
lret
mov
movsl
sar
pop
lds
jbe
inc
testb
adc
adcb
jle
inc
call
movsb
and
jo
jne
inc
mov
xor
cmp
movsb
addl
jne
outsb
loope
out
sub
mov
out
jb
jmp
vpsadbw
push
bound
aam
out
lret
shr
insb
popf
mov
pop
stos
mov
aad
repz
scas
xchg
pushf
int3
xchg
std
and
stos
adc
jae
mov
std
repz
xchg
inc
lds
adc
in
fldcw
lcall
in
rcll
xchg
inc
int
mov
outsb
cmpl
pop
into
jge
enter
adc
mov
jecxz
arpl
andl
in
ret
aaa
les
add
mov
push
mov
adc
mov
pop
mov
mov
shrl
inc
lock
mov
mov
push
jle
lods
add
push
xor
js
and
mov
cltd
push
dec
movsl
dec
mov
add
cmpsl
push
xor
lahf
pop
add
out
jg
xchg
popa
orw
pop
subb
pop
lock
adc
and
dec
mov
outsl
shlb
daa
fbld
sbb
sbb
loopne,pt
ds
sub
cmp
and
mov
js
testb
mov
dec
gs
jne
stc
push
xor
jbe
mov
mov
and
push
xchg
in
jp
mov
inc
mov
aaa
or
call
jno
into
mov
xor
arpl
pslld
fsubrp
addl
dec
hlt
jp
dec
dec
in
pushf
lcall
inc
add
push
lock
sarl
pop
add
pop
neg
sub
enter
lret
rcl
fwait
adc
sbb
cmpsl
adc
adc
ds
sbb
rcrl
mov
and
mov
aad
jp
cmp
adc
xor
xor
mov
cltd
jno
xchg
push
add
pop
xchg
les
fidivl
dec
xchg
mov
test
scas
cmp
sbb
push
mov
mov
mov
push
push
dec
pop
sub
jno
fwait
sbb
dec
inc
add
mov
dec
pop
push
jecxz
jl
xor
mov
rorl
call
mov
repnz
xchg
push
sbb
bound
scas
data16
lret
jne
test
fs
int3
cmpsb
and
inc
mov
mov
or
cmpsb
push
gs
lock
sahf
arpl
jnp
je
testb
push
jns
mov
cmp
ss
mov
dec
sbb
dec
or
push
or
sbb
inc
cltd
mov
icebp
out
push
add
cmp
mov
sub
je
mov
rcrl
push
ret
and
xchg
movsl
cmp
xchg
pop
xchg
out
xchg
cmp
sub
jbe
popa
stos
les
aaa
xchg
aas
insl
mov
loope
shll
andl
mov
lods
js
and
xor
mov
out
dec
push
inc
push
popa
mov
int
mov
xchg
xchg
cmp
pop
push
and
jmp
or
mov
push
mov
adc
cmp
push
inc
mov
mov
add
cmp
mov
inc
rol
pusha
stc
popa
adc
pop
xor
xchg
xchg
cmpsb
mov
inc
movsb
mulb
jbe
adc
mov
jae
stmxcsr
repz
ljmp
stos
or
mov
or
jo
lds
dec
adc
push
jbe
ds
fidivs
mov
mov
mov
xlat
cmpsl
fsubrs
sarb
pop
mov
orb
lss
aam
mov
mov
fstpt
jb
test
adc
adc
decb
mov
cld
mov
jmp
icebp
cmp
mov
mov
dec
icebp
pusha
iret
fs
or
xor
and
pop
lods
mov
push
cmp
or
push
sub
push
or
in
and
or
outsl
mov
jecxz
out
in
xor
bswap
adc
repz
rep
add
mov
inc
rol
inc
push
xor
push
fadds
pusha
mov
les
xor
push
das
sbb
out
leave
xor
in
iret
adcl
push
and
sbbl
and
dec
and
add
add
mov
sahf
mov
imul
or
pop
xorb
pop
in
or
cmp
lods
clc
movsb
out
mov
leave
inc
shl
pop
jg
or
cltd
mov
adc
aam
adc
dec
mov
sbb
std
xchg
mov
enter
mov
adc
dec
xor
mov
ret
jnp
lcall
hlt
ret
lret
mov
push
movsl
and
jp
sub
dec
mov
sub
cltd
stos
add
cwtl
push
push
sarb
inc
xchg
xor
fistps
xor
push
pop
pop
or
sarl
leave
pop
mov
lock
or
lcall
inc
adc
jmp
adc
adc
sbb
cmpl
lea
adc
cmp
popf
insl
inc
pop
jge
xor
or
loopne
jg
dec
push
stc
cmp
ss
inc
testb
dec
insl
mov
xor
inc
jecxz
dec
xor
aaa
push
enter
aaa
push
xor
sub
pop
mov
loopne
cwtl
mov
inc
das
cmpsl
or
clc
clc
roll
movsb
stos
ret
cli
push
imul
inc
std
ja
inc
je
cmp
jne
mov
bnd
fwait
loopne
int3
jmp
jbe
in
repz
aaa
mov
sub
cs
jecxz
repnz
push
jp
adc
mov
subb
icebp
jle
xor
pushf
ret
or
mov
inc
adc
mov
mov
dec
adc
mov
pop
xor
icebp
insb
lods
inc
movsl
inc
sbb
push
sbb
popa
out
int3
adc
mov
imul
pop
lret
iret
push
fwait
std
jmp
xchg
inc
add
jo
int3
mov
movsb
and
lcall
scas
pushf
sub
daa
lret
hlt
mov
and
jge
cltd
es
cwtl
and
movsb
push
pusha
movsl
cmpsb
jmp
pop
lcall
ficoms
xchg
out
fcmovnbe
clc
pop
out
add
pop
push
lret
fistpl
xor
sub
daa
mov
sahf
mov
mov
lods
mov
jmp
pop
push
andb
insl
push
dec
lret
cmc
shll
rclb
rolb
pop
sbb
fstpl
orb
mov
fcoml
ljmp
or
mov
dec
stc
xchg
sub
lret
cltd
hlt
jle
fs
int
mov
movsl
push
and
adc
int3
lock
cltd
xchg
lods
in
mov
int
cmp
lods
mov
les
icebp
xor
fiaddl
test
repz
ljmp
aaa
xor
rcrb
rorl
movsb
push
lcall
mov
adc
dec
or
sub
mov
or
out
xchg
cmc
push
xchg
pop
jns
movsb
jbe
ss
mov
mov
xchg
xchg
cwtl
test
mov
mov
movl
cmp
ja
mov
jg
sti
mov
dec
js
faddl
dec
test
push
in
xor
lods
pop
sbb
lds
xchg
pop
sbb
imul
mov
nop
xchg
sbb
in
mov
mov
inc
push
int3
xor
inc
ds
jbe
jg
xor
dec
shlb
pop
test
cmp
cmc
dec
mov
int3
jae
orl
pop
pop
in
pop
xor
xchg
imul
xor
adc
scas
aaa
ror
bound
fsubl
sbb
mov
inc
push
cli
jmp
rcll
dec
shrd
or
gs
call
stc
push
adc
cltd
adc
mov
sahf
sbb
sbb
dec
bound
sub
push
dec
scas
pop
hlt
pop
pop
insl
and
mov
mov
cwtl
js
test
add
or
sbb
cmc
mov
cmp
mov
mov
sub
add
inc
jmp
lahf
fs
pop
push
jge
mov
rol
xchg
insl
and
inc
push
xchg
xchg
mov
fucomi
sub
and
xchg
out
mov
cltd
dec
sub
sub
ja
pushf
jnp
imul
clc
and
lods
fs
notl
jecxz
movntq
sub
inc
out
mov
xlat
lahf
xor
adc
mov
mov
xchg
or
popa
movsb
std
xchg
outsl
lea
inc
xchg
hlt
ja
add
out
lock
int3
aam
push
andl
movsl
rcll
mov
shll
push
into
test
cmpsb
sahf
xchg
imul
andb
jbe
mov
add
inc
idiv
shlb
xchg
dec
dec
into
jp
lods
in
int3
ja
out
pop
mov
jg
repz
xchg
adc
and
xor
dec
lret
pop
push
dec
adcb
stc
and
jmp
adc
in
in
call
dec
or
mov
mov
mov
and
xchg
inc
daa
pop
xchg
jno
out
mov
int3
push
int3
push
push
in
sbb
std
push
add
jmp
or
adc
pop
mov
and
cmp
andb
cmp
adc
roll
rolb
xchg
addl
jnp
insb
and
iret
pop
xor
add
push
popf
nopl
lret
mov
dec
testl
icebp
xchg
insb
lret
inc
or
icebp
mov
push
pop
mov
and
ljmp
pop
imul
lret
and
bnd
pop
pop
xor
mov
lods
pop
and
cmp
addr16
mov
lcall
xor
and
jge
sub
push
jmp
jnp
stc
jl
jl
in
rcrl
mov
dec
pop
dec
loope
ds
xchg
cmp
lret
test
add
jae
and
insl
xchg
jne
xorl
fidivrl
pop
mov
xor
dec
pop
xchg
into
and
push
pusha
aam
jno
leave
cmpsl
fs
xchg
idivl
xor
jb
push
leave
inc
push
jne
sahf
cltd
jp
loope
mov
cmpb
imul
jae
lods
mov
out
mov
xchg
leave
shrb
jge
jle
xor
repz
and
adc
ss
adc
jae
mov
lret
inc
pop
pop
xchg
xor
push
cmp
ret
arpl
push
pushf
dec
aad
add
sub
out
mov
test
ljmp
sbb
xchg
cli
out
mov
add
push
mov
inc
cmp
unpckhps
cmc
mulb
sbb
cmp
jb
mov
cmp
dec
push
inc
adc
xor
mov
push
and
push
and
push
mov
js
cmp
pop
stos
mov
and
xchg
aaa
outsl
mov
xchg
popf
cltd
mov
pop
xor
inc
std
mov
add
fucomi
dec
sbb
mov
pop
lds
sub
insl
sahf
gs
jge
jge
sub
or
dec
cmp
mov
inc
mov
sbb
cmp
sub
arpl
mov
ret
cmp
enter
and
sub
cli
mov
sbbl
sub
into
jmp
movsb
fiaddl
xchg
sub
leave
push
sbb
mov
mov
pushl
pop
pop
sub
push
jle
jp
adc
pop
test
out
or
xchg
cmc
adc
xchg
or
cmp
mov
or
into
mov
inc
cs
mov
into
insb
lods
aam
int3
and
cmp
mov
addr16
vpmullw
mov
xchg
out
stc
lds
push
mov
sub
fnstsw
pop
scas
mov
hlt
or
aam
mov
push
out
in
xor
jle
filds
mov
jae
jp
loopne
add
jmp
repz
repz
add
inc
or
pusha
inc
ret
xchg
push
sbb
inc
sahf
xor
fdivl
call
lahf
leave
nop
addr16
ja
outsb
pop
cmpb
fisttpll
daa
mov
mov
adc
push
and
dec
pushf
adc
cld
sarl
inc
cli
inc
pop
mov
lcall
cmp
mov
and
pop
sar
pusha
aas
js
xchg
ljmp
stc
int
sub
in
mov
mov
mov
cmp
jle
inc
test
imul
out
sub
xchg
mov
jno
test
mov
and
shrb
imul
andb
inc
sahf
sub
pop
test
adc
iret
popf
lret
xchg
addl
or
pop
pop
in
scas
xor
addl
in
push
sbb
outsb
push
xorb
push
push
aam
pop
in
in
and
fwait
jbe
enter
stos
loopne
lods
mov
ret
pop
loope
sbb
jae
jmp
cmp
sbb
xor
mov
mulb
sti
outsb
add
sub
adc
loop
in
jp
sbb
scas
mov
lock
mov
xor
mov
out
sbb
sbb
lret
cmp
aam
jge
lret
fwait
stos
lds
lahf
push
mov
pop
bound
sar
mov
pushf
jle
push
addb
jmp
cmpsb
aaa
cld
sbb
aaa
std
adc
inc
test
aam
mov
sbb
fdivs
cmp
int3
fsubl
xchg
ss
mov
btr
imul
test
es
adc
outsb
or
repz
pop
and
cmp
mov
test
mov
insb
lret
movsb
inc
sbb
xchg
xchg
jbe
rorl
bound
adc
std
xor
test
repnz
fstps
inc
aas
mov
daa
pop
inc
cwtl
cmp
into
xor
pop
jge
xchg
push
mov
cmpsl
adc
jnp
cmpsb
mov
fs
pop
xchg
fprem
fistpll
lahf
lret
lahf
stc
or
push
add
lods
clc
xor
mov
mov
fimuls
push
je
mov
adc
jo
adc
dec
inc
in
cmp
jp
aam
cmp
inc
mov
mov
sub
out
lock
fldl
movsb
adc
insb
jle
cld
outsl
std
xchg
jno
push
daa
pop
xor
push
pop
aad
dec
cwtl
mov
xor
insb
pop
cli
jl
imul
push
dec
sahf
mov
aam
xadd
and
popf
lea
sub
aam
fisttpl
sahf
mov
icebp
lods
dec
cmp
jbe
inc
mov
or
packsswb
xchg
outsb
sbb
push
aam
sarb
stos
xchg
xlat
sbb
mov
loope
dec
fnstcw
push
ljmp
push
aas
or
lea
xor
jbe
push
mov
outsl
jnp
and
sbb
scas
or
imul
ljmp
gs
cmpsb
ds
sub
and
jecxz
imul
das
out
push
lret
cmp
cli
sahf
push
jle
pop
jmp
loop
sarb
inc
and
push
cs
sbb
sbb
cld
dec
jl
in
sarb
sub
addr16
fucomi
cmpsb
jno
lahf
sbb
xor
and
dec
dec
stc
dec
movsl
stc
ficompl
out
cwtl
cwtl
adcl
mov
pop
add
cmp
jne
mov
lcall
fs
lods
call
fidivrl
sub
fldcw
jp
ss
aad
sbb
fbld
mov
mov
push
ss
out
insl
iret
imulb
push
lock
test
idiv
cmpsl
outsl
test
in
push
movsl
pop
cmp
rcrb
repz
arpl
dec
cmpsb
repnz
jbe
push
leave
push
pop
and
mov
sub
add
xchg
or
jne
push
push
dec
inc
pushf
sbb
or
push
adc
mov
mov
xchg
mov
sbb
lahf
jp
testb
add
js
xor
jne
cld
pop
std
push
scas
ljmp
sub
pop
pop
push
pop
aad
mov
aaa
add
lds
add
and
movsl
and
mov
in
inc
lods
sub
fmul
sbb
scas
push
jno
inc
cld
enter
fs
outsb
pop
mov
xchg
inc
jnp
inc
aad
and
mov
push
cwtl
loopne
popa
mov
xchg
pop
inc
cltd
loop
push
mov
jo
mov
xchg
sbb
jb
sub
dec
cli
insb
out
in
out
pop
push
mov
in
xchg
int
in
adc
mov
jnp
inc
imul
fdiv
movsl
sti
mov
push
mov
shlb
push
add
scas
movsl
fsubrs
int3
dec
push
jns
mov
shrb
mov
divl
dec
xlat
cmp
fisubrl
aam
ss
inc
test
stc
jns,pn
popf
inc
cmp
notb
sub
sub
gs
xor
test
push
sbb
cmc
xchg
aas
hlt
sub
xor
into
ljmp
xchg
pop
jno
or
rolb
lock
je
movsl
and
mov
fdivrp
mov
jno
das
jge
cmp
sti
cmc
inc
out
lods
dec
inc
negl
pop
and
and
dec
sahf
or
roll
jl
mov
jge
hlt
adc
pop
clc
mov
xchg
pop
ljmp
outsb
outsb
movsb
movsb
push
lahf
inc
adc
js
pop
xor
stc
inc
cmpl
out
jle
mov
inc
lock
cmpsl
push
insb
cmpb
dec
dec
mov
adc
in
mov
lret
inc
cmp
sarl
jmp
pop
mov
insb
fwait
fwait
fwait
pop
and
popf
push
lahf
stos
out
xor
jno
inc
push
sub
cld
fcoms
lcall
jb
call
push
call
out
pop
std
test
adc
je
out
and
clts
test
dec
pop
stc
jp
testl
add
mov
mov
gs
outsl
sub
mov
push
pop
dec
test
xchg
push
dec
mov
shll
push
aas
fs
stc
rolb
xchg
sub
stos
outsb
sbb
fisttpl
clc
cmp
pop
nop
stos
mov
int3
inc
pop
lret
mov
ljmp
pop
lods
xor
jg
in
sub
loop
mov
mov
ljmp
fwait
jmp
leave
lods
cmpsl
scas
arpl
cmpb
jle
icebp
jns
cmp
adc
scas
outsl
cmp
roll
jns
aas
jno
int
stos
into
cmp
pop
push
loope
lds
fistpll
hlt
lret
xor
cmp
iret
sbb
lret
imul
add
dec
jecxz
lods
stos
pop
sbb
cwtl
insl
bound
aam
lock
jns
ljmp
and
and
insb
stos
fstpl
lea
pusha
es
in
or
out
cmp
xchg
pusha
sub
daa
out
or
mov
cs
les
dec
lcall
or
xlat
addb
lret
outsb
mov
mov
dec
popw
stos
xchg
insb
adc
add
enter
test
inc
shrb
hlt
xor
jno
int
mov
dec
dec
fucomip
jmp
int
repz
push
xchg
push
enter
popa
dec
mov
loope
andl
or
inc
test
xchg
add
dec
dec
jae
cmp
mov
nop
xor
xor
and
inc
dec
xor
pop
stc
adc
test
xchg
xlat
jg
andl
xlat
cmpsl
popa
dec
popa
jne
mov
mov
inc
push
mov
jbe
shl
jge
in
add
sbb
outsl
in
pusha
sub
jmp
mov
xlat
xor
lcall
mov
lcall
stos
aam
jb,pt
jb
push
ja
sti
push
push
jl
add
in
js
mov
enter
adc
jnp
les
icebp
fidivs
push
sbb
std
sub
add
xor
inc
outsb
fstpt
inc
loopne
xor
xchg
cmp
sub
into
mov
imul
adc
jmp
add
nop
dec
arpl
repnz
mov
pop
sbb
incl
pop
sub
jae
inc
call
subb
mov
pushf
dec
mov
push
js
lods
jmp
in
ljmp
idivb
fwait
ds
dec
mov
jnp
fistpl
cmpsl
sbb
std
enter
or
push
and
mov
lret
mov
mov
xchg
inc
fsubrl
pop
cli
lret
sbb
lods
int3
pop
movsl
fildl
repz
fs
or
icebp
xchg
and
imul
push
divb
shlb
icebp
or
inc
js
es
out
cmp
incb
shrb
xor
and
data16
sub
mov
int3
mov
dec
mov
mov
and
mov
lahf
cli
stc
add
cmp
pop
pand
fwait
insl
leave
enter
loope
mov
in
inc
adc
out
jg
daa
ds
cmp
fwait
xchg
or
cmp
ret
cld
sub
in
scas
idiv
pusha
loope
xor
mov
xor
gs
sbb
fistl
push
ja
mov
sahf
xchg
cli
mov
jno
lret
hlt
iret
sti
xor
sbb
inc
rclb
xor
xchg
hlt
test
xchg
imul
data16
dec
mov
add
add
js
xchg
scas
ja
mov
aas
nopl
cmpsb
lahf
xchg
inc
repnz
fildll
mov
push
inc
push
sbb
mov
test
arpl
xchg
inc
sub
scas
ret
movsl
add
ds
push
pop
leave
mov
add
addl
insb
mov
imul
orl
mov
fsub
push
xchg
loope
mov
lock
testb
mov
add
in
clc
fisubrl
push
pushf
mov
mov
push
mov
cld
shll
loopne
push
out
dec
add
mov
leave
xor
cmc
xor
mov
addr16
add
arpl
out
out
shlb
arpl
inc
or
or
jg
cmpsb
or
in
idiv
pop
xchg
cmp
sub
test
repnz
sub
ret
inc
in
mov
imul
dec
fldt
adc
outsb
shll
dec
jae
add
fadd
jp
mov
fstpl
cmp
popa
scas
push
ss
mov
lods
add
push
adc
pop
mov
outsl
mov
popf
mov
loope
aas
cwtl
push
push
shl
ja
xchg
dec
cmp
mov
lcall
sub
xor
or
cmp
in
sbbl
sub
push
orl
movb
fimull
add
movsl
jne
out
cs
push
movsl
loopne
insl
lods
pop
and
mov
in
lahf
xchg
stos
int3
jmp
jb
subb
push
cld
je
sarl
xchg
stos
mov
lcall
loopne
mov
adc
mov
xchg
lret
or
dec
xchg
in
enter
cmpsb
ja
pop
nop
cmp
xor
or
loopne
xchg
lock
dec
push
loope
inc
shl
ret
mov
push
bound
int
aaa
mov
mov
mov
out
jecxz
rsqrtps
jge
cltd
clc
inc
fistpl
adc
jg
jbe
mov
xor
push
hlt
rcll
repz
fldcw
and
std
push
dec
jp
xor
cwtl
push
mov
and
test
popf
stos
or
mov
add
push
xchg
pop
or
and
mov
push
arpl
mov
jecxz
int
loop
orl
adc
es
cwtl
js
mov
imul
out
fldl
push
mov
xchg
mov
in
mov
sbb
out
or
repnz
movsl
in
xchg
adc
pop
ret
xchg
dec
testb
ja
mov
cmp
cmp
sbb
lods
iret
inc
sbb
jmp
inc
mov
push
xchg
jb
rcrb
rol
or
test
cli
ret
test
sub
mov
sbb
fwait
vucomiss
leave
je
dec
mov
jmp
jg
scas
sub
xor
filds
cmp
pop
mov
fcoms
mov
pop
xor
repnz
loope
repnz
in
and
and
dec
and
aam
sti
arpl
out
mov
jge
inc
icebp
adc
lods
iret
push
mov
pop
inc
es
std
leave
jl
sub
pop
std
sbb
inc
jo
inc
fisubrs
fdivr
jle
cmp
shr
inc
testb
push
repz
and
sub
push
xor
punpcklbw
out
insl
mov
aaa
mov
xchg
pusha
lock
push
movsl
dec
sahf
clc
loope
and
inc
dec
push
test
int3
popf
adc
pusha
mov
imul
cmpsb
xor
mov
movsb
sub
adc
cmp
das
add
adc
ss
out
ss
aam
xchg
and
subl
cmpsb
mov
insb
jnp
jg
aaa
inc
jp
pop
inc
push
inc
fs
and
sahf
inc
mov
mov
loop
cmp
dec
fwait
dec
cs
lret
sti
dec
lret
xchg
sub
and
push
daa
cmpsl
mov
jo
sbb
sbb
cmpsl
je
mov
mov
decl
cmp
dec
bound
insl
mov
fisubrs
dec
int
push
jg
les
pop
dec
cmp
push
test
cmp
and
or
pushf
lret
push
sbb
fcomps
fcmovnb
jg
cmpb
lahf
test
mov
roll
stos
rcr
inc
push
mov
push
popf
xchg
cwtl
pop
inc
outsb
int3
push
xor
pop
and
pop
lods
lret
jmp
sbb
das
mov
fnstsw
insl
jecxz
jnp
adc
push
mov
fldt
hlt
fnstsw
inc
add
daa
data16
pop
ret
mov
test
icebp
inc
push
add
mov
or
icebp
mov
dec
jecxz
xor
pop
mov
sbb
mov
leave
stos
add
dec
fucom
pop
mov
imull
sbbb
sub
inc
shrl
cli
lods
dec
mov
aaa
shl
sbb
mov
push
fidivrl
jns
add
cltd
dec
mov
sub
rcll
push
pop
mov
cmovbe
mov
push
std
data16
adc
lahf
dec
outsb
repnz
mov
mov
dec
add
iret
out
push
dec
leave
mov
icebp
fmull
pop
push
shl
sub
pop
lds
jmp
sbb
pop
pop
jo
dec
out
pop
mov
jge
jne
sbb
loope
mov
insl
add
push
xchg
xor
in
fisttpl
cs
or
pop
lret
pop
cmp
push
aam
mov
or
and
mov
testl
jo
dec
cltd
and
sti
rorl
int
xchg
inc
in
push
mov
jbe
dec
and
xchg
adc
xlat
jl
inc
push
dec
lods
out
lock
test
jmp
dec
push
clc
cmpsl
fisubs
cmpl
mov
pop
ret
aas
inc
stos
cs
sub
sti
mov
jg
inc
or
xchg
add
inc
pop
or
gs
jns
mov
shrl
inc
push
push
cltd
xchg
jnp
mov
lcall
inc
jg
xchg
aad
xor
inc
add
xchg
inc
cli
add
xor
jb
popf
test
mov
mov
xor
cmp
cli
jnp
mov
sub
xor
xor
mov
pop
sbb
inc
fnstenv
mov
test
xchg
in
rclb
xor
adc
mov
push
sbb
dec
gs
ret
inc
std
lcall
pop
sub
shr
cmp
mov
adc
mov
add
push
arpl
shlb
sbb
cmp
mov
popf
sbb
push
push
push
adc
mov
insl
out
jmp
cli
mov
jecxz
push
faddl
lret
xchg
test
test
pop
popf
sti
jp
rcrl
adc
call
push
push
push
ds
add
adc
jb
mov
cli
lret
enter
cmpl
mov
movsb
fmuls
ss
pop
cmp
pop
mov
ret
xchg
dec
daa
push
jecxz
pop
stc
das
mov
dec
dec
pop
sti
jne
jl
xor
sbb
inc
stos
and
ret
pand
push
xor
add
add
outsl
jo
pop
jo
jg
adc
lock
inc
add
xchg
shrl
jns
sarb
push
pop
add
jns
dec
jae
xchg
pusha
inc
sub
popa
and
lret
mov
xor
mov
cmc
push
push
sbb
mov
movsl
xor
decb
jno
pushf
dec
jmp
popf
repnz
sub
add
call
inc
das
jmp
mov
jmp
mov
sbb
add
pusha
mov
or
cltd
outsl
jns
xor
push
push
push
xchg
mov
xchg
mov
stos
ja
jae
xor
jmp
sahf
in
mov
adc
int3
mov
sub
imul
jle
sbb
add
adc
add
adc
scas
pushf
dec
xor
insb
inc
xchg
adcb
xor
xor
sub
bound
sbb
rolb
xchg
ja
pushf
scas
xor
gs
sub
imul
notb
ds
popf
test
sbb
in
dec
notl
jb
dec
cmp
cli
arpl
enter
dec
popa
sbb
stos
xor
xchg
add
sbb
lret
subl
inc
xchg
iret
pop
repz
out
jg
mov
dec
jg
xlat
je
fistps
mov
mov
imul
xor
sti
nop
jbe
mov
cmp
movsb
jno
out
cmp
xchg
adc
or
add
cli
xchg
lret
or
jbe
int3
add
jecxz
enter
loope
add
ret
lret
pop
cmp
dec
imul
mov
fwait
sub
aas
dec
pop
mov
sti
xchg
lods
pop
add
xor
jae
xchg
sub
sub
adcl
dec
insb
addl
fs
lock
scas
in
sbb
mov
jg
push
mov
adc
shrl
inc
gs
inc
mov
fisubs
sbb
cltd
and
pushf
pop
das
pop
or
pop
arpl
movsb
movsb
xor
in
gs
pop
add
out
lret
call
sub
adc
loopne
daa
adc
and
xor
ret
pop
pop
int
mov
fs
fldt
adc
loope
roll
or
mov
xchg
das
pushf
repz
push
mov
ja
xchg
inc
arpl
cli
add
idiv
fwait
je
test
xchg
cmp
xchg
jbe
ret
andb
loopne
inc
inc
adc
rorl
pop
mov
push
mov
ret
imul
sarl
subb
mov
out
lods
les
test
lret
sub
daa
aam
adc
arpl
lret
xchg
in
pop
pop
xchg
call
sahf
lods
pop
and
rclb
or
pop
xor
addr16
sbb
rcrb
xchg
enter
push
cmp
aas
xchg
add
je
pop
out
cmp
fists
shlb
dec
lret
fiaddl
pop
pop
jmp
mov
sbb
mov
les
mov
lock
xchg
scas
jno
cmp
sub
insb
sub
sub
dec
pop
insb
xchg
fisttps
lcall
and
je
push
sbb
cmp
shlb
cmp
cmp
subb
jae
xchg
repnz
dec
movsl
loop
stos
icebp
pop
scas
pusha
and
clc
sbb
lcall
scas
inc
arpl
cltd
sbb
xchg
dec
cmpsl
jg
adc
or
std
in
dec
cltd
pop
cmc
movsl
or
repz
ror
mov
fcoms
pop
lret
mov
mov
pop
inc
aad
repz
sbb
sub
lahf
call
mov
xchg
insb
xor
adc
iret
adc
sbb
sub
mov
pushf
loopne,pn
scas
pop
leave
inc
lret
aas
and
aaa
punpckhbw
bound
dec
sub
dec
scas
iret
sbb
xchg
mov
ficomps
sbb
outsl
push
call
bound
das
pusha
daa
push
sbb
xor
sbb
mov
cmp
call
add
call
int
and
flds
orl
imul
movsb
test
push
mov
clc
sbb
mov
in
lret
shr
sub
inc
insb
fstps
ds
mov
test
jle
jae
aas
cmpl
js
mov
lds
mov
loop
mov
rorb
add
xchg
into
add
mov
sar
add
je
jnp
popa
cmp
or
imul
popa
and
add
icebp
mov
enter
and
cmovae
enter
stos
insl
insl
aas
ret
push
xchg
cmp
mov
leave
pop
aam
imul
inc
out
jae
in
loop
and
pop
stc
daa
add
xor
insb
pop
adc
sub
cmp
ds
fsubrs
xchg
dec
fs
cmp
lret
sbb
jle
aas
lret
leave
sub
sbb
mov
xchg
lahf
cld
imul
mov
scas
sbb
ret
mov
inc
out
cltd
jno
xchg
push
icebp
or
xor
cmc
test
adc
or
push
xchg
lret
add
inc
or
jnp
inc
orl
lahf
jnp
into
in
gs
pop
push
scas
sbb
mov
and
in
int
pop
fdivrl
mov
sbbl
testb
in
testb
xchg
cwtl
loop
popa
addb
scas
in
jns
ltr
aam
repz
mov
jp
faddl
jl
jbe
ds
xor
pop
xchg
test
jae
sub
rorl
lds
enter
cmp
add
les
dec
shl
and
cmp
fistpll
icebp
adc
cmp
nop
cmpsl
sbb
mov
jne
pop
aam
cld
pushl
test
adc
and
cmc
mov
xchg
jmp
sbb
iret
xor
fcmovnu
cli
xor
jno
repnz
xchg
pslld
loope
push
and
or
cmp
jecxz
stc
test
lcall
xor
push
pop
lea
test
aad
popa
loop
bound
jl
pop
pop
jo
ljmp
xor
and
or
cmp
nop
ret
sub
in
cmpsb
fimuls
leave
scas
xlat
icebp
cs
sbb
adc
mov
inc
push
jae
lret
adc
loop
lods
push
fimull
inc
adc
xor
sub
jmp
stos
cmc
scas
ss
test
sbb
sbb
dec
loop
inc
fdivrl
mov
in
xor
sub
pop
inc
add
aaa
arpl
shll
mov
jmp
push
xchg
dec
sahf
or
lahf
lock
iret
inc
sarl
jnp
ss
sti
js
int
lea
or
test
pop
mov
mov
cmp
popa
std
pushf
cld
mov
jge
sbb
lods
and
subl
out
or
dec
xor
xorl
outsb
and
lahf
es
xor
aaa
mov
xchg
hlt
mov
push
in
xchg
dec
aas
push
sbb
idivb
lahf
jne
mov
and
fstpt
mov
aaa
popf
sbbl
xor
jns
mov
lods
insb
cmpsl
push
push
psubw
sbb
test
test
lods
in
inc
inc
movsb
pop
inc
das
jnp
int
xchg
xor
std
push
mov
dec
mov
lcall
xor
cltd
mov
adc
xor
xor
xchg
add
cmc
xchg
hlt
sub
mov
inc
dec
mov
shrb
add
pop
hlt
into
lock
outsl
mov
jp
sub
pushf
adc
mov
pop
xchg
mov
sbb
sub
bound
lcall
mov
or
push
enter
test
lds
dec
mov
xchg
cmp
fsub
mov
xor
add
add
pop
loopne
outsb
ret
lea
ds
das
mov
xor
cld
inc
mov
aaa
test
mov
lock
inc
test
xchg
movsb
dec
xchg
addb
xor
leave
in
out
mov
dec
imul
loope
xchg
out
iret
stos
clc
test
mov
es
mov
jnp
sbb
mov
push
mov
push
dec
jle
pop
aaa
mov
out
jge
pop
mov
pop
pusha
fcmovbe
cmp
dec
int3
mov
invd
jp
imul
lock
ja
aad
jnp
push
out
cld
jmp
pop
lods
inc
jge
or
inc
mov
inc
xchg
out
es
lds
mov
das
pop
mov
pop
add
mov
sub
dec
int
push
mov
lcall
out
dec
mov
mov
lods
or
dec
cmp
in
lods
dec
clc
or
add
cwtl
fwait
or
call
lret
mov
sbb
out
add
add
pop
jno
jae
orb
lret
mov
cmp
jmp
inc
je
sahf
jecxz
mov
stc
dec
cmpsb
aas
and
dec
das
imul
sbb
cmp
xlat
push
mov
push
push
or
ss
xchg
or
sar
das
or
mov
jmp
daa
scas
iret
repz
xchg
pop
cld
mov
push
mov
xor
sub
add
xor
sub
test
push
mov
fisubrl
testb
or
sub
outsb
in
add
in
dec
cmp
jno
fbld
popf
jae
test
leave
pop
and
orl
push
lcall
cltd
cmp
bound
xchg
imul
outsb
jecxz
cs
mov
aaa
adc
jmp
lods
add
test
fstpl
out
cmpsb
fidivrl
dec
mov
std
jecxz
xor
lock
cli
jne
sub
fcoms
sbb
xchg
cwtl
add
incl
and
out
sbb
movsl
cltd
and
xchg
incl
fldcw
jb
cwtl
cmp
sub
fwait
sbb
pop
adc
lods
mov
adc
movsl
cld
cld
mov
leave
dec
push
jg
mov
add
cmp
outsb
cmpl
sub
lds
mov
push
sbb
movsb
stc
or
loope
sub
pop
mov
push
loope
mov
es
pushf
cmpsb
inc
xor
cmp
popf
push
outsb
iret
add
imul
cltd
mov
and
pop
stos
lcall
jge
fcmove
sub
stos
addr16
lds
test
jg
popa
imulb
pop
dec
cli
insb
jae
lock
add
mov
ljmp
and
mov
inc
mov
mov
dec
push
fidivl
push
inc
into
notl
or
jnp
lcall
cltd
push
dec
pop
xor
cmpsb
xchg
mov
xchg
mov
push
mov
dec
inc
xchg
hlt
push
xchg
xchg
rcrl
inc
enter
xor
cmovle
lock
push
test
dec
dec
and
mov
cmp
das
xchg
push
dec
sbb
ja
mov
jne
mov
mov
push
cmc
adc
fdiv
mov
ret
mov
xchg
sub
lea
jbe
pop
iret
or
int3
enter
test
imul
mov
pop
mov
aam
jl
in
into
add
dec
aam
sub
sbb
mov
xor
jle
in
adc
pop
fldl
cmp
mov
mov
test
inc
mov
mov
sub
mov
addl
fdivl
adc
fistpll
sub
and
xor
push
add
or
sbb
push
inc
dec
push
lahf
dec
cwtl
insb
mov
loope
pusha
int
mov
sbb
push
insl
mov
or
xchg
call
adc
popa
xchg
cmp
inc
ret
mov
mov
ja
add
sub
or
je
mov
into
lcall
popf
int
xlat
aad
gs
outsb
inc
je
stc
test
inc
sbb
mov
jns
ss
sbb
pop
push
ljmp
call
jae
fisubrs
fisubrs
jge
xchg
sbb
mov
adc
dec
jb
jae
push
dec
mov
sbb
inc
push
sti
cld
add
jg
popa
fisubl
scas
push
imul
insb
fldcw
imul
lds
cmp
movsl
les
cmpsb
push
mov
sbb
andl
into
jl
pop
jmp
cmp
inc
xchg
loopne
je
cmp
sub
inc
mov
insl
ds
repz
or
mov
jb
jg
and
iret
jp
call
xchg
sub
test
jnp
jmp
in
xchg
lock
sub
adc
mov
lret
sbb
mov
adc
jbe
fldl
inc
fsubrp
test
dec
es
lcall
shlb
scas
jae
loope
popf
fdivl
lret
add
sub
int
adc
das
mov
mov
lret
xchg
cmc
and
in
lock
push
mov
das
xlat
arpl
hlt
pop
jae
int
stos
cwtl
and
dec
lret
fwait
xchg
xor
mov
popf
subb
arpl
sahf
jnp
fcmovb
lcall
push
sub
ljmp
subl
pop
xor
das
jl
subl
xchg
jge
cltd
data16
mov
sub
push
xor
mov
jge
xchg
scas
shrb
mov
dec
xor
mov
mov
test
sahf
clc
repz
xchg
movsb
shrb
or
push
call
sbb
lds
into
sbb
mov
inc
dec
sti
mov
or
inc
aas
dec
jmp
dec
add
std
xchg
imul
aad
jb
or
mov
jle
push
jge
xchg
repz
loop
push
cltd
jle
loope
xchg
xchg
popf
pop
pop
push
hlt
push
sub
mov
test
push
pusha
mov
inc
daa
imul
mov
mov
repnz
cwtl
xor
fildll
mov
jae
mov
mov
cmp
loop
and
repnz
es
call
lods
movsl
dec
lea
lret
cltd
xchg
jge
stos
rcll
mov
leave
lcall
jo
jo
jne
fisubs
icebp
cs
ret
lahf
jecxz
sub
cmpb
data16
cmp
sbb
outsb
pop
rorb
inc
scas
or
sbb
clc
dec
jecxz
pushf
ss
pop
mov
and
mov
loop
js
push
in
xchg
adc
xor
jb
adc
fdivl
inc
popa
mov
or
mov
mov
sub
leave
sbb
inc
gs
inc
popa
inc
pop
in
arpl
mov
add
mov
jns
mov
notb
sub
rcll
inc
jns
adc
adc
inc
dec
jo
push
or
cmp
sbb
cwtl
push
add
xchg
mov
insl
mov
sahf
dec
mov
mov
mov
aad
insl
in
mov
cmpsb
into
sahf
add
jno
cmpsl
jae
xor
repz
jbe
jb
jp
sarb
cli
ljmp
sbb
or
test
insb
div
adc
pop
jne
into
pop
push
mov
mov
push
fdivs
pop
pop
and
pop
sbb
adcl
and
pop
push
fisubrl
dec
add
int3
mov
cmp
test
ret
stos
ret
gs
or
cmp
jge
or
or
or
test
popa
and
imul
loop
sub
adc
and
das
cmpsb
mov
push
jmp
daa
adc
shll
incl
loopne
mov
aam
push
inc
pop
jnp
mov
mov
insl
gs
stos
scas
dec
xor
mov
mov
pop
orl
fisttpl
mov
cmp
outsb
popf
or
inc
mov
xor
stc
adc
rep
dec
sarl
test
sbb
sbb
jmp
mov
cmp
dec
call
sbb
mov
push
jne
push
adc
add
adc
into
mov
mov
outsb
loopne
imul
jmp
add
sbb
mov
mov
sbb
pop
or
dec
in
dec
repz
mov
adc
adc
add
imul
lock
es
mov
cmc
lcall
sub
pop
sahf
adc
adcb
sbb
push
jno
sub
pushf
out
int
pop
inc
imul
xor
dec
out
jb
mov
andl
adc
std
scas
jae
sbb
pop
cmpsb
in
dec
sahf
test
cli
das
inc
mov
or
mov
stos
in
pop
sbb
sbb
cmpsl
inc
outsl
aad
inc
loop
jl
jae
lea
stc
mov
imul
scas
sub
flds
into
pushl
adc
aaa
aas
lods
out
rorl
scas
test
inc
xchg
pop
cs
shrb
push
xor
mov
mov
mov
test
or
mov
add
rorb
cmp
lods
adc
add
or
aaa
loope
out
out
xchg
nop
pop
sub
aaa
push
jle
lds
aam
rclb
sub
orl
dec
into
pop
adc
test
insb
lods
mov
fcompl
popa
push
or
lret
pop
test
xchg
jle
ljmp
jle
jg
pop
das
ss
dec
loope
pusha
mov
or
add
dec
cmc
push
in
ret
cmp
sbb
jmp
mov
jb
mov
mov
jne
hlt
cmp
int3
test
jmp
jle
daa
fldcw
lahf
mov
nop
fs
xor
fsub
ds
dec
int
test
out
dec
cmovns
xor
dec
cmp
cmpl
ds
xor
in
lods
adc
jle
shl
pop
je
loope
dec
std
loope
sbb
mov
pop
mov
mov
mov
pushf
sub
fnstenv
and
in
fstps
lret
scas
les
iret
cmp
nop
in
pusha
icebp
xchg
jae
ljmp
repz
sub
jo
movsb
pusha
dec
fcomps
movsl
das
testb
arpl
push
jae
repz
aas
call
jo
push
js
xor
or
sarl
xchg
mov
mov
push
pop
mov
cmp
push
int
shr
popf
dec
lret
xor
cmp
stc
and
jnp
test
dec
jp
sbb
fsubrl
push
cmc
mov
pop
or
sbb
jno
mov
pop
movsl
data16
clc
std
mov
pop
mov
fprem1
pop
and
lock
xchg
pop
lods
dec
cltd
xlat
add
mov
sub
daa
sbb
pop
das
xchg
pop
divl
mov
cmp
gs
cmp
fwait
jno
sbb
aaa
or
outsl
repnz
ja
add
push
addr16
xlat
lea
mov
adc
mov
jne
repnz
push
dec
dec
adcb
nopl
push
mov
popf
sbb
jno
sub
add
jns,pn
loop
adc
icebp
push
mov
lds
ret
and
das
imul
gs
mov
xchg
in
mov
or
hlt
rcrb
out
adc
cltd
sub
imul
imul
insl
scas
fadd
into
popf
fs
jo
inc
mov
icebp
jmp
inc
dec
mov
adc
imul
ss
inc
mov
test
xchg
push
mov
loopne
test
inc
xor
lods
mov
nop
icebp
cmp
push
jbe
add
add
cmp
ficoml
mov
sbb
int
out
test
xor
mov
inc
test
push
lods
add
inc
ljmp
ja
mov
dec
pusha
and
shll
jne
pusha
aaa
sub
pop
aaa
and
push
mul
ror
sub
mov
cmp
cmp
fwait
push
push
aam
addr16
sti
test
xchg
nop
testb
or
aad
subb
jg
jns
sahf
mov
cmp
pop
fs
fmulp
loopne
xor
or
ret
mov
jb
rorl
divb
cmp
es
mov
dec
fildll
sub
in
into
lock
aas
and
adc
add
aaa
inc
xlat
int3
push
pushf
push
and
ss
sbb
jmp
es
stc
and
xchg
leave
outsb
movsl
mov
cmpsb
gs
pop
push
js
push
adc
push
movsb
pusha
popf
cld
lea
mov
or
xchg
pop
fistl
mov
jb
dec
mov
mov
jge
loop
adcl
jno
xchg
std
fwait
sub
pop
and
daa
xchg
sbb
cwtl
outsb
sub
add
sbb
sub
cltd
sbb
xchg
std
in
mov
xchg
sarb
sub
lahf
mov
pop
cli
jo
filds
sub
das
sarl
ret
jnp
cmp
mov
test
movsb
add
mov
mov
addr16
int
dec
in
dec
lret
pop
add
jle
aam
into
cmp
pop
mov
mov
and
mov
xchg
in
ljmp
out
iret
aaa
dec
inc
mov
jns
icebp
nop
mov
nop
xchg
repz
pop
pop
jbe
les
xlat
xor
fninit
lea
scas
adc
xor
out
ja
xchg
divl
shrb
pop
in
pop
sub
mov
xchg
lahf
sub
leave
cmpsb
les
data16
das
cld
push
ljmp
add
imul
insb
out
nop
gs
popf
sub
enter
in
inc
stos
fldl
ffreep
jno
fsubrs
enter
stos
add
mov
cmpsb
mov
push
jecxz
xchg
jmp
test
xchg
stos
std
das
imul
dec
pushf
stos
cmp
sbb
arpl
or
shr
pop
jnp
or
push
psrld
fisubs
mov
je
aam
into
jo
test
mov
fldl
shll
sub
push
rol
sar
rorl
sub
pop
mov
push
mov
cmpsl
andb
xchg
icebp
cmp
adc
adc
adc
mov
dec
scas
pop
aad
cmp
fistps
mov
ret
xor
mov
and
ret
bound
ret
sub
cli
add
mov
inc
mov
in
call
adc
inc
jl
fwait
and
mov
lcall
xchg
mov
cmpsl
jb
out
ret
pop
push
sub
cwtl
xchg
inc
jmp
outsl
jmp
ss
cwtl
mov
cmp
js,pn
inc
andl
cmpsb
xchg
xchg
wrmsr
loope
lods
int3
or
je
popl
dec
push
push
fidivrl
mov
dec
das
push
and
push
xchg
mov
fwait
xchg
dec
ds
inc
and
cmpsb
cld
jecxz
sub
mov
sahf
push
push
dec
xor
rcl
lea
ss
mov
cmp
adc
mov
aaa
push
xor
jnp
jle
divb
std
or
push
inc
jbe
sbb
movsl
scas
jnp
cs
cmp
lock
mov
xchg
xlat
xchg
cli
add
push
or
mov
xor
dec
addr16
sub
les
xor
inc
mov
mov
cmp
dec
mov
cmp
cwtl
clc
jmp
cltd
mov
rcr
and
das
jl
out
jecxz
or
hlt
scas
loope
xchg
or
das
mov
lods
imul
gs
cmp
push
inc
rolb
fsts
cmp
mov
std
out
add
call
stc
orl
mov
adc
fldcw
pop
xlat
aad
pop
arpl
mov
pushf
cmp
push
cmpsl
push
pop
fldl
jl
cmp
out
jmp
sbb
sbb
in
dec
fwait
sahf
je
sub
dec
push
jg
jne
icebp
stos
jge
sbb
add
hlt
and
into
mov
mov
fisttps
xchg
adc
adc
jmp
xchg
andb
clc
ds
adc
int3
sub
sarl
arpl
push
nop
pusha
stc
push
xchg
pusha
ret
sub
fmull
fcmovnbe
push
loopne
and
and
xor
mov
sub
jmp
aas
fsubs
bound
adc
mov
in
and
add
rol
pop
jle
repz
xor
mov
cmp
add
mov
in
gs
dec
pop
nop
sahf
jmp
lret
lods
scas
daa
test
xorb
cli
inc
add
adc
ljmp
cltd
shr
loop
call
test
mov
int3
daa
daa
sub
out
cld
cmp
repz
arpl
out
adc
jl
pop
cmp
xor
decl
cmpsb
push
xchg
into
inc
sub
in
lea
xor
aam
out
call
jb
test
pop
sbb
mov
sub
push
dec
aam
test
or
aam
out
std
pop
scas
xor
xchg
dec
jp
push
popa
or
dec
pop
cmpsl
cmpxchg
and
and
mov
mov
jg
lret
xchg
cmp
int3
loope
and
fdivr
fisttpl
test
xchg
out
rcrl
insb
fwait
inc
cld
mov
test
inc
ds
jne
or
cmp
jns
pop
scas
xor
out
rcr
addr16
sahf
xor
jl
lret
stos
add
mov
mov
pop
push
cmp
jp,pn
rorb
mov
fdiv
mov
test
add
test
fldenv
imul
pop
sahf
les
and
aad
and
lahf
pop
xchg
lods
rcl
mov
or
int
adc
mov
add
xor
std
mov
sbb
push
popa
addr16
repz
ss
stos
sbb
fcmovb
ret
cmp
push
adc
pop
in
roll
cmc
pop
adc
push
push
jl
loope
dec
or
sub
sub
pop
mov
jge
mov
outsl
xchg
sub
jns
pop
popf
jp
std
aam
sbb
mov
push
xchg
pop
mov
inc
fcompl
adc
push
test
sub
xchg
xchg
sahf
lock
push
dec
rcll
xchg
fbstp
mov
ret
out
std
jae
sarb
mov
scas
sub
sti
sbb
xorl
out
rol
jmp
pop
sbb
push
hlt
movb
jo
clc
mov
xchg
mov
jae
xor
jmp
sub
sbb
mov
nop
add
lret
das
jmp
jnp
or
mov
jge
fnstenv
mov
jb
outsl
dec
out
mov
in
ret
movl
fmull
jge
pop
jne
push
sbb
in
push
inc
or
xchg
or
sbb
add
dec
xchg
loopne
dec
sahf
jmp
mov
fldl
call
pusha
imul
pop
bound
loop
sub
insl
xor
out
mov
push
jb
xor
cmp
inc
lret
test
out
subl
xor
jmp
stc
stos
hlt
std
adc
clc
nop
inc
out
rorb
xchg
pop
or
pop
test
or
pop
cltd
ja
pop
mov
popa
mov
mov
mov
je
test
or
arpl
sbb
out
fwait
mov
stc
dec
add
adc
leave
je
inc
test
ret
jbe
jnp
ret
jnp
mov
shlb
negb
out
lea
inc
xchg
je
sarb
arpl
pop
into
loopne
in
mov
sub
cmc
sbb
add
iret
dec
shlb
rcll
sub
mov
subl
xchg
cs
rorb
bound
fstpt
jmp
jl
in
insb
lahf
dec
inc
inc
lock
adc
cld
jb
dec
jp
sbb
movsb
xor
add
lea
ljmp
cltd
xor
and
and
sub
ja
lock
das
cmp
inc
dec
jcxz
push
jb
pop
repnz
mov
lods
xor
outsw
or
leave
sahf
and
stc
sub
ror
shll
fcompl
push
mov
pop
xlat
lcall
mov
movsl
dec
movsb
daa
sbb
imul
mov
cli
inc
sbb
mov
sbbb
jae
in
jl
out
rcll
stos
aam
pop
cmp
mov
sti
out
jp
imulb
sahf
jo
lods
dec
pop
jbe
adc
xor
fsts
or
xchg
jns
push
shrb
lahf
je
lcall
pop
push
mov
rcrb
xchg
xor
lret
or
movsb
cwtl
mov
mov
inc
xchg
ljmp
jns
xchg
adc
cmp
aaa
adc
pop
stos
lcall
shlb
push
adc
xchg
out
sbb
mov
inc
loopne
sbb
movsb
mov
xlat
lcall
sub
mov
xchg
mov
inc
out
mov
into
cmp
mov
adc
js
pusha
xor
pop
dec
inc
orb
mov
xchg
enter
mov
jecxz
fsubs
push
mov
mov
mov
mov
cmc
pop
or
jle
push
data16
insb
adc
jne
movl
or
dec
or
pop
mov
sub
jg
movsb
jnp
cmc
mov
inc
xor
out
mov
gs
fs
adc
in
ret
lret
std
mov
or
popf
mov
int
mov
stc
inc
popa
mov
or
pop
or
push
push
daa
mov
int
loop
gs
sub
xrelease
adc
mov
pop
and
imul
lock
aaa
adcb
inc
xor
mov
add
outsl
aas
in
leave
icebp
push
pop
and
out
push
jnp
shlb
enter
push
int
lock
das
xlat
movsb
mov
sbb
cmp
hlt
mov
jnp
fs
adc
mov
in
jmp
dec
pop
add
aam
repz
pop
mov
lods
inc
fcomp
iret
sbb
loop
xchg
in
mov
loopne
popa
arpl
cwtl
jecxz
cltd
int3
pop
nop
adc
incb
adc
inc
or
xor
hlt
cmp
call
aam
inc
cmpl
inc
fimull
cmpsl
mov
jnp
mov
adc
or
sbb
pop
or
xor
inc
pop
jno
pop
loopne
fcmovnbe
xchg
aas
shlb
frstor
cmovge
pop
push
outsw
xchg
and
pop
aam
adc
popa
jg
dec
aaa
rcll
scas
repnz
mov
mov
push
loop
push
inc
mov
sarb
adc
xor
insl
lret
int3
scas
pop
inc
sahf
mov
cld
inc
mov
mul
xchg
dec
mov
sub
dec
fcomi
mov
test
dec
in
outsl
inc
enter
jmp
fdivl
rorb
or
jmp
lea
sti
repnz
push
lret
loop
sahf
in
sbb
xchg
push
inc
mov
pop
fiadds
mov
outsl
jecxz
cmp
fcompl
add
lds
or
mov
and
push
lahf
sahf
idivl
rcr
pusha
dec
movsb
popl
sbb
sub
pop
scas
ret
fisttpl
adc
cwtl
addr16
xchg
add
insl
sub
push
ds
jmp
jmp
or
mov
fimull
inc
loopne
add
leave
and
daa
fildll
cmp
inc
jg
arpl
pop
jbe
dec
mov
xchg
shll
xlat
jno
sahf
push
int3
push
jl
enter
popa
mov
dec
jg
push
in
ret
sbb
stos
inc
movsb
and
sarl
in
push
xor
ret
lods
sti
adc
mov
idivl
mov
sbb
test
in
mov
insb
jp
addr16
jns
mov
cmp
jns
imul
adc
mov
sarl
xchg
cmpl
lds
mov
push
mov
scas
mov
ficompl
fsubp
cmp
push
shlb
sbb
cmp
cld
lods
sahf
loope
dec
push
ljmp
xor
sub
aas
aad
hlt
mov
fisubl
mov
push
les
push
jne
cltd
lret
xor
jle
in
ret
xchg
mov
xchg
inc
push
rol
and
sbb
mov
mov
adc
stc
add
add
mov
jge
sub
fcompl
xor
ljmp
cmp
and
jae
gs
cmp
mov
scas
adc
mov
xor
cli
mov
push
xchg
and
rorl
fimull
dec
es
adc
jns
imul
fucomp
cmpb
dec
lods
xor
and
arpl
pop
mov
mov
xor
dec
lcall
mov
dec
or
rolb
sbb
xor
sbb
dec
adc
ja
imul
xchg
mov
or
adc
andl
test
cmp
rclb
mov
lds
sub
addb
add
popa
aad
cli
test
aam
aaa
dec
ret
rcl
mov
mov
jns
ss
jns
xchg
dec
or
xor
test
inc
pop
or
dec
mov
pop
pop
mov
and
pop
mov
test
inc
stc
pop
inc
xchg
or
out
and
andl
test
addb
cmp
mov
add
adc
ljmp
out
dec
fiadds
mov
inc
in
mov
hlt
aaa
or
dec
and
and
jo
mov
fidivl
adc
xchg
cli
sbb
fmuls
sub
xchg
dec
add
test
test
jg
push
mov
imul
out
fisubl
adc
inc
xor
inc
xchg
xchg
mov
mov
sti
popl
das
xchg
jno
jbe
mov
mov
bound
xchg
clc
das
das
addr16
addr16
push
cli
stc
aas
sahf
sahf
ljmp
dec
addl
sub
cli
or
sti
cmp
fmulp
xchg
imul
inc
mov
xchg
pop
xor
mov
scas
mov
cwtl
int
js
js
aad
add
dec
and
and
inc
ljmp
ja
mov
outsl
and
fsubrl
ss
rorb
or
mov
roll
xchg
sti
imul
sub
in
xor
pusha
cmp
xlat
sti
sbbb
lret
push
add
mov
and
lods
loope
imul
pop
dec
pop
iret
jge
inc
adc
cwtl
pusha
in
jge
mov
outsb
or
xchg
pop
adc
paddusb
test
lret
icebp
cmpsl
pop
sub
dec
stos
ljmp
dec
adc
pop
push
ficoms
movsl
xor
inc
stos
test
push
xor
fstpt
ljmp
push
imul
jmp
and
mov
out
mov
pop
ss
xlat
cmc
pop
scas
pop
pop
sub
std
fnstcw
sbb
xchg
clc
push
call
cwtl
add
jns
out
idiv
mov
loopne
xchg
call
pop
cld
sub
adc
lock
ljmp
xlat
imul
cs
push
in
mov
xchg
shlb
lahf
subb
out
mov
inc
in
push
xchg
pop
mov
xor
mov
faddp
push
adc
and
insl
fxch
subb
and
lret
mov
mov
jns
clc
insl
dec
lods
mov
xchg
daa
enter
dec
js
data16
inc
fs
cmpsl
repz
les
in
mov
push
sbbl
js
dec
dec
mov
mov
js
fimuls
popa
movsb
gs
fdiv
lods
leave
push
push
mov
movsb
sub
or
dec
and
loope
or
icebp
dec
pop
testb
adc
inc
mov
sti
cwtl
jnp
add
cwtl
imul
fistps
sbb
push
jecxz
out
jb
lods
data16
mov
in
out
int
push
ror
mov
sbb
cs
push
call
in
fs
ljmp
jecxz
clc
cli
xchg
and
xor
bound
jae
sub
in
and
inc
xor
call
out
inc
sub
sub
ja
repnz
inc
cmp
gs
push
shrw
add
inc
jno
or
cmp
dec
sahf
push
data16
bound
shrb
rorb
std
movsb
addl
mov
cld
pop
ljmp
pop
sub
dec
xchg
fbstp
dec
jg
push
jle
push
test
mov
jb
xchg
shll
in
fcompl
add
std
scas
adc
xchg
in
jp
fdivrp
dec
pop
ja
loop
ret
mov
sub
out
xor
fwait
sbb
inc
xor
ficomps
loop
mov
cwtl
pushf
dec
lea
repnz
movsl
mov
cmp
xchg
add
sbb
push
pop
mov
push
cmp
pushf
movsb
jno
adc
pop
jb
insl
aaa
xchg
mov
lahf
push
rclb
js
cmp
popf
scas
pushf
cwtl
cli
mov
aam
mov
loopne
pop
jmp
in
jno
mov
inc
mov
add
jnp
ret
sub
iret
sbb
leave
jo
mov
lea
cmp
cmpsl
sub
lcall
sub
int
jecxz
xor
inc
icebp
push
xchg
fsubl
fistps
aam
xchg
xchg
or
adc
hlt
xchg
lds
les
mov
add
inc
insl
sub
mov
orl
loopne
ds
mov
loope
sbb
dec
call
data16
mov
adc
inc
push
addr16
call
fcom
ds
adc
scas
lret
cmpsl
mov
ficomps
sti
dec
popa
loope
mov
sbbb
stos
test
sbb
lods
push
cmp
xor
das
ret
or
jne
push
test
sub
fdivrs
mov
jecxz
icebp
fcmovbe
xchg
out
jns
cmp
mov
loop
add
xchg
loopne
mov
test
fs
and
insb
test
jge
xlat
mov
sub
jnp
imul
stc
ja
push
test
scas
test
arpl
pop
jecxz
subb
xchg
popf
dec
dec
mov
cmp
aas
adc
imul
into
mov
xchg
insb
mov
cwtl
jmp
stos
and
and
sbbb
mov
int
or
inc
ret
out
push
adc
mov
and
out
imul
pop
dec
test
sub
cmpl
in
xchg
jl
sbb
jmp
sub
lret
push
shll
int3
sbb
and
push
pop
cmp
sub
ljmp
jmp
jg
xor
cmc
pusha
dec
mov
or
cwtl
movsl
and
int3
xchg
jae,pn
push
push
xchg
pop
bound
jne
and
mov
incl
adc
pop
push
and
mov
push
loop
mov
das
std
push
or
sub
mov
cltd
dec
mov
xchg
popa
cmp
je
outsb
cltd
movzwl
ret
ds
les
dec
pop
cld
ret
lods
cmp
jb
ljmp
fneni(8087
icebp
insb
pop
cld
cmp
mul
imul
andb
lret
cmp
insb
mov
or
sahf
ljmp
sti
add
sbb
xlat
cwtl
push
popa
push
sarb
xchg
push
add
lds
fwait
leave
mov
and
xchg
rcrb
inc
inc
mov
pop
inc
pusha
add
inc
pusha
mov
sbb
imul
jmp
cmp
mov
pop
sub
xchg
lret
pop
add
mov
pop
scas
xchg
sbb
push
sub
sub
shrb
push
outsl
cmp
cwtl
push
inc
mov
lds
mov
dec
and
out
push
dec
fisubrl
pop
and
dec
mov
popf
pop
fdivl
repnz
mov
mov
mov
notb
mov
sbb
mov
inc
mov
int3
push
and
xor
pop
into
and
out
movsb
mov
lock
mov
lds
insb
cmc
int3
push
sub
xor
push
sbb
daa
inc
sbb
pop
popl
mov
and
push
scas
in
movsl
adc
inc
xchg
repnz
mov
xchg
cmpsb
sbb
repnz
xor
fnstenv
js
adc
sarl
ret
out
ret
jns
icebp
or
ss
cmpb
rorl
std
mov
mov
inc
dec
stos
jns
loopne
jmp
jl
loop
xchg
jge
into
in
jg
xchg
jnp
sbb
out
pushf
cmp
rcr
dec
nop
nop
sbb
mov
lahf
imul
cs
outsl
addr16
xchg
test
xor
pop
inc
mov
xchg
pop
add
mov
test
dec
ror
mov
push
pop
subl
dec
add
adc
je
push
mov
out
int3
mov
mov
aaa
fisttpl
fs
xor
test
jge
dec
sarl
dec
cmp
mov
jno
inc
push
push
adc
iret
pop
push
cmpsl
xchg
pop
test
dec
cmp
std
int3
shlb
int
mov
popa
mov
push
add
iret
adc
pushf
dec
scas
rcrb
add
cli
int3
pop
or
add
lock
mov
mov
dec
insl
cwtl
test
loopne
pop
lcall
push
or
jp
mov
sbb
pop
mov
das
lea
hlt
lahf
xor
shlb
ret
add
ja
adc
fnstcw
out
jmp
cltd
adc
sbb
rorl
lds
jecxz
mov
insl
inc
shrl
push
mov
xchg
pop
ss
pop
inc
int3
cmp
ss
in
scas
lret
xchg
push
in
mov
jp
cwtl
fcoml
sub
dec
mov
cmpsl
lods
xchg
jle
pop
das
sub
int
push
jl
push
mov
ljmp
and
dec
push
shlb
push
dec
xlat
insl
push
adc
jbe
jge
pusha
pop
cmpl
insl
shrb
dec
push
add
out
or
sub
popa
mov
fstl
pop
mov
mov
scas
or
stos
out
dec
shll
mov
mov
mov
or
cs
test
cmp
push
clc
xchg
mov
sbb
push
mov
repnz
sub
and
xor
add
cmp
icebp
sbb
loope
mov
mov
sub
ljmp
int
mov
cmpsb
push
ss
lahf
in
mov
push
push
addr16
mov
idivl
xor
rcrl
mov
leave
cmp
pop
test
insl
sub
push
cltd
ror
in
sti
push
mov
sbb
mov
jmp
dec
into
shl
je
movsb
mov
xchg
mulb
jae
stc
xor
cli
sbb
add
mov
or
fsubrp
mov
inc
inc
inc
movsb
call
sub
jo
subb
lcallw
loopne
sbb
arpl
lea
cmpsb
les
mov
sbb
inc
push
dec
in
loope
aam
mov
mov
pop
mov
stos
fdivr
or
dec
aas
gs
fcmovnu
jecxz
cmp
xchg
xor
into
shrb
xor
in
shrb
jmp
scas
push
cwtl
jle
insl
xchg
add
dec
dec
nop
fisttpl
xor
movsl
cmp
add
outsl
das
push
xlat
sub
cmp
int3
mov
push
data16
nop
add
int
pop
add
mov
and
sub
mov
pop
pushl
mov
mov
add
mov
mov
hlt
gs
push
repz
mov
je
adc
fidivs
jno
aaa
sahf
cmp
push
outsb
add
sti
dec
sub
js
and
mov
clc
fldenv
and
shl
aas
xlat
mov
jl
gs
inc
adc
jno
xchg
and
sub
out
bound
aaa
scas
fs
jae
in
hlt
mov
jge
les
in
dec
jge
pop
or
out
test
mov
add
std
notl
cmp
lret
addr16
pop
add
fs
stc
decl
pushf
and
jmp
jmp
or
aam
push
push
sbb
insl
movsb
inc
jns
fcom
dec
fldt
push
stc
and
movsl
aad
cmpl
xchg
ficoms
adc
daa
out
inc
jo
or
lahf
jbe
popl
mov
fmul
push
cwtl
pop
jb
loop
add
data16
mov
adc
fwait
cld
loop
and
sbb
add
xchg
mov
pop
and
cmp
ljmp
sbb
push
push
xor
ljmp
fsub
lock
out
inc
adc
subb
ficomps
cwtl
lods
mov
test
sub
jmp
jnp
mov
mov
jb
out
outsl
push
mov
cwtl
push
arpl
jg
jecxz
shll
vhaddps
stos
imul
sbb
sub
lcall
imul
xor
add
repz
sbb
pop
dec
leave
xlat
dec
jns
stc
clc
cs
pop
push
mov
lret
leave
sub
fcompl
out
pop
in
testb
in
push
movsl
loop
frstor
adc
out
dec
shrb
jno
cwtl
push
das
sbb
push
jg
call
mov
mov
sbb
out
sbb
xchg
ret
mov
loop
xchg
arpl
lock
pop
shlb
mov
jo
adc
and
dec
imul
sub
push
sahf
fnsave
or
sub
adc
mov
les
out
out
push
jnp
fsub
inc
push
or
fs
fwait
cmpsb
inc
sbb
es
or
lods
pop
rcll
mov
leave
dec
hlt
xchg
xorl
adcl
adcl
in
dec
mov
cmp
or
enter
pusha
aad
or
xchg
mov
loope
xchg
cwtl
popf
divl
loopne
cmp
stos
aad
mov
inc
mov
push
rcrb
push
mov
and
jmp
scas
cmpsl
push
out
jl
mov
sub
pushf
iret
lods
pop
stos
sbb
in
stos
mov
push
xchg
push
ja
mov
push
aad
orb
ret
jae
inc
test
jns
repnz
xor
jge
and
outsb
sahf
jecxz
ljmp
fldz
js
lret
sahf
sub
xlat
mov
push
cltd
sbb
test
loopne
and
ljmp
xor
cwtl
jns
sub
ss
stos
push
jo
sub
push
imul
test
xchg
dec
cmp
popf
add
lock
cmp
sbb
lock
dec
daa
ret
insb
add
das
cmp
rcrb
fcmovnu
sbb
daa
lds
mov
jp
idivl
lret
mov
mov
mov
pop
jmp
sub
xor
adc
push
mov
push
mov
rcll
outsb
jp
xchg
push
xchg
xor
mov
pusha
sub
scas
xchg
out
jle
popa
push
xchg
pop
pop
inc
push
ret
sub
stos
mov
jo
sti
hlt
test
iret
std
add
stc
or
mov
int3
push
add
lcall
leave
es
xchg
inc
push
sbb
push
sarb
mov
dec
and
xchg
icebp
cld
push
push
aad
in
data16
imul
out
cwtl
sbb
mov
inc
fs
in
loope
dec
aad
mov
fs
or
pop
xor
cmc
xor
js
mov
sub
addb
xchg
out
stos
imul
dec
ljmp
fimuls
stos
ficoms
cmp
dec
pop
ret
fdiv
iret
movsl
mov
rolb
insl
das
ret
pop
orb
mov
push
xchg
ja
into
mov
pop
sarb
lret
mov
adc
movsb
aas
outsb
and
sbb
add
lea
not
scas
mov
ret
cmpsb
push
push
mov
jns
cltd
pop
cmp
push
dec
cmpb
fidivrs
in
call
push
and
cmpb
or
mov
push
aas
xor
mov
cmp
call
cmpsb
push
insb
in
xchg
call
lret
sub
test
and
test
xor
in
pusha
xchg
push
and
sbb
push
jno
jb
inc
dec
lcall
mov
dec
jb
and
std
jae
push
fstl
cmp
mov
inc
cli
imul
xchg
or
shl
sahf
cmp
fisubrs
push
add
pushf
in
lods
push
neg
push
jb
sbb
enter
lret
add
in
cmpsb
jns
popa
std
pushf
addb
mov
mov
in
loop
insb
xor
rorl
pop
js
ja
daa
dec
pop
cmp
call
fistpll
enter
addb
enter
jnp
pop
and
jmp
testb
iret
pop
xchg
in
pop
or
popa
cwtl
mov
lret
movsb
dec
mov
xlat
inc
adc
daa
lods
xor
test
inc
sbb
sahf
add
jb
loopne
and
and
jp
jnp
adc
inc
sub
scas
pop
or
adc
jg
push
push
pop
enter
fmull
and
insl
push
dec
repnz
pushf
fldl
mov
adc
call
jg
ror
mov
int
ret
ss
pop
dec
and
sbb
jl
add
xor
and
adc
stc
adc
in
dec
hlt
int3
leave
mov
jns
js
add
mov
or
nop
sub
dec
push
sub
xchg
sub
sbb
mov
ds
int3
cmp
ficompl
sub
cwtl
data16
cmp
lcall
cmp
xchg
js
lds
scas
pop
and
jl
pop
ret
push
fildll
pop
sbb
test
movsb
fdivrs
jo
sbb
inc
mov
ret
dec
and
mov
cltd
sbb
repnz
sbb
insb
pop
pop
ret
sub
out
xchg
mov
dec
inc
fsubrs
mov
mov
loope
add
popa
leave
mov
push
xchg
xor
mov
jmp
mov
dec
bound
or
mov
cmp
mov
mov
sub
add
imul
insb
push
loopne
jecxz
or
sub
or
inc
inc
dec
les
cld
fs
cmpsl
mov
movsb
or
inc
pop
xchg
xor
outsb
test
dec
stc
pop
test
adc
loopne,pt
dec
ja
popf
jge
or
xchg
sub
test
cs
rcr
and
out
shl
loopne
adc
psubq
pop
lock
lret
cmpsb
sub
jle
pusha
pop
repz
mov
push
cli
ds
and
xchg
lcall
mov
leave
pop
iret
fiaddl
ja
or
xor
repz
dec
push
les
call
sti
jge
mov
stos
mov
andb
inc
arpl
test
sub
mov
in
inc
dec
lahf
mov
rcrb
sbb
cmc
neg
pop
jecxz
adc
and
pusha
xchg
or
or
loop
aaa
outsb
jbe
mov
mov
xchg
pop
sub
movsb
xor
insb
fisttpl
rorl
adc
int
sbb
dec
imul
jae
sbb
jno
fmull
sub
lahf
stos
loope
jbe
xor
pop
xchg
int3
popf
jge
leave
lea
add
jae
jbe
aas
lret
or
lock
fucompp
insb
fists
xor
lret
shlb
in
inc
inc
mov
stc
xchg
int
jnp
add
lahf
jne
insb
mov
sub
dec
lea
pushf
mov
popa
pop
sub
dec
out
mov
xor
xor
sub
aas
push
mov
aas
pop
xchg
pop
xchg
clc
pop
jge
pop
mov
add
add
mov
add
cld
mov
xchg
mov
das
mov
divb
mov
daa
pop
imul
jb
xor
mov
inc
mov
pop
nop
fs
adc
mov
call
xor
cmpsb
lcall
push
pop
pusha
xlat
test
ljmp
fmuls
hlt
pop
imul
cltd
mov
dec
mov
stc
cmp
xchg
mov
xlat
iret
shl
sub
insb
dec
pusha
lods
icebp
test
cmpsb
dec
xor
adc
push
dec
or
lods
lret
int
push
xor
imul
lcall
xor
mov
fs
pop
das
out
test
jl
int3
inc
loop
stc
mov
push
fwait
mov
sahf
neg
fiadds
pop
xchg
out
push
lea
fs
popf
inc
cmp
mov
add
pop
test
jb
jbe
test
loope
pop
movsb
divb
movsl
aaa
imul
lret
inc
adc
lds
pop
pop
mov
cs
add
push
repz
fildll
pop
push
mov
mov
in
mov
cmc
mov
xor
dec
xchg
hlt
mov
pop
push
fcoml
cs
iret
add
mov
adc
outsl
out
xchg
sub
add
pop
stos
cmpl
sub
mov
inc
xchg
xor
lahf
rcl
ljmp
pop
sub
mov
add
inc
lock
mov
add
arpl
loop
xor
add
fimull
inc
pop
in
out
fwait
jne
push
arpl
fistpl
push
ja
adc
out
out
jge
sub
leave
daa
daa
xor
sub
cltd
imul
xlat
mov
hlt
push
xchg
psubusb
insl
loope
adc
loopne
nop
jno
xchg
inc
roll
mov
lret
or
scas
cmp
lret
push
pop
xor
fiaddl
xchg
xorb
adc
mov
pop
scas
ret
out
test
loope
pop
and
int
cmc
cmpsl
subl
test
pop
jno
insl
pusha
inc
dec
mov
add
ds
test
push
push
mov
je
std
fwait
movsl
es
xor
pop
sub
xor
xor
mov
in
lods
sub
and
xorl
sahf
insl
and
mov
aas
sahf
fbld
sbb
xchg
leave
lcall
xor
out
pusha
push
mov
mov
mov
pop
xchg
fld
jmp
lock
mov
dec
adc
je
cmp
out
jnp
add
push
imul
into
mov
clc
ljmp
mov
cwtl
add
sub
sbb
and
faddl
ret
in
jbe
add
fimull
aad
out
xor
dec
psubd
mov
stos
mov
leave
fdiv
cwtl
sbbl
sbb
inc
mov
outsb
or
bound
mov
jl
mov
mov
push
dec
test
mov
mov
push
pop
fldt
repnz
xchg
jg
cs
jns
jp
cmp
icebp
ljmp
xlat
jp
iret
lret
cmp
jmp
dec
mov
fdiv
mov
mov
sbb
pop
pop
mov
ds
push
inc
stos
cltd
les
lret
xor
nop
ret
mov
or
mov
in
pop
dec
pop
icebp
adc
stos
sub
jge
mov
insl
rcrl
cs
insl
adc
jge
popa
sbb
ret
test
jp
mov
fistps
sbb
push
sub
fwait
fwait
outsl
cmp
into
fs
dec
in
jnp
inc
shl
add
and
bound
mov
lahf
cmp
push
cmp
nop
jge
icebp
jnp
lahf
mov
scas
lds
jmp
push
fidivrl
xor
xor
or
pop
mov
pop
sbb
sti
mov
paddd
es
mov
out
mov
mov
inc
pushf
in
push
mov
iret
jae
mov
xor
fiadds
inc
addr16
xor
scas
loope
fisubs
add
insl
insb
xchg
cmp
cwtl
adcb
test
test
arpl
movl
cltd
popa
pop
xor
xchg
loope
jo
lods
cmp
fsubp
std
pusha
std
xor
inc
inc
out
cmc
or
aad
sbb
subb
dec
aaa
cmp
cs
mov
mov
dec
xlat
ffreep
mov
xor
fists
xor
sub
adc
mov
div
cmpsl
lea
xchg
push
loope
cmpsb
xchg
pop
inc
lret
inc
fisubs
mov
stc
dec
js
adc
loop
push
lods
sbb
test
cmc
jecxz
mov
sbb
jnp
inc
push
cmpl
dec
pop
es
and
or
pusha
subl
push
jg
out
out
ds
out
xchg
jl
shrb
jne
lahf
sub
push
jns
push
pop
sub
add
xor
mov
xlat
ss
cmp
ljmp
adc
inc
mov
sub
dec
ret
add
jle
daa
jp
jne
repnz
iret
movsl
jae
push
xchg
loop
loop
out
inc
outsl
push
cld
das
or
into
outsb
and
push
mov
push
mov
cmp
mov
insl
cs
push
push
cld
enter
gs
stos
xor
ja
cmc
fs
shll
lret
movsb
pop
popf
and
pop
jle
add
dec
mov
ja
push
addr16
sbb
enter
or
xchg
test
cmp
xchg
popf
and
push
cli
inc
es
adc
xor
dec
lods
jl
fistps
or
fsts
insb
push
inc
jmp
or
clc
xchg
iret
inc
lcall
fmulp
leave
lods
cmp
xchg
xor
xchg
rcrb
popa
jo
iret
int3
dec
add
popa
addr16
pop
stos
outsl
fsubp
pop
lock
cmp
sbb
aas
roll
pop
dec
dec
cld
adc
lahf
test
je
pop
xor
shr
push
xor
mov
pushl
adc
fisubrs
stc
sti
lds
xchg
loop
and
ja
loope
insb
push
push
xchg
ret
out
rcl
pop
iret
push
aaa
cltd
loopne
inc
nop
push
insb
stc
aaa
aaa
std
sbb
cmc
insl
insb
inc
test
aad
idivb
addr16
xchg
mov
or
aaa
sahf
sub
push
xchg
sbb
push
aas
jae
mov
fisttpl
arpl
lods
ss
imul
out
ja
test
call
mov
movsl
mov
scas
hlt
dec
dec
jl,pn
adc
mov
aad
in
stc
out
xchg
mov
lods
sub
ja
es
stos
int3
sti
js
cmp
lret
mov
jmp
test
or
add
popf
test
js
je
sub
imul
ret
or
icebp
scas
adc
ss
push
pop
add
sub
out
lret
mov
dec
loope
lcall
pop
pop
cld
cmp
pop
add
fldl
push
push
dec
jle
jmp
mov
sti
push
test
mov
mov
xor
mov
into
push
jle
jge
mov
repnz
push
add
push
in
jno
das
hlt
dec
fdivrl
adc
insb
js
sti
adc
in
andb
inc
cmpsb
gs
push
fwait
pop
sub
mov
clc
cmp
push
insl
fucomp
dec
xchg
call
pop
push
xor
jo
shrl
dec
fimuls
jo
mov
and
shl
divb
cmc
mov
gs
push
shl
cwtl
jno
lcall
cmpsl
ljmp
sub
orl
adc
cmc
pop
ljmp
cltd
fsts
inc
mov
sub
test
mov
push
adc
repz
sti
pushf
sub
xor
inc
pop
sbb
out
jnp
xchg
out
outsb
sbb
or
mov
outsb
popf
xor
cmpsl
pop
inc
mov
rcll
fwait
arpl
push
inc
mov
cmp
jo
aad
jnp
jo
adc
sub
stc
leave
aas
mov
stos
cwtl
push
mov
or
mov
nop
sbb
loope
ja
xchg
fs
mov
shll
out
stc
aas
test
cmp
pop
cmpsb
arpl
push
dec
ret
push
add
mull
jp
xchg
rcpps
xor
sbb
inc
jge
mov
inc
cs
dec
xchg
fisttpl
mov
sti
jmp
push
inc
dec
out
rclb
mov
std
pop
mov
sahf
mov
xchg
lahf
mov
test
push
ss
aam
rolb
sahf
cmp
enter
stos
cltd
aaa
pop
fs
roll
lahf
inc
or
push
mov
js
sbb
dec
jne
mov
push
sbb
into
movsb
mov
or
stc
test
int3
adc
and
leave
mov
cmp
push
mov
jge
mov
push
rcrl
incb
cmp
push
sbb
or
jmp
insb
xor
movsl
pop
in
test
push
or
push
aaa
xchg
and
lret
or
sbb
mov
adc
jno
out
daa
and
popf
mov
inc
arpl
lods
ds
mov
loopne
adc
sbb
lea
or
cmp
push
and
mov
and
adc
push
pushf
or
fdivp
mov
jge
mov
push
xchg
cmp
or
jo
xor
jp
aam
cmpsb
hlt
mov
clc
ja
xor
fcoml
fisttpl
mov
jb
mov
sbb
movsb
insb
mov
push
or
dec
adc
gs
sahf
outsb
fcoms
enter
mov
popl
lock
mov
mov
sbb
ja
push
sbb
push
aad
push
sti
cmc
fsubr
leave
push
xchg
push
mov
or
movsb
cltd
testb
mov
sarb
lds
or
je
cli
cwtl
pop
add
scas
mov
adcb
mov
mov
sub
iret
shlb
xor
popf
mov
dec
xorb
add
xchg
cmp
daa
mov
pushl
jecxz
sub
fnstcw
stos
test
fistpl
xor
add
jmp
in
fcmovbe
shlb
sbb
loope
outsl
repnz
out
testb
xchg
xchg
ret
sbb
mov
fistl
jge
fs
mov
in
and
test
out
imul
dec
insl
pushf
xchg
xchg
push
movsb
arpl
pop
rol
loope
inc
ret
adc
and
inc
fildll
cld
mov
inc
movsb
sti
cmpsl
jo
insb
or
fwait
rcrl
mov
lods
daa
out
fstps
test
jmp
ljmp
sub
lcall
mov
aad
cld
mov
inc
data16
cmp
mov
mov
es
lret
push
ficoml
dec
in
test
shll
inc
xor
sti
add
out
inc
decb
mov
jmp
mov
push
aas
icebp
jnp
in
icebp
call
xchg
adc
pop
fiadds
adc
imul
es
mov
into
jb
add
das
mov
adc
sub
int
jg
sbb
stc
ds
shl
les
in
jb
imul
pop
add
into
sbb
lcall
dec
adc
jb
pushf
shrb
shll
pop
xchg
mov
xor
pop
mov
add
bound
cld
mov
add
repnz
adc
pusha
sub
sub
xor
mov
out
rorb
cmpsb
cld
out
dec
shlb
js
mov
dec
arpl
and
hlt
mov
int
pushl
mov
add
imull
push
out
mov
daa
push
iret
pop
loop
pop
push
sub
imul
inc
add
lret
mov
mov
pusha
in
xor
adc
ficoml
fbstp
rorb
fadd
clc
pop
movsb
jmp
insb
jecxz
dec
or
out
adc
nop
jg
mov
mov
out
mov
fstpl
rol
xor
adc
xor
adc
adc
jp
sbb
mov
push
sbb
int3
xor
aad
outsb
pusha
insl
int
and
sahf
sahf
imul
xchg
out
shrl
sub
or
cmpsb
cmp
test
push
adc
aas
add
lret
pop
sub
add
stos
cmp
sub
mov
push
aas
into
jp
les
cmp
scas
jmp
in
shlb
adc
cmp
jnp
movsb
div
or
fs
push
push
lcall
push
inc
leave
push
lret
adc
gs
hlt
dec
out
xor
pop
cwtl
sub
arpl
jge
cld
arpl
push
cmc
iret
ja
fwait
mov
jae
fwait
and
cmp
cmp
sub
mov
aaa
ljmp
out
jg
mov
mov
out
xchg
pop
jecxz
fsts
xchg
xor
cwtl
fmull
into
daa
rcrb
lods
cmp
cltd
shlb
sub
push
mov
fst
mov
sub
cld
push
fwait
jo
pop
pop
addl
imul
lcall
jnp
jp
popf
and
push
adc
in
sub
subb
out
ss
xor
dec
fldl2t
push
mov
inc
in
and
fbld
xor
cmp
xchg
inc
shrb
pop
adc
das
sub
and
mov
mov
popf
push
or
adc
mov
inc
call
adc
or
popa
inc
inc
add
mov
jae
in
push
mov
mov
int3
movsl
lret
sbb
adc
dec
pop
lcall
inc
xor
jmp
pop
sub
cmc
jne
cmp
sar
pop
inc
lcall
gs
enter
mov
push
push
loopne
nop
cmp
push
lcall
sub
mov
in
shlb
sub
sub
inc
aaa
pop
pusha
sub
inc
or
mov
push
test
divw
outsl
aad
jo
xchg
xchg
inc
stc
mov
jg
fwait
out
call
and
sub
pop
loope
std
xchg
mov
add
cmpsl
xor
aam
mov
add
cmc
cmp
pop
cli
clc
stos
lahf
std
stos
xlat
dec
sub
add
adc
ds
mov
jae
daa
mov
cltd
sub
fs
pop
or
roll
lods
pop
sbb
push
mov
push
shlb
fsub
sbb
mov
ret
dec
or
das
adc
xor
iret
add
sbb
mov
xor
clc
movsb
pop
jnp
notl
decl
xor
mov
or
rcrb
mov
adc
pop
pop
pop
lods
ret
push
ja
mov
pusha
pop
fldcw
clc
sti
xor
mov
jl
adcb
mov
je
out
xor
sarb
test
xchg
jecxz
push
adc
imul
and
dec
adc
lret
jle
stc
adc
int
lret
test
cmc
mov
fsubs
xor
push
stc
push
push
rclb
push
mov
call
pandn
insl
xor
inc
or
jl
adc
iret
jg
pop
ss
mov
jns
ds
fwait
cltd
mov
sub
xchg
mov
mov
mov
jnp
leave
push
ss
int
pushw
nop
arpl
push
lcall
jmp
xchg
test
arpl
pop
push
fs
stc
das
cwtl
mov
cmp
lock
or
lcall
es
out
jo
jno
fsubl
lahf
mov
dec
es
push
cmp
sbb
xchg
or
jecxz
leave
enter
dec
xorb
mov
inc
addr16
cmpl
adc
sub
in
das
cmp
xor
test
pop
cld
repnz
xor
in
insl
add
cli
ret
fs
mov
dec
scas
sub
leave
fiadds
xor
std
out
adc
mov
mov
fisttps
jae
shll
jge
xor
incl
dec
scas
adc
aaa
in
test
xor
jno
xor
cmp
iret
loop
loope
sub
fldt
jle
push
loope
loopne
int
out
in
stos
cli
jg
and
sub
inc
lcall
test
xchg
add
add
addb
dec
test
cs
inc
dec
sub
or
stos
jno
cmpl
xchg
sub
cmp
clc
icebp
outsl
out
and
dec
push
scas
jg
lods
inc
arpl
and
stc
loope
mov
lea
stos
mov
andl
sbb
dec
inc
cli
js
scas
pop
fldl
or
fists
nop
lods
jg
jnp
pop
movsl
and
sub
pushf
jns
xor
mov
sbb
sbb
dec
inc
sbb
mov
sbb
and
add
repz
or
inc
xlat
sub
push
ljmp
xchg
jnp
push
sarl
mov
xor
mov
inc
lods
or
in
ds
dec
repnz
out
into
xor
jg
sti
cmpsb
cmp
sbb
mov
aam
xchg
or
mov
pop
jns
movsb
imul
mov
inc
cmp
jmp
mov
jge
fs
mov
dec
push
inc
mov
and
mov
jbe
xor
fistps
popa
lcall
lret
xchg
cmp
std
mov
imul
and
mov
add
pop
inc
mov
gs
dec
lds
ljmp
in
cld
adc
pop
sub
out
and
pop
inc
xchg
daa
nop
inc
mov
jg
and
inc
mov
cmp
xchg
clc
sbb
daa
jae
mov
bound
add
insb
das
mov
adc
in
aam
mov
lods
ljmp
inc
xor
clc
inc
xor
lcall
aam
push
inc
lcall
mov
lods
push
adc
jnp
dec
xor
into
adc
jge
call
and
inc
add
dec
stos
in
xchg
add
movsb
lock
fists
pop
or
mov
int
daa
test
int
fdivs
insl
pop
mov
fldcw
mov
mov
push
stc
in
cmc
sahf
out
jb
inc
and
scas
xchg
sub
lcall
pop
sub
jge
mov
int3
test
cmc
int
vpavgb
test
and
cld
pop
sbb
aad
or
xlat
mov
mov
jno
mov
popa
insl
xchg
add
roll
push
out
fisubl
inc
out
jns
cmp
inc
out
lcall
xor
mov
dec
dec
xor
mov
fidivl
cs
add
jmp
stos
mov
push
out
cli
mov
aad
xor
pop
jmp
push
cmp
mov
enter
or
jo
in
fmuls
sbb
nop
fwait
add
aas
out
dec
int3
cs
push
mov
lret
daa
repz
mov
gs
repz
cmc
jns
sbb
leave
sbb
cmp
pop
mov
fisubrl
pop
fsubrs
adc
push
int
cmc
add
hlt
sbb
cmpl
aaa
or
paddsb
adc
into
mov
ljmp
scas
cmpsb
ja
inc
dec
fldt
push
fcoml
push
lea
xor
adc
cmp
aas
and
xchg
scas
mov
in
mov
andl
inc
arpl
insb
adc
push
mov
and
test
sti
inc
xor
in
jae
xchg
data16
jns
inc
push
cltd
pop
mov
sbb
jno
xor
js
pop
inc
jbe
and
bound
scas
mov
int
addb
sahf
and
mul
ja
mov
sub
cwtl
cmp
enter
rcll
jle
or
cmp
les
and
sub
addb
pop
push
fsubr
and
mov
loopne
iret
rolb
test
jg
fwait
jo
xchg
sub
dec
lods
sub
nop
sub
cmpsb
push
repz
jb
out
xchg
jne
in
push
xchg
data16
out
icebp
xchg
out
sbb
repz
add
fsub
adc
jo
out
in
je
ds
xchg
adc
shll
sub
inc
adc
nop
repnz
dec
loope
or
ljmp
and
aad
xchg
cmp
sti
std
fcmovnu
dec
int
and
test
or
fiaddl
fs
dec
scas
loope
jbe
push
or
sub
push
xlat
xor
shr
test
push
cmpsb
movsl
inc
push
ret
test
pop
ds
iret
aad
cmc
stc
fimull
jae
out
insb
stos
sbb
mov
adc
xchg
xor
xchg
adc
call
dec
add
sub
add
shrb
xchg
aas
or
mul
sahf
adc
mov
xchg
adc
or
call
mov
pushf
sbb
mov
incl
mov
addr16
shll
es
lock
out
fadd
out
adc
or
out
xor
adc
pushw
cs
pop
addr16
jnp
ja
add
je
psrlq
inc
shll
inc
dec
fs
cmp
mov
xchg
inc
or
inc
push
and
sahf
mov
dec
push
fsub
xchg
mov
xor
repz
loop
std
pop
cmpsl
ljmp
cmp
pop
icebp
cld
xor
cmpsl
jns
sti
sarb
cmp
add
fistpll
push
jp
fbstp
test
pop
outsb
mov
xchg
xchg
test
cmp
xchg
pop
std
fists
rolb
pushf
shlb
stos
and
mov
andb
adc
aad
js
xchg
pushl
stos
data16
dec
ficoms
sarb
out
into
repz
adcl
stc
cmp
sti
movsb
test
dec
shlb
je
sub
ret
fwait
mov
pusha
pop
dec
outsb
push
mov
inc
adc
les
shrl
cmp
cmpsl
cmpb
jo
pop
push
sbb
data16
test
gs
jecxz
out
popa
stc
sub
jle
push
je
pusha
add
pop
std
jecxz
fnsave
add
test
cltd
sti
cmp
shrb
or
loopne
in
movsl
insb
int3
and
test
mov
push
and
mov
ret
decl
pusha
hlt
push
and
rcr
cmpsl
lret
and
sbb
dec
sahf
das
mov
insl
out
push
xlat
test
pop
mov
xchg
mov
cwtl
into
adc
xchg
push
jp
ja
jne
hlt
push
hlt
push
iret
cmp
xchg
das
fdivs
cs
iret
cli
jns
lahf
cld
dec
cld
cmp
inc
ftst
cmp
mov
add
and
ret
mov
sub
push
mov
testl
lods
aas
fcoms
nop
pop
mov
push
fbstp
aam
dec
outsl
addb
insb
mov
mov
fs
out
fcompl
sub
push
subb
sarl
or
push
mov
insl
push
lret
cwtl
dec
sti
inc
aas
enter
adc
fldt
aas
and
jns
shrb
jbe
outsl
xlat
xchg
inc
and
out
sub
pop
and
stos
jnp
or
cli
pop
aaa
aam
arpl
push
cmp
int
aam
hlt
sbbl
mov
sub
outsb
imul
cs
jle
movsb
lret
and
repz
rcr
mov
dec
push
je
fimull
lcall
cltd
jl
mov
adc
scas
mov
push
mov
adc
mov
scas
js
js
cmp
test
gs
mov
into
testb
outsb
nop
imul
jecxz
push
jge
inc
loop
test
stc
lods
jmp
stos
aad
aad
mov
sahf
mov
add
or
jp
sbb
dec
sbb
pop
imul
adc
dec
aaa
pop
lret
popa
cmp
pop
jg
xor
lea
push
jmp
scas
pushf
sbb
xchg
cwtl
cmp
or
adc
dec
repnz
call
cmp
je
xchg
pusha
ljmp
lahf
ficoms
loopne
in
popf
andb
iret
lds
jo
sub
sub
mov
outsl
sbb
decl
das
repnz
adc
addl
cli
aam
mov
jmp
dec
call
jle
test
std
ret
jns
insl
adc
pop
lock
mov
sub
xchg
ds
imul
es
dec
adc
jnp
cs
out
movsb
dec
push
xchg
xor
ss
xor
int
sbb
jo
ja
ds
fistpll
push
pop
xlat
inc
mov
and
lcall
sbb
push
mov
xchg
rolb
sarb
or
outsl
stos
sub
push
or
lret
sub
imul
fs
orb
jnp
sub
push
fildll
xor
aam
inc
in
xchg
xor
pop
out
jmp
inc
cli
mov
mov
shlb
or
hlt
out
test
mov
cmp
push
fidivs
sti
dec
xchg
fsub
push
and
test
add
lea
cmp
sub
mov
pop
inc
xor
in
sbb
pop
and
scas
andl
pop
arpl
jge
sbb
aaa
pop
ljmp
lods
movsb
add
jae
fidivrs
cs
push
mov
in
mov
xchg
fwait
std
pop
les
pop
mov
lds
cs
xor
popf
pop
xchg
dec
xor
push
mov
pop
in
and
or
push
in
jno
ja
mov
aas
std
sbb
mov
or
inc
dec
add
out
add
repz
insl
cli
imull
mov
call
inc
adc
dec
jl
arpl
mov
cmc
xor
dec
cmpsb
popa
int3
roll
add
jb
mov
frstor
xchg
addr16
push
inc
dec
cmp
jnp
pop
cmc
or
int3
mov
fisubl
sbb
ret
or
cmp
push
push
sub
aam
pop
lret
xchg
and
into
cwtl
dec
jge
pop
int3
in
test
mov
pop
pop
mov
pop
cld
jp
and
cmpsb
push
lcall
roll
mov
sub
les
call
jae
rclb
lcall
jae
mov
lahf
jo
xor
pop
insb
out
adc
les
jns
xchg
es
jge
data16
clc
sbb
das
pop
faddp
imul
dec
xchg
push
mov
mov
test
aaa
lahf
icebp
fldenv
mov
nop
mov
mov
stc
or
roll
jg,pn
mov
or
std
es
sbb
cmp
jbe
pusha
and
aaa
push
xor
xchg
int3
addb
ret
sbb
faddl
jae
lcall
testl
loop
pop
xchg
lods
push
and
movsl
cmp
lret
jnp
add
cmpsl
and
cmp
add
mov
inc
std
cld
dec
fwait
xchg
daa
out
and
mov
popa
lahf
inc
out
mov
mov
int
es
into
add
les
sub
popf
cld
stos
push
inc
xchg
in
stos
rorb
pop
xchg
mov
mov
push
insl
cmp
out
ficomps
mov
mov
sub
out
lds
rorl
or
cmpsb
outsb
mov
xor
and
mov
fs
out
push
rcr
pop
or
sbb
jne
fadd
or
roll
inc
push
xchg
or
sub
mov
add
pop
mov
scas
shlb
sub
pop
mov
or
push
pop
lea
pop
stos
add
bnd
sub
cmc
testl
sbb
movsl
push
cld
scas
jbe
fwait
xor
idivl
scas
rolb
ret
int3
std
cmp
out
mov
sti
xor
cmpl
loope
call
test
mov
ficompl
pop
cmove
or
icebp
stos
mov
sub
adc
sub
into
pop
pop
dec
insl
jns
push
adc
sbb
pop
scas
cmpsb
cmc
xchg
inc
jnp
mov
out
jle
pop
push
inc
stos
fwait
outsl
add
outsl
test
mov
xchg
in
mov
outsl
pop
jmp
sub
aaa
mov
test
jecxz
mulb
sbb
nop
mov
pop
adc
and
mov
out
inc
cli
dec
dec
js
or
lds
inc
loop
mov
add
cmp
and
in
rorb
dec
jne
loop
xlat
inc
adc
pop
mov
sbb
je
pop
pop
daa
sti
ja
mov
mov
sub
mov
fnsetpm(287
loope
ja
gs
and
cmp
sahf
push
lret
mov
cmp
cmp
ds
jo
pop
pshufw
bound
mov
hlt
xchg
sahf
and
js
int
push
mov
imul
ss
cmpsb
std
pop
int3
fnstcw
lods
pop
jp,pt
clc
cltd
xchg
inc
sbb
lods
ds
fmull
int3
add
pop
ds
pop
rcl
jb
stc
in
rcll
in
shll
push
into
arpl
dec
pop
add
jo
arpl
pusha
int3
inc
sbb
xor
sub
ficoms
popf
imul
hlt
mov
int
push
sti
mov
push
test
cli
iret
and
sbb
out
or
push
inc
xchg
adc
loopne
jnp
lret
mov
mov
rorl
insl
cli
test
scas
push
jg
dec
loop
inc
pop
push
mov
mov
es
js
sub
xchg
sbb
cmp
sub
mov
mov
loopne
outsb
sbb
jbe
push
scas
dec
fmull
dec
pop
cmp
cs
fdivs
les
fbstp
aad
xor
pop
bound
or
js
fcoms
xor
in
imul
mov
add
stos
int3
mov
mov
jb
imul
aam
xchg
pop
sar
inc
dec
inc
or
ret
jl
mov
in
cmpsb
mov
idivb
movsl
ret
fsubp
jnp
mov
jle
lret
adc
popa
lret
xchg
mov
mov
stos
icebp
fmull
iret
jnp
cmp
test
xlat
lock
fisttpll
ja
mov
ret
xor
fcmovnu
maxps
push
xchg
in
lods
or
test
push
outsb
imul
push
push
scas
push
movsb
movzbl
or
fwait
adc
loope
cmp
pop
jmp
cwtl
jle
pushf
xor
lods
push
push
fidivrl
inc
push
repz
and
xchg
ficoms
jg
leave
cli
jg
mov
cmp
dec
dec
aas
push
mov
or
mov
outsb
mov
add
or
stc
aas
fistpll
pop
xchg
dec
cwtl
jp
inc
dec
push
xor
pop
insl
shll
pop
das
popf
es
mov
mov
out
jae
stos
jnp
and
jno
rcrb
ror
cli
inc
or
imul
repnz
in
imul
push
mov
cmp
jnp
jp
mov
cmp
or
xor
pop
out
push
mov
xor
aam
int
dec
ds
data16
in
xor
stos
sahf
add
add
add
test
push
jmp
out
mov
arpl
imul
pop
das
push
lret
cmp
ds
insl
xchg
jle
ja
gs
xlat
test
and
mov
xor
add
outsb
lcall
jb
lods
mov
repz
fwait
xor
lea
adc
and
lock
push
lret
mov
fs
cmp
adc
adc
std
jbe
les
scas
mov
push
adc
pushw
push
leave
mov
sarb
shll
or
imul
loope
fstpt
imul
mov
test
xor
ja
lret
mov
cmp
inc
dec
aaa
pushf
call
push
cmp
out
push
pop
cwtl
jg
lret
push
or
pop
movsl
mov
cmp
hlt
loop
jmp
gs
test
xlat
and
pop
fxch
cltd
pushf
in
xchg
mov
adc
add
xor
add
xchg
mov
or
cs
mov
cltd
movsl
dec
sbb
bswap
adc
push
loopne
mov
int
clc
and
ds
mov
testl
dec
mov
daa
and
adc
loope
cmpsl
cmpsb
xchg
sub
popf
cmp
sbb
sub
jp
aad
sahf
aaa
mov
dec
das
push
jb,pt
dec
cmp
enter
orl
jb
adc
popa
aad
jge
sbb
mov
ds
xchg
xchg
sbb
sbb
lret
adc
rclb
ja
and
mov
pop
lcall
outsl
or
mov
xchg
cltd
popf
lcall
pop
cli
lea
jle
xor
cmpsl
inc
fdivl
or
add
imul
jne
xor
sbb
sbb
lea
into
add
mov
mov
outsl
insb
push
ret
dec
movsl
loop
mov
inc
mov
jb
pop
loopne
daa
push
fwait
jecxz
je
cmc
adc
sub
addr16
cmp
imul
xchg
ss
jp
jle
arpl
push
mov
mov
pop
mov
arpl
jg
pop
adc
adc
add
outsl
dec
scas
xchg
fisttps
sub
xor
push
mov
test
shrl
lcall
dec
dec
sub
jne
mov
jo
sbb
in
sbb
jecxz
lods
dec
xchg
int3
mov
mov
add
cld
imul
sbbl
jle
lea
sbb
or
cmp
or
repnz
inc
push
shll
mov
xor
movsl
mov
orb
pop
hlt
sbb
fwait
rclb
xchg
fmul
popa
inc
cli
mov
or
addl
sub
or
cmp
xchg
xlat
mov
arpl
mov
sbb
aam
shll
lods
fsubr
ss
xchg
scas
add
jnp
fwait
movsb
push
cmp
shll
cmc
sbb
mov
loopne
iret
sahf
pop
lods
sub
jle
push
pop
inc
pop
mov
cmp
in
jmp
xlat
lods
push
mov
inc
out
ret
xchg
arpl
mov
inc
dec
inc
js
jle
lds
test
adc
dec
mov
in
cmp
addr16
mov
dec
pop
out
mov
ss
xor
sub
pop
push
add
sub
into
mov
cltd
or
cmpsb
lods
lahf
inc
xchg
adc
and
jo
cmp
std
jbe
aad
mov
fistpll
sub
xchg
daa
lock
or
pop
aam
scas
mov
xchg
push
iret
fstps
mov
xor
data16
xor
leave
mov
push
and
xchg
aad
inc
dec
mov
mov
mov
adc
out
mov
lahf
rorl
js
jo
mov
jne
lcall
inc
push
mov
and
cli
xor
dec
hlt
std
inc
xor
imul
adc
and
xchg
jae
test
imul
ds
lret
cmp
popa
ljmp
mov
mov
mov
shlb
pusha
and
dec
push
push
cs
sbb
fsub
mov
mov
jne
mov
add
hlt
in
sti
xchg
repnz
lcall
std
iret
js
gs
addr16
aam
fsts
mov
mov
or
push
sub
insl
mov
in
je
jns
movsl
lahf
push
xor
jmp
mov
daa
cmp
mov
xor
cmp
orb
push
xchg
lods
adcb
adcb
jb
cmpsb
cmp
loopne
scas
mov
in
inc
scas
mov
lds
leave
jmp
test
xor
or
mov
push
repnz
in
sub
out
clc
pop
imul
add
hlt
dec
dec
lock
adc
sti
add
inc
ret
sbb
add
pop
jg
cwtl
pmulhuw
and
inc
xchg
arpl
add
sbb
in
repz
mov
lret
push
js
add
cmp
out
stc
sbb
mov
cmp
dec
or
cli
pushf
cwtl
inc
scas
xchg
jmp
vcvtdq2ps
testb
ja
mov
pop
sahf
test
sti
in
jnp
jecxz
shrb
mov
add
push
cwtl
sbbl
cs
or
pop
pop
pop
and
jle
outsl
nop
sub
dec
daa
mov
xlat
arpl
mov
jne
or
outsl
mov
add
out
sar
out
push
int
inc
or
outsb
push
out
mov
pop
sub
popf
pop
sbb
adc
xchg
pop
xor
and
loop
xor
dec
roll
aas
mov
fidivrl
push
int
mov
inc
dec
je
cmp
lahf
mov
inc
mov
xor
add
aas
jne
pop
outsb
fsubr
push
pop
adc
mov
shr
mov
repz
sarl
out
pop
ficomps
loop
push
out
or
sbb
cmp
mov
xor
cli
fs
cltd
add
es
int
adc
xchg
inc
jae
xchg
cli
in
lret
push
mov
ja
int3
xchg
mov
inc
into
out
sub
adc
jmp
xor
mov
pop
xchg
jle
mov
mov
mov
jnp
dec
mov
or
popf
add
xchg
jae
repnz
mov
pusha
les
push
icebp
icebp
or
movb
daa
rcl
dec
clc
xchg
mov
xor
repnz
mov
in
push
mov
adc
mov
xchg
sbb
scas
pusha
bound
fsubp
pop
fcmovne
sbb
sub
sti
xor
mov
daa
cmpsb
inc
aad
jg
push
mov
mov
ja
push
ljmp
jns
fcmovnb
jno
sbb
popa
in
cli
pushf
push
rcrl
mov
mov
fstpt
xchg
stos
inc
sub
pusha
adc
loope
jns
rol
cmpl
sbb
call
pop
mov
int3
or
or
cmpsb
push
arpl
mov
out
pusha
lahf
push
sub
dec
int3
inc
fisttps
cmc
repz
jecxz
xchg
stos
push
push
out
clc
dec
fmull
fisttps
into
lds
jo
sub
jg
outsl
push
or
jno
lods
sbb
in
jmp
xchg
cmp
fdivrp
mov
or
mov
and
push
mov
out
std
xchg
lods
xor
or
sbb
decl
cmp
mov
loope
jle
lea
pusha
adc
in
inc
mov
push
stc
lea
loopne
cmp
inc
mov
sub
enter
rclb
ss
mov
sub
sub
mov
push
movl
xor
xchg
stc
outsl
nop
pop
mov
aas
add
mulb
xor
ficoms
shlb
les
add
mov
lea
mov
popf
sbb
sbb
clc
push
mov
mov
xchg
das
stos
insb
imul
dec
aaa
jbe
mov
aas
xchg
enter
xchg
scas
cmp
jbe
adc
sbb
pop
or
sbb
nop
sti
jae
nop
sub
clc
xor
cs
movsb
jae
std
and
xchg
sub
mulb
mov
xor
enter
call
out
lahf
xchg
scas
insl
pusha
add
lea
inc
and
cmp
xchg
aaa
lea
sbb
fisubs
mov
and
mov
aad
repnz
dec
rorb
stos
add
pop
mov
adc
cmp
scas
adc
xor
cwtl
enter
jb
xchg
lds
sub
fsubr
cli
test
fdivrs
adc
xchg
daa
xlat
lock
insl
into
mov
mov
aad
popf
outsl
stos
pop
les
cmp
movsb
mov
je
pop
je
arpl
dec
rolb
add
xor
mov
push
sub
sub
mov
pop
sub
or
xor
lahf
xchg
fs
xor
rcr
mov
push
das
enter
inc
stos
xor
mov
xor
lret
lods
mov
mov
sahf
mov
rcrb
and
cmp
test
and
fs
fwait
jbe
imul
inc
lret
cwtl
adc
mov
mov
xchg
pop
xchg
mov
cs
push
movsl
aad
and
mov
in
imul
adcl
int
jmp
and
xor
and
sbb
jne
mov
sbb
push
xchg
cmp
out
pop
xchg
in
sbb
sbb
xchg
pop
mov
xchg
out
pop
push
out
in
pusha
into
lods
es
cmpsb
xor
adcb
ss
mov
ds
push
pop
mov
loopne
mov
test
push
jno
sub
pop
pop
xor
mov
jne
addb
movsb
dec
push
rcll
sahf
push
dec
sub
sub
pop
js
mov
shr
add
mov
add
dec
inc
sub
jle
ficoms
and
cwtl
xor
roll
dec
mov
jge
xor
call
daa
add
roll
adc
outsl
push
fnsave
lds
add
jmp
divl
fcompl
lock
bound
push
lds
mov
lahf
insl
jb
movsb
lret
push
push
scas
in
cmp
add
sub
dec
pop
and
cmp
jmp
mov
rorl
ja
jl
jns
cmp
dec
sar
in
cwtl
outsb
in
or
jmp
adc
ja
jecxz
mov
mov
leave
sub
sti
aam
jno
xor
sbbb
xchg
push
mov
pushf
arpl
stos
js
xchg
jnp
inc
js
push
mov
push
pop
sahf
cld
imulb
adc
shlb
stc
xchg
jne
nop
mov
stos
mov
shlb
mov
or
add
mov
dec
jp
dec
adc
dec
fisubrl
add
jl
cli
repnz
xchg
mov
into
int3
add
out
subl
jmp
adc
pop
aam
je
fstpl
sbb
lret
pop
roll
inc
cwtl
out
andb
xor
xchg
fistpl
mov
jle
aas
mov
xor
xor
xchg
das
jb
test
ds
loope
js
mov
divb
shr
mulb
outsl
loope
mov
neg
dec
dec
or
incl
fdivl
mov
cmp
decb
inc
cmp
cld
dec
insl
into
rol
mov
jno
mov
inc
shlb
iret
sbb
jbe
and
iret
jno
pop
cld
lret
push
jge
into
inc
push
test
outsl
mov
and
test
call
or
jbe
imul
push
ret
outsl
mov
sub
xchg
scas
out
lds
mov
add
repz
repz
gs
push
loopne
sub
rcl
xchg
shl
adc
cmp
aam
rdtsc
lcall
repz
int
sbb
outsb
sbb
mov
pop
fldt
mov
mov
lods
jmp
mov
stc
daa
popa
jmp
leave
inc
cmpsl
mov
pusha
out
add
mov
jae
insl
mov
inc
pusha
xor
inc
int3
mov
jg
or
orl
and
in
lret
dec
push
sbb
cltd
stos
cli
rclb
dec
fwait
into
icebp
jge
call
pop
xchg
in
push
les
xor
lcall
iret
pop
cmpsl
dec
ds
adc
sub
enter
or
mov
or
loope
mov
dec
sbb
sbb
pop
cmc
into
mov
decl
adc
mov
repz
mov
std
mov
jmp
inc
mov
arpl
lcall
popa
mov
and
movsb
fistl
mov
xlat
mov
adc
int
insl
imul
ret
pop
cs
push
mov
cltd
inc
add
test
dec
aam
dec
mov
sub
push
daa
jb
js
sub
fs
out
mov
fidivs
or
icebp
cmpsb
xor
cmpsl
aam
pop
inc
ss
dec
mull
adc
imul
cli
push
pop
popf
jge
mov
dec
dec
jl
pushf
subl
xor
sbb
int
fld
lcall
aaa
es
xchg
mov
xor
lods
fcmove
pop
and
mov
movsb
mov
sub
or
mov
rclb
fcmovnu
shrl
fs
movsb
icebp
inc
lock
fst
jnp
pop
gs
push
idivl
mov
pop
mov
adc
push
pop
dec
cmpl
cld
inc
jno
scas
and
ljmp
stos
in
addb
fnsave
mov
sarb
in
and
cmpsl
mov
mov
push
xchg
dec
imul
inc
mov
push
fwait
cmpl
insb
and
jbe
aam
das
cmp
int
xor
inc
mov
push
pusha
xchg
adcl
push
aaa
dec
push
pop
jecxz
arpl
pop
mov
push
sub
adc
jp
sub
pop
clc
hlt
movsl
or
mov
and
fimuls
mov
shrl
dec
mov
pop
adc
sahf
mov
cltd
mov
rcr
push
jb
sub
or
inc
mov
jae
jno
xchg
or
mov
loope
adc
loopne
arpl
movsb
jle
jns
mov
pmulhuw
dec
in
sub
je
xchg
and
push
insl
cmpsl
mov
leave
xchg
xchg
cwtl
adcb
sahf
cmc
adc
pop
mov
lods
adc
jns
or
out
mov
int
mov
cmp
xlat
add
imul
fdivrs
pop
mov
repnz
stos
or
or
mov
pop
fwait
pop
pop
push
add
test
and
cltd
and
inc
mov
dec
imul
xor
pop
rcrl
imulb
add
popl
and
test
int
inc
test
lds
out
movsl
mov
sub
roll
insb
adc
fwait
ja
sub
imul
inc
fwait
jno
jl
dec
pusha
sbb
jb
sub
add
dec
sbb
adc
xor
and
arpl
mov
push
sbb
arpl
cmp
out
sbb
pop
push
in
jno
out
ja
out
cmp
adc
in
or
mov
data16
pop
out
xor
lcall
lahf
pop
popf
adc
add
xchg
call
push
in
inc
mov
jb
out
dec
inc
adc
jg
roll
xchg
enter
xchg
aaa
push
and
cmp
out
jb
mov
stos
fbld
out
mov
push
dec
xchg
repz
jnp
mov
divb
in
aas
loope
sub
jmp
sbb
das
in
test
push
nop
lods
inc
fsub
js
jmp
push
stc
mov
jae
jge
loop
cld
mov
xchg
mov
add
push
pop
out
mull
or
or
es
mov
cltd
push
les
mov
lock
mov
push
orl
aaa
int
int3
pop
inc
pusha
lods
mov
loope
push
push
or
mov
insl
fwait
pushl
jns
nop
je
mov
dec
cmp
and
jno
xor
mov
lods
ds
inc
lods
inc
clc
shrb
and
or
repnz
pop
dec
adc
movsb
mov
ret
cwtl
xor
jle
adc
out
inc
dec
call
scas
lods
dec
shll
sub
lahf
aam
or
pop
sbb
enter
inc
das
jns
push
test
or
jecxz
ja
pop
sti
add
shll
cltd
into
int
fists
pop
mov
and
cmp
pop
push
xchg
rclb
test
and
cmpb
jnp
xor
mov
mov
mov
mov
push
and
outsl
push
gs
notb
pop
dec
or
sbb
clc
std
bound
jno
fldcw
nop
xchg
dec
lods
jo
cmp
dec
scas
mov
mov
cltd
jp
pop
out
loope
cli
enter
or
pop
fistl
xor
inc
aaa
ficomps
test
cmp
xchg
out
in
dec
jne
sub
mov
inc
je
mov
dec
dec
push
ds
sbb
mov
dec
mov
dec
mov
xchg
xchg
mov
ret
cmp
pop
shrl
lea
les
and
bound
mov
call
stos
push
add
sbb
xor
and
ffree
leave
subl
inc
pusha
jns
xchg
xchg
xor
lods
dec
imull
lock
mov
addr16
and
pop
outsl
push
push
and
jl
pushf
xchg
div
inc
add
jne
daa
mov
adc
mov
sub
cmpsl
loopne
bound
mov
enter
shll
fldenv
insb
sbb
dec
add
cmp
add
leave
adc
xchg
sub
dec
pop
xchg
leave
mov
nop
pop
iret
bound
pop
mov
repnz
in
cli
call
xor
inc
insb
aaa
in
inc
aam
cmp
mov
sub
push
mov
and
cmp
popf
sti
jns
push
pusha
push
jge
mov
sbb
pop
and
test
dec
jb
and
cmp
cwtl
sub
loope
pop
or
mov
shl
cmp
in
fdivrl
pushf
aas
ja
lret
xor
cltd
ljmp
mov
sub
mov
xchg
pop
dec
shl
cmc
xlat
mov
imul
lret
mov
jo
jnp
sbb
lret
rcrb
dec
loopne
out
jb
mov
stos
jl
jb
in
cmp
mov
sub
mov
ret
stos
jge
jbe
fucomp
xchg
rorl
out
in
mov
dec
jo
dec
or
iret
add
cmc
mov
cld
dec
stos
test
mov
xchg
stos
or
add
cltd
push
mov
lds
dec
push
ret
mov
cmp
sbb
add
xchg
test
aas
in
pop
popf
push
adc
jg
dec
lds
xor
sbbb
adcl
xor
mov
pop
or
jbe
mov
push
sub
les
mov
or
mov
aaa
push
add
aaa
and
xor
push
inc
xor
dec
sub
mov
add
push
data16
adc
jecxz
sbb
sahf
cs
inc
cmpsb
pop
push
lret
jp
and
cld
xchg
mov
rclb
sub
in
mov
lret
cmp
cmp
repnz
repnz
push
loop
cmp
and
loop
push
ja
in
cmp
rclb
inc
lcall
pop
lret
jmp
mov
xchg
mov
mov
xor
sti
push
into
pop
lret
cmp
push
jp
dec
xor
push
popa
pop
divb
xor
xchg
push
push
mov
cmpsl
fbstp
stc
in
push
sub
xor
test
xor
cs
scas
loop
in
aam
mov
std
jo
inc
inc
mov
pusha
fildl
xchg
rcll
jo
cmc
lcall
xor
sbb
jl
xor
aam
xchg
dec
psubd
sub
xor
cmp
add
aaa
hlt
aam
lret
xchg
mov
orb
outsb
jns
scas
fwait
cmp
dec
dec
bound
cmpsb
adc
and
fmuls
imull
mov
aam
dec
xor
mov
int
aam
hlt
dec
and
push
cmp
dec
ja
jle
in
push
imul
incb
sahf
or
test
pop
stos
ret
pusha
xchg
pop
out
push
and
outsl
jne
push
mov
aas
imul
fwait
inc
arpl
jge
stos
jo
adc
and
divl
push
lods
je
imul
pop
cmp
cmp
out
adc
pop
and
in
jmp
xchg
subb
sbb
and
pushf
sbb
xchg
dec
pop
jmp
jle
loope
jge
xchg
sbb
ret
add
add
shr
leave
in
xchg
mov
arpl
fwait
xchg
jmp
lret
sbb
xcrypt-ctr
cmpsl
sbb
notb
ret
into
or
testb
jae
push
pusha
pop
loop
xor
or
add
mov
or
sbb
mov
mov
mov
sbb
inc
daa
sbb
test
outsb
sbb
lret
mov
loope
and
ret
leave
daa
lock
add
cltd
sub
filds
add
das
aam
adc
insb
pusha
mov
push
cwtl
pop
imul
mov
and
xchg
mov
jp
adc
or
pop
in
and
xor
mov
nop
xchg
pushf
fbstp
xchg
or
sub
pop
filds
xor
add
in
adc
push
and
sub
adc
ljmp
dec
arpl
and
ret
stos
outsl
mov
lret
adc
xor
ret
push
addr16
scas
lcall
adc
dec
fistl
nop
pop
and
or
adc
lds
lods
stos
mov
sub
repz
popf
scas
push
add
and
xor
add
jle
push
cmpsb
insl
data16
mov
and
mov
xchg
sub
int3
in
aas
sbb
movsb
cld
test
in
push
imul
pop
dec
xchg
pushf
jbe
xor
mov
shrb
push
mov
add
loopne
cmpsl
jp
mov
xlat
lods
lea
mov
jg
pop
and
mov
and
jne
and
jecxz
imul
mov
pop
push
clc
and
shlb
or
jp
fsubrl
inc
xchg
xlat
in
jne
mov
pop
jnp
mov
xchg
pop
dec
fdivr
xor
movsl
or
mov
adcb
outsl
cmp
out
dec
jecxz
pop
pop
push
popf
fdiv
mov
lret
imul
movsb
movsl
push
dec
pop
sub
into
cmp
mov
push
not
loop
roll
shl
nop
shlb
movsb
xchg
lods
adc
xchg
push
stos
and
scas
outsb
clc
enter
loop
test
or
jp
and
popf
int3
sub
inc
mov
xchg
fidivrl
into
fsubrs
fisubrs
push
cmp
mov
stos
push
lods
sub
jecxz
dec
jne
mov
or
lods
xchg
popl
cmp
xchg
xchg
cs
jne
push
push
xchg
pop
idivl
push
inc
dec
push
popf
push
adc
mov
or
gs
add
adcl
mov
insb
imul
xchg
xor
xchg
inc
or
cwtl
ja
lock
sti
gs
adc
or
mov
lea
inc
jae
icebp
sbb
scas
loop
js
test
cmp
xchg
lret
dec
mov
dec
in
push
and
sarl
adc
pop
jecxz
test
ljmp
push
aam
fwait
lods
idiv
subb
lea
in
popa
xlat
fcompl
inc
jae
xchg
dec
and
popf
pop
sahf
test
loop
popa
jp
inc
out
xor
jno
pop
xor
pop
fdivr
cmpsl
cmp
pop
dec
xchg
push
sti
les
cmc
push
sbb
es
cmp
push
or
fnsave
lret
pop
fisttpl
dec
loop
out
arpl
adc
pusha
loop
or
adc
inc
jmp
in
sbb
cwtl
inc
and
mov
cmpsb
out
ret
repz
push
or
add
dec
int3
sub
mov
mov
sbb
jnp
imul
pop
sbb
lcall
fsts
dec
push
sti
or
add
clc
rcr
fstps
jns
aaa
xor
lret
gs
jl
icebp
sti
nop
pop
mov
push
xor
xor
repnz
sbb
call
cmc
popf
int
test
push
or
sbb
pop
loopne
add
lds
cmp
push
les
jns
jb
push
dec
aaa
add
das
sbb
xor
pop
test
fisubl
in
fnstsw
outsb
mov
dec
subl
jo
test
xor
in
popa
ret
jge
push
sbb
inc
or
shll
mov
js
mov
lret
lock
test
loopne
test
ja
int3
shll
fildl
mov
mov
sbb
cwtl
xchg
and
cmpl
inc
push
pop
sub
clc
cmp
in
cli
and
rclb
scas
insb
cli
mov
jae
push
inc
cmpsb
push
out
cmp
xchg
clc
push
jbe
cltd
popa
lock
pop
cmp
xchg
aad
in
rcrb
enter
cmp
add
pop
cwtl
fimuls
mov
mov
imull
xchg
je
mov
notb
sub
sbbl
out
movsl
xchg
sti
sbb
mov
cmp
mov
sub
inc
inc
pop
ja
jge
jle
mov
int
pop
xor
add
push
pop
enter
xor
push
and
pop
xchg
ficomps
or
or
frstor
stc
std
mov
inc
and
out
icebp
jns
xlat
pushf
pop
sub
daa
mov
clc
jb
mov
mov
push
inc
sub
in
fwait
jmp
or
repz
daa
sub
in
gs
cli
cs
iret
stos
out
cs
dec
jmp
jp
sahf
pop
jp
clc
add
cmp
rorb
jmp
in
enter
cmp
mov
jae
inc
call
push
js
or
jp
stos
insl
or
xchg
xor
dec
shl
repnz
les
jle
dec
insb
xchg
xor
movsl
inc
push
or
sbb
lahf
stc
dec
sub
mov
push
mov
mov
out
into
mov
mov
sub
push
adc
cltd
cmpb
xlat
xor
pop
dec
dec
cli
dec
js
xor
pop
add
dec
add
out
add
mov
je
xor
xchg
fidivl
addl
sti
lea
lods
push
and
or
cmp
jg
mov
lods
cmp
inc
sbb
xor
ret
mov
push
cli
or
jge
sbb
mov
sub
jbe
xchg
fs
sbb
jge
push
inc
mov
ss
lret
bt
xchg
repnz
or
ss
fsubs
shr
or
or
lea
push
ja
jl
fldcw
and
sub
addr16
mov
outsb
jl
mov
xchg
adc
push
icebp
or
aam
inc
mov
std
and
int
mov
add
xchg
jns
int3
repz
ja
outsl
in
xchg
popf
sbb
push
mov
sbb
rclb
lds
stos
dec
cmc
movsl
insl
in
xchg
mov
fiaddl
mov
repnz
jl
ret
enter
clc
pop
ret
iret
lret
mov
inc
popa
ds
cmp
out
sbb
lds
sbb
mov
cmc
sbb
loopne
fsubs
test
jmp
dec
push
and
jge
xor
aad
es
xchg
lock
lret
push
scas
imul
fists
adc
xchg
out
sbb
mov
add
or
ficoml
adc
fldenv
sub
sbb
cmc
arpl
repz
int
fnstenv
popa
pop
leave
sub
pop
fiaddl
xor
pop
out
shr
adc
inc
add
mov
mov
jnp
fdivrl
adc
imul
push
cmp
int
insb
or
lcall
adc
out
sti
shrb
popf
pop
mulb
mov
xor
xcrypt-ctr
cmpsl
sbb
xchg
cmp
push
adc
pop
ljmp
dec
add
clc
dec
xchg
mov
adc
sbb
aam
sar
dec
pop
push
inc
out
dec
xchg
nop
daa
fstpt
pushf
cli
xchg
mov
jmp
jl
rcrb
rcll
scas
push
mov
xchg
cmp
aam
push
sbb
sti
iret
cmp
das
jge
popa
loop
iret
pop
sub
test
mov
stos
mov
xchg
addr16
mov
sub
mov
sbb
cmp
dec
test
mov
in
nop
hlt
and
shlb
sub
rcll
lea
xchg
cltd
mov
jno
sti
xchg
fdivs
push
and
pop
mov
xlat
xor
xchg
mov
sarl
ret
test
orb
jl
xlat
dec
negb
xor
outsl
out
fwait
arpl
dec
mov
add
mov
lret
in
sub
ljmp
adc
dec
std
push
jl
pop
push
sbb
jp
push
das
pop
pop
fmul
inc
outsb
call
sub
sti
jae
dec
jns
nop
inc
testl
popf
or
outsb
bound
sti
sahf
pop
stos
xchg
dec
int3
hlt
or
loopne
push
outsl
rorl
and
andb
cmp
call
dec
lret
push
mov
push
xchg
and
pusha
pop
leave
js
popf
inc
pop
bound
inc
cwtl
cmp
jnp
xor
cmp
fnstcw
xchg
pushf
out
aam
lret
movsl
and
nop
bound
mov
cmpsl
das
sbb
add
cmc
jmp
mov
mov
add
jbe
out
imul
inc
ss
cs
pop
dec
mov
add
jne
or
pop
inc
enter
lret
js
inc
jp
mov
pop
jb
in
popf
or
add
sbb
lret
push
jge
push
push
bound
jg
xchg
and
pop
mov
jae
daa
inc
and
add
cld
test
jae
incb
jmp
sti
mov
mov
pop
in
adc
jb
sbb
mov
adc
sbb
inc
adc
or
cld
inc
enter
enter
sub
fisubrs
nopl
pop
and
xchg
rorl
sub
hlt
imul
dec
fnsave
inc
xchg
nop
ja
xchg
sub
insb
aas
dec
loope
lea
lahf
lcall
fcomp
push
aas
inc
xor
xor
movsb
dec
xchg
ret
jmp
jns
inc
pop
cwtl
cs
mov
in
add
mov
fmuls
push
gs
xchg
nop
mov
fmuls
lret
add
push
pop
inc
and
movsl
repnz
mov
shll
jno,pn
lcall
ret
int
cmp
sarb
xorl
dec
shrl
ljmp
ss
cmp
sti
outsl
mov
popaw
cmc
mov
leave
into
and
pop
push
stc
ret
icebp
aam
call
ror
std
pushf
push
or
mov
and
pop
sub
adc
int3
ljmp
cltd
icebp
inc
cmc
insl
iret
mov
inc
scas
lods
sbb
shll
mov
mov
dec
cli
insl
and
xchg
cmp
pop
out
adc
sbb
mov
test
ss
cmpsb
roll
jae
fiadds
in
fcoms
xlat
je
push
push
adc
aaa
popf
mov
mov
vsubsd
scas
jne
lds
adc
push
or
rcrb
dec
cmp
or
lods
out
sub
pop
stos
sub
dec
mov
aam
incb
mov
jae
fstps
push
jns
sti
jmp
add
push
mov
mov
cmpl
in
cltd
je
xchg
imul
sbb
push
mov
mov
scas
or
xor
xchg
clc
xor
outsl
lock
shr
cs
jne
mov
iret
mov
movsb
scas
cmp
div
or
ja
imul
nop
push
test
cmp
movb
jl
xchg
lret
inc
popa
or
dec
fiaddl
inc
mov
pop
jnp
lcall
test
shl
mov
xchg
popaw
popl
pop
int3
sub
aam
dec
stos
cmc
mov
ja
dec
repz
fucom
insl
pushf
jmp
sub
adc
inc
cwtl
xchg
and
popa
fs
mov
push
mov
sub
push
cmp
enter
pop
andl
pop
push
add
ret
lods
push
pop
loop
cs
test
mov
jbe
sbb
mov
mov
mov
leave
pusha
out
sbb
add
nop
or
mov
cmc
out
mov
pop
sub
mov
bound
inc
jo
inc
adc
jmp
negl
loop
js
inc
mov
mov
fstpl
mov
xchg
inc
ss
inc
mov
and
or
mov
pop
push
pop
cmp
jmp
loop
outsl
in
push
push
enter
outsb
or
shrb
roll
ficoml
jnp
scas
pop
or
into
dec
mov
pop
adc
movsb
inc
sub
aad
xchg
adc
enter
lods
xor
sub
lea
iret
or
xor
das
clc
call
mov
jp
pop
cmp
pop
pop
filds
mov
outsl
xchg
and
mov
or
jo,pn
aas
sub
sub
or
xchg
cmc
xor
fnstsw
or
stos
cmp
stos
inc
mov
or
jmp
scas
xor
add
sub
pop
pop
test
push
std
scas
dec
jecxz
scas
mov
jnp
pop
sub
aam
loopne
dec
inc
pop
stc
je
orb
xor
jb
mov
lods
mov
fsubrs
lret
pushf
xchg
jbe
dec
xchg
stos
jl
stos
scas
mov
dec
ret
push
ss
lock
mov
and
add
push
test
popa
or
adc
test
sahf
sbb
in
ror
daa
std
jmp
test
ss
fcompl
sbb
pop
test
and
jno
push
cmp
mov
inc
popf
push
repnz
lea
mov
sbb
fs
inc
cld
icebp
and
fstps
adc
stc
cs
mov
mov
pop
cmp
xchg
hlt
fwait
push
stc
inc
divb
test
fnstcw
xlat
mov
ret
mov
out
jns
shrb
push
pop
orb
icebp
mov
mov
mov
int
aas
ret
insb
adc
xchg
or
jge
mov
mov
push
testl
out
xchg
sbb
inc
test
rcrb
outsb
test
sub
cmc
mov
push
jmp
dec
push
inc
or
mov
jle
jns
cmpsb
aas
xchg
or
cmp
sub
leave
andb
stos
and
jmp
sarl
loopne
mov
outsb
xor
mov
and
jns
xchg
cs
fmul
ds
mov
cmp
sub
data16
sbb
sbb
dec
fildl
add
adc
in
xchg
or
xlat
iret
enter
xchg
xchg
xchg
sub
hlt
insl
push
dec
jg
pop
mul
push
scas
scas
shll
xor
mov
cmp
dec
addr16
pop
shll
push
mov
in
test
sub
pusha
pop
shl
xchg
bound
cmp
into
stos
popf
sbb
out
inc
repz
movsb
cmpsb
jp
ljmp
add
int
push
cmp
xlat
imul
xchg
call
sub
stos
xchg
aam
mov
mov
movsl
mov
lret
cwtl
sti
adc
inc
inc
lret
movsl
jp
add
fcomps
mov
pusha
push
sub
adc
jnp
loopne
sarb
push
sub
xchg
notl
cli
insb
out
jg
pushf
loop
mov
pushw
stc
mov
sub
pop
outsl
sti
sbb
jl
mov
cmp
cmc
int
and
ljmp
loop
mov
fisttpl
inc
dec
xchg
outsb
test
xor
cmpb
sub
push
in
ds
je
dec
sti
push
jle
cld
or
xchg
movsl
cmp
pushf
xchg
daa
pop
push
jle
jno
pop
imul
ss
shll
cwtl
xor
call
imul
loop
sti
mov
jecxz
dec
lds
xor
inc
mov
pop
sarl
rcrb
jns
jbe
mov
mov
inc
lods
cmpl
rcll
movsl
and
jl
cmc
cld
xchg
mov
adc
jg
mov
jle
mov
lock
inc
pop
mov
insb
loopne
cmpsb
pop
adc
jg
es
fstpt
or
enter
int3
out
adc
test
clc
pop
jge
fisubrl
fnstsw
dec
xchg
push
mov
outsl
orl
mov
enter
pushf
xchg
rcrl
inc
daa
cmp
add
cwtl
adc
push
jge
test
pushf
stos
adc
xchg
cltd
fimull
lock
ficoms
pop
ds
sub
insl
std
mov
bound
sbb
dec
divb
xor
stos
sub
pop
or
jb
pop
flds
adc
sti
jnp
xchg
cmp
addb
sbb
pop
xor
and
dec
jne
fcompl
movsl
ret
add
mov
fs
pop
pop
insb
pop
lret
mov
jl
jbe
mov
int3
sub
pop
out
jbe
pop
imul
pop
ljmp
leave
ret
jecxz
psubq
pusha
insb
punpcklwd
mov
xchg
mov
sahf
enter
push
js
fwait
pop
inc
lds
sbb
decb
ljmp
mov
lret
sub
pop
cwtl
add
pop
fwait
mov
push
fistl
in
dec
aas
shrb
les
jp
xchg
jno
cmp
ret
ret
js
movd
outsl
or
ret
cmpsl
mov
or
sbb
cld
add
aaa
insb
rorb
pop
sbb
pop
jb
fisttps
and
jecxz
push
or
jle
fnstsw
sbb
and
cltd
insb
adc
das
popa
push
imul
or
add
ja
mov
add
jp
mov
jne
dec
movsb
mov
aas
test
cmpsb
cltd
mov
xchg
fistpl
push
lds
pop
mov
mov
sbb
adc
mov
ljmp
push
mul
aas
mov
loopne
jbe
int
out
lahf
fadd
push
xor
xlat
mov
push
in
push
movsb
js
loop
jbe
jg
lret
push
and
addl
scas
outsb
in
and
insl
pusha
adc
stos
mov
jne
inc
dec
xchg
insl
inc
outsb
push
out
jbe
add
imul
das
and
lret
testb
bound
leave
jo
push
sahf
scas
pop
cld
xor
addb
jmp
sbb
adc
leave
pop
fmull
or
rcll
in
aad
inc
int3
mov
test
mov
test
lods
in
stc
ret
adc
mov
aas
jmp
pop
outsl
inc
lods
out
cmpl
imul
jg
cmp
movsl
mov
sub
popf
in
negl
out
imul
or
xchg
xor
inc
mov
sbb
jge
sbb
mov
loop
inc
mov
mov
jne
dec
mov
out
aad
outsb
mov
jg
mov
lret
jns
and
cmp
pop
mov
mov
lock
rclb
movsb
pop
out
fstp
insl
out
out
arpl
mulb
mov
or
or
pop
adc
outsb
inc
out
push
rolb
xchg
pop
in
push
push
stos
xor
sbb
adc
inc
ljmp
xor
inc
jmp
pop
jmp
add
xor
pop
and
dec
imul
bound
dec
mov
xchg
xchg
mov
lock
sti
shlb
adc
jnp
or
sti
pop
cld
cmp
xchg
incb
mov
mov
ds
int
mov
xor
scas
and
fcmovb
icebp
mov
lret
lcall
mov
and
jb
inc
int3
push
decl
xor
mov
aaa
dec
sub
cld
in
lcall
subl
or
sub
adc
pop
push
mov
lods
xor
int
mov
xchg
mov
mov
mov
dec
inc
and
xor
scas
or
in
sbb
es
pop
mov
mov
inc
jecxz
jnp
pushf
inc
mov
cs
cmp
cmp
mov
xor
mov
mov
cmp
ljmp
or
xor
mov
xor
scas
xchg
and
fisubrl
or
push
adc
mov
jmp
cmc
adc
xchg
mov
and
lret
pop
push
lods
dec
idiv
out
clc
lds
in
jmp
jmp
popf
das
jnp
aaa
leave
stc
ja
in
jb
jae
xchg
jmp
push
cmp
cld
and
push
sbb
frndint
test
mov
es
push
dec
pop
dec
int
add
push
subb
outsl
push
mov
mov
xor
movsb
jne
sub
addr16
xchg
mov
or
mov
int
jecxz
jns
jp
xor
adc
addr16
sarl
pop
jmp
inc
xor
ljmp
inc
sub
push
pop
jo
dec
lds
add
and
mov
push
dec
mov
xchg
stc
cwtl
xchg
cmp
or
mov
cmpsl
inc
or
insl
push
decl
mov
repnz
sub
or
jbe
pusha
shlb
or
aas
adcb
push
das
dec
in
sbb
pop
ja
adc
and
lret
adc
xor
subb
push
outsb
mov
and
add
or
cmpsl
jno
pop
sarb
pop
sbb
adc
sahf
adc
push
loop
jnp
push
aad
add
dec
add
or
cmpsl
push
xor
in
add
pop
push
mov
jle
out
sub
jl
mov
es
cmpsb
cmp
lds
xchg
sub
lcall
push
jne
and
xlat
mov
inc
dec
jmp
sbb
iret
pop
dec
mov
lahf
or
leave
cli
int3
or
in
and
movsl
inc
or
xchg
mov
jae
sub
xchg
ret
mov
shlb
iret
jno
sbb
scas
cmp
mov
cmpsl
jmp
pop
mov
xor
das
leave
xchg
xchg
adc
jl
in
xchg
outsl
cltd
and
movsl
xchg
dec
cmp
repz
sbb
loope
xor
cmp
sub
mov
mov
mov
or
test
jnp
push
insl
in
testl
mov
js
shrl
lods
int
in
pop
cli
inc
lods
sub
fdivrl
rcr
repz
jp
jmp
shll
clc
mov
mov
mov
push
mov
lcall
mov
in
or
push
adc
ror
stos
adc
pop
movsl
pusha
pushf
movsb
dec
jbe
xchg
cmp
das
mov
cmp
push
int3
pop
dec
mov
fs
aas
popa
jecxz
cmp
dec
xchg
sub
xchg
cmp
mov
pusha
ljmp
lret
inc
lahf
mov
inc
mov
andb
xor
testl
cld
cmpb
jmp
sarl
lods
icebp
xor
inc
gs
mov
push
push
loop
jbe
add
mov
stos
inc
sub
mov
fsubr
push
je
jbe
daa
jl
scas
sub
imul
xchg
shrl
rolb
fistps
jbe
push
jne
arpl
mov
rol
dec
nop
aad
and
iret
push
cmp
push
pop
outsb
mov
scas
adc
icebp
sbb
mov
dec
mov
mov
int3
aad
jl
mov
lcall
mov
mov
fsubrl
loope
ss
cs
jbe
icebp
iret
cmp
out
sub
clc
add
xor
xchg
jmp
stos
lret
sub
scas
cmpl
shr
repz
xor
adc
push
shlb
push
inc
pop
add
mov
and
dec
add
pop
cmp
inc
cld
jb
sbb
push
xor
fwait
xlat
xor
dec
inc
je
in
les
aam
rcl
jne
shlb
pop
shlb
cmp
bound
mov
lcall
jmp
stos
lcall
fsubs
rolb
push
dec
pop
imul
movsb
jae
push
jns
cmp
shl
or
dec
inc
nop
adcb
cmp
lret
jl
out
cli
shrb
push
js
insl
daa
pusha
in
mov
imul
je
icebp
in
dec
jp
rorb
add
cmp
movsl
mov
scas
or
sbb
jns
cmp
cmp
int3
dec
roll
dec
mov
or
insl
mov
dec
in
fs
pop
daa
dec
dec
rcl
or
mov
dec
outsb
lods
jno
lock
xchg
leave
add
cmp
punpckhbw
imul
jle
jecxz
mov
ja
es
repnz
ffree
mov
jecxz
jo
adc
jno
mov
pop
jle
pop
test
inc
jg
mov
rcr
jle
test
stc
xchg
xor
shlb
ret
pop
pop
or
cmp
aaa
cmp
xor
js
push
cs
stc
add
push
cmp
adc
add
ljmp
aaa
mov
cmpl
fidivs
cmpsb
mov
inc
jecxz
pusha
mov
lahf
mov
add
daa
lea
xor
cmc
jb
pop
loop
orl
jge
outsl
pop
or
inc
cmc
aam
and
test
jle
int3
sbb
in
outsl
aas
sbb
mov
xchg
lret
les
mov
mov
sbb
push
push
lods
loop
mov
cmp
pop
sbb
xchg
and
dec
mov
mov
push
adc
ret
and
sub
pop
les
ret
shrb
xchg
and
push
dec
jbe
inc
mov
out
adc
xor
adc
je
mov
test
fldt
mov
or
mov
adc
into
and
in
inc
cltd
add
or
aas
mov
cmpsl
movsl
dec
dec
sbb
jmp
out
jne
pushf
mov
out
jae
or
push
sbb
pop
in
jl
mov
mov
inc
shlb
adc
into
js
imul
push
sub
les
push
mov
cmp
xchg
mov
pop
outsl
icebp
std
mov
out
jmp
lret
outsb
lcall
mov
mov
fidivrs
and
out
xchg
out
mov
ret
dec
mov
fs
out
call
fwait
or
out
dec
movsb
sbb
xchg
int
push
call
repnz
gs
into
pop
inc
inc
repnz
in
outsl
mov
mov
push
enter
into
js
aas
jle
mov
ret
testb
sub
out
cmp
sbb
lods
bound
xor
lret
add
dec
fstpt
xor
and
inc
xchg
push
mov
mov
ret
xacquire
enter
dec
mov
mov
add
add
mov
cmp
roll
xchg
sub
cmp
out
movsb
ja
repnz
push
call
fnstcw
pop
fwait
jle
adc
xchg
into
imul
mov
lock
push
lds
push
pop
andb
xor
mov
add
xchg
mov
loop
scas
inc
add
and
sub
inc
dec
or
jno
mov
into
xchg
arpl
push
popa
inc
jbe
in
cwtl
mov
pusha
test
test
rolb
in
mov
aam
jle
mov
sub
lock
std
pop
add
sbb
jo
es
sub
in
pop
inc
incl
jo
repz
mov
mov
adc
pop
jg
pop
pusha
movsl
mov
mov
cs
mov
mov
cmp
mov
sbb
fnstsw
fs
test
add
stc
xlat
inc
sbb
popf
out
fdivl
sub
or
dec
loop
xor
out
test
das
mov
add
push
xchg
xor
mov
dec
xchg
adc
mov
negb
dec
xchg
inc
add
cmp
mov
pop
icebp
insl
inc
js
cs
sbb
je
fs
mov
iret
mov
das
adc
call
mov
ret
ret
push
cmp
and
data16
cmp
lock
xchg
in
cmp
jecxz
popa
or
sbb
dec
jbe
jns
stos
insb
mov
clc
in
or
orl
jg
sub
idivl
sti
and
sbbb
cld
mov
imul
sbb
dec
cmp
pop
inc
add
cmpb
sub
fistl
out
test
arpl
pop
inc
jg
cld
icebp
stc
sti
fadds
lret
out
and
stos
mov
lock
mulb
pop
xor
divb
insb
cmpsb
inc
shll
addb
jnp
inc
dec
cmove
cld
repnz
int3
xorl
mov
push
mov
inc
jns
jno
jmp
dec
pop
insb
or
mov
lods
mov
push
pop
xor
pop
pop
jge
cmp
ljmp
jle
jns
mov
jb
call
cmp
fs
jl
mov
xchg
outsb
mov
lret
push
inc
fwait
jmp
pop
test
push
cmp
push
insl
sbb
test
outsl
cmpsl
jl
xor
dec
lret
pop
lds
rcrl
push
cmpsl
mov
popa
push
adc
mov
add
mov
mov
gs
out
int
rcrl
outsl
rclb
cmpsb
dec
sub
lahf
in
xchg
push
dec
mov
in
add
add
xchg
orb
dec
daa
pop
loope
sub
xchg
ja
loopne
mov
inc
add
cld
lret
fsts
iret
outsb
inc
add
xchg
adc
je
ljmp
mov
aad
add
mov
mov
ret
push
into
ss
sub
dec
mov
add
mov
jge
sbbb
pop
jns
push
mov
mov
sub
or
sub
subl
xor
xchg
mov
inc
out
cmc
scas
add
jl
mov
sahf
ficomps
mov
movsl
cmp
push
scas
shlb
aas
mov
jle
and
jge
sbb
push
pop
cmp
hlt
arpl
and
or
movsb
ds
insl
sub
sti
shlb
fsubrs
scas
mov
iret
fists
adc
leave
sub
mov
lds
int
mov
pop
fs
out
jae
cmp
pop
dec
xchg
xor
push
in
fwait
xchg
mov
sahf
sub
aas
xor
add
or
push
divb
xor
testb
imul
dec
out
je
dec
xchg
popf
jg
push
mov
addb
pop
rcrl
jge
adc
orl
addr16
js
lods
pop
cmp
test
pusha
mov
insb
shrb
add
out
or
dec
mov
scas
sbb
fcmovnbe
inc
rcll
decb
daa
mov
out
dec
and
sub
push
leave
cmp
roll
adc
sbb
pop
xchg
pop
fcmovnu
enter
rcrb
in
aas
cmc
xor
add
fcomp
adc
cli
enter
sbb
sbb
out
fwait
mov
pushf
mov
mov
rol
sub
testb
inc
shlb
pop
lods
adc
jl
mov
jno
movsl
test
std
jmp
inc
xchg
push
scas
mov
scas
lods
cmc
dec
sbb
xor
loop
movsl
rorb
outsl
cltd
fmul
xor
xor
into
mov
cmp
sbb
je
enter
push
ss
push
push
movzbl
fcomp
mov
stos
das
inc
imul
dec
shrl
dec
push
push
push
clc
sarl
jne
ret
das
inc
daa
adc
dec
xchg
mov
adc
imull
sbb
ljmp
sub
jp
mov
gs
data16
pusha
xlat
loope
in
scas
mov
mov
xchg
sub
xchg
and
cmp
test
jg
mov
enter
inc
dec
mov
adc
dec
jae
aaa
fs
jmp
dec
mov
xor
inc
xchg
pushf
aad
and
test
cmp
jno
cmp
int3
in
xchg
xor
pushf
mov
sbb
pop
outsb
xchg
test
nop
cmp
mov
adc
fmulp
adc
mov
sub
mov
stos
mov
inc
dec
clc
pop
pop
lods
xchg
insl
cmp
loop
jp
cmpsl
adc
out
inc
addl
rcrb
push
push
inc
mov
js
add
add
das
pop
popa
addr16
int3
leave
fs
xchg
or
jg
js
ljmp
dec
xor
rcr
mov
aam
ds
shll
loope
frstor
das
pop
adc
inc
cli
aad
lock
adc
cmp
test
mov
lea
mov
imul
pusha
pop
push
mov
sub
cmp
addl
push
mov
mov
stos
decl
and
test
aam
add
lret
lods
movsl
jecxz
dec
and
inc
or
and
inc
pop
mov
jb
adc
or
das
dec
mov
pop
jo
cmc
add
and
imul
jbe
adc
in
out
inc
test
jmp
jbe
repz
jbe
fwait
push
ss
dec
add
movb
mov
jecxz
pop
mov
inc
test
adc
outsb
lds
ret
inc
sbb
out
cmpsb
push
jb
test
jae
bt
cmp
mov
popf
adc
mov
insl
shrl
movsl
lret
dec
sbb
cmp
rcr
pop
mov
mov
push
mov
pusha
pop
inc
or
add
add
cs
test
mov
xchg
scas
inc
dec
push
outsl
lret
movsb
push
sbb
int3
add
adc
xorb
cmp
lods
fbld
push
add
mov
mov
adc
sub
xlat
mov
clc
push
push
js
sub
dec
and
push
orl
cs
insb
fnstsw
mov
add
push
jnp
nop
push
cld
push
popf
push
lcall
movsl
jge
xchg
insb
cmp
mov
cmp
je
cmp
pop
test
mov
loopne
int
xor
rcrb
bound
cmc
mov
data16
push
hlt
adc
mov
cli
and
adc
loopne
outsb
insl
stos
jb
out
rclb
mov
pop
or
aaa
ss
ret
nop
sarb
dec
icebp
adc
pop
push
sbb
xchg
cmp
cli
stc
shl
adc
scas
cmp
ja
vpsrad
mov
ljmp
int
mov
and
sub
inc
xchg
movsl
adc
or
and
xlat
fbld
add
out
fsubr
adc
imul
sub
push
jbe
pop
pushf
roll
sarb
sahf
sub
rcr
mov
rdpmc
adc
lds
clc
mov
pop
sbb
cmc
pop
jbe
pop
pop
scas
dec
cmp
cmp
insl
add
and
dec
inc
sbb
push
xchg
nop
add
stos
movsl
jl
outsb
cmp
stos
rcrb
cmp
inc
dec
sub
stc
pop
cmp
mov
lahf
mov
jge
std
or
mov
mov
aad
jp
add
push
xor
xor
push
cmpsb
sahf
pop
loop
repz
jnp
or
mov
ficomps
xor
pop
mov
cmpsb
jmp
xor
push
mov
int3
in
jns
rclb
xchg
shlb
scas
stc
hlt
mov
into
xor
sbb
sbb
pop
jle
mov
jo
dec
test
pop
loopne
loopne
add
inc
pop
js
cs
or
test
sub
sarb
push
frstor
aaa
push
jl
dec
in
mov
imul
push
sbb
pushf
sbb
or
sbb
insb
mov
les
in
loop
scas
pop
rolb
ficompl
out
or
xchg
adc
xchg
das
push
js
jo
mov
mov
dec
push
sti
inc
divl
sbb
or
fs
stc
lea
in
test
daa
fcom
xor
outsl
imul
jecxz
movsl
test
adc
push
mov
aas
cmp
pop
clc
loop
jecxz
dec
sarl
mov
push
sbb
aaa
stos
subb
mov
loopne
outsb
es
or
fs
cmc
adc
cmp
mov
nop
pop
jmp
sbb
popf
inc
movsb
xor
test
loope
push
dec
fwait
push
orl
loopne
ret
orb
addl
mov
pop
fsub
add
push
pop
lds
jle
dec
dec
test
mov
sub
imul
cmp
gs
les
sub
faddl
add
mov
xchg
push
repnz
sub
jne
cmp
xor
hlt
icebp
hlt
or
imul
push
adc
sbb
imul
sub
xchg
pavgw
in
loope
rclb
insl
das
dec
js
ret
or
jb
pop
daa
pop
inc
mov
cmp
icebp
sahf
xor
int
push
xlat
mov
mov
xchg
mov
in
addr16
stos
mov
xchg
cmp
lahf
cs
mov
adc
and
es
push
lcall
dec
inc
dec
xchg
jmp
shl
xchg
dec
popf
xchg
jecxz
xchg
mov
pop
mov
frstor
xor
inc
fidivl
cmpsl
pop
add
and
sbb
ret
and
add
inc
add
fmulp
push
sub
jb
arpl
mov
ficoml
xor
aad
or
lods
pop
lahf
xchg
jne
out
iret
in
xor
repz
rcll
stc
pop
popf
in
pushf
add
pop
loop
adc
ds
pop
into
xchg
lods
lea
jge
jnp
adc
testb
push
out
xor
ss
sbb
js
cmp
mov
testl
daa
aad
dec
pop
xchg
mov
and
mov
cmp
and
xlat
sub
xchg
xor
mov
adcb
inc
hlt
xchg
enter
mov
icebp
shrl
inc
jo
cs
das
imul
xchg
insl
push
cmp
out
mov
cmpsl
sub
movsl
jae
add
mov
gs
movsb
call
insl
stos
cwtl
pop
out
dec
shrl
rcll
mov
or
pop
sub
inc
rol
popf
jecxz
adc
mov
add
or
dec
pusha
mov
mov
fbstp
jecxz
fistl
inc
fdivs
nop
jbe
lds
cli
test
hlt
icebp
dec
add
or
insb
out
pop
jl
and
push
jg
ds
mov
mov
int
std
ss
insl
daa
test
in
push
pop
movsb
fsubrl
inc
repz
xor
iret
aas
pop
adc
jp
add
xchg
mov
jge
dec
fmuls
cltd
push
ret
aas
mov
aad
stc
xchg
jne
lea
and
fwait
jp
mov
into
push
add
mov
gs
or
and
repnz
sbb
inc
xchg
pop
loopne
jecxz
push
or
fadds
inc
push
push
out
xchg
xchg
insl
xor
inc
fldt
xor
push
jbe
outsl
out
cmp
and
scas
sbb
fs
xlat
popf
insl
and
sub
xlat
ss
je
in
push
push
iret
xchg
jg
mov
pop
into
pop
mov
or
dec
and
mov
cmc
sbb
bound
sbb
inc
dec
and
push
sbb
mov
push
xor
mov
gs
jecxz
arpl
stc
inc
push
scas
inc
sub
add
push
and
js
sbb
pop
inc
lea
dec
inc
inc
mov
sbb
inc
filds
cmp
sahf
mov
in
xor
loope
xchg
popa
rcll
pop
in
mov
ja
mov
jg
jnp
popf
inc
rcrb
inc
cmpsl
cmp
les
lods
addr16
call
fsub
inc
push
pop
sub
pop
data16
xchg
xor
subl
loopne
pushf
pop
stos
add
movsb
push
cmp
jmp
adc
xchg
das
ret
add
int
add
dec
and
adc
mov
gs
out
xchg
sub
sbb
loopne
es
sbb
ret
ds
fistps
jg
sbb
icebp
dec
mov
ret
xchg
mov
push
jge
push
test
mov
mov
mov
sbb
sub
mov
cltd
sbb
xchg
cmp
adcb
xor
cmp
inc
mov
pop
repz
jno
push
mov
cmp
jb
or
inc
loope
out
or
or
cmp
repz
sbb
lods
cs
pop
movsl
xchg
mov
pop
insb
mov
sbb
incb
mov
sbb
dec
mov
dec
and
cld
jnp
enter
mov
push
pop
jmp
enter
mov
and
push
pop
mov
push
xchg
in
push
jg
mov
arpl
adc
je
mov
pop
sbb
sub
stc
xchg
mov
ja
loopne
loopne
cwtl
ds
xorb
xor
pop
out
out
adc
xchg
daa
test
rcl
pushf
jb
cmpsl
xlat
cltd
mov
call
push
lods
addr16
cwtl
cmp
call
popa
cld
data16
lock
adcl
mov
mov
in
fstl
mov
test
prefetch
negb
fwait
rolb
and
sbb
pop
in
lods
dec
add
inc
pop
out
dec
fcompl
mov
jmp
hlt
int3
dec
adc
lock
cld
lret
ret
push
push
mov
fwait
sub
pop
jbe
xor
xlat
fimull
dec
xchg
imul
jae
pop
inc
out
and
xor
add
push
jae
out
clc
push
out
mov
data16
mov
insb
mov
js
test
repz
pop
xor
imul
add
or
mov
sub
lods
std
xchg
mov
sub
jbe
jnp
movsb
clc
add
xchg
lcall
push
push
aam
mov
sub
fiadds
cmp
lods
push
xor
pop
cld
ds
ds
cwtl
mov
xchg
jp
and
mov
and
jp
std
jns
inc
and
cmpsb
sub
xchg
aaa
js
xor
add
fs
lret
in
or
xor
pop
cltd
fcmovb
sub
aaa
arpl
mov
mov
into
call
leave
loop
adc
xor
inc
xor
lods
mov
ret
jae
aas
call
mov
adc
lods
dec
and
stos
lea
aad
pop
cli
pop
movsl
or
cmp
push
cmovg
sahf
les
insl
or
negl
ret
es
and
jo
out
das
fs
xor
push
add
push
clc
mov
sub
fimull
xchg
cmpsb
test
push
mov
sahf
ljmp
int3
pop
leave
in
jb
fwait
shll
cwtl
xchg
or
adc
dec
jg
push
test
cltd
push
pushf
fs
jno
inc
mov
jecxz
ja
push
cmp
int
aad
aas
xor
inc
fdivrs
dec
lock
adc
mov
mov
xchg
mov
ret
add
sub
push
xchg
lret
shl
mov
out
jle
inc
jne
jb
call
in
ret
sti
adc
add
xchg
sbb
jge
pop
jp
je
push
pusha
fadds
add
jns
mov
jne
adc
fildll
fisubrl
add
negb
and
test
outsl
adc
leave
dec
sbb
push
pusha
test
scas
ret
aaa
icebp
or
lret
cmc
cmpsl
push
mov
xor
mov
xlat
jl
and
imul
push
mov
sbb
inc
ja
jp
int3
mov
nop
cltd
push
add
sti
push
or
ja
pop
js
in
xchg
sti
sbb
xor
int3
push
push
orl
mov
leave
xchg
xchg
js
inc
inc
rcrb
repnz
cmp
cmp
cmc
call
add
out
pop
icebp
add
pop
cmc
bound
out
mov
sub
aam
stc
dec
lret
lds
add
sub
xchg
loop
xchg
or
xchg
mov
add
in
dec
cmp
cld
xchg
aaa
dec
and
jmp
stos
pop
lods
mov
dec
xlat
pop
jecxz
mov
adc
jle
lret
jge
js,pt
scas
push
rol
in
aaa
enter
or
pop
je
sub
xchg
ds
mov
incb
inc
sub
stc
jle
enter
mov
sbb
test
fldenv
add
scas
adc
mov
xor
push
or
and
leave
push
pop
stc
mov
ss
lcall
ljmp
aad
rorb
out
adc
push
mov
and
jno
sub
out
adc
xchg
mov
pop
call
mov
or
popf
dec
and
aas
and
das
sahf
mov
in
push
dec
push
test
add
pushf
and
les
aam
push
icebp
ja
sbb
xchg
imul
xchg
fdivrs
paddusw
cmc
add
sub
jne
cld
jns
push
fistpl
push
add
pusha
je
xchg
ss
fs
jo
mov
or
pop
sub
mov
jns
push
add
movsl
mov
cmp
xor
jl
pop
lods
pop
lds
shlb
fxch
aad
gs
dec
ds
loope
stos
and
jo
pop
or
pop
jecxz
xorl
ds
lods
stos
sbb
imul
inc
sub
push
sbb
dec
into
lret
jno
sub
cmpl
fdivr
daa
add
outsb
mov
insl
out
popa
arpl
cld
sbb
popf
cmp
lods
mov
push
inc
dec
imul
mov
xor
mov
and
ret
fstps
inc
aam
hlt
dec
dec
aas
test
std
test
jo
adc
repz
rcr
xchg
xor
xchg
fwait
out
push
out
mov
imul
aaa
test
imull
das
ficompl
push
lcall
repz
jbe
adc
xor
jmp
shrl
ds
push
pop
lea
js
cmp
dec
mov
xor
outsl
xor
in
xchg
rolb
lret
call
jl
and
rorb
mov
jne
mov
mov
jp
xchg
inc
dec
shll
sbb
fwait
insb
push
jne
add
xchg
cmpsb
xor
push
gs
mov
pop
mov
mov
push
or
pop
xchg
push
jmp
pop
mov
mov
cmp
outsl
adc
jl,pt
stos
adc
push
nop
jmp
ja
mov
nop
sahf
sarb
push
fwait
pop
xchg
jbe
js
imul
cmpsb
movsb
decl
hlt
out
dec
iret
stos
lods
add
xor
jne
lods
test
inc
ljmp
ljmp
rolb
loopne
mov
cmp
outsl
jne
lods
inc
xor
pop
daa
sub
addl
cmpsb
pusha
mov
pop
test
negl
stos
xlat
push
mov
subl
stos
iret
or
xor
rorb
sar
rcll
add
xchg
lahf
stos
pop
and
xor
cmp
mov
insl
movsb
jne
repnz
hlt
inc
adc
ljmp
cmp
ss
push
nop
sahf
mov
or
dec
stos
dec
sub
ds
and
jle
int
andb
sub
pop
ret
jp
xchg
push
xchg
pop
fnstsw
rcrl
out
addl
inc
lock
test
jg
or
dec
lret
pop
mov
push
inc
mov
in
je
dec
sub
ljmp
nop
add
in
movsb
repz
or
cmp
popa
cli
inc
add
mov
xchg
sub
cmp
add
jo
outsl
xor
or
xor
ficomps
mov
enter
pop
hlt
jp
negl
jg
dec
psadbw
mov
jns
dec
outsb
rolb
jecxz
cmpsl
insb
mov
iret
xchg
xor
ficoml
js
cwtl
pop
or
sub
pop
mov
push
repz
es
jns
cmp
sbb
mov
xor
outsl
cmp
ss
pop
xchg
lods
mov
adc
mov
test
sub
hlt
bound
xchg
or
and
xor
mov
adc
push
dec
lret
shr
add
dec
icebp
mov
fwait
xchg
dec
popl
popf
cmp
pop
push
cmp
out
mov
add
loop
lock
shrb
pop
mov
test
je
adc
outsb
push
push
sbb
rcrl
dec
push
pusha
mov
add
pop
icebp
out
mov
dec
leave
aas
ret
leave
inc
insl
sub
aad
dec
and
xchg
xchg
test
mov
mov
lds
cwtl
lock
aad
push
jae
inc
movsb
mov
mov
jo,pt
pop
imul
mov
mov
pop
lods
adc
xor
ja
cld
loopne
arpl
je
sbb
fwait
ret
sbb
ja
ret
mov
mov
ret
lcall
xchg
enter
mov
fistl
dec
push
sbb
test
aam
addps
dec
dec
dec
cmpb
test
xor
sub
loope
insl
or
inc
lret
ds
cs
divb
jmp
jle
push
int
add
adc
or
sub
mov
pop
push
adc
decl
out
dec
pop
mov
jb
push
js
mov
shlb
dec
enter
inc
mov
push
mov
lods
push
jns
mov
lds
ja
in
mov
and
fwait
jp
jbe
icebp
int3
into
ret
gs
iret
lea
add
insb
adc
jmp
pop
sarl
cltd
sub
inc
mov
mov
adc
mov
call
in
imul
mov
mov
daa
inc
jmp
loope
outsl
jae
pop
inc
das
jae
loop
ret
mov
rclb
arpl
xchg
call
ret
fidivrl
imul
addl
mov
dec
je
pop
cwtl
shrl
in
pop
pop
scas
cwtl
and
push
shll
insl
dec
test
sbb
stos
jle
cli
test
hlt
xchg
movsb
lahf
es
sbb
dec
inc
shr
adc
sub
mov
and
xchg
or
jmp
jns
xchg
fwait
rol
push
mov
push
jb
cmp
in
icebp
sbb
adc
lret
pop
popf
divb
push
adc
mov
and
fcoml
xlat
scas
xor
pop
iret
lds
je
out
jecxz
fsubrs
xlat
fsubr
loopne
xor
mov
push
aam
inc
xadd
lcall
cmp
cmp
mov
dec
sub
icebp
jg,pt
mov
rorl
les
xor
jae
imul
lods
pop
adcl
jmp
mov
mov
xor
pop
adc
nop
xchg
jo
mov
push
shll
cmc
push
cli
add
add
mov
into
push
in
repnz
mov
jp
jp
add
pop
int
popf
ret
mov
cld
or
sub
les
inc
cwtl
mov
popa
jecxz
mov
or
call
scas
out
sbb
ficoml
les
and
fs
push
and
iret
lret
fndisi(8087
lret
out
in
pop
out
scas
mov
mov
mov
mov
jg
xor
inc
jg
test
clc
test
lds
movsb
pop
rcll
mov
inc
out
jg
xchg
and
pop
fldt
inc
das
or
insl
out
iret
dec
ja
jnp
cmpsl
sub
fsubrs
mov
inc
mov
sbb
lahf
push
rorb
push
push
addb
cmp
out
negl
arpl
xchg
inc
sub
jo
add
gs
scas
sbb
push
push
inc
out
clc
jmp
mov
push
test
xchg
mov
das
lds
int3
add
stc
enter
out
cmpsb
mov
lds
ds
idiv
into
stos
mov
xlat
pusha
movsl
mov
addl
stos
andl
daa
xchg
loopne
xchg
test
shll
push
loop
dec
or
jo
subb
xchg
push
adc
push
es
push
jecxz
jns
and
test
jl
addb
ror
and
or
push
cmp
fisubl
xchg
aam
mov
jae
loope
fwait
mov
jl
out
lahf
and
jmp
mov
inc
or
pop
lret
bound
mov
mov
sub
mov
testb
push
scas
push
jmp
test
inc
sahf
repnz
cwtl
adc
aas
jb
mov
enter
jle
jb
and
push
sbb
outsb
or
std
rcrl
mov
inc
cmc
mov
lret
add
mov
cmp
scas
push
repnz
cs
push
xchg
out
arpl
mov
mov
out
push
add
es
pop
push
stos
aaa
cmpsb
xor
fildll
adc
jl
idiv
inc
hlt
ljmp
sbb
cmpsl
mov
xor
lea
daa
imul
dec
into
mov
inc
das
out
mov
jo
mov
fwait
mov
sbb
adc
jge
lret
std
xchg
dec
inc
int3
cmc
lahf
aaa
fldl
pop
mov
lcall
pop
orl
call
cwtl
xchg
mov
pop
xchg
gs
enter
cmp
into
es
dec
xchg
mov
push
xchg
xchg
xor
sbb
aam
mov
or
jp
loopne
shl
jge
in
and
cli
cld
in
dec
inc
jp
lea
push
inc
cltd
imul
leave
out
push
es
adc
icebp
pushf
inc
pop
scas
xor
dec
int
fadds
andl
xchg
das
sub
mov
xchg
sbb
and
lret
sub
cs
mov
shrl
inc
xchg
mov
adc
fdivl
clc
xchg
push
mov
shll
shrl
jmp
sbb
mov
pop
inc
cmp
loop
int
or
mov
int3
mov
scas
sahf
out
into
pop
xchg
and
outsb
imul
scas
jecxz
mov
or
pop
jnp
nop
push
push
aad
push
jge
dec
dec
lahf
testl
push
fnstenv
jl
je
ficomps
icebp
testb
inc
sub
jnp
push
pop
sub
inc
lea
sbb
cmp
xor
pop
adc
push
mov
jae
pop
sti
lods
arpl
dec
jns
fisttpl
dec
clc
jmp
popf
jae
mov
adc
cltd
mov
jne
mov
outsb
in
cmp
sub
xor
stc
dec
pop
or
out
add
xchg
cmovbe
xor
mov
push
lea
dec
ja
push
mov
out
jg
add
cmp
outsb
mov
inc
dec
inc
out
xor
mov
and
dec
push
adc
fstps
leave
jmp
adc
sub
xor
dec
mov
adc
out
xor
lahf
dec
pop
scas
jnp
add
stos
repz
add
test
push
xchg
jp
cmp
outsb
icebp
cs
divb
dec
stos
push
xlat
xchg
fstps
sbb
inc
push
lea
test
dec
xchg
aad
jno
and
fidivrl
xchg
xchg
jbe
mov
add
out
jns
mov
cmpsl
jp
mov
add
xchg
inc
sbb
out
repz
outsl
pop
xchg
dec
lret
cmp
push
xchg
xchg
mov
cld
inc
ds
sbb
jp
out
test
pop
loopne
sub
ret
xchg
cmp
enter
add
sbb
fcoml
and
xor
inc
mov
arpl
addr16
sbb
mov
push
stos
pop
shlb
das
pop
dec
add
push
inc
mov
cmp
adc
repz
not
pop
mov
pop
out
jns
cs
test
inc
and
sbb
mov
push
adc
sti
jnp
cmp
lock
test
pop
jl
adc
mov
fsubl
test
aad
or
pusha
or
cmp
dec
lret
rcrl
cmp
xchg
cmpsl
imul
jle
fs
push
sub
in
push
xor
or
mov
inc
add
es
push
lret
idivb
test
mov
sub
cmp
fs
sub
pop
and
xor
dec
mov
pop
fldenv
das
sahf
sub
aaa
ret
mov
xor
lods
jecxz
loop
mov
mov
pop
test
je
out
arpl
leave
fnsave
insb
mov
adcl
lods
ljmp
gs
mov
cltd
scas
scas
push
dec
test
inc
or
push
lcall
mov
outsb
jne
aam
lods
popf
or
fs
pop
arpl
mov
aad
jg
mov
test
cmpsl
mov
xchg
test
andl
insl
jbe
jle
rcrl
dec
or
dec
inc
stos
mov
movsl
dec
mov
inc
sahf
jne
outsb
xor
sub
add
xchg
sub
in
inc
arpl
jp
test
push
jmp
mov
push
fsts
gs
test
jns
inc
in
ja
ds
loope
pop
arpl
or
cwtl
jbe
inc
cli
sahf
pop
and
fcmove
test
cmpsb
sub
adc
int
sbb
push
in
push
pop
out
bound
xchg
cmp
jle
xchg
sarl
mov
jge
xor
push
rolb
arpl
cmc
aam
cmp
xlat
pop
xchg
addr16
out
imul
movsb
inc
cmp
dec
lret
sbb
out
add
lret
lcall
cmp
sbb
cmp
dec
fimuls
xor
lret
sbb
add
sbb
jecxz
fdivrl
insl
sub
cmpsl
xchg
fidivl
fldcw
mov
int3
clc
mov
clc
cs
dec
call
mov
or
fsubr
pop
inc
jnp
pop
scas
sbb
jecxz
or
stc
sbb
aas
mov
mov
loopne
inc
jp
ret
notl
fwait
lret
aad
xchg
mov
adc
mov
pusha
and
ror
out
aad
adc
leave
int
inc
mov
scas
out
pop
lret
repnz
lret
inc
xchg
sub
sbb
inc
mov
fstpt
cld
mov
dec
icebp
and
pop
pminsw
xchg
xchg
cmp
insl
dec
je
inc
testb
leave
leave
out
movsb
dec
aas
xor
and
add
xor
fisubs
shlb
push
xchg
out
and
adc
std
mov
cmpsb
cmp
andl
xchg
push
pop
xchg
pushf
test
fistps
xchg
ja
adc
mov
aad
movsl
cmp
into
int3
and
xor
or
sub
sbb
lock
mov
push
push
push
loopne
lods
stos
mov
loopne
stos
pop
jb
push
add
adcb
adc
cmpsl
jp
push
xlat
sub
push
rolb
adc
mull
sbb
test
in
pop
push
or
lahf
pop
repnz
orb
lods
lret
test
daa
sbb
xchg
adc
loop
fdivl
inc
aam
nop
fldt
lahf
add
add
sbb
jb
mov
cli
ds
stos
leave
shrl
push
test
jae
lahf
ret
loopne
cmc
inc
std
in
mov
cwtl
cmp
inc
sub
inc
aaa
push
push
or
in
inc
scas
xchg
xchg
sbb
leave
out
sbb
sub
or
ret
or
push
lret
jl
outsb
push
mov
push
lret
mov
es
mov
gs
jnp
fildl
xor
idiv
nop
sub
sbb
in
jae
cli
test
jp
cmp
xor
jns
out
sbbl
sbbw
stc
mov
fimull
outsl
inc
mov
push
or
jecxz
fsubs
stc
jmp
out
mov
movsl
mov
mov
jmp
fs
jmp
rclb
lret
push
call
dec
mov
jle
loopne
lret
push
and
fimuls
test
xchg
xchg
xor
daa
push
sbb
inc
lea
mov
ja
xchg
adc
iret
std
fistps
cmpsb
adc
or
mov
stos
cltd
fisubs
inc
jp
cld
enter
ljmp
orb
outsb
push
xor
xchg
xchg
mov
orl
fimull
xor
adc
push
push
pop
xchg
pusha
sub
add
add
pinsrw
pop
clc
mov
out
mov
jmp
ja
or
insb
or
adc
lret
xor
rol
adcl
mov
fwait
lods
mov
adc
lahf
mov
jno
xchg
pusha
sbb
cmc
pop
sahf
inc
aad
adc
jb
leave
mov
adc
push
push
add
jns
fidivrl
pop
aam
dec
adc
sub
add
or
cmpsl
jmp
stc
orl
out
test
loopne
cltd
ret
inc
stc
js
out
test
cmp
std
ret
testb
decl
aad
movsb
repz
push
push
sub
xchg
mov
test
mov
pop
lds
cwtl
test
xchg
mov
pop
aas
adc
inc
sbb
cmp
push
dec
dec
scas
push
xor
es
adc
sbb
add
cmp
xor
mov
mov
xchg
outsb
mov
mov
mov
jge
pop
incl
popf
lahf
repz
mov
inc
cld
jmp
sub
cli
daa
mov
outsb
lea
mov
aaa
imul
stos
popf
push
and
xchg
ret
mov
jle
jmp
loopne
add
ss
scas
adc
xchg
shr
lahf
push
es
adc
pusha
dec
enter
inc
in
or
cld
pop
and
ljmp
cmp
aas
es
stos
adc
stos
push
sub
cmp
fbstp
sub
test
mov
sub
jb
mov
sbb
sbb
and
imul
pop
lret
hlt
aaa
dec
sbb
stc
imul
clc
sahf
pop
outsl
xchg
xchg
mov
xlat
nop
fcoml
sbb
xor
sbb
pop
insl
es
stos
mov
or
stos
xor
push
pushf
rcr
add
sub
mov
pop
aad
adc
lcall
cmpsb
inc
ficomps
mov
push
hlt
sub
xor
xchg
mov
mov
push
shll
bound
pop
repz
or
xchg
and
pop
xlat
push
lods
ret
adc
fdivrl
int
inc
sbb
xor
inc
mov
aad
aaa
push
rcrl
xchg
cmp
dec
int3
sub
cltd
movntq
out
push
push
gs
mov
xor
push
dec
nop
sub
sbb
dec
sbb
cltd
xchg
inc
ret
push
or
movl
pop
lret
sub
pop
pop
out
sub
xor
push
pop
out
mov
lds
mov
mov
jbe
iret
in
push
mov
shl
add
loopne
movsl
out
mov
xor
fs
and
and
push
add
pop
jmp
ror
mov
jmp
hlt
lret
push
leave
push
mov
xchg
adc
fnstsw
arpl
in
std
adc
sbb
lock
or
mov
lret
jns
dec
scas
lahf
jp
data16
aas
hlt
mov
xor
push
gs
cmp
xor
adc
push
pusha
out
add
clc
loopne
icebp
or
out
int
mov
sub
push
nop
jns
fisubrs
shll
rcll
jne
in
lds
imul
insb
ss
mov
push
inc
test
cmp
ja
in
push
fdivrl
push
nop
mov
jno
sub
lret
dec
push
cltd
sbb
push
push
sub
push
imul
sub
fs
cld
cmpsl
out
dec
and
add
loop
cmc
dec
pop
mov
testb
arpl
jne
mov
int3
fldcw
rol
inc
les
out
xor
pop
cmp
movsl
lcall
mov
sbb
loop
icebp
mov
ja
das
fsubrs
into
ss
sub
or
adc
pop
mov
sub
push
adc
mov
mov
inc
xor
in
add
iret
mov
xlat
xchg
inc
pop
shlb
and
dec
inc
aam
xor
xchg
inc
sub
jb
fisttpl
add
fwait
xor
loope
sahf
add
clc
stos
fs
aaa
aam
lods
in
ss
cmc
fwait
hlt
mov
xor
into
mov
xchg
fwait
icebp
push
xchg
in
cmc
push
add
push
mov
sarl
xchg
xchg
add
xor
lcall
push
push
jnp
clc
push
mov
push
cmpsb
rorl
ljmp
cmp
jecxz
call
inc
lds
pop
out
fiaddl
in
sbb
cmp
and
jge
xchg
sub
dec
mov
sti
jg
mov
lret
mov
mov
mov
sub
out
fsubrs
inc
shr
sbb
icebp
push
inc
jp
pop
push
sub
xor
aaa
or
mov
es
mov
mov
push
jp
arpl
push
xchg
add
sub
sub
jge
sbb
pop
lret
inc
sahf
adc
xchg
add
out
and
roll
mov
xor
arpl
inc
data16
mov
pop
sub
stos
notb
mov
fcomps
mov
mov
and
add
or
adc
push
dec
or
mov
cltd
lahf
enter
outsl
sarb
pusha
test
xor
push
outsl
dec
sbb
subl
call
cmp
mov
fisubl
sbb
push
mov
sub
pop
repnz
ret
std
jno
jbe
addr16
mov
or
leave
add
in
inc
in
jmp
push
cmp
pop
push
sarl
xor
dec
sub
xchg
int3
je
xor
or
movsl
push
lods
in
mov
lret
push
outsb
ljmp
je
jmp
xchg
jno
xchg
push
aad
cli
insl
inc
in
cmp
dec
mov
xchg
or
xchg
lock
mov
add
jae
jne
push
pop
test
hlt
addr16
out
sbb
cmp
push
rcr
int3
jle
imul
insl
mov
pop
loop
or
fwait
clc
ja
or
js
cmp
outsb
pop
mov
mov
stc
mov
fildl
push
jecxz
daa
push
mov
call
cmc
push
fsub
xor
cmpsl
or
pop
dec
mov
push
ret
mov
add
imul
mov
jbe
jp
rcr
xchg
or
mov
mov
fwait
push
adc
mov
lahf
push
hlt
mov
jg
jge
pop
push
dec
jno
int
xor
std
rcr
je
mov
test
pop
daa
pop
dec
adc
jb
jae
or
notb
or
cmpsb
mov
pop
mov
or
movsl
mov
iret
jns
cld
push
pop
imul
mov
add
and
xchg
inc
dec
adc
xchg
cltd
rclb
sbb
mov
mov
imulb
mov
les
jne
fs
pushf
jmp
xchg
shl
jge
sub
out
sbb
int3
or
ljmp
lods
pushf
mov
ja
xor
sub
dec
xor
dec
popl
ja
add
push
pop
daa
inc
push
popa
push
pusha
sti
sub
in
sub
xchg
imull
outsl
pop
jo
in
rcrl
call
mov
and
push
out
xchg
inc
jne
dec
jecxz
xor
mov
xor
lock
data16
lahf
mov
outsb
and
mov
sub
repz
fstpl
leave
mov
jle
es
es
aaa
cld
in
mov
dec
inc
sbb
aas
test
or
sarb
gs
inc
mov
mov
cmp
divb
repz
jns
movb
mov
mov
mov
jne
xchg
inc
imul
or
pop
xlat
in
leave
cmc
imul
push
lea
xor
push
and
lods
sbb
lods
pusha
xchg
adc
je
or
loopne
mov
in
sbb
pop
xchg
pushf
pop
add
addr16
mov
push
mov
adcb
fisttps
sbb
mov
fisttpll
sbb
dec
mov
or
xchg
sub
pushf
clc
jbe
dec
lods
fsubs
popa
push
sti
add
fstpl
or
adcl
pop
jp
imul
pop
clc
xchg
subl
pop
js
dec
pop
push
or
cmp
xor
sbb
and
mov
lcall
iret
sti
fstpl
pop
xor
shrb
outsl
push
nop
inc
or
sub
mov
pop
push
pushl
cmp
push
mov
mov
hlt
cwtl
out
scas
xlat
jno
mov
nop
bound
sbb
fwait
lret
mov
aaa
scas
in
mov
mov
add
lea
add
inc
es
into
sub
leave
in
sti
fwait
rcll
mov
inc
xor
sub
add
sbb
adc
jbe
ljmp
cmc
sub
push
sbb
xor
push
xorl
or
hlt
pop
mov
and
out
cmp
push
ret
pop
leave
pop
rorl
dec
test
lds
jecxz
xchg
ss
xchg
les
xchg
cld
mov
jmp
imulb
mov
lds
or
pop
fisttpll
xchg
lcall
clc
fstpl
or
es
add
test
sbb
xchg
fisttpl
pop
loop
in
and
inc
flds
fsubs
mov
imul
or
add
jbe
ret
aad
xchg
popf
repz
lock
sub
cmc
in
xchg
sub
push
xor
push
inc
fbstp
das
pop
and
int
loopne
mov
jmp
add
jp
call
and
or
sti
pusha
imul
test
xchg
aas
faddp
addr16
cmp
imul
cmp
or
adc
xchg
test
fldcw
incb
xor
and
add
adc
fadds
outsl
smsw
movsb
outsl
push
repnz
aaa
test
test
jge
pop
inc
cltd
pop
fstpl
xlat
inc
mov
push
pop
shlb
sbb
movsl
orb
xchg
and
inc
aam
adc
scas
loope
add
xor
lret
mov
je
leave
loope
daa
dec
pop
push
dec
xchg
je
test
jle
jg
xor
mov
sti
ljmp
sub
sti
jg
in
jb
mov
mov
gs
pop
adc
mov
inc
cmp
xchg
xchg
fdivl
sbb
adc
adc
je
xchg
sbb
lcall
lret
xchg
inc
push
ret
sti
fnsave
test
les
outsl
jns
test
jns
leave
fwait
clc
xchg
mov
jbe
inc
outsb
scas
push
out
and
adc
das
sbb
push
and
push
xor
sti
enter
pop
cmpsl
sbb
popf
stos
addr16
test
cwtl
inc
faddp
mov
push
lds
pop
pop
aad
fcoml
je
in
jg
test
stc
xor
push
lds
xlat
mov
sbb
pop
cli
adc
cs
inc
push
scas
enter
dec
sub
movsb
insb
pusha
adc
stos
jmp
xor
subb
mov
inc
sub
jle
jge
cmpb
fs
hlt
mov
add
cli
mov
inc
pop
push
and
jno
mov
cmc
aam
push
mov
insl
stos
adc
mov
or
sahf
call
imulb
outsl
pop
test
rcrl
repnz
mov
popf
int
rclb
cmc
pop
cld
mov
xlat
mov
fdivs
jbe
mov
push
push
stos
push
je
sbb
jmp
test
mov
inc
push
test
cld
mov
jns
mov
jmp
dec
bound
jae
push
add
loopne
sbb
imull
push
shll
xor
push
mov
or
aas
push
addb
js
nop
jmp
jge
jmp
xor
scas
les
nop
pop
pop
ds
push
test
sbb
lock
adc
in
lret
mov
push
sub
cs
mov
push
push
add
jne
andb
rcrl
mov
rcl
jmp
push
pop
sub
mov
bound
repnz
int
jb
popa
jmp
scas
outsb
shll
add
outsl
notb
fdivrs
xchg
mov
mov
stc
push
and
ss
and
insl
mov
mov
jge
les
stos
test
push
cwtl
and
jmp
xchg
jg
rclb
xchg
and
add
push
add
xchg
ds
and
inc
xor
adc
pop
pop
repnz
insl
mov
cmpb
add
fcmovbe
pop
mov
mov
imul
mov
xor
push
inc
out
mov
xchg
cmpsb
leave
pop
out
fdivrl
cmp
subb
sub
inc
xchg
pop
imul
cmpsl
daa
inc
sbb
mov
jae
mov
xlat
pmaxsw
xlat
xor
mov
jne
jmp
jb
pop
jl
sahf
loopne
xchg
pop
push
and
ret
repz
pusha
push
test
sub
jecxz
jle
out
das
imul
inc
push
pop
cmp
lds
or
pop
sub
push
in
cmp
inc
mov
test
mov
pop
es
add
call
cmp
ret
and
sar
mov
out
mov
cmp
loop
popa
lea
scas
popf
pop
in
adc
or
dec
fimuls
fs
xchg
jae
out
cmp
cmp
pop
into
jle
sbb
das
mov
leave
cmpsb
push
repz
push
mov
dec
adc
xchg
sub
mov
inc
sarl
jge
jno
ds
mov
test
mov
xchg
int
ja
ret
int3
push
sbb
js
inc
clc
add
dec
dec
lcall
xor
enter
iret
int
lds
lock
faddp
out
mov
mov
addr16
xchg
and
idivb
nop
sub
xchg
mov
ds
in
inc
fs
jmp
mov
and
push
jo
hlt
jmp
or
pop
lret
adc
insb
lds
movb
jns
xor
mov
subl
xor
mov
push
push
stos
adc
dec
repnz
pop
mov
adc
nop
pop
ror
aaa
pop
sti
addl
sahf
adc
inc
sbb
inc
sbb
jl
insl
aas
ret
dec
outsl
sbb
test
or
sbb
mov
mov
jmp
xchg
cmp
mov
es
push
bound
sub
ret
leave
sub
cmp
pop
ds
dec
pop
jl
ja
aad
lock
jg
lds
fdivrs
shlb
nop
test
jmp
aas
adc
mov
mov
pop
push
int3
out
xchg
in
jb
shrb
nop
movsb
bnd
les
imul
jl
int3
mov
cmp
inc
dec
mov
inc
or
adc
imul
andb
nop
adc
scas
out
adc
popf
adc
cmpsb
lds
lahf
sar
adc
inc
arpl
sub
addr16
stos
inc
ds
test
loopne
pop
adc
mov
pop
lock
push
test
pop
push
xchg
xchg
mov
add
pushf
movsb
sub
jmp
test
cmpsl
push
rcrl
inc
jne
nop
mov
xorb
jbe
in
lds
pop
xchg
push
jmp
lds
movsb
adc
push
stos
push
inc
xor
push
jmp
lret
adc
sub
push
aas
lods
pop
inc
iret
push
jle
mov
dec
sub
or
ret
wrmsr
icebp
or
in
pop
xchg
dec
movsb
movsb
aad
xchg
mov
into
add
mov
add
aad
daa
push
mov
je
push
pop
pop
mov
xchg
cli
bound
lret
rolb
xchg
mov
orb
scas
or
add
adc
mov
push
js
xchg
or
xlat
shrb
inc
or
pop
and
lea
iret
daa
jns
mov
push
mov
stos
push
xchg
jbe
shll
inc
outsl
insb
jno
fcmovnb
xor
dec
scas
ret
in
scas
fsubs
sub
bnd
jb
xchg
jo,pt
push
loope
cmp
sub
sub
outsb
pushf
test
rorl
mov
xchg
xchg
xor
cmpl
addr16
or
cmp
filds
push
icebp
lahf
dec
jmp
daa
gs
jl
adc
xor
sbb
aas
scas
lds
cmp
aam
cmp
pop
aaa
icebp
idivb
lea
dec
das
push
jg
pushf
mov
cs
jp
sbb
pop
xchg
lret
sub
cli
stc
mov
and
and
jge
sbb
ffree
call
xchg
in
mov
jnp
jge
pop
es
lcall
into
insb
in
dec
or
cmp
les
aad
ds
ljmp
into
dec
sbb
test
mov
cmpsb
mov
mov
mov
fistpl
cmp
sbb
jno
push
addl
push
inc
push
clc
cmp
repnz
dec
or
adc
fisttpl
jmp
sbb
xor
dec
lods
push
test
mov
jb
lods
cmpsl
out
adc
ds
cli
sti
cmp
xchg
int
xor
and
shlb
jnp
mov
cmp
imul
mov
mov
out
sub
enter
ret
stos
mov
fbstp
jl
dec
je
pop
pop
mov
lods
pop
fildl
in
or
jno
scas
fcomps
mov
xchg
mov
stc
jmp
call
jmp
stc
or
adc
sti
inc
pop
shr
icebp
inc
pop
inc
pop
into
sarb
sahf
hlt
xchg
pop
in
lea
xchg
fwait
pop
mov
outsb
mov
xchg
or
rol
js
and
mov
das
push
xchg
ret
push
pop
loope
aas
and
inc
jne
mov
mov
repnz
into
add
or
jp
mov
test
sbb
in
inc
lret
mov
mov
push
ret
mov
and
adc
fs
xchg
adc
mov
push
push
imul
ds
sbb
sub
lahf
inc
xlat
jbe
div
mov
inc
fidivs
push
idivl
cmp
push
mov
scas
fidivl
mov
ds
in
iret
pop
lret
mov
inc
push
add
fwait
jp
jbe
in
add
sub
sub
and
outsl
sbb
pop
cwtl
mov
mov
loop
ret
push
insl
sarl
rol
xor
shlb
inc
add
gs
xorb
out
cltd
lea
js
xlat
icebp
mov
fisttpl
mov
sbb
lret
and
scas
mov
arpl
cmpsl
in
cmp
pop
aad
sbbb
push
sub
mov
lods
push
or
mov
fwait
cwtl
pop
sahf
jne
sbb
xchg
cmp
cmp
movsb
loope
mov
lds
and
push
inc
sub
movsb
and
std
daa
xchg
push
arpl
sub
mov
or
lock
dec
push
add
dec
cmp
lret
sarb
test
fists
xor
mov
cltd
ljmp
inc
fstps
lcall
cltd
fmul
loop
or
rcrl
jne
cmp
jo
jns
popa
pop
and
repz
push
pop
mov
push
add
leave
jl
push
dec
jp
les
xchg
cltd
push
mov
fimuls
sub
mov
fdivp
cmc
push
or
addr16
scas
cwtl
xchg
fwait
xchg
lods
jp
sbbl
ljmp
mov
lea
out
xchg
stc
sti
push
inc
cmp
pop
es
jne
push
stos
ss
dec
test
pop
sarl
sbb
clc
inc
inc
xchg
xchg
aaa
imul
adc
push
mov
in
stc
jne
pop
cwtl
cli
push
pop
push
sub
or
xchg
hlt
test
dec
fcomip
ja
mov
repz
shl
pop
pop
fldenv
jge
scas
push
bound
mov
sbb
dec
dec
push
not
mov
jle
xor
adc
mov
xor
xchg
add
shll
mov
stos
cmp
lds
test
lcall
pop
addr16
inc
and
jmp
fcmovb
xor
lfs
call
sti
insl
mov
jg
sbb
inc
fstps
imul
test
dec
xlat
in
mov
idivb
inc
std
lcall
mov
inc
rcr
cmp
out
sub
add
ficomps
cmpsl
sub
fsubr
bound
lcall
cmp
aas
inc
push
inc
jno
add
cwtl
xor
lcall
mov
pop
adc
ret
mov
add
stos
lock
enter
push
popa
pusha
or
mov
outsl
rcrb
dec
xor
nop
pop
and
add
ss
bound
pop
outsl
addps
inc
push
inc
hlt
fcompl
insl
inc
shlb
movsl
lcall
gs
inc
shll
sbb
scas
mov
pop
ret
xchg
lea
xchg
mov
jecxz
out
or
sub
xor
addb
sub
push
jl
jo
repnz
imul
daa
jge
hlt
adc
stc
pop
addr16
mov
mov
mov
xor
cmp
cltd
pop
sub
sub
add
icebp
fbstp
inc
lret
and
jnp
loope
cwtl
push
rcrl
mov
and
inc
enter
dec
lds
jle
sub
cltd
das
fcomps
xchg
imul
outsl
in
jecxz
mov
stc
movsl
mov
mov
mov
or
loope
mov
movsb
leave
mov
cmp
jp
rclb
pop
stos
aaa
scas
dec
xchg
push
mov
fsubrs
push
xchg
ds
and
daa
dec
jbe
xchg
jg
icebp
mov
rorb
cmp
rcr
test
push
test
jns
add
les
fcomp
or
pop
push
and
test
in
sbb
and
xor
mov
mov
mov
mov
push
xchg
jle
arpl
mov
js
jno
negl
mov
out
sub
cmpsb
cmc
gs
sub
fsubrl
rorb
and
fnsave
iret
or
mov
add
lea
mov
inc
in
adc
loopne
mov
aam
stc
fnstenv
mov
mov
push
incl
je
inc
bound
lret
or
loopne
jo
lds
pop
mov
out
dec
or
mov
lods
aaa
shrl
mov
aam
adc
mov
xor
shl
xchg
xchg
inc
jg
push
outsl
jnp
pop
insb
ret
out
inc
add
pushf
adc
repnz
push
xchg
das
aaa
inc
test
mov
xchg
mov
sub
xor
lea
inc
insb
adc
aaa
pop
mov
sbb
lahf
leave
push
stos
or
jp
xor
pushf
sbb
popa
sarb
cmp
dec
mov
mov
test
sub
fimull
push
mov
or
repnz
lcall
or
xchg
or
cmp
mov
std
cwtl
or
les
push
jge
popf
mov
dec
dec
xchg
pop
mov
repnz
sbb
loopne
scas
into
pop
in
pop
add
cmp
lcall
cmp
jns
rolb
mov
cmp
sbbl
mov
adc
stc
adc
es
mov
sbb
pop
fs
aad
repz
xor
icebp
test
push
outsl
cmpsl
xchg
das
xchg
shl
cmp
xchg
shll
dec
xchg
mov
mov
jne
and
sti
dec
jmp
test
mov
out
mov
mov
fwait
imul
in
xlat
xchg
loope
cmp
mov
fcoms
sbb
fxch
mov
xchg
insl
pushf
cmpb
in
mov
mov
add
scas
mov
mov
adc
in
xchg
and
xchg
repz
add
les
ret
out
push
in
fcmovne
aad
pop
cmp
mov
fs
stc
adc
popf
sub
mov
push
or
push
xor
adc
pushf
or
je
pop
push
jns
cmpsl
and
nop
jno
pop
in
jp
xor
add
mov
and
sbb
in
or
out
popaw
aas
mov
pushf
test
sbb
aaa
push
cmp
js
lea
dec
inc
mov
in
mov
fxch
cltd
into
test
pop
test
dec
push
stc
test
xchg
mov
dec
dec
sub
xchg
cmp
xchg
push
lcall
je
in
mov
gs
pop
pop
dec
cmp
sbb
shl
fcoms
loopne
lock
or
incb
cmp
into
sbb
hlt
push
mov
cmp
add
jns
mov
cld
mov
mov
sub
inc
jp
in
dec
jmp
int3
nop
shlb
xchg
ret
jp
dec
pop
icebp
outsl
push
lds
mov
mov
adc
or
leave
and
sbb
movsb
pop
shlb
ss
jb
lahf
jo
fnsave
pop
pop
mov
push
ret
ret
dec
shll
adc
adc
mov
and
dec
mov
mov
out
movsb
pop
shll
sub
adc
stos
xor
push
adc
mov
push
jns
jne
add
sbb
sbb
jns
fcoms
rorl
or
cmpl
adc
push
adc
and
cs
in
mov
mov
sub
adcb
cwtl
push
lret
adc
loopne
push
jecxz
cmp
and
jg
scas
loope
fld
push
xor
push
push
ret
cs
xchg
add
pop
pop
mov
jecxz
scas
insl
test
inc
call
sub
sbb
sub
dec
mov
loopne
pop
imul
or
scas
xchg
test
add
cli
push
inc
pop
dec
movsl
adc
or
cmp
dec
std
es
sub
in
movsl
jge
les
push
hlt
jmp
and
movsb
jecxz
push
bnd
inc
mov
fnstsw
sti
xchg
push
mov
xor
mov
jb
pop
or
adcb
inc
je
push
stos
add
cltd
lahf
lds
cli
push
icebp
sbb
jmp
dec
xchg
outsb
jg
ss
or
test
xor
jmp
pop
repz
into
mov
mov
sahf
lock
mov
inc
mov
je
popa
jns
adc
or
dec
pop
mov
pop
dec
subl
cmpsb
ds
jns
lret
xchg
xchg
out
jp
jbe
in
jecxz
jmp
in
xchg
call
mov
cmpb
pusha
lret
stos
inc
mov
sbb
dec
cmp
shlb
cmp
insl
aaa
sub
scas
mov
adc
xorl
push
mov
pop
repz
out
test
mov
mov
inc
gs
jp
in
les
pop
test
push
xorb
adc
add
std
add
jne
movsb
movsb
pop
jbe
aad
je
pop
push
pop
dec
jl
jnp
adc
repnz
sub
int3
dec
add
mov
push
sub
data16
adc
sti
inc
rorl
sub
jl
lods
ljmp
xor
mov
or
sti
loope
inc
cmpsl
pop
sub
jno
push
popf
mov
jbe
add
adc
jmp
cmpsl
dec
sub
dec
push
aam
push
adc
fidivrs
xchg
bound
pop
negl
imul
test
or
xchg
cmpsb
xchg
mov
aaa
pop
std
ret
pop
cmp
pop
xchg
lds
addr16
and
or
lods
rcrb
and
or
cmpb
lahf
lret
push
mov
lock
ret
mov
pop
jbe
sahf
repnz
adc
jle
repnz
mov
sub
pop
xor
sbb
mov
lock
hlt
stc
cmp
fdivrl
jg
mov
and
popf
rclb
std
xor
shl
leave
aam
int3
loop
push
addr16
sbb
int3
adc
out
and
in
inc
cmp
fnstcw
in
clc
or
add
shrl
mov
rolb
mov
sbb
xor
cmpsl
into
push
dec
flds
push
adc
cltd
or
pop
mov
add
test
cmp
or
daa
insb
mov
lret
mov
aad
jmp
lea
addr16
fcoms
push
sbb
pop
jb
mov
addl
mov
ret
push
popa
das
mov
mov
mov
aas
pop
cld
leave
mov
pop
pop
bnd
outsl
popa
inc
jbe
or
sahf
or
mov
fsubrl
mov
dec
xchg
cmp
pop
adc
clc
ds
bound
xchg
lcall
fcoms
cwtl
pop
or
mov
push
sti
cmp
ficoms
mov
mov
sub
push
jecxz
jmp
out
test
inc
out
push
sub
jnp
mov
loop
mov
jge
lret
test
sbbl
mov
stos
sahf
sbb
clc
mov
outsb
in
sbb
shr
xchg
imul
fbstp
testl
lock
cltd
ds
jne
and
cmp
xlat
in
std
mov
xchg
dec
pop
dec
dec
jb
xchg
aam
test
xchg
push
push
pusha
ret
cli
xchg
outsb
push
les
mov
dec
pop
adc
push
aaa
mov
mov
jae
loopne
add
fsubp
sbb
or
cld
scas
andb
xor
mov
dec
adc
jmp
adc
mov
out
xchg
xchg
push
mov
push
push
fwait
stos
lods
pop
cmp
jle
mov
add
dec
jle
mov
pop
loopne
lock
fdivs
mov
mov
jge
flds
jne
stc
fldcw
mov
sub
adc
addl
push
movsb
fstl
mov
sti
aad
push
pop
lret
jp
pop
add
mov
out
push
sub
or
stos
bound
subl
dec
sbb
adc
mov
outsb
lret
mov
outsb
out
jecxz
sbb
inc
push
lret
addr16
cmp
nop
pusha
jo
jecxz
pop
dec
jp
pop
ljmp
pusha
inc
in
push
jl
aam
push
test
fs
push
jbe
bound
aas
pop
insb
or
imul
sub
inc
hlt
mov
and
ss
dec
or
aas
sub
xor
inc
and
cmp
mov
jae
cli
into
test
imul
add
nop
jp
loop
xchg
bound
fwait
add
int
ds
dec
add
add
jg,pt
jmp
and
cwtl
loope
mov
insb
sub
mov
mov
iret
or
xor
mov
adc
push
pop
iret
lcall
push
addr16
aad
aad
mov
dec
mov
int
dec
mov
xor
mov
test
out
insl
sbb
adc
ds
push
cmp
xchg
and
pop
pop
in
stc
movsb
inc
cmp
cmpl
or
sti
ret
push
stos
movsl
jge
test
cmc
inc
mov
inc
adc
and
sbb
cmp
pop
call
cmpsl
lods
lock
push
pusha
sub
cld
jl
out
test
sub
xchg
lods
xchg
mov
mov
sub
cld
or
mov
or
push
pop
and
lret
outsb
iret
jge
or
fcmovu
stc
cli
push
insl
cmpsb
adcl
inc
repz
inc
les
xchg
ret
dec
lods
xor
int3
push
jns
rclb
xchg
or
loope
lock
out
in
fwait
or
nop
mov
movsb
mov
xchg
xchg
rcl
sbb
jl
push
jle
fadds
dec
xchg
jne
ljmp
flds
std
orl
inc
aas
mov
or
push
mov
mov
lahf
push
bound
or
push
sbbb
cltd
cmp
mov
pop
loopw
push
stos
cld
in
data16
xor
sub
mov
fsubs
push
sbb
jne
mov
sub
std
mov
imul
push
imul
add
iretw
push
jg
sbb
gs
mov
mov
add
les
imul
insb
or
iret
notl
pop
rcl
dec
prefetch
mov
into
or
jl
add
fcomps
cmp
not
mov
sub
xor
outsl
repz
movl
pop
jmp
adcb
sbb
sub
out
shrl
ljmp
lret
div
std
clc
lods
lea
sbb
lock
mov
inc
fsubl
or
inc
jnp
push
stc
lcall
leave
js
repnz
das
sarl
fistpl
bound
push
aam
cmp
ds
stc
sub
push
add
xchg
cmp
iret
and
popa
das
adc
cld
sub
jne
loope
mov
or
mov
xchg
loopne
in
out
dec
lea
or
jae
push
cmpsb
ljmp
dec
xor
pushf
mov
outsb
add
hlt
imul
push
jl
push
or
xchg
in
aas
loop
jg
test
xchg
inc
or
inc
fmull
addb
lahf
sub
loope
xchg
addr16
jno
bound
leave
lods
lcall
ljmp
mov
sbb
adc
jne
fdivr
jl
cmp
adc
mov
pusha
xor
push
loope
subl
dec
or
repnz
rolb
jno
popf
mov
sarl
movsb
jg
inc
add
out
lods
jle
pusha
in
push
push
sbbb
adc
mov
jecxz
dec
sub
pop
and
pop
mov
test
clc
movsb
std
mov
jmp
pop
fimull
sub
cmc
gs
sub
aaa
pop
icebp
adc
sub
inc
cmp
cs
fcoms
cs
outsb
xchg
outsl
out
inc
push
ds
fcmovu
outsl
popl
xor
scas
push
and
push
sub
arpl
sti
arpl
leave
lea
in
mov
jecxz
je
cwtl
mov
cld
adc
loope
inc
jo
test
push
sbb
out
mov
dec
test
fsubr
stos
inc
mov
inc
rolb
adc
hlt
push
outsl
and
fdivrl
js
orb
push
dec
ja
xor
inc
daa
push
jle
cmp
arpl
mov
paddsw
scas
iret
addb
lret
pop
mov
mov
jnp
cmp
inc
jnp
cld
jp
mov
xor
cmp
mov
in
sbb
les
xchg
daa
push
jo
mov
and
push
test
xchg
jp
sbb
pop
push
jne
std
test
xchg
mov
lea
mov
pop
sbb
faddl
ja
and
rol
sub
int3
mov
xor
loope
ret
das
mov
jb
xchg
and
mov
add
rcrb
pushf
sbbb
inc
adc
popf
mov
dec
insl
xorb
xor
int3
adc
pop
mov
cmp
inc
icebp
fsubrl
adc
mov
pop
sbb
pusha
inc
neg
push
fnstenv
not
xchg
inc
adcl
lret
fldcw
clc
scas
icebp
rcrl
adc
sub
push
xchg
push
mov
loop
xor
mov
mov
inc
mov
stc
loop
inc
es
pop
jge
pop
pop
and
or
adc
xor
jno
xor
in
push
pop
outsb
lahf
rcrb
imul
mov
pop
mov
xchg
xchg
push
push
insl
push
jae
mov
std
add
dec
outsb
mov
cmp
mov
inc
jge
or
test
xchg
in
cmpsb
cwtl
bt
xor
xor
inc
lods
mov
xchg
aam
lock
add
mov
sahf
adc
inc
dec
ficompl
jnp
mov
sbb
cmp
shrb
xor
sbb
pushf
xor
mov
in
dec
add
sbb
fld1
outsb
ret
pop
arpl
xchg
pop
add
loope
clc
out
adcl
sub
adc
cli
pop
repz
adc
notl
jle
lods
jnp
mov
xchg
aaa
scas
xchg
das
push
pop
cmp
adc
inc
xor
xchg
imul
fisttps
je
cmpsb
aaa
arpl
xchg
fisubl
add
xor
sub
fnclex
mov
iret
and
mov
popf
and
lret
xor
dec
mov
icebp
aad
adc
shlb
outsb
dec
fld
mov
call
icebp
inc
inc
add
sbb
ret
adcb
push
fscale
imul
xor
adc
mov
add
fmul
test
jo
scas
bnd
add
mov
xchg
lret
or
mov
cmp
cmpsb
xchg
stos
mov
ss
daa
and
sbb
mov
jl
pop
mov
pop
mov
in
in
insl
mov
mov
xorl
push
push
in
and
cs
fucomip
ret
out
es
sti
ret
inc
lahf
cmp
pop
push
sub
or
mov
add
dec
fsubs
out
out
sbb
xchg
mov
jns
imul
cmp
dec
fs
fisubrs
stos
movsb
pop
xor
or
inc
arpl
imul
adc
pop
cmp
mov
sub
outsb
imul
pop
in
arpl
cmp
and
fs
lcall
sbb
jae
lods
inc
and
mov
lods
aad
lock
das
aaa
movsl
das
sub
lcall
fcomps
ffree
jne
sbb
out
add
xchg
mov
lods
sbb
rcrb
sub
xorb
mov
cld
ror
or
or
jnp
int3
aaa
jo
outsl
rorl
pusha
fwait
mov
test
jecxz
dec
add
xor
dec
je
sbb
inc
ss
addr16
lock
mov
sbbb
test
out
fnstenv
xchg
mov
idivl
rcrl
jne
cmp
adc
mov
fcmovb
shll
sub
inc
jp
mov
sub
subb
cmp
inc
jnp,pt
mov
sarb
adc
shll
and
ds
mov
jle
inc
shlb
bound
clc
add
fistpll
orb
loopne
jnp
mov
enter
push
inc
or
mov
jl
or
lcall
mov
mov
push
fdivl
pop
jg
mov
stos
rorl
push
cmp
xor
into
dec
shl
aad
popf
enter
outsb
in
jecxz
gs
sub
inc
add
lret
inc
loope
insl
sti
xchg
aaa
sub
lods
orb
leave
mov
and
icebp
in
stos
imul
cmp
adc
pop
into
mov
je
jmp
xchg
repz
adc
or
cmp
mov
or
in
jge
stc
imul
lahf
rorl
daa
adc
mov
jg
cmpl
dec
repnz
sti
lods
ror
dec
ja
sbbl
mov
cmp
pop
mov
cli
add
sti
and
pop
inc
leave
xor
mov
xchg
xor
je
imul
movups
lods
lods
sbb
and
dec
adc
pushf
insl
sub
mov
sbb
ds
inc
xchg
repnz
das
repnz
xor
mov
ret
icebp
loop
mov
adc
xor
je
xor
push
mov
inc
int
out
mov
je
je
dec
xchg
cmp
fdivs
scas
or
fidivl
adc
ja
mov
popl
mov
lahf
stc
jle
mov
push
jae
mov
xor
jns
inc
popf
mov
imul
mov
xlat
sub
cmpsb
pop
xor
lds
sub
mov
mov
add
push
cmc
inc
dec
cltd
fisubs
out
and
dec
lods
insb
mov
adc
cmpsb
mov
adc
cmp
jl
int3
push
imul
sub
popf
add
es
dec
mov
sub
inc
mov
cmpsl
lds
fdivl
mov
mov
dec
jle
inc
loopne
pop
mov
xchg
fildll
and
ret
pop
stos
add
xchg
push
xchg
mov
ss
xchg
sbb
jo
mov
mov
sub
mov
aas
out
push
hlt
addr16
adc
out
mov
and
cmp
and
mov
shll
shrl
or
aaa
mov
mov
inc
repnz
and
sbb
mov
jo
daa
push
push
ds
jl
ds
rcrl
out
jg
pop
imul
and
ret
push
cs
repnz
outsl
ds
xor
cmp
mov
movl
stos
xor
mov
sahf
dec
clc
or
inc
test
in
dec
rorl
mov
test
bound
xchg
jbe
dec
mov
pop
xchg
push
inc
mov
adc
ja
sbb
mov
xlat
fsub
ret
cmp
adc
pop
in
fstpl
es
xchg
mov
adc
jge
out
out
lods
jae
pop
or
xor
inc
add
adc
jmp
jp
mov
sub
scas
movsb
jle
mov
lret
sub
icebp
les
repz
es
sbb
andl
sbbb
ffreep
sbb
jnp
mov
mov
cld
pushf
dec
and
cmp
push
sbb
pop
dec
loop
adc
sti
sub
xchg
divb
and
xlat
out
xlat
ds
mov
fcmovne
fnstsw
pushl
xchg
adc
mov
lret
jmp
imul
push
mov
jle
sbb
pop
idivl
ds
mov
lds
cmp
ret
sub
add
dec
xor
negb
mov
call
cmp
push
and
loope
jg
ret
out
fistpl
js
in
jns
scas
mov
in
scas
sbb
or
imul
std
cmp
mov
cld
mov
std
rcrb
or
out
bound
or
into
scas
scas
daa
and
aam
and
dec
mov
sub
sahf
in
xor
push
mov
mov
notb
mull
push
sub
cli
and
adc
jb
sub
push
stos
and
jnp
adc
mull
imul
movsl
adc
repz
xor
pop
aas
jge
xchg
pop
das
sarb
loope
mov
sbb
xor
xchg
xchg
sarl
and
add
aaa
or
jae
popf
into
dec
cmp
dec
push
bound
test
pop
jno
push
vpaddd
int3
cmp
dec
popa
inc
inc
lock
loop
fnstsw
adc
or
fldl
mov
imul
pop
mov
pop
inc
out
xchg
xlat
ljmp
mov
jb
jl
fwait
sahf
ret
mov
aaa
jo
cld
pushf
pop
pop
stos
fldenv
xor
out
jl
dec
xchg
push
cs
cmp
sub
je
add
cmp
lods
xor
sahf
sub
mov
mov
leave
xchg
and
pop
ds
sbb
push
je
loop
in
loope
nop
daa
sbb
cmp
sbb
arpl
mov
stos
mov
jle
idivl
imul
notl
sahf
cvtps2pi
xchg
frstor
push
push
and
jbe
roll
mov
fcoml
ljmp
mov
pop
sar
lahf
in
jg,pt
or
popf
jecxz
pop
xchg
mov
sbb
cmp
icebp
sub
stc
jmp
call
and
pop
cmp
cmp
xlat
movsb
mov
pop
add
dec
hlt
mov
mov
cltd
loop
daa
ret
mov
or
pop
stos
cs
push
adc
mov
mov
jecxz
jno
lretw
aas
fstp
and
pop
js
data16
data16
fidivs
aam
mov
xor
cld
pushf
ja
fnsave
pop
or
mov
sub
xorl
mov
jle
stc
mov
jmp
pop
mov
int3
stc
inc
inc
adc
inc
adc
sbb
ss
push
add
loope
push
lret
sbb
arpl
push
fistpll
add
aas
jbe
pop
cmp
and
stos
rcr
pop
out
cmp
dec
or
sti
mov
xchg
in
enter
call
pop
inc
push
jbe
in
mov
insb
push
mov
lds
or
popf
jmp
aas
inc
jno
xchg
mov
xor
ja
test
xchg
xor
std
jne
sub
mov
fdivrs
push
into
sti
popa
or
scas
jnp
push
subb
outsb
sbb
ds
push
push
push
sarb
out
jnp
into
movl
sub
movsb
pop
clc
in
xchg
xor
xchg
es
mov
aaa
in
dec
and
idivl
xchg
inc
xchg
dec
addr16
fcomps
jno
lahf
jae
out
bound
gs
cs
pushf
ja
mov
mov
and
mov
popf
repz
push
inc
clc
xor
bound
andl
mov
push
mull
pop
pop
and
out
imul
push
pop
add
std
lcall
adc
mov
xchg
sbb
xchg
xchg
scas
fwait
lds
push
jecxz
gs
in
pop
mov
sti
ret
or
int3
out
cbtw
pop
xor
cli
add
sub
andb
jmp
mov
in
loope
cltd
jae
std
dec
ljmp
movsb
scas
stos
push
and
pop
lret
lcall
movsb
in
cs
and
and
sbb
flds
mov
sub
divl
movsb
adc
mov
push
adc
popf
push
sbb
shrb
daa
daa
cmpsl
push
test
xchg
cmpsb
dec
lods
push
dec
aaa
adc
ret
not
push
dec
push
aad
aad
cmpsl
sbb
inc
pop
out
lahf
sbb
mov
idivb
cli
inc
xchg
pop
inc
cmpsl
idivb
adc
pop
push
cld
mov
aam
xchg
jne
cli
stos
mov
movq
mov
or
out
inc
cmc
outsb
leave
sub
stc
jb
inc
add
mov
jnp
idivl
out
inc
dec
xchg
cltd
dec
push
cwtl
lret
fdivrs
pop
mov
xchg
aas
adc
int3
sti
inc
and
ret
fwait
jne
jecxz
add
sbb
int3
insb
addr16
push
mov
insl
mov
clc
dec
jae
ljmp
insl
cwtl
popl
adc
xchg
imul
mov
lods
adc
sahf
dec
iret
es
inc
int3
adc
lods
mov
mov
imul
insl
sub
frstor
jbe
rcl
pop
jnp
cli
jge
mov
data16
shrb
and
cmpsb
lret
and
jmp
jl
outsl
xchg
jl
dec
lock
out
sti
lods
jg
sbb
push
leave
and
into
stos
fstpl
lret
dec
out
cmp
scas
and
xlat
loope
pop
push
lahf
xor
cmp
jne
fyl2xp1
or
pusha
jg,pt
jo
cmp
cmpsl
push
mov
pop
adc
ljmp
pop
shl
fwait
xchg
lods
add
jle
aam
pushf
xor
push
push
aas
mov
aad
shlb
mov
cmpl
add
sbb
dec
jns
mov
sarl
out
dec
scas
lods
test
pop
xchg
jnp
cwtl
roll
push
int3
dec
xchg
or
xchg
lea
arpl
stos
mov
repnz
push
jle
cmc
loope
std
rcll
pop
cld
push
pop
or
int
lods
cmp
adc
xchg
cmp
add
movsb
movsl
sbb
push
adc
iret
adc
add
push
jnp
jns
dec
hlt
test
repnz
push
popf
push
fucomp
or
arpl
imul
mov
mov
or
stos
enter
push
sbb
jl
jae
cmp
in
js
fisubs
inc
sahf
sub
out
lock
and
dec
and
add
les
lock
adc
jecxz
testb
cmp
sub
sarl
inc
data16
sbb
mov
jae
mov
lcall
adc
xchg
out
inc
add
mov
fcoms
and
loop
add
or
mov
push
mov
bound
adc
stos
repnz
leave
push
data16
or
lods
jge
sbb
sbb
push
jb
test
and
cmc
stos
insl
xchg
mov
stos
pop
mov
ds
cli
push
cmp
bound
cmc
dec
adc
ljmp
push
xchg
cmp
xchg
inc
xor
mov
in
pop
sahf
adc
add
pop
ds
xchg
mov
sahf
pop
sbb
jo
pop
cmp
jmp
mov
sbb
bound
pop
mov
mov
push
xchg
add
mov
daa
pop
and
jo
inc
mov
int
lods
movsb
mov
orl
jmp
subb
int
cld
mov
sub
mov
cmpsb
adc
aad
shll
inc
fdivrl
mov
shl
mov
cli
stos
cmp
xchg
inc
adcb
sub
pop
les
std
repz
stc
lcall
push
sbb
cltd
std
in
dec
inc
shlb
movsl
in
lret
popf
into
iret
push
cli
ja
mov
fsubr
mov
cmp
das
fildll
scas
xor
ljmp
ja
sub
push
cmp
sti
mov
iret
or
adc
iret
xchg
inc
push
and
xor
add
sbb
lret
out
mov
sub
cmp
jbe
sbb
aas
mov
push
jo
and
jae
adc
outsl
xchg
loope
cmp
inc
adc
sub
sahf
ljmp
nop
mov
lock
lods
dec
out
jmp
enter
add
mov
jns
dec
sbb
fmul
imul
dec
iret
or
mov
addl
outsb
dec
sub
movsl
loope
cmp
xor
dec
inc
pusha
add
xor
mov
cmpsb
dec
incb
lock
jmp
jp
jb
mov
pop
outsl
sbb
mov
push
sahf
inc
bound
adc
in
cmp
and
mov
in
cmpsl
sarl
mov
loope
mov
leave
and
rcll
mov
divps
sub
repz
xchg
movsb
jno
mov
push
mov
cmp
and
add
push
mov
xor
inc
xchg
xor
popf
cmpb
jg
insl
outsb
add
cmp
push
fabs
cmpsb
xchg
push
jge
in
pop
jbe
jl
int3
pushf
or
sbb
fs
pop
dec
xor
push
shrb
dec
dec
and
pop
fcmovnu
cmpsb
lods
cmp
jmp
push
dec
mov
mov
add
je
and
cmp
xchg
loopne
push
les
add
cmpsl
cmpsl
loopne
pop
mov
jno
lods
cmp
mov
fcomps
iret
pop
bound
pop
ljmp
rorl
adc
int
sahf
mov
stos
rol
call
arpl
mov
vpunpckhbw
shlb
das
push
xor
ljmp
out
mov
or
hlt
xchg
sbb
cmpsl
xchg
mov
loopne
and
test
xor
cmp
jno
xchg
fildll
idivl
dec
dec
icebp
cs
mov
xchg
mov
jg
insb
jne
sarl
cli
incb
test
movsb
into
sub
pop
lods
jge
jg
sbb
jmp
xchg
sub
dec
cli
aaa
mov
sti
ret
jg
pop
fwait
and
pop
mov
mov
sub
or
dec
push
arpl
dec
mov
mov
or
fstl
mov
push
out
dec
mov
rcrl
cmpsl
mov
aas
testb
out
cmp
std
mov
add
jg
cmp
clc
jnp
or
jno
dec
xchg
icebp
shll
or
sbbb
in
pop
fsubr
adcb
lret
shl
jg
and
and
in
call
int3
lcall
xchg
jae
movsl
movsl
lret
inc
inc
and
shll
addb
xchg
in
sub
mov
xor
xor
outsb
cmpsl
jnp
pop
sbb
popf
pusha
icebp
sub
subl
sub
sbb
dec
cwtl
mov
mov
cwtl
les
xor
jnp
iret
dec
xchg
popa
mov
push
adc
or
and
icebp
in
out
scas
pop
and
push
xor
bound
mov
pushf
push
adc
and
or
pushf
jge
ss
adc
pop
pop
es
jno
movsl
mov
push
sub
inc
xor
insl
sahf
xor
mov
hlt
inc
mov
rorb
test
pop
sbb
adc
inc
fdivs
pop
cmp
sub
into
sbb
cmp
cli
fistpl
jmp
push
in
jns
mov
cmp
ret
pop
int3
push
mov
div
inc
mov
dec
cmp
mov
cld
popf
lock
mov
add
faddp
inc
mov
leave
aas
adc
cmpsb
or
sbb
aam
sarb
cwtl
cwtl
and
push
mov
popa
push
nop
dec
outsl
inc
in
ficompl
lcall
mov
sarb
xor
mov
mov
mov
inc
divb
pop
les
fcompl
push
pop
mov
mov
rcr
or
clc
mov
leave
mov
imul
mov
enter
inc
stos
into
les
insl
ret
scas
push
shll
int3
aaa
or
je
jg
pop
test
mov
xchg
lcall
and
outsb
jb
push
repnz
lock
adc
outsl
test
in
enter
in
inc
pop
sbb
or
xor
xchg
or
or
lcall
std
lahf
in
leave
outsb
adc
lea
das
adc
pusha
push
ss
pop
aas
in
xor
xchg
cmp
loopne
test
push
lahf
and
mov
pop
iret
pop
dec
pop
pop
scas
test
js
lret
aad
ljmp
mov
jo
lret
test
cltd
and
int
popa
fucomi
push
jno
int
mov
in
mov
cmpsl
inc
js
js
sbb
int3
std
pop
and
xchg
rcl
jmp
pop
mov
xchg
mov
clc
mov
icebp
aas
loope
push
addr16
out
xchg
push
mov
dec
rclb
push
xor
icebp
loop
imul
test
push
inc
mov
xor
idivb
test
push
xor
in
push
fistpl
sbb
ret
jg
jns
mov
and
jle
shr
lods
jp
xchg
ja
push
into
roll
sbb
mov
cmp
test
test
in
sub
fisttps
xor
ljmp
add
push
push
add
andl
jp
rolb
xchg
dec
clc
push
jnp
add
sbb
in
fdivrl
loopne
mov
pop
cmp
jno
nop
inc
cmpl
popf
mov
xchg
adcb
mov
sbb
out
mov
in
sbb
test
inc
cmpsl
jae
loope
lods
fs
lcall
push
xchg
add
xor
lahf
mov
into
inc
fwait
inc
jmp
cmp
jg
push
cmp
sbb
ljmp
fadds
stos
xor
mov
movsl
push
add
scas
sarl
sbbl
int3
adc
inc
sbb
mov
mov
aas
das
aam
lock
in
cmp
in
or
arpl
or
xchg
out
xchg
jle
movsb
adc
movsb
push
inc
call
cmpsb
std
or
dec
inc
pop
shlb
loop
lcall
lret
jns
push
arpl
arpl
ja
dec
cmpsl
mov
jae
fstpl
mov
mov
pop
and
les
jne
push
mov
fwait
sbb
das
push
loope
jmp
rol
lods
pop
lds
cltd
jg
lds
hlt
push
insl
add
ss
push
lods
mov
cmp
xchg
pop
jmp
inc
icebp
mov
xor
mov
add
dec
popf
mov
mov
mov
add
andl
xchg
shll
xchg
lods
inc
or
mov
pop
lcall
ss
xchg
mov
stc
jp
or
inc
stc
ja
push
sahf
jmp
outsb
out
in
mov
push
sub
mov
sti
test
jnp
mov
sub
out
or
and
fiadds
mov
out
xor
rolb
repnz
in
into
test
mov
mov
mov
test
dec
mov
and
pop
cltd
sbb
decb
mov
daa
pop
lret
push
icebp
mov
mov
mov
imul
cli
sbb
loope
enter
ret
jg
push
pop
sub
add
shrb
adc
mov
pop
adc
or
xchg
std
mov
xchg
adc
sub
xchg
cmpb
xchg
sub
or
mov
xchg
scas
mov
loope
ret
or
jne
cli
push
cltd
mov
xchg
sbb
pop
loope
inc
int3
cs
mov
dec
outsb
cmc
es
push
jbe
xchg
mov
push
mov
dec
lds
inc
add
bound
mov
pop
inc
pop
rcll
push
push
xor
aam
mov
sahf
cmp
lds
addr16
sbb
jnp
loope
pop
sbb
ljmp
pop
fisubrl
xchg
aad
or
mov
pushl
lret
xchg
cmpsb
xchg
stc
rcrl
cmp
icebp
je
js
jns
test
inc
into
inc
push
dec
xchg
lds
jmp
dec
cs
push
ficoms
in
jnp
outsb
pop
sbb
push
or
dec
xchg
jp
push
and
sub
adc
xchg
xchg
xor
sbbl
xor
cmp
sub
loopne
lods
adc
mov
dec
mov
dec
xor
jl
sahf
add
xchg
add
loop
clc
inc
pop
xchg
shll
jno
fstpl
cli
mov
xor
and
cwtl
cmp
insb
nop
or
repnz
jno
jb
aad
or
push
and
mov
bnd
fidivl
fisubrs
push
xor
popf
jg
cmp
sub
cmp
jle
jle
stos
in
jmp
push
into
jecxz
cmp
and
pop
jp
cmp
scas
pop
mov
fs
fs
push
in
pop
mov
sub
fnstcw
daa
loope
and
lretw
adc
loop
daa
nop
pop
test
es
insl
fistps
icebp
ja
push
cmp
xchg
mov
and
arpl
jg
inc
push
or
xchg
pop
out
imul
lret
in
cmp
and
es
jmp
xor
adc
test
jns
push
fildll
cmp
inc
iret
sbb
mov
repnz
sub
add
cmpb
mov
dec
jl
aaa
pop
mov
inc
jae
call
sbb
inc
adc
cld
push
or
mov
lds
pushl
push
test
dec
cmp
cmp
sbb
shlb
loope
jl
shrb
xor
popa
out
mov
push
out
dec
cmp
insb
pop
sub
push
inc
nop
arpl
mov
stc
inc
ss
lds
stos
inc
aas
sbb
or
leave
imull
xchg
clc
dec
mov
test
or
bnd
push
jo
test
outsb
xchg
inc
sub
add
mov
xchg
pop
inc
or
inc
add
cmp
lds
or
mov
sub
jge
loop
jno
inc
jae
cmp
ss
cmpl
xchg
xor
test
dec
sahf
data16
insb
andl
hlt
das
std
popf
xor
xor
jno
bnd
es
fwait
icebp
aaa
lret
data16
inc
pop
and
std
cltd
lods
mov
jl
push
les
in
cwtl
cltd
lret
push
cmc
ljmp
pop
sahf
int3
adc
push
shll
pop
mov
cmp
xor
mov
push
out
loop
mov
nop
cmp
mov
cmp
pop
mov
sbb
xchg
xchg
jne
or
ret
mov
outsb
dec
ds
cld
es
and
mov
mov
sbb
dec
fnstcw
int
cwtl
dec
cld
mov
xchg
inc
mov
and
sub
xchg
out
mov
mov
aaa
xor
sbb
call
test
fdivl
test
mov
not
sub
addr16
sub
fisubrl
inc
nop
jnp
out
pop
out
jo
fadd
cs
test
jp
pop
or
pop
nop
insl
mov
or
je
mov
icebp
mov
mov
jecxz
rcll
pop
push
fistpl
std
pop
cmp
xor
sbb
stos
sub
sub
clc
iret
scas
arpl
pusha
sbbl
loopne
or
push
mov
dec
mov
xchg
sar
sub
xlat
movl
leave
jb
hlt
dec
ljmp
lods
cmp
std
in
lock
sbb
xchg
cmp
sbb
and
and
adc
test
add
out
out
pop
aas
insl
xchg
lods
scas
sbb
in
xchg
repz
loopne
dec
push
mul
mov
mov
cmpsb
push
xchg
jecxz
sbb
lock
mov
fistl
scas
xor
cli
mov
divb
stc
ss
mov
call
dec
mov
dec
push
sti
cld
mov
mov
jl
cltd
add
lahf
pushf
mov
xchg
mov
pushf
mov
in
sti
add
stos
xchg
mul
lods
mov
push
pop
cmpsb
jmp
repnz
and
adcl
rorb
dec
ja
mov
lock
ja
jbe
xchg
inc
add
sbb
ds
enter
inc
jg
xor
lds
lret
sbb
pop
jnp
adc
adcl
xchg
add
cmpsb
xor
dec
in
mov
int3
mov
cmpsl
cwtl
fildl
xchg
sahf
sbb
pusha
call
in
fs
fmul
les
push
and
and
adc
outsl
push
inc
loop
cs
jecxz
jo
dec
add
sti
and
aaa
fidivs
lods
imul
lods
decl
xchg
pop
hlt
pop
inc
xor
mov
aaa
add
out
xlat
jo
sbb
addb
js
aam
jnp
mov
bound
push
mov
outsb
sub
hlt
movsl
sbbl
aad
adc
mov
outsl
negb
or
or
add
push
insb
xchg
ja
adc
int
adc
cmp
popa
mov
repnz
sbb
fldt
out
in
push
push
test
mov
mov
jl
rclb
out
or
mov
inc
cli
xchg
push
jg
popa
faddl
dec
test
aaa
lret
sub
add
dec
jae
mov
cmp
dec
lahf
call
xor
loop
jmp
jmp
pop
pop
je
arpl
imul
ret
int
mov
pusha
xor
mov
cmpb
cld
aad
popa
push
or
aad
fnsave
mov
test
fwait
inc
sbb
into
in
sahf
pop
test
test
fnsave
adc
in
lea
push
in
repz
push
scas
in
mov
jne
mov
xor
mov
lods
dec
lds
jno
andl
fdivs
mov
sti
scas
out
mov
lods
mov
push
fstps
movsb
into
mov
pop
xchg
adc
mov
in
roll
mov
cltd
add
push
pop
cmp
fwait
rcr
scas
jbe
das
ss
arpl
add
sub
adcl
incb
sarl
lahf
push
repz
mov
popf
jbe
sarb
pop
enter
mov
cmpl
mov
pop
adc
lods
pop
outsl
sbb
mov
fildl
sar
xor
das
mov
data16
fld
test
movsb
lret
cmc
add
arpl
aas
inc
cmc
adc
dec
xchg
enter
pop
push
mov
ljmp
or
sbb
mov
insb
push
inc
or
stos
mov
aaa
xor
adc
mov
call
loope
push
cmpsl
jb
add
pop
jge
lods
or
xor
ss
adc
test
jg
aam
mov
xor
fwait
mov
pop
mov
fdivp
jp
mov
jle
ss
push
push
sub
pop
scas
push
xchg
push
sub
roll
imul
push
pop
mov
add
or
sub
inc
push
pop
adc
shrl
mov
inc
repz
inc
push
inc
gs
mov
mov
pushf
std
sbb
jle
cmp
add
inc
push
insl
mov
cmp
sarl
icebp
sbb
and
loope
xor
push
jg
push
repnz
aaa
stc
das
mov
lods
out
das
dec
cmc
dec
repnz
push
lods
jecxz
xor
lods
hlt
fisttpll
sub
lock
pop
scas
jbe
test
test
dec
mov
jp
fs
pop
mov
sbb
mov
mov
cmpsl
or
add
aaa
fnstenv
or
adc
xchg
adc
dec
loopne
out
stos
adc
and
adc
sar
ret
mov
jo
lds
mov
cmc
push
jg
and
and
std
notl
add
inc
popa
cmp
push
cmpsl
cmp
repz
mull
inc
push
addr16
cli
pop
jnp
leave
xchg
das
cmp
cmp
mov
stos
lahf
pop
cmp
jl
daa
xchg
mov
jns
and
repz
mov
and
arpl
add
cmp
mov
push
add
daa
sti
inc
shlb
int
inc
aad
jp
push
shlb
hlt
xchg
pop
sub
xchg
lods
cmp
inc
movsl
pop
push
ror
ficomps
ljmp
xor
mov
pop
out
mov
pop
aaa
out
daa
xchg
and
mov
mov
lret
aad
sub
insb
and
mov
pushf
push
pop
jbe
mov
jne
je
sbb
repnz
out
mov
in
xchg
int3
lahf
sub
lods
cmp
popa
scas
jno
idivl
les
nop
movsb
xchg
mov
pop
fmuls
sbb
inc
adc
adc
addl
out
fimull
mov
and
test
ja
icebp
adc
and
push
xor
mov
add
fcoms
pushf
sbb
xor
xchg
xchg
imul
mov
lea
out
jo
mov
and
into
test
or
mov
sti
test
or
mov
xor
or
lock
lret
inc
and
inc
and
aad
jp
xor
jp
dec
movzbl
pop
data16
gs
testl
or
push
mov
loope
inc
jle
clc
mov
lock
out
ja
mov
lods
dec
nop
dec
int3
mov
mov
jbe
xor
sarb
push
inc
jmp
and
mov
xchg
cmp
repnz
test
pushf
adc
daa
dec
neg
dec
aas
loope
jmp
int
dec
adc
subl
xor
leave
push
and
adc
dec
fstpt
idivb
xchg
jle
sbb
sbb
pop
or
inc
or
icebp
fisubrl
nop
mov
in
cwtl
cmpsl
data16
push
repnz
or
icebp
leave
fwait
dec
aam
add
lods
fldl
cmc
adc
and
dec
out
and
fildll
je
pop
in
xor
xchg
leave
xlat
and
fwait
sub
sbb
mov
push
jp
fninit
push
jecxz
int3
mov
out
jnp
cmp
xchg
pop
jl
out
sub
ss
add
call
movsb
mov
cltd
or
ret
lea
rol
cltd
mov
mov
xor
push
test
pusha
pop
pop
inc
adc
pop
test
mov
or
mov
mov
jo
mov
outsl
imul
adc
pop
cld
mov
mov
popf
rorb
aaa
mov
sub
adc
cld
mov
test
scas
js
aad
insw
push
mov
jns
hlt
mov
pop
mov
xor
ret
pusha
xchg
xchg
imul
or
push
push
sar
mov
repz
pop
or
xor
mov
stos
or
aam
test
int3
sub
cwtl
loope
cmp
or
std
insl
dec
pushf
and
call
xchg
push
lock
mov
movsb
lods
sub
ljmp
enter
jbe
jmp
test
aaa
sbb
sti
xor
pop
ret
inc
bound
cmpsl
in
insb
fs
jmp
clc
jno
and
cmp
and
pop
xchg
inc
adc
cmp
insl
loop
xor
xchg
bound
pop
sub
mov
xor
gs
pop
pop
enter
add
dec
fildl
mov
xchg
and
push
mov
sti
mov
sub
sar
mov
mov
sbb
sbb
jb
mov
add
imul
repnz
push
in
lds
cmp
mov
sub
xlat
or
aaa
into
imul
je
sbb
mov
mov
daa
pop
rcll
sbb
pop
cld
int
mov
xchg
in
sub
rolb
push
and
xchg
push
movsl
mov
rcl
pop
pop
fwait
sbb
addr16
mov
ja
mov
and
and
pop
in
and
sahf
incb
xchg
mov
mov
into
int3
in
call
mov
jl
mov
sbb
dec
addl
mov
mov
leave
movsb
stos
mov
cmpsb
imul
sub
fstpt
jnp
and
or
xlat
dec
fistpl
into
addr16
sbb
jae
or
loopne
push
sub
mov
mov
add
sar
roll
sbb
addr16
cmp
mov
aad
ret
sbb
xchg
aaa
sub
pop
add
loop
test
xchg
adc
es
out
jmp
mov
repnz
jp
jmp
inc
push
loopne
dec
dec
mov
xor
jecxz
ljmp
jl
stos
call
mov
pop
cmp
jbe
int3
and
bswap
dec
xchg
sarl
cmp
cpuid
mov
and
xor
sbb
fdivl
je
xchg
ss
repnz
dec
fisubrl
jbe
or
out
icebp
aam
push
test
inc
and
popf
mov
sbb
mov
inc
popa
pop
or
pop
aas
xor
js
cmp
or
jno
cmc
nop
leave
lds
or
out
pop
and
mov
cld
pop
movsl
shrl
xor
sbb
ljmp
sub
push
push
and
movl
jecxz
sub
js
xor
cli
dec
inc
mov
test
jl
loope
mov
pushfw
outsl
lret
rcrb
orb
lcall
lock
mov
dec
cld
jge
jmp
jmp
addb
mov
mov
cmpsb
aad
into
dec
into
lods
cmpsl
int3
data16
js
jns
push
outsb
stc
repnz
inc
push
mov
stc
std
stos
jns
testb
out
sbb
inc
pop
iret
inc
dec
gs
or
fisttpl
outsl
jge
sub
mov
mov
out
xchg
push
bound
jnp
pop
fmul
cmp
outsl
inc
push
cmp
enter
sahf
std
mov
push
ja
jb
xlat
inc
xchg
popf
cmp
fcoms
insl
call
mov
scas
ds
outsl
adc
jle
fwait
repz
arpl
nop
jge
adcb
out
jmp
call
popa
inc
pop
clc
adc
aas
xchg
jg
dec
rorb
cmc
mov
movsb
mov
cmp
or
in
imul
lahf
pushf
push
mov
lea
jo
pushf
or
mov
in
stc
lret
test
sub
push
add
pusha
frstor
fsubrl
xchg
sbb
scas
lods
mov
loopne
push
lcall
jno
jl
les
clc
ds
test
lahf
sbb
xor
frstor
enter
sarl
jne
data16
cmc
stc
ss
and
es
out
jle
test
in
lahf
cmp
daa
fildl
aam
jg
cs
insl
ret
add
ret
and
andl
jo
sub
out
lods
or
roll
xchg
fildll
leave
or
and
iret
into
aas
popf
test
testl
stc
mov
imul
inc
mov
arpl
mov
xchg
inc
pusha
mov
sti
adc
lcall
adc
sbb
shll
xchg
mov
insb
add
cmp
inc
loope
int
pop
scas
fisubrs
adc
notl
sub
mov
call
enter
adc
repnz
das
jne
mov
push
mov
cmp
sbb
adc
xchg
pop
pusha
mov
aad
shrl
mov
into
dec
jmp
lahf
outsl
cmpsl
dec
add
in
push
jl
pop
push
ljmp
bound
pop
les
jno
ret
sub
mov
xchg
cli
sti
sub
push
push
sarl
adc
test
lock
jo
shr
xor
inc
test
sbb
jne,pt
nop
xchg
imul
out
add
enter
push
das
push
shl
dec
push
mov
out
nop
mov
push
out
cmp
lock
sub
mov
clc
ljmp
pop
dec
fisubs
add
fwait
stos
test
out
jecxz
mov
jecxz
jge
dec
ljmp
out
mov
lret
or
push
fisttps
or
or
adc
mov
adc
in
sbb
idivl
clc
dec
pushl
fstp
xor
adcl
add
pop
in
xchg
test
sbb
stos
jno
mov
and
sbb
into
dec
add
andl
loope
pop
es
imul
dec
cmp
pop
repz
xlat
out
jb
adc
add
stos
imul
cmp
lods
fnstsw
outsl
xchg
das
icebp
xchg
and
jmp
xchg
adc
mov
or
sbb
cmp
xor
popf
xchg
sub
movsl
insb
inc
and
xor
lcall
jle
jne
inc
lret
out
or
jmp
dec
sahf
pop
out
mov
mov
mov
xchg
xchg
mov
xchg
or
outsb
mov
inc
ss
mov
cmp
rcpps
jb
dec
push
pop
adc
flds
stos
popa
imul
std
cs
in
add
push
push
lock
sbb
push
cltd
cld
sbb
mov
xchg
jp
in
add
xchg
adc
lahf
into
dec
inc
ja
lea
jbe
cmpb
stos
mov
bound
cmp
js
xor
cld
test
popa
jae
push
std
mov
sbb
mov
and
iret
add
gs
fbld
mov
cmp
xchg
lcall
mov
mov
outsl
jecxz
and
mov
dec
mov
xor
and
sbb
cmp
fs
lcall
leave
ret
cmpsl
scas
pushf
adc
rorl
cmp
dec
jle
push
pop
out
add
push
adc
addl
jne
mov
pop
or
aaa
mov
movsb
loop
lods
les
stos
ret
sub
mov
and
shlb
or
push
pop
hlt
iret
push
mov
ret
jno
mov
jg
sub
push
add
out
inc
mov
cwtl
jae
popf
packsswb
cld
jnp
add
fcomps
wrmsr
fwait
cmc
pop
mulb
pop
push
add
fs
cmp
jl
jo
mov
ss
or
scas
fsubl
mov
lret
incl
mov
es
sbb
popf
add
push
ljmp
scas
and
and
fucomip
pop
or
lds
or
std
or
mov
mov
filds
jecxz
in
popf
repz
in
clc
xchg
lds
adc
add
into
mov
scas
push
lahf
jecxz
cmp
mov
cld
jmp
and
lret
add
cltd
mov
fs
rcrb
xchg
adc
mov
lods
nop
outsl
pop
sbb
sub
add
ljmp
xchg
xchg
cmc
jge
pop
and
xchg
sub
leave
cli
mov
lcall
addb
aam
data16
rcrb
popa
mov
push
enter
rclb
mov
std
es
sbb
rcrl
leave
aas
test
mov
mov
dec
leave
push
stos
shl
enter
lret
push
lods
jp
mov
push
xor
adc
rol
jmp
aaa
shrb
xchg
dec
call
mov
popf
mov
jns
dec
jl
xlat
stc
enter
fdivl
lds
in
sub
mov
ja
or
bound
or
adc
xor
leave
mov
ds
sti
mov
js
cld
push
mov
stos
fwait
inc
int3
mov
repnz
or
jne
mov
mov
out
adc
pop
insl
insb
and
or
fiadds
movsl
fdivl
cmp
sub
addr16
cmc
cmp
mov
addr16
inc
fld
xchg
mov
xlat
jnp
xor
stos
jecxz
mov
movsl
sub
jne
fs
mov
ficompl
mov
xchg
jne
cmp
clc
ffree
mov
jge
out
mov
dec
aas
dec
pusha
or
mov
pushf
ds
xor
jns
cmp
jae
movsb
dec
lret
add
sub
sub
fnstcw
scas
scas
cwtl
inc
idiv
dec
cltd
xlat
and
sbb
ret
movsb
fs
lea
cmp
xor
out
xor
and
sub
adc
jns
push
test
jns
inc
mov
or
aas
fldenv
pop
leave
dec
outsl
bound
ja
movsb
cld
mov
xchg
mov
test
mov
adc
sbb
jge
clc
lods
addr16
adc
mov
sti
dec
shlb
imul
jecxz
gs
loopne
adc
mov
out
movsb
jecxz
jo
mov
cmp
xor
roll
cmc
pop
mov
and
jp
outsl
jecxz
mov
je
insb
xchg
icebp
or
and
adc
je
push
std
test
pop
push
pusha
adc
sbb
movsl
out
cmp
sbb
mov
mov
jo
jle
xchg
jge
ds
xchg
fistpl
jns
mov
or
dec
cmpsl
aaa
out
dec
sub
into
push
fldl
xor
pop
lahf
push
mov
setg
push
cmp
mov
mov
iret
jge
sbb
push
ret
pushf
ja
insb
lcall
sub
rolb
mov
bound
or
fsubr
mov
clc
daa
mov
mov
stc
fwait
inc
je
int3
adc
shlb
pop
rorl
inc
pop
add
in
or
clc
ljmp
outsb
sbb
dec
imul
mov
sbb
cmp
shlb
pop
dec
rorb
ss
cmpsb
lock
bound
femms
xchg
pop
hlt
mov
jb
imul
bound
repnz
ret
adc
cmpsb
xorps
movsb
sub
mov
jl
mov
aam
insl
push
jl
out
movsb
or
popf
pop
sahf
es
adc
subb
into
xchg
xchg
jp
xchg
add
out
les
cmp
jle
inc
insb
mov
jp
loopne
fbld
ljmp
inc
dec
mov
stos
adc
mov
push
or
jb
mov
outsb
push
xor
imul
stos
sbb
mov
xchg
mov
mov
mov
out
cwtl
movsl
mov
fisubl
shlb
stos
xorl
test
or
ret
leave
cld
sub
imul
loopne
in
xchg
das
test
repnz
and
dec
sub
jl
fisubs
sbb
ljmp
adc
call
and
and
mov
mov
jbe
addr16
cmp
dec
pop
shrb
sarb
das
mov
daa
dec
dec
sub
xchg
or
insl
stos
push
aas
sub
sahf
push
mov
out
xchg
push
sbb
jg,pn
lea
aaa
enter
sar
jb
addr16
insl
enter
or
out
xor
loopne
cmp
cwtl
fdivrs
inc
push
xchg
mov
dec
or
cmc
dec
pop
out
dec
aas
leave
subl
in
idiv
or
mov
xchg
repz
xchg
push
mov
and
jl
mov
push
pushf
pushf
lock
adc
cltd
outsb
insl
xor
xchg
mov
lds
imul
sbb
xorb
mov
mov
pop
mov
mov
outsb
adc
arpl
popa
push
cmp
mov
xchg
je
mov
inc
mov
jg
test
and
ret
fcoml
push
mov
call
cmp
xchg
mov
imull
sub
lcall
pop
dec
aad
cmp
cmc
jle
andb
ret
scas
sbb
sti
test
push
imul
jno
fldcw
js
and
cmpb
add
mov
xlat
popf
xchg
pop
push
stos
jb
hlt
in
or
mov
and
aam
ja
xchg
adc
cmp
aas
push
jo
inc
cmc
aaa
mov
lret
push
sub
jo
aaa
cwtl
jne
sub
xorl
adc
aaa
mov
pusha
cmp
cwtl
inc
and
lahf
sub
popa
insb
fs
or
xor
add
xchg
popa
into
pop
inc
dec
inc
loop
inc
fsubrs
fmuls
xchg
ja
lcall
lods
jmp
mov
call
scas
mov
lret
cmc
sbb
in
cltd
inc
in
xchg
cli
popl
xchg
jae
ss
cmp
lds
notl
fnstenv
rolb
cmp
dec
inc
or
ret
lcall
aad
jl
mov
push
pop
push
or
ffree
sti
in
aad
ficoml
fists
mov
mov
repz
lcall
mov
mov
ret
xchg
jecxz
mov
out
dec
lock
jmp
jbe
imul
movsl
and
jmp
inc
xchg
dec
jmp
xlat
les
add
cld
jns
rcrl
adc
ror
jp
incl
push
pop
pusha
lods
add
pop
popf
shl
inc
cmp
ret
mov
in
movsb
lret
cmp
adc
xor
insl
and
cs
jae
push
repnz
and
repnz
into
pop
or
xadd
jno
add
and
push
sahf
aad
cwtl
arpl
lret
inc
lcall
cmp
fs
mov
lds
sub
mov
pop
stos
orl
adc
movsl
sbb
scas
cmp
in
insb
ljmp
jnp
xchg
mov
cmc
sbb
and
test
aam
jecxz
or
xor
ret
call
dec
hlt
and
mov
dec
inc
in
jmp
cli
adc
fcmove
mov
cmp
xchg
fldl
and
pushf
dec
mov
data16
pop
das
pusha
rcl
movsb
jg
enter
popl
aas
push
lcall
jbe
and
ret
mov
inc
jae
mov
inc
inc
ljmp
xchg
mov
cld
cmc
sub
push
orb
loope
cmp
push
popf
fidivrs
mov
leave
call
push
fldt
ficoml
add
pop
sbbb
test
and
mov
inc
aas
aam
cmc
loop
test
adc
xor
jmp
int
or
and
pop
sahf
or
imull
push
pop
mov
aam
pop
pop
movsl
mov
push
data16
in
or
mov
jl
pusha
add
and
popa
push
in
fdiv
pop
arpl
adc
arpl
call
dec
aam
dec
gs
mov
arpl
out
add
test
mov
jle
add
addr16
stc
xor
mov
pop
sahf
ret
lds
xchg
cmp
xor
push
add
mov
lahf
cs
mov
in
loope
rcrb
mov
sbb
cmp
push
lea
push
js
and
jmp
loopne
adc
cmp
dec
mov
mov
add
dec
in
addl
mov
repnz
xchg
adc
sbb
cmp
jmp
adc
repz
push
adcl
lcall
push
lahf
out
int3
inc
push
sub
xorl
inc
icebp
stos
cmp
adc
pushf
pusha
lea
fdivrl
orb
in
fsts
push
test
xor
lea
fucomp
xchg
cmc
out
jnp
clc
push
mov
mov
lock
lods
mov
push
xor
jge
test
add
inc
scas
in
ljmp
icebp
popa
call
jg
aam
and
fiaddl
mov
stos
icebp
mov
pushf
mov
dec
xchg
or
push
into
inc
pop
les
jae
lods
mov
or
sbb
cmpb
and
or
mov
ret
in
sub
test
push
stos
clc
dec
outsb
in
and
shl
insb
mov
bound
outsl
add
cwtl
sbb
adc
push
jmp
and
jmp
cmp
movsb
dec
cmpsb
jmp
mov
cmpsb
punpckhdq
lret
dec
fcomps
xchg
adc
test
xchg
jg
pop
int
ret
push
add
fs
stos
xchg
movsb
fdivrl
aam
out
stc
or
enter
out
enter
inc
lcall
pop
xor
mov
ljmp
adc
subl
mov
and
aad
mov
pop
mov
pop
cmpsb
enter
cmp
mov
push
aas
and
cmp
addb
test
jle
mov
popa
sbb
sub
cs
in
dec
out
jno
movsb
dec
pop
mov
rolb
cli
dec
bound
mov
pop
sahf
enter
fisubrl
insl
jnp
shl
dec
cmp
xchg
push
scas
mov
mov
scas
orl
test
mov
sub
and
pop
in
in
mov
inc
mov
nop
pushf
mov
and
je
mov
fsubr
jb
cmpsl
mov
fwait
dec
aaa
fdivrp
pop
dec
imul
mov
or
test
stos
iret
pop
pop
aad
fmuls
lret
in
inc
scas
push
pop
mov
inc
mov
je
push
lret
xor
iret
popa
ret
scas
sub
out
push
int
push
sbb
js
mov
jnp
ret
pusha
jecxz
jg
cmp
jl
lods
imul
into
push
mov
enter
sbb
into
push
jbe
cmpsb
inc
cmp
idivb
pop
xchg
inc
mov
into
pop
jg
or
lods
mov
mov
imul
lds
in
xchg
shll
icebp
out
pop
mov
mov
adc
gs
or
jecxz
xlat
lds
repz
adc
enter
lret
dec
in
pop
jb
inc
jmp
orl
cmp
scas
xchg
sub
mov
aaa
or
dec
lret
andb
xor
cmpsb
jo
shlb
mov
js
je
cmc
mov
outsl
xchg
loop
xor
aad
or
sahf
std
add
push
fsubr
outsb
lcall
and
mov
add
mov
aad
xchg
sub
jl
aad
mov
dec
stc
inc
outsb
rolb
xchg
pop
sbb
bound
pop
lahf
jge
mov
sbb
fwait
sub
test
lock
cmc
add
aad
push
sub
sbbb
inc
fwait
and
or
jno
ds
add
jae
ss
mov
aad
int
mov
es
dec
jne
lahf
sbb
and
ret
pop
xchg
in
test
add
pop
loope
int
push
lds
jo
push
fdivs
or
imul
xlat
xor
sub
xchg
sub
and
pushf
arpl
push
jle
imul
push
mov
dec
or
xchg
mov
pop
cmp
js
mov
fidivs
adc
mov
cli
ljmp
lret
mov
lods
mov
lahf
movsb
or
jp
insb
jnp
and
mov
mov
mov
ret
fdivrs
fsubs
jno
imul
dec
es
sbb
dec
sbb
sarb
ret
mov
sar
or
adc
sub
ret
scas
push
int
pop
inc
sbb
push
mov
and
xchg
cmpsb
repz
popa
nop
pop
cmp
cmp
adcl
push
sti
inc
lock
fmuls
dec
dec
push
insb
in
xor
js
int3
aas
adc
outsl
icebp
sbb
jne
adc
aad
cmpsb
pop
test
sub
and
mov
jns
inc
xchg
mov
call
add
and
xchg
or
fwait
out
jb
xor
fdivrl
inc
dec
push
dec
jecxz
lret
mov
sbb
xlat
inc
sbb
mov
xchg
dec
add
and
shll
sbb
out
insl
sub
idivl
int3
jmp
or
jae
call
lahf
mov
jmp
testb
mov
js
or
or
pop
xchg
mov
or
push
adc
mov
stos
sbb
movsl
adc
arpl
mov
ljmp
fbld
divl
leave
das
jecxz
sub
filds
mov
scas
rcrb
ljmp
jne
jbe
dec
mov
sub
pop
jo
shlb
test
xchg
jmp
test
lods
test
cli
jp
jmp
add
dec
je
shll
mov
imul
mov
jp
je
jbe
inc
dec
idivb
loopne
mov
inc
test
dec
fs
test
lahf
fcmovnu
mov
push
addl
pop
lret
sbb
imul
cmp
xchg
js
and
insb
ret
sub
inc
mov
test
inc
or
sub
xor
push
inc
sti
cmc
aaa
ja
push
imul
divb
jne
lcall
popf
sub
mov
or
daa
xor
lahf
add
std
sti
jecxz
adc
movsb
es
lahf
xor
gs
pop
mov
pop
lds
loope
pop
xor
jecxz
imul
cmp
je
cmp
enter
cmc
inc
cmp
add
fxtract
es
mov
stos
cltd
pop
sbb
inc
fldenv
into
les
mov
lds
bound
test
sub
or
mov
and
movsl
hlt
dec
mov
ss
js
popf
ffree
pop
pop
adc
cwtl
xor
mov
push
dec
insb
sbb
adc
lods
mov
insl
mov
mov
xor
pusha
shll
jp
pop
movsl
or
add
mov
lds
and
mov
xchg
jl
sub
mull
movsb
and
xchg
mov
push
sbb
cmp
iret
xor
inc
mov
sub
inc
popf
mov
in
pop
sbb
decl
sub
outsl
push
aas
inc
sub
pop
sub
es
xlat
cmp
in
sub
or
out
adc
bound
cmpsb
loopne
xor
xor
lea
cmp
vphsubdq
daa
in
push
in
add
jno
and
push
and
nop
jae
sbb
bound
push
dec
or
cli
sbb
jb
mov
ds
imul
pop
dec
aad
dec
mov
loop
mov
aaa
sahf
clc
fwait
push
jg
xor
cmp
aam
outsl
mov
je
xchg
jl
push
movsl
jp
cmp
add
es
movsl
repnz
cmpsl
scas
outsl
mov
out
into
cs
nop
pop
inc
cmp
movsl
aas
fiadds
inc
add
add
sbb
sub
lret
xor
ja
mov
sub
cmpb
push
out
cmp
in
loope
add
push
dec
imul
xchg
lock
mov
daa
push
dec
mov
mov
mov
fs
dec
jne
cmp
push
ficompl
mov
ljmp
iret
xlat
adc
jecxz
ud1
inc
mov
mov
xchg
testb
cmp
sahf
mov
in
inc
lock
fsubrp
mov
movsb
out
dec
jnp
ret
xor
outsb
imul
mov
mov
sarb
xchg
arpl
lods
enter
mov
and
rcrl
jae
seto
mov
arpl
xchg
xlat
test
jns
xor
adc
shrb
jl
fiadds
mov
xchg
cmp
cld
inc
xor
sahf
cmc
inc
mov
xor
imul
mov
add
sbb
sbb
adc
lods
scas
sarb
xchg
nop
xor
mov
rorl
push
and
xchg
aad
inc
shlb
jle
sub
into
adc
mov
in
outsb
lds
xor
pop
jp
jnp
xchg
jmp
mov
add
push
adc
push
jbe
pusha
xchg
shrb
fwait
xor
push
mov
xor
imul
sub
add
dec
adc
dec
outsb
cmp
cmpsl
xchg
fnstenv
cmpl
push
fstpl
push
in
pop
ret
dec
ja
mov
loope
addr16
jg
sub
and
mul
mov
xchg
mov
jp
cltd
add
cld
stos
repz
js
stos
movsl
mov
xchg
gs
rcrb
sub
test
insl
pop
mov
jl
ja
loope
in
stos
mov
ljmp
pushf
movsb
iret
adc
lock
sub
and
jecxz
lret
mov
cmp
enter
mov
pop
jno
subb
jmp
jne
sbb
add
icebp
jae
inc
cmp
je
sarb
xor
jb
dec
inc
into
push
out
push
int3
dec
stos
aaa
ret
and
jl
and
leave
sarl
or
sub
mov
test
mov
jmp
enter
mov
dec
sub
scas
push
lods
fs
jb
mov
cmp
sbb
aas
xor
imul
test
insl
mov
mov
push
nop
mov
pop
ss
fcoms
fistpl
inc
pop
loopne
shlb
push
push
dec
arpl
and
xchg
into
stos
lock
inc
js
cli
sub
xor
ficomps
fs
adc
imulb
icebp
out
std
inc
rolb
adc
es
pop
mov
xchg
jno
fidivrl
bnd
scas
jnp
cmp
ret
orb
or
add
mov
mov
mov
iret
push
cmp
cwtl
sub
mov
mov
sahf
pop
cmp
mov
mov
subb
mov
jle
js
jl
mov
jbe
mov
insl
movsl
movsb
gs
scas
jmp
push
nop
scas
sbb
imul
pop
mov
fimull
loop
pop
orl
popf
pop
jne
loope
pop
rcr
aad
jae
sub
jns
sub
push
mov
mul
dec
pop
je
rorb
aas
arpl
or
aaa
push
jecxz
pushl
loope
loop
out
dec
loop
xor
addl
or
push
mov
pop
pop
pusha
xchg
inc
shr
imul
lods
subl
out
pop
inc
xchg
jne
aaa
mov
lahf
jmp
sub
mov
mov
divb
jbe
shrl
mov
mov
gs
or
xchg
stos
mov
adc
ja
les
or
test
sbb
cld
mov
ret
push
and
aam
orl
in
dec
cmpsl
xchg
out
repnz
dec
xchg
mov
adc
ljmp
xorl
stos
or
clc
gs
test
mov
cmpsb
dec
adc
outsl
lods
scas
ljmp
jo
repnz
out
ficomps
xor
pop
ret
and
adc
jbe
pop
xor
loopne
in
stos
push
popf
mov
inc
pop
loop
mov
sub
mov
faddp
push
adc
lods
cld
cmp
je
adc
cmpsb
mov
sbb
mov
mov
inc
movsb
testb
in
add
stc
mov
cmp
nop
pop
test
repnz
in
lret
stos
int
daa
push
pop
movsb
inc
loopne
int3
lcall
cmp
gs
fs
xor
xchg
sbb
inc
inc
dec
jno
incl
mov
sbb
mov
push
insb
stos
gs
pop
add
loopne
add
jecxz
aam
mov
scas
shrl
aas
dec
fimull
push
push
repnz
xchg
push
lds
mov
mov
jo
test
aas
adc
arpl
gs
sbb
dec
fsubr
mov
outsl
daa
repnz
into
inc
pop
xor
outsb
cmp
and
ficomps
xor
sahf
scas
pop
sbb
testl
pop
lret
sti
dec
iret
pusha
pop
mov
cmp
call
cltd
out
and
mov
fnstsw
pop
mov
push
mov
idivb
cmp
sub
or
imul
sbb
xor
out
cmp
lcall
lahf
hlt
xchg
pusha
cld
xlat
pop
fnsave
xor
lods
inc
arpl
fnstsw
in
mov
idivl
pop
in
xor
or
dec
cmp
mov
sbbl
in
push
stc
inc
iret
cmp
pop
xorl
mov
loopne
sbb
xor
jns
out
jl
push
push
in
lods
fisubrs
call
sbb
out
insl
adc
xor
outsl
sub
sti
cmp
pop
sbb
xchg
lods
fsubl
aaa
or
dec
fmulp
ja
enter
mov
and
aas
dec
stos
aam
sbbb
outsb
ss
lock
xor
jo
das
aad
mov
mov
pop
mov
js
jno
movsb
fimull
cmpsb
push
mov
scas
and
packssdw
inc
pop
add
fsubrp
mov
dec
jae
xor
cmpsb
sbb
movsl
jae
aaa
xor
push
dec
adc
fwait
mov
testl
ljmp
imul
lods
les
mov
xor
aas
and
and
test
andl
lock
nop
int3
pop
sbb
fucomp
fbld
mov
fcomps
pushf
mov
aad
icebp
mov
fnsave
cmpsl
jno
nop
popa
inc
jecxz
cmpb
lods
add
add
hlt
inc
inc
mov
pop
or
lods
out
push
out
sarl
sbbb
xchg
sahf
shll
inc
les
cmp
clc
sahf
sub
xor
icebp
scas
insb
decl
and
pop
in
ds
pop
rorl
mov
shlb
adc
mov
dec
mov
sub
mov
or
lods
sub
daa
mov
cmp
mov
nopl
xorl
movsl
pop
or
mov
es
fbld
cmpsl
cmp
xor
jmp
lahf
pop
xchg
test
sub
push
cld
popf
movsl
pusha
pop
int
es
jle
or
dec
fstl
xor
sbb
jb
mov
nop
xchg
hlt
push
lret
fwait
push
orl
fildl
rcl
imul
sub
mov
repz
xchg
xchg
push
mov
push
or
imul
jecxz
cmp
add
adc
lret
or
dec
popa
mov
sub
jns
cltd
stos
sub
mov
adc
xchg
or
and
inc
out
es
dec
lock
pop
mov
out
jmp
mov
scas
scas
sahf
dec
xchg
mov
sarb
and
inc
dec
jne
shrb
jmp
outsb
out
cmpl
push
xor
stc
mov
mov
stos
scas
sub
or
adc
sub
stos
or
stos
mov
push
fmuls
lret
test
cltd
fwait
fwait
cmpsb
sti
stc
test
popf
jle
or
or
iret
cmc
popa
popf
repz
nop
cmp
jge
shll
xlat
or
dec
fwait
xor
fstl
pop
or
addr16
inc
aad
xor
roll
push
ret
adc
mov
add
aam
xchg
jg
xchg
push
fstpl
call
lcall
cmpl
adc
pop
or
jge
xor
cmp
mov
push
stos
jge
pop
or
xchg
jl
xor
cmp
jecxz
add
add
add
in
cmc
sub
dec
push
dec
iret
xchg
jmp
or
and
test
mov
fcmovnb
shrb
push
sub
sub
add
jnp
aas
xchg
inc
lods
adc
jns
js
sahf
mov
les
jnp
pop
cmp
rcll
nop
mov
les
decl
cmp
iret
sbb
std
std
ficompl
sbb
pop
cmpsl
or
mov
loopne
mull
or
push
call
cmpl
pop
sub
and
into
cmc
inc
in
mov
mov
repnz
jge
fnsave
clc
pop
cmpsl
push
adc
and
dec
push
sbb
movsb
xor
or
sbb
das
ret
bound
jnp
inc
shlb
pop
and
jge
stos
outsb
popf
outsl
fisttps
mov
jbe
inc
xchg
sub
gs
push
enter
jmp
mov
incl
dec
push
andb
ret
call
jle
das
fsubl
jo
addb
leave
jae
lcall
jnp
sub
and
xchg
sub
fildl
cmp
ja
adc
repz
sar
xchg
cmpsl
mov
push
adc
cmp
inc
lods
loope
jb
mov
cld
xchg
mov
pop
sbb
and
mov
je
out
in
pop
adc
mov
push
int3
mov
inc
fbld
pushf
push
inc
test
dec
pusha
push
out
xchg
xchg
or
mov
mov
xchg
les
stos
aam
gs
pop
jmp
inc
sbb
push
in
jg
int
mov
movsl
cs
movsl
mov
adc
xchg
xor
jg
shl
popf
and
inc
dec
mov
jg
adc
xchg
mov
sub
inc
inc
les
daa
sarb
sbb
fs
cmp
ficomps
cld
dec
leave
xlat
mov
jp
subb
sahf
bound
mov
loop
jno
int
mov
repz
pop
mov
or
clc
in
lods
pop
pop
insb
inc
mov
push
inc
andb
jecxz
sub
mov
test
mov
in
or
add
mov
in
xor
fildl
add
xchg
popa
or
shll
nop
pop
out
mov
inc
out
scas
push
and
mov
stos
fwait
nop
test
dec
rcll
fdivrs
les
xor
xor
ret
test
xchg
loopne
test
jle
cmpsl
scas
lret
sahf
pop
push
aas
lcall
push
lret
sub
roll
mov
pop
or
push
mov
or
pop
fimuls
fisubrl
mov
bound
push
sahf
notb
cmp
pop
andb
cmpsl
push
cwtl
dec
cs
pop
mov
push
sub
je
aaa
out
pop
ret
lods
mov
mov
cld
mov
in
jmp
out
mov
in
sbb
sarb
push
push
cld
adc
push
dec
mov
in
mov
and
rcll
adc
or
add
lcall
sub
lods
xchg
test
sbb
sub
mov
icebp
dec
mov
push
xchg
xorb
insl
xor
jns
jne
or
arpl
addr16
loopne
or
gs
mov
test
fldenv
leave
fwait
adc
je
mov
in
pop
mov
jo
push
jns
in
dec
inc
sbb
xor
sar
xchg
dec
push
popw
pop
pop
push
pop
cmp
sub
adc
or
popa
xor
jb
clc
stos
inc
shrl
test
xor
sub
fstl
jo
mov
sti
mov
enter
cmpb
mov
push
xor
fsubl
je
aaa
add
lods
xor
loopne
bound
and
sarl
inc
call
jns
dec
in
aad
mov
jae
leave
sub
rcrb
out
call
or
jbe
loopne
subl
or
fwait
outsl
jmp
jne
mov
or
int
hlt
leave
loope
push
sub
mov
jmp
sub
adc
mov
push
pusha
xorl
imul
and
mov
jmp
mov
mov
jns
push
xchg
clc
sbbl
in
push
jmp
push
mov
je
mov
leave
fwait
jp
sbb
cs
sub
push
call
dec
inc
mov
jge
mov
lret
insb
pop
push
sbb
pop
ds
sbb
into
push
mov
je
sub
test
out
sbb
sbb
fcompl
push
leave
out
cmpsl
fisubrs
pop
fcomp
fcmovnb
xorb
fnstenv
bound
inc
pushf
sbb
mov
xor
pop
cwtl
jae
mov
loope
mov
pop
push
mov
pop
xchg
pop
loope
dec
mov
add
test
repz
xchg
dec
ljmp
enter
out
popf
shr
mov
mov
cmpl
xchg
sbb
xchg
xorb
out
pop
test
ret
out
movsb
andl
cmp
fwait
push
adc
adc
mov
sbb
cmpsb
leave
pop
arpl
repnz
filds
xchg
sub
fimuls
jnp
and
push
xchg
mov
and
in
sub
sub
aam
add
int3
dec
arpl
pop
outsl
cmp
data16
fidivs
and
inc
and
push
lahf
mov
push
xchg
hlt
fstpl
divl
pop
add
loop
mov
out
xchg
dec
enter
mov
clc
dec
movsb
rcrb
lds
inc
cmc
in
ss
xlat
aam
push
mov
sub
pop
mov
fimull
inc
lret
je
dec
jge
add
shrb
sahf
jb
push
mov
decb
jnp
fucom
dec
xchg
faddp
inc
loop
fistpl
mov
cmpsl
dec
mov
push
inc
cmpsb
xor
dec
ds
cs
movsl
movsb
dec
lret
or
test
cmc
or
or
adc
xor
push
xchg
sahf
and
or
fildll
ret
lcall
pop
push
inc
or
cs
in
push
out
adc
insb
scas
movsbl
les
jg
push
and
sbb
std
lods
inc
inc
xlat
mov
nop
call
pop
lock
and
mov
push
push
dec
cld
mov
mov
inc
sbb
and
xchg
inc
push
movsl
stc
xchg
or
mov
push
and
or
out
xchg
sub
xor
mov
stos
sar
test
pop
test
jl
enter
popf
pop
cmp
adc
add
insb
mov
lret
cmp
and
xor
cmp
mov
xchg
fwait
pusha
xchg
sbbb
and
jg
iret
in
xchg
or
loop
in
cmpsb
mov
xor
stc
loope
or
mov
xorb
prefetch
jbe
mov
pop
das
addr16
or
data16
lret
inc
into
add
mov
sub
mov
pop
nop
aad
add
andl
aad
xor
xlat
xor
pop
mov
enter
mov
stc
dec
push
jge
or
lods
js
insb
inc
stos
stc
addr16
push
shr
sub
test
or
daa
icebp
shlb
test
jecxz
leave
push
int
cwtl
rolb
push
xor
mov
jmp
and
lcall
scas
push
fwait
mov
stc
lret
out
aaa
sarb
mov
data16
push
push
pop
mov
jb
outsl
xor
in
adc
or
adc
adc
pop
fsubl
add
cmp
push
or
inc
popl
push
sub
imul
mov
out
xchg
into
mov
mov
sbb
roll
push
push
jns
js
ss
aaa
clc
popf
mov
stos
orl
ds
sub
add
sbb
pushl
pop
sub
jmp
xor
in
sub
push
push
xor
push
cmp
punpckhdq
andb
sub
icebp
cmp
scas
mov
inc
and
fdiv
stos
shrb
and
or
ret
bound
rol
repnz
sbbb
loope
xchg
test
sahf
dec
cld
cmpl
mov
int
clc
xlat
xor
add
push
sbb
push
inc
push
add
add
aad
pop
inc
shrb
ret
xor
mov
in
dec
cmp
inc
xchg
jmp
mov
or
movsb
mov
daa
inc
mov
ljmp
sti
lods
ret
daa
repnz
neg
sbb
cmp
lret
mov
xor
ja
int
push
xchg
inc
fidivrs
orl
xchg
test
xchg
mov
adc
ret
ljmp
mov
inc
sbb
icebp
sub
push
xor
push
rcrb
dec
outsl
push
jp
movsl
mov
dec
push
nop
xor
cli
ret
xchg
bound
call
sub
jle
or
icebp
or
mov
mov
out
filds
jl
aad
shl
pop
jo
jb
ss
outsb
sahf
test
stos
ss
notl
push
pushf
add
leave
jae
mov
daa
rcrb
dec
daa
pop
push
stos
pop
push
ss
xor
sbb
aam
sub
aam
mov
in
movsb
jbe
cmp
or
xorb
mov
xorl
push
mov
and
xchg
sbb
ret
xchg
sub
int
add
neg
sti
cs
popf
pshufw
sbb
sbb
pop
lahf
js
pop
dec
test
in
push
jl
or
adc
sub
sti
sub
test
inc
cmp
inc
add
in
out
lods
imul
inc
mov
mov
dec
test
stc
jne
inc
test
pcmpgtb
xchg
cltd
pop
scas
test
pop
xor
mov
add
test
push
dec
sub
inc
les
xor
stc
sbb
xor
stos
test
sbb
cmpsl
stos
gs
leave
lret
pop
enter
test
popl
aad
mull
fdivl
popa
iret
cltd
sub
adcb
shrb
adc
cmp
outsl
ret
adc
shr
jecxz
es
js
sub
add
rorl
aam
sbb
xor
dec
aad
fidivrs
js
movsb
roll
shrl
adc
pop
icebp
mov
push
ret
out
lret
ret
stc
imul
push
roll
inc
in
cmp
inc
mov
lods
adc
pop
mov
adc
inc
pop
pop
mov
jns
test
scas
mov
lcall
mov
lcall
inc
faddl
fisubs
mov
xchg
pop
xor
icebp
xchg
sbbb
dec
inc
xor
in
insb
in
jb
dec
inc
and
add
mov
xchg
or
fidivs
lods
adc
jne
dec
and
push
and
fst
xor
jae
test
mov
push
pop
int
nop
sbb
push
adc
hlt
movsb
add
pusha
sbb
lcall
pop
ja
xlat
andb
dec
js
dec
outsl
jbe
jmp
mov
push
xor
dec
xchg
out
inc
aas
cmp
inc
out
loopne
pop
bound
inc
jns
mov
jg
ss
test
cmp
push
xor
mov
xor
push
cmp
xchg
mov
mov
icebp
jl
xchg
iret
add
mov
sbb
xchg
and
adc
ja
pop
sbb
popf
enter
sub
mov
cmp
push
mov
cld
dec
pop
mov
jns
cmc
pop
xchg
jne
mov
in
sbb
dec
sub
jbe
push
cli
je
push
fsubrl
cmpsl
rcrl
adc
xchg
push
push
mov
js
or
cmpl
loopne
daa
test
push
lret
andb
out
xchg
xlat
pop
cmp
mov
clc
cmp
jecxz
out
sub
es
pusha
mov
dec
into
leave
fs
adc
hlt
mov
lahf
xchg
addl
pushf
mov
sub
out
push
pop
jae
push
sub
scas
inc
add
sarl
mov
sub
mov
adc
inc
pop
cmp
call
mov
and
and
adc
in
clc
fstps
enter
mov
fsubp
pop
mov
mov
mov
fidivl
jo
loop
pop
adc
push
jle
mulb
pusha
pop
out
test
push
pop
lret
dec
in
nop
inc
arpl
insb
xchg
fwait
lea
jns
cmpsb
and
jmp
mov
push
xor
pop
inc
mov
xchg
sub
or
mov
xor
insb
push
dec
or
or
andb
and
mov
jb
andb
int3
mov
data16
add
clc
gs
jbe
arpl
ret
pop
push
loopne
jne
test
lods
daa
mov
dec
inc
mov
push
and
shlb
fbld
rclb
xorb
pop
jmp
fstpt
imul
je
cmp
negb
arpl
push
or
xor
ret
dec
addr16
mov
insl
outsl
dec
mov
and
xor
imul
scas
pushl
pop
sbb
mov
dec
and
inc
xor
outsl
add
test
jp
dec
es
nop
mov
int3
out
cltd
scas
outsl
outsl
sub
mov
arpl
test
xchg
sub
dec
ret
out
sahf
addr16
loope
jne
adcl
fcmovnu
lds
notl
jb
jne
test
and
cmpsb
orl
xor
push
mov
repnz
hlt
mov
cmp
jb
cmpsl
adc
ds
add
adc
add
jno
sti
roll
dec
daa
adcb
jbe
cmpsb
scas
pop
push
cmc
arpl
mov
jns
fs
mov
push
lret
cmp
insl
jno
jmp
pop
push
lret
mov
mov
jnp
adc
mov
jge
imul
sub
sub
dec
int3
imul
xlat
ds
xchg
mov
fld
enter
dec
insb
int
push
dec
jb
inc
jbe
mov
inc
mul
cmpsb
int3
add
adc
dec
cli
inc
adc
es
insl
pop
pop
out
sbb
xor
fdivl
mov
mov
adc
xlat
or
xchg
adc
sub
push
mov
sub
add
mov
lods
icebp
cmpsb
mov
inc
arpl
pop
cmp
ja
push
adc
mov
cmc
in
gs
push
leave
push
mov
in
xchg
repz
push
cmp
jns
mov
lock
nop
mov
stc
adc
and
movsl
pop
mov
std
shll
and
mov
mov
dec
ds
mov
xchg
or
cs
mov
lods
or
dec
gs
xchg
popf
push
sub
adc
out
mov
sbb
jno
push
add
xchg
sub
pop
notl
ja
inc
clc
xchg
inc
fldenv
test
pop
mov
pop
aaa
sbb
lret
inc
push
das
fs
fidivs
jmp
ret
out
loopne
mov
hlt
sbb
iret
inc
aam
enter
xor
and
xchg
test
scas
shrb
pop
cli
push
fdivl
or
mov
cmp
mov
and
xchg
insb
cld
sar
movsb
xor
outsb
data16
lahf
sub
cwtl
and
loope
dec
pusha
lods
shll
std
push
repnz
xchg
jnp
pusha
mov
mov
es
dec
js
out
and
addr16
dec
pop
js
imul
cmp
int
loopne
and
call
adc
popa
inc
sbb
or
dec
stos
jecxz
or
fidivrl
xor
out
loopne
jne
or
ss
je
and
hlt
sti
add
cmp
pushf
pop
mov
adc
call
add
ficompl
or
mov
and
imul
cmpsb
or
mov
sub
out
pop
mov
aaa
ret
mov
in
pop
outsb
inc
cmpb
mov
mov
sub
mov
sbbb
out
into
or
sbb
pop
push
lahf
mov
mov
lock
mov
stos
xchg
xor
mov
lahf
test
and
push
adc
mov
dec
mov
dec
pop
scas
sub
scas
cmc
push
adc
mov
jg
js
mov
std
cmpsb
ss
lds
sti
sub
lret
aaa
xchg
pop
pop
cmpsb
jnp
sbb
and
lods
push
lods
dec
push
push
fldenv
jmp
fsubrl
rcl
dec
add
cmpsl
xor
xor
mov
cmp
mov
out
mov
pop
addr16
xor
outsl
mov
repz
sbb
push
push
inc
cld
cmp
push
cmp
jp
and
cwtl
adc
mov
pop
rorl
push
jl
lods
aad
fisttpll
rolb
jle
pusha
fwait
addl
lea
sub
dec
jb
mov
or
popf
rol
xor
out
cmp
push
sbb
loop
in
addb
iret
dec
std
inc
xchg
in
push
mov
daa
and
cmp
das
cwtl
nop
movl
lret
pop
push
dec
cltd
shlb
sub
aaa
dec
icebp
pop
movsl
cmp
jl
cmp
pop
adcl
inc
cmc
sahf
lds
dec
lea
jae
push
cmp
push
outsl
add
cmc
das
movsb
cmp
pop
cmc
call
out
push
inc
in
add
ret
fcoml
add
rorb
cmpsl
test
lret
sbb
pushf
jno
or
scas
pop
aaa
sbb
out
dec
std
ds
fbstp
pop
jl
icebp
pushf
mov
pop
push
inc
sub
sub
lods
out
lret
mul
mov
mov
mov
jge
cmp
push
fdivp
jns
les
xorb
movsb
adc
cmp
push
mov
insb
add
mov
es
push
and
adc
pop
dec
aas
xchg
mov
mov
adc
xchg
sub
mov
push
inc
sbb
test
mov
inc
cmp
nop
dec
pop
mov
shll
dec
dec
mov
jmp
test
inc
in
or
adc
aaa
inc
int
cld
mov
pop
inc
cmp
lcall
les
pop
lock
ljmp
mov
fistl
lods
inc
or
cmp
mov
jo
js
into
add
cmp
outsl
in
pusha
sbb
aaa
call
jl
xor
aad
pusha
jne
sbb
jg
cmpsb
sbb
cmp
lock
inc
jecxz
imul
setnp
mov
int3
out
sub
test
es
jmp
mov
or
and
and
mov
insb
inc
adc
inc
fsubr
loope
mov
mov
out
sbb
es
dec
aad
mov
pop
out
mov
aam
jmp
aam
xchg
sub
inc
je
mov
sub
xlat
rol
push
push
ret
mov
cld
mov
rclb
lret
int3
jno
movsb
mov
hlt
cmc
jle
inc
mov
cmp
or
push
pop
loopne
adc
push
and
push
xlat
test
dec
jge
pusha
das
mov
out
mov
lds
fdivrl
mov
mov
pop
std
adc
inc
add
add
cmp
lods
out
xchg
or
mov
bts
add
xor
popa
sbb
nop
cwtl
jb
add
ret
pop
pop
ret
dec
fstp
mov
rdtsc
nop
sbb
dec
and
add
fidivs
cld
push
mov
out
cld
or
hlt
sub
cmpsb
aas
xor
mov
and
pop
stos
inc
in
sahf
push
xor
sbb
stc
or
in
iret
test
jne
ror
jne
add
jecxz
push
xor
cmp
or
jno
das
mov
pop
enter
push
pusha
scas
xchg
or
adc
sbb
dec
add
aas
pop
iret
jmp
sub
xchg
test
sub
mov
push
outsl
or
nop
add
add
loope
cwtl
nop
mov
sbb
movsb
repnz
lcall
or
sbb
lds
iret
fldenv
adc
dec
jae
jmp
add
loop
jg
test
and
adc
xchg
lahf
dec
or
dec
call
push
push
jg
push
call
loop
xchg
ss
or
inc
lcall
scas
leave
pop
fisttpl
jl
xchg
sub
or
pop
icebp
arpl
fldcw
repz
fldenv
imul
sub
insb
out
lret
inc
test
adcb
add
inc
xor
insb
fisubrs
sbb
mov
jmp
scas
cmp
cmp
leave
out
sbb
dec
xor
int3
sbb
mov
in
out
out
dec
data16
frstpm(287
shlb
subb
jbe
push
push
jne
ja
and
arpl
sbb
lret
aas
leave
in
mov
push
enter
iret
mov
or
test
bound
ret
and
call
in
sbb
cmpsb
ret
imul
dec
subl
add
popf
in
pop
xchg
add
cwtl
adc
jae
decb
fidivrl
cmpsl
pushf
cmp
fsubl
mov
push
fcoml
xchg
mov
pop
inc
xchg
push
inc
push
testb
cmp
mov
add
xor
pusha
aas
test
dec
xor
sub
sub
adc
dec
fisubs
xchg
inc
subl
outsl
imul
push
fstp
insb
sbb
add
movsb
pop
xor
pop
hlt
pusha
push
fwait
jbe
wbinvd
out
inc
orb
push
pushf
ss
es
xchg
iret
mov
inc
test
popa
loop
je
and
xchg
int
popa
ret
pop
out
push
test
sbb
std
jge
sti
orb
jb
jmp
repnz
js
je
pop
cmpb
iret
inc
jecxz
data16
or
inc
ja
ja
stos
mov
fstpt
insl
movsl
xor
scas
push
subl
or
fwait
test
mov
push
lret
or
mov
sub
clc
cmpsl
aam
test
mov
xchg
adc
shrl
pop
dec
sbb
flds
gs
lcall
cltd
xorb
stos
pop
push
push
and
mov
fs
arpl
mov
add
sbb
test
pop
dec
fldenv
sub
js
jg
mov
arpl
daa
sub
adc
adc
mov
out
pop
mov
mov
or
movsl
loope
inc
enter
in
test
adc
loop
or
add
mov
jns
sbb
jle
nop
dec
lahf
add
cmpsl
das
mov
std
psllq
cmp
push
scas
push
adc
mov
mov
outsb
in
xchg
inc
movsb
xlat
jb
test
push
xchg
pop
add
xchg
cmp
ds
stos
lods
xor
movsl
inc
lret
mov
fmul
int
pop
call
mov
pop
sbb
push
add
sti
ljmp
mov
shlb
fisubs
dec
clc
loopne
into
add
adc
mov
aas
push
cmp
hlt
ss
popf
cmpsl
pop
add
add
lcall
sahf
popa
xchg
adc
out
xchg
mov
push
lods
xchg
in
icebp
jecxz
and
in
es
jg
xchg
adc
out
leave
push
in
fwait
orb
insb
xlat
sbb
repz
fstpt
gs
mul
dec
pop
inc
das
aad
adc
sub
mov
out
push
inc
int
jg
scas
and
fcoml
mov
inc
mov
mov
hlt
cmc
ret
sbb
push
andb
xchg
jl
push
rcll
mov
das
mov
jle
mov
cwtl
testb
ret
bound
pop
roll
seta
lcall
popa
pop
inc
mov
imul
xchg
mov
rcll
lret
stos
das
in
jecxz
and
sub
sti
bound
addr16
jl
and
add
dec
stc
add
add
insl
fsubr
and
es
inc
repz
xor
loop
aad
cmc
and
push
xlat
jecxz
pop
sub
mov
add
aaa
xor
inc
cvtps2pi
clc
lahf
sub
jl
rorl
mov
cmpsl
jbe
aaa
pop
aaa
lods
mov
movsb
test
pop
fcomi
int3
mov
inc
popa
push
jmp
in
jle
ret
and
jecxz
movsl
jb
mov
popa
pop
ds
push
scas
or
aas
push
adc
cli
les
push
lds
inc
sbb
pushf
and
in
mov
pop
mov
testb
lret
outsb
int
add
mov
fnstenv
mov
fsubl
mov
negl
xlat
jnp
aad
push
jl
xlat
adc
repnz
ljmp
cld
mov
mov
push
xor
push
and
je
mov
ret
imul
push
xchg
in
dec
mov
fcomps
add
mov
jns
insb
div
mov
enter
pushf
push
mov
jns
adc
lea
arpl
sub
ret
fdivrl
loopne
cmpsl
mov
mov
jmp
mov
push
lret
mov
lds
lock
sub
cmp
outsl
xchg
xchg
xor
jge
ret
int
mov
add
xchg
insl
popf
iret
insb
dec
mov
inc
xor
mov
clc
cmp
add
js
movsb
jmp
adc
fwait
or
xor
sub
out
pop
das
sub
inc
jo
jge
mov
or
data16
dec
iret
dec
ret
mov
push
inc
and
ds
or
xchg
jbe
mov
xchg
jle
inc
lds
call
dec
notb
clc
xchg
push
pop
dec
clc
push
bound
stos
ficomps
in
data16
rorb
inc
lret
jmp
repz
out
gs
xchg
jae
mov
sti
loope
inc
sub
into
cld
lods
xor
sahf
mov
orl
and
xchg
les
lahf
xchg
ljmp
neg
cwtl
pop
lods
cmpsb
xchg
rcll
or
mov
nop
test
std
ret
xor
rorl
je
and
repnz
sub
and
movsl
inc
mov
jge
jne
mov
jb
arpl
ret
cmc
adc
outsb
xchg
outsb
mov
mov
fldt
and
pusha
shrb
ss
fdivs
mov
mov
outsl
ret
mov
aam
fmul
es
jge
dec
cmc
inc
and
pop
push
pop
notb
repnz
repnz
icebp
xlat
bound
inc
xchg
pop
cmc
imul
stos
pop
pop
ljmp
subl
mulb
cli
add
mov
dec
cltd
mov
xor
nop
aas
inc
mov
sbb
sbb
leave
insb
dec
add
inc
sahf
int
cwtl
iret
emms
dec
adc
hlt
sarb
int3
and
sub
sub
iret
lock
repnz
push
xchg
or
dec
and
das
rcr
mov
adc
mov
insl
test
daa
lahf
mov
aam
sbb
ss
xor
mov
sbb
ret
orb
outsb
test
out
push
sub
push
mov
test
xchg
add
icebp
movsb
jbe
sti
inc
subl
lret
sub
test
je
mov
jno
movsl
pop
mov
ss
mov
sub
sbb
bound
rcll
clc
ficoms
and
jb
loope
dec
loope
sbbl
xor
fcmovne
cmpsl
mov
cmp
lock
clc
sbb
ljmp
add
imull
lods
xor
pop
and
in
push
mov
pop
sbb
dec
lret
fwait
push
je
std
jl
pop
movsl
je
cwtl
xor
mov
mov
inc
popa
andb
push
jmp
mov
lods
arpl
loop
jo
inc
std
push
adc
shl
in
fstps
roll
sub
mov
fbstp
cmp
sbb
js
repnz
ret
jg
loope
xlat
mov
mov
es
cli
xor
mov
icebp
jecxz
fdivs
add
iret
sub
sbb
push
add
ss
or
aaa
pop
sbb
cmp
cmp
out
mov
daa
sub
push
or
inc
and
pop
mov
arpl
dec
mov
int
nop
sbb
out
mov
pusha
xor
ficoms
out
adc
jno
mov
inc
cmp
jp
dec
inc
mov
dec
adc
mov
fdivrs
lock
loopne
std
lods
shll
xor
out
sub
sub
jae
dec
jno
sbb
sub
sahf
adc
xchg
shrl
mov
test
inc
or
das
pop
insb
or
adc
bound
cmp
pushf
jl
lods
jge
mov
jb
or
mov
insb
cmp
aaa
mov
fdiv
icebp
fstpt
pop
jecxz
sarl
shll
insb
test
mov
mov
xchg
call
mov
sub
enter
add
loop
adc
sub
mov
scas
xchg
enter
xchg
js
inc
cmc
sub
sub
inc
inc
rorb
mov
xor
mov
jl
xlat
xchg
or
outsl
push
jb
push
lret
adc
cmp
ret
lods
pop
out
jp
repz
and
pop
je
cmpsb
xor
insb
lods
pop
loope
lods
sahf
pop
add
shlb
pusha
xorb
leave
inc
mov
jp
dec
into
ficoms
prefetcht2
pop
lods
fistl
adc
call
or
ljmp
cmpsb
cwtl
lea
hlt
xor
dec
fs
mov
rcl
ljmp
push
dec
fistpl
xlat
fcmovu
jne
jmp
int
adc
inc
js
sub
aaa
data16
push
xor
adc
in
adc
cmp
int
ficoml
inc
das
adc
icebp
bnd
pushf
fcoms
imul
push
sbb
jmp
fdivrl
pop
bound
mov
shlb
dec
inc
mov
pusha
in
mov
push
dec
dec
and
push
movsb
scas
xchg
dec
jge
psubd
jb
push
cmp
scas
mov
mov
rcr
in
cwtl
repnz
push
pop
xchg
shlb
in
test
dec
jp
xor
cmp
out
xor
shlb
pop
adc
xchg
test
jnp
rcrl
lock
cmp
cld
or
repnz
and
out
sbb
push
jb
adc
jo
addr16
popf
cltd
js
roll
pop
imul
clc
and
inc
hlt
out
imul
jl
cmp
push
shl
in
mov
pop
sti
cmp
add
int
out
fldenv
jns
jmp
inc
out
arpl
inc
ret
out
fdivrs
xchg
mov
dec
xor
in
ljmp
sub
lahf
jno
rorl
out
mov
jb
push
mov
shl
jl
mov
dec
and
lret
pop
ss
adc
or
inc
nop
push
aam
xor
in
aad
idivl
mov
mov
and
mov
xchg
mov
fidivrs
hlt
and
xchg
lds
cmpb
scas
outsl
push
mov
dec
xchg
inc
inc
pop
cltd
pop
stc
push
clc
aam
inc
inc
popa
rcll
data16
inc
xchg
pop
sbb
mov
mov
test
jg
ljmp
pop
loop
sbb
push
dec
daa
imul
mov
pop
and
clc
cs
iret
ret
enter
sub
movsb
shll
je
pop
out
aaa
andl
sbb
adc
sub
xchg
pusha
push
adc
xor
cmpsl
ss
js
cmp
ret
fs
jnp
mov
imul
push
mov
mov
js
sbb
mov
imul
lock
loop
cmp
insl
push
hlt
pop
pushl
sbb
inc
cmp
fsts
sub
loop,pn
cmp
aas
shrb
outsl
jecxz
mov
pop
dec
fcomps
pop
dec
push
and
jnp
push
repz
mov
adcb
cmpsl
pop
stos
cli
cmp
push
clc
sub
mov
ja
jecxz
leave
sub
adc
xchg
mov
pusha
mov
inc
or
daa
popf
push
out
sub
lods
xchg
clc
lods
leave
es
mov
jbe
and
test
test
int3
or
inc
cltd
insl
cmc
jecxz
rorb
xor
std
je
stos
or
push
addr16
sbb
fcmovnb
jecxz
and
sbb
cmc
nop
push
jg
pop
jno
cmp
xchg
cld
mov
mov
and
jge
jne
dec
pop
sub
jb
adc
mov
fidivrl
aad
cmp
bound
sbb
mov
mov
lahf
insb
xchg
mov
pop
adc
fsubrs
js
jecxz
add
out
sub
test
adc
cltd
lods
vgf2p8mulb
std
mov
pop
dec
jp
adc
shl
or
out
mov
sbb
pop
inc
mov
jns
faddp
sub
shl
push
xchg
mov
dec
out
stos
cld
scas
mov
adc
nop
mov
push
rcll
int
or
es
das
inc
aam
das
dec
daa
sbb
in
jns
fisttpl
jb
ret
shlb
adc
mov
daa
cld
jle
push
pop
pushf
cmpsl
or
jmp
lret
mov
cltd
mov
sub
sbb
ficoml
sub
xchg
mov
aad
jb
xchg
aam
mov
mov
data16
ss
inc
xchg
pop
std
sbb
mov
test
jp
out
arpl
lret
mov
push
push
jmp
rcll
jg
xor
cmpsl
dec
dec
in
outsb
hlt
add
jge
insl
jnp
fistpll
jecxz
test
pop
inc
mov
sar
aad
mov
cmp
gs
fnsave
es
push
fwait
mov
aaa
fidivl
es
movsb
xor
add
xchg
mov
and
sbb
adc
and
data16
jb
cmc
inc
inc
inc
push
pop
rclb
sub
loopne
loop
cmpsl
mov
cmp
rcr
outsb
lds
out
and
outsl
into
inc
arpl
aad
or
xor
aas
in
lock
lret
div
jnp
xchg
mov
jnp
xchg
jns
dec
frstor
sti
subb
std
jp,pt
into
icebp
outsb
pop
insb
lcall
and
lods
and
pop
negl
sub
ljmp
xchg
xor
sub
leave
data16
pop
adc
dec
int3
xchg
push
push
fistl
jb
aam
ret
push
sbb
xchg
and
in
xchg
mov
cmpsl
or
out
dec
outsb
rclb
jne
mov
inc
test
jns
addl
cmp
shlb
aaa
mov
jmp
inc
jb
pop
pop
sub
adc
xchg
mov
lods
aad
jp
mov
aas
sub
popf
adc
or
aam
or
inc
sahf
fnstenv
pop
sub
aad
mov
daa
ja
adc
sub
fucomip
dec
sahf
push
dec
push
lods
aad
jl
fldl
xchg
jo
bound
mov
push
popf
mov
adc
push
sahf
xor
push
or
dec
jle
loop
pop
imul
cmpl
mov
dec
cmc
aaa
push
xchg
cmpsb
xor
or
enter
push
xor
xor
mov
mov
add
js
mov
and
push
in
push
dec
test
jo
mov
xchg
mov
loope
lret
aas
sbb
pop
jns
cmp
outsb
lea
or
les
call
lds
ret
cld
idivb
adc
loop
dec
sbbl
data16
sbb
sbb
ss
add
cli
or
xor
or
mov
cmp
lahf
scas
jae
leave
jle
mov
in
sub
mov
es
xchg
adc
in
addr16
add
fs
adc
bound
in
xor
fwait
outsl
mov
pop
and
sub
inc
pop
or
mov
xor
jge
daa
filds
loop
pop
pop
dec
push
pop
add
scas
cmp
mov
mov
fdivs
movsl
loope
xor
aad
sahf
lock
adc
inc
add
in
clc
enter
mov
xlat
mov
push
stc
gs
push
mov
mov
outsl
addr16
inc
and
mov
bound
ret
mov
push
xlat
sub
mov
sti
out
cmc
pop
lcall
repz
stc
ja
push
dec
push
je
cmp
pop
inc
pop
je
pop
std
dec
ja
and
push
mov
lahf
mov
push
sub
or
popf
jl
mov
shlb
cli
sub
pushf
pop
xchg
push
ret
cmc
andb
push
sbb
loop
cli
mov
adc
je
push
stos
pop
lahf
sbb
pop
cli
mov
outsl
loop
cmpsl
xchg
mov
pushf
push
add
ds
mov
pop
jge
bound
and
lcall
lret
clc
sbb
mov
mov
ja
sbbl
xor
dec
aad
and
xchg
adc
aas
in
aam
dec
popf
xchg
and
sbb
sarb
jae
ret
and
mov
mov
push
out
dec
out
pusha
test
punpckhdq
dec
fcomi
sbb
jae
lods
aad
cmpsl
mov
repz
or
movsl
aam
cwtl
add
inc
cmpsb
sub
sbb
mov
divb
aam
insb
addr16
adcb
xchg
xchg
mov
shll
lods
loop
xor
hlt
or
sub
sub
push
sbb
inc
jmp
ss
push
sahf
loop
gs
xchg
fstpl
mov
mov
fs
aaa
mov
ret
cmp
fs
in
pop
mov
xchg
fdivrs
mov
je
loope
in
aad
leave
sub
int3
stos
std
or
test
mov
imul
xchg
or
sti
sbb
xchg
rorl
mov
xchg
lods
adc
imul
pop
dec
or
inc
rcrl
aaa
outsb
add
mov
push
ljmp
cld
jg
jmp
inc
adc
andb
mov
out
ret
xchg
or
push
mulb
fisttpll
cld
dec
sbb
out
jmp
das
push
inc
jnp
jno
call
ss
and
mov
mov
stos
lahf
movsl
test
outsl
or
rcrl
rclb
push
xorb
nop
int
xchg
pusha
sti
jmp
jg
xor
aas
outsb
push
dec
sub
std
cld
mov
pop
cltd
fldcw
xor
and
int3
xlat
pushf
lods
fsubs
test
jg
movsl
mov
xor
push
xchg
pop
mov
or
addr16
jmp
pop
sbb
jo
dec
mov
in
das
xor
push
inc
cmp
xor
lahf
mov
mov
movsl
jl
adc
lea
and
push
inc
mov
xlat
mov
xor
cmp
jle
test
nop
lds
sub
popa
mov
jp
pop
test
adc
lock
aam
push
mov
mov
iret
or
loop
xchg
sti
add
loope
imul
mov
adc
push
iret
push
mov
mov
rep
vpsrld
lret
xor
hlt
pushfw
enter
gs
mov
xchg
jne
icebp
xor
push
mov
jne
movsb
cwtl
sub
scas
and
mov
cmp
shlb
mov
pusha
in
fldt
mov
in
dec
lcall
push
outsl
sub
mov
mov
dec
and
add
dec
adc
adc
xor
and
cmp
call
push
add
arpl
dec
sbb
xchg
decl
pop
mov
add
mov
pop
pop
fstl
test
iret
pop
mov
dec
push
in
xchg
outsb
addr16
test
lods
adc
pop
sbb
test
xchg
push
pop
call
jnp
aas
xor
shrb
and
xor
cltd
xor
sbb
lods
inc
in
fwait
shl
dec
ljmp
or
lret
dec
iret
aaa
jbe
xlat
arpl
push
negb
int
rcrb
fdiv
jp
and
sbb
sub
sbb
sub
add
mov
mov
loop
fsts
push
das
cmc
pusha
lods
pushf
sub
mov
jnp
xorl
mov
jns
ret
call
xorb
cmc
push
loop
mov
sub
inc
cmc
push
dec
xchg
daa
cmpsl
test
and
dec
xchg
cmp
xchg
scas
add
shl
mov
and
outsl
test
mov
push
jle
mov
cmp
je
jmp
push
daa
sbb
dec
sbb
arpl
insb
inc
pop
lahf
fdivrl
xchg
enter
std
xchg
sbb
in
sti
and
and
add
inc
test
mov
sbb
scas
out
addr16
movsl
gs
call
cwtl
rorb
inc
pop
pop
sbb
push
pop
inc
and
fistpl
shrl
stos
cmp
add
fadd
ficomps
inc
dec
sbb
or
mov
out
xchg
cmpsl
ret
cmp
aaa
xchg
setns
mov
adcb
or
xor
int
pop
pop
sbb
mov
icebp
outsl
sub
dec
cmp
aas
lds
test
fxam
jmp
mov
repz
in
push
lret
jecxz
add
and
adc
cmp
mov
jno
jge
xor
jecxz
add
gs
add
pop
aad
cmp
pusha
cmp
adc
mov
jl
orb
jmp
lods
adc
push
fwait
add
iret
cltd
mov
sbbl
cmpsl
mov
ret
pop
jle
xchg
mov
jge
mov
inc
arpl
ss
ss
mov
es
push
mov
add
adc
daa
imul
xor
data16
mov
orl
std
mov
scas
cmpsl
pop
or
dec
mov
popa
mov
lods
daa
pop
movsl
sbb
cs
push
into
scas
rcrb
and
pop
ja
movsl
sti
mov
and
icebp
ficoms
sub
adc
xor
icebp
popf
insl
cmp
sub
jbe
cmc
pop
mov
in
adc
cltd
mov
and
lds
xor
add
sub
imul
clc
movsb
call
test
jmp
daa
xor
fistl
adc
pushw
test
out
int
add
adc
mov
push
add
dec
sub
repz
inc
or
mov
aam
cmp
jne
sbb
lret
jecxz
popa
pop
jmp
in
mov
xlat
mov
adc
lret
mov
and
pop
repnz
out
clc
pop
pop
inc
cmp
movsl
or
test
adc
insl
bound
ja
pushf
nop
mov
hlt
cltd
add
sub
cmpb
mov
pop
add
ja
das
cld
loope
jne
mov
pop
cli
push
dec
sbb
xchg
wbinvd
dec
das
sub
lea
pop
adc
sahf
fsubl
mov
sahf
test
or
clc
stc
jne
call
ds
mov
mov
pop
jp
stos
ds
sti
cmpsb
test
cmp
pop
sub
push
add
adc
out
lds
and
dec
adc
ret
push
out
popf
push
mov
dec
popa
dec
pop
ja
rorl
bound
movsb
inc
popa
sbb
xchg
and
dec
pop
push
pop
or
ljmp
cmp
cmp
imul
mov
daa
outsb
pop
pop
orl
andl
sbb
lcall
aam
inc
xchg
add
movsb
jp
out
sti
xor
sub
mov
jecxz
push
fiaddl
xor
inc
jle
mov
test
out
add
int
loop
jns
push
xchg
xchg
iret
jl
js
sar
jle
pop
dec
ja
repnz
shl
int
das
and
xchg
js
das
arpl
xor
movsb
dec
push
loopne
jmp
push
mov
scas
movsl
loop
push
fisubrs
inc
jbe
adc
cld
push
xor
std
sub
fidivrl
push
rorb
sahf
xchg
into
sub
lds
outsb
sahf
insb
push
aam
in
fmuls
sbb
jno
push
mov
xchg
xor
daa
push
sbb
add
push
xor
jp
hlt
shll
je
fcmovnu
jne
out
sbb
mov
insl
insb
inc
les
and
sahf
xchg
xor
ret
cmp
mov
jl
mov
mov
cltd
cs
out
imul
lea
xor
jbe
arpl
pop
and
mov
jg
fsub
in
int3
dec
and
mov
sbb
jg
out
mov
mov
cmp
pop
mov
imul
cmp
gs
sahf
imul
fisubrl
push
insl
mov
mov
mov
xchg
aas
pop
sbb
clc
test
mov
nop
cli
out
xchg
mov
jge
add
jle
mov
and
fstpl
dec
imul
movsl
sti
stos
mov
jmp
ss
lret
jb
and
pusha
int3
xor
push
xchg
or
push
hlt
fiadds
adc
and
and
sbb
lods
mov
lret
inc
mov
xchg
inc
in
ret
mov
lock
lods
jne
adc
out
repz
shll
scas
js
mov
lret
arpl
pop
fcmovb
jp
or
inc
mov
jbe
fimull
cmc
jge
mov
pusha
push
add
aam
push
ficomps
pop
dec
add
rclb
mov
je
jmp
inc
xchg
mov
xor
sbb
scas
popf
pop
cmp
jbe
mov
pop
jle
sbb
xchg
gs
loope
popa
add
ja
lret
inc
int
or
xchg
aad
fdiv
out
sahf
pop
push
mov
pop
mov
xchg
push
xor
pop
outsb
inc
sub
lret
jmp
pop
sbb
sbb
jle
cmc
dec
inc
arpl
rolb
xlat
mov
inc
xchg
jo
data16
dec
addb
cmpsb
push
loopne
mov
rorb
fists
and
xchg
cmc
lret
lods
cs
mov
mov
xchg
adc
add
and
sub
stos
data16
hlt
mov
xchg
out
cmp
daa
fwait
orl
insb
rcll
lcall
aaa
inc
test
mov
jns
adc
inc
cs
psubsb
dec
and
imull
and
inc
lock
push
mov
add
data16
pcmpgtd
jne
mov
in
into
in
fwait
mov
sarl
cld
mov
sbb
insl
aaa
and
add
imul
rcrl
orb
sbb
lret
mov
std
icebp
xor
dec
push
and
and
inc
test
and
cltd
push
xchg
stos
ss
xor
xchg
mov
popf
sbb
or
push
and
cmc
in
es
push
xchg
jecxz
pop
mov
push
cmpsb
lahf
dec
add
push
sbb
lcall
out
jbe
mov
push
dec
mov
clc
fdivl
cltd
xchg
fstpt
push
fstps
xchg
cmpsl
pop
xor
inc
inc
cmpsb
xchg
movsl
nop
sbbb
faddl
and
cwtl
dec
lret
out
push
ds
data16
xor
pusha
paddusb
std
mov
in
cmp
inc
lret
inc
or
or
mov
cwtl
xor
mov
cltd
mov
cmp
pop
add
mov
push
ds
sti
or
adc
push
insb
dec
and
inc
test
mov
cli
pushf
pusha
movsb
sarl
in
cmpsl
sti
ljmp
jne
xchg
gs
mov
loopne
xor
stos
pop
inc
inc
movsb
mov
add
arpl
imull
and
push
mov
stos
push
cmp
je
mov
jl
in
xchg
div
mov
pop
push
jl
sub
xchg
mov
pop
out
or
xchg
cmp
cmp
add
call
add
les
inc
and
insb
and
sbb
xchg
push
xlat
enter
jge
inc
stc
ret
pushf
xor
mov
adc
sbb
decl
and
fildl
repnz
icebp
adc
xchg
inc
ret
sub
pop
es
sub
cs
lea
daa
xor
cmp
lods
inc
shr
sahf
fsubrs
adc
insl
and
push
sub
mov
xchg
shr
out
add
and
sbb
pop
sub
dec
hlt
or
leave
sub
sub
cmp
movsb
movsl
inc
inc
jp
fwait
and
ret
int3
pop
stos
xchg
add
stos
jns
cmp
add
sub
hlt
popf
mov
jp
xchg
and
subl
sub
dec
outsb
dec
mov
lea
ja
sub
pop
imul
lods
stc
xor
hlt
add
icebp
cmc
rcrl
stc
add
xchg
fwait
dec
or
je
mov
or
mov
pop
insb
push
jecxz
mov
pop
lea
push
shlb
adc
lcall
push
in
std
inc
and
mov
inc
in
or
addr16
pop
loop
mov
shl
and
jns
loop
adc
sub
inc
jb
xchg
mov
sub
stc
push
nop
aad
pusha
in
aas
push
add
fstps
or
or
lea
pop
fnstenv
or
sbb
and
jmp
pusha
and
mov
lahf
sar
jp
mov
mov
cmpsl
jae
jmp
mov
mov
out
xchg
mov
jl
inc
jbe
stc
pusha
xor
add
jle
in
outsb
cmp
test
cld
and
pop
je
insl
mov
adc
mov
xor
jp
mov
cld
andb
addr16
push
fcoms
jae
mov
xor
loop
stc
jp
ss
and
pop
lret
inc
xchg
mov
sarl
dec
aaa
sub
test
popa
ljmp
sarl
fmul
cli
xchg
inc
std
mov
mov
pop
ja
adc
sahf
inc
popa
sub
and
pop
sub
cmp
cmpsb
cmp
mov
cmp
adc
mov
push
dec
test
and
call
mov
push
mov
ret
jmp
popf
int
and
or
movsl
push
test
cs
addr16
scas
adc
ret
pop
fcomip
lret
mov
lret
and
cmp
out
notl
xchg
shrl
dec
xor
jp
xlat
and
insb
mov
test
cltd
leave
adc
and
pop
stos
jne
cld
dec
sub
aad
cmpl
cmp
cmp
xor
xchg
dec
add
nop
test
inc
outsb
jne
cmc
cmpl
cltd
mov
sub
inc
daa
mov
inc
scas
sbb
pushf
jne
sbb
ret
fildl
pop
push
in
inc
aad
imul
jne
or
mov
jl
jle
into
aam
mov
and
loopne
cmpsl
dec
cmpsb
and
test
add
sbb
xorb
scas
into
lea
adc
jmp
cmp
leave
pop
mov
cmp
sub
fstps
inc
xchg
lea
daa
adc
ljmp
lret
mov
ljmp
das
xchg
test
sbb
inc
aad
and
dec
and
mov
sub
cmp
jle
pop
push
sbb
fmuls
lret
mov
sbb
dec
jb
lahf
xor
sub
ds
cmpsl
mov
loop
mov
inc
mov
or
in
stos
xor
cmp
xor
jl
aam
ret
nop
ret
fadds
out
pop
and
cmp
sahf
lods
nop
sti
nopl
lret
pop
sub
mov
xchg
ja
jp
paddusw
lcall
sbb
sbb
dec
or
and
in
sar
and
jo
jns
std
xor
pop
push
cmc
and
jae
sub
aas
data16
stc
scas
icebp
or
push
push
das
push
push
pop
mov
push
dec
add
jnp
jmp
jo
fdivrl
cmp
xchg
mov
inc
popf
int
stos
push
imul
push
jo
cmp
mov
repz
mov
mov
cmp
inc
pop
gs
mov
cmc
ficoml
push
imul
sbb
in
add
and
mov
jmp
aam
sub
popa
loopne
push
mov
adc
and
sbb
fs
push
pop
lret
push
repnz
push
push
lahf
mov
jae
out
cs
scas
int
cs
jge
xchg
inc
dec
loope
repz
repz
add
push
lcall
adc
sti
adc
pop
hlt
cmpsl
fld
mov
in
mov
imul
in
jb
lret
xor
mov
cmpsl
ljmp
cmc
lret
pop
movsb
mov
lea
xchg
test
dec
decl
daa
mov
aad
movswl
lea
sub
add
sub
mov
jp
lret
mov
inc
sub
data16
inc
adc
jbe
pop
call
mov
mov
ljmp
mov
inc
jbe
xchg
sarb
push
mov
xchg
mov
loope
dec
filds
pop
mov
jne
gs
sbbl
cmp
cmp
ss
adc
pop
in
add
std
mov
mov
test
lods
xchg
sub
fsubr
dec
xchg
adc
pop
xlat
call
mov
sbb
xor
add
sub
or
stos
push
test
in
mov
push
int3
push
xor
jmp
in
jmp
mov
vorps
test
js
mov
lret
sub
mov
mov
jo
cmp
imul
pushf
dec
xor
mov
fdivl
mov
pop
lea
pop
stos
cmp
jecxz
adc
sub
push
push
pop
cmpsb
hlt
or
inc
xor
jge
or
dec
push
iret
push
call
sub
or
sarl
sub
test
loope
xchg
lods
aaa
mov
and
mov
add
bound
cmp
inc
push
mov
jmp
xor
xchg
push
aas
pop
dec
dec
or
lahf
mov
jne
pop
xor
or
jmp
cmc
xor
mov
not
js
das
mov
jmp
inc
in
cmp
inc
push
arpl
jno
xchg
and
xchg
repz
clc
dec
out
mov
cmpsl
lods
ret
mov
xor
fisubrs
sti
cld
lea
imul
aaa
add
sub
adc
push
sub
pop
adc
inc
les
push
les
into
xchg
dec
jnp
push
cwtl
mov
and
push
cld
cmp
pop
cmc
fnstenv
fs
inc
mov
js
repnz
adc
push
mov
jmp
mov
jmp
outsl
ja
mov
push
and
int
cmpsl
repnz
xchg
inc
adc
out
scas
dec
andb
or
std
fmull
dec
in
std
out
orb
pop
pop
cmp
dec
push
pop
aam
mov
and
int
mov
jno
push
mov
outsl
adc
and
std
push
sbb
sub
scas
sbb
shrl
imul
outsl
add
pop
mov
popf
cld
mov
ret
jmp
push
xor
sub
sbb
mov
push
adc
mov
xchg
in
std
pop
cmp
sbb
and
inc
add
mov
jle
jle
xchg
mov
jbe
dec
popa
dec
jge
jb
fstpl
pop
push
hlt
or
push
aaa
popa
mov
dec
mov
popa
popf
mov
sbb
mov
adc
sub
rcrb
aas
jmp
mov
lcall
mov
and
xor
adc
sub
lcall
sub
push
pushl
rcrb
sbb
jo
loop
popf
xchg
push
jbe
jne
mov
push
sahf
dec
pop
and
andl
fwait
out
pop
xchg
dec
filds
mov
sidtl
and
sub
inc
ret
sbb
lret
xor
sub
shlb
stc
and
and
push
sub
sbb
push
sbbl
das
and
lret
clc
add
lahf
push
jb
dec
add
and
sub
sbb
push
js
or
pop
shll
outsb
pushf
fstps
out
ds
add
dec
rol
insl
push
pop
dec
mov
lcall
fimull
fcmovnbe
pop
idivl
push
mov
inc
hlt
cmc
ficomps
xchg
lea
mov
push
sbb
or
cmp
inc
repnz
push
arpl
mov
bound
jo
insl
add
push
cltd
repz
and
sub
dec
push
es
insl
push
xchg
pop
icebp
arpl
stos
cmp
cmp
nop
loopne
popa
lock
iret
bound
xchg
outsl
loop
pop
pushf
loope
int3
nop
jo
cmpsb
pop
dec
je
add
mov
mov
xchg
jmp
imul
test
or
stos
or
nop
lds
mov
scas
into
jo
out
push
call
dec
lods
leave
pushf
xchg
cmpsb
and
xchg
enter
or
into
adc
cld
imul
lods
cltd
adc
jne
sbb
jp
ret
int
mov
or
lods
int
dec
cli
push
movsl
xchg
jle
xor
int3
sbb
shll
inc
test
lods
add
mov
mov
jbe
int3
xor
pop
repnz
inc
pushf
int
or
and
add
inc
pop
jp
push
dec
lret
xchg
imul
dec
dec
mov
push
cmp
lcall
pop
enter
push
jne
je
mov
bnd
scas
jns
mov
gs
pop
in
inc
cli
jle
daa
pop
scas
andl
cli
cmc
adc
add
push
sbb
xlat
into
adc
jnp
xor
xor
jp
out
int
jo
arpl
scas
lods
sub
push
test
pop
mov
std
cmp
scas
test
sub
cmp
or
pop
cmp
out
xchg
mov
lock
mov
dec
jno
cmp
sbb
xchg
out
fildl
lods
fsts
or
popf
add
aas
jns
in
imul
repnz
push
mov
filds
push
pushf
js
loope
mov
repz
test
scas
andb
fstp
push
cmp
sub
test
cltd
cmp
add
std
ljmp
push
test
lods
shlb
shrb
lods
rorb
imul
sub
mov
pop
jae
std
dec
enter
mov
jno
adc
ljmp
ja
mov
repnz
xor
sub
sub
push
test
xor
mov
lahf
inc
push
pop
lcall
xlat
mov
daa
jbe
call
push
aas
test
cld
jne
rcrb
cld
mov
js
fucomp
xor
jle
and
pop
cmp
lahf
loop
loopne
mov
jg
sub
shlb
mov
aas
jl
and
repnz
mov
lret
mov
xor
and
or
xor
mov
outsl
test
inc
fwait
pop
inc
aad
cmp
xchg
clc
es
outsb
hlt
mov
mov
add
aaa
sub
push
aaa
or
shrb
mov
aas
xor
lret
cmpsl
adc
mov
test
aaa
cmp
cmpsb
pop
mov
pop
mov
pop
std
push
dec
scas
xchg
pushf
rorl
and
ds
mov
repz
out
push
adc
sti
aam
movsl
sub
mov
push
inc
mov
pop
pop
pop
ret
or
mov
jle
dec
pop
xchg
adc
jo
adc
push
test
sub
jb
push
shl
movsb
gs
mov
cli
in
mov
popf
hlt
pop
add
cwtl
sbb
loope
mov
fwait
dec
mov
add
jae
cltd
pop
sub
loope
pop
or
sbb
adc
or
dec
dec
adc
inc
int
pop
gs
push
iret
cltd
cs
push
dec
xorb
cmpsl
jge
push
seto
add
sbb
jle
dec
cmp
addr16
xchg
lahf
and
inc
loop
imul
and
in
sti
shll
dec
or
js
mov
in
arpl
orb
sub
push
pop
mov
pop
icebp
lret
pop
inc
mov
push
clc
push
jne
jne
insb
test
mov
jle
push
pop
mov
cmp
pop
les
leave
jmp
shlb
push
xorl
inc
mov
popl
test
es
mov
sbb
mov
rcr
pop
nop
jecxz
test
shll
cmp
jecxz
lods
fstl
jecxz
lret
jne
add
movsl
in
imul
shll
sub
mov
pop
cmpsb
sbb
jg
jb
push
mov
xor
in
mov
xor
adc
xchg
loope
mov
mov
adc
adc
push
lods
out
int3
xchg
mov
loop
mov
add
divb
pop
fs
pop
rcr
push
mov
add
and
mov
sub
dec
jp
out
push
jbe
pushf
icebp
pop
clc
sub
sub
inc
mov
mov
push
cmp
mov
leave
xchg
xor
push
inc
sbb
sbb
in
push
pop
push
pop
aam
mov
lcall
sbb
sbb
jge
and
mov
cmp
fidivrs
cmc
adc
xchg
sbb
push
push
jge
mov
mov
jns
adc
shrb
dec
jp
movsl
mov
inc
push
sbb
aad
adc
adc
sti
and
js
mov
inc
sub
jb
fs
stos
xchg
pop
mov
lahf
cmc
fildll
mov
or
js
xchg
sbb
mov
jle
ret
jb
mov
mov
xchg
loopne
pusha
lcall
enter
in
scas
lock
out
dec
cld
pop
lret
pop
outsb
rorb
outsb
mov
scas
and
je
in
fiadds
pop
pop
jmp
stos
dec
jmp
and
jbe
add
rol
push
push
mov
push
push
add
adc
scas
push
pusha
les
sbb
push
add
es
mov
mov
xchg
dec
mov
sbb
xor
ljmp
or
xchg
repnz
dec
lret
push
hlt
xchg
push
movsl
ret
leave
leave
xchg
jbe
lahf
shlb
add
out
jns
sbb
sarb
shrb
cmpsl
mov
mov
icebp
adc
inc
jmp
ror
push
cmp
push
pop
mov
push
pop
jno
jne
jmp
sbb
xor
popa
outsl
out
test
xchg
add
jb
insb
sbb
prefetchw
push
repnz
inc
push
add
add
fidivs
mov
shlb
cmpsb
mov
adc
xor
and
push
sbb
pop
mov
nop
mov
and
shlb
xchg
faddp
cmp
nop
mov
or
iret
add
sbb
add
fisubrs
lods
test
ret
mov
test
ret
sbb
lcall
push
inc
rolb
mov
cmp
rorl
das
popa
mov
jecxz
or
add
shlb
enter
mov
into
movsl
adc
cmpsl
cmp
add
pop
scas
sub
xor
loope
out
arpl
fisttpl
lods
pop
das
mov
inc
pop
out
dec
push
adc
cmp
enter
add
jp
mov
and
pop
pop
hlt
xchg
out
mov
sbb
adc
sbbl
addr16
push
xchg
sbbl
dec
push
xor
imul
int
sbb
loopne
or
xchg
mov
sbb
add
mov
lods
shr
fcompl
mov
icebp
or
insb
inc
lods
jb
mov
stos
clc
jb
xor
sbb
fnstcw
xor
int
and
pop
fsubs
repnz
push
mov
les
or
and
jbe
test
sbb
adc
push
pop
xor
aaa
test
bound
aaa
jbe
es
sbb
pusha
push
mov
jecxz
repz
clc
push
lret
inc
sti
lret
mov
adc
loopne
inc
mov
xchg
mov
out
push
inc
dec
cmp
dec
cmp
subl
ror
xor
mov
in
test
add
aad
out
inc
in
stos
fadd
xor
mov
mov
outsl
cs
mov
test
jbe
icebp
push
jl
sbb
mov
out
push
aaa
insb
scas
out
in
imul
cld
std
add
push
hlt
sbb
cltd
fmuls
push
mov
mov
not
inc
fiadds
adc
add
sbb
jno
imul
adc
add
sub
push
pop
nop
dec
mov
sbbl
out
jg
or
add
inc
fimuls
sub
out
xor
lods
adc
icebp
dec
divl
jmp
fistpll
cmp
push
jb
lret
xor
aad
or
inc
aad
mov
xorb
sub
lds
push
int
inc
movsb
pop
dec
insb
push
cltd
and
adc
push
std
xchg
add
jle
daa
sub
dec
sbb
push
aad
jl
xchg
sbb
popa
or
mov
sbb
jge
pop
fwait
and
pop
mov
xor
jo
add
aad
add
jb
adc
inc
sub
hlt
ficoms
dec
jae
in
out
and
mov
pop
adc
cli
in
aas
test
push
clc
lret
rcrl
sbb
ja
mov
push
adc
push
inc
clc
xlat
push
dec
jb
push
mov
mov
lcall
cmp
dec
lock
and
mov
xchg
inc
cmp
push
sti
lods
lods
out
sub
push
push
pop
std
enter
sub
scas
fwait
pop
push
incb
js
mov
mov
lret
into
pop
xor
mov
adc
insl
fcompl
test
pop
fistpl
inc
negl
add
mov
jmp
or
jns
adc
out
cmp
pushf
inc
sub
adc
out
mov
mov
fcoms
mov
pop
sub
sub
repz
jecxz
adc
aam
pop
xchg
repnz
shll
cwtl
adc
mov
pushf
mov
je
push
sub
adc
aad
popa
in
filds
fdivl
mov
cmp
mov
mov
and
push
add
cmp
push
add
inc
std
jae
rcl
add
sub
push
sbb
push
nop
cld
out
pop
mov
xchg
shufps
insb
mov
fldenv
loope
mov
inc
cmp
xchg
in
ss
add
cmp
mov
lahf
cld
icebp
repz
mov
sbb
inc
mov
jp
insl
aaa
mov
xor
rcr
jecxz
leave
jge
mov
mov
dec
les
nop
cmpl
rolb
mov
mov
mov
inc
cld
in
loop
insb
push
push
lock
pop
outsl
push
cld
iret
imul
xlat
aas
jg
sbb
cli
dec
sbb
ljmp
xor
jge
sbb
or
movsb
gs
xorl
outsb
add
inc
xlat
pushf
clc
sbb
shll
sahf
adc
jp
pop
push
pop
xchg
int
mov
or
xchg
into
or
add
sub
jmp
sbb
add
int3
das
cli
fwait
mov
mov
xor
rolb
mov
leave
addr16
ss
or
gs
rcll
ficompl
and
test
adc
repnz
pop
shr
xlat
inc
fisttps
mov
sbb
test
push
jne,pt
or
sub
sar
fildll
lahf
jnp
and
jae
call
mov
pop
sub
mov
xchg
sbb
popa
jb
inc
push
jp
push
dec
mov
add
inc
pmaddwd
es
jns
repnz
sbb
cmp
loopne
pushf
leave
aad
xor
jmp
inc
sub
pop
or
dec
mov
or
cmp
lods
mov
xchg
push
inc
cmpsl
fcomps
dec
push
ja
mov
lods
adc
jo
out
push
push
in
xchg
xor
mov
aam
out
bnd
lahf
test
stos
sbb
dec
add
rcrb
pushf
cltd
dec
cs
movb
mov
xchg
shl
push
mov
out
andb
and
data16
unpckhps
cmp
loopne
jl
mov
add
jmp
pop
lret
inc
data16
cld
fcmovnu
mov
fiaddl
pop
and
int
push
popf
out
mov
ret
mov
mov
clc
lcall
adc
add
inc
cmp
out
jmp
imul
mov
mov
aas
jnp
mov
pop
aad
or
cwtl
ds
fidivs
cmpsb
push
sub
and
sti
or
in
push
lods
jl
in
cwtl
stos
in
jmp
push
insl
lods
cld
pop
push
xchg
clc
lcall
decb
stos
push
aad
fldt
mov
sbb
bound
and
stos
and
es
push
ret
testb
aas
xlat
jb
push
and
adcl
xor
cltd
adc
call
push
pop
mov
clc
ds
fwait
mov
jp
ret
sbb
jp
mov
notb
unpcklps
ss
ror
xor
int
and
mov
insl
or
xchg
xlat
idivl
test
lret
jbe
addb
cmpsb
inc
and
xor
inc
popa
add
push
nop
mov
shll
push
mov
aam
cmp
ret
cwtl
enter
inc
test
in
lods
out
inc
mov
fwait
mulb
pop
mov
cwtl
jae
stos
stos
rcrb
pop
cltd
std
lret
das
data16
pop
inc
sahf
push
cmp
add
inc
sbb
jl
cmp
pusha
iret
rcrb
push
xchg
shl
add
outsl
ja
hlt
pop
loop
inc
jo
daa
lock
xchg
lea
mov
mov
lahf
pop
jle
mov
arpl
mov
popf
das
jno
in
test
add
lret
testl
fisubs
pop
cmp
stc
mov
or
lcall
xrelease
sub
adc
inc
loopne
fdivl
mov
in
gs
lock
xchg
mov
mov
lods
ret
mov
mov
or
mov
aas
lahf
pushf
and
scas
mov
add
dec
pop
std
cli
adc
imul
dec
sub
dec
inc
int3
inc
in
scas
jp
mov
lahf
xchg
fsubr
cltd
add
subb
sahf
pusha
rolb
and
cld
out
pushf
fstpt
pop
inc
int3
and
jae
cld
lahf
xor
scas
loop
inc
jmp
xchg
jle
push
mov
dec
or
cmp
and
xlat
aas
jno
lret
inc
sub
cs
enter
or
adc
movsl
inc
imulb
dec
outsl
xor
mov
stc
push
clc
out
std
nop
int3
sub
mov
les
pop
jle
push
mov
lods
leave
and
xor
cmp
in
jb
loop
jo
cmc
cmc
sarl
sbb
pusha
jg
mov
xchg
cld
sub
jecxz
and
fidivrs
push
adc
mov
push
cmpsb
je
add
int
mov
ror
jl
mov
movsl
add
xor
xchg
push
sub
ja
xchg
pop
add
sub
adc
fcomip
sbb
xorl
mov
jl
add
lods
add
add
mov
in
cmp
shl
test
test
xor
sub
int
into
cmpl
dec
dec
inc
mov
and
push
aad
cli
mov
fstl
outsl
mov
mov
xor
xor
andl
xchg
insb
dec
stc
inc
fdivrs
push
lock
pop
dec
mov
fsts
cmpsl
sub
sbb
inc
ss
mov
mov
hlt
mov
jo
sbbl
mov
jge
cli
fwait
inc
test
or
sub
test
add
jne
xor
sub
jge
jae
addl
das
sbb
xchg
int
xor
or
inc
mov
repnz
enter
mov
dec
dec
data16
xchg
inc
scas
dec
push
xor
insl
sti
punpckldq
in
test
adcl
xchg
fstpl
xchg
mov
shlb
jo
mov
mov
and
sub
mov
fnstsw
jbe
xchg
mov
sbb
shrb
inc
in
push
inc
sub
enter
jae
push
lock
push
mov
sbb
ss
xchg
popf
jp
cmp
pusha
insl
in
and
mov
test
jbe
aaa
sub
insb
dec
loopne
jae
insb
jmp
ds
cmc
cwtl
sbb
mov
dec
sub
mov
pop
inc
push
add
mov
jo
xchg
pop
jbe
fwait
and
xchg
cltd
aam
xchg
push
xor
in
iret
gs
in
xor
xchg
clc
lret
loope
cmp
xchg
loopne
mov
notb
aam
xor
xchg
pop
add
pop
cmc
jns
bound
jmp
inc
imul
mov
int3
arpl
inc
mov
fsubrs
lods
xchg
pop
lods
imul
mov
push
lcall
int
cwtl
xor
lods
dec
and
xchg
xchg
mov
push
ss
bound
dec
cmc
test
push
sub
sarl
or
mov
jmp
addr16
jb
xor
cmc
sti
pop
adc
rcll
and
cmpsb
fisubs
push
sub
mov
cmp
das
or
fimuls
mov
push
push
xchg
sbb
adc
inc
adc
jp
adc
pop
inc
pushf
in
mov
cltd
and
fisubs
icebp
inc
xchg
push
sahf
nop
jno
repz
fcom
lods
or
inc
insb
inc
in
adc
lods
push
lea
add
xchg
lock
adc
cmp
mov
ret
clc
xor
mov
and
fisttpll
fistpll
test
rdpmc
les
push
push
ret
or
sub
dec
push
ss
xchg
push
ljmp
xchg
arpl
addb
ss
push
push
push
hlt
or
int
jmp
and
sbb
jae
rcrl
mov
mull
stc
jle
notb
int
ret
nop
pop
outsl
into
ljmp
cmpsb
cmp
pushf
arpl
popf
std
mov
lcall
int3
shrl
out
cs
dec
dec
out
iret
outsb
repz
sti
cld
adc
dec
mov
test
aad
sbb
cmp
lods
jmp
stos
xchg
jl
mov
aaa
mov
jle
cmp
leave
pop
neg
shrb
je
in
push
sarl
scas
mov
subb
test
repnz
mov
inc
lods
into
repnz
sub
insb
insl
pushf
out
ss
test
mov
cld
cli
ss
jo
pop
xchg
mov
cmp
jo
jnp
or
into
cld
lahf
fwait
xchg
lods
sbb
loop
scas
or
push
iret
repnz
lods
add
lcall
fiaddl
lahf
aas
sbb
movsb
cwtl
imul
jb
and
stos
lcall
aam
dec
fwait
out
add
movsb
aad
les
pop
lahf
dec
ja
cmc
loope
jnp
sahf
in
jbe
and
jle
leave
loopne
icebp
insl
cmp
roll
out
pop
hlt
rolb
jge
lds
enter
mov
cltd
andb
aaa
push
sar
das
pop
jge
inc
notb
xchg
xchg
adc
lds
or
aad
inc
sbb
loopne
xor
sub
movsw
insl
dec
stos
inc
into
or
imul
repnz
popa
sbb
movlps
push
leave
pop
stos
mov
fwait
jo
fsubs
dec
mov
xor
adc
cmpb
or
mov
in
arpl
pop
int
mov
test
add
inc
lods
push
shrb
in
js
andb
fildl
clc
icebp
mov
mov
loope
dec
decl
into
mov
push
and
mov
jle
out
jp
repnz
int3
jmp
xchg
sahf
push
add
mov
sbb
sub
mov
jp
xor
dec
in
stos
pop
fdivrs
inc
icebp
dec
pop
lods
xlat
inc
shrl
loopne
push
arpl
push
ror
rcll
shrl
hlt
dec
aad
out
mov
and
pusha
mov
jo
in
adc
lret
push
lahf
cli
cmpsl
out
mov
xor
cmp
mov
dec
out
pop
xor
mov
cmp
or
scas
ljmp
xchg
xchg
push
pop
push
ret
jp
sbb
mov
lods
lods
sbb
addb
mov
sbb
testl
nop
mov
data16
dec
jge
rcrl
pop
fnstcw
in
push
data16
push
cmp
push
xchg
push
push
int3
mov
sbb
mov
js
mov
xor
add
push
movsb
and
mov
inc
dec
or
jnp
test
inc
leave
cld
sub
out
jae
cmp
dec
testb
jp
icebp
sub
addr16
lock
ror
imul
lcall
divb
jle
add
sbb
mov
jbe
mov
cli
gs
lock
inc
push
in
inc
imul
ljmp
loop
mov
xor
rorl
ret
mov
movsb
arpl
bound
mov
mov
mov
pop
dec
jp
lea
sahf
mov
xchg
lahf
sub
mov
cmp
xchg
or
cmp
inc
repz
stos
mov
xor
insl
and
cld
clc
mov
or
mov
mov
jnp
fwait
inc
mov
pusha
lret
or
movsb
fldl
rcrb
add
lret
test
aad
loop
mov
add
aam
movsb
insl
dec
call
pushf
loope
stc
push
fwait
push
loop
xlat
movsl
cmc
lahf
push
ret
arpl
lea
inc
test
imul
hlt
in
cmp
int3
ret
and
cmp
push
adc
shl
cmp
pop
stc
sbb
test
sbb
mov
cmp
popf
scas
add
fs
mov
movsb
rorl
mov
jle
pop
jmp
mov
mov
inc
dec
insb
push
push
inc
es
out
data16
loope
bound
dec
sub
scas
sti
push
subl
dec
cli
in
movsl
xchg
les
aam
insl
mov
lods
mov
adc
inc
xor
ret
bound
fcoml
int
mov
jno
sub
push
pop
push
xor
jp
dec
popf
sbb
mov
leave
pop
test
sahf
cmp
pop
bound
mov
mov
mov
scas
js
inc
lcall
adc
insl
fidivrs
outsb
push
cli
xor
shrl
push
test
cmp
inc
xor
cld
pusha
cmp
movsl
lock
int3
xchg
and
negl
sbb
sbb
xchg
pop
testl
fimuls
sarb
daa
nop
mov
test
clc
pop
mov
and
lahf
sbb
mov
ds
mov
jns
lret
lods
mov
aad
sbb
xchg
int3
mov
shrb
and
push
lods
rcll
cmp
jns,pt
lods
fwait
dec
xor
dec
loop
xor
pop
mulb
mov
jg
and
daa
lock
xlat
pop
push
jb
xor
xchg
cmp
sbb
pop
push
popl
sub
lret
jbe
mov
dec
cmp
lret
lods
lods
popf
ljmp
stos
pop
popa
mov
pop
stc
push
ret
call
shrb
andb
sahf
mov
pop
xchg
sub
filds
mov
out
push
cmpsl
mov
rol
xchg
jg
rorb
gs
push
daa
sbbl
xchg
fcomps
jb
pop
or
loop
in
scas
fcmovnb
push
pusha
jecxz
mov
xor
sub
mov
jno
xchg
adc
pop
into
das
cmpsl
mov
sahf
add
lcall
jecxz
xchg
pusha
repnz
or
xor
jmp
xchg
pop
jb
sub
test
mov
add
in
adc
sahf
push
lret
inc
ljmp
and
loope
cs
lock
imul
cli
or
sahf
adc
mov
inc
jp
inc
push
or
iret
in
or
ds
insl
gs
loope
shlb
mov
cmp
mov
out
popf
pop
jb
mov
cmpsb
mov
mov
movsb
inc
pushf
xchg
icebp
lods
pop
aas
jp
push
out
outsl
jle
pop
out
orb
jmp
loope
push
mov
inc
push
mov
mov
inc
int
sbb
mov
sbb
adcb
ret
lahf
cmp
fstp
stc
sbb
cwtl
jle
loope
repz
in
mov
ljmp
sub
outsb
mov
lret
xchg
cmp
xlat
jmp
mov
jp
nop
roll
jae
punpckhwd
mov
xchg
mov
lods
test
xor
sub
sbb
cli
pop
add
pop
fisubs
inc
es
cmc
in
jb
pop
aas
addb
push
lret
xchg
pop
clc
sarb
xlat
push
std
or
xlat
fiaddl
adc
push
std
cmp
inc
fdivrl
in
outsb
inc
pop
scas
out
dec
mov
jle
cld
pushf
xor
pop
lds
mov
and
in
sti
jle
and
or
xor
loopne
push
inc
mov
and
test
scas
push
stc
cmp
push
sahf
sub
clc
loope
jl
rcrl
push
add
stos
cmp
xor
cmpsl
out
xchg
dec
call
leave
or
inc
andb
loope
cld
inc
inc
rcrb
jmp
mov
lahf
imul
pop
fbld
repz
mov
loope
out
dec
or
mov
sbb
mov
outsl
inc
adc
insb
rcrl
fstpt
add
nop
sti
mov
inc
lret
je
fs
fs
inc
jl
mov
inc
into
mov
outsb
cld
and
orl
fdivr
insl
clc
data16
clc
in
hlt
or
or
pop
and
imul
fs
jmp
jle
in
enter
mov
scas
xchg
dec
dec
xchg
mov
fadds
std
jecxz
cmp
out
sub
cld
ret
mov
out
mov
pop
jmp
stos
pop
fadds
sub
jp
clc
test
push
sbb
inc
mov
sbb
into
repz
add
sti
std
xor
cld
xor
movsl
sub
mov
xchg
sbb
adc
in
xor
jno
ret
mov
adc
and
ds
dec
insl
dec
lds
mov
xor
mov
ljmp
and
pop
xor
adc
sub
mov
rcll
lcall
int
dec
shll
loop
mov
pop
push
rcr
stos
sti
push
gs
fdivp
sub
xchg
jbe
mov
cmp
dec
jmp
out
jecxz
lock
inc
xor
fs
ret
mov
sbb
fcoms
loope
xor
dec
ljmp
subb
inc
mov
sub
jnp
ja
xor
or
pop
std
in
mov
call
ret
cmp
outsl
mov
add
dec
jbe
xor
ret
pop
jl,pt
pop
ret
xor
stc
and
add
clc
pop
adc
imul
ljmp
xor
mov
sahf
js
testl
ret
mov
lds
in
mov
mov
insb
lahf
sbb
fcom
sti
or
inc
std
xchg
pop
pop
subl
push
in
pop
cs
dec
lcall
out
xchg
jmp
fmull
push
sub
in
or
pop
and
sub
push
dec
sub
aad
lock
insl
mov
push
xchg
gs
sarb
dec
pop
leave
dec
test
xlat
adc
xchg
xchg
cmp
aaa
popf
lahf
lds
push
pop
sub
sub
adc
mov
dec
movsl
mov
lcall
aad
je
ljmp
or
mov
sti
or
mov
push
mov
lock
lcall
rcr
mov
stos
incb
test
adc
imul
dec
scas
nop
lea
mov
jbe
mov
push
cmp
popa
sub
sbb
lret
xchg
ret
mov
imul
xor
xchg
test
push
adc
iret
mov
xchg
ds
into
jo
out
aad
cs
add
jb
xor
sbb
mov
sbb
or
jecxz
adc
mov
in
in
lods
push
inc
mov
fsts
push
fidivrl
xchg
repnz
imul
push
xchg
add
out
jle
add
dec
je
pushl
or
popa
sub
cmc
add
sti
pop
lock
mov
dec
out
dec
sub
cwtl
dec
inc
pop
cmpsb
adc
and
pop
cwtl
or
movb
fcmovnu
dec
insl
xor
sbb
imul
adc
jo
or
jae
lret
xchg
mov
ljmp
pop
mov
xorl
mov
jecxz
lret
inc
sbb
dec
es
sbb
jo
xchg
push
xor
pusha
es
mov
and
and
add
mov
push
sub
mov
test
nop
adc
adc
iret
addr16
inc
fsub
and
lock
mov
pop
insb
fildll
das
in
mov
inc
or
pop
adc
push
repz
jp
dec
ss
fidivs
icebp
mov
pop
jl
jbe
stos
and
or
int
bound
and
les
pushf
mov
lock
push
dec
dec
xor
inc
xchg
ja
jg
sahf
ljmp
jno
jae
xchg
mov
dec
mov
sub
inc
call
or
mov
inc
les
sbb
lods
das
add
inc
mov
insl
jg
pop
sbb
shl
push
out
adc
adc
mov
pop
inc
xorb
daa
popa
test
dec
pop
orb
sub
decb
pop
xchg
gs
mov
sbb
mov
js
repz
mov
inc
outsl
into
in
loop
sub
addr16
adc
iret
subb
mov
movsl
lahf
push
mov
jg
add
cli
inc
ror
push
jnp
or
mov
int
push
daa
sbb
outsl
xlat
and
mov
je
sti
pop
lods
cmp
insl
push
mov
imul
xor
lods
leave
sbb
ss
test
mov
ja
mov
xorps
movl
jnp
jmp
hlt
je
flds
sbb
sbb
lock
xor
sub
clc
pop
imul
leave
mov
and
fwait
test
dec
sub
jl
ret
pop
shlb
push
xchg
aad
push
repnz
inc
mov
test
push
adc
inc
add
in
gs
js
sub
andb
dec
dec
pop
xor
gs
sub
mov
or
sub
and
jecxz
out
lods
outsb
adc
push
gs
add
insb
jle
imul
into
push
mov
xlat
xchg
mov
nop
and
cmp
xor
jmp
shlb
add
mov
cmp
or
adc
and
jge
xor
or
cltd
leave
test
lds
pop
pop
lcall
cmpsb
mov
daa
sti
mov
dec
fcomps
out
or
cmpsb
mov
mov
test
icebp
test
sub
inc
in
xchg
cmc
mov
faddp
call
popf
dec
push
lahf
mov
pop
inc
pop
movsb
cmp
jbe
push
andl
add
xchg
sti
mov
mov
scas
and
fsubs
lods
adc
idivb
push
in
mov
psrlw
pop
push
push
movsb
and
jg
mov
gs
add
lods
adc
movsb
ret
in
out
cld
jno
int3
shlb
xchg
inc
icebp
push
mov
je
sbb
mov
adc
not
rcll
loop
rcrb
movsl
int
inc
lea
inc
and
aas
inc
enter
cs
aas
hlt
fidivl
pop
test
pusha
lret
repz
cmpsl
mov
jbe
adc
ss
xor
or
dec
cmc
dec
add
add
rorl
popf
cmp
mov
pop
add
ret
mov
xchg
push
cmp
lret
jno
cmp
rorb
push
imul
sub
sub
outsb
push
fadds
mov
mull
sub
cmp
cmpsl
xlat
mov
movsb
sub
stos
add
add
ret
adc
adc
ficoml
jnp
data16
push
mov
lcall
push
cmpsb
in
shll
push
dec
cmpsl
sub
loopne
mov
and
rcrl
dec
mov
cmp
lahf
jp
bound
std
or
push
test
loope
pop
cmp
adc
and
jl
ja
aad
idivb
or
mov
adc
fnstenv
mov
out
dec
frstor
movsb
add
outsb
sub
xchg
lds
sahf
das
push
mov
jle
adc
push
lds
or
stos
adc
adc
mov
inc
xlat
dec
cli
sbb
push
mov
jle
pop
or
mov
test
out
lcall
inc
pusha
adc
or
ror
fisubl
cmp
adc
aas
lea
dec
out
or
jle
jg
arpl
pop
popa
cld
lea
inc
cmp
out
mov
add
mov
addr16
xchg
pop
loop
sbb
hlt
bound
insl
mov
fcomi
fdivrl
push
imul
sbb
stc
jmp
cltd
pop
sbb
loop
lret
mov
mov
mov
adc
push
jns
rdtsc
fiaddl
xchg
pop
fmuls
stos
xchg
jae
bnd
imul
mov
sub
sbb
push
or
addb
add
fidivrs
mov
mov
insl
fisubs
add
cltd
jb
daa
xchg
inc
fsubl
shl
inc
and
push
lcall
popf
jnp
push
cmpsb
push
loope
leave
or
sahf
xchg
jns
xchg
inc
fstl
lea
jle
pusha
adc
sub
push
jns
repnz
lods
nop
stos
mov
out
icebp
fucomp
add
sahf
jp
das
jp
es
jg
js
add
fdivrs
cs
or
jecxz
adc
neg
adc
mov
mov
stos
mov
inc
add
cmpsl
add
and
inc
dec
sbb
cli
sbb
and
mov
push
jp
lods
int3
xchg
inc
cld
mov
mov
and
inc
pop
adc
rcrb
sub
cmc
mov
add
bound
repz
sbb
cmc
mov
lret
dec
data16
out
out
xor
das
test
mov
sbb
popf
xor
push
clc
pop
into
out
sbb
mov
lcall
mov
scas
mov
cld
dec
jl
dec
arpl
xor
adc
lods
clc
lods
sbb
gs
loopne
or
enter
nop
test
ds
push
mov
add
bound
test
mov
push
movsb
dec
and
int3
mov
xor
push
mov
jno
dec
rorl
insl
pushfw
scas
push
jp
pop
push
cmp
adc
mov
pop
nop
js
mov
jno
adc
leave
inc
dec
cmc
stos
jp
push
fcoml
repz
sbb
mov
stos
mov
xchg
stc
in
xchg
mov
shll
aas
cli
cmp
xchg
into
lahf
inc
fucom
push
mov
mov
jbe
push
mov
pop
pop
scas
pop
inc
je
or
xchg
dec
cmp
popa
xchg
repz
cli
cmp
lcall
adc
sub
daa
sub
into
lret
js
ret
and
and
ret
mov
fstpl
and
cli
xlat
ljmp
xor
xchg
repz
add
add
sti
add
fmuls
push
dec
cmc
xchg
mov
mov
sbb
out
cmp
dec
push
fcomp
mov
dec
into
daa
mov
ret
dec
mov
das
mov
ljmp
jnp
in
push
add
repnz
js
mov
movsb
push
and
ds
adc
cmp
clc
adc
fidivrl
in
fidivrs
or
fwait
dec
pusha
mov
inc
cmp
dec
sar
xchg
dec
lods
and
add
scas
outsl
popa
lea
inc
mov
mov
sbb
cmp
arpl
inc
enter
push
sarb
jle
add
inc
jmp
nop
mov
jge
test
loopne
jns
or
fndisi(8087
xchg
mov
pop
in
jecxz
or
pop
or
stos
orb
sub
and
shll
out
or
mov
inc
jmp
xchg
fnstsw
push
mov
adc
inc
or
inc
cs
sub
sti
sti
jb
pop
jle
cld
fcoml
xor
ss
and
pop
xor
outsb
scas
sti
sahf
outsl
addl
out
or
fildll
fists
mov
lcall
adc
popa
testb
aas
out
xchg
jb
ja
sbb
xorb
jnp
add
popa
jecxz
arpl
pop
pop
adcb
imul
jbe
push
mov
dec
loop
push
xor
sub
dec
sbb
sub
push
fsubr
xor
inc
mov
lock
mov
stos
cmp
add
or
xchg
leave
cmp
aas
lock
int3
xchg
jecxz
aad
shr
sbb
in
frstor
nop
jl
test
idiv
aad
out
in
pop
pop
leave
push
movsb
and
add
adc
repnz
lea
idivb
inc
adc
mov
mov
sarl
sub
xchg
insb
inc
sbb
pop
sti
mov
mov
push
jl
push
or
in
mov
lcall
mov
lcall
xor
add
stos
clc
pop
add
sub
outsb
mov
ljmp
sub
fcoms
add
test
in
ja
loop
pop
push
lcall
loope
scas
aaa
add
cmp
and
add
xor
sbb
push
mov
mov
push
fmul
sub
pop
jae
sti
stc
ds
mov
imul
mov
stc
repz
and
and
inc
cmp
pop
fildl
mov
sahf
xchg
out
imul
sbb
lods
mov
movl
scas
cld
nop
pop
repz
push
scas
push
add
popf
rorb
jb
mov
stc
test
int
xchg
inc
xor
xchg
pop
cmpb
xchg
mov
mov
push
xchg
dec
enter
inc
in
idivb
imul
sbb
fimuls
push
lock
and
and
add
and
dec
mov
iret
orl
dec
xchg
pop
sahf
push
icebp
mov
mov
nop
aas
sub
repnz
mov
cmpsl
xchg
bnd
mov
ja
xor
jl
fucomi
and
jo
shlb
dec
loope
sbb
movsb
inc
mov
fucom
mov
pop
mov
or
in
dec
fldl
adc
pop
aaa
scas
mov
clc
fisubrs
mov
pop
sti
mov
addr16
mov
aaa
stos
jae
js
dec
or
shrb
or
inc
xchg
push
data16
sti
cmp
add
jae
jecxz
scas
sub
pop
mov
cmpsb
cmp
es
cs
fdivs
out
das
rcr
or
sarb
push
ljmp
inc
xor
jp
push
mov
sbb
mov
inc
in
push
hlt
std
stos
lret
lock
nop
iret
shll
icebp
mov
jle
lret
stos
sub
jge
loop,pn
adc
loopne
sub
ds
jns
in
sbb
inc
orb
je
int3
test
shlb
rclb
lcall
pop
add
adc
fs
xchg
add
inc
inc
jg
sahf
jg
lret
scas
rcrb
jnp
jmp
xchg
push
fs
popf
add
iret
jnp
testl
push
jg
jmp
mov
fildll
mov
jg
sub
jle
push
xor
add
mov
or
xor
hlt
std
ja
ret
js
mov
pop
lahf
popa
sbbb
rolb
jmp
ss
es
pushf
push
push
jecxz
xlat
and
call
mov
cli
ss
das
mov
push
ja
scas
jmp
lods
loop
xchg
cmp
push
fdivrl
xchg
cmc
push
ret
jo
ja
ja
ja
xor
mov
divb
inc
lods
test
test
jo
xor
test
push
stos
lds
push
popa
cmp
rolb
mov
jb
adc
movsb
pop
cmpb
ds
sub
scas
fistl
dec
lahf
clc
and
push
xor
aam
pop
jl
dec
pop
out
aaa
test
adc
pop
pop
mov
fcmovnbe
repz
mov
sbb
push
iret
aad
jge
loope
mov
frstor
cli
and
repz
lock
int
and
loopne
bnd
lods
inc
xchg
xlat
pop
add
loop
insb
mov
pop
cmpsl
test
outsl
push
ja
mov
jbe
cwtl
fdivrs
jnp
loope
jp
lcall
xchg
jmp
jecxz
sbb
sti
lcall
shlb
int3
into
icebp
jbe
inc
out
test
adc
mov
popa
in
xchg
pop
lds
or
mov
xor
xor
out
into
cmc
lock
xchg
jecxz
in
cmpsb
fnstcw
pop
test
aas
lret
loop
add
or
add
adc
std
int
mov
dec
mov
pop
out
sbb
repnz
cmp
scas
aas
mov
aad
inc
pop
jo
push
aas
or
adc
adc
mov
rcr
jb
push
notb
imul
loope
aad
jns
loop
push
scas
xchg
or
sbb
xchg
aad
xor
xchg
cmpsb
sbb
xor
not
adcb
sti
test
jnp
inc
inc
push
xchg
icebp
sbb
das
fdivrs
dec
sub
xor
mov
cmp
leave
and
dec
xchg
fsubr
or
js
lcall
jmp
xlat
test
and
sahf
stos
mov
icebp
mov
ljmp
cmp
sbb
push
mov
pop
xchg
jecxz
mov
or
xor
and
mov
jb
scas
pushf
fists
or
pop
imul
and
add
mov
dec
dec
push
xor
xor
aam
lahf
sub
outsl
ja
or
and
dec
push
imull
stc
jge
push
jae
out
jge
mov
mov
push
fs
push
pop
addl
inc
and
push
push
std
popa
sbb
dec
and
iret
lahf
jno
cmp
and
and
lea
push
outsb
inc
mov
lods
mov
ret
sbb
cwtl
xchg
push
mov
add
daa
sbb
or
push
xorl
xchg
pop
cld
mov
add
or
sbb
arpl
icebp
push
pop
das
das
sbb
vmovsldup
inc
adc
lods
pushf
and
cli
mov
mov
sbb
or
add
enter
lods
add
sti
imul
push
ljmp
mov
push
insl
out
cmc
cs
repz
push
out
mov
add
add
les
sub
lds
aaa
movsb
int3
adc
aaa
jp
xchg
jg
mov
jne
daa
or
pop
insb
or
testl
sub
cmp
daa
lods
outsl
xor
push
sahf
push
shll
mov
sub
out
jl
test
int
mov
pop
fidivrs
mov
mov
mov
mov
dec
dec
aam
call
jbe
lea
aam
repnz
insl
jae
cmpb
insl
es
int3
cmpb
dec
mov
mov
in
xorb
sub
lret
xchg
mov
mov
sbb
aam
sahf
jmp
xor
cmc
mov
outsl
jge
mov
mov
das
stos
adc
shl
or
xchg
and
out
lret
repz
jae
dec
sbb
outsl
pusha
jge
ljmp
adc
mov
xchg
cvtps2pi
and
mov
sub
cli
pop
jbe
pop
xchg
shll
idiv
imul
shrb
inc
stos
and
cmp
jl
aaa
sbb
or
es
mov
call
cmpsl
fstl
shl
dec
mov
cmp
inc
cmp
leave
lcall
adc
dec
mov
lcall
sahf
sbb
add
mov
mov
inc
pop
adc
inc
hlt
cmp
sub
xchg
push
mov
fst
dec
pop
or
cs
push
sub
subl
cltd
cmp
lock
mov
xchg
jb
iret
aaa
mov
or
sbb
ljmp
cmp
ljmp
sub
or
pop
in
mov
lret
test
dec
test
dec
sub
push
xchg
mov
movsb
add
inc
adc
rcrb
and
je
mov
jne
sub
inc
icebp
das
in
sbb
stc
daa
or
shr
ds
int
or
out
dec
jge
stc
bound
out
pop
pop
mov
mov
inc
jecxz
mov
lahf
fisubrl
add
or
stos
add
jns
enter
adc
and
mov
dec
adc
cmpsl
jno
mov
aad
enter
mov
imul
xchg
and
sub
loopne
mov
xchg
sub
sub
gs
jle
mov
ret
rorl
sub
or
sub
mov
test
jmp
push
into
sbb
not
cmp
int
sarb
std
les
mov
fsubs
fmul
mov
push
fwait
mov
or
and
cs
scas
inc
jg
ret
xor
xchg
leave
and
xor
xchg
rcrl
dec
jo
push
fdivl
pusha
shlb
push
adc
out
cmp
lret
gs
ja
hlt
loope
pop
pushl
ja
fwait
mov
addr16
out
jl
xchg
int
into
ja
xchg
xchg
push
std
add
pushf
xor
jo
mov
push
jp
mov
add
es
inc
and
mov
js
and
pop
sub
mov
add
data16
adc
dec
sub
pop
jle
cwtl
add
ja
add
adc
jle
sub
and
cmc
rdmsr
out
xor
sbb
and
mov
rcll
ss
fs
pop
pandn
dec
pop
jmp
adc
push
cs
fisubrl
lds
xchg
mov
mov
xor
jle
pop
mov
mov
hlt
adc
pop
dec
sbb
inc
jne
xlat
dec
insl
iret
icebp
in
cmp
pushf
fsubr
add
pop
filds
js
add
sbb
aam
roll
mov
and
sbb
scas
in
fs
bound
xor
mov
fnstenv
leave
and
inc
iret
inc
xchg
out
pop
xor
pop
mov
adc
mov
loopne
jge
loop
mov
push
xchg
call
sbb
mov
pusha
mov
fcomps
adc
mov
add
dec
push
imul
sbb
lods
xchg
sub
test
in
test
xor
mov
test
jmp
inc
or
aam
addr16
in
pop
out
mov
push
aaa
fldcw
xchg
xlat
dec
idiv
subb
or
or
push
dec
subl
fdecstp
and
rorb
xor
ror
cmp
div
mov
sub
lret
repnz
rcl
pop
dec
adc
rolb
aas
mov
ja
xchg
xor
jbe,pn
mov
xchg
test
mov
xchg
xor
test
cwtl
mov
sub
xchg
xor
mov
xor
sbb
enter
cmp
inc
adc
mov
adc
imul
cltd
inc
xchg
jg
sbb
mov
cmpsb
or
pop
jl
leave
das
cmc
sub
pop
mov
fdiv
fists
movsb
jo
pop
dec
pop
lea
add
popf
ret
repnz
sbb
push
dec
jb
cmp
outsb
dec
mov
or
xor
test
cmp
sub
cmp
jge
cmp
ja
pop
stc
ja
push
xchg
jnp
int3
jae
sbb
imul
mov
jnp
push
fsubl
cmc
ret
inc
fdivl
data16
int
test
dec
mov
or
mov
fildl
ljmp
mov
sub
ret
imul
jge
lea
and
xchg
bound
das
mov
in
push
stos
push
ret
push
cmpsl
dec
xchg
mov
mov
xchg
mov
stos
jnp
rcr
sysexit
lods
adc
jl
out
popl
and
push
mov
ficompl
inc
mov
test
mov
sub
dec
mov
mov
mov
push
and
ljmp
repnz
dec
xor
mov
xor
cmp
mov
das
cmc
inc
mov
jecxz
cltd
add
push
xchg
mov
xlat
and
mov
mov
rcrb
fnstenv
dec
ss
push
adcb
and
in
fs
pop
pop
loop
mov
das
adc
add
repz
loope
mov
pop
cmpsb
pop
adc
xchg
adc
mov
leave
inc
call
add
mov
jmp
xor
cmp
and
sub
jne
dec
dec
jns
sbb
or
mov
cld
hlt
dec
push
popf
or
ror
fcmovbe
push
push
xchg
sarl
push
jge
out
sub
ud0
pop
js
inc
sbb
mov
sahf
lcall
dec
push
mov
loop
mov
push
sarl
out
or
mov
ret
xchg
jne
addr16
jno
jbe
add
sti
arpl
fiaddl
add
mov
xchg
adc
shll
jb
ljmp
inc
imul
jno
ds
mov
sbbb
ljmp
ficompl
cli
fdiv
push
mov
cmp
or
sub
mov
ret
dec
bsr
in
andb
push
jae
xchg
imul
rolb
fisttps
clc
stc
loopne
and
jne
mov
addr16
push
scas
add
pop
xor
dec
into
loopne
jecxz
sub
mov
and
mov
repz
test
dec
pop
mov
mov
cmp
ffree
shll
push
aam
inc
sbb
pop
cmp
xchg
mov
mov
pop
inc
push
movsl
pop
gs
daa
jns
or
sub
add
out
out
stos
mov
dec
inc
jae
shlb
adc
push
push
ds
aam
pop
dec
add
mov
inc
adc
pusha
in
bound
dec
sub
adc
xor
mov
aam
pop
nop
flds
push
xor
sbb
rcr
sub
in
mov
repnz
mov
into
pminub
sub
and
adcb
pop
sub
sbb
cmc
push
mov
add
insl
push
addr16
movsl
cwtl
cmp
adc
in
inc
icebp
notb
test
das
push
sub
stc
inc
incb
dec
imul
pop
out
adc
adc
and
inc
push
or
lods
push
jne
and
maskmovq
testl
mov
sbb
sbb
push
inc
inc
or
jmp
movsl
fdivs
popf
jecxz
xor
inc
add
pop
cmp
shrl
jmp
or
call
inc
lock
insl
addr16
push
cmp
xchg
mov
ret
std
mov
mov
xor
xlat
insb
pop
jecxz
outsb
adc
sbb
xlat
js
sbb
push
dec
jne
push
push
jae
dec
push
xchg
cwtl
and
push
push
out
lods
out
and
popa
sub
xchg
divl
jl
jb
lret
sbb
jge
jnp
pop
loopne
mov
js
xor
lcall
sbb
adc
push
and
inc
lods
cmp
js
sti
cs
push
imul
push
jge
outsl
out
push
fildl
sbb
xchg
dec
lahf
int3
cmp
jg
jno
inc
push
ds
std
lock
jo
ret
or
sbb
bound
stos
sub
imul
fisubs
les
leave
mov
xor
cld
or
or
test
jb
sti
jg
call
mov
rolb
xchg
das
mov
adc
test
adc
push
pop
ljmp
xor
xchg
mov
xor
push
stos
ss
shr
adc
and
mov
mul
sarb
repz
addr16
scas
jp
xchg
into
jno
aaa
jae
mov
lahf
jecxz
adc
xorb
gs
call
test
stc
xor
pop
jp
leave
mov
add
mov
and
and
sub
jge
add
add
xor
andl
cld
sahf
mov
jo
test
scas
sub
ret
leave
cld
or
rclb
sbb
xchg
push
and
or
mov
sbb
cmp
cmp
push
pop
fisubrl
adc
dec
cmp
lea
xlat
mov
out
stos
addb
lahf
push
ret
sahf
out
icebp
xor
ficoml
dec
sub
xor
inc
popa
mov
subb
mov
pop
ffree
jb
cld
test
faddl
jg
fdivl
or
lcall
mov
lods
or
jg
jecxz
lea
pop
or
or
inc
xor
dec
pop
dec
cmpsb
test
xchg
or
sbb
test
fs
adc
pop
dec
clc
pop
pushf
out
mov
xlat
mov
repz
out
pop
jne
sub
into
popa
mov
inc
mov
or
out
outsl
bound
fadds
int3
xchg
sbb
jmp
dec
cmp
pop
fmuls
test
cvtps2pi
andb
push
fnsave
icebp
dec
mov
rcrb
jns
mov
ss
push
jge
out
pop
pop
out
addb
popf
mov
mov
outsb
sahf
xchg
arpl
inc
gs
aam
push
cld
jbe
testb
negb
js
test
sbb
ficoml
dec
or
pop
ss
and
dec
mov
adc
mov
ds
adc
pop
sbb
pop
cmpsl
pop
pop
and
push
cmpsb
mov
jns
inc
pop
jns
lcall
test
push
es
mov
cmp
stc
mov
or
push
frstor
jp
mov
sub
dec
xchg
out
mov
int
jg
cmp
jmp
stc
nop
mov
adc
mov
mov
dec
or
push
in
pop
push
andb
cmp
mov
xchg
divl
and
mulps
popa
into
mov
movsl
xor
cli
inc
subl
lret
sub
roll
sub
mov
mov
mov
push
lcall
jo
push
je,pt
popa
dec
imul
inc
push
lcall
cld
fnsave
mov
cltd
push
jl
sub
out
mov
mov
xchg
loope
or
add
sbb
addr16
sub
jno
shr
rclb
andl
mov
idiv
out
or
lea
add
add
hlt
push
test
test
cmpsb
sub
mov
les
xchg
mov
or
lock
sub
ljmp
sar
pusha
test
jo
jo
dec
cli
lahf
adc
pop
dec
fisubrl
sub
in
ret
or
scas
mov
shll
pop
push
cwtl
mov
sbb
and
sub
or
loope
loop
sub
cs
int3
or
imul
push
test
xchg
xchg
dec
movsl
xchg
cmp
ljmp
mov
es
sbb
out
jbe
add
jno
lea
clc
adc
mov
out
lea
sbb
jp
xchg
pop
frstor
lods
adc
pop
push
pop
xchg
cmp
imul
jnp
jbe
sub
cmp
lock
jbe
aam
out
sbb
mov
push
mov
mov
sbb
sarb
jl
dec
vcvttps2dq
inc
fnstsw
sbb
mov
aam
mov
adc
lds
stc
mov
adc
add
cmp
mov
cmpl
fistps
mov
mov
and
movsl
push
pop
fsubrs
or
push
addr16
into
stc
test
jnp
out
pop
std
mov
popf
xchg
rcrb
sub
mov
dec
mov
adc
or
gs
scas
or
enter
mov
test
adc
jmp
pop
test
jb
test
inc
cmc
ret
inc
cld
sub
out
cmp
lods
inc
std
ss
pop
test
pop
jo
or
xor
dec
test
dec
fcmovnb
jmp
es
pop
pop
loopne
out
xor
lret
push
add
pop
test
sbb
movsl
ja
mov
daa
in
imul
cld
jae
adc
cltd
sub
ds
fdivl
mov
sub
add
fistps
pop
sbb
inc
js
adc
fsub
ss
fildll
shl
stc
mov
cmpl
cmpsl
cmp
sbb
pushf
jb
in
stos
mov
punpcklwd
add
sbb
lods
mov
push
cwtl
sbb
mov
fisttps
or
jnp
nop
add
add
cmp
dec
test
xor
cmp
popf
inc
ja
sbb
xchg
and
or
cld
dec
pop
jnp
into
rorb
push
sahf
inc
push
leave
mov
leave
sbb
std
dec
test
push
sahf
rcll
pop
mov
mov
addr16
add
or
out
mov
testb
inc
mov
jae
or
mov
sub
inc
mov
stc
mov
sbb
add
xchg
fwait
ret
xor
cmp
stos
inc
insb
mov
movsl
movsb
inc
and
fcmovu
pop
mov
pop
mov
dec
pop
shrl
pop
mov
andl
xor
cmp
cmpsl
mov
mov
sbb
sti
jge
mov
incl
mov
and
push
add
ret
xor
add
ficompl
in
push
mov
adc
fldcw
mov
mov
movsl
ret
gs
mov
add
hlt
mov
fisubs
stos
push
cmp
outsl
faddl
push
test
push
sub
divb
xor
fstl
rcll
jb
out
ds
push
mov
mov
jge
dec
mov
in
ffreep
sbb
sti
cwtl
fwait
push
or
inc
leave
xor
lods
and
mov
jg
fstps
mov
cmpsl
mov
push
add
mov
sub
fwait
lds
fdiv
fcmovu
test
mov
inc
stc
push
jmp
or
jbe
mov
out
out
insb
adcl
je
inc
pop
sbb
vpmacsdqh
out
es
int3
ljmp
das
insb
xor
dec
test
xor
mov
jmp
ss
pminsw
fnstsw
popf
lcall
sub
gs
aam
mov
hlt
pushl
xchg
dec
pop
lock
call
and
mov
fbld
add
add
sahf
sbb
dec
out
jb
imull
inc
adc
jl
adc
shl
push
fwait
clc
mov
test
mov
xchg
shlb
cmc
pop
icebp
xchg
jo
leave
or
scas
lock
out
in
dec
lahf
outsl
jne
xchg
mov
add
mov
ljmp
sub
add
popl
mov
or
jle
push
mov
inc
mov
dec
aam
clc
inc
xchg
mov
xor
in
ror
loope
adc
fucomip
int3
inc
ss
mov
push
inc
stos
outsb
dec
mov
pop
add
or
dec
leave
aas
pop
lods
adcl
andb
mov
xor
and
push
stos
icebp
lahf
mov
jbe
push
xchg
lods
pop
inc
imul
pop
xchg
ja
mov
push
rolb
insl
sbb
insl
xor
push
push
loope
push
cs
mov
imul
lods
aas
imul
enter
cmpsl
mov
mov
pop
mov
add
dec
dec
js
cmp
cmpsl
ficoms
and
xor
stos
sbb
fsubr
loopne
sbb
cmp
mov
ljmp
imul
movsl
out
paddq
push
js
push
clc
cli
je
and
imulb
rorl
mov
sub
sbb
xor
mov
cmpsb
sbb
pop
sti
or
xchg
repz
imul
add
or
xchg
sbb
inc
std
push
adc
cmp
mov
clc
int3
in
dec
push
pushf
push
mov
aam
or
pop
pop
out
fcoms
and
pop
in
and
cmp
in
imul
cmp
and
iret
idiv
inc
sbb
mov
mov
out
mov
test
xor
outsl
xor
in
stos
xchg
adc
or
adc
orl
mov
adc
add
loope,pn
shr
sti
ja
jge
je
ret
push
sub
mov
cmp
mov
jmp
les
mov
sub
lret
clc
xor
xchg
xor
mov
into
mov
pop
outsl
enter
aam
ljmp
pop
ret
sahf
dec
inc
xor
pop
lahf
push
dec
les
or
sahf
jns
aas
adc
ret
imul
or
movsl
xchg
mov
add
enter
xlat
mov
and
test
jb
sbb
or
sub
rolb
push
dec
sbb
jge
xor
outsb
mov
lods
lock
jb
les
stos
ss
mov
push
loopw
dec
and
jge
push
gs
push
mov
mov
pop
dec
fstpl
adc
sbb
cmpsb
lods
ret
mov
lods
mov
jae
xchg
mov
dec
aaa
mov
adc
push
jg
rol
cmpsb
xchg
mov
and
addr16
mov
cmp
rolb
in
lahf
js
add
fistl
adc
dec
daa
sub
hlt
mov
and
mov
sbb
sbb
aas
mov
or
movsl
loopne
lret
shr
cmpl
jmp
ds
sbb
cmp
adcl
lcall
bound
cltd
enter
imul
lret
adc
jmp
movsl
out
rcl
pusha
stos
sti
push
out
jnp
xchg
pop
adc
jecxz
mov
inc
loopne
and
das
lahf
dec
and
xchg
fstpl
dec
mov
fcomps
inc
push
repnz
and
cmp
in
loop
mov
sbb
mov
or
push
jecxz
cltd
inc
daa
sbb
pop
lock
xchg
mov
jp
xchg
ds
cld
add
dec
xor
inc
xchg
ja
cmp
test
dec
cmc
popa
fcomps
fdivl
mov
push
dec
pop
andb
test
mov
inc
clc
cmp
mov
jnp
adcl
push
mov
pop
add
scas
inc
test
fdivr
xchg
mov
inc
fwait
sub
push
cltd
push
adc
sti
xchg
cmp
adc
sub
xchg
addr16
aas
pop
jo
mov
xlat
jo
mov
xor
int3
in
shrl
addr16
test
jbe
shlb
xchg
cmp
fiadds
loopne
push
or
fwait
pop
jb
cmp
sahf
les
hlt
push
jp
outsb
jae
mov
sub
scas
push
leave
cmp
add
and
mov
add
or
push
xchg
mov
out
push
sbb
jo
mov
test
cmp
js
stos
inc
add
jae
frstor
xlat
add
pop
lock
xchg
into
pushf
inc
inc
outsl
aam
xor
mov
stc
out
shrl
repz
adc
sbb
inc
push
xor
add
enter
call
stc
ljmp
xchg
sub
nop
sarl
mov
int3
mov
pop
adc
pop
xchg
ljmp
sub
pop
jl
ja
insl
out
das
out
gs
cvtpi2ps
sub
pop
jnp
dec
push
pop
add
std
sub
add
inc
cwtl
test
mov
sarb
fdivrp
dec
popa
jae
stos
ret
lods
loop
aas
out
push
xchg
mov
popa
adc
sub
cmp
sahf
mov
lock
fnstcw
aaa
jnp
fisttpl
jb
pop
mov
arpl
stc
jmp
push
js
rsqrtps
and
mov
in
sub
xchg
xor
inc
fists
push
push
jge
inc
jns
pop
addr16
mov
mov
insl
pop
lds
popf
jle
push
ss
cmp
out
jmp
mov
push
lds
lea
in
sub
mov
jl,pt
pop
ss
mov
mov
jl
mov
fsubr
add
xor
xchg
cmpsl
and
bound
and
imul
push
shlb
ds
xchg
loope
xchg
arpl
lret
sub
jmp
cltd
mov
lret
test
data16
pop
cmovnp
xchg
mov
mov
mov
add
hlt
xchg
aaa
ss
push
ljmp
cmpsb
push
insl
jge
fisubrs
filds
pop
mov
mov
or
and
inc
pop
dec
lret
push
int3
out
cltd
pop
mov
xor
in
movsl
jge
int3
jmp
add
test
or
push
xchg
aaa
xor
enter
mov
int3
and
add
ret
pop
lahf
sbbl
in
jno
fcmovnb
test
mov
loop
mov
and
or
rep
and
cmp
icebp
lods
jmp
cmp
xor
adcl
pop
in
lret
rcrb
cs
iret
in
or
ss
lock
jns
sbb
cmp
enter
jno
push
push
aam
sub
inc
mov
mov
in
pop
stc
sbb
cmp
or
xchg
int3
lods
cmp
fwait
es
or
in
add
das
push
sub
fiaddl
cltd
sbb
les
jae
cmp
out
cmp
xchg
and
arpl
mov
je
jl
jne
cmp
insl
loopne
enter
push
push
and
daa
stos
testl
jns
xor
jecxz
push
out
addb
fdivrp
mov
cmp
lcall
sub
push
mov
ds
lods
shrl
push
jg
fimull
push
fsubrl
push
sbb
cmp
jle
mov
les
mov
xchg
data16
lods
adc
pop
loopne
fbstp
int
pop
int3
jmp
popf
mov
inc
addr16
mov
push
mov
sub
mov
test
jae
loope
test
mov
cld
fsub
mov
test
sub
lret
xchg
sbb
xchg
mov
inc
sub
shl
stc
js
xchg
or
push
lds
pop
gs
push
enter
pop
pop
scas
aaa
sub
roll
dec
or
sub
lods
cwtl
decl
shll
xchg
inc
add
cmc
sub
dec
movsl
adc
jg
arpl
mov
sbbb
fcoml
in
sarl
repz
pop
in
dec
dec
inc
lods
ror
loope
add
dec
jb
or
into
out
cld
push
fldl
xor
cs
xchg
out
xchg
popf
mov
mov
scas
or
pop
sub
or
cmp
in
pop
sub
mov
cwtl
aad
mov
outsl
add
cmp
pop
pop
add
mov
out
shrb
pop
xchg
xchg
jle
mov
dec
pop
into
jecxz
xchg
stos
idivl
ljmp
adc
ss
sub
and
mov
jle
mov
fnsave
xchg
leave
xor
inc
inc
jne
push
cmp
or
inc
push
xor
mov
adc
rorb
mov
push
fbld
loope
or
dec
out
push
pop
pop
pushf
add
dec
lahf
jbe
cmpsl
aaa
icebp
iret
addb
cmc
xlat
inc
xchg
dec
mov
cmpsl
jl
push
xchg
xchg
cmpsl
cld
fists
push
ja
test
fstl
inc
push
test
lret
cmpl
call
test
push
insb
add
sub
xchg
ficomps
mov
push
adc
sarl
cmp
xlat
lods
xor
mov
and
xor
sub
mov
cmp
push
mov
cltd
or
xor
in
ljmp
lods
enter
and
push
sbb
movsl
mov
int
cmp
iret
loop
lods
aad
roll
dec
dec
xchg
adc
push
cmp
iret
in
roll
push
push
popf
je
push
dec
sub
movsl
into
jnp
xor
cmp
pop
and
xchg
cmp
das
mov
inc
and
cmp
jle
mov
dec
frstor
mov
ljmp
in
adc
fcompl
add
push
fnstcw
sub
fisubs
sub
or
iret
xor
cmp
dec
les
jp
jle
sar
es
mov
adc
sub
mov
xor
movhlps
sbb
jp
repnz
push
mov
cli
xchg
sbb
test
mov
call
outsl
or
ret
fnstsw
xlat
cmp
int3
fstpl
out
in
push
imul
xorb
xchg
rcrl
and
call
std
mov
fldl
int3
and
adc
inc
mov
mov
cltd
and
jecxz
lods
jmp
cmp
mov
pushf
shr
push
inc
hlt
dec
xor
not
jecxz
stc
pop
dec
ljmp
xchg
pusha
jbe
add
js
and
andl
mov
ljmp
mov
jno
cli
dec
inc
mov
mov
sbb
mov
test
leave
bound
mov
jp
push
not
dec
mov
in
aaa
inc
jae
and
clc
nop
xchg
ror
insl
push
gs
test
and
inc
mov
cli
rclb
pop
push
cmpsl
daa
imulb
or
inc
mov
dec
popf
mov
mov
jne
leave
add
mov
add
scas
sbb
xor
mov
mov
and
cmp
sub
or
push
lea
iret
or
sub
push
ss
dec
cmp
mov
dec
leave
xchg
push
out
fs
cmpl
xchg
pop
or
mov
sub
mov
sub
push
inc
and
mov
movb
call
call
xorb
inc
outsl
mov
adc
pop
cvttps2pi
mov
push
push
repnz
push
adcb
adc
imul
enter
rorb
xchg
dec
mov
push
xchg
jno
adc
int
mov
shll
or
or
ret
or
pop
gs
mov
or
jp
int3
mov
xor
aas
dec
cmp
push
cld
xchg
js
pop
sub
jge
insb
mov
sub
aaa
cmp
or
sub
jmp
fwait
lea
hlt
in
dec
pmuludq
icebp
add
sbb
sarl
sbb
xor
mov
arpl
push
pop
es
fs
ja
sarb
xor
std
arpl
mov
out
fnstenv
dec
sub
adc
in
jbe
adcb
cmp
cwtl
aas
cmp
or
xor
xor
pop
push
pop
mov
insl
jno
jno
adc
es
cmp
mov
add
cmp
mov
sbb
xchg
test
sub
cmpsl
mov
cs
ljmp
sbb
xchg
ljmp
je
loop,pt
inc
push
jo
rolb
cmpsl
std
jmp
xor
daa
mov
ljmp
and
push
sbb
mov
mov
xor
mov
mov
andps
arpl
pop
jg
and
cmp
mov
pushf
push
push
aaa
out
inc
mov
mov
jmp
pop
pop
ss
sbb
jns
cmp
repnz
and
lret
or
or
ret
and
jp
lds
scas
add
inc
xchg
push
lods
jge
mov
aas
cmp
jbe
int3
sub
cwtl
inc
mov
jae
cmp
sbb
xor
jo
adc
sub
mov
and
add
in
stos
pop
aad
jmp
mov
cmc
test
jno
mov
mov
xor
gs
js
or
or
sub
sub
scas
push
push
sub
sub
inc
sbb
outsl
insb
test
nop
imul
dec
mov
fptan
and
push
outsb
lds
leave
or
shl
mov
aam
jo
cwtl
idivl
icebp
insl
dec
mov
test
mov
bound
or
shld
loope
fcomip
push
xor
aad
mov
mov
sub
fisttps
mov
mov
inc
sar
pop
xchg
add
xor
adc
adc
stos
lret
shlb
scas
insb
inc
test
ret
sub
or
push
jl
push
push
in
pop
and
aam
sahf
div
fisttps
bndstx
cmp
rcl
and
lods
outsb
arpl
lock
push
pop
or
sub
rolb
ja
or
and
das
fmuls
pop
insl
sbb
dec
in
pushf
rorl
scas
xchg
testb
aaa
stos
fwait
int3
xchg
pop
pop
dec
jecxz
imull
sub
jno
aam
pop
lcall
andb
aad
xchg
in
ss
popf
push
mov
jb
xchg
das
mov
or
outsb
xchg
ds
pop
dec
mov
cmp
cmp
mov
dec
fs
pop
test
adc
adc
sbb
out
inc
dec
pop
aaa
jge
fucomip
aad
dec
inc
in
cld
inc
xor
inc
lods
cmpb
mov
mov
xor
ret
repz
push
mov
add
mov
mov
mov
jne
mov
mov
clc
adcb
adc
mov
out
outsl
dec
inc
mov
jns
cmp
addl
inc
jne
sbb
aam
adcb
negl
repnz
mov
in
sbb
pop
sbb
jecxz
js
ror
dec
add
ficompl
inc
mov
stos
sbb
mov
test
jp
sbb
mov
jbe
mov
data16
sub
sahf
jns
cwtl
mov
es
scas
push
bound
loopne
mov
ret
roll
pop
mov
mov
sub
xchg
push
and
mov
daa
mov
dec
mov
add
fdivl
lcall
pop
mov
mov
jl
push
adc
fnstenv
push
neg
gs
cmp
les
fisttpl
adc
imull
xor
sti
jae
or
inc
cmp
rclb
jb
fsubrl
pop
sbb
repz
dec
add
vpsrad
push
adc
in
das
inc
mov
insb
adc
lods
leave
adc
inc
pushf
or
add
dec
or
loop
pop
jp
xchg
insb
imul
inc
adc
push
popa
stc
mov
outsb
inc
add
xchg
aam
jl
test
sub
jb
or
or
jmp
aad
lret
in
movsb
sbb
sbb
int3
cli
jg
add
push
mov
jno
pop
push
xchg
ja
jle
ret
lret
int
mov
std
push
icebp
cmp
inc
ret
inc
jecxz
push
ficomps
mov
scas
bound
sub
fistps
pop
sbb
js
mov
add
in
cli
ss
aam
repnz
mov
sub
or
dec
jns
je
add
cwtl
push
gs
sub
adc
pop
pop
jnp
inc
dec
pushf
mov
aas
test
and
dec
xchg
xchg
in
push
lea
mov
push
lret
mov
sbb
cmp
fisttps
mov
dec
xorl
and
iret
popf
cmc
fsts
std
mov
mov
inc
fnstcw
cmp
mov
outsl
in
cmp
xchg
push
je
sub
and
dec
push
xchg
and
mov
cmpsb
or
scas
negl
fdivrs
or
and
mov
xlat
jo
inc
jno
fwait
bound
lock
lock
jb
ds
cmp
xchg
pusha
mov
jnp
dec
std
inc
mov
inc
dec
jl
xchg
in
push
repz
dec
jmp
jmp
test
test
leave
sbb
push
pushf
cmp
push
notl
int3
jle
push
jge
fdivrl
jge
or
les
aaa
notb
cmp
xor
mov
gs
sbb
hlt
jmp
pusha
rcll
pusha
shll
xchg
lock
pop
imul
adc
out
push
add
inc
xlat
jns
xor
xchg
das
lds
mov
aam
fs
psubd
loopne
dec
call
jl
or
sub
mov
aam
in
aam
mov
sub
add
and
adc
dec
sub
add
imul
nop
xchg
mov
ljmp
inc
cmp
push
sbb
movsb
cmp
pop
hlt
xchg
pop
dec
mov
xor
or
inc
pushf
jno
pop
cwtl
stos
adc
and
inc
jmp
mov
and
lret
scas
pop
mov
cmp
popa
pop
xchg
and
adc
sub
sbb
mov
add
dec
mov
popa
jg
js
mov
cli
cwtl
add
dec
mov
lods
sbb
popf
pusha
add
push
nop
rsqrtps
dec
jmp
ds
into
mov
or
adc
pop
nop
rorl
fcompl
jmp
in
xor
repnz
std
imull
std
mov
test
and
lods
xor
dec
scas
xchg
xor
testl
mov
in
movsl
jle
adc
dec
cmpsl
hlt
int
push
lods
adc
pop
cs
inc
repnz
std
test
in
pop
into
jle
lods
sub
stos
pop
stos
or
idivl
mov
cmpsl
mov
movsb
shl
push
in
add
pop
adc
fstpt
pop
sbb
notl
mov
enter
inc
test
mov
fistpll
ret
push
cmp
mov
push
out
adc
dec
dec
lods
fisttpl
pop
fwait
insl
or
outsb
mov
inc
xlat
scas
fwait
xor
js
sahf
or
mov
mov
stos
push
add
stc
and
lods
lea
pop
das
jecxz
arpl
int3
pop
fnstenv
fldt
xchg
scas
inc
repz
jmp
rclb
push
addr16
xor
jae
lods
scas
mov
clc
adc
fadds
stos
lods
popf
dec
cmc
shlb
scas
cwtl
dec
daa
xor
insl
jo
fisubrs
out
lcall
or
test
ret
pop
cmc
lds
mov
and
inc
xchg
pop
push
daa
std
mov
mov
ds
in
xchg
test
divb
push
rclb
jp
std
adc
inc
ljmp
out
mov
sbbb
pop
and
shlb
ljmp
xchg
out
xabort
fiaddl
xchg
dec
xchg
out
sbb
gs
inc
rcll
mov
jbe
dec
outsl
jmp
adc
mov
shlb
pop
lods
or
fdivl
lds
pusha
outsb
cmp
out
insb
insb
mov
mov
sarl
jge
mov
test
nop
or
pop
and
sbb
cltd
cmp
adc
stc
mov
push
fisttpl
outsl
stos
jno
add
or
cmp
jmp
outsb
mov
aam
inc
or
fdivr
cli
psubusb
arpl
inc
or
pmuludq
js
pop
mov
sti
jmp
cmc
mov
roll
ljmp
cs
js
xchg
cltd
xor
lret
xchg
mov
ds
pop
loope
xlat
.byte
.byte
