push
call
ret
ret
lret
xchg
loopne
mov
cmpsb
stos
lret
jae
jecxz
mov
inc
push
aas
add
in
xor
mov
in
dec
or
mov
xor
add
cmp
es
stos
jl
sbb
dec
mov
call
xchg
cmp
insl
mov
mov
gs
sub
cwtl
mov
mov
int
mov
sti
clc
push
xchg
push
jge
mov
mov
mov
sti
repnz
scas
pusha
cmp
gs
mov
scas
jns
test
jo
fsts
xchg
popa
push
fcmovu
or
pop
lods
xchg
ret
dec
rorl
xchg
inc
and
leave
les
mov
movsl
pop
push
jl
sti
cmc
mov
jns
inc
shl
jmp
pop
ss
jecxz
leave
push
sub
les
mov
mov
push
enter
fsubs
in
leave
push
jg
add
inc
fidivrs
sbb
js
mov
cmp
cmp
fisttpll
imul
insl
and
ljmp
fs
fs
push
dec
mov
cwtd
pop
aaa
and
jnp
push
call
cld
sbb
subb
cmp
or
add
inc
movsb
pop
sbb
xor
xchg
popf
jl
mov
jge
dec
aad
loopne
mov
fmull
xor
add
inc
mov
stos
dec
std
sbb
pop
aam
and
or
stos
cwtl
sbb
ret
scas
mov
xchg
xor
mov
scas
mov
addl
sub
push
mov
idivl
fiaddl
xchg
int3
int3
sahf
fstpt
xlat
inc
jno
sarb
mov
inc
mov
push
mov
pop
or
jbe
stc
add
lret
gs
mov
mov
fstps
sub
addr16
daa
push
mov
aam
fsubr
mov
sub
sbb
mov
sub
aas
stos
dec
sub
movzwl
push
dec
mov
mov
adc
cmpsb
imul
outsl
jns
movsb
hlt
jbe
mov
lods
in
dec
cmpsl
lods
insb
inc
enter
mov
xchg
pop
packsswb
push
push
xchg
mov
mov
push
in
aam
add
xchg
ss
xchg
popf
outsb
pop
imul
lods
gs
jns
mov
mov
push
fmuls
push
jmp
loopne
or
std
add
or
inc
adc
inc
jb
pop
insl
aas
fnstsw
loopne
loopne
inc
pop
inc
out
daa
push
push
movsb
cmp
mov
int3
mov
sbb
xor
bound
mov
mov
adc
push
adc
ja
or
push
rorb
mov
mov
add
sub
add
xchg
outsb
sub
sbb
subl
add
andl
sbb
iret
jbe,pn
test
fiadds
jns
aam
jne
sbb
jecxz
push
aas
leave
xor
test
xchg
pusha
xor
roll
data16
out
rcrl
mov
xor
and
cwtl
push
jle
icebp
shrb
test
jl
test
sbb
sti
mov
andb
mov
sbb
mov
xchg
mov
cmp
fistl
xor
mov
jge
lret
and
les
sbb
aas
cmp
inc
mov
push
xlat
xchg
cmp
and
lds
or
pushf
jne,pt
add
push
addr16
outsl
pop
out
bound
add
jae
stc
jge
push
jb
js
fisttpl
lea
or
xchg
loopne
and
push
sti
arpl
and
pop
and
lock
push
sbb
jae
add
in
fimuls
jmp
scas
dec
sbb
jecxz
jp
or
movsb
or
pop
lock
clc
adc
rcr
insl
add
xor
add
out
jmp
aas
jl
out
aam
lods
ds
lock
ret
jo
push
xlat
mov
outsb
shrl
in
out
loop
insl
add
cmpsb
and
ljmp
setno
ret
mov
sbb
in
and
dec
aad
inc
dec
xchg
fcmovbe
aaa
int
data16
sbb
addb
push
mov
dec
or
pop
gs
ror
je
adc
pop
adc
fcompl
in
andb
in
nop
dec
repnz
dec
inc
enter
fimuls
xchg
jnp
and
mov
push
pusha
je
or
std
sub
aad
or
imul
mov
lahf
inc
js
adc
or
sti
inc
sbb
xor
cmp
push
out
and
sbb
repnz
dec
xor
fbstp
daa
xlat
icebp
je
mov
mov
cmp
je
repz
in
testb
loopne
cmp
std
jns
ljmp
frstor
mov
lea
pop
jge
out
add
stos
int
stos
cmp
andl
roll
mov
pop
and
ret
and
pushf
push
lds
xchg
jns
cmpl
fldlg2
inc
loop
pop
outsl
and
jl
mov
inc
test
adc
add
mov
cwtl
andb
cmp
cwtl
enter
fidivl
pop
and
test
jl
xor
jo
es
add
es
and
lock
jecxz
pop
shrl
mov
cmc
fbld
or
pushl
mov
loop
jge
push
mov
lock
cmp
push
aam
cs
popf
pop
sub
push
push
inc
jno
lcall
aam
or
je
lock
das
xchg
pop
ds
mov
and
fstpl
lods
cmp
inc
pop
repnz
enter
xchg
sarl
cltd
or
inc
cld
lret
pop
jmp
mov
jo
int
xchg
cwtl
lret
or
xchg
dec
sbb
mov
cli
and
mov
mov
scas
fstpt
loope
sub
in
sub
test
dec
sbb
lret
inc
xchg
xchg
xor
mov
sbb
lcall
cmp
sub
jne
js
cmc
mov
mov
movsl
adc
sbb
mov
cmp
sub
add
push
popa
orb
fidivl
dec
jae
adc
xor
xchg
imul
lret
lahf
pop
in
mov
movsbl
arpl
xchg
repnz
xchg
cmpb
and
jno
inc
push
clc
dec
je
mov
leave
mov
pop
inc
scas
fnstsw
sub
dec
daa
cld
sbb
xchg
adc
push
pop
pop
ss
lret
outsl
mov
scas
in
and
rol
cwtl
sub
mov
sub
cmp
rcl
sbb
outsb
shrb
daa
arpl
shlb
push
gs
vminpd
nop
fisttps
fwait
cmp
adc
or
sub
stos
push
negb
cwtl
mov
into
adc
sbb
ret
dec
jb
dec
xor
out
hlt
jge
shlb
test
pop
jg
push
mov
xchg
push
xor
das
dec
bound
arpl
fistl
mov
jns
into
jecxz
ja
xchg
lods
lahf
jo
call
jecxz
pop
lock
pop
sbb
cmpb
xor
xor
cli
and
mov
sbbb
and
loope
loopne
dec
test
sbb
xor
imul
mov
push
shl
push
stos
out
jmp
fwait
imul
ret
mov
mov
xchg
adc
adc
ljmp
jb
jge
inc
repnz
jecxz
lods
ret
jg
stos
imull
lods
cmp
dec
and
imul
es
cmpsb
cmpsb
lock
and
pop
aaa
fisttpll
mov
sbb
popf
or
jmp
arpl
dec
adc
add
push
sbb
xchg
adc
repz
in
xchg
inc
aas
in
xchg
pop
push
ja
xchg
add
movzbl
mov
rcrb
fs
inc
xchg
loop
push
cmp
subb
insl
push
hlt
and
xor
int3
mov
mov
lods
lret
or
int3
add
or
or
jl
js
push
pop
fmulp
push
push
call
jmp
pop
daa
fsubl
mov
or
rolb
dec
cmpsb
inc
inc
arpl
mov
test
mov
js
or
jg
cli
rorl
push
mov
jns
sbb
mov
mov
adc
dec
inc
sbb
test
mov
or
scas
inc
ret
xchg
movsl
fwait
jp
cmpsb
add
cld
lods
ja
inc
fwait
adc
sbb
xchg
idivl
dec
jmp
add
test
mov
pusha
adc
ljmp
mov
inc
insl
sbb
mov
lods
cs
lcall
inc
aad
inc
mov
ja
or
test
mov
into
rcrb
and
std
daa
aaa
mov
cmp
xor
ret
inc
cmp
push
outsl
adc
mov
mov
mov
and
sub
hlt
xchg
fmuls
mov
ja
xor
inc
outsb
aas
or
cmpsl
ret
xor
addr16
adc
dec
adc
mov
pop
xor
mov
mov
sbb
stos
repz
sbb
fisubrl
jae
or
inc
fsub
icebp
mov
jb
mov
shrb
inc
mov
mov
pop
dec
mov
jge
lahf
stc
adc
dec
mov
lret
stos
cwtl
stos
xor
dec
xlat
or
hlt
pop
cmp
imul
or
les
dec
add
push
ja
adc
insb
imul
add
cli
enter
sbb
lcall
inc
loopne
jge
aaa
pusha
aad
adc
rorl
or
add
and
sub
mov
cs
xchg
push
enter
aaa
dec
pop
lahf
and
xchg
sbb
adc
add
leave
mov
mov
and
cmpsb
dec
push
push
xchg
insl
sub
lcall
jnp
pop
cmpsb
push
andb
and
sbb
ss
and
inc
loopne
leave
pushl
lods
je
cmp
leave
sub
sub
dec
rcll
xchg
dec
jmp
fnstenv
jmp
adc
jb
lret
xchg
fildl
mov
cmc
int
cs
cmp
or
xchg
jg
ljmp
or
sbb
sbb
dec
lahf
in
mov
out
xor
adc
inc
mov
cmp
mov
xor
and
push
fcoms
push
ljmp
mov
mov
scas
subl
int3
arpl
xchg
mov
cltd
dec
mov
hlt
in
in
movsb
mov
sti
jbe
mov
add
int
cmp
in
call
adc
mov
mov
mov
addw
mov
test
rcr
or
in
data16
roll
push
inc
aad
bound
push
jbe
push
bound
testb
pushf
xchg
jb
call
dec
lock
jg
dec
rcrb
lds
dec
adc
jl
add
push
js
pusha
pusha
loop
or
pop
push
push
add
add
pop
pop
pop
movsb
in
xchg
mov
inc
shrl
mov
repnz
sbb
in
pop
pop
jg
fmuls
pop
jmp
rcr
and
mov
push
jecxz
mov
arpl
sub
loopne
push
fcmovne
std
gs
lcall
jl
ret
xchg
adc
addl
push
in
push
sbbl
cmp
subb
sbb
xchg
cmp
jns
es
jp
hlt
ds
jp
cmpsb
dec
outsb
xor
sub
or
dec
ret
pop
sbb
lods
daa
adc
xor
fneni(8087
xor
movsl
inc
mov
pop
mov
lret
and
cmp
popf
lods
xor
inc
mov
sub
insb
out
sub
gs
inc
adc
lret
loopne
jae
mov
inc
mov
pop
mov
rcll
loopne
or
ja
xlat
pop
and
or
hlt
jmp
mov
loope
ds
leave
popf
xchg
fdivs
out
cmp
mov
data16
sbb
xchg
test
sbb
xchg
xchg
cmp
sub
pop
pop
jo
gs
sub
xor
pop
jmp
cld
mov
lahf
mov
pop
and
jne
lods
mov
or
jno
nop
ffree
cmp
push
test
dec
mov
adc
outsb
ja
sub
jb
dec
inc
adc
int
outsl
in
popa
insb
es
push
sbbb
fstp
rcrb
cmp
mov
add
pop
sub
cmp
lds
jb
orl
inc
push
test
lcall
or
or
xchg
imul
js
repz
clc
cltd
dec
push
arpl
xor
cmp
call
test
loopne
sub
sbb
xchg
mov
fmul
and
int
out
jno
pushf
xlat
jo
inc
sbb
push
mov
cli
lret
xor
insl
and
xor
outsb
xchg
mov
fsubrs
enter
les
sub
ret
sub
hlt
inc
add
mov
insl
in
push
mov
es
stos
lahf
imul
xchg
jg
loop
stc
push
mov
addb
dec
jg
call
in
inc
je
or
sub
push
aas
aas
lcall
adc
sub
push
and
ret
icebp
js
fstp
mov
mov
sbb
or
sbb
clc
jno
sub
xchg
mov
lods
sti
and
pop
leave
nop
inc
mov
xchg
sbb
or
xchg
lcall
mov
jecxz
and
icebp
idivb
jge
je
ficoml
lret
les
aas
or
sbb
and
repz
adc
sbb
std
daa
insl
out
push
std
sub
xchg
push
std
and
jmp
addb
adcl
aam
fadd
call
in
xchg
mov
push
push
divb
ss
cwtl
pop
ljmp
les
in
dec
call
sub
leave
imul
in
xor
fadd
jg
pop
fcmovne
mov
dec
cmpb
pop
insl
sbb
cmc
xchg
push
gs
dec
fdivrl
jle
adc
in
adc
lea
movsl
mov
lcall
popa
push
je
leave
lret
repz
mov
sbb
xchg
xor
pushf
test
add
out
cwtl
scas
lds
and
push
jmp
sbb
pop
les
pop
xor
xchg
lret
cwtl
aaa
fwait
inc
movsb
test
add
dec
rclb
xchg
lcall
lret
mov
lock
pop
inc
std
stc
fisubs
mov
jmp
lcall
lods
sarb
dec
scas
test
sbb
push
inc
daa
dec
gs
sbb
lret
push
mov
sub
repz
and
into
mov
enter
nop
push
lret
sbb
dec
nop
sub
jl
push
sub
mov
cmp
jnp
stc
mov
imul
hlt
decb
push
xor
mov
jmp
sbb
shll
mov
fdivrs
mov
shll
cwtl
dec
jb
mov
dec
xor
ja
fldcw
enter
out
or
test
stc
ss
and
repnz
repnz
sbb
sub
and
in
in
in
dec
lahf
outsb
cmp
mov
clc
inc
in
or
cmp
xor
and
lea
test
lods
mov
mov
std
out
rolb
dec
mov
test
jno
add
outsl
loopne
lods
adc
dec
inc
xor
fidivs
enter
lods
sub
push
adc
dec
test
insl
js
ljmp
pop
inc
loope
out
mov
adc
fdivp
test
and
lea
stc
gs
adc
dec
lahf
movsb
mov
mov
dec
sbb
xor
push
dec
ret
call
mov
nop
or
jno
out
scas
leave
jecxz
and
in
xor
push
push
lock
inc
xchg
xchg
cs
mov
adc
popa
ret
mov
dec
or
xor
jl
jmp
dec
sti
add
xchg
stos
xor
mov
cwtl
jbe
pop
xchg
pop
adc
andb
mov
adc
push
repnz
nop
cmpsb
in
adc
adc
jl
mov
or
sbb
cld
dec
jecxz
inc
sub
push
push
push
nop
dec
push
push
cmp
cmp
ret
mov
cli
cmpsl
xorl
hlt
mov
es
sub
mov
add
sbb
sbb
add
dec
bound
aas
sahf
inc
xchg
scas
push
sarl
loop
decl
sbb
arpl
cmp
sbb
xchg
lcall
adc
loope
pop
and
movsb
pop
sbb
push
jne
sahf
shl
sbbb
mov
push
xor
dec
addr16
leave
js
popf
xchg
pop
xor
addr16
arpl
inc
clc
insl
xchg
loop
into
lret
xchg
xor
dec
xchg
mov
out
xlat
add
cmp
inc
mov
jmp
int
jno
movsb
sbb
loopne
pop
add
inc
mov
rolb
jae
imul
cmpsl
xchg
mov
clc
xchg
mov
mov
mov
cmpsl
cmp
push
inc
xchg
shl
jle
fwait
sbb
arpl
jbe
adc
movsl
cli
xchg
jmp
or
test
push
jo
mov
push
scas
stos
and
loope
pop
mov
pop
pop
lcall
fs
mov
mov
mov
ss
shll
movsb
test
in
add
jge
xchg
fstl
movsl
jbe
jnp
push
loop
push
adc
push
fmul
mov
jbe
fsts
jmp
sbb
sbb
sahf
fdivr
sahf
inc
je
push
mov
int3
xor
push
inc
and
stos
int
add
nop
sbb
cmpsb
ret
mov
out
mov
mov
inc
jns
jp
add
jl
sub
popf
pop
lds
rcr
push
je
xchg
adc
icebp
repnz
jno
test
loopne
cltd
insb
int3
movsb
rorb
and
xchg
xchg
add
add
push
fwait
jae
mov
loopne
ss
add
mov
jno
clc
xchg
add
lea
pop
pop
and
sbb
or
in
sbb
inc
fdivrl
xor
shr
test
mov
mov
ret
fwait
lea
and
test
in
adc
clc
push
orl
xchg
das
movsl
in
mov
test
push
xchg
sbb
lcall
test
pop
aam
inc
mov
jbe
mov
sbb
push
sbb
jns
ds
frstor
pushf
adc
jmp
cmpsl
xchg
mov
pop
jl
xchg
pop
repz
clc
mov
jecxz,pn
xchg
popa
pop
mov
pusha
mov
inc
movsl
mov
rcrb
imul
movsb
add
lcall
inc
hlt
andb
and
pop
call
std
jo
roll
out
in
daa
inc
stos
cwtl
push
mov
sbb
lods
pop
xor
push
cs
and
and
stos
add
push
cmp
std
push
stos
ss
inc
loope
cmp
ss
pop
sahf
and
icebp
mov
ljmp
out
repnz
jns
jae
popf
icebp
and
adc
add
cmp
ret
test
rorb
mov
xchg
packsswb
dec
pop
js
mov
fwait
loopne
lret
sbb
lock
adc
add
inc
adc
mov
adc
cwtl
pop
pushl
mov
sbb
add
adc
insb
fistpl
sub
jae
and
mov
aam
jns
andl
cs
mov
jecxz
dec
jp
rcrl
mov
or
cli
jno
in
adc
mov
jns
sub
xchg
into
bound
mov
xchg
jns
imul
fs
cmpsb
mov
les
xchg
push
fisttps
pop
cmp
data16
cmp
xor
push
xor
in
scas
xor
pop
lods
popf
dec
pop
arpl
stos
and
ret
iret
gs
inc
and
nop
loopne
stc
mov
aam
xor
push
mov
loope
sub
ljmp
aaa
fiaddl
ror
xor
pop
lret
je
mov
mov
xchg
dec
jecxz
sarb
cmp
inc
inc
jmp
ret
leave
xor
test
fs
adc
inc
xchg
xchg
int3
inc
insb
std
in
lds
push
mov
xor
jnp
movsb
mov
jbe
cmp
pop
fstpl
add
xor
sub
stc
ljmp
clc
cmp
add
push
dec
pop
inc
inc
adc
jl
test
dec
out
in
repz
loop
cmc
aas
push
cwtl
inc
subb
aad
popf
in
out
push
mov
xchg
fadd
ret
mov
pop
loop
jae
mov
cmpsl
testl
jp
into
fs
inc
nop
cmp
outsl
repz
outsl
pop
cmp
pop
sbb
cwtl
inc
pop
inc
stos
gs
xor
scas
popf
push
cmp
je
sahf
xlat
mov
out
out
mov
jg
cmp
loop
dec
cmp
mov
or
sub
xchg
cmc
xor
out
rcr
outsb
mov
or
inc
mov
sub
xchg
adc
inc
and
imul
jecxz
jne
jne
xchg
xor
cs
or
mov
mov
icebp
in
fucompp
add
pop
add
fwait
xor
inc
gs
xchg
push
gs
and
xchg
pop
mov
das
xchg
lds
jo
xchg
sub
pop
and
cmpsl
and
adc
pop
mov
inc
xchg
leave
add
xor
pop
dec
hlt
pop
push
notl
fiaddl
jbe
pusha
das
test
stos
xlat
ds
lret
loopne,pn
pop
jp
cli
shlb
cltd
loope
cwtl
inc
or
mov
ja
cltd
jmp
and
shlb
push
sub
adc
mov
dec
and
cmpsl
xchg
lret
fwait
cmp
out
movb
and
jge
pop
fnstenv
popa
or
rorb
jmp
xchg
bound
jae
mov
xor
das
sti
addb
aaa
in
xchg
icebp
sub
xchg
dec
pop
cmc
test
push
iret
xor
repz
xchg
push
icebp
out
pop
or
push
test
lods
sub
pop
xchg
icebp
out
mov
fucom
jmp
mov
xchg
pusha
mov
cmp
jae
pop
push
pop
sub
popa
mov
jp
lcall
test
pushl
scas
or
sub
and
mov
jo
popa
rclb
aaa
jae
mov
push
insb
lcall
add
scas
sub
lods
jp
xchg
test
out
jg
sub
mov
mov
mov
mov
rcll
xchg
mov
add
xor
cmpsb
cmp
push
cs
adc
in
call
cmp
xchg
xchg
lods
push
lods
popf
cmp
ffreep
mov
or
hlt
add
scas
pop
and
or
incb
mov
imul
and
cmc
add
jae
adc
cltd
sarb
inc
out
fstl
jns
or
lods
fldcw
inc
fbstp
subl
sarl
adc
dec
jo
jnp
cwtl
imul
inc
out
js
jmp
pop
cmc
sbb
mov
push
mov
fldt
jmp
dec
mov
push
sub
call
adc
aam
and
shrl
arpl
mov
add
gs
andl
lods
outsl
stos
xor
stc
push
aad
cmp
bnd
loope
cmp
dec
or
mov
popl
sbb
gs
xchg
and
pop
dec
xchg
je
pop
mov
int
inc
dec
mov
stos
push
xchg
or
xchg
pop
mov
mov
mov
push
dec
jno
cmp
xor
pop
cmpsl
push
mov
mov
inc
xchg
out
xchg
mov
cmp
mov
mov
loopne
push
push
mov
jne
repz
adc
les
or
aam
or
ds
inc
daa
test
aaa
push
mov
aas
pop
scas
cld
jl
lods
xlat
mov
xchg
push
fwait
pop
xchg
jmp
cmp
dec
popf
mov
inc
and
js
movsl
fsubrl
imul
lock
adc
scas
lcall
mov
jecxz
add
xchg
and
shll
jmp
inc
mov
xchg
std
jae
jae
inc
rcll
cmp
mov
int
and
adc
je
mov
int
fsts
adc
scas
xor
clc
sbb
jno
add
jae
lods
cmp
cmc
jl,pn
pop
jae
sbb
push
jbe
dec
xor
ljmp
aad
jmp
sub
call
push
add
incb
mov
mov
ds
jp
adc
jno
pusha
cmc
pop
pop
aam
popf
push
mov
add
inc
mov
mov
sub
andb
jno
or
jp
stc
hlt
push
push
sub
push
sahf
notl
xchg
int3
mov
leave
mov
mov
xchg
rol
daa
cmp
cs
mov
and
dec
or
adc
test
addps
or
out
xchg
lods
ficoms
sub
pop
in
test
sbb
ljmp
sub
jl
push
cwtl
mov
mov
pop
gs
pop
pop
and
movsb
imul
mov
fsubs
fucomi
xor
push
fldt
or
aaa
fwait
stc
outsb
pop
xchg
sbb
jg,pt
adc
shl
rcrb
add
cltd
or
or
add
ljmp
aam
lock
ret
gs
mov
repz
and
aas
adc
and
mov
sbb
mov
jb
sarl
sbb
sub
and
jle
push
jns
into
xchg
push
mov
mov
fwait
js
js
test
xlat
xor
jecxz
std
sub
in
out
xor
xchg
fs
test
aam
jmp
imul
add
xchg
xlat
pop
in
call
cmp
mov
jmp
insl
fsubs
mov
mov
insl
sarb
cmp
adc
in
sub
mov
mov
ret
out
in
pusha
test
and
sub
sti
xchg
insl
ja
int
jp
pop
mov
dec
xchg
cmpsl
test
in
loopne
push
adc
addr16
fisttpl
mov
xor
addb
xor
xor
mov
movl
pextrw
nop
xchg
adc
enter
scas
mov
jns
sbb
pop
mov
push
popa
add
rcr
sahf
xchg
add
cmpsl
repz
add
xor
sbb
mov
in
enter
call
femms
ds
or
and
xor
and
add
loop
cltd
xchg
cmp
push
mov
dec
sub
and
addb
or
xchg
push
repnz
cli
cltd
push
jg
cmp
push
sbb
jl
ret
push
add
xchg
dec
adc
aaa
test
mov
xchg
in
pop
fstl
sbb
pop
iret
cmpl
jb
push
jae
in
sub
jbe
pop
stc
enter
icebp
mov
in
ss
imul
xchg
xchg
fisttpl
adc
out
adc
mov
adc
ss
mov
insb
test
int
lcall
imul
addr16
scas
pop
icebp
dec
lds
add
test
mov
inc
mov
and
shl
loope
fistps
sahf
sub
fwait
cmpsl
pusha
xchg
jecxz
dec
dec
mov
aam
add
shrb
pop
testl
stc
rorl
sbbl
dec
pop
mov
xor
sbb
adc
sar
loopne
fstl
pop
loopnew
or
inc
not
sub
lea
adc
mull
dec
xor
adc
ja
andb
add
xchg
ja
cltd
mov
mov
loop
jle
cmp
sbb
inc
xchg
push
or
dec
mov
fldenv
cli
movsl
dec
adc
ja
roll
adc
or
dec
gs
push
in
cmpsl
or
lea
ret
test
shlb
subb
mov
xor
aad
dec
mov
adc
mov
repz
lods
xorl
push
add
pop
movsb
pop
addr16
movsl
test
xchg
sub
sbb
adc
pop
jns
dec
sbb
jbe
fisubrl
pop
gs
dec
xor
inc
adcl
shlb
in
popa
test
xchg
sbbb
clc
xchg
call
pop
in
adc
add
mov
cmpsl
push
and
xorb
sbb
xor
js
mov
arpl
pop
sbb
jle
movsl
lret
or
roll
push
inc
sub
mov
pop
lahf
stos
ror
xchg
jno
stc
add
mov
xor
lret
inc
loop
or
fdiv
or
popf
push
mov
push
jl
and
fdiv
sbb
rolb
jle
lods
nop
sub
ret
cld
stos
jl
mov
aad
mov
pop
cmpsb
add
test
cmpl
fs
sbb
sub
call
int3
dec
sub
bound
loop
outsb
and
mov
xor
imul
inc
aaa
cmc
pop
repz
adc
jecxz
pop
inc
test
das
push
mov
pop
test
dec
daa
jnp
and
pop
jge
or
outsl
arpl
xchg
xchg
out
into
jle
adc
fwait
rcl
jns
push
jno
ret
and
cmp
stos
xchg
fimuls
adc
mov
iret
xor
fdivrs
add
jmp
fsubrl
jp
pop
inc
fmuls
cmp
or
or
and
or
cmp
add
push
inc
adc
pop
pop
pop
dec
mov
into
mov
into
imul
int
or
into
lret
orb
lock
clc
ficoms
aaa
mov
push
cmp
inc
jb
into
xchg
add
inc
xor
clc
adc
stc
xchg
aam
dec
shlb
mov
jo
leave
imul
push
ud1
and
out
in
or
jae
stc
in
sbb
loope
dec
adc
xchg
adc
pop
stc
mov
sub
push
pop
xchg
addr16
mov
test
jb
dec
adc
pop
ljmp
sub
push
movsl
and
jle
jae
inc
xchg
or
adc
sbb
sti
xchg
fidivrs
ret
mov
mov
scas
jae,pt
add
scas
push
and
adc
sbb
test
jg
jae
and
cmp
push
aaa
xchg
inc
cmp
pop
cmp
dec
in
lahf
cmp
lret
mov
jl
adc
jb
mov
adc
mov
cwtl
sbb
mov
fld
lods
mov
xchg
mov
mov
test
jecxz
sbb
in
ds
in
xchg
iret
sbb
dec
add
xchg
lock
sub
push
test
lret
fstpt
xchg
mov
push
and
mov
push
cmp
sub
cmp
out
jnp
out
xchg
into
sub
repnz
jb
mov
add
inc
mov
xor
test
jae
ret
fistpll
fs
stc
fnsave
sbb
inc
push
push
add
push
sbb
call
inc
je
mov
cmp
jo
je
mov
mov
adcb
lds
sub
sbb
jg
xchg
int3
push
out
adc
loopne
cmpsb
or
out
and
add
xor
fisttpll
pop
clc
out
call
jae
stos
mov
cmpsb
icebp
insb
mov
bound
inc
int
movsb
inc
sbb
jno
cmp
adc
lods
pushl
scas
clc
es
push
arpl
rolb
mov
jle
mov
add
enter
stos
jo
inc
inc
ljmp
cmp
lret
xor
outsl
insb
in
mov
sub
scas
mov
mov
fmull
dec
xchg
shr
popl
mov
pop
imul
jp
pop
mov
jns
lret
loope
jmp
testl
pop
push
jmp
je
outsl
sub
xchg
mov
pop
push
loopne
and
pop
repnz
or
fdivr
outsb
jle
push
enter
icebp
xor
pop
mov
push
stc
mov
mov
mov
push
mov
or
rorb
push
rcl
ss
imull
pop
pop
dec
and
adc
sar
addr16
das
dec
roll
cmpl
mov
lcall
dec
sbb
dec
sub
mov
mov
lock
inc
fs
push
fcomps
adc
and
mov
mov
out
shr
cli
rep
sar
fisubrl
mov
xor
cmp
out
into
aad
sbb
jecxz
and
leave
mov
mov
fcmovb
adc
fmull
xor
pop
mov
pop
sbb
mov
dec
jno
dec
mov
ret
jo
sub
les
inc
sbb
push
dec
aaa
shrb
out
nop
in
dec
insb
and
out
pop
mov
das
mov
push
in
jecxz
push
es
js
ljmp
bts
lss
insb
cmp
hlt
lock
stos
es
leave
jl
inc
fnstsw
js
stos
imul
insl
fcomps
push
cmp
mov
xchg
push
push
nop
xchg
mov
lret
ret
jne
inc
pop
push
push
jl
lds
fsubl
mov
and
ret
xchg
jne
ljmp
xchg
clc
pop
loope
mov
or
fists
push
dec
lock
sub
push
mov
repz
mov
mov
int
aaa
ss
or
jle
lods
shlb
mov
rcll
imulb
pop
and
dec
mov
cltd
sub
lock
ret
pop
xor
call
add
cwtl
inc
add
arpl
leave
inc
scas
mov
aaa
mov
ja
add
pop
ja
pop
sti
sub
jae
jmp
sti
movsl
mov
add
pop
imul
or
push
adc
push
mov
cli
add
repz
fsub
insb
and
test
or
call
insl
push
dec
outsb
xor
jae
out
push
xor
add
xchg
push
out
fdivrs
jecxz
cmp
adc
dec
enter
add
inc
rcl
mov
mov
sub
inc
mov
lret
popf
addr16
jns
addb
inc
lds
mov
sub
fisubs
mov
rcrl
or
xchg
dec
xchg
cwtl
jnp
orb
outsb
push
and
iret
leave
push
adc
pop
insl
ltr
stc
shl
xchg
pop
lea
and
stc
mov
push
xchg
lret
pop
push
sub
nop
adc
sbb
stos
sarl
sahf
dec
xchg
ds
pop
xor
mov
jecxz
xor
jns
and
jmp
adc
int
xlat
inc
lret
inc
xchg
mov
jne
inc
sbb
and
movups
dec
enter
sub
insl
jb
and
out
imul
scas
cli
lcall
mov
mov
out
shll
dec
jmp
xchg
dec
inc
push
out
sbb
mov
mov
push
je
daa
bound
mov
xchg
xchg
js
outsl
arpl
lock
inc
cmp
fmuls
mov
push
adcl
cli
leave
cld
std
icebp
add
or
ret
mov
popa
into
cmp
xor
fisubl
or
pop
mov
and
xor
pop
adc
jecxz
daa
sbb
adcb
pop
mov
out
mov
jo
das
mov
fisttpl
mov
pop
jge
mov
outsb
nop
stos
sahf
jg
sarb
loope
sbb
sbb
imul
repz
cmpsb
pop
jecxz
jmp
cmp
cli
xchg
outsb
push
les
lods
in
add
aad
movsl
dec
mov
adc
fisttps
lds
xchg
and
sbb
mov
mov
push
cmpsl
xchg
ljmp
dec
and
pand
into
jg
cmp
or
cmp
ds
faddl
mov
sub
cmp
xchg
jg
xor
ja
push
mov
fists
xchg
loopne
pusha
add
out
mov
cli
xchg
insl
inc
jae
or
mov
cmpsl
cmp
mov
add
rorl
adc
sub
lahf
dec
test
xor
scas
and
les
lahf
je
call
jae
lock
mov
and
fptan
jae
arpl
lock
or
xlat
cwtd
fcmovnbe
shll
jmp
or
mov
dec
cmp
cld
xor
orps
dec
mov
pusha
or
int
out
jns
or
bound
mov
sbb
aad
mov
xchg
sbb
nop
and
sbb
iret
ret
gs
or
and
adc
loop
push
fwait
aam
cmp
into
int3
add
cmp
xchg
pop
xchg
cmp
or
xor
lds
int3
stos
loopne
mov
bound
in
add
in
adc
aad
mov
or
pushf
xlat
and
out
cli
js
outsl
jbe
adc
ljmp
pop
sti
cmp
js
mov
inc
xchg
daa
ret
and
imul
js
sahf
cmp
mov
fisttpll
aam
lods
arpl
xchg
jnp
mov
pop
inc
fs
push
cmc
cli
xlat
dec
push
dec
testb
out
int
lret
push
jo
cmp
in
adc
mov
fs
in
fsubrs
xor
sbbb
imul
dec
je
int3
inc
mov
push
pop
sbbl
xchg
push
push
sub
daa
lods
push
dec
cltd
mov
test
lret
mov
xor
jg
fstpl
mov
and
inc
nop
subl
add
nop
aaa
dec
aad
fwait
jo
outsb
scas
aas
js
mov
mov
add
fistpll
mov
cmpsb
or
testb
pop
stos
sbb
fstps
std
sbb
out
push
jb
call
mov
mov
shrl
ja
jmp
daa
and
insb
out
ljmp
outsl
cmpl
lahf
in
cmp
iret
dec
imul
cmp
pop
pop
out
outsl
inc
push
loop
shll
cmp
jb
in
mov
ja
push
push
pop
inc
iret
dec
jge,pn
mov
cmp
lds
inc
add
sub
dec
fcoms
ret
cmp
sarb
mov
subb
lret
cld
test
mov
push
data16
cmp
mov
mov
mov
cwtl
mov
aaa
cmp
data16
cld
cli
xor
jp
xchg
xor
mov
daa
scas
push
fnstsw
or
and
sub
or
cli
shlb
and
inc
iret
mov
daa
mov
sub
mov
xchg
pop
pop
xchg
sub
std
mov
mov
int3
lret
push
mov
repnz
jae
push
and
xor
cmpsb
js
clc
lret
out
push
fnstsw
fimuls
dec
shlb
out
fdivrl
mov
je
leave
pop
cmp
cmp
xorl
es
data16
movsb
shll
mov
cmp
pop
jmp
add
std
dec
cmp
push
shrb
cltd
pop
adc
mov
jb
iret
mov
xor
shlb
in
inc
daa
pushf
aas
pop
repz
push
jg
push
stos
mov
pop
sub
repz
mov
movsb
mov
lods
pop
and
loopne
inc
inc
or
xchg
jle
xchg
rcrl
and
in
out
mov
icebp
rorl
sbb
mov
push
xlat
mov
inc
add
dec
push
inc
jae
int
sub
push
into
int3
add
dec
shlb
fcoms
push
or
lods
and
lds
dec
iret
cmpsb
mov
mov
loope
adcb
push
loope
sbb
cmp
push
sub
stc
sahf
cld
push
adc
dec
push
loopne
dec
cmp
jno
stos
xlat
add
arpl
fldcw
int
gs
lea
sub
ja
ret
xor
xchg
inc
icebp
insb
add
daa
sub
pop
add
sti
loop
enter
push
jecxz
arpl
cmp
cmp
data16
test
ja
nop
mov
aam
pop
xchg
push
lret
in
pop
inc
and
lock
int3
dec
dec
orl
js
sarb
stc
ljmp
add
mov
sbb
cmp
dec
and
push
std
mov
xor
push
and
inc
orb
gs
ret
cmpsb
std
sbb
filds
inc
pop
ds
xchg
movsb
jge
mov
pusha
dec
std
mov
pop
lock
or
mul
jge
popa
adc
jb
cli
outsb
inc
xchg
xchg
lret
pop
leave
jecxz
adc
std
fcomps
jns
mov
cmp
out
mov
pop
sub
lcall
je
add
lods
movsb
adc
pop
js
push
out
add
jmp
cmp
or
cmp
mov
or
mov
mov
pop
push
in
rcrb
jg
lock
mov
mov
xor
shrb
xor
mov
push
jecxz
xor
insb
add
sub
mov
add
enter
mov
push
and
outsl
jle
inc
mov
add
xlat
cmp
pop
push
jle
aaa
add
jae
std
push
shrl
adc
frstor
rorl
push
ss
jmp
or
inc
xor
inc
mov
inc
stos
push
enter
je
cltd
lret
pushf
icebp
mov
pop
sti
lods
pop
push
push
add
daa
jno
lret
scas
in
sub
cmc
shrl
aad
popa
stos
jb
sbb
and
mov
enter
jmp
cmp
shrb
xlat
push
and
push
insl
push
cmpsb
push
dec
loop
test
or
pop
adc
stc
xchg
sub
in
cmpsl
shl
orb
and
pop
inc
xor
fstl
lods
ret
mul
loope
sbb
decl
and
push
and
sahf
mov
int
xor
dec
icebp
fildll
fbld
hlt
incb
cmp
daa
cmpsb
sbb
insb
das
frstor
push
inc
ljmp
xchg
pusha
add
mov
mov
lods
cmp
mov
orb
sub
fsts
inc
loopne
sahf
mov
aas
mov
pop
pop
xlat
dec
gs
sbb
out
in
iret
enter
shrb
dec
enter
movsl
xchg
scas
iret
out
sbb
repnz
mov
lods
and
fldlg2
daa
loop
push
test
push
leave
leave
das
aaa
adc
add
jg
rcll
inc
insb
dec
cmc
scas
mov
aam
cmp
push
cmp
xchg
hlt
in
mov
and
test
loop
pop
movsb
lret
incb
inc
cld
xorl
sbb
and
ret
adc
addr16
xchg
pop
pop
cs
cmpl
int3
xlat
push
data16
mov
and
add
dec
push
mov
test
inc
insl
cmp
sahf
or
fst
push
pop
ja
mov
in
or
xor
nop
gs
sbb
call
xchg
test
mov
ds
stos
push
lret
clc
inc
mov
aaa
cmp
pop
add
std
data16
mov
in
sub
mov
int
and
sarl
in
cmpsb
xchg
adc
cmp
push
sub
jle
xor
pop
lds
mov
and
add
ds
shlb
fisubrs
lahf
mov
adc
sti
std
in
inc
lret
int
mov
loopne
mov
mov
cmp
mov
mov
loopne
enter
dec
cmp
xchg
repnz
movsl
sub
pop
push
cmp
insl
lret
or
and
xor
xor
lock
insb
dec
into
cs
std
xor
xchg
int3
sub
scas
imul
popf
out
inc
roll
call
xor
rcrl
sbb
mov
add
pop
lcall
sub
mov
das
mov
sub
stos
push
out
jmp
mov
jnp
adc
fwait
lret
out
daa
js
dec
xchg
pop
mov
adc
loop
dec
mov
fiadds
mov
cli
call
pop
sbb
leave
xchg
cmpl
pop
enter
dec
inc
lods
ficoms
jb
jmp
and
lods
bound
aas
push
jbe
aad
push
jle
sbb
outsl
cmpsb
mov
jns
or
dec
iret
and
push
adc
inc
jns
jmp
mov
jnp
movsl
add
adc
cld
mov
jp
or
fwait
cmc
pop
dec
iret
jl
loop
add
out
cmp
push
mov
push
mov
mov
inc
jbe
cmp
pop
scas
ret
xor
adcl
rclb
inc
shlb
inc
or
rcll
pop
jno
add
mov
imul
sarb
popf
out
stos
data16
test
add
ss
jecxz
aad
xchg
inc
fisubl
test
jl
mov
aas
ja
and
mov
fbstp
fisttpl
xchg
sahf
loop
out
loop
stc
push
pop
mov
inc
sub
dec
xchg
cs
test
loop
pop
je
push
add
mov
sbb
mov
dec
fwait
jb
repnz
or
jnp
lahf
rol
sbbb
negb
add
sahf
in
add
jge
jmp
insl
ret
fcompl
sbb
sbb
inc
cmpsl
mov
add
rorb
push
push
sub
neg
or
insl
ja
stos
add
xor
mov
and
pop
xchg
icebp
jne
jmp
or
stos
inc
cmpsl
inc
test
fwait
stos
inc
mov
mov
inc
mov
outsb
and
fsubrl
icebp
sti
fs
and
xchg
mov
mov
aaa
pop
gs
sahf
loop
addb
mov
mov
hlt
andb
jg
stos
sbb
xchg
jge
add
daa
mov
ljmp
dec
ds
fdivrl
and
shlb
shrl
outsb
loope
aad
in
pop
lods
add
fwait
lock
push
add
fdivr
int
movsl
sub
xlat
pop
and
mov
dec
mov
out
push
incl
xor
mov
sub
nop
lods
add
push
mov
sub
lret
mov
push
pop
xchg
sub
and
sbb
pop
sbb
mov
fidivl
push
jg
in
rcl
sub
je
in
xorl
in
into
jmp
add
jns
js
cltd
xchg
rcrb
data16
outsl
pop
jmp
mov
adc
add
addr16
cmpsl
test
out
xor
add
aaa
push
aad
int
push
push
out
pop
adc
cli
shr
mov
repnz
fldcw
mov
and
cmp
out
sub
enter
push
rcl
lods
xor
xor
xlat
decb
inc
lea
mov
mov
rcr
mov
jns
icebp
out
jg
mov
push
push
sahf
cs
xor
in
in
sbb
lcall
xor
popf
outsl
cmp
nop
bnd
xchg
xor
pop
sti
jmp
or
add
adc
insl
mov
inc
adc
decb
cli
ja
or
lahf
iret
mov
aaa
or
xchg
xor
frstpm(287
mov
xlat
mov
jns,pt
dec
data16
mov
ljmp
addl
rol
cltd
stc
push
xchg
inc
or
sarl
jno
push
xor
jp
jle
aad
ficomps
addb
mov
stos
or
cltd
ja
in
pop
mov
sub
test
mov
cmp
fnstcw
fwait
decl
jnp
shrl
imul
mov
add
pop
inc
repz
or
das
pusha
mov
in
fmuls
insb
mov
fsubs
inc
mov
insl
mov
cmp
cmc
and
dec
jp
movsb
lods
sti
sub
inc
mov
mov
outsl
jecxz
push
aam
enter
adc
int
push
cltd
and
lods
xlat
mov
fnstsw
shl
push
out
cli
inc
pop
mov
dec
mov
adc
add
inc
fnsave
jl
sub
imul
test
lret
das
jnp
adc
xor
mov
sarl
fdivs
pop
mov
dec
adc
int
stos
popf
test
fstpl
inc
or
jb
cli
mov
test
and
push
cwtl
call
jg
lcall
enter
aas
in
lock
lods
mov
xchg
int3
stc
stos
mov
add
movsl
sub
movsl
loope
push
leave
addr16
pop
mov
mov
stc
dec
movsb
insb
dec
cltd
in
jle
rorl
test
sahf
push
lret
lods
call
xor
pop
or
mov
into
pop
dec
sub
enter
shrl
daa
push
out
cmp
inc
dec
lds
push
daa
adcl
daa
jo
lods
ficoms
dec
pop
mov
int3
fwait
test
sahf
test
cmp
gs
jns
sub
adc
mov
or
jg
test
imul
dec
push
mov
mov
inc
lret
cmc
dec
cmpsb
push
inc
jecxz
adc
jp
push
enter
lds
jns
cmp
sarl
inc
mov
cmp
inc
pop
push
dec
or
movsl
fs
roll
sarl
sub
pop
xchg
mov
and
leave
push
or
jns
cmp
scas
push
cmp
xor
cli
test
dec
mov
addr16
scas
ficoms
es
lcall
cmp
in
imul
xlat
and
lods
outsl
scas
js
mull
cwtl
xor
or
xlat
fldt
mov
add
mov
ja
add
sarb
inc
les
or
jne
fnsave
push
sbb
clc
mul
mov
pop
insb
add
lea
inc
inc
int3
aaa
and
out
fildll
dec
notb
rorl
jg
test
xor
add
push
out
adc
add
sub
mov
or
mov
mov
inc
aad
add
lret
and
aaa
xchg
add
mov
mov
inc
lcall
jb
sub
out
fwait
out
sbb
out
cmp
or
test
mov
lea
mov
gs
outsl
loopne
fiadds
dec
mov
xor
lock
xchg
shrl
arpl
sbb
jnp
cmp
movl
cltd
bound
lea
insb
sub
or
adc
fnstcw
push
jbe
pop
cmc
inc
out
push
mov
mov
test
inc
jp
xor
push
or
aas
in
cmp
mov
lods
and
xchg
aaa
leave
sbb
stos
cmpl
ds
xchg
xchg
dec
insb
mov
and
add
shll
lahf
push
and
push
hlt
or
std
into
jge
adc
cmp
movsb
inc
fbstp
mov
xor
hlt
mov
scas
mov
inc
xchg
jmp
jmp
sub
and
push
out
scas
ljmp
sub
adc
push
pusha
icebp
dec
sti
xchg
arpl
add
jle
repnz
lcall
popf
mov
mov
inc
hlt
scas
or
out
cmp
jns
dec
lods
sbb
cmp
outsl
xchg
dec
mov
xchg
adcl
pop
notl
mov
xlat
aaa
cmp
mov
cmp
scas
rorl
rorb
cs
cwtl
push
insl
lods
dec
cltd
shll
mov
xor
arpl
jbe
pusha
es
dec
pop
jb
nop
xchg
sub
inc
repz
fcoms
add
mov
pop
push
mov
xchg
mov
jbe
xchg
and
add
inc
push
inc
xchg
fcompl
icebp
lods
pop
insb
dec
xor
and
adcl
ds
bound
mov
bound
aas
pop
add
fcomps
ss
in
std
mov
ljmp
lods
in
pop
xchg
es
pop
xor
enter
jmp
repz
loope
lcall
fisttps
and
mov
js
or
mov
adc
mov
jb
cmp
andb
add
xor
mov
push
cmc
xor
sbb
in
jecxz
insb
mov
ss
dec
jmp
push
cwtl
mov
addr16
aas
push
mov
lods
and
test
add
and
idivl
xor
pop
data16
sti
adc
xor
fwait
mov
xchg
pop
pop
scas
mov
testb
add
inc
stos
test
pop
jmp
mov
push
hlt
push
sub
mov
sub
arpl
jbe
xor
mov
rcl
push
sub
mov
sbb
fnstsw
popf
mov
bound
insb
repz
pusha
and
fisubs
jnp
mov
popf
test
aas
popf
fcmovnbe
sti
mov
shlb
adc
mov
outsb
int
cli
sbbl
push
inc
cmp
popf
mov
fsubrs
stos
in
enter
mov
pop
fmull
sub
mov
rcl
cmpsb
dec
sub
fwait
mov
and
push
pop
add
adc
mov
jecxz
xor
shll
adc
mov
outsb
xor
inc
and
loop
in
loopne
inc
and
pop
jg
sub
clc
ds
je
sar
stos
ret
and
add
lds
push
dec
or
inc
and
stos
or
jnp
xor
in
jns
clc
addl
mov
mov
xlat
push
popl
mov
xchg
adc
pop
jp
out
les
dec
jmp
packsswb
bound
ret
mov
outsb
add
mov
cwtl
push
jo
mov
outsl
sub
lcall
js
jne
pop
push
shrl
mov
int3
xor
subb
hlt
adc
aad
jp
cwtl
cmp
dec
xor
call
cmp
xchg
and
adc
in
rcr
pushf
push
xchg
roll
sub
arpl
cs
dec
pop
inc
add
mov
xchg
pop
mov
mov
cmp
cs
mov
or
push
adc
adc
xchg
hlt
nop
and
or
add
jnp
lock
jecxz
add
fcmovnu
lahf
push
ljmp
mov
add
or
int
adc
insl
push
cmp
adc
xchg
in
mov
adc
dec
sbb
pusha
mov
cmp
push
push
mov
loope
mov
insb
shl
jno
xchg
inc
mov
bnd
pop
inc
sar
das
into
jo,pt
inc
and
out
inc
ljmp
in
cld
and
scas
ret
dec
ds
jbe
sub
ficomps
xlat
icebp
jne
adc
push
ret
pop
xor
addr16
notl
out
jo
insl
das
pop
lea
fstpt
cs
xor
out
pop
enter
mov
nop
out
inc
cmpsb
div
stos
fwait
int3
inc
add
push
sbb
outsb
cmpl
pop
loope
ljmp
inc
in
pop
mov
inc
clc
mov
ja
sbb
sub
jns
jne
ss
outsl
test
roll
and
fdivrp
jnp
push
jne
je
mov
lods
jo
jae
adc
fdivs
lock
sahf
fldt
mov
push
and
out
ljmp
sbb
add
test
sub
sub
push
pop
or
loopne
push
adc
stos
jb
or
mov
clc
movsl
mov
lahf
cld
scas
and
fsubs
and
jmp
ds
hlt
add
iret
cwtl
iret
adc
pop
iret
ja
das
push
mov
and
and
push
jmp
sub
jo
cwtl
call
sub
lret
ret
sub
push
mov
scas
xchg
xchg
lock
ljmp
sbb
icebp
inc
lret
mov
push
push
stc
adc
pop
sub
fsubrs
push
aaa
jge
lods
repz
sbb
xchg
lds
in
adc
iret
adc
or
xchg
fnstsw
shlb
mov
loope
mov
push
test
lret
cld
add
dec
sub
or
xchg
test
inc
pop
add
push
call
lds
sbb
fldl
addr16
loop
xor
stos
insl
cmp
pushf
idivb
cmpsb
pop
mov
hlt
mov
inc
adc
cmp
fidivs
cmp
int
mov
xor
rol
push
mov
fcomps
jns
pushf
imul
arpl
nop
fidivrs
cmp
in
ss
jno
dec
inc
jecxz
xchg
add
mov
jmp
sub
push
jle
mov
sub
and
out
jg
jo
add
insl
stos
imul
popf
push
inc
jb
dec
xchg
push
lret
add
popa
arpl
idiv
lea
adc
mov
inc
sahf
lods
cmp
fildl
fucomi
std
ficoml
test
inc
xchg
jmp
dec
jle
mov
mov
scas
or
inc
dec
je
push
xchg
jno
push
or
outsb
sbbl
cltd
pusha
adc
ljmp
testb
ror
push
mov
mov
add
jecxz
aaa
adc
push
outsl
mov
xchg
arpl
adc
xchg
pop
into
and
das
and
cmp
iret
jp
ss
into
imul
jae
inc
ljmp
push
pop
mov
push
sub
pop
bound
mov
xorl
std
inc
imul
push
imul
mov
adcl
xor
cmp
cmp
and
pop
adc
std
andb
pop
and
pushf
dec
xor
and
jb
int
jg
outsl
movsl
dec
mov
pop
adc
mov
or
rcr
loop
into
addl
sahf
or
fs
outsb
cmp
and
cltd
add
or
stos
jl
pusha
cmp
xor
and
ficoms
aam
mov
loopne
nop
fdivrp
shrl
mov
stos
push
idivl
xor
add
fsubl
mov
pusha
mov
repz
cmc
inc
dec
pop
jae
or
das
add
add
cltd
gs
push
in
jns
icebp
ss
insl
or
inc
push
sub
andl
out
in
or
push
das
inc
stos
adc
rol
dec
stos
mov
fisubs
test
lock
dec
dec
dec
mov
aaa
add
repz
shll
imul
or
jp
testb
inc
jl
daa
xchg
out
xchg
sbb
fiadds
jbe
inc
dec
not
or
xor
insb
jno
hlt
nop
cmp
fisttpl
xorl
fdivrs
or
test
sub
aad
das
cs
ss
or
cmpsb
inc
inc
add
pop
or
jns
test
mov
mov
js
das
xor
pop
imul
push
jnp
and
mov
mov
movsl
or
aas
jge
cmp
push
xchg
adc
add
jns
in
adc
das
inc
adc
scas
inc
and
xchg
mov
sbb
ja
inc
mov
enter
gs
or
pop
and
xlat
cmp
orl
cltd
call
jp
cli
push
cmc
or
push
push
or
movsl
mov
scas
repz
push
icebp
add
and
lea
adc
inc
cmp
aas
lret
xor
and
aaa
jge
fs
adc
das
push
xchg
mov
and
gs
xchg
mov
xchg
add
out
test
repz
adc
push
pop
mov
xchg
fwait
add
sub
adc
lcall
mov
outsl
jb
leave
jae
rorb
leave
aad
mov
shll
sbb
add
xlat
xchg
or
out
test
pushf
and
adc
in
mov
jno
icebp
subb
adc
ds
je
dec
rolb
int
stc
leave
sub
pusha
dec
ljmp
xor
push
mov
sbb
aaa
push
aam
mov
mov
aam
lret
ficomps
xchg
mov
and
xor
shr
push
xchg
jno
pushf
xor
out
int
add
and
adc
push
and
sbb
inc
stos
xchg
leave
inc
call
ljmp
mov
lods
jne
pop
pop
push
mov
in
mov
enter
xchg
inc
lods
xchg
shrl
inc
cmp
dec
jle
lods
mov
lods
stos
pop
jg
faddl
inc
mov
mov
adcl
jae
out
in
adc
and
daa
shl
cmpsl
pop
inc
testb
inc
mov
adc
jle
xchg
test
cmc
mov
push
sub
add
fwait
lret
dec
push
fimuls
adc
cmp
insl
cmp
jg
push
je
mov
fbld
adc
adc
loopne
out
lcall
out
dec
pop
mov
push
insl
or
mov
add
in
dec
inc
push
mov
xchg
dec
sub
sub
out
push
stc
mov
cmp
inc
test
iret
enter
push
add
cmc
pop
aad
iret
aaa
and
push
and
faddl
neg
mov
dec
and
loope
dec
cltd
mov
add
mov
xor
out
push
xchg
inc
pushl
jb
bound
inc
or
sub
arpl
jecxz
add
pop
sub
jo
lea
shll
add
lahf
mov
cs
jno
cmp
mov
mov
and
loopne
negb
fld
insb
lock
mov
test
arpl
mov
dec
sub
int
jnp
dec
sub
sbb
xchg
dec
or
jmp
mov
movl
sub
inc
roll
dec
and
sbb
mov
xor
ds
lods
arpl
push
jae
pop
movsb
add
cld
adc
pop
xchg
xor
push
scas
in
and
or
cmp
fidivrl
mov
xchg
mov
xchg
shlb
or
leave
outsl
dec
hlt
jae
cli
sub
cltd
loopne
ret
push
test
lret
jnp
xchg
dec
add
or
movb
shl
mov
dec
sbb
jb
flds
and
lcall
das
inc
out
jno
push
sbb
inc
in
sbb
in
xchg
enter
repnz
mov
and
sub
test
mov
ljmp
xor
sti
pop
push
mov
mov
aas
test
sub
pusha
in
ja
xor
cmpsl
fyl2xp1
mov
fcmovb
push
mov
lods
and
jmp
in
enter
add
data16
push
ljmp
push
sub
cs
rclb
sbb
int3
push
mov
cmpsl
push
cmp
or
repz
and
or
ret
mov
or
sbb
xor
test
rcr
pop
loopne
mov
sahf
cmpsl
lods
daa
adc
mov
inc
push
cmovp
shl
andl
mov
lret
pop
lock
stos
call
lret
inc
add
push
fcoml
ret
pop
xor
ja
dec
sub
push
mov
jne
add
xorl
movsl
and
pop
faddl
sub
adcb
shlb
add
xchg
pop
dec
ret
lock
and
dec
negb
mulb
cld
cmp
and
mov
xor
pop
cltd
and
xor
dec
mov
fadds
jnp,pt
arpl
fprem1
dec
movsl
inc
xchg
mov
jl
negb
inc
push
xchg
int3
push
jo
add
sub
sub
cltd
imul
pop
sahf
or
fisttpll
adc
mov
push
push
sar
jns
dec
movsl
dec
in
mov
inc
pop
or
xlat
sub
mov
mov
jmp
pushf
movb
test
mov
or
inc
mov
sub
imul
jb
push
sub
pop
inc
into
sub
mov
and
adc
mov
pop
and
out
mov
push
fimull
jg
inc
xchg
mov
or
cmp
and
lods
pop
push
test
sbb
stc
les
or
push
adc
ja
jecxz
cmp
insb
or
xchg
movsb
daa
jno
mov
sub
xchg
fisttps
jge
xchg
pop
inc
ja
rcll
mov
stos
cltd
xchg
fnsave
sbb
jmp
sbb
pop
les
iret
ja
mov
pop
jle
ficoml
mov
fisttpl
adc
pushf
lea
ds
test
flds
out
xor
scas
mov
adc
cmpsl
das
pmaxub
enter
xor
add
or
sbb
mov
rcrl
sub
flds
push
incl
push
push
in
xor
pop
sbb
or
test
aam
addl
jne
imul
in
jp
xchg
pushf
push
test
or
xor
aaa
cmp
lret
in
pop
jne
xchg
inc
lahf
and
mov
mov
push
jmp
push
in
add
es
mov
lods
pop
imul
cmp
mov
mov
xor
xor
cmp
outsb
jne
outsl
cld
ficoms
xchg
stos
xchg
mov
insb
or
pop
daa
sbb
shl
inc
in
push
add
or
mov
jo
sahf
cli
sahf
lcall
sbb
xchg
imul
mov
push
ljmp
dec
cmp
mov
push
mov
bound
mov
or
push
loop
xlat
and
negl
arpl
inc
jae
mov
inc
aaa
daa
jns
xor
mov
cmc
push
out
xchg
mov
fistl
lods
out
std
xor
int3
into
loopne
movsb
ds
inc
inc
outsl
arpl
fldt
mov
or
gs
decl
shrl
fimuls
hlt
cmp
cmp
cmp
sbb
fnclex
aad
hlt
xchg
jmp
arpl
movsb
jge
xor
add
push
mov
mov
jecxz
pop
std
imul
je
shrl
cmpsl
jecxz
sub
or
pop
dec
comiss
jno
mov
out
push
fildll
mov
jge
mov
dec
pop
xorb
xchg
jbe,pt
cmpsb
pop
fiadds
push
cmpsl
cwtl
mov
in
jp
sbb
out
push
in
out
xor
cli
iret
rcl
fistps
pop
dec
negb
push
mov
imul
mov
pop
es
jge
repnz
mov
nop
dec
inc
stc
rorl
mov
rol
adc
adc
xchg
lahf
fmuls
ja
jp
mov
xchg
mov
lahf
mov
movsb
icebp
push
dec
pop
lea
insl
add
jns
cltd
jnp
mov
push
shl
fs
dec
decl
ret
and
add
xchg
adc
push
stc
aam
clc
aad
ret
aam
push
ja
scas
or
cld
inc
xor
data16
xchg
je
aas
sub
insl
ljmp
test
test
bound
rcrl
dec
sub
outsl
pop
test
aad
in
cltd
ret
jno
lahf
sub
push
test
dec
push
testl
insl
mov
lods
dec
add
push
imul
xchg
shll
adc
mov
adc
inc
pop
push
imul
pop
pop
lods
mov
mov
mov
aaa
fbstp
out
and
mov
xorb
sub
into
out
adc
jno
mov
lods
stc
aad
jle
pop
rolb
fwait
adc
dec
inc
sbb
rclb
push
test
mov
dec
cld
movsl
sub
mov
stos
mov
mov
xlat
jmp
sbb
cmp
hlt
clc
out
cli
imul
jno
add
addl
scas
clc
outsl
outsb
mov
xlat
xchg
mov
in
add
add
shlb
and
fnsave
sbb
push
test
adc
adc
jo
pop
pop
mov
xchg
lods
pop
xor
fwait
sbb
mov
xor
sbb
leave
inc
sar
mov
add
test
or
adc
pushf
out
pop
push
popa
mov
dec
popf
sti
mov
out
cli
hlt
shlb
shrl
addb
cmp
jmp
xor
mov
jns
jo
lret
or
xor
pusha
aaa
jae
adc
mov
push
ficomps
test
addl
mov
jmp
cmpsb
xrelease
push
in
mov
mov
xor
in
imul
xchg
push
dec
dec
shrl
mov
aas
in
inc
cmp
push
fcoml
lea
sbb
mov
shlb
sub
or
sarl
fadds
test
imul
cmp
icebp
bnd
aas
xor
loop
lds
in
inc
dec
out
mov
mov
xchg
jno
mov
shlb
and
jge
add
sub
fnsave
lea
push
cmpb
jo
fadds
jp
cltd
push
addr16
add
sbb
out
lock
inc
sbb
cmp
lahf
enter
pop
jecxz
das
jmp
mov
jb
repnz
aaa
test
jo
xchg
inc
dec
andb
mov
push
push
rcl
adc
xor
in
lahf
sarl
loope
gs
xchg
mov
aam
shr
inc
jb
cwtl
mov
xlat
mov
jo
cmp
fadd
mov
mov
push
call
push
push
xchg
sbb
imul
adc
cld
ljmp
add
loope
jge
mov
fwait
cmpsb
adcl
sbb
cmc
loopne
clc
inc
pushl
popf
adc
cmp
lret
xchg
ds
mov
movsl
icebp
rcll
mov
lock
sbb
popa
int3
dec
ss
or
inc
mov
insl
xor
arpl
aaa
scas
cmpsl
cwtl
lahf
jg
insl
into
dec
pop
push
push
xchg
jnp
or
js
icebp
push
push
pop
add
xchg
in
shll
leave
add
mov
or
cltd
mov
inc
fsubrl
push
lcall
mov
xor
inc
das
jb
gs
lds
adcb
push
push
ds
mov
icebp
push
jns
lea
inc
icebp
fwait
mov
sahf
rorb
mov
addl
rcl
mov
sarb
xor
loop
bound
pop
jge
test
stc
mov
ret
cwtl
gs
out
mov
pop
sub
lods
or
jb
and
aas
add
inc
cs
add
ja
jecxz
js
pop
loop
jmp
cli
xchg
out
or
and
pusha
pop
js
inc
mov
out
repz
mov
mov
sti
add
pop
cmp
loope
mov
push
cmp
sarb
mov
mov
lret
pop
xchg
leave
imul
jno
loopne
aas
or
xchg
mov
popa
or
lock
outsb
sbb
popf
fisttps
clc
and
push
and
fdivrl
insl
les
wbinvd
xchg
sub
imul
xchg
mov
ljmp
pop
imull
add
adc
loope
clc
add
push
lock
adcl
mov
mov
sub
shll
out
add
mov
jne
mov
movb
dec
dec
scas
add
rorb
pop
bound
mov
inc
xchg
mov
cmpsl
sub
cmp
lahf
sbb
les
pop
pop
adc
and
adc
inc
data16
out
ficoms
mov
pop
jge
fisubs
xchg
jl
loop
nop
mov
mov
in
fists
pop
and
adc
repnz
dec
dec
orl
cmc
push
ret
xor
adc
sbb
pop
imul
int3
mov
stc
pusha
mov
rcr
fidivs
inc
lods
repz
pushf
jmp
pop
jg
dec
lea
or
lock
icebp
cmp
cmp
push
out
jmp
fsubrp
fbstp
inc
mov
mov
das
mov
and
mov
adc
inc
sub
xchg
daa
lea
or
push
in
cmpsb
dec
mov
data16
dec
sub
mov
add
jbe
push
mov
xor
pop
sub
aam
cld
imul
xor
test
xor
adc
and
int3
icebp
test
into
outsl
sub
fnsave
sarl
int
or
sbb
push
mov
push
ljmp
adc
xor
inc
int
jecxz
and
mov
cmpl
icebp
jne
lret
cmp
xlat
bnd
call
add
sar
add
stc
insb
xor
push
dec
cltd
jmp
mov
in
movsb
xchg
jbe
mov
mov
aaa
fisttpll
push
mov
pop
popf
enter
and
mov
push
sub
sub
dec
jne
mov
imul
or
jno
mov
or
bound
push
imul
mov
sub
adc
pop
in
mov
jp
int3
fs
jmp
enter
fs
mov
cmp
out
scas
stos
fs
dec
sahf
inc
pop
lds
out
or
jno
fists
or
mov
clc
arpl
dec
test
push
leave
sub
addl
inc
fidivrs
mov
mov
outsl
xor
stos
fdiv
out
test
mov
mov
sarb
jo
sub
dec
and
outsl
jl
fnstsw
aaa
mov
xchg
into
and
xchg
shrl
xor
arpl
lock
add
lret
xor
sub
stos
mov
fldt
jecxz
mov
cmp
cmc
ja
dec
int3
test
fsub
out
popf
or
in
enter
mov
fnstsw
jp
mov
js
dec
mov
sahf
adc
in
mov
jae
or
xchg
cs
fsts
push
push
stos
jae
mov
mov
sub
stc
insb
jnp
aaa
aam
fmuls
aam
repz
cmc
js
lret
test
fnsave
rcrb
out
in
sub
jbe
or
mov
inc
shrl
pop
data16
cld
jns
stos
outsb
lcall
lcall
ja
xchg
jmp
lods
jns
loope
or
add
mov
jmp
mov
inc
icebp
dec
into
mov
ret
movsl
inc
push
adc
mulb
or
adc
jbe
mov
mov
jae
ret
jnp
pop
lods
adc
mov
mov
xlat
push
cltd
pop
fstl
push
jl
fcomps
cli
adc
mov
cmc
xor
cltd
nop
scas
repz
stc
add
stos
stos
and
filds
jmp
jg
out
jl
subl
pop
pusha
out
fisubs
leave
sti
jnp
sbb
addr16
lcall
mov
shlb
mov
ljmp
xor
pusha
and
fwait
mov
aaa
cmp
rcrb
push
cmpsb
ror
inc
pushf
stos
daa
pop
cltd
mov
aad
jae
jb
shlb
jb
adc
jo
pop
loopne
push
or
xor
jmp
adc
outsb
xor
add
xchg
xchg
lods
inc
adc
stos
fisttpll
mov
lods
sbb
and
jne
xchg
xchg
xchg
xchg
repz
fisttps
xchg
mov
cmp
pushf
out
pop
push
push
insl
jno
mov
les
popf
fucom
loope
cmp
addl
bound
fnstenv
fmul
mov
add
stc
mov
push
adc
or
lods
in
xchg
stc
loope
inc
push
lahf
mov
outsb
cmp
xor
mov
and
outsb
jg
mov
in
imul
pop
adc
nop
push
lods
ss
jmp
xchg
test
mov
mov
mov
jo
mov
mov
std
pop
ss
mov
mov
sub
std
mov
cmp
adc
xchg
mov
jmp
ja
arpl
ljmp
push
movsl
cli
cmp
shll
pushl
jg
mov
mov
jmp
nop
push
mov
sbb
lret
xor
jecxz
xchg
lds
lret
mov
sbbl
sub
popf
imul
lock
and
stos
pop
sbb
mov
adc
aam
ljmp
jns
or
lahf
mov
repz
xchg
fstpt
cltd
fiaddl
pop
dec
mov
jp
xchg
and
stos
nop
stc
sub
loope
adc
mov
stc
mov
and
stos
aad
scas
stos
sub
mov
push
fildll
or
mov
pushf
fimull
xor
push
inc
pop
push
leavew
aad
jns
mov
push
jb
mov
jp
jo
inc
das
bound
mov
stos
mov
push
sbb
add
jp
add
lock
cmp
mov
mov
add
or
mov
fildll
inc
push
out
mov
mov
mov
adc
push
popl
insl
aad
inc
push
sub
andb
out
jecxz
sub
push
test
mov
shll
movb
xor
sbbl
lret
popf
test
cltd
push
ljmp
cld
inc
outsl
push
aad
dec
sub
pop
push
sbb
cmp
xor
sbb
arpl
mov
add
mov
ror
scas
fsub
or
adc
and
push
xchg
ljmp
mov
add
stc
add
jbe
cmpsb
push
mov
in
fildll
dec
xor
cmp
mov
jge
mov
addr16
xchg
mov
jmp
and
mov
ret
mov
ds
pop
push
pop
mov
out
subb
xchg
pusha
stos
out
imul
jp
sub
cs
das
popf
and
mov
mov
push
xchg
xchg
lock
mov
mov
repz
out
imul
movsb
and
nop
jbe
mov
adc
scas
unpcklps
sub
out
xor
dec
cmp
iret
and
add
mov
pop
jne
mov
jno
and
push
dec
or
pop
and
jge
fbstp
xchg
sbb
cld
les
mov
out
ret
cmp
das
in
hlt
add
push
cmp
dec
int
mov
jge
add
mov
mov
mov
cmp
mov
shrl
add
in
mov
rol
enter
xor
adc
inc
out
adc
add
xchg
fnstcw
dec
jne
jp
jp
push
adc
fwait
mov
dec
fsubl
stc
jl
mov
outsl
xor
xor
mov
aaa
lock
fcmovu
cs
sti
jmp
push
popf
and
adc
push
ja
mov
pop
xor
sahf
mov
or
ljmp
pop
repnz
jo
xlat
les
adcl
xchg
arpl
lock
dec
mov
in
mov
jmp
push
push
lods
dec
sub
mov
inc
mov
push
test
es
push
inc
cmp
mov
mov
cmp
negb
icebp
push
xchg
jle
inc
push
mov
loopne
out
ljmp
mov
leave
popa
adc
jp
das
and
adc
sbbl
gs
pop
outsl
dec
ret
incb
sbb
or
mov
into
sub
sbb
mov
sbb
sar
and
inc
aas
cmp
mov
sahf
push
dec
sbb
cmp
fisubrl
jp
dec
sbb
jp
fsubl
cltd
push
mov
mov
lds
push
push
sub
add
inc
sbb
loope
mov
sub
cwtl
flds
aas
test
lds
jne
add
ficomps
rclb
orb
stos
xchg
cmp
aad
repz
and
mul
stos
ret
popa
inc
and
sahf
stc
add
or
ja
mov
cmp
cli
lcall
fistps
sbb
idiv
in
call
jl
je
sub
mov
sahf
in
lods
sub
lds
cli
dec
pop
call
mov
in
push
push
push
inc
xor
push
sbb
and
jbe
xchg
jno
and
loopne
mov
jp
call
ljmp
xchg
add
jne
mov
xor
push
mov
or
or
andb
std
cmpsl
daa
mov
mov
dec
xorl
popl
cld
xor
inc
adc
sbb
scas
fadds
adc
shr
shll
idiv
js
mov
adc
or
pop
adc
xchg
dec
testb
and
pop
push
adc
mov
jp
lcall
cwtl
sahf
xchg
mov
and
test
fstpt
das
dec
pop
mov
mov
shl
push
sbb
insl
sbb
mov
pop
add
inc
mov
jge
mov
mov
pop
aad
hlt
adc
hlt
xchg
jecxz
out
mov
xor
sbb
lods
inc
loop
jp
xlat
out
leave
mov
sbb
ss
jge
cmp
mov
pop
loope
nop
filds
sbb
xchg
test
xor
jo
sub
xor
mov
push
filds
or
hlt
jo
stc
dec
xor
adc
loop
int3
pop
adc
xor
lds
loop
mov
mov
sar
mov
jle
push
fs
ljmp
inc
test
sti
add
nop
push
ds
fxam
jbe
xor
mov
jno
mov
pop
xor
push
xchg
hlt
sbb
dec
lock
int
push
inc
jge
movntps
enter
rolb
idiv
movsb
in
data16
dec
dec
mov
or
in
fadds
lds
leave
pop
sarb
icebp
sbb
mov
mov
enter
jecxz
mov
test
or
outsb
test
mov
test
daa
jge
stos
or
sub
push
inc
mov
iret
push
scas
hlt
and
shlb
nop
aas
insb
lods
scas
xor
mov
lcall
xor
jae
cmc
adc
pop
mov
xor
fiaddl
gs
out
sub
test
hlt
lret
test
sahf
cmp
add
mov
mov
les
mov
sti
int3
xor
xor
dec
inc
aad
jno
sbb
stos
flds
add
mov
or
pop
mov
lret
mov
cmp
pushl
int
pop
jg
mov
sbb
jl
push
loope
sbb
mov
scas
out
dec
lahf
and
lea
xor
xlat
or
cli
hlt
inc
lock
es
jns
aad
ret
mov
pushf
mov
and
std
mov
rcl
jnp
dec
and
mov
cmp
sub
fwait
testb
mov
gs
sub
into
push
call
mov
shlb
pop
lods
push
mov
and
clc
or
pushf
mov
rcrl
pop
pop
cmp
sub
sub
mov
pop
call
rcr
xchg
lcall
fdivrs
inc
aad
mov
mov
lods
mov
imul
push
arpl
inc
lret
and
cmpsl
insb
out
lods
pusha
push
xlat
xor
sbb
push
or
into
push
fs
pop
cli
jmp
mov
inc
test
sub
js
lcall
mov
xchg
mov
aaa
pop
push
test
xor
pop
lahf
cli
movsb
add
mov
and
xor
jecxz
pop
push
aaa
mov
add
icebp
in
inc
and
addb
sub
or
sti
cmp
dec
arpl
decl
scas
inc
mov
adc
insl
ljmp
push
push
push
xchg
add
xor
jbe
sbb
cmpsb
push
cli
repz
pusha
sub
adc
sub
or
popf
xlat
jnp
push
pop
sbb
xchg
cmc
pushl
sbb
aam
pop
arpl
into
xchg
jmp
or
fstpt
outsl
push
dec
fcompl
jno
and
jnp
adc
mov
addr16
push
ret
xlat
popl
push
xchg
push
inc
mov
lcall
pop
xor
push
repnz
rcll
cmp
lock
mov
into
push
imul
imulb
test
shll
fldl
icebp
mov
pop
dec
cwtl
inc
cmc
je
and
gs
repz
jo
flds
sbb
inc
ljmp
push
cmp
or
xchg
ss
hlt
push
lods
cltd
pushf
fs
pop
int3
mov
fs
into
xlat
ja
jbe
push
pop
data16
test
lcall
out
leave
mov
imul
lds
cmp
jle
push
cmp
xchg
lods
lret
shlb
mov
das
lcall
out
gs
lret
in
mov
jg
test
out
or
popa
call
popf
sbb
hlt
ret
dec
int3
cmc
ss
push
imul
mov
push
xchg
cltd
adc
or
inc
xchg
fimuls
imul
sub
dec
mov
int3
or
mov
pop
jb
aam
test
dec
ss
dec
bound
inc
aaa
sbb
daa
mov
push
xchg
pop
stos
pop
push
mov
sahf
mov
sub
arpl
in
push
imul
jecxz
cs
lods
std
pusha
in
pop
adc
xchg
fwait
ljmp
frstor
lea
in
pop
sbb
fs
adc
cmpsb
sub
ja
invlpg
out
std
fisubrl
add
mov
je
dec
xor
je
fildll
jns
cmp
repnz
imull
push
xchg
sbb
lret
js
es
inc
jge
mov
mov
shlb
lods
push
jne
bnd
add
popa
xchg
push
into
nop
sbb
pop
call
enter
std
jmp
popf
fwait
or
js
js
arpl
test
outsl
cwtl
out
mov
divl
sbbb
inc
cmp
jno
push
xlat
xchg
lcall
pushf
dec
push
lods
shll
jae
mov
aaa
cmp
push
lahf
fisubrl
ss
xor
pop
pop
fsubl
push
add
sbbl
jo
outsl
pop
out
inc
in
fwait
jno
push
inc
adc
and
leave
sub
xchg
fdivr
inc
je
push
mov
dec
pop
cmpsb
rcl
mov
mov
and
scas
sar
stc
dec
movsb
pusha
xchg
sub
xchg
adc
insb
jle
push
pop
cmpsl
and
fdivp
push
push
in
ret
inc
xor
jle
jge
jle
lea
push
shlb
xchg
nop
jg
or
in
cmp
sbb
sbb
loope
pop
xchg
inc
rcrl
test
add
arpl
outsl
sub
in
aam
xor
push
dec
loope
movsl
mov
cli
push
aaa
xor
pop
sub
std
mov
pop
dec
mov
stc
std
ja
fnstcw
pusha
mov
or
add
in
push
movsb
cmpsb
mov
iret
mov
push
aas
and
hlt
ret
lahf
cmp
add
clc
pop
xchg
sbb
push
into
repnz
or
cmpsl
cli
xlat
adc
sub
and
es
es
jb
popf
loop
mov
or
testb
push
xchg
push
lods
push
jg
xchg
mov
ret
lods
push
lret
pop
mov
movsl
scas
adc
addr16
fucomip
outsl
xor
pop
push
lds
and
pop
das
sub
push
loope
ret
and
and
inc
add
mov
sbb
dec
sbb
jns
adc
insb
dec
or
dec
stos
xchg
repnz
mov
int
dec
mov
call
sub
ljmp
sub
jbe
bound
or
lcall
in
fsin
jg
sti
mov
or
xor
je
repnz
xor
add
mov
dec
or
push
lds
cmp
mov
xor
push
ja
mov
mov
bound
lods
and
and
pop
fs
sbb
or
cmp
scas
cwtl
mov
sbb
lret
movsb
out
sub
ds
mov
in
push
ror
and
les
stos
mov
out
loopne
loope
cli
jnp
or
data16
jno
xchg
repz
xchg
push
inc
sbb
scas
jae
push
xchg
out
lods
cmpsl
stos
arpl
dec
mov
jns
in
pop
cmp
pop
rcrb
popa
shrl
mov
lds
dec
or
enter
arpl
pushf
sbb
xlat
hlt
cwtl
std
in
gs
mov
sti
xor
inc
mov
imul
fstl
fwait
dec
gs
and
shrb
xorl
test
clc
clc
int3
xchg
mov
aas
mov
data16
sub
mov
enter
or
les
push
cld
test
mov
inc
fldcw
repnz
or
js
push
fs
sub
cmp
cmc
insb
ss
cmp
cmpsl
or
mov
aam
pop
pushf
loope
aad
out
pop
mov
sub
movsb
loop,pt
mov
inc
cmc
and
xchg
add
dec
jecxz
cld
outsl
in
lods
add
dec
xor
pushf
sbb
pop
in
loope
jno
xlat
lds
xchg
mov
je
rclb
xchg
cmpb
mov
mov
cs
jo
sbb
fstp
outsb
sbb
dec
stos
addl
mov
sbb
adcl
lret
pop
jbe
pop
push
mov
xor
adc
leave
dec
stos
outsl
lods
jae
aaa
xor
addl
xor
jge
leave
cmp
xor
adc
and
arpl
push
shll
out
jae
push
dec
dec
xor
pop
add
repz
lret
mov
push
push
popf
lds
mov
pusha
xchg
dec
inc
loope
icebp
push
lahf
int
ret
cmpsl
loopne
ja
mov
enter
and
jns
sbb
in
lds
popa
push
cmpsl
jno
inc
test
ret
and
cmp
js
pop
mov
lea
dec
xlat
lret
and
adc
fildll
loop
mov
fiadds
xchg
xchg
mov
xor
addr16
jp
xor
mov
adc
jb
sbb
hlt
andl
mov
xchg
test
sbb
cli
or
pusha
shlb
pop
bound
push
jo
mov
out
mov
fsubl
int3
lods
mov
push
adc
ret
lret
mov
adc
dec
cld
adc
lcall
adcl
xor
aam
mov
scas
popa
sbb
dec
sbb
pcmpeqb
jg
test
outsl
xchg
and
push
jmp
rolb
adc
add
gs
popf
xchg
shll
mov
lock
sub
xlat
pop
adc
xor
mov
stc
cmpsl
test
mov
add
xor
lret
jae
inc
push
and
push
adc
cmp
jb
xlat
aas
push
mov
nop
arpl
ljmp
adc
in
shll
aaa
shlb
add
into
scas
pop
jge
fdivs
mov
dec
mov
mov
and
shlb
push
inc
jno
cmpsb
pop
sub
cltd
pop
sbb
insl
insl
xlat
rcrb
jae
jle
out
jge
or
adc
xchg
in
ss
test
or
and
enter
sub
lock
pop
add
and
hlt
sub
lahf
subb
inc
enter
mov
mov
cli
pop
and
xchg
fbstp
loop
ljmp
sub
jl
into
fldt
mov
les
xor
adc
dec
jg
dec
mov
hlt
cs
popf
test
cmp
mov
sbb
add
scas
clc
pop
xor
loopne
cmp
mov
sbb
and
loopne
imul
push
lcall
pop
pop
andl
pop
xor
pop
lock
insl
ljmp
xor
lcall
cmpb
in
sbb
mov
mov
and
sub
lret
ss
or
rcl
cmp
adc
leave
repnz
cli
push
int
xchg
filds
pop
mov
in
add
jg
rclb
sbb
xchg
inc
mov
or
pop
adc
inc
jg
stos
push
lcall
pop
add
movsl
std
lds
test
aam
sbb
sbb
cmp
inc
mov
push
outsl
jbe
inc
sbb
cs
cli
pop
loop
jnp
jecxz
cs
lods
and
or
mov
or
or
pop
pushf
mov
jnp
inc
or
cli
fwait
inc
adc
jae
sbb
inc
adc
mov
add
scas
subl
dec
cltd
movsb
movsl
xchg
add
cmp
pop
scas
sahf
out
xchg
cmpl
dec
mov
add
fisubs
and
imul
insl
imul
cmp
rorb
mov
jbe
mov
xor
add
add
cmp
push
mov
or
aam
jmp
push
addr16
fimull
rcr
push
ja
inc
or
rorb
jecxz
lock
jmp
mov
jb
dec
lods
out
pop
aad
fbld
xchg
adc
insb
inc
lds
pop
or
adc
sub
xchg
call
jecxz
jge
add
mov
cmp
std
iret
jg
xor
movsl
inc
mov
das
dec
loopne
loop,pt
or
xor
sbb
jmp
stos
push
jg
lcall
mov
mov
ds
dec
aas
test
outsb
aas
jne
out
xchg
xor
mov
or
push
mul
mov
xor
outsb
in
movsb
cmp
cmp
and
cwtl
and
xchg
imul
test
jo
movsb
lret
stc
fwait
jnp
xorb
mov
cmpsl
xor
lret
or
jo
test
adc
filds
and
cmp
movsb
cmpsl
push
cmp
pop
jbe
sub
dec
sbb
adcw
adc
inc
xchg
mov
aam
mov
inc
mov
loop
pop
mov
fnsave
fmull
shrb
mov
or
pushf
sub
adc
vpavgw
gs
mov
mov
xchg
dec
push
xorb
cltd
push
scas
pop
scas
movb
xchg
out
jns
ja
sub
jmp
xchg
adc
mov
std
daa
loope
cmpsb
jns
cmp
push
hlt
shrl
leave
jge
int3
mov
movsl
pusha
jg
pop
xor
mov
outsb
cmp
jp
mov
cmp
xlat
sti
or
lahf
pusha
add
negl
inc
mov
cmpsb
dec
mov
jns
inc
cmp
mov
ljmp
jne
pop
jp
inc
fistps
outsl
mov
dec
sub
sub
aaa
push
pop
add
mov
pop
inc
mov
jbe
adc
pop
adc
lds
les
in
cli
xchg
faddl
es
cli
mov
icebp
repnz
shlb
cld
rcrb
in
jp
xchg
xor
xor
push
lcall
inc
sub
mov
add
insb
mov
fistl
out
dec
out
xchg
sahf
mov
pop
pop
pop
or
push
push
xchg
dec
inc
int
cmc
push
inc
add
in
shll
std
push
fildll
pop
sub
and
addl
scas
cmp
push
xchg
jno
lahf
mov
jns
cmp
lret
imul
dec
iret
and
push
out
jmp
pushf
divl
stc
cld
jecxz
add
mov
pop
lods
xor
shl
into
out
mov
lcall
jle
fisubl
and
fisubrs
imul
in
jno
add
adc
test
cmpsl
pop
sub
shl
test
jnp,pn
test
out
scas
and
dec
mov
les
aaa
pop
xchg
loopne
and
lahf
cmp
fnstenv
das
pusha
xchg
inc
xor
jb
inc
mov
fdiv
jg
hlt
push
or
and
ds
sub
mov
pop
or
or
sub
fstps
jns
inc
je
pop
leave
add
xor
andb
lods
xchg
mov
fwait
add
mov
std
lret
inc
mov
in
movsb
mov
icebp
jnp
fldcw
int3
pop
mov
xor
shll
in
cmc
mov
sub
jl
xchg
push
mov
rclb
push
xor
push
inc
out
nop
dec
sbb
aad
test
pop
mov
sbb
xor
xor
xchg
sub
testb
sub
jno
sbb
push
or
and
push
xor
pop
call
gs
xor
adc
cmpsl
es
xchg
xor
stos
test
sbb
or
sarb
clc
fucomp
or
mov
sub
inc
cmpl
arpl
adc
xor
jbe
sarl
adc
adc
dec
out
mov
cmp
and
mov
icebp
mov
lret
lock
imul
movsl
push
pop
loop
andl
sbb
cmp
scas
push
in
aas
fcmovbe
inc
cmpsb
sub
repnz
mov
fists
mov
fisttpl
scas
push
ja
pop
clc
mov
imul
test
sub
dec
cmpsl
mov
mov
cmp
mov
jns
andl
and
and
sbb
mov
cmp
pcmpeqw
xor
icebp
push
jb
outsl
inc
mov
mov
jp
movsb
xor
js
mov
aad
add
cld
jae
js
lahf
xchg
pushl
xlat
jmp
xlat
popf
popf
jmp
xchg
mov
xchg
in
dec
je
xor
cltd
int
jg
sbb
sub
sub
mov
mov
daa
test
cmp
push
xor
outsl
movsl
pop
aad
push
addb
testl
mov
jle
xor
and
mov
xor
pop
popa
ja
sbb
aas
sub
out
test
cwtl
and
sub
aas
push
test
stos
repz
jne
rcrb
pop
daa
jbe
dec
push
repz
lock
mov
decb
pop
xchg
mov
jmp
add
fstpl
add
jno
repnz
xor
cmp
or
sbb
and
jecxz
in
xor
xor
push
out
mov
jbe
dec
adc
out
aas
cmp
xor
push
sbb
dec
ficoml
or
push
out
imul
jp
mov
pop
mov
popf
iret
sti
mov
jmp
dec
mov
int3
lahf
sub
jl
imul
sbb
and
mov
or
or
std
aas
inc
dec
fwait
aad
jle
out
dec
rcrb
mov
or
ret
sbb
les
push
xor
dec
xchg
mov
and
outsb
dec
push
mov
out
mov
gs
cmp
repz
pop
int
daa
repz
push
inc
mov
out
lcall
mov
or
gs
mov
cmpsl
sbb
loope
pop
pushf
jecxz
stos
lea
aas
rol
push
test
imul
push
loope
insb
ja
mov
stos
sbbb
icebp
test
jnp
jmp
xchg
rolb
inc
lret
mov
sub
adc
cmc
imull
dec
fwait
int3
fisttpll
mov
cmp
es
repz
pop
sbb
loope
fidivrl
xchg
int
adc
in
icebp
ficoms
in
pop
push
mov
xlat
sbb
out
sahf
inc
mov
call
mov
lcall
mov
push
lahf
jg
or
leave
inc
in
pop
into
or
and
jecxz
lods
xchg
data16
fnstsw
jbe
cmp
adc
inc
pop
outsl
xchg
mov
cmp
inc
iret
xchg
pop
push
jp
dec
add
dec
sub
push
inc
push
testb
cld
repz
in
adc
push
cmp
ret
leave
dec
cmp
enter
adc
shlb
and
imul
test
lea
in
lods
cmp
push
lea
push
call
mov
adc
adc
mov
jbe
push
dec
cld
cmpsb
sbb
lea
xchg
roll
sti
test
dec
addb
mov
test
loopne
cmp
push
xor
popf
outsl
cmp
push
in
and
dec
adc
sbb
nop
insl
ljmp
sub
in
mov
push
lahf
sub
rol
sub
jb
mov
das
negb
cmp
push
repnz
jecxz
aad
push
mov
xchg
and
mov
shlb
or
sub
repnz
in
aam
ljmp
dec
je
mov
sub
mov
mov
int3
insb
xchg
add
out
lret
insb
cwtl
nop
cmpsl
cwtl
stos
xchg
mov
rorb
mov
fldenv
fprem
outsb
sbb
insb
cmp
jnp
out
mov
addr16
push
stc
sahf
fcomp
or
mov
or
movsl
fwait
pop
mov
shl
lret
mov
or
scas
call
xor
sbb
mov
adc
loop
adc
cwtl
sbb
mov
pop
add
popa
repz
push
xchg
mov
add
xor
jo
je
js
stos
mul
fbstp
stos
inc
and
movsb
jl
ret
pop
clc
mov
icebp
scas
movsb
ret
aaa
mov
cld
jmp
outsb
scas
mov
repz
and
mov
adc
cmp
xchg
mov
nop
xor
pop
add
das
mov
or
jl
fistl
ret
mov
jmp
pop
adc
insb
test
test
insb
push
jbe
fcoml
sti
push
and
enter
inc
xchg
test
mov
sub
mull
jno
in
mov
and
imul
mov
leave
xor
mov
insl
jnp
rcll
adc
push
push
push
sub
pop
cmc
cld
dec
dec
nop
or
push
adc
dec
pop
inc
dec
popf
nop
fimuls
data16
loop
fsubrs
mov
add
or
ja
dec
xchg
sub
mov
fsts
dec
mov
fwait
stc
dec
add
ljmp
pop
jno
xchg
jge
addr16
xor
bsf
jo
test
inc
decl
cmp
xchg
pop
xchg
sti
xchg
lret
fisubs
pop
xchg
mov
sbb
sub
sub
jb
xchg
sub
fnstenv
jns
pop
es
incb
push
sub
jnp
lcall
sub
add
inc
mov
out
jmp
adc
mov
and
mov
and
fldl
pusha
mov
xchg
out
mov
sbb
aam
push
cwtl
lods
les
pop
or
jo
push
mov
mov
pop
mov
out
iret
in
sti
lods
loop
adc
mov
dec
xchg
pop
insl
jmp
in
pop
not
mov
dec
jno
pop
add
out
add
scas
push
fisubl
push
sub
data16
outsb
lock
mov
sbb
adc
dec
or
mov
mov
xlat
jae
test
or
cmp
mov
pop
or
sub
jne
mov
xchg
mov
jb
ret
add
cmc
or
aaa
cmpsl
in
sbb
cmp
push
mov
adc
adc
adc
push
les
push
int
fwait
xchg
xchg
out
cmp
fimuls
mov
xor
jle
sub
lahf
lods
sub
cld
dec
sub
xchg
cmp
pop
shll
loopne
jecxz,pt
pop
push
decb
inc
adc
stc
cwtl
sbb
mov
mov
xor
arpl
dec
dec
and
cmp
jns
pop
dec
jle
xchg
push
int3
sbb
lcall
adc
icebp
loopne
dec
adc
xor
daa
inc
loopne
mov
loope
imul
mov
mov
jno
dec
sub
div
test
ret
jecxz
jle
add
roll
mov
mov
shl
cwtl
rclb
mov
inc
cli
scas
mov
pop
pop
inc
pop
or
dec
in
mov
push
or
incb
mov
gs
adcb
into
mov
insb
jle
mov
mov
sub
xchg
cmc
imul
fs
xor
aad
sub
xchg
nop
xchg
test
bound
movsb
dec
mov
pop
mov
sbb
pop
and
push
scas
call
into
inc
aas
sbb
daa
in
add
mov
xchg
imul
in
mov
gs
xor
jg
rcl
add
cmp
cmp
push
and
mov
dec
adc
data16
inc
jp
push
std
push
aas
push
jecxz
idivl
xor
mov
jmp
push
jns
xor
sub
sub
push
fdivs
out
jmp
mov
movsl
add
stc
sub
out
sbb
addb
mov
push
xor
loop
xor
cmpsb
dec
insl
push
and
cmp
mov
movd
push
je
lods
jecxz
out
jmp
mov
push
and
frstpm(287
push
mov
push
loope
sbb
mov
adc
dec
outsb
jp
adc
jae
mov
jbe
mov
pushf
loopne
sub
lcall
fadd
jbe
inc
aaa
adc
jl
int
adc
jns
adc
into
pop
pop
out
mov
aad
aas
add
bnd
addb
fwait
sahf
clc
outsb
enter
ds
push
xor
xor
xchg
in
and
out
pop
mov
lods
jle
into
cli
out
mov
jae
mov
ror
add
jnp
in
fbstp
outsl
mov
lods
test
cmp
sahf
movsl
xchg
stos
repnz
and
sbb
cmpsl
je
pop
or
push
pop
sub
aad
leave
cmp
cld
mov
jmp
xchg
sub
mov
cli
test
stc
imul
xor
or
add
mov
mov
ret
cmpsl
in
out
idivb
xor
incl
jbe
rcrl
xor
imul
enter
pop
jecxz
arpl
aam
adc
lret
test
add
adc
imul
mov
aam
into
mov
out
jne
sahf
add
mov
jg
mov
mov
sbb
and
jecxz
mov
sbb
or
dec
sub
xor
pop
sahf
sar
movsb
pop
cmp
cmp
and
inc
cld
in
or
mov
call
and
inc
sub
es
pop
push
clc
gs
add
mov
imul
add
cmp
xor
imull
inc
iret
push
xor
jo
fisttps
inc
inc
popa
dec
sub
push
enter
xchg
adc
xchg
push
movsb
enter
testb
jb
es
inc
inc
aaa
loope
xor
imul
jne
aad
adc
jg
int3
pop
push
loopne
or
mov
in
push
mov
adc
and
in
pop
leave
push
inc
into
shl
int3
shll
and
add
outsl
sbb
jae
dec
enter
jb
mov
lods
jl
jo
mov
or
push
rorb
push
insl
rcrb
mov
test
das
mov
xor
xor
addr16
pop
out
mov
popf
and
mov
movsb
inc
lcall
es
mov
jecxz
faddl
mov
movsb
cmpsl
and
mov
and
push
lds
adc
clc
mov
lret
jns
mov
pop
pop
cltd
jno
repz
out
sub
lock
dec
mov
pop
jno
fcmovnb
imul
mov
push
dec
nop
icebp
jp
lds
and
sub
sub
push
aad
mov
shr
es
leave
sbb
jp
xlat
inc
movsl
push
cmpsl
nop
std
pop
pop
mov
and
movsl
ja
in
gs
pop
lock
sbb
repnz
pusha
cmp
dec
adc
jbe
cmpsl
notb
mov
movsl
inc
lea
push
xor
xlat
rolb
inc
cmp
add
ret
lods
popf
sbb
insb
push
mov
pop
out
jo,pt
pop
jne
adc
add
loopne
movsb
pop
fldcw
mov
push
or
ret
mov
push
mov
xlat
mov
or
enter
cmp
dec
mov
mov
cmpsl
add
jmp
sbb
arpl
adc
sub
pusha
dec
adc
in
lea
movsb
cmpsb
mov
dec
add
cmp
stc
inc
shlb
rorb
out
inc
ret
fildll
xchg
mov
xchg
xor
inc
mov
movups
push
shrl
mov
and
add
inc
xchg
inc
fcoml
out
leave
xor
sub
mov
popa
xchg
push
lret
jl
and
insb
push
xchg
mov
jmp
movsb
or
jo
push
jns
mov
and
mov
inc
pop
movsb
jae
sbb
lea
stc
nop
pop
jmp
cmpsl
cwtl
or
orl
xchg
gs
lds
mov
aam
jnp
aas
xor
imul
cmp
push
fldcw
das
push
data16
pop
scas
pop
inc
mov
call
idivb
fdivrp
inc
enter
lods
daa
gs
fisttpl
mov
ret
sbb
rcr
std
jnp
dec
dec
sub
mov
jne
mov
aad
stos
pusha
xor
xor
pop
add
ret
jnp
inc
mov
and
add
pop
stos
adc
out
mov
insl
xchg
daa
aam
and
mov
test
or
ja
xchg
xchg
cmc
lea
lods
push
pop
fmul
jne
test
aad
outsb
fisttpll
inc
add
dec
mov
cmpsl
xchg
add
cmp
pop
movsl
push
push
adc
push
sbb
sahf
dec
out
jne
rolb
jg
enter
lods
call
pop
insb
sub
in
fs
jp
rorb
add
pop
pop
add
cmp
std
add
jnp
das
inc
jecxz
sub
pop
shl
addl
gs
jl
dec
repz
cmp
dec
jo
cltd
loop
xor
daa
in
pop
in
xor
cltd
inc
ljmp
decb
or
movsb
cmp
add
pop
cmp
pushf
int3
xor
jno
loopne
adc
std
jb
pop
pushf
xor
sub
pop
sub
mov
cmpsl
mov
out
mov
adc
fidivl
ljmp
sub
mov
and
fstl
xchg
adc
mov
cmovle
mov
ret
mov
mov
push
jmp
pop
xorb
adc
enter
inc
cmovp
mov
addl
cltd
stos
push
jno
inc
int3
and
clc
inc
mov
jnp
scas
call
or
and
push
or
sbb
aas
lahf
int
dec
sbb
adc
adc
in
xor
fidivl
pop
cmpsb
mov
in
loope
jnp
scas
dec
mov
sbb
jge
pop
shrl
in
shrl
pop
negb
lds
rcll
insb
push
xchg
mov
repz
cmp
mov
cwtl
stc
xchg
lods
iret
mov
xchg
call
push
add
into
jae
cmp
aam
inc
lea
mov
loopne
lret
sahf
mov
outsb
stc
cmpsl
mov
mov
rcrl
or
inc
aaa
add
add
jmp
loopne
dec
rcrb
xchg
dec
push
icebp
mov
inc
insl
push
shrl
xor
rcrl
mov
jo
pop
adc
cltd
or
insb
out
mov
sbb
fdivr
std
pop
out
xchg
push
popf
xchg
jge
dec
xor
int
scas
popa
ds
repnz
fsubs
pop
xchg
cmp
in
mov
loop
repz
xlat
inc
mov
aaa
pusha
xor
add
leave
icebp
push
or
pop
loopne
adc
xchg
jno
pusha
lahf
add
mov
and
dec
inc
mov
shll
mov
sbb
repnz
leave
xlat
les
push
lock
xlat
out
int
out
push
popf
jns
mov
addl
fdivrl
jb
adc
adc
div
cmpsl
adc
sub
icebp
mov
pop
push
cmpsb
or
aaa
insb
push
rcrb
lret
inc
xchg
and
loope
sti
dec
enter
and
inc
dec
outsb
and
jnp
xor
mov
pop
inc
add
cltd
out
xor
lret
cmp
lock
fistps
out
xor
bound
pop
adc
leave
jne
mov
inc
int3
fwait
addl
test
add
mov
sbb
adc
dec
jge
rcrb
leave
test
sti
out
push
test
bound
sti
jecxz
out
lret
pop
xchg
daa
stc
in
pop
cmp
lahf
lea
mov
ror
cmp
das
jb
and
xor
je
dec
jb
cmpsl
adc
dec
sub
aam
mov
fwait
cmp
in
mov
aad
addr16
mov
scas
pop
cs
jg
call
mov
mov
scas
je
push
cld
inc
lods
dec
int
loop
mov
sub
push
aam
or
jbe
add
mov
mov
addr16
je
jecxz
mov
clc
inc
in
xchg
data16
popf
adc
xor
xchg
inc
testl
les
psrlq
movsl
mov
scas
mov
xchg
clc
int
psadbw
stos
dec
push
mov
xchg
rorb
push
or
mov
or
sub
jg
xchg
loop
cli
or
jo
scas
mov
out
pop
xor
push
mov
imul
fimull
flds
cmp
and
pushf
push
jg
xor
fnstenv
mov
sbb
inc
sub
dec
aaa
lock
mov
jl
in
mov
xor
cli
cmc
bound
xchg
push
mov
loope
push
pop
push
fwait
out
dec
push
jge
xlat
imul
je
jp
fistpl
cltd
pushf
movsl
and
dec
sarl
fldl
jmp
outsb
in
add
cmp
jp
test
lds
cmp
je
adcb
xchg
sbb
aaa
stos
lods
xchg
insb
clc
jp
scas
push
loope
ljmp
mov
jmp
ss
sbb
lahf
xchg
int
cmc
and
add
jmp
int3
dec
xor
xchg
mov
lods
jns
sub
aam
sub
aam
mov
mov
addr16
xchg
jge
dec
hlt
subb
stos
icebp
scas
push
mov
mov
xor
mov
add
pushf
fldcw
push
adc
fcoml
inc
rclb
sub
ss
xor
lea
lret
loope
add
ja
push
jl
sbb
dec
jnp
icebp
gs
test
mov
sbb
ljmpw
aam
dec
out
pop
sub
imul
mov
or
inc
js
inc
push
lods
nop
cwtl
cmp
ljmp
push
dec
incb
cltd
pop
mov
sub
mov
sub
adc
fnstenv
nop
pop
nop
cld
jl
mov
mov
rolb
stos
add
sub
mov
sbb
inc
sahf
in
pushf
pop
sarl
xor
ffreep
sub
scas
js
xor
outsb
adc
mov
cli
stc
pushl
bound
incl
loopne
data16
test
mov
fisubrs
push
sub
pop
dec
fisttpll
mov
or
sbb
dec
jne
add
aaa
pop
incb
in
push
jo
aaa
out
shll
pushf
jnp
cmp
mov
xor
insl
pop
cli
add
pop
popf
sbb
add
pop
add
sbb
push
into
jo
xchg
pushf
add
faddl
sbb
and
call
test
rcll
test
bt
cmp
nop
xorl
xchg
movsl
inc
clc
pop
push
and
ret
scas
cwtl
in
movb
or
mov
loop
cltd
outsb
pop
dec
adc
mov
aam
jbe
popa
in
jg
adc
and
aas
sub
or
sbbb
mov
add
dec
addr16
dec
data16
xchg
jns
xor
lahf
andb
mov
pop
pop
mov
sub
lea
icebp
sbb
and
clc
inc
lods
xchg
xchg
pusha
inc
push
pop
and
inc
shr
mov
movsl
xchg
cmp
xchg
cld
inc
push
sbb
jb
out
mov
and
and
or
xchg
test
ret
xor
lods
mov
xchg
mull
lods
fldt
jne
outsb
inc
xlat
or
outsl
outsl
push
xor
jns
mov
sub
pop
negb
adc
jle
jne
les
jl
xor
add
mov
std
or
pop
arpl
mov
add
es
push
adc
daa
fs
and
and
sbb
push
or
xor
fimull
mov
fwait
mov
inc
out
test
cmp
mov
addr16
fisubrs
flds
push
arpl
cli
iret
adc
jb
xchg
adc
push
inc
pop
or
divb
pop
add
aas
pop
lock
xor
addr16
aaa
nop
push
mov
sar
cmp
leave
or
mov
fnstcw
xchg
and
xor
daa
inc
fstps
inc
cmp
mov
dec
js
xor
inc
lahf
sub
push
jns
add
in
test
ficoms
pop
idiv
push
lret
pusha
sbb
xor
lret
rcl
das
cmp
add
sub
fsubrs
or
sahf
rorl
mov
sbb
add
jo
mov
loope
cltd
xor
in
add
sbb
sbb
into
cmp
in
iret
in
scas
cmp
dec
push
mov
sbbl
mov
inc
jp
scas
clc
push
sbb
or
inc
mov
mov
call
xlat
push
or
pop
mov
cmp
xchg
fstl
arpl
jmp
mov
test
inc
lds
fisubrl
lods
mov
pop
or
mov
jmp
pop
mov
das
lea
mov
out
and
xlat
outsb
push
sub
xor
shl
jg
sarb
cmc
negb
fisubl
adc
mov
pop
or
out
add
cs
or
sbbl
dec
out
and
into
sti
cmp
repz
xlat
popa
jns
xchg
pusha
shl
in
pop
ss
das
cmp
jno
rorl
push
inc
push
jbe
jecxz
jle
push
les
daa
mov
cwtl
in
push
repnz
xchg
aas
dec
cli
pop
sbb
shrb
andl
popf
push
insl
popa
in
pop
push
and
and
or
testb
xor
loop
push
data16
lahf
inc
xchg
push
stc
pop
inc
jbe
add
adc
lock
ss
rcl
pop
cmp
lret
xchg
test
fstpt
pop
outsb
cmp
xor
mov
enter
dec
mov
loop
cwtl
and
add
adc
fcoml
mov
cmp
mov
leave
nop
outsb
call
outsb
or
and
mov
pcmpgtw
add
pop
adc
cltd
test
xacquire
dec
inc
add
stos
jnp
cmp
rcl
and
push
jb
popf
xchg
jmp
fst
push
add
test
mov
push
push
cli
mov
orl
test
cmp
out
scas
mov
push
sub
pop
in
and
dec
arpl
add
push
in
ljmp
pop
mov
add
enter
sub
outsb
int3
stos
movsb
lar
jp
and
and
inc
sbb
dec
in
xor
xor
std
cmc
loopne
inc
lret
pop
rcll
in
idivl
pop
xchg
sahf
sbb
pop
mov
cmpsl
imul
repnz
filds
shlb
data16
outsl
and
es
cmc
dec
cmc
pop
sbb
mov
das
cmp
jmp
out
and
js
adc
fimull
pop
mov
in
aad
adc
rolb
add
cmp
stc
cmpsl
jb
in
mov
lret
mov
mov
jg
imul
adc
roll
mov
and
movsb
pushf
mov
xchg
push
aas
mov
leavew
mov
cmp
push
mov
push
jno
adc
loope
add
sbb
jnp
dec
jl
cs
push
jle
inc
in
cmp
dec
inc
inc
sub
stos
and
rol
or
jmp
jp
xchg
xchg
outsb
mov
test
jmp
loop
dec
adcb
mov
vpsllw
inc
cmp
hlt
or
mov
andb
vpshufhw
xor
lret
push
pop
pop
mov
push
mov
mov
or
xchg
es
fadds
add
push
sub
jecxz
sub
xor
sub
fwait
cmpb
cli
xchg
addr16
push
pushf
push
popf
insl
push
faddl
scas
int3
lret
call
std
mov
stos
cli
rcll
jbe
daa
pop
sbb
mov
xchg
imul
mov
inc
ret
sbb
aam
shrb
jle
fucomi
sahf
popf
pop
push
and
cmp
inc
jge
cld
pop
addl
sahf
aaa
xchg
inc
xor
jg
fcompl
fwait
cld
xchg
lret
stos
lret
jl
pop
push
jne
mov
inc
arpl
or
lock
sub
ljmp
mov
cmp
loop
out
shlb
pop
push
sbb
testb
enter
mov
stos
push
sbb
or
lcall
push
adc
xor
mov
or
pop
mov
inc
adc
push
imul
xchg
jg
lods
mov
push
push
stc
push
and
mov
in
fistpl
pop
add
loop
pop
adcl
pusha
mov
or
jmp
testl
inc
icebp
outsl
mov
mov
lret
mov
inc
sbb
cltd
mov
pushf
jo
scas
out
cmpb
repz
gs
push
or
clc
rcll
shrl
sti
jmp
mov
loopne
push
lret
pusha
inc
test
cmp
test
dec
addr16
push
imul
cmp
sahf
ret
adc
adc
lcall
sbb
leave
or
add
push
mov
or
mov
push
lcall
in
test
inc
movsl
jno
jge
add
mov
test
dec
sub
adc
push
jae
cmp
icebp
push
ds
cwtl
incb
dec
sbb
pop
add
addb
imul
shlb
nop
sub
mov
dec
dec
imul
dec
or
sub
mov
js
mov
clc
pop
sbbl
ror
mov
fistpll
mov
aaa
xchg
es
inc
jl
mov
ds
cmp
pushf
pop
icebp
loope
mov
jb
stos
cmpsl
popa
lods
ljmp
mov
mov
jnp
icebp
or
outsl
pop
cmpsl
sarb
into
sub
xor
jp
pushf
stc
push
daa
scas
sar
inc
fdivl
aam
jl
jecxz
call
cmp
psrld
int3
adc
icebp
fmuls
out
jae
pop
push
adc
adc
xchg
cmc
adc
sarb
mov
mov
xor
push
mov
jmp
xor
mov
subl
xor
cltd
and
sbb
mov
sub
mov
inc
test
std
push
icebp
fidivrs
mov
movb
fs
imul
aas
nop
mov
and
aam
mov
call
inc
das
loopne
sub
and
inc
mov
xor
fldcw
data16
addr16
inc
iret
fisttps
jmp
mov
enter
dec
nop
test
in
jno
inc
pop
pusha
out
in
add
mov
mov
test
scas
imul
nop
adc
and
push
inc
enter
add
decl
adcb
xor
pop
shrl
pop
cli
mov
xchg
mov
gs
in
pop
xchg
pusha
shl
or
xchg
sbbl
lods
dec
les
pop
stc
or
inc
add
xchg
mov
call
es
sbb
sub
cmpsb
js
dec
jmp
or
ja
fstpl
jl
mov
push
cmp
in
imul
mov
neg
cmp
in
jno
icebp
loopne
xor
sbb
clc
dec
and
push
add
lret
testb
inc
shlb
in
lock
lods
push
jp
xor
push
mov
subl
int3
ret
pusha
xorl
fcmovne
loopne
inc
xor
pushf
ja
ljmp
movsl
popa
fnsave
fmuls
mov
sub
icebp
loopne
add
icebp
fisttps
mov
clc
in
dec
xor
imul
push
ret
test
rcrl
adc
ds
inc
stc
inc
sahf
adc
jno
jmp
call
in
test
lods
in
outsb
xchg
and
mov
sub
mov
enter
push
fcmovnu
add
or
xor
inc
push
push
mov
mov
xor
mov
mov
xchg
clc
pop
pop
in
rol
inc
jb
mov
xor
pop
inc
push
popa
fnsetpm(287
loope
jge
ffreep
out
xlat
loope
jae
mov
sbb
mov
insb
test
cmp
jg
xchg
int
ja
dec
and
dec
orb
lock
ret
xchg
xor
sbb
jle
mov
mov
push
fs
bnd
add
icebp
sub
xor
subb
dec
push
pop
int
and
sti
nop
imul
imul
mov
hlt
imul
insb
movsb
fisttps
sub
inc
insb
aam
insb
addb
pop
cmp
pop
jbe
shrl
fwait
mov
cmp
mov
shr
int3
inc
mov
cs
cld
cli
pop
insl
ds
loope
loopne
std
or
stos
jmp
ja
and
in
aad
push
xchg
jg
mov
and
scas
fistps
jns
ret
push
sbb
add
loop
jae
mov
test
stos
push
das
in
idivl
test
pop
push
fwait
jl
repz
popa
out
or
pop
or
hlt
in
jmp
data16
pushf
mov
pop
mov
cli
and
mov
inc
cmp
rol
jb
mov
nop
shlb
les
xlat
inc
fxch
jg
test
mov
andl
adc
jns
sbb
repz
cli
pusha
cmpsb
add
sub
mov
insb
mov
arpl
hlt
pop
push
sub
nop
mov
push
jbe
push
cmpsb
sbb
in
imul
mov
pop
mov
out
xorb
or
stc
mov
lahf
cmp
lods
mov
mov
and
cwtl
mov
test
je
out
xor
int
shl
popf
lods
aas
fiadds
dec
pop
jns
pop
mov
int3
leave
mov
fwait
data16
jne
push
int3
rcrb
scas
xchg
mov
fcmovnu
cld
mov
fwait
push
mov
mov
lahf
jl
add
movsl
call
stc
insb
scas
xlat
jno
sbb
or
xchg
push
adc
je
imul
add
sub
jo
lods
mov
insb
xchg
xor
dec
das
dec
popf
sub
mov
push
test
js
mov
add
inc
lahf
shrl
int3
aad
out
adc
sbb
loop
push
cmp
inc
data16
notb
push
xor
popf
push
add
and
adc
leave
shll
flds
jbe
mov
lea
mov
sbb
jecxz
xor
jb
fdivr
dec
inc
mov
jbe
cmp
ficoml
hlt
enter
jle
scas
push
and
sti
jg
ss
jbe
dec
push
addl
mov
insb
xor
mov
mov
xor
je
inc
cli
shrb
lods
adc
sub
roll
rclb
int
jb
inc
rcrb
es
subl
mov
or
sub
notb
bound
push
mov
adc
clc
pop
mov
out
mov
xor
int
add
mov
mov
sbb
mov
jge
mov
pop
sbb
pop
jl
shll
mov
sti
and
and
or
es
mov
add
xlat
movsl
out
insl
lahf
leave
and
xchg
xchg
add
or
ror
mov
sbb
aaa
jo
lds
xchg
ss
pop
fcmovne
mov
pop
imul
or
fbld
cwtl
lock
dec
mov
add
shll
ror
mov
jno
and
shr
and
mov
mov
dec
stos
ds
mov
pop
movsl
jbe
pop
mov
push
aad
mov
or
lret
repnz
cmc
push
cmp
mov
sahf
stos
movsl
addr16
dec
mov
fistl
jae
iret
sbb
mov
mov
adc
mov
and
daa
dec
into
pushf
dec
push
lods
roll
sbb
je
jbe
insb
leave
fimuls
jg
hlt
out
mov
adc
mov
test
mov
data16
insl
js
in
jnp
and
fldl
aad
jo
pusha
notb
arpl
mov
outsb
cld
jmp
stos
enter
sub
xor
mov
sbb
out
sbb
cmp
sbb
std
push
sub
mov
or
xchg
fisttpll
stos
xchg
in
scas
inc
shrl
fldenv
cmc
sbb
movsl
out
aam
adc
jp
mov
outsl
dec
inc
push
mov
push
stos
insb
mov
repnz
xchg
or
mov
sbb
and
adc
cmc
adc
ja
shll
lahf
adc
cmpsl
mov
or
jo
mov
mov
data16
sbb
insb
and
pop
fs
sub
test
aas
push
movsl
shrl
mov
sbb
outsl
testb
ja
inc
rol
leave
je
icebp
aam
fistl
jmp
add
data16
mov
cmp
jbe
mov
icebp
loopne
lock
loope
dec
ljmp
int
adc
movsb
dec
and
outsl
negb
cmpsb
jg
cmp
cld
fstl
testl
repz
push
arpl
sub
add
enter
cmp
xchg
mov
mov
push
dec
cmc
mov
push
in
push
sub
or
push
lcall
andl
cld
lods
nop
cmp
call
call
dec
pusha
mov
pushf
xor
mov
mov
jl
pop
fs
and
xor
sub
adc
adc
shll
pop
je
mov
push
mov
adc
sbb
push
sbb
cmp
les
test
movsb
sub
popf
inc
les
out
jns
out
xchg
xchg
dec
xchg
repnz
or
aas
fnstenv
sbb
sbb
mov
sub
pop
xor
outsl
mov
sarl
cmp
icebp
mov
add
mov
inc
jno
sbb
lahf
adcb
mov
test
adc
cmp
bound
pop
jne
cmc
xchg
out
sbb
movsl
in
jo
adc
psubb
inc
std
aad
mov
dec
popf
mov
insb
xchg
inc
push
push
sbb
fbstp
cli
cmc
push
xlat
and
adc
cld
test
pushf
movsb
out
pop
mov
int3
push
fdiv
hlt
mov
cmpsb
loope
or
sbb
std
bound
cltd
sub
push
sbb
xchg
in
jae
dec
mov
jbe
dec
adc
cli
push
mov
pusha
js
push
and
or
mov
das
pushf
subl
cmp
loope
and
or
outsl
dec
shrb
sbbb
push
jnp
inc
cmc
mov
pop
jmp
shl
sub
pop
mov
jns
je
repz
add
xchg
aad
mov
dec
adc
int3
arpl
xor
lret
adc
call
jge
jbe
fcoml
mov
mov
pop
dec
fiaddl
fdivrl
xchg
arpl
jae
cld
and
pushl
out
loop
mov
inc
enter
ss
inc
jmp
call
ret
adc
push
push
dec
stos
mov
dec
cmp
jp
outsl
dec
sub
push
repz
pusha
aam
and
dec
jno
dec
in
cmp
and
dec
cwtl
cli
in
push
push
mov
out
lods
xlat
shll
divl
pop
icebp
mov
mov
rcll
fwait
cld
sub
and
cwtl
pusha
repnz
andl
xchg
pop
pop
xchg
mov
push
pop
sbb
xor
fxch
inc
xchg
pop
hlt
movb
arpl
jmp
out
stos
dec
cmc
and
andl
outsl
arpl
push
dec
out
nop
cld
push
cwtl
jnp
cltd
xchg
out
les
adc
bound
into
jecxz
shr
xor
mov
movl
xchg
cmpsl
pop
je
xor
inc
loop
aad
ficoms
js
cmc
jmp
mov
xlat
mov
mov
mov
cmc
xor
aas
push
or
dec
ljmp
ljmp
and
jle
push
push
cmp
outsl
dec
insl
mov
dec
mov
fmul
repnz
mov
dec
popf
test
sti
jl
inc
pop
pop
ljmp
inc
mov
cmp
mov
xchg
loop
cld
cwtl
push
sarl
inc
jbe
xchg
out
inc
out
ficoms
std
cld
dec
insb
repnz
jp
call
jle
cmp
shll
inc
mov
mov
jno
stos
sbb
sbb
rorl
dec
dec
pop
js
ljmp
filds
into
fdivrs
jb
pop
in
shl
push
out
lea
adc
dec
push
mov
outsl
imull
leave
in
adc
mov
push
fldt
gs
in
xor
loop
sbb
add
addr16
out
mov
dec
ja
pop
pop
push
lret
lahf
xchg
push
lods
mov
aam
mov
stos
mov
inc
dec
fmulp
inc
fcoms
dec
lea
aas
insb
or
push
mul
hlt
xchg
fimuls
sbb
xchg
stos
jo
or
add
cs
dec
in
xchg
leave
sbb
cld
and
mov
adc
inc
test
cwtl
je
rorb
sbb
sahf
aam
ds
xchg
aaa
aam
roll
xchg
push
shr
pop
cmpsb
inc
pop
mov
cmp
mov
mov
insb
xorb
dec
and
fsubs
stos
enter
js
xchg
jge
hlt
into
idivl
cwtl
add
xor
fs
or
icebp
pop
dec
jge
aam
inc
scas
inc
fs
jae
std
cwtl
mov
mov
sub
push
lret
rclb
sbbl
xor
repnz
dec
aam
lea
mov
sbb
xchg
pop
xrelease
jbe
insl
cmp
cmpsl
and
mov
cld
push
lds
and
je
xor
or
dec
repz
arpl
cmp
cmp
push
decb
loopne
xchg
movsl
add
sbb
bndstx
jmp
les
imul
jb,pt
arpl
push
xchg
xor
popf
js
mov
xor
push
fst
lds
pop
nop
loop
jb
cmpsl
mov
mov
and
adc
mov
dec
out
sub
jo
rcll
stos
push
mov
bound
mov
call
hlt
push
pop
mov
addl
mov
adc
dec
loop
lock
mov
fimuls
and
cli
xor
clc
fwait
repz
adc
pop
and
push
mov
pop
add
xchg
stos
inc
enter
shrl
xchg
mov
inc
lock
test
rcrb
leave
dec
jns
loopne
fadds
jg
outsl
push
push
fidivl
jmp
sbb
inc
pusha
hlt
pusha
adc
push
or
clc
mov
add
mov
xor
cwtl
sbb
sub
iret
mov
ja
lahf
pop
dec
jnp
mov
push
jge
dec
adcl
dec
xchg
dec
jae
hlt
cmc
pop
push
shr
adc
andb
lods
add
notb
add
fdivrs
jno
jns
xor
jge
aaa
lea
sti
sbb
xor
mov
dec
jbe
cmp
mov
add
cmp
cld
cltd
and
pop
xchg
ret
aam
addl
daa
lods
or
pop
mov
inc
in
inc
adc
cs
cmp
mov
jmp
outsl
pop
sbbb
hlt
xchg
inc
shll
xorl
mov
mov
add
add
dec
mov
pop
fldcw
icebp
sbb
inc
outsl
and
addr16
fdivrl
nop
mov
mov
dec
inc
or
sbb
jns
div
loop
mov
aad
notl
in
jmp
mov
shl
popa
out
jecxz
cmp
jl
cmpb
mov
or
outsb
cmp
sub
pop
gs
mov
push
mov
into
mov
xor
xchg
imul
push
cmp
inc
movsb
mov
arpl
or
mov
out
push
add
xchg
mov
mov
insb
ucomiss
cmp
jmp
or
aad
stc
popa
xchg
and
mov
sbb
jle
sub
xchg
push
xchg
roll
or
int3
leave
mov
cmpsb
dec
sbb
rcrl
mov
pop
xchg
in
jno
sub
inc
xor
jo
push
jnp
mov
fimuls
add
sarl
sbbl
xchg
xchg
pop
pop
sub
push
pop
push
int
add
dec
popf
push
bound
loop
pop
inc
imul
sbb
cmp
add
add
jg
nop
sbb
fadds
cmc
xchg
daa
fwait
in
shll
sub
and
adc
xor
dec
scas
and
mov
pop
ficompl
dec
dec
je
inc
data16
leave
and
sbb
push
dec
push
andnps
shrb
push
pop
sahf
jmp
lahf
push
dec
lds
mov
add
sub
inc
sahf
daa
clc
or
inc
push
or
ja
pushf
xor
and
cld
jae
jg
insl
jle
rorl
pop
iret
pop
xor
mov
std
mov
jbe
push
add
loope
inc
push
sbb
repnz
sarl
mov
insb
idivb
xlat
mov
mov
add
fbstp
push
in
divb
call
mov
add
mov
jecxz
push
push
int
cmp
add
loop
fdiv
mov
outsb
cmpsl
mov
mov
xor
push
mov
cwtl
inc
pop
in
dec
subb
sbb
mov
pop
or
jp
lret
int
xor
popf
lahf
repz
add
enter
int
test
add
inc
scas
pushw
addr16
mov
pop
cmpsl
fbld
or
mov
movsl
inc
sahf
dec
add
aas
daa
pop
jnp
adc
enter
sub
lcall
mov
imul
pop
cwtl
aad
imul
stc
xchg
fisttpl
xchg
leave
push
cmpsl
icebp
loopne
shll
dec
arpl
jbe
push
call
cmp
and
dec
dec
xchg
pop
sub
and
dec
add
mov
ja
xchg
faddp
addr16
xchg
sub
dec
pop
aad
mov
dec
cmp
inc
push
push
jne
push
inc
insb
add
jmp
xchg
cmpsw
popf
imul
into
ja
dec
cli
mov
in
or
aas
cwtl
pop
mov
les
push
pop
adc
xchg
imul
sti
insl
setno
fidivrl
mov
mov
outsl
inc
inc
inc
xchg
fld
and
xchg
adc
mov
mov
cmp
lock
adc
jns
xor
out
or
and
push
sub
fs
mov
test
mov
cmp
lea
xor
jmp
mov
stos
ret
pushf
push
in
jno
mov
movsl
mov
fisubl
movsb
addr16
adc
lret
popa
sub
mov
push
xor
push
mov
and
cmp
xchg
pop
dec
rolb
lock
cmp
inc
inc
aaa
stos
lcall
nop
lods
aaa
popf
xchg
mov
mov
sub
aas
dec
ret
mov
rcr
or
cwtl
shl
clc
dec
mov
mov
rcll
sbb
adc
jge
ss
inc
aam
mov
insl
mov
fstps
mov
js
pop
mov
lock
sarb
mov
fstpt
pushf
and
xchg
inc
insb
sbb
lods
mov
cmp
and
sbb
fs
xchg
enter
and
cwtl
dec
jecxz
dec
and
push
bound
rcrb
cs
in
cmp
sahf
fiadds
cmp
mov
inc
in
fwait
mov
jl
in
dec
in
je
loope
push
sub
pop
cmc
stos
fstpt
dec
sti
pop
stos
mov
pop
rclb
insb
adc
inc
subl
jl
mov
icebp
sbb
int3
nop
push
mov
inc
enter
out
inc
test
xchg
out
clc
mov
mov
dec
push
sub
pop
in
loope
call
rcr
out
push
dec
sub
lea
out
inc
lock
cmp
les
sbb
xlat
sti
sub
push
mov
cld
mov
mov
mov
nop
movsl
arpl
pop
cmp
nop
inc
adc
inc
jb
push
ret
ftst
jmp
ss
ror
mov
push
cltd
int3
and
and
push
sbb
mov
aaa
sahf
insb
js
add
fistpll
jp
popa
lcall
hlt
add
arpl
push
jmp
jno
fnsave
xlat
repnz
mov
mov
dec
lret
push
idivl
mov
sbb
shrb
clc
ret
adc
xor
gs
cwtl
out
rol
add
jns
rcll
push
mov
sahf
xor
xor
mov
ljmp
in
and
sbb
jp
jle
orb
adc
lcall
icebp
rcl
insl
dec
jmp
and
pop
push
adc
sti
cmpsl
xor
push
fwait
int
in
inc
fnstsw
subb
xlat
cmp
in
push
in
test
loopne
call
pop
mov
or
bound
mov
rcrb
mov
shl
clc
mov
fwait
xorl
xlat
mov
cmpsb
mov
fsubrs
out
int3
push
or
adc
icebp
shlb
shl
inc
pop
inc
cmpsl
pop
xlat
xlat
clc
clc
mov
xchg
loope
out
sarb
push
add
outsl
or
pop
cmp
imul
stos
nop
mov
test
daa
lods
fcomps
add
mov
lcall
xchg
cld
lods
push
aam
ret
lcall
mov
mov
pop
test
aad
or
cs
sbb
aad
into
cmp
test
stc
inc
aad
push
call
cltd
xchg
inc
dec
arpl
push
in
mov
pop
pcmpgtb
xchg
sub
orl
out
jnp
cmp
and
cmpb
jno
add
push
mov
sub
sub
mov
mov
popa
int3
sub
inc
or
jmp
je
dec
jae
lret
dec
pop
add
xor
dec
ja
cmp
aaa
in
sahf
loope
scas
shll
aas
inc
shll
ja
jo
cmp
bound
je
sub
jmp
mov
nop
and
iret
lock
or
clc
mov
shl
cltd
imul
sbb
jle
in
cld
mov
aas
push
hlt
lock
in
pop
std
inc
xor
test
fwait
jbe
jnp
sahf
mov
pop
call
sbbb
jne
imul
lock
loope
popf
fstps
pop
xorb
fisubrs
cwtl
int
int
lret
fildll
data16
icebp
idivl
aaa
outsb
scas
stos
inc
cmp
jecxz
pop
daa
cmc
sarl
cmp
pop
idiv
and
cs
dec
add
jo
out
or
dec
popf
pop
inc
jmp
scas
cmpsl
test
fnstenv
dec
lock
cltd
outsl
sub
inc
ret
adc
fbld
jg
push
cmc
sti
dec
inc
sbb
repnz
scas
mov
jmp
out
mov
cmpb
jecxz
nop
and
xor
mov
cmp
sbb
lret
popa
repnz
xchg
xchg
sub
push
mov
pop
pushf
dec
sbb
fcoms
ret
xchg
mov
jmp
sti
pop
pop
xchg
pushf
push
xor
iret
cmp
popf
insl
inc
test
fwait
inc
mov
push
sbb
cmp
dec
outsb
mov
clc
mov
mov
aam
data16
sbb
cwtl
fsubrl
jo
les
cltd
xor
sbb
mov
pop
fbstp
pop
dec
sub
int
sbb
shlb
cmp
sub
dec
push
test
pop
cmp
scas
sbb
mov
pop
or
push
add
sbb
mov
jno
cmp
mov
pushw
xchg
xchg
xchg
popf
jmp
ret
popf
into
popa
ss
mov
lock
push
aas
mov
dec
fdivrs
push
or
push
push
js
push
imul
loop
ret
or
sub
mov
cmp
jo
testl
loop
aam
mov
out
outsl
cmp
aam
push
and
push
mov
xchg
addl
outsb
aaa
adc
mov
clc
div
insl
icebp
xor
in
call
popa
push
leave
mov
scas
das
push
ret
rcl
imul
jbe
mov
push
aaa
lea
xchg
mov
pop
xor
or
mov
sbb
jp
fsub
push
xlat
mov
adc
inc
and
loope
push
dec
xchg
push
push
aas
or
outsb
mov
aas
testl
dec
lods
sbb
sbbl
fcmovne
push
in
ret
lret
dec
mov
push
cmc
sti
mov
lahf
sbb
add
das
jbe
loopne
or
push
add
and
daa
mov
sbb
orl
addr16
out
in
cld
push
cli
push
out
int3
shl
xor
cmpsb
jns
pop
sub
adcb
mov
aam
xchg
pop
xchg
icebp
jb
cmpl
xchg
fsubrs
or
rcl
inc
lea
lds
push
insb
mov
imul
mov
aaa
push
shlb
jecxz
mov
inc
push
mov
out
insb
xlat
add
dec
xchg
jg
add
out
sbb
jp
lret
daa
xchg
mov
inc
mov
pop
cmpl
fldl
outsl
hlt
xor
inc
or
push
arpl
pop
xchg
push
cli
sub
je
sarb
sub
mov
shl
sub
pop
pop
mov
xchg
in
jle
mov
xchg
xchg
stos
ljmp
push
sbb
or
jle
aas
adc
adc
inc
jo
mov
lea
adc
iret
push
xor
out
out
lret
nop
adc
into
ret
jmp
dec
sub
sub
mov
mov
dec
in
pop
and
aas
dec
stc
test
sbb
loop
pushf
lcall
adc
int
xor
lods
dec
and
mov
sbb
mov
sub
lock
xor
push
cmp
xchg
or
jge
push
iret
ret
and
mov
int
jg,pt
jae
xchg
pinsrw
es
outsl
fs
leave
lods
push
imul
pop
call
cli
ss
fldt
jo
pushf
loopne
aam
mov
jle
jo
aad
fs
xorb
or
pop
andb
adc
cmpsb
or
aam
mov
mov
mov
add
add
fmuls
xor
jns
cli
dec
pop
popa
fbld
mov
add
sub
ds
jecxz
testl
std
into
adc
xacquire
call
dec
push
ret
and
adc
sbb
push
pushf
pop
call
mov
insl
ret
stos
fidivrs
and
mov
stos
je
and
iret
div
testb
addr16
sahf
test
call
je
xor
frstor
add
push
scas
in
sbb
fcoml
roll
cs
dec
dec
pop
in
or
aam
jmp
test
jo
sbb
push
lock
movsl
mov
je
sti
sti
jnp
fs
stc
out
inc
mov
out
sahf
orl
ss
inc
bound
or
jb
sahf
add
std
or
jmp
dec
lds
push
xchg
ret
mov
dec
into
lahf
adc
cmp
jno
push
cmp
out
daa
jg
cmp
clc
jle
addl
outsl
loopne
fdivrl
ret
or
jge
cltd
fldz
in
out
jbe
jo
xchg
nop
push
sets
cmc
cmp
jecxz
cmp
out
divb
push
jge
push
inc
xorl
and
xchg
es
mov
xchg
xchg
js
pop
inc
ds
mov
xor
mov
popa
sub
ja
dec
ja
andb
shr
std
fildll
xchg
xor
mov
adcl
and
xchg
pushl
xchg
jb
cmp
cmpsb
leave
aas
es
cmp
iret
sahf
mov
jo
mov
push
push
ljmp
jmp
mov
imul
cli
in
enter
test
or
adc
inc
mov
pop
and
std
dec
rclb
or
mov
jns
add
clc
lods
jecxz
cltd
ds
stc
jnp
xor
dec
mov
jno
jecxz
push
or
stos
mov
notl
lock
xor
xor
or
mov
in
mov
push
pop
push
nop
ret
fmul
push
add
sar
lcall
cmp
or
inc
mov
icebp
add
notb
subb
aas
lahf
cwtl
shrl
dec
jl
pushl
bts
fmuls
xorb
daa
std
mov
test
fstl
jnp
push
sub
loope
mov
dec
pushf
mov
push
add
test
lds
cmp
aaa
xor
dec
subl
out
adc
scas
or
lahf
shl
sti
insl
clc
adc
mov
jns
push
push
hlt
mov
popl
sbb
adc
add
in
test
arpl
xchg
adc
add
mov
and
pop
add
sbb
add
ljmp
mov
add
fildll
cmpsl
jne
out
ret
sahf
mov
int3
pop
jle
test
sarl
imul
sbb
jp
xchg
cmp
xchg
mov
xchg
pop
pop
push
les
jnp
inc
mov
add
cmpsb
repnz
lret
insb
sarb
out
push
icebp
fistl
out
push
repnz
in
push
sub
or
adc
testb
roll
ds
add
dec
xchg
addr16
ror
or
cld
leave
or
xchg
and
das
and
add
push
imul
adc
sarb
xchg
movsl
jno
push
shll
idivb
popa
aad
add
mov
loop
dec
fs
push
in
mov
enter
sahf
adc
push
pop
seta
cmp
leave
jns
cmp
in
pop
je
mov
sub
sbb
movzbl
stos
loopne
mov
ljmp
fwait
cmp
push
fs
pop
jbe
popf
hlt
sbb
pop
testb
xchg
hlt
and
sub
jp
mov
outsb
xchg
std
mov
xchg
fistl
inc
push
fwait
xchg
xchg
mov
sub
adc
or
dec
xchg
sbb
arpl
rorb
and
mov
cmp
loop
nop
pop
xchg
sti
jae
cmc
inc
jmp
mov
push
faddl
jecxz
hlt
mov
faddp
jmp
mov
cmpl
dec
int3
loope
cld
dec
cwtl
movsl
xchg
xacquire
xchg
int3
xor
sbb
sub
cmpb
lahf
xor
sbb
clc
jno
add
loopne
or
mov
out
mov
mov
fnstsw
mov
pop
mov
jmp
repz
push
push
cmp
movsl
push
cld
pushf
mov
lahf
std
push
int
das
dec
adc
pop
push
test
clc
lea
scas
scas
or
sbb
outsl
jnp
jnp
test
cltd
iret
nop
jp
jle
and
pop
push
std
xchg
fadds
jle
repnz
sbb
lahf
adc
sbb
pop
in
fnstenv
mov
pop
repnz
cmpsl
jl
jbe
cli
aad
mov
mov
sub
arpl
andl
icebp
fidivrs
xchg
or
mov
add
fdivrl
mov
stos
cmp
mov
cs
dec
cmp
sbb
push
adc
inc
clc
cltd
add
push
sbb
test
jmp
sbb
je
cld
in
call
sub
mov
sbb
and
insl
ljmp
push
and
jge
jl,pn
loop
add
sbb
lea
pop
xor
xorl
xor
out
xor
cmp
bswap
ret
cwtl
pop
or
dec
jb
in
cmpsb
adc
dec
sub
or
fildll
imul
test
aas
add
mov
test
and
lret
sahf
outsl
arpl
lock
outsb
inc
xor
pop
jmp
mov
pop
and
mov
sub
or
or
mov
cwtl
and
mov
dec
lahf
xor
popa
and
xor
inc
insl
es
mov
push
sub
aas
lea
or
in
scas
dec
or
xor
jb
sub
test
call
test
aam
call
fwait
push
in
mov
add
sbb
ja
mov
fidivrs
cltd
mov
test
mov
jnp
xor
into
mov
pusha
dec
fmull
insl
cmpsl
call
into
icebp
cmp
jns
in
jmp
sbb
jns
pop
rcrb
enter
ret
mov
shlb
hlt
adc
out
cmpsl
test
cld
push
lds
pushl
sub
sbb
cmp
xor
ss
xor
repz
ss
dec
lret
sub
iret
adc
and
push
pop
inc
xor
lds
xchg
adc
sbb
push
nop
andl
in
jg
cmp
dec
shrb
movsl
mov
xor
aad
ja
out
push
cmp
or
sbb
movb
mov
push
pop
add
mov
mov
jb
shrb
fldenv
sbb
addr16
mov
sarl
adc
filds
sub
push
repz
out
pop
ficoml
je
adc
cmova
in
ja
das
or
hlt
jne
cmpsl
sub
cmc
add
pop
shl
mov
or
dec
push
inc
adc
mov
xchg
jmp
daa
push
and
aam
push
gs
jg
movsb
sub
xchg
mov
xchg
scas
repnz
inc
mov
mov
loopne
dec
mov
mulb
loop
xlat
jnp
mov
stc
ret
mov
and
mov
sbb
xchg
cs
cmp
repnz
lock
in
cs
hlt
popa
rorb
sub
cmp
inc
xchg
sub
lea
adc
cmp
sbb
ja
xchg
dec
enter
or
lahf
popa
pop
xchg
inc
sti
cmp
fdiv
fnstcw
dec
mov
cmpsl
faddl
mov
inc
sbb
movsb
jl
insl
nop
mov
push
push
es
push
mov
daa
daa
scas
or
insb
xchg
mov
out
pop
inc
mov
mov
lds
mov
xor
ret
xor
mov
in
mov
jecxz
addr16
xchg
andb
lahf
lock
jne
push
jne
adc
shrb
out
push
sbb
ror
scas
xchg
inc
pop
fisubs
mov
mov
mov
xchg
aaa
mov
mov
mov
aam
stos
lret
push
xrelease
imul
lea
adcl
mov
inc
xchg
push
in
aas
leave
fsubrl
cmp
xchg
mov
dec
push
cmpsb
or
sahf
mov
fdivr
rorb
push
ja
je
int3
es
push
push
cmpsl
sub
loop
xor
lea
test
push
push
lock
mov
add
push
movsl
push
push
xor
into
add
pushf
or
cli
inc
pop
mov
pop
mov
rol
mull
test
xor
cmp
cmpsb
jb
mov
adc
xchg
cltd
popf
sbb
xor
mov
test
shll
pop
outsb
jge
xchg
cmp
shr
fs
jno
mov
js
int
pop
dec
sub
fmul
std
jae
dec
test
aas
mov
enter
loopne
lock
push
pop
fdivs
aaa
ja
push
push
adc
xor
imul
aaa
add
cmp
adc
mov
out
arpl
push
mov
add
mov
movsl
fwait
or
jb
mov
push
and
shrb
xor
jno
cmpsb
cmp
and
scas
jge
xor
mov
lods
sub
mov
pop
sbb
xchg
pop
xchg
xchg
nop
push
lock
dec
mov
dec
jno
clc
push
cmp
push
in
repz
pop
lock
out
fistl
in
pop
repnz
lahf
mov
xor
jno
inc
daa
lea
ret
or
cwtl
jp
les
push
imul
xchg
or
fldl
movsl
push
aas
stos
push
sub
pop
out
adc
pop
xchg
xor
cwtl
push
in
ss
punpckhbw
adc
add
test
sbb
cltd
fstpt
cli
add
or
ds
subb
js
xchg
mov
sub
call
ljmp
aaa
xchg
pop
mov
pushf
sub
loopne
push
xorl
push
xchg
lods
or
jno
ds
or
mov
outsb
sti
mov
popa
out
inc
fnstsw
mov
or
xchg
fwait
jne
adc
shrl
dec
pop
or
nop
out
sub
jne
dec
push
jp
pop
outsl
mov
xor
jae
push
mov
shrb
or
leave
jg
fwait
inc
lret
pop
sub
stos
xor
stos
xchg
sarl
sub
gs
in
xor
dec
add
sbb
jnp
cmp
lcall
inc
cmp
aam
xor
lock
test
add
mov
jne
add
insb
add
leave
pop
je
pop
push
and
cli
stc
push
mov
jns
nop
idivb
inc
int
fnstcw
inc
fwait
cmp
icebp
cmp
int3
lahf
dec
add
enter
xchg
mov
mov
mov
js
shrl
cli
rorl
or
or
inc
leave
aas
push
sbb
pusha
sub
outsb
call
mov
js
cmp
inc
or
add
sbb
outsl
mov
xchg
push
cld
test
pop
lahf
mov
daa
mov
shrl
jge
mov
decl
jge
or
imul
dec
outsl
push
push
aam
ja
bound
dec
cmp
ds
adc
test
sub
mov
xchg
stos
lods
jp
stos
lea
fldl
mov
sub
arpl
outsb
mov
sub
cmc
jbe
inc
inc
xor
push
adc
xlat
xor
fistpl
lds
stc
jp
clc
push
xor
mov
lea
shrl
inc
inc
popf
inc
test
nop
stos
es
loop
mov
adc
out
adc
negb
cmc
insl
add
les
das
and
aam
repz
in
out
fidivs
lahf
repz
cmpsb
bound
add
pop
loopne
mov
inc
mov
pop
pop
cltd
xchg
arpl
cmp
pop
or
out
push
xor
or
sti
pop
xchg
negl
jmp
adc
push
push
movsl
jge
repz
adc
push
mov
aaa
cld
xchg
adc
stos
push
jnp
jecxz
stos
mov
outsl
adc
mov
shll
cmpsb
loopew
push
adc
or
and
scas
cltd
pop
cltd
sub
sti
push
inc
xor
popf
pop
sub
es
add
xor
push
nop
aas
sbb
stos
xchg
mov
aad
jmp
out
push
mov
sbb
loop
subl
pop
imul
lods
xchg
inc
xchg
outsb
xchg
cli
or
jbe
adc
jae
and
dec
lods
scas
mov
mov
mov
pushl
dec
jecxz
fidivs
out
arpl
push
cvtps2pd
cmpsl
xchg
insl
jnp
push
dec
sbb
cmpsb
sbbl
inc
mov
mov
jno
outsb
punpcklwd
add
push
enter
fimull
inc
icebp
mov
repnz
jno
or
orb
push
mov
and
cmp
mov
push
shr
adc
push
shrb
push
inc
push
int
adc
cs
pop
mov
jmp
xor
pop
sbb
dec
int3
insl
clc
lcall
xchg
cmp
and
pop
jne
rclb
loopne
lds
push
inc
rcrb
xor
dec
clc
in
test
arpl
cld
or
iret
xor
pop
sysret
ret
pop
das
mov
cmp
lods
push
jle
push
jns
jl
repz
je
cmc
pop
sbb
xor
jbe
sbb
std
iret
fstps
cmp
mov
popa
std
mov
jnp
add
push
outsb
inc
shll
or
push
addr16
into
add
outsb
push
ret
sarl
sarl
jo
stos
into
sbb
jae
test
sbbl
push
xchg
inc
scas
xchg
shlb
cmpsl
xchg
and
xchg
data16
dec
lock
mov
cwtl
outsl
ficomps
imul
mov
mov
arpl
into
jle
xchg
pop
sbb
into
cmp
pushf
bound
sub
loop
mov
shl
sub
popa
sub
cmc
jnp
cmpsb
pop
lret
mov
popf
inc
xchg
xchg
dec
dec
je
cmp
cld
lods
stc
inc
mov
out
lods
shrl
xor
mov
cmp
test
cmp
pop
sbb
lahf
jns
popa
lahf
add
std
fidivrl
xchg
push
or
fwait
mov
dec
sub
sbb
cld
or
inc
sar
cmp
pop
or
sarb
inc
cs
xchg
cli
in
outsl
inc
arpl
outsl
out
out
jbe
xchg
xchg
mov
stc
jmp
jp
xchg
repz
imulb
jge
aaa
and
sub
add
mov
icebp
addr16
inc
adc
dec
push
jecxz
and
xchg
dec
outsb
mov
movsl
test
fwait
lds
js
sahf
popa
mov
xor
mov
sbbb
gs
push
lds
out
pop
inc
cmc
sahf
setnp
add
outsb
push
shr
pop
pop
imul
jnp
jb
jb
xor
out
sbb
mov
jmp
inc
sub
mov
iret
pop
fnstsw
or
add
jnp
mov
mov
xchg
outsb
out
enter
inc
mov
push
sbb
inc
sub
aas
mov
scas
fstpl
loope
sub
cmpsb
inc
xchg
xor
mov
jne
mov
les
lret
repnz
ja
dec
cli
push
inc
mov
adc
cmp
gs
outsl
ds
and
adc
lea
pushf
sti
out
cmp
leave
cld
or
imul
add
xchg
std
mov
inc
cmp
lds
mov
mov
icebp
jg
rcl
fistl
loope
lahf
xlat
mov
cmp
sub
lea
sub
push
push
ja
cmpsb
pop
sarl
push
pop
pop
jns
push
insl
inc
pop
push
jecxz
push
mov
test
push
cs
rcrb
dec
rcrb
popf
push
xor
bound
leave
js
or
out
mov
mov
xor
dec
lret
sub
jmp
pop
adc
pop
clc
cwtl
mov
xchg
cmpsb
ja
cwtl
imul
shll
popa
jo
nop
pop
fsubrl
cmovns
lahf
sub
mov
sbb
out
out
cmpsb
jae
push
xchg
scas
and
in
lods
add
sti
faddl
push
sysret
push
lcall
ret
inc
mov
push
dec
mov
movq
repnz
imul
insb
xor
or
adc
out
xchg
sbb
xchg
cmp
nop
sbb
rol
mov
nop
mov
fdivrs
pusha
inc
push
sub
inc
push
out
add
ret
addr16
movsl
lret
popa
jmp
mov
push
inc
int
stc
arpl
aaa
idivb
aas
mov
or
mov
push
xor
push
cmc
xchg
rclb
dec
mov
adc
lcall
xchg
ds
inc
sbbl
pusha
fisubs
jns
adc
outsl
xchg
mov
lock
add
cmp
push
test
pusha
jecxz
cmp
jl
xor
lret
jns
jnp
mov
sub
sub
movsl
push
stos
rcll
push
cmp
dec
adc
inc
push
arpl
call
sbb
xor
dec
add
sbb
jnp
mov
stos
add
xchg
push
incb
and
jne
push
cmpsl
cli
dec
push
add
mov
aas
pop
out
into
mov
cmpl
sub
les
push
lds
cld
and
sbb
in
xchg
in
loopne
add
cli
mov
movnti
es
mov
loop
and
cmpsb
enter
fstps
cmc
sub
adc
in
cmp
push
adc
shl
fildl
lods
adc
jge
mov
out
mov
cmpsl
cmpsl
repnz
lcall
xlat
mov
inc
adc
pop
dec
ret
mov
popf
dec
sub
mov
lahf
repnz
push
ja
cmp
push
pop
xchg
inc
cmp
aam
leave
and
adcb
lret
cltd
mov
sahf
mov
xchg
and
push
testb
into
jbe
mov
stos
lods
mov
cli
call
imul
jp
xor
es
nop
stos
rcrb
dec
cmc
aad
cwtl
jne
pusha
std
cmp
mov
mov
mov
lcall
cwtl
cmp
mov
addr16
xchg
and
push
mov
dec
push
xchg
sbb
pop
xorl
cs
hlt
sbb
xchg
sub
jl
cmpsl
mov
sbb
fldcw
mov
jecxz
and
and
push
xor
push
in
inc
andl
jo
fwait
lods
jecxz
insl
addb
js
cmp
mov
int
incb
xchg
cmc
dec
mov
cmpb
outsl
mov
pop
adc
push
leave
add
out
jle
cmc
lret
punpckhwd
clc
push
testb
inc
jne
push
daa
aad
nop
loopne
or
mov
pop
mov
xchg
sub
mov
sbb
aad
mov
subl
and
fistpl
mov
repz
xor
aas
shlb
divb
jl
enter
in
pop
jp
lcall
nop
cld
pop
pop
lahf
cmpsb
mov
imul
mov
sbb
hlt
mov
into
sub
loope
cmp
inc
adc
or
addb
add
jns
xchg
int3
call
lret
lcall
sub
mov
mov
in
je
jecxz
cld
add
pop
orl
xlat
fldln2
test
sub
mov
ret
mov
sub
pop
outsl
int3
les
or
dec
imul
ret
hlt
arpl
cmc
and
mov
int3
xor
push
mov
test
mov
cld
ds
icebp
sbb
enter
jo
hlt
arpl
inc
or
sub
and
lcall
pop
dec
idivb
iret
mov
out
push
gs
jb
hlt
or
sbb
cmpsb
cmpb
xor
xor
push
inc
sbb
das
jmp
std
imul
gs
jle
pop
push
jnp
in
stc
cs
imul
cmpsb
js
push
clc
aas
add
jno
test
mov
xor
rorl
popf
jbe
cld
xor
xor
mov
les
sbb
cltd
dec
bound
adc
stos
mov
inc
fistpll
fsubs
into
dec
inc
mov
addr16
gs
inc
xor
ret
mov
idivb
lcall
ds
pop
int3
lret
aaa
inc
mov
push
and
push
xor
cmp
cwtl
pop
out
or
jno
imul
out
call
adc
dec
psraw
push
lea
pop
cmp
mov
inc
inc
adc
pop
fidivs
inc
sbb
insb
cmp
addr16
stos
jns
fimuls
inc
lahf
inc
movsl
push
adc
andps
push
add
test
insl
iret
push
mov
jmp
mov
xchg
loop
mov
lock
sub
rclb
sbb
cmpsb
in
ljmp
jb
divl
inc
dec
sub
dec
mov
sbb
rcl
cld
dec
mov
popf
xchg
push
mov
sbb
xchg
loopne
push
std
movl
inc
jno,pn
rcll
fcom
xchg
je
mov
dec
adc
bound
ret
adc
repnz
or
sub
insb
jne
and
sub
xchg
mov
mov
dec
mov
push
and
mov
insb
shll
into
pop
sbb
out
mov
mov
xor
int3
lods
cmp
enter
je
xchg
clc
xchg
jmp
jl
ja
test
jmp
test
push
mov
clc
push
lods
lods
into
adc
in
out
inc
aas
xor
sbb
xor
ja
push
pop
mov
fsts
bound
hlt
or
mov
outsb
push
rcll
sub
insb
xchg
sti
xlat
mov
xchg
sbb
pop
popf
stc
mov
enter
cmp
pop
sti
add
mov
hlt
add
xchg
pop
mov
idiv
stc
repz
xchg
inc
mov
push
jne
sbb
sar
jb
out
hlt
in
inc
clc
scas
fisubs
gs
pop
int
dec
dec
in
cmp
movsl
aam
sbb
jmp
mov
mov
sahf
sar
pusha
cwtl
scas
mov
movb
jge
add
cmc
dec
mov
movsb
jne
sahf
push
sbb
lods
push
jbe
rorb
pusha
dec
ljmp
inc
fwait
loop
fistl
fs
mov
xor
jno
xchg
adcb
loope
mov
repz
loopne
jnp
cmp
mov
icebp
xchg
in
pop
adc
fisubl
or
ficoml
popa
sti
out
mov
ret
std
insl
outsb
sbb
jmp
inc
jbe
enter
div
mov
cmpsl
or
in
sub
jp
mov
inc
inc
mov
pop
push
cmp
mov
dec
jecxz
xchg
or
out
inc
fwait
cmc
jecxz
out
xchg
stc
jae
dec
lret
mov
imul
in
stos
or
mov
dec
sbb
jb
xchg
mov
ja
cmpps
imul
cmp
testl
jle
test
popf
inc
fdivrp
pop
push
sub
sbb
xchg
push
dec
insl
andb
cmp
loop
mov
mov
pop
ljmp
addl
mov
lods
sbb
in
xor
jbe
dec
adc
outsl
push
insl
inc
jmp
and
mov
xor
cltd
enter
lahf
push
mov
scas
stc
jg
sub
inc
cmc
add
xchg
mov
inc
jne
xchg
aad
add
adc
xchg
mov
lahf
jno
das
jbe
jo
mov
adc
scas
xchg
pop
xchg
stos
lret
data16
int3
jge
pop
dec
dec
test
push
push
cltd
cmp
pop
out
jg
or
sbb
ja
xlat
jge,pt
pop
mov
pop
lahf
sbb
sbb
cmpsb
pop
test
in
loop
enter
jl
mov
repnz
leave
icebp
xchg
mov
sub
dec
js
enter
adc
mov
popa
mov
mov
jae
dec
je
daa
mov
mov
inc
lea
dec
cmpl
scas
daa
cmp
inc
jge
in
xchg
cld
push
cmpsb
test
sub
hlt
mov
scas
shlb
cmp
add
mov
sub
inc
mov
dec
fwait
xchg
insb
ret
ja
pop
je
lahf
ss
cli
data16
sub
jno
mov
sbb
mov
pop
into
mov
add
or
sbb
fildll
dec
and
sbb
jne
jl
mov
cwtl
movl
popa
pop
pop
rcll
jg
push
cmc
bound
sub
push
negl
sahf
inc
add
dec
mov
sahf
mov
dec
jmp
in
mov
fsubrl
cmp
sahf
sarb
mov
subl
sbb
fcmovnb
scas
iret
xor
test
mov
add
test
andb
dec
push
inc
test
shll
and
push
push
pop
adc
xchg
in
mov
pop
divl
bound
add
je
inc
orb
es
adc
stos
pop
inc
lods
icebp
ret
mov
mov
mov
sarb
arpl
clc
or
xor
sub
lcall
outsl
jp
push
dec
mov
mov
loopne
nop
rolb
pop
mov
sbb
insl
fadds
or
dec
subb
shl
movsb
or
movmskps
mov
shlb
in
sub
ds
push
daa
ficoms
mov
mov
ljmp
loop
jns
test
mov
adc
mov
or
xor
mov
shll
rcrl
xchg
std
mov
cmp
out
push
sbb
dec
jg
scas
dec
or
jne
pushf
add
loope
dec
dec
jmp
cld
stos
mov
jmp
and
movsl
iret
pusha
push
inc
adc
fcmovbe
fcoml
loopne
out
pusha
clc
test
xor
sub
test
dec
xchg
and
pop
hlt
xchg
adc
stos
mov
sbb
int
mov
enter
cmpsb
and
movsb
jle
mov
jae
orb
lahf
inc
ja
test
into
pusha
test
cmp
imull
popf
enter
mull
inc
sbb
stos
loope
and
mov
int3
push
mov
aas
and
dec
mov
jge
pop
gs
jae
jbe
mov
shll
add
lahf
popf
ljmp
icebp
push
add
dec
imul
popa
jge
xor
dec
in
pusha
mov
mov
jl
arpl
hlt
aaa
in
push
jbe
int
fwait
pop
ret
test
add
inc
mov
jecxz
fwait
xor
js
out
lods
or
pusha
mov
sbb
or
inc
sbb
mov
dec
pop
xor
or
ret
mov
int3
fimuls
jmp
lcall
xchg
fisttpll
and
sub
insb
xchg
pop
push
add
loope
lret
sbb
fmull
lret
xor
mov
loop
movsb
push
push
cli
into
push
in
aaa
cmp
or
call
sub
push
add
pop
adc
ret
je
lahf
xlat
inc
pop
add
sarl
dec
xchg
lods
mov
xlat
xor
jno
mov
mov
mov
mov
shlb
repz
cmpsb
push
jno
xchg
sub
pop
inc
jno
gs
enter
repnz
sub
mov
daa
fwait
xchg
jo
pop
jnp
adc
iret
jecxz
add
jmp
scas
xor
cmp
or
inc
inc
xor
mov
dec
lock
mov
sub
pop
lods
mov
sbb
int
std
push
or
addr16
inc
popf
ret
jp
addl
inc
fists
inc
push
xchg
or
mov
adc
adc
test
int3
mov
insl
lcall
mov
fs
pop
pop
into
pop
sub
mov
cwtl
mov
mov
aaa
stc
adc
jmp
add
push
or
xor
dec
xchg
sub
lods
sbb
xchg
mov
and
jg
ljmp
ret
xchg
and
fs
aam
sub
jp
mov
inc
pop
sub
inc
xor
shrl
cmpsb
icebp
pop
lds
lahf
inc
dec
sti
in
push
lea
addr16
mov
inc
add
andb
aaa
enter
xchg
test
int3
out
int3
mov
dec
jno
push
je
sub
imul
stc
lock
inc
daa
xchg
mov
inc
ljmp
push
jno
sbb
es
repz
cmc
mov
mov
add
fwait
mov
shrl
xorb
mov
xor
les
dec
mov
xchg
icebp
pop
outsl
xor
cmc
or
insl
loop
adc
enter
jb
pop
adc
nop
imul
je
or
mov
insb
rolb
add
mov
inc
dec
dec
adc
and
rorl
ja
ljmp
fldl
pop
cltd
aas
shrb
bound
push
fs
sub
fsubs
mov
jo
inc
aam
adc
sub
cmpsl
out
mov
adc
fmul
add
rorl
addb
dec
push
test
fsubrs
mov
test
fldcw
pop
test
filds
jns
stc
or
roll
mov
jo
negl
fcmovbe
dec
xchg
mov
add
aam
and
data16
sbb
imul
mov
add
cmp
scas
rcl
enter
fadds
insl
jmp
inc
mov
lds
jl
outsl
in
push
pop
ficoml
dec
push
fildl
int3
sub
mov
cmp
sbb
pop
in
jb
ja
adc
pop
lahf
pop
xor
sbb
inc
cwtl
sub
fildll
add
popf
add
add
and
xchg
adc
pop
lock
jne
dec
movsb
aam
cwtl
xor
push
ja
sbb
sbb
jns
cmp
pop
lret
lret
flds
xorl
and
inc
fmul
jg
mov
fmull
rcrb
mov
lds
xor
jo
hlt
loop
dec
and
mov
sub
mov
cmp
not
sbb
in
push
sbb
lahf
lahf
popf
out
jo
aam
add
jnp
pusha
add
push
into
xchg
sbb
cmp
jnp
data16
mov
dec
lods
rcrl
les
xchg
rorl
cmp
les
add
mov
jmp
xlat
shll
jge
lea
mov
sub
cmc
outsb
arpl
cmp
mov
jo
lds
dec
mov
imul
lock
or
inc
cld
and
adc
ret
push
xchg
cmp
dec
sahf
cmp
jecxz
push
and
out
in
sub
imul
mov
mov
xor
jmp
pop
js
jnp
inc
fildl
and
cli
sub
pop
out
cmpsb
cvtps2pi
dec
sbb
add
and
cmp
inc
add
xlat
nop
inc
stc
repz
jecxz
repz
dec
mov
rcrl
cmp
and
lcall
xor
adc
dec
lahf
jne
data16
jl
test
fimull
xor
test
fs
mov
mov
imul
mov
xchg
inc
rclb
lret
in
jl
data16
fcompl
leave
xchg
pop
or
pusha
stc
xchg
pop
cmp
sub
mov
rorb
in
testb
aas
add
mov
mov
aam
pop
push
push
mov
fdivrs
in
sahf
pop
cmp
jb
push
sub
lods
lds
test
mov
rorb
out
repz
dec
clc
cmp
rcrb
add
ret
push
popf
jns
and
notl
xchg
mov
arpl
jae
dec
sub
jne
out
shrb
xor
sbb
or
cmpb
imul
mov
cs
push
mov
insl
gs
out
lret
dec
mov
f2xm1
arpl
push
rcrl
cmp
jge
test
cmp
jge
enter
fdivl
in
jne
fs
xchg
lods
cltd
negl
lahf
in
jne,pn
pop
xchg
imul
roll
lods
adc
and
jp
divb
out
inc
dec
xor
in
aaa
stos
add
sti
je
fisubl
xlat
jno
mov
mov
ret
dec
jecxz
sub
imul
mov
pop
jle
inc
test
rcrb
xchg
jmp
mov
test
pop
mov
sub
inc
fdivrp
outsb
ds
push
jp
sbb
mov
inc
sbb
jmp
or
sub
sub
stos
cwtl
push
rclb
mov
mov
dec
pop
dec
shl
ss
ds
cli
in
aaa
pop
fistps
mov
clc
and
mov
mov
outsl
das
test
jecxz
in
lds
stos
rolb
cs
shrb
loopne
shrb
jmp
mov
les
je
mov
out
lret
jg
test
aas
xchg
bound
push
mov
or
mov
sbb
rcll
mov
sub
pop
push
les
sbb
fisttpll
fs
push
jae
cs
dec
jmp
repz
pop
loopne
cmc
ja
xchg
sarb
in
fs
cmp
fdivp
fcomip
std
shll
shrl
je
and
cwtl
jmp
mov
ja
xlat
arpl
subb
ret
xor
inc
jmp
mov
cmp
xchg
adc
and
stos
icebp
cmp
mov
mov
sbb
pop
loop
xlat
xchg
lods
adc
mov
mov
jns
std
push
push
loope
cmp
dec
out
or
repnz
jb
int
sbb
mov
les
mov
add
mov
outsl
adc
dec
inc
cmc
iret
lds
inc
clc
arpl
inc
aas
cltd
cmp
out
cltd
repnz
stc
push
pushf
hlt
push
cmp
or
cmp
cmp
push
xor
sbb
pop
cmp
jnp
lods
and
push
add
pop
das
and
iret
in
dec
fwait
call
mov
aaa
cmp
mov
cld
leave
js
xchg
divl
xor
pop
loopne
inc
nop
mov
push
xchg
dec
push
ja
xchg
jmp
ljmp
in
xor
xchg
mulb
iret
xchg
test
add
mov
jp
ja
cmp
adc
inc
and
jle
shlb
dec
jl
loop
fcoms
pop
adc
stos
push
sbb
fstpl
mov
test
xor
lea
cmp
lret
mov
out
fisttps
cltd
roll
add
psubw
jmp
fcmovnbe
pop
mov
add
rep
push
sub
rorl
aam
outsb
lahf
cmp
mov
push
and
cmp
xchg
or
sbb
cmc
repz
lods
adc
int3
xchg
int
cli
andl
in
shrb
xchg
mov
jle
mov
sbb
add
lret
adc
stos
fs
pop
mov
leave
cmp
lock
and
cmp
xchg
mulb
mov
add
lds
jns
daa
push
call
adc
sahf
xchg
dec
cmpsl
inc
leave
jo
insb
cmp
add
add
sbb
cmp
dec
rcl
ret
mov
sahf
mov
jg
mov
cltd
and
out
pusha
out
sub
adc
jp
fadds
rep
inc
mov
mov
add
jno
pop
push
scas
or
mov
pop
mov
mov
test
cs
inc
int
jmp
xchg
arpl
push
sub
sub
sahf
test
pop
fmull
cwtl
arpl
pop
aam
stos
cli
xchg
push
movsb
les
cmp
in
and
scas
nop
and
add
pop
imul
and
fstpl
xlat
sbb
push
push
add
mov
jmp
dec
and
and
ja
and
xchg
sbb
arpl
mov
fstpl
enter
data16
mov
cwtl
outsl
data16
shl
stos
repz
adc
add
in
mov
mov
in
sbb
inc
mov
and
lea
xchg
inc
adc
fsub
arpl
jo
in
das
cld
and
add
cwtl
and
pop
movsl
sar
mov
out
push
add
out
das
push
xchg
lods
insb
pop
push
xchg
mov
inc
shlb
repz
daa
xchg
add
cmp
ja
repnz
xchg
pop
or
jecxz
lea
adc
push
and
popl
repnz
jns
es
into
cmp
loopne
sub
jo
mov
shll
loop
cltd
je
test
add
mov
sub
sbb
out
inc
mov
insb
mov
test
mov
xchg
loope
dec
cmp
xor
and
and
mov
lcall
adc
mov
movsb
mov
jns
cmc
stos
ds
add
outsb
or
and
jp
fdivrl
mov
cltd
push
sub
in
int
rcl
mov
pop
dec
ss
inc
jmp
call
sub
nop
popf
or
sbb
in
xchg
add
xchg
repnz
jno
mov
mov
or
mov
cmp
and
lret
push
cltd
sahf
sbb
fistpl
shll
cmp
imul
dec
sub
dec
cwtl
sti
cmp
aas
shl
xchg
fmul
pop
adcl
cmc
bound
mov
outsb
pop
mov
adc
push
jns
mov
jl
cmp
dec
shlb
movsb
lds
add
or
aas
pop
es
push
outsl
inc
cs
shll
jg
test
addr16
test
inc
leave
pop
lret
push
aaa
ret
fstpl
clc
pushf
daa
jl
dec
icebp
aaa
adc
mov
pusha
add
pop
push
mov
test
mov
nop
faddl
lods
and
mov
gs
sarb
jg
pop
and
enter
mov
mov
jbe
sti
lret
xorl
shll
cmpsl
test
inc
fxch
xor
cmc
daa
stc
nop
insb
and
sub
xchg
push
jl
out
pop
mov
xadd
inc
jl
jne
lods
ljmp
jp
or
gs
mov
popa
push
ffree
jne
sub
sub
cmpsb
inc
xor
xor
adc
mov
pop
dec
mov
fnsetpm(287
add
fldl
push
and
xor
nop
push
mov
jge
cmp
adc
iret
xor
jg
shrb
jne
hlt
les
push
mov
pop
loopne
mov
data16
mov
jnp
ljmp
add
xchg
cmp
ret
push
nop
int
cmp
iret
aam
mov
pushf
push
or
inc
out
sbb
cmpsb
scas
inc
mov
dec
xchg
data16
popa
pop
sti
insb
jns
jge
xchg
sbb
cwtl
jns
inc
sub
pop
pop
int
pop
call
jns
incb
lock
push
cmpl
jnp
notl
ret
dec
adc
push
fldenvs
rsm
pop
sbb
in
xor
cmp
test
xor
lock
xor
movsb
xor
sahf
incl
mov
das
jg
cld
push
xor
lret
inc
loopne
fists
and
pop
fwait
xor
pop
push
mov
sub
sarb
loopne
insl
out
mov
xchg
pop
cmpsb
movsb
sbb
andl
outsb
adcl
and
lret
push
movb
test
loopne
and
xor
fistps
cmp
lcall
xor
push
test
mov
filds
outsb
outsb
xchg
xlat
sti
jmp
fimull
aad
jae
ja
pop
shrl
mov
push
xchg
jmp
dec
sub
push
cmpsl
jo
popa
push
or
cmp
sbb
shrl
dec
mov
out
pop
sbb
xor
in
imul
mov
inc
jae
sbb
xchg
mov
ja
outsl
push
dec
ds
inc
aas
xchg
mov
mov
dec
jmp
sub
push
loope
and
notl
xchg
popf
fdivl
adc
arpl
mov
push
loop
inc
pop
pop
adc
mov
push
into
outsl
movd
data16
insl
jns
fldt
xor
out
xchg
mov
pop
xchg
outsl
xor
add
mov
jg
outsl
push
fwait
outsb
daa
inc
add
xchg
std
mov
into
dec
out
movsb
dec
push
test
sub
xor
fucomi
pushf
adc
and
fists
push
int3
jmp
push
ja
movl
ficoms
jbe
shll
mov
dec
popf
jp
push
sahf
push
add
push
add
lcall
add
xor
mov
pop
cld
test
push
sbb
jmp
xchg
inc
rcrb
mov
lahf
popa
push
ret
out
jp
sub
cmp
jb
mov
inc
or
repz
stc
mov
and
mov
xor
add
dec
lcall
repz
inc
ljmp
scas
xchg
enter
std
mov
ss
adc
in
lods
cmc
sub
xchg
sti
out
das
xchg
adc
push
rcrl
jg
cmpsb
inc
jg
loop
push
rclb
fcomi
and
test
push
testl
or
in
xor
scas
sahf
mov
imul
icebp
push
adc
test
inc
mov
push
stos
cs
mov
and
loope
insl
int3
sub
sub
out
stc
std
and
pop
imul
mov
stos
mov
nop
push
jmp
lods
xchg
cld
jns
mov
mov
pop
das
movsb
sti
fistpll
insl
push
outsb
jecxz
dec
push
movsl
mov
loope
xchg
and
call
mov
nop
lods
bound
ret
mov
test
mov
loop
shrl
jecxz
movl
inc
pop
and
lods
or
pop
mov
sub
jnp
das
jl
pop
call
popa
popa
sti
cld
fdivs
repnz
cmp
lcall
test
cld
incb
xchg
cmp
sub
cmp
cs
xchg
ret
cmpsl
aaa
ret
fisubs
lcall
cmpsl
xorl
out
pop
and
or
xor
int3
pop
jnp
andl
aas
xor
cld
sbb
sub
pop
cld
jo
cmp
mov
cltd
fiaddl
adc
fwait
cwtl
and
les
or
fadds
aad
adc
inc
adc
rcll
mov
sbb
jae
cli
mov
xor
sahf
adc
jg
cli
icebp
mov
addr16
and
cmpl
stos
cmp
cmp
in
jg
aam
rep
je
ja
stos
add
test
in
xchg
imul
or
mov
fistpl
sbb
mov
pushf
sbbb
test
xchg
insb
xchg
add
push
es
push
pop
dec
cmpsl
cmc
sar
faddl
cld
jp
xchg
lea
int3
mov
mov
or
push
pusha
mov
mov
out
movsl
or
mov
adc
cmp
fdivl
sub
mov
or
xchg
cmovle
daa
push
cwtl
and
sbb
mov
mov
jl
les
push
test
inc
dec
gs
push
push
into
jae
sub
jmp
dec
add
out
bound
icebp
dec
lock
or
lea
sub
test
pushf
jecxz
xrelease
adc
cmp
push
xor
xlat
aas
cli
pop
imul
icebp
xchg
roll
mov
add
push
push
jno
aaa
ret
daa
mov
mov
push
lds
xchg
nop
bound
push
sbb
push
pop
xchg
dec
popf
movsl
movsl
mov
push
cld
repz
xchg
pop
adc
mov
loope
or
cmp
and
das
jnp
daa
cmp
je
inc
xor
inc
jg
sahf
in
test
in
push
mov
xor
aas
adc
push
cltd
sbb
mov
arpl
xor
int3
jo
repnz
aas
xchg
sub
out
mov
jbe
shl
mov
add
and
leave
dec
pop
sub
add
pop
repz
shll
fidivs
aaa
add
or
sbb
test
mov
mov
adc
ds
dec
mov
lods
lea
lahf
push
jecxz
cmp
daa
mov
cmp
xlat
divb
imulb
push
lret
test
push
bound
mov
in
adc
in
out
cwtl
aad
push
add
out
insb
andb
pop
xor
leave
dec
loop
imul
icebp
jb
mov
neg
int3
add
pop
jg
cmp
roll
dec
push
daa
mov
mov
adc
sbb
cli
inc
lock
or
inc
roll
jp
out
pop
movsb
ljmp
bound
test
mov
mov
data16
add
dec
and
adc
jbe
lods
shlb
xchg
or
in
xchg
ffreep
sbb
push
cwtl
xchg
scas
dec
rolb
xchg
jne
int3
ss
sbb
jne
jecxz
dec
scas
fcoml
jge
fisubl
lock
fsubrl
pushl
xchg
ja
and
cwtl
in
push
xchg
or
inc
popa
sub
mov
inc
cwtl
int
jmp
jmp
dec
cmc
in
femms
mov
mov
inc
xor
mov
nop
loop
rolb
leave
movsb
gs
imul
sub
adcl
jg
mov
pop
mov
mov
mov
stos
inc
cmp
call
pushl
sbb
jo
ja
dec
cltd
push
fldenv
out
popa
sub
and
insb
int3
adc
stos
stc
jecxz
and
or
xor
fwait
addr16
fwait
in
mov
imul
cmp
aas
push
cs
and
sbb
aam
stos
xchg
outsl
pop
lea
dec
push
adc
pop
aaa
adc
or
pop
mov
iret
adc
testb
jl
dec
pop
sub
xchg
aaa
cmp
xchg
pop
mov
lcall
add
jb
fwait
pop
xchg
divb
hlt
mov
dec
insl
mov
in
push
sub
mov
pop
mov
mov
inc
inc
in
loopne
push
lret
bound
adcb
lcall
jnp
lret
ret
cltd
xchg
or
fadds
fwait
jo
adc
push
div
cwtl
iret
mov
aaa
ret
imul
sub
lods
movntps
add
lea
push
pushw
mov
nop
pop
and
ret
out
aaa
int
addb
clc
push
xchg
dec
test
daa
mov
movsb
inc
insl
inc
addl
mov
out
repz
pop
in
ds
movsb
cmp
dec
xchg
add
sub
dec
cs
sbb
pusha
adc
xor
add
sti
je
mov
cmp
sub
sub
push
lds
fisttpl
dec
sub
push
stos
push
adc
sub
adc
or
jb
and
pop
push
imul
jle
lret
xor
fildll
test
and
nopl
cmp
dec
leave
cwtl
pusha
add
outsb
and
mov
adc
xchg
pop
push
repnz
push
cmpsb
aad
cmpsl
enter
jo
divl
jne
mov
xor
mov
mov
or
cmpsb
std
xchg
jmp
mov
movsl
roll
pop
jmp
inc
and
cmp
mov
inc
incl
push
mov
and
sbb
incl
inc
dec
addl
insb
sub
roll
fwait
dec
jbe
arpl
aad
pop
iret
lcall
cltd
add
rol
mov
rorb
testl
inc
push
lahf
mov
inc
popa
fnstcw
aaa
aas
outsl
bound
jg
sbbb
dec
jmp
push
inc
pop
leave
sbb
and
pop
mov
dec
sbb
daa
push
outsl
ljmp
push
dec
push
rorb
xor
movsb
xor
call
and
push
fwait
push
daa
pop
in
leave
mov
addr16
xlat
pop
push
push
mov
lcall
aas
icebp
pop
jae
iret
lahf
gs
mov
cmpb
xchg
inc
iret
data16
pop
adc
jg
in
adc
test
mov
mov
jae
cmp
mov
dec
int
xchg
test
inc
jl
aad
lret
pop
mov
push
push
aam
out
icebp
dec
xchg
fs
inc
in
inc
or
and
aad
fdivs
pop
push
je
pop
stos
jno
jae
rcrl
bound
ljmp
std
mov
cltd
cmpsb
ja
ret
or
sub
sbb
push
mov
loop
call
lcall
xlat
lahf
scas
cmp
adc
add
je
jo
push
mov
mov
xor
aas
outsl
sbb
xchg
cmp
sub
ret
fmull
lahf
outsb
mov
xchg
adc
push
mov
dec
mov
xor
scas
cmc
and
xchg
or
mov
lods
orb
push
daa
fdiv
aam
data16
stos
sarl
testb
sub
addr16
dec
mov
mov
pushf
aas
or
out
inc
pusha
outsl
testb
inc
lcall
mov
add
stc
and
and
pop
lahf
pusha
es
lret
pusha
pop
divb
mov
scas
fwait
or
push
push
test
cmp
ljmp
sbb
mov
insb
ror
pop
jnp
lock
pop
mov
stos
push
mov
data16
loop
push
ss
mov
dec
lret
pop
push
add
pop
sbb
fstps
jge
jns
cmpsb
xor
and
xchg
dec
loope
push
dec
jo
fwait
dec
xchg
mov
push
jnp
fidivs
sbb
dec
lock
test
in
dec
cmp
jg
mov
out
adc
xor
push
data16
xchg
cltd
inc
popa
cmp
mov
mov
cs
mov
sbb
xchg
push
lret
subb
test
test
xchg
loop
test
jbe
mov
mov
dec
imul
fldl
inc
ja
push
sbb
push
lcall
loop
lea
jns
sub
addb
jle
lcall
pop
fstps
mov
lret
fisttps
add
stos
movsb
adc
xchg
pop
add
push
jo
loopne
push
jecxz
mov
add
out
push
roll
cmp
push
testb
sbb
repz
addr16
jmp
sub
pop
pop
mul
cmp
daa
fldt
add
cmp
jns
sbb
aas
lcall
jle
fistl
xchg
movsl
ja
xor
mov
fs
xor
out
mov
popf
das
loopne
cmp
jnp
mov
or
hlt
lcall
ror
and
lahf
mov
push
shll
push
inc
push
xchg
repnz
and
insl
mov
xor
ret
cmc
imul
aad
sahf
adc
jp
sahf
cmp
pop
add
cld
les
or
cli
in
xchg
xchg
shr
jae
ret
ret
into
andb
and
cmp
xchg
loopne
cwtl
mov
dec
push
lahf
inc
mov
push
xor
mov
shrb
sbb
dec
jg
test
lret
in
loop
shrl
push
lret
loopne
hlt
mov
cwtl
and
in
pop
push
out
fwait
inc
pop
hlt
rcl
mov
xor
adc
push
xor
ljmp
inc
cwtl
xchg
mov
cltd
mov
pop
aaa
aam
pushf
nopl
sbb
pop
xchg
decl
hlt
adc
mov
jg
sahf
lcall
fdivs
scas
add
mov
cmp
arpl
pop
jp
pop
xor
and
and
xchg
and
popa
test
jg
inc
lds
in
mov
xchg
int3
outsb
xchg
cmpsl
inc
xor
sub
pop
sbbb
mov
cmp
or
pop
aad
jle
mov
sub
imulb
pop
mov
push
push
xchg
fidivrs
or
cld
insb
mov
or
push
mov
pop
das
cmpsl
dec
sub
dec
mov
mov
roll
nop
mov
jbe
push
test
movsl
sbb
imul
xchg
icebp
pop
lods
in
and
cmpsl
push
int3
stos
shrl
fwait
call
es
mov
sub
out
add
jecxz
pop
fchs
out
rcrb
cmp
mov
adc
popa
in
mov
clc
push
pushf
inc
mov
addb
mov
std
inc
in
mov
gs
mov
fwait
insb
lret
inc
rcrb
pop
inc
mov
dec
and
push
or
repnz
sbb
es
pushf
push
mov
out
dec
test
jns
xchg
repz
mov
incb
cmp
adc
call
fiadds
ret
pop
sbb
and
or
mov
adc
push
repz
outsb
cli
sub
inc
jns
mov
lahf
xor
and
mov
push
loope
mov
out
jbe
pop
popa
adc
leave
adc
daa
mov
shl
test
or
pop
out
jg
push
call
fs
stc
mov
adc
out
mov
daa
mov
aaa
dec
shll
jo
pop
lds
push
jecxz
push
in
push
outsb
lds
scas
and
mov
aad
test
adc
mov
addr16
push
or
inc
add
loope
jge
data16
and
adc
icebp
into
inc
leave
push
in
or
dec
dec
stos
ret
or
iret
or
faddl
sbb
add
mov
xchg
fwait
lea
xorb
mov
and
cli
std
rcrb
inc
fcoms
ror
movsb
cld
adc
call
lcall
aam
lret
in
push
out
pusha
mov
frstor
mov
out
fnsave
jp
leave
add
addr16
sbb
testl
scas
aas
outsl
movsb
sbb
test
sub
pusha
fdivrl
inc
inc
imul
and
jbe
enter
in
sahf
xchg
pop
dec
out
rclb
pop
fcomps
mov
sarb
pop
in
push
lcall
rcl
dec
mov
xchg
insb
test
xchg
andl
mov
xchg
mov
dec
sub
jp
lret
cmpsl
adc
scas
dec
add
imul
es
in
in
or
cmp
adc
inc
lret
mov
scas
adcb
fs
pushf
insl
pop
mov
and
fdivp
test
jne
popa
xlat
adc
cli
into
add
adc
pushf
pop
and
pop
pop
inc
inc
inc
sub
mov
pop
xor
push
clc
clc
rol
in
mov
mov
aad
loop
mov
pop
insl
cli
das
test
mov
cmc
cltd
mov
scas
add
dec
sub
cmp
mov
clc
jmp
sbb
arpl
inc
xor
scas
popa
push
repnz
hlt
mov
incl
frstor
ret
jb
add
daa
adc
inc
xlat
dec
mov
jno
movsb
xchg
xchg
jne
inc
lods
fistpll
pop
movsb
sub
cli
hlt
into
sub
orl
lods
dec
mov
cmp
sbb
mov
mov
mov
sub
ds
push
pop
fidivrl
mov
jl
mov
jbe
xchg
pop
jge
pop
ret
xchg
rcrl
mov
add
adc
push
aas
daa
push
bound
call
push
mov
cmp
fmull
stos
bound
jle
sbb
inc
ss
cld
dec
jg
and
out
test
test
int3
lods
cmp
fistpl
inc
xchg
fucomi
and
mov
sbb
mov
es
popf
cmp
lds
inc
xchg
xor
insb
in
mov
mov
push
sbb
rcll
rol
inc
ret
xchg
aam
xchg
repz
ss
dec
mov
mov
sub
or
repz
rcll
sbb
pop
jl
lods
data16
cwtl
cmc
ds
sbb
jbe
mov
pop
push
data16
inc
and
sbb
and
push
inc
jecxz
inc
inc
fstpt
push
pop
xor
test
stos
or
les
leave
test
roll
jae
cmp
pop
mov
fidivrl
cmpb
and
push
xor
push
les
rorb
pop
in
dec
insb
sub
xchg
cli
xchg
je
insb
mov
in
shlb
mov
jle
cmc
sub
mov
les
xor
lret
add
dec
aaa
popa
mov
push
cmp
jbe
adc
inc
inc
inc
xchg
movsl
fnstenv
mov
iret
dec
shr
push
jne
xor
inc
sub
mov
enter
mov
in
jae
andl
jle
je
dec
dec
fisttps
or
imul
jl
cmp
cmp
cld
outsl
cmp
or
mov
xor
sbbl
xor
push
sbbb
hlt
xor
lods
jbe
outsb
jo
mov
push
arpl
cmp
lahf
stos
push
dec
push
and
pop
out
dec
sub
scas
push
in
push
fbstp
aas
cltd
push
jns
out
stos
clc
lret
adc
cmc
or
orl
int
mov
aad
fcoml
or
fs
aaa
or
in
jmp
or
cltd
neg
fcoms
sbb
mov
icebp
cmp
jb
popa
jns
andb
adc
cmp
xor
xor
loop
jp
push
xor
adc
pop
sarb
ja
addr16
into
pop
imul
pop
add
sub
jecxz
mov
out
xchg
push
pop
or
pop
sbb
bound
es
mov
jle
daa
xchg
in
push
mov
out
mov
cs
add
push
lcall
dec
je
cmpsb
fwait
mov
add
sbb
push
sub
roll
or
bound
add
test
das
jecxz
nop
mov
xchg
pop
add
mov
xor
pop
mov
data16
pop
cmp
popf
jb
and
inc
inc
lcall
mov
xor
dec
xchg
clc
add
test
cmpsl
pop
out
loope
add
dec
mov
pushf
jo
adc
jmp
push
ret
ja
mov
fwait
out
sub
je
push
or
int3
mov
outsl
mov
movsb
fldt
adc
or
inc
or
adc
inc
insb
sbb
fidivs
xchg
and
inc
jp
popa
or
test
xchg
xchg
jno
jne
out
push
hlt
test
pop
add
cmp
xor
fnsave
das
ficoms
lock
xchg
cmp
sub
addl
inc
out
std
push
repz
push
in
sub
sub
add
fildl
add
inc
mov
insb
lods
pop
add
popl
in
xor
mov
inc
sub
mov
pop
cld
int
sub
shrb
int3
scas
movsb
push
mov
xchg
rorb
mov
and
dec
jae
jno
inc
adc
fmuls
imul
jbe
sub
pop
test
cmp
out
inc
pop
imul
mov
dec
xor
or
jne
loope
stos
cli
rcrb
cmp
adcl
cld
popa
jno
inc
enter
sahf
jmp
ficompl
popa
test
cmp
xchg
sub
ret
push
add
gs
pop
push
mov
aam
push
fldcw
sbb
mov
daa
sub
xor
push
pop
cwtl
je
mov
or
adc
push
xchg
mov
popf
nop
mov
cmc
push
xor
fildll
cmp
sub
sbb
pop
mov
incl
dec
pop
stos
pop
pop
inc
iret
cmc
adc
fcoml
arpl
mov
lret
ds
mov
mov
fmull
xlat
in
loope
ffreep
pop
add
out
pop
and
inc
inc
pop
int
xor
lea
ljmp
test
sarl
test
xlat
fsubrl
xchg
mov
jmp
xor
push
jo
pop
mov
or
or
mov
out
dec
pop
or
jne
gs
jmp
lret
sub
aaa
subb
and
shll
aad
jne
repz
sbb
pop
addr16
add
and
xor
jns
jmp
mov
out
int3
mov
pop
rcll
fstp
addr16
stos
push
push
mov
pcmpeqb
push
lret
int3
sbb
aam
pop
sbb
or
pop
call
loop
testl
rolb
mov
xor
or
pop
push
push
dec
cld
jmp
ret
daa
les
xor
fimull
roll
enter
out
inc
mov
push
mov
lret
stos
xor
sub
lcall
pop
ljmp
loope
fdivl
jle
push
gs
cmp
clc
iret
inc
push
and
pop
push
inc
xchg
loop
les
shl
push
jp
add
push
push
xchg
mov
sbb
fmull
xchg
popa
out
in
xchg
jb
addr16
xorl
dec
jb
js
aas
pop
cli
adc
jmp
cmp
dec
lods
sub
imul
and
sub
pusha
mov
mov
sbb
mov
push
cmp
mov
lret
stos
in
mov
add
adc
jle
call
je
insl
es
dec
pop
sbb
cli
test
xchg
daa
or
mov
pusha
cmp
push
popf
ret
jno
dec
inc
adc
cmp
stc
jne
xchg
pop
pop
cli
jle
add
and
inc
stos
pop
data16
leave
push
insl
xchg
push
div
es
ret
mov
mov
scas
add
sbb
addr16
or
orl
sub
adc
cs
and
stc
mov
bound
mov
es
hlt
jmp
in
shlb
cld
out
mov
cmc
mov
je
mov
add
decl
adc
sti
cltd
xor
lds
inc
stos
dec
pop
jno
icebp
rorl
or
ljmp
cmp
ljmp
xchg
lods
cld
push
jnp
jge
xor
pop
int3
push
mov
sub
mov
and
mov
bound
xchg
push
cmp
jmp
inc
dec
lds
xor
in
fadds
gs
sub
xchg
loopne
mov
std
ret
mov
stos
inc
jle
mov
test
push
add
scas
addr16
aad
pop
out
es
push
and
xchg
pop
xchg
pop
fistps
and
xor
ss
cmp
in
daa
and
push
clc
push
sbb
cli
ret
xorb
ja
sub
aaa
xchg
jbe
ja
lahf
out
call
xchg
das
je
aam
aas
lods
cmpsl
sbb
dec
mov
and
push
add
mov
cmp
les
cld
lcall
fidivs
jge
mov
stc
stos
aaa
dec
es
std
outsb
loop
jns
mov
dec
cwtl
dec
inc
xor
dec
hlt
sub
mov
cmp
pop
test
fidivrs
adc
iret
lds
pop
aas
lahf
inc
pop
dec
mov
add
es
push
mov
pop
add
or
in
add
sub
sbb
sub
jmp
es
add
cld
lret
out
mov
ja
inc
add
and
in
loope
arpl
pushf
push
dec
int
lret
into
sbb
sbb
xchg
enter
imul
mov
test
push
mov
xor
shrb
ja
sbb
stc
mov
mov
addr16
ljmp
jo
sub
fidivrs
sarb
lahf
test
dec
in
lret
rolb
out
testb
in
cmp
daa
je
clc
mov
mov
sahf
rcrl
mov
ss
mov
daa
sbb
ret
jl
andb
sub
lods
push
scas
lds
popa
mov
out
jecxz
ds
movsb
jnp
loopne
pop
in
pop
dec
xchg
or
clc
dec
lock
cs
add
adc
loop
inc
mov
idivb
push
ds
int
cmp
pop
rcl
pop
mov
sbb
fsub
adc
add
push
mov
add
push
sbb
stos
mov
insb
int
fsubr
jns
sub
test
xchg
mov
dec
jbe
fiaddl
scas
sahf
imul
and
cs
mov
push
mov
mov
test
sbb
mov
or
add
test
xor
pop
arpl
faddl
rcrl
cwtl
jne
test
or
mov
fwait
adc
insb
xorb
cwtl
daa
jge
or
scas
clc
mov
sub
lods
push
cs
je
and
fcoml
mov
sti
stc
adc
std
rolb
or
add
int3
jge
mov
push
cmp
cmc
mov
or
mov
jae
fcoms
mov
test
add
incl
ds
adc
xchg
fstpl
cmp
jge
cmp
adc
in
pop
movsl
mov
cmp
les
mov
mov
jl
insb
mov
xchg
stos
push
xchg
adc
or
jg
fs
xor
xchg
or
subb
push
pop
add
adc
mov
xor
pop
out
out
imul
mov
cmpsl
je
rcl
lahf
sar
sub
and
dec
sub
lahf
add
adcb
test
xchg
push
xchg
cmp
and
outsl
in
push
bound
inc
int3
les
xlat
or
cmpsb
fwait
push
xor
leave
enter
int3
and
cs
loopne
or
les
xor
or
repz
insb
xchg
icebp
xor
outsb
push
cmp
mov
add
or
sbb
sub
xor
adc
insb
pop
mov
enter
lea
push
lea
jo
add
inc
daa
arpl
movsl
out
pop
dec
test
sub
xchg
add
adc
mov
inc
aad
dec
ret
jno
and
dec
or
fisubrl
insl
mov
stc
stos
mov
popf
lret
mov
mov
push
push
jne
xlat
jo
lds
fsubrl
imul
mov
fidivrl
push
lods
sbb
mov
out
or
xor
sbb
xchg
out
add
inc
test
pusha
imul
test
dec
push
inc
pop
add
and
mov
stos
jl
jne
or
sarb
mov
addr16
negb
mov
jge
or
dec
jmp
adcl
insb
cmp
sub
lock
cmp
mov
and
or
jne
xlat
frstor
outsb
and
fcompl
jmp
in
xor
pusha
repnz
outsw
mov
push
pop
mov
mov
orl
xorb
mov
push
inc
push
lahf
xor
dec
js
xchg
xor
icebp
movsl
cmpsb
pop
ret
out
enter
add
cmpl
repnz
arpl
add
stos
dec
enter
xor
fiadds
rol
out
jp
call
outsb
sub
leave
jb
int
inc
add
hlt
out
pop
test
cmpl
cltd
xor
outsl
rolb
jle
roll
std
daa
cmpsl
out
popf
pop
jp
adc
int
clc
loop
sbb
divl
mov
inc
lods
lahf
in
and
out
out
out
inc
scas
repnz
push
repz
test
pop
sub
ror
mov
xchg
movsb
jmp
std
push
ret
lea
loope
lret
dec
mov
xchg
sub
push
cmp
inc
addr16
sub
int
rorb
notb
and
outsb
jo
pop
xchg
add
mov
orb
sub
iret
out
pop
adc
repz
pop
inc
or
or
or
push
mov
sbb
jecxz
popa
xor
inc
out
sar
lock
ss
jp
xchg
or
sti
rol
stos
sbb
push
in
xchg
lds
adc
xchg
inc
nop
mov
sbbb
sub
cld
cmpsl
sub
rol
inc
jl
push
pop
paddq
or
mov
push
cmp
pop
cwtl
nop
mov
mov
xchg
adc
in
decl
jecxz
mov
ret
movsl
xor
xor
cmp
lods
fisubrs
push
in
cmp
xor
rolb
mov
adc
dec
cld
sarl
in
call
in
xor
lods
insl
movsl
xchg
adc
cmp
iret
xchg
jnp
jg
pop
xor
loope
js
scas
cli
ret
je
stos
lock
mov
aaa
sub
loopne
sbb
fnstcw
sub
mov
shlb
xorb
sub
test
aam
out
inc
and
notl
arpl
mov
es
enter
push
in
dec
loopne
mov
xor
dec
push
dec
aaa
mov
adc
cmp
cmp
das
pop
sbb
sbb
jae
stos
mov
inc
cwtl
orb
mov
in
insl
ss
mov
pop
daa
xor
or
pop
shll
cmp
jecxz
ret
push
mov
or
mov
pop
decb
mov
and
loop
je
dec
add
mov
in
std
pop
arpl
divb
jp
pop
dec
or
hlt
loopne
in
gs
fidivrl
inc
lahf
mov
adc
mov
test
dec
fisubrs
pop
ja
inc
inc
rclb
mov
lcall
addr16
incl
and
test
jp
test
dec
cld
gs
jns
gs
adc
icebp
pushf
mov
in
xor
mov
test
jl
andb
imul
fimull
add
int
xchg
pop
stc
cmp
jnp
cmpsb
adc
mov
dec
xor
leave
lock
rolb
mov
sbb
pusha
mov
fmull
sbb
movl
nop
arpl
lcall
xchg
out
xor
lahf
and
scas
sti
insl
aaa
mov
push
mov
inc
arpl
cs
call
mov
shrl
pop
push
mov
mov
insl
push
in
shlb
pop
mov
nop
jns
push
cmc
sbb
lret
fdivp
pop
leave
test
and
xchg
add
sbb
mov
int3
push
inc
mov
and
test
jno
push
xor
pusha
rorl
jo
out
pop
sahf
adc
test
xor
inc
pop
sbb
mov
setns
add
in
ljmp
pop
pusha
ss
inc
frstor
adc
fists
divl
inc
idivl
call
shrl
cmpsl
fdivl
push
push
mov
rol
and
sbb
jmp
iret
leave
addr16
push
push
loop
sbb
sbb
pop
jmp
loope
mov
stos
sub
in
lret
or
sub
nop
sahf
mov
fsubl
add
lret
sarb
pop
into
ja
push
mov
jne
mov
ret
xchg
int
es
sahf
push
sti
sub
pop
jbe
adc
mov
push
aaa
pushf
push
ds
push
icebp
jmp
lcall
movl
jae
jmp
aad
push
mov
imul
add
xchg
sbb
sahf
or
idivl
int
aaa
jl
fiadds
lods
sbb
mov
clc
push
aad
mov
jne
sub
jne
mov
aaa
adc
mov
mov
gs
mov
shr
xchg
mov
adc
push
xor
cmpsl
mov
add
push
mov
xor
ret
mov
mov
scas
pop
jecxz
dec
jmp
jo
xor
in
sbb
ljmp
adc
cs
jbe
les
fisubs
jbe
stos
mov
sbb
std
arpl
pop
imul
enter
push
lock
push
inc
push
mov
iret
fsubr
cmp
cwtl
dec
div
repz
sbb
pop
push
lret
xor
sbb
mov
sbb
xchg
dec
jmp
pop
cmp
xor
cmp
outsl
fsubl
adc
xchg
pop
inc
cltd
negb
ljmp
cmp
jno
mov
xchg
adc
sbb
push
inc
fidivs
dec
ficoml
ljmp
sub
aam
test
repz
mov
jg
dec
xchg
cmc
jp
add
jecxz
mov
daa
adc
mov
fucom
or
mov
dec
inc
andl
jge
jns
nop
push
mov
fst
dec
jns
pop
lcall
inc
cmp
cs
pop
jne
jbe
push
push
pusha
repz
ret
mov
shrl
xchg
dec
mov
test
ljmp
add
fiadds
push
sarb
ret
push
scas
in
leave
pop
xchg
inc
std
push
ficompl
shlb
cmpsl
lret
fs
aad
insl
das
cmpl
cmpsl
cld
outsl
rorw
sarl
pop
outsb
push
and
jae
les
movl
cs
rcrb
add
mov
addr16
jbe
test
push
push
cltd
out
fidivs
pop
sub
repz
loope
stc
js
gs
int
fwait
stc
push
dec
xchg
mov
sti
rclb
xchg
pop
jle
xchg
add
push
adc
dec
ret
push
push
les
mov
inc
nop
fcompl
mov
sub
ficoml
adc
pop
shlb
inc
adc
or
out
repnz
xor
mov
mov
xchg
inc
lea
cmpsb
test
enter
or
mov
divl
in
das
mov
sbb
inc
inc
lea
in
movb
movsb
push
push
push
mov
push
inc
pop
mov
nop
dec
dec
andb
sarl
xchg
jno
scas
das
arpl
mov
ss
repnz
xor
int3
imul
jecxz
pushl
adc
pop
fiadds
cmp
mov
andl
lds
pop
negl
lods
add
jle
stos
push
je
or
mov
mov
scas
dec
int3
cmp
mov
data16
xchg
jg
cmpsl
mov
sbb
lret
inc
fsub
adc
push
or
rorb
sbb
adcb
and
add
int
push
add
cmp
lret
xchg
push
mov
std
inc
cmp
xchg
sbb
adc
outsl
inc
les
or
push
mov
stos
xor
dec
nop
xchg
xchg
xor
and
or
inc
int
fsubrs
jae
or
testb
in
imul
imul
mov
hlt
xchg
mov
rol
xchg
les
mov
pop
xchg
mov
push
mov
inc
cmp
lds
push
fnsave
sub
scas
sarl
xor
fistl
je
sub
push
mov
lret
mov
aaa
movsl
xorb
mov
sbb
cwtl
out
sub
mov
call
dec
pop
cmp
mov
push
push
divb
fistpl
inc
mov
stos
xor
lock
pusha
std
cmp
mov
mov
fisttpll
lahf
cmp
jge
out
leave
out
inc
jae
pop
jnp
push
pop
push
movsb
and
shll
mov
cli
les
dec
fwait
js
cmp
gs
cwtl
gs
stos
and
xchg
je
jbe
xor
iret
sbb
js
jg
inc
ljmp
aaa
push
cmpsb
mov
xchg
enter
lock
enter
in
shrb
stos
sbb
pop
icebp
in
mov
cmp
xchg
sbb
xchg
inc
in
fisttpll
js
es
imul
jp
inc
stos
cmp
jle
sbb
ffreep
popa
push
test
mov
aaa
sub
test
in
jmp
jp
aas
gs
or
sub
in
xchg
add
pop
mov
mov
inc
push
out
push
sub
stos
push
loope
aad
push
sub
sbbb
popa
scas
mov
lock
adc
jns
and
add
call
cmpsl
and
xchg
push
mov
movsl
mov
sub
mov
dec
in
xor
add
loop
clc
out
cmp
add
pop
daa
jp
add
out
jmp
cmp
out
cmc
mov
jmp
imul
test
add
mov
mov
xchg
mov
jmp
arpl
push
repnz
orb
imul
rorb
js
les
mov
and
in
cmp
or
push
xchg
pushf
fstpt
push
cmp
add
out
in
or
cli
pop
mov
ds
and
sbbb
jo
xchg
push
test
mov
popa
hlt
xor
add
mov
or
sbb
mov
mov
aad
lahf
outsb
in
jns
inc
pop
sub
and
xchg
sub
rorb
out
cmp
rorb
aaa
inc
es
aaa
lahf
sub
popa
mov
scas
enter
push
cwtl
scas
stos
sarl
mulb
mov
push
out
xchg
xor
aaa
int
test
sub
jg
add
into
aaa
out
out
cli
dec
cmpsl
add
sub
jb
pop
pop
testl
andb
xchg
movsl
insl
lret
lcall
add
pop
dec
push
lcall
imul
jle
pop
mov
fistpl
mov
movsl
ja
mov
inc
mov
shlb
mov
inc
adc
xorl
jmp
out
dec
and
mov
lret
insb
out
lret
cli
mov
mov
sbb
lcall
push
and
jno
ret
cmpsb
jp
lea
xor
scas
repz
movsb
sti
loop
js
scas
pop
push
sbb
test
mov
shlw
mov
call
inc
jae
fldl
data16
std
dec
leave
div
cmp
fisubrl
nop
int
cmp
pusha
es
loopne
pop
test
loop
int3
fcmovb
push
clc
dec
pushl
mov
jae
outsb
inc
fisttps
call
mov
dec
xor
jmp
xor
pop
idivl
shl
jl
mov
jo
inc
or
mov
dec
mov
adc
cmc
xor
repnz
das
push
pop
mov
pop
or
ret
aad
dec
daa
mov
jbe
test
pushf
add
je
inc
cmp
jmp
cmpsb
aad
jne
dec
enter
jl
adc
and
shlb
and
popf
ror
add
outsb
mov
in
lret
push
testl
or
xor
test
out
add
fisubrl
xor
aam
lea
loopne
icebp
ja
jmp
out
fstpl
mov
lret
out
mov
mov
lds
mov
dec
xchg
mov
ret
jl
mov
fldt
outsb
and
pop
adc
or
xor
enter
sbb
repz
mov
or
cli
int3
lods
mov
push
stc
into
or
push
in
fldcw
leave
fimuls
xchg
stc
lock
jae
sub
scas
push
inc
jne
test
pop
cmp
pop
xor
jg
mov
push
in
outsb
pop
cltd
lret
mov
add
mov
and
mov
sub
in
sbb
mov
sub
and
add
cmp
jecxz
mov
xor
lret
mov
leave
lahf
data16
push
add
pop
xor
pop
add
outsl
repz
inc
test
jmp
and
inc
movsb
xlat
repz
bound
dec
mov
in
fwait
rep
insl
inc
in
je
iret
mov
arpl
and
jbe
cmpl
mov
mov
mov
mov
cmpsb
lcall
lcall
lods
adc
jle
hlt
push
pop
xchg
push
nop
sub
mov
lea
dec
clc
test
sbb
pop
or
pop
cmpsb
pop
bound
stc
jnp
push
xchg
cwtl
popa
xchg
sub
aas
jecxz
xor
mov
dec
out
das
loope
pop
addl
push
div
jl
int
ror
add
dec
adc
sub
test
mov
out
dec
add
xchg
jne
xchg
ljmp
jb
sub
xor
cmpb
or
mov
pop
ss
push
stos
rcl
mov
mov
sub
pop
je
xchg
bound
ror
xor
adc
lods
pop
addr16
push
mov
and
adcb
xchg
jns
stos
int3
into
stos
out
out
mov
inc
outsl
arpl
ja
cmpsl
mov
and
scas
and
jne
dec
add
push
dec
popf
shrb
xchg
dec
xor
pop
clc
dec
scas
loopne
movsb
xchg
jne
or
xchg
xchg
mov
mov
sub
push
xchg
jae
xchg
dec
sbb
xchg
push
fstpl
cmpsl
addb
rcrl
loopne
push
insl
lret
mull
inc
add
fsts
scas
adc
xrelease
xor
lods
cmp
mov
or
and
xorb
or
push
jg
jmp
icebp
bound
aam
loope
mov
lret
cmpb
mov
insl
imul
xor
jae
test
cmpsb
add
add
and
stos
dec
inc
loopne
fcom
or
push
scas
adc
sbb
andb
gs
mov
ret
test
xor
pop
and
enter
add
mov
mov
mov
mov
mov
xchg
mov
lods
loop
lcall
and
add
xor
sub
mov
sbb
cli
dec
push
push
mov
mov
mov
pop
and
mov
lds
and
iret
int3
dec
add
adc
inc
inc
int3
xor
jb
inc
test
into
adc
imul
mov
mov
popa
mov
call
jg
dec
jae
jae
xlat
cmc
jge
sbb
ss
mov
jb
lret
pop
xchg
bound
mov
fs
stos
iret
xor
mov
adc
repz
xor
dec
ret
xor
fdivrs
pop
or
movsb
sti
mov
arpl
lret
jp
cmc
sbb
mov
inc
push
hlt
lahf
xchg
insb
xor
lods
test
pop
rcr
mov
int
clc
std
mov
adc
out
popa
xchg
call
jmp
stos
ss
movsb
xchg
cmp
adc
cld
adc
jl
scas
mov
pop
fcmovu
cmp
pop
into
sub
xchg
jbe
inc
xchg
ffreep
leave
and
fs
test
inc
or
in
mov
push
mov
out
add
cld
jnp
fwait
sub
and
cs
je
and
mov
lods
add
je
dec
jg
mov
fsubs
jne
loop
test
pop
ret
jl
jle
xchg
pop
clc
in
jbe
jg
mov
jl
test
idivb
or
fldcw
and
jmp
mov
in
lcall
loop
push
mov
mov
sti
in
in
cmpsb
jmp
dec
or
cmp
pop
jno
mov
pop
inc
adcl
movsl
xorb
shrb
mov
movsl
int
cmc
filds
shrb
pop
fildll
lret
xchg
in
sti
mov
cli
mov
fwait
movsb
in
xor
pop
dec
mov
fnsetpm(287
enter
shll
mov
pop
and
dec
lret
push
push
and
jmp
dec
inc
xchg
cwtl
jb
sbbb
sbb
scas
cmp
out
popf
sbb
ret
xchg
adc
mov
pop
fimuls
ret
rclb
daa
sbb
cli
cltd
rol
sub
xchg
xchg
xlat
ds
pop
add
lret
add
pop
mulb
or
xchg
adc
xor
andl
dec
data16
push
std
ds
add
cmpsb
pop
movsb
lods
sbb
mov
cmpsl
test
jl
rcr
popa
xor
adc
ljmp
cmpsb
mov
xchg
cltd
leave
dec
add
xchg
iret
jnp
xor
aam
push
movsb
repz
arpl
adc
adc
out
sbb
pop
adc
push
inc
jo
pop
mov
cmp
xchg
scas
push
pop
lcall
enter
imul
mov
lods
lcall
add
test
sub
dec
lea
dec
mov
add
mov
pop
inc
mov
cld
pop
fimuls
pop
push
mov
sahf
rol
jno
add
jnp
imul
fwait
into
sbb
pop
sub
fdivl
loope
or
rcll
fiadds
and
xor
inc
pop
dec
and
add
cmp
inc
mov
pop
inc
add
test
lock
pop
push
push
movsb
xchg
ret
int
popa
sbb
mov
push
in
xlat
aaa
dec
mov
fidivs
mov
cmp
xlat
ds
dec
mov
push
in
lock
test
pop
or
fnstsw
fcmovb
test
nop
dec
movsl
xorb
jmp
ljmp
ffree
sub
xchg
jle
push
jmp
fstps
mov
or
jp
xor
je
lods
mov
scas
fistl
add
je
out
jbe
sub
dec
pop
gs
pop
cmpsl
jmp
push
stc
sbb
insl
fnsave
sub
dec
dec
add
cmp
jmp
es
mov
popa
lahf
cltd
xlat
fistl
aaa
jo
and
scas
xchg
iret
neg
sahf
and
test
jp
lods
dec
cli
sub
cmp
and
push
jo
add
xor
addr16
and
xchg
sbb
jns
mov
cmp
dec
sti
cmp
cmp
cmp
movsl
lods
shrl
test
inc
dec
testl
fwait
mov
mov
ds
js
xchg
cmpsl
dec
xlat
adc
nop
roll
push
sbb
pop
stos
stc
adc
mov
pop
daa
sbb
lods
cmp
imul
pop
xlat
adc
push
enter
pop
add
or
cmp
in
outsb
lods
mov
ss
addr16
pop
cmpsl
push
filds
jo
xor
jle
dec
out
xchg
push
mov
mov
shlb
fstp
mov
imulb
push
and
rol
push
or
fwait
cwtl
stc
adc
mov
out
fistps
sbb
int
push
popf
push
xchg
stos
sub
jo
cwtl
lock
scas
scas
xchg
out
lods
enter
call
sbb
lock
jns
ds
sbb
cmp
sbb
push
xor
sbb
sub
int
or
and
or
push
stos
xchg
fsubr
xchg
inc
mov
rclb
or
push
xchg
rorl
cmp
out
fimull
in
mov
sbb
in
adc
adc
stos
fiadds
sarl
fnsave
andl
jge
int
lea
call
mov
cmp
cmp
xchg
mov
xor
jmp
sahf
mov
mov
mov
xchg
incb
insl
xchg
test
lods
inc
call
and
ret
stc
mov
mov
mov
xchg
rol
add
adc
or
xchg
int3
shrb
jp
fimull
leave
std
out
cmc
daa
push
cmp
mov
clc
outsb
cs
pop
sahf
repz
pop
fcmovnu
xchg
sbb
fisubrs
add
xor
repz
pop
ret
aam
outsb
push
out
sbb
les
adc
jno
sarl
or
stos
pushw
pop
imul
adc
lds
popf
cmp
cmpsb
add
repnz
aas
jb
repz
jl
mov
cmpsb
test
aam
jnp
outsb
out
sub
xchg
xor
push
jp
dec
xchg
imul
pop
cmp
mov
js
enter
xor
pop
test
push
ret
cwtl
add
pop
cld
jl
aam
fcmovnbe
add
xor
mov
insl
je
bound
pop
cwtl
cwtl
rorb
jnp
sbb
and
mov
pop
mov
lods
and
fnsave
lea
cwtl
mov
mov
inc
inc
sar
push
aad
pop
push
sub
jg
jb
ffree
push
lock
or
cmc
scas
jnp
dec
subb
int
ret
loop
jae
int
mov
push
rcrl
jmp
data16
shl
arpl
push
mov
fcomps
test
xchg
and
mov
and
pop
outsl
adc
dec
and
jnp
xchg
aam
sti
in
mov
fwait
lahf
dec
xor
mov
lahf
mov
fdivrl
test
push
cmp
clc
lret
add
les
mov
adcl
sub
rcrb
pop
push
and
shlb
fdivr
xchg
cmc
adc
cmpsb
fcoml
adc
insb
sbb
xor
push
sbbb
add
add
mov
mov
add
out
inc
fld
xor
xchg
xchg
test
mov
mov
cli
icebp
xor
pop
lret
inc
cmp
sbb
dec
push
gs
add
and
aad
repz
loope
adc
test
imul
inc
pop
push
lea
out
or
enter
aam
dec
jp
sub
add
xor
or
test
ds
movsl
mov
mov
fidivrl
sbb
insl
aam
jbe
mov
xchg
in
pop
add
mov
mov
dec
stos
cmp
xchg
push
pop
cmp
imul
or
test
pop
ret
mov
add
daa
iret
pop
push
mov
jnp
push
adcb
dec
ret
mul
shlb
jb
das
in
xor
fs
push
stos
mov
inc
pop
das
stos
test
lahf
fmul
mov
imul
pop
mov
jnp
cmp
mov
fstps
inc
arpl
mov
out
push
lock
cmp
sub
or
and
xor
out
inc
in
std
mov
xchg
mov
iret
test
rolb
fs
mov
popa
and
popf
pop
test
xchg
push
push
pop
aad
lcall
loope
sbb
pop
lds
faddl
dec
fiaddl
pop
sub
addr16
inc
mov
cmp
sub
cmp
mov
add
imul
jle
or
sbb
xchg
dec
rcrl
pusha
xchg
mov
cmp
fcmovbe
daa
nop
mov
arpl
shl
lahf
std
addr16
loope
sub
rol
cld
loopne
xchg
or
cmpsb
and
lret
mov
pushf
push
aas
pusha
adc
call
or
push
cmpsl
loopne
cmp
dec
inc
xor
mov
dec
push
xchg
mov
testl
pop
jg
stos
cmpsb
cmp
and
cmpsl
ror
mov
les
std
mov
cmp
fidivl
lods
xor
xor
jmp
lods
imul
mov
dec
adc
mov
jnp
jecxz
fmul
shrl
dec
mov
adc
enter
enter
dec
mov
sub
pop
dec
arpl
push
arpl
xchg
adc
out
jle
mov
lock
sbb
leave
push
xor
imul
jnp
dec
pop
or
jp
bsr
mov
mov
subl
andl
popa
mov
scas
push
push
pop
clc
xchg
mov
ja
sbb
dec
pusha
xchg
mov
jp
enter
mov
or
dec
pop
test
xor
jne
and
jne
add
adc
mov
jmp
rclb
pop
sub
push
data16
ja
mov
mov
js
pop
xchg
push
jae
mov
xchg
pop
mov
sub
jae
lahf
mov
movsb
insl
movsb
cmp
lret
sarb
flds
pop
jne
mov
sub
push
int3
lea
les
scas
mov
lret
rclb
push
xor
out
rcrl
lods
sbb
push
stc
scas
pop
ja
ljmp
mov
enter
dec
enter
push
fsubrs
in
cmp
and
stos
imul
fists
mov
gs
sbb
inc
dec
or
mov
pop
std
popa
xchg
jl
push
and
js
sbb
mov
mov
xchg
mov
fs
pop
loop
xlat
xchg
mov
push
adcl
das
inc
xchg
inc
jo
push
push
cmp
movsl
jnp
xchg
add
xor
fnsave
out
dec
cmp
inc
mov
xorb
mov
mov
adc
out
lods
imul
loop
xor
pop
in
xchg
or
adc
stos
insl
sbb
repnz
negl
xchg
loop
dec
int
pushf
icebp
mov
rcrb
lods
pop
sbb
clc
push
adc
stos
pop
inc
test
mov
stos
insl
mov
das
adc
add
dec
popf
insb
scas
push
sub
mov
icebp
rcrb
push
sbb
dec
pop
pop
mov
mov
pop
call
jae
xor
rorb
fwait
out
xchg
xor
lret
dec
xor
cli
int3
dec
and
cmpsb
fdivrp
push
push
inc
pop
pop
mov
lods
sti
shlb
add
inc
lock
popa
arpl
call
pop
adc
movsb
fidivrs
lods
scas
mov
cld
loopne
lret
pushf
int
enter
daa
aas
pop
add
fdivr
aad
jge
sbb
pop
lea
fsubrl
int3
aad
sbb
mov
sub
inc
inc
out
inc
in
dec
mov
cld
imul
or
ljmp
das
add
inc
inc
test
mov
lea
fstl
stos
mov
fistps
pop
lds
pushf
fs
sbb
cltd
into
jne
inc
push
sti
je
lret
rcll
and
mov
and
fiadds
jns
int3
push
lods
cwtl
rolb
fildl
int
inc
jnp
cmp
ret
scas
insb
dec
xor
les
sahf
push
arpl
sahf
push
aad
pop
xor
mov
sahf
jmp
push
test
xchg
adc
ss
xchg
jne
int3
ss
pop
repz
mov
leave
sub
test
aad
cmp
mov
mov
enter
mov
mov
pusha
dec
inc
jo
adc
fwait
mov
fstpt
jae
outsl
fisubl
pop
xchg
push
push
pop
dec
ljmp
bound
stos
repz
loope
jle
xor
or
cli
mov
pushf
pop
inc
stos
jbe
dec
push
sub
pusha
ja
rcl
shl
pop
push
rorb
add
xchg
and
adc
jmp
inc
mov
clc
inc
test
jle
mov
jecxz
out
fistl
fimull
dec
sbb
gs
imul
sbb
call
je
xchg
and
jg
mov
aaa
ss
mov
call
int
xlat
fwait
ret
and
mov
jae
push
mov
lcall
or
push
scas
mov
fistpl
jg
mov
push
test
and
xor
ficomps
sbb
pop
jp
sbb
std
mov
mov
mov
iret
xchg
mov
stos
mov
js
scas
push
mov
insb
mov
sub
xor
or
lcall
pop
mov
icebp
and
mov
stos
out
int3
jne
and
and
mov
mov
and
imul
daa
shlb
outsb
or
sub
or
stos
jp
iret
in
pusha
jo
addb
es
inc
or
fistl
push
lock
mov
sub
mov
out
cmp
ja
push
add
popa
lret
adc
icebp
popf
mov
xchg
mov
fstpl
inc
das
inc
pop
repnz
jno
repnz
push
jmp
mov
pop
mov
xchg
popa
dec
loop
ret
sub
fiaddl
xchg
div
cmpsl
xchg
inc
popf
fsubr
dec
fcoms
sahf
repz
rorl
dec
movlps
xchg
jmp
dec
rorl
icebp
dec
fisubl
inc
adc
xor
ljmp
aad
nop
movsl
leave
inc
data16
push
or
test
popa
fisubrl
pop
pop
in
cwtl
inc
xchg
insb
inc
arpl
and
fdiv
aaa
rcl
mov
dec
lret
bswap
hlt
mov
test
out
xor
mov
gs
lret
insb
xor
push
fs
dec
lahf
std
xor
dec
into
pop
xchg
mov
scas
inc
insl
loopne
js
js
sbb
aas
ret
imul
test
pop
je
sti
arpl
shl
push
dec
jne
pop
mov
sub
push
cmp
shlb
stc
push
mov
daa
jp
ja
subb
repz
add
loop
out
push
les
movsl
xchg
xor
testl
fadds
mov
fisttpl
cmpsb
push
insl
fcmove
cmp
cmp
inc
or
inc
sbb
add
imul
dec
xchg
and
jmp
push
or
out
jecxz
pushf
test
add
dec
repnz
imul
mov
mov
jb
inc
jmp
lret
add
adc
test
cmp
sbb
jae
push
pop
lret
test
rol
pushf
shlb
mov
icebp
sbb
cmp
xchg
pop
mov
mov
sbb
dec
loope
sbb
popa
or
jne
rcrb
mov
rclb
ja
insl
jnp
ljmp
out
push
mov
sbb
mov
ss
lret
repz
adc
clc
inc
das
test
mov
ror
lods
push
pop
filds
push
jno
jmp
jno
add
loope
mov
fistpl
lods
stos
adcb
sub
push
push
add
pop
sub
cld
jno
sbb
lcall
out
std
xchg
popf
cs
and
testb
sbb
stc
mov
add
sbb
aam
add
sbb
lret
jnp
mov
iret
sub
inc
jmp
push
rol
mull
sub
xchg
jno
ret
icebp
add
inc
lret
movb
cld
xchg
mov
loope
test
xchg
lds
add
mov
call
insl
addr16
xor
or
jnp
lahf
das
pop
sub
aad
lahf
mov
mov
pushf
mov
jne
xor
push
dec
sbb
shl
out
xchg
ds
xorb
cld
xchg
ss
push
mov
sbb
in
sub
dec
int
push
ja
jae
adc
jmp
fiaddl
jg
pusha
inc
jg
mov
lret
data16
xor
fwait
rorb
cmp
mov
dec
lret
inc
in
out
fmulp
mov
mov
sbb
sub
sbb
xchg
or
inc
cmpl
fs
jnp
cmp
xchg
dec
fwait
rolb
lret
xorl
sbb
dec
flds
push
iret
sti
inc
mov
gs
xor
xchg
je
ss
sbb
stc
fisubl
cmp
mov
arpl
add
loopne
pop
loop
movsl
and
cwtl
int3
xor
xlat
jo
mov
mov
lahf
cmp
je
loopne
int3
sbb
popf
mov
outsb
cli
stos
cmp
mov
xchg
push
leave
mov
xchg
outsl
mov
cmp
mov
loopne
dec
cmpsl
mov
cmp
test
js
mov
and
idivl
inc
cld
shr
pushf
push
fs
xor
ljmp
mov
imul
adc
sub
inc
jmp
cmp
jle
dec
iret
mov
cmp
xchg
stos
pop
xchg
jbe
and
dec
imul
ds
clc
jns
lods
lret
ss
stos
shlb
std
lock
shl
mov
arpl
dec
fdivrs
xchg
ss
dec
mov
insb
mov
inc
arpl
inc
inc
push
enter
and
sbb
pushf
andb
sahf
pop
cmp
test
pop
dec
daa
sub
and
push
mov
adc
je
pop
mov
sub
xchg
mov
leave
sahf
xchg
mov
xchg
jp
adc
es
and
fwait
movsb
mov
ljmp
jae
mov
push
nop
dec
stos
subb
rclb
xor
inc
jp
jg
inc
cmp
scas
fldcw
and
mov
aaa
mov
stos
or
dec
in
cltd
aaa
in
and
lret
sub
mov
pop
mov
mov
imul
or
gs
jb
pop
in
in
addr16
jp
fstpl
mov
mov
jne
rolb
inc
xchg
cmpsl
mov
push
mov
fs
sahf
lahf
popf
into
jmp
jb
jle
dec
dec
add
mov
xor
cmp
imul
mov
dec
out
sbb
jnp
push
mov
xchg
mov
pop
out
sbb
orl
mov
lods
adc
mov
inc
ja
insb
in
mov
ret
shlb
inc
cld
popa
mov
jle
or
xchg
mov
push
cmp
gs
cwtl
mov
pop
jl
cmc
add
shll
cmp
aas
sub
push
jnp
mov
mov
mov
sbb
pop
xor
sub
xchg
sarb
jne
xor
adc
pop
adc
fistpl
jg
add
gs
and
cmc
mov
and
dec
nop
push
push
hlt
sti
loope
inc
loop
xor
adcb
lcall
repz
fsub
stc
in
sbb
ret
add
sahf
add
inc
loope
in
ljmp
and
xchg
rorl
fsts
push
mov
loop
call
pop
lods
lock
ds
pop
adc
cwtl
cs
xchg
push
test
dec
or
mov
std
inc
sbb
sbbb
pusha
add
dec
outsl
popa
repnz
cmpsl
rcrb
lods
adc
icebp
movsb
and
arpl
pop
testl
movsl
dec
roll
sbb
ljmp
repz
or
inc
shl
insl
mov
arpl
adc
jp
mov
cld
out
and
inc
or
sbb
adc
inc
inc
mov
sahf
rcrl
cmp
sub
pop
mov
jns
jne
andb
jl
stos
xor
hlt
or
loopne
loopne
loope
inc
sbb
adc
push
jns
sub
cmpsb
jmp
popa
inc
jbe
shl
nop
xchg
push
shl
inc
repz
mov
das
imul
mov
rcll
and
cmp
je
and
mov
xchg
int3
loope
sbb
aas
mov
push
jo
sbb
mov
dec
in
sub
fs
sbb
out
push
sbb
pop
xchg
popa
stos
xor
xor
mov
or
xchg
std
jns
in
in
cmpsb
pop
jmp
cltd
xchg
test
adc
je
jp
outsb
imul
mov
xlat
inc
sbbl
xchg
add
sbb
out
push
xor
arpl
jo
inc
jns
inc
test
push
add
cwtl
mov
xchg
out
ds
repnz
mov
add
cmp
js
lret
sub
add
ret
cmp
lahf
push
and
mov
lea
pop
pop
pop
iret
arpl
push
ja
push
jge
pop
sub
or
and
lock
mov
or
dec
push
pop
out
out
js
pop
cs
ja
cmp
xchg
mov
ds
mov
mov
ljmp
adc
adc
mov
sbb
into
lods
fnstcw
inc
sbbl
adcb
movsl
lret
push
scas
xlat
cli
jle
cld
fldl
popa
push
and
mov
ffree
dec
nop
push
mov
cs
rclb
add
xor
scas
ljmp
pop
pop
xor
dec
out
cmp
sbb
subl
mov
jle
sbb
scas
xchg
cltd
push
dec
ja
inc
inc
mov
push
cmp
ret
pop
call
in
mov
adc
enter
scas
aas
jmp
adc
jo
pop
cli
cli
fcoml
aad
stos
test
inc
sar
sbb
add
popf
mov
pop
int3
sbb
ret
or
or
push
add
adc
xor
xlat
repz
clc
push
cli
movsl
sub
pop
jnp
and
ret
pop
cmp
fs
jmp
cmp
mov
aam
jl
inc
xchg
inc
in
sti
xchg
fcom
mov
ljmp
stc
lods
cmp
push
scas
aam
repz
xor
fldcw
enter
push
nop
push
add
fdivrp
lcall
pusha
rol
push
sahf
push
pop
pop
movsl
ficoml
lcall
mov
fs
scas
fnstenv
pop
mov
sarl
sbb
inc
jl
dec
inc
test
xor
fwait
push
mov
rol
imul
cmpsl
mov
xlat
jno
add
fcomps
daa
xchg
pop
mov
test
stos
pop
inc
or
ja
add
sub
dec
sub
adc
cli
xchg
int3
and
lcall
ret
out
jmp
popa
ret
inc
gs
fs
test
mov
cmp
out
jns
mov
pop
clc
lret
lds
sub
int3
mov
sbb
adc
sbbb
jecxz
shl
sub
xor
lea
idivb
aam
imul
lahf
add
mov
dec
aaa
add
mov
ret
scas
mov
or
out
call
lret
jnp
adc
xchg
mov
mov
das
pusha
pop
xchg
shll
xor
xchg
xchg
inc
add
mov
xor
cmp
lret
jmp
inc
cld
loope
xor
shll
in
lea
cmp
ds
sbb
xchg
cli
and
mov
lods
icebp
mov
pusha
mov
repnz
daa
cmpsl
dec
cmp
push
pop
andl
sub
into
inc
mov
into
lret
xor
int3
jae
sarl
and
cmc
pop
sbb
or
loope
loop
push
call
inc
xchg
or
dec
pop
popl
or
and
mov
and
add
sub
test
fsubs
repz
cmc
inc
shld
jmp
in
jbe
sbb
mov
outsb
loope
mov
jb
mov
push
sbb
adc
adc
ret
add
inc
and
imul
shrb
and
push
jns
stos
mov
mov
popa
out
lods
push
pop
leave
std
mov
adc
dec
imul
jns
cli
push
xor
leave
test
in
adc
mov
imul
mov
popa
sub
out
ss
stos
outsb
mov
push
das
mov
in
dec
out
leave
jbe
sahf
in
test
xchg
xor
je
popa
mov
sub
adcl
inc
cs
dec
aas
scas
movb
cmp
psubusw
push
push
sub
and
fldl
xor
addr16
shll
push
ds
aaa
cltd
lods
stos
test
std
aaa
mov
dec
push
xchg
sti
ds
test
sub
in
int
rclb
std
call
jecxz
mov
popa
movsl
sti
out
mov
push
pop
sbb
or
push
inc
aaa
nop
dec
and
push
repz
jo
add
add
xlat
je
loopne
fistps
loope
mov
pop
in
lods
inc
xor
cmp
push
lret
cmp
jl
cmp
sub
jmp
mov
in
mov
aad
pop
add
lds
bound
addr16
or
lahf
stc
adc
subl
popf
inc
enter
scas
dec
addb
mov
loopne
add
jge
cmc
in
fists
notl
test
sbb
aam
push
push
movsb
lods
inc
mov
or
gs
aaa
cld
imul
sub
jmp
pop
or
shrl
mov
inc
push
push
xchg
call
and
sub
mov
mov
sbb
loopne
xor
jno
fstl
mov
xor
mov
push
scas
fiadds
scas
mov
test
idiv
lret
push
das
lret
jo
cmpsb
call
push
or
popf
mov
test
add
xchg
arpl
insb
push
cltd
ljmp
mov
push
add
add
push
jno
icebp
cmpsb
xchg
mov
mov
cmp
push
movsb
adc
lcall
test
adc
push
lsl
test
outsb
jecxz
push
push
loope
adc
adc
sti
jo
sub
pop
and
scas
lea
out
mov
adc
inc
xchg
js
nop
sub
mov
and
mov
and
ffree
insl
lds
jb
or
mov
insb
mov
adc
imul
pop
mov
fmull
pop
sbb
bound
loopne
adc
iret
popa
adc
adc
lock
or
leave
pop
test
imul
or
in
jnp
mov
inc
mov
pop
push
andl
inc
inc
rorl
test
inc
addr16
pop
inc
pusha
test
into
or
int
mov
nop
pop
jle
push
std
inc
xchg
cmpsb
shll
popa
pushf
xor
mov
ret
into
mov
add
out
mov
in
or
aad
adc
or
sbb
out
psllw
cmp
push
cmp
test
mov
ss
inc
xor
adc
xor
adc
ret
mulb
xchg
sbbb
jp
scas
popf
clc
or
push
scas
inc
and
sub
repz
scas
mov
mov
lret
int3
inc
add
jp
ret
test
xchg
push
inc
into
sbb
incl
mov
imul
lods
xchg
dec
call
lahf
cmpsl
shrl
in
mov
or
addr16
or
dec
sbb
jmp
addr16
daa
inc
jbe
mov
mov
jnp
cmp
rcrb
and
movsl
imul
into
lcall
adc
pop
ret
cld
lahf
in
divb
call
or
push
or
arpl
adc
push
cmp
addr16
aas
cmp
lods
mov
out
adc
fucomp
xor
mov
inc
popl
mov
es
fadds
mov
jae
test
push
adc
insl
or
mov
test
jne
xor
dec
int
push
xor
or
frstor
int3
mov
xor
ss
cmpsl
jb
cmc
mov
mov
xlat
jne
test
mov
aaa
jmp
push
inc
loop
leave
jmp
pop
stc
out
out
inc
shl
cmp
add
jp
mov
pop
jmp
cmp
mov
ret
movsl
inc
in
shrb
xlat
and
ja
push
lcall
es
cmpsb
pop
mov
push
int3
gs
fbstp
sbb
and
xor
mov
jnp
mov
dec
pop
jne
cmp
hlt
in
xor
mov
call
outsb
loopne
movsl
sub
jmp
addr16
dec
mov
pop
mov
jae
pop
leave
mov
dec
fucom
lahf
dec
testl
fildll
cmp
mov
jmp
push
and
mov
inc
cmpsl
adc
cmp
adc
inc
adc
jnp
inc
nop
jge
jp
xchg
lret
xchg
bound
mov
test
cmpsb
add
xchg
sub
nop
in
fcmovnu
and
jl
lock
pop
in
jecxz
dec
inc
ss
or
xor
or
adc
mov
in
push
ret
dec
dec
cmpb
movsl
arpl
fldcw
mov
push
scas
lcall
inc
push
sub
add
dec
sub
xchg
and
xor
xor
int3
orl
xchg
adc
cs
jmp
pop
mov
jo
hlt
movsl
loop
ficomps
adc
or
idivb
xchg
sbb
adc
mov
xchg
in
and
mov
arpl
in
mov
out
in
mov
repz
in
fs
pop
mov
inc
fiadds
frstor
xor
int
rcll
dec
push
jl
mov
push
or
movsb
sub
fdivrs
jbe
in
adc
cmpb
test
fcoms
fmuls
movsb
push
std
mov
into
jl
lret
cmp
pop
xchg
imul
out
or
mov
insb
lcall
loopne
stos
xor
xor
xor
icebp
inc
pop
daa
sti
fdiv
hlt
andb
inc
dec
adc
pop
dec
cmp
pop
adc
inc
imul
pop
add
jbe
dec
int3
imul
inc
cmp
andb
in
scas
add
xor
pop
stc
or
push
std
stos
xchg
or
xchg
dec
sbb
push
in
jo
add
mov
in
notl
scas
or
out
cmp
imul
push
jo
in
dec
pop
outsl
in
daa
cli
jbe
sbb
push
fisubrl
aam
lock
rorl
inc
aam
std
mov
pushf
fnsave
push
sub
mov
rcrl
jg
test
mov
les
test
aas
arpl
fadds
pop
lods
xor
mov
dec
inc
mov
iret
mov
jne
dec
lods
pushf
aas
lcall
sbb
cmp
ljmp
mov
rcrb
fcmovnb
fidivl
fmuls
lret
into
inc
fcoml
sti
cltd
mov
dec
aam
push
rclb
or
sub
xor
pop
ja
js
cmp
xchg
sarb
inc
jne
xchg
sbb
or
out
cmp
mov
stos
insl
mov
inc
push
in
inc
popl
push
rorb
scas
sbb
xor
sub
pop
imul
mov
loop
daa
sbb
outsb
test
mov
sub
add
mov
std
ret
out
cmp
lcall
pop
clc
push
xchg
testl
xor
das
sbb
pop
loope
ljmp
addl
rcrb
jg
test
mov
icebp
pop
in
push
mov
inc
out
mov
dec
xor
mov
sub
sub
push
inc
idiv
in
cmc
leave
xor
subb
lock
mov
jmp
pop
jmp
and
out
mov
cli
mov
mov
jno
pop
sbbl
push
scas
mov
push
pop
imul
mov
ret
pop
notl
mov
cmp
ja
mov
out
pushf
add
outsl
cmc
enter
push
cs
loope
jge
dec
mov
inc
fsts
out
fcmovbe
xchg
adc
sub
das
jmp
ret
inc
sub
arpl
xchg
out
aas
cmpsl
or
and
and
xlat
sbb
out
xor
sahf
loop
mov
shr
ja
push
jg
repz
xor
mov
pop
ds
and
push
adcb
movsl
dec
adc
insb
jae
shl
dec
insl
sbb
jle
outsb
and
cmp
and
insl
mov
sbb
es
in
push
leave
in
lahf
sti
mov
or
mov
cltd
ss
jno
ret
or
rcll
push
stos
sti
jge
pushf
adc
fwait
pop
cmp
ret
xlat
push
and
lcall
mov
dec
in
shl
push
lret
cmpsl
daa
push
mov
notb
mov
mov
adc
pop
ficomps
fwait
aad
mov
push
jecxz
and
inc
dec
adc
out
jle
aaa
mov
popa
rcrb
pop
push
and
xchg
imul
xor
std
add
lret
ret
movsbl
jne
sbb
mov
xorb
adc
hlt
insl
sub
mov
cmpsl
iret
pusha
cmc
out
bound
cwtl
xlat
and
scas
scas
cmp
dec
sti
imul
mov
repnz
outsl
dec
add
push
xor
scas
xchg
cmp
je
pop
or
cwtl
lea
mov
stos
dec
jb
roll
jmp
mov
mov
pop
dec
bound
loope
movsl
aaa
mov
rorb
aas
daa
xlat
cmp
dec
inc
enter
stos
cs
je
scas
mov
and
rol
lods
pop
sub
or
jl
xchg
lock
mov
inc
adc
bound
jl
sbb
jo
rcrb
repnz
dec
nop
ret
xchg
outsl
lcall
add
push
mov
xchg
cltd
outsl
mov
movsl
outsb
insb
leave
repnz
imul
cmpb
dec
lret
jns
iret
inc
mov
movsl
filds
insl
mov
jg
push
add
adc
mov
sarl
mov
inc
lret
mov
int
dec
pop
or
sti
and
pop
jae
repz
push
sbb
inc
lret
inc
xchg
jge
inc
lds
push
sti
out
xor
das
cmpsl
inc
in
mov
sbb
lret
adc
sub
mov
pop
jecxz
push
loope
push
ljmp
cmpsl
cmp
mov
mov
add
and
mov
add
pop
pop
inc
mov
jae
push
icebp
pop
mov
stos
rcrb
out
filds
add
push
pushf
cmp
cmp
and
xor
push
fld
je
in
xchg
mov
lcall
leave
shlb
loope
mov
jmp
mov
add
and
test
mov
test
into
mov
es
push
mov
jp
das
rcrl
shlb
push
rol
mov
jnp
data16
loope
rcr
sub
xchg
sbb
cmp
ret
aad
jge
int
sbb
in
lret
fadds
repz
movsb
lods
mov
leave
dec
sbbb
push
outsl
mov
sub
popf
imul
push
add
xchg
testb
push
addr16
lcall
out
cli
inc
mov
aaa
js
mov
lods
arpl
push
leave
repz
es
cmp
fldl
mov
out
pop
je
xor
jge
mov
sub
cld
cmp
and
cs
and
mov
or
mov
pop
jne
pusha
push
and
in
dec
xor
mov
fistpl
cs
aaa
mov
mov
push
push
leave
xor
stos
stos
mov
mov
mov
clc
xor
jg
cmp
rorb
shlb
rcrl
mov
cmp
mov
push
mov
outsl
sub
cmp
xchg
xchg
mov
mov
mov
repz
and
mov
cld
sub
lods
les
and
mov
test
pusha
mov
cltd
out
xor
mov
sbb
jnp
xchg
test
pop
sub
cli
jmp
mov
lock
popf
rol
in
out
jp
jl
and
jp
mov
enter
xchg
lock
cwtl
xchg
lds
push
sub
and
icebp
ss
test
cmp
enter
mov
xchg
adc
int
cmpsl
and
popa
mov
sub
out
orl
push
test
dec
scas
pop
mov
test
loop
leave
dec
jp
daa
push
das
xor
lret
fistl
sub
jp
inc
imul
ss
push
lahf
divl
pusha
lret
movsb
mov
outsl
fcomps
sbb
dec
orl
sbb
leave
stos
or
aaa
ljmp
jmp
rcl
adc
lret
into
xor
shrl
es
sub
inc
dec
jge
icebp
arpl
sti
or
movsl
sub
push
and
in
repnz
cmp
scas
lea
add
mov
inc
inc
lcall
jae
rcr
call
inc
mov
movsl
out
push
jno
lahf
adc
inc
popa
or
test
pusha
cmp
ret
add
jl
sbb
or
or
outsl
bswap
adc
push
popa
cmp
je
lcall
adc
cs
in
sahf
outsb
fucom
fisubrl
sbbb
jb
pop
xchg
inc
pusha
inc
xor
push
mov
xor
jno
dec
push
mov
sarb
add
outsl
inc
nop
inc
bound
jo
inc
add
adc
ret
pop
sub
xor
cmpsl
or
mov
dec
sbb
xor
push
xor
shll
add
cld
xchg
pop
rcr
cld
inc
lcall
adc
mov
push
sahf
loopne
cltd
das
repz
pop
sti
sar
mov
mov
les
ficomps
push
add
add
jns
mov
movsb
pusha
movsl
mov
mov
dec
xor
and
stos
push
pop
and
call
lock
mov
lods
movsb
and
cmp
cli
xor
xlat
adc
cld
push
lret
cmp
and
push
popf
fdivrs
and
xchg
pop
insb
loope
gs
cmp
and
lret
insl
test
test
lock
fbld
int
jb
mov
sbb
test
adc
cmp
pop
inc
stc
roll
mov
imul
bound
dec
addr16
out
fistl
rorl
xor
mov
jne
int3
repnz
dec
xchg
jae
adc
in
sbb
ss
and
cmp
fbstp
push
bound
rolb
pop
pop
xchg
test
int3
insb
inc
xchg
dec
shlb
negb
xchg
ja
or
fwait
adc
mov
or
cmp
hlt
or
mov
push
repnz
mov
dec
insl
xlat
js
push
pop
lds
out
cltd
sub
or
cmc
clc
stc
lea
int3
pop
add
pop
lods
cmp
xchg
adc
xlat
mov
dec
pop
lret
or
imul
sub
in
xchg
pop
sbb
in
rclb
xchg
push
xor
jno
bound
add
xor
pop
loope
test
cmp
inc
sub
mov
lds
orb
int3
mov
subl
fcom
movsb
sbb
push
mov
adc
push
inc
enter
das
cmp
test
test
dec
insl
fidivs
dec
and
std
test
ljmp
mov
movsb
mov
aas
xchg
repnz
jmp
lods
dec
add
lods
aad
add
push
mov
insl
mov
cs
dec
rorl
repz
out
cmp
add
mov
jp
cmp
xchg
sbb
and
xor
lret
push
ds
sar
call
mov
inc
inc
ret
sti
mov
js
fdivrl
mov
sub
xchg
ret
mov
sbb
out
lock
pop
in
jmp
mov
or
leave
dec
out
pop
xor
xchg
in
push
adc
imul
out
ss
and
sbb
add
pop
ret
pop
addb
push
mov
lea
daa
xchg
cli
xchg
push
loop
xor
jo
pop
insl
jmp
xor
fsubrl
dec
xchg
xchg
outsl
test
jno
xacquire
iret
add
push
mov
push
sub
sub
pop
cli
sbb
fwait
add
mov
and
aaa
aam
push
rorb
jecxz
mov
loope
fisubl
in
pop
cmpsl
sub
cwtl
xchg
mov
imul
arpl
xchg
mov
add
jle
adc
mov
orl
mov
das
push
xorb
push
pop
lret
adc
lret
pushf
sub
daa
repz
testl
adc
movzbl
mov
repz
jo
adcl
imul
clc
cmp
shl
insb
mov
lahf
lret
data16
push
aaa
push
push
pusha
jnp
inc
pop
cmpl
adc
roll
sbb
xchg
mov
fidivrl
push
xor
jno
out
sarl
dec
repnz
and
fwait
mov
test
xor
in
or
fisttpll
outsb
out
cmp
sbb
ret
cmp
andb
and
call
cmp
dec
repz
ljmp
jbe
lret
and
sub
aas
jl
adc
scas
lret
push
aam
pop
lcall
or
add
fnsave
sub
pop
test
out
dec
js
mov
roll
xchg
shl
add
cmp
push
xor
jno
popa
jno
popa
mov
jg
clc
popa
mov
cmpsl
pop
inc
clc
push
or
lcall
scas
push
jns
ret
xor
mov
imul
rcrl
dec
push
aam
sub
push
es
aaa
xchg
js
or
lahf
out
ljmp
aad
push
adc
mov
inc
adc
stos
sub
fldcw
pop
jae
add
push
push
mov
adc
mov
xchg
xchg
popf
add
or
scas
outsl
pop
jecxz
dec
mov
aas
pop
fidivrl
movsb
das
adc
lods
add
pop
call
cmp
mov
loopne
idivl
jge
sahf
in
popa
push
inc
lea
cmp
jns
xchg
jge
pushf
sub
test
cmp
xor
add
xor
es
mov
mov
xchg
ficomps
inc
adc
mov
test
ficoms
push
xchg
rcrl
sbb
cmp
sub
cmp
mov
or
add
pop
stc
es
cmp
push
or
arpl
aaa
ficoml
mov
sahf
mov
addb
xlat
sub
fistpl
mov
rcl
or
sbbl
lret
popf
adc
jmp
cmp
jno
xor
push
xlat
loop
or
fcoml
mov
pop
xchg
jns
loop
inc
pause
xor
add
mov
sbb
pop
mov
inc
or
insl
insb
test
in
ljmp
dec
pop
pushfw
sub
into
lahf
inc
sbb
ret
or
je
inc
fcomps
mov
pop
and
add
add
inc
ret
sbbl
sub
push
insb
jns
xor
xlat
fimull
bnd
push
and
jae
ss
lahf
cmp
jo
test
rolb
sarl
sbb
sbb
adc
ljmp
jecxz
dec
xor
push
sbb
popf
rolb
daa
ret
or
lcall
lds
jecxz
mov
push
out
jmp
push
das
pop
xor
inc
ljmp
std
sub
pop
lcall
data16
test
and
sbb
xor
cwtl
fisubrl
cmpsl
or
out
in
test
ds
pop
jl
mov
xor
jp
mov
jmp
sahf
shl
popf
xchg
adc
loopne
les
mov
xor
popf
das
and
push
pop
lcall
scas
and
popa
pop
add
pop
and
mov
xchg
mov
bound
sbb
mov
movsb
pop
xor
add
sub
jnp
inc
xchg
mov
lea
inc
cwtl
cmp
sub
mov
xchg
imul
push
jnp
cmpsb
shrl
jp
andb
nop
sub
ljmp
xor
ds
ret
into
in
dec
pop
mov
mov
xor
adc
addb
cltd
daa
sbb
pop
test
shrl
dec
sbb
pop
test
dec
mov
dec
je
popa
inc
and
pop
std
out
shll
sti
fwait
jnp
sti
push
sub
xchg
out
loop
sub
xor
sbb
lret
or
mov
jne
mov
daa
popa
test
stos
loopne
insb
mov
lds
outsb
mov
sti
ljmp
mov
mov
push
xchg
xchg
cwtd
faddl
iret
loope
and
fwait
test
js
out
jle
popa
inc
repnz
dec
fisttps
test
inc
sub
inc
add
sub
ret
loopne
xor
lds
cwtl
mov
xor
loope
ja
cli
and
repnz
in
cmpsb
dec
inc
loop
ljmp
rcll
xor
push
jecxz
les
and
popf
push
fadds
cmpsl
in
add
xchg
clc
inc
scas
pusha
outsb
mov
data16
jo
or
pop
dec
mov
lcall
adc
add
xchg
adc
rolb
mov
pop
push
sub
dec
adc
dec
movsl
pop
jp
jbe
add
leave
or
mov
cmp
test
xchg
push
sub
std
loopne
or
pop
roll
push
data16
daa
mov
lahf
inc
mov
lcall
inc
cmp
in
shr
fwait
shlb
cli
aad
jmp
pop
or
mov
pop
loopne
mov
into
pop
mov
orb
mov
das
pop
xchg
imul
jg
pop
push
mov
dec
dec
add
or
mov
popl
das
mov
jmp
fistl
add
lock
repnz
and
mov
fdivrl
stos
sbb
fistpll
add
std
mov
cmp
push
into
daa
ss
mov
xchg
mov
xor
jge
inc
int3
xor
outsl
mov
test
xchg
pop
pusha
mov
cltd
jle
sbb
fsubr
xor
mov
fsubp
cmp
sti
out
push
inc
das
orb
sbb
pop
adc
add
repnz
mov
out
xchg
xor
inc
inc
xchg
in
repnz
and
pop
cmpb
repnz
lds
mov
clc
sub
sbb
test
stos
loopne
sub
aam
mov
lahf
xchg
inc
pop
pop
shlb
sbbb
ljmp
xor
jno
lret
stc
lock
push
fidivrl
sub
dec
xlat
iret
outsl
and
in
push
je
lock
in
adc
xor
mov
jae
push
fcoms
pop
push
pop
or
sar
sub
jno
int3
je
push
js
fisttpl
out
outsb
mov
sahf
fldl
dec
jno
adc
fbld
movsb
scas
add
ds
and
adc
mov
cli
xchg
aam
das
push
pop
mov
fnstenv
xchg
xchg
mov
xchg
jp
dec
inc
stos
jp
mov
outsb
add
cmp
or
pop
push
dec
aaa
push
sub
dec
fists
inc
testb
cli
push
leave
pop
push
xchg
or
push
cmc
je
leave
jb
mov
cld
lods
in
fstpl
dec
in
mov
mov
repz
jmp
lods
cmp
fdivrp
push
push
imul
shr
sub
iret
in
push
xor
cld
push
push
push
fimull
or
mov
mov
add
incl
das
repz
add
or
add
dec
mov
and
movsb
daa
lcall
cmp
les
addr16
loopne
adc
ds
xor
mov
add
xchg
lret
bound
cmp
ja
xor
adc
xchg
scas
stos
pop
adc
rorl
sub
inc
out
je
xor
jp
es
xchg
pop
jne
in
sbb
jl
or
inc
mov
adc
ret
pop
fidivrs
and
mov
push
ret
fwait
lret
dec
xchg
repz
aaa
pop
sbb
add
jae
sub
jb
xchg
pop
sbb
mov
pop
sub
test
dec
fxch
sub
dec
mov
lea
test
cmp
and
mov
xor
inc
mov
cmp
xchg
cwtl
aad
shrl
pop
and
rcrl
sbb
js
in
cmp
mov
mov
inc
pop
das
xor
jle
or
xchg
mov
shlb
icebp
stos
or
pop
push
dec
push
pop
pusha
xchg
add
xor
cmpsb
dec
jae
arpl
cld
ja
inc
dec
cmpsl
cmp
movsl
lock
movsb
aam
mov
jno
jb
dec
test
sbb
xor
mov
out
dec
add
add
mov
or
cmp
mov
mov
dec
bound
mov
out
xlat
cmp
sub
and
dec
mov
mov
mov
dec
stc
jnp
pusha
decl
movsl
and
push
subl
mov
mov
rcrl
das
idivb
loopne
lcall
mov
xchg
ficomps
mov
ss
bound
mov
mov
mov
push
in
or
stos
popf
int
sbb
lea
stos
mov
enter
std
loope
xor
push
push
pop
daa
mov
enter
pop
adc
jns
add
dec
shl
subl
repnz
adcl
cli
jns
fs
lea
xchg
sub
les
lret
cmpsb
roll
mov
cs
addl
jb
out
aas
lea
es
xor
call
push
loopne
and
mov
hlt
pop
lds
inc
lahf
mov
enter
push
aad
aad
fs
aad
cmp
fisubrl
jb
mov
mov
push
cmp
fidivs
push
cmc
jo
or
sbb
pop
fnstenv
int
sbb
dec
arpl
outsb
popa
ss
test
sub
lahf
fidivs
into
pop
test
pop
movsb
popf
clc
clc
inc
push
mov
sbbl
or
mov
jb
add
into
rcll
flds
aaa
ds
je
shlb
lret
call
pop
and
push
jmp
cld
mov
jmp
push
sub
adc
xorb
arpl
lret
fisubrs
push
sbb
cmpsb
in
stos
sahf
xor
ss
mov
and
jp
sbbb
push
scas
imul
imul
jne
test
imulb
dec
mov
push
adc
fwait
xchg
fidivrs
outsl
sti
or
lcall
sub
xor
xchg
jnp
push
push
sbb
js
sbbb
xchg
jge
imul
imul
or
mov
xchg
in
mov
rcpps
jl
test
popf
jp
out
ret
xchg
xor
shlb
cli
mov
in
xor
aam
nop
test
mov
iret
jno
rcrb
shll
cmp
add
xchg
jmp
cmp
jle
push
scas
popa
fcmovne
and
lahf
imul
dec
popa
jmp
sub
cld
arpl
sbb
lock
imul
adc
loopne
loopne
fnstsw
pushf
hlt
cmp
jecxz
aaa
iret
fs
sarl
mov
jg
lods
mov
mov
jne
stos
js
mov
xor
mov
mov
and
jge
mov
xor
adc
xchg
mov
mov
rcrb
arpl
movsl
xor
push
aas
roll
jp
in
ljmp
cli
push
mov
in
cmpsl
in
xchg
sub
es
adc
mov
daa
lods
xchg
push
xchg
xchg
out
leave
mov
mov
sbb
in
movsl
addr16
push
call
ds
jmp
adc
cmp
clc
leave
sbb
cwtl
shl
into
aam
fldcw
mov
sub
push
pop
call
cmc
dec
push
mov
mov
shll
loop
cmpb
pop
jbe
xchg
mov
mov
cmpl
jl
mov
inc
jl
jp
sbb
xor
pushf
mov
rorb
mov
push
lods
sbb
mov
pop
push
jbe
sub
pop
scas
fistpl
pushf
arpl
xlat
je
sub
popa
add
ret
loope
sbb
and
jb
nop
test
dec
fldcw
mov
sub
push
rcll
mov
cld
ja
loop
fstps
repnz
sbb
pop
bound
mov
cld
testb
mov
js
push
cltd
pop
cmp
out
lret
repnz
loopne
fistpll
and
xor
in
xlat
test
xor
or
shll
or
xchg
mov
iret
add
pop
fsub
loopne
loop
lcall
lods
andl
shll
scas
cmp
jl
insl
dec
jae
mov
imul
add
cmp
sbb
jl
outsl
xor
adc
loop
mov
popf
mov
in
gs
repnz
add
or
mov
out
push
cmp
push
das
mov
dec
daa
sbb
push
inc
push
pop
and
pop
pop
data16
in
int
dec
cmc
sahf
clc
xor
mov
jb
add
test
sbb
cwtl
push
add
xor
xor
add
fsts
in
jb
lods
out
cmc
cmpsl
push
mov
das
xchg
add
ss
cmpsl
mov
mov
sbb
mov
lds
lcall
jnp
or
mov
or
aam
sbb
xchg
clc
cmpb
or
mov
fs
xchg
mov
inc
shll
jmp
push
js
sub
pop
loope
xlat
les
push
pop
fildl
or
test
cmc
mov
pop
or
in
ljmp
das
mov
push
jns
cmp
pop
adc
lds
jno
sbb
xor
fs
outsb
mov
fwait
sub
mov
xor
push
push
jae
outsl
bnd
xor
xchg
out
push
popf
and
jl
mov
pop
leave
daa
sahf
shll
push
jo
imul
insb
clc
dec
out
pop
sbb
add
call
push
adc
clc
push
xor
push
push
clc
jne
pop
mov
stos
xchg
adc
mov
and
test
jnp
pop
out
je
iret
add
test
push
lahf
dec
xchg
imul
fists
mov
mov
adc
rcrb
add
xchg
shlb
or
rolb
insb
aam
mov
xor
push
lock
sbb
fstps
dec
pop
sub
int
push
mov
push
into
adc
fs
and
sahf
pop
pusha
pushf
dec
pop
adc
pop
push
lahf
sbb
jno
jne
in
mov
insb
shlb
inc
test
in
inc
jno
jb
mov
fcomp
fisttpll
and
test
xchg
testb
mov
cmc
data16
jg
cltd
dec
fwait
lret
dec
push
mov
jecxz
push
fdivs
outsb
pusha
and
adc
fcoml
sbb
xchg
add
cmp
inc
lock
or
addr16
and
pop
cvtps2pi
pop
lock
pushf
mov
rcll
mov
in
ret
sbb
pop
sbb
mov
or
std
inc
lcall
lahf
loop
jp
ror
inc
pop
subb
lods
aam
ror
fnsave
push
push
cmpsl
or
popa
pop
arpl
mov
fisubrs
sarb
outsb
fdivl
dec
ffree
fdivl
stos
lret
xchg
in
inc
enter
es
xor
and
shl
sub
sbb
mov
popf
xchg
jbe
imull
dec
inc
pop
lods
sbb
fcomps
jae
xchg
sub
sbb
and
mov
clc
movsl
jne
dec
arpl
push
jg
or
mov
test
adc
add
push
add
inc
mov
stc
pushf
xor
add
sbb
dec
fmull
or
rolb
shrl
fidivl
pop
loop
je
push
bound
mov
mov
push
into
js
jl
cmpsb
mov
pop
push
addb
lock
mov
add
cmp
test
shl
stos
cmp
sbb
push
jge
pop
test
sub
lea
repnz
stc
add
jns
icebp
sti
push
and
sbb
iret
sub
or
cltd
inc
imul
rclb
es
enter
and
xor
mov
fwait
sbb
ffree
push
push
ret
inc
or
mov
lods
test
sub
aas
lret
jo
cli
mov
adc
jb
push
aaa
pop
divl
cmp
std
sti
cmp
push
insl
pop
xor
stc
inc
mov
fwait
js
mov
cmp
fdivrs
imul
and
cmp
mov
fistpl
pop
movsb
std
stos
sub
and
punpckhwd
aas
lret
mov
test
add
add
add
mov
push
lea
push
and
fldt
arpl
jp
insl
sbb
sub
in
or
leave
arpl
pop
sub
loop
jo
add
ja
into
mov
mov
movlps
push
stc
daa
movsb
jb
fwait
push
mov
sbb
lods
not
clc
push
lea
int3
add
mov
fsubrs
mov
inc
insb
mov
orl
aaa
sbb
xor
xchg
sub
into
imul
aad
ret
pop
cmp
fistpl
fadds
cmpb
lods
sub
lahf
sbb
popl
pop
mov
ds
cwtl
fwait
add
sbb
mov
shll
fnsave
cmp
movsl
cltd
mov
sub
push
xchg
dec
or
ss
push
shrl
pop
addr16
xchg
mov
push
lcall
rclb
leave
mov
cmp
cmp
add
push
add
pusha
ficoml
scas
push
lahf
cmp
dec
xchg
out
lahf
fidivs
jo
dec
mov
iret
subb
aas
call
outsb
push
pop
add
inc
mov
arpl
mov
push
insb
addr16
push
repnz
lock
xor
mov
mov
fisttps
and
out
add
mov
push
loop
icebp
mov
or
sti
jle
std
rcll
push
in
add
in
xchg
fnsave
shl
imul
push
mov
sub
and
imul
jae
rorb
jae
push
in
js
pop
inc
sbb
ds
fdiv
into
dec
or
leave
cltd
aaa
outsb
orb
in
aas
cmpsb
fcomp
xor
sbb
or
cmc
mov
cs
adc
out
lret
and
arpl
in
xor
gs
imul
sahf
add
xor
in
repz
inc
mov
popf
cmp
sub
aas
mov
lret
dec
jbe
mov
sarb
push
dec
fs
das
add
fldt
mov
adc
xchg
das
mov
mov
jl
dec
movl
in
das
lcall
je
inc
push
inc
in
mov
push
rclb
jns
xchg
pop
dec
push
subl
adc
pushf
pop
push
fsts
sbbw
mov
mov
push
mov
push
inc
xchg
data16
jb
add
movsl
add
out
sub
and
cmpb
and
add
int
adc
out
cmovbe
paddsb
adc
or
lcall
outsl
repz
push
mov
dec
jae
push
stos
or
xlat
aad
mul
xlat
mov
mov
mov
xchg
push
or
cmp
movsb
sbb
add
cli
add
sub
sub
aas
sub
hlt
xor
popf
jnp
insw
fmulp
sub
cmp
push
xchg
cmc
sub
jg
sbb
or
jle
pusha
sbb
insb
lahf
or
xchg
dec
divl
in
ds
arpl
scas
jne
mov
push
or
lret
fwait
dec
jb
xchg
cld
es
jne
loopne
test
dec
jnp
mov
fisubs
sub
or
cmp
lds
jecxz
fcomi
jecxz
loope
mov
lods
subb
sub
mov
xor
and
decl
xchg
xchg
push
pusha
bound
test
jg
add
or
xor
scas
outsb
pop
xor
cmpsb
addb
out
je
iret
xchg
xor
fistpll
imul
push
xchg
test
pop
or
mov
inc
pop
outsb
jmp
jns
or
mov
sbb
in
leave
push
roll
mov
insl
inc
inc
lretw
fsubrl
out
mov
push
adc
dec
popa
inc
sub
shlb
lret
push
push
mov
pop
jp
repz
leave
adc
mov
inc
pusha
cmp
jae
movsl
test
scas
adc
push
pop
ret
popa
push
jno
movsb
iret
sti
push
hlt
dec
jecxz
cmp
jmp
pop
mov
mov
mov
popf
aad
jmp
fildll
add
jb
push
or
mov
fists
fdivp
push
sbb
cmpb
inc
pushl
or
rsqrtps
insl
mov
xchg
or
jnp
shl
sub
int3
inc
je
pushl
repnz
out
pop
mov
jns
add
jmp
int
dec
test
fimull
aas
xchg
mov
loope
push
jg
imul
mov
out
jg
jge
and
jp
mov
dec
inc
test
sbb
out
and
push
push
daa
adc
jne
stos
cmp
pop
pop
mov
sbb
pop
mov
lods
cmc
dec
and
lods
and
arpl
lahf
inc
push
inc
inc
ret
and
xchg
addr16
jecxz
and
push
cmp
es
aam
cwtl
xor
and
and
outsb
and
jmp
into
mov
cmpsl
and
sbb
shlb
mov
gs
ljmp
fstpl
ja
dec
xor
mov
and
mov
push
ljmp
mov
push
outsb
mov
dec
push
xor
fwait
lret
aas
je
outsb
mov
insl
xchg
mov
cmp
push
adc
xchg
lret
shll
js
mov
cmp
xchg
jb
jp
xlat
add
out
sub
pushf
sarl
cmp
and
adc
pop
dec
repnz
loope
and
xchg
cli
cld
inc
xchg
jg
dec
push
sti
mov
and
ds
add
sarb
cld
in
dec
psubq
lods
dec
mov
jo
or
push
inc
cmp
sub
imul
cmp
adc
push
mov
fisubs
stc
pusha
movsl
andb
sbb
adc
cmc
adc
mov
sub
jmp
inc
dec
inc
int3
cmp
dec
jo
and
xorb
test
lods
cmc
jns
insb
roll
jns
mov
fnstenv
orl
stos
push
add
adc
cmp
sub
pop
lcall
pop
aas
shlb
xchg
inc
xchg
or
leave
mov
and
cmc
and
jo
cmp
nop
dec
rorb
in
or
sbb
stc
daa
pop
lds
imul
adc
sbb
mov
push
fwait
xchg
rorb
pop
cltd
dec
jne
cmp
mov
aad
cmp
ret
ret
out
and
lcall
lahf
and
jmp
pop
cltd
xchg
out
mov
je
push
xchg
cs
cmp
add
sahf
outsl
xlat
mov
push
sahf
mov
push
adc
jo
xlat
or
jo
addr16
scas
popf
fnstsw
or
int
in
stos
in
js
mov
and
pop
jl
lods
jo
pop
enter
lds
dec
push
xchg
mov
int3
lcall
adc
push
xchg
mov
and
jbe
pop
subl
pop
arpl
push
stos
and
pop
pop
xchg
jp
out
mov
mov
jp
and
movsl
fbstp
aad
outsl
int3
cmp
test
cmp
aaa
xchg
inc
sub
fisubrs
pop
mov
mov
jo
in
hlt
gs
mov
inc
inc
inc
into
pop
mov
sub
imul
je
sbb
into
mov
dec
icebp
std
mov
test
mov
push
rcrb
aam
popf
jae
sbb
pop
jecxz
push
stos
adc
add
mov
lcall
jmp
mov
lret
jmp
xor
iret
or
out
jo
push
inc
cmp
out
in
and
or
addb
pop
xchg
cmpsb
sbb
pop
outsb
ret
mov
sbb
fs
fcmove
cmp
pop
jno
mov
cmpsb
clc
loopne
leave
divl
gs
jg
cmpsb
test
sub
adc
in
pop
gs
rclb
inc
data16
adc
loop
pop
xchg
pop
orb
adc
cli
imul
xchg
pop
pop
xor
outsb
js
inc
lds
xor
xorl
fwait
push
lea
push
js
jg
xchg
mov
add
add
ficompl
jne
rorl
xchg
mov
inc
cmp
aas
pop
adc
fsubl
std
pop
das
push
leave
pop
ror
lahf
sub
fsubl
add
testb
repz
data16
mov
adc
jbe
xchg
xor
dec
data16
out
addl
adcl
jge
adc
xor
or
dec
imul
mov
mov
cs
out
pusha
hlt
fwait
jl
sub
andb
inc
push
xor
add
cld
pop
pop
js
ds
rolb
popa
cmc
push
das
add
sub
push
push
outsb
mov
mov
cmc
sbb
stc
sbb
and
pop
push
scas
jg
xorb
push
xchg
jo
outsl
ja
lret
fisubl
push
ss
mov
adc
lea
fstps
out
cmpsb
aam
mov
inc
fs
in
aaa
outsl
movsl
dec
mov
jb
out
jns
push
jbe
mov
js
decb
xchg
nop
xorl
andl
call
scas
cmp
call
mov
repnz
mov
ret
pop
cmpsl
inc
xchg
fildll
inc
pushf
cli
arpl
cmp
mov
std
mov
and
call
testl
cli
add
dec
adc
mov
xor
lret
fbld
add
inc
dec
push
cwtl
xor
pop
fadds
daa
aam
pusha
xor
xor
adc
in
icebp
std
dec
sub
call
pop
out
xor
and
mov
test
sbb
adc
jnp
lock
xchg
and
daa
cs
sub
cmp
inc
jns
leave
cmp
push
insl
daa
nop
mov
es
sub
mov
add
lock
push
xor
nop
or
mov
cmp
lods
or
jp
in
pop
push
push
movsb
mov
sarl
test
addr16
xchg
mov
jb
xor
dec
fsubl
mov
outsl
or
jno
xchg
dec
test
sbb
loope
lods
test
or
inc
outsl
movsl
pop
dec
addb
dec
imul
and
out
jp
or
dec
mov
fcmovu
lcall
cltd
and
jge
pop
popa
mov
es
mov
xchg
inc
out
movsb
mov
arpl
mov
pop
jg
aas
lcall
add
mov
jb
stos
jns
mov
jmp
data16
adc
pop
jle
adc
rcll
aam
negl
icebp
mov
stos
sub
sbb
aam
mov
pop
fiaddl
adc
fwait
or
sti
std
pop
inc
fnstcw
mov
jns
nop
imul
xchg
xor
es
ds
push
pushf
xor
cmp
xchg
aad
adc
pmullw
movq
aaa
and
fdivrs
dec
outsb
fiadds
std
mov
popa
mov
sub
movsb
pop
das
ror
lods
jge
or
xchg
fdiv
mov
cmp
cs
shlb
shlb
movsb
xor
fldl
hlt
pop
movsb
add
push
imul
fistpl
lea
xchg
inc
or
adc
and
in
imul
add
pop
and
pop
cmp
outsb
jle
cs
push
add
or
pop
adc
out
pop
ret
js
inc
add
outsl
or
push
pop
inc
adc
xor
cmp
push
shrl
rolb
push
int3
xchg
les
std
add
fs
cmp
adc
stos
test
push
popa
and
call
or
mov
or
mov
push
inc
or
push
cmpsl
dec
sarl
and
mov
inc
add
ficomps
mov
shrb
sub
test
ret
dec
outsl
cmpsb
not
fcomip
adc
xchg
cwtl
push
sbb
adc
daa
cld
sbbb
adc
cs
jmp
mov
xchg
sbb
cmc
pop
fisttps
loop
js
cmpsl
sub
mov
ljmp
xchg
shll
inc
clc
fnstenv
lret
pop
test
add
pop
xchg
jp
sbb
fnstenv
call
mov
mov
jp
jns
imul
in
xchg
mov
or
jmp
jg
enter
mov
into
xor
jmp
mov
and
mov
pop
enter
ja
stos
dec
popf
inc
pop
out
and
jge
xlat
dec
mov
cmpsb
sbb
test
andl
dec
or
js
lods
cmpsb
sahf
and
aam
adc
sub
inc
jb
icebp
lahf
adc
pop
pushf
insl
aaa
and
mov
adc
loopne
repnz
sub
pop
ds
mov
ljmp
lcall
jo
mov
pushf
popa
leave
pushf
test
iret
hlt
shrl
lds
cmp
push
ret
scas
outsb
xor
mov
jecxz
in
insb
out
lods
popa
jne
sub
sti
mov
je
sbb
insb
es
jl
xchg
in
cmpsl
cmp
incb
repz
adcb
fisubs
xchg
or
lret
idivl
jno
pop
add
fisttps
push
out
inc
icebp
frstor
inc
stos
lods
cmpl
cmp
testb
lods
test
mov
and
sub
push
jmp
xor
out
cmp
lret
jp
adc
enter
sarb
daa
dec
xor
test
out
push
rorb
jl
sub
sbbl
cwtl
mov
sbb
mov
lock
lea
in
aaa
pop
xchg
mov
fisttpll
cmp
xchg
push
mov
push
loope
mov
ljmp
sbb
mov
in
or
xor
std
into
imul
xor
mov
int3
jg
inc
pop
cmpsl
inc
inc
push
cmc
insl
jge
leave
jle
andl
lahf
xor
das
cmp
cmc
inc
push
ljmp
fimuls
stc
xchg
adc
jecxz
inc
mov
jmp
jl
inc
stc
and
adc
out
or
ja
push
mov
xor
shl
pop
xor
fists
pop
enter
sub
pop
adc
lock
mov
mov
lret
ficoms
sub
popa
fsubrl
mov
or
pop
fnstsw
vandnps
cs
lret
mov
push
jo
inc
lock
js
push
xchg
push
pop
sub
push
push
out
pop
sub
mov
jmp
aam
shr
pop
mov
sbb
jle
push
jnp
cmc
sub
or
mov
loopne
je
cld
lret
addr16
pop
add
adc
out
cmp
stc
stos
adc
inc
mov
ret
hlt
inc
lods
fdivr
adc
inc
add
xlat
jnp
fwait
mov
lods
int3
jne
andb
cmpsl
or
pop
dec
pusha
nop
das
shr
xchg
daa
jnp
test
jg
pusha
out
test
push
mov
mov
arpl
fdivrl
imul
lret
addr16
imul
xchg
fwait
lret
add
rclb
ret
add
out
jb
scas
outsl
dec
aad
sub
mov
stc
aaa
gs
adc
fld
mov
jge
dec
dec
and
xchg
dec
or
mov
sub
mov
jge
or
stos
mov
andl
and
pop
popf
mov
lahf
stos
mov
pop
cwtl
gs
pop
lret
mov
ret
lea
cld
lods
dec
cli
dec
push
mov
mov
jnp
daa
cmp
ret
cmp
leave
movsl
adc
mov
or
or
xchg
cli
mov
jnp
add
pushf
dec
sub
movsl
inc
lahf
test
mov
in
xchg
icebp
jmp
push
pminsw
loop
add
add
sub
pop
mov
sub
je
outsl
pushf
inc
push
arpl
dec
jle
int3
jo
fidivs
lret
adc
sbb
test
cmpsb
adc
arpl
addr16
nop
mov
xor
xor
cmp
rcr
js
insb
sbb
adc
pop
push
xchg
enter
pop
std
aas
or
mov
jmp
dec
stc
mov
in
outsb
bound
enter
div
xor
pop
mov
xchg
cmpsl
fstps
mov
pop
arpl
aam
jbe
ret
lods
jg
xor
inc
and
and
cmp
pop
loope
pop
sub
cmp
loop
inc
mov
mov
mov
pusha
mov
jmp
pop
mov
dec
gs
dec
pop
rcrl
cmp
or
mov
repnz
rorb
pop
pop
imul
dec
data16
arpl
jl
pop
movsl
data16
outsl
sub
jnp
lods
stos
ja
push
insl
aam
xchg
mov
or
mov
ja
sbb
das
sbb
js
adc
test
xchg
xchg
jp
xchg
dec
xchg
mov
add
add
xchg
and
cmpsb
push
sub
ficoms
rorl
adc
mov
rorb
sti
push
and
or
outsb
dec
add
mov
pop
popa
jno
test
ret
int
sbb
mov
push
fcompl
aam
comiss
jns
in
sahf
xchg
repz
ror
scas
adc
mov
out
movsb
les
push
jo
and
jmp
in
push
sbb
lahf
push
sti
test
rorb
stc
xchg
int3
ret
mov
dec
jmp
or
lds
stos
out
mov
cmp
divb
in
pop
mov
add
das
pop
pop
xchg
inc
out
inc
scas
subb
mov
sub
test
out
cli
push
mov
xor
sbb
cs
push
int3
xchg
push
or
cmp
fildl
leave
inc
sbb
aam
or
jns
dec
fs
mov
pop
repz
xlat
jb
sbb
into
pop
sbbl
push
cmc
fs
xor
rorl
mov
push
push
mov
icebp
rcrl
fnstcw
aad
inc
xchg
sub
xor
jo
pop
popf
lret
jg
pop
pop
pop
mov
sbb
or
xchg
loope
xchg
in
or
in
mov
adc
jbe
mov
pop
push
sub
enter
push
fstpt
fsubrp
std
add
xchg
aad
xchg
or
icebp
loope
out
push
mov
mov
mov
xor
roll
add
add
mov
test
or
cltd
test
inc
loopne
xchg
xor
nop
sub
jl
out
mov
out
pop
push
push
insb
call
leave
pusha
mov
leave
mov
loop
xchg
cld
aam
or
ret
xchg
mov
or
sbb
int
lods
pop
sub
mov
stos
int3
push
push
dec
fldenv
mov
add
in
lahf
std
dec
enter
inc
mul
or
cmp
or
in
nop
cmc
cmp
imul
clc
pop
daa
dec
push
sub
popf
loop
out
loopne
lds
push
fadds
push
ds
xlat
mov
inc
jb
adc
jecxz
outsb
mov
sbb
fildll
mov
js
call
out
sub
ja
into
cmp
rcr
mov
lret
pop
or
dec
push
xchg
outsb
inc
mov
scas
xor
mov
mov
fwait
jbe
pusha
cld
and
xchg
lahf
and
xchg
mov
lock
andb
data16
outsl
jl
jle
not
insl
bound
jg
mov
mov
ret
sub
lar
lret
in
dec
sbb
dec
enter
mov
mov
lods
ret
adc
dec
push
ds
jl
cmp
imul
adc
dec
xchg
jbe
ret
cmpl
dec
mov
mov
and
out
mov
enter
pusha
sahf
inc
push
jmp
add
mov
lods
cmp
push
mov
dec
fst
inc
xor
shrd
add
push
inc
jae
popa
cltd
dec
or
dec
enter
cmp
jae
test
and
adc
inc
xchg
inc
ljmp
push
jle
pop
cmp
pusha
xchg
es
addb
push
pop
fs
addr16
iret
mov
ja
mov
fldenv
add
call
fst
leave
pop
pop
mov
inc
pop
pop
rorl
xor
ljmp
inc
shl
mov
stc
ss
adcl
cmp
or
aad
lock
xchg
sbb
add
and
xor
lds
cmp
push
mov
clts
in
aas
and
and
into
jp
pop
mov
mov
pusha
cmpsl
loopne
adc
cmp
xorb
in
dec
and
lahf
adc
ds
add
outsl
repnz
aam
sub
lea
jmp
sar
mov
cmpsb
cs
push
jecxz
mov
push
mov
lods
xor
lock
aam
aam
movsb
cs
add
dec
insb
mov
or
mov
mov
pop
push
pop
add
jbe
and
add
or
jge
stc
fdivp
insl
or
insl
mov
shll
movsl
jno
adc
rol
shrl
push
xor
fld1
xor
pop
shlb
test
pop
movsb
ret
stos
mov
pop
and
pop
inc
mov
push
cmpsb
jg
iret
xor
mov
hlt
dec
aas
stc
adc
inc
or
push
in
loope
divl
mov
testb
daa
jnp
outsb
cmp
jae
lret
push
dec
aam
rcrl
jnp
adc
or
mov
movsb
adc
pop
and
not
dec
call
dec
and
sbb
xorb
shl
cwtl
dec
loope
addb
jmp
or
popf
out
mov
scas
pop
xchg
xchg
or
in
cs
mov
push
ret
mov
lds
shl
loop
inc
mov
iret
sbb
into
or
stos
push
sbb
pop
es
mov
sub
or
in
lret
jle
dec
pop
jmp
jno
mov
lcall
xchg
fld
mov
es
repnz
mov
js
sti
cmpsl
bound
imul
pop
push
dec
pop
xor
or
and
lds
mov
stos
repz
in
mov
arpl
sub
mov
add
push
mov
cmp
mov
push
lret
cld
dec
mov
and
movaps
jmp
jae
dec
adc
leave
dec
push
in
jge
sbb
mov
outsb
pop
sbb
hlt
sahf
jle
xor
pop
push
cmpb
arpl
mov
push
cwtl
inc
clc
mov
testb
push
loop
call
movsl
arpl
fldcw
es
and
leave
inc
adc
mov
in
aam
shlb
and
in
hlt
ret
ja
sarb
into
mov
jmp
xor
fstl
fs
repz
orl
fcomps
shll
dec
lahf
jne
pop
mov
test
lret
pop
call
push
add
jb
in
dec
pop
add
jne
cmpsb
mov
push
cmp
iret
sbb
test
sahf
loop
pop
xchg
and
bound
jne
cli
bound
mov
inc
xor
cmpsb
insl
mov
mov
xchg
popf
mov
icebp
jmp
push
lods
and
lock
rolb
sub
jle
aam
push
scas
add
xor
pop
pushf
mov
popa
nop
loopne
imul
arpl
pop
pop
pop
outsl
jbe
or
jge
nop
repnz
arpl
mov
xchg
mov
or
mov
push
in
imul
xchg
lock
or
scas
push
fwait
push
aam
daa
mov
mov
cmp
lea
pop
lret
jnp
cmpsb
dec
push
push
mov
jno
outsb
pop
fwait
pop
push
adc
jecxz
aas
jmp
or
inc
jg
sub
call
rcrb
pop
out
cli
insl
pusha
inc
outsb
cmp
shl
push
fildl
ss
outsb
dec
pop
fadds
and
cmp
jle
and
jecxz
stc
sti
ret
flds
aad
cs
mov
cltd
mov
ljmp
adc
push
inc
dec
jecxz
aaa
divl
in
insl
adc
mov
cmp
adc
xor
push
sbb
hlt
cli
mov
fdivs
js
pop
testb
or
sarl
push
or
push
push
mov
cwtl
pop
push
fxch
jg
adc
cmpl
mov
fstp
setno
sub
push
addr16
ds
sbb
repz
repz
addr16
fstpt
adc
or
cmpsb
cmc
test
repz
repz
lds
sahf
imul
pop
add
fwait
rcrb
aas
xchg
cmp
test
or
or
arpl
gs
add
jne
dec
ja
lahf
or
pusha
arpl
jb
inc
mov
mov
mov
lds
cmp
aas
mov
adc
in
insl
xchg
daa
cmp
xor
xchg
pop
cmp
xchg
sub
adc
xor
int
cmp
mov
xor
pop
in
lock
mov
in
inc
xchg
pop
xchg
dec
frstor
push
nop
sbb
mov
mov
pop
push
push
sbb
push
inc
mov
add
fcos
int3
clc
dec
cmpsb
or
jl
add
xchg
xor
pop
xchg
jmp
aas
push
add
mov
and
cmp
lcall
clc
aaa
andb
jmp
lock
push
fcomp
jne
push
repz
xchg
adc
xchg
stc
cltd
out
icebp
std
clc
fisubrs
and
sub
ljmp
and
add
mull
fs
jne
sub
push
cmp
push
push
insl
mov
not
or
fbstp
repz
pop
jnp
sbb
mov
negl
dec
sbb
mov
xchg
fnstenv
insb
xchg
ficomps
cmc
lock
mov
inc
mov
sbb
push
stc
sbb
pop
or
cmpsl
cld
mov
outsb
in
cmp
xchg
mov
xor
cmp
mov
js
sub
xchg
push
or
gs
adc
fildll
pop
jns
push
mov
sbb
ljmp
inc
fwait
xchg
lods
mov
in
dec
xchg
add
sub
stc
mov
mov
pushfw
mov
cmp
dec
mov
outsb
jae
mov
inc
dec
outsl
jbe
xchg
out
jge
in
and
test
repnz
repnz
mov
push
cmp
jne
in
xchg
gs
inc
push
push
rcll
lret
leave
add
cmp
mov
sub
mov
enter
mov
outsb
into
pop
rcrb
mov
shlb
xorl
pop
mov
lea
mov
pop
push
in
loopne
pop
sub
dec
out
xorl
and
lret
xchg
push
fwait
stc
shll
jmp
xlat
jle
inc
push
sbb
stc
insl
mov
mov
into
in
mov
jns
and
jge
cmpsl
hlt
std
push
outsl
xchg
stc
dec
fninit
mov
xchg
xchg
pop
aam
aad
test
jmp
sub
rcll
shrb
mov
sbb
in
gs
aaa
mov
stos
adc
jo
push
stos
adcl
adc
lods
loope
repz
xor
cli
fnop
std
mov
rol
lcall
outsb
push
loopne
adc
loope
and
lock
clc
repz
lahf
inc
icebp
out
and
xchg
pop
aam
jb
mov
xchg
mov
fistps
xor
fistpl
mov
sbbb
dec
js
xchg
adc
inc
push
pmuludq
jb
ret
inc
clc
mov
xchg
test
iret
cs
insl
pop
and
sub
decl
inc
rcr
test
pop
sbb
in
repz
xchg
std
in
rorb
call
sbb
ret
mov
jns
sbb
insl
jne
cld
inc
jmp
ja
call
pop
cld
jne
iret
int
decl
inc
das
mov
inc
inc
and
fldenv
mov
mov
jo
jmp
push
sbb
pop
fsubrs
dec
mov
insb
mov
mov
xchg
outsb
sbb
shlb
imul
dec
rcr
cmpsl
xor
pop
jbe
es
out
out
loop
sub
cwtl
jno
test
sub
rorl
in
ret
scas
xchg
mov
nop
inc
stc
lret
andl
inc
add
sbb
pop
ds
or
sub
pop
popf
sbb
mov
scas
mov
add
push
shlb
or
adc
lahf
push
inc
in
xchg
je
in
nop
dec
ja
lock
sbb
inc
js
pop
sbb
mov
xor
lea
jmp
outsl
shrl
and
repz
je
bnd
enter
mov
repz
fwait
sti
inc
repz
ds
ret
pop
sbb
sub
orl
dec
pushf
add
shlb
jl
adc
cmp
or
push
cmp
shufps
vdivpd
or
pop
fidivl
pop
movsl
nop
push
push
les
repz
xchg
jnp
cmp
pop
rcll
dec
shrb
jae
fs
mov
mov
notb
or
fwait
sbb
addb
mov
dec
int
sub
mov
je
mov
daa
ret
rclb
xor
lcall
cwtl
fcompl
or
inc
adc
adc
shl
and
xchg
xchg
dec
cmp
mov
jge
add
dec
lcall
xor
and
scas
xor
mov
repz
shrb
fimuls
aam
in
inc
push
add
add
in
scas
push
or
pop
mov
mov
sbb
xlat
nop
xchg
push
int3
mov
cltd
out
stos
jo
cld
mov
loopne
cwtl
pop
inc
sbb
sbb
lds
les
sub
mov
fistps
push
in
sub
xchg
in
into
inc
pop
mov
xorb
rorl
inc
lret
test
sbb
fsubl
ss
mov
pusha
into
jno
test
mov
dec
es
pop
pop
mov
out
sar
ret
push
xchg
sti
push
adc
xor
push
xchg
outsb
idivb
inc
les
lods
lret
or
cmovbe
cmp
push
pop
pusha
ret
clc
cmpsb
es
pop
lods
dec
inc
out
xor
pop
js
mov
stos
adc
jo
int3
mov
test
jecxz
sti
mov
dec
sub
cmp
adc
test
pushf
ss
popa
adc
add
lcall
fistl
push
outsb
cmc
int
ds
imul
add
xor
sti
jbe
cmc
lea
dec
push
mov
mov
push
add
mov
cmpsb
cs
inc
push
pop
mov
sub
xchg
into
and
mov
or
jg
mov
outsl
into
or
or
sti
xor
repnz
xchg
and
test
aam
mov
std
lods
push
xchg
mov
pop
test
mov
out
cmp
jg
pop
mov
lret
and
ret
scas
cmp
lods
dec
in
xchg
inc
lfs
or
sbbl
mov
push
leave
test
adc
sahf
leave
call
mov
mov
jle
test
mov
xor
cwtl
add
pop
test
ret
xchg
je
out
jecxz
fsubs
lea
jo
and
mov
int3
rcll
push
push
cmpsl
fidivl
mov
je
jae
cmp
roll
xor
test
insb
jecxz
mov
dec
xor
in
and
inc
stos
roll
mov
arpl
into
cli
data16
iret
inc
popf
jo
xor
pop
lahf
adc
imul
fldenv
out
lods
enter
xlat
sub
or
xchg
jbe
and
pop
sbb
dec
mov
bound
mov
ja
mov
call
cmp
data16
and
sbb
mov
mov
or
int
jno
cmp
nop
dec
imul
or
pop
lcall
pop
pop
dec
mov
out
mov
mov
loope
add
xchg
cmp
xor
out
cmpsl
es
pop
mov
lods
ljmp
leave
xlat
sahf
pop
xchg
inc
popf
adc
shl
xor
fistpl
xor
jae
test
outsl
mov
mov
adc
mov
sub
mov
mov
sub
jne
mov
pop
pop
push
mov
std
adc
sub
dec
in
xchg
addr16
jp
sbb
jl
push
jns
enter
fistpl
sbb
xchg
add
adc
sbb
sub
out
or
addl
fdivrs
xchg
jge
pop
cltd
in
rcll
std
das
test
sbb
mov
out
mov
pop
mov
std
xorl
xlat
jmp
loop
xor
jecxz
inc
in
adc
xor
dec
dec
mov
lock
test
mov
cmp
in
sub
loope
std
jnp
nopl
sbb
rorb
lret
insb
cmpsb
cmp
psubb
in
cld
mov
int3
popa
mov
rolb
mov
outsl
ss
fists
mov
lea
scas
fcos
and
mov
mov
addb
jb
pop
fmuls
add
xlat
fstl
sti
scas
lods
arpl
push
rol
popa
or
ret
xor
arpl
jle
shl
mov
jns
lods
add
popf
ja
mov
lcall
lahf
hlt
dec
dec
roll
dec
jae
add
rcrb
or
or
shll
inc
loopne
aaa
rcr
ja
push
adc
shlb
lds
jle
pop
xchg
xchg
pop
mov
divl
dec
cmc
cmpsl
or
shlb
or
mov
or
stc
and
push
dec
sub
xchg
mov
in
je
cmp
pop
mov
inc
shrb
rcl
in
jns
divl
pop
mov
mov
inc
jle
das
or
sti
dec
int3
clc
lods
lods
iret
sbb
pop
cltd
ds
arpl
pop
inc
ss
sub
jp
ljmp
and
pop
sbb
cli
mov
outsl
xlat
or
dec
scas
test
or
dec
bound
jnp
sahf
xor
or
pop
outsl
aas
ss
dec
cmp
loopne
xchg
mov
cli
pop
fs
push
add
mov
clc
inc
dec
fsubs
in
test
and
push
dec
jbe
xchg
sti
mov
imul
add
mov
jo
and
out
out
pop
xchg
sbb
add
sbb
jle
push
pop
mov
mov
mov
mov
dec
fstpl
addr16
inc
push
outsl
or
daa
leave
addr16
scas
cmp
xor
insl
jbe
data16
cmpsl
mov
jno
mov
int
xchg
and
pop
ficomps
out
jno
fsubs
pop
movsb
xor
insl
adc
xchg
bound
pushf
and
insl
int
sbb
xor
outsl
ljmp
mov
ret
cmpsb
rorl
mov
mov
or
cmc
cld
movsb
int3
lret
xchg
popa
mov
ljmp
mov
ds
mov
sar
sbb
jg
jle
jg
jge
orb
pop
dec
aas
leave
mov
daa
test
mov
push
aad
clc
stc
push
repz
and
cmp
enter
pop
xor
lcall
adc
in
jecxz
cli
out
test
xor
pop
mov
inc
adc
sub
adc
fcmovu
adc
out
nop
fimull
add
mov
or
mov
fs
xor
testb
push
sub
mov
cmp
sub
insl
pop
repnz
clc
xor
lods
sarb
pop
mov
jle
cmpsb
fwait
or
rcr
in
sbbl
jp
jbe
dec
fs
lret
imul
cpuid
dec
jp
sub
sbb
jg
loop
sub
packuswb
cmpb
jns
cltd
lcall
inc
cmp
fnstenv
lds
jle
jl
xor
pop
shlb
popa
out
mov
cs
movsb
xor
xor
add
mov
daa
push
std
push
or
sbb
and
jb
bound
ds
adc
mov
sub
dec
in
lock
into
jb
lock
arpl
imul
daa
out
jle
mov
nop
and
pop
pop
add
adc
and
stc
ss
sub
mov
notl
or
mov
push
pop
and
gs
lret
sub
adc
sub
into
int3
cmpsb
loope
mov
ret
jae
daa
push
outsl
xor
or
mov
xor
aad
rol
out
jle
in
sysenter
insl
jb
popf
push
sbb
test
xchg
sbbl
jbe
adc
dec
shlb
in
out
movsb
mov
adc
pushf
pop
sub
idivl
pusha
push
dec
repz
push
sbb
push
cmpsb
in
icebp
movb
add
scas
xchg
cli
iret
mov
lret
mov
xchg
inc
ret
out
ljmp
insl
in
push
pop
leave
xchg
dec
outsb
pushf
test
or
wrmsr
mov
lods
test
push
jo
lds
lcall
xchg
cmp
jmp
pop
and
or
xor
shll
fisubl
dec
icebp
jmp
and
dec
jae
xor
adc
cmp
icebp
loope
dec
jns
lds
std
sub
stos
cld
or
push
sbb
mov
mov
xor
repz
jp
fmul
inc
lock
test
lea
cmpl
enter
lods
movsb
dec
mov
add
fucomip
lcall
js
into
es
nop
xor
jne
outsb
dec
xor
cmc
mov
in
and
fcos
ffreep
outsb
sub
pop
repnz
enter
xchg
dec
adcl
push
pusha
fs
xchg
test
jnp
inc
sub
add
pop
gs
jnp
sahf
mov
fbstp
cmpb
addr16
mov
mov
push
sbb
lock
lea
lds
test
ja
in
mov
stos
sahf
pop
mov
cmp
xchg
lds
inc
fdivr
outsl
int
mov
and
icebp
lods
mov
roll
nop
aaa
mov
sub
mov
dec
pusha
nop
mov
xchg
call
jmp
jecxz
jne
xchg
out
xor
sub
jo
addr16
outsl
sbb
xchg
cmp
adc
mov
out
or
sub
inc
mov
lcall
dec
mov
mov
in
adc
sarl
mov
lods
daa
add
xorb
push
adc
dec
cmp
jae
lahf
pop
ja
inc
movsb
lock
je
sbb
out
test
ljmp
inc
push
lret
int3
xor
mov
push
outsb
cltd
xchg
xchg
add
xchg
and
flds
nop
sbb
sub
cmp
icebp
inc
stos
cld
add
pop
int
pop
mov
notb
mov
or
scas
adc
xchg
pop
cli
test
es
outsb
xchg
test
push
mov
or
mov
mov
pop
xor
or
mov
movsb
sbb
fldenv
xor
inc
enter
scas
mov
or
mov
mov
cmp
fiaddl
hlt
push
pop
scas
filds
aaa
mov
pop
in
jl
cli
adc
lret
fldcw
pop
inc
mov
lahf
xlat
out
in
cltd
lcall
jecxz
fs
and
test
mov
jno
cmp
outsl
xchg
or
lahf
fmuls
jo
aaa
call
repnz
cmp
xchg
jg
push
push
cmp
mov
bound
fdivl
outsb
into
sbb
es
dec
xor
outsl
add
or
and
addr16
pop
int3
cmp
testl
cmp
addb
mov
leave
packuswb
sbb
neg
shll
xchg
and
test
out
aas
add
repnz
add
pop
xor
fstpl
sbb
adc
push
or
jecxz
xchg
mov
mov
or
out
subl
mov
inc
push
jbe
cli
dec
leave
in
sub
mov
clc
pop
push
test
cmpsl
imul
inc
and
fbstp
pop
out
cmp
or
cmp
dec
adc
lahf
xorb
xor
aad
fwait
je
incb
data16
sub
arpl
adc
pop
sbb
imulb
loop
test
test
mov
or
add
in
cltd
and
or
call
sub
inc
addr16
push
sbb
cmp
cmc
test
xor
pushw
inc
pop
push
adcb
dec
jne
jle
push
pop
pushf
fistl
gs
lods
pop
addb
lret
inc
mov
roll
ret
push
repz
cmp
sbb
or
imul
out
out
xchg
mov
addr16
cs
push
in
in
aam
scas
mov
sub
lahf
add
cmpsb
ljmp
mov
xor
icebp
mov
jecxz
jecxz,pt
inc
pop
ja
mov
jns
jl
dec
repz
es
daa
inc
inc
cmp
cs
push
fs
ja
push
imul
lock
mov
sbb
je
xor
repnz
pop
lods
lret
imul
xrelease
fidivl
repnz
inc
hlt
popa
jp
out
pop
divl
and
mov
jg
or
aaa
push
xor
ljmp
les
push
into
or
xor
sbb
insl
repnz
and
mov
mov
xor
cli
sbb
icebp
or
push
fsubs
pop
jb
or
jae
rclb
mov
js
and
mov
popa
xchg
sub
or
sahf
rcl
push
dec
xchg
push
add
and
dec
mov
pop
xor
cltd
sub
js
orl
test
xor
int3
pop
js
xchg
lret
sub
and
clc
fnstcw
cmp
roll
sub
ficoml
frstor
scas
mov
int3
movsb
lds
dec
lahf
call
and
mov
cwtl
out
nop
push
xchg
in
shrl
fs
lock
xchg
popf
mov
pop
and
inc
shrl
pop
jae
fsub
cmpl
mov
xchg
int
add
lods
fisttpl
aam
mov
push
or
add
lock
stc
adc
xchg
and
mov
iret
inc
cmp
leave
lods
popw
push
cmc
sbb
inc
push
mov
push
inc
xor
dec
or
insl
xchg
push
push
push
es
movl
push
xchg
jno
jmp
clc
fldenv
mov
addr16
addr16
fadd
gs
ss
jb
jle
fs
cmp
jae
repnz
in
sahf
sbb
dec
jns
push
lret
or
or
pop
cli
and
loope
push
sahf
xor
cmp
mov
lock
scas
loopne
mov
pop
call
pop
addr16
xor
pop
pop
adc
in
es
addr16
les
lods
jne
add
das
adc
cmpsb
pop
cmpsb
xor
pop
add
cmp
pand
push
pop
pop
and
mov
xor
xchg
mov
xchg
lds
iret
loopne
aaa
in
cmp
stc
out
dec
dec
or
mov
pop
lahf
push
mov
sub
mov
negl
cld
cmp
xchg
pop
call
jp
sbb
mov
xchg
push
lcall
and
movsl
jmp
leave
popa
mov
inc
mov
insl
fcomps
mov
pop
mov
add
push
movsl
xor
in
sub
sub
mov
xor
test
or
push
or
inc
jge
orb
mov
pop
gs
aam
sub
in
imul
and
in
bound
and
cmpsl
aaa
hlt
mov
fs
sti
push
mov
add
movsl
push
pop
cwtl
push
inc
inc
pop
jg
test
jp
dec
out
mov
jge
sbb
out
add
loope
xchg
mov
cwtl
adc
push
sub
xchg
pop
scas
pop
outsb
cmp
mov
or
sub
inc
popf
mov
cwtl
insl
rcr
js
dec
push
in
xor
sbb
mov
add
mov
jns
addl
lahf
int
out
imul
mov
mov
aas
jp
loope
jo,pn
push
iret
xor
shl
dec
mov
daa
jmp
sti
arpl
nop
pop
ljmp
into
fs
and
jo
fsub
sbb
mov
testb
icebp
bound
adc
loope
add
push
clc
dec
dec
cmpb
mov
leave
pop
cmpl
repz
sub
mov
cmpsb
pop
cwtl
data16
ret
cmp
dec
xchg
cmp
imulb
mov
adc
mov
push
aad
sbb
pop
mov
bound
cmc
ljmp
or
leave
dec
in
mov
fisubl
fisubs
test
pushf
fsubl
inc
shrl
mov
out
frstpm(287
push
sub
sub
repz
outsb
or
add
and
fcompp
xlat
lods
sbb
lret
fidivrs
xchg
and
push
sahf
daa
fwait
inc
pop
je
xchg
cmp
test
mov
orl
ret
test
xchg
scas
cmpsl
subl
ret
in
in
imull
negb
mov
fsubrl
ja
arpl
clc
movsb
int3
lods
sub
out
daa
push
movsb
idivb
ja
and
fs
dec
pop
inc
fwait
jno
jecxz
enter
xchg
push
int3
cmp
nop
lods
inc
xchg
pop
mov
mov
mov
mov
ret
mov
push
sub
inc
xchg
stc
or
sbb
ljmp
imul
and
test
outsb
mov
mov
arpl
add
lcall
pop
dec
jo
in
push
ljmp
out
sub
mov
add
inc
scas
cld
mov
add
jecxz
sub
rorl
add
and
rolb
ret
pop
arpl
insl
dec
cmp
scas
push
xor
inc
xchg
mov
lods
pop
outsl
pop
or
and
test
les
sbb
mov
xor
cli
les
in
inc
aaa
push
push
mov
pop
fdivl
ret
inc
sti
leave
gs
jbe
test
inc
fldt
in
xchg
lret
sub
test
adc
dec
sub
inc
cmpsl
popf
adc
cmp
cmp
es
repz
dec
jp
jge
mov
adc
mov
mov
push
sub
sbb
popf
cmp
divl
sub
insl
sub
dec
cmc
or
adc
movsl
imul
lret
push
xchg
mov
cmp
sub
ror
push
adc
loopne
xchg
adcb
push
popa
add
adc
lock
out
nopl
cmpl
jb
fstpt
jg
mov
add
dec
push
xlat
inc
sbb
lock
adc
mov
shll
inc
and
addr16
sub
cmp
cmpsb
or
pop
dec
ret
mov
test
mov
in
mov
xor
fsubrl
pop
push
sahf
jns
xlat
stos
push
cmp
push
jp
loopne
call
and
push
setns
adc
add
push
sbb
dec
es
and
pop
dec
mov
fst
push
fcmovnbe
popf
xor
mov
or
sti
jne
push
dec
inc
and
aad
sub
push
xorl
or
or
insb
lods
daa
pop
sbb
pop
jecxz
in
push
and
or
lret
repz
add
pop
mov
xchg
arpl
cmc
pop
cmpsl
inc
mov
push
pop
xchg
test
fisttpl
fisubrl
add
shrb
inc
mov
bound
rcl
lret
stos
jb
repnz
cmp
jl
or
mov
jo,pn
add
lock
outsl
movsl
xchg
movsb
data16
inc
push
dec
and
test
dec
adc
xchg
push
mov
mov
pop
data16
lret
adc
movsb
push
mov
sub
sub
lcall
fisttps
cmpsb
lea
add
outsl
adcb
gs
add
clc
push
mov
push
lret
lea
pop
inc
icebp
jae
bound
lea
mov
enter
lcall
jge
and
out
pusha
scas
sbb
dec
jbe
adc
jnp
cs
cmpsl
and
out
mov
iret
cmp
pop
imul
add
ds
pop
xor
or
jb
arpl
negl
mov
faddl
lods
pusha
pop
imul
sarl
xor
xchg
ret
out
dec
dec
or
jecxz
mov
inc
mov
pushf
push
or
aad
and
pop
pusha
sub
push
jg
leave
push
mov
dec
cmpl
and
inc
call
xchg
jge
test
in
orl
sbb
mov
jno
push
ss
das
fcomps
int
and
mov
orb
int
pusha
mov
and
mov
jp
inc
leave
sahf
addb
ror
push
jne
inc
mov
pop
pushf
push
sahf
pop
movsl
test
out
scas
pushf
outsl
hlt
iret
mov
mov
notb
stos
pop
sub
jmp
sti
fisubrl
and
iret
in
mov
or
inc
xchg
fwait
inc
gs
xchg
or
jns
dec
sub
adc
ret
out
das
iret
lcall
pop
pop
push
sarb
ss
mov
cwtl
mov
pop
and
out
xlat
pop
lods
sub
push
push
cmp
pop
loopne
push
fisttpll
jecxz
or
dec
mov
mov
cwtl
fistpl
inc
cmpb
cli
ret
pop
pop
int3
mov
mov
ret
in
or
outsl
push
mov
sarl
fisubl
out
cmp
sub
cmp
and
loope
subb
mov
and
jae
mov
mov
cmp
inc
fistl
push
insl
adc
sti
pop
adc
fnstenv
mov
aad
push
inc
mov
lahf
mov
sub
mov
cs
enter
cs
ds
mov
fimuls
inc
popa
ret
cmp
or
ret
and
jle
mov
fnstcw
push
outsl
mov
cmpl
xchg
sub
jbe
mov
sarb
mov
jl
dec
movsl
aam
sahf
jmp
and
jns
mov
arpl
dec
stc
in
cmc
push
mov
pop
push
dec
call
testl
jg
pop
mov
imul
push
fnstsw
inc
cmp
jns
jp
xlat
fwait
or
push
mov
loop
mov
xchg
ficompl
pop
pusha
dec
or
imul
cmpl
cmc
notb
push
ljmp
push
arpl
xor
push
int3
xchg
insl
fstp
jecxz
fimuls
sbb
mov
add
pop
jne
sbb
dec
pop
fidivl
pop
jle
inc
xchg
mov
add
rcrb
and
lcall
loope
sbb
push
les
into
and
cmp
fistpl
divl
aas
push
dec
adc
jmp
in
les
push
xor
cs
incl
arpl
pop
pusha
cmp
dec
ss
stos
mov
xchg
shlb
imulb
lahf
lods
aad
inc
and
bound
pop
adc
jo
fs
test
mov
or
mov
or
test
out
add
ljmp
sbb
xor
push
cmc
lods
cmp
cmp
cwtl
or
and
sbb
mov
clc
ljmp
jbe
adc
imul
testl
push
push
popa
cld
fs
outsb
out
outsl
adc
les
pushf
cmp
jl
enter
mov
test
and
aad
or
mov
mov
xorl
cmpsb
push
pop
enter
hlt
add
mov
xorb
sub
rorb
in
jle
xchg
mov
cmpsl
push
in
fcmovnbe
insl
push
loop
mov
mov
and
mov
mov
mov
lods
jle
jne
mov
xchg
cmpsb
cmp
jmp
ja
xchg
mov
pop
sbb
in
xlat
adc
clc
add
mov
inc
add
in
les
rclb
test
scas
int3
add
xchg
mov
jb
out
stos
cmc
xchg
pop
ljmp
mov
in
lock
nop
jne
insb
ja
es
rorb
or
sar
push
mov
add
sub
pmuludq
lret
stos
push
mov
dec
pop
enter
out
cmp
daa
mov
dec
xlat
sbb
mov
dec
ret
and
fdivs
addb
dec
fcompl
adc
xchg
mov
pop
pop
sbb
xor
push
insl
or
js
iret
xor
mov
icebp
orb
pop
pop
ja
call
jns
or
in
ds
sbb
mov
push
jmp
mov
cmp
mov
sbb
mov
sbb
daa
ficompl
xchg
cmp
jns
push
aaa
add
ret
adc
movsl
xor
cmp
fcoms
mov
es
inc
mov
movsl
and
sbb
xchg
jl
jle
adc
inc
data16
sbb
mov
fstpl
push
push
adc
adc
sbb
les
std
jmp
cld
pushf
je
addb
out
inc
pop
add
lods
aam
rcrb
sub
pop
aas
addr16
andb
scas
loope
ss
or
in
or
jmp
pop
jle
sbb
cmp
sub
sti
pop
fidivrs
mov
ljmp
enter
es
mov
out
xor
xchg
mov
leave
dec
mov
and
les
push
scas
jecxz
int3
mov
pop
sbbl
jecxz
pop
dec
rorb
fisubrs
das
mov
lea
cmc
scas
out
jne
inc
adc
lahf
or
test
cli
in
aam
in
cmpsb
gs
add
pop
fsts
mov
jmp
pop
stos
faddl
imul
push
lret
xchg
mov
push
pop
xchg
mov
mov
scas
or
mov
jno
cmpsl
mov
scas
fwait
daa
push
test
out
push
push
xor
xor
je
jg
lock
dec
adc
mov
cmpsb
clc
inc
in
cli
dec
dec
clc
lcall
aaa
repnz
sti
testl
dec
adc
lea
or
in
jp
adc
dec
xor
inc
mov
and
jbe
and
mov
add
pavgw
push
mov
xchg
add
rorb
mov
pop
shrl
sbb
movsb
mov
test
clc
push
sub
jmp
dec
cmp
push
add
mov
jns
and
push
js
push
jae
cld
xchg
je
lcall
outsb
js
mov
cs
inc
cmp
and
mov
cwtl
sub
aam
aas
fiadds
inc
in
test
shrb
sbb
cmpl
jno
shll
sbb
pop
pop
jns
adc
test
sahf
and
sub
inc
jne
shlb
pop
or
pop
shrl
popa
inc
ja
lds
int
fmull
adc
add
popa
mov
adcl
insb
cs
fdivs
leave
dec
cli
and
and
xor
addb
adc
dec
outsl
cmp
pop
sbb
lds
or
and
sub
mov
popa
pop
cmp
and
sbb
hlt
mov
out
adcb
test
xor
scas
out
sub
mov
mov
mov
fidivl
push
mov
inc
dec
js
pop
and
mov
fdivrs
shl
jbe
lock
mov
pop
jae
mov
dec
adc
out
mov
repnz
test
jae
rcrl
es
lahf
fcmovu
loop
ja
pop
scas
push
hlt
mov
adc
sbbl
xchg
mov
pop
insl
mov
mov
xchg
jbe
in
push
repnz
cmp
mov
dec
pop
aam
cmpsb
xchg
scas
push
test
enter
imul
dec
es
cmpb
ror
dec
push
jnp
clc
xor
out
addr16
gs
lret
and
xchg
xor
dec
icebp
xchg
pusha
shll
mov
gs
pop
sbb
jp
pop
and
sub
mov
or
icebp
inc
jmp
mov
fidivs
and
mov
ss
fisttps
out
in
pop
mov
or
mov
cwtl
test
adc
movsb
fwait
sub
push
divl
pop
pop
xchg
add
cmp
mov
xor
push
lahf
cmp
jl
mov
cmp
in
fsubp
xchg
test
leave
outsl
inc
lahf
xchg
adc
dec
xchg
enter
les
mov
fidivs
adc
popa
sbb
cmpsb
adc
loopne
lods
shl
sub
push
cmpsl
imul
push
lahf
pop
xchg
xor
dec
sub
jmp
shlb
xchg
push
mov
iret
test
cmp
test
pop
push
ss
jge
insb
pushf
dec
cmp
cmp
outsl
pop
scas
adc
mov
xor
lds
jb
or
cwtl
mov
les
sbb
push
add
mov
rcll
and
aam
inc
sub
aaa
mov
rol
imul
test
addr16
addl
xchg
mov
fisubl
adc
add
jge
or
movsb
jle
insl
sbb
sub
sbbb
dec
mov
sub
mov
gs
scas
xor
std
pop
leave
div
lods
fldt
mov
test
ds
cmpb
imul
mov
xlat
or
sti
stos
cmp
jg
xchg
js
pushfw
out
aas
sub
js
fidivrl
adc
cmp
adc
or
inc
mov
mov
mov
xchg
cmp
rcll
inc
cli
popa
add
mov
sarl
inc
mov
lods
je
and
rorl
xor
mov
orb
std
jne
sbb
scas
sbb
pop
jns
push
inc
les
cmp
add
out
and
jbe
rclb
and
fiaddl
jmp
fwait
xorb
mov
testl
inc
mov
sbb
xchg
loope
out
adc
sub
aas
mov
push
fwait
rorb
cmpsl
inc
mov
inc
push
outsl
push
dec
inc
outsl
dec
rorl
xor
les
bound
jl
pop
and
aaa
cmpsb
pusha
adcl
notl
sub
ja
insl
adc
fdivl
xchg
sub
adc
mov
mov
dec
xchg
mov
dec
and
pop
push
jnp
clc
les
sbb
sbb
sti
movsl
es
pop
outsb
fwait
mov
mov
loopne
push
jnp
cli
stos
push
xchg
xorl
adc
cmpsb
out
out
mov
push
aad
inc
jp
jecxz
test
loope
sub
lds
nop
mov
mov
pop
xchg
fisubrs
scas
lahf
push
js
out
mov
sbb
lcall
hlt
push
pop
xor
das
lcall
data16
insb
pop
push
hlt
movb
xchg
sbb
mov
cmpl
cmp
popa
icebp
xor
jge
fwait
or
inc
negl
sbb
enter
in
mov
das
iret
jp
popa
or
jae
call
cld
iret
inc
sar
mov
shr
add
lcall
lods
jmp
pop
or
cmpsb
cmp
fmull
movsl
cmc
enter
out
ds
lods
rorb
std
pop
loop
cltd
shlb
shlb
pushf
jl
mov
mov
movsl
stos
and
scas
loop
cmp
or
in
nop
cmc
enter
jno
movsl
push
lcall
test
je
pop
sub
xchg
cwtl
cmp
scas
rcll
pushf
loop
cmc
in
mov
jecxz
cmp
hlt
pop
into
sub
arpl
out
sarb
aam
in
mov
inc
data16
push
stos
push
push
mov
js
pop
outsb
mov
pop
stos
in
fwait
lahf
scas
rclb
pop
out
jns
out
repnz
pop
adc
inc
loop
push
imul
jbe
pusha
call
jp
fdivrs
lods
std
xor
mov
dec
pusha
inc
xchg
stc
and
sub
cmpsb
arpl
les
mov
cwtl
fs
aad
test
insb
jno
mov
lds
int
and
sbb
mov
mov
aad
pop
jp
addl
jmp
rclb
push
push
xor
loop
cmpb
or
leave
and
hlt
stos
xchg
stos
and
adc
je
dec
push
repnz
or
xor
push
inc
dec
mov
mov
lds
sub
and
pop
mov
jmp
mov
fcmovnbe
xchg
scas
repnz
in
out
sbb
pop
jns
insb
xor
das
enter
push
notb
cwtl
push
nop
ret
test
adc
push
outsb
loopne
scas
mov
xchg
jno
lcall
cmp
add
xlat
mov
xor
testb
int3
aam
xchg
xor
orb
mov
xorb
pop
stos
nop
mov
sbb
jnp
cmpsl
mov
les
ljmp
adc
inc
or
out
sbb
dec
popa
sub
shll
mov
jno,pn
shrb
push
ljmp
push
ljmp
cwtl
mov
add
dec
cwtl
repz
les
scas
cmpb
xchg
push
addr16
out
inc
lcall
scas
adc
add
xchg
fistpll
loopne
mov
pop
aaa
aad
xchg
ljmp
jmp
cmp
popf
adc
fdivl
sbbl
call
pop
lea
leave
test
rcrb
out
xchg
sbb
shlb
dec
sti
arpl
pop
stc
jge
aam
cmp
mov
jmp
lock
push
ds
xchg
and
lcall
push
nop
xchg
mov
lods
jecxz
add
mov
mov
std
stos
push
clc
test
push
cmp
iret
xor
add
adcl
push
loope
cmp
mov
gs
out
aas
pop
enter
subl
inc
aad
icebp
cmpl
lods
scas
subb
pusha
cmp
test
sub
nop
jnp
and
sub
mov
nop
lcall
push
add
xor
xor
add
jmp
xchg
pushf
mov
adc
fst
or
add
in
in
daa
movb
fildll
lock
ret
lret
and
andl
mov
insb
addr16
sub
scas
lcall
fidivrl
add
movb
and
mov
sbb
mov
lret
ret
mov
mov
and
cmp
in
cmp
push
mov
and
fildl
mov
clc
decb
insl
push
sub
dec
in
push
cwtl
pop
cmp
jle
dec
clc
mov
sub
sbb
mov
cmp
mov
or
push
adc
push
dec
dec
jb
repnz
cmp
movsl
dec
add
xchg
xchg
ret
mov
cmc
pop
jns
inc
xor
pop
int3
int
adc
stos
add
lcall
insb
inc
xor
aas
lods
sub
out
mov
nop
or
or
sub
ljmp
or
lods
pop
jge
add
mov
inc
and
xchg
es
or
push
loope
sub
lods
inc
jno
lahf
push
sarb
lock
outsl
mov
inc
imul
ljmp
sbb
pop
xchg
ret
test
or
paddusb
mov
bound
mov
fisubrl
lret
int
pusha
sub
inc
shrl
pop
xchg
movsb
fisubl
jmp
jno
mov
sbb
lahf
push
xlat
cmpsl
fisubrs
cwtl
fisubrl
bound
mov
push
dec
mov
jnp
filds
push
inc
inc
jno
jp
xor
xchg
inc
inc
sahf
pop
and
xchg
mov
fwait
push
ret
pop
shll
xchg
mov
lock
add
test
inc
sbb
inc
loop
jle
and
adc
push
xchg
movsb
fwait
dec
mov
lea
aas
cmp
fdivs
or
push
call
pop
adc
fwait
dec
or
mov
push
push
fwait
add
mov
mov
aas
fs
jno
or
add
pusha
jg
jnp
mov
out
xlat
push
jbe
stos
pushf
sub
call
jp
sub
add
xchg
push
mov
dec
rorb
jecxz
push
adc
cmp
mov
sti
mov
push
aam
and
int
push
xlat
jl
push
bound
mov
mov
gs
cs
or
dec
add
push
lret
pop
mov
dec
sbb
mov
dec
xchg
mov
jb
lock
sbb
fldl
sub
and
aas
xlat
fsubrl
cltd
jnp
ss
dec
and
ds
xor
out
ds
insl
out
lcall
pop
out
lret
push
test
inc
inc
lods
imul
aaa
mov
and
mov
in
xor
int
or
out
inc
lcall
cmp
imul
pop
add
scas
xorl
dec
dec
jae
shlb
cmp
stos
sub
mov
mov
ret
test
cmp
inc
les
lock
xlat
jno
and
and
enter
out
cmp
push
add
fidivs
sub
adc
adc
movsb
call
outsl
pushf
jne
lds
push
test
push
and
pop
repz
push
aas
mov
cmp
dec
cmp
fsub
clc
add
ret
aas
fildl
das
sub
roll
movsl
mov
pop
popa
daa
xchg
mov
shll
hlt
add
testl
pushf
mov
outsb
iret
xor
fsub
in
in
pop
fadd
js
adc
xor
xor
xor
out
xor
pop
loope
inc
xchg
mov
insl
mov
rcrb
test
adc
mov
nop
movsl
push
sarl
push
jo
mov
aam
shrb
popa
les
jp
sub
push
pop
pop
lahf
push
ljmp
add
sahf
sbb
dec
inc
lods
jl
jne
mov
or
cmp
imul
add
rcrb
hlt
daa
loopne
add
shrl
test
mov
inc
pop
popa
out
dec
sub
sbb
xor
xor
adc
das
repz
lret
fs
aad
sub
movb
ljmp
daa
xchg
rcr
xchg
xchg
cwtl
jge
adc
bound
dec
pop
jecxz
mov
imull
sbb
in
addr16
or
and
pop
cli
sbb
pop
test
mov
sbb
push
cltd
shrl
aaa
lock
adc
mov
pop
lahf
push
push
insb
jl
out
rol
xor
mov
add
jbe
inc
ljmp
std
lds
fsts
xlat
loop
subl
fcoml
pop
pop
push
mov
aad
int3
lcall
ret
outsl
movsl
xchg
xchg
push
ss
dec
add
xor
jecxz
fiaddl
jae
dec
sbb
lret
sub
mov
jle
inc
adc
lods
scas
cmp
test
stos
sti
rolb
aas
mov
inc
xorl
jbe
push
fadds
jno
lahf
dec
imul
jne
lods
cmp
mov
sbb
push
fwait
lock
jo
cmp
sub
dec
in
jne
cmpsb
shrl
push
or
sarb
xor
xor
mov
adc
mov
add
adc
cltd
imul
adc
cmp
mov
or
cmp
je
aas
adc
pop
or
dec
and
add
jmp
bound
rcrw
imul
lret
cmp
cmp
pop
clc
mov
pop
and
rorl
sub
pop
cmpsl
xor
shll
jp
xor
push
setnp
or
imul
ds
int3
inc
nop
sti
inc
sbb
ficoml
mov
push
movsl
cmpsl
cmp
insb
lods
add
jbe
cltd
jbe
rclb
jle
stos
add
xchg
inc
pop
outsb
hlt
cwtl
jnp
jno
gs
inc
insb
lret
cmc
dec
ret
movsl
arpl
mov
sbb
add
pop
dec
lret
das
std
mov
and
out
fcmove
shrb
sub
test
jp
mov
test
xchg
icebp
push
sub
data16
rcr
das
dec
out
dec
mov
lret
shrl
inc
mov
popf
loope
je
jecxz
sub
lods
jmp
enter
loop
pop
movsl
mov
jnp
or
mov
aas
aam
gs
sahf
dec
or
xchg
stc
mov
push
addr16
in
out
mov
push
bound
mov
int
pushf
and
cmp
or
jmp
fst
mov
and
outsb
aaa
and
inc
sar
cltd
mov
aad
mov
pushf
out
xor
hlt
adc
inc
js
dec
hlt
cs
mov
in
pop
fcoms
rcr
pop
dec
lds
or
popf
push
scas
ljmp
cs
ffreep
mov
xor
in
push
push
loope
rolb
pusha
filds
and
xlat
or
les
sbb
xchg
dec
xor
jl
cmpsb
not
in
mov
imul
test
dec
add
xchg
mov
cmp
nop
cld
jmp
mov
xchg
adc
and
pushf
rorb
mov
lahf
mov
into
jae
ds
scas
pop
lods
push
jnp
cmp
lea
lret
repz
push
ret
sbb
mov
enter
fidivs
sahf
pop
push
les
jae
pop
jne
sub
jg
xor
sbb
xchg
fists
mov
xchg
sete
push
and
jge
xchg
arpl
loope
jnp
mov
scas
imul
jecxz
and
ss
je
mov
xchg
iret
loop
out
xor
sbb
fstps
jo
negl
mov
je
ja
icebp
xor
popf
into
pusha
scas
sbb
mov
js
lods
mov
sub
stc
jg
ret
jmp
jbe
pop
sbb
inc
add
decl
jg
sbb
addr16
pop
pop
push
inc
push
mov
dec
pop
mov
mov
push
cmp
loope
mov
lds
push
xor
leave
aas
divl
mov
imul
es
add
shll
adc
jle
cmpsb
sbb
dec
jbe
xor
cmp
push
pushf
out
jecxz
cmp
dec
ficompl
out
pop
cs
xchg
mov
add
mov
in
sub
clc
sbb
add
sbb
cmpsl
imul
or
xchg
push
push
push
lea
leave
rol
pusha
sahf
jg
push
sbb
hlt
mov
arpl
cmp
sti
sub
jg
adc
out
or
imul
push
aam
xor
subl
add
aam
pop
push
repz
pop
pop
xor
push
aam
xchg
dec
or
ficoml
subl
jg
or
cmp
dec
iret
cs
sub
xchg
leave
jne
push
mov
adc
lods
je
adc
rol
jbe
cld
lret
mov
mov
push
fbld
ds
call
mov
test
sub
jp
xchg
pop
aad
sub
adc
pop
xor
lcall
out
addr16
repz
xor
into
jno
dec
push
push
ja
sbb
mov
and
loopne
sub
or
mov
cmp
jl
int3
in
stc
dec
in
or
shlb
dec
addl
mov
leave
scas
mov
and
push
mov
sbb
dec
add
adc
mov
imul
push
inc
outsb
push
push
xlat
rol
add
inc
mov
movsl
and
pusha
inc
or
js
ret
sub
sbb
adc
js
mov
stos
pop
sub
mov
push
idivl
sub
pop
inc
mov
gs
imul
aam
pop
out
mov
and
jae
push
ja
imul
les
pop
jp
sbb
lcall
push
mov
dec
into
lods
in
mov
inc
leave
push
mov
imul
sti
xchg
cmp
or
lods
notb
sahf
jae
push
cs
aam
add
adc
mov
std
mov
out
ljmp
stos
leave
push
fsubr
scas
push
dec
or
xor
adc
movsl
mov
lcall
mov
mov
fdivl
gs
rorb
dec
sub
cmp
mov
out
dec
je
cli
cmc
dec
negl
cwtl
adc
fsubrl
dec
inc
sub
push
adc
ror
addr16
sub
jnp
clc
test
or
into
push
dec
lcall
inc
mov
mov
leave
notl
ret
sbb
pop
call
inc
fcmovnbe
int
das
pop
sub
or
fidivs
jb
aas
or
stos
pop
icebp
fwait
int3
addl
pop
push
pop
mov
cmp
pop
fs
mov
pop
mov
jns
and
cmpsb
adc
js
xchg
insl
sbb
cltd
mov
xor
adc
adc
xor
cltd
movsl
fnstsw
mov
fs
mov
insb
mov
cli
daa
mov
mov
hlt
movb
cld
push
and
mov
jns
cwtl
cmpsb
or
insb
sub
xchg
stos
mov
inc
mov
mov
or
lods
push
or
cli
sarb
mov
cmpsl
ljmp
nop
push
imull
int3
mov
xchg
mov
ret
push
je
out
pop
mov
mov
push
xchg
cmc
mov
add
xor
push
and
test
testl
dec
shrb
cmp
movsb
or
pop
xchg
adc
test
or
cmpl
adc
arpl
fisubl
sub
adc
jb
xchg
stc
cmp
fistpl
addr16
sub
push
dec
sahf
lods
repz
xchg
jmp
push
jmp
xchg
shlb
jo
inc
jmp
mov
jl
mov
ljmp
leave
cmp
push
push
in
mov
fs
xor
cwtl
push
dec
addr16
dec
and
mov
inc
ljmp
ss
jbe
out
in
out
in
rcll
inc
rcl
in
sbb
pop
mov
jns
push
jne
xchg
cmp
lret
mov
inc
sarl
imul
adc
cltd
push
lock
shrl
pop
pop
cli
or
or
dec
repz
ret
pop
dec
cwtl
adc
mov
outsl
jns
movsl
shrl
dec
loope
add
ljmp
iret
lahf
jg
je
mov
ret
sub
icebp
test
xor
ds
test
inc
in
mov
sarb
negl
lret
add
jae
rclb
inc
fildll
jl
enter
bound
and
pushf
jbe
adcb
scas
enter
dec
sbb
dec
lods
mov
fistps
or
xlat
leave
rcl
je
cmp
pusha
cwtl
rep
add
inc
push
inc
mov
orb
js
mov
xor
mov
icebp
mov
dec
mov
popf
dec
mov
popf
ror
xor
sbb
add
mov
dec
mov
popf
xor
pop
adc
cmc
sar
xchg
imul
test
aaa
fidivrs
or
xor
sub
jne
cmp
adc
adc
cmpsl
xchg
nop
lret
div
and
fwait
leave
cmpsb
pop
pop
nop
sub
sub
jg
sub
sbb
arpl
test
shll
xchg
int3
or
outsb
pop
mov
loopne
xor
lods
jae
sub
out
xor
bound
ljmp
mov
or
imul
xor
dec
lahf
mov
call
jecxz
inc
out
scas
aam
mov
push
cmp
movsb
scas
xlat
cmp
das
les
inc
pop
and
push
and
rcrb
pop
in
nop
in
dec
cmp
push
sbb
sbb
sub
sti
dec
dec
mov
cmp
mov
cmp
iret
data16
inc
cmp
aas
jno
jbe
sar
lcall
aam
orb
pop
adc
jnp
push
insl
or
push
leave
push
insl
daa
mov
incl
lock
inc
lds
mov
mov
js
ja
addr16
cmp
add
shlb
fs
dec
cmp
mov
xorl
jbe
lcall
sahf
jmp
test
sub
mov
stc
jmp
mov
nop
or
fcmovne
xorl
and
outsl
cld
dec
cmp
jns
lret
mov
repz
je
bound
xchg
and
lret
lds
cmc
mov
jp
adc
mov
sarl
jl
lret
sbb
mov
sahf
pop
aaa
aam
xor
mov
add
sub
out
popf
fsubl
jne
std
lds
jae
aam
cmp
test
xchg
or
cli
or
loope
leave
adc
sub
cld
push
pop
fimuls
push
popf
rorb
adc
push
adc
mov
movsb
xor
inc
stc
filds
push
xchg
imul
iret
sti
pop
pop
pop
stos
es
imul
push
clc
sbb
and
adc
sub
pop
push
and
icebp
and
mov
push
in
rcrb
clc
das
mov
jbe
xchg
pop
fdivr
rclb
leave
pop
scas
jle,pt
jle
mov
aas
insb
jle
lret
xor
mov
adc
dec
in
add
mov
pusha
sbb
jbe
rcll
and
sbb
test
push
cwtl
push
mov
push
pop
int
cmp
xchg
xchg
aam
mov
repnz
mov
push
or
push
adc
imul
js
add
cmpsl
aad
repnz
in
xchg
mov
or
xchg
aad
pusha
in
arpl
inc
sub
lahf
mov
mov
inc
mov
loopne
addb
aaa
or
cmpsl
cmp
mov
loopne
adc
xor
and
jl
push
cltd
daa
outsb
clc
mov
xor
adc
in
add
cmp
xor
lock
adc
cltd
mov
mov
test
fistl
incb
fwait
xlat
and
fbstp
js
xchg
ljmp
jne
shlb
jl
imul
add
fwait
stos
inc
stos
cmpb
test
jae
das
pop
sub
cltd
adc
dec
aaa
jb
shrb
push
jecxz
lret
adc
push
sub
test
mov
sysenter
push
or
pop
js
fsubrl
adc
xchg
push
xor
push
movsb
enter
test
mov
data16
jnp
push
or
aad
incl
sbbl
jnp
sub
mov
jbe
loope
bound
jecxz
xchg
sub
add
loop
mov
mov
sar
aaa
or
push
xor
cmp
or
movsb
sub
pop
rcr
xchg
dec
sub
dec
add
clc
add
outsb
adc
mov
out
imul
test
lods
mov
jbe
cmpsb
push
push
xor
arpl
rorl
movsb
jecxz
sbb
pop
xlat
ret
cmp
or
fistps
xchg
popa
ljmp
push
add
push
leave
insb
sti
leave
pusha
add
push
push
je
stc
add
fwait
add
xor
sub
icebp
scas
nop
outsl
test
outsl
fsubr
mov
xorl
and
jb
stos
mov
clc
insb
lahf
imul
stc
sbb
mov
test
pop
jle
mov
jge
xchg
scas
xchg
pop
ja
mov
ss
mov
lahf
cmp
mov
mov
fsubrs
in
lcall
inc
cmp
dec
cltd
and
movsb
imul
in
jo
leave
ss
mov
test
mov
ljmp
lock
pop
sbb
pop
insl
sub
in
jp
daa
push
lahf
add
in
arpl
stos
or
das
mov
xchg
leave
lods
cmp
stc
cmpsb
repnz
inc
push
adc
aad
imul
scas
lcall
bound
sub
mov
ret
cmpsb
pop
adc
sti
adc
out
pop
push
pusha
push
mov
mov
call
xor
movsl
outsb
adc
and
push
cmp
jg
pusha
mov
imul
mov
jl
in
rolb
and
jl
testb
and
mov
out
loop
sarl
adc
pop
jmp
push
inc
dec
push
aas
dec
adc
loopne
sbb
fbstp
and
lea
jmp
mov
mov
mov
push
hlt
mov
or
push
push
insl
scas
or
sub
and
ds
push
lcall
or
xchg
jge
sahf
ss
adc
add
aas
mov
out
xchg
dec
pop
repz
push
sub
jle
mov
cmp
add
cmp
dec
out
xchg
xchg
mov
into
inc
in
aam
jg
xor
clc
cmp
jnp
sbb
shl
test
and
mov
sbb
mov
cmpxchg
popa
fisubl
addr16
and
xor
fldt
dec
test
lods
idivl
pop
stos
scas
in
adc
jae
jg
inc
fists
sub
out
movsl
push
data16
mov
fwait
cmc
in
mov
inc
in
add
lcall
push
aas
jge
pop
mov
dec
sub
xor
push
inc
mov
add
std
mov
fwait
push
stc
jae
hlt
daa
inc
inc
push
popa
icebp
lret
xchg
das
test
or
mov
fsubs
push
addr16
jne
or
lods
sub
cld
push
fsubs
test
fdiv
insl
sti
xor
xlat
jnp
jg
mov
imul
sti
and
cs
scas
mov
cld
movsb
rcrl
jb
add
shl
pop
repnz
popf
and
add
mov
adc
mov
sbb
out
adc
outsb
dec
aam
sbb
and
and
test
cmp
bound
dec
mov
pop
daa
and
frstor
and
in
adc
das
pop
mov
repz
shll
inc
in
fldcw
xchg
and
mull
dec
sbb
add
xlat
fistpll
cmc
xor
add
dec
and
fsubs
sub
lods
ret
mov
mov
add
mov
mov
fcompl
xor
dec
test
loope
rol
lock
mov
aaa
xor
loope
icebp
stos
repnz
pop
cmp
dec
enter
imul
repz
cmc
popf
pop
jp
mov
xchg
cmpsb
aas
in
lahf
int
or
rcll
ljmp
stos
sbb
jle
xchg
xchg
sbb
jecxz
out
shlb
cltd
xchg
ds
ljmp
addr16
push
jno
loopne
bt
out
jmp
sub
or
push
jmp
xor
lods
and
sub
sub
mov
in
test
inc
push
cltd
pop
ljmp
test
and
jnp
jecxz
push
inc
roll
js
inc
sbb
cmpsb
jge
mov
int3
adc
in
imul
jb
daa
adc
add
pusha
dec
sahf
jb
adc
scas
sbb
push
sbb
data16
ret
mov
das
gs
pop
les
jle
pop
adc
sub
dec
add
pop
popa
adc
jno
or
jmp
adcb
outsl
and
add
cwtl
movsl
push
inc
ficomps
fists
dec
or
mov
add
fimuls
dec
cmp
into
les
push
jg
dec
icebp
loop
addr16
push
inc
pusha
jne
lret
ret
push
push
cmp
ljmp
pusha
xchg
dec
mov
mov
pop
jns
lock
xchg
int
and
leave
out
jb
data16
popl
inc
pop
xor
cmpb
out
or
push
pop
js
jle
std
shll
out
xor
test
lods
xorb
adc
getsec
das
add
xor
aaa
xor
jb
add
cmp
mov
stos
out
dec
inc
xchg
insl
dec
mov
repz
lea
push
out
loopne
sub
dec
jb
xchg
aaa
and
nop
mov
add
loope
dec
push
movsl
mov
mov
inc
ja
push
popa
enter
or
pop
push
cs
sub
addr16
push
push
xor
test
or
fdivrl
fld
mov
clc
cmp
int
adc
sbb
popf
mov
mov
push
clc
or
filds
lahf
push
mov
or
jl
mov
stos
push
shlb
mov
cvtps2pd
stos
in
std
cmpb
shl
out
dec
insl
nop
sbb
or
lock
jnp
sahf
fnstsw
test
popf
ss
pushf
sarb
out
pushf
cmc
lea
daa
push
roll
inc
sbb
dec
sbb
loopne
ud0
fisttpl
xor
cli
mov
add
and
or
imul
mov
mov
fs
push
dec
cmc
adc
sbb
push
mov
cli
inc
cli
andl
shlb
dec
push
cli
cli
lret
dec
pop
ret
scas
sar
stos
xlat
loope
inc
pop
dec
clc
lods
mov
outsb
arpl
icebp
jp
jae
pop
pop
ret
insl
xor
sbb
shl
xlat
jge
shrl
jo
jle
jle
sbb
jno
or
sub
add
jge
loopne
dec
fs
xchg
lods
or
in
add
mov
rolb
fsubl
stos
cmpsl
in
leave
mov
out
sbb
xor
or
sahf
testl
xchg
mov
pop
movsb
repz
push
adc
jle
dec
jb
sbb
push
cmpsl
lds
mov
pop
cmp
ret
mov
xor
bound
insb
jmp
out
sbb
rep
xor
push
xchg
sub
ret
push
lret
pop
insb
cmp
ret
xchg
out
mov
icebp
mov
xor
push
movl
gs
cs
sti
or
inc
lret
cld
jo
xlat
dec
push
pop
inc
add
cmp
dec
push
xchg
fnstcw
xchg
cltd
jae
sbb
test
push
xchg
lcall
in
or
repnz
mov
mov
mov
out
jbe
add
sub
sub
inc
push
add
xchg
inc
iret
sbb
dec
mov
xchg
pop
dec
in
cld
leave
jmp
mov
mov
dec
dec
stc
mov
mov
xchg
jecxz
lods
scas
out
arpl
dec
es
jb
test
cwtl
xor
mov
rol
les
dec
or
xor
pop
test
aam
cmc
cltd
jae
aad
inc
hlt
dec
adc
rcrb
mov
cltd
add
push
pop
sbb
pop
or
cmpsl
xchg
mov
sub
shl
cmc
fisubrl
dec
sarb
dec
fadd
jnp
and
sbb
mov
mov
pop
arpl
add
push
push
inc
mov
adc
repnz
mov
xor
xor
xlat
loope
mov
ss
pop
lahf
push
int3
mov
rol
push
pop
lret
in
sbb
jmp
sarl
fsts
ret
leave
data16
cmc
out
mov
loop
addr16
shlb
out
push
mov
fdivr
shrb
les
dec
jbe
add
mov
adc
push
pop
sbb
pop
test
rcll
xchg
cli
sbb
lahf
push
loopne
mov
sbb
fcmovnbe
lea
stc
shlb
std
fmuls
jnp
or
xchg
mov
outsl
aam
lcall
ret
mov
mov
inc
jmp
fsubrs
cltd
mov
adc
mov
sbb
mov
xchg
int3
ss
cmc
mov
dec
or
mov
stos
je
pushf
ret
lods
add
cmp
cld
adc
inc
pop
dec
popf
cltd
lret
dec
cmp
insb
mov
in
fists
dec
nop
data16
push
ds
test
jb
dec
addb
dec
ss
mov
mov
stos
aam
inc
dec
jmp
sbb
popl
jge
pusha
pusha
jp
fadd
cmp
pusha
dec
add
inc
mov
mov
mov
add
lahf
bound
and
jmp
adc
mov
and
ret
das
lea
cli
cmp
sbb
or
imul
add
outsl
add
jmp
fwait
mov
mov
aaa
or
adcb
inc
hlt
icebp
lahf
add
pop
rol
xor
ret
mov
jle
push
aad
cmp
push
xchg
inc
cltd
lods
mov
clc
into
jb
std
les
push
dec
sbb
inc
sbb
push
test
insb
and
test
cmp
jecxz
lods
add
arpl
or
iret
sti
adc
inc
iret
arpl
bound
roll
test
dec
sub
mov
lcall
ret
fwait
idiv
ret
jmp
sets
out
xor
outsb
adc
mov
mov
fwait
and
cld
cmp
lea
les
stos
cmp
outsb
and
inc
loope
enter
ja
loope
std
dec
jo
lods
inc
aam
pop
or
cs
jb
ja
dec
rep
pop
xlat
xchg
add
pop
je
enter
ds
mov
hlt
mov
call
notl
dec
dec
push
cmp
jns
add
aam
pop
mov
push
xchg
pop
and
xlat
cmpsl
jle
jg
jne
jecxz
cmp
cmp
xlat
scas
cld
xor
add
or
pop
dec
sub
mov
mov
ss
stc
jl
out
xor
shll
ret
mov
jp
inc
pop
xor
sub
cld
in
cmp
adc
sbb
mov
ja
add
or
sbb
inc
pop
or
lods
andb
std
push
fildl
ljmp
and
xchg
push
sub
cs
sub
xchg
jo
aad
add
xchg
stos
outsb
push
movsb
jle
nop
jge
adc
in
pusha
jg
fldenv
ret
pop
cmp
ret
lret
int
lret
jle
pushf
sahf
aas
dec
adc
ss
fs
fbstp
mov
jbe
mov
js
sbb
inc
lcall
pop
mov
pop
mov
out
rcr
in
push
test
pop
jp
fbld
push
scas
mov
mov
pusha
inc
sub
iret
fidivs
cmp
push
decb
inc
jae
jno
arpl
mov
js
mov
test
lahf
mov
js
xor
iret
mov
lock
gs
inc
pop
rcll
add
test
les
inc
mov
jmp
shrl
cmp
icebp
and
adc
imul
imul
and
and
test
add
aad
gs
dec
pop
clc
cmp
inc
jns
notl
les
mov
adcb
cmpsb
xorb
ret
mov
fnstsw
aad
ja
icebp
ret
adc
push
into
pop
pop
pop
mov
sarl
cs
lret
push
mov
push
mov
and
fsub
into
call
inc
inc
fmull
lds
outsl
into
movsl
int
adc
xchg
push
push
call
fists
imul
dec
imulb
hlt
push
fisubrl
out
out
cmp
xor
jb
inc
dec
fimull
es
mov
ss
xchg
push
and
fsts
sbb
mov
ret
test
jmp
cmp
adc
mov
xchg
cld
adc
movsb
movsb
int
or
clc
sti
repz
dec
fcomps
mov
push
popa
adc
or
mov
xchg
sbb
xchg
popf
pop
fsubs
in
mov
in
pop
fdiv
in
add
addr16
stos
andb
mov
adc
pcmpeqb
or
ret
mov
xor
push
or
sub
cmpsb
pop
imul
lahf
mov
icebp
mov
fbld
mov
pushf
shll
out
int
xor
pop
pop
jb
add
shll
popf
lea
leave
imul
mov
xor
or
idivb
lahf
popa
xchg
fldl2e
out
in
sbb
fstl
xchg
in
lock
mov
int3
dec
dec
pop
mov
fsubrs
dec
or
xchg
jge
sub
xor
xor
in
and
dec
mov
add
lea
mov
mov
pop
mov
in
sub
xchg
shr
andb
adc
sarb
icebp
pop
stos
ljmp
cmp
fwait
xchg
jns
mov
pop
inc
dec
xor
movsl
cmpsl
inc
enter
movsb
and
cmp
cld
out
stos
daa
mov
nop
or
mov
mov
mov
into
and
fs
push
sub
icebp
sti
cltd
mov
out
dec
sbb
add
sbb
sub
mov
sarb
ret
pusha
sub
stos
push
mov
rol
mov
jbe
adc
and
pop
rorl
jnp
sbb
int3
testl
sub
dec
rcrb
jle
xor
dec
ja
sub
mov
sub
xor
jo
jecxz
add
xchg
ljmp
jge
or
add
insl
cwtl
lret
xor
aam
in
pop
das
dec
add
fsubs
sub
out
mov
adc
stc
movsl
stos
ljmp
das
and
mov
aad
data16
test
rcr
or
outsb
add
xchg
jle
inc
es
imul
hlt
adc
adcl
jg
data16
je
push
mov
dec
lahf
hlt
mov
push
and
dec
cmp
xchg
xor
shlb
insl
jge
adc
sbb
les
cmp
push
or
adc
pop
or
shr
dec
dec
cmp
jle
sbb
jg
gs
popa
cmpsb
xlat
xor
sti
lods
cs
dec
jne
mov
sbb
cmc
push
sbb
cvttps2pi
in
fs
cmp
repnz
out
push
lds
xorl
test
sub
mov
int3
cmp
out
rorl
mov
repnz
roll
insb
into
xchg
imul
fldl2e
add
test
mov
mov
in
aas
test
mov
mov
sbb
sub
testb
add
mov
test
jmp
in
lods
in
cld
lret
dec
imul
cmpsb
xchg
inc
icebp
push
jg
xchg
lea
jge
movlps
nop
xchg
inc
pop
mov
inc
call
cmc
mov
loop
lds
std
xchg
stc
push
or
or
dec
scas
jb
pop
xor
jle
sbb
ja
mov
stos
cmp
pop
iret
or
out
pushf
clc
jecxz
sarb
inc
mov
add
fistpl
loope
lods
add
cmc
add
inc
or
cmp
mov
push
dec
sti
mov
enter
lods
insb
mov
xchg
inc
pop
lcall
ret
sbbl
dec
mov
shlb
iret
jle
icebp
and
shl
fcmovbe
adc
inc
push
mov
and
outsl
cmpsl
jbe
mov
sub
clc
rcrl
push
inc
mov
jnp
sbb
repnz
in
mov
jl
packsswb
test
shrl
es
out
faddp
sub
jbe
pop
cmp
jb
sbb
mov
add
cmp
std
xchg
inc
loopne
in
into
push
pop
xchg
adc
and
insb
xor
lods
stos
push
pop
test
dec
cld
push
repz
cmpsl
in
xlat
sub
mov
movsl
pextrw
data16
jne
mov
test
adc
sahf
sbb
daa
ds
add
adc
pop
fmulp
and
pusha
xchg
mov
sarl
or
mov
inc
or
cltd
inc
or
sahf
dec
add
fistpll
int3
dec
nop
cmpsb
js
movsb
popf
or
push
aam
push
pop
jno
adcb
scas
or
fstpt
loopne
xchg
mov
sti
or
in
scas
jmp
pop
push
cmp
lea
jbe
sub
jns
dec
inc
cmpsb
rcrb
aad
ljmp
imul
hlt
sbb
mov
cmpsb
push
add
scas
jb
fildll
outsb
sti
daa
inc
cmp
insb
mov
fwait
sub
adc
mov
jmp
xor
pop
fcmovnu
jle
dec
push
scas
cmpl
pop
bound
mov
shlb
jl
mov
cmpsl
jmp
lock
mov
sbb
in
clc
adc
dec
xor
and
inc
sti
xchg
test
das
mov
add
scas
movntq
sahf
sub
jmp
and
popl
jl
aad
xor
push
lcall
das
adc
mov
xchg
vpsubb
adc
adcl
in
jecxz
pop
mulb
adc
test
inc
shrb
mov
icebp
mov
pop
in
xor
mov
lock
out
xor
push
xchg
push
iret
lods
lock
mov
ret
add
sub
js
jmp
add
cmp
pop
aas
sub
loop
imul
in
out
sti
or
xchg
cli
sub
xorb
jb
int
sbb
repnz
fisttpll
lret
jmp
imul
out
mulb
fiadds
movb
repnz
add
cmp
mov
mov
jo
addr16
jne
mov
movsl
mov
in
cwtl
dec
xor
das
mov
outsb
push
dec
push
dec
stos
out
loop
inc
xchg
lret
imul
cltd
mov
cmc
outsb
adc
lods
dec
inc
pop
xchg
hlt
cmp
mov
bound
incb
pop
outsl
adc
outsl
aad
int3
push
sbb
test
mov
cmp
push
or
jb
sarb
pop
push
mov
sbb
inc
daa
outsb
scas
outsb
add
dec
frstor
pop
clc
movsl
es
loopne
cld
jno
pop
int
jns
dec
push
mov
push
out
dec
or
cmpsb
adcb
cmpsb
add
loop
xchg
xor
xchg
cwtl
scas
xorl
fnsave
xor
and
in
testb
xor
ret
bound
xchg
xchg
inc
data16
cs
cmp
shll
xchg
push
cli
cmpsl
jns
and
jmp
push
push
push
cmp
or
cli
loopne
rolb
sti
and
das
push
or
mov
out
adc
out
enter
sbbb
cmp
add
push
ds
mov
pop
ds
roll
and
movsl
mov
or
cmp
popa
jno
ret
inc
das
push
sbb
leave
stos
push
or
test
int
sub
fistpll
fdivs
fidivl
pop
jae
adcb
and
dec
loopne
gs
mov
mov
mov
lock
jl
jo
repnz
xor
or
inc
cmp
mov
clc
xor
div
lea
sti
add
dec
lea
loopne
icebp
add
insl
insl
out
or
insl
cmpsb
inc
jne
mov
fs
dec
and
push
shlb
mov
aas
mov
mov
cs
xchg
and
movsb
and
dec
mov
cmc
inc
test
daa
adc
pop
xor
in
mov
pop
and
enter
or
test
adc
mov
repnz
adc
stos
rcrb
cld
push
ret
jg
into
push
movsb
sbb
dec
mov
cmc
jo
mov
sub
jge
sub
lods
mov
cltd
jg
in
dec
adc
andb
jbe
flds
inc
inc
xlat
popf
fcoml
mov
pop
loopne
inc
push
add
dec
xchg
xchg
add
sub
roll
addr16
bound
cmp
arpl
add
repnz
enter
leave
nop
cmp
pop
add
add
add
sar
ljmp
sbb
test
loope
jns
flds
jg
js
jae
pop
mov
jno
or
shrl
pmaxsw
iret
sbb
movsb
xlat
mov
push
jbe
test
test
xor
hlt
arpl
ljmp
jmp
fcmovne
dec
dec
lret
clc
mov
data16
jg
je
cltd
sub
enter
adc
dec
iret
push
push
jo
test
cmp
scas
adc
in
lea
hlt
cmp
adc
mov
insb
insb
imul
popa
insl
jns
ret
stc
or
pop
enter
and
jmp
add
cmp
stos
pop
pop
mov
clc
xchg
dec
fbstp
stc
data16
nop
cmc
test
mov
test
jns
cli
inc
jmp
in
lcall
pop
ficoml
sahf
jecxz
jne
mul
bound
pop
inc
test
adc
in
sbb
push
pop
add
js
jecxz
jns
mov
push
stc
mov
mov
js
xor
sbb
lods
jns
adc
mov
push
inc
dec
test
add
push
jmp
roll
push
aad
xchg
insb
push
mov
orl
xlat
cli
pop
aad
mov
test
adc
mov
cmpsl
push
and
int3
or
lret
and
int3
add
fcompl
cmc
jb
cld
cs
stos
ja
fwait
ljmp
aaa
pop
int
cs
sti
out
or
rclb
xchg
leave
mov
or
imull
xchg
jge
out
jo
xchg
mov
xchg
test
outsl
sbb
lahf
push
ds
mov
sub
cmp
sbb
and
in
xchg
pop
push
mov
pop
es
repnz
cmpsb
ret
mov
adc
push
in
aas
sti
xor
jb
cmp
pop
inc
xor
xlat
cs
cs
push
push
out
aam
mov
movsb
cmp
sarb
scas
pushf
and
hlt
pushf
dec
add
lds
push
cmp
rorb
fdivl
testb
pop
subb
inc
cwtl
xor
sbb
ffree
call
mov
xchg
cli
xchg
mov
xchg
jmp
adc
mov
ret
cwtl
pop
sub
imul
lret
outsl
jne
stos
and
dec
das
shl
xor
cmp
add
push
mov
scas
jp
imul
jbe
fwait
pop
ss
mov
mov
xchg
and
sbb
mov
cwtl
jmp
sub
sti
loop
push
rcrb
jae
or
adc
pop
or
or
cmp
andl
ljmp
pop
pop
pop
add
iret
test
inc
popa
push
jnp
fcmovbe
xchg
js
sub
sahf
push
out
pop
lret
and
mov
enter
jecxz
dec
xor
xor
out
mov
pop
scas
mov
repz
imul
in
fmul
or
adc
xor
in
aas
or
jno
jnp
ret
xor
sub
or
pushf
fsubrs
add
cmp
mov
cs
add
negb
xchg
dec
scas
add
data16
icebp
stos
xchg
mov
sbb
out
in
popf
fsts
loop
adc
lods
adc
cs
testb
dec
sbb
int
xchg
ret
imul
int3
ret
sub
xchg
inc
add
adc
aas
pop
mov
out
cltd
pop
sub
jo
jns
xor
stos
repz
pop
mov
rcrl
mov
lret
mov
imul
sub
iret
pop
mov
jbe
lods
jmp
adc
mov
scas
dec
je
sbb
xor
sbb
cwtl
inc
mov
lar
popf
iret
paddusb
xorl
push
jb
mov
addr16
push
jecxz
subb
add
test
in
sar
incl
and
stc
push
xchg
mov
push
fistl
in
lock
fidivl
enter
sub
nop
or
or
mov
popf
push
cwtl
push
lret
cmp
imul
mov
inc
test
adc
insl
xchg
xor
inc
insl
call
pop
ja
mov
inc
inc
ret
jb
iret
or
mov
and
xor
lea
adc
roll
inc
fsubrs
jns
lods
xor
fcmovnb
xchg
mov
push
jne
mov
jmp
test
xchg
rcr
das
aaa
shlb
xor
adc
in
sti
rclb
pusha
inc
sbb
inc
xor
les
mov
adcl
movsl
iret
inc
in
or
sbb
fwait
sbb
lods
adc
out
test
sbb
adc
and
sbb
pop
mov
fimuls
jge
fcoml
inc
push
rorb
or
outsb
jp
adc
sbb
clc
test
iret
dec
push
mov
aaa
js
sub
ja
jle
xor
add
ss
pop
xchg
sbb
adc
outsb
jge
out
jecxz
ficoms
jne
mov
xchg
fwait
mov
hlt
mov
sahf
inc
jg
insb
lcall
mov
flds
jl
adc
jmp
test
sbb
cmp
movsl
fwait
pop
sub
int
and
jno
fidivl
pop
mov
inc
push
enter
in
arpl
ss
push
jmp
scas
loopne
inc
clc
lea
test
sbb
jecxz
out
enter
sub
repnz
mul
xchg
mov
sub
cli
out
jb
cmp
insl
mov
jecxz
ljmp
out
mov
out
sbb
cmpb
adc
jecxz
xchg
cld
add
mov
fistpl
movsb
insl
js
push
jbe
leave
lcall
sub
imul
jmp
jnp
data16
insl
pop
dec
adc
mov
jl
ret
dec
notl
cmp
cmp
pop
sbb
push
jl
mov
xor
and
test
dec
sbb
test
shl
repz
in
lret
fwait
mov
mov
mov
cltd
mov
in
add
mov
fcoml
sbb
xchg
mov
push
int
mov
shr
mov
jmp
dec
fmuls
dec
dec
orb
jno
pop
jnp
into
clc
scas
fldl
or
xchg
rcll
icebp
add
jnp
dec
fadds
jl
and
push
pop
insb
mov
mov
call
scas
jbe
int
lods
adc
add
pop
cmpsb
and
shl
lds
insb
in
mov
pop
sbb
mov
ret
outsl
in
sbb
cmp
je
icebp
add
stos
cld
movsl
rcll
ficompl
adc
lahf
dec
mov
xor
aaa
and
add
dec
adc
or
pop
mov
fbstp
pop
mov
xor
scas
adcb
mov
daa
mov
xor
sbb
mov
std
or
adc
lods
fsubs
adc
xchg
xchg
dec
push
cmp
and
stos
cmpsl
jmp
in
xchg
push
pop
fs
iret
into
wbinvd
cmp
jb
mov
rorl
test
lods
add
and
or
sbb
orb
jno
pop
fdivl
jp
cltd
xchg
das
jle
lret
xor
mov
mov
out
adcb
lcall
sbb
xor
std
xchg
enter
inc
fadds
sbb
outsl
repnz
les
mull
idivb
xchg
mov
movb
lods
in
out
inc
rcll
cld
mov
xor
dec
mov
repz
mov
add
pop
xchg
pop
mov
inc
cmp
sbb
fdiv
xchg
mov
ret
sub
xchg
sbb
imul
pop
das
mov
mov
xchg
push
insb
lods
add
stos
or
hlt
add
adc
and
xor
negl
test
push
push
pop
in
int
repz
out
ja
rcr
push
xchg
push
mov
out
inc
mov
pop
in
repz
nop
imul
fstl
pop
cmp
fidivs
jmp
jle
cmc
test
call
mov
jp
jle
sub
je
cmp
mov
mov
stos
test
dec
jg
in
mov
lods
sub
and
ret
cmc
test
je
sub
inc
xlat
xor
in
cwtl
in
psraw
subl
jmp
rorb
cmc
in
jge
xor
xchg
pusha
sub
mov
jnp
xchg
cmp
loopne
xorl
push
lea
orb
rcr
pop
or
test
dec
dec
cmpsb
sbb
pop
adc
std
add
mov
xor
pop
pop
inc
jl
pusha
jne
movsb
jae
mov
hlt
addb
das
xchg
imul
and
jne
ja
hlt
movsb
mov
sahf
mov
inc
mov
cmp
sti
mov
add
and
test
jnp
and
ftst
ds
fmull
push
xor
loop
adc
shrb
mov
into
pushf
int
outsb
enter
mov
push
cmp
dec
fwait
aad
in
fistpl
xor
and
lds
sub
xchg
fmul
mov
mov
cmpsl
sub
inc
mov
or
fwait
jb
cmp
repnz
fnsave
mov
push
push
mov
mov
jnp
cld
xor
rorb
pop
jno
std
daa
cmp
cld
stos
jle
out
cmp
mov
icebp
jle
pop
popf
dec
cmp
mov
xor
int3
cld
xchg
xor
int
xor
and
and
rep
pop
and
sti
lock
mov
lds
lock
ds
icebp
jae
and
mov
cli
aad
aam
and
cltd
movl
aad
int3
pop
xchg
inc
lods
stos
mov
and
adc
push
sbb
stos
iret
cmp
hlt
or
mov
movsb
jg
insb
pop
movsb
push
ret
inc
adc
lret
lock
push
sub
hlt
cld
je
mov
mov
in
push
insb
mov
and
or
push
insb
jmp
adcb
mov
mov
add
jae
mov
dec
pop
shr
mov
inc
mov
cmpsl
and
and
sbb
popf
loop
incl
cltd
pop
xchg
sbb
jnp
stos
or
jle
cmp
mov
mov
int
cs
scas
fsubrs
lret
jb
add
adc
imul
jp
pop
or
imul
push
jmp
mul
adc
rolb
push
mov
jb
pushf
push
cmp
shlb
out
ss
ret
dec
aam
adc
lcall
pop
loop
fs
lahf
xor
adcl
roll
mov
adc
aam
mov
sub
std
ficoms
and
aas
test
add
mov
mov
push
in
dec
xchg
rclb
cmp
into
outsl
xchg
ret
cltd
int
dec
sbb
out
sbb
or
js
pop
cs
movsb
popf
sarb
out
in
xchg
push
mov
jmp
fwait
bound
cld
repz
pop
mov
xchg
ja
into
pushf
cmpsb
shlb
pop
pop
imul
lahf
cmp
mov
movb
or
icebp
out
pop
pminub
inc
mov
decb
sbb
roll
jmp
jge
xor
push
inc
or
out
jae
inc
adc
and
ljmp
std
inc
jl
xchg
movsl
xor
pushf
xor
xchg
aaa
adc
xlat
or
insb
jb
cmp
cmc
adc
sbb
dec
imul
and
test
xchg
iret
xchg
scas
int
add
dec
push
sub
stos
xorb
inc
sti
mov
or
mov
inc
in
pushf
inc
sbb
aam
pop
je
push
imul
cmc
pushf
aas
or
or
or
adc
sbb
mov
scas
xor
add
ja
pop
lahf
mov
dec
mov
outsb
ds
inc
sbb
shl
std
mov
pop
scas
xchg
dec
nop
lock
pop
push
enter
je
in
adc
cltd
nop
and
cmp
mov
sbb
mov
aaa
int
daa
sub
lea
int3
cmp
rcr
rcll
sbb
nop
push
push
dec
cwtl
iret
outsl
inc
adc
xchg
cld
push
dec
add
pop
subl
add
lret
mov
jnp
mov
scas
aad
imul
sbb
xchg
fnstsw
int3
cltd
dec
jae
jb
dec
fmuls
movsl
mov
mov
mov
add
mov
stc
mov
adc
adc
push
lret
jo
sbb
div
or
push
fcmovnbe
movsb
dec
sub
testb
and
mov
les
subl
pop
fmul
ja
sti
and
in
sub
lret
ljmp
outsb
sti
movsb
movsl
les
or
cld
insl
add
in
daa
cmpsb
mov
outsl
fwait
out
test
mov
das
mov
inc
lahf
shrl
into
adc
out
iret
shlb
push
push
mov
mov
adc
lcall
mov
loope
movsl
fmuls
xchg
sub
xor
adc
pop
aad
fmull
cmp
ja
mov
int
xchg
inc
jns
or
sub
jle
sbb
jl
mov
cmp
xchg
or
dec
jp
rcrb
pop
cmc
sahf
xor
mov
scas
sub
call
jmp
cmp
mov
dec
inc
fdivs
adc
push
out
ret
xlat
orl
or
shlb
xchg
addr16
ret
pop
bound
and
loope
push
pop
arpl
jne
cmc
cli
and
and
cmp
fdiv
int3
mov
test
inc
in
enter
pop
or
imul
loopne
add
mov
outsl
inc
fcomip
dec
test
stc
xchg
pop
pop
adc
lret
lock
cmp
sti
out
loope
xchg
repnz
push
cmc
push
fdiv
stos
add
arpl
cmp
pop
dec
call
xor
mov
and
scas
push
test
and
icebp
nop
push
xchg
test
jecxz
mov
imul
push
cmp
outsb
nop
push
nop
movsl
jb
mov
notl
mov
or
cmpsl
jb
int3
adc
add
lock
leave
add
pushf
lret
xchg
movb
push
daa
sbb
adc
rolb
jb
pusha
and
jb
mov
lahf
pop
xorb
clc
cmpsl
add
lds
xor
aaa
inc
inc
xchg
stos
sub
and
cmp
push
mov
mov
pop
addr16
jns
lahf
scas
inc
rcl
lea
push
adc
loope
loopne
rolb
imul
pop
popa
pop
mov
dec
dec
lret
ret
add
mov
pop
xchg
pop
int
push
xchg
xchg
in
lods
mov
push
mov
test
jne
sub
sbb
in
inc
movsl
shll
sub
insb
jmp
mov
test
lahf
popf
jge
jp
add
mov
imul
xchg
xchg
jmp
cwtl
outsb
mov
imul
outsl
inc
repnz
flds
add
insl
inc
ss
cs
lods
std
clc
les
sub
cli
push
mov
popa
xor
xor
int3
mov
inc
dec
jle
xor
or
pop
jp
sbb
sbb
test
push
mov
push
xor
mov
lret
out
icebp
cltd
jge
shr
inc
in
add
adc
adc
rcl
aam
xor
imul
leave
aas
pusha
je
push
lea
out
cmp
call
cmp
cmp
push
dec
lahf
pop
adc
in
cld
lock
add
pop
sti
std
or
pop
push
mov
aad
cwtl
and
adc
pop
dec
scas
inc
inc
movsl
and
sub
out
xchg
and
leavew
xchg
xor
lcall
dec
jecxz
mov
mov
ss
and
or
inc
daa
sub
lahf
jb
dec
or
pop
and
xchg
jp
sbb
andb
nop
inc
cld
ss
mov
lahf
int
mov
int
pop
ret
fwait
or
pop
xchg
push
sub
sub
bound
iret
push
mov
sbb
filds
jge
pushf
pop
inc
mov
pop
test
daa
rcrb
mov
dec
inc
pop
and
xor
sbb
lea
movsb
mov
fildll
incb
insl
lods
sub
sub
test
addr16
repz
loope
sbb
sbb
dec
test
xchg
xor
test
inc
call
inc
inc
jp
add
xchg
inc
stos
dec
aad
push
cmpsb
dec
test
jge
and
and
cs
ffreep
inc
and
or
lds
adc
push
dec
outsb
lret
lret
lea
fildl
jo
add
mov
sbb
adc
shl
mov
rolb
bswap
mov
mov
sbb
xchg
rcll
sti
push
and
in
or
xor
pop
jns
adc
sbb
lahf
mov
scas
mov
dec
and
fcmovnu
mov
xchg
arpl
xchg
mov
adc
adc
test
sub
ret
cltd
cwtl
or
stos
mov
enter
or
idivb
lods
mov
inc
mov
add
mov
push
inc
inc
cmpsb
mov
mov
sub
or
sahf
orl
rcrl
lahf
mov
xchg
push
adc
sub
jg
mov
pop
mov
ret
cld
mov
mov
aaa
or
dec
sbb
dec
xchg
movsl
push
jne
shrl
add
push
inc
pop
fcmovnu
mov
std
push
flds
incb
fwait
lcall
cli
sub
dec
pop
cmpsl
or
add
aas
scas
push
imul
inc
pop
and
mov
imul
sti
mov
cld
lods
pop
fdivs
pop
lret
test
rcrb
scas
push
cmpsl
mov
call
ficoml
mov
mov
fsubrs
test
cli
cmpsb
dec
xchg
sub
movsl
mov
cmc
sbb
ret
call
pop
cli
in
aam
subb
inc
test
jp
popf
test
shlb
jg
loop
outsb
sub
test
mov
sti
jg
and
mov
fidivrl
xlat
add
fists
inc
repnz
int3
cmp
inc
shrb
jbe
dec
mov
cwtl
into
jae
aad
adc
aad
sbb
inc
outsb
mov
fnstsw
shlb
in
adc
loop
and
dec
jmp
mov
sub
ret
out
dec
cmp
sti
pop
mov
daa
pop
or
push
idivl
clc
out
push
inc
mov
scas
mov
fnsave
and
in
sti
jle
insb
ret
js
mov
xor
dec
xchg
lret
scas
pop
push
test
insl
std
mov
rcrl
das
xor
pop
pop
imul
push
iret
xor
dec
sub
adc
movsb
lock
pushf
push
ret
add
dec
rcr
sub
or
movsl
ficoms
mov
into
rcrb
xchg
xchg
loopne
imul
testb
frstor
push
xchg
lret
xchg
ret
cli
fldl
mov
in
aad
mov
push
mov
xor
insl
stc
ficompl
inc
ds
fwait
inc
push
sub
add
arpl
pop
sbb
jg
mov
xchg
cmp
push
fdivs
cmp
and
jg
cmp
jo
pop
push
or
fdivrs
shlb
push
je
push
flds
inc
test
xchg
loopne
lea
scas
adc
roll
mov
pop
lret
fmuls
mov
mov
fistpll
and
lds
sbb
mov
sbb
fildll
ror
fnsetpm(287
lahf
sbb
and
or
and
into
les
adc
xchg
xchg
dec
mov
push
jle
dec
push
adc
cmp
jo
jne
cli
sbb
movsl
xchg
pop
mov
jl
inc
es
jp
push
xor
push
test
jp
xor
cmpsb
ss
arpl
fs
test
sub
jle
jns
cwtl
andb
cli
lahf
mov
xchg
divb
jle
int
fcomip
jns
jl
aaa
jo
filds
xchg
xchg
and
adc
xchg
inc
adc
and
in
xor
sub
cld
inc
adc
add
jno
dec
mov
outsb
in
fildll
xchg
insb
lds
idivb
bound
pop
dec
pushl
jecxz
dec
icebp
mov
add
int
sbb
mov
inc
shlb
dec
mov
shrb
sbb
xor
addr16
mov
push
hlt
popf
pop
and
rcr
or
mov
mov
or
mov
movsl
xor
inc
mov
dec
test
daa
inc
mov
or
lods
cmp
pop
rol
or
loope
mov
jo
ret
sbb
push
push
or
pop
or
xchg
xchg
or
cmpl
xchg
cmpsl
xchg
adc
adc
sbb
testl
daa
pop
xor
push
shlb
fstpl
iret
lret
pop
shrb
mov
add
inc
enter
shlb
push
xor
and
mov
mov
sub
inc
mov
xor
rcll
data16
bound
sar
test
dec
jns
and
sub
sbb
les
sub
dec
push
rclb
adc
sub
jl
loope
mov
inc
pop
clc
and
fstpt
pop
lahf
sbb
outsl
or
lods
or
into
mov
repz
hlt
orl
xchg
aam
xor
fldenv
mov
bound
jmp
inc
sbb
jg
sub
mov
inc
cwtl
pop
jb
adc
push
out
icebp
cld
bound
mov
cmp
idivl
xchg
xchg
adc
clc
inc
mov
jmp
mov
je
xor
insb
cmpl
insb
scas
fdiv
push
xor
pop
out
jl
cltd
jb
inc
ret
loopne
add
cs
in
ljmp
fwait
jb
jp
jno
icebp
out
cmpsl
lret
add
adc
or
cmp
loopne
lods
push
fildl
add
xor
enter
and
cmp
rol
sahf
les
pop
pop
sbb
dec
out
sahf
and
mov
push
push
add
fistps
rorb
push
jb
add
popa
mov
in
mov
mov
push
inc
jecxz
int3
aad
xchg
aam
jl
popa
and
adc
and
ljmp
jb
adc
std
pop
mov
xlat
cmpsb
adc
lcall
mov
je
cli
sub
pop
jg
adc
iret
stos
dec
sub
add
mov
or
mov
jmp
adc
je
std
pop
leave
dec
pop
movsl
add
lahf
sub
sbb
outsb
aam
pop
dec
and
mov
aad
in
mov
dec
inc
int3
jbe
pop
dec
jge
hlt
dec
dec
int3
cmp
repnz
pop
jbe
mov
xchg
scas
adc
mov
sti
lahf
es
fcomps
nop
xor
xchg
outsl
sbb
cli
cbtw
cmp
rolb
lahf
pop
sbb
push
addr16
cmp
pop
mov
test
rclb
sub
cmpsl
ror
inc
aas
or
inc
cld
out
mov
or
sbb
nop
mov
cmp
cmp
xor
adc
scas
stc
movsb
inc
js
cmp
cmc
cs
xchg
dec
cltd
lahf
xlat
jns
mov
xchg
fbstp
mov
movsl
stos
negb
pop
push
lret
dec
pop
pushf
add
lods
lret
adc
cs
clc
xchg
aaa
push
mov
jmp
jge
arpl
sub
xchg
inc
lret
pop
cmp
sub
pusha
repz
mov
pop
sbb
lret
lahf
gs
cmp
aas
lcall
inc
mov
decl
pop
data16
arpl
daa
sbb
inc
bound
cld
sbb
mov
out
push
jae
mov
lods
mov
sahf
or
xchg
lock
mov
scas
and
cwtl
mov
popa
in
mov
cltd
xor
mov
ret
es
jmp
pop
dec
add
mov
mov
dec
sbb
pop
push
popf
dec
and
xor
mov
push
movsl
lahf
data16
out
xchg
lock
push
push
cmp
ret
jae
outsb
inc
ret
xchg
popf
pop
cs
or
iret
cmpsb
xchg
xchg
aas
pop
jnp
jmp
xchg
hlt
fpatan
sbbl
jg
push
mov
iret
jp
and
pop
xlat
xor
in
and
sbb
fs
pop
out
xchg
xor
scas
push
jnp
add
in
inc
sahf
loope
and
out
push
mov
pop
sbb
pop
outsb
push
inc
outsb
into
rdtscp
xchg
adc
sbb
jbe
outsl
dec
push
lea
lret
cs
jmp
sbb
xchg
loop
ror
jg
pop
xchg
xor
cli
cmpsb
hlt
and
ljmp
add
mov
fidivrl
or
adc
inc
adcl
jg
roll
loop
pop
xchg
shll
movl
mov
enter
adc
mov
dec
xor
push
popf
testb
add
or
addr16
stc
jb
rolb
cmpsl
jnp
popa
cmp
mov
jl
xchg
sub
ds
lods
aam
dec
lods
stos
mov
pop
inc
mov
push
daa
imul
pop
aam
sub
or
cs
daa
pop
pop
sub
movsb
repz
fcmovnbe
rclb
mov
or
je
mov
daa
jne
loopne
inc
out
dec
mov
cmpsl
mov
pop
fwait
pop
cmp
into
mov
dec
pop
mov
into
iret
mov
push
bound
add
jle
fs
push
loopne
int
xor
push
jp
ss
into
arpl
jo
in
repnz
in
push
pop
jmp
push
lds
pop
inc
adc
and
jp
xchg
outsb
popf
xor
out
cmp
mov
adcb
negb
xchg
lea
mov
lods
jnp
push
push
cmp
hlt
repz
insb
fsub
icebp
mov
xchg
xchg
adc
shrb
sbb
out
dec
mov
pop
add
test
dec
jmp
out
jmp
sbb
ss
scas
fistpl
mov
cmpsb
cltd
jle
or
outsb
xchg
push
das
xchg
or
fprem
imul
or
or
sub
sub
mov
mov
mov
pusha
push
mov
inc
outsl
xchg
bound
and
add
push
mov
test
mov
add
das
push
cmp
xchg
fs
xchg
mov
cmp
cltd
sbb
xor
pop
lock
sbb
repz
lds
jb
and
movsb
or
imul
xchg
stos
jl
xchg
jl
jecxz
cmp
int3
xchg
loope
scas
ss
out
mov
and
cmpb
mov
or
fs
jbe
hlt
in
push
push
outsl
mov
xorl
push
frstor
loope
out
or
cmp
pop
xor
pop
dec
and
je
stos
testl
push
push
cmp
inc
push
dec
cmp
cmp
sbb
lahf
imulb
test
ss
mov
lahf
sbb
adc
add
and
adc
sbb
outsb
jne
daa
cmc
std
inc
into
push
ljmp
and
test
jae
pop
xor
cmpl
push
cwtl
mov
pop
cmpsl
push
or
cwtl
inc
mov
test
mov
and
gs
sbb
pop
add
out
mov
and
roll
arpl
mov
mov
dec
insb
adc
out
jg
iret
cld
lods
popf
pop
or
dec
push
or
xor
cmp
ret
xchg
js
fsubs
pop
mov
dec
ror
imul
icebp
movsb
push
jp
sub
leave
daa
inc
add
test
andb
sub
push
outsl
jg
push
pop
iret
out
sbb
sbb
add
mov
pop
mov
test
or
aaa
leave
push
push
inc
in
jno
and
jge
in
dec
pop
or
in
and
mov
and
cmpsb
cltd
xchg
dec
cmpsb
icebp
popf
cmp
xchg
mov
pop
xchg
aas
fcoml
sbb
mov
jae
ja
pop
fwait
push
loope
xor
mov
dec
cmp
fucomp
stc
out
sub
jg
cmp
aad
mov
nop
mov
xor
das
jno
dec
xchg
mov
lea
in
sbb
aam
jl
and
test
cmpsl
push
outsb
sti
dec
xchg
xchg
mov
sahf
jle
pop
shr
test
lock
mov
mov
jmp
movsb
pushf
or
mov
sti
into
push
dec
addr16
leave
dec
cmpb
or
add
dec
je
mov
inc
jns
int3
mov
dec
loope
jge
into
int
mov
cmp
push
clc
stc
sbb
mov
add
repz
or
and
xor
dec
adc
mov
mov
and
pop
mov
mov
cmpsl
std
xchg
jbe
sbbb
frstor
scas
jae
sub
movsl
push
es
mov
jl
xor
call
cmpsb
out
dec
frstor
in
popf
jmp
jg
adcl
inc
push
adc
int3
jp
cmpsb
int3
mov
in
ljmp
lds
arpl
pop
je
addr16
xchg
mov
enter
push
ret
sti
insl
jbe
daa
out
data16
sbb
mov
mov
inc
add
sbb
push
popl
movsb
inc
outsb
loopne
in
jmp
push
push
mov
push
daa
cmp
or
push
out
push
popa
dec
push
mov
outsb
inc
imul
jle
repnz
push
mov
lea
cwtl
pop
mov
popf
addl
les
dec
push
push
testb
or
dec
jbe
repnz
mov
mov
es
jge
enter
or
fidivl
pop
push
lcall
add
xchg
mov
or
leave
ds
mov
and
sub
aas
dec
push
cmpsb
scas
jne
lret
imul
lds
xchg
sub
pushf
dec
adc
pop
jbe
jbe
dec
stos
push
lods
cld
mov
dec
xchg
popf
lock
mov
insb
addr16
push
clc
xor
lock
jg
mov
sbb
imul
add
aaa
mov
loop
dec
push
lret
mov
scas
pop
mov
sahf
xchg
repz
mov
pop
loop
rorl
lods
stos
icebp
mov
sbbb
test
out
mov
scas
scas
mov
stos
mov
pop
jl
out
stc
jl
shrb
sub
mov
cwtl
pop
repz
mov
jbe
cwtl
sarl
xchg
pop
dec
pop
mov
fcomps
pop
push
sbb
mov
push
push
lock
sub
mov
pop
dec
cmp
shll
pusha
add
pop
repnz
push
mov
in
lds
aad
xor
lahf
add
sbb
mov
cmp
scas
frstor
xor
ror
adc
mov
es
repz
fisubl
push
mov
insl
cmp
adcl
jp
xlat
ja
fs
and
add
js
and
fisttpll
aas
mov
lods
mov
dec
nop
es
pop
or
das
cmpsb
rorl
arpl
xor
pop
mov
repz
sbb
mov
jp
in
push
mov
pop
loop
inc
adc
cmpb
jecxz
sub
das
sub
loop
fisttpll
adc
push
rolb
pop
lods
or
outsl
xor
jl
or
addl
ljmp
outsl
sub
iret
movsl
push
cmc
mov
std
jo
inc
ret
mov
sahf
andl
xor
shlb
or
push
push
push
ljmp
mov
sahf
mov
das
inc
or
pop
les
repz
in
push
fstpl
loope
mov
cmp
jo
idivl
sbb
sbb
xor
push
mov
call
dec
inc
andl
sahf
inc
ljmp
push
cmp
sbb
in
loope
mov
or
out
xchg
int
nop
inc
scas
sbb
mov
inc
rorl
test
movl
stos
adc
test
xchg
and
iret
adc
mov
faddl
in
es
shrb
xchg
sbb
sbb
mov
dec
lcall
xchg
shlb
repz
jmp
xchg
arpl
andl
in
xchg
aaa
mov
mov
fcmove
leave
sar
lods
mov
or
pop
dec
mov
loope
fs
pop
mov
add
outsb
sbb
xor
data16
cmp
mov
aas
test
mov
and
aas
aas
or
jno
gs
inc
scas
xchg
std
jnp
dec
dec
inc
pop
jbe
lods
dec
jmp
pushf
insb
mov
aaa
stos
pushw
ja
inc
mov
shll
ljmp
push
jmp
jbe
and
dec
popa
addr16
mov
test
sub
dec
sbb
mov
sub
mov
mov
xor
in
add
sub
mov
mov
inc
sub
popf
shrl
movsb
adc
inc
dec
mov
std
or
jns
sub
xchg
dec
adc
mov
out
mov
test
push
jnp
addr16
out
ljmp
sub
loopne
and
fwait
aad
imul
mov
fists
and
jl
daa
mov
shlb
jp
sti
insb
cmc
lcall
mov
jg
mov
xor
mov
push
cmc
cld
jb
sub
ffree
and
mov
pushf
jge
inc
fcoml
scas
mov
int3
stc
jnp
adc
xchg
or
sub
aad
lret
sbb
ja
test
or
jno
ljmp
out
aas
or
stos
notl
jg
mov
sbb
dec
lds
nop
pusha
and
jno
ret
dec
inc
in
mov
sub
jle
stc
sub
out
mov
mov
adc
lahf
mov
cmp
sbb
dec
shl
into
gs
pusha
outsb
mov
pusha
dec
jne
ja
repz
and
cli
xlat
xor
inc
pop
in
ret
jmp
mov
sub
aam
sub
push
mov
xchg
jle
stos
fsub
mov
mov
or
add
stc
adc
jb
or
mov
fidivs
jne
cli
sub
sbb
cwtl
ds
das
push
mov
ds
aas
cmc
push
mov
scas
pop
inc
in
xchg
push
daa
push
push
mov
imul
mov
gs
dec
data16
and
lea
loope
add
jo
std
ret
icebp
enter
jle
push
cmp
stos
xor
stos
dec
vmovq
out
hlt
push
mov
leave
push
cmp
les
or
cli
js
loopne
dec
test
dec
sub
cmp
push
stos
sti
jno
xchg
mov
aam
adc
outsb
xlat
fwait
push
sbb
insb
adc
inc
push
jo
daa
sti
sub
push
mov
sbb
cli
les
arpl
adc
mov
daa
fwait
adc
add
jo
add
arpl
sbb
cmp
xchg
push
arpl
mov
movsb
push
sub
cmp
push
stos
iret
adc
int3
or
insl
mov
inc
push
fbld
cs
iret
pop
repnz
add
xlat
stc
stos
and
or
leave
sub
xchg
cs
imul
sahf
stc
pushf
in
jmp
daa
outsl
sarl
lret
lods
pop
in
imul
lock
loop
sbb
pusha
mov
mov
pusha
hlt
cmp
jae
push
jnp
fdivl
cmc
pusha
inc
popa
lds
adc
dec
loop
fstpt
repnz
rcrb
insb
mov
xor
mov
iret
lods
dec
adc
lahf
mov
testb
push
sbb
push
shlb
or
cmpsl
sti
cmp
out
in
test
pusha
inc
pop
pop
jnp
in
imull
mov
scas
leave
mov
dec
and
idivb
add
mov
aaa
jl
push
mov
lea
xchg
js
pushf
sub
fisubs
or
arpl
ljmp
inc
test
xor
sahf
fnstcw
pop
or
mov
pop
mov
inc
sub
push
jns
xorl
jge
mov
and
sbb
in
clc
jns
cli
nop
dec
pop
aam
ljmp
into
fistl
imul
sbb
sbb
mov
inc
push
cmpl
scas
std
int3
mov
cwtl
adc
push
cmp
cmpl
sub
fstps
jo
ljmp
dec
xor
xor
or
jle
jmp
jp
xchg
fildl
dec
in
stc
addr16
push
call
sbb
or
xchg
or
xchg
out
es
loope
mov
sbb
and
inc
dec
pop
or
jno
dec
mov
js
adc
fs
mov
lea
mulb
xchg
jmp
out
and
aaa
or
jns
das
test
sbb
push
fs
jmp
mov
sti
push
popa
in
and
cmpsl
xor
adc
clc
ja
pop
out
jmp
jmp
loopne
iret
shl
mov
xor
push
and
adc
or
jecxz
call
push
dec
fwait
popa
incl
add
xor
mov
dec
inc
xchg
cli
js
dec
mov
mov
in
testl
loope
aam
xchg
inc
push
push
cmp
or
xlat
data16
pop
gs
movsl
ret
lock
in
or
pop
dec
test
pop
push
out
scas
sub
mov
xchg
or
pop
mov
je
xchg
je
stos
pop
dec
movl
fbstp
inc
push
ficompl
mov
leave
push
mov
and
mov
ret
xor
push
cmp
add
sub
inc
stos
mov
push
mov
mov
push
mov
xchg
and
sub
mov
jle
loop
cmp
pushf
sbb
mov
jge
mov
cmp
into
and
negl
outsb
cmp
gs
scas
outsb
jo
and
lea
xor
dec
loopne
mov
lods
scas
adc
lds
cmp
cmc
sti
hlt
mov
andb
lret
fstps
pop
dec
push
and
xor
clc
rclb
enter
or
xor
iret
dec
repnz
js
push
jae
and
insb
test
mov
sbb
into
rolb
int3
inc
dec
pop
gs
pop
xor
stc
push
gs
stos
and
fs
jnp
aaa
mov
xor
scas
daa
xchg
leave
lahf
sbb
sahf
lret
mov
data16
sbb
mov
test
mov
hlt
jmp
cmp
jmp
dec
cld
addr16
cmpsl
adc
iret
lods
pop
and
lret
shrb
cmc
sahf
mov
aaa
cmp
outsb
push
or
addl
add
idivl
push
xchg
adc
pusha
sbb
test
cwtl
ret
stos
mov
mov
repz
xchg
mov
inc
and
pop
or
imull
cmp
jnp
ret
data16
mov
stos
inc
cmp
je
pop
icebp
fdivs
pushf
cld
and
mov
in
int3
pop
push
leave
aam
repnz
sub
push
mov
popa
data16
xorl
cmpsb
and
mov
roll
popf
in
mov
mov
shlb
mov
add
xor
add
cltd
push
lods
iret
mov
xor
hlt
aam
jnp
mov
popf
push
aaa
cmpsb
xlat
xor
dec
sbb
add
push
cmpsl
jl
pop
mov
sti
xchg
xchg
pop
dec
jbe
scas
cwtl
dec
aad
pop
sbb
out
mov
popa
in
and
popf
sub
sub
xchg
sti
imul
outsb
ja
jle
sbb
mov
mov
mov
jns
and
fisubrs
jmp
cmpsl
fcmovnu
or
push
and
or
mov
fstpl
jmp
lds
shld
fbld
fisubl
lds
adc
add
add
inc
fisubl
pop
arpl
aad
cmp
incb
stc
fdivrl
push
cmp
dec
or
jb
ja
cmp
stc
ds
ljmp
bound
lret
pop
loop
add
fbld
adc
push
add
outsb
adc
sbb
inc
sub
and
cmp
jbe
cmp
outsl
fmull
jle
mov
ss
mov
inc
pop
jo
xor
sub
pop
mov
mov
mov
xlat
imul
or
push
mov
xor
inc
pushf
or
fistps
insl
sub
xchg
cmp
jno
mov
mov
enter
outsl
movsb
push
xor
imul
pop
jnp
jecxz,pn
ljmp
loop
sbb
popl
gs
in
out
lcall
imul
cld
mov
fnstsw
jmp
pop
cmp
gs
movsl
mov
int3
into
sub
aas
sub
fucomip
jp
daa
loope
pop
mov
mov
imull
mov
cli
fisubrl
or
mov
enter
fbstp
cltd
mov
mov
jbe
and
pop
nop
into
dec
xor
aas
pushf
xlat
mov
xchg
and
test
mov
xor
clc
sbb
outsb
sbb
movsb
stc
sbb
bnd
orl
dec
push
push
jl
jmp
xor
push
jne
sub
add
mov
movsb
mov
outsl
jo
mov
pop
sub
pushf
pop
or
xchg
push
fstpt
loopne
xor
pushf
dec
pop
sbb
dec
imul
int
push
sbb
loopne
mov
xor
pop
mov
push
mov
xchg
mov
in
outsl
mov
push
rolb
mov
pop
rcrl
push
mov
call
stc
inc
cld
and
inc
aaa
lods
jp
fsubs
fisubl
out
fistpll
fnsave
dec
mov
mov
mov
cmpb
test
dec
cs
dec
mov
and
xor
lahf
sahf
test
jg
add
mov
or
inc
cmp
in
dec
dec
xor
mov
xor
outsb
adc
cmp
addr16
insb
cmpsb
jne
mov
movl
inc
in
xchg
lds
icebp
add
adc
mov
clc
adc
outsb
dec
fld
push
and
insb
out
scas
jns
cltd
push
or
push
mov
stc
in
sbb
add
pop
pusha
add
jge
cltd
mov
iret
mov
scas
dec
mov
adc
mov
je
cmc
rolb
jae
mov
fistpll
sbb
fidivl
lods
xor
popa
xor
movsb
mov
incl
js
icebp
sub
mov
xor
xchg
sar
std
xor
xchg
and
adc
jge
js
pop
xchg
mov
or
movsb
iret
lods
fmull
mov
mov
imul
xchg
ds
sti
fs
adc
mov
hlt
xor
out
neg
aas
scas
fldcw
enter
mov
and
int3
xor
pushl
add
insb
pop
fcmovnbe
out
dec
jb
mov
add
pop
outsl
cmp
mov
and
sbb
pop
pop
ficoms
idivb
jmp
mov
jmp
mov
add
mov
xchg
lcall
xchg
lods
int3
insb
mov
iret
and
scas
jmp
loopne
add
adc
ss
lret
cmc
lods
scas
mov
xchg
or
jb
outsb
push
int
mov
or
sbb
loop
cld
enter
insb
scas
xor
jl
leave
push
stc
xorl
mov
xor
es
inc
or
xor
ja
push
add
mov
mov
mov
dec
notb
mov
clc
int
mov
fnstcw
rorb
in
loope
hlt
inc
movsb
inc
enter
ja
mov
mov
xor
shll
mov
xor
in
insb
out
pop
sub
lods
int
adc
call
sub
outsl
test
xchg
mov
aad
push
push
cmp
push
testb
pop
popa
ss
xor
xchg
pop
ljmp
xlat
sbbl
mov
xor
lea
rcl
clc
cmp
xor
mov
add
push
mov
and
pusha
and
lea
fnsave
in
adc
jg
pop
sbb
js
fcmovu
stos
mov
add
push
cmp
mov
jl
or
jno
and
cld
arpl
push
sbb
imul
pop
rcrb
mov
loopne
ja
sbb
sbb
lret
sub
loopne
je
adc
mov
or
nop
gs
imul
dec
lea
daa
mul
scas
mov
fnstenv
and
adc
xchg
in
jo
test
scas
mov
aas
push
sbb
test
xchg
es
roll
cmp
fs
bound
js
mov
cmp
inc
outsl
adc
push
push
mov
mov
ret
pusha
rorl
mov
push
jae
das
scas
sub
andw
and
cmp
lock
int
test
sub
xor
idivb
shrb
test
pushf
or
hlt
xchg
and
jmp
and
mov
cltd
mov
xchg
mov
adc
jecxz
in
xlat
in
in
dec
adc
jne
rcll
pop
pusha
sbb
movsl
dec
jbe
sahf
popf
xor
clc
insl
cmpsl
pop
push
jg
mov
bound
inc
or
rclb
mov
xchg
pop
sbb
dec
sbb
mov
popf
mov
inc
jae
sub
dec
push
cs
and
or
test
mov
cltd
push
xor
mov
cld
xchg
int3
es
mov
mov
shlb
in
arpl
jo
mov
and
mov
popa
sbb
mov
mov
mov
inc
adc
rol
jo
sub
fimuls
and
xlat
decl
shl
adcb
in
ja
pop
mov
pop
test
jle
fisubrl
sti
push
mov
mov
out
jb
sahf
rcr
aas
cs
mov
test
popf
fstl
ss
jne
sub
cmc
popf
cmp
xor
jne
or
sub
sbb
pop
bound
pop
ret
push
cmpsl
or
and
adc
popa
sbb
add
add
xlat
stos
in
inc
outsl
adc
insb
cld
imul
sarb
mov
push
jmp
mov
es
cmp
xchg
pop
and
loope
xlat
clc
clc
test
mov
mov
rcrb
push
or
pop
xor
inc
leave
xchg
mov
popa
lods
inc
push
pushf
push
jge
adcb
pop
jbe,pn
xchg
lcall
imul
cmp
xor
and
gs
or
movsb
popf
lea
xor
aaa
sbb
ds
sahf
xchg
mov
ss
push
scas
or
or
sub
pop
subb
sub
adc
das
f2xm1
pop
std
test
jmp
into
arpl
pop
scas
test
mov
mov
mov
jge
mov
and
sets
or
jle
sahf
std
cmp
rclb
dec
outsl
and
adc
lahf
mov
shrb
sbb
or
sub
icebp
xchg
ret
ljmp
int3
scas
test
push
sahf
adc
push
jecxz
iret
stos
andl
inc
arpl
aad
push
and
mov
pushf
mov
lea
sbb
cvttps2pi
movsl
mov
fistpl
dec
stos
sub
or
jo
movsl
sub
cmp
lods
inc
mov
pop
inc
shr
add
sbb
out
xchg
push
inc
into
insb
mov
test
and
hlt
mov
ss
jp
outsb
scas
cld
cmp
xor
jl
lret
popf
dec
lods
mov
movsl
mov
or
into
xor
mov
test
fidivrs
leave
aaa
cli
test
pop
adc
inc
lods
es
pop
int3
xor
xorl
jo
test
xor
or
dec
cmp
or
mov
sbb
sbb
push
dec
fcompl
scas
fyl2xp1
arpl
xor
and
mov
add
dec
dec
mov
ss
adc
inc
jnp
loope
mov
inc
sub
ficompl
xchg
clc
decb
int
pop
addr16
stos
mov
cmpl
and
lret
xchg
outsb
aad
adc
mov
pop
addr16
pusha
sbb
mov
icebp
dec
scas
loope
xor
sub
ret
jnp
das
setge
add
lods
ljmp
ret
es
enter
mov
adc
cmpsl
xlat
lcall
mov
dec
enter
sbb
aaa
xchg
flds
popa
inc
xchg
lret
lea
mov
mov
and
lds
aas
loope
ja
and
or
cwtl
mov
fstpl
out
inc
out
test
mov
sbb
nop
mov
repz
xorl
pushf
loope
pop
cmp
xorb
lea
cwtl
push
dec
sbb
adcb
faddl
xchg
fcmovb
cmpsb
bound
imul
leave
or
sub
fidivrs
xchg
jnp
das
leave
das
cmp
fcomps
mov
dec
jecxz
xlat
add
aam
cmp
cmp
sbb
or
scas
fstpl
outsl
leave
mov
out
or
or
adc
or
add
xor
in
or
movsb
out
inc
push
ficoml
jge
rcrl
imul
sbb
lret
in
pop
dec
je
push
in
sbb
mov
movl
clc
xchg
cmp
add
adc
popf
sbb
cmp
push
or
sub
mov
jl
out
jg
movsl
adc
popa
daa
mov
shrl
sahf
leave
mov
outsb
insl
cmp
fstps
jmp
ret
lcall
pop
mov
out
ljmp
xchg
fmull
lcall
cmp
ficoml
inc
inc
icebp
jnp
mov
in
loope
add
sub
adc
loope
dec
ss
lea
loop
addb
out
movsb
jns
xchg
adc
jg
pop
mov
in
xchg
fldcw
data16
fbld
aas
loopne
cli
mov
out
fs
mov
lret
xor
daa
fisttpll
sub
daa
xor
mov
sub
or
add
push
and
sbb
pop
out
lahf
mov
xor
cmpb
daa
inc
jne
xchg
xchg
add
mov
and
add
movsl
push
repnz
mov
sub
incl
es
div
stc
clc
sbb
cwtl
mov
negb
in
out
out
arpl
repz
push
out
sbb
jno
icebp
mov
pop
mov
call
fldt
jae
cld
pop
adc
xor
adc
clc
es
shll
push
insb
cltd
fwait
into
adc
stc
mov
mov
jge
sar
es
xor
cmc
sbb
push
in
pop
add
sub
or
mov
rcr
ret
mov
pop
push
jb
insb
jp
sub
popf
jmp
sub
pop
push
push
shrl
mulb
in
and
pop
loop
mov
bound
fmul
mull
jge
iret
insl
arpl
ss
sarb
mov
sbb
lret
inc
push
lahf
fwait
inc
mov
mov
mov
mov
cmp
jg
cwtl
stos
mov
ljmp
and
lods
push
cmp
rorl
insl
fninit
fbld
cmc
daa
xchg
dec
je
testl
sub
add
jg
jp
push
cmp
cmp
loope
mov
sub
add
lret
xchg
cmp
lods
lahf
repnz
lea
add
adc
jecxz
or
cld
or
mov
dec
mov
inc
cli
inc
test
mov
xor
mov
mov
lcallw
mov
adc
outsb
repz
mov
adc
scas
add
div
sarl
mov
and
inc
lret
cli
shrl
mov
xor
popf
fwait
aas
roll
adc
mov
xchg
popf
movsl
dec
dec
sbb
push
sub
mov
add
cltd
xchg
inc
push
mov
data16
mov
rcrb
mov
dec
mov
jno
scas
adc
insl
out
jb
pushf
jl
dec
mov
mov
jmp
dec
addr16
cmp
mov
dec
mov
pop
jle
call
lods
jno
adc
repnz
dec
sarb
loop
shr
insb
loop
cmpsb
jne
mov
inc
out
pushf
sub
mov
ss
xor
add
add
push
int
push
pop
push
lahf
stos
int
mov
lahf
add
pop
jp
hlt
repz
subl
add
aam
fsubrs
mov
xchg
int3
push
repnz
dec
and
aas
push
add
les
outsb
jo
jmp
xchg
fcoms
sbb
out
jge
or
loopne
pop
sub
or
sub
movsb
pop
mov
mov
mov
stos
jle
sbb
sti
mov
clc
mov
mov
xor
fs
push
push
std
jae
mov
mov
cli
in
inc
ds
fstsw
add
sub
cwtl
mov
jmp
pop
pop
mov
xor
mov
test
aaa
jl
outsb
das
jo
dec
pusha
icebp
and
inc
xchg
pop
outsb
push
mov
xor
dec
out
lods
inc
xor
push
jne
in
pop
stos
push
xchg
push
pop
xchg
mov
fs
dec
xchg
inc
or
lret
adc
inc
or
outsl
xorb
mov
mov
mov
cli
idiv
test
cmp
fwait
sbb
push
in
xchg
data16
jl
cmp
mov
mov
add
addr16
pop
xchg
xor
xchg
or
xchg
daa
or
adcl
mov
mov
popa
loope
pop
xor
in
xorl
jg
std
xor
push
or
jge
and
xchg
add
push
out
push
push
mov
neg
add
jecxz
lret
ret
rorl
repz
int3
jge
insl
dec
out
cwtl
stos
sarb
ja
cmp
clc
add
cmp
movl
jp
jmp
sarb
mov
mov
in
mov
xor
repz
icebp
sbbb
sub
push
loope
xorl
dec
adc
daa
in
dec
shrl
je
cmp
pop
xor
inc
out
lcall
mov
sbb
or
movsb
xchg
int3
and
adc
mov
int3
decl
xor
xorl
outsb
scas
mov
jp
jmp
push
popa
sub
dec
adc
or
jnp
jne
dec
jno
pop
fdivrl
cld
pop
xchg
call
and
xchg
pushl
inc
mov
adc
adc
adc
es
xor
inc
xchg
add
rorl
ljmp
jmp
rcll
push
fldt
add
insb
pop
out
mov
inc
lods
and
pop
pop
mov
sbb
sub
sub
mov
addr16
mov
mov
cmc
push
and
sub
sbb
add
stc
dec
cmpsb
clc
jb
pop
dec
mov
add
js
iret
mov
js
movl
add
adc
and
insl
mov
jae
fnstcw
rcll
push
loope
js
add
mov
mov
hlt
sbb
fldl
or
and
mov
call
sbb
cld
mov
cltd
jnp
jp
jb
sbb
shlb
fsubrl
aas
ficomps
inc
inc
lea
fcomps
fwait
sahf
dec
jmp
mov
leave
inc
sbbb
adc
push
inc
adc
fs
cmp
and
scas
jnp
in
int3
data16
adc
push
sub
stos
insb
mov
ja
jmp
mov
ret
fwait
mov
rorl
shrl
cmc
or
scas
xor
mov
arpl
cwtl
pop
sbb
push
lods
mov
nop
sbb
test
lahf
and
cwtl
or
imul
lret
out
push
in
insl
mov
pop
sub
fcmovu
adc
pop
out
xor
ja
sub
jae
shlb
outsb
jo
in
stc
fwait
inc
add
push
fstpt
xor
fcoms
mov
insl
mov
mov
repnz
xlat
out
and
insb
xchg
mov
lods
mov
xchg
cmp
je
sbb
cld
dec
cmp
in
test
xchg
xchg
fisubl
data16
out
insl
and
sub
cmp
call
fdiv
or
add
daa
dec
dec
mov
push
hlt
stos
test
and
xchg
pop
in
iret
cmc
lea
cwtl
sub
mov
xchg
cmpb
xor
mov
sbb
xchg
or
cmc
das
dec
mov
orb
push
sahf
and
or
push
push
pop
lea
mov
movsl
push
cmp
adc
and
int3
or
xor
add
stc
popa
mov
out
fwait
pop
repz
fistl
outsb
out
loope
lret
sbb
sub
gs
pop
push
push
scas
and
mov
lods
mov
mov
test
dec
adc
fsubrs
ds
lds
jo
cmp
or
movsl
stos
mov
je
fistpl
stc
xor
ret
adc
inc
cmpl
movsb
push
lret
test
mov
or
jge
lock
ds
fadd
and
cmpsl
xchg
mov
leave
xor
pop
inc
fimuls
add
inc
enter
add
cltd
icebp
ss
pop
fwait
outsl
push
popf
jmp
jnp
add
dec
jge
xchg
icebp
and
adc
pop
cmp
cmp
cmpsb
or
cmpl
mov
cmc
out
cmp
fs
push
adc
xchg
fstps
jp
pop
lods
loope
pop
sahf
jle
jne
xor
lahf
xchg
cmp
cmp
mov
add
mov
mov
jbe
fsubrl
in
jmp
in
popa
or
and
int
hlt
and
dec
sti
cmc
aam
punpckhwd
pop
adc
daa
inc
repz
inc
mov
add
mov
pop
ljmp
xor
sbb
jo
jae
push
fadd
or
popf
jp
cmc
dec
idivl
std
loopne
add
in
scas
dec
shrb
mov
mov
mov
fcomp
cmp
rorl
cwtl
mov
int
insb
test
arpl
sbb
into
cmc
lea
in
xorb
cmpsl
ss
call
addb
in
fwait
push
sub
lods
sbb
int
add
enter
test
push
aad
loope
test
test
and
inc
mov
pop
jo
jmp
in
pop
rorl
repz
mul
in
inc
lahf
aaa
fs
mulb
cmp
sub
mov
sbbb
sub
out
enter
adc
push
pop
xlat
mov
jb
pop
xor
aas
shrb
out
xchg
sarb
mov
mov
mov
fdivrs
sbb
loope
dec
sub
add
clc
cs
adc
cmc
gs
adcl
inc
jns
xor
das
jbe
push
in
xchg
fs
xor
xlat
fisttps
mov
and
pop
test
fscale
mov
xor
mov
pop
into
ret
lods
jae
ljmp
ror
xchg
adc
nop
sub
jb
fucomip
lock
jno
imull
sub
sbb
cltd
push
lahf
cmp
dec
lret
xchg
addb
sub
push
lret
ja
ret
movsl
mov
mov
pop
pop
push
dec
in
mov
sahf
push
xor
jmp
stos
push
xorl
cwtl
not
mov
inc
add
xchg
clc
fcmovb
or
iret
pushf
fstpl
inc
mov
jo
jmp
push
in
ds
sbb
cmp
int
adc
pushf
or
xor
and
je
out
out
pop
ljmp
ljmp
iret
test
dec
sub
idivl
sbb
lds
repnz
ret
pop
lock
cmpsl
stos
lods
jmp
mov
xchg
and
and
jle
adc
jmp
pop
insb
dec
push
push
lea
fidivl
jp
adc
rol
sub
mulb
imul
dec
cmp
cmp
dec
xorb
mov
inc
push
stc
dec
push
sti
pop
jmp
int
or
xchg
mov
push
mov
push
xchg
mov
je
xchg
jae
push
push
xor
and
pop
insb
addr16
jnp
lea
mov
loopne
test
bound
andl
mov
sti
or
jecxz
inc
loope
nop
lret
jp
mov
cmp
les
sub
inc
mov
pop
sbb
xchg
push
mov
lods
loop
and
add
xor
enter
inc
repz
mov
mov
pop
test
push
mov
pop
sbb
pop
fdivrs
inc
xor
mov
lcall
pop
mov
cwtl
aad
test
adc
in
loop
stc
pop
mov
dec
push
jnp
xchg
xlat
hlt
subb
push
xor
ljmp
sub
outsl
int
dec
push
pop
jl
sbb
notb
stc
insb
fnstcw
cmp
into
in
lock
add
clc
inc
cmp
inc
add
mov
xchg
in
shr
mov
iret
and
jge
dec
js
sbb
dec
cmpsl
lea
mov
aaa
add
test
shl
inc
in
cwtl
mov
shrb
cmc
fisubs
and
les
mov
imul
add
gs
pop
dec
sub
cmc
daa
outsb
cmp
or
lods
jl
adc
cs
imul
inc
xchg
adc
mov
test
cmp
mov
lret
test
jge
sar
inc
jns
loopne
sbb
out
add
mov
rcrl
arpl
out
and
orl
outsb
sub
insl
js
push
adc
scas
jbe
cld
adc
mov
cmp
cmpsb
icebp
and
pop
lods
in
test
outsb
or
cmp
mov
out
hlt
fstpt
sahf
xor
roll
mov
shlb
popa
xchg
mov
adc
push
lret
add
sti
sti
add
jnp
nop
jge
das
add
mov
stos
jns
and
cmpb
jno
ljmp
into
cmp
sahf
and
mov
fisubrl
or
sbb
jbe
sbb
xor
mov
mov
xchg
notl
test
outsl
sub
mov
into
test
std
hlt
out
loopne
lods
or
mov
stos
insl
mov
gs
push
cmp
jae
popa
sub
pop
les
xor
add
xorl
stos
sbb
fstpl
hlt
rolb
loope
arpl
movsl
jle
movsl
ljmp
jno
sbb
stc
test
push
movsb
addr16
das
mov
out
push
xchg
xchg
sahf
mov
push
add
arpl
or
lds
push
inc
fistps
pop
popa
ljmp
mov
jl
adc
shll
jo
frstor
sub
jns
fsubr
outsl
lea
push
xchg
xchg
mov
cltd
mov
cmc
imul
fldt
jno
mov
dec
sahf
ret
cmp
je
fs
cld
dec
and
incb
test
or
or
rcr
pop
in
xchg
repz
das
sub
pop
repz
and
fimull
push
adc
push
xlat
lock
push
roll
std
push
xor
dec
add
add
lahf
sbb
icebp
cwtl
popa
jmp
cmc
mov
out
cltd
adc
clc
in
loop
scas
dec
fldcw
mov
cli
lock
aad
sub
jmp
and
xor
dec
add
push
mov
push
test
inc
ja
mov
mov
or
adc
dec
mov
cmp
insb
push
push
jecxz
ds
mov
jbe
inc
adc
push
dec
aad
out
je
divl
mov
stc
dec
aaa
mov
and
mul
pop
push
adc
loopne
stos
xchg
pop
stos
or
adc
lock
lcall
cwtl
jno
lret
jmp
test
nop
stos
ds
mov
test
mov
repnz
lock
test
cmp
sub
out
pop
jmp
mov
test
cltd
dec
sbb
xchg
inc
fisttpll
push
int
movsl
daa
subb
clc
jle
rorl
rcrb
pop
loope
mov
pop
call
inc
add
cmp
das
mov
xchg
dec
data16
ljmp
sbb
pop
inc
loop
sarl
jae
rclb
movsb
pop
and
pop
fstl
adc
lock
cwtl
mov
out
inc
xchg
cmp
out
test
aam
mov
ja
adc
adc
sub
and
and
ljmp
add
and
xor
xor
ss
mov
xchg
jne
pop
push
ret
daa
jp
push
dec
or
add
out
fstps
popa
and
add
ljmp
inc
jne
add
cmp
addr16
inc
and
cmp
mov
icebp
das
pop
lods
push
lahf
xchg
jp
inc
xchg
arpl
or
aam
xor
sub
int
add
pop
mov
inc
stc
fistl
lret
bound
ror
xor
xor
inc
bnd
lcall
push
movsl
sub
dec
int3
jno
jae
inc
mov
call
add
pop
push
xchg
sub
push
and
sbb
fmuls
add
mov
jecxz
jns
je
push
mov
sub
jl
pop
aam
repnz
pop
in
adc
xchg
popa
xor
push
add
inc
pop
movsl
lods
or
cmp
clc
mov
fbstp
mov
mov
das
xchg
adc
loop
out
dec
in
mov
cli
sub
cli
sub
aam
imul
push
out
xorb
mov
lcall
je
xor
pop
mov
xor
add
pop
mov
icebp
int
jecxz
mov
movsl
add
inc
dec
add
push
aad
dec
outsl
mov
xor
push
inc
popa
fwait
sub
out
inc
lret
in
or
dec
inc
ja
or
xchg
and
mov
and
and
dec
lods
subb
xchg
inc
rorb
and
insb
push
gs
jnp
push
ret
adc
gs
pop
xchg
clc
xchg
std
outsb
dec
jge
mov
pop
xchg
aaa
pop
push
popf
adc
pop
out
inc
arpl
hlt
fsts
lods
cmp
jns
push
imul
sub
inc
das
and
sbb
rolb
cld
jl
es
pop
add
xor
clc
jbe
inc
fcoms
out
mov
iret
fildl
out
stos
push
fnstenv
mov
and
cmpsb
mov
testl
ja
in
pop
sub
addl
push
loop
shlb
popf
test
sub
pop
pop
je
ja
or
arpl
mov
test
sub
mov
std
insl
mov
jg
test
push
mov
sub
sbb
inc
xchg
jp
pop
pop
aad
int
add
jge
cwtl
test
cld
push
cwtl
sti
test
into
xor
pop
and
and
out
mov
mov
fdivrs
je
addb
mov
iret
cmp
imul
dec
scas
or
jle
scas
jl
sti
cmp
nop
mov
jle
xchg
int3
outsl
lods
adc
or
mov
sub
sbb
or
clc
insl
xor
lea
mov
jmp
clc
cmp
mov
in
into
jnp
pop
enter
jbe
sub
popa
cli
ret
arpl
daa
or
cs
add
cmp
mov
fldenv
xchg
sbb
cltd
xchg
push
or
pushf
fsub
je
inc
mov
jp
aaa
js
lds
push
inc
cs
jl
fldcw
adc
cwtl
jle
stc
mov
fidivrl
mov
outsl
push
hlt
mov
popf
int3
inc
das
mov
xchg
mov
mov
in
out
arpl
sbb
xor
loop
stos
popf
push
mov
out
mov
pminsw
stos
dec
pop
cs
lods
mov
aas
cmc
mov
cmp
andb
icebp
xor
or
add
sub
pop
addr16
push
cmpsb
mov
outsl
dec
and
push
and
and
test
mov
sub
into
inc
mov
jg
cmc
lds
mov
addr16
loop
xchg
int
ljmp
xchg
jne
mov
pop
ret
inc
mov
aad
popf
xchg
idivb
inc
xchg
jno
in
int3
sub
fistpll
dec
movl
movsb
inc
mov
insb
adc
hlt
daa
mov
fbstp
fildl
jbe
sbb
fstl
sarb
popa
fldcw
mov
out
lcall
push
and
fadds
test
jns
ret
and
and
jb
xor
scas
loope
fdivrl
orl
mov
popa
outsb
gs
subb
inc
je
scas
pop
lahf
mov
push
adc
mov
rclb
adcl
addl
jb
push
test
mov
push
mov
loope
xor
and
fildll
and
popf
js
sub
rorb
mul
jmp
mov
lcall
inc
sub
mov
jae
lcall
ljmp
and
jp
inc
addb
emms
adc
fcmovnbe
dec
cli
inc
sti
lcall
nop
sbbb
imul
xchg
orl
test
stc
mov
in
mov
inc
jae
xor
sbb
pop
cmp
lahf
in
aaa
ret
insl
xchg
pusha
sti
arpl
mov
iret
sbb
inc
mov
cmp
dec
cmp
leave
mov
adc
test
inc
jmp
mov
loop
fimuls
dec
and
push
in
push
mov
out
repnz
testb
mov
stc
cltd
daa
aaa
popf
orb
jge
aad
jg
cmp
inc
jnp
movsl
call
jne
mov
and
and
loope
pop
shll
out
and
push
adc
icebp
pop
mov
cmp
and
mov
push
adc
adc
cwtl
shrb
fcmovu
sub
das
cmp
pop
sub
lods
not
jg
cs
aaa
fdivrl
and
xor
ss
ret
lahf
scas
add
fdivrs
cs
dec
lds
mov
mov
jg
rcrb
mov
add
sbb
pushf
xor
leave
out
mov
add
push
xor
call
push
xor
rol
mov
mov
orl
push
out
aaa
into
aam
cwtl
cwtl
out
pop
iret
sub
xchg
sbb
sub
out
aam
cmp
arpl
repnz
ds
stos
call
int3
mov
push
arpl
and
sub
movsb
sbb
push
adc
jno
loope
cmc
call
repz
mov
popa
cmp
loopne
xor
insl
lods
inc
xor
jmp
push
ret
jg
neg
cmp
mov
mov
push
sub
or
ret
std
dec
push
fistps
mov
movd
sub
and
sub
inc
mov
xor
inc
or
es
rorl
pop
incl
hlt
cmp
jnp
fists
fs
sbb
mov
fisubl
adc
mov
sub
xchg
xchg
ror
xchg
add
push
xor
icebp
in
cmp
cmpsb
ljmp
jg
jl
popa
loop
inc
stos
jge
xchg
and
aas
cmpb
sbb
xchg
mulb
ds
xor
pop
lea
and
mov
add
std
test
or
adc
sbb
mov
lds
inc
rorb
pop
test
cmp
mov
clc
fwait
stos
cltd
mov
pushf
adc
sub
dec
jecxz
mov
test
dec
cmp
popf
mov
ror
rorb
jecxz
and
mov
mov
fldl
dec
pop
je
inc
mov
dec
es
das
pop
and
cmp
xlat
inc
sub
cwtl
je
push
jmp
mov
loope
inc
in
shll
ljmp
mov
cmp
loopne
sbb
push
hlt
leave
std
aad
ret
add
sbb
adc
sarb
imul
sbb
pop
iret
test
lret
jge
jg
in
pop
mov
mov
in
xchg
sub
stos
mov
adc
test
rolb
popf
jle
out
sub
imul
xor
sbb
sub
and
cltd
shlb
mov
cmp
xchg
fucom
or
call
jno
imul
bound
iret
popf
push
xlat
leave
pusha
jp
push
mov
mov
jno
cmp
sbb
jge
or
push
fs
lret
push
ja
cmp
ret
xchg
jne
lahf
jecxz
or
cmp
sub
jmp
xchg
cmpsb
in
xchg
mov
push
jge
adc
dec
jne
das
push
xchg
add
mov
add
sub
lret
scas
into
lock
and
cmp
push
jb
insb
je
mov
mov
mov
sbbb
mull
and
pop
xchg
aad
popa
dec
sbbl
xchg
add
ror
inc
inc
cli
mov
xchg
adc
gs
andl
fmuls
push
das
clc
ror
adc
push
push
daa
add
cmp
aam
push
dec
push
mov
outsb
repnz
addr16
cmp
dec
hlt
push
and
mov
mov
jbe
sbb
xchg
cmp
mov
lahf
stos
or
scas
ja
xchg
inc
adc
gs
sub
ss
cmpsl
dec
sub
adc
dec
pusha
xchg
sahf
push
iret
addr16
mov
ret
dec
insb
or
fldenv
sub
ljmp
cmpsl
inc
sub
addb
and
dec
das
movsl
jb
add
adc
adc
sbb
push
cmp
inc
out
imul
inc
arpl
jbe
add
pop
test
push
cld
std
aas
testb
out
scas
rcrb
mov
add
add
jnp
shll
aas
or
mov
repnz
lods
dec
xchg
xchg
outsb
cmp
and
lds
mov
nop
cmp
inc
ss
scas
arpl
repnz
ret
dec
cmp
movsl
sbb
jno
xor
push
add
mov
call
out
mov
outsl
jle
outsb
iret
xchg
insb
xlat
adc
hlt
rorb
sbb
fcmovnbe
enter
lock
andl
add
sbb
mov
jae
shl
sub
cmp
mov
outsl
scas
test
call
pop
sub
mov
cmpsl
cmp
mov
fsubrs
pop
repnz
xor
divl
es
sub
call
xchg
sbb
scas
mov
adc
ljmp
ret
xchg
xlat
mov
arpl
xor
sbb
xor
filds
js
ss
inc
arpl
dec
out
push
roll
in
push
cmpsb
fxch
test
adc
scas
add
xchg
sbb
cmp
mov
sub
lock
negl
daa
div
dec
movsl
mov
ljmp
xor
mov
cli
and
negl
out
xchg
punpcklwd
add
adc
sub
movsb
loopne
xlat
mov
ss
mov
cmp
inc
fistps
mov
or
int3
mov
push
mov
sbb
jbe
and
mov
insl
xchg
int
out
mov
test
pop
loopne
or
mov
push
pop
mov
sub
mov
mov
mov
and
mov
testb
jbe
cmpsl
icebp
in
cmp
mov
adc
push
sbb
out
arpl
or
imul
push
lods
pop
jg
mov
sahf
shrb
inc
adc
dec
add
or
push
pop
packuswb
pop
daa
pop
dec
sbb
mov
cmc
jb
mov
call
int3
xchg
xchg
es
mov
dec
dec
insl
lret
xor
ljmp
push
es
in
repz
xor
test
idivl
orl
ss
dec
xor
push
in
and
andl
xor
mov
test
xchg
and
push
xor
xchg
ss
aam
cmp
stc
test
stos
out
test
push
cld
mov
push
xchg
insl
fists
sbb
imul
ljmp
add
adc
sbb
shrb
bound
mov
sub
fs
out
in
mull
and
push
inc
jns
popa
andb
cmp
adc
xlat
mov
lcall
and
mov
in
lret
and
jae
pop
lds
sub
push
je
mov
add
stos
jle
mov
sub
addr16
push
xchg
cmp
in
add
cltd
or
pop
scas
adc
inc
mov
sub
pop
cmp
rorl
jmp
cmc
mov
pop
addb
cld
adcb
cbtw
enter
push
arpl
and
in
loop
into
adc
mov
lds
mov
jmp
and
adc
dec
inc
dec
iret
pop
mov
mov
leave
mov
lret
cs
sahf
test
push
xor
adc
cmp
in
mov
ljmp
outsl
pop
and
xor
int
stos
lahf
sbb
mov
cmp
into
pop
subb
xor
fadds
in
jbe
cmp
xchg
sarb
cld
xchg
xor
adc
test
cld
movsl
pop
fs
jae
ret
enter
mov
sbb
loope
andb
movsl
or
jo
sbb
xor
leave
inc
sbb
subl
mov
ja
mov
jp
cmpsb
js
jle
cmpsb
pop
cmp
jge
mov
xchg
add
int3
test
bnd
shrb
je
or
ds
mov
jno
dec
in
stc
pop
mov
out
insb
cmp
inc
test
sub
dec
jne
and
negb
mov
mov
je
xor
fildll
fsin
jbe
adc
movsl
int
adc
push
lcall
mov
bound
cwtl
clc
cmp
es
ret
stc
xchg
push
jmp
adc
roll
xchg
leave
fs
jo
inc
or
add
iret
inc
js
into
es
fwait
mov
psubb
leave
mov
test
cmp
cmc
fidivl
and
aad
adc
sub
in
xor
cmp
lock
icebp
popf
xor
jo
loop
jecxz
and
jo
add
lods
cmpsl
jns
hlt
shll
dec
lret
mov
adc
jl
mov
aam
sub
pop
and
sub
es
add
icebp
xchg
and
roll
cmpsb
sbb
dec
fldt
pop
stc
lods
push
call
imul
mov
lea
shrl
ja
cmp
sub
outsl
outsb
pop
mov
push
orl
movsl
jne
insl
nop
rcrl
test
mov
mov
ret
mov
mov
and
lret
stos
dec
repz
stc
repz
cs
test
mov
cmp
mov
cld
sub
out
xor
jae
sbb
insb
inc
sbb
xchg
mov
add
inc
in
add
pop
shll
xchg
arpl
push
or
outsb
pop
cmpsl
iret
add
dec
lcall
mov
push
orb
xor
inc
cmp
dec
push
rol
jp
cwtl
add
xor
xchg
xor
ljmp
std
roll
xchg
inc
clc
jb
shlb
adc
je
stc
push
inc
cmpb
arpl
enter
push
ret
sub
cmp
push
je
jl
jb
mov
jae
xor
scas
cmpsb
dec
cs
sbb
mov
and
iret
jae
xlat
jmp
inc
xchg
dec
cmpsb
mov
andb
sbb
or
pop
aas
out
mov
dec
mov
sarb
adc
mov
adc
add
rep
mov
mov
fcomp
iret
xlat
sbb
imulb
and
or
mov
jg
mov
aad
dec
lcall
aaa
fistpll
mov
test
shll
pop
xor
push
arpl
out
inc
cmp
lret
in
or
jmp
sub
and
scas
push
icebp
popf
rolb
pop
inc
cmp
lea
aaa
push
pop
sti
mov
add
jb
clc
push
fistpll
repnz
lahf
jl
neg
shll
lds
mov
adc
cmp
dec
iret
and
lods
cmpsl
mov
imul
and
sub
dec
inc
cmp
movsb
jo
gs
jns
or
adc
addl
push
pop
aad
pop
inc
cmp
and
repz
vcvtdq2ps
jae
test
mov
mov
xor
pop
mov
sahf
sbb
rorl
fdivrs
iret
pop
xor
lock
outsl
lock
int
push
add
adc
and
loop
pop
push
lret
xchg
pop
rcrb
scas
or
test
xchg
icebp
aam
sahf
scas
pop
mov
dec
rcl
pushf
test
and
ljmp
or
jbe
mov
movsl
aas
cmp
add
mov
rcll
imul
daa
and
fmull
sub
jle
sbb
fisttpl
fdivrl
mov
lcall
je
pop
data16
ja
add
inc
xor
in
aas
cmp
sbb
mov
sarl
cmp
repz
popa
mov
mov
mov
cmp
fsubrs
out
jne
mov
aas
cs
xchg
fnsave
fcoml
dec
lahf
test
ja
cmp
pusha
enter
nop
aas
mov
hlt
jo
mov
iret
and
lcall
or
cmc
repnz
loope
scas
aas
xor
and
nop
ja
push
pop
dec
xchg
sbb
and
addl
adc
dec
aad
dec
add
xchg
inc
movb
rolb
lahf
pop
cli
sbb
sbb
imul
xchg
stc
lea
mov
sbb
cmp
sub
loopne
out
sti
stc
push
daa
cltd
outsb
jl
and
iret
test
cld
fcoml
jp
cmp
adcl
pop
mov
pop
rcrl
mov
out
mov
push
fadds
pop
scas
sub
popa
lahf
outsl
sub
leave
lds
adc
mov
sub
inc
flds
add
outsl
mov
xor
outsl
mov
jge
test
pop
dec
mov
aas
and
sub
mov
jp
inc
mov
and
xor
sub
and
sahf
sbb
popa
mov
sbb
push
arpl
shlb
add
ds
movsb
jp
iret
mov
jne
imul
sub
dec
sti
push
pop
ds
popf
pop
das
inc
scas
inc
pushf
shrl
xchg
inc
xchg
adc
cmp
clc
push
inc
cmpsl
fcomp
outsb
nop
xchg
shlb
or
mov
add
add
mov
fdivr
jg
jbe
ja
adc
sahf
jo
jle
out
mov
add
fdivr
mov
cmc
pop
mov
fisubrl
sarl
push
inc
mov
jge
loopne
xor
push
mov
cmc
mov
loop
dec
lahf
cmp
testb
push
mov
push
cmp
inc
sub
imul
jg
aam
add
mov
xor
shll
pushf
adc
mov
fwait
out
sbb
and
add
jmp
xchg
cs
add
imul
jae
cmp
inc
push
data16
jnp
mov
rcl
cld
out
push
cmpl
sub
cmp
test
push
lods
sub
push
and
mov
scas
movsl
pop
test
xor
test
xlat
mov
mov
leave
sbb
test
sti
pop
sbb
mov
or
mov
cmpsl
iret
jle
mov
clc
lds
cmp
sbb
lods
add
dec
jbe
push
dec
int3
aam
test
sbb
push
daa
push
mov
iret
sbb
lcall
shlb
dec
clc
fwait
shlb
xchg
jl
jecxz
cwtl
pop
std
pushl
fcoml
adc
js
mov
fisttps
sbb
inc
mov
mov
cmp
es
cmpsb
lds
bound
pop
xlat
test
and
jo
sahf
xor
aas
jns
push
jg
jbe
xchg
mov
pop
and
stos
shlb
or
add
lock
xor
xchg
pop
mul
jge
mov
rorl
clc
test
faddp
aaa
test
arpl
cmp
stc
loopne
xchg
aam
cmpl
outsb
cli
inc
test
hlt
push
mov
jnp
dec
test
out
sbb
and
jg
movl
jne
sub
mov
imulb
inc
cmp
out
sbb
ds
aad
dec
scas
or
in
mov
int3
mov
out
lock
imull
jge
or
cmp
fsubl
mov
test
mov
js
xchg
cwtl
and
xlat
mov
mov
xor
ret
dec
push
cmp
enter
aad
sub
fnstsw
sub
push
pop
or
inc
repnz
adc
fdivrl
and
jle
std
addl
cmpsb
xlat
mov
xor
js
nop
or
inc
adc
add
call
jl
or
lea
sbb
call
xlat
sbb
ror
sub
je
jb
mov
mov
adc
fcomip
loope
xchg
mov
sub
imul
test
pushf
jns
mov
out
imul
stos
outsl
or
or
in
jecxz
sbb
push
jl
sbb
lods
pop
sub
cwtl
mov
ljmp
push
je
out
add
push
mov
ljmp
adc
add
cmp
addr16
movsl
clc
push
sbb
cmp
push
xchg
cmp
push
pop
loopne
mov
sbb
mov
jle
xchg
into
inc
repnz
inc
cmpsl
shll
add
push
fiaddl
or
fs
neg
loope
sbb
sahf
sub
call
jo
mov
dec
fdivrs
aad
loope
fwait
into
pop
push
int
and
sub
cmc
sbb
jge
jnp
mov
dec
in
sbb
fmuls
icebp
mov
push
inc
dec
std
adc
jmp
xor
mov
or
dec
lods
adc
ret
xor
mov
jb
mov
fimull
out
xor
test
addr16
sbb
insl
mov
add
pushw
mov
cmpl
ror
xchg
sbb
pop
push
push
or
fs
inc
mov
gs
loopne
xchg
inc
mov
pushf
jp
loope
sbb
xorb
call
int
dec
push
cld
repz
jle
and
mov
xchg
cmc
xor
push
fcmovne
cmc
repz
cmpsb
pop
pop
jbe
jae
sbb
iret
lret
adc
cvtpi2ps
mov
or
pop
cwtl
mov
mov
sbb
pop
outsl
shll
adc
lcall
test
adc
xlat
adc
jbe
into
mov
add
jo
mov
and
pop
jle
outsl
repnz
test
loop
sbb
add
and
jl
outsl
push
cmp
cmp
jb
push
jbe
sub
mov
dec
sbb
mov
ret
rorb
aad
inc
inc
cmpsl
jne
js
xchg
adc
insb
dec
in
or
xchg
ljmp
mov
mov
xor
mov
mov
out
neg
adc
push
cmpsb
xor
leave
mov
or
push
pop
shlb
in
mov
jmp
inc
ret
andb
mov
inc
xor
cld
mov
dec
lret
popf
iret
cwtl
mov
scas
inc
mov
jae
push
dec
fistl
adc
aam
adc
xchg
pop
pop
imul
sub
lock
ret
movsl
data16
push
cmp
pushf
test
pop
les
push
out
imul
dec
lret
ljmp
std
fsubs
inc
repz
hlt
push
push
lret
inc
dec
mov
lods
pushf
testb
xchg
test
lock
xchg
push
dec
xchg
pop
cs
xlat
pop
xor
pop
sub
jg
sbb
and
pop
and
std
data16
nop
mov
mov
cmp
push
jbe
sbb
scas
sarl
adc
std
push
xor
cld
jne
push
adc
int
or
popf
mov
jecxz
push
xchg
ss
adc
cltd
loope
sti
adc
sahf
push
mov
ret
hlt
cmp
xor
add
arpl
sbb
orb
in
lods
int3
enter
subl
testl
mov
push
xchg
dec
movsb
or
rolb
jecxz
dec
sub
pop
orl
jae
cwtl
push
scas
icebp
and
int
test
jmp
out
xor
push
loope
xor
stos
xor
arpl
inc
push
add
sarl
pop
mov
scas
pushl
jae
inc
mov
rcrl
sub
cmp
mov
mov
xchg
rorb
xchg
outsb
addr16
pop
mov
lahf
fnstenv
cmp
jns
hlt
loopne
andb
subb
icebp
inc
in
xchg
je
and
aam
ljmpw
insl
aas
clc
push
pop
jecxz
cmp
sti
sub
cltd
movsb
mov
xor
xchg
addl
adc
add
push
ljmp
pusha
ljmp
sbb
movsb
bound
adc
jp
lret
rcrb
jnp
xchg
fidivrl
jno
cli
sbb
xchg
into
dec
and
sti
cmpsb
xor
cs
or
xor
inc
push
xchg
lahf
lock
xor
mov
gs
cmp
xor
mov
ja
nop
mov
fsubl
push
or
rol
cmpsb
jbe
rcrl
push
fs
xor
pop
xchg
sub
enter
dec
lods
mov
mov
pop
data16
ret
inc
lock
mov
cmc
decb
inc
jg
or
stos
cmpb
sub
pusha
sbbb
mov
adc
or
cld
lcall
add
jge
lahf
gs
inc
insl
std
out
pusha
mov
pop
xchg
pusha
cld
and
jg
in
leave
outsl
les
dec
dec
mov
mul
fnstcw
xchg
test
xor
shrl
sbb
mov
cmc
mov
in
clc
test
sbb
pop
pop
sub
xchg
xchg
inc
inc
test
pop
xor
out
mov
fptan
aam
push
aaa
xor
jne
cli
cli
bound
push
outsb
fdiv
orl
cmp
clc
lods
adc
lds
addb
scas
mov
in
gs
xor
arpl
cltd
xchg
pop
or
sbb
sub
pop
push
test
lods
sub
hlt
mov
cld
cmc
dec
fstpt
loop
cmc
iret
lahf
test
fldcw
xlat
test
and
popf
mov
aad
push
cmc
or
inc
xchg
xchg
cmp
jg
arpl
ret
lds
loop
sbb
add
aaa
and
fucomip
add
mov
gs
sub
sub
test
jg
xlat
xchg
mov
sub
loope
dec
roll
ret
aaa
sbb
insl
jge
jbe
sbb
movsl
rorb
or
mov
lods
nop
sahf
dec
notb
sub
add
push
dec
jecxz
xchg
adc
and
xchg
or
loope
inc
or
or
and
adc
daa
mov
std
pop
sbb
adc
jb
std
stc
lods
jno
stos
and
push
outsl
sub
pop
bound
sub
popa
or
dec
cwtl
cs
mov
push
mov
int3
cwtl
pop
add
push
mov
pop
out
outsb
adc
fs
in
push
int3
cmpsb
and
stc
add
cli
push
cmp
pop
xor
mov
inc
jns
or
xchg
ficomps
xchg
mov
cmp
xchg
andl
cmpsl
jno
or
inc
rcrl
inc
mov
int3
xlat
ret
or
rorl
xor
cmc
fisttps
sti
or
addl
mov
mov
push
cli
cmp
in
fwait
xchg
sahf
jp
fdivrl
fsubrl
mov
mov
cmp
imul
mov
jo
data16
fwait
add
or
sbb
lcall
mov
cmp
sub
adc
sbb
clc
rcll
sahf
sub
fisubs
ret
push
jmp
xor
fmul
sub
pop
cmp
nop
hlt
es
push
lcall
js
out
fdiv
repz
xchg
std
sbb
mov
shrb
movsl
lods
pushf
aaa
xor
daa
mov
and
cwtl
mov
or
mov
loope
ss
push
popa
sub
inc
jns
or
cpuid
adc
vmptrst
cmpsb
lock
and
mov
shll
mov
inc
addl
and
lods
outsl
stos
push
mull
out
xor
arpl
out
lods
lock
push
mov
lret
lahf
fstpl
js
addl
test
lcall
cmpl
ja
roll
adc
sbb
jno
pop
pushf
mov
repnz
stos
push
fldt
shll
cmp
sub
lea
mov
jle
pop
mov
xor
insb
sahf
inc
inc
ljmp
pop
cltd
mov
dec
pop
stos
scas
mov
inc
add
mov
out
lret
insl
aad
mov
sbb
pop
shl
mov
pop
lahf
cmp
insl
outsl
test
in
sti
inc
addr16
ss
test
aas
push
ficoms
test
or
or
dec
imul
sbb
daa
cld
mov
mov
movsl
cmp
jne
mov
cmc
fnsave
daa
dec
mov
cld
push
inc
sbb
pop
int
push
icebp
faddl
lcall
mov
pop
dec
mov
imul
mov
inc
jbe
push
push
testb
inc
push
mov
fs
out
sub
jge
lret
stc
lahf
sub
mov
icebp
inc
mov
jbe
jno
pushf
pop
push
mov
mov
inc
mov
adc
or
std
aad
cmpsl
sub
mov
lret
pop
dec
mov
mov
int
jns
fdivr
fsubl
adc
lock
pop
test
addl
ja
xchg
inc
ret
roll
imul
fistl
jno
mov
roll
add
sbb
xor
or
jo
inc
jbe
inc
insb
xor
popa
xor
jl
xchg
jo
rcll
pop
mov
ja
stos
scas
push
std
data16
ja
push
fwait
sbb
or
imul
push
add
dec
es
push
add
sub
mov
adc
push
xor
arpl
sbb
mov
or
xchg
sbb
inc
cmp
inc
cmp
xchg
lret
xor
mov
dec
mov
pop
sbb
push
xor
and
arpl
xchg
fldcw
inc
adc
in
lds
jo
aam
hlt
cmpsl
arpl
lret
outsb
daa
scas
daa
cs
imul
mov
pop
dec
add
xchg
mov
cmpb
mov
test
aas
inc
xchg
in
lret
adc
aas
aam
out
cmp
mov
enter
push
stos
push
add
enter
imul
jnp
cmp
stos
mov
dec
inc
sahf
jb
sbb
cltd
rcll
movsl
xor
xor
push
jbe
pop
push
mov
sub
std
or
push
aaa
fcoms
and
in
push
xchg
jbe
incb
mov
jae
mov
adc
adc
mull
inc
clc
pop
and
ror
test
inc
pop
mov
xchg
fstl
or
xorb
mov
in
sub
sub
cli
into
add
ds
out
scas
sbb
sbb
addr16
cmpsl
push
xchg
and
and
call
mov
inc
je
mov
fiaddl
fistps
cmp
and
loop
add
jnp
and
xchg
sahf
insl
jl
shlb
xlat
bnd
jmp
xlat
test
in
lahf
scas
and
pop
data16
inc
and
inc
fwait
aad
xor
inc
pop
mov
jge
mov
sub
jns
iret
rcll
rolb
scas
inc
adc
jo
movsl
lea
aaa
stos
aam
mov
mov
jg
in
popa
push
repz
xchg
test
and
dec
or
inc
lahf
and
xor
ds
xor
add
das
xchg
int3
jae
out
test
mov
movsl
jb
cmp
cmp
adc
outsb
rep
ret
push
mov
mov
mov
pand
fists
or
xchg
xor
and
jnp
repz
pop
loop
pop
jmp
xor
fldt
in
into
add
iret
cmp
insb
movsb
hlt
mov
adc
divb
cmp
pop
cmpsl
xchg
or
or
inc
fs
cmc
push
add
and
sbb
gs
in
decl
xchg
xchg
scas
mov
sub
xor
push
pop
inc
stos
out
shrb
data16
pusha
add
in
dec
jbe
mov
enter
cmp
jne
xchg
jmp
std
pop
lods
cltd
inc
add
mov
jg
je
cs
shl
fs
aad
scas
stos
cs
lods
adc
arpl
xchg
and
dec
and
xor
iret
leave
xchg
dec
dec
lods
lds
xchg
fstl
push
cmp
mov
dec
int3
and
data16
ret
adc
cwtl
sahf
test
jl
or
dec
hlt
or
out
or
test
insb
pop
in
insb
mov
out
jbe
into
idiv
push
pop
cmpsl
hlt
lds
ljmp
scas
dec
xchg
jae
jge
andb
pop
hlt
sarb
clc
fcomps
add
insb
fstpt
out
aaa
insl
mov
ljmp
lods
movsl
mov
out
and
inc
out
shl
idivb
sub
cmp
bound
mov
shr
fsts
les
xchg
sbb
dec
and
sub
popf
xlat
xchg
bound
sbb
mov
in
and
add
mov
test
jmp
add
imul
jae
xchg
mov
and
xchg
push
aad
ljmp
adc
div
sbb
testb
xchg
cs
stos
out
push
mov
inc
or
repnz
and
push
sub
dec
cld
ljmp
and
gs
sbb
mov
push
and
xchg
shrl
cmpsl
ds
push
lds
cmp
jns
mov
add
sbb
push
xchg
popa
std
mov
cltd
mov
dec
hlt
lret
adc
imul
pop
pushf
outsl
or
dec
das
int
sub
rcl
inc
jle
ss
push
sub
push
outsl
inc
enter
add
sub
push
lds
inc
imul
leave
gs
subl
out
push
mov
es
push
adc
jbe
js
cmp
fbld
jo
aad
mov
mov
jmp
ljmp
pop
and
add
sub
data16
es
add
xor
sbb
dec
das
enter
rcl
fbstp
mov
mov
movsb
lods
imul
out
loop
push
pop
shl
push
out
adc
push
or
xchg
mov
outsl
je
push
pop
or
mov
mov
adc
mov
leave
add
aaa
xchg
push
push
test
xchg
jns
jle
adc
xorb
mov
adc
call
pop
clc
add
ss
or
addr16
xorl
mov
sbb
cmp
ds
mov
mov
dec
lcall
lahf
repz
push
stos
insb
sub
std
sub
cmp
xchg
lods
or
push
arpl
nop
xor
test
push
sahf
jmp
repz
pop
sbb
lret
out
cmp
std
aad
lods
pusha
ret
cmp
jmp
nop
mov
mov
ljmp
adc
push
jne
lods
jb
int
cmp
mov
add
outsl
fs
jae
xchg
insl
inc
jg
or
or
mov
orl
sub
pop
movsb
sbb
addb
xchg
cltd
cmp
and
push
mov
inc
xor
fisubrl
addr16
scas
mov
mov
imul
add
nop
js
fwait
or
xchg
jmp
pop
xchg
adc
test
aaa
cld
xchg
nop
call
into
das
and
mov
repnz
push
dec
add
stos
clc
pop
sbbb
lret
mov
xor
sub
dec
loopne
adc
sbb
add
xor
jecxz
mov
xor
popf
loopne
push
es
and
and
insl
stc
scas
lcall
mov
inc
insb
xchg
sbb
xor
or
xor
sbbb
stos
nop
fcoms
adc
sbb
pop
mov
adc
ja,pt
sub
divb
lcall
mov
das
incb
pop
xchg
push
cwtl
ljmp
inc
sbb
lock
andl
jns
cmp
hlt
sbb
push
and
js
rolb
imul
dec
mov
into
push
add
data16
inc
mov
or
and
sbb
loop
inc
sub
and
rcl
dec
outsb
mov
mov
cmp
ficoms
push
jg
lahf
adc
sub
sarb
xchg
test
dec
inc
addr16
mov
sub
xor
fiaddl
and
mov
inc
inc
jp
hlt
aam
add
cmp
sbb
andl
push
out
int3
inc
sbb
jl
sub
repnz
mov
jge
std
mov
arpl
lea
sahf
cli
jne
testb
out
jno
into
xchg
sub
and
xor
mov
push
icebp
xchg
xor
cmc
iret
in
psubq
jno
ret
insl
leave
loopne
int3
dec
arpl
test
mov
bound
cmp
lods
mov
jle
pop
xchg
add
cmpsb
pusha
sti
cmp
cmp
jg
mov
or
sub
push
mov
jmp
sub
wrmsr
out
inc
mov
push
bound
xlat
iret
mov
mov
jae
jne
in
pop
out
cmpsl
pop
mov
mov
dec
cwtl
pop
push
sarb
pop
sbb
aas
mov
test
shlb
sub
dec
insb
mov
jp
aad
sbb
or
inc
mov
jecxz
sub
lret
mov
mov
sub
ret
and
dec
push
es
pop
or
aad
cld
mov
out
insb
test
mov
out
lods
ror
inc
adc
mov
dec
cmpsb
push
cmc
cmp
loope
fsubrp
fimull
roll
pop
and
pop
stos
mov
jl
jbe
stc
mov
rcr
pop
sub
das
dec
and
clc
or
sbbl
movsl
sub
imul
je
fwait
frstor
rcll
lret
popa
aad
xchg
cmp
mov
lcall
adc
pop
mov
push
push
dec
push
jecxz
mov
lds
mov
cmp
xorl
ret
pop
scas
lock
mov
aad
and
repz
dec
out
inc
aaa
int3
xchg
cld
add
je
cmpsb
cltd
xchg
lods
fisttpl
loop
push
adc
jl
sbb
mov
sub
inc
rcrl
mov
inc
repnz
out
mov
adc
int3
xchg
pusha
add
sbb
sub
add
es
push
xchg
leave
cmp
xor
jne
lret
push
frstor
sahf
xchg
cli
arpl
mov
xor
xor
es
adc
or
xor
inc
xchg
sub
jp
push
mov
or
push
cmpsl
imul
arpl
mov
adc
xor
lret
mov
xchg
outsl
sbb
movsl
cltd
cmpsb
mov
dec
loop
or
and
dec
repnz
dec
out
mov
adc
mov
jecxz
xchg
sbb
arpl
leave
push
rorb
mov
scas
mov
incl
inc
and
notb
mov
and
inc
loope
adc
xchg
and
sti
stos
test
loope
mov
aad
xchg
aad
inc
dec
sub
mov
adc
adc
xor
cmpsl
mov
fwait
decl
xor
or
xor
push
insb
shrl
xchg
std
mov
dec
repnz
xor
or
add
xchg
cmp
xchg
and
or
mov
fisttpl
neg
lds
fmul
dec
insl
cli
mov
push
xchg
loopne
xlat
mov
addr16
lods
adc
ljmp
pop
rol
rcrb
xchg
add
andb
mov
jl
lahf
sub
sub
push
pop
lret
inc
or
jne
or
jns
pusha
cmp
push
mov
test
shrd
and
sbb
test
dec
inc
lods
movsb
adc
add
cmp
cmp
cmp
mov
push
jmp
or
ficoml
fsubrp
inc
xchg
dec
mov
inc
cmp
pop
push
int3
adc
cltd
xchg
cmp
out
jge
and
and
jle
inc
mov
shlb
xchg
and
lds
add
mov
sub
iret
in
mov
mov
mov
repnz
or
xlat
lock
lods
fisttpll
xor
sub
lea
int3
loope
inc
push
dec
in
mov
jo
pushl
sub
fmull
pop
repz
dec
push
pop
cwtl
jecxz
fildl
and
mov
fnstenv
lret
arpl
mov
inc
shrb
orl
jne
aas
scas
push
inc
daa
inc
lea
jns
inc
xchg
cli
rcrl
push
xchg
das
jge
mov
adc
mov
sub
pop
rcrb
ja
or
adc
pop
xchg
data16
shr
jbe
dec
mov
cmpsl
add
mov
add
stos
mov
or
addr16
outsb
test
xchg
fists
sub
ret
jae
mov
cld
inc
mov
stos
sahf
loope
adc
xchg
int
cmp
test
rorb
dec
pop
xor
fs
xor
sub
std
ret
lds
mov
out
inc
call
lods
jecxz
cmp
fmuls
and
mov
sub
js
std
xchg
les
push
add
and
popa
les
pop
es
jg
xchg
adc
push
stos
add
sub
sbb
pop
js
jl
mov
fisttpl
mov
jg
pusha
jae
xchg
mov
mov
inc
mov
rclb
pop
xchg
aad
mov
rclb
sub
mov
pop
jl
sub
ficoml
mov
insb
dec
mov
or
scas
add
inc
fwait
or
jge
orl
stos
jno
sbb
out
addb
jecxz
in
mov
outsl
popa
pop
or
jecxz
and
test
in
ret
test
gs
dec
leave
sti
ret
pop
outsb
dec
jmp
sahf
outsb
daa
push
sub
xchg
ret
mov
je
ret
pop
int3
pusha
ljmp
test
fcomip
iret
or
jecxz
push
cwtl
and
test
push
push
mov
sbb
jbe
sahf
sbb
loop
lcall
jp
sar
pop
xor
aas
mov
adc
flds
mov
mov
jo
or
and
inc
icebp
lret
mov
push
jae
xor
stos
add
push
mov
inc
dec
arpl
pop
inc
pop
inc
arpl
sbb
addr16
xchg
cmp
push
mov
filds
or
pop
bound
aam
dec
mov
mov
and
or
add
les
jns
repz
sub
pushf
and
lods
pop
or
jae
iret
je
es
sub
pop
dec
std
fsubl
es
in
sbb
pop
ja
mov
in
xor
ja
imul
dec
jne
fdivrs
imul
or
jp
std
mov
icebp
cmpsb
or
jmp
mov
cmpsb
popa
call
dec
mov
pop
inc
and
inc
xlat
or
mov
or
xlat
fisttps
lods
or
mov
testb
jl
push
jp
call
mov
and
dec
clc
xcrypt-cfb
cmpsl
pop
sub
dec
out
or
mov
pop
xchg
in
dec
ret
iret
lret
sbb
int
and
adc
test
push
push
aam
dec
push
or
push
inc
mul
lret
jns
mov
sti
repnz
pushf
call
ds
sbb
out
jo
add
adc
dec
mov
pop
mov
aaa
mov
movsl
fistpll
lret
ss
lock
xor
and
popf
mov
or
mov
xchg
add
jne
mov
testl
xlat
xchg
jbe
adc
cld
fcomps
nop
adc
in
mov
in
dec
mov
imul
cmp
ljmp
shlb
out
lds
mov
insl
mov
add
loope
jnp
in
xor
addr16
xchg
out
push
or
or
mov
mov
inc
cli
sbb
shr
icebp
jae
adc
sbb
ss
jnp
fs
ret
inc
xor
sahf
and
xchg
pop
jge
sub
je
mov
jle
imulb
dec
and
xor
mov
sbb
xchg
mov
and
inc
mov
jge
data16
jb
sub
mov
xchg
cmpsl
cmp
out
inc
dec
fs
ljmp
jne
push
xchg
push
inc
mov
andb
ds
sbb
mov
cmpl
push
call
leave
dec
repnz
xchg
add
mov
stc
dec
rclb
pop
add
pop
add
cli
cmpsl
inc
das
and
scas
sti
mov
push
and
fidivl
pop
repz
into
mov
insl
or
scas
into
dec
aam
cwtl
xchg
scas
cltd
xchg
lret
sbbl
repz
cmpsl
out
add
or
or
push
fwait
cs
dec
loop
push
sbb
movsl
movsb
in
repnz
pop
leave
inc
cmp
sbb
stos
shll
cmpsl
dec
mov
jns
ss
cli
inc
dec
dec
pop
fmull
push
lods
icebp
cmp
lods
mov
pushf
dec
sub
pop
and
jl
scas
add
dec
in
enter
lds
loopne
adc
lret
xchg
ret
mov
jp
push
insb
mov
enter
stos
stc
ss
popf
cmp
or
shll
inc
sub
jne
jge
inc
cltd
iret
jmp
test
fcomip
mov
and
stos
mov
mov
lods
std
aaa
xor
mov
shrb
out
inc
sbb
lahf
mov
inc
imul
enter
aad
or
pop
xchg
nop
int
stc
push
lea
xlat
mov
and
mov
jo
add
jmp
mov
sub
dec
xchg
and
adc
pushf
push
add
xchg
xor
gs
sub
pop
mov
push
fs
divl
into
push
xchg
int
test
lea
and
sbb
movsl
xchg
sbb
push
dec
pusha
stc
add
jno
movsl
or
push
repnz
sub
jecxz
jnp
fisttpl
loopne
icebp
hlt
jge
jle
and
out
pop
mov
xchg
inc
daa
dec
push
int3
enter
imul
loope
pop
subb
inc
inc
mov
sub
pushf
pop
pop
xchg
ljmp
adc
mov
and
sub
addr16
adc
mov
lds
daa
loop
int
bound
movsl
fadds
pop
adc
test
stos
notl
fists
jne
dec
outsl
or
mov
test
decl
fnstsw
scas
mov
xor
stc
cmp
outsb
aam
mov
pmulhuw
xchg
scas
into
imul
test
pop
sub
insb
sbb
rclb
add
clc
xor
lock
insl
xor
insb
xchg
lret
aaa
xchg
mov
mov
or
in
dec
sub
push
imul
aad
cwtl
cld
lret
push
mov
rep
jae
xchg
das
fsubrs
and
fmuls
in
adc
cmpsb
sbb
pop
xor
insb
jns
addr16
sbb
lea
push
sub
data16
aad
push
pop
ds
mov
std
into
and
enter
flds
jbe
mov
stos
inc
fcoms
ret
mov
stos
pop
push
jo
das
xchg
or
inc
sbb
ret
push
jo
ja
fdivrp
idiv
insb
jnp
stos
es
adc
es
cmp
loop
rcll
xor
sahf
cmp
xchg
sub
inc
xchg
ljmp
enter
ja
xchg
xchg
pop
pop
das
aas
ja
out
leave
jb
xchg
jb
shl
ja
jno
fwait
into
inc
lret
xchg
aaa
mov
addb
add
sti
in
fwait
jb
mov
sub
popa
out
ucomiss
sub
xchg
int3
mov
push
roll
sbb
subl
loope
or
inc
adc
shl
dec
mov
cmpsl
sbb
jmp
xchg
cmp
daa
inc
loop
jmp
inc
push
cmc
sbb
xor
push
mov
cmpsl
lock
xchg
and
inc
addl
xchg
movsl
leave
icebp
inc
clc
push
adc
inc
inc
aad
jb
xchg
mov
inc
mov
pop
mov
xchg
sub
xor
or
add
in
inc
lret
adc
loopne
mov
xchg
sbb
mov
in
add
scas
xor
and
test
popa
mov
fs
cwtl
add
adc
mov
push
xor
adc
mov
aam
je
sub
je
int3
insl
add
mov
enter
pushf
or
aaa
daa
ror
pop
jnp
pop
dec
adcl
enter
cmp
arpl
sbb
notl
inc
out
push
sbb
in
inc
addb
dec
stc
mov
imul
mov
test
sbb
and
xchg
repz
pop
addr16
cmp
mov
icebp
jmp
xchg
add
jle
rorl
push
xlat
xorl
cmp
or
bound
test
add
insb
or
lods
mov
pop
mov
aad
mov
mov
fdivrl
iret
das
and
cmp
add
outsb
mov
inc
pop
leave
lahf
pop
mov
lds
test
test
pop
and
lcall
mov
ret
cli
xchg
lahf
dec
les
jbe
jge
inc
out
lods
mov
push
ret
jmp
push
ficoml
repnz
sub
xlat
add
push
ja
mov
daa
xor
inc
jne
add
test
std
mov
cld
js
dec
call
sbb
nop
and
sbb
fwait
fs
push
sbb
daa
xchg
insl
aas
and
dec
ficoms
ficomps
mov
mov
and
and
lret
out
push
inc
cltd
je
add
inc
in
mov
pushf
sahf
adc
dec
ret
adc
xchg
mov
loope
xor
push
nop
fdivrl
add
or
or
aam
sub
mov
lea
pop
dec
add
insl
cmc
push
xor
fldl
xchg
icebp
fidivrl
jae
fstl
shlb
clc
pop
or
or
and
push
icebp
mov
outsl
fstpl
mov
pop
inc
jae
cwtl
das
sub
loope
cwtl
cmp
enter
popl
cmp
in
and
push
loope
mov
inc
movsl
out
std
aad
inc
jne
sbb
mov
add
sub
xor
repnz
mov
loope
js
out
cmp
dec
shlb
or
rorl
sub
dec
xorb
cmpsl
rcll
or
jp
nop
and
adc
lock
mov
adc
mov
mov
aad
std
jne
push
in
shrl
dec
pop
xchg
enter
add
fsts
psubb
lcall
mov
out
cmpsb
test
movsb
mov
xor
mov
mov
push
int
xlat
dec
nop
xchg
dec
push
aad
fwait
pushl
sbb
scas
push
mov
push
dec
sub
fistps
mov
lahf
pop
imul
xor
mov
out
sub
je
push
pushf
mov
mov
xchg
mov
pop
inc
jae
lret
dec
in
insl
rcr
push
pop
adcb
xchg
loopne
jge
pop
stos
fs
incb
push
push
mov
pop
pop
int
adc
jle
add
push
das
pop
mov
ret
lds
outsb
jle
lods
add
loopne
add
movsl
into
rcrb
sub
pop
iret
out
fbld
sbb
mov
popf
dec
and
mov
mov
fidivs
loop
lret
js
mov
hlt
fs
insb
and
in
subb
mov
call
add
add
mov
aas
or
sub
clc
jae
shrl
xor
dec
mov
insl
and
push
flds
mov
dec
ds
shll
mov
fs
sub
cmovne
lahf
aas
mov
pop
js
ret
xchg
insb
rol
mov
cmp
jns
test
mov
sbb
and
jmp
test
push
shll
std
and
bound
repnz
jnp
xor
sub
imul
sub
xorb
add
scas
cld
cmp
jbe
mov
dec
xor
add
inc
pop
inc
or
and
subb
mov
and
dec
loope
adc
cmp
mov
insl
xchg
xor
xchg
xor
mov
lock
jmp
data16
int3
fbstp
rcl
ret
sbb
aad
fisubrl
in
push
mov
xchg
inc
pop
test
lock
js
push
jb
cmpsl
or
or
push
shlb
sbb
int3
adc
xor
cs
les
out
pop
ja
sbb
or
mov
cmp
sub
fcomip
xchg
ret
push
jle
inc
add
adc
movsb
xchg
mov
mov
dec
mov
das
or
outsl
dec
sbbb
xor
lahf
adc
imul
pop
jecxz
push
sbb
inc
das
jmp
incb
cmp
xchg
mov
jg
jb
lods
inc
sahf
jnp
add
pop
andb
ret
rorb
lahf
in
xchg
or
movsb
xchg
in
shlb
mov
repnz
addr16
int
ficompl
cmc
into
lahf
mov
xchg
imul
xchg
inc
outsb
jl
inc
push
lds
testl
data16
nop
xchg
arpl
pop
sbb
mov
ja
mov
leave
mov
gs
cmp
mov
jbe
xlat
add
sub
push
sbb
jnp
xchg
mov
push
jecxz
lcall
sub
mov
pop
adc
mov
cmp
out
dec
push
push
add
mov
cmpsl
rorl
jo
out
cltd
or
xor
or
mov
arpl
and
xor
and
xchg
mov
push
or
ds
pop
pushf
scas
jae
mov
aas
mov
push
ja
xor
out
sub
test
push
icebp
mov
imul
and
test
aam
js
mov
jns
js
aam
inc
aam
cld
fcompl
sarb
inc
fsubr
lock
mov
cmp
scas
jl
mov
das
mov
jno
movsb
and
rclb
test
int
int
jp
add
xchg
push
pop
jae
mov
xor
insl
test
sahf
je
sbb
lds
adc
push
cwtl
sbb
pop
mov
mov
insb
outsl
movsl
inc
scas
roll
pushf
inc
pop
cwtl
mov
mov
push
call
mov
xchg
cmp
and
out
and
or
mov
fs
lds
cmpb
xchg
dec
xlat
add
outsb
adc
cmp
mov
pop
push
insb
fxch
and
and
mov
fwait
lcall
xor
adc
mov
js
in
mov
mov
add
and
rclb
lods
jg
enter
rol
pop
cmc
pop
repnz
xchg
je
mov
adc
lcall
cmpsl
push
pop
cmp
int
jbe
cmp
loopne
lcall
imul
jmp
fmuls
mulb
dec
cltd
fsts
xchg
push
adc
mov
fstl
mov
adc
jo
icebp
xchg
mov
mov
daa
jmp
repnz
out
rcll
fwait
xor
mov
hlt
int3
sbb
cli
enter
push
cmpsl
out
sbb
jnp
pusha
notl
daa
cs
pop
andb
pushf
stos
sbb
mov
jp
aam
loop
rdtsc
xchg
dec
mov
cld
mull
mov
out
rol
jbe
or
data16
dec
lahf
cmp
roll
pop
imul
inc
xchg
add
iret
int3
inc
sub
xlat
rcrl
push
aam
push
jns
lret
testl
aas
pop
lret
push
xchg
cmc
cmp
mov
inc
or
outsb
test
daa
sub
mov
leave
out
out
xchg
or
sub
and
out
inc
call
cmp
mov
fsubrp
mov
daa
sbb
out
popf
jo
mov
mov
data16
jp
addr16
cmp
popf
jle
xchg
jmp
call
scas
notl
lret
mov
mov
ret
fsubr
add
mov
xor
sbb
inc
in
or
jno
push
fisttpll
lret
inc
stos
scas
xchg
push
mov
sub
jb
push
pop
pusha
cmpsl
pop
loop
and
cwtl
clc
xchg
pushf
dec
into
sarb
push
xchg
das
cmp
xor
loope
inc
adc
dec
lcall
addr16
pop
inc
test
sti
pop
cwtl
mov
push
nop
pop
push
cli
pop
adc
inc
cs
jp
cmpsb
inc
xlat
inc
test
mov
mov
push
cmp
fwait
test
in
stc
out
adc
lds
or
jns
stos
pusha
sub
pop
divb
lea
fisubrl
or
aad
pusha
clc
mov
adc
sti
int3
fldenv
pop
jne
push
xchg
xchg
les
xchg
cld
rcrl
pop
or
fwait
adc
movsl
addr16
inc
inc
cmpsb
imul
ss
daa
inc
cmp
stos
push
imull
test
mov
push
lods
stc
cwtl
mov
sub
sub
xor
or
andl
addb
jg
faddl
out
cmp
xor
repz
sub
sbb
xor
les
sbb
ret
fstpl
idivb
and
mov
push
mov
xor
cmp
call
mov
lds
and
and
out
ja
das
ret
mov
add
mov
pushf
test
inc
pusha
push
iret
insl
xorl
test
xor
pop
outsb
clc
jl
mov
mov
jno
fisubl
adc
aam
mull
ret
add
mov
roll
or
shlb
and
sub
adc
test
push
and
arpl
and
xchg
lods
xor
out
out
lcall
sbb
fwait
sbbl
inc
mov
popf
fisubl
in
dec
jns
decl
out
sub
dec
dec
addl
mov
mov
sub
mov
pusha
jl
cltd
cltd
jne
cld
popa
repnz
gs
pop
push
xchg
mov
sarb
shrl
lock
jl
dec
add
cmpl
imul
inc
jge
mov
arpl
out
mov
push
xchg
daa
fmull
push
inc
in
add
fs
inc
mov
sbb
in
jg
pusha
lret
cmpsl
and
add
push
fiaddl
sbb
cli
ret
adc
xchg
inc
fs
dec
jmp
std
push
sub
stc
adc
pop
and
inc
out
jb
pop
jle
adc
mov
cmp
xor
sbb
lods
adc
inc
pop
in
sub
inc
cmpsb
or
dec
or
inc
ret
mov
push
inc
lcall
popf
pop
stc
cmpsl
in
jmp
push
imul
adc
pop
in
je
push
xor
sbb
mov
or
lea
rolb
push
out
addb
icebp
stc
aas
dec
aad
ljmp
dec
sbb
lret
sti
in
insb
arpl
jmp
scas
fiaddl
inc
adc
jb
jb
in
xor
jae
in
lcall
mov
inc
push
xchg
pop
es
roll
xchg
jne
mov
dec
cmpsl
push
mov
out
cwtl
fisubl
inc
cld
sbb
repz
aam
test
aad
dec
loop
sub
es
loop
sti
cwtl
jns
lret
in
sbb
flds
ds
push
out
cmp
sub
fcoml
addb
jmp
jge
pop
ret
rorb
pop
lret
test
inc
xchg
xchg
pop
sub
add
and
fldenv
mov
pop
test
fsubs
add
cld
or
adc
icebp
or
jbe
das
scas
pop
in
cmp
sarb
fwait
sub
add
jno
test
test
lret
inc
and
gs
arpl
daa
fdivp
mov
or
into
icebp
xchg
mov
or
push
push
push
call
pop
sub
xchg
add
rcl
outsb
pop
clc
fwait
nop
aaa
or
jnp
ficompl
imul
pusha
push
rorb
push
jae
inc
pop
aad
and
outsb
sbb
mov
push
mov
pop
das
push
inc
sbb
popf
inc
pop
jbe
and
fldenv
dec
mov
adc
jmp
clc
inc
pop
fstpl
ret
rcll
pop
xorb
mov
ljmp
int3
pop
sub
sarl
lret
push
dec
in
pop
add
arpl
loopne
fdivrs
mov
dec
mov
fnstsw
and
rcrb
push
fstl
insl
mov
push
adc
fidivrl
in
das
rcrb
das
cmc
mov
pop
or
push
popa
notb
push
mov
popf
sahf
dec
shrl
cmpsl
jae
movsb
jno
xlat
fmull
mov
in
push
cmc
popf
and
sarb
push
mov
loop
loop
es
insl
shlb
les
loope
lds
test
cs
or
cmp
call
xchg
xchg
sub
push
movsb
ficoml
mov
push
sub
ja
repnz
bound
test
addl
xchg
cmp
icebp
pop
jae
pop
ljmp
enter
lock
mov
lahf
repz
sub
fiaddl
aaa
dec
leave
aaa
inc
stc
sbb
inc
jge
and
inc
sbb
stc
in
push
xchg
jae
dec
adc
adc
sbb
inc
iret
xchg
adc
andl
push
icebp
pop
sbb
inc
or
lret
sbb
or
adc
sbb
fbstp
or
or
mov
sub
mov
mov
out
and
or
push
insb
cli
mov
out
pop
jl
mov
xor
pusha
ret
add
test
pop
enter
xchg
movsl
popa
mov
ret
cwtl
pop
jge
sub
lret
into
loope
lods
jle
sbb
mul
cmp
lret
test
inc
or
add
or
insb
aam
mov
mov
fbld
sub
shl
lods
in
mov
out
cmp
popf
shr
xor
jecxz
adc
outsb
leave
xor
cmp
lret
jnp
int3
arpl
adc
sbb
pop
sbb
je
xchg
loop
adc
mov
cld
sub
test
sbb
scas
adc
int
decl
clc
call
push
jmp
movsl
bound
and
hlt
sti
push
mov
in
and
lods
xchg
jmp
dec
dec
adc
mov
sahf
xchg
mov
addr16
sub
insl
stos
pushf
sub
cmp
mull
dec
hlt
mov
testl
cld
xor
push
inc
cmp
in
jno
repz
hlt
mov
in
xor
pop
jb
or
fs
push
sbb
rcrb
xlat
out
mov
popf
inc
jno
lahf
out
test
xor
insl
repnz
pop
or
lcall
mov
into
test
popf
and
mov
push
ffreep
mov
aad
out
xor
xor
repnz
ja
jnp
test
push
test
lods
cmp
dec
outsl
sub
pop
idivl
adc
mov
in
ja
pop
addr16
cs
outsl
sbb
pop
jge
jl
inc
pop
into
cmp
mov
loop
mov
lea
jge
inc
inc
out
or
in
daa
dec
decl
dec
xor
and
inc
jnp
idiv
adc
xlat
sahf
ljmp
out
pushf
xlat
inc
adc
add
sub
push
in
into
into
push
test
notb
jnp
push
push
pop
jmp
and
mov
mov
fstpt
addr16
lahf
cli
add
or
push
jp
jbe
cmp
imul
xor
xchg
outsb
or
xchg
push
fisubs
and
repz
mov
push
call
aas
jle
movsb
call
fdivr
or
stos
xor
jmp
xchg
xchg
enter
test
adc
insb
lds
or
mov
gs
or
enter
push
mov
cmpsb
or
jecxz
cmp
fstp
jbe
push
ss
push
ljmp
ss
pusha
xchg
fcoml
push
or
mov
and
or
mov
pop
nop
cmp
ret
mov
jg
jo
mov
mov
xchg
jp
jg
mov
push
add
enter
dec
stos
lods
cmp
cmp
cltd
mov
push
jo
call
movsb
repz
hlt
sub
cmp
cli
jg
fstps
stos
and
xchg
das
mov
and
xor
insb
rolb
test
outsb
dec
xor
push
sbb
mov
pop
push
in
cmp
mov
int3
inc
test
or
xor
subl
jns
mov
repz
lds
flds
and
cmp
jl
mov
and
movsl
cmp
add
aam
xor
cltd
sub
sbb
mov
jb
xor
mov
dec
mov
in
and
gs
mov
jb
cs
xor
xchg
dec
lcall
pop
lahf
lret
fistpl
bound
rorb
push
push
mov
pop
push
out
sub
mul
dec
and
xor
cmp
sub
pop
or
roll
or
inc
ja
js
mov
aam
lea
int
cmpb
shll
jl
mov
setle
shrl
jecxz
imul
test
dec
push
popa
or
shrb
fimull
clc
out
subb
xchg
xchg
adc
push
pop
pop
imul
push
mov
cwtl
dec
xchg
cmp
int
sti
out
lods
dec
jmp
jle
les
repnz
inc
out
pusha
shr
inc
sbb
xchg
daa
int3
sbb
sub
popf
cmp
xlat
lret
adcb
mov
test
lahf
lds
sub
sahf
cmp
cld
int3
xlat
movsb
stos
insl
inc
adc
cwtl
or
adc
mov
push
out
call
jge
xchg
test
in
jnp
cmpsb
ret
mov
dec
insb
fcoml
and
sbb
mov
stc
pop
mov
push
test
loope
push
sub
loop
arpl
rorl
imul
es
fists
jae
ljmp
test
test
shr
inc
push
in
mov
adc
les
xor
fistpl
fimull
icebp
cli
pusha
mov
in
loop
lds
addr16
das
inc
das
xlat
cli
pop
mov
leave
sbb
jno
repz
mov
ror
in
loope
in
pop
daa
push
pop
int3
push
sahf
sbb
mov
cltd
and
and
loopne
xlat
mov
mov
fwait
jb
js
cltd
in
pause
mov
lods
scas
fdivr
test
shlb
dec
loopne
xor
in
or
popf
shll
ja
dec
mov
sbb
or
ds
les
push
xor
test
call
jns
iret
mov
push
dec
mov
dec
add
add
gs
jp
inc
icebp
xchg
fs
sub
sub
mov
pushf
fisubl
pushf
in
fldt
adc
sbb
pop
aam
arpl
rorb
add
adc
call
gs
pop
push
fadd
out
pop
vpunpckhqdq
push
push
push
mov
popa
add
add
sub
push
fwait
cmpsl
je
sbb
cwtl
mov
sbb
addb
stos
test
shlb
mov
and
stc
inc
shrb
and
outsb
jl
fs
jbe
rcll
loope
dec
mov
pusha
insb
mov
test
jecxz
xchg
jne
loopne
xchg
sub
fidivl
mov
sub
int3
stos
repnz
shll
in
xor
out
xchg
movsl
inc
ret
and
fmuls
fwait
push
jecxz
js
and
dec
pop
lcall
fldl
push
dec
cld
adc
ss
int
inc
inc
jbe
pop
xchg
call
fs
push
xchg
pop
dec
in
xor
adc
icebp
mov
lds
sti
ret
sub
jo
dec
aam
data16
xchg
icebp
rorb
je
sbb
sbb
shll
adc
sbb
xor
cltd
or
movsl
scas
xchg
push
jp
inc
mov
icebp
loopne
mov
jne
push
xlat
ret
jecxz
outsb
xlat
into
mov
mov
call
cmpsl
stos
sub
sbb
scas
cmp
mov
mov
jl
cmpsb
dec
push
mov
loope
cmp
addb
adc
adc
mov
lret
and
push
cmp
or
cmp
je
inc
mov
mov
mov
dec
lock
xchg
insb
out
and
push
mov
gs
cmp
stos
cs
cmp
mov
arpl
cmp
sarl
adc
push
cmpsl
std
mov
mov
or
fcomi
jbe
aaa
and
adc
dec
sub
arpl
jl
out
xchg
fimull
idivb
negb
lret
xchg
pop
cmp
neg
jp
loopne
cmpsb
out
rolb
add
cs
sbbl
cli
sbb
sarl
fisubs
or
jl
xor
imul
cmp
shrb
mov
cmp
movsb
lods
pushf
test
jp
push
cwtl
clc
lcall
mov
aad
pop
cmpsl
push
jnp,pt
adc
xchg
fists
fisubrs
rclb
stos
test
mov
scas
jmp
loopne
jmp
out
adcl
push
outsl
mov
add
push
lret
push
and
add
lock
sbb
mov
lret
sbb
sbb
outsb
out
mov
and
mov
jno
bound
shrb
xchg
in
jnp
pusha
test
push
aad
jle
icebp
dec
loopne
xchg
loopne
or
cmp
cs
pop
inc
insl
cli
ret
fbld
aas
xor
mov
call
pop
out
mov
andl
dec
pop
lcall
xchg
movsb
cmp
stos
ficomps
pop
scas
push
rclb
xor
inc
sub
cwtl
cmp
mov
mov
lds
mov
insl
jge
inc
popa
sub
fsubrp
rclb
adc
xor
loope
cmp
push
mov
imul
jno
fs
mov
or
addb
fcoms
in
and
cmp
add
mov
xchg
push
imul
push
js
mov
push
xor
lods
addl
cwtl
loope
outsl
pop
fcmovnb
adc
aas
and
mov
jg
and
jg
fdivrs
add
stc
sbb
fst
mov
aaa
jmp
in
push
jae
xchg
fucom
inc
ret
and
push
inc
leave
mov
jecxz
cmp
inc
in
push
js
xor
pop
das
inc
dec
mov
out
inc
or
dec
add
and
cmp
pop
jno
enter
mov
sub
lahf
cs
rcrb
addr16
ret
fnstsw
ja
sarb
stc
sbb
bound
fildll
xor
xchg
mov
jp
mov
add
aad
scas
inc
repnz
cmc
dec
pushf
push
mov
jbe
insb
rcll
xchg
push
push
jmp
mov
xor
xchg
or
mov
lret
add
cmp
dec
ss
add
pop
dec
inc
in
rcrl
adc
js
xor
add
mov
pushf
mov
and
pop
fxch
ja
mov
or
loopne
jbe
cltd
mov
js
push
and
inc
pop
cmpsl
out
mov
dec
push
frstor
ficoms
enter
pop
cli
cmpsb
inc
mov
les
bound
repz
arpl
pminsw
stos
popa
adc
sub
sbb
pop
lret
enter
cld
test
cmp
repz
push
add
sub
cmpsl
xchg
jne
insb
adc
enter
lahf
shll
psrlq
dec
rep
rorb
out
ljmp
and
mov
pop
int
iret
hlt
dec
xor
add
adc
push
jle
ja
addr16
mov
cmpsb
mov
mov
pop
push
iret
test
shl
test
jle
mov
roll
xlat
xchg
mov
cwtl
xchg
ljmp
mov
pop
adc
sub
push
jmp
test
jo
add
jno
sub
js
mov
mov
lock
cmp
into
sbb
repnz
nop
ret
pop
sar
decl
add
mov
das
xlat
fsubrs
movsl
lret
xlat
std
ret
adc
imul
mov
sbb
push
adc
add
pop
out
ja
or
xchg
adc
mov
ds
repz
std
push
xor
sbb
inc
stos
hlt
dec
or
push
lahf
mov
das
lock
sbb
or
ret
movsb
mov
setne
rcrl
xor
mov
outsl
arpl
add
lock
mov
int
pop
int3
ret
or
outsb
add
test
cmc
in
shll
add
xor
movsb
idivb
jns
arpl
push
into
xchg
xchg
cmp
adc
sbb
popf
pop
push
xchg
inc
aad
cmpl
std
mov
pop
lcall
icebp
in
and
lahf
mov
test
fcmove
xor
jae
pop
inc
jl
inc
xor
jne
shll
cld
aas
gs
xor
jmp
insl
sub
sahf
int
push
mov
mov
neg
adc
push
xchg
adc
cwtl
sub
js
or
jge
mov
and
adc
dec
mov
lods
mov
cwtl
push
mov
sti
or
xor
jg
aas
mov
xorl
push
lret
lods
stos
add
push
aas
add
xor
xor
push
dec
aaa
test
js
adc
mov
cmp
movsl
pop
push
ret
adcl
dec
push
int
les
leave
pop
ficoml
xchg
jge
lods
lahf
aad
dec
je
xor
cltd
xor
out
push
roll
xchg
jp
arpl
push
push
inc
add
jecxz
push
std
mov
jmp
fdivs
xchg
addr16
sub
push
cmp
test
sbb
mov
mov
xor
adc
sbb
mov
in
fs
ljmp
pop
pushf
jne
cmp
add
clc
fcmove
sbb
ror
mov
jp
jno
std
test
sub
mov
loope
pop
mov
add
lock
test
sbb
mov
cmpsb
add
ja
jb
mov
pop
lods
lcall
push
xor
lds
push
cld
lods
cs
mov
push
les
test
out
pop
decb
test
lea
out
pop
pusha
cmpsb
sub
xor
loope
pop
imulb
xchg
adc
adc
mov
sub
lcall
shl
out
cs
sub
mov
cmp
xor
sbb
ljmp
xchg
pop
jp
lods
sub
movsb
aas
sub
leave
ja
aad
jg
fcomps
inc
negl
sbb
mov
test
cmp
xor
aad
daa
leave
pop
rorb
in
adc
jle
jb
decl
in
hlt
in
cmp
cli
cmc
sub
dec
int3
pop
mov
mov
testb
rorl
movsl
cmp
add
sub
or
lds
nop
aad
icebp
aaa
sar
in
fcmovb
aam
xchg
push
mov
add
test
negb
out
imul
dec
pop
in
pusha
inc
xor
rcll
adc
outsl
cmp
jg
fstpl
sbb
adc
mov
ret
sbb
xor
insl
mov
daa
lcall
mov
sbb
push
mov
and
xchg
sub
data16
bound
fcoml
or
or
popa
inc
daa
sbb
push
pop
xor
rcrb
mov
out
loope
or
jle
lret
pop
and
dec
dec
mov
out
mov
adc
or
das
icebp
sbb
andl
mov
adc
sub
test
adcl
aam
push
xchg
and
cmpsb
jb
ds
ret
lds
ds
xchg
popf
ret
sbb
dec
aas
test
lahf
mov
ror
mov
mov
movsl
dec
or
das
sbb
pop
and
xor
xor
into
test
or
jmp
push
mov
pop
int3
sbb
xabort
shlb
push
iret
test
xor
fsubrs
insb
arpl
xor
shl
and
xor
pop
fcomip
cmp
inc
movl
aam
lods
aaa
xchg
leave
jecxz
mov
popf
cli
cwtl
aam
jge
mov
jmp
cmovns
mov
cmc
mov
add
inc
sub
pop
fldcw
jnp
push
popa
popf
daa
arpl
cmp
mov
enter
push
or
int
sub
dec
jo
test
xor
test
push
and
fwait
sbb
push
mov
cmc
outsb
aam
jp
jmp
sub
inc
lods
sbb
cmp
mov
push
enter
mov
jb
js
mov
pop
xor
jecxz
test
in
dec
push
or
ret
dec
mov
jg
pusha
cmp
inc
cmpsb
mov
test
roll
mov
scas
imul
jmp
xchg
fstps
pop
les
mov
mov
daa
imul
cltd
lcall
loopne
ds
rcrb
stos
loope
cmp
push
push
adc
mov
ret
mov
loope
es
andb
cmc
mov
mov
in
xchg
jge
xor
in
out
out
adc
imul
xchg
roll
push
sub
insb
inc
mov
scas
sub
jno
sbb
mov
pop
and
mov
pop
jns
jge
lret
jl
notl
jg
aas
push
inc
movl
add
xor
inc
aad
test
popf
cwtl
cli
repz
push
mov
jne
mov
inc
mov
sub
repnz
out
out
aaa
jne
enter
inc
aad
in
insl
out
fidivrl
or
xlat
pop
pusha
aad
int3
jecxz
fnsave
mov
int3
mov
sub
lret
ficompl
test
and
mov
aam
xor
mov
out
jbe
out
mov
insl
lods
imul
fsts
xchg
add
enter
push
add
data16
imul
rcr
out
cwtl
outsb
hlt
cld
mov
cltd
retw
mov
ja
add
imul
cwtl
mov
cmpb
mov
pop
rep
dec
std
dec
pop
daa
stc
imul
cmp
cmpsl
mov
das
or
clc
pop
push
mov
jmp
test
dec
sbb
ret
je
xchg
mov
outsl
mov
dec
loopne
int3
je
pop
movsl
sbb
mov
pusha
pop
shrl
out
ss
pop
insl
push
repnz
mov
fwait
jae
sub
int3
mov
jg
lahf
movsb
fnsave
aaa
int
inc
dec
push
xorb
xchg
popa
sub
or
test
mull
fistpll
or
xchg
adc
jb
push
dec
push
sub
addr16
in
pop
xchg
repz
cld
push
mov
in
pusha
insl
or
sbb
dec
je
ret
mov
push
mov
push
pop
xchg
cmp
jns
pop
fidivl
dec
add
xchg
sub
pop
loop
pushf
xchg
push
iret
adc
dec
cmp
int
xor
adc
add
stos
jae
bound
cmp
test
ret
xorl
lock
lock
fstl
or
sbb
mov
lret
mov
xlat
cmpsb
sbb
lds
dec
push
lahf
xchg
leave
mov
scas
lcall
inc
popl
mov
lret
xor
cmp
mov
pop
repnz
xchg
lods
sub
add
pop
fistpll
fs
or
xchg
imul
mov
shl
shl
out
rorl
xor
sub
cmpxchg
icebp
sub
cmpsl
scas
inc
aaa
fbstp
sub
xor
sub
frstor
outsl
loop
push
iret
int3
test
push
imul
inc
aas
cmp
sub
inc
sub
push
fidivrs
addr16
pop
mov
mov
cmp
mov
lret
leave
adc
mov
adc
xchg
jbe
aaa
jl
or
sub
xor
lock
mov
or
fidivrl
dec
ret
mov
outsb
or
subb
push
sahf
jo
jge
or
push
xchg
int3
or
into
xor
inc
hlt
hlt
pop
test
test
shrl
cmc
cmc
inc
fmuls
push
dec
mov
jb
js
std
dec
or
dec
sub
in
sub
movsl
decl
pushf
add
test
dec
pusha
jno
inc
and
imul
add
lret
and
adc
iret
les
adcb
ror
or
pusha
sbb
test
std
pop
ret
adc
imul
pop
mov
and
adc
in
es
aaa
or
add
out
mov
movsb
hlt
mov
or
add
mov
cmp
ret
inc
push
lods
stc
fistpl
sub
and
in
cmp
sbb
push
fidivrl
jle
jno
mov
int
lahf
adc
and
mov
andl
mov
add
mov
mov
mov
aam
cltd
lahf
pusha
imul
cmpsl
fiaddl
lcall
mov
mov
inc
push
ja
out
jne
inc
jae
frstor
arpl
inc
push
pop
scas
cmp
repz
lret
out
xchg
and
cwtl
ss
or
scas
mov
daa
stos
arpl
into
mov
xor
xchg
push
test
mov
test
or
fmul
fdivs
jne
jns
hlt
xor
mov
cmc
iret
mov
or
mov
cmp
pop
cmpsb
or
mov
aad
pop
pop
ljmp
xchg
inc
mov
sbb
cli
pop
inc
or
xchg
add
mov
xor
inc
mov
cmp
jbe
int3
inc
and
xchg
inc
add
adc
ss
sbb
push
ret
fdivrl
push
push
jae
dec
insl
imul
scas
negb
push
imul
mov
dec
subl
lods
stos
test
jb
push
xchg
push
ljmp
push
fisttpl
jl
xchg
inc
pop
xor
jo
adc
add
push
fstpt
add
jl
mov
cmp
sub
and
and
push
mov
adc
or
fs
adcl
aad
jmp
sbb
fsubs
dec
in
and
add
mov
cmpsb
add
adc
loopnew
lahf
cmp
lods
es
lock
adc
jo
push
add
mov
mov
cmp
add
or
test
movsl
xchg
adc
out
sahf
pop
cmpl
mov
mov
mov
cmpsl
push
out
xor
jl
push
dec
hlt
or
daa
in
out
iret
jne
mov
int3
inc
insb
icebp
mov
pop
lods
pop
inc
jno
in
in
movsl
mov
arpl
and
cli
or
inc
fsubrl
inc
les
in
test
in
subl
xchg
imul
or
mul
sbb
in
sbb
lea
vphaddwd
add
aas
lods
and
mov
adc
nop
push
and
enter
mov
jge
dec
leave
add
shll
cmp
sub
mov
jge
mov
fnsave
xor
xor
lds
mov
dec
leave
sub
pop
mov
xchg
popa
lcall
shl
sbb
loopne
jns
mov
aas
pavgw
pop
lret
leave
jo
outsl
aad
add
sbb
hlt
out
call
daa
cwtl
jl
xchg
mov
adc
cmp
or
mov
aaa
mov
clc
add
jb
jae
aaa
jle
lcall
jne
addr16
xchg
fwait
mov
sub
shl
aas
sahf
loope
iret
call
and
gs
rcrb
loope
out
notb
jp
push
and
and
test
cs
add
insl
rclb
push
sbbb
push
xlat
pop
mov
sub
jge
xchg
sub
xchg
push
xchg
xchg
fs
mov
xchg
lret
in
out
lcall
mov
jnp
test
mov
out
imul
sahf
out
das
filds
mov
fs
xor
mov
aaa
xchg
ss
ret
sahf
repnz
add
pop
mov
sub
cmpsl
or
shrb
cmp
dec
add
mov
cltd
adc
aam
aaa
fwait
and
daa
jns
stos
jae
in
jbe
mov
push
in
test
fisttps
fnstenv
add
cltd
mov
icebp
pop
es
outsb
outsl
adc
data16
test
pop
insl
add
popf
jecxz
xor
jnp
xor
add
cld
inc
repnz
pop
dec
sbb
add
movsb
dec
mov
sarb
and
xor
dec
pop
pop
lds
inc
pop
clc
lds
icebp
pop
outsb
ret
cs
imul
jo
jns
test
das
shlb
mov
add
dec
inc
je
in
dec
xchg
ja
incb
xlat
stc
fcmovb
sarl
lahf
sub
mull
inc
sub
loop
inc
pop
scas
mov
sub
pop
adc
xchg
add
clc
jbe
add
imul
push
pop
and
in
ja
rcrb
or
pop
scas
dec
aam
push
mov
or
add
ljmp
addr16
lods
pop
xchg
mov
jle
incb
sarl
daa
ds
cmpsb
xor
mov
mov
testl
fsts
mov
in
push
lea
test
daa
inc
sbb
imul
adc
add
les
and
decl
adc
xchg
pop
scas
fisubrs
mov
jecxz
repnz
clc
ljmp
sub
mov
dec
pop
dec
mov
pop
paddusb
loopne
and
cmp
fsubrp
push
lret
mov
push
fcmovnb
ss
in
aas
mov
mov
lea
mov
xor
fwait
sub
dec
sahf
add
js
subb
sub
lcall
ret
inc
call
cli
bound
sbb
mov
hlt
shrb
jmp
push
ljmp
fiadds
stos
lahf
test
dec
inc
pop
data16
push
test
pop
bound
insl
mov
xlat
jle
orl
xor
jno
push
dec
and
popa
mov
inc
dec
dec
adc
fistpll
stos
jnp
lret
inc
push
sbb
or
cmp
jns
lahf
ficomps
cmp
mov
mov
xchg
push
pop
insl
mov
and
ja
pop
scas
sub
in
mov
fidivs
jbe
mov
das
out
jnp
mov
push
sub
rcll
test
adcb
loop
int
aam
leave
sub
push
int
shlb
mov
fmuls
lcall
adc
jnp
inc
add
stos
pop
hlt
mov
cwtl
scas
js
jp
sub
stos
mov
aad
jo
sbb
add
int
pop
add
and
dec
mov
int
pop
adc
aas
pop
sarl
mov
jge
sbb
pop
loope
jbe
add
daa
sbb
xor
shrb
and
cmp
inc
movb
cmp
cmp
iret
fwait
into
stc
iret
testb
nop
enter
lods
mov
gs
ljmp
push
ret
xchg
cmp
or
push
inc
lahf
xlat
bound
into
mov
scas
push
ss
shrl
add
adc
jp
ja
mov
mov
mov
dec
adc
ljmp
out
in
jnp
or
data16
loopne
add
pop
fstpt
popa
xchg
lahf
pop
imulb
sbb
pop
sub
insl
pop
enter
sbb
add
xchg
bound
out
jno
add
fildll
aas
out
and
lret
ret
arpl
enter
jmp
jns
push
cmp
daa
or
xchg
and
jae
iret
loopnew
shlb
pop
in
mov
inc
add
push
mov
aaa
xor
mov
nop
movsb
jmp
xchg
adc
xchg
cmp
dec
push
mov
rcr
jl
rcrl
decb
push
cmp
dec
mov
out
pop
lret
je
lea
int3
pop
xor
stos
repnz
mov
xchg
or
xor
jb
imul
out
testl
ret
sub
and
and
icebp
outsl
cmpsb
xchg
ss
rorb
cltd
fiaddl
or
inc
movsl
imul
bound
xchg
mov
aas
cmp
mov
inc
fildl
lret
mov
out
add
mov
lcall
sbb
addb
pusha
stc
jecxz
movsl
cmp
sbb
out
das
loop
ljmp
imul
sub
insb
mov
xor
mov
mov
add
sub
inc
mov
addr16
mov
in
sbb
int3
insl
andl
idivb
rclb
xchg
movsl
and
adc
fildl
push
bound
lcall
enter
fucom
xor
push
sub
mov
dec
aam
push
and
jge
sub
dec
jnp
dec
jno
popf
mov
or
cs
mov
in
cmpsb
xchg
test
std
in
shll
sub
mov
adc
xor
dec
cmp
rclb
ss
adc
loop
mov
dec
inc
lds
ss
lea
or
dec
movsl
pop
shll
and
mov
push
mov
or
bound
das
jns
jg
push
sahf
lahf
jge
aam
decl
cmpsl
jno
push
xchg
aas
push
sti
sbb
cwtl
mov
push
mov
jnp
lahf
dec
mov
push
pop
les
push
icebp
pop
push
push
fsubl
mov
cmp
les
adc
and
pop
test
add
mov
es
bound
adc
push
xor
loope
mov
cmp
sub
stc
push
jne
in
push
repnz
pop
fildll
out
ret
push
dec
fldenv
loopne
add
sbb
lock
xchg
jl
inc
fwait
sbb
data16
and
fldt
push
out
rcl
hlt
mov
pop
mull
adc
cltd
rol
je,pt
stos
nop/reserved
int3
push
rcrl
scas
fwait
xchg
xchg
mov
push
fsubr
inc
and
subl
xchg
lea
addr16
mov
mov
fwait
mov
mov
jo
inc
add
mov
enter
outsl
pop
addb
das
push
mov
in
hlt
mov
sub
inc
aam
xor
loop
nop
cwtl
lock
inc
xor
ja
test
aas
repz
fnstsw
mov
and
insl
add
ret
imul
mov
xor
popa
cmp
lcall
jp
rcrb
mov
lret
mov
into
sbb
adc
jno
sar
gs
sbb
xor
stmxcsr
nop
lahf
pop
inc
clc
out
rorb
cli
jb
push
imul
lea
cmp
loope
lret
cmp
inc
xchg
insb
frstor
lods
clc
cmp
addr16
rcll
int
fwait
repz
ja
pop
and
cmp
inc
aam
cltd
adc
xorl
inc
lahf
cmp
add
ret
push
mov
sarb
int
daa
push
cld
movsl
xchg
or
pushf
in
xchg
or
xchg
push
insl
call
cmpsb
inc
fs
push
mov
jb
dec
dec
jmp
cmp
test
add
mov
shlb
pop
aas
mov
in
add
pop
sub
add
xchg
cmpsl
inc
mov
testb
sub
push
subb
mov
inc
lea
dec
pushf
fadds
pusha
xchg
fistl
push
and
popf
push
or
inc
sbb
jae
push
cmp
cmp
push
mov
loope
inc
les
xchg
and
xor
out
cmp
and
fdivrl
mov
or
mov
add
es
fdivr
pop
pop
pushf
repnz
jae
sbb
push
mov
aas
push
sbb
xor
sub
push
addl
in
mov
mov
xchg
adc
fneni(8087
fdivrs
fmuls
push
std
test
push
jmp
add
cmp
outsl
sub
inc
inc
and
popa
subb
fldl
notl
ds
sti
mov
mov
jne
xlat
sub
adc
pop
add
adc
xor
aas
jmp
idivl
fdivs
mov
aaa
jae
jp
cli
cmp
xor
lcall
jp
mov
insb
inc
jmp
popa
shll
mov
lcall
adc
push
jle
and
xchg
lea
and
aam
insl
add
out
loopne
rcll
dec
outsl
das
xchg
mov
cwtl
andb
rcll
ret
jp
pushf
sbb
pop
pop
rcll
mov
out
repnz
jmp
loopne
sti
mov
mov
or
mov
sub
lods
adcb
adc
lcall
jge
ja
xor
sub
stos
dec
inc
scas
jnp
mov
cmc
outsl
out
repz
xor
enter
lods
lcall
aaa
sbb
icebp
pop
dec
shll
inc
mov
scas
lea
lods
cld
adc
mov
clc
cmp
cmp
mov
int
cltd
leave
xchg
ja
movsb
lret
int
sbb
fmul
inc
call
mov
jns
cmc
cs
jg
dec
mov
loope
dec
add
add
mov
sbbl
push
mov
xor
test
push
pop
jo
pushf
ffreep
roll
lods
jb
das
jo
cmp
pop
inc
push
jg
inc
mov
addb
mov
mov
mov
out
lret
inc
shll
adcl
out
fs
push
xor
inc
std
cmpsb
scas
pop
pop
push
sub
or
jnp
mov
xorl
dec
pop
sub
and
ret
aas
xor
in
dec
lcall
sti
dec
arpl
add
pop
out
cmp
dec
arpl
cvtps2pi
pop
push
add
lret
test
pop
cld
adc
outsl
in
fcmovnb
and
das
hlt
mov
push
clc
subb
cwtl
fxam
inc
repz
sti
pop
cmpl
sahf
fmul
rcrl
dec
sbb
bound
mov
das
jge
xor
xor
mov
push
pop
popf
stos
add
dec
pop
cmpsb
xlat
xor
mov
icebp
das
sbb
add
fwait
in
xchg
test
xor
inc
shll
ficompl
sbb
add
or
in
mov
pop
sbb
and
lea
pop
jne
jle
xor
out
dec
lock
fistps
or
or
int3
repnz
ja
or
mov
popf
inc
rolb
imul
jnp
mov
in
sub
pop
jo
add
js
mov
mov
addb
jle
sbb
es
inc
sub
add
ljmp
sahf
or
inc
dec
xor
mov
jns
mov
fadd
add
mov
clc
sarb
popf
ffree
mov
mov
ret
fsubp
lods
xchg
icebp
imul
leave
repz
pop
dec
jns
test
jecxz
push
add
repz
mov
push
jne
fiadds
push
mov
jmp
adc
je
dec
in
or
inc
mov
stos
std
fsubrl
test
mov
mov
xchg
lods
fs
movsb
add
data16
into
mov
push
adc
cmp
pop
out
fs
xor
or
outsb
push
add
lods
push
jno
mov
jns
mov
cmp
pop
ss
jmp
xchg
ficomps
or
movsb
or
adc
jbe
mov
mov
stos
sub
push
jmp
inc
je
or
adc
mov
jne
or
jecxz
mov
jne
mov
sub
in
xchg
xchg
inc
lods
test
lcall
xor
sbbb
sahf
add
shll
push
in
mov
mov
ja
out
rorl
xorl
in
xchg
xor
jg
xor
test
xor
lods
inc
add
adc
stos
cltd
cwtl
mov
cltd
loope
push
xchg
popf
cli
add
inc
push
sub
xor
sarb
fidivrl
mov
inc
idivb
add
je
adc
push
sbb
aad
push
movsb
ret
xchg
out
ljmp
mov
fistpl
adc
add
cmp
sbb
rorb
jo
jmp
inc
jmp
mov
fwait
mov
push
int3
adc
push
movsl
dec
inc
pop
shlb
sub
jge
mov
movsl
push
mov
leave
lods
jae
jnp
or
mov
and
inc
insl
cld
push
loop
jmp
cmpsl
fwait
jle
push
outsb
daa
test
cs
int3
xor
adc
sbb
sub
movsb
rcrl
cld
ret
lds
test
mov
ds
sub
and
or
xchg
test
or
fs
mov
rclb
mov
xchg
lods
aad
add
mov
test
insb
push
aaa
dec
movsl
add
and
push
jge
fcomps
out
call
loop
out
test
mov
xchg
shrb
cmp
fsubrl
inc
mov
into
inc
clc
jp
push
cs
cli
xchg
in
dec
loopne
pop
mov
dec
pop
mov
adc
loopne
ret
cmpsl
and
sub
je
jmp
xchg
mov
pop
cmp
and
loopne
inc
in
xor
sub
fadd
mov
pop
fwait
cs
clc
insb
mulb
and
fisubl
lea
in
imul
popf
xchg
xchg
ffree
fcoml
test
jns
ret
sahf
mov
adc
adc
push
addr16
int3
inc
outsl
xchg
fs
movsl
cmpl
sar
xchg
and
cmc
ja
test
and
call
mov
jno
sti
cmpsl
cli
sbb
dec
mov
daa
push
dec
test
popf
dec
mov
jno
outsb
gs
inc
testb
push
popa
imul
mov
jp
repz
push
popa
mov
stc
sbb
mov
repnz
sbb
std
jb
or
je
xor
and
ljmp
xor
lret
adc
xchg
test
xorb
cmc
loop
mov
jne
inc
out
inc
les
js
mov
ljmp
out
scas
pop
mov
xor
rorl
mov
xchg
sub
popf
inc
add
cmp
push
les
push
cli
dec
pop
jns
pop
shll
mov
xchg
or
inc
in
and
or
pop
in
je
xchg
dec
insl
in
in
mov
and
jp
inc
out
xor
or
jbe
push
xchg
xchg
inc
pop
or
out
push
popf
inc
pop
push
jno
mov
adc
push
rorb
mov
pop
jle
adc
in
movsl
ficoms
test
test
out
mov
fwait
cmp
ljmp
data16
lahf
dec
movsl
push
js
sub
test
inc
sbb
push
aad
iret
aaa
jmp
lods
lods
in
dec
mov
jbe
mov
gs
scas
jno,pn
mov
outsb
jecxz
pop
mov
dec
pop
add
jns
dec
inc
push
dec
mov
mov
fcoml
xchg
pop
cmp
pushf
mov
cmovns
jg
cmpsl
fldt
dec
mov
insb
cmp
mov
jo
jb
mov
les
cmc
enter
ret
jae
adc
sub
mov
sbbl
ss
add
jp
jns
cmp
repnz
sub
notb
cmp
loop
into
imul
or
add
mov
sub
les
push
inc
and
jb
out
adc
add
jl
fimuls
push
mov
scas
dec
dec
shll
int3
cltd
mov
lret
icebp
pop
and
pop
mov
xor
pop
jne
dec
cmp
cwtl
js
sbb
push
jecxz
std
ret
jle
mov
scas
loopne
jo
in
cli
dec
xor
mov
outsb
pop
lcall
insl
sahf
repnz
cmp
jno
pop
test
mov
jne
test
adc
mov
or
cld
aas
mov
dec
jbe
mulb
stos
push
lods
xchg
add
jl
push
shll
pop
or
ret
xlat
inc
mov
fbld
nop
sub
cld
mov
xlat
sbb
subl
sub
iret
mov
out
andb
pushf
jo
ror
cmp
insb
jne
xorl
adc
or
pusha
aaa
xlat
dec
out
fs
cli
xorl
stos
pop
jo
add
mov
pusha
xchg
loope
dec
popf
sub
dec
xchg
or
jle
add
pop
mov
xor
add
or
push
dec
rol
std
sbb
add
push
mov
shr
inc
loopne
insl
mov
call
popa
aaa
pop
js
inc
movsl
xchg
sbb
xchg
daa
mov
insl
or
inc
adc
repnz
xor
in
mov
in
cmp
xchg
mov
ror
pop
add
add
out
xor
and
adc
pop
std
data16
and
fld
pop
ss
incl
inc
ret
sbb
fdivrl
cmpsb
leave
dec
xchg
ljmp
jb
xor
sub
mov
cltd
mov
mov
mov
fcompl
xorl
adc
lcall
xchg
loopne
sbb
aad
in
or
xchg
xor
repz
lock
dec
sti
lahf
sbb
jne
std
mov
inc
into
enter
add
mov
fisubrs
cmp
daa
pop
sub
inc
push
add
pop
cmpsb
mov
int
sarl
popf
inc
rcll
cld
pop
arpl
mov
popf
ja
mov
mov
test
dec
aaa
cmp
dec
lock
push
in
push
imul
inc
cli
mov
add
mov
ret
call
jne
ret
mov
int3
adc
jbe
cmpb
out
sub
dec
push
enter
addr16
inc
sti
mov
sub
mov
add
into
xor
or
arpl
dec
les
movsl
je
jo
addr16
add
sbb
jge
xchg
xchg
test
dec
fistl
loope
add
gs
jge
cwtl
cmp
adc
mov
push
hlt
gs
xchg
and
and
arpl
xor
jns
add
cmp
rcrb
out
push
cmp
dec
pop
stos
jae
xor
outsl
mov
dec
lods
ljmp
mov
fbstp
fwait
sbb
push
or
sbb
rolb
push
mov
roll
lcall
fisubl
out
cmp
shll
sub
pushf
adc
xchg
jne
sub
sub
pop
cmp
in
iret
aas
cmp
mov
insl
mov
out
cmp
aad
das
jp
rcrl
xchg
xor
adc
lret
aad
js
je
mov
dec
adc
das
mov
loope
or
push
push
call
xor
in
fld
repnz
inc
popa
xor
test
scas
push
xchg
add
sbb
sub
dec
lret
inc
div
sub
in
incl
call
lahf
mov
pop
push
cmp
lods
mov
mov
popf
movsb
pop
shl
aad
jle
jbe
mov
popf
jbe
cmp
jmp
popf
pop
sbb
test
das
cmc
dec
rcrl
pusha
cmp
shll
or
adc
int3
ljmp
add
sar
les
pop
push
ret
add
stos
add
mov
add
sub
xchg
sti
sub
xchg
sub
popf
mov
insb
fildll
pop
xchg
out
pop
cmp
mov
pop
and
jo
xchg
or
pop
leavew
in
sub
leave
xor
or
and
xchg
add
insb
cmp
add
shll
and
or
fsubrl
inc
std
test
pop
jb
inc
lds
add
clc
andps
inc
repz
ret
inc
or
cwtl
dec
outsb
fldcw
mov
test
icebp
sbb
scas
dec
movsb
mull
fldl
pop
mov
ja
cli
add
or
xchg
mov
jbe
mov
mov
out
lret
lods
movsl
xchg
dec
int3
cmp
push
or
xchg
sub
cld
pop
dec
xchg
push
cs
add
insl
hlt
dec
lcall
dec
andl
adc
sub
sar
or
pop
xchg
scas
fidivl
shrb
xor
cld
fwait
xchg
push
roll
mov
mov
xchg
push
jg
imul
sbb
das
push
pop
adc
mov
mov
add
rolb
dec
sub
in
jge
pusha
mov
jge
xchg
gs
aad
shll
cmp
mov
shl
jle
test
mov
sub
enter
xchg
cmpsb
push
pushf
push
cmp
push
inc
jmp
bound
std
hlt
aam
cwtl
or
arpl
sub
out
add
fldl2e
or
pusha
test
dec
ret
xchg
cmp
push
push
adc
filds
inc
dec
jae
lcall
mov
adc
pop
ds
popf
cmp
push
sbb
pop
adc
jmp
bnd
pop
fists
pop
call
pop
sahf
inc
mov
aaa
inc
add
mov
lods
cmp
incb
cmp
popa
dec
shll
xor
fldz
fwait
insl
mov
add
push
cmpsl
mov
fdivrl
faddl
mov
sub
fdiv
out
ret
xchg
jnp
fcomps
jae
push
adc
jno
inc
cmp
push
push
push
dec
sbb
stc
repnz
sbb
mul
daa
sub
pop
das
lock
or
pop
aaa
fidivs
leave
shrb
cmp
xor
sub
dec
dec
pop
pop
add
cmp
adc
mov
movl
xor
stos
dec
xchg
adc
pop
pop
outsb
mov
out
lret
fadds
fimuls
inc
js
gs
pop
lret
sub
sub
js
xchg
pop
pusha
inc
pop
stos
jo
push
mov
and
dec
adcb
jecxz
loopne
jle
out
leave
popf
aad
pop
rorl
mov
push
mov
and
mul
push
or
ret
clc
js
sbb
dec
lea
mov
jg
adc
cltd
push
aad
dec
jbe
adc
sbb
ljmp
jae
outsb
ror
shll
nop
roll
push
gs
xorb
pop
ret
nop
sbb
adc
loope
mov
and
dec
push
idiv
jp
mov
inc
imul
push
xor
adc
fucomi
jne
shrl
lock
scas
insl
and
andnps
or
fidivs
mov
dec
add
push
lret
rorl
mov
cmp
stos
rorl
cwtl
sti
jo
sub
or
lock
sub
mov
cmp
ss
or
int
mov
fwait
test
out
mov
aas
cmp
daa
int
movsb
adc
int3
aaa
fbstp
inc
xchg
adc
inc
pop
mov
mov
cmp
push
mov
jne
mov
cmp
inc
fimuls
xchg
out
insl
xchg
or
or
jg
les
sbb
ret
and
mov
test
lret
stc
pop
fcompl
pop
push
out
push
nop
imul
inc
daa
insl
mov
xchg
lea
pop
or
mov
sub
fldenv
add
jmp
pop
jg
mov
repnz
popa
inc
push
dec
iret
mov
sahf
dec
adc
xor
ficoms
subb
loope
mov
mov
cmpsl
sbb
repnz
cmp
jno
jns
fstps
popa
fcom
mov
rorl
leave
in
mov
cmp
xor
icebp
aas
ficomps
dec
cld
xchg
fcompl
mov
sub
inc
dec
jmp
sub
jecxz
sbb
jle
mov
xor
jo
test
mov
jmp
imul
jg
inc
repz
dec
cmc
in
dec
mov
push
xchg
out
pop
mov
sub
hlt
sub
push
cmp
mov
fcoms
mov
out
inc
push
daa
adc
test
call
jl
push
sahf
cmp
push
iret
mov
daa
insb
xor
pusha
subb
sub
sbb
int3
push
cmp
push
sbb
jns
test
cs
fisttpl
cmpsl
and
jo
fimull
arpl
fiadds
add
cmc
pop
jbe
pop
ss
pushf
cmc
jecxz
pusha
cmpsl
and
push
in
fwait
push
adc
outsl
xor
dec
scas
mov
ljmp
push
outsl
and
test
cltd
nop
push
sbbb
and
inc
push
pop
movl
ret
sarb
push
or
sbb
fcmovnu
jmp
cmpsl
mov
jle
pop
test
jno
imul
popa
push
push
or
in
stc
push
shl
lret
out
lods
or
ffree
mov
iret
sub
mov
inc
adc
pop
pushf
mov
dec
pusha
inc
jae
in
aad
outsb
gs
movsl
shlb
jo
mov
cltd
jae
in
rorl
ljmp
fsts
push
jmp
and
arpl
jae
pop
xchg
das
mov
push
xor
pop
fistpl
rcr
xchg
dec
or
lock
or
out
mov
jmp
shrb
fidivl
mov
xor
xchg
cmpsb
pushf
movlps
cmp
daa
inc
mov
out
cmp
jne
imul
mov
cmpsb
or
push
stos
mov
xor
loopne
add
or
movsb
das
pop
inc
rcrl
dec
mov
sbb
dec
mov
fdivs
adc
push
or
push
or
out
nop
mov
adc
stos
lds
inc
mov
inc
jge
out
lahf
cwtl
cmpsl
fwait
imul
and
adc
pop
adc
outsb
je
or
sbb
dec
mov
call
add
into
stc
sti
lcall
and
mov
adc
imul
jno
push
jb
loop
testl
sbb
jns
fmull
and
push
in
and
jb
sub
mov
jp
add
adc
xchg
rcrl
xchg
jae,pn
aas
pushf
add
popa
outsl
imul
dec
aaa
xchg
inc
cmp
lcall
adc
xchg
mov
mov
cmp
insl
adc
mov
mov
sub
data16
nop
cld
sahf
sub
push
das
push
je
add
xor
jbe
cld
push
xor
mov
bound
nop
das
fadds
shr
cmp
push
test
movsl
mov
test
xor
mov
aad
mov
dec
xchg
imul
cmp
mov
dec
call
mov
jo
in
or
cmpsl
or
push
mov
sub
sub
insb
adc
int3
cmp
or
or
xchg
push
cmp
enter
mov
bound
divb
inc
movsb
sti
add
mov
movsl
lret
jnp
jno
es
mov
arpl
pop
insb
pop
xor
push
add
icebp
pop
stos
or
mov
pop
or
std
xor
push
aaa
dec
and
sahf
cmpsl
add
js
xchg
push
and
test
adc
adc
in
cmp
and
adc
xlat
ljmp
mov
test
lea
scas
stc
push
add
jne
inc
dec
lcall
imull
sahf
push
inc
mov
or
or
push
xchg
jb
test
sub
sub
push
loop
jg
push
daa
push
push
and
dec
dec
rcll
add
jp
inc
cld
insl
out
add
dec
xor
jmp
add
mov
je
push
adc
push
jl
fidivrl
push
shr
movsb
inc
nop
insl
cmp
sub
das
or
loop
rolb
dec
call
dec
jl
adc
int3
clc
mov
les
jns
jnp
movsl
xor
jbe
sti
popl
mov
ret
cmpsb
pop
shrb
pop
push
push
mov
aaa
dec
jl
pop
repnz
sub
scas
jne
add
xchg
ret
inc
mov
push
cmp
jbe
leave
cli
sub
jmp
les
lock
xor
xor
mov
fisttps
mov
test
sbb
adc
out
mov
ucomiss
xor
subb
jae
cmpsl
sahf
aas
mov
ret
mov
or
xlat
or
adc
and
push
aad
cwtl
das
add
test
data16
push
xchg
rorb
fistpll
adc
mov
xor
xchg
mov
jbe
dec
xchg
pop
add
pushf
cmp
sub
mov
ret
push
or
jecxz,pn
xchg
xchg
adc
int
out
ljmp
xchg
dec
out
std
sahf
lock
mov
int
mov
mov
je
sbb
jmp
and
push
loopne
or
dec
shll
push
adc
lea
dec
ljmp
pop
test
insl
movsb
mov
cmpsb
jl
xor
ds
gs
sub
lock
lock
or
and
ret
movsl
addr16
pop
iret
stc
pop
ffreep
in
subl
ss
inc
mov
insl
test
push
cmpsl
dec
mov
pop
lcall
ret
jmp
lock
pop
lret
jbe
iret
push
cmp
iret
lds
jbe
sbb
out
enter
in
pop
sbb
jle
dec
pop
cmp
push
stos
dec
adc
jb
movsl
leave
sbbl
xor
test
add
add
cmp
cmp
cmc
nop
mov
sbb
pop
loop
wbinvd
xor
pop
and
lock
or
dec
addb
mov
xchg
repz
andb
aam
mov
jb
mov
push
sub
in
outsb
pop
cmp
jbe
xchg
mov
insb
add
mov
add
jg
sub
cmp
in
xor
jp
int3
std
sarl
rorb
pusha
int
dec
xchg
subl
pushl
aad
jmp
pop
js
out
xorb
pushf
lods
rorb
cmp
xchg
mov
std
nop
or
add
fnstcw
sub
in
sbb
mov
mov
inc
inc
fisubl
lahf
sub
in
mov
jno
inc
mov
loopne
dec
mov
movsl
xor
adc
add
lds
push
jg
jg
inc
jnp
xor
jg
bnd
push
xchg
mov
stos
or
xchg
sti
punpcklwd
mov
stc
stc
int3
inc
pop
push
cmp
dec
and
mov
pushf
pop
sbb
sahf
xchg
nop
into
dec
fdivrs
out
sar
mov
sub
adc
dec
rclb
fisttps
push
cmp
int
into
sub
cmp
test
xchg
test
sarb
inc
pusha
push
lret
xor
mov
push
push
pop
test
dec
fistpll
adc
jl
inc
jae
lret
sbb
fimull
sub
call
add
xor
jmp
dec
xor
push
test
mov
loop
mov
xchg
pop
shlb
scas
out
js
icebp
xchg
or
addl
imul
cmp
jle
lahf
dec
into
sub
in
lcall
fists
dec
ret
fmul
push
cmp
int3
lods
test
sbb
lock
fldcw
jl
xlat
adc
dec
jnp
scas
push
jne
pop
lcall
or
and
test
sbb
ljmp
mov
loope
mov
adc
cmpsl
int3
push
inc
vphaddwq
jle
imul
add
inc
int
inc
push
sbb
pop
cmp
cmp
shrb
scas
adc
pop
sbb
mov
xchg
and
push
push
push
xlat
inc
xor
scas
push
cmp
mov
aas
and
sbb
add
add
insb
call
fidivrs
dec
int3
movsl
stos
in
into
enter
test
lret
fwait
adc
sub
out
sub
mov
push
insb
add
nop
add
mov
xchg
fwait
sbb
in
cld
loop
clc
and
dec
pop
das
clc
xor
repz
jle
addr16
cmpsl
mov
mov
into
outsl
xor
pop
pop
fcmovnbe
add
nop
pop
rclb
add
rorl
mov
movsb
cmp
fcoms
cmpsl
stos
dec
mov
sbb
mov
in
sbb
imul
or
fnstenv
pop
xchg
sarl
pop
jmp
stc
rclb
cmp
bound
dec
push
sub
or
icebp
imul
xorl
or
scas
xchg
mov
adc
add
and
or
mov
out
and
imul
aaa
mov
dec
out
jb
or
aad
xchg
cltd
lahf
mov
das
push
loope
cmpsl
ds
push
mov
fiaddl
mov
lret
cmp
mov
inc
push
xlat
sub
retw
cmp
pop
fimull
ds
push
jl
cwtl
mov
mov
push
mov
daa
clc
repnz
mov
fmuls
cmpb
mov
sbb
addl
call
aad
insb
xorb
xor
test
lds
xor
sbb
pop
add
cmp
or
adc
push
loopne
and
mov
cvtps2pd
pop
dec
and
inc
inc
cmp
mov
popf
pop
cmp
xor
iret
not
cmp
lcall
add
neg
sub
cmp
sub
stos
popf
xor
and
sub
dec
sub
je
aaa
stos
int
add
inc
outsb
xor
adc
lock
jecxz
xchg
jbe
subl
dec
rolb
inc
dec
daa
mov
add
aad
jle
mov
mov
or
jge
jno
int
mov
insl
clc
popf
fisttpll
std
mov
mov
add
mov
arpl
pop
mov
inc
shll
les
pusha
xchg
inc
cmp
stos
inc
pop
xor
mov
shll
pop
jecxz
push
ljmp
fs
adc
mov
inc
jmp
call
cmp
test
or
mov
xlat
movsl
test
push
pushf
inc
js
imul
addl
imul
and
sahf
rolb
xchg
xchg
and
pop
sub
out
push
jno
ret
sbb
sub
and
sbb
and
mov
inc
jg
test
repz
push
std
insl
inc
sti
dec
add
xchg
mov
out
orl
cmc
jp
ret
test
das
and
jl
repnz
nop
push
test
notb
daa
mov
mov
jecxz
jns
scas
adc
or
out
inc
pop
les
rolb
or
mov
inc
mov
sbb
ja
adc
sub
lret
cli
mov
sbb
and
out
push
fnstcw
or
arpl
fcompl
pop
clc
xlat
hlt
scas
pop
jge
pop
jmp
mov
ljmp
mov
and
call
cmc
mov
cmc
test
int
shll
out
lea
fwait
inc
ret
sbbb
andl
pcmpeqb
dec
aad
repnz
leave
cmp
xchg
xchg
aad
test
ja
mov
sahf
in
pop
aas
popf
pop
jle
test
popf
scas
imul
nop
or
rcr
sbb
imul
push
adc
in
popa
dec
xchg
insb
mov
in
std
sub
sbb
popf
jp
jae
popf
jge
mov
cli
pop
faddl
adc
and
les
jnp
test
lds
fldt
or
lods
and
stc
movsl
mov
dec
inc
or
and
std
rorl
fildll
jmp
jno
clc
cld
and
in
jmp
int
clc
jl
or
divb
loop
orl
lock
push
and
cmp
inc
inc
pushf
mov
xor
mov
clc
xchg
dec
adc
dec
imul
jns
and
sub
xchg
xor
jmp
cmpsb
test
pop
sbb
mov
or
add
mov
push
out
jge
dec
inc
add
mov
sub
inc
lret
js
mov
xor
or
sub
xor
dec
clc
push
lcall
jle
lret
jae
jp,pt
es
pop
hlt
mov
stc
or
test
sub
jge
rol
pop
or
mov
aad
scas
ja
xchg
dec
or
dec
mov
stos
outsl
iret
gs
xor
imul
adcl
and
mov
and
cmc
mov
or
dec
in
jecxz
stos
push
xchg
add
ret
jge
mov
mov
nop
cmp
dec
pop
insl
inc
icebp
lods
jne
sub
cmp
sub
sbb
stos
rcrl
lea
shrb
aas
lock
fiadds
pop
inc
lcall
cmp
mov
shlb
imul
stos
pusha
mov
stc
lea
repz
scas
loopne
sub
fsubl
jb
sbb
iret
push
lea
loopne
add
mov
cmc
fisubrs
mov
mov
inc
lahf
mov
inc
push
pop
push
sti
in
sbb
addb
mov
and
mov
mov
jge
popa
xor
cmp
mov
outsl
lods
push
popa
mov
shl
push
mov
and
or
xor
and
div
imul
movsl
dec
bound
jecxz
pop
lret
lcall
push
sbb
pop
dec
shrb
stc
pop
test
cmpsb
div
subb
arpl
sysexit
faddl
jge
mov
inc
cmc
xchg
push
push
mov
into
cltd
xchg
jbe
push
popl
xor
sbb
mov
jp
mov
cwtl
inc
jg
shrl
xchg
pop
loop
arpl
add
ds
jb
add
arpl
sub
sub
and
ret
cwtl
xchg
or
fwait
adc
mov
mov
push
dec
int3
sub
fwait
add
dec
cltd
sbb
add
inc
loop
push
push
popf
imul
and
mov
dec
adc
add
pop
inc
cmp
sbb
push
jno
repnz
jb
int
data16
insb
sub
inc
js
cmp
imul
ret
pop
mov
jo
pop
loopne
mov
in
imul
cmp
gs
out
mov
and
mov
gs
sub
enter
or
cmp
or
hlt
sbb
dec
push
mov
pop
add
stos
loope
nop
inc
mov
cmp
add
jle
push
dec
sbb
negl
divl
push
in
mov
pop
push
mov
sub
pop
adc
roll
ljmp
mov
push
inc
cltd
std
xor
jge
pop
lret
xor
xchg
ljmp
pushf
xchg
and
aas
test
mov
in
lds
sahf
push
mov
lret
jmp
adc
sbb
mov
xchg
fdiv
lods
mov
mov
loop
leave
pop
and
addb
fmul
inc
mov
push
imul
inc
stos
in
fucomi
add
adc
addr16
dec
shll
jbe
pop
or
xlat
leave
jae
loop
aad
rcrb
jmp
mov
aaa
mov
xchg
popf
mov
cmp
and
lret
xchg
fisubrs
lock
jo
pop
stos
nop
dec
push
sbb
adc
xchg
push
cltd
jns
push
repnz
pop
in
pop
pop
xor
mov
pop
cltd
jns
shll
mov
lea
inc
std
inc
add
cmc
pop
cmovnp
int
add
iret
bnd
push
fsubrs
ljmp
mov
dec
sub
push
push
in
jae
mov
shlb
mov
xchg
jge,pt
sub
xor
cwtl
mov
cld
mov
and
mov
adc
inc
hlt
mov
fidivrl
cmpsb
xchg
movsl
int3
clc
in
mov
shrb
hlt
sbb
in
repnz
xchg
add
xchg
incl
xchg
adc
sbb
mov
mov
sub
icebp
leave
inc
mov
cmp
ret
stc
ljmp
push
and
xchg
mov
clc
js
xor
add
inc
shll
lahf
xor
mov
jmp
daa
push
pushf
xor
push
cwtl
test
and
repz
sahf
out
or
out
jo
fdivs
xchg
push
dec
lods
mov
xchg
fldl2t
add
je
xor
mov
loope
jns
xchg
data16
fildl
sub
add
aas
sub
pop
insb
mov
fiaddl
js
das
or
test
mov
inc
cld
pushf
cli
leave
test
sbb
aas
jbe
aam
mov
std
shl
xchg
insb
repz
push
xor
es
push
div
jnp
lds
in
rcrl
mov
push
aas
adc
bnd
iret
mov
cmpsl
jmp
loopne
pop
mov
arpl
dec
push
xor
add
sub
jge
pop
shrl
xor
mov
dec
adc
repz
mov
mov
lods
popf
fnstcw
xchg
and
pop
ss
jl
push
xlat
rolb
pop
jmp
sub
out
dec
lahf
push
out
aas
push
xchg
popa
and
push
stos
inc
aam
mov
pop
ja
mov
aaa
sub
mov
hlt
xchg
mov
push
jae
daa
fs
lret
xchg
inc
les
inc
push
cmc
xchg
insb
testb
stos
lods
pop
subb
inc
jecxz
fldl
push
add
dec
add
je
rolb
sahf
into
pop
mov
sub
movsb
icebp
xor
cld
lcall
jecxz
dec
movsb
cltd
pop
sbb
scas
add
add
mov
add
push
mov
jl
add
enter
and
rorl
js
in
outsl
push
jo
adc
shll
mov
dec
sub
adc
mov
sub
jge,pt
push
and
xor
sahf
imul
mov
inc
pop
stos
mov
inc
stc
pop
es
jno
mov
mov
jl
fiaddl
mov
js
call
outsl
add
push
push
cmp
adc
inc
push
dec
add
jmp
leave
fs
xor
int3
popa
mov
mov
ja
cmp
or
das
cmp
pusha
and
mov
test
xor
bound
stos
jne
xor
stc
lcall
xchg
daa
inc
mov
pop
negb
sub
push
and
xor
popf
punpckhbw
add
mov
test
adc
ljmp
adc
inc
push
int3
test
mov
dec
sbb
fildl
inc
stos
fsub
cmpsb
negl
xor
std
push
sub
shr
inc
iret
mov
pop
adc
inc
fistpll
out
pop
repz
stc
and
push
xchg
push
bnd
loopne
add
mov
xor
dec
mov
xlat
pop
pop
test
stos
adc
cwtl
adc
or
ret
push
std
test
jl
cmc
mov
aam
sti
imul
movsb
inc
push
mov
jecxz
ja
stc
jg
les
jbe
sbb
ss
out
adc
shrl
xor
or
xchg
add
mov
lret
in
push
in
and
ja
inc
jo
cmp
xor
push
int3
dec
popf
pop
jbe
loope
push
ja
fisubs
cmpsl
adc
icebp
cld
jp
add
addr16
shll
inc
mov
and
outsb
add
sub
and
jne
jno
dec
es
out
pop
inc
and
push
xchg
mov
add
lock
jo
jle
inc
je
daa
das
push
insb
push
sbb
xchg
xor
push
je
rcl
int3
mov
push
clc
cltd
jo
daa
mov
jnp
loopne
out
push
mov
ficoms
cltd
lcall
sub
repz
xor
cmc
shll
sub
aas
and
test
add
lods
out
inc
push
adc
scas
lea
int3
out
inc
ss
enter
sub
imul
in
adc
inc
fstl
mov
xchg
xchg
and
ljmp
lea
add
rcrb
aad
pop
mov
mov
addr16
dec
imul
add
pop
mov
jnp
lods
out
mov
push
fsubrs
inc
add
mov
movsb
cli
dec
push
dec
test
push
imul
xorb
nop
cli
outsb
ja
xchg
jne
cwtl
or
push
pop
push
jmp
mov
mov
sbb
inc
test
stc
fildl
outsb
mov
lds
int3
jne
mov
lret
fldcw
push
hlt
push
xchg
movlps
daa
mov
jmp
mov
mov
rcl
pop
aam
inc
and
sbb
jmp
lock
jnp
out
dec
repnz
add
xor
stc
and
int
insl
xor
into
adc
and
lock
add
jge
cltd
jo
jae
add
ljmp
aam
movsl
adc
sub
add
xchg
jecxz
outsl
test
mov
stos
in
inc
test
cltd
add
sbb
shll
pop
sbb
lods
add
and
xchg
pushf
xchg
fsts
mov
lcall
cmp
add
add
enter
lock
sbb
clc
gs
bound
lods
out
or
fldl
fstpl
xchg
je
xchg
mov
jno
push
pop
jl
mov
lret
lods
int
test
loope
or
cld
rorb
adc
cld
adc
fcoml
out
dec
adc
into
adc
xor
jl
mov
lret
mov
je
mov
pop
insb
pop
push
jnp
fcompl
cli
sarb
cmp
or
lret
data16
sbb
addb
xchg
loopne
in
inc
lcall
mov
adc
jp
out
lahf
pop
or
fdivs
bound
mov
push
shrl
jno
xorb
scas
int3
dec
int
repz
data16
cld
aas
les
or
mov
aam
add
js
push
daa
or
fwait
mov
mov
dec
push
mov
cs
or
adc
das
sbb
lret
sub
mov
lods
out
les
adc
cmpsl
add
inc
out
or
out
int
push
jecxz
andl
lds
add
inc
fs
out
out
add
push
mov
out
enter
and
fsubs
sbb
js
push
sbb
xchg
in
sbb
adc
clc
sarb
mov
lods
sub
dec
insl
jae
jg
test
jge
sbb
clc
rcl
adcb
jp
fsubrs
sub
ss
jle
mov
pop
adc
cltd
lds
xchg
adc
bnd
dec
adc
test
and
imul
je
mov
xchg
scas
clc
cmpsb
inc
pop
lahf
mov
mov
sub
pop
iret
repz
inc
iret
cmp
dec
lret
les
out
jg
jge
jno
mov
push
sub
push
pop
loope
dec
lea
aaa
jl
scas
mov
repz
mov
test
mov
push
in
insl
in
shrb
insl
and
cli
mov
adcb
cmp
call
or
sti
daa
lods
dec
ret
bound
add
test
sbb
sti
aad
fs
std
push
jle
jg
fildll
rcrl
mov
lcall
movsb
push
fwait
shll
stos
or
xchg
ret
mov
rcrb
sti
std
filds
mov
pop
out
loop
out
adc
push
popf
mov
mov
mov
xchg
add
repnz
lret
push
arpl
pop
aas
sbb
xor
inc
sarl
movsl
xchg
sbb
mov
cs
push
out
in
mov
or
test
xchg
dec
int
mov
iret
add
push
xchg
je
pop
xor
into
mov
in
bound
pop
mov
rolb
add
push
ret
lods
adc
add
jecxz
pop
mov
jbe
aaa
fisubl
push
fistpl
jg
leave
adc
and
lcall
sub
cmp
inc
push
push
iret
loop
jo
add
push
inc
cld
dec
cwtl
pop
outsl
add
mov
xor
and
mov
push
cmpsl
rcrb
xor
in
imul
ja
inc
cld
inc
bound
sti
subps
push
test
subl
mov
push
mov
scas
push
pop
jge
dec
sub
cmp
push
aam
sub
and
cmpsl
scas
mov
cli
sub
pusha
lcall
jg
xchg
pusha
jp
daa
cmp
xor
inc
fwait
data16
pushf
fcomps
shrl
cld
lcall
jg
pop
push
inc
inc
sub
mov
or
lret
inc
loope
imul
or
repz
mov
add
bound
push
lcall
arpl
je
fwait
int3
dec
push
mov
stos
push
leave
push
adc
cli
fnstsw
cmpsl
orl
pop
xchg
adc
mov
mov
cmpsl
sub
out
mov
jns
test
dec
adc
stos
js
in
stc
je
or
or
push
in
ljmp
pop
adc
fsubrs
mov
mov
fmull
enter
je
mov
inc
lock
inc
xchg
out
cs
out
jmp
lea
cmp
push
scas
cli
and
xchg
shlb
aas
xchg
outsl
dec
sbbl
and
push
cmp
lds
add
ljmp
lret
add
test
push
insb
add
push
pop
sti
xchg
in
xor
ljmp
out
and
call
xchg
or
shrb
int
mov
mov
push
mov
xchg
dec
push
sub
and
mov
mov
fwait
out
repz
fwait
lahf
mov
xchg
mov
lcall
xchg
je
fldl
nop
add
push
rcrb
out
testl
aad
add
push
mov
test
in
mov
pusha
icebp
xchg
sub
ret
dec
sbb
mov
xchg
xchg
dec
dec
and
cmp
test
fucomp
sbb
push
call
js
jg
mov
inc
adc
pop
in
mov
scas
insb
lods
mov
iret
stc
and
jns
mov
cmpsl
mov
nop
dec
adc
lahf
fadds
xchg
lret
dec
pushf
mov
inc
fnstenv
js
dec
dec
push
pop
sahf
cmpps
test
and
sarl
pop
hlt
push
or
pop
mov
jl
loop
dec
imul
cmp
scas
jmp
movsb
xchg
sti
addl
pop
pusha
dec
lea
cltd
add
lret
hlt
cmp
and
jae
int
arpl
mov
rorb
or
rep
lret
ds
popf
inc
lock
jns
out
ret
inc
xchg
xor
mov
out
test
push
jae
xor
nop
jg
jno
jae
fst
and
test
jecxz
test
hlt
imulb
mov
dec
loopne
bswap
ret
aaa
mov
nop
xchg
scas
xor
test
mov
fsts
cmc
push
inc
scas
or
inc
sub
xchg
and
jo
mov
pop
mov
or
movsb
pop
jne
pcmpgtb
and
inc
pop
jp
aad
iret
outsl
cmp
mov
icebp
sbb
inc
sbb
mov
xlat
cli
test
pop
in
gs
call
dec
dec
xor
negb
xor
ret
sbb
mov
mov
insb
pop
sub
insb
mov
dec
sub
clc
push
inc
sbb
xchg
xor
dec
jae
mov
scas
jb
test
lea
mov
loop
repnz
or
mov
lahf
inc
rol
add
or
and
test
xchg
pop
jnp
jo
mov
lods
out
test
pop
xchg
add
cmp
nop
data16
mov
cmp
cld
aad
cmp
cmp
mov
adc
pop
imul
mov
jmp
sbb
jmp
adc
fwait
in
or
xchg
inc
mov
mov
call
push
mov
inc
or
or
mov
aaa
mov
jl
pusha
cld
fsubl
gs
stc
jge
xchg
stc
enter
inc
and
mov
pop
cmp
adcb
jge
testl
push
xor
daa
int3
pushf
add
xlat
push
and
ljmp
push
bound
pop
sar
and
fwait
mov
cli
push
dec
js
dec
mov
loope
cmp
xor
dec
sar
scas
dec
out
fwait
iret
cmp
inc
xor
cs
and
enter
loope,pn
loop
jecxz
dec
bound
out
test
lods
cmpsl
out
lret
cmp
push
rorb
rorl
mov
ljmp
xchg
ljmp
mov
xlat
popf
cmp
fldenv
shll
lea
les
cmc
pop
repnz
fisubrs
into
lcall
sbb
clc
mov
mov
ds
jb
mov
xchg
jg
jne,pt
in
bound
stc
jae
sbb
cltd
out
dec
outsl
sbb
pop
inc
popa
pop
movsb
pushf
mov
pushl
pop
fs
loope
dec
loop
and
mov
and
mov
sbb
xlat
addl
jbe
imul
mov
call
mov
outsb
pop
xor
inc
inc
mov
lods
test
lods
insl
jbe
sti
rcrl
out
mov
loop
push
fwait
and
lods
sbb
subb
rcr
aam
in
mov
fs
xor
jbe
mov
cmp
push
imul
lock
mov
dec
pop
and
nop
aam
xor
cmp
hlt
and
xchg
std
and
aad
adc
loopne
es
xchg
lds
sbb
mov
push
fwait
cli
push
imull
jnp
inc
push
imull
push
jmp
lret
or
mov
mov
fsubr
sbb
pusha
jb
mov
cmp
push
js
xor
jl
leavew
xchg
lods
and
inc
repnz
and
das
fxch
ljmp
and
outsb
push
cltd
push
test
aam
push
fbld
cmp
and
inc
adc
icebp
sbb
popa
ret
push
in
sub
mov
push
push
lds
movsl
out
pop
enter
ror
xor
popf
stc
pop
aad
cmp
ljmp
pop
xchg
inc
loop
dec
or
sub
inc
mov
pop
out
cmp
jo
xchg
scas
sbb
cld
inc
pop
or
xchg
cld
pop
clc
dec
pop
jne
pop
cli
int
push
xchg
faddp
cmc
jecxz
enter
dec
adc
sbb
jno
rol
xchg
jo
inc
in
sub
jae
pop
sahf
mov
pushf
dec
repnz
sub
ret
cmc
arpl
gs
xlat
in
dec
cwtl
lock
not
ljmp
or
add
loopne
mov
add
push
fadds
cmp
mov
stc
push
jmp
or
or
ss
xor
push
rcrb
inc
jl
dec
leave
jle
lock
js
mov
test
lods
nopl
xchg
mov
test
xchg
lcall
aad
pushl
cli
out
int3
std
loop
pop
out
std
addr16
jne
mov
fists
dec
adc
mov
nop
jg
clc
adc
push
mov
mov
push
mov
mov
sbb
pop
pop
aaa
mov
mov
test
xchg
pop
push
inc
cmpsl
xchg
adcl
int3
pop
add
inc
push
dec
cmp
lea
pop
sbb
mov
fstpl
adc
fnstsw
push
jle
push
movsb
pop
or
xlat
add
sub
sub
sub
ret
bound
adc
pop
hlt
imul
mov
cmp
shl
int3
sbb
adc
lret
and
aas
cmpsb
adc
cmp
cli
adc
adcb
pop
imull
mov
or
stos
add
lcall
add
mov
ss
mov
data16
out
movsb
mov
pop
addb
loope
mov
sbb
int3
jno
xlat
mov
jno
addr16
scas
je
mov
test
cmp
mov
inc
cld
stos
outsl
lods
std
jbe
xchg
mov
inc
scas
jmp
xor
xchg
lea
shrl
subl
pop
lea
xchg
into
add
aad
mov
dec
imul
jae
sbb
and
ret
int3
or
jmp
or
lcall
push
mov
xchg
mov
push
inc
cmpsb
lahf
dec
call
mov
xchg
addr16
push
stc
inc
aam
mov
pop
adc
push
aas
repz
in
jno
xor
push
ds
rcll
out
pop
mov
dec
push
faddl
imul
popf
cmp
jecxz
push
div
cmc
bound
xchg
lahf
push
cmp
imul
sbb
or
iret
mov
iret
lods
gs
xor
mov
out
fs
cmp
popf
pop
jo
xlat
sti
ret
push
lods
int
in
sub
xchg
movsl
push
enter
in
pop
push
inc
cli
pop
adc
pushl
addl
mov
add
jp
add
pushf
adc
scas
fistpll
call
or
popf
int3
cmpsl
jecxz
xchg
push
sub
les
cmp
inc
test
test
js
sbb
fs
adc
ss
sti
les
adc
rcrl
test
mov
std
inc
pop
mov
xchg
enter
push
push
stos
inc
push
in
xchg
sldt
push
and
sub
and
pop
sti
shlb
push
fiaddl
insl
sbb
cmp
fadds
or
cmp
out
loop
jmp
sub
mov
icebp
pushf
inc
push
loopne
sub
pop
and
xorl
imul
or
adc
sbb
lret
scas
fxch
mov
cwtl
into
in
in
and
push
lods
and
loop
cmp
fmuls
sub
or
mov
or
cwtl
pop
pop
ja
daa
mov
sub
test
mov
stc
and
xchg
fcoml
xchg
fistpl
and
lds
icebp
dec
mov
inc
and
out
arpl
fs
nop
jg
rclb
fisubl
icebp
aas
mov
xor
jo
pop
xchg
or
dec
out
mov
xchg
dec
sbb
clc
fs
adc
jbe
nop
push
pop
lret
adc
mov
jno
push
cs
enter
mov
data16
stos
jg
jmp
adc
add
cmpsl
and
add
lret
add
add
pop
das
jbe
dec
pop
imul
push
repnz
icebp
xor
and
not
movsl
loopne
mov
xor
fldt
aas
lds
mov
adc
ret
nop
rolb
mov
dec
stos
dec
jp
sbb
xorl
mov
lea
fidivs
leave
shl
adc
pushf
pop
push
aas
in
popf
fdivs
aas
push
clts
pop
jmp
xchg
pop
repz
movsl
inc
filds
sub
stos
ja
xchg
jmp
push
lea
movsb
mov
in
xchg
sbbl
jo
test
and
inc
xchg
inc
dec
sub
jno
push
dec
negb
enter
mov
jecxz
aad
orl
mov
and
mov
inc
sbb
xchg
mov
aad
jge
xchg
das
test
adc
dec
add
adc
mov
test
xchg
xor
push
mov
adcl
sub
mov
stos
jecxz
cmc
xorb
stos
lods
sbb
cmc
and
repz
imul
lcall
sbb
jo
test
imul
cmpsb
icebp
cmpsl
sbb
add
psllq
cmpsb
popf
imul
call
rorl
imulb
daa
adcl
cltd
in
lcall
movsl
xor
cmp
cmp
andl
js
in
pop
sub
repnz
pop
xchg
enter
add
jmp
mov
loop
into
add
shl
xor
test
add
test
jno
out
mov
es
or
neg
cmp
stc
loop
inc
ljmp
shll
insb
jb
shll
xor
push
push
je
cwtl
sub
popa
pop
mov
call
imul
adc
sbb
pop
dec
inc
aas
add
outsb
xor
mov
inc
pop
jns
push
je
xor
xlat
out
fidivrs
mov
jge
cmp
adc
xlat
or
daa
sub
sbb
cmpsb
mov
mov
movsl
ds
shlb
les
sub
xchg
xchg
mov
add
iret
out
fsubr
inc
lcall
ret
mov
dec
ljmp
jns
lret
push
jbe
icebp
and
jbe
fmul
test
xchg
mov
jg
add
inc
rorl
xor
inc
or
divl
jbe
pop
push
subb
repz
stos
in
inc
in
xchg
test
out
inc
add
push
dec
sbb
cmp
push
dec
jb
cmp
fldt
jecxz
cmp
push
pinsrw
mov
dec
js
mov
aad
push
inc
adc
fucomi
dec
push
arpl
or
sub
dec
iret
adc
mov
imul
xchg
push
imul
xchg
push
dec
int3
sarl
mov
sarb
mov
arpl
mov
jmp
sub
mov
popa
movsb
div
inc
enter
loop
push
sbb
cwtl
pop
jb
push
add
push
dec
outsl
cwtl
xchg
clc
add
jns
test
in
pop
loopne
xor
sbb
cmp
or
push
aad
or
jecxz
lock
sbb
fimull
es
pop
daa
push
ja
xor
cmpsb
lds
adc
pop
mov
jae
fsubrl
clc
push
mov
rol
xchg
mov
pushf
dec
push
push
out
jae
cld
fcmovne
inc
aas
sub
xor
sbb
out
push
daa
ja
fldl
outsb
sbb
inc
adc
lods
nop
or
adc
pop
fsubrl
and
ljmp
dec
and
pusha
das
xchg
or
cmpsl
inc
cmp
call
xchg
xchg
xlat
push
fstpt
mov
cmp
sbb
push
imul
push
mov
ret
mov
faddp
lret
adc
test
cmpsl
icebp
cs
mov
repz
sahf
or
jnp
push
dec
aaa
stos
pushf
fcoms
shlb
sahf
jno
jo
pop
hlt
push
jge
push
ss
dec
sub
icebp
fidivl
cmp
mov
mov
push
clc
xor
cld
fisttps
ret
xchg
jne
dec
pop
add
lcall
mov
add
cmpl
xchg
call
xchg
sbb
insb
xchg
test
in
icebp
int
and
cmpl
mov
hlt
ja
mov
pusha
jge
aas
push
enter
jbe
pop
mov
cmp
aam
push
mov
sub
cli
out
sub
mov
in
call
mov
outsl
lods
stos
dec
mov
call
mov
lcall
lea
jnp
xor
mov
add
xchg
xchg
hlt
cmpsb
xor
flds
mov
inc
lods
mov
xchg
out
inc
pop
popa
add
bound
cmp
and
bound
cmpsb
mov
and
movsb
cmpl
orl
pushf
and
mov
call
mov
push
jno
and
ds
fisubl
psrlw
jns
xor
adc
les
cmp
psllw
xor
cld
fistps
mov
int3
xor
test
bound
mov
das
adc
pop
mov
cmc
clc
cmp
adc
sub
shr
lods
push
das
nop
push
cmp
daa
repnz
cmp
cli
ja
pop
pusha
push
rcll
cmp
or
jmp
sub
rcrl
sbbb
movsl
cli
pop
xlat
mov
in
shlb
jge
sbb
js
nop
pop
push
aas
sahf
lret
mov
push
sub
dec
sbb
test
pop
xor
mov
push
into
add
rcrl
aaa
inc
inc
movq
sahf
and
adc
addr16
push
incb
adc
push
push
or
xor
pop
insl
mov
test
or
lods
aam
lret
pop
aas
push
sarl
pusha
cltd
cmpsb
testb
pop
jl
pop
mov
mov
js
inc
sub
ljmp
adc
mov
in
mov
nop
xchg
fsubl
int
subl
cwtl
aaa
rclb
mov
loop
cs
std
add
out
call
and
bound
test
mov
iret
and
popa
push
and
repz
es
push
sub
cmp
pop
mov
inc
push
mov
test
pop
fimull
ss
imul
mov
lds
lahf
cltd
pop
mov
and
xor
xchg
loope
sub
lea
insb
pop
clc
aad
mov
jae
mov
sbb
aam
add
dec
jo
rclb
sbb
testl
in
xchg
das
bound
paddsw
outsl
mov
or
fldenv
movsl
or
pop
out
push
dec
sahf
mov
cmp
inc
jae
in
mov
int
test
jmp
cmp
in
mov
out
push
pop
inc
sbb
loopne
ljmp
dec
inc
movl
idivb
push
mov
xchg
adc
jo
push
hlt
cltd
mov
dec
sub
xchg
or
cs
outsb
loop
imulb
mov
jp
xchg
mov
iret
adc
aad
jno
inc
add
jp
cmp
xchg
mov
testb
mov
outsb
dec
or
pop
mov
lods
mov
sarl
insl
mov
in
cmpsl
rolb
push
jns
pusha
sbbl
mov
mov
in
nop
es
ret
mov
push
arpl
sbb
subl
or
pop
ret
push
push
xchg
lret
pop
ret
mov
loop
add
inc
adc
movsb
mov
adc
aas
jp
fldenv
inc
decb
sub
mov
or
push
ds
and
cld
inc
or
sbb
ficoml
fisubs
repnz
dec
in
ljmp
push
iret
lahf
lret
fidivl
pusha
cmp
add
std
test
enter
movsl
pop
stos
jp
data16
aam
rclb
dec
adc
pop
lock
cmp
push
scas
jg
js
pop
sbb
push
lods
xor
test
out
sbb
jmp
jl
jp
aas
in
ficoms
mov
popa
ja
sti
xchg
sub
inc
and
data16
cli
es
insb
xchg
scas
cmp
loop
mov
sub
xorb
xchg
inc
jl
clc
fcoml
jle
inc
dec
inc
insb
add
outsl
cmpsl
fstpl
icebp
sahf
aad
mov
inc
sbb
test
mov
cmp
in
movsb
and
rcr
inc
sbb
addb
xor
sub
andb
mov
lcall
or
xor
or
rcrb
dec
into
jne
adc
fldcw
iret
sub
lcall
jno
aad
xor
jno
test
sti
std
mov
jmp
cmp
inc
dec
adc
rcr
lret
pop
mov
xchg
pop
pop
shl
sbb
movsl
cmp
push
andnps
add
jae
js
jno
cmc
cmp
mov
divb
pop
les
enter
and
cmp
enter
lahf
adc
scas
cld
call
inc
dec
mov
leave
xor
stos
xchg
push
shlb
add
enter
gs
int
mov
fwait
jmp
scas
inc
xchg
out
std
mov
les
jmp
xchg
mov
dec
push
in
pop
gs
pop
jl
and
jne
ljmp
aam
xor
xor
bound
iret
out
in
xchg
push
fwait
std
inc
lahf
mov
pop
stos
lret
sub
outsl
in
cmp
rorb
lods
mov
cmc
lods
lods
pop
and
ss
dec
ret
sub
adc
jg
aaa
pop
add
jnp
push
js
adcb
xor
sub
outsb
push
adc
mov
in
icebp
cmpb
mov
lret
jo
push
mulb
ljmp
mov
int3
xchg
cmp
hlt
dec
repz
jbe
mov
ss
mov
shlb
xor
mov
out
addr16
xchg
js
cmp
shll
push
add
mov
movsl
cmp
jl
repnz
andl
outsl
stos
jnp
lret
mov
call
cmp
lret
and
js
jle
xor
xor
sti
add
jo
out
hlt
push
add
nop
cs
ljmp
and
clc
in
incl
pop
xchg
les
out
pop
loop
adc
jmp
jp
fcomip
lahf
pusha
jle
aam
jp
pop
sub
and
dec
dec
push
and
test
loopne
rcrl
mov
dec
aas
fnstsw
sub
pop
unpcklps
dec
mov
loopne
sbb
nop
mov
sub
pop
ja
pop
mov
dec
ljmp
or
mov
stos
mov
mov
sbb
and
data16
add
andl
sbb
inc
das
subb
and
xchg
lcall
scas
mov
loope
dec
das
movsb
clc
sahf
mov
dec
scas
push
inc
out
loop
das
cli
jno
and
or
shll
add
aad
fidivl
fimull
call
pop
test
ja
insb
fwait
iret
pop
or
or
inc
push
std
sub
inc
cwtl
jge
ret
mov
push
jle
call
popl
mov
out
inc
rorb
sbb
and
sbb
mov
cmc
push
cmp
ljmp
sbb
sub
leave
sbb
and
hlt
push
pusha
mov
jmp
lock
add
clc
cmp
adc
inc
and
adc
xchg
mov
and
mov
xor
cli
out
orb
lods
push
inc
pop
movb
outsb
mov
nop
sub
push
clc
aam
inc
xor
push
imul
lods
push
sbb
jmp
mov
rolb
js
push
fcomp
stos
jg
fildl
mov
or
insb
cmp
pop
xor
daa
aas
mov
inc
and
jl
stos
adc
mov
dec
inc
lods
jne
ds
pop
jbe
inc
insl
out
arpl
aad
adc
adc
cmpsb
and
cmp
lcall
ja
inc
andb
lret
pop
push
cmp
push
pop
sarb
push
dec
jmp
mov
xchg
movsl
mov
jo
cmpsb
iret
dec
mov
push
cwtl
repnz
xor
jle
aas
push
fistps
sbb
mov
sbb
mov
inc
inc
lods
push
pop
shl
sbb
jp
xchg
jo
imul
insl
jle
popf
sub
rcl
sbb
std
cmp
push
or
insb
imul
push
popa
arpl
push
or
adc
daa
test
icebp
cmp
sti
pop
repnz
add
xor
adc
fwait
dec
ljmp
and
inc
inc
lods
add
fiaddl
imul
loop
in
lahf
pusha
or
inc
xchg
addl
jmp
je
aas
scas
or
jmp
loop
cmp
lock
jbe
and
negl
bound
out
and
leave
aad
das
lcall
add
dec
jb
cltd
ljmp
ss
mov
cmp
jle
into
inc
imul
daa
jns
mov
ret
jecxz
adc
inc
add
cld
pop
sub
cs
mov
pop
sub
mov
imul
jnp
cs
xchg
dec
lcall
sub
jae
test
cmp
call
clc
icebp
add
xchg
jle
mov
mov
cmp
fbld
mov
mov
stc
mov
push
pop
pop
cld
mov
js
mov
pop
movsb
push
fisubl
inc
clc
jecxz
cli
jmp
scas
mov
das
xchg
out
and
mov
pop
push
bound
mov
pop
xor
scas
aad
ret
and
cmp
insl
or
pop
adc
push
inc
lret
orb
dec
sbb
sub
mov
push
imul
or
jle
test
xor
ss
pop
jae
pop
mov
std
push
movnti
cmp
cmp
jae
push
cmc
repnz
sti
fnstcw
push
fiadds
sbb
sub
cwtl
mov
jp
xlat
or
adc
loopne
or
ja
or
in
jae
sbb
fimull
imul
add
and
xlat
dec
mov
or
pop
cmc
inc
imul
jns
sub
adc
nop
cmc
cmp
out
inc
std
test
inc
out
pop
sti
mov
adc
outsb
in
test
int3
jle
sub
test
loopne
or
fisttpll
mov
inc
xchg
filds
add
jp
xchg
lcall
xor
sbb
daa
mov
pop
inc
jge
fmul
mov
pop
mov
hlt
dec
sarl
test
into
mov
mov
push
or
or
repnz
inc
or
daa
aad
inc
cmp
xchg
and
jg
test
mov
xchg
push
mov
sbbb
xlat
or
out
mov
pop
push
xchg
cmp
mov
in
push
cmpsl
aad
mov
pop
mov
jle
in
ss
and
std
movsb
jo
loop
sbb
mov
imull
push
push
cmp
es
mov
push
xchg
popf
xor
xorb
lret
jmp
mov
mov
orl
and
aam
lods
and
push
push
pusha
insb
mov
jge
pop
pushf
mov
clc
xor
and
xchg
ror
cltd
xchg
xchg
jge
mov
daa
inc
lret
sub
dec
dec
or
sbb
dec
data16
test
in
pushf
push
push
test
xlat
pushf
mov
push
mov
jbe
mov
or
cmp
mov
es
jno
cmpsl
add
xchg
pop
or
shrb
clc
dec
rcr
aas
loope
scas
xchg
outsb
mov
shrb
adc
stos
mov
xchg
xchg
pushf
into
push
test
mov
xor
or
mov
mov
push
jno
mov
ret
xchg
mov
xlat
fwait
loope
mov
in
test
pop
int3
les
xchg
jb
add
int
jp
mov
adc
push
pop
inc
in
mov
adc
dec
mov
add
cmp
jne
ret
cld
mov
out
pop
movsl
mov
out
mov
adcb
idivl
int3
repnz
pop
add
jl
sar
sbbb
push
incb
mov
or
stos
aam
movsl
jecxz
stos
ss
call
repnz
xchg
mov
arpl
cmp
into
mov
and
not
sub
cmp
cmc
loop
xchg
and
pushf
and
and
sbb
inc
mov
je
sub
jmp
adc
push
and
push
push
mov
push
loope
mov
xchg
outsl
mov
jmp
mov
push
adc
mov
jbe
aaa
xchg
rcrb
stos
orb
or
cmc
inc
inc
dec
xchg
sbb
adc
sbb
pop
stos
cmp
add
push
subl
pop
stos
sahf
testl
leave
xchg
dec
adc
daa
xor
loope
dec
pusha
js
fistpll
aaa
cmp
popa
dec
mov
ja
inc
inc
xor
adc
lock
mov
fmull
int
jns
test
jno
in
sub
stc
xchg
sarb
mov
xor
outsl
sbb
test
cmc
mov
cmp
mov
mov
jp
cmp
rcll
mov
cmp
mov
lds
push
jbe,pn
in
mov
fsubrs
adc
pop
and
hlt
xor
les
sbb
mov
sti
xchg
mov
mov
fbld
out
adc
cmp
mov
push
sub
push
jecxz
loopne
mov
pop
setae
xlat
dec
inc
lods
adc
mov
mov
pop
dec
pop
sbb
cmpsb
fisttpl
adc
idivb
ljmp
push
icebp
inc
addl
inc
clc
adc
orb
sbb
in
fldcw
or
ret
test
fisubrl
mov
in
mov
movsl
jmp
dec
test
aaa
mov
fld
jecxz
loopne
push
sbb
in
lods
xchg
add
push
int
stos
loopne
scas
ljmp
lods
cs
cmp
mov
sub
repz
or
dec
imull
in
jle
pop
pusha
clc
xchg
sbb
sti
mov
clc
cltd
push
cmp
or
xchg
fsub
mov
mov
add
jmp
sarl
sbb
pop
push
mov
pusha
or
mov
adc
xor
cmp
push
inc
push
loope
jg
and
and
movsb
cmp
xorb
test
xchg
pop
cwtl
sbb
adc
jae
das
dec
test
loopne
ret
ljmp
mov
dec
sbb
shr
pop
cmc
push
fcom
mov
out
scas
sbb
inc
cltd
xchg
lcall
sub
dec
inc
and
add
fsubl
xchg
push
clc
push
inc
addb
pop
jmp
ficompl
mov
les
repz
ja
sbb
mov
lds
add
stc
mulb
lea
dec
add
jmp
rcr
scas
shr
int
sub
lret
lods
jne
sarl
inc
pop
lcall
scas
xor
dec
push
mov
iret
add
ljmp
stc
in
incl
imul
shlb
jge
or
mulb
xchg
xchg
inc
cmpsb
push
jge
xor
mov
pop
dec
sub
int
out
sahf
mov
push
dec
call
cmp
cmp
test
push
pusha
insb
into
push
fsubs
outsl
sbb
add
jge
or
jne
test
xchg
cmp
push
cld
sub
cmc
fisubl
sub
inc
shll
ret
and
pop
or
lahf
pop
mov
icebp
lahf
pop
xorl
and
and
sti
xchg
ljmp
push
and
ds
lea
pop
cmp
fwait
cmp
in
ljmp
or
invd
jecxz
push
push
mov
sub
test
inc
loopne
js
pushf
sti
fbstp
aaa
mov
leave
es
jo
popa
addr16
rcll
sahf
in
adc
and
cmp
mov
pop
cmovnp
call
aam
pop
popf
call
stc
mov
stc
cmovnp
scas
lcall
pushf
fdivr
add
incl
repnz
dec
fwait
pop
loop,pt
pushf
inc
js
push
dec
into
es
je
lret
rcl
dec
add
or
mov
jno
push
push
sti
sbb
jno
out
popf
sbb
cs
inc
bound
mov
subl
inc
pop
insl
mov
add
ljmp
pop
adc
aad
xor
sahf
push
shl
lahf
lret
ss
push
into
aad
mov
mov
sbb
stos
adc
test
push
push
and
inc
leave
cmpsb
std
movsl
nop
xor
push
jg
imulb
movsl
push
popaw
push
int3
adc
cltd
sub
insl
push
xchg
pop
dec
mov
stos
push
bound
mov
es
push
popf
cmp
mov
stos
in
xrelease
sub
adc
out
imul
mov
mov
push
test
test
ss
js
imul
xor
mov
xor
fmul
scas
pop
pop
xchg
add
push
test
lcall
hlt
mov
push
cwtl
stos
xor
mov
lea
loopne
dec
inc
mov
bound
and
dec
outsl
arpl
icebp
das
in
push
hlt
add
fbstp
in
cmc
mov
ret
push
adc
xchg
xlat
ljmp
pop
dec
js
cmc
test
in
and
lods
dec
ljmp
add
ds
sbb
rcrl
xor
gs
mov
adc
xor
mov
lret
mov
aaa
fdivr
pop
into
mov
push
cmp
sub
sahf
stc
fs
stc
decb
mov
dec
pushf
jecxz
pusha
loop
xchg
mov
cwtl
sbb
ss
mov
inc
mov
dec
jle
sub
jae
cmp
repnz
pop
adc
xchg
das
shr
into
pop
add
dec
add
sbb
xor
and
sbb
rcl
out
jle
jge
or
pop
jbe
mov
std
lret
movsl
xor
mov
add
xlat
mov
loopne
xchg
das
mov
cmpsb
jno
pop
ja
sub
icebp
xchg
rorl
stos
cmp
cmpsb
test
insb
bound
xor
jb
cld
out
int3
jnp
divb
fsubs
xchg
xchg
xor
cmp
and
aam
pusha
push
mov
mov
pop
ret
nop
sbb
movsl
loopne
and
bound
xchg
iret
jae
int
push
mov
sarb
dec
add
pop
mov
insl
orl
mov
leave
mov
jge
mov
adc
push
adc
fildl
mov
xchg
cmc
mov
push
xchg
and
adc
pop
pop
jle
mov
nop
js
stos
fnstenv
jb
fwait
in
fs
shl
cli
adc
or
cmp
inc
aad
aas
lcall
ja
aam
inc
add
mov
mov
lret
sbb
ljmp
test
mov
xor
pop
jns
add
lods
clc
sub
in
jge
mov
mov
mov
and
int3
sbb
fsubl
xchg
imul
xchg
mov
popa
stc
test
bound
mov
ja
insl
enter
cmp
popf
das
lock
in
or
sar
push
das
cmpsl
jae
nop
sbb
mov
push
pop
and
imul
imul
into
jecxz
out
jno
shlb
icebp
inc
jnp
loope
push
in
jnp
aaa
test
loop
sbb
pop
fs
les
mov
or
sbb
pop
pop
pop
sbb
and
popa
insl
dec
movsl
movsb
js
mov
daa
inc
jbe
mov
lods
arpl
cltd
cmpsb
xor
add
sbb
xor
leave
addb
enter
xor
jmp
fcoml
fdivrp
cmp
ja
adc
cltd
jge
cld
sbb
xchg
jae
xor
push
fildll
sbb
push
push
testb
adcb
pop
sbb
fadds
std
mov
mov
lret
or
push
xchg
and
mov
daa
mov
xchg
pop
out
push
mov
push
and
mov
pop
jns
push
fisttpll
test
divl
push
cmpsb
test
out
imul
sbb
dec
push
or
out
jg
add
mov
jge
inc
pop
ret
jmp
cltd
addl
or
adc
rorb
pop
or
out
mov
sub
scas
addr16
adc
bound
dec
pop
cltd
inc
mov
inc
jg
popa
pop
sub
pop
push
lods
pop
pop
or
xor
out
icebp
insl
jb
push
ds
inc
ret
fmul
stos
jge
add
inc
xlat
lds
divl
mov
cmp
adc
test
es
adcb
push
jmp
and
xor
mov
dec
rorl
shll
and
es
mov
pop
dec
frstor
pop
or
je
push
jae
xchg
mov
pop
repnz
mov
ss
les
mov
pop
xor
lahf
rol
addb
lock
push
out
sti
test
inc
nop
hlt
jae
fs
jecxz
jae
roll
vsubss
jbe
in
sbb
loop
fistl
ja
fisubrl
lods
aaa
push
inc
std
es
es
cmp
push
out
ljmp
add
in
jns
test
in
movsb
mov
pop
daa
xchg
inc
cmp
dec
xor
mov
xchg
adc
xchg
cmp
push
jmp
lea
fsubs
cmp
aam
mov
pop
sbb
xlat
pop
adc
mov
push
dec
or
mov
js
pushfw
lret
pusha
push
loopne
outsb
xchg
push
push
ljmp
or
add
and
popa
in
in
jp
in
xor
jle
int
mov
scas
push
push
fidivrs
inc
push
cmpsl
cmpsl
and
filds
insb
idivl
fsubl
adc
cld
out
sbb
loope
out
push
std
loop
movsb
mov
das
ud2
cltd
mov
or
inc
rolb
mov
push
or
repnz
xor
xchg
and
push
pop
lods
arpl
sti
shlb
movsb
pop
lods
mov
movsl
xchg
xchg
lock
es
mov
jmp
mov
push
into
mov
data16
test
add
sbb
test
bound
inc
addr16
mov
cmp
pop
pop
fisttps
xchg
add
out
ss
test
xor
rclb
jnp
cld
daa
popf
dec
sbbl
jb
out
push
inc
mov
cmp
mov
xlat
mov
les
cmpsb
stos
iret
jns
sub
mov
xlat
adc
push
scas
push
call
pop
and
icebp
out
pop
push
xor
aam
int
test
push
push
ja
xchg
sub
push
or
and
popa
xchg
popa
js
jg
icebp
loopne
or
jb
pop
lods
loop
or
xor
inc
mov
or
adc
or
jecxz
mov
and
out
mov
sbb
and
push
xor
stc
je
fld
adc
lods
sub
and
hlt
inc
pusha
push
fiadds
add
cld
hlt
cmpsb
cmp
xchg
xchg
add
cld
fidivrs
test
push
cmp
adc
pop
fwait
jae
iret
dec
sub
call
fidivrs
xor
aad
rorb
push
push
mov
or
cmpsl
sub
mov
pop
mov
jmp
ljmp
mov
adc
add
xchg
xor
or
mov
out
iret
push
xor
std
jo
test
outsb
test
sub
movsl
xlat
scas
and
xchg
repnz
and
pop
inc
fidivl
in
dec
xchg
int3
mov
jae
mov
leave
pushf
fcomps
jp
fptan
loopne
adc
je
aad
int3
xor
mov
mov
fisubrs
nop
int3
sub
xchg
addr16
mov
loope
mov
xchg
scas
ret
or
sar
jl
inc
push
subb
and
cs
inc
dec
mov
ss
rcrl
idivb
lea
outsb
xor
popa
scas
push
cli
mov
aas
sbb
sub
insb
cmp
cmp
mov
pop
mov
inc
and
imul
in
jne
mov
jne
aam
mov
rcrl
adc
jge
lods
mov
xchg
cmp
aad
dec
jecxz
mov
or
shrl
adc
jp
jp
inc
cmp
pop
nop
loope
pop
push
push
repnz
cltd
mov
dec
pusha
xlat
sbb
adcl
pusha
adc
fmull
jg
loop
ret
xchg
rclb
push
cmp
adc
mov
adc
mov
mov
add
xchg
push
das
jne
dec
adc
xchg
inc
mov
jge
sbb
dec
xor
xlat
mov
sub
daa
pop
sub
xor
dec
pop
fstps
test
xlat
xchg
daa
mov
inc
lret
aaa
xor
jae
rclb
das
fwait
repnz
and
enter
pop
cmp
sbb
insb
ljmp
add
and
fbstp
cwtl
popa
stc
adc
adc
ret
movsl
ffreep
inc
in
mov
xor
sbb
mov
mov
and
jecxz
enter
sub
popa
mov
add
fnstsw
mov
mov
jnp
cmp
lods
mov
sub
lahf
adc
or
adc
fiadds
xor
mov
lcall
mov
icebp
mov
sub
outsl
mov
outsb
mov
mov
lods
inc
cs
je
fisttpll
xorl
xor
test
gs
in
sub
lahf
xor
rcrl
push
cmpsl
int3
add
orb
inc
lahf
div
mov
xor
insl
bnd
pop
fsts
decb
adc
cmp
leave
pop
cmpsb
xor
int
dec
movsl
sub
dec
sahf
cltd
repnz
jbe
sbb
xchg
imul
mov
jns
inc
mov
inc
dec
pop
daa
adcl
out
cli
and
je
fldt
mov
aas
xor
mov
repz
pop
sub
ficomps
loop
push
popa
cmpsl
popa
mov
and
adc
jmp
xchg
pop
push
push
sub
push
gs
jnp
adc
in
fldl
popa
and
repz
pop
or
cmp
xor
ret
mov
mov
and
pushf
imul
les
movsb
ret
jl
leave
jno
das
mov
inc
and
mov
fcoml
pop
inc
xor
or
movb
in
sub
xchg
jecxz
add
adc
cltd
jns
xor
lods
out
arpl
xchg
jge
sbb
mov
jp
mov
cmpl
jne
jns
mov
inc
push
inc
arpl
or
xor
insb
bound
xor
stos
fistl
push
and
push
sbb
test
rol
push
jle
jecxz
jnp
out
push
push
mov
leave
push
mov
sbb
inc
push
fstl
xchg
popf
xlat
paddd
test
aam
or
mov
popf
inc
pop
mov
push
fidivl
lahf
add
lret
push
sub
inc
ja
sub
xchg
pop
loopne
popa
dec
loopne
mov
adc
cmp
jae
xchg
sbb
aaa
pop
out
lea
and
pop
jmp
das
insl
sbb
ret
sarl
push
sbb
test
xor
jne
test
out
ss
sub
pop
push
cmpsl
or
xchg
outsb
push
xor
xlat
dec
mov
aad
pop
test
push
mov
jcxz
pop
fmull
mov
mov
lret
icebp
mov
fistl
push
fidivs
push
mov
jnp
cmpl
dec
arpl
pop
ljmp
fs
xchg
lock
pop
push
sub
ds
les
cmp
jmp
or
insb
mov
js
iret
cmp
or
sbb
jbe
xor
inc
je
jl
fwait
mov
pushf
inc
jne
dec
pusha
push
jne
jae
cmpb
stos
xor
data16
push
push
int
adc
nop
ror
out
xor
dec
fs
movsb
adc
popf
cwtl
cmp
bound
sarb
clc
cmc
adc
pop
jge
sbb
pusha
push
dec
sbb
lcall
jno
mov
idivl
pusha
test
js
jb
add
mov
pop
fsubr
repnz
mov
xchg
fadds
iret
fbld
push
out
xor
xor
iret
bound
inc
dec
pop
xor
jmp
setp
hlt
cwtl
ljmp
jmp
out
push
adc
or
pop
repnz
pop
jns
sub
pop
sub
cwtl
fadds
mov
test
outsb
out
mov
clc
out
jl
mov
mov
mov
push
mov
mov
jo
or
pop
mov
dec
pushf
arpl
dec
je
xchg
mov
add
and
jno
daa
fnstsw
and
mov
push
xor
idivl
pop
pop
js
in
jecxz
cmp
push
frstor
jmp
orl
dec
scas
sbb
cmp
push
arpl
call
mov
gs
sub
inc
les
repz
jp
dec
push
sbb
fsubs
xchg
mov
sub
cmp
xchg
andb
inc
xrelease
cmc
sbb
lahf
std
nop
adc
adc
es
add
mov
jnp,pn
pop
out
pop
cltd
push
cltd
jmp
idivl
out
xor
jg
std
lea
insl
fiaddl
dec
imul
movsb
hlt
rorb
test
js
mov
dec
mov
rclb
fmuls
dec
subb
sub
sub
pop
icebp
mov
inc
scas
subl
into
divb
gs
xor
repnz
sub
push
xor
stos
jge
push
mov
jb
jae
lcall
mov
jo
cmp
sbb
out
cmp
gs
in
xchg
inc
mov
push
sbb
out
sahf
push
repnz
xor
or
nop
push
jg
idivl
fisubl
inc
xchg
push
push
rorl
mov
xorb
push
sub
gs
mov
mov
test
add
aas
inc
aaa
add
jb
mov
iret
cmp
stos
test
push
rcrl
lock
lret
xchg
ss
aam
ret
pop
pop
push
and
push
into
insl
jne
adc
mov
cli
dec
or
mov
loop
cmp
dec
cld
mov
push
sarl
movsb
sub
es
cmpsb
mov
cmp
jnp
clc
shrb
sbb
outsb
mov
icebp
xchg
push
pusha
add
or
repnz
ljmp
popa
add
or
shlb
cmp
movsb
je
lds
adc
mov
adc
push
pop
mov
enter
jge
fs
fildll
mov
and
or
pop
dec
jmp
out
push
gs
clc
out
and
mov
xor
jg
cwtl
adc
inc
push
fidivrs
fmull
jae
cli
sti
pushf
imul
mov
aaa
fucomi
hlt
pop
orl
pop
adc
test
in
mov
pop
lcall
inc
icebp
fidivs
sahf
movsb
xchg
adc
jne
lret
ret
lret
leave
sti
sarb
stos
sbb
xchg
popf
leave
lds
jno
popa
popf
mov
nop
in
insl
js
fs
mov
ret
arpl
in
dec
leave
inc
clc
inc
inc
mov
mov
mov
jo
in
mov
nop
repnz
or
lea
les
divb
adc
sub
sbb
xor
cmpsl
fs
lret
inc
lds
out
sub
mov
mov
ret
jb
sbb
hlt
jb
stc
pusha
ds
call
and
ficomps
stc
shl
cmp
or
or
or
testl
jge
call
sub
push
and
hlt
test
push
mov
outsb
mov
and
mov
int3
int
clc
int
push
hlt
xchg
sbb
ljmp
lea
mov
dec
mov
push
repz
mov
repz
pop
stos
scas
pop
xor
and
jnp
ret
cld
fwait
pop
mov
iret
jo
sahf
and
mov
cmp
adc
inc
sbb
out
xor
movsb
es
xlat
and
or
or
adc
fcmovbe
inc
or
xor
xor
sbb
roll
or
int3
xchg
seta
dec
outsb
mov
add
push
sub
adc
into
pop
insb
in
aam
lods
bound
adc
cmp
xchg
cmpl
mov
mov
adc
repz
stc
loop
cmpsl
loop
cli
imul
fisubrl
mov
std
cltd
mov
imul
jns
xchg
push
cmpsb
je
sub
and
mov
push
popf
addr16
insl
push
mov
movsb
or
pop
mov
push
sahf
rolb
mov
adc
xor
dec
dec
xor
loopne
sti
int3
std
mov
in
push
insb
dec
nop
shrl
adc
jbe
aam
ss
xchg
arpl
xor
mov
in
fistpl
outsb
repnz
mov
inc
stc
pop
add
mov
or
nop
or
ret
bound
aas
jno
dec
imul
lcall
rcrb
outsl
mov
add
outsb
and
aas
movsl
lret
repz
mov
jns
outsb
mov
push
xchg
xchg
inc
lods
shr
dec
mov
jo
mov
xchg
in
ja
push
mov
pusha
mov
add
or
jbe
gs
inc
mov
pop
and
lret
mov
int
sarb
insb
test
insl
push
mov
add
jno
mov
push
pop
sbb
jl
or
push
in
sbb
lcall
lea
xlat
jecxz
cli
aad
jae
and
sub
call
stos
ret
jle
sbb
sbb
ficomps
dec
stc
loopne
cmpsl
fdivs
push
lock
pushf
pop
repnz
rol
faddl
clc
cmp
push
jbe
inc
clc
adc
nop
insl
push
adc
xor
ret
sti
inc
cltd
in
jmp
sbb
lods
andl
jl
and
or
xchg
sar
fs
sbb
movsb
call
loope
push
cld
xor
loop
adc
sub
scas
push
cmp
add
inc
lahf
jo
ja
scas
popa
out
mov
xchg
push
daa
cwtl
test
stos
test
scas
sbb
out
nop
js
and
ret
push
jecxz
mov
loop
add
push
add
imul
xchg
cmp
xor
xchg
cmp
ss
sbb
xchg
aaa
int
test
bound
sti
cmc
push
push
pop
inc
gs
cmc
or
xor
addb
loope
inc
push
mov
lock
cmpb
ja
shll
ret
pop
mov
jecxz
xor
clc
leave
test
ja
pop
mov
hlt
jae
mov
lcall
xchg
and
jge
stos
and
fistps
das
loope
mov
jmp
cmpsl
pop
and
jmp
xchg
xor
pop
xchg
jnp
sti
cmp
push
or
rol
cs
aaa
and
shlb
fsubl
scas
je
out
test
in
adc
push
fwait
inc
arpl
adc
and
shlb
data16
mov
jno
out
dec
repnz
pop
cmp
jle
fildll
mov
or
aaa
push
popf
push
pop
mov
test
cwtl
xchg
in
mov
xor
pop
sbb
aam
mov
test
xorl
fbstp
sbb
cmp
fisttpl
iret
push
test
jbe
mov
mov
aas
xchg
aaa
pop
cmp
pop
and
inc
sarb
dec
jno
insb
cmpsb
xor
fcoms
sti
mov
mov
call
filds
mov
int3
jae
pop
push
mov
gs
pop
aam
pop
jg
dec
lret
pop
jecxz
adcb
cmpb
jne
movsb
int
sub
add
fs
xchg
cltd
jno
mov
mov
xor
daa
adc
inc
add
icebp
sti
adc
ucomiss
xchg
into
fdivs
lcall
loopne
mov
mov
aad
daa
daa
out
lret
push
or
jb
mov
xor
dec
inc
add
xor
mov
loopne
pop
fucomip
mov
jmp
jns
xor
and
xor
adcl
xchg
and
nop
fs
or
jl
adc
sti
es
cwtl
cltd
inc
add
js
and
adc
xchg
mov
aas
xor
rol
idivl
cs
popf
mov
aaa
mov
dec
popa
out
out
call
leave
mov
jecxz
loopne
mov
mov
sub
loopne
ds
adc
xchg
leave
xlat
mov
mov
xchg
loop
in
loop
js
dec
sub
gs
dec
or
mov
push
ficoms
stos
cmp
test
mov
js
call
mov
add
or
fistpll
outsl
mov
mov
or
cli
sub
sbb
lods
push
cmp
ffreep
leave
popf
loopne
pusha
push
xchg
xor
cmpsb
and
repz
das
adc
jp
sub
mov
jecxz
jmp
inc
mov
pop
aad
aas
mov
fidivrs
jns
add
ficoml
push
and
push
popf
jg
lock
jbe
loope
inc
sbb
push
xor
cs
es
dec
sub
xchg
lock
enter
sub
sub
cmp
pop
jge
popf
mov
scas
jbe
add
and
xchg
cli
xchg
xchg
repnz
xor
mov
cmp
push
dec
mov
stos
adc
jmp
cltd
push
push
cwtl
push
gs
fnstenv
sub
test
mov
cld
jae
and
cmpsl
movsb
lahf
or
hlt
pop
cltd
xor
mov
cmp
scas
jne
and
pusha
mov
mov
jmp
bound
ljmp
adc
dec
sub
mov
push
retw
cltd
fsub
xorb
mov
frstor
sbb
xchg
jmp
cwtl
cmp
sahf
jae
sbb
cs
jp
cmp
fisttpll
clc
mov
pop
fdivrp
outsl
imul
add
adc
jnp
fsubrs
cmp
sbb
lock
in
push
or
cmpsb
add
ds
outsl
pop
and
inc
test
arpl
adc
loope
push
sub
ror
mov
add
in
subb
sbb
dec
xchg
adc
mov
das
addr16
jg
int3
imul
push
test
loopne
int
scas
fs
shlb
fld
outsb
orb
icebp
into
cltd
jb
inc
nop
xchg
mov
pop
addb
je
mov
pop
aaa
sti
push
inc
adc
dec
js
mov
mov
cmpb
push
cld
imul
mov
jecxz
test
and
aad
adc
and
and
pop
jo
aaa
jl
and
and
add
sub
in
pusha
dec
jno
sbb
test
fsubp
addl
jmp
add
aam
pop
adc
pop
cld
cld
movsl
scas
adc
out
sub
jp
int3
mov
push
sbb
sub
nop
loope
popf
xor
sub
add
inc
mov
pop
fcmove
aam
inc
shlb
mov
std
orb
adc
or
mov
je
div
adc
push
out
ja
pop
leave
xchg
cmp
bound
test
clc
mov
imul
cmp
das
sub
cld
inc
out
add
xchg
insb
push
mov
sbb
or
push
leave
adc
cmp
jbe
pop
mov
test
mov
and
adc
xor
or
push
add
cmp
fisttpll
daa
xchg
pop
push
pop
test
pop
mov
or
out
pop
jg
xchg
pop
push
ss
sub
fcmovne
mul
cmc
lock
push
sti
xor
negb
cmp
int
mov
cltd
cmp
int3
adc
xorl
dec
push
dec
iret
mov
cld
mov
lock
dec
fimull
cmp
push
in
jb
outsl
xchg
repnz
mov
enter
sahf
out
and
fstps
add
sub
mov
push
xor
jae
jmp
xchg
push
orb
aam
lret
imul
push
gs
add
mov
js
loop
rcll
scas
xchg
dec
shl
ret
out
xchg
pop
adc
mov
dec
inc
sub
sti
jecxz
aaa
ja
lcall
aam
push
mov
jmp
push
push
leave
dec
inc
ret
mov
mov
icebp
xorb
push
xchg
inc
pop
arpl
scas
inc
dec
xchg
mov
popl
out
fcoms
mov
out
jb
push
nop
ret
mov
mov
insb
fwait
pop
jo
inc
inc
push
aad
jnp
gs
push
mov
arpl
and
xchg
divl
add
stc
loop
dec
int3
das
incb
jb
and
inc
shrb
adc
jbe
mov
mov
cltd
ret
add
sub
xor
test
mov
push
ljmp
pop
das
shrl
je
mov
shrl
mov
add
xchg
lea
xchg
lds
mov
ja
sub
sbb
cmp
test
lea
stos
push
jno
shl
or
or
xor
mov
sbb
lret
cmp
cmp
lret
push
aas
sub
daa
mov
aas
mov
or
das
in
arpl
mov
dec
adc
out
mov
jne
push
jp
xchg
ucomiss
in
shll
jmp
add
movl
add
lds
push
pusha
out
dec
adc
and
test
ret
xchg
fdivrs
sbb
mov
jmp
cmp
shlb
xor
rorb
xor
mov
insb
mov
stc
jo
xor
scas
jge
adc
sbb
fucomi
les
sbb
subb
add
push
mov
clc
out
lcall
dec
movsl
mov
test
pop
mov
jns
test
ss
xor
mov
mov
or
sub
mov
cmpsl
mov
xchg
dec
pusha
jo
data16
fsubrl
mov
pop
mov
leave
inc
insb
jecxz
push
and
call
mov
mov
push
lret
push
sbb
jcxz
xchg
popl
sub
push
test
sbb
sub
dec
sub
inc
push
inc
pop
repz
lret
out
push
pop
dec
enter
in
call
dec
mov
jb
lds
je
adc
aas
das
xor
and
xchg
jge
leave
or
sub
paddsw
mov
orb
fcmovu
inc
out
and
mov
test
pop
jmp
and
cmp
seto
lods
cmp
adc
adc
xor
outsb
popf
mov
mov
pop
jae
out
dec
in
das
mov
mov
pop
popf
add
jns
rcr
icebp
mov
adc
push
xchg
pop
cmpsl
imul
imul
test
fisubrs
int3
vpsubq
dec
and
xor
das
loopne
jne
daa
testl
mulb
roll
inc
sub
in
adc
fwait
adc
stc
outsl
inc
cmp
sbb
push
xchg
cmp
dec
xchg
pop
imul
mov
xchg
roll
xchg
inc
jmp
xchg
jne
and
push
push
mov
pushf
jecxz
and
mov
push
sub
test
inc
inc
outsb
add
dec
ss
sbb
jo
mov
adcl
inc
add
cmc
mov
pop
dec
cmp
jns
in
jbe
xchg
jno
fdivrs
sbb
outsl
gs
adc
lcall
mov
add
dec
adcl
call
push
in
xchg
or
pop
cmp
inc
xchg
mov
loop
nop
in
push
aas
in
aaa
jnp
shlb
sbb
insl
jae
enter
pop
lahf
scas
mov
mov
pusha
out
mov
dec
push
ret
and
subl
shll
mov
add
lret
cmpsb
sub
adc
lahf
and
jne
loopne
repnz
push
push
add
sub
sbb
sbb
or
aaa
lahf
sbb
arpl
inc
mov
adc
or
adc
push
shlb
fldl
cmpsb
mov
mov
inc
lds
sbb
aaa
not
daa
sub
fisubl
stc
cmp
loop
fs
mov
dec
nop
xchg
out
pushf
repz
dec
stc
int3
push
sbb
mov
pop
aaa
dec
fcoml
ret
lock
mov
test
addr16
pop
inc
sbb
inc
movsb
push
add
int3
gs
dec
inc
jb
push
nop
pop
inc
out
push
lods
mov
sub
and
data16
xchg
fwait
pushf
adc
sbb
mov
movsl
jmp
into
inc
lock
adc
sbb
shl
cmp
clc
sub
mov
incb
lahf
js
add
outsl
call
inc
mulb
jmp
jl
dec
dec
adc
aaa
sbb
mov
xchg
iret
shrl
xchg
fcomi
call
das
lret
ljmp
mov
ret
dec
cmc
stos
and
arpl
imul
jp
arpl
push
iret
cmpsb
out
xor
addr16
fsubl
adc
fisubrl
xchg
pop
loop
sub
sbb
loope
lock
adc
push
xor
push
fwait
and
xor
and
dec
mov
sti
inc
and
jns
loope
or
outsb
adc
xchg
shlb
sar
xchg
aaa
popa
push
idiv
or
mov
ret
lret
pusha
adc
pop
mov
ret
push
xor
imul
andl
dec
enter
int3
enter
jp
jbe
jg
and
dec
insl
push
jbe
negl
lock
inc
sbb
outsb
sbb
jns
inc
adc
or
jae
xor
dec
imul
popf
or
cmp
jmp
push
mov
enter
mov
inc
sbb
xor
daa
xchg
and
out
lock
pop
or
inc
negl
jmp
pop
cmp
jb
and
dec
cli
xchg
outsl
jae
cmpsb
push
cs
xchg
lds
data16
imul
mov
lock
ss
mov
mov
mov
lock
leave
pushf
lds
mov
loop
sahf
lds
in
push
push
cltd
pop
fmull
lahf
loopne
jbe
rcrb
das
add
aam
nop
jne
lods
sbbl
jmp
mov
iret
mov
sub
fldl
and
outsl
je
cmc
pop
call
fnstsw
adc
ja
cmpsl
and
stos
cld
out
aad
fdivl
mov
add
xchg
sbb
add
imul
mov
jns
sub
jmp
ss
outsl
cmp
xor
in
cmpsb
out
or
jp
xchg
jmp
popf
loope
lods
js
adc
in
cmc
ds
sub
ret
cmpsb
inc
pop
fbstp
or
add
sbb
leave
cmp
in
cmp
push
fidivs
xchg
xlat
shl
pop
xchg
out
fadds
inc
xlat
jb
cmp
cmp
xchg
pop
sub
arpl
inc
inc
sbb
gs
jmp
ljmp
sub
xchg
xor
push
fiadds
dec
mov
ljmp
test
in
insb
pushf
cmovb
pop
push
es
mov
pop
in
inc
jo
adc
cmpsb
test
jnp
sub
mov
in
cld
lret
and
lret
push
push
pop
lods
flds
jecxz
cmp
fcoms
dec
or
jno
icebp
jb
xor
arpl
rorb
or
jb
xor
in
aad
cmp
js
mov
outsl
aad
cs
decl
or
xchg
or
dec
popa
mov
daa
pop
fdivrp
lret
add
inc
cmp
mov
adc
and
lods
int3
pop
jne
ja
negb
add
cmovb
cli
sub
jne
dec
or
xor
xchg
test
adc
scas
daa
dec
loop
repz
js
ret
test
pop
loopne
sti
or
sti
push
lock
sub
clc
loope
jge
xchg
lcall
fisubl
pop
scas
scas
int
leave
push
xlat
and
ja
test
clc
dec
xor
jo
andl
in
in
idivl
scas
inc
js
test
xchg
jmp
cwtl
jecxz
fdivl
push
nop
rol
dec
lret
jecxz
dec
sub
pop
fcmovnbe
fadd
inc
lret
sahf
or
mov
push
repz
xchg
and
add
dec
pop
jnp
adc
daa
push
push
or
dec
push
shll
test
xchg
mov
iret
lds
jae
push
test
jmp
mov
iret
mov
mov
out
insb
push
xor
incl
jecxz
pop
mov
inc
mov
repnz
lret
pop
and
and
pop
sub
and
sar
pop
mov
mov
dec
rolb
or
xchg
inc
loopne
xchg
sbb
jg
mov
lahf
sbb
push
mov
mov
loop
inc
add
mov
push
or
lcall
xchg
push
inc
dec
inc
int
fstl
test
fcomip
aaa
bound
cs
ja
pop
push
mov
leave
in
shrb
ret
mov
daa
pop
out
ret
push
and
cmpsl
andl
or
rolb
and
test
mov
test
pop
test
sub
lock
cltd
jne
lret
cmp
mov
mov
in
sti
in
dec
xor
das
pop
jbe
std
jl
or
xor
lods
mov
mov
add
inc
pop
push
arpl
mov
test
xor
sub
xor
test
jns
adc
adc
push
hlt
hlt
hlt
test
cmpsb
jae
and
pop
xchg
jl
cmp
shl
push
push
mov
lods
jne
aaa
xchg
push
lods
lret
push
mov
lods
imul
cwtl
or
dec
lret
loop
sbb
ret
pop
fistpl
in
call
pop
insb
push
daa
mov
mov
notl
mov
mov
icebp
jle
stos
pop
fdivrs
sbb
xchg
sarb
xchg
xchg
sbb
xlat
mov
sub
in
test
xchg
adc
sbb
sbb
mov
cmp
ficomps
in
sub
pusha
xchg
sub
jne
dec
ds
add
push
mov
jne
shll
int
movsl
into
sar
or
inc
inc
sub
pushf
roll
push
icebp
fbld
movsl
adc
inc
or
cmc
daa
movzwl
push
testl
movsl
pop
test
push
mov
sub
shlb
sbb
or
add
ret
or
lcall
ret
mov
xchg
cwtl
flds
shll
sbb
cmp
sbb
add
lret
xlat
shrl
repz
popa
pop
outsl
shrl
lahf
adc
inc
cmpsb
jmp
inc
addr16
ljmp
xchg
dec
add
xor
add
adc
adc
mov
flds
ss
add
cmp
lret
shrb
mov
in
push
inc
cmp
mov
push
or
mov
sub
inc
add
xchg
imul
add
hlt
imul
adc
enter
mov
mov
test
addl
mov
inc
xor
adc
les
inc
add
mov
adc
push
andb
fwait
or
fnstenv
into
test
lock
jle
cmpb
daa
imul
cltd
scas
dec
adc
add
mov
pop
nop
push
adc
xchg
push
xor
imull
mov
addr16
idivb
movsl
mov
scas
imul
xlat
add
sub
dec
mov
data16
ja
and
shll
data16
inc
xor
dec
cmpl
xchg
adc
mov
inc
pop
and
inc
out
mov
mov
out
mov
mov
sub
lahf
repnz
pop
icebp
aam
repz
fiadds
adc
icebp
push
pushf
mov
inc
cmp
cmpsl
push
push
icebp
xchg
sub
mov
xor
jg
adc
aam
dec
call
ret
fistpll
mov
arpl
xor
rorl
and
cwtl
sbb
fstp
xchg
jmp
js
out
mov
inc
pop
mov
test
jmp
and
mov
arpl
xor
push
mov
cmpb
movsb
mov
mov
rclb
adc
cmp
or
test
cmpsb
notl
mov
andnps
add
aam
mov
testl
aaa
mul
or
aas
enter
repz
push
pop
subl
sbb
int3
mov
packsswb
cltd
xorb
cltd
fisubrl
mov
mov
mov
adc
jnp
mov
mov
push
outsl
sub
pop
clc
mov
mov
mov
fdivrl
mov
fmul
gs
mov
xor
sub
call
mov
in
call
das
lea
gs
int
sub
inc
fsub
hlt
inc
int3
jmp
pusha
lea
mulb
pop
jns
cmp
cmc
xor
mov
cs
fld
inc
mov
fadd
rcr
lahf
push
frstor
cmpsb
dec
or
adc
inc
jp
dec
icebp
out
pop
daa
jmp
ja
mov
pop
fistpll
ljmp
and
clc
shlb
xchg
idivb
and
mov
push
mov
in
aam
inc
cmc
loop
push
stos
pop
add
cmp
mov
mov
jno
push
arpl
jae
cmp
xor
ss
mov
and
enter
jns
and
jo
or
inc
leave
sub
sub
std
lret
mov
push
into
loope
mov
cwtl
test
insl
aad
movsb
lods
xchg
jnp
mov
aaa
xor
mov
jae
dec
mov
imul
inc
js
ret
rorl
ja
pushf
push
mov
into
xchg
ja
outsw
sbb
pop
aaa
pop
lret
mov
aam
add
das
pop
push
push
inc
ror
jnp
rcrb
mov
add
ds
add
jle
imul
lods
jne
daa
and
int
aad
test
mov
pop
add
cmp
mov
lods
pop
add
pop
inc
lret
orl
xchg
jne
iret
mov
repz
testb
cwtl
addr16
aaa
cwtl
ficompl
jno
fnstenv
loop
xor
stos
sbb
fists
fadds
or
xor
outsb
jl
sarl
aas
negb
jne
cli
out
pop
aam
cmp
in
xor
push
in
das
cmc
add
inc
jnp
lahf
shr
jno
adc
or
arpl
ljmp
rcrl
add
jg
mov
mov
adc
enter
or
sub
repz
push
adcl
inc
ret
ja
rorb
orb
sbbb
or
cmpsl
sbb
sub
pop
push
data16
cli
push
lods
ret
push
nop
inc
mov
dec
bound
or
fdiv
movsl
insb
and
xorl
and
test
js
inc
or
jbe
loope
xor
push
xor
addr16
es
fldenv
adc
adc
std
pop
int3
xor
cmpsl
mov
inc
mov
xchg
or
adc
jg
xlat
repnz
gs
test
sub
gs
dec
sahf
out
cwtl
aad
push
test
push
pop
ss
out
pop
sub
jnp
rorl
sbb
pushf
push
mov
xor
je
sbb
pop
push
adcl
pop
or
std
repz
mov
lahf
cmp
dec
sub
lock
movsb
sbb
out
mov
sub
cld
fwait
add
pop
xchg
lds
iret
dec
into
cmp
lods
jns
mov
sub
dec
mov
fyl2xp1
ss
mov
push
or
call
xchg
aam
lret
mov
sub
insb
test
dec
ljmp
push
jae
push
out
mov
inc
testb
imul
insb
icebp
rcl
lock
mov
ja
lret
aas
js
push
ljmp
pushl
dec
addl
scas
adc
test
cmp
int
push
lret
fs
ja
out
jo
roll
or
cmc
cmpsb
inc
sbb
mov
mov
cmp
xchg
hlt
call
inc
push
fmulp
push
mov
xchg
xor
out
mov
ret
andb
ror
jb
pushl
push
adc
pusha
mov
ljmp
mov
adc
xor
roll
adc
pop
loopnew
aad
mov
lods
jb
add
xlat
icebp
or
mov
call
mov
jle
jge
sub
xor
scas
adc
dec
mov
dec
xchg
pushf
push
dec
sbb
push
add
inc
gs
testl
adc
mov
cltd
ljmp
pop
push
push
iret
or
inc
ljmp
push
sub
and
mov
sub
fs
push
jle
popa
jge
fdivrl
mov
lahf
rcl
fdivl
push
inc
sbb
das
xchg
push
mov
cli
int3
faddl
popf
test
adc
adc
adc
cli
adc
cmp
cltd
loop
jae
or
lea
mov
in
xor
cltd
mov
repnz
push
xchg
std
lret
mov
push
movsbl
shlb
orl
push
cmp
push
cmp
aas
mov
adc
scas
jo
dec
scas
pop
mov
push
pop
push
jecxz
or
jle
push
inc
xchg
cmp
negb
sub
repz
ljmp
repnz
push
push
clc
xor
cltd
decb
jg
insb
dec
mov
xchg
scas
jp
xchg
test
mov
rcl
dec
test
pushl
insl
bound
inc
lock
jae
iret
popa
ss
sbb
push
mov
xchg
out
mov
push
cs
mov
orb
mov
or
aas
mov
ret
inc
adc
jae
push
jo
incl
mov
inc
adc
iret
pop
ss
mov
lds
popl
push
jae
inc
xorl
mov
mov
jg
jge
sbb
fidivrl
sbb
add
lea
sbb
lods
push
int
mov
xchg
loopne
in
jle
and
mov
jge
test
mull
mov
or
pop
xchg
mov
test
or
sbb
inc
iret
push
xor
insl
shll
out
sbb
shll
aaa
fdivrl
pop
aaa
cmpsb
mull
ret
repnz
pop
pop
mov
mov
push
hlt
lret
ficoml
add
fsubrl
sub
mov
mov
in
cmp
add
push
aaa
add
sub
jmp
inc
push
adc
mov
jge
cmp
and
sbb
das
sub
or
adc
jecxz
rcrb
cmp
cmp
xlat
mov
movb
clc
arpl
inc
popf
pop
ror
cmp
and
jp
and
jnp
jnp
mov
jbe
in
xchg
xor
or
and
inc
pop
jl
neg
je
jo
inc
mov
mov
repnz
and
cli
xchg
stc
adc
mov
in
pusha
lret
ret
and
mov
vprotw
les
mov
mov
mov
lds
out
rol
cmpsl
mov
ffree
cmp
sarl
and
dec
mov
xchg
test
and
shrl
jge
mov
mov
push
xchg
scas
sub
pop
fldt
cmp
ljmp
adc
repnz
idivb
mov
mov
adc
loop
ret
icebp
imul
stos
push
imul
adc
cmpsb
cld
lsl
jb
mov
cmpsl
test
scas
inc
into
cmp
or
xor
sbb
rclb
inc
test
push
fsubrp
or
cmp
mov
sbbb
sbb
std
add
jg
xchg
popa
inc
imul
or
fldcw
dec
jnp
adc
xchg
mov
cmpb
fwait
mov
and
loopne
sti
inc
or
or
add
jo
dec
inc
leave
enter
pop
ljmp
xchg
pop
jae
and
ljmp
jmp
jnp
lret
rcll
pop
cwtl
imul
gs
mov
or
aad
idivb
pop
pop
mov
mov
inc
or
or
inc
fcom
xchg
xchg
or
sub
rcrl
mov
popf
xor
add
out
ss
lcall
fdiv
hlt
cld
lods
xor
push
arpl
out
loope
mov
push
mov
xchg
cmp
cmc
add
rcrb
jbe
cmp
rcl
inc
nop
jns
and
in
ljmp
or
xchg
mov
mov
cvttps2pi
pop
fwait
inc
mov
sub
insl
dec
cmpsb
stos
add
adc
fdivs
lods
and
insb
aad
add
stos
push
addr16
xchg
mov
mov
scas
aad
adc
jb
lret
shrl
lock
pop
fdivl
sbb
jne
hlt
push
push
insl
lahf
not
lahf
inc
xchg
fidivrs
repnz
sub
repnz
inc
dec
lods
scas
adc
sub
xor
mov
in
negl
insl
pop
mov
push
movsb
mov
movb
add
and
jge
mov
imul
sub
jne
inc
lahf
pop
xchg
push
rol
xchg
js
stc
or
pop
enter
je
cld
inc
jnp
lods
out
add
int3
mov
jle
addr16
xchg
fnsave
nop
sahf
in
lock
scas
arpl
dec
mov
inc
int
cltd
mov
mov
test
inc
lods
in
movsb
mov
jp
arpl
int
mov
jp
or
adc
aaa
les
pop
inc
iret
jae
jge
enter
or
or
stos
out
call
ja
out
ds
inc
mov
push
je
push
jne
icebp
adc
dec
fwait
test
out
stc
sti
out
aam
out
pop
xor
ret
mov
cmp
ljmp
into
mov
ss
subb
insb
adc
ljmp
jb
mov
jno
into
pop
es
fistl
loop
xorb
adc
es
fdivrl
repnz
loop
int3
fsubs
ss
lret
scas
sub
gs
imul
sub
pop
stos
stos
cmp
lahf
call
in
mov
das
scas
mov
int
ret
sbb
or
jae
push
scas
push
jg
sub
inc
xor
push
jo
test
addl
pusha
push
inc
inc
and
dec
sub
jnp
mov
in
in
jae
cmp
loope
jp
aam
loopne
popf
pop
enter
pop
in
aam
sub
dec
cmc
sbb
sub
and
cmp
xor
rcl
sbb
and
lahf
mov
sub
jle
mov
insl
icebp
pop
push
adc
lcall
stos
mov
and
sbb
ja
jecxz
cmp
add
mov
xchg
mov
fiaddl
mov
shlb
jmp
std
xor
pop
subb
pop
imul
sti
push
and
cs
mov
push
fs
int
mov
mov
inc
mov
inc
ficompl
jmp
bound
cmp
dec
aad
mov
lret
or
xor
and
xor
idivl
adc
subb
jge
jmp
adc
sub
add
dec
sub
add
jae
sbb
mov
outsb
loopne
mov
and
jecxz
js
add
test
push
dec
data16
mov
and
int3
mov
call
leave
sarb
fcoms
loop
repnz
and
add
movsb
push
dec
out
xor
hlt
jecxz
push
arpl
test
pop
or
lock
add
push
inc
jg
lea
mov
push
int
pop
ret
pushf
dec
sbb
aam
ret
xchg
mov
xor
fwait
jns
aad
jecxz
mov
adc
xchg
mov
sub
aad
test
or
cmpsl
and
sti
or
shld
cmpsb
push
mov
mov
jae
insl
push
mov
out
mov
imul
mov
dec
mov
and
adc
jg
or
lock
xchg
ret
dec
pop
in
sbb
mov
pop
add
stos
pop
fwait
clc
negb
out
fs
mov
shrb
add
mov
cmc
shlb
lret
mov
mov
lahf
and
pop
mov
push
sti
add
inc
pusha
mulb
test
sub
nop
mov
nop
call
repnz
cmpl
and
fwait
repnz
pop
add
enter
adc
xor
dec
int
fs
lret
popa
mov
scas
jbe
and
pusha
push
addr16
fdiv
inc
std
in
mov
fildl
ret
decb
and
jl
leave
mov
andl
jg
dec
jle
push
mov
pop
loop
pop
add
pusha
out
mov
dec
lock
gs
popa
ror
insb
cmp
imul
repnz
loop
adc
movsl
mov
sub
fsubp
leave
push
fbld
push
push
jle
mov
lret
shrb
int3
mov
clc
notb
enter
mov
cmp
inc
dec
xor
outsb
addl
fbld
mov
sarb
pop
lods
call
int3
dec
cmp
call
lcall
xor
pop
xchg
iret
or
out
jo
outsb
adc
dec
adc
xchg
mov
sub
jno
push
into
jg
mov
imul
or
push
add
mov
mov
push
mov
sbb
pop
xor
push
mov
pushf
mov
pop
pop
inc
sbb
fwait
and
pop
mov
and
testb
cmc
cmp
in
outsb
jle
aam
xchg
lds
cltd
cmpsb
xor
sub
movsb
add
dec
add
mov
cli
mov
ret
dec
aaa
es
add
les
push
push
test
sarb
das
dec
scas
sahf
push
aad
sbbl
inc
add
imul
push
mov
cmp
aad
dec
sub
inc
arpl
mov
out
movsl
aaa
fs
fsubrp
mov
outsb
shlb
inc
add
push
push
cmp
mov
or
push
aad
aaa
repz
ss
jg
pop
pop
out
push
insb
fnstcw
mov
orps
lahf
ja
inc
arpl
push
or
popa
ret
fcmovnu
lret
jl
std
mov
inc
sub
jne
shll
loope
mov
daa
std
pop
stc
sahf
jg
sbb
cld
sbb
adc
jl
xchg
sbb
lock
sub
jo
jmp
icebp
mov
jge
lods
scas
dec
mov
adc
or
popa
or
scas
push
xchg
mov
xor
ss
outsb
push
aas
clc
pushf
aad
daa
ret
xchg
xorl
out
notl
adc
loope
imul
push
in
data16
mulb
aaa
enter
jp
movsb
dec
mov
dec
cmp
mov
cmp
xchg
and
ljmp
jle
shlb
sub
sahf
or
mov
stos
ds
cmp
cmp
js
pop
cmp
add
iret
call
cli
adc
lahf
test
or
push
dec
dec
mov
add
push
insb
enter
jo
and
jmp
adc
xchg
lahf
leave
mov
lret
test
lcall
call
jnp
inc
cmp
push
addr16
jmp
outsl
scas
mov
clc
cltd
test
xor
cmp
das
outsb
nop
push
scas
dec
adc
cmpsl
jl
dec
scas
fidivrs
pop
movswl
cmp
cmp
sub
es
dec
mov
push
test
push
popf
mov
les
roll
inc
scas
inc
jl
orb
test
sub
and
lcall
xchg
aaa
pop
xchg
loopne
mov
enter
add
xor
out
lea
int3
clc
lahf
std
and
mov
insb
xor
sub
out
in
jg
data16
sbb
pop
scas
xor
inc
mov
mov
mov
and
mov
lds
push
inc
sbb
jl
ret
jb
add
pop
out
dec
mov
imul
bound
subl
xor
inc
imul
dec
xchg
pop
lods
ret
int3
push
ret
outsb
je
add
fdiv
mov
jg
mov
int
jb
gs
dec
jmp
inc
xor
xchg
insb
jg
pop
push
mov
cltd
fisubrs
arpl
test
xchg
push
pop
ja
gs
jno
cs
ds
cmp
aas
decb
call
inc
and
aaa
pop
add
outsb
xor
mov
mov
call
cmp
lahf
pop
or
mov
push
or
test
lea
mov
insl
scas
mov
mull
movsb
push
fwait
adc
pop
adc
es
push
xor
in
mov
jp
jp
inc
sub
test
sbb
sbbl
lret
loopne
pop
lods
test
sahf
addr16
in
push
insb
xchg
cmp
sbb
jne
pop
lds
js
dec
test
sub
sarb
call
test
aam
out
xchg
jmp
mov
negb
les
and
movsl
divb
or
enter
clc
mov
cmpsb
leave
xlat
cld
in
jmp
xor
push
jl
push
shll
enter
mov
jns
jnp
lds
outsb
lods
pop
arpl
adc
shlb
pop
sti
jecxz
push
ret
mov
xchg
insb
jo
into
addr16
fsub
mov
push
mov
in
xchg
mov
add
and
test
and
mov
data16
test
ss
cmpl
mov
mov
jbe
mov
out
movsb
mov
push
test
jbe
fdivs
daa
mov
mov
or
and
or
add
out
test
jo
add
inc
inc
lods
xor
add
fstps
dec
push
cmp
xor
ljmp
ret
sbb
jnp
pop
cmpsb
fs
inc
loope
lret
jl
mov
push
cmp
test
xchg
pushf
sub
sahf
inc
sub
sbb
xor
xchg
cmpsl
push
xchg
jb
inc
push
rcrl
in
xchg
sub
dec
mov
rcr
notl
fsubrp
jo
aad
pop
push
pop
sbb
xchg
mov
js
adc
fwait
leave
shr
cmp
fdivrs
xchg
scas
mov
das
and
aam
mov
cli
jmp
dec
and
and
lock
push
daa
xchg
mov
pop
movsb
jbe
dec
and
test
rcl
lock
clc
sub
jp
mov
mov
xor
push
xor
dec
icebp
in
subb
add
mov
or
out
ja
mov
jns
dec
cmp
sub
iret
lahf
ja
mov
addr16
into
into
and
adc
icebp
push
jno
push
and
mov
fsts
sarb
pop
out
outsl
test
pop
mov
xor
xchg
cmp
cld
shlb
imull
adc
jle
xor
test
sub
cmp
aaa
aad
in
insb
and
mov
push
cmp
bound
repnz
fcmovnbe
dec
outsb
jb
xor
mov
lret
jne
popf
shrl
xchg
test
dec
imul
mov
adc
jno
mov
mov
sub
iret
pop
jnp
pop
movsl
xor
mov
jno
mov
mov
pop
aam
adc
mov
lar
loop
and
xchg
mov
lret
mov
sahf
cmp
into
lcall
mov
out
push
pop
sbb
sub
scas
daa
int3
dec
jmp
mov
in
sub
in
int3
adc
mov
je
dec
cmp
mov
xchg
xchg
mov
sbb
mov
or
out
cli
or
gs
mov
push
inc
or
and
sti
std
add
pop
imul
push
inc
pop
xor
pop
ficomps
cli
fstl
fisttps
pop
stos
mov
in
dec
sbb
cltd
fwait
rcl
dec
inc
mov
enter
cld
pushf
sbb
xor
push
repz
jl
adcl
cli
inc
jns
adc
jecxz
rcll
lcall
cmp
enter
iret
jecxz
and
stos
push
sbb
mov
scas
jmp
push
stos
sti
insb
cli
push
inc
outsb
call
ljmp
fidivl
push
cmp
rolb
dec
addr16
xchg
bound
xor
lds
les
mov
push
insb
mov
pop
or
push
mov
test
add
and
mov
push
test
adc
test
inc
dec
xor
mov
mov
push
test
mov
shll
add
sahf
rolb
andl
mov
mov
cli
shll
mov
out
in
in
call
push
push
es
xchg
pop
mov
sub
sbb
jg
scas
cmp
out
or
jmp
or
data16
xchg
cmpsb
adc
xchg
shlb
dec
es
dec
in
inc
xor
sbb
mov
mov
fimull
fs
fs
icebp
sub
push
or
mov
add
xchg
push
xchg
xchg
arpl
lock
stos
xor
lcall
jo
popa
scas
xchg
test
in
lods
pop
fildll
mov
push
dec
rcl
fcompl
mov
test
jo
jecxz
shll
adc
pop
out
sub
sbb
inc
mov
pop
mov
stc
mov
and
sbb
outsl
xor
jnp
addb
mov
cwtl
cmp
sub
or
cld
rcll
std
sbb
sub
cmp
inc
lret
cmpsl
in
cli
sbb
mov
into
test
inc
jno
fistps
dec
push
outsb
je
fs
xchg
sbb
jno
lcall
sbb
cmp
sub
adcb
dec
push
daa
mov
add
pop
jp
mov
mov
test
in
mov
pop
add
adc
clc
mul
sub
xchg
adc
mov
aad
inc
dec
mov
mov
mov
mov
rcrl
popa
xchg
lods
lcall
in
jle
add
inc
mov
jmp
sahf
in
and
stos
adc
push
mov
repz
ljmp
or
lods
test
enter
out
hlt
and
add
dec
fsubs
push
les
pop
jb
clc
test
sti
or
sub
adc
movsb
mov
test
mov
cmp
and
cmp
mov
cmp
aas
xor
mov
lcall
int3
sub
popf
sub
das
loop
add
and
sbb
pop
scas
cmp
sahf
ss
lea
fsubs
stc
pop
push
js
push
adc
movsb
mov
in
fmull
fcmovnb
lret
inc
or
mov
mov
test
dec
ror
fisubl
xor
jnp
jl
mov
test
mov
std
jmp
lods
pop
inc
dec
int3
mov
xor
mov
or
incl
push
xchg
pop
inc
pop
mov
add
mov
jb
or
std
jae
hlt
cmpsl
push
xchg
fisubrs
pusha
sti
pusha
xchg
cmp
stc
test
mov
addr16
sub
push
sub
jg
inc
xchg
inc
movsl
fistps
ds
std
push
sbb
sub
icebp
stos
fadds
aam
movsb
jmp
fdivr
rorb
andb
test
out
and
pop
ja,pn
sub
inc
cmpsb
scas
pop
call
fadds
test
into
loope
pop
jns
sub
test
pop
mov
mov
push
loope
push
adc
and
push
rolb
adc
out
add
ficoms
xor
xchg
sub
xchg
jo
jecxz
fnsave
and
mov
adc
pop
push
pop
std
push
push
cltd
mov
int3
call
popa
std
cwtl
jg
jns
leave
outsb
jbe
ds
pop
daa
addr16
adc
jge
scas
or
pushf
pop
stos
je
sti
cli
jle
add
inc
lods
or
cltd
data16
xlat
xor
sbb
add
cmpsl
pop
leave
test
stos
mov
inc
addl
out
xor
mov
push
cmp
mov
add
subb
xchg
jge
orl
cmp
xor
inc
xchg
ds
push
xor
scas
adc
push
decl
icebp
clc
xchg
pop
and
test
dec
add
bound
mov
jae
icebp
or
sub
rol
jae
inc
int
inc
mov
push
js
push
cmpsl
or
pop
lods
subb
ljmp
out
insb
daa
repz
jg
stos
mov
mov
sbb
push
mov
pop
cmpsb
scas
insl
dec
and
in
jne
ja
fwait
test
out
bound
cld
inc
enter
jecxz
out
jg
jl
cwtl
testb
xor
ret
dec
jl
fcmove
js
std
cmpb
inc
scas
lds
fnstenv
adc
mov
sbb
movsb
lret
pop
je
mov
mov
out
sbb
call
jmp
push
dec
or
out
int3
movsb
jno
push
or
inc
in
mov
pusha
and
mov
mov
imul
int
decl
mov
test
mov
lods
cmp
leave
mov
mov
cmpsl
add
test
mov
push
popa
cwtl
and
stc
push
bound
into
cmpsb
test
jg
stos
sbb
int
inc
fldl
cs
xor
and
les
dec
sub
cmp
fwait
xor
loopne
xchg
sub
xchg
adc
test
mov
rcl
lret
pop
mov
aas
adc
fisttpll
mov
xchg
aas
inc
ffreep
imul
mov
aaa
or
fidivs
adc
or
cmp
pop
add
jo
stos
pop
test
dec
gs
cld
pop
cld
push
xor
push
test
mov
out
xor
loopne
or
loop
into
jae
jmp
add
push
sbb
or
pop
gs
clc
mov
insb
xor
test
xchg
mov
or
mov
mov
out
jge
pop
ljmp
in
xchg
mov
cld
mov
xchg
sbb
clc
sbb
sub
sbb
pushf
bound
jo
fiaddl
and
out
rcrl
cld
mov
shlb
dec
sub
addl
ret
iret
xorb
or
mov
iret
push
push
loopne
cmp
setnp
fidivrs
in
xor
pop
adc
jp
out
imul
mov
les
gs
inc
test
cltd
inc
dec
cltd
mov
sbb
jmp
and
scas
add
ds
loope
bound
xchg
int3
cli
xchg
and
cmp
mov
aaa
xchg
repz
xor
jbe
lea
out
cmp
icebp
pop
pop
jnp
in
push
and
pop
leave
mov
lods
popa
cmp
cltd
fbstp
mov
shr
fmulp
jmp
adc
out
cmp
hlt
ss
out
adc
dec
adc
cmpsb
sahf
into
jno
roll
out
dec
push
sub
cltd
aam
and
cmp
push
mov
fsts
xchg
cmp
xchg
mov
add
jbe
in
call
xor
loope
lods
sub
mov
gs
lcall
add
das
jge
inc
sbb
xchg
pusha
cmc
loopne
fistpl
xchg
pop
rcrb
push
sub
insl
cmp
add
out
filds
xor
or
sub
stos
fildll
movl
repz
pusha
jecxz
mov
mov
jle
add
shlb
test
xchg
repz
cmp
cmp
sbb
shll
fcmovne
push
mov
js
popf
in
push
lea
or
jecxz
dec
mov
or
les
ja,pn
cmp
xor
insl
in
sbb
cmpsl
sbb
insb
dec
inc
shrl
test
mov
aad
add
imul
dec
call
xchg
adc
mov
adc
lods
ds
popa
sub
xor
inc
dec
xchg
negl
and
loop
insl
adcl
ljmp
dec
shrl
nop
jge
clc
imul
jbe
idiv
sti
adc
mov
cs
outsb
call
xchg
scas
rolb
dec
jl
loope
fs
decb
dec
xchg
movsl
fldl
cmp
in
decl
jns
das
js
push
pop
cli
scas
pop
or
add
lcallw
pop
mov
xor
cmp
mov
jo
fsub
subl
fs
push
jecxz
lret
cmp
popl
xor
mov
sbb
push
cltd
inc
jb
pop
mov
mov
cmp
clc
dec
dec
inc
lcall
lods
jl
mov
lea
adc
sahf
imulb
push
popa
ljmp
dec
jle
fcmove
lcall
into
int
cwtl
dec
adc
xchg
mov
xchg
out
rcl
fdivrs
xchg
stc
lret
push
ds
mov
das
fs
rcrb
out
or
adc
adc
mov
mov
loope
push
mov
scas
inc
or
ret
aas
and
or
and
cmpsb
inc
mov
and
and
mov
lods
push
movq
sbb
in
ret
lret
sub
cmpsw
outsb
push
repnz
loopne
icebp
repz
mov
push
and
inc
dec
movsb
mov
fs
inc
or
jns
ret
xor
add
cmp
lahf
cmp
icebp
mov
cmpl
sahf
and
pop
mov
add
dec
mov
pop
iret
shrb
fmul
aam
daa
pop
fcmovb
sub
fdivrs
push
into
and
loopne
ret
pop
test
adc
jge
dec
adc
xor
pop
or
mov
push
ret
push
subl
cmp
jbe
aaa
clc
jp
and
rolb
jle
jg
std
je
adc
repz
cld
dec
jl
jb
mov
jmp
and
dec
fldt
adc
cltd
cltd
mov
fcomps
or
jge
dec
mov
in
lds
call
and
push
roll
pusha
add
inc
pop
push
push
fucomip
jl
or
test
movsb
fstpl
jbe
jbe
pop
in
xorl
cmp
jnp
lea
pop
add
lods
push
cmp
lods
push
pop
dec
jae
xlat
jle
pushf
fnsave
push
xlat
imul
mov
jns
fs
fadd
in
cmpl
pop
add
pop
popf
mov
push
int3
jns
pop
or
sub
pop
mov
out
inc
orb
xrelease
cs
mov
mov
cmp
popa
mov
xchg
or
mov
inc
fiadds
cmpl
sub
call
adc
mov
inc
xchg
insl
imul
lds
imul
aam
push
jle,pn
bound
fdivl
sbb
adc
xlat
xchg
insl
shlb
in
icebp
pop
cwtl
test
cwtl
out
ds
fsubrl
add
notb
add
sub
cwtl
push
ja
push
jns
loopne
mov
lahf
inc
repz
loop
sub
test
dec
fiadds
cld
outsb
mov
in
xchg
cmpsl
inc
out
rorl
shll
loop
sub
cmpsl
orl
in
mov
fdivrl
sahf
add
cmpsl
je
mov
xlat
xor
std
mov
adc
out
inc
movsb
fisubs
push
xchg
xchg
nop
scas
push
negb
or
mov
call
out
or
xor
cli
mov
loope
push
arpl
xchg
sahf
enter
fimuls
mov
or
lods
fnstsw
jnp
inc
xor
pop
sti
inc
int3
fcmovbe
clc
aam
mov
iret
pop
fimuls
movsb
fists
mov
bound
outsb
and
aas
jle
push
dec
dec
in
xchg
outsl
int3
je
out
push
dec
or
fmul
cmpsb
call
in
es
icebp
add
add
pop
cmp
int
fbstp
enter
aaa
stc
gs
jne
push
aam
imul
iret
inc
dec
jns
and
xchg
dec
mov
movsb
mov
or
into
ret
and
xchg
enter
stos
es
cwtl
push
or
stos
add
test
enter
lcall
jl
mov
fucomp
xchg
pop
mov
scas
idivl
xchg
jg
fmull
sub
push
push
adc
lds
movsl
aad
fimull
jl
popa
inc
cmp
rorb
out
loope
jp
arpl
pop
xor
mov
and
pop
inc
pop
sbb
add
scas
int
repz
pop
cmpb
movsb
lcall
ud1
mov
push
and
pop
or
test
jne
sub
xchg
xchg
data16
lds
inc
movsb
push
mov
jb
fmull
in
dec
int
mov
arpl
lret
cli
adc
xchg
cmp
aam
lds
outsl
into
add
pop
inc
xor
mov
adc
push
jmp
mov
sbb
out
lahf
and
mov
adc
inc
fsubrs
in
pop
jge
ljmp
sub
outsl
mov
and
cmpsb
adc
cld
outsl
adc
inc
xchg
xchg
pusha
nop
push
add
imul
out
adc
fnstsw
ret
out
pop
aam
pop
test
arpl
push
pop
xchg
fsubl
and
out
jne
mov
lods
cmp
lea
arpl
ja
fs
and
inc
in
fdivs
jns
add
nop
adc
mov
mov
xchg
dec
cmp
pop
pop
pushw
inc
add
xor
repnz
in
mov
and
dec
pop
clc
cmpsl
mov
mov
mov
iret
dec
das
sahf
test
add
and
and
mov
xor
mov
cmp
test
jg
js
ljmp
leave
leave
xor
pop
pusha
movsb
out
lods
popf
repz
jp
xchg
pop
adc
incb
call
xchg
cld
mov
adc
inc
loopne
push
adc
mov
push
stc
mov
je
push
mov
js
lahf
pop
adcl
and
das
or
pop
mov
add
lods
call
mov
int
aam
push
push
and
aaa
xchg
push
cli
mov
fwait
or
mov
inc
lahf
push
pop
enter
rcrl
jne
daa
cwtl
jecxz
mov
xchg
or
jno
pop
xlat
sbb
xchg
mov
xor
lea
mov
pop
xor
sar
daa
int
fidivrs
rclb
add
push
arpl
mov
js
pop
jae
lret
mov
cmpsl
inc
mov
test
mov
xchg
push
lcall
inc
notb
cwtl
adcb
dec
pop
lahf
cmp
adc
xor
adc
test
fwait
sbb
scas
mov
xor
aaa
mov
pushf
push
nop
pop
lcall
iret
xchg
int3
sahf
lds
and
sub
add
dec
insb
xchg
int3
mov
sbb
cmpsb
in
test
gs
test
out
mov
cs
insl
imul
dec
dec
xchg
pop
ljmp
inc
pop
sub
jg
ss
rclb
dec
fisttpl
cwtl
lcall
mov
into
xchg
pop
xchg
add
xor
xchg
pushf
xor
cmc
xchg
in
in
ds
rcll
ja
js
jns
fwait
push
out
push
push
lea
cmp
adc
dec
xor
iret
cs
cmc
jo
stos
pop
cmp
adcl
add
gs
rol
addl
push
icebp
dec
jmp
mov
adc
sbb
in
sub
divl
out
outsl
xchg
lret
js
lods
or
stos
and
jns
stos
mov
or
in
add
xchg
stos
mov
mov
xchg
stc
in
fadd
sbb
mov
loopne
inc
subl
out
sub
and
jne
sarb
pop
fs
mov
xchg
sbb
test
cmp
fnstsw
aam
sti
aad
xor
mov
lahf
int
mov
cli
sub
sbb
mov
dec
jp
pop
adc
xchg
jo
xchg
xor
and
inc
out
lcall
adc
jmp
test
jle
setb
call
jecxz
jge
stc
clc
mov
out
addl
push
inc
pop
inc
sub
bound
in
ja
mov
out
xchg
shrb
negb
lsl
cli
inc
add
pop
xchg
push
and
xor
pop
imul
adc
push
test
pop
vpmacsdd
iret
addr16
adc
imul
int
or
pusha
sbb
adc
mov
cmp
cld
inc
or
pop
inc
sbb
push
jbe
mov
jle
imul
cmp
inc
xor
mov
bound
sub
es
or
outsb
jbe
sbb
xchg
stc
mov
xor
lea
repnz
mov
dec
js
push
test
pop
orb
lahf
imul
sub
push
add
xchg
mov
sbb
icebp
lods
popf
inc
mov
pop
jae
jmp
mov
mov
xlat
stos
push
jnp
call
aas
xor
aam
add
test
es
outsb
fsubl
jle
pop
cmp
jnp
adc
xor
mov
mov
hlt
fstps
jo
sarl
xchg
in
inc
fwait
xor
into
lds
imul
pop
test
jae
jns
xchg
pop
nop
add
cltd
lods
enter
push
dec
lock
sub
jl
push
call
cmc
addb
gs
xchg
cli
mov
dec
xchg
jae
in
xor
sub
add
mov
jnp
pop
mov
cmpsl
xor
lds
sub
pop
movsb
jno
in
adc
out
inc
pop
cli
or
pop
fisttps
mov
sub
imul
clc
jle
dec
push
gs
inc
shl
pop
dec
xchg
adc
cmp
cmp
pop
inc
lea
push
out
and
jp
xchg
cmp
insb
add
and
mov
jbe
fwait
mov
loop
push
fidivl
stos
mov
adc
adc
cmp
sub
filds
cmp
mov
xchg
mov
leave
push
jb
nop
fwait
add
or
repz
cld
pop
lea
xchg
push
dec
mov
popf
fs
ret
push
inc
push
push
cmp
repz
mov
dec
ljmp
push
push
inc
mov
divl
cmp
lret
lods
or
push
push
jnp
and
lea
pop
les
xchg
dec
mov
pop
arpl
pop
and
add
xor
mov
ret
dec
sub
add
ja
jnp
ds
cmp
cs
insl
mov
movsb
mov
outsb
les
rorl
mov
pop
jns
lahf
add
test
cmpsl
repz
jle
je
jecxz
xor
jae
out
xchg
jo
cmp
pop
mov
into
xchg
xchg
mov
rcll
sub
mov
lods
dec
cmpsl
jne
sbb
gs
pop
aam
inc
pop
pusha
scas
cmpsb
xorb
jge
in
or
ja
rorl
xchg
outsb
or
sbb
inc
insb
push
inc
cs
inc
pop
lahf
xchg
es
cmp
pop
inc
lcall
jo
fwait
data16
jns
fstp
sbb
cmp
mov
imul
shlb
scas
jnp
test
jae
mov
xchg
out
fwait
outsl
cmpsb
lcall
jle
push
lahf
js
sub
mov
or
fs
lock
or
xchg
mov
orl
sbb
jo
jbe
push
jno
pop
jp
lret
cmp
in
adc
cmp
add
inc
cltd
jne
mov
hlt
adc
lret
dec
in
mov
aas
cmp
cmpsl
mov
rol
cwtl
das
mov
xchg
into
imul
pop
xchg
inc
rorb
push
xchg
mov
jne
mov
out
enter
mov
pusha
jge
adc
and
jns
jbe
out
jbe
xlat
add
jl
fisubs
jl
and
pop
scas
push
jl
mov
xchg
cwtl
xor
pop
ficompl
ja
pop
lock
inc
ret
sbb
aaa
hlt
push
aas
daa
xchg
dec
pop
movsl
sbb
into
mov
data16
out
jns
mov
inc
into
aas
sarl
mov
divl
xchg
jbe
lahf
and
mov
mov
fistl
outsl
cs
sti
flds
fcmove
test
mov
and
fidivs
jge
imul
lock
lods
sti
push
sbbl
daa
fimull
stos
jns
lds
stos
dec
dec
loopne
dec
add
imul
push
lea
add
pop
add
mov
lods
lods
pop
stos
jmp
outsl
movups
insb
add
push
push
cmp
sbb
xor
push
pushf
int
mov
loopne
jne
jnp
gs
push
jo
dec
adcb
lret
out
test
dec
out
ret
pushf
dec
cmc
call
xchg
sbb
data16
aad
mov
xchg
and
nop
popa
push
pop
cmp
sahf
dec
cmp
jl
sbb
xchg
add
ss
sbb
push
push
arpl
stc
push
movsl
mov
sub
push
jmp
andl
call
mov
test
and
inc
adc
cld
xchg
notb
mov
loopne
ja
and
push
stc
in
test
in
or
shll
stc
popa
sbb
pop
or
pop
xlat
cmp
rolb
scas
xchg
push
add
fcmovnu
pop
ja
sbb
pop
lret
in
jl
push
jmp
and
jecxz
add
xchg
xor
add
mov
aas
arpl
fucom
dec
incb
mov
xor
cmc
mov
repnz
mov
fwait
dec
stos
jmp
push
sahf
xor
or
inc
call
xchg
sub
cltd
jae
jbe
push
cmp
push
mov
sub
sbb
xchg
loope
adc
das
int
add
xchg
das
movaps
xchg
inc
xor
pop
adc
sub
cmp
inc
xchg
sbb
scas
mov
pop
or
add
lods
inc
push
and
imul
stos
xchg
cwtl
sahf
enter
cld
aad
das
push
add
and
cmp
xchg
xchg
pop
fsubs
clc
cmp
xchg
jmp
cmp
push
jae
cmp
pop
dec
fs
dec
or
les
mov
test
pop
sahf
mov
pop
popa
jmp
add
fdivl
mov
mov
enter
cld
out
xchg
push
aas
jmp
pop
cmp
mov
ja
xor
add
jnp
mov
cmp
push
mov
mov
and
popf
xchg
push
add
lret
push
enter
test
xorl
mov
add
test
and
adc
jbe
pop
sbb
mull
shrl
aas
jo
cmc
test
sub
popf
fstp
loope
shlb
es
sub
mov
pop
in
in
das
push
sti
inc
out
gs
repz
and
fidivl
negl
mov
mov
dec
fdivr
testl
ret
pop
mov
sbb
xchg
rol
sbb
frstor
out
push
jge
pop
and
jl
pop
push
fimull
addr16
iret
int
mov
in
decl
add
xchg
icebp
push
scas
inc
or
sti
je
pop
dec
adc
les
scas
rcrb
int
scas
test
inc
add
jae
and
cld
clc
lods
mov
push
dec
ja
insb
push
mov
aas
sbb
and
imul
sub
in
outsl
xlat
xlat
jne
es
loopne
push
or
in
push
ds
aam
jle
mov
mov
push
pop
out
jo
sahf
pop
push
loop
ss
sahf
lock
scas
mov
icebp
fsub
js
add
pusha
mov
pop
mov
lahf
mov
jb
jmp
jb
xchg
cmp
ljmp
mov
sbb
mov
das
push
xor
lahf
aad
ds
jge
mov
movsl
out
push
ja
hlt
sbb
sub
cltd
xchg
flds
std
repz
xchg
sahf
xor
aam
lahf
jb
fldl
xor
mov
add
and
ljmp
pop
jae
scas
insl
cwtl
pop
insl
mov
mov
lahf
add
mov
out
rcl
icebp
fsubs
in
push
ds
out
cmp
test
das
and
sub
arpl
pop
pop
insl
sub
or
or
dec
mov
pop
jp
or
mov
popa
mov
jle
pop
add
pop
insl
rcr
push
imul
xor
adc
pop
movsl
cmpsl
loopne
and
push
cmp
ret
out
add
add
xor
rol
adc
std
adc
xor
cmp
jne
mov
int
pop
mov
aam
mov
cmp
sub
stc
pushl
leave
sub
sbb
pop
push
xchg
scas
leave
dec
xlat
xor
xor
cmp
movsl
cltd
call
mov
fists
out
xchg
jmp
subl
imul
ds
popa
mov
mov
loopne
mov
ja
sti
je
ret
insl
sub
fiadds
jb
xchg
in
std
push
into
sbb
in
mov
aad
cmp
pop
into
nop
jnp
push
mov
jne
jb
mov
sbb
xorb
js
xor
adc
jno
mov
xchg
fwait
push
sub
fstps
jp
leave
xor
and
fsincos
dec
mov
dec
xchg
adc
pusha
subb
push
call
add
cli
or
cmp
into
or
test
repnz
sti
push
pushw
sub
fs
loop
xor
dec
cmpsl
clc
cmc
add
inc
xor
and
xchg
cli
push
push
lods
inc
push
jmp
stos
push
enter
pusha
xlat
xor
lcall
adc
jo
out
das
arpl
xchg
es
jnp
jae
xor
js
mov
mov
std
xchg
push
js
testl
jno
jne
jp
test
loop
push
add
and
aad
inc
pushf
xchg
mov
stc
dec
call
push
cmpsl
aaa
sbb
jg
xchg
rcll
in
clc
js
xlat
push
sbb
xlat
dec
cmp
in
cli
cmc
dec
pop
and
sbb
xor
jnp
push
or
xchg
js
pop
lret
cmp
sti
bound
xor
jmp
sub
outsl
pop
lds
push
mov
sti
int3
sbb
pop
adc
incl
mov
dec
imul
aad
pop
popl
fidivrl
loopne
xlat
mov
fdivrl
imull
lea
out
lret
outsl
sahf
push
mov
ljmp
pop
popa
in
popa
js
sahf
and
mov
xor
mov
test
xor
fneni(8087
mov
fwait
pusha
dec
inc
ja
cmpsl
add
sbb
out
mov
adc
xchg
loop
mov
xor
addb
sbb
pop
cmc
push
or
sub
dec
shlb
jb
lds
popf
fdiv
push
rol
dec
add
add
aad
push
inc
xchg
lret
fs
clc
ucomiss
lods
jb
mov
in
lahf
sub
pop
gs
push
clc
xchg
stos
mov
ret
gs
inc
jmp
pusha
leave
lcall
sbb
mov
popf
add
std
adc
roll
pop
adc
pop
mov
mov
fistps
outsl
xor
inc
pusha
jbe
ljmp
es
outsb
jle
fsubs
pop
shll
ret
jg
xor
push
cmpsl
cld
imul
add
scas
pushf
mov
movsb
in
call
xchg
dec
sub
sub
mov
lds
call
testl
dec
push
ror
cli
adc
test
inc
inc
shrl
les
adc
inc
xlat
sbb
push
push
into
pusha
mov
jbe
leave
sti
test
js
aad
mov
jp
pop
mov
jle
xor
pop
sbb
mov
xor
adc
mov
mov
xchg
fcoms
add
and
popa
outsl
cmpsb
push
or
sbb
repz
or
sub
or
cwtl
mov
insb
inc
sbb
and
jbe
mov
lock
xor
add
ss
push
mov
jge
cmpsl
mov
pusha
push
xchg
cwtl
mov
cmpsb
adc
cmp
lock
nop
mov
dec
into
cmp
adc
testl
add
inc
je
jb
roll
and
push
or
dec
das
sti
jge
lea
out
sbb
icebp
je
test
addl
mov
insb
jecxz
cmp
sarb
and
outsl
sub
push
imull
inc
aas
pop
mov
inc
jp
pusha
or
movsb
pushf
loope
aam
xchg
mov
mov
inc
rol
or
pushw
lcall
es
mov
mov
scas
pushf
aas
sub
sarl
jge
pop
xchg
repz
fsubrs
mov
sbb
jl
fidivl
decl
fsubrs
out
jno
ss
lea
sahf
adc
aaa
movsb
pop
push
and
xor
test
pop
mov
pop
sbb
pop
push
dec
pop
inc
cmc
sbb
mov
sbb
mov
cwtl
jl
gs
mov
adc
mov
insb
js
into
cmp
js
arpl
push
cmp
inc
sahf
mov
dec
jg
sub
insl
mov
cmpsb
sysret
mov
mov
mov
dec
add
clc
or
jne
xchg
bound
xchg
out
mov
test
repnz
ret
mov
fdivs
das
in
mov
cmp
pop
jl
xchg
jecxz
and
jge
scas
pop
rorb
stos
je
mov
rcll
dec
or
push
movsl
loope
pusha
aas
loop
ret
mov
jno
xchg
and
mov
xor
imul
dec
dec
xchg
mov
mov
cwtl
mov
in
sahf
movsl
pushf
lcall
cmp
jnp
or
in
add
or
sbb
dec
loope
fimull
jmp
dec
add
inc
mov
shll
pop
sub
mov
enter
out
mov
push
icebp
mov
or
mov
pop
ss
loop
fucomip
aam
xchg
rcrb
jno
xchg
aam
cmpsb
paddsb
pushf
int
xchg
adc
inc
or
sub
cli
test
or
adc
jl
rcrl
stc
filds
imul
sbb
rcll
xchg
cmp
or
push
daa
fstps
mov
xchg
pop
jnp
fistl
dec
leave
pop
lret
test
shrb
xchg
testb
bound
inc
pop
lods
push
stos
cmpsl
xchg
ret
cmp
sbb
sub
mov
ds
adc
add
es
jge
push
das
faddl
cmp
lods
sbb
int
out
dec
xchg
add
negb
sub
sub
pop
dec
std
adc
cmp
jle
je
psubq
jp
rcrl
push
dec
test
lahf
cmp
insb
sbb
bound
xchg
dec
jl
test
sub
and
push
cmp
shlb
push
shll
rclb
mov
aam
int3
sti
paddusb
enter
lcall
dec
out
js
cmpl
mov
push
xchg
aaa
lcall
mov
xlat
mov
push
ds
fmul
mov
ror
jecxz
cmp
pop
sub
cmp
xor
js
fimuls
mov
test
xchg
xor
ret
or
icebp
insl
aad
and
cs
imul
xchg
mov
loopne
imul
mov
jmp
jb
call
mov
dec
into
push
ljmp
and
and
imul
mov
mov
xor
mov
jns
scas
sub
pop
clc
sub
mov
and
shrb
fst
push
dec
inc
int
mov
xchg
fs
lea
push
scas
dec
xchg
pop
das
xor
fcoms
ss
sub
sub
sub
sub
js
repz
push
sbb
pop
in
nop
jl
or
adc
and
pop
stc
jns
inc
jg
jmp
mov
pop
cltd
and
dec
xor
cltd
ret
inc
mov
mov
std
push
pop
and
movsl
adc
icebp
xor
adc
lret
iret
jbe
jp
fisubrl
mov
cli
fwait
push
int3
int
in
les
nop
xor
sub
stc
adc
sbb
jo
pop
and
pop
add
into
mov
pop
enter
leave
lahf
mov
outsl
and
iret
and
ds
pop
xor
mov
mov
aaa
daa
call
outsl
jnp
outsb
dec
pop
popa
ret
das
push
push
pop
imul
aam
inc
sub
lcall
sub
jp
loope
mov
addr16
fistpl
in
pop
sahf
cmc
inc
je
pop
pop
leave
enter
int3
insl
jp
insl
adcb
lahf
pop
daa
sub
pop
lcall
in
js
push
clc
jnp
addl
fnop
sub
pop
jns
inc
fldcw
mov
adc
lcall
pop
addr16
mov
inc
adc
call
xchg
jle
loopne
or
les
repnz
cmpb
rcrb
adc
mov
jle
out
jo
jae
jle
jmp
mov
sbb
iret
orb
pop
fstl
or
jae
inc
mov
xlat
fwait
mov
fs
movsl
push
or
xor
mov
pop
mov
mov
stos
mov
jnp
xor
ret
push
cmp
popf
sub
xor
add
add
mov
outsl
dec
xchg
mov
ja
std
add
roll
dec
xor
int3
imul
stos
mov
sbb
les
loopne
pop
ret
push
adc
mov
bound
ret
ds
int3
cli
pop
movsb
dec
popf
push
xor
jecxz
dec
cmp
aam
mov
add
mov
into
or
test
cmp
cld
push
push
cld
mov
imul
addr16
sarb
movsl
pop
add
xchg
lahf
inc
dec
les
sahf
inc
xorb
hlt
pop
mov
shll
call
mov
cmp
push
jp
jl
jbe
mov
sarb
and
jo
pop
in
fdivl
inc
pusha
loope
adc
xor
movsb
or
in
xchg
add
in
jne
outsl
iret
pop
loop
loope
cmp
rclb
xchg
dec
scas
sbb
sub
push
test
rcrl
movsl
mov
push
push
out
sub
mov
in
pushf
es
mov
sti
pop
dec
push
aas
icebp
icebp
std
or
fisubl
jl
cmp
pop
fldl
pop
in
loop
stos
push
int
dec
imul
mov
or
dec
outsl
jne
aas
inc
xor
and
loop
cmp
xor
loopne
mov
mov
fmul
leave
cmp
ret
daa
push
cmpl
rcll
pop
mov
mov
jl
lods
xor
pop
addr16
scas
das
popl
jle
mov
gs
pop
xor
sub
push
js
xchg
xchg
mov
vmwrite
add
or
mov
mov
outsl
adcl
in
jnp
out
mov
inc
popf
jno,pt
daa
push
sar
in
dec
adc
dec
ss
sahf
cmp
add
xorl
add
inc
mov
add
imul
fistpl
js
inc
cmp
ret
pop
sbb
mov
mov
cmp
push
pop
scas
es
xchg
sbb
push
fidivrl
stc
push
jmp
pop
pop
sbbb
sarb
dec
in
xchg
aas
out
testb
and
xor
cmp
mov
sbb
mov
aas
pop
sti
inc
mov
lds
je
xchg
lret
stos
stos
adc
hlt
fisubrs
xor
dec
mov
or
dec
gs
test
sub
into
enter
mov
pop
xchg
xlat
inc
pmuludq
loope
repz
pop
and
xor
adc
sbb
stos
lock
imul
adc
into
lock
push
jecxz
dec
xlat
inc
imul
mov
and
mov
and
jecxz
rorl
dec
or
cmp
xor
fisubl
inc
jne
mov
lcall
shr
loopne
cli
pop
fxch
pop
enter
jae
ret
das
iret
jmp
add
addr16
jne
sub
and
or
in
jnp
in
dec
fistpl
popa
pop
flds
test
pop
idivl
test
jecxz
sub
dec
cli
std
repnz
mov
dec
sub
and
xchg
xor
aam
sbb
aad
xchg
lret
jp
pusha
xchg
cmp
jmp
cmp
add
push
popf
int3
cmp
or
sub
xchg
in
sbb
pop
cmc
lods
xor
popa
int
iret
loopne
adc
mov
jnp
scas
inc
dec
sub
inc
or
test
and
push
inc
cmp
cmp
insb
iret
jl
call
dec
and
pop
andb
cld
adc
jae
sbb
shll
aad
ljmp
jge
inc
xor
or
scas
sbb
popa
add
ret
clc
push
imul
loope
aas
fnsave
out
xor
lock
ret
cs
out
out
mov
dec
out
sub
lret
xchg
sbb
mov
in
ret
cmc
js
subl
mov
cld
clc
push
loope
divb
xor
mov
mov
pop
mov
outsl
push
scas
lret
lret
jle
jle
sti
or
mov
loop
cmp
ja
int3
mov
outsl
dec
fsts
jl
cmpsb
mov
and
push
jno
sbb
cmp
add
or
mov
int3
test
insl
adc
dec
icebp
mov
cmp
movsl
pusha
pop
mov
ljmp
ss
adcb
scas
shlb
mov
and
or
jbe
mov
sti
out
inc
or
xchg
dec
fistpll
test
lods
fbld
shlb
pop
scas
sti
dec
scas
in
pop
sub
scas
inc
mov
adc
mov
jg
mov
mov
xor
sub
push
mov
mov
inc
push
jg
cmp
andl
aad
icebp
pop
xchg
insb
pop
aam
add
xchg
dec
cmp
in
lods
mov
cmp
push
or
push
sub
jno
inc
icebp
out
je
icebp
fwait
push
mov
jnp
movsl
pusha
pop
sbb
xchg
pop
add
ja
add
or
jno
fidivl
mov
daa
stos
sarb
inc
loop
push
sub
movsb
ret
mov
push
dec
push
in
stos
mov
sbb
fcmovbe
rolb
dec
popf
into
mov
sub
inc
inc
shrb
or
lcall
jne
in
gs
xor
in
mov
outsl
xchg
sbb
loope
outsl
test
mov
adc
jmp
inc
mov
or
xor
cmp
adc
and
dec
adc
psadbw
lock
sub
ret
iret
mov
xor
push
cmpsl
mov
adc
sbb
push
or
int
and
sub
mov
jb
out
in
ja
jp
add
push
and
dec
or
add
mov
out
into
je
mov
bound
mov
mov
daa
jns
and
inc
push
popf
fidivrs
data16
and
je
fwait
mov
ret
dec
cltd
mov
and
adc
sbb
outsb
mov
xor
test
cmp
dec
out
fwait
pop
nop
movsl
movb
pop
sub
mov
push
repz
jnp
rcrl
sahf
jnp
push
or
outsl
mov
inc
jge
add
lret
call
lods
xor
xchg
sbb
outsl
test
cmc
xor
push
dec
push
inc
imull
cmp
ljmp
add
jo
jo
std
mov
out
xchg
jmp
mov
cmpb
push
cmp
in
cmc
lock
pop
sub
push
out
push
push
js
and
or
insb
nop
cli
shll
ret
fisttpl
cmp
dec
sbb
lods
mov
ljmp
ret
and
in
sub
sbb
test
sbb
add
jge
rorl
dec
jmp
das
fdivl
in
loopne
call
xchg
ret
popa
and
aaa
imull
cwtl
push
lods
cmp
adc
addr16
mov
add
dec
mov
insl
sbb
movsb
ret
mov
push
popl
test
mov
fildll
imul
fistl
shl
dec
dec
lcall
cmp
jge
pop
addr16
sub
scas
ror
push
das
out
in
inc
mov
mov
pop
test
into
rcl
pop
mov
pop
add
mov
xchg
idivl
cmp
jnp
sub
and
outsb
fs
test
pop
jecxz
fidivs
ret
jmp
movsb
mov
xchg
add
lea
pop
xchg
loopne
outsb
out
aam
in
inc
push
mov
mov
mov
jns
xor
lret
and
add
shrb
pop
int
cld
pop
jno
mov
jmp
gs
or
sub
adc
aam
jo
test
repz
push
pop
inc
das
or
out
scas
or
mov
int3
int
mov
clc
dec
pop
outsl
out
test
notl
dec
fmul
push
movsl
adcl
shlb
shll
mov
and
cmc
push
pop
hlt
ficompl
insb
sti
push
mov
fisubs
stos
lea
xchg
xchg
scas
daa
mov
xor
ret
dec
jecxz
or
xor
into
push
mov
testl
dec
cmpl
sub
dec
push
fnstcw
jle,pn
inc
push
sub
xchg
jo
in
mov
sbb
lock
cld
clc
clc
int3
sar
sbb
sahf
cs
mov
jb
movsl
mov
ret
pop
pusha
mov
ret
sbb
sti
mov
sbb
and
cmp
xorb
mov
pause
cli
jno
das
push
inc
sbb
jle
das
pop
adc
incl
fsubl
vhaddps
pusha
and
mov
sbbl
jo
inc
js
pusha
mov
incb
rcl
fldl
adc
int
inc
lcall
js
stos
pusha
mov
imul
mov
pop
das
fistpll
cmp
popf
mov
imul
or
sarb
mov
les
cli
stos
ss
cltd
mov
inc
adc
stc
inc
push
repz
inc
mov
or
into
pop
adc
imul
aam
xchg
pop
js
sti
loope
mov
bnd
outsl
pop
cmpsl
lods
shr
icebp
icebp
in
fisubrs
loop
push
mov
jecxz
lods
dec
push
dec
aam
into
outsb
frstor
cmc
incb
int
test
pop
cmp
or
adc
xchg
cmp
aad
jecxz
pop
inc
ja
push
jp
das
pop
mov
into
data16
adc
jno
aam
lods
adc
adc
dec
cmp
add
ficoml
sbb
sbb
or
mov
aas
std
negb
lcall
mov
fisttpl
fdivl
lahf
adc
lods
cmp
call
in
push
cmp
call
cmp
push
sub
jmp
and
lret
movsb
or
push
adc
daa
movl
je
outsb
and
or
data16
pop
fwait
cmpsb
pushw
negb
js
xor
in
lea
dec
mov
push
int
mov
mov
cltd
add
sbb
cmp
dec
inc
inc
in
lods
add
jo
pop
aad
scas
insl
popf
shlb
xchg
fsubrl
fmul
lods
inc
inc
pop
sbb
pop
sahf
jo
mov
adc
ficomps
rcrl
bound
or
inc
mov
out
pop
xor
lds
and
insb
xchg
jp
mov
mov
fsubl
sub
jecxz
dec
mov
adc
mov
adc
pop
and
rcrw
out
push
or
test
mov
sahf
daa
arpl
fcmovb
xor
push
adc
xor
gs
and
push
mov
xor
inc
test
and
push
in
fwait
repnz
sbb
hlt
ret
inc
fwait
imul
fsubr
int
mov
mov
shrb
stos
lods
xor
fdivrs
pop
cmp
mov
rcl
xor
sahf
imul
cmpsb
cli
adc
arpl
in
div
xchg
mov
arpl
push
mov
xchg
mov
inc
xor
lea
and
sahf
rclb
lahf
push
pop
in
or
bound
lea
cltd
cmp
inc
adc
mov
sarl
cwtl
push
outsb
ljmp
sub
push
sbb
lret
and
iret
vmovdqa
adc
out
and
js
mov
fnstenv
or
dec
xchg
out
mov
mov
lahf
lret
pop
add
mov
sahf
fstpl
scas
shlb
mov
mov
adc
fsubl
cmp
dec
fisttpll
das
rclb
cmp
loope
lahf
lcall
and
mov
xchg
mov
mov
inc
aam
lds
orb
sbb
lock
mov
xchg
leave
into
mov
mov
push
cwtl
mov
mov
fs
test
jb
in
xchg
jmp
rolb
lds
ja
out
test
and
outsb
mov
andl
insl
adcl
out
add
subb
or
test
aas
mov
pop
jne
movsb
or
dec
add
mov
sub
scas
fidivrl
out
fs
jmp
push
lcall
or
push
sbb
jb
ljmp
push
mov
push
xor
ss
dec
mov
movsl
fbstp
aad
fiaddl
and
loopne
sub
and
fcompl
mov
rorl
pop
jecxz
and
adc
stos
mov
and
xor
add
xchg
jns
insl
aad
lods
jbe
or
add
inc
hlt
nop
fcoms
mov
sbbb
or
fwait
das
mov
arpl
test
jg
outsl
mov
nop
gs
mov
test
mov
call
sbb
sarl
inc
scas
and
aaa
js
jmp
mov
orb
dec
int
xchg
push
pop
add
mov
rorl
pop
incb
cmp
aas
or
xor
or
cli
jg
adc
neg
aad
xor
pop
movsb
loopne
ss
inc
adc
push
xchg
mov
cmp
in
and
movsl
dec
lods
sbb
rcrl
fnclex
out
jge
sub
mov
or
mov
add
popfw
sub
and
add
and
fldt
push
lods
add
aad
aaa
jmp
xchg
fstps
dec
outsl
jnp
mov
out
jecxz
cwtl
pop
aaa
pop
test
ja
push
ljmp
test
pop
pop
test
push
nop
les
mov
jg
mov
fiaddl
scas
daa
mov
mov
lcall
cwtl
add
fiaddl
sub
test
pop
and
clc
lret
scas
aam
ds
sbb
enter
mov
insl
cli
loopne
push
fwait
xor
cs
jmp
pusha
test
jecxz
testl
sub
cmc
push
xchg
and
gs
arpl
in
idivb
pop
ja
mov
inc
pop
data16
rcr
js
popf
mov
pop
hlt
jae
jo
test
fstps
ret
push
jae
add
sbb
jb
mov
and
xchg
cmp
jmp
xchg
add
and
sub
mov
int
fsubr
sbb
addr16
mov
mov
lahf
hlt
rorb
repnz
xlat
dec
sbb
push
or
mov
ss
push
mov
pop
fwait
xor
xchg
gs
mov
scas
out
das
hlt
jmp
mov
cli
cmp
loopne
jne
cltd
cmpsl
mov
push
jnp
add
mov
cmpsb
fcomip
std
pop
les
fwait
add
rcl
sub
shll
imul
xchg
fwait
mov
push
xchg
or
xchg
dec
adc
jno
in
push
cmc
daa
rcll
mov
push
pop
mov
std
scas
adc
out
fsubp
decb
test
fldcw
mov
in
xchg
aas
aam
dec
aaa
pop
jne
mov
cld
xlat
jmp
jne
cmp
xor
dec
xchg
sahf
mov
mov
in
and
loope
fwait
ret
inc
jmp
popf
stc
fdivr
out
xor
lods
lret
jecxz
jae
xchg
inc
and
rcl
stos
xlat
nop
adc
insb
shl
gs
sub
outsb
mov
cmpsl
insb
push
sbb
in
push
add
jge
inc
outsb
test
int3
jg
dec
icebp
push
add
stos
xor
repnz
or
xchg
stos
aas
xchg
pop
jge
jge
insb
inc
sub
mov
sub
lcall
push
cmpsl
fwait
jo
movsl
loope
or
icebp
lea
push
push
sahf
out
inc
out
sbb
mov
mov
pop
pop
mov
sbb
mov
lcall
ss
std
push
inc
mov
scas
lret
xchg
push
push
inc
or
fisubl
xchg
jge
call
cs
lock
inc
mov
xor
fwait
rcrl
sbb
cmp
imul
stos
push
aad
push
jmp
jae
dec
cmp
iret
cld
subl
movsb
or
xchg
jb
mov
mov
add
cltd
fwait
adc
aaa
cmc
pop
adc
les
push
pop
mov
pushf
out
mov
sub
dec
add
and
xchg
jae
lahf
adc
mov
xchg
cld
cltd
sbb
sub
jne
and
or
divl
sub
mov
test
mov
xchg
mov
loopne
or
xchg
mov
dec
sub
std
mov
xchg
adc
sub
cmp
mov
or
sub
fldcw
lahf
mov
dec
into
imul
or
push
sahf
and
lahf
add
pop
mov
out
pop
push
jbe
xchg
add
pop
addl
jbe
aaa
iret
jmp
fsubrl
imul
mov
sbb
jmp
and
xor
xor
add
les
jno
mov
lods
dec
jecxz
push
mov
iret
xor
repz
outsb
mov
pusha
push
xor
sub
and
push
mov
dec
insb
push
icebp
cld
cwtl
fldenv
or
mov
push
imul
adc
adc
cmp
pusha
mov
in
mov
add
adc
or
fucomi
movsb
fbstp
xchg
mov
lock
mov
imul
pushl
ds
jl
pop
lea
mov
int
mov
mov
pop
jecxz
inc
adc
inc
mov
icebp
jle
cld
stos
push
lods
insl
jecxz
jne
sbb
jmp
jge
inc
in
jnp
aas
add
inc
push
jmp
lahf
xchg
pop
mov
out
ljmp
out
add
sub
sbb
insl
in
xchg
sub
ds
pinsrw
mov
arpl
cmp
adc
xchg
sbb
loope
mov
push
scas
dec
xlat
movsb
push
jecxz
pop
inc
sbb
lea
mov
fs
mov
mov
jae
mov
pop
mov
or
dec
out
ja
lds
pop
into
data16
xchg
test
mov
adc
mov
and
or
cltd
sub
add
xor
loopne
xor
insl
adc
mov
pop
rcll
jle
mov
xor
out
pop
inc
in
xchg
push
call
sbb
inc
cmp
dec
cmp
aad
sbb
mov
push
and
popa
daa
int
out
scas
sub
mov
push
push
mov
dec
xor
cld
fidivrl
pop
jnp
cli
push
add
jp
ds
inc
test
test
pop
neg
std
test
adc
pop
aas
dec
mov
je
aaa
pop
sub
mov
arpl
pop
outsb
loope
loope
insl
into
xchg
inc
xchg
orb
dec
mov
mov
pop
dec
mov
or
pop
cmpsb
push
mov
cmp
hlt
out
push
xor
sbb
cmp
aas
fs
loopne
or
das
inc
loop
sbb
xchg
ljmp
test
mov
test
ror
cli
aam
out
nop
andl
inc
out
adc
xlat
mov
in
mov
adc
fisubl
adc
fisubrl
fs
dec
outsl
xchg
pop
xchg
mov
mov
sbb
xlat
xor
loopne
sub
xlat
sbb
popa
pusha
fcomps
aas
jne
or
lods
scas
push
mov
dec
enter
into
push
jo
xchg
push
aaa
push
fiadds
das
mov
mov
fadds
fnstsw
jmp
movsb
lret
or
xchg
inc
dec
pop
mov
sbb
push
add
push
mov
dec
pop
movsl
rorl
mov
insl
push
test
and
rorb
inc
xor
pop
fstpl
jae
out
mov
rcr
mov
inc
push
xchg
xchg
pop
or
jle
scas
popa
cld
mov
gs
outsb
mov
push
adc
mov
cmp
mov
stos
cltd
mov
stc
int3
jle
push
stc
scas
pop
cmp
mov
loope
imul
xor
into
mov
iret
and
sub
imul
ret
fnstsw
icebp
js
fwait
mov
bound
or
enter
cmpsl
pop
sbb
lcall
dec
test
cmpsl
int
jne
setnp
test
push
push
xor
mov
into
cmpsl
or
mov
mov
ret
test
mov
inc
lock
sbb
mov
lret
or
mov
roll
test
pop
dec
inc
rorl
imul
xchg
or
pop
push
sbb
imul
jno
rcl
negl
orl
mov
sti
arpl
add
and
sar
push
sarl
or
pushf
or
xchg
sbb
pusha
test
mov
add
gs
repz
pop
or
xor
cld
or
mov
inc
shll
or
loop
test
out
mov
mov
or
pop
sbb
mov
pushf
xchg
ret
mov
pop
lods
xlat
icebp
mov
jg
movsb
arpl
jecxz
fistpl
cltd
lahf
jbe
mov
je
mov
je
subl
mov
shl
sub
cmpsb
insl
les
sbb
test
imulb
add
loop
or
mov
lahf
not
insb
idivl
xchg
lods
cmp
mov
repz
mov
and
into
cmp
xor
clc
push
dec
xor
movb
sbb
int3
dec
pop
sbb
scas
andl
push
fs
outsl
aaa
xchg
pop
xor
int
push
rcrb
ss
scas
sub
idivl
and
add
cli
les
loope
out
mov
rorl
push
bound
adc
xchg
mov
sbb
into
push
fsubs
sub
ret
into
aas
mov
arpl
ret
pop
in
push
jg
test
xchg
stos
pusha
pop
bound
or
mov
add
sub
insb
xchg
jge
data16
mov
stc
jb
addr16
cli
ss
cli
rclb
out
out
adc
test
inc
mov
mov
adc
es
push
fistpll
jns
int3
and
sbb
daa
xor
stos
fnstenv
mov
xor
cs
out
and
cwtl
or
popl
popa
ret
repz
xchg
cmp
fsubs
mov
test
test
lret
mov
dec
loope
ljmp
stos
repnz
cmpsb
mov
sub
inc
pusha
dec
inc
mov
jp
mov
jmp
repz
mov
cli
ljmp
es
fstps
cmp
lcall
movsl
sbb
jae
int
xor
lret
pusha
popf
icebp
xchg
call
sub
fwait
sahf
mov
xor
icebp
call
mov
pop
mov
dec
lods
dec
push
subb
add
push
mov
xchg
sahf
out
outsl
push
jne
scas
fs
mov
push
jbe
mov
jle
insb
daa
dec
lret
popa
andl
mov
mov
push
outsb
loopne
xchg
mov
ja
shl
das
push
stos
sbb
jns
fldcw
pushf
leave
rclb
adc
scas
in
dec
cld
ljmp
adc
pop
mov
scas
jbe
push
ja
sbb
call
and
add
lret
jbe
xchg
test
movsb
movsl
mov
ret
ss
clc
pop
xor
adc
cmpsl
inc
jmp
xor
mov
add
mov
jle
push
mov
or
sub
or
jecxz
or
add
or
xor
and
rcll
lds
sbb
dec
lret
shrb
mov
outsl
out
nop
cwtl
jne
sub
imul
mov
aam
mov
adc
cmp
dec
arpl
dec
fs
sbb
lret
cs
stos
loopne
mov
mov
mov
out
cld
in
sbb
pop
add
and
inc
leave
dec
adc
mov
es
or
daa
js
scas
sub
xlat
shlb
or
push
cmpsb
addr16
je
test
sbb
das
mov
nop
jns
fcomps
sbb
shlb
jbe
dec
inc
call
fs
dec
ss
sbb
sbb
mov
sub
push
mov
mov
lds
mov
mov
sti
loope
sub
lahf
mov
lea
into
mov
pop
enter
imul
pop
jle
iret
or
jno
cmpsb
xchg
adc
xchg
mov
jns
pop
pusha
xchg
cmp
mov
loope
pop
lret
int
sbb
cmp
push
mov
mov
stc
adc
in
aad
jne
or
cs
mov
pop
lret
dec
js
int
loopne
pop
jne
pop
pusha
xchg
mov
imul
lods
fwait
popa
les
mov
inc
aam
mov
xchg
add
cmp
ror
mov
shll
jge
sbb
jmp
or
outsl
cmpsb
and
sub
inc
pop
xor
test
mov
mov
movsl
push
std
bound
addl
or
mov
dec
out
cmc
add
sbb
or
into
addr16
fwait
cmc
mov
sahf
cmpsb
mov
mov
test
pop
push
cld
push
or
xchg
call
xlat
lea
mov
aad
or
js
lds
js
stos
sbb
testl
mov
arpl
outsb
mov
ja
stc
rcrb
fildll
ds
les
mov
imul
xchg
pop
mov
call
and
scas
aam
ret
fs
jmp
aam
inc
add
fnstenv
mov
in
xchg
xlat
xchg
sbb
mov
mov
clc
jp
push
lock
shlb
inc
arpl
insl
pop
test
in
fisttpll
cmp
enter
adc
pop
jb
jg
daa
stos
adc
mov
clc
sub
cli
xchg
and
mov
xchg
nop
aaa
stos
es
adc
dec
lea
test
cmp
aam
adc
push
aas
lcall
add
sub
jns
clc
and
mov
in
out
leave
mov
mov
cli
or
cmpsl
fldln2
xchg
inc
dec
mov
scas
xchg
call
adc
push
jb
jmp
or
xchg
jo
les
mov
je
movsb
es
cmp
inc
fidivrs
fiadds
sub
shr
into
stc
das
inc
pop
adcb
addr16
inc
jae
mov
pop
pusha
ret
or
iret
mov
push
rcll
stos
cmp
negl
push
dec
jnp
cmp
fwait
je
xchg
imul
jb
mov
loop
xor
gs
mov
push
jnp
xor
or
dec
push
jae
clc
jg
sahf
jg
xchg
scas
ret
test
jae
adc
push
pop
mov
out
xchg
mov
out
sub
mov
jmp
xchg
or
rcll
movsb
mov
stos
mov
cmp
std
pop
xchg
lcall
pusha
mov
gs
push
adc
pop
pop
mov
aad
nop
orb
adc
mov
jbe
inc
es
popf
dec
inc
pop
jne
jmp
or
fs
sbb
and
xor
mov
stc
rorl
fs
add
push
inc
lret
mov
mov
aad
add
lea
lea
inc
mov
jecxz
or
es
int
pusha
inc
rcrb
in
jecxz
xchg
jecxz
inc
or
clc
ficomps
xchg
lds
pop
xchg
les
xchg
fcoms
jle
push
mov
negl
and
sbb
inc
add
or
nop
sti
add
adc
sti
adc
ljmp
scas
mov
cmp
xchg
fst
out
ljmp
or
je
jne
pop
test
xchg
out
sbb
insb
out
cmp
and
dec
sbbl
and
out
cmp
pop
mov
xor
xchg
test
sahf
push
mov
sbb
mov
loopne
aas
outsl
mov
jge
clc
cwtl
pop
xor
lahf
lcall
sub
xor
pop
outsb
xchg
jb
arpl
mov
stos
push
dec
mov
pop
adc
xor
psllq
sbb
sbb
mov
aam
aas
push
cmpsl
outsb
aas
out
sahf
cli
out
mov
int
jge
aaa
ss
lret
sbb
aad
gs
mov
sub
mov
inc
js
xor
mov
and
add
sub
test
and
movsl
iret
cmp
cmpl
fiaddl
lods
jno
xchg
mov
jge
sub
aam
push
adcl
fstps
std
push
ja
fs
dec
xor
xor
adc
inc
loopne
pop
inc
adc
stos
and
pop
aaa
jp
inc
and
push
stos
cmp
scas
outsb
xchg
fwait
cmp
mov
and
mov
and
push
and
stos
jnp
imul
adc
cmp
stos
or
lret
lret
subb
es
push
xchg
test
int
mov
pop
add
push
fcmovu
cmp
js
add
sub
cmp
mov
test
ja
lods
adc
pushf
ret
cld
add
ret
out
imul
fs
pusha
push
cmp
lock
popf
mov
dec
mov
mov
add
pop
gs
mov
sbb
lret
in
jmp
in
pop
arpl
cmp
imul
gs
fcoms
dec
sbb
js
inc
leave
push
pushf
and
inc
adc
jecxz
mov
cmp
aam
stc
lret
movsb
out
cmp
dec
in
cmp
push
aaa
insb
lds
dec
sub
and
mov
push
stos
adc
pop
jns
ja
pop
xor
add
mov
inc
fisubs
stc
faddl
test
or
xchg
out
mov
xchg
leavew
mov
lret
jno
lea
cwtl
push
rolb
pop
jle
jmp
add
xor
push
and
inc
mov
fcom
insl
leave
fs
push
inc
out
sbb
inc
rcr
mov
inc
sbb
lea
imul
and
ljmp
push
pop
call
stos
int3
ror
and
testl
stos
dec
cs
or
repnz
sti
repz
fcompl
xor
push
aam
mov
pop
int
jmp
mov
mov
or
scas
popa
xchg
shll
hlt
arpl
inc
push
loopne
inc
pop
cmp
or
fwait
aaa
inc
lea
adc
ss
shrl
sbb
in
mov
pop
add
inc
dec
aas
pop
xor
clc
cs
jno
jmp
test
outsl
ljmp
pushf
mov
mov
sbb
jmp
and
int
aaa
pop
shll
mov
inc
jns
ret
pop
jns
loop
in
nop
mov
sbb
aas
pop
jp
adcb
pop
loop
inc
and
jle
mov
xor
mov
imul
inc
scas
out
mov
dec
scas
mov
xor
sub
lret
insl
dec
jle
inc
push
inc
jb
xor
mov
or
sbbl
repnz
dec
push
jne
add
add
repnz
sub
jg
push
pusha
jns
mov
dec
repz
or
jne
xlat
insl
stos
aaa
pusha
sbb
xchg
xchg
jmp
mov
pop
or
test
std
and
pop
dec
out
add
jbe
add
xchg
mov
outsl
push
cmp
mov
xor
inc
push
mov
cmp
sub
clc
adc
cmc
loope
sbb
cld
xor
mov
cmp
loopne
or
sbb
loopne
push
sahf
and
xchg
testb
repz
jb
dec
sbb
inc
push
stc
sub
add
xchg
out
sub
adc
mov
out
jecxz
pop
jg
inc
cmc
jle
mov
add
push
cmp
maskmovq
mull
fwait
jle
fsub
cld
insb
imul
jecxz
xor
negl
cmp
call
int
inc
ja
sub
push
cs
cmc
imul
leave
inc
inc
fdivrp
push
cmpsl
nop
dec
and
mov
cmp
shlb
sub
stos
out
andb
orb
andl
into
jge
cmp
imul
not
xchg
push
imul
mov
arpl
pop
or
inc
jmp
out
lds
hlt
mov
ljmp
inc
inc
mov
cmc
data16
and
sbb
fdivrp
jnp
hlt
iret
hlt
imul
test
sub
mov
cld
xchg
addb
or
sarb
fnsave
aad
scas
sub
xor
xor
out
cli
adc
mov
lock
popa
sbb
les
aam
mov
adc
cmc
mov
int
cld
movsl
and
xchg
mov
push
mov
dec
add
dec
insl
js
jo
mov
xchg
aaa
xchg
mov
push
movsl
scas
add
dec
insl
in
jbe
xor
jmp
data16
mov
adc
mov
roll
jle
sub
inc
lcall
ljmp
mov
mov
add
mov
lahf
lcall
jmp
mov
jp
push
xchg
std
bound
jns
cli
arpl
into
in
fsub
ja
inc
jnp
or
fildll
imul
dec
xchg
xchg
cld
push
mov
fcomps
rcrb
insl
push
icebp
push
pop
dec
jo
adc
push
jmp
pop
dec
arpl
lock
scas
jo
roll
cmp
cs
ss
pop
jo
dec
cld
std
fcomp
sbb
dec
mov
mov
xchg
mov
inc
mov
mov
mov
loope
leave
jns
stc
pavgw
lahf
xor
jle
pop
rcr
mov
decb
loopne
movsl
jo
fwait
inc
push
sub
sbb
push
sub
stos
sub
mov
sbb
das
cmp
jb
int
lock
pop
pop
add
in
insl
xchg
push
dec
mov
shrb
xchg
inc
fld
cmpsb
mov
es
out
ret
sbb
jge
xchg
cltd
aam
jmp
and
cmp
dec
add
cltd
cltd
pop
int3
mov
pop
push
arpl
mov
add
mov
jb
insl
push
push
jmp
cs
mov
cmp
sub
push
inc
iret
mov
or
out
ljmp
xchg
cmp
pop
daa
adc
dec
fldcw
cmp
stos
and
xor
lods
cli
pop
dec
pop
outsl
insb
pop
lahf
negb
cltd
mov
test
jo
xchg
out
fildl
test
jmp
or
stc
mov
iret
lret
test
aam
int
or
mov
sbb
jecxz
rclb
ret
mov
test
adc
int
jo
sub
imul
xor
outsl
cmp
in
dec
in
cli
fildll
push
fsub
inc
les
lret
xchg
cltd
xor
cmp
or
out
or
mov
movsb
dec
push
or
cmp
push
in
cmc
insl
icebp
dec
outsb
daa
push
hlt
mov
push
fists
fdivrp
sti
lahf
pop
test
das
sbb
sub
jle
jae
sbb
aaa
jno
into
rep
dec
xchg
mov
faddl
loope
xchg
imul
leave
xor
sbb
jmp
jns
jbe
dec
mov
mov
xor
imul
daa
mov
jbe
popf
pop
sub
shll
test
lock
ds
mov
sbb
shl
bound
shll
pop
loopne
sbb
out
cli
mov
lret
and
jmp
cmp
add
jge
fstpt
fsubp
jmp
int3
aam
repnz
addr16
imul
sarb
in
jmp
lds
iret
and
xchg
mov
push
and
sbb
ffreep
xchg
sbb
mov
daa
jne
outsl
sbb
push
xchg
inc
nop
mov
sbb
cmp
mov
mov
mov
imul
mov
pushl
inc
inc
out
mov
fs
mov
icebp
stos
in
das
out
adc
cmovnp
jne
xchg
ficoms
jg
xor
pop
jbe
mov
leave
and
jne
movsb
orb
aad
pop
lods
mov
fst
fidivrl
insl
mov
jp
jne
sbb
ljmp
jle
push
adc
test
lcall
popa
cs
jmp
fucomp
mov
in
fcmove
xchg
cli
push
mov
mov
rcrl
adc
out
lret
in
sub
jnp
cltd
mov
push
inc
dec
cld
leave
and
push
and
outsl
pop
orl
cmpsl
loop
dec
and
pop
mov
mov
dec
push
repnz
in
jle
or
and
cwtl
jno
aad
jbe
fdivrp
ds
jb
sbb
add
repz
lods
stc
inc
arpl
repz
hlt
inc
fcmovbe
mov
sbb
test
rcll
dec
incl
daa
or
cwtl
push
cmp
test
fnstenv
aas
cmp
repz
js
jmp
std
mov
lret
test
pop
mov
scas
push
add
ljmp
lahf
and
ret
mov
fdivrl
adc
cltd
pop
push
cmp
fwait
xorl
std
das
pusha
inc
icebp
xchg
ret
ficompl
shrb
mov
lcall
cmp
movsb
ja
movsl
imul
and
mov
js
jle
push
xchg
mov
int3
inc
sbb
mov
loop
jmp
push
stc
or
adc
push
loopne
orl
pusha
in
xchg
mov
hlt
js
lcall
add
shl
arpl
xchg
lret
cmp
push
mov
inc
lods
imul
jns
and
mov
out
xor
mov
mov
aaa
jl
jne
sbb
les
mov
mov
inc
adc
dec
mov
xor
fwait
out
roll
fsubl
mov
shlb
push
insl
jno
js
cmpsl
insb
dec
jp
or
pusha
push
mov
movsb
pusha
in
cmp
leave
xor
aad
xor
dec
jno
dec
inc
mov
xor
rolb
loop
jecxz
dec
xchg
call
pop
mov
xor
mov
mov
pop
dec
repz
xor
insb
fs
jbe
rcrb
lret
jbe
insl
cli
shlb
xor
insl
negb
mov
push
mov
out
sbb
or
pop
lds
movsb
mov
inc
jns
call
insb
call
fsubrl
adc
mov
push
cmp
mov
sub
push
mov
dec
sahf
cmpsl
jmp
les
fcmovu
or
test
loop
repz
xchg
fdivs
das
cltd
push
inc
rcll
mov
jmp
adc
fsub
pop
dec
movsb
adc
mov
lret
das
push
out
fsubrs
pop
and
cmp
cmp
js
dec
cmpb
scas
add
fildl
insl
js
sbb
and
adc
jno
cmpsb
lods
lret
and
mov
in
xor
jle
pusha
push
dec
xor
jo
popf
pushf
mov
cs
mov
mov
cmp
insl
adc
ret
jne
imul
out
push
clc
jp
outsb
mov
inc
clc
mov
stc
mov
repz
aaa
mov
push
add
xchg
or
decb
ret
cld
xchg
jno
movsb
xchg
sub
add
fnstenv
loop
shll
in
loop
mov
xor
add
out
push
push
repnz
adc
push
pop
popa
add
rclb
stc
pusha
stos
scas
int
dec
mov
adc
data16
loop
sub
imul
out
mov
in
lock
je
xchg
out
ret
mov
push
mov
inc
dec
xchg
outsb
int3
sbbb
ljmp
jle
push
jns
add
push
adc
add
addb
xor
int
adc
push
test
adc
data16
add
mov
jno
stos
ja
sbb
cmp
lret
or
or
lods
push
in
pop
mov
cli
jmp
out
or
inc
pop
ret
pop
fwait
mov
mov
jnp
sbb
lret
adc
cmp
and
or
push
shrb
jbe
bound
cld
les
xchg
rorl
sbb
imul
jo
pop
push
pop
movb
data16
popf
jecxz
clc
or
adc
add
out
loopne
push
pop
call
inc
mov
mov
inc
mov
mov
sbb
lahf
cld
outsl
pop
call
xchg
cmovb
xor
ret
pop
lds
fisubs
xchg
test
sbb
popf
and
sbb
bound
mov
aam
ror
stos
cwtl
push
push
xor
inc
jb
insb
mov
adc
pop
fprem1
jecxz
cwtl
jne
pop
in
gs
addr16
pop
push
rorl
push
mov
push
repz
mov
add
mov
adc
dec
xchg
cmp
cmp
jo
fs
jne
or
and
cli
push
add
mov
imul
xchg
in
popf
xchg
fs
orl
fadds
sub
lds
je
sub
pushf
hlt
iret
mov
jl
mov
gs
lods
pushf
in
pushf
pop
xlat
push
jg
arpl
outsl
mov
jne
sbb
mov
sbb
mov
loop
dec
addr16
push
add
in
mov
add
jg
loope
ret
lods
inc
sub
lods
inc
sub
int
push
std
sub
adc
daa
xorb
sub
in
jae
in
cltd
andb
pop
push
ds
push
mov
pop
lds
jo
xor
lret
xchg
xchg
jge
cmpsl
lods
ficompl
sub
cmp
jecxz
notb
les
test
adc
mov
sub
xchg
into
cmpsb
lods
cmc
nop
jmp
negb
and
rcll
adc
mov
xchg
sub
push
xorl
mov
adc
or
jnp
mov
in
pop
adc
lret
mov
icebp
pop
fmull
int3
imul
mov
mov
movsl
loopne
pop
outsb
idivl
add
dec
sbb
fistpll
xor
push
sub
adc
xor
fwait
jle
or
xchg
daa
je
nop
mov
icebp
into
mov
push
push
ret
sub
shll
scas
mov
cli
aaa
and
in
pop
cmp
nop
sbb
stos
jo
shrl
mov
xor
push
gs
jge
cmp
js
adc
xor
add
mov
loop
sbbl
and
pop
inc
xor
fistpll
pop
add
sbb
dec
dec
stos
inc
add
fs
lods
repnz
and
leave
mov
push
pop
xchg
or
pop
adc
pusha
int
popa
addr16
fwait
das
pop
sahf
jl
add
pop
push
loope
xchg
clc
adc
jae
sbb
cmc
aam
add
lret
aam
and
jmp
pushf
xlat
fdivrl
fldt
adc
insb
sahf
pop
sub
pop
fwait
je
ret
jge
bound
jg
sub
cmp
dec
xchg
and
in
mov
mov
add
fmul
pop
iret
mov
pop
cwtl
pop
test
push
popf
aam
andps
in
inc
in
adc
in
icebp
inc
scas
xor
mov
push
pop
sub
int
mov
mov
mov
push
movsb
xchg
cmp
rcrl
arpl
add
jmp
movsb
loop
scas
mov
push
pop
fcom
xlat
repz
pop
orl
scas
add
push
xchg
mov
push
and
mov
and
jmp
xor
fistpll
inc
jno
test
movsw
dec
add
mov
cmp
mov
xor
rolb
mov
fstps
popf
and
mov
fwait
cmp
and
arpl
ljmp
gs
push
add
pop
pusha
mov
inc
xor
jle
sub
lret
loop
imul
inc
cmp
fwait
or
adc
cltd
xor
pop
shr
xor
call
std
mov
icebp
imul
shrl
fistpl
and
paddusb
pop
call
mov
aad
xchg
sub
repz
scas
aad
lock
inc
repnz
add
push
cmp
push
orb
cld
cltd
test
push
ss
test
js
loopne
testl
sbb
mov
jo
imulb
xchg
lahf
pop
push
jmp
clc
mov
inc
std
xor
dec
hlt
and
mov
xor
arpl
frstor
jo
ss
inc
ror
push
inc
mov
cmpsl
std
js
adc
and
xchg
iret
dec
sub
sub
pushf
jnp
outsl
js
jecxz
dec
xchg
rolb
loop
and
lret
xchg
cmpsl
adc
sbb
and
cld
stos
and
jnp
scas
mov
xor
test
cwtl
adc
or
jb
lods
mov
cli
mov
mov
xchg
stos
push
adc
cmpsb
xor
repz
ja
mov
repz
in
and
dec
push
mov
data16
adcl
gs
iret
imul
sub
cmova
dec
push
loope
push
sti
lock
cmpsl
rep
mov
sbb
adc
inc
repz
xchg
mov
mov
clc
xchg
push
movsl
es
or
mov
repz
inc
xlat
roll
jno
mov
shll
or
mov
out
fs
das
pop
mov
xchg
imul
sub
cmp
sub
sub
and
cmc
sbb
ds
andl
xor
sub
pop
xor
jno
stos
test
mov
jmp
ret
xchg
sbb
jmp
xlat
cs
xor
jg
or
ljmp
cli
sub
inc
cli
arpl
movsb
pop
xchg
aas
test
sub
lret
fldln2
cmp
xor
stos
adc
sarl
mov
fisubrl
rol
jo
cmpsb
ljmp
mov
sub
sbb
outsb
mov
lds
cli
and
mov
cmp
mov
addr16
push
xlat
mull
dec
mov
add
cmpb
mov
xchg
inc
mov
mov
ffreep
inc
rclb
add
mov
leave
pop
ret
clc
fld
cmc
pop
and
adc
divl
lds
imul
pop
sub
aaa
xor
fcoml
adc
add
xor
clc
fidivrl
jmp
push
sbbb
jmp
in
mov
dec
xor
imul
stc
push
clc
xchg
out
fcomp
dec
dec
ret
pop
mov
and
cmp
sub
lock
cmp
icebp
push
scas
aam
hlt
sahf
jge
mov
test
test
add
jbe
inc
test
mov
mov
xor
inc
add
push
aad
pop
mov
cmpsl
loopne
aad
cli
iret
js
test
imul
xor
stos
jp
dec
out
call
cmc
ljmp
add
xchg
hlt
pop
lret
repnz
scas
outsb
int3
jo
sbb
adc
inc
or
push
pop
lds
int3
test
push
fnstsw
dec
rorb
repz
sbb
ficompl
or
out
js
inc
inc
sbb
cmp
call
repz
js
js
ret
cli
out
adc
cmp
jnp
and
jo
adc
lods
push
mov
int
push
mov
lock
fidivrs
fstps
ficomps
cmpsl
mov
and
jne
fcom
pop
sub
and
stc
mov
movsb
fidivs
dec
lret
jbe
xor
icebp
pushf
sbb
jge
mov
mov
nop
ret
inc
pop
aaa
cmpsl
mov
mov
or
sbb
sarl
sub
scas
rcrb
mov
push
sti
fldl
xchg
shrl
fld
sub
mov
jmp
push
invd
and
lods
mov
and
movb
loopne
sahf
mov
cmp
mov
ret
push
imul
sub
fsubl
cmpps
cmp
mov
mov
cli
and
lahf
sbb
inc
inc
stos
ficompl
sbb
sub
inc
sbb
sbb
pop
dec
add
and
cmp
inc
jns
xor
aas
lretw
pop
leave
lock
jl
inc
add
roll
or
out
and
sub
cmp
push
xor
fildl
mov
add
mov
daa
aad
push
or
or
cwtl
rorb
ret
adc
and
inc
and
mov
xchg
and
sub
cmp
pop
insb
mov
inc
call
and
cld
test
data16
cmp
lock
adc
pslld
mov
rcrl
adcl
push
inc
jbe
inc
lahf
mov
inc
neg
mov
dec
fidivs
call
ror
sub
pop
rcll
mov
cs
mov
adc
mov
imul
addr16
cmpsl
in
std
push
mov
jae
mov
xor
inc
mov
out
fwait
dec
leave
ds
fst
xorb
cmp
sbb
mov
xor
insb
jle
mov
pop
lea
adc
je
cmp
loopne
loopne
hlt
jo
push
sbb
dec
iret
and
mov
lcall
xor
pop
outsb
test
mov
shl
mov
out
jmp
inc
cmc
cmp
andl
outsb
sub
sub
stc
adc
rol
adc
mov
jae
mov
xchg
out
movl
daa
cmp
pop
leave
movsb
rorb
jl
xor
jne
xorb
shlb
jns
mov
xchg
mov
icebp
pop
add
and
icebp
mov
cmp
jg
in
les
pop
xchg
test
ror
ds
mov
divl
dec
mov
push
cmp
das
or
or
jp
popa
in
xchg
gs
sbb
cmp
scas
mov
movsb
sub
hlt
shrl
dec
lsl
fimuls
inc
xchg
mov
mov
andl
xchg
and
cmpsb
ds
sti
fcmovb
adc
hlt
xchg
lock
xchg
jp
cmpsl
push
cmpsl
mov
movsl
inc
imul
ss
pop
lods
mov
mov
in
push
dec
mov
pushf
inc
cmp
sub
icebp
pop
lret
es
push
sar
insl
int
lret
mov
clc
add
clc
cli
rclb
sub
jno
stos
inc
jne
adcb
push
mov
xor
push
stc
sub
cmp
push
jle
inc
push
xor
or
sarl
fmull
repnz
rorl
inc
mov
movsb
std
mov
jl
imul
fs
mov
mov
jns
jl
sub
mov
mov
rcrb
fisubrs
and
mov
movsl
push
push
jmp
scas
xor
mov
out
repz
imul
enter
pop
lcall
push
add
dec
and
inc
outsl
icebp
insb
mov
hlt
adc
into
mov
insl
sbb
addr16
out
aam
pop
pop
sub
pushf
pushf
xor
pop
jecxz
outsb
ficoms
ret
imulb
or
mov
mov
in
repnz
or
cmp
fstpt
push
add
aas
add
imul
jl
das
dec
xchg
xchg
xchg
rcll
pop
les
pop
subb
insb
into
mov
cld
lods
xchg
repz
sub
test
jmp
mov
in
fnstsw
mov
xchg
lods
cmp
cli
outsb
cltd
bound
jnp
std
sbb
push
xor
ficomps
jo
rclb
popf
adc
push
jbe
dec
out
test
enter
push
sub
jmp
outsb
cmp
inc
stc
lahf
pop
mov
cmp
push
sub
cmovnp
in
andb
shl
add
xor
push
aam
test
dec
jge
add
gs
lahf
mov
fs
pop
fwait
pop
push
mov
mov
dec
mov
and
push
adc
sbb
imulb
mov
jo
mov
pop
xchg
jb
aad
cmpsb
daa
cld
sub
outsb
xor
jle
sub
sarb
icebp
cmc
loop
ja
dec
cli
cmp
mov
dec
cmp
adc
add
out
xor
adc
sub
ja
mov
pop
rorb
mov
or
insb
mov
rolb
adc
es
jmp
cmpsb
test
fsubr
sbb
cmp
adc
jp
inc
or
cmp
pop
and
adc
fwait
jns
sbb
ffree
jo
mov
lcall
mov
jmp
mov
push
lods
jne
cmp
ret
ret
icebp
out
mov
xchg
sbbl
icebp
mov
push
idiv
ffree
or
push
hlt
inc
pop
sub
xchg
test
mov
stos
pushf
fwait
jae
and
movsb
iret
mov
sub
mov
mov
test
adc
sbb
sub
push
out
dec
int3
xor
into
shlb
test
and
jne
bsr
fadd
push
fisttps
ljmp
add
dec
ds
mov
fwait
pop
push
sub
sub
push
xchg
inc
dec
xchg
mov
movsl
push
push
pop
subb
mov
dec
sbb
imul
repz
ja
aad
iret
xchg
iret
mov
push
jg
xchg
sbb
xor
scas
inc
add
pop
mov
dec
add
cmp
out
jge
test
sub
jns
jmp
pop
xchg
cmpsb
jae
mov
movsb
test
dec
xchg
lods
jp
scas
outsb
jno
add
lret
sub
mov
push
pushf
mov
popf
imul
out
push
imul
jle
jns
inc
out
loope
faddl
mov
dec
pop
mov
in
dec
adcl
mov
cs
sbb
loope
lea
xlat
xor
xor
add
push
lods
outsl
gs
xlat
call
sub
enter
sbb
pop
dec
xchg
lock
jl
add
mov
pop
mov
scas
push
roll
pop
into
inc
clc
pop
mov
iret
data16
lcall
mov
xor
xor
push
ror
faddl
xchg
add
loope
test
mov
cwtl
inc
bound
mov
jns
stos
mov
inc
jbe
xchg
jno
xor
and
mov
inc
xor
push
push
sahf
mov
daa
shrb
or
and
mov
pop
push
pop
adc
repnz
jle
adc
dec
leave
ljmp
lods
add
lret
cwtl
clc
lods
xchg
push
stos
push
jle
mov
lods
cmp
fidivrl
orl
clc
pop
jne
dec
fstpl
xchg
inc
jbe
cmp
mov
push
test
push
mov
jge
sub
sbb
xchg
jno
clc
xor
fdivrl
xchg
jl
and
xchg
fcos
sub
mov
mov
js
cmp
fidivs
push
sub
jp
xor
push
popf
adc
daa
jp
sub
sbb
test
daa
test
inc
lods
scas
push
add
fucomp
xor
pop
ss
ficompl
std
sbb
xchg
mov
push
push
outsl
or
inc
pop
push
jl
xor
and
mov
fwait
arpl
push
or
inc
ret
shrl
pcmpeqb
hlt
pop
cmp
cld
pop
or
xor
adc
out
cmpsl
inc
dec
pop
or
out
cmp
pop
jns
push
dec
xchg
mov
jle
aam
paddusb
pop
pop
out
mov
insb
or
cmpsl
or
xchg
mov
jnp
jp
pushf
or
mov
cs
ljmp
lret
or
shrb
repnz
movsl
xor
cmp
mov
dec
ret
imul
pop
add
sbb
pop
mov
divl
sbb
push
sbb
orl
jl
pop
pop
rsqrtps
ljmp
sbb
mov
mov
and
out
xchg
mov
inc
adc
icebp
lret
sub
adc
push
or
cmp
fbstp
xchg
mov
pop
xor
mov
aad
es
je
aad
push
or
xor
pop
mov
icebp
pop
aad
xchg
cmpsl
sti
push
mov
sub
pop
mov
jns
sbb
fdivs
ds
mov
es
mov
addr16
data16
push
or
jb
call
cmpsl
mov
xchg
lods
rcrb
add
ljmp
rcr
pop
inc
clc
xchg
inc
sub
loope
jo
lahf
push
dec
push
cmpsb
es
pushf
adc
sub
dec
and
data16
pushf
mov
cmpsb
ds
push
add
and
call
out
dec
lods
sarl
cmpsl
sbb
mov
ljmp
lret
xchg
jecxz
ftst
out
in
sub
movsl
and
daa
repz
adc
adc
mov
in
xchg
jne
call
in
xorl
or
mov
arpl
add
sbb
loopne
inc
repnz
add
mov
lea
sbb
bound
out
jp
fnstcw
add
mov
xchg
inc
pop
fildl
push
mov
inc
ljmp
ja
inc
je
xor
pop
test
adcl
fidivrs
add
or
sar
push
pop
mov
push
sub
lret
fdivrs
push
mov
sbb
out
subb
pop
insb
jge
cmp
dec
jb
inc
mov
push
hlt
shr
add
xchg
push
sar
xchg
adc
test
sbb
dec
int3
fnstenv
adc
mov
xlat
scas
jge
lret
jo
jl
or
jle
adcb
out
pop
mov
pop
push
jp
loope
push
push
jbe
sbb
dec
sub
cmp
into
push
or
mov
sub
ss
int3
lods
rcrl
aad
xor
mov
idivb
add
insl
pop
push
sbb
leave
subl
repz
jecxz
mov
pop
movsb
aas
ret
rcrl
ret
add
gs
sub
cs
fisttps
pop
inc
rclb
hlt
pop
cs
mov
fmulp
push
pop
push
mov
aas
movsb
iret
daa
push
outsl
stc
jne
mov
das
test
dec
mov
pusha
test
lcall
sbb
xchg
mov
loopne
or
stos
xchg
dec
int3
sub
xor
flds
mov
or
push
add
xlat
pusha
add
cwtl
and
and
lock
or
mov
pop
inc
cmp
fsubl
mov
push
out
enter
push
adc
stos
jge
jae
call
mov
xor
cmp
aas
push
cmpsb
hlt
subl
imul
xchg
push
clc
dec
xlat
jp
fistl
je
leave
lods
pop
fisubl
addr16
fisubl
pushf
addr16
xchg
pop
lcall
mov
push
ret
pusha
bound
loope
mov
cs
pop
cmpsl
in
sub
add
add
push
into
pop
push
adc
push
cmc
pop
cmp
jge
rorb
pop
and
iret
outsb
xor
inc
push
dec
xchg
pusha
insl
popa
dec
popf
adc
mov
std
loopne
clc
in
lods
fisubrs
mov
dec
movsl
sbb
popf
jne
push
xchg
pop
imul
arpl
std
jnp
dec
ror
out
jns
push
pushf
rorl
add
loopne
movsl
fisttps
imull
sub
sti
push
sar
mov
ja
xor
cmp
sti
cltd
int
test
fnstcw
scas
fsubrs
lret
bound
sarl
fsts
lods
call
jns
jbe
fs
sbb
mov
mov
hlt
sti
lahf
push
pop
jne
push
jno
mulb
imul
fucomp
cmp
adcl
pop
sbb
bound
or
push
in
jb
adc
mov
je
mov
xchg
inc
mov
cmp
xchg
cmp
repnz
cmp
iret
lea
stos
aas
lock
jge
sahf
mov
pop
jne
xchg
push
pop
pop
dec
sbb
adc
pop
mov
sub
inc
lea
jns
icebp
ret
mov
out
add
imul
push
shlb
lock
insb
loope
jnp
repnz
inc
aas
inc
arpl
mov
fcompl
mov
cmc
sarl
add
aam
lret
dec
mov
fsts
mov
repz
adc
and
mov
fsubl
inc
enter
icebp
jae
pop
pop
in
hlt
orl
jecxz
or
pop
or
jne
ret
adc
in
outsl
rorl
sahf
jae
pop
mov
mov
mov
andl
outsl
das
xchg
push
fmul
pop
push
and
mov
frstpm(287
dec
pop
push
pop
jl
hlt
pusha
or
pop
mov
jp
sub
jo
or
mov
inc
xor
cmpsl
roll
xchg
sbb
jp
cmp
adc
sbb
ret
enter
addb
call
loop
mov
and
adc
daa
mov
or
shll
pop
inc
movsb
or
test
push
xchg
mov
sbb
out
lock
imul
add
xchg
adc
adc
cmp
pop
cwtl
sti
out
out
ror
inc
or
cmp
mov
xor
cmp
push
mov
out
cwtl
stos
lret
repnz
out
push
std
inc
xchg
insb
out
sbb
ljmp
fldl
sti
movsl
jecxz
sbb
int3
sti
sti
test
je
ja
inc
sbb
fs
xor
outsl
out
add
push
xchg
stos
push
int
dec
or
test
outsb
iret
push
jmp
nop
cmc
or
push
xor
jp
add
xchg
pop
mov
into
push
les
out
mov
sete
cmp
inc
dec
mov
sub
jg
mov
sub
scas
repz
cwtl
adc
stos
fisttps
xchg
pop
sar
cmp
mov
or
out
test
outsb
sahf
push
ja
inc
jbe
fdiv
xchg
mov
icebp
dec
repz
cmp
imul
rdmsr
adc
cli
jge
pop
scas
mov
inc
in
adc
inc
or
adc
je
add
std
fidivrs
pop
sub
xchg
pushf
data16
mov
ret
and
sbb
sub
cld
loop
mov
pop
jle
jae
popa
jbe
push
jle
mov
inc
cmp
or
cs
clc
mov
xor
jmp
rcrl
repz
adc
xchg
xchg
les
or
pusha
pop
or
addsubpd
enter
movsl
mov
xchg
loop
mov
cmpsb
jno
dec
xor
mov
xchg
adc
and
cltd
jbe
sti
test
cmp
aaa
xor
inc
loop
lods
insl
aaa
test
pop
sarl
lret
cld
add
out
rorl
or
push
int
cmp
jno
cmp
sti
sub
shrb
in
mov
lahf
out
inc
clc
popa
mov
int
push
sub
xor
fwait
push
inc
dec
rcr
push
cli
loope
push
jns
ret
mov
int3
mov
popa
mov
stc
mov
outsl
push
xorl
and
xchg
push
and
sbb
iret
loopne
push
push
and
lds
cmp
adc
sbb
cs
pushf
mov
cmp
rcrl
mov
add
inc
inc
jle
mov
cmc
mov
push
notl
movsl
mov
add
bound
movsb
or
pop
and
xor
lods
pop
mov
sub
jb
dec
ffreep
add
ret
jo
sub
xchg
outsl
js
call
repz
mov
jp
push
pushf
cmpsl
imul
mov
xchg
mov
jmp
clc
jl
pop
je
daa
nop
xor
fstl
mov
pop
push
test
dec
sbb
mov
or
inc
xor
pop
push
lods
pop
mov
xchg
cmp
sahf
jg
fisubrs
add
iret
shll
sbb
lods
mov
loope
insb
mov
aas
in
imul
orl
mov
add
lods
cs
and
call
cmp
push
enter
cmp
pop
shrl
and
adc
adc
mov
or
pusha
xlat
xchg
lahf
loope
pop
stc
add
mov
cmp
xor
leave
and
movsl
in
mov
test
sbb
mov
lret
imul
loopne
and
lret
cmpsb
pop
sbb
imul
adcl
jg
ds
shlb
mov
jne
adc
xchg
jno
xchg
inc
aaa
cmp
inc
jl
popf
movsl
test
fldlg2
jl
dec
icebp
ret
lret
push
stc
pushf
sti
test
mov
addr16
pop
jp
push
and
hlt
movsb
nop
inc
xorl
jecxz
xchg
sub
sub
fidivs
mov
fcoml
repnz
pop
ss
inc
xor
jge
push
mov
sbb
out
ret
sub
pop
adc
cmp
mov
sub
fnsave
jno
inc
ss
jl
jns
xor
fstpl
cmpsb
push
jp,pn
pop
xor
cli
cmp
loopne
out
pop
sub
xor
add
setp
icebp
lret
jmp
mov
movsb
xor
lahf
in
and
js
mov
mov
and
mov
adc
lods
enter
dec
mov
cmp
adc
push
jp
test
loope
push
push
jb
int3
adc
nop
jb
mov
lahf
sub
daa
xchg
pop
pop
mov
addr16
or
pop
cmp
test
iret
inc
cmpsb
idiv
and
sbb
push
mov
ljmp
dec
add
es
push
cmp
sbb
push
adc
outsb
addl
out
scas
in
cld
stc
cmpsl
jbe
scas
dec
add
mov
in
mov
push
jge
jmp
sbbl
add
les
jle
adc
sbb
mov
push
pop
data16
call
add
imul
dec
lods
cld
insb
cmp
inc
fisttpl
pop
mov
aad
jb
negl
mov
pop
loopne
push
test
loope
mov
push
fs
hlt
push
popf
fcomps
push
enter
aaa
out
outsb
push
mov
push
pop
and
lahf
jl
dec
xchg
ret
popf
mov
cmp
aad
ffreep
aam
lock
jo
int
push
mov
or
lea
mov
sbb
stc
rol
imul
and
and
xchg
stos
ret
fdivr
adc
out
roll
jmp
test
in
imull
loope
data16
pop
mov
xor
cmp
fistps
shll
ja
pop
dec
fcmovb
in
test
dec
mulb
lods
lods
pushw
dec
xor
mov
loopne
jnp
push
stos
mov
fisttpl
cmp
adc
adc
jl
ds
arpl
inc
bsf
jp
data16
xchg
hlt
loope
pop
sbb
lcall
mov
subb
fisubs
int
addr16
mov
pop
repz
or
jnp
insb
mov
adc
fwait
mov
les
in
pop
lahf
inc
adc
or
sbb
jnp
mov
pop
adc
lahf
mov
sbb
pop
imul
ss
adc
cmc
inc
sub
cmpsl
lcall
ljmp
in
out
stos
jo
outsb
xor
cmp
div
fimull
loope
mov
pop
gs
push
fs
fs
icebp
outsl
xchg
xchg
jae
xlat
fcmovb
sbb
cmp
das
inc
js
cmc
je
addr16
jmp
xorb
xor
xchg
push
shl
sbb
jnp
adc
decb
cmp
fdivrl
sub
xor
cmpsb
addb
push
cmp
fimull
mov
popa
dec
sub
cmpl
and
scas
adc
shll
lcall
clc
xor
xorl
cmpsl
push
push
ljmp
or
adc
addb
mov
imul
jge
xorl
mov
xor
ds
push
lcall
sub
mov
dec
jle
cmp
jae
sbb
xor
mov
int3
lds
xchg
stos
hlt
inc
push
notb
insb
inc
fimull
outsb
or
mov
mov
jo
lcall
push
mov
fcmovb
or
mov
xorb
enter
cld
cmpsb
pushf
lahf
mov
xor
jae
pop
lret
iret
mov
or
lock
stos
loop
pushf
jns
pop
jnp
pop
pop
mov
cmpsl
cmp
dec
shll
lahf
inc
divb
subb
call
mov
out
sub
stos
pop
mov
inc
jno
push
int3
and
lret
jle
mov
aas
test
xor
mov
movsb
das
jo
lret
out
cmp
imul
int3
xor
dec
lods
sub
mov
cmp
push
cld
pop
cmp
mov
mov
cmp
imul
cmp
cs
test
pop
mov
inc
cmp
jmp
inc
push
fiadds
jb
ficoms
push
lock
loope
out
push
xchg
stc
arpl
mov
add
addb
jg
movsl
xchg
inc
pop
fidivrl
xchg
pushf
ss
test
jmp
xor
adc
xchg
in
std
mov
xchg
dec
or
repz
cmp
mov
js
jnp
imul
data16
iret
and
add
pop
lea
jge
sbb
sarl
add
aam
or
xor
mov
pop
sbb
dec
lret
mov
popa
popf
out
in
lret
add
arpl
push
sub
pop
cltd
or
jmp
sub
pop
push
insl
sbb
pusha
imul
cmp
ret
inc
pop
dec
jae
dec
femms
cmc
cmpsl
js
mov
movsb
push
popa
test
mov
test
cmc
mov
ficoml
cmc
test
push
cmp
in
cltd
dec
xchg
in
mov
push
dec
jmp
cwtl
int3
dec
test
or
lds
xor
jbe
lea
dec
pop
pop
mov
fbld
enterw
push
mov
outsl
into
mov
push
movsb
xchg
inc
push
inc
xchg
fsubs
lods
aaa
cld
les
das
cmp
pop
mov
stos
mov
scas
adc
mov
push
shlb
dec
dec
pop
push
pushf
int3
cmpsl
inc
clc
test
out
lret
push
out
sarl
push
sub
test
cli
xor
imul
cltd
mov
jle
pushf
lods
scas
pop
dec
inc
xchg
xor
dec
in
xor
jae
rolb
cld
sti
add
bound
ret
sbb
cmc
je
shlb
mov
pop
dec
mov
pop
sbb
mov
pop
jl
mov
xchg
mov
mov
mov
subl
lcall
les
sarb
std
loop
and
aad
xlat
jge
sub
test
mov
and
add
sub
lds
pop
cmpsl
stc
mov
aad
loope
cmp
movsb
int
js
pop
dec
mov
mov
ja
mov
ljmp
popa
aad
addr16
loop
insl
loope
or
jge
ja
sub
inc
pcmpeqb
push
cmp
cwtl
test
sub
xchg
je
lahf
push
test
out
inc
jecxz
push
cmp
and
iret
movsl
lds
shl
mov
ja
xlat
inc
lret
jb
aam
mov
pop
test
push
sti
pop
stos
stc
xchg
test
into
in
xor
cmp
idivb
dec
dec
scas
mov
fsub
pop
incb
cmpsb
in
sub
loope
xor
fcompl
jns
adc
stc
jae
push
mov
jg
add
loopne
cmp
ja
dec
cmpsb
xchg
negl
int
aam
xchg
or
push
cmp
mov
sub
mov
push
inc
push
scas
stc
out
test
fldcw
cmpsl
push
fcoml
xchg
das
fwait
pop
or
shrl
cmpb
cmp
pop
loop
fs
mov
xor
mov
push
cmp
and
lret
clc
inc
mov
pop
jecxz
sub
scas
cmpsl
or
xchg
divl
cmc
cli
dec
dec
aaa
mov
std
xchg
xchg
sub
jle
xchg
sbb
rol
mov
inc
fstpt
add
xchg
fsub
fcompl
cltd
rcrl
mov
push
adc
and
bound
xchg
mov
add
and
je
dec
mov
cmpsl
jmp
mov
xor
cmpsb
inc
push
clc
in
adc
and
add
ret
xchg
sbb
das
fisttpll
mov
mov
in
inc
pop
sub
frstor
add
arpl
pop
jge
bound
jno
ret
cmp
push
sub
das
jo
mov
dec
add
jns
mov
and
pop
jne
ja
rorl
xchg
clc
shll
pop
aam
sub
jl
in
adc
mov
test
adc
lods
fchs
sarl
xor
faddl
ficoml
mov
jp
push
sub
daa
xor
pop
cltd
popa
xorb
fwait
insb
add
in
add
xchg
mov
jecxz
jg
pop
std
push
dec
or
add
fistpll
pushf
sbb
mov
cmp
outsl
test
add
icebp
pop
test
xchg
pop
lret
dec
inc
and
pop
std
sti
movsl
sub
pop
xchg
push
in
inc
data16
int3
xor
test
popf
jb
cmp
adcb
inc
dec
xchg
mov
dec
sbb
hlt
sbb
xchg
fsubp
lods
in
pop
sub
not
and
insl
mov
shlb
sarl
pop
xchg
pop
push
xchg
xchg
pop
pop
pop
dec
pop
push
lock
mov
lds
addl
xchg
add
fcompl
cmpsb
mov
imul
leave
sub
aaa
mov
pshufw
mov
adc
mov
inc
sbb
bound
ja
jecxz
in
pop
fmuls
clc
pop
mov
repz
out
jb
cltd
sbb
je
pop
mov
jbe
lods
jae
sub
test
push
or
adc
push
adc
mov
add
int
mov
xlat
scas
sbb
ret
adc
leave
inc
xor
in
and
and
stc
std
test
stos
push
je
push
shlb
and
mov
jnp
loop
sub
pop
imul
test
iret
aad
subl
cwtl
sub
xor
lret
inc
insb
pusha
popf
xor
mov
hlt
xor
pop
es
popf
cmp
mov
sbb
sub
dec
ret
sub
mov
and
clc
fldl
push
cmp
scas
xchg
sarl
insl
cwtl
stc
pushf
lea
sbbb
jnp
xchg
cs
cmp
push
shr
imul
cmp
rclb
gs
pop
pop
add
cld
cmp
and
scas
jecxz
out
sub
sar
rolb
pop
cmp
xchg
add
mov
sbb
jecxz
push
addr16
push
push
stos
jae
xchg
dec
xlat
push
or
imul
cli
mov
mov
push
mov
cmp
movsb
jne
jle
shll
lods
mov
mov
out
mov
fs
pop
test
stos
xchg
jl
in
sbb
repz
and
sbb
popf
nop
fidivrl
sub
or
inc
mov
outsb
int
push
or
into
or
aaa
mov
adc
pop
xchg
xchg
cmp
stos
aad
dec
lcall
aad
outsl
daa
push
mov
imul
aas
ret
les
or
push
mov
adc
std
iret
push
pop
movsl
les
jae
mov
jae
pop
push
fstpt
test
or
xchg
mov
pop
jp
ss
notb
jp
leave
bound
push
jle
je
addr16
fldt
orb
stos
pop
clc
xor
dec
pushf
adc
cmpsb
iret
pop
add
or
roll
push
sub
sbb
xor
pop
and
jb
pushf
mov
lret
sub
adc
mov
inc
repnz
or
mov
das
leave
imul
mov
cmpsl
aad
lods
pop
leave
lret
out
iret
sub
fisubl
inc
mov
shr
outsb
pop
insb
mov
inc
mov
outsb
jno
fmull
movsl
xchg
imul
jb
adc
sub
lea
sbb
or
cmpsb
pusha
xchg
daa
jnp
scas
icebp
cltd
aas
enter
mov
jbe
clc
mov
xchg
xor
dec
pop
in
add
negb
inc
inc
xor
xlat
cmp
test
sbb
add
dec
mov
pushfw
iret
cmp
xchg
pop
lcall
repnz
popf
mov
fdivr
fs
push
lahf
mov
loopne
mov
jmp
cmp
das
out
jb
mov
movsb
or
pushf
add
dec
mov
test
or
mov
shlb
fs
mov
sar
xor
scas
mov
pop
cmp
adc
cmp
stos
sbb
cli
mov
mov
clc
mov
shll
mov
fstl
in
clc
and
jne
xlat
or
js
and
negl
mov
pop
std
cmpsl
adcb
inc
sub
nop
stos
sub
mov
fucomip
icebp
mov
lcall
add
lock
movsb
das
pop
pop
mov
and
xchg
outsb
insl
popa
ja
jle
insl
lcall
nop
lret
push
sbb
push
gs
mov
or
ds
cld
inc
push
jae
fistps
iret
cmpsl
xlat
xchg
stc
inc
inc
dec
sub
sahf
shl
fldt
dec
fadds
dec
mov
lret
arpl
push
gs
push
mov
lock
xchg
aas
jecxz
mov
and
addb
xchg
aaa
ret
push
dec
xlat
mov
loopne
mov
imul
add
aad
test
stos
and
je
xorb
loope
sub
sub
mov
bound
or
outsl
jge
or
sbb
xchg
int
jbe
test
es
je
jns
cli
lret
dec
ss
push
xchg
loop
in
jno
adc
movl
cmpsl
sarb
shlb
inc
xchg
jno
xor
arpl
fidivs
stos
fdivs
cmp
repnz
mov
inc
pop
in
cmpsb
mov
arpl
fildll
mov
xchg
test
stos
lret
xor
sbb
adc
mull
mov
arpl
in
jne
fs
mov
lahf
mov
mov
icebp
mov
lods
ret
inc
pop
sahf
inc
xor
push
add
inc
test
ja
adc
push
dec
adc
jb
in
lea
push
add
cmp
addr16
aam
sbb
dec
jg
dec
mov
push
mov
mov
xchg
cmp
test
add
pop
jns
push
dec
or
pop
aas
jl
inc
or
imul
xchg
mov
out
jbe
aaa
repz
xchg
mov
shll
cs
loopne
in
xor
xor
movsb
jecxz
stc
test
test
inc
inc
sub
es
shrb
scas
insb
xchg
xchg
sub
pop
pop
cmp
outsb
lods
jp
sarb
xlat
mov
sbb
mov
cmp
dec
mov
ret
sahf
test
adc
in
or
lcall
mov
jp
pop
mov
xchg
pop
movsb
xchg
leave
rorl
imul
lahf
mov
xor
or
push
sub
in
es
adc
lea
daa
popa
adc
fwait
cwtl
jbe
adc
dec
dec
inc
cld
cmp
in
movsb
cwtl
mov
daa
adc
adc
push
xor
or
mov
mov
outsb
je
push
adc
sub
repnz
mov
mov
shlb
in
jle
xor
cmpb
xchg
pop
jne
insb
inc
std
mov
cmp
xchg
adc
inc
sbb
adc
cmp
bound
cmp
aam
xlat
sbb
mov
fcompp
ljmp
gs
clc
pop
sub
pop
rcl
xor
leave
test
or
hlt
dec
mov
cld
test
test
pop
add
sbb
sarb
sahf
cs
and
dec
push
jnp
and
pop
shld
cwtl
cmp
jo
mov
adc
outsb
rcll
sbb
mov
std
push
or
hlt
cmp
inc
loopne
pop
sub
aam
roll
jp
hlt
orb
push
jge
adc
stos
and
ja
adcl
out
inc
push
jo
fidivl
xchg
xchg
or
inc
inc
das
mov
dec
add
lcall
add
xor
mov
imul
and
aad
adc
mov
xor
out
pop
jmp
outsl
or
das
cmc
fsubr
xor
inc
mov
pusha
push
fldenv
and
mov
addr16
xchg
fcmove
loop
xchg
or
mov
xor
je
test
mov
xchg
sub
out
cmpsl
nop
mov
leave
ds
xor
aaa
push
popf
fstpt
notl
xchg
or
insb
mov
icebp
pop
sbb
pop
push
loopne
ja
jmp
fsubrs
icebp
lcall
push
or
dec
cmp
xor
pop
push
popf
mov
callw
sbb
add
or
sub
mov
fldenv
push
leave
or
mov
and
jno
dec
add
test
iret
pop
sbb
jns
repnz
outsb
jne
subl
fnstcw
loop
out
loopne
cmpsb
xor
fistpl
cli
dec
cwtl
cmp
mov
sub
daa
or
sti
lds
xchg
imul
cmp
in
int
pop
test
insb
rol
ret
in
repnz
push
mov
int3
jecxz
mov
dec
xor
es
stos
ja
lret
lock
xor
add
sbb
sarl
stc
push
xor
mov
arpl
aad
jns
pop
test
clc
adc
movsl
sarl
inc
popf
pusha
in
sbb
stos
dec
arpl
mov
shlb
fucomip
repnz
lock
cmp
ficoms
in
pushf
push
sbb
push
or
cmp
test
mov
push
je
leave
cs
es
pop
fwait
call
mov
dec
push
mov
lret
test
jo
add
aad
dec
sbb
and
insl
imul
inc
dec
push
repz
jg
ficoms
aad
add
adc
xchg
mov
cwtl
stos
dec
mov
cmp
xchg
movsl
stos
es
fs
push
push
test
xor
mov
aas
mov
dec
inc
pop
pop
shrb
mov
dec
xchg
aas
scas
loopne
lret
mov
outsb
inc
shl
pop
fists
xchg
ljmp
test
inc
add
mov
pop
mov
mov
adc
push
or
jge
adc
mov
cmp
add
call
xchg
leave
cmp
dec
mov
xlat
movsb
xor
insb
xor
adc
xchg
mov
add
sbb
or
jmp
jnp
sti
mov
xor
mov
divl
xor
outsl
fldt
mov
sbb
sbb
fidivrs
enter
or
jge
xchg
scas
xchg
es
jns
or
sub
out
pusha
daa
ret
ficoms
mov
adc
gs
mov
dec
std
jbe
mov
insb
idiv
sbb
push
mov
notb
sbb
shll
add
test
mov
and
sahf
imul
hlt
cltd
sbb
mov
mov
fcoml
ja
cwtl
rorb
inc
in
inc
insl
dec
mov
mov
mov
xchg
daa
aaa
sub
stc
inc
cmp
call
lret
dec
xchg
scas
xchg
aam
test
pop
sub
adc
sub
or
dec
mov
dec
mov
dec
jb
std
shll
inc
stc
pop
outsb
call
jnp
inc
sbb
cwtl
jno
fcomp
push
pop
mov
mov
push
or
mov
aad
jno
testb
jbe
cmp
lds
sub
cmp
mov
in
syscall
test
int
push
push
daa
out
outsb
cmp
jbe
in
mov
pushf
rcrl
pop
jns
out
jp
or
cs
in
leave
mov
jl
rorl
and
js
adc
mov
cmpsb
data16
jmp
xchg
sub
ret
icebp
sbb
fidivrl
js
pop
addb
mov
jl
dec
push
sub
pop
fimull
roll
aas
sbbb
jmp
jle
xchg
lret
nop
and
cmp
xor
jne
sub
jne
repnz
pop
jo
and
sti
aad
test
inc
xchg
arpl
aaa
xchg
in
fisubl
cmpsb
or
adc
xor
hlt
dec
and
sub
nop
mov
add
pop
fstl
cmpsb
test
bound
jo
mov
xchg
shrd
add
pusha
dec
inc
popf
in
dec
cli
scas
inc
hlt
shlb
push
mov
fists
xchg
xchg
sub
std
and
outsb
add
mov
jbe
scas
imul
jo
mov
rcrb
inc
imul
xor
mov
outsb
push
movsb
ficoml
scas
addr16
dec
or
popa
push
pop
mov
arpl
add
fsub
jno
clc
lock
sub
mov
in
push
gs
pop
movsl
lods
test
or
fcom
inc
insl
out
pop
in
out
dec
mov
or
pop
sub
xor
ss
sub
into
cmc
scas
jmp
movsb
sub
pusha
in
jmp
andl
xor
sub
add
mov
or
adc
add
mov
mov
je
notb
push
push
pop
cmc
xchg
sub
movsb
push
jbe
clc
pop
pop
xchg
jne
enter
scas
adcl
xor
ret
iret
or
jge
mov
jmp
jo
cmpsb
mov
lret
cmp
mov
popf
sbb
adcl
cmp
test
xor
ja
mov
cmp
push
enter
xor
sahf
popf
movsb
xor
jl
aad
aad
imull
bswap
pop
jmp
ja
roll
or
pop
fwait
stos
lcall
pop
dec
jmp
dec
jae
cwtl
insl
lcall
addr16
ss
pop
ljmp
xor
push
or
adc
enter
in
dec
in
aas
hlt
push
or
aad
jmp
pop
shll
out
jge
lods
xor
nop
push
imul
call
xchg
xchg
stos
outsl
push
pop
cmc
divb
mov
lock
xor
sbb
int
lods
push
mov
ret
int3
push
or
and
mov
mov
xchg
outsb
and
add
out
push
cmpl
arpl
mov
and
and
and
mov
stos
xor
jb
jnp
push
int
xlat
test
push
inc
orb
mov
mov
mov
roll
xor
add
into
fs
cmp
not
pop
in
dec
ret
cld
xchg
mov
movsb
dec
loopne
clc
icebp
pop
cmp
arpl
sbb
popf
xor
inc
cmpsl
jae
dec
lods
mov
push
jg
mov
stos
mov
or
adc
adc
stos
out
dec
adc
ds
stos
pop
lods
jle
jne
orb
adc
stos
cli
push
inc
into
sub
pop
popa
stc
lcall
inc
push
pop
test
pop
dec
push
push
or
lahf
and
jp
cwtl
jno
ds
pusha
inc
movsb
xchg
pop
repnz
or
loope
test
xchg
test
or
fwait
add
sub
cmp
mov
mov
mov
leave
les
mov
mov
push
mov
mov
neg
cmp
cmp
dec
adc
add
or
and
lods
ss
repz
fiadds
fs
dec
or
jnp
data16
xchg
outsl
pop
popf
cmpb
mov
enter
xlat
mov
mov
push
sub
fidivrl
cld
xchg
mov
jmp
lock
pop
mov
pop
and
inc
jnp
outsl
mov
rcll
xchg
test
jp
or
and
mov
push
xchg
filds
cmpl
push
fistps
daa
in
mov
loope
mov
aaa
lea
ret
inc
hlt
ds
pop
imul
insb
call
std
cmp
and
mov
inc
cmpsb
mov
imulb
xlat
mov
sti
jnp
test
inc
adc
mov
cmp
cmp
adc
std
push
lds
dec
xor
es
sbb
mov
sub
icebp
dec
int3
mov
cmp
or
sub
push
add
jmp
lahf
ret
add
add
xchg
int3
and
push
ljmp
sbb
add
dec
xor
addr16
mov
ret
das
sub
lahf
fs
sti
mov
mov
out
xchg
mov
int
rep
and
jns
cmp
jmp
fwait
nop
add
cmpps
jge
icebp
sti
or
gs
push
adc
dec
xchg
jne
fs
sahf
and
out
arpl
ss
mov
ds
sar
cld
mov
stos
ret
test
jge
jg
ss
fsub
in
sub
and
repnz
inc
dec
add
shll
mov
es
clc
xor
xchg
or
add
shrb
and
push
cmp
test
add
iret
push
or
test
sbb
sahf
push
repz
loopne
aaa
out
aad
fidivs
data16
les
lock
xor
pop
mov
xlat
imul
mov
push
test
adc
jge
add
leave
lret
ss
cli
rorb
inc
inc
and
sahf
outsl
out
test
sub
sub
in
mov
rorb
mov
sbb
and
mov
jmp
cld
in
je
jecxz
or
cli
mov
js
push
pop
xchg
cld
insb
cmpsb
mov
add
movsb
push
push
sahf
adc
or
xor
adc
dec
sub
push
adc
or
aaa
aam
xor
mov
sti
out
mov
movsb
test
sbb
pop
jl
jg
dec
jo
sbb
shll
gs
sbb
cmp
mov
sbb
jnp
jecxz,pn
pop
push
jnp
test
push
push
ss
xor
push
scas
out
jne
dec
pop
int3
fmull
test
mov
icebp
mov
fldenv
add
mov
xor
aam
push
mov
or
jne
call
sbb
imul
mov
xor
cmp
mov
inc
fidivs
shll
inc
out
mov
repnz
repnz
icebp
das
adc
dec
rcrl
sahf
push
daa
xlat
sbb
insl
test
cmpsl
mov
xchg
fs
xchg
loop
mov
push
repnz
loop
rorb
and
loope
jg
outsl
mov
sahf
ret
notb
shlb
cltd
jecxz
ret
loop
test
inc
call
push
in
stc
ljmp
pop
inc
mov
push
cmp
in
xchg
loope
cmpsb
nop
filds
fs
dec
adc
pop
mov
std
mov
dec
test
mov
test
or
std
repz
mov
cmpl
sbb
cmpb
inc
cmpsb
and
mov
mov
inc
movl
insb
cs
mov
lahf
mov
mov
jle
push
dec
cmp
inc
in
inc
lcall
mov
and
rcr
clc
mov
mov
mov
adc
fs
gs
pop
xor
xlat
fstl
dec
jmp
mov
cmp
lea
inc
insb
insl
push
negl
xchg
test
aaa
jp
mov
mov
inc
xchg
xlat
jne
enter
xchg
mov
out
mov
sti
lahf
sbb
ljmp
and
cltd
mov
xchg
mov
xchg
cmp
imul
jno
cmp
xchg
xor
mov
lods
nop
inc
sbb
jmp
xchg
push
imul
push
addr16
mov
and
sub
xor
clc
xor
xchg
adc
jbe
cmp
pushf
adc
pop
push
sub
test
rcll
ret
cmc
les
xor
sub
adc
js
push
cmp
shrl
sbb
sarl
or
rolb
arpl
push
movl
sarb
mov
popa
daa
cs
imul
sbb
nop
into
xor
inc
test
fadds
scas
jecxz
filds
or
nop
les
bound
push
pop
mov
mov
jle
fldt
aam
mov
out
jno
xchg
fsts
fdivrp
orb
cltd
cli
xor
les
loopne
mov
cmp
rorl
movsb
jecxz
xlat
addl
add
aam
adc
aas
sbb
push
jbe
xor
add
imul
sub
add
ret
lret
adc
adc
aaa
mov
mov
lods
jmp
pop
cmp
pop
iret
and
and
ret
mov
mov
mov
cli
jbe
lea
lcall
outsl
mov
arpl
inc
sub
aad
jns
jge
dec
push
leave
icebp
mov
xchg
aas
push
push
xor
xor
lock
mov
fnstenv
pushf
or
lea
dec
mov
jle
push
mov
jecxz
inc
cmc
xor
adc
shll
das
xchg
or
lret
pop
and
pop
rclb
push
sbb
loope
sub
lods
xor
fiadds
sbb
sub
popf
in
lret
cmp
add
mov
mov
dec
sbb
add
arpl
cmp
inc
pop
xorb
call
les
xchg
mov
cmc
push
sub
cltd
mov
fcoml
xchg
and
addr16
push
mov
add
push
or
jno
call
and
add
or
out
movsl
jge
sbb
lock
cs
daa
inc
sbb
fcoms
cmp
mov
dec
int
nop
xor
fdivl
push
iret
or
lret
mov
inc
jmp
add
cmpsl
push
inc
mov
cmp
test
cmc
dec
lods
add
ficomps
and
cmp
int3
cmpsl
repnz
jnp
into
push
test
add
pop
xorl
mov
sahf
test
outsl
pop
mov
push
mov
pop
inc
mov
mov
repz
bound
xor
in
mov
lea
pop
int3
and
mov
ret
sarl
aaa
cmc
gs
push
xchg
pop
filds
xor
pop
lcall
push
cmp
cmc
std
pop
push
push
cs
sub
or
sar
clc
inc
out
dec
push
imulb
pop
mov
lods
roll
pop
push
push
loope
jge
sbb
fbld
xor
jle
inc
mov
pop
cltd
mov
mov
notl
cmp
mov
sti
js
xor
mov
fincstp
and
lods
std
in
cmp
movsb
jecxz
mov
mov
pop
lret
xchg
xor
es
out
xor
shll
and
fnstenv
xor
dec
or
dec
cmp
sbb
pop
aad
mov
scas
ds
jmp
jmp
popa
jp
cmp
adc
js
xchg
test
inc
inc
lea
fbstp
adc
iret
cld
push
sti
xor
adc
and
fcomps
cmp
or
dec
mov
push
loope
fiadds
bnd
jmp
js
addl
cmp
adc
out
inc
in
aam
loopne
jns
or
int3
and
enter
push
aad
cmpsl
int
mov
jp
pop
push
cli
xchg
bound
loop
ss
xchg
imul
repnz
adc
int3
jb
mov
or
in
cmc
push
mov
mov
jns
icebp
jg
sub
pop
push
push
aas
mov
dec
outsb
mov
aas
movsl
cwtl
call
mov
mov
jnp
inc
xchg
dec
mov
mov
test
sub
in
or
repz
xchg
in
stc
push
lcall
pusha
leave
cmp
pop
shl
push
lahf
pop
shlb
jo
ljmp
xchg
aas
jo
xchg
xchg
pusha
jg
scas
pop
sub
mov
xor
xor
adc
repz
add
push
rcl
inc
jb
pop
lock
test
sbb
mov
les
mov
cs
mov
popf
mov
push
mov
adc
loop
pop
cmp
inc
fwait
cmp
rclb
rcrb
xchg
ja
mov
loopne
cld
shl
adc
rol
cmp
push
push
stos
pop
cmpsl
cmp
jno
sbb
adc
mov
jecxz
fists
push
pop
xchg
push
arpl
push
scas
lock
ja
mov
pop
add
js
sahf
jne
out
popf
cmp
ret
adc
jb
imul
push
mov
xor
mov
jns
negb
push
dec
inc
xlat
or
inc
add
pop
jmp
clc
push
lcall
das
leave
ror
insb
xlat
lret
xchg
test
dec
aas
test
sub
inc
sub
mov
cld
cmp
test
pop
push
and
std
or
decb
out
movsb
and
push
xor
bound
mov
pop
and
jp
js
movsb
dec
out
adc
xor
bound
push
ss
xchg
loop
sub
pop
int
mov
adc
add
das
mov
ret
stc
fwait
dec
xchg
add
jge
aas
lods
int3
out
sbb
pop
xchg
ret
cmc
bound
aam
add
sub
nop
cltd
xchg
inc
aaa
je
ljmp
push
lods
subl
int3
fwait
mov
jo
neg
jecxz,pn
popf
call
pop
pop
jno
adcb
outsl
xchg
enter
test
mov
int
jne
add
sarb
and
int
dec
jmp
pop
pop
popf
cmp
and
shl
xor
ret
cmp
cmp
mov
pop
mov
rorb
es
push
insb
loopne
arpl
cld
and
out
ret
outsb
mov
sti
adc
pop
popf
dec
out
cmp
or
adc
mov
lcall
sub
loopne
and
fwait
movsl
mov
xchg
fbld
int
mov
ret
push
cmp
bound
ljmp
ss
popa
pop
jg
add
mov
and
pop
xchg
adc
cs
cltd
pop
pop
xchg
and
cli
push
mov
xlat
mov
adc
inc
outsb
cmpsb
jp
out
pushf
push
jg
aad
adc
push
xchg
or
pop
aad
dec
loope
fdivrs
and
das
cmp
ja
fisttps
push
xor
out
es
cmp
out
aas
mov
xchg
lods
outsl
jno
or
or
cmc
or
test
ret
cmp
inc
jae
outsl
movl
push
imul
lahf
leave
dec
push
lret
cli
sbb
cs
jbe
mov
and
fcomps
and
mov
in
xchg
cwtl
cld
adc
inc
and
neg
cmp
std
push
or
sub
iret
test
mov
lods
mov
xchg
repz
sub
jmp
sbb
jmp
lds
lret
ds
dec
sti
mov
mov
pop
xchg
xor
xchg
mov
xchg
test
jne
xchg
mov
xor
and
enter
inc
fcoml
div
andl
inc
mov
ljmp
outsl
shlb
adc
mov
inc
out
sbb
and
adc
repnz
stos
flds
fwait
repz
ljmp
inc
mov
mov
jg
push
pop
ret
dec
mov
lock
push
xor
repz
clc
push
mov
lret
cs
pop
popf
push
subl
cmp
cmpsb
movzbl
mov
scas
js
dec
xlat
scas
jmp
sbb
daa
in
sbbb
out
mov
cmc
mov
imull
aaa
dec
push
aad
mov
arpl
xchg
cmc
hlt
movl
je
inc
inc
fdivs
out
es
lock
das
aaa
loopne
sub
icebp
mov
inc
movsl
lahf
shl
mov
bound
sub
sti
fisttpl
dec
jne
hlt
jns
adc
rorb
xchg
cli
xchg
inc
and
jmp
mov
in
or
and
mov
cmp
push
dec
dec
sub
gs
mov
and
pushf
test
push
and
nop
popa
inc
lds
mov
popa
cmp
dec
clc
cmp
movsb
jns
inc
nop
jmp
cli
andl
shr
out
jo
scas
rclb
pop
push
dec
xchg
bound
mov
inc
and
mov
aas
mov
mov
cmp
aad
fsubl
xchg
cmp
out
clc
fcompl
cmp
mov
xchg
and
mov
pop
mov
mov
sub
push
shr
pop
int3
lock
xchg
jo
ja
icebp
push
loop
pop
mov
cmp
jae
test
popa
rclb
mov
scas
movsb
mov
mov
fnstenv
fs
or
xchg
pop
push
imul
cmp
dec
adc
xor
mov
mov
jne
add
not
out
fcmovb
and
das
lcall
pop
xlat
dec
xlat
and
mov
and
repnz
inc
jne
mov
add
icebp
add
leave
xor
stc
jge
xlat
fmul
jns
outsb
adcl
sub
xor
scas
movsl
out
dec
inc
inc
mov
mov
push
adc
mov
notl
and
aaa
adc
xlat
cmp
in
in
rclb
lahf
pop
adc
shll
mov
fstpt
clc
push
jae
mov
aas
jne
cmpsb
inc
mov
jb
xor
xchg
mov
cltd
cltd
loop
cltd
dec
sbb
dec
xor
push
xchg
lds
sti
push
xchg
loope
out
loop
or
sbbl
xchg
imul
outsb
bound
fidivs
inc
pop
mov
jp
loopne
add
jp
lret
in
push
out
add
inc
outsl
or
jge
or
pop
push
std
ret
into
shll
decb
clc
push
cmc
adc
mov
xlat
push
dec
daa
mov
es
adc
int
jnp
and
mov
pop
add
mov
in
test
outsl
and
movsl
lahf
xchg
mov
rcr
call
sbb
pop
cmp
lock
mov
and
js
nop
test
hlt
cmp
roll
sahf
lret
rcr
cmc
jae
je
stos
mov
cs
mov
loope
pop
or
pop
sti
sbb
dec
daa
inc
and
dec
sbb
push
push
xchg
pop
inc
jmp
or
cld
std
sar
dec
filds
imul
mov
loop
popf
ds
lahf
pop
or
ljmp
sub
repz
sti
int3
fwait
xlat
dec
push
test
xor
fs
loop
cmp
pop
nop
sar
dec
xchg
int
adc
mov
scas
ror
outsl
jno
cmp
mov
stc
loopne
xchg
mov
inc
popa
push
mov
movsb
cmpsb
jbe
sti
sti
lock
cmp
cmc
mov
fistps
push
jecxz
imul
sub
lods
inc
mov
add
sbb
dec
out
loop
inc
and
lods
fs
mov
lock
in
pop
or
jns
stos
cmp
out
movsb
mov
sub
cmpsb
inc
ret
push
lods
lcall
mov
testb
scas
mov
mov
vmovups
mov
test
out
movb
mov
adc
and
cmpsl
data16
loope
pop
ja
cltd
mov
xor
cli
dec
dec
push
shll
cmp
xchg
xchg
mov
mov
arpl
icebp
imul
aad
pop
inc
and
push
fsts
cmp
es
call
loopne
movsl
cmp
fsubs
push
pop
loop
idivb
xor
mov
cmp
sub
repnz
cmp
ja
mov
icebp
jg
sbb
std
cmp
mov
rorl
pop
notl
imul
cmpb
movsl
movsl
cli
divl
sub
mov
andb
sub
inc
sarb
lods
lods
cmp
or
int
mov
scas
sti
mov
cmp
jns
or
lret
xor
test
cli
js
insb
test
insl
mov
repz
mov
mov
adc
sbb
push
sbb
pop
cmc
mov
push
push
sub
cmp
aad
jecxz
add
stos
jae
adc
xor
cli
or
or
aas
ss
iret
icebp
mov
sbb
dec
adc
xor
xchg
fsin
iret
push
int
shlb
pop
shll
je
inc
fldcw
dec
xchg
fisubrl
mov
xchg
mov
push
or
addb
pop
clc
popa
test
scas
jmp
xchg
lret
push
or
push
add
test
inc
stc
call
add
mov
es
and
data16
mov
mov
daa
mov
stos
ror
push
loop
add
int
xor
and
call
cltd
or
popf
pop
mov
push
mov
mov
pop
mov
rolb
cmp
scas
sub
std
jecxz
push
sub
push
movsb
cmpsb
cmc
mov
xor
cld
pop
inc
push
clc
cmp
add
inc
lock
pop
orl
in
and
xchg
iret
push
fsubrs
mov
shll
dec
inc
inc
ljmp
push
pop
add
pusha
adc
jns
out
movsb
jmp
pop
adc
sbb
outsl
xchg
sub
jns
jo
dec
mov
lret
outsl
fwait
lahf
xlat
pop
pop
fnstsw
cli
add
pushf
aaa
mov
and
enter
sahf
mov
ja
ret
int3
xorl
and
inc
aam
sub
mov
jne
fdivl
popl
movsb
and
fsubrs
mov
dec
leave
fstps
mov
iret
test
or
xchg
cmp
sub
out
pop
call
inc
rcr
movsb
inc
nop
lcall
push
cltd
xor
sub
jl
sub
cli
dec
adc
mov
vphaddwd
mov
push
call
int
xor
adc
jo
popf
inc
fildl
sbb
sub
popa
cmp
or
fs
sub
dec
in
jno
jge
push
xor
or
mov
in
cwtl
push
mov
aas
xorl
sub
dec
mov
test
arpl
outsl
popf
jo
cmp
loop
or
int
ret
jbe
leave
pop
xchg
rclb
iret
into
mov
jmp
mov
pop
mov
push
rcl
test
jl
xor
jb
orb
pop
mov
aam
adc
int
flds
mov
xor
or
into
or
lods
or
std
push
negl
out
in
lea
addr16
js
cmp
pop
pop
test
aam
repnz
sti
push
dec
cmpsl
inc
test
xchg
push
aas
popa
jecxz
sbb
bound
pop
int
jecxz
imull
testl
or
shlb
mov
inc
push
mov
inc
mov
outsb
shrb
in
js
lds
mov
lret
cmpb
jae
xchg
icebp
adc
addr16
ret
cmp
std
imul
sarl
lods
mov
ficoms
cld
mov
mov
mov
cli
sub
pop
add
push
mov
sahf
aad
xchg
out
sub
sti
mov
stc
mov
xchg
outsb
lods
mov
rcrl
test
lock
mov
sub
test
in
mov
cwtl
stos
mov
cmp
out
fcomps
outsb
inc
cmp
aaa
shrb
lods
xchg
mov
or
sbbb
mov
adc
cmpb
sub
mov
xor
fadds
scas
jecxz
xor
inc
cld
mov
lea
or
roll
mov
es
popf
add
pop
shl
aam
daa
push
jns
push
ret
arpl
pop
dec
cmp
sahf
cwtl
dec
arpl
fadds
jmp
mov
enter
movsl
addr16
inc
pushf
ja
mov
int
mov
push
inc
cmp
mov
mov
sub
mov
xchg
in
sarb
ret
test
outsb
repz
mov
dec
jmp
xor
fcmovbe
rol
mov
test
push
in
in
mov
cwtl
jmp
mov
sti
adc
fs
das
sbbb
pop
ja
stc
mov
sbb
fnstcw
jle
loopne
iret
nop
xchg
int3
das
add
mov
xchg
inc
mov
xor
cmp
xor
adc
pop
outsb
push
out
push
in
and
imul
mov
pop
fwait
mov
dec
arpl
sub
mov
lret
sbb
mov
jl
xchg
add
push
inc
jge
mov
stos
mov
hlt
dec
inc
test
cwtl
aas
xor
dec
dec
and
jb
imul
shlb
cs
imulb
popf
mov
call
xchg
stc
mov
push
daa
jl
popa
loopne
faddl
xor
push
lret
test
dec
pop
mov
ret
pop
jbe
and
xor
scas
xchg
bound
stc
call
jge
fldl
pop
rcll
cwtl
int3
cmp
cmp
insl
stos
sub
roll
sbbb
rcl
cmp
mov
mov
ret
aas
stos
fldcw
aaa
ja
rcrl
roll
pop
adc
dec
insb
ss
gs
std
jnp
mov
mov
rclb
insl
jle
andl
aaa
push
xchg
xchg
jmp
pop
push
jno
mov
outsb
in
loopne
arpl
inc
adcl
dec
adc
sbb
stos
cmp
adc
cmp
push
push
in
movsl
mov
data16
sbb
insl
ror
adc
sub
xchg
ljmp
pop
loope
lcall
jbe
test
jns
add
leave
lahf
notl
push
inc
fnstsw
in
mov
cmp
jo
add
lret
pop
lods
xchg
inc
push
adc
inc
in
scas
jo
sbb
aad
test
mov
sarl
sub
mov
and
stos
adc
dec
test
mov
ret
mov
les
push
fidivrl
sub
sahf
cmpl
mov
jns
outsl
mov
sbb
imul
sub
fcmovb
jae
daa
addr16
dec
adc
sbb
inc
add
mov
subb
addb
cmp
or
fcoms
mov
cmc
push
push
je
movl
dec
out
out
mov
pusha
js
jb
das
sbb
mov
hlt
mov
xor
and
mov
mov
pop
jl
inc
xchg
mov
dec
into
inc
add
add
push
jae
jge
mov
adc
xor
mov
or
inc
mov
add
or
sahf
arpl
pop
lods
hlt
cmpsl
test
mov
enter
jp
add
inc
lods
in
add
and
xchg
inc
mov
adc
pusha
mov
and
jns
test
lret
mulb
movsb
mov
pop
adc
out
sbb
mov
push
or
sarb
rolb
push
cmpsb
fimull
js
push
push
jecxz
sub
sbb
das
rcl
dec
into
or
iret
mov
xchg
adc
jl
cmp
pop
loop,pn
imul
xchg
imul
jp
cmp
xor
sbb
mov
imul
movl
inc
es
cmp
fldl
pop
movsl
xchg
in
fnstcw
inc
js
xchg
pusha
jle
sahf
and
pop
xchg
frstor
hlt
or
mov
add
jmp
and
test
inc
dec
pop
push
aaa
scas
inc
add
jbe
pop
out
lret
cmp
push
enter
pop
sub
or
ds
lds
pop
xor
ret
push
xor
dec
daa
out
dec
dec
int
into
inc
jne
popl
cmp
insl
or
into
jo
sbb
cmp
xor
dec
subb
out
stos
xor
sahf
or
lcall
push
dec
sub
adc
ds
xchg
jae
scas
jecxz
or
or
inc
into
xor
xlat
fwait
adc
jns
add
xor
inc
add
popf
xor
in
jecxz
sub
push
enter
push
sub
mov
sti
jb
sbb
test
dec
mov
mov
cltd
cmc
insl
adc
daa
pusha
mov
mov
lods
jle
mov
sub
and
jnp
add
push
push
hlt
cmpsl
and
pop
add
sbb
xchg
mov
pop
repnz
aad
out
pop
ss
push
sbb
adc
add
clc
inc
jae
and
fdivrl
mov
aaa
rcll
leave
push
loop
cmp
cmp
rcrb
sti
sub
push
jl
out
stos
fcmovbe
movsb
push
jb
inc
xor
bound
xchg
int
push
dec
mov
loopne
fldl
mov
add
in
shll
movsb
dec
xor
sub
aad
int3
jle
daa
out
push
jecxz
push
pop
or
iret
cmp
push
mov
mov
cmp
xchg
inc
adc
jg
out
push
and
das
test
in
sbb
inc
into
sub
subl
jecxz
cmpsl
aas
jg
xlat
jbe
cli
scas
and
sub
inc
fdivrs
mov
pop
pop
mov
je
pusha
cli
cs
inc
loopne
pop
notb
gs
mov
mov
mov
enter
and
mov
push
sub
stos
out
nop
push
sbb
inc
dec
push
les
test
cmovae
daa
lds
iret
pop
leave
out
mov
xchg
sbb
mov
inc
push
negl
aad
and
adc
incl
inc
fidivl
imul
setno
sub
inc
cld
ds
loop
pop
test
fisubl
sub
addr16
je
lea
sbbb
outsl
in
imulb
pop
xor
mov
pop
ret
cmp
fbstp
sahf
xor
cs
and
sub
mov
and
cwtl
push
fisttps
lahf
add
adc
test
movsl
sbb
mov
inc
sub
xchg
xor
push
sbb
fbld
sbb
sahf
mov
les
push
adc
roll
inc
test
mov
int
jnp
adcl
nop
jecxz
dec
enter
xchg
mov
sar
into
mov
sbb
movsb
loop
mov
jg
hlt
bound
adc
xchg
mov
ds
xor
inc
in
loope
in
inc
sbb
or
jg
fwait
xchg
xchg
jmp
outsl
and
out
and
rcr
push
add
scas
inc
aaa
mov
repnz
cmp
mov
ret
mov
fnstcw
out
test
adc
mov
shlb
push
cltd
cmp
jns
leave
pushf
cli
cmpsb
inc
ljmp
mov
mov
int3
call
fcomi
fistl
xchg
mov
lret
scas
fwait
lods
insb
lds
mov
xchg
jp
cld
lods
mov
iret
shll
dec
mov
xchg
inc
xchg
orb
test
popf
push
ja
inc
hlt
lret
pop
mov
arpl
xor
rcr
fs
push
cs
add
popf
out
js
js
icebp
jecxz
call
and
addr16
cld
lret
shlb
outsb
sub
jo
test
enter
jns
movsl
xlat
xor
aad
in
jle
mov
jg
pop
sbb
sti
sub
mov
lret
in
add
pop
das
jl
shrl
xchg
xlat
cs
fistpll
cmp
ds
fldenv
add
push
xlat
bnd
shlb
or
repnz
mov
andb
inc
mov
orb
xchg
lods
mov
dec
and
xlat
fsubrs
stc
adc
sbb
andb
sbb
adc
sbb
pop
movsb
rcrb
jecxz
fwait
pop
imul
cmpsl
mov
pop
inc
aam
int3
cld
cmp
pop
inc
cmp
and
jae
fstps
shll
mov
lock
mov
aam
out
push
ds
mov
jg
xor
repz
jle
jns
ds
add
sbb
push
pop
ljmp
dec
lods
xchg
push
xor
repz
xchg
xor
cmpsl
scas
scas
xor
loope
and
loop
iret
dec
shr
and
inc
xchg
enter
ljmp
dec
stc
out
mov
aam
icebp
and
mov
nop
mov
ds
push
shrl
inc
adc
adc
xorl
lea
subb
or
gs
insl
inc
dec
int
lret
je
xchg
mov
xchg
cmove
call
mov
cmp
ljmp
movsb
and
sub
ffreep
fs
out
mov
movsl
test
ljmp
add
loope
iret
pop
fdiv
pop
mov
int
loopne
in
mov
sar
sub
clc
fs
rorb
fnstenv
out
pop
mov
push
sar
fcoml
xchg
jnp
add
push
xchg
mov
inc
cld
inc
leave
cli
mov
pop
aaa
out
sbb
xor
or
adc
jb
cmp
fnstenv
lock
into
xchg
jg
add
shrb
mov
inc
popa
xchg
addr16
xchg
jno
sub
push
adc
int
rorb
fldt
cmp
xor
jmp
adc
mov
cli
fsubl
mov
in
and
fxch
jl
adc
add
and
xlat
mov
std
cmp
out
jmp
data16
movb
sarb
loopne
inc
ret
lahf
dec
sbb
push
add
lock
mov
xor
test
xor
adc
cs
dec
and
sub
fs
or
jge
cmpsl
sbb
fs
xor
sub
je
dec
inc
iret
add
dec
mov
adc
mulb
daa
mov
adc
ja
cmpsl
in
add
stos
xchg
inc
faddl
rorl
out
es
and
jmp
pop
imul
or
jne
faddl
cli
int
jmp
xchg
mov
lret
push
xchg
cmpsl
in
fdivrs
mov
pop
xor
xchg
add
fistpl
repz
clc
call
push
ret
rorl
nop
push
iret
mov
xor
mov
dec
mov
jle
mov
daa
mov
ljmp
cmpsb
mov
pop
sub
pop
or
pop
pop
dec
lock
mov
enter
mov
stos
lds
ja
sub
daa
dec
and
dec
and
or
mov
push
mov
mov
addr16
fs
dec
push
pusha
mov
xchg
loope
das
test
addr16
sti
or
push
xchg
hlt
push
fcompl
adc
scas
mov
stos
mov
fidivrs
sbb
aas
pop
inc
xchg
das
leave
mov
imul
das
mulb
pop
or
jle
pop
mov
xchg
stos
cmpsl
aaa
mov
enter
inc
das
dec
imulb
int
sub
out
insb
xor
stos
or
pop
rcll
insl
movsl
test
lods
jne
loopne
pop
cmp
lahf
jb
push
pop
cmp
movsl
ficoml
sbb
test
mov
or
inc
and
inc
fistpll
push
fxam
mov
sbb
adc
push
xor
sbb
out
jo
loopne
xor
sbb
jbe
out
rcr
sub
add
popf
scas
out
jbe
fwait
in
pop
pop
shl
gs
mov
out
sub
sahf
inc
clc
xlat
scas
xchg
pop
ss
mov
jmp
call
mov
and
xor
cmpsl
cmp
incl
xchg
dec
fwait
sbb
inc
push
jge
fcomp
add
es
xchg
pop
insl
cld
test
dec
in
fwait
repnz
iret
call
push
adc
cmp
jae
mov
and
mov
push
jecxz
sbb
sub
add
jne
inc
test
hlt
loop
inc
push
nop
sbb
aas
fldt
loopne
mov
or
xor
mov
add
push
adc
fldenv
inc
push
sahf
ror
mov
adc
inc
mov
fsubl
cmp
out
jnp
aad
sbb
xlat
rorl
pop
mov
loop
push
out
lcall
sbb
jnp
sbbl
stc
cmc
cmp
jmp
adc
inc
scas
sub
std
test
and
jge
inc
bound
into
test
inc
movsl
in
xor
insl
pushf
fsub
pop
sub
aam
test
mov
cmp
shll
stos
nop
mov
lods
xor
pop
and
mov
or
in
cmp
nop
or
loop
cmpsb
and
xchg
cmp
xchg
mov
jo
in
xchg
mov
jp
mov
cltd
adc
fisubrs
je
push
pop
xor
pop
out
xor
mov
add
pop
test
aam
in
xlat
data16
lret
or
mov
out
jno
pop
xchg
push
sub
cmp
dec
push
mov
xchg
ljmp
mov
nop
push
in
mov
lods
sbb
test
outsb
sbb
xor
xchg
dec
aaa
mov
nop
rorl
mov
rorb
stos
ja
int
xchg
pop
int
jmp
cmc
xlat
fs
jmp
pop
sbb
xor
dec
adc
push
repnz
rorl
push
push
rcll
mov
aaa
enter
pop
inc
pop
mov
mov
and
outsl
mov
ficoms
lea
test
lea
xor
adc
mov
out
imul
inc
sahf
int
xor
add
dec
xor
cwtl
dec
mov
sbbb
lret
jo
ret
dec
int3
gs
mov
sub
or
call
jb
mov
daa
stos
lret
stc
jo
mov
mov
outsl
or
enter
push
push
jo
push
xchg
cld
mov
sbb
xchg
scas
mov
popf
push
xor
xlat
add
adc
inc
mov
lea
sbb
push
inc
push
loop
pop
lcall
aad
sbb
mov
notb
cmpsb
lea
loop
and
sub
push
lods
pop
xor
mov
adc
pop
add
dec
je
mov
aam
pop
je
sbb
mov
push
xor
mov
sub
or
add
sbb
popa
shll
adc
mov
scas
das
xchg
cmpsb
push
ljmp
pop
arpl
inc
ds
fisubrl
mov
ret
push
imul
mov
bound
xchg
inc
push
pop
jno
jns
jns
lea
add
jae
test
xor
cmp
sub
jg
roll
jmp
or
mov
aam
shlb
cmp
fwait
sbb
out
and
fwait
pop
dec
in
xchg
adc
adc
mov
or
mov
fmull
mov
pop
jmp
inc
mov
int
bound
xor
dec
jmp
add
scas
mov
xor
push
rorb
mov
sbb
pop
stc
cmp
add
mov
mov
jns
sbb
mov
rclb
xchg
ret
cmp
and
in
sbb
daa
mov
repz
mov
mov
enter
add
pop
xor
sbb
lock
data16
das
or
dec
cmc
sub
sbb
pop
stc
aaa
sbb
stc
scas
stos
fsubrl
mov
inc
loop
push
lahf
mov
mov
bound
dec
cmp
adc
ficompl
mov
int
insb
jmp
test
sub
xor
and
aaa
cmp
mov
pop
inc
stos
jo
movsl
fbld
fs
hlt
out
fstpt
jno
aad
jne
cltd
js
cmpsl
test
cmp
fmulp
sti
iret
sub
cld
movsl
out
push
sbb
cmp
xor
push
lods
or
mov
xlat
jnp
addr16
loopne
pop
and
cli
mov
mov
std
imul
test
push
push
cs
in
dec
loop
adc
mov
sbb
aaa
ljmp
into
mov
and
inc
cli
xchg
pop
add
ljmp
fisttpll
jne
xchg
adc
push
stc
and
movsl
out
test
popf
test
push
mov
mov
sbb
sbbb
mov
xchg
pop
outsl
push
je
orb
mov
inc
xchg
loop
push
ret
repz
pop
sbb
in
cli
mov
or
adc
cmpb
mov
mov
sbb
rol
mov
cmc
sub
and
mov
scas
pop
cmp
pushl
jg
rol
cmp
ss
mov
dec
mov
out
sub
in
jb
mov
sub
push
add
movsl
mov
stos
xor
mov
mov
xchg
push
and
aaa
dec
mov
jae
fldt
fisubs
mov
sub
sub
test
fcoml
popf
idiv
cld
inc
mov
dec
push
outsl
sbb
adcl
add
mov
xlat
push
mov
testl
add
xchg
dec
xor
fdivl
int3
lcall
or
scas
lahf
push
push
enter
out
dec
dec
jge
pop
or
imul
xchg
sahf
cli
shl
insb
fdivp
adc
xchg
outsl
sub
jno
out
repz
and
cmp
cli
stos
xor
popf
sub
xor
ret
inc
or
and
icebp
jno
pop
shrl
shlb
pop
inc
dec
movsb
xchg
adc
arpl
cli
jbe
mov
cltd
inc
mov
subb
repnz
lock
popa
push
stc
xchg
or
test
or
push
push
out
mov
testb
imul
dec
scas
insl
mov
mov
sbb
outsb
add
insl
ljmp
int
fnstenv
xor
mov
lret
mov
cmp
xchg
mov
xor
fildl
scas
sbb
add
call
jnp
jno
iret
push
imul
pushf
shrl
sub
in
aaa
mov
ds
loopne
cmpsl
lret
add
sar
cltd
inc
sbb
push
inc
pop
sbb
xor
dec
js
xchg
inc
and
sbb
ret
test
das
xor
cli
outsb
mov
mov
movsb
ret
sti
push
dec
mov
dec
mov
cmp
jb
pop
and
pop
jbe
je
sub
repnz
lock
sub
cmp
jo
jo
add
rclb
fnstcw
jp
pop
fstl
into
ds
inc
stc
xlat
out
xchg
sub
pop
clc
dec
mov
inc
fwait
ss
movsl
xchg
ror
stos
dec
fldcw
mov
push
add
or
insb
xor
lds
mov
push
fwait
mov
sub
jp
hlt
cmp
mov
or
mov
adc
sub
lret
pop
les
mov
cmp
das
mov
cmp
add
hlt
ljmp
mov
jp,pt
inc
stc
sahf
fdivs
stc
fs
jg
jle
lret
data16
test
stc
das
sbb
sub
mov
fistpll
xchg
dec
mov
addb
jle
divl
loop
ds
xchg
popf
repz
rorb
imul
test
dec
cmpsb
loope
ja
std
mov
xor
push
lahf
out
outsl
and
adc
or
sub
push
xrelease
mov
fucom
mov
fsubrs
mov
int
and
ja
jle
rcrl
cmp
adc
push
hlt
imul
jge
push
shlb
pop
push
jecxz
mov
in
aam
or
fdivs
jae
fdivr
shll
mov
pop
jecxz
jge
lahf
cs
inc
lods
out
inc
push
movsb
jl
mov
test
cmpsl
pop
mov
mov
pop
pop
mov
roll
testb
or
inc
or
popf
in
xor
icebp
icebp
test
sbb
pop
add
mov
jae
inc
push
mov
pop
fmull
sti
test
add
cmp
mov
imul
adc
push
pop
cmp
cmpsl
push
lds
xor
ror
cmpsl
mov
sbb
or
push
xchg
cmpl
mov
xor
mov
inc
jns
je
fcoms
mov
aam
or
aas
outsb
mov
clc
fcmovb
mov
push
cld
inc
sarb
addl
inc
popf
inc
adc
xor
rorl
sbb
mov
test
jae
cmp
mov
insl
das
shl
push
daa
mov
cmpsb
js
mov
adc
mov
mov
push
mov
xchg
adc
mov
stos
pop
cmp
daa
push
mov
mov
jbe
in
xor
mov
inc
cmp
loop
pop
push
mov
adc
scas
test
pushf
into
imul
jb
jbe
jmp
pop
cltd
jp
mov
adc
lods
cmp
es
add
iret
dec
cs
das
mov
scas
outsl
mov
xor
mov
testb
pop
inc
push
std
push
stos
arpl
mov
sti
mov
push
js
dec
cmp
pop
fyl2x
mov
hlt
cmp
push
in
test
inc
andb
mov
fdivr
sub
mov
and
lahf
in
ret
out
xchg
stos
ljmp
in
repz
in
or
imull
mov
dec
cmp
lret
stos
stos
bound
xor
mov
add
push
dec
xor
aad
mov
xor
mov
xor
and
and
or
dec
mov
xor
hlt
fcmovnu
or
lea
sub
adc
cmpsl
mov
push
repnz
push
or
cmp
enter
xlat
push
fs
push
leave
loopne
mov
pop
and
mov
jno
jo
xchg
or
jo
pop
subb
mov
inc
push
lret
push
xchg
fwait
in
shl
aam
push
out
pop
scas
cmpsb
cs
sub
clc
xchg
gs
push
mov
fdivs
jmp
sbb
or
stos
adc
test
test
test
cmp
push
nop
jge
dec
inc
stos
dec
sbb
dec
jb
add
push
add
enter
lods
lcall
repz
adc
cmp
jge
arpl
cmp
sbb
or
repnz
cltd
mov
inc
mov
in
insl
xchg
sti
enter
into
aaa
std
pop
ficoml
xor
hlt
cmp
test
hlt
repnz
stc
xchg
imul
lret
pop
lea
lcall
cld
sub
outsl
clc
ds
xor
sub
arpl
push
or
xor
mov
pmaxsw
aaa
adc
ds
xchg
hlt
test
xchg
je
mov
sub
sbb
arpl
cmpb
jg
fdivr
ja
jo
testl
cmpsl
jmp
dec
sbb
mov
rorb
ss
xor
pushf
cwtl
out
push
ljmp
mov
ret
mov
scas
xlat
in
loop
jp
and
aas
xchg
and
push
outsl
push
pop
fnstenv
fisubs
imul
add
hlt
stos
cli
jbe
push
xor
enter
shll
push
or
sub
stos
xchg
push
or
sub
jae
adc
loopne
inc
inc
shlb
call
mov
lcall
inc
xchg
and
push
es
dec
pusha
mov
inc
lds
mov
cmp
jecxz
cmp
test
arpl
aaa
pop
mov
pop
inc
or
icebp
and
lods
inc
movsb
inc
imul
test
push
iret
scas
sbbl
or
push
je
je
ret
mov
pop
fstpt
repnz
sbb
dec
mov
dec
in
imul
xchg
addb
mov
sub
add
push
stos
sub
call
xchg
lods
mov
cmp
jno
and
add
mov
add
loopne
add
mov
iret
enter
std
push
stos
in
insb
cmp
mov
inc
lcall
lea
pop
push
cmp
mov
mov
div
sub
int
push
out
jecxz
inc
push
mov
sub
mov
lods
jae
imul
add
out
std
xlat
xlat
dec
mov
loopne
addr16
fisubs
cltd
aaa
sbb
sbb
mov
sub
and
out
daa
lret
es
in
fldenv
xchg
and
jge
mov
mov
or
mov
adc
jne
icebp
add
sbb
pop
xor
sub
stos
sub
sub
push
or
stos
mov
and
dec
pop
mov
xor
insl
test
and
sub
test
out
adc
jne
icebp
loope
lahf
pop
jne
rcll
cmp
call
mov
dec
xchg
add
pop
addr16
ljmp
pop
cmp
loope
mov
popf
sbb
push
ljmp
test
int3
inc
out
push
je
xor
lcall
sbb
enter
test
or
add
fbld
mov
outsb
sub
mov
data16
pop
sub
xchg
mov
jbe
in
mov
flds
push
ret
jno
movsl
inc
mov
inc
fisubs
dec
dec
les
mov
xor
lea
cmpsb
mov
mov
popa
jp
pop
shlb
iret
adc
aam
mov
push
scas
xchg
loopne
or
emms
enter
sub
stos
xchg
sbb
dec
adc
inc
daa
xorb
iret
push
sahf
or
push
dec
inc
pop
or
out
or
lock
dec
adc
mov
sbbb
dec
push
ljmp
test
mov
dec
push
pop
xchg
int3
movsl
fisttps
inc
push
or
rcrl
cmpl
push
xor
push
imul
or
push
loopne
sub
shll
jnp
adc
lea
ljmp
adc
lods
add
sbb
cmp
xchg
shll
and
pop
andl
sub
add
addb
incl
sub
inc
ss
cwtl
mov
mov
leave
mov
pop
pop
jae
sbb
in
jmp
test
int
cmpsl
rcrb
lods
pop
or
mov
fadds
xchg
je
in
dec
push
fnstenv
daa
fcmovb
inc
fs
call
mov
mov
jns
sbbb
or
das
cmp
neg
mov
lock
sub
mov
push
mov
inc
and
lds
push
mov
test
arpl
ret
stc
sub
xchg
lds
sbb
jnp
cvtps2pd
mov
pop
push
cwtl
mov
pop
rolb
out
or
mov
icebp
cltd
push
imul
loop
and
addl
js
dec
loopne
es
push
jb
pop
sub
or
daa
ss
cli
cmp
adc
movl
insl
mov
test
xchg
fdiv
fiaddl
and
inc
sbb
iret
stc
ds
loope
fstl
popa
xchg
lahf
fmulp
xchg
lcall
xor
pushf
adc
or
lret
mov
add
inc
in
jg
jge
jg
inc
push
jmp
ljmp
dec
mov
xchg
xor
lcall
sarl
xchg
jno
clc
pushf
adc
jns
dec
mov
cwtl
into
jne
mov
faddl
lret
dec
mov
adc
sub
inc
push
and
pop
pop
xchg
pop
pop
clc
or
movsb
inc
mov
mov
jle
adc
imul
xadd
cmc
dec
or
mov
subb
aam
fdivl
test
jne
inc
iret
xchg
es
sbb
push
popf
rcrl
mov
adc
cmp
out
cmpsl
mov
fnstcw
mov
inc
ret
xchg
cmp
loopne
imul
mov
jns
mov
and
dec
mov
lds
dec
pop
add
mov
inc
stos
adc
xchg
mov
cmpl
aad
int3
aam
movsb
aas
pusha
subb
push
or
imul
push
mov
push
push
and
aas
into
mov
mov
push
mov
push
enter
repnz
inc
pop
pusha
mov
push
dec
outsl
pop
sub
addr16
rolb
xor
popf
and
sbb
mov
cmp
cli
call
daa
mov
movsl
cmp
xor
xchg
in
dec
sbb
bound
mov
ret
inc
les
xor
jns
jb
xor
cmp
test
push
lods
push
pop
or
mov
cmp
jae
mov
test
js
inc
xlat
push
mov
aas
ja
jnp
iret
pop
lret
aas
dec
loop
or
out
jg
cli
jne
adc
stos
xchg
push
push
stos
cmpsb
fadd
jmp
add
shll
and
xor
sti
data16
enter
cmp
int3
aaa
mov
add
xor
les
mov
sahf
sub
cmp
dec
repnz
lds
mov
dec
cs
or
popa
gs
outsl
fdivs
push
dec
xor
add
loopne
pop
dec
xor
and
add
imul
cmpsb
inc
mov
leave
out
sub
mov
inc
popa
cmp
or
loope
xchg
mov
mov
aad
stc
mov
mov
enter
cwtl
adc
xor
test
mov
lods
lret
pop
jne
movsl
pusha
mov
orl
adc
je
cmpsb
or
and
in
mov
inc
dec
xchg
imul
jno
cmc
sbb
mov
stc
pusha
mov
mov
cltd
push
cmpsl
jnp
push
and
or
lret
push
pop
pop
shlb
hlt
test
shll
sbb
inc
or
movsl
nop
outsb
out
lods
hlt
insl
sarb
sub
insl
and
je
scas
dec
in
sub
stos
jge
xchg
bound
test
cli
decb
pushf
mov
mov
gs
push
push
bound
push
sub
into
adc
mov
cltd
dec
push
fs
lret
push
add
dec
mov
push
scas
add
std
int
jb
dec
arpl
das
ror
pushf
pop
cmp
push
popa
sbb
lods
lds
sbb
jo
les
int3
xchg
gs
mov
ds
inc
test
outsb
mov
or
dec
rcl
inc
add
into
add
in
jns
fists
cmp
and
jmp
pop
std
lock
xchg
xorb
inc
mov
out
jge
mov
scas
ret
sbb
movsb
aam
loop
aaa
mov
jae
sahf
insb
in
push
stc
pop
inc
cmpl
mov
decb
cs
pop
jle
pop
cmp
push
popf
jo
sub
pop
add
cltd
das
daa
mov
add
pop
cld
mov
jl
int
lds
inc
sbb
dec
scas
in
xlat
lods
cmpsl
ret
add
or
mov
push
pop
inc
add
sbb
and
call
lcall
mov
test
push
addl
dec
jbe
int3
pop
shl
push
outsl
cli
cmc
out
nop
repnz
int3
jp
in
mov
cwtl
ret
into
stos
xchg
into
adc
rclb
insl
fldt
shrl
cmp
cmp
or
jecxz
imul
sub
loop
xchg
push
jbe
xchg
pop
jle
stos
shl
jno
out
push
data16
xor
jns
or
fldenv
xor
push
jecxz
sbb
cmove
cmpsl
insl
adc
ljmp
dec
push
sbb
je
xor
addb
fcmovu
shrb
add
mov
mov
push
cvttps2pi
jnp
fidivs
ret
xor
jmp
jb
jl
push
jecxz
test
cld
or
sub
xchg
xchg
sti
out
out
movl
flds
test
jbe
mov
sbb
outsb
or
outsb
and
ja
cmp
cmp
pop
hlt
mov
sbb
lods
mov
and
jge
pop
mov
pop
leave
or
int
popf
pop
aaa
lret
add
and
or
jae
ja
aaa
lret
ljmp
dec
hlt
std
nop
adc
jo
add
flds
xchg
jo
push
bound
and
mov
jno
push
jmp
jno
repz
sub
in
pop
sbb
jecxz
fsubl
xor
or
sbb
mov
dec
arpl
xchg
outsb
add
rorb
mov
jno
xchg
push
xor
mov
inc
movsb
xor
pop
push
and
inc
cltd
call
xor
inc
jne
xchg
sub
xor
fldt
movsl
sub
rorl
test
fs
in
stos
popf
xchg
enter
jp
xchg
jo
cs
adc
notb
add
xchg
aam
out
xchg
mov
addr16
repnz
add
xchg
sub
adc
pusha
jno
jns
sbb
pop
dec
dec
daa
push
call
sbb
fwait
or
jns
addr16
add
xor
push
pop
dec
mov
mov
lock
mov
cli
sub
fisubrs
dec
mov
mov
mov
cmpsl
and
into
mov
adc
xchg
movsb
cmp
xchg
xchg
inc
fldl
lds
mull
fcompl
lods
in
bound
std
xor
pop
mov
xor
pusha
inc
lods
xor
push
stc
adc
mov
cs
popf
insl
test
out
push
imul
rorb
cmpsb
dec
sub
jne
sub
lahf
gs
cld
dec
add
add
fnstcw
fistpll
mov
cmpsl
mov
ret
mov
sti
mov
mov
jo
and
jg
jo
insb
arpl
pextrw
and
adc
or
inc
pop
fldt
adc
aam
xor
dec
push
push
loop
inc
fcoms
in
or
or
mov
cmc
adc
aaa
dec
cwtl
inc
loopne
out
iret
out
pop
sbb
pause
imul
mov
push
cmpsb
mov
jmp
bound
sbb
jbe
dec
aas
popf
push
les
xor
test
mov
aam
and
decb
dec
int
jns
xor
das
xlat
dec
sbb
sub
enter
inc
xor
outsb
in
es
out
sub
or
adc
and
xchg
mov
xchg
mov
xlat
lea
push
dec
jmp
stos
jmp
jnp
jae
aaa
xor
mov
lods
notb
pusha
mov
inc
cmp
test
sub
mov
adc
push
das
push
iret
ret
sub
cltd
and
cwtl
js
mov
and
mov
push
pop
sub
loopne
or
xchg
cmpsb
int
mov
mov
xor
in
pop
adc
aas
loopne
xor
xor
mov
pop
cltd
cmpl
pop
push
mov
ds
data16
inc
aam
cmp
stos
push
push
xchg
push
inc
or
jo
mov
mov
flds
mul
mov
push
mov
out
rcr
lret
into
fdiv
mov
and
stos
insl
push
xchg
push
jbe
xchg
sbb
iret
ja
or
sub
xor
mov
add
das
fdivs
push
sbb
jns
push
cmp
sbb
bound
mov
test
inc
outsb
je
stos
aad
sbb
mov
adc
xchg
out
lods
int
sub
adc
mov
loopne
test
and
pop
mov
push
add
xchg
test
icebp
dec
mov
mov
clc
fbstp
xchg
aas
push
xor
xor
adc
xchg
aaa
ror
dec
cmp
fmul
push
jnp
lahf
cmp
scas
mov
and
lret
mov
shl
andl
call
xor
xor
push
xor
call
andl
mov
leave
shrl
mov
imul
push
pop
mov
sbbl
pushf
xchg
jo
dec
xchg
add
mov
fstl
sbb
cmp
aaa
inc
rcr
push
mov
fistpl
jmp
iret
aaa
pop
sahf
push
jp
iret
fisubl
call
push
aas
ljmp
jae
inc
adc
test
push
lea
jge
xchg
adc
and
push
negb
iret
dec
sbb
daa
mov
in
xor
lret
out
push
repz
jo
data16
lcall
jno
outsb
xlat
imull
xchg
adc
test
add
outsl
mov
or
mov
xor
std
ljmp
fidivs
imul
push
xor
gs
cmpsl
adc
jg
xchg
and
pop
fistpll
arpl
in
pop
xor
ljmp
fidivl
pop
testl
xchg
add
loop
xor
jmp
add
dec
push
cmp
jns
sbb
out
in
lret
shl
mov
mov
jp
xor
rol
hlt
cmp
cmp
push
mov
mov
popa
je
sub
cmc
repz
mov
mov
in
mov
mov
dec
pop
in
imull
ret
ds
les
ret
arpl
cmpb
jmp
xor
stos
lret
shl
xchg
adc
mov
cs
adc
and
icebp
mov
pop
dec
and
pusha
inc
push
aas
push
jns
jg
stc
divl
push
pop
addr16
mov
adc
mov
inc
movsl
mov
and
nop
mov
cli
xorl
lods
pop
mov
pop
shl
in
rcr
stos
mov
flds
pushf
arpl
insb
mov
clc
arpl
in
subl
lcall
mov
mov
sub
mov
out
push
imul
nop
and
mov
or
xor
dec
and
dec
popl
pop
call
es
add
xchg
test
mov
das
sbb
aam
cmp
mov
sti
xor
pop
fst
mov
mov
in
mov
adc
popa
lods
mov
jns
hlt
call
jb
pop
loope
notb
dec
and
inc
pop
imul
push
test
lods
sbb
leave
xchg
int
mov
adc
jl
cmp
add
or
imul
pop
call
fsubs
mov
fdivl
sbb
jge
sahf
inc
test
leave
pop
rep
lds
faddl
and
hlt
inc
lea
xchg
inc
pop
in
mov
fs
outsl
movsl
add
ret
lods
andl
mov
icebp
push
pop
sar
stos
scas
out
in
xor
mov
dec
pop
xor
data16
dec
out
push
loopne
loopne
sub
pop
mov
lds
xchg
pop
cmp
sub
loop
out
cmpsb
sbb
mov
pop
mov
insl
stc
ret
rclb
xor
aam
sub
stos
aaa
outsb
adc
and
xchg
lret
js
adc
and
stos
mov
fwait
mov
adc
mov
add
nop
testl
jle
pop
data16
dec
dec
loopne
inc
xchg
xchg
mov
jge
jg
or
out
fdiv
ds
cmpsl
sub
out
mov
mov
sbb
addb
push
inc
shlb
dec
push
sbb
cmp
dec
jmp
mov
xor
mov
dec
sub
push
xchg
loopne
xor
pop
push
adc
mov
dec
and
pushf
loop
add
or
mov
dec
push
dec
jle
insb
ret
lret
sti
pop
rcrb
pop
inc
mov
and
or
cmp
mov
cmpsl
test
jg
cltd
loope
fdivl
and
jmp
stc
pop
add
paddq
xor
mov
sti
outsb
daa
in
and
ficoms
xor
mov
popw
insl
add
rolb
mov
jl
cmpsb
add
sub
int
data16
movsb
test
ja
scas
push
inc
adc
jge
in
rep
cmpsl
inc
lds
leave
adc
cwtl
xchg
imul
inc
jo
and
sbb
inc
pushf
mov
lods
inc
clc
test
xor
aas
push
push
and
cli
test
jns
sbb
cld
lahf
jbe
iret
cltd
lcall
push
jle
test
or
leave
arpl
hlt
insb
cmpsl
hlt
fnstenv
cmp
out
xor
call
inc
push
out
jb
jecxz
pop
push
shlb
sub
push
and
into
repz
lods
jno
cwtl
cwtl
adcl
data16
xlat
fwait
mov
mov
xlat
jge
adc
hlt
test
subps
adc
scas
cld
loope
inc
lcall
movsb
into
lock
cmp
cwtl
xchg
push
mov
insl
dec
mov
jle
mov
push
mov
xor
into
out
int
jo
mov
xchg
add
cmp
loop
sarb
movsl
jne
mov
dec
jp
mov
dec
iret
insl
faddl
mov
stos
sub
adc
cmp
xchg
mov
out
clc
test
xchg
in
scas
cmpsl
jae
insb
outsb
jge
mov
scas
mov
arpl
xchg
sub
outsb
mov
push
mov
imul
xchg
rorb
and
daa
dec
cmp
fwait
js
cmpsl
jge
sbb
ja
jne
loop
daa
outsl
mov
xchg
ss
iret
add
insl
jge
jmp
fdivl
sbb
out
int3
rorb
push
dec
push
insb
out
sub
inc
das
sbb
inc
nop
test
shl
add
cltd
mov
pop
cmp
or
add
aam
push
cmpsb
xor
repnz
adc
sbb
jb
pop
sub
pop
add
gs
mov
mov
xor
jnp,pt
xorl
xor
das
fnstsw
jp
aaa
xchg
push
pop
loope
ret
rol
bound
mov
xchg
fsts
inc
fs
divb
fdiv
sbb
mov
lods
rorb
push
and
lds
cmp
mov
lret
jecxz
mov
repz
sub
movb
adc
jp
ljmp
jg
jae
dec
jecxz
rcr
mov
push
or
aaa
imul
push
sti
mov
fnstcw
loop
mov
dec
pop
fs
daa
inc
inc
test
stos
stos
mov
cmp
popf
sbb
ljmp
mov
movsb
lods
mov
xchg
or
pop
test
dec
fcompl
insb
fldenv
cmc
xchg
add
test
dec
dec
pop
jbe
inc
loop
jp
xor
xor
sub
jg
push
cmp
cmp
inc
adc
hlt
icebp
movsl
xlat
ds
outsl
call
and
adc
xor
scas
mov
idivb
ljmp
inc
mov
in
fisubrl
in
testl
pop
pop
add
xor
jb
jle
push
stos
lcall
in
push
push
push
mov
addl
leave
sbb
cltd
js
cmp
pop
jl
push
in
cmp
inc
mov
push
rcll
mov
ljmp
mov
andl
stc
call
in
pop
rcrb
mov
loopne
fistpl
xor
stos
cwtl
inc
lods
xlat
sbb
sbb
sti
mov
out
sub
addr16
aaa
xchg
in
test
jge
jle
fidivrs
push
inc
jp
lds
test
pop
jnp
jecxz
int
in
cmc
nop
sbb
call
xchg
jmp
and
mov
ljmp
fsubrl
aad
add
mov
push
push
imul
scas
das
inc
fidivrl
out
adc
add
pop
inc
inc
bound
jbe
cmp
les
enter
test
pop
jo
lcall
movsb
jge
call
loopne
sbb
dec
inc
pop
mov
push
jl
inc
sub
xchg
adc
scas
mov
loop
pop
jle
xchg
push
adc
das
or
push
xchg
sbb
je
mov
rcl
dec
dec
jns
xlat
lret
inc
inc
jge
xchg
dec
adc
xchg
cld
fwait
jle
adc
mov
in
faddl
push
mov
adc
add
js
cmp
mov
rorl
mov
inc
loop
aad
push
pop
pop
push
and
outsl
jbe
in
pop
loop
dec
mov
pop
cmp
adc
and
jle
adc
dec
jl
test
mov
lods
outsl
push
add
mov
adc
jge
mov
dec
shll
mov
repz
fnstsw
xor
call
aam
repnz
gs
dec
sub
dec
lods
mov
dec
movb
jmp
jb
add
icebp
imul
mov
xor
pop
or
jbe
adc
mov
stc
cmp
das
xor
movsl
sahf
jbe
cmpsb
xchg
inc
ljmp
push
shlb
dec
dec
push
mov
test
jmp
dec
repz
data16
mov
loope
in
push
push
lock
add
icebp
mov
xor
xor
xchg
inc
setnp
out
and
sahf
mov
xlat
orb
pop
push
je
aaa
push
cs
fcoml
xchg
test
or
iret
fnstenv
orl
add
pop
cwtl
in
mov
lock
lds
mov
and
push
push
lds
sbb
add
push
mul
xor
pop
push
gs
xor
rol
dec
mov
jae
lret
fisttpl
aas
pop
insl
stc
movsl
cmp
sub
push
push
dec
mov
push
mov
xor
ss
adc
aaa
ret
repnz
mov
jns
mov
stos
int3
mov
mov
cmp
inc
es
test
lahf
enter
jecxz
popa
sub
lahf
xchg
cmp
sar
adc
add
les
aas
adc
push
jbe
fdivr
adc
add
xor
bound
subb
sbb
xor
fs
bound
dec
pop
mov
push
inc
inc
into
xchg
pop
cs
cmp
test
push
add
push
cli
lea
push
test
mov
adc
mov
cmpsl
sbb
push
adc
jl
push
fnstenv
adc
mov
and
ret
call
insb
cmp
jno
cmp
test
xor
sbb
lea
test
enter
mov
push
pushf
or
mov
mov
push
inc
dec
sub
pop
mov
mov
cli
into
mov
icebp
dec
ror
or
leave
mov
mov
insl
enter
mov
dec
lock
notb
add
ja
pop
mov
ja
fcmovne
mov
or
sbb
pop
or
rcl
sub
pusha
insb
push
cmp
das
pushf
add
fisttps
mov
test
out
push
aas
mov
mov
jmp
lahf
mov
jnp
and
xor
adc
out
in
stos
in
xor
test
xlat
and
pushw
mov
mov
adc
push
lods
jbe
jae
mov
sbbl
cmp
adc
dec
pusha
mov
sub
inc
es
sbb
stos
sub
and
sub
je
ret
xchg
xor
inc
insb
or
inc
dec
js
dec
mov
push
stc
pushf
lret
fwait
cmc
loopne
pop
add
iret
cmp
xor
popa
mov
roll
pop
arpl
call
icebp
xchg
push
rcl
addl
sub
lea
mov
mov
xor
inc
popf
mov
mov
adc
insb
inc
jns
mov
mov
jno
xor
test
jb
std
stos
xchg
inc
ds
adc
rclb
ds
sbb
rclb
push
scas
inc
or
rcrb
icebp
popf
xor
stos
sti
lret
add
mov
mov
out
xchg
adc
aas
out
scas
fs
push
in
xor
jno
jg
dec
add
fwait
cmp
xchg
xchg
in
test
and
push
jl
mov
arpl
int3
adc
cli
leave
mov
jae
and
xchg
sub
icebp
fdivl
outsl
int
mov
loop
and
jl
leave
push
dec
lea
pop
cmp
and
add
cmp
jl
mov
pop
ret
or
sbb
mov
and
ret
adc
mov
mov
lock
in
jne
adc
dec
push
mov
ss
std
sbb
push
sbb
int
jl
or
and
ret
sbb
add
dec
xor
sbb
daa
and
fldenv
cmp
test
inc
into
pop
mov
cmc
and
movb
xor
scas
cmp
jmp
mull
mov
icebp
xchg
mov
push
outsl
inc
or
fbld
jl
jns
jge
cli
pop
aad
or
je
pushf
aaa
add
loope
sbb
push
cmp
xor
xchg
push
add
cmp
or
or
or
cltd
mov
shrl
arpl
iret
insb
add
outsl
sbb
loopne
sbb
rclb
sbbl
lock
push
adc
sahf
mov
aaa
movsb
cmpsb
pop
push
loope
bound
loop
enter
or
xchg
push
mov
mov
or
and
inc
int
inc
nop
lock
cwtl
ret
out
rolb
pop
inc
lock
pop
and
add
add
pop
rcrb
in
popf
xor
shr
and
fwait
xchg
cmp
in
in
lods
stos
orl
dec
xchg
fs
jp
insb
jo
dec
xor
xor
jo
inc
in
popa
loop
or
or
mov
mov
lock
scas
andb
aaa
inc
mov
das
mov
sbb
jne
ret
mov
cwtl
imul
xchg
xorb
inc
pop
pop
mov
rcrb
sbbl
inc
mov
sbb
cmpsb
mov
sub
xor
cmp
adcb
rorb
adc
sub
cmp
fcompl
pop
push
lods
push
cld
dec
imul
lods
std
jp
push
sbb
lock
cltd
dec
outsb
pop
pop
sub
stos
sbb
aaa
lods
cwtl
xor
in
jne
xor
sbb
repz
call
cmpsl
nop
jl
stos
pushf
lock
scas
lods
xchg
lods
and
or
mov
flds
add
icebp
fwait
ja
lea
or
and
cmpsl
and
mov
jecxz
xor
fistpll
sbb
fdecstp
iret
mov
sarl
sbb
or
es
or
out
shrl
lea
push
add
sti
jmp
sub
insl
insb
ja
sti
mov
mov
repnz
sbb
mov
push
push
cmc
mov
pop
or
or
gs
leave
into
mov
inc
les
mov
je
pop
in
push
inc
sti
mov
cmp
hlt
adc
outsb
mov
or
cmp
or
test
mov
sbb
sbb
cmp
jnp
sbb
enter
lahf
pop
aam
and
xor
jne
roll
mov
in
adcb
mov
cltd
sbb
arpl
fildl
and
xlat
add
xorb
scas
mov
xchg
or
inc
ss
lock
fnsave
pop
test
sahf
gs
push
sarl
lods
add
fs
repz
repnz
cwtl
mov
sub
pop
popa
dec
cmp
pop
jb
out
xchg
jle
sub
pop
xchg
or
out
pop
popf
addr16
ret
jne
jge
push
mov
js
sbb
xor
inc
add
in
pop
iret
fs
push
mov
adcb
rcrb
stos
hlt
cmc
sub
mov
or
or
xchg
repz
add
out
push
sbb
pop
imul
jne
shlb
mov
test
das
adc
cmp
xchg
fdivl
aam
aad
ja
fsubrs
pop
out
and
pop
mov
adc
mov
ret
enter
call
scas
and
shlb
mov
or
jae
mov
adc
scas
add
pop
xorl
add
pop
xchg
lods
iret
clc
mov
adc
dec
aaa
lods
fsts
nop
xchg
pop
add
cmc
arpl
ds
xchg
mov
and
sti
jecxz
fs
call
mov
xor
mov
ret
jl
cs
mov
fldenv
sbb
or
inc
in
nop
mov
imul
iret
popf
test
fs
dec
pop
inc
push
jbe
gs
sbbb
xchg
das
push
leave
mov
pop
divl
clc
lea
or
mov
rorb
repnz
xchg
sub
movsb
cmp
add
out
outsl
out
push
out
cmp
and
das
ja
push
insl
pop
xchg
xchg
div
pop
pop
adc
push
lret
fsubrs
filds
out
in
icebp
sub
cld
cmpsb
mov
arpl
enter
scas
cmpsb
rolb
jns
inc
lds
mov
mov
popa
mull
leave
cli
and
lods
adc
sahf
sub
mov
shll
and
dec
push
sub
repz
mull
and
or
out
aam
pop
push
sti
cmc
mov
dec
adc
cld
dec
out
rcr
imul
aad
or
addr16
enter
cmp
sbb
loopne
push
mov
adc
push
adcb
aas
lahf
mov
push
mov
sbb
loope
lds
sub
jb
arpl
mov
shr
fmull
adc
mov
pop
dec
mov
iret
fwait
lahf
lods
outsl
aas
pop
cmp
jmp
or
jo
insl
cmc
mov
cmp
pop
jnp
mov
cmpsl
icebp
push
pop
sbb
xor
daa
dec
and
pop
cmpsl
aaa
push
adcb
pop
mov
test
hlt
sbb
movsb
sub
mov
inc
and
fstpl
inc
test
add
jne
xchg
fstpl
cmc
je
cmp
daa
int
cmp
fcmovnbe
loope
fldcw
int
cmp
cmp
adc
mov
andb
pop
mov
hlt
jae
xchg
dec
pop
xchg
icebp
sub
cld
imul
xchg
movsl
test
and
cli
pop
idivl
fwait
mov
add
xchg
bnd
mulb
jp
sbb
ljmp
sbb
std
inc
pop
repnz
cmp
adc
sahf
fwait
lcall
cmc
or
cs
jno
lock
or
sti
and
dec
insl
aaa
xor
cld
xor
xor
cmp
hlt
leave
push
and
jge
jge
mov
in
xchg
inc
icebp
sbb
add
cmp
addr16
pop
xchg
inc
jl
and
dec
push
push
xchg
add
add
nop
cmp
or
iret
loope
je
clc
add
int3
inc
xchg
outsb
sbb
ljmp
xchg
dec
mov
or
scas
rcrl
roll
mov
aad
in
mov
push
mov
aam
popf
std
inc
repnz
mov
or
cmpb
in
js
or
rcrl
in
inc
xor
ja
jge
lods
jbe
push
enter
mov
loopne
jne
fucomi
xchg
pop
popl
mov
and
xchg
mov
inc
lret
cmp
jg
or
jp
inc
push
mov
jb
push
pushf
xchg
mov
cmpsb
hlt
int
dec
sti
repnz
and
rcl
lea
inc
arpl
lea
or
adc
or
stc
adc
lea
sbb
enter
imul
xor
mov
fistps
inc
push
les
adc
xor
outsl
enter
mov
icebp
lods
loopne
jo
enter
xchg
adc
inc
mov
loope
rol
push
add
jmp
gs
ljmp
in
loope
scas
sub
xor
rclb
xlat
test
xor
or
mov
ljmp
popa
imul
adcb
pushf
xchg
outsl
in
loop
outsb
repz
dec
dec
add
adc
loope
add
xchg
rclb
rcrb
jmp
in
xchg
inc
test
mov
ljmp
loop
test
and
add
xchg
mov
js
cmp
mov
jo
cmp
addl
std
push
xchg
and
cli
xchg
ljmp
pop
adc
sbb
sub
stos
mov
or
inc
sbb
mov
fists
stos
lahf
idivl
add
push
xchg
mov
dec
mov
test
aaa
sti
scas
out
das
es
jo
lock
sbb
sahf
or
fs
mov
cmp
mov
js
pop
jge
movsb
int
outsb
or
pop
jp
xorl
jo
aam
ljmp
arpl
out
mov
shrl
pop
stos
dec
ss
int3
insb
std
or
push
cmc
je
sub
dec
pop
popf
sub
mov
push
movsl
ds
push
add
aad
cmp
pop
int
inc
mov
stc
cmpsb
aam
mov
mov
pop
sub
cmp
mov
in
decb
pushf
orl
jnp
jg
mov
xor
dec
bswap
xor
and
je
ds
or
dec
repnz
xor
xchg
mov
xchg
test
push
pop
dec
out
rcr
add
adc
mov
in
js
pop
lods
sub
lea
ret
mov
and
fmull
or
lret
or
push
and
cmpsb
dec
inc
jne
sahf
dec
mov
pushf
jae
sahf
mov
ljmp
xchg
lcall
icebp
jmp
shll
add
int
and
add
in
dec
int
pop
xchg
movsl
fbstp
sub
ret
cmp
js
mulb
mov
stos
cmp
sti
add
jg
lret
imul
mov
inc
cli
outsl
cmp
push
sub
adc
jns
pop
mov
xor
pop
leave
jns
bound
lret
mov
sbb
js
icebp
mov
je
movsl
shll
cmp
jne
out
push
fmul
or
cmp
pusha
in
inc
out
sbb
es
fwait
jp
test
inc
mov
cmpsl
rorl
pop
cwtl
and
shl
stc
add
cmpsl
out
jl
idiv
lock
push
sub
xchg
pop
xlat
pop
inc
pop
cmp
push
xchg
add
out
sarb
loope
push
jo
lret
test
cmpsl
js
xchg
dec
add
add
das
jb
loop
xchg
es
aaa
movsl
push
adc
mov
pop
pop
gs
jnp
sar
push
cs
inc
add
scas
cmp
or
xor
xchg
cs
daa
ljmp
add
jae
fdivr
and
insl
insl
clc
ds
pop
cs
xchg
pusha
and
and
add
hlt
pop
ss
test
divb
adc
pop
int3
inc
in
data16
enter
fnstcw
xchg
pop
sbb
int
nop
icebp
leave
fs
push
adc
int
add
mov
inc
andl
sbb
adc
jne
xor
test
mov
adc
fadds
jnp
cmc
pop
cmp
inc
pop
jnp
jbe
std
addr16
cli
xor
les
cmp
sbb
lods
adc
scas
cmp
pop
sub
ffree
add
mov
sbb
push
outsb
in
out
lahf
push
xor
xor
push
rcrl
loop
mov
xchg
mov
mov
push
lcall
jp
sub
rcll
push
in
xchg
pop
orl
inc
je
push
fwait
adc
ja
and
xor
repz
mov
add
js
in
orb
xchg
repz
push
sbb
xor
and
cli
ret
mov
xor
or
mov
pop
imul
mov
inc
jle
xor
ret
mov
add
push
mov
xchg
jl
jne
dec
aas
sub
daa
adc
or
mov
and
subb
dec
pushf
das
out
add
lea
and
pop
sub
mov
dec
jo
sbb
dec
mov
nop
push
stos
xchg
jae
push
shl
cmp
outsb
sub
jg
jnp
out
inc
dec
jne
fists
lods
jb
mov
movsl
and
dec
xor
aaa
jle
lcall
mov
jns
ss
mov
sub
aad
scas
sub
enter
jb
imulb
mov
cmc
or
imul
outsl
xchg
jno
mov
push
push
push
add
xchg
inc
mov
cmc
sbb
or
or
jns
dec
jl
or
add
movsb
outsb
rorl
cmp
jl
shll
cmp
adc
jl
popf
repz
pushf
imul
repnz
pop
adc
sub
cmp
int3
into
mov
out
lret
jle
out
cltd
out
fs
mull
pop
aaa
xor
data16
push
add
or
xchg
gs
jmp
mov
addl
mov
cmp
rorb
loope
push
shlb
xor
push
cmp
cmpsb
xlat
loopne
sub
sub
push
or
andb
mov
mov
sahf
adc
lods
out
dec
out
inc
or
mov
add
inc
mov
xchg
mov
jecxz
mov
loope
cs
jae
dec
mov
loop
stc
pop
outsl
xor
cmp
sub
scas
in
rcrl
call
and
rolb
in
out
cwtl
inc
jl
sbb
and
mov
pusha
dec
imul
mov
outsb
cmp
loopne
xor
mov
rorl
push
dec
mov
mov
test
jne
inc
inc
jae
out
xorl
cmp
push
jp
push
pop
dec
inc
mov
cli
pop
lods
popa
jbe
popa
adc
popf
popa
rorl
dec
sub
push
stos
fyl2xp1
push
flds
dec
mov
xchg
xchg
jns
sub
dec
out
call
sbb
jp
pop
mov
aad
jno
and
cmc
mov
mul
imul
mov
les
xchg
imul
mov
push
ficoms
stos
notl
sarl
in
inc
cwtl
and
cld
je
outsl
xchg
adc
jb
lahf
stos
cli
inc
cmp
mov
and
pop
lods
jecxz
in
xchg
les
pop
ror
cmp
pop
shrb
push
in
fs
jl
sub
leave
neg
adc
movsb
mov
out
mov
xchg
cli
popf
jl
add
aaa
push
fwait
jecxz
loope
lret
mov
lret
mov
inc
mov
cwtl
pop
movzbl
pop
cltd
sbb
iret
popf
insb
pop
cld
dec
xchg
aam
bswap
rcll
mov
inc
ljmp
test
add
jne
jnp
xor
icebp
shl
es
out
addr16
jp
pop
repnz
push
into
jo
jo
jae
pop
into
scas
es
jl
and
in
mov
jle
push
and
test
xor
test
test
mov
ficoms
or
shr
mov
call
pop
fistps
mull
cltd
cmp
sbb
push
js
int
mov
xor
inc
push
roll
xchg
lods
dec
pushf
cmp
sbb
mov
int3
bound
aaa
push
jecxz
out
ffree
push
xchg
ds
pusha
jecxz
push
jno
lds
pop
stos
mov
rclb
mov
push
mov
pushf
fwait
jmp
popf
xchg
cmpsb
fildll
lds
push
addr16
sub
insb
cmp
sub
aad
ljmp
test
shll
daa
dec
and
lds
popa
inc
lods
inc
in
mov
rclb
mov
outsl
pushl
pop
clc
lods
xchg
mov
jmp
daa
dec
sbb
aas
repnz
cmp
push
or
jmp
imulb
aam
sub
add
sbb
sub
push
mov
mov
mov
enter
stos
fisubs
outsl
test
inc
lds
mov
in
mov
cmp
loopne
adc
insl
inc
pop
andb
mov
inc
sub
jecxz
pushf
imul
xor
out
xchg
and
dec
xorl
fisttpll
xor
shl
lock
sbb
xchg
xor
in
lret
push
xchg
pusha
fucomip
rcrb
jno
or
mov
dec
js
test
or
insb
pop
fnstcw
add
mov
mov
adc
mov
pop
outsb
in
lods
lret
sarb
lock
in
xor
xchg
das
adc
jecxz
sub
xchg
clc
mov
push
es
xchg
cmpsb
sub
add
shrl
and
out
push
jns
pop
cmpsb
in
data16
push
push
mov
subb
xor
out
roll
pop
xor
divb
dec
enter
stos
mov
sbb
push
out
add
mov
cmp
popf
imul
stos
add
outsb
xlat
std
mov
test
clc
stos
call
outsb
xlat
inc
or
fidivrl
xchg
sbb
adc
ret
enter
jbe
push
dec
adc
or
push
inc
addl
rorb
cmp
mov
pop
sbb
pop
xchg
ja
movsb
or
dec
mov
icebp
inc
inc
adc
inc
leave
pop
cltd
jg
ret
and
jne
cmp
in
fstps
cmp
cmp
sub
outsb
add
xor
and
outsl
cmp
adc
jp
mov
cwtl
and
popf
mov
adc
mov
sub
jmp
pop
mov
jmp
pusha
insb
test
mov
in
pop
rclb
jo
scas
clc
testb
mov
fistpll
xlat
jmp
cmpsl
push
fsubrs
testl
mov
out
cltd
cmp
in
mov
fdivrl
cli
testl
sbb
or
es
inc
mov
push
jae
add
jbe
xor
xchg
jge
add
bound
inc
int
pop
int
popf
ja
dec
push
hlt
adc
cmp
push
fbstp
aaa
sbb
jge
icebp
nop
and
mov
sti
icebp
mov
cmpb
or
fsub
add
pushf
jge
bound
fisubl
popa
mov
mul
iret
std
int3
rol
jge
lret
or
lock
add
dec
es
xchg
in
or
lds
fucomip
xor
repnz
test
push
mov
daa
inc
outsl
xchg
pop
xchg
popf
cmp
cltd
sbb
bound
sti
xor
or
dec
xorl
sbb
lret
in
nop
xor
mov
repnz
or
cmpsl
lahf
rcrb
cmp
shll
rolb
fisubs
movsb
jne
adc
jmp
jo
call
dec
jo
add
nop
arpl
incb
add
addr16
jb
aas
jbe
xchg
push
int3
in
add
rcrl
enter
shl
mov
sbb
lea
punpcklwd
cwtl
mov
int
jmp
pop
mov
into
inc
jb
enter
xlat
stos
xchg
add
sahf
int3
jnp
negl
fwait
pcmpeqb
jp
les
test
mov
mov
roll
xorl
sub
pop
ret
jbe
jmp
sub
mov
ss
add
mov
iret
insl
cwtl
and
push
in
push
or
jae
pop
pop
lods
movsb
push
movsl
mov
dec
jmp
dec
subb
jg
loopne
mov
add
pop
ret
mov
mov
cli
int
dec
push
decl
and
pop
cmp
rcl
push
loop
mov
xor
mov
test
cs
xchg
pop
in
sbb
shr
dec
mov
dec
and
cltd
int
test
jae
or
add
add
mov
mov
cli
sub
or
lret
in
or
out
sub
jo
pop
aas
jmp
push
test
ljmp
and
cli
push
cmp
xchg
lcall
xor
mov
leave
mov
ja
add
adc
inc
test
pop
clc
jmp
mov
shll
xchg
jne
daa
sub
clc
add
xchg
xchg
fwait
push
xor
adc
iret
sbb
pushf
stc
fwait
ljmp
call
inc
jge
jnp
aad
aas
xor
xor
push
out
out
xor
inc
and
inc
loopne
or
test
jae
lret
cmovbe
sbb
inc
outsb
add
add
add
push
jno
sub
call
dec
and
mov
xor
icebp
pop
and
add
and
outsb
jp
stos
push
aam
push
sub
in
pop
add
and
lock
push
filds
decl
inc
jecxz
out
mov
testb
pop
fs
fwait
adc
add
je
aaa
jecxz
and
lods
sarl
data16
ss
test
xor
test
bound
icebp
test
sbb
inc
shlb
add
hlt
pop
lret
dec
int
sub
inc
pop
cltd
pop
inc
add
or
inc
push
push
pop
sahf
mov
dec
push
ret
in
sahf
pshufw
jmp
adc
ret
cmp
js
lret
fstpt
rol
fmuls
aas
jmp
add
lods
sub
cmp
and
xor
mov
loop
lock
test
sbb
test
outsb
cmp
jbe
dec
dec
jae
and
sub
daa
cmp
dec
sub
icebp
mov
and
inc
push
outsb
dec
inc
add
fnstsw
cmpsl
inc
dec
stos
in
arpl
call
cmp
call
fsub
sub
mov
jge
aad
incb
push
cmp
cld
aas
lds
jecxz
adc
cmp
dec
sbb
dec
fcomip
cwtl
jne
add
popa
ss
sub
inc
gs
mov
jbe
sub
inc
stc
mov
sbb
pop
clc
daa
int
dec
sti
std
out
push
dec
add
mov
xor
push
and
mov
cmc
movsb
call
mov
or
lock
mov
lret
or
inc
mov
cmpsb
addb
cmp
sbbl
rorb
mov
dec
adc
mov
cld
aam
sbb
daa
mov
lock
call
clc
push
fstpl
push
add
insb
int3
push
adc
dec
push
jne
movsl
in
and
imul
push
mov
xchg
or
stos
rorb
repz
lods
sub
or
push
or
mov
pop
leave
aaa
ljmp
test
fwait
clc
pop
sub
lcall
xor
jmp
loopne
shlb
mov
push
hlt
loopne
pop
das
push
xor
cs
mov
mov
lcall
xchg
pop
fildl
test
mov
or
cmpl
sub
xor
not
cld
mov
mov
negb
data16
lods
mov
sub
xor
adc
cmpsl
sbb
adc
push
std
jb
imul
cmpsb
sti
sbb
ljmp
and
es
and
mov
fisttps
sbb
dec
mov
dec
and
iret
xchg
loopne
mov
call
xor
dec
call
mov
inc
adc
orb
cmpsl
xor
arpl
or
jbe
push
insl
mov
cltd
cmp
sub
imul
mov
pop
and
aam
and
cmp
ds
and
popf
xchg
or
outsl
mov
sbb
in
test
ja
lcall
popa
cmp
cmp
xor
sbb
add
xchg
adc
fldenv
icebp
movsl
outsl
inc
inc
push
mov
jmp
adc
sub
int3
mov
out
fs
into
sub
lret
mov
aas
aad
scas
in
test
out
mov
sub
mov
ja
in
push
cld
outsl
cld
loop
inc
cmpsl
dec
test
out
aas
push
stos
jmp
pop
fisubrl
sbb
rorl
incb
in
push
mov
outsb
ret
mov
popf
aaa
mov
pop
jecxz
fcompl
jmp
mov
inc
and
lret
xor
sbb
mov
mov
pop
movsb
and
insl
mov
push
aaa
and
je
dec
xchg
je
fisttpl
cmpsl
sub
mov
fimuls
push
xchg
pop
xchg
in
shr
pop
fmuls
outsb
pop
sbbb
xchg
addb
je
fucomip
dec
mov
fcmovne
mov
aas
jb
and
pusha
inc
jne
mov
inc
mov
inc
sarb
sti
add
xchg
mov
xchg
inc
stos
cltd
jmp
xchg
icebp
jmp
and
shrb
pushf
fcom
xor
cltd
out
mov
lock
mov
xchg
dec
leave
mov
and
ret
in
push
xlat
xor
add
add
xchg
pushf
lods
mov
mov
fsubrs
pop
inc
mov
xchg
xor
cmpsb
cmpsb
fdivl
xorb
ficoms
dec
cmp
nop
jne
ret
jbe
imul
test
inc
test
ficompl
mov
xor
js
sti
add
test
test
movhlps
jae
inc
sbb
lods
pop
divb
cltd
mov
sub
jl
sbb
push
enter
or
mov
cmp
mov
adc
repz
es
rorl
repz
xlat
mulb
xor
je
mov
mov
jg
adc
mov
les
pop
mov
xor
push
stos
nop
out
jge
aad
lret
jp
sub
mov
mov
push
push
sbb
scas
jnp
imul
in
in
nop
notl
jnp
mov
fidivrs
clc
imul
xchg
jmp
sarl
pop
mov
stos
mov
or
mov
cmc
push
scas
dec
inc
cmp
sti
jl
dec
xor
pushf
xor
sbb
jle
int3
gs
inc
mov
ljmp
pusha
vmread
sub
adc
ficompl
or
mov
scas
or
sbb
sbb
sub
outsl
mov
es
mov
jne
inc
imul
cltd
in
push
push
sbb
sahf
clc
enter
dec
scas
add
imul
cltd
ds
aad
scas
cmp
pop
ss
pop
imul
cmp
arpl
xchg
sub
or
push
aad
cmp
dec
adc
jle
jg
aaa
xor
popf
sbb
push
xchg
or
cmp
cld
xchg
dec
lods
filds
xchg
pusha
lahf
push
dec
lods
mov
dec
adc
mov
ficomps
fnstcw
inc
mov
pop
sbb
gs
pop
roll
lret
mov
fwait
inc
dec
je
out
jecxz
fimull
push
pop
dec
adcb
and
and
cmp
adc
dec
dec
cmpsl
dec
mov
mov
dec
mov
ficompl
pop
push
pop
rorl
sti
add
cmp
loop
pop
in
cmp
arpl
push
mov
push
lods
xchg
sahf
ljmp
xor
roll
inc
push
aas
addl
ret
js
repz
aas
dec
xchg
adc
xchg
adc
fmull
sub
test
jns
mov
insl
stos
xchg
out
cmpsl
push
or
js
jno
sbb
mov
fisttpll
icebp
hlt
jns
push
aas
dec
mov
mov
and
adc
inc
arpl
adc
or
mov
outsl
mov
ljmp
aam
mov
lea
scas
outsb
sbb
xchg
jmp
out
iret
and
cmp
loop
dec
sbb
xor
jge
sbb
stos
stc
mov
mov
cmp
cmpsb
sbb
mov
insl
cmpsl
mov
adc
cmp
mov
cmpsb
jns
cld
nop
icebp
jo
jno
out
hlt
shll
or
jo
out
subl
call
mov
jl
icebp
nop
and
xor
insb
outsb
pushf
fcoml
leave
push
cmc
or
cmpsl
or
adc
lds
mov
mov
fstps
dec
adc
out
inc
inc
mov
enter
or
xchg
xchg
and
repnz
lcall
xchg
in
popa
testb
cli
and
pushl
insb
in
xchg
pop
out
pop
adc
iret
lea
jne
sbb
jecxz
push
pusha
adc
and
mov
sub
cs
xchg
jne
popf
and
push
lahf
adc
push
push
mov
out
pop
cmpl
and
xor
mov
or
scas
fistps
jle
cld
cmc
jns
daa
mov
jno
sub
or
and
fisttps
jno
or
or
sahf
mov
dec
inc
push
jmp
or
sahf
or
in
and
cli
ret
rolb
jnp
mov
sub
mov
mov
xor
lret
lods
std
xchg
loope
and
push
cmpsl
pop
ds
iret
push
add
mov
push
xor
sub
lret
or
xchg
addr16
or
or
mov
jns
test
and
scas
inc
lret
xor
adc
aam
test
or
dec
hlt
sub
adcl
rdpmc
loopne
push
daa
stos
sbb
popf
shll
xor
inc
shlb
icebp
mov
xor
loop
mov
or
mov
inc
test
push
cmp
popa
xor
movsl
out
pop
or
es
jle
repnz
sahf
int3
pop
lds
repz
pusha
xor
push
stos
mov
cmp
ret
loop
xchg
repz
cli
cmpsb
mov
mov
aam
rol
popf
ret
pop
das
inc
aam
dec
xchg
mov
dec
xor
inc
dec
adc
pop
push
bound
daa
sub
xor
mov
sahf
xchg
or
out
in
out
dec
push
cmp
jbe
push
push
test
cmpsb
or
popf
pushf
imul
scas
dec
ljmp
adc
in
cmp
inc
jmp
mov
call
addr16
bound
cld
xorl
xor
mov
push
push
cmpsb
call
jle
faddl
cmpsl
adc
shlb
mov
mov
push
movb
dec
es
cli
clc
xor
hlt
lcall
cmp
add
cmpsb
outsl
inc
mov
int
je
xchg
aas
adcl
in
mov
fwait
mov
dec
or
test
jle
out
pop
dec
iret
mov
je
lcall
lods
mov
inc
or
pop
lods
sbb
in
andl
fiaddl
pop
jle
int3
call
fistpl
fsts
xchg
addr16
mov
jb
mov
outsl
jl
cmpl
fcompl
jb
in
jbe
ret
mov
push
mov
jno
sahf
clc
push
sahf
enter
les
fwait
mov
leave
pop
ret
out
jnp
out
mov
hlt
push
and
jecxz
arpl
shll
lods
imul
sub
sub
aad
stos
mov
mov
add
add
lcall
bswap
inc
jno
shrb
inc
mov
fdivs
lods
adc
adc
sub
outsl
push
testb
ret
jle,pn
or
addr16
arpl
ja
test
ss
sub
testb
lock
jo
inc
cmpsl
mov
cmpsl
loopne
cmp
inc
mov
xchg
inc
pop
fmulp
sbb
cli
testl
and
fistpll
fisttps
sub
add
add
inc
int3
vmulsd
js
test
test
repz
mov
fists
pop
test
pushf
add
cmp
fs
out
loope
pop
clc
ja
mov
xor
cmp
jno
les
ss
xchg
mov
add
sti
mov
nop
jge
rcl
cmpsl
leave
mov
out
cmp
imull
mov
int
insl
subb
mov
cltd
sub
andb
cs
bound
adc
jle
movsl
nop
outsl
das
mov
mov
jle
pop
data16
mov
mov
jp
scas
lods
mov
ljmp
ss
ja
mov
or
das
jmp
mov
out
sub
in
xchg
sbb
sbb
sarb
pop
mov
js
call
lods
fwait
or
and
mov
mov
rorb
adc
mov
pop
adc
in
mov
sub
in
or
mov
scas
add
arpl
mov
mov
fs
xlat
mov
push
adc
xor
and
mov
nop
imul
and
sub
or
or
leave
sub
popf
sbb
lea
xchg
mov
dec
ds
insb
ret
fdivl
mov
mov
push
in
cmp
repz
mov
fsubl
mov
inc
das
test
dec
lcall
pop
xchg
sub
or
push
loop
shl
add
mov
cmp
jp
mov
mov
xor
adc
es
out
andl
rcll
dec
mov
pop
icebp
sub
jecxz
mov
inc
pushf
mov
nop
sbbl
push
inc
addr16
addr16
int3
or
push
data16
jbe
setno
movzwl
lds
mov
jmp
sbb
push
or
loopne
adc
enter
and
xchg
adc
push
pop
lds
add
lret
mov
jmp
jmp
cmpsb
xor
mov
dec
dec
sub
inc
ficomps
ret
gs
sti
mov
rcrl
pop
dec
inc
xor
lock
inc
dec
mov
mov
xor
mov
stos
mov
gs
and
dec
xchg
fisubrs
enter
sbb
outsl
andb
jmp
mov
das
mov
push
stos
test
mov
mov
out
stos
cltd
add
dec
inc
or
or
in
jnp
insb
jmp
pop
int
or
jo
xlat
repnz
lea
adc
aad
lock
or
cmp
aaa
ds
jnp
or
xorl
jno
rcll
jge
sub
sbb
dec
inc
call
xor
dec
aam
mov
aad
jp
jno
mov
cmp
movl
inc
je
adc
xchg
sub
aad
ficoms
mov
repz
pop
dec
push
mov
div
cmpsl
push
mov
lea
out
push
sbb
dec
cmp
inc
out
push
inc
adc
cltd
int
or
hlt
pushf
push
and
daa
xchg
mov
sub
jg
adc
movsb
mov
and
and
into
add
aas
notb
sarl
push
cmp
jg
jl
ljmp
fldt
mov
pusha
clc
sub
and
dec
mov
fidivl
repz
mov
mov
push
or
push
out
loop
dec
daa
mov
push
jno
jns
mov
jg
shld
inc
pushf
clc
jg
adc
cmp
add
out
cld
dec
sti
imul
inc
in
fstl
inc
call
push
ljmp
rcl
lds
ljmp
pop
xor
pop
xchg
pop
xchg
ret
test
dec
popa
dec
mov
push
cmp
jp
mov
aaa
or
sbb
lea
mov
sub
xchg
cmpsl
call
int
popa
dec
sbb
or
sub
sub
sub
arpl
bound
out
int3
cmpsl
pop
inc
daa
les
icebp
scas
push
mov
fadd
mov
jo
pop
xchg
dec
aaa
cmp
adc
xor
xchg
aad
adc
jnp
push
ds
movntps
fistps
xlat
mov
sub
mov
call
mov
and
jb
das
sub
dec
popa
pop
rclb
xor
adc
cmpsb
cmp
adcb
mov
inc
xchg
mov
add
or
popf
or
jg
call
in
test
mov
ret
pop
push
xchg
enter
adc
jmp
fisubs
and
push
push
sti
dec
adc
lock
push
aas
sub
or
bound
orb
inc
jne
push
dec
rcrb
mov
inc
push
pop
jmp
xchg
ficoms
cmp
push
xor
pop
and
fcos
pushf
dec
push
jnp
cwtl
std
pop
and
daa
hlt
jg
lods
gs
fsts
call
mov
std
xchg
dec
sarb
leave
cmpsl
scas
cmp
cmp
stc
push
cmpsl
xor
cli
add
inc
lcall
xchg
pop
out
mov
hlt
and
sbb
rorl
dec
fsubrs
in
loop
or
lea
push
xchg
sub
leave
lcall
inc
mov
cmp
and
outsl
test
xor
dec
gs
imul
cmpsb
ljmp
mov
dec
fnstcw
pop
scas
out
add
cltd
clc
push
repnz
pop
lret
stos
std
out
fdivs
mov
xchg
mov
pop
mov
sbb
jg
and
loopne
pop
add
and
xor
shrl
data16
icebp
mov
cmc
jne
cs
fwait
and
cmp
imul
pusha
xchg
sub
ss
dec
jge
repnz
jns
loope
mov
sbb
frstor
aaa
xchg
or
cmc
cmc
xchg
fcomp
sbb
mov
dec
mov
pop
jg
pop
das
mov
and
pusha
fbstp
mov
and
and
dec
lret
jle
insl
mov
outsb
mov
int3
lods
xchg
les
mov
fimuls
arpl
std
ds
test
mov
sub
mov
jo
add
outsb
fcoms
cmp
ss
sbb
mov
push
sub
mov
mov
popf
xchg
inc
mov
mov
aam
popf
clc
adc
mov
xor
sbb
dec
pop
imul
pop
nop
loope
mov
lods
push
xchg
fdivrs
aaa
outsb
inc
hlt
jg
cmp
ss
mov
dec
sar
inc
fs
movl
sbb
aaa
addb
xchg
bound
pop
popa
xchg
not
aam
xchg
lcall
jbe
or
aaa
xchg
in
xlat
sbbb
mov
loope
mov
or
adc
es
and
stos
pop
loopne
cwtl
and
adc
add
sbb
fcomp
out
test
fdivrp
stc
inc
pusha
aaa
push
xor
fiadds
enter
mov
push
pop
imul
jge
mov
xchg
inc
mov
sbb
cmp
test
hlt
pop
sbb
aad
fsubl
lcall
ret
jmp
xor
jmp
push
cli
dec
cmp
and
push
mov
jg
jle
jae
sbb
push
mov
inc
mov
gs
loop
cwtl
imul
inc
jle
dec
adc
and
movsl
adc
je
xchg
std
xchg
pop
into
insl
push
in
repz
insl
ret
push
hlt
daa
cs
hlt
loopne
fincstp
push
add
dec
mov
ret
mov
stos
std
pop
pop
mov
sbb
add
and
iret
or
push
pop
dec
push
sbbb
mov
mov
pop
xchg
add
xor
cmpsl
mov
sub
mov
lock
cli
lret
orb
xchg
dec
xchg
mov
jmp
adc
jne
cs
mov
push
int
andb
jg
pop
dec
das
es
mov
sub
adc
mov
pop
push
sbb
sahf
in
dec
sub
mov
add
scas
dec
hlt
cmp
push
dec
mov
jne
mov
cmp
sub
sbb
push
jae
push
and
mov
fs
dec
and
sbb
cltd
pop
mov
jl
push
fcmovnu
sub
adc
cld
bnd
xor
rcrb
pusha
lods
mov
xchg
jmp
sarl
and
insl
or
inc
les
mov
adc
mov
sbb
pop
push
insl
jg
test
orb
ds
pop
lret
inc
pop
aam
pop
add
push
stos
and
ljmp
adc
lods
movsb
out
fistpll
push
roll
pop
sub
call
lods
ficoms
icebp
mov
mov
pop
push
pop
popa
sub
push
outsb
sbbb
add
out
jbe
imull
push
insb
inc
mov
mov
push
xchg
and
insb
cmp
mov
jbe
rcrl
je
jnp
arpl
sub
insl
testl
test
ss
lret
cmp
mov
xchg
cmp
ds
pop
xor
jg
cmpsb
out
int3
cmp
inc
fwait
dec
mov
mov
fists
dec
ljmp
xchg
or
mov
push
xor
cmpb
adc
lds
repnz
fsubrl
ret
je
cmc
out
out
inc
sbb
mov
stc
pop
rcrb
test
sbb
rcrb
adc
xchg
push
mulb
aaa
xchg
add
lock
clc
das
xchg
cmc
pop
jno
insb
adc
or
loop
mov
dec
inc
insb
push
pop
dec
cmp
mov
jmp
dec
mov
xchg
fiaddl
push
mov
mov
push
sub
std
int
hlt
xchg
jle
scas
fucomp
rol
nop
mov
inc
or
or
iret
dec
and
fldcw
mov
mov
nop
pop
mov
imulb
dec
insb
loop
or
or
lret
fmul
out
xor
pop
push
pop
bound
pop
ror
leave
sub
dec
ss
cmp
popa
mov
pop
cwtl
pop
jno
je
and
sti
mov
push
lahf
mov
bound
pop
int3
daa
or
outsb
stc
popf
push
inc
mov
orb
fidivs
push
cmpl
xchg
popa
movsb
sbb
fistps
mov
inc
idivb
test
es
rorb
repnz
xchg
shrb
inc
pushf
jbe
dec
out
adc
popa
sahf
jae
sbb
xchg
inc
dec
mov
mov
inc
and
data16
jecxz
out
sbb
pop
into
add
fidivl
outsl
jecxz
aas
cmp
sbb
adc
xchg
cmp
mov
inc
cmp
xor
ret
mov
pop
mov
loope
xor
push
jb
imul
sub
scas
sub
pushf
dec
mov
add
jge
and
bound
pop
test
jg
inc
shrb
add
mov
sbb
push
scas
add
sbbl
or
stc
pop
mov
mov
xor
xchg
faddl
pop
sbb
pop
movsb
aad
loopne
es
sub
scas
or
out
mov
lods
outsb
jmp
xor
push
cmp
xchg
popf
push
ja
pop
sub
xchg
iret
inc
je
hlt
insb
pop
daa
in
clc
xor
aas
dec
cwtl
sub
xlat
rclb
push
xor
ret
push
in
and
or
or
sbb
push
pop
ds
inc
xor
or
or
lods
xor
mov
sbb
icebp
fnstsw
daa
mov
sbb
in
lods
rorl
dec
sahf
xor
xchg
pop
fldl
call
adc
mov
xchg
dec
or
cli
insb
shlb
lods
mov
or
sbb
xchg
jecxz
jle
repz
jns
cmp
fiadds
push
xchg
insb
push
adc
sub
jbe
sahf
xor
ljmp
jge
out
or
push
pop
cmc
sub
mov
nopl
ja
insb
xor
aad
xor
iret
in
add
ror
ret
rorb
test
insl
jno
add
leavew
xlat
push
sti
cmp
dec
jmp
pusha
jmp
shlb
sbb
imul
and
stos
andl
mov
lods
mov
repnz
in
inc
mov
cwtl
adc
rcl
inc
xchg
lcall
rorb
adc
xor
cwtl
punpckldq
bound
stc
mov
es
enter
adc
andb
add
data16
aad
popa
ss
sub
nop
sbb
jae
dec
push
test
shll
push
leave
icebp
icebp
pop
movsb
les
adcb
dec
mov
mov
inc
out
cmp
addr16
aad
xor
out
lods
jge
pop
mov
adc
push
imul
and
fidivs
mov
push
test
in
insl
and
int3
mov
cmp
das
ficomps
mov
lret
xor
cmp
es
pop
xlat
push
or
sub
sahf
flds
dec
dec
dec
ret
inc
rorl
or
nop
enter
icebp
add
repz
sub
out
nop
enter
inc
sarb
mov
in
call
sbb
push
enter
dec
push
cmp
and
sbb
xchg
outsb
idiv
mov
pop
dec
loopne
adc
xchg
cwtl
cld
iret
mov
lret
repz
cmp
lods
int3
lret
aaa
lret
mov
push
lahf
mov
sub
repz
jbe
shll
push
pop
int3
pushf
push
mov
shrl
test
and
sbb
out
jne
sub
mov
jne
cmp
mov
lock
cmp
dec
cmpsl
jb
cmp
stc
push
jb
dec
and
xor
scas
dec
xchg
mov
add
fs
popa
cmovb
out
jge
or
call
jbe
mov
xchg
push
mov
test
or
mov
lahf
or
xor
or
cwtl
and
push
dec
scas
jne
stos
outsb
dec
fs
dec
sub
out
xchg
fnstenv
jbe
lods
fwait
jns
sbb
mov
arpl
mov
insb
je
xchg
mov
stos
sub
push
mov
xor
fsubl
sub
sub
mov
inc
leave
loopne
movsb
gs
or
and
movsl
test
inc
jle
add
dec
nop
stc
jmp
dec
sbb
xchg
gs
add
test
xor
lods
enter
repz
inc
or
jg
mov
cmp
mov
inc
fisttpll
lods
fs
test
and
push
jne
cmp
call
jge
and
cltd
vpmacssdd
jle
or
sbb
gs
xor
into
jae
and
jb
adc
int
sub
adc
inc
imulb
pushf
cmp
jmp
repnz
jp
mov
and
mov
push
mov
out
push
das
or
mov
lods
cs
into
mov
sbb
mov
ljmp
fldl
lahf
shll
out
adc
into
jp
mov
jmp
mov
sbb
sahf
mov
cmp
pop
mov
fsubrl
scas
mov
stos
push
inc
mov
ds
popa
pop
lret
out
in
sbb
sub
xchg
imul
add
mov
inc
ja
xchg
pop
popa
lock
pop
inc
icebp
push
xchg
lea
lret
cmp
push
mulb
ds
je
mov
gs
hlt
pop
push
clc
inc
jp
pop
ja
loope
push
pop
lret
lret
push
in
subps
sbb
out
mov
mov
push
scas
loop
out
cmp
or
cld
in
in
in
int3
push
xlat
fldenv
fbstp
cmp
das
stc
addb
popa
xchg
je
pop
clc
push
cmp
fists
mov
fists
push
out
xchg
jo
xchg
adc
call
stc
frstor
pop
ss
movsl
fsubl
testb
mov
mov
cmp
loopne
jns
xchg
sti
jmp
std
loop
mov
je
in
mov
enter
in
sub
lcall
dec
out
sub
gs
leave
nop
sbb
sub
iret
fwait
cmp
mov
cli
xor
inc
cwtl
in
sub
adcb
fisttpl
in
inc
clc
ret
jne
out
pop
xchg
dec
and
imul
pop
lahf
xor
dec
ja
pop
scas
mov
stc
mov
jne
outsl
xchg
push
cmpsl
repnz
push
cmp
adc
sub
dec
push
aaa
jle
movsl
jns
xor
imul
loope
dec
push
imul
xchg
inc
mov
or
jecxz
lock
aam
les
lea
arpl
cmpsb
mov
outsb
sbb
add
push
mov
subb
enter
pop
push
cmpsb
jmp
sbb
hlt
ja
add
sub
clc
mov
and
jp
and
cmp
fcoms
mov
cmp
and
movsl
or
subb
fistpl
mov
int
push
sbb
jne
loopne
shll
push
push
ja
jmp
cmp
popa
fisttpll
xor
push
jnp
bound
and
dec
mov
adc
je
sti
roll
pop
ja
push
or
repz
mov
push
pop
aad
mov
popf
jg
add
fiaddl
mov
out
imul
daa
or
out
int3
lea
shlb
dec
mov
mov
sub
xor
cwtl
jbe
mov
negb
imul
fbstp
dec
je
mov
add
rorl
loope
push
sbb
lret
jb
dec
or
xchg
inc
jae
aam
pop
out
rcrl
dec
aaa
pop
ljmp
loope
sbb
js
fcmovb
xchg
test
ds
dec
fdivs
pop
gs
xchg
shlb
rolb
jmp
pop
popf
jo
xor
sbb
xorl
push
mov
icebp
inc
jnp
jae
ljmp
mov
outsl
pusha
loopne
push
add
jns
ret
daa
in
cmp
iret
filds
mov
lock
aad
push
js
pusha
mov
das
adc
sti
dec
push
pop
test
xor
shll
add
scas
test
pop
lret
mov
lea
test
repz
bound
test
cmpsl
data16
dec
mov
cmp
pushf
rcll
cld
adc
jns
pusha
cmp
movsl
aam
fmuls
test
popf
out
pop
pop
mov
xchg
jmp
rcrl
gs
mov
pop
test
mov
jae
push
mov
adc
jb
xor
bound
out
aaa
push
fdivl
push
mov
jno
inc
stos
adc
cmpsb
fidivs
test
pop
out
in
outsb
jo
mov
stc
mov
mov
lret
xlat
jge
cli
pushf
inc
jp
and
mov
stos
aaa
jae
orb
adc
mov
add
inc
pop
mov
lcall
push
mov
mov
ljmp
test
movsl
push
add
das
inc
xor
and
test
cwtl
xor
sbb
pop
and
fadd
pop
sbb
sti
shl
mov
pop
push
ret
mov
adc
xchg
and
mov
or
sbb
pop
jb
filds
sub
std
dec
or
les
cmp
cltd
fisubl
hlt
scas
pop
fwait
arpl
cltd
test
dec
or
into
leave
repnz
mov
cs
cmpsl
shll
repz
mov
cld
push
aaa
push
out
and
xchg
fbstp
xor
outsl
sbb
lret
inc
in
rcl
mov
sub
sub
fldt
mov
out
mov
jmp
outsl
inc
sbb
imull
mov
push
adc
sahf
mov
lock
jle
push
ret
mov
pop
mov
int
xlat
inc
aaa
pop
out
int
xor
mov
enter
idiv
mov
mov
test
sub
mov
add
inc
mov
sub
and
mov
or
push
adc
bound
int3
jl
mov
push
and
xchg
adc
jmp
push
cmovnp
mov
xchg
sbb
sbb
incl
xchg
sti
outsl
push
lret
outsl
and
and
int
stos
mov
or
mov
pop
add
jns
xchg
inc
addb
sub
jae
cmpsb
mov
dec
xchg
xchg
lret
imul
sub
sub
xlat
test
aam
enter
or
adc
out
xchg
xchg
test
jno
jg
cmpsl
sub
jmp
das
mov
cmpsb
shll
gs
inc
mov
cs
pop
setle
jmp
sti
cli
scas
xor
jbe
push
sbb
cmp
pop
push
sub
and
in
imul
add
pop
out
popf
pop
push
shll
out
xor
push
mov
test
ror
or
lods
pop
pop
jp
fnstsw
and
repnz
pusha
xor
lods
test
aas
outsb
xchg
mov
fildll
xchg
sbb
repnz
sbb
test
fsub
inc
setae
stc
out
pushf
jge
shlb
or
mov
push
in
inc
jle
mov
push
xchg
sub
fmuls
je
add
pop
sub
sbb
stos
xor
add
rcll
push
xchg
cmp
sub
fxch
jae
or
test
testl
jnp
dec
pop
lcall
jl
jb
adc
add
dec
clc
out
jl
mov
jno
pop
insl
mov
lcall
mov
outsb
cmp
popa
inc
pop
movsl
cmpb
xchg
das
bound
sub
bound
seta
fistpl
out
stos
mov
adc
mov
push
dec
lret
xchg
inc
xchg
push
cmp
fdivrl
or
or
and
mov
mov
xor
push
lret
xor
cmp
xchg
fwait
mov
pop
imul
mov
or
jbe
dec
scas
xchg
xor
int
add
jle
orb
insb
push
int
xor
or
in
mull
fstl
xchg
add
mov
mov
pavgb
pop
arpl
mov
loopne
into
shll
loope
lcall
test
push
xchg
mov
dec
dec
xor
je
or
int
scas
fmull
push
pushf
jae
rorl
jns
sbb
pop
or
jl
das
jbe
sahf
cmp
mov
shlb
push
aad
lock
fcmovu
lahf
jne
push
mov
ljmp
enter
test
mov
shrb
add
daa
jge
repz
xlat
ss
cld
into
and
out
and
and
lds
leave
push
xchg
lods
andb
mov
push
xlat
xor
inc
js
repz
shl
clc
fs
jle
push
xchg
inc
dec
loop
mov
jns
data16
stc
cmpsl
cmpb
out
inc
rolb
inc
test
pop
es
mov
ljmp
outsl
fstps
mov
arpl
xor
in
ljmp
add
mov
aas
xor
sbb
stos
inc
inc
sbbl
es
ja
iret
xor
ja
mov
jl
mov
dec
test
sbb
pop
sbb
mov
lret
cmp
push
movsb
push
lds
sahf
icebp
cmp
adc
cld
pop
add
mov
nop
lcall
mov
xchg
mov
in
test
lret
lahf
inc
imul
ret
jecxz
and
xchg
sbb
repnz
dec
add
xor
lcall
mov
jo
arpl
jle
or
mov
mov
mov
sub
mov
imul
jne
pop
or
cmp
pop
dec
xchg
pop
ss
jecxz
fstpl
cmpsb
adc
bound
mov
inc
cli
fcoml
das
mov
test
hlt
test
outsl
stos
insl
dec
jg
sub
aad
push
add
lret
push
daa
jle
leave
lret
pop
test
mov
pop
das
dec
insb
jae
mov
outsb
test
cwtl
pop
mov
inc
arpl
jp
push
bnd
push
pop
arpl
sub
dec
imul
ror
movsl
hlt
sbb
imul
sbb
mov
mov
dec
inc
popf
ss
sub
push
test
lock
dec
les
aas
lret
ljmp
xchg
fildl
adc
cmp
inc
adc
cwtl
fidivs
mov
mov
mov
xchg
xchg
dec
repz
jle
mov
psubusw
sarl
call
mov
xchg
push
jo
pop
int
stos
rolb
dec
lret
ret
or
mov
std
mov
pusha
jns
lods
fists
mov
in
xlat
cwtl
fcmovne
scas
ss
and
lods
mov
or
push
push
insl
push
gs
aam
repz
stc
aam
add
dec
adc
push
push
je
cli
int
jle
fmull
popf
push
inc
int3
adc
xor
mov
jp
jbe
xchg
mov
ja
adc
xchg
cmpsb
jb
sub
mov
and
pop
repz
addb
push
movsl
mov
sub
xor
and
fdivrs
ja
cmp
or
push
in
call
out
xor
jp
jno
sbb
cmp
imul
sub
daa
dec
repz
xor
push
xor
jae
cmp
and
cwtl
insl
lods
dec
xor
dec
incb
mov
pop
pop
outsl
or
or
push
fistpl
dec
sti
repz
pop
divb
cmpsl
add
add
and
xchg
pusha
daa
dec
insb
xchg
fidivrl
divb
fwait
jne
mov
mov
or
aad
ss
pop
push
add
punpcklwd
mov
cmp
push
sbb
ljmp
and
push
mov
dec
sar
sub
xchg
jnp
or
xor
flds
mov
repz
mov
fwait
mov
bound
imul
mov
loope
cmpsl
aaa
xchg
cmp
in
out
fwait
insl
sbb
std
xchg
in
movsb
aas
lahf
flds
call
jge
xor
ljmp
inc
cld
scas
cmp
and
mov
adc
aas
fs
mov
leave
push
sbb
daa
inc
mov
adc
xor
lds
adc
ds
imul
gs
ss
pop
mov
and
shlb
es
inc
xor
pop
mov
dec
inc
mov
clc
pop
xor
je
xchg
inc
insl
sub
cltd
xchg
in
xor
mov
loope
cmp
cmc
cld
xchg
or
test
push
cmp
sbbl
aas
mov
xchg
mov
adc
adc
in
push
into
daa
shll
adc
xlat
push
nop
loop
mov
cmpsl
ret
add
mov
lock
dec
arpl
xlat
xor
sbb
mov
fcmovne
pop
jecxz
out
cs
fmul
fcomp
or
xor
sbbl
test
cmp
nop
sub
push
jmp
lods
shll
add
lods
or
xor
mov
xchg
call
sahf
inc
enter
mov
add
xchg
aam
mov
jle
dec
inc
mov
sbb
dec
fldt
mov
mov
adc
push
test
rorl
out
jmp
cmpsl
push
push
and
call
pop
pop
jge
sti
jecxz
test
lods
repz
or
int
mov
shlb
inc
shlb
xchg
movsl
add
andb
lret
mov
fbstp
int
enter
mov
shll
xor
mov
cmp
jmp
out
movsl
scas
inc
sarl
sbb
in
les
lea
cli
leave
push
sbb
dec
push
cmp
mov
jg
aad
mov
pop
daa
icebp
shlb
add
cmp
pushf
loopne
pop
push
or
pop
pop
push
divb
out
icebp
test
xor
pop
into
lahf
push
sub
rcll
pop
js
xor
xor
out
dec
scas
and
std
mov
xor
adc
add
sbb
sbb
jle
outsl
and
mov
push
idivb
mov
inc
sub
or
and
in
subl
mov
push
negl
insl
mov
and
jmp
push
loop
or
fwait
mov
sbb
aas
rclb
sbb
sbb
mov
adc
jne
dec
test
leave
push
cs
and
sti
aam
mov
cmc
push
lods
inc
sbb
fldenv
call
shlb
sub
insb
mov
mov
xchg
mov
std
in
into
dec
dec
incb
movsb
adc
aaa
iret
daa
inc
push
pop
loope
fisubrs
xchg
popf
repnz
lahf
push
add
or
inc
popa
push
int
movsb
and
xchg
xchg
enter
jbe
inc
stos
popl
lods
mul
xchg
icebp
xor
mov
es
leave
sub
jmp
ret
and
in
loope
pop
mov
outsb
pop
cmovle
mov
out
or
mov
push
jmp
insl
dec
mov
out
add
insl
push
test
cs
dec
adc
mov
push
ja
sbbb
loop
cmc
js
ss
pop
dec
cmp
mov
aam
not
mov
inc
movsl
dec
mov
hlt
inc
mov
adc
mov
stos
pusha
fld
xchg
inc
mov
sub
push
xor
pop
dec
add
jp
adc
aas
adc
inc
xor
mov
cmp
les
test
hlt
or
movsb
pop
push
popa
rolb
mov
jns
scas
in
lods
cltd
cmp
jae
imul
or
stos
sti
adc
ror
pusha
repnz
fldcw
es
fiadds
pop
test
sti
aaa
lea
adc
add
pop
ljmp
in
loope
flds
loop
lock
xchg
fistps
lahf
ss
jle
dec
nop
and
adcl
push
mov
adc
mov
test
leave
leave
fcoml
mov
sbb
mul
jmp
sbb
lret
icebp
or
and
xor
repz
test
pop
scas
add
mov
out
cli
adc
loope
test
faddp
jae
sbb
xor
repnz
push
mov
cltd
jp
in
cs
inc
inc
add
orb
and
fyl2xp1
jb
decb
add
imul
pushf
mov
xchg
aad
cwtl
scas
jne
add
mov
rolb
leave
stc
mov
jno
sub
push
sbb
push
mov
leavew
loopne
mov
imul
sbb
mov
sbb
mov
mov
pop
mov
sbb
jg
and
out
jne
add
stos
cmpsb
lret
adc
sub
pop
and
jmp
outsl
xchg
adc
mov
adc
and
xor
jbe
xchg
out
loop
lods
les
dec
xchg
mov
push
lret
push
add
mov
add
inc
mov
lret
add
fsubrl
cmc
cmp
cltd
sahf
sbb
jno
pop
inc
adc
jo
ja
ss
out
adcb
cmp
mov
fwait
sbbl
pop
shlb
push
cmpsl
add
jmp
sbb
lds
and
dec
sbb
jnp
xorl
int3
out
stc
inc
ljmp
xchg
and
in
lret
daa
mov
cltd
sbb
clc
inc
aam
pop
out
int
pop
mov
mov
rclb
sbb
push
dec
dec
int3
mov
and
incb
pushf
jb
lcall
pop
adc
mov
ljmp
pop
rol
popa
fildl
jg
cld
xchg
ret
stos
roll
or
movsb
clc
inc
mov
aaa
add
xlat
int3
sarl
lock
lret
sub
or
inc
adc
mov
xchg
decl
dec
in
mov
xchg
jno
icebp
add
sti
add
lcall
cmc
push
jge
mov
cwtl
mov
out
aas
in
xchg
pop
fwait
es
idivl
sarb
aad
push
mov
add
test
je
call
ficomps
jle
xor
adc
aam
inc
or
in
inc
insl
or
lds
sub
adc
push
ret
jnp
dec
cltd
xchg
repnz
sbb
sbb
aas
cmp
and
sbb
ret
adc
scas
push
dec
ret
mov
pop
dec
dec
cmp
jae
add
xchg
arpl
loopne
jl
testl
jle
push
outsb
dec
cmp
scas
fidivl
gs
lds
arpl
stos
sbb
mov
sbb
stos
dec
push
sub
scas
cld
mov
fdecstp
icebp
outsl
test
jns
xchg
sarl
dec
and
test
in
daa
add
rorl
loopne
sarl
out
cmc
rorb
inc
ss
ljmp
jno
and
and
sub
rolb
popa
aaa
jbe
jb,pn
popf
sub
or
xchg
movsb
dec
xchg
addr16
jle
pop
call
push
es
test
cmp
mov
wrmsr
ss
fstps
incb
or
xchg
js
stos
push
pusha
aas
pop
mov
push
dec
cld
or
iret
out
call
mov
mov
or
enter
jge
nop
sub
sti
aad
push
push
jo
xor
jle
mov
jle
mov
into
out
fs
cmpsb
jle
sbb
imul
fs
ret
sbb
xchg
sub
jno
cmp
dec
jmp
call
adc
jnp
dec
pop
cli
mov
sub
pushf
lret
adc
into
stos
pop
dec
neg
mov
into
mov
lds
sub
ror
sbb
cmp
loope
push
js
loope
and
xchg
repnz
in
jge
mov
outsb
fdiv
jl
adc
fisttps
mov
mov
or
mov
mov
repz
enter
xor
dec
dec
lret
cmp
jmp
cmp
rcrl
mov
add
dec
sbb
adc
fimuls
in
outsb
out
in
push
lods
shlb
push
mov
xorl
shrb
cmp
add
aaa
cmp
int
pop
fcomps
sbb
pushl
popf
xor
mov
sarl
adc
and
jp
ret
lds
cmp
out
shlb
test
std
inc
imul
adc
popf
loop
repnz
pushf
cmp
jno
sbb
in
in
sub
movsb
sub
ret
movsl
ss
cmpsb
sbb
xchg
adc
mov
mov
jl
and
test
arpl
push
je
mov
push
sar
add
out
cmp
cmp
xor
jno
fistpl
lret
test
sbb
sub
push
xchg
insl
cld
mov
popf
aam
imul
fiadds
mov
and
mov
mov
neg
and
cld
aad
cmp
movsb
pop
dec
pushf
jae
arpl
jae
dec
inc
test
add
arpl
loopne
ret
fisubl
pop
and
mov
test
mov
sahf
lds
data16
adc
mov
std
and
mov
mov
mov
mov
dec
ja
mov
aas
fdivs
lds
inc
addr16
sub
add
addl
std
adc
imul
xor
adc
loop
mov
cli
dec
sub
repz
mov
push
mov
cmp
int
cltd
popf
je
insb
and
ficoml
adc
push
jmp
das
xor
push
mov
add
mov
fdivr
cs
lods
jp
push
fnsave
xlat
and
pop
loop
clc
fwait
dec
push
sbbl
aaa
ficomps
push
push
jmp
xor
mov
pop
std
mov
pop
and
mov
rcll
js
pop
std
mov
lods
jnp
cwtl
in
jbe
inc
add
push
cli
push
add
adc
nop
pop
sbb
ss
mov
shrb
push
imul
push
subl
xor
dec
je
jne
test
add
addr16
lock
icebp
leave
push
frstor
push
outsb
sbb
clc
into
adc
cmc
andl
stos
in
idivl
cmp
mov
adc
pop
es
imul
sbbb
mov
les
sbbl
dec
mov
dec
inc
rcll
pop
gs
pop
pmuludq
jp
inc
orb
pushf
pop
cmp
mov
sub
inc
jp
adc
jo
aad
ss
jo
lds
lret
cmp
sbb
loope
pop
dec
test
mov
rcll
push
div
loope
insb
inc
pop
test
sbb
cmp
in
jno
jl
sbb
arpl
insl
mov
mov
pop
lahf
dec
andl
dec
jecxz
mov
or
pop
movsl
in
or
and
lcall
add
leave
pop
xchg
sub
movsl
adc
or
ljmp
lcall
xchg
aaa
pop
ret
push
sti
xor
je
mov
pusha
xchg
out
jl
fcomip
hlt
xchg
xor
adc
ljmp
in
jmp
xchg
imul
sub
mov
push
mov
data16
aam
arpl
cmpb
sbb
xor
les
mov
inc
test
testl
mov
and
jnp
sub
subl
sub
ret
loopne
les
bound
outsl
push
adc
push
arpl
andl
testl
jp
sarl
xchg
int
sbb
dec
mov
mov
ret
fst
inc
scas
mov
ds
mov
loopne
ja
cs
repz
aam
data16
pop
push
stos
fcoms
xor
cs
leave
xchg
mov
push
js
cli
and
dec
pop
xchg
add
cmp
repnz
gs
xor
loop
push
movsb
and
lcall
pop
ss
fists
fs
xchg
and
xchg
push
dec
inc
arpl
xor
and
push
pop
jp
xchg
xor
out
mov
push
mov
cs
sti
push
popa
gs
mov
or
sbb
arpl
or
inc
out
das
cmp
mov
enter
jo
lret
flds
fstpl
movsb
ss
out
sbb
pop
xor
or
vmovups
psubw
fidivs
push
inc
jnp
stos
lock
arpl
stc
xchg
sbb
jb
aam
jbe
jae
push
out
repz
add
inc
int
push
inc
in
mov
rolb
sbbl
inc
jne
into
int
call
fs
adc
ret
adc
movsl
push
sahf
imul
pushf
les
cmp
jnp
cmp
repz
and
mov
mov
cmc
movsb
repnz
xor
fmuls
repz
pop
mov
das
mov
aas
add
lahf
daa
mov
xchg
lcall
xchg
and
mov
fs
rcl
and
pop
popl
push
inc
adc
iret
loopne
jne
adc
push
adc
jle
fiaddl
mov
adcb
sahf
xchg
dec
test
inc
xor
sbb
idivl
ds
cmc
pop
xchg
testl
pop
cli
jl
cli
sub
xor
inc
lret
inc
jne,pn
adc
lods
ja
sbb
test
pop
mov
das
cld
adc
imul
shl
inc
pop
push
jmp
mov
and
push
xchg
hlt
test
mov
xor
xchg
fbld
jns
mov
jl
and
lea
lret
xchg
add
jbe
cld
repnz
dec
mov
adc
mov
push
cltd
adc
xchg
fildll
pop
hlt
jo
jne
jecxz
sbb
inc
stos
dec
ja
sbb
mov
adc
js
and
fcoms
add
jl
test
outsl
scas
xor
dec
and
stos
inc
cmp
adc
xchg
movsl
fucomp
cs
and
mov
loop
inc
jl
inc
jp
jnp
rolb
stos
sahf
jb
aad
cmp
cwtl
daa
mov
or
adc
push
push
fwait
ret
test
mov
sbb
js
sbb
xor
cmp
stos
mov
push
hlt
xor
xor
fisttpll
stos
lret
sbb
roll
add
in
mov
and
rcll
daa
or
loopne
outsb
dec
testl
adc
or
dec
xorl
decb
adc
add
adc
out
loop
ljmp
jecxz
sub
xor
je
cmpsl
or
in
inc
call
aad
jae
xor
movsb
outsb
dec
mov
mov
push
inc
or
push
lcall
lods
into
jmp
pop
push
dec
push
mov
aad
cmpsl
pop
and
jbe
sub
pushf
test
cmc
sbb
clc
sbb
mov
ret
xchg
xchg
aas
xchg
and
inc
les
fisubs
mov
dec
imul
orl
insb
mov
mov
cmp
into
fildl
in
cwtl
jecxz
push
push
mov
vpcmpgtw
loop
jno
adc
inc
into
in
xchg
lahf
lret
test
fidivs
xor
inc
scas
movsb
popf
sub
cld
inc
in
out
dec
dec
inc
ljmp
mov
dec
cmp
test
push
push
push
push
lods
int3
shrb
iret
scas
movsb
add
sub
cli
adc
xchg
cmp
out
adc
mov
filds
mov
push
loop
adc
jle
nop
je
add
data16
das
je
jmp
xchg
sub
or
sub
inc
xchg
aaa
cld
xchg
xchg
pop
mov
scas
out
ja
int
xor
enter
jbe
mov
lret
hlt
xchg
test
push
pop
sbb
test
arpl
daa
outsb
popa
lea
mov
into
and
adc
jne
xchg
or
fiaddl
jnp
inc
clc
fisttpll
cmp
stc
pop
mov
pop
jge
call
push
or
pop
xchg
sbb
sub
add
mov
xchg
insb
es
dec
fstp
std
adcb
lods
icebp
movsb
lock
std
ds
stc
mov
push
inc
add
jo
or
pand
push
outsl
daa
or
mov
or
dec
mov
cmp
pop
push
fwait
pop
adc
jp
push
call
mov
ret
xor
pop
jl
jg
mov
inc
add
jo
xchg
call
or
jne
jmp
movsb
push
jmp
mov
mov
in
add
cmp
adc
shrb
fcoml
outsb
push
push
xor
pusha
cmpsb
mov
jo
sahf
cmp
pop
add
out
push
mov
int
in
popf
sbb
shlb
and
xlat
mov
ficomps
pop
clc
outsl
pop
bound
shlb
mov
cli
ss
jecxz
insl
daa
enter
xchg
add
xor
sbb
addb
mov
pop
jmp
sbb
add
or
push
adc
repnz
xchg
add
adc
sbb
testb
pop
jg
andb
outsl
sbb
jbe
and
and
sub
dec
popa
pop
pop
or
xor
xchg
das
ja
xchg
xchg
adc
arpl
ljmp
loop
data16
stc
or
push
imul
outsb
or
push
mov
loopne
dec
and
push
add
int3
cmp
jl
fcmove
lods
loopne
or
inc
pushf
mov
test
adc
popf
lea
add
push
sub
fsubr
aas
lock
je
mov
cli
sbb
in
neg
hlt
jne
cli
bound
fs
sbb
mov
test
xchg
adc
or
jbe
inc
sbb
aas
mov
mov
push
or
xchg
repz
js
in
pop
jns
shl
or
mov
out
mov
lret
loop
xor
std
mov
pop
lret
pop
add
mov
fldcw
dec
ret
in
cmc
rcrb
call
inc
dec
stc
mov
jno
fldenv
push
add
and
sub
negb
mov
or
fmuls
cwtl
flds
rolb
int3
lahf
stc
sbbl
flds
ficoms
cs
or
mov
out
add
sti
mov
clc
mov
mov
xchg
push
mov
cmp
pop
cs
in
test
push
jecxz
mov
adc
mov
jnp
adc
dec
stos
mov
cmpsb
jne
arpl
jp
imul
bound
fistps
push
adc
mov
xchg
test
lods
sbb
clc
mov
repnz
ja
ret
in
daa
dec
gs
mov
lret
push
cmp
sbb
add
lods
xor
pop
xor
xor
test
lds
cmp
add
fwait
mov
stos
rcll
cmp
mov
xchg
loope
pop
add
stos
inc
pop
sarb
xor
insl
add
outsb
adc
arpl
adc
cmpsl
movsl
mov
mov
outsl
in
fisttpll
jge
push
sub
fsubp
mov
cmp
test
int
sub
push
fadds
lret
call
fs
test
mov
je
inc
cmp
ss
sub
fiaddl
push
ret
lahf
xor
test
cmp
mov
in
sbb
jecxz
add
aam
popa
add
dec
lods
mov
xlat
out
sub
jns
xchg
dec
push
mov
sar
push
jbe
inc
scas
test
push
sub
leave
or
pop
lea
ret
movsl
flds
adc
cwtl
mov
sbb
dec
push
pop
xor
lret
fstl
lret
lcall
pop
or
nop
cmp
stos
sbb
mov
sbb
jg
push
sahf
mov
cmc
lods
push
inc
imul
aam
mov
in
jnp
sub
mov
push
aas
push
arpl
fdivl
mov
stos
mov
fs
sub
cli
dec
fs
lds
push
pop
xchg
lods
cmp
enter
dec
and
gs
pop
insl
jp
js
cmp
movsl
scas
adcl
mov
mov
inc
jmp
decl
cld
or
and
dec
push
in
inc
push
into
movsl
inc
push
repnz
int
cs
mov
lea
insb
inc
enter
jb
mov
xchg
mov
sbb
test
cmc
pop
adc
fnstcw
ret
lahf
sarb
test
jno
xchg
and
sub
out
int
pop
lea
jns
sbb
dec
pop
sbb
jnp
popa
jns
stos
mov
adc
in
mov
and
insb
mov
ja
pusha
pop
movsb
adc
pop
mov
xor
adc
sti
xor
cld
sbb
out
int
sbb
xor
dec
lods
inc
movsb
sarl
in
jle
iret
inc
lods
pop
lock
and
out
test
fbstp
ret
xor
lds
out
cmp
push
jnp
and
jmp
in
cmp
js
clc
jne
dec
adc
inc
decl
xorb
pop
pop
hlt
imul
jns
imul
adc
sarb
call
sti
mov
xchg
das
or
cmc
enter
fstpt
stos
pop
add
inc
xlat
and
popf
test
in
in
imul
ret
loope
cs
imul
inc
js
insb
mov
mov
push
cwtl
pop
addr16
mov
lret
sub
push
add
cmp
aad
js
xchg
inc
xlat
rcr
xor
xchg
mov
sbb
xor
jecxz
int3
aas
test
mov
bound
jno
fimuls
test
fidivrl
jae
push
jl
xor
xor
in
or
aaa
mov
lcall
cli
fs
push
xor
movsb
pop
inc
adc
inc
mov
faddl
sarb
fs
sahf
mov
fwait
imul
addr16
dec
pop
ljmp
mov
jo
push
inc
pop
lods
inc
iret
xchg
adc
cmp
test
div
outsl
xchg
ficoms
mov
or
bound
or
push
mov
push
lock
dec
or
imul
jns
add
xor
pop
cmp
mov
xchg
add
not
insb
pop
pop
std
loop
int
scas
xlat
cli
jbe
inc
ret
mov
pop
in
dec
cmc
inc
rcl
sub
divl
jle
and
add
js
pop
add
addb
inc
adc
xor
scas
or
xor
or
addl
nop
out
mov
mov
xchg
pop
mov
mov
repz
and
clc
std
pop
or
sub
xor
lret
jo
je
add
inc
mov
and
dec
jbe
insl
loopne
into
xchg
add
xchg
adc
popa
add
lods
out
mov
loope
enter
stos
pusha
add
std
out
pop
shr
mov
les
mov
and
dec
out
mov
ret
mov
in
iret
sub
xchg
repz
jg
mov
fcomi
ret
push
sbb
sti
push
pop
mov
rcrb
push
sbb
xor
ja
ljmp
repnz
inc
mov
imull
fisttps
into
jne
cmpsb
loop
and
cmpsl
gs
push
dec
les
je
cmp
lret
and
das
mov
xor
out
addr16
inc
adc
push
adcb
mov
or
mov
pushf
push
pop
addr16
add
mov
enter
pop
adc
sbb
scas
mov
xor
fwait
imul
sub
mov
mov
dec
push
mov
outsl
jmp
mov
push
addb
or
hlt
jmp
mov
inc
hlt
inc
or
ss
mov
sahf
aas
sbb
repnz
sbb
mov
test
xor
adc
jno
push
push
gs
sub
jecxz
jne
sarl
pop
testl
stc
shll
pop
sub
clc
lock
shlb
mov
neg
repnz
mov
jns
inc
lcall
inc
inc
dec
mov
das
ret
cmpsb
pop
das
outsl
add
divb
sub
dec
scas
loop
lret
hlt
cmpsb
xchg
int3
xchg
das
fidivrs
out
dec
adc
push
inc
test
xchg
pop
jae
loop
aaa
pop
adc
inc
sub
aas
dec
mov
hlt
xchg
push
clc
scas
mov
fstl
mov
pushf
rcrl
jae
jo
adc
enter
jl
scas
clc
inc
std
jmp
enter
dec
addl
icebp
jbe
insb
push
mov
xor
jp
cltd
sub
outsb
push
insb
stos
mov
push
dec
cld
add
ret
sub
xor
push
mov
and
ljmp
ja
sub
jo
inc
sub
jb
inc
xchg
mov
cs
adc
fidivl
sbb
mov
adc
int3
leave
jecxz
pop
xor
ficoms
imul
pop
sbb
sub
cltd
inc
xor
or
cltd
cmp
lods
inc
in
mov
addl
pusha
mov
mov
das
mov
popa
mov
ds
push
mov
pop
dec
xchg
xchg
ljmp
and
push
mov
dec
jmp
jmp
sub
xor
xor
into
xchg
ja
bound
fists
popa
inc
push
push
aam
cmove
int3
daa
aad
sub
aam
es
cld
jmp
and
add
addr16
sbb
enter
sbb
xor
jbe
mov
pop
jbe
ficoml
sub
adc
sbb
mov
sbb
mov
xchg
sub
inc
test
push
fldenv
data16
int
sbb
mov
fldcw
je
imul
xchg
jp
mov
xor
sbb
or
aam
pop
xor
mov
mov
xchg
mov
or
mov
mulb
pop
pop
sbb
and
jmp
cmpl
cmp
rcrl
shll
jmp
sbb
sbb
adc
fadds
inc
adc
pop
fwait
xchg
int3
push
sub
push
arpl
push
fnstenv
cmp
pop
ja
imul
cmp
sbb
xchg
int3
jmp
gs
pop
push
out
sbb
arpl
subl
lods
das
sbb
ret
stos
fisttps
loope
mov
imul
daa
xchg
out
mov
dec
mov
xchg
mov
lahf
xchg
dec
cmp
in
inc
in
cs
mov
sub
xor
int3
arpl
and
cmp
sar
in
mov
mov
cmc
jae
mov
mov
outsl
xor
xchg
out
insl
dec
push
xchg
ja
adc
dec
xchg
xchg
adcb
loop
xor
mov
mov
push
call
stc
mov
add
xor
xor
push
xor
or
mov
in
outsb
pop
jmp
data16
xchg
stos
push
add
jns
mov
mov
xorl
mov
in
push
cld
jbe
push
push
pop
imul
ret
fsts
nop
inc
les
lahf
inc
or
fdivs
mov
lock
ja
test
aas
imul
fcompl
negb
jle
sti
cmove
cmp
sti
xchg
mov
testb
adc
xchg
sbbb
or
mov
pop
xchg
lds
mov
popa
iret
cmp
inc
adc
or
inc
dec
lock
rorb
xchg
mov
and
sub
enter
mov
cmp
aad
dec
or
push
ljmp
sbb
fcoml
gs
js
adc
nop
add
adc
mov
outsb
jmp
pop
xchg
sbb
fwait
or
out
xchg
lods
dec
pop
stc
lahf
aaa
push
or
push
or
push
push
pop
mov
mov
cmp
out
fwait
pop
scas
cmpsb
or
mov
and
xchg
icebp
cltd
lcall
mov
aam
jbe
xchg
push
pop
hlt
test
xchg
clc
mov
testb
neg
inc
xor
sub
or
jne
mov
loopne
mov
pop
jns
aad
mov
inc
add
loope
out
pop
dec
inc
mov
imul
and
jmp
xchg
push
test
negl
rorl
jmp
data16
repz
lcall
sbb
test
push
fwait
push
mov
mov
add
and
arpl
gs
imulb
inc
push
adc
and
xchg
sbb
stc
leave
adc
push
pushf
xchg
mov
jmp
adc
mov
insl
out
mov
movsl
mov
adc
mov
mov
imul
popf
loope
pop
or
and
outsb
popf
std
out
jnp
push
stos
imul
jg
daa
pushf
roll
mov
xor
lret
ret
loop
xor
mov
jns
test
add
xor
pop
and
ja
lahf
mov
push
clc
ja
sbb
dec
dec
xchg
fisttpll
fsubrs
xchg
leave
in
rcrb
scas
dec
les
insl
jl
inc
inc
cmp
sbb
mov
and
jns
int
mov
fstps
popf
xchg
cmp
test
mov
clc
sbb
lea
mov
mov
ja
sbb
lea
mov
adc
mov
andl
xlat
test
or
insb
pop
sub
push
cld
inc
inc
pushf
scas
data16
std
pop
mov
xchg
nop
pusha
js
sti
cmp
mov
cvtps2pd
xor
dec
add
mov
ja
jmp
sub
sti
dec
fisttps
popf
das
imul
xor
pop
jnp
scas
or
insl
mov
enter
jo
dec
fadds
int
sub
leave
test
lods
lahf
lea
in
or
mov
scas
or
xor
pop
jns
imul
mov
jp
jb
test
aad
inc
shlb
stc
mov
and
mov
cmpsb
mov
mov
imul
stos
test
sahf
mov
jg
mov
cmp
jge
loop
lret
lret
out
jp
sarl
xorb
cmp
inc
push
inc
pop
pop
daa
gs
daa
xchg
cmpb
push
cmpsb
cmp
xchg
sbb
and
lods
rcrl
movsb
fst
cmp
fcomp
xor
andl
or
pusha
mov
daa
mov
out
xor
jae
cmp
xchg
cmc
es
mov
subb
cmpsb
inc
in
pop
jnp
pop
jge
mov
or
and
in
fidivs
sub
jle
mov
std
mulb
sbb
sub
xlat
gs
dec
sbb
fwait
mov
xchg
add
lods
or
fcom
pop
lcall
pusha
push
scas
enter
push
xchg
xor
insb
mov
push
sbb
ret
cmc
fidivrs
push
fidivrs
mov
hlt
cmp
mov
and
and
sti
cmp
mov
pop
and
xchg
push
mov
dec
jmp
in
dec
mov
into
inc
decb
fmulp
mov
inc
xchg
adc
rcll
cmp
xchg
es
mov
pop
sub
loop
xor
sbb
mov
mov
or
loop
xchg
cmp
mov
adc
cmp
aas
add
mov
test
and
jp
jecxz
sub
push
ss
cmp
aas
mov
xadd
ret
xchg
cmp
adc
fmul
jno
xor
jnp,pn
xchg
in
mov
fldt
fldcw
and
adc
sahf
jns
scas
jg
dec
int
push
pop
popf
or
pop
shlb
movsb
adcl
pop
lcall
sub
push
cmpsb
xor
aam
pop
jnp
add
iret
dec
pop
cmp
add
jecxz
sub
sar
out
test
in
xchg
mov
insb
aad
repnz
addb
in
aas
jmp
add
and
mov
ljmp
std
lret
sahf
out
aad
mov
mov
xchg
fdivl
or
enter
mov
in
mov
pop
jecxz
iret
iret
or
cmpsb
fmull
jp
mov
or
cmp
lds
in
loope
mov
mov
scas
adc
mov
push
cmp
mov
inc
jle
sub
and
movsb
inc
xchg
jg
pop
neg
pop
and
mov
jne
sub
test
dec
nop
mov
or
push
cmp
cwtl
jl
sbb
push
pop
push
mov
icebp
sbb
or
das
mov
stos
lcall
movsl
cmpsl
or
test
xchg
out
loop
dec
sub
xchg
addr16
lea
dec
test
jmp
fwait
cmp
ret
pop
xor
movsl
mov
mov
jne
inc
arpl
movsl
jmp
mov
imul
nop
mov
icebp
test
or
aad
fs
popa
jne
jle
out
and
add
dec
sub
mov
cmpsl
pop
jmp
popa
xlat
jge
dec
repz
push
xchg
mov
loope
add
jecxz
mov
out
loope
mov
or
add
mov
pop
arpl
repnz
cmpb
mov
mov
push
push
xchg
xchg
adc
lock
jmp
jbe
pop
lret
imul
lahf
mov
add
in
push
rcll
gs
ret
push
insb
push
pop
add
call
cmp
cmp
sub
mov
mov
lahf
pop
xchg
mov
dec
ds
xchg
inc
mov
std
ss
or
pop
mov
movsb
int
xor
sbb
mov
mov
mov
movsb
out
popa
inc
int3
test
mov
push
mov
fcmovne
mov
test
outsb
and
jbe
out
xchg
dec
ds
xor
jbe
inc
jns
mov
inc
int3
rcrb
mov
cwtl
in
das
mov
and
cmpsb
andb
dec
daa
push
rolb
out
mov
push
or
adc
inc
mov
leave
sbb
loopne
cmpsl
lds
lods
sbb
rclb
pop
lods
nop
icebp
subb
es
jecxz
ret
pop
data16
hlt
xor
pop
add
rcrb
lret
in
int3
call
cmp
ret
pop
add
jg
add
xor
pop
xchg
xor
jge
jne
std
and
test
push
sbb
mov
loopne
ljmp
push
test
je
stos
pinsrw
dec
jl
sub
cmpsl
movsb
add
pop
out
loope
add
or
cmc
stos
cmp
and
scas
pop
dec
test
sub
mov
stc
inc
scas
shll
cmpsl
testb
push
add
pusha
xorl
cs
cs
inc
cld
pop
outsl
stos
sub
test
sbb
aad
jae
data16
jo
push
dec
ret
mov
mov
cmp
mov
lea
or
push
mov
hlt
cltd
iret
xchg
fbld
movsb
lea
scas
std
lock
insl
jecxz
cmp
mov
inc
cld
std
sub
mov
mov
mov
and
cwtl
and
test
xchg
das
jmp
mov
adc
sub
inc
ds
mov
adc
mov
rcrb
push
pop
jecxz
outsb
jecxz
mov
push
sub
xlat
leave
hlt
mov
add
ds
xchg
rcr
push
mov
jg
je
test
and
insl
jmp
lret
movl
push
icebp
xor
int
adc
lcall
and
cmpsl
mov
lods
js
push
inc
cwtl
insl
inc
dec
in
rcrb
adcl
pop
gs
js
push
cmpsb
mov
ljmp
fisttpll
push
dec
xchg
mov
mov
sub
xlat
cmp
stc
cs
xchg
mov
nop
shl
jle
xor
gs
push
enter
dec
add
xor
push
push
int3
in
iret
pop
inc
stos
popf
jae
dec
pop
jnp
lods
insb
fsubl
data16
push
negl
inc
xlat
cmc
mov
dec
leave
pop
pop
adc
sub
xor
fwait
and
xchg
cmp
xchg
adc
push
lret
in
pushf
mov
push
arpl
xlat
mov
in
sahf
in
cmc
into
mov
mov
pushf
nop
xchg
or
push
insl
ret
jns
mov
sbb
subb
mov
addr16
fdivrl
push
js
and
stc
pop
push
mov
std
dec
xchg
mov
xchg
stc
sbb
fbstp
inc
add
cmpsb
add
xor
and
and
ja
aas
repnz
call
insl
addr16
jno
xchg
cmp
fistps
mov
in
jb
push
add
xor
mov
es
mov
test
stc
pop
and
lret
add
mov
and
out
insl
out
jge
scas
mov
sahf
movaps
add
in
pushf
aad
jnp
rol
mov
jp
dec
adc
lret
pop
xchg
mov
jecxz
fisubrl
adc
stos
or
mov
enter
sti
xor
clc
mov
stc
decl
dec
fcomp
cmp
rcr
movsb
xor
adc
shll
xor
mov
push
cmp
xchg
jo
aad
mov
pop
xchg
outsb
das
sbb
inc
shlb
jg
shll
mov
push
outsb
ficoms
test
and
mov
iret
popf
movsl
shrb
inc
xchg
pop
xchg
loop
pop
leave
fwait
sub
ds
sub
sbb
mov
fcomi
pushf
filds
mov
mov
or
outsl
dec
xchg
add
aad
mov
addr16
ljmp
sub
xchg
testb
push
sub
xchg
pop
je
mov
jo
fisttpll
pushf
cmp
or
dec
outsl
sbb
mov
test
mov
pop
rcrl
cltd
mov
mov
add
pop
pop
mov
xor
jecxz
test
bound
and
cwtl
out
jge,pt
jp
or
lret
mov
fldt
fiaddl
popf
jmp
xlat
cltd
or
test
call
cmp
cmp
or
and
lods
adc
inc
sub
orl
shrl
xchg
pop
popf
in
shlb
sub
out
add
or
lret
jno
cltd
push
lcall
popf
cmpsl
mov
inc
push
cmpsb
push
push
pop
adc
enter
lods
pop
inc
push
out
xor
mov
inc
and
loopne
faddp
test
sbb
sbb
and
mov
enter
les
mov
inc
sub
lcall
dec
add
or
daa
xchg
movsl
push
sbb
or
xchg
inc
xchg
mov
mov
out
das
movsb
scas
fldcw
leave
mov
mov
scas
push
sti
and
lahf
data16
sbb
add
test
notb
in
xor
ret
add
mov
into
arpl
push
xorl
cmp
aam
ja
loope
cmp
inc
cmpsb
cmp
xchg
cs
fwait
push
and
sbb
sbb
pop
call
sub
add
mov
dec
gs
in
and
xor
outsl
loop
fs
cltd
mov
jne
outsb
jnp
vsubps
push
jge
pop
or
adc
inc
dec
hlt
and
dec
outsl
xchg
icebp
lods
mov
xchg
or
or
sbb
mov
jle
mov
stos
nop
test
int
fistpll
test
push
mov
pusha
out
lahf
and
lods
sbb
jmp
shl
test
cmpl
int
or
pushf
cmp
sbbb
sub
mov
jg
shl
mov
xchg
xor
sub
xor
push
inc
loope
movsl
cmp
xor
dec
pop
fs
adc
mov
loope
call
cmpsb
dec
addr16
outsl
jnp
sub
stos
xchg
mov
ss
in
or
stos
xchg
sub
fs
jns
nop
add
cmp
add
iret
mov
sarb
adc
test
or
xchg
bound
mov
hlt
dec
adc
inc
cmpsb
inc
stc
mov
sahf
mov
test
out
cmp
sub
aam
mov
xor
rclb
inc
jmp
inc
call
sub
pushf
leave
lock
scas
add
loop
test
jmp
dec
ljmp
dec
dec
mov
or
mov
push
shrl
std
adc
stos
call
jecxz
enter
stos
inc
xchg
js
sbb
push
or
mov
sti
pop
sub
push
aaa
pop
aaa
dec
pop
pop
ss
jnp
insl
nop
or
dec
or
or
or
gs
add
int3
push
daa
data16
adc
scas
jl
scas
repnz
pusha
lock
popf
xchg
cmp
enter
hlt
in
fbld
sub
loopne
xchg
mov
mov
push
add
sbb
jnp
lcall
sbbb
loope
cld
repnz
cli
popf
xchg
mov
into
mov
push
push
arpl
push
popa
enter
shll
loopne
test
push
lods
cmpsb
lock
dec
lods
cmpsl
ds
push
xchg
stc
mov
mov
outsl
cld
push
rcrl
fs
outsb
cltd
leave
add
cmp
clc
ror
loopne
jmp
imul
leave
push
cld
or
sub
shl
push
inc
cmp
pop
pop
mov
or
out
ss
les
arpl
jnp
adc
sbb
xchg
adc
mov
nop
mov
lds
repz
mov
fistpl
mov
pop
in
xchg
rcrb
insb
repz
pop
pop
xchg
imul
sbb
sub
cmp
sbb
pop
mov
or
outsl
mov
shr
popf
cmpb
in
sub
mov
jne
cmp
add
jmp
xor
xor
iret
int3
mov
cmp
pusha
movsl
dec
pop
mov
push
jo
es
int3
fstl
adc
ret
ds
pusha
call
xchg
in
adc
cmp
inc
imul
mov
push
xor
popa
fwait
insb
jae
ss
pop
mov
lcall
mov
sub
test
out
cmp
and
int
adc
lret
adc
jne
jnp
lret
or
cmpsb
pusha
fs
inc
push
inc
fldenv
adc
xchg
pop
fimuls
scas
das
int
imul
dec
fdivs
mov
data16
aaa
mov
xor
sti
loope
gs
sbb
ret
push
addl
jl
outsl
push
sub
loopne
test
mov
xchg
jecxz
lods
mov
push
fimuls
mov
iret
mov
push
ja
inc
mov
or
lret
aas
and
cli
aad
je
jmp
jns
les
in
insb
push
repz
mov
out
xor
and
mov
out
insl
and
push
outsl
ret
mov
scas
repnz
and
lods
mov
outsb
test
or
or
mov
cs
movl
mov
leave
pop
ja
adc
enter
mov
dec
pop
jge
sti
push
iret
sub
fstps
pop
fisubl
mov
mov
add
add
into
in
sbb
fsts
stc
fwait
mov
pop
mov
lods
pop
mov
aam
adc
push
andl
dec
add
jne
fbstp
not
inc
dec
push
movsb
ljmp
scas
fisttps
sub
imul
mov
loope
cmp
lret
jecxz
loopne
jmp
icebp
sub
out
xor
lcall
stos
stos
inc
mov
pop
shll
sbb
xchg
xor
fildl
jle
add
sbb
lret
xor
ret
mov
int
testl
sbb
jbe
lock
mov
cmp
ds
repnz
sbb
inc
pop
or
and
sub
pop
lahf
out
cs
sub
push
frstor
or
inc
mov
fldenv
inc
leave
pop
dec
adc
stos
jns
jne
mov
xchg
mov
pop
aas
pop
stc
lods
test
aas
pmulhw
rorb
icebp
insl
cmpl
push
push
into
cwtl
lret
push
xor
insb
mov
mov
add
bnd
iret
cltd
jne
stos
inc
or
or
mov
stos
or
lds
inc
std
rcrl
jp
xor
fimuls
mov
movsb
mov
imull
cld
mov
iret
adc
js
mov
sarb
pop
sarb
lds
adc
clc
scas
adc
pop
jns
push
loope
add
iret
out
pinsrw
xchg
fisubs
xchg
out
xchg
pop
xchg
xchg
jge
mov
xor
mov
out
xor
hlt
int3
jge
inc
in
mov
in
cmp
gs
adc
or
push
xor
mov
push
sub
xor
mov
loop
jecxz
pusha
cmp
jns
ficompl
sbb
inc
xchg
es
int
dec
aad
jle
ds
jo
loopne
repnz
xor
pop
cld
sahf
mov
inc
mov
sbb
testl
movsl
arpl
js
cld
jne
mov
mov
mov
data16
push
inc
add
call
popf
js
lods
inc
adc
lods
push
or
and
mov
popf
nop
sarb
mov
jnp
jl
stos
xor
cld
jo
cli
imul
movsb
pop
pop
repnz
or
cwtl
cmpb
jmp
xlat
push
push
roll
xchg
into
xchg
lds
ss
ss
dec
and
pop
mov
call
jo
sahf
fcomp
pop
icebp
dec
sbb
ss
pop
mov
in
call
fldenv
sub
jb
cmp
mov
mul
jp
test
xchg
dec
dec
and
lcall
jbe
insl
xchg
outsl
mov
xchg
add
jecxz
pop
pushf
mov
call
mov
xchg
and
in
mov
add
js
push
mov
aaa
mov
sbb
fisubrl
xor
inc
imul
out
in
ja
jge
into
push
cmp
lods
ljmp
imul
ds
pop
or
cs
shlb
imul
mov
pop
arpl
or
mov
add
test
addl
xchg
jle
in
rclb
jnp
mov
call
sbb
js
hlt
enter
sub
add
inc
pop
stc
sahf
inc
lret
aas
imul
dec
cltd
mull
outsb
sub
ror
xchg
in
imul
or
mov
push
mov
stos
push
add
lock
sub
inc
je
jle
dec
inc
out
or
cmpsb
fstpt
lcall
test
jge
dec
mulb
xchg
fldl
sti
xchg
adc
mov
cmpb
or
push
xchg
dec
sahf
xlat
loope
push
pop
xchg
sbb
pushf
push
adcb
lahf
dec
sub
mov
push
push
add
inc
arpl
sub
sub
shl
mov
je
roll
mov
xchg
bound
or
aas
xchg
mov
dec
sbb
sarl
fmulp
shlb
imul
pop
scas
push
add
jne
xorb
inc
cmp
mov
cs
push
lahf
testb
push
xor
leave
dec
inc
ljmp
mov
fs
lock
ss
pushf
push
std
fs
call
mov
inc
mov
xchg
add
imul
jae
lret
xor
inc
cltd
xor
mov
aas
xchg
jne
pop
mov
jae
jb
movsl
jmp
outsb
aas
repz
adc
ja
out
sub
pop
pop
mov
imulb
mov
pop
jne
and
imul
popa
mov
xorb
cmp
mov
movsb
sar
scas
loope
xchg
rcll
pusha
pushl
cltd
cmp
pop
xor
or
ss
or
aas
lret
mov
jne
mov
add
pop
xchg
mov
mov
lahf
arpl
adc
movsl
fdivrs
shll
cs
sbb
out
lock
das
out
inc
mov
xor
xor
repz
dec
dec
xchg
push
adc
push
dec
lahf
push
xchg
test
jo
arpl
sbb
scas
leave
dec
adc
or
lods
clc
popa
or
jmp
add
adc
cmc
fsubl
jmp
cltd
or
pop
jmp
rorl
sub
mov
testl
mov
jg
jl
cmpsb
int3
pop
out
sub
dec
pushf
and
pop
cli
xlat
push
faddl
xor
sti
fisubrs
imul
fimull
mov
cs
lods
std
cmp
arpl
push
xchg
xor
and
rcrl
mov
mov
fwait
inc
shlb
cmp
mov
cmp
push
repz
mov
push
jne
or
xchg
imul
in
es
loope
mov
and
test
dec
jmp
pop
dec
ljmp
testb
scas
lea
out
sub
xor
jns
xor
sti
mov
dec
int3
adcl
or
vmread
rcrl
insb
xchg
push
adc
outsb
add
loopne
pop
sbb
jnp
and
aam
inc
mov
cwtl
dec
gs
mov
mov
and
pop
insb
bound
mov
icebp
testl
sbb
mov
insl
negl
aad
fcoml
fmull
je
emms
xor
fmul
roll
mov
addl
stos
mov
rclb
inc
add
bound
fcoml
sbb
jecxz
movsb
and
cmc
adc
add
decb
fdivl
movsb
cmp
mov
out
imul
xorb
fsts
mov
adc
js
xor
inc
sahf
shll
sbb
adc
xorb
mov
add
inc
xchg
add
jns
mov
nop
mov
dec
into
inc
or
lahf
xor
and
sub
xchg
in
stos
rorb
in
xor
andb
sbb
jbe
sub
xlat
mov
adc
xchg
inc
mov
sbb
xchg
xchg
scas
xor
xchg
pop
cmc
mov
lods
sub
mov
ljmp
fs
jp
jbe
lock
rcl
icebp
and
mov
and
loop
fs
fcoml
push
pop
mov
sbb
daa
push
jmp
movsl
das
inc
rcll
outsb
lahf
les
popf
cltd
jecxz
add
adc
jmp
mov
nop
mov
mov
inc
int
jg
hlt
shl
rcl
pop
cmp
add
mov
les
xor
nop
mov
xchg
pop
addr16
nop
jmp
sbb
fisttpl
lahf
mov
sub
lods
mov
xor
loop
ret
jle
out
fstps
jle
or
je
aas
cld
adc
inc
dec
push
cld
adc
in
cli
fs
sub
lahf
std
ficompl
inc
pusha
pop
dec
gs
cli
inc
push
sub
mov
cwtl
jp
aad
in
fsub
dec
inc
shrl
xor
push
mov
test
setl
mov
lahf
and
sarb
test
loope
mov
fsubrl
adc
ss
and
lcall
jle
xor
into
popf
mov
sbb
xor
dec
aam
aaa
lret
xchg
cwtl
jae
adc
shl
stos
jbe
stos
xchg
or
mov
loopne
shrb
ret
je
pusha
rcll
loop
jmp
decl
mov
sbb
nop
stc
cs
mov
pushf
sbb
adc
sbb
sub
les
push
mov
test
adc
addr16
pop
in
sub
or
mov
loopne
sbb
dec
iret
xchg
sbb
mov
dec
sbb
fsubs
test
adcl
adcb
dec
or
xchg
cmp
loopne
insl
outsb
stos
rorl
xchg
fnstenv
int3
jno
or
pop
sahf
xor
lods
std
subb
and
xchg
cmpsl
mov
je
imul
mov
xchg
cmp
dec
addb
pop
mov
jg
fucomi
test
jns
pop
popa
push
push
jl
in
mov
adc
push
cwtl
lret
inc
inc
loope
cmpsb
aaa
push
ja
movsb
popl
movb
cmp
push
add
mov
and
mov
mov
lcall
lret
sub
xacquire
popa
insb
mov
xchg
pop
inc
pop
sbb
inc
fisubl
lcall
loop
xor
arpl
cmp
xchg
and
push
std
arpl
push
lock
mov
fidivs
dec
ss
pop
sbb
cltd
sbb
xchg
mov
mov
sbb
das
shrl
sbb
cmc
xchg
lods
iret
jo
mov
pop
repz
scas
mov
add
pop
mov
rolb
out
push
insl
pop
xor
add
xchg
clc
xchg
push
sub
std
ja
push
push
hlt
or
inc
test
xchg
mov
adc
out
into
push
inc
stos
lds
out
fisubrl
inc
mov
int3
and
test
push
arpl
mov
mov
fisubrs
jb
int3
or
mov
dec
outsb
add
jb
jp
mov
fdivrs
or
enter
push
daa
iret
add
cmpsb
mov
lock
stc
insb
dec
or
jmp
dec
es
shll
das
inc
inc
push
push
fcoms
jbe
das
jae
fwait
mov
cmpsl
or
inc
pop
xchg
fldl
les
data16
inc
mov
cld
dec
js
mov
or
xor
mov
int3
pop
xchg
incl
pop
mov
push
fidivrl
in
or
adc
cld
xor
lods
cmp
xchg
mov
addr16
sub
int3
push
push
mov
lret
push
cwtl
iret
outsb
fmuls
jecxz
aas
mov
push
xchg
sub
xchg
push
stc
sub
sub
ja
hlt
sub
xor
fldcw
adc
ret
mov
jae
test
push
mov
mov
insb
sub
out
loop
ret
je
mov
in
mov
mov
or
inc
pop
out
lret
add
adc
lock
mov
xchg
mov
pop
push
add
or
or
into
aaa
xor
leave
scas
mov
aad
xlat
jge
dec
daa
cmp
mov
sub
in
ficompl
and
icebp
mov
mov
test
adc
pop
daa
push
cmc
inc
sub
push
push
sbb
cmc
inc
out
jp
std
mov
push
data16
jp
or
and
pushf
out
xchg
push
ss
jg
loope
jns
cs
xchg
js
jmp
jecxz
lds
stc
sub
imul
int3
mov
int
pop
int3
out
sub
xchg
fisttps
fstl
mov
mov
xlat
xor
dec
fwait
mov
sar
push
mov
pop
add
mov
mov
sub
daa
popf
cmc
pop
push
sbb
cltd
mov
imul
inc
inc
push
insb
add
js
cmpsl
mov
fwait
repnz
cld
mov
cs
dec
xchg
mov
imul
sub
push
jg
and
fadd
mov
imul
push
adc
xchg
test
out
out
test
cwtl
jns
daa
lds
outsl
mov
imul
es
mov
das
aam
push
cmp
dec
xchg
ljmp
aad
mov
push
mov
out
cmp
cmpl
pushf
rcrl
jle
lcall
xchg
scas
jmp
jmp
frstor
movb
sub
aam
cmp
addb
mov
push
and
in
gs
or
js
rolb
pop
xchg
ror
je
mov
in
lahf
mov
xor
rcrb
ds
popa
dec
popf
lcall
sub
xchg
outsl
ret
mov
adc
push
push
andl
or
insb
mov
jmp
adc
lcall
fwait
xchg
or
cli
or
das
mov
int3
xchg
xchg
outsl
sub
fsub
pop
ljmp
add
sub
leave
mov
jg
imul
push
push
dec
cmp
enter
push
mov
mov
mov
or
dec
push
in
ds
pop
sbb
cwtl
pop
insl
dec
mov
sbb
xchg
dec
sbb
out
imul
stc
jns
outsb
lret
push
sub
clc
jp
fs
outsb
xchg
pop
jge
xchg
sub
mov
rorb
pop
sbbb
dec
rclb
cltd
sub
cmp
cli
icebp
sbb
outsl
jae
repz
lods
ss
push
sub
iret
jns
ds
mov
ja
setno
sub
ljmp
stc
push
xor
sti
jb
and
popf
inc
inc
push
add
and
and
faddp
jmp
test
pop
lret
addr16
add
stc
xchg
add
int
fcompl
shl
mov
addr16
cmp
daa
mulb
sub
fsubs
test
es
fidivs
ljmp
fiadds
loope
mov
inc
mov
ja
or
popa
mov
pop
pop
adc
cmp
pushf
mov
or
in
dec
rcrb
enter
nop
in
mov
pop
mov
imul
mov
addr16
inc
imul
dec
add
jp
xor
fadd
test
aad
pop
std
fstpl
dec
cld
fcoms
mov
lods
adc
mov
dec
pop
sbb
pop
imul
sub
sub
xor
pop
pop
fcomps
fwait
xor
fnstcw
cs
test
pushf
int3
jecxz
mov
push
filds
les
test
jle
cli
mov
jmp
pop
loope
mov
xchg
cmp
fisubrl
shlb
adc
ljmp
daa
repz
and
ja
jmp
adc
cmp
mov
add
add
nop
push
out
daa
pop
xchg
dec
dec
lcall
mov
mov
cltd
push
sub
inc
and
int3
pop
lahf
dec
inc
lcall
mov
xchg
daa
aaa
push
outsl
adc
hlt
dec
push
fistpll
mov
shlb
movsl
fiadds
dec
xchg
mov
xchg
and
mov
dec
inc
pop
dec
jecxz
jbe
xchg
daa
sbb
xchg
jmp
inc
mov
cmp
dec
cmp
sub
cli
fnstsw
or
nop
and
nop
mov
repnz
dec
push
aas
cmp
add
cltd
push
loope
call
insl
insl
arpl
mov
jmp
sub
or
sbb
mov
sub
data16
arpl
inc
xchg
jl
cmpsl
ljmp
pop
dec
xchg
pop
clc
ret
push
out
mov
jl
leave
sub
jl
into
cmp
jnp
adc
jl
or
mov
lea
test
push
int3
jmp
sub
jae
mov
pop
push
mov
je
cmp
mov
jmp
xor
sub
cmp
pop
sbb
mov
mov
and
pop
jns
addl
mov
lods
sbb
fildll
scas
mov
inc
jmp
or
mov
shll
lea
dec
dec
or
mov
out
and
lcall
push
or
mov
mov
xchg
push
scas
icebp
imul
sbb
jne
rclb
les
dec
ja
imull
ret
cmp
cmp
adcl
cltd
cmp
sub
bnd
mov
or
inc
clc
mov
fcmovb
in
int
or
roll
loopne
movsl
sub
cmp
std
or
cmp
icebp
mov
sub
repnz
fcompl
ret
cmp
adc
cwtl
shlb
cli
push
hlt
sub
jo
hlt
xchg
mov
outsl
lret
int
hlt
mov
sbb
cmp
ljmp
jp
lods
jp
insb
pop
sub
aas
int
jl
out
aad
jae
test
dec
sub
jg
adc
sti
mov
add
cmp
xchg
mov
push
push
xchg
jmp
push
xchg
imul
addb
jo
std
sub
pop
jmp
cld
into
daa
and
insl
or
xor
pop
xchg
cmp
mov
cmc
test
pop
scas
mov
pop
and
adc
mov
and
jnp
aas
rcl
fcomip
fisttpl
arpl
jl
mov
or
aam
xor
shl
mov
and
sbb
cmpb
push
lcall
ret
xlat
iret
stos
jp
insb
xchg
loopw
mov
test
mov
dec
inc
mov
cmpsl
jp
pop
push
adc
and
ljmp
mov
into
ds
push
or
movsb
in
mov
push
es
pop
testl
xchg
lret
xchg
iret
and
pop
jo
shll
sub
pusha
into
pop
addr16
push
addb
inc
mov
cmpsb
dec
and
add
jbe
xor
pop
mov
loope
into
or
xchg
movsb
clc
dec
mov
into
pop
testb
pop
aas
jnp
scas
cmp
xor
xor
cmp
or
mov
ljmp
cs
add
sub
enter
dec
lret
fsts
ret
push
insl
mull
jl
mov
aaa
jecxz
out
cmp
pop
test
shlb
stos
add
jmp
rorb
or
lcall
sub
out
pop
pop
fdivrs
cmp
mov
push
lea
pushf
jae
mov
data16
mov
pop
sbb
lods
cld
xchg
daa
hlt
subl
pop
dec
loop
or
clc
xor
loope
xchg
or
call
ss
hlt
test
cltd
fucom
jle
imul
loop
pushf
aaa
fldcw
stos
stos
rclb
xor
sbb
ja
scas
xlat
pop
xchg
inc
mov
adc
sbb
aam
das
mov
icebp
mov
ret
lahf
fimuls
pop
jne
sbb
and
mov
add
dec
pop
out
pop
cmpsb
sbb
out
pop
mov
mov
leave
jle
and
xchg
lods
repnz
lds
sub
mov
out
rcl
ja
in
in
test
mov
cmp
mov
dec
cmpl
sbb
dec
cmp
cltd
gs
int
jnp
ret
cmpsl
push
sub
xchg
rclb
mov
test
add
lods
out
cmp
xor
fistps
test
repz
mov
sbb
mov
xlat
cwtl
pop
mov
call
std
and
lods
mov
fnsave
cmp
xchg
xchg
stos
pop
mov
or
out
jno
jbe
pop
repz
jb
test
iret
adc
mov
lret
and
push
jb
mov
cltd
mov
inc
add
cmp
in
mov
stc
mov
pop
clc
lret
popf
pusha
dec
mov
xor
ljmp
adc
sbb
lcall
cmpsl
mov
jge
lret
dec
or
ljmp
dec
out
and
or
push
inc
cmc
inc
filds
in
mov
movsl
cs
std
xlat
sub
mov
std
jg
jecxz
adc
scas
cmp
leave
inc
push
push
add
pop
jl
orb
mov
push
repnz
jle
pop
or
xchg
sbb
shlb
and
push
jbe
or
stc
idivb
out
xor
sub
cmp
xor
and
inc
fmul
xor
sbb
mov
pop
push
insl
jns
addr16
cli
int3
sarl
push
lock
xor
aas
ret
rorb
mov
ljmp
sub
popf
xchg
mov
mov
mov
pop
sub
loope
fdivrl
mov
inc
sbb
xor
scas
lret
add
pop
push
scas
movsb
push
imul
and
pop
les
mov
jmp
xchg
xlat
aas
out
jp
add
sub
out
add
jp
sub
js
daa
je
mov
ret
push
rclb
cwtl
pop
mov
push
repz
pop
mov
pop
lea
rorl
mov
mov
outsb
fcompl
adc
xlat
xchg
mov
mov
stc
mov
and
scas
testb
push
lret
cmpsb
cmp
push
int3
sbb
enter
shr
adc
jo
popl
push
repz
jnp
inc
sub
pop
xchg
je
je
jnp
int
mov
mov
cmp
xchg
icebp
cmpb
xchg
aas
stos
mov
rcrl
jge
push
xchg
lret
or
fistpl
sarb
xlat
addr16
sub
dec
lret
xchg
ja
in
and
out
pop
daa
enter
add
mov
cmpsb
sti
add
add
test
lods
mov
lods
inc
or
mov
jns
ss
icebp
jecxz
aaa
xchg
aam
xor
cmp
mov
xchg
add
xchg
rolb
test
mov
mov
cmovle
jns
xor
xor
and
dec
mov
ss
fiadds
mov
je
push
data16
xchg
add
dec
dec
xor
mov
fidivl
or
xor
iret
sbb
push
cli
pop
inc
add
add
in
lret
mov
icebp
push
icebp
mov
flds
notb
jno,pn
lock
xorl
sbb
insl
cwtl
shll
cmc
mov
std
cmpsl
mov
sbb
mov
ror
fidivs
movsl
leave
mov
fistps
dec
jbe
jae
push
jae
adc
adc
loopw
in
mov
xor
mov
dec
aad
jo
pop
jmp
adc
sbb
popf
faddl
rcrb
inc
jns
inc
xor
aaa
pop
xor
lret
cmpsl
cmp
dec
mov
xchg
jne
ds
sbb
cltd
push
sbb
xor
lds
mov
adc
xor
movsb
pop
cmpsl
cmp
push
cmp
cmc
xor
cmpsl
sub
mov
inc
mov
lods
out
adc
inc
push
and
icebp
dec
and
pop
add
or
ss
pop
fucomi
data16
inc
repz
pop
ret
pop
insl
icebp
xor
inc
push
sub
cltd
lods
outsl
mov
pop
decl
cmp
sbb
pop
enter
fcmovbe
insb
mov
xchg
dec
and
imul
xorb
push
in
cwtl
in
inc
leave
ljmp
xchg
pusha
sar
js
or
data16
mov
out
andb
xchg
pushf
test
sbb
sarl
mov
sti
sub
loopne
ret
pop
por
push
test
loope,pt
lret
push
ljmp
imul
addl
cltd
or
es
add
cli
sbb
insl
and
push
xchg
aad
shl
jle
jecxz
ss
out
loope
out
jg
mov
bound
testb
cmpsb
fwait
sub
rcrl
fs
mov
pop
mov
dec
popa
das
into
add
xchg
std
mov
xchg
and
mov
cmc
xchg
or
ficomps
lret
clc
xlat
cmc
rcrb
sub
fiaddl
xor
lds
push
pop
out
shrb
insb
dec
cmp
popf
cmp
jmp
sbb
mov
cli
mov
mov
adc
lahf
cmp
fstl
fnstcw
lods
sbb
and
ret
inc
sub
out
daa
xor
test
imul
cltd
hlt
mov
xchg
jge
cs
fdivrl
jae
outsb
pusha
inc
dec
xchg
jmp
sbb
fwait
adc
test
jns
pop
hlt
jb
arpl
into
mov
imul
aaa
mov
cmp
jno
xlat
arpl
cld
ljmp
subb
out
sbb
mov
add
add
pushf
addr16
lret
push
inc
repz
in
fwait
push
cwtl
or
std
iret
push
inc
inc
fdivrl
rolb
or
icebp
sub
sub
mov
adc
inc
pop
xchg
sub
ret
clc
xchg
mov
repnz
inc
das
push
jmp
jle
and
push
adc
inc
inc
into
ds
icebp
dec
lret
jg
push
xchg
leave
push
icebp
fs
test
pop
loopne
xor
int
pusha
pushf
or
fwait
insb
jbe
jb
mov
dec
imul
das
pop
push
rolb
xchg
repnz
pop
js
jno
push
inc
imul
pusha
outsb
in
imul
dec
scas
dec
popf
and
dec
mov
sub
pop
jle
mov
pop
bswap
arpl
mov
adc
and
lds
sbb
lock
mov
push
xor
into
jp
push
out
decl
mov
popa
mov
mov
cld
adc
inc
test
or
flds
add
gs
test
sub
outsb
sarl
push
jne
test
xor
sub
add
hlt
pop
cli
popf
into
and
pop
mov
jl
pop
loop
xchg
xchg
loope
ss
adcb
push
lea
push
mov
pop
adc
test
push
push
mov
sahf
inc
cs
dec
pusha
mov
push
and
nop
das
sahf
mov
insl
sub
fdiv
xchg
push
lods
xchg
int
aad
jno
ljmp
adc
lret
mov
outsl
mov
cwtl
imul
fisubs
and
cltd
mov
or
test
lock
rcll
mov
test
mov
fadds
int
inc
lds
xchg
std
cmpsb
ficoms
or
xchg
stos
iret
sbb
or
scas
inc
pop
bound
cmp
aad
subb
sub
sbb
psubsb
mov
cmp
cmp
mov
cli
xor
push
imul
imul
cld
inc
dec
push
pop
dec
dec
lahf
icebp
add
mov
mov
mov
stc
hlt
cmpsl
and
jl
pushf
out
xor
pop
lcall
addr16
out
or
sub
sbb
xor
push
xchg
call
fstl
arpl
add
xor
lret
in
enter
ja,pt
in
imul
in
out
out
inc
mov
cmpsb
sbb
cmp
jle
imul
das
js
xchg
fmull
and
xchg
js
divb
adc
or
icebp
dec
inc
add
xchg
sbbl
and
inc
or
lcall
je
aam
fstpt
out
out
rorb
add
xor
in
loopne
lsl
rcr
mull
pushf
xchg
mov
fwait
jl
fucom
pusha
jns
xchg
iret
sub
mov
sub
xor
dec
push
std
clts
inc
fs
add
jno
push
add
cmp
and
iret
les
pop
jno
xchg
in
mov
mov
cmp
leave
cmp
fsts
pop
pop
sarl
push
ja
or
jmp
xchg
aam
push
pusha
push
xchg
aas
into
jecxz
lahf
mov
icebp
les
lds
xor
mov
adc
insl
jecxz
fs
pusha
test
xor
in
xchg
push
push
outsb
jae
inc
xchg
or
cmp
jge
sti
add
dec
jmp
or
xchg
leave
xor
sbb
negb
mull
jge
arpl
push
jp
mov
mov
jne
jns
clc
repnz
pop
cmp
sahf
lret
stc
xchg
lods
mov
aad
push
data16
cmp
jbe
addl
inc
fs
jne
shrb
fdiv
mov
pop
roll
aaa
cmp
cmp
shr
mov
idivb
jo
or
ja
push
mov
movsl
dec
rorl
std
mov
mov
jge
inc
mov
xchg
pop
cli
popa
xchg
movsb
sub
outsl
fbld
mov
aad
jl
mov
add
sub
out
pop
test
mov
jge
xor
mov
lock
push
mov
pusha
xor
jns
out
lahf
inc
movsl
iret
and
int
jecxz
mov
cs
dec
jecxz
jbe
sub
fldcw
enter
mov
adc
dec
nop
cmp
frstor
sbb
and
bound
fsts
mov
mov
or
mov
pop
mov
jne
inc
mov
sbb
lret
int3
enter
mov
or
add
mov
xchg
shll
adc
push
shlb
adc
push
insl
jne
cmp
adc
icebp
mov
ret
xchg
and
and
and
out
popf
fisttps
enter
sub
cmpsl
jne
insb
cld
jecxz
lret
mov
or
push
inc
pusha
out
fsubrs
push
fwait
lods
adc
inc
iret
lahf
mov
adcl
hlt
out
mov
test
jge
lods
mov
xchg
stc
lds
push
mov
push
mov
std
popa
adc
rcrl
sbb
cmp
jnp
inc
add
lret
push
mov
xor
aad
cmp
xor
fidivs
les
adc
mov
jecxz
das
mov
mov
sbb
jg
cmc
test
pop
push
fstp
imul
gs
dec
mov
std
cmp
xchg
arpl
nop
push
cmpsb
push
mov
push
aas
mov
icebp
es
mov
xchg
outsl
push
movsl
mov
insb
repnz
push
add
mov
lret
insb
sbbb
je
push
push
lods
xchg
fwait
cmp
lcall
paddw
pop
mov
bound
ficompl
sub
aas
imul
leave
dec
lret
rcll
faddl
into
sub
or
jmp
loop
pop
iret
adc
or
out
sbb
push
ss
jo
and
xchg
mov
cmc
pushf
pop
push
inc
pop
sbb
mov
pop
and
xchg
add
dec
ds
loope
pop
sub
cmc
enter
dec
push
xlat
adc
test
jo
sbb
xor
out
adc
mov
je
mov
out
jnp
cmp
stc
inc
jg
fidivrl
push
fmuls
jmp
out
fdivl
pop
push
std
xor
push
scas
jb
push
inc
push
fstpl
xchg
pop
pop
sbb
into
subb
les
jnp
imul
xlat
in
outsb
adc
jne
pop
mov
dec
sbb
xchg
mov
sub
jg
mov
sub
lahf
les
lret
add
jns
mov
jns
sub
shrb
cmp
xorl
lods
fldl
xchg
out
xor
mov
rcl
mov
popf
pop
push
sbb
aam
pop
out
mov
out
inc
add
xchg
std
mov
pop
lret
sub
add
mov
cmp
mov
fcoms
push
dec
or
imul
rol
aad
jmp
shlb
mov
cld
in
dec
sub
xchg
outsb
jae
xchg
pop
sahf
inc
xor
arpl
pusha
or
pop
popf
pop
pop
push
sbbl
inc
xchg
jne
rclb
or
lods
xchg
xchg
mov
lock
xlat
shrb
inc
icebp
xlat
jmp
add
sti
jmp
jp
mov
sahf
sar
mov
mull
xor
jge
scas
stos
xchg
and
jns
pop
inc
xor
pop
and
test
enter
out
ljmp
inc
outsl
xorb
ljmp
data16
in
call
sub
cmp
adc
fs
cli
shl
aam
imul
sub
pushf
dec
dec
mov
add
cmp
mov
cld
inc
inc
add
lret
push
xchg
cmp
push
lret
push
gs
jmp
int3
xor
std
fdivs
sbb
stos
imul
leave
out
mov
jne
scas
jecxz
jg
int
inc
shlb
sbb
aam
jge
sub
fdivrs
mov
cmp
ret
std
mov
add
shl
inc
cmp
mov
sbb
arpl
mov
mov
and
out
xchg
std
imul
fwait
and
mov
sub
in
movsb
subl
adc
arpl
lods
scas
push
in
cli
inc
push
jns
fdivl
insl
dec
cmpsb
and
pop
inc
aam
lds
cs
cmp
adc
and
adc
ja
jbe
popf
dec
movsb
xchg
cmpb
sub
mov
in
es
mov
outsl
idivl
and
mov
xor
fdivr
mov
shufps
mov
lds
push
cmc
cld
jns
cmpl
and
push
or
nop
lcall
cmp
jae
push
jecxz
mov
jge
dec
push
imulb
jo
idivb
outsl
lods
out
ljmp
pop
rcrb
mov
shlb
xchg
xlat
pop
sub
jp
sub
mov
xchg
lret
clc
arpl
sahf
sub
inc
clc
sbb
sub
jg
mov
and
gs
push
push
mov
or
pop
jmp
push
dec
std
repnz
cmp
pop
mov
xchg
xchg
mov
jbe
in
int3
mov
push
movsl
fisubs
cmpsl
movsl
mov
shll
push
popf
or
les
cltd
and
xchg
loop
xchg
js
xchg
gs
je
mov
push
sti
jle
rclb
call
jmp
in
push
ret
jne
mov
add
adc
fbstp
push
clc
push
adc
xchg
rorb
pop
push
pop
or
or
xchg
inc
test
sahf
sbb
xor
test
mov
mov
fldcw
jae
sahf
mov
in
cld
in
int
pop
inc
mov
push
sbbl
adc
inc
mov
loop
push
icebp
test
bound
je
movsb
mov
pop
cmpsb
mov
sub
popf
and
mov
mov
loopne
push
add
ds
in
stos
dec
or
inc
stc
mov
push
int
ret
adc
lods
jo
pop
mov
adc
fdivrl
xchg
inc
jns
pop
std
out
or
sbb
out
inc
sub
dec
push
loopne
dec
pop
jecxz
dec
xchg
pop
push
mov
xchg
sub
pop
fdivs
jle
imul
data16
imul
xchg
pop
int3
inc
pop
popa
loopne
popf
mov
add
and
xchg
loop
pop
out
notb
cmp
rclb
dec
incb
jp
ficompl
pop
movsb
xchg
cmp
ficomps
pop
jl
or
test
mov
xor
aam
inc
jecxz
jp
int
std
push
cmp
sub
lds
push
stc
push
xchg
test
add
pop
shlb
hlt
popf
rclb
jp
jecxz
mov
imul
stc
addb
add
outsl
lods
test
mov
dec
orl
pop
jno
imul
pushw
or
loope
iret
pop
cmpsb
pop
daa
ret
int
jl
loop
cltd
inc
xor
nop
jne
in
lods
pushf
icebp
aam
rorb
mov
xorb
push
mulb
add
inc
inc
mov
xchg
mov
outsb
push
add
test
and
mov
mov
pop
xor
int3
mov
jbe
push
pop
jecxz
xchg
adc
pop
push
xchg
push
inc
adc
clc
jae
nop
insl
iret
inc
lahf
push
mov
fisttps
push
or
pusha
mov
aam
xchg
fwait
outsb
insb
lds
inc
mov
push
cli
xor
and
fnstcw
sahf
test
adc
fwait
push
subb
jo
and
jnp
outsb
cmp
mov
sub
xchg
int3
and
or
outsl
out
pop
dec
fidivrl
dec
rclb
out
dec
loopne
int
in
addb
xlat
inc
stos
and
jno
loope
and
or
pop
sbb
add
cmp
mov
fsubrs
fs
js
adc
arpl
insl
inc
fisttps
lahf
lret
push
mov
ret
and
fdivp
ss
leave
cmp
push
es
ds
test
subl
add
xchg
jbe
mov
dec
xchg
xchg
js
repnz
js
cli
or
in
ljmp
xor
pop
jl,pn
pop
push
addl
add
jmp
rorl
cmp
jne
insb
data16
sti
and
xchg
loopne
or
xor
jmp
xchg
insl
adc
negl
xor
inc
xor
or
push
jns
or
aam
pop
xchg
dec
sarl
rclb
mov
pop
and
sarb
in
pop
je
addr16
jecxz
mov
ret
mov
test
stc
adc
data16
jbe
mov
aaa
cmp
jb
jge
adc
orb
es
inc
aad
call
sbb
or
and
cmpsb
out
fstpl
pop
fwait
or
cmp
sub
nop
outsl
flds
pop
in
or
pusha
and
sub
push
dec
fsubr
pop
daa
dec
fisttpl
icebp
xchg
add
pop
mov
andl
inc
inc
outsl
out
or
pop
adc
xchg
ja
int3
insl
dec
adc
push
shll
pop
pop
cmp
out
sub
cmc
js
movl
sbb
shl
mov
ds
dec
xor
enter
xchg
lea
jmp
mov
frstor
pop
in
in
js
jo
cmp
mov
mov
int
rcr
or
fmuls
jp
sub
fldl
jnp
insb
mov
fbld
fucomi
aaa
push
imul
nop
fstps
jg
jg
sar
sbb
jg
das
stos
add
push
and
jb
popa
insb
push
outsl
push
xchg
sbb
inc
jecxz
enter
or
mov
push
sbb
sub
xchg
jmp
jbe
sub
pusha
ret
fucom
push
lods
mov
adc
subl
sub
mov
mov
xchg
xchg
fimuls
inc
test
call
rorb
inc
or
push
mov
test
inc
mov
dec
mov
in
shrl
imul
popa
movb
imul
and
push
stos
xorl
faddl
xor
add
sbb
sub
loope
adc
imul
stos
xchg
ljmp
sbb
mov
hlt
addb
or
xlat
xchg
mov
add
bound
cmpsb
sbb
sarb
mov
fwait
rorl
mov
aas
dec
out
shlb
add
call
sbb
mov
mov
xchg
bndldx
sbb
pop
pop
or
sbb
shrb
test
je
jge
jne
jns
test
dec
aam
jl
loope
mov
stc
jl
cmp
cmp
adc
xchg
push
pop
flds
mov
jnp
aad
aas
fs
xchg
sub
mov
in
fsubrs
fistpl
xchg
leave
xchg
xchg
pop
xor
mov
pop
sub
push
dec
mov
mov
subb
inc
movsl
jle
lock
je
lea
mov
add
leave
pop
imul
mov
ds
cltd
je
xorl
push
testb
cmp
ja
mov
inc
xchg
lahf
popf
icebp
jmp
dec
xchg
jno
pop
adc
fwait
ret
and
test
aad
mov
or
add
repnz
jbe
adc
cmp
mov
or
jno
roll
lods
ret
insb
shll
fistpl
call
cli
push
dec
repnz
xor
xlat
push
push
mov
or
mov
add
nop
sbb
iret
pop
mov
mov
inc
xor
mov
pop
enter
idivl
jo
test
add
adc
nop
sub
adc
adc
push
cmp
dec
cmpl
in
mov
mov
push
jl
nop
mov
icebp
rorl
mov
testb
in
inc
lock
dec
scas
mov
cmp
jae
negl
repnz
cmp
fistl
popf
push
call
add
or
fsub
orb
ss
and
cli
fsubl
insb
adcl
imul
add
test
mov
int
mov
int3
mov
mov
or
jecxz
or
mov
mov
insb
xor
or
lock
mov
push
xorl
out
dec
pop
adc
mov
imul
cmp
push
jbe
jnp
cmpsl
inc
and
out
pop
pop
xor
cmpb
mov
lret
fidivl
lock
mov
fisttpll
fwait
sub
in
test
sbb
push
lds
sub
mulps
pop
and
sbb
mov
fisttps
sub
ret
adc
das
aas
in
in
outsb
push
mov
mov
out
mov
inc
mov
add
out
push
lds
arpl
push
jmp
add
add
gs
sub
popa
rolb
or
cs
or
hlt
mov
scas
notb
stc
push
sti
xor
enter
sti
xchg
in
inc
cmp
fmull
mov
ljmp
jg
mov
sub
jecxz
pop
aas
or
rcrb
lea
pop
dec
jmp
xor
pop
and
fnstcw
cmpsl
sbb
mov
pop
adc
daa
int
sbb
xor
and
addb
das
dec
cmp
lods
jnp
fisubs
ja
mov
or
sub
mov
mov
mov
jecxz
test
xchg
stc
mov
jle
out
ja
jae
sub
cmpb
cmpsb
mov
insb
xchg
jnp
adc
ja
pop
nop
jmp
xchg
imul
xchg
lods
popf
jns
imul
mov
lea
shll
mov
and
loop
ja
sbb
push
mov
inc
paddusb
cmpsl
fidivrs
std
dec
fbstp
mov
mov
insl
fcoms
mov
pop
push
jnp
into
pop
or
lea
movaps
insb
pop
cltd
popa
cmp
mov
or
adc
sbb
adc
aam
mov
inc
sbb
adc
imul
mov
faddp
adc
mov
fcoms
jl
or
xchg
mov
adc
fimuls
fmuls
lret
inc
xor
cld
mov
aaa
or
mov
lods
xchg
outsb
rorl
sub
dec
xor
int
orb
mov
mov
xchg
in
inc
or
inc
jns
lods
rcrb
leave
mov
xchg
push
stos
cs
stc
repz
cmpb
jmp
push
lahf
sub
adc
lret
sub
clc
and
add
inc
je
dec
mov
xchg
int3
rolb
or
nop
fsts
push
or
sbb
leave
or
mov
jnp
push
adc
add
stc
clc
mov
lcall
jg
or
pop
pushf
out
adc
mov
inc
lea
stos
xor
out
cmp
xchg
xor
push
xor
in
test
shrl
shl
jbe
shl
aam
or
pop
dec
cmp
jmp
ss
loope
loop
subb
or
jno
push
cmp
sbb
cmp
js
not
sbb
add
sbb
mov
fimull
sub
cli
into
sbb
or
mov
push
jb
js
push
fidivrl
arpl
sbb
loope
jne
out
and
and
inc
fidivrs
pop
fisubl
pusha
leave
cmpsb
sti
mov
sbb
jg
and
pop
fiadds
mov
add
in
xor
inc
je
cmpsl
out
outsl
aam
or
scas
addr16
xchg
inc
imul
filds
sub
in
adc
jns
sub
sbb
or
dec
cmpsl
xor
mov
add
test
cmpsl
test
pop
xlat
gs
cltd
mov
or
sub
pop
fucom
mov
xchg
sbb
mov
bound
add
sub
inc
inc
ljmp
ficoms
mov
mov
adc
loope
xlat
pop
sub
add
aad
subb
dec
mov
xchg
xor
jae
and
out
and
jnp
fucomip
or
sub
and
pop
pop
pop
cwtl
sub
hlt
or
pop
mov
cli
xchg
es
inc
and
popa
mov
stos
push
in
mov
outsb
jo
lahf
mov
sbb
ljmp
mov
add
mov
enter
or
scas
cmc
sub
ljmp
test
addr16
push
and
je
leave
fisttpl
xor
shlb
dec
or
repnz
js
fwait
les
mov
cmpl
xlat
aaa
inc
mov
inc
xchg
cwtl
inc
add
bound
std
pop
xchg
or
jl
add
hlt
add
fwait
mov
outsl
jp
xor
jp
out
inc
cmp
mov
aaa
adc
not
sbb
and
push
cwtl
scas
mov
or
movsb
mov
sub
lea
mov
into
push
popa
mov
pusha
and
push
push
pop
xlat
push
mov
test
or
cmp
shrb
cmp
mov
fcomi
sbb
fimull
and
inc
mov
inc
and
shll
mov
jb
mov
rcrl
movsl
pop
jecxz
fstl
or
pop
fcoml
xchg
jg
ljmp
jae
bswap
ret
in
lahf
loope
or
or
inc
out
sti
popa
fstps
cli
inc
ja
xchg
iret
cmpsl
shrb
jp
lret
fmulp
mov
fdivl
imul
in
jo
mov
bound
sub
mov
and
dec
xlat
add
imul
repz
inc
pop
add
sub
aaa
out
sbb
imul
mov
std
mov
bound
xor
dec
call
xchg
lret
pop
loopne
test
inc
outsl
mov
pop
addl
lock
ja
add
insl
push
imul
pop
cltd
call
cmp
sub
xchg
xlat
mov
push
test
mov
outsl
jne
mov
sbb
or
cmp
adc
out
js
dec
xchg
lods
das
ret
lods
aad
fldenv
cmp
pop
decb
imul
imul
out
scas
fcoms
movsl
xchg
xchg
add
add
ss
test
and
jns
aad
cmp
pusha
in
and
cmp
inc
or
cwtl
pop
fs
xor
out
mov
jmp
out
adc
dec
jl
fcmovnu
outsl
loopne
nop
fucomi
fsubrs
addb
cli
ds
out
push
scas
push
pushf
and
jmp
xor
lret
mov
popf
movsb
call
ss
repnz
push
testl
mov
sub
repnz
inc
pop
ret
inc
stos
loope
nop
or
push
mov
rcr
push
cmp
repnz
xchg
mov
mov
out
jecxz
xchg
repnz
jp
lods
push
cmp
ja
sub
ss
fldl
lea
repz
xchg
and
dec
mov
and
test
call
cmp
and
test
call
fdivl
sbb
push
lods
fsubr
out
sub
js
add
sbb
add
cmpsl
push
packsswb
and
and
and
sbb
mov
or
insl
lods
pop
push
aas
inc
test
pop
cwtl
into
fwait
sbb
mov
pop
mov
sbb
mov
dec
sbb
xchg
sbb
js
jb
mov
addr16
in
fisttps
sub
mov
mov
push
icebp
inc
mov
dec
lods
loop
in
shl
pop
popf
movsl
loop
mov
cmp
sti
test
jmp
fsubl
sub
push
inc
jecxz
out
and
loopne
cmpsw
data16
sahf
ret
ret
fwait
mov
inc
sti
cmpsl
popf
stos
adc
pop
js
fidivrs
or
out
xchg
mov
mov
add
xchg
sti
jp
sub
xor
out
push
push
mov
adc
and
and
inc
xlat
lea
sbb
popa
push
pop
xchg
add
pop
pop
sarl
xchg
sub
add
or
leave
mov
add
jge
cmp
xchg
and
imul
jl
fwait
clc
pop
or
jnp
mov
lods
shrl
add
dec
xlat
adc
pop
jp
xchg
mov
rolb
pop
incl
dec
or
adc
aad
aas
enter
or
sub
inc
dec
push
mov
addr16
lods
cmp
lods
sub
xlat
orl
pop
push
out
push
and
outsl
leave
mov
and
ror
inc
mov
arpl
rcrl
scas
and
sbb
lock
aaa
xchg
xor
mov
add
cmp
loope
and
iret
or
mov
mov
mov
or
and
je
cwtl
sub
push
cmp
xor
push
cmpsb
push
push
test
inc
pop
daa
int3
popa
in
mov
scas
lods
shlb
rolb
fistps
add
aaa
mov
mov
mov
jg
lds
inc
inc
stc
adc
dec
or
lods
mov
icebp
mov
cld
mov
lods
lock
lret
xor
insb
pop
pushf
cmpsb
movsl
and
inc
adc
test
repz
mov
outsl
add
xor
insl
cwtl
mov
xchg
sbb
and
jecxz
fstps
xor
or
shll
xor
lock
push
and
test
mov
or
mov
xchg
insb
inc
es
jl
outsl
cmp
stos
lds
cwtl
aas
pushl
and
jnp
loop
out
movsl
push
jae
mov
loope
mov
shlb
pusha
inc
or
fwait
aad
decb
negb
pusha
jl
lds
adc
jbe
insl
cmpsb
xlat
jo
xchg
out
xchg
inc
hlt
jl
outsb
sbb
push
cmp
fsubl
add
lcall
push
or
imul
or
cmpsl
push
jge
mov
sub
repnz
or
pop
or
dec
mov
enter
dec
bound
arpl
sub
sarb
notl
pop
mov
mov
inc
mov
cltd
inc
clc
dec
and
cld
shll
fisttpll
adc
push
ja
inc
mov
pop
cmpsl
rolb
xchg
jle
xor
movsb
adc
cmp
sbb
adc
imul
and
iret
mov
stos
leave
ret
mov
ret
leave
out
pop
out
in
and
inc
dec
xor
xchg
jl
popf
arpl
les
cltd
xchg
and
aaa
hlt
mov
adc
adc
xor
js
decb
dec
add
je
mov
and
cmc
int
adc
push
outsl
mov
mov
xchg
sti
iret
inc
aas
scas
aaa
subl
inc
lods
icebp
xor
das
fcompl
sti
test
mov
scas
jmp
and
or
and
lods
xchg
mov
sub
shrb
xchg
and
cmp
xchg
mov
in
xchg
xchg
cwtl
cmpsl
and
sub
mov
lods
push
sti
jb
jne
lahf
mov
xor
jmp
push
pop
mov
pop
loop
stc
stc
adc
out
mov
xchg
mov
inc
dec
cmp
fdivl
xchg
subl
dec
ljmp
sbb
cmc
dec
bound
dec
mov
cmp
xchg
add
sub
adc
in
rorl
jg
add
xchg
sbb
and
test
mov
and
enter
mov
jo
in
push
lods
jge
addr16
add
jb
out
lahf
mov
les
daa
mov
mov
es
out
or
inc
or
gs
ja
xor
or
xor
jge
dec
call
inc
imul
inc
sub
call
mov
ffreep
addb
pop
loop
mov
xchg
lods
dec
ret
xchg
adc
dec
mov
and
xchg
and
cmp
movsl
sub
fidivrs
mov
addr16
mov
data16
pop
sahf
pop
mov
in
cmp
cmpsb
pop
iret
outsb
push
aaa
rorl
mov
pop
or
xor
cmp
repz
nop
mov
fildll
ret
pop
lds
xchg
insb
mov
pop
sbb
fldcw
adc
and
scas
and
aam
and
xchg
pop
mov
and
jno
lock
stos
repnz
imul
push
sbb
push
add
aas
jae
scas
push
inc
adc
dec
and
mov
stos
push
add
scas
push
inc
daa
cmpsb
xlat
sbb
jge
mov
jb
sti
add
pop
push
sbb
test
or
cmp
mov
sbb
imul
sub
pop
mov
pop
cmp
xchg
clc
adc
jno
test
icebp
mov
dec
inc
imulb
push
dec
lods
je
cmp
add
mov
xchg
into
jns
xorl
sahf
jns
daa
push
loopne
inc
aas
insl
and
jns
sub
shrb
add
scas
imul
das
pop
xchg
aad
subb
xchg
leave
pop
adc
sti
loopne
mov
ss
sbb
xchg
out
xlat
add
pop
in
inc
int3
mov
add
iret
pop
jbe
adc
call
pop
sbb
lea
xcrypt-ofb
cmpsl
jmp
cli
inc
es
stos
scas
mov
push
aad
data16
add
repz
xchg
and
mov
or
pop
sub
sarl
fimuls
sbb
xor
lahf
mov
test
ret
call
jp
jmp
xchg
inc
mulb
xchg
aas
ret
pop
arpl
test
pop
mov
lret
jp
lods
add
mov
and
xchg
daa
stos
push
fdivp
xor
pop
sahf
xchg
jge
roll
jg
jmp
add
mov
jg
pop
xchg
hlt
pushf
jbe
mov
or
cmp
sbb
inc
jl
jp
rclb
lods
insl
inc
inc
jbe
ret
push
dec
add
push
mov
mov
push
xchg
outsl
sbb
popf
xor
je
push
dec
push
or
adc
adc
pop
or
or
lcall
pusha
mov
ret
pop
in
mov
repnz
pop
push
bound
and
mov
js
icebp
inc
pop
scas
test
outsb
cmpsl
mov
rcrb
outsl
hlt
aad
push
xchg
jmp
sbb
icebp
nop
dec
imul
cs
mov
or
cmc
repz
sti
or
jo
xchg
or
outsl
fcoml
cmp
jl,pn
pop
jo
jnp
stos
jmp
fcomps
addr16
adcl
add
and
dec
mov
sub
adc
cwtl
mov
mov
je
lret
into
push
pop
inc
out
gs
insl
sbb
cld
xor
lds
cmp
xchg
pushf
xlat
cmpsb
cmpsl
stos
mov
stc
pop
aam
lret
loope
sbb
pop
xchg
arpl
push
insl
mov
cmc
sahf
imul
or
ret
push
notl
or
hlt
test
in
push
ds
and
arpl
and
ficomps
or
enter
mov
xchg
push
aaa
adc
inc
cld
sbb
dec
and
xor
or
sub
fsubrs
outsb
mov
inc
mov
xor
jmp
jmp
inc
arpl
sbb
into
lcall
jp
add
mov
push
inc
push
xor
into
xor
xor
test
xor
bswap
mov
daa
cmc
ljmp
out
ret
into
xor
pop
inc
xchg
std
cli
inc
addr16
scas
popa
xchg
push
adc
cmpsb
pop
nop
repz
or
sub
push
jg
or
imulb
mov
push
sti
push
mov
dec
cmpsl
xor
fucomip
mov
pop
ljmp
push
mov
pop
lret
pop
mov
sbb
mov
push
add
lds
pcmpgtw
test
xor
je
mov
dec
mov
and
dec
iret
sub
fs
insb
mov
sub
add
adc
cli
cmp
int3
popf
out
call
test
mov
push
mov
xchg
xchg
stc
and
faddl
sbb
outsb
inc
mov
sbb
mov
leave
pop
leave
lahf
in
ljmp
pop
das
and
jbe
mov
mov
loopne
sbb
xchg
repnz
in
xchg
xchg
test
cmp
jp
iret
pop
mov
mov
lret
shl
pop
scas
cmc
shrb
imul
ss
push
orb
and
pusha
inc
xor
sbb
sbb
std
jecxz
xchg
int3
mov
shlb
mov
imul
lcall
jns
xchg
xchg
outsl
pusha
jecxz
dec
mov
addr16
insl
xlat
sub
mov
sbb
rcll
inc
add
test
adc
out
ljmp
ss
xchg
test
mov
xchg
int3
sbb
stos
pop
fwait
sbb
jb
out
xchg
les
test
jne
lahf
rcll
and
ficompl
leave
iret
sarb
out
lock
repz
stos
sbb
sbb
data16
cmp
addb
loopne
ja,pn
pop
push
fsin
add
je
and
fimuls
push
inc
scas
xchg
popa
cmp
and
push
jae
rorl
push
loope
subb
and
pop
mulb
jecxz
or
add
mov
ja
mov
repz
push
lock
push
fcom
and
out
dec
push
pop
data16
jnp
xchg
cli
inc
inc
mov
in
sub
add
rol
xchg
jp
nop
aas
mov
outsl
mov
movsl
sub
ljmp
sub
mov
or
call
call
cmp
xor
aad
pop
out
pop
pop
xchg
loope
aam
mov
cmp
mov
ror
cli
lods
xor
fwait
daa
push
fmull
ja
mov
cmpsl
pop
fisubl
push
and
loopne
rep
std
fwait
mov
dec
sub
pop
inc
add
mov
fwait
icebp
xor
sbb
xor
sub
xchg
sbbl
and
imulb
std
leave
loopne
jmp
sbb
xchg
mov
int3
jo
mov
outsl
imul
cmpsl
sub
adc
add
int
scas
xchg
jl
jns
cmp
sub
fucomip
xor
pop
mov
repnz
xchg
xor
into
loop
xor
test
sahf
mov
adc
xor
cmp
and
mov
mov
ret
jne
add
pop
xchg
xchg
pop
mov
push
mov
or
dec
push
pushf
add
gs
mov
adc
cmp
je
sbb
inc
xor
cltd
jmp
call
cs
pop
pop
xchg
out
in
mov
bound
aaa
push
xor
adc
mov
lods
and
test
push
jle
jp
add
push
std
out
lock
sub
and
adc
adc
inc
pop
push
aam
popf
mov
jle
call
jae
sub
push
decb
and
aad
xchg
dec
jnp
add
ret
ret
or
jns
jle
xchg
cmp
fdivrl
sub
cmp
outsb
sub
mov
mov
mov
cltd
fwait
and
nop
push
repz
fistpl
xor
sbb
sbb
xchg
scas
xchg
xor
jb
xchg
mov
fwait
push
stc
xchg
mov
arpl
es
sbb
pop
ss
insl
movsl
scas
pop
mov
loope
sub
inc
or
stos
leave
sahf
xchg
cld
das
xchg
and
push
shlb
inc
in
inc
cmp
out
or
xlat
addr16
mov
in
jbe
loop
mov
cltd
inc
cmp
xchg
mov
lahf
add
rcrb
iret
repnz
jns
hlt
cmp
add
push
lods
je
movl
cmc
jle
push
xor
push
dec
mov
jnp
and
flds
insl
mov
ja
mov
mov
mov
mov
push
add
push
clc
cli
rcrl
dec
negl
mov
xchg
imul
mov
inc
mov
dec
jne
lods
gs
movsl
dec
out
sbb
outsb
lock
call
aas
pushl
inc
adc
daa
sbb
xchg
adc
shrl
repnz
push
sbb
push
sub
fstpl
inc
mull
adc
shrb
fidivrs
test
out
out
jns
ljmp
popa
and
leavew
movsb
add
cmp
aaa
add
mov
loop
pop
sbb
outsl
sub
test
xor
xor
adc
pushf
inc
push
adc
pop
sbb
rcll
jl
divl
dec
pop
fwait
dec
jg
xor
std
cmp
mov
push
pop
xor
jecxz
xor
xor
mov
adc
lods
lods
pusha
lock
cmc
sub
lret
sub
sub
pop
cwtl
dec
xchg
xorl
ljmp
lds
out
push
sbbb
decl
cmp
call
or
mov
sti
push
mov
push
cmp
push
scas
les
mov
pop
inc
inc
mov
das
rcrl
enter
pop
sbb
sbb
lods
arpl
jae
fsubl
or
aam
add
test
popf
movsl
inc
mov
sbb
mov
leave
in
mov
mov
popa
cmovne
mov
insl
test
mov
push
dec
mov
jbe
push
ss
mov
imul
sarb
or
addl
call
add
inc
xchg
sub
xlat
mov
fwait
jnp
pop
fwait
xchg
inc
ja
lea
sbbl
lock
scas
dec
xor
mov
push
inc
sub
pop
jo
inc
cmpl
mov
and
lock
or
shlb
adc
xchg
incl
push
jo
std
out
pslld
and
stc
imul
mov
xor
or
cmpsb
in
dec
push
push
pop
out
push
mov
lcall
mov
push
scas
push
cli
ror
jmp
pusha
rcl
fsubp
jmp
ret
cmp
adc
push
int
aas
pop
stos
mov
fwait
sbb
inc
lea
add
int
out
sbb
add
mov
call
cs
fmuls
insl
lods
out
pop
shlb
daa
add
xor
divb
stos
gs
roll
cmp
rcrl
push
mov
rorl
xlat
daa
jp
pop
data16
jecxz
sbb
and
popl
leave
mov
pop
mov
rcll
push
cmp
add
outsb
in
addr16
mov
inc
dec
push
mov
xchg
sarb
test
fimull
jns
pop
xor
cli
sysexit
xor
push
push
hlt
out
sti
lock
add
ljmp
xor
cltd
xchg
imulb
xor
jmp
fiadds
xchg
push
inc
dec
andb
fistpll
mov
imul
je
mov
test
in
cmp
sahf
inc
mov
stos
jl
sbbb
ficoml
pusha
dec
rorl
call
mov
btc
sbb
jae
xchg
inc
pop
test
or
push
mov
fcomps
mov
ds
mov
mov
ja
pop
lea
push
bound
mov
ds
dec
mov
aam
lea
xchg
pop
hlt
shll
enter
mov
inc
jne
mov
iret
lods
fs
dec
fxch
xor
mov
test
push
and
outsl
sarl
mov
add
pop
xor
mov
test
jecxz
sub
and
cld
cmpsl
push
insl
adc
cli
mov
xchg
shll
and
mov
and
aad
shrl
int3
repnz
mull
test
xor
push
xchg
iret
xor
lcall
scas
aas
jecxz
cli
push
stos
pop
jle
pop
bound
pop
js
xchg
out
dec
push
mov
add
sarb
push
jno
pop
cmpsl
dec
sarl
ss
lea
rcr
js
ds
dec
test
add
mov
test
dec
sub
xlat
fcoml
or
test
int3
add
add
popl
repnz
or
rcrb
mov
insb
icebp
hlt
sub
jb
jge
std
or
inc
fdivs
fwait
mov
cmp
inc
inc
xor
dec
in
sar
icebp
fnstenv
push
int
push
in
xor
movsb
rclb
icebp
inc
movsl
es
scas
in
loop
and
adc
mov
fisttpl
add
dec
imul
add
xor
sbb
inc
nop
inc
inc
imul
xchg
adc
pop
mov
push
hlt
js
add
push
leave
repz
lahf
hlt
cmpl
mov
bound
push
mov
sbbb
sub
rcrb
loopne
bound
lods
fwait
sub
addr16
dec
jae
aam
and
sbb
jne
jg
sub
mov
addb
in
out
xchg
aaa
ret
and
inc
or
jbe
sub
jmp
scas
test
sub
or
mov
push
jp
xchg
fstpt
nop
data16
pop
or
dec
ljmp
cmp
and
mov
lret
push
dec
decl
dec
inc
icebp
mov
sbb
lahf
test
test
inc
ret
dec
int
fdiv
testl
or
pop
aas
std
movl
or
sub
jae
lcall
and
dec
cmc
mov
iret
call
jo
es
repz
mov
cltd
xchg
lahf
test
decl
movsb
ja
adc
stos
mov
aaa
andl
sbb
sbb
pop
hlt
mov
adc
jo
xchg
mov
mov
sub
cmp
xchg
arpl
adc
xor
xchg
and
xchg
xor
pop
sub
aas
cmp
rolb
dec
lock
iret
outsb
mov
fisttpl
push
aam
push
push
jno
cmpsb
mov
pop
sbb
fs
test
and
outsb
jb
xchg
addb
pusha
inc
jecxz
les
adc
cmp
or
arpl
loope
les
jbe,pn
loope
addr16
xorb
or
mov
inc
ja
out
lcall
faddl
sbbl
mov
cmp
ret
enter
popf
fs
or
fnsave
pushf
data16
cmc
or
fsub
div
cmp
mov
call
aaa
sbb
push
movsl
push
xchg
ja
push
enter
dec
xor
inc
cmpsb
imul
sbb
mov
call
aad
ds
clc
scas
xor
add
cmpsl
insl
pop
movsl
nop
sti
dec
lea
lds
jecxz
fldcw
xor
sbb
cmp
mov
add
and
jle
jb
je
xlat
and
test
jg
or
stos
jnp
aam
sub
das
in
sub
sbb
mov
or
loopne
loope,pt
daa
mov
das
nop
cwtl
or
adc
fldenv
lea
xchg
ja
dec
dec
outsb
imul
mov
xor
fs
stos
sbb
push
shlb
xchg
dec
xor
dec
shr
sbbb
push
push
inc
cmp
in
fisttpl
dec
or
loop
mov
or
stos
xor
inc
rol
test
and
inc
das
adc
inc
xchg
adc
mov
sub
insb
mov
idivb
in
mov
test
pop
push
nop
ret
mov
lahf
push
es
fdivrl
sbbl
push
cmp
pop
fnstcw
out
lahf
mov
sub
in
push
lods
scas
sarl
fnstcw
mov
pop
mov
xor
adc
movsb
jnp
xor
xor
jl
movsl
inc
cmp
mov
fisttpll
repnz
cmp
icebp
stc
les
mov
test
movsl
mov
pop
ja
cmp
outsb
inc
push
xor
mov
xor
sarb
mov
lret
mov
daa
dec
xchg
rolb
pop
mov
inc
xchg
test
and
jne
mov
mov
out
imul
int3
mov
std
test
int
sbb
enter
pop
pop
xchg
mov
jns
dec
shll
mov
test
je
in
jae
in
add
cmp
repz
push
fs
arpl
bound
mov
dec
lret
popf
jmp
mov
push
push
push
lods
ret
cmp
push
sbb
movsb
subl
jnp
lods
outsb
mov
mov
icebp
dec
sahf
xor
das
jnp
jb
sbb
cmpsb
adc
incb
iret
inc
jmp
lods
addb
insb
or
nop
lahf
push
lds
test
aam
aam
andl
xor
cmp
gs
xor
mov
pop
loope
popf
js
loopne
loope
fnstenv
or
xor
and
maxps
push
jp
insl
clc
xchg
mov
jno
rcr
inc
stos
adc
aad
push
sub
scas
sbb
scas
rcr
sub
fnstcw
aas
pushf
fisubrs
test
xchg
fcmove
mov
lret
jno
hlt
sahf
jae
daa
sti
xlat
dec
dec
dec
cmp
out
add
mov
fiaddl
dec
mov
mov
cwtl
pop
aad
sub
and
insl
dec
stos
fneni(8087
out
dec
pop
adc
adc
sub
sub
repz
add
mov
stc
icebp
add
mov
add
adc
sbb
pop
or
sub
daa
pop
into
or
movsl
mov
imul
mov
test
pop
lods
dec
out
sbb
scas
stos
push
xchg
jbe
jmp
add
jne
adc
hlt
dec
xchg
cmpsb
xchg
incb
pop
sub
aad
icebp
idivl
stc
ja
and
xor
jae
mov
mov
int
and
stos
loop
test
sub
inc
cltd
sub
jns
inc
inc
cmpsb
lds
iret
mov
fisubs
jns
nop
mov
cmpsb
xchg
repz
jge
dec
test
inc
cmp
js
inc
mov
ret
cmpsl
mov
and
in
mov
push
loope
push
add
das
stos
xchg
arpl
xlat
jno
scas
sbb
pop
in
mov
popf
cmp
in
out
out
clc
icebp
sub
out
pusha
sahf
xchg
mov
fnsave
adc
xchg
ds
sub
mov
js
mov
ret
pop
out
fcom
and
and
mov
inc
sbb
subl
pop
pop
xor
mov
fistpll
xchg
pop
ret
incl
std
xor
xchg
lock
les
add
movsb
rclb
cmp
stos
sarl
scas
dec
or
icebp
sbb
add
adc
push
nop
aas
xor
std
int
ret
notl
mov
ja
and
or
movsl
int3
dec
enter
rcrb
repnz
push
pop
loope
rcrl
jecxz
nop
ja
lock
mov
jecxz
push
dec
scas
cwtl
les
jo
loop
jg
stc
pop
out
icebp
add
mov
xor
xchg
dec
xor
sbb
sub
jne
insb
pop
into
dec
repz
sub
sbb
cltd
push
js
sbb
adc
xchg
inc
andb
cltd
dec
push
test
test
insb
insl
fcomps
call
mov
xor
daa
shlb
lret
in
dec
xlat
testl
data16
call
adc
push
iret
fwait
bound
inc
cmpsl
xor
jnp
int
call
mov
testb
int
adc
paddsw
xor
data16
test
xchg
nop
xchg
mov
in
std
cli
mov
xor
idivl
push
jg
mov
imul
lret
dec
stos
adcb
mov
decb
mov
mov
lds
mov
push
in
xchg
stc
outsb
mov
loopne
popa
mov
mov
adc
push
and
fiaddl
rcrb
pop
das
cltd
in
int3
push
subl
cmp
pop
stos
jae
jp
sub
sub
ret
iret
or
gs
mov
push
pop
mov
inc
jecxz
addr16
in
pop
ds
jle
sub
shr
push
jmp
and
ret
scas
and
inc
es
rclb
popf
add
out
or
adcl
inc
inc
add
popl
or
enter
fwait
mov
mov
stos
loope
and
cs
xchg
imul
ret
lods
bswap
mov
stc
inc
loope
push
pop
adc
sbb
cmc
aad
xchg
pop
mov
pop
pop
lret
mov
orl
shrl
mov
pop
addl
mov
inc
xchg
jno
xchg
ljmp
jl
jbe
aam
scas
fcoml
imul
imul
and
adc
mov
cltd
push
in
mull
mov
fstp
test
leave
push
sub
push
and
sbb
cmp
mov
sbb
idivl
scas
pop
pop
xlat
pop
ds
mov
add
and
lret
fildll
mov
or
in
aad
hlt
mov
lret
inc
pop
repz
sub
jbe
ljmp
cmp
stos
aam
lret
lcall
and
xchg
sub
sbbb
stos
fincstp
adcl
cli
imul
xchg
call
lea
fwait
push
inc
inc
add
jb
jo
pop
pop
fdivl
cmpsb
cmp
in
xchg
dec
dec
ret
jecxz
xor
xchg
cmp
lahf
pop
leave
pop
push
push
pop
insb
add
cmovns
popl
adc
mov
push
faddp
pop
out
iret
cmp
fiadds
push
stos
aas
scas
cmp
dec
pop
add
and
pushf
movsl
push
push
push
hlt
fnstenv
sbb
call
push
lcall
pushf
sbb
in
les
fildl
or
pop
sub
iret
lret
adc
inc
loop
aaa
addr16
loopne
jae
aam
pop
nop
mov
imul
mov
mov
push
xor
dec
fstpt
adc
and
xchg
mov
and
push
clc
aam
xchg
mov
dec
add
fcompl
sbb
lods
pop
or
pop
pop
cmpsl
loop
movsl
icebp
loopne
cmp
dec
shrb
dec
jno
or
mov
push
in
mov
fwait
push
sbb
mov
and
pop
xchg
mov
jg
lcall
adc
jmp
rorb
jge
lret
adc
icebp
clc
xchg
sahf
pop
xchg
idivb
sbb
push
push
loopne
mov
dec
sub
shlb
cs
mov
es
inc
add
rorl
inc
insb
and
xor
aaa
push
shlb
inc
mov
cmpsb
xchg
pop
dec
negb
push
dec
hlt
adcl
jnp
xchg
and
insl
in
mov
imul
jnp
gs
stos
movsl
invd
in
dec
cmp
jecxz
or
fwait
pushf
andb
and
popf
inc
mov
mov
push
lods
mov
inc
mov
sbb
dec
sub
inc
data16
loopne
inc
jl
and
pop
lret
in
es
jns
inc
sbb
lods
aad
xor
mov
aam
push
push
jmp
sub
add
or
cltd
pop
enter
les
shrb
test
mov
arpl
mov
iret
jae
mov
cmp
mov
int3
nop
addr16
jo
scas
xchg
out
sbb
imul
imull
in
lret
cs
iret
mov
cltd
mov
orb
xchg
arpl
popa
out
push
mov
into
andl
ficomps
aam
aam
test
jge
sarl
push
and
mov
pop
out
add
inc
jne
jg
push
fs
or
mov
dec
sub
push
dec
outsl
lret
ds
out
fcoml
std
push
mov
or
push
andl
jns
icebp
sub
xor
movsb
outsl
cmp
outsl
add
xor
aaa
or
sahf
aaa
jge
sahf
test
cs
loope
mov
leave
mov
fistl
jne
add
dec
xor
cmp
inc
adc
jbe
dec
enter
xlat
lds
in
and
mov
and
iret
stos
add
sub
out
clc
daa
mov
push
pop
push
stos
pop
lea
jbe,pt
xor
lea
push
movsb
mov
push
mov
aaa
and
aaa
xchg
sub
or
dec
rcrb
sbb
lcall
push
dec
cmp
int
mov
adc
movsb
xchg
push
insl
push
pop
rcrb
fs
int3
cld
jmp
xor
imul
gs
xchg
jo
jbe
fdivp
mov
shlb
adc
mov
push
sbbb
sub
xchg
cli
out
jb
mov
pop
xorb
mov
mov
out
ds
mov
mov
fcmove
aad
shlb
lahf
dec
fsub
pusha
xor
push
bound
jmp
cs
add
decl
out
stc
in
push
or
cmpsl
icebp
mov
dec
insb
fxch
mov
insl
stc
in
int3
loop
mov
ficoml
xor
pop
stc
cmc
or
pusha
cmpsl
loop
jbe
and
push
iret
jne
loopne
data16
xor
in
push
les
addl
sbb
jo
sti
scas
jbe
inc
dec
scas
scas
mov
xor
push
cmc
jp
cmp
testl
fucomi
mov
jmp
imul
push
test
loopne
scas
movsl
outsl
dec
jmp
mov
jne
sub
je
fadd
pop
pop
out
pop
sub
adc
push
mov
mov
cwtl
push
jno
jns
cmp
int3
gs
rorl
int
push
adc
pop
arpl
imul
sbb
fsubr
adc
aaa
inc
pop
fisttpll
rol
in
call
mov
jno
dec
das
das
ds
lods
mov
scas
ss
jecxz
lea
ds
das
mov
xchg
lods
jae
sbb
movsl
hlt
pop
pop
xchg
jmp
mov
cli
jbe
cmp
or
push
es
cmp
fisubrl
in
adc
dec
mov
out
jo
mov
lea
pop
jge
push
or
push
andl
push
lea
test
clc
fmul
add
leave
xor
mov
and
jecxz
in
rcl
or
sbb
mov
iret
lods
popf
jp
sbb
mov
stc
xor
xchg
popa
add
dec
pop
mov
xor
mov
mov
cmpsl
push
cld
jle
mov
fcmovu
mov
mov
pop
pop
lret
shlb
sbb
push
sbb
dec
test
or
xor
lret
filds
sahf
sub
jmp
sbb
mov
mov
push
mov
inc
pop
mov
outsb
jp
jle
stos
in
and
popa
mov
and
fisubrl
scas
addr16
lret
or
adc
cwtl
js
lret
loope
int
jne
push
add
mov
inc
scas
mov
ret
push
mov
cltd
xchg
sub
mov
mov
jns
cwtl
dec
cmp
mov
cmpl
jg
lods
stos
pop
out
sub
mov
mov
dec
pop
dec
push
add
pop
pop
mov
pushf
aas
dec
push
leave
mov
cmpsb
ret
or
and
repnz
scas
inc
mov
stc
inc
and
xor
insb
sub
rorl
push
loop
mov
adc
insl
stos
mov
andl
icebp
inc
stos
rcll
dec
pop
aas
popa
cmp
pop
add
dec
cli
jb
and
cmp
ja
lcall
pop
adc
mov
into
pop
inc
sarl
bound
sbb
mov
inc
and
stos
addr16
pop
data16
ret
inc
pop
mov
rcrb
mov
mov
sub
dec
cwtl
rolb
sbb
roll
dec
inc
mov
gs
js
mov
inc
jmp
test
movsl
aad
jp
lods
inc
add
or
insb
stos
adc
xchg
pop
sub
aas
jae
clc
adc
in
ja
mov
pop
jbe
mov
mov
cli
xchg
xor
mov
or
jle,pn
inc
ret
push
mov
or
jbe
stos
lea
pop
lret
xor
inc
aas
cmpsb
fldlg2
nop
push
mov
popl
mov
dec
enter
push
mov
mov
dec
fistpl
sub
push
dec
xchg
dec
sti
sub
sub
inc
adc
pushf
mov
pop
push
sahf
xor
in
mov
sbb
mov
push
inc
lods
mov
das
stos
lods
lods
out
pop
lds
pop
sub
test
sbb
outsb
andb
scas
add
adc
imul
enter
and
mov
mov
jno
les
loope
icebp
sbb
int
xchg
jmp
cmpsl
scas
jne
add
mov
pop
dec
mov
sub
mov
push
imul
movsl
adc
stc
xchg
or
push
stc
icebp
sub
int3
int3
pushf
push
lcall
fidivs
and
mov
out
in
xchg
and
mov
dec
inc
jnp
dec
mov
imul
data16
xlat
inc
push
cmpsl
repnz
lea
in
hlt
es
dec
push
inc
mov
loopne
call
mov
out
loop
push
xor
and
cmpsb
lret
inc
adc
lds
int3
xchg
jns
cmp
mov
repnz
ss
push
sub
jl
test
mov
add
xor
fcompl
std
cmc
jno
rcrl
sbb
xchg
mov
cmp
int3
push
out
adc
faddp
pop
mov
inc
inc
fwait
push
mov
aam
fisubl
sub
mov
lods
adc
mov
movsb
add
sbb
jmp
inc
shl
pop
mov
pop
inc
ja
xchg
addl
pop
cwtl
xchg
adc
inc
add
cltd
shl
xor
inc
push
push
or
cmpsb
in
arpl
add
imul
push
mov
leave
inc
and
shr
mul
cltd
sub
and
jg
test
mov
popl
cmp
and
push
mov
fwait
aad
lcall
cmp
adc
push
imul
pop
rclb
insl
mov
dec
movsb
in
repz
les
lock
sub
movsb
mov
in
xchg
addr16
sub
out
xor
jb
outsb
adc
test
jg
addr16
jne
sub
and
cmp
fldenv
int
push
icebp
jg
push
jmp
fimull
repz
das
jbe
test
addr16
or
fsts
inc
insl
ja
push
add
add
and
popa
and
or
inc
jne
cmpb
mov
testl
mov
into
in
mov
stos
and
addb
jp
rclb
sbb
clc
inc
mov
sub
iret
nop
push
lock
addl
add
jae
pushf
push
jl
int3
pop
sub
jmp
pop
xor
test
push
repz
int3
xchg
jno
fnsave
leave
mov
fcmovnb
jecxz
stos
icebp
or
adc
adc
mov
push
stos
or
out
xchg
jno
lret
sub
push
jae
or
push
dec
js
pop
cmpsb
push
and
or
loop
fwait
out
mov
arpl
stos
adc
mov
aas
xchg
adc
pop
add
mov
cmp
outsl
data16
sti
jno
sub
xchg
std
call
jns
dec
aaa
cld
neg
rorl
lds
and
adc
sti
out
mov
dec
ja
ret
mov
mov
divb
subl
mov
fwait
adc
pop
lret
mov
mov
adc
push
je
enter
es
lods
pop
or
fnstsw
mov
sub
add
mov
lods
mov
jmp
xchg
pop
pop
cld
xor
xor
orl
imul
mov
xor
sbb
xor
push
xchg
cmp
cmp
sub
adc
rcrl
fcompl
and
loope
mov
mov
pmaxsw
sub
sbb
jge
jmp
popf
mov
sbb
rcll
cmp
repnz
mov
ds
cltd
mov
mov
sbb
fistps
dec
jnp
push
in
push
ds
push
mov
enter
adc
and
mov
push
jo
cld
fnstenv
push
lcall
xchg
aam
mov
sub
cmp
cmc
pushf
mov
sti
cmp
push
cltd
mov
or
sub
push
lahf
pop
lcall
inc
pushf
push
sub
sbb
sub
aas
cs
jmp
shll
mov
xchg
sub
mov
lahf
inc
mov
out
push
mov
sub
xor
ljmp
inc
notl
insb
lahf
xchg
in
and
jmp
jno
sahf
sub
xchg
lods
xor
xchg
imull
pop
push
mov
cs
add
fs
icebp
popa
cmp
mov
mov
out
inc
fnsave
call
rol
ffreep
mov
fs
push
mov
arpl
dec
jecxz
stc
mov
fisubl
jns
sbb
ds
call
jg
mull
into
ret
aad
int3
mov
test
sarl
daa
sbb
movsb
lds
rclb
or
ret
mov
bound
addb
xchg
inc
lret
jae
push
divl
mov
push
xor
inc
inc
cli
cltd
popa
popf
inc
mov
sbb
jae
imulb
mov
out
pop
ret
arpl
mov
pop
popf
add
jb
lcall
jns
in
ds
les
icebp
jae
cmp
arpl
jnp
lret
sbb
movsb
int
nop
xchg
mov
sub
add
out
jae
mov
xchg
fidivrs
hlt
ret
dec
mov
fcoms
mov
push
cld
sub
pop
mov
nop
loopne
aad
cmp
dec
outsb
mov
jp
cmp
and
aam
adc
inc
pop
rorb
repnz
pop
cwtl
and
in
pop
push
mov
jo
jne
or
dec
xchg
das
scas
xchg
shll
adc
lret
push
out
jmp
push
das
dec
sub
pop
repz
out
lret
mov
js
arpl
push
jno
mov
mov
ficoms
adc
test
js
lcall
rorl
add
dec
mov
xor
shll
or
popa
mov
inc
and
aaa
cmp
pushf
push
rorb
sub
adc
add
inc
dec
inc
enter
shlb
mov
jmp
out
mov
in
fildl
xchg
and
mov
push
push
sbb
lcall
jl
push
push
into
or
cli
inc
fprem1
sub
xchg
jns
push
outsl
mov
enter
add
fmuls
je
mov
lock
push
sbb
sbb
cmp
loop
sbb
orb
xchg
dec
ljmp
mov
mov
in
int
push
sbb
leave
mov
adc
cmp
xchg
xor
fsubrs
gs
mov
mov
mov
cli
pop
outsb
and
js
push
sub
xchg
mov
pop
fdivl
xchg
jo
movb
jp
push
pop
cmp
mov
xor
pop
pop
insb
fists
scas
andl
add
pop
out
jnp
fsubl
test
out
arpl
pcmpgtw
mov
or
jmp
xor
rclb
mov
ja
mov
cmp
mov
sbb
push
cltd
sub
test
xchg
and
out
jns
jecxz
js
ret
dec
punpckldq
inc
push
hlt
lret
stc
dec
mov
movl
mov
dec
mov
cmp
add
movsb
push
push
mov
loopne
or
mov
mov
test
mov
call
xchg
dec
scas
push
mov
add
inc
dec
lods
jo
gs
in
or
mov
add
shl
mov
cmp
adc
push
leave
or
je
outsb
mov
cltd
lds
sub
sar
xlat
sub
imul
push
cmp
negb
fdivl
push
test
arpl
fwait
insb
loop
shlb
inc
lock
sub
in
xor
dec
adc
xchg
xor
jp
or
pop
outsb
in
loope
dec
lahf
mov
pushf
dec
cs
sub
push
pop
dec
bound
jmp
xlat
fstpt
fwait
stos
mov
jnp
ss
add
push
pop
fsubr
push
sti
mov
xchg
xchg
pusha
pop
enter
imul
jge
push
add
outsl
jecxz
test
call
outsl
push
pushf
and
mov
push
xor
pop
push
adc
mov
and
punpckldq
mov
inc
jp
inc
dec
cmp
in
gs
jno
inc
jo
inc
faddp
pop
loop
pop
insl
popf
xchg
sub
cs
cmp
out
sbb
push
pop
cwtl
bound
jg
mov
pmaddwd
lahf
jg
cmpsl
dec
outsb
mov
xlat
push
outsb
outsb
cmovs
js
pop
sbb
or
add
or
cld
jb
aam
pop
test
xchg
divb
jae
jb
mov
inc
xchg
sti
mov
cld
std
popa
and
pop
gs
clc
push
pop
addr16
xor
stos
xchg
fs
repz
and
adc
mov
mov
inc
mov
inc
repz
outsb
jl
loope
jg
mov
into
pushf
or
xchg
push
sbb
inc
and
adc
or
sahf
fstps
pop
xor
jmp
cltd
dec
and
es
xchg
pop
dec
sahf
push
xor
mov
lret
pop
xor
js
xchg
pop
mov
pop
and
movsl
test
fbstp
mov
and
sbb
fbld
dec
cmp
call
ret
push
mov
mov
enter
jp
inc
and
enter
ljmp
push
xchg
rcrb
outsb
pop
pusha
add
loop
lds
sub
cmp
xchg
jnp
xchg
testb
and
clc
scas
shl
cld
jge
pushf
sbb
fildl
fiadds
sbb
pop
xchg
fs
repz
inc
sbb
push
inc
sbb
stos
mov
das
ja
popa
xor
idivl
jl
movsb
hlt
daa
inc
inc
xor
dec
iret
arpl
paddw
negl
cmp
es
cmp
mov
dec
or
hlt
nop
lret
push
jmp
into
pop
jb
adc
imul
rorb
add
shll
sar
loop
mov
cmp
jbe
push
push
xchg
inc
outsb
adc
in
or
movsb
sub
pop
test
mov
mov
mov
pop
fidivrs
rcrl
int3
sbb
push
sbb
xor
pop
ljmp
decl
rcr
call
sub
fidivs
icebp
dec
or
jo
mov
dec
arpl
xchg
push
inc
pop
rorb
es
mov
pop
pop
flds
push
xchg
ja
lcall
mov
mov
mov
aam
xor
in
sub
call
cmp
scas
or
dec
arpl
mov
cli
roll
sbb
std
pop
sbb
xor
daa
xlat
sub
je
cmp
js
add
sbbl
inc
ret
movsb
icebp
hlt
test
dec
mov
insl
fidivs
loop
dec
fadds
sahf
jg
inc
ljmp
push
aad
pop
fstp
and
xchg
inc
ficoml
ds
scas
out
leave
sbb
jno
negb
mov
mov
sarl
les
lcall
inc
ljmp
rorb
insl
dec
pop
stos
mov
in
ds
jo
and
int
jno
fildll
inc
movsb
pop
je
mov
fwait
push
in
enter
enter
jne
and
push
pop
scas
shlb
adc
nop
movsb
jle
inc
mov
out
jns
adc
into
jnp
sub
add
adc
mov
cmc
inc
inc
pop
xor
cmpsl
insl
or
or
loope
adc
enter
sbb
out
sub
mov
inc
or
sub
rclb
dec
call
or
cmp
inc
xchg
pusha
sub
mov
cmp
inc
inc
insb
lret
je
lahf
cld
adc
clc
push
cmpsb
sbb
xchg
dec
xchg
sub
jle
rcrb
dec
sub
mov
ljmp
or
sarl
call
or
sbb
ds
add
les
stc
ja
in
push
xchg
rol
xor
popl
inc
mov
xchg
loop
jmp
lret
scas
clc
mov
pop
push
cwtl
inc
scas
ret
push
fnstsw
sub
add
test
push
out
mov
xor
in
lcall
and
jmp
mov
pop
or
inc
mov
add
mov
movsl
daa
push
xchg
ret
mov
or
pop
and
fsubrs
sbb
sbb
outsl
or
leave
adc
add
xchg
rorl
adc
ljmp
insl
and
pop
enter
add
pop
jne
mov
bound
das
icebp
xchg
enter
inc
sbb
mov
bound
dec
cld
xlat
adcb
xor
inc
adc
sub
pushf
push
ss
bnd
and
xchg
mov
push
stc
mov
mov
cmp
sub
xchg
test
jle
pushf
shl
ja
sub
cmpb
insl
in
dec
test
lods
pop
mov
cltd
or
loopne
fidivrl
or
xchg
mov
push
cmp
je
jmp
inc
pop
sbb
jmp
out
bound
push
jmp
sarl
mov
and
mov
lock
jno
int3
jle
jle
jne
aas
insl
insl
push
int3
sub
ds
push
xor
lcall
xor
in
xchg
jp
jbe
adc
push
cmp
push
sub
mov
clc
xchg
fsubrs
pop
ret
xchg
ja
out
adc
add
shrl
sub
xchg
cmpsb
mov
scas
inc
repnz
enter
mov
cmpsl
fdiv
dec
sbb
es
push
sbb
add
jge
inc
xstore-rng
cmpsl
lds
dec
lret
mov
sbb
roll
shlb
out
pop
iret
loop
inc
fsubrs
cmp
fwait
ljmp
fstpt
jp
xchg
test
stc
call
imull
sbb
movsb
jne
jbe
dec
lahf
xorl
jne
rorb
dec
xchg
dec
mov
les
mov
add
jmp
sahf
mov
in
xchg
aad
popf
stos
repz
repz
add
imul
or
pop
ja
ja
sbb
leave
mov
jns
mov
lods
dec
push
pop
loope
inc
lcall
and
stos
sarl
cld
aas
sbb
push
push
mov
in
in
push
clc
or
add
sbb
xlat
jle
sub
jno
mov
lods
lods
out
dec
andb
test
shl
mov
stos
and
fs
push
sub
cmc
adc
xlat
in
mov
mov
fldl
dec
push
dec
cs
dec
push
fdivrl
jl
lds
arpl
inc
mov
xor
popa
push
inc
jne
mov
cmp
into
cltd
cmp
sti
add
and
arpl
adc
icebp
test
in
sbb
add
inc
cmp
cmpsb
std
scas
or
push
push
js
fisubrs
dec
fistpl
ret
jl
jne
jne
into
xor
dec
jns
and
xchg
jno
mov
scas
and
fld
test
popf
push
test
push
les
cwtl
jns
cmp
or
mov
inc
or
insl
shlb
outsb
ret
jbe
or
xor
jae
push
sarl
pop
outsl
add
inc
cmpsl
push
idivb
rorb
add
cmp
aas
pop
adc
sarl
xchg
hlt
fmull
jge
mov
mov
pop
in
xor
test
push
test
xor
and
pop
js
neg
jns
dec
mov
dec
imul
adc
inc
addb
jmp
dec
cmpsb
xorb
ror
out
cltd
sub
adc
sbb
js
fldl2t
or
loope
stos
mov
mov
dec
pop
push
inc
sti
insl
jb
aad
jns
int3
inc
cmp
test
or
leave
negb
outsb
sbb
out
hlt
mov
pop
not
xor
sbbb
mov
rol
lods
std
aam
cltd
fstpt
je
sbb
mov
or
mov
cltd
test
in
lret
pop
mov
sbb
js
popf
adc
dec
lret
cld
addl
in
ljmp
sbbl
cld
addl
sbb
sub
stos
fisttpl
cmp
loop
scas
add
lock
decb
stc
xchg
aad
push
add
cwtl
add
xor
scas
lock
addr16
dec
pop
out
aad
ljmp
sub
stc
sbb
and
sub
ret
jmp
in
mov
mov
bound
test
mov
imul
lds
mov
xchg
cs
lds
jp
or
push
in
and
cvtdq2ps
lcall
add
pop
inc
pop
shrl
negb
lret
cwtl
xchg
mov
pop
and
xchg
mov
scas
and
lcall
mov
ds
dec
sbb
or
sbb
cmpsl
sub
sub
mov
push
ret
cmp
fwait
xchg
aad
push
dec
add
mov
and
xor
mov
sub
enter
dec
pop
insb
negl
add
or
mov
aad
jnp
push
out
leave
pop
das
call
insb
add
outsb
fisubrl
call
jns
xchg
popf
and
cli
pop
testl
rclb
jg
cmp
sub
sub
movsl
cwtl
repnz
and
decb
stos
xor
pop
scas
test
test
arpl
xor
rol
sti
dec
mov
movsl
pushf
ds
dec
pop
mov
subb
aas
or
xor
or
and
mov
mov
call
lock
inc
cmp
ds
push
lds
popf
sub
outsl
cli
cmp
lea
mul
sub
adc
testb
mov
test
sbb
push
stos
lods
jae
sbb
pop
sub
mov
mov
in
or
insl
call
push
mov
fistps
add
inc
xchg
imul
sbb
jbe
lret
std
mov
push
loope
jno
lods
test
rorb
hlt
fmuls
jp
insb
or
orb
sbb
pop
roll
andl
dec
mov
push
inc
orl
push
xchg
das
cmpsb
sub
push
jne
or
sub
lret
push
imul
push
push
xchg
fstl
lock
or
mov
in
int
std
js
cwtl
arpl
fsubrp
and
cli
mov
cmp
jl
add
hlt
jnp
rcr
jl,pn
xor
sbb
sti
cmp
mov
and
xchg
clc
xchg
mov
outsb
or
lret
sahf
push
add
lods
sbb
inc
lods
movsl
pop
xor
sub
mov
call
sbbl
pop
sub
jl
push
pop
ds
dec
int3
xor
add
dec
push
enter
push
dec
jecxz
ffree
ja
or
call
push
push
test
xor
pop
adc
or
movsl
push
icebp
adc
in
cs
loope
inc
lock
repnz
push
rorb
mov
stc
test
orl
xchg
fcompl
inc
ror
aas
je
popa
jmp
jl
jmp
lods
push
mov
rol
aas
decl
mov
jns
scas
push
fstpt
cmpsb
adc
and
stos
ret
xchg
or
fwait
push
push
dec
in
add
add
fcmovne
sbb
pushl
dec
dec
jnp
dec
xor
lods
mov
test
jge
mov
sbb
mov
dec
js
sbb
cmpsb
dec
xchg
fldt
mov
xchg
rcl
movsb
push
sti
nop
jmp
outsb
icebp
dec
cmp
call
push
not
lds
cmpl
test
mulb
jnp
out
iret
cmovp
inc
pop
hlt
cmc
loop
clc
daa
cmp
jge
lret
mov
jno
jns
test
sub
imul
aad
ret
out
mov
lcall
push
dec
or
inc
lahf
cs
in
mov
pop
add
imul
call
jb,pt
dec
test
xchg
lret
mov
jae
aaa
loope
cld
mov
mov
test
cld
and
ja
ss
scas
imul
movsb
or
jb
fistps
pop
sub
and
push
pop
push
ret
addr16
xlat
rorb
mov
mov
lcall
stos
cmp
rclb
std
test
jne
mov
or
mov
int3
cmp
out
mov
mov
xchg
xor
xchg
loop
inc
fmull
out
test
ljmp
mov
out
mov
cmp
cmpsb
popf
outsl
cmp
jne
rep
aas
dec
gs
testl
push
fwait
sbb
daa
rcrb
jl
minps
popa
xor
push
shlb
mov
inc
dec
cmp
jb
iret
jmp
xor
adc
inc
and
cmp
xor
mov
cmp
cwtl
ljmp
pop
in
loope
push
add
scas
mov
push
fnstenv
push
cs
pushf
enter
inc
push
cmp
xlat
add
jbe
cmp
mov
enter
dec
inc
mov
scas
sbb
nop
inc
test
test
sbb
lods
sar
xor
xchg
push
fwait
add
in
pop
add
ror
stos
dec
pusha
sbb
test
andb
dec
inc
mov
lds
movsb
and
mov
pushf
inc
sahf
icebp
dec
in
jo
cld
sub
mull
sbbb
jmp
pop
add
fisttps
stc
gs
and
cmpb
popf
andb
mulb
mov
fwait
loopne
icebp
xchg
sub
push
jge
stos
xchg
cmp
idivb
jnp
lcall
test
or
xchg
out
push
xor
ret
icebp
mov
jge
inc
movsb
adc
popf
nop
dec
xchg
cmp
xor
mov
push
mov
out
aaa
ds
push
ds
fdivrp
sub
aaa
divb
wbinvd
push
cmp
add
mov
mov
stos
test
jno
outsb
mov
loop
xchg
in
iret
cmp
stos
sub
cwtl
jl
popf
push
fidivrl
dec
das
adc
loopne
ljmp
push
push
dec
xor
inc
stos
hlt
les
in
push
jno
jecxz
gs
cmp
jbe
mov
add
add
and
out
and
test
sbb
les
sub
mov
lods
mov
int
push
jo
faddl
push
jae
push
adc
rolb
cmp
sti
mov
add
push
inc
mov
mov
mov
mov
push
sbb
xchg
cmp
lret
pusha
push
ja
push
out
js
lea
cs
shr
inc
pop
push
mov
fcompl
dec
hlt
rcrb
daa
pop
stos
mov
int3
rcrb
cmp
cmp
dec
rcrb
jbe
ffree
test
mov
arpl
les
fimuls
sbb
push
pop
xchg
mov
shll
or
rolb
icebp
sti
add
push
push
push
jns
cwtl
mov
jno
repnz
and
inc
lahf
lds
or
js
add
in
call
test
jae
sbb
adc
enter
pop
mov
push
push
inc
xchg
sti
pop
dec
daa
pop
add
mov
jo,pn
inc
lock
std
popf
fisubrl
mov
mov
jp
mov
std
fstl
sub
inc
les
mov
cwtl
sbb
ljmp
jbe
push
mov
mov
jb
mov
mov
bound
cld
icebp
xor
test
push
mov
cltd
lods
push
cmp
pushf
int
ret
fdivrl
add
scas
roll
mov
mov
add
and
in
sub
aas
ds
imul
sub
dec
cld
aad
jp
mov
sbb
dec
jo
jecxz
and
cmpsb
xorb
jbe
mov
adc
cld
divb
pop
pusha
rolb
adcl
xchg
inc
imul
mov
hlt
sbb
mov
aam
pushf
out
mov
cmp
dec
push
lret
inc
lock
push
fstpl
xor
fstps
push
jnp
sub
in
aaa
mov
push
fimull
sbb
loop
inc
repnz
in
xchg
dec
mov
aad
dec
fadd
mov
and
movsl
bswap
lds
mov
xor
adc
sub
xor
jnp
push
cmp
mov
ret
and
rcrl
mov
sbb
insb
pop
inc
call
pop
icebp
inc
cmp
mov
loop
daa
cld
jo
idivb
mov
cmpsl
mov
push
mov
lea
data16
push
es
aad
es
mov
sub
std
scas
sbb
mov
pop
adc
jp
rolb
xchg
xchg
int3
or
icebp
loope
cltd
mov
add
lea
add
xor
sub
fistpll
arpl
insb
inc
sbb
inc
mov
lret
decb
cli
jb
cli
fwait
xor
lods
addl
sti
or
xchg
mov
aaa
sbb
in
pop
mov
sub
push
pusha
mov
cli
into
lcall
divb
enter
out
mov
clc
sarb
and
test
pusha
jle
rclb
mov
imul
sarb
lds
pushf
inc
les
dec
cmp
sbb
cmp
mov
mov
adc
shlb
int
xchg
xchg
mov
lea
mov
cmp
scas
and
insl
jns
inc
adc
add
cmp
lods
scas
mov
mov
addr16
addr16
pop
es
inc
sub
test
sub
ds
aaa
sbb
push
inc
daa
sar
push
je
sbb
scas
xchg
or
or
add
add
jne
cmpsl
clc
xlat
cld
push
and
sbb
mov
loopne
lds
fidivrs
sbb
pop
or
js
addr16
shl
mov
sbb
pop
pop
pop
xor
inc
mov
push
mov
movsl
pop
test
clc
dec
pop
lock
bound
cmpsl
cmp
imul
adc
cmpsl
add
les
cld
mov
adc
loop
cmpsb
sbb
dec
lods
xor
jmp
lcall
push
push
cmp
imul
ret
push
bound
push
push
pop
jne
sub
cmp
pop
fstpl
mov
sbb
jb
repnz
cmp
xchg
and
sbb
out
fstl
movsl
push
jle
add
xchg
lahf
repz
mov
rclb
sub
sub
sub
mov
cmp
in
rolb
jecxz
or
sar
jmp
icebp
and
xchg
pushf
mov
insl
ret
dec
pop
in
stos
mov
inc
dec
and
test
pusha
xchg
mov
pop
sbb
jle
sbb
aas
mov
push
mov
mov
mov
test
xchg
pop
data16
and
push
push
daa
sbb
mov
add
js
jmp
or
loope
mov
pop
and
insb
enter
xchg
jle
clc
cltd
movb
mov
lods
mov
inc
pop
dec
lret
sbb
push
sbb
pop
pop
int3
lahf
leave
cmc
and
int
xchg
jl
mov
addr16
popf
adc
clc
pop
mov
loope
loopne
mov
mov
testb
std
sub
cs
mov
cmc
addr16
or
nop
and
cmc
lret
outsl
pop
notb
lret
aad
stos
sub
insb
inc
in
aaa
test
ja
insl
mov
jg
in
mov
inc
or
xchg
cmp
jg
mov
xor
mov
cs
xor
fildll
popf
js
arpl
jmp
mov
mov
jmp
cs
les
adc
pop
test
and
int3
jg
push
mov
xchg
fbld
or
sbb
push
aaa
xchg
lcall
cmp
sub
fwait
inc
ja
jo
aaa
loop
lret
fdivrl
call
sarb
popf
push
outsl
loop
flds
cmc
inc
fs
jle
ret
pushf
cmpb
push
dec
movsl
or
or
fs
iret
jae
fstl
cmp
mov
or
xor
fnstenv
cmc
clc
ljmp
fsubrp
imul
dec
stos
addr16
sub
push
push
lret
out
pop
mov
rcrl
das
inc
popf
inc
out
jo
and
cld
cs
cld
imul
mov
loop
and
inc
roll
sbb
or
cmpsb
mov
stos
push
cmp
add
add
push
iret
jge
into
pusha
fld1
andb
pmaxsw
adc
mov
sub
cwtl
insl
jg
aad
ljmp
lods
lcall
outsl
mov
sbb
sarb
sti
in
mov
pop
inc
inc
mov
int3
movsl
icebp
gs
pop
in
in
imul
fists
jge
add
into
xlat
lret
insb
inc
cs
and
clc
insl
sti
in
imul
out
rclb
shr
adc
mov
les
push
sub
push
sub
stos
rorl
aaa
and
mov
sub
pushf
mov
pop
xor
push
fnstcw
push
xchg
sub
int3
xchg
data16
pushf
jb
ds
rorl
test
and
scas
sarb
cmp
mov
sbb
dec
cmpsb
js
adc
cmp
pop
sbb
arpl
add
xchg
push
xchg
lock
enter
jno
sbbb
lds
aam
lods
push
mov
push
mov
cmpsl
inc
jo
push
xchg
fiadds
lods
add
xchg
sbb
insl
repz
pop
push
andb
std
cwtl
lods
sahf
inc
xchg
cli
scas
jl
or
dec
decl
mov
in
xlat
cmp
push
push
jl
dec
xchg
xchg
lds
xchg
inc
pop
enter
xor
into
and
les
repnz
mov
int3
add
dec
aad
cmpb
loop
pop
pop
ljmp
iret
in
push
cmp
les
adc
out
negb
fidivl
xor
adc
mov
into
es
dec
shl
mov
rcl
cmp
lahf
dec
sub
pop
shrb
pop
mov
lahf
adc
sub
out
fildl
cltd
mov
dec
lcall
xchg
aas
call
cmp
nop
add
idivb
or
sub
mov
or
mov
cmpsl
data16
mov
inc
scas
xor
outsb
adc
adc
push
sbb
jns
clc
rcr
adc
enter
out
enter
in
mov
imul
jmp
lock
outsb
inc
repz
add
xorb
add
xchg
or
mov
ja
dec
leave
push
xor
fs
xchg
pushf
aad
dec
pusha
jle
xchg
mov
adc
push
push
lret
sub
inc
pop
ss
out
add
pop
jp
cmpsb
sub
les
xchg
imul
cltd
out
xchg
push
pop
mov
dec
repnz
mov
dec
mov
in
fcoml
jl
sub
mov
inc
fidivrs
and
xchg
sbb
rol
in
xchg
out
dec
in
punpckhbw
dec
ljmp
jle
xchg
mov
lret
jne
mov
aad
shrl
mov
xchg
fmuls
es
cmp
cmpsb
in
xor
sbb
pop
fdiv
out
xor
inc
mov
jg
cwtl
repz
sti
out
leave
imul
in
in
or
mov
insl
outsb
push
and
xlat
pop
repnz
sbb
dec
add
fdivs
push
imul
add
clc
pop
mov
shll
popf
jle
lret
aas
insb
inc
sbb
dec
mov
adc
xor
sarl
jnp
clc
cmp
mov
dec
movsb
popa
jne
mov
cmc
adc
cmc
je
mov
mov
aaa
movsb
ds
lds
lcall
adc
mov
mov
jae
pop
cmpsl
dec
in
popa
inc
xor
mov
xchg
mov
mov
dec
add
sbbb
xchg
mov
mov
bnd
sbb
mov
movsb
mov
dec
mov
mov
xchg
push
push
pop
mov
cmp
dec
jmp
enter
adc
cmp
loopne
dec
loope
js
aaa
nop
ret
lahf
and
shr
jge
ret
aad
aas
push
push
enter
push
lods
push
insl
getsec
add
repz
xchg
inc
xchg
pop
notl
in
in
add
icebp
push
cmp
fimuls
fwait
sub
jnp
into
mov
in
imul
aaa
or
dec
and
mov
pop
adcb
aaa
shr
jno
xor
scas
jecxz
aaa
fwait
pop
sbb
xchg
subb
push
bound
sbb
repnz
ret
adcl
leave
orb
loopne
inc
fnsave
pushf
dec
push
sub
outsb
test
leave
adc
fcoml
pop
and
in
loope
sub
dec
mov
jno
lret
mov
xor
imul
aaa
inc
and
xor
je
or
mov
fistl
adc
mov
test
push
fadd
je
jl
sbb
out
xchg
cwtl
adc
jge
dec
gs
jle
xchg
jl
inc
adc
jne
inc
adc
cmp
out
out
mov
iret
rclb
fisttpll
aas
sar
xchg
mov
xchg
xchg
cmp
iret
inc
dec
pop
or
jg
sahf
jecxz
loope
xchg
mov
cmp
lock
fnstenv
insb
jne
pop
xchg
jl
mov
xchg
sub
nop
mov
in
jbe
fnstsw
mov
and
jle
inc
cmc
aas
test
jg
in
out
in
or
dec
adc
enter
dec
lret
in
mov
add
test
adc
pushl
pop
sub
fildll
xchg
dec
mov
loope
in
push
push
mov
pop
jns
pushf
daa
les
movsl
icebp
push
scas
iret
insb
bound
mov
cli
adcl
mov
push
mov
in
mov
sbb
or
jmp
in
and
lret
ret
fnstsw
push
mov
scas
es
mov
repnz
push
inc
fstps
std
xchg
js
dec
out
in
out
and
xchg
or
in
aam
xchg
mov
leave
and
cmpsl
jg
test
nop
xchg
or
push
shrl
sbb
fmul
ret
in
xchg
rol
jecxz
and
jo
out
mov
push
mull
dec
icebp
in
mov
pop
pop
lock
les
sahf
and
sbb
daa
shl
ret
into
inc
outsb
inc
xor
adc
scas
mov
pop
inc
xorb
subl
cmp
push
cwtl
xchg
jb
cmpsb
out
arpl
push
and
dec
cmp
push
or
shlb
or
jbe
fildll
test
js
iret
das
dec
shll
es
pop
stos
lods
pop
xor
pop
out
pushf
mov
jecxz
imul
hlt
loopne
cmp
inc
stos
test
in
mov
mov
push
jge
daa
bound
adc
adc
popa
cmpsb
sub
cmp
sbb
test
sub
adc
mov
push
xchg
jno
ficomps
xor
sbb
push
xchg
xchg
fistps
loop
pop
jo
mov
push
jb
clc
mov
jg
aad
lds
scas
push
sub
popa
jecxz
pop
inc
dec
pop
cwtl
mov
es
mov
adc
shll
stc
leave
mov
pop
test
or
mov
or
mov
xor
iret
test
mov
jne
test
fisttpll
dec
jb
lea
subl
rcl
adc
lock
mov
mov
or
int
or
loope
jb
pop
xor
jno
call
mulb
insl
mov
mov
mov
cmp
pop
int3
pop
jb
notb
ret
fwait
add
push
ljmp
pop
sub
jg
movsl
adc
jnp
into
inc
insb
mov
dec
sbb
shll
repnz
bound
fdiv
dec
jne
sbb
sub
imul
fmul
sbb
es
inc
mov
jns
icebp
inc
mov
aam
adc
push
xchg
fstps
jmp
or
jecxz
call
xor
call
mov
sbb
dec
mov
arpl
xchg
daa
rorl
push
in
sbb
or
xchg
lret
mov
push
inc
add
xchg
inc
or
shl
jno
movsb
xor
mov
ss
in
fwait
xchg
sbb
pop
push
inc
push
sub
dec
add
stc
jo
mov
jl
sbb
dec
push
xchg
xchg
mov
out
and
inc
sub
push
sbb
popf
or
in
mov
das
mov
mov
ss
pop
mov
or
push
sbb
mov
out
pop
mov
xchg
ror
data16
and
test
push
dec
push
notb
dec
insb
out
ss
scas
cmp
add
xor
sub
sbb
adc
adc
fnsave
jmp
mov
int3
inc
cli
push
xchg
cld
sbb
and
rolb
pop
jmp
rclb
inc
jmp
mov
out
adc
lret
cmc
ret
stos
xor
and
clc
lcall
popf
icebp
push
lods
pop
rcrb
dec
out
jle
fnsave
mov
ret
movb
inc
orl
and
daa
sbb
jo
sbb
adc
inc
xor
and
adc
enter
mov
les
fstpt
je
sub
inc
xchg
cmc
mov
push
in
stos
js
sbbl
imul
ret
stos
lds
push
inc
mov
sarl
daa
outsb
mov
jle
push
add
je
push
jle
or
add
mov
mov
frstor
dec
inc
jl
int
mov
mov
inc
scas
iret
dec
dec
lods
cwtl
adc
mov
xchg
dec
cmpsl
mov
into
or
jae
mov
lock
pop
lods
out
or
lcall
les
ret
mov
sbbl
enter
pop
add
pop
je
sbb
movl
fidivs
out
sub
mov
add
jns
jnp
or
and
jno
in
adc
inc
hlt
leave
or
push
aam
xchg
inc
inc
or
cmp
adc
push
adc
push
jmp
in
mov
inc
insb
ja
loope
cmpsb
add
sub
pushl
mov
mov
cli
test
dec
jnp
fs
fnstsw
gs
pop
daa
fldlg2
aam
repz
test
loop
push
add
mov
stos
jnp
lret
push
es
push
loop
outsl
and
orl
mov
xchg
mov
xchg
out
pop
ret
in
arpl
sub
push
push
iret
xor
add
push
mov
mov
xchg
aas
inc
shrb
add
push
outsb
mov
jae
out
stos
fcom
sti
mov
dec
out
fidivs
jmp
sub
xchg
mov
inc
mov
cmc
lret
js
pop
dec
pop
jno
test
ljmp
jo
test
and
push
scas
enter
or
aam
rcll
add
fmul
test
xor
cmpb
jbe
pop
dec
andl
test
xchg
aad
jmp
into
xchg
pop
outsb
int
popl
or
mul
jns
inc
xor
cmp
arpl
sub
outsl
xchg
in
add
dec
sarb
out
cltd
sub
fwait
leave
hlt
jne
imul
xorl
rcrb
dec
addr16
lahf
adc
testb
lods
adc
push
xlat
inc
jns
jecxz
xor
xchg
fwait
jbe
aad
pop
xor
mov
cmp
pop
cmp
arpl
leave
imul
jo
sbb
sub
mov
mov
lock
dec
std
ret
inc
fsubs
aam
mov
dec
mov
shl
jbe
sub
pop
lods
es
ja
lods
and
js
and
add
mov
sarl
out
jmp
loop
pop
cmp
outsb
loop
adc
aaa
cmp
jno
lret
fs
sub
inc
in
sub
jmp
pop
xlat
int3
int
xchg
loope
xchg
scas
mov
jle
rcll
xor
ret
lea
pusha
xchg
mov
mov
adc
stos
sub
loope
mov
stc
push
dec
adc
add
jg
or
pop
sub
outsb
add
sub
dec
push
xor
lret
std
test
imul
xchg
aad
nop
mov
repnz
pop
add
mov
adc
and
stos
out
jle
sub
xchg
filds
xor
enter
inc
fists
stc
pop
aam
aam
sti
pop
sbb
inc
andl
sub
xor
shr
sbbb
sub
leave
sbb
adc
mov
sti
jae
mov
jecxz
add
mov
push
das
push
xor
neg
sbb
mov
repnz
mov
int3
mov
lahf
xchg
mov
sub
adc
push
loope
lcall
add
lock
cmp
lods
mov
inc
or
lret
in
push
lods
push
js
xor
and
xor
pop
std
addr16
xor
cmp
sbb
jl
push
jge
inc
in
sbb
inc
add
js
sub
fldcw
add
push
loop
test
mov
sub
sbb
fdivrs
cmp
and
inc
loopne
cmp
lcall
sbb
mov
fmull
mov
jg
lea
test
hlt
stc
and
jmp
mov
xchg
incl
pop
mov
add
ficoml
mov
iret
not
adc
xorl
pop
mov
pusha
movsl
xlat
in
push
add
dec
test
test
or
jnp
jmp
cmpsl
xor
jnp
mov
sub
lcall
adcl
jmp
push
sbb
jb
xchg
aaa
jp
lds
hlt
repz
or
push
fwait
sbb
mov
or
dec
test
xchg
push
adc
mov
outsl
lock
rclb
in
inc
lea
lds
jge
jecxz
repz
es
lods
aas
enter
xchg
cli
cmp
iret
jecxz
hlt
jnp
sarb
les
mov
in
mov
cltd
xchg
bound
dec
mov
ficompl
pop
adc
jae
cld
jg
sub
pop
push
clc
add
imul
xchg
jbe
push
pusha
lret
adc
hlt
sub
and
xchg
push
bound
jns
sub
sub
repnz
mov
call
xor
jecxz
cltd
rorl
out
loope
push
xchg
mov
jo
mov
stc
mull
cmp
sub
pop
std
stos
es
aas
aad
mov
xor
mov
call
dec
int3
pop
adc
lcall
and
sbb
aaa
cmp
sub
movsb
out
jno
sub
jmp
dec
or
xchg
jle
dec
rol
push
pop
xchg
inc
imull
imul
jns
jp
scas
adc
pop
inc
cmpsb
ljmp
xchg
cld
mov
pop
xchg
fidivrl
popf
loop
pop
adc
dec
add
faddl
cmp
add
mov
inc
fadd
sbb
push
daa
mov
repz
into
add
pop
jmp
iret
ljmp
int
fs
jbe
xchg
cmp
mov
repz
mov
xchg
mov
mov
gs
xor
std
mov
jecxz
arpl
shrl
sbb
cmp
mov
outsl
sub
jb
push
das
pop
xchg
xor
out
pop
or
xor
orl
notb
subl
add
int3
stc
cmp
push
xchg
mov
pusha
jp
aad
mov
in
out
push
daa
scas
jno
out
and
jno
cmpsl
outsb
inc
notl
je
push
mov
pop
adc
xchg
pop
xchg
mov
std
test
insl
mov
inc
stos
xlat
push
shrb
icebp
sub
mov
push
out
jecxz
aam
jbe
or
adc
imul
mov
xor
ljmp
sub
mov
stc
pop
mov
test
fsub
mov
lds
add
aam
mov
inc
dec
cmp
mov
dec
imul
shll
fldt
xchg
dec
sahf
jmp
pop
and
mov
mov
cmp
add
pop
push
and
jb
xlat
jle
push
push
dec
shrb
cmpsl
xor
xlat
xlat
mov
daa
pop
daa
cmpsb
subb
out
cs
icebp
idivl
xor
ret
popf
nop
adc
fcomps
fcomps
ds
xor
dec
jne
imul
jnp
sti
dec
in
nop
data16
xlat
adc
ja
loope
pop
and
out
js
xchg
and
call
cmp
filds
cmp
shll
push
pop
dec
loope
cmp
mov
mov
icebp
insb
mov
out
jae
test
pop
xchg
in
mov
lret
repz
push
arpl
imul
mov
or
mov
jno
pop
mov
daa
push
out
inc
addr16
pop
mov
stos
imul
nop
arpl
mov
jbe
setge
in
ret
test
out
pop
dec
mov
cmpsl
test
sbb
sti
test
test
dec
leave
js
push
fwait
jg
insl
jp
mov
jp
insl
jno
lods
sub
scas
sti
mov
filds
sub
fcmovnu
aaa
dec
pop
jae
mov
jne
mov
rol
jmp
sub
and
and
push
mov
lahf
arpl
cmp
xor
insb
pop
jl
jno
jge
test
lcall
lea
cltd
and
in
popf
add
in
mov
sub
fwait
or
dec
aam
xchg
in
in
add
mov
sub
dec
int
cmp
mov
jns
push
js
icebp
push
fstps
mov
outsl
xor
cltd
push
loopne
and
cmp
shrb
xchg
cld
or
xchg
out
sub
int
and
aad
gs
and
out
fwait
jb
stos
pop
mov
mov
xchg
loopne
in
jl
cmpsb
dec
ret
daa
shl
cmp
rorb
lods
mov
testb
rcrl
jnp
cmp
xchg
rcrw
jl
cmp
aam
insb
int3
inc
cli
dec
xchg
and
imul
shlb
adc
js
imul
loopne
xor
mov
sti
jecxz
cmp
sbb
jle
lea
inc
mov
std
les
in
jne
add
inc
push
or
push
xchg
inc
je
sub
ret
adc
jnp
dec
sarl
call
orl
jmp
adcb
roll
xchg
push
mov
in
out
shl
pop
fldenv
push
aas
ss
repz
or
rorb
dec
dec
or
icebp
leave
xchg
daa
jge
leave
sahf
jecxz
pop
out
cltd
dec
je
iret
dec
movsl
push
adc
mov
add
push
orl
cmp
maxps
mov
cmpsl
or
mov
adc
movsb
push
out
shl
jne
pop
cs
stos
rorb
adc
add
push
in
adc
fwait
fwait
push
xchg
ds
jbe
cmpsl
sbb
out
and
int3
cltd
bound
cmp
fmuls
stos
sub
pop
mov
jmp
test
fldl
xor
jl
push
sti
std
nop
xor
or
pushw
sub
outsl
xor
loop
es
lea
pushf
or
fldl
dec
mov
movsb
arpl
jnp
daa
jae
mov
ljmp
jecxz
arpl
popa
xchg
jnp
push
cmp
stc
cs
and
cmp
mov
inc
cmc
mov
stc
gs
dec
subl
std
arpl
test
icebp
aad
test
inc
insl
mov
push
ja
jo
push
inc
dec
ret
gs
push
lods
and
pop
mov
stc
es
test
push
jmp
mov
cli
mov
and
fs
pushf
nop
mov
sub
xchg
call
push
rcrl
lods
dec
cmp
pop
pop
lods
dec
sbb
outsb
xchg
lods
inc
push
ret
pushl
movsb
jp
adc
cmp
call
fists
aaa
push
add
or
test
sub
shll
ss
ret
lds
mov
jbe
inc
pusha
push
scas
shl
cltd
sbb
xlat
add
fdivrs
jo
scas
imul
ds
mov
outsl
mov
push
imul
mov
std
inc
popa
lea
xor
out
int
pop
push
fwait
dec
ds
pop
cmp
pop
nop
repnz
clc
xor
mov
xor
popa
and
push
cmp
bswap
fs
push
xorl
popl
ja
pop
dec
es
mov
mov
jo
fucomip
mov
lahf
movsb
jmp
jnp
inc
and
xchg
jg
lods
and
fmull
cmc
dec
mov
lea
out
les
jmp
jecxz
pop
xchg
xchg
ljmp
aam
push
pop
jg
sub
lahf
mov
dec
dec
jo
daa
cmc
mov
sub
sbb
or
cmp
sub
mov
movsl
mov
adc
leave
mov
and
mov
inc
shrl
in
fs
jne
push
test
shlb
out
das
outsb
push
add
sbb
mov
lods
sbb
cmp
shll
mov
add
jo
sahf
arpl
adc
fsubl
xchg
sbb
pop
in
adc
push
mov
push
into
xchg
pop
cmc
pushf
jns
loop
mov
fcoml
xor
inc
clc
stc
inc
and
push
popa
push
push
jl
loopne
add
loop
inc
dec
mov
jle
add
xor
enter
xchg
lods
fucomi
jp
xchg
jecxz
lods
and
jecxz
push
mov
mov
dec
jg
xchg
mov
dec
in
jle
outsb
bound
inc
jp
cmp
stos
out
fstl
jle
jno
sbb
rclb
stc
adcb
cmp
xchg
out
jle
jnp
mov
jns
cmp
mov
adc
stos
fmul
notb
vpaddusw
mov
test
adc
inc
push
in
loopne
lods
stc
lret
sbb
test
lock
jnp
jbe
dec
outsb
cwtl
pop
shll
jne
cwtl
js
out
sbb
xchg
inc
lds
cmpsl
cmpsl
imul
leave
and
les
punpcklbw
lods
insl
jb
push
cwtl
imull
movsb
mov
push
ljmp
shll
jge
and
jp
retw
jb
xor
sarb
xchg
in
nop
frstor
movsl
fisttpll
ljmp
hlt
mov
sbb
jge
or
inc
sub
lret
hlt
mov
mov
inc
cmp
idiv
dec
mov
pop
js
mov
push
addr16
cmp
fsubs
cmp
add
mov
lock
or
mov
cmp
cmp
push
mov
mov
lods
inc
out
xlat
jmp
sbb
mov
cmp
gs
fcomi
mov
xchg
jp
insb
jae
cmp
fidivl
insl
ljmp
jg
jns
in
fiadds
fbld
cmc
and
js
lods
dec
sub
stos
jns
xorb
add
sbb
sbb
dec
xchg
rclb
jge
out
and
push
inc
test
xchg
mov
push
out
push
cmp
mov
inc
adc
mov
fildll
ja
xorb
mov
adcl
mov
hlt
jnp
call
xlat
mov
dec
sarl
jno
lds
mov
xchg
xchg
out
test
nop
push
mov
inc
fsubl
add
test
xor
loope
or
xor
mov
ja
xor
scas
cmp
add
cmp
or
push
rolb
icebp
xor
xchg
rolb
mov
mov
gs
clc
call
pop
jbe
push
xor
push
adcb
das
and
push
jecxz
dec
int3
mov
jl
ljmp
fs
sub
sbb
cmp
pop
rcrl
inc
jo
ljmp
enter
out
rcrl
add
mov
call
lret
rclb
sti
inc
cmp
cli
fs
ja
lods
pop
pop
sub
in
push
andb
mov
push
iret
pop
fs
dec
mov
test
mov
or
xlat
xlat
or
add
les
int3
mov
in
mov
int
add
jo
dec
and
rorb
mov
imull
mov
out
xor
and
push
mov
call
inc
leave
xchg
aad
arpl
xchg
cmc
sub
int
add
xchg
mov
and
bound
jmp
dec
sub
cmp
cmp
sbb
insl
cmp
sarl
popa
add
das
les
xor
jecxz
cltd
add
ds
stos
repnz
loop
push
daa
sbb
xor
dec
sub
inc
push
je
scas
enter
dec
dec
mov
outsb
pop
and
pop
ret
sub
cmp
push
sub
fwait
sarb
test
sbb
push
lret
aam
pop
cmp
lea
adc
popf
in
adc
lea
jnp
push
mov
cs
adc
cli
xchg
repz
lret
js
sub
and
cwtl
out
push
cmp
loopne
cmpsb
push
xor
push
add
mov
mov
add
mov
jb
sub
cmpsb
jb
push
push
cwtl
and
and
sarl
inc
dec
add
je
and
sub
cwtl
movsl
out
repnz
add
inc
ds
jge
dec
mov
mov
decb
push
loope
xchg
test
mov
add
jne
mov
aaa
in
in
ds
mov
jno
sbb
lcall
xchg
outsl
xor
or
cmp
pop
adc
stos
test
daa
stc
int
fs
sbb
jl
jo
pop
sub
bound
mov
push
jo
shr
loop
sbb
or
add
xlat
xchg
add
stc
mov
xchg
mov
jne
lahf
fwait
jnp
mov
out
stos
xchg
in
test
xchg
pusha
jae
imul
mov
shll
cltd
jb
pop
ljmp
xor
fwait
push
and
inc
xchg
mov
pop
lcall
jl
test
xchg
fwait
and
and
lods
push
xchg
xor
xchg
jo
shlb
cmc
stos
cmc
jl
xchg
pop
mov
inc
jbe
adc
stos
fcmovbe
sub
test
xchg
aad
test
icebp
xor
xchg
mov
mov
into
xor
push
dec
pop
push
int3
jecxz
push
add
out
sub
xchg
jns
insl
dec
sbb
jg
jl
push
nop
and
ret
sub
cmpb
mov
and
mov
mov
push
es
xor
xor
push
lock
out
or
aas
pop
outsl
mov
sbbl
mov
xor
push
xchg
mov
sub
and
ss
popa
cmpb
je
cmpsb
pop
mov
out
mov
aas
ljmp
or
fsub
adc
mov
push
or
rcrb
cmp
cmpsl
inc
ret
push
push
int3
test
sub
xor
es
inc
repz
rcrb
xchg
adc
movl
fwait
add
cltd
jnp
mov
lcall
cmpsb
mov
repz
xchg
mov
cli
movsl
movsl
cmp
sti
jo
pop
mov
jo
enter
leave
inc
out
fnstsw
or
movsb
pop
and
fdivrs
jne
adc
add
jno
push
mov
dec
sub
out
lret
or
imul
shll
repz
sub
lret
mov
std
mov
lods
es
cli
adc
xor
into
mov
cmp
js
in
int
daa
clc
mov
movsl
mov
mov
rcll
sbb
pusha
movsl
out
test
xchg
inc
pop
test
jge
pop
cs
out
mov
add
adc
push
out
mov
push
push
mov
shll
stos
in
sub
add
adc
sbb
in
imul
or
das
mov
call
scas
mov
arpl
pop
cltd
jg
loope
int
lea
lods
sahf
dec
mov
dec
and
mov
cmp
push
mov
es
push
mov
loopne
sub
out
pop
fwait
add
je
xor
popa
fldt
dec
cmc
filds
xor
jns
enter
xor
adc
jo
testb
or
jecxz
cmpsb
inc
aaa
and
mov
scas
mov
loopne
dec
push
sbb
call
inc
or
in
xchg
jno
ja
std
or
notl
enter
xchg
pushf
stc
xor
stos
test
push
vmptrst
sbb
sbb
cmp
xor
jae
nop
ds
and
fsts
repz
mov
push
mov
call
lahf
inc
mov
adc
stc
sti
jno
jecxz
or
sti
mov
stos
fbld
sub
xor
dec
imulb
add
adc
mov
rcll
into
aaa
cltd
sbb
sub
stc
int
or
xorps
cmp
mov
mov
lods
sbb
dec
outsl
fsts
mov
arpl
mov
outsl
add
cmp
je
push
nop
jns
fistps
addr16
mov
ja
fdivl
sub
les
mov
arpl
fwait
push
jo
imul
fwait
jl
mov
xchg
push
imul
xorb
jge
faddl
or
leave
jnp
mov
mov
test
mov
dec
out
cmp
repnz
xor
jbe
mov
push
mov
pop
mov
mov
pop
nop
mov
sbb
fnsave
insb
lcall
xchg
xchg
loop
into
and
cmpl
sbb
cld
mov
sub
icebp
pop
aam
mov
pop
icebp
cmp
repnz
and
xchg
rorl
inc
in
ds
lahf
add
int3
popf
loope
enter
pop
insl
add
ja
outsl
mov
test
cmp
mov
push
movnti
mov
mov
mov
jb
mov
stc
cmp
mov
lret
int
loope
fistpl
ret
sahf
fistps
movsb
mov
jecxz
aas
mov
in
pop
push
sbbb
jno
xchg
das
test
imul
iret
xor
loop
jle
pop
out
loopne
icebp
aam
test
mov
xor
or
xchg
ljmp
push
jecxz
pop
add
popf
shrl
xchg
dec
loop
mov
test
jmp
loopne
nop
cld
xor
vpsrad
test
mov
xchg
add
dec
iret
push
add
inc
xchg
js
testl
bound
mov
cwtl
inc
das
sub
jmp
xchg
aaa
inc
jb
in
pop
adc
iret
cmp
lahf
xchg
jge
ja
inc
movhps
inc
and
jo
inc
cmp
pop
jp
mov
pop
xor
sbb
hlt
mov
jecxz
ret
popa
imul
jno
adc
pop
lret
push
sarb
jp
and
test
sub
enter
push
and
pop
or
add
mov
mov
rolb
cmp
inc
pop
cmp
cltd
mov
lret
mov
add
sub
and
imul
push
push
add
sbb
or
negb
xor
add
xchg
adc
mov
xor
xchg
int3
iret
mov
shll
add
inc
daa
mov
pop
test
cltd
stos
xor
cmp
daa
scas
mov
test
mov
clc
ret
fstpl
dec
shll
mov
ljmp
cvtdq2ps
jle
sub
inc
adc
lahf
xchg
inc
xacquire
xchg
jns
push
fs
mov
pop
jae
enter
xchg
adc
repnz
sub
inc
outsl
sbb
sbb
jbe
sahf
sub
cltd
adc
int
in
loop
xchg
lret
add
fs
fisttpll
fidivl
into
aas
xchg
and
ss
inc
sti
fcomp
xchg
mov
mov
leave
adc
push
stc
xor
aas
dec
aam
shlb
ds
out
test
icebp
inc
or
pop
xlat
cli
or
mov
mov
cltd
sbb
mov
cmc
pop
lret
int
pop
cmp
movsl
shrb
mov
mov
xchg
mov
xlat
test
jbe
xor
add
ret
jae
push
addr16
vmread
pop
sbb
mov
add
and
into
fidivl
add
sub
add
sub
insl
cmpsb
gs
jge
jbe
insb
mov
shlb
jmp
mov
xchg
push
test
xchg
xor
xor
jnp
gs
js
je
popf
mov
mov
cmp
lcall
aad
add
lahf
and
stc
xchg
cmp
mov
pop
or
inc
xor
xor
mov
inc
mov
xchg
movb
sub
sahf
into
lods
addr16
sbb
jae
fimull
cmp
xchg
adc
outsb
cmp
loopne
sbb
jno
push
insl
pop
push
inc
jb
pop
add
mov
shll
push
and
adc
cmp
mov
adc
or
mov
jo
repnz
out
insl
in
inc
dec
push
jp
pushf
add
jecxz
cmc
xchg
or
sbb
jnp
mov
fcompl
and
sbb
push
xor
icebp
mov
mov
xchg
cmpsb
xlat
pusha
loopne
xchg
cmp
dec
mov
cmp
inc
mov
pop
mov
fnsave
adc
imul
mov
mov
cmpl
lcall
int
cld
xor
adc
nop
mov
test
dec
pop
imulb
add
dec
jbe
and
push
hlt
lods
arpl
push
and
fmuls
adc
mov
xchg
push
mov
cmp
inc
fsubrl
mov
int3
add
adc
js
sub
fistl
xchg
push
and
pop
inc
lret
pop
clc
mov
insb
insl
dec
cmp
adc
mov
sub
movsb
sub
shll
in
add
cli
mov
push
sub
std
outsb
dec
adc
jno
hlt
sub
mov
pushf
sbb
pusha
jge
mov
xchg
pop
sub
jns
stc
sub
inc
mov
insb
push
fdivs
popf
xorl
inc
adc
jb
and
aam
popf
mov
cmp
dec
lret
imul
int
xor
fwait
xchg
pop
lds
push
pop
rcrb
cmp
daa
roll
mov
aaa
fcmove
xchg
dec
lahf
xlat
addl
mov
in
ss
aam
mov
imul
pusha
sbb
pop
push
aad
je
into
ret
sub
push
cmp
inc
push
xor
or
xor
fucom
lcall
in
ljmp
popl
popf
xchg
cmp
xchg
cltd
call
int
inc
data16
mov
xchg
pop
pop
jno
scas
mov
xchg
sbb
pusha
push
sub
dec
pusha
stos
dec
in
cwtl
nop
les
xchg
lret
or
insl
add
sbbb
cmp
lock
outsl
mov
gs
pop
pop
push
sbb
xchg
je
aad
push
cs
rcl
dec
mov
ljmp
aam
inc
inc
loopne
mov
mov
lret
dec
enter
and
jae
fidivs
mov
aas
fidivs
push
jbe
stos
xchg
mov
test
fidivs
dec
xchg
jno
inc
dec
cmpsb
xchg
imul
arpl
scas
add
and
cmpsl
out
mov
repnz
xor
and
out
xor
xor
inc
and
dec
out
sub
addb
out
out
sub
test
xlat
mov
mov
dec
inc
mov
out
add
addr16
jp
das
ds
es
js
negl
test
add
sbb
dec
sbb
loop
in
push
dec
int
add
cmc
outsl
and
mov
stos
cmp
rclb
int3
out
test
mov
mov
push
push
pushf
mov
and
and
sub
fists
pop
pop
shr
xchg
mov
shrb
roll
jecxz
mov
shl
test
mov
out
mov
sub
cmpsl
jg
sub
mov
mov
cmp
inc
int
lahf
jnp
stos
or
dec
add
xchg
gs
jge
insb
movsl
hlt
stos
sbb
dec
gs
inc
inc
jns
mov
pop
leave
adc
insl
and
daa
push
pop
in
and
push
mov
jge
inc
push
xchg
into
sbb
push
mov
iret
into
pop
testb
sbb
leave
and
pop
addl
push
dec
fstpl
mov
ret
push
pop
leave
aaa
insl
nop
fldl
jb
shll
notl
mov
or
adc
and
dec
xchg
icebp
dec
pop
xor
orb
lahf
pop
and
mov
and
int
push
inc
adc
ljmp
dec
loopne
pop
lods
mov
sub
push
popf
call
adc
repnz
mov
out
les
mov
nop
stos
sarl
fdiv
insb
dec
cld
fadds
in
idiv
mov
test
xchg
add
cmpsb
arpl
pop
pop
in
repz
stc
xchg
test
push
and
insl
lock
incl
orb
mov
aad
test
ret
dec
push
cmp
dec
add
mov
test
icebp
mov
aam
iret
stc
icebp
jbe
mov
xchg
lret
orb
or
outsl
xchg
cmpb
push
jo
cmp
push
jmp
shl
xor
ret
or
xor
add
out
nop
jne
js
sbb
stos
cmp
call
fbld
mov
scas
adc
in
cmp
sbb
ret
lock
daa
lret
dec
icebp
cmpsl
out
ja
and
cs
fidivs
out
mov
xlat
loop
leave
cmp
outsb
fmulp
ss
jg
std
push
jne
jnp
das
pushf
jb
sub
jecxz
pusha
sbb
push
mov
andl
shl
mov
pop
test
call
pop
xor
int3
ds
mov
ret
test
jmp
dec
leave
shll
push
sbb
xchg
jnp
sub
jecxz
pop
jbe
pop
mov
push
stos
mov
cs
add
out
mov
pop
shrb
inc
sub
into
orl
sbb
subb
sub
mov
adc
vpminub
inc
test
int
sub
loopne
les
movsb
jb
popf
imul
cmpsl
in
cmp
pusha
js
inc
cmp
rcll
mov
fadd
xor
pop
pop
es
cmpsl
adc
mov
and
cmpsb
xchg
sysenter
lds
or
call
int3
mov
fmul
repnz
pop
stc
cmpsb
das
push
insl
adc
movl
mov
adc
mov
jb
pop
cld
push
xor
gs
sbb
fnsave
xor
add
sbb
lahf
iret
lea
lods
lret
jle
icebp
scas
fxch
dec
fwait
mov
fcomps
lods
pop
xchg
and
dec
mov
add
sar
data16
adc
addr16
adc
jg
test
xchg
inc
xchg
test
sbb
and
xchg
pop
mov
stc
mov
mov
lahf
push
push
adc
in
shrl
test
xor
dec
cli
daa
mov
push
jbe
add
jb
shrl
jb
mov
in
dec
mov
or
mov
xor
xchg
loope
or
mov
jae
or
pop
shrb
pop
dec
mov
pop
add
fldcw
inc
and
leave
xchg
addb
pushf
push
mov
icebp
inc
call
in
mov
fwait
addr16
jns
adcb
jne
outsl
out
sbb
ja
mov
sbb
loope
mov
push
and
cwtl
xchg
cmc
ret
pusha
stos
and
push
xchg
bnd
dec
cmp
and
add
pop
out
cmpsl
cmpl
add
sub
rcrl
mov
addb
mov
or
cmp
ds
pop
mov
inc
arpl
xchg
cmp
mov
fs
shll
push
test
push
cld
mov
dec
test
add
jne
mov
adc
pop
cmp
jmp
loopne
or
ret
xchg
aaa
cmc
mov
or
push
stc
je
sbb
sarl
je
xchg
xchg
scas
adc
jge
hlt
cmp
idiv
and
bound
bnd
test
pusha
push
cs
iret
rolb
jns
roll
xor
mov
cld
mov
lret
cmp
scas
add
scas
adc
pop
aad
dec
sbb
loop
xchg
mov
cmpsb
mov
test
mov
cli
jge
ljmp
test
mov
imul
rcr
or
push
add
das
shlb
adc
xlat
rolb
cmpsl
cwtl
stos
call
jl
add
aas
sbb
sbb
sub
xor
jp
xorb
push
cmp
cltd
push
push
inc
leave
xor
cwtl
dec
pop
fisttpl
popa
push
outsb
and
clc
stos
mov
add
js
mov
pop
dec
jne
or
fsubs
fistpll
in
dec
dec
aam
xchg
dec
xor
ljmp
sbb
shll
subb
clts
pop
sub
or
test
aam
cmpsl
mov
aaa
fwait
xor
decl
push
and
test
jle
in
fwait
rclb
int
or
xorl
testl
xchg
bnd
int
das
mov
push
jae
pop
orb
fbstp
xchg
imul
push
cmp
sub
inc
mov
rcrb
xor
in
dec
js
es
xor
hlt
loop
int
movsl
data16
aas
fs
gs
out
xor
mov
sbb
jno
sahf
fs
mov
push
mov
pop
add
inc
xor
mov
iret
dec
push
mov
clc
jp
fidivrs
jl
hlt
or
mov
dec
fadds
pop
in
leave
cmp
push
mov
negb
test
frstor
out
out
lods
inc
xchg
movsl
cmp
mov
sbb
jae
out
jbe
pop
test
dec
cltd
daa
test
dec
adc
or
jmp
div
ds
daa
and
fldenv
or
adc
mov
stc
testl
cs
mov
aas
in
insl
sub
jg
ja
jp
cmpb
pop
fmulp
dec
sbb
and
lcall
add
call
in
insb
xchg
cwtl
lds
inc
xchg
cltd
jge
xor
lea
into
test
adc
push
adc
push
or
pop
mov
fists
push
adc
out
mov
jne
mov
sub
ret
push
pop
dec
or
sbb
or
or
mov
repnz
xchg
call
pop
push
out
adc
dec
jnp
out
mov
cli
in
mov
mov
ret
mov
sti
outsl
jecxz
pop
sahf
shlb
cwtl
orb
out
enter
lcall
es
cltd
sbb
loop
movsl
repnz
pusha
push
mov
push
adc
xchg
sahf
and
sahf
and
loopne
adcl
dec
jle
mov
push
jge
cmc
adc
xchg
sbb
and
sbb
mov
mov
cld
cmp
or
cmp
or
cld
pushf
inc
testb
mov
mov
adc
test
iret
loope
fnstsw
imul
dec
into
or
sahf
xchg
dec
std
addr16
mov
sbb
movsl
jne
out
leave
push
insb
roll
push
loopne
test
mov
imulb
cmpsl
jnp
jp
cmp
inc
mov
pop
push
cmp
mov
pop
cmp
popa
pushl
fs
mov
jne
pop
cwtl
das
int3
pop
add
ret
push
lcall
ret
ret
xor
mov
jne
popf
mov
ficoms
fcmovbe
push
xor
scas
sbb
push
xor
inc
sbb
pop
clc
int
out
push
test
ljmp
test
dec
jne
imul
sbb
add
inc
arpl
xorb
pop
push
cmovbe
fwait
dec
mov
adc
mov
xchg
mov
sub
jge
ljmp
ror
clc
jecxz
in
inc
movsb
aad
fimull
js
jnp
fs
push
push
fistps
push
mov
arpl
shr
inc
jecxz
sbb
lcall
cli
push
jne
sbb
les
cmp
adc
cmp
adc
hlt
mov
rcl
and
iret
xchg
and
and
notb
pop
sub
jge
inc
push
out
daa
emms
pop
gs
jae
adc
cltd
push
pop
cmp
orl
fdivrs
sbb
dec
test
xchg
dec
dec
hlt
gs
leave
dec
enter
call
gs
outsb
call
js
push
mov
mov
jb
inc
push
pop
xor
jne
insl
inc
sub
inc
xchg
popf
push
dec
pushf
lahf
in
insb
sahf
addr16
inc
add
mov
push
cld
push
je
fcmovne
inc
in
add
xor
ja
iret
jl
pop
bound
sub
and
lea
in
sub
out
aad
out
shl
or
fwait
push
outsl
jle
rclb
xchg
mov
fmul
jmp
lds
fdivl
sub
push
xchg
mov
pop
dec
sub
dec
jmp
ds
adc
xor
xor
xor
sbb
rcrb
pop
xor
stc
and
jp
and
sti
int3
push
and
bound
nop
inc
orl
and
mov
addr16
out
add
aam
movsl
lahf
fsts
sub
scas
repnz
aas
mov
adc
push
dec
fwait
out
dec
jbe
fxch
add
repnz
sub
loopne
in
pushl
ret
mov
and
inc
xor
rolb
lods
loopne
add
cmp
les
pop
test
ror
out
lock
and
daa
call
dec
mov
mov
pushl
pop
push
mov
push
mov
stc
mov
add
push
push
lret
cmp
phsubd
sub
jmp
test
mov
mov
dec
or
shlb
popf
jecxz
insb
daa
in
gs
mov
jge
xchg
jno
xor
jge
push
xchg
and
nop
scas
xor
pop
mov
sub
inc
jns
inc
rolb
jno
mov
jp
test
sub
xor
ss
aaa
push
inc
sub
je
shll
je
rolb
jmp
out
fwait
xchg
jl
mov
inc
dec
fidivs
pop
push
cwtl
daa
xor
or
loop
dec
stc
jl
or
jg
mov
jmp
sbb
inc
movsl
push
xchg
lock
psraw
out
jl
push
or
inc
inc
sub
mov
inc
jno
sarb
mov
sub
jmp
mov
out
sbb
int3
mov
mov
inc
ret
cltd
push
mov
cmpsb
std
xchg
insl
jb
and
mov
and
mov
out
fdivrl
cmp
stos
cli
adc
xchg
pop
add
jle
lods
cmpsb
xchg
addr16
add
imul
ljmp
pop
lret
mov
fidivrl
pushf
or
xor
or
mov
icebp
cmpsb
repz
sahf
inc
flds
push
mov
jl
mov
mov
and
push
lahf
sub
inc
test
push
mov
loop
divl
xor
nopl
jns
mov
and
xor
je
pop
iret
mov
add
iret
jge
iret
rorl
jmp
lcall
xchg
inc
stc
push
pop
mov
mov
jbe
iret
cmc
dec
dec
push
mov
dec
lret
fisubrs
xor
ja
popa
xor
inc
jne
lret
outsl
repnz
mov
mov
sbb
xchg
mov
pop
jae
jecxz
push
pop
jns
bound
push
addr16
aaa
mov
cmpsb
cmpsb
jae
dec
shrb
mov
test
push
into
lods
sarl
bound
jmp
jo
loop
fxch
cs
jne
aas
inc
sub
push
add
cmp
cmp
push
adc
mov
shrl
rcrb
add
mov
or
mov
lods
or
pop
add
out
and
fisubrl
xor
popa
sub
mov
out
pop
loop
idiv
lret
lock
movsl
jle
sub
and
mov
inc
insl
adc
push
nop
out
jge
adcb
ret
mov
mov
xchg
fisubs
lock
push
inc
imul
rcr
xchg
sub
ljmp
mov
push
push
ss
pop
mov
pusha
pushf
push
ljmp
mov
cltd
jno
adc
push
and
inc
cld
sbb
inc
lea
je
adc
cmpsl
loope
sbb
mov
out
pop
pop
push
or
fs
adc
arpl
sub
iret
jge
inc
mov
xchg
sub
in
packuswb
sub
jo
popf
lods
add
pop
out
mulb
push
sub
xchg
sbb
repnz
rcl
xor
sub
jp
jg
lcall
cs
mov
pop
xlat
test
and
jg
or
dec
sbb
jp
out
xchg
imul
xchg
mov
sub
add
dec
incl
xchg
mov
push
cmp
xor
pop
inc
xlat
lds
test
das
mov
dec
inc
jle
pop
mov
and
sbb
jnp
push
jp
ficoml
dec
mov
stc
xchg
push
sbb
stos
pop
mov
outsb
xchg
movsl
out
add
dec
fildl
leave
and
test
leave
daa
shll
xor
aas
test
in
addr16
outsb
in
dec
imul
inc
push
mov
dec
sub
mov
insb
nop
inc
les
lret
pmovmskb
dec
cmpsl
or
jbe
lahf
push
adc
and
call
adc
sahf
pop
push
mov
sbb
or
aam
xchg
jns
mov
mov
push
mov
cmp
pop
pushf
lods
ss
iret
pop
mov
and
cmp
test
pop
dec
cmp
push
leave
bound
out
xchg
fsubrp
inc
adc
mov
das
mov
filds
sub
jo
push
js
outsb
push
inc
push
jge
shrl
ficomps
stos
inc
call
xchg
dec
ljmp
addr16
outsb
outsl
xchg
loop
std
fwait
and
mov
add
ret
sbb
outsb
clc
mov
or
adc
jae
add
aad
leave
fisubl
lock
or
sbb
mov
mov
fucomi
dec
loop
inc
pop
ljmp
outsl
or
mov
fs
adc
cmp
jae
lods
icebp
xchg
stos
scas
leave
cmp
cmp
pop
inc
lret
mov
pushf
sub
add
out
sbb
pop
push
and
insl
out
jge
sub
mov
pop
pop
adc
xchg
mov
pop
dec
or
adc
pop
fwait
into
xor
dec
xor
in
and
hlt
cmp
test
xor
aaa
int3
int3
xor
aas
or
xor
mov
xor
dec
jb
lcall
push
rcpps
dec
sbb
clc
stos
dec
fstps
xchg
stos
xchg
mov
addr16
mov
mov
adc
dec
cld
dec
aad
or
cltd
in
int3
mov
popf
fidivs
ja
xorl
push
sub
test
inc
sub
mov
cmpsb
adcl
sahf
xchg
cmpb
sbb
inc
jle
adc
xchg
popa
xchg
jle
sbb
dec
outsl
xor
movsl
mov
sbb
cli
loopne
icebp
adc
jns
mov
push
mov
loopne
out
lcall
out
xchg
call
pop
and
or
xchg
mov
mov
loopne
cmp
js
mov
adc
test
mov
mov
mov
push
and
cli
xor
cmp
sub
dec
xor
lcall
test
xorl
mov
rolb
aad
rcrb
adc
cli
dec
test
xchg
jnp
lcall
sahf
adc
std
xor
inc
cmp
jmp
lea
lock
and
dec
out
or
push
inc
and
popa
or
mov
movsb
mov
imul
mov
les
pop
int
fiaddl
push
jo
jg
mov
call
in
and
push
fsts
push
int3
pop
jp
sahf
inc
jns
sbb
cmp
sbb
insb
push
mov
scas
stc
inc
cld
loopne
scas
inc
jbe
push
je
mov
push
sub
add
or
fwait
test
neg
mov
test
pop
xchg
mov
std
popa
mov
insb
inc
adc
xchg
sar
xor
daa
cmp
jbe
test
jb
xor
pop
xor
inc
sbb
pusha
popa
cmp
pop
xor
outsl
imul
sub
jo
in
je
sti
icebp
sbbb
sbb
xor
mov
mov
cmpsl
punpckhbw
test
out
mov
lcall
sub
jb
jle
jmp
xchg
and
mov
add
cmc
cld
sbb
sbb
xor
rolb
fistpll
xchg
cmpsl
mov
jle
inc
lret
add
pop
dec
in
cmp
jns
push
in
mov
or
pop
mov
xlat
xor
cmp
fs
insl
xchg
inc
xchg
cltd
dec
movsl
nop
fsts
aam
testl
sahf
sbb
popa
bound
mov
push
cmpsl
sub
cli
or
lods
jae
sti
and
lcall
mov
in
xchg
pop
idiv
aaa
insl
std
fstps
xor
fsubrs
mov
loop
pop
pop
cmp
aaa
mov
into
mov
in
adc
push
add
subb
test
inc
je
jp
inc
pop
xor
xor
fisubs
mov
outsl
cmp
adc
inc
stos
arpl
xchg
pop
adcb
pushf
jmp
aad
iret
call
aaa
mov
repz
sahf
loop
push
jge
movsb
xchg
int
mov
pop
or
ja
sub
sub
pop
sub
sti
popf
mov
movsl
push
jecxz
std
mov
cmp
lret
jmp
push
adc
cmp
sub
mov
and
sbb
mov
fcom
adc
dec
push
pop
lcall
into
andl
add
cmp
mov
cmp
adc
aad
xchg
fld
int
scas
push
into
sub
adc
lahf
xchg
cmpsl
js
jge
clc
testl
jecxz
imulb
or
jo
shll
movsl
mov
mov
cld
frstor
roll
nop
adc
cmp
shlb
push
fs
das
mov
lcall
inc
sub
outsb
bound
sub
ficoml
lds
imul
ret
pop
loopne
xchg
test
pusha
add
inc
lods
push
push
and
daa
bswap
adc
sahf
dec
inc
outsb
dec
lods
push
std
bound
and
insl
push
out
fdivrs
xor
inc
xor
and
inc
mov
push
loope
and
andb
dec
cwtl
pop
push
ljmp
sbb
add
push
add
mov
dec
cld
inc
or
rcr
call
push
data16
sub
jmp
stos
xor
sub
call
mov
push
cmp
inc
mov
leave
inc
sub
ss
enter
sbb
call
movsb
push
jecxz
aad
hlt
jno
stc
pop
and
cmc
cmpsl
jmp
lea
out
mov
ds
sbb
aas
push
inc
aaa
das
fiadds
out
cmovge
dec
rol
pop
mov
leave
xchg
insb
inc
xor
pusha
mov
int
mov
int
dec
hlt
repnz
or
cmp
clc
push
sub
mov
sub
and
inc
mov
and
gs
pusha
jmp
cmp
xor
rorl
add
ret
jge
cmp
xchg
cmp
cld
mov
xchg
fmull
pusha
mov
cld
mov
pushf
idivb
test
in
mov
ret
mov
bound
std
jmp
inc
test
cmp
aam
mov
adc
mov
mov
jge
call
xor
sbb
jb
dec
mov
fidivl
xlat
xchg
jmp
enter
and
pop
pusha
fstl
lock
cmc
pop
stos
aam
into
mov
cmpb
push
in
xchg
out
inc
or
mov
bnd
adc
inc
dec
addb
mov
inc
and
push
lock
add
bound
stos
mov
add
mov
cmpsl
sbb
lods
fstps
mov
xchg
adcl
mov
andb
je
repnz
xlat
pop
repz
sub
inc
jne
inc
sub
pop
push
sahf
jecxz
movsl
xchg
div
pop
and
mov
or
mov
outsb
push
xchg
sub
fcoml
ja
xchg
jmp
mov
mov
in
loop
adc
rolb
test
sbb
pop
add
fs
sarl
jae
mov
adcb
lock
dec
fldt
jo
rcl
cmp
aas
and
jle
sti
mov
daa
je
lahf
js
lds
or
xor
out
lods
mov
enter
jbe
cmp
or
rol
loop
xor
iret
fnstcw
call
je
cmp
lods
xor
mov
cmp
aaa
dec
or
sbb
adc
out
hlt
sbb
cld
pop
stos
add
stc
cmc
mov
mov
push
mov
inc
and
inc
loop
call
pop
fdivp
jbe
cmp
mov
xor
lahf
mov
cmp
call
pop
mov
jge
ss
mov
sbb
enter
xor
dec
xchg
xor
inc
push
or
jb
ss
nop
push
data16
aam
mov
xchg
lds
dec
mov
in
push
rclb
sub
shl
std
scas
sub
sub
pop
lea
ret
lods
sub
out
rclb
aas
jo
sub
pop
sbb
std
mov
iret
adc
fsubl
cld
repnz
cs
subb
test
shlb
xchg
enter
lea
lea
xlat
cld
push
inc
mov
fdivrl
ds
into
sbb
loop
loop
outsl
pop
andl
jbe
push
hlt
pop
lret
fdiv
loop
aaa
jne
pop
ret
push
push
sbb
lea
ljmp
add
pusha
fldcw
xchg
enter
shrb
fs
aas
push
sbb
mov
lea
js
cmp
mov
mov
push
inc
mov
mov
or
shlb
pop
mov
insb
loopne
cmp
cmp
sbb
mov
pop
cmp
dec
idivb
push
xchg
pop
enter
mov
push
adc
fcmove
jnp
scas
and
cmp
sbb
jle
mov
fbld
sub
mulb
popa
cmpsb
sub
fwait
cwtl
jp
dec
jp
in
pop
inc
test
into
shrl
aam
adc
fwait
push
adc
call
neg
inc
xorl
jmp
repz
xchg
dec
sbb
cwtl
rcrl
inc
cltd
mov
and
test
loopne
sbb
push
lods
ljmp
enter
fmull
lea
inc
outsb
into
push
test
pop
dec
mov
xchg
pop
test
mov
mov
mov
jb
aam
inc
jmp
repnz
out
lret
mov
mov
sahf
out
notb
xor
cmp
xchg
nop
pop
pop
addb
dec
dec
test
pop
addr16
dec
cld
ret
fildll
jp
daa
test
out
push
pusha
or
in
mov
mov
scas
fld
int
fcmovnu
pop
push
inc
inc
inc
adc
cmc
pop
dec
aam
shll
add
fld
mov
cltd
push
arpl
and
sbb
or
pop
lods
sarl
mov
popa
fists
inc
bnd
cmp
iret
mov
sub
dec
mov
cmpb
pushf
std
pusha
and
iret
leave
xor
into
movsb
add
xchg
notb
jl
ret
xchg
lret
cmp
xor
inc
cs
adc
mov
cmp
stc
cmp
loope
testb
jb
jne
add
and
fldt
push
pop
xchg
loope
pusha
xor
dec
pop
sub
lret
sub
add
lret
inc
fs
repnz
data16
xor
pusha
pop
mov
xor
out
inc
ret
icebp
repz
jb
dec
and
pop
inc
inc
dec
addr16
push
pop
push
xor
push
mov
gs
test
ja
lahf
orl
sbb
fadds
stos
aas
dec
xor
js
xchg
sbb
cmpsb
outsb
push
jg
jle
cltd
sbb
orl
out
and
mov
hlt
jae
loope
jmp
xchg
mov
int
jae
int
mov
fimull
ret
filds
jo
and
ljmp
pop
mov
mov
inc
jl
test
sbb
push
inc
repz
xlat
xchg
xchg
loopne
pop
push
mov
mov
dec
add
mov
in
outsb
lods
jno
add
pop
jne
lcall
inc
negl
lcall
clc
and
das
add
or
dec
jbe
popa
in
xchg
subl
jle
xchg
lret
xchg
adc
jl
inc
fmulp
test
adc
mov
mov
int3
cmp
mov
leave
jnp
or
and
mov
int
mov
mov
into
arpl
addb
mov
test
pop
adc
dec
fldl
mov
nop
fsubrl
dec
rol
imul
imul
mov
xchg
push
push
and
stos
mov
ret
sbb
xor
mov
fbld
outsb
into
out
cmp
xor
mov
rclb
push
enter
cld
or
xor
cmpsb
push
xor
sub
fiaddl
or
and
mov
lods
stos
cmp
movsb
jbe
into
xchg
pop
adc
out
or
sbb
outsb
cli
ret
pxor
pop
bound
cmp
adc
inc
loop
mov
mov
push
fs
shll
inc
insb
adc
push
rolb
xor
subb
shll
pop
xchg
mov
or
push
icebp
jp
sub
outsl
pop
push
shl
aas
cmp
cld
push
sti
cmpsb
mov
rcl
mov
mov
xchg
dec
ljmp
xor
repnz
loopne
scas
es
imul
jbe
repnz
outsl
pop
aaa
insl
push
bound
dec
push
scas
int
and
sbb
inc
imul
inc
or
dec
xor
aam
dec
cmp
mulb
jle
inc
mov
notl
cmp
mov
in
mov
sub
out
inc
xchg
push
cli
cs
and
ja
das
or
mov
lds
lahf
roll
add
dec
adc
push
ja
cmp
xor
inc
pop
pop
xchg
sbb
add
and
xor
add
sarl
popa
push
jge
jge
cld
adc
call
dec
fstpl
dec
lret
push
in
inc
and
sbb
lock
xor
cld
mov
test
push
cmp
xchg
push
cltd
fwait
insb
sub
adc
out
shlb
lret
fstpl
xor
mov
jle
cmp
lret
hlt
cmp
iret
cmpsb
xor
leave
add
test
lcall
aaa
mov
mov
mov
test
inc
and
push
roll
cmp
rol
movl
sbb
jo
nop
fcoml
das
in
testl
jecxz
das
dec
pop
and
int
cmp
sub
jge
jmp
andl
cmp
sbbb
sub
and
mov
icebp
in
rcr
sbb
test
adc
stos
fwait
rcr
fsubrl
shrb
orb
push
jle
sub
pop
jmp
xor
rcpps
incl
adc
gs
std
and
or
es
mov
fsubl
adc
mov
add
stc
inc
jl
mov
xchg
fmull
cmp
push
ret
adc
shr
iret
xchg
xor
lret
repnz
inc
gs
or
push
daa
pop
out
dec
fucomp
jg
mov
ret
or
lea
rcrb
lret
in
pop
mov
and
test
xchg
cs
mov
rorl
leave
sbb
fistl
xor
outsb
into
iret
les
test
stos
mov
push
fldenv
cmp
cwtl
out
xchg
push
je
repnz
arpl
arpl
or
int3
nop
xor
inc
xor
into
or
inc
and
fisubrs
or
xor
cltd
push
xor
mov
cmc
pop
xor
pop
sbb
sub
inc
call
test
jne
ret
int3
and
jnp
subb
cmp
sub
dec
and
sbb
or
pop
insb
pop
jecxz
nop
imul
inc
hlt
pop
mov
pop
stc
inc
and
out
ret
arpl
fnsave
inc
imul
push
test
test
pop
push
lea
in
xchg
lea
hlt
lahf
sub
xchg
aas
dec
fcom
fimull
and
inc
arpl
sbb
fdivrs
adc
sub
dec
xor
cs
and
pop
push
push
cmc
lea
add
inc
jp
inc
leave
in
jmp
jg
aaa
out
aam
push
mov
and
movsl
inc
jne
mov
add
mov
jecxz
fsts
xor
out
lret
test
cld
test
dec
mov
jae
test
cmp
or
xor
push
mov
mov
and
xor
add
xchg
cmpsl
push
or
push
pop
fucomp
stos
lock
mov
mov
les
rcrb
cmpsl
fs
and
in
in
inc
cmpl
pop
jbe
in
int3
daa
dec
cmp
jb
dec
lcall
sub
mov
jns
mov
pop
mov
fs
fistl
lods
hlt
mov
rclb
sbb
mov
dec
aaa
jb
test
pop
mov
lret
incl
mov
ja
js
insl
neg
adc
inc
sbb
lods
xor
repz
xor
lods
jbe
scas
sub
mov
iret
pop
leave
in
pop
jb
mov
cwtl
and
rcrb
lods
pushf
mov
jo
jbe
outsb
aas
sub
repz
and
div
jnp
xor
mov
pop
add
mov
or
loope
cmc
in
and
outsl
sbb
std
pushf
fiaddl
mov
rcrl
inc
iret
jge
jae
sbb
jne
addb
pushf
pop
lock
adc
cmp
mov
insl
sub
or
jecxz
in
in
outsl
cmp
pop
xor
scas
sbb
lret
or
inc
test
adc
popa
xor
adc
bound
cmp
imul
lahf
je
int
fdivr
scas
xchg
lea
inc
imul
cmp
xor
ret
leave
pop
lcall
mov
cltd
xor
addr16
mov
loop
adc
push
mov
and
mov
xor
out
mov
in
inc
or
sub
xor
add
mov
mov
data16
shl
xor
adc
sbb
je
pop
loope
int
dec
aam
lea
pop
in
sbb
aad
mov
xchg
sbb
mov
pop
mov
shll
mov
mov
pop
and
or
fisubrs
outsb
cmp
cltd
fldl
lods
ret
mov
clc
pop
cmp
fdiv
sub
adc
xor
push
cld
iret
push
xchg
jnp
insb
pop
add
lcall
sbb
scas
adcl
outsl
pusha
xchg
mov
mov
mov
idivl
in
cmc
mov
fs
pop
mov
test
dec
addb
sahf
out
inc
nop
mov
or
jmp
sbb
push
jl
dec
dec
sbb
adc
negl
popa
jmp
jp
xor
test
xor
jno
call
mov
das
ja
push
addr16
pop
cltd
mov
data16
rolb
xlat
imul
imulb
aad
sbb
sbb
lock
push
cld
push
push
sub
aam
push
out
es
push
jns
cmp
jno
mov
jmp
inc
ficomps
sbb
std
shlb
sub
mov
jg
lock
inc
sub
out
fnstsw
mov
loopne
addps
out
mov
xor
into
pop
cmp
lahf
adc
mov
out
dec
out
les
jl
loopne
xchg
inc
pop
inc
imul
push
adc
pop
jne
add
and
dec
addr16
pop
pop
in
subl
add
add
push
out
and
adc
ficoms
divl
cltd
stos
cmp
dec
push
mov
push
or
lds
add
xchg
sahf
call
pop
fisubs
scas
movsl
add
mov
sahf
repz
dec
sub
dec
ss
scas
and
loop
and
sti
add
loope
loop
mov
cmp
adc
fidivl
in
pop
jbe
push
add
mov
xor
xor
repnz
xchg
lret
test
jl
push
pop
popa
push
rorb
dec
sbb
ja
cmp
pop
jge
xchg
movsb
and
mov
es
pusha
xor
jg
add
mov
pop
mov
lods
repnz
xchg
dec
cmp
neg
xor
ljmp
in
mov
popa
imul
ror
xchg
pop
data16
xor
test
mov
inc
lea
les
xlat
je
js
xchg
inc
adc
shr
pusha
test
mov
inc
xchg
mov
xchg
lods
pop
shrl
xchg
sarl
adc
adc
bound
faddp
pop
repz
call
into
add
xor
mov
cmp
sarb
pop
dec
cmp
xchg
stos
sar
repz
filds
dec
mov
addb
test
rorl
imul
rcrb
aas
mov
mov
int3
fcompl
cli
mov
pop
dec
cmpsb
test
cvtps2pd
push
insl
fists
leave
icebp
mov
add
iret
repnz
je
lcall
dec
jge
js
add
add
arpl
repz
dec
ljmp
xchg
stos
sbb
push
pushfw
orb
pop
pushf
out
sbb
sub
push
or
out
sbb
imul
aam
sbb
xor
loop
jecxz
adc
ret
pop
push
mov
test
scas
cwtl
mov
inc
inc
xchg
mov
adc
data16
es
fcoms
fistl
test
and
and
ds
mul
subb
nop
xchg
inc
jbe
outsb
inc
lds
jle
cwtl
sahf
xor
push
mov
jb
xchg
sbb
push
xchg
insl
jmp
stc
push
fidivl
xchg
into
xchg
mov
daa
mov
fs
mov
pop
ret
nop
lahf
adc
cmp
loop
xchg
mov
xchg
call
scas
iret
dec
pop
rcll
mov
dec
aaa
aad
adc
jge
int
push
cmp
xchg
in
and
xchg
icebp
fldenv
insl
or
mov
mov
aad
inc
cs
adc
or
sub
jl
test
mov
loopne
or
sub
iret
lahf
mov
outsb
push
enter
mov
dec
int3
aad
jmp
and
incb
lea
std
sbb
mov
test
and
mov
aad
pusha
cmc
mov
jno
bound
setno
or
cmp
push
notb
inc
mov
pop
ret
sub
xor
adc
ss
mov
ja
rcll
cwtl
mov
sub
sbb
ret
aam
in
mov
stos
pop
mov
ret
iret
mov
jmp
sub
sahf
outsl
outsb
test
or
test
mov
add
cltd
push
ss
gs
xadd
xchg
daa
lock
insb
and
loope
lock
inc
mov
jecxz
and
or
mov
aas
loope
lock
and
jo
insl
mov
cmpsl
cmp
mov
lods
ret
movsb
es
test
push
push
mov
xchg
push
xchg
shll
or
lret
aad
rcll
sub
xorl
outsb
push
pushf
push
pop
inc
fisubrl
inc
lods
mov
aad
dec
xorb
je
dec
dec
scas
xor
lea
enter
cmp
add
movsb
pop
push
movsb
inc
arpl
lock
movl
out
push
mov
pop
loope
shlb
icebp
pusha
arpl
push
loopne
cmp
mov
into
and
mov
insb
dec
rolb
push
xchg
fdivp
inc
call
xor
inc
xor
lret
out
ret
mov
jg
cmp
xchg
jbe
imul
cmp
pop
int3
jbe
xor
test
pop
js
mov
inc
mov
inc
iret
cmp
mov
xchg
and
mov
test
nop
out
push
imul
lods
push
sub
jle
cmp
rcrl
jb
push
jg
xchg
data16
out
subb
cmp
xor
aaa
lcall
pop
cmp
cmp
fldenv
enter
orb
shlb
mov
out
adc
repz
and
adc
mov
pusha
fcmovne
in
faddl
mov
cvtps2pd
rorb
out
dec
mov
mov
mov
fcomps
loope
enter
jmp
popf
inc
fwait
stc
setle
xlat
inc
push
cmp
cmp
adc
and
jp
clc
pop
push
or
xor
movsl
xor
rcrb
mov
mov
and
leave
adc
pop
add
push
test
aam
popf
or
sbb
inc
push
out
js
stc
stos
rcrb
cs
pop
push
or
or
psubusb
sub
fdivrl
cltd
in
xor
fisttpll
popa
das
nop
testb
jno
pop
pop
mov
or
pop
jmp
shll
lcall
jno
orl
cmp
bound
and
fistpl
mov
mov
data16
rcrl
mov
add
push
push
xchg
adc
ss
adc
fstpl
sbb
add
sahf
popf
scas
popa
repz
inc
fstl
ror
jle
push
pushf
mov
add
test
sahf
mov
movsl
mov
pop
loope
inc
cs
sub
adc
imul
jns
lahf
fistpl
pop
pop
adc
push
pop
jecxz
jl
ds
mov
lods
cwtl
in
pop
ret
jne
add
push
iret
out
loopne
int
jne
push
push
mov
mov
jle
insl
lret
cmp
xor
into
dec
test
ljmp
xchg
test
mov
push
mov
pop
mov
jmp
leave
int3
adc
addr16
mov
adc
xchg
pop
stc
or
mov
jnp
pop
push
mov
jne
cmp
call
sub
lock
aaa
jno
pop
mov
sub
ret
ret
lahf
out
leave
and
xchg
jno
lahf
cmp
insb
sbb
inc
leave
subl
sbb
out
pop
or
cmp
xor
fwait
popf
daa
loop
adc
in
sub
pusha
lods
repnz
gs
xor
adc
sarb
xor
cli
je
out
jmp
pop
sub
jmp
outsb
hlt
pop
out
mov
mov
scas
popa
jp
xor
insl
ret
shrl
pop
testb
bound
insb
xor
xlat
mov
xlat
lea
xchg
aas
xor
adc
fwait
jmp
std
popf
cmp
rcl
outsb
in
mov
or
or
in
and
pop
push
bnd
addl
out
lcall
mov
or
leave
xchg
pop
sbb
mov
xlat
and
pop
mov
xor
cwtl
adc
sub
scas
mov
and
sbb
ret
push
lds
pop
aam
xor
push
lds
xchg
hlt
adc
fwait
sarb
dec
testb
and
cmpsl
adc
and
lds
adc
jmp
jb
and
das
dec
ss
mov
pop
ds
mov
jnp
cwtl
jnp
mov
test
jno
sbb
mov
leave
or
adcl
test
adc
mov
mov
pop
loopne
cmp
ret
or
mov
mov
or
js
jmp
jne
cmpsb
pop
pop
xchg
jbe
inc
xchg
imul
in
fstps
jns
jo
lahf
or
mov
insl
mov
gs
jge
inc
xor
adc
inc
push
jp
pop
in
stc
cli
lea
xor
jb
mov
pop
jp
test
and
test
mov
push
jl
pop
mov
adc
in
pop
jle
cmp
inc
mov
mov
jge
ss
push
pop
and
cmp
stos
cmp
sbb
jmp
imul
into
sahf
pop
dec
xchg
daa
add
inc
pop
fstps
outsl
mov
scas
sahf
sub
inc
xlat
dec
xchg
outsb
lret
fsubl
xchg
or
loopne
sbb
jmp
je
xchg
es
or
dec
xor
lahf
fimuls
jb
movsb
daa
pop
lods
adc
ja
jae
and
adc
sbb
mov
test
ficomps
es
and
mov
icebp
scas
rcll
dec
sbb
rol
mov
and
xor
shlb
lret
or
loop
push
pop
pusha
jnp
daa
lret
xorl
jnp
imul
shl
mov
xchg
ljmp
cs
dec
inc
insb
dec
cld
mov
xor
xor
push
int
sub
xor
adc
dec
or
stc
int
mov
pushf
pushf
movsb
pop
cmp
mov
push
xor
stos
jl
xor
sbb
cmp
aas
add
push
pop
mov
call
in
rclb
ds
jge
pop
imul
call
loop
mov
jmp
data16
sbb
arpl
movsb
jnp
sub
bound
stos
push
lret
jmp
ds
xchg
in
fprem
stos
movsb
inc
cs
arpl
sub
loopne
xchg
xlat
stc
icebp
fbld
mov
add
lods
mov
mov
xchg
mov
jbe
pusha
sbb
pop
in
iret
notl
outsb
adc
scas
mov
scas
lock
jl,pt
xor
push
in
pop
fisubs
pushf
xor
xchg
loop
cmpsl
push
ret
repnz
hlt
or
out
ret
sbb
xchg
dec
or
cmp
add
dec
pop
shll
jmp
icebp
jmp
fsts
adc
or
and
dec
and
into
pop
aas
idivl
dec
sbb
adc
pop
negb
adc
into
in
movsl
jmp
mov
test
lea
setbe
sbb
cmp
outsb
jbe
data16
jmp
push
dec
jb
fcmovbe
push
adc
cmp
cltd
jmp
pop
dec
mov
mov
push
jne
cli
adcl
loopne
cli
pusha
aas
mov
outsl
adcl
and
nop
pop
xchg
std
cwtl
ljmp
cld
lock
push
mov
inc
jle
in
stc
dec
loopne
jp
pop
xchg
mov
mov
test
jg
lahf
loopne
adc
enter
add
loope
cs
loop
mov
cmp
push
xor
cld
sarl
pop
movsl
pop
adc
out
incl
xor
lahf
jecxz
loope
pushf
iret
xchg
rorb
jp
mov
flds
mov
fstps
and
test
test
pop
mov
and
xor
fcomps
addl
ljmp
fildll
addr16
lea
xor
ja
xchg
repz
fcoms
dec
sub
les
mov
push
cli
lea
xor
push
cmp
xchg
mov
pop
sbb
xchg
cli
into
ficoms
push
aad
fucom
lock
mov
add
in
or
push
scas
mov
or
pop
clc
cmp
and
js
and
dec
rcr
sbb
adc
out
call
std
xor
inc
inc
dec
out
and
inc
cmp
sub
shll
into
mov
enter
arpl
scas
je
mov
or
loopnew
aad
insb
pop
mov
call
clc
pop
mov
lahf
sbb
dec
in
add
mov
int3
ret
int3
pop
cmp
loop
scas
jbe
rcr
out
mov
out
aam
lahf
mov
jl
fldenv
mov
xor
daa
jmp
decl
or
daa
jne
mov
fiaddl
aas
adc
rclb
push
orl
mov
pop
push
rol
pop
xor
mov
cld
cmpsl
inc
idivl
sub
jl
dec
xor
cli
mov
inc
cwtl
loop
jne
test
daa
cmc
ds
mov
cmpsl
push
mov
adc
jae
push
mov
xor
test
imul
push
iret
repnz
nop
inc
test
shr
mov
pushf
les
cmp
test
jmp
xchg
aaa
lods
adcl
xchg
iret
icebp
push
mov
mov
jne
test
or
sub
pop
dec
inc
hlt
pop
popf
ret
es
ljmp
fadds
pop
and
shll
mov
sub
scas
ret
sub
cmpsb
fs
and
push
mov
fadds
xchg
fwait
adc
dec
dec
loope
shrb
pushf
adc
mulb
push
int
add
fldcw
sbb
push
dec
jge
daa
adc
fucom
and
std
test
imul
mov
ret
stc
and
les
push
test
push
shll
mov
mov
dec
les
push
mov
jo
loope
mov
imul
pop
or
daa
mov
or
push
xchg
adc
xchg
sub
pusha
add
mov
xor
inc
inc
inc
cwtl
cmpsb
in
push
ljmp
jge
fmulp
cmpsb
push
pop
dec
out
mov
sub
dec
dec
stos
push
mov
outsl
jg
push
add
push
push
jno
insb
in
mov
ss
xchg
ret
inc
push
inc
pop
test
xchg
insb
push
pop
ja
adc
push
data16
add
or
stc
xchg
int3
rcrb
aas
ret
sti
call
cmp
jle
push
pop
mov
push
push
les
aas
xchg
jae
jbe
sbb
pop
jg
out
jno
shll
jmp
cmp
jns
cmc
fisttpll
and
xchg
scas
iret
shll
test
nop
cs
xor
pop
adc
scas
jb
aaa
pop
insl
stc
mov
sbb
xor
push
flds
sub
dec
fdivs
jno
repz
sti
and
mov
movsb
mov
mov
shrl
daa
fisttpl
push
dec
aad
fmul
and
in
out
scas
ret
mov
cmp
mov
fwait
xor
push
jecxz
cmpl
mov
push
sub
xchg
or
movsb
xor
rol
lahf
rolb
xchg
ss
out
push
es
or
mov
mov
mov
enter
ja
cmpb
jmp
insb
push
or
dec
rcl
sub
dec
pop
lods
inc
arpl
xor
push
adc
fisttps
enter
mov
inc
pop
data16
rclb
mov
ja
sub
dec
lods
jmp
pop
clc
lock
repz
push
jp
outsb
mov
loopne
xorl
dec
mov
sub
jge
stc
mov
cli
out
jg
xchg
shrb
mov
bound
dec
jo
pop
aam
ret
outsb
ja
outsb
pop
lret
sbb
adcb
mov
sbb
std
mov
mov
xlat
sbb
mov
es
push
jno
fisubrs
mov
dec
inc
into
out
ss
sbb
leave
add
fidivrs
cmc
mov
adc
xchg
clc
lret
cmp
out
jg
fiaddl
sbb
stos
lret
dec
imul
inc
dec
jo
in
fcmovnbe
pop
xchg
sbb
or
cmpsb
dec
or
imul
cmp
jmp
dec
dec
nop
ljmp
xchg
nop
sbb
cld
xorl
pop
sub
dec
fadd
or
xor
lds
aas
xor
mov
pusha
inc
cmc
es
roll
scas
push
xor
stos
jp
decl
cmpl
jo
outsl
jb
jne
ljmp
scas
sub
imul
jmp
shll
lret
popf
adc
js
cmpsl
hlt
xchg
xorb
lret
sub
sbb
scas
or
sub
rcll
aam
xor
mov
out
ret
pop
pop
mov
jge
rcrl
movb
cmp
shlb
adc
sub
dec
test
adc
decl
lret
sub
addr16
addr16
push
gs
jbe
in
lods
jns
data16
scas
adc
notb
fnstenv
in
stos
xchg
push
sbb
cmc
xor
scas
jecxz
mov
push
test
mov
movsl
dec
pusha
rol
mov
xchg
enter
lcall
sbb
and
or
pop
loopne
xor
and
mov
xlat
dec
xchg
popf
and
repz
sub
sbb
mov
add
xor
cmp
push
xchg
stos
test
es
es
ds
jnp
mov
sub
mov
pushf
pop
cmc
popl
or
mov
cli
into
loopne
add
cmc
jmp
addr16
push
lcall
mov
sub
imul
ret
push
dec
dec
mov
je
mov
aas
cmp
sbb
aam
pop
pop
cmp
into
rorl
add
sbb
aas
xor
fsubrl
cmp
xchg
push
lods
aad
mov
nop
movsl
jecxz
and
loope
lds
mov
bound
lret
or
mov
leave
cmp
dec
fld
sarl
add
sarb
push
inc
or
push
jp
shrb
arpl
add
push
ret
insb
xchg
inc
pop
inc
xlat
roll
dec
mov
push
fildl
fidivrs
jnp
movsl
loope
fnsave
sub
test
test
mov
cmp
cmc
scas
add
mov
mov
pop
sti
xchg
sub
push
shll
xor
sub
stc
lock
out
scas
mov
xchg
insb
pop
ljmp
jnp
push
pop
scas
fwait
mov
cmp
ljmpw
int3
push
iret
dec
cmpsb
into
pop
xchg
pop
mov
xadd
icebp
push
push
addr16
lods
lea
and
mov
adc
mov
pusha
lock
mov
cmc
dec
inc
jb
adc
cmp
or
sbb
jb
cmp
push
mov
stc
clc
push
fwait
and
mov
xchg
int3
aad
cltd
mov
dec
xchg
xchg
loope
pushf
cmp
rclb
ret
adc
inc
fbstp
xlat
ret
in
addl
inc
or
mov
vcvttpd2dq
mov
adc
sbb
outsb
add
or
dec
adc
stos
dec
xor
pushf
sbb
xchg
push
xlat
pop
inc
arpl
sbb
cmp
mov
sbbb
pop
btc
out
loope
in
inc
ss
dec
les
mov
out
fwait
and
bound
jbe
xchg
pusha
jg
jle
aas
cltd
lret
xorl
sbb
lock
jle
mov
mov
adc
mov
sbb
cmp
inc
jnp
hlt
sub
xchg
add
push
dec
xlat
aas
pusha
fwait
add
jmp
scas
stc
in
lret
adc
clc
and
mov
fidivl
xor
inc
dec
je
movsl
in
and
dec
mov
daa
cmp
mov
jecxz
loope
stos
xchg
arpl
gs
mov
xchg
out
dec
lods
mov
lock
sub
popf
js
in
popf
xchg
leave
das
aaa
pop
pop
pushf
push
push
mov
les
call
cmp
sub
pop
pusha
ficoml
push
in
pop
pop
mov
cmp
out
stos
cmp
lret
xor
xchg
and
xor
or
pop
movsl
je
mov
cmpsl
or
inc
sub
in
dec
ja
nop
in
mov
popa
cmp
sti
movsl
xchg
aad
out
cmpb
in
xchg
pop
sahf
or
gs
sbbl
mov
jmp
inc
mov
loop
aaa
icebp
pop
dec
mov
out
sbb
inc
adc
sub
mov
fwait
hlt
rcll
push
sbb
and
jecxz
mov
mov
sti
in
adcl
and
cmp
sub
sarl
dec
fsubl
and
test
push
and
xchg
es
xchg
adc
push
insb
mov
sbb
inc
out
loopne
adc
sub
pop
stos
push
mov
cmp
inc
repnz
jnp
sbb
aad
push
in
pop
les
sub
mov
sar
cmp
inc
pop
ret
fsubl
mov
cmc
daa
xor
aam
js
xor
in
loopne
xchg
out
adc
jae
rorb
jle
ret
or
pop
mulb
movsb
cmp
mov
lret
lods
pop
and
xchg
stc
outsl
jnp
jbe
push
and
ds
ljmp
arpl
scas
xor
aam
lcall
push
inc
dec
push
out
in
add
ds
icebp
inc
jge
or
inc
sbb
addb
jb
and
nop
dec
dec
cwtl
pop
call
or
xchg
add
shlb
xor
push
imul
dec
adc
lret
shll
popa
xor
aaa
pop
je
cmpsb
xorb
push
cmpsb
test
ja
cs
jp
xor
dec
sub
jg
in
cmc
popa
mov
mov
pop
hlt
inc
les
cmpl
jns
jne
and
mov
push
mov
mov
lds
movsb
cmp
dec
stos
cmp
mov
push
adc
xchg
es
into
daa
dec
and
cmp
bound
and
and
cmp
push
sub
out
mov
popf
int3
push
sub
xchg
xchg
outsl
flds
inc
mov
idivl
js
mov
mov
xchg
sub
cltd
adc
mov
and
cmp
popa
adc
mov
xlat
std
jbe
mov
test
sub
test
rclb
xchg
mov
cmp
push
push
arpl
mov
or
fidivrl
add
mov
mov
push
out
fsubr
dec
inc
push
xor
dec
and
jl
aaa
push
push
iret
sahf
mov
and
mov
lret
cmp
testb
or
mov
mov
dec
sbbb
mov
ret
sub
add
cmp
js
or
movsl
pop
jl
ret
out
insb
fimull
and
inc
jp
scas
fiaddl
in
stc
mov
cmc
ret
mov
xchg
push
or
pusha
jl
jo
ldmxcsr
adc
dec
sbb
lea
push
imul
or
or
fildl
dec
mov
aaa
push
sbbb
push
xchg
fwait
pushf
in
jmp
inc
dec
lret
sub
addr16
xchg
pop
or
inc
int3
pop
lret
inc
mov
and
xrelease
and
aas
push
add
dec
mov
pop
xchg
lcall
testl
test
mov
mov
add
icebp
inc
jae
test
movsb
cmp
pop
das
in
fstps
fcompl
xchg
out
pop
dec
inc
popf
mov
mov
xor
cmc
lods
insb
aam
sub
push
push
sahf
mov
popl
test
or
rorb
addr16
add
jmp
mov
lods
lock
pop
and
das
dec
mov
pop
sbb
mov
mov
mov
lahf
scas
fsts
stc
or
sub
and
mov
je
xchg
inc
lret
inc
lds
test
fsub
and
push
pop
outsl
add
inc
xor
jmp
mov
pusha
scas
or
scas
lock
push
sub
outsl
mov
int
clc
popf
stos
dec
dec
jnp
pop
aam
push
mov
test
push
imul
lds
icebp
jnp
cmpsl
or
push
loop
leave
xchg
scas
jle
inc
das
lret
mov
daa
sbb
mov
xchg
cmpsl
xchg
out
call
sbb
adc
in
xor
jle
inc
xor
inc
cld
mov
movsb
fcom
fidivrs
push
aas
add
je
adc
lods
push
pop
outsb
sbb
add
adcb
or
dec
sbb
xchg
aad
pop
mov
push
ret
outsl
cmp
nop
leave
adc
loope
scas
jp
cmp
ret
pop
stos
cli
mov
push
xchg
dec
adc
or
inc
or
mov
loopne
xchg
dec
xchg
or
or
in
xchg
mov
das
add
xchg
adc
scas
cmp
jmp
int
outsb
xor
pop
movsl
imul
and
dec
mov
je
imul
add
pop
ss
cmp
sbb
adc
mov
stc
mov
push
mov
outsl
mov
lcall
gs
xchg
popa
dec
ss
movsl
cmp
in
lret
pop
mov
sbb
js
pop
and
pop
in
sahf
cmpsb
shr
xor
iret
add
pop
mov
inc
xchg
or
fisubrs
out
sbb
lret
cmc
dec
push
inc
push
in
mov
rclb
rorl
jge
pop
cmpsl
sub
xor
loope
mov
stos
xchg
in
and
popa
push
cwtl
pop
mov
lret
aas
test
xchg
stos
push
dec
in
add
aaa
and
das
scas
inc
insl
sbb
adc
aad
dec
push
dec
xor
pop
movl
push
popa
sbb
enter
sbb
incb
pop
mov
bound
pop
push
jbe
aaa
fadds
cwtl
sti
hlt
lret
sub
mov
dec
data16
sbb
and
and
leave
dec
xor
sub
mov
or
daa
mov
cli
adc
shl
dec
mov
fnsave
hlt
mov
enter
mov
xchg
xchg
xchg
jns
add
sub
pop
cmpsl
and
or
mov
mov
fs
ss
sub
mov
fadds
loopne
into
mov
fistps
pusha
and
sub
addr16
jbe
mov
sub
rcr
stc
pop
fistps
fcoms
adc
inc
sub
xor
mov
mov
aad
or
sbb
leave
inc
roll
cmp
mov
fmul
and
pop
cmp
insb
fisubl
lea
jp
push
push
pop
dec
jge
std
adc
pushf
lcall
ret
xchg
sub
mov
dec
sbb
loop
xor
inc
xchg
jl
pop
sub
jecxz
cmp
xlat
pop
push
pop
push
test
mov
mov
fidivrs
or
sbb
iret
ss
dec
imul
popa
xchg
dec
jbe
add
fstpt
outsb
xor
dec
dec
loopne
in
faddl
cmpl
jb
mov
fildl
orl
dec
and
mov
lahf
ja
sbb
das
or
xorl
bound
std
rcl
mov
cmpsb
push
push
mov
sarl
push
call
xor
les
mov
rcrl
push
dec
icebp
push
push
ja
cwtl
dec
inc
pusha
mov
popl
hlt
cld
arpl
or
pushf
insl
loopne
or
adc
mov
push
xchg
sbbb
aas
into
icebp
sbb
pop
push
out
push
ret
mov
inc
adc
lea
cwtl
outsb
xor
add
pop
and
enter
mov
mov
ret
out
jae
imul
inc
mov
jbe
fbstp
cs
out
inc
mov
ret
adc
mov
std
adc
clc
test
outsb
scas
fistpl
xchg
mov
call
jp
xchg
rcll
lahf
dec
std
mov
mov
pop
fwait
stos
xchg
xor
or
and
inc
fs
div
xchg
or
xlat
jns
clc
nop
adc
xor
xor
mov
roll
add
cmpl
dec
pop
mov
nop
ds
adc
add
push
push
jecxz
aam
dec
adc
and
sti
inc
xchg
sub
dec
push
int3
xchg
daa
in
ja
mov
out
hlt
adcb
mov
out
dec
ds
dec
mov
stos
mov
test
mov
mov
imul
out
mov
les
pop
jo
jp
xchg
insl
mov
lahf
mov
scas
orl
lahf
jl
call
mov
mov
addr16
lahf
outsb
add
fsub
xchg
cmp
lea
pop
nop
inc
adc
mov
ss
jle
mov
shll
and
lea
jae
adc
inc
aas
push
loopne
pop
and
cwtl
int
push
cmp
loope
pop
xlat
outsb
adc
mov
std
imull
dec
push
jp
rep
sub
mov
pop
je
mov
mov
cld
daa
orl
jns
push
mov
fs
pop
fs
mov
adc
jecxz
cld
jecxz
cmp
jecxz
rcll
shll
std
push
in
adc
sub
mov
cmp
mov
inc
sbb
cmp
mov
xchg
fxch
xlat
test
and
mov
sub
push
cmp
insl
ficomps
test
mov
pop
cmp
fisttps
mov
or
jno
fcmovnb
aad
insl
mov
int
lret
repz
in
mov
dec
sub
mov
push
pushf
adc
and
sub
lret
shlb
lock
jbe
aaa
loope
inc
jb
shll
sub
fwait
pop
push
repz
mov
daa
out
imul
mov
imul
sub
adc
adc
stos
sub
mov
or
pop
negb
push
in
jmp
out
divl
dec
pop
adcb
out
mov
sub
imul
movsl
cld
sub
jno
dec
movsb
cmp
mov
fildl
decl
xchg
mov
out
stos
push
fs
call
aad
sub
xchg
mov
std
shrl
lds
ja
push
mov
and
je
sbbb
jnp
loope
mov
out
mov
push
jb
push
pop
arpl
and
inc
mov
or
fcmovnbe
jns
push
shll
lock
pop
stos
loop
or
jl
push
loop
and
mov
icebp
ja
jmp
mov
mov
mov
nop
and
jge
ds
mov
cmpsb
adc
mov
cmp
movsb
shrb
and
fildl
adc
push
ljmp
stos
gs
mov
iret
data16
fsubs
out
addb
xor
push
mov
dec
inc
and
jl
mov
inc
mov
hlt
dec
cwtl
push
sub
or
fisubrl
jns
mov
cmp
xor
push
mov
lret
add
es
or
xchg
cmpsb
pop
js
inc
sub
fwait
in
cmpsb
shl
cmp
ficoms
jp
insl
mov
sub
jg
sbb
mov
lds
lods
cli
idivb
bound
das
pusha
and
insl
mov
push
lock
sbb
popa
add
lret
rcrb
stc
test
mov
mov
cmp
movsb
cs
in
cs
ret
mov
into
xchg
bound
dec
mov
rorl
push
cs
cmpsb
fsubs
adc
inc
mov
mov
popf
lahf
push
lcall
xchg
jns
out
sub
aas
mov
addr16
inc
sbb
out
sarb
cmpsl
xchg
xchg
cmp
enter
nop
or
pop
pushf
test
or
inc
fstpt
mov
push
cld
test
mov
mov
gs
clc
mov
or
jp
outsb
adc
std
out
push
iret
or
mov
mov
aas
shl
dec
ficomps
pop
mov
adc
stos
aaa
xchg
insl
icebp
cltd
hlt
mov
outsb
mov
mov
adc
push
mov
adc
push
mov
push
cltd
sub
pop
in
jns
xor
add
or
test
lods
push
repz
stos
scas
jl
in
dec
cli
cltd
sub
cmpsb
fisubrs
xchg
push
in
sub
add
stos
jecxz
out
xor
mov
call
out
stos
dec
lock
jne
pop
inc
jo
adc
scas
push
mov
sbb
lahf
cmp
inc
pop
rcll
adcl
jno
shrl
xchg
jmp
std
lahf
cmp
jge
jbe
xor
incl
inc
popa
fisubs
mov
inc
bound
xor
outsb
dec
jbe
fildll
dec
jo
std
outsl
sbb
pop
stos
mov
push
sti
imul
xchg
fcompl
cli
jnp
cmp
xor
xchg
jecxz
adcb
cmp
insb
jle
andl
xchg
sub
mov
rcl
xor
dec
in
cmp
xor
push
fwait
and
cmp
cmpsl
cmp
ret
out
or
outsb
push
cmp
dec
fcomi
loopne
cltd
mov
jge
mov
outsb
ror
insl
dec
pop
sub
enter
sub
loop
pop
shll
xor
icebp
pop
inc
mov
xchg
pop
mov
mov
fnstsw
in
in
cmc
mov
fdivrs
xor
jae
cmc
lret
mov
add
jns
bound
xlat
xchg
int3
jbe
push
push
mov
pop
leave
lods
ljmp
es
cmp
stos
stos
and
jge
aad
ret
push
shrl
adc
ja
enter
and
xchg
lds
loopne
fcompl
pop
dec
jecxz
mov
outsl
jle
xor
and
adc
orb
xor
inc
cs
jnp
sbb
dec
or
cmp
gs
data16
fnstenv
pop
lea
inc
push
cmp
mov
cmpb
aaa
ret
js
outsl
jnp
sbb
outsl
cli
xchg
movsb
fwait
mov
add
mov
push
inc
cmp
xchg
rorl
loope
xor
roll
js
out
xor
xchg
sub
decl
mov
dec
sahf
shll
test
xchg
jl
xchg
cld
adc
cmc
push
cltd
out
std
cmpsb
jno
jno
pop
jl
xlat
dec
push
mov
dec
das
dec
mov
aaa
incl
or
daa
movsb
iret
cmpsb
adc
sub
xchg
cmp
js
push
sbb
lock
popa
inc
cli
push
fnstsw
rorl
lea
adc
sub
mov
cmc
imul
in
mov
bound
sti
out
xchg
mov
adc
js
jno
fwait
xor
call
xchg
cmp
mov
fdivrs
dec
fstpt
lret
xchg
jbe
clc
add
and
ret
mov
fmul
mov
jns
xor
arpl
sbb
les
adc
pop
lods
jmp
ljmp
outsl
aaa
out
sub
add
ret
cmovbe
mov
pop
sbb
repnz
xchg
push
das
ficoms
scas
sub
sub
xchg
jnp
mov
pop
sahf
les
fdivl
fucom
mov
in
and
cmp
dec
xor
popf
in
imul
mov
aas
push
adc
sub
inc
add
pop
int
icebp
ss
sbb
dec
and
shl
or
and
adc
push
push
fists
sub
jl
out
xor
sbb
fistl
cmp
mov
mov
cmp
dec
mov
dec
mov
fsubr
push
in
loope
mov
test
rcll
aaa
scas
das
pop
mov
movsl
push
aad
lock
ja
ds
sub
push
test
imul
push
or
pop
outsl
loopne
bound
sti
stc
test
lret
xlat
fcmovb
sti
imul
mov
xchg
aad
std
test
faddl
lock
movsb
jg
shrb
pop
movsb
pop
lret
movsb
mov
add
cmp
or
or
lods
sbb
das
fsubrp
popa
xor
push
xlat
mov
ds
fwait
sahf
cld
insl
pop
jp
cmpsb
test
fdiv
insb
mov
xor
cltd
push
mov
inc
push
mov
fisubrl
cmp
push
dec
or
jb
lds
pop
outsb
mov
xchg
imul
mov
inc
xlat
cmp
cs
add
lret
add
shrb
jl
fldcw
xor
add
sbb
push
mov
les
movsl
pop
mull
cmp
xchg
xor
inc
mov
imul
clc
mov
aaa
xchg
and
rcl
jecxz
or
add
lcall
cltd
pop
cmp
aad
mov
jbe
push
pop
ficomps
js
sarb
ljmp
mov
push
icebp
flds
jnp
adc
sub
mov
sbbb
sti
popf
cmp
aas
cli
aaa
xor
mov
pop
je
ja
js
push
lds
lahf
add
fiaddl
stos
mov
mov
repnz
pusha
fcmovu
jne
pop
mov
sub
loop
insb
psrld
out
cmp
rol
jg
std
xchg
sub
loop
cmp
sti
mov
or
pushf
xchg
arpl
jg
popa
test
cmpsb
jne
jp
out
adc
jmp
add
int3
xchg
orl
loope
add
outsb
cmp
hlt
cmp
dec
push
out
pop
xchg
push
sub
leave
or
jo
xor
adc
mov
lea
sbb
lahf
pop
xchg
shlb
sub
jmp
adc
jge
fldcw
js
or
xchg
arpl
enter
or
push
jo
add
jno
mov
fistps
push
and
jmp
push
dec
enter
outsb
loope
int3
inc
and
pushf
or
sbb
cltd
pop
and
insb
sub
je
stc
mov
dec
mov
mov
into
mov
jno
mov
mov
cmpsl
mov
mov
mov
add
jnp
mov
cmp
bound
push
dec
test
out
jne
fucomp
jo
push
and
pop
dec
adc
ret
sbb
xor
sbb
jo
pusha
jecxz
mov
xor
sub
ss
lret
leave
pop
push
mov
rolb
cmp
jecxz
hlt
inc
add
and
sub
xlat
addl
mov
and
pop
scas
clc
push
mov
leave
sarb
lret
testl
mov
lret
push
pop
enter
jbe
les
cmpsl
sub
or
cmpsl
loope
js
push
jno
xor
ja
or
xorb
push
out
insl
int3
adc
ja
roll
cld
mov
outsb
pop
sbb
mov
pop
mov
jns
roll
pop
sbbl
mov
mov
or
mov
cmpsb
movsl
or
stos
ss
sbb
pop
jge
aam
cmpsl
push
jge
and
jnp
jl,pn
jmp
rolb
mov
dec
add
out
insl
es
ret
pop
sahf
addb
popf
dec
out
icebp
xchg
pop
mov
and
gs
je
sub
fabs
push
sbb
lret
sarb
repnz
add
mov
shrl
add
inc
ficoml
and
fisubl
pushf
in
fiadds
test
rcrb
jbe
int
and
movl
xor
and
pop
or
add
stc
lea
ret
rorb
xchg
popf
push
mov
das
lret
inc
call
scas
cmp
mov
std
popf
or
test
sub
mov
push
arpl
std
pop
pusha
shlb
mov
xlat
lret
cmp
xchg
or
aas
mov
in
mov
jge
sahf
std
xor
and
stos
fisttpl
outsl
mov
testb
stc
call
aam
data16
jmp
pushl
xchg
lods
xchg
pop
and
xor
aaa
mov
outsb
aam
or
mov
lea
in
xchg
cmpsb
and
or
inc
inc
fdivrs
mov
mov
push
mov
int3
xor
imul
pop
gs
movsb
mov
repz
ljmp
jp
mov
call
push
mulb
and
adc
icebp
and
dec
lret
sbb
dec
adc
les
aas
add
push
sub
test
test
mov
iret
dec
sbb
jmp
sbb
cmp
mov
mov
cltd
movsl
and
mov
cmpsl
jmp
shll
clc
cmp
lret
ja
push
dec
push
lods
lods
daa
ja
push
mov
sbb
mov
push
cmp
int3
mov
or
iret
mov
xchg
lods
xchg
inc
jl
stos
jnp
testb
js
mov
out
push
mov
fsub
dec
lock
lret
jge
cmp
dec
sti
pmaxub
or
jae
inc
cmp
cwtl
mov
xchg
aam
xchg
jmp
dec
fistl
fcomps
popa
mov
aad
stc
stc
ret
js
pop
or
lea
mov
or
xor
repz
in
xchg
lods
push
jmp
sbb
ss
cld
jbe
xchg
dec
xchg
cmc
jnp
jb
inc
nop
dec
adc
cmp
mov
inc
es
jo
xlat
and
lock
movsl
sub
lret
xchg
jns
sbb
jno
out
enter
cmpsl
push
dec
push
dec
mov
push
mov
sahf
cld
inc
mov
decl
arpl
mov
add
pop
inc
pop
jbe
jno
div
jbe
lock
or
xchg
out
ja
fbld
pop
loopne
outsl
leave
imul
dec
shlb
in
pop
sti
adc
lret
leave
adcb
mov
jecxz
and
cmp
add
push
sub
test
in
leave
stos
mov
lcall
push
daa
push
je
movsb
xchg
or
clc
negl
movsb
fdiv
lods
jns
pop
sbb
cmp
test
hlt
stos
sbb
mov
add
in
xchg
out
icebp
push
filds
mov
nop
dec
shrb
xor
pop
adc
fdiv
lods
xchg
aas
inc
data16
lahf
fcoms
jecxz
sub
jno
mov
push
sub
stos
inc
les
out
sbb
mov
je
mov
sarb
ljmp
or
lcall
xchg
nop
adc
cltd
sub
inc
cli
inc
xchg
sub
and
inc
cli
scas
dec
insb
in
push
arpl
bound
orl
push
push
xchg
out
in
sbb
sub
insb
mov
sahf
add
pop
fcmovnbe
pop
test
shll
mov
aaa
lret
jecxz
mov
jns
jge
jle
fsubrl
iret
push
movsb
cmc
xchg
cmpsb
es
mov
xchg
cmp
cmp
pop
test
xor
adc
mov
push
jmp
mov
ret
aas
lods
jo
adc
push
test
out
fmuls
daa
add
rcll
jne
adc
dec
lock
add
jg
fdivr
clc
and
dec
xchg
fisubs
aam
rorl
fcompl
addb
js
jp
push
test
gs
inc
and
aad
sbbb
jecxz
mov
jno
cltd
cmp
inc
je
lret
insb
cmp
subb
out
dec
jl
cmp
add
push
mov
sub
jge
sbb
and
pop
push
inc
xor
mov
mov
stc
adc
sahf
add
jo
mov
out
addr16
push
push
mov
jno
jl
push
das
jb
ret
int
aam
adc
sub
xor
in
test
adc
nop
pop
push
enter
mov
mov
lds
das
ffree
lds
scas
icebp
jmp
fisubs
pushf
mov
dec
imul
xorb
aas
cmp
mov
adc
jp
mov
pop
pusha
enter
add
xor
test
pop
stos
es
loope
movsl
jmp
loop
mov
mov
loop
adc
imul
fstpt
gs
and
test
stc
cli
sbb
out
jg
shlb
loope
sbb
mov
lahf
sarl
inc
orb
addr16
pop
sub
inc
xor
mov
add
mov
repz
call
or
xchg
sub
in
shll
pop
sbb
fidivl
incb
out
inc
dec
loop
movsb
jo
int3
push
xorl
lcall
push
push
push
loopne
repz
mov
push
pop
xchg
in
or
lea
ss
ljmp
cmp
mov
lods
lods
pop
mov
inc
sub
inc
push
loop
mov
test
mov
shrl
jb
sbb
xor
inc
cmp
jnp
cwtl
popf
inc
arpl
addr16
lods
mov
in
testb
dec
jg
fstps
mov
mov
rcrl
pop
mov
aaa
mov
mov
and
divb
jecxz
andb
ret
fwait
addr16
cmpsl
pop
or
push
sub
lea
pop
jmp
test
test
testl
popl
ret
push
ror
sarb
mov
xor
mov
pop
pop
in
cmpsl
mov
hlt
mov
loopne
cltd
jg
or
sbb
aad
xchg
mov
and
mov
push
arpl
inc
in
insl
fadds
scas
out
push
rcl
pop
or
ss
out
fisubs
divl
xchg
insb
in
loop
les
and
or
rol
pop
int3
gs
stos
stos
cli
inc
mov
pushf
je
out
cwtl
and
orb
ss
pop
in
ffree
out
xor
ficomps
mov
rclb
inc
ret
das
fmuls
mov
cmp
adc
imul
inc
scas
mov
lods
mov
out
push
fisttpll
fldcw
pop
ss
and
mov
test
mov
inc
popf
mov
mov
adc
pop
mov
cli
and
fildll
ja
and
loopne
loopne
inc
clc
jmp
pop
inc
insb
jns
push
and
cltd
addl
pop
and
mov
dec
xorb
jno
ret
call
pop
popf
mov
add
fcmovbe
out
std
ljmp
dec
cmpsl
xor
dec
mov
mov
jg
setno
in
repz
aam
sbb
orb
pop
xchg
adc
aad
sbbb
nop
icebp
inc
mov
sub
shll
xchg
sbb
adc
ljmp
push
dec
jae
hlt
cmp
dec
icebp
jnp
mov
call
add
dec
dec
movsl
int
jo
add
cwtl
mov
mov
andb
adc
xchg
push
mov
loope
repz
int
jg
sub
and
movntq
jns
dec
xlat
mov
pop
ja
jne
pop
loop
xchg
push
sbb
roll
xchg
mov
mov
gs
shl
mov
sbb
sbb
lods
addb
fldcw
jmp
or
das
std
cmp
cmp
jnp
xchg
push
adc
cmp
push
sub
in
mov
loop
or
out
cmpsl
out
inc
mov
rclb
js
dec
dec
shll
xchg
push
lea
mov
jecxz
dec
aaa
fwait
adc
xlat
pop
hlt
pop
adc
cli
pop
clc
lock
shrb
mov
pop
gs
jl
sbb
ljmp
push
repz
or
scas
out
cmpsb
aaa
cmpb
sbb
out
pop
jecxz
pop
fisttpl
pop
dec
movsb
aad
cld
jg
dec
push
in
mov
add
jge
ja
repnz
or
and
push
add
inc
sbb
outsl
nop
dec
push
dec
xor
mov
loope
mov
cli
xor
mov
test
das
mov
ja
adc
mov
dec
or
inc
xor
mov
inc
std
fidivrl
mov
sub
jle
xchg
cmpsb
pushf
lret
mov
rclb
and
std
loopne
add
mov
mov
rclb
movsb
scas
incb
pop
and
bound
data16
das
inc
or
ret
rcrb
aaa
roll
sbb
adc
add
loope
xchg
inc
or
ret
inc
xor
pop
sbb
enter
push
jp
xor
es
mov
cmp
out
imul
in
pop
addr16
sti
cli
jns
call
int3
jae
inc
push
mul
dec
push
clc
lods
mov
jo
ds
push
inc
adc
.byte
sbb
xor
cltd
xchg
cwtl
add
mov
fwait
add
test
pop
mov
mov
ret
push
out
out
inc
jp
and
mov
gs
out
jbe
xchg
icebp
pop
aaa
or
imul
sbb
cs
xor
adc
xchg
fchs
add
cld
jns
int
inc
or
cmp
out
and
je
decl
aas
arpl
fisttpll
popl
cli
fistpll
notb
or
ljmp
add
pop
sub
fiadds
lods
ds
dec
sarl
cltd
xchg
push
mov
ds
dec
cmp
pushfw
cmc
out
lcall
jl
daa
xchg
test
icebp
sub
sarl
push
lahf
fnstenv
js
push
mov
mov
enter
add
testb
adc
jno
pop
int
jg
or
fsubrs
xchg
add
addr16
mov
fucompp
inc
daa
pop
sarb
sbb
jp
stos
jp
jle
shll
push
lahf
stc
and
mov
inc
jo
std
mov
popa
mov
xchg
cmp
mov
jns
pop
decl
add
test
sbb
pop
out
or
lret
divb
inc
je,pt
mov
cmpsl
pop
dec
xor
jns
call
out
xchg
ss
jecxz
in
cmp
fwait
pop
inc
out
inc
adc
adc
cmpsl
mov
insb
xor
jle
xor
insl
movsl
adc
xor
cltd
push
inc
lret
leave
and
and
inc
jns
loop
ret
push
xor
repnz
sbb
inc
dec
cmp
adc
ljmp
xor
cmp
adc
in
orb
daa
and
push
fdivrs
mov
mov
xchg
mov
xchg
pop
push
mov
dec
lcall
mov
jge
fs
repz
add
rcrb
push
and
sbbl
out
scas
fbld
jmp
icebp
notb
or
xchg
push
ds
lea
fisubs
push
insl
cmp
xor
dec
in
decl
lods
pop
test
or
jge
jne
dec
fisttps
jae
mov
loopne
adc
sbb
flds
xor
push
dec
jge
pop
icebp
icebp
mov
rcrl
add
test
test
pop
sbb
popf
jle
fnstenv
test
ds
in
shll
scas
cmp
ret
add
mov
pop
in
and
nop
test
xchg
mov
popf
mov
repnz
xor
mov
dec
cmpsb
aaa
loope
mov
loope
popa
or
rol
sti
stos
in
bnd
inc
sti
and
xchg
adc
adc
test
movsl
or
push
mov
pop
xlat
xor
das
push
push
enter
pop
mov
or
or
ffreep
or
pop
xchg
js
mov
int
sub
mov
or
xor
xorl
popa
xchg
pop
ss
test
or
rolb
add
push
gs
in
ljmp
fldcw
enter
mov
cmp
repnz
imul
clc
cli
and
and
pop
jns
ljmp
add
iret
test
push
loop
out
les
frstor
loopne
pop
rcr
enter
loop
cmp
fsubrs
scas
jge
jno
jnp
cmp
enter
cmp
push
loop
iret
lods
dec
xchg
mov
push
sar
cmp
mov
mov
jg
or
mov
xor
or
xchg
imul
arpl
adc
outsl
bound
int
sbb
std
jge
in
xor
pop
clc
push
push
loop
in
mov
push
pop
pop
xor
jb
or
mov
sub
gs
in
bound
xor
pop
rcr
addr16
cmp
push
inc
sbb
lret
js
cmp
pop
addr16
adc
das
nop
adc
dec
in
add
jl
xor
bound
mov
pushf
lock
fs
cmpsb
xchg
xorl
add
scas
mov
adc
cmc
fs
mov
jns
fsub
mov
bound
andl
lret
pop
mov
jb
sub
adc
jp
repz
mov
xchg
push
scas
push
push
das
cmp
sbb
add
lods
pop
imul
ja
roll
xchg
loopne
sbb
mov
daa
pop
movsl
les
xlat
or
sub
mov
fwait
jl
add
into
test
inc
int3
xchg
movb
cs
bound
mov
sbbl
adc
loop
inc
int
leave
jb
add
fmull
jg
add
inc
sbb
and
mov
nop
push
das
push
sarb
push
push
rcl
mov
out
lods
out
xchg
jge
lret
cmp
sub
dec
adc
ljmp
negb
mov
cld
cmc
cmp
fsubrl
push
das
icebp
inc
and
popf
cmp
popa
or
cmp
cmp
or
add
and
out
cmp
scas
add
lods
push
sbb
jmp
jne
icebp
in
mov
lods
out
test
jnp
jle
mov
outsb
xchg
inc
jne
aaa
imul
or
jl
into
pop
sub
adc
lret
rorl
mov
xchg
jae
push
mov
xchg
push
pop
addb
pop
shll
add
cmp
and
arpl
mov
or
lds
nop
or
mov
test
loope
cwtl
outsb
jne
cltd
adc
cmpb
rclb
or
push
dec
or
andb
cmp
fisttpl
jmp
pop
lods
popa
mov
jno
adc
pop
fmulp
test
rol
insl
inc
je
xchg
or
dec
ja
sub
pop
repz
loop
leave
clc
clc
xor
cs
fnstsw
mov
clc
xchg
cmp
sti
lahf
xchg
or
push
inc
outsb
or
push
mov
stc
ror
inc
out
lret
sbb
mov
lock
popa
imul
adc
lcall
jnp
fbstp
sub
push
test
cmp
out
mov
testl
sub
fcoml
sub
fadds
add
call
cld
int3
loop
cmp
lock
push
and
pop
rclb
add
repz
mov
and
lea
test
and
test
mov
mov
std
cmp
into
nop
xchg
fldl
movsb
enter
cmpb
xchg
ret
imul
xor
adc
movsb
mov
imul
pusha
pop
nop
add
movsb
popa
dec
push
adcl
ficoms
mov
lahf
repnz
add
jae
int
pop
xchg
mov
cwtl
push
repz
xchg
jb
cmp
xchg
push
cmp
stc
adc
arpl
mov
push
daa
cmp
inc
scas
jns
mov
in
fldt
mov
sbb
mov
jecxz
sub
push
jecxz
dec
pop
rorl
xchg
mov
add
add
daa
xor
sub
jmp
pusha
or
dec
push
rcr
hlt
aad
fsubr
test
push
or
xchg
adc
dec
into
sub
pop
ret
aaa
fstpl
mov
xor
and
dec
in
push
mov
shll
sbb
sbb
test
inc
push
sbb
inc
cmp
ret
es
inc
ret
fnstcw
out
cmp
or
push
stc
sbb
mov
jecxz
fs
je
pop
insb
mov
xor
bound
bound
cs
ds
sbb
scas
pop
sti
in
adc
pop
das
pop
xor
jle
mov
mov
jno
xchg
ss
popa
movsl
scas
sub
mov
fmull
mov
loop
mov
adc
dec
ficompl
gs
pop
repz
movsl
jb
out
pusha
mov
jp
cmp
xchg
jo
loope
push
xchg
mov
pop
add
aad
stc
mov
lds
loop
push
imull
aam
jns
roll
dec
inc
cld
into
xchg
ret
loope
out
or
cltd
add
in
movb
arpl
inc
ss
push
xlat
insl
arpl
mov
outsl
movsb
pushf
lods
sbb
xchg
or
sti
imul
jle
sub
mov
push
xor
cs
adc
add
sbb
jl
cmc
je
adc
cmp
mull
xchg
out
jnp
and
repnz
mov
sbb
in
pop
cltd
xchg
jge
icebp
and
lea
pavgb
cmp
mov
jecxz
xchg
outsl
and
jne
les
lea
lock
inc
int
pop
ret
lods
loopne
leave
jge
pop
sub
xchg
inc
mov
call
aad
ds
test
mov
mov
movsb
stc
les
xchg
mov
mov
mov
fistps
scas
jl
adc
pop
xchg
or
and
and
stc
repz
xchg
inc
int
clc
cmp
enter
adc
in
dec
and
rorl
inc
lock
dec
aaa
lods
sbb
loop
in
pop
push
mov
dec
adc
aad
xor
cmp
and
dec
outsl
popf
es
rorl
inc
jmp
mov
fidivl
jg
mov
fisubrl
aam
mov
mov
lds
jmp
inc
adc
imul
bound
sbb
repnz
dec
push
jae
pop
jnp
jns
test
sbb
mov
push
pusha
in
push
pop
push
es
adc
inc
add
sbb
outsl
fistpl
dec
sub
int3
sub
loop
xor
dec
mov
mov
aam
decl
pop
sub
imul
stos
mov
mov
sbb
scas
mov
sbb
fdivs
dec
fcomip
stos
push
pop
iret
dec
jge
jl
lret
lock
xchg
pop
inc
aas
stc
xchg
xor
dec
jecxz
cli
sbb
lret
inc
jecxz
stc
xor
rclb
dec
jno
rcr
push
fisttps
mov
cmp
push
jmp
and
jmp
xor
or
pop
dec
bound
clc
push
mov
mov
lcall
lret
xchg
and
or
repnz
mov
xor
shlb
cmp
xor
push
pop
decl
stos
fwait
ret
shll
mov
out
dec
cwtl
fdivrs
inc
ss
call
roll
pop
pop
fmul
loope
push
inc
dec
ret
je
adc
sub
bnd
cmpsl
inc
mov
cs
jnp
sbb
add
les
shl
in
and
cmp
repnz
mov
out
out
sbb
xor
fnsave
gs
scas
inc
mov
je
inc
ljmp
xor
movsl
or
jbe
leave
mov
imul
addr16
lcall
cmp
cmp
ret
mov
push
sub
xchg
sub
mov
into
add
lods
push
call
jb
sub
das
xor
aad
mov
mov
scas
or
or
or
mov
adc
push
inc
cmp
mov
sbbl
shl
and
push
repnz
fcoml
addl
insl
sub
sbb
cmp
add
cmp
dec
inc
fs
out
je
ss
mov
decb
addr16
push
sbb
testl
mov
jl
ljmp
jns
daa
jle
inc
frstor
jmp
add
fstl
jo
aas
negb
insl
add
test
sbb
repnz
pop
mov
mov
ja
pop
jmp
mov
cltd
repnz
loop
repz
mov
test
stc
xor
inc
push
pop
mov
jp
pop
push
lods
cli
or
mov
cmova
mov
or
insl
insb
and
movsl
xchg
mov
imul
pushf
pop
pop
adc
pop
push
cmp
test
mov
adc
mov
mov
fistpll
xchg
mov
shlb
les
sbb
gs
mov
jb
pop
mov
ret
mov
fstpl
fs
call
jo
or
ret
cltd
lahf
mov
into
inc
xor
test
jnp
cmpb
jmp
push
inc
leave
xor
cld
jo
sahf
dec
es
int
mov
mov
lods
cltd
jb,pt
adc
pop
aas
mov
mov
ret
addr16
dec
lods
cmpsb
jge
vhaddps
push
rorb
adc
enter
push
popa
mov
cltd
mov
and
lods
std
xchg
enter
rcrl
jbe
push
cmp
xor
cwtl
lds
shlb
outsb
jp
xchg
push
cmp
mov
mull
adc
and
clc
add
jns
mov
dec
pop
pop
sbb
nop
add
loop
dec
sbb
imulb
or
add
cmpsl
das
sbb
fbld
in
fs
addr16
pop
adc
clc
dec
adc
lods
fisttpll
int3
enter
sbb
mov
cmp
mov
cmp
inc
add
mov
shlb
jg
sarl
add
pop
ljmp
je
fs
je
mov
mov
std
or
mov
ret
dec
mov
sub
lea
jo
xchg
je
mov
lea
pop
xchg
pop
pop
xor
and
repnz
mulb
jo
cmp
mov
es
sub
dec
in
mov
push
sub
cmpsb
fistpl
in
sub
and
sub
push
jnp
repz
pop
inc
mov
xchg
loope
je
imul
clc
mov
out
rcrb
dec
int
orl
cmpsb
sar
pop
sbb
xlat
sub
sti
mov
nop
xor
jge
aam
jbe
ja
insl
jmp
orl
jp
rorl
mov
orl
xor
push
in
mov
out
cmp
mov
call
inc
push
sbb
mov
lods
add
clc
ds
shll
stc
push
popf
or
dec
js
insl
jns
ja
or
rclb
data16
sub
fwait
cmp
and
adc
cli
fwait
dec
imul
insb
inc
inc
mov
or
jl
sub
pop
cld
add
popa
fninit
mov
subb
mov
jns
sahf
cwtl
and
in
popf
cli
dec
add
push
mov
bound
mov
mov
js
jae
pusha
rcr
cld
les
outsb
aaa
int3
jmp
pop
mov
jae
sbb
inc
movsb
push
xchg
clc
jg
aas
mov
std
rolb
inc
pop
mov
mov
ret
notl
pop
into
fistl
sub
sahf
ja
fsubrs
insl
lods
stos
je
into
cmp
mov
aam
pushf
ficoms
dec
leave
in
vandnps
add
cmp
pop
dec
imul
mov
push
mov
in
rolb
mov
jo
arpl
and
decl
xchg
push
mov
jnp
mov
xchg
test
test
rcrl
aas
xor
jb
pop
add
enter
mov
mov
in
cmpsl
nop
mov
lods
and
js
int
stos
gs
adc
add
subl
pop
add
add
iret
mov
je
push
mov
pushf
jecxz
mov
add
push
ss
adc
loopne
jmp
xchg
scas
sub
out
pop
sbb
push
dec
out
pop
jb
and
add
sbb
pusha
out
ret
sub
add
inc
shrl
mov
cmp
dec
mov
mov
scas
push
jne
loop
mov
push
pop
jmp
sbb
pop
cmp
mov
xchg
lods
scas
dec
jne
inc
adc
rorb
lock
mov
sub
push
jecxz
icebp
rcpps
pop
adc
cmpsl
sub
clc
adc
repnz
mov
test
push
cs
xchg
aad
cvttps2pi
loope
add
ss
mov
xchg
movsl
jl
mov
fnstcw
or
psllq
and
xor
hlt
imul
jnp
or
xchg
popa
mov
test
mov
imul
xchg
mov
mov
stc
adc
into
out
data16
loope
gs
push
push
out
stos
or
lret
out
add
fucomip
sub
lcall
leave
and
pusha
cs
mov
dec
pop
mov
int3
rcrl
or
mov
test
adc
sahf
dec
pop
dec
rorl
dec
adc
hlt
fstpt
adc
popa
adc
loop
mov
rcr
stc
and
jl
and
push
cs
push
or
adc
leave
pop
dec
pop
sub
push
mov
jns
fsubrs
clc
andnps
addl
inc
xchg
mov
arpl
out
fs
rcrb
cmc
add
jbe
cli
or
ret
fisubl
stc
jo
dec
and
mov
inc
je
or
scas
dec
mov
add
aad
inc
lahf
cmp
stos
outsl
out
mov
mov
sbb
clc
adc
xchg
ss
ffree
push
jb
jge
jo
add
stc
mov
fists
fdivr
in
in
es
pop
mov
push
sbb
addb
adc
mov
cmc
into
popf
aaa
lea
add
ret
mov
push
mov
test
gs
lcall
lock
call
xchg
xchg
addr16
in
jbe
jnp
shrl
fwait
stc
sbb
int3
fstps
jo
push
test
call
push
aaa
pop
and
xor
stos
dec
sub
cmp
stc
xchg
mov
inc
inc
outsb
inc
mov
cmp
mov
and
push
inc
pop
jmp
gs
sub
lret
jmp
jp
or
loopne
xor
dec
and
fbld
fdivrs
fs
xchg
popf
dec
mov
inc
mov
std
mov
rcl
push
mov
mov
test
xchg
movsl
pop
int
pop
dec
push
ret
aas
sub
pcmpgtw
push
insb
out
mov
jl
pop
into
mov
ud2
mov
cli
sub
xchg
popa
ret
mov
fdivrl
and
aas
dec
pop
imul
push
dec
and
push
cmp
sub
out
sbbb
jno
adc
jmp
cmp
push
and
loopne
xor
cmp
je
rorb
jl
scas
movsl
and
int3
jae
and
outsb
push
fisubrs
jbe
push
add
fsubl
mov
movsl
jbe
mov
jp
dec
cmc
or
data16
rolb
adc
lahf
xor
popa
cmp
clc
or
mov
rol
sbb
cld
test
inc
mov
subl
stos
arpl
cwtl
mov
ljmp
addb
jecxz
lds
pop
leave
lret
andb
inc
cltd
ret
push
into
cli
push
out
and
jbe
jp
inc
mov
mov
add
fs
xchg
cmp
mov
nop
andb
jae
cmc
mov
imulb
or
xchg
cs
push
ds
xchg
sbb
mov
pop
xor
fsts
fwait
cmp
jns
add
pushf
inc
or
arpl
imul
and
pop
or
sbb
loope
xchg
fbld
gs
leave
sub
inc
out
hlt
punpckhdq
push
jns
mov
or
mov
mov
cmp
inc
push
daa
xor
lods
les
test
jg
cmp
cltd
mov
cwtl
push
mov
stos
in
push
mov
dec
loop
and
mov
testl
inc
xchg
add
daa
add
addb
add
fcompl
mov
mov
imul
loopne
pop
sbb
add
or
fstpl
sbb
ljmp
test
loop
ss
fmull
push
and
fs
sbb
scas
aad
add
sub
aaa
ret
fnsave
scas
int3
shlb
popa
pop
mov
popa
ret
cld
std
add
cmp
rorb
outsl
pop
scas
arpl
icebp
rcrb
mov
dec
insb
push
cmpsb
movsl
cs
dec
mov
cmp
fbstp
call
push
das
sbb
ljmp
call
adc
cmpsl
imul
push
pushfw
fstpl
dec
adc
mov
in
cmpl
dec
fildll
scas
add
cmpsb
repz
sbb
pop
repnz
mov
xchg
or
push
sub
sbb
iret
rcll
loope
stc
dec
push
push
pop
nop
enter
jo
out
pusha
incb
xchg
mov
ja
push
cwtl
cltd
inc
scas
sti
jns
xchg
push
push
int3
repnz
mov
sarb
imul
xor
and
lahf
aas
fdivrs
xchg
dec
das
mov
fists
jle
fwait
jnp
mov
or
in
aad
aam
push
imull
push
jb
xchg
adc
jge
pop
pop
sbb
roll
mov
mov
mov
fmuls
and
dec
popa
or
mov
cmp
mov
dec
lret
movsb
mov
aam
out
sub
movsb
fldt
popf
or
xchg
mov
push
or
push
pop
pop
push
les
mov
sbb
lods
lea
mov
mov
sahf
cmp
mov
fcoms
fnstcw
jg
sub
dec
jb
stos
stos
mov
pop
cld
sub
pop
xlat
adcl
popa
adc
adcl
aad
jmp
mov
imul
sub
out
add
add
jae
ljmp
cmpsb
test
pop
out
inc
or
mov
push
sbb
dec
or
mov
mov
dec
add
mov
mov
cmp
adc
shlb
daa
add
frstor
jae
out
repz
daa
xor
sbb
push
cmp
pushf
mov
cmp
xchg
pusha
repz
repz
cmp
mov
inc
jmp
mov
adc
cwtl
aad
mov
inc
cmp
sbbl
mov
cwtl
and
popa
jno
mov
cmpsl
or
xchg
and
xor
fcoml
lret
lods
ljmp
cmpl
fs
aam
and
fmull
inc
sbb
mov
lods
orb
xor
adc
les
jle
and
dec
and
imull
sbbb
nop
mov
or
pop
inc
mov
arpl
nop
test
xchg
mov
push
mov
push
lods
jb
cmp
mov
cltd
in
mov
ja
jmp
cmc
push
les
in
sub
mov
sub
bound
sub
xchg
mov
jb
xor
push
into
fnstenv
xor
push
mov
gs
or
mov
and
jbe
inc
fcom
jp
and
xlat
shr
fmul
int
lcall
mov
insl
cmp
scas
mov
dec
lock
mov
movsb
out
mov
push
sbb
and
xchg
pop
mov
push
std
sbb
push
dec
push
sub
sbb
mov
cmp
xchg
imul
xor
mov
lcall
xchg
dec
add
adc
push
jb
xor
xchg
in
hlt
xchg
mov
sub
xchg
popa
push
sbb
xchg
daa
lods
sub
push
and
cld
scas
idivl
cmp
dec
stos
test
loopne
and
in
ss
ss
sbb
push
mov
jp
push
in
stos
inc
and
mov
jmp
pop
sub
cld
out
ret
clc
sub
xchg
insb
mov
jnp
sub
xor
imulb
inc
aam
cmpsb
sbb
stos
call
inc
pop
xchg
lds
xchg
lahf
jle
scas
pop
loope
call
pusha
inc
into
leave
adc
mov
out
rorl
jg
in
stos
cmp
or
adc
xor
inc
loopne
jg
int
jecxz
cwtl
jmp
sub
inc
xchg
andb
add
or
out
leave
inc
std
pop
movsb
stos
stc
insl
ror
shrb
imul
and
lcall
xor
pop
int3
andl
push
sbb
scas
xor
xor
push
push
cmc
fiaddl
xchg
sub
and
push
lcall
scas
aaa
loop
fisubl
clc
xchg
lret
adc
jnp
lds
push
dec
mov
inc
pop
inc
mov
jle
xor
icebp
in
in
pushf
pop
insl
or
dec
push
lea
rcrb
xchg
mov
div
js
cmp
jns
outsb
sub
jl
test
xor
nop
cmp
popf
xchg
sahf
aam
add
pusha
pop
sub
in
sub
cmp
and
sbb
lea
dec
lds
pusha
and
jno
andb
imul
pop
int
or
mov
lock
fcmovnu
popf
popa
stos
in
dec
aam
pop
pop
sbb
and
lds
jg
mov
movsb
mov
dec
cmp
push
dec
jne
test
mov
fabs
shll
add
add
pop
inc
scas
or
sahf
insl
les
out
in
int
inc
ficompl
cmp
aad
xlat
in
xlat
sub
mov
rcl
stc
je
loopne
cmp
rorb
mov
sbb
test
mov
and
adc
data16
loope
jl
inc
das
xchg
mov
test
inc
mov
dec
insb
gs
ds
enter
mov
cmp
stc
arpl
lret
mov
into
movb
fwait
sbb
sub
in
scas
sbb
lret
sub
aad
mov
sbb
out
mov
mov
rcll
ljmp
popf
jns
push
por
sti
lods
test
lret
es
aam
mov
clc
jo
fisubs
sub
jnp
dec
and
loop
lock
cmovp
sub
movsl
mov
adc
mov
js
sub
sbb
cmp
sub
mov
fwait
shlb
rclb
xchg
lret
push
sub
add
dec
or
fwait
xor
out
inc
repnz
xchg
push
sar
fs
sub
hlt
sahf
aad
std
or
adc
leave
jg
arpl
loope
repz
aaa
dec
fdivrl
scas
pop
rcll
push
insl
cld
pop
xor
mov
movsl
out
mov
ds
sti
je
pop
insl
adc
add
cmpb
stos
jge
add
fs
mov
cltd
fidivs
out
jmp
mov
ds
dec
mov
loope
shrl
adc
out
dec
rcll
leave
push
pop
sti
test
repnz
je
inc
out
icebp
outsb
sub
mov
cld
or
sarl
loope
test
fwait
idivb
inc
jmp
dec
cmp
cmp
pop
ljmp
jae
arpl
jge
shl
lock
sti
inc
adc
int3
push
loop
in
mov
mov
mov
addr16
shrb
pushf
push
sbb
mov
popa
pusha
cmc
mov
dec
ret
xchg
daa
jbe
das
out
and
lods
pop
cmpsb
mov
sbb
push
ficoms
sarl
adc
xchg
pushf
xchg
scas
xchg
cmc
or
fldcw
repz
ret
dec
mov
call
in
lret
jecxz
cmp
mov
or
sbb
adc
pop
fs
add
iret
xlat
daa
inc
arpl
lcall
mov
sbb
push
mov
fiaddl
fistpl
es
mov
mov
rcll
dec
push
mov
or
rcll
in
js
int
data16
pop
xchg
jp
out
dec
out
insb
fcomps
xor
jo
cwtl
pop
call
repnz
add
dec
add
dec
add
xor
adc
dec
add
xor
xor
add
add
pusha
cmpsl
cmp
inc
outsl
insl
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
cmp
add
addb
addb
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
adc
add
sub
add
pusha
cmpsl
cmp
add
add
or
add
orb
addb
adcb
add
jo
add
mov
add
mov
or
cmpb
add
call
add
xor
add
add
sbbb
add
xor
addb
add
add
add
dec
add
addb
add
pusha
cmpsl
cmp
add
add
add
add
sub
andb
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
nop
add
sub
add
test
add
rolb
in
sldt
fadds
sub
add
lock
sub
add
or
add
and
add
cmp
add
push
add
add
push
sldt
addb
add
sldt
mov
add
enter
clc
sldt
loopne
add
clc
add
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
mov
add
mov
add
add
cmp
inc
outsl
insl
gs
or
cmpb
add
data16
sub
add
add
add
sbb
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
pop
add
dec
pop
add
pusha
pop
add
js
add
nop
pop
add
test
add
rolb
addb
add
pusha
cmpsl
cmp
add
add
add
add
test
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
nop
lds
outsl
insl
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
mov
add
add
popf
or
xor
add
and
or
xor
add
pop
mov
add
mov
add
shlb
add
mov
add
sub
add
clc
cmpsb
or
in
add
fsubrl
add
lods
stos
or
rolb
add
jl
or
rolb
add
dec
scas
or
rolb
add
sbb
or
rolb
add
in
mov
add
add
add
add
mov
add
pop
mov
add
add
add
or
test
add
in
les
add
add
inc
lds
add
add
add
or
in
add
add
lret
js
add
mov
or
mov
add
add
add
add
or
movsb
add
add
rorl
add
add
or
add
add
push
add
add
add
or
call
add
add
add
add
or
loopne
add
in
or
aam
add
mov
add
add
add
push
add
add
add
add
or
or
add
cmp
or
test
add
mov
add
add
add
add
add
add
mov
add
add
add
add
stc
or
mov
add
add
add
add
add
add
or
les
add
fadds
or
sbb
add
lock
adc
add
add
add
add
xor
or
add
add
or
push
add
add
add
add
jo
or
adc
add
test
or
adc
add
cwtl
adc
adc
add
lods
adc
adc
add
rclb
add
add
aam
or
adc
add
xor
or
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
inc
add
dec
add
push
add
xor
dec
add
add
add
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
add
dec
add
inc
add
add
dec
add
inc
add
xor
push
add
push
add
push
add
push
add
add
inc
add
dec
add
inc
add
dec
add
add
cmp
add
cmp
in
dec
adc
test
xchg
mov
mov
push
and
lods
inc
xor
pop
leave
push
stos
ret
clc
gs
xchg
push
adc
push
sub
and
ds
inc
mov
jne
clc
or
mov
filds
xor
jp
add
push
pop
ja
outsl
pop
mov
out
sarl
cs
cli
xchg
cld
iret
or
xchg
dec
dec
add
sub
stc
sarb
cmp
jecxz
sbb
mov
pop
lds
lds
xor
andl
jle
dec
loop
pop
pop
sbb
aaa
push
movsl
fs
jns
mov
cs
add
out
fisubl
or
adc
movsl
mov
cmp
scas
mov
add
pop
lea
repz
inc
pushl
scas
imul
fdivrs
push
sbb
inc
lret
leave
ljmp
aam
fs
mov
iret
pusha
xchg
hlt
push
sub
sbb
hlt
pusha
or
xor
inc
push
adc
cld
or
fs
in
lods
sti
inc
out
inc
mov
out
pop
mov
test
dec
sti
das
aad
or
jle
imul
jmp
dec
insl
xor
lods
xor
adc
ja
add
jl
imull
push
xchg
xchg
enter
push
add
mov
dec
inc
sub
stc
dec
mov
andl
mov
sub
mov
sub
pop
xchg
outsb
rclb
mov
sbb
lret
sbb
in
cmp
dec
adc
or
data16
dec
and
leave
jecxz
add
nop
cmp
inc
divb
inc
test
mov
xchg
xchg
sbb
insl
lret
mov
popa
jnp
jge
scas
packssdw
jne
incb
xchg
mov
cmpsb
add
and
or
sub
aad
mov
lea
mov
mov
sub
or
mov
xchg
daa
inc
push
mul
icebp
test
stos
loope
push
dec
sub
dec
xchg
and
subb
mov
scas
xchg
movsl
cli
sahf
cmp
imul
and
cmp
out
lock
loope
mov
sub
push
xchg
push
pop
lcall
sbb
mov
adc
sbbb
addb
out
xor
outsb
jl
fdivr
fisubl
lods
js
fldt
inc
dec
push
out
pusha
jmp
push
mov
nop
scas
bound
jmp
imul
ljmp
addr16
ds
pop
inc
shlb
cmp
adc
jl
mov
add
adc
mov
call
push
mov
test
xor
pop
xchg
and
dec
daa
sarl
mov
sahf
inc
xchg
lods
dec
aam
xchg
cmpsl
testb
les
pop
adc
cmp
loope
inc
neg
or
sbb
sub
ja
cmp
cwtl
jl
add
lea
out
dec
fs
cmp
push
sub
stos
test
add
mov
xor
lods
push
sbb
in
ds
lea
rcl
push
pop
adc
mov
cwtl
stos
sbb
fptan
jae
push
cmc
jp
or
hlt
ret
imul
push
notl
inc
shrb
pop
aad
mov
add
insb
aad
or
jg
subb
pop
push
sbb
jb
mov
xchg
fs
sbb
lock
lods
push
xchg
xlat
int3
and
push
ficoml
jnp
neg
mov
or
into
jnp
lds
dec
mov
push
push
mov
inc
xchg
adc
pop
and
xor
fcmovne
jle
add
fwait
ret
fmull
jbe
fmull
imul
lahf
in
jo
test
pop
call
adc
or
es
add
lahf
dec
and
movsl
xchg
push
fnstenv
lds
pop
jnp
pop
dec
shl
or
xor
andl
mov
xchg
pop
hlt
jge
pushf
std
out
mov
lret
mov
xchg
test
stos
sahf
ss
testl
testl
jg
push
jae
add
add
jecxz
notb
jbe
dec
sub
or
in
sub
adcl
in
les
mov
sub
adc
mov
adc
inc
pop
sub
mov
out
in
xor
fildl
adc
mov
data16
in
insb
test
fbstp
inc
ret
jbe
jnp
add
sti
mov
test
dec
or
pop
xor
int3
inc
cld
cmp
sbb
test
out
or
mov
ja
pushf
lahf
into
int
mov
adc
and
and
ja
mov
xchg
jnp
bnd
mov
mov
insl
icebp
add
test
popa
push
jbe
dec
mov
movsl
popf
mov
jle
cmp
aad
mov
inc
xor
xor
and
loope
add
daa
xor
mov
sar
test
xchg
inc
add
push
rcrb
cmp
lock
xchg
orb
mov
cmpb
aaa
mov
jge
add
add
cmp
into
xchg
mov
dec
mov
mov
mov
jns
lods
jmp
xor
push
jecxz
mov
sbb
inc
push
pushf
pusha
pop
pop
xor
xchg
stos
cs
and
inc
movsl
jp
imul
push
mov
sub
iret
add
lret
sar
bound
mov
in
fimull
sub
jb
adc
adc
int
inc
in
popa
leave
sub
push
and
mov
lret
cmp
or
js
lahf
jp
sub
pop
and
insl
into
stos
gs
inc
jns
inc
adcl
out
jmp
popa
stos
out
cld
pop
adc
test
sub
jp
cmp
out
add
mov
pop
adc
inc
xchg
and
and
xchg
in
out
add
mov
cmp
dec
loop
xor
mov
lods
or
xchg
adc
movsb
cmpsl
negb
adc
filds
insb
push
push
popf
or
jnp
inc
inc
popa
adc
sub
adc
inc
jle
pop
movsb
push
pop
out
mov
popa
push
jo
or
cmp
movsb
and
arpl
xor
shlb
dec
pop
mov
jb
and
cmpsl
out
mov
dec
pop
orl
in
cmc
inc
testb
icebp
lods
das
ljmp
call
adc
and
mov
dec
dec
faddl
hlt
dec
in
push
mov
in
cmp
xor
mov
adc
xor
jmp
xchg
lcall
icebp
push
mov
dec
sbb
outsl
adcb
pop
cmc
loopne
dec
dec
jecxz
stc
aas
fsubrs
or
pusha
fcmovnbe
adc
mov
sbb
jo
outsb
push
dec
or
popa
mov
into
testl
xchg
lcall
pslld
sub
add
jmp
shll
aam
jno
bound
jnp
cmpl
cmp
subl
notl
adc
push
inc
jp
outsb
je
idivl
fs
inc
cld
daa
out
repz
cmpl
or
or
lahf
xor
cld
mov
je
jne
pop
jns
sbb
xchg
fsubp
mov
dec
xchg
cltd
aam
lcall
rclb
pop
notl
outsb
mov
lcall
adc
or
arpl
aas
add
add
jle
int3
adc
mov
add
insb
mov
scas
stc
insb
data16
jp
xor
outsb
pop
pop
cltd
sub
jecxz,pn
mov
sub
cmp
push
mov
nop
ja
decl
push
inc
pop
push
sarl
ja
push
bound
scas
mov
and
shll
fsubl
fwait
inc
mov
mov
inc
daa
out
xor
dec
addr16
js,pn
jns
fildl
lret
movsb
sbb
jmp
sbb
in
test
or
insl
daa
push
jmp
and
int3
lock
xor
xchg
imul
test
data16
test
pop
fmull
pop
cltd
hlt
stos
xchg
cli
call
aas
dec
aas
rolb
lock
add
xor
jns
cli
inc
jns
cmp
mov
mov
cmp
stc
fisubl
cmp
leave
or
aaa
not
mov
jb
popf
jnp
test
shrb
fbstp
add
and
mov
popf
xor
int3
rcll
ja
xchg
and
scas
sub
push
xor
adc
aam
repz
cld
sbb
pop
in
add
jge
push
aam
movb
movsl
subl
hlt
dec
sub
pop
mov
ljmp
sub
xor
fistps
mov
repnz
add
sti
xor
pusha
sbb
cmp
push
mov
jl
subl
dec
dec
jle
in
pushf
sbb
shrb
movsb
scas
out
and
out
lods
sbb
lock
int
shlb
xor
sub
adc
sub
inc
stos
inc
jle
adc
lcall
sti
aad
bound
mov
adc
inc
and
cld
pop
sub
or
mov
dec
xor
aas
roll
jmp
fsincos
adc
je
dec
and
int3
adc
fwait
add
mov
not
pop
pop
sub
dec
test
loope
fsubrs
nop
sbb
push
mov
test
rcrl
outsb
mov
dec
subl
xchg
lds
pusha
loopne
sar
mov
mov
outsb
loop
xor
test
xchg
mov
xor
dec
mov
filds
xor
notl
sub
cltd
cltd
jl
ficomps
or
jg
fmull
mov
inc
stos
jp
cld
int3
dec
aaa
add
pushf
stc
sub
mov
repz
sbb
imul
popa
xchg
rorl
mov
adc
fwait
jb
sub
mov
sbb
sub
psraw
fcompl
push
xor
imul
or
loope
outsl
adc
add
pop
jmp
or
xchg
pop
sahf
adc
push
adc
orl
jge
lock
cld
mov
outsl
xchg
cmp
int3
dec
xor
sbb
arpl
push
jb
icebp
push
test
cld
out
lock
or
sbb
sbb
mov
addr16
push
jne
push
into
outsb
push
or
cmp
cmc
push
dec
test
lret
lcall
push
js
insl
ljmp
xchg
and
loope
std
sbb
imul
mov
cmp
popf
or
xor
wrmsr
sub
leave
hlt
mov
adc
sbb
pop
imul
pop
scas
pop
xchg
mov
loope
jge
fidivl
jbe
cmp
es
mov
push
shrb
dec
xchg
adc
adc
mov
in
addr16
pop
adc
adc
scas
loope
popf
orb
fdivrl
jle
pop
pop
lahf
fwait
jmp
and
mov
or
rol
push
js
xor
sbb
push
movsb
stc
insl
cwtl
dec
xchg
int3
push
xor
xlat
out
or
adc
stos
cmc
leave
rorb
push
dec
fldenv
rorl
movsb
fimull
fsubrs
repz
lcall
sarl
xchg
outsl
rol
pop
adc
mulb
pop
add
roll
lcall
scas
xor
mov
repz
fs
hlt
scas
push
pop
jge
mov
ds
jne
cmp
rcrl
aaa
jbe
imul
xchg
out
stos
cmp
rcl
ja
xchg
inc
out
in
test
fnstenv
or
les
pop
xor
or
in
sub
loope
orb
clc
jno
dec
call
js
arpl
pop
lahf
lods
aam
ja
test
cmp
xchg
lcall
xor
out
nop
xlat
dec
inc
jne
shll
dec
cld
push
pop
in
add
sbb
sbb
lods
adc
mov
repnz
xor
pop
out
adc
leave
cmp
pop
in
roll
jo
and
mov
jb
and
jne
mulb
cmp
call
out
stos
mov
lods
lock
cwtl
in
or
cmp
cmpsb
and
arpl
mov
stc
imul
ljmp
sub
lods
pop
push
push
stos
fs
loopne
aam
cmp
mov
jl
xlat
pop
into
out
scas
xchg
popa
adc
into
mov
jecxz
aad
mov
clc
aad
lret
xchg
ret
movsl
test
and
sub
js
aaa
inc
jb
or
test
add
jl
dec
adc
orl
push
lods
dec
pop
mov
pop
mov
pop
sbb
or
xchg
in
mul
push
mov
xchg
and
dec
or
fldenv
xlat
sbb
or
sbb
push
cltd
push
ljmp
fdivl
lcall
enter
push
xor
outsb
jne
xlat
mov
pop
pushf
in
inc
cmp
nop
loop
and
push
pop
loope
fisttpll
int
lock
lods
sub
lea
out
mov
lods
add
mov
das
xchg
lods
aam
jo
jnp
frstor
jmp
stos
ret
lcall
push
imul
mov
jecxz
std
out
testb
mov
xchg
inc
xor
or
call
push
or
jp
push
repnz
mov
out
sti
in
nop
and
xchg
icebp
dec
cmpsl
xor
jg
adc
xchg
mov
sbb
sbb
addr16
pop
pushf
mov
pop
adc
dec
push
inc
or
cli
jnp
push
js
pop
jg
xor
lcall
or
xchg
dec
pop
cltd
cmc
xchg
sbb
test
fwait
cs
decb
lcall
adcb
push
movsb
cmpsl
xor
cmpsb
adc
iret
cld
aam
scas
pop
push
push
pop
adc
inc
xlat
shlb
ja
xchg
push
mov
out
adc
loope
rclb
ja
loopne
or
mov
pop
repz
fisttpl
mov
sbb
lcall
sub
mov
xor
xlat
sbb
sarl
inc
cmp
pushf
fsubrs
mov
jb
xchg
mov
xchg
or
rorl
sbb
dec
sub
arpl
cmp
sbb
cmp
or
inc
inc
mov
adc
dec
mov
dec
fisubrs
add
push
loopne
lret
cmpsl
or
int
sub
out
sbb
lea
dec
aaa
xchg
inc
loope
pop
mov
bnd
add
xchg
or
cmp
mov
cmpsl
int3
cld
pop
cmp
sbb
mov
gs
and
ja
and
jp
dec
idivb
imul
int
int
imul
lods
sub
inc
nop
cli
sbb
es
fcmovnb
outsb
cmp
jge
dec
stos
movsl
lock
push
jbe
xor
jb
scas
sti
loop
popf
xor
mov
daa
add
mov
xchg
sahf
jo
or
cs
mov
cli
jp
inc
fidivrl
push
adc
xchg
pushf
lahf
rorl
orb
jnp
ljmp
cmpl
sbb
push
jge
cmp
jg
movsl
or
lcall
hlt
les
js
xor
jbe
dec
xorb
int
adc
push
inc
mov
arpl
out
jns
inc
mov
rorl
or
xchg
add
mov
fwait
dec
lret
je
ffree
nop
ja
mov
and
xchg
fs
pop
inc
fstpt
xchg
inc
scas
dec
push
sub
xchg
js
test
jno
and
int
repnz
jno
cmpl
inc
xor
xor
test
sub
mov
or
test
push
mov
jae
mov
rolb
dec
inc
in
jmp
or
rolb
xchg
cld
movsl
adc
aam
cmp
pop
cmc
in
outsb
test
das
pop
lret
jne
cmp
loope
outsl
adc
sarl
in
xorl
or
inc
mov
aas
int3
push
insl
mulb
hlt
or
out
push
les
sub
mov
cmpsl
divl
mov
test
pop
inc
pop
mov
pop
xchg
std
cld
shlb
ret
push
ror
mov
mov
push
pop
sbb
sbb
mov
lret
data16
lea
leave
add
fsubrl
or
std
mov
test
sub
lret
or
shrl
dec
mov
call
cmc
pop
jge
xchg
jbe
sbbl
add
fldenv
mov
scas
scas
test
sbbl
xchg
hlt
jp
xchg
outsb
shl
in
inc
pop
pop
ja
loopne
test
adc
das
inc
faddl
xor
out
lods
and
cmp
push
addr16
clc
push
lods
push
test
sbb
nop
cmpb
and
sbb
sahf
dec
iret
callw
in
cmp
fildll
int3
sub
mov
aas
sarb
sarb
std
cwtl
jbe
inc
mov
lret
dec
je
jno
jp
jecxz
lock
adc
mov
shll
popa
xchg
pop
push
popa
cmp
out
das
mov
out
pop
lock
data16
jg
jg
es
ficompl
or
sbb
xchg
repz
rorb
jb
inc
arpl
pop
cli
mov
es
jns
mov
jecxz
leave
xchg
or
adc
aad
inc
and
pop
mov
icebp
add
cmc
mov
popa
fmull
dec
fdivs
push
xchg
scas
sbb
imul
xor
sub
aaa
jle
pusha
call
das
xor
xorb
roll
iret
test
ja
inc
fcmove
xchg
out
sub
dec
cmp
mov
jg
jg
es
xor
inc
pop
in
in
clc
mov
aam
dec
dec
jl
clc
pop
or
sub
jo
hlt
sub
pop
inc
mov
and
mov
xchg
pop
data16
test
popa
lret
pop
rcll
jne
xlat
icebp
idiv
inc
aad
pop
xor
test
or
jo
fsubl
jae
pop
rorb
sub
push
test
lods
cld
bound
push
adc
test
mov
pop
mov
hlt
int3
or
inc
movsl
xorb
sub
adc
outsl
push
xor
adc
sbb
dec
xor
ficompl
cmpsb
jp
inc
xchg
dec
push
xchg
jge
mov
out
mov
mov
mov
adc
scas
mov
ljmp
sbb
jns
sbb
lods
adc
mov
arpl
xchg
xorb
icebp
xchg
pop
incb
fsubrs
sbb
inc
add
lea
repnz
fcmovb
xchg
inc
je
push
pop
stos
or
adc
fwait
bound
mulps
mov
jne
add
or
xor
pushf
mov
or
xchg
add
cmp
popa
or
scas
fidivrl
xchg
fists
les
cmp
cmp
inc
xlat
xor
cwtl
lds
xchg
xchg
jecxz
push
lahf
xor
pop
xlat
aam
imul
cmp
mov
inc
jl
clc
xor
cmp
push
pop
ja
aas
mov
int
xchg
in
jp
es
mov
mov
sbb
stos
incl
mov
shrl
adcb
into
add
adc
mov
aas
shlb
sub
mov
sbb
adc
inc
ja
movsl
rorl
jb
cmpsl
jg
mov
push
jno
jg
sub
loope
sbb
mov
icebp
in
out
shll
sbb
inc
dec
push
push
push
mov
mov
ficoml
les
stc
push
stos
cmc
data16
xor
sbbl
push
or
out
push
inc
add
leave
clc
fs
daa
xchg
mov
mov
fsubs
in
fcoml
dec
mov
leave
push
test
jmp
imul
dec
xchg
adc
int3
xlat
dec
push
sbb
shlb
mov
inc
fiadds
pop
or
jmp
cli
jg
shrb
adc
push
dec
jne
push
cmc
inc
mov
rcrl
pop
mov
push
iret
or
loope
sub
pop
and
outsl
jge
dec
lods
inc
in
or
aad
jl
movsl
mov
clc
xchg
add
inc
pop
jle
xor
jb
mov
in
pop
mov
icebp
ljmp
add
mov
hlt
rcrl
out
or
aad
push
call
mov
pop
dec
fs
jge
adc
pop
dec
add
sbbl
xchg
out
or
sub
add
hlt
cmp
jns
push
aas
xor
scas
jbe
dec
jp
imul
icebp
sub
or
jbe
repnz
xor
sbb
push
cltd
mov
fcoml
push
outsb
cwtl
push
out
sub
je
scas
pop
repnz
std
add
aas
test
adc
cmc
mull
mov
xor
clc
pop
leave
or
cmp
pop
jmp
jl
inc
pop
adc
jns
jle
sub
adc
lods
jmp
jns
jo
cld
jns
loop,pt
cmp
cmpsl
jmp
cltd
mov
xchg
enter
mov
stos
je
dec
xchg
andl
aas
jg
or
lcall
std
sub
outsl
int3
js,pn
ret
addb
inc
lods
movsb
and
out
add
aaa
insb
aas
popf
lea
cmp
setno
fbstp
insl
pop
adc
bound
jp
mov
push
adc
cmp
fsts
rol
ja
dec
in
cs
div
hlt
rcll
and
or
mul
addr16
mov
adc
push
adc
out
ret
or
jmp
jne
push
jl
in
rcrb
popa
mov
outsl
xorb
cmpsb
or
adc
push
scas
push
subl
nop
push
pop
pop
mov
sbb
shl
or
sbb
out
mulb
out
loop
sahf
fsts
cmp
inc
sbb
push
push
xchg
jle
xor
jl
or
cmp
xchg
adc
imul
jle
xchg
je
loop
pop
push
push
fldl
daa
push
push
in
xor
test
loope
mov
addr16
dec
xchg
adc
cs
fldenv
xor
fdiv
jbe
mov
bound
clc
inc
mov
lea
pop
gs
lret
addr16
sti
push
xchg
or
pop
sbb
in
push
mov
int3
call
lea
ret
mov
pushf
add
sahf
cmpsl
push
push
xchg
adc
pop
cmp
rorl
stos
lret
pusha
insl
stos
mov
push
lret
popa
and
orl
jae
xchg
gs
pop
xchg
push
imul
jg
loope
aam
in
xchg
out
xor
notb
xchg
jb
mov
push
mov
pusha
inc
out
lea
lret
mov
ret
outsl
adc
pop
inc
xchg
sub
dec
aas
and
pop
repnz
mov
mov
lods
mov
sub
xor
push
dec
stos
and
and
jbe
jo
mov
lods
xor
cmp
int3
lsl
aaa
gs
call
imull
aas
push
sbb
stos
add
xchg
adc
sbbl
cwtl
pop
adc
xchg
fs
jae
mov
out
adc
in
push
sbb
mov
mov
add
push
cmp
dec
push
push
cmpsl
push
cmp
pop
fs
push
xor
outsb
leave
mov
int3
mov
mov
dec
es
es
xchg
sarl
aam
cs
scas
mov
lret
jecxz
push
cmp
in
pop
jb
mov
les
scas
enter
enter
sub
fs
cmp
pop
xor
push
faddl
jb
jbe
addr16
and
incb
jl
pop
xchg
or
iret
jno
popf
icebp
add
push
sub
call
and
ret
in
xor
push
clc
inc
jg
jno
icebp
ret
lcall
xlat
pusha
sarb
pop
mov
inc
andl
jg
mulb
xor
mull
or
out
cli
inc
iret
and
xchg
sub
push
sbb
test
jge
in
cltd
xchg
jmp
cmpsb
sub
push
ds
xor
sarb
mov
push
xor
clc
lret
push
ss
mov
pushf
mov
and
shll
cs
mov
mov
idivl
mov
inc
sub
and
imul
dec
loopne
add
push
jnp
pop
aad
push
mov
aaa
cmp
test
into
push
fnstcw
int
in
jg
inc
sub
xor
outsl
fbstp
outsb
into
aad
xchg
lahf
test
mov
sbb
aad
mov
icebp
dec
pushf
daa
xchg
testl
xor
pop
add
cmc
loope
lods
js
adcb
xor
hlt
mov
ds
roll
test
scas
sahf
pop
mov
xchg
ret
fbstp
mov
mov
cmc
adc
push
mov
sbbl
xchg
adc
sbb
orl
les
push
sti
test
add
adc
roll
jge
aam
lret
aad
shll
sub
enter
add
lahf
mov
inc
mov
cmp
pop
xor
mov
xchg
and
xchg
pop
test
mov
mov
cli
in
inc
pusha
divl
jge
xor
xor
out
cmp
leave
loopne
das
cli
pop
sbb
cmp
xor
mov
fstl
movsb
dec
sbbb
mov
orb
or
mov
inc
fnstenv
mov
pop
daa
jl
mov
dec
aaa
push
fcmovb
xchg
cmpsl
movl
jnp
fldenv
ljmp
fdiv
in
xor
jb
push
push
push
push
movsl
lods
or
and
jle
xlat
inc
mov
aaa
fsubl
add
sarl
add
adc
add
in
movsl
mov
in
pop
cs
lods
xor
jg
sub
mov
and
fwait
pop
ds
pushf
push
xchg
clc
mov
hlt
stc
cmp
aaa
clc
xlat
sbb
fsubs
fnstenv
inc
imul
imul
jmp
mov
and
cmpsl
sbbl
push
aaa
js,pn
gs
nop
xor
paddd
rcl
pusha
fmul
fwait
pusha
xchg
push
mov
out
fisubrl
dec
ja
cli
xchg
or
nop
sbb
push
stos
pop
bound
xor
addb
mov
xchg
jmp
mov
push
pop
adc
xchg
sahf
popa
cld
repz
sbb
add
cmp
enter
ss
adc
scas
std
bound
aaa
mov
in
mov
das
adc
xchg
xor
cmpsl
jle
cmp
aas
fnstenv
fptan
add
lea
pop
sbb
adc
popa
addr16
mov
rorl
popl
fwait
out
notb
iret
leave
loope
sub
inc
xchg
push
jecxz
dec
cmp
push
mov
mov
add
test
sbb
iret
shr
cmp
xor
add
lea
nop
insb
cltd
popa
pop
mov
stc
push
xchg
ret
jg
mov
inc
jnp
push
in
lret
scas
lret
test
adc
sbb
cltd
cmp
xor
fdivrs
pop
dec
mov
jae
shll
subl
into
mov
jb
sbb
mull
les
mov
jno
jo
sbbl
pushf
mov
cmp
push
xor
add
sub
in
mov
xor
cmp
movsl
or
sub
jmp
les
and
push
mov
insl
add
add
xor
sub
dec
aas
ljmp
sbb
dec
sarb
cmp
push
decb
je
jnp
jbe
adc
scas
sub
call
adc
sbb
fldt
adc
push
xor
pop
gs
mov
adc
xchg
or
inc
test
jb
scas
rclb
push
xchg
test
daa
cmpsb
jns
repz
push
dec
xor
ljmp
dec
pop
cmp
push
jo
inc
xor
dec
pop
cmp
cmp
test
lock
pop
fisubrs
mov
add
loope
imull
xchg
adc
shl
mov
popf
cmp
roll
xchg
insb
test
call
sub
aas
cwtl
mov
lret
call
aas
test
push
int
mov
xchg
cmpsl
add
enter
push
xchg
sti
imul
pop
fisubrs
sbb
inc
mov
xorb
stos
out
mov
jb
hlt
xor
adc
xor
in
mov
adc
lret
mov
xchg
fmulp
sbbl
test
aam
pmulhw
xchg
je
jo
adc
aas
add
cmpsl
shrb
fwait
jo
and
int3
cmpl
fs
pop
rclb
jnp
cmpsb
outsl
mov
lahf
pop
shr
pushf
addb
cli
out
sub
movsl
sti
nop
dec
das
lods
pop
out
test
out
daa
push
repz
arpl
adc
xchg
mov
xor
sahf
movsl
push
and
pushl
xor
pop
inc
and
subl
daa
stos
add
or
js
and
or
mov
and
xor
mov
xor
lds
pop
pop
out
push
mov
ss
sub
mov
mov
adc
iret
fs
mov
icebp
adc
addr16
cmp
sub
js
mov
iret
repz
leave
repnz
cmpsb
mov
mov
sbb
xchg
jg
loopne
sahf
subb
sbb
and
push
mov
outsb
scas
xchg
decb
test
mov
shlb
mov
xchg
stos
lods
nop
mov
adc
into
mov
push
movsl
mov
inc
pop
stos
mov
je
aaa
xor
xor
in
pusha
out
out
divl
push
fwait
inc
and
cmc
cs
mov
jb
sub
xchg
into
rorl
ret
test
sub
aaa
or
out
orb
cld
mov
mov
jb
xlat
add
test
les
sub
jmp
mov
and
cld
int3
jle
mov
mov
dec
jns
mov
das
leave
add
mov
pushf
push
leave
scas
lods
add
pop
or
insb
aaa
xchg
or
jo
sahf
lcall
aas
dec
lahf
lahf
jmp
jmp
imull
mov
aad
xor
aam
cmp
loop
ret
nop
fisttpll
or
xchg
mov
imul
jno
in
sub
mov
add
popa
push
outsb
test
jg
outsb
inc
inc
ud0
xor
mov
or
mov
ljmp
test
push
add
leave
popf
in
ret
repz
xlat
mov
adc
mov
push
rol
fldenv
fidivl
test
inc
fwait
dec
sbb
and
rolb
mov
ljmp
lret
rclb
lret
pop
sub
clc
lret
push
test
add
xchg
popl
add
out
in
mov
push
imul
out
dec
fwait
loop
rorb
fisttps
mov
sbb
mov
fimull
xchg
add
inc
daa
adc
lock
rorb
rolb
mov
dec
jb
or
jp
mov
and
push
ds
scas
cmc
xlat
fs
hlt
dec
insb
bound
xchg
dec
cmp
leave
xchg
nop
sahf
in
xchg
loopne
mov
rcr
xchg
imull
jmp
inc
int
mov
out
xor
iret
in
shl
push
jne
jns
mov
xorl
pop
mov
mov
mov
mov
push
movsb
lds
cltd
cmc
adc
sahf
adc
leave
iret
test
add
gs
sarb
push
or
pop
mov
push
push
push
cmp
add
ja
or
aad
sbb
adc
lahf
shlb
mov
idiv
jecxz
js
push
stos
pop
mov
test
stos
outsb
ds
out
jb
es
cmpsl
pop
or
insb
aas
out
and
inc
sbb
out
in
dec
fidivrl
xchg
enter
mov
mov
repz
lods
pop
push
xchg
lahf
out
add
mov
pop
pop
hlt
imul
mov
movsb
mov
and
inc
mov
mov
adc
cli
push
mov
pop
dec
out
and
data16
xor
lahf
adc
sbb
test
lods
push
scas
gs
push
arpl
lock
stos
mov
addr16
mov
sbb
fstpl
icebp
ja
mov
arpl
sub
enter
inc
cmpsl
pop
or
sbb
test
imul
cmc
inc
mov
lret
or
movsb
mov
out
popa
push
insb
dec
test
je
mov
int
push
dec
fdivrs
pop
int3
pop
cmp
fucomi
pusha
movl
jg
ds
add
cs
lret
lcall
xor
jae
pop
call
dec
xchg
aam
sbb
push
popf
sbb
push
inc
or
addb
outsb
push
sub
xor
cmpsb
sbb
mov
push
iret
cmp
mov
data16
mov
fs
xchg
xorb
inc
outsl
lds
in
jo
inc
xor
inc
out
aad
aam
icebp
jo
mov
dec
mov
movsb
ss
lcall
push
arpl
pop
add
cli
mov
mov
dec
pop
negb
jmp
cmc
cltd
aad
scas
jns
adc
push
out
hlt
add
xor
sub
stos
loope
cltd
aas
dec
jl
and
or
jno
push
inc
pushf
jo
sbb
outsb
icebp
imul
jle
jle
scas
fstl
sub
or
cmp
sahf
jne
inc
mov
xor
dec
notb
inc
shl
mov
into
or
enter
xor
ljmp
loop
adc
scas
sub
jno
in
jl
pop
mov
lds
ret
cmp
test
add
insl
jb
mov
fisubrs
insl
loop
mov
mov
add
xlat
mov
outsl
mov
clc
inc
xor
in
push
xlat
jo
icebp
insb
pop
sbb
call
sbb
or
bound
roll
jb
jecxz
in
xchg
and
mov
dec
xchg
lock
bound
lods
cmp
insl
lret
mov
add
jecxz
fnstenv
mov
into
pusha
orb
add
dec
sbb
dec
loope
mov
inc
dec
mov
xchg
pop
outsl
and
mov
outsb
mov
jno
das
imul
xchg
repz
lods
adc
in
push
ret
idivb
jo
add
jns
stos
mov
lret
jmp
sbb
push
push
and
int3
sti
das
jo
insb
shr
and
movsl
pop
jle
adc
xor
aam
fnsave
cld
mov
push
mov
mov
insl
xor
add
mov
cmpsl
fcompl
sbb
xchg
push
cmpsb
jp
sahf
xchg
or
mov
jns
push
add
pop
mov
dec
or
cmpsl
sub
mov
js
and
pop
mov
clc
out
repnz
cmp
mov
bound
rorl
pop
mov
out
add
ja
sbb
mov
xor
jo
divl
or
xchg
xor
aam
fidivs
mov
xor
addr16
xchg
lcall
cmpsl
sub
inc
lods
movsb
mov
mulb
mov
out
icebp
lcall
xchg
out
mov
or
jbe
das
int
sbb
clc
or
mov
cwtl
pop
jo
mov
sbb
mov
fcomps
inc
mov
mov
mov
sub
jae
lds
imul
adc
xchg
repnz
cmpsb
cmp
call
movq
add
xchg
scas
sti
icebp
aam
loope
push
mov
clc
and
sbb
mov
mov
into
jle
ss
fsubp
std
outsb
out
ja
sbb
lods
or
push
gs
mov
mov
cmc
orb
lret
jne
pop
movl
or
mov
rcl
aad
pop
and
mov
cmpsl
out
inc
sarl
mov
jp,pt
fbld
in
call
subl
pop
les
std
add
jmp
iret
jecxz
and
xlat
aas
add
jb
cmp
jmp
xlat
in
push
mov
pop
inc
jmp
mov
fmuls
stos
sub
pop
xor
cmp
shl
pusha
push
push
dec
cmp
jae
pop
leave
pop
mov
lock
loop
mov
mov
pop
out
or
addr16
xchg
std
and
push
fdivrl
mov
out
ss
call
mov
icebp
leave
jo
sub
add
pop
dec
adc
out
push
mull
in
arpl
xor
sbb
and
call
xor
test
gs
iret
notl
push
test
in
iret
repnz
cmpsl
stc
arpl
inc
or
incl
outsl
scas
jle
stos
out
xor
pop
pushf
addr16
push
sub
mov
mov
imull
xchg
add
arpl
fistl
ret
cmpsl
jnp
aas
mov
scas
iret
lock
jnp
adc
add
jl
mov
push
or
inc
sbb
stc
sub
rclb
repz
sbb
or
mov
sti
cmp
cwtl
xchg
jl
mov
adcb
aam
mov
test
dec
pop
mov
push
ss
rcr
xor
push
mov
cmp
cmp
xchg
lock
movsb
dec
sub
inc
add
push
loope
mov
push
sbb
sahf
xlat
cmpsl
xchg
cltd
fwait
xor
mov
sbb
or
pop
pusha
stos
xor
test
xchg
lcall
stc
test
test
adc
loope
lret
arpl
dec
push
adc
push
fists
out
mov
call
adc
and
dec
mov
mov
adcl
xor
jb
mov
test
push
sbb
cmc
mov
xlat
and
jns
mov
test
dec
shll
popl
pop
jae
lcall
addl
pusha
adc
push
push
adc
insb
ret
add
dec
gs
or
xor
dec
push
shl
orb
or
pop
cld
add
add
xor
dec
pop
adc
aam
mov
pop
popf
fstps
dec
aaa
mov
xor
repnz
fidivs
out
xor
subb
inc
mov
mov
mov
sarb
insb
xchg
cmpsl
imulb
loope
aaa
in
mov
pop
push
or
in
jle
loope
or
add
movsb
cwtl
or
fstps
fists
mov
cmp
adc
mov
sub
pop
pop
or
xchg
lds
lret
fldt
js
jmp
push
mov
adc
cmp
mov
sbb
push
inc
cmp
sarb
xchg
xor
call
hlt
add
sbb
or
add
out
lods
aas
dec
data16
ror
jbe
ficomps
inc
aas
sahf
jne
and
and
leave
xchg
fistpll
push
mov
jnp
xchg
or
mov
aam
fs
xor
iret
scas
mov
mov
push
push
data16
push
dec
mov
sub
aam
lea
pop
lret
insb
xchg
xor
add
pop
adc
inc
xor
out
aad
pop
jmp
xchg
mov
dec
or
sub
bound
xor
and
mov
ret
and
jnp
inc
xchg
iret
pop
lahf
xor
pop
sub
inc
faddl
xchg
popa
loopne
mov
mov
lret
push
jo
aam
dec
sahf
test
cltd
ficompl
inc
scas
lret
aaa
ret
sub
sbb
adc
lock
lcall
filds
cli
dec
incl
in
fs
ljmp
xchg
push
in
cmovbe
xor
imul
loop
movups
movsb
stos
rclb
outsb
cli
push
cmp
jl
dec
sbb
xchg
test
addl
negl
test
je
sar
mov
mov
xchg
aas
mov
push
maxps
pop
add
add
sub
or
lcall
xchg
rcll
scas
popf
test
fists
push
lahf
movsl
jb
jle
cmpsl
jp
adc
mov
mov
ret
js
in
inc
or
xor
add
cs
nop
sbb
int3
sahf
scas
fildll
out
dec
or
dec
sub
sub
jmp
cmp
jecxz
data16
push
mov
cmpsb
lds
mov
or
dec
test
clc
jp
jge
into
mov
xchg
call
test
mov
pop
adc
loopne
cld
xor
dec
test
adc
adc
into
lahf
mov
jecxz
lcall
dec
int
xchg
push
ljmp
insb
sbb
js
jne
int3
sti
dec
mov
mov
out
popa
adc
in
mov
push
lea
push
dec
movsb
fldenv
negl
inc
int3
sbb
sbb
xor
jae
xor
jne
mov
lock
nop
setno
test
in
call
and
ljmp
jb
inc
jmp
aam
in
daa
mov
xchg
ja
mov
ljmp
jb
dec
mov
xchg
cwtl
inc
xchg
loope
adc
inc
insb
lahf
mov
cs
mov
xor
dec
test
out
push
xlat
xor
ja
xor
push
rcrl
jmp
scas
push
ret
adc
or
movsl
adc
mov
aas
call
repz
pop
push
shll
iret
or
mov
pop
cli
sub
scas
xchg
pop
push
xor
xchg
arpl
jmp
fimull
das
xchg
fsubr
push
gs
out
xor
daa
add
movl
movsl
je
ret
std
insl
enterw
xor
cmc
push
lret
or
ret
inc
sbb
ficompl
scas
adc
mov
inc
inc
dec
movsb
lahf
outsb
mov
int3
ret
push
xchg
cmc
push
pop
xor
cli
imul
jnp
stos
cmp
sbb
push
cmp
scas
cltd
bound
imul
push
pusha
xchg
sti
adc
insl
into
movsl
sub
or
gs
mov
push
jb
xchg
add
lret
je
ss
ja
inc
mov
jnp
pusha
aam
push
das
jo
cmp
ljmp
int3
inc
scas
lock
inc
popf
int3
mov
dec
iret
cwtl
sbb
sub
mov
xchg
jp
aas
test
or
ja
mov
fcompl
mov
scas
dec
lods
mov
mov
cmc
sbb
inc
inc
adc
mov
sub
aam
ss
cmp
inc
aaa
gs
fldt
dec
sbb
lret
and
flds
inc
rcrb
sub
test
pusha
mov
pop
xchg
test
pop
out
push
orb
imul
push
insl
add
mov
lods
push
xchg
xchg
flds
mov
jge
add
pop
adc
add
ret
mov
sahf
daa
sub
stos
into
movsw
jnp
add
adc
jecxz
add
cmp
jmp
daa
cmp
jne
ret
out
aas
inc
lds
sub
or
and
dec
xchg
jb
sbb
and
dec
stos
aam
dec
pop
xchg
push
mov
xchg
mov
xor
stos
shrl
dec
add
test
aad
sbb
adcl
xor
test
xchg
inc
stc
push
test
dec
and
nop
pop
mov
xor
lret
dec
mov
xor
mov
cmpsb
jno
dec
jnp
push
js
test
in
rorb
popa
into
data16
cmc
int
mov
pop
out
mov
adc
dec
mov
jg
push
inc
jecxz
mov
jecxz
inc
ja
or
mov
pop
mov
inc
push
imul
adc
mov
sbb
ret
lcall
mov
fidivs
jns
add
das
sub
mov
in
and
arpl
in
lea
inc
push
sub
adc
dec
sbb
push
lahf
pop
and
cmpsb
pop
push
add
aas
test
aas
loop
idivb
lods
mov
pop
cld
xchg
int
adc
jno
stos
push
test
shrl
xor
jns
fsubl
sub
adc
aaa
jo
jl
je
lret
out
xchg
fiadds
xlat
filds
xor
xchg
sti
jg
sub
shll
out
jp
pop
cld
sbb
out
adc
dec
in
sub
fimuls
sub
xchg
out
jle
mov
arpl
int
jne
je
or
add
pcmpgtw
xchg
out
xor
inc
arpl
clc
repnz
mov
test
jmp
mov
lahf
jne
jmp
outsb
sbb
pop
and
cltd
shlb
mov
push
pop
or
addb
arpl
ja
and
mov
mov
push
and
dec
xor
pushf
pop
ds
movsb
insb
retw
adc
enter
mov
jl
rcrl
leave
subl
adc
mov
and
and
iret
or
sub
jmp
or
adc
dec
test
aam
lret
jno
out
mov
pop
int
fcmovnbe
mov
sahf
popf
push
and
mov
push
sbb
jp
mov
shrl
fnstcw
mov
sbbl
push
cmpsb
out
outsb
in
pop
mov
cmp
pusha
leave
xchg
or
into
pop
xor
lahf
cs
push
and
je
and
dec
fnstenv
decb
cmp
aaa
mov
cmp
scas
mov
iret
cmp
xor
test
mov
cmp
cmp
dec
pop
adc
or
xlat
sub
adc
mov
adc
cmpsl
mov
adc
insl
sbb
sti
mov
cltd
dec
int
sahf
insl
inc
fidivs
sub
or
cmp
push
push
outsb
cmp
cmp
jmp
mov
push
ficompl
rorl
adc
push
mov
enter
cmc
nop
xlat
xlat
imul
inc
add
sub
xor
pop
dec
lds
fisubl
xchg
push
add
add
xchg
jo
mov
jmp
jb
sub
scas
sub
fildll
inc
mov
loope
sbb
dec
mov
jg
icebp
lahf
mov
jmp
add
insb
or
rol
or
mov
add
outsl
int3
call
in
and
in
sti
les
sub
xor
clc
test
jbe
negl
ss
inc
xchg
pushf
cltd
sbbb
push
cld
imul
lods
das
out
add
daa
imul
cwtl
mov
sub
jae
fcompl
cmc
in
fidivrs
std
cmp
shr
mov
jl
cmc
xchg
dec
jae
fldt
cmc
sti
mov
test
inc
or
cmp
xor
fbstp
jp
cmp
pop
aas
int
cmp
stos
arpl
addr16
add
call
loope
pop
popf
fwait
aad
push
bnd
cmc
mov
lock
jnp
loope
add
or
pusha
jle
sbb
cmpsl
xor
push
addr16
add
push
xchg
cmp
sub
mov
fcmovnb
jo
repz
xor
es
das
xchg
lods
mov
ss
std
lcall
imul
mov
inc
add
pop
jg
stc
xor
mov
lods
and
inc
sbb
hlt
mov
jb
adcl
push
mov
shlb
mov
xor
fistl
push
or
dec
inc
mov
dec
pop
cmpsl
lahf
jbe
lea
loopne
mov
cmpb
es
loop
imul
ljmp
shll
outsb
imul
pop
mov
incb
add
and
aad
pop
cmp
cmc
negb
mov
push
pop
push
rcrl
adc
sahf
imul
push
sub
popa
xchg
or
lods
push
mov
enter
sbbb
inc
jo
adc
mov
movsb
mov
cmp
addr16
adcl
push
xlat
jp
sub
lock
xchg
fs
fistpl
cmp
mov
popf
into
or
cmp
xor
test
movsl
push
adc
pop
jbe
test
fwait
mov
and
out
xor
das
and
push
inc
jmp
or
cmp
cs
xchg
movsl
movsl
scas
dec
movsl
repz
aas
lret
loopne
in
pop
movl
add
adc
mov
jl
pop
mov
push
data16
and
jo
frstor
ret
lods
repz
rorb
push
inc
stos
out
pusha
cmpsb
movsl
or
loopne
iret
fimull
test
inc
fstl
pop
adc
stc
cltd
lea
lds
adc
jnp
out
lock
xor
stos
adc
push
nop
clc
lahf
cs
sub
mov
xor
and
out
ds
in
gs
mov
adc
cmpsl
and
add
push
add
leave
mov
andl
in
inc
xor
leave
or
loopne
test
mov
lcall
loope
inc
loopne
and
push
enter
mov
lods
sub
mov
lret
andb
decb
cmp
dec
pop
push
enter
repz
dec
imul
sbb
push
inc
cmp
xor
iret
ffreep
pop
pop
jl
test
int3
mov
in
bound
and
out
mov
fnstsw
mov
das
xchg
mov
std
cmpsl
push
mov
mov
aaa
dec
les
and
push
inc
adc
stc
pushfw
jmp
loopne
enter
mov
cmp
pop
mov
jns
push
add
xchg
mov
aad
hlt
jl
jne
mov
sub
ds
lahf
pusha
mov
inc
mov
call
xchg
insl
nop
and
pop
xchg
pushf
loope
shrl
jbe
je
pop
outsl
arpl
loope
mov
cmp
xor
aam
cmp
shll
mov
mov
out
xchg
adc
mov
xor
push
dec
mov
addr16
fwait
and
insb
push
int
out
stc
cld
xor
and
mov
movsl
pop
add
shlb
inc
ffreep
cmp
shrd
lock
push
mov
ret
dec
stos
add
rcrb
jb
cmpsl
fimull
call
mov
or
pop
and
dec
push
ficoml
xchg
pop
jns
sbb
xor
mov
pop
sahf
in
mov
stos
jbe
sub
out
and
sub
cmpsl
pop
push
pop
cmp
pusha
scas
and
jae
sti
and
jo
xor
ss
clc
mov
fstps
testl
dec
shr
rcll
stos
mov
push
push
mov
pop
xor
out
shrl
call
pop
fadds
sbb
lahf
mov
test
mov
sub
jp
out
inc
lret
dec
mov
test
outsb
fidivl
popa
mov
and
cmp
in
inc
popf
inc
pushf
xchg
push
pop
push
dec
inc
mov
xchg
xlat
lahf
inc
mov
or
adc
mov
out
repnz
ss
aam
rclb
ja
add
jmp
inc
mov
std
jmp
mov
rcl
mov
lret
jmp
dec
push
mov
adc
loopne
or
xor
mov
pushf
rcrb
mov
rcl
push
or
add
mov
fstpt
or
push
adc
rclb
rclb
decb
dec
je
add
daa
fistpll
add
call
xchg
adc
insb
mov
insb
or
arpl
mov
inc
lods
sti
cmpsb
sbb
and
mov
cmp
push
enter
shlb
fisttpl
inc
and
jecxz
roll
jbe
cld
pop
mov
or
dec
adc
loopne
inc
cld
fldl
jge
insb
sub
jg
push
adc
in
enter
insl
aam
xchg
jbe
inc
fiadds
push
call
or
cs
sub
lcall
out
lock
push
call
mov
fwait
sub
jp
jle
xor
mov
ss
jbe
push
sub
and
sub
xor
jmp
fadds
adc
mov
lods
xchg
xchg
fs
js
rol
repnz
push
loopne
adc
test
jecxz
inc
cltd
mov
addl
cmp
sarb
dec
lds
loopne
fstpl
inc
add
push
mov
or
pop
xor
je
insl
push
neg
stos
mov
adc
and
popf
xchg
dec
frstor
imul
je
add
jg
lret
cmp
lds
xchg
or
ret
sub
mov
frstor
jbe
adc
mov
inc
dec
mov
mov
sbb
fbstp
shll
cmp
adc
jecxz
icebp
es
add
lret
mov
test
and
push
jg
into
adc
shrl
lods
jl
outsl
xlat
cld
adc
ds
ss
rep
out
pop
xchg
add
sar
loopne
jmp
nop
stc
inc
scas
cmp
lods
add
ficomps
vmwrite
cmpsl
jmp
lahf
mov
fs
jl
jl
pop
sbb
iret
xchg
lret
or
fists
mov
cli
clc
or
or
addr16
incl
fidivl
cld
fwait
pushf
jle
out
mov
sbb
fwait
pop
dec
or
je
add
adc
repz
jge
int
pop
ljmp
lods
shl
cmp
pushf
aad
xlat
fiaddl
pop
xor
imul
ds
into
addl
adc
cmp
out
cmp
jmp
inc
cld
nop
mov
leave
xchg
or
test
inc
imulb
subb
push
mov
arpl
mov
inc
movsl
mov
ja
data16
sti
push
rcr
repnz
outsb
jl
jbe
fldz
sub
inc
test
jg
repnz
ret
pushf
inc
or
sbb
decl
add
lea
cmp
pop
pushf
sub
push
lcall
mov
punpckhbw
fwait
ljmp
xchg
lods
push
inc
ljmp
or
sar
xchg
aam
lock
mov
inc
in
mov
test
cmpsb
lahf
xor
mov
xlat
mov
fcmovnu
int3
dec
jo
jns
outsl
xchg
negb
cmc
cmpsb
and
das
pop
pop
lret
outsl
icebp
sbb
cli
jbe
sub
jl
cli
mov
jb
push
push
int
rcrl
roll
test
out
aaa
test
iret
or
std
jns
dec
cmp
iret
loopne
sub
mov
lea
bsr
jae
push
popa
sub
jle
jae
les
and
das
sarb
mov
out
call
icebp
pop
xor
mov
pop
mov
sbb
pop
inc
or
aad
seto
pop
push
jns
push
push
test
aas
inc
nop
repz
ret
xlat
push
js
xor
cwtl
mov
outsl
push
pop
mov
fldt
movsl
and
xlat
out
mov
out
scas
imul
pop
mov
int
push
es
out
outsl
into
data16
sub
enter
int3
das
push
mov
div
mov
cmp
sub
lret
push
xchg
lret
cmp
out
das
sbb
stc
cmp
imul
enter
dec
out
jecxz
imul
jae
inc
and
ret
inc
test
adc
ljmp
and
in
pop
cmpsb
sub
fidivl
xor
sahf
js
lahf
or
cmp
iret
push
xor
xor
cwtl
test
and
dec
sub
push
dec
seta
pop
pop
xchg
decb
in
insl
cmp
int3
add
inc
aad
cmp
or
imul
je
stc
out
mov
fcmovnu
sub
je
mov
mov
sbb
push
in
lcall
test
dec
mov
jmp
add
sbb
lds
shlb
insl
enter
int
sbb
mov
sub
mov
sbb
mov
and
cmp
sub
dec
sbbb
mov
sbb
sub
imul
adc
mov
hlt
lds
fs
xor
negl
pop
inc
push
insl
leave
dec
mov
cmp
xor
pop
xchg
pop
mov
mov
fiaddl
rorl
sub
and
push
outsl
cmp
xor
cmc
xchg
fwait
pop
test
es
xor
inc
shrb
xchg
leave
or
pop
sub
mov
mov
push
jno
or
or
mov
cmp
jb
jg
adc
bound
cvtdq2ps
movsl
ljmp
fistps
js
xchg
xor
and
push
add
imul
mov
cmpsb
rorl
mov
testb
lock
and
adc
out
mov
sbbb
push
hlt
mov
loop
jb
sub
xabort
mov
mov
js
sarb
adc
or
mov
rorb
je
dec
xchg
sti
mov
cmp
cli
lahf
iret
inc
js
das
pushf
jl
xchg
inc
mov
jmp
jo,pn
add
dec
adc
mull
xor
mov
int3
pop
stc
or
jb
add
xor
aad
jno
lret
xchg
adcb
mov
inc
mov
cmp
push
icebp
or
bound
mov
js
cmp
cmpsl
xor
sbb
push
icebp
cmpsl
loope
jbe
or
nop
retw
outsl
stos
mov
test
dec
fs
nop
stos
movsl
adc
inc
cmp
xlat
insl
mov
popf
cmp
fwait
test
jb
mov
lcall
frstor
pusha
mov
call
jp
int
jl
xsave
mov
pop
shlb
ret
or
das
fnstsw
aaa
roll
movhps
dec
cmpsb
bound
out
fdivrl
in
jb
cmp
jnp
mov
push
fisubs
xor
jl
xor
add
mov
sbb
jnp
je
nop
mov
lea
xchg
push
jbe
mov
in
call
xlat
aad
or
pop
jge
pushf
push
sub
in
dec
lods
xor
inc
sbbb
xor
popa
sub
sbb
inc
jbe
das
adc
cmpsl
or
loop
mov
dec
cmp
xchg
inc
mov
pop
mov
jl
mov
hlt
or
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
movswl
call
insl
mov
sbb
mov
pop
je
mov
add
jae
push
mov
pop
push
ja
jb
or
pop
call
pop
lods
jne
jnp
icebp
push
inc
sub
iret
pop
mov
call
loopne
pop
aas
or
push
movzwl
pop
xor
jge
and
sub
mov
sub
jmp
mov
cmp
xchg
pop
add
and
fdivrs
sub
call
inc
pop
xor
shlb
add
sub
mov
int
xchg
pop
pop
sub
push
adc
pop
cmp
jne
jmp
jle
sub
mov
sbb
xlat
les
lods
inc
pop
cwtl
mov
lock
add
js
mov
test
xor
hlt
xor
xchg
imulb
xchg
push
testl
hlt
xor
stc
push
push
imul
in
inc
dec
jae
aad
je
hlt
add
pop
xchg
insl
push
jae
fiaddl
test
mov
cmp
inc
out
and
lock
jo
and
or
pop
push
sbb
cmp
push
ds
pushf
mov
push
jae
outsl
in
lock
and
push
test
jnp
mov
pop
inc
fcmovne
push
cmp
mov
jge
sub
pop
mov
inc
xlat
insb
ror
push
out
test
push
push
ret
xchg
inc
fistpl
inc
push
mov
lods
jns
cmp
xchg
xchg
inc
pop
loopne
dec
cmp
les
sub
into
xchg
inc
es
outsb
bnd
mov
jle
xchg
adc
int3
push
fwait
xor
outsl
and
out
inc
ret
xchg
inc
fistpl
ret
andb
fildll
fists
scas
sbb
push
adc
pop
inc
fcmovne
and
jno
or
and
mov
fwait
test
sub
in
xor
pop
push
into
xchg
inc
inc
ss
xchg
fsts
xorb
push
sahf
loopne
popf
dec
pushf
loop
aam
push
push
test
test
xchg
fsts
cmp
jo
int
scas
mov
aaa
pop
adc
sahf
shl
fstps
xor
or
insl
push
sbb
cs
insb
cmp
fcoms
notb
jecxz
jae
in
sub
pop
daa
cmp
lock
idivb
cld
fbstp
inc
js
dec
xchg
cmpsl
xchg
xor
out
bound
xchg
test
in
test
xchg
jmp
ja
fsubl
sbb
jmp
xchg
sbb
ljmp
xchg
repz
cwtl
fldl
pushf
xchg
adc
notb
cmp
notb
fsts
cwtl
adc
adc
xchg
pop
mov
lret
addr16
adc
ret
add
out
xor
outsl
jno
push
out
das
jmp
test
mov
dec
mov
test
movb
inc
out
or
sahf
shll
dec
outsb
sbbb
jge
gs
pop
fisubrl
mov
jge
cmp
xchg
in
incb
subl
add
inc
jnp
fldenv
jb
lock
xchg
cmp
roll
xor
stc
scas
ds
push
sarl
push
push
shll
mov
scas
cmpsl
xor
dec
pavgw
dec
push
imull
mov
ljmp
push
jmp
fprem
scas
dec
lea
and
idiv
scas
dec
adc
mov
xlat
mov
roll
dec
adc
out
dec
mov
scas
dec
mov
xorl
test
movsl
or
test
dec
mov
stc
scas
dec
insl
es
cs
scas
mov
pusha
cmpsb
stos
jecxz
stos
clc
jmp
push
cmpsl
test
lahf
jae
push
mov
imul
subl
mov
mov
lds
cli
scas
dec
in
xchg
ja
scas
dec
mov
stc
scas
cmp
fildll
jne
std
scas
dec
add
not
mov
scas
dec
jecxz
lds
stc
sub
dec
adc
xchg
push
mov
sub
xchg
stc
scas
aam
in
lds
scas
dec
jecxz
and
xchg
std
scas
dec
jecxz
scas
fdivrs
cltd
stos
dec
mov
push
in
mov
stos
dec
mov
push
inc
mov
sub
outsb
mov
scas
test
adcb
ja
xor
notb
cmp
push
mov
and
dec
add
mov
xchg
pusha
and
sub
scas
dec
mov
stc
scas
and
push
stos
sub
jg
inc
mov
sub
inc
mov
sub
push
mov
scas
fcmovbe
call
cmpsl
in
mov
sub
scas
in
lds
scas
dec
jecxz
cmpsb
fsub
ja
push
mov
mov
out
dec
test
inc
fwait
cmp
out
push
out
ljmp
mov
jmp
mov
scas
dec
mov
scas
push
divl
mov
cld
xor
shrl
mov
mov
aam
ud0
decb
pop
mov
lods
ljmp
mov
sbb
mov
aam
ud0
decb
pop
push
jo
add
mov
dec
fistl
loop
imul
jmp
shll
fcomps
test
les
push
stc
mov
mov
dec
cmp
or
pop
mov
outsl
test
fwait
sbb
ret
stc
scas
dec
mov
inc
loop
imul
in
dec
mov
mov
pushf
scas
mov
xor
stc
negl
push
inc
mov
mov
mov
add
mov
dec
fistl
or
pop
mov
subb
mov
cmpsl
pushf
scas
mov
xor
stc
test
adc
add
inc
lcall
dec
in
cld
push
push
add
sub
testl
aam
fsubp
testl
divb
mov
dec
in
mov
scas
dec
mov
scas
dec
mov
rcll
scas
movsl
or
mov
aas
out
stos
dec
mov
sbb
mov
ja
dec
mov
xchg
outsb
xchg
stc
scas
scas
inc
pop
stos
dec
mov
jnp
dec
subb
mov
inc
ret
push
cli
sub
xchg
mov
and
ja
scas
dec
in
xchg
lret
push
lds
pop
push
mov
aaa
lret
fcomps
jae
test
mov
and
inc
lods
sbb
mov
sti
stos
adc
stc
in
stos
arpl
in
fldcw
enter
into
xchg
dec
bound
cmp
pop
mov
call
repz
jmp
cmp
incb
nop
dec
cmpsl
mov
pop
push
fcmovbe
xor
mov
scas
dec
mov
scas
dec
mov
scas
dec
mov
scas
dec
mov
scas
dec
mov
scas
dec
mov
scas
dec
cmp
mov
clc
stc
scas
dec
lock
scas
dec
mov
scas
dec
mov
outsb
push
xor
pusha
push
push
jmp
mov
jns
push
mov
scas
dec
mov
scas
dec
mov
scas
dec
mov
scas
dec
scas
sub
out
fisttpl
inc
xlat
test
das
or
mov
mov
mov
scas
shll
cmp
push
sti
xor
and
xchg
adc
inc
xchg
fst
scas
arpl
jae
es
inc
je
mov
jmp
sbb
fcoml
fsubrl
cld
jbe
and
add
rcll
lahf
clc
jecxz
iret
mov
test
scas
out
aad
lret
and
or
daa
rcr
xchg
icebp
mov
xchg
test
mov
es
pop
int
cwtl
in
outsl
dec
dec
or
shr
ljmp
jmp
outsl
loopne
push
rorl
fisubrs
aaa
add
movl
sub
mov
stos
in
fwait
mov
int3
in
sbbb
cmpsb
sbb
or
pop
pop
leave
jnp
mov
push
xchg
test
int
imul
leave
mov
mov
fcomi
fstpl
fsts
push
sub
sahf
aam
sub
ret
xor
dec
adc
sbb
test
sbb
jle
xlat
out
and
xchg
xchg
mov
xchg
lds
cmpsl
add
push
pushf
ret
call
mov
test
pop
movsl
ffree
lods
and
adc
fwait
out
mov
xchg
vucomiss
stc
ret
jns
lret
xchg
jno
enter
push
es
push
cld
imul
and
lea
push
cmpsb
xor
lahf
sti
mov
mov
mov
cltd
mov
icebp
sub
jp,pt
ds
xlat
xchg
leave
cmpsl
stos
scas
pop
imul
and
in
out
jne
jb
pop
imul
insb
mov
sub
jns
mov
or
loope
fsubrl
mov
jp
in
nop
aam
ss
jmp
cs
xchg
hlt
leave
in
add
fldl
pop
push
jb
test
cld
addr16
filds
dec
shrl
sbb
scas
aas
gs
push
fisubs
add
stos
cmpl
jmp
fwait
arpl
repz
icebp
js
adcb
jle
dec
pop
call
fsubs
and
or
fstpt
xor
mov
push
outsl
cmp
mov
jnp
enter
or
adc
test
daa
sub
mulb
ss
scas
pushf
mov
lds
ret
js
mov
lea
sarb
xchg
outsb
sub
mov
xchg
mov
pop
negl
pop
mov
dec
mov
or
add
inc
movb
je
mov
mov
push
or
and
add
add
add
rorb
rorb
xor
adc
dec
add
pop
or
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
or
hlt
pop
or
adc
or
maxps
and
add
pop
or
cs
or
pop
pop
or
cmp
add
pop
or
inc
pop
or
das
pop
or
push
pop
or
aaa
pop
or
pop
pop
or
aas
pop
or
push
or
inc
pop
or
jne
or
dec
pop
or
sbbb
push
pop
or
pop
or
pop
pop
or
fwait
pop
or
addr16
or
cmpsl
pop
or
outsl
pop
or
mov
or
ja
or
mov
pop
or
pop
or
xchg
add
pop
or
pop
or
ficomps
add
add
add
pop
or
lahf
pop
or
cmc
pop
or
cmpsl
pop
or
add
add
add
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
outsb
imul
insb
add
xor
xor
fs
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
imul
add
outsl
arpl
xor
fs
insb
add
outsb
insl
insl
cs
insb
add
jb
fs
insb
add
imul
fs
insb
add
popa
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
pop
or
add
add
fistps
add
add
add
pop
or
add
add
std
pop
or
add
add
punpcklbw
add
add
pop
pusha
or
add
add
aaa
pusha
or
add
add
dec
pusha
or
add
add
pop
pusha
or
add
add
insb
pusha
or
add
add
jge
or
add
add
mov
add
add
add
add
add
add
add
pusha
or
add
add
pusha
or
add
add
ljmp
add
pusha
or
add
add
or
add
add
add
popa
or
add
add
add
push
gs
arpl
imul
add
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
dec
outsb
je
jb
gs
gs
fs
imul
inc
dec
outsl
arpl
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
jae
jb
gs
je
imul
insl
popa
addr16
imul
dec
arpl
push
imul
jb
popa
je
push
imul
inc
add
add
popa
jb
push
gs
imul
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
inc
inc
insb
gs
outsb
jne
add
add
jbe
dec
jne
push
jb
je
add
add
gs
jo
outsb
inc
outsb
jne
inc
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
popa
arpl
outsl
jb
popa
je
push
inc
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
jo
jb
inc
jbe
outsb
je
add
add
jb
popa
insb
imul
arpl
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
rclb
add
add
add
pop
test
lcall
push
pop
mov
jae
push
adc
loop
imul
lods
hlt
cltd
iret
pop
test
popf
mov
sti
jg
or
push
inc
pop
pop
sub
pop
mov
imul
into
jmp
adc
cmp
into
cmp
sub
cmp
add
in
mov
repz
dec
std
push
pop
clc
hlt
not
jmp
stos
xchg
gs
inc
hlt
out
stc
push
adc
popa
mov
das
adc
mov
push
mov
sahf
push
push
mov
lds
sbb
aas
pop
mov
xor
leave
int3
push
stos
adc
sub
js
icebp
xchg
lret
push
push
cltd
daa
shll
and
fistps
cmp
xchg
ljmp
cmc
gs
jle
dec
arpl
cmpl
fsubr
hlt
or
std
push
mov
data16
adc
daa
cmpb
xchg
push
sti
jns
idivb
cmpsl
nop
test
out
test
pop
xchg
in
clc
xchg
lods
push
in
scas
push
mov
nop
in
jae
xor
pusha
cs
mov
push
lods
xchg
fld
mov
sbb
jns
sarb
daa
lods
cmp
xchg
out
mov
pop
inc
notl
or
xor
pop
dec
insb
cld
jmp
jecxz
fiaddl
add
pop
mov
jae
pop
fadd
mov
jle
inc
jle
xchg
xor
stc
cli
jecxz
call
mov
notl
out
push
adc
inc
jecxz
cmp
insl
jmp
fnstsw
fisttpll
push
xchg
pop
inc
enter
jne
pop
stos
adc
dec
cmp
xchg
jmp
repnz
loop
or
mov
pusha
ljmp
xchg
cmpsb
loop
mov
dec
popa
ficompl
loope
sub
or
out
inc
sub
push
addr16
xchg
push
jge
adc
fwait
or
add
cwtl
xor
xchg
adc
cltd
rclb
mov
mov
inc
adc
push
sahf
push
cmp
orl
xchg
hlt
jmp
lahf
xor
outsb
sbb
in
mov
fdivl
push
xchg
les
imul
dec
mov
adc
out
aaa
shrb
roll
jmp
xor
pop
cmp
fdivp
dec
lds
fmul
pop
jbe
sub
or
nop
repnz
data16
dec
jp
dec
fdivr
imul
repz
aaa
push
fsubrp
dec
jne
mov
je
repnz
push
inc
test
test
aaa
sbb
lock
push
jmp
aas
nop
add
inc
xlat
lods
addr16
jne
stc
pop
nop
loop
ja
sub
out
rcrb
add
sub
popf
cltd
xchg
inc
add
mov
fadds
pop
mov
movsb
xor
jne
or
data16
adc
xor
lea
cmp
shrb
jmp
mov
cld
adc
mov
insl
aas
xchg
jp
lea
pushf
cltd
insb
inc
jecxz
clc
clc
xchg
aas
adcb
scas
mov
dec
pop
mov
rcrl
pushf
cli
or
in
sub
adc
ret
int
dec
xor
pop
test
ss
mov
inc
dec
jecxz
das
mov
xchg
std
xchg
das
call
repz
rclb
lods
fwait
popl
sti
aam
lret
sarl
gs
lea
and
setge
add
subb
xchg
inc
outsb
outsb
add
popa
mov
adc
imul
stc
xchg
jae
fs
aas
add
out
daa
cmp
jp
push
outsb
lea
add
mov
test
dec
xor
lods
sbb
jbe
outsl
pushf
movq
dec
out
jge
call
cmp
push
arpl
push
xor
mov
pop
add
mov
clc
into
xor
rclb
decl
add
sbb
mov
pop
fdivrl
lcall
data16
pop
or
jecxz
adc
fdivs
push
mov
dec
xchg
adc
pop
and
pusha
mov
test
testb
xchg
std
sub
mov
cmp
pop
shrl
sbb
push
stc
dec
stos
je
das
push
ja
or
inc
push
stc
cwtl
fildl
cltd
adcb
imul
dec
out
inc
sbb
jae
xchg
and
lock
mov
push
pop
or
mov
xchg
fldl
cmpsb
iret
arpl
push
addb
insl
sub
cmp
lcall
cmp
xchg
xor
mov
jecxz
xchg
movsb
std
cwtl
cltd
mov
mov
cld
lea
mov
movsb
mov
pop
lds
outsl
jmp
sub
mov
jmp
jp
mov
cmp
jl
or
xor
or
cs
imul
and
jo
jne
outsl
xchg
mov
test
xchg
ja
jae
mov
fld
je
dec
int
dec
jno
mov
and
pop
rcr
rcll
sub
mov
aad
mov
enter
lcall
enter
lret
add
jno
in
or
fcom
xchg
inc
mov
mov
aaa
inc
or
xchg
mov
mov
andl
pop
push
lea
imul
sbb
lcall
sbb
shll
and
sub
mov
cwtl
int
daa
test
scas
jg
cmp
add
decl
sarb
les
lahf
smsw
imul
jge
fildll
mov
fldcw
pop
int3
or
jl
add
pop
sar
mov
push
popa
in
add
cmp
fst
cmpsb
data16
cmpps
movsb
rcll
js
inc
adc
iret
fwait
push
sar
lret
adc
or
or
mov
out
insb
fldl
mov
adc
loop
scas
adc
test
xchg
and
lahf
cwtl
inc
mov
int
rcll
das
cwtl
xchg
inc
dec
call
stos
push
mov
jns
sahf
push
push
stos
ret
push
cmp
mov
inc
mov
mov
gs
outsb
pop
xor
movsb
bound
dec
cmp
pop
inc
dec
aaa
or
pop
add
ficoms
imul
push
push
mov
or
cmp
and
jb
enter
cmp
popa
mov
pop
lods
stos
mov
ljmp
shr
hlt
sbb
subl
pop
push
lret
fistpl
loopne
xchg
jne
pop
stos
shlb
iret
adc
loop
jl
xchg
inc
cwtl
xlat
add
inc
idiv
or
es
ret
push
gs
call
or
shlb
int3
mov
jle
pushf
jle
lret
ja
xor
lds
ret
cmovnp
fldcw
mov
lcall
pusha
in
inc
lea
mov
add
mov
subb
ret
movsl
inc
aad
enter
lea
loope
leave
mov
rorl
and
pop
cmp
aad
add
in
sub
xchg
lahf
std
mov
scas
ljmp
inc
pop
das
mov
jb
mov
cmc
add
stos
lods
repz
arpl
mov
adc
insb
adc
add
test
repnz
mov
cmp
xlat
pop
xor
pusha
test
jp
stos
leave
out
push
add
rcll
pop
sahf
loopne
sbbl
daa
mov
mov
push
cmp
mov
jmp
xchg
add
sbb
and
mov
addr16
aam
dec
xor
jg
sahf
jle
cmp
mov
mov
mov
imul
pop
mov
fnsave
push
adc
mov
cmp
and
mov
mov
inc
out
sbb
negb
push
sbb
mov
popf
mov
xchg
xor
pop
pusha
mov
add
lods
pop
ficoms
ja
lock
lock
ret
scas
cwtl
jnp
fcomps
shlb
in
jne
mov
data16
adc
push
xchg
sbb
adc
into
fiadds
mov
adc
fdivl
mov
aas
mov
cmp
cmp
pop
mov
sbb
incl
jp
cmpl
sub
int3
push
gs
adc
lcall
cmp
sbb
adc
aam
rol
aaa
sub
sbb
inc
test
sub
jg
and
xchg
push
enter
sub
add
or
subb
cmp
sbb
mov
sbb
pop
js
lds
or
rcrb
sbb
pop
rorb
lock
or
jbe
repnz
ret
mov
push
push
xchg
cmp
pop
fldcw
or
push
pop
in
sbb
daa
push
adc
pop
add
cmp
sub
jmp
lods
leave
mov
std
repnz
fwait
xor
xchg
data16
jle
sbb
fwait
leave
sahf
imull
mov
add
out
mov
test
mul
xchg
lcall
jnp
jl
fistpl
scas
adc
cmp
pop
pop
sub
push
and
cs
iret
sub
fdiv
mov
mov
pop
push
stos
nop
add
negb
clc
repnz
jmp
jp
xor
push
daa
mov
pushl
jecxz
sub
xchg
cmc
mov
sbb
fucomp
push
and
stc
pop
or
push
adc
and
in
icebp
fwait
mov
sahf
arpl
add
cwtl
xchg
xchg
inc
xchg
push
lds
mov
int
cmp
xchg
vmwrite
pop
pop
hlt
inc
lea
adc
movsb
mov
je
pop
pop
push
pop
jecxz
xor
ljmp
xor
jne
inc
pop
ss
cli
mov
sbb
cli
xlat
iret
xor
out
mov
int
push
jmp
leave
jno
repz
dec
xchg
cmp
mov
xor
mov
lret
mov
enter
mov
cmp
adc
sbb
pop
xor
les
rorl
nop/reserved
lods
ss
int3
out
sub
loope
pop
cmp
add
repz
add
ja
mov
sahf
mov
fdivrp
cmp
shrb
imul
jne
xor
add
push
sbb
cmpsl
movsb
stc
and
sbb
adc
pop
and
in
mov
inc
fbstp
push
dec
inc
ret
xor
movd
dec
adc
jle
sub
mov
push
addb
and
cmp
push
jno
adc
scas
rcrb
jbe
mov
sbb
mov
hlt
or
cmpsb
sub
or
ja
mov
decb
repz
or
call
mov
push
or
ljmp
int
xor
xchg
arpl
in
mov
mov
outsl
lock
out
bound
rorl
cmp
cli
pop
leave
out
fildl
outsb
sub
dec
pop
imul
push
jecxz
shll
mov
xchg
mov
jg
and
xor
test
dec
ret
outsl
or
or
jp
dec
mov
sub
add
fsubr
sahf
jb
push
psrlw
inc
push
mov
out
int3
mov
pop
sbb
scas
jmp
mov
leave
push
mov
sbb
jbe
std
stos
add
push
addr16
jp
lock
add
daa
rcrw
stos
rcr
test
xchg
out
hlt
mull
mov
fcmovbe
es
rorb
ja
aas
fs
stos
fdivrl
or
add
push
and
xchg
mov
cwtl
mov
lock
sub
cmc
insb
test
push
and
es
aam
mov
std
adc
mov
inc
inc
xchg
cmp
flds
mov
cmpsb
inc
ss
mov
dec
insl
std
aad
push
aad
sub
xor
decl
add
test
mov
fdivr
dec
add
jmp
stos
pop
push
push
insb
xor
testl
mov
aas
rolb
fwait
lods
mov
push
xchg
sar
jb
outsl
repz
in
lea
jne
movsb
rol
cmp
push
test
jbe
sub
pop
push
sub
rcl
mov
insb
les
xchg
cmp
in
aaa
jb
cwtl
call
mov
and
movsl
repz
or
xchg
pop
push
mov
mov
in
cld
push
push
dec
mov
ficomps
shl
ret
pop
push
ret
leave
lods
mov
daa
sahf
sub
fwait
repz
jmp
mov
cli
enter
mov
lds
nop
lcall
inc
mov
ret
test
and
sub
adcb
xchg
xor
idivl
out
dec
stos
insb
movsl
and
cmp
add
cwtl
or
es
sbb
or
pop
jns
xor
es
lea
push
xor
xchg
fiadds
pop
sbb
clc
sub
pushf
jo
mov
sub
xor
lods
xchg
jo
sub
repnz
pushf
dec
dec
cmpsl
enter
pop
jp
test
mov
mov
pop
jp
push
and
stc
pop
adc
sbb
js
jecxz
pushf
mov
jmp
add
hlt
rclb
xor
add
ss
sahf
cmp
inc
and
or
loop
fwait
scas
push
out
cmp
addr16
out
mov
lds
pop
add
and
xor
add
inc
cmp
frstor
pop
push
pop
xchg
les
sbb
mov
cmpsl
pop
aad
das
or
pop
push
test
addr16
mov
push
pop
shll
jmp
cmp
je
ror
stos
mov
rcrl
inc
add
add
fistps
mov
rcrb
mov
loope
or
pop
or
dec
pop
lock
in
ss
fsubl
fiadds
loope
cmp
xlat
sahf
adc
insb
pop
xor
inc
push
cmpsl
mov
mov
call
and
sub
and
sarb
inc
xor
push
leave
xor
add
movsl
stos
sti
imul
sti
fisubs
aaa
loopne
add
popf
sub
cmp
pop
loop
mov
shrl
lock
pop
popw
push
aad
insl
push
movsl
mov
imul
mov
icebp
dec
or
jo
jo
sub
lods
shrb
adc
mov
arpl
jmp
cmp
sub
outsl
arpl
lcall
mov
xchg
mov
push
jle
add
xor
shrb
and
rcl
pop
les
xchg
lea
and
mov
mov
mov
lods
xchg
iret
test
mov
push
iret
mov
or
imul
lahf
aad
jle
test
push
mov
cmc
into
add
xchg
movsb
or
aaa
sahf
ja
nop
jno
xor
xchg
mov
outsl
movsb
movsw
push
push
dec
pop
js,pn
add
sar
icebp
lods
data16
inc
mov
mov
inc
imul
pop
cmpsb
out
outsl
add
pop
addr16
mov
pushf
mov
and
mov
sbb
jle
push
pop
mov
mov
add
jnp
adc
rcl
int3
in
nop
nop
out
repnz
mov
push
je
adc
les
push
sub
lcall
jl
loopne
aad
clc
jae
xchg
pop
pusha
cmpsb
push
popf
into
out
cld
add
test
loope
adc
mov
dec
imul
das
cmp
je
es
lock
imul
xchg
test
jns
int
test
pminub
fwait
dec
sbb
mov
ljmp
cmpsb
mov
jp
es
and
jno
dec
sbb
leave
jo
adc
inc
push
jge
ss
test
test
inc
jp
out
dec
mov
sahf
and
sbbb
fadd
fistpl
fimull
inc
pop
repnz
sbb
mov
mov
insb
cwtl
insb
cld
loope
mov
add
xor
xor
js
dec
sbbb
cltd
jl
shll
popa
mov
subl
jge
mov
aas
insl
inc
pop
pusha
sbb
jmp
daa
rorb
rolb
sbb
jge
jle
pop
cwtl
stos
cmp
out
dec
int
cltd
shrl
lret
lahf
aaa
xchg
lcall
and
jbe
add
mov
inc
jg,pn
daa
push
lock
jae
inc
aaa
outsl
das
insb
dec
out
or
xor
xor
pushf
jae
dec
ret
cmp
xor
pushf
loope
es
inc
es
dec
les
push
imul
inc
lods
and
inc
or
repz
sbb
dec
dec
adc
cmc
ret
sub
decb
cmpsl
push
mov
fadds
sbb
imul
das
mov
js
into
pop
in
fs
or
lret
sub
addr16
jle
daa
mov
jae
mov
push
aas
adc
in
cmp
pusha
mov
xchg
sbb
dec
repz
mov
sar
jmp
shll
xlat
add
int3
fidivs
roll
addr16
pop
fadd
or
pop
cmpsl
add
xchg
xchg
mov
in
aam
mov
sbb
push
mov
sub
fwait
mov
pop
les
xchg
mov
mov
sahf
mov
push
pusha
or
inc
cmpsb
out
clc
pushf
xchg
iret
pop
ret
push
mov
popf
mov
or
and
push
addr16
shr
xchg
jnp
jb
mov
ljmp
js
mov
xchg
ss
notl
and
dec
es
in
cwtl
inc
lock
mov
adc
les
popa
mov
xchg
jp
out
mov
xchg
dec
sub
insb
scas
scas
mov
fdivl
and
xchg
jge
std
add
pop
lret
jl
fwait
adc
dec
sbb
nop
clc
jnp
sti
jns
or
add
pop
mov
jne
adc
loope
int
xchg
pop
leave
adc
fsubrs
lahf
mov
xor
pop
inc
das
jmp
fsubs
fdivrl
aam
rcl
add
unpcklps
add
mov
nop
loope
mov
xchg
push
jo
mov
loop
imul
das
shrb
mov
push
das
dec
xchg
sub
mov
mov
add
ds
les
pop
stos
ret
movsl
lret
pop
inc
insb
dec
dec
or
inc
lds
ret
xchg
fisttpl
jbe
popa
dec
iret
add
lds
pop
adc
iret
pop
jo
std
in
aam
dec
sar
jns
fists
js
cwtl
mov
cmc
shl
inc
sbb
mov
call
stos
dec
or
ljmp
divb
mov
or
and
hlt
repz
inc
jmp
daa
pushf
and
lods
out
cs
adc
add
push
dec
sbb
mov
pushf
stos
pop
add
outsb
dec
or
das
mov
xlat
pushf
mov
cmpb
lods
test
insl
adc
dec
aas
mov
gs
cmpsb
lahf
js
cmp
adc
cmp
jmp
addr16
lahf
mov
notl
mov
mov
push
daa
test
adc
test
pusha
cmp
sbb
pop
inc
pop
xchg
mov
repz
and
mov
mov
rcrl
push
inc
xchg
cmpsl
scas
jecxz
lds
dec
lret
ljmp
adc
shlb
add
sbb
inc
lock
mov
test
mov
fisubs
xor
cli
sbb
xchg
jl
jg
fwait
pop
cmp
fildll
adc
dec
repnz
sbb
push
popa
rcrl
mov
out
std
xchg
pop
adc
std
hlt
cwtl
ds
adcl
xchg
lock
std
fistpll
mov
cld
mov
cmpsl
ja
inc
mov
and
sbb
shl
out
scas
mov
sbb
xor
push
inc
sti
loopne
dec
dec
and
into
dec
pusha
xchg
jle
icebp
mov
and
mov
adc
int3
loop
fs
sbb
dec
mov
xlat
or
ja
popf
fdivl
outsl
add
push
sbb
test
int
les
out
pop
xchg
cld
ljmp
jp
sub
dec
add
ret
pushf
adc
jns
lock
add
das
movsl
lret
jns
mov
adc
sbb
fwait
mov
sub
cmp
mov
mov
movsb
or
arpl
lock
call
int3
mov
sbb
pop
fsubl
mov
fidivrl
xor
clc
cmpsb
adc
idivl
inc
or
out
fbld
inc
out
xchg
inc
dec
rorl
mov
cwtl
push
xchg
stos
std
out
in
ret
push
ss
adc
pop
inc
fildl
adc
mov
cmpsb
mov
xchg
out
mov
adcl
test
loope
or
adcb
insb
cwtl
mulb
mov
cmpb
xor
push
call
mov
sub
fst
mov
out
cli
popa
mov
mulb
mov
roll
dec
mov
inc
jge
or
lods
xchg
push
nop
faddp
outsl
fnstcw
sub
mov
in
popf
adc
sub
add
imul
or
mov
shl
push
fs
mov
cli
inc
mov
cli
nop
aas
sti
mov
je
int
pop
in
fmulp
jmp
sti
cmp
pop
lods
adc
enter
sub
adc
rcl
push
xor
mov
and
gs
sbb
push
in
ret
out
sub
sub
add
out
sub
xor
xchg
or
push
fcmove
outsb
xchg
movsb
push
jns
outsb
scas
pop
dec
in
in
or
push
data16
adc
jns
dec
addl
inc
add
dec
mov
js
pop
jmp
ret
push
lahf
mov
cmp
lret
jno
pushl
out
or
jmp
es
push
and
stos
pop
outsl
aaa
pushf
or
addr16
cli
popf
pop
xor
ds
aas
bound
and
mov
sub
sahf
mov
leave
fidivl
mov
xchg
sbb
fdivrl
sbb
andl
pop
mov
out
dec
repnz
mov
shl
in
mov
jecxz
lods
in
jb
dec
jno
fwait
sarl
sbb
mov
aaa
push
mov
pop
jge
gs
roll
lods
cmpsl
push
loope
in
add
adc
xchg
sbb
jae
mov
sub
loope
sub
out
inc
pop
mov
mov
test
and
imul
jl
push
iret
std
incl
test
sbb
sub
mulb
jmp
fs
arpl
mov
lock
jnp
jg
scas
ja
xor
sarb
mov
inc
mov
cmpl
iret
inc
loope
lds
mov
sub
adc
sub
dec
mov
jne
xchg
jnp
sbb
sbbl
pop
icebp
andl
loop
roll
mov
iret
push
xchg
out
push
mov
sti
and
jno
pushf
sahf
rolb
in
in
add
bound
inc
xchg
add
sbb
mov
pusha
and
cmc
es
movb
push
shlb
in
imull
in
movb
jg
into
stos
jecxz
cwtl
pop
xchg
sub
cmp
fnstcw
incl
pop
stc
nop
mov
fsubs
push
adc
or
fs
and
push
xchg
xor
or
dec
dec
sub
mov
add
pop
ja
mov
pop
jl
dec
repnz
movsb
sub
and
fbstp
mov
sbbl
cld
xor
pusha
dec
push
js
rcll
fidivrs
lods
lcall
push
push
xchg
ret
ret
push
call
xchg
mov
push
cmpsb
inc
ja
sub
fiadds
cld
mov
movsl
mov
shlb
and
clc
dec
inc
scas
rcrl
stc
dec
or
sahf
fimuls
dec
sub
push
mul
inc
int3
adc
jge
or
jo
inc
xorl
insb
fistpl
mov
les
xor
xor
adcl
in
jg
lahf
add
int
jecxz
jnp
std
icebp
cmc
int3
cmc
leave
dec
sbb
out
sbb
test
pextrw
adc
inc
xlat
lahf
inc
call
mov
sbb
push
shll
cmp
ja
dec
loope
mov
outsl
sub
add
or
mov
shlb
cmp
stos
mov
cmpsl
pop
mov
pop
lcall
fidivrl
pop
sbb
outsl
or
or
cld
gs
rep
jecxz
js
jne
sub
int3
cli
sub
je
sti
scas
dec
std
insb
cmp
adc
lahf
std
cld
dec
out
lods
shrd
ret
and
push
xchg
stos
rcrb
xchg
xor
push
xor
pop
imul
test
push
icebp
or
sbb
xor
clc
lret
cmp
cmp
sarl
lods
sub
pop
mov
ja
mov
fistps
clc
cwtl
pop
leave
inc
jns
and
lcall
adc
mov
sub
and
sub
push
aaa
rorl
aas
lods
cmp
leave
daa
inc
sarl
and
xor
xchg
ds
push
sbbl
push
lret
dec
sbb
push
or
int3
inc
mov
sbb
dec
lret
jecxz
mov
bound
cltd
sbb
arpl
ja
sti
mov
mov
cwtl
adc
push
and
orb
out
in
sbb
jg
jns
cmp
je
test
pop
daa
aas
lods
scas
cmc
in
imul
das
pop
mov
jo
ret
lret
jmp
ds
jmp
enter
mov
test
or
rorb
insb
outsl
aam
mov
rorb
scas
rcrb
cmp
jp
lock
test
or
nop
xlat
loopne
add
mov
mov
jge
aas
mov
loopne
outsb
insl
fisubrs
and
mov
inc
adc
aaa
jbe
adc
inc
imul
mul
pop
frstor
ret
fimull
out
xor
std
dec
dec
out
stos
mov
mov
push
and
inc
call
gs
shlb
cmpsb
shrb
mov
xor
sbb
inc
fwait
shrl
mov
inc
xchg
jae
mov
mov
or
or
sub
dec
sbb
orl
aam
sbb
in
cmp
xor
nop
add
test
iret
add
mov
addr16
add
mov
mov
adc
js
std
cli
enter
pop
push
shl
loop
das
xor
jmp
test
fbld
mov
shl
dec
lock
and
mov
call
jne
xor
ja
add
add
and
xchg
sbb
push
dec
mov
xor
mov
les
xor
mov
mov
int
add
out
jmp
stc
out
insl
popf
mov
add
leave
in
adc
dec
pusha
jle
mov
sub
mov
sbb
cmpsl
int3
pop
sbb
push
in
push
test
fsub
sbb
mov
loopne
outsb
xor
ss
insb
add
imul
or
jbe
stc
cmc
lods
sbb
push
fucom
xor
loopne
ds
aam
cmp
shlb
and
pop
outsb
mov
adc
and
loop
fcomip
and
xlat
mov
mov
and
lahf
mov
sbb
loope
pop
sbb
pop
dec
push
or
xor
xor
out
and
in
daa
js
jl
inc
mov
push
cmp
jb
jmp
ja
and
xlat
dec
sbb
shll
js
shll
push
mov
jno
int
ja
fistps
mov
je
loop
and
popf
iret
lods
test
xchg
lods
xchg
cmp
repnz
insb
or
cltd
andl
push
add
in
pop
sub
rclb
clc
repz
push
mov
jns
sbb
out
mov
or
push
jno
fcom
movb
in
mov
fwait
adc
mov
push
iret
jg
les
jecxz
shrb
push
imul
adc
test
inc
push
sub
mov
pop
jl
out
leave
adc
mov
push
data16
divl
aaa
lret
dec
and
aam
pushf
popf
mov
rcrl
or
jecxz
mov
fiadds
push
xchg
addr16
out
shlb
jl
sub
mov
shlb
lahf
je
fisttps
xor
and
pop
bound
xor
mov
mov
mov
or
pop
adc
xor
outsb
loope
insl
push
inc
fimull
and
add
inc
scas
pop
add
aas
mov
pop
jecxz
nop
movsb
rorl
cmc
pusha
or
sarb
arpl
add
insb
and
jle
push
add
inc
xlat
das
cld
xor
movsl
orl
dec
filds
es
loop
icebp
cmc
xor
mov
fcom
sub
pop
mov
jle
jg
in
jge
setge
movsl
and
stos
cli
pop
cmc
aaa
imul
or
int3
insb
lea
sub
mul
hlt
enter
inc
shrl
and
mov
ss
add
stc
mov
dec
mov
outsb
insb
push
push
and
stos
int
adc
movsb
or
cmp
movsb
cld
out
pop
ret
pop
js
rcr
lcall
mov
into
call
adc
xchg
cmp
inc
jecxz
icebp
xlat
xor
stos
je
lret
ss
leave
push
shlb
xlat
mov
xor
lahf
ret
push
cmp
out
int3
jg
icebp
fstpl
sbb
sbb
orb
mov
mov
jns
xchg
in
inc
add
sti
icebp
cld
xor
scas
andb
adc
pop
add
ret
roll
adc
dec
je
cmp
pop
add
stc
in
mov
cmp
add
aad
jne
sub
cmp
mov
les
or
cmp
aam
pop
push
orl
fsub
mov
mov
call
pop
mov
push
push
xor
push
jnp
aad
fmull
xchg
jno
mov
out
mov
sub
xor
add
movsb
aad
or
xchg
sbbl
sub
push
orl
inc
or
dec
scas
pop
adc
movl
or
xor
adc
xchg
dec
jo
inc
jle
arpl
mov
sti
mov
jbe
jnp
fdivrl
arpl
out
mov
mov
ficoms
cmp
fistpll
jne
insb
ja
mov
push
jle
sbb
ds
mov
lods
cwtl
push
fsub
shlb
dec
jae
dec
and
imul
fisubrs
lds
stc
mov
adc
adc
inc
pop
or
gs
insl
fsubrp
mov
xchg
lret
push
addr16
data16
hlt
cwtl
push
sbb
jecxz
cmp
enter
inc
push
pop
add
mov
dec
mov
dec
mov
pusha
scas
loopne
lahf
dec
pop
xor
stos
inc
hlt
inc
inc
adc
jbe
mov
out
add
jle
mov
loop
add
call
add
in
sbb
cli
les
test
mov
xor
push
add
mov
sarl
mov
adc
mov
fidivs
dec
inc
sbb
add
sti
inc
sbb
mov
push
jno
push
insb
jmp
pusha
sub
sub
or
out
and
cld
jge
sub
pop
adc
mov
out
cli
xor
icebp
fidivl
mov
sub
out
jae
mov
inc
shl
pop
cmp
and
mov
inc
mov
cli
xchg
add
cmp
sbb
loope
jae
js
jmp
pusha
inc
pop
cwtl
jp
jg
xchg
add
or
dec
mov
out
inc
sbb
sbb
cs
cmp
lods
adc
pop
jno
inc
stc
push
es
adc
out
scas
in
into
cmp
sbbb
daa
movsb
pop
pop
push
pop
push
popa
push
push
xor
ret
push
jg
into
mov
jbe
adc
out
push
xchg
ss
or
repnz
cmp
mov
popa
or
pop
sahf
cltd
aad
jmp
fildl
xchg
dec
push
outsb
js
hlt
push
aad
push
test
xchg
arpl
jmp
xor
fldenv
cmpsb
jne
or
cmpsl
dec
sti
les
add
adc
mov
call
inc
arpl
push
ljmp
and
fs
cltd
add
mov
jle
int
mov
inc
bound
lock
sub
mov
inc
and
idivl
ret
jb
dec
and
popf
pop
idivl
cmpl
ljmp
mov
push
or
sahf
cmc
dec
les
addr16
scas
jnp
xor
shlb
into
cs
out
jp
mov
inc
xorb
mov
fsts
push
push
dec
adc
or
mov
mov
jae
jmp
int3
push
push
inc
fdivs
jmp
loop
mov
cmpl
push
and
fdivs
int3
rcl
cmpsl
and
aad
push
insl
lcall
add
pop
jge
xor
sahf
popl
sti
pop
or
lret
fs
scas
push
sahf
in
push
xchg
xchg
ret
mov
mov
hlt
mov
shrl
xchg
xchg
inc
sub
inc
imul
sub
sbb
xchg
femms
jge
xor
inc
inc
test
xor
mov
sub
movsb
sub
or
out
in
sub
sub
xchg
dec
incl
fs
mov
aas
mov
arpl
repz
arpl
outsl
ret
xchg
mov
sub
imul
mov
pop
fimuls
cmp
mov
sub
jo
add
sahf
cmpsb
pop
or
mov
ret
xor
cmp
mov
fmuls
push
xchg
insl
fcomps
in
xchg
xor
jbe
cmpsb
mov
sahf
mov
adc
xor
in
sbb
data16
jp
or
jo
jge
popf
ficoms
dec
loopne
sub
outsb
cld
scas
es
lea
sbbl
insl
inc
aaa
mov
je
push
daa
or
sub
insl
jno
or
roll
push
sub
nop
push
jle
mov
out
das
test
aas
sbb
mov
js
icebp
push
cmp
scas
in
push
js
push
inc
aas
ljmp
xchg
jmp
shl
aad
sbb
sub
inc
popf
xchg
lods
cmp
out
add
cmp
stos
lds
xor
sahf
push
cmp
movsl
pusha
fs
add
ljmp
mov
or
inc
xchg
xchg
sbb
jge
sub
subl
les
lret
pop
out
movsl
mov
cld
popf
stos
aas
clc
inc
mov
sbb
in
mov
mov
push
sbb
shrb
dec
nop
arpl
movsl
insb
inc
mov
sub
add
add
mov
or
sbb
pop
or
arpl
mov
push
pusha
inc
and
out
push
xor
aad
in
adc
aam
pusha
push
leave
jge
popa
int3
push
jle
aad
pop
sub
imulb
sbb
xchg
mov
lods
lahf
js
mov
dec
jbe
fs
xchg
dec
or
ret
in
pop
xchg
sbb
or
mov
psrlq
je
idivl
inc
pop
leave
jp
fisttpl
push
clc
and
or
fs
pop
test
mov
jmp
xchg
cmp
mov
std
lret
xor
pop
pop
xchg
jmp
cmp
and
jg
imul
fidivl
sub
xorb
lss
shr
or
push
sub
push
xchg
sub
hlt
enter
xchg
fcomps
mov
pop
outsb
pop
xchg
pop
mov
pop
jnp
pop
sbbb
inc
and
ret
cltd
hlt
jno
cmp
mov
add
aaa
cmp
subl
push
fmul
and
popf
dec
imulb
push
ja
cmp
jecxz
lcall
push
ljmp
mov
idivl
mov
gs
int
inc
pusha
mov
setl
inc
in
lods
out
nop
stc
scas
push
sub
and
clc
sub
and
xchg
stos
add
adc
aaa
test
sbb
pop
pop
int
mov
pop
fidivrl
mov
outsb
push
add
add
sub
jb
fldl
and
repnz
sub
jmp
std
ja
pop
push
ret
std
inc
rol
sub
xchg
add
rcl
mov
subl
or
loop
push
jmp
lahf
test
cmp
aam
fnstsw
jmp
lcall
fimuls
mov
mov
xchg
cmp
or
dec
call
or
xor
lods
mov
push
cld
inc
jg
xchg
out
add
movzwl
int3
sub
sbb
push
ret
cmp
test
pop
jns
imul
ret
inc
lock
out
hlt
jo
inc
jl
addr16
sub
add
or
jns
jg
pop
adc
mov
or
ret
into
sub
push
add
aam
out
clc
stos
pop
out
mov
cmpsb
pop
lods
cltd
mov
mov
and
sub
add
inc
sub
pop
sbb
ljmp
insb
mov
mov
jae
outsb
dec
inc
sub
popa
cmpsb
push
sub
test
add
push
in
pop
das
sahf
movsl
or
inc
lock
xchg
frstor
cld
in
jecxz,pn
fs
cwtl
fldcw
mov
daa
inc
cmpsb
mov
or
loop
jmp
adc
add
sar
lds
jns
sbb
ret
xor
push
xor
test
jae
xchg
sub
push
mov
insb
icebp
jb
orl
push
cltd
push
int
shr
loopne
scas
xor
dec
sbb
adc
pop
outsl
dec
and
xor
push
xor
outsl
dec
push
and
mov
insb
sbb
fwait
cltd
or
and
mov
incb
addr16
push
rcl
or
test
test
scas
movsl
mov
sbb
int3
mov
loope
add
jmp
push
mov
imul
nop
mov
lret
push
push
popf
roll
push
fldl
scas
jae
jle
or
popf
cmpsl
outsl
mov
or
xchg
jl
sub
push
testl
inc
xlat
fdivrs
xor
ret
xchg
ja
adc
fldl
jns
test
ljmp
add
sub
bound
and
adc
repnz
xor
aad
cmp
popa
int3
dec
pusha
mov
mov
dec
mov
ljmp
cmpsb
addr16
mov
dec
mov
std
cmp
stos
fwait
lret
scas
test
pop
add
int
andl
iret
cli
lock
adc
dec
int3
xorl
sbb
jno
mov
mov
fdivrs
out
push
in
sbb
xchg
cmp
gs
pop
inc
mov
push
jns
mov
cmp
outsb
xchg
arpl
dec
ret
mov
xchg
mov
ljmp
lods
test
adc
ljmp
cwtl
js
or
add
cwtl
push
and
add
andb
mov
outsb
mov
pop
pop
xchg
out
iret
out
std
xchg
inc
dec
popa
pop
test
cmpsb
xchg
jg
and
clc
popf
and
or
stos
aas
sbb
or
dec
dec
ret
pop
add
or
jmp
xchg
andl
add
mov
push
push
stos
xor
mov
repz
in
roll
jbe
jns
push
lret
in
mov
sub
pop
adc
sbb
sbb
daa
xchg
adc
xchg
mov
and
dec
imul
dec
inc
mov
mov
sub
xor
es
sahf
or
test
mov
hlt
lahf
scas
in
jns
stc
mov
mov
and
adc
xor
icebp
std
popf
lret
int
loopne
popf
andb
cwtl
popl
xchg
or
pusha
sti
outsb
pop
leave
jp
test
iret
pop
or
scas
test
sbb
xlat
hlt
mov
push
fmul
and
cmp
iret
test
adc
movsl
or
mov
nop
out
ret
leave
sbb
dec
sub
push
ss
fstl
dec
xchg
fnstcw
lods
mov
les
and
xchg
loopne
ret
push
push
outsb
pop
sbb
dec
sahf
fisubrs
push
fdivr
jg
jmp
scas
cmc
xchg
loope
jg
pop
xchg
or
pushf
push
enter
fs
sbb
pusha
imul
and
inc
xor
jp
sub
dec
outsb
mov
aam
jns
jne
stos
mov
iret
pop
push
jle
loopne
out
fnsave
out
mov
std
cmp
push
repz
sbb
pop
jo
push
dec
xchg
hlt
andb
add
sub
xchg
les
aad
or
xchg
sysret
jp
pop
mov
es
sub
idivl
gs
dec
fsubrl
lret
mov
div
jecxz
mov
add
and
jp
nop
shrb
sahf
ss
dec
sub
xchg
pop
jno
inc
jmp
sbb
out
sarb
lahf
sub
jl
adc
shl
movsb
leave
pushf
adc
lahf
sbb
xor
xlat
jo
stos
sbb
repnz
mov
jb
inc
xchg
testl
push
pminub
or
sbb
cmp
adc
mov
mov
adc
xlat
fimull
test
or
daa
and
cmp
sbb
lcall
out
push
pop
cmp
pop
gs
mov
nop
ds
test
fistl
mov
adc
adc
xor
sub
jae
sbb
pop
clc
ret
adc
xor
inc
xchg
jle
andb
lods
lret
jnp
jl
aas
in
jb
jo
push
movsl
dec
fsubl
cmp
aaa
sti
enter
pop
rcrb
filds
mov
add
into
adcl
sahf
in
aaa
dec
mov
daa
cmc
in
inc
or
popa
jg
ss
loopne
movsb
clc
lds
xorl
xchg
insl
ss
leave
arpl
in
adc
mov
clc
hlt
jns
bound
jbe
pushf
inc
and
push
add
jns
popf
jmp
stos
sbbl
sub
les
dec
mov
outsl
mov
inc
xchg
sub
lret
js
cmc
loope
adc
mov
cmp
xchg
je
adc
pop
test
fucomi
fists
cmpsb
test
lods
sti
push
or
sbb
mov
lret
negb
cmp
cld
or
dec
push
sahf
fs
or
outsl
test
cmp
dec
xlat
loop
mov
mov
inc
fldt
lret
and
repz
xlat
inc
or
loop
mov
movsb
push
std
dec
in
inc
or
addb
push
xchg
push
lods
out
out
push
or
push
rcrb
mov
clc
sahf
adc
inc
mov
mov
and
daa
mov
lret
neg
lcall
mov
popf
xchg
add
fdivrl
cmp
nop
nopl
push
jnp
pushl
inc
mov
lea
popf
scas
jbe
or
sub
adc
sub
sub
pop
rolb
jne
in
stc
fistpl
push
mov
inc
xor
aas
mov
out
lret
adc
pop
aaa
push
dec
or
pop
sahf
aaa
aas
sar
gs
pop
aas
test
sti
dec
out
pop
mov
adc
inc
lahf
mov
add
mov
out
add
stos
rcll
ljmp
mov
xor
in
js
fcomi
push
pop
xor
jge
sahf
mov
repnz
xor
nop
popa
mov
into
push
push
lds
sahf
jne
das
das
and
loop
mov
sub
mov
mov
incb
add
je
cmp
xor
shrl
push
sub
mov
outsl
add
or
outsb
dec
loopne
cs
and
mov
clc
xor
mov
loopne
jge
popa
cmp
insb
pop
stos
mov
fimuls
insb
jnp
xor
inc
ret
push
push
push
movsb
inc
lahf
dec
dec
jg
xor
aaa
sbb
mov
mov
cltd
outsb
shlb
or
sbb
or
daa
hlt
inc
fwait
add
xor
or
xchg
sub
and
movsl
incl
sbb
add
xor
rcll
add
lret
imul
or
andb
aad
fdivr
mov
push
mov
lcall
imul
lock
cld
inc
sub
adc
xor
call
outsl
mov
or
or
pop
cmpsb
or
mov
fisttpll
mov
flds
js
fdivrs
hlt
imul
dec
into
sub
sti
adcl
mov
lods
emms
lret
and
dec
cmp
push
xor
xlat
repnz
mov
jae
pop
es
push
aam
insb
xchg
mov
and
daa
inc
mov
pushf
mov
mov
out
shl
adc
sbb
push
push
pop
test
pushf
adc
pop
cmp
push
clc
add
inc
lock
sbb
ret
cwtl
xchg
push
int
rcll
pop
mov
mov
or
push
mov
sub
pop
inc
add
dec
ja
ljmp
test
mov
jle
mov
inc
decl
inc
pop
test
sbb
dec
cld
sbb
loopne
inc
cmp
loop
lret
mov
pusha
and
rcrb
les
xchg
jae
or
xchg
or
pop
mov
mov
jecxz
outsb
dec
incl
push
out
mov
mov
jno
adc
out
rcr
stos
into
clc
insl
pop
bound
inc
rolb
pop
lea
loop
nop
ret
push
jae
ljmp
sub
out
repnz
mov
push
mov
dec
mov
mov
shlb
sub
mov
js
arpl
aaa
ret
cmp
and
inc
dec
mov
outsl
bound
rolb
mov
lret
notl
movsb
ja
mov
insl
push
fstps
or
les
or
enter
jae
sbb
and
fildl
loopne
mov
mov
push
cmp
mov
mov
cmpsl
jns
push
bound
sarb
xor
outsl
push
inc
inc
in
in
lds
pop
cwtl
jb
pop
je
stos
inc
orl
cmpsb
test
cmp
xor
iret
pop
jo
xchg
or
mov
jno
lret
data16
mov
ss
lret
sbbb
orb
mov
cmpsl
inc
sub
push
je
add
pop
and
filds
dec
fsubrs
push
dec
nopl
mov
imul
andl
repnz
lods
popa
and
loopne
jb
push
xor
push
mov
jns
mov
mov
fsubrl
jmp
pop
xor
insl
loop
scas
or
aad
insl
mov
xor
loop
pushf
jmp
inc
lods
cli
es
cmp
mov
test
inc
lods
movsb
jmp
dec
outsb
adc
add
pop
pop
jl
scas
pop
dec
dec
mov
sbb
cmp
cmpsb
stos
jno
cld
cmp
push
or
aad
push
js
mov
sub
loope
adcb
sub
stos
xor
fstps
jne
out
push
loopne,pt
data16
mov
lahf
ret
jns
repz
push
adc
popa
dec
lea
aam
sbb
dec
add
or
cmp
into
sbb
fstp
jecxz
inc
push
outsb
int3
mov
addr16
sarl
idivl
cld
rcll
and
fwait
xor
xlat
shlb
push
int
jge
sbb
dec
enter
aad
leave
out
xor
sti
sarl
sub
inc
mov
mov
pop
dec
shl
push
scas
pop
ret
jb
add
inc
jmp
dec
mov
mov
dec
es
inc
sub
jnp
pushf
sti
jp
dec
test
cmp
cs
imul
repnz
xchg
mov
jae
sbb
lcall
int
pop
cmpsl
stos
cwtl
fiaddl
sub
ja
lods
xchg
aas
nop
movsb
sub
call
aad
sub
lcall
sbb
loopne
ret
out
lahf
add
cmpsb
sub
ss
sti
sbb
in
dec
push
neg
test
imul
lret
xchg
popa
fcoms
xchg
ja
js
incl
arpl
js
xchg
ret
fs
cmpsl
sbbb
popa
and
inc
clc
jmp
sbb
xor
mov
out
sub
subl
mov
cmp
jne
xchg
pop
inc
sub
xor
or
sahf
mov
flds
mov
divl
lea
push
ffreep
lods
aaa
je
xor
loopne
or
cmpsl
pop
icebp
or
shl
popf
mov
nop
loop
add
outsb
loopne
jecxz
mov
mov
mov
adc
gs
push
fcomp
mov
mov
mov
or
jb
xchg
inc
sahf
add
jecxz
add
xchg
out
mov
iret
jecxz
data16
lret
rcrl
rcr
cmpsb
daa
ljmp
shrl
pop
adc
inc
movsl
call
in
mov
addb
sub
ficoms
inc
dec
sub
cmp
push
js
rcl
mov
fisttps
sbbb
ja
faddl
jecxz
push
or
in
daa
in
xchg
call
sub
ljmp
in
dec
and
mov
repnz
ficoms
divb
or
push
jge
mov
pop
loope
aaa
aam
sahf
add
popa
and
loopne
push
cmpsl
js
fs
xchg
mov
mov
xor
xchg
in
ficoms
cmp
adc
loop
xor
mov
fildll
ss
jb
cmp
pop
out
jl
cmp
shl
pop
lret
addr16
mov
pop
add
mov
push
pusha
mov
pop
pop
pushf
push
int3
push
mov
inc
mov
cltd
lods
clc
add
push
sahf
sub
repnz
shlb
jne
mov
scas
cld
cs
jmp
mov
pop
mov
fs
sub
and
ret
test
mov
push
or
mov
inc
sbb
scas
cmp
jno
and
jbe
or
adc
aas
ret
pop
call
mov
pop
cli
mov
push
sub
cmp
sbb
and
or
and
sarb
out
mov
rcr
mov
daa
sbb
out
mov
mov
icebp
outsl
mov
mov
mov
adc
mov
popf
shll
aaa
lea
pop
push
subl
into
xchg
cs
inc
sub
fisubl
sbb
sbb
out
hlt
cmpsl
fldcw
out
fs
movsl
mov
js
sub
cltd
and
cwtl
cmpsl
lods
out
stc
shr
push
pop
test
mov
or
lahf
jb
call
mull
mov
dec
shl
pushf
add
and
jl
sub
and
enter
shll
push
mov
xchg
or
loop
iret
test
adc
sbb
pop
sub
xor
bound
in
into
movsb
jecxz
dec
mov
pop
sti
inc
mov
faddp
sub
cmpsl
mov
je
xor
rorb
mov
mov
jb
scas
sbb
and
ljmp
dec
fnstsw
cmp
jecxz
ds
adc
cld
sbb
mov
or
mul
sub
arpl
out
inc
loope
and
dec
lds
movsb
fcmovnbe
pop
sbb
or
push
mov
add
inc
fsubr
mov
mov
cmp
or
xchg
icebp
out
mov
aaa
ret
fisttps
js
jp
push
sub
mov
pushf
push
xchg
add
xchg
ret
mov
mov
rclb
test
fcoml
aas
pop
xchg
jo
inc
xchg
stos
popf
jae
inc
sbb
jae
mov
mov
cmp
sahf
fcom
sub
ljmp
pop
adc
jno
jno
jno
cld
pop
outsb
jp
mov
inc
mov
push
insl
icebp
lds
ds
shrb
pop
mov
xor
pop
repz
dec
nop
mov
add
dec
hlt
mov
mov
mov
cli
push
movsb
fs
cmpsb
cmp
loop
cmpsb
mov
mov
or
jae
or
popf
push
pusha
test
outsb
dec
jae
movsl
dec
fimull
jne
sub
mulb
addl
sbb
div
ds
ficoms
xchg
mov
mov
inc
cmp
loope
es
popa
push
adc
pop
mov
xchg
ret
je
frstor
dec
pop
test
mov
push
push
inc
cmp
bswap
movsl
ja
rorl
adc
pop
dec
add
jl
pop
mov
subl
and
push
movsb
inc
outsl
xor
sub
inc
test
and
out
add
inc
sbb
mov
xchg
cmp
imul
mov
pusha
int3
outsb
jns
lret
sub
jp
jge
pop
lods
shlb
clc
cmc
push
lcall
xor
cmp
and
xchg
mov
adc
ja
insb
jne
mov
outsl
shrb
push
enter
ficoms
mov
cmp
push
inc
js
cmp
xor
subb
popf
aas
enter
dec
xchg
js
cltd
dec
sbb
mov
jmp
cwtl
ret
sbb
sub
ror
add
xchg
cmp
aas
daa
clc
or
cmp
fisubrs
push
negl
cld
push
mov
sahf
mov
std
pop
lea
xchg
lock
fnstcw
mov
adc
xchg
adc
jae
mov
or
jp
fildl
add
push
lret
out
xchg
cmp
int
adc
fnstcw
cs
xor
cs
inc
sbb
sbb
mov
xor
scas
jmp
add
aam
push
clc
dec
daa
shll
rorl
shl
rcr
xchg
adc
mov
lret
inc
mov
push
xchg
push
and
sbb
mov
adc
jl
inc
fwait
jle
mov
push
ficomps
mov
les
mov
jae
jg
ret
stos
arpl
idivl
mov
jecxz
xchg
inc
lea
inc
fdivs
adc
sbb
inc
pusha
mov
outsl
mov
jmp
dec
int3
adc
fsts
mov
lock
jmp
in
inc
jo
das
loope
and
insl
pop
adc
cmc
inc
cmp
arpl
imul
pop
testl
ret
aam
jecxz
aam
lods
mov
dec
xor
je
jnp
push
into
mov
pop
inc
mov
add
cmp
mov
mov
sbbl
jo
sub
push
lret
jmp
iret
mov
and
xchg
pop
and
inc
out
push
xor
scas
push
stos
test
inc
pushf
jno
dec
adc
cltd
xor
das
outsl
pop
sub
fnstcw
mov
inc
adc
loop
fcmovnu
jge
rcrl
push
in
iret
mov
or
mov
add
movsb
mov
aaa
arpl
rorb
or
push
cmp
imul
shrl
aaa
mov
lods
lahf
lcall
xor
dec
aam
fldl
jno
lahf
mov
in
lods
inc
jmp
and
pop
fxch
sti
xchg
add
xor
mov
shll
mov
dec
inc
sbb
mov
add
pop
or
mov
pusha
xchg
stc
insb
cmp
jb
dec
dec
mov
fwait
enter
mov
pop
out
ja
sti
pop
inc
mov
dec
dec
subl
dec
fs
lock
jbe
in
scas
in
div
sbb
and
in
mov
insb
add
test
bound
testb
push
test
mov
movsb
stos
mov
mov
inc
mov
push
add
popa
ret
jmp
andb
jne
dec
lahf
push
push
mov
idivl
mov
lods
mov
sbb
dec
xor
mov
lret
fs
pop
pop
lock
xchg
mov
inc
xlat
xchg
pop
add
add
enter
lock
enter
bound
loop
std
push
ret
lods
or
outsl
add
pop
or
mov
test
jp
les
in
mov
inc
lret
int3
lods
xchg
outsl
flds
jecxz
lcall
pushf
jns
ljmp
shll
enter
adc
mov
insl
mov
push
data16
aam
add
and
dec
push
out
xlat
or
fidivrs
mov
mov
stos
xlat
push
insb
insb
push
cmp
jle
mov
lds
idiv
outsb
popf
mov
sub
cmp
jp
jo
aaa
sbb
push
or
add
ja
scas
sub
sbb
aam
fs
mov
xchg
sub
or
cmpsl
jno
or
cmp
das
push
lret
std
call
aad
outsb
insb
mov
push
push
ret
xor
clc
loopne
movsl
cmpsb
leave
cmpsb
xchg
sti
ds
sub
ret
pop
mov
ljmp
fsubs
push
xor
add
enter
lret
push
imull
xchg
xchg
cmp
add
stos
fsubrl
scas
mov
sahf
rcr
add
add
lret
loope
addr16
mov
jb
mov
lahf
pop
lret
xor
cltd
pop
add
movb
mov
sub
mov
aas
rcl
inc
fnstcw
shll
imul
popf
pop
jno
bound
or
cld
fldenv
mov
mov
ds
aaa
push
xchg
add
fdivrl
jmp
mov
jecxz
call
rorb
out
orb
inc
inc
stos
inc
aad
sub
jge
rcrl
cli
cmovnp
or
pop
pop
inc
mov
pop
pop
pop
test
xor
test
out
idivb
divl
in
push
or
and
xor
cmp
mov
outsl
lret
xlat
out
and
xchg
inc
iret
enter
jp
aas
in
xchg
or
xchg
add
aam
into
loope
dec
jge
movsl
push
jno
aad
mov
pop
clc
mov
cmc
xor
cs
inc
test
mov
add
inc
fists
jmp
and
mov
inc
andb
xchg
daa
cltd
pop
mov
sbb
ret
mov
and
int3
sbb
mov
cmp
lods
cli
stos
out
inc
push
das
jmp
test
fs
add
jo
and
or
or
lods
pop
cwtl
xchg
divb
push
push
std
mov
jp
adc
xor
adc
ljmp
xchg
sbb
mov
imul
mov
dec
dec
mov
fstps
in
in
or
cmp
push
or
jnp
dec
ret
ss
mov
or
lds
xor
jo
dec
add
adc
jmp
jmp
push
sub
lods
xchg
xor
ljmp
push
push
cmp
pop
pop
loop
pop
add
imul
mov
roll
icebp
or
add
sub
data16
jne
test
aam
std
dec
dec
ficomps
xorb
cmp
cwtl
test
mov
es
sbb
nop
jg
pop
in
and
push
repz
inc
push
rclb
out
icebp
sub
daa
cmp
pop
add
fnstsw
jecxz
adc
push
and
iret
add
inc
xor
cs
iret
mov
pop
cmp
pop
cld
or
arpl
into
out
fmuls
mov
pop
incb
sbb
popf
inc
movsl
xchg
outsb
sub
xor
icebp
sbb
scas
lcall
inc
shl
dec
test
sbb
popa
jno
mov
and
jo
kmovb
sbb
jbe
lcall
stos
fsubs
out
cmpsb
push
add
jmp
sarl
xchg
add
gs
fnstsw
test
subl
cli
or
push
nop
cmp
sahf
test
and
in
mov
outsl
out
fildll
sbb
mov
dec
mov
jmp
test
cmp
imul
jno
movsb
rorb
mov
ljmp
adc
dec
cld
pop
in
add
sar
mov
jmp
pop
jle
clc
adc
xor
xchg
pop
jl
into
mov
add
jbe
and
push
std
mov
out
mov
pop
sbb
add
inc
fidivrs
inc
imul
scas
cltd
scas
clc
lods
js
mov
mov
test
lods
mov
pop
mov
fbld
dec
cs
in
add
aad
push
int
test
xchg
mov
sub
repnz
sbb
lcall
inc
mov
sub
shlb
fidivrl
call
scas
and
lcall
dec
out
nop
cld
or
xchg
xchg
into
mov
and
fcomps
adc
call
lahf
xchg
add
fildll
add
mov
in
mov
daa
mov
pop
jle
ret
aad
lods
das
leave
add
cmc
jb
fs
scas
jns
pop
int
pop
mov
xor
push
aad
gs
imul
push
push
xchg
je
jno
push
add
pop
push
addr16
add
jmp
push
mov
nop
enter
and
insl
lcall
jmp
fistps
add
add
add
int3
adc
ret
sbb
jge
cld
mov
into
cmp
xchg
roll
push
or
js
pop
enter
mov
jno
test
xchg
mov
leave
cmp
dec
push
andb
xorb
data16
imul
test
cmp
ds
lret
scas
jne
cmp
dec
pop
jb
inc
sbb
dec
test
fmull
sarb
test
cmp
enter
adc
daa
sub
popa
sbbb
jle
mov
sub
fimuls
pop
or
data16
je
cs
out
sub
xor
jmp
pop
popf
data16
lahf
dec
inc
lahf
scas
jbe
adc
test
test
push
cmp
jns
insb
add
sbb
sahf
hlt
mov
jb
mov
movsl
fnstcw
push
insl
cmc
nop
or
and
mov
pop
push
mov
test
divl
fucom
mov
pushf
sbb
cli
xchg
pop
mov
addr16
mov
lods
push
add
inc
xchg
and
xlat
dec
add
inc
add
mov
lahf
xchg
inc
sub
sub
cmc
bound
sub
cmc
mov
sbb
cmp
sub
mov
stc
cli
cmp
shl
sub
sub
clc
xchg
fdivp
fs
and
popa
insl
dec
sbb
mov
fcmove
stos
shlb
popa
ljmp
mov
test
fistps
scas
or
dec
sub
gs
call
adc
lods
popf
ljmp
adc
iret
pop
xor
stos
flds
mov
push
shr
test
sub
and
add
test
cwtl
aam
imul
cmpsl
mov
cmp
aaa
fidivs
cmp
pop
int
rolb
or
mov
sbbb
adc
add
cmp
sbb
daa
sub
movsl
cwtl
jb
add
in
outsl
mov
push
sbb
test
dec
push
push
inc
pushf
es
cmp
or
frstor
xor
clc
movsl
sub
enter
sbb
xor
cmpsb
lods
cmp
andb
pop
dec
ror
in
dec
cmp
sti
push
jno
add
outsb
pop
pushf
repz
pop
lahf
sbb
gs
cmp
sub
lret
jge
cmp
push
sub
mov
insl
sarl
xor
mov
mov
xor
cmpsb
data16
xchg
lea
aam
jg
ret
jle
mov
shlb
pusha
sbb
ret
inc
fcmovne
pop
mov
out
jp
je
pop
sub
pop
dec
pop
and
cmp
and
ljmp
adc
push
adc
mov
ljmp
mov
mov
ds
mov
mov
sbb
xlat
popf
xchg
scas
dec
cmp
ret
mov
aas
loop
loopne
dec
out
jg
jns
idivb
mov
cmp
and
repnz
addr16
adc
or
pusha
or
dec
inc
sub
mov
movsl
imul
jge
imul
mov
loop
test
mov
jae
pop
adc
inc
lock
in
pop
out
fcoms
pop
mov
test
pop
push
ret
loop
sbb
pop
pop
movsl
ja
add
movsb
mov
pushf
out
xchg
add
inc
aam
xor
lods
mov
xchg
mov
mov
lea
repnz
stos
sub
add
mov
cmp
jl
sbb
sahf
add
adc
ficomps
mov
aaa
fimull
push
lret
insb
aaa
jns
out
out
outsb
icebp
fwait
nop
insl
movsl
lds
gs
sub
ljmp
adc
jns
neg
cmp
fmull
stos
sub
xorb
repz
pop
aas
jge
or
inc
adc
iret
xlat
add
mov
jg
inc
xchg
stc
mov
jl
ficompl
pop
and
mov
jg
mov
and
pop
pop
decl
inc
add
mov
idiv
sbb
lods
int
orl
mov
xor
clc
mov
dec
xchg
fwait
push
in
cmpsb
ret
icebp
mov
xchg
int3
cmpsl
sub
movsl
jecxz
push
int
adcl
stos
test
mov
bound
push
push
add
stc
mov
pcmpeqd
bound
sbb
adcb
imul
jecxz
mov
and
inc
mov
repz
test
mov
mov
lahf
push
fistps
jnp
rcr
loop
jg
lcall
add
jge
pusha
fbld
rcrb
sti
add
insl
or
addr16
and
pop
xor
lret
aad
mov
in
jb
dec
pop
in
divb
nop
nop
push
daa
test
adc
jno
xor
or
sub
adc
push
insl
add
jl
loop
pop
cmpsl
sub
ret
sahf
aas
sub
jmp
pop
mov
shlb
adc
mov
pop
inc
lret
or
fsubs
pop
add
jge
cmp
cmpsl
cli
sarb
xchg
xchg
push
adc
ljmp
lods
addb
shll
pop
pop
xor
sub
cmp
mov
xchg
call
cmp
cltd
xchg
add
or
dec
cmp
jge
pop
mov
adc
sub
jo
stc
aas
test
xchg
cli
or
ljmp
jo
js
std
and
out
sub
ss
sub
jae
mov
sbb
and
lahf
push
add
jnp
outsb
adc
pop
mov
pop
stc
ficomps
dec
dec
icebp
aam
in
pushf
mov
hlt
xor
std
scas
xchg
mov
push
adc
mov
insb
sub
and
imul
scas
ror
cmpsb
movsl
mov
inc
sbb
cmp
cmp
adc
cmp
test
sub
aas
push
outsb
push
out
adc
incl
mov
push
adc
jl
cld
sub
mov
xchg
mov
mov
les
push
cmp
jge
mov
fbld
adc
xchg
test
aaa
pop
adc
mov
cmp
dec
pop
loope
jo
mov
out
cmp
xor
xor
push
jle
sbb
out
imul
or
aas
xor
and
pop
xor
into
xlat
or
cmp
xor
fstpt
arpl
jb
mov
stos
inc
cmovge
adc
jns
jecxz
sub
test
into
inc
inc
mov
pop
shr
in
cmp
addl
or
push
push
stos
push
sub
ljmp
or
push
push
lahf
push
out
aaa
subb
addl
scas
ljmp
mov
sbb
xchg
in
outsb
jo
xchg
movsb
xchg
out
adc
push
push
arpl
mov
cmpb
jge
inc
jbe
lds
in
loopne
les
push
decl
rclb
clc
dec
data16
icebp
dec
mov
inc
xchg
ds
fmull
jmp
mov
xchg
fiadds
aad
int
push
lods
mov
in
add
mov
dec
add
shrb
add
repz
add
into
xchg
jns
or
lret
in
cmpsb
lcall
add
xchg
das
sbb
push
pop
or
mov
int3
iret
cs
rolb
addr16
ret
fidivs
adc
jbe
xchg
in
jno
aaa
inc
mov
in
mov
mov
and
pop
push
jae
lret
in
add
jno
or
push
ror
lret
mov
and
mov
or
pusha
push
push
aas
mov
jl
test
test
xorb
mov
enter
add
mov
scas
lods
and
cmpb
fdivrs
fistps
std
sbb
adc
sub
aas
mov
and
mov
jnp
stos
xchg
popf
dec
addr16
fsts
cld
movsb
jno
cmp
pop
mov
mov
fs
jo
repnz
or
aad
jo
call
aad
pop
sub
inc
gs
sbb
mov
scas
loope
nopl
mov
dec
pop
out
add
sahf
dec
lock
mov
in
xor
les
adc
inc
mov
fdivp
mov
clc
push
sbb
das
mov
aam
jbe
shl
xlat
xorl
mov
sub
jmp
test
dec
or
jmp
and
mov
fsubrl
sbb
mov
out
dec
and
ljmp
add
mov
inc
xor
mov
imul
or
pop
sub
movsl
fsts
cmp
push
pop
shlb
sub
aas
sub
nop
or
sbb
arpl
push
cmpsb
dec
in
pop
xchg
hlt
push
xor
mov
dec
push
data16
xor
es
xchg
or
popa
or
push
insl
mov
rorl
icebp
push
daa
imul
scas
sub
les
or
push
shll
fadds
aas
push
bound
cmp
sbb
fildl
jecxz
jmp
lock
xchg
or
xor
mov
cmpsb
push
cmp
scas
mov
sbb
cmp
mov
int
je
jecxz
xlat
loop
arpl
add
xlat
xor
cmp
mov
xchg
inc
out
je
push
out
shll
xor
test
addr16
mov
pop
push
sti
mov
pop
daa
push
es
sub
into
loop
jb
mov
inc
push
mov
xchg
adc
imul
sub
bt
addr16
out
popa
leave
cmovge
and
inc
out
push
leave
bound
mov
push
jns
adc
mov
add
jb
inc
xchg
and
aam
cmp
sbbb
or
mov
mov
dec
ds
push
jns
lods
fdiv
xchg
cmc
and
add
inc
arpl
mov
cmp
in
fs
jne
add
inc
jg
inc
fdivrl
jle
lock
je
sub
lods
mov
ficoml
or
pushf
pxor
out
loopne
push
xchg
xchg
fdivl
daa
inc
cmp
mov
cwtl
or
outsl
aaa
cmp
inc
jbe
inc
sbb
subb
les
fs
imul
dec
dec
and
addb
fldl
in
or
movsb
pusha
mov
aad
pop
mov
push
imul
cltd
jl
mov
lods
insl
sbb
iret
mov
ja
bnd
mov
or
mov
or
sub
aas
mov
xor
push
adcl
into
divl
inc
popf
add
dec
jmp
in
sub
sub
aas
cwtl
adc
adc
jle
xlat
push
arpl
stc
ss
sbb
dec
in
xchg
push
leave
mov
call
xor
aaa
clc
popa
cwtl
cmp
push
pop
and
sbb
or
cwtl
mov
add
fwait
aad
and
lock
mov
pop
cmp
inc
mov
adc
mov
mov
mov
mov
xchg
ret
int
jbe
push
add
aaa
outsl
int3
mov
cmpsl
sub
out
shll
inc
pusha
loope
stos
mov
in
xchg
xchg
xor
and
mov
pusha
mov
xor
sbb
dec
ffreep
add
jecxz
icebp
dec
pop
repz
iret
lds
sbb
cmp
cmp
test
in
mov
pushf
into
inc
ja
cmpsb
xchg
mov
inc
xchg
add
int3
dec
and
pushf
push
mov
out
push
aad
pop
mov
aam
lods
or
repnz
xor
and
test
scas
mov
movl
fmuls
xor
lds
lcall
mov
adc
lahf
mov
jo
push
fwait
aam
int
jnp
out
clc
ljmp
push
idivb
and
mov
push
add
ljmp
mul
jp
out
or
mov
fnstsw
das
inc
lock
std
test
clc
lds
lods
out
adc
sahf
push
or
cli
push
dec
sub
push
xchg
fdivl
xchg
pop
or
iret
or
ss
adc
inc
inc
mov
xor
jg
pop
push
cltd
sub
xor
cltd
test
inc
mov
test
les
push
lods
inc
inc
cmc
adc
gs
jg
mov
cmpsl
roll
mov
shll
addr16
sti
xchg
pop
mov
popa
jmp
lcall
cmp
dec
and
xlat
stos
cli
lods
imul
jne
inc
add
xchg
jnp
pop
icebp
in
stos
or
xlat
dec
dec
inc
in
aas
sbb
out
testb
lret
push
mov
insb
push
out
mov
pop
xor
adc
push
push
pop
pop
and
sbb
cs
mov
roll
mov
xchg
popf
inc
pop
scas
add
out
dec
or
mov
sahf
fstl
jle
mov
divl
and
xbegin
cld
sub
mov
xchg
pushf
mov
out
iret
cmp
in
jle
mov
dec
jno
jae
call
sbb
arpl
pcmpgtd
jl
push
movsb
xchg
mov
sbbl
mov
insl
adc
imul
push
nop
sbb
cs
ja
enter
fbstp
xlat
jg
or
jno
out
rcrb
insl
aad
sbb
fldenv
test
shlb
aas
test
dec
lahf
and
mov
les
sbb
xchg
mov
inc
and
dec
iret
cli
stos
dec
pushf
in
insl
sub
jnp
inc
xchg
cltd
pop
inc
or
pop
mov
rorb
shr
inc
inc
stos
add
fsubl
imul
dec
dec
out
pop
fmulp
sahf
ja
lods
negl
fwait
dec
and
ja
xor
sarl
or
clc
lret
in
xor
ja
sbb
dec
cld
mov
or
imulb
lods
dec
notb
adc
pop
jg
xor
mov
mov
pop
rorl
lcall
pop
mov
mov
subb
sbb
arpl
lock
shlb
out
inc
repz
lret
sub
inc
jae
jg
clc
lock
inc
mov
jg
gs
inc
iret
rorl
shlb
inc
ljmp
mov
mov
push
jno
outsl
into
sbb
jae
int
repnz
das
dec
or
jbe
fnstcw
iret
sub
push
pop
pop
jae
imul
sub
pop
clc
sub
xor
pop
ljmp
pop
cmp
push
sub
pushf
scas
xlat
call
mov
fisubrl
test
mov
add
mov
out
call
inc
adc
and
sbb
out
lds
lods
inc
inc
mov
repnz
sub
arpl
mov
ljmp
enter
movsb
rcl
jge
jns
imull
ret
inc
inc
adc
test
insl
jp
cmp
mov
inc
ret
fcompl
pop
sarl
sub
stc
xor
xchg
aaa
subl
out
test
in
adc
push
sbb
mov
fs
lea
dec
jno
mov
sbb
pusha
lods
addl
adc
icebp
jge
ret
cmc
mov
std
jecxz
es
lock
shlb
ret
ret
pop
xchg
les
sub
hlt
jg
sub
cmp
pop
lahf
mov
add
pop
cmp
je
cwtl
and
dec
sub
decb
insl
loop
or
push
push
faddl
test
shrb
bound
jo
notl
and
or
and
gs
xchg
lds
bound
mov
leave
inc
je
call
andl
bound
pop
xchg
int
pop
sti
jle
inc
sub
fucom
loopne
inc
pop
inc
shlb
xchg
push
out
loopne
stos
push
pop
lcall
push
movsl
push
xor
cmp
pop
jg
inc
lret
out
add
fidivs
outsl
outsb
push
test
push
daa
pop
lret
dec
cld
pop
push
hlt
int
push
insb
fstpt
subb
fs
adc
mov
sbb
jle
push
pop
out
mov
mov
add
pop
dec
out
adc
and
and
and
pop
mov
cs
js
fs
pop
aam
mov
pusha
orb
xor
mov
iret
outsl
add
pop
jo
sbb
sbb
popa
outsl
ljmp
scas
or
in
pusha
ss
sub
adc
sub
cmp
int3
cmp
push
addr16
mov
mov
or
dec
jne
loope
pop
aad
mov
mov
and
push
add
pop
enter
mov
sbb
mov
lds
xchg
je
xchg
sub
ret
and
dec
enter
cmp
addb
jecxz
addr16
loop
mov
js
idivb
and
ja
cmovno
push
loop
popa
push
mov
aas
and
or
pop
xlat
dec
scas
mov
jo
fidivs
leave
or
lea
outsb
stos
pop
push
nop
jecxz
repz
cmp
mov
je
out
movsl
dec
lret
mov
sub
mov
sbbl
jnp
dec
pop
lock
sbb
repnz
dec
or
sbb
imul
lcall
xchg
ja
add
add
add
mov
stos
xor
enter
repnz
cmp
inc
add
in
arpl
hlt
cmc
mov
shl
xor
test
sti
dec
std
xor
add
jecxz
mov
leave
mov
sarl
jmp
mov
rcrl
addr16
outsb
and
addr16
int3
and
pop
das
or
int
mov
ljmp
lret
mov
jl
sub
xchg
add
aad
shrl
ret
test
aad
mov
xchg
shlb
fcomi
push
icebp
lahf
addb
ret
test
repz
dec
mov
mov
pop
popf
or
lods
xchg
das
or
cmp
add
inc
cmp
or
adcl
insl
push
sti
scas
lahf
mov
int
cmp
xlat
ret
push
dec
xor
fisubs
xor
dec
mov
adc
test
fwait
call
push
mov
js
test
repnz
push
mov
popf
add
mov
jb
out
xchg
das
mov
gs
scas
shl
and
mov
mov
push
sti
and
testl
mull
dec
shrl
pop
int
push
sbb
lret
mov
pop
dec
jae
dec
in
push
xor
int3
and
sarl
pop
std
sbb
lret
cmpsl
push
push
push
call
mov
mov
loope
mov
mov
dec
sbb
mov
out
mov
lcall
jns
stc
fldcw
xor
adc
and
sbb
mov
in
inc
push
cli
mov
dec
popf
sbb
adc
leave
mov
aas
lds
jne
loope
cs
ljmp
mov
std
push
jno
gs
pop
push
jno
clc
dec
jnp,pn
adc
repz
push
mov
jno
cwtl
fsubrl
mov
aam
dec
ljmp
xorb
scas
adc
rolb
notl
fildll
xor
rorb
mov
sbb
jbe
push
dec
rcrl
cmpsb
cmp
lods
leave
mov
lret
xlat
test
fmuls
jle
dec
xchg
mov
repz
arpl
lcall
loopne
xchg
bound
add
nop
push
div
ja
ja
push
hlt
mov
pop
mov
xchg
sti
or
lea
out
cmpsl
data16
decb
stos
xor
adc
cs
ja
addr16
sub
jge
das
lret
int
popf
shlb
jg
insb
sahf
push
scas
negl
dec
push
xchg
addr16
push
out
addb
out
xchg
stc
out
jp
ret
pop
add
pop
arpl
ror
xorl
repz
xor
fmul
xchg
jae
and
xchg
mov
rorb
dec
pop
lods
mov
xor
clc
add
sbb
fildl
or
mov
xchg
out
pop
mov
popf
mov
or
jae
sbb
pop
js
aad
mov
ret
fcmovu
cmp
je
push
adc
mov
in
addr16
xchg
xchg
pop
sub
mov
mov
jns
push
loop
lods
arpl
test
pop
lea
sbb
add
sbb
ljmp
in
mov
ljmp
mov
cmc
push
and
mov
ljmp
mov
push
test
flds
dec
fadds
inc
dec
aaa
mov
pushf
mov
xor
iret
mov
or
xor
dec
jg
js
push
sbbl
sti
dec
xor
fstps
cld
inc
jne
xorl
fnstenv
ljmp
cmp
pop
mov
shrb
aaa
lods
shll
adc
and
call
cltd
sarb
cmp
inc
lds
in
push
push
cmp
inc
cli
or
push
mov
adc
mov
cmp
jg
dec
insl
clc
cmp
adc
mov
jns
fisubl
mov
push
jp
ljmp
mov
imul
mov
sbb
fwait
pop
aad
cmpsb
cmp
divb
loop
fisubrs
or
je
adc
pop
add
test
pop
mov
lahf
jecxz
das
cmp
jl
mov
ss
out
push
adc
add
xchg
jo
pusha
and
mov
or
push
sub
rol
bound
je
add
jle
pop
stos
and
inc
mov
sbb
xchg
pop
fsubr
jp
and
das
les
leave
ja
push
cmc
mov
mov
add
xor
cli
scas
add
outsl
call
sub
mov
adc
adc
mov
fstpt
and
add
xchg
xchg
pop
orb
jg
inc
mov
fwait
or
sti
fadd
shrl
dec
loopne
arpl
test
mov
jae
jns
mov
lcall
pop
into
repz
clc
roll
pop
jbe
clc
pop
or
imul
fmull
sbb
sbb
xor
adc
xchg
push
test
xor
jo
push
cmp
enter
pop
ret
loopne
aad
pop
mov
and
repz
out
inc
jae
cmpsl
ret
adc
inc
sbb
mov
stos
inc
addb
pop
iret
and
mov
outsb
jecxz
xor
shr
repz
in
test
jmp
xchg
fsubrs
mov
iret
inc
sub
jg
jecxz
movsb
aad
in
jg
ja
shrb
sbb
mov
popf
xor
jnp
xor
mov
adc
jmp
and
jno
push
data16
out
xchg
lret
shl
movsl
call
outsb
imul
dec
mov
aam
mov
lods
cltd
mov
cmpsb
and
jae
js
repnz
jl
addb
or
xchg
sbb
xchg
adc
imul
outsl
mov
negb
jg,pt
and
xchg
add
adc
or
add
mov
in
scas
adc
mov
aad
rcll
push
lahf
push
mov
enter
fucom
sbb
popf
enter
mov
repnz
out
adc
loope
iret
lods
xor
pusha
sbb
iret
jb
icebp
rcrl
xchg
dec
jns
dec
test
loop
lcall
pop
stos
jbe
jae
cmpsb
bnd
jnp
bound
fimuls
sbb
dec
push
and
jae
or
adc
cmp
and
sbb
push
mov
outsl
shlb
and
inc
loop
ja
sub
cld
lcall
cmp
xorb
aaa
loop
imul
jbe
xor
and
pop
mov
or
scas
xchg
pop
test
leave
xchg
pop
xchg
jb
dec
leave
popa
cltd
out
xchg
arpl
dec
sbb
and
xor
add
cmp
push
add
push
outsl
and
mov
test
push
adc
mov
int
or
roll
jae
xchg
inc
xor
je
adc
in
ss
out
or
pop
push
jle
repz
lret
lahf
adc
in
sbb
push
movsl
in
hlt
xchg
mov
jge
cmove
or
popf
arpl
addl
jge
cmpb
cwtl
push
sbb
cmp
lret
jmp
insl
idivb
sbb
insb
xchg
push
inc
out
scas
aam
adc
jo
test
aad
adc
xor
xor
pop
negb
jp
repnz
outsb
sbb
aam
cmp
jnp
inc
dec
inc
movsb
in
sub
xlat
pop
dec
aas
xchg
bound
fwait
decb
int
mov
lcall
lea
mov
jle
inc
lcall
dec
pop
push
jg
shr
insb
je
add
xor
ror
mov
and
pop
dec
or
inc
jno
xor
out
cmpsl
pop
dec
repz
pop
mov
xor
daa
mov
mov
xor
push
aaa
movsl
adc
mov
cld
xchg
rcll
lds
pop
pop
mov
dec
insl
mov
jge
out
pushf
arpl
and
sub
adc
jge
test
adc
xchg
mov
mov
mov
or
pop
jle
fptan
loope
aas
daa
dec
nop
mov
faddp
xor
jbe
mov
push
sub
lods
fldl
dec
popf
mov
sarb
out
int3
add
popa
mov
lods
add
ret
cmp
push
popf
and
mov
aad
xor
xchg
mov
pop
mov
jle
dec
sub
push
sti
adc
push
ret
or
in
mov
jp
xor
push
int
leave
loop
and
mov
mov
cmpb
fdivrs
cmpsl
mov
lret
xchg
out
test
arpl
loopne
rcrl
int
out
push
fildl
lock
stos
mov
jne
sbb
push
xlat
pop
out
xchg
push
lret
add
repz
fcompl
mov
leave
out
push
cld
dec
cld
jge
push
pop
arpl
movsb
cmp
test
lret
add
movsl
shlb
mov
enter
sbb
cld
in
lret
pushf
outsl
cmp
mov
call
sub
xchg
test
popa
and
roll
insb
fistpl
jo
push
push
mov
mov
adc
push
and
lods
repnz
in
push
dec
and
inc
subb
xor
test
sub
bound
fcmovnu
mov
or
jmp
push
jmp
dec
out
jnp
add
stos
js
clc
imul
icebp
and
push
pop
popf
mov
mov
cmp
imul
mov
cmpsl
subl
hlt
add
popa
pop
mov
xchg
dec
sbb
lds
orb
or
mov
int3
fcompl
mov
gs
pop
cmp
in
sbb
xchg
and
dec
daa
pop
and
mov
jl
pop
jl
adc
ret
out
xor
xchg
test
cmpb
stos
fsubr
cmpsl
cmp
sub
fcmove
enter
cld
leave
cmp
xor
jne
mov
rorl
cli
cmpsl
add
xlat
sub
sbb
sbb
pop
out
xlat
jnp
cmpb
nop
push
mov
clc
xor
lahf
push
adc
mov
repnz
mov
dec
scas
daa
pop
and
fcmovne
hlt
enter
mov
mov
inc
mov
hlt
movsl
adc
push
lret
sub
shlb
cltd
faddl
outsb
lret
fcomps
jmp
scas
idivb
pop
jle
loop
dec
mov
add
inc
or
pop
or
xor
cmp
gs
int3
mov
andl
push
and
sbb
mov
push
enter
jnp
sub
mov
mov
and
sub
mov
movsl
loope
lcall
jb
mov
outsl
sbb
xlat
out
dec
mov
sub
fisttpl
mov
add
cs
sbb
push
mov
nop
cs
lods
jge
leave
mov
adc
xor
mov
sbb
mov
pop
outsl
movsb
sub
xchg
adc
mov
in
and
out
cld
pop
cmpsb
or
or
adc
xchg
sarb
dec
cs
inc
jp
loopne
adc
imul
stos
les
loopne
pop
clc
push
pushf
ja
scas
jl
jmp
daa
aas
or
jb
subb
mov
dec
dec
mov
jmp
mov
cmpsb
enter
aad
lods
or
sbb
jle
pop
mov
flds
movsw
sbbl
int3
dec
dec
out
insb
ja
mov
push
and
imul
imul
mov
inc
cwtl
xchg
sbbb
fstps
add
out
mov
sub
xchg
and
movsl
fs
stc
xor
sub
fs
stc
dec
loope
xchg
std
dec
insb
cli
movsb
xchg
push
push
stos
xlat
sahf
cmpsb
call
mov
push
mov
aas
xor
aaa
por
dec
mov
cld
popa
inc
call
xchg
mov
jo
cmp
mov
into
es
pop
sahf
and
pop
sar
dec
mov
jns
mull
fiadds
lahf
popa
fidivs
dec
inc
imul
inc
jg
dec
sbbb
je
je
scas
pushf
aas
mov
inc
xlat
or
dec
and
jl
inc
dec
xor
in
dec
movsb
cltd
shll
mov
js
lock
push
dec
jg
push
out
out
mov
adc
aaa
popl
js
out
mov
xchg
int3
jge
ja
ret
insb
dec
sub
arpl
mov
ljmp
sbb
sbb
popf
dec
sahf
test
pop
test
mov
xchg
in
ret
push
push
je
cmpsb
push
inc
dec
dec
add
aad
sbb
lret
jae
test
sub
shrb
in
xor
in
mov
aas
push
push
inc
movl
pop
popf
rclb
cmc
or
aam
xchg
in
pushf
sub
outsb
and
pop
xor
jnp
sbb
mov
ja
push
in
push
xchg
es
push
leave
inc
loopne
or
int
jecxz
in
jecxz
pop
push
jge
ljmp
orb
daa
cmp
cmp
lods
aaa
push
xchg
popf
ficoml
loop
in
lret
cmp
hlt
dec
mov
xchg
adc
dec
test
mov
pop
int3
sub
int
test
negl
sub
scas
adc
jo
sbb
insb
jmp
or
mov
mov
aas
sbb
and
adc
cli
scas
outsl
inc
testb
out
ljmp
fisttpll
inc
das
and
sbb
sbbb
mov
jecxz
mov
data16
test
pop
inc
fwait
stos
mov
jecxz
inc
and
sbb
movsb
pop
stos
cwtl
leave
xor
bnd
cmpsb
jnp
mov
cmp
mov
cmp
jo
insl
and
inc
mov
add
pushf
in
lret
bound
sbb
fildl
nop
mov
sbb
inc
aad
outsb
mov
lcall
pop
jne
test
push
mov
and
cmp
dec
mov
into
out
adc
cmc
sbb
fnstenv
ja
add
sub
ljmp
leave
mov
lea
jo
pop
and
xor
push
xchg
inc
mov
add
cmpsb
lret
ljmp
mov
cmp
sbb
and
orl
push
idivl
dec
push
inc
mov
ss
adc
jno
mov
test
jge
das
inc
imul
setg
cmp
mov
test
jp
je
mov
and
dec
or
push
inc
xchg
call
lods
or
mov
loop
mov
adc
xlat
movsb
mov
dec
or
pop
and
push
dec
push
or
add
mov
cmc
pusha
pusha
rcr
mov
jle
pop
mov
xchg
inc
cwtl
addr16
xchg
lods
rcll
jns
ret
pop
insl
nop
dec
pop
stos
cmpsb
or
xchg
jae
inc
push
sbb
scas
push
mov
lods
iret
data16
lret
outsl
cmp
push
sub
rorb
lods
sbb
lret
bound
mov
jmp
lock
pop
xor
aad
rorb
sbb
punpckhdq
iret
pop
add
mov
sbb
inc
or
mov
ljmp
jle
clc
xchg
pushf
and
push
sti
xor
stos
xchg
fmuls
adc
es
cmp
adc
xchg
sub
dec
mov
fs
sti
lock
sbb
repnz
add
or
or
pusha
fwait
mov
and
xchg
dec
pop
mov
shll
sub
outsb
enter
loope
cmpsl
cs
xchg
shl
mov
jbe
mov
or
fs
cs
pop
and
mov
dec
jl
popf
mov
push
sti
inc
sub
xor
inc
addr16
daa
jmp
ret
sub
push
dec
das
rcll
xor
pusha
mov
bound
std
popf
cmp
out
jb
lds
jns
roll
and
ret
dec
dec
jecxz
xor
add
lods
clc
out
and
mov
inc
popf
loopne
pop
mov
cwtl
or
jno
push
push
out
cmpsl
xor
mov
loop
sbb
xchg
shr
cld
pop
adc
fimull
loopne
xchg
push
cld
cli
shrl
or
cmc
sbb
clc
ret
lods
lcall
out
pop
xchg
jo
or
pop
lods
lret
cld
or
sub
sbb
and
roll
dec
fisubs
ss
dec
or
inc
std
nop
movb
and
fistpll
insb
pop
test
inc
sub
jbe
addr16
repnz
sub
in
and
loope
rorl
lds
sbb
or
mov
fcmovnbe
inc
leave
lods
xchg
insl
mov
test
cmp
mov
push
testb
jge
int3
pop
out
andl
xor
push
lcall
dec
mov
cwtl
rorl
imul
cwtl
outsb
mov
stos
push
imul
mov
xlat
jb
fdivr
inc
shrb
lret
daa
cwtl
mov
jle
roll
repnz
lret
mov
loope
int3
cmp
test
xor
outsl
xor
jns
movsb
jb
jp
cmc
dec
mov
sub
pop
out
aaa
aas
in
lcall
js
mov
imul
ret
jmp
aam
or
add
imulb
test
out
cmp
lods
mov
push
add
rorl
aas
imul
push
add
add
clc
push
inc
pop
mov
sub
mov
inc
aaa
loop
lcall
ja
sbb
in
jne
mov
roll
mov
mov
add
adc
mov
dec
dec
addr16
mov
fwait
and
push
psrld
out
adc
mov
or
movsl
dec
pop
mov
lea
pushf
shlb
jns
add
mov
jecxz
jo
inc
jb
in
loop
pop
ret
jno
scas
inc
fisttpl
rcr
es
popf
inc
inc
jg
enter
cmp
push
ficoms
xlat
mov
outsb
add
addr16
pop
imul
fdivl
bound
mov
jae
movl
cs
mov
push
and
in
jp
ffree
ret
mov
pusha
and
sbbb
pop
loopne
cmp
outsb
or
jne
adc
ljmp
sbb
sbb
inc
mov
fsts
scas
pusha
sti
inc
subb
lret
movsl
je
mov
mov
dec
add
jg
mov
mov
jge
add
pop
push
dec
sbbl
std
cmp
inc
push
shrl
or
mov
sbb
addr16
ljmp
xlat
jp
inc
push
shlb
or
sbb
mov
mov
rcrb
mov
cltd
lret
fidivl
enter
pusha
int3
imul
xor
inc
test
or
insb
mov
push
xchg
mov
xchg
pop
pop
push
ret
iret
mov
mov
movntps
push
adc
iret
jns
and
mov
cmc
stos
add
or
es
sbb
clc
aas
movsb
adc
sbb
xor
or
dec
aam
dec
loopne
mov
adcb
ret
push
push
sarb
jmp
adc
xlat
cmpsb
aas
pop
add
mov
cld
popa
pop
pop
bnd
push
aas
les
cmp
call
pop
push
mov
dec
fistpl
arpl
sbb
pushf
jbe
and
fcomps
push
insl
ljmp
or
flds
pop
js
pushf
inc
addr16
lods
daa
dec
faddl
sbb
pop
lahf
cmp
bound
stc
lea
mov
dec
neg
sbb
lcall
iret
push
das
jae
pop
stc
outsb
mov
mov
sbb
cmp
mov
mov
pop
std
push
lahf
sar
mov
in
sbbl
mov
add
cli
xlat
jg
sbb
outsl
arpl
cltd
jg
dec
add
mov
push
mov
fisttpll
mov
enter
pop
push
movsb
mov
leave
inc
in
xchg
imul
pop
not
adc
loop
sub
out
addl
sub
loope
test
mov
je
xchg
pop
and
mov
test
adc
fadds
loopne
in
cli
int3
push
add
btr
sub
ljmp
loopne
lods
add
lret
insl
cmp
ss
jo
or
add
outsb
sbb
aas
jns
daa
jle
ret
enter
or
mov
inc
bound
push
mov
jg
mov
in
ss
nop
ret
enter
lea
outsb
inc
or
divl
mov
dec
jg
call
push
icebp
and
int
or
gs
sbb
idivl
jmp
popa
pusha
cwtl
mov
test
cmp
in
add
out
push
enter
sbb
movsb
or
ss
cmp
and
les
cmc
ffree
jmp
mov
and
ljmp
or
int
cmp
ret
fwait
sarl
sub
popf
ja
inc
and
bound
pop
dec
test
jo
adc
lahf
ja
shr
inc
jp
push
into
es
je
popf
adc
call
jecxz
sbb
and
jp
xchg
inc
cmp
test
push
add
mov
jns
out
push
lods
xchg
test
insb
mov
or
pop
dec
or
mov
or
in
int3
adc
add
inc
cmpb
xor
push
pop
cmp
into
sbb
movsl
imul
es
and
ret
mov
ficomps
icebp
fwait
ret
push
std
push
js
xorl
sub
xchg
daa
sub
pop
mov
js
mov
ficoml
dec
adc
push
loopne
xor
jl
loop
jno
inc
or
fsubl
mov
adc
aas
je
lods
sub
cmp
pop
rcr
out
xorb
std
and
gs
test
rclb
iret
aam
les
xchg
rcr
pop
outsl
inc
or
xchg
popa
outsl
cmp
fmul
fwait
out
lods
int3
inc
push
int3
in
shll
xor
xchg
into
insl
aam
jae
out
push
subl
call
shr
gs
push
push
add
test
adc
in
dec
xlat
mov
popf
fstpl
pop
test
inc
and
imul
pop
pop
insb
xor
pop
or
int3
mov
jl
jecxz
not
outsb
test
ds
lods
or
pop
sbb
xchg
push
mov
scas
outsl
data16
mov
xlat
stos
test
fstpl
mov
in
rclb
mov
or
cld
leave
insb
cmpsl
mov
dec
lods
ljmp
mov
sbb
mov
xor
dec
loopne
pop
rorb
xor
cmpsl
out
cwtl
inc
xchg
add
sti
sub
sub
xchg
and
scas
xor
lcall
or
adc
or
fsubs
xchg
and
dec
inc
hlt
lahf
adc
icebp
outsl
js
mov
xchg
push
icebp
xor
pop
jbe
aaa
lock
mov
ja
clc
mov
subb
stc
fwait
hlt
test
jns
repz
int3
xchg
les
rcrl
cwtl
pop
inc
xor
movsb
cmp
test
xchg
dec
addr16
bound
push
adc
lea
xor
mov
add
jp
int3
xor
hlt
mov
arpl
sti
mov
stos
sbb
inc
jge
lds
mov
lret
jne
adcl
cli
outsl
in
pop
nop
sub
or
and
movsb
mov
aad
out
loopne
dec
outsl
cmp
push
add
imul
sbb
cmc
and
cmpl
mov
inc
test
lcall
xor
push
stc
xchg
mov
or
rcrl
stos
mov
jl
enter
mov
rorl
xor
xor
test
adc
fiaddl
daa
cltd
fistpl
sub
addr16
jne
jle
rorb
cmp
hlt
daa
fistpl
hlt
in
sub
push
jge
fdiv
stos
pop
fisubl
jl
fildl
inc
dec
repz
adc
pop
testl
inc
call
les
push
cld
sbb
ret
push
dec
int3
push
in
push
loopne
enter
or
pop
push
xor
push
lcall
lahf
hlt
push
outsb
cmpsl
jg
lods
dec
push
jb
je
dec
sub
jnp
pop
mov
adc
pop
adc
js
and
lods
mov
aaa
and
imul
xor
in
aaa
jp
sub
pop
pushf
outsl
test
test
mov
ljmp
push
push
pop
jne
push
outsb
lods
pop
mov
cltd
out
subb
test
lahf
lret
rcr
xor
jo
sbb
sahf
xchg
mov
cmp
sub
add
lret
mov
jge
inc
or
xorl
mov
sbb
data16
mov
sbb
rorl
jle
jno
js
inc
jne
sbb
push
jno
in
cmp
jmp
lret
ret
push
test
lds
add
and
xchg
sbb
rclb
xchg
add
add
jle
iret
pop
add
int3
sbb
outsb
fisubrl
int3
addr16
mov
fidivrs
and
pop
std
int3
mov
fwait
mov
dec
es
jnp
popf
shl
push
cmpsl
popf
repnz
dec
dec
sub
test
into
push
inc
push
jecxz
lods
inc
loop
fnstcw
addr16
push
in
dec
push
stos
pop
cmp
std
shll
jl
lret
lods
fistps
mov
jp
xchg
mov
lcall
xchg
or
inc
xor
cmpsl
or
inc
pop
mov
insb
orl
inc
jmp
push
andb
popf
sbb
push
sub
notl
fs
data16
mov
jp,pt
cltd
lret
or
xor
or
or
xchg
scas
scas
pop
aas
xor
arpl
shlb
and
test
xor
lods
mulb
inc
push
mov
xchg
xchg
cltd
ficoml
push
xchg
xor
jae
aad
inc
sub
cmp
call
nop
pop
popf
xor
sbb
mov
push
or
or
dec
in
dec
aad
and
fnstenv
lahf
xchg
mov
cld
sbb
aam
push
jmp
gs
stos
and
adc
pop
subb
mov
in
push
daa
pop
jns
cmpsl
call
loope
lods
mov
cmp
repz
fbstp
lcall
rcr
inc
jns
in
cs
mov
mov
cmc
inc
push
nop
push
sbb
dec
pop
push
push
je
mov
xchg
mov
inc
add
mull
fistps
lock
lahf
and
cmove
out
in
test
test
xchg
jb
adc
repz
lret
insb
popf
jns
jp
ret
test
cmp
xor
pop
scas
test
in
pop
into
icebp
scas
jg
jge
fdivrs
adc
add
mov
rcrl
xchg
mov
inc
xchg
test
stos
mov
test
icebp
mov
mov
push
cwtl
pop
push
int3
or
jns
push
mov
cmpsb
ss
jo
test
rorl
cwtl
lods
push
mov
enter
les
movsl
push
inc
js
and
lock
jnp
jne
loope,pt
leave
dec
das
push
lods
leave
arpl
push
fs
push
nop
imul
aad
and
repz
pop
fisttpl
dec
rcr
pop
in
push
lcall
push
dec
xor
mov
or
cmc
xchg
sar
xchg
mov
xor
insl
mov
test
xor
lock
test
jne
sbb
outsl
mov
push
mov
mov
cmc
shll
shr
jae
mov
dec
lds
lret
mov
mov
rcrl
jnp
sub
mov
mov
rol
daa
inc
dec
data16
dec
inc
jb
stos
inc
ss
mov
out
mov
sbb
push
mov
inc
add
xor
test
fists
jne
imul
xor
sub
dec
loopne
fcmovne
jmp
sbb
lods
mov
sub
push
fadds
rolb
imul
and
jmp
mov
aas
inc
jecxz
xchg
into
divb
pop
pop
fnstcw
adc
imul
mov
and
lcall
test
lds
inc
dec
mov
sub
pusha
jb
test
mov
dec
scas
mov
into
loope
cmp
inc
add
mov
mov
xchg
loope
arpl
push
mov
mov
xchg
inc
push
int
and
inc
mov
leave
add
in
inc
mov
imul
and
or
push
lcall
into
dec
test
sub
or
insb
ret
push
int
data16
pop
outsb
jns
in
dec
and
push
icebp
pop
adc
daa
jge
stos
adcl
and
cmc
push
aam
sti
mov
loop
mov
cld
repnz
test
xchg
push
add
fwait
lock
hlt
pop
mov
jnp
icebp
and
aam
push
add
je
xchg
hlt
or
in
mov
sahf
ja
stc
or
xor
xchg
lret
push
test
push
jae
je
sbb
dec
mov
outsl
mov
sub
pop
adc
xlat
jg
sub
sub
ficoml
push
sub
add
adc
pusha
mov
dec
pusha
orl
and
js
jmp
jle
sbb
xor
cmp
mov
movl
shrl
lcall
rorb
stc
pop
xchg
mov
cltd
popf
mov
jbe
ja
movsb
in
daa
jl
out
add
lcall
jle
scas
fs
shll
lahf
jp
mov
xchg
in
push
inc
push
mov
push
dec
scas
out
xchg
sbb
sti
xor
mov
sbb
mov
sbb
push
or
cmp
mov
sub
mov
loop
or
mov
jle
fbld
xor
xlat
cmp
xchg
lds
test
fwait
jecxz
pop
sub
ret
jo
out
add
dec
pop
push
mov
fidivl
pop
jp
cli
in
push
sti
in
mov
daa
jecxz
jmp
pop
or
js
roll
pushf
mov
aad
cmpsl
xchg
cmp
adc
icebp
call
sub
flds
call
sub
ss
jno
dec
xchg
adc
mov
adc
mov
fwait
inc
cmp
inc
or
hlt
xchg
add
dec
das
and
mov
data16
dec
clc
out
push
jl
and
mov
pushf
rcll
js
addl
sub
lret
adc
jns
push
nop
jle
jnp
or
fnsave
test
stos
dec
and
inc
mov
aam
xchg
cmp
not
inc
and
sbb
jbe
mov
xchg
adc
xor
in
pop
pop
in
xor
mov
push
mov
jbe
lods
sbb
subl
cmpsb
arpl
in
xchg
inc
cli
ss
sub
mov
dec
dec
pop
jo
inc
push
test
nop
push
arpl
mov
inc
add
or
add
mov
xor
xchg
shl
jg
push
decb
dec
inc
divb
jmp
dec
mov
pusha
mov
lods
in
cltd
xor
xchg
or
or
lods
sbb
push
fmuls
ret
sbb
js
push
cmp
mov
add
jge
cmp
xchg
rolb
in
nop
adc
mov
sub
in
fwait
pusha
jg
adc
imul
xor
jne
loopne
orb
out
fidivrs
dec
mov
enter
daa
inc
push
jb
test
adc
fiaddl
les
shrb
xchg
in
sbb
stos
xorb
lea
popf
pop
lods
icebp
pop
push
add
arpl
jb
dec
mov
push
add
mov
add
sub
mov
notb
push
or
push
sahf
cmp
mov
jl
xchg
inc
sbbl
xor
and
test
fdivrp
das
xchg
shr
adc
call
pushf
mov
xchg
push
cmp
pop
inc
add
push
push
pop
adc
rcrl
movsb
mov
push
sub
and
add
out
movsl
data16
aam
sbb
jo
pop
mov
mov
jl
cmpsb
xlat
add
cwtl
lahf
mov
in
mov
inc
mov
rcll
hlt
pop
push
push
xchg
xor
insb
sub
cmp
pop
loop
int3
ffree
aad
sahf
cmp
test
movsl
sbb
je
inc
daa
xor
add
mov
outsb
xchg
xor
outsl
test
out
dec
jae
xchg
and
pop
ret
frstor
ret
push
mov
mov
enter
or
sub
arpl
mov
push
inc
and
inc
arpl
add
mov
dec
enter
data16
sarb
je
xchg
xchg
bound
sub
clc
movb
jmp
imul
mov
fcoms
call
mov
xchg
or
nop
and
push
gs
and
push
addr16
xor
cmp
mov
cmpsl
es
aaa
pop
push
push
push
orb
inc
push
push
nop
cld
or
imul
stos
jecxz
out
mov
pop
aad
test
jb
and
lods
imul
loope
push
stos
pop
or
mov
mov
lcall
lcall
lahf
jp
and
adc
sbb
shll
jmp
sbb
shr
xchg
adc
or
lods
fs
iret
sub
call
mov
adc
movsl
sbb
adc
fimull
shlb
adc
xchg
mov
mov
mov
out
clc
add
btc
sbb
sub
stos
sub
sbb
inc
dec
cmp
inc
fisubrl
mov
cmp
stc
lahf
xchg
pop
adcl
mov
and
adc
mov
dec
xor
ja
repz
adc
push
notb
pop
mov
in
sub
scas
fdivrp
dec
out
push
add
push
fsubl
mov
inc
mov
out
pushf
xchg
adc
mov
fidivrl
xor
push
mov
out
xchg
sub
ljmp
fcoml
lahf
test
test
fwait
add
mov
add
push
out
cmc
testb
loop
jbe
jns
dec
imul
test
cltd
daa
xor
jp
adc
icebp
loop
push
pop
enter
dec
adc
in
cli
ret
mov
sti
fstl
addr16
cmpsl
and
fmull
popf
call
fcomps
out
pop
pop
mov
push
add
outsb
or
mov
and
out
push
cmp
subl
push
in
jle
push
jb
mov
fadd
pop
cmp
push
ret
ret
and
std
push
iret
adcb
jns
xlat
push
subl
mov
dec
push
push
pop
push
jno
lahf
mov
shll
add
std
lods
int3
fstl
movsl
add
ret
adcl
mov
adc
iret
inc
fcomp
sbb
pop
jb
inc
bound
int
mov
movsw
movb
push
or
jo
sbb
aad
pop
mov
or
push
enter
mov
xchg
clc
cmpsl
subb
sub
std
push
xchg
sub
ret
aad
inc
shlb
mov
ds
mov
leave
fs
dec
lods
loopne
add
and
mov
or
push
mov
repz
jae
rorb
xchg
add
xchg
adc
push
aam
gs
fmull
or
cmp
adc
fwait
cmp
cmp
or
sub
jnp
lahf
add
jl
addr16
or
shr
imul
std
fucomi
adc
xchg
and
sbb
sar
jae
jno
pusha
loopne
jle
or
iret
xchg
cmp
cmpsb
out
adc
cmp
cmp
lret
adc
mov
mov
push
bound
sub
stos
repz
dec
rcr
xor
mov
mov
repz
lcall
mov
sbb
das
xor
mov
int
rol
pop
mov
in
addr16
jg
sub
repnz
out
popf
xorb
insl
pop
pop
repnz
int3
inc
in
enter
inc
pop
in
ret
icebp
mov
lcall
jg
pop
fimuls
pop
push
test
bound
cli
lcall
mov
in
and
cmpsl
rcll
sbb
adc
cmpsw
dec
stos
pop
and
adc
fs
scas
xchg
cmp
and
xchg
das
jmp
mov
push
in
fistpl
das
ja
in
mov
int3
lock
cs
mov
dec
cli
fstpl
adc
mov
mov
je
negl
fsts
lea
xchg
sarb
or
aas
in
mov
std
push
rcll
repz
call
je
in
test
mov
fsubl
int3
jmp
dec
jl
loopne
stc
addl
and
and
lock
xchg
nop
jmp
xchg
jbe
js
add
sub
or
and
push
mov
movsl
sbb
fbld
pusha
jge
or
xor
push
mov
shl
dec
rolb
les
out
imull
jno
cmp
test
lock
fiadds
xchg
cmp
jp
mov
push
mov
push
lods
dec
imul
divb
mov
je,pn
push
scas
into
lahf
sbb
sub
nop
cmp
fmuls
push
push
outsb
clc
scas
pop
lods
xchg
adc
cwtl
xor
std
mov
sarl
dec
inc
aad
jno
iret
mov
sbb
pop
pop
mov
arpl
mov
sbb
fwait
lcall
pop
dec
outsb
imul
xchg
gs
les
arpl
les
adc
aad
mov
jo,pn
sub
pop
test
sub
sub
clc
sub
jecxz
filds
imul
jmp
mull
or
pop
mull
jo
loop
les
sbb
out
imul
into
outsb
out
add
mov
lcall
lock
sbb
sti
xor
push
add
xchg
sahf
mov
fstps
orl
pop
in
cmpb
lret
lahf
push
dec
mov
xor
lods
in
pushf
add
insl
jb
pop
mov
sub
movsb
sbb
lock
lds
dec
inc
insb
jmp
sub
mov
cmp
leave
mov
das
movsl
xor
ss
cs
dec
call
inc
sbb
insl
xchg
js
push
fnstcw
pop
rorb
out
dec
inc
lock
sub
les
ljmp
imul
repz
in
and
aad
mov
hlt
fcomip
fcomi
mov
lahf
repnz
jmp
cltd
lahf
test
mov
fnstsw
pop
cltd
stos
iret
sbb
call
sbb
pushw
jmp
xchg
arpl
pop
lret
mov
sbb
or
jns
data16
cli
fwait
mov
out
dec
fimull
xor
ss
add
xor
add
xchg
cmp
das
subl
insl
sbb
std
cmp
gs
frstor
ja
xchg
fildl
mov
fdivl
inc
cmpsl
test
pop
stos
rclb
popf
jne
notl
dec
roll
cmpsb
cmp
bound
aaa
aas
sub
sbb
ss
popa
inc
fs
dec
add
push
gs
dec
mov
pop
inc
jae
and
push
jo
movsb
pushf
and
inc
or
inc
rcrb
rcr
adc
push
xor
jecxz
les
iret
mov
ret
bound
cli
jno
ss
fadds
repz
cld
pushf
das
sbb
insb
scas
fnstenv
lock
leave
sub
dec
xchg
xchg
mov
test
add
or
out
rcrb
lret
decl
je
and
lods
add
or
add
int3
outsb
cmp
and
cs
fsubrp
sarb
cmp
push
add
xchg
xchg
lret
sbb
stos
sub
push
push
cmp
inc
mov
sbb
jb
fstps
mov
cs
sbb
sub
in
fsubrl
push
push
push
jne
out
xor
sub
mov
imulb
ljmp
xchg
ljmp
clc
xchg
mov
jle
cwtl
ret
jmp
addr16
cmp
jp
movsb
dec
xchg
cmp
jecxz
hlt
pop
jo
pop
popa
aad
lods
mov
add
push
ret
push
cmpsb
sbb
sbb
pop
xchg
and
sub
leavew
cmp
call
lods
push
jg
sbb
sub
ljmp
repz
test
mov
mov
cmp
or
mov
sbb
jge
les
bound
fs
xlat
mov
sbb
cmp
repnz
es
fiaddl
enter
out
or
je
in
push
xor
mov
mov
lds
and
sbb
arpl
fcomip
adc
cmp
inc
add
xchg
inc
test
sub
shl
lods
scas
popa
mov
push
mov
push
mov
jno
add
add
jg
jp
sarb
xchg
sub
jmp
pop
adc
jb
sbb
movsl
lock
dec
pop
mov
inc
notl
pop
in
jg
push
xor
lret
push
loope
js
movsb
push
mov
das
adc
loop
or
inc
outsb
lret
cltd
scas
mov
iret
insb
call
sbb
adc
inc
cld
cmp
dec
mov
jno
adcl
outsb
push
dec
push
mov
cmpsl
mov
lea
sub
push
dec
movsb
inc
pushf
mov
xor
jp
push
xor
jmp
cmp
or
sub
lds
ljmp
mov
xor
xor
das
gs
adc
jle
push
mov
or
or
xor
insl
pop
ljmp
xor
lea
xchg
jno
mov
adc
cmpsb
or
jb
adc
jmp
in
mov
popf
sub
or
ret
sahf
pop
popa
js
in
xor
mov
pop
sub
add
fisubs
gs
out
adc
mov
mov
mov
jae
sub
jmp
xchg
lods
mov
push
sub
xor
lret
mov
adcb
dec
cmp
clc
fstpt
shll
mov
mov
xlat
push
ljmp
xlat
xor
andl
sbb
mov
hlt
jmp
fsubrs
add
push
lcall
and
shr
pushf
cmp
pushf
xchg
mov
sub
and
js
out
lock
mov
push
mov
test
fcompl
mov
movsb
push
andl
xor
icebp
pop
cmp
pop
jp
mov
push
test
add
das
or
sub
loop
dec
add
adc
cmp
mull
sub
jnp
xchg
and
pop
xor
mov
add
xor
xchg
push
es
add
mov
stc
pop
and
lahf
mov
add
insb
or
cmp
cmp
aad
push
stos
xor
sbb
lret
sbb
lret
add
or
add
lods
aaa
dec
cmp
or
inc
cld
or
movsb
and
xchg
pop
mov
fsubr
mov
insl
test
daa
aad
mov
add
mov
push
mov
in
mov
pop
cmc
push
add
push
std
dec
movsl
subl
fimuls
adc
sahf
or
mov
push
mov
divl
out
push
test
in
aam
bnd
pop
imul
out
xchg
cmp
or
sbb
pusha
cli
int
and
rolb
imul
les
ficompl
fildl
leave
lcall
std
xchg
inc
lods
push
push
cmpsl
push
sub
mov
push
pop
out
add
aam
inc
add
lahf
mov
sbbb
js
addr16
push
dec
inc
sti
out
out
push
ljmp
jb
dec
mov
push
push
fstps
sub
mov
lret
insl
pop
cmpl
inc
rclb
ljmp
xlat
daa
inc
dec
push
add
stc
outsb
jb
xchg
loope
sbb
adc
pop
adc
cmp
mov
xchg
loope
popf
loopne
sbb
test
sbb
in
xor
ret
jp
adc
sub
lods
add
mov
cs
sub
repnz
inc
fcompl
stc
aaa
cmp
adc
push
pop
cmp
pop
fucom
in
mov
ret
test
in
sarb
mov
mov
sbb
fildll
add
pushf
jmp
and
lcall
lcall
ret
xor
dec
inc
decb
cmp
mov
gs
aam
lds
mov
ret
mov
in
insl
fidivl
xchg
xchg
adc
sub
fimull
imul
cmp
addr16
mov
lahf
pop
arpl
lret
mov
loopne
push
je
stc
std
divl
sbb
cmp
lea
ficompl
lret
int3
xor
jae
pop
in
hlt
mov
addb
gs
xchg
jmp
adc
mov
shlb
aam
sbb
cmp
scas
push
cld
mov
fistpl
inc
dec
stos
cs
test
test
dec
sti
pusha
and
cmpsl
out
aaa
cmp
es
cld
sub
jl
dec
mov
adc
stc
pop
mov
enter
mov
inc
pop
cmp
ret
aaa
in
add
and
xchg
les
fs
insl
sbb
add
pop
imul
adc
and
adcb
mov
push
dec
sar
jl
sub
mov
lods
pop
test
add
sub
adc
popf
cmp
cmp
jg
sbb
in
mov
popf
jbe
adc
out
test
sbb
ljmp
ficoml
inc
lds
mov
or
adcb
add
insb
test
out
jmp
test
mov
cmc
cltd
lock
lea
call
sub
adc
test
inc
aaa
shlb
out
lahf
jae
pop
and
jmp
jno
fisttps
mov
pop
insl
mov
inc
lret
sbb
jp
stc
push
inc
xchg
cli
cltd
mov
pop
ret
jge
ds
test
pop
lahf
push
adc
pop
stc
andl
filds
mov
test
stos
cwtl
sub
pop
icebp
inc
fisttpll
js
mov
xchg
adc
repnz
adc
fmulp
xchg
jae
std
adc
xchg
movsl
fwait
pop
scas
iret
xchg
cmp
cmp
lcall
mov
icebp
mov
sub
outsb
jno
les
loopne
push
in
jp
inc
cmp
dec
mov
push
xlat
lahf
lret
sbb
xchg
daa
push
out
cwtl
ss
test
cwtl
or
or
mov
xor
push
push
push
jnp
jl
shlb
loope
out
mov
mov
mov
mov
stos
out
les
xchg
push
fwait
fs
repnz
mov
nop
insl
lea
inc
into
sub
outsl
add
jb
add
rcll
inc
mov
imul
ret
cmp
mov
xchg
fiaddl
xor
xor
and
sbb
outsl
addb
jns
and
inc
pop
das
aad
lcall
inc
sbb
fs
adc
or
inc
icebp
divps
jp
inc
or
or
scas
and
test
lahf
int
cmpsb
insb
in
xlat
mov
ret
sub
sbb
aaa
mov
arpl
ret
pushf
test
adc
hlt
dec
insb
sbb
jae
ljmp
ja
cmp
cltd
mov
and
dec
pop
data16
ljmp
out
out
jo
repnz
jge
xor
roll
mov
and
rolb
movsb
pusha
pop
xor
push
mov
call
ret
sub
lea
and
es
pop
fidivl
xor
rclb
js
fsub
and
sbb
addb
dec
arpl
sub
pop
and
inc
xlat
xchg
mov
imul
xor
mov
fidivs
push
mov
mov
push
mov
xor
fmull
fxch
xorl
dec
dec
adc
add
push
dec
push
jae
jmp
or
jle
sub
sbb
jmp
mov
out
xchg
sub
inc
call
inc
in
mov
pushf
fimuls
mov
jl
cmp
or
fisttps
push
mov
jo
aam
add
sbb
flds
inc
dec
sarb
cmp
push
add
sub
ret
ret
popf
cmpsb
mov
ds
xchg
cs
dec
xchg
cmp
aad
push
cltd
cld
fadds
outsb
dec
out
lcall
sbb
sub
out
mov
sbb
pop
pextrw
push
popf
sub
lret
push
jecxz
test
popa
dec
xchg
mov
inc
inc
in
jp
pushf
lret
xor
in
stc
xor
or
gs
adc
shrb
shll
cmp
jecxz
imul
xchg
add
mov
push
cmp
dec
or
sbb
into
sub
fdivs
sub
hlt
mov
inc
nop
xchg
call
addr16
push
mov
jae
mov
loop
aam
repnz
mov
sbb
test
jnp
sub
and
dec
aas
mov
setns
int3
ds
outsb
jbe
sahf
insl
mov
lcall
mov
sub
ret
push
sub
inc
xor
lahf
pop
test
enter
inc
fcom
mov
or
jg
mov
mov
aaa
xchg
mov
inc
pushf
pop
pop
and
test
fsubl
cltd
jl
sub
data16
cmp
shrl
inc
mov
xor
xchg
or
mov
inc
movsb
sbb
scas
xchg
sbb
aam
insb
mov
cmp
loopne
inc
fcmove
pop
rclb
mov
aad
stc
mov
pop
push
lcall
add
jb
std
int3
loope
in
insl
mov
mov
mov
fiadds
cmpsl
repnz
pushf
sahf
pop
sbb
jg
dec
scas
sahf
not
aas
roll
pop
jecxz
jmp
cmp
adc
sbb
mov
or
cli
inc
ret
dec
push
rorb
mov
nop
rcrb
xchg
jns
cmpsb
push
sbb
test
pop
inc
push
lock
push
dec
lahf
sub
push
in
jns
out
add
lods
pop
repz
test
mov
stc
les
aas
sbb
loopne
push
dec
mov
jle
sub
mov
add
jbe
push
push
ficomps
cmp
in
and
jl
cmp
cmp
dec
popf
and
into
jecxz
test
ret
xor
jbe
xchg
add
adc
xchg
pop
sbb
push
movsb
pop
imul
cltd
adc
outsb
cmp
ds
bound
xor
sub
in
in
push
xlat
push
test
adc
adc
adc
rclb
xlat
mov
push
jae
mov
movsl
mov
mov
sub
adc
into
inc
test
repnz
lods
pop
jmp
jmp
lcall
mov
adc
ret
aas
call
rolb
xchg
sub
fwait
clc
inc
enter
and
cmp
push
lock
aaa
pop
movsl
addl
jecxz
aaa
dec
mov
leave
inc
ret
mov
loopne
xlat
jne
pop
xlat
inc
dec
lea
popa
lret
aam
out
dec
mov
xor
mov
mov
mov
mov
mov
inc
and
mov
rcrb
cltd
pop
jns
clc
xchg
fstps
jle
sub
fsts
fists
sub
push
repnz
cwtl
lret
loopne
mov
lock
xor
mov
es
push
jne,pt
testb
mov
sbb
pause
fs
mov
lcall
pusha
test
mov
xorb
cmp
push
ret
push
xor
fwait
push
aam
mov
or
cltd
add
xchg
into
lret
arpl
add
scas
stos
fdivrs
mov
test
mov
cltd
fs
mov
scas
mov
jne
mov
sub
push
leave
stos
and
ja
adc
lods
shll
test
icebp
dec
mov
ret
rorb
sti
pop
imul
jo
and
bound
sub
clc
shll
insb
xchg
ja
pop
imull
pop
dec
movsb
rcrb
mov
xor
pop
cmpsl
inc
mov
mov
test
push
push
cmp
mov
add
insb
adc
repz
xchg
push
out
jae
sbb
daa
and
sub
data16
xchg
das
ljmp
orl
clc
adc
xchg
inc
popa
or
sbb
jl
adc
jmp
movsb
cltd
test
jbe
loope
stos
adc
loopne
fs
xor
jmp
xor
sub
inc
in
jl
clc
js,pn
mov
xchg
adc
fidivrs
push
ds
mov
or
adc
jmp
push
lods
jge
dec
or
cmp
test
push
test
jns
insl
inc
mov
lcall
and
adc
js
xchg
sub
jge
orl
je
mov
es
add
inc
fwait
xchg
stos
sbbb
or
cs
jae
jp
int
sub
push
lods
adc
jl
and
fsubs
aad
ret
je
fwait
adc
sbb
cs
movsb
mov
jo
cwtl
adc
sub
cmp
jle
enter
sti
inc
test
sahf
add
xchg
in
test
xor
mov
mov
repnz
mov
mov
int
dec
xor
or
loope
andb
pop
push
mov
cmp
cmp
mov
mov
lret
jmp
pop
xlat
fimuls
sbb
inc
test
rorb
fadds
xor
stos
daa
test
pop
and
jns
loop
enter
cmc
add
nop
arpl
mov
or
mov
sbb
jecxz
dec
dec
jne
mov
mov
loope
xor
sbb
aaa
mov
stos
es
bound
or
outsb
aaa
pop
mov
push
xor
add
add
dec
push
sti
sbb
insb
sub
or
pop
push
sub
push
pop
das
pop
lret
push
stos
xor
push
xor
add
bound
push
out
push
sahf
dec
or
sbb
test
into
rolb
sub
pop
adc
mov
mov
neg
dec
ljmp
lret
inc
push
inc
mov
dec
pop
mov
loopne
es
sub
mov
or
xchg
xor
fwait
inc
clc
and
xlat
sub
inc
insb
js
push
lods
bound
add
clc
lods
inc
push
ret
xchg
sahf
mov
mov
sub
mov
rcrl
push
jns
cmpb
add
pop
fwait
inc
add
addr16
pop
inc
mov
inc
pop
add
xchg
push
dec
or
scas
inc
inc
pop
popa
xor
fldenv
aam
jecxz
in
std
loopne
jbe
arpl
roll
cmc
test
cltd
aas
jne
sub
fs
push
push
cmc
out
cmpsb
test
xchg
int3
cli
fbstp
inc
push
sti
sbb
aas
push
adc
pop
push
mov
out
cmpl
and
add
push
push
loope
xor
fldt
or
into
leave
cmp
hlt
mov
xor
loopne
sub
clc
xor
add
daa
sbbl
dec
adc
fxch
int
xchg
mov
ljmp
push
pand
lock
add
outsl
cmp
das
je
pushf
cmp
dec
je
sbbb
xchg
repnz
ja
xchg
lock
fwait
jecxz
test
sbb
pop
mov
xor
cmp
jne
lods
or
movsb
ljmp
ds
xlat
adc
outsl
pop
jns
mov
mov
jle
test
call
lcall
mov
je
lahf
out
sub
out
xchg
push
xorl
cmp
fwait
sub
popa
mov
push
into
mov
loope
out
adc
sbb
inc
movsl
jge
sar
outsl
enter
ss
push
or
cltd
inc
subl
inc
mov
cmpsb
cmp
insb
call
movsl
or
fwait
out
mov
mov
xchg
xor
push
dec
pop
daa
jae
sub
cmp
add
jecxz
outsb
arpl
dec
mov
shll
add
xchg
shl
fimuls
xchg
outsl
sahf
sahf
xor
cmpsl
mov
jbe
pop
push
leave
es
mov
lock
and
jae
and
mov
sarl
addr16
jae
int
jmp
test
xchg
adc
test
sub
sarl
ficompl
fldcw
cs
data16
stos
ror
mul
xchg
scas
fs
add
xor
test
stos
jg
sbb
call
or
and
inc
sbb
push
jle
push
xor
hlt
lcall
xchg
popa
fmuls
aam
xor
cmp
cli
jle
fistpll
jg
mov
sbb
jno
cwtl
in
fdivrs
rclb
or
push
dec
iret
mov
les
mov
iret
jne
xor
mov
mov
mov
into
shll
sub
ret
ret
lahf
jb
and
ds
gs
outsl
lods
lret
inc
inc
cmp
dec
add
loopne
into
sub
or
and
mov
jno
dec
cli
adc
dec
mov
inc
dec
mov
jbe
xchg
stos
xchg
rorb
adc
fdivs
ljmp
jle
fiadds
mov
push
gs
jo
leave
out
mov
cmc
dec
daa
sub
das
insl
and
push
push
pop
int3
dec
and
fnstenv
push
sbb
andl
sub
insl
fisubl
lock
mov
fstl
dec
adc
fcmovbe
inc
push
dec
mov
popf
je
mov
cmp
gs
sbb
data16
test
ret
dec
sub
xchg
push
icebp
inc
jnp
mov
and
in
pop
rsqrtps
in
mov
xlat
pop
pop
popf
lock
ljmp
roll
mov
or
xchg
rcl
jg
jl
lcall
xchg
stc
inc
adc
adcl
sarl
subl
mov
sarl
lret
mov
fwait
jns
push
shr
xchg
fdivl
mov
inc
pop
fnstenv
jns
cs
sti
fildll
xchg
pop
loope
adc
jbe
pop
or
cltd
jb
dec
stc
testb
cmp
sbb
rcr
dec
ss
sub
cmp
cmp
int
push
add
mov
jmp
xlat
mov
inc
out
cmp
pusha
cmp
jns
test
cmp
adc
and
adcb
rol
enter
or
fwait
jmp
fcompl
mov
mov
sarl
aaa
push
xchg
loop
sarb
shrb
scas
xchg
sub
dec
xchg
hlt
and
lret
shlb
mov
add
out
fs
repz
inc
cmp
push
pop
and
mov
add
sub
or
push
push
mov
pop
movsl
cld
sub
ficomps
sbb
loopne
ljmp
testl
lea
shll
mov
or
lret
shrl
inc
adcb
test
fwait
mov
mov
sbbb
mov
icebp
cwtl
mov
mov
adc
jb
jl
fildll
jg
in
or
in
nop
stos
lea
inc
mov
in
mov
jge
dec
sarl
dec
mov
mov
popa
xlat
test
icebp
mov
jbe
pop
inc
adc
sbbl
cmpsl
xor
push
sub
mov
outsb
outsl
mov
sarb
sbb
push
jp
xchg
cmpsl
shlb
jns
xor
and
dec
adc
into
xorb
sub
inc
jle
push
jb
jecxz
pushf
fistps
imul
and
or
outsb
xchg
or
pop
adc
sub
pop
add
jl
arpl
jne
mov
mov
jmp
xchg
add
in
inc
and
pop
or
ljmp
sub
dec
lods
sub
frstor
and
addr16
jns
in
or
adc
push
or
mov
dec
ja
aad
fs
push
std
rorl
popa
sti
push
push
lea
and
mov
sub
fs
in
push
fdivr
fisubrs
or
mov
and
or
lret
push
inc
push
hlt
fisttpl
outsl
push
cmpsb
xchg
mov
lea
ret
mov
pop
sbb
hlt
mov
or
clc
mov
outsl
addr16
fidivl
subl
jne
ret
sub
mov
inc
mov
dec
xchg
or
or
dec
icebp
or
int3
int
mov
xchg
lods
xchg
cwtl
dec
or
sub
fs
or
jns
pusha
cmpsb
push
dec
mov
xchg
popa
cli
jp
fstp
and
rcll
arpl
push
cld
sbb
je
aam
jp
mov
insl
aam
mov
jno
mov
dec
pop
les
sti
cmp
add
ss
pushf
pusha
int3
mov
inc
imul
jg
call
mov
stos
push
mov
push
mov
mov
cwtl
mov
mov
nop
or
outsl
das
pop
push
add
xor
inc
mov
xor
lcall
leave
add
cli
mov
ficoms
mov
jg
lods
sub
lahf
xor
fdivs
lods
jb
xchg
lods
shll
mov
cltd
insl
sbb
add
loope
cltd
ret
idiv
jns
test
dec
or
pop
outsl
pop
mov
cmpsb
mov
dec
or
dec
scas
int
out
mov
sub
mov
test
pop
popf
jbe
lret
cli
lret
stc
aas
stos
aam
movl
stc
out
cmc
call
dec
mov
int3
sub
push
push
xor
inc
ja
js
js
pop
adc
mov
dec
xor
xor
pop
or
call
pop
pop
jg
sti
jge
addr16
jae
test
push
jo
mov
mov
in
mov
nop
lahf
push
push
cmp
sub
insl
fisubs
mov
mov
lcall
insb
shll
mov
xor
lock
sbb
adc
jle
subb
sbb
mov
pop
gs
aam
out
les
mov
dec
push
mov
scas
or
mov
and
test
sbb
adc
xchg
jle
fsubl
add
test
add
lock
mov
int
fcmovbe
xchg
lods
pop
cmpxchg
mov
loop
adc
dec
fistpll
in
stc
cli
gs
push
popf
das
sub
insl
lahf
ror
mov
in
jp
cmc
adc
mov
cmp
inc
push
test
inc
arpl
ret
lahf
pop
imul
outsl
insb
bound
stc
mov
jne
cmp
loopne
fucomi
push
mov
mov
int
popf
out
test
arpl
iret
xchg
xlat
bound
and
cs
jae
sbb
jg
mov
push
mov
mov
scas
jmp
xchg
jo
scas
cmpsl
mov
pop
movb
rcll
cmp
push
enter
leave
test
in
mov
sar
jmp
cmc
sbbb
add
cmp
mov
dec
cmc
aad
in
out
cmp
jge
mov
pop
push
inc
xchg
lods
jbe
mov
dec
jnp
xor
enter
add
sbb
addr16
xor
xor
test
ret
es
pushf
push
outsb
nop
aad
sub
sbbl
mov
sbbb
jo,pt
push
mov
stos
fs
mov
inc
ret
sbb
push
aaa
inc
cltd
sub
adc
data16
test
js
inc
inc
push
sub
loop
push
cltd
pop
or
popf
pop
jae
mov
or
pushf
mov
sub
enter
xchg
jbe
adc
push
adc
jae
inc
stc
insl
jmp
lds
bnd
enter
test
push
les
inc
outsl
mov
imul
or
shlb
jmp
lods
pop
pop
xlat
sbb
cmp
mov
shl
push
or
js,pn
jp
je
std
xlat
push
sub
push
push
movsl
popa
fs
std
inc
sbb
mov
jo
sbb
push
lock
dec
bound
xor
icebp
mov
pop
inc
inc
sbb
fadds
cld
and
pop
and
dec
pop
mov
pop
xchg
ja
fmull
pop
idivb
jmp
xchg
pop
outsl
mov
flds
repnz
hlt
ja
inc
shl
cltd
jp
xchg
ljmp
ja
inc
lea
inc
fnsave
xor
test
punpckldq
mov
push
out
cs
icebp
pop
adc
mov
and
xchg
mov
xchg
iret
cmp
mov
sbb
int3
aam
fsubrs
xchg
stc
test
push
cmc
stos
push
xor
or
outsb
jle
mov
xchg
mov
int
adc
ljmp
push
jl
in
fwait
xchg
aam
mov
insb
fnstsw
pop
cli
fistpl
insl
enter
jge
popf
rcrl
scas
jp
lods
xor
mov
test
push
jno
xor
adc
adc
xchg
imul
and
inc
sub
inc
and
adc
push
or
mov
icebp
cmp
jo
jg
mov
xchg
lds
and
mov
clc
lcall
out
rcrl
sub
testb
and
pusha
cmp
ljmp
mov
jge
sub
fs
and
test
add
and
aas
xor
jno
adc
pushf
loopne
cltd
mov
pop
popf
leave
inc
cmp
mov
xchg
std
cli
pop
sbb
fdiv
pop
sub
sbb
push
or
fnstcw
inc
popa
mov
inc
xor
mulb
out
repz
into
mov
pop
adc
and
push
fidivrl
push
xchg
or
mov
gs
mov
andl
add
loop
add
jecxz
jne
aaa
pusha
push
daa
icebp
cmp
out
lods
clc
sub
lods
in
arpl
out
xchg
jae
xchg
ret
pop
add
fildll
outsb
ss
dec
js
fs
mov
sbb
clc
sub
mov
fisubrl
jle
in
jo
jae
imul
xchg
and
into
mov
fs
dec
mov
pop
inc
xchg
jp
xchg
or
xchg
sbb
push
mov
lahf
ss
es
adc
push
flds
scas
and
xchg
mov
leave
dec
dec
inc
test
and
jo
sub
adc
sbb
loopne
jae
filds
icebp
cli
aam
xor
out
out
addl
popa
in
jne
jmp
pop
mov
jle
push
or
and
add
or
and
inc
dec
jbe
inc
cmc
push
sti
pop
cltd
inc
int3
and
dec
xlat
cmc
add
mov
push
pop
push
divb
add
daa
leave
out
rorb
subb
push
jnp
aad
inc
outsl
dec
jb
sub
sahf
sbb
dec
cmp
daa
mov
pop
shll
push
push
cmp
jnp
xchg
mov
lods
fwait
pop
rorb
dec
xchg
adc
les
push
mov
andb
pop
sarl
cwtl
fdivrs
xor
call
pop
sbb
clc
fs
arpl
xchg
inc
inc
sub
sub
inc
mov
and
fdivr
and
xor
cmp
mov
sti
inc
test
js
rclb
jle
push
les
ds
add
nop
test
repnz
mov
dec
cld
iret
in
out
loope
dec
gs
adc
or
sub
sbb
hlt
into
cmp
add
lods
loopne
scas
lods
sbb
and
mov
nop
outsb
cs
test
popf
cmp
or
imul
cmp
sub
cli
inc
ficomps
sub
sbbb
fnstsw
jnp
daa
stc
sbb
pushl
add
mov
lret
jae
sbb
and
shrl
stos
pop
call
std
jl
or
cld
sbb
inc
dec
push
push
andb
shrl
nop
mov
inc
sub
pop
mov
fiadds
push
pop
out
and
sar
mov
in
ds
les
and
ret
mov
sbbb
stos
jecxz
or
aaa
and
pop
dec
test
cld
xorl
xor
sub
mov
xchg
mov
das
jnp
dec
and
imul
adc
popf
mov
ja
out
mov
lock
pop
pop
and
rorb
jmp
push
js
jg
cmp
and
cwtl
cmpsl
pop
in
ffree
pop
or
outsl
jg
ja
mov
add
stos
pop
lret
in
sub
and
and
inc
cld
call
xor
adc
mov
cltd
aad
sub
jecxz
sahf
stos
xor
or
iret
aad
dec
sbbl
rcrl
in
cmp
test
lret
scas
jg
jns
jnp
aas
sub
popl
popf
pop
add
mov
test
mov
repnz
movsl
mov
cmp
neg
fbstp
xchg
insb
sub
cli
idivl
jge
repnz
dec
cmp
mov
std
or
jle
add
mov
adcb
add
cmpsl
and
pop
adc
jmp
xor
inc
add
sbb
mov
mov
inc
xchg
lret
dec
stc
mov
dec
std
inc
stc
jno
lods
jle
sub
lahf
outsb
fcompl
or
addb
push
sbb
mov
mov
fsubl
and
movsl
fsubr
sub
xor
stos
popa
mov
mov
loop
jp
pushf
mov
add
adc
cwtl
ret
ja
shrl
xor
xchg
cmp
mov
je
mov
lock
ljmp
mov
xchg
cmp
jne,pn
xchg
jbe
jmp
mov
rclb
push
push
lea
jnp
inc
mov
push
and
sub
xchg
cmp
popf
push
xor
cmp
jnp
movsb
cld
mov
dec
aad
sub
xchg
xchg
jne
adc
mov
int
inc
sbb
jns
stos
iret
mov
and
data16
jmp
enter
mov
or
int
xchg
jmp
and
insb
inc
scas
mov
push
jne
or
subl
dec
dec
cmp
insb
popf
cmp
lock
daa
xchg
rorb
lea
inc
fistpll
lcall
lods
and
cmp
xor
ds
popf
xchg
ficoml
call
jnp
in
mov
inc
mov
xchg
cltd
mov
dec
nop
push
cltd
std
push
adc
dec
loope
sub
mov
adc
xchg
mov
dec
mov
or
dec
lahf
push
pushf
mov
xor
xor
xchg
hlt
cmp
xchg
push
outsl
pop
xchg
popf
scas
sbb
or
push
addr16
hlt
mov
pop
pop
cmp
mov
data16
and
xchg
sbb
adc
mov
cmp
sub
push
pop
xchg
test
sbb
or
adc
out
jecxz
fidivl
outsl
lods
lods
push
mov
lahf
fisubrs
cmp
cld
mov
lods
mov
lea
je
adc
jl
adc
cmpsb
punpckldq
pop
les
cmp
add
sub
pusha
dec
cmp
jns
cmpsb
lock
cli
and
scas
stos
jecxz
add
xor
push
incl
or
dec
push
xor
inc
mov
popl
mov
adcl
push
das
out
incl
cmp
popa
ljmp
push
fwait
and
add
in
jecxz
jg
gs
push
stc
orl
push
xor
out
and
out
in
push
xor
push
cmc
cmp
aas
orl
jne
push
in
fs
mov
jae
fldl
xor
xchg
or
incb
mov
scas
adc
jg
aam
stc
sti
xor
sti
jecxz
inc
icebp
in
addr16
sub
sbb
adc
dec
stos
push
aam
mov
pop
scas
movsb
pop
jns
mov
lods
std
inc
call
dec
fldenv
out
outsl
pop
ja
gs
iret
jmp
mov
add
pusha
xor
rorl
xchg
inc
cmp
sub
mov
pop
dec
test
jo
setge
adc
xor
in
jbe
aas
sub
call
out
cmp
push
inc
push
mov
outsl
mov
ret
pop
fistps
mov
xchg
jecxz
mov
mov
fsub
and
je
fwait
test
cld
pop
jbe
xchg
je
push
cmpsl
into
clc
dec
repnz
cmp
add
and
adc
xor
jmp
out
cld
xchg
xchg
mov
xor
cmc
rclb
or
push
test
inc
ret
in
and
xchg
or
test
mov
or
lods
dec
xor
pop
cmc
cmp
jge
rcrl
adc
dec
and
mov
movb
mov
popf
fcoml
dec
cld
inc
xchg
inc
push
int3
cmpsl
kandnb
xor
mov
pop
xorb
fistpl
pop
not
mov
sub
mov
mov
aad
addr16
rorb
lcallw
int
movaps
cmc
jno
jmp
dec
adc
aaa
andl
cs
loopne
stos
adc
cld
pop
ficoms
out
sub
stc
adc
or
mov
lcall
inc
dec
fwait
adc
pop
xchg
mov
fmull
jmp
mov
add
push
les
sbb
pop
jg
sti
out
pop
adc
je
pop
xchg
pop
add
adc
aam
inc
aas
sub
push
push
imul
insl
daa
sbb
push
xlat
push
and
shll
insl
and
sub
mov
hlt
repz
ficomps
test
imul
aas
push
xchg
and
sbbb
shl
cmc
pop
daa
jnp
cmp
packsswb
mov
cmpsb
scas
mov
out
sahf
cmp
xchg
jbe
inc
jbe
sbb
outsl
sbb
push
leave
xorl
leave
and
mov
mov
nop
enter
mov
push
imul
jl
sahf
mov
sub
int
mov
out
cmovne
sub
sub
sti
mov
inc
subb
and
mov
dec
js
cmpsb
ds
mulb
lods
add
sbb
mov
push
sub
push
jge
jecxz
cs
jbe
push
or
ljmp
push
xchg
rcrl
pop
push
and
les
mov
outsb
mov
icebp
shlb
loopne
mov
push
flds
lock
and
jbe
inc
fistl
popf
adcb
and
test
jge
or
push
add
adc
insl
outsl
or
xchg
adcl
gs
cmp
mov
mulb
add
movd
popf
fs
lock
repz
jne
dec
mov
pop
sahf
sbb
lret
scas
inc
jno
outsl
inc
dec
mov
mov
ds
lret
mov
sub
aam
sbb
into
out
popf
cwtl
inc
fucom
mov
stos
data16
ja
push
repz
dec
or
sbb
or
lods
jg
xlat
mov
jg
aas
xchg
shll
jge
gs
sahf
movsl
test
jmp
lods
popf
sbb
adc
neg
jne
jg
popa
es
aam
sub
push
xchg
adcb
push
sbb
shr
aaa
fisubs
jl
mov
fists
repnz
add
push
inc
jne
test
jp
xchg
mov
cmp
pop
push
xchg
dec
int3
popw
jp
or
je
mov
xchg
sbbl
mov
jbe
cmc
pop
mov
stos
pop
sub
sahf
mov
or
pop
shlb
pop
int3
push
push
dec
movl
mov
addr16
test
jb
dec
pusha
aad
mov
pushf
adc
mov
mov
into
divb
sti
and
or
sbb
arpl
sub
or
add
and
mov
lea
enter
cmc
lods
dec
popa
pop
xor
ja
cwtl
test
and
adc
repnz
aad
rcr
jl
jne
mov
lret
cmp
je
mov
push
xchg
adc
cmp
push
test
cmc
test
in
in
ljmp
roll
jmp
cmp
stos
dec
insb
cmp
mov
dec
rorb
es
xor
xchg
pop
push
hlt
fwait
out
loop
fildll
adc
das
and
repz
movsl
shl
cmpb
pop
xchg
cmp
xchg
sub
cmpsl
pop
mov
pop
js
fsubs
sbb
or
aaa
pop
adc
cmp
movsl
mov
sbb
hlt
inc
pop
push
ficompl
cs
cltd
dec
shlb
test
dec
mov
inc
and
cmp
jg
aad
dec
pop
inc
cmc
cmp
and
out
adc
and
push
es
and
into
jb
mov
push
out
xchg
int3
mov
add
mov
shll
movl
rcll
xor
cs
jg
xchg
or
lds
mov
and
jae
jle
mov
push
xor
notb
pop
lods
es
cli
mov
out
fwait
adcl
pop
ja
or
inc
inc
xchg
jmp
ja
sbb
fsubr
ja
and
cs
adc
rcrl
xor
push
adc
scas
sub
xor
cld
or
xchg
shlb
mov
xor
and
js
mov
leave
jmp
outsb
ret
mov
dec
pop
xchg
jge
je
lahf
jmp
rorl
imul
mov
fistl
in
inc
and
cs
loop
mov
insl
rclb
jb
rcl
sbbl
test
jecxz
mov
xchg
imul
int
jecxz
mov
and
sbb
iret
pop
sub
movsb
mov
les
cmp
cmp
and
mov
xor
in
std
xchg
cmpsl
xchg
jg
mov
movsb
mov
sub
pusha
cwtl
pop
imul
mov
cmp
and
or
insb
out
lock
ffree
add
icebp
cli
loope
mov
out
pop
jmp
lret
mov
ret
nop
inc
jle
test
xor
stos
jnp
int3
clc
fstl
sbb
add
leave
loope
xchg
dec
imul
repnz
int
mov
push
andl
pusha
lret
loopne
jbe
pop
add
sub
repnz
inc
ret
push
inc
ret
cld
jmp
push
popa
in
sbb
or
mov
xchg
mov
incl
int
mov
lahf
mov
pop
lods
call
mov
mov
gs
rcrb
sbb
lret
add
xchg
adc
cwtl
mov
lods
out
and
mov
cld
in
cmp
psrlq
sub
inc
add
cld
lret
add
push
inc
mov
fnstsw
mov
sti
out
ja
das
cmp
fs
add
hlt
mov
cwtl
sub
xorps
pushf
cltd
adc
cwtl
pop
inc
ficoml
mov
xchg
shll
lea
push
jbe
les
lock
sahf
pop
jge
inc
sbb
sub
sbb
movsl
arpl
cmp
jne
std
cmp
inc
sti
or
mov
cmp
clc
sti
data16
push
pop
lcall
jne
mov
mov
fidivrl
sbb
icebp
pop
and
rcrl
fisttpl
rclb
nop
addr16
shl
add
mov
adc
xor
imul
dec
in
js
pop
cmp
stos
sbb
mov
testl
sub
imul
add
scas
push
pop
dec
fwait
dec
insl
idivl
or
test
outsl
push
fisubrl
loopne
dec
sbb
shr
push
lock
or
xor
and
add
inc
xor
push
mov
adc
push
lds
xor
dec
pop
xchg
fsubs
jne
test
pop
pop
loope
mov
shl
and
and
jecxz
into
lods
fisubrs
ja
jae
mov
and
ja
iret
fmulp
mov
loop
out
cld
imul
mov
fimull
int3
inc
cmpsb
and
lock
jp
xor
add
fldenv
sub
pop
in
fcmovnu
bound
and
daa
idiv
dec
test
pop
data16
int
movsl
in
pop
push
mov
fucomp
xchg
ljmp
and
stos
jno
cmpsb
arpl
push
pop
ljmp
xchg
inc
popa
mov
xchg
mov
jge
and
push
pop
fcmove
xor
repz
and
lret
adc
mov
mov
sub
fldcw
add
aas
jg
test
jle
faddl
ret
mov
ret
inc
and
shrb
pop
jmp
loope
sub
pop
adc
cwtl
xor
leave
and
mov
cmpsb
and
jae
sub
xchg
sub
mov
dec
add
xchg
roll
mov
jne
mov
data16
insb
pop
shlb
out
cmpsl
adc
ss
fdivp
fs
or
sub
movsb
xchg
gs
jb
push
outsl
jmp
in
push
and
mov
fcoms
pop
add
mov
xchg
sbb
and
xor
xchg
cmpsb
test
cltd
push
xor
jp
push
jg
jae
stc
jge
pop
sub
test
scas
cmpsl
push
ffree
add
pop
aam
sub
mov
aam
mov
pop
push
cmpsb
dec
push
jb
mov
mov
and
sahf
pop
outsb
xor
and
mov
inc
lods
push
sbb
shll
in
hlt
das
push
adc
mov
xchg
nop
popf
dec
negb
int
out
sbb
pop
fdiv
add
inc
jecxz
cmp
cmpsl
aam
mov
mov
inc
in
test
orb
mov
push
movsl
loop
fwait
jno
jecxz
out
sbb
jg
sub
inc
jb
or
or
adc
popf
lds
push
out
mov
sub
es
sub
adc
aaa
loopne
jb
jnp
je
jno
arpl
cmp
push
or
lock
ljmp
clc
mov
jg
int3
jl
mov
mov
dec
clc
dec
jae
xchg
adc
pusha
xor
lahf
loopne
data16
stc
cs
aaa
push
test
and
jg
enter
aad
push
jbe
bound
sbb
lret
ss
or
imul
add
repz
test
or
xchg
jmp
sub
push
repz
pop
inc
and
pop
shr
ja
and
push
repz
cmp
cmp
or
pop
sub
mov
xor
inc
mov
push
lret
fincstp
dec
adc
jmp
sub
test
pop
lock
cmp
jo
test
mov
or
outsb
pushf
mov
or
cwtl
sbbl
repnz
scas
or
push
pop
das
sub
inc
es
lds
ja
mov
xor
cmc
inc
push
jae
pop
fnsave
aad
push
and
pop
and
lret
xchg
and
and
cld
loop
and
leave
insb
mov
syscall
pop
nop
adc
push
int
or
loop
sbb
pop
push
dec
mov
sti
adc
mov
lds
shlb
jae
les
pop
cmp
mov
daa
nop
scas
cmp
loop
sbb
mov
pop
bound
jb
lods
pop
fwait
mov
cmp
js
cli
mov
jns
shr
add
jmp
mov
pop
push
xchg
xchg
jo
push
add
mov
mov
test
pop
mov
mov
sbb
cmc
lods
bound
push
sbb
lea
outsl
shlb
inc
cmp
jo
je
xchg
and
insb
ss
in
rcrl
js
dec
clc
inc
and
push
cmp
adc
sbb
push
loopne
push
cmp
mov
dec
push
out
sbb
cltd
mov
shlb
jns
sbb
aad
scas
es
ja
mov
test
movsl
mov
popa
xorb
enter
dec
iret
jle
jle
jo
mov
scas
daa
push
fstps
mov
bound
out
adc
jmp
adc
into
cmpsl
inc
xor
mov
xlat
xlat
jno
mov
add
pop
testb
xchg
pop
mov
leave
fldenv
pop
sub
mov
negl
mov
and
mov
inc
loopne
iret
lret
add
cmp
stos
dec
sbb
push
sbb
mov
das
push
push
scas
add
orl
ret
mov
fwait
add
jp
pop
mull
sub
pop
add
or
cwtl
iret
loop
mov
jo
dec
xchg
pop
mov
aas
shrb
push
mov
mov
nop
inc
cmp
push
or
inc
arpl
mov
fisubs
stc
lds
pop
pop
or
cmc
add
xlat
sti
or
cs
dec
pop
mov
pop
dec
das
scas
loop
fcompl
pop
outsb
sbb
cmp
out
pop
pop
into
push
push
xor
and
jl
stos
int
in
cs
cmp
mov
outsb
incb
mov
scas
xchg
jne
mov
lods
fdivrs
jne
mov
jmp
mov
cmp
mov
adc
push
and
cmpb
je
inc
mov
jp
out
add
mov
sub
or
add
popf
jp
daa
push
int
inc
or
std
sbb
pop
xlat
dec
xchg
fstl
pop
add
pop
loopne
sti
cmpl
pusha
gs
test
adc
cwtl
pop
xchg
stos
pop
and
roll
add
inc
and
mov
in
lahf
gs
lea
mov
ret
push
fldcw
lock
scas
arpl
lcall
dec
pop
femms
call
xlat
mov
xchg
sbb
pop
xchg
cmp
push
xchg
dec
pop
scas
inc
adc
fstps
test
lcall
jne
mov
add
neg
arpl
push
mov
mov
lds
and
jg
fs
pop
addb
sbb
lods
adc
mov
dec
xchg
loope
enter
addr16
cmp
inc
test
lret
addl
jl
shrw
roll
notl
aam
ljmp
or
orb
cltd
dec
inc
inc
ret
scas
inc
mov
mov
xchg
xchg
cwtl
stc
inc
test
ljmp
mov
mov
adc
mov
mov
ja
push
pop
in
sbb
mov
sbb
inc
mov
cmp
test
inc
add
sub
pop
call
xor
test
mov
sti
rcrb
inc
xchg
adc
ret
fldcw
repnz
sbb
jo
dec
mov
lea
xor
mov
mov
imul
or
mov
and
ret
xor
pop
push
xor
push
popa
sahf
push
adc
dec
inc
mov
mov
iret
xlat
repnz
jg
fistpll
dec
lds
adc
dec
into
xchg
jmp
pop
sbb
shll
rcrb
add
inc
sahf
mov
sbb
pop
xchg
incl
pop
push
lea
push
insl
adc
xchg
push
mov
cmp
into
rol
dec
pop
fwait
mov
xor
xchg
sbb
lods
cmp
dec
in
push
stos
ficoms
cltd
xchg
je
jb
pop
cmp
ret
in
leave
inc
out
ss
xchg
rcr
int3
into
adc
aas
shlb
mov
iret
sub
dec
and
sbb
jno
cli
aad
and
mov
lcall
push
dec
test
pushf
pop
inc
mov
and
pop
xchg
pushf
sbb
pop
aam
mov
scas
enter
out
adc
mov
std
cmp
jb
scas
daa
test
cmp
pop
std
or
ljmp
popf
mov
stos
push
iret
jmp
outsl
jp
jp
insl
mov
jnp
mull
mov
fiadds
leave
movsl
int
addr16
push
jmp
aad
call
aad
testb
outsl
pusha
test
in
jbe
jp
shlb
mov
cmpsl
fsubrl
jbe
sub
mov
xchg
gs
repnz
repz
cwtl
or
sub
je
push
xchg
xchg
ret
pop
stos
loopne
xchg
ret
in
mov
xchg
mov
cs
inc
and
and
out
and
test
test
push
jb
jnp
inc
sub
xchg
push
mov
cmp
call
jno
cmp
enterw
cmpsl
pop
jg
lcall
push
insl
dec
or
push
rorl
stos
or
cmp
mov
xchg
jmp
stc
push
popa
imul
test
pop
add
fs
shrl
push
ret
or
mov
dec
sti
imul
or
shl
lods
lods
mov
stos
out
pop
push
add
fs
mov
and
mov
xchg
ror
mov
mov
inc
cmp
nop
push
imul
ljmp
jl
das
push
mov
push
pop
dec
pop
sahf
in
cmp
cmpsl
cmp
push
loop
sub
lods
dec
scas
iret
orb
arpl
lock
mov
lret
inc
out
cltd
scas
add
jg
sbb
pop
repz
pop
sub
orl
dec
or
mov
dec
mov
outsl
jmp
cmpsl
repz
cmpsb
nop
push
dec
orl
pusha
xor
mov
ja
inc
or
je
push
loop
fwait
mov
xor
cmp
jo
and
push
roll
push
xor
sbb
pop
popf
clc
js
mov
nop
outsb
cwtl
js
popf
jo
jmp
ss
shlb
jg
mov
xchg
pusha
bnd
stos
push
lret
fcoms
or
push
inc
push
jl
push
les
jo
xlat
cmp
mov
scas
loop
js
aad
xchg
pop
stc
jmp
and
xor
sub
xchg
addl
push
or
fnsave
push
pop
test
push
rcrb
add
mov
mov
xor
ror
gs
pop
rcll
sbb
jp
aaa
repnz
out
mov
mov
or
shlb
jbe
sbb
mov
icebp
popf
xor
insb
mov
addr16
mov
arpl
pushf
fs
inc
jp
xorl
mov
lods
pop
cltd
sbb
mov
fiaddl
xchg
push
ds
scas
dec
pop
outsb
cmp
mov
inc
push
push
inc
xor
push
pop
scas
push
pmuludq
rorl
inc
adc
fists
sbb
loop
movsl
arpl
mov
loope
inc
es
cli
into
inc
push
push
gs
in
je
inc
pcmpeqw
test
enter
push
fsubrs
movsb
ljmp
iret
test
push
push
xor
stos
and
add
push
mov
push
xor
jno
jbe
cmp
fimuls
sbb
add
rcl
pusha
aad
icebp
lods
movsb
ret
lret
stos
mov
ret
mov
insl
and
mov
pusha
jo
das
jbe
pusha
popa
mov
je
loopne
adc
and
cmpsl
adc
loopne
mov
test
and
mov
pop
inc
fidivrs
inc
into
and
push
xor
and
testb
dec
push
push
jp
lods
out
mov
add
les
icebp
lock
pop
dec
dec
xchg
mov
loope
in
repz
jp
movl
mov
pop
mov
and
sbb
in
out
push
dec
addb
xlat
jp
mov
jecxz
pop
mov
jnp
and
xor
mov
mov
push
in
dec
adc
repz
outsb
mov
sub
mov
jns
test
lcall
adc
addr16
int
call
popa
cmp
cli
sahf
cltd
subb
push
adc
mov
lods
or
adc
repnz
mov
imul
dec
mov
sub
lahf
das
lcall
pop
mov
cmp
adc
pop
add
dec
dec
sub
or
cwtl
push
fdivp
fcmovnu
jge
jmp
sub
ss
push
in
jns
inc
pop
sahf
mov
rcl
pop
mov
push
jno
push
mull
push
shrb
jae
imul
push
mov
sub
jo
ret
mov
mov
das
sbb
or
cmp
push
int3
jecxz
dec
dec
test
ret
addl
xor
popl
dec
scas
inc
adc
popf
rcrb
sbb
cmp
lods
sub
in
xchg
dec
insl
mov
pop
iret
rcl
push
insb
mov
ret
mov
shrl
ret
mov
arpl
lds
sbb
adc
and
cmp
inc
jae
gs
push
add
sub
gs
out
repz
ja
xchg
push
fmuls
sub
fisttpll
mov
dec
lret
stc
add
cmp
bound
mov
sbb
mov
ja
rcrl
add
dec
jp
out
mov
xchg
rep
jb
loop
les
enter
ficoms
fwait
sbbb
add
insl
xor
and
aad
dec
cmc
pop
iret
pop
and
pop
xor
pop
jg
adc
or
testl
push
lock
dec
push
enter
popa
rorb
sbb
cwtl
mov
cmp
xor
scas
mov
clc
sub
push
xor
push
aam
adc
rorl
jl
sahf
push
dec
xor
dec
in
sub
push
fs
sbbl
andb
loope
mov
pop
xor
mov
push
mov
or
cmp
mov
cltd
push
inc
scas
pop
mov
sarb
ds
insl
mov
sahf
sahf
cmp
push
mov
xchg
cmp
xor
dec
or
xchg
inc
xchg
movsb
sub
fmul
sbb
sti
adcb
inc
and
iret
pop
mov
pushf
jbe
mov
iret
adc
int
lods
sub
adc
ss
fcomps
sahf
push
repnz
sub
addr16
pop
ret
test
lahf
divl
cmp
lret
mov
fdivrl
scas
xchg
mov
loopne
dec
loop
xor
or
xchg
jae
sub
or
mov
insl
leave
insl
sub
xchg
leave
aad
xlat
in
aas
or
inc
push
ror
adc
fldcw
jecxz
adc
mov
fildll
cli
sbb
push
jns
lret
or
jge
scas
sub
lds
adc
pushf
fldenv
sub
clc
shll
pop
cmpsl
sub
mul
jno
xchg
out
xchg
or
sub
ds
out
scas
cmc
aad
jmp
outsl
outsb
add
xchg
sub
adc
loop
out
rclb
push
leave
mov
xor
fisubl
jmp
enter
fs
bound
ret
sub
xchg
repnz
imul
pop
les
or
les
das
sub
xchg
inc
cmp
fwait
lods
loopne
jle
sbb
cmpsb
jns
ljmp
mov
dec
or
mov
pop
iret
dec
stc
rcr
sahf
add
fcmovu
xchg
leave
sub
or
push
mov
pop
sub
mov
sub
pop
or
outsl
int3
add
lcall
xchg
sub
fs
loop
into
mov
mov
pushf
dec
sti
jmp
lea
push
cmp
xchg
cmc
rorl
in
pop
or
sub
ljmp
adc
push
mov
jne
pop
cmp
repz
ja
dec
std
nop
or
mov
in
repnz
cmc
xchg
loop
jae
inc
jne
mov
push
xor
repz
pop
popl
and
out
pop
leave
mov
inc
xchg
mov
loopne
aas
test
dec
out
int
imul
loop
cld
cs
and
repz
subb
inc
popa
aad
mov
xchg
mov
sub
cld
lock
loopne
lock
outsb
xor
cmpsl
insb
dec
stos
pop
hlt
sbb
xor
mov
mov
xchg
fmul
bnd
mov
jl
shrl
jmp
inc
ret
xchg
mov
les
or
lret
cmp
loop
dec
pop
sub
frstor
fsubrs
daa
sahf
into
jbe
aam
out
push
and
sahf
and
sbb
cld
mov
in
out
mov
jg
lret
outsb
je
lock
mov
and
push
rcl
add
call
push
hlt
stc
pop
cmpsl
mov
mov
lahf
or
rorl
dec
jecxz
stos
push
pop
add
mov
or
insl
outsb
push
das
jl
sahf
xchg
pop
jl
inc
fmuls
xor
adcl
ret
lahf
faddl
repz
in
sub
lret
out
clc
imul
jne
jmp
enter
lahf
lock
mov
jae
pop
mov
lret
push
mov
mov
xchg
stos
adcl
arpl
ret
push
insl
aad
into
out
and
dec
das
rclb
jmp
gs
and
repnz
jg
fidivrl
lahf
fnstenv
dec
lock
mov
out
cltd
cmpsb
or
or
mov
hlt
pop
mov
pop
ret
lret
lcall
jnp
int
daa
adc
aam
pop
cltd
sub
cmp
outsl
bound
jl
dec
aad
iret
imul
mov
xor
cmp
cmp
push
xchg
mov
and
push
jge
shl
sub
loope
cmpsl
sbb
push
aas
daa
jg
mov
cmc
int
mov
negl
dec
sti
test
data16
fldt
int3
and
das
cmpsl
push
in
addr16
xchg
xchg
sbb
add
call
es
push
jl
mov
or
xchg
push
or
testb
xchg
out
dec
adc
test
mov
out
ffreep
les
push
test
fistpll
divl
inc
sarl
outsb
adc
pop
lahf
loopne
dec
push
sbb
testb
lods
fiaddl
les
cmp
mov
out
dec
shrb
pop
out
je
jp
pushf
sub
mov
arpl
repz
scas
push
xchg
lods
lret
iret
xchg
sbb
je
cmc
jns
sbb
and
sbb
mov
mov
lea
push
inc
xchg
cmp
cmp
gs
das
sbb
push
mov
popa
jo
push
mov
cli
es
xchg
pusha
pop
sub
and
shrb
dec
xor
mov
cli
jp
mov
mov
cld
fdivp
add
dec
movsl
filds
and
enter
dec
jb
lahf
ret
ljmp
push
cld
push
push
lea
mov
cmpsb
or
scas
lea
mov
pop
icebp
add
fsts
dec
mov
lret
seto
arpl
aas
inc
xor
loope
push
pushf
iret
or
out
add
das
xor
mov
mov
pop
sub
add
inc
jecxz
outsb
xchg
push
in
add
push
enter
xchg
sub
lds
xor
inc
lahf
mov
cli
push
dec
xchg
dec
xor
aas
aad
ljmp
scas
xchg
cmpsl
das
xor
loop
movntq
out
sub
dec
outsl
rcr
ret
jo
hlt
xchg
and
int
sub
in
sbb
outsl
xchg
lds
mov
jne
inc
rcrl
pop
inc
xchg
lods
das
ret
jg
adcl
push
or
mov
jb
aaa
pop
mov
aaa
mov
test
mov
cwtl
xchg
mov
loopne
ljmp
pop
or
pop
jno
sub
push
ror
push
insb
lcall
addr16
xchg
adc
or
and
mov
sahf
inc
mov
sbb
hlt
imulb
outsb
mov
scas
pause
cwtl
xor
enter
jns
adc
jmp
xor
clc
inc
pop
jg
inc
pop
cmpl
jb
out
push
les
mov
or
insb
mov
int3
scas
inc
movsb
lret
add
call
dec
push
nop
inc
jmp
call
js
jmp
pop
and
cmp
inc
shlb
stos
stos
out
ja
rcrl
mov
fsubrl
push
and
out
shll
hlt
sub
inc
mov
inc
push
mov
dec
in
cwtl
mov
fsubs
inc
loop
hlt
pop
mov
dec
addb
ficomps
inc
inc
push
and
dec
add
fucomp
aam
push
shl
push
int3
pop
mov
push
xchg
xchg
pop
inc
or
adc
repz
jne
mov
add
dec
push
into
cmpsb
loope
sub
xchg
add
jp
pop
mov
ret
mov
add
push
dec
scas
and
inc
es
jnp
rcrl
add
in
lods
ja
repz
bound
hlt
xchg
push
enter
adc
mov
mov
mov
xchg
inc
mov
fnstenv
jecxz
lea
lcall
add
sub
testl
data16
pop
fcmovnbe
jae
fs
lahf
lds
ret
testb
stc
dec
jg
push
cwtl
add
dec
das
xor
pusha
xor
insl
pop
push
int
jb
push
out
jne
scas
push
movsb
cmc
lods
sub
mov
je
xchg
dec
sub
pop
rorl
movsb
cli
adcb
mov
inc
xchg
inc
mov
mov
or
sub
add
push
mov
jb
add
daa
jns
jge
push
addr16
out
jb
lret
adc
or
inc
dec
ret
addr16
jecxz
insb
push
in
inc
mov
lcall
jno
rorb
xchg
pop
lods
push
enter
aad
lret
shl
jl
mov
nop
into
outsb
fiaddl
loopne
fidivl
inc
pop
cmc
cmp
aaa
and
leave
in
mov
js
leave
xchg
mov
add
icebp
das
push
popa
jmp
lods
xchg
or
aad
hlt
pop
push
stos
jns
das
push
add
add
daa
hlt
jb
jmp
movsl
push
pop
or
add
lock
lea
out
adc
mov
adc
add
dec
mov
add
lea
icebp
push
testl
xlat
les
jg
add
ret
fnstcw
fmull
fisubrs
and
xchg
sti
testl
or
testb
push
adc
pop
and
in
insl
xchg
mov
rcrb
xlat
lahf
call
out
mov
inc
sbb
jg
lea
cmp
subb
shrl
stos
outsl
fs
mov
add
add
cmp
push
mov
in
lahf
dec
and
clc
movsl
loope
pop
ljmp
dec
scas
pop
fwait
mov
imul
pusha
fcmovnb
fsubrs
and
test
cltd
or
lret
pusha
jae
aas
test
loopne
movsb
xor
jne
xchg
cmpsb
lret
inc
adc
fcompl
jns
sbb
push
jns
inc
jbe
add
insl
xor
mov
inc
rorb
sbb
das
dec
ret
cld
faddp
cltd
stc
mov
imul
cmp
push
dec
sbbl
pop
xor
insb
mov
push
xchg
cmpsl
sub
inc
loope
or
outsb
cli
shlb
lret
stc
fwait
pop
enter
scas
rcrl
int
sarl
addr16
js
xor
push
gs
out
sbb
insb
leave
dec
stos
inc
sub
into
cli
lcall
loope
push
sbb
cwtl
add
aas
jl
lcall
inc
ret
pop
out
add
inc
xchg
sbb
push
pop
lds
pop
bound
js
xlat
in
inc
pop
and
push
int
cmp
jg
scas
push
cwtl
fdivrs
push
jae
int3
jo
pop
lods
push
push
push
shlb
push
xchg
and
cltd
push
and
mov
idivl
jns
inc
ret
into
call
jnp
out
ficompl
shll
imul
cld
inc
leave
cmc
repnz
and
pop
outsl
repz
pop
and
insl
push
mov
pop
jge
sbb
lret
test
xchg
shlb
or
mov
testb
mov
mov
mov
push
movb
cmp
jecxz
adc
add
mov
cmp
in
mov
pop
push
xlat
or
fs
ljmp
or
inc
pop
mov
imul
enter
mov
or
les
push
stos
sahf
lds
stos
outsl
movsb
jb
cmp
jl
mov
cmp
in
into
sbb
push
add
cmc
mov
push
ljmp
sbb
jnp
sbb
pop
das
adc
cmp
inc
imul
push
fldcw
dec
mov
aad
in
test
fisubs
push
aam
fwait
pop
inc
test
mov
ficomps
icebp
jmp
jo
scas
mov
sbb
loop
out
jbe
mov
push
fcmovne
jecxz
or
mov
shrl
jae
sub
in
jae
imul
mov
add
inc
into
call
adc
in
sbb
sarb
popa
mov
push
cs
bound
leave
mov
push
add
push
mov
fwait
sub
movsb
int
cmp
push
or
clc
adc
xchg
sbb
add
add
rcrb
or
sbb
mov
test
outsl
repnz
mov
lret
leave
sub
mov
jge
in
test
roll
fldenv
cs
ljmp
cmc
shl
sub
xor
mov
and
dec
xchg
or
push
lds
mov
out
add
orb
lock
aad
icebp
push
pop
push
faddp
call
and
ret
inc
sbb
xchg
cltd
jns
div
stos
cmp
dec
sti
imul
cmp
arpl
nop
push
loopne
leave
inc
mov
mov
insl
out
sbb
fdiv
cmp
mov
push
jne
sahf
cmc
cmpsl
repz
xchg
xchg
data16
mov
mov
popf
adc
sbb
shll
push
rcl
cmp
testl
cs
pop
loope
sbb
pop
fmull
xor
lcall
sub
sub
or
iret
test
jbe
jnp
sbb
dec
cltd
push
fwait
sbb
jb
sub
repnz
xor
lods
sub
fmuls
pop
or
push
adc
add
addr16
test
cs
arpl
dec
adc
aam
iret
das
pushf
or
cmpsl
nop
push
or
push
outsl
in
or
pop
or
iret
sub
jo
out
xorb
xchg
sbb
es
cmp
jne
mov
enter
pop
mov
fwait
dec
cs
xor
shl
ss
add
dec
dec
cmp
lret
pop
fsubs
fdivs
or
ret
jle
rcrb
adc
push
aaa
daa
std
pop
mov
shr
lods
icebp
mov
test
cld
dec
je
test
xchg
enter
outsl
cltd
mov
daa
cmp
ja
sbb
ss
inc
cmp
and
mov
imul
cmp
sbb
sub
in
cli
insl
loope
mov
stos
dec
sbb
pop
xchg
gs
clc
imul
fstps
mov
ja
stos
pop
ljmp
test
stos
adc
mov
imul
test
seto
loope
dec
adc
and
xor
std
movsb
inc
ss
cmp
mov
push
aaa
clc
xor
and
fisttpll
clc
pop
mov
in
sub
loopne
addl
xor
jno
jge
fildl
push
cmp
sbb
and
outsb
cwtl
mov
icebp
dec
push
aaa
xchg
cmp
pop
dec
mov
inc
aas
mov
jle
and
sbb
xor
shrl
imulb
lock
insl
jnp
cltd
fs
sub
arpl
mov
cmp
mov
mov
fidivl
cmpsb
add
cmp
cmpsl
scas
das
push
cmpl
sbb
aam
popf
sub
jb
les
inc
sub
push
sbb
push
pop
jmp
sub
aad
jns
add
repnz
stos
call
dec
repz
insb
iret
and
jmp
and
inc
mov
bound
inc
cmp
inc
mov
decl
scas
fisttpl
adc
adc
rcll
or
aad
cli
cmpl
scas
dec
adc
aam
leave
push
fwait
popf
fidivl
enter
repz
lock
xor
pop
dec
sbb
andl
dec
dec
cmp
cltd
sbb
sub
jne
xor
xchg
dec
cmp
mov
mov
into
adc
subl
movl
test
pop
addb
ljmp
and
pusha
mov
or
sub
lret
lret
icebp
sub
xlat
adc
out
fldcw
decl
push
xchg
or
out
push
xchg
and
je
xchg
dec
mov
xor
mov
adc
sub
mull
xchg
rcll
cmc
incl
jge
insl
mov
pushf
les
cmpsl
outsl
loope
aam
dec
add
jb
out
cmp
lahf
dec
jbe
adc
idivb
xchg
testl
popf
push
repnz
xorl
mov
xor
jp
lcall
jbe
mov
lret
lds
cwtl
jle
lods
insb
push
mov
vsqrtsd
lret
or
jne
jno
or
in
add
adc
mov
sar
lcall
and
add
sub
out
int3
repz
xchg
add
shlb
setp
aaa
and
ljmp
sub
mov
inc
adc
test
dec
inc
cmp
lock
mov
cmc
mov
jge
cmp
sub
stc
fisubs
inc
and
das
jmp
adc
or
add
addr16
adc
sub
xor
mov
mov
add
fwait
inc
out
push
adc
sbb
cld
in
inc
jge
jb
cmp
outsl
pop
and
daa
jns
pop
cmpsb
jno
push
push
ficoml
test
movsb
ret
mov
insb
repz
jb
xchg
inc
dec
mov
adc
popl
es
aam
insl
int
adc
test
mov
ja
mov
pushf
push
jl
push
out
stos
push
mov
in
dec
pusha
inc
faddl
leave
out
adc
or
inc
pusha
push
cmpsb
mov
or
adc
dec
movsb
js
add
jnp
popa
incl
lcall
mov
sbb
inc
in
mov
fadds
ror
xchg
mov
mov
subl
loop
push
mov
lcall
je
jae
sbb
inc
mov
xchg
sub
push
adc
jb
ret
push
cmp
xor
pop
enter
inc
ja
adc
fldenv
scas
add
stos
push
push
add
or
mov
sti
inc
insb
dec
jecxz
xchg
mov
enter
add
or
adc
mov
sbb
inc
lcall
cmc
mov
dec
out
and
in
aam
insb
adc
xorb
mov
ss
into
out
mov
push
gs
xchg
add
add
dec
test
cmpsl
test
insb
outsl
push
inc
jecxz
mov
cmp
adc
lds
incl
adc
out
xor
dec
mov
xchg
mov
jno
icebp
dec
fsincos
insl
arpl
ja
cmpb
aam
jo
jmp
push
or
mov
mov
fadds
cltd
pop
mov
cmp
fcmovnb
ss
xor
lret
adc
lea
dec
mov
dec
cmc
fs
jno
dec
jl
jmp
jg
lods
cld
in
adc
xchg
es
push
xor
movsl
jb,pt
mov
daa
lret
and
bnd
add
ret
mov
test
fdivp
orl
clc
pop
sbb
les
loopne
mov
emms
imul
fidivl
daa
outsl
inc
les
adc
pop
test
jns
adc
test
jecxz
fcmovnu
sbb
jecxz
aaa
ror
mov
adc
sub
sub
sub
lcall
xor
mov
sub
sub
sti
xchg
ljmp
mov
pop
cwtl
cmp
or
push
xor
jg
add
push
sbb
inc
dec
in
jno
ss
lods
mov
xor
inc
jnp
cmp
xchg
outsb
add
adc
mov
jae
lock
inc
ja
dec
xor
jnp
popa
jge
test
jnp
jnp
sbbb
fwait
into
inc
and
push
orb
in
int
pop
test
cmp
sbb
jecxz
push
aaa
inc
orl
out
sbb
mov
sbb
out
jl
sarb
jle
fidivs
out
cwtl
xchg
xchg
incb
adc
xchg
sti
xchg
imul
fstl
and
xlat
addr16
mov
pushf
xchg
mov
mov
add
test
sbb
push
mov
icebp
cmp
aas
cwtl
cmpsb
aaa
xlat
sub
shll
pop
xchg
add
jg
sti
xchg
pop
loope
mov
jo
es
or
mov
inc
xor
fidivrs
pop
hlt
jp
sub
dec
sti
jo
xchg
xchg
and
mov
pop
js
inc
data16
sub
pop
insb
dec
or
daa
push
test
cmpsl
iret
mov
inc
push
repnz
add
mov
addr16
sub
gs
fnstsw
sbb
les
sbb
mov
cmc
pop
addr16
and
clc
sub
xor
push
stos
ret
imul
cmpsb
inc
inc
fbld
shll
sbbb
aas
add
jno
sub
or
adc
mov
sahf
jae
xchg
mov
cmp
cmc
mulb
ljmp
xchg
pop
imul
jns
xchg
xchg
jl
jns
jl
loop
hlt
cltd
xchg
xor
das
addb
lds
dec
jge
popf
inc
mov
adc
das
or
sahf
xchg
ljmp
jnp
orb
mov
pop
enter
dec
add
cmp
xchg
popa
hlt
sbbl
les
imul
mov
lods
sbb
lret
jl
ljmp
sahf
mov
push
fnsave
cmp
test
jb
add
pop
out
bound
cmp
jmp
sarb
popf
sbb
inc
push
mov
adc
cmp
jl
repnz
dec
fisubrl
subb
js
jo
pop
jmp
addr16
inc
jbe
icebp
push
mov
into
pop
loop
xchg
imul
jmp
and
movsl
repnz
adc
sub
inc
fs
adc
stc
push
add
das
mov
orb
mov
rolb
aam
jle
ss
sub
adc
dec
bound
sbb
dec
cmp
mov
addl
sbb
xchg
cmp
cli
int
mov
in
lret
sub
leave
pop
xchg
into
or
insw
or
lcall
inc
push
jmp
or
inc
std
out
sub
xchg
std
insb
jg
sub
clc
scas
sub
andb
dec
fs
in
cmp
out
idiv
lahf
cmpsl
fistpl
xchg
test
fmull
xor
cwtl
jnp
ljmp
xor
dec
lock
idivb
jle
inc
gs
out
push
dec
inc
paddsb
or
fsts
xchg
lcall
stos
jmp
popf
mov
dec
iret
pop
popf
aas
jle
cs
ret
sbb
xlat
xchg
mov
frstor
mov
push
loope
rdmsr
and
pop
iretw
int3
pushf
lret
scas
sub
mulb
jmp
int3
sbb
sbb
imul
add
dec
pop
into
jb
sub
sbb
dec
test
adc
mov
call
fdivrs
sbb
mov
lret
into
cwtl
pop
imul
xchg
jp
pop
mov
sub
jge
push
test
pop
push
pop
out
je
add
cmpl
xchg
mov
push
je
mov
push
push
call
std
pushf
addr16
and
mov
push
sbb
and
jb
or
ret
mov
arpl
adc
popa
and
or
repz
and
repz
and
pop
idivl
rcr
stc
pop
pop
mov
cli
ljmp
mov
add
jp
repnz
loopne
stc
in
cmpsl
sbb
mov
cld
loop
sti
cmc
xor
pushf
shr
ret
mov
push
mov
sbb
lods
xchg
sbb
or
mov
test
lcall
scas
mov
ret
push
pop
cwtl
sbb
xchg
xchg
lds
rolb
cltd
jge
sbb
loop
fwait
and
hlt
shll
pop
add
jns
subl
sbb
xchg
cmovno
std
adc
push
loopne
or
lods
test
stc
lock
adc
jl
rclb
enter
dec
out
cs
xchg
cmp
inc
cltd
add
pushf
outsl
imul
lret
inc
pop
xchg
arpl
jmp
xor
ss
jae
sbb
mov
jg
loop
out
pop
repnz
adcl
sub
adc
repnz
xchg
movsb
int3
mov
dec
test
pop
imul
sar
add
sub
outsl
lods
pop
incl
push
sbb
inc
lret
jo
adc
mov
outsb
jmp
in
data16
sti
lock
add
sub
jbe
lock
xor
stos
sub
and
pop
mov
inc
xor
inc
push
xorl
dec
mov
imul
loopew
add
mov
mov
jnp
xchg
test
inc
mov
dec
push
imul
popa
adc
test
pusha
call
adc
mov
xchg
insb
lock
cltd
idivl
fisttpll
scas
or
add
adc
enter
iret
sub
aaa
lahf
adc
dec
mov
loop
in
push
cmp
outsb
ds
xchg
loopne
sbb
mov
lods
stos
js
imul
mov
mov
sbb
cmc
lea
sahf
and
mov
int
inc
push
repnz
mov
jle
mov
cmp
cli
pop
ret
dec
pop
xchg
fs
dec
pop
push
mov
daa
xor
loopne
push
jle
aad
pop
dec
or
popa
jg
sbb
or
mov
ret
push
xor
je
jne
jmp
push
mov
scas
xor
add
and
movsl
loop
mov
int
add
stos
lahf
fwait
out
bound
fcompl
mov
and
and
push
rcrl
jae
or
es
cmp
mov
xor
pop
hlt
test
popf
fidivs
xor
lea
loop
and
jmp
inc
stc
inc
mov
lea
cmp
mov
and
hlt
sarb
xchg
or
mov
fsubrl
frstor
fcmovnbe
sub
cld
or
push
pop
shll
inc
addb
lods
jne
out
xchg
ja
adc
xchg
rcrl
mov
dec
aam
test
test
out
cmpsl
pop
outsb
sahf
sub
aaa
sub
lock
sarb
mov
push
imul
fldcw
and
iret
loope
jne
cmpsb
push
loopne
mov
mov
test
add
fcomps
push
pop
sahf
pop
sub
movsb
lods
insb
cmp
shrb
mov
or
outsl
ds
andl
push
jno
xchg
lods
adc
mov
les
jbe
pop
sarl
and
inc
xchg
loop
jns
jbe
iret
pushf
jmp
pushf
fidivs
fwait
mov
popf
pusha
test
sti
xchg
pop
mov
std
lret
sub
movsb
pushf
or
shll
out
aaa
mov
jb
or
cmp
loope
adc
jns
mov
test
roll
add
inc
sub
imul
outsl
test
fdivrs
push
push
aad
dec
push
pop
cli
cmc
fmul
scas
das
notb
lahf
jmp
in
out
xchg
pop
pop
loopne
cmp
jecxz
push
or
stos
dec
sub
lea
in
mov
loope
inc
sbb
ljmp
jmp
leave
test
mov
ficomps
jg
jns
unpckhps
pop
lock
mov
nop
in
das
mov
cmp
jno
sarb
sub
aas
jne
cmp
lcall
mov
mov
out
jg
push
xchg
addr16
xor
inc
loopne
sub
xchg
stos
or
mov
sbb
js
xchg
call
add
outsl
dec
fnstcw
xchg
add
mov
ljmp
fs
hlt
add
xchg
xchg
xor
iret
pop
idivb
in
test
ds
int
push
xchg
stc
stos
push
in
lret
fs
jne
iret
aam
outsb
mov
jge
cmp
adc
cs
sub
data16
sbb
insb
decl
push
popa
mov
mov
mov
insl
xchg
and
icebp
in
and
push
mov
call
mov
cs
aam
fcmovb
xor
adc
add
das
xchg
xor
pop
jmp
cmp
and
push
add
push
inc
and
mov
insl
addl
xor
dec
or
dec
add
xchg
and
or
inc
sbb
xor
js
scas
repnz
push
xchg
or
mov
sti
shl
andl
push
and
pop
adc
sbb
data16
xchg
cs
cmp
sub
popf
push
cli
lcall
adc
pop
ljmp
xchg
in
jnp
adc
xor
rcrb
cld
jns,pt
daa
imull
jl
call
dec
int3
push
sti
jnp
lock
mov
and
adc
mov
test
lods
addr16
cld
outsb
mov
dec
pop
lods
cmp
xlat
xor
pop
inc
inc
fcmovne
fadd
sub
fs
sbb
xor
pushf
dec
or
jge
shld
mov
push
sbb
es
and
insl
and
testl
repz
lock
dec
fdiv
test
mov
jge
leave
repz
lods
mov
enter
sti
inc
pop
and
push
jecxz
xor
xor
iret
movsb
fwait
imul
out
sti
dec
dec
add
sar
rcrb
daa
xor
jle
xchg
mov
movsb
xor
fbld
stc
jbe
stc
fstpl
dec
cmp
or
sbb
adc
add
adc
data16
in
mov
xchg
pop
sub
sub
daa
push
pop
sub
pop
xor
lods
sbb
dec
lods
outsl
mov
test
outsb
rol
jecxz
fidivl
mov
jmp
jmp
or
loopne
mov
mov
in
jns
jnp
dec
jmp
inc
xchg
mov
sub
leave
pop
into
xchg
add
faddl
in
add
add
xchg
out
mov
jno
repz
stos
call
mov
addr16
std
pop
orl
pop
cmpb
push
aaa
loop
xchg
add
pop
test
sarb
push
cltd
arpl
imul
inc
int3
dec
mov
ret
cwtl
test
sub
aam
jp
jecxz
sbb
adc
stc
mov
add
shrb
rolb
lods
mov
cmpsl
mov
jle
dec
ja
mov
cmp
fidivl
add
in
xlat
sbb
inc
inc
cmp
imul
mov
in
aad
xchg
push
sub
fwait
in
loop
xchg
dec
insb
jne
adc
adc
cmp
adc
push
sub
call
dec
xchg
push
push
aad
pop
std
cltd
out
adc
out
pop
int
ret
sub
inc
aam
dec
sbb
mov
fldl
in
outsb
pop
data16
sub
sbb
push
test
pop
xor
xchg
std
push
js
lock
mov
ljmp
dec
mov
test
add
sbb
push
xor
fidivl
lock
rolb
dec
jmp
jnp
sub
loopne
stc
mov
sbb
fs
ja
fcoms
xor
addl
cmp
cmp
mov
push
jl
cli
or
cltd
adc
outsb
mov
imul
xlat
rclb
inc
jle
fstpt
shrl
pushf
cmp
mov
xchg
cmp
rorl
jmp
xor
adc
adc
adc
mov
cs
js
fcmove
fisubl
add
mov
in
jmp
pop
push
jno
or
sarl
push
pop
arpl
or
pop
mov
mov
dec
mov
mov
xorb
push
mov
leave
mov
mov
or
repnz
jno
rorb
fwait
lods
lret
pop
jae
arpl
or
sub
call
xorl
xchg
inc
ja
lock
js
mov
movsl
cmp
outsb
sahf
std
mov
lahf
cld
sbb
and
or
push
cmc
mov
xchg
rcl
into
cmp
loopne
ljmp
pop
xchg
add
inc
testb
cmp
jbe
push
out
push
push
adc
outsl
pop
sub
int
xor
ret
rorl
into
fildl
adc
or
aas
in
push
arpl
push
jbe
adc
cmc
out
data16
mov
xchg
and
insb
jne
sub
dec
xchg
cmp
pop
pop
sub
out
lock
mov
mov
jp
in
jnp
rorb
and
mov
mov
jb
movsl
inc
subb
insb
or
sbb
pop
testb
repnz
xchg
fs
lock
mov
add
dec
leave
imul
cli
xchg
ficoml
jno
aas
out
sub
stos
push
adc
push
movsl
inc
push
dec
lods
lret
push
sub
sarl
lds
and
sbb
mov
pop
xor
das
icebp
loopne
inc
add
andl
fsubl
cld
mov
jnp
in
adc
mov
pop
out
pop
sub
xchg
mov
push
inc
dec
fwait
xor
cmp
jae
test
pop
jle
popa
push
daa
negl
jmp
fldcw
std
adc
add
sub
jo
mov
fcmovb
mov
dec
sbb
sbb
daa
xchg
jno
fiaddl
es
pop
sbb
push
push
js
sbb
inc
push
add
jae
int
mov
jb
jo
sbb
sbb
int
push
in
inc
push
das
mov
gs
mov
mov
mov
or
or
cltd
cli
lds
std
mov
xchg
pop
add
in
insl
test
xchg
xchg
dec
fisttps
js
popf
or
scas
mov
or
fldenv
outsl
pushf
push
fmuls
adcb
and
xchg
or
shlb
add
out
sub
mov
cmpl
imul
aad
sub
aas
sub
pop
inc
push
or
push
clc
fidivrs
outsb
adc
movl
jnp
inc
xorl
push
adc
lock
or
mov
jae
xor
push
dec
pop
mov
repnz
add
xor
jno
or
xchg
sbb
pushf
jns
mov
popa
int3
filds
loop
ljmp
popf
mov
dec
gs
add
cmp
sub
and
xchg
or
lods
fdivrp
mov
xchg
loope
add
lret
mov
dec
enter
xchg
pop
and
pop
in
arpl
in
jg
pusha
mov
add
fwait
inc
lcall
push
push
xor
jns
movsb
jle
test
pop
ljmp
idiv
dec
jg
outsb
xor
lcall
sub
xor
insl
outsb
xchg
fstpl
ja
andl
mov
in
outsl
xor
or
enter
cmc
pop
cltd
sahf
in
arpl
jmp
pop
mov
stc
aas
mov
rclb
ja
push
outsl
mov
jle
mov
xlat
aam
out
cmpl
les
aad
push
jge
and
mov
jno
push
sbb
les
rorl
ficoml
roll
loop
lods
fs
inc
pop
push
outsb
cmp
test
lock
adc
mov
pop
movsl
fists
rolb
push
mov
aad
dec
and
rolb
dec
add
xchg
fisubl
push
stos
pop
xchg
in
out
int
fwait
inc
stos
fnsave
lret
mov
aad
insb
loopne
leave
pop
xor
cs
call
je
cmpsb
mov
sub
stos
inc
nop
loop
xchg
int3
jno
add
xchg
mov
fcomps
xor
sub
mov
add
test
int3
es
mov
in
mov
repz
lahf
pop
mov
jmp
sub
inc
jp
pop
adc
outsb
mov
mov
mov
hlt
pop
and
loopne
adc
and
inc
aad
repz
in
mov
ljmp
icebp
shll
shrl
out
sarl
ret
mov
xor
cmp
inc
lds
lods
sub
jo
bnd
jecxz
lea
mov
mov
int3
cs
mov
arpl
pop
test
jl
cli
xor
xchg
call
pop
iret
inc
in
fisubrl
test
pop
pop
push
or
dec
dec
adc
cwtl
scas
loopne
pusha
scas
pop
mov
cmp
fstpl
stc
imul
jbe
mov
js
push
cs
bound
and
aad
pushf
and
push
inc
pop
jne
or
cmpsb
mov
add
mov
lods
call
xor
or
mov
aas
pop
sub
lret
movsl
xor
outsl
dec
enter
arpl
mov
cmp
or
add
push
push
sbb
ret
jmp
push
jns
xor
jbe
pop
rol
add
nop
inc
rcll
push
ja
bound
aaa
loop
cmp
cmp
repz
popf
out
scas
out
xlat
push
out
les
fwait
sbb
sahf
in
or
loop
push
push
aam
add
add
sbb
mov
sub
fwait
add
bound
jns
mov
jnp
stc
adc
jp
dec
lahf
repz
js
bound
jg
and
rcl
imul
mov
xchg
arpl
es
fwait
pop
inc
fs
mov
dec
pop
repz
xchg
sbb
test
jmp
add
dec
xchg
cmc
xor
ss
jmp
aam
stc
mov
hlt
enter
stc
js
sub
xlat
out
mov
sub
sub
jno
iret
insl
push
lcall
mov
gs
mov
mov
xor
and
and
data16
pop
xchg
test
ret
ja
adc
xchg
fdiv
stos
jle
inc
mov
lret
popa
jp
pop
in
dec
out
movsl
testb
fldcw
les
js
out
stos
mov
xor
push
pop
cmpb
clc
add
inc
lea
daa
xor
es
clc
fimull
mov
pop
fistpll
push
xor
sarb
scas
and
mov
jnp
mov
lock
fnsave
adc
mov
xchg
das
pop
sub
pop
leave
fs
aad
loopne
jg
enter
lods
lods
in
push
in
in
and
movsb
jge
mov
adc
nop
jne
jecxz
test
mov
xor
mov
sbb
js
or
inc
mov
adcb
loopne
push
mov
sub
xor
pop
out
sarb
inc
xchg
xchg
out
rol
mov
pop
lods
test
popa
cmp
repz
scas
xor
mov
cltd
data16
pushf
and
in
sbb
or
es
testb
rcrb
pop
fstpl
dec
and
test
divl
hlt
or
scas
stos
push
sbbl
out
gs
ror
cmpsl
adc
dec
icebp
imul
sahf
das
sar
stos
xor
mov
sbb
int3
ret
jo
pop
xchg
bound
sbb
add
xchg
movsb
or
lret
push
idiv
pop
mov
adc
ja
jns
test
gs
cmp
mov
imul
push
clc
xor
xor
sbb
inc
imul
mov
fildl
je
jle
in
cmp
dec
xor
xor
xchg
pushf
cli
xchg
sub
lods
lret
inc
pop
dec
icebp
cmp
ret
sub
in
cld
jne
out
dec
fistpl
cmpsl
cltd
push
add
lds
push
aam
add
outsb
or
hlt
push
xor
xorb
push
cmc
loopne
iret
cld
mov
call
add
xchg
out
push
das
sub
xchg
push
jg
or
and
clc
cld
fmul
xor
add
sub
fwait
mov
xor
sbb
cltd
pop
sbb
inc
andb
lahf
add
or
dec
ror
int3
es
out
cmp
fmul
movsb
aam
mov
sbb
mov
jle
mov
fnstenv
nop
xchg
push
pop
icebp
leave
cmp
mov
pop
sbb
and
or
daa
lods
inc
xor
outsb
lret
in
jo
addl
pop
dec
idivl
int
test
pop
jbe
ret
subb
out
push
into
mov
or
jecxz
rolb
aas
dec
popa
ja
outsb
xor
and
push
movsb
mov
adc
mov
fldcw
mov
pop
or
pop
into
mov
test
pop
int
inc
sub
loopne
cmp
lds
or
lret
ficoms
push
and
xchg
es
push
insb
mov
icebp
mov
mov
neg
sub
cmp
hlt
mov
inc
mov
pushaw
xchg
jecxz
sarb
jno
cmp
les
xor
adc
sub
pusha
dec
mov
mov
cmpsb
jle
es
cmpsb
int
ds
and
xchg
mull
xchg
sbb
das
leave
lret
jmp
cmpsl
mul
inc
cs
sub
leave
aam
hlt
cmp
pop
ficoml
mov
in
ljmp
sub
sbb
inc
xchg
push
into
cmp
nop
popa
or
rol
fwait
lcall
outsl
adc
jno
leave
jmp
mov
sbb
xor
sbb
out
push
and
pop
push
mov
add
in
adc
in
push
ss
sar
test
sbbb
cld
push
adc
scas
js,pt
imul
aad
cmpl
sub
lods
adcl
int
ljmp
dec
shlb
xor
insb
push
mov
stos
push
jg
add
hlt
adc
inc
inc
jl
and
mov
dec
and
nop
adc
mov
aad
lock
cli
in
inc
mov
fisttpl
adc
dec
iret
add
lret
push
out
es
pop
imul
cli
lahf
mov
rcrb
enter
mov
cmp
jle
push
aaa
fdivr
mov
mov
inc
pop
jl
sbb
out
pop
lahf
aaa
in
xor
test
xchg
loopne
mov
mov
push
push
mov
repnz
or
lock
push
dec
xor
lret
sub
pop
std
rcll
xchg
and
outsb
and
pop
jecxz
pop
sbb
sbb
lret
push
out
cmc
xchg
dec
mov
scas
add
inc
popa
aam
jge
inc
and
add
cmp
cmp
outsb
cmpb
rcr
and
inc
sbb
in
repz
mov
xor
adc
daa
mov
outsl
lock
cs
pop
push
sbb
and
js
and
ret
test
mov
jle
or
push
pushf
popa
into
cmp
jae
dec
xor
je
mov
fwait
out
fs
xchg
dec
aam
scas
mov
rorl
lret
out
fildll
lock
adc
pop
add
mov
jne
in
xor
fs
ds
jmp
sbb
inc
mov
jmp
dec
stos
push
cld
add
xchg
ljmp
orb
push
or
mov
popf
jae
push
mov
outsb
repnz
jg
outsb
mov
cmp
in
cwtl
mov
xor
sub
cs
mov
fstpt
cltd
xor
and
push
adc
dec
inc
dec
pop
test
int3
mov
leave
test
add
pop
inc
or
pop
fisubrl
push
pop
or
mov
mov
push
inc
js
pop
xchg
rcrb
xor
add
mov
xchg
mov
or
fadds
lahf
xlat
daa
add
add
pop
std
out
dec
and
and
in
xor
daa
sbb
test
sbb
adc
rcll
jge
lods
or
hlt
and
rorb
test
pushf
cltd
shlb
push
aad
inc
mov
adc
or
sbb
gs
jle
inc
ucomiss
insb
dec
cld
sbb
insb
cli
test
aam
enter
movsl
jne
mov
loope
rcrl
inc
out
push
mov
test
xor
les
mov
cmc
leave
fildl
cli
in
imul
inc
pop
jo
and
xor
xlat
test
cs
mov
pop
push
or
mov
cwtl
cmp
inc
out
xlat
push
jbe
mov
mov
fdivr
mov
adc
push
in
ds
push
push
test
jnp
fld
rol
adc
fisubrs
push
pop
in
scas
cld
mov
inc
jns
mov
jbe
out
imul
mov
jecxz
and
in
nop
jns
pushf
lock
dec
fld
xchg
subl
lret
sbb
mov
mov
popf
jne
stc
ret
imul
mov
loope
jl
mov
ja
les
and
pop
lods
cltd
push
xchg
dec
or
call
fldpi
mov
pop
inc
aad
dec
sbb
xchg
in
lock
mov
loopne
arpl
mov
jmp
cmpl
add
iret
inc
xor
xlat
fcmovnb
jbe
fwait
and
outsb
sbb
fdivs
add
pop
sbb
xchg
xchg
add
in
dec
fcmovnbe
roll
fs
sahf
adcl
popa
sub
inc
xor
andl
xor
movsb
loope
sbb
movsb
mov
cmp
ret
cltd
and
lahf
and
js
test
push
into
js
shrl
cmp
pop
or
fildll
jle
idivb
push
das
cmc
lods
lcall
outsl
in
inc
fsubs
rcrl
rorl
rorl
movsl
gs
cs
xchg
mov
and
mov
inc
bound
sbb
idivb
inc
int
pop
add
cmp
fcomp
fwait
pop
sbb
loop
call
fsubrl
ljmp
dec
mov
rcl
std
push
mov
mov
push
cmc
cld
pop
cmpsl
sub
sub
adc
dec
fsubs
mov
mov
push
pop
insb
in
jbe
or
rcpps
fsubr
stos
cmp
test
repnz
insb
xlat
pop
hlt
cwtl
or
dec
mov
or
into
js
dec
xchg
in
pop
sbb
push
sub
xor
repz
cmp
enter
xorb
sbb
ret
fildll
sbb
andb
out
pop
in
das
and
mov
sbb
popf
loop
int3
jae
jg
addr16
outsb
int3
xor
jno
out
into
or
leave
rcrb
into
dec
jns
mov
add
lcall
mov
lods
sbb
sub
repz
and
push
mov
ror
mov
jno
sbb
dec
dec
mov
inc
cmp
dec
mov
imul
cmp
mov
loopne
adc
mov
adc
and
add
xor
push
sti
sub
clc
adc
cld
into
nop
dec
lret
insb
scas
into
imul
mov
jp
pop
dec
sub
sbb
pop
sbb
jl
mov
mov
push
add
adc
cli
mov
movsl
and
mov
xchg
jecxz
enter
pop
jae
test
lret
cmpsl
sub
dec
iret
jge
into
imull
leave
adc
push
push
rclb
jmp
push
add
push
cwtl
jge
or
xchg
pop
adcb
jae
lock
cmp
loopne
inc
pop
push
dec
popa
in
cwtl
stc
inc
loop
push
mov
cmp
mov
imul
and
xchg
test
test
push
push
sub
and
mov
cmp
out
jb
adc
xor
push
and
dec
cmpsb
sbb
xchg
rcrb
testb
lock
xchg
cmp
dec
stc
or
push
mov
pushf
cmpsl
mov
shrb
add
sarb
xchg
int3
sbb
jge
test
arpl
inc
pop
iret
mov
push
sbb
pop
loop
test
mov
jge
jl
adc
push
fnstenv
mov
add
or
je
dec
andb
add
or
mov
inc
adc
xchg
daa
jmp
xchg
je
movsl
mov
fcoml
jns
out
mov
inc
and
jg
jne
aam
cmp
adcl
push
cltd
push
das
and
and
out
lcall
fisttpll
dec
xchg
repz
lahf
sti
sub
jp
repz
cwtl
rcrl
pop
pop
lods
mov
xlat
mov
test
out
xchg
dec
movsb
pop
subb
add
addr16
outsl
or
fwait
sbb
aam
push
aas
mov
sbb
out
and
mov
sub
mov
xor
pop
pop
xlat
dec
testb
sub
dec
push
fisubrl
mov
cmp
jb
pusha
bound
ja
jnp
inc
xlat
mov
cmp
push
sti
add
rcrl
test
js
outsl
adc
repz
shl
loop
lcall
xor
test
mov
sarl
mov
rorb
aaa
and
and
push
fsts
test
xor
add
call
push
sahf
or
mov
add
popf
out
pop
push
add
mov
or
test
mov
iret
mov
push
cmp
out
push
pop
xchg
xchg
mov
xor
movsbl
and
inc
insb
aaa
push
jp
popa
jecxz
pop
nop
xlat
or
xchg
and
sub
xchg
stos
insb
inc
mov
cwtl
sub
iret
cmp
les
fsubp
cmpsl
loopne
or
icebp
inc
dec
adc
ret
inc
dec
jns
xor
inc
bnd
sarb
dec
scas
loope
dec
ret
imul
pop
pop
loop
jp
sarl
fisubrs
sahf
add
mov
or
mull
mov
sbb
xchg
sub
in
fadds
sahf
das
adc
sub
mov
test
inc
imul
mov
popa
xchg
shl
sarl
lea
or
xor
insb
in
xchg
clc
movsl
dec
dec
cmp
jge
xor
push
int
cmp
jecxz
jbe
jmp
inc
out
xchg
mov
adc
sbb
pop
or
std
pop
and
push
bound
imul
es
popf
scas
jns
and
push
movsl
sbb
mov
jns
and
or
aad
mov
call
and
mov
pop
cmc
inc
inc
jl
lods
push
jle
pop
jns
cmc
das
jne
hlt
pop
xor
push
mov
nop
ficoms
cld
js
mov
cld
xorl
dec
or
mov
cmp
rorl
out
jae
into
push
push
lock
clc
xor
sub
mov
pop
pop
mov
shll
pop
xchg
mov
lea
xor
lret
fsubr
mov
push
sub
andl
cmp
nop
fsubrl
mov
pop
aad
insb
lcall
adc
inc
cld
jno
lcall
cmpsb
imul
sub
pop
add
cmp
repz
adc
sub
push
push
sbb
and
push
xchg
dec
test
inc
xchg
outsb
mov
into
sar
push
mov
and
loopne
shll
mov
mov
out
and
jns
push
push
sub
sub
and
repnz
mov
adc
arpl
pop
jecxz
and
xlat
jmp
xchg
das
imul
pop
mov
popa
dec
int
jg
mov
or
repz
and
idivl
push
mov
scas
decb
pop
adc
mov
cmpsl
and
or
aaa
mov
mov
pop
mov
push
sub
xor
scas
and
hlt
iret
ds
xor
ror
or
test
test
cld
fisubrs
jmp
mov
xchg
movsb
inc
fnstenv
mov
insl
and
jo
or
test
xchg
pop
xor
lcall
adc
cli
std
pop
mov
pop
sub
push
shrl
mov
dec
cs
into
cmp
push
cld
mov
mov
xor
dec
sbb
push
xorb
outsb
fstpt
sbb
xchg
fcomp
fildl
in
rcr
in
mov
jo
fs
inc
adc
pop
add
fiaddl
push
jno
xorb
fcom
out
jbe
movl
je
mov
fdiv
cltd
mov
dec
dec
lods
mov
sbb
orb
push
mov
jns
test
cmp
pop
xchg
xor
sbb
stos
lcall
and
jl
shrb
cmp
movl
test
fldt
lret
stos
mov
enter
mov
jbe
adc
lahf
dec
lret
in
pop
dec
or
pop
jle
push
stos
testl
jns
mov
aaa
push
repz
cmp
mov
xor
mov
and
push
faddl
negb
cmpl
pop
sar
imul
push
dec
or
pop
sti
jne
cmp
inc
jmp
jg
xor
icebp
lahf
sub
scas
dec
push
mov
mov
adc
lods
lret
cmp
inc
dec
xchg
inc
mov
adc
push
jp
addr16
movsb
rcrb
mov
hlt
shlb
jb
in
jecxz
mov
frstor
mov
rcl
lret
bound
std
push
nop
pop
mov
or
push
es
out
sub
inc
mov
sub
xlat
test
xchg
sbb
xor
inc
std
add
pop
daa
imul
xor
cmp
fistpl
into
nop
cmovnp
mov
insl
mov
fidivl
xchg
outsl
rorl
xchg
repnz
sub
movsl
mov
sub
sub
gs
nop
jge
insl
add
pop
jae
sti
inc
in
or
jle
lea
lea
inc
push
cwtl
xchg
fldcw
adc
movsl
sub
fisubs
js
out
icebp
sub
add
jle
mov
aad
mov
jl
xlat
cmp
imul
sbb
neg
test
sbb
andb
dec
mov
push
gs
movsl
shl
stc
mov
fisttpl
adc
fildl
bound
xor
js
pop
xchg
sbb
pop
hlt
cld
inc
mov
or
aas
or
add
and
test
fadd
jle
jb
std
lea
xchg
mov
adc
lods
mov
out
imul
ret
cli
inc
leave
int3
sbb
and
test
cmp
cmovs
repz
pop
mov
mov
adc
sbb
xorb
in
movsl
outsl
ljmp
push
sbb
ficoml
jo
mov
loop
daa
sub
int
outsb
xchg
pop
cmp
inc
pop
pop
sub
mov
int3
push
xchg
adc
ljmp
subl
jle
outsl
popf
xor
loop
push
imul
mov
push
fsubrs
addr16
jne
testl
fwait
fwait
leave
cmovp
xchg
loop
cmp
sti
ss
cwtl
mov
es
sbb
stos
in
add
jae
test
jg
icebp
hlt
jno
aaa
pop
fisubrs
mov
fwait
push
pop
es
inc
sbb
hlt
out
insl
test
pop
xchg
add
push
loopne
jl
sbbl
repz
or
jnp
jo
jne
mov
rcr
stos
cmp
cmp
rcrl
cmpsb
dec
mov
xor
into
adc
stc
xchg
lds
push
loop
mov
mov
push
mov
addr16
ret
cld
push
inc
sbb
mov
push
mov
push
das
sbb
inc
mov
dec
int3
xor
and
mov
mov
in
or
mov
xchg
jle
addl
fxsave
movsl
pusha
push
xchg
mov
addr16
aad
jno
inc
and
es
add
xchg
push
mov
adc
mov
out
arpl
mov
mov
andl
loope
mov
mov
adc
xchg
cvtpi2ps
jmp
adc
cmp
xchg
jmp
addr16
add
pop
xchg
jl
imul
pop
pop
movsb
nop
test
fcompl
mov
jo
movsb
mov
sbb
push
in
mov
mov
sbb
fnstcw
mov
mov
cwtl
outsb
sub
mov
jge
jbe
scas
or
add
xor
rorl
pop
ffree
xchg
sbb
inc
sub
adc
imulb
fs
cmc
adc
pop
push
sbb
jg
add
inc
in
sti
push
lahf
inc
fwait
mov
add
jp
jae
fnstsw
mov
push
xor
inc
sub
ret
mov
mov
mov
stos
xlat
jbe
js
push
mov
jge
filds
sbb
mov
xor
dec
cmp
xchg
mov
xor
ss
inc
adc
xchg
mov
xchg
xor
push
and
xchg
jp
mov
inc
ret
push
inc
movsl
popa
jl
ds
jge
adcl
mov
and
rolb
xlat
lods
scas
out
stos
icebp
pop
mov
repnz
out
jle
mov
ljmp
sahf
icebp
cmc
loop
xchg
and
adc
lahf
adc
pop
movsl
jge
jle
cmp
and
cld
test
jl
daa
jecxz
fst
mov
pop
fisubs
xchg
adc
clc
sbb
test
mov
xor
hlt
adc
push
cmpsl
hlt
pusha
cmovge
mov
sub
insb
nop
push
in
aad
mov
push
call
jae
cmpsb
jbe
dec
push
packsswb
ss
dec
neg
jle
mov
mov
inc
sahf
xor
scas
mov
pusha
xchg
sbb
pop
pop
cmp
das
pop
xchg
mov
sbb
mov
mov
add
in
mov
mov
in
fadds
push
lret
adc
aaa
fcmovbe
in
mov
and
aas
stos
jmp
sbb
int
xor
inc
xchg
jmp
mov
cs
out
sub
and
xchg
gs
sub
bound
add
inc
ljmp
rorl
outsl
dec
test
insl
adc
fwait
cs
in
fistpll
jmp
pop
lret
ret
sbb
inc
add
aas
pop
dec
lahf
repnz
popa
add
mov
and
icebp
loopne
inc
pop
test
shlb
das
mov
sbb
inc
push
scas
ss
xchg
xchg
jge
sub
mov
jg
xor
add
jbe
pop
dec
int3
mov
jmp
lods
in
loopne
xchg
dec
fimull
dec
repz
stos
cld
cwtl
js
out
movsb
es
inc
cmp
adc
jmp
rorb
insl
jno
popa
arpl
xchg
mov
les
cmpsl
mov
fdivrs
lds
push
pop
or
lods
sub
js
mov
add
mov
cltd
sub
setae
negl
out
idivl
cmp
sub
jl
jno
dec
call
push
stos
xchg
sbb
push
aaa
icebp
hlt
pushf
sti
push
aas
shll
sbb
in
popf
outsb
and
fwait
sbb
xchg
xor
loope
push
and
gs
mov
adc
push
push
out
cmp
sbbb
fistps
push
inc
sahf
xor
jp
jl
add
movl
jle
out
bound
out
sbb
mov
inc
pop
adc
inc
lea
dec
add
outsl
sbb
subb
movsb
lock
sbb
lret
int
or
xchg
mov
jl
cmp
push
xor
ret
adc
test
outsb
and
sbb
repnz
or
push
fwait
faddl
cmc
ja
or
mov
out
aaa
cld
add
mov
dec
mov
roll
sti
adc
mov
jmp
push
sbb
push
inc
les
and
insb
lret
rcrl
cmpsl
cmp
adc
add
ret
push
and
aas
jg
mov
fwait
mov
in
in
roll
out
mov
mov
stos
into
pop
in
ss
push
dec
cmp
and
sbb
leave
xchg
mov
inc
push
jge
int3
pop
lret
mov
mov
jno
xlat
imul
mov
mov
inc
dec
dec
fxch
and
call
xchg
roll
cmp
pop
repz
mov
inc
ja
add
lcall
jle
in
jns
popa
sbb
xchg
es
call
add
into
les
xchg
loope
stos
mov
dec
ljmp
add
dec
xor
in
popf
insl
cmp
rclb
add
cmp
aad
imul
es
insl
or
test
inc
jl
in
and
adc
mov
in
test
jns
repz
fildll
js
fildll
shrb
fs
mov
mov
sbb
adc
mov
adc
call
daa
xchg
mov
call
sub
int3
adc
mov
push
or
enter
adc
call
in
or
cs
cmc
jo
mov
and
xlat
mov
xor
cmp
nop
cmp
or
sub
addl
cmpsl
aaa
repz
mov
cmp
sbb
mov
inc
xchg
aaa
lahf
lock
pusha
arpl
int
lds
mov
cli
adc
and
out
aaa
enter
popf
dec
movsl
mov
mov
ds
sbb
lret
mov
cmp
adc
mov
ljmp
push
shrl
mov
add
dec
mov
push
pop
pop
push
add
pop
mov
arpl
fists
mov
push
mov
or
fwait
adc
popf
sbb
rorl
lods
pop
addr16
es
sbb
fisubrs
mov
out
aad
mov
jnp
addl
and
in
jno
dec
insl
xchg
int
cmpsl
pavgb
lret
test
leave
mov
imul
push
sarl
sbb
incl
pop
sub
inc
mov
sub
dec
testl
push
inc
outsb
adc
pop
shrb
scas
xchg
cmp
pop
xor
push
leave
or
xchg
nop
pop
lahf
jae
lods
and
aaa
sub
push
pusha
mov
push
icebp
cltd
xor
inc
xchg
or
imul
pop
sbb
sub
jb
mov
pop
out
or
mov
push
push
stos
testb
xchg
sbb
mov
sahf
jle
int
cmp
inc
cmpsl
or
cmc
cmpsl
andl
sub
push
daa
rcrb
dec
dec
dec
dec
hlt
add
push
sub
jp
sub
mov
push
popl
xchg
mov
mov
cltd
pop
movsb
lods
push
sti
mov
scas
mov
pop
cmpsb
scas
jne
mov
dec
pop
das
xchg
dec
dec
sbb
xchg
loopne
cmc
testl
shlb
out
jb
loopne
jne
mov
push
outsb
rcl
push
push
mov
or
add
adc
xor
push
lds
adc
daa
cld
xor
xor
out
insl
aam
pop
adc
fldt
popf
push
shlb
stos
xlat
or
in
mov
flds
mov
out
sub
sarl
push
add
sbb
and
jne
in
jmp
sub
andb
xor
push
pop
sti
pop
movsl
int
dec
xchg
pusha
arpl
mov
or
push
mov
into
cmp
xchg
test
xchg
fwait
shld
fldcw
loope
stc
adc
loope,pn
mov
inc
pusha
xor
cltd
sub
xchg
gs
adc
jnp
mov
mov
nop
mov
shl
roll
mov
lods
shrl
sahf
lret
movsb
cmpsl
lods
cwtl
std
cmp
out
test
in
sbb
jnp
loop
test
mov
jnp
test
aaa
mov
jo
ss
stc
adc
push
jmp
ja
daa
jge
insl
les
mov
mov
in
pop
sub
js
fcmove
adc
mov
nopl
sub
and
out
inc
jmp
dec
jae
mov
dec
in
popa
jno
xor
arpl
jecxz
out
mov
adc
sub
jnp
mov
jbe
jecxz
jmp
mov
lahf
adc
lods
in
push
xorb
dec
es
inc
sti
mov
mov
mov
pop
mov
cltd
stos
out
shrb
mov
popf
xchg
out
xor
mov
seta
movsb
faddl
outsb
mov
xor
cmpsl
movsl
push
push
push
aam
pop
shll
cmc
adc
shll
dec
xchg
das
cmp
xchg
repz
imul
imul
inc
sub
in
outsl
dec
push
dec
test
push
dec
sub
imul
xchg
jp
imul
cmp
stc
out
loope
add
adc
fstpl
fldenv
rorb
movsl
lahf
adc
fisubl
sbb
lds
cmpl
inc
lahf
mov
sub
in
mov
sub
shrl
lods
fimull
ret
adc
adc
stc
shll
mov
xlat
pop
paddusw
jae
ljmp
inc
cmp
or
insl
andb
jle
and
adc
xchg
sub
jle
arpl
ret
sahf
adc
push
sar
cs
cmp
insb
hlt
dec
add
pop
jnp
orl
fisttpll
nop
adc
sub
cwtl
mov
mov
xchg
adc
loop
aam
mov
or
into
sbb
xor
xor
test
test
sbb
xor
mov
mov
ss
js
or
xchg
scas
cli
shl
shll
daa
adc
stos
sub
adc
gs
pop
sahf
cwtl
sti
frstor
pop
fdivrl
sbb
pop
mov
jl
ret
and
mov
mov
adc
test
inc
inc
or
and
or
xchg
gs
and
xor
scas
fsubrs
xchg
fstps
cmp
pop
jo
cli
sub
mov
sub
mov
sahf
sbb
and
mov
jno
gs
sub
sbb
and
dec
xchg
fwait
pop
or
out
fs
rcll
lds
jmp
repnz
icebp
movsb
jecxz
mov
int
in
mov
mov
hlt
cmpsb
xor
repnz
fidivl
in
mov
inc
and
inc
dec
fnstenv
cmpsb
incb
dec
scas
dec
aas
sbb
mov
cli
xor
ret
push
int
or
or
and
nop
cli
pop
cs
shlb
lea
push
mov
aaa
subl
js
test
lods
mov
lea
lods
mov
pop
push
rcrl
mov
adc
lcall
lea
imul
dec
xchg
or
push
dec
cmpsl
scas
mov
out
test
jmp
mov
push
dec
mov
or
repz
shl
inc
add
stos
cld
pop
lcall
jno
arpl
clc
xor
loop
pop
push
push
js
outsl
test
mov
dec
mov
mov
fwait
add
popa
ror
cmp
mov
pushf
fsubs
mov
and
sub
mov
bound
mulb
push
adc
shr
xchg
cmp
aas
movb
mov
push
xor
out
inc
inc
popa
lret
lcall
js
ljmp
jp
adc
fidivrs
nop
or
jnp
lahf
imul
outsl
mov
idivb
mov
mov
and
sub
mov
mov
xchg
jmp
mov
cmc
divb
andl
adc
push
sbb
jle
xor
fistpl
jo
adc
sbb
adc
test
mov
xchg
lds
and
adc
inc
adc
popf
or
cmp
sbb
or
sbb
mov
sub
je
popa
push
cld
add
popf
pop
ret
mov
jl
dec
jle
imul
fistps
pop
cld
rol
dec
mov
sbb
mov
xor
imul
push
adc
inc
mov
xor
pop
pop
mov
dec
mov
xor
push
pop
dec
xchg
leave
out
es
xor
push
mov
xchg
in
arpl
fsts
xchg
inc
int3
imul
imul
push
shrb
jg
imul
dec
dec
xchg
and
pop
cltd
push
rcrl
imul
outsb
loopne
lret
mov
push
cmpsb
dec
sub
xchg
sbb
fistl
add
sub
out
mov
dec
or
fadds
xchg
out
aas
adc
cmp
inc
std
mov
mov
add
pop
mov
mov
mov
cltd
aad
xor
ror
ss
mov
pop
mov
negb
or
jnp
or
lock
mov
das
iret
mov
clc
mov
xor
jg
pusha
insb
push
push
loop
sub
fisubrl
fbstp
sub
and
es
testl
dec
lock
call
jnp
mov
das
dec
mov
inc
jbe
mov
je
aaa
inc
jle
pop
and
jecxz
xor
dec
fsubl
icebp
mov
loopne
fwait
xchg
dec
add
sub
inc
ret
push
mulb
fsub
dec
add
dec
aam
xchg
les
jb
push
scas
xchg
ljmp
ss
lcall
mov
pop
and
sarb
frstor
inc
addl
xchg
les
sub
push
pop
inc
add
or
sbb
pop
adc
loopne
dec
pop
hlt
pop
pusha
mov
xchg
push
adcl
add
inc
popa
lret
mov
sbb
jb
fldt
pop
push
mov
ds
xor
jno
jl
and
das
jecxz
fxch
fadds
sti
sti
cld
jbe
dec
mov
jns
out
in
mov
pop
jl
sub
pop
dec
add
lods
sahf
ss
cmpsl
sbb
mov
sbb
mov
movsb
shll
outsl
xchg
stos
bound
into
push
push
lods
movmskps
int3
in
clc
pop
icebp
xor
inc
fsts
pop
imul
enter
sbb
inc
mov
mov
dec
out
lahf
es
pusha
add
aaa
cli
adcb
push
cmp
bswap
push
leave
sbb
iret
or
hlt
add
cwtl
push
sbb
in
xchg
mov
mov
ss
aad
and
lods
mov
dec
fcmovb
mov
and
inc
gs
push
enter
movsb
mov
cmpsl
inc
and
pop
cli
int3
mov
fs
xor
mov
into
dec
or
mov
in
rcll
into
xchg
sbb
loope
sahf
inc
fs
test
and
mov
xor
fcmove
xor
mov
or
inc
sti
and
add
sbbl
add
or
dec
mov
push
aaa
mov
mov
sub
fucomip
inc
xchg
inc
fcomi
push
cwtl
outsl
xor
jg
xor
andl
sbb
and
dec
mov
xchg
shrl
cmp
mov
cld
dec
popf
aaa
xchg
pop
test
and
ret
arpl
imul
push
fmulp
sub
les
jp
mov
out
test
mov
sub
jmp
pop
jmp
fldcw
inc
daa
push
inc
iret
outsb
dec
mov
mulb
test
or
addr16
inc
or
mov
and
aas
fsubs
clc
andb
jg
in
or
js
int3
pop
test
mov
popa
pop
mov
and
daa
cmc
dec
outsb
xchg
mov
push
sbb
push
out
cmpsb
test
dec
add
dec
mov
jnp
daa
imul
ljmp
and
nop
xor
pop
pop
cli
scas
ja
cmp
xor
in
mov
fsubr
xchg
repnz
int3
pop
dec
add
in
cmp
jp
and
outsb
ljmp
out
fwait
push
lods
adc
in
jbe,pn
sarl
jno
xchg
sahf
sub
sub
sub
scas
adc
or
xchg
js
adc
hlt
daa
scas
pop
loopne
mov
mov
lret
add
inc
insb
pushl
sub
enter
xor
or
jbe
pop
daa
mov
loopne
ja
add
rcl
mov
mov
cli
sub
or
inc
pop
xchg
hlt
roll
xchg
out
jae
cmpsb
std
ret
sahf
mov
aas
and
scas
pop
adcl
mov
mov
loope
out
xor
jne
aaa
mov
mov
sbb
dec
out
fnstenv
xor
ret
imul
clc
sarb
and
inc
call
adc
mov
call
imul
je
adc
test
xor
into
outsl
dec
pop
out
loop
add
sti
nop
mov
movsl
push
outsb
cmpsl
rorl
jb
rol
pushf
mov
cmpsl
fwait
pop
fsubl
lcall
cmpsl
test
adc
sub
jmp
sub
in
test
rorb
test
pop
aad
add
mov
xor
movsl
sbb
pop
xchg
out
scas
pushf
adc
es
mov
and
or
aaa
xchg
icebp
sub
mov
daa
call
sarl
lods
dec
pop
xchg
clc
sbbl
leave
js
aaa
push
cmp
enter
pop
mov
xor
adc
lods
lock
insl
sub
push
xlat
pusha
adc
mov
and
xor
push
pushf
out
jnp
add
pop
inc
jecxz
fdivrs
test
cmp
jecxz
sbb
fistps
test
lock
mov
and
mov
bound
jecxz
pusha
adc
sbb
popa
sahf
add
inc
mov
bound
repnz
push
push
fs
push
movsb
cli
loopne
std
incb
dec
repz
push
jns
jns
sub
js
mov
iret
cmp
aas
cmpsl
adc
pop
outsb
or
cli
mov
shll
data16
adc
inc
jae
mov
test
xor
mov
cltd
add
call
xchg
fmull
aaa
insb
arpl
int3
in
data16
pushf
dec
and
inc
or
std
test
pop
arpl
add
gs
scas
mov
dec
xor
push
mov
insb
sti
push
fldenv
les
in
in
push
push
adc
or
fs
dec
inc
ror
loop
xchg
int
fnstcw
in
xchg
mov
xchg
lcall
stos
xor
pop
out
or
out
mov
movsb
mov
pusha
cmp
int
call
mov
cltd
inc
aad
sti
enter
sti
mov
push
in
rol
lods
fs
inc
pop
mov
les
loope
ret
cmp
sahf
hlt
dec
popa
push
in
lock
sti
or
cs
fildll
roll
and
adc
jg
dec
lds
xchg
out
or
icebp
cmp
mov
sbb
add
pusha
shll
and
pop
mov
movsl
enter
and
nop
sub
push
out
mov
xlat
xlat
out
dec
sub
ljmp
adc
add
rcl
mov
sbb
mov
sbb
aas
aam
sbb
pop
jmp
pop
xchg
xchg
inc
pop
jecxz
and
mov
cli
adc
shrl
cmp
push
mov
xchg
adc
jp
cltd
mov
push
mov
lea
xor
adc
mov
or
adc
iret
andl
push
push
pushf
jo
shlb
movb
mov
leave
cltd
xor
push
pcmpgtw
sbb
shrl
push
dec
cmc
lcall
adc
dec
jns
jmp
in
push
fcomps
mov
clc
shlb
inc
inc
dec
mov
test
adc
pop
insb
cli
mov
ja
push
in
leave
or
insb
jnp
inc
in
sbb
aas
insb
out
popf
subb
sub
outsl
pop
and
or
pop
xchg
fildll
into
icebp
rclb
in
inc
clc
mov
aas
aad
pop
xor
rcll
push
mov
inc
xor
fisubrs
iret
insb
aaa
and
push
push
fsubl
adc
lretw
std
jo
pushf
ficoml
pop
mov
xchg
jnp
sbb
sti
aaa
cmpsl
lock
out
stos
aad
outsb
mov
sbbl
pop
xchg
jg
mov
jge
flds
ret
ljmp
pop
mov
test
lods
xchg
test
xor
mov
je
addr16
mov
xor
and
dec
negb
pushf
imul
push
lahf
pop
add
add
cmp
and
mov
pop
daa
dec
xchg
imul
mov
loop
mov
sahf
push
xlat
mov
ja
adc
call
out
js
add
jo
aaa
push
mov
jge
adcl
dec
icebp
jge
adc
jo
dec
sub
pop
jae
adc
ud2
mov
stos
test
repnz
js
pop
xchg
pop
roll
popf
mov
or
adc
cmp
imul
lea
sbb
popa
push
mov
insb
xchg
shrb
mov
popa
cmp
adc
das
loop
iret
and
inc
mov
adc
mov
adc
test
imul
xchg
pop
jle
or
cld
aas
sub
lret
pop
pop
cmp
adc
sbb
add
sti
inc
or
shll
lahf
lret
nop
sub
push
icebp
iret
shrb
movl
or
dec
xchg
cmp
cli
sub
xor
mov
and
mov
mov
call
les
dec
ds
xorl
mov
fistl
fadds
jo
and
nop
sub
insl
dec
dec
movsb
and
gs
push
inc
ss
lret
jmp
nop
loop
hlt
push
ret
sub
addb
mov
mov
xchg
imul
cmp
jno
ljmp
push
mov
xchg
mov
sub
out
into
movsl
xchg
mov
cmpsb
and
adc
aam
mov
sub
sub
inc
lods
mov
fldenv
cmc
movb
fs
ds
xchg
dec
dec
push
mov
adc
jge
jecxz
ret
mov
popa
pop
in
pop
cmp
sbb
cmp
ret
sbb
add
inc
mov
mov
mov
xchg
in
cmpsl
jnp
mov
ss
pop
sarl
and
pop
cltd
adc
sbbl
icebp
das
sub
sbb
fdiv
jg
popf
jae
fidivs
cmpsb
fucomp
fucom
fcomp
push
sub
push
inc
ds
jge
repnz
cli
pop
xchg
lret
in
xor
imul
shlb
ja
or
jae
pop
lahf
push
sbb
sub
hlt
incb
pop
mov
sub
pop
or
pop
je
jae
pop
xchg
scas
push
ds
clc
addl
and
enter
ljmp
xlat
ret
sbb
add
pushf
sub
push
adc
xor
and
lahf
mov
cmpsb
loop
scas
sub
imul
jae
jo
movsb
pop
mov
cmp
dec
bound
or
popa
out
and
cmp
sub
xchg
push
sarl
xchg
fst
xchg
pop
aam
jno
sbb
in
sbb
adc
mov
mov
mov
xchg
popf
adc
les
pop
cmp
mov
jnp
jns
mov
scas
not
ret
pop
sti
lcall
jb
xor
push
imul
cmp
mov
jbe
les
sahf
jbe
mov
aas
dec
out
xchg
fldenv
pop
add
clc
cmp
lret
dec
xchg
xor
mov
mov
js
dec
mov
pop
adc
mov
into
dec
flds
jnp
xor
in
pop
insb
pop
mov
icebp
inc
dec
mov
leave
jae
sub
or
adc
pushf
es
push
mov
pop
popa
xchg
push
pop
movsb
outsl
xor
aas
outsb
or
fsubrl
mov
push
jbe
lcall
fdivrl
push
mov
imul
stos
pop
jb
xor
push
ret
popf
push
mov
add
decb
ljmp
ret
idiv
outsl
push
cmpb
dec
mov
push
cmc
cwtl
mov
jne
hlt
inc
andb
add
xchg
jmp
or
pushf
sbbb
imul
sub
push
adc
adc
xor
xchg
inc
loopne
sub
shrb
sarb
dec
loop
test
jb
arpl
addb
insl
ja
mov
insb
xor
jle
sbb
out
in
outsb
dec
ficoms
pop
imul
fistl
mov
jno
xor
mov
repz
jns
int
adc
lsl
sbb
sub
cmp
inc
cli
sbb
stos
mov
in
sub
das
mov
stos
aam
shlb
rorl
lret
xlat
in
and
dec
cmp
sub
push
cmp
repnz
pop
pop
mov
xor
push
dec
lock
inc
xor
div
pop
jns
pop
das
pop
push
sahf
test
inc
in
xchg
mov
lahf
scas
jno
xchg
adc
hlt
add
mov
imul
xchg
leave
pusha
jns
maxps
mov
or
jns
cmp
out
dec
dec
movsl
test
or
mov
mov
xlat
and
mov
in
es
in
stc
sbb
jg
mov
repz
in
push
add
testl
lret
or
mov
sub
cmp
inc
rclb
add
xchg
xor
sahf
in
or
clc
mov
rclb
mov
adc
mov
int3
js
jb
adc
int
icebp
lea
jbe
in
call
lahf
sub
aad
mov
dec
in
mov
inc
or
outsb
jne
scas
ss
cld
sti
sbbb
daa
cmp
or
int3
cmp
bnd
xor
xchg
mull
cltd
xlat
xor
rorl
push
je
shlb
fdivrs
mov
inc
or
xchg
push
push
push
mov
xchg
or
fidivs
cmpsb
xlat
adc
aad
dec
adc
bound
inc
push
jl
and
xor
or
lret
push
sbb
fsubs
adc
fnop
cli
mov
mov
aam
xchg
sbb
repz
addr16
xlat
dec
mov
sbb
mov
cmp
daa
mov
sqrtps
data16
xor
adc
sbb
loop
push
sbb
mov
aam
scas
sub
sbb
insl
and
sbb
inc
lea
push
cltd
ljmp
add
dec
inc
repnz
push
sbb
mov
push
subb
xorb
push
movsb
or
xchg
lea
inc
cmpsl
pop
cs
mov
and
pop
imul
push
fucom
add
push
sub
js
jae
imul
sub
xor
sbb
push
xor
xor
jp
xor
imul
mov
insb
ds
mov
aaa
xchg
loopne
push
cs
or
adc
xor
mov
sub
mov
pop
inc
mov
xor
xchg
addr16
in
add
imul
test
jne
mov
fidivrs
dec
xchg
js
dec
xchg
les
cmp
mov
mov
push
dec
bnd
sub
push
rorb
iret
xor
or
imul
iret
or
mov
daa
and
lods
mov
fidivrs
dec
andb
in
lds
lret
insl
popf
cld
or
cmpb
fcmovbe
hlt
add
cmc
xor
lods
sbb
push
js
push
adc
inc
dec
mull
cmp
and
and
jb
imul
fcomip
jmp
rcll
jle
pop
movsb
pop
mov
bound
outsl
leave
pop
roll
bound
push
mov
xchg
inc
xor
jle
xchg
lahf
add
xlat
push
lds
fisttps
inc
sub
pop
mov
rclb
es
subb
xor
adc
fwait
stc
int3
mov
test
dec
lcall
mov
pop
nop
insl
push
loope
adc
or
cmpsl
push
mov
and
jne
fdivs
mov
mov
daa
fwait
jecxz
fildl
jp
push
or
popa
pop
outsb
sahf
sub
das
jae
jp
xlat
mov
es
mov
jo
and
jl
adc
popf
addr16
cwtl
repz
push
push
pop
mov
sbb
rcrb
pop
dec
mov
popa
and
outsb
or
ss
out
adc
test
adc
jne
cmp
dec
mov
inc
mov
pop
cmpsl
out
or
cld
pushl
fmull
jecxz
pop
add
ljmp
repnz
cmp
pop
int
rolb
add
mov
jl
aad
mov
jnp
ja
mov
mov
jge
dec
jmp
les
lahf
sbb
mov
fwait
pop
pusha
mov
adc
test
mov
movsb
sbb
jo
call
jge
jb
into
loopne
push
sbb
mov
sbb
cld
xor
test
xchg
arpl
add
cwtl
push
push
jo
sbb
jle
dec
fisttpll
sbb
ds
in
push
iret
orl
xchg
stos
aad
and
mov
cli
cmp
fwait
ret
lods
inc
gs
xchg
mov
orl
xchg
imul
inc
popf
fprem1
jae
mov
add
jmp
arpl
dec
inc
leave
jge
pop
jmp
sub
repz
out
fisttps
scas
sbb
enter
cmp
fisubrl
fnsave
jb
pop
mov
cmpl
fsts
pop
aad
mov
fildl
movsl
cmp
sbb
lret
or
lods
mov
mov
push
or
in
imul
jge
sbb
xchg
mov
push
inc
xchg
lods
lret
add
xlat
shr
lret
data16
xor
jae
ds
icebp
mov
inc
or
push
ret
js
out
es
ret
fwait
cmp
add
insb
movsl
lret
cs
push
xchg
lds
push
xchg
mov
insl
push
cmp
fisubrs
xchg
jl
popa
adc
nop
xlat
mov
sbb
imul
mov
adc
rol
adc
daa
cmp
sub
fisubrs
jne
sbb
aam
jns
cmp
jbe
addb
xor
pop
ffree
sahf
loopne
inc
and
ret
sub
stos
sbb
insb
dec
sti
insb
push
xor
mov
xor
out
fnstsw
xchg
adc
inc
out
sbb
andl
mov
insb
xlat
dec
jl
mov
sub
pop
test
mov
and
push
out
loopne
in
dec
mov
icebp
adc
inc
rorb
arpl
lock
adc
lret
in
out
jno
testl
mov
insl
or
xor
ret
arpl
aas
fildll
pop
cld
shlb
shll
cltd
xchg
std
ja
pop
pop
xlat
shrb
test
sub
cwtl
mov
pushf
call
stc
push
xor
outsb
pop
push
mov
jmp
mov
int
xor
fcompl
repz
daa
cmpsl
jmp
push
test
xor
lods
add
andb
xor
enter
xchg
out
inc
mov
sub
mov
decl
push
pop
xchg
sub
std
jbe
notb
into
xlat
repnz
jb
sbb
xor
mov
fsub
sub
inc
popf
subb
fidivl
mov
leave
or
lods
addr16
outsb
push
push
mov
sbb
adc
mov
cmp
cmp
cmpsb
es
inc
cmp
rorl
imul
or
cwtl
test
fwait
or
popa
lret
mov
test
je
dec
std
or
pop
sub
cmpb
rolb
sub
and
test
and
popa
adc
and
sbb
sub
add
xchg
fdecstp
inc
out
cmp
mov
popf
movsb
jb
jg
mov
mov
es
sub
or
es
lods
roll
out
adc
mov
fwait
sub
push
daa
add
sbb
xchg
call
ljmp
jg
dec
mov
push
loopne
pop
cmp
stc
pop
scas
push
cwtl
push
mov
push
pop
lahf
leave
lret
mov
fldenv
xlat
mov
test
arpl
cmpsl
in
mov
add
mov
fdivl
dec
rorb
call
xchg
dec
xchg
loop
aad
cmp
andb
push
sub
add
pop
add
jle
hlt
mov
ret
inc
or
and
jns
xor
js
loope
or
push
xchg
xor
and
enter
cltd
xchg
xchg
or
dec
add
faddl
shll
test
sub
cli
cmpb
jo
inc
dec
mov
gs
cmpb
aaa
inc
xor
cld
or
dec
xchg
sub
test
incl
test
fistpl
aad
outsl
and
push
add
loop
or
clc
rorl
or
pop
xchg
movsb
ret
lock
cmp
lods
add
aas
adc
mov
hlt
pushf
sbb
in
push
loope
lods
xchg
pop
pusha
ja
iret
fcompl
mov
inc
dec
mov
mov
hlt
stc
adc
std
in
rcr
and
lcall
sarl
jge
pop
outsl
stos
xchg
sbb
lods
lods
dec
out
cltd
shl
adc
jno
dec
sbbb
pop
add
arpl
push
add
lea
mov
cmc
sbb
pop
mov
in
rorb
xchg
sti
test
lock
fsubrs
adc
repz
sahf
popf
inc
testl
sbb
mov
pop
faddl
clc
inc
sarb
dec
vsqrtps
mov
pop
mov
stc
cmc
jbe
and
out
subb
test
sub
jo
cmp
sub
cmp
or
mov
jo
xchg
pushf
xchg
out
repz
adc
dec
ja
aas
or
adc
repnz
addb
jl
sub
fdivp
andb
add
pop
xor
push
int
ja
inc
mov
cmpsl
adc
xchg
in
arpl
push
shr
sti
lret
inc
std
dec
inc
lahf
clc
xor
int
mov
mov
jnp
inc
xlat
aaa
push
or
mov
xchg
mov
mov
mov
xchg
add
and
popf
cwtl
testl
adc
iret
adc
adc
pushf
sbb
repnz
sbb
pop
scas
ljmp
mov
xor
pop
int
pop
dec
out
and
xchg
mov
push
sbb
adc
sbb
pop
sub
aas
lcall
subb
add
sbb
lret
dec
outsl
sahf
dec
mov
xor
in
cmpsb
dec
push
push
pop
das
jno
xor
adc
mov
pop
int
insb
mov
scas
dec
dec
dec
mov
sub
jg
inc
sbb
pop
sub
sbb
in
and
jae
and
jne
jae
int3
imul
push
insb
ja
push
loop
jno
aas
outsl
pop
test
jmp
xchg
outsl
js
into
scas
cmpb
data16
lahf
mov
imul
popa
in
fnstsw
and
repz
das
imul
xchg
mov
add
inc
outsb
mov
lods
fadds
fsub
in
aaa
cmpl
sbb
ficoml
mov
popa
dec
or
outsb
add
jb
dec
pop
push
jmp
popf
into
sub
std
mov
jae
pusha
jno
mov
mov
jge
mov
inc
rorl
int
incb
in
arpl
jg
mov
and
fdivs
mov
sub
dec
icebp
stos
ja
adc
ljmp
outsl
pop
xor
push
rclb
inc
mov
cmp
scas
and
mov
xor
lcall
sbb
je
ret
cmpsb
mov
pop
popa
push
push
incb
pop
mov
push
aad
pop
sub
cmp
xorb
dec
mov
xor
adc
dec
inc
sub
and
cld
push
dec
int3
ljmp
rorl
adc
sbbb
adc
inc
in
xchg
cs
mov
je
lea
sbb
push
cli
dec
push
insl
stc
mov
sti
jmp
mov
and
enter
cli
call
lods
add
cmp
movsb
rclb
cmp
sub
pop
push
sub
sbb
insl
jmp
lods
and
dec
xchg
pop
in
js
rcr
addr16
mov
xchg
push
lret
cmp
dec
mov
cmp
pop
pop
lds
mov
or
arpl
aas
pop
push
sbb
mov
das
xchg
sbb
mov
loope
fnstenv
sbb
push
mov
jge
cmpsb
lods
adc
xchg
lods
movsl
mov
mov
iret
test
nop
enter
xor
sbb
addl
add
loop
push
jae
sub
xor
pop
je
add
pop
popf
cmp
clc
fimull
jnp
sub
add
in
fldcw
lret
sahf
pop
iret
sbb
les
xchg
dec
sub
or
adc
or
movsb
loop
aas
sarb
pop
inc
mov
and
bound
int
repnz
pop
xlat
jbe
sti
mov
aam
cmpsb
movsb
sub
mov
lds
inc
mov
cltd
imul
and
lods
xor
pusha
mov
jno
and
cwtl
jo
xchg
imul
sub
pop
fistl
cmpsl
jmp
sub
imul
ret
stos
xor
leave
mov
fildl
sub
add
jbe
inc
jbe
xchg
in
push
cmpsl
mov
fisttps
and
adc
push
mov
in
pop
das
iret
jle
clc
mov
loop
icebp
pop
pop
aas
shll
jne
pop
jmp
adcl
ror
test
out
sbbl
std
addr16
mov
xor
jnp
rorl
xchg
push
fcomip
lret
dec
imulb
stos
loop
ja
sbb
sub
push
adc
mov
inc
into
jo,pn
inc
cmp
sbb
jmp
leave
addb
test
push
sub
or
lock
insl
mov
or
push
push
jne
mov
ss
lcall
mov
clc
xchg
stos
xchg
sti
inc
xchg
add
cmpsb
std
mov
shr
cmp
mov
and
add
mov
adc
xchg
adc
mov
out
mov
sarb
in
je
int
test
sub
sbb
dec
mov
scas
push
and
outsb
mov
cs
notl
sbb
sub
loop
and
and
popa
scas
sbb
arpl
xor
imul
into
out
leave
in
xor
scas
loope
incl
mov
push
outsl
ds
sarb
loope
mov
cmp
push
mov
jo
lcall
call
inc
lods
adc
add
mov
repz
inc
scas
mov
fdivrl
add
pop
mov
mov
push
xor
loop
sub
aad
shrl
pushw
add
clc
shl
xor
sbb
clc
fs
pop
dec
cli
psubsw
mov
enter
cmp
xor
add
je
cs
or
xlat
enter
mov
in
cmc
aas
insl
pusha
in
dec
call
xchg
out
call
and
addr16
xchg
push
cld
jl
imul
subl
sbb
lods
dec
iret
sbb
faddl
push
stc
movsl
sahf
xchg
addr16
rcll
loop
xchg
inc
aas
and
shrb
dec
xchg
or
mov
xchg
add
pushf
mov
andl
mov
pop
push
push
mov
inc
out
mov
call
pushf
repz
icebp
pop
adc
leave
push
andl
mov
test
shlb
movsb
lods
popf
and
mov
neg
lds
insb
xor
add
push
mov
xchg
lods
pop
inc
mov
fucomi
mov
icebp
jmp
cmpsl
fwait
jns
dec
sub
mov
outsb
sbb
dec
lods
pushf
popf
cmp
mov
aad
hlt
fdivs
aad
adc
mov
pusha
dec
scas
push
xor
mov
push
cmp
cmp
rcl
stos
in
xchg
shll
lahf
mov
mov
cmp
add
cltd
arpl
rclb
xchg
dec
pop
adc
mov
xor
movsl
lods
push
sbb
xlat
stos
push
xor
sbb
mov
shll
shlb
fcomps
jb
xchg
adc
mov
scas
xor
xchg
int
sub
icebp
push
stos
jl
dec
sbb
jnp
cmp
cld
shl
fiadds
ror
gs
jo
inc
mov
sub
mov
ret
mov
sbb
dec
push
jl
or
xchg
outsb
mov
inc
lahf
mov
sbb
cmp
cmp
test
mov
test
js
cmpsl
mov
test
xchg
jo
push
push
add
mov
in
out
mov
lret
xchg
sbb
pop
js
aaa
adc
ljmp
pusha
pop
fs
fistpl
mov
das
cmp
out
mov
enter
cmp
pop
rcrl
push
cmp
ret
popa
pop
pop
les
mov
mov
dec
js
and
pop
lods
rorb
and
bound
mov
adc
enter
outsb
gs
push
out
or
loopne
adc
bound
cmp
in
or
shrl
xor
ffreep
jge
sub
mov
and
jge
inc
cmpb
nop
adc
inc
rcr
fbld
pusha
sbbb
cmpsl
cmp
lods
add
push
xchg
mov
xchg
gs
fnstcw
lret
xchg
fsubl
stos
add
mov
mov
jns
add
sbb
inc
call
lds
inc
dec
inc
adc
xchg
fldenv
sub
mov
jg
or
and
inc
sarl
sbb
mov
rol
jle
xchg
dec
xchg
cmc
test
repz
fisttpll
test
push
arpl
test
push
in
or
cli
ficompl
xor
test
sub
cmp
testb
jae
dec
sub
outsl
add
ret
iret
fimuls
cmp
xor
stos
addr16
imul
movsl
cmp
loopne
sub
mov
rcr
adcb
mov
and
fsts
adc
xchg
xlat
inc
xchg
sub
xor
mov
cmpsl
in
cli
dec
mov
fcoml
xor
je
loop
or
sub
incb
pop
mov
imul
inc
mov
aad
cmpsl
fildl
mov
loop
in
push
inc
mov
xchg
push
push
popa
in
cmp
ja
les
iret
sar
mov
out
insb
leave
out
jns
xchg
push
dec
adc
cmp
iret
or
mov
les
cli
test
or
jp
inc
call
adc
adc
or
aad
js
cli
xchg
xor
dec
cmp
cmpsb
mov
and
mov
movsl
repnz
or
mov
fcompl
add
lcall
lahf
lahf
leave
push
out
mov
sarl
daa
add
jp
pushf
arpl
mov
jb
call
adc
add
add
aam
sbb
xor
cmp
into
sub
cltd
mov
ljmp
sti
iret
in
pop
clc
test
mov
mov
shll
sub
xchg
xor
dec
hlt
cli
mov
inc
mov
mov
cmc
mov
inc
inc
and
adc
lds
and
jo
push
inc
mov
fwait
sub
popf
jne
fmull
loopne
pop
mov
into
into
loope
jb
cltd
daa
popa
mov
es
xchg
arpl
cmp
pop
mov
mov
add
scas
mov
scas
out
inc
dec
push
jg
cwtl
cmp
jno
nop
xor
fcomip
rolb
cli
clc
fisubs
std
ret
stos
lock
test
mov
int3
sub
outsl
into
pop
xchg
stos
sbb
mov
aam
cmovo
sbb
mov
lret
jne
and
out
je
mull
pop
mov
inc
sub
outsl
fisttpll
sarl
mov
into
add
test
lret
cmp
adc
pop
fs
pop
pop
push
pop
add
lcall
popf
xchg
pop
xchg
aaa
repz
mov
add
sub
icebp
mov
push
mov
lds
stc
dec
imul
fisttpll
or
add
fwait
mov
or
lcall
add
pop
sub
jecxz
pop
inc
subb
jl
icebp
and
or
sbb
aam
push
jle
shrl
sbb
mov
sub
pop
dec
mov
pop
push
in
mov
cltd
jecxz
and
iret
nop
xlat
mov
stos
jne
sarl
sub
jae
cmp
dec
inc
jge
or
push
out
cld
aam
cmp
mov
cmc
dec
fistps
outsl
int
outsl
xor
jne
jmp
rolb
and
repz
dec
test
adcb
sbb
dec
loop
push
or
lock
jecxz
in
pushl
push
mov
divl
mov
dec
dec
dec
push
jo
xchg
addr16
inc
xchg
test
jne
outsb
push
cli
stos
jge
dec
mov
sub
sub
loopne
dec
arpl
lahf
add
stc
icebp
inc
lods
and
xchg
loope
lods
add
xchg
lods
jg
xchg
push
data16
sub
push
pop
mov
jae
gs
inc
loope
push
pushl
add
in
test
mov
add
negl
cmc
icebp
push
mov
mov
push
fmull
push
pop
shl
or
jecxz
addr16
rolb
cmp
xchg
sub
ret
hlt
in
loop
jmp
popf
inc
xorl
daa
jp
jo
mov
call
shl
jmp
mov
mov
fistps
sbb
movsl
jnp
movsl
bound
xor
mov
das
lock
or
test
and
pop
mov
push
mov
arpl
aaa
pop
pop
sbb
or
xor
mov
pop
mov
push
inc
push
xchg
shrb
movsl
or
cmp
push
inc
aaa
and
cmc
sbb
stc
xor
sbb
xlat
hlt
ret
aas
and
ss
insb
orl
xchg
int3
popa
clc
lcall
mov
xchg
pop
xlat
dec
loopne
in
filds
popf
cmpl
mov
mov
push
movsb
stc
rol
fwait
test
pushf
rcrl
stos
xchg
add
add
mov
and
out
stos
dec
inc
lods
mov
xor
lret
dec
jecxz
shl
popa
repnz
sbb
aaa
ljmp
cmc
ret
or
call
add
sub
and
pop
jl
imul
mov
icebp
inc
out
xchg
movups
add
lret
scas
jae
shrl
jno
aam
loop
pop
lock
decl
dec
jg
stc
es
inc
pushf
rcrl
pushf
xor
push
add
dec
gs
mov
adcb
popa
jle
int3
out
cld
jb
sahf
sbb
adc
int3
aam
int3
sti
push
sbb
or
cmpsl
push
andl
subb
ljmp
sbb
inc
inc
outsl
adc
pop
jecxz
dec
push
stos
mov
imul
ljmp
xor
fsub
jge
mov
test
setp
pop
sbb
ds
stc
jg
push
mov
mov
and
or
dec
xchg
xor
sub
push
cltd
int3
es
fs
lock
cmp
jg
shl
lea
sbb
jecxz
mov
js
cli
aas
inc
mov
pop
lret
popf
push
sbbb
fsubr
inc
cmpsl
add
xor
cltd
out
outsl
dec
mov
lods
jb
mov
mov
lods
mulb
scas
clc
je
cld
and
nop
in
int3
mov
sahf
or
fmulp
push
lods
add
stc
adc
aad
adc
dec
ss
push
pop
outsl
aad
jb
jnp
add
cmpsb
data16
push
ret
ljmp
loop
popf
cmc
sub
out
jmp
pushf
inc
test
repz
fidivl
mov
test
sub
cmpsb
data16
cmp
scas
subb
out
mov
imul
xchg
cmp
jb
or
mov
xchg
aas
jl
push
icebp
or
das
adc
add
xchg
mov
xchg
dec
aam
out
sub
mov
jecxz
cmp
mov
cltd
jmp
dec
movsl
cwtl
imul
add
out
ljmp
inc
loopne
dec
bound
xchg
clflush
scas
xchg
xor
sbb
jno
les
mov
sbb
xor
cmpsb
pop
and
pop
mov
or
mov
cmpsb
mov
xchg
add
call
lcall
and
push
inc
sbb
jo
out
unpcklps
pushf
sbb
enter
sub
cmp
cmp
arpl
fld
pop
pusha
out
jb
cmpsb
imul
out
jbe
jp
cld
lds
call
mov
or
cmp
cmp
push
aad
test
out
push
xlat
push
xor
sub
and
push
sub
pop
xlat
fidivl
test
movsb
push
in
xchg
sbb
cmp
or
rcll
dec
and
fdivl
lahf
cmp
ja
mov
sub
dec
test
sbb
shll
sub
out
push
jne
push
insl
inc
fsub
fildl
les
stos
xor
mov
pop
jb
mov
call
out
lods
inc
push
daa
add
xchg
push
fnstsw
push
add
add
cmpsl
mov
orb
and
push
fsubrs
mov
out
test
stos
not
ds
ja
xor
jne
fstpl
je
cmp
xlat
loop
stos
sbb
adc
push
xchg
and
es
xor
cld
dec
add
shrl
add
and
das
std
daa
outsb
test
cld
mov
mov
add
clc
xchg
pusha
adc
sbb
and
jne
les
dec
leave
inc
xchg
iret
ret
rclb
adc
xchg
pop
adc
ja
hlt
xchg
add
stos
and
adc
and
mov
mov
ja
adcb
mov
lahf
jp
add
add
xor
add
lods
ret
or
fyl2xp1
xchg
and
dec
lret
arpl
mov
shrb
sbb
and
movsl
xlat
sbb
scas
push
mov
adc
test
inc
dec
jne
cmpsl
jge
push
cmp
out
dec
leave
je
dec
pop
ss
and
xchg
cmp
out
mov
aad
leave
push
sbbl
inc
adc
pop
mov
pop
loop
sub
not
imul
mov
add
xchg
push
jecxz
inc
xchg
subl
in
fs
pushf
and
mov
xchg
jae
sbb
inc
stc
push
ljmp
aam
and
or
negl
or
ljmp
xchg
cmpsb
xchg
jne
mov
push
pop
mov
xor
in
add
add
mov
loopne
push
cwtl
aaa
or
jnp
fwait
cmp
sbb
es
dec
pop
mov
lret
push
fnstcw
iret
mov
pop
cmpsl
inc
inc
fwait
cmpl
or
mov
cmpsl
fnstsw
xlat
push
clc
push
ljmp
jge
xchg
ret
push
adcb
int3
ret
push
push
mov
xchg
shlb
test
pushf
popf
mov
push
pop
sbb
aaa
hlt
jge
sahf
mov
pop
push
xchg
xchg
das
les
add
loop
shrb
xchg
mov
xor
xor
xchg
push
popf
mov
cmp
outsb
outsl
orl
mov
jecxz
xchg
xor
ret
pop
stos
and
dec
fstp
pop
add
xchg
insb
pushf
inc
arpl
out
mov
lea
sbb
out
into
outsl
sahf
and
je
iret
fidivs
dec
adc
das
pusha
or
mov
xor
mov
pushf
out
lea
xchg
popf
shl
push
push
mov
aad
ss
shll
jge
xor
gs
jo
jne
jo
mov
and
jbe
push
adc
jbe
add
mov
xchg
int
lret
dec
sbb
pushf
adc
and
sti
or
xchg
adc
cmp
pop
mov
stc
shll
adc
or
std
ljmp
mov
push
xchg
iret
bound
fwait
push
and
jp
xchg
inc
iret
orb
adc
out
jno
xchg
cmpsl
add
int
test
lahf
sbb
pop
aad
lea
adc
mov
pop
arpl
jecxz
xor
adc
test
pop
imul
psrlq
xchg
mov
pop
inc
in
adcb
hlt
sbb
js
leave
out
inc
and
test
push
test
negb
fadds
int
out
nop
xchg
cmp
cmp
repz
pop
dec
inc
ds
mov
xchg
mov
push
or
xchg
add
xor
into
aaa
ret
dec
push
jno
negl
inc
mov
mov
leave
insb
mov
rolb
clc
jmp
test
ds
nop
dec
adcl
push
mov
and
loope
js
test
mov
add
xor
inc
out
sbb
pusha
imul
fnstenv
test
int3
xchg
imul
arpl
mov
mov
pop
push
sub
sub
dec
cmpsb
mov
cmc
ss
jge
cwtl
sti
and
jb
jmp
sahf
xor
mov
cs
dec
pop
push
test
sub
jecxz
jne
daa
je
insb
out
sbb
xor
mov
xor
jp
movsb
fistpll
cmpsl
scas
or
xlat
hlt
mov
out
jne
gs
mov
inc
test
xor
outsb
pop
push
pop
mov
cmp
ficomps
fs
jl
fcompl
daa
and
pop
leave
in
and
rol
mov
and
aaa
sub
nop
sub
adc
pushf
fwait
call
adc
insl
fcoml
sti
jnp
and
jmp
xlat
pop
bound
adc
push
test
xchg
sub
inc
stos
aad
repnz
in
xchg
repnz
dec
dec
in
pop
lds
dec
jbe
xchg
sub
dec
mov
data16
and
in
shrb
push
fisubs
cli
cwtl
sub
cmp
cmpb
movsl
nop
repnz
cwtl
pop
dec
add
add
lods
cli
or
add
in
sub
out
sub
aad
mov
in
jne
xchg
cwtl
inc
push
mov
xchg
insl
jb
mov
jbe
inc
unpckhps
or
movsb
fildl
add
jae
push
popf
push
fimuls
inc
lea
sbb
jne
mov
mulps
add
dec
ret
pop
jne
cli
or
lds
jecxz
stos
and
mov
bound
enter
loopne
dec
jb
mov
sarl
sbb
inc
nop
adc
add
mov
out
mov
movsb
movsl
mov
jmp
jle
push
test
xor
jb
mov
cli
mov
mov
and
ljmp
or
push
xchg
xchg
repnz
add
xchg
testl
or
and
ret
sbb
jnp
fistpl
push
or
mov
adc
nop
cmp
inc
xchg
in
fistps
bound
and
sahf
scas
out
les
dec
mov
fildl
lods
sub
xchg
pop
jge
xchg
jne
notl
push
dec
popa
xchg
push
cmp
and
push
jmp
and
in
xor
and
ljmp
imul
xor
daa
jle
adc
jl
xchg
mov
jns
dec
aaa
xchg
mov
mov
mov
dec
cli
pusha
pusha
push
stc
cmp
push
pop
xchg
iret
ds
mov
ret
xchg
cltd
stc
loopne
dec
or
int
ljmp
push
mov
out
push
jb
hlt
push
les
leave
jge
outsb
subl
xor
test
sahf
mov
lods
inc
imul
mov
add
jns
xchg
je
mov
in
pop
sub
ror
jg
mov
rcr
into
jae
stc
lods
or
xchg
aam
mov
sbb
push
xchg
dec
data16
call
idivb
repz
dec
nop
dec
pop
in
cmp
jno
imul
push
daa
daa
ljmp
loopne
test
mov
xchg
in
imul
int
ltr
cmpl
gs
mov
pushf
xchg
shll
or
jno
add
pop
push
jns
mov
shrl
les
or
pop
push
leave
or
xchg
aaa
and
imul
stos
lods
push
fstpt
or
loope
or
aad
cmp
jno
mov
hlt
cltd
cmp
pop
or
cmpsl
cmp
jne
test
jl
cmc
and
sbb
push
cmp
mov
cltd
fstl
jp
mov
lock
fdivl
cmp
iret
dec
cld
div
js
into
sti
cwtl
xor
movb
outsl
mov
es
mov
sbb
test
dec
fs
inc
test
mov
or
inc
xor
jbe
jp
pop
push
outsb
and
dec
loope
out
in
mov
insb
addb
jns
test
jmp
fldcw
jns
fldt
pusha
flds
outsb
sub
cmp
mov
aad
jbe
or
cmp
dec
mov
in
add
cmp
mov
mov
mov
push
popf
jle
pop
push
adc
ficoml
gs
outsl
inc
lahf
jp
sarl
fwait
mov
ja
and
sub
cwtl
lcall
pop
cs
dec
clc
mov
test
mov
in
push
addl
adc
mov
lods
mov
test
rorl
mov
enter
cmp
xor
loope
xor
sub
int3
daa
mov
mov
or
jl
pop
stc
sub
lods
cmc
pop
jae
xor
sarl
push
dec
sub
push
mov
cmp
sbb
loopne
and
aaa
dec
pushl
aad
dec
or
in
pop
test
lcall
pop
mov
xchg
rolb
xor
cmp
shll
and
xchg
sub
fcomi
out
cmc
call
jg
mov
fidivl
mov
xchg
jmp
push
popl
or
stos
or
mov
popw
ss
mov
in
outsl
dec
lcall
dec
dec
test
lea
cmc
std
pop
pusha
push
hlt
sub
dec
inc
loop
add
xor
and
push
jp
outsl
xchg
mov
adc
mov
not
pop
imul
jae
in
jno
xchg
es
fwait
cmp
stos
insl
cmc
jp
dec
fwait
vhaddpd
out
test
movsl
inc
mov
sbb
outsb
adc
jl
or
lock
hlt
loop
xchg
mov
xor
xchg
pop
jecxz
xchg
cmp
dec
and
in
loope
pusha
inc
cmp
dec
sbb
pop
fisttps
jl
setge
cmpsl
lcall
std
cmp
subl
popa
adc
in
in
mov
jno
icebp
rorl
leave
mov
enter
vpcomuw
repnz
cmp
xor
in
fstpt
inc
lret
iret
sub
das
push
sar
or
out
sti
bound
pusha
out
cmpsl
das
faddl
push
mov
loopne
ljmp
mov
mov
dec
sub
in
pop
cmp
push
add
aam
outsl
pop
xchg
clc
pop
fidivrs
fwait
inc
leave
aas
fisttpll
inc
pop
push
popa
arpl
pop
ljmp
clc
add
or
icebp
sub
inc
jnp
and
out
in
aam
xlat
aaa
cmp
sbbw
fildl
xchg
or
add
and
cli
in
jmp
and
pop
mov
adc
jmp
movsl
and
mov
das
into
fdivrl
sub
dec
js
xor
jecxz
xchg
pop
or
out
aad
pop
or
and
jg
je
push
cmc
xor
loopne
aam
mov
or
lahf
cmp
out
pop
pop
mov
pusha
fwait
je
popa
idiv
adc
ljmp
shrl
jno
xor
les
out
and
pop
sbb
or
mov
mov
cmp
inc
es
mov
mov
adc
mov
dec
iret
imul
push
xchg
and
add
jnp
mov
addl
xchg
leave
xor
mov
cmp
fwait
mov
movsl
xor
inc
in
xchg
xchg
pop
mov
ja
mov
das
icebp
movsl
iret
mov
aas
stc
das
sarl
mov
ljmp
ror
js
xor
aad
daa
lds
push
mov
ds
jp
xchg
add
jle
jl
and
bound
lock
jb
sbb
xchg
aam
sbb
adc
shll
test
dec
jmp
shl
imul
jo
fadds
fs
cmp
cli
bound
fisttps
fs
mov
notl
mov
pop
adc
andl
or
add
popf
xchg
add
cmp
sti
and
ret
je
das
imul
adc
js
andl
out
and
shrb
xchg
adcb
inc
ret
mov
popf
adc
or
daa
addr16
mov
add
test
mov
jge
dec
mov
cld
add
mov
mov
pop
scas
xchg
dec
or
mov
pop
lods
jmp
add
mov
lea
mov
out
stc
or
shl
and
je
cwtl
jg
movsl
in
push
push
inc
stos
stos
aam
jbe
ljmp
test
out
sarl
rorb
stos
cmp
fldt
sbb
mov
lock
rcll
or
push
jle
in
das
pop
les
push
xchg
sbb
sub
lock
xlat
dec
sbb
rcll
je
loope
mov
and
dec
pop
sub
inc
mov
loop
dec
and
vpand
mul
and
das
or
popa
or
jle
add
mov
sbb
jo
loop
jbe
xor
lea
dec
mov
xchg
mov
mov
ds
sbb
mov
pop
mov
sbb
call
int
inc
mov
nop
xchg
push
add
frstor
jge
ficomps
das
arpl
sbb
jno
js
jno
dec
scas
lret
popf
mov
jbe
push
es
emms
iret
test
xor
jge
testb
sub
pop
mov
lahf
stos
cwtl
push
sbb
add
js
arpl
xor
push
push
xchg
mov
hlt
std
orb
dec
cmc
mov
mov
out
xchg
pop
lahf
dec
out
mov
insb
mov
psraw
popf
ss
pop
mov
sub
sti
jmp
sub
xchg
xor
ficoml
mov
cmp
popf
jnp
pop
popf
push
push
mov
gs
jbe
mov
add
in
orl
pop
inc
cmp
lods
dec
mov
xor
mov
stos
into
mov
popa
arpl
xor
mov
outsl
add
stos
xor
shll
push
mov
shll
mov
and
adc
pop
xchg
mov
aam
dec
sub
jg
sub
out
or
cwtl
insb
movsl
push
mov
xor
add
inc
xchg
sub
mov
rcll
jmp
dec
rcrb
or
jne
mov
loopne
adc
pop
fidivs
pop
leave
push
xor
nop
pop
sbb
mov
push
mov
into
sti
shrl
adc
iret
mov
cmc
das
cld
jp
jl
cmp
stos
and
clc
shlb
xor
push
scas
pop
rcll
mov
jnp
leave
xor
ret
xor
call
mov
rcl
dec
xlat
mov
xlat
addr16
jl
repnz
leave
dec
imul
stos
adc
push
bound
sub
pop
pop
and
xchg
jne
dec
cli
mov
lret
push
es
je
cmp
sbb
push
icebp
lahf
lret
and
clc
adc
gs
adc
enter
pop
aam
fimuls
jns
mov
arpl
sub
sub
call
ret
loope
aad
jo
aad
sti
jl
imulb
or
dec
sbb
lea
nop
and
aaa
sbb
fidivrl
lret
mov
pushf
cmpsb
movsl
xchg
push
pop
dec
fsubrp
jno
add
enter
fiadds
xchg
mov
sahf
ljmp
cmpsb
inc
push
bound
mov
xchg
jmp
sbb
loop
std
dec
in
mov
stos
xchg
call
mov
xlat
add
inc
lods
mov
xchg
movsb
xchg
push
push
fidivrs
cli
xchg
and
inc
sbb
js
push
jmp
mov
xor
xor
pushf
cli
mov
xchg
and
add
in
fidivs
loopne
and
leave
jnp
mov
or
sti
fiaddl
test
insb
call
shrb
int
test
xor
sub
push
sub
mov
movsb
and
sarl
mov
inc
add
loopne
cmc
sub
cmp
mov
add
rol
pop
out
outsl
scas
test
sub
push
inc
bt
aaa
je
cs
pop
int
lret
xorb
or
loopne
stos
cli
push
fcompl
divb
outsl
fsubs
gs
xchg
lods
pop
pop
pusha
mov
addr16
int3
call
cs
je
push
sub
inc
clc
cmp
mov
rcr
adc
outsl
je
and
jl
inc
push
jle
fisubs
enter
sub
loopne
test
fidivrs
lret
fadds
mov
outsl
movsl
cmp
jp
fidivrs
inc
mov
outsl
sbbb
pop
xor
rclb
std
test
in
andb
lret
sti
xor
lret
dec
clc
insb
sbb
add
sbb
jmp
jl
das
fisttpl
xlat
mov
bswap
cs
inc
adc
in
inc
int3
enter
and
dec
xor
mov
subl
sti
cmp
mov
inc
rolb
jg
sahf
cli
xchg
movsl
pushf
mov
xor
jecxz
lahf
incl
push
adc
leave
sub
lock
mov
leave
adc
adc
pop
jecxz
lret
push
xchg
dec
dec
xlat
lods
rorl
in
mov
pop
insl
in
movsl
inc
ljmp
ljmp
mov
push
cwtl
std
mov
movsb
or
mov
outsb
jnp
cmc
nop
fidivrl
add
daa
mov
dec
data16
or
inc
into
inc
xor
mov
in
pop
sbb
or
test
mov
je
sub
pop
mov
rcll
ja
inc
xchg
mov
adc
sbb
popa
addl
lahf
bnd
pop
cmpxchg
lret
mov
or
stos
sbb
push
ret
cmpsl
lea
test
jg
cld
sub
dec
cmc
pushf
jmp
aas
out
sub
dec
repz
bound
in
add
fistl
xchg
xchg
popf
jmp
sbb
out
ret
aas
pusha
push
std
aad
dec
sub
xor
mov
movsb
mov
stc
dec
push
mov
mov
dec
adcb
dec
fdivrs
cmp
sbb
add
jb
les
mov
fcmovnb
push
mov
sub
dec
inc
imul
inc
xor
xchg
mov
out
iret
push
jge
mov
stos
xchg
lahf
inc
xchg
push
or
daa
jo
xor
lea
xchg
cmpsb
lcall
or
mov
call
cmp
mov
push
or
mov
push
add
rcrb
insb
outsl
stos
rclb
xchg
sbb
adc
dec
gs
jnp
out
ds
out
sbb
sahf
inc
mov
in
adc
decl
jge
fs
in
push
mov
xchg
enter
adc
push
or
and
jle
inc
or
orb
cmp
or
jnp
push
mov
mov
sbb
mov
xchg
fisttps
fidivs
pop
fimuls
jo
andb
outsb
and
xor
int
fisttpll
xchg
xchg
mov
imul
mov
cmc
adc
notb
imul
fwait
aas
add
cmp
dec
rcl
cmp
mov
fst
jp
sti
push
and
rcl
mov
xor
je
mov
xor
cmpsb
rorl
ret
pop
xor
dec
pushf
sahf
popf
or
ss
rcrb
xor
icebp
arpl
loop
push
jae
and
lcall
jp
fiadds
jno
or
leave
dec
mov
mov
int
push
ret
jp
ds
call
aam
decb
ficomps
repz
push
ja
ljmp
sub
pop
jnp
bound
inc
mov
push
cwtl
mov
fcomp
addr16
repnz
leave
cmc
mov
and
dec
sub
jno
dec
and
cs
out
xor
lcall
xor
dec
repz
ja
lds
cltd
das
cmp
stos
mov
sub
xchg
add
jo
out
or
ljmp
leave
enter
and
adc
shr
test
out
rcl
and
idivb
out
dec
into
mov
mov
gs
pop
hlt
lock
xchg
mov
dec
in
push
xchg
sarl
fistpll
or
jg
in
push
mov
jo
hlt
out
popa
jae
inc
adc
xor
ljmp
mov
push
xchg
push
in
out
je
mov
pushl
push
sti
mov
mov
pop
xor
or
cmp
cmp
sbb
insb
push
lea
aaa
pop
mov
insl
inc
jge
xchg
das
ficomps
mov
xchg
andb
ret
mov
test
gs
data16
sbb
xor
call
jbe
jnp
or
lock
ljmp
push
int
or
inc
nop
lahf
push
aas
imul
add
pop
imul
jae
xchg
inc
jg
and
sbb
pop
pop
sbb
pop
add
inc
jno
cli
popf
mov
ficomps
pop
xlat
dec
sub
xchg
or
add
push
xlat
mov
pop
arpl
loop
cvttps2pi
pop
inc
arpl
int
push
and
sub
rorb
jecxz
add
and
or
or
stc
add
jge
cmp
push
jmp
jp
xchg
nop
roll
aaa
push
into
xchg
imulb
jmp
mov
jge
push
mov
dec
sub
pop
lret
sbb
mov
mov
fisttpll
pop
rcr
jg
inc
push
je
xor
or
cmpsl
daa
push
adc
mov
cmpsl
pop
dec
lea
jg
rorb
int3
shll
pop
dec
cmp
lret
out
mov
jo
pop
imul
dec
ret
and
scas
mov
mov
xchg
sub
jb
dec
xor
push
sub
xlat
pop
xlat
xorl
fwait
sbb
pop
lcall
aas
mov
scas
stc
shr
mov
fisttps
adc
push
cmp
inc
shrb
icebp
xchg
dec
inc
xor
mov
sti
sbb
xchg
mov
sti
sbb
in
adc
in
xchg
insb
test
adc
cmc
mov
popa
addr16
mov
cli
xchg
mov
stos
cmc
pushf
arpl
dec
gs
push
orl
iret
lret
xor
scas
leave
and
movsl
jecxz
inc
inc
or
pop
adc
adc
xor
sbb
shlb
lods
sub
inc
mulb
or
sbb
fmul
test
std
fwait
je
lods
shlb
scas
inc
arpl
mov
xchg
nop
iret
je
imull
adc
sub
leave
inc
hlt
push
nop
pop
xor
fdiv
sbb
movsb
pushf
scas
rcll
hlt
shll
lea
push
dec
mov
pop
and
in
jmp
std
xor
leave
adc
pop
popl
arpl
in
lods
dec
pcmpgtd
shl
and
fcoms
inc
adc
insb
in
out
insl
jmp
rcr
jae
test
or
mov
scas
xchg
or
mov
pusha
push
adc
aaa
jbe
mov
sti
inc
add
mov
mov
cmp
std
or
out
js
clc
pop
push
rcrb
and
nop
mov
and
fisubrl
cmp
in
jno
loop
adc
mov
mov
add
pop
fldl2e
rorb
inc
dec
iret
dec
popa
scas
pop
hlt
inc
or
push
and
insb
cmc
popf
sbb
lds
mov
mov
es
push
out
or
repnz
inc
fiaddl
pushf
sbb
pop
out
call
jo
out
dec
mov
cmp
repz
daa
out
xlat
and
ja
sbb
push
add
add
in
jl
jl
sbb
inc
lcall
cmpl
inc
add
out
iret
dec
adc
inc
sub
movsl
sub
call
inc
push
sub
ljmp
cltd
lods
pop
cld
insl
sub
jae
xor
pop
mov
lahf
lret
pop
jnp
xor
sbb
mov
push
in
pop
xchg
divl
mov
adc
jmp
dec
js
out
push
icebp
loope
mov
in
adc
std
jp
lcall
pop
push
xchg
iret
sbb
aad
int3
xor
jle
jo
test
or
dec
aad
out
jl
call
adc
ret
in
cmp
jmp
mov
ret
out
or
adc
out
push
adc
rcll
and
or
inc
sub
dec
xchg
mov
cmpsl
scas
mov
push
rorb
push
stos
mov
std
xchg
inc
pop
ja
jnp
dec
jbe
cmp
fwait
adc
push
sub
xchg
dec
outsl
push
adc
xchg
fisttpl
fildl
push
repnz
insl
lea
js
jne
push
inc
jno
adc
mov
xchg
pop
mov
rorl
imul
stos
lret
jg
aad
icebp
enter
rolb
xchg
arpl
push
pop
aam
mov
cli
sarl
push
inc
add
scas
call
add
loop
pop
cmp
or
sahf
cmp
imull
fcmovnu
lcall
loop
pop
push
mov
xor
pusha
mov
push
daa
and
popa
out
imul
mov
mov
lods
lea
xchg
mov
push
xor
jecxz
pop
stos
aad
lock
lcall
leave
mov
sbb
rcrl
mov
ret
sti
sub
cmp
fidivl
fdiv
or
dec
imul
fwait
jle
jne
inc
orb
push
push
out
je
sahf
mov
imull
pop
movsl
xor
add
lret
mov
or
lret
cmp
addl
mov
jl
shrb
test
outsb
imul
push
lret
ret
sbb
adc
into
mov
test
mov
push
fs
xchg
jl,pt
in
add
cli
pop
add
xchg
jno
fdivrs
push
cmc
int
movsb
repz
movsl
stos
aaa
cmc
pop
add
sbb
icebp
out
mov
shll
iret
inc
cmpsb
daa
sbbb
test
inc
data16
jp
outsl
sarl
or
rcll
mov
sbbl
rol
sub
lds
pop
cld
fisttps
sub
nop
adc
pop
cmp
cmp
push
cmp
mov
xor
ljmp
mov
mov
clc
rcr
jge
dec
push
fstpl
loope
jae
jmp
push
pop
pushf
dec
js
and
fsubr
push
dec
xchg
shrb
cld
stos
icebp
pop
or
mov
divl
arpl
inc
mov
shl
adc
nop
movsb
push
xchg
push
inc
pop
push
into
jbe
pop
int3
and
ret
repnz
push
mov
add
movsb
int3
sub
pop
jmp
add
mov
test
mov
mov
pop
fisttpll
mov
push
fcmovnu
jmp
vmovntdq
mov
aas
add
arpl
xor
jg
mov
pop
push
sbb
out
sbb
jmp
dec
adc
push
add
mov
mov
mov
cmp
add
adc
pop
xlat
arpl
push
mov
ret
xchg
add
jp
sti
jb
fimull
lcall
arpl
mov
mov
add
into
lcall
adc
push
sbb
int3
or
call
sbb
aam
or
dec
test
dec
inc
out
adc
mov
sbb
dec
xchg
fwait
sarb
in
cmp
icebp
push
xchg
and
inc
aas
cli
andb
push
jae
mov
add
and
das
jge
scas
jecxz
mov
sub
mov
dec
icebp
test
push
fisttpl
add
ret
jmp
sbb
jne
xor
jge
mov
sub
sub
lret
push
cmpsl
mov
pop
popf
xor
in
ret
in
js
cmp
push
mov
xchg
pop
insb
dec
jmp
call
in
mov
int3
mov
mov
jecxz
xor
scas
rcll
in
jae
ljmp
aam
lahf
dec
imul
loop
cmp
push
dec
mov
push
jl
lds
aaa
inc
cmp
xchg
xchg
or
dec
leave
cmc
and
aas
mov
cmp
push
js
sbb
jb
jle
test
cmp
inc
mov
push
add
nop
mull
fcomp
adc
fisubs
add
sbb
lods
mov
mov
loopne
inc
add
insb
jae
into
add
inc
push
ret
push
lret
popa
shl
dec
mov
sub
jae
sbb
push
int
sbbb
divl
push
cmp
sub
repnz
daa
clc
cltd
cld
xor
sbb
inc
cmpsl
mov
enter
and
jg
jg
call
lea
es
fldcw
dec
ss
test
add
cmp
loopne
adc
xchg
mov
les
repnz
in
rclb
mov
xchg
gs
dec
sub
dec
incl
subb
rorb
fidivrs
movsl
xchg
dec
movsl
das
or
bound
stos
out
sbb
push
cld
xchg
cmp
inc
jo
xchg
cmp
xor
lods
push
dec
mov
add
xor
xor
xor
test
pop
push
push
push
out
push
call
lret
mov
mov
pop
mov
adc
sti
clc
dec
arpl
adc
lods
add
add
adc
sub
adc
aas
dec
mov
adc
pop
js
stos
xchg
push
dec
call
lock
fdivrs
or
pop
adc
adc
mov
std
scas
jmp
xchg
sbb
adc
loopne
test
dec
rorb
mov
push
mov
mov
lock
xlat
inc
call
lods
arpl
pushf
cmp
xor
xlat
jmp
aad
pusha
out
inc
push
jle
es
sbb
and
bound
adc
add
add
xor
subl
xor
sbb
test
xor
shl
pop
icebp
and
pcmpgtw
jle
sub
jge
jbe
sbb
scas
inc
sahf
ret
push
mov
jecxz
testb
xchg
xchg
pushf
out
and
loopne
pop
cmp
sahf
aad
stc
push
jg
stos
xor
inc
xor
gs
mov
cmc
sbb
cmp
push
push
xor
test
loopne
xor
pop
jmp
fcoml
rorb
adc
cmpsl
outsl
popf
jl
sub
sub
add
pop
pop
xchg
aaa
push
cmp
pop
sbb
push
mov
or
dec
xchg
movl
loopne
or
ljmp
dec
enter
push
add
pop
push
cld
add
push
out
jmp
js
arpl
pop
mov
mov
add
push
mov
test
xchg
and
xlat
in
mul
rclb
lods
cmp
add
or
popa
jmp
add
mov
adc
loopne
xchg
bnd
lret
sahf
push
ja
hlt
outsb
and
cmp
popl
mov
push
insl
inc
xlat
sbbb
cmpsb
shlb
jmp
xor
fwait
fwait
push
sub
inc
int3
inc
mov
and
cmp
mov
in
dec
mov
inc
pop
jbe
or
push
mov
repnz
stc
lods
ljmp
mov
sub
sbb
xchg
icebp
xchg
mull
inc
cli
mov
push
adc
xor
test
pop
jle
add
pop
icebp
pop
add
cmp
dec
and
mov
inc
rorl
imul
cmc
icebp
fcoml
movl
jmp
data16
insb
ljmp
daa
mov
pop
adc
xor
xchg
jns
aad
adc
push
mov
jmp
and
notl
cs
mov
dec
int3
arpl
push
pop
pop
pop
push
fsubp
lcall
mov
insb
xlat
jno
pop
jge
mov
in
xlat
fbld
xchg
jae
cmp
das
sbb
imul
push
loopne
out
enter
pusha
aam
ljmp
movsb
leave
dec
xor
pop
ret
jecxz
push
jge
lahf
jg
cmp
pop
call
xorb
pop
fldcw
pop
cmpsl
lock
popf
cmpsb
push
cli
sub
mov
add
sbb
push
js
notb
push
add
fs
in
sub
cs
dec
adc
ret
sahf
ljmp
cmpsl
xchg
lret
shrb
jecxz
rcl
pop
divb
or
push
pop
sub
shll
data16
xchg
or
sub
xchg
jns
scas
movsl
or
lods
gs
fnstcw
lds
lds
mov
mov
arpl
loop
add
pop
lret
sbb
mull
fists
mov
sub
outsb
sahf
pop
loop
or
pmulhw
lock
dec
mov
lcall
test
or
nop
xor
mov
mov
jge
sbb
mov
mov
pop
roll
imul
loope
outsl
scas
mov
mov
xchg
mov
sub
mov
sarb
xor
sub
testb
ret
outsb
sbb
sbbb
ds
and
or
shl
xchg
fstpt
dec
xlat
xor
add
movsl
jo
cmp
xor
outsl
add
jno
pusha
insb
cmp
in
and
leave
fcmovne
mov
data16
add
ror
in
movsl
pop
ja
cmp
nop
pusha
jne
repz
repnz
jp
mov
imul
mov
pop
jge
xchg
sarb
mov
imulb
lret
add
lock
cmc
negb
xchg
rcll
and
add
jmp
flds
sub
xchg
movsb
and
leave
lcall
push
mov
out
inc
jl
jle
into
push
fabs
cld
pop
lock
lea
mov
sbbl
bound
sub
out
dec
inc
push
test
mov
dec
out
and
fcoms
pushf
sbb
xchg
or
fs
add
jmp
nop
stc
int
ja
xchg
sbb
lds
mov
insb
arpl
fcoml
rcrl
jge
inc
xchg
cld
lcall
lahf
rclb
outsl
addb
mov
push
popa
stos
cmp
xchg
ret
mov
imul
dec
sub
enter
xchg
adc
sub
testl
std
cmc
mov
push
push
out
fdivr
ret
push
dec
xor
in
xchg
push
pop
data16
les
enter
cmp
push
and
jle
mov
jmp
mov
push
test
xchg
sbb
and
icebp
test
push
out
jg
ljmp
int
push
add
xchg
xchg
into
cmp
push
adc
sub
mov
dec
add
xor
sbb
out
movsb
jo
scas
pop
pop
loopne
dec
push
mov
push
push
in
jl
movsb
cmp
lods
fdivr
mov
xor
mov
iret
cli
mov
dec
mov
add
fadds
lds
and
popa
jnp
nop
or
push
cmp
loop
cmp
xchg
imul
imull
aaa
mov
inc
xor
and
mov
jp
mov
pop
cmp
jle
lea
arpl
mov
pushf
pushf
adc
fildl
repnz
mov
mov
lret
inc
xor
xchg
sbb
les
mov
ficoms
pushl
adc
cld
adc
fwait
aam
sbb
sub
pop
xlat
push
sub
and
sbb
addr16
aad
sub
jl
das
insb
stc
popa
push
cmp
and
sub
ds
repz
in
mov
cs
shr
push
cli
dec
test
xor
pop
add
pop
jno
shr
dec
insl
adc
movsb
push
or
xor
in
insb
mov
jg
popl
jge
sbb
jmp
js
jbe
push
dec
and
mov
bound
shl
bound
fwait
leave
adc
jb
xor
call
mulb
rorl
mov
or
jnp
pop
data16
popa
sbb
dec
repz
mov
xchg
or
jmp
adc
into
fsubp
sbb
scas
xor
pushf
sub
inc
out
pop
mov
or
push
xchg
je
push
mov
xlat
jno
cmp
mov
arpl
outsb
iret
std
xchg
and
adc
out
imul
fcompl
sbb
pop
pop
jle
push
mov
and
and
outsl
adc
push
adc
xchg
xchg
or
and
inc
inc
fsubrl
shrl
mov
js
sub
mov
fstps
mov
fsubrs
lcall
test
dec
jo
pop
rolb
mov
pop
mov
xchg
clc
imul
daa
gs
xor
sub
call
xor
sbb
aam
cs
xor
sub
xchg
lods
fnstcw
sahf
or
inc
rorb
adcb
incb
fs
fldt
dec
insl
cld
jg
xchg
mov
pop
lret
add
pop
clc
bound
fidivl
ret
out
sbb
sub
in
or
xchg
push
dec
insl
mov
mov
mov
jnp
add
mov
add
jnp
push
sub
or
aam
sbb
popa
sbb
mov
jb
pop
mov
mov
iret
and
push
pop
and
cwtl
jle
gs
mov
jo
pop
xor
call
push
sbb
arpl
jge
inc
xchg
enter
insl
xlat
lock
jns
adc
and
cli
fdivrp
clc
subl
inc
push
jnp
loopne
pop
xor
aas
mov
cmp
mov
lds
lea
cmp
nop
xchg
ret
inc
and
add
sbb
mov
roll
add
out
sub
cmp
jecxz
sahf
ljmp
and
mov
cmpl
mov
mov
adc
inc
dec
cmp
jmp
jbe
sub
je
jle
jecxz
push
mov
dec
pop
fisubrs
mov
arpl
adc
push
mov
dec
pop
int3
xor
insl
fldenv
jo
call
jmp
loop
xchg
mov
ljmp
loopne
sub
setb
sbb
das
jmp
and
xor
imul
jnp
xchg
jge
mov
test
jno
pop
sbb
jbe
nop
xor
mov
xor
adc
sbb
fsubrs
xor
pop
dec
jle
fnstenv
mov
cmp
sbb
je
sbbl
mov
out
push
xchg
fldt
jle
or
pop
xorl
mov
push
inc
cltd
test
add
mov
test
push
mov
sub
sub
cli
data16
pop
cmp
mov
and
sarl
sub
out
in
push
inc
push
sub
mov
movsl
mov
jg
jle
stos
or
aaa
pop
out
icebp
xchg
xchg
mov
scas
sbb
scas
xlat
push
pop
mov
test
mov
mov
dec
sbb
xchg
movsl
jg
inc
xorb
xor
pop
mov
lods
sbb
xchg
pop
in
lea
enter
cmpsb
mov
fistps
enter
pusha
or
sbb
or
lcall
les
sbb
test
stos
scas
mov
mov
mov
pop
cld
mov
push
test
mov
dec
cs
dec
pop
mov
stc
sub
sub
imul
pop
xchg
sub
mov
lret
pop
mov
hlt
mov
fs
push
dec
sub
lcall
fcompl
mov
andl
fisttpl
dec
lods
mov
jl
insb
negl
js
push
mov
mov
cli
insl
rcll
dec
enter
mov
andb
inc
stos
cmp
iret
xor
addr16
dec
xchg
ret
pop
popa
jno
ja
xchg
popf
int
scas
loop
call
cli
mov
lock
mov
int
mov
fyl2xp1
movsb
cmp
stos
hlt
and
push
jns
push
roll
xchg
or
lock
decl
inc
das
adc
dec
cmp
cmp
jecxz
push
out
dec
mov
arpl
popf
push
aaa
jne
fistpll
cmc
into
dec
or
popf
jl
data16
xchg
loope
sbb
xor
fdivl
inc
lahf
dec
inc
mov
jl
hlt
outsb
adc
adc
shll
iret
sbb
inc
or
inc
lds
mov
jo
jns
cmpsb
xchg
dec
out
cmpsl
inc
loop
int
mov
popa
mov
adc
sti
outsb
lea
jg
mov
jno
lahf
arpl
int
xchg
inc
push
ja
mov
adc
ds
je
xor
push
js
cmp
adc
mov
push
adc
insb
les
cmpsl
packsswb
in
pop
mov
and
sbb
pop
push
mov
or
xor
push
les
jecxz
add
sbb
add
xchg
popf
xor
dec
pop
sub
into
and
ljmp
movsl
add
pop
dec
std
stos
cli
ret
xor
cld
dec
int3
loope
sbb
mov
add
adc
shll
pusha
addr16
shlb
mov
mov
cmp
mov
loopne
pop
pop
mov
xchg
push
or
push
mov
lds
daa
lds
xor
push
es
push
add
aaa
cwtl
cmp
or
daa
xchg
dec
cmp
push
xlat
cmpsb
mov
mov
stos
xor
or
or
test
movsl
pop
pop
bound
mov
xor
mov
jnp
in
push
mov
mov
sbb
inc
push
adc
jge
add
push
sbb
lods
xchg
or
stos
adc
into
sbb
out
bound
lret
inc
xchg
mov
add
pop
mov
or
xor
lret
cmp
movaps
jno
push
stos
adc
rcr
mov
in
xorb
cmp
shlb
sub
xor
cwtl
adc
xchg
xchg
mov
mov
lods
js
add
idivb
xor
movsl
arpl
repnz
cltd
in
cmp
pusha
pop
dec
sub
clc
mov
add
sbb
mov
dec
jge
adc
jl
push
mov
xchg
sub
enter
push
push
push
inc
mov
add
jo
hlt
popf
xor
jecxz
in
fildll
sbb
push
fidivs
pop
aam
out
test
lods
xor
sub
lcall
mov
fdivs
lretw
add
inc
movsb
mov
fists
addr16
lahf
loopne
cmp
add
push
xor
sbb
inc
mov
ss
fsub
rorb
jle
sub
jns
dec
mov
adc
xor
or
jl
aad
or
mov
je
mov
mov
or
dec
jecxz
rcrb
mov
inc
das
xor
sbbb
or
lcall
mov
rcr
dec
stc
inc
cmpsb
cmp
or
outsb
sub
hlt
rcrl
sbb
pushf
addb
loopne
jb
fwait
cmpl
das
add
adc
adc
addb
lret
fisubrs
fs
sbb
xchg
cltd
test
mov
lahf
xchg
mov
mov
mov
or
sbb
or
adcb
dec
lahf
mov
jl
scas
sub
int3
or
aam
dec
notl
and
and
or
inc
adc
cmp
insl
jns
dec
aas
xor
mov
pop
dec
add
jnp
adc
dec
pop
dec
pop
lds
push
jne
xor
imul
push
dec
aam
jl
nop
rcr
xor
test
and
dec
jecxz
ret
loope
jl
adc
xchg
cmp
xchg
scas
mov
in
pop
lea
lret
push
add
std
dec
cltd
divps
repz
out
push
push
xchg
call
cltd
jne
add
xor
out
jmp
data16
jle
mov
arpl
or
xchg
test
add
and
xchg
add
das
dec
lea
scas
xchg
repnz
data16
push
out
out
ja
jmp
cli
mov
inc
inc
inc
rclb
and
movsb
daa
push
mov
mov
adc
dec
gs
je
loop
xchg
int
in
imul
add
in
xor
jne
pop
adc
jp
dec
ss
fwait
ja
xlat
stc
sbb
xchg
ja
daa
and
aad
repz
and
xchg
jne
addl
dec
and
int
hlt
mov
inc
cli
sbb
addr16
mov
mov
cwtl
sub
add
subb
fs
data16
clc
sbb
and
test
sbbl
repnz
cmc
out
xchg
cld
inc
push
dec
std
push
insb
cld
scas
or
fidivs
mov
dec
aad
xor
sbb
pop
push
inc
icebp
cmp
loop
mov
jb
imul
sbb
std
sub
jb
outsl
pop
or
daa
fwait
cmp
in
lcall
scas
mov
cli
lcall
adc
or
aaa
mov
hlt
lret
insl
mov
jecxz
xorb
and
inc
xchg
xchg
add
add
sbb
leave
jo
bound
pop
sbb
sahf
lret
cwtl
pop
test
mov
jg
mov
daa
jmp
dec
ret
arpl
cmp
add
fdivl
pop
cmp
push
pop
xor
stos
inc
js
lea
sub
jbe
nop
sub
lcall
gs
call
mov
jb
and
push
inc
cwtl
add
iret
cmp
push
popf
inc
push
pop
sti
add
jmp
out
inc
in
sbb
rorb
clc
nop
mov
push
dec
inc
out
inc
push
xor
pushf
into
jge
xchg
cmp
pusha
mov
xchg
jle
movsl
sarb
and
push
fucomp
mov
sbb
and
and
or
repz
mov
mov
je
aam
imul
loopne
mov
in
push
pop
mov
cwtl
inc
push
insb
movsb
andb
notl
mov
add
ljmp
push
add
xchg
sbb
mov
popa
js
push
and
mov
test
xor
fcmovnu
sarl
add
test
xchg
lods
cmp
pop
in
ja
sub
cmpsb
or
mov
cmp
imul
stos
push
clc
xchg
push
pop
sbb
mov
ret
push
out
inc
divb
inc
in
hlt
mov
lret
imul
lret
or
xor
addl
arpl
scas
in
sbb
mov
cwtl
mov
and
jae
xor
push
jl
ljmp
or
adc
fcomps
sub
sbb
inc
adc
jne
dec
fidivrs
or
imul
xchg
sahf
jnp
lock
arpl
jle,pt
mov
sbb
jmp
and
xchg
sbb
jecxz
test
test
fisubs
xor
lods
rorb
std
cmp
or
cmp
loop
push
out
jecxz
xor
and
adc
sub
xor
and
and
addr16
xchg
pop
leave
lahf
in
aad
gs
mov
enter
lods
std
push
push
mov
push
pop
mov
sub
loop
pop
int3
jg
addr16
push
fisubrs
aad
mov
dec
mull
or
push
movsl
in
pop
pop
lret
ret
stos
pop
call
mov
aad
cli
jae
jle
sbb
xor
xchg
lcall
les
lea
daa
inc
flds
loopne
int
mov
test
mov
pop
ja
or
insb
mov
xchg
inc
jg
leave
loope
cmp
ss
sub
lods
dec
out
popl
mov
leave
pop
lds
ficompl
cmp
push
lgs
pop
push
in
fcoml
jle
fimull
adc
jecxz
iret
xchg
and
loop
and
lods
sbb
or
je
mov
mov
addr16
mov
cmpsb
js
mov
outsb
dec
jge
fisubrl
fistl
aaa
xor
and
lret
fwait
outsl
imull
clc
cwtl
xchg
push
adc
push
out
pop
out
pop
jno
push
and
scas
mov
mov
xchg
mov
or
mov
pop
mov
test
rorb
lea
out
stos
nop
mov
cmc
fs
pop
fstl
pop
cwtl
xchg
js
push
adc
cmpsl
sbb
decl
cmp
hlt
mov
aas
or
jmp
rolb
push
lock
mov
sbb
das
imul
mov
loop
data16
lret
mov
pop
mov
les
dec
repnz
lahf
or
fwait
leave
les
cmc
enter
fs
and
cmpsl
subb
nop
push
sbb
jp
adc
dec
jbe
lret
imul
mov
xchg
pop
sub
mov
shl
push
mov
lock
xor
ret
daa
cmp
dec
mov
adc
cld
sbb
pop
xor
out
inc
scas
pop
add
popa
movsb
outsl
mov
inc
es
rclb
insl
push
dec
dec
xor
lret
iret
cmpsl
dec
sti
aam
xchg
ret
data16
mov
mov
mov
sub
sbb
enter
xchg
jle
mov
lods
call
and
sete
xorl
xchg
and
sbb
sbbb
and
add
adc
filds
adc
mov
das
adc
jbe
dec
std
and
xor
mov
jnp
gs
xchg
inc
popa
cwtl
enter
shlb
popf
fldt
hlt
iret
popa
mov
jb
sbb
sub
inc
int
cs
ss
in
or
fdivr
inc
sbb
add
test
dec
fidivs
jle
and
std
adc
xchg
int
adc
mov
inc
mov
cmp
sti
scas
stc
shlb
mov
dec
mov
mov
test
mov
cmp
jns
xchg
dec
sub
in
sbb
movsl
lock
sub
adc
pop
jae
sbb
adc
or
jg
push
push
addr16
mov
nop
les
aaa
out
cltd
jno
fwait
cltd
jp
pop
fs
jo
jne
mov
mov
jle
loop
cmpl
jb
dec
and
test
add
cld
push
mov
adc
sbb
mov
psrlq
xchg
jecxz
adc
in
add
and
call
int
add
sub
sub
sti
lea
push
rcr
daa
fidivrl
in
ja
sti
mov
jle
mov
pop
popf
sbb
loopne
testb
dec
xor
orl
mov
in
mov
xchg
rolb
out
sarl
sub
aam
mov
mov
in
lret
mov
mov
imul
cwtl
cltd
in
js
add
push
add
jae
pop
inc
stos
inc
dec
add
push
cltd
and
add
mov
fsubl
or
aas
test
mov
push
add
lret
and
mov
mov
into
mov
nop
aad
mov
int3
mov
sub
rcr
iret
fisttps
inc
sub
out
jl
xchg
sbb
sub
pop
mov
mov
mov
jl
aam
jbe
sbb
insl
pop
aad
dec
pop
loope
pop
inc
sub
call
insb
repnz
pop
mov
mov
repz
cmp
xor
sbb
outsl
jae
fisubs
out
negl
xor
mov
adc
mov
lods
xchg
adc
stc
mov
lcall
lret
jmp
loopne
aam
fcoml
pop
mov
mov
cltd
push
jg
mov
mov
ss
out
adc
jbe
mov
out
data16
xchg
test
lret
xor
mov
or
dec
add
mov
or
push
aad
fs
and
sbb
test
data16
add
imul
fdivr
dec
out
cmpb
aas
push
jp
cmp
incb
xor
popa
xor
jnp
insb
das
lahf
inc
popf
adc
inc
ljmp
or
cmp
or
in
rcr
jmp
sahf
mov
jbe
and
add
inc
sub
stc
popf
sub
jbe
in
mov
cmpsl
insb
scas
out
push
and
push
lret
inc
sub
cmp
adc
subb
aaa
jmp
add
lahf
int
addr16
xchg
rol
mov
add
outsb
inc
mov
xchg
dec
hlt
cwtl
sub
sub
sub
fistpll
sub
je
pop
clc
cld
and
lret
pop
or
fnstenv
mov
mov
mov
orb
mov
aas
cmp
int3
cwtl
cmp
ret
mov
pop
mov
jl
jecxz
xor
fimuls
mov
in
test
in
push
adc
aaa
sbb
ss
sub
mov
or
test
add
mov
fldenv
pusha
jle
std
in
ja
push
testb
and
cwtl
cmp
insb
loop
mov
push
and
popa
arpl
xchg
notb
call
insl
in
fst
xchg
mov
sbb
xchg
mov
mov
mov
push
dec
jae
cmpsl
jae
or
stc
sbb
cmc
imul
test
outsl
fldt
iret
xor
add
mov
xor
jge
dec
mull
popf
cltd
dec
xchg
lods
inc
sbb
jl
and
pop
mov
xor
arpl
mov
and
mov
cvtpi2ps
cmpsl
cs
mov
dec
fldl
adc
jecxz
in
xor
ljmp
sbb
cmp
and
and
int
add
sbb
ret
testb
inc
movsb
lods
fisttpll
roll
loope
pop
divb
push
fsubrp
xor
mov
jo
js
fnstcw
inc
jae
cmp
enter
cld
arpl
aas
cmp
mov
inc
pop
mov
jbe
arpl
fmul
ret
into
out
enter
push
add
mov
mov
daa
xchg
aam
adcl
fistps
test
cmp
pop
je
stos
mov
call
mov
or
int
mov
mov
mov
shrb
mov
push
ja
xor
test
mov
ficomps
repnz
push
push
jp
lret
hlt
lea
jne
adc
stos
in
pop
mov
jo
imul
adc
cmp
add
and
sarl
lret
add
andb
dec
pop
fdiv
imul
cmpsb
push
push
jnp
cmp
je
mov
je
pop
not
rcrl
cmpsb
ret
cmc
stos
jo
insl
cltd
push
inc
inc
pop
push
sub
xchg
in
repnz
mov
test
lret
xor
xchg
lret
push
outsl
mov
sbb
pop
ficomps
jnp
or
ljmp
loope
jge
mov
xchg
mov
sbb
sub
aam
and
aaa
mov
adc
sbb
ret
imul
js
push
adc
adc
jle
lods
dec
jb
dec
and
cmp
insl
rorb
push
jbe
or
jmp
push
mov
jmp
lcall
mov
add
aas
mov
mov
mov
icebp
mov
dec
xchg
inc
push
pop
outsl
inc
in
xor
ds
fists
cmc
loope
and
test
mov
mov
ljmp
popf
imul
fs
cmp
or
movsb
xchg
push
add
sub
cmpsl
push
js
cmpb
test
mov
or
add
sahf
sub
ret
jge
lds
daa
push
inc
push
sbb
scas
mov
stc
xchg
movsb
sar
decb
in
outsb
push
jmp
jno
mov
jle
sub
aaa
fs
mov
fisttps
rcrl
aad
xor
aad
sahf
jl
dec
dec
mov
cli
sbb
ss
mov
into
imul
pop
inc
lock
push
dec
mov
pushw
cmp
push
cwtl
xchg
aam
jo,pt
pop
mov
cli
fsub
pop
or
or
mov
imulb
repz
icebp
ficompl
push
xchg
or
imul
loop
mov
mov
xor
ror
mov
add
clc
test
int
sbb
bound
sbb
cmc
dec
out
shlb
sarb
sbb
adc
js
sub
stos
push
ja
mov
mov
popa
leave
or
insl
cmp
lods
ljmp
and
cmp
rcrl
mov
fstpl
push
call
pop
push
stc
lret
scas
nop
gs
inc
mov
cltd
jne
mov
cmpsb
lock
sbb
mov
int3
push
cmpsb
mov
fdivs
movsl
sub
mov
outsb
pop
xlat
and
and
inc
mov
fdivrl
movsl
aam
in
divl
cld
in
xor
cld
pop
xchg
pushw
cwtl
leave
mov
mov
cltd
and
popa
pushf
test
and
sti
shlb
out
dec
stos
sbb
inc
in
mov
push
leave
ja
dec
pusha
scas
out
icebp
je
push
xchg
jb
enter
or
cltd
inc
inc
mov
notb
and
ljmp
fadd
mov
mov
mov
xchg
fiaddl
dec
jnp
dec
stos
rcrl
icebp
xchg
and
cmp
mov
jne
mov
inc
xor
add
jo
test
cwtl
outsb
repnz
inc
xor
xchg
dec
adcb
ss
sbb
jnp
mov
jo
shlb
lods
jnp
push
shl
pop
test
in
sub
mulb
mov
xchg
sti
shl
out
pushf
inc
movsl
sbb
mov
adc
divl
cli
inc
pop
negb
mov
loope
pusha
mov
filds
jno
leave
pusha
jo
inc
bound
fcomp
in
icebp
inc
fwait
les
fldpi
clc
cs
inc
fiaddl
std
outsl
sbbb
cmpsb
sbb
jae
out
outsl
dec
add
int3
mov
cmp
sbb
sbb
test
lea
cmp
leave
add
lret
push
pop
jl
fldenv
or
lcall
mov
and
test
sbb
out
mov
or
lock
sub
leave
lock
jns
xchg
sbb
loopne
cltd
cmp
xchg
or
lds
mov
lret
mov
rcll
in
lods
xor
xchg
add
add
fcom
jle
push
pushf
xor
mov
adc
add
in
cmp
dec
aam
arpl
aad
repnz
add
or
sbb
cmp
jp
cmp
lock
adc
inc
jo
push
je
pop
mov
sub
loopne
jns
xchg
sbb
int
cwtl
jecxz
push
and
arpl
hlt
inc
mov
mov
mov
mov
inc
mov
mov
call
adc
int3
mull
mov
pop
mov
sar
and
insb
mov
add
movsl
jmp
shrl
popa
test
mov
popf
js
push
scas
sti
insl
fistpl
imul
nop
je
mov
mov
dec
mov
inc
jne
repnz
into
aad
incl
or
xor
pop
ss
pop
jae
cmp
pop
mov
add
jg
pop
mov
mov
push
int3
mov
push
sub
mov
inc
shrl
pop
sti
mov
data16
loop
adcb
or
dec
pop
mov
sbb
xchg
das
leave
call
xchg
mov
test
outsl
sahf
cld
xchg
data16
js
adc
icebp
xchg
dec
sbb
xchg
es
and
nop
cmpsb
adc
add
xchg
es
xor
test
jne
sub
jge
insl
cmp
or
sbb
push
loop
pop
insb
iret
aas
mov
cltd
or
xor
mov
jnp
inc
mov
xor
pop
movsl
inc
pop
inc
mov
inc
fdivs
int
jnp
sub
cmp
test
and
scas
insl
test
adc
mov
into
push
dec
adc
mov
sub
lahf
and
aaa
cmpb
loope
pop
and
test
inc
and
sub
leave
or
add
adc
data16
lods
pop
mov
loop
or
jbe
mov
in
outsb
xchg
jge
negl
xchg
fildl
xchg
adc
or
scas
xor
pop
jmp
push
mov
mov
outsb
cmp
sub
mov
cmp
movsl
ja
cmpsl
xor
inc
inc
inc
mov
lock
cmp
xlat
hlt
xor
fst
insb
ret
in
arpl
mov
xor
aaa
cmp
rcl
mov
and
mov
mov
mov
popf
cmpsl
push
ror
cmp
loopne
and
dec
xchg
cli
mov
das
stc
or
cmp
sbb
out
add
aam
fcoms
jae
stos
xor
xor
mulb
add
decb
outsl
call
adc
mov
xchg
cmp
in
sub
adc
imul
sbb
stc
adc
sub
xor
mov
loope
xchg
lods
call
jnp
xor
inc
pop
push
imul
stc
ja
imul
or
into
aaa
repz
bound
lret
or
sub
fsubr
mov
notl
mov
and
cwtl
push
mov
out
scas
test
popa
jmp
out
jb
sahf
xor
dec
mov
rorb
fs
inc
inc
popf
iret
cmc
push
leave
mov
xchg
and
inc
jp
adc
and
dec
xchg
int
add
mov
cmp
sbb
fsubrs
sarl
lock
inc
add
outsb
push
aaa
out
imul
mov
xchg
sbb
into
xor
mov
sub
push
inc
mov
pop
pop
fisubrs
in
add
shr
iret
sub
jecxz
movsb
mov
vunpckhps
cltd
es
sbb
std
mov
aad
insb
in
fists
mov
jmp
cmp
jl
mov
mov
push
xlat
lret
xchg
test
popl
aad
or
js
adc
negb
fs
stc
push
ret
jo
adc
stc
pop
sub
mov
dec
ret
mov
enter
mov
mov
rolb
xorl
hlt
pop
mov
push
sbb
sahf
les
push
sahf
das
pop
sbb
push
inc
das
mov
test
and
mov
fistl
in
test
xchg
xor
mov
jle
sub
int3
clc
cmp
jmp
popf
pop
mov
iret
movzbl
repnz
mov
cmp
shrl
add
dec
sbb
sub
adc
xchg
dec
out
out
jb
dec
adc
push
test
dec
pop
sub
icebp
push
xor
pop
leave
nop
jge
mov
mov
fcomi
lds
xchg
int3
scas
enter
int
aam
scas
push
addr16
out
inc
ds
fmull
pop
adc
js
leave
and
je
xchg
xchg
imul
mov
shlb
mov
loop
and
xor
pop
mov
push
adc
xor
jl
cmc
sahf
jecxz
cmp
into
stos
add
xor
aaa
clc
mov
dec
test
fstps
mov
mov
mov
stos
or
jle
stos
aam
movsb
int
hlt
ficoms
push
loopne
pop
stos
sbb
repnz
dec
or
add
pop
jne
pop
shrl
movl
dec
xchg
add
or
in
xor
je
jo
out
sahf
call
shrl
out
rolb
das
mov
cs
insb
sub
mov
ja
int3
push
je
jne
call
cs
rolb
push
in
aad
mov
mov
cli
jmp
cmp
shll
add
aad
cmp
and
lods
adc
xchg
lret
imul
les
enter
rcll
popa
aad
stos
sti
leave
ret
add
sbb
cltd
rorb
sbb
jo
fwait
cmpsb
movsl
roll
outsl
dec
shrb
mov
das
icebp
or
mov
cltd
push
sbb
lea
push
int3
jge
pop
adc
mov
push
jae
mov
out
in
cmp
sub
inc
test
xor
adc
and
cmp
sub
jl
dec
dec
sbb
ss
ss
inc
test
lock
xchg
popf
iret
test
add
in
push
push
jge
shlb
call
xchg
cmp
push
push
add
cmp
loop
insb
ss
push
into
and
add
push
test
out
sub
pop
add
ret
imul
ror
pop
lahf
jecxz
fisttps
push
cltd
loopne
pop
cltd
or
add
xchg
data16
inc
push
fdivrs
jno
add
inc
sarb
xor
outsb
xchg
sub
xchg
jge
cmpsl
call
lcall
arpl
add
adc
add
jnp
cwtl
jp
pop
add
sub
mov
sbbl
incl
and
cmp
ljmp
pop
push
scas
or
loop
pop
cs
jns
lret
mov
out
test
or
aas
movsb
pop
lods
jbe
jmp
pop
lods
push
and
rol
xchg
ficoml
xor
mov
cld
icebp
imul
leave
dec
cmp
cmp
inc
mov
loop
push
ds
xor
mov
dec
add
push
push
push
pop
int3
sbb
push
adc
dec
add
cmpsl
add
fcomps
andb
pop
pop
jg
int
inc
xchg
or
cs
xchg
call
push
movsb
add
sbb
push
push
fs
pop
aaa
lret
fcom
ljmp
cmp
xchg
cltd
sbb
push
add
shl
cmpsb
divb
pop
leave
jb
xchg
divb
shrb
jbe
xchg
movsl
testb
cmp
xor
mov
mov
mov
push
and
shlb
into
jbe
or
jle
dec
loop
jbe
sub
dec
dec
mov
cmpsb
inc
jo
ficoms
imul
xor
sbb
jmp
fldcw
or
fisttps
cmp
add
adc
outsl
test
cwtl
cmpsb
push
pop
movsl
leave
mov
add
in
mov
daa
mov
cli
or
hlt
and
jnp
idiv
loope
inc
ja
push
mov
jmp
movsb
rcr
xor
outsb
jno
push
xlat
add
pushf
xor
jbe
push
fs
sub
fsubrs
sbb
or
lds
add
cmp
cmpsb
fs
push
add
xchg
push
xor
decl
add
cs
inc
add
call
adc
sub
outsl
adc
fistps
cwtl
lret
test
jae
pop
push
cli
mov
mov
gs
jne
cmp
call
add
add
mov
imul
daa
xor
dec
loop
mov
ss
stos
mov
into
cmp
or
loope
inc
js
jo
jbe
cmpb
cmp
cld
inc
enter
ror
idivl
and
popf
mov
jp
test
jg
xchg
adc
adc
es
lock
dec
fistpll
xchg
sub
clc
mov
push
cmp
and
mov
ret
mov
jbe
or
dec
pop
pop
shr
xchg
rorl
and
hlt
jp
popf
cwtl
mov
test
jbe
test
dec
ja
add
sub
ret
aaa
insl
out
call
sti
push
xchg
test
notl
and
inc
jns
stos
push
js
ljmp
je
ret
cld
dec
es
pop
xor
popf
dec
pop
lea
nop
mov
add
and
mov
ja
xor
cwtl
fwait
jb
jge
cmpsb
int3
adc
clc
cltd
aaa
jae
ljmp
sub
cmp
or
pop
stc
in
cmp
cmp
mov
fstpt
xchg
sarl
inc
and
jns
mov
stc
push
mov
stos
sahf
imul
push
xchg
mov
test
stos
push
ljmp
pop
mov
cld
into
pop
lcall
sub
push
imul
push
mov
iret
push
aad
mov
cmpsl
test
mov
lock
pop
xchg
add
cltd
dec
add
bound
push
js
pop
push
mov
pop
xor
outsb
dec
roll
mov
mov
inc
xlat
sahf
or
cmp
xor
loopne
aad
dec
xor
or
xor
call
fxch
test
outsb
leave
fidivl
sub
stc
jno
lret
jle
jb
xor
into
mov
stos
sub
dec
mov
cmp
fnstsw
xchg
mov
js
mov
mov
cs
push
hlt
push
adc
mov
sbbl
in
lret
lcall
fcmovnb
pop
cltd
fwait
sbb
call
enter
cmc
gs
push
cmpsb
sub
cmpsb
pop
xchg
shlb
fidivrs
cmpsl
cltd
xlat
cmp
push
push
mov
test
icebp
push
mov
push
inc
dec
add
push
call
jg
add
pusha
inc
mov
inc
jbe
nop
out
aaa
dec
jo
addl
lods
fisubl
mov
pop
in
xchg
lret
sbb
ret
add
into
pop
outsb
xor
aas
sub
jmp
inc
imul
pop
push
movsl
dec
add
mov
push
fwait
clc
push
ret
or
mov
push
xlat
cmp
test
lods
adc
fisttpll
out
xor
mov
in
sub
lcall
sbb
cmpsl
mov
adc
popf
sub
lret
aad
pop
shll
xchg
xor
lods
lods
mov
add
push
movsb
adc
jbe
add
fists
dec
mov
dec
ret
jg
jae
mov
bound
addr16
jle
das
pop
out
push
into
push
cmpsl
add
xchg
lret
insb
push
mov
pop
add
xchg
sbb
cmpsb
pop
imul
inc
ret
add
das
jmp
or
mov
sub
mov
stc
and
mov
sarb
xor
jnp
xchg
push
inc
pop
inc
inc
adc
add
imul
and
sub
inc
ret
dec
hlt
icebp
add
mov
lods
pop
sbb
mov
sub
mov
sbb
gs
enter
xchg
inc
addr16
addb
push
inc
pop
xchg
leave
fstl
sahf
mov
sbb
push
sbb
outsl
in
pop
lret
jg
cmp
not
and
add
dec
jne
int3
mov
dec
push
shlb
scas
ds
and
xor
jmp
mov
outsb
xor
movsb
addr16
cmc
mov
arpl
addr16
rol
cmp
enter
push
sbb
orl
pop
dec
cld
fdivrs
sbb
stos
push
aaa
roll
push
aad
stos
xchg
insl
and
cmp
jg
cltd
or
leave
jmp
das
int
inc
inc
pop
in
insl
out
pushl
fmuls
insb
mov
andl
or
jecxz
imul
rcr
mov
jnp
lea
or
test
lock
push
sbb
sahf
cmp
sub
inc
stos
push
jmp
pmovmskb
xor
cld
repz
xor
sbb
cmp
push
mov
aaa
mov
push
jl
push
dec
pop
jo
pushf
mov
clc
movsb
xchg
sub
jno
push
dec
mov
xchg
stc
jns
add
jo
add
mov
shlb
lret
or
cwtl
pop
cs
ljmp
mov
sub
icebp
mov
dec
leave
xchg
pop
or
sbb
cmc
popa
and
inc
std
ja
lea
jg
inc
sub
out
or
inc
in
mov
les
jbe
arpl
stc
fildl
inc
ret
xor
repz
and
loop
stos
inc
cmp
pusha
lahf
push
or
adc
gs
dec
inc
in
int3
inc
out
leave
xor
mov
stos
mov
push
das
xlat
xor
pmovmskb
popa
jno
shll
push
popf
push
into
jmp
mov
stos
jno
arpl
xchg
mov
pop
subl
inc
call
arpl
mov
movsl
and
pop
cld
mov
fistl
aas
int
cwtl
subl
pop
movsb
add
fwait
mov
cmpsb
ljmp
popa
cmp
xchg
lea
sub
jmp
cltd
pop
pop
cmp
cwtl
dec
xchg
ljmp
cmpsb
or
jp
pop
lods
hlt
adc
lds
das
xor
xlat
out
in
jnp
push
adc
xor
sub
and
mov
clc
insl
hlt
xchg
popf
and
test
inc
inc
shlb
mov
loopne
loope
xchg
or
inc
xchg
and
or
shll
lret
mov
out
sub
aas
cli
push
imul
aas
xchg
mul
lahf
shlb
inc
or
inc
xchg
sbb
outsl
fs
aaa
stos
lcall
gs
adc
lret
mov
mov
lcall
sbb
xchg
sub
loope
test
insb
sub
jne
mov
sbb
or
sbb
and
mov
push
iret
outsl
mov
lds
pop
insl
sbb
add
add
sbb
stos
mov
xchg
mov
stc
lahf
mov
pmuludq
rcl
ja
in
dec
sub
sbb
enter
ja
cmpsb
xor
cmpsb
and
cwtl
fsubl
test
testl
sti
inc
stc
pusha
rorb
and
insb
add
inc
push
sbbl
popf
scas
jmp
push
out
les
sbb
and
stos
mov
pop
ja
orb
pop
push
inc
push
xor
cli
into
inc
ffree
outsl
int
dec
mov
adc
inc
sub
std
scas
xchg
cmp
cmpsb
dec
jge
mov
or
aam
nop
std
test
inc
mov
mov
mov
add
add
mov
roll
sarb
dec
in
test
out
jl
xchg
sub
add
sets
enter
aaa
bound
push
dec
sub
popa
testl
pushf
push
outsb
adc
or
xchg
lcall
adc
jno
outsl
jae
push
mov
sbb
sets
ds
or
pop
nopl
pop
lods
jmp
sub
outsl
lahf
and
lahf
shll
adc
or
jmp
je
jbe
dec
add
in
inc
mov
mov
pop
or
outsl
mov
inc
mov
and
sar
aas
loop
push
sbb
mov
sub
les
cmp
daa
and
sbbl
dec
push
ss
and
enter
adcb
xchg
mov
andl
dec
aas
lret
call
and
mov
dec
jbe
add
mov
andb
push
or
mov
cmpsl
mov
rcrl
lods
mov
xchg
jb
lea
xchg
scas
scas
in
aas
insb
orb
lods
push
ret
in
xchg
test
cmp
xchg
pop
hlt
outsl
mov
addr16
and
mov
pop
movb
lds
outsl
sbb
insb
andl
jnp
lock
mov
inc
ds
pop
jbe
pushf
add
dec
push
scas
scas
repz
lar
jb
shr
cmp
cmc
push
je
push
mov
or
jnp
leave
ds
jl
mov
cmp
scas
lods
xor
cmp
xchg
mov
bnd
pop
aad
pop
pusha
stos
std
dec
ja
icebp
xor
mov
jbe
in
mov
xlat
dec
lahf
in
ret
sbb
test
mov
movsb
fisttpll
fidivs
dec
pop
adc
mov
icebp
inc
cmp
cmpsb
mov
pop
ret
and
xor
out
data16
hlt
int3
shrl
push
adc
lret
xchg
adc
lahf
jnp
push
xchg
fs
lods
clc
out
mov
cmc
push
out
repz
and
sbb
aad
dec
shrb
test
shrl
xor
fimull
cmpsb
mov
jl
sti
add
push
popf
addl
divb
lret
dec
cmp
jno
inc
sub
std
ss
or
jne
lahf
push
cld
stc
or
xlat
bt
fldcw
xor
pop
scas
jge
adc
icebp
mov
jo
hlt
cmpsl
lcall
clc
repz
je
inc
sbb
aad
fsub
adc
sub
adc
xchg
bound
cmp
sti
push
popf
push
mov
push
aaa
les
jns
sbb
imul
pop
in
ss
cwtl
repz
or
into
mov
neg
in
mov
mov
jbe
push
xchg
mov
repnz
iret
in
jmp
sbb
ja
fstpl
xchg
enter
mov
or
test
rolb
dec
js
xchg
outsb
into
sti
cmp
adc
fisubrs
sahf
gs
xchg
leave
jge
in
adc
mov
and
addr16
push
hlt
lea
or
data16
sbb
mov
test
xchg
sbb
mov
ret
les
gs
inc
iret
xchg
lcall
lds
lret
add
test
lods
and
jmp
or
sahf
ja
xor
ss
push
mov
sbb
shrb
xlat
mov
outsl
cmp
jb
cmp
adc
idivl
cmpsl
cmp
out
cmpsb
ljmp
mov
cmp
lret
inc
cltd
pop
js
ja
jae
xchg
outsl
dec
inc
pop
stc
fstl
hlt
cmc
cmp
popf
jle
ret
fidivrl
cld
add
jmp
enter
cmp
ss
pop
dec
cmp
cltd
stos
xor
inc
and
jmp
popa
cmpsb
jmp
fstpl
mov
mov
xchg
lcall
jle
mov
or
mov
lret
sbb
loope
push
jnp
jmp
int3
loopne
imul
push
leave
sbb
shlb
repnz
iret
leave
jbe
loope
bound
dec
call
lods
loopne
sub
mov
imul
dec
adc
arpl
dec
ret
dec
repnz
xor
test
and
out
inc
insl
sub
add
push
mov
data16
lret
jmp
xchg
lcall
pop
cmp
push
test
cs
sahf
mov
and
hlt
rcll
xor
inc
std
push
push
lods
icebp
ret
mov
mov
add
jns
jnp
or
sar
xor
rolb
xchg
stc
insb
sbb
xor
cmpb
xor
dec
push
fs
sub
fmull
dec
lods
dec
pop
sub
xchg
dec
pop
mov
ficomps
jb
pop
es
filds
mov
lahf
ror
xchg
les
cs
into
outsb
out
sbb
popa
in
into
xor
hlt
fs
call
mov
mov
mov
sub
cmpsb
mov
mov
arpl
xchg
daa
in
xchg
inc
movsl
mov
push
lds
push
mov
ds
arpl
js
data16
ret
cmp
out
cwtl
cs
clc
lock
xchg
add
stos
push
leave
sbb
mov
mov
dec
data16
xor
cmpsl
int3
and
dec
ja
fiadds
dec
jecxz
repnz
enter
sti
cs
sti
inc
fisubrl
loope
sbb
and
decl
andl
hlt
shlb
push
jb
adc
andb
inc
pop
sti
sub
jne
or
sbb
mov
mov
sti
in
push
inc
aam
insb
fstl
out
shll
into
and
adc
and
cmp
mov
and
icebp
mov
sub
iret
and
addr16
and
xor
mov
pop
scas
fwait
add
mov
add
push
int3
in
les
adc
fwait
test
ja
add
mov
xor
jl
or
insb
cmpsl
sahf
cld
fnstcw
jns
adc
js
fdiv
sub
mov
arpl
sub
mov
icebp
out
lret
mov
mov
and
ret
jl
movsl
sbb
rcrb
stc
mov
sub
aad
xor
aam
and
loop
inc
mov
cmp
jg
fdivrl
adc
push
pop
fsubrs
es
cwtl
or
dec
adc
pop
jno
sbb
cmpb
int
mov
outsb
or
mov
or
mov
sub
pop
loope
test
push
xchg
rcrb
dec
fidivrl
lea
jg
pop
outsl
adc
push
xchg
scas
xchg
pop
or
sbb
and
out
cmp
jge
add
xchg
sub
add
and
nop
das
jo
mov
dec
orl
test
or
aas
dec
test
into
outsl
dec
lods
mov
cli
add
cmpsl
or
sbb
fistps
sbb
fsts
lods
pop
sub
fs
adcl
dec
add
loopne
sti
out
push
or
push
out
sbb
mov
arpl
mov
jae
jns
out
jge
sbb
cltd
push
jae
mov
inc
ss
scas
int3
cli
jmp
dec
stos
push
sub
iret
fmuls
out
sbb
jne
iret
fsub
mov
mov
mov
adc
pop
cmp
test
adc
leave
jge
enter
in
jne
scas
cli
xchg
insb
stc
mov
jg
cmp
adc
loop
addb
in
loopne
cmpsl
cmpsl
xchg
dec
sub
jp
cmp
fisubs
aad
inc
inc
scas
add
lret
mov
into
push
adc
stos
mov
jge
fsubs
stc
cmp
inc
mov
inc
loopne
gs
scas
jae
and
xor
xchg
jo
scas
cmp
add
cwtl
insb
imul
mov
imul
shrl
sub
mov
pop
sub
sbb
cmpsl
aam
outsl
enter
imul
nop
inc
mov
sbb
ds
js
out
enter
ljmp
push
mov
cmp
les
inc
and
sub
lret
dec
aad
stos
ja
xchg
lock
popa
inc
std
or
jns
add
cmp
push
jl
dec
test
in
jbe
gs
jge
ds
xchg
jbe
inc
mov
popf
lcall
lods
repnz
js
popf
aas
daa
inc
jmp
dec
js
cmpsb
jne
mov
sbb
pop
adc
pop
cmp
add
out
jb,pn
push
mov
dec
jp
sahf
les
add
cmpsl
stc
dec
clc
jl
and
push
dec
and
adc
mov
iret
rorl
sarb
sub
std
fldt
pop
mov
pop
mov
outsb
pusha
daa
pusha
dec
jno
inc
push
jecxz
cmp
pabsd
push
jns
roll
add
dec
fmull
das
dec
ljmp
mov
mov
iret
sub
sub
xor
shll
dec
fcomi
or
mov
adc
jecxz
lock
mov
loop
ret
pop
add
add
clc
lahf
inc
xor
cmp
lods
jg
inc
inc
push
mov
xor
ja
xchg
and
jmp
scas
ja
adc
sahf
push
pop
test
imul
xchg
sub
ja
roll
dec
inc
jle
and
scas
clc
mov
shl
inc
js
ds
insl
loope
mov
imul
xorb
mov
aad
ficompl
daa
push
inc
xor
stos
add
sbb
lock
pusha
cwtl
push
xor
cltd
jb
pop
and
shrl
popf
mov
lcall
push
push
stc
lret
sti
sbb
jg
insb
mov
fiaddl
and
pop
frstor
ds
xor
cmp
dec
sbb
push
mov
push
sub
jb
ss
mov
inc
daa
test
sbb
xor
fistpll
mov
test
mov
pop
scas
mov
cmpsb
cmp
or
shll
repz
lods
lock
roll
sbb
bound
inc
mov
addl
test
popa
jmp
pop
push
out
cmpsb
out
adc
sahf
xor
std
sub
data16
pop
inc
push
movsl
pop
push
and
ret
pusha
push
sub
dec
or
into
push
pop
stc
mov
mov
fsubrl
outsl
dec
fidivrs
cmp
ja
cmp
aam
xor
pop
mov
icebp
out
pop
xchg
jbe
lock
adc
push
mov
ficoms
out
or
and
pop
test
imul
rorb
xorb
mov
int3
cmpsb
les
leave
or
dec
mov
daa
xchg
push
push
fcomps
sbb
pop
in
push
xor
sbb
loop
mov
out
jns
add
add
outsl
test
insl
xchg
mov
adc
jnp
mov
addr16
push
icebp
mov
or
mov
jnp
xrelease
xor
pop
in
ret
iret
pop
enter
rol
sti
jbe
lock
push
inc
flds
call
mov
mov
xor
and
cmpb
jge
les
mov
stos
mov
sbb
loope
popa
pop
sbb
fnstsw
jecxz
ret
sub
pop
test
xor
xor
dec
inc
cmp
adc
outsl
or
mov
xor
push
pop
lret
aaa
fisttps
or
push
push
gs
nop
push
lret
adc
xchg
mov
lret
xor
mov
dec
mov
js
fisubrl
lcall
mov
push
adc
jp
into
and
lahf
cmp
or
xor
xchg
cmp
iret
xchg
mov
mov
daa
inc
cmpsl
mov
jp
mov
mov
adc
cmc
ds
or
addb
shll
cmp
dec
push
pop
add
and
imul
imul
inc
or
jp
add
or
hlt
mov
pop
cmp
cmp
popa
shrl
insl
popf
sbb
lods
mov
les
in
sub
fcomps
xlat
inc
shll
jg
jg
lea
mov
mov
call
mov
std
dec
rcll
or
mov
mov
push
jno
adc
push
pop
fwait
stos
dec
imul
xchg
lds
fisubrs
mov
inc
mov
inc
fisttps
out
popa
pusha
clc
stos
adc
sub
clc
adc
lods
out
mov
pop
out
fwait
add
inc
mov
pop
xchg
jecxz
aad
push
sub
add
inc
cmp
mov
add
les
xchg
add
mov
fcoms
push
sub
ror
popa
and
fmuls
shll
shrl
filds
gs
subb
jl
mov
pop
push
push
lea
jnp
and
fs
ret
shll
lcall
icebp
test
popa
repnz
and
dec
addr16
addr16
stc
in
sub
fsubrl
jo
sub
pusha
add
imul
mov
shl
scas
movsl
jge
les
lea
jne
mov
fcomps
cs
sbb
pop
scas
add
daa
shll
push
out
mov
cltd
pop
jo
dec
mov
and
xorl
xlat
cmp
data16
aas
fnstenv
cwtl
sbb
cmp
sub
add
lods
andb
int
imul
xchg
fildll
clc
jmp
stos
or
jecxz
mov
ljmp
cmp
sbb
lahf
bound
dec
cli
rorb
adc
dec
xchg
xchg
push
into
mov
and
hlt
sub
sub
movsb
pop
gs
scas
enter
mov
imul
sbb
push
push
mov
xchg
bndldx
xchg
mov
add
add
mov
movsl
pop
aad
mov
shrb
outsl
out
sbb
sarb
xchg
dec
xchg
pushf
sub
into
stos
int
gs
xor
decb
mov
push
dec
ss
dec
cmp
inc
xchg
out
inc
test
xor
dec
pop
and
movsl
fsubs
dec
repz
cmpsb
std
sti
out
ja
add
inc
lret
push
xlat
mov
ret
mov
pushf
lcall
cmc
test
lret
das
jle
stos
or
mov
mov
and
pusha
lods
bound
out
insb
xchg
fwait
or
push
and
push
sarl
fs
push
inc
sub
pusha
int
and
repz
test
shl
pop
shrb
insl
ret
mov
aad
mov
mov
movsb
movsl
mov
push
jle
ss
mov
mov
xchg
out
pop
cmp
stc
xchg
in
sti
mov
icebp
mov
aam
ret
mov
and
repz
add
stc
sti
ds
mov
add
lcall
pop
test
mov
mov
icebp
mov
xor
pusha
imul
dec
js
ret
or
xor
jg
dec
cli
jbe
enter
and
inc
icebp
std
test
test
repnz
aas
mov
into
enter
dec
mov
lock
rcr
out
fs
loopne
jp
rorl
push
push
cmp
hlt
pop
popa
pop
and
pop
out
pop
and
arpl
jl
cli
das
outsb
js
ret
je
mov
cli
push
sbb
lock
and
add
ds
mov
xchg
pop
push
and
xchg
xor
aaa
shll
jns
aad
lock
xor
add
call
icebp
mov
or
jl
test
rcr
sbb
jle
xchg
or
outsb
fs
subl
inc
push
pop
aaa
stos
enter
ljmp
dec
stos
or
sub
sub
stos
adc
lcall
hlt
mov
mov
inc
push
jae
jnp
adc
adc
jecxz
negb
push
pop
push
sbb
mov
not
lods
fs
cmc
sbb
dec
insb
push
movsb
pushl
and
in
loope
pop
xlat
insb
mov
in
inc
mov
icebp
xchg
xchg
test
aas
imul
and
inc
and
movsl
ljmp
fldcw
dec
xchg
loop
push
dec
addl
xor
and
push
push
int
xchg
cs
xorb
sbb
xchg
mov
jnp
pop
xchg
lods
or
and
scas
hlt
inc
dec
lock
mov
add
xchg
push
xor
stos
ficoms
dec
mov
int
icebp
pusha
pop
jo
ret
mov
xchg
lock
out
xchg
sahf
ret
xchg
and
push
sbb
sub
insb
sub
pop
mov
mov
cmpsl
inc
lcall
mov
push
movsl
mov
jne
mov
xor
cmp
es
fisubrl
dec
adc
jecxz
xchg
clc
gs
hlt
loope
mov
push
push
mov
or
jg
push
and
fwait
movl
push
mov
add
or
mov
int
and
mov
jg
sbb
adc
jne
push
in
mov
jnp
push
jmp
aam
shll
xchg
adc
push
stc
adc
xlat
push
test
dec
push
daa
scas
dec
aaa
add
jg
inc
cmp
add
xor
dec
testb
push
add
std
mov
out
loop
or
push
andl
mov
jno
cmp
pop
jns
or
cmpsb
sbb
mov
dec
lock
pop
dec
jb
sub
push
bnd
xchg
mov
dec
fs
movsb
sti
xchg
xchg
dec
add
negb
xor
xchg
pop
out
mov
and
in
sbb
lods
jb
cmp
data16
inc
fs
xchg
imul
jno
adc
push
lock
call
test
xor
cmp
push
push
add
fbstp
ret
mov
lahf
pop
cmpsb
and
mov
icebp
adc
dec
int3
and
inc
jae
icebp
push
xor
in
je
sub
adc
addr16
dec
rorb
stos
fimull
dec
andl
fs
popf
mov
lret
jle
lcall
lock
dec
out
mov
lret
movsl
shlb
xor
fwait
jno
arpl
iret
mov
scas
ss
jns
loop
dec
sbb
lret
popf
push
in
pop
cli
out
xchg
rcrl
roll
jno
cmpsl
out
int
or
mov
cmpsl
cmp
decb
xor
test
test
das
out
test
ja
sbb
mov
xor
pop
inc
or
jae
popa
cmp
vunpckhps
inc
lea
mov
cmp
addl
and
es
or
xchg
bound
jg
mov
cs
sti
adc
dec
xor
pushf
lds
push
jne
jnp
jnp
jl
mov
dec
popf
or
divps
out
or
xchg
pop
in
in
add
xor
es
fwait
cmpsb
inc
les
repz
or
xor
popa
js
mov
or
sub
xchg
std
mov
outsb
fdivl
sbbl
mov
es
adc
outsb
xor
mov
xchg
sahf
inc
scas
inc
push
cltd
outsl
ds
mov
int3
push
aad
call
push
jbe
jmp
lds
scas
arpl
imul
in
or
jo
cli
xchg
mov
cmpsl
xchg
ds
ret
repnz
cmc
pop
push
xchg
inc
fsubl
jmp
dec
daa
enter
movsl
lods
scas
xchg
cmpb
pop
lea
test
dec
and
push
pop
test
insb
inc
adc
mov
icebp
inc
push
dec
xlat
push
pop
rcrl
sti
cli
jbe
dec
orb
cmp
xlat
mov
mov
dec
leave
mov
fiaddl
jmp
cs
adc
daa
cmp
sbb
or
dec
out
and
lods
mov
push
sbb
in
pop
pop
lods
or
pop
sbb
fs
shlb
xchg
xchg
sbb
pop
aas
jnp
mov
int
fdivrp
pop
fwait
xlat
call
cmp
addb
pop
inc
into
xchg
inc
mov
fstpl
int
jl
shl
out
push
pop
fs
jne
push
repz
in
ljmp
jle
xor
push
add
add
testl
or
aam
lods
jmp
lods
xchg
sbb
mov
mov
xchg
shl
aad
repnz
add
sub
roll
dec
mov
pop
and
pushw
mov
std
push
pop
xchg
jmp
in
roll
or
xor
es
xchg
sti
mov
mov
mov
mov
and
jecxz
push
pop
mov
sub
mov
mov
test
in
loopne
or
push
mov
pusha
mov
jge
jae
xchg
test
mov
push
in
sbb
imul
adc
push
loopne
aaa
xchg
out
repnz
jle
aam
dec
lret
movsl
cltd
add
xchg
dec
xor
mov
mov
and
test
and
insb
addb
ja
js
lret
lret
cmpsl
or
insl
stos
jb
sahf
dec
fwait
add
in
pop
inc
pop
or
add
rol
shlb
xchg
sarl
dec
mov
enter
scas
pop
repz
in
lret
fxch
icebp
gs
jmp
sahf
pop
adc
int
cmp
mov
mov
ss
push
pop
push
pop
xor
pop
add
mov
jle
push
clc
movsb
and
and
mov
add
push
dec
in
dec
lret
mov
dec
decb
jp
jl
cmc
loope
pop
xlat
pop
adc
imul
cmpsl
fsub
rcrb
or
cli
cli
sub
push
adc
add
rep
test
lahf
pop
push
mov
in
cmp
jo
shl
jecxz
jb
popf
shll
xor
push
dec
sub
mov
pop
and
inc
cwtl
jle
mov
add
das
inc
lea
pop
adc
mov
xor
lods
js
pop
leave
push
sub
addb
mov
adc
mov
gs
and
in
lods
and
jmp
xchg
push
mov
loope
int3
xchg
cmpsl
add
mov
shrb
and
jge
outsb
inc
jle
mov
sub
movsb
insb
pop
outsl
jl
cmp
push
js
fldt
jl
pop
fs
add
cmp
add
sbb
dec
xlat
addr16
iret
enter
or
or
les
cmp
sub
fcompl
inc
jmpw
fimuls
pop
push
leave
xchg
movsb
inc
rcl
inc
adc
push
and
sub
or
loope
scas
jmp
imul
cli
push
pushf
fwait
xor
lods
add
and
mov
mov
into
and
data16
sub
into
aas
xchg
sbb
lahf
adc
dec
iret
push
into
test
loope
dec
dec
scas
fsts
fcomps
cmp
ret
mov
jb
pop
jnp
sub
jg
test
dec
cmp
out
int3
inc
outsb
mov
rcl
inc
or
fnsave
xchg
call
sbb
mov
sub
popa
divb
push
add
outsb
loopne
jl
xlat
xor
out
jp
mov
mov
inc
aas
out
loope
int3
cmp
in
repnz
je
in
dec
cli
pop
cwtl
push
lds
xchg
xchg
fwait
je
imul
pop
xchg
ret
inc
adc
flds
notl
xchg
mov
outsl
fwait
mov
ja
push
stos
adc
fcmovu
mov
add
inc
jne
cwtl
jb
pop
add
jns
hlt
xchg
imul
mov
popf
and
in
js
inc
fbstp
fsubs
mov
xlat
std
cmp
inc
push
cmpsb
sti
repz
xchg
sbb
jecxz
outsl
or
push
dec
repnz
adc
mov
inc
subb
jp
pop
xor
test
xor
pop
loope
xchg
addr16
adc
dec
dec
fcmovbe
cmp
cmc
push
cmp
xchg
test
xor
xchg
icebp
pusha
and
or
leave
jne
cs
push
sub
pusha
pmuludq
cmp
mov
stos
push
hlt
icebp
pushf
ljmp
std
imul
test
mov
jo
xor
xor
in
sbb
mov
mov
xchg
nop
lds
fidivs
hlt
xor
inc
nop
sbb
test
es
xchg
sub
test
and
pop
pop
adc
xchg
mov
push
inc
xchg
jl
leave
and
sub
mov
pop
inc
adc
rolb
test
iret
jbe
push
loope
adc
add
cmpsl
mov
sub
dec
lahf
adc
xor
dec
testl
mov
mov
sbbl
jne
pop
inc
in
or
stos
out
adc
pop
push
enter
sbb
cld
jmp
imul
movsb
stos
orb
clc
in
dec
repz
pop
scas
aaa
call
adc
and
sub
aaa
pop
pusha
in
cltd
jge
sbb
mov
push
shrb
mov
imul
xor
outsl
mov
dec
push
cmpsb
push
add
xor
and
out
pop
sahf
lods
inc
adcb
imul
ja
pop
stc
lcall
mov
push
ds
shll
fdivl
stos
cmp
pusha
and
ja
and
and
test
adc
sbb
dec
loope
mov
cwtl
mov
dec
lcall
pop
repnz
xchg
mov
and
push
subl
mov
jl
sub
sarb
repz
jp
std
pop
daa
imul
int3
pop
push
fldt
aam
mov
dec
sbb
cld
fildl
cmp
outsb
pop
or
adc
push
out
jnp
mov
shrb
sub
scas
jns
mov
or
sti
es
fidivrl
movsl
cmp
mov
call
loope
iret
jno
es
cmp
add
sbb
xchg
add
and
dec
push
jo
in
test
es
aas
lcall
sub
mov
and
lret
push
xchg
jecxz,pn
adcb
data16
fsubrl
pop
dec
dec
mov
push
mov
mov
sub
pop
push
cmp
jb
sbb
cld
or
add
repnz
pusha
mov
ljmp
cmp
rorl
ret
stos
seta
jl
jg
jns
push
push
aaa
cs
xchg
cmp
fucomp
inc
dec
push
loop
xchg
dec
es
lahf
insl
inc
in
xor
or
or
test
pop
sbb
in
adc
cmp
setge
nop
gs
fisttpll
dec
mov
adc
jbe
sti
push
xchg
push
out
sbb
xchg
lcall
fnsave
mov
mov
aas
sarl
jb
aam
xchg
test
hlt
jno
add
and
inc
push
mov
icebp
stos
loope
sbbl
in
lret
xor
test
int3
dec
lret
repz
in
push
adc
mov
jmp
inc
shll
sbb
int3
popa
pusha
inc
mov
aad
pusha
sub
int3
pusha
mov
aaa
xchg
add
fdivrp
inc
jno
cld
cmp
roll
pop
mov
fstps
hlt
push
clc
outsb
push
in
mov
dec
cmpsb
adc
mov
lods
xchg
mov
fstps
or
sbb
jg
scas
jle
jl
enter
jno
js
adcb
out
push
in
loop
pop
add
push
mov
nop
mov
lods
inc
dec
xlat
xor
cmp
jnp
out
lods
call
xor
idivl
or
out
fldenv
imul
or
test
mov
dec
rorl
or
repz
pushl
xchg
in
xchg
or
mov
pop
in
adc
stc
mov
call
repz
sub
mov
repnz
fildl
mov
ficomps
sbb
push
mov
je
or
clc
xchg
arpl
push
add
dec
loopne
popa
lods
sub
jmp
cwtl
sbb
add
ror
fstpl
insb
dec
mov
mov
lret
xchg
aad
mov
push
mov
ficomps
sub
insb
inc
xchg
mov
dec
xchg
xor
sti
push
add
mov
mov
cmp
mov
mov
pop
nop
clc
loop
pusha
test
lods
add
jp
arpl
insl
xchg
xchg
mov
mov
jbe
hlt
aad
inc
jnp
shlb
xor
push
std
test
hlt
cmpsl
in
cmpsb
cmp
mov
fwait
adc
call
sub
mov
lock
dec
mov
mov
add
push
mov
xor
hlt
jl
mov
pop
push
das
icebp
lret
xchg
pop
adc
sub
jge
lds
add
jl
mov
inc
lods
cltd
repnz
movsl
addr16
add
popf
stos
mov
xor
out
gs
jns
jp
jnp
rcrb
lods
cs
mov
jmp
sbb
arpl
sti
and
push
cli
push
push
sti
xorl
push
js
sbb
addl
leave
jge
jae
adc
iret
popa
and
sbb
jne
sti
mov
or
dec
dec
and
cmp
andl
adc
pop
data16
jle
mov
jbe
adc
shrl
es
test
and
cmpsl
adc
pop
gs
arpl
jl
scas
xchg
test
mov
jb
pop
sbb
mov
mov
fdivrs
cmc
cmp
lds
adc
jbe
popa
inc
mov
out
mov
xlat
mov
dec
push
fstl
hlt
cmp
lock
xor
cwtl
dec
adc
add
pop
ret
out
lock
or
outsb
sahf
push
push
mov
cltd
ss
dec
loopne
push
jmp
imulb
inc
add
and
out
and
and
sbb
jb
sbb
sbb
int3
add
push
repz
pop
fiaddl
ficoml
daa
push
pop
push
ud1
push
cli
aad
mov
popf
jo
jno
xchg
mov
addr16
mov
mov
inc
cmp
sub
jno
sub
mov
pusha
xchg
int3
popa
fs
aad
ss
pop
hlt
sub
pop
in
loop
pop
in
adc
push
enter
sbb
pop
icebp
aam
sbb
pop
inc
inc
nop
mov
pusha
enter
sub
adc
pop
push
je
mov
pusha
add
mov
mov
cs
std
fwait
mov
lods
add
js
out
adc
and
push
mov
mov
lret
push
pop
sahf
jl
and
lcall
pop
fnsave
mov
push
minps
xchg
pop
mov
mov
mov
rcrl
mov
data16
aas
inc
pop
pop
push
push
adc
mov
push
loopne
xchg
movb
xchg
lea
jecxz
jp
mov
pop
inc
push
in
in
jbe
pop
addr16
mov
dec
sarl
js
and
mov
mov
paddd
repnz
mov
insl
cmp
mov
xchg
ret
ficompl
scas
xchg
sti
mov
cmp
stc
cmp
aas
ret
in
inc
stos
outsl
or
push
mov
add
dec
push
mov
les
jns
dec
cmp
jp
mov
mov
mov
insb
or
adc
dec
idiv
mov
stc
roll
sbb
push
aad
cmp
adc
pop
std
test
std
jne
sub
loop
pop
popf
loope
add
lret
push
pop
dec
rcrb
mov
das
inc
mul
mov
ljmp
mov
dec
pop
icebp
cmp
cli
xchg
sub
xor
aaa
jae
jo
clc
jge
add
mov
fisubl
cmp
mov
mov
cld
mov
ljmp
in
push
sub
notl
fwait
pop
sub
cmc
lea
inc
sbb
jmp
movsb
xchg
sub
in
sti
xchg
js
push
mov
fs
pop
in
daa
bound
int3
rcr
inc
dec
push
sbbb
xor
or
cmp
pop
dec
out
test
or
push
add
add
pop
adcb
subb
or
imul
scas
imulb
outsl
les
mov
ror
fisubrs
jo
mov
cli
add
mov
xchg
mov
insb
hlt
jp
dec
loope
sub
pop
and
and
addb
or
popf
popa
push
fiadds
test
movsb
in
loop
icebp
sbb
inc
xor
stc
cmp
popf
test
lods
pop
xchg
ljmp
cmp
imul
ja
mov
cmpsl
out
jl,pt
out
stos
insb
daa
divb
loop
pop
aaa
cmpsb
sbb
xor
cmp
dec
mov
dec
out
mov
mov
xor
or
inc
adc
daa
nop
pop
aas
push
ja
in
jl,pn
loope
pop
jns
xchg
scas
or
aad
orl
push
mov
cmpsb
inc
das
rcrb
pop
dec
shll
cs
sbb
icebp
dec
jae
xor
roll
push
push
mov
push
and
mov
fcompl
xchg
fucomip
out
cmp
sbb
jecxz
dec
mov
mov
inc
dec
addr16
test
stos
sub
adc
lret
cli
cld
inc
pop
pop
jge
dec
dec
dec
lea
lidtl
pushf
fistpll
out
or
subl
fwait
pop
scas
lret
and
push
push
push
out
je
jmp
push
and
arpl
imulb
in
mov
aas
repnz
push
movsb
js
add
adc
xchg
nop
fcmove
scas
rclb
add
std
sub
rcl
add
movsl
xchg
int
ret
cmp
fdivl
shrl
mov
cs
fbld
into
pop
mov
popa
shr
loop
jo
test
lahf
jne
cmp
cmp
jge
add
add
iret
stos
insl
es
je
mov
pusha
jecxz
pop
arpl
gs
pop
mov
sub
inc
std
cmc
leave
inc
aas
push
jmp
pop
in
in
cmp
fdivr
stos
stos
jge
cmp
mov
stos
pushf
cs
add
jg
mov
push
cs
pop
repz
pushl
mov
mov
js
cltd
and
out
cwtl
dec
push
lret
xor
ds
push
sub
das
dec
pusha
sub
or
inc
xchg
dec
mov
pop
push
fnstenv
mov
cmp
push
or
out
push
inc
lcall
loop
hlt
lahf
outsb
inc
jno
pusha
jle
pusha
addr16
stc
imul
adc
sub
inc
sti
mov
xlat
pop
cmc
push
fidivs
push
test
loopne
lea
out
cmp
or
mov
fwait
or
pop
or
ja
xchg
sub
fimull
arpl
adcb
rorl
cltd
lods
aad
push
jmp
scas
dec
icebp
hlt
in
and
imull
sahf
xchg
ja
nop
and
mov
sahf
imul
sub
mov
pop
mov
sub
cmp
negb
shr
test
jnp
adc
push
in
mov
cmpsb
cmp
and
scas
lcall
cmpsl
mov
das
mov
icebp
rclb
call
mov
aad
push
cmp
lods
mov
mov
shlb
in
cli
scas
mov
cmp
ret
dec
pop
xchg
push
rclb
add
mov
outsb
inc
lock
sub
push
je
dec
pop
into
sbb
xchg
pop
adc
sub
rolb
sub
pop
lret
push
inc
sarb
cmpl
add
cmp
cli
push
lods
mov
call
mov
scas
pop
mov
int
inc
push
stc
jne
movsb
mov
imul
fs
cmpb
jae
popf
jmp
std
pop
outsb
test
fwait
icebp
aaa
cli
sub
xor
xchg
push
mov
shr
push
xor
loopne
js
emms
xlat
xor
dec
cmp
or
mov
and
sub
push
pop
mov
daa
leave
push
and
or
fs
dec
clc
xchg
mov
das
aam
adc
pusha
jo
jl
test
sub
dec
loop
rorb
ret
push
fstpt
sahf
mov
sbb
sbb
sahf
aad
divb
jo
bnd
inc
js
adc
push
push
pop
mov
pushf
add
or
push
sbb
mov
jbe
lret
dec
aad
adc
add
out
iret
mov
js
pusha
das
adc
js
int
clts
out
inc
aaa
repz
mov
sbb
jge
sbbb
arpl
pop
push
adc
jne,pn
insl
mov
xor
not
mov
fwait
ret
mov
out
pusha
push
lea
push
inc
in
adc
fistpll
push
cmc
insb
stos
mov
imul
fistl
cmpb
jp
orl
pushf
xor
adc
outsl
test
cltd
push
pop
into
or
loope
xor
jns
out
pop
scas
insb
fisubl
bound
jb
repz
push
mov
adc
int
xor
cmp
mov
in
xchg
sbb
jecxz
jnp
fisubrl
mov
mov
jmp
stc
jmp
dec
stc
jp
in
mov
rol
jbe
cmp
std
lahf
mov
mov
jb
jb
push
repz
int
faddl
pop
jb
jmp
gs
push
pop
das
cmpsb
add
out
shrb
ss
mov
mov
mov
add
fildl
rcrb
cs
insl
mov
movsb
sub
ficoms
mov
adc
cmp
es
in
xchg
lcall
dec
stos
mov
add
mov
and
loopne
sarl
xchg
lret
out
mov
cwtl
jo
sbb
xchg
pusha
xchg
inc
mov
pushf
add
and
sub
mov
in
push
data16
push
fs
loope
inc
ljmp
lret
xchg
cmp
dec
add
sub
fdiv
inc
sub
fsts
cmp
dec
mov
ret
push
mov
pop
arpl
xchg
or
inc
inc
cmpsl
add
push
fcoml
mulb
pop
and
fildl
test
mov
push
pop
out
repz
sti
and
inc
mov
xchg
cmp
roll
divb
inc
inc
in
push
ds
test
push
push
push
int3
xor
jne
insb
enter
jne
push
cs
mov
pop
xchg
jo
js
mov
pop
xchg
fs
and
pushl
adc
das
rorb
cmp
mov
daa
aam
xor
xchg
push
shlb
lcall
loop
movsl
jnp
and
mov
jle
push
or
insl
adc
loop
cmpsl
dec
imul
dec
xchg
push
mov
shll
cmp
inc
subw
jns
sub
leave
cmp
sbb
jle
loope
xor
xchg
fisubs
sbb
imul
fbstp
mov
int
jne
mov
addr16
test
jl
in
sbb
fidivrs
jg
or
push
inc
mov
pop
inc
sbb
mov
mov
or
test
sbb
jns
mov
cld
insl
out
ja
pop
xlat
out
ss
mov
addr16
jnp
xor
sbb
or
mov
sar
mov
push
je
aaa
icebp
mov
jmp
repz
sbbb
mov
outsb
cmpsb
inc
and
arpl
addr16
sbbl
cmpsb
shrl
outsb
pop
arpl
cmp
adc
or
mov
jg
xor
je
cmp
fisubrl
push
rcrl
add
sub
popf
sbb
lahf
inc
inc
inc
ret
scas
in
test
loop
in
in
dec
add
das
cwtl
mov
fisubrl
mov
mov
and
jo
pop
or
sub
insl
cmp
js
mov
push
push
and
jg
cli
arpl
frstpm(287
adc
sub
inc
ds
hlt
jne
add
or
rcrl
test
aas
adc
test
xchg
loopne
sub
push
pop
dec
stos
add
adc
mov
add
mov
cld
in
adc
jne
xchg
dec
cld
sub
jmp
ljmp
cltd
lds
pop
mov
xchg
lret
or
mov
stc
ss
jl
and
ret
inc
xchg
inc
cwtl
test
movsl
add
lods
sub
sub
jp
fmull
rolb
ret
orl
ja
shll
daa
pop
addr16
cmc
cmp
mov
bound
mov
scas
lret
clc
xor
cmc
mov
add
sbb
jl
inc
mov
sub
and
movsb
leave
mov
repnz
jge
inc
xchg
and
loop
mov
sti
mov
in
or
imul
out
add
mov
jae
inc
or
xor
call
xor
xor
pop
outsl
fimull
movsl
cmp
jne
repz
je
pop
nop
cli
jge
xlat
in
mov
inc
mov
test
das
test
mov
mov
stc
inc
out
xor
sbb
xchg
mov
cli
sti
or
icebp
popa
fisttps
dec
jae
mov
pop
dec
mov
cmpsb
data16
icebp
pop
loope
out
loope
fprem
shrl
mov
and
lock
dec
repnz
cmp
inc
add
or
add
mov
fs
movsl
dec
bound
andb
jecxz
push
sub
pop
mov
dec
push
lea
adc
nop
push
sub
xchg
or
adc
cmp
sub
bound
or
xchg
xchg
add
xchg
mov
in
inc
sub
sub
jnp
mov
jo
loope
aas
and
ljmp
stos
mov
xchg
in
in
cmpsl
mov
data16
outsl
or
push
mov
testl
test
adc
cmp
test
lods
fisubl
push
es
ja
jae
test
mov
mov
dec
dec
jns
lea
dec
ror
push
sbb
aad
out
shll
pop
cmp
push
repz
inc
fildll
adc
xor
pop
inc
dec
xchg
and
jo
push
push
sub
sbb
and
out
adc
pusha
das
cwtl
popf
mov
cmp
push
cld
bound
xchg
pop
rcll
push
sbb
push
jns
cmp
leave
cmp
outsl
cli
mull
mov
clc
sub
xor
imul
and
push
pop
lock
mov
stos
push
dec
les
inc
push
in
xchg
dec
lret
data16
push
pop
cmpps
loope
fdivr
lahf
test
shl
adc
inc
mov
sub
push
mov
stos
dec
mov
sub
mov
outsb
push
mov
andb
inc
xchg
pushf
inc
xor
decl
jo
mov
cmp
push
jmp
xchg
and
out
jo
adc
push
xlat
pop
cmp
sbb
mov
mov
xor
add
mov
push
in
adc
dec
xor
insb
mov
into
sti
movsl
add
sbb
into
fistl
fbld
in
leave
into
cmp
cwtl
or
push
mov
loope
mulb
les
jecxz
orl
fmulp
pop
ja
imul
jne
fdivrs
mov
rcrb
jbe
hlt
test
repnz
aas
sbb
dec
pop
lds
xor
pop
nop
fsub
mov
add
mov
aam
pop
pop
xchg
fnstenv
mov
add
xchg
sti
ja
test
sub
enter
push
loop
pushl
mov
lock
sbb
jne
mov
roll
dec
adc
les
or
int
test
jmp
and
out
ja
jne
adc
push
jmp
xchg
lea
ja
popa
or
xor
outsl
cmc
fnstsw
inc
or
es
mov
in
push
push
loop
xchg
and
call
or
jno
or
nop
cmp
xor
jne
dec
rolb
lret
dec
ss
aad
sarl
adc
outsl
cld
mov
and
pop
mov
and
pushf
jecxz
push
mov
stos
ds
and
xor
sbb
fadds
shl
jmp
push
sub
mov
movsb
inc
test
push
push
unpcklps
or
push
ficoml
xorl
into
xlat
cmp
insb
jge
mov
xor
push
fbld
jo
sbb
aam
adc
mov
lods
mov
xor
dec
xor
pusha
pop
dec
sub
sbb
sbb
mov
ja
mov
jecxz
mov
push
jae
sti
repz
mov
dec
sub
sbbl
mov
jae
push
or
test
xchg
mov
inc
inc
in
cld
lods
mov
xor
mov
push
add
ja
inc
pop
or
mov
pop
or
stc
ja
sub
sub
cmp
pushf
subl
test
dec
or
sbb
or
xchg
repz
mov
xchg
xchg
dec
js
outsl
xor
mov
sbb
xor
lods
stos
in
sbb
bound
add
dec
inc
arpl
in
rorl
cld
rcrb
outsl
mov
insl
adc
bound
fsubl
das
dec
es
jmp
test
repz
call
rcl
sar
sub
in
popf
jl
cmpl
into
lock
cmpsl
mov
scas
push
sbb
test
lock
jg
dec
in
pop
das
and
mov
add
cs
js
dec
shr
push
lods
push
sub
mov
dec
out
push
call
sub
xchg
or
push
add
inc
cltd
in
negb
cmpsb
add
xchg
aas
stos
mov
and
scas
out
pushl
or
ds
mov
popl
mov
cli
push
pop
jmp
pusha
nop
dec
sbb
mov
loope
cltd
insl
jo
cmp
dec
push
jecxz
clc
jae
or
jb
movsl
mov
scas
mov
ja
test
fdivs
cmpsl
cmp
in
mov
lcall
ret
fisttpl
jae
xchg
scas
inc
mov
cmp
ficoms
sbb
rcll
sub
in
or
jp
mov
push
lcall
mov
and
push
sysenter
xor
fmull
js
xchg
lea
lods
add
popf
mov
push
xor
sub
jp
push
mov
in
mov
push
orb
sbb
pop
insb
ret
adc
das
xchg
mov
cmp
jl
inc
jmp
loop
xchg
insl
fcoms
xchg
xor
jno
push
push
in
popa
mov
add
push
sbb
data16
pop
pop
push
stos
arpl
jl
les
ficompl
mov
cld
mov
and
sub
xor
fs
movsb
add
repz
adc
les
cli
movsl
jmp
xchg
jne
test
mov
mov
lock
push
xchg
aam
enter
mov
xor
pop
cli
call
inc
in
ffree
adcb
mov
jecxz
gs
mov
xor
out
test
leave
stos
sub
dec
bound
rcrl
mov
movsb
sub
fistpl
movsl
sbb
sti
ffree
cmp
cmp
jmp
mov
gs
mov
inc
jne
pop
cmp
sub
das
push
dec
and
xor
push
movsl
cltd
and
cmpsl
add
test
lods
mov
push
adc
popf
pop
subb
cld
dec
jae
sub
shrb
pop
movsb
xor
adc
or
jbe
ret
dec
test
adc
ljmp
jp
loop
fwait
aam
jae
call
mov
addl
stc
inc
lods
jmp
data16
add
mov
sarl
push
inc
stos
mov
push
xlat
mov
xchg
lret
mov
jnp
cmp
testb
bound
das
pop
cmpsl
or
lds
shrl
mov
mov
pop
faddp
sbb
xchg
pop
push
std
jb
cmp
gs
stos
xor
pop
and
push
int3
jle
xchg
xor
adc
les
xorb
pusha
jle
loop
rorl
movsb
jle
xchg
lret
std
inc
adc
sub
jmp
shll
sar
aaa
inc
mov
movl
jle
and
imul
inc
loop
mov
js
sbb
or
jnp
pop
imul
ss
push
cmpsl
adc
insl
mov
lret
mov
sbb
ja
jae
mov
scas
mov
jmp
cs
push
sbb
cmp
gs
movsl
repz
mulb
cmp
sbb
push
lret
js
leave
sub
jmp
xchg
cmpsl
test
loope
jno
jns
mov
jo
mov
outsl
xchg
pop
push
jbe
xchg
sarl
add
push
clc
sub
inc
jp
and
push
push
leave
push
je
pop
shll
xlat
orb
xchg
xor
es
stc
scas
dec
sbb
rcl
push
or
popf
mov
mov
int3
int3
into
sbb
imul
imul
sbb
add
out
shl
push
add
insl
sbb
pop
xchg
stc
xor
xchg
rorb
fs
repnz
jl
sub
mov
push
dec
leave
ja
div
mov
daa
je
shlb
push
jl
xchg
dec
mov
test
or
std
or
out
imul
lret
push
test
scas
adc
loop
sub
imul
neg
jecxz
sbb
repnz
jle
mov
cmp
in
and
rcll
out
int3
fs
sti
ljmp
loopne
movb
jmp
xchg
out
and
aaa
andl
push
inc
xchg
daa
out
fisubs
push
jo
mov
jle
add
std
popf
leave
mov
movsb
add
mov
ret
dec
insw
loopne
sub
add
adc
fwait
jno
sbb
jno
pusha
mov
shlb
test
xor
pop
sbb
pushf
test
push
adc
out
insb
ljmp
pop
push
stc
add
mov
jp
hlt
loop
pop
out
jb
lcall
or
push
test
sub
movsl
aas
pushf
cld
aaa
sbb
mov
cmpsb
mov
outsb
cltd
and
test
fs
repnz
or
loop
or
imul
fmulp
shl
in
adc
adc
cmc
insb
subl
loopne
pop
movsb
sbb
cmp
adc
fidivrl
loope
scas
add
xor
shlb
or
mov
int
xchg
lods
push
movsb
push
outsb
mov
test
pop
mov
mov
sub
mov
xor
push
sub
imul
dec
jge
movsl
push
mov
mov
sub
xor
js
cmpsb
xor
addr16
mov
je
popfw
arpl
or
outsl
das
push
push
add
xor
cld
pop
out
mov
add
loopne
jno
jne
pusha
daa
mov
pop
push
fisubl
xlat
xchg
pop
push
add
les
ss
scas
mov
mov
or
push
nop
adc
lods
mov
cmpsb
and
and
lret
adc
mov
sahf
ret
mov
dec
and
dec
popa
dec
andb
daa
inc
fdivr
mov
cmp
repnz
inc
push
xor
sbb
adc
nop
test
test
lock
fiaddl
sti
aaa
mov
ljmp
inc
jae
sbb
cmp
insl
push
and
or
jae
int
lahf
shl
adc
aad
push
inc
push
pop
xchg
lds
dec
les
pushf
mov
test
loop
lahf
out
into
add
and
pop
stos
mov
mov
ret
in
cli
inc
mov
les
fadd
lods
stc
in
sahf
adc
js
ss
stos
sbb
fnstsw
xor
pop
lret
jge
sti
xchg
cmp
xor
pop
sub
push
sub
cmp
lods
push
mov
xchg
jnp
out
pop
cmpsb
in
push
xlat
mov
lret
pusha
sub
jo
push
mov
mov
jl
sub
arpl
movsb
out
or
shll
stos
ss
adc
dec
and
cmpsl
push
ret
mov
pop
sarb
add
ja
dec
outsl
rep
outsl
subb
std
in
pop
mov
xor
xchg
test
lret
jne
dec
mov
negb
fdivr
enter
xchg
fwait
xchg
insl
repnz
xor
cmpsl
lcall
sbb
lret
stos
aam
inc
mov
inc
add
iret
and
xchg
or
mov
inc
aad
pop
sub
dec
jmp
je
shll
aad
add
aaa
sbb
cwtl
jecxz,pn
sahf
inc
outsb
mov
test
and
adc
popa
push
pop
push
outsb
jp
jp
sbb
mov
enter
and
inc
push
and
adc
xchg
xchg
mov
ss
add
out
enter
fisubrl
pop
jmp
xor
cli
mov
das
test
push
jno
xchg
inc
lcall
dec
sti
ret
inc
cmp
movsb
jmp
push
loope
cs
call
jo
aaa
xchg
push
jg
stos
repnz
pop
imul
lods
jmp
pushf
pop
jmp
and
fwait
rol
mov
jae
push
shr
and
push
insl
clc
inc
mov
rcr
enter
push
test
repz
fdivs
into
pushf
rorl
fmull
mov
sbb
shrl
lock
xor
aad
cwtd
mov
popa
push
js
test
cwtl
or
testl
andl
lcall
sub
mov
mov
data16
or
xchg
cltd
xor
js
rcrl
xchg
lods
cmpsb
stos
ret
xchg
imul
mov
arpl
and
push
xor
mov
bound
mov
into
lea
mov
push
insb
cmp
out
xchg
out
sbb
shrl
jns
insb
dec
data16
fwait
jo
add
sti
lret
leave
push
fdivrl
mov
sbb
mov
int3
lcall
je
leave
es
jne
add
jl
aas
ret
movsb
testl
sbb
fs
ss
xchg
push
imul
mov
or
jecxz
fwait
xchg
es
sub
cltd
xlat
mov
hlt
sbb
jmp
lea
cld
out
jg
sbb
and
mov
into
push
test
cmp
add
pop
inc
subb
pmaxsw
jp
ret
sub
lcall
mov
flds
mov
fwait
or
fs
clc
cmp
adc
push
and
add
add
xchg
shlb
xchg
pop
icebp
mov
jne
enter
pusha
xchg
inc
std
loope
xorl
push
push
dec
push
adc
sbb
xor
lods
jecxz
mov
inc
gs
test
mov
daa
stos
jl
xchg
xchg
xor
push
sbb
jmp
cli
push
add
cmpsb
pop
stos
mov
dec
subb
xor
fdivrs
popf
ret
nop
insl
imul
movsb
jmp
stos
loop
scas
sub
out
loop
imul
cmp
sub
icebp
pusha
bound
jnp
mov
xchg
sbb
pop
inc
test
cmp
sar
dec
cld
push
fimull
dec
add
push
arpl
pusha
out
inc
mov
push
hlt
mov
in
pusha
lea
or
ja
push
cld
js
cmc
adc
and
push
add
sbb
sahf
dec
daa
jle
js
push
rcl
lret
add
add
in
mov
test
lcall
popl
xlat
mov
loop
fadd
inc
xor
cmpb
push
push
mov
fsts
iret
inc
outsb
and
xor
mov
jp
jmp
or
dec
add
jbe
xchg
pop
mov
in
mov
add
sub
push
or
mov
pop
and
dec
push
sbb
fsubrl
popl
pop
xlat
das
cld
inc
or
jns
test
jns
out
or
sar
push
mov
out
pop
stc
icebp
sbb
test
add
mov
lods
subl
pusha
add
ss
mov
jbe
int3
dec
mov
or
add
mov
fdivl
adc
dec
outsl
jbe
in
cmp
mov
pop
faddl
fdiv
mov
sbb
xor
cmp
aas
out
xchg
fbld
pop
popf
add
stos
roll
sub
repz
inc
ljmp
xor
sub
jb
stos
push
push
ficompl
insb
jbe
iret
cmpsl
xchg
aas
outsb
lcall
xchg
sbb
pusha
push
insb
js
cltd
jbe
rcrl
cs
enter
push
fistl
and
sbbb
dec
scas
add
popa
cs
cmpsb
mov
orl
testl
push
jecxz
dec
push
lea
dec
mov
xor
push
rorb
mov
addr16
mov
fwait
bound
ds
stos
jne
inc
jge
in
mov
pusha
fwait
call
mov
scas
movsl
data16
sub
into
xchg
jge
lret
and
mov
inc
arpl
mov
js
mov
xor
arpl
jbe
push
cmc
ror
fsubs
xchg
inc
pop
cmp
lea
mov
mov
jmp
out
pushf
lea
sbb
mov
mov
addr16
sbb
jne
and
jmp
and
jl
push
cld
data16
or
test
test
test
mov
xchg
adc
adc
gs
dec
mov
cmpsl
cmc
addr16
hlt
rolb
adc
push
filds
or
and
lahf
sti
popa
jb
inc
mov
jmp
xchg
into
das
push
pop
sbb
popa
mov
test
in
repz
cld
imul
mov
mov
bound
out
je
add
adc
test
scas
pop
aaa
jle
pushf
pop
mov
mov
lods
xor
dec
mov
cmc
push
lcall
mov
sub
jg
mov
lods
xor
xor
mov
inc
cmp
in
test
sbbb
scas
popa
sbb
dec
add
mov
adcl
je
clc
or
fcomps
xchg
sbb
rol
ret
xor
popf
dec
sub
push
inc
jae
stos
sarb
push
add
aam
cmp
pop
xchg
std
lock
dec
in
bound
sub
das
jp
mov
dec
jge
push
stc
adc
imul
jg
andl
push
jo
pop
mov
loop
lahf
inc
aad
repnz
cld
jge
pusha
cmp
jnp
push
into
leave
pop
xchg
xorl
inc
dec
and
test
xchg
in
jnp
and
ret
cmpb
jae
movsl
mov
into
rclb
jl
mov
or
clc
jo
int3
jmp
or
mov
test
fisttps
or
jb
or
push
xor
aas
xlat
mov
sub
mov
sbb
stos
mov
cmp
push
sbb
popa
add
cmp
aam
mov
sbb
mov
sarl
mov
sahf
es
pop
xor
lcall
inc
xchg
int
es
mov
cmp
inc
orl
sbbl
lret
dec
gs
sub
fcomps
inc
mov
push
pop
scas
loop
fadds
fidivrl
dec
into
push
pushf
sub
popf
les
std
lds
out
dec
sub
adc
mov
es
cmp
lods
xlat
popf
push
fsub
mov
dec
stc
and
xchg
insb
loop
int
in
pop
inc
or
es
lods
int3
leave
xor
enter
push
rorl
push
jp
jb
inc
inc
and
bound
push
clc
pusha
aam
lcall
shr
outsl
jl
pop
jo
mov
js
imul
push
sub
dec
or
pop
in
in
cwtl
outsb
xchg
mov
dec
cli
pop
mov
push
pop
adc
or
or
lret
ja
popa
std
mov
sbb
addr16
or
jo
shr
outsb
daa
push
dec
adcl
cmp
lret
inc
xchg
lret
cmpsb
xchg
popa
dec
shll
xchg
roll
cltd
cltd
das
shlb
cmp
and
rcr
jo
mov
xor
in
fbstp
fcmovne
xchg
imul
cmpsb
cmpsb
cmp
cmp
jb
and
clc
xchg
inc
pop
lock
lahf
xorb
dec
ret
aad
mov
ja
cmc
or
mov
je
mov
fs
dec
xor
cwtl
out
add
adc
aaa
scas
jg
dec
into
mov
xor
or
mov
jno
lret
lret
rorb
lret
test
ret
adc
adc
mov
jmp
popl
imul
push
imul
lods
aam
jmp
movsl
dec
mov
fwait
es
adc
lock
cmpsl
loope
in
sbb
pop
and
adc
pushf
xchg
mov
lds
mov
mov
add
inc
fcomps
jmp
repz
inc
out
inc
nop
out
rcll
mov
dec
add
cwtl
lret
dec
mov
and
sbb
mov
lds
dec
cmpsb
iret
std
or
and
adc
mov
fisttpl
sbb
fsts
pop
and
adc
sbb
xor
adc
pushf
ljmp
mov
cmp
jb
les
pop
inc
xchg
mov
cmpl
cmp
cwtl
icebp
xchg
pushf
cmpsl
and
aas
mov
dec
adc
mov
mov
mov
mov
sbb
mov
stos
mov
push
out
test
test
and
imul
ljmp
sub
fwait
imul
ljmp
inc
dec
jl
dec
sbb
mov
mov
pusha
ljmp
outsb
das
aas
addr16
lret
mov
xor
imul
fs
cld
shll
xor
pop
in
push
cmp
adc
stos
sub
xor
xchg
das
aas
push
jecxz
jb
fstps
daa
mov
jecxz
sub
add
loopne
pop
cwtl
or
movsb
mov
push
loop
icebp
mov
test
push
pop
int
add
and
mov
mov
inc
sub
cmp
inc
in
ljmp
popa
sub
dec
push
imul
cmp
dec
aad
inc
jge
int
icebp
mov
jo
xlat
aaa
fsubp
mov
xor
stc
cmp
pushf
mov
outsl
fcom
xchg
mov
addr16
cwtl
ret
ss
lea
add
fcoms
es
xchg
inc
mov
sub
into
nop
fcoml
fisttpl
out
arpl
pop
cmc
mov
cmpsl
sub
xchg
sub
rol
js
xor
mov
mov
mov
fsts
dec
mov
push
jno
jne
xor
loope
dec
xchg
push
xchg
shrb
sub
les
hlt
enter
outsl
sub
push
test
cli
xchg
add
or
inc
pop
leave
roll
imul
and
and
adcb
scas
inc
fidivs
xchg
add
packssdw
dec
mov
aas
aas
lahf
out
movsb
pop
mov
and
or
inc
mov
popf
je
inc
frstor
jl
xor
push
mov
add
dec
inc
das
fs
mov
mov
out
mov
call
repz
jno
nop
inc
pusha
in
inc
pusha
scas
pop
jbe
fildl
sbb
xchg
sar
sar
mov
sub
sub
jecxz
pop
push
int3
mov
mov
jns
pop
pop
jmp
lahf
rol
icebp
inc
repnz
mov
or
subl
ret
iret
add
push
sub
or
add
sub
iret
mov
ds
adc
xor
adc
push
xorl
inc
lock
pop
push
sbb
cmp
dec
sub
pop
mov
fdivrl
jb
or
stos
out
sub
icebp
pop
xchg
cwtl
mov
and
xor
pop
das
push
les
mov
cmp
mov
sahf
jo
iret
loop
xor
dec
mov
ret
call
xchg
push
dec
and
or
clc
push
mov
pop
je
sbb
mov
lock
in
sbb
and
rcrl
xor
arpl
mov
cmc
es
call
pop
dec
mov
adc
inc
jbe,pt
ss
or
pushf
adc
jl
add
dec
add
out
xchg
ret
out
sbb
jge
pop
pop
ds
jg
inc
cmp
or
cmpsb
in
lock
das
push
out
mov
push
fwait
xchg
mov
xor
inc
or
insl
jae
jae
pop
testl
hlt
and
sahf
sbbb
loopne
mov
push
int3
out
and
testb
in
ss
adc
arpl
arpl
decl
mov
movsl
sar
hlt
rcrb
adcl
arpl
movsl
rclb
pop
jae
pop
dec
mov
adc
push
mov
adc
pop
inc
mov
out
cmc
and
sub
test
jge
push
cmc
jle
lea
aad
jno
mov
loop
fs
push
pushf
pushf
cmp
xor
lock
daa
shr
dec
jns
mov
or
xor
out
dec
mov
lea
push
pop
inc
or
sub
ss
push
shll
insb
movsb
negl
cmc
fnstsw
adc
je
repnz
popf
repnz
sbb
pop
ds
fldl
jp
cmp
xchg
fistpl
xchg
out
scas
xorl
add
jbe
xor
sti
and
in
outsl
push
mov
lods
js
sub
xor
adc
jp
mov
mov
jle
xor
mov
add
rorl
cltd
jmp
dec
mov
mov
sbb
sub
mov
test
xor
mov
pop
out
mov
enter
sar
dec
xor
jbe
fwait
sbb
dec
dec
inc
pop
push
aaa
adc
sbb
push
call
sti
mov
mov
imul
dec
adc
stc
lea
mov
movsl
rolb
push
ljmp
pop
fstl
fdivp
sub
push
jne
test
repnz
es
sahf
pop
cli
lods
push
pop
aaa
jmp
out
cmp
shrl
xchg
out
sbb
or
mov
popa
ds
fs
lods
mov
xor
lahf
push
cmp
or
addr16
repz
insb
cmp
jge
cmc
sbb
add
inc
dec
mov
or
push
sarb
xor
cmc
xchg
out
and
sbb
daa
mov
mov
mov
stos
and
xchg
sub
aam
xchg
imul
xchg
or
addr16
jl
imul
in
movl
insl
sbb
or
xor
dec
xor
and
add
insl
push
xor
dec
inc
popf
add
mov
adc
test
outsl
ret
ret
sub
test
xchg
daa
mov
lock
mov
std
mov
inc
fidivs
mov
add
mov
jnp
and
push
mov
shrb
push
pop
and
lods
xchg
out
or
pop
sub
aas
jl
mull
sub
pop
cmp
pusha
call
or
push
mov
pop
adc
mov
mov
mov
out
mov
cmp
loop
idivb
mov
lret
lret
call
cmpsl
jo
out
stos
inc
add
incb
mov
mov
arpl
cmpsb
pop
add
ss
jns
js
and
rcll
mov
cli
add
cltd
push
mov
cmpsb
push
stc
outsl
push
loope
fldt
xchg
clc
adc
dec
out
or
sbb
mov
jge
and
inc
pop
dec
xor
cmc
mov
xchg
ljmp
sbb
mov
arpl
push
push
mov
dec
sarb
fnop
pop
or
xor
scas
adc
adc
aas
test
stos
or
pop
mov
jbe
dec
inc
fsubl
sub
xor
cmp
mov
or
mov
push
lea
push
mov
pop
ret
call
fdivl
pushf
cmp
or
adc
mov
jb
mov
push
hlt
daa
pop
lcall
dec
jl
fsts
jnp
push
mov
add
addr16
cld
push
add
adc
hlt
jle
hlt
mov
cmp
sub
xchg
fidivrl
inc
in
xchg
dec
mov
lret
outsb
mov
stc
outsb
aaa
aad
push
dec
mov
dec
and
lods
sbb
fists
lretw
cld
sub
int
xchg
add
jge
flds
mov
xchg
ret
sbb
jl
dec
push
push
fcmovb
imul
cmp
push
mov
or
sahf
mov
and
inc
sbb
push
ret
cwtl
pop
jo
imul
adc
movsl
xchg
nopl
inc
repz
inc
mov
push
popf
fnstsw
int
sub
sti
cmp
in
stos
leave
mov
test
scas
jbe
or
sbb
js
movl
int3
xchg
add
dec
xor
arpl
adc
pop
lcall
pop
sub
xor
out
sub
lods
inc
imul
popa
adc
cmc
cmp
ljmp
xor
xchg
stc
sahf
add
add
pushl
iret
std
xlat
mov
pushf
push
adc
xlat
test
mov
jbe
aaa
jno
mov
or
mov
inc
and
xchg
cmp
inc
push
nop
sbb
jp
and
xor
loopne
push
enter
ficoms
inc
cmp
mov
faddl
xchg
test
ret
xchg
lods
sbb
aas
cmp
cmpsb
jb
sbb
cmp
mov
cmpl
in
aad
iret
push
aas
roll
xor
or
xchg
stos
loope
rcll
and
jmp
mov
ror
mov
mov
out
push
add
and
std
jae
xchg
addl
stos
xchg
je
jns
in
loope
push
add
pop
cmp
addr16
sub
scas
loope
jmp
lahf
fnstenv
push
int3
adcl
ss
out
xchg
out
in
push
sub
jl
sbb
stc
mov
aas
sub
cltd
add
sahf
inc
clc
push
sub
pop
sbb
std
add
in
stos
rcrb
jp
cld
adc
pop
mov
insl
cmp
cli
push
gs
mov
stos
jle
cmpsl
mov
mov
inc
int
add
or
scas
test
or
lods
icebp
add
and
add
sahf
or
mov
or
mov
popa
pushf
lods
andnps
and
dec
jno
idivb
push
call
cmpl
icebp
fwait
dec
or
sahf
xlat
add
aaa
mov
adc
jle
cmp
dec
insb
lods
jecxz
adc
mov
es
sti
icebp
or
sbb
lock
mov
pop
mov
or
and
mov
xchg
jp
jp
outsb
in
fnstsw
or
loop
addr16
pushf
and
cmp
add
enter
sub
int
push
cmp
cmp
cmp
push
xchg
stos
cld
cmpsl
getsec
leave
mov
nop
xor
sbb
push
mov
mov
outsl
ficoml
cmp
pop
pusha
jecxz
int3
jp
push
jnp
movsb
xor
test
xorl
shr
xchg
lret
pop
stc
mov
jno
mov
arpl
out
es
inc
adc
pushf
data16
leave
cmc
loopne
lods
flds
sbb
push
and
add
cmp
xchg
cmp
cmp
dec
int3
sub
aad
test
jmp
mov
sbb
imul
xor
xor
sarl
loopne
cmc
or
std
pop
xchg
inc
in
sarl
add
xor
push
sahf
mov
push
cmp
add
dec
test
out
xor
adc
push
das
pop
jecxz
push
cmp
fucomi
rorb
fimuls
scas
dec
cmpsb
clc
ds
test
jnp
inc
mov
je
mov
pop
cli
mov
dec
adc
leave
cmp
adc
addr16
cmpsl
sbb
mov
lea
jecxz
iret
insb
lcall
push
test
sub
mov
jmp
movsl
aas
mov
ss
insb
loopne
mov
sub
divl
mov
or
cmp
and
imul
mov
mov
xor
ja
pop
xor
jg
movsb
sbb
adc
xor
inc
sbb
mov
sub
fpatan
add
add
andb
movsl
shlb
fcomps
stos
mov
test
adc
xchg
stos
or
adc
mov
inc
lret
pop
inc
imul
xchg
jae
lcall
cs
lahf
mov
mov
lods
xlat
outsb
test
not
leave
inc
and
rcrl
rorb
outsl
xchg
int3
out
pusha
adcb
lcall
cwtl
ja
mov
push
lcall
and
cld
cwtl
mov
pushf
loop
sti
je
shrb
xchg
stc
or
fwait
mov
test
inc
jne
popf
fsubr
push
lea
jmp
xor
pushf
jmp
lcall
mov
fidivrs
dec
push
mov
mov
pop
adc
mov
sarb
insl
inc
dec
ja
mov
subl
stos
sbb
push
lret
mov
in
cwtl
ret
push
lret
fadds
xor
clc
out
aam
push
movsl
or
xor
imul
adc
lock
and
ja
fs
fwait
inc
repz
cwtl
mov
stos
out
in
cmpsb
push
mov
xlat
cmp
adc
xchg
in
divps
aaa
cmp
mov
sub
imull
xor
scas
lret
cli
insl
cmpsl
dec
xor
jp
and
daa
ljmp
xchg
dec
xlat
test
arpl
cmpsb
clc
pusha
js
ret
cmc
sub
out
add
shrl
pop
jg
cmp
adc
lds
push
pop
jl
outsb
jmp
int3
add
sbb
loop
mov
mov
pop
ljmp
mull
mov
cli
movsl
adc
mov
subb
leave
jne
outsb
je
ds
or
ffree
pusha
clc
fimuls
aam
ret
fdivrl
jns
roll
sbb
repz
mov
fiadds
lret
insl
loopne
xorl
jl
lock
ja
test
add
hlt
dec
mov
mul
xor
xor
pop
in
cmp
jle
inc
mov
icebp
mov
ficoms
cmp
xchg
rcr
sbb
jp
mov
popa
add
loope
lcall
cmp
jecxz
lock
push
mov
ror
rorl
enter
fnstsw
pop
push
fs
push
pop
loopne
scas
mov
dec
mov
jle
pop
mov
fstps
jb
incl
nop
dec
clc
cmp
clc
push
stc
add
sahf
cmpsb
sarb
push
stos
or
add
inc
movl
outsl
mov
jno
dec
outsb
loop
push
mov
or
mov
shr
and
jnp
mov
dec
leave
lcall
inc
mov
add
mov
les
dec
jmp
std
movsb
push
push
mov
push
dec
fs
jae
les
dec
add
mov
xor
and
test
sti
adc
lret
pop
pop
adc
xchg
push
and
inc
bound
or
or
iret
sub
cmp
jns
xlat
rcrb
lock
fst
bound
dec
jo
sbb
shlb
loop
aam
mov
cli
push
ret
mov
divb
xor
sub
xchg
fdivrs
or
pop
adc
add
stos
sarl
and
mov
ss
xchg
and
cmp
mov
cli
icebp
aad
repnz
fwait
je
fisubs
insl
je
shlb
xchg
mov
orb
iret
shlb
jecxz
adc
jns
fwait
mov
jne
and
jno
jb
and
outsl
hlt
testb
outsb
imul
hlt
jp
xchg
xor
stos
push
or
lock
test
dec
xchg
sbb
cmpsl
jge
lcall
das
and
add
push
xor
fldl
fisubrl
xchg
aaa
jno
in
inc
pusha
pop
cmp
and
adc
lcall
pop
jp
je
sbb
add
dec
sbb
jne
ret
sbb
and
stos
arpl
fwait
shrl
push
outsl
push
movsl
leave
sti
aas
xchg
popa
cmpsl
adcl
mov
push
pop
test
inc
fsubl
fwait
inc
push
lret
filds
jmp
or
in
pop
hlt
dec
push
fstl
shl
test
jnp
xor
test
inc
sub
outsl
jb
dec
xchg
dec
jae
lock
scas
scas
push
xor
cltd
outsl
cmp
add
mov
into
loopne
jns
xor
jae
cmp
jmp
call
and
push
sub
push
mov
insl
out
pop
aad
push
jmp
in
pop
inc
aad
gs
test
outsb
aaa
sbb
scas
ljmp
aam
or
lods
adc
cmp
scas
mov
fimuls
pop
rolb
into
rorb
sub
push
push
pop
mov
jne
adc
and
es
in
and
mov
mov
insb
repnz
mov
sub
adc
pop
ss
ja
negb
sub
xlat
arpl
rcrb
test
test
mov
mov
inc
test
pop
mov
nop
sub
push
push
xchg
mov
pop
test
pop
popa
aaa
mov
inc
jne
in
mov
jb
or
dec
in
mov
outsb
jl
lcall
cmp
xchg
out
push
dec
jle
jge
mov
sbb
fldl
mov
cs
arpl
sbb
add
fwait
dec
or
sub
xor
cmp
or
adc
enter
and
inc
add
addr16
aam
popf
pushf
in
push
sbb
pop
out
jmp
fisubs
pop
imul
mull
lcall
jne
adc
int
test
or
pop
jmp
jbe
push
ja
mov
cmc
cmp
jl
mov
dec
mov
adc
and
cmc
fcomps
pop
dec
aam
fucom
xorb
pop
sbb
add
mov
ret
hlt
jmp
enter
cli
sbb
mov
test
or
dec
jne
in
pop
fistps
loope
xor
out
xchg
push
jecxz
shlb
insb
subl
jp
fdivl
pop
adc
sub
jbe
push
sbbl
sub
mov
je
push
adc
cmc
xor
std
fs
pop
orb
xor
dec
in
xor
xchg
cmpsb
test
mov
loopne
xor
clc
sbb
push
call
dec
in
dec
and
repnz
xchg
inc
addl
inc
inc
pop
fnstsw
and
ret
push
inc
scas
adc
clc
lock
mov
pop
inc
ficoms
movsb
das
jns
outsl
movsb
notl
jo
xchg
lea
pop
lahf
push
inc
ss
testb
jnp
mov
cltd
and
aas
push
mov
dec
mov
push
js
imul
or
mov
and
sbb
and
pop
mov
jb
mov
jmp
fstpt
sbb
aas
jbe
sub
ret
cwtl
popl
ficompl
cld
or
icebp
paddusw
imul
bound
mov
mov
cmp
pop
inc
adc
pop
pop
sub
mov
cli
dec
test
das
xor
arpl
and
jmp
xchg
jge
sar
fisubs
iret
aaa
pushf
push
aam
daa
mov
cmp
ljmp
jg
push
stos
xchg
mov
mov
dec
and
imul
mov
push
cmpsb
xor
xchg
mov
pusha
pop
xchg
push
mov
jns
cmpsl
fldcw
adc
fnsave
aaa
int3
adc
jbe
lahf
mov
jge
add
jmp
mov
adc
dec
enter
sbb
or
test
push
int3
xchg
sahf
cmp
shlb
ss
out
inc
clc
mov
cmp
jns
xchg
and
jo
cmp
bound
mov
sub
popa
and
pop
cmp
mov
sub
mov
cmp
mov
sub
hlt
xor
insl
cmp
lods
mov
int3
mov
cltd
or
ret
xor
or
mov
lea
mov
mov
movsb
daa
cmp
and
roll
mov
lods
add
jne
js
lods
data16
fwait
daa
pop
mov
cmpsb
stc
mov
lods
jp
sbb
adc
popa
ficoms
xor
pop
addr16
mov
scas
lods
jge
xchg
cmp
sbb
mov
movsb
push
adc
xchg
xchg
xchg
lcall
sub
popa
jp
sbbb
mov
push
sub
aad
inc
int3
out
dec
icebp
mov
xchg
std
aaa
jmp
push
out
mov
mov
push
divl
lahf
cli
mov
mov
xchg
adc
push
mov
jne
xchg
sti
push
rcll
repnz
push
ret
push
lret
ss
aaa
cmp
lahf
xchg
cmp
mov
inc
mov
negl
adc
in
adcl
test
or
xchg
mov
and
xor
adc
dec
cmpsl
mov
insb
call
cmp
das
sbb
pop
jne
lahf
pop
je
js
inc
inc
xor
xchg
iret
repnz
mov
aad
jmp
ss
aas
popf
lea
cld
xchg
outsl
dec
add
flds
pop
bound
in
xchg
push
test
adc
adc
push
xchg
cmc
mov
fidivrl
test
pop
inc
dec
push
pop
shl
fs
inc
mov
sbb
das
cld
and
lcall
adcl
sub
push
test
jmp
mov
mov
cmp
in
mov
adc
icebp
mov
cltd
js
pop
sbb
push
push
fmull
xchg
data16
repnz
add
test
sbb
les
sub
mov
in
out
loope
in
sahf
adc
addb
sub
cmpsl
mov
out
lods
je
cmc
in
aad
sbb
xchg
mov
ss
lods
dec
push
cmc
jns
loope
popa
cs
pop
pop
icebp
je
js
fstpt
add
iret
rcrl
cmp
adc
lcall
outsb
sbb
xor
outsl
pop
mul
cld
jge
dec
inc
xor
fnsave
and
icebp
adc
adc
loope
xchg
gs
mov
lea
xchg
nop
fwait
push
push
mov
subb
cmp
out
or
sub
mov
movsb
cmp
sbb
add
leave
jle
sub
ja
orl
cmp
xchg
fxch
and
jae
cmp
lret
inc
jnp
jl
movsb
push
int3
jmp
ds
fldt
stc
scas
push
aaa
int
push
pop
std
scas
test
filds
lock
sahf
mov
jge
rcl
mov
xchg
inc
popa
or
cmpsb
push
mov
movsl
in
aas
stos
dec
dec
call
outsl
shrb
xor
mov
push
fyl2x
popa
dec
xchg
mov
in
scas
add
mov
and
cmpsl
adc
in
shr
mov
mov
or
xchg
stc
lcall
roll
push
int
push
enter
mov
test
xchg
cmp
les
sbb
sbb
lahf
adc
mov
lcall
and
push
pop
call
jecxz
enter
repnz
popa
lret
jmp
pop
mov
jbe
push
adc
cmp
pop
daa
jmp
xor
lock
mov
adc
lea
adc
mov
stos
xchg
daa
mov
fbstp
dec
sub
mov
stos
adcb
jg
xor
inc
push
sbb
daa
xor
outsl
movsb
xchg
pop
mov
outsl
xor
mov
mov
out
repnz
insl
std
imul
xor
mov
std
mov
cmp
mov
aad
pop
dec
add
lcall
xor
in
mov
sub
inc
lock
out
jb
stos
in
sbb
int
adc
into
and
mov
mov
adc
and
sbb
inc
mov
mov
mov
mov
pop
xchg
fcmovnb
rcll
rcrl
dec
or
mov
mov
cli
int
aam
and
and
dec
mov
mov
xor
or
xor
add
scas
or
xchg
negl
push
in
in
mov
jmp
stos
hlt
jno
adc
xchg
xlat
fidivs
ljmp
mov
je
rol
add
cmp
inc
pop
call
clc
nop
repz
xchg
lods
cld
shlb
cmp
inc
in
or
dec
mov
cmp
mov
sub
mov
std
loopne
mov
cltd
pushf
add
jl
icebp
fs
je
pop
imulb
sbb
andb
popa
sbb
jg
xchg
enter
out
dec
inc
jae
pop
add
add
dec
pop
xchg
call
daa
add
insb
out
lahf
mov
jge
jl
and
adc
push
cli
sbb
jecxz
cld
jg
pop
pop
pop
and
mov
xchg
inc
fsts
aaa
adc
or
mov
popf
push
fisttpll
dec
mov
xchg
lcall
cmp
mull
shr
mov
jl
imul
adc
pop
aad
stos
xor
mov
cmp
mov
nop
dec
or
andb
lahf
mov
gs
mov
test
shlb
sbb
shl
pop
dec
sbb
stos
xchg
xchg
inc
cmp
and
or
xor
jge
fisubrl
pushf
vcvttpd2dqx
mov
daa
andb
and
inc
push
push
fnsave
jnp
dec
popa
into
mov
enter
call
cmpsb
cmp
xor
mov
popa
sti
push
jb
add
fbld
lds
lock
insl
in
hlt
sbbl
jmp
cwtl
mov
imul
vhsubps
sub
inc
jne
push
push
push
xchg
outsl
jnp
aad
scas
imul
daa
test
gs
lea
mov
es
repnz
xchg
mov
inc
add
mov
pop
mov
or
dec
out
into
in
mov
pop
dec
fsts
pop
and
xchg
xchg
lea
stos
mov
xor
xlat
test
pop
in
xor
addb
loop
cwtl
or
outsb
sahf
fstpl
popf
pushl
sub
xchg
add
test
test
or
xor
xor
inc
mov
test
sbb
icebp
rcll
push
pop
shll
push
sub
sub
cmpsl
jg
adc
xlat
jo
add
mov
iret
sub
enter
dec
mov
pushf
int3
loopne
pop
pop
jl
aad
push
xor
je
jns
ficoms
jp
xor
mov
scas
pop
xchg
subb
sbb
mov
pop
das
sbb
sub
fnstsw
dec
fwait
jae
mov
inc
nop
sub
enter
push
push
call
ret
push
jecxz
cmp
in
mov
movsb
mov
outsb
and
fisttpl
loopne
hlt
jns
fimull
test
push
pop
shrl
inc
or
push
das
negl
jb
addr16
or
sbb
loopne
pushf
push
mov
mov
cs
into
pop
mov
movsl
pushf
out
jbe
pop
mov
or
cmp
in
adc
add
adc
imul
dec
jg
or
out
cmp
mov
jmp
cltd
sahf
mov
jnp
clc
add
add
sub
xor
aad
cmp
xor
mov
jo
push
adc
rcll
stos
lock
mov
add
xchg
xchg
rcll
mov
pop
mov
in
pop
bnd
lea
shll
inc
aas
lods
movsb
lods
ret
enter
and
jmp
xchg
ss
cltd
fstpt
jmp
pushf
or
out
es
popf
cmp
dec
icebp
pop
aad
or
push
xorl
call
lret
xor
repnz
mov
and
fisttps
dec
loope
mov
inc
movsl
xchg
inc
inc
iret
bound
ja
mov
rolb
movsl
inc
pusha
ljmp
lcall
jl
aaa
sbb
cli
lods
ret
add
sbb
fnstcw
jnp
jge
mov
inc
mov
xorl
movsl
mov
mov
movb
jge
adc
pop
orb
sbb
lds
leave
popf
rorb
icebp
movsl
lods
lock
sub
push
xchg
addr16
xor
outsb
mov
and
dec
insb
jbe
or
sbbl
cmp
out
or
add
imul
xlat
adc
mov
lret
ret
adc
xorl
mov
sbb
inc
loop
add
mov
xor
mov
in
and
xchg
mov
dec
notb
mov
add
cltd
pop
fisubs
push
lea
mov
repnz
imul
aas
mov
mov
sbbl
iret
pop
fisubrl
push
stos
pop
dec
pusha
pop
push
jge
dec
cmpsl
push
jp
pop
inc
push
jp
jb
aaa
test
in
call
push
dec
cmp
dec
inc
push
lods
jae
xor
xor
add
repz
and
pop
xorl
jae
rclb
ja
inc
jecxz
in
xchg
aam
inc
xor
bound
xor
xor
jb
inc
ljmp
test
pop
into
call
lahf
adc
push
lea
bound
repnz
jns
push
int3
cmp
jp
push
js
cmpsb
xchg
iret
imull
jnp
rolb
pop
or
flds
xor
cmpsb
mov
mov
sub
cmc
push
add
pop
sub
scas
nop
dec
orb
dec
inc
hlt
fcmovne
pushl
mov
arpl
hlt
jmp
andl
ret
dec
push
mov
mov
cmp
repnz
aad
negl
push
add
add
xor
or
jmp
and
xor
outsb
into
jnp
ret
dec
test
adc
push
fs
fnstsw
mov
inc
addr16
and
push
fisubl
adcb
mov
ret
sub
sbb
popa
xor
mov
push
cmp
andl
jbe
xor
cmp
rolb
lods
xchg
into
xchg
shr
mov
xor
push
popl
int
dec
cmpb
out
mov
test
sbb
mov
das
add
sbb
gs
sub
dec
mov
dec
mov
inc
repnz
lock
xchg
or
incl
cltd
ljmp
inc
adc
loope
cmp
mov
mov
call
andl
inc
test
fwait
scas
test
sbb
push
inc
and
mov
pop
les
or
xchg
test
iret
ror
pop
xlat
call
pop
mov
pop
push
repz
mov
out
mov
iret
push
xlat
xorl
ret
xor
loopne
divl
popa
insb
dec
xchg
push
add
sub
xor
popf
popf
jge
jo
nop
sar
aad
pop
xchg
scas
std
mov
fadds
xor
mov
fdivp
not
rclb
lahf
lahf
sub
adc
stmxcsr
mov
out
mov
stos
and
dec
gs
mov
pop
add
aaa
mov
daa
or
or
pushf
scas
sahf
in
aas
push
push
es
in
cmp
hlt
push
xchg
mov
adc
testl
sub
dec
sbb
imulb
in
in
out
mov
scas
out
jecxz
push
dec
sub
sub
in
xlat
fwait
aaa
in
dec
or
sub
mov
pop
fcmovbe
or
add
sbb
sarl
popf
add
rolb
jae
lock
stos
inc
mov
call
inc
xor
push
dec
sbb
mov
mov
fistps
or
data16
ljmp
jge
push
lcall
cmp
sbb
add
lcall
pop
push
adc
push
arpl
push
pop
idiv
jmp
xchg
xlat
dec
mov
xchg
cmpsb
mov
cld
ljmp
out
mov
pop
mov
cmpsb
jnp
addl
sahf
mov
push
in
mov
fisttpll
add
xchg
mov
and
or
cmp
sub
push
add
dec
rep
test
jnp
adc
mov
cltd
sbb
xor
jecxz
fsubrl
cmp
adc
loop
out
mov
jo
imul
pusha
cmpsl
js
xor
mov
xchg
shlb
inc
xchg
xor
cltd
mov
shll
rolb
or
adc
sar
xchg
lock
loopne
lcall
je
add
sarl
jnp
pop
mov
cmpb
cmp
lods
mov
mov
movsl
xchg
mov
loopne
sub
jmp
lcall
add
and
push
pop
adc
fsubs
mov
add
jecxz
jmp
sbb
jns
sub
add
mov
jnp
xchg
pop
mov
inc
sbb
mov
into
push
divb
cmp
aam
jnp
xchg
loopne
sti
mov
push
add
cmp
and
orb
lds
rclb
sbb
into
mov
loop
ret
loopne
out
inc
cmp
xor
pop
xor
mov
fs
cmp
xor
sbb
int3
jmp
xchg
cmc
shl
ret
popa
or
cmc
dec
cs
mov
xchg
fdivl
inc
or
jns
cwtl
push
ljmp
inc
fistpl
popf
imul
test
jecxz
jb
lock
fmul
xor
mov
xchg
inc
loopw
or
scas
das
imul
mov
addb
dec
icebp
ss
int3
pop
imulb
and
mov
add
sub
and
sbb
pop
ljmp
int
mov
adc
mov
inc
cmp
dec
mov
jle
jg
fdivrp
scas
xchg
sub
loope
sub
add
pop
cmc
mov
xchg
mov
xor
rcrb
mov
push
cmpsb
mov
fbld
fists
push
pop
sub
lods
ret
scas
test
faddl
popf
lods
int
pusha
cmp
sbb
fisubs
rclb
dec
outsl
shr
testb
lret
enter
mov
inc
dec
xchg
xlat
fs
das
mov
jb
inc
push
cmpsl
sub
gs
test
jp
test
add
dec
fisubl
sub
sbb
push
jo
mov
push
sahf
ja
pop
fisttps
int
je
sub
int
into
clc
hlt
add
ret
and
inc
scas
call
ja
mov
push
ss
movsb
test
mov
sbb
test
loope
adc
or
cs
shrb
movb
sub
fisubl
adc
in
push
sbb
or
cmp
mov
out
repz
in
es
inc
dec
shrl
mov
add
cmp
mov
cs
and
mov
adc
ds
cmp
fwait
sub
sahf
test
and
jne
pop
cwtl
test
dec
js
sub
ss
and
lcall
subl
mov
sahf
cmpsl
pop
xor
stc
shrl
cltd
out
pop
ss
fwait
test
in
pusha
pop
test
jns
mov
jne
cmpsb
and
mov
and
push
cmp
out
sub
orl
inc
and
mov
inc
das
cmpsl
js
loope
mov
sbb
cmpsl
adc
in
mov
sbb
inc
xor
movsb
or
mov
stos
mov
inc
fdivs
inc
sub
out
jns
pop
pop
inc
loopne
push
iret
lcall
ret
jns
dec
and
lahf
ret
fsubr
fwait
jmp
in
jl
pop
mov
loope
add
pop
test
mov
xlat
push
lret
lcall
xchg
fcmovnbe
mov
stos
mov
std
aas
push
or
mov
dec
cmpsb
push
jle
push
add
dec
sbb
sub
sahf
loopne
and
shll
mov
inc
popf
xor
popa
daa
push
push
pop
in
sbb
movsl
xchg
pop
icebp
or
xor
lock
mov
pop
mov
and
pop
inc
inc
mov
pop
sub
push
icebp
test
arpl
mov
out
push
shll
aaa
mov
or
fdivs
inc
int
mov
mov
xorb
adc
js
jge
es
incb
xchg
xchg
ja
inc
or
js
dec
cltd
cwtl
inc
in
in
pop
fldt
mov
pop
insb
pop
int
cmpsl
std
mov
mov
xchg
cmc
in
mov
insl
in
xchg
jmp
pushf
xor
cld
les
dec
adc
aaa
aaa
orl
les
and
push
cmp
fistpl
insl
stos
test
das
and
sub
mov
stc
jnp
push
popa
mov
fidivrs
ds
or
cltd
xor
mov
mov
push
jl
mov
jo
pop
out
fisttpll
pop
negb
inc
xchg
adc
imulb
jg
popa
mov
pop
inc
add
fcoml
dec
cmp
and
mov
ret
popf
xchg
inc
pushf
sub
loope
inc
sub
jae
pop
repnz
adc
loop
shrl
and
xor
mov
adc
sahf
movsb
push
ret
fmull
insl
and
int
and
sub
flds
fnstcw
js
xchg
or
sti
call
jge
iret
fmull
jmp
jp
repz
sbb
sub
lods
inc
bound
into
cmp
in
ja
sbb
dec
cld
adc
dec
aad
jmp
cmp
jns
outsb
lahf
test
or
dec
das
in
stc
push
fisttpll
push
repz
es
mov
mov
add
mov
in
andb
cli
loope
int
decb
push
adcl
aaa
das
hlt
das
jo
xchg
and
or
cmp
cli
fwait
into
sti
jb
push
test
pop
xchg
aaa
out
cltd
stc
sbb
push
mov
ja
adc
ja
jmp
sbb
adc
adc
jl
inc
imul
mov
mov
jle
or
sub
rcrb
imull
lods
jl
push
and
adc
jmp
sbb
fcoms
dec
mov
push
test
pop
dec
ret
in
fnstsw
mov
jns
pop
out
add
xchg
adc
mov
dec
pop
xlat
xchg
pop
filds
mov
sbb
ljmp
scas
sbb
jb
jo
add
push
or
xlat
and
inc
test
out
push
jno
inc
sub
ret
inc
leave
jno
test
lret
outsb
psubusw
xchg
aam
pop
cmp
adc
sbb
xchg
sahf
adc
cmp
and
cmpb
sub
lret
lods
je
mov
pushf
jbe
iret
incl
xchg
stos
je
sbb
add
enter
mov
stos
dec
daa
and
add
sbb
stos
sub
mov
cmp
pop
xchg
std
add
cmp
adc
xchg
or
or
shrl
ss
sbb
and
cltd
jl
jne
sub
popa
push
xor
imul
leave
mov
adc
jbe
mov
mov
mov
add
cld
cmp
mov
call
adc
sahf
es
and
inc
mov
pop
pushf
mov
and
sbb
mov
dec
ficoms
scas
idivl
push
sbb
cmc
jb
cld
mov
aad
cmp
mov
pop
mov
pushf
cwtl
in
addr16
lods
outsl
sub
push
jge
mov
jmp
pushf
cmp
dec
lods
leave
push
movsl
sub
cltd
testb
inc
pop
adc
mov
addb
or
sbb
push
push
les
out
pushf
je
push
or
mov
pop
mov
lahf
sub
jbe
mov
mov
test
push
ja
pop
jp
inc
pop
add
xchg
add
add
xlat
pop
cmp
fs
mov
inc
insl
loope
add
adc
jbe
mov
stos
jg
loopne
shlb
jne
cltd
push
aam
loope
xchg
sbb
push
xchg
pop
push
add
adc
add
das
repnz
inc
push
jg
aad
ljmp
xchg
ret
mov
cwtl
dec
push
pop
dec
aad
js
aad
stos
xchg
sub
cmpsb
inc
jge
ret
mov
cmpsb
jecxz
inc
sub
xor
out
cmp
iret
or
inc
ret
test
sbbb
jl
lahf
outsl
inc
aaa
stos
or
call
xlat
rcrb
loop
or
jne
icebp
ret
int3
scas
add
or
in
push
pop
out
mov
mov
mov
jl
in
test
aaa
jg
mov
rol
adc
stos
scas
ret
mov
dec
dec
cmp
out
sbb
stos
push
mov
jge
pop
out
lea
inc
orb
jnp
adc
xlat
leave
push
sub
sub
jns
movsl
jno
mov
or
mov
js
mov
mov
push
sub
jecxz
out
mov
cs
test
in
sbb
pop
repnz
pop
lahf
cmp
push
sub
push
jb
xor
fcomps
mov
jbe
aam
xor
rcr
aam
aad
cwtl
sbbb
push
sub
adc
pop
inc
loopne
lods
push
enter
push
in
xchg
pop
sub
lret
icebp
pop
mov
xlat
sub
ja
inc
das
in
dec
dec
cltd
mov
adc
cmpsb
cld
cmc
testb
push
pop
jmp
xchg
mov
call
mov
je
dec
pop
sbb
add
jp
sub
jo
sub
clc
inc
cmp
jmp
data16
sarl
xor
ja
jo
dec
and
xor
imul
dec
jb
inc
mov
jmp
add
test
daa
test
mov
cmp
mov
std
cs
stos
imul
stos
or
outsl
pop
out
sbb
pushf
negl
xchg
mov
inc
cmc
lods
lods
scas
push
movsb
xor
xor
inc
btr
in
std
bound
and
call
daa
lret
rcrb
push
adc
insb
gs
xchg
adc
popa
dec
pushf
xchg
sbb
iret
mov
cld
mov
add
lret
rcll
push
sahf
sub
jg
aas
lods
pop
in
or
mov
call
imul
std
in
jmp
sbbb
dec
inc
push
addr16
mov
rcrl
push
jmp
jns
pop
mov
sbbb
repz
repz
jl
test
dec
jecxz
cwtl
in
jecxz
jg
xlat
lods
mov
cli
pushf
mov
mov
lret
fildl
test
rcll
fs
stos
pop
je
scas
pop
push
nop
jnp
sarb
or
push
inc
mov
mov
jns
shrl
rolb
mov
fiadds
cmp
push
shr
mov
icebp
pop
rorb
inc
sti
pop
mov
xchg
dec
push
ds
rcrb
mov
xor
aaa
jbe
add
cli
push
bound
stc
xchg
jge
jle
add
test
repnz
stc
jle
filds
int
scas
mov
test
mov
mov
push
gs
scas
fimull
shlb
add
fisttpl
popa
call
les
push
ret
add
push
xchg
enter
adc
and
mov
out
popa
sti
ja
mov
lods
je
subb
xchg
inc
or
xor
movw
cmp
inc
jp
mov
mov
es
push
mov
cmpb
mov
sbb
rorl
dec
ret
cli
shlb
or
inc
mov
fsts
and
fidivl
pop
loop
add
imul
ljmp
sti
cmp
or
movl
dec
xor
pop
sub
mov
lods
push
scas
or
fstpl
add
adc
test
push
lods
xchg
mov
aam
dec
xor
popf
pop
out
jo
jbe
pop
cmpsl
testl
mov
push
daa
fistps
add
movsl
sub
pushf
cli
sbb
jl
shll
jo
mov
clc
fildll
dec
std
mov
sbb
cmpsb
negl
fisubs
arpl
test
stc
jg
fnsave
loop
xlat
lods
pop
jno
pop
mov
ret
jbe
shrl
movsl
cs
xorl
and
bound
pop
sbb
loopne
stos
imul
and
pop
jns
jo
insb
push
xor
adc
add
shll
mov
das
mov
xchg
xchg
or
xchg
nop
fs
or
xor
or
mov
mov
xchg
mov
nop
adc
or
stc
mov
adc
xchg
jae
cmp
enter
push
cmp
out
jle
rcrb
repz
xchg
push
lods
sahf
orl
mov
adc
popf
xor
inc
inc
cmpsb
test
bswap
push
jo
mov
push
outsl
push
xlat
mov
and
adc
dec
out
cmpsl
data16
pop
inc
mov
fs
jbe
sar
cmpsb
or
inc
iret
mov
sub
and
insl
and
lcall
push
rorb
fsubrs
add
daa
mov
in
mov
pop
pop
mov
adc
lahf
or
ret
addr16
mov
mov
and
xchg
xchg
push
sub
push
push
insb
mov
or
sbb
ds
sbb
cmp
mov
jno
cmpsb
pop
dec
cs
xor
aam
push
xchg
je
sbb
pop
jno
jmp
pop
out
outsl
lahf
int3
mov
dec
call
dec
pop
mov
mov
pop
and
rol
add
and
cltd
push
xchg
outsl
mov
or
int3
or
add
or
inc
cltd
call
pop
jmp
in
inc
push
in
inc
out
call
ljmp
popa
xorl
fcoml
push
adc
mov
int
push
cmp
mov
ss
adc
pop
sbb
push
aam
mov
adc
mov
mov
test
jmp
out
push
or
jns
loop
sbb
cmpsl
cmp
js
stc
mov
sbb
gs
or
cmp
mov
rolb
pushf
out
adc
jp
call
pushf
lods
outsl
xchg
lcall
sbb
movsb
xchg
ret
popf
sub
xchg
and
lods
sub
loop
gs
sbb
andl
sti
mov
sbb
xchg
push
jge
out
pop
and
sub
shrb
push
mov
dec
in
scas
das
mov
adc
pop
into
adc
popa
lock
mov
daa
push
ror
cmpsl
int
adc
mov
loope
push
cmp
cmc
dec
push
adc
sarl
lret
mov
xor
bound
dec
mov
jmp
and
jae
push
xor
mov
in
pop
mov
xor
imulb
aaa
mov
test
xchg
sbb
jle
fdivrl
lret
sub
push
xor
lods
in
std
sub
sub
imull
push
mov
adc
cmp
and
in
int
xchg
push
stos
outsl
imul
mov
cmp
call
or
push
shll
cmp
mov
add
cmp
xor
push
mov
orl
pop
lret
dec
cmp
aam
pop
jns
and
sbb
xor
xchg
mov
clc
adc
lret
pop
cmp
or
mov
pusha
sub
jbe
add
sbb
mov
xlat
mov
movsb
dec
jne
in
pushf
lahf
and
jecxz
pop
test
mov
mov
imul
dec
mov
add
std
movsl
mov
or
adc
adc
pop
shrl
push
adc
inc
int
and
js
jnp
imul
xchg
movb
cld
adc
push
cmp
movsl
gs
adc
js
sub
mov
pop
cmp
mov
mov
loop
push
mov
mov
icebp
mov
andb
push
xor
jno
mov
jo
jno
cmp
xchg
movsl
int
push
sub
stc
data16
clc
add
jo
out
sahf
push
lret
jge
cwtl
cmp
lahf
mov
push
mov
test
push
outsl
stc
lods
aam
aam
outsl
push
in
imul
jp
hlt
lds
sub
xchg
jge
jmp
nop
addr16
lods
pop
push
dec
mov
push
test
je
sub
push
lods
imul
jae
sbb
inc
stos
shrb
jns
push
test
daa
das
mov
lret
add
divl
lods
mov
push
out
ret
pop
pop
cmp
gs
insb
mov
jg
sahf
add
andb
dec
jp
dec
and
and
lahf
lea
aaa
mov
inc
cld
fdivr
cmp
arpl
loopne
fs
in
dec
inc
and
xor
dec
add
mov
out
jnp
fsubrl
inc
add
cld
lods
mov
loopne
cmp
mov
fwait
movb
add
jg
dec
loope
sahf
in
sti
mov
mov
push
testl
xchg
daa
cmp
sbb
adc
pop
cmp
jbe
push
xorb
jg
sbb
int
inc
jmp
in
push
jb
adc
push
xor
mov
push
jno
pop
int3
in
xor
in
xor
lret
mov
sbb
loopne
loope
pop
push
pop
mov
mov
jmp
cmp
fiaddl
dec
inc
jecxz
mov
in
jmp
push
mov
dec
push
out
xchg
push
fisttps
out
ds
insl
cmpsb
or
xor
push
enter
cli
or
movb
movsb
pushf
int
sub
into
adc
push
or
lock
lret
or
lcall
adc
pop
jnp
sbb
movsb
sub
mov
hlt
push
mov
jns
xor
pop
push
xor
mov
or
call
push
sti
push
sub
loopne
or
int3
pop
adc
xor
jae
lcall
popl
dec
mov
and
add
inc
xchg
pop
jmp
jo
xchg
pop
addl
cltd
lea
mov
aam
and
cmp
push
inc
add
dec
sub
mov
dec
mov
push
pop
hlt
xchg
pop
pop
pop
fs
rorb
or
mov
jnp
xor
stc
pop
cs
sub
test
out
dec
fildl
jmp
scas
mov
or
xlat
jb
ja
inc
mov
mov
mov
mov
xchg
fidivrl
ss
sub
xor
add
jae
sub
aas
xchg
pop
pop
and
push
jl
into
pop
push
setnp
iret
in
adc
cmp
lcall
pop
push
inc
xchg
jbe
or
inc
imul
out
jo
or
jb
pusha
lods
push
std
and
xchg
xchg
jbe
sub
sub
dec
ljmp
outsl
lahf
xchg
hlt
sbb
mov
idivb
mov
or
fisubs
shrb
mov
sub
cmp
mov
jl
adc
dec
sarl
dec
pop
std
xchg
imul
lods
adc
nop
adc
movsb
inc
pop
mov
or
andl
push
in
xchg
aad
lods
addr16
inc
sahf
mov
stc
imul
or
mov
push
adc
jae
jnp
sub
clc
and
xchg
push
subb
lahf
jnp
pop
push
add
sub
lock
mul
mov
cmpsl
divl
mov
popa
iret
mov
lret
mov
or
out
ret
mov
mov
in
add
loop
ja
mov
movd
iret
sahf
mov
ror
data16
dec
imul
stos
or
sbb
sbb
popa
pop
cmc
dec
mov
inc
pushf
jmp
sub
sbb
add
xor
adc
xchg
loop
cmpsb
jmp
xor
xor
lea
sub
mov
cltd
jae
xchg
xor
fwait
imul
pop
scas
jmp
xchg
add
cld
in
and
test
lret
sub
mov
std
cmp
mull
int3
xchg
add
pop
dec
sbb
and
dec
arpl
out
in
sub
dec
and
cmovne
or
mov
clc
adc
inc
mov
int3
fs
push
inc
fs
mov
outsb
test
ds
lahf
or
sahf
sub
and
daa
sub
divb
jecxz
lret
push
repnz
mov
and
xor
pop
mov
out
aaa
cmp
xlat
jae
and
ljmp
shlb
and
pop
xchg
faddl
pop
cmc
dec
cmc
popa
test
dec
push
cwtl
lods
shrb
dec
cmp
sbb
idivl
sbb
in
add
or
add
dec
pusha
out
mov
call
sub
or
pop
repz
push
inc
cmp
fldenv
xchg
loopne
in
and
in
cmp
add
push
mov
ret
xorl
sbb
loopne
leave
aam
imul
adc
lahf
pusha
mov
repz
insl
sub
xor
out
xchg
mov
mov
jle
add
subps
repnz
test
cs
bound
lahf
push
or
lret
xor
mov
mov
je
out
xchg
sub
in
dec
repnz
stos
rorl
ja
xor
or
mov
mul
cmp
aaa
jge
mov
dec
ret
sub
jbe
push
popa
push
lds
jp
call
out
leave
hlt
cli
inc
and
sarb
xor
push
rcrb
scas
lret
lahf
jo
pop
pusha
imul
mov
js
insb
aam
sbb
ss
fnsave
xor
xchg
fsubrl
incl
nop
and
cmpsl
std
cmpl
push
push
insl
adc
push
mov
jno
xchg
or
sbb
scas
push
push
inc
add
or
push
cmp
testl
mov
lret
movsb
dec
adc
test
lea
and
fwait
pop
pushf
push
xchg
mul
enter
fcmovu
sub
dec
add
cwtl
pop
scas
or
push
movsl
mov
imul
test
push
xor
pop
mov
mov
icebp
mov
cwtl
or
shll
xchg
mov
pop
icebp
iret
rcrb
stos
cmp
mov
push
jo
inc
push
pop
pushf
fldenv
mov
ret
testb
jecxz
js
sbb
cmp
shrb
cmpsb
icebp
pop
xchg
jmp
dec
push
shll
daa
out
outsb
pop
or
pop
fsubl
test
jae
add
fdivrs
pop
push
adc
outsl
aad
fdivl
gs
movsl
cmp
jp
movsl
dec
jnp
adc
sbb
imul
test
in
push
inc
dec
fisubl
call
call
xor
mov
dec
int
mov
pop
jmp
fisubl
mov
add
inc
pop
cmp
popf
adc
mov
loop
xor
rcrl
daa
mov
clc
call
orl
std
jne
sti
inc
daa
orb
loopne
pop
push
js
insb
into
jae
add
pusha
jge
mov
push
loope
mov
jle
arpl
sahf
push
movsl
in
leave
mov
and
leave
xchg
adc
imul
xor
addr16
xor
inc
idiv
dec
fldcw
outsb
stos
popf
sub
inc
cmp
or
sbb
aam
jmp
mov
ljmp
mov
mov
xchg
adcl
pop
test
out
filds
pop
push
xchg
clc
add
sub
ljmp
cltd
lods
scas
jb
lock
fldt
push
lahf
mov
xchg
push
mov
adc
into
pop
push
and
dec
addb
push
hlt
das
movsb
clc
pop
add
rclb
jle
daa
fadds
test
push
inc
cmc
mov
jge
les
inc
lret
std
sbb
rclb
dec
lods
pop
mov
clc
inc
aaa
mov
nop
aad
pop
sub
rorl
push
iret
xchg
xor
cmp
data16
mov
imul
loop
mov
push
movsb
xor
xor
ror
loope
inc
add
fisttps
loop
outsb
inc
sbb
dec
push
adc
movhps
xor
movsb
push
xchg
aam
fnstsw
jl
pop
push
je
and
movsl
pop
bnd
cmpsb
mov
movsl
dec
add
mov
dec
pop
repz
add
std
jno
imul
insl
pop
dec
out
push
es
adcb
cmp
push
push
pushf
rcrl
loopne
push
pop
jo
dec
pop
nopl
jae
es
outsl
fwait
and
in
mov
xor
iret
test
shll
into
lods
xchg
sub
jns
and
mov
jg
pop
repnz
fsts
stos
push
cmp
and
mov
and
pop
shl
push
loopne
nop
push
add
push
pop
dec
lret
inc
or
mov
repnz
fsubrp
push
xchg
mov
inc
jecxz
mov
mov
test
push
mov
in
lahf
push
xor
pop
mov
enter
mov
popf
pusha
lret
das
int3
rcll
cmp
and
jb
inc
pop
dec
inc
int
adc
mov
sub
sub
lods
scas
rdtsc
dec
add
pop
fstl
xlat
jo
mov
adc
inc
std
sub
push
nop
fildl
loope
jmp
fcomps
bound
shld
mov
cmpsl
cli
xor
or
out
sbb
inc
fsubl
push
insl
push
mov
push
inc
jns
mov
sbb
mov
das
in
push
clc
sahf
mov
mov
lods
pop
sbb
sub
daa
sbb
add
idivb
test
sahf
fbstp
or
pop
jp
icebp
xchg
jae
fidivrl
push
push
jne
add
dec
call
xor
xor
ficoms
inc
and
mov
sub
insb
stc
das
and
out
xor
loopne
movsl
sbb
das
ds
inc
push
adc
mov
dec
int3
mov
mov
cli
loopne
in
std
std
xor
out
add
xchg
cmp
imul
lret
or
jge
add
mov
xchg
das
hlt
sub
outsb
pop
je
loope
push
cmp
inc
and
repz
xchg
jne
es
mov
out
jb
pop
loope
push
jmp
das
mov
jnp
sub
fucomip
outsb
cmc
stos
out
mov
sbb
fiaddl
cs
push
mov
out
dec
mov
test
dec
xchg
outsb
outsb
mov
dec
mov
xchg
xchg
lds
mov
stos
pop
pop
pop
jge
fldenv
sub
sbb
mov
xor
inc
or
mov
sbb
ret
in
pop
xor
inc
push
push
lcall
ja
dec
in
mov
lods
xchg
out
push
cltd
pop
mov
push
rclb
mov
jae
inc
inc
xor
dec
and
xchg
das
repnz
pop
mov
sub
outsl
and
aaa
push
repz
and
or
jno
daa
popf
push
add
sbb
fisttpl
daa
mov
addr16
inc
orb
pop
mov
cwtl
outsb
rcr
xor
xor
pop
mov
daa
xor
mov
mov
pop
pop
stc
adc
mov
lret
xor
sub
test
mov
xor
jmp
enter
mov
push
cs
dec
cmpsl
add
jae
sub
aas
js
mov
push
sub
xor
sbb
outsl
sti
mov
icebp
insb
andb
outsl
lea
out
ds
ds
dec
cmp
test
add
adc
outsb
push
mov
inc
pavgb
add
dec
adc
lret
aad
aas
add
xchg
xchg
jno
fsubrs
and
and
adc
dec
push
testl
popf
loop
mov
xchg
push
mov
shlb
imul
dec
bound
push
repnz
or
xchg
mov
jne
pop
mov
add
popf
sbb
pop
loope
pop
rorl
mov
stos
lds
sarl
test
imul
aaa
jl
stc
or
jg
xchg
test
and
nop
dec
pop
aam
xchg
xlat
loopne
pop
mov
pop
dec
repz
bound
cmp
xchg
movsl
mov
repnz
inc
adc
wbinvd
aad
xchg
jne
ret
in
repnz
dec
adc
rcrl
sbb
sahf
into
cmp
and
cmp
and
adc
push
fimuls
nop
ja
in
into
cmp
lods
adc
xor
test
sbb
faddp
cltd
sub
xorl
cmp
loopne
bound
mov
pop
jo
stos
cs
and
sbb
decb
test
push
out
and
stc
cmc
mov
pop
jmp
repnz
rcll
jo
and
mov
mov
jge
push
pop
pop
pop
sbb
mov
pop
hlt
xor
bound
subb
clc
fldt
aas
repz
cmpsb
jno
out
dec
mov
sub
into
fdivl
and
adc
push
insl
push
scas
xchg
out
stos
jno
loop
push
jmp
stos
pop
sub
insb
pusha
mov
xchg
cmpsb
mov
adc
mov
ljmp
add
pushf
dec
rolb
inc
inc
imul
mov
call
add
push
pushf
insb
jmp
jo
ja
lods
mov
lods
dec
adc
cmp
leave
inc
sbb
in
sbb
lods
cs
leave
div
cmpsl
rcrb
repz
jle
xor
xchg
inc
cmp
mov
test
add
sub
push
imul
dec
imul
addr16
fists
in
orb
bound
pop
push
popf
bound
and
jo
jae
mov
pop
sub
xor
mov
dec
insl
shl
jne
pop
or
push
xor
sti
cmp
or
sbb
imul
pushl
xchg
ret
arpl
dec
mov
mov
inc
out
jge
or
es
call
insl
push
mov
adc
mov
out
mov
sbb
add
push
pop
mov
pop
fwait
add
jge
sub
and
dec
adc
es
jno
out
lcall
mov
leave
add
ds
ljmp
sar
fistpll
fildl
inc
cs
jecxz
imul
icebp
je
fistl
jmp
mov
dec
aam
scas
jae
mov
push
jmp
cmp
cmpsb
xor
cmpsl
sub
pop
arpl
out
push
xlat
lcall
std
pop
xchg
xor
es
test
in
add
shll
aam
push
push
adc
mov
aam
hlt
adcb
nop
aam
arpl
scas
inc
fisttpl
sub
jo
xchg
mov
adc
aad
lret
aam
movq
add
sub
mov
ljmp
lods
les
cmpb
sahf
icebp
fldcw
jp
xchg
pop
xchg
jp
lret
clc
dec
cltd
aam
fidivrl
outsl
sub
push
rcll
push
das
imull
shld
out
pop
rol
sub
pop
sti
add
fstpl
and
push
sbbl
sub
incb
loop
jecxz
jne
andb
lea
cmpsl
mov
xchg
ret
jecxz
imulb
out
jo
xchg
push
sub
mov
ja,pt
jns
push
gs
lahf
sbbb
dec
lahf
mov
dec
mov
jl
mov
stc
lcall
inc
fisttpl
lock
mov
in
in
mov
fcmovu
shrb
sbb
dec
test
add
in
add
mov
sbb
xor
lock
push
mov
push
sbb
fldt
mov
shrl
sti
sti
add
cmc
sarb
jo
xor
sub
das
es
xlat
xorb
mov
dec
cmpsb
pop
pop
or
icebp
pop
push
jae
fdivrs
mov
fdivl
cwtl
mov
ret
in
lds
addr16
xchg
dec
jne
or
pop
sub
jnp
lock
repnz
lds
ds
loopne
xchg
aad
jbe
push
daa
js
and
add
call
insl
and
stos
dec
push
mov
shrb
aas
call
add
vmaxss
notl
jmp
sbb
add
insb
mov
fldl
filds
stc
and
adc
push
pop
mov
aam
shll
mov
add
aam
imul
mov
cmp
pop
ss
cmp
pop
xor
pop
stc
loop
dec
data16
jmp
test
xor
xchg
pop
xchg
dec
jg,pt
jns
mov
xchg
jnp
push
push
int3
and
adc
imul
adcl
loop
movsl
and
aad
hlt
add
push
dec
add
mov
fnstsw
xorl
jge
js
mov
loop
test
pushf
in
jg
sub
jmp
es
inc
inc
sbb
movsb
push
xor
cmpsb
xchg
popa
cmp
outsb
repz
xor
xchg
pop
cmp
cmpl
cli
rolb
mov
aaa
sbb
popa
lea
mov
inc
sub
lret
push
jecxz
fmull
les
jg
es
mov
dec
enter
scas
lcall
not
loop
fbld
lret
adc
ret
jno
cs
inc
sbb
inc
int3
cmp
inc
popa
mov
pop
decb
and
inc
pushf
pop
push
ljmp
test
test
or
sbbb
imul
lret
jbe
rcr
sub
and
arpl
inc
js
sbb
mov
lea
clc
ljmp
jl
ss
add
js
test
cmpl
cmp
pop
mov
jns
sbb
cmp
adc
ds
sbb
lret
shr
jle
data16
add
cmp
xor
sub
adc
and
jp
shrb
arpl
ljmp
pop
addl
xchg
insl
jge
adc
mov
sbb
push
test
ficomps
pop
cmp
add
push
sub
shll
xor
or
out
nop
jge
movsl
popl
inc
pop
arpl
outsb
addb
arpl
jmp
test
daa
inc
mov
pop
pusha
inc
inc
sub
iret
mov
adc
flds
pop
js
insb
mov
sub
push
ret
insl
and
jno
dec
femms
push
fstpt
xor
pop
push
mov
cmp
addr16
insb
insb
add
mov
sahf
fwait
push
adc
pop
mov
test
iret
xchg
stc
ret
jne
testb
jns
and
ret
sub
and
dec
pop
mov
imul
mov
xchg
cmc
aaa
inc
sub
daa
and
push
outsl
int
insb
andb
add
test
loope
cltd
add
test
iret
gs
lods
and
push
scas
sahf
inc
in
jae
push
jl
push
out
je
lret
js
inc
mov
adc
dec
or
cmpsl
or
sbb
int
jl
adc
call
in
dec
fcoml
xchg
shll
subb
lcall
roll
sub
add
aad
jns
loopne
jge
inc
jl
push
pop
repnz
call
pop
or
popf
push
in
rcr
daa
sarb
push
xchg
arpl
fadds
or
sahf
sbb
mov
add
jmp
in
sti
and
int3
sbb
sti
mov
addr16
sub
sbb
jb
in
mov
mov
mov
inc
jne
arpl
add
cld
xor
push
pmaxsw
shll
or
dec
cmpsl
loope
or
pop
ret
xor
shll
hlt
pop
scas
cmp
lods
les
mov
pop
addr16
jo
mov
xchg
bound
fcompl
add
dec
mov
dec
test
mov
dec
and
stc
jp
das
or
movsl
leave
add
ret
adc
mov
fmul
aaa
jne
mov
jo
push
sub
xchg
xorb
pusha
or
mov
and
loope
lret
sbb
aaa
dec
mov
aad
in
mov
jns
push
add
add
and
lcall
add
and
lcall
add
pop
xor
mov
in
or
mov
pop
ret
aas
loopne
jb
arpl
adc
dec
xorl
jmp
leave
pop
xchg
xchg
clc
mov
loope
mov
or
push
or
fwait
inc
repnz
lds
in
cld
inc
cmp
enter
insl
xchg
out
mov
loope
cmpsl
cltd
fwait
adc
pusha
xor
sbb
popa
mov
push
dec
push
gs
sti
pop
icebp
fchs
push
adc
mov
jae
mov
fidivrl
in
cmp
movsb
subb
addb
jno
sarb
scas
push
mov
jbe
mov
call
mov
js
in
fistps
gs
xchg
int
test
jae
or
js
push
jae
hlt
fsubl
inc
and
cvtps2pd
mov
mov
cmpl
nop
mov
xlat
jp
jnp
xchg
pop
mov
mov
cmp
and
fs
ss
repz
sarl
fsub
mov
dec
inc
mov
xor
imul
stos
gs
nop
xlat
cmp
jo
push
lods
push
cmpb
push
pushf
cli
xchg
push
rclb
cmpsl
stos
xchg
push
std
xchg
sar
mov
fwait
aas
cmpl
push
sbb
arpl
push
xchg
cmpsb
inc
cmpsl
inc
mov
pop
loop
out
or
fwait
mov
cmp
test
add
sbb
dec
leave
jg
das
out
orl
push
mov
ja
dec
scas
fwait
mov
adc
sbb
int3
cmp
nop
push
into
push
sbb
cwtl
mov
cmp
aad
sbbl
xchg
mov
aam
cmpsl
mov
test
popf
mov
xor
rol
mov
and
pop
mov
insb
push
jg
lcall
icebp
xchg
jmp
xchg
inc
shrl
scas
push
jae
push
cld
and
xchg
aam
cwtl
mov
push
push
mov
fcompl
mov
xlat
mov
js
int3
je
mov
lahf
hlt
rolb
jno
mov
stc
call
call
add
cmp
test
pop
add
mov
test
inc
clc
int3
adc
pop
sbbb
mov
je
out
dec
in
add
mov
rcl
daa
dec
aam
data16
sahf
orb
mov
jns
out
sub
fildl
fs
push
js
or
adc
cltd
cmp
scas
cs
outsb
sub
add
cmp
jle
cmc
aam
xchg
push
filds
stc
loop
jno,pt
xor
int
xchg
stos
lock
ret
imul
cmp
insl
jle
inc
xor
xor
dec
out
mov
push
stos
std
push
xchg
mov
and
add
addl
mov
cwtl
aas
mov
or
mov
jge
xor
int3
loopne
mov
rdpmc
sub
lods
pop
dec
and
sub
pop
shrb
js
imul
push
shll
sbb
xchg
xchg
pop
lahf
loope
sbb
add
sub
rcrb
test
popaw
xor
pop
sub
pop
jns
inc
pop
mov
fbstp
xchg
mov
inc
jmp
int3
xlat
sub
dec
cli
sti
icebp
push
cmpl
cmp
notl
sub
lock
popa
pop
fistpll
test
jbe
add
sbb
or
testb
push
xchg
rcrb
jp
rol
mov
enter
cmp
mov
xchg
xor
and
mov
adc
ss
js
push
xlat
loop
mov
push
jno
lret
les
jae
test
or
sbb
lds
roll
fidivs
repz
mov
xor
jp
pop
lahf
mov
xor
repz
dec
pushf
cmp
jne
jnp
push
das
lcall
imul
mov
std
add
adc
xchg
fists
push
inc
lahf
jbe
ret
jmp
js
shrb
add
or
jno
jmp
or
imul
jb
mov
cmc
ds
cmp
je
pop
push
insb
cwtl
test
int
ret
inc
dec
aas
jbe
push
inc
out
pop
pop
jb
test
mov
divl
xchg
mov
and
cli
leave
mov
repnz
rorb
out
inc
popa
sbb
add
cmc
cmp
repz
sbb
push
jb
sub
dec
movsl
dec
std
es
imul
adc
add
mov
xlat
pop
pop
dec
jle
push
loope
xchg
call
push
pavgb
inc
and
rol
push
jecxz
push
push
mov
ljmp
mov
dec
sti
loop
sub
mov
pop
dec
or
mov
test
stos
arpl
lcall
mov
imull
adc
adc
push
ljmp
jl
ljmp
mov
cmp
xor
sbb
mov
cmp
jo
push
popa
and
dec
mov
call
sub
shrl
jno
jns
push
imul
shl
clc
clc
lods
push
jmp
dec
ss
lods
mov
aas
mov
daa
xor
adc
xor
sub
test
mov
pop
pop
jne
fisttps
mov
shll
mov
jns
xor
popa
push
sbb
push
push
push
jnp
jb
popa
xor
cmpsl
out
inc
fisttps
sbb
xor
lret
jmp
test
xor
push
xchg
int3
mov
test
fdivrl
loopne
mov
fnsave
shll
std
push
mov
dec
mov
pop
dec
lock
cli
lods
test
cmc
insl
fmuls
test
outsb
mov
iret
add
or
sub
mov
add
push
and
call
add
adc
push
mov
ds
in
pop
hlt
mov
test
test
xchg
in
mov
imul
jne
sub
sti
pop
addr16
movsb
shll
test
arpl
std
mov
inc
push
lods
into
cwtl
dec
inc
insb
inc
push
xor
cmc
rcl
std
pop
sub
fs
mov
adc
fmulp
inc
or
xchg
push
xor
jae
cwtl
adc
les
fisttpll
das
push
fcomps
jno
rcrl
hlt
ret
adc
les
cld
cmp
fiaddl
lahf
decl
mov
jae
mov
aaa
cwtl
inc
popa
lock
popf
dec
or
ja
pop
into
push
xchg
mov
inc
jecxz
data16
sbb
mov
cmp
jmp
push
inc
sbb
imul
shlb
and
sti
sbb
fiadds
sbb
movq
jno
sarb
in
es
fdivr
cmc
das
xchg
xchg
add
pop
cmp
popf
push
pop
cmp
inc
add
push
lock
dec
jmp
fldcw
orb
jae
xor
pop
in
cmp
cmp
inc
push
pop
mov
das
leave
shl
cmp
aas
pop
ror
loop
pop
add
mov
xor
es
ljmp
push
pop
movsb
leave
or
mov
and
movsl
jno
imul
dec
bound
pop
cmc
cld
fucom
sbb
and
bnd
xor
sub
mov
and
in
mov
pop
and
sub
inc
mov
cmpsb
and
stos
test
dec
les
sbb
frstor
adc
xchg
add
loope
sub
in
sbb
clc
aaa
xorb
mulb
cmc
inc
in
sub
fistpll
dec
dec
mov
pusha
dec
mov
and
and
cmp
xchg
rcr
mov
jge
xchg
in
lcall
cs
icebp
push
mov
adc
fldcw
cmp
gs
pop
dec
push
ret
sub
addr16
testb
js
popa
cmc
mov
std
jnp
dec
movsb
xchg
and
test
sbb
xchg
in
cmp
das
daa
sbb
lahf
add
lock
fwait
push
dec
mov
mov
pop
aas
andb
add
xchg
sub
test
aaa
dec
jnp
jl
mov
jbe
cwtl
out
enter
pop
lods
cmp
sub
into
cmc
mov
xor
sbb
mov
cmpsb
clc
lret
push
push
xor
pop
cwtl
lods
int
cmp
outsl
xchg
repnz
sub
fwait
shl
andb
and
arpl
adc
dec
inc
gs
in
jnp
icebp
iret
jmp
data16
in
cld
mov
add
aas
mov
pop
js
and
jo
xchg
xchg
adc
std
add
scas
aaa
and
adc
bound
and
dec
aas
dec
sahf
scas
pop
out
add
mov
and
mov
sbb
outsb
push
pop
lock
std
cmpsl
cmp
js
dec
in
mov
lcall
adc
in
mov
mov
popa
dec
ret
push
xor
inc
pop
pop
or
jae
mov
sub
and
ljmp
shlb
xor
push
pop
decl
sti
aas
js
sub
and
lret
sub
popa
sbb
outsl
movsl
orb
test
ds
inc
mov
add
cmp
ret
jae
pop
or
pop
aad
lret
sti
stos
shr
and
je
subl
cmp
mov
test
xlat
pop
push
fisubs
ss
rorl
stos
sub
lods
enter
xchg
mov
pop
call
repnz
push
and
jecxz
pop
adc
cmpsl
cmpsb
pop
test
xor
xchg
cmp
neg
jl
pushf
loope
sub
in
sub
test
cmp
mov
hlt
cltd
lods
arpl
out
jmp
pop
fidivl
push
cmpsl
lods
frstor
rorl
push
test
js
pop
push
or
add
lods
inc
icebp
fsubs
ja
mov
mov
bound
outsb
negl
sti
sub
xchg
aad
mov
push
adc
insb
push
faddl
and
test
fs
cmp
mov
orl
mov
andl
fisttpll
adc
push
dec
push
mov
repnz
shll
aam
test
popl
or
idivl
sub
pop
test
cmp
dec
imulb
dec
add
dec
popa
adc
xchg
inc
imul
mov
pop
push
iretw
iret
jnp
push
dec
int3
in
iret
xor
pop
pop
and
clc
icebp
shlb
cmp
dec
push
popa
fcoms
test
pop
mov
mov
jne
cld
pop
loop
out
inc
inc
mov
sub
inc
xchg
xchg
test
inc
inc
add
enter
ret
mov
repnz
add
fcoml
in
out
fwait
cmpsb
ret
xor
cmc
out
inc
dec
sbb
pushf
clc
sbb
jp
jo
nop
pop
mov
inc
mov
dec
add
push
lods
sbb
push
cmp
jno
repnz
sub
repnz
sbb
divl
pushl
cmp
push
sbb
pop
js
bnd
je
pop
movsl
imul
jnp
pop
popa
pop
mov
jno
mov
cmp
lds
daa
jnp
mov
cmpsb
pop
lods
jg
dec
cmp
outsl
test
push
add
xor
push
popf
sbb
inc
dec
test
mov
pop
adc
adc
cmp
inc
mov
adc
jp
mov
hlt
mov
lock
mov
mov
out
cmpsl
inc
je
xchg
dec
add
adc
pop
out
push
pop
popf
out
lea
stos
mov
cmp
mov
and
testb
repnz
sub
loopne
repz
sub
div
cmp
mov
into
cmovns
dec
or
xor
jbe
daa
push
pop
mov
cmc
push
fstpl
rcrl
stos
dec
ret
or
lea
inc
int
cltd
push
or
inc
out
cmc
sbb
jno
ficomps
movb
ret
cmp
xorb
inc
cmp
push
popf
imull
pop
test
sbb
sbb
in
int
shlb
les
sub
js
xchg
aas
test
push
mov
insb
sub
test
pop
in
mov
add
cmp
or
push
aaa
pop
mov
lcall
jp
popf
add
pop
negb
int
xlat
and
xchg
inc
or
enter
add
mov
lods
pop
je
fs
pop
sub
mov
push
inc
inc
sti
jae
mov
cwtl
shlb
cmp
pop
fsub
mov
and
push
xlat
cmp
ljmp
jae
and
in
cmp
pop
pop
insb
and
cmp
dec
xchg
cmpl
loopne
push
xor
inc
leave
add
pop
sub
pop
ror
stc
or
jmp
mov
test
frstor
jb
and
rcrl
stc
cli
scas
mov
dec
inc
and
add
andl
das
sbb
nop
cltd
cmpsl
test
cmp
lods
push
lret
sbb
or
xor
dec
mov
or
sahf
mov
lods
cmpb
repz
mov
xor
pop
fdivs
andl
and
xor
mulb
fcmovb
mov
out
mov
pop
pop
inc
push
dec
mov
jno
mov
jge
das
cmp
mov
nop
fldt
cmp
pop
mov
pop
mov
aam
lds
cmp
es
rcll
jbe
test
test
aas
lods
inc
cwtl
out
mov
arpl
nop
dec
and
pop
and
clc
mov
dec
mov
xor
mov
movsb
test
mov
adc
inc
pushf
xor
xor
iret
adc
ret
mov
push
mov
xchg
push
aam
and
mov
dec
cld
iret
inc
add
rcrl
pushf
inc
jmp
jl
xchg
sub
inc
pop
leave
pusha
xchg
jl
cs
push
pop
ret
cmpsb
jns
gs
mov
push
cmp
ret
ljmp
or
adc
pop
sbb
mov
push
in
mov
ficoms
popa
and
out
out
icebp
push
mov
loope
cmpsb
xchg
mov
cmc
xlat
pop
cmp
pop
sti
and
popa
sarl
movsl
fwait
pushf
lahf
jne
mov
push
scas
xchg
clc
add
cmp
cmp
xor
mov
sub
cs
dec
cmp
jl
push
or
inc
arpl
rorl
scas
adc
and
add
mov
fwait
call
push
jmp
orl
mov
jmp
shrl
cmp
xor
push
push
je
icebp
push
mov
jmp
sbb
js
mov
cmpsb
and
xor
jg
dec
jne
stos
jns
lcall
mov
sbb
clc
aas
push
aas
test
inc
aad
in
xchg
pop
dec
insl
jo
and
stc
cmp
sbb
adc
push
and
movsb
dec
push
sub
mov
mov
lcall
aam
dec
inc
push
movsl
xor
popa
ljmp
and
cmp
pop
inc
mov
mov
push
xchg
jg
leave
jle
fs
idivl
in
imul
inc
add
popa
jo
test
push
adcl
push
sbbb
push
xor
adc
xchg
rcr
mov
cmp
das
imul
scas
xor
add
test
sub
dec
into
mov
mov
je
mov
aas
aaa
mov
xor
cmp
fildl
out
out
test
dec
mov
test
pushl
push
sbb
imul
pop
add
test
jo
and
mov
out
lock
and
daa
pop
pop
enter
ja
sbb
pop
sbb
cmp
sub
int3
mov
inc
es
xor
sub
inc
xor
mov
scas
inc
aam
fsubs
adc
adc
test
js
sbb
inc
push
mov
enter
push
sbb
add
test
mov
call
pop
xor
pop
inc
aas
jae
dec
push
xor
out
imul
aam
jo
psubd
call
xorb
mov
mov
jne
adc
cmp
push
mov
pop
pop
inc
pop
mov
lods
aad
jnp
and
in
push
pop
loop
pop
add
dec
xchg
popf
arpl
xor
inc
mov
mov
or
and
outsl
lcall
and
popl
cmpsb
movsl
out
fs
outsb
decb
fstl
hlt
jbe
stos
sbb
dec
cmp
aaa
ret
add
add
lcall
push
fcompl
jmp
mov
sbb
jecxz
adc
ror
add
imul
les
jmp
xor
jae
mov
push
sbb
hlt
sti
je
xor
xchg
leave
mov
inc
scas
and
xchg
imull
pop
sub
mov
or
cs
lahf
fcmove
call
pop
dec
and
sub
adc
pop
adc
cmpl
out
in
inc
mov
xor
roll
movsb
xor
movsb
in
xchg
movsl
xchg
in
mov
xor
add
sahf
lahf
cmpsb
sbb
or
lea
loop
pop
add
push
jge
sub
gs
push
push
test
xchg
lret
into
jae
aaa
dec
ss
jbe
dec
cmp
jge
xchg
lock
and
aam
inc
loopne
pusha
aad
adc
xchg
fcompl
les
cmp
push
xchg
adc
std
out
pop
xor
ficoms
mov
fildl
popf
ret
dec
addr16
xchg
repz
cmc
cmp
push
mov
push
stc
inc
sahf
test
imul
movsl
mov
jns
or
push
lods
mov
movsl
inc
js
cli
mov
xchg
jnp
fwait
ljmp
les
popa
or
in
pop
ds
fidivrl
add
mov
xchg
dec
pop
fwait
mov
xor
xor
push
push
dec
and
mov
and
enter
repnz
add
shl
jnp
push
jno
popa
push
inc
fimull
iret
lods
dec
xchg
fadds
jg,pt
test
fwait
mov
in
cld
sti
fsubrp
jb
lock
mov
mov
stc
cmp
lea
fwait
mov
cld
pop
push
aam
xchg
sbb
xor
and
sti
cmp
fnstenv
adc
and
hlt
filds
rcrl
jge
or
negb
arpl
std
test
insl
leave
out
fstpt
imul
and
les
mov
push
push
imul
push
add
outsl
in
mov
and
mov
cwtl
adc
xlat
sub
es
jge
lret
and
jmp
out
arpl
and
fwait
xor
fs
movsl
js
add
fdivr
out
ja
dec
or
fldcw
aas
xor
inc
movsb
xchg
aas
movsb
push
mov
andl
sub
fnstenv
lods
bound
push
xor
xchg
int
mov
fidivs
std
nop
nop
scas
xor
and
push
inc
popf
enter
and
test
jae
les
xchg
sbb
cmp
push
arpl
sbb
lcall
adc
pusha
mov
ss
faddp
sub
fsubrp
xlat
bound
pop
stos
aaa
arpl
int3
push
xor
fwait
xchg
mov
imul
cli
lret
test
xor
mov
rclb
arpl
repnz
sti
xor
aam
sbb
out
je
pusha
and
shll
mov
iret
sub
mov
ss
xor
inc
ljmp
into
mov
sub
aas
inc
jns
jns
imul
mull
subl
clc
sbbb
adc
lcall
push
cs
sahf
jno
inc
add
push
xchg
mov
add
in
mov
lods
pop
sbb
inc
xchg
mov
sub
dec
mov
pusha
push
cld
push
rcll
cmpsb
repnz
xor
jbe
cmpsl
sti
loop
lock
mov
pop
jl
jb
push
or
scas
icebp
outsb
xor
push
dec
jbe
cmp
daa
xchg
dec
in
mov
inc
jp
xchg
lods
scas
pop
pop
stc
enter
aaa
mov
jns
mov
clc
repnz
cli
dec
fldcw
pop
pusha
mov
arpl
je
pop
xlat
cmp
adc
test
fadds
inc
sub
cltd
fadd
jl
sub
jb
push
mov
leave
pop
pushf
add
jno
into
scas
mov
push
inc
sub
push
lahf
jne
je
push
test
and
push
cmpsl
sub
nop
xor
jno
inc
test
daa
mov
jb
movl
xchg
bound
lds
xchg
inc
jl
outsb
jmp
ljmp
xchg
data16
lret
aam
xchg
pop
adc
loopne
lret
dec
xchg
and
add
idivb
stc
mov
push
inc
xchg
xchg
into
push
inc
lahf
sbb
dec
es
mov
lock
cmp
mov
ret
cltd
fwait
add
jge
movsl
add
je
mov
inc
adc
pop
ljmp
movsl
add
out
sub
xlat
adcl
mov
lock
enter
jg
pop
call
mov
repnz
ror
xor
sbb
inc
out
fxch
sub
jp
pop
inc
dec
mov
push
dec
insb
mov
mov
xor
scas
sbb
mov
cmpsb
repz
addb
xor
paddw
pop
inc
xor
sub
jl
aam
std
pop
and
xlat
mov
in
cmpsb
xchg
aaa
jnp
fstpl
bound
push
push
mov
dec
out
cmpb
mov
fwait
mov
mov
jo
xchg
fsubr
pop
fnstsw
mov
cmc
jg
stc
push
fbstp
sbb
nop
call
test
lds
jnp
push
ja
rclb
mov
ljmp
add
push
mov
inc
shll
jle
jmp
movsb
push
mov
hlt
stc
es
jnp
outsl
cmpsb
lock
call
in
dec
xor
adc
cmp
stos
mov
cltd
int
outsl
test
out
idivb
in
push
push
je
sahf
or
inc
sbb
mov
faddl
mov
push
aam
sub
fiaddl
add
movsb
pop
stc
mov
pop
jg
jae
lret
jmp
pop
jbe
dec
sub
push
loop
mulb
cmp
cmp
mov
add
sahf
jnp
inc
mov
pusha
stos
xchg
mov
add
jp
inc
sbb
cmp
push
adc
and
push
jb
call
or
xchg
shll
int3
shll
out
bound
inc
push
push
jle
push
stc
push
scas
mov
icebp
push
push
push
ret
loop
cwtl
xchg
add
push
push
vmovsldup
xchg
xlat
test
sub
les
pop
scas
and
cmp
mov
jb
ss
fstps
addr16
mov
xor
push
mov
mov
mov
inc
in
adcl
and
gs
xchg
fldt
jl
xchg
pusha
jo
ja
push
pop
outsb
int
inc
pusha
mov
xchg
adc
cltd
xor
mov
mov
dec
mov
int
cmp
bound
pop
push
rorb
sub
mov
jmp
enter
push
mov
pusha
insl
shrl
mov
pusha
cwtl
and
ljmp
lds
mov
imul
push
jmp
orl
ss
rorl
jne
dec
das
push
aad
out
xchg
out
rolb
aas
pop
decb
jl
clc
pop
lods
inc
js
ret
xlat
imul
mov
push
loope
mov
js
jmp
fisubl
data16
and
mov
insl
cli
cli
fidivs
outsb
adc
jecxz
and
or
xchg
xor
jne
jl
cltd
lret
mov
in
popa
loopne
xchg
imul
jp
insb
jecxz
xchg
pusha
dec
aad
cmpsb
fs
cmpsb
xor
cmpb
inc
jne
in
mov
int
mov
lock
shl
push
jp
stc
adc
add
rol
cmc
and
jl
jae
ljmp
mov
mov
push
jno
or
outsl
fnstsw
push
popf
scas
or
sarb
adc
jnp
out
in
adc
arpl
or
shrb
lods
or
inc
sub
cmp
and
add
dec
jne
subl
lods
xor
je
cmc
adc
xchg
ror
or
cli
add
faddp
mov
out
andl
stc
sbb
xchg
fistps
aaa
cmc
inc
repz
ret
punpckhdq
ss
or
lds
dec
mov
mov
xor
sbbb
push
sbb
clc
or
lea
pop
dec
inc
loope
mov
lods
jo
cld
repz
xchg
mov
mov
jnp
test
cld
mov
flds
push
les
cmpsb
mov
xchg
xor
lret
dec
cmp
repz
mov
cli
adc
dec
or
movsl
pop
xchg
lcall
pop
stc
stc
sahf
clc
pop
lret
xor
sti
push
inc
sbb
int
mov
sti
je
or
mov
jle
int
scas
scas
repnz
addr16
jmp
jno
mov
shr
jmp
mov
sahf
cmp
out
int3
and
je
test
push
xchg
inc
jbe
shl
stc
mov
les
and
test
adc
cmp
arpl
mov
sbb
popa
hlt
jle
xchg
in
into
push
lea
pusha
popf
rclb
iret
add
add
scas
mov
jge
push
sub
mov
ljmp
pop
mov
lahf
push
fildl
or
xchg
pop
out
and
or
pop
sbb
add
sub
andl
notb
push
ljmp
pushf
or
jl
dec
imul
das
lcall
push
push
mov
scas
gs
xor
popa
jmp
cmpsb
data16
dec
pop
test
dec
sbb
rorl
jb
pop
and
cmp
dec
xor
into
mov
mov
cmp
adc
sbb
icebp
lcall
aam
inc
movsb
mov
pop
xor
pushf
sbb
push
push
out
in
xor
push
cld
movq
sub
aas
les
cmpsl
lds
add
sub
mov
ljmp
cmp
stos
das
add
pop
mov
push
or
nopl
pop
dec
sti
not
popf
ss
inc
sbbb
bound
call
adc
mov
jae
sbb
repz
mov
push
sbb
in
imul
fs
push
fwait
jmp
mov
mov
psrlw
mov
mov
jne
pop
push
push
push
aam
xchg
ret
fmull
lret
fadd
loope
push
add
mov
add
adc
scas
sbb
push
mov
aas
test
mov
xlat
xchg
imul
cwtl
loop
std
dec
xchg
test
in
jmp
mov
jno
out
jle
jle
out
cld
mov
or
ja,pt
inc
sub
mov
sub
inc
xor
push
xor
aad
cmpsl
mov
mov
psllw
jo
cltd
test
sbb
xor
repz
pop
mov
fnstenv
sbb
in
push
test
push
add
cmpsl
stos
scas
fs
movsb
rcll
js
mov
sub
jae
xor
pop
mov
pusha
es
test
sarl
xchg
sbb
out
sahf
xchg
jnp
push
pop
mov
mov
mov
jbe
fstl
cmpsl
ja
mov
lds
les
xchg
and
cltd
mov
pop
insb
inc
and
daa
jno
lret
adc
inc
and
pop
cld
jg
jno
cwtd
std
mov
cmp
jmp
and
jo
sbbb
pop
mov
aaa
inc
adc
mov
jae
inc
mov
testl
or
mov
inc
sub
ret
jge
push
xchg
fldcw
jg
push
push
pusha
sbb
mov
repz
out
ss
mov
sbb
lods
xlat
repnz
out
mov
cmp
pop
inc
push
shll
shrl
cmpsb
adc
fsubrl
cmc
in
popf
addr16
in
andb
lods
loop
out
pop
push
data16
mov
insb
jo
mov
in
mov
cmp
cmp
lret
dec
dec
mov
je
clc
jle
xor
lock
mov
movswl
mov
scas
nop
push
popf
jb
and
jg
pop
jb
rcll
jb
stc
xchg
inc
lods
cmp
aas
push
out
test
fidivrl
add
rorb
mov
insl
or
iret
daa
push
in
in
ret
jg
hlt
cmpsl
std
fxtract
xchg
push
sahf
aam
mov
lds
ljmp
fsubs
orl
pushf
mov
flds
dec
enter
movsb
andb
arpl
adc
xchg
ja
stos
fistpl
stos
mov
mov
and
shlb
int3
in
je
jbe
ret
xor
pop
push
je
cmp
data16
mov
inc
nop
adc
xlat
jns
rorb
pop
jns
js
or
cmp
xor
vpaddw
jnp
mov
xchg
jmp
lds
mov
clc
mov
jmp
outsb
sbb
push
adc
pop
call
mov
aad
lods
int
dec
lcall
in
add
subl
or
and
nop
mov
and
fs
mov
fimull
push
add
xor
int
jl
fadds
jecxz
xchg
incl
push
pushf
push
out
out
daa
lcall
les
gs
push
sub
mov
je
fsubr
pusha
add
arpl
fiadds
lods
cmp
inc
cmp
or
loop
in
clc
or
dec
outsl
mov
shrl
cmp
jg
xor
mov
mov
mov
jl
xchg
mov
mov
aas
nop
cmp
idivb
sahf
mov
es
adc
mov
shll
or
in
pop
lea
push
cmp
jns
mov
in
insl
mov
je
push
add
ret
into
and
into
cmp
stc
ljmp
or
pop
pop
push
sbb
std
push
mov
sub
pop
ror
into
cmp
sub
adc
mov
and
mov
lret
lods
xor
in
and
adc
add
mov
jg
jecxz
push
pop
mov
es
jno
rclb
mov
xchg
loopne,pt
push
lods
xorl
or
mov
fs
adc
or
push
mov
out
shlb
shl
dec
xor
lret
rolb
aam
arpl
outsl
sbb
insb
jecxz
mov
test
loopne
and
xor
lds
jp
mov
pusha
pop
add
sub
pop
push
mov
sbb
pop
mov
and
ret
inc
mov
scas
sbb
cmp
popf
jmp
cwtl
xor
or
cmp
out
lods
pop
cmp
int
mov
pushf
out
add
stos
dec
int
or
loopne
jg
loope
hlt
jl
lea
mov
lcall
mov
cmp
and
rcrl
xchg
dec
js
arpl
mov
sbb
outsl
scas
in
in
xor
aas
inc
iret
inc
inc
push
in
mov
add
and
cmp
xor
cmp
jbe
fimull
je
inc
mov
xchg
rol
pop
jmp
out
aas
fdivrs
jge
xor
mov
pop
rcrl
in
and
aam
dec
mov
push
loope
sbb
jmp
jmp
inc
repnz
jnp
test
jo
mov
jl
inc
cwtl
sbb
inc
imul
jl
or
es
inc
inc
loopne
fcomps
add
repnz
xor
jg
add
call
xchg
lods
add
dec
cmp
insb
adc
jl
popa
mov
lds
mov
sub
jns
xlat
xchg
jl
lock
loopne
cmp
mov
ljmp
xchg
push
and
scas
and
pop
fdivrp
pop
insl
mov
into
xor
pop
bound
jbe
dec
adc
fisubrs
xor
pop
popa
inc
ss
jmp
and
dec
iret
fincstp
iret
adcb
loopne
ret
jmp
xchg
mov
cmp
int3
inc
mov
jle
dec
aas
shrl
notb
leave
loopne
mov
push
loop
and
imulb
pop
xlat
mov
or
std
pop
enter
jno
or
mov
pop
pushf
add
cmp
xor
dec
mov
lods
iret
repz
mov
cmpsl
icebp
call
hlt
lcall
jne
cwtl
dec
xchg
in
push
push
mov
lods
push
movsb
pop
ror
addb
sub
dec
inc
in
outsl
into
xor
adc
popa
dec
leave
in
push
xorb
or
into
dec
inc
dec
sbb
insb
and
mov
iret
mov
cli
insb
mov
jle
mov
movsb
dec
ffreep
or
and
das
lds
mov
stc
adc
jnp
mov
and
push
in
and
pop
sbb
daa
aam
mov
lahf
scas
mov
jns
pushl
mov
fwait
daa
repz
xor
or
pop
mov
dec
inc
pop
icebp
pop
xor
xchg
jbe
push
ds
mov
cltd
adc
xor
fdivrl
ds
insl
sbb
notl
mov
int3
int
mov
clc
mov
cmp
mov
inc
sbb
std
lds
xchg
lret
out
test
pop
mov
inc
fisttpll
cmpsb
xor
xor
rcrl
gs
jo
cmc
in
sbb
push
xor
std
jae
sub
push
fcmove
jne
int3
mov
divb
fsubl
sbb
negb
loop
cwtl
adc
or
adc
rclb
cli
fsub
enter
mov
dec
add
push
ljmp
std
test
sbb
xor
mov
pop
mov
out
int
inc
adc
sbb
pop
mov
js
sbb
ret
or
push
mov
ds
repz
sti
jp
cwtl
jg
push
or
add
and
insb
mov
jmp
jg
xor
imul
in
mov
test
stc
loopne
ret
push
dec
adc
fildll
in
mov
andl
imul
out
dec
iret
ja
xor
inc
xchg
and
xchg
push
lods
inc
xorb
inc
jp
sahf
mov
out
aas
jl
nop
dec
inc
mov
mov
pop
cwtl
adc
cmp
dec
sub
xchg
popf
lods
sti
or
mov
adc
mov
ljmp
movsl
sti
ret
adc
aas
test
popf
mov
and
sahf
hlt
mov
enter
mov
scas
add
pop
mov
mov
repz
jmp
aad
pusha
std
aam
sbb
lods
in
jge
and
sbb
mov
aam
int
mov
cmpsl
push
sub
test
xor
jbe
push
pop
mov
fldcw
adc
mov
aas
jae
aaa
fidivs
and
xor
mov
repz
inc
cmp
adc
ret
cmp
jg
dec
stos
push
daa
jmp
js
leave
sbbb
test
std
imul
mov
leave
insb
xor
movb
mov
adc
pop
cli
pop
inc
push
sub
cmp
cmp
jnp
push
jecxz
add
jle
and
scas
sbb
xor
fwait
enter
dec
testb
repnz
rorl
movsb
stos
pop
adc
xchg
sub
inc
dec
cmp
xor
shl
fwait
cmp
dec
cmp
aam
popf
cld
lcall
jno
xchg
push
scas
lahf
rclb
jmp
outsl
negl
scas
and
xchg
ss
cwtl
push
inc
call
pushf
add
mov
dec
pop
cmpsl
call
cmpsb
jbe
out
mov
jno
xchg
mov
shlb
test
out
xchg
mov
cwtl
adc
cmp
sbb
inc
mov
fnstsw
mov
mov
lds
xor
into
cmc
cmp
add
inc
mov
add
push
mov
loope
mov
pop
adc
pop
stc
jmp
adc
and
adc
outsl
push
add
push
mov
sub
dec
jbe
cmp
cli
jmp
cmpl
mov
dec
testb
jle
xchg
mov
lock
inc
pop
insb
out
jo
inc
hlt
push
fbld
jl
lret
dec
jle
push
mov
sub
ret
cli
push
pop
stos
cld
mov
lds
add
adcl
dec
clc
dec
jae
movsl
mov
ss
sti
arpl
cmp
pop
cmp
and
stos
jl
sbb
mov
jmp
jo
movsb
and
dec
cmp
pop
pop
push
jo
mov
imul
add
es
rorl
ljmp
push
arpl
mov
lea
and
cs
in
mov
sub
pop
daa
out
fcoms
or
cmp
adc
xchg
cli
adc
lods
lea
in
lahf
cmp
nop
jp
lret
mov
scas
mov
push
vpaddw
test
sbb
jg
cld
jne
add
pop
dec
dec
popf
push
aas
or
icebp
pushf
stc
jmp
cmp
add
shrl
sub
fucomip
fnstcw
or
fwait
add
js
mov
pop
mov
add
pop
sbb
sbbb
xchg
xor
aam
mov
jbe
movsb
das
jl
scas
insl
pop
push
sub
iret
push
xchg
pop
inc
popa
or
mov
adc
das
loope
ljmp
xchg
jne
push
rcl
and
mov
insl
push
repz
cmpsb
inc
addr16
cwtl
outsl
cltd
mov
lea
js
pop
jno
inc
adc
sbb
sub
orb
bound
cli
pop
fisubl
dec
push
pop
rcrl
dec
pop
int3
cwtl
jb
iret
cmp
arpl
fadds
fcompl
test
push
adc
pushf
inc
push
arpl
lods
xor
cs
adc
adc
inc
xchg
scas
push
test
imul
lahf
leave
xor
test
xchg
xchg
lods
out
sbb
popf
pusha
sbbb
mov
pop
jecxz
xor
jp
or
dec
scas
imulb
xchg
imul
jmp
mov
pop
repnz
incb
cmp
outsl
shl
add
mov
in
or
add
jp
adc
fisubl
stos
cmp
mov
push
cmp
lds
in
or
rolb
mov
inc
fidivs
js
xor
xor
repnz
shl
pusha
cmpsb
clc
aas
sbb
test
outsl
inc
mov
sbb
mov
mov
xlat
mov
lcall
scas
pop
test
pop
ja
mov
inc
pop
fists
leave
jge
mov
push
push
test
enter
jmp
aaa
movsb
mov
test
das
roll
cmp
jl
adc
lcall
xchg
movb
push
nop
jmp
adc
and
popf
pop
xorl
add
mov
mov
xchg
rcll
cmc
fwait
in
imul
out
push
xor
shl
es
ja
cmc
test
xor
fs
out
pop
dec
jmp
aad
xchg
sahf
push
adc
dec
loop
mov
das
xor
push
add
inc
subb
rorl
outsb
sti
test
sti
xchg
push
adc
xchg
mov
rolb
movsb
push
cs
push
sbbb
push
fildl
aad
or
out
cmc
pop
cmpl
push
stos
xchg
add
xor
xchg
pop
sub
repnz
inc
int3
or
cltd
dec
mov
test
xchg
nop
hlt
push
or
sub
pop
dec
inc
mov
insb
mov
cmpl
and
das
loope
flds
xor
mov
inc
push
dec
inc
imulb
inc
and
xlat
pop
shll
js
adc
jbe
mov
jo
jnp
mov
mov
push
mov
cmpsb
rcll
roll
mov
int
aas
jle
jbe
mov
dec
mov
cmp
repnz
shll
testl
sbb
test
or
adc
rorb
icebp
mov
xchg
rcl
inc
push
adc
frstor
xchg
xchg
es
jae
sub
cli
add
repz
lds
pushf
jo
daa
lea
pop
int
dec
es
rorl
mov
call
or
mov
popf
sahf
ljmp
push
cmp
pop
movsb
nop
repnz
mov
std
xchg
ret
out
out
jge
sub
dec
adc
cmpsl
loopne
xchg
enter
pop
inc
cmp
popa
sbb
mov
push
nop
cmp
pop
sub
shl
sbb
mov
add
nop
mov
sub
or
jp
jne
imul
xchg
outsb
rorb
leave
cmc
pop
sub
xorb
lods
xchg
and
push
mov
mov
or
mov
es
dec
fbstp
or
and
fnstenv
sbb
out
bound
jne
sub
popa
fwait
and
cmp
lret
mov
mov
cmpsb
add
in
mov
mov
sbb
out
lds
mov
add
mov
js
mov
jnp
inc
push
fstpl
out
out
push
mov
jg
inc
adc
repnz
in
ret
jnp
xor
mov
pop
insb
sub
mov
add
sbb
stc
mov
arpl
jg
jmp
push
cmp
scas
xorl
or
mov
xor
andl
ret
pop
ss
lock
loop
bnd
cli
xor
inc
sub
clc
test
fistl
insb
imull
movsb
jge
icebp
add
leave
jg
or
jns
repnz
std
int3
call
inc
mov
xchg
xchg
push
addr16
aas
and
xchg
test
insb
push
popf
frstor
mov
jo
push
mov
mov
shll
add
shll
pop
mov
hlt
lods
jae
in
or
test
fstpl
arpl
hlt
mov
adc
push
mov
cmp
lds
scas
push
loope
shlb
fldt
aam
adc
jecxz
ss
clc
adc
jmp
ss
adc
push
sbb
mov
scas
in
iret
in
mov
mov
sbb
scas
lret
repnz
ljmp
negb
dec
push
pop
lcall
mov
es
repz
pop
pop
fs
stos
popa
ds
xor
inc
and
cwtl
gs
cs
dec
mov
js
mov
push
mov
push
push
lods
jle
sbb
cmp
mov
sub
and
dec
xchg
xchg
add
add
mov
repz
push
inc
das
arpl
mov
mov
int3
iret
push
cmpsb
shlb
fwait
cmp
out
int
rcr
pop
inc
movsl
cmc
xchg
add
sbb
test
cmp
test
rcrb
rcll
or
gs
add
pop
inc
int
movsl
imul
dec
lods
imul
mov
inc
inc
push
sarb
rcll
xchg
ss
sbb
orb
test
jle
sub
fdivrl
mov
loope
xchg
les
xchg
test
sub
mov
inc
push
fimuls
push
loopne
jmp
aam
and
xchg
push
pop
mov
hlt
dec
jle
iret
mov
pop
mov
ljmp
cmp
xchg
fdivl
insl
clc
repnz
xorb
je
jns
cld
and
mov
pop
push
mov
add
lret
mov
cmpsl
test
pop
loopne
cwtl
push
lods
aad
cmove
mov
pop
pop
pop
insb
test
lret
pop
jle
pop
subb
leave
pusha
xchg
cmp
std
or
cwtl
sbbb
aas
mov
idivb
dec
mov
sub
mov
sarb
push
xchg
scas
fcmovbe
cs
jnp
lcall
iret
mov
sbb
push
stos
pusha
pop
shlb
incl
cmp
arpl
jno
sbb
inc
push
cmp
fs
jge
loop
pop
js
add
mov
scas
push
roll
cmpsb
mov
jg
jns
or
loope
cmp
mov
fidivl
add
in
pusha
sbb
inc
insl
xchg
bound
pop
scas
mov
hlt
cmp
pushf
and
pop
sti
enter
loop
cmp
hlt
add
sub
add
cld
pop
test
fisttps
pop
in
jns,pn
or
inc
lahf
push
dec
jl
adc
fwait
adc
jbe
cmp
adc
stos
fimuls
sti
ljmp
insb
inc
pop
and
add
pop
imul
hlt
mov
paddq
jnp
jo
mov
dec
ss
push
push
repnz
iret
sti
outsl
add
jno
repz
insl
rolb
jns
fldt
pop
sbb
adc
dec
lcall
push
sbb
mov
iret
ss
push
xchg
repnz
mov
insb
data16
in
adc
dec
fidivl
inc
inc
push
iret
ficompl
fucompp
movb
dec
mov
andb
loope
jecxz
out
sbb
out
lret
nop
aaa
or
mulb
cmp
andl
push
jmp
xor
add
adc
mov
scas
mov
andb
sbb
dec
jge
xor
fcompl
sub
lea
imul
push
pop
scas
filds
jbe
int3
push
jmp
xor
pop
cmpsb
mov
or
push
clc
stc
add
mov
sahf
pop
ret
mov
dec
or
mov
pushf
jo
and
push
lret
xor
sub
sahf
mov
daa
dec
sbb
daa
je
repz
pop
xchg
lcall
fisubrl
aaa
stos
and
push
or
push
ja
test
or
sbb
nop
mov
and
xor
mov
xchg
or
add
mov
mov
dec
lret
dec
arpl
iret
vmovmskps
mov
ss
sbb
test
push
lret
and
pushf
push
je
xor
mov
data16
iret
push
push
jg
jecxz
dec
pop
mov
cmp
cltd
mov
movb
movsb
mov
and
pop
arpl
bound
xor
xchg
sub
sub
adc
shlb
dec
xchg
icebp
lds
mov
dec
ss
stos
cmc
dec
jmp
popa
dec
cmp
mov
xor
inc
pop
ljmp
xchg
sbbb
mov
sub
aas
or
fldt
ljmp
and
fwait
dec
mov
adc
xchg
xchg
movsb
cmp
add
arpl
jecxz
ja
imul
sbb
into
out
or
jge
mov
sub
cmp
std
mov
xor
jge
cmc
addb
jmp
add
or
add
loop
xor
dec
adc
imul
rcll
push
cmp
mov
push
int3
incb
lea
add
std
jo
fisttps
test
sub
mov
jge
jne
insl
jg
or
lock
sbbb
lds
xchg
mov
or
pop
inc
sahf
aam
imul
bound
aam
je
mov
out
push
jbe
lcall
repnz
mov
dec
loope
push
bound
cld
jo
call
cs
int3
mov
xor
enter
inc
test
imul
pop
cmp
in
inc
test
ljmp
add
sti
inc
idivl
inc
sbb
enter
call
mov
shlb
int
xchg
xchg
dec
and
push
insl
repz
sbb
or
hlt
jg
mov
push
adc
mov
and
mov
lea
cmp
icebp
repz
jecxz
fwait
cld
mov
popl
add
sub
insb
pushf
mov
incb
scas
movsl
pop
cmp
loopne
in
lret
pop
add
loopne
xchg
sbb
push
push
leave
sub
jo
cmc
xchg
sub
push
inc
adc
push
and
xchg
popf
jecxz
mov
adc
ds
incb
cmovo
inc
and
add
idivl
xchg
add
sbb
test
jg
ret
les
mov
cmc
std
subl
popf
cmc
loop
pushl
fs
pushf
xchg
push
add
rorb
xchg
push
clc
mov
ret
dec
fs
lcall
ljmp
cmp
xor
jo
addl
cmp
xchg
mov
or
jmp
int3
std
xchg
xorl
inc
mov
shrl
push
dec
outsl
aas
push
mov
fsts
insl
idivb
sub
fbld
mov
mov
cli
ds
int3
mov
xor
sbb
adc
dec
out
sbb
xchg
inc
dec
lds
and
xor
test
xchg
andl
aad
pop
mov
mov
jge
add
sbb
in
mov
lret
and
dec
stos
and
sub
xchg
mov
push
aad
xchg
popf
and
and
aad
test
jb
movsl
fldcw
addl
paddb
rol
divl
jb
mov
mov
ds
jmp
jno
xchg
nop
mov
jb
push
ds
dec
hlt
sub
hlt
jmp
scas
int3
sub
push
aas
lods
out
push
sub
mov
in
push
lahf
test
out
adc
cmp
xor
aas
jo
mov
mov
lret
pavgw
or
leave
ja
ret
push
mov
pusha
adcb
inc
jle
stos
shll
mov
sbb
mov
cltd
imull
jbe
cli
mov
cmp
cmp
pop
lea
jecxz
jae
test
daa
rcrl
xchg
in
or
and
cmpsb
js
sub
xor
filds
arpl
lahf
jecxz
xchg
xor
into
rcr
jo,pn
dec
jl
outsb
pop
iret
mov
test
jg
lock
and
or
inc
icebp
test
imul
outsl
test
push
xor
push
sub
gs
mov
fists
sub
pop
mov
sub
push
pusha
pop
nop
push
or
mull
cli
push
and
mov
popf
jne
lods
inc
ret
ret
arpl
cmp
in
adc
jns
test
lcall
fldcw
test
mov
in
sub
lock
scas
ja
mov
js
adc
addr16
inc
inc
or
lds
xor
sti
mov
iret
push
lahf
in
push
clc
int
lcall
jbe
lret
cltd
push
dec
xor
nop
push
shl
rolb
add
into
addr16
sbb
loopne
loopne
insb
lcall
adc
and
pop
inc
repz
jp
add
or
dec
pop
sbb
int3
fmull
repnz
push
movsl
sub
mov
push
out
pop
pop
inc
dec
cli
jecxz
inc
sbb
inc
adc
data16
cmp
icebp
and
mov
cwtl
int
and
mov
mov
inc
mov
mov
stos
pop
inc
in
aas
lea
loop
inc
mov
std
test
cwtl
inc
jg
xor
lock
inc
in
adc
jmp
mov
inc
push
jns
ror
fcoml
and
adc
mov
mov
test
repz
fnstsw
pop
xor
jo
pop
push
rcrl
jecxz
jbe
nop
sahf
jnp
cmp
sub
cmp
insb
lret
push
mov
xor
in
push
dec
jb
aas
jne
push
xchg
fcoml
outsl
fcoml
leave
sbb
addr16
or
xor
and
jl
mov
xor
loop
hlt
clc
dec
sub
lock
sub
shlb
shll
in
push
sub
inc
jb
enter
add
jns
gs
fwait
jl
mov
gs
jae
dec
into
neg
ja
test
cmp
orl
pop
inc
lcall
out
lods
xchg
ret
inc
mov
mov
test
pop
outsl
adc
rcrb
pop
sbb
test
and
cmc
sub
test
mov
in
xchg
mov
or
in
push
ret
add
mov
daa
out
or
cmp
ljmp
icebp
loop
fbstp
cmpsl
cmp
mov
data16
fnstsw
nop
cmp
or
out
cwtl
aam
cmp
mov
pop
mov
adc
out
aam
mov
in
add
dec
mov
sbb
adc
xor
mov
pop
inc
cmp
push
xchg
sub
add
pop
aas
add
shll
sbb
mov
loop
dec
cwtl
out
adc
leave
mov
pop
loopne
push
fmul
pusha
and
repnz
sahf
cmp
sub
icebp
stc
pop
sbb
xor
outsb
mov
cmp
push
gs
jg
popa
popf
icebp
or
sti
sub
scas
arpl
lods
mov
lods
std
jl
test
stc
lcall
popa
push
aaa
pop
movsb
sbb
jp
mov
int3
lods
xor
jecxz
shll
add
push
xchg
and
jbe
cmp
imul
inc
repz
aas
and
push
jmp
loopne
pushf
inc
imul
push
cmp
mov
inc
stos
mov
mov
lea
enter
mov
adc
mov
cmp
notl
jmp
cmpl
push
sbb
dec
push
lcall
enter
ja
inc
loope
xchg
pop
lret
clc
std
ss
insb
sub
fcoms
lcall
adc
fsubs
push
cmp
sarb
out
lfs
pop
cmovge
xchg
adc
int3
imul
out
jb
aaa
push
das
out
lock
add
rcrl
sahf
jp
test
sbb
dec
cli
lods
popa
xor
jecxz
and
std
ja
pop
jg
out
xchg
mov
stc
movsb
cmpsb
and
aaa
pushf
mov
jae
xchg
cmpsl
scas
cwtl
mov
push
gs
and
cmp
xor
mov
mov
mov
test
push
cmp
mov
sbb
sub
test
sbb
xchg
or
lods
fstpt
mov
hlt
js
cmc
clc
jecxz
insl
pop
xor
push
pop
fadds
lea
cmpsb
jmp
jl
imul
inc
xor
and
inc
lods
gs
mov
sub
xor
adc
mov
or
mov
adcl
adc
popa
addb
mov
push
mov
setnp
jne
mov
inc
es
dec
test
in
pop
lds
xorb
pcmpeqw
mov
cmp
idivl
andl
aas
popa
ret
std
xchg
mov
inc
mov
leave
lret
xchg
jne
popf
cmc
adc
push
sbb
out
es
ja
pop
jbe
sub
ficoml
inc
pop
mov
lcall
insb
fucom
imul
inc
sub
movsl
lret
xorb
dec
ret
jbe
pop
add
or
scas
je
fiaddl
mov
xor
jns
inc
fs
sbbl
mov
imul
pop
sub
mov
inc
push
ss
insl
sub
jmp
inc
insl
addr16
pop
pop
lods
aaa
test
test
fs
shlb
xor
jp
movsl
push
into
push
sbb
int3
add
push
xchg
mov
sbb
or
dec
push
fadd
mov
imul
adc
push
imul
inc
in
sub
mov
dec
push
in
xchg
mov
sbb
sti
push
mov
in
pop
inc
xor
jmp
addb
iret
jmp
xorb
jmp
popa
movsb
pop
punpckhdq
repz
lods
pop
jne
in
pop
xchg
rcl
dec
pop
cmp
cmpsb
arpl
les
mov
inc
sti
xchg
sbb
pop
lods
movb
inc
xor
mov
mov
in
inc
push
pop
mov
roll
leave
test
push
roll
push
pop
add
into
and
push
popa
jne
outsl
lods
pop
dec
jo
xor
es
sub
jb
repnz
pop
ret
icebp
loope
add
mov
xor
std
popa
dec
xchg
sarl
ret
cmc
test
jne
mov
adc
sbb
add
mov
dec
or
push
repz
jno
or
bound
inc
xchg
cmp
fimuls
mov
out
lods
add
xor
sub
popf
int3
mov
jmp
jge
bnd
push
movsb
movsl
or
test
test
cmp
inc
rorb
push
insl
popf
adc
pop
mov
and
adc
movsb
imul
jge
lea
push
mov
mov
push
es
das
mov
bound
shrl
mov
cmp
mov
cltd
popf
inc
mov
jmp
cmp
xchg
jg
inc
insb
push
cltd
inc
pop
out
jmp
out
mov
cltd
and
cltd
xchg
or
aam
fstl
jmp
rclb
mov
xlat
push
outsl
jo
ret
lret
fidivl
and
push
xor
sub
leave
add
pop
cmp
mov
mov
push
mov
out
pop
std
jo
mov
mov
pop
imul
mov
test
pop
insl
lock
xchg
ljmp
mov
add
or
data16
fstps
pop
mov
sub
test
dec
sahf
gs
mov
movsb
adc
inc
dec
popa
aas
sti
das
aam
sbb
cli
repnz
ja
pop
pop
loope
mov
nop
out
orb
popf
mov
inc
sub
xchg
sub
ret
movsl
movsl
or
cwtl
and
push
and
xor
xor
mov
mov
sbb
cmp
push
jge
mov
inc
jne
ret
mov
sbb
maskmovq
cltd
lret
sbb
sysexit
hlt
adc
adc
in
pop
inc
stos
fisubrs
inc
sbb
cwtl
xchg
lock
adc
cmpsl
cmp
rorb
xor
push
fstpl
jp
and
jne
les
cli
call
popf
xlat
fwait
inc
dec
mov
icebp
imul
mov
push
inc
push
cmp
jg
push
lret
roll
std
and
add
xchg
mov
xor
sti
arpl
dec
adc
outsb
or
jmp
dec
fstps
mov
adc
jp
xor
cmp
rolb
sbb
sub
mov
sbb
mov
rcll
rolb
xor
test
imul
aad
lcall
adc
adc
mov
das
jno
jg
cmpl
movsl
cmp
cwtl
sub
pop
inc
mov
and
pop
inc
insl
mov
pop
test
mov
xor
aaa
popf
xchg
mov
sub
push
mov
stc
sbb
fimull
loopne
pop
mov
test
jb
sub
inc
adc
std
mov
lret
jns
jmp
loop
lahf
sub
popf
pop
mov
mov
cli
mov
mov
negl
add
cwtl
mov
std
aas
xor
mov
lcall
and
insb
jnp
or
and
cmp
mov
jno
je
cmp
dec
dec
inc
call
andb
test
fldcw
cmpl
ret
sub
push
daa
push
adc
leave
int
dec
int3
testl
push
mov
stc
sahf
inc
mov
inc
and
jae
jmp
or
and
js
push
ret
out
inc
xchg
enter
pop
mov
xor
adc
dec
divl
dec
jecxz
inc
sti
fnstsw
inc
or
mov
imul
dec
mov
test
test
mov
sbb
cmp
dec
fwait
test
push
jmp
scas
xchg
test
fidivs
popa
jmp
sbb
adc
fwait
enter
jae
out
xorl
xchg
inc
insb
add
mov
inc
cmpsb
out
add
cmc
mov
pop
jecxz
or
sub
loope
dec
jl
das
inc
movsl
or
scas
xchg
pop
repz
sub
test
mov
mov
dec
vmovshdup
dec
sti
arpl
push
pusha
or
outsb
push
xchg
lods
sbb
das
inc
jle
inc
xor
in
add
pop
pop
cld
ds
mov
xor
enter
mov
je
aad
adc
cmp
sub
mov
mov
cmc
fisttpl
lea
adc
ret
out
push
dec
sub
pop
push
adcl
ja
mov
rolb
lahf
and
jg
jo
push
inc
fidivs
rclb
popa
jge
loop
call
add
fdivl
lods
mov
mov
add
adc
pushf
ret
adc
push
lods
push
inc
into
mov
lcall
roll
pop
leave
int3
mov
insl
movsl
jge
rcll
lret
xchg
or
inc
subl
hlt
mov
add
jle
aaa
mov
push
cmpsb
in
data16
dec
loop
inc
repnz
cld
push
ja
cmp
cltd
outsb
movsb
sub
inc
inc
flds
dec
inc
adc
je
inc
xchg
pop
cmp
les
iret
lret
add
fisubrs
mov
mov
mov
sbb
js
out
mov
xchg
outsl
pop
mov
or
lock
les
mov
loope
int3
out
pushf
sbb
mov
mov
loopne
roll
cmp
or
repz
dec
std
stos
leave
cmpsl
int
sub
jp
bound
lock
call
inc
xchg
xor
fldcw
inc
push
mov
movsb
hlt
mov
xchg
pop
xchg
mov
call
mov
outsb
mov
pusha
inc
dec
adc
mov
pop
scas
enter
pop
dec
inc
mov
xorl
jo
mov
loop
sbb
push
test
repnz
test
adc
out
iret
push
sub
mov
inc
into
xor
xchg
movl
xor
adc
ficompl
out
cmp
ss
rcrl
sub
lret
cmc
dec
mov
test
dec
lcall
cmp
pop
adc
mov
rclb
pop
cmp
xor
jbe
or
mov
idivb
daa
lcall
jne
daa
int
sbb
adc
test
xor
cmpsl
pusha
cli
inc
mov
push
bound
xor
dec
outsb
repnz
je
out
jne
cld
in
cmp
repnz
dec
jb
vpsubsw
scas
jg
xchg
ret
mov
pop
orl
leave
dec
imul
inc
mov
gs
call
adc
nop
arpl
mov
scas
push
cmc
dec
push
adc
popa
mov
jg
or
and
aaa
and
fwait
lret
cli
adc
xchg
cld
fisttpl
push
dec
dec
dec
sub
mov
pop
ss
mov
popf
xchg
fldt
fisubs
dec
dec
jae
in
arpl
mov
mov
fstpt
cli
or
mov
cs
ret
push
test
xchg
mov
imul
gs
jmp
sbb
push
fmull
xor
dec
mov
negl
mov
in
sub
repnz
in
mov
arpl
leave
dec
xchg
adc
lret
stc
hlt
and
in
into
mov
xchg
iret
imul
cmpsb
inc
xor
rclb
pop
js
mov
xchg
movsb
cltd
sbb
mov
iret
aad
mov
push
popa
fwait
dec
jge
cmpsl
sbb
xchg
mov
mov
mov
shll
or
mov
mov
xchg
push
lods
mov
test
or
adc
outsb
xor
scas
ffree
ret
dec
addr16
loopne
js
push
cltd
rol
adc
lds
mov
sbb
lret
mov
cmpsl
cld
cli
xchg
mov
push
push
pop
pusha
daa
mull
jl
mov
adc
cmc
clc
jecxz
daa
lock
loop
insl
jno
bndstx
pop
pop
stc
sub
loope
push
sbb
insb
pop
popa
lret
lcall
sbb
test
fsts
mov
push
inc
mov
sub
aaa
hlt
mov
sub
add
js
jbe
arpl
test
inc
mov
arpl
mov
mov
sbbb
add
mov
and
cmp
dec
push
je
ds
mov
arpl
jns
adc
pop
sub
mov
mov
test
mov
sar
insl
jae
inc
sub
hlt
mov
adc
out
test
stos
jecxz
or
mov
push
je
and
xchg
pop
out
incl
lret
or
adc
push
mov
test
fwait
sub
push
xchg
cmp
pop
addb
sbb
jbe
fwait
cmpsl
pop
ja
mov
mov
adc
aaa
shrl
cli
jae
into
inc
mov
rclb
das
ret
shlb
rclb
lcall
mov
cwtl
adc
nop
and
pop
insb
mov
pop
pop
adc
push
int
mov
jae
je
ja
insl
iret
stos
je
ficomps
loope
stos
dec
xchg
mov
sarb
movsb
out
loopne
fwait
xchg
push
cmp
inc
xchg
jg
sub
loope
ss
aaa
push
sahf
or
in
test
push
clc
inc
cmpsl
cli
jo
lret
movsb
and
mov
lret
mov
and
aad
mov
mov
push
movsb
cmp
xor
aaa
insb
add
fidivs
xchg
sub
sahf
ret
in
push
jg
outsb
push
stos
inc
lds
das
dec
test
cmp
pop
sbb
icebp
popf
js
mov
je
fbstp
mov
cld
and
pop
inc
adc
popf
push
insl
mov
add
scas
inc
cmpsb
xchg
mov
add
add
rolb
gs
mul
mov
repz
loopne
push
movsl
pop
or
std
and
lods
add
ror
js
xchg
sbb
call
mov
out
dec
or
add
cmpsb
sbb
orl
sbb
fldenv
fcoml
nop
push
out
insl
sbb
imul
xor
jns
cltd
aas
add
mov
jl
xchg
jae
in
scas
xchg
cmp
std
adc
call
dec
or
popa
lods
shrb
movsb
lret
push
jle
sub
enter
lahf
dec
je
and
add
add
sahf
out
mov
push
loop
aad
test
lock
xor
sbb
cltd
insl
or
push
mov
push
sub
pusha
into
test
dec
jg
mov
inc
addr16
jne
push
adc
or
xchg
mov
rcr
enter
adc
pushf
outsl
mov
scas
int
lahf
cmpsl
mov
cmp
and
dec
aad
scas
add
sbb
stc
adc
and
cmp
addb
mov
aad
cmp
stc
cltd
pop
outsl
bound
into
data16
push
xchg
push
jae
push
mov
js
orl
jg
cs
or
cmp
repz
push
and
into
bndldx
jecxz
aam
mul
xor
icebp
in
pop
or
std
daa
mov
jge
out
andl
lock
sub
jnp
stos
push
mov
pop
cmp
js
cmpl
and
dec
sahf
push
and
testl
mov
inc
repnz
jb
dec
inc
cmp
cld
xchg
adc
jo
jbe
stc
mov
cltd
sub
adcl
inc
mov
and
and
jns
mov
pop
insb
xor
loope
icebp
mulb
sub
repz
pusha
cmpl
dec
adc
add
jg
decb
dec
and
xor
sbb
outsl
jmp
mov
mov
mov
jbe
dec
fs
popa
iret
fwait
lock
sbb
aam
xchg
sub
int3
ret
mov
mov
inc
sahf
hlt
xchg
inc
stos
insl
cli
jg
pop
int
sub
leave
xor
test
scas
das
adc
push
imul
outsb
orb
pushf
cs
dec
cld
aaa
mov
popa
mov
shlb
pop
mov
pop
push
and
push
push
ljmp
xchg
nop
sub
lock
leave
lods
jle
jbe
sbb
test
inc
stos
daa
loopne
xchg
pop
jl
push
add
inc
pop
mov
es
lea
lock
aaa
es
insb
inc
dec
sbb
iret
sti
clc
and
inc
dec
loope
pop
mov
dec
xor
nop
lods
lret
icebp
xor
sbb
adc
inc
mov
dec
test
push
push
dec
inc
cmp
test
sbb
pop
ljmp
inc
pop
out
adc
sub
jg
xchg
cmp
out
lods
sub
lock
adc
int3
jb
enter
das
pop
pop
mov
mov
cwtl
lahf
jge
xchg
aam
insl
ja
notl
mov
xor
fdivrs
adc
lods
mov
aam
xor
test
int
xchg
insl
jo
jo
sarb
mov
mov
inc
arpl
cli
cmp
pop
ljmp
ljmp
and
fwait
pop
pushf
std
dec
or
sbb
jmp
jae
repnz
ret
arpl
incb
faddl
jae
sub
ss
mov
pop
xchg
icebp
jge
dec
inc
jbe
jne
call
and
pop
mov
das
jecxz
jno
mov
mov
add
add
mov
add
and
sbb
inc
aaa
shl
xor
jecxz
rcrb
inc
xchg
fistl
enter
xchg
inc
xchg
adc
outsw
xlat
or
addr16
dec
insl
push
lret
and
js
inc
adc
jmp
scas
lods
cmp
sbb
mov
add
push
loope
mov
ljmp
cli
out
in
xor
in
gs
xor
stos
lods
sahf
sub
xor
mov
or
lcall
nop
cmp
pop
nop
mov
ss
ret
push
mov
into
add
cs
std
push
inc
rol
xor
mov
add
sub
jno
dec
rolb
movq
maskmovq
idivl
insl
mov
xor
and
lods
addb
out
push
sbb
fistpl
and
repz
push
add
mov
inc
mov
adc
mov
ds
mov
out
or
cli
ss
stos
xor
sbb
fdivl
xchg
dec
stc
push
cmp
adc
sarl
mov
xor
outsl
lcall
push
push
lret
imull
shlb
cmpsb
jne
fidivrs
sub
in
and
sbb
dec
mov
out
in
lret
xchg
push
sbbl
daa
test
add
sti
cmpl
push
lds
inc
je
adc
fdivs
add
lret
add
rcll
lahf
pop
js
gs
cmp
outsb
and
addr16
decl
out
mov
arpl
aas
jns
sub
inc
mov
dec
test
scas
push
lock
dec
push
adc
icebp
lret
fdivp
jb
adc
mov
mov
mov
xchg
cltd
push
or
fimuls
mov
shl
xchg
test
loop
push
loopne
add
xchg
std
in
decl
mov
cmpsb
outsl
cmp
ret
fdivrs
inc
and
stos
and
jle
unpckhps
push
mov
push
outsb
jb
xor
xor
cmp
dec
xor
jbe
pop
fsts
dec
cmc
jle
mov
or
lea
add
cltd
sub
fdiv
popf
xor
adc
push
cmp
das
cltd
push
lock
shll
mov
pop
test
push
add
push
and
fpatan
sbb
sub
sarl
std
mov
pop
xchg
popa
xor
jmp
nop
in
ret
ljmp
fwait
xor
add
adc
test
fs
adc
rcrl
sub
jle
sbb
das
inc
and
in
imul
out
shrl
sub
mov
in
lret
dec
push
pop
push
jae
mov
pop
mov
cmc
jns
outsb
hlt
lret
addr16
xor
inc
dec
fiadds
scas
mov
xor
outsl
xchg
pop
mov
in
xor
push
jge
movsl
or
push
dec
jae
push
mov
mov
test
rcll
out
sbb
mov
fimuls
dec
cs
sub
sub
lods
dec
jo
test
add
fucomi
inc
fs
fstps
jmp
dec
mov
sbb
sbbb
hlt
mov
pusha
sbb
js
shrl
movl
in
insl
jle
repz
fidivrl
jle
stos
int
repz
cmp
jae
xchg
inc
shlb
inc
lods
leave
add
pop
pop
mov
or
in
scas
cmpsb
mov
ljmp
pop
shll
add
inc
fnstsw
cmp
push
or
mov
imul
inc
dec
xchg
scas
lea
jg
sub
imul
push
jno
sbb
dec
jl
imul
shr
cmp
or
or
sbbl
jg
or
mov
popf
jb
fiadds
sti
push
icebp
mov
iret
sbb
cltd
into
sbb
rol
sbb
loop
filds
sub
in
mov
dec
sub
jl
les
out
mov
pop
push
jg
insl
pop
test
and
fldcw
in
cmp
push
cld
inc
ja
sub
dec
pop
mov
rclb
push
pushf
aaa
jbe
mov
sub
insl
fdivr
ud2
fcoml
aam
imul
xor
insl
inc
daa
jns
jbe
lret
mov
jne
in
out
lret
adc
movsb
pushf
add
sbb
sub
inc
out
add
push
dec
dec
jg
adcb
mov
inc
insb
lret
les
inc
xor
sahf
add
xor
xor
mov
shrd
xor
jge
push
jne
dec
cmp
push
test
jmp
push
lret
jg
int
js
pop
shll
jle
icebp
xor
scas
shl
push
xlat
jb
into
lret
movsl
dec
xchg
test
clc
adc
nop
fs
lea
std
inc
mov
gs
and
loopne
cmpsb
loope
int
cmpsl
push
insb
mov
cld
inc
or
pop
sbb
sub
fwait
or
sub
xor
dec
and
imul
iret
leave
int3
or
imulb
shll
shlb
mov
adc
int3
mov
lahf
stc
jp
les
incb
popf
add
stos
sbb
jns
push
or
stos
mov
dec
push
lret
adc
xor
enter
cmc
jg
cmp
add
pushf
in
shl
inc
cs
jmp
push
mov
pop
fdivrl
cmpsb
push
ret
dec
push
hlt
sub
subl
rcll
dec
sbb
pop
sub
int3
mov
jnp
cmp
int
ret
sarl
xor
inc
hlt
div
push
nop
fs
cld
ficomps
std
push
or
or
adc
in
data16
aad
and
cs
dec
addr16
jp
jmp
xchg
imulb
mov
mov
mov
and
adc
nop
arpl
shl
mov
insb
out
iret
pop
mov
jg
sbb
aad
into
das
ds
jp
add
jmp
xorb
inc
xchg
test
push
js
aad
lret
cmpsb
inc
jbe
pop
and
pop
jo
test
iret
adc
sbb
xlat
mov
cmpsl
mov
pop
push
ret
sbb
sub
inc
mov
mov
gs
das
adc
xor
jo
jno
sub
test
and
cmp
enter
add
push
sub
je
pop
out
cmpsl
inc
aas
push
pusha
int
inc
xchg
cmp
sub
mov
or
xchg
jp
dec
insl
sarb
push
mov
rorl
scas
ret
fwait
xchg
cmp
in
sbb
sub
int3
lret
pop
sub
insb
cmp
cmp
mov
stos
insl
leave
popf
clc
lahf
dec
out
nop
ja
inc
test
lods
sbb
or
mov
mulb
ja
das
xor
push
adc
push
pop
lcall
fnstcw
sbb
cmp
fcmovne
pop
test
lea
adc
divb
mov
fcomps
jmp
dec
mov
fiaddl
lock
cwtl
sub
imul
rclb
mov
mov
cmpsb
add
push
outsl
inc
mov
push
adc
adc
into
xchg
jmp
push
roll
pop
push
jg
or
testl
imul
mov
fidivl
add
sub
cmp
xor
pop
lock
daa
mov
or
pop
orl
mov
scas
or
fldenv
cmpl
imul
cld
ja
imul
lods
xor
jl
pop
mov
rol
lods
mov
enter
les
imul
lods
xchg
pusha
mov
xchg
mov
aam
ss
jb
lods
test
aam
outsl
jbe
les
or
shlb
cltd
fwait
lret
jne
adc
sub
fcomps
mov
mov
loope
adc
mov
mov
inc
lahf
movsl
sbb
cmc
leave
push
dec
repnz
inc
dec
int3
insb
mov
jno
mov
sub
repz
mov
jge
xchg
inc
jbe
jne
xor
roll
ret
cli
adc
stos
xor
aas
mov
pop
stos
or
lret
pop
shl
dec
sub
jle
repz
std
mov
call
sub
out
dec
int3
push
add
and
movsb
lret
adc
sbb
cmp
movsl
adc
sub
ja
out
in
testb
sti
fwait
cmp
subl
push
mov
imul
imul
mov
ljmp
hlt
add
lea
sti
and
lret
xchg
adcb
sar
scas
sbb
gs
lods
sub
dec
sbb
aas
in
clc
dec
shlb
repnz
test
jge
cmp
int3
push
or
stos
rcl
pop
int3
push
mov
mov
ficomps
fmuls
push
mov
pusha
mov
lea
mov
xchg
mov
mov
out
out
movups
aad
adc
inc
lds
setb
push
xchg
loop
bound
daa
inc
push
sbb
and
jne
sub
das
add
movsb
clc
imul
mov
or
sub
jp
xchg
out
pop
cmp
popf
pusha
cwtl
push
or
add
fisttps
ljmp
addr16
mov
jbe
jne
repnz
fisttpll
jp
adc
test
mov
orl
dec
inc
push
stos
cld
push
push
das
and
dec
mov
aas
push
adc
push
mov
add
mov
inc
jo
mov
cli
jle
in
outsb
xor
jg
xchg
in
push
scas
insl
ficomps
testb
lret
js
stc
dec
xor
sbb
inc
and
scas
int3
popf
jg
lock
jg
test
lods
mov
dec
icebp
xchg
and
out
fucomip
inc
dec
sahf
fsubs
and
dec
jmp
mov
mov
ss
xchg
sti
xor
imul
sbbb
mov
xchg
insl
fstpl
outsb
inc
push
lcall
jns
test
ds
pushf
call
jg
rcr
xchg
pop
fisubs
mov
push
xchg
and
mov
into
jecxz
xorl
mov
lods
mov
repnz
test
inc
jp
pop
add
and
and
sbb
dec
stos
fs
mov
xor
sarl
xchg
mov
pop
jbe
jle
ljmp
push
jne
push
xor
ss
aas
lret
pop
jge
fnstenv
shlb
loop
fmull
das
jno
dec
mov
xor
mov
or
mov
sti
outsl
int3
cld
xchg
data16
mov
add
add
ret
sub
adc
jnp
fimuls
ja
inc
lret
xor
cmc
cmpsl
mov
push
xchg
lret
imulb
addr16
icebp
shrl
sub
js
sbb
add
pop
jmp
and
xchg
sbb
mov
mov
jg
fcmovu
push
imul
sub
nop
pop
and
into
sbb
mov
cli
stos
negl
fsubrp
inc
lcall
idivb
sub
sbb
filds
lcall
jp
dec
inc
cltd
push
fdivl
ss
adcl
faddl
mov
push
movsl
ret
or
fistpl
cmp
mov
jge
jmp
stos
dec
jg
or
sbb
bound
ljmp
sub
xorl
lret
dec
jne
imul
mov
mov
push
shll
scas
jns
xor
dec
add
call
or
adc
cmp
jmp
aam
xor
pop
loop
daa
icebp
les
lds
ret
jmp
xchg
enter
xor
outsb
hlt
orl
push
fsub
shlb
jle
sbb
repnz
popf
idivl
ret
mov
notb
faddl
mov
sbb
sahf
sub
cmp
pop
ds
stos
ljmp
and
addr16
sbb
pop
dec
addr16
jl
cmp
movsb
xor
fxch
popl
push
inc
xlat
xchg
icebp
jmp
lret
and
cmpsl
jnp
sub
lods
and
inc
lock
mov
rcrb
aam
sbb
mov
sub
adc
xchg
push
imul
cmp
ficoms
lahf
jnp
lahf
jne
mov
jmp
mov
cmp
mov
es
mov
fs
and
bt
loop
mov
dec
jo
pushf
dec
neg
rcl
dec
pop
rclb
add
pop
dec
mov
xor
loope
orl
pop
in
xor
out
sub
in
into
stc
stos
and
inc
add
adc
mov
mov
stos
xor
enter
ret
stc
pop
xor
mov
popf
imul
mov
mov
mov
div
xchg
outsl
mov
and
mov
inc
push
cmc
enter
ja
adc
jg
xchg
aas
sbb
mov
cmpl
jo
mov
sub
cltd
cmp
cs
fnstcw
mov
fldcw
clc
inc
xor
loopne
jae
out
jp
js
addb
xor
push
lds
inc
subb
mov
sub
pop
xor
mov
pop
jae
mov
es
cltd
push
stos
inc
push
andb
into
inc
xor
inc
pop
mov
sbb
out
mov
jle
pop
dec
ljmp
leave
inc
jle
stos
and
popf
cwtl
xor
or
gs
push
nop
fnstenv
into
or
fcmovnbe
fsubrl
sub
cmp
in
mov
clc
mov
ret
and
xchg
shl
arpl
dec
and
pop
dec
adc
loope
fs
fcmovne
push
lret
lret
pop
cmp
pop
sub
xchg
jno
xchg
sti
push
shl
cmc
sbb
mov
jno
gs
pop
mov
add
push
fdiv
pusha
sbb
adc
push
mov
cli
nop
mov
jae
hlt
test
out
lds
mov
add
push
jg
imul
xchg
incb
xchg
or
xchg
and
pop
sub
stos
dec
xor
and
mov
test
or
outsl
addl
in
jns
fildl
mov
pop
mov
push
pop
fcoml
pop
icebp
pusha
hlt
divl
ds
fs
test
aaa
inc
mov
daa
leave
add
les
jne
xchg
sub
add
test
sub
xor
ss
stos
adc
xor
push
mov
and
add
mov
jmp
lds
jg
sbb
movsl
sub
adc
push
mov
or
jns
je
and
pop
mov
xchg
imul
loope
cmp
lret
daa
loopne
lock
adc
add
scas
sahf
outsb
scas
sub
rcrl
pop
fcoms
stos
xchg
orb
mov
push
mov
cmp
imul
jp
add
ret
ss
movsb
dec
inc
daa
inc
mov
mov
lds
outsl
out
lea
push
icebp
adc
jno
mov
inc
fwait
mov
jae
pop
or
repz
add
stos
fistl
lret
lods
adc
lret
sbb
pop
popa
popf
cmp
movsb
jge
cwtl
fmul
shl
mov
pusha
rolb
out
pop
mov
fldenv
sbb
hlt
cltd
pop
mov
adc
insb
jg
mov
test
fwait
stos
negb
sub
add
and
movsl
mov
push
fiaddl
lea
mov
dec
lds
and
out
pop
rclb
pop
mov
outsl
cwtl
jns
das
or
sahf
aad
into
pop
sub
stos
sbb
rcl
jl
lods
dec
mov
out
push
lret
mov
mov
add
in
inc
repz
daa
inc
add
loope
notb
mov
pop
cmovb
xor
loop
in
enter
movq
fstps
dec
sarb
add
fwait
and
cmp
ljmp
es
int
fldenv
add
ret
xor
pop
cltd
and
imul
test
pop
leave
cmc
outsb
pushf
data16
mov
sbb
clc
xchg
std
in
jnp
jl
lods
fnstenv
xor
sbb
scas
jl
fidivl
adc
rolb
sbbl
shrb
jecxz
int
dec
and
les
popf
lods
sub
pusha
ds
pop
and
aaa
xchg
dec
pop
icebp
icebp
loop
fistl
pop
pop
inc
mov
mov
sub
add
fisubs
fldt
dec
and
test
aaa
jmp
mov
andb
mov
int3
js
bound
sub
out
and
leave
pop
pop
push
jo
scas
std
sbb
inc
call
lcall
adc
pusha
and
dec
cmp
mov
pop
pop
sbb
and
mov
cs
stc
sub
adc
cmpl
xor
movsl
fstps
bndstx
aas
shr
jbe
add
cld
and
jge
popf
je
scas
in
jecxz
jp,pt
mov
jp
orl
push
mov
gs
imul
and
xor
jae
sbb
jo
or
fiadds
aam
fstl
mov
lock
cmp
repnz
sbb
and
test
sbb
gs
fwait
pushf
xor
jl
or
aad
mov
sbb
std
jp
fbld
jnp
lea
mov
cmp
aas
jmp
pop
scas
mov
adc
int
rcrl
arpl
sub
stc
jl
sub
cmpsl
mov
jns
scas
jb
in
mov
pop
icebp
mov
std
in
popf
inc
das
daa
jae
mov
test
sub
out
shl
loop
sbb
mov
push
mov
daa
test
mov
fwait
add
push
xchg
and
push
movsb
sbb
fs
or
push
lock
stos
getsec
clc
jmp
cmpsb
data16
subb
pop
sbb
inc
push
and
cmp
mov
mov
hlt
mov
dec
addr16
inc
mov
js
or
fadds
adc
movsb
stc
imul
outsl
call
or
ja
out
pop
xor
fistl
adc
out
sub
push
xor
stos
xchg
xchg
xor
pop
lods
jo
xchg
xchg
pop
jge
addr16
push
adc
idivb
ljmp
es
cmc
stc
sbb
movsl
ja
into
lahf
faddp
dec
sub
dec
jns
jb
dec
sub
jmp
add
push
test
xchg
mov
inc
adc
dec
stc
loopne
mov
mov
push
mov
mov
loop
lock
cmp
addr16
pop
or
xchg
scas
lcall
subb
nop
and
push
mov
jp
xchg
pusha
dec
mov
out
mov
aas
loopne
fisubrl
xor
bound
push
and
pop
mov
or
jne
mov
pop
stos
dec
push
inc
mov
pop
adc
xor
ficoml
cmp
lods
xor
mov
jbe
popf
addb
inc
mov
shll
sti
inc
jne
sbb
sub
push
into
lcall
or
mov
enter
inc
call
aad
scas
add
or
cmp
mov
sub
loop
push
add
mov
pop
outsl
inc
lret
test
movb
xchg
xor
xchg
cld
inc
hlt
sub
sub
or
pop
pop
sbb
in
subl
xchg
xchg
jae
adc
jns
inc
xlat
insl
add
ret
mov
mov
ret
mov
adc
and
shrl
push
mov
pop
mov
dec
push
outsb
mov
cmovl
xchg
dec
in
enter
push
pop
lods
test
sbb
dec
inc
cmpsl
add
mov
jbe
jmp
repz
xor
loope
in
xor
nop
std
cmp
movsb
push
fiadds
push
sbb
les
and
pop
inc
push
dec
xor
pusha
xlat
pop
shll
lods
mov
add
std
testb
dec
mov
push
push
dec
int
fcomp
subl
pop
cli
mov
mov
xchg
test
xchg
je
and
mov
mov
repz
push
popl
es
mov
in
frstor
xor
mov
ret
lods
mov
leave
scas
jo
aas
mov
iret
xchg
pop
pop
testb
inc
out
adc
xchg
jnp
loope
inc
mov
bound
iret
pop
pop
aam
lahf
fisttps
shll
sub
rep
xchg
push
int3
lods
add
mov
stc
cmpsb
dec
clc
xchg
jg
mov
prefetch
or
aaa
adc
dec
mov
cmpsl
push
cmp
sarb
mov
add
and
pop
push
jge
call
les
ljmp
adc
sti
sub
sub
out
pop
push
fisttps
cmpsl
or
hlt
cmp
fbld
cmpsl
mov
sub
addr16
arpl
lods
push
xchg
adc
movsl
pop
mov
xchg
push
sub
xchg
push
popf
bound
pop
sub
clc
fmul
push
rorb
popw
jae
sbb
shll
in
or
pop
dec
mov
mov
div
repnz
push
push
xchg
pushf
leave
inc
ror
fcoms
imul
sub
out
ret
inc
notb
jp
lea
pop
jg
fldt
hlt
mov
mov
out
dec
mov
jne
mov
les
xor
dec
jmp
pop
pop
loope
hlt
mov
pop
sbb
pusha
fistps
mov
loope
lcall
icebp
test
nop
outsb
div
or
and
pushf
adc
fdivs
pop
fidivs
cmc
mov
clc
movsb
or
pop
xor
inc
stos
inc
mov
cwtl
jmp
cwtl
inc
dec
push
and
fdivrs
ret
out
aam
add
mov
repnz
aad
call
aaa
and
dec
rcrl
pop
call
cmp
rclb
insb
inc
ret
lret
jno
and
sbb
inc
lods
jge
cmp
scas
add
push
frstor
xchg
arpl
in
and
mov
dec
adc
or
lds
shlb
inc
jg
loopne
loope
xchg
cmp
in
xorb
lea
in
fsubr
dec
sub
xchg
stc
imul
cmp
xchg
pop
jnp
repz
adc
xchg
fisttpll
inc
push
sbb
lods
sti
cs
or
mov
sub
stos
push
xchg
dec
push
push
movsl
fcmovbe
nop
sti
incb
xor
popf
lahf
sub
inc
xchg
or
inc
cmp
mov
fsubrl
ror
insb
insb
mov
jb
inc
sub
inc
loopne
xor
adc
mov
push
jne
dec
lahf
in
mov
inc
ret
rorb
and
mov
jg
fldt
jnp
push
mov
orl
push
ss
imull
dec
adc
mov
cmp
jns
ds
imul
hlt
lods
inc
jnp
cmp
cmpsl
xlat
rolb
std
xchg
ficoml
push
sbb
mov
ret
pop
adc
jb
sbb
push
cs
addb
add
push
jb
aas
push
sti
and
in
std
adc
std
jecxz
aas
insl
lret
cmp
addr16
leave
mov
fidivl
add
cwtl
fcomps
sahf
mov
xchg
jmp
push
jae
xchg
not
xchg
fsubl
and
adcb
in
mov
add
fucomi
out
es
ds
icebp
in
addr16
out
lret
xor
mov
and
sbbl
jbe
dec
fwait
mov
xchg
sahf
cmc
int3
cltd
dec
lahf
daa
mov
movsl
loopne
int
sub
or
and
stos
inc
shl
and
shlb
test
fldcw
jae
addr16
or
orb
fs
add
test
and
addr16
sbb
cmp
sub
xchg
ret
sbb
repnz
pushf
lahf
cltd
test
mov
imul
in
pop
sbb
aaa
inc
xorl
ja
cltd
xor
sti
jno
fistpl
addl
pusha
imul
mov
adc
or
gs
jmp
or
push
data16
pop
xor
stos
jecxz
lahf
leave
xchg
in
jmp
sub
je
cmpsl
pop
das
mov
pop
ja
addl
pop
mov
fildll
cwtl
push
dec
ror
roll
adc
adc
cmp
ss
fisttpl
outsl
jo
pop
sub
fstl
icebp
add
jmp
stos
out
ja
mov
shll
pop
cmp
adc
sbb
bnd
stos
push
gs
mov
cld
jns
hlt
cltd
fstl
push
cmp
ds
out
mov
dec
cmp
mov
adc
pushf
mov
stos
aam
and
ljmp
repnz
stc
cmovle
popa
add
xchg
cmp
aaa
fimull
and
xor
loop
rcll
mov
push
fadds
or
fisubl
or
inc
mov
mov
into
jns
and
add
aaa
mov
push
jl
push
test
in
test
inc
sahf
inc
roll
adc
sbb
or
daa
call
ja
add
cmp
pushf
cmp
push
inc
lret
fidivrs
and
xchg
and
fs
stc
std
and
out
jne
sub
mov
sub
push
pushf
scas
lahf
je
shr
fiaddl
mov
mov
sbb
sub
mov
je
ss
push
inc
stos
in
sbb
cmp
lods
inc
andb
adc
cmp
mov
iret
dec
movsb
je
ss
mov
adc
inc
loope
cmpsl
das
cmp
cmpsb
sub
inc
pop
int3
clc
jne
rcr
lods
mov
cmp
xchg
inc
inc
rorb
xor
leave
mov
outsl
adc
mov
mov
outsb
adc
inc
shrl
test
movsb
imul
mov
mov
jge
mov
xor
mov
iret
test
out
cmp
shlb
and
sbb
ljmp
pop
cmp
or
xor
jnp
shrl
pop
fsubl
mov
xor
ja
cmp
pop
cwtl
push
ret
xchg
aaa
jp
dec
adc
aam
sti
out
pop
dec
scas
call
jg
shrl
adc
ja
shlb
mov
outsb
call
hlt
ja
daa
jmp
mov
gs
mov
push
mov
push
cltd
or
or
adc
push
mov
aas
pop
mov
ja
inc
or
repnz
sub
sbb
dec
jp
lods
bnd
jne
shr
push
aas
test
fs
mov
pop
scas
mov
mov
mov
lods
scas
lock
daa
xchg
gs
and
sbb
lods
pop
mov
push
add
fstl
test
push
loopne
fs
mov
int
cmc
lea
mov
lods
popl
push
les
rorb
mov
pop
add
ficompl
ret
jmp
mov
sub
es
add
add
mov
shrb
mov
mov
data16
in
test
scas
pop
jbe
call
and
adc
ds
or
adc
dec
jp
scas
inc
sbb
jle
push
xchg
in
mov
add
sub
cwtl
sahf
mov
jp
dec
mov
test
push
out
mov
cmp
inc
and
push
cld
mov
adc
mov
mov
and
mov
fmuls
and
push
mov
sbb
sbb
lret
jne
lods
lods
xor
push
sbb
dec
xlat
outsl
lds
ret
mov
fldt
js
lea
insl
outsb
mov
scas
stc
xchg
ret
push
fs
movsl
test
loopne
dec
cmc
popf
xchg
fs
sub
xchg
adc
mov
clc
xor
jae
xor
loop
es
sub
aam
adc
mov
data16
push
fsubrl
push
sbb
imul
xor
pop
and
push
mov
push
test
repnz
adc
fld
pop
jmp
gs
inc
fistpll
push
and
rcrb
rcll
mov
lods
sbb
fistpl
leave
repnz
push
std
dec
mov
mov
out
subb
adc
cmpsl
mov
push
add
mov
das
sbb
mov
shll
outsl
xchg
outsb
mov
xor
ja
loopne
je
dec
fnstenv
imul
dec
inc
stc
adc
sub
xor
scas
dec
pop
into
out
push
cmpsl
call
fisubrs
and
mov
pop
or
outsb
dec
fstpl
lds
shrb
rorl
mov
xor
scas
icebp
in
dec
int
ficompl
mov
xor
aad
jno
push
outsl
repnz
cmp
movsb
adc
pop
ljmp
shrl
mov
xor
daa
in
fcomps
and
call
ja
pop
les
shr
mov
xchg
scas
add
xchg
lea
xchg
data16
add
inc
inc
mov
dec
dec
cmpsl
add
xchg
lahf
mov
sub
iret
xchg
cmp
push
fildl
mov
and
je
pop
cmp
pop
call
daa
jne
movsb
clc
stc
add
lret
jl
and
fimull
mov
dec
xor
in
fnstsw
push
enter
imul
shlb
in
jbe
subb
dec
mov
repnz
stos
int
movsl
pop
adc
movsb
mov
mov
or
add
add
aad
rcrl
mov
sti
jae
sub
test
lahf
dec
dec
or
fwait
movsb
addr16
xchg
cltd
sub
scas
jg
pop
jmp
or
inc
scas
jecxz
aad
dec
or
addr16
stos
data16
subl
and
sarl
xchg
push
push
loopne
pop
out
les
pushl
shll
jnp
cmp
pop
jne
pop
push
xchg
aas
jecxz
in
and
and
push
push
and
popf
enter
mov
icebp
jmp
fstpl
cmc
sbb
lret
enter
imul
scas
movsl
shlb
or
pop
or
pop
adcl
cs
loope
dec
cmp
jge
inc
jae
xor
cmpsl
mov
jg
or
adc
loope
mov
sbb
inc
pop
jg
fisubl
dec
enter
fcmove
sbb
xor
cmp
inc
sbb
mov
nop
and
hlt
push
lea
outsl
lea
mov
popa
jo
dec
push
std
sub
sbb
jo
xchg
pop
dec
mov
int
jnp
scas
std
inc
mov
push
outsl
adc
and
and
hlt
imul
enter
ret
movsl
add
ljmp
sub
icebp
aam
cwtl
es
jg
pop
scas
xchg
sahf
xchg
stos
in
inc
sub
xlat
aas
clc
lret
daa
xor
pop
mov
adc
pop
daa
add
dec
pop
dec
out
pop
ss
cmpsl
xor
jmp
test
pop
test
fidivrl
int3
and
test
out
cmp
mov
xor
cs
sbb
inc
inc
push
pop
push
inc
movsl
cmp
in
and
stc
push
push
mov
clc
inc
into
inc
sub
sbb
xchg
pop
pop
lret
loop
push
gs
popa
cmp
sub
xchg
jl
push
or
sub
sbb
fisttpll
aas
popa
pop
xlat
push
fwait
rcrl
push
xor
and
rorb
lea
mov
sbb
fcomps
filds
cmp
mov
clc
mov
mov
adc
ss
jp
arpl
mov
aaa
xchg
xchg
mov
adc
xor
fwait
mov
mov
pusha
or
into
clc
aad
xor
ret
loope
push
add
mov
idiv
sub
fiaddl
and
cs
xchg
sub
sbb
test
into
loopne
xchg
dec
inc
lret
lret
das
mov
add
mov
aaa
loop
dec
jmp
outsl
hlt
and
pop
pop
mov
iret
test
ss
in
dec
jp
xor
jle
sti
cmp
aad
mov
mull
les
mov
test
and
push
push
aas
ret
sbb
dec
aaa
jmp
pop
mov
sbb
jg
cmpsl
pop
sahf
rcrl
jl
lds
sub
dec
mov
cmp
push
mov
inc
push
mov
push
push
test
jle
jns
fcom
or
loope
jb
pusha
test
dec
adc
in
push
cmpsl
or
out
and
cmc
orl
adc
aam
inc
mov
lock
pushf
adc
imul
xchg
fs
leave
push
imul
repz
adc
inc
movsb
cmp
adcb
push
cmp
jno
xor
or
enter
insb
or
sbb
call
and
cmpsl
scas
add
pop
mov
xor
mov
jno
js
out
int3
push
xchg
mov
fstpt
out
mov
lahf
dec
mov
aad
popf
xchg
test
aam
jns
mov
push
or
mov
rorl
sbb
movsl
jbe
in
jl
fsub
popa
xor
pop
sbb
cmpsl
lahf
fs
test
jno
roll
pop
js
mov
fs
push
ljmp
xlat
mov
inc
mov
loope
mov
enter
call
and
inc
sbb
sbb
loope
mov
test
cmpsl
sti
std
xchg
mov
ret
scas
jnp
and
or
aaa
or
jne
rcll
aad
stc
cmp
and
push
les
sti
add
mov
or
xor
into
clc
sbb
je
out
scas
inc
or
imul
in
dec
popf
repz
add
in
ss
cli
or
int3
adc
dec
jmp
mov
push
cltd
mov
movsl
je
fstpl
lods
cs
and
dec
gs
pop
xorb
inc
stos
das
mov
xor
enter
mov
ja
lds
mov
ljmp
lret
xchg
and
push
cmc
add
mov
jno
xchg
mov
jae
add
mov
jo
popl
jge
and
mov
pop
outsl
loop
lds
dec
push
dec
and
mov
les
mov
movsb
aaa
pop
aas
shlb
cltd
repz
mov
push
jmp
cwtl
sarl
fmull
cmpsl
mov
mov
and
mov
and
lds
mov
push
push
inc
scas
push
jle
and
movsb
in
shl
xchg
flds
movsb
mov
negb
sbb
add
mov
ficoms
mov
mov
xor
and
into
mov
jl
lcall
sub
sub
pop
mov
jl
dec
mov
imul
sub
in
sarl
int3
add
mov
jmp
xor
icebp
bound
je
jmp
push
jb
cmpsb
stos
pop
std
mov
xor
stos
es
into
mov
push
cmp
aaa
adc
pop
imul
out
mov
xchg
mov
mov
or
xchg
sbb
ds
cmc
lcall
xchg
jge
mov
imul
andb
stos
adc
rorb
ss
mov
ror
dec
cwtl
lret
mov
dec
lahf
jl
sub
ret
xchg
popa
daa
scas
push
int
jnp
inc
rcrb
xchg
sbb
loopne
xlat
jp
jge
enter
pop
imul
mov
fisttps
or
and
push
rcl
lock
and
popa
movb
ja
fadd
and
lcall
xor
adc
roll
pop
movsb
cmp
test
fs
push
xchg
ja
movl
test
test
lahf
cmp
dec
pop
data16
xor
mov
pop
mov
out
push
inc
fwait
in
cmc
call
or
xchg
imull
aam
or
leave
or
fwait
mov
adcb
dec
cmpsl
div
mov
mov
inc
out
aas
in
sbb
sub
cmpb
out
or
in
adc
scas
jo
or
or
fcompp
mov
mov
aaa
sbb
popf
sub
jmp
pop
xor
adcb
push
fadd
sbb
mov
mov
repnz
das
pop
clc
lods
test
jno
ret
sbb
addr16
fcomi
push
pop
loop
sbb
pushf
prefetch
or
jno
adc
subb
push
aaa
dec
pop
sahf
and
or
mov
in
fcompl
aaa
rcrl
daa
mov
add
add
movsb
or
sbb
dec
pop
out
mov
xor
addl
andb
inc
out
jb
jg
adc
mov
and
pop
cmpsl
bt
inc
cmpsb
hlt
push
ljmp
cwtl
xchg
dec
cltd
push
or
neg
mov
sbb
repz
test
mov
imul
subb
addr16
sarb
add
cmp
roll
mov
jle
cmp
movsb
lock
test
push
inc
adc
subl
sti
and
mov
push
pop
faddl
inc
ds
sub
in
daa
xchg
daa
nop
mov
xor
jecxz
cmp
movb
mov
mov
fisubrs
jge
lret
popf
mov
cwtl
dec
popf
sbb
arpl
xchg
je
inc
mov
fcoms
push
mov
add
pop
pop
push
dec
andl
cmp
or
movsl
clc
ja
cmp
pop
jns
dec
ret
clc
jns
fsub
jne
loop
into
outsl
stos
into
push
mov
push
sbb
mov
pop
pop
xchg
negl
scas
lcall
leave
leave
cld
pushf
push
push
sbb
adc
insb
jge
int3
pop
ret
jns
mov
pop
repz
leave
jle
imul
inc
jne
sub
jecxz
stos
mov
loop
addr16
jns
dec
flds
cld
test
pop
and
gs
and
sub
pop
mov
sbb
pop
int3
aas
loopne
dec
add
stc
pop
add
movsb
shlb
jbe
mov
ss
xchg
xchg
mov
cmpsl
mov
jo
sbbb
fidivrl
and
pusha
add
hlt
outsl
sbbl
pminsw
enter
xchg
pop
dec
mov
add
call
mov
sbb
ror
fstl
loop
popf
xor
mov
jp
sub
aad
xchg
scas
jg
cwtl
mov
jnp
add
stos
dec
xor
in
xor
push
jo
fimull
cmp
mov
push
mov
pop
pop
sbb
inc
push
pop
xchg
mov
aas
push
cmp
xor
mov
iret
stc
add
leave
fidivl
add
adc
jp
popa
popw
mov
cmp
mov
mov
sub
les
sbb
or
push
mov
mov
pusha
add
push
imul
jge
sarl
enter
pop
adc
xor
lds
lcall
fnstcw
xchg
iret
imul
fstps
lret
push
sbb
jns
enter
and
dec
stos
xchg
mov
add
xorb
xchg
aam
mov
or
int
cli
rorb
setge
mov
dec
js
mov
xor
jecxz
add
pusha
cmp
sbb
and
and
scas
and
xor
inc
add
imul
out
movsl
cmp
in
fcom
inc
adc
pop
pop
push
jns
lret
xchg
sbbl
mov
cmp
adc
rcll
sbb
push
call
mov
popf
mov
and
enter
push
mov
loop
negb
mov
jo
xor
jecxz
js
dec
sbb
ja
out
gs
push
rclb
xchg
jne
jns
loop
cli
fsubs
push
out
xchg
inc
std
lock
lea
fistpll
mov
pop
outsl
xchg
scas
xchg
sbb
sbb
jb
jge
add
repz
push
cmpsl
fsts
add
sbb
push
dec
cmp
cmp
test
scas
jge
gs
lea
add
cmp
ds
orl
jp
jnp
dec
fisubrl
inc
adc
test
repnz
dec
sub
inc
mov
push
pop
fnstsw
testb
addr16
xlat
hlt
adc
in
and
xchg
pop
daa
mov
cmp
cmp
loope
jbe
rcll
or
or
xlat
aam
jecxz
arpl
cwtl
mov
and
and
and
data16
fisubrl
sahf
cmpsl
or
cmp
repnz
inc
scas
mov
xor
xor
dec
sti
shll
sbb
aas
das
stc
andb
sbb
lahf
mov
fwait
aas
in
sub
scas
xchg
xchg
mov
ss
adc
scas
js
cmp
and
test
jno
dec
and
cltd
lock
or
push
or
cld
popa
pop
lea
cmp
lcall
dec
pop
lods
addb
lods
cmp
mov
and
out
cmp
mov
aad
mov
inc
int
leave
std
jge
scas
arpl
rol
mov
stos
mov
sub
mov
mov
fcmovnb
stos
pop
mov
std
sub
aaa
push
pop
cmp
add
loope
pop
jne
jns
cwtl
adc
neg
fldcw
jecxz
daa
xor
daa
mov
push
shl
daa
repnz
cmp
lds
fildl
inc
test
mov
sub
mov
xor
ss
scas
clc
ret
roll
jmp
lods
roll
ds
or
cs
ss
mov
fcmovb
mov
pop
jle
push
cwtl
or
xor
popa
js
dec
push
rcrl
sar
cltd
test
lret
dec
shll
jg
sbb
adc
insl
mov
and
sub
jae
mov
push
inc
mov
jnp
sub
leave
imul
arpl
ss
int
es
and
xor
ret
jl
xchg
add
and
mov
mov
cmpsl
inc
sub
jmp
pop
notb
sti
inc
sub
ds
dec
mov
mov
and
adc
mov
outsl
jbe
dec
mov
adc
movsb
std
dec
push
sub
sahf
sub
out
jae
outsb
add
inc
imul
cmp
ljmp
pusha
or
cmp
sbb
lock
jg
shrl
jne
dec
mov
or
mov
stc
sub
scas
push
add
push
jmp
nop
loopne
out
mov
and
cmp
lret
andl
and
mov
imul
sub
xlat
ds
sub
cltd
insb
scas
std
push
incb
bound
outsb
in
or
cmp
push
les
push
sahf
add
test
popf
adcl
int
pop
mov
add
lret
int3
bndldx
popa
leave
jg
adc
aaa
inc
sbb
sbb
add
into
icebp
lcall
fcmove
jg
mov
rol
sti
pop
inc
push
scas
mov
adc
cld
mov
testb
dec
jl
pop
add
stc
nop
mov
ds
loop
stos
and
lods
mov
sbb
xchg
mov
sbb
push
aaa
filds
mov
popf
cmp
cmp
dec
fisubrl
insb
mov
mov
imul
rorb
lods
or
ljmp
std
pop
inc
outsl
mov
inc
loopne
adc
mov
adc
int
mov
mov
xor
xchg
pop
test
movsb
lds
cs
dec
ds
sbb
lock
dec
jo
push
call
in
add
sti
cltd
jge
push
out
jae
jl
push
push
mov
enter
sbb
or
xchg
xor
ljmp
ret
nop
cwtl
sub
lret
jecxz
imul
cmpsb
in
icebp
pusha
mov
int3
notl
adc
sub
jmp
inc
mov
sbb
xchg
push
aaa
ret
push
inc
test
pop
mov
out
xchg
int
xchg
popf
subb
sub
mov
fs
sbb
ret
scas
out
pop
lea
addb
pop
pop
pop
jno
in
roll
mov
sti
mov
rcr
sub
adc
insb
outsl
mov
pop
push
push
roll
jmp
pop
call
mov
push
sub
jg
jp
sahf
inc
pop
stc
addr16
leave
mov
int
xchg
sub
test
cmp
aas
adc
lret
call
popf
shl
subl
add
movsb
rolb
cmp
repz
mov
and
aaa
fimuls
push
xchg
mov
jge
jl
jmp
mov
dec
int3
fimuls
jb
out
and
lods
or
into
pop
testl
push
pop
insb
jge
push
or
jg
xor
int3
xor
imul
gs
add
mov
ljmp
dec
cmc
pop
or
cld
sub
cmpsb
sub
jge
ret
flds
sbb
mulb
sub
pushl
aaa
add
out
jbe
sbb
mov
pusha
push
adc
in
js
inc
mov
inc
pop
adc
in
dec
fucomi
xchg
dec
call
mov
dec
pop
ja
jns
mov
mov
fwait
inc
cmp
xchg
cmpsl
test
sub
outsl
and
xchg
mov
loop
fstpt
inc
jno
inc
pop
pop
clc
mov
pop
jne
int3
sbb
push
mov
ror
pop
in
inc
aaa
push
in
mov
mov
jp
and
add
fildl
sbb
imul
add
xor
inc
jae
pop
inc
jnp
xchg
jbe
aam
out
lahf
insl
and
mov
mov
jl
jl
lds
mov
sbb
ficoml
mov
mov
add
fs
test
nop
sbb
pop
out
out
push
and
pop
cli
xlat
popf
sti
xchg
jg
or
jbe
test
sub
aad
inc
lock
test
or
dec
jb
icebp
insb
jg
adc
xor
repnz
dec
or
stos
testb
imul
inc
adc
cmpsl
pusha
and
pop
and
ss
xor
pop
add
inc
inc
dec
in
test
push
out
mov
std
ljmp
jge
aaa
outsl
or
out
gs
arpl
xchg
xlat
adc
andl
sub
dec
pop
xchg
std
nop
jnp
insl
sub
sbb
jns
pop
cli
pop
cli
mov
ds
xchg
inc
cmp
das
xor
pushl
movsl
cmp
inc
gs
mov
and
mov
xor
cmp
xchg
mov
adc
push
and
and
das
call
in
test
lds
ror
or
movsb
in
dec
mov
shlb
mov
and
scas
cs
xor
mov
icebp
sbb
or
pushf
jo
scas
dec
adcb
or
adc
and
dec
and
aad
xchg
popa
push
mov
adc
shll
insl
pop
gs
mov
insb
mov
sub
pop
fdivrs
mov
push
insb
mov
fstpt
inc
jo
or
mov
inc
inc
xchg
clc
roll
insl
xor
pop
sbb
outsb
mov
clc
adc
aad
mov
mov
adc
cmc
nop
test
adc
ss
mov
outsl
lret
or
cmp
fmul
jno
push
ret
call
or
mov
in
clc
pushf
fcmovu
std
add
xchg
xorps
std
test
ja
cltd
or
cmp
jg
jne
jl
lds
or
lret
and
adc
mov
mov
xchg
outsb
cmpsl
xchg
mov
pop
mov
push
std
inc
insb
xchg
insb
pop
jnp
loopne
insl
sarl
loopne
stos
lcall
mov
fldcw
sub
dec
mov
or
sti
mov
mov
push
or
dec
jo
ljmp
sbb
dec
loop
push
lock
leave
mov
inc
xor
cs
adc
mov
and
orb
push
sub
jg
cmp
xor
fsts
sbb
adc
adc
pop
repz
clc
add
mov
std
lds
mov
mov
stc
fcoms
mov
sub
jmp
dec
mov
mov
cmp
dec
push
mov
sub
dec
add
movsb
push
ljmp
or
push
mov
call
mov
push
mov
cmp
lret
sub
int
jp
jno
add
aad
std
add
xchg
icebp
dec
xchg
push
lret
fisubrl
jnp
xchg
dec
pop
outsl
mov
adc
add
pop
clc
test
in
mov
fists
repnz
jle
cmpsl
sti
mov
cli
clc
popa
jnp
aas
push
xorb
jl
jmp
loope
push
sbb
sbb
jmp
stos
int
ds
repz
shll
scas
inc
dec
aas
push
sti
mov
cltd
pop
rorb
div
idiv
jbe
